
f335f3e538ea41951c6342caac79bfe93bc8f69eef55aad71c5d61561e62daf3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	in     al,0xd3
  401002:	inc    ebp
  401003:	add    al,ch
  401005:	rol    DWORD PTR [ebp+0x0],cl
  401008:	in     al,dx
  401009:	rol    DWORD PTR [ebp+0x0],cl
  40100c:	lock rol DWORD PTR [ebp+0x0],cl
  401010:	hlt    
  401011:	rol    DWORD PTR [ebp+0x0],cl
  401014:	clc    
  401015:	rol    DWORD PTR [ebp+0x0],cl
  401018:	cld    
  401019:	rol    DWORD PTR [ebp+0x0],cl
  40101c:	add    ah,dl
  40101e:	inc    ebp
  40101f:	add    BYTE PTR [esp+edx*8],al
  401022:	inc    ebp
  401023:	add    BYTE PTR [eax],cl
  401025:	aam    0x45
  401027:	add    BYTE PTR [esp+edx*8],cl
  40102a:	inc    ebp
  40102b:	add    BYTE PTR [eax],dl
  40102d:	aam    0x45
  40102f:	add    BYTE PTR [esp+edx*8],dl
  401032:	inc    ebp
  401033:	add    BYTE PTR [eax],bl
  401035:	aam    0x45
  401037:	add    BYTE PTR [esp+edx*8],bl
  40103a:	inc    ebp
  40103b:	add    BYTE PTR [eax],ah
  40103d:	aam    0x45
  40103f:	add    BYTE PTR [esp+edx*8],ah
  401042:	inc    ebp
  401043:	add    BYTE PTR [eax],ch
  401045:	aam    0x45
  401047:	add    BYTE PTR [esp+edx*8],ch
  40104a:	inc    ebp
  40104b:	add    BYTE PTR [eax],dh
  40104d:	aam    0x45
  40104f:	add    BYTE PTR [esp+edx*8],dh
  401052:	inc    ebp
  401053:	add    BYTE PTR [eax],bh
  401055:	aam    0x45
  401057:	add    BYTE PTR [esp+edx*8],bh
  40105a:	inc    ebp
  40105b:	add    BYTE PTR [eax-0x2c],al
  40105e:	inc    ebp
  40105f:	add    BYTE PTR [esp+edx*8+0x45],al
  401063:	add    BYTE PTR [eax-0x2c],cl
  401066:	inc    ebp
  401067:	add    BYTE PTR [esp+edx*8+0x45],cl
  40106b:	add    BYTE PTR [eax-0x2c],dl
  40106e:	inc    ebp
  40106f:	add    BYTE PTR [esp+edx*8+0x45],dl
  401073:	add    BYTE PTR [eax-0x2c],bl
  401076:	inc    ebp
  401077:	add    BYTE PTR [esp+edx*8+0x45],bl
  40107b:	add    BYTE PTR [eax-0x2c],ah
  40107e:	inc    ebp
  40107f:	add    BYTE PTR [esp+edx*8+0x45],ah
  401083:	add    BYTE PTR [eax-0x2c],ch
  401086:	inc    ebp
  401087:	add    BYTE PTR [esp+edx*8+0x45],ch
  40108b:	add    BYTE PTR [eax-0x2c],dh
  40108e:	inc    ebp
  40108f:	add    BYTE PTR [esp+edx*8+0x45],dh
  401093:	add    BYTE PTR [eax-0x2c],bh
  401096:	inc    ebp
  401097:	add    BYTE PTR [esp+edx*8+0x45],bh
  40109b:	add    BYTE PTR [eax-0x7bffba2c],al
  4010a1:	aam    0x45
  4010a3:	add    BYTE PTR [eax-0x73ffba2c],cl
  4010a9:	aam    0x45
  4010ab:	add    BYTE PTR [eax-0x6bffba2c],dl
  4010b1:	aam    0x45
  4010b3:	add    BYTE PTR [eax-0x63ffba2c],bl
  4010b9:	aam    0x45
  4010bb:	add    BYTE PTR [eax-0x5bffba2c],ah
  4010c1:	aam    0x45
  4010c3:	add    BYTE PTR [eax-0x53ffba2c],ch
  4010c9:	aam    0x45
  4010cb:	add    BYTE PTR [eax-0x4bffba2c],dh
  4010d1:	aam    0x45
  4010d3:	add    BYTE PTR [eax-0x43ffba2c],bh
  4010d9:	aam    0x45
  4010db:	add    al,al
  4010dd:	aam    0x45
  4010df:	add    ah,al
  4010e1:	aam    0x45
  4010e3:	add    al,cl
  4010e5:	aam    0x45
  4010e7:	add    ah,cl
  4010e9:	aam    0x45
  4010eb:	add    al,dl
  4010ed:	aam    0x45
  4010ef:	add    ah,dl
  4010f1:	aam    0x45
  4010f3:	add    al,bl
  4010f5:	aam    0x45
  4010f7:	add    ah,bl
  4010f9:	aam    0x45
  4010fb:	add    al,ah
  4010fd:	aam    0x45
  4010ff:	add    ah,ah
  401101:	aam    0x45
  401103:	add    al,ch
  401105:	aam    0x45
  401107:	add    ah,ch
  401109:	aam    0x45
  40110b:	add    al,dh
  40110d:	aam    0x45
  40110f:	add    ah,dh
  401111:	aam    0x45
  401113:	add    al,bh
  401115:	aam    0x45
  401117:	add    ah,bh
  401119:	aam    0x45
  40111b:	add    BYTE PTR [eax],al
  40111d:	aad    0x45
  40111f:	add    BYTE PTR [edx*8-0x2af7ffbb],al
  401126:	inc    ebp
  401127:	add    BYTE PTR [edx*8-0x2aefffbb],cl
  40112e:	inc    ebp
  40112f:	add    BYTE PTR [edx*8-0x2ae7ffbb],dl
  401136:	inc    ebp
  401137:	add    BYTE PTR [edx*8-0x2adfffbb],bl
  40113e:	inc    ebp
  40113f:	add    BYTE PTR [edx*8-0x2ad7ffbb],ah
  401146:	inc    ebp
  401147:	add    BYTE PTR [edx*8-0x2acfffbb],ch
  40114e:	inc    ebp
  40114f:	add    BYTE PTR [edi+edx*8],al
  401152:	inc    ebp
  401153:	add    BYTE PTR [eax],cl
  401155:	xlat   BYTE PTR ds:[ebx]
  401156:	inc    ebp
  401157:	add    BYTE PTR [edi+edx*8],cl
  40115a:	inc    ebp
  40115b:	add    BYTE PTR [eax],dl
  40115d:	xlat   BYTE PTR ds:[ebx]
  40115e:	inc    ebp
  40115f:	add    ah,ch
  401161:	(bad)  
  401162:	inc    ebp
  401163:	add    al,dh
  401165:	(bad)  
  401166:	inc    ebp
  401167:	add    ah,dh
  401169:	(bad)  
  40116a:	inc    ebp
  40116b:	add    al,bh
  40116d:	(bad)  
  40116e:	inc    ebp
  40116f:	add    ah,bh
  401171:	(bad)  
  401172:	inc    ebp
  401173:	add    BYTE PTR [eax-0x2a],ch
  401176:	inc    ebp
  401177:	add    BYTE PTR [esi+edx*8+0x45],ch
  40117b:	add    BYTE PTR [eax-0x2a],dh
  40117e:	inc    ebp
  40117f:	add    BYTE PTR [esi+edx*8+0x45],dh
  401183:	add    BYTE PTR [eax-0x2a],bh
  401186:	inc    ebp
  401187:	add    BYTE PTR [esi+edx*8+0x45],bh
  40118b:	add    BYTE PTR [eax-0x7bffba2a],al
  401191:	(bad)  
  401192:	inc    ebp
  401193:	add    BYTE PTR [eax-0x73ffba2a],cl
  401199:	(bad)  
  40119a:	inc    ebp
  40119b:	add    BYTE PTR [eax-0x6bffba2a],dl
  4011a1:	(bad)  
  4011a2:	inc    ebp
  4011a3:	add    BYTE PTR [eax-0x63ffba2a],bl
  4011a9:	(bad)  
  4011aa:	inc    ebp
  4011ab:	add    BYTE PTR [eax-0x5bffba2a],ah
  4011b1:	(bad)  
  4011b2:	inc    ebp
  4011b3:	add    BYTE PTR [eax-0x53ffba2a],ch
  4011b9:	(bad)  
  4011ba:	inc    ebp
  4011bb:	add    BYTE PTR [eax-0x4bffba2a],dh
  4011c1:	(bad)  
  4011c2:	inc    ebp
  4011c3:	add    BYTE PTR [eax-0x43ffba2a],bh
  4011c9:	(bad)  
  4011ca:	inc    ebp
  4011cb:	add    al,al
  4011cd:	(bad)  
  4011ce:	inc    ebp
  4011cf:	add    ah,al
  4011d1:	(bad)  
  4011d2:	inc    ebp
  4011d3:	add    al,cl
  4011d5:	(bad)  
  4011d6:	inc    ebp
  4011d7:	add    ah,cl
  4011d9:	(bad)  
  4011da:	inc    ebp
  4011db:	add    al,dl
  4011dd:	(bad)  
  4011de:	inc    ebp
  4011df:	add    ah,dl
  4011e1:	(bad)  
  4011e2:	inc    ebp
  4011e3:	add    al,bl
  4011e5:	(bad)  
  4011e6:	inc    ebp
  4011e7:	add    ah,bl
  4011e9:	(bad)  
  4011ea:	inc    ebp
  4011eb:	add    al,ah
  4011ed:	(bad)  
  4011ee:	inc    ebp
  4011ef:	add    ah,ah
  4011f1:	(bad)  
  4011f2:	inc    ebp
  4011f3:	add    BYTE PTR [eax],bh
  4011f5:	aad    0x45
  4011f7:	add    BYTE PTR [edx*8-0x2abfffbb],bh
  4011fe:	inc    ebp
  4011ff:	add    BYTE PTR [ebp+edx*8+0x45],al
  401203:	add    BYTE PTR [eax-0x2b],cl
  401206:	inc    ebp
  401207:	add    BYTE PTR [ebp+edx*8+0x45],cl
  40120b:	add    BYTE PTR [eax-0x2b],dl
  40120e:	inc    ebp
  40120f:	add    BYTE PTR [ebp+edx*8+0x45],dl
  401213:	add    BYTE PTR [eax-0x2b],bl
  401216:	inc    ebp
  401217:	add    BYTE PTR [ebp+edx*8+0x45],bl
  40121b:	add    BYTE PTR [eax-0x2b],ah
  40121e:	inc    ebp
  40121f:	add    BYTE PTR [ebp+edx*8+0x45],ah
  401223:	add    BYTE PTR [eax-0x2b],ch
  401226:	inc    ebp
  401227:	add    BYTE PTR [ebp+edx*8+0x45],ch
  40122b:	add    BYTE PTR [eax-0x2b],dh
  40122e:	inc    ebp
  40122f:	add    BYTE PTR [ebp+edx*8+0x45],dh
  401233:	add    BYTE PTR [eax-0x2b],bh
  401236:	inc    ebp
  401237:	add    BYTE PTR [ebp+edx*8+0x45],bh
  40123b:	add    BYTE PTR [eax-0x7bffba2b],al
  401241:	aad    0x45
  401243:	add    BYTE PTR [eax-0x73ffba2b],cl
  401249:	aad    0x45
  40124b:	add    BYTE PTR [eax-0x6bffba2b],dl
  401251:	aad    0x45
  401253:	add    BYTE PTR [eax-0x63ffba2b],bl
  401259:	aad    0x45
  40125b:	add    BYTE PTR [eax-0x5bffba2b],ah
  401261:	aad    0x45
  401263:	add    BYTE PTR [eax-0x53ffba2b],ch
  401269:	aad    0x45
  40126b:	add    BYTE PTR [eax-0x4bffba2b],dh
  401271:	aad    0x45
  401273:	add    BYTE PTR [eax-0x43ffba2b],bh
  401279:	aad    0x45
  40127b:	add    al,al
  40127d:	aad    0x45
  40127f:	add    ah,al
  401281:	aad    0x45
  401283:	add    al,cl
  401285:	aad    0x45
  401287:	add    ah,cl
  401289:	aad    0x45
  40128b:	add    al,dl
  40128d:	aad    0x45
  40128f:	add    ah,dl
  401291:	aad    0x45
  401293:	add    al,bl
  401295:	aad    0x45
  401297:	add    ah,bl
  401299:	aad    0x45
  40129b:	add    al,ah
  40129d:	aad    0x45
  40129f:	add    ah,ah
  4012a1:	aad    0x45
  4012a3:	add    al,ch
  4012a5:	aad    0x45
  4012a7:	add    ah,ch
  4012a9:	aad    0x45
  4012ab:	add    al,dh
  4012ad:	aad    0x45
  4012af:	add    ah,dh
  4012b1:	aad    0x45
  4012b3:	add    al,bh
  4012b5:	aad    0x45
  4012b7:	add    ah,bh
  4012b9:	aad    0x45
  4012bb:	add    BYTE PTR [eax],al
  4012bd:	(bad)  
  4012be:	inc    ebp
  4012bf:	add    BYTE PTR [esi+edx*8],al
  4012c2:	inc    ebp
  4012c3:	add    BYTE PTR [eax],cl
  4012c5:	(bad)  
  4012c6:	inc    ebp
  4012c7:	add    BYTE PTR [esi+edx*8],cl
  4012ca:	inc    ebp
  4012cb:	add    BYTE PTR [eax],dl
  4012cd:	(bad)  
  4012ce:	inc    ebp
  4012cf:	add    BYTE PTR [esi+edx*8],dl
  4012d2:	inc    ebp
  4012d3:	add    BYTE PTR [eax],bl
  4012d5:	(bad)  
  4012d6:	inc    ebp
  4012d7:	add    BYTE PTR [esi+edx*8],bl
  4012da:	inc    ebp
  4012db:	add    BYTE PTR [eax],ah
  4012dd:	(bad)  
  4012de:	inc    ebp
  4012df:	add    BYTE PTR [esi+edx*8],ah
  4012e2:	inc    ebp
  4012e3:	add    BYTE PTR [eax],ch
  4012e5:	(bad)  
  4012e6:	inc    ebp
  4012e7:	add    BYTE PTR [esi+edx*8],ch
  4012ea:	inc    ebp
  4012eb:	add    BYTE PTR [eax],dh
  4012ed:	(bad)  
  4012ee:	inc    ebp
  4012ef:	add    BYTE PTR [esi+edx*8],dh
  4012f2:	inc    ebp
  4012f3:	add    BYTE PTR [eax],bh
  4012f5:	(bad)  
  4012f6:	inc    ebp
  4012f7:	add    BYTE PTR [esi+edx*8],bh
  4012fa:	inc    ebp
  4012fb:	add    BYTE PTR [eax-0x2a],al
  4012fe:	inc    ebp
  4012ff:	add    BYTE PTR [esi+edx*8+0x45],al
  401303:	add    BYTE PTR [eax-0x2a],cl
  401306:	inc    ebp
  401307:	add    BYTE PTR [esi+edx*8+0x45],cl
  40130b:	add    BYTE PTR [eax-0x2a],dl
  40130e:	inc    ebp
  40130f:	add    BYTE PTR [esi+edx*8+0x45],dl
  401313:	add    BYTE PTR [eax-0x2a],bl
  401316:	inc    ebp
  401317:	add    BYTE PTR [esi+edx*8+0x45],bl
  40131b:	add    BYTE PTR [eax-0x2a],ah
  40131e:	inc    ebp
  40131f:	add    BYTE PTR [eax],al
  401321:	add    al,0x0
  401323:	add    BYTE PTR [edx-0x27],ah
  401326:	add    BYTE PTR [eax],al
  401328:	jp     0x401303
  40132a:	add    BYTE PTR [eax],al
  40132c:	fsubp  st(2),st
  40132e:	nop
  40132f:	xor    ebp,esi
  401331:	jmp    0x33a0:0xeade3398
  401338:	mov    esi,0x6233a8ea
  40133d:	dec    ecx
  40133e:	add    al,0x0
  401340:	mov    bl,cl
  401342:	add    BYTE PTR [eax],al
  401344:	and    ebp,ebp
  401346:	sub    esi,DWORD PTR ds:0x353aec92
  40134c:	(bad)  
  40134d:	in     al,dx
  40134e:	dec    eax
  40134f:	xor    eax,0x3573ec94
  401354:	mov    esp,0xfe3588ec
  401359:	jmp    0x401328
  40135b:	xor    eax,0x35f1ec39
  401360:	sub    ebp,esp
  401362:	jge    0x40139a
  401364:	out    0xed,al
  401366:	cmp    BYTE PTR [bx+0x75e1],al
  40136b:	cmp    dh,al
  40136d:	loopne 0x40131c
  40136f:	cmp    BYTE PTR ds:0xc539a1e1,bl
  401375:	fbld   TBYTE PTR [esi+0x3a]
  401378:	mov    ebx,esp
  40137a:	jge    0x4013b6
  40137c:	in     al,0xe2
  40137e:	nop
  40137f:	cmp    dh,BYTE PTR [edi-0x57c53b1e]
  401385:	loop   0x401369
  401387:	cmp    al,BYTE PTR [eax]
	...
  401399:	add    BYTE PTR [eax],al
  40139b:	add    BYTE PTR [edi-0x1e],bl
  40139e:	xor    DWORD PTR [ebx],edi
  4013a0:	mov    esp,edx
  4013a2:	aas    
  4013a3:	cmp    ebx,DWORD PTR [edx+eiz*8]
  4013a6:	pop    esp
  4013a7:	cmp    eax,DWORD PTR [edi-0x1e]
  4013aa:	imul   edi,DWORD PTR [ebx],0x31
  4013ad:	loop   0x401429
  4013af:	cmp    esp,ebx
  4013b1:	loope  0x401342
  4013b3:	cmp    eax,ebp
  4013b5:	loope  0x40135c
  4013b7:	cmp    edx,ebp
  4013b9:	loope  0x40137c
  4013bb:	cmp    ebp,DWORD PTR [ecx-0x7ec4261f]
  4013c1:	loope  0x4013b4
  4013c3:	cmp    edi,DWORD PTR [edx]
  4013c5:	in     eax,0x2e
  4013c7:	cmp    al,0x36
  4013c9:	in     eax,0x45
  4013cb:	cmp    al,0x28
  4013cd:	in     eax,0x62
  4013cf:	cmp    al,0xcc
  4013d1:	in     al,0xa8
  4013d3:	cmp    al,0xaf
  4013d5:	in     al,0xc1
  4013d7:	cmp    al,0x29
  4013d9:	out    0xd4,al
  4013db:	cmp    al,0x34
  4013dd:	out    0xe9,al
  4013df:	cmp    al,0x3c
  4013e1:	out    0xf4,al
  4013e3:	cmp    al,0x47
  4013e5:	out    0xf,al
  4013e7:	cmp    eax,0x3d1ae656
  4013ec:	push   ebp
  4013ed:	out    0x25,al
  4013ef:	cmp    eax,0x3d2ee67b
  4013f4:	outs   dx,BYTE PTR ds:[esi]
  4013f5:	out    0x42,al
  4013f7:	cmp    eax,0x3d4de6aa
  4013fc:	mov    al,0xe6
  4013fe:	outs   dx,DWORD PTR ds:[esi]
  4013ff:	cmp    eax,0x0
	...
  401414:	mov    dh,ah
  401416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401417:	cmp    eax,0x3db2e6b6
  40141c:	mov    esi,0x693de6e6
  401421:	jecxz  0x40143b
  401423:	ds ds jecxz 0x40145d
  401427:	mov    eax,ds:0x333e49e3
  40142d:	jecxz  0x401488
  40142f:	ds ds jecxz 0x4014ab
  401433:	ds jecxz 0x401419
  401436:	mov    DWORD PTR [esi],edi
  401438:	jmp    0xd9:0x620000e3
  40143f:	add    BYTE PTR [edx-0x27],ah
  401442:	add    BYTE PTR [eax],al
  401444:	(bad)  
  401445:	fld    DWORD PTR [eax]
  401447:	add    BYTE PTR [edx-0x27],ah
  40144a:	add    BYTE PTR [eax],al
  40144c:	(bad)  
  40144d:	fld    DWORD PTR [eax]
  40144f:	add    BYTE PTR [edx-0x27],ah
  401452:	add    BYTE PTR [eax],al
  401454:	(bad)  
  401455:	fld    DWORD PTR [eax]
  401457:	add    BYTE PTR [edx-0x27],ah
  40145a:	add    BYTE PTR [eax],al
  40145c:	(bad)  
  40145d:	fld    DWORD PTR [eax]
  40145f:	add    BYTE PTR [edx-0x27],ah
  401462:	add    BYTE PTR [eax],al
  401464:	(bad)  
  401465:	fld    DWORD PTR [eax]
  401467:	add    BYTE PTR [edx-0x27],ah
  40146a:	add    BYTE PTR [eax],al
  40146c:	(bad)  
  40146d:	fld    DWORD PTR [eax]
  40146f:	add    BYTE PTR [edx-0x27],ah
  401472:	add    BYTE PTR [eax],al
  401474:	(bad)  
  401475:	fld    DWORD PTR [eax]
	...
  40148b:	add    BYTE PTR [edx-0x27],ah
  40148e:	add    BYTE PTR [eax],al
  401490:	(bad)  
  401491:	fld    DWORD PTR [eax]
  401493:	add    BYTE PTR [edx-0x27],ah
  401496:	add    BYTE PTR [eax],al
  401498:	(bad)  
  401499:	fld    DWORD PTR [eax]
  40149b:	add    BYTE PTR [edx-0x27],ah
  40149e:	add    BYTE PTR [eax],al
  4014a0:	(bad)  
  4014a1:	fld    DWORD PTR [eax]
  4014a3:	add    BYTE PTR [edx-0x27],ah
  4014a6:	add    BYTE PTR [eax],al
  4014a8:	(bad)  
  4014a9:	fld    DWORD PTR [eax]
  4014ab:	add    BYTE PTR [edx-0x27],ah
  4014ae:	add    BYTE PTR [eax],al
  4014b0:	(bad)  
  4014b1:	fld    DWORD PTR [eax]
  4014b3:	add    BYTE PTR [edx-0x27],ah
  4014b6:	add    BYTE PTR [eax],al
  4014b8:	(bad)  
  4014b9:	fld    DWORD PTR [eax]
  4014bb:	add    BYTE PTR [edx-0x27],ah
  4014be:	add    BYTE PTR [eax],al
  4014c0:	(bad)  
  4014c1:	fld    DWORD PTR [eax]
  4014c3:	add    BYTE PTR [edx-0x27],ah
  4014c6:	add    BYTE PTR [eax],al
  4014c8:	(bad)  
  4014c9:	fld    DWORD PTR [eax]
  4014cb:	add    BYTE PTR [edx-0x27],ah
  4014ce:	add    BYTE PTR [eax],al
  4014d0:	(bad)  
  4014d1:	fld    DWORD PTR [eax]
  4014d3:	add    BYTE PTR [edx-0x27],ah
  4014d6:	add    BYTE PTR [eax],al
  4014d8:	(bad)  
  4014d9:	fld    DWORD PTR [eax]
  4014db:	add    BYTE PTR [edx-0x27],ah
  4014de:	add    BYTE PTR [eax],al
  4014e0:	(bad)  
  4014e1:	fld    DWORD PTR [eax]
  4014e3:	add    BYTE PTR [edx-0x27],ah
  4014e6:	add    BYTE PTR [eax],al
  4014e8:	(bad)  
  4014e9:	fld    DWORD PTR [eax]
  4014eb:	add    BYTE PTR [edx-0x27],ah
	...
  401502:	add    BYTE PTR [eax],al
  401504:	(bad)  
  401505:	fld    DWORD PTR [eax]
  401507:	add    BYTE PTR [edx-0x27],ah
  40150a:	add    BYTE PTR [eax],al
  40150c:	(bad)  
  40150d:	fld    DWORD PTR [eax]
  40150f:	add    BYTE PTR [edx-0x27],ah
  401512:	add    BYTE PTR [eax],al
  401514:	(bad)  
  401515:	fld    DWORD PTR [eax]
  401517:	add    BYTE PTR [edx-0x27],ah
  40151a:	add    BYTE PTR [eax],al
  40151c:	(bad)  
  40151d:	fld    DWORD PTR [eax]
  40151f:	add    BYTE PTR [edx-0x27],ah
  401522:	add    BYTE PTR [eax],al
  401524:	(bad)  
  401525:	fld    DWORD PTR [eax]
  401527:	add    BYTE PTR [edx-0x27],ah
  40152a:	add    BYTE PTR [eax],al
  40152c:	(bad)  
  40152d:	fld    DWORD PTR [eax]
  40152f:	add    BYTE PTR [edx-0x27],ah
  401532:	add    BYTE PTR [eax],al
  401534:	(bad)  
  401535:	fld    DWORD PTR [eax]
  401537:	add    BYTE PTR [edx-0x27],ah
  40153a:	add    BYTE PTR [eax],al
  40153c:	(bad)  
  40153d:	fld    DWORD PTR [eax]
  40153f:	add    BYTE PTR [edx-0x27],ah
  401542:	add    BYTE PTR [eax],al
  401544:	(bad)  
  401545:	fld    DWORD PTR [eax]
  401547:	add    BYTE PTR [edx-0x27],ah
  40154a:	add    BYTE PTR [eax],al
  40154c:	(bad)  
  40154d:	fld    DWORD PTR [eax]
  40154f:	add    BYTE PTR [edx-0x27],ah
  401552:	add    BYTE PTR [eax],al
  401554:	(bad)  
  401555:	fld    DWORD PTR [eax]
  401557:	add    BYTE PTR [edx-0x27],ah
  40155a:	add    BYTE PTR [eax],al
  40155c:	(bad)  
  40155d:	fld    DWORD PTR [eax]
  40155f:	add    BYTE PTR [edx-0x27],ah
  401562:	add    BYTE PTR [eax],al
  401564:	(bad)  
  401565:	fld    DWORD PTR [eax]
	...
  40157b:	add    BYTE PTR [edx-0x27],ah
  40157e:	add    BYTE PTR [eax],al
  401580:	(bad)  
  401581:	fld    DWORD PTR [eax]
  401583:	add    BYTE PTR [edx-0x27],ah
  401586:	add    BYTE PTR [eax],al
  401588:	(bad)  
  401589:	fld    DWORD PTR [eax]
  40158b:	add    BYTE PTR [edx-0x27],ah
  40158e:	add    BYTE PTR [eax],al
  401590:	(bad)  
  401591:	fld    DWORD PTR [eax]
  401593:	add    BYTE PTR [edx-0x27],ah
  401596:	add    BYTE PTR [eax],al
  401598:	(bad)  
  401599:	fld    DWORD PTR [eax]
  40159b:	add    BYTE PTR [edx-0x27],ah
  40159e:	add    BYTE PTR [eax],al
  4015a0:	(bad)  
  4015a1:	fld    DWORD PTR [eax]
  4015a3:	add    BYTE PTR [edx-0x27],ah
  4015a6:	add    BYTE PTR [eax],al
  4015a8:	(bad)  
  4015a9:	fld    DWORD PTR [eax]
  4015ab:	add    BYTE PTR [edx-0x27],ah
  4015ae:	add    BYTE PTR [eax],al
  4015b0:	(bad)  
  4015b1:	fld    DWORD PTR [eax]
  4015b3:	add    BYTE PTR [edx-0x27],ah
  4015b6:	add    BYTE PTR [eax],al
  4015b8:	(bad)  
  4015b9:	fld    DWORD PTR [eax]
  4015bb:	add    BYTE PTR [edx-0x27],ah
  4015be:	add    BYTE PTR [eax],al
  4015c0:	(bad)  
  4015c1:	fld    DWORD PTR [eax]
  4015c3:	add    BYTE PTR [edx-0x27],ah
  4015c6:	add    BYTE PTR [eax],al
  4015c8:	(bad)  
  4015c9:	fld    DWORD PTR [eax]
  4015cb:	add    BYTE PTR [edx-0x27],ah
  4015ce:	add    BYTE PTR [eax],al
  4015d0:	(bad)  
  4015d1:	fld    DWORD PTR [eax]
  4015d3:	add    BYTE PTR [edx-0x27],ah
  4015d6:	add    BYTE PTR [eax],al
  4015d8:	(bad)  
  4015d9:	fld    DWORD PTR [eax]
  4015db:	add    BYTE PTR [edx-0x27],ah
	...
  4015f2:	add    BYTE PTR [eax],al
  4015f4:	(bad)  
  4015f5:	fld    DWORD PTR [eax]
  4015f7:	add    BYTE PTR [edx-0x27],ah
  4015fa:	add    BYTE PTR [eax],al
  4015fc:	(bad)  
  4015fd:	fld    DWORD PTR [eax]
  4015ff:	add    BYTE PTR [edx-0x27],ah
  401602:	add    BYTE PTR [eax],al
  401604:	(bad)  
  401605:	fld    DWORD PTR [eax]
  401607:	add    BYTE PTR [edx-0x27],ah
  40160a:	add    BYTE PTR [eax],al
  40160c:	(bad)  
  40160d:	fld    DWORD PTR [eax]
  40160f:	add    BYTE PTR [edx-0x27],ah
  401612:	add    BYTE PTR [eax],al
  401614:	(bad)  
  401615:	fld    DWORD PTR [eax]
  401617:	add    BYTE PTR [edx-0x27],ah
  40161a:	add    BYTE PTR [eax],al
  40161c:	(bad)  
  40161d:	fld    DWORD PTR [eax]
  40161f:	add    BYTE PTR [edx-0x27],ah
  401622:	add    BYTE PTR [eax],al
  401624:	(bad)  
  401625:	fld    DWORD PTR [eax]
  401627:	add    BYTE PTR [edx-0x27],ah
  40162a:	add    BYTE PTR [eax],al
  40162c:	(bad)  
  40162d:	fld    DWORD PTR [eax]
  40162f:	add    BYTE PTR [edx-0x27],ah
  401632:	add    BYTE PTR [eax],al
  401634:	(bad)  
  401635:	fld    DWORD PTR [eax]
  401637:	add    BYTE PTR [edx-0x27],ah
  40163a:	add    BYTE PTR [eax],al
  40163c:	(bad)  
  40163d:	fld    DWORD PTR [eax]
  40163f:	add    BYTE PTR [edx-0x27],ah
  401642:	add    BYTE PTR [eax],al
  401644:	(bad)  
  401645:	fld    DWORD PTR [eax]
  401647:	add    BYTE PTR [edx-0x27],ah
  40164a:	add    BYTE PTR [eax],al
  40164c:	(bad)  
  40164d:	fld    DWORD PTR [eax]
  40164f:	add    BYTE PTR [edx-0x27],ah
  401652:	add    BYTE PTR [eax],al
  401654:	(bad)  
  401655:	fld    DWORD PTR [eax]
	...
  40166b:	add    BYTE PTR [edx-0x27],ah
  40166e:	add    BYTE PTR [eax],al
  401670:	(bad)  
  401671:	fld    DWORD PTR [eax]
  401673:	add    BYTE PTR [edx-0x27],ah
  401676:	add    BYTE PTR [eax],al
  401678:	(bad)  
  401679:	fld    DWORD PTR [eax]
  40167b:	add    BYTE PTR [edx-0x27],ah
  40167e:	add    BYTE PTR [eax],al
  401680:	(bad)  
  401681:	fld    DWORD PTR [eax]
  401683:	add    BYTE PTR [edx-0x27],ah
  401686:	add    BYTE PTR [eax],al
  401688:	(bad)  
  401689:	fld    DWORD PTR [eax]
  40168b:	add    BYTE PTR [edx-0x27],ah
  40168e:	add    BYTE PTR [eax],al
  401690:	(bad)  
  401691:	fld    DWORD PTR [eax]
  401693:	add    BYTE PTR [edx-0x27],ah
  401696:	add    BYTE PTR [eax],al
  401698:	(bad)  
  401699:	fld    DWORD PTR [eax]
  40169b:	add    BYTE PTR [edx-0x27],ah
  40169e:	add    BYTE PTR [eax],al
  4016a0:	(bad)  
  4016a1:	fld    DWORD PTR [eax]
  4016a3:	add    BYTE PTR [edx-0x27],ah
  4016a6:	add    BYTE PTR [eax],al
  4016a8:	(bad)  
  4016a9:	fld    DWORD PTR [eax]
  4016ab:	add    BYTE PTR [edx-0x27],ah
  4016ae:	add    BYTE PTR [eax],al
  4016b0:	(bad)  
  4016b1:	fld    DWORD PTR [eax]
  4016b3:	add    BYTE PTR [edx-0x27],ah
  4016b6:	add    BYTE PTR [eax],al
  4016b8:	(bad)  
  4016b9:	fld    DWORD PTR [eax]
  4016bb:	add    BYTE PTR [edx-0x27],ah
  4016be:	add    BYTE PTR [eax],al
  4016c0:	(bad)  
  4016c1:	fld    DWORD PTR [eax]
  4016c3:	add    BYTE PTR [edx-0x27],ah
  4016c6:	add    BYTE PTR [eax],al
  4016c8:	(bad)  
  4016c9:	fld    DWORD PTR [eax]
  4016cb:	add    BYTE PTR [edx-0x27],ah
	...
  4016e2:	add    BYTE PTR [eax],al
  4016e4:	(bad)  
  4016e5:	fld    DWORD PTR [eax]
  4016e7:	add    BYTE PTR [edx-0x27],ah
  4016ea:	add    BYTE PTR [eax],al
  4016ec:	(bad)  
  4016ed:	fld    DWORD PTR [eax]
  4016ef:	add    BYTE PTR [edx-0x27],ah
  4016f2:	add    BYTE PTR [eax],al
  4016f4:	(bad)  
  4016f5:	fld    DWORD PTR [eax]
  4016f7:	add    BYTE PTR [edx-0x27],ah
  4016fa:	add    BYTE PTR [eax],al
  4016fc:	(bad)  
  4016fd:	fld    DWORD PTR [eax]
  4016ff:	add    BYTE PTR [edx-0x27],ah
  401702:	add    BYTE PTR [eax],al
  401704:	(bad)  
  401705:	fld    DWORD PTR [eax]
  401707:	add    BYTE PTR [edx-0x27],ah
  40170a:	add    BYTE PTR [eax],al
  40170c:	(bad)  
  40170d:	fld    DWORD PTR [eax]
  40170f:	add    BYTE PTR [edx-0x27],ah
  401712:	add    BYTE PTR [eax],al
  401714:	(bad)  
  401715:	fld    DWORD PTR [eax]
  401717:	add    BYTE PTR [edx-0x27],ah
  40171a:	add    BYTE PTR [eax],al
  40171c:	(bad)  
  40171d:	fld    DWORD PTR [eax]
  40171f:	add    BYTE PTR [edx-0x27],ah
  401722:	add    BYTE PTR [eax],al
  401724:	(bad)  
  401725:	fld    DWORD PTR [eax]
  401727:	add    BYTE PTR [edx-0x27],ah
  40172a:	add    BYTE PTR [eax],al
  40172c:	(bad)  
  40172d:	fld    DWORD PTR [eax]
  40172f:	add    BYTE PTR [edx-0x27],ah
  401732:	add    BYTE PTR [eax],al
  401734:	(bad)  
  401735:	fld    DWORD PTR [eax]
  401737:	add    BYTE PTR [edx-0x27],ah
  40173a:	add    BYTE PTR [eax],al
  40173c:	(bad)  
  40173d:	fld    DWORD PTR [eax]
  40173f:	add    BYTE PTR [edx-0x27],ah
  401742:	add    BYTE PTR [eax],al
  401744:	(bad)  
  401745:	fld    DWORD PTR [eax]
	...
  40175b:	add    BYTE PTR [edx-0x27],ah
  40175e:	add    BYTE PTR [eax],al
  401760:	(bad)  
  401761:	fld    DWORD PTR [eax]
  401763:	add    BYTE PTR [edx-0x27],ah
  401766:	add    BYTE PTR [eax],al
  401768:	(bad)  
  401769:	fld    DWORD PTR [eax]
  40176b:	add    BYTE PTR [edx-0x27],ah
  40176e:	add    BYTE PTR [eax],al
  401770:	(bad)  
  401771:	fld    DWORD PTR [eax]
  401773:	add    BYTE PTR [edx-0x27],ah
  401776:	add    BYTE PTR [eax],al
  401778:	(bad)  
  401779:	fld    DWORD PTR [eax]
  40177b:	add    BYTE PTR [edx-0x27],ah
  40177e:	add    BYTE PTR [eax],al
  401780:	(bad)  
  401781:	fld    DWORD PTR [eax]
  401783:	add    BYTE PTR [edx-0x27],ah
  401786:	add    BYTE PTR [eax],al
  401788:	(bad)  
  401789:	fld    DWORD PTR [eax]
  40178b:	add    BYTE PTR [edx-0x27],ah
  40178e:	add    BYTE PTR [eax],al
  401790:	(bad)  
  401791:	fld    DWORD PTR [eax]
  401793:	add    BYTE PTR [edx-0x27],ah
  401796:	add    BYTE PTR [eax],al
  401798:	(bad)  
  401799:	fld    DWORD PTR [eax]
  40179b:	add    BYTE PTR [edx-0x27],ah
  40179e:	add    BYTE PTR [eax],al
  4017a0:	(bad)  
  4017a1:	fld    DWORD PTR [eax]
  4017a3:	add    BYTE PTR [edx-0x27],ah
  4017a6:	add    BYTE PTR [eax],al
  4017a8:	(bad)  
  4017a9:	fld    DWORD PTR [eax]
  4017ab:	add    BYTE PTR [edx-0x27],ah
  4017ae:	add    BYTE PTR [eax],al
  4017b0:	(bad)  
  4017b1:	fld    DWORD PTR [eax]
  4017b3:	add    BYTE PTR [edx-0x27],ah
  4017b6:	add    BYTE PTR [eax],al
  4017b8:	(bad)  
  4017b9:	fld    DWORD PTR [eax]
  4017bb:	add    BYTE PTR [edx-0x27],ah
	...
  4017d2:	add    BYTE PTR [eax],al
  4017d4:	(bad)  
  4017d5:	fld    DWORD PTR [eax]
  4017d7:	add    BYTE PTR [edx-0x27],ah
  4017da:	add    BYTE PTR [eax],al
  4017dc:	(bad)  
  4017dd:	fld    DWORD PTR [eax]
  4017df:	add    BYTE PTR [edx-0x27],ah
  4017e2:	add    BYTE PTR [eax],al
  4017e4:	(bad)  
  4017e5:	fld    DWORD PTR [eax]
  4017e7:	add    BYTE PTR [edx-0x27],ah
  4017ea:	add    BYTE PTR [eax],al
  4017ec:	add    BYTE PTR [ebp+0x79620004],bl
  4017f2:	inc    esp
  4017f3:	add    BYTE PTR ds:0x105074bc,bl
  4017f9:	mov    dh,0x63
  4017fb:	inc    ecx
  4017fc:	(bad)  
  4017fd:	mov    esp,0xa9f16572
  401802:	add    BYTE PTR [eax],al
  401804:	es mov dh,0x61
  401807:	fs push ds
  401809:	mov    al,0x62
  40180b:	jb     0x401810
  40180d:	stos   DWORD PTR es:[edi],eax
  40180e:	jns    0x401855
  401810:	ficomp DWORD PTR [eax-0x495a0000]
  401816:	popa   
  401817:	fs sahf 
  401819:	mov    al,0x62
  40181b:	jb     0x4017e0
  40181d:	stos   DWORD PTR es:[edi],eax
  40181e:	jns    0x401865
  401820:	mov    edx,0x9d00008e
  401825:	mov    esp,0xbdbd4d74
  40182a:	jne    0x401898
  40182c:	mov    edi,0x866e6191
  401831:	mov    ch,0x65
  401833:	inc    ecx
  401834:	(bad)  
  401835:	fld    DWORD PTR [eax]
  401837:	add    BYTE PTR [ecx-0x719e9a55],ah
  40183d:	mov    esp,0xbc8e6946
  401842:	inc    ecx
  401843:	add    BYTE PTR [esi-0x7e8d8b56],al
  401849:	mov    eax,0xd9624174
  40184e:	add    BYTE PTR [eax],al
  401850:	and    eax,0x5774bc
	...
  401865:	add    BYTE PTR [eax],al
  401867:	add    BYTE PTR [ebx-0x49],cl
  40186a:	outs   dx,DWORD PTR fs:[esi]
  40186c:	push   ebp
  40186d:	stos   BYTE PTR es:[edi],al
  40186e:	inc    esp
  40186f:	imul   edx,DWORD PTR [eax-0x44],0xab4d7463
  401876:	jns    0x4018b9
  401878:	(bad)  
  401879:	fld    DWORD PTR [eax]
  40187b:	add    BYTE PTR ds:0x354d74bc,ah
  401881:	mov    ebp,0x91076c75
  401886:	popa   
  401887:	outs   dx,BYTE PTR ds:[esi]
  401888:	(bad)  
  401889:	mov    ah,0x65
  40188b:	push   edi
  40188c:	(bad)  
  40188d:	fld    DWORD PTR [eax]
  40188f:	add    BYTE PTR [esi-0x26],bl
  401892:	inc    eax
  401893:	add    BYTE PTR [esi-0x26],dl
  401896:	inc    eax
  401897:	add    BYTE PTR [esi],bh
  401899:	fiadd  DWORD PTR [eax+0x0]
  40189c:	fiadd  DWORD PTR ss:[eax+0x0]
  4018a0:	sbb    bl,dl
  4018a2:	inc    eax
  4018a3:	add    BYTE PTR [esi-0x3dffbf28],dh
  4018a9:	fadd   DWORD PTR [eax+0x0]
  4018ac:	retf   0x40d8
  4018af:	add    BYTE PTR [ebp-0x4faf8b42],bl
  4018b5:	mov    ah,0x63
  4018b7:	inc    ecx
  4018b8:	mov    esi,0xb16572bd
  4018bd:	test   al,0x0
  4018bf:	add    BYTE PTR [esi-0x519b9e4c],dl
  4018c5:	mov    dl,0x62
  4018c7:	jb     0x40184c
  4018c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018ca:	jns    0x401911
	...
  4018e0:	mov    bl,BYTE PTR [edx-0x41870000]
  4018e6:	jb     0x401956
  4018e8:	xchg   DWORD PTR [ebp-0x42bbcdcd],esi
  4018ee:	ins    BYTE PTR es:[edi],dx
  4018ef:	ins    BYTE PTR es:[edi],dx
  4018f0:	(bad)  
  4018f1:	fld    DWORD PTR [eax]
  4018f3:	add    BYTE PTR [edi-0x58],dh
  4018f6:	jbe    0x40195b
  4018f8:	push   eax
  4018f9:	lods   eax,DWORD PTR ds:[esi]
  4018fa:	cs fs inc esi
  4018fd:	mov    ch,0x0
  4018ff:	add    BYTE PTR [edi],bh
  401901:	mov    esi,0xad3f736d
  401906:	add    BYTE PTR [eax],al
  401908:	dec    edi
  401909:	test   al,0x76
  40190b:	arpl   WORD PTR [eax],si
  40190d:	lods   eax,DWORD PTR ds:[esi]
  40190e:	cs fs ds mov ch,0x0
  401913:	add    BYTE PTR [edi],dh
  401915:	mov    esi,0xa212636d
  40191a:	add    BYTE PTR [eax],al
  40191c:	sub    al,0xb2
  40191e:	jb     0x401994
  401920:	pop    ss
  401921:	mov    edx,0xb4f6416c
  401926:	outs   dx,DWORD PTR ds:[esi]
  401927:	arpl   WORD PTR [edx-0x27],sp
  40192a:	add    BYTE PTR [eax],al
  40192c:	btr    DWORD PTR [ebp+0x61],ebp
  401930:	repnz mov ch,BYTE PTR [ecx+0x65]
  401934:	in     eax,dx
  401935:	xchg   ebx,eax
  401936:	inc    si
  401938:	retf   
  401939:	mov    ch,0x65
  40193b:	add    BYTE PTR [edx+esi*4-0x45288b8e],ch
  401942:	ins    BYTE PTR es:[edi],dx
  401943:	push   eax
	...
  401958:	shl    BYTE PTR [esp+esi*2+0xadc165],1
  40195f:	add    BYTE PTR [edx-0x5c8f9e42],ch
  401965:	mov    ch,0x6c
  401967:	outs   dx,DWORD PTR ds:[esi]
  401968:	rcr    ecx,0x0
  40196b:	add    BYTE PTR [ecx+0x7f6e72be],cl
  401971:	mov    ch,0x33
  401973:	xor    bh,BYTE PTR [edi*4-0x269d9394]
  40197a:	add    BYTE PTR [eax],al
  40197c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40197d:	mov    esi,0xb4705074
  401982:	arpl   WORD PTR [ebp+0x71],sp
  401985:	test   al,0x48
  401987:	sub    DWORD PTR gs:[ecx-0x269e0000],0xffffff86
  40198f:	add    al,0x62
  401991:	jge    0x4019ec
  401993:	add    BYTE PTR [edx+0x32],ah
  401996:	add    eax,DWORD PTR [eax]
  401998:	bound  esi,QWORD PTR [edx]
  40199a:	add    eax,DWORD PTR [eax]
  40199c:	bound  esi,QWORD PTR [edx]
  40199e:	add    eax,DWORD PTR [eax]
  4019a0:	bound  esi,QWORD PTR [edx]
  4019a2:	add    eax,DWORD PTR [eax]
  4019a4:	bound  esi,QWORD PTR [edx]
  4019a6:	add    eax,DWORD PTR [eax]
  4019a8:	bound  esi,QWORD PTR [edx]
  4019aa:	add    eax,DWORD PTR [eax]
  4019ac:	bound  esi,QWORD PTR [edx]
  4019ae:	add    eax,DWORD PTR [eax]
  4019b0:	bound  esi,QWORD PTR [edx]
  4019b2:	add    eax,DWORD PTR [eax]
  4019b4:	bound  esi,QWORD PTR [edx]
  4019b6:	add    eax,DWORD PTR [eax]
  4019b8:	bound  esi,QWORD PTR [edx]
  4019ba:	add    eax,DWORD PTR [eax]
	...
  4019d0:	bound  esi,QWORD PTR [edx]
  4019d2:	add    eax,DWORD PTR [eax]
  4019d4:	bound  esi,QWORD PTR [edx]
  4019d6:	add    eax,DWORD PTR [eax]
  4019d8:	bound  esi,QWORD PTR [edx]
  4019da:	add    eax,DWORD PTR [eax]
  4019dc:	bound  esi,QWORD PTR [edx]
  4019de:	add    eax,DWORD PTR [eax]
  4019e0:	bound  edx,QWORD PTR [eax]
  4019e2:	add    al,0x0
  4019e4:	bound  esi,QWORD PTR [eax]
  4019e6:	add    eax,DWORD PTR [eax]
  4019e8:	bound  esi,QWORD PTR [eax]
  4019ea:	add    eax,DWORD PTR [eax]
  4019ec:	bound  esi,QWORD PTR [eax]
  4019ee:	add    eax,DWORD PTR [eax]
  4019f0:	bound  esi,QWORD PTR [eax]
  4019f2:	add    eax,DWORD PTR [eax]
  4019f4:	bound  esi,QWORD PTR [eax]
  4019f6:	add    eax,DWORD PTR [eax]
  4019f8:	bound  esi,QWORD PTR [eax]
  4019fa:	add    eax,DWORD PTR [eax]
  4019fc:	bound  esi,QWORD PTR [eax]
  4019fe:	add    eax,DWORD PTR [eax]
  401a00:	bound  esi,QWORD PTR [eax]
  401a02:	add    eax,DWORD PTR [eax]
  401a04:	bound  esi,QWORD PTR [eax]
  401a06:	add    eax,DWORD PTR [eax]
  401a08:	bound  esi,QWORD PTR [eax]
  401a0a:	add    eax,DWORD PTR [eax]
  401a0c:	bound  esi,QWORD PTR [eax]
  401a0e:	add    eax,DWORD PTR [eax]
  401a10:	bound  esi,QWORD PTR [eax]
  401a12:	add    eax,DWORD PTR [eax]
  401a14:	bound  esi,QWORD PTR [eax]
  401a16:	add    eax,DWORD PTR [eax]
  401a18:	bound  esi,QWORD PTR [eax]
  401a1a:	add    eax,DWORD PTR [eax]
  401a1c:	(bad)  
  401a1d:	fldl2t 
  401a1f:	add    esp,DWORD PTR [edx-0x27]
  401a22:	jmp    0xea197c2a
  401a27:	add    esp,DWORD PTR [edx-0x27]
  401a2a:	jmp    0xea197c32
  401a2f:	add    esp,DWORD PTR [edx-0x27]
  401a32:	jmp    0x401a3a
	...
  401a47:	add    BYTE PTR [edx-0x27],ah
  401a4a:	jmp    0xea197c52
  401a4f:	add    esp,DWORD PTR [edx-0x27]
  401a52:	jmp    0xea197c5a
  401a57:	add    esp,DWORD PTR [edx-0x27]
  401a5a:	jmp    0xea197c62
  401a5f:	add    esp,DWORD PTR [edx-0x27]
  401a62:	jmp    0xea197c6a
  401a67:	add    esp,DWORD PTR [edx-0x27]
  401a6a:	jmp    0xea197c72
  401a6f:	add    esp,DWORD PTR [edx-0x27]
  401a72:	jmp    0xea197c7a
  401a77:	add    esp,DWORD PTR [edx-0x27]
  401a7a:	jmp    0xea197c82
  401a7f:	add    esp,DWORD PTR [edx-0x27]
  401a82:	jmp    0xea197c8a
  401a87:	add    esp,DWORD PTR [edx-0x27]
  401a8a:	jmp    0xea197c92
  401a8f:	add    esp,DWORD PTR [edx-0x27]
  401a92:	jmp    0xea197c9a
  401a97:	add    esp,DWORD PTR [edx-0x27]
  401a9a:	jmp    0xea197ca2
  401a9f:	add    esp,DWORD PTR [edx-0x27]
  401aa2:	jmp    0xea197caa
  401aa7:	add    esp,DWORD PTR [edx-0x27]
  401aaa:	add    cl,ch
	...
  401ac0:	popa   
  401ac1:	fld    DWORD PTR [eax]
  401ac3:	jmp    0xe940f429
  401ac8:	popa   
  401ac9:	fld    DWORD PTR [eax]
  401acb:	jmp    0xe940f431
  401ad0:	popa   
  401ad1:	fld    DWORD PTR [eax]
  401ad3:	jmp    0xe940f439
  401ad8:	popa   
  401ad9:	fld    DWORD PTR [eax]
  401adb:	jmp    0xe940f441
  401ae0:	popa   
  401ae1:	fld    DWORD PTR [eax]
  401ae3:	jmp    0xe940f449
  401ae8:	popa   
  401ae9:	fld    DWORD PTR [eax]
  401aeb:	jmp    0x3940f451
  401af0:	dec    ebp
  401af1:	fld    DWORD PTR [eax]
  401af3:	sbb    eax,0xaa00d661
  401af8:	push   eax
  401af9:	dec    ecx
  401afa:	push   eax
  401afb:	jmp    0xe940f461
  401b00:	popa   
  401b01:	fld    DWORD PTR [eax]
  401b03:	leave  
  401b04:	pop    esi
  401b05:	xlat   BYTE PTR ds:[ebx]
  401b06:	add    edx,esi
  401b08:	pusha  
  401b09:	aam    0x0
  401b0b:	jmp    0xe940f0ab
  401b10:	rcr    ecx,0x0
  401b13:	jmp    0x9640f479
  401b18:	in     eax,dx
  401b19:	fild   DWORD PTR [eax]
  401b1b:	jmp    0xe940f471
  401b20:	xchg   ecx,eax
  401b21:	aad    0x0
  401b23:	jmp    0x401b28
	...
  401b38:	popa   
  401b39:	cdq    
  401b3a:	add    cl,ch
  401b3c:	jno    0x401b17
  401b3e:	add    cl,ch
  401b40:	pop    edi
  401b41:	fld    DWORD PTR [eax]
  401b43:	in     al,dx
  401b44:	popa   
  401b45:	fiadd  DWORD PTR [eax]
  401b47:	call   0x40f4ad
  401b4c:	push   cs
  401b4d:	fld    QWORD PTR [ecx]
  401b4f:	add    BYTE PTR [ebx],cl
  401b51:	fld    QWORD PTR [eax]
  401b53:	add    bl,bh
  401b55:	sbb    al,0x4
  401b57:	add    bl,bh
  401b59:	and    bh,bh
  401b5b:	dec    ebx
  401b5d:	fadd   QWORD PTR [eax]
  401b5f:	add    cl,cl
  401b61:	fadd   QWORD PTR [eax]
  401b63:	cmp    DWORD PTR [ebx-0x44ffef24],0xcb0000cc
  401b6d:	fcom   QWORD PTR [eax]
  401b6f:	add    bl,cl
  401b71:	int3   
  401b72:	add    BYTE PTR [eax],al
  401b74:	mov    ebx,0x8b0000dc
  401b79:	fadd   QWORD PTR [eax]
  401b7b:	add    BYTE PTR [ebx-0x74ffff24],cl
  401b81:	fadd   QWORD PTR [eax]
  401b83:	add    bh,cl
  401b85:	stc    
  401b86:	add    al,0x0
  401b88:	and    ebx,esp
  401b8a:	add    BYTE PTR [eax],al
  401b8c:	mov    ebx,esp
  401b8e:	add    BYTE PTR [eax],al
  401b90:	mov    ebx,esp
  401b92:	add    BYTE PTR [eax],al
  401b94:	jnp    0x401b72
  401b96:	add    BYTE PTR [eax],al
  401b98:	jnp    0x401b76
	...
  401bae:	add    BYTE PTR [eax],al
  401bb0:	dec    ebx
  401bb1:	fadd   QWORD PTR [eax]
  401bb3:	add    BYTE PTR [ebx-0x24],cl
  401bb6:	add    BYTE PTR [eax],al
  401bb8:	cmp    ebx,DWORD PTR [esp+eax*1+0x0]
  401bbc:	push   ebx
  401bbd:	cli    
  401bbe:	add    BYTE PTR [eax],al
  401bc0:	dec    ebx
  401bc1:	fadd   QWORD PTR [eax]
  401bc3:	add    BYTE PTR [ebx-0x24],cl
  401bc6:	add    BYTE PTR [eax],al
  401bc8:	cmp    ebx,esp
  401bca:	add    BYTE PTR [eax],al
  401bcc:	cmp    ebx,esp
  401bce:	add    BYTE PTR [eax],al
  401bd0:	or     ebx,esp
  401bd2:	add    BYTE PTR [eax],al
  401bd4:	or     ebx,esp
  401bd6:	add    BYTE PTR [eax],al
  401bd8:	bound  esi,QWORD PTR [edx]
  401bda:	add    eax,DWORD PTR [eax]
  401bdc:	bound  esi,QWORD PTR [edx]
  401bde:	add    eax,DWORD PTR [eax]
  401be0:	bound  edx,QWORD PTR [edx]
  401be2:	mov    al,ds:0x3726200
  401be7:	add    BYTE PTR [edx+0x32],ah
  401bea:	add    eax,DWORD PTR [eax]
  401bec:	bound  esi,QWORD PTR [edx]
  401bee:	add    eax,DWORD PTR [eax]
  401bf0:	bound  esi,QWORD PTR [edx]
  401bf2:	adc    eax,DWORD PTR [eax]
  401bf4:	(bad)  
  401bf6:	add    DWORD PTR [eax],eax
  401bf8:	bound  esi,QWORD PTR [edx]
  401bfa:	add    eax,DWORD PTR [eax]
  401bfc:	bound  esi,QWORD PTR [edx]
  401bfe:	add    eax,DWORD PTR [eax]
  401c00:	bound  esi,QWORD PTR [edx]
  401c02:	add    eax,DWORD PTR [eax]
  401c04:	bound  esi,QWORD PTR [edx]
  401c06:	add    eax,DWORD PTR [eax]
  401c08:	bound  esi,QWORD PTR [edx]
  401c0a:	add    eax,DWORD PTR [eax]
  401c0c:	bound  esi,QWORD PTR [edx]
  401c0e:	add    eax,DWORD PTR [eax]
  401c10:	(bad)  
  401c11:	enter  0x6570,0x0
	...
  401c25:	add    BYTE PTR [eax],al
  401c27:	add    BYTE PTR [edx],bl
  401c29:	xchg   BYTE PTR [eax+eax*1],al
  401c2c:	bound  edi,QWORD PTR [eax+0x32620438]
  401c32:	adc    eax,DWORD PTR [eax]
  401c34:	bound  esi,QWORD PTR [edx]
  401c36:	xor    eax,0xff326204
  401c3b:	jmp    FWORD PTR [ebp+0x31]
  401c3e:	add    eax,DWORD PTR [eax]
  401c40:	bound  esi,QWORD PTR [edx]
  401c42:	add    eax,DWORD PTR [eax]
  401c44:	bound  esi,QWORD PTR [eax]
  401c46:	add    eax,DWORD PTR [eax]
  401c48:	bound  edx,QWORD PTR [eax]
  401c4a:	add    eax,DWORD PTR [eax]
  401c4c:	ret    0x5f16
  401c4f:	popa   
  401c50:	into   
  401c51:	rol    DWORD PTR [eax+eax*1],1
  401c54:	bound  ecx,QWORD PTR [edi+ebx*1]
  401c57:	add    BYTE PTR [edx+0x30],ah
  401c5a:	push   ebx
  401c5b:	add    al,0x62
  401c5d:	xor    BYTE PTR [ebx],cl
  401c5f:	add    BYTE PTR [edx+0x30],ah
  401c62:	inc    ecx
  401c63:	add    al,0x62
  401c65:	fldl2t 
  401c67:	add    esp,DWORD PTR [edx-0x27]
  401c6a:	jmp    0xea197e72
  401c6f:	add    esp,DWORD PTR [edx-0x27]
  401c72:	test   eax,0x17196203
  401c77:	jb     0x401cf8
  401c79:	lods   eax,DWORD PTR ds:[esi]
  401c7a:	into   
  401c7b:	bound  esp,QWORD PTR [edx-0x27]
  401c7e:	inc    ebx
  401c7f:	cmp    eax,0x83e9d962
  401c84:	data16 fldl2t 
  401c87:	cmp    DWORD PTR [edx-0x27],esp
  401c8a:	jmp    0x401cd8
	...
  401c9f:	add    BYTE PTR [esi-0x27],ah
  401ca2:	jmp    0xea197eaa
  401ca7:	add    esp,DWORD PTR [edx-0x27]
  401caa:	jmp    0xaa197eb2
  401caf:	add    esp,DWORD PTR [edx-0x65]
  401cb2:	jmp    0xea197eba
  401cb7:	add    esp,DWORD PTR [edx-0x27]
  401cba:	jmp    0xea197ec2
  401cbf:	add    esp,DWORD PTR [edx-0x27]
  401cc2:	jmp    0xea197eca
  401cc7:	add    esp,DWORD PTR [edx-0x27]
  401cca:	jmp    0xea197ed2
  401ccf:	add    esp,DWORD PTR [edx-0x27]
  401cd2:	jmp    0xea197eda
  401cd7:	add    esp,DWORD PTR [edx-0x27]
  401cda:	jmp    0xea197ee2
  401cdf:	add    esp,DWORD PTR [edx-0x27]
  401ce2:	jmp    0xea197eea
  401ce7:	add    esp,DWORD PTR [edx-0x27]
  401cea:	jmp    0xea197ef2
  401cef:	add    esp,DWORD PTR [edx-0x27]
  401cf2:	add    cl,ch
  401cf4:	popa   
  401cf5:	fld    DWORD PTR [eax]
  401cf7:	jmp    0xe940f65d
  401cfc:	popa   
  401cfd:	fld    DWORD PTR [eax]
  401cff:	jmp    0xe940f665
	...
  401d18:	popa   
  401d19:	fld    DWORD PTR [eax]
  401d1b:	jmp    0xe940f681
  401d20:	popa   
  401d21:	fld    DWORD PTR [eax]
  401d23:	jmp    0xe940f689
  401d28:	popa   
  401d29:	fld    DWORD PTR [eax]
  401d2b:	jmp    0xe940f691
  401d30:	popa   
  401d31:	fld    DWORD PTR [eax]
  401d33:	jmp    0xe940f699
  401d38:	popa   
  401d39:	fld    DWORD PTR [eax]
  401d3b:	jmp    0xe940f6a1
  401d40:	popa   
  401d41:	fld    DWORD PTR [eax]
  401d43:	jmp    0xe940f6a9
  401d48:	popa   
  401d49:	fld    DWORD PTR [eax]
  401d4b:	jmp    0xe940f6b1
  401d50:	popa   
  401d51:	fld    DWORD PTR [eax]
  401d53:	jmp    0xe940f6b9
  401d58:	popa   
  401d59:	fld    DWORD PTR [eax]
  401d5b:	jmp    0xe940f6c1
  401d60:	popa   
  401d61:	fld    DWORD PTR [eax]
  401d63:	jmp    0xe940f6c9
  401d68:	popa   
  401d69:	fld    DWORD PTR [eax]
  401d6b:	jmp    0xe940f6d1
  401d70:	popa   
  401d71:	fld    DWORD PTR [eax]
  401d73:	jmp    0xe940f6d9
  401d78:	popa   
  401d79:	fld    DWORD PTR [eax]
  401d7b:	jmp    0x401d80
	...
  401d90:	popa   
  401d91:	fld    DWORD PTR [eax]
  401d93:	add    BYTE PTR [ebx-0x27],cl
  401d96:	add    BYTE PTR [eax],al
  401d98:	cmp    ebx,ecx
  401d9a:	add    BYTE PTR [eax],al
  401d9c:	cmp    ebx,ecx
  401d9e:	add    BYTE PTR [eax],al
  401da0:	or     ebx,ecx
  401da2:	add    BYTE PTR [eax],al
  401da4:	or     ebx,ecx
  401da6:	add    BYTE PTR [eax],al
  401da8:	sti    
  401da9:	fadd   DWORD PTR [eax]
  401dab:	add    bl,bh
  401dad:	fadd   DWORD PTR [eax]
  401daf:	add    BYTE PTR [ebx],cl
  401db1:	fld    DWORD PTR [eax]
  401db3:	add    BYTE PTR [ebx],cl
  401db5:	fld    DWORD PTR [eax]
  401db7:	add    bl,bh
  401db9:	fadd   DWORD PTR [eax]
  401dbb:	add    bl,bh
  401dbd:	fadd   DWORD PTR [eax]
  401dbf:	add    bl,cl
  401dc1:	fadd   DWORD PTR [eax]
  401dc3:	add    bl,cl
  401dc5:	fadd   DWORD PTR [eax]
  401dc7:	add    BYTE PTR [ebx-0x44ffff28],bh
  401dcd:	fadd   DWORD PTR [eax]
  401dcf:	add    bl,cl
  401dd1:	fadd   DWORD PTR [eax]
  401dd3:	add    bl,cl
  401dd5:	fadd   DWORD PTR [eax]
  401dd7:	add    BYTE PTR [ebx-0x44ffff28],bh
  401ddd:	fadd   DWORD PTR [eax]
  401ddf:	add    BYTE PTR [ebx-0x74ffff28],cl
  401de5:	fadd   DWORD PTR [eax]
  401de7:	add    BYTE PTR [ebx-0x28],bh
  401dea:	add    BYTE PTR [eax],al
  401dec:	jnp    0x401dc6
  401dee:	add    BYTE PTR [eax],al
  401df0:	mov    ebx,eax
	...
  401e06:	add    BYTE PTR [eax],al
  401e08:	mov    ebx,eax
  401e0a:	add    BYTE PTR [eax],al
  401e0c:	jnp    0x401de6
  401e0e:	add    BYTE PTR [eax],al
  401e10:	jnp    0x401dea
  401e12:	add    BYTE PTR [eax],al
  401e14:	dec    ebx
  401e15:	fadd   DWORD PTR [eax]
  401e17:	add    BYTE PTR [ebx-0x28],cl
  401e1a:	add    BYTE PTR [eax],al
  401e1c:	cmp    ebx,eax
  401e1e:	add    BYTE PTR [eax],al
  401e20:	bound  esi,QWORD PTR [edx]
  401e22:	add    eax,DWORD PTR [eax]
  401e24:	bound  esi,QWORD PTR [edx]
  401e26:	add    eax,DWORD PTR [eax]
  401e28:	bound  esi,QWORD PTR [edx]
  401e2a:	add    eax,DWORD PTR [eax]
  401e2c:	bound  esi,QWORD PTR [edx]
  401e2e:	add    eax,DWORD PTR [eax]
  401e30:	bound  esi,QWORD PTR [edx]
  401e32:	add    eax,DWORD PTR [eax]
  401e34:	bound  esi,QWORD PTR [edx]
  401e36:	add    eax,DWORD PTR [eax]
  401e38:	bound  esi,QWORD PTR [edx]
  401e3a:	add    eax,DWORD PTR [eax]
  401e3c:	bound  esi,QWORD PTR [edx]
  401e3e:	add    eax,DWORD PTR [eax]
  401e40:	bound  esi,QWORD PTR [edx]
  401e42:	add    eax,DWORD PTR [eax]
  401e44:	bound  esi,QWORD PTR [edx]
  401e46:	add    eax,DWORD PTR [eax]
  401e48:	bound  esi,QWORD PTR [edx]
  401e4a:	add    eax,DWORD PTR [eax]
  401e4c:	bound  esi,QWORD PTR [edx]
  401e4e:	add    eax,DWORD PTR [eax]
  401e50:	bound  esi,QWORD PTR [edx]
  401e52:	add    eax,DWORD PTR [eax]
  401e54:	bound  esi,QWORD PTR [edx]
  401e56:	add    eax,DWORD PTR [eax]
  401e58:	bound  esi,QWORD PTR [edx]
  401e5a:	add    eax,DWORD PTR [eax]
  401e5c:	bound  esi,QWORD PTR [edx]
  401e5e:	add    eax,DWORD PTR [eax]
  401e60:	(bad)  
  401e61:	hlt    
  401e62:	inc    eax
  401e63:	add    al,0x62
  401e65:	ds inc edx
  401e67:	add    al,0x62
  401e69:	je     0x401ead
  401e6b:	add    al,0x0
	...
  401e7d:	add    BYTE PTR [eax],al
  401e7f:	add    BYTE PTR [edx-0x60],ah
  401e82:	inc    edx
  401e83:	add    al,0x62
  401e85:	mov    al,0x42
  401e87:	add    al,0x62
  401e89:	add    BYTE PTR [edx+0x4],0x62
  401e8d:	push   eax
  401e8e:	inc    ebp
  401e8f:	add    al,0x62
  401e91:	inc    eax
  401e92:	inc    ebp
  401e93:	add    al,0x62
  401e95:	ins    BYTE PTR es:[edi],dx
  401e96:	inc    ebp
  401e97:	add    al,0x62
  401e99:	outs   dx,BYTE PTR ds:[esi]
  401e9a:	inc    ebp
  401e9b:	add    al,0x62
  401e9d:	add    al,0x45
  401e9f:	add    al,0x62
  401ea1:	sub    al,BYTE PTR [ebp+0x4]
  401ea4:	bound  eax,QWORD PTR [eax*2+0x45226204]
  401eab:	add    al,0x62
  401ead:	fnstenv [edi]
  401eaf:	inc    esi
  401eb0:	data16 fld DWORD PTR [edi]
  401eb3:	inc    esi
  401eb4:	pop    esi
  401eb5:	fst    DWORD PTR [ecx]
  401eb7:	inc    esi
  401eb8:	data16 fnstcw WORD PTR [ebx+0x46]
  401ebc:	pop    esi
  401ebd:	fst    DWORD PTR [ebx+0x46]
  401ec0:	data16 fnstcw WORD PTR [edi]
  401ec3:	inc    esi
  401ec4:	pop    esi
  401ec5:	fstp   DWORD PTR [ecx-0x742699ba]
  401ecb:	inc    esi
  401ecc:	pop    esi
  401ecd:	fstp   DWORD PTR [edi+0x46]
  401ed0:	data16 fpatan 
  401ed3:	inc    esi
  401ed4:	pop    esi
  401ed5:	(bad)  [ebx]
  401ed7:	inc    edi
  401ed8:	data16 fst DWORD PTR [ecx]
  401edb:	inc    edi
  401edc:	pop    esi
  401edd:	fnstenv [ebx-0x5c2699ba]
  401ee3:	inc    esi
	...
  401ef8:	pop    esi
  401ef9:	(bad)  
  401efb:	inc    edi
  401efc:	data16 fld DWORD PTR [ebx+0x47]
  401f00:	pop    esi
  401f01:	(bad)  
  401f03:	inc    esp
  401f04:	fnstenvw [edi+0x47]
  401f08:	pop    esi
  401f09:	fst    DWORD PTR [ebx-0x162699ba]
  401f0f:	add    esp,DWORD PTR [edx-0x27]
  401f12:	retf   
  401f13:	cmp    al,0x66
  401f15:	fst    DWORD PTR [ecx+0x63d95e3c]
  401f1b:	cmp    eax,0x3d4bd966
  401f20:	pop    esi
  401f21:	fpatan 
  401f23:	cmp    al,0x66
  401f25:	fnstenv [ebx]
  401f27:	cmp    eax,0x3d1dd95e
  401f2c:	data16 fld st(1)
  401f2f:	cmp    ebx,DWORD PTR [esi-0x27]
  401f32:	jmp    0x8019813a
  401f37:	dec    edx
  401f38:	pop    esi
  401f39:	fld    DWORD PTR [eax]
  401f3b:	jge    0x401ee5
  401f3d:	aad    0x0
  401f3f:	xchg   ebp,eax
  401f40:	test   al,0xd5
  401f42:	add    BYTE PTR [ebx-0x70ff2a68],cl
  401f48:	cwde   
  401f49:	aad    0x0
  401f4b:	inc    ecx
  401f4c:	test   al,0xd5
  401f4e:	add    BYTE PTR [ecx-0x58],dh
  401f51:	aad    0x0
  401f53:	jne    0x401eed
  401f55:	aad    0x0
  401f57:	std    
  401f58:	cwde   
  401f59:	aad    0x0
  401f5b:	sldt   WORD PTR [eax]
	...
  401f6e:	add    BYTE PTR [eax],al
  401f70:	test   eax,0xa91b00d5
  401f75:	aad    0x0
  401f77:	scas   eax,DWORD PTR es:[edi]
  401f78:	cwde   
  401f79:	aad    0x0
  401f7b:	pop    ss
  401f7c:	cdq    
  401f7d:	aad    0x0
  401f7f:	cmc    
  401f80:	test   al,0xd5
  401f82:	add    BYTE PTR [ebx],ah
  401f84:	test   al,0xd5
  401f86:	add    cl,ch
  401f88:	popa   
  401f89:	fld    DWORD PTR [eax]
  401f8b:	in     eax,0x24
  401f8d:	aad    0x0
  401f8f:	jmp    0x3d40f8f5
  401f94:	(bad)  
  401f95:	aad    0x0
  401f97:	daa    
  401f98:	xchg   ebp,eax
  401f99:	aad    0x0
  401f9b:	std    
  401f9c:	mov    dl,ch
  401f9e:	add    ch,al
  401fa0:	jp     0x401f77
  401fa2:	add    BYTE PTR [ebx-0x66ff2a86],ch
  401fa8:	push   0xffffffd5
  401faa:	add    BYTE PTR [ecx+0x7f00d56a],cl
  401fb0:	pop    edx
  401fb1:	aad    0x0
  401fb3:	addr16 pop edx
  401fb5:	aad    0x0
  401fb7:	test   DWORD PTR [ebp-0x2b],edx
  401fba:	add    BYTE PTR [ebx-0x6aff2ab3],dl
  401fc0:	xor    eax,0x2d9f00d5
  401fc5:	aad    0x0
  401fc7:	add    BYTE PTR [ecx-0x5efffb1f],dl
  401fcd:	loope  0x401fd3
  401fcf:	add    BYTE PTR [ebp-0x2d],al
  401fd2:	add    al,0x0
	...
  401fe8:	imul   edx,ebx,0x4
  401feb:	add    BYTE PTR ds:0x270004d3,dh
  401ff1:	rol    DWORD PTR [eax+eax*1],cl
  401ff4:	adc    ebx,0x4
  401ff7:	add    BYTE PTR [ebx-0x2d],dh
  401ffa:	add    al,0x0
  401ffc:	pop    ebp
  401ffd:	rol    DWORD PTR [eax+eax*1],cl
  402000:	mov    ebx,0xbf0004d3
  402005:	rol    DWORD PTR [eax+eax*1],cl
  402008:	mov    ds:0x390004d3,eax
  40200d:	rol    DWORD PTR [eax+eax*1],cl
  402010:	dec    ecx
  402011:	rol    DWORD PTR [eax+eax*1],cl
  402014:	test   eax,0x350004d3
  402019:	rol    DWORD PTR [eax+eax*1],cl
  40201c:	repz rol DWORD PTR [eax+eax*1],1
  402020:	psrld  mm0,QWORD PTR [eax+eax*1]
  402024:	rcl    ecx,cl
  402026:	add    al,0x0
  402028:	add    edx,edx
  40202a:	add    al,0x0
  40202c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40202d:	rol    DWORD PTR [eax+eax*1],1
  402030:	jmp    0x4b402506
  402035:	rol    BYTE PTR [eax+eax*1],cl
  402038:	cmp    edx,edx
  40203a:	add    al,0x0
  40203c:	adc    edx,edx
  40203e:	add    al,0x0
  402040:	ins    DWORD PTR es:[edi],dx
  402041:	rol    BYTE PTR [eax+eax*1],cl
  402044:	dec    ebp
  402045:	rol    BYTE PTR [eax+eax*1],cl
  402048:	jno    0x40201c
  40204a:	add    al,0x0
	...
  402060:	stos   DWORD PTR es:[edi],eax
  402061:	rol    DWORD PTR [eax+eax*1],1
  402064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402065:	rol    DWORD PTR [eax+eax*1],1
  402068:	bound  edx,QWORD PTR [esi]
  40206a:	sub    eax,DWORD PTR [edx+eiz*2]
  40206d:	or     BYTE PTR [ebx],ch
  40206f:	add    al,0x62
  402071:	lock sub al,0x4
  402074:	(bad)  
  402075:	les    ebp,FWORD PTR [esp+eax*1]
  402078:	(bad)
  40207d:	call   0xeea224ae
  402082:	sub    al,0x4
  402084:	bound  ecx,QWORD PTR [ebx+ebp*1+0x2b8a6204]
  40208b:	add    al,0x62
  40208d:	mov    al,ds:0x9c62042b
  402092:	sub    eax,DWORD PTR [edx+eiz*2]
  402095:	je     0x4020c2
  402097:	add    al,0x62
  402099:	pop    esi
  40209a:	sub    eax,DWORD PTR [edx+eiz*2]
  40209d:	xchg   BYTE PTR [ebx],ch
  40209f:	add    al,0x62
  4020a1:	adc    ch,BYTE PTR [edx]
  4020a3:	add    al,0x62
  4020a5:	fisubr WORD PTR [ebx]
  4020a7:	add    al,0x62
  4020a9:	imul   BYTE PTR [ebx]
  4020ab:	add    al,0x62
  4020ad:	cmp    ch,BYTE PTR [edx]
  4020af:	add    al,0x62
  4020b1:	sub    BYTE PTR [edx],ch
  4020b3:	add    al,0x62
  4020b5:	pop    eax
  4020b6:	sub    al,BYTE PTR [edx+eiz*2]
  4020b9:	mov    dl,0x2a
  4020bb:	add    al,0x62
  4020bd:	xchg   edx,eax
  4020be:	sub    al,BYTE PTR [edx+eiz*2]
  4020c1:	ret    0x42a
	...
  4020d8:	(bad)  
  4020d9:	fsubr  DWORD PTR [edx]
  4020db:	add    al,0x62
  4020dd:	repnz sub al,BYTE PTR [edx+eiz*2]
  4020e1:	out    0x2a,al
  4020e3:	add    al,0x62
  4020e5:	ss sub eax,0x2d526204
  4020eb:	add    al,0x62
  4020ed:	dec    eax
  4020ee:	sub    eax,0x3f666204
  4020f3:	add    al,0x62
  4020f5:	fldcw  WORD PTR [ecx]
  4020f7:	inc    eax
  4020f8:	pop    esi
  4020f9:	fldcw  WORD PTR [ebx]
  4020fb:	xor    al,0x66
  4020fd:	fnstenv [edi]
  4020ff:	xor    al,0x5e
  402101:	fst    DWORD PTR [edi+0x34]
  402104:	data16 fldcw WORD PTR [edi+0x34]
  402108:	pop    esi
  402109:	fstp   DWORD PTR [edi+0x34]
  40210c:	data16 fnstcw WORD PTR [ebx+0x34]
  402110:	pop    esi
  402111:	fldenv [ebx-0x402699cc]
  402117:	xor    al,0x5e
  402119:	(bad)  [ebx-0x662699cc]
  40211f:	xor    al,0x5e
  402121:	fldl2t 
  402123:	xor    al,0x66
  402125:	fprem1 
  402127:	xor    al,0x5e
  402129:	(bad)  
  40212b:	xor    al,0x66
  40212d:	fld    st(5)
  40212f:	xor    al,0x5e
  402131:	fldcw  WORD PTR [edi-0x3e2699cc]
  402137:	xor    al,0x5e
  402139:	fxch   st(7)
  40213b:	xor    al,0x0
	...
  40214d:	add    BYTE PTR [eax],al
  40214f:	add    BYTE PTR [esi-0x27],ah
  402152:	shl    DWORD PTR [esi+ebx*2],cl
  402155:	fldenv [edi+0x35]
  402158:	data16 fstp DWORD PTR [ebx+0x35]
  40215c:	pop    esi
  40215d:	fstp   DWORD PTR [edi+0x35]
  402160:	data16 fnstcw WORD PTR [ebx+0x35]
  402164:	pop    esi
  402165:	fldcw  WORD PTR [ecx]
  402167:	xor    eax,0x3537d966
  40216c:	pop    esi
  40216d:	fld    DWORD PTR [edi]
  40216f:	xor    eax,0x31e9d966
  402174:	pop    esi
  402175:	(bad)  
  402177:	xor    DWORD PTR [esi-0x27],esp
  40217a:	loope  0x4021bb
  40217c:	pop    esi
  40217d:	(bad)  
  40217f:	aas    
  402180:	data16 fld DWORD PTR [eax]
  402183:	retf   
  402184:	push   ebx
  402185:	fld    QWORD PTR [eax]
  402187:	mov    edi,0x2500dd53
  40218c:	push   eax
  40218d:	fld    QWORD PTR [eax]
  40218f:	mov    ch,0x35
  402191:	fld    QWORD PTR [eax]
  402193:	cmp    DWORD PTR [eax],esi
  402195:	fld    QWORD PTR [eax]
  402197:	dec    ecx
  402198:	xor    ch,bl
  40219a:	add    BYTE PTR [edi+0x30],dl
  40219d:	fld    QWORD PTR [eax]
  40219f:	imul   edx,DWORD PTR [ebx-0x6ca2ff23],0x938b00dd
  4021a9:	fld    QWORD PTR [eax]
  4021ab:	popa   
  4021ac:	xchg   ebx,eax
  4021ad:	fld    QWORD PTR [eax]
  4021af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021b0:	jae    0x40218f
  4021b2:	add    BYTE PTR [ebp+0x0],bh
	...
  4021c8:	jae    0x4021a7
  4021ca:	add    BYTE PTR [ebp+0x7900dd73],al
  4021d0:	jae    0x4021af
  4021d2:	add    ch,ah
  4021d4:	push   eax
  4021d5:	fld    QWORD PTR [eax]
  4021d7:	fst    QWORD PTR [eax-0x23]
  4021da:	add    BYTE PTR [ecx+0x2500dd50],bh
  4021e0:	push   ecx
  4021e1:	fld    QWORD PTR [eax]
  4021e3:	lods   eax,DWORD PTR ds:[esi]
  4021e4:	xor    ch,bl
  4021e6:	add    ch,cl
  4021e8:	xor    ch,bl
  4021ea:	add    ch,cl
  4021ec:	xor    ch,bl
  4021ee:	add    BYTE PTR [ecx+0x30],bl
  4021f1:	fld    QWORD PTR [eax]
  4021f3:	mov    DWORD PTR [eax-0x6f7eff23],edx
  4021f9:	fld    QWORD PTR [eax]
  4021fb:	jno    0x40218d
  4021fd:	fld    QWORD PTR [eax]
  4021ff:	xor    edx,DWORD PTR [eax+0x704300dd]
  402205:	fld    QWORD PTR [eax]
  402207:	add    eax,0xf00dd70
  40220c:	jo     0x4021eb
  40220e:	add    BYTE PTR [eax],al
  402210:	xchg   ebp,ecx
  402212:	add    al,0x0
  402214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402215:	int    0x4
  402217:	add    cl,bl
  402219:	int    0x4
  40221b:	add    BYTE PTR [ecx+0x230004cd],bh
  402221:	rol    DWORD PTR [eax+eax*1],1
  402224:	adc    edx,ecx
  402226:	add    al,0x0
  402228:	adc    edx,ecx
  40222a:	add    al,0x0
	...
  402240:	add    edx,ecx
  402242:	add    al,0x0
  402244:	add    ecx,edx
  402246:	add    al,0x0
  402248:	fcmovnbe st,st(1)
  40224a:	add    al,0x0
  40224c:	iret   
  40224d:	rol    DWORD PTR [eax+eax*1],1
  402250:	cmp    ebx,ecx
  402252:	add    BYTE PTR [eax],al
  402254:	stc    
  402255:	iret   
  402256:	add    al,0x0
  402258:	ror    edi,cl
  40225a:	add    al,0x0
  40225c:	test   edi,0xd93b0004
  402262:	add    BYTE PTR [eax],al
  402264:	xor    eax,0x98000d9
  402269:	fld    DWORD PTR [eax]
  40226b:	add    BYTE PTR [ebx],0xd9
  40226e:	add    BYTE PTR [eax-0x7fff26fe],al
  402274:	sti    
  402275:	fadd   DWORD PTR [eax]
  402277:	add    BYTE PTR [ebx],cl
  402279:	lahf   
  40227a:	add    al,0x0
  40227c:	fwait
  40227d:	pushf  
  40227e:	add    al,0x0
  402280:	xor    DWORD PTR [esp+eax*1+0xd8fb00],ebx
  402287:	add    bl,ah
  402289:	pushf  
  40228a:	add    al,0x0
  40228c:	out    0x9c,eax
  40228e:	add    al,0x0
  402290:	sub    ebx,DWORD PTR [esp+eax*1+0x49bfd00]
  402297:	add    bl,bl
  402299:	fwait
  40229a:	add    al,0x0
  40229c:	bound  esp,QWORD PTR [eax+0x46]
  40229f:	add    al,0x62
  4022a1:	je     0x4022e9
  4022a3:	add    al,0x0
	...
  4022b5:	add    BYTE PTR [eax],al
  4022b7:	add    BYTE PTR [edx+0x46],ah
  4022ba:	inc    esi
  4022bb:	add    al,0x62
  4022bd:	sbb    al,BYTE PTR [esi+0x4]
  4022c0:	bound  ebx,QWORD PTR [esi+eax*2]
  4022c3:	add    al,0x62
  4022c5:	and    BYTE PTR [esi+0x4],al
  4022c8:	bound  edx,QWORD PTR [esi+eax*2]
  4022cb:	add    al,0x62
  4022cd:	add    BYTE PTR [esi+0x4],al
  4022d0:	bound  ebx,QWORD PTR [esi]
  4022d2:	inc    edi
  4022d3:	add    al,0x62
  4022d5:	and    al,BYTE PTR [edi+0x4]
  4022d8:	bound  esi,QWORD PTR [edx+0x47]
  4022db:	add    al,0x62
  4022dd:	inc    edx
  4022de:	inc    edi
  4022df:	add    al,0x62
  4022e1:	pop    esp
  4022e2:	inc    edi
  4022e3:	add    al,0x62
  4022e5:	jp     0x40232e
  4022e7:	add    al,0x62
  4022e9:	mov    esi,0xdc620448
  4022ee:	dec    eax
  4022ef:	add    al,0x62
  4022f1:	aam    0x48
  4022f3:	add    al,0x62
  4022f5:	xor    al,0x3
  4022f7:	add    dl,ah
  4022f9:	(bad)  
  4022fa:	dec    eax
  4022fb:	add    al,0x62
  4022fd:	dec    esi
  4022fe:	inc    edi
  4022ff:	add    al,0x62
  402301:	and    al,BYTE PTR [edi+0x4]
  402304:	bound  ebp,QWORD PTR [edi+eax*2+0x3026204]
  40230b:	add    BYTE PTR [edx+0x3e],ah
  40230e:	inc    ebp
  40230f:	add    al,0x62
  402311:	lock inc esi
  402313:	add    al,0x62
  402315:	loop   0x40235d
  402317:	add    al,0x62
  402319:	add    al,BYTE PTR [ebx]
	...
  40232f:	add    BYTE PTR [edx-0x5e],ah
  402332:	cs add al,0x62
  402335:	mov    esp,0x8662042e
  40233a:	cs add al,0x62
  40233d:	fst    DWORD PTR [ebx+0x2e]
  402340:	data16 fnstcw WORD PTR [ecx+0x2e]
  402344:	pop    esi
  402345:	fst    DWORD PTR [ebp-0x782699d2]
  40234b:	cs pop esi
  40234d:	fnstenv [edi-0x4a2699d2]
  402353:	cs pop esi
  402355:	fxch   st(5)
  402357:	cs data16 (bad) 
  40235b:	cs pop esi
  40235d:	fldl2t 
  40235f:	sub    BYTE PTR [esi-0x27],ah
  402362:	lds    ebp,FWORD PTR [eax]
  402364:	pop    esi
  402365:	fldenv [edi+0x7fd96628]
  40236b:	sub    BYTE PTR [esi-0x27],bl
  40236e:	pop    ebx
  40236f:	sub    BYTE PTR [esi-0x27],ah
  402372:	aas    
  402373:	sub    BYTE PTR [esi-0x27],bl
  402376:	sub    ebp,DWORD PTR [edx]
  402378:	data16 fst DWORD PTR ds:0x11d95e2a
  40237f:	sub    ah,BYTE PTR [esi-0x27]
  402382:	pop    ds
  402383:	sub    bl,BYTE PTR [esi-0x27]
  402386:	sub    ah,BYTE PTR gs:[esi-0x27]
  40238a:	dec    ecx
  40238b:	sub    bl,BYTE PTR [esi-0x27]
  40238e:	cmp    DWORD PTR [edx],ebp
  402390:	fldenvw [ebp+0x2a]
	...
  4023a7:	add    BYTE PTR [esi-0x27],bl
  4023aa:	sub    esp,DWORD PTR [bp-0x27]
  4023ae:	jns    0x4023d9
  4023b0:	pop    esi
  4023b1:	(bad)  [edi+0x2a]
  4023b4:	data16 fstp DWORD PTR [ebx+0x2a]
  4023b8:	pop    esi
  4023b9:	fldpi  
  4023bb:	sub    ah,BYTE PTR [esi-0x27]
  4023be:	repz sub bl,BYTE PTR [esi-0x27]
  4023c2:	pop    ss
  4023c3:	sub    esp,DWORD PTR [esi-0x27]
  4023c6:	test   eax,0xd95e2a
  4023cb:	popf   
  4023cc:	js     0x4023ab
  4023ce:	add    bh,al
  4023d0:	js     0x4023af
  4023d2:	add    cl,bh
  4023d4:	fld    QWORD PTR es:[eax]
  4023d7:	jmp    0x4023f7
  4023d9:	fld    QWORD PTR [eax]
  4023db:	pop    es
  4023dc:	fld    QWORD PTR es:[eax]
  4023df:	or     ebx,DWORD PTR [esi]
  4023e1:	fld    QWORD PTR [eax]
  4023e3:	or     DWORD PTR [eax-0x23],0x0
  4023e7:	daa    
  4023e8:	push   ds
  4023e9:	fld    QWORD PTR [eax]
  4023eb:	xor    esp,DWORD PTR [esi]
  4023ed:	fld    QWORD PTR [eax]
  4023ef:	cmp    eax,0x8900dd1e
  4023f4:	and    ebp,ebx
  4023f6:	add    BYTE PTR [ecx+0x21],bh
  4023f9:	fld    QWORD PTR [eax]
  4023fb:	imul   esp,DWORD PTR [ecx],0xffffffdd
  4023fe:	add    BYTE PTR [ebp+0x1e],dl
  402401:	fld    QWORD PTR [eax]
  402403:	dec    ebp
  402404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402405:	fld    QWORD PTR [eax]
  402407:	and    ebx,DWORD PTR [esi+0x2300dd]
	...
  40241d:	add    BYTE PTR [eax],al
  40241f:	add    BYTE PTR [esi-0x5e12ff23],ah
  402425:	fld    QWORD PTR [eax]
  402427:	jmp    0x4023b4
  402429:	fld    QWORD PTR [eax]
  40242b:	cmc    
  40242c:	mov    ebx,ebp
  40242e:	add    bh,dh
  402430:	jnp    0x40240f
  402432:	add    BYTE PTR [edi-0x6ff2285],dh
  402438:	inc    ebp
  402439:	fld    QWORD PTR [eax]
  40243b:	or     ecx,DWORD PTR [edx-0x23]
  40243e:	add    BYTE PTR [edi],bl
  402440:	cmp    bl,ch
  402442:	add    BYTE PTR [ecx],ah
  402444:	cmp    bl,ch
  402446:	add    BYTE PTR ds:0x900dd4a,bl
  40244c:	dec    edx
  40244d:	fld    QWORD PTR [eax]
  40244f:	add    esp,DWORD PTR [esi-0x5e0eff23]
  402455:	fld    QWORD PTR [eax]
  402457:	add    bh,dl
  402459:	xchg   ebp,eax
  40245a:	add    al,0x0
  40245c:	(bad)  
  40245d:	mov    ecx,0xb9bb0004
  402462:	add    al,0x0
  402464:	mov    eax,ebx
  402466:	add    al,0x0
  402468:	imul   eax,ebx,0xc3790004
  40246e:	add    al,0x0
  402470:	jg     0x402435
  402472:	add    al,0x0
  402474:	or     eax,0x2d0004c3
  402479:	ret    
  40247a:	add    al,0x0
  40247c:	add    ebx,eax
  40247e:	add    al,0x0
  402480:	add    ebx,eax
  402482:	add    al,0x0
	...
  402498:	adc    ebx,eax
  40249a:	add    al,0x0
  40249c:	pop    ss
  40249d:	les    eax,FWORD PTR [eax+eax*1]
  4024a0:	aaa    
  4024a1:	les    eax,FWORD PTR [eax+eax*1]
  4024a4:	inc    ecx
  4024a5:	les    eax,FWORD PTR [eax+eax*1]
  4024a8:	push   edi
  4024a9:	les    eax,FWORD PTR [eax+eax*1]
  4024ac:	ja     0x40246c
  4024ae:	add    al,0x0
  4024b0:	aaa    
  4024b1:	mov    esi,0xbe470004
  4024b6:	add    al,0x0
  4024b8:	idiv   DWORD PTR [edi-0x4012fffc]
  4024be:	add    al,0x0
  4024c0:	add    eax,ebx
  4024c2:	add    al,0x0
  4024c4:	cmc    
  4024c5:	ret    0x4
  4024c8:	(bad)
  4024cb:	add    BYTE PTR [ecx-0x58fffb3e],ah
  4024d1:	ret    0x4
  4024d4:	mov    ch,0xc2
  4024d6:	add    al,0x0
  4024d8:	retf   
  4024d9:	ret    0x4
  4024dc:	mov    eax,ds:0x330004bf
  4024e1:	mov    edi,0x6a620004
  4024e6:	cs add al,0x62
  4024e9:	pop    eax
  4024ea:	cs add al,0x62
  4024ed:	mov    al,0x2e
  4024ef:	add    al,0x62
  4024f1:	sbb    al,0x2d
  4024f3:	add    al,0x62
  4024f5:	push   ss
  4024f6:	sub    eax,0x28606204
  4024fb:	add    al,0x0
	...
  40250d:	add    BYTE PTR [eax],al
  40250f:	add    BYTE PTR [edx+0x76],ah
  402512:	sub    BYTE PTR [edx+eiz*2],al
  402515:	enter  0x444,0x62
  402519:	add    al,BYTE PTR [ebx]
  40251b:	add    BYTE PTR [edx-0x28],ah
  40251e:	cmp    eax,0x3dee6204
  402523:	add    al,0x62
  402525:	sar    BYTE PTR ds:0x3026204,1
  40252b:	add    BYTE PTR [edx-0x5a],ah
  40252e:	ds add al,0x62
  402531:	jbe    0x402571
  402533:	add    al,0x62
  402535:	cwde   
  402536:	ds add al,0x62
  402539:	sar    BYTE PTR [esi],1
  40253b:	add    al,0x62
  40253d:	les    edi,FWORD PTR [esi]
  40253f:	add    al,0x62
  402541:	jmp    0x43d:0x2662043e
  402548:	bound  ecx,QWORD PTR [eax+0x3a]
  40254b:	add    al,0x62
  40254d:	sbb    al,0x3a
  40254f:	add    al,0x62
  402551:	push   eax
  402552:	cmp    al,BYTE PTR [edx+eiz*2]
  402555:	cmp    al,BYTE PTR ss:[edx+eiz*2]
  402559:	add    al,BYTE PTR [ebx]
  40255b:	add    BYTE PTR [edx+0x5],ah
  40255e:	add    eax,DWORD PTR [eax]
  402560:	loop   0x40258f
  402562:	add    eax,DWORD PTR [eax]
  402564:	loop   0x40256b
  402566:	add    eax,DWORD PTR [eax]
  402568:	loop   0x40259b
  40256a:	add    eax,DWORD PTR [eax]
  40256c:	loop   0x402571
  40256e:	add    eax,DWORD PTR [eax]
  402570:	loop   0x40254a
  402572:	inc    BYTE PTR [ebx]
	...
  402588:	bound  ebx,QWORD PTR [ecx+0x21]
  40258b:	cmp    al,0x66
  40258d:	(bad)  
  40258f:	add    esp,DWORD PTR [edx+0x59]
  402592:	test   DWORD PTR [ebx],0x3b1b5962
  402598:	pop    esi
  402599:	fnstenv [ecx]
  40259b:	cmp    esp,DWORD PTR [esi-0x27]
  40259e:	jae    0x4025db
  4025a0:	pop    esi
  4025a1:	(bad)  
  4025a3:	add    esp,DWORD PTR [edx+0x59]
  4025a6:	push   ebx
  4025a7:	cmp    ebx,DWORD PTR [esi-0x27]
  4025aa:	jns    0x4025e7
  4025ac:	data16 fldcw WORD PTR [ecx+0x3b]
  4025b0:	pop    esi
  4025b1:	ftst   
  4025b3:	add    esp,DWORD PTR [edx+0x59]
  4025b6:	jge    0x4025f3
  4025b8:	pop    esi
  4025b9:	fxam   
  4025bb:	add    esp,DWORD PTR [edx+0x59]
  4025be:	jp     0x4025c3
  4025c0:	bound  ebx,QWORD PTR [ecx-0x16]
  4025c3:	add    esp,DWORD PTR [edx+0x59]
  4025c6:	cli    
  4025c7:	add    esp,DWORD PTR [edx+0x59]
  4025ca:	out    0x3,al
  4025cc:	bound  ebx,QWORD PTR [ecx-0x1c]
  4025cf:	add    esp,DWORD PTR [edx+0x59]
  4025d2:	or     edi,DWORD PTR [esi+eiz*2]
  4025d5:	fprem1 
  4025d7:	cmp    ebx,DWORD PTR [esi-0x27]
  4025da:	call   0x239987e2
  4025df:	cmp    al,0x5e
  4025e1:	(bad)  ds:0x16d9663c
  4025e7:	add    al,0x62
  4025e9:	pop    ecx
  4025ea:	clc    
  4025eb:	add    eax,DWORD PTR [eax]
	...
  4025fd:	add    BYTE PTR [eax],al
  4025ff:	add    BYTE PTR [edx+0x59],ah
  402602:	out    dx,eax
  402603:	add    esp,DWORD PTR [edx+0x59]
  402606:	jmp    0x419880e
  40260b:	cmp    BYTE PTR [esi-0x27],bl
  40260e:	sar    DWORD PTR [edx],cl
  402610:	data16 fld DWORD PTR [eax]
  402613:	mov    ebp,0xaf00d548
  402618:	cmp    ch,dl
  40261a:	add    BYTE PTR [ecx-0x44ff2ac8],dh
  402620:	sub    ch,dl
  402622:	add    BYTE PTR [edi-0x3aff2ad8],dh
  402628:	cwde   
  402629:	aad    0x0
  40262b:	mov    ebx,0x6900d598
  402630:	mov    ebp,edx
  402632:	add    BYTE PTR [ebx-0x77],ah
  402635:	aad    0x0
  402637:	push   ebp
  402638:	jns    0x40260f
  40263a:	add    BYTE PTR [edi+0x5100d579],al
  402640:	imul   edx,ebp,0xd961e900
  402646:	add    ch,bl
  402648:	push   ebp
  402649:	aad    0x0
  40264b:	repz push ecx
  40264d:	aad    0x0
  40264f:	fst    QWORD PTR [ecx-0x2b]
  402652:	add    ch,dh
  402654:	ins    BYTE PTR es:[edi],dx
  402655:	aad    0x0
  402657:	jmp    0x9740ffbd
  40265c:	aaa    
  40265d:	aad    0x0
  40265f:	sub    DWORD PTR [edi],0xffffffd5
  402662:	add    BYTE PTR [ecx+0x0],ch
	...
  402678:	daa    
  402679:	aad    0x0
  40267b:	popa   
  40267c:	lahf   
  40267d:	aad    0x0
  40267f:	aas    
  402680:	xchg   esp,eax
  402681:	aad    0x0
  402683:	dec    ebx
  402684:	mov    ebp,ss
  402686:	add    BYTE PTR [ecx-0x3cff2a79],dl
  40268c:	jg     0x402663
  40268e:	add    bl,ch
  402690:	je     0x402667
  402692:	add    cl,ch
  402694:	popa   
  402695:	fld    DWORD PTR [eax]
  402697:	in     eax,dx
  402698:	xor    eax,0x6b2af362
  40269d:	or     eax,DWORD PTR [edx+0x0]
  4026a0:	mov    eax,0x10de67d9
  4026a5:	repnz cld 
  4026a7:	and    esi,eax
  4026a9:	pop    eax
  4026aa:	mov    dh,0x3e
  4026ac:	jb     0x402727
  4026ae:	test   BYTE PTR [ebx+ebp*8-0x41],0xe3
  4026b3:	out    dx,eax
  4026b4:	mov    BYTE PTR es:[edi+0x6c597c3d],bl
  4026bb:	pop    esi
  4026bc:	imul   eax,DWORD PTR [edi],0xf441475f
  4026c2:	jmp    0x717bdafa
  4026c7:	jae    0x4026cd
  4026c9:	(bad)
  4026cd:	fcomp  DWORD PTR [ebp+0x4e]
  4026d0:	adc    al,0xce
  4026d2:	cs mov cl,0x1d
  4026d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026d6:	cwde   
  4026d7:	mov    bh,0x17
  4026d9:	xor    eax,0xa520
	...
  4026ee:	add    BYTE PTR [eax],al
  4026f0:	or     ebx,edi
  4026f2:	test   BYTE PTR [edi+0x1e],0xe2
  4026f6:	push   ss
  4026f7:	jae    0x4026b1
  4026f9:	sbb    BYTE PTR [edi+0x3336fa16],ch
  4026ff:	sub    DWORD PTR [ebp-0x26ee2d7e],esi
  402705:	push   es
  402706:	(bad)  
  402707:	mov    edi,0x603e5d3c
  40270c:	dec    ecx
  40270d:	test   BYTE PTR [edi],al
  40270f:	cmc    
  402710:	call   0x40:0xd211d34c
  402717:	add    BYTE PTR [ebx],ah
  402719:	xlat   BYTE PTR ds:[ebx]
  40271a:	loop   0x40273d
  40271c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40271d:	xor    ebp,DWORD PTR ss:[ecx]
  402720:	xor    eax,0x9911d282
  402725:	add    edi,edi
  402727:	mov    edi,0x603e5d7c
  40272c:	bound  esp,QWORD PTR [edx+0x5c024829]
  402732:	cmp    eax,0xce9ca79c
  402737:	ja     0x4026dc
  402739:	jb     0x4026ee
  40273b:	xchg   ebp,eax
  40273c:	or     eax,0xf5897a8e
  402741:	ss mov edx,0xd8609c32
  402747:	fisub  DWORD PTR [ebp+edx*4+0x13]
  40274b:	sbb    dh,al
  40274d:	mov    esp,0x8d6ea53f
  402752:	sub    eax,0x6c
	...
  402767:	add    BYTE PTR [eax],ch
  402769:	push   ebx
  40276a:	xchg   edx,eax
  40276b:	lahf   
  40276c:	push   esp
  40276d:	xor    bh,ch
  40276f:	jge    0x402740
  402771:	inc    eax
  402772:	fimul  DWORD PTR [edx+esi*2+0x9]
  402776:	push   ebp
  402777:	fsub   DWORD PTR [edx]
  402779:	mov    gs,WORD PTR [edx]
  40277b:	mov    ecx,0x9bf8b651
  402780:	mov    cs,WORD PTR [edx-0x4e30aad9]
  402786:	(bad)  
  402787:	dec    edx
  402788:	sbb    eax,0x5efc0d84
  40278d:	and    ch,BYTE PTR [esi-0x49]
  402790:	dec    edx
  402791:	in     eax,0x1d
  402793:	(bad)  
  402795:	mov    esp,0x341ce848
  40279a:	repz and esi,DWORD PTR [edi+ebp*2+0x57d5283d]
  4027a2:	mov    ebx,0x947ad365
  4027a7:	mov    ebp,0x53e67ca0
  4027ac:	jb     0x402734
  4027ae:	sbb    ebx,DWORD PTR [edx+0x60]
  4027b1:	test   al,0x27
  4027b3:	xor    eax,0xd15397ab
  4027b8:	push   ebx
  4027b9:	fst    DWORD PTR [edi-0x63]
  4027bc:	bound  ebx,QWORD PTR [ecx]
  4027be:	cs scas al,BYTE PTR es:[edi]
  4027c0:	fidivr DWORD PTR [eax-0x73189418]
  4027c6:	push   0x71ea2570
  4027cb:	add    BYTE PTR ss:[eax],al
	...
  4027de:	add    BYTE PTR [eax],al
  4027e0:	bound  edi,QWORD PTR [edi]
  4027e2:	jmp    0x69f55c1f
  4027e7:	popf   
  4027e8:	push   eax
  4027e9:	sub    eax,0xea2570ee
  4027ee:	jno    0x402826
  4027f0:	bound  edi,QWORD PTR [edi]
  4027f2:	jmp    0x61f55c2f
  4027f7:	shl    DWORD PTR [edi-0x4c],0x7f
  4027fb:	push   0xffffffb0
  4027fd:	jmp    0xe9a2637c
  402802:	mov    ds:0x6583e304,eax
  402807:	test   eax,0xf0aecb8
  40280c:	xchg   ebx,eax
  40280d:	jmp    0x19a29266
  402812:	scas   al,BYTE PTR es:[edi]
  402813:	retf   
  402814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402815:	or     edx,DWORD PTR [edi]
  402817:	lea    esp,[ebx-0x4c8c1b76]
  40281d:	jmp    0x19a2bb76
  402822:	scas   al,BYTE PTR es:[edi]
  402823:	retf   
  402824:	xchg   DWORD PTR [ebx],ecx
  402826:	push   eax
  402827:	daa    
  402828:	aaa    
  402829:	mov    ds:0xe9935282,al
  40282e:	xchg   edi,eax
  40282f:	stos   BYTE PTR es:[edi],al
  402830:	bound  ebx,QWORD PTR [ecx]
  402832:	cs call 0x6fc7:0x146fb8da
  40283a:	push   ds
  40283b:	sti    
  40283c:	xor    ebp,ecx
  40283e:	jl     0x40281d
  402840:	(bad)  
  402841:	jmp    0x407c78
	...
  402856:	add    BYTE PTR [eax],al
  402858:	test   BYTE PTR [eax+eax*1],cl
  40285b:	push   esp
  40285c:	jnp    0x40284b
  40285e:	lea    edi,[ecx+0x4e4b46ea]
  402864:	jmp    0x402809
  402866:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402867:	sub    ah,BYTE PTR [esi+ebp*2-0x5a]
  40286b:	daa    
  40286c:	cdq    
  40286d:	cmp    ch,BYTE PTR [ebp-0x2a]
  402870:	push   ebx
  402871:	daa    
  402872:	adc    DWORD PTR [edi+0x1f],edx
  402875:	fcmovb st,st(0)
  402877:	cs call 0x77448de
  40287d:	push   ebx
  40287e:	jmp    0x40283a
  402880:	dec    edi
  402881:	daa    
  402882:	adc    DWORD PTR [edi-0x513f25e1],edx
  402888:	retf   
  402889:	popa   
  40288a:	and    BYTE PTR [eax+0x63],dl
  40288d:	inc    esi
  40288e:	mov    bh,0xf4
  402890:	sbb    ah,BYTE PTR [edi]
  402892:	adc    DWORD PTR [eax-0x5cef269e],ecx
  402898:	pusha  
  402899:	test   al,0x5a
  40289b:	cmp    ecx,DWORD PTR [eax-0x1c]
  40289e:	(bad)  
  40289f:	iret   
  4028a0:	jnp    0x4028ca
  4028a2:	adc    DWORD PTR [ecx+ebx*8-0x27],edx
  4028a6:	shr    BYTE PTR [esi-0x4100f317],0x18
  4028ad:	cmp    ch,BYTE PTR [ebp-0x2a]
  4028b0:	push   ebx
  4028b1:	daa    
  4028b2:	adc    DWORD PTR [edi-0x61],edx
  4028b5:	fld    st(0)
  4028b7:	scas   al,BYTE PTR es:[edi]
  4028b8:	jmp    0x40291b
  4028ba:	and    BYTE PTR [eax+0x0],ch
	...
  4028cd:	add    BYTE PTR [eax],al
  4028cf:	add    al,cl
  4028d1:	out    0xdc,eax
  4028d3:	outs   dx,BYTE PTR ds:[esi]
  4028d4:	or     al,0x1a
  4028d6:	adc    DWORD PTR [ecx+0x12],esi
  4028d9:	fldcw  WORD PTR [edx+0x24bb14e9]
  4028df:	scas   al,BYTE PTR es:[edi]
  4028e0:	ja     0x40294d
  4028e2:	les    esp,FWORD PTR [edx-0xb]
  4028e5:	adc    DWORD PTR es:[eax],eax
  4028e8:	mov    esi,0x81100042
  4028ed:	(bad)  
  4028ee:	add    DWORD PTR [ecx+esi*1],0x5e
  4028f2:	mov    edi,0xd31bccbf
  4028f7:	adc    DWORD PTR [edx-0x5ef000f5],ebx
  4028fd:	(bad)  
  4028fe:	push   ecx
  4028ff:	pop    edx
  402900:	jg     0x402941
  402902:	lods   al,BYTE PTR ds:[esi]
  402903:	inc    esp
  402904:	out    0xfd,eax
  402906:	iret   
  402907:	adc    DWORD PTR [ebx+0x34c000aa],ebx
  40290d:	outs   dx,DWORD PTR ds:[esi]
  40290e:	mov    BYTE PTR [eax],ah
  402910:	mulps  xmm6,XMMWORD PTR [ebx+0x31]
  402914:	cli    
  402915:	loope  0x40290b
  402917:	dec    esp
  402918:	loope  0x4028c3
  40291a:	push   edi
  40291b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40291c:	mov    cl,0xfe
  40291e:	sbb    BYTE PTR [esi+0x53],dl
  402921:	or     BYTE PTR [ebx+0x67],0x59
  402925:	or     al,dl
  402927:	adc    esi,esi
  402929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40292a:	add    al,al
  40292c:	hlt    
  40292d:	dec    ebp
  40292e:	std    
  40292f:	jmp    FWORD PTR [edx]
  402931:	lahf   
  402932:	jns    0x402936
	...
  402948:	mov    edx,0x1811ce4e
  40294d:	iret   
  40294e:	add    BYTE PTR [eax],al
  402950:	mov    ebx,0x120100d5
  402955:	dec    edx
  402956:	push   esi
  402957:	xchg   ebp,eax
  402958:	aaa    
  402959:	push   esp
  40295a:	iret   
  40295b:	adc    DWORD PTR [eax],ebx
  40295d:	js     0x40295f
  40295f:	stos   BYTE PTR es:[edi],al
  402960:	jnp    0x402945
  402962:	inc    eax
  402963:	(bad)  
  402964:	call   0xd0d8:0xb145902d
  40296b:	adc    edx,esi
  40296d:	xlat   BYTE PTR ds:[ebx]
  40296e:	add    BYTE PTR [edx+0x242e9c7b],ch
  402974:	bound  edi,QWORD PTR [eax]
  402976:	push   ss
  402977:	sahf   
  402978:	push   ds
  402979:	jl     0x40291b
  40297b:	shl    BYTE PTR [ebx+0x75],cl
  40297e:	mov    eax,0x1bc7200
  402983:	and    DWORD PTR [esi-0x26],0x24
  402987:	mov    ebp,0xd0f7d3ab
  40298c:	push   ebx
  40298d:	lods   eax,DWORD PTR ds:[esi]
  40298e:	pop    ebx
  40298f:	add    BYTE PTR [edx],ah
  402991:	mov    eax,0xe61dfdbc
  402996:	stos   BYTE PTR es:[edi],al
  402997:	lods   al,BYTE PTR ds:[esi]
  402998:	sahf   
  402999:	push   esi
  40299a:	in     al,dx
  40299b:	shl    BYTE PTR [ebx-0x6e],1
  40299e:	pusha  
  40299f:	add    BYTE PTR [edx],ah
  4029a1:	mov    eax,0xce42889a
  4029a6:	jecxz  0x40292f
  4029a8:	or     DWORD PTR [ebp+edx*1-0x2e],eax
	...
  4029c0:	push   ebx
  4029c1:	jo     0x40298e
  4029c3:	add    BYTE PTR [edx],ah
  4029c5:	cmp    BYTE PTR [ecx+0x20848288],bl
  4029cb:	xor    eax,0xd1321b2b
  4029d0:	jae    0x402a42
  4029d2:	stos   BYTE PTR es:[edi],al
  4029d3:	add    BYTE PTR [edx-0x7d7766c9],ah
  4029d9:	ja     0x402985
  4029db:	adc    dl,BYTE PTR [esi+0x53cf5437]
  4029e1:	mov    cl,BYTE PTR [edi+0x0]
  4029e4:	clc    
  4029e5:	repnz dec ebx
  4029e7:	cs inc esi
  4029e9:	mov    ch,0xc2
  4029eb:	pop    ecx
  4029ec:	rol    DWORD PTR [ebx],0xeb
  4029ef:	xor    al,0x1a
  4029f1:	mov    WORD PTR [esi],gs
  4029f3:	mov    edx,0x7d582505
  4029f8:	hlt    
  4029f9:	or     edi,DWORD PTR [edi]
  4029fb:	sar    DWORD PTR [ebp+0x7b],cl
  4029fe:	sbb    BYTE PTR [esi+0x1a],bl
  402a01:	fstp   DWORD PTR [edi+eiz*1-0x45fb3fc1]
  402a08:	cmc    
  402a09:	adc    ch,cl
  402a0b:	add    esp,DWORD PTR [edx-0x27]
  402a0e:	jmp    0x2a198c16
  402a13:	xchg   BYTE PTR [ecx+0x6603e5d9],ah
  402a19:	fabs   
  402a1b:	add    ebx,DWORD PTR [esi-0x27]
  402a1e:	cdq    
  402a1f:	test   BYTE PTR [ecx+0x3edd9],ah
	...
  402a35:	add    BYTE PTR [eax],al
  402a37:	add    BYTE PTR [edi-0x27],bl
  402a3a:	stc    
  402a3b:	add    ebp,DWORD PTR [edx-0x27]
  402a3e:	mov    ecx,0xe5d9a184
  402a43:	add    esp,DWORD PTR [ecx+ebx*8-0x37]
  402a47:	add    eax,DWORD PTR [edx-0x27]
  402a4a:	cdq    
  402a4b:	test   BYTE PTR [ecx+0x5e03edd9],ah
  402a51:	(bad)  
  402a53:	add    edx,DWORD PTR [edx-0x27]
  402a56:	jmp    0xf219cbe3
  402a5b:	add    esi,DWORD PTR [edx-0x27]
  402a5e:	or     DWORD PTR [edx+eax*4],eax
  402a61:	fldl2t 
  402a63:	mov    BYTE PTR [ecx],ah
  402a65:	fyl2x  
  402a67:	add    esi,DWORD PTR [edx-0x27]
  402a6a:	imul   eax,DWORD PTR [ebx],0x88e9d8e2
  402a70:	and    ecx,ebx
  402a72:	loope  0x402a77
  402a74:	sbb    cl,0x69
  402a77:	add    esp,DWORD PTR [edx-0x26]
  402a7a:	jmp    0xca194c07
  402a7f:	add    esp,edx
  402a81:	fsubr  st,st(3)
  402a83:	add    ah,BYTE PTR [edx-0x23]
  402a86:	jmp    0xca194c13
  402a8b:	add    esp,DWORD PTR [eax-0x26]
  402a8e:	add    bl,ch
  402a90:	pusha  
  402a91:	fst    DWORD PTR [eax]
  402a93:	jmp    0xe940c672
  402a98:	popa   
  402a99:	fld    DWORD PTR [eax]
  402a9b:	jmp    0x402aa0
	...
  402ab0:	popa   
  402ab1:	fld    DWORD PTR [eax]
  402ab3:	dec    ecx
  402ab4:	pop    ebp
  402ab5:	fld    DWORD PTR [eax]
  402ab7:	jmp    0xe940d415
  402abc:	pop    ecx
  402abd:	jmp    0x8aa9ffc2
  402ac2:	add    bl,bl
  402ac4:	pop    esp
  402ac5:	out    0x0,al
  402ac7:	jmp    0xe940b425
  402acc:	pop    ecx
  402acd:	leave  
  402ace:	add    cl,ch
  402ad0:	outs   dx,BYTE PTR ds:[esi]
  402ad1:	sbb    DWORD PTR [eax],eax
  402ad3:	stc    
  402ad4:	pop    esp
  402ad5:	rol    DWORD PTR [eax],cl
  402ad7:	jmp    0xe940a435
  402adc:	pop    ecx
  402add:	mov    ecx,0x396ee900
  402ae2:	add    cl,ch
  402ae4:	imul   ebx,ecx,0x5959e900
  402aea:	add    cl,ch
  402aec:	pop    ecx
  402aed:	cdq    
  402aee:	add    cl,ch
  402af0:	outs   dx,BYTE PTR ds:[esi]
  402af1:	stc    
  402af2:	(bad)  
  402af3:	clc    
  402af4:	pop    esp
  402af5:	fild   WORD PTR [eax]
  402af7:	jmp    0xe940cc55
  402afc:	pop    ecx
  402afd:	loope  0x402aff
  402aff:	jmp    0xda409472
  402b04:	pop    esp
  402b05:	ret    0xe900
  402b08:	pop    ecx
  402b09:	add    DWORD PTR [eax],0xc159e9
  402b0f:	jmp    0xf8405482
	...
  402b28:	pop    esp
  402b29:	call   0x719a142e
  402b2e:	add    BYTE PTR [eax],al
  402b30:	jnp    0x402b04
  402b32:	sub    BYTE PTR [eax],al
  402b34:	mov    edx,ebp
  402b36:	mov    al,0x0
  402b38:	mov    edx,edx
  402b3a:	or     BYTE PTR [eax],al
  402b3c:	jnp    0x402b10
  402b3e:	mov    BYTE PTR [eax],al
  402b40:	jnp    0x402b14
  402b42:	dec    eax
  402b43:	add    BYTE PTR [ebx-0x2b],cl
  402b46:	lock add BYTE PTR [ebx-0x21],bl
  402b4a:	add    al,0x0
  402b4c:	cmp    edx,edx
  402b4e:	push   esp
  402b4f:	add    BYTE PTR [ebx],bh
  402b51:	rcl    BYTE PTR [eax+eax*1],cl
  402b54:	push   ss
  402b55:	shl    bl,cl
  402b57:	add    BYTE PTR [eax],bl
  402b59:	fild   QWORD PTR [ebx]
  402b5b:	add    BYTE PTR [ebx],bh
  402b5d:	shl    BYTE PTR [eax+eax*1+0x3b],cl
  402b61:	shl    BYTE PTR [eax+eax*1],cl
  402b64:	or     edx,ebp
  402b66:	enter  0x1a00,0xdf
  402b6a:	or     eax,0x64d1fb00
  402b6f:	add    bl,bh
  402b71:	shl    DWORD PTR [eax+eax*1],1
  402b74:	or     edx,ebp
  402b76:	test   al,0x0
  402b78:	or     edx,edx
  402b7a:	add    al,0x0
  402b7c:	sti    
  402b7d:	rol    DWORD PTR [eax+eax*1+0x44d1fb],1
  402b84:	retf   
  402b85:	aam    0xe8
  402b87:	add    bl,bl
  402b89:	fimul  WORD PTR [eax]
	...
  402b9f:	add    BYTE PTR [ebx-0x44ffa32f],bh
  402ba5:	rcr    DWORD PTR [eax+eax*1],1
  402ba8:	retf   
  402ba9:	aam    0x98
  402bab:	add    BYTE PTR [edi-0x44ffac22],dl
  402bb1:	sar    DWORD PTR [eax+eax*1-0x45],1
  402bb5:	sar    DWORD PTR [eax+eax*1],1
  402bb8:	mov    edx,esp
  402bba:	fadd   DWORD PTR [eax]
  402bbc:	bound  eax,QWORD PTR [edx]
  402bbe:	push   es
  402bbf:	pop    ss
  402bc0:	(bad)  
  402bc1:	lock or ch,BYTE PTR [edx+eiz*2-0x10]
  402bc6:	or     ch,BYTE PTR [edx+eiz*2]
  402bc9:	lock or edi,DWORD PTR [eax+0xc0af062]
  402bd0:	(bad)  
  402bd1:	lock or cl,BYTE PTR [edx+eiz*2+0x624c0af0]
  402bd9:	repnz or eax,edi
  402bdc:	bound  eax,QWORD PTR [edx]
  402bde:	add    al,0x3
  402be0:	(bad)  
  402be2:	or     dl,BYTE PTR [edx+0x62]
  402be5:	repnz or dl,BYTE PTR [edx]
  402be8:	bound  ebp,QWORD PTR ds:0x1f62a30b
  402bee:	add    al,0x23
  402bf0:	(bad)  
  402bf2:	or     dh,BYTE PTR [edx+0x62]
  402bf5:	repnz or dh,BYTE PTR [edx]
  402bf8:	(bad)  
  402bfa:	or     esp,eax
  402bfc:	bound  eax,QWORD PTR [ecx]
  402bfe:	add    al,0xb
  402c00:	(bad)  
  402c02:	or     ah,BYTE PTR [edx+0x0]
	...
  402c15:	add    BYTE PTR [eax],al
  402c17:	add    BYTE PTR [edx-0xe],ah
  402c1a:	or     ah,BYTE PTR [edx]
  402c1c:	(bad)  
  402c1e:	or     DWORD PTR [edx+eiz*2+0x62020af2],esp
  402c25:	repnz or al,BYTE PTR [edx+0x420af262]
  402c2c:	(bad)  
  402c2e:	or     esp,esp
  402c30:	bound  eax,QWORD PTR [edx]
  402c32:	add    al,0x7
  402c34:	(bad)  
  402c36:	or     bl,BYTE PTR [edx+0x62]
  402c39:	repnz or bl,BYTE PTR [edx]
  402c3c:	(bad)  
  402c3e:	or     DWORD PTR [edx+eiz*2+0x62430426],edx
  402c45:	repnz or bh,BYTE PTR [edx+0x62]
  402c49:	fldl2t 
  402c4b:	or     ebx,DWORD PTR [eax-0x27]
  402c4e:	jmp    0xfc19da5d
  402c53:	add    al,0x71
  402c55:	fldl2t 
  402c57:	or     edi,eax
  402c59:	fsubr  st,st(1)
  402c5b:	or     ecx,DWORD PTR [eax-0x27]
  402c5e:	jmp    0xea19da6d
  402c63:	or     ebx,DWORD PTR [eax-0x27]
  402c66:	jmp    0xea1a0476
  402c6b:	or     ebp,DWORD PTR [eax+0x4e0ae9d9]
  402c71:	fyl2xp1 
  402c73:	add    al,0x67
  402c75:	fldl2t 
  402c77:	or     ebp,DWORD PTR [ecx+ebx*8+0xbe9]
	...
  402c8e:	add    BYTE PTR [eax],al
  402c90:	push   esp
  402c91:	fldcw  WORD PTR [ecx]
  402c93:	or     al,0x62
  402c95:	(bad)  
  402c97:	add    al,0x71
  402c99:	fldl2t 
  402c9b:	or     ebp,DWORD PTR [ecx+ebx*8-0x26abf417]
  402ca2:	jmp    0xf91952b1
  402ca7:	add    al,0x5d
  402ca9:	fldl2t 
  402cab:	or     edi,DWORD PTR [ecx+ebx*8-0x17]
  402caf:	or     eax,DWORD PTR [ecx+ebx*8-0x17]
  402cb3:	or     al,dh
  402cb5:	fsubr  st,st(1)
  402cb7:	or     esp,DWORD PTR [ecx+ebx*8-0x17]
  402cbb:	or     ebx,esp
  402cbd:	fsubr  st,st(1)
  402cbf:	or     esp,DWORD PTR [ecx+ebx*8]
  402cc2:	jmp    0xfa18f2d1
  402cc7:	add    al,0x5b
  402cc9:	fldl2t 
  402ccb:	or     esp,DWORD PTR [ecx+ebx*8]
  402cce:	jmp    0xea1988de
  402cd3:	or     dl,dh
  402cd5:	fadd   DWORD PTR [eax]
  402cd7:	frstor [esi+0x78]
  402cda:	add    cl,ch
  402cdc:	pop    ecx
  402cdd:	add    DWORD PTR [eax],0xffffffe9
  402ce0:	imul   eax,ebx,0x2568e900
  402ce6:	add    bl,bh
  402ce8:	data16 loopne 0x402ceb
  402ceb:	jmp    0xe940a049
  402cf0:	imul   esi,DWORD PTR [ebx+0xe900],0x0
	...
  402d06:	add    BYTE PTR [eax],al
  402d08:	push   0x59e90045
  402d0d:	rol    DWORD PTR [eax],cl
  402d0f:	jmp    0xe940806d
  402d14:	imul   edx,DWORD PTR [ebx+0x566e900],0xd9614900
  402d1e:	add    cl,ch
  402d20:	pop    ecx
  402d21:	test   al,0x0
  402d23:	jmp    0xd4411591
  402d28:	imul   edx,DWORD PTR [esi+0x0],0xe260db
  402d2f:	jmp    0xe940b58d
  402d34:	imul   ecx,eax,0x1766e900
  402d3a:	add    cl,bh
  402d3c:	pusha  
  402d3d:	iret   
  402d3e:	add    cl,ch
  402d40:	pop    ecx
  402d41:	js     0x402d43
  402d43:	jmp    0xe940e5b1
  402d48:	data16 aaa 
  402d4a:	add    cl,ch
  402d4c:	pop    ecx
  402d4d:	fadd   DWORD PTR [eax]
  402d4f:	jmp    0xe94085ad
  402d54:	imul   ebx,DWORD PTR [eax-0x8991700],0xdb60f8ff
  402d5e:	add    cl,ch
  402d60:	pop    ecx
  402d61:	mov    al,ds:0xcecb0000
  402d66:	sbb    DWORD PTR [eax],eax
  402d68:	retf   
  402d69:	aad    0x92
	...
  402d7f:	add    BYTE PTR [eax-0x44ffc429],cl
  402d85:	into   
  402d86:	jns    0x402d88
  402d88:	mov    ecx,esi
  402d8a:	cmp    DWORD PTR [eax],eax
  402d8c:	mov    edx,ebp
  402d8e:	rol    BYTE PTR [eax],cl
  402d90:	mov    dl,bh
  402d92:	adc    DWORD PTR [eax],eax
  402d94:	jnp    0x402d64
  402d96:	imul   eax,DWORD PTR [eax],0x29ce8b
  402d9c:	mov    edx,ebp
  402d9e:	mov    dl,0x0
  402da0:	jnp    0x402d70
  402da2:	or     DWORD PTR [eax],eax
  402da4:	jnp    0x402d74
  402da6:	mov    DWORD PTR [eax],eax
  402da8:	dec    ebx
  402da9:	into   
  402daa:	dec    ecx
  402dab:	add    BYTE PTR [ebx-0x2b],cl
  402dae:	repnz add BYTE PTR [ebx-0x29],cl
  402db2:	add    al,0x0
  402db4:	cmp    ecx,esi
  402db6:	push   ebp
  402db7:	add    BYTE PTR [ebx-0x32],cl
  402dba:	adc    eax,0x2ce1b00
  402dbf:	add    DWORD PTR [eax],ecx
  402dc1:	xlat   BYTE PTR ds:[ebx]
  402dc2:	sub    eax,DWORD PTR [eax]
  402dc4:	cmp    ecx,esi
  402dc6:	jne    0x402dc8
  402dc8:	or     ecx,esi
  402dca:	xor    eax,0xcad50b00
  402dcf:	add    BYTE PTR [edx],cl
  402dd1:	xlat   BYTE PTR ds:[ebx]
  402dd2:	or     eax,0x65cdfb00
  402dd7:	add    BYTE PTR [ebx],cl
  402dd9:	into   
  402dda:	and    eax,0xaad50b00
  402ddf:	add    bl,bh
  402de1:	int    0x5
	...
  402df7:	add    bl,bh
  402df9:	int    0x85
  402dfb:	add    bl,cl
  402dfd:	int    0x45
  402dff:	add    bl,cl
  402e01:	aam    0xea
  402e03:	add    BYTE PTR [edx+0x0],ah
  402e06:	add    cl,BYTE PTR [eax]
  402e08:	(bad)  
  402e09:	lock or bl,BYTE PTR [ebp+0x62]
  402e0d:	lock or bl,BYTE PTR ds:0x9a0bf062
  402e14:	bound  esp,QWORD PTR [edx+eax*1]
  402e17:	push   ebx
  402e18:	(bad)  
  402e19:	lock or bh,BYTE PTR [ebp+0x62]
  402e1d:	lock or bh,BYTE PTR ds:0xda0bf062
  402e24:	(bad)  
  402e25:	inc    BYTE PTR [ecx]
  402e27:	pop    ss
  402e28:	(bad)  
  402e29:	lock or ch,BYTE PTR [ebp+0x62]
  402e2d:	lock or ch,BYTE PTR ds:0xba0bf062
  402e34:	(bad)  
  402e35:	lock or cl,BYTE PTR ds:0x8d0af062
  402e3c:	(bad)  
  402e3e:	or     cl,BYTE PTR [ebp+0x62]
  402e41:	repnz or edx,edi
  402e44:	bound  eax,QWORD PTR [edx]
  402e46:	add    BYTE PTR [ebx],al
  402e48:	(bad)  
  402e4a:	or     dl,BYTE PTR [ebx+0x62]
  402e4d:	repnz or dl,BYTE PTR [ebx]
  402e50:	bound  esp,QWORD PTR ds:0x2362c30b
  402e56:	add    BYTE PTR [ebx],ah
  402e58:	(bad)  
  402e5a:	or     dh,BYTE PTR [ebx+0x0]
	...
  402e6d:	add    BYTE PTR [eax],al
  402e6f:	add    BYTE PTR [edx-0xe],ah
  402e72:	or     dh,BYTE PTR [ebx]
  402e74:	(bad)  
  402e76:	or     esi,eax
  402e78:	bound  eax,QWORD PTR [ecx]
  402e7a:	add    BYTE PTR [ebx],cl
  402e7c:	(bad)  
  402e7e:	or     ah,BYTE PTR [ebx+0x62]
  402e81:	repnz or ah,BYTE PTR [ebx]
  402e84:	(bad)  
  402e86:	or     DWORD PTR [esi+0x30af262],esp
  402e8c:	(bad)  
  402e8e:	or     al,BYTE PTR [ebx+0xbe9d962]
  402e94:	and    ecx,ebx
  402e96:	jmp    0xfa19f2a5
  402e9b:	add    BYTE PTR [ebp-0x27],bl
  402e9e:	jmp    0xea1947ae
  402ea3:	or     ebx,DWORD PTR [ecx-0x27]
  402ea6:	jmp    0xde1a02b5
  402eab:	add    BYTE PTR [ecx],ah
  402ead:	fldl2t 
  402eaf:	or     ebx,DWORD PTR [ecx]
  402eb1:	fldl2t 
  402eb3:	or     ebx,DWORD PTR [ecx-0x27]
  402eb6:	jmp    0xfc19e2c5
  402ebb:	add    BYTE PTR [ecx-0x27],dh
  402ebe:	jmp    0xea1937ce
  402ec3:	or     ecx,DWORD PTR [ecx-0x27]
  402ec6:	jmp    0xea19e2d5
  402ecb:	or     ebx,DWORD PTR [ecx-0x27]
  402ece:	jmp    0xea1917de
  402ed3:	or     eax,DWORD PTR [eax]
	...
  402ee5:	add    BYTE PTR [eax],al
  402ee7:	add    BYTE PTR [ecx+0x540ae9d9],ch
  402eed:	fyl2xp1 
  402eef:	add    BYTE PTR [edi-0x27],bl
  402ef2:	jmp    0xea19c402
  402ef7:	or     ecx,DWORD PTR [ebp-0x27]
  402efa:	sub    DWORD PTR [edx+eiz*2],ecx
  402efd:	(bad)  
  402eff:	add    BYTE PTR [ecx-0x27],dh
  402f02:	jmp    0xea19c412
  402f07:	or     ecx,DWORD PTR [ebp-0x27]
  402f0a:	jmp    0xf9194b19
  402f0f:	add    BYTE PTR [ebp-0x27],dl
  402f12:	jmp    0xea19b422
  402f17:	or     edi,DWORD PTR ds:0xbc0ae9d9
  402f1d:	fadd   DWORD PTR [eax]
  402f1f:	jmp    0xe941077d
  402f24:	imul   ebx,DWORD PTR [eax+0x0],0x9869e9
  402f2b:	jmp    0xf9401e88
  402f30:	(bad)  
  402f32:	add    cl,ch
  402f34:	imul   esp,DWORD PTR [eax-0x1f961700],0x5f58e900
  402f3e:	add    ch,bl
  402f40:	bound  edi,QWORD PTR [eax+eax*1-0x17]
  402f44:	imul   eax,DWORD PTR [eax-0x3f961700],0xe900
	...
  402f5e:	add    BYTE PTR [eax],al
  402f60:	pop    eax
  402f61:	pop    ds
  402f62:	add    bl,bh
  402f64:	(bad)  
  402f65:	in     al,0x0
  402f67:	jmp    0xe9409fd5
  402f6c:	imul   esi,DWORD PTR [eax+0x3f58e900],0xd059e900
  402f76:	add    cl,ch
  402f78:	imul   ecx,DWORD PTR [esi+0x0],0x8e69e9
  402f7f:	jmp    0x49402ee2
  402f84:	inc    ebp
  402f85:	(bad)  
  402f86:	(bad)  
  402f87:	jmp    0xe940d8f5
  402f8c:	imul   ebp,ecx,0x8a59d500
  402f92:	add    bl,bl
  402f94:	and    al,0xe0
  402f96:	add    cl,ch
  402f98:	imul   ecx,DWORD PTR [ecx-0x36961700],0x185ee900
  402fa2:	add    cl,bh
  402fa4:	add    al,0xd1
  402fa6:	add    cl,ch
  402fa8:	imul   edi,DWORD PTR [ecx+0x0],0x20d30b00
  402faf:	add    bl,bh
  402fb1:	int    0xa1
  402fb3:	add    bl,bh
  402fb5:	rol    BYTE PTR [eax],cl
  402fb7:	add    bl,cl
  402fb9:	rol    BYTE PTR [eax+0x40d2cb00],cl
  402fbf:	add    BYTE PTR [ebx+0xe1cd],bh
	...
  402fd5:	add    BYTE PTR [eax],al
  402fd7:	add    bl,cl
  402fd9:	inc    DWORD PTR [eax+eax*1]
  402fdc:	retf   
  402fdd:	rcr    BYTE PTR [eax+0x0],cl
  402fe0:	retf   
  402fe1:	rcr    BYTE PTR [eax],cl
  402fe3:	add    BYTE PTR [ebx-0x77ff6e33],bh
  402fe9:	(bad)  
  402fea:	cmp    DWORD PTR [eax],eax
  402fec:	mov    edx,edx
  402fee:	js     0x402ff0
  402ff0:	mov    edx,edx
  402ff2:	cmp    BYTE PTR [eax],al
  402ff4:	jnp    0x402fc3
  402ff6:	rol    DWORD PTR [eax],1
  402ff8:	mov    bh,bh
  402ffa:	str    WORD PTR [ebx-0x74ff972e]
  403001:	shr    BYTE PTR [eax],cl
  403003:	add    BYTE PTR [ebx-0x33],bh
  403006:	mov    cl,0x0
  403008:	jnp    0x402fdc
  40300a:	or     BYTE PTR [eax],al
  40300c:	dec    ebx
  40300d:	ror    BYTE PTR [eax+0x48d24b00],cl
  403013:	add    BYTE PTR [ebx],bh
  403015:	int    0xf1
  403017:	add    BYTE PTR [ebx-0x1],cl
  40301a:	add    al,BYTE PTR [eax]
  40301c:	dec    ebx
  40301d:	rcl    BYTE PTR [eax+eax*1+0x4b],cl
  403021:	rcl    BYTE PTR [eax+eax*1],cl
  403024:	push   ss
  403025:	shl    bl,cl
  403027:	add    BYTE PTR [eax],cl
  403029:	jmp    FWORD PTR [ecx]
  40302b:	add    BYTE PTR [ebx],cl
  40302d:	shl    BYTE PTR [eax+eax*1+0xb],cl
  403031:	shl    BYTE PTR [eax+eax*1],cl
  403034:	sti    
  403035:	int3   
  403036:	leave  
  403037:	add    BYTE PTR [edx+0x1],ah
  40303a:	dec    BYTE PTR [eax+eax*1]
	...
  40304d:	add    BYTE PTR [eax],al
  40304f:	add    BYTE PTR [edx-0x10],ah
  403052:	or     ah,BYTE PTR [edx+eiz*2-0x10]
  403056:	or     ah,BYTE PTR [edx+eiz*2]
  403059:	lock or ebp,DWORD PTR [ecx+0x40af062]
  403060:	(bad)  
  403061:	lock or al,BYTE PTR [edx+eiz*2+0x62440af0]
  403069:	lock or ebp,ecx
  40306c:	bound  eax,QWORD PTR [eax]
  40306e:	inc    BYTE PTR [edi]
  403070:	(bad)  
  403071:	lock or bl,BYTE PTR [edx+eiz*2-0x10]
  403076:	or     bl,BYTE PTR [edx+eiz*2]
  403079:	lock or ebx,DWORD PTR [ecx+0x52fe1c62]
  403080:	(bad)  
  403081:	lock or bh,BYTE PTR [edx+eiz*2-0x10]
  403086:	or     bh,BYTE PTR [edx+eiz*2]
  403089:	lock or ebx,ecx
  40308c:	bound  eax,QWORD PTR [edx]
  40308e:	(bad)  
  40308f:	push   ss
  403090:	(bad)  
  403091:	lock or ch,BYTE PTR [edx+eiz*2-0x10]
  403096:	or     ch,BYTE PTR [edx+eiz*2]
  403099:	lock or edi,DWORD PTR [ecx+0xc0af062]
  4030a0:	(bad)  
  4030a2:	or     cl,BYTE PTR [edx+eiz*2+0x624c0af2]
  4030a9:	repnz or ecx,edi
  4030ac:	bound  eax,QWORD PTR [edx]
  4030ae:	cld    
  4030af:	add    ah,BYTE PTR [edx-0xe]
  4030b2:	or     dl,BYTE PTR [edx+0x0]
	...
  4030c5:	add    BYTE PTR [eax],al
  4030c7:	add    BYTE PTR [edx-0xe],ah
  4030ca:	or     dl,BYTE PTR [edx]
  4030cc:	bound  esp,QWORD PTR ds:0x1f62a30b
  4030d2:	cld    
  4030d3:	and    ah,BYTE PTR [edx-0xe]
  4030d6:	or     dh,BYTE PTR [edx+0x62]
  4030d9:	fldl2t 
  4030db:	or     edx,DWORD PTR [eax-0x27]
  4030de:	jmp    0xf91a4fed
  4030e3:	cld    
  4030e4:	push   0x800be9d9
  4030e9:	fldl2t 
  4030eb:	or     eax,DWORD PTR [eax-0x27]
  4030ee:	jmp    0xea19effd
  4030f3:	or     esp,DWORD PTR [eax-0x27]
  4030f6:	jmp    0xea1a1106
  4030fb:	or     esp,DWORD PTR [eax]
  4030fd:	fldl2t 
  4030ff:	or     bh,BYTE PTR [edi+0x64fcf9d9]
  403105:	fldl2t 
  403107:	or     ebx,DWORD PTR [eax]
  403109:	fldl2t 
  40310b:	or     ecx,DWORD PTR [eax-0x27]
  40310e:	jmp    0xde1a001d
  403113:	cld    
  403114:	and    cl,bl
  403116:	jmp    0xea194926
  40311b:	or     ecx,DWORD PTR [eax-0x27]
  40311e:	jmp    0xfc19e02d
  403123:	cld    
  403124:	push   eax
  403125:	fldl2t 
  403127:	or     ecx,DWORD PTR [eax]
  403129:	fldl2t 
  40312b:	or     eax,DWORD PTR [eax]
	...
  40313d:	add    BYTE PTR [eax],al
  40313f:	add    BYTE PTR [eax],bh
  403141:	fldl2t 
  403143:	or     ch,BYTE PTR [edi+0x680be9d9]
  403149:	fldl2t 
  40314b:	or     ebp,eax
  40314d:	fsubr  st,st(1)
  40314f:	or     ebx,DWORD PTR [eax+0x4f0ae9d9]
  403155:	fyl2xp1 
  403157:	cld    
  403158:	data16 fldl2t 
  40315b:	or     ecx,DWORD PTR [ecx+ebx*8-0x26abf417]
  403162:	sub    DWORD PTR [edx+eiz*2],ecx
  403165:	fld    DWORD PTR [eax]
  403167:	ficomp DWORD PTR [esi]
  403169:	mov    DWORD PTR [eax],0x8369e9
  40316f:	jmp    0xe940f4cd
  403174:	pop    eax
  403175:	push   cs
  403176:	add    al,bh
  403178:	dec    dl
  40317a:	add    cl,ch
  40317c:	imul   esi,DWORD PTR [ebx+0x0],0xb359e9
  403183:	jmp    0xe9405fe0
  403188:	imul   edx,ebx,0x5369e900
  40318e:	add    cl,ch
  403190:	pop    ecx
  403191:	xchg   ebx,eax
  403192:	add    cl,ch
  403194:	pop    eax
  403195:	out    dx,al
  403196:	(bad)  
  403197:	clc    
  403198:	mov    esi,0x69e900d0
  40319d:	fwait
  40319e:	add    cl,ch
  4031a0:	pop    ecx
  4031a1:	fild   DWORD PTR [eax]
  4031a3:	jmp    0x4031a8
	...
  4031b8:	pop    eax
  4031b9:	pop    esi
  4031ba:	add    ch,bl
  4031bc:	sahf   
  4031bd:	jbe    0x4031bf
  4031bf:	jmp    0xe940ad2d
  4031c4:	pop    ecx
  4031c5:	mov    ebx,0x1e58e900
  4031ca:	add    bl,bh
  4031cc:	jle    0x4031ac
  4031ce:	add    cl,ch
  4031d0:	imul   ebp,DWORD PTR [ebx+0x0],0xab59e9
  4031d7:	jmp    0xe9407034
  4031dc:	imul   ecx,ebx,0x4b69e900
  4031e2:	add    cl,ch
  4031e4:	dec    ecx
  4031e5:	lea    eax,[eax]
  4031e7:	jmp    0x49403032
  4031ec:	imul   ebx,ecx,0xaa39e900
  4031f2:	add    BYTE PTR [eax],al
  4031f4:	cmp    edi,edi
  4031f6:	str    WORD PTR [esi]
  4031f9:	inc    DWORD PTR [ecx+0x1fd03900]
  4031ff:	add    BYTE PTR [ebx],cl
  403201:	jmp    FWORD PTR [edi+0x0]
  403204:	sti    
  403205:	(bad)  
  403206:	das    
  403207:	add    bl,bh
  403209:	std    
  40320a:	rol    DWORD PTR [eax],0xfb
  40320d:	iret   
  40320e:	or     al,BYTE PTR [eax]
  403210:	or     edi,edi
  403212:	pop    edi
  403213:	add    bl,bh
  403215:	(bad)  
  403216:	pop    ds
  403217:	add    bl,bh
  403219:	std    
  40321a:	mov    eax,ds:0x0
	...
  40322f:	add    bl,cl
  403231:	(bad)  
  403232:	(bad)  
  403233:	dec    ebx
  403235:	(bad)  
  403236:	jg     0x403238
  403238:	mov    ebx,0xbb003ffe
  40323d:	std    
  40323e:	loope  0x403240
  403240:	mov    ebx,0xcb0006cf
  403245:	(bad)  
  403246:	push   edi
  403247:	add    BYTE PTR [ebx-0x44ffe802],bh
  40324d:	std    
  40324e:	xchg   ecx,eax
  40324f:	add    BYTE PTR [eax-0x74ffc431],bh
  403255:	(bad)  
  403256:	ja     0x403258
  403258:	jnp    0x403258
  40325a:	aaa    
  40325b:	add    BYTE PTR [ebx-0x3],bh
  40325e:	rol    DWORD PTR [eax],1
  403260:	jp     0x403231
  403262:	adc    DWORD PTR [eax],eax
  403264:	mov    edi,esi
  403266:	add    BYTE PTR [bp+di-0x2],bh
  40326a:	daa    
  40326b:	add    BYTE PTR [ebx-0x3],bh
  40326e:	mov    cl,0x0
  403270:	dec    ebx
  403271:	inc    BYTE PTR [edi]
  403273:	add    BYTE PTR [ebx-0x2],cl
  403276:	xchg   DWORD PTR [eax],eax
  403278:	cmp    edi,esi
  40327a:	inc    edi
  40327b:	add    BYTE PTR [ebx],bh
  40327d:	std    
  40327e:	icebp  
  40327f:	add    BYTE PTR [edx+0x0],ah
  403282:	or     al,BYTE PTR [edx+eiz*2]
  403285:	lock cli 
  403287:	push   esp
  403288:	(bad)  
  403289:	lock cli 
  40328b:	adc    al,0x62
  40328d:	and    bl,bh
  40328f:	add    DWORD PTR [ebx+0x1f],esp
  403292:	or     ch,BYTE PTR [ebx]
	...
  4032a8:	(bad)  
  4032a9:	lock cli 
  4032ab:	je     0x40330f
  4032ad:	lock cli 
  4032af:	xor    al,0x62
  4032b1:	lock sti 
  4032b3:	retf   0x162
  4032b6:	or     cl,BYTE PTR ds:0x64faf062
  4032bc:	(bad)  
  4032bd:	lock cli 
  4032bf:	and    al,0x62
  4032c1:	lock sti 
  4032c3:	stos   BYTE PTR es:[edi],al
  4032c4:	(bad)  
  4032c5:	lock cli 
  4032c7:	add    al,0x62
  4032c9:	lock cli 
  4032cb:	test   BYTE PTR [edx-0x10],ah
  4032ce:	cli    
  4032cf:	inc    esp
  4032d0:	(bad)  
  4032d1:	lock sti 
  4032d3:	jmp    0xf062:0x80a0062
  4032da:	cli    
  4032db:	pop    esp
  4032dc:	(bad)  
  4032dd:	lock cli 
  4032df:	sbb    al,0x62
  4032e1:	lock sti 
  4032e3:	call   0xf062:0x530a1c62
  4032ea:	cli    
  4032eb:	jl     0x40334f
  4032ed:	lock cli 
  4032ef:	cmp    al,0x62
  4032f1:	lock sti 
  4032f3:	fisub  DWORD PTR [edx-0x2]
  4032f6:	or     DWORD PTR [edi],edx
  4032f8:	(bad)  
  4032f9:	lock cli 
  4032fb:	ins    BYTE PTR es:[edi],dx
  4032fc:	(bad)  
  4032fd:	lock cli 
  4032ff:	sub    al,0x62
  403301:	lock sti 
  403303:	mov    edx,0xcfb0262
  403308:	bound  eax,QWORD PTR [edx]
  40330a:	sti    
  40330b:	mov    WORD PTR [eax],es
	...
  40331d:	add    BYTE PTR [eax],al
  40331f:	add    BYTE PTR [edx-0x27],ah
  403322:	jmp    0xea19ca22
  403327:	cli    
  403328:	cmp    dl,bl
  40332a:	stc    
  40332b:	or     BYTE PTR [ecx-0x27],ah
  40332e:	jmp    0xea19c42e
  403333:	sti    
  403334:	push   eax
  403335:	(bad)  
  403337:	sti    
  403338:	and    dl,bl
  40333a:	fimul  DWORD PTR [eax]
  40333c:	inc    ecx
  40333d:	fldl2t 
  40333f:	sti    
  403340:	nop
  403341:	fldl2t 
  403343:	sti    
  403344:	push   eax
  403345:	fldl2t 
  403347:	cli    
  403348:	and    al,0xda
  40334a:	clc    
  40334b:	or     BYTE PTR [ecx-0x27],ch
  40334e:	jmp    0xea19b44e
  403353:	sti    
  403354:	inc    eax
  403355:	fldl2t 
  403357:	cli    
  403358:	add    al,0xda
  40335a:	jmp    0xea19945a
  40335f:	sti    
  403360:	loopne 0x40333b
  403362:	jmp    0xea195462
  403367:	cli    
  403368:	(bad)  
  403369:	fyl2xp1 
  40336b:	or     BYTE PTR [ebp-0x27],bl
  40336e:	jmp    0xea193c6e
  403373:	sti    
  403374:	dec    eax
  403375:	fldl2t 
  403377:	cli    
  403378:	hlt    
  403379:	(bad)  
  40337b:	or     BYTE PTR [ecx],ah
  40337d:	fldl2t 
  40337f:	sti    
  403380:	or     cl,bl
  403382:	jmp    0x403482
	...
  403397:	add    BYTE PTR [eax-0x27],cl
  40339a:	jmp    0xfc19c899
  40339f:	or     BYTE PTR [ecx-0x27],dl
  4033a2:	jmp    0xea192ca2
  4033a7:	sti    
  4033a8:	cmp    cl,bl
  4033aa:	jmp    0x11948a9
  4033af:	jmp    0xe941170d
  4033b4:	dec    ecx
  4033b5:	arpl   WORD PTR [eax],ax
  4033b7:	jmp    0xe940d705
  4033bc:	cmp    bh,ch
  4033be:	(bad)  
  4033bf:	clc    
  4033c0:	push   0xffffffde
  4033c2:	add    cl,ch
  4033c4:	sub    DWORD PTR [edi-0x30d61700],ecx
  4033ca:	add    BYTE PTR [ecx],ch
  4033cc:	push   ds
  4033cd:	clc    
  4033ce:	(bad)  
  4033cf:	fisubr DWORD PTR [edx-0x54]
  4033d2:	add    cl,ch
  4033d4:	or     DWORD PTR [edi+0x0],ebp
  4033d7:	jmp    0xe940e2e5
  4033dc:	clc    
  4033dd:	es add al,bh
  4033e0:	push   0xffffffe8
  4033e2:	add    cl,ch
  4033e4:	jmp    0xea293467
  4033e9:	mov    esi,0x46d8e900
  4033ee:	add    cl,ch
  4033f0:	(bad)  
  4033f2:	add    cl,ch
  4033f4:	leave  
  4033f5:	pop    esi
  4033f6:	add    cl,ch
  4033f8:	leave  
  4033f9:	sahf   
  4033fa:	add    cl,ch
	...
  403410:	mov    eax,0x6af90006
  403415:	loop   0x403417
  403417:	jmp    0xe940cac5
  40341c:	test   eax,0x98e900d6
  403421:	push   esi
  403422:	add    ch,bl
  403424:	push   0x7c
  403426:	add    cl,ch
  403428:	mov    DWORD PTR [esi+0x0],esi
  40342b:	jmp    0xe940eab9
  403430:	js     0x403448
  403432:	add    bl,bh
  403434:	push   0xffffffd4
  403436:	add    cl,ch
  403438:	imul   eax,DWORD PTR [esi-0xc850000],0xf44b002d
  403442:	mov    ebp,0xdf34b00
  403447:	add    BYTE PTR [ebx],bh
  403449:	repz lea eax,[eax]
  40344c:	cmp    esi,ebx
  40344e:	dec    ebp
  40344f:	add    BYTE PTR [ebx-0xa],cl
  403452:	std    
  403453:	add    BYTE PTR [ebx],bh
  403455:	loop   0x403458
  403457:	add    BYTE PTR [edx+eiz*8],dh
  40345a:	add    DWORD PTR [ecx],eax
  40345c:	or     dl,ah
  40345e:	adc    DWORD PTR [eax],eax
  403460:	add    dl,ah
  403462:	add    DWORD PTR [eax],edx
  403464:	cmp    ah,dl
  403466:	add    eax,0x1e23200
  40346b:	add    al,0x6
  40346d:	loop   0x4034b0
  40346f:	add    dh,bh
  403471:	loope  0x403474
  403473:	inc    eax
	...
  403488:	sti    
  403489:	loope  0x40348e
  40348b:	add    bl,dh
  40348d:	loope  0x403490
  40348f:	add    al,BYTE PTR [edi]
  403491:	loop   0x4034b4
  403493:	add    BYTE PTR [edi-0x46dffe1f],bh
  403499:	loope  0x4034a4
  40349b:	add    BYTE PTR [ecx-0x3af7fe1f],dh
  4034a1:	loope  0x403424
  4034a3:	add    BYTE PTR [ebx],cl
  4034a5:	loop   0x4034a7
  4034a7:	add    BYTE PTR [ebx-0x4bfffd1f],bh
  4034ad:	loope  0x403430
  4034af:	add    DWORD PTR [eax-0x7fffe61f],ecx
  4034b5:	loope  0x4034b8
  4034b7:	sbb    BYTE PTR [edx-0x4dfff81f],bh
  4034bd:	loope  0x4034c0
  4034bf:	push   es
  4034c0:	xchg   cl,ah
  4034c2:	popa   
  4034c3:	add    BYTE PTR [esi-0x1f],bh
  4034c6:	add    DWORD PTR [eax+0x62],esp
  4034c9:	lock pop es
  4034cb:	add    al,0x62
  4034cd:	call   0x14a135d9
  4034d2:	or     BYTE PTR [ecx],dh
  4034d4:	bound  edx,QWORD PTR [eax+ecx*1]
  4034d7:	add    DWORD PTR [edx+0x620d0812],edx
  4034dd:	or     cl,BYTE PTR [eax]
  4034df:	add    DWORD PTR [esi-0xa],edx
  4034e2:	pop    es
  4034e3:	shl    DWORD PTR [edx-0x40],0x9
  4034e7:	add    BYTE PTR [edx-0x10],ah
  4034ea:	add    dl,BYTE PTR [ecx]
	...
  403500:	(bad)  
  403502:	add    al,BYTE PTR [eax]
  403504:	(bad)  
  403505:	call   0xe9a23c0c
  40350a:	add    al,BYTE PTR [esi]
  40350c:	(bad)  
  40350d:	cli    
  40350e:	add    al,BYTE PTR ds:0x402fb62
  403514:	(bad)  
  403515:	in     al,dx
  403516:	add    al,BYTE PTR [ebx]
  403518:	bound  eax,QWORD PTR ds:0xfe620203
  40351e:	add    al,BYTE PTR [ecx]
  403520:	bound  edx,QWORD PTR [edi]
  403522:	add    eax,DWORD PTR [eax]
  403524:	bound  eax,QWORD PTR [eax]
  403526:	add    eax,DWORD PTR [eax]
  403528:	bound  eax,QWORD PTR [eax]
  40352a:	add    eax,DWORD PTR [eax]
  40352c:	bound  eax,QWORD PTR [eax]
  40352e:	add    eax,DWORD PTR [eax]
  403530:	bound  eax,QWORD PTR [eax]
  403532:	add    eax,DWORD PTR [eax]
  403534:	bound  eax,QWORD PTR [eax]
  403536:	add    eax,DWORD PTR [eax]
  403538:	bound  eax,QWORD PTR [eax]
  40353a:	add    eax,DWORD PTR [eax]
  40353c:	bound  eax,QWORD PTR [eax]
  40353e:	add    eax,DWORD PTR [eax]
  403540:	bound  eax,QWORD PTR [eax]
  403542:	add    eax,DWORD PTR [eax]
  403544:	bound  eax,QWORD PTR [ecx]
  403546:	add    eax,DWORD PTR [eax]
  403548:	bound  eax,QWORD PTR [ecx]
  40354a:	add    eax,DWORD PTR [eax]
  40354c:	bound  eax,QWORD PTR [ecx]
  40354e:	add    eax,DWORD PTR [eax]
  403550:	bound  eax,QWORD PTR [ecx]
  403552:	add    eax,DWORD PTR [eax]
  403554:	(bad)  
  403555:	fldpi  
  403557:	add    esp,DWORD PTR [edx-0x27]
  40355a:	jmp    0x40355f
  40355c:	(bad)  
  40355d:	fldpi  
  40355f:	add    esp,DWORD PTR [edx-0x27]
  403562:	jmp    0x403567
	...
  403578:	(bad)  
  403579:	fldl2e 
  40357b:	add    esp,DWORD PTR [edx-0x27]
  40357e:	jmp    0x6203:0xead96203
  403585:	fldl2e 
  403587:	add    esp,DWORD PTR [edx-0x27]
  40358a:	in     eax,dx
  40358b:	add    esp,DWORD PTR [edx-0x27]
  40358e:	in     eax,0x3
  403590:	(bad)  
  403591:	fldln2 
  403593:	add    esp,DWORD PTR [edx-0x27]
  403596:	in     eax,0x3
  403598:	(bad)  
  403599:	fldlg2 
  40359b:	add    esp,DWORD PTR [edx-0x27]
  40359e:	in     al,0x3
  4035a0:	(bad)  
  4035a1:	fldlg2 
  4035a3:	add    esp,DWORD PTR [edx-0x27]
  4035a6:	in     al,0x3
  4035a8:	(bad)  
  4035a9:	fldl2t 
  4035ab:	add    esp,DWORD PTR [edx-0x27]
  4035ae:	stc    
  4035af:	repnz push ebx
  4035b1:	fabs   
  4035b3:	add    al,0x5b
  4035b5:	fninit 
  4035b7:	push   es
  4035b8:	pop    ecx
  4035b9:	(bad)  
  4035bb:	add    BYTE PTR [edi-0x29],ch
  4035be:	out    dx,eax
  4035bf:	add    ah,BYTE PTR [ebp-0x27]
  4035c2:	jmp    0xea1997ca
  4035c7:	add    esp,DWORD PTR [edx-0x27]
  4035ca:	jmp    0xea1997d2
  4035cf:	add    esp,DWORD PTR [edx-0x27]
  4035d2:	call   0xe91997da
  4035d7:	add    esp,DWORD PTR [edx-0x27]
  4035da:	jmp    0x4035df
	...
  4035f0:	(bad)  
  4035f1:	fldpi  
  4035f3:	add    esp,DWORD PTR [edx-0x27]
  4035f6:	add    dl,ch
  4035f8:	popa   
  4035f9:	fld    DWORD PTR [eax]
  4035fb:	jmp    0xd961:0xed00d961
  403602:	add    ch,ah
  403604:	popa   
  403605:	fld    DWORD PTR [eax]
  403607:	in     al,dx
  403608:	popa   
  403609:	fld    DWORD PTR [eax]
  40360b:	in     al,0x61
  40360d:	fld    DWORD PTR [eax]
  40360f:	out    dx,eax
  403610:	popa   
  403611:	fld    DWORD PTR [eax]
  403613:	out    0x61,eax
  403615:	fld    DWORD PTR [eax]
  403617:	out    dx,al
  403618:	popa   
  403619:	fld    DWORD PTR [eax]
  40361b:	out    0x61,al
  40361d:	fld    DWORD PTR [eax]
  40361f:	icebp  
  403620:	popa   
  403621:	fld    DWORD PTR [eax]
  403623:	icebp  
  403624:	popa   
  403625:	fld    DWORD PTR [eax]
  403627:	loopne 0x40368a
  403629:	fld    DWORD PTR [eax]
  40362b:	loopne 0x40368e
  40362d:	fld    DWORD PTR [eax]
  40362f:	repz popa 
  403631:	fld    DWORD PTR [eax]
  403633:	repz popa 
  403635:	fld    DWORD PTR [eax]
  403637:	loop   0x40369a
  403639:	fld    DWORD PTR [eax]
  40363b:	loop   0x40369e
  40363d:	fld    DWORD PTR [eax]
  40363f:	cmc    
  403640:	popa   
  403641:	fld    DWORD PTR [eax]
  403643:	in     eax,dx
  403644:	popa   
  403645:	fld    DWORD PTR [eax]
  403647:	in     al,0x61
  403649:	fld    DWORD PTR [eax]
  40364b:	fsub   QWORD PTR [ecx-0x27]
  40364e:	add    cl,ch
  403650:	popa   
  403651:	fld    DWORD PTR [eax]
  403653:	jmp    0x403658
	...
  403668:	popa   
  403669:	fld    DWORD PTR [eax]
  40366b:	jmp    0xe9410fd1
  403670:	popa   
  403671:	fld    DWORD PTR [eax]
  403673:	jmp    0xe9410fd9
  403678:	popa   
  403679:	fld    DWORD PTR [eax]
  40367b:	jmp    0xe9410fe1
  403680:	popa   
  403681:	fld    DWORD PTR [eax]
  403683:	add    BYTE PTR [ebx-0x74ffff29],cl
  403689:	xlat   BYTE PTR ds:[ebx]
  40368a:	add    BYTE PTR [eax],al
  40368c:	jnp    0x403665
  40368e:	add    BYTE PTR [eax],al
  403690:	jnp    0x403669
  403692:	add    BYTE PTR [eax],al
  403694:	mov    edx,edi
  403696:	add    BYTE PTR [eax],al
  403698:	mov    edx,edi
  40369a:	add    BYTE PTR [eax],al
  40369c:	jnp    0x403675
  40369e:	add    BYTE PTR [eax],al
  4036a0:	jnp    0x403679
  4036a2:	add    BYTE PTR [eax],al
  4036a4:	dec    ecx
  4036a5:	xlat   BYTE PTR ds:[ebx]
  4036a6:	add    BYTE PTR [eax],al
  4036a8:	dec    eax
  4036a9:	xlat   BYTE PTR ds:[ebx]
  4036aa:	add    BYTE PTR [eax],al
  4036ac:	cmp    al,0xd7
  4036ae:	add    BYTE PTR [eax],al
  4036b0:	cmp    edx,edi
  4036b2:	add    BYTE PTR [eax],al
  4036b4:	aaa    
  4036b5:	xlat   BYTE PTR ds:[ebx]
  4036b6:	or     BYTE PTR [eax],al
  4036b8:	(bad)  
  4036b9:	fisttp QWORD PTR [eax]
  4036bb:	add    BYTE PTR [edi-0x38fff723],al
  4036c1:	fisttp QWORD PTR [eax]
  4036c3:	add    BYTE PTR [edi-0x23],dh
  4036c6:	or     BYTE PTR [eax],al
  4036c8:	out    0xdd,eax
  4036ca:	or     BYTE PTR [eax],al
	...
  4036e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e1:	fisttp QWORD PTR [eax]
  4036e3:	add    bh,al
  4036e5:	fisttp QWORD PTR [eax]
  4036e7:	add    BYTE PTR [edi-0x23],ah
  4036ea:	or     BYTE PTR [eax],al
  4036ec:	ja     0x4036cb
  4036ee:	or     BYTE PTR [eax],al
  4036f0:	aaa    
  4036f1:	fisttp QWORD PTR [eax]
  4036f3:	add    BYTE PTR [edi-0x58fff723],dh
  4036f9:	(bad)  
  4036fa:	or     BYTE PTR [eax],al
  4036fc:	xchg   edi,eax
  4036fd:	fisttp QWORD PTR [eax]
  4036ff:	add    bh,dl
  403701:	(bad)  
  403702:	or     BYTE PTR [eax],al
  403704:	aaa    
  403705:	fisttp QWORD PTR [eax]
  403707:	add    cl,cl
  403709:	(bad)  
  40370a:	or     BYTE PTR [eax],al
  40370c:	dec    ecx
  40370d:	fisttp QWORD PTR [eax]
  40370f:	add    BYTE PTR [edx+0x3e],ah
  403712:	add    ecx,DWORD PTR [eax]
  403714:	bound  edi,QWORD PTR [esi-0x219df7fc]
  40371a:	add    al,0x8
  40371c:	bound  ebx,QWORD PTR [esi+0x4]
  40371f:	or     BYTE PTR [edx+0x1e],ah
  403722:	add    ecx,DWORD PTR [eax]
  403724:	bound  ebx,QWORD PTR [esi-0x119df7fc]
  40372a:	add    cl,BYTE PTR [eax]
  40372c:	bound  ebp,QWORD PTR [esi+0x4]
  40372f:	or     BYTE PTR [edx+0x2e],ah
  403732:	add    ecx,DWORD PTR [eax]
  403734:	bound  ebp,QWORD PTR [esi+0x2e620804]
  40373a:	add    ecx,DWORD PTR [eax]
  40373c:	bound  ebp,QWORD PTR [esi+0x6e620804]
  403742:	add    ecx,DWORD PTR [eax]
	...
  403758:	(bad)  
  403759:	out    dx,al
  40375a:	add    cl,BYTE PTR [eax]
  40375c:	(bad)  
  40375d:	out    0x2,al
  40375f:	or     BYTE PTR [edx+0x66],ah
  403762:	add    ecx,DWORD PTR [eax]
  403764:	bound  esi,QWORD PTR [esi+0x36620804]
  40376a:	add    ecx,DWORD PTR [eax]
  40376c:	(bad)  
  40376d:	mov    BYTE PTR [eax+ecx*1],0x62
  403771:	inc    esi
  403772:	add    ecx,DWORD PTR [eax]
  403774:	bound  edx,QWORD PTR [esi+0x16620804]
  40377a:	add    ecx,DWORD PTR [eax]
  40377c:	(bad)  
  40377d:	(bad)  
  40377e:	add    al,0x8
  403780:	bound  edx,QWORD PTR [esi+0x3]
  403783:	or     BYTE PTR [edx-0x5a],ah
  403786:	add    al,0x8
  403788:	bound  esp,QWORD PTR [esi]
  40378a:	add    ecx,DWORD PTR [eax]
  40378c:	bound  edx,QWORD PTR [esi]
  40378e:	add    ecx,DWORD PTR [eax]
  403790:	bound  edx,QWORD PTR [esi-0x199df7fd]
  403796:	add    cl,BYTE PTR [eax]
  403798:	bound  esp,QWORD PTR [esi+0x3]
  40379b:	or     BYTE PTR [edx-0x27],ah
  40379e:	out    dx,eax
  40379f:	add    ebp,DWORD PTR [edx-0x27]
  4037a2:	add    ebx,DWORD PTR [bp+si-0x27]
  4037a6:	scas   eax,DWORD PTR es:[edi]
  4037a7:	add    ebx,DWORD PTR [edx-0x27]
  4037aa:	daa    
  4037ab:	add    ebp,DWORD PTR [edx-0x27]
  4037ae:	(bad)  
  4037b0:	push   0xffffffd9
  4037b2:	xchg   DWORD PTR [ebx],eax
  4037b4:	pop    edx
  4037b5:	fxch   st(7)
  4037b7:	add    ebx,DWORD PTR [edx-0x27]
  4037ba:	inc    edi
  4037bb:	add    eax,DWORD PTR [eax]
	...
  4037cd:	add    BYTE PTR [eax],al
  4037cf:	add    BYTE PTR [edx-0x27],ch
  4037d2:	inc    DWORD PTR [ebx]
  4037d4:	push   0xffffffd9
  4037d6:	ja     0x4037db
  4037d8:	pop    edx
  4037d9:	fnstcw WORD PTR [edi+0x37d95a03]
  4037df:	add    ebp,DWORD PTR [edx-0x27]
  4037e2:	mov    edi,0x37d96a03
  4037e7:	add    ebx,DWORD PTR [edx-0x27]
  4037ea:	jg     0x4037ef
  4037ec:	pop    edx
  4037ed:	fincstp 
  4037ef:	add    ch,BYTE PTR [edx-0x27]
  4037f2:	test   DWORD PTR [ebx],0x46fd96a
  4037f8:	pop    edx
  4037f9:	fldenv [edi]
  4037fb:	add    al,0x5a
  4037fd:	fstp   DWORD PTR [edi+0x17d96a04]
  403803:	add    al,0x6a
  403805:	(bad)  [edi+0x47d95a04]
  40380b:	add    al,0x5a
  40380d:	fnstcw WORD PTR [edi+0x7d96a04]
  403813:	add    al,0x6a
  403815:	fnstcw WORD PTR [edi+0x4]
  403818:	pop    edx
  403819:	fnstenv [edi]
  40381b:	add    al,0x5a
  40381d:	fldcw  WORD PTR [edi-0x382695fc]
  403823:	add    ebp,DWORD PTR [edx-0x27]
  403826:	aas    
  403827:	add    al,0x5a
  403829:	fld    DWORD PTR [eax]
  40382b:	mul    DWORD PTR [ecx-0x1f]
  40382e:	add    BYTE PTR [edi+0x66],ch
  403831:	loope  0x403833
  403833:	call   0x403838
	...
  403848:	popa   
  403849:	loope  0x40384b
  40384b:	push   0xa800e166
  403850:	popa   
  403851:	loope  0x403853
  403853:	sub    BYTE PTR [esi-0x1f],ah
  403856:	add    BYTE PTR [eax],cl
  403858:	pop    esi
  403859:	loope  0x40385b
  40385b:	mov    BYTE PTR [esi-0x1f],ah
  40385e:	add    al,cl
  403860:	popa   
  403861:	loope  0x403863
  403863:	dec    eax
  403864:	data16 loope 0x403867
  403867:	clc    
  403868:	popa   
  403869:	loope  0x40386b
  40386b:	js     0x4038d3
  40386d:	loope  0x40386f
  40386f:	mov    eax,0x3800e161
  403874:	data16 loope 0x403877
  403877:	mov    eax,0x3800e161
  40387c:	data16 loope 0x40387f
  40387f:	js     0x4038e2
  403881:	loope  0x403883
  403883:	clc    
  403884:	popa   
  403885:	loope  0x403887
  403887:	lock popa 
  403889:	loope  0x40388b
  40388b:	jo     0x4038ee
  40388d:	loope  0x40388f
  40388f:	and    BYTE PTR [esi-0x1f],bl
  403892:	add    BYTE PTR [eax+0x1000e161],ah
  403898:	pop    esi
  403899:	loope  0x40389b
  40389b:	nop
  40389c:	popa   
  40389d:	loope  0x40389f
  40389f:	inc    eax
  4038a0:	pop    esi
  4038a1:	loope  0x4038a3
  4038a3:	shl    BYTE PTR [ecx-0x1f],0x0
  4038a7:	add    BYTE PTR [esi-0x1f],bl
  4038aa:	add    BYTE PTR [eax+0x0],al
	...
  4038c0:	popa   
  4038c1:	loope  0x4038c3
  4038c3:	xor    BYTE PTR [esi-0x1f],bl
  4038c6:	add    BYTE PTR [eax+0xe161],dh
  4038cc:	mov    ds:0x220008db,al
  4038d1:	fmul   QWORD PTR [eax]
  4038d3:	add    dl,dl
  4038d5:	fisttp DWORD PTR [eax]
  4038d7:	add    BYTE PTR [edx],dh
  4038d9:	fmul   QWORD PTR [eax]
  4038db:	add    dh,al
  4038dd:	fisttp DWORD PTR [eax]
  4038df:	add    BYTE PTR [esi-0x24],al
  4038e2:	or     BYTE PTR [eax],al
  4038e4:	neg    bl
  4038e6:	or     BYTE PTR [eax],al
  4038e8:	inc    esi
  4038e9:	fmul   QWORD PTR [eax]
  4038eb:	add    BYTE PTR [esi-0x2b],ah
  4038ee:	or     BYTE PTR [eax],al
  4038f0:	out    0xdb,al
  4038f2:	or     BYTE PTR [eax],al
  4038f4:	xchg   esi,eax
  4038f5:	fisttp DWORD PTR [eax]
  4038f7:	add    BYTE PTR [esi],ah
  4038f9:	fmul   QWORD PTR [eax]
  4038fb:	add    BYTE PTR [esi-0x25],dh
  4038fe:	or     BYTE PTR [eax],al
  403900:	neg    bl
  403902:	or     BYTE PTR [eax],al
  403904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403905:	fisttp DWORD PTR [eax]
  403907:	add    BYTE PTR [esi+0x160008da],dl
  40390d:	fisttp DWORD PTR [eax]
  40390f:	add    BYTE PTR [esi-0x39fff726],dl
  403915:	fimul  DWORD PTR [eax]
  403917:	add    BYTE PTR [esi],dh
  403919:	fmul   QWORD PTR [eax]
  40391b:	add    BYTE PTR [esi],ch
  40391d:	fisttp DWORD PTR [eax]
  40391f:	add    BYTE PTR [esi+0x8d5],bh
	...
  403935:	add    BYTE PTR [eax],al
  403937:	add    BYTE PTR [esi-0x2b],bh
  40393a:	or     BYTE PTR [eax],al
  40393c:	(bad)  
  40393d:	aad    0x8
  40393f:	add    BYTE PTR [esi-0x2b],ch
  403942:	or     BYTE PTR [eax],al
  403944:	(bad)  
  403946:	or     BYTE PTR [eax],al
  403948:	sahf   
  403949:	aad    0x8
  40394b:	add    BYTE PTR [esi+0x5e0008d5],bh
  403951:	aad    0x8
  403953:	add    BYTE PTR [esi-0x2b],ch
  403956:	or     BYTE PTR [eax],al
  403958:	bound  esp,QWORD PTR [ebp+0x3d620804]
  40395e:	add    al,0x8
  403960:	bound  edx,QWORD PTR ds:0xad620803
  403966:	add    al,0x8
  403968:	(bad)  
  403969:	in     eax,0x2
  40396b:	or     BYTE PTR [edx+0x7d],ah
  40396e:	add    al,0x8
  403970:	(bad)  
  403972:	add    cl,BYTE PTR [ecx]
  403974:	(bad)  
  403976:	add    ecx,DWORD PTR [ecx]
  403978:	bound  esi,QWORD PTR [ebx+0x4]
  40397b:	or     DWORD PTR [edx+0x73],esp
  40397e:	add    eax,0x3536209
  403983:	or     DWORD PTR [edx+0x53],esp
  403986:	add    al,0x9
  403988:	(bad)
  40398d:	rol    DWORD PTR ds:0x3136209,cl
  403993:	or     DWORD PTR [edx+0x13],esp
  403996:	add    al,0x9
  403998:	bound  edx,QWORD PTR [ebx+0x904]
	...
  4039ae:	add    BYTE PTR [eax],al
  4039b0:	bound  edx,QWORD PTR [ebx+0x73620905]
  4039b6:	add    ecx,DWORD PTR [ecx]
  4039b8:	bound  esi,QWORD PTR [ebx+0x4]
  4039bb:	or     DWORD PTR [edx-0xd],esp
  4039be:	add    cl,BYTE PTR [ecx]
  4039c0:	(bad)  
  4039c2:	add    ecx,DWORD PTR [ecx]
  4039c4:	(bad)  
  4039c5:	jmp    0x4039c9
  4039c7:	or     DWORD PTR [edx-0x15],esp
  4039ca:	add    ecx,DWORD PTR [ecx]
  4039cc:	bound  edi,QWORD PTR [ebx+0x3]
  4039cf:	or     DWORD PTR [edx+0x7b],esp
  4039d2:	add    al,0x9
  4039d4:	bound  ebp,QWORD PTR [ebx-0x549df6fc]
  4039da:	add    eax,0x33b6209
  4039df:	or     DWORD PTR [edx+0x3b],esp
  4039e2:	add    al,0x9
  4039e4:	(bad)  
  4039e5:	(bad)  
  4039e7:	add    ebx,DWORD PTR [ebx-0x27]
  4039ea:	rol    BYTE PTR [ebx+ebx*2],cl
  4039ed:	fld    DWORD PTR [edx+0x3]
  4039f0:	imul   ebx,ecx,0x42
  4039f3:	add    al,0x6b
  4039f5:	fst    DWORD PTR [edx]
  4039f7:	add    al,0x5b
  4039f9:	fst    DWORD PTR [edx]
  4039fb:	add    eax,0x382d95b
  403a00:	imul   ebx,ecx,0xffffff82
  403a03:	add    al,0x6b
  403a05:	fld    DWORD PTR [edx]
  403a07:	add    al,0x5b
  403a09:	fld    DWORD PTR [edx]
  403a0b:	add    eax,0x372d95b
  403a10:	imul   ebx,ecx,0x72
  403a13:	add    al,0x0
	...
  403a25:	add    BYTE PTR [eax],al
  403a27:	add    BYTE PTR [ebx-0x27],ch
  403a2a:	mov    ds:0xa2d95b03,al
  403a2f:	add    al,0x5b
  403a31:	fst    DWORD PTR [edx]
  403a33:	add    ebp,DWORD PTR [ebx-0x27]
  403a36:	adc    al,BYTE PTR [ebx+ebp*2]
  403a39:	(bad)  
  403a3b:	add    ebx,DWORD PTR [ebx-0x27]
  403a3e:	loop   0x403a44
  403a40:	pop    ebx
  403a41:	fst    DWORD PTR [edx+0x3]
  403a44:	imul   ebx,ecx,0x52
  403a47:	add    al,0x6b
  403a49:	fld    DWORD PTR [edx-0x7d26a4fd]
  403a4f:	add    al,0x5b
  403a51:	fptan  
  403a53:	add    ch,BYTE PTR [ebx-0x27]
  403a56:	repnz add ebp,DWORD PTR [ebx-0x27]
  403a5a:	out    dx,al
  403a5b:	add    ebx,DWORD PTR [ebx-0x27]
  403a5e:	out    0x2,al
  403a60:	pop    ebx
  403a61:	fldcw  WORD PTR [esi+0x4]
  403a64:	imul   ebx,ecx,0x66
  403a67:	add    ebp,DWORD PTR [ebx-0x27]
  403a6a:	cs add al,0x5b
  403a6d:	fldenv [esi]
  403a6f:	add    ebx,DWORD PTR [ebx-0x27]
  403a72:	add    BYTE PTR [esi-0x59ff1d9a],ch
  403a78:	popa   
  403a79:	loop   0x403a7b
  403a7b:	into   
  403a7c:	popa   
  403a7d:	loop   0x403a7f
  403a7f:	(bad)  
  403a80:	pusha  
  403a81:	loop   0x403a83
  403a83:	dec    esi
  403a84:	data16 loop 0x403a87
  403a87:	inc    esi
  403a88:	popa   
  403a89:	loop   0x403a8b
  403a8b:	push   cs
	...
  403aa0:	data16 loop 0x403aa3
  403aa3:	push   es
  403aa4:	popa   
  403aa5:	loop   0x403aa7
  403aa7:	mov    fs,WORD PTR [esi-0x1e]
  403aaa:	add    BYTE PTR [esi-0x1ff1d9f],al
  403ab0:	popa   
  403ab1:	loop   0x403ab3
  403ab3:	mul    BYTE PTR [eax-0x1e]
  403ab6:	add    BYTE PTR [esi+0x66],bh
  403ab9:	loop   0x403abb
  403abb:	jbe    0x403b1e
  403abd:	loop   0x403abf
  403abf:	sahf   
  403ac0:	popa   
  403ac1:	loop   0x403ac3
  403ac3:	xchg   esi,eax
  403ac4:	pusha  
  403ac5:	loop   0x403ac7
  403ac7:	push   ds
  403ac8:	data16 loop 0x403acb
  403acb:	push   ss
  403acc:	popa   
  403acd:	loop   0x403acf
  403acf:	fisub  WORD PTR [ecx-0x1e]
  403ad2:	add    dh,dl
  403ad4:	pusha  
  403ad5:	loop   0x403ad7
  403ad7:	pop    esi
  403ad8:	data16 loop 0x403adb
  403adb:	push   esi
  403adc:	popa   
  403add:	loop   0x403adf
  403adf:	jle    0x403b42
  403ae1:	loop   0x403ae3
  403ae3:	jbe    0x403b45
  403ae5:	loop   0x403ae7
  403ae7:	(bad)  
  403ae8:	popa   
  403ae9:	loop   0x403aeb
  403aeb:	mul    BYTE PTR [eax-0x1e]
  403aee:	add    dh,dh
  403af0:	popa   
  403af1:	loop   0x403af3
  403af3:	out    dx,al
  403af4:	pusha  
  403af5:	loop   0x403af7
  403af7:	popaw  
  403af9:	loop   0x403afb
  403afb:	pop    esi
  403afc:	pusha  
  403afd:	loop   0x403aff
  403aff:	add    BYTE PTR [ebp+edx*8+0x9],dl
	...
  403b17:	add    BYTE PTR [eax+ebx*8],dh
  403b1a:	or     DWORD PTR [eax],eax
  403b1c:	(bad)  
  403b1d:	xlat   BYTE PTR ds:[ebx]
  403b1e:	or     DWORD PTR [eax],eax
  403b20:	aam    0xd6
  403b22:	or     DWORD PTR [eax],eax
  403b24:	adc    al,0xd8
  403b26:	or     DWORD PTR [eax],eax
  403b28:	adc    al,0xd7
  403b2a:	or     DWORD PTR [eax],eax
  403b2c:	and    al,0xd8
  403b2e:	or     DWORD PTR [eax],eax
  403b30:	xchg   esp,eax
  403b31:	xlat   BYTE PTR ds:[ebx]
  403b32:	or     DWORD PTR [eax],eax
  403b34:	je     0x403b0b
  403b36:	or     DWORD PTR [eax],eax
  403b38:	push   esp
  403b39:	fmul   DWORD PTR [ecx]
  403b3b:	add    ah,ah
  403b3d:	xlat   BYTE PTR ds:[ebx]
  403b3e:	or     DWORD PTR [eax],eax
  403b40:	xor    al,0xd7
  403b42:	or     DWORD PTR [eax],eax
  403b44:	fs aad 0x9
  403b47:	add    BYTE PTR [esi+edx*8-0x27ebfff7],ah
  403b4e:	or     DWORD PTR [eax],eax
  403b50:	add    al,0xd7
  403b52:	or     DWORD PTR [eax],eax
  403b54:	(bad)  
  403b55:	xlat   BYTE PTR ds:[ebx]
  403b56:	or     DWORD PTR [eax],eax
  403b58:	in     al,0xd6
  403b5a:	or     DWORD PTR [eax],eax
  403b5c:	push   esp
  403b5d:	fmul   DWORD PTR [ecx]
  403b5f:	add    BYTE PTR [edi+edx*8+0x9],ah
  403b63:	add    BYTE PTR [edi+edx*8-0x297bfff7],al
  403b6a:	or     DWORD PTR [eax],eax
  403b6c:	mov    ah,0xd6
  403b6e:	or     DWORD PTR [eax],eax
  403b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b71:	xlat   BYTE PTR ds:[ebx]
  403b72:	or     DWORD PTR [eax],eax
  403b74:	in     al,0xd6
  403b76:	or     DWORD PTR [eax],eax
  403b78:	(bad)  
  403b79:	xlat   BYTE PTR ds:[ebx]
  403b7a:	or     DWORD PTR [eax],eax
	...
  403b90:	xor    al,0xd8
  403b92:	or     DWORD PTR [eax],eax
  403b94:	inc    esp
  403b95:	(bad)  [ecx]
  403b97:	add    BYTE PTR [ebx],bh
  403b99:	xlat   BYTE PTR ds:[ebx]
  403b9a:	pop    es
  403b9b:	add    BYTE PTR [ebx-0x2b],bh
  403b9e:	pop    es
  403b9f:	add    BYTE PTR [edx-0x20],ah
  403ba2:	add    al,0x7
  403ba4:	bound  esp,QWORD PTR [eax+0x10620704]
  403baa:	add    eax,DWORD PTR [edi]
  403bac:	(bad)  
  403bad:	rol    BYTE PTR [edi+eax*1],1
  403bb0:	(bad)  
  403bb1:	lock add al,BYTE PTR [edi]
  403bb4:	bound  esi,QWORD PTR [eax-0x179df8fc]
  403bba:	add    al,BYTE PTR [edi]
  403bbc:	bound  ebp,QWORD PTR [eax+0x18620704]
  403bc2:	add    eax,DWORD PTR [edi]
  403bc4:	(bad)  
  403bc5:	fadd   DWORD PTR [edi+eax*1]
  403bc8:	(bad)  
  403bc9:	clc    
  403bca:	add    al,BYTE PTR [edi]
  403bcc:	bound  edi,QWORD PTR [eax+0x28620704]
  403bd2:	add    eax,DWORD PTR [edi]
  403bd4:	(bad)  
  403bd5:	call   0xfca242dc
  403bda:	add    al,BYTE PTR [edi]
  403bdc:	bound  esi,QWORD PTR [ebx+eax*1]
  403bdf:	pop    es
  403be0:	(bad)  
  403be1:	fadd   QWORD PTR [edi+eax*1]
  403be4:	bound  edx,QWORD PTR [ebx+eax*1]
  403be7:	pop    es
  403be8:	bound  ecx,QWORD PTR [ebx+eax*1]
  403beb:	pop    es
  403bec:	bound  eax,QWORD PTR [ebx+eax*1+0x7]
  403bf0:	(bad)  
  403bf1:	in     al,dx
  403bf2:	add    al,BYTE PTR [edi]
	...
  403c08:	bound  esp,QWORD PTR [ebx+eax*1]
  403c0b:	pop    es
  403c0c:	(bad)  
  403c0d:	inc    DWORD PTR [edx]
  403c0f:	or     BYTE PTR [edx+0x7f],ah
  403c12:	add    al,0x8
  403c14:	bound  edi,QWORD PTR [edi]
  403c16:	add    ecx,DWORD PTR [eax]
  403c18:	bound  edi,QWORD PTR [edi+0x1f620804]
  403c1e:	add    ecx,DWORD PTR [eax]
  403c20:	bound  ebx,QWORD PTR [edi+0x5f620804]
  403c26:	add    ecx,DWORD PTR [eax]
  403c28:	(bad)  
  403c29:	fild   WORD PTR [eax+ecx*1]
  403c2c:	(bad)  
  403c2d:	fldl2t 
  403c2f:	add    ebx,DWORD PTR [edi-0x27]
  403c32:	stc    
  403c33:	add    esp,DWORD PTR [edi-0x27]
  403c36:	loope  0x403c3b
  403c38:	pop    edi
  403c39:	fyl2x  
  403c3b:	add    esp,DWORD PTR [edi-0x27]
  403c3e:	in     eax,dx
  403c3f:	add    ebx,DWORD PTR [edi-0x27]
  403c42:	aad    0x3
  403c44:	addr16 fxam 
  403c47:	add    ebx,DWORD PTR [edi-0x27]
  403c4a:	int    0x3
  403c4c:	addr16 fldpi 
  403c4f:	add    ebx,DWORD PTR [edi-0x27]
  403c52:	sti    
  403c53:	add    esp,DWORD PTR [edi-0x27]
  403c56:	jecxz  0x403c5b
  403c58:	pop    edi
  403c59:	fpatan 
  403c5b:	add    esp,DWORD PTR [edi-0x27]
  403c5e:	out    dx,eax
  403c5f:	add    ebx,DWORD PTR [edi-0x27]
  403c62:	xlat   BYTE PTR ds:[ebx]
  403c63:	add    esp,DWORD PTR [edi-0x27]
  403c66:	out    0x3,eax
  403c68:	pop    edi
  403c69:	fxch   st(7)
  403c6b:	add    eax,DWORD PTR [eax]
	...
  403c7d:	add    BYTE PTR [eax],al
  403c7f:	add    BYTE PTR [edi-0x27],ah
  403c82:	call   0xf9199b8a
  403c87:	add    esp,DWORD PTR [edi-0x27]
  403c8a:	loopne 0x403c8f
  403c8c:	pop    edi
  403c8d:	f2xm1  
  403c8f:	add    esp,DWORD PTR [edi-0x27]
  403c92:	in     al,dx
  403c93:	add    ebx,DWORD PTR [edi-0x27]
  403c96:	aam    0x3
  403c98:	addr16 ftst 
  403c9b:	add    ebx,DWORD PTR [edi-0x27]
  403c9e:	int3   
  403c9f:	add    esp,DWORD PTR [edi-0x27]
  403ca2:	jmp    0x6703:0xfad95f03
  403ca9:	(bad)  
  403cab:	add    ebx,DWORD PTR [edi-0x27]
  403cae:	repnz add esp,DWORD PTR [edi-0x27]
  403cb2:	out    dx,al
  403cb3:	add    ebx,DWORD PTR [edi-0x27]
  403cb6:	(bad)  
  403cb7:	add    esp,DWORD PTR [edi-0x27]
  403cba:	add    cl,ch
  403cbc:	pop    esi
  403cbd:	fild   DWORD PTR [ebx]
  403cbf:	in     eax,0x65
  403cc1:	fiadd  WORD PTR ds:0x6df5bef
  403cc7:	out    0x6a,al
  403cc9:	loopne 0x403cd2
  403ccb:	loope  0x403d36
  403ccd:	ror    DWORD PTR [eax],1
  403ccf:	loope  0x403d2a
  403cd1:	ror    DWORD PTR [eax],1
  403cd3:	lock pop eax
  403cd5:	ror    BYTE PTR [ecx],cl
  403cd7:	lock push 0x67e309d2
  403cdd:	ror    DWORD PTR [edx],cl
  403cdf:	jecxz  0x403d40
  403ce1:	ror    DWORD PTR [edx],cl
  403ce3:	repz add BYTE PTR [eax],al
	...
  403cf6:	add    BYTE PTR [eax],al
  403cf8:	push   edi
  403cf9:	ror    DWORD PTR [edx],cl
  403cfb:	rep outs dx,DWORD PTR ds:[esi]
  403cfd:	ror    DWORD PTR [edx],cl
  403cff:	loop   0x403d67
  403d01:	aam    0xb
  403d03:	loop   0x403d63
  403d05:	aam    0xb
  403d07:	repnz push esi
  403d09:	aam    0xb
  403d0b:	repnz outs dx,BYTE PTR ds:[esi]
  403d0d:	aam    0xb
  403d0f:	in     eax,0x65
  403d11:	aad    0xc
  403d13:	fstp   QWORD PTR [ebp-0x2b]
  403d16:	or     al,0xf5
  403d18:	push   ebp
  403d19:	aad    0xc
  403d1b:	in     eax,dx
  403d1c:	ins    DWORD PTR es:[edi],dx
  403d1d:	aad    0xc
  403d1f:	in     eax,0x65
  403d21:	aad    0xc
  403d23:	fstp   QWORD PTR [ebp-0x2b]
  403d26:	or     al,0xf5
  403d28:	push   ebp
  403d29:	aad    0xc
  403d2b:	in     eax,dx
  403d2c:	ins    DWORD PTR es:[edi],dx
  403d2d:	aad    0xc
  403d2f:	in     al,0x64
  403d31:	(bad)  
  403d32:	or     eax,0xdd65cdc
  403d37:	hlt    
  403d38:	push   esp
  403d39:	(bad)  
  403d3a:	or     eax,0xdd66cec
  403d3f:	in     al,0x64
  403d41:	(bad)  
  403d42:	or     eax,0xdd65cdc
  403d47:	add    BYTE PTR [esi-0x29],cl
  403d4a:	or     eax,0xdd74e0d
  403d4f:	or     eax,0xe0eca3d
  403d54:	or     eax,0x2d0e0eca
  403d59:	retf   0xe0e
	...
  403d70:	or     eax,0xfd0e0eca
  403d75:	leave  
  403d76:	push   cs
  403d77:	push   cs
  403d78:	sub    eax,0xd0e0eca
  403d7d:	retf   0xe0e
  403d80:	or     eax,0xfd0e0eca
  403d85:	leave  
  403d86:	push   cs
  403d87:	push   cs
  403d88:	or     eax,0xed0e0eca
  403d8d:	leave  
  403d8e:	push   cs
  403d8f:	push   cs
  403d90:	int    0xc9
  403d92:	push   cs
  403d93:	push   cs
  403d94:	mov    ebp,0xad0e0ec9
  403d99:	leave  
  403d9a:	push   cs
  403d9b:	push   cs
  403d9c:	int    0xc9
  403d9e:	push   cs
  403d9f:	push   cs
  403da0:	int    0xc9
  403da2:	push   cs
  403da3:	push   cs
  403da4:	mov    esp,0x8c0f0fc8
  403da9:	enter  0xf0f,0xac
  403dad:	enter  0xf0f,0x8c
  403db1:	enter  0xf0f,0x7c
  403db5:	enter  0xf0f,0xac
  403db9:	enter  0xf0f,0x8c
  403dbd:	enter  0xf0f,0x8c
  403dc1:	enter  0xf0f,0x7c
  403dc5:	enter  0xf0f,0x8c
  403dc9:	enter  0xf0f,0x6c
  403dcd:	enter  0xf0f,0x4c
  403dd1:	retf   0xf0f
	...
  403de8:	(bad)  
  403de9:	dec    DWORD PTR [edi]
  403deb:	minps  xmm0,XMMWORD PTR [edi]
  403dee:	adc    BYTE PTR [edi],cl
  403df0:	push   ebp
  403df1:	out    dx,eax
  403df2:	(bad)  
  403df3:	(bad)  
  403df5:	test   DWORD PTR [edi],0x2f0650f
  403dfb:	adc    BYTE PTR [ebx+0x2],dl
  403dfe:	adc    eax,0x16e45113
  403e03:	adc    al,0x76
  403e05:	in     eax,dx
  403e06:	pop    ss
  403e07:	adc    eax,0x1614e66f
  403e0c:	je     0x403dfc
  403e0e:	adc    al,0x16
  403e10:	ins    BYTE PTR es:[edi],dx
  403e11:	pop    es
  403e12:	push   ss
  403e13:	pop    ss
  403e14:	push   ebp
  403e15:	movhps xmm2,QWORD PTR [edi]
  403e18:	dec    ebp
  403e19:	or     BYTE PTR [ebx],bl
  403e1b:	sbb    BYTE PTR [edx+0x8],cl
  403e1e:	sbb    ebx,DWORD PTR [eax]
  403e20:	dec    edx
  403e21:	fcomp  DWORD PTR [eax+ebx*1]
  403e24:	jp     0x403dfe
  403e26:	sbb    al,0x18
  403e28:	jp     0x403e13
  403e2a:	sbb    ebx,DWORD PTR [ecx]
  403e2c:	imul   ebp,ecx,0x1b
  403e2f:	sbb    DWORD PTR [ebx-0x7],ebp
  403e32:	sbb    ebx,DWORD PTR [ecx]
  403e34:	pop    ebx
  403e35:	stc    
  403e36:	sbb    ebx,DWORD PTR [ecx]
  403e38:	pop    ebx
  403e39:	or     bl,BYTE PTR [ecx]
  403e3b:	sbb    cl,BYTE PTR [eax+0xa]
  403e3e:	sbb    DWORD PTR [edx],ebx
  403e40:	dec    eax
  403e41:	ficomp DWORD PTR [edx]
  403e43:	sbb    bh,BYTE PTR [eax-0x26]
  403e46:	sbb    bl,BYTE PTR [edx]
  403e48:	js     0x403e34
  403e4a:	sbb    BYTE PTR [edx],bl
	...
  403e60:	push   0x681a18ea
  403e65:	cli    
  403e66:	sbb    BYTE PTR [edx],bl
  403e68:	pop    eax
  403e69:	cli    
  403e6a:	sbb    BYTE PTR [edx],bl
  403e6c:	pop    eax
  403e6d:	or     ebx,DWORD PTR [edx]
  403e6f:	sbb    ecx,DWORD PTR [ecx+0xb]
  403e72:	sbb    bl,BYTE PTR [ebx]
  403e74:	dec    ecx
  403e75:	fld    DWORD PTR [edx]
  403e77:	sbb    edi,DWORD PTR [ecx-0x3e]
  403e7a:	add    bl,BYTE PTR [ebx]
  403e7c:	jns    0x403e40
  403e7e:	repnz sbb ch,BYTE PTR [ecx-0x3e]
  403e82:	repnz sbb ch,BYTE PTR [ecx-0x3e]
  403e86:	loop   0x403ea2
  403e88:	pop    ecx
  403e89:	ret    0x1ae2
  403e8c:	pop    ecx
  403e8d:	ret    0x1fd5
  403e90:	dec    esi
  403e91:	(bad)
  403e94:	inc    esi
  403e95:	lds    eax,FWORD PTR ds:0xfdc57e20
  403e9b:	pop    ds
  403e9c:	jbe    0x403e63
  403e9e:	cmc    
  403e9f:	pop    ds
  403ea0:	outs   dx,BYTE PTR ds:[esi]
  403ea1:	(bad)
  403ea4:	(bad)
  403ea8:	pop    esi
  403ea9:	(bad)
  403eac:	push   esi
  403ead:	(bad)
  403eb0:	dec    esi
  403eb1:	(bad)
  403eb4:	inc    esi
  403eb5:	lds    eax,FWORD PTR ds:0xfdc57e20
  403ebb:	pop    ds
  403ebc:	jbe    0x403e83
  403ebe:	cmc    
  403ebf:	pop    ds
  403ec0:	outs   dx,BYTE PTR ds:[esi]
  403ec1:	(bad)
	...
  403ed8:	(bad)
  403edc:	pop    esi
  403edd:	(bad)
  403ee0:	push   esi
  403ee1:	(bad)
  403ee4:	dec    edi
  403ee5:	(bad)  
  403ee6:	int3   
  403ee7:	and    BYTE PTR [edi-0x3c],al
  403eea:	add    al,0x21
  403eec:	jg     0x403eb2
  403eee:	cld    
  403eef:	and    BYTE PTR [edi-0x3c],dh
  403ef2:	hlt    
  403ef3:	and    BYTE PTR [edi-0x3c],ch
  403ef6:	in     al,dx
  403ef7:	and    BYTE PTR [edi-0x3c],ah
  403efa:	in     al,0x20
  403efc:	pop    edi
  403efd:	(bad)  
  403efe:	fsub   QWORD PTR [eax]
  403f00:	push   edi
  403f01:	les    eax,FWORD PTR [eax]
  403f03:	aam    0x42
  403f05:	les    ebx,FWORD PTR ds:0x1dc442cc
  403f0b:	add    al,0x83
  403f0d:	(bad)  
  403f0e:	sbb    eax,0x1dc682fc
  403f13:	hlt    
  403f14:	add    dh,0x1d
  403f17:	in     al,dx
  403f18:	add    dh,0x1d
  403f1b:	in     al,0x82
  403f1d:	(bad)  
  403f1e:	sbb    eax,0x1dc682dc
  403f23:	jmp    0xe544168e
  403f28:	pop    edx
  403f29:	fild   DWORD PTR [edi]
  403f2b:	icebp  
  403f2c:	imul   edx,edx,0xd06bf309
  403f32:	or     esp,ebp
  403f34:	pop    ebp
  403f35:	aad    0xc
  403f37:	fcom   QWORD PTR [esi+edx*8+0xd]
  403f3b:	test   DWORD PTR [eax],0x0
	...
  403f4d:	add    BYTE PTR [eax],al
  403f4f:	add    BYTE PTR [edi-0x2d],ch
  403f52:	push   cs
  403f53:	out    dx,al
  403f54:	data16 aam 0xf
  403f57:	fst    DWORD PTR [ecx-0x37]
  403f5a:	adc    cl,bl
  403f5c:	push   ecx
  403f5d:	leave  
  403f5e:	adc    al,bh
  403f60:	jo     0x403f2c
  403f62:	adc    eax,edi
  403f64:	jo     0x403f30
  403f66:	adc    ebx,edi
  403f68:	jae    0x403f31
  403f6a:	adc    bh,bl
  403f6c:	jae    0x403f35
  403f6e:	adc    bl,dl
  403f70:	push   edx
  403f71:	enter  0xda13,0x52
  403f75:	enter  0xdd13,0x55
  403f79:	int    0x14
  403f7b:	aad    0x4d
  403f7d:	int    0x14
  403f7f:	std    
  403f80:	jne    0x403f4f
  403f82:	adc    al,0xf5
  403f84:	ins    DWORD PTR es:[edi],dx
  403f85:	int    0x14
  403f87:	cld    
  403f88:	je     0x403f58
  403f8a:	adc    eax,0x15ce6cf4
  403f8f:	add    BYTE PTR [esi-0x71eaea35],bl
  403f95:	retf   
  403f96:	adc    eax,0x16ce8d15
  403f9b:	push   ss
  403f9c:	(bad)  
  403f9d:	into   
  403f9e:	push   ss
  403f9f:	push   ss
  403fa0:	pop    ebp
  403fa1:	into   
  403fa2:	push   ss
  403fa3:	push   ss
  403fa4:	dec    ebp
  403fa5:	into   
  403fa6:	push   ss
  403fa7:	push   ss
  403fa8:	dec    esp
  403fa9:	int    0x17
  403fab:	pop    ss
  403fac:	dec    esp
  403fad:	int    0x17
  403faf:	pop    ss
  403fb0:	sbb    al,0xcd
  403fb2:	pop    ss
  403fb3:	pop    ss
	...
  403fc8:	or     al,0xcd
  403fca:	pop    ss
  403fcb:	pop    ss
  403fcc:	adc    eax,eax
  403fce:	sbb    BYTE PTR [eax],bl
  403fd0:	adc    eax,eax
  403fd2:	sbb    BYTE PTR [eax],bl
  403fd4:	arpl   bp,ax
  403fd6:	sbb    BYTE PTR [eax],bl
  403fd8:	arpl   bp,ax
  403fda:	sbb    BYTE PTR [eax],bl
  403fdc:	adc    eax,eax
  403fde:	sbb    BYTE PTR [eax],bl
  403fe0:	adc    eax,eax
  403fe2:	sbb    BYTE PTR [eax],bl
  403fe4:	add    eax,eax
  403fe6:	sbb    BYTE PTR [eax],bl
  403fe8:	add    eax,eax
  403fea:	sbb    BYTE PTR [eax],bl
  403fec:	adc    bh,BYTE PTR [edi-0x40ede6e7]
  403ff2:	sbb    DWORD PTR [ecx],ebx
  403ff4:	(bad)  
  403ff5:	rcr    BYTE PTR [ecx],0x19
  403ff8:	(bad)  
  403ff9:	rcr    BYTE PTR [ecx],0x19
  403ffc:	sar    BYTE PTR [esi-0x412de6e7],cl
  404002:	sbb    DWORD PTR [ecx],ebx
  404004:	ret    0x19be
  404007:	sbb    edx,eax
  404009:	mov    esi,0xc1911919
  40400e:	sbb    bl,BYTE PTR [edx]
  404010:	xchg   ecx,eax
  404011:	rcr    DWORD PTR [edx],0x1a
  404014:	popa   
  404015:	mov    edi,0xbf611a1a
  40401a:	sbb    bl,BYTE PTR [edx]
  40401c:	(bad)  
  40401d:	call   0xe8a85a3a
  404022:	sbb    BYTE PTR [edx],bl
  404024:	pop    eax
  404025:	clc    
  404026:	sbb    BYTE PTR [edx],bl
  404028:	pop    eax
  404029:	clc    
  40402a:	sbb    BYTE PTR [edx],bl
	...
  404040:	dec    eax
  404041:	pop    es
  404042:	sbb    BYTE PTR [ebx],bl
  404044:	dec    ecx
  404045:	pop    es
  404046:	sbb    BYTE PTR [ebx],bl
  404048:	jns    0x404021
  40404a:	sbb    DWORD PTR [ebx],ebx
  40404c:	jns    0x404025
  40404e:	sbb    DWORD PTR [ebx],ebx
  404050:	imul   esp,edi,0xe7691b17
  404056:	pop    ss
  404057:	sbb    ebx,DWORD PTR [ecx-0x9]
  40405a:	pop    ss
  40405b:	sbb    ebx,DWORD PTR [ecx-0x9]
  40405e:	pop    ss
  40405f:	sbb    ecx,DWORD PTR [esi-0x10]
  404062:	add    al,BYTE PTR [eax]
  404064:	(bad)  
  404066:	add    al,BYTE PTR [eax]
  404068:	(bad)  
  404069:	out    dx,al
  40406a:	add    al,BYTE PTR [eax]
  40406c:	(bad)  
  40406d:	out    dx,eax
  40406e:	add    al,BYTE PTR [eax]
  404070:	(bad)  
  404071:	hlt    
  404072:	add    al,BYTE PTR [eax]
  404074:	(bad)  
  404075:	std    
  404076:	add    al,BYTE PTR [eax]
  404078:	(bad)  
  40407a:	add    al,BYTE PTR [eax]
  40407c:	(bad)  
  40407d:	sti    
  40407e:	add    al,BYTE PTR [eax]
  404080:	(bad)  
  404081:	clc    
  404082:	add    al,BYTE PTR [eax]
  404084:	(bad)  
  404085:	test   BYTE PTR [edx],0x0
  404088:	(bad)  
  404089:	in     al,dx
  40408a:	add    al,BYTE PTR [eax]
  40408c:	(bad)  
  40408e:	add    al,BYTE PTR [eax]
  404090:	(bad)  
  404091:	loopne 0x404095
  404093:	add    BYTE PTR [edx-0x14],ah
  404096:	add    al,BYTE PTR [eax]
  404098:	(bad)  
  404099:	clc    
  40409a:	add    al,BYTE PTR [eax]
  40409c:	bound  eax,QWORD PTR [ebx+eax*1]
  40409f:	add    BYTE PTR [edx+0x10],ah
  4040a2:	add    eax,DWORD PTR [eax]
	...
  4040b8:	bound  ebx,QWORD PTR [eax]
  4040ba:	add    eax,DWORD PTR [eax]
  4040bc:	(bad)  
  4040bd:	fstp   DWORD PTR [ecx]
  4040bf:	add    al,0x62
  4040c1:	fldenv [ecx]
  4040c3:	add    al,0x62
  4040c5:	fldcw  WORD PTR [ecx-0x46269dfd]
  4040cb:	add    esp,DWORD PTR [edx-0x27]
  4040ce:	leave  
  4040cf:	add    esp,DWORD PTR [edx-0x27]
  4040d2:	mov    ecx,0x69d96203
  4040d7:	add    al,0x62
  4040d9:	(bad)  [ecx+0x29d96204]
  4040df:	add    al,0x62
  4040e1:	(bad)  [ecx]
  4040e3:	add    al,0x62
  4040e5:	fldl2t 
  4040e7:	add    esp,DWORD PTR [edx-0x27]
  4040ea:	jmp    0xea19a2f2
  4040ef:	add    esp,DWORD PTR [edx-0x27]
  4040f2:	call   0xec19a2fa
  4040f7:	add    esp,DWORD PTR [edx-0x27]
  4040fa:	jmp    0x6203:0xedd96203
  404101:	(bad)  
  404103:	add    esp,DWORD PTR [edx-0x27]
  404106:	loope  0x40410b
  404108:	(bad)  
  404109:	(bad)  
  40410b:	add    esp,DWORD PTR [edx-0x27]
  40410e:	fld    DWORD PTR [ebx]
  404110:	(bad)  
  404111:	fabs   
  404113:	add    esp,DWORD PTR [edx-0x27]
  404116:	or     DWORD PTR [edx+eiz*2],eax
  404119:	fyl2xp1 
  40411b:	add    eax,DWORD PTR [eax]
	...
  40412d:	add    BYTE PTR [eax],al
  40412f:	add    BYTE PTR [edx-0x27],ah
  404132:	sub    DWORD PTR [edx+eiz*2],eax
  404135:	(bad)  [ecx]
  404137:	add    al,0x62
  404139:	fldcw  WORD PTR [ecx+0x3]
  40413c:	(bad)  
  40413d:	fldcw  WORD PTR [ecx-0x16269dfd]
  404143:	add    al,0x62
  404145:	fldcw  WORD PTR [ecx+0x4]
  404148:	(bad)  
  404149:	fld    DWORD PTR [eax]
  40414b:	jmp    0xe9411aaf
  404150:	fld    DWORD PTR fs:[eax]
  404153:	jmp    0xea3f22ed
  404158:	arpl   cx,bx
  40415a:	add    cl,ch
  40415c:	pop    ecx
  40415d:	fld    DWORD PTR [eax]
  40415f:	jmp    0xe9411ac9
  404164:	push   ecx
  404165:	fld    DWORD PTR [eax]
  404167:	jmp    0xe9411ab5
  40416c:	and    ecx,0xe151e9fe
  404172:	(bad)  
  404173:	jmp    0xe9411b19
  404178:	sbb    ecx,0xd961e900
  40417e:	add    BYTE PTR [edi+0x31],dh
  404181:	fdiv   DWORD PTR [edi-0x2b]
  404184:	jle    0x404155
  404186:	out    dx,al
  404187:	inc    ebx
  404188:	xchg   esi,eax
  404189:	rcr    BYTE PTR [ecx+0x76ee5d0],cl
  40418f:	pop    esi
  404190:	int    0x73
  404192:	jo     0x4041b0
	...
  4041a8:	mov    ch,0x7c
  4041aa:	jmp    0x9eb61f39
  4041af:	sbb    edx,esi
  4041b1:	add    al,0xe
  4041b3:	test   DWORD PTR [esi-0x3],edi
  4041b6:	js     0x40419f
  4041b8:	enter  0xe006,0x71
  4041bc:	or     DWORD PTR [edi+edx*4],ecx
  4041bf:	add    bl,BYTE PTR [edx-0x6593f6d9]
  4041c5:	sub    bh,BYTE PTR [esi-0x12]
  4041c8:	mov    esp,0x7578e728
  4041cd:	and    BYTE PTR [eax+0x1d286e0d],dl
  4041d3:	fwait
  4041d4:	(bad)  
  4041d5:	xor    BYTE PTR [edx+0x0],ch
  4041d8:	jae    0x404186
  4041da:	mov    ecx,0xbe9ccdf3
  4041df:	test   BYTE PTR [esi-0x1fe525f0],ch
  4041e5:	cmp    ebp,ebx
  4041e7:	ins    DWORD PTR es:[edi],dx
  4041e8:	fisubr DWORD PTR [edi-0x2c]
  4041eb:	hlt    
  4041ec:	inc    esp
  4041ed:	pusha  
  4041ee:	rol    DWORD PTR [ebx+0x136c44c5],cl
  4041f4:	dec    ebx
  4041f5:	ins    DWORD PTR es:[edi],dx
  4041f6:	imul   esp,DWORD PTR [ecx+eiz*4+0x23],0x62
  4041fb:	std    
  4041fc:	pop    ds
  4041fd:	adc    al,0x65
  4041ff:	mov    bh,BYTE PTR [eax+ecx*4-0x4e8debff]
  404206:	push   es
  404207:	arpl   ax,bp
  404209:	out    0xd,al
  40420b:	cli    
	...
  404220:	jbe    0x4041fa
  404222:	or     BYTE PTR [ebp+0x3b6cf583],cl
  404228:	or     eax,0x674c69cc
  40422d:	pushf  
  40422e:	pusha  
  40422f:	aad    0xa9
  404231:	stos   DWORD PTR es:[edi],eax
  404232:	addr16 mov ds:0x394a,al
  404236:	add    edi,DWORD PTR [esp+eax*8]
  404239:	(bad)  
  40423b:	dec    ebx
  40423c:	(bad)  
  40423d:	pop    esi
  40423e:	or     eax,0xa70b0d2
  404243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404244:	xor    DWORD PTR [ebp+esi*4+0x35],esi
  404248:	aas    
  404249:	cmp    eax,0x12d542b2
  40424e:	mov    ebx,0xbc243bdb
  404253:	lods   al,BYTE PTR ds:[esi]
  404254:	sbb    BYTE PTR [eax-0x7e69cd28],bh
  40425a:	fild   WORD PTR [ebp+0xc]
  40425d:	xlat   BYTE PTR ds:[ebx]
  40425e:	(bad)  
  40425f:	fsub   QWORD PTR [edx]
  404261:	call   0x96a2ee35
  404266:	repz fadd DWORD PTR [esp+ecx*1+0x7213de03]
  40426e:	push   edx
  40426f:	xlat   BYTE PTR ds:[ebx]
  404270:	call   0xaf9c:0xe5d02207
  404277:	mov    ah,0x43
  404279:	adc    edi,DWORD PTR [edi-0x71a6d34d]
  40427f:	mov    edx,0xbd5dee9d
	...
  404298:	retf   0x7b67
  40429b:	add    cl,BYTE PTR [edx-0x6]
  40429e:	mov    al,BYTE PTR ds:0xcda6415
  4042a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042a5:	aad    0xab
  4042a7:	or     esi,DWORD PTR [ebx-0x7290c892]
  4042ad:	add    DWORD PTR [edi+0x68],eax
  4042b0:	mov    edx,0x2361168b
  4042b5:	(bad)  
  4042b6:	in     eax,0x65
  4042b8:	or     al,0x61
  4042ba:	inc    edx
  4042bb:	fdiv   QWORD PTR [esi+esi*8-0x6b9c24cf]
  4042c2:	jecxz  0x404295
  4042c4:	retf   0x130a
  4042c7:	aad    0x35
  4042c9:	jp     0x404349
  4042cb:	mov    cl,0x93
  4042cd:	movd   mm6,DWORD PTR [esi-0x405fb2a4]
  4042d4:	in     eax,dx
  4042d5:	ret    
  4042d6:	sar    BYTE PTR [eax+0x7cd52fa],1
  4042dc:	jp     0x4042a2
  4042de:	mov    ebp,0x6c666500
  4042e3:	or     esp,edx
  4042e5:	clc    
  4042e6:	call   0x5d6a:0x96c030e
  4042ed:	(bad)  
  4042ef:	ins    BYTE PTR es:[edi],dx
  4042f0:	push   0xffffffd9
  4042f2:	jle    0x40431c
  4042f4:	inc    esi
  4042f5:	dec    eax
  4042f6:	call   0x9d378452
  4042fb:	push   ebp
	...
  404310:	dec    ecx
  404311:	jb     0x40431e
  404313:	and    eax,0xf4a1bd46
  404318:	inc    esi
  404319:	push   esp
  40431a:	das    
  40431b:	add    al,0x40
  40431d:	jmp    0x4042a2
  40431f:	xchg   ecx,eax
  404320:	fs ins DWORD PTR es:[edi],dx
  404322:	repnz pusha 
  404324:	arpl   dx,ax
  404326:	sub    BYTE PTR [eax-0x4049a4a6],dh
  40432c:	push   ebp
  40432d:	in     al,0x2e
  40432f:	fnsave [edx-0x5253468c]
  404335:	retf   
  404336:	push   ebx
  404337:	jl     0x4042e5
  404339:	push   edx
  40433a:	mov    ebp,0x15ddab8b
  40433f:	sbb    DWORD PTR [edi],edi
  404341:	jnp    0x4042e3
  404343:	call   0x385b0783
  404348:	xor    DWORD PTR [ebp-0x7c],ecx
  40434b:	inc    edi
  40434c:	cs loop 0x4042ff
  40434f:	and    al,0xf0
  404351:	mov    ebx,DWORD PTR [edi]
  404353:	push   ebp
  404354:	out    dx,eax
  404355:	mov    ds:0x39ee037d,al
  40435a:	or     esi,esp
  40435c:	call   0x3da0eb65
  404361:	xchg   ebx,eax
  404362:	push   ss
  404363:	xchg   ecx,eax
  404364:	cmp    bl,BYTE PTR [esp+edx*2-0x1dcacc40]
  40436b:	scas   eax,DWORD PTR es:[edi]
  40436c:	sub    al,0xa
  40436e:	inc    ebx
  40436f:	lods   eax,DWORD PTR ds:[esi]
  404370:	mov    ebx,DWORD PTR [edx+0xdccd]
	...
  404386:	add    BYTE PTR [eax],al
  404388:	test   BYTE PTR [ebp+0x2c858c2f],ah
  40438e:	cdq    
  40438f:	jnp    0x404313
  404391:	add    eax,DWORD PTR [eax]
  404393:	cmp    cl,bl
  404395:	fld    DWORD PTR [esp+eax*8+0x7a]
  404399:	fidiv  DWORD PTR [ebx]
  40439b:	inc    esi
  40439c:	sbb    dl,bl
  40439e:	stos   BYTE PTR es:[edi],al
  40439f:	mov    al,0x8d
  4043a1:	int3   
  4043a2:	fst    st(5)
  4043a4:	jbe    0x40437a
  4043a6:	push   eax
  4043a7:	inc    ebx
  4043a8:	push   ds
  4043a9:	(bad)  [edi]
  4043ab:	fst    DWORD PTR [ecx-0x2e]
  4043ae:	mov    esi,0xc9d1c167
  4043b3:	int3   
  4043b4:	adc    dh,BYTE PTR [ecx+0x57]
  4043b7:	cmp    ah,dl
  4043b9:	ins    DWORD PTR es:[edi],dx
  4043ba:	and    al,dh
  4043bc:	popf   
  4043bd:	jbe    0x404378
  4043bf:	jle    0x4043a6
  4043c1:	ja     0x404391
  4043c3:	out    0xbe,eax
  4043c5:	(bad)  
  4043c6:	pop    ebp
  4043c7:	jno    0x40436f
  4043c9:	jmp    FWORD PTR [eax]
  4043cb:	or     ecx,esi
  4043cd:	or     BYTE PTR [eax-0x38fa068b],dh
  4043d3:	ficomp WORD PTR [edx+0x28]
  4043d6:	pop    ecx
  4043d7:	push   0xe22e256a
  4043dc:	mov    ch,0x1e
  4043de:	mov    bh,0x4c
  4043e0:	jge    0x404401
  4043e2:	ror    cl,0xe0
  4043e5:	and    ebp,ebp
  4043e7:	push   edi
  4043e8:	mov    al,0x1c
  4043ea:	call   0x0:0xf5
	...
  4043fd:	add    BYTE PTR [eax],al
  4043ff:	add    BYTE PTR [ebx],al
  404401:	and    al,0x3
  404403:	arpl   WORD PTR [ebx],dx
  404405:	sub    esi,DWORD PTR [eax+esi*4+0x5c]
  404409:	push   es
  40440a:	jmp    0x2ffc:0x9d07443e
  404411:	add    BYTE PTR [edx+ebp*2],al
  404414:	push   esp
  404415:	std    
  404416:	jb     0x404413
  404418:	push   0x78
  40441a:	jecxz  0x404481
  40441c:	sti    
  40441d:	js     0x4043b3
  40441f:	add    BYTE PTR [ebp-0x51],ah
  404422:	ins    DWORD PTR es:[edi],dx
  404423:	or     eax,0x7a6a7fd3
  404428:	rcl    BYTE PTR ds:0x2626e40e,0x9
  40442f:	xchg   ebx,eax
  404430:	pushf  
  404431:	jbe    0x404433
  404433:	or     ch,BYTE PTR [edx]
  404435:	inc    ebx
  404436:	pop    es
  404437:	jge    0x4043c8
  404439:	dec    edx
  40443a:	(bad)  
  40443c:	stc    
  40443d:	jp     0x404447
  40443f:	xchg   DWORD PTR [ebx+0x27],edx
  404442:	add    DWORD PTR [esi],ebx
  404444:	and    eax,0x76690617
  404449:	mov    fs,WORD PTR [edx-0x9]
  40444c:	sar    BYTE PTR [esi-0x11557f9b],0x6a
  404453:	sbb    DWORD PTR [ebx+ebx*8],ebx
  404456:	imul   ebp,DWORD PTR [esi-0x63],0x2bfed4c1
  40445d:	repnz ror DWORD PTR [ecx+0x10daa2c1],1
	...
  404478:	aaa    
  404479:	(bad)  
  40447a:	frstor [edi+0x24]
  40447d:	add    eax,0x3692f9b9
  404482:	mov    esi,0xb765f88e
  404487:	pop    ss
  404488:	mov    ss,WORD PTR [ebx-0x50]
  40448b:	pusha  
  40448c:	arpl   WORD PTR [edx-0x2a],di
  40448f:	(bad)  
  404490:	in     eax,0x48
  404492:	shl    DWORD PTR [ecx+0x38d8177f],1
  404498:	leave  
  404499:	sub    edi,ebx
  40449b:	dec    edi
  40449c:	sbb    bh,BYTE PTR [ebp-0x73232e45]
  4044a2:	mov    esp,0xb3de26a6
  4044a7:	aas    
  4044a8:	push   eax
  4044a9:	jmp    0x40445b
  4044ab:	dec    eax
  4044ac:	bound  ebp,QWORD PTR [eax]
  4044ae:	call   0x19fe5ebf
  4044b3:	or     bh,BYTE PTR [ebp+0x2c03491b]
  4044b9:	xchg   edx,eax
  4044ba:	cmp    al,BYTE PTR [ebx+eiz*1]
  4044bd:	das    
  4044be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044bf:	pusha  
  4044c0:	mov    ch,0xc4
  4044c2:	aad    0x67
  4044c4:	cli    
  4044c5:	inc    edx
  4044c6:	test   DWORD PTR [esi-0x6d],ebp
  4044c9:	mov    ecx,0x76246976
  4044ce:	jo     0x404531
  4044d0:	test   eax,0xee667fe7
  4044d5:	xchg   ecx,eax
  4044d6:	shr    DWORD PTR [edi+0x7f],1
  4044d9:	and    al,0xa1
  4044db:	push   0x0
	...
  4044f0:	xor    BYTE PTR [ebp+0x2c],bh
  4044f3:	or     al,0xa6
  4044f5:	out    dx,al
  4044f6:	cmp    ecx,DWORD PTR [ebx]
  4044f8:	leave  
  4044f9:	cmp    BYTE PTR ds:0xdecb4002,cl
  4044ff:	add    al,0x17
  404501:	inc    esp
  404502:	clc    
  404503:	mov    ecx,0xbd09d99f
  404508:	mov    al,0x7f
  40450a:	pop    ecx
  40450b:	mov    ah,0x39
  40450d:	imul   BYTE PTR [eax]
  40450f:	mov    bl,0xbe
  404511:	dec    ebx
  404512:	mov    ah,0xd7
  404514:	and    dl,ah
  404516:	ret    
  404517:	rcl    BYTE PTR [edi],1
  404519:	push   0xdd76d995
  40451e:	ficomp WORD PTR fs:[ecx-0x269b3e80]
  404525:	adc    dh,BYTE PTR [ecx+0x60753e63]
  40452b:	push   0xffffffaf
  40452d:	out    0x8f,al
  40452f:	ins    DWORD PTR es:[edi],dx
  404530:	pusha  
  404531:	cdq    
  404532:	std    
  404533:	or     dh,dh
  404535:	sub    ebp,ebp
  404537:	or     eax,0x2b6cd9f9
  40453c:	pop    ebp
  40453d:	addr16 cli 
  40453f:	pop    edx
  404540:	(bad)  
  404541:	aam    0x6b
  404543:	ds mov ch,0x44
  404546:	cmc    
  404547:	sub    eax,0xdf96f7aa
  40454c:	mov    dl,0x5e
  40454e:	add    DWORD PTR [edi],ecx
  404550:	adc    al,0xce
  404552:	push   edx
  404553:	add    BYTE PTR [eax],0x0
	...
  404566:	add    BYTE PTR [eax],al
  404568:	mov    al,0x47
  40456a:	fdiv   QWORD PTR [ecx-0x49]
  40456d:	hlt    
  40456e:	pop    ebp
  40456f:	mov    ds:0xd2c85da6,eax
  404574:	cdq    
  404575:	into   
  404576:	mov    ebp,0x2b5391d6
  40457b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40457c:	xchg   esi,eax
  40457d:	call   0x71c7bd02
  404582:	ja     0x1ae50040
  404588:	aam    0x58
  40458a:	adc    ch,dl
  40458c:	retf   0x47e3
  40458f:	cmp    edx,edx
  404591:	push   0xffffffd6
  404593:	dec    edx
  404594:	mov    ch,0xc1
  404596:	dec    edi
  404597:	dec    esi
  404598:	push   0x51
  40459a:	fstp   DWORD PTR ds:0xef32da5d
  4045a0:	pop    edi
  4045a1:	jae    0x404540
  4045a3:	(bad)  
  4045a4:	(bad)  
  4045a5:	enter  0x9236,0xbf
  4045a9:	dec    edx
  4045aa:	shl    BYTE PTR [ecx-0x40],0xe1
  4045ae:	cmp    DWORD PTR [ebx-0x3d5b8747],esi
  4045b4:	into   
  4045b5:	ret    
  4045b6:	xchg   ecx,eax
  4045b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045b8:	push   0x5fd5ff39
  4045bd:	add    bl,BYTE PTR [ebp+0x2b8b5e86]
  4045c3:	ja     0x404626
  4045c5:	mov    al,ds:0x730b8800
  4045ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045cb:	test   BYTE PTR [eax],0x0
	...
  4045de:	add    BYTE PTR [eax],al
  4045e0:	imul   edi,DWORD PTR [ecx-0x30],0x34
  4045e4:	cdq    
  4045e5:	jo     0x404630
  4045e7:	ret    0x6b38
  4045ea:	and    edx,DWORD PTR ds:[eax+ecx*1-0x52]
  4045ef:	lods   eax,DWORD PTR ds:[esi]
  4045f0:	lahf   
  4045f1:	add    ebx,ecx
  4045f3:	dec    edi
  4045f4:	in     eax,0xfa
  4045f6:	aas    
  4045f7:	mov    ecx,0x1a3701cc
  4045fc:	inc    eax
  4045fd:	sbb    eax,0x1df3a4a9
  404602:	fisub  WORD PTR [esi]
  404604:	mov    eax,ds:0xf0904726
  404609:	and    esi,DWORD PTR [eax]
  40460b:	cmc    
  40460c:	out    dx,eax
  40460d:	sbb    edi,DWORD PTR [ebp-0x35e1589d]
  404613:	mov    ecx,0x475325cc
  404618:	add    al,0x25
  40461a:	and    al,0xec
  40461c:	fwait
  40461d:	or     DWORD PTR [edx-0x32fda4a6],edi
  404623:	adc    BYTE PTR [ecx],ch
  404625:	sti    
  404626:	push   ebx
  404627:	sahf   
  404628:	dec    eax
  404629:	add    BYTE PTR [ebx],ah
  40462b:	pop    es
  40462c:	inc    esp
  40462d:	jae    0x4045e2
  40462f:	xchg   ecx,eax
  404630:	das    
  404631:	js     0x4045f7
  404633:	jmp    0x404689
  404635:	jno    0x404694
  404637:	push   ebp
  404638:	cmp    al,0x48
  40463a:	sub    edi,esi
  40463c:	shl    esp,cl
  40463e:	mov    ah,0x88
  404640:	jecxz  0x404627
  404642:	rol    DWORD PTR [edx],0x0
	...
  404655:	add    BYTE PTR [eax],al
  404657:	add    BYTE PTR [ecx],dh
  404659:	fistp  WORD PTR [edx+0x6c]
  40465c:	add    ah,bl
  40465e:	sub    ebp,ecx
  404660:	popa   
  404661:	fld    DWORD PTR [eax]
  404663:	test   al,0x36
  404665:	hlt    
  404666:	pop    ss
  404667:	add    BYTE PTR [ecx+0x483236fe],bh
  40466d:	das    
  40466e:	sub    al,0x2b
  404670:	pop    es
  404671:	mov    ds:0x90c6646d,al
  404676:	jbe    0x4046f5
  404678:	jne    0x4046bc
  40467a:	pop    ebx
  40467b:	push   esi
  40467c:	les    esi,FWORD PTR [ebx+0x40]
  40467f:	dec    edi
  404680:	add    edx,DWORD PTR [edi-0x28]
  404683:	enter  0x4642,0xc3
  404687:	shl    DWORD PTR [ecx+0x75],1
  40468a:	out    dx,al
  40468b:	cli    
  40468c:	adc    BYTE PTR [ebp+0x19bfe3f5],ah
  404692:	mov    ah,0xac
  404694:	outs   dx,BYTE PTR ds:[esi]
  404695:	or     ebp,DWORD PTR [edi-0x7c47b24b]
  40469b:	sahf   
  40469c:	or     al,0xea
  40469e:	cwde   
  40469f:	xchg   DWORD PTR [edx-0x11],edi
  4046a2:	ret    0xab4a
  4046a5:	mov    ebp,0xdc853d9
  4046aa:	cmc    
  4046ab:	js     0x4046e6
  4046ad:	sbb    al,0xee
  4046af:	popa   
  4046b0:	jbe    0x404664
  4046b2:	scas   eax,DWORD PTR es:[edi]
  4046b3:	cs mov bh,0x82
  4046b6:	mov    ah,0x37
  4046b8:	inc    esp
  4046b9:	push   eax
  4046ba:	cdq    
  4046bb:	sbb    al,0x0
	...
  4046cd:	add    BYTE PTR [eax],al
  4046cf:	add    ch,dh
  4046d1:	pusha  
  4046d2:	add    BYTE PTR ds:0x821a64b2,0x73
  4046d9:	xor    eax,DWORD PTR [ecx]
  4046db:	fwait
  4046dc:	inc    eax
  4046dd:	xchg   DWORD PTR [eax+esi*4],ebp
  4046e0:	rcl    DWORD PTR [esi+0x26eea937],0x76
  4046e7:	out    0x1f,al
  4046e9:	clc    
  4046ea:	ins    BYTE PTR es:[edi],dx
  4046eb:	call   FWORD PTR [edx+ecx*8-0x24422bbf]
  4046f2:	pop    edx
  4046f3:	int    0x62
  4046f5:	and    al,0xe9
  4046f7:	adc    edi,0xffffffe2
  4046fa:	adc    eax,0x48a1d69f
  4046ff:	mov    dl,0xc5
  404701:	pusha  
  404702:	cmp    DWORD PTR [ecx-0x175dd82c],ebp
  404708:	adc    ebx,edi
  40470a:	aam    0xf3
  40470c:	cli    
  40470d:	in     eax,0x83
  40470f:	fisub  WORD PTR [ecx]
  404711:	sbb    eax,0x5c18c577
  404716:	pusha  
  404717:	pop    ebp
  404718:	(bad)  
  404719:	fwait
  40471a:	xchg   ecx,eax
  40471b:	inc    esi
  40471c:	sahf   
  40471d:	jmp    0x70ae:0x294d6bc0
  404724:	dec    esp
  404725:	pusha  
  404726:	sbb    eax,0x4c978b31
  40472b:	sub    al,BYTE PTR [edx+0x6906fbae]
  404731:	in     eax,0xec
  404733:	sbb    eax,DWORD PTR [eax]
	...
  404745:	add    BYTE PTR [eax],al
  404747:	add    BYTE PTR [eax+0x73],dl
  40474a:	clc    
  40474b:	inc    ebp
  40474c:	lea    esi,[ebx]
  40474e:	or     DWORD PTR [ebp-0x64],ebx
  404751:	rcl    BYTE PTR [esi+0x70],1
  404754:	(bad)  
  404755:	xchg   ecx,eax
  404756:	daa    
  404757:	imul   ecx,DWORD PTR [esi-0x36d54aaa],0xf
  40475e:	les    esi,FWORD PTR [ecx]
  404760:	shl    BYTE PTR [ebx+edx*4+0x64edeb1c],0x7
  404768:	shr    BYTE PTR [edx],cl
  40476a:	outs   dx,BYTE PTR ds:[esi]
  40476b:	lahf   
  40476c:	push   ebp
  40476d:	ins    BYTE PTR es:[edi],dx
  40476e:	jg     0x4046f4
  404770:	push   esp
  404771:	cdq    
  404772:	shr    BYTE PTR [ecx-0x4d602779],1
  404778:	xchg   esi,eax
  404779:	(bad)  
  40477b:	repz rol DWORD PTR [esi+0x3a],1
  40477f:	call   0xce5213c
  404784:	daa    
  404785:	sbb    esp,ebx
  404787:	fst    QWORD PTR [edi]
  404789:	xor    ch,ch
  40478b:	inc    eax
  40478c:	stos   DWORD PTR es:[edi],eax
  40478d:	leave  
  40478e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40478f:	xor    eax,eax
  404791:	shr    BYTE PTR [edi-0x22],0xac
  404795:	fwait
  404796:	xsaveopt es:[edx+0x6d777de9]
  40479e:	test   al,0x6c
  4047a0:	push   esp
  4047a1:	imul   ebx,DWORD PTR fs:[ecx+eax*2+0x3acdaa7f],0xffffff96
  4047aa:	in     eax,0xc8
	...
  4047c0:	ret    0x1c11
  4047c3:	mov    eax,0x6776f8a9
  4047c8:	hlt    
  4047c9:	jecxz  0x404778
  4047cb:	xchg   esi,eax
  4047cc:	out    0xea,eax
  4047ce:	loopne 0x4047d3
  4047d0:	sahf   
  4047d1:	xor    eax,0x1cacf520
  4047d6:	jae    0x4047fa
  4047d8:	mov    eax,0xc353b247
  4047dd:	dec    esi
  4047de:	cmp    al,0x51
  4047e0:	jmp    0x2603d78
  4047e5:	jnp    0x404785
  4047e7:	out    dx,eax
  4047e8:	out    dx,al
  4047e9:	popa   
  4047ea:	push   edi
  4047eb:	(bad)  
  4047ec:	out    dx,eax
  4047ed:	push   0xb7b58c18
  4047f2:	fstp   DWORD PTR [esi+edx*4-0x62]
  4047f6:	cmp    ch,BYTE PTR [edx-0x44843a7d]
  4047fc:	js     0x4047ca
  4047fe:	mov    ah,0xd6
  404800:	add    BYTE PTR [ebx-0x13],cl
  404803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404804:	jmp    0x404847
  404806:	es jns 0x4047bf
  404809:	sbb    DWORD PTR [edi-0x78],ebx
  40480c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40480d:	xor    BYTE PTR [ecx],al
  40480f:	xchg   ecx,eax
  404810:	jae    0x4047f9
  404812:	push   ss
  404813:	rol    BYTE PTR [eax-0x13],1
  404816:	or     eax,0x25117643
  40481b:	sbb    BYTE PTR [edi+0x494e3bfa],0xd4
  404822:	fs pop es
	...
  404838:	cwde   
  404839:	mov    edi,0xa31ecc7d
  40483e:	push   esi
  40483f:	test   DWORD PTR [ecx],ecx
  404841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404842:	dec    edi
  404843:	dec    edx
  404844:	lods   al,BYTE PTR ds:[esi]
  404845:	push   0x62d50b00
  40484a:	sbb    DWORD PTR [eax],ecx
  40484c:	and    bh,BYTE PTR [esi+0x32]
  40484f:	dec    ecx
  404850:	mov    bl,0x94
  404852:	sub    eax,DWORD PTR [esi-0x4054033a]
  404858:	adc    DWORD PTR [esi],edx
  40485a:	mov    ch,0x14
  40485c:	loope  0x404848
  40485e:	popf   
  40485f:	dec    ebp
  404860:	push   eax
  404861:	loopne 0x4047e9
  404863:	add    ch,0x1d
  404866:	enter  0x6ac3,0x2a
  40486a:	rcl    eax,1
  40486c:	daa    
  40486d:	push   edi
  40486e:	cli    
  40486f:	adc    DWORD PTR [ebp+0x3c],ebp
  404872:	jecxz  0x404813
  404874:	jle    0x40488c
  404876:	cs push esi
  404878:	imul   edi,ebp,0xe068fd36
  40487e:	sbb    esi,DWORD PTR [ebx+edi*4-0x284fb19]
  404885:	sub    DWORD PTR [edx+0x3a],ecx
  404888:	loop   0x4048aa
  40488a:	push   ebx
  40488b:	fldcw  WORD PTR [edi-0x2ae787c5]
  404891:	push   esi
  404892:	popa   
  404893:	push   edi
  404894:	mov    al,0xbe
  404896:	out    0x8e,al
  404898:	mov    ds:0xffd3,eax
	...
  4048ad:	add    BYTE PTR [eax],al
  4048af:	add    BYTE PTR [edi],ah
  4048b1:	outs   dx,BYTE PTR ds:[esi]
  4048b2:	rcl    ebp,1
  4048b4:	push   esi
  4048b5:	cmp    edx,ecx
  4048b7:	int3   
  4048b8:	xchg   ecx,eax
  4048b9:	into   
  4048ba:	mov    BYTE PTR [ebx-0x65702430],al
  4048c0:	add    ebp,DWORD PTR ds:0x242b1bd
  4048c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048c7:	test   al,0x0
  4048c9:	popa   
  4048ca:	cmp    BYTE PTR [ebx],0x41
  4048cd:	ss cdq 
  4048cf:	and    dl,BYTE PTR [edx-0x7e]
  4048d2:	mov    ah,0x9
  4048d4:	xchg   ebx,eax
  4048d5:	(bad)  
  4048d6:	scas   eax,DWORD PTR es:[edi]
  4048d7:	adc    ah,al
  4048d9:	sub    esi,ebp
  4048db:	pop    edi
  4048dc:	and    eax,0xb646f4f5
  4048e1:	(bad)  
  4048e2:	fldcw  WORD PTR [ebp-0x79]
  4048e5:	rol    eax,cl
  4048e7:	je     0x404921
  4048e9:	out    0x5a,eax
  4048eb:	repz stc 
  4048ed:	mov    ecx,0xe0aea41
  4048f2:	ins    DWORD PTR es:[edi],dx
  4048f3:	ror    DWORD PTR [ebx+0x18],0x76
  4048f7:	fdivr  DWORD PTR [esi+ebp*4+0x37]
  4048fb:	xchg   edi,eax
  4048fc:	mov    ebp,0xe8e2c7e
  404901:	dec    ebp
  404902:	add    DWORD PTR [ebp-0x43e59ec1],esp
  404908:	mov    cl,0x52
  40490a:	inc    eax
  40490b:	jno    0x40497d
  40490d:	inc    edx
  40490e:	pop    ebx
  40490f:	push   0x43767503
	...
  404928:	ret    0x6da0
  40492b:	pop    edx
  40492c:	mov    ch,0x15
  40492e:	sub    al,0x15
  404930:	push   esp
  404931:	add    esi,DWORD PTR [edi]
  404933:	or     al,0xe7
  404935:	mov    ah,0x1b
  404937:	daa    
  404938:	ss jmp 0xd0a2873e
  40493e:	add    bl,BYTE PTR [eax-0x7d0c7055]
  404944:	add    dh,BYTE PTR [edx]
  404946:	and    ebp,DWORD PTR [esi-0x4ab00f17]
  40494c:	lock mov bl,0xc7
  40494f:	hlt    
  404950:	daa    
  404951:	imul   esi,DWORD PTR [esi+0x645626ef],0xffffffc2
  404958:	inc    ebp
  404959:	or     eax,0xd934d997
  40495e:	jo     0x404967
  404960:	hlt    
  404961:	sbb    DWORD PTR [esi+0x1c],edi
  404964:	aad    0x66
  404966:	int3   
  404967:	xor    esi,esi
  404969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40496a:	popf   
  40496b:	sub    ah,bh
  40496d:	fsubr  QWORD PTR [ecx]
  40496f:	imul   ebx,DWORD PTR [eax],0x16
  404972:	cmp    eax,0x82b1170
  404977:	pop    ebp
  404978:	cli    
  404979:	jecxz  0x404955
  40497b:	inc    ebp
  40497c:	add    esp,DWORD PTR [ecx+0x627cddf4]
  404982:	add    eax,0x591f5dc5
  404987:	call   0xf36629ba
	...
  4049a0:	pop    ds
  4049a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049a2:	mov    cl,0xb2
  4049a4:	pusha  
  4049a5:	pop    esi
  4049a6:	shr    BYTE PTR [ecx-0x7b6e1ca7],0x72
  4049ad:	pushf  
  4049ae:	bound  ebx,QWORD PTR [edi-0x3aa3d585]
  4049b4:	mov    esi,0x9fde8d68
  4049b9:	xchg   edi,eax
  4049ba:	mov    esi,0xadd6acf3
  4049bf:	call   0xa9595761
  4049c4:	loop   0x404a0a
  4049c6:	dec    eax
  4049c7:	mov    dl,0xdb
  4049c9:	fsub   DWORD PTR ds:0xdf86d4fb
  4049cf:	jmp    0x4049b2
  4049d1:	jg     0x40496b
  4049d3:	out    0x49,eax
  4049d5:	add    eax,0xc651659
  4049da:	cli    
  4049db:	inc    ebp
  4049dc:	mov    bl,dh
  4049de:	mov    edx,0x7bda9334
  4049e3:	mov    ds:0xd33521d2,al
  4049e8:	leave  
  4049e9:	sub    dh,bl
  4049eb:	sbb    BYTE PTR [edi+ecx*2+0x368f7197],0xa6
  4049f3:	aam    0x28
  4049f5:	lahf   
  4049f6:	fbld   TBYTE PTR [ebp+0x7634a803]
  4049fc:	shr    DWORD PTR es:[ebp-0x79],1
  404a00:	xor    eax,0x11a2ba
	...
  404a15:	add    BYTE PTR [eax],al
  404a17:	add    ah,ch
  404a19:	and    bl,0xe0
  404a1c:	out    dx,al
  404a1d:	mov    esi,DWORD PTR [eax+0x7174c234]
  404a23:	inc    ebp
  404a24:	test   eax,0x41492e5d
  404a29:	(bad)  
  404a2a:	out    0x17,al
  404a2c:	call   0x6508:0x6eebabef
  404a33:	cli    
  404a34:	pop    edi
  404a35:	add    DWORD PTR [edx],ebp
  404a37:	mov    WORD PTR ds:0x165ceb3a,ss
  404a3d:	push   ebx
  404a3e:	test   al,0xae
  404a40:	cmp    ebp,DWORD PTR [ecx+ebp*2]
  404a43:	mov    edi,0xc0f72540
  404a48:	push   0x58
  404a4a:	cs mov al,0x41
  404a4d:	jno    0x404ab4
  404a4f:	arpl   WORD PTR [esi+eax*4-0x64],sp
  404a53:	xchg   edx,eax
  404a54:	ja     0x404ad5
  404a56:	add    edx,edx
  404a58:	popa   
  404a59:	sub    eax,0x237713e4
  404a5e:	std    
  404a5f:	cmp    BYTE PTR [edi+esi*1],0xd6
  404a63:	inc    ecx
  404a64:	adc    eax,0x28fecf50
  404a69:	mov    eax,0xcf8bb748
  404a6e:	push   ecx
  404a6f:	pop    esp
  404a70:	cmp    ebp,DWORD PTR [ebx-0x5aa5ea86]
  404a76:	arpl   dx,bx
  404a78:	(bad)  
  404a79:	fs sub al,0x9b
	...
  404a90:	int3   
  404a91:	imul   esi,DWORD PTR ds:0x1e8dd678,0x39
  404a98:	pop    ds
  404a99:	jns    0x404aa2
  404a9b:	add    eax,0x3c5f52ed
  404aa0:	and    al,0x3c
  404aa2:	inc    esi
  404aa3:	xchg   edi,eax
  404aa4:	out    dx,al
  404aa5:	and    BYTE PTR [ebp-0x32],ch
  404aa8:	and    DWORD PTR [esi],0xe8100174
  404aae:	cmp    al,BYTE PTR [eax+0x61]
  404ab1:	loopne 0x404ad4
  404ab3:	push   ebx
  404ab4:	xchg   edx,eax
  404ab5:	std    
  404ab6:	or     BYTE PTR [edx],dl
  404ab8:	inc    ebx
  404ab9:	adc    dl,BYTE PTR [eax]
  404abb:	int    0x36
  404abd:	jp     0x404a56
  404abf:	test   BYTE PTR [ecx+0x654f8e95],bl
  404ac5:	push   0x5fac06a5
  404aca:	mov    esp,0xf39e3dc9
  404acf:	mov    BYTE PTR [edx],bh
  404ad1:	test   eax,0xd3a80bea
  404ad6:	ror    edx,0xc8
  404ad9:	mov    edx,0x94fe54d8
  404ade:	adc    eax,0xc79b18d
  404ae3:	add    BYTE PTR [edx+ebx*2+0x4b8d268b],bl
  404aea:	nop
  404aeb:	aas    
  404aec:	push   edx
  404aed:	mov    dl,0xce
  404aef:	jo     0x404ae4
  404af1:	call   0x40b4bf
	...
  404b06:	add    BYTE PTR [eax],al
  404b08:	inc    eax
  404b09:	pop    ss
  404b0a:	out    0x42,eax
  404b0c:	add    DWORD PTR [esi],0xf2c65bfc
  404b12:	arpl   sp,bx
  404b14:	mov    bh,0x1e
  404b16:	jg     0x404add
  404b18:	push   esp
  404b19:	into   
  404b1a:	push   ebx
  404b1b:	out    dx,al
  404b1c:	adc    eax,0xcaf746c5
  404b21:	xor    cl,BYTE PTR [eax]
  404b23:	mov    eax,0xa113637b
  404b28:	sbb    BYTE PTR [ecx-0x7e3675c2],cl
  404b2e:	and    eax,0xdd3b93
  404b33:	add    BYTE PTR [edi+ebp*8],dh
  404b36:	ret    0xed01
  404b39:	mov    al,ds:0x42c20385
  404b3e:	inc    edi
  404b3f:	add    ch,BYTE PTR [edi+0x34]
  404b42:	or     BYTE PTR [edi],al
  404b44:	pusha  
  404b45:	xchg   esi,eax
  404b46:	retf   0xd906
  404b49:	add    DWORD PTR [esp+eax*1+0x54deb86],ecx
  404b50:	shr    DWORD PTR [edx+edx*1],cl
  404b53:	push   cs
  404b54:	cmp    al,0xbe
  404b56:	ror    DWORD PTR [edi],1
  404b58:	cmc    
  404b59:	push   eax
  404b5a:	xchg   esi,eax
  404b5b:	or     eax,0xc54729a
  404b60:	pop    ss
  404b61:	test   BYTE PTR [ebx],bl
  404b63:	or     DWORD PTR [eax+0x66],ebx
  404b66:	(bad)  [eax]
  404b68:	mov    cl,0xa7
  404b6a:	pushf  
  404b6b:	or     al,BYTE PTR [eax]
	...
  404b7d:	add    BYTE PTR [eax],al
  404b7f:	add    BYTE PTR [esi+0x620b5d19],cl
  404b85:	repnz arpl WORD PTR [esi],sp
  404b88:	jle    0x404b81
  404b8a:	mov    ecx,0x31b877e4
  404b8f:	mov    ds:0x6007a96d,al
  404b94:	fs push ss
  404b96:	cld    
  404b97:	cs pop ecx
  404b99:	sub    esp,DWORD PTR [edx]
  404b9b:	in     eax,dx
  404b9c:	pop    eax
  404b9d:	add    al,0xc8
  404b9f:	stos   DWORD PTR es:[edi],eax
  404ba0:	dec    edx
  404ba1:	and    eax,0xfa4b696e
  404ba6:	mov    dh,0x35
  404ba8:	jo     0x404bc9
  404baa:	(bad)  
  404bab:	div    DWORD PTR [ecx+0x60]
  404bae:	jecxz  0x404b60
  404bb0:	jae    0x404be3
  404bb2:	cmp    DWORD PTR [ebx+0x72],esi
  404bb5:	scas   al,BYTE PTR es:[edi]
  404bb6:	dec    esp
  404bb7:	cmp    al,0x57
  404bb9:	jecxz  0x404baf
  404bbb:	std    
  404bbc:	dec    esi
  404bbd:	jl     0x404c37
  404bbf:	mov    eax,0x7a9e7d54
  404bc4:	dec    ebp
  404bc5:	loop   0x404c09
  404bc7:	dec    ebp
  404bc8:	pop    edx
  404bc9:	pop    es
  404bca:	(bad)  [esi-0x3668b7a5]
  404bd0:	dec    ecx
  404bd1:	sbb    DWORD PTR [ebp-0x6779b7f5],ebp
  404bd7:	inc    esp
  404bd8:	cmp    eax,0x34867ebb
  404bdd:	adc    al,0xef
  404bdf:	mov    edi,0x255152e
	...
  404bf8:	daa    
  404bf9:	or     dl,BYTE PTR [eax]
  404bfb:	pop    esi
  404bfc:	xchg   esp,eax
  404bfd:	(bad)  
  404bff:	pushf  
  404c00:	(bad)  
  404c01:	rol    ch,1
  404c03:	ficom  DWORD PTR [edi-0x71e7a43f]
  404c09:	imul   edx,DWORD PTR ds:[edi+0x73],0x7295cf53
  404c11:	fst    DWORD PTR [ecx-0x42f56ee4]
  404c17:	add    dl,BYTE PTR [ebx+0xc]
  404c1a:	js     0x404bba
  404c1c:	or     ebp,esi
  404c1e:	inc    esi
  404c1f:	js     0x404bec
  404c21:	cmc    
  404c22:	test   edx,esi
  404c24:	jl     0x404c1d
  404c26:	mov    al,0x4c
  404c28:	aaa    
  404c29:	mul    DWORD PTR [ebx]
  404c2b:	aaa    
  404c2c:	add    ah,bh
  404c2e:	repnz loopne 0x404c06
  404c31:	cli    
  404c32:	or     DWORD PTR [ebx-0x4b0b077c],ecx
  404c38:	ds cli 
  404c3a:	jmp    FWORD PTR [edi-0x26]
  404c3d:	add    ebp,edi
  404c3f:	leave  
  404c40:	sbb    BYTE PTR [ebx],al
  404c42:	scas   al,BYTE PTR es:[edi]
  404c43:	and    ecx,DWORD PTR [esi+0x1]
  404c46:	mov    ecx,0x3c0187fd
  404c4b:	pop    es
  404c4c:	mov    bl,0xfc
  404c4e:	sub    dh,BYTE PTR [ecx]
  404c50:	icebp  
  404c51:	std    
  404c52:	cmp    DWORD PTR [ebx+0x654d0037],0x7627fe6d
	...
  404c70:	clc    
  404c71:	dec    ecx
  404c72:	pop    ss
  404c73:	mov    al,ds:0x4a5648ba
  404c78:	ins    BYTE PTR es:[edi],dx
  404c79:	dec    edx
  404c7a:	popa   
  404c7b:	hlt    
  404c7c:	sub    DWORD PTR [esp+edx*8-0x22],ecx
  404c80:	rol    BYTE PTR [esi-0x3d],1
  404c83:	cmp    BYTE PTR [ebx+0x55b55a47],dl
  404c89:	inc    ebp
  404c8a:	and    eax,0x50450f8b
  404c8f:	enter  0x4feb,0x1f
  404c93:	outs   dx,BYTE PTR ds:[esi]
  404c94:	sub    DWORD PTR [esi-0x22],ecx
  404c97:	sti    
  404c98:	pop    esi
  404c99:	dec    esp
  404c9a:	or     DWORD PTR [edx],esp
  404c9c:	xchg   ebp,eax
  404c9d:	dec    ebp
  404c9e:	add    DWORD PTR [ebp+0x5a785972],ecx
  404ca4:	pop    esp
  404ca5:	sbb    edi,DWORD PTR [ecx-0x4d]
  404ca8:	inc    esi
  404ca9:	aad    0x7a
  404cab:	pushf  
  404cac:	call   0xb499c748
  404cb1:	xchg   edx,eax
  404cb2:	ins    DWORD PTR es:[edi],dx
  404cb3:	data16 and cl,BYTE PTR [edi+0x6c]
  404cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cb8:	mov    eax,0xee906e11
  404cbd:	shr    DWORD PTR [edi+0x5],cl
  404cc0:	cld    
  404cc1:	sub    DWORD PTR [edx+0x12],0xffffffda
  404cc5:	inc    esi
  404cc6:	imul   ebp,ebx,0x13
  404cc9:	or     BYTE PTR [ecx+0x14],ch
  404ccc:	jbe    0x404c99
  404cce:	push   0x637e84e1
  404cd3:	push   cs
	...
  404ce8:	jae    0x404d26
  404cea:	(bad)  
  404ceb:	iret   
  404cec:	test   al,0x2
  404cee:	pusha  
  404cef:	cwde   
  404cf0:	push   ds
  404cf1:	shl    BYTE PTR [ecx+0x1d],0x2d
  404cf5:	ja     0x404d5b
  404cf7:	dec    edx
  404cf8:	retf   
  404cf9:	xor    eax,0xfb616365
  404cfe:	data16 ins BYTE PTR es:[edi],dx
  404d00:	inc    edi
  404d01:	mov    ecx,0xa5d8c966
  404d06:	dec    ecx
  404d07:	idiv   BYTE PTR [esi-0x1c]
  404d0a:	inc    edi
  404d0b:	mov    bh,0x64
  404d0d:	sub    cl,BYTE PTR [edx-0x80]
  404d10:	push   edx
  404d11:	push   0xaf40f54b
  404d16:	dec    esi
  404d17:	and    dh,bh
  404d19:	icebp  
  404d1a:	dec    esi
  404d1b:	jnp    0x404d99
  404d1d:	xor    ecx,DWORD PTR [ebp-0x7c]
  404d20:	sbb    dh,BYTE PTR [ecx+0x4c]
  404d23:	jno    0x404d10
  404d25:	xchg   esp,eax
  404d26:	inc    edi
  404d27:	jle    0x404d3a
  404d29:	xlat   BYTE PTR ds:[ebx]
  404d2a:	inc    ebp
  404d2b:	add    BYTE PTR ds:0xfa454104,cl
  404d31:	lods   eax,DWORD PTR ds:[esi]
  404d32:	add    BYTE PTR [edi+ecx*4-0x35],0xcd
  404d37:	inc    ecx
  404d38:	js     0x404d57
  404d3a:	push   cs
  404d3b:	inc    eax
  404d3c:	xchg   ecx,eax
  404d3d:	imul   ecx,DWORD PTR [eax+0x42],0xffffffa6
  404d41:	inc    ebp
  404d42:	mov    al,BYTE PTR [ebx+0x5b]
  404d45:	in     eax,dx
  404d46:	out    dx,eax
  404d47:	push   esp
  404d48:	pop    esp
  404d49:	(bad)  [ecx]
  404d4b:	push   ebp
	...
  404d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d61:	xor    eax,0x9b925774
  404d66:	mov    dh,0x56
  404d68:	pop    es
  404d69:	call   0x523b:0x303053f9
  404d70:	sbb    esi,ebx
  404d72:	jl     0x404dc4
  404d74:	cs hlt 
  404d76:	mov    esi,0xe0bda351
  404d7b:	pop    edx
  404d7c:	test   BYTE PTR [edi],ah
  404d7e:	and    DWORD PTR [ebx-0x43],ebx
  404d81:	jno    0x404dea
  404d83:	pop    ecx
  404d84:	retf   0xa54b
  404d87:	pop    eax
  404d88:	aas    
  404d89:	jmp    0x2880:0x485d
  404d8f:	pop    esp
  404d90:	and    DWORD PTR [edx],ebx
  404d92:	outs   dx,BYTE PTR ds:[esi]
  404d93:	pop    esi
  404d94:	(bad)  
  404d95:	mov    ds:0xdf8b5fad,eax
  404d9a:	xor    esp,ecx
  404d9c:	lods   al,BYTE PTR ds:[esi]
  404d9d:	add    eax,0x8375e0f6
  404da2:	mov    al,0xe2
  404da4:	inc    edx
  404da5:	cmp    DWORD PTR [edx-0x1d],esi
  404da8:	xlat   BYTE PTR ds:[ebx]
  404da9:	inc    edi
  404daa:	cmp    eax,0xff9de0e6
  404daf:	out    0x49,eax
  404db1:	out    dx,al
  404db2:	mov    eax,0x78c3fee5
  404db7:	in     al,0x62
  404db9:	jmp    0xe3e2:0xabc5263a
  404dc0:	mov    esp,0xa286ec
	...
  404dd5:	add    BYTE PTR [eax],al
  404dd7:	add    BYTE PTR [esi-0x309f4edf],dh
  404ddd:	sahf   
  404dde:	mov    ds:0x7d6fca2f,eax
  404de3:	in     eax,dx
  404de4:	mov    ebx,0xb9aaef48
  404de9:	sub    eax,0x72886949
  404dee:	ins    DWORD PTR es:[edi],dx
  404def:	adc    edx,DWORD PTR [edi-0x712e2c8d]
  404df5:	xor    al,0x19
  404df7:	xchg   edi,eax
  404df8:	test   BYTE PTR [ecx],ch
  404dfa:	call   DWORD PTR [ebp+edi*2-0x6a]
  404dfe:	adc    bl,BYTE PTR [edx]
  404e00:	js     0x404da9
  404e02:	sub    al,bl
  404e04:	imul   eax,DWORD PTR [eax-0x5a946142],0x7a5a5c54
  404e0e:	fwait
  404e0f:	add    BYTE PTR [ecx-0x65],dl
  404e12:	add    edx,0x83e5dc50
  404e18:	push   edx
  404e19:	mov    cl,0x4d
  404e1b:	inc    esi
  404e1c:	xor    ebp,DWORD PTR [esi]
  404e1e:	inc    edx
  404e1f:	or     DWORD PTR [esi],ebp
  404e21:	pop    edi
  404e22:	fmul   st,st(2)
  404e24:	aaa    
  404e25:	clc    
  404e26:	lea    ecx,[ebp+0x4fa3fd2d]
  404e2c:	adc    al,0x62
  404e2e:	inc    edi
  404e2f:	js     0x404e6c
  404e31:	sub    ebp,0xffffffb9
  404e34:	sub    al,ah
  404e36:	jnp    0x404e34
  404e38:	sub    BYTE PTR [ecx+0x3ea1],bl
	...
  404e4e:	add    BYTE PTR [eax],al
  404e50:	sbb    DWORD PTR [esi],eax
  404e52:	scas   al,BYTE PTR es:[edi]
  404e53:	jno    0x404e69
  404e55:	aaa    
  404e56:	test   BYTE PTR [ebx-0x1d4626f3],dh
  404e5c:	out    dx,al
  404e5d:	lods   eax,DWORD PTR ds:[esi]
  404e5e:	lds    edi,FWORD PTR [eax]
  404e60:	xchg   ebp,eax
  404e61:	lods   eax,DWORD PTR ds:[esi]
  404e62:	mov    al,0xf7
  404e64:	dec    eax
  404e65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e66:	mov    edi,0x7ea2fb1d
  404e6b:	retf   
  404e6c:	mov    ch,0xa4
  404e6e:	imul   esi,DWORD PTR [ecx-0x71],0x405feca6
  404e75:	test   eax,0xaa02b5fb
  404e7a:	adc    dh,BYTE PTR [esp+edi*4]
  404e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e7e:	cmp    eax,0xf8a7460a
  404e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e84:	xor    al,0x96
  404e86:	(bad)  
  404e87:	(bad)  
  404e88:	out    dx,al
  404e89:	xchg   esp,eax
  404e8a:	push   es
  404e8b:	fisubr DWORD PTR [ebx+0x5a443192]
  404e91:	xchg   esp,eax
  404e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e93:	dec    ebp
  404e94:	or     eax,0xd6e77397
  404e99:	xchg   edi,eax
  404e9a:	mov    al,BYTE PTR [ecx-0x648a666f]
  404ea0:	jae    0x404e3b
  404ea2:	adc    BYTE PTR [edi+eiz*4-0x62],0x6f
  404ea7:	mov    esi,0x282e9fdd
  404eac:	sbb    esp,DWORD PTR [edx-0x5f96edc7]
  404eb2:	mov    esp,0xfc
	...
  404ec7:	add    BYTE PTR [ecx-0x1be95463],ah
  404ecd:	pushf  
  404ece:	add    dl,cl
  404ed0:	and    bl,BYTE PTR [ebx-0x649f9533]
  404ed6:	test   al,0x8d
  404ed8:	lds    ebp,FWORD PTR [eax-0x69]
  404edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404edc:	jg     0x404f47
  404ede:	(bad)  
  404edf:	inc    ecx
  404ee0:	cmp    DWORD PTR [edi-0x1f],esp
  404ee3:	fisttp DWORD PTR [edx]
  404ee5:	add    DWORD PTR [di-0x1],edx
  404ee9:	je     0x404e82
  404eeb:	inc    edx
  404eec:	popf   
  404eed:	xor    eax,0xf7b4db96
  404ef2:	xchg   ebx,eax
  404ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ef4:	out    0xb9,al
  404ef6:	xchg   ebp,eax
  404ef7:	shr    DWORD PTR [ecx+0x539e9e8d],1
  404efd:	dec    ebx
  404efe:	lahf   
  404eff:	pop    edi
  404f00:	int    0x2
  404f02:	popf   
  404f03:	mov    BYTE PTR [edi-0x31],bl
  404f06:	pushf  
  404f07:	or     eax,0xda998471
  404f0c:	pop    edx
  404f0d:	inc    edx
  404f0e:	cwde   
  404f0f:	xor    eax,DWORD PTR ds:0xd71c9a08
  404f15:	(bad)  
  404f16:	fstcw  WORD PTR [edx+0x20e68c61]
  404f1d:	push   ds
  404f1e:	lea    esp,[edi]
  404f20:	mov    edi,0xed108edc
  404f25:	call   0x928b:0x59e3858e
	...
  404f40:	leave  
  404f41:	pop    ss
  404f42:	mov    ch,BYTE PTR [ebx+0x17]
  404f45:	aad    0x87
  404f47:	xchg   esp,eax
  404f48:	inc    ebp
  404f49:	xchg   esp,eax
  404f4a:	mov    DWORD PTR [ecx-0x76],esp
  404f4d:	outs   dx,DWORD PTR ds:[esi]
  404f4e:	or     BYTE PTR [esi+0x4f833170],0xae
  404f55:	jmp    0x404ed7
  404f57:	sbb    ah,bh
  404f59:	lods   al,BYTE PTR ds:[esi]
  404f5a:	sbb    BYTE PTR [ebp-0x357a99db],0xbb
  404f61:	sub    BYTE PTR [ebx+eiz*8-0x137a1cd7],al
  404f68:	ja     0x404f0e
  404f6a:	xchg   DWORD PTR [ecx-0x32],ecx
  404f6d:	mov    dh,0xa8
  404f6f:	jbe    0x404f1d
  404f71:	stc    
  404f72:	test   al,0x0
  404f74:	dec    ebp
  404f75:	loope  0x404fdd
  404f77:	stos   BYTE PTR es:[edi],al
  404f78:	bound  eax,QWORD PTR [edi]
  404f7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f7b:	stos   DWORD PTR es:[edi],eax
  404f7c:	outs   dx,DWORD PTR ds:[esi]
  404f7d:	out    dx,al
  404f7e:	jmp    0x2a041031
  404f83:	scas   eax,DWORD PTR es:[edi]
  404f84:	jmp    0x66edbdc2
  404f89:	lahf   
  404f8a:	lods   al,BYTE PTR ds:[esi]
  404f8b:	lods   al,BYTE PTR ds:[esi]
  404f8c:	rcl    DWORD PTR [eax+esi*8-0x59],cl
  404f90:	int3   
  404f91:	jp     0x404fc5
  404f93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f94:	test   DWORD PTR [eax],edx
  404f96:	je     0x404f3c
  404f98:	mov    dh,BYTE PTR [esi-0x42f85a49]
  404f9e:	mul    BYTE PTR [eax-0x5ec4ed18]
	...
  404fb8:	adc    DWORD PTR [ecx+0x7d],edi
  404fbb:	mov    ds:0xa2bf4f1e,eax
  404fc0:	fnclex 
  404fc2:	les    esi,FWORD PTR [ebp-0x4bfb331c]
  404fc8:	sbb    eax,0xf2b6413f
  404fcd:	test   al,0x83
  404fcf:	mov    bh,0x7f
  404fd1:	mov    cl,ah
  404fd3:	mov    dl,0xb0
  404fd5:	and    al,0xe
  404fd7:	mov    bl,0x99
  404fd9:	out    0x47,al
  404fdb:	mov    cl,0x16
  404fdd:	repnz mov DWORD PTR [eax-0x442840dd],esi
  404fe4:	cld    
  404fe5:	adc    al,0x14
  404fe7:	mov    edx,0xb8526335
  404fec:	cmp    cl,BYTE PTR [ecx-0x70]
  404fef:	mov    ecx,0xbcdf56b7
  404ff4:	mov    eax,0xa1bd1d7c
  404ff9:	sbb    bl,BYTE PTR [ebx-0x41]
  404ffc:	outs   dx,BYTE PTR ds:[esi]
  404ffd:	mov    al,0x96
  404fff:	mov    esi,0x2b262
  405004:	bound  ebx,QWORD PTR [ebp+0x2b]
  405007:	mov    esp,0x9ca4bca
  40500c:	enter  0x72d8,0xb5
  405010:	push   eax
  405011:	addr16 jnp 0x405076
  405014:	fld    QWORD PTR [edx+edx*4+0x409e2dde]
  40501b:	imul   eax,DWORD PTR [eax],0x0
	...
  40502e:	add    BYTE PTR [eax],al
  405030:	xchg   DWORD PTR [ecx-0x23],edi
  405033:	(bad)  
  405034:	neg    DWORD PTR [edi+0x3ca7b3ed]
  40503a:	push   eax
  40503b:	or     BYTE PTR [edi+0x16],al
  40503e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40503f:	mov    ebp,0x189b14d
  405044:	lea    ecx,[edx+0x60]
  405047:	(bad)  
  405048:	sbb    BYTE PTR [ebp-0x43],dl
  40504b:	push   0xffffffb0
  40504d:	mov    ds:0x1082df19,eax
  405052:	cmc    
  405053:	bound  edi,QWORD PTR [edx]
  405055:	dec    edi
  405056:	cmp    BYTE PTR [ecx],bl
  405058:	xor    ch,BYTE PTR [ebp+edx*8-0x5c]
  40505c:	jp     0x405004
  40505e:	adc    DWORD PTR [eax],0xac9ac178
  405064:	and    BYTE PTR [edx-0x3b],bh
  405067:	jnp    0x404ff6
  405069:	add    eax,0x72fdc768
  40506e:	or     dh,BYTE PTR [edx-0x29]
  405071:	loopne 0x4050a2
  405073:	into   
  405074:	daa    
  405075:	mov    ds:0xccf7ad21,al
  40507a:	cli    
  40507b:	adc    BYTE PTR [edi+0x1b],dh
  40507e:	pop    eax
  40507f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405080:	jge    0x4050aa
  405082:	mov    ch,0x18
  405084:	fst    st(6)
  405086:	lods   al,BYTE PTR ds:[esi]
  405087:	iret   
  405088:	dec    eax
  405089:	je     0x40501c
  40508b:	jae    0x40508d
  40508d:	fst    DWORD PTR [ebx-0x1c]
  405090:	daa    
  405091:	mov    DWORD PTR [ecx],esi
  405093:	dec    ecx
	...
  4050a8:	cwde   
  4050a9:	rcl    ebp,1
  4050ab:	jo     0x4050fd
  4050ad:	jns    0x405062
  4050af:	retf   
  4050b0:	aam    0xe0
  4050b2:	cmp    al,0x29
  4050b4:	cmp    ebx,edx
  4050b6:	pop    ss
  4050b7:	add    al,0xdd
  4050b9:	mov    al,BYTE PTR [ecx-0x24076225]
  4050bf:	inc    eax
  4050c0:	imul   BYTE PTR [edi-0x36]
  4050c3:	xchg   ebx,eax
  4050c4:	cmp    ebx,DWORD PTR [esi+0x67]
  4050c7:	js     0x405088
  4050c9:	add    eax,0x3de488b9
  4050ce:	xchg   esp,eax
  4050cf:	mov    ds:0x5122a688,eax
  4050d4:	in     eax,dx
  4050d5:	xchg   edi,eax
  4050d6:	(bad)  
  4050d7:	jmp    0x405149
  4050d9:	push   eax
  4050da:	outs   dx,BYTE PTR ds:[esi]
  4050db:	repz shl DWORD PTR [edx+0x2b0a18cb],0xf5
  4050e3:	mov    ebx,0x6110188f
  4050e8:	xor    eax,ecx
  4050ea:	dec    ecx
  4050eb:	fwait
  4050ec:	cmp    ecx,ecx
  4050ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ef:	sub    ch,0x10
  4050f2:	rcl    bl,cl
  4050f4:	inc    ebx
  4050f5:	and    ebp,DWORD PTR [edi]
  4050f7:	cmp    esp,edx
  4050f9:	mov    edx,0x481b307e
  4050fe:	pop    ebx
  4050ff:	or     ebp,DWORD PTR [edi-0x61]
  405102:	in     eax,0x68
  405104:	mov    ds:0x56c400ac,al
  405109:	xor    eax,0xb3a6
	...
  40511e:	add    BYTE PTR [eax],al
  405120:	in     eax,dx
  405121:	or     al,0x3
  405123:	pop    ecx
  405124:	adc    DWORD PTR [ebp+ebp*1-0x5],0x208866d7
  40512c:	mov    dh,bh
  40512e:	add    al,dl
  405130:	call   0x31a:0x41adbbc4
  405137:	jnp    0x40512b
  405139:	int    0x11
  40513b:	push   ss
  40513c:	leave  
  40513d:	adc    DWORD PTR [ecx-0x6612b62c],ebp
  405143:	mov    cl,0x2
  405145:	jg     0x405169
  405147:	aas    
  405148:	jno    0x40512e
  40514a:	das    
  40514b:	sbb    bl,dl
  40514d:	js     0x4050d7
  40514f:	adc    DWORD PTR [edx],0x50
  405152:	adc    eax,0xad9379de
  405157:	enter  0x4665,0xbf
  40515b:	gs jle 0x4050f8
  40515e:	pop    es
  40515f:	mov    ebx,0x965f7976
  405164:	int    0xe2
  405166:	out    0x20,al
  405168:	push   ds
  405169:	jo     0x405160
  40516b:	std    
  40516c:	hlt    
  40516d:	in     al,dx
  40516e:	dec    esp
  40516f:	ins    BYTE PTR es:[edi],dx
  405170:	add    eax,0xdec9d09c
  405175:	inc    edi
  405176:	push   0x7a938cf7
  40517b:	adc    ah,BYTE PTR [esi]
  40517d:	dec    esi
  40517e:	ret    0x5d4b
  405181:	aam    0xc9
  405183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  405198:	mov    BYTE PTR ss:[edx-0x30],dh
  40519c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40519d:	fstp   QWORD PTR [edi+0x2d]
  4051a0:	inc    BYTE PTR [eax+0x35ee7cd8]
  4051a6:	inc    ebp
  4051a7:	pop    ecx
  4051a8:	lds    ebp,FWORD PTR [edx+0x3f91e7fd]
  4051ae:	out    dx,eax
  4051af:	add    ch,BYTE PTR ds:0x44a457a0
  4051b5:	or     DWORD PTR [edi],0xb6dc9e01
  4051bb:	add    BYTE PTR [ebp-0x175b4e8a],cl
  4051c1:	push   esp
  4051c2:	or     eax,0xda2a111c
  4051c7:	xor    esp,0x9a39668e
  4051cd:	in     eax,0xd2
  4051cf:	sub    ebp,DWORD PTR [edi-0x3a]
  4051d2:	ins    BYTE PTR es:[edi],dx
  4051d3:	xchg   ebx,eax
  4051d4:	clc    
  4051d5:	outs   dx,BYTE PTR ds:[esi]
  4051d6:	daa    
  4051d7:	cmp    ebx,ebp
  4051d9:	dec    ecx
  4051da:	fwait
  4051db:	xor    DWORD PTR [ebx-0x5a],0x2f
  4051df:	xchg   ecx,eax
  4051e0:	add    ax,0x2992
  4051e4:	iret   
  4051e5:	stc    
  4051e6:	inc    esp
  4051e7:	mov    ah,0xaa
  4051e9:	fdivp  st(0),st
  4051eb:	or     al,0xa4
  4051ed:	xor    DWORD PTR [esi+ebx*1+0x1],ecx
  4051f1:	xchg   edi,eax
  4051f2:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051f5:	xchg   BYTE PTR [ebx+0x2f2242fe],dl
  4051fb:	inc    esi
	...
  405210:	sub    al,0xce
  405212:	fwait
  405213:	push   esp
  405214:	leave  
  405215:	jmp    0x12713e3f
  40521a:	icebp  
  40521b:	jno    0x4051f2
  40521d:	mov    dh,0x4a
  40521f:	leave  
  405220:	mov    ebx,0x4edbf859
  405225:	jle    0x40526b
  405227:	arpl   WORD PTR [edi],dx
  405229:	cmp    bh,BYTE PTR [esi]
  40522b:	imul   esi,edx,0xffffff9e
  40522e:	adc    bl,0x9c
  405231:	icebp  
  405232:	sar    DWORD PTR ss:[ecx-0x2a],0x8a
  405237:	jns    0x4051f9
  405239:	scas   al,BYTE PTR es:[edi]
  40523a:	pop    ebp
  40523b:	in     al,0x25
  40523d:	or     ah,al
  40523f:	pop    esp
  405240:	or     esp,DWORD PTR [ebp+edx*2+0x4e]
  405244:	pop    esi
  405245:	inc    ebp
  405246:	jmp    0x8adfb541
  40524b:	mov    esi,esp
  40524d:	int3   
  40524e:	scas   eax,DWORD PTR es:[edi]
  40524f:	aaa    
  405250:	push   esp
  405251:	sbb    al,BYTE PTR [edx-0x7e]
  405254:	pop    esi
  405255:	and    eax,0xd6ee3de7
  40525a:	std    
  40525b:	call   0x555ac3e3
  405260:	sti    
  405261:	sub    esi,DWORD PTR [edi+0x5208e9e0]
  405267:	pop    esp
  405268:	push   ecx
  405269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40526a:	push   esp
  40526b:	pop    ecx
  40526c:	div    DWORD PTR [ebp+esi*4-0x1b]
  405270:	xchg   edi,eax
  405271:	add    bl,BYTE PTR [eax+edx*2]
	...
  405288:	popf   
  405289:	in     eax,dx
  40528a:	cld    
  40528b:	jmp    0x40527a
  40528d:	pop    esi
  40528e:	in     eax,0x3a
  405290:	cmp    BYTE PTR [ecx-0x6c4778bc],0xaa
  405297:	xor    ch,BYTE PTR [edx+0x528e8f30]
  40529d:	xchg   BYTE PTR [edi-0x13],bh
  4052a0:	jp     0x405303
  4052a2:	call   0xe0e4:0x36fbd251
  4052a9:	fcom   st(1)
  4052ab:	push   edi
  4052ac:	push   0xfd8f0a2f
  4052b1:	pushf  
  4052b2:	das    
  4052b3:	xor    edi,DWORD PTR [ebp-0x36]
  4052b6:	ret    
  4052b7:	xchg   BYTE PTR [edi-0x2b],ah
  4052ba:	data16 cmp dl,bh
  4052bd:	push   ss
  4052be:	mov    ds:0x8771c740,al
  4052c3:	cld    
  4052c4:	stos   DWORD PTR es:[di],eax
  4052c6:	jmp    0x405310
  4052c8:	dec    ebp
  4052c9:	or     BYTE PTR [edi-0xb],cl
  4052cc:	mov    ebp,0x3022173f
  4052d1:	sub    al,0xf2
  4052d3:	popf   
  4052d4:	call   0x899e32b1
  4052d9:	popa   
  4052da:	std    
  4052db:	mov    edx,0xcaa2f8f5
  4052e0:	dec    esi
  4052e1:	inc    ecx
  4052e2:	(bad)  
  4052e3:	ins    DWORD PTR es:[edi],dx
  4052e4:	stos   BYTE PTR es:[edi],al
  4052e5:	cdq    
  4052e6:	sub    BYTE PTR [ebx],al
  4052e8:	aaa    
  4052e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052ea:	test   DWORD PTR [esi],esp
	...
  405300:	mov    ds:0xcc3dd42f,eax
  405305:	retf   
  405306:	mov    cl,0xda
  405308:	dec    ebx
  405309:	adc    al,0x7f
  40530b:	jbe    0x405302
  40530d:	and    eax,0xbe41931a
  405312:	in     eax,dx
  405313:	cli    
  405314:	js     0x40532c
  405316:	mov    BYTE PTR ds:0xb376ce15,bl
  40531c:	cmp    BYTE PTR [ebx+edx*1-0x65dbf3aa],0x8d
  405324:	pop    ebx
  405325:	xchg   edi,eax
  405326:	mov    bh,0xaa
  405328:	pop    ss
  405329:	aas    
  40532a:	rol    DWORD PTR [ebp+0x62],0x31
  40532e:	pushf  
  40532f:	loop   0x40533a
  405331:	test   eax,0x50a4d2c2
  405336:	pop    edi
  405337:	xor    eax,0x9b490941
  40533c:	mov    esi,?
  40533e:	jecxz  0x4053bd
  405340:	cmp    BYTE PTR [edi+0x75],bl
  405343:	gs out 0xdb,eax
  405346:	pop    edx
  405348:	arpl   WORD PTR [esi+ebx*8+0x3b75ce2d],ax
  40534f:	or     ebx,DWORD PTR [edx-0x12]
  405352:	jno    0x4053a1
  405354:	adc    dh,ah
  405356:	mov    gs,edx
  405358:	scas   eax,DWORD PTR es:[edi]
  405359:	jge    0x405334
  40535b:	test   ecx,edi
  40535d:	mov    esi,esp
  40535f:	mov    ds:0xa400d3a5,al
	...
  405378:	test   al,0xe8
  40537a:	xchg   edx,eax
  40537b:	inc    ecx
  40537c:	mov    edi,0x50af2b75
  405381:	loop   0x4053bb
  405383:	or     dh,BYTE PTR [esp+edi*2-0x7f]
  405387:	fdivr  QWORD PTR [edi-0x65]
  40538a:	fyl2xp1 
  40538c:	pusha  
  40538d:	aas    
  40538e:	popa   
  40538f:	inc    edi
  405390:	(bad)  
  405391:	xchg   edx,eax
  405392:	jae    0x4053f6
  405394:	sbb    BYTE PTR [edi-0x35],al
  405397:	or     edx,ecx
  405399:	jge    0x4053f1
  40539b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40539c:	xchg   edi,eax
  40539d:	loope  0x40538c
  40539f:	push   eax
  4053a0:	cmp    BYTE PTR [esi-0x4],dh
  4053a3:	sub    eax,0xef43e84f
  4053a8:	mov    bh,0x14
  4053aa:	ja     0x405336
  4053ac:	call   0xffb52379
  4053b1:	push   ss
  4053b2:	fst    QWORD PTR [ecx]
  4053b4:	mov    al,ds:0x489865c1
  4053b9:	repnz div DWORD PTR [ebp-0x3cbf9821]
  4053c0:	das    
  4053c1:	sti    
  4053c2:	push   ecx
  4053c3:	sahf   
  4053c4:	adc    BYTE PTR [eax-0x16],ah
  4053c7:	shl    BYTE PTR [eax+0x475db2c0],0x1c
  4053ce:	or     cl,BYTE PTR [ebx+0x68]
  4053d1:	leave  
  4053d2:	sbb    dh,ah
  4053d4:	jle    0x4053eb
  4053d6:	mov    al,ds:0x3d5e6f77
  4053db:	xchg   edx,eax
	...
  4053f0:	mov    al,0xfb
  4053f2:	test   ah,bl
  4053f4:	push   ss
  4053f5:	addr16 xchg edi,eax
  4053f7:	cmp    eax,ebp
  4053f9:	repz cs jo 0x405424
  4053fd:	sub    eax,0xb1b88d27
  405402:	lahf   
  405403:	add    BYTE PTR [ecx+0x748c5bed],bl
  405409:	enter  0x34e1,0xbd
  40540d:	scas   eax,DWORD PTR es:[edi]
  40540e:	xor    al,0xa9
  405410:	mov    al,ds:0x6118b14
  405415:	js     0x405455
  405417:	add    ebx,DWORD PTR [ebx+0x5c]
  40541a:	cmp    BYTE PTR [ebx-0x1c1eb2db],0x38
  405421:	push   0x49e5b5d
  405426:	call   0x55e01774
  40542b:	icebp  
  40542c:	pop    edx
  40542d:	xlat   BYTE PTR ds:[ebx]
  40542e:	sub    BYTE PTR [edi+eax*8-0x4],0x3e
  405433:	aam    0xb1
  405435:	(bad)
  405439:	xor    al,0x36
  40543b:	jle    0x405470
  40543d:	sbb    eax,0xb7ced67e
  405442:	ret    
  405443:	outs   dx,BYTE PTR ds:[esi]
  405444:	cmp    BYTE PTR [edi+esi*2+0x7c],dl
  405448:	push   ebp
  405449:	outs   dx,DWORD PTR ds:[esi]
  40544a:	retf   
  40544b:	(bad)  
  40544c:	fadd   QWORD PTR [edi+0x2cc1591c]
  405452:	mov    al,ds:0xe1
	...
  405467:	add    BYTE PTR [edi+0x3af312bf],ah
  40546d:	in     eax,0xa8
  40546f:	dec    ebx
  405470:	add    al,0xf5
  405472:	leave  
  405473:	adc    ebx,ecx
  405475:	iret   
  405476:	jne    0x405423
  405478:	jg     0x4054b6
  40547a:	ret    
  40547b:	mov    ecx,0x17f9762
  405480:	cmp    esp,DWORD PTR [eax-0x58]
  405483:	pushf  
  405484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405485:	inc    esp
  405486:	adc    al,0x24
  405488:	nop
  405489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40548a:	sahf   
  40548b:	ss pop ebp
  40548d:	or     al,0x1d
  40548f:	mov    fs,WORD PTR [edx+0x13]
  405492:	lock gs in al,0x6d
  405496:	adc    eax,0xb8ac34da
  40549b:	outs   dx,DWORD PTR ds:[esi]
  40549c:	or     DWORD PTR ds:[ebx+edx*8-0x32],ebx
  4054a1:	aas    
  4054a2:	test   DWORD PTR [ebx+ebp*2],eax
  4054a5:	and    eax,0xbc13b8a0
  4054aa:	dec    ebp
  4054ab:	or     eax,0xb0e8c101
  4054b0:	imul   edi,DWORD PTR [edx-0x28],0x3dbda1d1
  4054b7:	outs   dx,BYTE PTR ds:[esi]
  4054b8:	cmp    esp,esi
  4054ba:	(bad)  
  4054bb:	fstp   TBYTE PTR [ebx]
  4054bd:	pop    ecx
  4054be:	jne    0x405527
  4054c0:	xchg   ebx,eax
  4054c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054c2:	ins    DWORD PTR es:[edi],dx
  4054c3:	mov    al,0x2e
  4054c5:	(bad)  
  4054c6:	enter  0x8e0c,0x3e
  4054ca:	and    eax,0xb9
	...
  4054df:	add    BYTE PTR [ecx+eiz*8-0x4cdbfb01],al
  4054e6:	add    al,BYTE PTR [eax]
  4054e8:	bound  esp,QWORD PTR [edi+0x3]
  4054eb:	xor    ah,cl
  4054ed:	call   0x397eb5f9
  4054f2:	or     eax,0x29afa851
  4054f7:	les    edi,FWORD PTR [ebx+0x42]
  4054fa:	sub    al,0xf4
  4054fc:	in     eax,0xa9
  4054fe:	and    al,0xa5
  405500:	xchg   edi,eax
  405501:	inc    eax
  405502:	and    DWORD PTR [ebp-0x774246ff],edx
  405508:	jo     0x405533
  40550a:	mov    ecx,0xae92feb8
  40550f:	jmp    0xd9f77c60
  405514:	fidivr DWORD PTR [ecx-0xfb6b3b0]
  40551a:	push   ecx
  40551b:	jl     0x4054f4
  40551d:	(bad)  [esi+0x77d83f5c]
  405523:	pop    ecx
  405524:	addr16 push 0xfffffff5
  405527:	push   eax
  405528:	push   edx
  405529:	xor    eax,0xcb425402
  40552e:	jnp    0x40558b
  405530:	repz adc BYTE PTR [edx+ebx*2+0x23],ah
  405535:	lahf   
  405536:	sar    BYTE PTR [ebp-0x4902c1ca],cl
  40553c:	ds mov ah,0x5c
  40553f:	mov    al,0x17
  405541:	sub    ch,BYTE PTR [ebx-0x4b]
	...
  405558:	fist   WORD PTR [edi+0x26da27fb]
  40555e:	les    ebp,FWORD PTR [edx+ecx*1]
  405561:	cdq    
  405562:	inc    ebp
  405563:	sub    eax,DWORD PTR es:[ebx+0x72]
  405567:	pop    ds
  405568:	sbb    ebp,DWORD PTR [ebp+0x10be02dc]
  40556e:	retf   
  40556f:	add    DWORD PTR [esi+0x4f0922a2],eax
  405575:	cmp    al,0x6d
  405577:	or     al,0x57
  405579:	(bad)  
  40557a:	shr    DWORD PTR [ecx],cl
  40557c:	inc    edx
  40557d:	xchg   ecx,eax
  40557e:	pushf  
  40557f:	sub    dl,BYTE PTR [edx+0x1f]
  405582:	sbb    eax,0x4ab5a324
  405587:	and    DWORD PTR [ebx+0x4b],esi
  40558a:	mov    ah,0x4
  40558c:	(bad)  
  40558d:	test   eax,0x17b1ffa3
  405592:	mov    edx,0x85bde706
  405597:	or     eax,0x4f1d340f
  40559c:	or     al,bl
  40559e:	sub    dl,BYTE PTR [esi-0x26]
  4055a1:	sub    al,0xa3
  4055a3:	pop    esp
  4055a4:	fwait
  4055a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055a6:	mov    WORD PTR [edi-0x55],ss
  4055a9:	sbb    BYTE PTR [ecx],al
  4055ab:	sti    
  4055ac:	fldcw  WORD PTR [edx+eiz*8]
  4055af:	and    al,0xdb
  4055b1:	sbb    al,0x74
  4055b3:	(bad)
  4055b6:	int    0x52
  4055b8:	sar    ch,1
  4055ba:	push   edi
  4055bb:	iret   
	...
  4055d0:	mov    eax,0xb838ad08
  4055d5:	fdivr  DWORD PTR [edx]
  4055d7:	mov    cl,0xb2
  4055d9:	sub    DWORD PTR [ecx+0x1739b13e],eax
  4055df:	enter  0xc5ad,0xb4
  4055e3:	pop    ss
  4055e4:	scas   eax,DWORD PTR es:[edi]
  4055e5:	xchg   ebp,eax
  4055e6:	and    dh,BYTE PTR [esi]
  4055e8:	scas   eax,DWORD PTR es:[edi]
  4055e9:	fs cwde 
  4055eb:	mov    eax,ds:0x10e74ac
  4055f0:	sbb    DWORD PTR fs:[edi+0x95734ae],0xb3a0652f
  4055fb:	js     0x405653
  4055fd:	mov    al,0x25
  4055ff:	push   es
  405600:	dec    ebx
  405601:	cmp    eax,0xd499186
  405606:	adc    BYTE PTR [eax],ch
  405608:	inc    eax
  405609:	fsubr  QWORD PTR [ecx+0x3bec4357]
  40560f:	lahf   
  405610:	mov    ch,0x18
  405612:	xchg   ecx,eax
  405613:	call   0x61479ece
  405618:	mov    bh,0xf9
  40561a:	mov    esp,0x2ae9b40e
  40561f:	js     0x405651
  405621:	push   esp
  405622:	mov    bh,ah
  405624:	xor    eax,DWORD PTR [esi+ebx*1-0x5b4aca7a]
  40562b:	shl    DWORD PTR [esi],1
  40562d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40562e:	xor    dl,BYTE PTR [ecx-0x43]
  405631:	xchg   ecx,eax
  405632:	mov    ds:0xde,eax
	...
  405647:	add    BYTE PTR [ecx-0x40],ah
  40564a:	xor    eax,0xa8cc0d00
  40564f:	mov    ds,WORD PTR [edx+0x541898d7]
  405655:	repz or edi,DWORD PTR [ebx+0x2d3bf183]
  40565c:	or     bh,cl
  40565e:	ins    BYTE PTR es:[edi],dx
  40565f:	xchg   edi,eax
  405660:	(bad)  
  405662:	pop    esp
  405663:	add    DWORD PTR [eax-0xe],esp
  405666:	dec    edi
  405667:	hlt    
  405668:	xchg   esi,esi
  40566a:	pop    edi
  40566b:	(bad)  
  40566c:	(bad)  
  40566d:	div    DWORD PTR [eax]
  40566f:	fsubr  st,st(1)
  405671:	cli    
  405672:	add    BYTE PTR [esi+0x67],cl
  405675:	mov    edi,0xd530ed95
  40567a:	mov    ds:0xf4cdb97b,eax
  40567f:	shr    DWORD PTR [esi+0x2e57c4d6],0x2a
  405686:	fadd   st,st(6)
  405688:	cmp    DWORD PTR [edi],ecx
  40568a:	call   0xb96806df
  40568f:	jmp    0x8129:0x7c891c67
  405696:	sbb    al,0xdf
  405698:	sub    BYTE PTR cs:[ecx+ecx*2],0x97
  40569d:	mov    bh,BYTE PTR [ebp-0xd]
  4056a0:	inc    eax
  4056a1:	mov    DWORD PTR [ebp+0x65],ecx
  4056a4:	(bad)  
  4056a5:	daa    
  4056a6:	pusha  
  4056a7:	pop    eax
  4056a8:	adc    DWORD PTR [ecx],ebp
  4056aa:	push   eax
  4056ab:	into   
	...
  4056c0:	cwde   
  4056c1:	and    DWORD PTR [ecx],eax
  4056c3:	je     0x405714
  4056c5:	and    dh,BYTE PTR [ecx]
  4056c7:	loop   0x4056ca
  4056c9:	xchg   DWORD PTR [ecx+eax*2-0x286b7dfa],esp
  4056d0:	fild   WORD PTR [ebp+eax*8-0xa93f793]
  4056d7:	sti    
  4056d8:	(bad)  
  4056da:	sub    ebp,ecx
  4056dc:	dec    eax
  4056dd:	in     al,0x26
  4056df:	fldcw  WORD PTR [esi+0x1c881f64]
  4056e5:	jp     0x405709
  4056e7:	mov    eax,0x2d00ebb2
  4056ec:	adc    ebx,eax
  4056ee:	add    ebx,DWORD PTR ds:0x4c082987
  4056f4:	and    eax,0xab7c097d
  4056f9:	(bad)  
  4056fa:	push   DWORD PTR [eax+0x36]
  4056fd:	xchg   edi,eax
  4056fe:	add    BYTE PTR [ecx-0x48],al
  405701:	adc    eax,0x8952100b
  405706:	push   es
  405707:	and    ah,ah
  405709:	fld    TBYTE PTR [esi*4-0x7ad86d81]
  405710:	adc    DWORD PTR [edx+0x1c],edi
  405713:	aam    0x5b
  405715:	in     al,dx
  405716:	and    al,0xe4
  405718:	fld    QWORD PTR [esp+esi*4-0x44269b07]
  40571f:	leave  
  405720:	retf   0xb242
  405723:	cwde   
	...
  405738:	xor    bl,0xae
  40573b:	test   al,0xd6
  40573d:	imul   edx,DWORD PTR [ebx+0x3d],0xd4ebc6d
  405744:	jecxz  0x405761
  405746:	pop    ecx
  405747:	pop    esp
  405748:	dec    ecx
  405749:	repnz push edi
  40574b:	ins    BYTE PTR es:[edi],dx
  40574c:	iret   
  40574d:	aad    0x59
  40574f:	add    DWORD PTR [edx+0x48],0x57
  405753:	mov    bl,0xb4
  405755:	scas   eax,DWORD PTR es:[edi]
  405756:	dec    esp
  405757:	loop   0x4057af
  405759:	inc    esi
  40575a:	push   ebp
  40575b:	sar    al,cl
  40575d:	fdiv   DWORD PTR [eax-0x4ff264b9]
  405763:	ja     0x405762
  405765:	fldpi  
  405767:	mov    eax,0xb85ae67c
  40576c:	push   esp
  40576d:	pop    eax
  40576e:	retf   
  40576f:	and    DWORD PTR [ecx-0x19],ebp
  405772:	jae    0x405794
  405774:	imul   edx,DWORD PTR [ebp-0xb],0x41fb3826
  40577b:	sub    bh,BYTE PTR [eax]
  40577d:	jno    0x40574b
  40577f:	push   es
  405780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405781:	rcr    BYTE PTR [edx+0xb],1
  405784:	lea    ebx,[esi-0xe]
  405787:	add    esi,DWORD PTR [esp+esi*8-0x752002e4]
  40578e:	cwde   
  40578f:	add    eax,0xc6715d1
  405794:	shl    DWORD PTR [edi+0x317002e6],0x11
  40579b:	inc    BYTE PTR [eax]
	...
  4057ad:	add    BYTE PTR [eax],al
  4057af:	add    BYTE PTR [ebx],ah
  4057b1:	mov    ebx,0x1ead227f
  4057b6:	push   0x190c51f
  4057bb:	sub    BYTE PTR [edx+ecx*2-0x4b9bd732],cl
  4057c2:	push   esi
  4057c3:	mov    al,0x59
  4057c5:	inc    ebx
  4057c6:	popa   
  4057c7:	mov    cl,0x79
  4057c9:	mov    ecx,0x1fa8b9d8
  4057ce:	(bad)  
  4057cf:	mov    dh,0xa8
  4057d1:	lea    esi,[ecx]
  4057d3:	pop    ebx
  4057d4:	xor    eax,0xfd565e2c
  4057d9:	sar    edi,0x4c
  4057dc:	les    edx,FWORD PTR [edi]
  4057de:	mov    BYTE PTR [ebx-0x14],dl
  4057e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057e2:	ds scas al,BYTE PTR es:[edi]
  4057e4:	shl    DWORD PTR [eax+0x3ad1b349],0xc0
  4057eb:	mov    ebx,0xb4af9520
  4057f0:	shl    BYTE PTR [esi],1
  4057f2:	add    DWORD PTR [eax],ebx
  4057f4:	cmp    esi,DWORD PTR [eax+esi*8]
  4057f7:	inc    edi
  4057f8:	sub    ah,BYTE PTR [esi+eiz*2]
  4057fb:	es adc eax,0x1031dbd3
  405801:	add    ecx,DWORD PTR [edx-0x4f]
  405804:	pop    esp
  405805:	lock fidivr DWORD PTR [esi+0x5b]
  405809:	loopne 0x405857
  40580b:	jmp    DWORD PTR [edx+0xf]
  40580e:	imul   DWORD PTR [eax]
  405810:	bound  edi,QWORD PTR [edi]
  405812:	popa   
  405813:	xchg   esi,eax
	...
  405828:	inc    ecx
  405829:	lods   al,BYTE PTR ds:[esi]
  40582a:	ret    0x6e81
  40582d:	pushf  
  40582e:	push   esp
  40582f:	fdivr  DWORD PTR [edi]
  405831:	dec    ebx
  405832:	out    dx,al
  405833:	daa    
  405834:	dec    ecx
  405835:	jnp    0x4058af
  405837:	mov    ds:0x4d8d8840,al
  40583c:	dec    edi
  40583d:	pop    eax
  40583e:	sbb    ecx,esp
  405840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405842:	mov    eax,ds:0x37b78e1b
  405847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405848:	pop    ebp
  405849:	inc    edx
  40584a:	xchg   esp,eax
  40584b:	xor    bl,BYTE PTR [edx+0x12]
  40584e:	add    cl,BYTE PTR [ebx]
  405850:	pusha  
  405851:	jecxz  0x40580a
  405853:	mov    ah,0x3c
  405855:	cmc    
  405856:	sub    eax,0xbefe9b2c
  40585b:	fwait
  40585c:	xchg   esp,eax
  40585d:	into   
  40585e:	sub    BYTE PTR [edx],dl
  405860:	xchg   edx,eax
  405861:	pop    ds
  405862:	xchg   ebx,eax
  405863:	popf   
  405864:	mov    dl,0x2f
  405866:	add    eax,0xa6bac62b
  40586b:	je     0x40583e
  40586d:	mov    dh,BYTE PTR [eax]
  40586f:	aad    0xc8
  405871:	pop    ebx
  405872:	mov    al,dl
  405874:	mov    bh,0x6b
  405876:	sbb    al,0x72
  405878:	push   ebp
  405879:	xchg   edi,eax
  40587a:	mov    cl,0xfd
  40587c:	dec    ebp
  40587d:	(bad)  
  40587e:	daa    
  40587f:	add    BYTE PTR [esi-0x10],ah
  405882:	mov    eax,ds:0x91f3c99c
  405887:	or     ch,BYTE PTR [edi]
  405889:	iret   
  40588a:	push   es
  40588b:	test   eax,0x0
	...
  4058a0:	pusha  
  4058a1:	aam    0x36
  4058a3:	aas    
  4058a4:	sub    esi,ecx
  4058a6:	gs test esi,eax
  4058a9:	(bad)  
  4058aa:	push   ebp
  4058ab:	adc    esi,DWORD PTR [esi]
  4058ad:	es dec ebx
  4058af:	sbb    BYTE PTR [ecx+0x20147b0d],0x24
  4058b6:	sub    ch,BYTE PTR [esi+0x381a208f]
  4058bc:	cmp    DWORD PTR [ebx-0x7f596471],eax
  4058c2:	mov    edi,0xee893f0d
  4058c7:	mov    bh,0x70
  4058c9:	imul   ebx,esi,0x21
  4058cc:	add    eax,0xcad4d382
  4058d1:	and    ebx,0xb2885342
  4058d7:	clc    
  4058d8:	cmp    al,0x6c
  4058da:	sub    BYTE PTR [esi-0x36],0x27
  4058de:	pop    ss
  4058df:	int    0xd5
  4058e1:	or     al,0x27
  4058e3:	pop    ebx
  4058e4:	sub    al,0x26
  4058e6:	jbe    0x4058c9
  4058e8:	arpl   WORD PTR [esi],bx
  4058ea:	inc    esi
  4058eb:	ja     0x4058b0
  4058ed:	mov    ebp,0xd69ce658
  4058f2:	push   0x70
  4058f4:	adc    eax,0x3aca39d0
  4058f9:	aad    0x9
  4058fb:	pop    esp
  4058fc:	jl     0x4058ee
  4058fe:	sahf   
  4058ff:	call   DWORD PTR [ebx-0xd]
  405902:	scas   al,BYTE PTR es:[edi]
  405903:	imul   eax,DWORD PTR [eax],0x0
	...
  405915:	add    BYTE PTR [eax],al
  405917:	add    dl,bl
  405919:	(bad)  
  40591b:	shl    ebp,cl
  40591d:	fxch   st(5)
  40591f:	inc    ebp
  405920:	bound  edx,QWORD PTR [eax]
  405922:	jmp    ecx
  405924:	push   0x3
  405926:	add    dl,dl
  405928:	hlt    
  405929:	add    DWORD PTR [esi],0x7993683
  40592f:	mov    bl,0xa0
  405931:	or     ch,BYTE PTR [edx]
  405933:	es inc ebx
  405935:	loopne 0x40595b
  405937:	push   ss
  405938:	int    0x8
  40593a:	sbb    al,0x47
  40593c:	das    
  40593d:	fisub  DWORD PTR [edx]
  40593f:	ja     0x4058da
  405941:	push   ecx
  405942:	mov    ch,0x6a
  405944:	sbb    BYTE PTR [ecx-0x1079a548],cl
  40594a:	mov    cl,0xb
  40594c:	add    al,0xc3
  40594e:	stos   BYTE PTR es:[edi],al
  40594f:	cmp    edx,DWORD PTR [edx+0x31ae4e58]
  405955:	dec    edx
  405956:	dec    edi
  405957:	sahf   
  405958:	lahf   
  405959:	jmp    0xff59:0x9ffdcf56
  405960:	mov    esp,DWORD PTR [ecx+edx*2]
  405963:	repnz dec esi
  405965:	jbe    0x4059b3
  405967:	ret    0xded8
  40596a:	push   ebp
  40596b:	xchg   ebx,eax
  40596c:	xchg   edx,eax
  40596d:	sahf   
  40596e:	push   esi
  40596f:	mov    ds:0x36b1ecfc,eax
  405974:	addr16 push ebp
  405976:	mov    ebx,0xb076f106
  40597b:	push   edi
	...
  405990:	mov    esp,ebx
  405992:	stos   DWORD PTR es:[edi],eax
  405993:	addr16 cmc 
  405995:	push   ebx
  405996:	sub    BYTE PTR [edx+0x7c],bh
  405999:	(bad)  
  40599a:	and    al,0x4a
  40599c:	jmp    0x21cc:0x601b1a7d
  4059a3:	sub    ebp,esi
  4059a5:	ss (bad) 
  4059a7:	mov    ebp,0x8dfe0355
  4059ac:	ret    
  4059ad:	fld    st(1)
  4059af:	or     BYTE PTR ds:0x505ccd5,bl
  4059b5:	addr16 call 0xf119bbbe
  4059bb:	out    dx,al
  4059bc:	xor    bl,BYTE PTR [edx]
  4059be:	mov    edx,0xd35b43d9
  4059c3:	loopne 0x4059f5
  4059c5:	pushf  
  4059c6:	mov    WORD PTR [edi],ds
  4059c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059c9:	(bad)  [edx+ebx*1-0x32]
  4059cd:	push   ds
  4059ce:	ds cs add eax,0xcc432f60
  4059d5:	mov    al,ds:0xe1d8aba0
  4059da:	mov    eax,0xc222e9c6
  4059df:	mov    eax,ds:0x98cb638a
  4059e4:	mov    ebx,0x1d5784a4
  4059e9:	in     eax,0x74
  4059eb:	bound  eax,QWORD PTR [esi+eiz*1]
  4059ee:	xchg   BYTE PTR [ebp+0x6c67674f],al
	...
  405a08:	push   esi
  405a09:	test   al,0x22
  405a0b:	(bad)  
  405a0c:	push   eax
  405a0d:	or     bh,BYTE PTR [ebx]
  405a0f:	stos   DWORD PTR es:[edi],eax
  405a10:	inc    ecx
  405a11:	leave  
  405a12:	call   DWORD PTR [edi-0x5ef6732e]
  405a18:	mov    ds:0x3561c64b,eax
  405a1d:	push   cs
  405a1e:	mov    bh,0x56
  405a20:	cmp    al,0xcd
  405a22:	add    ebp,DWORD PTR [edi+esi*8-0x71]
  405a26:	in     eax,0x84
  405a28:	fimul  WORD PTR [esi+0x6a]
  405a2b:	in     eax,dx
  405a2c:	aad    0x11
  405a2e:	jae    0x405a34
  405a30:	sti    
  405a31:	shl    BYTE PTR [edi-0x21],1
  405a34:	sbb    edx,DWORD PTR [ecx+edx*4+0x15328da]
  405a3b:	dec    edi
  405a3c:	imul   edx,DWORD PTR [esi],0x5c
  405a3f:	cs inc edx
  405a41:	inc    ebp
  405a42:	sbb    eax,0xddf8a13d
  405a47:	sub    al,0x44
  405a49:	out    0x9e,eax
  405a4b:	jl     0x405a27
  405a4d:	cld    
  405a4e:	mov    ds:0xe1ce735d,al
  405a53:	dec    esi
  405a54:	xor    al,0x1f
  405a56:	and    DWORD PTR [edi],edi
  405a58:	cmp    DWORD PTR [eax],esi
  405a5a:	pusha  
  405a5b:	clc    
  405a5c:	jmp    0xef42021a
  405a61:	mov    dh,ah
  405a63:	stos   BYTE PTR es:[edi],al
  405a64:	repz pop ebx
  405a66:	and    eax,0x646a9cc3
  405a6b:	xor    al,0x0
	...
  405a7d:	add    BYTE PTR [eax],al
  405a7f:	add    BYTE PTR [ebp-0x79],bh
  405a82:	stos   DWORD PTR es:[edi],eax
  405a83:	and    eax,0x56ea5818
  405a88:	jg     0x405a2f
  405a8a:	sub    DWORD PTR [edi],esi
  405a8c:	outs   dx,BYTE PTR ds:[esi]
  405a8d:	mov    dh,0x68
  405a8f:	lock mov al,0x42
  405a92:	scas   eax,DWORD PTR es:[edi]
  405a93:	or     DWORD PTR [ecx+edx*1-0x1d950d12],esp
  405a9a:	sub    al,0xfb
  405a9c:	test   edi,ebp
  405a9e:	imul   esi,DWORD PTR [esi-0x580e10e5],0x34
  405aa5:	loopne 0x405a59
  405aa7:	xchg   esp,eax
  405aa8:	jno    0x405ab7
  405aaa:	jo     0x405b21
  405aac:	jbe    0x405aea
  405aae:	xor    DWORD PTR [edx],esi
  405ab0:	das    
  405ab1:	lods   al,BYTE PTR ds:[esi]
  405ab2:	test   BYTE PTR [ebx+0x30],0x99
  405ab6:	mov    bh,0x70
  405ab8:	dec    ebp
  405ab9:	dec    edx
  405aba:	je     0x405b35
  405abc:	push   0x79
  405abe:	xor    eax,0xfa75b2fe
  405ac3:	(bad)  
  405ac5:	fs mov ebx,0xdf126e00
  405acb:	jns    0x405ae4
  405acd:	or     eax,0x4dc838ee
  405ad2:	js     0x405ad3
  405ad4:	and    DWORD PTR [ebx+0x49],edx
  405ad7:	mov    esi,0x7d1a9fca
  405adc:	and    ebp,DWORD PTR [ecx+0x2b]
  405adf:	cmp    al,0x4b
  405ae1:	jecxz  0x405b30
  405ae3:	add    eax,0x0
	...
  405af8:	(bad)  
  405af9:	cld    
  405afa:	jle    0x405b40
  405afc:	mov    DWORD PTR [ecx],ebx
  405afe:	sub    al,0x87
  405b00:	sub    dh,0x1c
  405b03:	(bad)  
  405b04:	das    
  405b05:	scas   eax,DWORD PTR es:[edi]
  405b06:	mov    BYTE PTR [ecx],al
  405b08:	fdivr  DWORD PTR es:[ecx-0x194512c0]
  405b0f:	adc    esp,0xffffffa5
  405b12:	fld    st(2)
  405b14:	push   ebx
  405b15:	cmp    eax,0x225a0dc4
  405b1a:	cmc    
  405b1b:	dec    esp
  405b1c:	xchg   ecx,eax
  405b1d:	sub    al,0xa6
  405b1f:	(bad)  
  405b20:	mov    eax,0x77ce9759
  405b25:	cdq    
  405b26:	add    DWORD PTR [ecx],ecx
  405b28:	outs   dx,BYTE PTR ds:[esi]
  405b2a:	xor    BYTE PTR [eax+0x55],cl
  405b2d:	arpl   WORD PTR [ebx-0x75],sp
  405b30:	dec    esp
  405b31:	jl     0x405b85
  405b33:	retf   0x2211
  405b36:	pop    esp
  405b37:	push   esp
  405b38:	sbb    BYTE PTR ds:0x58d3156d,bh
  405b3e:	ds (bad) 
  405b40:	mov    edx,0xf5970f2f
  405b45:	ins    DWORD PTR es:[edi],dx
  405b46:	cdq    
  405b47:	push   eax
  405b48:	cld    
  405b49:	cwde   
  405b4a:	test   al,0x11
  405b4c:	xchg   edi,eax
  405b4d:	jl     0x405b4a
  405b4f:	ror    BYTE PTR [esi+0x6293ca63],cl
  405b55:	xchg   edx,eax
  405b56:	and    bh,dl
  405b58:	xchg   BYTE PTR [ebx+0xe60d],bl
	...
  405b6e:	add    BYTE PTR [eax],al
  405b70:	jg     0x405af2
  405b72:	ss mov ch,0x34
  405b75:	jns    0x405bb6
  405b77:	test   ch,ch
  405b79:	xchg   ebp,eax
  405b7a:	cld    
  405b7b:	adc    DWORD PTR [edx+0x5b22f997],ebp
  405b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b82:	retf   0x186f
  405b85:	xchg   ebp,eax
  405b86:	jecxz  0x405bc8
  405b88:	leave  
  405b89:	fs xchg ecx,eax
  405b8b:	imul   edi,DWORD PTR [ebp-0x3ba55b9d],0x56
  405b92:	mov    ebx,0xb2867f09
  405b97:	cmp    BYTE PTR [esi-0x3f],al
  405b9a:	jne    0x405b4a
  405b9c:	add    DWORD PTR [eax-0x2d3f6088],ecx
  405ba2:	gs int3 
  405ba4:	or     edx,0x50
  405ba7:	std    
  405ba8:	inc    edx
  405ba9:	pop    ebp
  405baa:	out    0xe0,al
  405bac:	cmc    
  405bad:	dec    ebx
  405bae:	iret   
  405baf:	iret   
  405bb0:	mov    WORD PTR [esi],?
  405bb2:	lock add BYTE PTR [edi+0x3e],0xfd
  405bb7:	mov    cl,0xfe
  405bb9:	js     0x405bf5
  405bbb:	and    al,0xb9
  405bbd:	dec    edi
  405bbe:	xor    edx,DWORD PTR ds:0x460c7a88
  405bc4:	dec    ebx
  405bc5:	bound  ebp,QWORD PTR [ecx]
  405bc7:	ja     0x405bc3
  405bc9:	sahf   
  405bca:	iret   
  405bcb:	js     0x405c39
  405bcd:	(bad)  
  405bce:	out    0x47,al
  405bd0:	adc    eax,0x1afdbe
	...
  405be5:	add    BYTE PTR [eax],al
  405be7:	add    dh,cl
  405be9:	mov    esi,0xf79729f0
  405bee:	xor    DWORD PTR [eax+edx*2-0xe72c32f],edi
  405bf5:	fchs   
  405bf7:	sub    BYTE PTR [edx+ebp*1],dl
  405bfa:	enter  0x3d0d,0xeb
  405bfe:	dec    esi
  405bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c00:	xor    DWORD PTR [esi+ecx*2+0x1d752090],esi
  405c07:	mov    bl,0xf3
  405c09:	xor    eax,0xf6c2ba2c
  405c0e:	push   0x79
  405c10:	dec    esp
  405c11:	scas   eax,DWORD PTR es:[edi]
  405c12:	push   edx
  405c13:	je     0x405c7a
  405c15:	jo     0x405c70
  405c17:	dec    edi
  405c18:	mov    ?,WORD PTR [ecx]
  405c1a:	push   eax
  405c1b:	xchg   dx,si
  405c1e:	rol    BYTE PTR [edx+0x6bca20ca],cl
  405c24:	or     esp,eax
  405c26:	lock pop eax
  405c28:	fsub   DWORD PTR [edx+0x61995dd8]
  405c2e:	xchg   edi,eax
  405c2f:	sahf   
  405c30:	daa    
  405c31:	and    al,0xa6
  405c33:	xchg   edi,eax
  405c34:	dec    esi
  405c35:	jecxz  0x405c8b
  405c37:	stos   DWORD PTR es:[edi],eax
  405c38:	jne    0x405be0
  405c3a:	push   esp
  405c3b:	ret    0x655c
  405c3e:	fld    TBYTE PTR [edx]
  405c40:	push   eax
  405c41:	sbb    dl,al
  405c43:	inc    ebx
  405c44:	inc    ecx
  405c45:	xlat   BYTE PTR ds:[ebx]
  405c46:	test   al,0x20
  405c48:	adc    bl,BYTE PTR [edx+0x15a0]
	...
  405c5e:	add    BYTE PTR [eax],al
  405c60:	and    ebx,DWORD PTR [ecx+0x5f]
  405c63:	(bad)  
  405c64:	lods   al,BYTE PTR ds:[esi]
  405c65:	sbb    al,0x5e
  405c67:	fild   WORD PTR [edi-0x50fbb325]
  405c6d:	sahf   
  405c6e:	pop    esp
  405c6f:	jmp    0x4359ba55
  405c74:	fmul   st,st(7)
  405c76:	jmp    FWORD PTR [ecx]
  405c78:	sbb    DWORD PTR [eax],edx
  405c7a:	sub    edx,DWORD PTR ds:0x2022514a
  405c80:	sub    edx,DWORD PTR [edx+0x2324dc01]
  405c86:	pop    ds
  405c87:	fst    QWORD PTR [edi]
  405c89:	ss pop esi
  405c8b:	push   cs
  405c8c:	dec    ebx
  405c8d:	add    eax,0xd5661f9d
  405c92:	fist   DWORD PTR [eax-0x76ed264a]
  405c98:	jecxz  0x405c83
  405c9a:	push   ecx
  405c9b:	jb     0x405c51
  405c9d:	aaa    
  405c9e:	xchg   ecx,eax
  405c9f:	pop    ebx
  405ca0:	mov    ch,0x8
  405ca2:	rcl    BYTE PTR [edx+ebp*8],1
  405ca5:	popf   
  405ca6:	pop    ss
  405ca7:	and    eax,0x1656acdf
  405cac:	and    BYTE PTR [ebp+edx*4+0x17],bh
  405cb0:	mov    ecx,0x5f47d44a
  405cb5:	jne    0x405c9f
  405cb7:	push   esi
  405cb8:	shl    BYTE PTR [ecx+ebp*4+0x65],cl
  405cbc:	mov    cl,0x95
  405cbe:	push   0x64
  405cc0:	test   al,0xc2
  405cc2:	sub    esp,DWORD PTR [ebx]
	...
  405cd8:	imul   esi,DWORD PTR [edx],0xffffffec
  405cdb:	sbb    dl,BYTE PTR [esi+0x21]
  405cde:	lods   eax,DWORD PTR ds:[esi]
  405cdf:	loope  0x405c65
  405ce1:	shr    BYTE PTR [ebp-0x38],1
  405ce4:	daa    
  405ce5:	jmp    FWORD PTR [esi]
  405ce7:	dec    edi
  405ce8:	hlt    
  405ce9:	jmp    0x1da0:0xdba54edf
  405cf0:	test   BYTE PTR [edx+eiz*2],0x2c
  405cf4:	repz cmp eax,0xa833eb23
  405cfa:	in     al,0xd2
  405cfc:	sbb    BYTE PTR [edi+0x49ddd9a5],dl
  405d02:	data16 sar dh,1
  405d05:	js     0x405d2e
  405d07:	lea    ebx,[edx+eax*4+0x530f8cb9]
  405d0e:	clc    
  405d0f:	add    ch,dh
  405d11:	dec    ecx
  405d12:	int    0x3a
  405d14:	cld    
  405d15:	dec    esi
  405d16:	cld    
  405d17:	jnp    0x405cd4
  405d19:	punpckhdq mm7,QWORD PTR [edx+edx*4-0x2602a4f8]
  405d21:	inc    ebp
  405d22:	or     BYTE PTR [esi],bh
  405d24:	rcr    BYTE PTR [edx+0x39],1
  405d27:	jg     0x405d88
  405d29:	test   eax,0xdc76b022
  405d2e:	adc    esi,ecx
  405d30:	std    
  405d31:	nop
  405d32:	inc    esp
  405d33:	xor    al,BYTE PTR [eax+ecx*4]
  405d36:	ja     0x405dab
  405d38:	ret    
  405d39:	(bad)  
  405d3a:	fbstp  TBYTE PTR [eax+eax*1+0x0]
	...
  405d4d:	add    BYTE PTR [eax],al
  405d4f:	add    dl,bl
  405d51:	rcl    eax,1
  405d53:	cmc    
  405d54:	rcr    DWORD PTR [edx+eax*4],0x36
  405d58:	fadd   DWORD PTR [ebx]
  405d5a:	mov    bl,0x77
  405d5c:	inc    eax
  405d5d:	pusha  
  405d5e:	(bad)  
  405d5f:	dec    esi
  405d60:	cdq    
  405d61:	ja     0x405d4a
  405d63:	punpckldq mm6,DWORD PTR [edx-0x4c]
  405d67:	int3   
  405d68:	pop    ebx
  405d69:	ins    DWORD PTR es:[edi],dx
  405d6a:	test   DWORD PTR [ebp+0x4a132c1c],ecx
  405d70:	jne    0x405da5
  405d72:	and    cl,BYTE PTR [ebx]
  405d74:	fidivr WORD PTR ds:0x2247c871
  405d7a:	inc    eax
  405d7b:	mov    DWORD PTR [eax-0x6eb9a245],edi
  405d81:	sahf   
  405d82:	push   0x7
  405d84:	call   0xcaf:0x73c43fa9
  405d8b:	test   DWORD PTR [esi+ebp*8],edx
  405d8e:	cwde   
  405d8f:	inc    edx
  405d90:	dec    ebp
  405d91:	jmp    0xe476613d
  405d96:	cli    
  405d97:	sar    BYTE PTR [edi],0xfb
  405d9a:	leave  
  405d9b:	and    DWORD PTR [edx+0x41],0x287dc4cd
  405da2:	out    0xf3,al
  405da4:	mov    ah,0xef
  405da6:	cli    
  405da7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405da8:	out    dx,eax
  405da9:	add    eax,0x652695f0
  405dae:	xor    DWORD PTR [eax],eax
  405db0:	pop    ecx
  405db1:	inc    esp
  405db2:	cmp    dh,BYTE PTR [ecx]
	...
  405dc8:	cwde   
  405dc9:	repz es (bad) 
  405dcc:	retf   
  405dcd:	add    DWORD PTR [ebx+edx*2],ecx
  405dd0:	or     bh,BYTE PTR [ecx-0x5b]
  405dd3:	dec    edi
  405dd4:	jne    0x405e46
  405dd6:	mov    WORD PTR [esi-0x54],?
  405dd9:	xchg   edi,eax
  405dda:	mov    bl,0x2d
  405ddc:	neg    DWORD PTR [ebp-0x22d1e34a]
  405de2:	ja     0x405d6e
  405de4:	push   ecx
  405de5:	lods   al,BYTE PTR ds:[esi]
  405de6:	jo     0x405da3
  405de8:	nop
  405de9:	fisttp DWORD PTR [ebp-0x18]
  405dec:	sar    DWORD PTR [ecx+0x6a12d962],cl
  405df2:	or     bl,dh
  405df4:	into   
  405df5:	jp     0x405e18
  405df7:	ret    0x4c07
  405dfa:	cmp    dl,BYTE PTR [ecx-0x5fc8d2c4]
  405e00:	jne    0x405e68
  405e02:	hlt    
  405e03:	xor    eax,0x6fd9eca
  405e08:	or     ebp,DWORD PTR [eax-0x4ec7ac22]
  405e0e:	retf   
  405e0f:	fs jns 0x405e44
  405e12:	arpl   WORD PTR [ecx-0x7a],di
  405e15:	adc    al,BYTE PTR [esi+0x48]
  405e18:	mov    edi,0x41b7563
  405e1d:	xor    eax,0x6e3d2a7c
  405e22:	mov    edi,0xb29682bc
  405e27:	(bad)  
  405e28:	ret    
  405e29:	fsub   DWORD PTR [edi+0x88]
	...
  405e3f:	add    BYTE PTR [esi+esi*1-0xa8a5e3f],cl
  405e46:	sti    
  405e47:	inc    edi
  405e48:	inc    ebx
  405e49:	outs   dx,DWORD PTR ds:[esi]
  405e4a:	frstor [edx+0x32]
  405e4d:	scas   al,BYTE PTR es:[edi]
  405e4e:	into   
  405e4f:	jge    0x405e32
  405e51:	lock mov esi,0xf8301074
  405e57:	mov    bl,0x86
  405e59:	jb     0x405e5c
  405e5b:	mov    edi,0xa1aab14f
  405e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e61:	hlt    
  405e62:	ret    0xad88
  405e65:	xor    esi,DWORD PTR [eax+eiz*1]
  405e68:	mov    DWORD PTR [esi+0x25],esp
  405e6b:	or     DWORD PTR [eax+0x5b3656a5],edi
  405e71:	call   0x278a99ac
  405e76:	jo     0x405e74
  405e78:	iret   
  405e79:	push   0xffffff89
  405e7b:	cmc    
  405e7c:	aam    0xa9
  405e7e:	jb     0x405e4a
  405e80:	sbb    ebp,ebp
  405e82:	jp     0x405e63
  405e84:	out    0x2b,al
  405e86:	call   0xe919c08e
  405e8b:	lds    ecx,FWORD PTR [eax-0x18]
  405e8e:	jmp    0x441:0xea3fb67f
  405e95:	adc    ebp,edi
  405e97:	cld    
  405e98:	add    eax,0xa0bee68e
  405e9d:	(bad)  
  405e9e:	in     al,dx
  405e9f:	jbe    0x405ecf
  405ea1:	imul   esp,ebp,0x38
	...
  405eb8:	dec    esp
  405eb9:	push   esi
  405eba:	out    0xf4,al
  405ebc:	xor    dh,BYTE PTR [ecx-0x21]
  405ebf:	mov    dl,0x59
  405ec1:	pusha  
  405ec2:	cmc    
  405ec3:	jo     0x405eac
  405ec5:	xchg   esp,ebp
  405ec7:	cs jne 0x405e84
  405eca:	add    eax,esp
  405ecc:	(bad)  
  405ecd:	mov    cl,0x65
  405ecf:	loope  0x405e9a
  405ed1:	dec    esp
  405ed2:	push   edx
  405ed3:	repz sti 
  405ed5:	std    
  405ed6:	or     dh,dl
  405ed8:	cmp    eax,0x43f53c18
  405edd:	jnp    0x405f50
  405edf:	in     al,dx
  405ee0:	cmc    
  405ee1:	mov    eax,ds:0x28c7e646
  405ee6:	pop    ds
  405ee7:	fild   WORD PTR [ecx+0x1ad227ce]
  405eed:	jecxz  0x405e9b
  405eef:	ror    esp,cl
  405ef1:	cmp    DWORD PTR [edx-0x3c6f70ff],ebx
  405ef7:	add    BYTE PTR [ecx+0x66],cl
  405efa:	hlt    
  405efb:	sti    
  405efc:	sub    al,0xaa
  405efe:	leave  
  405eff:	cli    
  405f00:	repnz push eax
  405f02:	(bad)  
  405f03:	fdiv   DWORD PTR [eax+0x6ed9a6f7]
  405f09:	sbb    eax,0x1225dc90
  405f0e:	adc    eax,0x21e8ebd5
  405f13:	call   FWORD PTR [ecx+0x57f67b5f]
  405f19:	mov    ch,0x4c
  405f1b:	rol    DWORD PTR [eax],1
	...
  405f2d:	add    BYTE PTR [eax],al
  405f2f:	add    BYTE PTR [edi+edx*1-0x2a52f1f],dl
  405f36:	aad    0xc2
  405f38:	or     BYTE PTR [ebx-0x71],cl
  405f3b:	ret    
  405f3c:	(bad)  
  405f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f3e:	mov    eax,0x3dbf7db6
  405f43:	scas   eax,DWORD PTR es:[edi]
  405f44:	jecxz  0x405f9a
  405f46:	or     ah,BYTE PTR ds:0x1c52f2a6
  405f4c:	pop    esp
  405f4d:	or     DWORD PTR [edi+ebx*1+0x48],esp
  405f51:	enter  0x1658,0xa
  405f55:	outs   dx,BYTE PTR cs:[esi]
  405f57:	add    BYTE PTR [esi-0x70c93d83],cl
  405f5d:	ret    
  405f5e:	test   eax,0xbde87a01
  405f63:	test   BYTE PTR [ebx+0x3e],bh
  405f66:	aam    0xb3
  405f68:	mov    DWORD PTR [edx+ebp*2-0x16],esp
  405f6c:	mov    BYTE PTR [edx-0x31d022ff],ch
  405f72:	jecxz  0x405f04
  405f74:	push   ds
  405f75:	adc    al,0x8e
  405f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f78:	sbb    al,0x52
  405f7a:	xor    dh,bh
  405f7c:	sbb    eax,0x28c95b88
  405f81:	cmc    
  405f82:	dec    ebx
  405f83:	dec    esp
  405f84:	sub    DWORD PTR [ebx],edi
  405f86:	es jnp 0x405fe4
  405f89:	jnp    0x405f23
  405f8b:	and    bl,BYTE PTR [edx-0x47]
  405f8e:	repz adc eax,0x28b4dd61
	...
  405fa8:	pusha  
  405fa9:	pop    ds
  405faa:	fistp  WORD PTR [edi]
  405fac:	jb     0x40600f
  405fae:	popa   
  405faf:	inc    esi
  405fb0:	jae    0x405f55
  405fb2:	or     BYTE PTR [ecx+0x66],dh
  405fb5:	retf   0xf41c
  405fb8:	test   DWORD PTR ds:0x6015c377,0x8a149ac9
  405fc2:	mov    al,ds:0x8c3cfbad
  405fc7:	sar    dl,0x2
  405fca:	out    0xf7,al
  405fcc:	dec    eax
  405fcd:	rcr    BYTE PTR [ecx-0x52],0x49
  405fd1:	jbe    0x406005
  405fd3:	cdq    
  405fd4:	cmp    al,0x25
  405fd6:	and    al,0x1c
  405fd8:	sub    eax,0xf2b4deb
  405fdd:	mov    esi,0x680e72f1
  405fe2:	call   0x1adc:0x7c066245
  405fe9:	pop    ds
  405fea:	cmp    dh,BYTE PTR [esi+0x7f8151d]
  405ff0:	ins    BYTE PTR es:[edi],dx
  405ff1:	in     al,dx
  405ff2:	mov    ch,0x62
  405ff4:	inc    ebx
  405ff5:	jmp    0xe8fed47e
  405ffa:	inc    edx
  405ffb:	push   ds
  405ffc:	sar    edx,1
  405ffe:	add    BYTE PTR [eax-0x35410468],ah
  406004:	pop    edi
  406005:	aam    0x48
  406007:	adc    ch,BYTE PTR cs:[ebp+0x4404]
	...
  40601e:	add    BYTE PTR [eax],al
  406020:	in     eax,0xc6
  406022:	int3   
  406023:	stc    
  406024:	and    al,0xde
  406026:	mov    dl,BYTE PTR [eax-0x79b024b5]
  40602c:	(bad)  
  40602d:	fimul  DWORD PTR ds:0xd58889ec
  406033:	push   ecx
  406034:	pusha  
  406035:	mov    DWORD PTR [ebx+0x57a25738],edx
  40603b:	jg     0x4060a7
  40603d:	mov    ds:0xa14d1519,eax
  406042:	fld    TBYTE PTR [edx-0x3e625f84]
  406048:	xchg   ebx,eax
  406049:	popf   
  40604a:	pop    esp
  40604b:	xlat   BYTE PTR ds:[ebx]
  40604c:	push   cs
  40604d:	xchg   esp,eax
  40604e:	push   ds
  40604f:	mov    ebp,0x2e05e01
  406054:	test   al,0x56
  406056:	mov    ds:0xaf77ef69,al
  40605b:	retf   
  40605c:	cmp    BYTE PTR [ecx-0xf],0xa0
  406060:	jne    0x4060cd
  406062:	xor    ebx,DWORD PTR [edi]
  406064:	adc    al,0x6a
  406066:	jne    0x4060dd
  406068:	cmp    esi,DWORD PTR [edi-0x5c]
  40606b:	arpl   WORD PTR [esi-0x66f719b3],si
  406071:	fdiv   DWORD PTR [ebx]
  406073:	sub    ch,ch
  406075:	dec    edx
  406076:	sub    eax,0x2e73bf6c
  40607b:	sar    al,0x50
  40607e:	daa    
  40607f:	(bad)  
  406080:	jge    0x4060ff
  406082:	sub    eax,0x44
	...
  406097:	add    BYTE PTR [edi+eiz*4],dl
  40609a:	and    al,0x82
  40609c:	inc    esi
  40609d:	cwde   
  40609e:	sub    DWORD PTR [ecx-0x8d7ead0],edi
  4060a4:	adc    eax,0x7c3d2a2a
  4060a9:	add    ch,BYTE PTR [ebx]
  4060ab:	jnp    0x40609b
  4060ad:	into   
  4060ae:	cmp    edx,DWORD PTR [ebp-0x2ccaf636]
  4060b4:	arpl   WORD PTR [edi+ebx*1],si
  4060b7:	adc    DWORD PTR [esi],eax
  4060b9:	in     al,dx
  4060ba:	adc    eax,0x1ae3144f
  4060bf:	mov    WORD PTR [edx],fs
  4060c1:	pop    esi
  4060c2:	sbb    cl,dl
  4060c4:	sti    
  4060c5:	jo     0x40607f
  4060c7:	pop    es
  4060c8:	dec    esi
  4060c9:	mov    bh,0xb9
  4060cb:	inc    ebp
  4060cc:	pushf  
  4060cd:	xchg   BYTE PTR [edx-0x4c3ea45f],dh
  4060d3:	jecxz  0x406085
  4060d5:	mov    WORD PTR [ecx-0x5fac08e3],fs
  4060db:	pop    edi
  4060dc:	in     eax,0x6a
  4060de:	xchg   ebp,eax
  4060df:	call   0xd8e8:0xdc8be5d3
  4060e6:	lds    edx,FWORD PTR [esi]
  4060e8:	lahf   
  4060e9:	movsx  ebx,WORD PTR [eax-0x73]
  4060ed:	ds or  eax,edx
  4060f0:	js     0x40614b
  4060f2:	or     BYTE PTR [esi+0x540a6453],cl
  4060f8:	xchg   ebp,eax
  4060f9:	mov    ebx,0x120b
	...
  40610e:	add    BYTE PTR [eax],al
  406110:	pop    es
  406111:	xchg   ebx,eax
  406112:	add    DWORD PTR [edi],ecx
  406114:	popf   
  406115:	addr16 pop ebp
  406117:	push   es
  406118:	out    0x92,eax
  40611a:	push   0xffffffcc
  40611c:	push   ss
  40611d:	xor    al,0x33
  40611f:	lds    ebp,FWORD PTR [eax-0x22]
  406122:	add    eax,esi
  406124:	mov    ah,0x22
  406126:	cmp    DWORD PTR [edi-0x2af2063e],edi
  40612c:	add    BYTE PTR [ebx+0x57],cl
  40612f:	int3   
  406130:	inc    esi
  406131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406132:	pusha  
  406133:	ror    DWORD PTR [edi-0x2a3f1a46],0x61
  40613a:	rcl    BYTE PTR [edx-0x6c751cf5],cl
  406140:	jns    0x40614f
  406142:	mov    esp,0xf1645394
  406147:	lea    edx,[ecx]
  406149:	xchg   esi,eax
  40614b:	xchg   DWORD PTR [edi-0x728160c3],esi
  406151:	shl    DWORD PTR [edi+0x2cdc4873],cl
  406157:	jb     0x406157
  406159:	sbb    ah,BYTE PTR cs:[eax-0x44]
  40615d:	xchg   ebp,eax
  40615e:	inc    ebx
  40615f:	popa   
  406160:	dec    edx
  406161:	jnp    0x4061d7
  406163:	pop    edx
  406164:	pop    esi
  406165:	ret    0x5b49
  406168:	and    BYTE PTR [eax+0x7e],bl
  40616b:	cmp    edx,esp
  40616d:	in     eax,dx
  40616e:	cmp    BYTE PTR es:[esp+eax*1],bh
  406172:	adc    BYTE PTR ds:0x0,bh
	...
  406188:	stc    
  406189:	sbb    BYTE PTR [ebp-0x5e0054cc],dl
  40618f:	push   ds
  406190:	ins    DWORD PTR es:[edi],dx
  406191:	inc    esi
  406192:	sti    
  406193:	pop    ss
  406194:	xchg   edi,eax
  406195:	lods   al,BYTE PTR ds:[esi]
  406196:	int3   
  406197:	xor    BYTE PTR [esi+0xe],ah
  40619a:	popa   
  40619b:	xor    DWORD PTR [eax],ebx
  40619d:	in     al,0x55
  40619f:	add    BYTE PTR [ecx-0x7ff1779f],al
  4061a5:	xchg   ebx,eax
  4061a6:	jecxz  0x4061e1
  4061a8:	dec    ebp
  4061a9:	enter  0xbcf3,0x5c
  4061ad:	or     bl,BYTE PTR [esi+0x205a9e8b]
  4061b3:	rcr    bh,cl
  4061b5:	pushf  
  4061b6:	dec    ebx
  4061b7:	in     eax,0xd4
  4061b9:	ror    BYTE PTR [eax+ebx*8],1
  4061bc:	aad    0xe
  4061be:	addr16 out dx,eax
  4061c0:	out    0x44,eax
  4061c2:	fnstenv [esi-0x7e4f7d2a]
  4061c8:	(bad)  
  4061ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061cb:	add    al,0xca
  4061cd:	aaa    
  4061ce:	iret   
  4061cf:	xor    ebp,DWORD PTR [eax+0x196a714d]
  4061d5:	mov    ebx,DWORD PTR [eax]
  4061d7:	pop    ebp
  4061d8:	push   es
  4061d9:	cmc    
  4061da:	(bad)  
  4061db:	adc    BYTE PTR [edi],al
  4061dd:	xor    edx,DWORD PTR [ebp+0x2b80f527]
  4061e3:	jle    0x4061e9
  4061e5:	mov    edi,0xfe09493e
  4061ea:	push   esi
  4061eb:	int3   
	...
  406200:	clc    
  406201:	cmp    edi,DWORD PTR ds:0x83697afb
  406207:	mov    ds:0x95e6a74b,al
  40620c:	inc    eax
  40620d:	jecxz  0x4061bc
  40620f:	test   al,0x41
  406211:	and    eax,0x6f539fc4
  406216:	jp     0x4061de
  406218:	xor    dh,BYTE PTR [ecx-0x15c00eef]
  40621e:	add    eax,0x6c2c4e74
  406223:	inc    ebx
  406224:	sub    al,0x96
  406226:	rcr    BYTE PTR [edx],cl
  406228:	(bad)  
  406229:	fdiv   DWORD PTR [edi+0x5531622d]
  40622f:	xchg   esi,eax
  406230:	and    dh,BYTE PTR [eax]
  406232:	pop    ss
  406233:	cld    
  406234:	dec    ebp
  406235:	push   cs
  406236:	fld    DWORD PTR [ecx-0x74]
  406239:	setnp  BYTE PTR [eax]
  40623c:	pop    ebx
  40623d:	or     bl,BYTE PTR [esi+edi*1-0x32]
  406241:	add    ebx,DWORD PTR [esi]
  406243:	push   esp
  406244:	stc    
  406245:	sub    eax,0x2490ea27
  40624a:	sbb    BYTE PTR gs:[edi-0x75383edd],0x3a
  406252:	add    ebp,DWORD PTR [ebp+0x133d3495]
  406258:	aam    0xd
  40625a:	jg     0x4062d5
  40625c:	ret    
  40625d:	or     BYTE PTR [eax-0x5f6b991],bh
  406263:	add    al,0x0
	...
  406275:	add    BYTE PTR [eax],al
  406277:	add    BYTE PTR [ecx+0x57],dl
  40627a:	xor    al,0xbb
  40627c:	test   al,0x56
  40627e:	jbe    0x406251
  406280:	xlat   BYTE PTR ds:[ebx]
  406281:	xor    eax,0xc92358c
  406286:	into   
  406287:	pop    esi
  406288:	pop    ebp
  406289:	and    dl,BYTE PTR [eax]
  40628b:	loope  0x406229
  40628d:	cmp    edx,DWORD PTR [edx-0x75]
  406290:	retf   
  406291:	test   DWORD PTR ss:[ebp-0x938c8c2],ebx
  406298:	or     DWORD PTR [ecx],ebp
  40629a:	or     DWORD PTR [ecx-0x20],ecx
  40629d:	daa    
  40629e:	dec    ebx
  40629f:	and    ecx,edi
  4062a1:	ds lahf 
  4062a3:	fidivr DWORD PTR fs:0x3fc50ddd
  4062aa:	and    esi,DWORD PTR [eax-0x259ebefc]
  4062b0:	adc    edi,DWORD PTR [esi+edx*4]
  4062b3:	int3   
  4062b4:	xchg   esi,eax
  4062b5:	xor    eax,0xd981a5d4
  4062ba:	outs   dx,BYTE PTR ds:[esi]
  4062bb:	sbb    edi,DWORD PTR [edx-0x11]
  4062be:	gs pop ecx
  4062c0:	push   eax
  4062c1:	fadd   QWORD PTR [eax+0x66]
  4062c4:	mov    dl,0x78
  4062c6:	inc    eax
  4062c7:	and    al,0x8
  4062c9:	inc    edx
  4062ca:	push   edx
  4062cb:	jmp    0xb044:0xa8539b61
  4062d2:	inc    esi
  4062d3:	outs   dx,DWORD PTR ds:[esi]
  4062d4:	sub    ch,BYTE PTR ds:0x1e502d3f
  4062da:	xchg   ebp,eax
  4062db:	repnz add BYTE PTR [eax],al
	...
  4062ee:	add    BYTE PTR [eax],al
  4062f0:	leave  
  4062f1:	(bad)  
  4062f2:	mov    esi,DWORD PTR [eax+0x748ef39c]
  4062f8:	jecxz  0x4062ca
  4062fa:	test   DWORD PTR [esi],esi
  4062fc:	jns    0x4062f7
  4062fe:	mov    edi,eax
  406300:	push   ss
  406301:	and    eax,DWORD PTR [ebp-0x77e7ca46]
  406307:	jnp    0x406344
  406309:	xchg   ebp,eax
  40630a:	mov    DWORD PTR ds:0xff4ba621,edi
  406310:	pop    esi
  406311:	je     0x40635d
  406313:	shr    ebp,0x46
  406316:	pop    ebp
  406317:	inc    edi
  406318:	ror    DWORD PTR [ecx-0x3f94f6ac],1
  40631e:	ds ret 
  406320:	add    al,0x68
  406322:	aaa    
  406323:	test   DWORD PTR [edi],esp
  406325:	push   ebx
  406326:	cmp    dl,BYTE PTR [eax+0x9]
  406329:	(bad)  
  40632a:	cmp    dl,BYTE PTR [edx]
  40632c:	repz in al,0x98
  40632f:	int3   
  406330:	ins    BYTE PTR es:[edi],dx
  406331:	cmp    ebx,DWORD PTR [eax-0x6cf18072]
  406337:	pop    edx
  406338:	inc    eax
  406339:	xor    DWORD PTR [edx-0x7ff765e8],edx
  40633f:	(bad)  
  406340:	neg    edi
  406342:	adc    BYTE PTR [esi+edx*8-0x7c8aff16],0x53
  40634a:	mov    ch,0x6c
  40634c:	inc    ebp
  40634d:	mov    ecx,0x6bf6682
  406352:	fistp  DWORD PTR [edi+0x0]
	...
  406365:	add    BYTE PTR [eax],al
  406367:	add    cl,bh
  406369:	in     eax,dx
  40636a:	jmp    0x406355
  40636c:	popa   
  40636d:	fld    DWORD PTR [eax]
  40636f:	push   ecx
  406370:	add    eax,0x6e536441
  406375:	xchg   ecx,eax
  406376:	mov    bl,bl
  406378:	cli    
  406379:	js     0x40636a
  40637b:	data16 (bad) 
  40637d:	dec    edi
  40637e:	push   esi
  40637f:	mov    dh,0x43
  406381:	test   eax,0x78f0c33
  406386:	fnstsw WORD PTR [ebx+edi*1-0x1f]
  40638a:	mov    bh,0xac
  40638c:	retf   0xedf1
  40638f:	dec    esp
  406390:	push   esi
  406391:	sbb    BYTE PTR [ebx+0x65b9bd56],cl
  406397:	xchg   esi,eax
  406398:	popa   
  406399:	pusha  
  40639a:	add    BYTE PTR [ebx],ah
  40639c:	or     BYTE PTR [eax-0x47],ch
  40639f:	mov    ebx,0x89dc9074
  4063a4:	ret    
  4063a5:	xor    BYTE PTR [edx],dh
  4063a7:	inc    ecx
  4063a8:	aas    
  4063a9:	fcom   DWORD PTR [esi+0x39]
  4063ac:	imul   edx,DWORD PTR [eax],0xe8fd819e
  4063b2:	cli    
  4063b3:	adc    DWORD PTR [esi+0x48],0x15
  4063b7:	sub    esi,edx
  4063b9:	mov    al,ds:0x682f9670
  4063be:	leave  
  4063bf:	push   es
  4063c0:	fwait
  4063c1:	sub    BYTE PTR [esp+ebx*8+0x2c41e017],0xb0
  4063c9:	cmp    BYTE PTR [edi],ah
  4063cb:	jl     0x4063cd
	...
  4063dd:	add    BYTE PTR [eax],al
  4063df:	add    BYTE PTR [ebp+0x70fc7127],bh
  4063e5:	rcl    DWORD PTR [ebx],0x0
  4063e8:	fs jno 0x4063a1
  4063eb:	sti    
  4063ec:	jl     0x4063b3
  4063ee:	rcr    BYTE PTR [esi+0x27e90911],1
  4063f4:	fldcw  WORD PTR [ebp+0x133b428f]
  4063fa:	and    DWORD PTR [ebx+edx*8+0x1bc947a5],ebp
  406401:	out    dx,eax
  406402:	lods   eax,DWORD PTR ds:[esi]
  406403:	ror    DWORD PTR ds:[ecx-0x37],cl
  406407:	pop    ebx
  406408:	mov    cl,0xe4
  40640a:	gs mov ch,0x79
  40640d:	push   edx
  40640e:	add    eax,edx
  406410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406411:	mov    esi,DWORD PTR [esi]
  406413:	imul   ecx,DWORD PTR [ecx+ebp*1],0x830e0c5e
  40641a:	out    dx,al
  40641b:	loop   0x406493
  40641d:	inc    eax
  40641e:	xchg   esi,eax
  40641f:	xchg   DWORD PTR [esi],ebx
  406421:	push   ebx
  406422:	xchg   cl,dl
  406424:	mov    dh,0xe5
  406426:	loopne 0x4063dc
  406428:	mov    ah,0x48
  40642a:	dec    esi
  40642b:	pop    edx
  40642c:	sub    al,0xee
  40642e:	sub    BYTE PTR [edi],bh
  406430:	mov    eax,ds:0x4986113f
  406435:	test   DWORD PTR [edi-0x1d],esi
  406438:	mov    esi,DWORD PTR [esi]
  40643a:	(bad)  ds:0x68bf8c03
  406440:	jmp    0x406437
  406442:	clc    
  406443:	mov    eax,ds:0x0
	...
  406458:	add    DWORD PTR [eax-0x62],0xffffffc4
  40645c:	cmp    edi,0x78e92a30
  406462:	push   esi
  406463:	dec    edi
  406464:	xor    al,0x94
  406466:	outs   dx,DWORD PTR ds:[esi]
  406467:	idiv   ah
  406469:	das    
  40646a:	or     DWORD PTR [ebx+0x7da79a5e],edx
  406470:	es daa 
  406472:	rcr    DWORD PTR [eax],0x62
  406475:	lds    ebx,FWORD PTR [edi+0x250594d0]
  40647b:	mov    bh,0x49
  40647d:	aas    
  40647e:	cwde   
  40647f:	sbb    BYTE PTR [edi],bl
  406481:	loopne 0x4064b1
  406483:	jg     0x406447
  406485:	sub    bh,BYTE PTR [edi+0x47]
  406488:	dec    ebx
  406489:	mov    dl,0xc3
  40648b:	pop    ds
  40648c:	pop    esi
  40648d:	mov    al,ds:0x8f08f76
  406492:	retf   0xd5e7
  406495:	sub    edx,DWORD PTR [esi]
  406497:	pop    eax
  406498:	xchg   DWORD PTR [ebx+0x611a3faa],edx
  40649e:	pop    ds
  40649f:	nop
  4064a0:	in     al,dx
  4064a1:	sub    DWORD PTR [ebx-0x77b6e09],esp
  4064a7:	into   
  4064a8:	cmp    ah,ah
  4064aa:	dec    ebx
  4064ab:	test   al,0x6d
  4064ad:	jle    0x4064ad
  4064af:	push   es
  4064b0:	cmp    DWORD PTR [esi-0x11199fbd],0xffffffa4
  4064b7:	jo     0x406469
  4064b9:	sahf   
  4064ba:	and    DWORD PTR [edi],edx
	...
  4064d0:	mov    ch,0x64
  4064d2:	lods   al,BYTE PTR ds:[esi]
  4064d3:	mov    eax,0xdf17f41b
  4064d8:	cs inc ecx
  4064da:	inc    ebx
  4064db:	out    0xdf,eax
  4064dd:	sbb    edi,edi
  4064df:	jg     0x406523
  4064e1:	sti    
  4064e2:	dec    ecx
  4064e3:	das    
  4064e4:	fs jae 0x4064dd
  4064e7:	inc    edi
  4064e8:	mov    ecx,0xf107b
  4064ed:	ret    
  4064ee:	mov    bl,0x68
  4064f0:	and    eax,0x8bc708d1
  4064f5:	jns    0x4064b4
  4064f7:	mov    al,ds:0x97edf49e
  4064fc:	das    
  4064fd:	xor    al,0x52
  4064ff:	push   edx
  406501:	fcom   DWORD PTR [ebp-0x1a]
  406504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406505:	daa    
  406506:	mov    dh,0x59
  406508:	push   ebp
  406509:	ret    0xbce5
  40650c:	cmp    eax,0xa2099614
  406511:	icebp  
  406512:	mov    esi,DWORD PTR [ebp+eax*1-0x25f02361]
  406519:	jns    0x406584
  40651b:	pop    ebx
  40651c:	mov    dl,0xc2
  40651e:	lock out 0xb4,al
  406521:	and    eax,0x485a51d3
  406526:	jnp    0x406516
  406528:	ins    BYTE PTR es:[edi],dx
  406529:	lods   eax,DWORD PTR ds:[esi]
  40652a:	shl    DWORD PTR ds:0x9a6ad9cd,cl
  406530:	sar    BYTE PTR [esi],cl
  406532:	pop    ecx
  406533:	das    
	...
  406548:	jne    0x40659b
  40654a:	rcl    DWORD PTR [edx-0x37c34bf6],1
  406550:	add    eax,0x657bdc0d
  406555:	call   0x85fe365f
  40655a:	xchg   BYTE PTR [ebp+ebx*4+0x62],dh
  40655e:	(bad)  
  40655f:	xchg   ecx,eax
  406560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406561:	mov    ah,0x26
  406563:	cs mov edx,0x4d9b1c4f
  406569:	ds int3 
  40656b:	repnz fidivr DWORD PTR es:[eax]
  40656f:	je     0x40658b
  406571:	bound  esp,QWORD PTR [ecx-0x3c7c7331]
  406577:	jl     0x40655b
  406579:	jmp    0xf852e88
  40657e:	add    edi,DWORD PTR [edi]
  406580:	add    al,BYTE PTR [esi-0x45]
  406583:	and    BYTE PTR ds:0xca35a9a3,0xcc
  40658a:	add    BYTE PTR [edx-0x72fed8a3],cl
  406590:	inc    edx
  406591:	in     al,dx
  406592:	leave  
  406593:	or     eax,0xb7af0987
  406598:	sub    eax,0x795741a4
  40659d:	inc    ecx
  40659e:	and    al,0x87
  4065a0:	fcom   DWORD PTR [ecx+0x72]
  4065a3:	div    DWORD PTR [esp+esi*4]
  4065a6:	pop    ss
  4065a7:	in     eax,dx
  4065a8:	jecxz  0x4065c3
  4065aa:	stc    
  4065ab:	jge    0x4065ad
	...
  4065bd:	add    BYTE PTR [eax],al
  4065bf:	add    BYTE PTR [edi],ch
  4065c1:	cld    
  4065c2:	fwait
  4065c3:	or     BYTE PTR [edi-0x3c],dh
  4065c6:	and    al,0x50
  4065c8:	mov    edx,0x4172402c
  4065cd:	mov    WORD PTR [esi-0x348b5226],gs
  4065d3:	add    al,0xa6
  4065d5:	outs   dx,BYTE PTR ds:[esi]
  4065d6:	cmp    dh,BYTE PTR [edx+ecx*2-0x6e51a076]
  4065dd:	es mov cl,0xfe
  4065e0:	cmp    al,0xc2
  4065e2:	ror    DWORD PTR [ebx+0x136cfa68],cl
  4065e8:	in     al,0x1b
  4065ea:	or     BYTE PTR [ecx+0x59e6b250],dh
  4065f0:	fcom   QWORD PTR [ebx-0x7d]
  4065f3:	add    ebp,esi
  4065f5:	inc    edx
  4065f6:	aad    0x79
  4065f8:	xchg   ecx,eax
  4065f9:	mov    eax,ds:0xb0a6bb0
  4065fe:	pop    esi
  4065ff:	add    ecx,DWORD PTR [esi-0x2871c517]
  406605:	rol    BYTE PTR [ecx-0x18cc6d32],cl
  40660b:	hlt    
  40660c:	fistp  WORD PTR [ecx+0x7b885409]
  406612:	ins    BYTE PTR es:[edi],dx
  406613:	push   esp
  406614:	push   ds
  406615:	mov    ecx,0x5bbde4a5
  40661a:	rol    BYTE PTR [eax],0x14
  40661d:	(bad)
  406621:	sub    al,0x4f
  406623:	dec    edx
	...
  406638:	jmp    0x8233dd36
  40663d:	inc    ebx
  40663e:	adc    BYTE PTR [esi+0x78bef1e3],dl
  406644:	pop    ebx
  406645:	dec    esi
  406646:	fcomp  DWORD PTR ds:0x4bc82c33
  40664c:	dec    ebx
  40664d:	xchg   ebp,eax
  40664e:	lods   al,BYTE PTR ds:[esi]
  40664f:	cs pop ecx
  406651:	and    al,0x0
  406653:	rcl    BYTE PTR [ecx],0x97
  406656:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  406658:	and    al,0x4b
  40665a:	pop    edi
  40665b:	sbb    al,0xfc
  40665d:	icebp  
  40665e:	aaa    
  40665f:	jns    0x4065ff
  406661:	inc    esp
  406662:	xchg   edi,eax
  406663:	xchg   edi,eax
  406664:	data16 cli 
  406666:	out    dx,eax
  406667:	repnz (bad) 
  406669:	mov    al,0x19
  40666b:	add    eax,0x607f0e56
  406670:	fs mov bh,0xd1
  406673:	mov    cs,esp
  406675:	add    eax,0xd079ebb7
  40667a:	mov    ss,WORD PTR [edx+0x11]
  40667d:	imul   ebp,eax,0x37
  406680:	xor    ebx,ebp
  406682:	inc    esi
  406683:	fxch   st(3)
  406685:	arpl   WORD PTR [eax],sp
  406687:	mov    esp,0xea300503
  40668c:	pop    ebx
  40668d:	mov    edx,0xb698f54
  406692:	clc    
  406693:	popa   
  406694:	add    DWORD PTR [edx+0x6274049c],esi
  40669a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40669b:	mov    ebp,0x0
	...
  4066b0:	int3   
  4066b1:	xlat   BYTE PTR ds:[ebx]
  4066b2:	mov    edi,0x6f6aaed8
  4066b7:	ss push esi
  4066b9:	iret   
  4066ba:	pop    es
  4066bb:	push   ebx
  4066bc:	bound  ebp,QWORD PTR [ebp+0x1dd84df0]
  4066c2:	dec    esp
  4066c3:	sub    DWORD PTR ds:0x5385f8e4,esi
  4066c9:	mov    bl,0x45
  4066cb:	loope  0x40667b
  4066cd:	(bad)  
  4066ce:	adc    ecx,ebx
  4066d0:	das    
  4066d1:	xchg   edi,eax
  4066d2:	scas   al,BYTE PTR es:[edi]
  4066d3:	mov    esi,0x1119f8ca
  4066d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066d9:	xor    BYTE PTR [edi+0x43e84176],ah
  4066df:	data16 ja 0x406672
  4066e2:	clc    
  4066e3:	add    BYTE PTR [edx+0x5e],dl
  4066e6:	dec    ebp
  4066e7:	scas   al,BYTE PTR es:[edi]
  4066e8:	in     al,dx
  4066e9:	out    0xf0,al
  4066eb:	enter  0x43c9,0xa6
  4066ef:	icebp  
  4066f0:	and    bl,0x19
  4066f3:	xchg   esi,eax
  4066f4:	sbb    eax,0xfb39aefd
  4066f9:	jge    0x40670e
  4066fb:	pop    esi
  4066fc:	xchg   esi,eax
  4066fd:	inc    edx
  4066fe:	iret   
  4066ff:	in     eax,dx
  406700:	fs ret 0x8972
  406704:	inc    ecx
  406705:	cld    
  406706:	lds    esp,FWORD PTR ds:0x417a5cdf
  40670c:	mov    edx,0x33792aa9
  406711:	jno    0x4066a4
  406713:	push   ds
	...
  406728:	dec    esi
  406729:	fbld   TBYTE PTR [edx]
  40672b:	mov    cl,0xa8
  40672d:	xchg   DWORD PTR [edi+0x7c3fc5d6],ebx
  406733:	(bad)  
  406734:	mov    esi,DWORD PTR [edi-0x46195f3f]
  40673a:	jb     0x40674a
  40673c:	add    BYTE PTR [ecx-0x37],dl
  40673f:	push   0x519fac5d
  406744:	sbb    al,0x3c
  406746:	and    dh,BYTE PTR [esi]
  406748:	cmp    ecx,ebx
  40674a:	jge    0x4066e2
  40674c:	jmp    0x406739
  40674e:	int    0x29
  406750:	inc    esp
  406751:	or     esi,ecx
  406753:	iret   
  406754:	cli    
  406755:	aas    
  406756:	outs   dx,BYTE PTR ds:[esi]
  406757:	ins    BYTE PTR es:[edi],dx
  406758:	adc    al,0xa5
  40675a:	je     0x406735
  40675c:	mov    dl,0xc7
  40675e:	mov    bl,0x64
  406760:	dec    esp
  406761:	sub    al,BYTE PTR [ecx+0x32]
  406764:	dec    esp
  406765:	xchg   ebx,eax
  406766:	(bad)  [ebp+0x3aeb6eab]
  40676c:	add    al,0x1c
  40676e:	mov    ds:0x4af8e387,eax
  406773:	shr    DWORD PTR fs:[edx],cl
  406776:	mov    bl,0xd7
  406778:	out    dx,eax
  406779:	lds    esi,FWORD PTR [eax+0x39a48b6c]
  40677f:	shl    DWORD PTR [edi],1
  406781:	inc    ecx
  406782:	les    eax,FWORD PTR [ebp+0x3a13f864]
  406788:	inc    ebx
  406789:	sbb    eax,0x8f2e
	...
  40679e:	add    BYTE PTR [eax],al
  4067a0:	pushf  
  4067a1:	outs   dx,BYTE PTR ds:[esi]
  4067a2:	sahf   
  4067a3:	xor    bh,bl
  4067a5:	xchg   ecx,eax
  4067a6:	ds sti 
  4067a8:	and    ah,cl
  4067aa:	jge    0x4067f2
  4067ac:	jl     0x4067b2
  4067ae:	test   cl,dh
  4067b0:	fisub  DWORD PTR [ebp+0x24]
  4067b3:	dec    esi
  4067b4:	mov    ah,0x8a
  4067b6:	xchg   ecx,eax
  4067b7:	sbb    BYTE PTR [ecx+esi*1-0x312c5af7],dh
  4067be:	fimul  DWORD PTR [edi]
  4067c0:	ins    BYTE PTR es:[edi],dx
  4067c1:	mov    ebp,0x580bac33
  4067c6:	sti    
  4067c7:	dec    esi
  4067c8:	or     ecx,DWORD PTR [edx+0x6767f283]
  4067ce:	add    DWORD PTR [ebp-0x3d],0x9ff9e904
  4067d5:	fild   WORD PTR [eax]
  4067d7:	push   ebp
  4067d8:	push   cs
  4067d9:	mov    al,ds:0x42730581
  4067de:	in     al,0xdf
  4067e0:	add    eax,ebp
  4067e2:	or     DWORD PTR [edi+0x6d],ebp
  4067e5:	or     ch,BYTE PTR [edi+0x6f]
  4067e8:	inc    ebx
  4067e9:	(bad)  
  4067ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067eb:	iret   
  4067ec:	xchg   edi,eax
  4067ed:	sub    al,bl
  4067ef:	aad    0x38
  4067f1:	jg     0x406820
  4067f3:	push   ebp
  4067f4:	mov    WORD PTR [edx+0x48],fs
  4067f7:	loopne 0x406816
  4067f9:	pop    edx
  4067fa:	icebp  
  4067fb:	cmp    cl,bl
  4067fd:	mov    bh,0x94
  4067ff:	mov    bl,BYTE PTR [edx+0x12]
  406802:	jp     0x406806
	...
  406818:	iret   
  406819:	out    dx,eax
  40681a:	push   ds
  40681b:	stos   BYTE PTR es:[edi],al
  40681c:	xchg   edi,eax
  40681d:	fisttp WORD PTR [eax+0x52]
  406820:	or     eax,DWORD PTR [edx]
  406822:	sub    al,0x50
  406824:	mov    WORD PTR [edi+0x4a0098c2],fs
  40682a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40682b:	and    eax,0xb51e7311
  406830:	pop    ebp
  406831:	(bad)  
  406832:	jnp    0x4067c3
  406834:	push   cs
  406835:	cmp    edx,DWORD PTR [ebp-0x10289dc1]
  40683b:	jmp    0xd761:0xe400d561
  406842:	add    dh,ch
  406844:	popa   
  406845:	rol    DWORD PTR [eax],1
  406847:	lock popa 
  406849:	rol    DWORD PTR [eax],cl
  40684b:	loop   0x4068ae
  40684d:	into   
  40684e:	add    dh,bl
  406850:	popa   
  406851:	retf   0xfa00
  406854:	popa   
  406855:	enter  0x200,0x5e
  406859:	rol    BYTE PTR [eax],0xa
  40685c:	data16 hlt 
  40685e:	add    BYTE PTR [edx],bl
  406860:	pop    esi
  406861:	in     al,0x0
  406863:	add    BYTE PTR [eax],bh
  406865:	aad    0x51
  406867:	add    BYTE PTR [eax],bl
  406869:	aad    0x71
  40686b:	add    al,cl
  40686d:	aad    0xa1
  40686f:	add    BYTE PTR [eax],cl
  406871:	aad    0xe1
  406873:	add    BYTE PTR [ecx],bh
  406875:	fild   DWORD PTR [eax]
  406877:	add    BYTE PTR [ebx],bh
  406879:	fadd   QWORD PTR [eax]
	...
  40688f:	add    BYTE PTR [ebx],bh
  406891:	fcom   QWORD PTR [eax]
  406893:	add    BYTE PTR [ebx],bh
  406895:	fcom   QWORD PTR [eax]
  406897:	add    BYTE PTR [ebx],cl
  406899:	fcom   QWORD PTR [eax]
  40689b:	add    BYTE PTR [ebx],cl
  40689d:	fcom   QWORD PTR [eax]
  40689f:	add    BYTE PTR [edx],bh
  4068a1:	fmul   QWORD PTR [edi]
  4068a3:	add    BYTE PTR [edx],bh
  4068a5:	fmul   QWORD PTR [edi]
  4068a7:	add    BYTE PTR [ecx],cl
  4068a9:	fcom   QWORD PTR [edx]
  4068ab:	add    BYTE PTR [ecx],cl
  4068ad:	fcom   QWORD PTR [edx]
  4068af:	add    al,bh
  4068b1:	fist   DWORD PTR [ecx]
  4068b3:	add    al,bh
  4068b5:	fist   DWORD PTR [ecx]
  4068b7:	add    BYTE PTR [edi],cl
  4068b9:	fcom   QWORD PTR [eax+eax*1]
  4068bc:	paddusb mm2,QWORD PTR [eax+eax*1]
  4068c0:	mov    esi,0xae0013db
  4068c5:	fist   DWORD PTR [ebx]
  4068c7:	add    bl,cl
  4068c9:	fcmovne st,st(1)
  4068cb:	add    dh,bh
  4068cd:	fild   DWORD PTR [eax]
  4068cf:	add    dl,cl
  4068d1:	fild   DWORD PTR [edx]
  4068d3:	add    al,cl
  4068d5:	fild   DWORD PTR [eax+eax*1]
  4068d8:	mov    esi,0xb20005db
  4068dd:	fisttp DWORD PTR [ebx]
  4068df:	add    BYTE PTR [edx-0x55ffe825],bh
  4068e5:	fld    TBYTE PTR [edi]
  4068e7:	add    BYTE PTR [edx],bh
  4068e9:	aad    0x5f
  4068eb:	add    dl,bh
  4068ed:	fstp   TBYTE PTR [edi+0x3b16200]
  4068f3:	add    DWORD PTR [eax],0x0
	...
  406905:	add    BYTE PTR [eax],al
  406907:	add    BYTE PTR [ebx-0x4f],ah
  40690a:	add    al,0x1
  40690c:	popa   
  40690d:	mov    cl,0xfe
  40690f:	add    BYTE PTR [ecx+esi*4+0xa],bl
  406913:	add    DWORD PTR [esi-0x4f],ebp
  406916:	adc    al,BYTE PTR [ecx]
  406918:	jp     0x4068cb
  40691a:	and    al,BYTE PTR [ecx]
  40691c:	xchg   edx,eax
  40691d:	mov    cl,0xc2
  40691f:	add    dl,al
  406921:	mov    al,0x2
  406923:	add    BYTE PTR [edx-0x60],ah
  406926:	add    dl,BYTE PTR [eax]
  406928:	bound  esp,QWORD PTR [eax-0x7e9deffe]
  40692e:	add    dl,BYTE PTR [ecx]
  406930:	bound  eax,QWORD PTR [edx-0x7c9dedfe]
  406936:	add    dl,BYTE PTR [ebx]
  406938:	bound  eax,QWORD PTR [edx+eax*1+0x29d6214]
  40693f:	adc    eax,0x1602a662
  406944:	bound  ebx,QWORD PTR [edi-0x579de8fe]
  40694a:	add    bl,BYTE PTR [eax]
  40694c:	bound  edi,QWORD PTR [ecx-0x459de6fe]
  406952:	add    bl,BYTE PTR [edx]
  406954:	bound  ecx,QWORD PTR [ebx-0x739de4fe]
  40695a:	add    bl,BYTE PTR [edx+eiz*2]
  40695d:	aad    0x4
  40695f:	sbb    eax,0x40027062
  406964:	bound  edi,QWORD PTR [ecx-0x18]
  406967:	jne    0x4069ac
  406969:	sbb    al,0xeb
  40696b:	arpl   WORD PTR [eax],ax
	...
  40697d:	add    BYTE PTR [eax],al
  40697f:	add    BYTE PTR [edx+0x4371e320],al
  406985:	dec    ebp
  406986:	fbstp  TBYTE PTR [ebx+0x7]
  406989:	and    ah,BYTE PTR [edx]
  40698b:	jo     0x406990
  40698d:	and    esi,ebp
  40698f:	fs push es
  406991:	fld    DWORD PTR [edi]
  406993:	lock hlt 
  406995:	clc    
  406996:	sub    ah,BYTE PTR [eax+esi*8]
  406999:	and    eax,DWORD PTR [esi-0x10]
  40699c:	or     ch,BYTE PTR [eax*2+0x56240424]
  4069a3:	jecxz  0x406996
  4069a5:	das    
  4069a6:	dec    edi
  4069a7:	out    0x8f,al
  4069a9:	shl    edi,cl
  4069ab:	add    esp,DWORD PTR [edx-0x27]
  4069ae:	pop    ss
  4069af:	into   
  4069b0:	mov    eax,ds:0xa1ce47d9
  4069b5:	(bad)  
  4069b7:	add    esp,DWORD PTR [edx-0x27]
  4069ba:	in     eax,dx
  4069bb:	and    edx,0x56
  4069be:	push   0xe7d8e285
  4069c3:	adc    esp,DWORD PTR [ecx+0x57]
  4069c6:	push   0xdc58e07e
  4069cb:	add    BYTE PTR [edi+0x14],bl
  4069ce:	and    eax,0x6d53e6c1
  4069d3:	add    DWORD PTR [edx-0x27],esp
  4069d6:	pop    ss
  4069d7:	xor    al,0xe2
  4069d9:	or     BYTE PTR [eax-0x7c],ch
  4069dc:	(bad)
  4069e1:	loope  0x40697a
  4069e3:	into   
	...
  4069f8:	gs (bad) 
  4069fb:	add    edx,DWORD PTR [ebp+0x25d3f7e9]
  406a01:	push   ecx
  406a02:	call   0xd039cc0a
  406a07:	sbb    edx,0x58
  406a0a:	push   0x87d96204
  406a0f:	jecxz  0x406a26
  406a11:	xor    DWORD PTR [eax-0x112e9a15],eax
  406a17:	sti    
  406a18:	xor    eax,0xdf37729
  406a1d:	rol    DWORD PTR [eax],1
  406a1f:	loope  0x406a82
  406a21:	(bad)  [eax]
  406a23:	jmp    0xf1464381
  406a28:	popa   
  406a29:	fld    DWORD PTR [eax]
  406a2b:	jnp    0x4069fb
  406a2d:	sbb    BYTE PTR [ecx],al
  406a2f:	mov    es,esi
  406a31:	sbb    BYTE PTR [ecx],al
  406a33:	sar    BYTE PTR [esi-0x48cefee8],0x18
  406a3a:	add    DWORD PTR [ebx+0xe],ebx
  406a3d:	sbb    al,BYTE PTR [ecx]
  406a3f:	mov    es,WORD PTR [esi]
  406a41:	sbb    al,BYTE PTR [ecx]
  406a43:	sar    dh,0x19
  406a46:	add    ecx,ebp
  406a48:	sbb    edx,0x0
  406a4b:	or     ecx,DWORD PTR [eax]
  406a4d:	sbb    al,BYTE PTR [ecx]
  406a4f:	call   0xb4144d7
  406a54:	clc    
  406a55:	sbb    DWORD PTR [ecx],eax
  406a57:	jmp    0x4069dc
  406a59:	fiadd  DWORD PTR [eax]
  406a5b:	or     eax,DWORD PTR [eax]
	...
  406a6d:	add    BYTE PTR [eax],al
  406a6f:	add    al,cl
  406a71:	sbb    DWORD PTR [ecx],eax
  406a73:	jmp    0x19b8:0xb00da43
  406a7a:	add    ebp,ebp
  406a7c:	outs   dx,BYTE PTR ds:[esi]
  406a7d:	fld    DWORD PTR [eax]
  406a7f:	add    ch,0x19
  406a82:	add    esp,ebp
  406a84:	dec    esi
  406a85:	fld    DWORD PTR [eax]
  406a87:	jo     0x406a4e
  406a89:	sbb    DWORD PTR [ecx],eax
  406a8b:	out    dx,eax
  406a8c:	inc    ebx
  406a8d:	fld    DWORD PTR [eax]
  406a8f:	retf   
  406a90:	or     ebx,DWORD PTR [edx]
  406a92:	add    esi,ebp
  406a94:	outs   dx,BYTE PTR ds:[esi]
  406a95:	fld    DWORD PTR [eax]
  406a97:	push   eax
  406a98:	add    eax,0x83f1011a
  406a9d:	fld    DWORD PTR [eax]
  406a9f:	mov    ecx,DWORD PTR [ebx]
  406aa1:	sbb    al,BYTE PTR [ecx]
  406aa3:	loopne 0x406a28
  406aa5:	fld    DWORD PTR [eax]
  406aa7:	mov    edi,ebx
  406aa9:	sbb    DWORD PTR [ecx],eax
  406aab:	add    BYTE PTR [ecx+0x20000c5],dh
  406ab1:	je     0x406af4
  406ab3:	add    BYTE PTR [eax-0x26ffff06],al
  406ab9:	jb     0x406afc
  406abb:	add    BYTE PTR [edi-0x1dffff39],cl
  406ac1:	jno    0x406b04
  406ac3:	add    BYTE PTR [esi-0x6],bh
  406ac6:	(bad)  
  406ac7:	call   FWORD PTR [ecx]
  406ac9:	outs   dx,DWORD PTR ds:[esi]
  406aca:	inc    ecx
  406acb:	add    BYTE PTR [ebp-0x6],ch
  406ace:	add    BYTE PTR [eax],al
  406ad0:	test   eax,0x416f
	...
  406ae5:	add    BYTE PTR [eax],al
  406ae7:	add    BYTE PTR [ecx+ebp*8],bh
  406aea:	add    al,BYTE PTR [eax]
  406aec:	cdq    
  406aed:	outs   dx,DWORD PTR ds:[esi]
  406aee:	inc    ecx
  406aef:	add    BYTE PTR [ebx-0x6],cl
  406af2:	(bad)  
  406af3:	jmp    FWORD PTR [ecx+0x6f]
  406af6:	inc    ecx
  406af7:	add    BYTE PTR [edx],bh
  406af9:	cli    
  406afa:	(bad)  
  406afb:	call   FWORD PTR [ecx+0x6f]
  406afe:	inc    ecx
  406aff:	add    BYTE PTR [ecx],cl
  406b01:	cli    
  406b02:	(bad)  
  406b03:	jmp    FWORD PTR [ecx+0x6f]
  406b06:	inc    ecx
  406b07:	add    BYTE PTR [eax],bh
  406b09:	cli    
  406b0a:	(bad)  
  406b0b:	call   FWORD PTR [ecx+0x6f]
  406b0e:	inc    ecx
  406b0f:	add    BYTE PTR [edi],al
  406b11:	cli    
  406b12:	(bad)  
  406b13:	jmp    FWORD PTR [ecx]
  406b15:	jb     0x406b58
  406b17:	add    dh,dh
  406b19:	stc    
  406b1a:	(bad)  
  406b1b:	call   FWORD PTR [ecx]
  406b1d:	jb     0x406b60
  406b1f:	add    BYTE PTR ds:0xa9fffffa,al
  406b25:	jno    0x406b68
  406b27:	add    BYTE PTR [ecx+edi*8+0x7199ffff],dh
  406b2e:	inc    ecx
  406b2f:	add    BYTE PTR [ebx-0x9],ah
  406b32:	(bad)  
  406b33:	(bad)  
  406b34:	jmp    0x6240acaa
  406b39:	test   eax,0x29620013
  406b3e:	test   eax,0x13b86240
  406b43:	add    BYTE PTR [edx+0x39],ah
  406b46:	test   eax,0x13876240
	...
  406b5f:	add    BYTE PTR [edx+0x9],ah
  406b62:	test   eax,0x11d66240
  406b67:	add    BYTE PTR [edx+0x59],ah
  406b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b6b:	inc    eax
  406b6c:	bound  esp,QWORD PTR [ebp+0x29620013]
  406b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b73:	inc    eax
  406b74:	bound  esi,QWORD PTR [ebx+edx*1-0x59c69e00]
  406b7b:	inc    eax
  406b7c:	bound  eax,QWORD PTR [ebx+0xe620120]
  406b82:	stos   DWORD PTR es:[edi],eax
  406b83:	inc    eax
  406b84:	bound  edx,QWORD PTR [eax-0x319dfee0]
  406b8a:	stos   BYTE PTR es:[edi],al
  406b8b:	inc    eax
  406b8c:	bound  edx,QWORD PTR [ecx-0x319dfee0]
  406b92:	stos   BYTE PTR es:[edi],al
  406b93:	inc    eax
  406b94:	bound  ecx,QWORD PTR [esi-0x319dfee0]
  406b9a:	stos   BYTE PTR es:[edi],al
  406b9b:	inc    eax
  406b9c:	bound  ecx,QWORD PTR [edi-0x319dfee0]
  406ba2:	stos   BYTE PTR es:[edi],al
  406ba3:	inc    eax
  406ba4:	(bad)  
  406ba5:	int3   
  406ba6:	adc    DWORD PTR [eax],eax
  406ba8:	bound  ebx,QWORD PTR [ecx-0x5a]
  406bab:	inc    eax
  406bac:	(bad)  
  406bad:	int    0x11
  406baf:	add    BYTE PTR [edx+0x29],ah
  406bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bb3:	inc    eax
  406bb4:	(bad)  
  406bb5:	retf   0x11
  406bb8:	bound  edi,QWORD PTR [ecx]
  406bba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bbb:	inc    eax
  406bbc:	(bad)  
  406bbd:	retf   
  406bbe:	adc    DWORD PTR [eax],eax
  406bc0:	bound  ecx,QWORD PTR [ecx]
  406bc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bc3:	inc    eax
	...
  406bd8:	(bad)  
  406bd9:	fxch   st(7)
  406bdb:	and    DWORD PTR [ebx-0x27],esp
  406bde:	mov    DWORD PTR [ecx+0x21c0d922],ebp
  406be4:	arpl   cx,bx
  406be6:	mov    DWORD PTR [ecx+0x21d1d922],ebp
  406bec:	arpl   cx,bx
  406bee:	mov    DWORD PTR [ecx+0x21c2d922],ebp
  406bf4:	arpl   cx,bx
  406bf6:	mov    DWORD PTR [ecx+0x2613d922],ebp
  406bfc:	arpl   cx,bx
  406bfe:	dec    ecx
  406bff:	sahf   
  406c00:	and    bl,cl
  406c02:	add    al,0x26
  406c04:	arpl   cx,bx
  406c06:	dec    ecx
  406c07:	sahf   
  406c08:	and    bl,cl
  406c0a:	adc    eax,0x49d96326
  406c0f:	sahf   
  406c10:	mov    ds:0x632606d9,al
  406c15:	(bad)  [ecx-0x62]
  406c18:	mov    ds:0x6225d7d9,al
  406c1d:	(bad)  [ecx]
  406c1f:	sahf   
  406c20:	mov    ds:0x6225d8d9,al
  406c25:	(bad)  [ecx]
  406c27:	sahf   
  406c28:	mov    ds:0x6225b9d9,al
  406c2d:	(bad)  [ecx]
  406c2f:	sahf   
  406c30:	mov    ds:0x6225bad9,al
  406c35:	(bad)  [ecx]
  406c37:	sahf   
  406c38:	mov    ds:0x261bd9,al
	...
  406c4d:	add    BYTE PTR [eax],al
  406c4f:	add    BYTE PTR [edx-0x27],ah
  406c52:	leave  
  406c53:	popf   
  406c54:	mov    ds:0x62261cd9,al
  406c59:	fxch   st(1)
  406c5b:	popf   
  406c5c:	mov    ds:0x6214fdd9,al
  406c61:	fldenv [eax-0x60]
  406c64:	and    bl,cl
  406c66:	add    dh,bh
  406c68:	jbe    0x406c43
  406c6a:	add    BYTE PTR [eax+0x2],dl
  406c6d:	sbb    DWORD PTR [ecx],eax
  406c6f:	loope  0x406cc7
  406c71:	fld    DWORD PTR [eax]
  406c73:	add    BYTE PTR [edx],0x19
  406c76:	add    eax,edx
  406c78:	push   esi
  406c79:	fld    DWORD PTR [eax]
  406c7b:	jo     0x406c7f
  406c7d:	sbb    DWORD PTR [ecx],eax
  406c7f:	ret    
  406c80:	jbe    0x406c5b
  406c82:	add    BYTE PTR [eax-0x3e],ah
  406c85:	sbb    BYTE PTR [ecx],al
  406c87:	mov    dl,0x76
  406c89:	fld    DWORD PTR [eax]
  406c8b:	push   eax
  406c8c:	ret    0x118
  406c8f:	and    eax,0x8000d957
  406c94:	aad    0x18
  406c96:	add    DWORD PTR [edi+edx*2],edx
  406c99:	fld    DWORD PTR [eax]
  406c9b:	jo     0x406c62
  406c9d:	sbb    BYTE PTR [ecx],al
  406c9f:	pop    es
  406ca0:	ja     0x406c7b
  406ca2:	add    BYTE PTR [eax-0xb],ah
  406ca5:	sbb    DWORD PTR [ecx],eax
  406ca7:	div    BYTE PTR [esi-0x27]
  406caa:	add    BYTE PTR [eax-0x1b],dl
  406cad:	sbb    DWORD PTR [ecx],eax
  406caf:	sub    DWORD PTR [edx+ebx*8+0xb00],eax
	...
  406cc6:	add    BYTE PTR [eax],al
  406cc8:	aam    0x19
  406cca:	add    DWORD PTR [eax],ebp
  406ccc:	test   dl,bl
  406cce:	add    BYTE PTR [ebx],cl
  406cd0:	les    ebx,FWORD PTR [ecx]
  406cd2:	add    DWORD PTR [ebx],ebp
  406cd4:	inc    esp
  406cd5:	fiadd  DWORD PTR [eax]
  406cd7:	or     esi,esp
  406cd9:	sbb    DWORD PTR [ecx],eax
  406cdb:	sub    al,BYTE PTR [edx+ebx*8+0x0]
  406cdf:	or     esp,esp
  406ce1:	sbb    DWORD PTR [ecx],eax
  406ce3:	lods   eax,DWORD PTR ds:[esi]
  406ce4:	inc    edi
  406ce5:	fiadd  DWORD PTR [eax]
  406ce7:	retf   
  406ce8:	xlat   BYTE PTR ds:[ebx]
  406ce9:	sbb    DWORD PTR [ecx],eax
  406ceb:	lods   al,BYTE PTR ds:[esi]
  406cec:	inc    edi
  406ced:	fiadd  DWORD PTR [eax]
  406cef:	retf   
  406cf0:	(bad)  
  406cf1:	sbb    DWORD PTR [ecx],eax
  406cf3:	add    BYTE PTR ds:0xa9ffffbf,cl
  406cf9:	jbe    0x406d3c
  406cfb:	add    ah,bh
  406cfd:	mov    esi,0x7699ffff
  406d02:	inc    ecx
  406d03:	add    bl,dh
  406d05:	mov    esi,0x76e9ffff
  406d0a:	inc    ecx
  406d0b:	add    BYTE PTR [edx],al
  406d0d:	mov    edi,0x76d9ffff
  406d12:	inc    ecx
  406d13:	add    cl,dl
  406d15:	mov    esi,0x76e9ffff
  406d1a:	inc    ecx
  406d1b:	add    al,al
  406d1d:	mov    esi,0x76d9ffff
  406d22:	inc    ecx
  406d23:	add    BYTE PTR [edi],dh
  406d25:	mov    edi,0x7729ffff
  406d2a:	inc    ecx
	...
  406d3f:	add    BYTE PTR [esi-0x41],al
  406d42:	(bad)  
  406d43:	call   FWORD PTR [ecx]
  406d45:	ja     0x406d88
  406d47:	add    BYTE PTR [ebp-0x56000041],dl
  406d4d:	ja     0x406d90
  406d4f:	add    BYTE PTR [edi+edi*4+0x7799ffff],al
  406d56:	inc    ecx
  406d57:	add    BYTE PTR [ebx-0x41],bh
  406d5a:	(bad)  
  406d5b:	jmp    FWORD PTR [ecx+0x77]
  406d5e:	inc    ecx
  406d5f:	add    BYTE PTR [edx-0x41],ch
  406d62:	(bad)  
  406d63:	call   FWORD PTR [ecx+0x77]
  406d66:	inc    ecx
  406d67:	add    BYTE PTR [ecx-0x41],bh
  406d6a:	(bad)  
  406d6b:	jmp    FWORD PTR [ecx+0x77]
  406d6e:	inc    ecx
  406d6f:	add    BYTE PTR [eax-0x41],ch
  406d72:	(bad)  
  406d73:	call   FWORD PTR [ecx+0x77]
  406d76:	inc    ecx
  406d77:	add    BYTE PTR [edi+0x29ffffbd],bh
  406d7d:	jbe    0x406dc0
  406d7f:	add    BYTE PTR [edx+0x55],ah
  406d82:	and    al,0x1
  406d84:	bound  esp,QWORD PTR [esp+ebx*4+0x24786240]
  406d8b:	add    DWORD PTR [edx-0x5c],esp
  406d8e:	pushf  
  406d8f:	inc    eax
  406d90:	bound  esi,QWORD PTR [edi+0x24]
  406d93:	add    DWORD PTR [edx-0x5c],esp
  406d96:	pushf  
  406d97:	inc    eax
  406d98:	bound  ebx,QWORD PTR [edx+0x64620124]
  406d9e:	pushf  
  406d9f:	inc    eax
  406da0:	bound  ecx,QWORD PTR [ecx+0x24]
  406da3:	add    DWORD PTR [eax],eax
	...
  406db5:	add    BYTE PTR [eax],al
  406db7:	add    BYTE PTR [edx+0x64],ah
  406dba:	pushf  
  406dbb:	inc    eax
  406dbc:	bound  edi,QWORD PTR [esp]
  406dbf:	add    DWORD PTR [edx+0x64],esp
  406dc2:	pushf  
  406dc3:	inc    eax
  406dc4:	bound  ebp,QWORD PTR [ebx+0x24]
  406dc7:	add    DWORD PTR [edx+0x64],esp
  406dca:	pushf  
  406dcb:	inc    eax
  406dcc:	bound  ebx,QWORD PTR [esi]
  406dce:	daa    
  406dcf:	add    DWORD PTR [edx+0x24],esp
  406dd2:	lahf   
  406dd3:	inc    eax
  406dd4:	(bad)  
  406dd5:	int    0x26
  406dd7:	add    DWORD PTR [edx+0x24],esp
  406dda:	lahf   
  406ddb:	inc    eax
  406ddc:	bound  edi,QWORD PTR [esi+0x22620126]
  406de2:	lahf   
  406de3:	inc    eax
  406de4:	(bad)  
  406de5:	out    dx,eax
  406de6:	add    DWORD PTR es:[edx+0x22],esp
  406dea:	lahf   
  406deb:	inc    eax
  406dec:	(bad)  
  406ded:	loopne 0x406e15
  406def:	add    DWORD PTR [edx-0x1e],esp
  406df2:	sahf   
  406df3:	inc    eax
  406df4:	(bad)
  406df9:	loop   0x406d99
  406dfb:	inc    eax
  406dfc:	(bad)
  406e01:	loop   0x406da1
  406e03:	inc    eax
  406e04:	(bad)
  406e09:	loop   0x406da9
  406e0b:	inc    eax
  406e0c:	(bad)  
  406e0d:	fxch   st(3)
  406e0f:	and    eax,0x9dc9d963
  406e14:	mov    ds:0x6325ccd9,al
  406e19:	fxch   st(1)
  406e1b:	popf   
	...
  406e30:	and    bl,cl
  406e32:	int    0x25
  406e34:	arpl   cx,bx
  406e36:	leave  
  406e37:	popf   
  406e38:	and    bl,cl
  406e3a:	into   
  406e3b:	and    eax,0x9dc9d963
  406e40:	and    bl,cl
  406e42:	(bad)  
  406e43:	and    eax,0x9d89d963
  406e48:	and    bl,cl
  406e4a:	and    BYTE PTR ds:0x9d89d963,0x22
  406e51:	fst    DWORD PTR [ecx-0x76269cdb]
  406e57:	popf   
  406e58:	and    bl,cl
  406e5a:	and    BYTE PTR ds:0x9d89d963,0x22
  406e61:	fst    DWORD PTR [ebx+0x22]
  406e64:	arpl   cx,bx
  406e66:	dec    ecx
  406e67:	call   0xd963:0x2244d922
  406e6e:	dec    ecx
  406e6f:	call   0xd963:0x2255d9a2
  406e76:	dec    ecx
  406e77:	call   0xd963:0x2246d9a2
  406e7e:	dec    ecx
  406e7f:	call   0xd863:0x3317d9a2
  406e86:	or     DWORD PTR [edx+0x3318d9a2],ebx
  406e8c:	arpl   ax,bx
  406e8e:	or     DWORD PTR [edx+0x32f9d9a2],ebx
	...
  406ea8:	arpl   ax,bx
  406eaa:	or     DWORD PTR [edx-0x5ff265e],ebx
  406eb0:	push   eax
  406eb1:	fdivr  st,st(7)
  406eb3:	or     bl,al
  406eb5:	sbb    BYTE PTR [ecx],al
  406eb7:	fld    QWORD PTR [ebx-0x28]
  406eba:	add    bl,cl
  406ebc:	retf   
  406ebd:	sbb    BYTE PTR [ecx],al
  406ebf:	fadd   QWORD PTR [ebx-0x28]
  406ec2:	add    bl,cl
  406ec4:	sti    
  406ec5:	sbb    BYTE PTR [ecx],al
  406ec7:	mov    edi,0xcb00d883
  406ecc:	jmp    0x406ee6
  406ece:	add    DWORD PTR [esi-0x34ff267d],edi
  406ed4:	fistp  DWORD PTR [eax]
  406ed6:	add    DWORD PTR [ecx-0x7fff26b2],esp
  406edc:	add    bl,BYTE PTR [ecx]
  406ede:	add    DWORD PTR [eax+0x7000d94e],edx
  406ee4:	ret    0x118
  406ee7:	sub    DWORD PTR [esi-0x27],0x0
  406eeb:	pusha  
  406eec:	ret    0x118
  406eef:	jb     0x406f5f
  406ef1:	fld    DWORD PTR [eax]
  406ef3:	push   eax
  406ef4:	ret    0x118
  406ef7:	gs dec edi
  406ef9:	fld    DWORD PTR [eax]
  406efb:	or     ch,0x18
  406efe:	add    DWORD PTR [edi+ecx*2-0x27],edx
  406f02:	add    BYTE PTR [eax-0x3],dh
  406f05:	sbb    DWORD PTR [ecx],eax
  406f07:	inc    edi
  406f08:	sbb    dl,0x0
  406f0b:	dec    ebx
	...
  406f20:	call   0x8076703e
  406f25:	fiadd  DWORD PTR [eax]
  406f27:	dec    ebx
  406f28:	fcomp  DWORD PTR [ecx]
  406f2a:	add    DWORD PTR [ecx+0x7a],ebp
  406f2d:	jmp    0x1a087a32
  406f32:	add    DWORD PTR [eax+0x6a],ebp
  406f35:	jmp    0x1a387a3a
  406f3a:	add    DWORD PTR [eax],eax
  406f3c:	mov    ecx,edx
  406f3e:	adc    BYTE PTR [eax],al
  406f40:	pop    ecx
  406f41:	outs   dx,DWORD PTR ds:[esi]
  406f42:	inc    ecx
  406f43:	add    BYTE PTR [eax-0x2f],bh
  406f46:	adc    BYTE PTR [eax],al
  406f48:	imul   ebp,DWORD PTR [edi+0x41],0x10d18700
  406f4f:	add    BYTE PTR [ecx],bl
  406f51:	jae    0x406f94
  406f53:	add    BYTE PTR [esi-0x2f],dh
  406f56:	adc    BYTE PTR [eax],al
  406f58:	test   eax,0x45004172
  406f5d:	rcl    DWORD PTR [eax],1
  406f5f:	add    BYTE PTR [ecx+0x34004172],bl
  406f65:	rcl    DWORD PTR [eax],1
  406f67:	add    BYTE PTR [ecx+0x33004172],ch
  406f6d:	rcl    DWORD PTR [eax],1
  406f6f:	add    cl,bl
  406f71:	jb     0x406fb4
  406f73:	add    BYTE PTR [edx-0x2f],al
  406f76:	adc    BYTE PTR [eax],al
  406f78:	jmp    0x1140b0ef
  406f7d:	rcl    DWORD PTR [eax],1
  406f7f:	add    cl,bl
  406f81:	jb     0x406fc4
	...
  406f97:	add    BYTE PTR [eax],al
  406f99:	rcl    DWORD PTR [eax],1
  406f9b:	add    cl,ch
  406f9d:	jb     0x406fe0
  406f9f:	add    bh,ch
  406fa1:	retf   
  406fa2:	adc    BYTE PTR [eax],al
  406fa4:	sbb    DWORD PTR [edi+0x41],ebp
  406fa7:	add    dh,bh
  406fa9:	retf   
  406faa:	adc    BYTE PTR [eax],al
  406fac:	test   eax,0xcd00416f
  406fb1:	int3   
  406fb2:	adc    BYTE PTR [eax],al
  406fb4:	cdq    
  406fb5:	outs   dx,DWORD PTR ds:[esi]
  406fb6:	inc    ecx
  406fb7:	add    BYTE PTR [esp+ecx*8+0x6fa90010],bh
  406fbe:	inc    ecx
  406fbf:	add    BYTE PTR [ebx+0x59ffffb7],bh
  406fc5:	outs   dx,DWORD PTR ds:[esi]
  406fc6:	inc    ecx
  406fc7:	add    BYTE PTR [edx+0x11],ah
  406fca:	and    eax,DWORD PTR [ecx]
  406fcc:	(bad)  
  406fcd:	loopne 0x406f69
  406fcf:	inc    eax
  406fd0:	bound  esi,QWORD PTR [eax]
  406fd2:	and    eax,DWORD PTR [ecx]
  406fd4:	(bad)  
  406fd5:	loopne 0x406f71
  406fd7:	inc    eax
  406fd8:	bound  ebp,QWORD PTR [edi]
  406fda:	and    eax,DWORD PTR [ecx]
  406fdc:	(bad)  
  406fdd:	loopne 0x406f79
  406fdf:	inc    eax
  406fe0:	bound  edx,QWORD PTR [esi]
  406fe2:	and    eax,DWORD PTR [ecx]
  406fe4:	bound  esp,QWORD PTR [eax+0x15624098]
  406fea:	and    eax,DWORD PTR [ecx]
  406fec:	bound  esp,QWORD PTR [eax+0x34624098]
  406ff2:	and    eax,DWORD PTR [ecx]
  406ff4:	bound  esp,QWORD PTR [eax+0x33624098]
  406ffa:	and    eax,DWORD PTR [ecx]
	...
  407010:	bound  esp,QWORD PTR [eax+0x5a624098]
  407016:	and    eax,DWORD PTR [ecx]
  407018:	bound  esp,QWORD PTR [eax-0x68]
  40701b:	inc    eax
  40701c:	bound  ecx,QWORD PTR [ecx]
  40701e:	and    eax,DWORD PTR [ecx]
  407020:	bound  esp,QWORD PTR [eax-0x68]
  407023:	inc    eax
  407024:	(bad)  
  407025:	clc    
  407026:	and    al,BYTE PTR [ecx]
  407028:	bound  esp,QWORD PTR [eax-0x68]
  40702b:	inc    eax
  40702c:	bound  esp,QWORD PTR [edi]
  40702e:	and    eax,DWORD PTR [ecx]
  407030:	bound  esp,QWORD PTR [eax-0x68]
  407033:	inc    eax
  407034:	bound  ebx,QWORD PTR [esi+0x20]
  407037:	add    DWORD PTR [edx+0x20],esp
  40703a:	fwait
  40703b:	inc    eax
  40703c:	bound  ecx,QWORD PTR ds:0x1e620120
  407042:	fwait
  407043:	inc    eax
  407044:	(bad)  
  407045:	cli    
  407046:	pop    ds
  407047:	add    DWORD PTR [edx+0x1e],esp
  40704a:	fwait
  40704b:	inc    eax
  40704c:	bound  ebp,QWORD PTR [ebx]
  40704e:	and    BYTE PTR [ecx],al
  407050:	bound  ebx,QWORD PTR [esi]
  407052:	fwait
  407053:	inc    eax
  407054:	(bad)  
  407055:	fld    DWORD PTR [edi+0x21]
  407058:	(bad)  
  407059:	(bad)  [ecx]
  40705b:	call   0xd962:0x2148d9a2
  407062:	or     DWORD PTR [edx+0x2149d9a2],ebx
  407068:	(bad)  
  407069:	(bad)  [ecx]
  40706b:	call   0xd963:0x214ad9a2
  407072:	or     DWORD PTR [edx+0x0],ebx
	...
  407088:	mov    ds:0x63308bd9,al
  40708d:	fmul   st,st(1)
  40708f:	cdq    
  407090:	mov    ds:0x63218cd9,al
  407095:	fxch   st(1)
  407097:	cdq    
  407098:	and    bl,cl
  40709a:	lea    edx,[edx]
  40709c:	(bad)  
  40709d:	fldenv [eax-0x61]
  4070a0:	and    bl,cl
  4070a2:	mov    ss,WORD PTR [edx]
  4070a4:	(bad)  
  4070a5:	fst    DWORD PTR [eax-0x61]
  4070a8:	and    bl,cl
  4070aa:	dec    edi
  4070ab:	and    DWORD PTR [edx-0x27],esp
  4070ae:	mov    DWORD PTR [ecx+0x2140d922],ebx
  4070b4:	(bad)  
  4070b5:	(bad)  [ecx+0x51d92299]
  4070bb:	and    DWORD PTR [edx-0x27],esp
  4070be:	mov    DWORD PTR [ecx+0x2142d922],ebx
  4070c4:	arpl   cx,bx
  4070c6:	mov    DWORD PTR [ecx+0x3793d922],ebx
  4070cc:	arpl   ax,bx
  4070ce:	dec    ecx
  4070cf:	sahf   
  4070d0:	and    bl,cl
  4070d2:	test   BYTE PTR [esi],ah
  4070d4:	arpl   cx,bx
  4070d6:	dec    ecx
  4070d7:	sahf   
  4070d8:	mov    ds:0x632695d9,al
  4070dd:	(bad)  [ecx-0x62]
  4070e0:	mov    ds:0x848600d9,al
  4070e5:	fadd   DWORD PTR [eax]
  4070e7:	dec    ebx
  4070e8:	aam    0x18
  4070ea:	add    DWORD PTR [ecx+0x0],ebx
	...
  4070fd:	add    BYTE PTR [eax],al
  4070ff:	add    BYTE PTR [eax+ebx*8+0x18c40b00],al
  407106:	add    DWORD PTR [eax+0x44],ebx
  407109:	fadd   DWORD PTR [eax]
  40710b:	or     esi,esp
  40710d:	sbb    BYTE PTR [ecx],al
  40710f:	cmp    eax,DWORD PTR [eax+ebx*8+0x0]
  407113:	or     esp,esp
  407115:	sbb    BYTE PTR [ecx],al
  407117:	cmp    al,BYTE PTR [eax+ebx*8+0x0]
  40711b:	or     edx,esp
  40711d:	sbb    BYTE PTR [ecx],al
  40711f:	popf   
  407120:	inc    esp
  407121:	fadd   DWORD PTR [eax]
  407123:	retf   
  407124:	(bad)  
  407125:	sbb    BYTE PTR [ecx],al
  407127:	pushf  
  407128:	test   al,bl
  40712a:	add    bl,cl
  40712c:	neg    DWORD PTR [eax]
  40712e:	add    DWORD PTR [edi-0x7c],edi
  407131:	fadd   DWORD PTR [eax]
  407133:	retf   
  407134:	out    0x18,eax
  407136:	add    DWORD PTR [esi-0x7c],edi
  407139:	fadd   DWORD PTR [eax]
  40713b:	retf   
  40713c:	xlat   BYTE PTR ds:[ebx]
  40713d:	sbb    BYTE PTR [ecx],al
  40713f:	popa   
  407140:	push   edi
  407141:	fld    DWORD PTR [eax]
  407143:	or     dl,0x18
  407146:	add    DWORD PTR [eax+0x77],edx
  407149:	fld    DWORD PTR [eax]
  40714b:	jo     0x407147
  40714d:	sbb    BYTE PTR [ecx],al
  40714f:	inc    ebx
  407150:	push   ebp
  407151:	fdivr  st,st(7)
  407153:	mov    ah,bh
  407155:	sbb    BYTE PTR [ecx],al
  407157:	xor    al,BYTE PTR [eax+ebx*8+0x0]
  40715b:	mov    edx,edi
  40715d:	sbb    BYTE PTR [ecx],al
  40715f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407160:	inc    edi
  407161:	fadd   DWORD PTR [eax]
  407163:	dec    ebx
	...
  407178:	les    ebx,FWORD PTR [eax]
  40717a:	add    DWORD PTR [edi+eax*4-0xbb4ff26],edx
  407181:	sbb    DWORD PTR [ecx],eax
  407183:	add    ch,ah
  407185:	mov    dh,0xff
  407187:	call   FWORD PTR [ecx-0x4bffbe91]
  40718d:	mov    dh,0xff
  40718f:	jmp    FWORD PTR [ecx-0x4ffbe91]
  407195:	mov    dh,0xff
  407197:	call   FWORD PTR [ecx+0x6f]
  40719a:	inc    ecx
  40719b:	add    dl,cl
  40719d:	mov    dh,0xff
  40719f:	jmp    FWORD PTR [ecx+0x6f]
  4071a2:	inc    ecx
  4071a3:	add    BYTE PTR [ecx+0x59ffffb6],bh
  4071a9:	outs   dx,DWORD PTR ds:[esi]
  4071aa:	inc    ecx
  4071ab:	add    al,cl
  4071ad:	mov    dh,0xff
  4071af:	jmp    FWORD PTR [ecx+0x6f]
  4071b2:	inc    ecx
  4071b3:	add    BYTE PTR [edi],bh
  4071b5:	(bad)  
  4071b6:	inc    DWORD PTR [eax]
  4071b8:	sbb    DWORD PTR [edi+0x41],ebp
  4071bb:	add    BYTE PTR [esi-0x56ff0039],cl
  4071c1:	outs   dx,BYTE PTR ds:[esi]
  4071c2:	inc    ecx
  4071c3:	add    BYTE PTR [ebp-0x39],bh
  4071c6:	inc    DWORD PTR [eax]
  4071c8:	cdq    
  4071c9:	outs   dx,BYTE PTR ds:[esi]
  4071ca:	inc    ecx
  4071cb:	add    BYTE PTR [esi+esi*4+0x6ea9ffff],cl
  4071d2:	inc    ecx
  4071d3:	add    BYTE PTR [ebx-0x4a],dh
  4071d6:	add    BYTE PTR [eax],al
  4071d8:	fldcw  WORD PTR [esi+0x41]
	...
  4071ef:	add    BYTE PTR [edx-0x4a],al
  4071f2:	add    BYTE PTR [eax],al
  4071f4:	jmp    0x5140b367
  4071f9:	mov    dh,0x0
  4071fb:	add    cl,bl
  4071fd:	outs   dx,BYTE PTR ds:[esi]
  4071fe:	inc    ecx
  4071ff:	add    BYTE PTR [eax-0x4a],al
  407202:	add    BYTE PTR [eax],al
  407204:	jmp    0xb740b377
  407209:	mov    bh,0x0
  40720b:	add    BYTE PTR [ecx],bl
  40720d:	outs   dx,DWORD PTR ds:[esi]
  40720e:	inc    ecx
  40720f:	add    BYTE PTR [edx+0x35],ah
  407212:	daa    
  407213:	add    BYTE PTR [edx+0x24],ah
  407216:	lahf   
  407217:	inc    eax
  407218:	bound  ecx,QWORD PTR [eax+0x27]
  40721b:	add    BYTE PTR [edx+0x24],ah
  40721e:	lahf   
  40721f:	inc    eax
  407220:	bound  esi,QWORD PTR [edi]
  407222:	daa    
  407223:	add    BYTE PTR [edx+0x24],ah
  407226:	lahf   
  407227:	inc    eax
  407228:	bound  edx,QWORD PTR [edx+0x12]
  40722b:	add    BYTE PTR [edx+0x59],ah
  40722e:	cdq    
  40722f:	inc    eax
  407230:	bound  edx,QWORD PTR [ecx+0x27]
  407233:	add    DWORD PTR [edx-0x1c],esp
  407236:	sahf   
  407237:	inc    eax
  407238:	bound  esi,QWORD PTR [edi+eiz*1+0x1]
  40723c:	(bad)  
  40723d:	in     al,0x9e
  40723f:	inc    eax
  407240:	bound  esi,QWORD PTR [ebx+0x27]
  407243:	add    DWORD PTR [edx-0x1c],esp
  407246:	sahf   
  407247:	inc    eax
  407248:	(bad)  
  407249:	into   
  40724a:	add    DWORD PTR es:[edx-0x5c],esp
  40724e:	pushf  
  40724f:	inc    eax
  407250:	(bad)  
  407251:	int    0x26
  407253:	add    DWORD PTR [eax],eax
	...
  407265:	add    BYTE PTR [eax],al
  407267:	add    BYTE PTR [edx-0x5c],ah
  40726a:	pushf  
  40726b:	inc    eax
  40726c:	(bad)  
  40726d:	lock add DWORD PTR es:[edx-0x5c],esp
  407272:	pushf  
  407273:	inc    eax
  407274:	(bad)  
  407275:	out    dx,eax
  407276:	add    DWORD PTR es:[edx-0x5c],esp
  40727a:	pushf  
  40727b:	inc    eax
  40727c:	bound  ebx,QWORD PTR [edx]
  40727e:	daa    
  40727f:	add    DWORD PTR [edx+0x64],esp
  407282:	pushf  
  407283:	inc    eax
  407284:	(bad)  
  407285:	leave  
  407286:	add    DWORD PTR es:[edx+0x64],esp
  40728a:	pushf  
  40728b:	inc    eax
  40728c:	bound  edi,QWORD PTR [esi+eiz*1-0x639b9dff]
  407293:	inc    eax
  407294:	(bad)  
  407295:	jmp    0x4072bd
  407297:	add    DWORD PTR [edx+0x64],esp
  40729a:	pushf  
  40729b:	inc    eax
  40729c:	(bad)  
  40729d:	fld    st(3)
  40729f:	and    eax,0x9e49d963
  4072a4:	mov    ds:0x6325b4d9,al
  4072a9:	(bad)  [ecx-0x62]
  4072ac:	mov    ds:0x6325a5d9,al
  4072b1:	(bad)  [ecx-0x62]
  4072b4:	mov    ds:0x632596d9,al
  4072b9:	(bad)  [ecx-0x62]
  4072bc:	mov    ds:0x632587d9,al
  4072c1:	(bad)  [ecx]
  4072c3:	sahf   
  4072c4:	mov    ds:0x632588d9,al
  4072c9:	(bad)  [ecx]
  4072cb:	sahf   
	...
  4072e0:	mov    ds:0x632589d9,al
  4072e5:	(bad)  [ecx]
  4072e7:	sahf   
  4072e8:	mov    ds:0x63258ad9,al
  4072ed:	(bad)  [ecx]
  4072ef:	sahf   
  4072f0:	mov    ds:0x63254bd9,al
  4072f5:	fxch   st(1)
  4072f7:	popf   
  4072f8:	and    bl,cl
  4072fa:	dec    esp
  4072fb:	and    eax,0x9dc9d963
  407300:	and    bl,cl
  407302:	dec    ebp
  407303:	and    eax,0x9dc9d963
  407308:	and    bl,cl
  40730a:	dec    esi
  40730b:	and    eax,0x9dc9d963
  407310:	and    bl,cl
  407312:	(bad)  
  407314:	arpl   cx,bx
  407316:	mov    DWORD PTR [ebp+0x2500d922],ebx
  40731c:	arpl   cx,bx
  40731e:	mov    DWORD PTR [ebp+0x2511d922],ebx
  407324:	arpl   cx,bx
  407326:	mov    DWORD PTR [ebp+0x200d922],ebx
  40732c:	aas    
  40732d:	fadd   DWORD PTR [eax]
  40732f:	mov    ecx,edi
  407331:	sbb    DWORD PTR [ecx],eax
  407333:	aad    0x40
  407335:	fadd   DWORD PTR [eax]
  407337:	dec    ebx
  407338:	clc    
  407339:	sbb    BYTE PTR [ecx],al
  40733b:	les    eax,FWORD PTR [eax-0x17b4ff28]
  407341:	sbb    BYTE PTR [ecx],al
  407343:	xlat   BYTE PTR ds:[ebx]
	...
  407358:	sbb    al,0x0
  40735b:	dec    ebx
  40735c:	fcomp  DWORD PTR [eax]
  40735e:	add    esi,eax
  407360:	sbb    al,0x0
  407363:	dec    ebx
  407364:	enter  0x118,0x99
  407368:	dec    edi
  407369:	fld    DWORD PTR [eax]
  40736b:	cmp    dl,0x18
  40736e:	add    DWORD PTR [eax+0xb00d840],ebx
  407374:	call   0x40bb7491
  407379:	fadd   DWORD PTR [eax]
  40737b:	or     ebx,eax
  40737d:	sbb    BYTE PTR [ecx],al
  40737f:	jp     0x4073c1
  407381:	fadd   DWORD PTR [eax]
  407383:	or     ecx,eax
  407385:	sbb    BYTE PTR [ecx],al
  407387:	pop    ebp
  407388:	inc    eax
  407389:	fadd   DWORD PTR [eax]
  40738b:	retf   
  40738c:	sti    
  40738d:	sbb    BYTE PTR [ecx],al
  40738f:	pop    esp
  407390:	sbb    al,0x0
  407393:	retf   
  407394:	jmp    0x4073ae
  407396:	add    DWORD PTR [edi],edi
  407398:	sbb    al,0x0
  40739b:	retf   
  40739c:	fistp  DWORD PTR [eax]
  40739e:	add    DWORD PTR [esi],edi
  4073a0:	sbb    al,0x0
  4073a3:	retf   
  4073a4:	retf   
  4073a5:	sbb    BYTE PTR [ecx],al
  4073a7:	and    DWORD PTR [eax-0x474ff28],eax
  4073ad:	sbb    BYTE PTR [ecx],al
  4073af:	adc    BYTE PTR [eax-0x28],al
  4073b2:	add    BYTE PTR [ebx+0x118eb],cl
  4073b8:	popa   
  4073b9:	mov    ebx,0xffff
	...
  4073ce:	add    BYTE PTR [eax],al
  4073d0:	jmp    0x7040b544
  4073d5:	mov    bh,0xff
  4073d7:	(bad)  
  4073d8:	fldcw  WORD PTR [edi+0x41]
  4073db:	add    BYTE PTR [edi-0x49],bh
  4073de:	(bad)  
  4073df:	jmp    FWORD PTR [ecx+0x2e00416f]
  4073e5:	mov    ebx,0x6f99ffff
  4073ea:	inc    ecx
  4073eb:	add    BYTE PTR ds:0xa9ffffbb,bl
  4073f1:	outs   dx,DWORD PTR ds:[esi]
  4073f2:	inc    ecx
  4073f3:	add    ah,ch
  4073f5:	in     eax,0x0
  4073f7:	add    BYTE PTR [edx+0x3b004164],dl
  4073fd:	fld    DWORD PTR [eax]
  4073ff:	add    BYTE PTR [ebx],cl
  407401:	fld    DWORD PTR [eax]
  407403:	add    BYTE PTR [ebx],cl
  407405:	fld    DWORD PTR [eax]
  407407:	add    BYTE PTR [edx],cl
  407409:	in     eax,dx
  40740a:	add    BYTE PTR [eax],al
  40740c:	sti    
  40740d:	fadd   DWORD PTR [eax]
  40740f:	add    BYTE PTR [edx],bl
  407411:	in     eax,dx
  407412:	add    BYTE PTR [eax],al
  407414:	or     ebx,ecx
  407416:	add    BYTE PTR [eax],al
  407418:	or     ch,ch
  40741a:	add    BYTE PTR [eax],al
  40741c:	sti    
  40741d:	fadd   DWORD PTR [eax]
  40741f:	add    dl,bl
  407421:	in     al,dx
  407422:	add    BYTE PTR [eax],al
  407424:	retf   
  407425:	fadd   DWORD PTR [eax]
  407427:	add    dl,cl
  407429:	in     al,dx
  40742a:	add    BYTE PTR [eax],al
  40742c:	mov    ebx,0x9a0000d8
  407431:	in     al,dx
	...
  407446:	add    BYTE PTR [eax],al
  407448:	retf   
  407449:	fadd   DWORD PTR [eax]
  40744b:	add    BYTE PTR [edx-0x44ffff14],cl
  407451:	fadd   DWORD PTR [eax]
  407453:	add    BYTE PTR [edx+0x620000ec],bl
  407459:	add    DWORD PTR ds:0x5806301,0x5816301
  407463:	add    DWORD PTR [ebx-0x80],esp
  407466:	add    eax,0x5816301
  40746b:	add    DWORD PTR [ebx-0x80],esp
  40746e:	add    eax,0x3816301
  407473:	add    DWORD PTR [ebx-0x80],esp
  407476:	add    eax,DWORD PTR [ecx]
  407478:	arpl   WORD PTR [ecx-0x7f9cfefd],ax
  40747e:	add    eax,DWORD PTR [ecx]
  407480:	arpl   WORD PTR [ecx-0x7f9cfefd],ax
  407486:	add    eax,DWORD PTR [ecx]
  407488:	arpl   WORD PTR [ecx-0x7f9cfefd],ax
  40748e:	add    eax,DWORD PTR [ecx]
  407490:	arpl   WORD PTR [ecx-0x7f9cfefd],ax
  407496:	add    eax,DWORD PTR [ecx]
  407498:	arpl   WORD PTR [esi-0x2],di
  40749b:	add    esp,DWORD PTR [esi+0x75]
  40749e:	inc    BYTE PTR [ebx]
  4074a0:	pop    esi
  4074a1:	jle    0x4074a1
  4074a3:	add    esp,DWORD PTR [esi+0x75]
  4074a6:	inc    BYTE PTR [ebx]
  4074a8:	pop    esi
  4074a9:	jle    0x4074a9
  4074ab:	add    eax,DWORD PTR [eax]
	...
  4074bd:	add    BYTE PTR [eax],al
  4074bf:	add    BYTE PTR [esi+0x75],ah
  4074c2:	inc    BYTE PTR [ebx]
  4074c4:	pop    esi
  4074c5:	jle    0x4074c5
  4074c7:	add    esp,DWORD PTR [esi+0x75]
  4074ca:	inc    BYTE PTR [ebx]
  4074cc:	pop    esi
  4074cd:	jle    0x4074cd
  4074cf:	add    esp,DWORD PTR [esi+0x75]
  4074d2:	inc    BYTE PTR [ebx]
  4074d4:	pop    esi
  4074d5:	jle    0x4074d5
  4074d7:	add    esp,DWORD PTR [esi+0x75]
  4074da:	inc    BYTE PTR [ebx]
  4074dc:	pop    esi
  4074dd:	jle    0x4074dd
  4074df:	add    esp,DWORD PTR [esi+0x75]
  4074e2:	inc    BYTE PTR [ebx]
  4074e4:	pop    esi
  4074e5:	fldpi  
  4074e7:	jmp    DWORD PTR [ecx-0x2b]
  4074ea:	in     al,0xff
  4074ec:	popa   
  4074ed:	aad    0xe7
  4074ef:	add    esp,DWORD PTR [edx-0x27]
  4074f2:	out    0x3,eax
  4074f4:	(bad)  
  4074f5:	(bad)  
  4074f7:	add    esp,DWORD PTR [edx-0x27]
  4074fa:	out    0x3,eax
  4074fc:	(bad)  
  4074fd:	(bad)  
  4074ff:	add    esp,DWORD PTR [edx-0x27]
  407502:	out    0x3,eax
  407504:	(bad)  
  407505:	(bad)  
  407507:	add    esp,DWORD PTR [edx-0x27]
  40750a:	out    0x3,eax
  40750c:	(bad)  
  40750d:	(bad)  
  40750f:	add    esp,DWORD PTR [edx-0x27]
  407512:	out    0x3,eax
  407514:	(bad)  
  407515:	(bad)  
  407517:	add    esp,DWORD PTR [edx-0x27]
  40751a:	out    0x3,eax
  40751c:	(bad)  
  40751d:	(bad)  
  40751f:	add    esp,DWORD PTR [edx-0x27]
  407522:	out    0x3,eax
	...
  407538:	(bad)  
  407539:	(bad)  
  40753b:	add    esp,DWORD PTR [edx-0x27]
  40753e:	out    0x3,eax
  407540:	(bad)  
  407541:	(bad)  
  407543:	and    DWORD PTR [ebx-0x27],esp
  407546:	or     DWORD PTR [edx+0x21e8d9a2],ebx
  40754c:	arpl   cx,bx
  40754e:	or     DWORD PTR [edx+0x21e9d9a2],ebx
  407554:	arpl   cx,bx
  407556:	or     DWORD PTR [edx+0x21ead9a2],ebx
  40755c:	arpl   cx,bx
  40755e:	leave  
  40755f:	cdq    
  407560:	and    bl,cl
  407562:	jmp    0x407585
  407564:	(bad)  
  407565:	fxch   st(1)
  407567:	cdq    
  407568:	and    bl,cl
  40756a:	in     al,dx
  40756b:	cs (bad) 
  40756d:	fxch   st(1)
  40756f:	cdq    
  407570:	and    bl,cl
  407572:	add    bh,ch
  407574:	push   eax
  407575:	fld    DWORD PTR [eax]
  407577:	retf   
  407578:	retf   
  407579:	sbb    DWORD PTR [ecx],eax
  40757b:	out    dx,al
  40757c:	jo     0x407557
  40757e:	add    BYTE PTR [ebx-0x1efee605],cl
  407584:	inc    ebx
  407585:	fadd   DWORD PTR [eax]
  407587:	mov    ebp,ebx
  407589:	sbb    DWORD PTR [ecx],eax
  40758b:	lock inc ebx
  40758d:	fadd   DWORD PTR [eax]
  40758f:	mov    ebx,ebx
  407591:	sbb    DWORD PTR [ecx],eax
  407593:	jecxz  0x4075d8
  407595:	fadd   DWORD PTR [eax]
  407597:	mov    ecx,ebx
  407599:	sbb    DWORD PTR [ecx],eax
  40759b:	repnz add BYTE PTR [eax],al
	...
  4075ae:	add    BYTE PTR [eax],al
  4075b0:	xchg   eax,ebx
  4075b2:	add    BYTE PTR [ebx+0x4],cl
  4075b5:	sbb    DWORD PTR [ecx],eax
  4075b7:	in     eax,0x87
  4075b9:	fld    DWORD PTR [eax]
  4075bb:	dec    ebx
  4075bc:	hlt    
  4075bd:	sbb    BYTE PTR [ecx],al
  4075bf:	hlt    
  4075c0:	pop    edx
  4075c1:	fld    DWORD PTR [eax]
  4075c3:	dec    ebx
  4075c4:	add    al,0x19
  4075c6:	add    edi,esp
  4075c8:	ss mov bh,dh
  4075cb:	dec    ebx
  4075cc:	hlt    
  4075cd:	sbb    BYTE PTR [ecx],al
  4075cf:	not    BYTE PTR [esi]
  4075d1:	mov    bh,dh
  4075d3:	dec    eax
  4075d4:	rcr    BYTE PTR [eax],cl
  4075d6:	add    ecx,edi
  4075d8:	inc    edi
  4075d9:	fadd   DWORD PTR [eax]
  4075db:	or     esi,DWORD PTR [eax+ebx*1-0x27b827ff]
  4075e2:	add    BYTE PTR [ebx],cl
  4075e4:	les    ebx,FWORD PTR [eax]
  4075e6:	add    ebx,ebx
  4075e8:	inc    edi
  4075e9:	fadd   DWORD PTR [eax]
  4075eb:	or     esi,DWORD PTR [eax+ebx*1-0x277805ff]
  4075f2:	add    bl,cl
  4075f4:	pop    es
  4075f5:	sbb    DWORD PTR [ecx],eax
  4075f7:	std    
  4075f8:	xchg   ecx,ebx
  4075fa:	add    bl,cl
  4075fc:	neg    DWORD PTR [eax]
  4075fe:	add    DWORD PTR [eax],eax
  407600:	sahf   
  407601:	lock add BYTE PTR [eax],al
  407604:	test   eax,0x8d00413b
  407609:	test   dh,bh
  40760b:	call   FWORD PTR [ecx-0x63ffbec5]
  407611:	test   dh,bh
  407613:	inc    DWORD PTR [eax]
	...
  407625:	add    BYTE PTR [eax],al
  407627:	add    cl,ch
  407629:	cmp    eax,DWORD PTR [ecx+0x0]
  40762c:	xchg   ebx,eax
  40762d:	mov    bl,0xff
  40762f:	(bad)  
  407630:	fnstcw WORD PTR [ebx]
  407632:	inc    ecx
  407633:	add    BYTE PTR [edx-0x1600004d],al
  407639:	cmp    eax,DWORD PTR [ecx+0x0]
  40763c:	xchg   ecx,eax
  40763d:	mov    bl,0xff
  40763f:	(bad)  
  407640:	fnstcw WORD PTR [ebx]
  407642:	inc    ecx
  407643:	add    BYTE PTR [eax-0x41],ah
  407646:	(bad)  
  407647:	jmp    FWORD PTR [ecx+0x57004137]
  40764d:	mov    edi,0x37990000
  407652:	inc    ecx
  407653:	add    BYTE PTR [esi-0x1e],al
  407656:	add    BYTE PTR [eax],al
  407658:	test   eax,0x15004137
  40765d:	mov    ?,esi
  40765f:	call   FWORD PTR [ecx+0x64004137]
  407665:	mov    ?,esi
  407667:	jmp    FWORD PTR [ecx+0x37]
  40766a:	inc    ecx
  40766b:	add    BYTE PTR [ebx],bl
  40766d:	mov    edi,0x3759ffff
  407672:	inc    ecx
  407673:	add    BYTE PTR [edx],ch
  407675:	mov    edi,0x3769ffff
  40767a:	inc    ecx
  40767b:	add    BYTE PTR [ecx],bl
  40767d:	mov    edi,0x3759ffff
  407682:	inc    ecx
  407683:	add    BYTE PTR [eax-0x41],ch
  407686:	(bad)  
  407687:	jmp    FWORD PTR [ecx+0x4136]
	...
  40769d:	add    BYTE PTR [eax],al
  40769f:	add    BYTE PTR [edx-0x2a],ah
  4076a2:	add    BYTE PTR es:[edx-0x6c],ah
  4076a6:	lods   al,BYTE PTR ds:[esi]
  4076a7:	inc    eax
  4076a8:	(bad)  
  4076a9:	aad    0x17
  4076ab:	add    BYTE PTR [edx-0x6c],ah
  4076ae:	lods   al,BYTE PTR ds:[esi]
  4076af:	inc    eax
  4076b0:	(bad)  
  4076b1:	fdiv   st,st(3)
  4076b3:	jmp    DWORD PTR [ebp+0x6240af6d]
  4076b9:	xchg   edi,eax
  4076ba:	cmc    
  4076bb:	call   DWORD PTR [ebp+0x6240ac54]
  4076c1:	call   0x40ac:0x54620124
  4076c8:	bound  ebp,QWORD PTR [ecx+0x54620124]
  4076ce:	lods   al,BYTE PTR ds:[esi]
  4076cf:	inc    eax
  4076d0:	bound  ebx,QWORD PTR [esp-0x53ab9dff]
  4076d7:	inc    eax
  4076d8:	(bad)  
  4076d9:	jmp    0x407701
  4076db:	add    DWORD PTR [edx+0x14],esp
  4076de:	scas   eax,DWORD PTR es:[edi]
  4076df:	inc    eax
  4076e0:	(bad)  
  4076e1:	fisub  WORD PTR [esi]
  4076e3:	add    BYTE PTR [edx+0x14],ah
  4076e6:	scas   eax,DWORD PTR es:[edi]
  4076e7:	inc    eax
  4076e8:	(bad)  
  4076e9:	in     eax,dx
  4076ea:	adc    eax,0xaf146200
  4076ef:	inc    eax
  4076f0:	(bad)  
  4076f1:	loopne 0x4076e4
  4076f3:	jmp    DWORD PTR ds:0x6240abed
  4076f9:	scas   eax,DWORD PTR es:[edi]
  4076fa:	repz call DWORD PTR ds:0x6240aed4
  407701:	mov    ds:0x124,al
	...
  407716:	add    BYTE PTR [eax],al
  407718:	(bad)  
  407719:	aam    0xae
  40771b:	inc    eax
  40771c:	bound  eax,QWORD PTR [ecx+0x24]
  40771f:	add    DWORD PTR [edx-0x2c],esp
  407722:	scas   al,BYTE PTR es:[edi]
  407723:	inc    eax
  407724:	bound  eax,QWORD PTR [esp+0x1]
  407728:	(bad)  
  407729:	aam    0xae
  40772b:	inc    eax
  40772c:	(bad)  
  40772d:	fstp   DWORD PTR [edx]
  40772f:	es arpl cx,bx
  407732:	leave  
  407733:	lods   eax,DWORD PTR ds:[esi]
  407734:	and    bl,cl
  407736:	sbb    esp,DWORD PTR [esi]
  407738:	(bad)  
  407739:	fxch   st(1)
  40773b:	lods   eax,DWORD PTR ds:[esi]
  40773c:	and    bl,cl
  40773e:	cld    
  40773f:	push   ss
  407740:	(bad)  
  407741:	fxch   st(1)
  407743:	lods   eax,DWORD PTR ds:[esi]
  407744:	and    bl,cl
  407746:	std    
  407747:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407749:	xchg   DWORD PTR [ebp-0x2126dd54],edx
  40774f:	repnz xchg ebp,eax
  407751:	xchg   DWORD PTR [edx-0x3026dd53],ecx
  407757:	and    eax,0xad89d963
  40775c:	and    bl,cl
  40775e:	shl    BYTE PTR ds:0xad89d963,0x22
  407765:	fnstenv [ecx-0x76269cdb]
  40776b:	lods   eax,DWORD PTR ds:[esi]
  40776c:	mov    ds:0x632622d9,al
  407771:	(bad)  [ecx-0x52]
  407774:	mov    ds:0x622613d9,al
  407779:	(bad)  [ecx-0x52]
	...
  407790:	mov    ds:0x621704d9,al
  407795:	(bad)  [ecx-0x52]
  407798:	mov    ds:0x25f2f5d9,al
  40779d:	xchg   DWORD PTR ds:0xe6d9a2ad,edx
  4077a3:	repnz adc eax,0xa2ae0a87
  4077a9:	fldenv [edi]
  4077ab:	repz add eax,0xa2ae0a87
  4077b1:	fldcw  WORD PTR [eax]
  4077b3:	repz cmc 
  4077b5:	xchg   BYTE PTR [edx],cl
  4077b7:	scas   al,BYTE PTR es:[edi]
  4077b8:	mov    ds:0xf12b00d9,al
  4077bd:	xchg   dh,bh
  4077bf:	or     ecx,DWORD PTR [edx+ebx*1]
  4077c2:	add    DWORD PTR [edx-0x34017930],ebp
  4077c8:	call   FWORD PTR [ecx]
  4077ca:	add    DWORD PTR [ebp-0x34017930],ebp
  4077d0:	bndldx bnd0,[ecx]
  4077d3:	lods   al,BYTE PTR ds:[esi]
  4077d4:	mov    al,0x86
  4077d6:	dec    bl
  4077d8:	call   FWORD PTR [ecx]
  4077da:	add    DWORD PTR [edi-0x34017950],ebp
  4077e0:	iret   
  4077e1:	sbb    DWORD PTR [ecx],eax
  4077e3:	scas   al,BYTE PTR es:[edi]
  4077e4:	nop
  4077e5:	xchg   dh,bh
  4077e7:	mov    edi,DWORD PTR [edi-0x6f5efee7]
  4077ed:	xchg   dh,bh
  4077ef:	mov    ecx,edi
  4077f1:	sbb    DWORD PTR [ecx],eax
  4077f3:	mov    al,0x0
	...
  407805:	add    BYTE PTR [eax],al
  407807:	add    BYTE PTR [eax-0x7a],dh
  40780a:	dec    BYTE PTR [ebx-0x5cfee641]
  407810:	jo     0x407798
  407812:	dec    BYTE PTR [ebx+0x3201190f]
  407818:	dec    edi
  407819:	xchg   dh,bh
  40781b:	dec    ebx
  40781c:	clc    
  40781d:	sbb    BYTE PTR [ecx],al
  40781f:	and    eax,0x4bfe864f
  407824:	or     BYTE PTR [ecx],bl
  407826:	add    DWORD PTR [edi+ebp*1],esi
  407829:	xchg   dh,bh
  40782b:	dec    ebx
  40782c:	clc    
  40782d:	sbb    BYTE PTR [ecx],al
  40782f:	daa    
  407830:	das    
  407831:	xchg   dh,bh
  407833:	dec    ebx
  407834:	enter  0x118,0x36
  407838:	jbe    0x18f8843c
  40783e:	add    DWORD PTR [ecx],edi
  407840:	jbe    0x19088444
  407846:	add    DWORD PTR [eax],eax
  407848:	pop    edx
  407849:	mov    esi,?
  40784b:	call   FWORD PTR [ecx+0x33]
  40784e:	inc    ecx
  40784f:	add    BYTE PTR [ecx-0x74],cl
  407852:	(bad)  
  407853:	jmp    FWORD PTR [ecx+0x33]
  407856:	inc    ecx
  407857:	add    BYTE PTR [eax],bl
  407859:	(bad)  
  40785a:	(bad)  
  40785b:	call   FWORD PTR [ecx+0x700412f]
  407861:	(bad)  
  407862:	(bad)  
  407863:	jmp    FWORD PTR [ecx-0x29ffbed1]
  407869:	mov    esi,?
  40786b:	inc    DWORD PTR [eax]
	...
  40787d:	add    BYTE PTR [eax],al
  40787f:	add    BYTE PTR [ecx-0x3affbed1],bl
  407885:	mov    esi,?
  407887:	jmp    FWORD PTR [ecx-0x2bffbed1]
  40788d:	mov    esi,?
  40788f:	(bad)  
  407890:	fldcw  WORD PTR [edi]
  407892:	inc    ecx
  407893:	add    bl,dl
  407895:	mov    esi,?
  407897:	(bad)  
  407898:	jmp    0xc240b9cc
  40789d:	mov    esi,?
  40789f:	(bad)  
  4078a0:	fldcw  WORD PTR [edi]
  4078a2:	inc    ecx
  4078a3:	add    cl,dl
  4078a5:	mov    esi,?
  4078a7:	(bad)  
  4078a8:	jmp    0xa040b9df
  4078ad:	mov    ?,esi
  4078af:	call   FWORD PTR [ecx-0x70ffbed1]
  4078b5:	mov    ?,esi
  4078b7:	jmp    FWORD PTR [ecx+0x7e00412f]
  4078bd:	mov    ?,esi
  4078bf:	call   FWORD PTR [ecx+0x4d00412f]
  4078c5:	mov    ?,esi
  4078c7:	jmp    FWORD PTR [ecx-0x63ffbed1]
  4078cd:	mov    ?,esi
  4078cf:	call   FWORD PTR [ecx+0x2f]
  4078d2:	inc    ecx
  4078d3:	add    BYTE PTR [edx-0x2e],ah
  4078d6:	repz (bad) 
  4078d8:	std    
  4078d9:	shr    BYTE PTR [edx-0xc2e9dc0],1
  4078df:	(bad)  
  4078e0:	in     eax,dx
  4078e1:	shr    BYTE PTR [edx+0x40],1
	...
  4078f7:	add    BYTE PTR [edx-0x30],ah
  4078fa:	and    al,BYTE PTR [ecx]
  4078fc:	(bad)  
  4078fd:	shr    BYTE PTR [edx+0x208f6240],1
  407903:	add    DWORD PTR [edx-0x70],esp
  407906:	test   al,0x40
  407908:	bound  edx,QWORD PTR [esi+0x4dbdfff5]
  40790e:	stos   DWORD PTR es:[edi],eax
  40790f:	inc    eax
  407910:	bound  edx,QWORD PTR [ebp+0x6dadfff5]
  407916:	stos   DWORD PTR es:[edi],eax
  407917:	inc    eax
  407918:	bound  edx,QWORD PTR [ebp+esi*8-0x52146201]
  40791f:	inc    eax
  407920:	bound  edx,QWORD PTR [ebx-0xb]
  407923:	dec    DWORD PTR [ebp+0x6240add0]
  407929:	pop    edx
  40792a:	sbb    DWORD PTR [eax],eax
  40792c:	bound  edx,QWORD PTR [eax-0x58]
  40792f:	inc    eax
  407930:	bound  ebp,QWORD PTR [ecx-0x3c]
  407933:	add    BYTE PTR [esi+0x50],ah
  407936:	test   al,0x40
  407938:	bound  ebx,QWORD PTR [eax+0x20]
  40793b:	add    BYTE PTR [edx+0x50],ah
  40793e:	test   al,0x40
  407940:	bound  esp,QWORD PTR [edi]
  407942:	adc    BYTE PTR [ecx],al
  407944:	arpl   WORD PTR [eax],dx
  407946:	stos   DWORD PTR es:[edi],eax
  407947:	inc    eax
  407948:	bound  ebx,QWORD PTR [esi]
  40794a:	repnz (bad) 
  40794c:	cmp    eax,0x6240ab10
  407951:	sub    eax,0x102dfff2
  407956:	stos   DWORD PTR es:[edi],eax
  407957:	inc    eax
  407958:	bound  ebx,QWORD PTR [edx+esi*8]
  40795b:	inc    DWORD PTR [eax]
	...
  40796d:	add    BYTE PTR [eax],al
  40796f:	add    BYTE PTR ds:0x6240ab10,bl
  407975:	fst    DWORD PTR [esi]
  407977:	repz or eax,0xa2aa0a84
  40797d:	fst    DWORD PTR [edi]
  40797f:	and    dl,BYTE PTR [edx-0x27]
  407982:	bound  ebp,QWORD PTR [ecx+0x21f8d9a2]
  407988:	push   edx
  407989:	fnstenv [edx-0x57]
  40798c:	mov    ds:0x7221f9d9,al
  407991:	fldenv [edx-0x57]
  407994:	and    bl,cl
  407996:	fisub  DWORD PTR [ecx]
  407998:	jb     0x407973
  40799a:	jb     0x407945
  40799c:	and    bl,cl
  40799e:	(bad)  [ecx]
  4079a0:	push   edx
  4079a1:	fldenv [edx-0x57]
  4079a4:	and    bl,cl
  4079a6:	mov    esp,0x72d95221
  4079ab:	test   eax,0x21bdd922
  4079b0:	jb     0x40798b
  4079b2:	bound  ebp,QWORD PTR [ecx+0x219ed922]
  4079b8:	jb     0x407993
  4079ba:	jb     0x407965
  4079bc:	and    bl,cl
  4079be:	(bad)  
  4079bf:	and    DWORD PTR [edx-0x27],edx
  4079c2:	bound  ebp,QWORD PTR [ecx+0x2180d922]
  4079c8:	push   edx
  4079c9:	fnstenv [edx-0x57]
  4079cc:	and    bl,cl
  4079ce:	jno    0x4079f1
  4079d0:	jb     0x4079ab
  4079d2:	bound  ebp,QWORD PTR [ecx+0x0]
	...
  4079e8:	mov    ds:0x722262d9,al
  4079ed:	fnstenv [edx-0x58]
  4079f0:	mov    ds:0x522253d9,al
  4079f5:	fldenv [edx-0x58]
  4079f8:	mov    ds:0x522244d9,al
  4079fd:	fnstenv [edx-0x58]
  407a00:	mov    ds:0x403700d9,al
  407a05:	jmp    0x1a0adc0a
  407a0a:	add    DWORD PTR [esi],esp
  407a0c:	inc    eax
  407a0d:	jmp    0x19faec12
  407a12:	add    DWORD PTR [ecx+0x52],ebp
  407a15:	fdivr  st,st(7)
  407a17:	or     cl,al
  407a19:	sbb    DWORD PTR [ecx],eax
  407a1b:	push   0xb04da27
  407a20:	mov    eax,0x836b0119
  407a25:	fld    DWORD PTR [eax]
  407a27:	or     ecx,DWORD PTR [eax]
  407a29:	sbb    al,BYTE PTR [ecx]
  407a2b:	push   0x72
  407a2d:	fdivr  st,st(7)
  407a2f:	retf   0x19fb
  407a32:	add    DWORD PTR [ebp-0x7d],ebp
  407a35:	fadd   DWORD PTR [eax]
  407a37:	retf   
  407a38:	or     ebx,DWORD PTR [edx]
  407a3a:	add    DWORD PTR [ebx+eax*4-0x28],ebp
  407a3e:	add    bl,cl
  407a40:	sti    
  407a41:	sbb    DWORD PTR [ecx],eax
  407a43:	outs   dx,DWORD PTR ds:[esi]
  407a44:	inc    ebx
  407a45:	fadd   DWORD PTR [eax]
  407a47:	retf   
  407a48:	retf   
  407a49:	sbb    DWORD PTR [ecx],eax
  407a4b:	outs   dx,BYTE PTR ds:[esi]
	...
  407a60:	inc    ebx
  407a61:	fadd   DWORD PTR [eax]
  407a63:	mov    edi,DWORD PTR [ebx+0x43610119]
  407a69:	fadd   DWORD PTR [eax]
  407a6b:	mov    ecx,ebx
  407a6d:	sbb    DWORD PTR [ecx],eax
  407a6f:	jo     0x407ab4
  407a71:	fadd   DWORD PTR [eax]
  407a73:	mov    edi,DWORD PTR [ebx-0x7c9cfee7]
  407a79:	fadd   DWORD PTR [eax]
  407a7b:	mov    ecx,DWORD PTR [ebx]
  407a7d:	sbb    DWORD PTR [ecx],eax
  407a7f:	jb     0x407a05
  407a81:	fadd   DWORD PTR [eax]
  407a83:	dec    ebx
  407a84:	hlt    
  407a85:	sbb    BYTE PTR [ecx],al
  407a87:	gs test al,bl
  407a8a:	add    BYTE PTR [ebx+0x4],cl
  407a8d:	sbb    DWORD PTR [ecx],eax
  407a8f:	add    BYTE PTR [esi-0x66000045],dh
  407a95:	xor    eax,DWORD PTR [ecx+0x0]
  407a98:	test   DWORD PTR [ebx+0x33a9ffff],edi
  407a9e:	inc    ecx
  407a9f:	add    BYTE PTR [ebx+edi*4+0x3359ffff],dl
  407aa6:	inc    ecx
  407aa7:	add    BYTE PTR [ebx-0x74],bh
  407aaa:	(bad)  
  407aab:	jmp    FWORD PTR [ecx+0x33]
  407aae:	inc    ecx
  407aaf:	add    BYTE PTR [edx+0x59fffe8c],cl
  407ab5:	xor    eax,DWORD PTR [ecx+0x0]
  407ab8:	cmp    DWORD PTR [esi+edi*8+0x413369ff],ecx
  407abf:	add    BYTE PTR [eax-0x74],cl
  407ac2:	(bad)  
  407ac3:	inc    DWORD PTR [eax]
	...
  407ad5:	add    BYTE PTR [eax],al
  407ad7:	add    BYTE PTR [ecx+0x3f004133],bl
  407add:	mov    esi,?
  407adf:	jmp    FWORD PTR [ecx+0xe004133]
  407ae5:	mov    esi,?
  407ae7:	call   FWORD PTR [ecx+0x3d004133]
  407aed:	mov    esi,?
  407aef:	jmp    FWORD PTR [ecx+0xc004133]
  407af5:	mov    esi,?
  407af7:	(bad)  
  407af8:	fnstenv [ebx]
  407afa:	inc    ecx
  407afb:	add    bl,dh
  407afd:	mov    edi,esi
  407aff:	(bad)  
  407b00:	jmp    0x240bc38
  407b05:	mov    esi,?
  407b07:	(bad)  
  407b08:	fnstenv [ebx]
  407b0a:	inc    ecx
  407b0b:	add    BYTE PTR [ecx-0x16f001b4],dh
  407b11:	cs inc ecx
  407b13:	add    al,ah
  407b15:	test   esi,edi
  407b17:	call   FWORD PTR [ecx+0x6200412f]
  407b1d:	push   es
  407b1e:	cmc    
  407b1f:	push   DWORD PTR ds:0x6240af15
  407b25:	cmc    
  407b26:	hlt    
  407b27:	jmp    DWORD PTR ds:0x6240af15
  407b2d:	sub    ch,dh
  407b2f:	call   DWORD PTR ds:0x6240af15
  407b35:	push   edi
  407b36:	cmc    
  407b37:	inc    DWORD PTR ds:0x40aed5
	...
  407b4d:	add    BYTE PTR [eax],al
  407b4f:	add    BYTE PTR [edx+0x12],ah
  407b52:	adc    DWORD PTR [eax],eax
  407b54:	inc    edx
  407b55:	aam    0xae
  407b57:	inc    eax
  407b58:	bound  edx,QWORD PTR [ecx]
  407b5a:	adc    DWORD PTR [eax],eax
  407b5c:	inc    edx
  407b5d:	aam    0xae
  407b5f:	inc    eax
  407b60:	bound  edx,QWORD PTR [ecx+edx*1]
  407b63:	add    BYTE PTR [edx+0x6240aed4],al
  407b69:	push   ebx
  407b6a:	adc    DWORD PTR [eax],eax
  407b6c:	adc    BYTE PTR [esp+ebp*4-0xab19dc0],0xff
  407b74:	mov    ch,0x94
  407b76:	lods   al,BYTE PTR ds:[esi]
  407b77:	inc    eax
  407b78:	bound  ecx,QWORD PTR [ebp-0xb]
  407b7b:	jmp    DWORD PTR [ebp+0x6240ac94]
  407b81:	push   eax
  407b82:	cmc    
  407b83:	call   DWORD PTR [ebp+0x6240ac94]
  407b89:	pmaddwd mm7,mm7
  407b8c:	test   DWORD PTR [esp+ebp*4+0x40],edx
  407b90:	bound  ebx,QWORD PTR [edx]
  407b92:	and    al,0x0
  407b94:	bound  edx,QWORD PTR [esp+ebp*4+0x40]
  407b98:	bound  ebp,QWORD PTR [ecx]
  407b9a:	adc    DWORD PTR [eax],eax
  407b9c:	bound  edx,QWORD PTR [esp+ebp*4+0x40]
  407ba0:	bound  ebx,QWORD PTR [esi*8-0x53abaa01]
  407ba7:	inc    eax
  407ba8:	(bad)  
  407ba9:	fst    DWORD PTR [edx+0x4a8045f3]
  407baf:	scas   al,BYTE PTR es:[edi]
  407bb0:	mov    ds:0xf383d9,al
	...
  407bc5:	add    BYTE PTR [eax],al
  407bc7:	add    BYTE PTR ds:0xa2ae4a80,dh
  407bcd:	fst    DWORD PTR [ebx+esi*8-0x51b57fdb]
  407bd4:	mov    ds:0x15f385d9,al
  407bd9:	or     BYTE PTR [edx-0x52],0xa2
  407bdd:	fst    DWORD PTR [esi-0xd]
  407be0:	add    eax,0xa2ae0a80
  407be5:	fst    DWORD PTR [edi+0x26]
  407be8:	(bad)  
  407be9:	(bad)  [ecx]
  407beb:	scas   al,BYTE PTR es:[edi]
  407bec:	mov    ds:0x622638d9,al
  407bf1:	(bad)  [ecx]
  407bf3:	scas   al,BYTE PTR es:[edi]
  407bf4:	and    bl,cl
  407bf6:	cmp    DWORD PTR [esi],esp
  407bf8:	(bad)  
  407bf9:	(bad)  [ecx]
  407bfb:	scas   al,BYTE PTR es:[edi]
  407bfc:	and    bl,cl
  407bfe:	call   0x22ad:0xc9d96226
  407c05:	fstp   DWORD PTR [ebx-0x36269dda]
  407c0b:	lods   eax,DWORD PTR ds:[esi]
  407c0c:	and    bl,cl
  407c0e:	jl     0x407c36
  407c10:	(bad)  
  407c11:	fxch   st(1)
  407c13:	lods   eax,DWORD PTR ds:[esi]
  407c14:	and    bl,cl
  407c16:	jge    0x407c3e
  407c18:	(bad)  
  407c19:	fxch   st(1)
  407c1b:	lods   eax,DWORD PTR ds:[esi]
  407c1c:	and    bl,cl
  407c1e:	pop    esi
  407c1f:	es (bad) 
  407c21:	(bad)  [ecx+0x4fd922ad]
  407c27:	punpckldq mm3,DWORD PTR [ecx-0x76]
  407c2b:	lods   eax,DWORD PTR ds:[esi]
	...
  407c40:	and    bl,cl
  407c42:	inc    eax
  407c43:	punpckldq mm3,mm1
  407c46:	mov    DWORD PTR [ebp+0x3300d9a2],ebp
  407c4c:	fld    DWORD PTR gs:[eax]
  407c4f:	mov    edi,edi
  407c51:	sbb    DWORD PTR [ecx],eax
  407c53:	mov    ds:0x4b00d954,al
  407c58:	or     al,0x1a
  407c5a:	add    DWORD PTR [ebp+0x4b00d964],edx
  407c60:	cld    
  407c61:	sbb    DWORD PTR [ecx],eax
  407c63:	test   BYTE PTR [ecx+ebx*8+0x0],dl
  407c67:	dec    ebx
  407c68:	int3   
  407c69:	sbb    DWORD PTR [ecx],eax
  407c6b:	ja     0x407cd1
  407c6d:	fld    DWORD PTR [eax]
  407c6f:	dec    ebx
  407c70:	mov    esp,0x54660119
  407c75:	fld    DWORD PTR [eax]
  407c77:	or     ecx,esp
  407c79:	sbb    DWORD PTR [ecx],eax
  407c7b:	test   eax,0xaffd84e
  407c80:	mov    esp,0x4ea80119
  407c85:	fdivr  st,st(7)
  407c87:	or     cl,BYTE PTR [edx+ebx*1]
  407c8a:	add    DWORD PTR [ebx+0xb00d96e],ebp
  407c90:	cld    
  407c91:	sbb    DWORD PTR [ecx],eax
  407c93:	sub    dl,al
  407c95:	jle    0x407c95
  407c97:	retf   
  407c98:	bndldx bnd0,[ecx]
  407c9b:	sub    eax,0xcb00d87f
  407ca0:	call   FWORD PTR [ecx]
  407ca2:	add    DWORD PTR [eax+eax*1],ebp
	...
  407cb5:	add    BYTE PTR [eax],al
  407cb7:	add    BYTE PTR [edi-0x28],bh
  407cba:	add    bl,cl
  407cbc:	iret   
  407cbd:	sbb    DWORD PTR [ecx],eax
  407cbf:	das    
  407cc0:	outs   dx,BYTE PTR ds:[esi]
  407cc1:	fdivr  st,st(7)
  407cc3:	retf   0x19bf
  407cc6:	add    DWORD PTR [esi],ebp
  407cc8:	mov    ds:0xcf8b04d9,eax
  407ccd:	sbb    DWORD PTR [ecx],eax
  407ccf:	and    DWORD PTR [ebp-0x40740182],esi
  407cd5:	sbb    DWORD PTR [ecx],eax
  407cd7:	add    BYTE PTR [edx],dh
  407cd9:	mov    edi,esi
  407cdb:	(bad)  
  407cdc:	jmp    0x8140be0c
  407ce1:	in     eax,0x0
  407ce3:	adc    cl,bl
  407ce5:	sub    eax,DWORD PTR [ecx+0x0]
  407ce8:	adc    BYTE PTR [esi+edi*8+0x4133a90f],al
  407cef:	add    bh,bh
  407cf1:	cmp    esi,0xf
  407cf4:	cdq    
  407cf5:	xor    eax,DWORD PTR [ecx+0x0]
  407cf8:	out    dx,al
  407cf9:	mov    edx,0x33a91000
  407cfe:	inc    ecx
  407cff:	add    BYTE PTR [ebp-0x66f0017d],bh
  407d05:	xor    eax,DWORD PTR [ecx+0x0]
  407d08:	int3   
  407d09:	cmp    esi,0xf
  407d0c:	imul   esi,DWORD PTR [ebx],0xbabb0041
  407d12:	(bad)  
  407d13:	call   FWORD PTR [ecx+0x33]
  407d16:	inc    ecx
  407d17:	add    dl,cl
  407d19:	mov    edx,0xffff
	...
  407d2e:	add    BYTE PTR [eax],al
  407d30:	imul   esi,DWORD PTR [ebx],0xbaf90041
  407d36:	(bad)  
  407d37:	call   FWORD PTR [ecx+0x33]
  407d3a:	inc    ecx
  407d3b:	add    BYTE PTR [eax-0x56000045],cl
  407d41:	das    
  407d42:	inc    ecx
  407d43:	add    BYTE PTR [edi-0x45],dh
  407d46:	add    BYTE PTR [eax],al
  407d48:	cdq    
  407d49:	das    
  407d4a:	inc    ecx
  407d4b:	add    BYTE PTR [esi-0x45],al
  407d4e:	add    BYTE PTR [eax],al
  407d50:	test   eax,0x7500412f
  407d55:	test   dh,bh
  407d57:	push   DWORD PTR [edx]
  407d59:	xor    DWORD PTR [ecx+0x0],eax
  407d5c:	inc    esp
  407d5d:	test   dh,bh
  407d5f:	(bad)  
  407d60:	jmp    0x6240be94
  407d65:	enter  0x122,0x62
  407d69:	push   edx
  407d6a:	test   al,0x40
  407d6c:	bound  edi,QWORD PTR [ecx+0x50620122]
  407d72:	test   al,0x40
  407d74:	(bad)  
  407d75:	call   0x50a27e9c
  407d7a:	test   al,0x40
  407d7c:	bound  edx,QWORD PTR [edi+0x10620120]
  407d82:	stos   DWORD PTR es:[edi],eax
  407d83:	inc    eax
  407d84:	bound  eax,QWORD PTR [esi+0x20]
  407d87:	add    DWORD PTR [edx+0x10],esp
  407d8a:	stos   DWORD PTR es:[edi],eax
  407d8b:	inc    eax
  407d8c:	bound  esi,QWORD PTR ds:0x10620120
  407d92:	stos   DWORD PTR es:[edi],eax
  407d93:	inc    eax
	...
  407da8:	bound  esp,QWORD PTR [eax+eiz*1+0x1]
  407dac:	bound  edx,QWORD PTR [eax]
  407dae:	stos   DWORD PTR es:[edi],eax
  407daf:	inc    eax
  407db0:	bound  edx,QWORD PTR [ebx-0x2f9dfee0]
  407db6:	stos   BYTE PTR es:[edi],al
  407db7:	inc    eax
  407db8:	bound  edx,QWORD PTR [edx+0x20]
  407dbb:	adc    BYTE PTR [edx+0x6240aad0],ah
  407dc1:	push   ecx
  407dc2:	and    BYTE PTR [eax],dl
  407dc4:	and    dl,al
  407dc6:	stos   BYTE PTR es:[edi],al
  407dc7:	inc    eax
  407dc8:	bound  edx,QWORD PTR [eax+0x20]
  407dcb:	adc    BYTE PTR [edx],ah
  407dcd:	shr    BYTE PTR [edx+0x200f6240],1
  407dd3:	adc    BYTE PTR [edx+0x7],ah
  407dd6:	stos   DWORD PTR es:[edi],eax
  407dd7:	inc    eax
  407dd8:	bound  ecx,QWORD PTR [esi]
  407dda:	and    BYTE PTR [eax],al
  407ddc:	bound  edx,QWORD PTR [eax+0xd6240a8]
  407de2:	and    BYTE PTR [eax],al
  407de4:	bound  edx,QWORD PTR [eax+0xc6240a8]
  407dea:	and    BYTE PTR [eax],al
  407dec:	bound  edx,QWORD PTR [eax-0x269dbf58]
  407df2:	push   cs
  407df3:	and    DWORD PTR [edx-0x27],esp
  407df6:	mov    DWORD PTR [ecx+0xfffd922],ebp
  407dfc:	push   edx
  407dfd:	(bad)  [ecx+0x10d922a9]
  407e03:	adc    BYTE PTR [edx-0x27],dh
  407e06:	mov    DWORD PTR [ecx-0x51fe265e],ebp
	...
  407e20:	dec    ebp
  407e21:	int3   
  407e22:	mov    DWORD PTR [ecx+0x22d2d9a2],ebp
  407e28:	push   edx
  407e29:	fnstenv [edx-0x57]
  407e2c:	mov    ds:0x2df3c3d9,al
  407e31:	jl     0x407e7d
  407e33:	stos   BYTE PTR es:[edi],al
  407e34:	mov    ds:0x1df3d4d9,al
  407e39:	jl     0x407e85
  407e3b:	stos   BYTE PTR es:[edi],al
  407e3c:	mov    ds:0xdf3c5d9,al
  407e41:	jl     0x407e8d
  407e43:	stos   BYTE PTR es:[edi],al
  407e44:	mov    ds:0xfdf396d9,al
  407e49:	jnp    0x407e55
  407e4b:	stos   BYTE PTR es:[edi],al
  407e4c:	mov    ds:0xedf397d9,al
  407e51:	jnp    0x407e88
  407e53:	test   eax,0xf378d9a2
  407e58:	fnstsw WORD PTR [ebx+0x61]
  407e5b:	test   al,0x22
  407e5d:	fnstcw WORD PTR [ecx-0xd]
  407e60:	int    0x7b
  407e62:	adc    eax,0x5ad922a9
  407e67:	repz mov ebp,0x22a8b57b
  407e6d:	fstp   DWORD PTR [ebx-0xd]
  407e70:	lods   eax,DWORD PTR ds:[esi]
  407e71:	jnp    0x407e3d
  407e73:	test   eax,0xf33cd922
  407e78:	popf   
  407e79:	jnp    0x407e45
  407e7b:	test   eax,0x3f00d922
  407e80:	data16 fld DWORD PTR [eax]
  407e83:	aas    
	...
  407e98:	mov    edx,0x661e0118
  407e9d:	fld    DWORD PTR [eax]
  407e9f:	into   
  407ea0:	mov    esp,0x71110118
  407ea5:	jnp    0x407ea5
  407ea7:	mov    edi,DWORD PTR [ebx+0x51000118]
  407ead:	jnp    0x407ead
  407eaf:	mov    ecx,DWORD PTR [ebx]
  407eb1:	sbb    al,BYTE PTR [ecx]
  407eb3:	repz push eax
  407eb5:	jnp    0x407eb5
  407eb7:	mov    edi,ebx
  407eb9:	sbb    DWORD PTR [ecx],eax
  407ebb:	loop   0x407eed
  407ebd:	jnp    0x407ebd
  407ebf:	dec    ebx
  407ec0:	or     BYTE PTR [edx],bl
  407ec2:	add    ebp,edx
  407ec4:	xor    BYTE PTR [ebx-0x2],bh
  407ec7:	dec    ebx
  407ec8:	clc    
  407ec9:	sbb    DWORD PTR [ecx],eax
  407ecb:	les    edx,FWORD PTR [eax]
  407ecd:	jnp    0x407ecd
  407ecf:	dec    ebx
  407ed0:	enter  0x119,0xb7
  407ed4:	inc    ebx
  407ed5:	fadd   DWORD PTR [eax]
  407ed7:	dec    ebx
  407ed8:	mov    eax,0x61a60119
  407edd:	fld    DWORD PTR [eax]
  407edf:	sbb    DWORD PTR [ebp+0x61e90119],edi
  407ee5:	fld    DWORD PTR [eax]
  407ee7:	jmp    0xeb41584d
  407eec:	popa   
  407eed:	fld    DWORD PTR [eax]
  407eef:	leave  
  407ef0:	lahf   
  407ef1:	jp     0x407ef1
  407ef3:	and    al,0x66
  407ef5:	fld    DWORD PTR [eax]
  407ef7:	call   0xef41585d
	...
  407f10:	popa   
  407f11:	fld    DWORD PTR [eax]
  407f13:	sbb    DWORD PTR [ebp+0x61ecfe7a],esp
  407f19:	fld    DWORD PTR [eax]
  407f1b:	sbb    DWORD PTR [ebp-0x77ff0186],edx
  407f21:	(bad)  
  407f22:	add    BYTE PTR [eax],al
  407f24:	jg     0x407efc
  407f26:	add    BYTE PTR [eax],al
  407f28:	fst    st(6)
  407f2a:	add    BYTE PTR [eax],al
  407f2c:	xchg   esi,eax
  407f2d:	mov    dl,0x3f
  407f2f:	add    BYTE PTR [esi+edx*8],ch
  407f32:	add    BYTE PTR [eax],al
  407f34:	inc    edx
  407f35:	mov    dl,0x3f
  407f37:	add    BYTE PTR [ebx],ah
  407f39:	(bad)  
  407f3a:	add    BYTE PTR [eax],al
  407f3c:	add    dh,BYTE PTR [ebx-0x294dffc1]
  407f42:	add    BYTE PTR [eax],al
  407f44:	dec    ebp
  407f45:	mov    ah,0x3f
  407f47:	add    BYTE PTR [ecx+0x740000d6],ah
  407f4d:	mov    ah,0x3f
  407f4f:	add    al,dl
  407f51:	aam    0x0
  407f53:	add    bl,dh
  407f55:	mov    dh,0x3f
  407f57:	add    bh,ah
  407f59:	aam    0x0
  407f5b:	add    BYTE PTR [ebx],al
  407f5d:	mov    bh,0x3f
  407f5f:	add    dh,dh
  407f61:	aam    0x0
  407f63:	add    al,dl
  407f65:	fdivr  QWORD PTR [edi]
  407f67:	add    ch,ah
  407f69:	aam    0x0
  407f6b:	add    BYTE PTR [ecx],bl
  407f6d:	fnstsw WORD PTR [edi]
  407f6f:	add    BYTE PTR [ebp+edx*8+0x0],dl
	...
  407f86:	add    BYTE PTR [eax],al
  407f88:	ret    0x3fdc
  407f8b:	add    BYTE PTR [ebx+0xd5],cl
  407f91:	fnstsw WORD PTR [edi]
  407f93:	add    BYTE PTR [edx-0x5ffff2b],bl
  407f99:	mov    dh,0x3f
  407f9b:	add    BYTE PTR [ecx+0x7d0000d5],cl
  407fa1:	mov    dh,0x3f
  407fa3:	add    al,bl
  407fa5:	aam    0x0
  407fa7:	add    BYTE PTR [ebp+0x62003fe5],bh
  407fad:	pop    esp
  407fae:	add    eax,0x156b6200
  407fb3:	inc    ecx
  407fb4:	(bad)  
  407fb5:	std    
  407fb6:	add    al,0x0
  407fb8:	(bad)  
  407fb9:	call   0xfaa2c0d1
  407fbe:	add    al,0x0
  407fc0:	bound  ecx,QWORD PTR [ebp+0x1b62411d]
  407fc6:	add    eax,0x1c636200
  407fcb:	inc    ecx
  407fcc:	bound  ebp,QWORD PTR [eax]
  407fce:	add    eax,0x1c636200
  407fd3:	inc    ecx
  407fd4:	bound  ebx,QWORD PTR [ecx]
  407fd6:	add    eax,0x1bf66200
  407fdb:	inc    ecx
  407fdc:	bound  ebp,QWORD PTR [esp+eax*1+0x1efe6200]
  407fe3:	inc    ecx
  407fe4:	bound  edi,QWORD PTR [ebx]
  407fe6:	add    al,BYTE PTR [eax]
  407fe8:	bound  ebp,QWORD PTR [esi]
  407fea:	sbb    al,0x41
	...
  408000:	bound  ecx,QWORD PTR [esi+0x2]
  408003:	add    BYTE PTR [edx-0x63],ah
  408006:	sbb    al,0x41
  408008:	bound  ebx,QWORD PTR [ebp+0x2]
  40800b:	add    BYTE PTR [edx+0x30],ah
  40800e:	sbb    al,0x41
  408010:	(bad)  
  408011:	lock add DWORD PTR [eax],eax
  408014:	bound  edx,QWORD PTR [esi+0x1f]
  408017:	inc    ecx
  408018:	(bad)  
  408019:	inc    DWORD PTR [ecx]
  40801b:	add    BYTE PTR [edx+0x69],ah
  40801e:	push   ds
  40801f:	inc    ecx
  408020:	bound  eax,QWORD PTR [edx+0x2]
  408023:	add    BYTE PTR [edx+0x73],ah
  408026:	push   ds
  408027:	inc    ecx
  408028:	bound  esi,QWORD PTR [eax+0x2]
  40802b:	adc    BYTE PTR [edx-0x6f],ah
  40802e:	add    al,BYTE PTR [eax]
  408030:	bound  eax,QWORD PTR [edx+0x7e610205]
  408036:	or     DWORD PTR [esi],eax
  408038:	gs (bad) 
  40803b:	cld    
  40803c:	imul   esp,esp,0xffffffeb
  40803f:	add    BYTE PTR [eax+ebp*8-0x9],bl
  408043:	hlt    
  408044:	push   ebx
  408045:	int3   
  408046:	repz clc 
  408048:	ja     0x40801a
  40804a:	fucomip st,st(4)
  40804c:	jnp    0x408022
  40804e:	fcomi  st,st(0)
  408050:	outs   dx,DWORD PTR ds:[esi]
  408051:	fadd   DWORD PTR [edi]
  408053:	and    eax,0x2903bc40
  408058:	inc    esp
  408059:	ror    bh,0x1c
  40805c:	dec    eax
  40805d:	(bad)  
  40805e:	retf   
  40805f:	and    BYTE PTR [eax+ecx*8],bh
  408062:	xlat   BYTE PTR ds:[ebx]
  408063:	adc    al,0x0
	...
  408075:	add    BYTE PTR [eax],al
  408077:	add    BYTE PTR [eax],dh
  408079:	lods   al,BYTE PTR ds:[esi]
  40807a:	rcr    DWORD PTR [eax],cl
  40807c:	xchg   esp,eax
  40807d:	mov    al,0xbf
  40807f:	or     al,0x98
  408081:	mov    ah,0xbb
  408083:	adc    BYTE PTR [eax+edi*4-0x33c1b59],cl
  40808a:	sub    eax,0xffffffc7
  40808d:	add    BYTE PTR [eax-0x25],dl
  408090:	retf   
  408091:	add    al,0x4c
  408093:	fistp  QWORD PTR [edi-0x4c2ca7f8]
  408099:	in     al,dx
  40809a:	push   ebx
  40809b:	xlat   BYTE PTR ds:[ebx]
  40809c:	xchg   edi,eax
  40809d:	lock aas 
  40809f:	retf   
  4080a0:	fwait
  4080a1:	adc    al,0x1c
  4080a3:	scas   eax,DWORD PTR es:[edi]
  4080a4:	scas   eax,DWORD PTR es:[edi]
  4080a5:	sbb    BYTE PTR [eax-0x1d],cl
  4080a8:	cmp    esp,0x43
  4080ab:	out    0x87,eax
  4080ad:	add    BYTE PTR [eax],dl
  4080af:	fisttp DWORD PTR [ebx+0x7fdf0c04]
  4080b5:	or     BYTE PTR [eax],bl
  4080b7:	shl    DWORD PTR [ebx-0x14],cl
  4080ba:	adc    edx,edi
  4080bc:	push   edi
  4080bd:	lock dec edx
  4080c0:	pop    ebx
  4080c1:	hlt    
  4080c2:	sti    
  4080c3:	into   
  4080c4:	dec    edi
  4080c5:	clc    
  4080c6:	add    BYTE PTR [ecx-0x1f],ch
  4080c9:	pop    edx
  4080ca:	and    BYTE PTR [ebp-0x1b],0x5e
  4080ce:	xchg   BYTE PTR [ecx+0x39],dh
  4080d1:	arpl   WORD PTR [edx-0x7198d293],cx
  4080d7:	jns    0x40810a
  4080d9:	dec    ebx
  4080da:	xchg   edx,eax
  4080db:	jne    0x4080dd
	...
  4080ed:	add    BYTE PTR [eax],al
  4080ef:	add    BYTE PTR ds:0x961964f,dl
  4080f5:	push   ebx
  4080f6:	call   0xc189:0x9e56fd5d
  4080fd:	cmp    ah,BYTE PTR [edx-0x59c13a7b]
  408103:	push   ecx
  408104:	fld    DWORD PTR [edx-0x56]
  408107:	dec    ebp
  408108:	int    0x46
  40810a:	scas   al,BYTE PTR es:[edi]
  40810b:	pop    ecx
  40810c:	shr    DWORD PTR [edx],1
  40810e:	mov    dl,0x55
  408110:	cmc    
  408111:	das    
  408112:	mov    dh,0x41
  408114:	jmp    0xdd7e3b4c
  408119:	aaa    
  40811a:	mov    esi,0xc29ba129
  40811f:	and    eax,0xb1c69fa5
  408124:	js     0x4080c9
  408126:	retf   0x6cad
  408129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40812a:	into   
  40812b:	mov    ecx,0xb5d28b70
  408130:	push   esp
  408131:	(bad)  
  408132:	(bad)  
  408133:	mov    eax,ds:0x9dda9348
  408138:	cmp    al,0x97
  40813a:	fmulp  st(1),st
  40813c:	cmp    BYTE PTR [ebx-0x1e],0xc5
  408140:	test   BYTE PTR [edi-0x1a],bh
  408143:	xchg   ecx,eax
  408144:	cwde   
  408145:	sub    edx,0xffffff8d
  408148:	mov    WORD PTR [edi+0x6b9099ee],es
  40814e:	repnz xchg ebp,eax
  408150:	xor    al,0x6f
  408152:	test   BYTE PTR [eax],0x0
	...
  408165:	add    BYTE PTR [eax],al
  408167:	add    bl,ah
  408169:	and    edi,ebx
  40816b:	sti    
  40816c:	dec    edi
  40816d:	daa    
  40816e:	(bad)  
  40816f:	(bad)  
  408170:	mov    ebx,0xc70302db
  408175:	fild   WORD PTR [esi]
  408177:	pop    es
  408178:	mov    bl,0x73
  40817a:	or     BYTE PTR [ebx],cl
  40817c:	mov    edi,0xab0f0c77
  408181:	imul   edx,DWORD PTR [eax],0x13
  408184:	xchg   edi,eax
  408185:	outs   dx,DWORD PTR ds:[esi]
  408186:	adc    al,0x17
  408188:	add    DWORD PTR [ebx-0x7850e4e8],0x1c
  40818f:	pop    ds
  408190:	pop    ebx
  408191:	mov    edx,0xbe672322
  408196:	es daa 
  408198:	xchg   ebx,eax
  408199:	shr    DWORD PTR [edx],cl
  40819b:	sub    ebx,DWORD PTR [edi-0x74d0d129]
  4081a1:	retf   
  4081a2:	xor    dh,BYTE PTR [ebx]
  4081a4:	aaa    
  4081a5:	iret   
  4081a6:	ss aaa 
  4081a8:	and    esp,ebx
  4081aa:	cmp    bh,BYTE PTR [ebx]
  4081ac:	movntq QWORD PTR [esi],mm7
  4081af:	aas    
  4081b0:	sti    
  4081b1:	jp     0x408213
  4081b3:	arpl   di,sp
  4081b5:	jle    0x40821b
  4081b7:	addr16 xchg ebx,eax
  4081b9:	xchg   esp,eax
  4081ba:	push   0x6c789f6b
  4081bf:	outs   dx,DWORD PTR ds:[esi]
  4081c0:	mov    ecx,DWORD PTR [eax+esi*2+0x7490b773]
  4081c7:	ja     0x40816c
  4081c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081ca:	js     0x408227
	...
  4081e0:	outs   dx,DWORD PTR ds:[esi]
  4081e1:	sub    BYTE PTR [edi+ebx*2-0x65],bl
  4081e5:	pushf  
  4081e6:	inc    eax
  4081e7:	inc    ebx
  4081e8:	inc    edi
  4081e9:	mov    al,ds:0x34334744
  4081ee:	dec    eax
  4081ef:	dec    ebx
  4081f0:	aas    
  4081f1:	cwde   
  4081f2:	dec    esp
  4081f3:	dec    edi
  4081f4:	bound  esi,QWORD PTR [eax-0x53ceae4d]
  4081fa:	mov    bh,0x55
  4081fc:	sub    eax,0x4959abb8
  408201:	je     0x4081d4
  408203:	jge    0x40824a
  408205:	add    BYTE PTR [edx+eax*4-0x7978041f],al
  40820c:	fucom  st(7)
  40820e:	jnp    0x40819a
  408210:	fld    DWORD PTR [ebx]
  408212:	or     BYTE PTR [esi-0x6d8c102b],0xf1
  408219:	jmp    0x408292
  40821b:	xchg   esi,eax
  40821c:	in     eax,dx
  40821d:	imul   DWORD PTR [ebx-0x66]
  408220:	jmp    0xe5def238
  408225:	pop    edi
  408226:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408227:	mov    ds:0xa6a85bc1,al
  40822c:	mov    ebp,0xb9aa9c07
  408231:	and    esp,DWORD PTR [eax-0x6bf04a52]
  408237:	mov    dl,0x11
  408239:	sets   BYTE PTR [esi-0x4573e4f3]
  408240:	or     DWORD PTR [edi+0xbe8f],esi
	...
  408256:	add    BYTE PTR [eax],al
  408258:	add    eax,0x21c243c3
  40825d:	mov    edi,0x2b1dc647
  408262:	cmp    eax,0x414719ca
  408267:	into   
  408268:	adc    eax,0x31d23533
  40826d:	das    
  40826e:	cmp    esi,edx
  408270:	sub    eax,0x29da2d3b
  408275:	push   edi
  408276:	xor    esi,ebx
  408278:	and    eax,0x1e265a3
  40827d:	lahf   
  40827e:	imul   esp,esi,0x5c8fd9fd
  408284:	clc    
  408285:	or     BYTE PTR [eax+eiz*2+0x549884f4],0xd0
  40828d:	push   0x6ccc5894
  408292:	or     BYTE PTR [eax+ecx*8+0x70],0x7c
  408297:	push   eax
  408298:	les    esi,FWORD PTR [eax+ebp*8+0xd]
  40829c:	(bad)  
  40829d:	fld1   
  40829f:	add    esp,DWORD PTR [edx-0x27]
  4082a2:	out    0x3,eax
  4082a4:	(bad)  
  4082a5:	(bad)  
  4082a7:	add    esp,DWORD PTR [edx-0x27]
  4082aa:	out    0x3,eax
  4082ac:	(bad)  
  4082ad:	(bad)  
  4082af:	add    esp,DWORD PTR [edx-0x27]
  4082b2:	out    0x3,eax
  4082b4:	(bad)  
  4082b5:	(bad)  
  4082b7:	add    esp,DWORD PTR [edx-0x27]
  4082ba:	out    0x3,eax
	...
  4082d0:	(bad)  
  4082d1:	(bad)  
  4082d3:	add    esi,DWORD PTR [ebp-0x28]
  4082d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082d7:	add    esp,DWORD PTR [edx-0x27]
  4082da:	popf   
  4082db:	add    esp,DWORD PTR [edx-0x27]
  4082de:	out    0x3,eax
  4082e0:	(bad)  
  4082e1:	(bad)  
  4082e3:	add    esp,DWORD PTR [edx-0x27]
  4082e6:	out    0x3,eax
  4082e8:	(bad)  
  4082e9:	(bad)  
  4082eb:	add    esp,DWORD PTR [edx-0x27]
  4082ee:	out    0x3,eax
  4082f0:	(bad)  
  4082f1:	(bad)  
  4082f3:	add    esi,DWORD PTR ds:0x6203e7d8
  4082f9:	(bad)  
  4082fb:	add    esp,DWORD PTR [edx-0x27]
  4082fe:	out    0x3,eax
  408300:	(bad)  
  408301:	(bad)  
  408303:	add    esp,DWORD PTR [edx-0x27]
  408306:	out    0x3,eax
  408308:	(bad)  
  408309:	(bad)  
  40830b:	add    esp,DWORD PTR [edx-0x27]
  40830e:	add    cl,ch
  408310:	popa   
  408311:	fld    DWORD PTR [eax]
  408313:	jmp    0xa7415c79
  408318:	lahf   
  408319:	je     0x408321
  40831b:	jmp    0xe9415c81
  408320:	popa   
  408321:	fld    DWORD PTR [eax]
  408323:	jmp    0xe9415c89
  408328:	popa   
  408329:	fld    DWORD PTR [eax]
  40832b:	jmp    0xe9415c91
  408330:	popa   
  408331:	fld    DWORD PTR [eax]
  408333:	jmp    0x408338
	...
  408348:	popa   
  408349:	fld    DWORD PTR [eax]
  40834b:	jmp    0x5f415cb1
  408350:	pop    ss
  408351:	je     0x408359
  408353:	jmp    0xe9415cb9
  408358:	popa   
  408359:	fld    DWORD PTR [eax]
  40835b:	jmp    0xe9415cc1
  408360:	popa   
  408361:	fld    DWORD PTR [eax]
  408363:	jmp    0xe9415cc9
  408368:	popa   
  408369:	je     0x40836d
  40836b:	daa    
  40836c:	pop    ds
  40836d:	je     0x4082f5
  40836f:	pop    ds
  408370:	pop    ss
  408371:	je     0x408379
  408373:	jmp    0xe9415cd9
  408378:	popa   
  408379:	fld    DWORD PTR [eax]
  40837b:	jmp    0xe9415ce1
  408380:	popa   
  408381:	fld    DWORD PTR [eax]
  408383:	jmp    0xef415ce9
  408388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408389:	jb     0x408389
  40838b:	out    0x9e,al
  40838d:	jb     0x40838d
  40838f:	ficom  WORD PTR [esi+0x61e97e72]
  408395:	fld    DWORD PTR [eax]
  408397:	jmp    0x415cfd
  40839c:	sti    
  40839d:	(bad)  
  40839e:	add    BYTE PTR [eax],al
  4083a0:	sti    
  4083a1:	(bad)  
  4083a2:	add    BYTE PTR [eax],al
  4083a4:	or     edx,edi
  4083a6:	add    BYTE PTR [eax],al
  4083a8:	les    esp,FWORD PTR ds:0xfffe
	...
  4083be:	add    BYTE PTR [eax],al
  4083c0:	les    esp,FWORD PTR ds:0x25c4fffe
  4083c6:	(bad)  
  4083c7:	jg     0x408394
  4083c9:	(bad)  
  4083ca:	add    BYTE PTR [eax],al
  4083cc:	retf   
  4083cd:	(bad)  
  4083ce:	add    BYTE PTR [eax],al
  4083d0:	mov    ebx,0xbb0000d6
  4083d5:	(bad)  
  4083d6:	add    BYTE PTR [eax],al
  4083d8:	retf   
  4083d9:	(bad)  
  4083da:	add    BYTE PTR [eax],al
  4083dc:	inc    ebp
  4083dd:	and    eax,0xd6bafc01
  4083e2:	add    al,bh
  4083e4:	mov    edx,0x8b7800d6
  4083e9:	(bad)  
  4083ea:	add    BYTE PTR [eax],al
  4083ec:	mov    edx,esi
  4083ee:	add    BYTE PTR [eax],al
  4083f0:	jnp    0x4083c8
  4083f2:	add    BYTE PTR [eax],al
  4083f4:	jnp    0x4083cc
  4083f6:	add    BYTE PTR [eax],al
  4083f8:	xor    al,0x25
  4083fa:	(bad)  
  4083fb:	dec    DWORD PTR [ebx+0x7b0000d6]
  408401:	(bad)  
  408402:	add    BYTE PTR [eax],al
  408404:	jnp    0x4083dc
  408406:	add    BYTE PTR [eax+0xd64b],al
  40840c:	dec    ebx
  40840d:	(bad)  
  40840e:	add    BYTE PTR [eax],al
  408410:	cmp    edx,esi
  408412:	add    BYTE PTR [eax],al
  408414:	cmp    edx,esi
  408416:	add    BYTE PTR [eax],al
  408418:	retf   
  408419:	(bad)  
  40841a:	add    BYTE PTR [eax],al
  40841c:	dec    ebx
  40841d:	(bad)  
  40841e:	add    BYTE PTR [eax],al
  408420:	cmp    ebx,ebp
  408422:	(bad)  
  408423:	inc    DWORD PTR [eax]
	...
  408435:	add    BYTE PTR [eax],al
  408437:	add    BYTE PTR [edx],bh
  408439:	fld    QWORD PTR [eax]
  40843b:	add    BYTE PTR [edx-0x80],ah
  40843e:	add    al,BYTE PTR [eax]
  408440:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  408446:	add    al,BYTE PTR [eax]
  408448:	bound  eax,QWORD PTR [eax-0x7e9dfffe]
  40844e:	add    al,BYTE PTR [eax]
  408450:	bound  eax,QWORD PTR [eax]
  408452:	add    eax,0x85006200
  408457:	and    dl,0x7f
  40845a:	add    al,BYTE PTR [eax+0x1be66c62]
  408460:	jbe    0x4083e6
  408462:	out    0x1b,al
  408464:	outs   dx,BYTE PTR ds:[esi]
  408465:	jl     0x40844d
  408467:	inc    ebp
  408469:	jg     0x40846d
  40846b:	add    dl,ah
  40846d:	jg     0x40845b
  40846f:	sbb    DWORD PTR [eax-0x7a],ebx
  408472:	in     al,dx
  408473:	sbb    DWORD PTR [eax+0x6e],edx
  408476:	hlt    
  408477:	adc    DWORD PTR [eax+0x6e],edx
  40847a:	hlt    
  40847b:	adc    DWORD PTR [eax+0x6e],esi
  40847e:	hlt    
  40847f:	adc    DWORD PTR [eax+0x6e],esi
  408482:	hlt    
  408483:	adc    DWORD PTR [eax-0x72],esi
  408486:	hlt    
  408487:	adc    edx,esp
  408489:	inc    DWORD PTR [eax+eax*4]
  40848c:	push   edx
  40848d:	sub    ah,0x19
  408490:	pop    eax
  408491:	xchg   ah,ch
  408493:	sbb    DWORD PTR [eax+0x6e],edx
  408496:	hlt    
  408497:	adc    DWORD PTR [eax+0x6e],edx
  40849a:	hlt    
  40849b:	adc    DWORD PTR [eax],eax
	...
  4084ad:	add    BYTE PTR [eax],al
  4084af:	add    BYTE PTR [eax+0x74],dh
  4084b2:	hlt    
  4084b3:	adc    DWORD PTR [eax+0x74],esi
  4084b6:	hlt    
  4084b7:	adc    DWORD PTR [eax-0x6c],esi
  4084ba:	hlt    
  4084bb:	adc    edx,esp
  4084bd:	add    al,BYTE PTR ds:0x2826200
  4084c3:	add    BYTE PTR [edx-0x7e],ah
  4084c6:	add    al,BYTE PTR [eax]
  4084c8:	(bad)  
  4084c9:	(bad)  
  4084cb:	add    esp,DWORD PTR [edx-0x27]
  4084ce:	out    0x3,eax
  4084d0:	(bad)  
  4084d1:	(bad)  
  4084d3:	add    esp,DWORD PTR [edx-0x27]
  4084d6:	out    0x3,eax
  4084d8:	(bad)  
  4084d9:	(bad)  
  4084db:	add    esp,DWORD PTR [edx-0x27]
  4084de:	out    0x3,eax
  4084e0:	(bad)  
  4084e1:	(bad)  
  4084e3:	add    esp,DWORD PTR [edx-0x27]
  4084e6:	out    0x3,eax
  4084e8:	(bad)  
  4084e9:	(bad)  
  4084eb:	add    esp,DWORD PTR [edx-0x27]
  4084ee:	out    0x3,eax
  4084f0:	(bad)  
  4084f1:	(bad)  
  4084f3:	add    esp,DWORD PTR [edx-0x27]
  4084f6:	out    0x3,eax
  4084f8:	(bad)  
  4084f9:	(bad)  
  4084fb:	add    esp,DWORD PTR [edx-0x27]
  4084fe:	out    0x3,eax
  408500:	(bad)  
  408501:	(bad)  
  408503:	add    esp,DWORD PTR [edx-0x27]
  408506:	out    0x3,eax
  408508:	(bad)  
  408509:	(bad)  
  40850b:	add    esp,DWORD PTR [edx-0x27]
  40850e:	out    0x3,eax
  408510:	(bad)  
  408511:	(bad)  
  408513:	add    eax,DWORD PTR [eax]
	...
  408525:	add    BYTE PTR [eax],al
  408527:	add    BYTE PTR [edx-0x27],ah
  40852a:	out    0x3,eax
  40852c:	(bad)  
  40852d:	(bad)  
  40852f:	add    esp,DWORD PTR [edx-0x27]
  408532:	out    0x3,eax
  408534:	(bad)  
  408535:	(bad)  
  408537:	add    esp,DWORD PTR [edx-0x27]
  40853a:	out    0x3,eax
  40853c:	(bad)  
  40853d:	(bad)  
  40853f:	add    esp,DWORD PTR [edx-0x27]
  408542:	out    0x3,eax
  408544:	(bad)  
  408545:	(bad)  
  408547:	add    esp,DWORD PTR [edx-0x27]
  40854a:	out    0x3,eax
  40854c:	(bad)  
  40854d:	(bad)  
  40854f:	add    esp,DWORD PTR [edx-0x27]
  408552:	out    0x3,eax
  408554:	(bad)  
  408555:	fld    DWORD PTR [eax]
  408557:	call   0xe8405fba
  40855c:	data16 (bad) 
  40855f:	out    0x60,eax
  408561:	(bad)  
  408563:	out    0x60,eax
  408565:	fiadd  DWORD PTR [ecx]
  408567:	jmp    0xda60:0xe7ffda60
  40856e:	jmp    edi
  408570:	pop    edi
  408571:	(bad)  
  408573:	jmp    0xdb5f:0xeb02db67
  40857a:	add    ch,bl
  40857c:	in     eax,dx
  40857d:	fild   DWORD PTR [ebx+ebp*8]
  408580:	pop    edi
  408581:	fild   DWORD PTR [ebx+ebp*8]
  408584:	fild   DWORD PTR [bp+si]
  408587:	jmp    0x4085e8
  408589:	aad    0x4
  40858b:	in     eax,0x0
	...
  40859d:	add    BYTE PTR [eax],al
  40859f:	add    BYTE PTR [edi-0x25],ah
  4085a2:	add    ch,ch
  4085a4:	pop    edi
  4085a5:	fild   DWORD PTR [edx]
  4085a7:	jmp    0x408610
  4085a9:	fild   DWORD PTR [ebp*8-0x14fd264b]
  4085b0:	lods   eax,DWORD PTR ds:[esi]
  4085b1:	fdivr  st,st(7)
  4085b3:	out    0x60,eax
  4085b5:	(bad)  
  4085b7:	jecxz  0x408555
  4085b9:	mov    eax,0xdc5ee91f
  4085be:	push   es
  4085bf:	jmp    0xdc5e:0xea01dc66
  4085c6:	add    edx,ebp
  4085c8:	data16 fadd QWORD PTR [ebx]
  4085cb:	jmp    0xdc66:0xea01d65e
  4085d2:	add    eax,ebp
  4085d4:	pusha  
  4085d5:	fiadd  DWORD PTR [ecx]
  4085d7:	call   0xe8425e42
  4085dc:	pop    esi
  4085dd:	fdivr  st,st(7)
  4085df:	out    0x66,eax
  4085e1:	fadd   DWORD PTR [eax]
  4085e3:	add    BYTE PTR ds:0x5f882166,ah
  4085e9:	sbb    ecx,esp
  4085eb:	or     BYTE PTR [ebp-0x23],0xfd
  4085ef:	and    al,0xc5
  4085f1:	mov    edi,0x8baeb93e
  4085f6:	stos   DWORD PTR es:[edi],eax
  4085f7:	xor    esi,DWORD PTR [ebx]
  4085f9:	test   BYTE PTR [eax-0x11],ah
  4085fc:	mov    esp,0x2cbcf9c6
  408601:	fbstp  TBYTE PTR [edi+0x43]
	...
  408618:	xchg   edi,eax
  408619:	xchg   ebp,eax
  40861a:	xor    edi,edi
  40861c:	pop    ecx
  40861d:	(bad)  
  40861e:	mov    eax,ds:0x40e49cc3
  408623:	stos   BYTE PTR es:[edi],al
  408624:	xchg   edx,eax
  408625:	test   eax,0x13140e8a
  40862a:	mov    ebp,0x118029a7
  40862f:	inc    esi
  408630:	cmp    DWORD PTR [eax+ecx*2+0x3c342c29],eax
  408637:	push   esi
  408638:	inc    edx
  408639:	mov    WORD PTR [edi-0x57],si
  40863d:	xor    edx,DWORD PTR [edx]
  40863f:	cmp    cl,al
  408641:	pop    ebx
  408642:	mov    DWORD PTR [eax],esp
  408644:	cwde   
  408645:	jl     0x408638
  408647:	jae    0x408626
  408649:	push   ebp
  40864a:	sub    al,0x80
  40864c:	out    0xbf,al
  40864e:	fwait
  40864f:	xchg   esi,eax
  408650:	pop    ss
  408651:	loop   0x40869f
  408653:	aas    
  408654:	add    bh,BYTE PTR [ebx-0x1b]
  408657:	inc    ecx
  408658:	pusha  
  408659:	mov    ch,0x8a
  40865b:	ror    BYTE PTR [ecx+0x609d12b1],cl
  408661:	call   0xe15e:0x418378d0
  408668:	into   
  408669:	xchg   esi,eax
  40866a:	repnz cmp al,0x6
  40866d:	popf   
  40866e:	lahf   
  40866f:	dec    esi
  408670:	bound  ecx,QWORD PTR [esi]
  408672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408673:	or     BYTE PTR [ebp-0x65],dl
  408676:	lea    esi,[ebp+0x13]
  408679:	icebp  
  40867a:	fdiv   DWORD PTR [esi]
	...
  408690:	scas   al,BYTE PTR es:[edi]
  408691:	xor    al,0x63
  408693:	sub    bh,BYTE PTR [esi+eiz*4]
  408696:	in     al,0x96
  408698:	rcl    DWORD PTR [edi-0x1d],1
  40869b:	cmc    
  40869c:	aaa    
  40869d:	pop    esp
  40869e:	test   DWORD PTR [edx],edi
  4086a0:	aas    
  4086a1:	jmp    0x4086e0
  4086a3:	(bad)  
  4086a4:	or     ebx,DWORD PTR [ebx-0x33]
  4086a7:	xchg   esi,eax
  4086a8:	sbb    edi,DWORD PTR [esi+ebx*2+0x64]
  4086ac:	mov    ah,0xc2
  4086ae:	pop    es
  4086af:	and    DWORD PTR [esi-0x1e64f311],edx
  4086b5:	mov    esi,0x72ae39ee
  4086ba:	inc    ebx
  4086bb:	clc    
  4086bc:	mov    al,0x22
  4086be:	(bad)  
  4086bf:	dec    eax
  4086c0:	xchg   esp,eax
  4086c1:	dec    ebp
  4086c2:	adc    eax,0x153092f2
  4086c7:	sahf   
  4086c8:	xchg   edx,eax
  4086c9:	sub    dl,BYTE PTR ds:0x153c928f
  4086cf:	or     BYTE PTR [edx+edi*4],dh
  4086d2:	std    
  4086d3:	xor    eax,0x2897a26b
  4086d8:	ficomp DWORD PTR [eax]
  4086da:	pop    edx
  4086db:	mov    dl,0xce
  4086dd:	inc    ecx
  4086de:	mov    cl,0x20
  4086e0:	xchg   bl,ah
  4086e2:	mov    ss,WORD PTR [edi+0xd084bec]
  4086e8:	out    0x69,al
  4086ea:	pop    ds
  4086eb:	test   eax,0x4acb9aaf
  4086f0:	xlat   BYTE PTR ds:[ebx]
  4086f1:	inc    esi
  4086f2:	add    BYTE PTR [ebx+0x0],bh
	...
  408708:	and    DWORD PTR [eax+esi*1+0x327ad265],ebp
  40870f:	xchg   eax,edi
  408711:	fmul   DWORD PTR [eax-0x6788405]
  408717:	aas    
  408718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408719:	mov    esi,0xeb9e810e
  40871e:	jg     0x4086bd
  408720:	adc    eax,0xd0dad8d2
  408725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408726:	test   BYTE PTR [ecx*4+0x3948cf3e],dl
  40872d:	(bad)  
  40872e:	jle    0x408787
  408730:	bound  ebp,QWORD PTR [ebp-0x6574907b]
  408736:	imul   edi,DWORD PTR [ebx+0x2ee941ed],0xffffff8d
  40873d:	mov    eax,0x177a0833
  408742:	sub    al,0x12
  408744:	scas   al,BYTE PTR es:[edi]
  408745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408746:	adc    edx,DWORD PTR [edx]
  408748:	xchg   esi,eax
  408749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40874a:	dec    ebx
  40874b:	adc    bh,BYTE PTR [esi-0x59]
  40874e:	xor    edx,DWORD PTR [edx]
  408750:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  408752:	imul   edx,DWORD PTR [ecx],0xffffffee
  408755:	sub    eax,0xdac91e72
  40875a:	mov    DWORD PTR [eax],0xb4a6d799
  408760:	push   edi
  408761:	jno    0x40873a
  408763:	out    0xf,eax
  408765:	popf   
  408766:	xchg   ebx,eax
  408767:	or     eax,0x41145f3b
	...
  408780:	xchg   edx,eax
  408781:	fdivr  DWORD PTR ds:0xeba7a611
  408787:	adc    ch,BYTE PTR [esi-0x58]
  40878a:	repz adc dh,BYTE PTR [esi-0x58]
  40878e:	or     edx,DWORD PTR [ebx]
  408790:	ds test al,0x13
  408793:	adc    eax,DWORD PTR [esi-0x58]
  408796:	xor    BYTE PTR [edi],dh
  408798:	icebp  
  408799:	xchg   ebp,eax
  40879a:	(bad)  
  40879b:	popf   
  40879c:	addr16 cwde 
  40879e:	add    DWORD PTR [ecx+0x5adcd8fd],ebx
  4087a4:	add    al,dh
  4087a6:	sbb    BYTE PTR ds:[ecx-0x7cc5e410],cl
  4087ad:	add    dh,al
  4087af:	xchg   esi,eax
  4087b0:	adc    al,BYTE PTR [eax+0x32]
  4087b3:	push   ebp
  4087b4:	jo     0x4087e3
  4087b6:	xor    ch,BYTE PTR ds:0x15329d50
  4087bc:	push   eax
  4087bd:	lea    esi,[edx]
  4087bf:	or     eax,0xf5327d50
  4087c4:	dec    edi
  4087c5:	push   esi
  4087c6:	rcr    edx,1
  4087c8:	push   ss
  4087c9:	xchg   edx,eax
  4087ca:	pop    es
  4087cb:	push   esi
  4087cc:	scas   al,BYTE PTR es:[edi]
  4087cd:	ins    BYTE PTR es:[edi],dx
  4087ce:	int3   
  4087cf:	test   DWORD PTR ss:[eax-0x37175d99],ebp
  4087d6:	mov    BYTE PTR ds:0xbd06d3cf,ch
  4087dc:	dec    esi
  4087dd:	(bad)  
  4087de:	xor    al,0x4d
  4087e0:	push   edx
  4087e1:	std    
  4087e2:	xor    al,0x35
	...
  4087f8:	push   edx
  4087f9:	in     eax,dx
  4087fa:	xor    al,0x6d
  4087fc:	jb     0x40885b
  4087fe:	xor    eax,0x354d7275
  408803:	dec    ebp
  408804:	jb     0x4087bb
  408806:	and    bl,bl
  408808:	xchg   edx,eax
  408809:	fild   WORD PTR [ebx]
  40880b:	leave  
  40880c:	or     eax,0x64be8c0
  408811:	aad    0x75
  408813:	mov    ecx,0xfebb68f2
  408818:	cmp    ecx,DWORD PTR [ebx+ebx*4+0x54]
  40881c:	fs lar esi,bp
  408820:	fs int 0x33
  408823:	or     eax,0x1533bd5d
  408828:	push   ebp
  408829:	lods   eax,DWORD PTR ds:[esi]
  40882a:	xor    eax,DWORD PTR [eax]
  40882c:	iret   
  40882d:	fimul  DWORD PTR [ebp+esi*1-0x31]
  408831:	ficomp DWORD PTR [edx+esi*4-0x9]
  408835:	lea    esi,[ebx+edx*8]
  408838:	push   esi
  408839:	sti    
  40883a:	and    al,0xf7
  40883c:	inc    edi
  40883d:	xor    ebp,DWORD PTR [edx+0x62ffa83a]
  408843:	es dec edx
  408845:	test   DWORD PTR [edi-0x734d39a7],edi
  40884b:	inc    edx
  40884c:	iret   
  40884d:	fcmove st,st(4)
  40884f:	xor    eax,0x35dcda4f
  408854:	pop    edi
  408855:	(bad)  
  408857:	xor    eax,0x35fcdc2f
	...
  408870:	paddusw mm1,QWORD PTR [esi+esi*1]
  408874:	loopne 0x4088ee
  408876:	add    ecx,DWORD PTR [ebx-0x3dd83ae4]
  40887c:	sbb    esp,DWORD PTR [eax+0x46]
  40887f:	or     eax,DWORD PTR [ebp+0x5168fd91]
  408885:	and    DWORD PTR [edi-0x53],ebp
  408888:	out    dx,al
  408889:	cmp    DWORD PTR [esp+eax*8+0x58],esi
  40888d:	sahf   
  40888e:	jp     0x4088c6
  408890:	dec    edi
  408891:	fmul   QWORD PTR [esi+esi*1+0x369cdc4f]
  408898:	pop    ds
  408899:	fsubr  QWORD PTR [esi+esi*1+0x37c4dc2f]
  4088a0:	mul    DWORD PTR [ecx-0x33]
  4088a3:	addr16 push cs
  4088a5:	mov    dh,0xd
  4088a7:	xor    dh,BYTE PTR [eax-0x35f632fc]
  4088ad:	test   eax,0x3b998151
  4088b2:	pop    esi
  4088b3:	outs   dx,BYTE PTR ds:[esi]
  4088b4:	dec    esp
  4088b5:	lock cmp al,0xc6
  4088b8:	bound  ebp,QWORD PTR [esi+eiz*2+0x47]
  4088bc:	dec    edx
  4088bd:	fmul   QWORD PTR [esp+eax*2]
  4088c0:	cmp    ah,BYTE PTR [edx+ecx*1]
  4088c3:	push   esp
  4088c4:	cmp    cl,BYTE PTR [edx+ecx*1+0x64]
  4088c8:	sub    dl,BYTE PTR [edx+ecx*1+0xa3c2a74]
  4088cf:	or     DWORD PTR [esi+0xf1cc40],edi
	...
  4088e5:	add    BYTE PTR [eax],al
  4088e7:	add    BYTE PTR [esi+0x7fe17758],ah
  4088ed:	repz push edx
  4088ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088f0:	cmp    eax,edi
  4088f2:	push   ecx
  4088f3:	mov    ecx,eax
  4088f5:	fcomp  st(6)
  4088f7:	cld    
  4088f8:	adc    edx,DWORD PTR [esi+0x79]
  4088fb:	rcl    DWORD PTR [esi-0x2c],cl
  4088fe:	or     esp,esi
  408900:	push   0x7c
  408902:	or     eax,DWORD PTR [ebx+ebx*2]
  408905:	fs std 
  408907:	adc    ebx,DWORD PTR [ebx+0x6c]
  40890a:	std    
  40890b:	and    ecx,DWORD PTR [ebx-0x2c]
  40890e:	sti    
  40890f:	xor    ecx,DWORD PTR [ebx+0x6b]
  408912:	pop    ds
  408913:	rcr    DWORD PTR [ecx+ebp*4+0x4759b45e],0x37
  40891b:	sub    al,0xc7
  40891d:	pop    es
  40891e:	shl    DWORD PTR [edi+0x6c37deff],0x57
  408925:	les    esp,FWORD PTR [edi]
  408927:	mov    dl,0x41
  408929:	ss cld 
  40892b:	mov    ds:0xb3fc148b,eax
  408930:	mov    ebx,DWORD PTR [esp+edi*8]
  408933:	ret    
  408934:	jnp    0x40895a
  408936:	cld    
  408937:	sar    DWORD PTR [ebx+0x4c],cl
  40893a:	cld    
  40893b:	jecxz  0x4089a8
  40893d:	fstp   DWORD PTR [ecx-0x5f]
  408940:	(bad)  
  408942:	loop   0x408948
  408944:	(bad)  
  408945:	fadd   st,st(2)
  408947:	xchg   ebx,eax
  408948:	sbb    BYTE PTR [ebx-0x5e],bh
  40894b:	lea    eax,[eax]
	...
  40895d:	add    BYTE PTR [eax],al
  40895f:	add    BYTE PTR [ebp+ebx*2+0x360fb18e],cl
  408966:	xlat   BYTE PTR ds:[ebx]
  408967:	mov    dh,0xfc
  408969:	mov    eax,0xaf0e0f69
  40896e:	fwait
  40896f:	std    
  408970:	add    DWORD PTR [edi-0x510e023d],ebp
  408976:	stos   DWORD PTR es:[edi],eax
  408977:	std    
  408978:	loope  0x40891d
  40897a:	jae    0x40897a
  40897c:	icebp  
  40897d:	mov    ds:0x68797b,eax
  408982:	xor    ah,BYTE PTR [esi-0x253ac719]
  408988:	aam    0xbf
  40898a:	pop    esi
  40898b:	add    dh,BYTE PTR [eax]
  40898d:	mov    ebp,0x10afb0d7
  408992:	cmp    esi,DWORD PTR [ecx-0x16]
  408995:	outs   dx,DWORD PTR ds:[esi]
  408996:	sub    al,0x38
  408998:	mov    ch,0xa4
  40899a:	repz (bad) 
  40899c:	jno    0x408942
  40899e:	sti    
  40899f:	inc    BYTE PTR [ecx-0x5c]
  4089a2:	add    edi,edi
  4089a4:	push   ecx
  4089a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089a6:	or     edi,edi
  4089a8:	mov    eax,ds:0x25ff33a4
  4089ad:	mov    cl,0x16
  4089af:	pop    es
  4089b0:	jbe    0x408945
  4089b2:	pop    ss
  4089b3:	push   eax
  4089b4:	mov    ds:0xaeb26e3,al
  4089b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ba:	push   es
  4089bb:	dec    edx
  4089bc:	shr    cl,cl
  4089be:	adc    al,0x39
  4089c0:	fwait
  4089c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089c2:	(bad)  
  4089c3:	aad    0x0
	...
  4089d5:	add    BYTE PTR [eax],al
  4089d7:	add    BYTE PTR [ebx-0xc],ah
  4089da:	dec    ebx
  4089db:	(bad)  
  4089dc:	mov    eax,ds:0x91feb3a4
  4089e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089e2:	fwait
  4089e3:	inc    cl
  4089e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089e6:	add    BYTE PTR [ebp+0x6d3a6ca4],al
  4089ec:	pushf  
  4089ed:	fdivr  QWORD PTR [esi-0x7df4a773]
  4089f3:	stc    
  4089f4:	aaa    
  4089f5:	adc    dh,ch
  4089f7:	xchg   esp,eax
  4089f8:	outs   dx,BYTE PTR ds:[esi]
  4089f9:	nop
  4089fa:	arpl   WORD PTR cs:[esi+0x6c91c65c],bp
  408a01:	mov    bl,0x55
  408a03:	pop    ebp
  408a04:	pop    ds
  408a05:	mov    ebx,0xec65f076
  408a0a:	cmp    al,0xad
  408a0c:	pop    ebp
  408a0d:	pop    esp
  408a0e:	cmp    eax,0x3d4c5575
  408a13:	jge    0x408a62
  408a15:	cmp    al,0x3d
  408a17:	inc    ebp
  408a18:	inc    ebp
  408a19:	sub    al,0x3d
  408a1b:	rcl    DWORD PTR [ebx+0x3d],cl
  408a1e:	mov    esp,DWORD PTR [esi-0x1b]
  408a21:	lods   al,BYTE PTR ds:[esi]
  408a22:	or     ebx,edi
  408a24:	add    bl,BYTE PTR [eax+0x7ab5eba2]
  408a2a:	test   BYTE PTR [eax-0x3aea92b3],dh
  408a30:	(bad)
  408a33:	push   ebp
  408a34:	les    edi,FWORD PTR [ebx-0x53fafac5]
  408a3a:	cmp    ecx,DWORD PTR ds:0x0
	...
  408a50:	std    
  408a51:	sbb    edi,DWORD PTR [esi*1+0x1d3c0bf5]
  408a58:	in     eax,dx
  408a59:	sti    
  408a5a:	cmp    eax,DWORD PTR [ebp+0x35]
  408a5d:	and    BYTE PTR [edx-0x42561aaf],0x32
  408a64:	push   es
  408a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a66:	push   edx
  408a67:	mov    ds:0x399ebd9e,eax
  408a6c:	mov    eax,0x23e055aa
  408a71:	test   BYTE PTR [eax+0x0],0x93
  408a75:	lods   al,BYTE PTR ds:[esi]
  408a76:	mov    al,ds:0xe267cf3d
  408a7b:	cmp    eax,0x3df267df
  408a80:	punpckhbw mm0,QWORD PTR [edx]
  408a83:	ds (bad) 
  408a85:	fst    DWORD PTR [esi+edi*1]
  408a88:	(bad)  
  408a89:	fldenv [edi+ebp*8+0x4067f214]
  408a90:	push   edx
  408a91:	repnz push ebx
  408a93:	arpl   WORD PTR [ebx+ecx*4+0x2fd6b2e6],ax
  408a9a:	sahf   
  408a9b:	retf   
  408a9c:	inc    ebx
  408a9d:	ret    0xff1d
  408aa0:	iret   
  408aa1:	mov    eax,ds:0xdbcf4ea5
  408aa6:	xchg   esp,eax
  408aa7:	ds iret 
  408aa9:	(bad)  [esi+edi*1+0x3eb4db9f]
  408ab0:	scas   eax,DWORD PTR es:[edi]
  408ab1:	fcmovnb st,st(4)
  408ab3:	add    BYTE PTR ds:[eax],al
	...
  408ac6:	add    BYTE PTR [eax],al
  408ac8:	outs   dx,DWORD PTR ds:[esi]
  408ac9:	fcmovnbe st,st(4)
  408acb:	cmp    eax,0x5dc7a3b1
  408ad0:	push   eax
  408ad1:	xor    eax,0xf2784f95
  408ad6:	gs pop es
  408ad8:	cmp    al,0x53
  408ada:	push   esp
  408adb:	mov    DWORD PTR [esi+0x527c827d],eax
  408ae1:	xor    DWORD PTR [eax+0x12],0xffffffa3
  408ae5:	fadd   DWORD PTR [edi+edi*1+0x2f]
  408ae9:	fcom   DWORD PTR [edi+edi*1+0x4f]
  408aed:	fsub   DWORD PTR [edi+edi*1-0x61]
  408af1:	fdiv   DWORD PTR [edi+edi*1-0x71]
  408af5:	fadd   DWORD PTR [edi+edi*1+0x1cdf95c7]
  408afc:	xor    BYTE PTR [ecx+0x2],0xc6
  408b00:	bound  edx,QWORD PTR [edi-0x29]
  408b03:	lea    edx,[ecx]
  408b05:	ficomp DWORD PTR ds:0xb1e77608
  408b0b:	gs mov eax,0x46c0e3d3
  408b11:	adc    al,0xc6
  408b13:	call   FWORD PTR [ebp+0x520bf27c]
  408b19:	repnz sbb edx,DWORD PTR fs:[edx-0x24]
  408b1e:	hlt    
  408b1f:	sub    edx,DWORD PTR [edx-0x3c]
  408b22:	hlt    
  408b23:	cmp    esi,DWORD PTR [edx]
  408b25:	cmp    al,0x76
  408b27:	sub    eax,0x444f44c8
	...
  408b40:	aam    0xca
  408b42:	mov    edi,0x475ab9a0
  408b47:	mov    BYTE PTR [esp+edi*1-0x65f2d8ea],bh
  408b4e:	mov    esi,0x57061098
  408b53:	adc    DWORD PTR [edx+0x72bbf204],0x35fff1bc
  408b5d:	jo     0x408b11
  408b5f:	jmp    FWORD PTR ds:0x6200029c
  408b65:	call   0xaa62c996
  408b6a:	lea    eax,[ecx+0x175448f]
  408b70:	pop    DWORD PTR [ecx+0x50ad8a81]
  408b76:	pop    eax
  408b77:	cmp    edi,DWORD PTR [edx-0x25]
  408b7a:	adc    al,0xb4
  408b7c:	xchg   edx,eax
  408b7d:	inc    eax
  408b7e:	sti    
  408b7f:	push   0xaac3a1e1
  408b84:	or     eax,0xdccb06e1
  408b89:	stos   BYTE PTR es:[edi],al
  408b8a:	imul   edx,DWORD PTR [ecx-0x6d272666],0x457d4998
  408b94:	or     DWORD PTR [eax-0x5a8b6cbf],0x22
  408b9b:	or     al,0x32
  408b9d:	jmp    0x408b8a
  408b9f:	outs   dx,DWORD PTR ds:[esi]
  408ba0:	push   es
  408ba1:	ror    DWORD PTR [eax],cl
  408ba3:	adc    eax,DWORD PTR [eax]
	...
  408bb5:	add    BYTE PTR [eax],al
  408bb7:	add    BYTE PTR [esp+ebp*8+0x1b],dl
  408bbb:	pushf  
  408bbc:	fbstp  TBYTE PTR [edx+0x5e4fe778]
  408bc2:	mov    ch,0xcd
  408bc4:	cmc    
  408bc5:	jb     0x408b74
  408bc7:	mov    edx,0xaa90d055
  408bcc:	jne    0x408bc1
  408bce:	xchg   BYTE PTR [ebp+0x4049d227],dh
  408bd4:	jns    0x408b58
  408bd6:	xchg   edi,eax
  408bd7:	ins    BYTE PTR es:[edi],dx
  408bd8:	and    BYTE PTR [esi-0x1],bh
  408bdb:	mov    ds:0x790eb3d7,al
  408be0:	int    0x72
  408be2:	cld    
  408be3:	mov    ebp,0xc18e7fa4
  408be8:	adc    al,0xbb
  408bea:	sub    al,0x98
  408bec:	push   ss
  408bed:	xchg   DWORD PTR [ebp-0x73560763],ebx
  408bf3:	inc    esp
  408bf4:	retf   0xfdb1
  408bf7:	sqrtps xmm0,XMMWORD PTR [ebx]
  408bfa:	xor    al,0xdc
  408bfc:	jge    0x408c37
  408bfe:	js     0x408be6
  408c00:	ja     0x408bff
  408c02:	repz cmp dl,BYTE PTR [eax]
  408c05:	cmpxchg DWORD PTR [edx+0x674e3ff5],edx
  408c0c:	pop    ds
  408c0d:	inc    edx
  408c0e:	xchg   ebp,eax
  408c0f:	xor    eax,0xcd483b32
  408c14:	or     eax,esi
  408c16:	push   ecx
  408c17:	inc    ebx
  408c18:	pop    ebx
  408c19:	inc    ebp
  408c1a:	add    DWORD PTR [edi+0x0],edx
	...
  408c30:	mov    dl,0x3a
  408c32:	retf   
  408c33:	jecxz  0x408c27
  408c35:	shl    edx,cl
  408c37:	jo     0x408c14
  408c39:	mov    BYTE PTR [ebx+esi*4+0x53],dh
  408c3d:	adc    BYTE PTR [ecx+0x10],cl
  408c40:	sbb    BYTE PTR [edx+0x38],0xd7
  408c44:	lahf   
  408c45:	(bad)  
  408c46:	loop   0x408c66
  408c48:	xor    ecx,DWORD PTR [esi+0xf1ebc2f]
  408c4e:	push   ebx
  408c4f:	mov    ss,ebx
  408c51:	xor    ebx,DWORD PTR [ecx-0x13e88ec8]
  408c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c58:	test   bl,bl
  408c5a:	xchg   edx,eax
  408c5b:	(bad)  
  408c5c:	out    dx,eax
  408c5d:	mov    edi,0x6e1163ba
  408c62:	push   esi
  408c63:	sub    eax,0x3ae6b8e5
  408c68:	jecxz  0x408ccc
  408c6a:	xor    BYTE PTR [ecx+0x2e2e1272],0xe2
  408c71:	fstp   QWORD PTR [esi-0x32]
  408c74:	sbb    eax,0x8fcfe3f2
  408c79:	ja     0x408c9b
  408c7b:	ja     0x408c0d
  408c7d:	shl    DWORD PTR [ebx-0x11759f7e],0x5a
  408c84:	jb     0x408ce4
  408c86:	(bad)  
  408c87:	lds    esi,FWORD PTR [edi-0x33]
  408c8a:	out    0xac,al
  408c8c:	sbb    bl,BYTE PTR [edi-0x56603a78]
  408c92:	xchg   edx,eax
  408c93:	aad    0x0
	...
  408ca5:	add    BYTE PTR [eax],al
  408ca7:	add    BYTE PTR [ebx+edi*1+0x6cb0c3cd],bh
  408cae:	mov    ecx,0xa6588e25
  408cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cb4:	sbb    DWORD PTR [ecx+0x168590b6],esi
  408cba:	aam    0x0
  408cbc:	fbstp  TBYTE PTR [esi]
  408cbe:	and    eax,edi
  408cc0:	clc    
  408cc1:	ss adc al,0x1f
  408cc4:	sbb    BYTE PTR [edi-0x17],cl
  408cc7:	jne    0x408c77
  408cc9:	les    ebp,FWORD PTR [ecx-0x40341cc4]
  408ccf:	repnz dec edx
  408cd1:	sbb    BYTE PTR [ebx+0x27],bh
  408cd4:	shr    BYTE PTR [ebx+0x3a],0xef
  408cd8:	retf   0xd9
  408cdb:	add    BYTE PTR [ebx-0x46ffff29],bh
  408ce1:	fld    DWORD PTR [eax]
  408ce3:	add    BYTE PTR [ecx-0x75ffff29],cl
  408ce9:	(bad)  
  408cea:	add    BYTE PTR [eax],al
  408cec:	jg     0x408cc5
  408cee:	add    BYTE PTR [eax],al
  408cf0:	jns    0x408cc8
  408cf2:	add    BYTE PTR [eax],al
  408cf4:	(bad)  
  408cf5:	xlat   BYTE PTR ds:[ebx]
  408cf6:	add    BYTE PTR [eax],al
  408cf8:	mov    edx,edi
  408cfa:	add    BYTE PTR [eax],al
  408cfc:	jae    0x408ca2
  408cfe:	add    BYTE PTR [eax],al
  408d00:	jae    0x408cd9
  408d02:	add    BYTE PTR [eax],al
  408d04:	inc    edx
  408d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d06:	add    BYTE PTR [eax],al
  408d08:	inc    edx
  408d09:	xlat   BYTE PTR ds:[ebx]
	...
  408d1e:	add    BYTE PTR [eax],al
  408d20:	push   eax
  408d21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d22:	add    BYTE PTR [eax],al
  408d24:	aaa    
  408d25:	xlat   BYTE PTR ds:[ebx]
  408d26:	add    BYTE PTR [eax],al
  408d28:	inc    esi
  408d29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d2a:	add    BYTE PTR [eax],al
  408d2c:	push   ss
  408d2d:	xlat   BYTE PTR ds:[ebx]
  408d2e:	add    BYTE PTR [eax],al
  408d30:	or     BYTE PTR [esi-0x28f80000],ah
  408d36:	add    BYTE PTR [eax],al
  408d38:	xor    BYTE PTR [esi-0x28d00000],ah
  408d3e:	add    BYTE PTR [eax],al
  408d40:	add    al,0xa6
  408d42:	add    BYTE PTR [eax],al
  408d44:	push   ebp
  408d45:	(bad)  
  408d46:	add    BYTE PTR [eax],al
  408d48:	bound  esp,QWORD PTR [eax-0x239dffc5]
  408d4e:	add    DWORD PTR [eax],eax
  408d50:	(bad)  
  408d52:	cmp    eax,DWORD PTR [eax]
  408d54:	(bad)  
  408d55:	fld    QWORD PTR [ecx]
  408d57:	add    BYTE PTR [edx-0x42],ah
  408d5a:	cmp    eax,DWORD PTR [eax]
  408d5c:	(bad)  
  408d5d:	fiadd  DWORD PTR [ecx]
  408d5f:	add    BYTE PTR [edx-0x61],ah
  408d62:	cmp    eax,DWORD PTR [eax]
  408d64:	bound  ebx,QWORD PTR [ebx-0x5b9dfffd]
  408d6a:	cmp    eax,DWORD PTR [eax]
  408d6c:	bound  ebx,QWORD PTR [eax-0x3a9dfffd]
  408d72:	cmp    eax,DWORD PTR [eax]
  408d74:	bound  edx,QWORD PTR [ecx-0x3d9dfffd]
  408d7a:	cmp    eax,DWORD PTR [eax]
  408d7c:	bound  ecx,QWORD PTR [esi+0x23620003]
  408d82:	cmp    eax,0x0
	...
  408d97:	add    BYTE PTR [edx-0x31],ah
  408d9a:	add    DWORD PTR [eax],eax
  408d9c:	bound  edx,QWORD PTR [eax-0x269dffc3]
  408da2:	add    al,0x0
  408da4:	bound  edx,QWORD PTR [ecx-0x2b9dffc3]
  408daa:	add    al,0x0
  408dac:	bound  ecx,QWORD PTR [esi-0x289dffc3]
  408db2:	add    al,0x0
  408db4:	bound  ecx,QWORD PTR [edi+0x3d]
  408db7:	add    BYTE PTR [edx-0x6b],ah
  408dba:	add    eax,DWORD PTR [eax]
  408dbc:	bound  edx,QWORD PTR [esi+0x3d]
  408dbf:	add    BYTE PTR [edx+0x23],ah
  408dc2:	add    al,BYTE PTR [eax]
  408dc4:	bound  eax,QWORD PTR [edi+0x3d]
  408dc7:	add    BYTE PTR [edx+0x6f],ah
  408dca:	add    eax,DWORD PTR [eax]
  408dcc:	(bad)  
  408dcd:	lock cmp al,0x0
  408dd0:	bound  edx,QWORD PTR [eax-0x269dfffe]
  408dd6:	jo     0x408e13
  408dd8:	(bad)  
  408dd9:	f2xm1  
  408ddb:	add    esp,DWORD PTR [edx-0x27]
  408dde:	cmp    esp,DWORD PTR fs:[edx-0x27]
  408de2:	fadd   QWORD PTR [edx+eiz*2]
  408de5:	fstp   DWORD PTR [eax+0x3b]
  408de8:	(bad)  
  408de9:	fnstenv [edi]
  408deb:	add    al,0x62
  408ded:	fstp   DWORD PTR [ecx+0x3b]
  408df0:	(bad)  
  408df1:	fnstcw WORD PTR [eax]
  408df3:	add    al,0x62
  408df5:	fnstcw WORD PTR [edx+0x3b]
  408df8:	(bad)  
  408df9:	fstp   DWORD PTR [ecx]
  408dfb:	add    al,0x0
	...
  408e0d:	add    BYTE PTR [eax],al
  408e0f:	add    BYTE PTR [edx-0x27],ah
  408e12:	jnp    0x408e4f
  408e14:	(bad)  
  408e15:	fstp   DWORD PTR [edx]
  408e17:	add    al,0x62
  408e19:	fstp   DWORD PTR [ebx+edi*1+0x62]
  408e1d:	fld    st(3)
  408e1f:	add    esp,DWORD PTR [edx-0x27]
  408e22:	pop    ebp
  408e23:	cmp    esp,DWORD PTR [edx-0x27]
  408e26:	les    eax,FWORD PTR [ebx]
  408e28:	(bad)  
  408e29:	fnstcw WORD PTR [esi+0x3b]
  408e2c:	(bad)  
  408e2d:	fld    DWORD PTR ds:0x6fd96204
  408e33:	cmp    esp,DWORD PTR [edx-0x27]
  408e36:	push   es
  408e37:	add    al,0x62
  408e39:	fldenv [eax+0x3b]
  408e3c:	(bad)  
  408e3d:	(bad)  [edi]
  408e3f:	add    al,0x62
  408e41:	fst    DWORD PTR [ebx+0x3b]
  408e44:	(bad)  
  408e45:	(bad)  [edx]
  408e47:	add    al,0x62
  408e49:	fld    DWORD PTR [ecx-0x37269dc5]
  408e4f:	add    esp,DWORD PTR [edx-0x27]
  408e52:	jb     0x408e8f
  408e54:	(bad)  
  408e55:	fxch   st(1)
  408e57:	add    esp,DWORD PTR [edx-0x27]
  408e5a:	cmp    esp,DWORD PTR fs:[edx-0x27]
  408e5e:	jmp    0x408e63
  408e60:	(bad)  
  408e61:	fld    DWORD PTR [eax]
  408e63:	push   edi
  408e64:	pop    ecx
  408e65:	fld    DWORD PTR [eax]
  408e67:	mov    esp,0x8600d961
  408e6c:	dec    eax
  408e6d:	fld    DWORD PTR [eax]
  408e6f:	pcmpgtd mm3,mm1
  408e72:	add    BYTE PTR [ebx+0x0],al
	...
  408e88:	cmp    cl,bl
  408e8a:	add    BYTE PTR [ebx+0x66],al
  408e8d:	fld    DWORD PTR [eax]
  408e8f:	xchg   edx,eax
  408e90:	sub    cl,bl
  408e92:	add    BYTE PTR [edx+0x66],dl
  408e95:	fld    DWORD PTR [eax]
  408e97:	test   DWORD PTR [eax+0x663d00d9],ebx
  408e9d:	fld    DWORD PTR [eax]
  408e9f:	push   esp
  408ea0:	mov    cl,bl
  408ea2:	add    BYTE PTR [esi+eiz*2],cl
  408ea5:	fld    DWORD PTR [eax]
  408ea7:	inc    edi
  408ea8:	js     0x408e83
  408eaa:	add    bh,bh
  408eac:	popa   
  408ead:	fld    DWORD PTR [eax]
  408eaf:	push   esi
  408eb0:	push   0x670e00d9
  408eb5:	fld    DWORD PTR [eax]
  408eb7:	cmp    DWORD PTR [eax-0x27],ebx
  408eba:	add    BYTE PTR [ecx],cl
  408ebc:	data16 fld DWORD PTR [eax]
  408ebf:	cwde   
  408ec0:	dec    eax
  408ec1:	fld    DWORD PTR [eax]
  408ec3:	enter  0xd961,0x0
  408ec7:	fwait
  408ec8:	cmp    cl,bl
  408eca:	add    bl,cl
  408ecc:	popa   
  408ecd:	fld    DWORD PTR [eax]
  408ecf:	jp     0x408ef9
  408ed1:	fld    DWORD PTR [eax]
  408ed3:	retf   0xd961
  408ed6:	add    BYTE PTR [ebp-0x68],bh
  408ed9:	fld    DWORD PTR [eax]
  408edb:	lds    esp,FWORD PTR [ecx-0x27]
  408ede:	add    BYTE PTR [eax+ecx*4-0x27],bl
  408ee2:	add    BYTE PTR [ecx+eiz*2+0x785f00d9],al
  408ee9:	fld    DWORD PTR [eax]
  408eeb:	xchg   DWORD PTR [eax],eax
	...
  408efd:	add    BYTE PTR [eax],al
  408eff:	add    BYTE PTR [ecx-0x27],ah
  408f02:	add    BYTE PTR [eax],al
  408f04:	mov    fs:0xdbe40000,eax
  408f0a:	add    BYTE PTR [eax],al
  408f0c:	push   ebx
  408f0d:	mov    ds:0xdbe30000,eax
  408f12:	add    BYTE PTR [eax],al
  408f14:	ret    0xa1
  408f17:	add    BYTE PTR [edx-0x32ffff2b],dl
  408f1d:	mov    eax,ds:0xd58b0000
  408f22:	add    BYTE PTR [eax],al
  408f24:	fsub   QWORD PTR [ecx-0x2a660000]
  408f2a:	add    BYTE PTR [eax],al
  408f2c:	or     esp,DWORD PTR [edx-0x2a770000]
  408f32:	add    BYTE PTR [eax],al
  408f34:	cli    
  408f35:	mov    eax,ds:0xd5580000
  408f3a:	add    BYTE PTR [eax],al
  408f3c:	or     DWORD PTR [edx-0x2aa90000],esp
  408f42:	add    BYTE PTR [eax],al
  408f44:	clc    
  408f45:	mov    eax,ds:0xdb960000
  408f4a:	add    BYTE PTR [eax],al
  408f4c:	(bad)  
  408f4d:	mov    eax,ds:0xdb950000
  408f52:	add    BYTE PTR [eax],al
  408f54:	mov    ss:0xdb940000,al
  408f5a:	add    BYTE PTR [eax],al
  408f5c:	inc    ebp
  408f5d:	mov    ds:0xdb930000,al
	...
  408f76:	add    BYTE PTR [eax],al
  408f78:	xor    al,0xa2
  408f7a:	add    BYTE PTR [eax],al
  408f7c:	and    bl,bl
  408f7e:	add    BYTE PTR [eax],al
  408f80:	and    DWORD PTR [eax-0x24ef0000],0x0
  408f87:	add    BYTE PTR [edx+0xa0],dl
  408f8d:	fild   DWORD PTR [eax]
  408f8f:	add    BYTE PTR [edx-0x46],ah
  408f92:	aaa    
  408f93:	add    BYTE PTR [edx+0x4c],ah
  408f96:	add    al,BYTE PTR [eax]
  408f98:	bound  ebp,QWORD PTR [ebx-0x229dffc9]
  408f9e:	add    DWORD PTR [eax],eax
  408fa0:	bound  esi,QWORD PTR [edi+esi*1+0x1ee6200]
  408fa7:	add    BYTE PTR [edx+0x25],ah
  408faa:	cmp    DWORD PTR [eax],eax
  408fac:	(bad)  
  408fad:	inc    DWORD PTR [eax+eax*1]
  408fb0:	bound  esi,QWORD PTR [esi]
  408fb2:	cmp    DWORD PTR [eax],eax
  408fb4:	(bad)  
  408fb5:	lock add DWORD PTR [eax],eax
  408fb8:	bound  esp,QWORD PTR [edi]
  408fba:	cmp    DWORD PTR [eax],eax
  408fbc:	(bad)  
  408fbe:	add    DWORD PTR [eax],eax
  408fc0:	bound  eax,QWORD PTR [eax+0x39]
  408fc3:	add    BYTE PTR [edx-0xe],ah
  408fc6:	add    DWORD PTR [eax],eax
  408fc8:	bound  esp,QWORD PTR [ecx]
  408fca:	cmp    DWORD PTR [eax],eax
  408fcc:	(bad)  
  408fce:	add    DWORD PTR [eax],eax
  408fd0:	bound  esp,QWORD PTR [edx]
  408fd2:	cmp    DWORD PTR [eax],eax
  408fd4:	(bad)  
  408fd5:	hlt    
  408fd6:	add    DWORD PTR [eax],eax
  408fd8:	bound  eax,QWORD PTR [ebx+0x39]
	...
  408fef:	add    BYTE PTR [edx-0xb],ah
  408ff2:	add    DWORD PTR [eax],eax
  408ff4:	bound  edi,QWORD PTR [ecx+edi*1]
  408ff7:	add    BYTE PTR [edx-0xa],ah
  408ffa:	add    DWORD PTR [eax],eax
  408ffc:	bound  ebx,QWORD PTR [ebp-0x89dffc8]
  409002:	add    DWORD PTR [eax],eax
  409004:	bound  edx,QWORD PTR [ecx]
  409006:	cmp    DWORD PTR [eax],eax
  409008:	bound  edx,QWORD PTR [eax+0x2]
  40900b:	add    BYTE PTR [edx+0x12],ah
  40900e:	cmp    DWORD PTR [eax],eax
  409010:	bound  edx,QWORD PTR [ecx+0x2]
  409013:	add    BYTE PTR [edx+0x13],ah
  409016:	cmp    DWORD PTR [eax],eax
  409018:	bound  edx,QWORD PTR [edx+0x2]
  40901b:	add    BYTE PTR [edx-0x27],ah
  40901e:	or     edi,DWORD PTR [eax]
  409020:	(bad)  
  409021:	(bad)  [edx+0x2]
  409024:	(bad)  
  409025:	fld    DWORD PTR [eax]
  409027:	cmp    BYTE PTR [edx-0x27],ah
  40902a:	inc    ebx
  40902b:	add    esp,DWORD PTR [edx-0x27]
  40902e:	adc    DWORD PTR [eax],edi
  409030:	(bad)  
  409031:	fld    DWORD PTR [edx+eax*1+0x62]
  409035:	fld    DWORD PTR [edx]
  409037:	cmp    BYTE PTR [edx-0x27],ah
  40903a:	xchg   edx,eax
  40903b:	add    esp,DWORD PTR [edx-0x27]
  40903e:	shl    DWORD PTR [edi],cl
  409040:	(bad)  
  409041:	fnstcw WORD PTR [ebx]
  409043:	add    al,0x62
  409045:	(bad)  [esi+0x37]
  409048:	(bad)  
  409049:	fldcw  WORD PTR [esp+eax*1]
  40904c:	(bad)  
  40904d:	(bad)  [eax-0x762799fb]
  409053:	add    eax,0x0
	...
  409068:	mov    edx,0x23058ada
  40906d:	fadd   DWORD PTR [ebp+eax*1+0x54dd887]
  409074:	sbb    al,bl
  409076:	push   eax
  409077:	add    eax,0x541d842
  40907c:	or     al,0xd8
  40907e:	inc    edx
  40907f:	add    eax,0x553d83e
  409084:	sbb    ebx,eax
  409086:	dec    ebp
  409087:	add    eax,0x546d817
  40908c:	or     eax,ebx
  40908e:	cmp    BYTE PTR ds:0x599d85f,al
  409094:	cdq    
  409095:	ficomp DWORD PTR [edx-0x6327dffb]
  40909b:	add    eax,0x595d82c
  4090a0:	or     eax,ebx
  4090a2:	jle    0x4090a9
  4090a4:	and    eax,0xc30580d8
  4090a9:	fiadd  DWORD PTR [eax]
  4090ab:	jae    0x409114
  4090ad:	cld    
  4090ae:	push   DWORD PTR [ecx+0x5f]
  4090b1:	idiv   bh
  4090b3:	fs addr16 (bad) 
  4090b7:	pop    ebx
  4090b8:	pop    edi
  4090b9:	jle    0x4090be
  4090bb:	push   edi
  4090bc:	addr16 (bad) 
  4090bf:	dec    ebp
  4090c0:	pop    edi
  4090c1:	(bad)  
  4090c3:	sub    BYTE PTR [edi+0x5],ah
  4090c6:	add    BYTE PTR [edx],ch
  4090c8:	pop    edi
  4090c9:	xlat   BYTE PTR ds:[ebx]
  4090ca:	jmp    FWORD PTR [ebx]
	...
  4090e0:	addr16 mov ds:0x26ff,al
  4090e4:	pop    edi
  4090e5:	sar    edi,cl
  4090e7:	mov    al,0x66
  4090e9:	int    0xff
  4090eb:	mov    dl,0x5e
  4090ed:	sar    edi,0xa4
  4090f0:	mov    di,0x9dff
  4090f4:	pop    esi
  4090f5:	retf   
  4090f6:	call   FWORD PTR [eax-0x6800369a]
  4090fc:	pop    esi
  4090fd:	sbb    BYTE PTR [eax],al
  4090ff:	fwait
  409100:	data16 adc al,0x0
  409103:	xchg   esp,eax
  409104:	pop    esi
  409105:	or     DWORD PTR [eax],eax
  409107:	shl    DWORD PTR [esi+0x1],0x0
  40910b:	rcr    BYTE PTR [esi-0x15],0xff
  40910f:	mov    cl,0x66
  409111:	jmp    0xf79f4015
  409116:	dec    DWORD PTR [eax-0x75fff99a]
  40911c:	pop    esi
  40911d:	fdivr  st,st(7)
  40911f:	mov    esp,DWORD PTR [esi-0x61]
  409122:	inc    DWORD PTR [esi+0x50ffd45e]
  409128:	data16 into 
  40912a:	call   DWORD PTR [edx+0x5e]
  40912d:	ret    0x44ff
  409130:	data16 sar bh,0x3d
  409134:	pop    esi
  409135:	int3   
  409136:	(bad)  
  409137:	call   FWORD PTR [ebx-0x65fef02b]
  40913d:	aad    0x44
  40913f:	add    DWORD PTR [ecx+0x148d5],ecx
	...
  409155:	add    BYTE PTR [eax],al
  409157:	add    BYTE PTR [esi-0x7cfeb02b],cl
  40915d:	aad    0x57
  40915f:	add    DWORD PTR [edx+0x50016dd5],eax
  409165:	aad    0x6f
  409167:	add    DWORD PTR [ebp-0x2b],edx
  40916a:	popa   
  40916b:	add    DWORD PTR [ebp+edx*8-0x29],esp
  40916f:	add    ch,BYTE PTR [edx-0x62fed926]
  409175:	fisub  DWORD PTR [ecx+eax*1]
  409178:	mov    ds:0xd00130da,al
  40917d:	(bad)  
  40917e:	push   ds
  40917f:	add    edi,esp
  409181:	(bad)  
  409182:	xor    al,0x1
  409184:	retf   0x25d6
  409187:	add    ebp,ecx
  409189:	(bad)  
  40918a:	and    eax,DWORD PTR [ecx]
  40918c:	loop   0x409164
  40918e:	das    
  40918f:	add    eax,esp
  409191:	(bad)  
  409192:	sbb    eax,0x33d75701
  409197:	add    esi,edi
  409199:	(bad)  
  40919a:	or     al,BYTE PTR [ecx]
  40919c:	or     eax,0xee0108d7
  4091a1:	(bad)  
  4091a2:	and    BYTE PTR [ecx],al
  4091a4:	repz (bad) 
  4091a6:	sbb    al,0x1
  4091a8:	not    dh
  4091aa:	ins    BYTE PTR es:[edi],dx
  4091ab:	add    ebp,eax
  4091ad:	(bad)  
  4091ae:	pop    esp
  4091af:	add    esi,ebx
  4091b1:	(bad)  
  4091b2:	or     DWORD PTR [ecx],eax
  4091b4:	fst    st(6)
  4091b6:	pop    es
  4091b7:	add    DWORD PTR [esi],ecx
  4091b9:	xlat   BYTE PTR ds:[ebx]
  4091ba:	pop    ds
  4091bb:	add    DWORD PTR [eax],eax
	...
  4091cd:	add    BYTE PTR [eax],al
  4091cf:	add    BYTE PTR [ebx],al
  4091d1:	xlat   BYTE PTR ds:[ebx]
  4091d2:	sbb    eax,DWORD PTR [ecx]
  4091d4:	push   ss
  4091d5:	xlat   BYTE PTR ds:[ebx]
  4091d6:	imul   eax,DWORD PTR [ecx],0x62
  4091d9:	add    al,0x3
  4091db:	pop    ebp
  4091dc:	arpl   WORD PTR [eax+0x0],dx
  4091df:	cmp    BYTE PTR [ebx+0x4f],ah
  4091e2:	add    BYTE PTR [esi+0x63],dl
  4091e5:	push   ebp
  4091e6:	add    BYTE PTR [eax],ch
  4091e8:	arpl   WORD PTR [edx+0x0],cx
  4091eb:	cmp    esp,DWORD PTR [ebx+0x56]
  4091ee:	add    BYTE PTR [edx],dl
  4091f0:	arpl   WORD PTR [edi],ax
  4091f2:	add    BYTE PTR [edx],ah
  4091f4:	arpl   WORD PTR [eax+eax*1],cx
  4091f7:	data16 arpl di,di
  4091fa:	call   DWORD PTR [esi+0x63]
  4091fd:	add    eax,0x9a632900
  409202:	(bad)  
  409203:	cmp    esp,DWORD PTR [ebx+0x16]
  409206:	add    BYTE PTR [ebx],dl
  409208:	arpl   WORD PTR [edi-0x539cdd01],sp
  40920e:	jmp    DWORD PTR [esi+0x63]
  409211:	xor    eax,0x3b634a01
  409216:	add    DWORD PTR [ebx+0x63],ecx
  409219:	xor    BYTE PTR [ecx],al
  40921b:	add    BYTE PTR [ebx+0x33],ah
  40921e:	add    DWORD PTR [esi],ebp
  409220:	arpl   WORD PTR [ecx+eax*1],sp
  409223:	push   ss
  409224:	arpl   WORD PTR [ebx],bp
  409226:	add    DWORD PTR [edx],ebp
  409228:	arpl   WORD PTR [ecx+0x1],ax
  40922b:	inc    ebp
  40922c:	arpl   WORD PTR [esi],di
  40922e:	add    DWORD PTR [ebx+eiz*2+0x1f],ecx
  409232:	add    DWORD PTR [esi],esi
	...
  409248:	arpl   WORD PTR [ecx+0x25637201],bx
  40924e:	add    DWORD PTR [eax+0x63],ebp
  409251:	sub    al,BYTE PTR [ecx]
  409253:	push   0x63
  409255:	push   eax
  409256:	add    DWORD PTR [ecx],eax
  409258:	arpl   WORD PTR [ebx+0x1],dx
  40925b:	das    
  40925c:	arpl   WORD PTR [ecx+eax*1+0x17],dx
  409260:	arpl   bx,bx
  409262:	add    BYTE PTR [ebx],ch
  409264:	arpl   cx,bx
  409266:	pop    eax
  409267:	add    BYTE PTR [eax+ebx*8],bl
  40926a:	pop    ecx
  40926b:	add    BYTE PTR [edi],bl
  40926d:	fcomp  DWORD PTR [edx+0x0]
  409270:	sub    eax,0xd10050d8
  409275:	fadd   DWORD PTR [eax+eax*1-0x35]
  409279:	fdivr  DWORD PTR ds:0xb5d8b900
  40927f:	inc    DWORD PTR [edi+0x63ff88b9]
  409285:	test   eax,0xa969ff49
  40928a:	dec    edx
  40928b:	call   FWORD PTR [esi-0x57]
  40928e:	dec    ebx
  40928f:	jmp    DWORD PTR [edx-0x57]
  409292:	inc    esp
  409293:	call   FWORD PTR [eax]
  409295:	test   eax,0xa913ff4d
  40929a:	inc    esi
  40929b:	inc    edx
  40929d:	test   al,0x3f
  40929f:	inc    eax
  4092a1:	test   al,0x40
  4092a3:	inc    esi
  4092a5:	test   al,0x91
  4092a7:	or     BYTE PTR [ebp+0x892a8],bh
	...
  4092bd:	add    BYTE PTR [eax],al
  4092bf:	add    BYTE PTR [ebx+0x10883a8],bh
  4092c5:	test   eax,0xa8c7087c
  4092ca:	xchg   ebp,eax
  4092cb:	or     BYTE PTR [ebp-0x5ef77158],bh
  4092d1:	test   al,0x77
  4092d3:	or     dh,al
  4092d5:	test   al,0x78
  4092d7:	or     BYTE PTR [eax],al
  4092d9:	test   eax,0xa8fe0859
  4092de:	pop    edx
  4092df:	or     BYTE PTR [ecx+ebp*4],al
  4092e2:	pop    ebx
  4092e3:	or     dl,bh
  4092e5:	test   al,0x54
  4092e7:	or     al,cl
  4092e9:	test   al,0x3d
  4092eb:	or     cl,cl
  4092ed:	test   al,0x36
  4092ef:	or     BYTE PTR [edi+0x5a3100a8],bh
  4092f5:	sub    dh,BYTE PTR [ecx]
  4092f7:	xor    BYTE PTR [edx+0x28],ch
  4092fa:	xor    DWORD PTR [ebx-0x5dced996],esp
  409300:	pop    edx
  409301:	and    al,0x31
  409303:	xchg   ebp,eax
  409304:	pop    edx
  409305:	and    dh,BYTE PTR [ecx]
  409307:	mov    WORD PTR [edx-0x6e],gs
  40930a:	xor    DWORD PTR [edi+0x7e31946a],eax
  409310:	pop    edx
  409311:	xchg   esi,eax
  409312:	xor    DWORD PTR [ecx],ebp
  409314:	pop    edx
  409315:	cwde   
  409316:	xor    DWORD PTR [eax],ebp
  409318:	push   0x1a
  40931a:	xor    DWORD PTR [ebx],ebp
  40931c:	push   0x1d
  40931e:	xor    DWORD PTR [edx],ebp
  409320:	pop    edx
  409321:	pop    ds
  409322:	xor    DWORD PTR ds:0x0,ebp
	...
  409338:	pop    edx
  409339:	and    DWORD PTR [ecx],esi
  40933b:	and    al,0x6a
  40933d:	and    esi,DWORD PTR [ecx]
  40933f:	das    
  409340:	push   0x24
  409342:	xor    DWORD PTR [esi],esp
  409344:	pop    edx
  409345:	and    eax,0x265a2131
  40934a:	xor    DWORD PTR [eax],esp
  40934c:	push   0x27
  40934e:	xor    DWORD PTR [ebx-0x4dced7a3],esi
  409354:	sub    esi,DWORD PTR gs:[ecx]
  409357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409358:	pop    ebp
  409359:	xor    DWORD PTR cs:[ebp+eiz*2+0x5db73131],ebx
  409361:	xor    al,0x31
  409363:	scas   al,BYTE PTR es:[edi]
  409364:	gs aaa 
  409366:	xor    DWORD PTR [ecx-0x67cec7a3],ebx
  40936c:	cmp    DWORD PTR gs:[ecx],esi
  40936f:	mov    ebx,0xba313a5d
  409374:	cmp    esi,DWORD PTR gs:[ecx]
  409377:	mov    ebp,0xb4313d5d
  40937c:	gs aas 
  40937e:	xor    DWORD PTR [eax],eax
  409380:	cmc    
  409381:	loopne 0x40936b
  409383:	xor    ah,dh
  409385:	loopne 0x40936e
  409387:	xor    bl,dh
  409389:	loopne 0x409375
  40938b:	xor    dl,dl
  40938d:	loopne 0x409378
  40938f:	xor    BYTE PTR [ecx],ah
  409391:	loopne 0x40937f
  409393:	xor    BYTE PTR [eax],ah
  409395:	loopne 0x409382
  409397:	xor    BYTE PTR [edi],ch
  409399:	loopne 0x409388
  40939b:	xor    BYTE PTR [eax],al
	...
  4093ad:	add    BYTE PTR [eax],al
  4093af:	add    BYTE PTR [esi+0x7d30f1e0],cl
  4093b5:	loopne 0x409350
  4093b7:	xor    BYTE PTR [eax+eiz*8-0x64],ch
  4093bb:	xor    bh,bl
  4093bd:	loopne 0x4093cb
  4093bf:	push   es
  4093c0:	mov    al,0xe1
  4093c2:	sbb    DWORD PTR [esi],eax
  4093c4:	mov    esp,0x7a061de1
  4093c9:	loope  0x4093ea
  4093cb:	push   es
  4093cc:	jns    0x4093af
  4093ce:	and    al,BYTE PTR [esi]
  4093d0:	dec    eax
  4093d1:	loope  0x4093f4
  4093d3:	push   es
  4093d4:	inc    edi
  4093d5:	loope  0x4093fb
  4093d7:	push   es
  4093d8:	inc    esi
  4093d9:	loope  0x4093fe
  4093db:	push   es
  4093dc:	xor    eax,0x440626e1
  4093e1:	loope  0x409408
  4093e3:	push   es
  4093e4:	mov    bl,0xdf
  4093e6:	sub    BYTE PTR [esi],al
  4093e8:	mov    dl,0xdf
  4093ea:	daa    
  4093eb:	push   es
  4093ec:	rcr    edi,0x2a
  4093ef:	push   es
  4093f0:	add    al,ah
  4093f2:	sub    DWORD PTR [esi],eax
  4093f4:	pavgb  mm5,QWORD PTR [esi+eax*1]
  4093f8:	(bad)  
  4093f9:	fild   QWORD PTR [ebx]
  4093fb:	push   es
  4093fc:	std    
  4093fd:	fild   QWORD PTR [esi]
  4093ff:	push   es
  409400:	(bad)  
  409402:	sub    eax,0x30dffb06
  409407:	push   es
  409408:	jmp    0x694:0x62062fdf
  40940f:	xor    ah,BYTE PTR [ebx+edx*4+0x6]
  409413:	xor    eax,DWORD PTR [eax]
	...
  409425:	add    BYTE PTR [eax],al
  409427:	add    BYTE PTR [esi+esi*2+0x6],bl
  40942b:	xor    al,0x64
  40942d:	ins    DWORD PTR es:[edi],dx
  40942e:	push   es
  40942f:	xor    eax,0x3606785c
  409434:	outs   dx,DWORD PTR fs:[esi]
  409436:	push   es
  409437:	aaa    
  409438:	pop    esp
  409439:	call   0x3905:0x99643805
  409440:	pop    esp
  409441:	or     al,0x6
  409443:	cmp    ah,BYTE PTR [eax+eiz*4+0x5]
  409447:	inc    eax
  409448:	pop    esp
  409449:	mov    eax,ds:0xa2644105
  40944e:	add    eax,0x5a35c42
  409453:	inc    ebx
  409454:	fs pushf 
  409456:	add    eax,0x5e55c44
  40945b:	inc    ebp
  40945c:	fiadd  WORD PTR fs:0x5e75c46
  409463:	inc    edi
  409464:	fadd   DWORD PTR fs:0x5e95c48
  40946b:	dec    ecx
  40946c:	fs jmp 0x4b05:0xdb5c4a05
  409474:	fs push esp
  409476:	pop    es
  409477:	dec    esp
  409478:	pop    esp
  409479:	sub    eax,0x26644d07
  40947e:	pop    es
  40947f:	dec    esi
  409480:	pop    esp
  409481:	pop    ds
  409482:	pop    es
  409483:	dec    edi
  409484:	xor    BYTE PTR fs:[edi],al
  409487:	push   eax
  409488:	pop    esp
  409489:	xchg   ecx,eax
  40948a:	pop    es
  40948b:	push   ecx
	...
  4094a0:	fs xchg edx,eax
  4094a2:	pop    es
  4094a3:	push   edx
  4094a4:	pop    esp
  4094a5:	popa   
  4094a6:	or     BYTE PTR [edx+0x66],dl
  4094a9:	bound  ecx,QWORD PTR [eax]
  4094ab:	push   ebx
  4094ac:	pop    esi
  4094ad:	(bad)  [edx+0x9]
  4094b0:	adc    ebx,ebp
  4094b2:	inc    ebx
  4094b3:	or     DWORD PTR [esi],ecx
  4094b5:	fisttp QWORD PTR [ecx+ecx*1+0x37]
  4094b9:	fld    QWORD PTR [ebp+0x9]
  4094bc:	sub    al,0xdd
  4094be:	dec    esi
  4094bf:	or     DWORD PTR ds:0x2a094fdd,esi
  4094c5:	fld    QWORD PTR [eax+0x9]
  4094c8:	sbb    ebx,ebp
  4094ca:	inc    ecx
  4094cb:	or     DWORD PTR [eax],ebx
  4094cd:	fst    QWORD PTR [edx-0x7422f6f7]
  4094d3:	or     DWORD PTR [esi],eax
  4094d5:	fld    QWORD PTR [ecx+ecx*1+0x97ddcf3]
  4094dc:	mov    ah,0xdd
  4094de:	xchg   esi,eax
  4094df:	or     DWORD PTR [ebp+0x6c0977dd],ebp
  4094e5:	clc    
  4094e6:	js     0x4094f1
  4094e8:	pusha  
  4094e9:	fnstsw WORD PTR [ecx+0x9]
  4094ec:	popa   
  4094ed:	fstp   QWORD PTR [edx+0x9]
  4094f0:	arpl   bp,bx
  4094f2:	push   ebx
  4094f3:	or     DWORD PTR [esi-0x23],ebx
  4094f6:	pop    esp
  4094f7:	or     DWORD PTR [edi-0x23],esp
  4094fa:	push   ebp
  4094fb:	or     DWORD PTR [ebp+ebx*8+0x3e],ebx
  4094ff:	or     DWORD PTR [ebp-0x23],esp
  409502:	aas    
  409503:	or     DWORD PTR [eax],eax
	...
  409515:	add    BYTE PTR [eax],al
  409517:	add    BYTE PTR [edx-0x23],bl
  40951a:	xor    BYTE PTR [ecx],cl
  40951c:	imul   ebx,ebp,0x31
  40951f:	or     DWORD PTR [eax-0x23],ebp
  409522:	mov    ds:0x9bdd5906,al
  409527:	push   es
  409528:	push   esi
  409529:	fst    QWORD PTR [esi+eax*1+0x68ddcf2]
  409530:	fld    QWORD PTR fs:[esi-0x5822a2fa]
  409537:	push   es
  409538:	adc    al,0xdd
  40953a:	add    BYTE PTR [eax-0x54faf69c],ch
  409540:	pop    esp
  409541:	or     BYTE PTR ds:0x49f64aa,al
  409547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409548:	pop    esp
  409549:	or     eax,0xc64ac05
  40954e:	add    eax,0x49d5ca7
  409553:	scas   al,BYTE PTR es:[edi]
  409554:	or     al,BYTE PTR fs:0x49c5cb1
  40955b:	mov    al,ds:0xa3051164
  409560:	pop    esp
  409561:	adc    BYTE PTR ds:0x5136432,al
  409567:	sub    eax,0x2405125c
  40956c:	fs adc eax,0x165c1f05
  409572:	add    eax,0x5136436
  409577:	sbb    DWORD PTR [esp+edx*1+0x5],ebx
  40957b:	sbb    BYTE PTR [eax],al
	...
  40958d:	add    BYTE PTR [eax],al
  40958f:	add    BYTE PTR [esp+eiz*4+0x4],ah
  409593:	sbb    ebx,DWORD PTR [ecx+ebx*4+0x4]
  409597:	cmp    ah,BYTE PTR [edx+ebx*4+0x4]
  40959b:	xor    eax,0x3c04975c
  4095a0:	fs cwde 
  4095a2:	add    al,0x37
  4095a4:	pop    esp
  4095a5:	or     eax,DWORD PTR ds:0x507641e
  4095ab:	and    DWORD PTR [ebp+eiz*4+0x4],ebx
  4095af:	adc    BYTE PTR [eax+eiz*4+0x4],ah
  4095b3:	adc    ebx,DWORD PTR [esp+ecx*1+0x5]
  4095b7:	ret    0xa167
  4095ba:	add    al,0xbd
  4095bc:	pop    edi
  4095bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095be:	add    al,0xb4
  4095c0:	addr16 mov ds:0xaf04,al
  4095c4:	pop    edi
  4095c5:	pushf  
  4095c6:	add    al,0x0
  4095c8:	add    al,0xdf
  4095ca:	dec    edx
  4095cb:	add    al,0x9b
  4095cd:	fisubr WORD PTR [esi]
  4095cf:	add    al,0xaa
  4095d1:	ficom  WORD PTR [eax]
  4095d3:	add    al,0xa9
  4095d5:	fimul  WORD PTR [edi]
  4095d7:	add    al,0xd8
  4095d9:	fisub  WORD PTR [esi]
  4095db:	add    al,0xdf
  4095dd:	ficom  WORD PTR [esp+eax*1]
  4095e0:	out    dx,al
  4095e1:	ficom  WORD PTR [ebx]
  4095e3:	add    al,0xdd
  4095e5:	fisub  WORD PTR [esp+eax*1]
  4095e8:	(bad)  
  4095ea:	adc    DWORD PTR [ebx+esi*8],eax
  4095ed:	fisub  WORD PTR [ebx]
  4095ef:	add    al,0xe2
  4095f1:	ficomp WORD PTR [eax]
  4095f3:	add    al,0x0
	...
  409605:	add    BYTE PTR [eax],al
  409607:	add    cl,ah
  409609:	ficom  WORD PTR [edi]
  40960b:	add    al,0x10
  40960d:	ficomp WORD PTR [edx]
  40960f:	add    al,0x17
  409611:	ficomp WORD PTR [ecx]
  409613:	add    al,0xa6
  409615:	ficomp WORD PTR [esp+eax*1]
  409618:	xchg   ebp,eax
  409619:	ficomp WORD PTR [ebx]
  40961b:	add    al,0xb4
  40961d:	ficomp WORD PTR [esi]
  40961f:	add    al,0x8b
  409621:	ficomp WORD PTR ds:0x2dde7a04
  409627:	add    al,0x79
  409629:	fisub  WORD PTR [eax]
  40962b:	add    al,0x48
  40962d:	ficomp WORD PTR [edi]
  40962f:	add    al,0x4f
  409631:	fisub  WORD PTR [edx]
  409633:	add    al,0x7e
  409635:	fisub  WORD PTR [ecx]
  409637:	add    al,0x6d
  409639:	ficom  WORD PTR [esi]
  40963b:	add    al,0xc
  40963d:	fst    QWORD PTR [edx]
  40963f:	add    al,0x63
  409641:	fisubr WORD PTR [esp+eax*1]
  409644:	repnz fsubr QWORD PTR [ecx]
  409647:	add    al,0xf1
  409649:	fcom   QWORD PTR ds:0x28db0004
  40964f:	add    al,0x7
  409651:	fld    TBYTE PTR [ebx]
  409653:	add    al,0x62
  409655:	sub    eax,0x245e2907
  40965a:	pop    es
  40965b:	daa    
  40965c:	sbb    ax,WORD PTR [edi]
  40965f:	sub    bl,BYTE PTR [esi+0x61]
  409662:	add    al,0x86
  409664:	popa   
  409665:	pusha  
  409666:	add    al,0x88
  409668:	popa   
  409669:	pop    edi
  40966a:	add    al,0x89
	...
  409680:	popa   
  409681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409682:	add    ecx,DWORD PTR [edx-0x55fc629f]
  409688:	popa   
  409689:	mov    ds:0x9a618c03,eax
  40968e:	add    ecx,DWORD PTR [esi-0x54fc569f]
  409694:	popa   
  409695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409696:	add    ecx,DWORD PTR [edi-0x7afc639f]
  40969c:	popa   
  40969d:	adc    eax,DWORD PTR [edx*1-0x53fb8ebe]
  4096a4:	popa   
  4096a5:	jo     0x4096ab
  4096a7:	lods   eax,DWORD PTR ds:[esi]
  4096a8:	popa   
  4096a9:	outs   dx,DWORD PTR ds:[esi]
  4096aa:	add    al,0xae
  4096ac:	popa   
  4096ad:	ins    BYTE PTR es:[edi],dx
  4096ae:	add    al,0xaf
  4096b0:	popa   
  4096b1:	aad    0x3
  4096b3:	retf   0xca61
  4096b6:	add    edx,DWORD PTR [eax-0x33fc2c9f]
  4096bc:	popa   
  4096bd:	enter  0xcd03,0x61
  4096c1:	mov    ecx,0xb661cb03
  4096c6:	add    esi,DWORD PTR [eax-0x31fc589f]
  4096cc:	popa   
  4096cd:	add    DWORD PTR [ecx+edx*4],eax
  4096d0:	popa   
  4096d1:	inc    BYTE PTR [ebx]
  4096d3:	xchg   edx,eax
  4096d4:	popa   
  4096d5:	inc    DWORD PTR [ebx]
  4096d7:	xchg   ebx,eax
  4096d8:	popa   
  4096d9:	add    al,0x4
  4096db:	xchg   esp,eax
  4096dc:	popa   
  4096dd:	std    
  4096de:	add    edx,DWORD PTR [ebp+0x4add961]
	...
  4096f8:	int3   
  4096f9:	(bad)  
  4096fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096fb:	add    al,0xf5
  4096fd:	(bad)  
  4096fe:	lahf   
  4096ff:	add    al,0xfa
  409701:	(bad)  
  409702:	mov    al,ds:0xb1d6eb04
  409707:	add    al,0xe8
  409709:	(bad)  
  40970a:	mov    dl,0x4
  40970c:	(bad)  
  40970e:	mov    ds:0x9cd6d604,eax
  409713:	add    al,0xcf
  409715:	(bad)  
  409716:	mov    ch,0x4
  409718:	(bad)  
  409719:	(bad)  
  40971a:	scas   al,BYTE PTR es:[edi]
  40971b:	add    al,0xfd
  40971d:	(bad)  
  40971e:	mov    bh,0x4
  409720:	ret    0xb8d6
  409723:	add    al,0xc3
  409725:	(bad)  
  409726:	cdq    
  409727:	add    al,0xc1
  409729:	(bad)  
  40972a:	xchg   ebx,eax
  40972b:	add    al,0xc6
  40972d:	(bad)  
  40972e:	pushf  
  40972f:	add    al,0xbf
  409731:	(bad)  
  409732:	xchg   ebp,eax
  409733:	add    al,0xc4
  409735:	(bad)  
  409736:	ds add al,0xbd
  409739:	(bad)  
  40973a:	aas    
  40973b:	add    al,0xa
  40973d:	(bad)  
  40973e:	xor    BYTE PTR [ebx+ecx*1],al
  409741:	(bad)  
  409742:	dec    eax
  409743:	add    al,0x13
  409745:	(bad)  
  409746:	dec    ecx
  409747:	add    al,0x10
  409749:	(bad)  
  40974a:	dec    edx
  40974b:	add    al,0xf1
  40974d:	aad    0x4b
  40974f:	add    al,0xee
  409751:	aad    0x44
  409753:	add    al,0xf7
  409755:	aad    0xd
  409757:	add    al,0xec
  409759:	aad    0x6
  40975b:	add    al,0x0
	...
  40976d:	add    BYTE PTR [eax],al
  40976f:	add    ch,dl
  409771:	aad    0xff
  409773:	add    ebx,edx
  409775:	aad    0x0
  409777:	add    al,0xcb
  409779:	aad    0x11
  40977b:	add    al,0xc8
  40977d:	aad    0x12
  40977f:	add    al,0xb9
  409781:	aad    0x0
  409783:	add    eax,0xfc02955e
  409788:	popa   
  409789:	xchg   esp,eax
  40978a:	add    dl,bh
  40978c:	popa   
  40978d:	xchg   ebx,eax
  40978e:	add    cl,dh
  409790:	popa   
  409791:	xchg   edx,eax
  409792:	add    bl,cl
  409794:	popa   
  409795:	sbb    DWORD PTR [edx],eax
  409797:	fsub   DWORD PTR [ecx+0x18]
  40979a:	add    bh,BYTE PTR [ebx-0x45fde99f]
  4097a0:	popa   
  4097a1:	pop    ss
  4097a2:	add    bh,BYTE PTR [ebp-0x4bfde29f]
  4097a8:	popa   
  4097a9:	sbb    al,0x2
  4097ab:	lahf   
  4097ac:	popa   
  4097ad:	sbb    eax,DWORD PTR [edx]
  4097af:	xchg   esi,eax
  4097b0:	popa   
  4097b1:	sbb    al,BYTE PTR [edx]
  4097b3:	xchg   ecx,eax
  4097b4:	popa   
  4097b5:	and    DWORD PTR [edx],eax
  4097b7:	nop
  4097b8:	popa   
  4097b9:	and    BYTE PTR [edx],al
  4097bb:	dec    eax
  4097bc:	xchg   BYTE PTR [edx-0x2281b4de],cl
  4097c2:	and    ecx,DWORD PTR [edx+0x76]
  4097c5:	push   ecx
  4097c6:	and    eax,0x21f16e45
  4097cb:	mov    WORD PTR [esi-0x8],fs
  4097ce:	and    DWORD PTR [edi-0x71dc24a2],eax
	...
  4097e8:	push   esi
  4097e9:	jp     0x40980d
  4097eb:	or     DWORD PTR [esi+0x7c],0x7d469022
  4097f2:	and    dl,BYTE PTR [ebx-0x7ddd88c2]
  4097f8:	ss je  0x40981d
  4097fb:	jge    0x40982b
  4097fd:	outs   dx,BYTE PTR ds:[esi]
  4097fe:	and    dl,BYTE PTR [esi+eiz*1+0x6f]
  409802:	and    cl,BYTE PTR [edi+0x1e]
  409805:	jno    0x409829
  409807:	inc    esi
  409808:	push   ss
  409809:	jns    0x40982d
  40980b:	pop    ecx
  40980c:	push   cs
  40980d:	test   DWORD PTR [edx],esp
  40980f:	add    BYTE PTR [edi+0x3e22624d],bl
  409815:	dec    ebp
  409816:	pop    esi
  409817:	and    ch,BYTE PTR ds:0x3c22654d
  40981d:	dec    ebp
  40981e:	sub    esp,DWORD PTR [edx]
  409820:	mov    ebx,0xa223254
  409825:	push   ebp
  409826:	sbb    eax,0x1c550922
  40982b:	and    al,BYTE PTR [esi]
  40982d:	push   ebp
  40982e:	pop    es
  40982f:	and    dl,BYTE PTR [ebx]
  409831:	push   ebp
  409832:	cmp    ah,BYTE PTR [edx]
  409834:	repnz push esp
  409836:	inc    ebx
  409837:	and    bh,dh
  409839:	push   esp
  40983a:	shl    BYTE PTR [ecx],cl
  40983c:	int    0x54
  40983e:	shl    BYTE PTR [ecx],1
  409840:	in     al,dx
  409841:	push   esp
  409842:	popa   
  409843:	and    dl,ch
  409845:	push   esp
  409846:	sbb    BYTE PTR [edx],ah
  409848:	rcl    DWORD PTR [eax+eax*4+0x22],1
	...
  409860:	rcl    BYTE PTR [ebx+eax*4+0x22],1
  409864:	mov    edi,0xde222954
  409869:	push   esp
  40986a:	sub    BYTE PTR [edx],ah
  40986c:	int    0x54
  40986e:	daa    
  40986f:	and    bl,ah
  409871:	push   esp
  409872:	and    cl,BYTE PTR es:[esp+edx*2]
  409876:	add    BYTE PTR [edx],ah
  409878:	mov    ch,0x54
  40987a:	nop
  40987b:	add    DWORD PTR [eax-0x60de71ac],esi
  409881:	push   esp
  409882:	xchg   ecx,eax
  409883:	and    DWORD PTR [esi+0x7d219054],ebx
  409889:	push   esp
  40988a:	xchg   ebx,eax
  40988b:	and    DWORD PTR [ebp+ecx*2+0x20],ecx
  40988f:	and    al,0x9b
  409891:	dec    ebp
  409892:	les    esp,FWORD PTR ds:0x25904d5a
  409898:	imul   ecx,DWORD PTR [ebp+0x9],0xfce36224
  40989f:	or     eax,DWORD PTR [esi-0x2a]
  4098a2:	cld    
  4098a3:	or     al,0x3e
  4098a5:	(bad)  
  4098a7:	or     DWORD PTR [esi-0x16],eax
  4098aa:	cld    
  4098ab:	and    edi,DWORD PTR [esi]
  4098ad:	frndint 
  4098af:	or     al,BYTE PTR [esi-0x24]
  4098b2:	cld    
  4098b3:	pop    ss
  4098b4:	aas    
  4098b5:	sub    edi,edx
  4098b7:	ja     0x7f4c92db
  4098bd:	adc    eax,0x908713fa
  4098c2:	cli    
  4098c3:	cmp    eax,DWORD PTR [eax]
	...
  4098d5:	add    BYTE PTR [eax],al
  4098d7:	add    BYTE PTR [edi+0x27],bh
  4098da:	cli    
  4098db:	mov    ecx,0xbafa9281
  4098e0:	adc    DWORD PTR [ecx-0x6b790006],0x7381bbfa
  4098ea:	cli    
  4098eb:	mov    esp,0x1bfa6641
  4098f0:	aas    
  4098f1:	ins    DWORD PTR es:[edi],dx
  4098f2:	cli    
  4098f3:	and    eax,DWORD PTR [edi+0x68]
  4098f6:	cli    
  4098f7:	xor    edi,DWORD PTR [edi]
  4098f9:	iret   
  4098fa:	stc    
  4098fb:	sub    eax,DWORD PTR [edi+0x5a]
  4098fe:	cli    
  4098ff:	add    DWORD PTR [edi],edi
  409901:	mov    eax,ds:0xa44202fe
  409906:	inc    BYTE PTR [ecx]
  409908:	inc    edx
  409909:	arpl   di,di
  40990b:	add    eax,DWORD PTR [edx-0x7dfb00ac]
  409911:	pop    ebp
  409912:	inc    DWORD PTR [esi]
  409914:	adc    BYTE PTR [esi-0x1],0x7
  409918:	sbb    BYTE PTR [edi-0x1],0x8
  40991c:	sub    BYTE PTR [eax-0x1],0x9
  409920:	sbb    BYTE PTR [ecx-0x1],0x13
  409924:	sbb    BYTE PTR [edx-0x1],0x12
  409928:	sbb    cl,0x53
  40992b:	inc    BYTE PTR [eax-0xb]
  40992e:	dec    ebp
  40992f:	(bad)  
  409930:	aas    
  409931:	stc    
  409932:	inc    esi
  409933:	inc    BYTE PTR [esi-0x7]
  409936:	push   edi
  409937:	(bad)  
  409938:	mov    al,0xf8
  40993a:	cmp    dh,bh
	...
  409950:	xchg   ecx,eax
  409951:	clc    
  409952:	cmp    esi,edi
  409954:	mov    ?,eax
  409956:	cmp    bh,dh
  409958:	xchg   edi,eax
  409959:	clc    
  40995a:	xor    edi,esi
  40995c:	mov    eax,?
  40995e:	pushf  
  40995f:	std    
  409960:	xor    eax,0x3afd95f8
  409965:	clc    
  409966:	sahf   
  409967:	std    
  409968:	sub    edi,eax
  40996a:	(bad)  
  40996b:	std    
  40996c:	pop    esi
  40996d:	clc    
  40996e:	cmp    ch,0x53
  409971:	stc    
  409972:	jnp    0x409971
  409974:	mov    bh,dl
  409976:	je     0x409975
  409978:	jg     0x409953
  40997a:	ins    DWORD PTR es:[edi],dx
  40997b:	std    
  40997c:	jnp    0x409978
  40997e:	stos   BYTE PTR es:[edi],al
  40997f:	std    
  409980:	cmp    al,bh
  409982:	mov    ds:0xacf839fd,eax
  409987:	std    
  409988:	cs clc 
  40998a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40998b:	std    
  40998c:	daa    
  40998d:	clc    
  40998e:	mov    al,0xfd
  409990:	inc    ebx
  409991:	clc    
  409992:	mov    cl,0xfd
  409994:	push   eax
  409995:	mul    DWORD PTR [ebx-0x630b5d03]
  40999b:	std    
  40999c:	lods   al,BYTE PTR ds:[esi]
  40999d:	hlt    
  40999e:	xor    eax,0x2ef428fd
  4099a3:	std    
  4099a4:	add    al,0xf4
  4099a6:	aaa    
  4099a7:	std    
  4099a8:	jne    0x4099a3
  4099aa:	cmp    ch,bh
  4099ac:	push   0xfffffff9
  4099ae:	sbb    ebp,edi
  4099b0:	pop    ecx
  4099b1:	stc    
  4099b2:	sbb    bh,ch
	...
  4099c8:	push   esi
  4099c9:	stc    
  4099ca:	add    BYTE PTR ds:0x171fec2f,bl
  4099d0:	daa    
  4099d1:	or     BYTE PTR [ecx],ah
  4099d3:	ds pop ds
  4099d5:	or     esp,DWORD PTR [ecx]
  4099d7:	inc    eax
  4099d8:	pop    ss
  4099d9:	in     eax,dx
  4099da:	and    eax,0x24820f32
  4099df:	sub    eax,0x24248e07
  4099e4:	inc    DWORD PTR [ebx+0x1ef71f24]
  4099ea:	and    al,0x16
  4099ec:	out    dx,eax
  4099ed:	jnp    0x409a13
  4099ef:	or     edi,esp
  4099f1:	xor    esp,DWORD PTR [eax+ecx*8]
  4099f4:	fadd   DWORD PTR [edx+0x7cd8cb24]
  4099fa:	and    al,0xca
  4099fc:	enter  0x248a,0xc5
  409a00:	enter  0x248c,0xcc
  409a04:	mov    eax,0xb8c726d3
  409a09:	mul    DWORD PTR [eax]
  409a0b:	into   
  409a0c:	test   al,0x7f
  409a0e:	and    al,0xc1
  409a10:	test   al,0x87
  409a12:	and    al,0x90
  409a14:	cwde   
  409a15:	xchg   ecx,eax
  409a16:	and    al,0x93
  409a18:	cwde   
  409a19:	icebp  
  409a1a:	or     BYTE PTR es:[eax-0x7782d915],0xba
  409a22:	es xchg esp,eax
  409a24:	js     0x4099d9
  409a26:	es (bad) 
  409a28:	js     0x4099de
  409a2a:	es jns 0x409a2d
	...
  409a3d:	add    BYTE PTR [eax],al
  409a3f:	add    BYTE PTR [eax-0x13],ch
  409a42:	and    eax,0x20ed6878
  409a47:	pop    ebx
  409a48:	pop    eax
  409a49:	cli    
  409a4a:	and    BYTE PTR [edx+0x58],bl
  409a4d:	call   0xe488f777
  409a52:	and    eax,0x26bc4854
  409a57:	add    BYTE PTR [ebp+0x4f],bh
  409a5a:	ins    DWORD PTR es:[edi],dx
  409a5b:	es ins BYTE PTR es:[edi],dx
  409a5d:	dec    edi
  409a5e:	inc    eax
  409a5f:	es jae 0x409ab1
  409a62:	ds es jb 0x409ab5
  409a66:	or     al,0x26
  409a68:	inc    ecx
  409a69:	dec    edi
  409a6a:	adc    eax,0x174f4023
  409a6f:	and    DWORD PTR [edi+0x4f],esi
  409a72:	and    BYTE PTR ss:[esi+0x4f],dl
  409a76:	sbb    BYTE PTR [eax],ah
  409a78:	gs dec edi
  409a7a:	sbb    al,0x20
  409a7c:	test   al,0x50
  409a7e:	cmp    al,BYTE PTR [eax]
  409a80:	popf   
  409a81:	push   eax
  409a82:	cmp    al,0x0
  409a84:	mov    ds:0xf2222650,eax
  409a89:	dec    edi
  409a8a:	daa    
  409a8b:	and    cl,BYTE PTR [ebx]
  409a8d:	push   eax
  409a8e:	scas   eax,DWORD PTR es:[edi]
  409a8f:	add    cl,bh
  409a91:	dec    edi
  409a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a93:	and    bh,al
  409a95:	dec    edi
  409a96:	sub    DWORD PTR [edx],esp
  409a98:	(bad)  
  409a9a:	or     BYTE PTR [ebx],ah
  409a9c:	std    
  409a9d:	dec    edi
  409a9e:	pop    edi
  409a9f:	add    BYTE PTR [ecx],al
  409aa1:	push   eax
  409aa2:	push   ss
  409aa3:	and    al,BYTE PTR [eax]
	...
  409ab5:	add    BYTE PTR [eax],al
  409ab7:	add    bh,al
  409ab9:	dec    edi
  409aba:	xchg   ebp,eax
  409abb:	and    edx,ebp
  409abd:	dec    edi
  409abe:	mov    ds:0xcb4fc422,al
  409ac3:	and    eax,0x23064fc8
  409ac8:	int    0x4f
  409aca:	sub    BYTE PTR [edx],ah
  409acc:	ret    
  409acd:	dec    edi
  409ace:	and    DWORD PTR [edx],0xffffffc1
  409ad1:	dec    edi
  409ad2:	and    BYTE PTR [edx],0xd7
  409ad5:	dec    edi
  409ad6:	mov    al,ds:0xa34ef722
  409adb:	and    ah,BYTE PTR [esp+eax*2+0x44ab2017]
  409ae2:	into   
  409ae3:	add    eax,0xd0f5a162
  409ae8:	pop    edi
  409ae9:	mov    al,ds:0x9f67d1f5
  409aee:	cmc    
  409aef:	rcr    BYTE PTR [edi-0x6a],cl
  409af2:	cmc    
  409af3:	shl    DWORD PTR [edi-0x63],cl
  409af6:	cmc    
  409af7:	aam    0x5f
  409af9:	xchg   esp,eax
  409afa:	cmc    
  409afb:	aad    0x67
  409afd:	fcomi  st,st(5)
  409aff:	(bad)  
  409b00:	pop    edi
  409b01:	jmp    0xd8f5:0xd967d7f5
  409b08:	pop    edi
  409b09:	fdiv   st,st(5)
  409b0b:	fldenv [edi-0x19]
  409b0e:	cmc    
  409b0f:	ficomp DWORD PTR [edi-0x22]
  409b12:	cmc    
  409b13:	(bad)  [edi-0x2b]
  409b16:	cmc    
  409b17:	fcomp  QWORD PTR [edi+0x4c]
  409b1a:	neg    ebp
	...
  409b30:	addr16 and edi,ecx
  409b33:	ficomp WORD PTR [edi+0x32]
  409b36:	stc    
  409b37:	fbld   TBYTE PTR [edi+0x31]
  409b3a:	stc    
  409b3b:	loopne 0x409b9c
  409b3d:	xor    cl,bh
  409b3f:	loope  0x409ba8
  409b41:	(bad)  
  409b42:	stc    
  409b43:	loop   0x409ba4
  409b45:	xchg   cl,bh
  409b47:	jecxz  0x409bb0
  409b49:	(bad)  
  409b4a:	stc    
  409b4b:	in     al,0x5f
  409b4d:	test   cl,bh
  409b4f:	in     eax,0x67
  409b51:	imul   edi,ecx,0xffffffe6
  409b54:	pop    edi
  409b55:	jp     0x409b50
  409b57:	out    0x67,eax
  409b59:	imul   edi,ecx,0xf9685fe8
  409b5f:	jmp    0x1363ccb
  409b64:	mov    al,fs:0x9f5c01f5
  409b6a:	cmc    
  409b6b:	add    dl,BYTE PTR [esi+edx*4-0xb]
  409b6f:	add    ebp,DWORD PTR [ecx+ebx*8-0x74]
  409b73:	neg    DWORD PTR [esi-0x25]
  409b76:	test   edi,esi
  409b78:	fisttp DWORD PTR [bp+0x5cf7]
  409b7d:	fstp   TBYTE PTR [edi-0x9]
  409b80:	fist   DWORD PTR gs:[eax-0x6e249509]
  409b87:	neg    DWORD PTR [ebx-0x25]
  409b8a:	xor    bh,0x58
  409b8d:	fstp   TBYTE PTR [ebx-0x9]
  409b90:	imul   ebx,ebx,0xf754
	...
  409ba6:	add    BYTE PTR [eax],al
  409ba8:	data16 fisttp DWORD PTR [ebp-0x9]
  409bac:	pop    edi
  409bad:	fild   DWORD PTR [esi-0x9]
  409bb0:	push   esp
  409bb1:	fist   DWORD PTR [edi-0x9]
  409bb4:	ins    DWORD PTR es:[edi],dx
  409bb5:	fstp   TBYTE PTR [eax]
  409bb7:	not    DWORD PTR [edx-0x25]
  409bba:	cmp    edi,esi
  409bbc:	push   ebx
  409bbd:	fstp   TBYTE PTR [edx]
  409bbf:	not    DWORD PTR [eax-0x25]
  409bc2:	xor    esi,edi
  409bc4:	jno    0x409ba1
  409bc6:	pushf  
  409bc7:	imul   BYTE PTR [esi-0x25]
  409bca:	xchg   ebp,eax
  409bcb:	div    BYTE PTR [edi-0x25]
  409bce:	sahf   
  409bcf:	imul   BYTE PTR [ebx+ebx*8-0x71]
  409bd3:	not    BYTE PTR [ebp-0x25]
  409bd6:	xor    dh,0x5a
  409bd9:	fild   DWORD PTR [ecx+0x72db4bf6]
  409bdf:	test   BYTE PTR [eax-0x25],0x6b
  409be3:	idiv   BYTE PTR [ecx-0x25]
  409be6:	div    BYTE PTR fs:[esi-0x25]
  409bea:	pop    ebp
  409beb:	imul   BYTE PTR [edi-0x25]
  409bee:	push   esi
  409bef:	mul    BYTE PTR [ebx+ebx*8-0x59]
  409bf3:	neg    BYTE PTR [ebp-0x25]
  409bf6:	test   al,0xf6
  409bf8:	inc    edx
  409bf9:	fld    TBYTE PTR [ecx+0xdb43f6]
  409bff:	stos   BYTE PTR es:[edi],al
  409c00:	ins    BYTE PTR es:[edi],dx
  409c01:	test   DWORD PTR [esi],0xef654a5
  409c07:	sub    al,0x4c
  409c09:	cmc    
  409c0a:	push   cs
  409c0b:	daa    
	...
  409c20:	push   esp
  409c21:	hlt    
  409c22:	push   cs
  409c23:	cs dec esp
  409c25:	repz push cs
  409c27:	and    DWORD PTR [edx+esi*8],esi
  409c2a:	push   cs
  409c2b:	xor    BYTE PTR [ecx+eax*1],ch
  409c2e:	rdpmc  
  409c30:	xor    al,0x0
  409c32:	mov    cr5,esp
  409c35:	dec    DWORD PTR [esi]
  409c37:	sbb    eax,0x340efe14
  409c3c:	or     al,0xfd
  409c3e:	push   cs
  409c3f:	das    
  409c40:	adc    al,0xfc
  409c42:	push   cs
  409c43:	es or  al,0xfb
  409c46:	push   cs
  409c47:	cmp    esp,esi
  409c49:	stc    
  409c4a:	push   cs
  409c4b:	sbb    ah,ch
  409c4d:	or     BYTE PTR [edi],cl
  409c4f:	sbb    esi,esp
  409c51:	pop    es
  409c52:	nop    esp
  409c55:	push   es
  409c56:	unpckhps xmm2,xmm4
  409c59:	add    eax,0x473bc0f
  409c5e:	movzx  esi,WORD PTR [ebx+0x3]
  409c62:	movsx  esi,BYTE PTR [ebx+0x2]
  409c66:	cmpxchg DWORD PTR [ebx+0x11],edx
  409c6a:	push   fs
  409c6c:	push   ebx
  409c6d:	adc    BYTE PTR [edi],cl
  409c6f:	mov    ds:0x970f0f53,eax
  409c74:	push   ebx
  409c75:	or     ecx,DWORD PTR [edi]
  409c77:	mov    ?,WORD PTR [ebx+0xa]
  409c7a:	jns    0x884f35f3
  409c80:	jae    0x409c1a
  409c82:	push   cs
  409c83:	mov    eax,DWORD PTR [eax]
	...
  409c95:	add    BYTE PTR [eax],al
  409c97:	add    BYTE PTR [ebx-0x69],dh
  409c9a:	push   cs
  409c9b:	mov    dl,BYTE PTR [ebx-0x6a]
  409c9e:	push   cs
  409c9f:	add    bh,ah
  409ca1:	out    0x44,eax
  409ca3:	push   cs
  409ca4:	out    0xe7,al
  409ca6:	inc    ebx
  409ca7:	push   cs
  409ca8:	aad    0xe7
  409caa:	inc    esi
  409cab:	push   cs
  409cac:	in     al,0xea
  409cae:	inc    ebp
  409caf:	push   cs
  409cb0:	mov    bl,0xea
  409cb2:	dec    eax
  409cb3:	push   cs
  409cb4:	mov    dl,0xea
  409cb6:	inc    edi
  409cb7:	push   cs
  409cb8:	mov    eax,ds:0xa00e4aea
  409cbd:	jmp    0xe4c:0xea8f0e49
  409cc4:	sahf   
  409cc5:	jmp    0xe50:0xea6b0e4b
  409ccc:	pop    edx
  409ccd:	jmp    0xe52:0xea790e4f
  409cd4:	push   0x670e51ea
  409cd9:	jmp    0xe53:0xea560e54
  409ce0:	cmc    
  409ce1:	jmp    0xea34ab3c
  409ce6:	push   ebp
  409ce7:	push   cs
  409ce8:	repz jmp 0xea12ab46
  409cee:	push   edi
  409cef:	push   cs
  409cf0:	jmp    0x32ea:0xd9312fea
  409cf7:	xor    eax,ebx
  409cf9:	jmp    0x0:0x3131
	...
  409d10:	out    0xea,eax
  409d12:	xor    al,0x31
  409d14:	out    0xea,al
  409d16:	xor    esi,DWORD PTR [ecx]
  409d18:	in     eax,0xea
  409d1a:	ss xor esp,edx
  409d1d:	jmp    0x3138:0xeae33135
  409d24:	xor    ch,dl
  409d26:	aaa    
  409d27:	xor    DWORD PTR [ecx],esi
  409d29:	jmp    0x3b0f:0x9b62313a
  409d30:	xor    eax,DWORD PTR [esi]
  409d32:	adc    BYTE PTR [ebx+esi*1],bh
  409d35:	lods   eax,DWORD PTR ds:[esi]
  409d36:	(bad)  
  409d38:	xor    ebx,DWORD PTR [eax-0x60ccc1f1]
  409d3e:	(bad)  
  409d40:	xchg   ebx,eax
  409d41:	add    dl,BYTE PTR [eax]
  409d43:	inc    eax
  409d44:	xchg   ebx,eax
  409d45:	popa   
  409d46:	adc    BYTE PTR [ecx-0x6d],al
  409d49:	adc    BYTE PTR fs:[edx-0x6d],al
  409d4d:	arpl   WORD PTR [eax],dx
  409d4f:	inc    ebx
  409d50:	jae    0x409dc0
  409d52:	adc    BYTE PTR [ebx+esi*2-0x3b],al
  409d56:	cmovne esi,DWORD PTR [ebx-0x30]
  409d5a:	cmovbe esi,DWORD PTR [ebx-0x39]
  409d5e:	cmova  edx,DWORD PTR [ebx-0x36]
  409d62:	cmovs  edx,DWORD PTR [ebx-0x47]
  409d66:	cmovns edx,DWORD PTR [ebx-0x44]
  409d6a:	cmovp  edx,DWORD PTR [ebx-0x55]
  409d6e:	cmovnp esi,DWORD PTR [ebx]
  409d71:	xchg   esi,eax
  409d72:	cmovl  eax,DWORD PTR [eax]
	...
  409d85:	add    BYTE PTR [eax],al
  409d87:	add    BYTE PTR [ebx],dh
  409d89:	popf   
  409d8a:	cmovge esi,DWORD PTR [ebx]
  409d8d:	or     BYTE PTR [eax],dl
  409d8f:	dec    esi
  409d90:	xor    ecx,DWORD PTR [edi]
  409d92:	adc    BYTE PTR [edi-0x6d],cl
  409d95:	repnz (bad) 
  409d98:	xchg   ebx,eax
  409d99:	jno    0x409dae
  409d9b:	push   ecx
  409d9c:	xchg   ebx,eax
  409d9d:	je     0x409db2
  409d9f:	push   edx
  409da0:	xchg   ebx,eax
  409da1:	jae    0x409db6
  409da3:	push   ebx
  409da4:	jae    0x409e24
  409da6:	adc    edx,DWORD PTR [ebx+esi*2+0x75]
  409daa:	adc    edx,DWORD PTR [ebp+0x73]
  409dad:	adc    BYTE PTR [ebx],0x56
  409db0:	jae    0x409e29
  409db2:	adc    edx,DWORD PTR [edi+0x53]
  409db5:	jp     0x409dca
  409db7:	pop    eax
  409db8:	push   ebx
  409db9:	fnstenv [eax-0x4df5d4ee]
  409dbf:	adc    ch,BYTE PTR [eax]
  409dc1:	or     ah,BYTE PTR [ebx-0x63f5e6ee]
  409dc7:	adc    dl,BYTE PTR [esi]
  409dc9:	or     dh,BYTE PTR [ebp-0x51f5f0ee]
  409dcf:	adc    al,BYTE PTR [edx+ecx*1]
  409dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dd3:	adc    bh,BYTE PTR [ebp-0x3ded67f8]
  409dd9:	or     BYTE PTR [ecx],bh
  409ddb:	adc    al,bl
  409ddd:	or     BYTE PTR [edx],bh
  409ddf:	adc    al,al
  409de1:	or     BYTE PTR [ebx],bh
  409de3:	adc    al,cl
  409de5:	or     BYTE PTR [edx+edx*1],dh
  409de8:	or     ch,cl
  409dea:	sbb    al,0x12
	...
  409e00:	sti    
  409e01:	call   0xe938b01b
  409e06:	push   ds
  409e07:	adc    cl,cl
  409e09:	call   0xe906b01d
  409e0e:	inc    eax
  409e0f:	adc    bh,BYTE PTR [edi-0x4bedbe18]
  409e15:	call   0xe90db04c
  409e1a:	sub    edx,DWORD PTR [edx]
  409e1c:	mov    dl,0xe8
  409e1e:	and    al,0x12
  409e20:	mov    bl,0xe8
  409e22:	sbb    eax,0x16e8b012
  409e27:	adc    dl,BYTE PTR [ecx]
  409e29:	jmp    0xe94eb035
  409e2e:	enter  0x1711,0xe9
  409e32:	leave  
  409e33:	adc    DWORD PTR [ecx+ebp*8],ecx
  409e36:	retf   0xf511
  409e39:	call   0xe93ab001
  409e3e:	int3   
  409e3f:	adc    ebx,ebp
  409e41:	call   0xe928b00b
  409e46:	add    dh,cl
  409e48:	jae    0x409dcc
  409e4a:	adc    cl,al
  409e4c:	jae    0x409dd3
  409e4e:	adc    BYTE PTR [eax-0x6cef7b8d],dl
  409e54:	jae    0x409ddd
  409e56:	adc    BYTE PTR [edx+0x7d108653],al
  409e5c:	push   ebx
  409e5d:	sbb    DWORD PTR [eax],edx
  409e5f:	xchg   esp,eax
  409e60:	push   ebx
  409e61:	sbb    BYTE PTR [eax],dl
  409e63:	pop    DWORD PTR [eax]
	...
  409e75:	add    BYTE PTR [eax],al
  409e77:	add    BYTE PTR [ebx+0x1b],dl
  409e7a:	adc    BYTE PTR [esi+0x792fb473],al
  409e80:	jae    0x409e4a
  409e82:	das    
  409e83:	pop    eax
  409e84:	jae    0x409e47
  409e86:	das    
  409e87:	pop    ebx
  409e88:	jae    0x409e50
  409e8a:	das    
  409e8b:	pop    edx
  409e8c:	push   ebx
  409e8d:	pop    eax
  409e8e:	xor    BYTE PTR [ebp+0x53],dl
  409e91:	pop    ebp
  409e92:	xor    BYTE PTR [ebx+edx*2],bh
  409e95:	pop    edi
  409e96:	xor    BYTE PTR [edi],dh
  409e98:	push   ebx
  409e99:	push   esp
  409e9a:	xor    BYTE PTR [esi],bh
  409e9c:	jae    0x409ef5
  409e9e:	xor    BYTE PTR [ecx],dh
  409ea0:	jae    0x409ed4
  409ea2:	adc    BYTE PTR [eax],ah
  409ea4:	jae    0x409eef
  409ea6:	adc    BYTE PTR [ebx],ah
  409ea8:	jae    0x409eea
  409eaa:	adc    BYTE PTR [esi],dl
  409eac:	push   ebx
  409ead:	jo     0x409ed0
  409eaf:	inc    ebp
  409eb0:	out    dx,al
  409eb1:	jno    0x409ed4
  409eb3:	inc    ebp
  409eb4:	mul    BYTE PTR [edi-0x5511c401]
  409eba:	push   DWORD PTR [esi]
  409ebc:	(bad)  
  409ebd:	int    0xff
  409ebf:	dec    eax
  409ec0:	shl    DWORD PTR [ebp+0x21],0x88
  409ec4:	(bad)  
  409ec5:	js     0x409ee8
  409ec7:	mov    edi,DWORD PTR [esi-0x3975de89]
  409ecd:	jp     0x409ef0
  409ecf:	test   DWORD PTR [esi-0x21ffde87],edi
  409ed5:	cmp    al,0xa5
  409ed7:	and    ch,bl
  409ed9:	cmp    al,0xa4
  409edb:	and    BYTE PTR [eax],al
	...
  409eed:	add    BYTE PTR [eax],al
  409eef:	add    ah,ch
  409ef1:	cmp    al,0xa7
  409ef3:	and    bl,ah
  409ef5:	cmp    al,0xa6
  409ef7:	and    BYTE PTR [edx],dh
  409ef9:	cmp    eax,0x3d3120a9
  409efe:	test   al,0x20
  409f00:	and    BYTE PTR ds:0x3d3720ab,bh
  409f06:	stos   BYTE PTR es:[edi],al
  409f07:	and    BYTE PTR [eax+0x2a],bh
  409f0a:	call   0xc90f:0x9a71a40f
  409f11:	fcomp  st(4)
  409f13:	(bad)  
  409f15:	jno    0x409f71
  409f17:	btc    DWORD PTR [ebx+0x3a],esp
  409f1b:	pcmpgtb mm6,QWORD PTR [ebp+0x7a]
  409f1f:	cmpxchg BYTE PTR [edi],dl
  409f22:	adc    ecx,DWORD PTR [edi]
  409f24:	fs jne 0x409f8a
  409f27:	(bad)  
  409f2a:	ror    BYTE PTR [edi],1
  409f2c:	and    al,0x71
  409f2e:	arpl   WORD PTR [edi],cx
  409f30:	mov    al,0xed
  409f32:	fmul   QWORD PTR [edi]
  409f34:	add    al,0x71
  409f36:	pop    esi
  409f37:	(bad)  
  409f38:	bswap  ebx
  409f3a:	int3   
  409f3b:	(bad)  
  409f3d:	jno    0x409fa2
  409f3f:	iret   
  409f40:	mov    edx,DWORD PTR [eax+edi*1+0x637124af]
  409f47:	out    dx,eax
  409f48:	(bad)  
  409f49:	call   0xf63:0x70a40f92
  409f50:	mov    edi,0x4fc50c
	...
  409f65:	add    BYTE PTR [eax],al
  409f67:	add    BYTE PTR [ecx+esi*2],al
  409f6a:	jp     0x409f7b
  409f6c:	retf   
  409f6d:	std    
  409f6e:	mov    al,ds:0x6a75640f
  409f73:	punpckldq mm5,DWORD PTR [edi]
  409f76:	fild   QWORD PTR [eax-0x64532c8b]
  409f7c:	pop    ebp
  409f7d:	mov    bh,0xc2
  409f7f:	adc    edx,DWORD PTR [ebp+0x43]
  409f82:	stos   BYTE PTR es:[edi],al
  409f83:	bound  ebp,QWORD PTR [ebp+0x3b]
  409f86:	pop    ebp
  409f87:	push   ds
  409f88:	xor    ebp,DWORD PTR gs:[edx+0x62b15d9b]
  409f8f:	pushf  
  409f90:	push   ebp
  409f91:	and    ebp,DWORD PTR [ebx+0x20ef6d9b]
  409f97:	pushf  
  409f98:	adc    ebp,DWORD PTR gs:[edx-0x80da265]
  409f9f:	fwait
  409fa0:	push   ebp
  409fa1:	sub    DWORD PTR [ebp-0x4e589265],0xfffffff3
  409fa8:	gs jae 0x409f55
  409fab:	bound  ebx,QWORD PTR [ebp+0x31]
  409fae:	xor    bl,al
  409fb0:	push   ebp
  409fb1:	jecxz  0x409f5f
  409fb3:	bound  ebp,QWORD PTR [ebp+0x31]
  409fb6:	fcmove st,st(1)
  409fb8:	shr    DWORD PTR gs:[edx+eiz*2-0x636e9ba3],cl
  409fc0:	push   ebp
  409fc1:	inc    ebx
  409fc2:	stos   BYTE PTR es:[edi],al
  409fc3:	bound  ebp,QWORD PTR [ebp-0x5b]
  409fc6:	int3   
  409fc7:	out    0x65,eax
  409fc9:	xor    ebp,DWORD PTR [edx+0x5f]
	...
  409fdf:	add    BYTE PTR [ebp+0x32],bl
  409fe2:	add    al,BYTE PTR [ecx]
  409fe4:	arpl   WORD PTR [edx],si
  409fe6:	add    al,BYTE PTR [eax]
  409fe8:	bound  esi,QWORD PTR [edx]
  409fea:	add    al,BYTE PTR [eax]
  409fec:	bound  esi,QWORD PTR [ecx]
  409fee:	add    eax,0x78f46200
  409ff3:	pushf  
  409ff4:	push   ebp
  409ff5:	repnz push edx
  409ff7:	pushf  
  409ff8:	ins    DWORD PTR es:[edi],dx
  409ff9:	mov    al,ds:0xf294dd45
  409ffe:	jle    0x409f9c
  40a000:	pop    ebp
  40a001:	fldcw  WORD PTR [eax-0x2d2c188b]
  40a007:	fisttp QWORD PTR [esi-0x38]
  40a00a:	xchg   esp,eax
  40a00b:	mov    ebp,0xac329569
  40a010:	mov    bh,0x7a
  40a012:	(bad)  
  40a013:	or     ch,al
  40a015:	fdivr  QWORD PTR [ebp+0x74]
  40a018:	sbb    eax,DWORD PTR [ebp+0x5a93dab8]
  40a01e:	fild   QWORD PTR [esi-0x720afeb4]
  40a024:	and    eax,0xa1a59283
  40a029:	sbb    al,0xc6
  40a02b:	lea    ecx,[edi-0x4bdcdf2d]
  40a031:	fnstsw WORD PTR [ebx]
  40a033:	imul   ecx,DWORD PTR [esi],0x3e
  40a036:	and    DWORD PTR [edi-0x398ee91e],ecx
  40a03c:	bound  eax,QWORD PTR [edx-0x51]
  40a03f:	mov    edi,0xf47be88f
	...
  40a058:	lods   eax,DWORD PTR ds:[esi]
  40a059:	jns    0x40a0d2
  40a05b:	mov    eax,0x9bf25341
  40a060:	xor    dh,dl
  40a062:	sbb    al,0x58
  40a064:	cmc    
  40a065:	mov    ds:0x85f5ac8b,eax
  40a06a:	push   0xfbabcac5
  40a06f:	mov    edx,DWORD PTR [edi]
  40a071:	adc    DWORD PTR [ebx+ecx*2+0x6c],eax
  40a075:	cmp    eax,esp
  40a077:	mov    ch,0xb8
  40a079:	(bad)  
  40a07b:	fstp   QWORD PTR [edx+esi*1+0x42c09a7b]
  40a082:	inc    edx
  40a083:	xor    eax,0x492ebba2
  40a088:	imul   edi,eax,0x91e42cf9
  40a08e:	add    BYTE PTR [ecx-0x4],bl
  40a091:	jmp    0xfe016eb
  40a096:	in     eax,0xd7
  40a098:	shl    BYTE PTR [ecx],0x5c
  40a09b:	(bad)  
  40a09c:	cdq    
  40a09d:	jns    0x40a0be
  40a09f:	stos   BYTE PTR es:[edi],al
  40a0a0:	and    esi,DWORD PTR [edx]
  40a0a2:	mov    ebp,0x99f832dd
  40a0a7:	retf   
  40a0a8:	ret    0x6ee4
  40a0ab:	add    DWORD PTR [ebx+0x69e5f83],eax
  40a0b1:	xchg   DWORD PTR [ebx-0x1680c37a],edx
  40a0b7:	in     eax,0xb
  40a0b9:	nop
  40a0ba:	in     al,0x69
	...
  40a0d0:	lock inc eax
  40a0d2:	int3   
  40a0d3:	(bad)  
  40a0d4:	inc    esi
  40a0d5:	sbb    dl,bl
  40a0d7:	mov    dl,0x36
  40a0d9:	std    
  40a0da:	jmp    0x2bce2e39
  40a0df:	push   edi
  40a0e0:	sahf   
  40a0e1:	dec    ebp
  40a0e2:	sbb    al,0x84
  40a0e4:	mov    ebx,ebx
  40a0e6:	pop    ebp
  40a0e7:	jg     0x40a147
  40a0e9:	sbb    edx,DWORD PTR es:[esi+edi*2-0x34]
  40a0ee:	cld    
  40a0ef:	sub    ch,BYTE PTR [ebx-0x6ff1aa0e]
  40a0f5:	mov    WORD PTR [edx-0x338ea19],fs
  40a0fb:	mov    WORD PTR [edx],gs
  40a0fd:	jne    0x40a0b3
  40a0ff:	inc    edx
  40a100:	stos   DWORD PTR es:[edi],eax
  40a101:	shl    BYTE PTR [esi+0x1a],cl
  40a104:	push   0x9af85fe6
  40a109:	xchg   esp,eax
  40a10a:	push   0x69
  40a10c:	aas    
  40a10d:	rol    DWORD PTR [eax-0x3a],0xc4
  40a111:	mov    bh,0x6f
  40a113:	xor    al,0x92
  40a115:	mov    esi,0x275daac9
  40a11a:	mov    ebp,0x12e8d200
  40a11f:	xchg   ecx,eax
  40a120:	or     bl,BYTE PTR [ecx+0x1ac053a9]
  40a126:	lahf   
  40a127:	call   FWORD PTR [ebp+eiz*8+0x4002e66e]
  40a12e:	int    0xa2
  40a130:	retf   
  40a131:	aad    0x0
	...
  40a147:	add    al,dh
  40a149:	fadd   QWORD PTR [eax]
  40a14b:	add    BYTE PTR [ebx],bh
  40a14d:	fild   DWORD PTR [eax]
  40a14f:	add    BYTE PTR [esi-0x23],dl
  40a152:	add    BYTE PTR [eax],al
  40a154:	(bad)  
  40a155:	fadd   QWORD PTR [eax]
  40a157:	add    BYTE PTR [ebx+0x660000cd],ch
  40a15d:	fld    QWORD PTR [eax]
  40a15f:	add    BYTE PTR [esi-0x14ffff24],bl
  40a165:	int    0x0
  40a167:	add    BYTE PTR [esi-0x42ffff2b],ah
  40a16d:	fadd   QWORD PTR [eax]
  40a16f:	add    bl,bh
  40a171:	fiadd  DWORD PTR [eax]
  40a173:	add    BYTE PTR [esi],ah
  40a175:	fld    QWORD PTR [eax]
  40a177:	add    ah,ch
  40a179:	aad    0x0
  40a17b:	add    BYTE PTR [ebx+0x560000d7],bh
  40a181:	aad    0x0
  40a183:	add    BYTE PTR [ebx-0x34ffff2b],ch
  40a189:	xlat   BYTE PTR ds:[ebx]
  40a18a:	add    BYTE PTR [eax],al
  40a18c:	data16 aad 0x0
  40a18f:	add    BYTE PTR [edx-0x54ffff2b],bl
  40a195:	aam    0x0
  40a197:	add    BYTE PTR [edi-0x2b],ah
  40a19a:	add    BYTE PTR [eax],al
  40a19c:	sti    
  40a19d:	fadd   QWORD PTR [eax]
  40a19f:	add    BYTE PTR [ebx-0xdffbeac],dl
  40a1a5:	fadd   QWORD PTR [eax]
  40a1a7:	add    BYTE PTR [edx+0x31],ah
  40a1aa:	add    al,BYTE PTR [eax]
	...
  40a1c0:	bound  ebp,QWORD PTR [esi+0x30624089]
  40a1c6:	add    al,BYTE PTR [eax]
  40a1c8:	bound  ebp,QWORD PTR [edx+0x2]
  40a1cb:	add    BYTE PTR [edx-0x6a],ah
  40a1ce:	mov    DWORD PTR [eax+0x62],eax
  40a1d1:	and    al,0x2
  40a1d3:	add    BYTE PTR [edx-0x26],ah
  40a1d6:	add    al,0x0
  40a1d8:	bound  eax,QWORD PTR [esi+0x4262408b]
  40a1de:	add    al,BYTE PTR [eax]
  40a1e0:	bound  ecx,QWORD PTR [edx+0x2]
  40a1e3:	add    BYTE PTR [edx+0x1a],ah
  40a1e6:	mov    eax,DWORD PTR [eax+0x62]
  40a1e9:	dec    ecx
  40a1ea:	add    al,BYTE PTR [eax]
  40a1ec:	bound  ebp,QWORD PTR [edx]
  40a1ee:	add    al,BYTE PTR [eax]
  40a1f0:	bound  ebx,QWORD PTR [esi]
  40a1f2:	jb     0x40a234
  40a1f4:	bound  eax,QWORD PTR [ebp+0x2]
  40a1f7:	add    BYTE PTR [edx+0x36],ah
  40a1fa:	add    al,BYTE PTR [eax]
  40a1fc:	bound  esi,QWORD PTR [edx]
  40a1fe:	add    al,BYTE PTR [eax]
  40a200:	bound  esi,QWORD PTR [edx]
  40a202:	add    al,BYTE PTR [eax]
  40a204:	bound  esi,QWORD PTR [edx]
  40a206:	add    al,BYTE PTR [eax]
  40a208:	bound  esi,QWORD PTR [edx]
  40a20a:	add    al,BYTE PTR [eax]
  40a20c:	bound  esi,QWORD PTR [edx]
  40a20e:	add    al,BYTE PTR [eax]
  40a210:	bound  esi,QWORD PTR [edx]
  40a212:	add    al,BYTE PTR [eax]
  40a214:	bound  esi,QWORD PTR [edx]
  40a216:	add    al,BYTE PTR [eax]
  40a218:	bound  esi,QWORD PTR [edx]
  40a21a:	add    al,BYTE PTR [eax]
  40a21c:	bound  esi,QWORD PTR [edx]
  40a21e:	in     eax,0xff
  40a220:	adc    dh,0xdf
  40a223:	and    eax,0x0
	...
  40a238:	jge    0x40a26c
  40a23a:	add    ch,BYTE PTR [edx]
  40a23c:	dec    ecx
  40a23d:	xor    ch,cl
  40a23f:	sub    eax,0x31d54262
  40a244:	push   ecx
  40a245:	inc    esi
  40a246:	shl    DWORD PTR ds:0xdcdfd94d,1
  40a24c:	std    
  40a24d:	aas    
  40a24e:	call   0xe81a0456
  40a253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a254:	cmp    DWORD PTR [ebx+eax*4-0x70478060],0xffffffac
  40a25c:	dec    ebx
  40a25d:	mov    ah,0x8b
  40a25f:	test   al,0x47
  40a261:	mov    al,0x77
  40a263:	xchg   esp,eax
  40a264:	push   ebx
  40a265:	int3   
  40a266:	jae    0x40a1f8
  40a268:	dec    edi
  40a269:	enter  0x9b5f,0x3b
  40a26d:	(bad)  
  40a26f:	add    edx,DWORD PTR [eax+eiz*4]
  40a272:	inc    edi
  40a273:	mov    ds:0x9f43bc43,eax
  40a278:	aas    
  40a279:	mov    eax,0xb40bab4f
  40a27e:	dec    ebx
  40a27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a280:	pop    es
  40a281:	mov    al,0x37
  40a283:	xchg   ebx,eax
  40a284:	adc    ecx,esp
  40a286:	xor    ecx,DWORD PTR [edi-0x64e037f1]
  40a28c:	sti    
  40a28d:	fcomp  DWORD PTR [ebx]
  40a28f:	add    al,0xf4
  40a291:	fsub   st,st(7)
  40a293:	add    esp,DWORD PTR [edx-0x27]
  40a296:	out    0x3,eax
  40a298:	(bad)  
  40a299:	(bad)  
  40a29b:	add    eax,DWORD PTR [eax]
	...
  40a2ad:	add    BYTE PTR [eax],al
  40a2af:	add    BYTE PTR [edx-0x27],ah
  40a2b2:	out    0x3,eax
  40a2b4:	(bad)  
  40a2b5:	(bad)  
  40a2b7:	add    esp,DWORD PTR [edx-0x27]
  40a2ba:	out    0x3,eax
  40a2bc:	(bad)  
  40a2bd:	(bad)  
  40a2bf:	add    esp,DWORD PTR [edx-0x27]
  40a2c2:	out    0x3,eax
  40a2c4:	(bad)  
  40a2c5:	(bad)  
  40a2c7:	add    esp,DWORD PTR [edx-0x27]
  40a2ca:	out    0x3,eax
  40a2cc:	(bad)  
  40a2cd:	(bad)  
  40a2cf:	add    esp,DWORD PTR [edx-0x27]
  40a2d2:	out    0x3,eax
  40a2d4:	(bad)  
  40a2d5:	fld    DWORD PTR [eax]
  40a2d7:	jmp    0xe9417c3d
  40a2dc:	popa   
  40a2dd:	fld    DWORD PTR [eax]
  40a2df:	jmp    0xe9417c45
  40a2e4:	popa   
  40a2e5:	fld    DWORD PTR [eax]
  40a2e7:	jmp    0xe9417c4d
  40a2ec:	popa   
  40a2ed:	fld    DWORD PTR [eax]
  40a2ef:	jmp    0xe9417c55
  40a2f4:	popa   
  40a2f5:	fld    DWORD PTR [eax]
  40a2f7:	jmp    0xe9417c5d
  40a2fc:	popa   
  40a2fd:	fld    DWORD PTR [eax]
  40a2ff:	jmp    0xe9417c65
  40a304:	popa   
  40a305:	fld    DWORD PTR [eax]
  40a307:	jmp    0xe9417c6d
  40a30c:	popa   
  40a30d:	fld    DWORD PTR [eax]
  40a30f:	jmp    0xe9417c75
	...
  40a328:	popa   
  40a329:	fld    DWORD PTR [eax]
  40a32b:	jmp    0xe9417c91
  40a330:	popa   
  40a331:	fld    DWORD PTR [eax]
  40a333:	jmp    0xe9417c99
  40a338:	popa   
  40a339:	fld    DWORD PTR [eax]
  40a33b:	xchg   esi,eax
  40a33c:	dec    edx
  40a33d:	dec    BYTE PTR ds:[esi-0x7901c1b6]
  40a344:	jp     0x40a384
  40a346:	(bad)  
  40a347:	jle    0x40a3c3
  40a349:	ds (bad) 
  40a34b:	jbe    0x40a3b7
  40a34d:	ds (bad) 
  40a34f:	outs   dx,BYTE PTR ds:[esi]
  40a350:	push   0x3e
  40a352:	(bad)  
  40a353:	pop    dx
  40a355:	ds (bad) 
  40a357:	pop    esi
  40a358:	pop    edx
  40a359:	ds (bad) 
  40a35b:	push   esi
  40a35c:	dec    edx
  40a35d:	dec    BYTE PTR ds:[esi+0x4a]
  40a361:	inc    BYTE PTR ds:[eax]
  40a364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a365:	loope  0x40a364
  40a367:	call   DWORD PTR [ecx+eiz*8-0x3]
  40a36b:	(bad)  
  40a36c:	sti    
  40a36d:	fiadd  DWORD PTR [edx]
  40a36f:	add    edi,edi
  40a371:	ds add al,0x7
  40a374:	repz sar ch,cl
  40a377:	call   DWORD PTR [ecx+eiz*8-0x3]
  40a37b:	call   DWORD PTR [esp+ecx*8+0x9]
  40a37f:	or     al,0x6
  40a381:	ror    BYTE PTR ds:0xfde164ff,1
  40a387:	call   esp
  40a389:	in     eax,0xfd
  40a38b:	inc    DWORD PTR [eax]
	...
  40a39d:	add    BYTE PTR [eax],al
  40a39f:	add    ah,dl
  40a3a1:	in     eax,0xfd
  40a3a3:	push   DWORD PTR [ebp+eiz*8-0x1a3b0003]
  40a3aa:	std    
  40a3ab:	call   DWORD PTR [ebp+eiz*8-0x2d6b0003]
  40a3b2:	or     DWORD PTR [esi+eax*4],ecx
  40a3b5:	ror    DWORD PTR ds:0xfde5a4ff,cl
  40a3bb:	call   esp
  40a3bd:	in     eax,0xfd
  40a3bf:	call   esp
  40a3c1:	in     eax,0xfd
  40a3c3:	push   DWORD PTR [ebp+eiz*8-0x1a3b0003]
  40a3ca:	std    
  40a3cb:	call   esp
  40a3cd:	in     eax,0xfd
  40a3cf:	(bad)  
  40a3d0:	jnp    0x40a3ab
  40a3d2:	add    BYTE PTR [eax],al
  40a3d4:	jnp    0x40a3af
  40a3d6:	add    BYTE PTR [eax],al
  40a3d8:	dec    ebx
  40a3d9:	fld    DWORD PTR [eax]
  40a3db:	add    BYTE PTR [ebx-0x27],cl
  40a3de:	add    BYTE PTR [eax],al
  40a3e0:	cmp    ebx,ecx
  40a3e2:	add    BYTE PTR [eax],al
  40a3e4:	cmp    ebx,ecx
  40a3e6:	add    BYTE PTR [eax],al
  40a3e8:	dec    ebx
  40a3e9:	fld    DWORD PTR [eax]
  40a3eb:	add    BYTE PTR [ebx-0x27],cl
  40a3ee:	add    BYTE PTR [eax],al
  40a3f0:	bound  esi,QWORD PTR [edx]
  40a3f2:	add    al,BYTE PTR [eax]
  40a3f4:	bound  esi,QWORD PTR [edx]
  40a3f6:	add    al,BYTE PTR [eax]
  40a3f8:	bound  esi,QWORD PTR [edx]
  40a3fa:	add    al,BYTE PTR [eax]
  40a3fc:	bound  esi,QWORD PTR [edx]
  40a3fe:	add    al,BYTE PTR [eax]
  40a400:	bound  esi,QWORD PTR [edx]
  40a402:	add    al,BYTE PTR [eax]
	...
  40a418:	bound  esi,QWORD PTR [edx]
  40a41a:	add    al,BYTE PTR [eax]
  40a41c:	bound  esi,QWORD PTR [edx]
  40a41e:	add    al,BYTE PTR [eax]
  40a420:	bound  esi,QWORD PTR [edx]
  40a422:	add    al,BYTE PTR [eax]
  40a424:	bound  esi,QWORD PTR [edx]
  40a426:	add    al,BYTE PTR [eax]
  40a428:	bound  esi,QWORD PTR [edx]
  40a42a:	add    al,BYTE PTR [eax]
  40a42c:	bound  esi,QWORD PTR [edx]
  40a42e:	add    al,BYTE PTR [eax]
  40a430:	bound  esi,QWORD PTR [edx]
  40a432:	add    al,BYTE PTR [eax]
  40a434:	bound  esi,QWORD PTR [edx]
  40a436:	add    al,BYTE PTR [eax]
  40a438:	bound  esi,QWORD PTR [edx]
  40a43a:	add    al,BYTE PTR [eax]
  40a43c:	bound  esi,QWORD PTR [edx]
  40a43e:	add    al,BYTE PTR [eax]
  40a440:	bound  esi,QWORD PTR [edx]
  40a442:	add    al,BYTE PTR [eax]
  40a444:	bound  esi,QWORD PTR [edx]
  40a446:	add    al,BYTE PTR [eax]
  40a448:	bound  esi,QWORD PTR [edx]
  40a44a:	add    al,BYTE PTR [eax]
  40a44c:	bound  esi,QWORD PTR [edx]
  40a44e:	add    al,BYTE PTR [eax]
  40a450:	bound  esi,QWORD PTR [edx]
  40a452:	add    al,BYTE PTR [eax]
  40a454:	bound  esi,QWORD PTR [edx]
  40a456:	add    al,BYTE PTR [eax]
  40a458:	bound  esi,QWORD PTR [edx]
  40a45a:	add    al,BYTE PTR [eax]
  40a45c:	bound  esi,QWORD PTR [edx]
  40a45e:	add    al,BYTE PTR [eax]
  40a460:	bound  esi,QWORD PTR [edx]
  40a462:	add    al,BYTE PTR [eax]
  40a464:	bound  esi,QWORD PTR [edx]
  40a466:	add    al,BYTE PTR [eax]
  40a468:	bound  esi,QWORD PTR [edx]
  40a46a:	add    al,BYTE PTR [eax]
  40a46c:	bound  esi,QWORD PTR [edx]
  40a46e:	add    al,BYTE PTR [eax]
  40a470:	bound  esi,QWORD PTR [edx]
  40a472:	add    al,BYTE PTR [eax]
  40a474:	bound  esi,QWORD PTR [edx]
  40a476:	add    al,BYTE PTR [eax]
  40a478:	bound  esi,QWORD PTR [edx]
  40a47a:	add    al,BYTE PTR [eax]
	...
  40a490:	(bad)  
  40a491:	(bad)  
  40a493:	add    esp,DWORD PTR [edx-0x27]
  40a496:	out    0x3,eax
  40a498:	(bad)  
  40a499:	(bad)  
  40a49b:	add    al,0x63
  40a49d:	fld1   
  40a49f:	add    al,0x63
  40a4a1:	(bad)  
  40a4a3:	add    al,0x63
  40a4a5:	(bad)  
  40a4a7:	add    al,0x63
  40a4a9:	(bad)  
  40a4ab:	add    al,0x63
  40a4ad:	(bad)  
  40a4af:	add    al,0x63
  40a4b1:	(bad)  
  40a4b3:	add    al,0x63
  40a4b5:	(bad)  
  40a4b7:	add    al,0x63
  40a4b9:	fld1   
  40a4bb:	add    al,0x63
  40a4bd:	(bad)  
  40a4bf:	add    al,0x63
  40a4c1:	(bad)  
  40a4c3:	add    al,0x63
  40a4c5:	(bad)  
  40a4c7:	add    al,0x63
  40a4c9:	(bad)  
  40a4cb:	add    al,0x63
  40a4cd:	(bad)  
  40a4cf:	add    al,0x63
  40a4d1:	(bad)  
  40a4d3:	add    ah,BYTE PTR [ebx-0x26]
  40a4d6:	call   0xe91b07dd
  40a4db:	add    ah,BYTE PTR [ebx-0x26]
  40a4de:	call   0xe91b07e5
  40a4e3:	add    ah,BYTE PTR [ebx-0x26]
  40a4e6:	call   0xe91b07ed
  40a4eb:	add    ah,BYTE PTR [ebx-0x26]
  40a4ee:	call   0xe91b07f5
  40a4f3:	add    al,BYTE PTR [eax]
	...
  40a505:	add    BYTE PTR [eax],al
  40a507:	add    BYTE PTR [ebx-0x26],ah
  40a50a:	call   0xe81a0811
  40a50f:	add    esp,DWORD PTR [edx-0x27]
  40a512:	out    0x3,eax
  40a514:	(bad)  
  40a515:	(bad)  
  40a517:	add    esp,DWORD PTR [edx-0x27]
  40a51a:	out    0x3,eax
  40a51c:	(bad)  
  40a51d:	fld    DWORD PTR [eax]
  40a51f:	jmp    0xe9417e85
  40a524:	popa   
  40a525:	fld    DWORD PTR [eax]
  40a527:	jmp    0xe9417e8d
  40a52c:	popa   
  40a52d:	fld    DWORD PTR [eax]
  40a52f:	jmp    0xe9417e95
  40a534:	popa   
  40a535:	fld    DWORD PTR [eax]
  40a537:	jmp    0xe9417e9d
  40a53c:	popa   
  40a53d:	fld    DWORD PTR [eax]
  40a53f:	jmp    0xe9417ea5
  40a544:	popa   
  40a545:	fld    DWORD PTR [eax]
  40a547:	jmp    0xe9417ead
  40a54c:	popa   
  40a54d:	fld    DWORD PTR [eax]
  40a54f:	jmp    0xe9417eb5
  40a554:	popa   
  40a555:	fld    DWORD PTR [eax]
  40a557:	jmp    0xe9417ebd
  40a55c:	popa   
  40a55d:	fld    DWORD PTR [eax]
  40a55f:	jmp    0xe9417ec5
  40a564:	popa   
  40a565:	fld    DWORD PTR [eax]
  40a567:	jmp    0xe9417ecd
	...
  40a580:	popa   
  40a581:	fld    DWORD PTR [eax]
  40a583:	jmp    0xe9417ee9
  40a588:	popa   
  40a589:	fld    DWORD PTR [eax]
  40a58b:	jmp    0xe9417ef1
  40a590:	popa   
  40a591:	fld    DWORD PTR [eax]
  40a593:	jmp    0xe9417ef9
  40a598:	popa   
  40a599:	fld    DWORD PTR [eax]
  40a59b:	jmp    0xe9417f01
  40a5a0:	popa   
  40a5a1:	fld    DWORD PTR [eax]
  40a5a3:	inc    esp
  40a5a4:	popa   
  40a5a5:	out    0x0,al
  40a5a7:	pop    ecx
  40a5a8:	rcr    BYTE PTR [ecx-0x29320000],cl
  40a5ae:	push   cs
  40a5af:	add    BYTE PTR [edi],al
  40a5b1:	leave  
  40a5b2:	inc    eax
  40a5b3:	add    BYTE PTR [eax-0x2b],bl
  40a5b6:	adc    al,BYTE PTR [eax]
  40a5b8:	xlat   BYTE PTR ds:[ebx]
  40a5b9:	enter  0x40,0x26
  40a5bd:	(bad)  
  40a5be:	or     BYTE PTR [eax],al
  40a5c0:	xchg   ebx,eax
  40a5c1:	leave  
  40a5c2:	inc    eax
  40a5c3:	add    ch,dh
  40a5c5:	aad    0x7
  40a5c7:	add    BYTE PTR [edi-0x43ffbf37],dh
  40a5cd:	aad    0x8
  40a5cf:	add    bl,bh
  40a5d1:	test   eax,0xd68d0040
  40a5d6:	or     al,BYTE PTR [eax]
  40a5d8:	pop    ds
  40a5d9:	stos   BYTE PTR es:[edi],al
  40a5da:	inc    eax
  40a5db:	add    ah,ah
  40a5dd:	aad    0x4
  40a5df:	add    BYTE PTR [ebx-0x37],ah
  40a5e2:	inc    eax
	...
  40a5f7:	add    BYTE PTR [esi+edx*8+0xe],al
  40a5fb:	add    BYTE PTR [ebx+0x2f0040a9],ch
  40a601:	(bad)  
  40a602:	or     al,0x0
  40a604:	or     ebp,DWORD PTR [edx-0x29dfffc0]
  40a60a:	adc    BYTE PTR [eax],al
  40a60c:	or     ebp,DWORD PTR [edx-0x2a85ffc0]
  40a612:	or     eax,0x40c17700
  40a617:	add    cl,al
  40a619:	aad    0xf
  40a61b:	add    BYTE PTR [edi],ah
  40a61d:	rol    DWORD PTR [eax+0x0],0x79
  40a621:	aad    0x5
  40a623:	add    BYTE PTR [ebx],ah
  40a625:	rol    DWORD PTR [eax+0x0],0x89
  40a629:	aad    0x2
  40a62b:	add    BYTE PTR [ebx],cl
  40a62d:	rol    DWORD PTR [eax+0x0],0x5a
  40a631:	aad    0x4
  40a633:	add    BYTE PTR [edi],al
  40a635:	rol    DWORD PTR [eax+0x0],0x62
  40a639:	sub    DWORD PTR [edx],eax
  40a63b:	adc    DWORD PTR [edx-0x6a],esp
  40a63e:	js     0x40a680
  40a640:	(bad)
  40a645:	mov    ds:0x90624078,al
  40a64a:	add    al,0x5
  40a64c:	(bad)  
  40a64e:	js     0x40a690
  40a650:	bound  eax,QWORD PTR [edx+eax*1+0x797a6221]
  40a657:	inc    eax
  40a658:	bound  esi,QWORD PTR [edi]
  40a65a:	add    cl,BYTE PTR [eax]
	...
  40a670:	bound  eax,QWORD PTR [esi]
  40a672:	jns    0x40a6b4
  40a674:	bound  esp,QWORD PTR [ebp+eax*1+0x7]
  40a678:	bound  ecx,QWORD PTR [edx-0x549dbf88]
  40a67e:	add    al,0x4
  40a680:	(bad)  
  40a682:	js     0x40a6c4
  40a684:	bound  edx,QWORD PTR [esi]
  40a686:	add    al,BYTE PTR [esi]
  40a688:	(bad)  
  40a689:	cli    
  40a68a:	js     0x40a6cc
  40a68c:	(bad)  
  40a68d:	rol    BYTE PTR [eax+ecx*1],0x62
  40a691:	inc    edx
  40a692:	jns    0x40a6d4
  40a694:	bound  edx,QWORD PTR [edi+0x2]
  40a697:	pop    es
  40a698:	bound  eax,QWORD PTR [esi+0x79]
  40a69b:	inc    eax
  40a69c:	bound  eax,QWORD PTR [ebx]
  40a69e:	add    eax,0x790e6215
  40a6a3:	inc    eax
  40a6a4:	bound  ebp,QWORD PTR [eax]
  40a6a6:	add    dl,BYTE PTR [esi]
  40a6a8:	(bad)  
  40a6a9:	out    0x77,al
  40a6ab:	inc    eax
  40a6ac:	bound  ebx,QWORD PTR [eax+0x2]
  40a6af:	pop    es
  40a6b0:	(bad)  
  40a6b1:	(bad)  
  40a6b2:	ja     0x40a6f4
  40a6b4:	bound  ebx,QWORD PTR [edx+eax*1]
  40a6b7:	or     ah,BYTE PTR [edx+0x6]
  40a6ba:	js     0x40a6fc
  40a6bc:	bound  ecx,QWORD PTR [edi]
  40a6be:	add    al,BYTE PTR ds:0x4077ca62
  40a6c4:	(bad)  
  40a6c5:	fldcw  WORD PTR [edx+0x3]
  40a6c8:	fld    DWORD PTR fs:[edi]
  40a6cb:	jns    0x40a6ef
  40a6cd:	fld    DWORD PTR [esi-0x2694fd]
  40a6d3:	js     0x40a6d5
	...
  40a6e5:	add    BYTE PTR [eax],al
  40a6e7:	add    BYTE PTR [edx+0x720373d9],ah
  40a6ed:	fpatan 
  40a6ef:	js     0x40a693
  40a6f1:	fldenv [ecx+0x5fd96a03]
  40a6f7:	js     0x40a69b
  40a6f9:	fnstenv [eax]
  40a6fb:	add    esp,DWORD PTR [ebp-0x27]
  40a6fe:	jae    0x40a778
  40a700:	mov    ds:0x65033fd9,al
  40a705:	fldcw  WORD PTR [ebx+0x78]
  40a708:	mov    ds:0x5a03bdd9,al
  40a70d:	fld    DWORD PTR [ebx+0x42d9a278]
  40a713:	add    edx,DWORD PTR [edi-0x27]
  40a716:	ja     0x40a790
  40a718:	mov    ds:0x590357d9,al
  40a71d:	fldcw  WORD PTR [edi]
  40a71f:	js     0x40a6c3
  40a721:	fnstcw WORD PTR [eax]
  40a723:	add    ebp,DWORD PTR [ecx-0x27]
  40a726:	xor    edi,DWORD PTR [eax+0x22]
  40a729:	fldenv [esi+0x3]
  40a72c:	jo     0x40a707
  40a72e:	pop    es
  40a72f:	js     0x40a753
  40a731:	(bad)  [edx+0x3]
  40a734:	imul   ebx,ecx,0xfffffff3
  40a737:	ja     0x40a75b
  40a739:	(bad)  [eax-0x1826a6fc]
  40a73f:	jns    0x40a763
  40a741:	fld    DWORD PTR [ecx+0x4]
  40a744:	imul   ebx,ecx,0xd92279db
  40a74a:	jl     0x40a750
	...
  40a760:	jno    0x40a73b
  40a762:	fistp  QWORD PTR [ecx+0x22]
  40a765:	fld    DWORD PTR [eax]
  40a767:	int    0x66
  40a769:	leave  
  40a76a:	add    ch,bh
  40a76c:	sti    
  40a76d:	cwde   
  40a76e:	add    BYTE PTR [edi],al
  40a770:	leavew 
  40a772:	add    BYTE PTR [ecx],ch
  40a774:	call   0x6644a811
  40a779:	retf   
  40a77a:	add    BYTE PTR ds:0x6d0099d8,dh
  40a780:	retfw  
  40a782:	add    BYTE PTR [ecx],dl
  40a784:	enter  0x99,0x7a
  40a788:	enterw 0xed00,0xbb
  40a78d:	cdq    
  40a78e:	add    BYTE PTR [esi+eiz*2-0x5786ff37],bl
  40a795:	cdq    
  40a796:	add    BYTE PTR [eax-0x7aff359a],cl
  40a79c:	cwde   
  40a79d:	cdq    
  40a79e:	add    bh,bl
  40a7a0:	popa   
  40a7a1:	retf   0x8100
  40a7a4:	mov    BYTE PTR [ecx-0x2c99ad00],bl
  40a7aa:	add    BYTE PTR ds:0xaf009978,bl
  40a7b0:	popa   
  40a7b1:	out    0x0,eax
  40a7b3:	adc    DWORD PTR [eax-0x67],ebp
  40a7b6:	add    BYTE PTR [edx],dl
  40a7b8:	out    0x0,ax
  40a7bb:	adc    DWORD PTR [eax-0x67],ebx
  40a7be:	add    BYTE PTR [eax+0x66],bl
  40a7c1:	int    0x0
  40a7c3:	icebp  
	...
  40a7d8:	dec    edx
  40a7d9:	cdq    
  40a7da:	add    BYTE PTR [ebp-0x36ff329f],bl
  40a7e0:	cmp    bl,BYTE PTR [ecx-0x349e5400]
  40a7e6:	add    BYTE PTR [ecx],ah
  40a7e8:	sub    ebx,DWORD PTR [ecx-0x3099e700]
  40a7ee:	add    BYTE PTR ds:0x991b,bl
  40a7f4:	pop    ebp
  40a7f5:	fst    QWORD PTR [esi]
  40a7f7:	add    BYTE PTR [edi],bl
  40a7f9:	mov    al,0x40
  40a7fb:	add    BYTE PTR [ecx],dl
  40a7fd:	ficom  DWORD PTR [ebx]
  40a7ff:	add    BYTE PTR [edi-0x50],al
  40a802:	inc    eax
  40a803:	add    BYTE PTR [edx],bl
  40a805:	fidiv  DWORD PTR [eax]
  40a807:	add    bh,ch
  40a809:	mov    al,0x40
  40a80b:	add    BYTE PTR [esi-0x23],ch
  40a80e:	add    eax,0x40b10300
  40a813:	add    BYTE PTR [esi],ah
  40a815:	fiadd  DWORD PTR [edi]
  40a817:	add    bl,ch
  40a819:	mov    al,0x40
  40a81b:	add    BYTE PTR [ecx],bh
  40a81d:	fimul  DWORD PTR [edx]
  40a81f:	add    bh,ah
  40a821:	mov    al,0x40
  40a823:	add    BYTE PTR [ebp-0x6cffcd26],ah
  40a829:	mov    cl,0x40
  40a82b:	add    BYTE PTR [ecx],ch
  40a82d:	fiadd  DWORD PTR [esi]
  40a82f:	add    BYTE PTR [edi],al
  40a831:	ret    0x40
  40a834:	jg     0x40a810
  40a836:	or     al,0x0
  40a838:	pop    edi
  40a839:	lds    eax,FWORD PTR [eax+0x0]
	...
  40a850:	inc    esp
  40a851:	fimul  DWORD PTR [ecx]
  40a853:	add    bh,ch
  40a855:	rol    DWORD PTR [eax+0x0],0x64
  40a859:	fld    QWORD PTR ds:0x40c1bb00
  40a85f:	add    BYTE PTR [ebx+0x30004d9],ah
  40a865:	ret    0x40
  40a868:	adc    al,0xda
  40a86a:	add    al,BYTE PTR [eax]
  40a86c:	jmp    0x40a82f
  40a86e:	inc    eax
  40a86f:	add    BYTE PTR [esi-0x30fffb27],dl
  40a875:	rol    DWORD PTR [eax+0x0],0xe6
  40a879:	fcom   QWORD PTR [eax+eax*1]
  40a87c:	lds    eax,FWORD PTR [bx+si+0x0]
  40a880:	bound  esp,QWORD PTR [edi-0x739dc2fc]
  40a886:	ins    BYTE PTR es:[edi],dx
  40a887:	inc    eax
  40a888:	(bad)  
  40a889:	xlat   BYTE PTR ds:[ebx]
  40a88a:	add    al,0x5
  40a88c:	bound  ebp,QWORD PTR [esp+ebp*2+0x5246240]
  40a893:	das    
  40a894:	(bad)  
  40a895:	les    ebp,FWORD PTR [eax+eax*2+0x62]
  40a899:	enter  0x504,0x62
  40a89d:	fs ins DWORD PTR es:[edi],dx
  40a89f:	inc    eax
  40a8a0:	bound  edx,QWORD PTR [edx+0x5]
  40a8a3:	add    eax,0x406d4e62
  40a8a8:	bound  edx,QWORD PTR [ecx]
  40a8aa:	add    cl,BYTE PTR [esi]
  40a8ac:	bound  esi,QWORD PTR [esi-0x1c9dbf94]
  40a8b2:	add    al,0x14
	...
  40a8c8:	bound  edx,QWORD PTR [esi]
  40a8ca:	ins    DWORD PTR es:[edi],dx
  40a8cb:	inc    eax
  40a8cc:	bound  eax,QWORD PTR [edi+0x5]
  40a8cf:	or     DWORD PTR [edx-0x22],esp
  40a8d2:	imul   eax,DWORD PTR [eax+0x62],0x26
  40a8d6:	add    al,BYTE PTR [esi]
  40a8d8:	(bad)  
  40a8da:	imul   eax,DWORD PTR [eax+0x62],0xffffffb9
  40a8de:	add    al,0x5
  40a8e0:	(bad)  
  40a8e1:	fisubr DWORD PTR [ebx+0x40]
  40a8e4:	(bad)
  40a8e9:	sub    BYTE PTR [ebp+0x40],0x62
  40a8ed:	lds    eax,FWORD PTR [ebx+edx*1]
  40a8f0:	bound  edi,QWORD PTR [esi+0x6d]
  40a8f3:	inc    eax
  40a8f4:	(bad)  
  40a8f5:	leave  
  40a8f6:	add    al,0x3d
  40a8f8:	bound  ebp,QWORD PTR [edx+0x6d]
  40a8fb:	inc    eax
  40a8fc:	bound  eax,QWORD PTR [eax-0x459df5fe]
  40a902:	imul   eax,DWORD PTR [eax+0x62],0x10
  40a906:	add    al,BYTE PTR [esi]
  40a908:	bound  ebx,QWORD PTR [esi-0x269dbf95]
  40a90e:	outs   dx,BYTE PTR ds:[esi]
  40a90f:	add    ebx,DWORD PTR [ecx+ebx*8-0x75]
  40a913:	ins    BYTE PTR es:[edi],dx
  40a914:	and    bl,cl
  40a916:	cld    
  40a917:	add    ebp,DWORD PTR [ebx-0x27]
  40a91a:	xchg   ebx,eax
  40a91b:	ins    BYTE PTR es:[edi],dx
  40a91c:	and    bl,cl
  40a91e:	mov    BYTE PTR [ebx],al
  40a920:	pop    esi
  40a921:	fldenv [edi+0x1dd9226c]
  40a927:	add    al,0x6a
  40a929:	fstp   DWORD PTR [edi+0x6c]
	...
  40a93f:	add    BYTE PTR [edx],ah
  40a941:	fnstcw WORD PTR [ebx-0x4c26abfd]
  40a947:	ins    BYTE PTR es:[edi],dx
  40a948:	mov    ds:0x6103bed9,al
  40a94d:	fld    DWORD PTR [ebx+0x4ed9a26c]
  40a953:	add    ebx,DWORD PTR [esi-0x27]
  40a956:	(bad)  
  40a957:	ins    BYTE PTR es:[edi],dx
  40a958:	mov    ds:0x6b03f9d9,al
  40a95d:	fnstenv [edi+0x6c]
  40a960:	mov    ds:0x550402d9,al
  40a965:	fstp   DWORD PTR [ebx+0x6c]
  40a968:	mov    ds:0x5d038ad9,al
  40a96d:	(bad)  
  40a96f:	imul   esp,DWORD PTR [edx+0x560360d9],0xa269d3d9
  40a979:	fxam   
  40a97b:	add    ebp,DWORD PTR [ebx-0x27]
  40a97e:	add    ebp,DWORD PTR [edx-0x5e]
  40a981:	fstp   DWORD PTR [ebp+0x3]
  40a984:	pop    eax
  40a985:	(bad)  
  40a987:	imul   esp,DWORD PTR [edx],0x5e0362d9
  40a98d:	fxch   st(3)
  40a98f:	imul   esp,DWORD PTR [edx],0x1c037cd9
  40a995:	fisubr DWORD PTR [edi+0xd92269]
  40a99b:	cmp    BYTE PTR [ecx-0x72],ah
  40a99e:	add    BYTE PTR [ecx+0x38],bl
  40a9a1:	cdq    
  40a9a2:	add    BYTE PTR [ebx+0x0],cl
	...
  40a9b8:	pop    esi
  40a9b9:	add    al,BYTE PTR [ecx]
  40a9bb:	ror    DWORD PTR [ebx],1
  40a9bd:	cdq    
  40a9be:	add    BYTE PTR [ecx],al
  40a9c0:	pop    esi
  40a9c1:	fild   WORD PTR [eax]
  40a9c3:	cmc    
  40a9c4:	std    
  40a9c5:	cwde   
  40a9c6:	add    BYTE PTR ds:0x900e85e,bl
  40a9cc:	repnz cwde 
  40a9ce:	add    BYTE PTR [esi+ebx*2-0xdeaff24],dh
  40a9d5:	cwde   
  40a9d6:	add    BYTE PTR ds:0x3d00e25e,dl
  40a9dc:	rcr    BYTE PTR [ecx+0x561f100],cl
  40a9e2:	add    DWORD PTR [ecx],eax
  40a9e4:	rcr    BYTE PTR [ecx-0x1aa1b100],cl
  40a9ea:	add    BYTE PTR [ecx-0x4e],ah
  40a9ed:	cdq    
  40a9ee:	add    BYTE PTR [edi+0x5e],dl
  40a9f1:	popf   
  40a9f2:	add    BYTE PTR [ecx-0x4e],al
  40a9f5:	cdq    
  40a9f6:	add    dl,bh
  40a9f8:	popa   
  40a9f9:	fld    QWORD PTR [eax]
  40a9fb:	pop    ecx
  40a9fc:	xchg   edx,eax
  40a9fd:	cdq    
  40a9fe:	add    BYTE PTR [ebp+0x5100dd61],dh
  40aa04:	xchg   edx,eax
  40aa05:	cdq    
  40aa06:	add    cl,al
  40aa08:	popa   
  40aa09:	fild   WORD PTR [eax]
  40aa0b:	jmp    0x5841439c
  40aa10:	pop    esi
  40aa11:	fild   DWORD PTR [eax]
  40aa13:	fnstsw WORD PTR [ecx+ebx*4+0x0]
  40aa17:	adc    eax,0xf500fb5e
	...
  40aa30:	dec    esp
  40aa31:	cdq    
  40aa32:	add    BYTE PTR [edx],bh
  40aa34:	pop    esi
  40aa35:	fadd   QWORD PTR [eax]
  40aa37:	int    0x3c
  40aa39:	cdq    
  40aa3a:	add    BYTE PTR [eax],al
  40aa3c:	dec    ecx
  40aa3d:	(bad)  
  40aa3e:	add    eax,0x40c40700
  40aa43:	add    bh,cl
  40aa45:	(bad)  
  40aa46:	add    DWORD PTR [eax],eax
  40aa48:	iret   
  40aa49:	ret    
  40aa4a:	inc    eax
  40aa4b:	add    BYTE PTR [eax-0x23],dl
  40aa4e:	adc    eax,0x40c25b00
  40aa53:	add    BYTE PTR [eax],bh
  40aa55:	fisttp QWORD PTR ds:0x40c22300
  40aa5b:	add    al,bl
  40aa5d:	(bad)  
  40aa5e:	add    eax,DWORD PTR [eax]
  40aa60:	and    eax,edx
  40aa62:	inc    eax
  40aa63:	add    BYTE PTR [esi-0x23],dl
  40aa66:	adc    al,0x0
  40aa68:	sti    
  40aa69:	ret    0x40
  40aa6c:	push   ebp
  40aa6d:	fstp   QWORD PTR [esi]
  40aa6f:	add    bl,ah
  40aa71:	ret    0x40
  40aa74:	call   0xb340b04e
  40aa79:	ret    
  40aa7a:	inc    eax
  40aa7b:	add    BYTE PTR [ebx],dl
  40aa7d:	(bad)  
  40aa7e:	adc    BYTE PTR [eax],al
  40aa80:	or     eax,ebx
  40aa82:	inc    eax
  40aa83:	add    BYTE PTR [eax-0x28fff92a],dl
  40aa89:	ret    0x40
  40aa8c:	fst    st(5)
  40aa8e:	add    DWORD PTR [eax],eax
  40aa90:	pop    edi
  40aa91:	ret    
  40aa92:	inc    eax
	...
  40aaa7:	add    dh,dl
  40aaa9:	aad    0x2d
  40aaab:	add    BYTE PTR [ebx-0x37ffbf3d],bl
  40aab1:	aad    0x15
  40aab3:	add    BYTE PTR [ebx],bl
  40aab5:	les    eax,FWORD PTR [eax+0x0]
  40aab8:	and    edx,esi
  40aaba:	sbb    al,BYTE PTR [eax]
  40aabc:	arpl   bx,ax
  40aabe:	inc    eax
  40aabf:	add    BYTE PTR [edx-0x2a],bl
  40aac2:	or     eax,0x40c40700
  40aac7:	add    BYTE PTR [edx-0x7f],ah
  40aaca:	add    dl,BYTE PTR [edx+eiz*2]
  40aacd:	ins    BYTE PTR es:[edi],dx
  40aace:	ins    BYTE PTR es:[edi],dx
  40aacf:	inc    eax
  40aad0:	bound  ecx,QWORD PTR [ebx+0x64621f01]
  40aad6:	ins    BYTE PTR es:[edi],dx
  40aad7:	inc    eax
  40aad8:	bound  esp,QWORD PTR [esi]
  40aada:	add    esp,DWORD PTR [edx+eiz*2]
  40aadd:	xchg   esp,eax
  40aade:	imul   eax,DWORD PTR [eax+0x62],0xffffffe4
  40aae2:	add    al,0xa
  40aae4:	bound  ecx,QWORD PTR [ebx+ebp*2+0x40]
  40aae8:	(bad)
  40aaed:	sub    BYTE PTR [ebx+0x40],0x62
  40aaf1:	pop    edi
  40aaf2:	add    eax,0x6b686204
  40aaf7:	inc    eax
  40aaf8:	bound  esp,QWORD PTR [ebp+0x5]
  40aafb:	or     al,0x62
  40aafd:	push   eax
  40aafe:	imul   eax,DWORD PTR [eax+0x62],0xfffffff5
  40ab02:	add    al,0x11
  40ab04:	bound  esp,QWORD PTR [edx+0x6b]
  40ab07:	inc    eax
  40ab08:	bound  edi,QWORD PTR [ebx+0xe04]
	...
  40ab1e:	add    BYTE PTR [eax],al
  40ab20:	bound  eax,QWORD PTR [esi+0x6b]
  40ab23:	inc    eax
  40ab24:	bound  eax,QWORD PTR [ebp+eax*1+0x6b36620c]
  40ab2b:	inc    eax
  40ab2c:	(bad)  
  40ab2d:	lds    eax,FWORD PTR [edx+edx*1]
  40ab30:	bound  eax,QWORD PTR [esi]
  40ab32:	imul   eax,DWORD PTR [eax+0x62],0xe
  40ab36:	add    bl,BYTE PTR [esi]
  40ab38:	(bad)  
  40ab39:	retf   0x4069
  40ab3c:	bound  ecx,QWORD PTR [ecx+0x5]
  40ab3f:	xor    DWORD PTR [edx+0x7a],esp
  40ab42:	imul   eax,DWORD PTR [eax+0x62],0xffffffaf
  40ab46:	add    al,0x9
  40ab48:	bound  ebp,QWORD PTR [esi+0x6b]
  40ab4b:	inc    eax
  40ab4c:	(bad)  
  40ab4d:	mov    DWORD PTR [esp+ecx*1],0x4069ba62
  40ab54:	(bad)  
  40ab55:	fnstcw WORD PTR [ecx+0x4]
  40ab58:	outs   dx,BYTE PTR ds:[esi]
  40ab59:	fnstcw WORD PTR [edi+0x6b]
  40ab5c:	and    bl,cl
  40ab5e:	cwde   
  40ab5f:	add    esp,DWORD PTR [ebp-0x27]
  40ab62:	aas    
  40ab63:	imul   esp,DWORD PTR [edx],0xffffffd9
  40ab66:	popf   
  40ab67:	add    edx,DWORD PTR [esi-0x27]
  40ab6a:	aaa    
  40ab6b:	imul   esp,DWORD PTR [edx],0xffffffd9
  40ab6e:	es add al,0x66
  40ab71:	fstp   DWORD PTR [edi]
  40ab73:	imul   esp,DWORD PTR [edx],0xffffffd9
  40ab76:	(bad)  
  40ab78:	fnstenvw [edi-0x7026dd96]
  40ab7f:	add    esp,DWORD PTR [esi-0x27]
  40ab82:	scas   eax,DWORD PTR es:[edi]
  40ab83:	push   0x0
	...
  40ab95:	add    BYTE PTR [eax],al
  40ab97:	add    BYTE PTR [edx],ah
  40ab99:	fst    DWORD PTR [eax-0x38269bfd]
  40ab9f:	push   0x22
  40aba1:	fnstenv [eax]
  40aba3:	add    al,0x5e
  40aba5:	fnstcw WORD PTR [edi-0x1d26dd96]
  40abab:	add    esp,DWORD PTR [esi-0x27]
  40abae:	lahf   
  40abaf:	push   0xffffffa2
  40abb1:	fld    DWORD PTR [esi]
  40abb3:	add    al,0x6c
  40abb5:	(bad)  
  40abb7:	arpl   WORD PTR [edx+0x650348d9],sp
  40abbd:	fld    st(7)
  40abbf:	arpl   WORD PTR [edx+0x5d038fd9],sp
  40abc5:	fnstcw WORD PTR [edi+0x4d9a263]
  40abcb:	add    al,0x64
  40abcd:	fstp   DWORD PTR [edi]
  40abcf:	mov    fs:0x6603b3d9,al
  40abd5:	fldenv [edi+0x20d9a263]
  40abdb:	add    esp,DWORD PTR [ecx+ebx*8-0x51]
  40abdf:	arpl   WORD PTR [edx+0x619800d9],sp
  40abe5:	loop   0x40abe7
  40abe7:	cdq    
  40abe8:	sbb    DWORD PTR [ecx-0x229ed200],0x9941bd00
  40abf2:	add    BYTE PTR [ecx+eiz*2-0x1f],bh
  40abf6:	add    BYTE PTR [ebp+0x41],bh
  40abf9:	cdq    
  40abfa:	add    bl,ah
	...
  40ac10:	popa   
  40ac11:	fld    QWORD PTR [eax]
  40ac13:	add    DWORD PTR [ecx-0x67],0xe4617700
  40ac1a:	add    BYTE PTR [ecx+0x41],ah
  40ac1d:	cdq    
  40ac1e:	add    BYTE PTR [ebx],al
  40ac20:	data16 loop 0x40ac23
  40ac23:	jne    0x40ac23
  40ac25:	cwde   
  40ac26:	add    BYTE PTR ds:0x8900de66,ah
  40ac2c:	(bad)  
  40ac2d:	cwde   
  40ac2e:	add    BYTE PTR [esi+eiz*2-0x186ff1d],cl
  40ac35:	cwde   
  40ac36:	add    BYTE PTR [edi+0x66],cl
  40ac39:	fiadd  WORD PTR [eax]
  40ac3b:	ins    DWORD PTR es:[edi],dx
  40ac3c:	(bad)  
  40ac3d:	cwde   
  40ac3e:	add    BYTE PTR [ebp+0x66],bh
  40ac41:	mov    DWORD PTR [eax],0x99bead
  40ac47:	jle    0x40acaf
  40ac49:	les    eax,FWORD PTR [eax]
  40ac4b:	test   DWORD PTR [esi+0x66ae0099],edi
  40ac51:	lds    eax,FWORD PTR [eax]
  40ac53:	jge    0x40ac13
  40ac55:	cdq    
  40ac56:	add    bh,cl
  40ac58:	popa   
  40ac59:	fiadd  WORD PTR [eax]
  40ac5b:	aad    0xc0
  40ac5d:	cdq    
  40ac5e:	add    BYTE PTR [ebp+0x500dd61],bh
  40ac64:	sbb    DWORD PTR [ecx-0x229e0600],0x99811500
  40ac6e:	add    BYTE PTR [eax],al
  40ac70:	adc    bl,bl
  40ac72:	or     DWORD PTR [eax],eax
	...
  40ac88:	mov    edi,0xd20040bb
  40ac8d:	fimul  DWORD PTR [eax+eax*1]
  40ac90:	retf   
  40ac91:	mov    ebx,0xdb1b0040
  40ac96:	adc    BYTE PTR [eax],al
  40ac98:	jmp    0x40ac55
  40ac9a:	inc    eax
  40ac9b:	add    BYTE PTR [eax],dl
  40ac9d:	fist   DWORD PTR [ecx]
  40ac9f:	add    bh,ch
  40aca1:	mov    ebx,0xd5490040
  40aca6:	push   cs
  40aca7:	add    BYTE PTR [ebx],dh
  40aca9:	mov    edx,0xdb040040
  40acae:	lldt   WORD PTR [ebx]
  40acb1:	mov    edx,0xdaf40040
  40acb6:	push   cs
  40acb7:	add    bh,ah
  40acb9:	mov    ebx,0xda050040
  40acbe:	adc    BYTE PTR [eax],al
  40acc0:	xlat   BYTE PTR ds:[ebx]
  40acc1:	mov    ebx,0xd5300040
  40acc6:	ltr    bx
  40acc9:	mov    ebx,0xd9fc0040
  40acce:	adc    eax,DWORD PTR [eax]
  40acd0:	lahf   
  40acd1:	mov    ebx,0xdac30040
  40acd6:	adc    al,0x0
  40acd8:	idiv   DWORD PTR [edx-0x25edffc0]
  40acde:	adc    eax,0x40b44f00
  40ace3:	add    BYTE PTR [edi],ah
  40ace5:	ficom  DWORD PTR [edx]
  40ace7:	add    BYTE PTR [edi],ah
  40ace9:	mov    ah,0x40
	...
  40acff:	add    BYTE PTR [ebp-0x26],ch
  40ad02:	sbb    BYTE PTR [eax],al
  40ad04:	jnp    0x40acbd
  40ad06:	inc    eax
  40ad07:	add    BYTE PTR [ecx],cl
  40ad09:	ficom  DWORD PTR [edi]
  40ad0b:	add    bh,dl
  40ad0d:	mov    bl,0x40
  40ad0f:	add    BYTE PTR [edx+0x2],ah
  40ad12:	add    ah,BYTE PTR [ebx]
  40ad14:	bound  ecx,QWORD PTR [eax]
  40ad16:	fs inc eax
  40ad18:	bound  esi,QWORD PTR [edi]
  40ad1a:	add    ah,BYTE PTR ds:0x40638c62
  40ad20:	bound  esp,QWORD PTR [edx+eax*1+0x1b]
  40ad24:	(bad)  
  40ad25:	hlt    
  40ad26:	arpl   WORD PTR [eax+0x62],ax
  40ad29:	fild   DWORD PTR [ebx+eax*1]
  40ad2c:	(bad)  
  40ad2d:	loopne 0x40ad92
  40ad2f:	inc    eax
  40ad30:	bound  edi,QWORD PTR [edi-0x2b9df8ff]
  40ad36:	arpl   WORD PTR [eax+0x62],ax
  40ad39:	aaa    
  40ad3a:	add    al,BYTE PTR [edi]
  40ad3c:	(bad)  
  40ad3d:	fsub   QWORD PTR [ebx+0x40]
  40ad40:	bound  eax,QWORD PTR [edx+eax*1+0x1c]
  40ad44:	bound  esp,QWORD PTR [eiz*2+0x56a6240]
  40ad4b:	pop    es
  40ad4c:	bound  esp,QWORD PTR [ebx+eiz*2]
  40ad4f:	inc    eax
  40ad50:	bound  ecx,QWORD PTR [ebx+0x5]
  40ad53:	or     ah,BYTE PTR [edx+0x3c]
  40ad56:	arpl   WORD PTR [eax+0x62],ax
  40ad59:	pop    ebp
  40ad5a:	add    eax,0x61c8624c
  40ad5f:	inc    eax
  40ad60:	bound  edx,QWORD PTR [ebx]
  40ad62:	add    ah,BYTE PTR [edx]
	...
  40ad78:	(bad)  
  40ad79:	call   0x6da2eddf
  40ad7e:	add    eax,0x61ae622e
  40ad83:	inc    eax
  40ad84:	bound  ebx,QWORD PTR [ebx]
  40ad86:	add    al,BYTE PTR [edx+eiz*2]
  40ad89:	dec    esi
  40ad8a:	bound  eax,QWORD PTR [eax+0x62]
  40ad8d:	xor    DWORD PTR [edx],eax
  40ad8f:	adc    esp,DWORD PTR [edx+0x46]
  40ad92:	bound  eax,QWORD PTR [eax+0x62]
  40ad95:	xchg   esp,eax
  40ad96:	add    al,0x14
  40ad98:	bound  ebx,QWORD PTR [edx+0x62]
  40ad9b:	inc    eax
  40ad9c:	(bad)  
  40ad9d:	fnstenv [edx+0x4]
  40ada0:	je     0x40ad7b
  40ada2:	out    0x5f,eax
  40ada4:	mov    ds:0x670450d9,al
  40ada9:	fld    DWORD PTR [edi]
  40adab:	pusha  
  40adac:	mov    ds:0x4203a1d9,al
  40adb1:	fldenv [edi-0x24265da1]
  40adb7:	add    edi,DWORD PTR [ebp-0x27]
  40adba:	mov    edi,0x5ed9225f
  40adbf:	add    al,0x5f
  40adc1:	fnstenv [edi]
  40adc3:	pusha  
  40adc4:	and    bl,cl
  40adc6:	mov    eax,0x2fd95803
  40adcb:	pusha  
  40adcc:	and    bl,cl
  40adce:	push   ebp
  40adcf:	add    al,0x7b
  40add1:	fld    DWORD PTR [ebx]
  40add3:	pusha  
  40add4:	and    bl,cl
  40add6:	scas   eax,DWORD PTR es:[edi]
  40add7:	add    esi,DWORD PTR [edi-0x27]
  40adda:	(bad)  
  40addb:	pusha  
	...
  40adf0:	and    bl,cl
  40adf2:	adc    al,BYTE PTR [ebx*2+0x226137d9]
  40adf9:	fst    DWORD PTR [edi]
  40adfb:	add    al,0x56
  40adfd:	fldcw  WORD PTR [edi]
  40adff:	popa   
  40ae00:	and    bl,cl
  40ae02:	mov    edx,0x4fd96903
  40ae07:	popa   
  40ae08:	and    bl,cl
  40ae0a:	cmp    eax,0x33d95904
  40ae0f:	popa   
  40ae10:	mov    ds:0x68037cd9,al
  40ae15:	fldenv [edi+0x60]
  40ae18:	mov    ds:0x590410d9,al
  40ae1d:	fstp   DWORD PTR [ebx+0x60]
  40ae20:	mov    ds:0x66036dd9,al
  40ae25:	fstp   DWORD PTR [edi+0x60]
  40ae28:	mov    ds:0x61d300d9,al
  40ae2d:	std    
  40ae2e:	add    BYTE PTR [ecx-0x7e],al
  40ae31:	cdq    
  40ae32:	add    BYTE PTR [edx+0x4100e061],al
  40ae38:	sbb    BYTE PTR [ecx-0x369e5800],0x0
  40ae3f:	inc    ebp
  40ae40:	sbb    BYTE PTR [ecx-0x1fa1fc00],0x0
  40ae47:	inc    ecx
  40ae48:	sbb    BYTE PTR [ecx-0x1f9e0300],0x0
  40ae4f:	in     eax,0x3f
  40ae51:	cdq    
  40ae52:	add    dl,al
	...
  40ae68:	popa   
  40ae69:	aam    0x0
  40ae6b:	stc    
  40ae6c:	das    
  40ae6d:	cdq    
  40ae6e:	add    dl,ch
  40ae70:	popa   
  40ae71:	mov    DWORD PTR [eax],0x991ff1
  40ae77:	xchg   edx,eax
  40ae78:	popa   
  40ae79:	repz add ch,cl
  40ae7c:	setns  BYTE PTR [eax]
  40ae7f:	jb     0x40aee2
  40ae81:	fld    QWORD PTR [eax]
  40ae83:	xchg   ebp,eax
  40ae84:	aas    
  40ae85:	cdq    
  40ae86:	add    BYTE PTR [eax+0x5e],bh
  40ae89:	mov    BYTE PTR [eax],0x45
  40ae8c:	sub    al,0x99
  40ae8e:	add    BYTE PTR [esi+0x4d00de5e],bh
  40ae94:	sbb    al,0x99
  40ae96:	add    bh,al
  40ae98:	pop    esi
  40ae99:	retf   0x6d00
  40ae9c:	or     al,0x99
  40ae9e:	add    BYTE PTR [ebx],dh
  40aea0:	pop    esi
  40aea1:	loopne 0x40aea3
  40aea3:	mov    DWORD PTR [ecx+ebx*4-0x359e2700],edi
  40aeaa:	add    BYTE PTR [ebp-0x54],cl
  40aead:	cdq    
  40aeae:	add    dh,ah
  40aeb0:	popa   
  40aeb1:	loopne 0x40aeb3
  40aeb3:	popf   
  40aeb4:	pushf  
  40aeb5:	cdq    
  40aeb6:	add    BYTE PTR [eax],al
  40aeb8:	cmp    edx,edi
  40aeba:	add    DWORD PTR [eax],eax
  40aebc:	add    ecx,DWORD PTR [eax+eax*2+0xdd6e700]
  40aec3:	add    bh,ch
  40aec5:	mov    eax,DWORD PTR [eax+0x0]
  40aec8:	or     edx,edi
	...
  40aede:	add    BYTE PTR [eax],al
  40aee0:	sti    
  40aee1:	(bad)  
  40aee2:	add    BYTE PTR [eax],al
  40aee4:	ins    BYTE PTR es:[edi],dx
  40aee5:	imul   edi,esi,0x43816cff
  40aeeb:	add    BYTE PTR [esi+ebp*2-0x2],bl
  40aeef:	call   FWORD PTR [eax]
  40aef1:	xlat   BYTE PTR ds:[ebx]
  40aef2:	pop    edi
  40aef3:	add    BYTE PTR [ecx],bl
  40aef5:	xlat   BYTE PTR ds:[ebx]
  40aef6:	add    BYTE PTR [di],bl
  40aef9:	xlat   BYTE PTR ds:[ebx]
  40aefa:	arpl   WORD PTR [eax],ax
  40aefc:	not    esi
  40aefe:	cs add bh,ah
  40af01:	(bad)  
  40af02:	ins    BYTE PTR es:[edi],dx
  40af03:	add    bh,bl
  40af05:	(bad)  
  40af06:	add    BYTE PTR [eax],al
  40af08:	add    eax,0x3943491a
  40af0d:	dec    ebx
  40af0e:	popa   
  40af0f:	je     0x40aef7
  40af11:	(bad)  
  40af12:	add    BYTE PTR [eax],al
  40af14:	cmc    
  40af15:	sbb    DWORD PTR [ecx+0x41],ecx
  40af18:	out    0x4a,eax
  40af1a:	inc    esp
  40af1b:	imul   ebp,DWORD PTR [edi],0x45fffe4a
  40af21:	sbb    BYTE PTR [ecx+0x46],cl
  40af24:	pop    ds
  40af25:	pop    edx
  40af26:	jae    0x40af90
  40af28:	dec    eax
  40af29:	jbe    0x40af8b
  40af2b:	imul   ecx,DWORD PTR ds:0x4500724a,0x16444918
  40af35:	dec    eax
  40af36:	jb     0x40afaa
  40af38:	pushf  
  40af39:	pop    esi
  40af3a:	(bad)  
  40af3b:	call   DWORD PTR [ebx+eax*4]
  40af3e:	inc    eax
  40af3f:	add    bh,bh
  40af41:	add    BYTE PTR [eax+0x0],0x0
	...
  40af55:	add    BYTE PTR [eax],al
  40af57:	add    BYTE PTR [edx+0x7e],ah
  40af5a:	dec    esp
  40af5b:	inc    eax
  40af5c:	bound  ecx,QWORD PTR ds:0x4b62404d
  40af62:	push   edi
  40af63:	inc    eax
  40af64:	bound  edi,QWORD PTR [edi+edx*2+0x40]
  40af68:	bound  esi,QWORD PTR [edi+edx*2+0x40]
  40af6c:	bound  edx,QWORD PTR [ecx+0x57]
  40af6f:	inc    eax
  40af70:	bound  ecx,QWORD PTR [ebx]
  40af72:	dec    edx
  40af73:	inc    eax
  40af74:	(bad)  
  40af75:	ror    dl,1
  40af77:	das    
  40af78:	bound  eax,QWORD PTR [eax+0x2]
  40af7b:	add    BYTE PTR [edx+0x40],ah
  40af7e:	add    al,BYTE PTR [eax]
  40af80:	bound  eax,QWORD PTR [eax+0x2]
  40af83:	add    BYTE PTR [edx+0x40],ah
  40af86:	add    al,BYTE PTR [ecx]
  40af88:	bound  ecx,QWORD PTR [edi-0x3c9dbfd3]
  40af8e:	daa    
  40af8f:	inc    eax
  40af90:	bound  edi,QWORD PTR [eax+0x29]
  40af93:	inc    eax
  40af94:	bound  edx,QWORD PTR [ebx+0x7d624028]
  40af9a:	es inc eax
  40af9c:	bound  edx,QWORD PTR [esi]
  40af9e:	aad    0x29
  40afa0:	bound  edx,QWORD PTR [eax-0x4b]
  40afa3:	push   edx
  40afa4:	push   ss
  40afa5:	inc    eax
  40afa6:	add    al,BYTE PTR [eax]
  40afa8:	bound  edi,QWORD PTR [ebx-0x41]
  40afab:	push   ebx
  40afac:	bound  edi,QWORD PTR [eax-0x52]
  40afaf:	push   ebx
  40afb0:	xor    al,bl
  40afb2:	xor    ebp,DWORD PTR [esi]
  40afb4:	push   ebx
  40afb5:	inc    eax
  40afb6:	add    al,BYTE PTR [eax]
  40afb8:	bound  eax,QWORD PTR [ecx]
  40afba:	data16 arpl WORD PTR [eax],ax
	...
  40afcd:	add    BYTE PTR [eax],al
  40afcf:	add    BYTE PTR [edi],al
  40afd1:	nop
  40afd2:	js     0x40b001
  40afd4:	mov    eax,es:0xa0f76772
  40afda:	imul   esp,DWORD PTR [ebp+0x28],0x620004e0
  40afe1:	add    eax,0xd962000c
  40afe6:	sub    dh,BYTE PTR [ebx-0x44]
  40afe9:	mov    bh,0x4
  40afeb:	addr16 into 
  40afed:	mov    dl,0x6
  40afef:	jb     0x40b069
  40aff1:	stc    
  40aff2:	sub    dh,BYTE PTR [eax-0x3b]
  40aff5:	lods   al,BYTE PTR ds:[esi]
  40aff6:	or     al,0x11
  40aff8:	pop    eax
  40aff9:	fxtract 
  40affb:	jne    0x40afb3
  40affd:	mov    dh,0x6
  40afff:	jb     0x40b04d
  40b001:	mov    ebp,0xd9626ffb
  40b006:	mov    dh,0x65
  40b008:	xchg   esi,eax
  40b009:	mov    edx,0xacaf71d0
  40b00e:	int3   
  40b00f:	jne    0x40afb4
  40b011:	rol    ah,0x71
  40b014:	outs   dx,BYTE PTR ds:[esi]
  40b015:	mov    WORD PTR [ebx-0x3948848b],?
  40b01b:	add    esp,DWORD PTR [edx-0x27]
  40b01e:	mov    ebx,0xb7d94f03
  40b023:	add    esp,DWORD PTR [edx-0x27]
  40b026:	int3   
  40b027:	add    edx,DWORD PTR [ecx-0x27]
  40b02a:	les    eax,FWORD PTR [ebx]
  40b02c:	xchg   edx,eax
  40b02d:	fxch   st(7)
  40b02f:	add    edi,DWORD PTR [edx]
  40b031:	fnstcw WORD PTR [ebp+0x3]
	...
  40b047:	add    BYTE PTR [edi-0x27],bh
  40b04a:	jp     0x40b04f
  40b04c:	(bad)  
  40b04d:	fld    st(4)
  40b04f:	add    esi,DWORD PTR [ecx]
  40b051:	fxch   st(4)
  40b053:	add    edx,DWORD PTR [edx-0x27]
  40b056:	scas   eax,DWORD PTR es:[edi]
  40b057:	add    ebx,DWORD PTR [edx]
  40b059:	(bad)  
  40b05b:	add    esp,DWORD PTR [edx-0x27]
  40b05e:	adc    DWORD PTR [edx+eiz*2],eax
  40b061:	fld    DWORD PTR [esp+eax*1]
  40b064:	(bad)  
  40b065:	(bad)  
  40b067:	add    esp,DWORD PTR [edx-0x27]
  40b06a:	out    0x3,eax
  40b06c:	(bad)  
  40b06d:	fldenv [edi+esi*8+0x2e00d925]
  40b074:	stos   DWORD PTR es:[edi],eax
  40b075:	lea    esp,[eax]
  40b077:	jmp    0x394189dd
  40b07c:	mov    cl,0x8c
  40b07e:	push   esp
  40b07f:	leave  
  40b080:	popa   
  40b081:	fld    DWORD PTR [eax]
  40b083:	les    esp,FWORD PTR [ecx-0x4a]
  40b086:	add    cl,ch
  40b088:	popa   
  40b089:	fld    DWORD PTR [eax]
  40b08b:	aam    0x61
  40b08d:	mov    dh,0x0
  40b08f:	les    esp,FWORD PTR [ecx-0x57]
  40b092:	add    cl,ch
  40b094:	popa   
  40b095:	fld    DWORD PTR [eax]
  40b097:	mov    edi,0xc800bd61
  40b09c:	popa   
  40b09d:	lods   eax,DWORD PTR ds:[esi]
  40b09e:	add    cl,ch
  40b0a0:	popa   
  40b0a1:	fld    DWORD PTR [eax]
  40b0a3:	mov    edx,0xba00be61
  40b0a8:	popa   
  40b0a9:	mov    cl,0x0
  40b0ab:	mov    esp,0x0
	...
  40b0c0:	popa   
  40b0c1:	lods   eax,DWORD PTR ds:[esi]
  40b0c2:	add    ch,al
  40b0c4:	popa   
  40b0c5:	mov    eax,0xb761be00
  40b0ca:	add    BYTE PTR [ecx-0x6fff549f],bl
  40b0d0:	popa   
  40b0d1:	scas   eax,DWORD PTR es:[edi]
  40b0d2:	add    BYTE PTR [eax-0x73ff4a9f],dl
  40b0d8:	popa   
  40b0d9:	rol    BYTE PTR [eax],0x84
  40b0dc:	popa   
  40b0dd:	fld    DWORD PTR [eax]
  40b0df:	hlt    
  40b0e0:	push   0xffffff9a
  40b0e2:	add    BYTE PTR [esi-0x5aff759f],dl
  40b0e8:	popa   
  40b0e9:	fld    DWORD PTR [eax]
  40b0eb:	jne    0x40b145
  40b0ed:	call   0xa100:0x9a4e5a00
  40b0f4:	inc    esi
  40b0f5:	call   0x3800:0xe794b900
  40b0fc:	and    DWORD PTR [edx+0xe280000],ebx
  40b102:	add    BYTE PTR ds:[eax],bl
  40b105:	popf   
  40b106:	aas    
  40b107:	add    BYTE PTR [esi-0x66],ch
  40b10a:	aas    
  40b10b:	add    bl,bh
  40b10d:	(bad)  
  40b10f:	add    BYTE PTR [esi+0x68003e0c],dl
  40b115:	or     al,0x3e
  40b117:	add    BYTE PTR [esi+ecx*1+0x3e],cl
  40b11b:	add    BYTE PTR [eax],bh
  40b11d:	push   cs
  40b11e:	add    BYTE PTR ds:[esi],ah
  40b121:	xchg   esi,eax
  40b122:	aas    
	...
  40b137:	add    BYTE PTR [ebx],ah
  40b139:	xchg   esi,eax
  40b13a:	aas    
  40b13b:	add    BYTE PTR [ebp-0x17ffc048],dh
  40b141:	mov    eax,0xb898003f
  40b146:	aas    
  40b147:	add    BYTE PTR [eax-0x5cffc048],bl
  40b14d:	mov    eax,0xb891003f
  40b152:	aas    
  40b153:	add    BYTE PTR [ebx-0x43],bl
  40b156:	aas    
  40b157:	add    BYTE PTR [esi],bh
  40b159:	mov    bh,0x3f
  40b15b:	add    BYTE PTR [ecx],bh
  40b15d:	jb     0x40b19d
  40b15f:	add    BYTE PTR [esp+ecx*2],cl
  40b162:	inc    ecx
  40b163:	add    BYTE PTR [edx+0x4a],al
  40b166:	inc    ecx
  40b167:	add    BYTE PTR [ecx+0x72],cl
  40b16a:	ds add ah,bl
  40b16d:	dec    ebx
  40b16e:	inc    ecx
  40b16f:	add    BYTE PTR [edx],dl
  40b171:	dec    edx
  40b172:	inc    ecx
  40b173:	add    BYTE PTR [esi-0x65ffbeb5],dl
  40b179:	dec    edi
  40b17a:	inc    ecx
  40b17b:	add    al,cl
  40b17d:	dec    edi
  40b17e:	inc    ecx
  40b17f:	add    al,cl
  40b181:	inc    edx
  40b182:	inc    eax
  40b183:	add    BYTE PTR [eax-0x67ffc047],bl
  40b189:	mov    ecx,0x1362003f
  40b18e:	popa   
  40b18f:	inc    ecx
  40b190:	(bad)
  40b195:	mov    eax,0x73624097
  40b19a:	cwde   
  40b19b:	inc    eax
	...
  40b1b0:	bound  esi,QWORD PTR [esi-0x67]
  40b1b3:	inc    eax
  40b1b4:	bound  esi,QWORD PTR ds:0x4b62414d
  40b1ba:	cdq    
  40b1bb:	inc    eax
  40b1bc:	(bad)
  40b1c1:	fdiv   DWORD PTR [esi+0x0]
  40b1c4:	(bad)  
  40b1c5:	int3   
  40b1c6:	jbe    0x40b1c8
  40b1c8:	bound  esp,QWORD PTR [esi+eiz*2]
  40b1cb:	add    BYTE PTR [edx-0x24],ah
  40b1ce:	imul   esi,DWORD PTR [esi+0x62],0x620031d8
  40b1d5:	fdiv   DWORD PTR [esi]
  40b1d7:	add    BYTE PTR [edx+0x8],ah
  40b1da:	xor    eax,0x36086200
  40b1df:	add    BYTE PTR [edx+0x18],ah
  40b1e2:	aaa    
  40b1e3:	add    BYTE PTR [edx+0x18],ah
  40b1e6:	cmp    BYTE PTR [eax],al
  40b1e8:	bound  ecx,QWORD PTR [ebx+ebp*2]
  40b1eb:	add    BYTE PTR [edx+0x63],ah
  40b1ee:	gs jb  0x40b23c
  40b1f1:	pusha  
  40b1f2:	jbe    0x40b1f4
  40b1f4:	bound  esp,QWORD PTR [esi+0x64]
  40b1f7:	jae    0x40b24b
  40b1f9:	cmp    eax,DWORD PTR [edx]
  40b1fb:	add    BYTE PTR [edx+0x2a],ah
  40b1fe:	or     al,0xa
  40b200:	cmp    BYTE PTR [edx],0xc
  40b203:	or     ch,BYTE PTR [eax+0x3a]
  40b206:	or     al,0xa
  40b208:	pop    eax
  40b209:	xor    al,BYTE PTR [edx+eax*1]
  40b20c:	pusha  
  40b20d:	xor    eax,DWORD PTR [edx+eax*1]
  40b210:	pusha  
  40b211:	xor    al,BYTE PTR [edx+eax*1]
	...
  40b228:	pusha  
  40b229:	push   edx
  40b22a:	add    ah,BYTE PTR [ebx+0x62]
  40b22d:	(bad)  
  40b22f:	add    esp,DWORD PTR [edx-0x27]
  40b232:	adc    al,BYTE PTR [edx+eiz*2]
  40b235:	fld    DWORD PTR [esp+esi*4]
  40b238:	and    bl,cl
  40b23a:	pusha  
  40b23b:	mov    dl,0x2d
  40b23d:	(bad)  
  40b23f:	mov    al,0x22
  40b241:	fst    DWORD PTR [edi+0x25]
  40b244:	(bad)  
  40b245:	fld    DWORD PTR [edi]
  40b247:	add    al,0x62
  40b249:	fldenv [ebx]
  40b24b:	add    al,0x9b
  40b24d:	fnstcw WORD PTR [edx]
  40b24f:	add    al,0xb2
  40b251:	fldcw  WORD PTR [ebx]
  40b253:	add    al,0xa3
  40b255:	fnstenv [eax]
  40b257:	add    al,0x62
  40b259:	fld    DWORD PTR [edx]
  40b25b:	add    al,0xc7
  40b25d:	fyl2xp1 
  40b25f:	add    esi,DWORD PTR [ecx+ebx*8-0x2671fbfc]
  40b266:	mov    edx,0xbdd95003
  40b26b:	add    eax,DWORD PTR [esi+0x7603d3d9]
  40b271:	(bad)  
  40b273:	add    esp,DWORD PTR [edx-0x27]
  40b276:	scas   al,BYTE PTR es:[edi]
  40b277:	push   0x6ed9896e
  40b27c:	xchg   BYTE PTR [esi-0x4c648836],ch
  40b282:	lds    ebp,FWORD PTR [esi+0x62]
  40b285:	fldcw  WORD PTR [edx-0x46]
  40b288:	and    bl,cl
  40b28a:	aam    0xba
	...
  40b2a0:	and    bl,cl
  40b2a2:	mov    ah,0xba
  40b2a4:	and    bl,cl
  40b2a6:	dec    edx
  40b2a7:	mov    ebx,0xbfa0d922
  40b2ac:	and    bl,cl
  40b2ae:	rol    DWORD PTR [ebx],1
  40b2b0:	push   cs
  40b2b1:	(bad)  
  40b2b3:	add    esp,DWORD PTR [edx-0x27]
  40b2b6:	pop    eax
  40b2b7:	shl    DWORD PTR [edx],1
  40b2b9:	fld    DWORD PTR [eax]
  40b2bb:	shl    BYTE PTR [eax-0x4ecfff67],1
  40b2c1:	cdq    
  40b2c2:	add    dh,dl
  40b2c4:	xchg   ebp,eax
  40b2c5:	cdq    
  40b2c6:	add    BYTE PTR [ecx],dl
  40b2c8:	popa   
  40b2c9:	popf   
  40b2ca:	add    BYTE PTR [ecx],al
  40b2cc:	popa   
  40b2cd:	popf   
  40b2ce:	add    BYTE PTR [ebx-0x42],bh
  40b2d1:	in     al,0x0
  40b2d3:	mov    cl,BYTE PTR [ebp+0x35c40099]
  40b2d9:	cdq    
  40b2da:	add    BYTE PTR [eax],dl
  40b2dc:	cmp    bl,BYTE PTR [ecx-0x1c01a500]
  40b2e2:	add    BYTE PTR [ebx+0x30],dl
  40b2e5:	in     al,0x0
  40b2e7:	nop
  40b2e8:	adc    ah,ah
  40b2ea:	add    BYTE PTR [edx+0x7b0098ce],bh
  40b2f0:	(bad)  
  40b2f1:	jecxz  0x40b2f3
  40b2f3:	dec    edx
  40b2f4:	or     eax,0x35840099
  40b2f9:	cdq    
  40b2fa:	add    BYTE PTR [ebx],cl
  40b2fc:	(bad)  
  40b2fd:	cwde   
  40b2fe:	add    BYTE PTR [eax],ch
  40b300:	mov    ebp,DWORD PTR [ebp+0xd668]
	...
  40b316:	add    BYTE PTR [eax],al
  40b318:	xchg   ebx,eax
  40b319:	mov    dl,0x7a
  40b31b:	enter  0xb275,0x6d
  40b31f:	(bad)  
  40b320:	popa   
  40b321:	fld    DWORD PTR [eax]
  40b323:	stos   DWORD PTR es:[edi],eax
  40b324:	xchg   BYTE PTR [eax-0x26be3599],ch
  40b32a:	add    BYTE PTR [eax-0x419273b0],dh
  40b330:	(bad)  
  40b331:	in     eax,dx
  40b332:	push   eax
  40b333:	mov    ebx,0x9a63b83c
  40b338:	push   eax
  40b339:	fld    DWORD PTR [eax]
  40b33b:	retf   
  40b33c:	popa   
  40b33d:	inc    BYTE PTR [eax]
  40b33f:	call   0xd961:0xe900f761
  40b346:	add    BYTE PTR [eax],al
  40b348:	cdq    
  40b349:	xlat   BYTE PTR ds:[ebx]
  40b34a:	and    eax,DWORD PTR [eax]
  40b34c:	sbb    al,bl
  40b34e:	and    al,BYTE PTR [eax]
  40b350:	stos   DWORD PTR es:[edi],eax
  40b351:	xlat   BYTE PTR ds:[ebx]
  40b352:	and    eax,DWORD PTR [eax]
  40b354:	or     al,bl
  40b356:	add    BYTE PTR [eax],al
  40b358:	es stos BYTE PTR es:[edi],al
  40b35a:	arpl   WORD PTR [edx+0x26],si
  40b35d:	mov    bl,0x76
  40b35f:	cs daa 
  40b361:	test   eax,0xa738006c
  40b366:	arpl   WORD PTR [ecx+0x27],sp
  40b369:	mov    esp,0xae956e43
  40b36e:	jb     0x40b3df
  40b370:	popf   
  40b371:	mov    dl,0x63
  40b373:	outs   dx,BYTE PTR ds:[esi]
  40b374:	xchg   edi,eax
  40b375:	xchg   edi,eax
  40b376:	ins    BYTE PTR es:[edi],dx
  40b377:	outs   dx,DWORD PTR ds:[esi]
  40b378:	pop    eax
  40b379:	mov    al,0x0
	...
  40b38f:	add    BYTE PTR [edi+0x597471ba],al
  40b395:	mov    ah,0x77
  40b397:	inc    ebp
  40b398:	sub    eax,0x4c7267ad
  40b39d:	mov    bl,0x6b
  40b39f:	gs ins DWORD PTR es:[edi],dx
  40b3a1:	mov    eax,ds:0xb85c6c42
  40b3a6:	imul   eax,DWORD PTR [eax],0x68d708
  40b3ac:	push   ss
  40b3ad:	xlat   BYTE PTR ds:[ebx]
  40b3ae:	ins    BYTE PTR es:[edi],dx
  40b3af:	add    BYTE PTR [edi],ch
  40b3b1:	xlat   BYTE PTR ds:[ebx]
  40b3b2:	xor    DWORD PTR [eax],eax
  40b3b4:	pop    ecx
  40b3b5:	(bad)  [esi]
  40b3b7:	add    BYTE PTR [edi],ah
  40b3b9:	xlat   BYTE PTR ds:[ebx]
  40b3ba:	ins    BYTE PTR es:[edi],dx
  40b3bb:	add    BYTE PTR [edi],cl
  40b3bd:	xlat   BYTE PTR ds:[ebx]
  40b3be:	add    BYTE PTR [eax],al
  40b3c0:	popa   
  40b3c1:	mov    cl,0xb
  40b3c3:	or     ah,BYTE PTR [edi+0x59206cbb]
  40b3c9:	cli    
  40b3ca:	jno    0x40b3ee
  40b3cc:	into   
  40b3cd:	shl    BYTE PTR [edi+0x66],1
  40b3d0:	stos   DWORD PTR es:[edi],eax
  40b3d1:	mov    ebx,0x3f626978
  40b3d6:	jbe    0x40b3f8
  40b3d8:	sbb    BYTE PTR ds:0x53822271,0x6d
  40b3df:	je     0x40b3ee
  40b3e1:	adc    BYTE PTR [esi+0x0],ah
  40b3e4:	bound  ecx,QWORD PTR [esi+0x2]
  40b3e7:	popa   
  40b3e8:	bound  ebp,QWORD PTR [ecx+eax*1+0x65f06200]
  40b3ef:	arpl   WORD PTR [edx],cx
  40b3f1:	xchg   ebx,eax
  40b3f2:	and    al,0x6f
	...
  40b408:	cld    
  40b409:	xchg   ecx,eax
  40b40a:	or     eax,0xd7f470a
  40b40f:	or     bh,dh
  40b411:	xchg   esp,eax
  40b412:	jo     0x40b434
  40b414:	(bad)  
  40b415:	cli    
  40b416:	and    al,0x22
  40b418:	jg     0x40b3f9
  40b41a:	and    cl,BYTE PTR ds:0x23058
  40b420:	bound  ecx,QWORD PTR [ebx]
  40b422:	add    ah,BYTE PTR [ebx+0x62]
  40b425:	adc    BYTE PTR [edx],al
  40b427:	and    ah,BYTE PTR [edx+0x15]
  40b42a:	add    dh,BYTE PTR [ebx+0x62]
  40b42d:	push   cs
  40b42e:	add    al,BYTE PTR [eax]
  40b430:	(bad)  
  40b431:	out    dx,eax
  40b432:	add    al,0x6f
  40b434:	(bad)  
  40b435:	aad    0x4
  40b437:	push   ebx
  40b438:	bound  esp,QWORD PTR [eax]
  40b43a:	add    ah,BYTE PTR [ebp+0x62]
  40b43d:	iret   
  40b43e:	add    al,0x0
  40b440:	bound  edx,QWORD PTR [edx+edi*8+0x2646240]
  40b447:	inc    edx
  40b448:	bound  ecx,QWORD PTR [esi]
  40b44a:	add    al,BYTE PTR [edx+0x62]
  40b44d:	xor    BYTE PTR [edx],al
  40b44f:	add    BYTE PTR [edx+0x1c],ah
  40b452:	es and al,0x86
  40b455:	gs jo  0x40b4cb
  40b458:	dec    esi
  40b459:	gs je  0x40b4d3
  40b45c:	dec    edx
  40b45d:	imul   edi,DWORD PTR [eax+0x7b],0x27cbd97e
  40b464:	xchg   ch,bh
  40b466:	ret    
  40b467:	daa    
  40b468:	je     0x40b44c
  40b46a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b46b:	inc    edx
	...
  40b480:	and    BYTE PTR [esi-0x65e3b95d],dl
  40b486:	scas   eax,DWORD PTR es:[edi]
  40b487:	dec    edx
  40b488:	sub    BYTE PTR [esi-0x6ddbb155],cl
  40b48e:	xchg   edi,eax
  40b48f:	push   edx
  40b490:	xor    BYTE PTR [esi-0x75d3a96d],al
  40b496:	or     esp,DWORD PTR [eax]
  40b498:	inc    esi
  40b499:	std    
  40b49a:	add    esp,DWORD PTR [eax]
  40b49c:	sbb    al,BYTE PTR [eax-0x7bf1a0cf]
  40b4a2:	sub    eax,0x49b8025b
  40b4a7:	addr16 (bad) 
  40b4a9:	mov    dh,0x45
  40b4ab:	arpl   dx,cx
  40b4ad:	mov    dl,0x41
  40b4af:	outs   dx,DWORD PTR ds:[esi]
  40b4b0:	mov    esi,0xd26b3dae
  40b4b5:	stos   BYTE PTR es:[edi],al
  40b4b6:	out    0x3,eax
  40b4b8:	(bad)  
  40b4b9:	(bad)  
  40b4bb:	add    esp,DWORD PTR [edx-0x27]
  40b4be:	sub    BYTE PTR [esi-0x5f],al
  40b4c1:	xchg   ebp,eax
  40b4c2:	and    al,0x42
  40b4c4:	popf   
  40b4c5:	xchg   ecx,eax
  40b4c6:	xor    BYTE PTR [esi-0x57],cl
  40b4c9:	lea    ebp,[edx+ecx*2]
  40b4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4cd:	mov    DWORD PTR [eax],ebx
  40b4cf:	push   esi
  40b4d0:	mov    cl,0x85
  40b4d2:	adc    al,0x52
  40b4d4:	lods   eax,DWORD PTR ds:[esi]
  40b4d5:	add    eax,0xcabb835d
  40b4db:	pop    edi
  40b4dc:	jg     0x40b495
  40b4de:	into   
  40b4df:	imul   edi,DWORD PTR [ebx-0x4d],0xffffffc2
  40b4e3:	add    BYTE PTR [bx+si],al
	...
  40b4f6:	add    BYTE PTR [eax],al
  40b4f8:	ja     0x40b4a9
  40b4fa:	(bad)  
  40b4fb:	jae    0x40b550
  40b4fd:	stos   DWORD PTR es:[edi],eax
  40b4fe:	mov    edx,0xa74f6f
  40b503:	mov    esi,0xf97aa249
  40b508:	mov    gs,ebx
  40b50a:	xor    ebp,ebx
  40b50c:	jb     0x40b4f5
  40b50e:	xor    eax,0x2df476e1
  40b513:	jmp    0xbc418e79
  40b518:	icebp  
  40b519:	cdq    
  40b51a:	add    cl,dl
  40b51c:	fs xchg ebp,eax
  40b51e:	add    cl,dl
  40b520:	pop    esp
  40b521:	xchg   ebp,eax
  40b522:	add    BYTE PTR [ebp+0x60009b65],dl
  40b528:	int3   
  40b529:	loopne 0x40b52b
  40b52b:	add    eax,0xeb009b6a
  40b530:	popa   
  40b531:	fld    DWORD PTR [eax]
  40b533:	jmp    0xe8418e99
  40b538:	popa   
  40b539:	fld    DWORD PTR [eax]
  40b53b:	lock ja 0x40b4d9
  40b53e:	add    BYTE PTR [ecx],dl
  40b540:	pop    ebp
  40b541:	xchg   ebp,eax
  40b542:	add    BYTE PTR [esi],bh
  40b544:	jl     0x40b4e0
  40b546:	add    BYTE PTR [edx],bl
  40b548:	ins    DWORD PTR es:[edi],dx
  40b549:	fwait
  40b54a:	add    BYTE PTR [esp+edx*2-0x65],dh
  40b54e:	add    BYTE PTR [edx+0x4c],bh
  40b551:	fwait
  40b552:	add    al,ah
  40b554:	push   edi
  40b555:	fwait
  40b556:	add    ch,al
  40b558:	dec    edi
  40b559:	fwait
  40b55a:	add    dh,bh
	...
  40b570:	dec    edi
  40b571:	call   0x600:0xab5e1900
  40b578:	data16 mov cl,0x0
  40b57b:	add    BYTE PTR [esi-0x45],bl
  40b57e:	add    al,dl
  40b580:	popa   
  40b581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b582:	add    BYTE PTR [ebp-0x52ff7a9f],ah
  40b588:	popa   
  40b589:	fld    DWORD PTR [eax]
  40b58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b58c:	popa   
  40b58d:	lods   eax,DWORD PTR ds:[esi]
  40b58e:	add    BYTE PTR [eax],al
  40b590:	mov    ah,0xdb
  40b592:	bound  eax,QWORD PTR [eax]
  40b594:	stos   BYTE PTR es:[edi],al
  40b595:	fld    TBYTE PTR [eax+eax*1-0x9]
  40b599:	fild   DWORD PTR [eax]
  40b59b:	add    bh,ah
  40b59d:	fld    TBYTE PTR [ebp+0x0]
  40b5a0:	call   0xe7411580
  40b5a5:	fistp  DWORD PTR [eax+eax*1-0x45]
  40b5a9:	fild   DWORD PTR [eax]
  40b5ab:	add    BYTE PTR [edx-0x37ffbd44],dl
  40b5b1:	inc    ebx
  40b5b2:	inc    eax
  40b5b3:	add    BYTE PTR [eax-0x7d],ch
  40b5b6:	aas    
  40b5b7:	add    BYTE PTR [eax-0x7d],bl
  40b5ba:	aas    
  40b5bb:	add    BYTE PTR [eax-0x7d],bl
  40b5be:	aas    
  40b5bf:	add    BYTE PTR [eax+0x3d],cl
  40b5c2:	inc    eax
  40b5c3:	add    BYTE PTR [eax-0x47ffc07f],ch
  40b5c9:	dec    edx
  40b5ca:	inc    ecx
  40b5cb:	add    dl,dl
  40b5cd:	ret    
  40b5ce:	inc    edx
  40b5cf:	add    BYTE PTR [esi-0x74],ah
  40b5d2:	aas    
	...
  40b5e7:	add    BYTE PTR [esi],ah
  40b5e9:	rol    BYTE PTR [edx+0x0],0xa9
  40b5ed:	jb     0x40b62d
  40b5ef:	add    BYTE PTR [edi+0xd0042c3],bh
  40b5f5:	les    eax,FWORD PTR [edx+0x0]
  40b5f8:	mov    ecx,0xbf003e72
  40b5fd:	ret    
  40b5fe:	inc    edx
  40b5ff:	add    ch,bh
  40b601:	ret    
  40b602:	inc    edx
  40b603:	add    BYTE PTR [ecx],ah
  40b605:	rol    DWORD PTR [edx+0x0],0x73
  40b609:	test   eax,0xf1d17074
  40b60e:	sub    eax,0x2eaa0c77
  40b613:	addr16 adc al,0xb2
  40b616:	gs ins BYTE PTR es:[edi],dx
  40b618:	push   ds
  40b619:	icebp  
  40b61a:	popa   
  40b61b:	outs   dx,DWORD PTR ds:[esi]
  40b61c:	bound  edx,QWORD PTR ds:0x18620029
  40b622:	outs   dx,BYTE PTR ds:[esi]
  40b623:	je     0x40b677
  40b625:	fisub  DWORD PTR [edi]
  40b627:	das    
  40b628:	dec    ebp
  40b629:	addr16 jno 0x40b65a
  40b62c:	inc    eax
  40b62d:	sbb    DWORD PTR [eax+0x67],ebp
  40b630:	je     0x40b645
  40b632:	imul   ebp,DWORD PTR [ebp-0x73],0x62000230
  40b639:	ins    BYTE PTR es:[edi],dx
  40b63a:	xchg   DWORD PTR [edi],edi
  40b63c:	bound  ecx,QWORD PTR [edi+eax*4+0x3f]
  40b640:	(bad)  
  40b641:	mul    BYTE PTR [ebx]
  40b643:	inc    edx
  40b644:	(bad)  
  40b645:	out    dx,al
  40b646:	and    eax,DWORD PTR [edx+0x62]
  40b649:	push   ecx
  40b64a:	pop    edi
  40b64b:	imul   eax,DWORD PTR [eax],0x0
	...
  40b65d:	add    BYTE PTR [eax],al
  40b65f:	add    ch,bh
  40b661:	pushf  
  40b662:	jp     0x40b664
  40b664:	bound  edx,QWORD PTR [edx+0x65]
  40b667:	fs add al,0x8f
  40b66a:	ins    BYTE PTR es:[edi],dx
  40b66b:	push   0x9
  40b66d:	mov    WORD PTR [ebp+0x6e],fs
  40b670:	repnz xor BYTE PTR [esi+0x73],0xee
  40b675:	test   DWORD PTR [edi+0x78],ebp
  40b678:	fadd   DWORD PTR [edx-0x409dc056]
  40b67e:	xor    BYTE PTR [edx+0x62],al
  40b681:	push   ecx
  40b682:	cs inc edx
  40b684:	bound  edi,QWORD PTR [esi]
  40b686:	xor    eax,DWORD PTR [edx+0x62]
  40b689:	or     BYTE PTR ds:0xaaa26244,al
  40b68f:	aas    
  40b690:	(bad)  
  40b691:	out    0x30,eax
  40b693:	inc    edx
  40b694:	bound  edx,QWORD PTR [ecx-0x29dbdd3]
  40b69a:	sub    eax,0x4ed6242
  40b69f:	pop    ecx
  40b6a0:	bound  esi,QWORD PTR [eax]
  40b6a2:	add    al,BYTE PTR [eax]
  40b6a4:	bound  ebx,QWORD PTR [esi+0x2]
  40b6a7:	je     0x40b70b
  40b6a9:	(bad)  
  40b6ab:	add    ebp,DWORD PTR [esi-0x27]
  40b6ae:	out    0x3,eax
  40b6b0:	(bad)  
  40b6b1:	fxch   st(6)
  40b6b3:	pop    edi
  40b6b4:	jnp    0x40b65f
  40b6b6:	mov    ebx,0xcbef516e
  40b6bb:	addr16 inc esi
  40b6bd:	fldenv [esi-0x3c56c4a1]
  40b6c3:	outs   dx,BYTE PTR ds:[esi]
	...
  40b6d8:	push   ecx
  40b6d9:	mov    dh,BYTE PTR [ebx-0x635acf9e]
  40b6df:	jae    0x40b743
  40b6e1:	fldenv [esi-0x7c56c4a1]
  40b6e7:	outs   dx,BYTE PTR ds:[esi]
  40b6e8:	xor    DWORD PTR [edx-0x4ae99181],ecx
  40b6ee:	xchg   esi,eax
  40b6ef:	jo     0x40b6f5
  40b6f1:	fldenv [esi-0x555704a1]
  40b6f7:	jne    0x40b6f8
  40b6f9:	mov    bh,0x73
  40b6fb:	pop    esi
  40b6fc:	and    BYTE PTR [eax-0x56fc96a5],dh
  40b702:	and    eax,0x1fabfd72
  40b707:	inc    edx
  40b708:	sbb    eax,DWORD PTR [ebp-0x264dbae4]
  40b70e:	cs pusha 
  40b710:	retf   
  40b711:	test   eax,0xa9d16d23
  40b716:	inc    esi
  40b717:	jae    0x40b6d8
  40b719:	xchg   edx,eax
  40b71a:	cmp    al,0x65
  40b71c:	lds    esi,FWORD PTR [esi-0x269dfc19]
  40b722:	es pusha 
  40b724:	mov    ebx,0xae612ea9
  40b729:	xchg   edx,eax
  40b72a:	cld    
  40b72b:	test   DWORD PTR fs:[esi-0x537e99d4],esi
  40b732:	add    esp,DWORD PTR [ecx-0x70]
  40b735:	test   al,0x0
  40b737:	sbb    dh,BYTE PTR [edi-0x61]
  40b73a:	arpl   cx,bp
	...
  40b750:	popa   
  40b751:	fld    DWORD PTR [eax]
  40b753:	scas   al,BYTE PTR es:[edi]
  40b754:	xchg   ebp,eax
  40b755:	mov    dl,0x70
  40b757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b758:	and    BYTE PTR [ebp-0x4b813bb9],0x63
  40b75f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b760:	inc    edi
  40b761:	mov    eax,0xa742cd6d
  40b766:	jno    0x40b751
  40b768:	popa   
  40b769:	fld    DWORD PTR [eax]
  40b76b:	scas   al,BYTE PTR es:[edi]
  40b76c:	and    eax,0x469a70b2
  40b771:	mov    ds:0xba4ab063,eax
  40b776:	test   BYTE PTR gs:0x339d51ac,bl
  40b77d:	mov    dh,0x5f
  40b77f:	jl     0x40b7e2
  40b781:	fld    DWORD PTR [eax]
  40b783:	cmp    al,0x82
  40b785:	jg     0x40b7a2
  40b787:	mov    bl,0x8b
  40b789:	in     eax,dx
  40b78a:	inc    ebx
  40b78b:	push   ebp
  40b78c:	stos   DWORD PTR es:[edi],eax
  40b78d:	jge    0x40b740
  40b78f:	cwde   
  40b790:	bound  esi,QWORD PTR [edx+ebp*8]
  40b793:	add    esp,DWORD PTR cs:[ebp-0x47faa4b0]
  40b79a:	aas    
  40b79b:	dec    ebp
  40b79c:	add    ah,BYTE PTR [edi-0x262ea59d]
  40b7a2:	add    BYTE PTR ds:0x2d64babd,dh
  40b7a8:	mov    edi,0xd04872b7
  40b7ad:	mov    ds:0xd961e93f,al
  40b7b2:	add    BYTE PTR [edx],bh
	...
  40b7c8:	pop    esi
  40b7c9:	mov    WORD PTR [eax],es
  40b7cb:	daa    
  40b7cc:	test   WORD PTR [eax],ax
  40b7cf:	ds pop esi
  40b7d1:	call   0x0:0x96663b00
  40b7d8:	aas    
  40b7d9:	aad    0x4b
  40b7db:	add    BYTE PTR [edx-0x2b],dh
  40b7de:	popa   
  40b7df:	add    BYTE PTR [ecx],cl
  40b7e1:	fsubr  DWORD PTR [ebp+0x0]
  40b7e4:	clc    
  40b7e5:	xlat   BYTE PTR ds:[ebx]
  40b7e6:	ins    DWORD PTR es:[edi],dx
  40b7e7:	add    BYTE PTR ds:0xaf0074d8,ah
  40b7ed:	xlat   BYTE PTR ds:[ebx]
  40b7ee:	push   ebp
  40b7ef:	add    BYTE PTR [edx],ah
  40b7f1:	fsubr  DWORD PTR [esi+0x0]
  40b7f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7f5:	xlat   BYTE PTR ds:[ebx]
  40b7f6:	ins    DWORD PTR es:[edi],dx
  40b7f7:	add    BYTE PTR [eax+ebx*8],dl
  40b7fa:	jno    0x40b7fc
  40b7fc:	pop    ebx
  40b7fd:	aad    0x4e
  40b7ff:	add    bh,ah
  40b801:	xlat   BYTE PTR ds:[ebx]
  40b802:	pop    esp
  40b803:	add    BYTE PTR [eax],cl
  40b805:	fdiv   DWORD PTR [ebx+0x0]
  40b808:	(bad)  
  40b80a:	jb     0x40b80c
  40b80c:	out    0xd7,al
  40b80e:	outs   dx,BYTE PTR ds:[esi]
  40b80f:	add    bh,al
  40b811:	xlat   BYTE PTR ds:[ebx]
  40b812:	push   esi
  40b813:	add    dh,ah
  40b815:	xlat   BYTE PTR ds:[ebx]
  40b816:	jb     0x40b818
  40b818:	sbb    al,bl
  40b81a:	addr16 add ah,bl
  40b81d:	xlat   BYTE PTR ds:[ebx]
  40b81e:	outs   dx,BYTE PTR ds:[esi]
  40b81f:	add    bh,ch
  40b821:	xlat   BYTE PTR ds:[ebx]
  40b822:	push   eax
  40b823:	add    cl,bh
  40b825:	xlat   BYTE PTR ds:[ebx]
  40b826:	ins    DWORD PTR es:[edi],dx
  40b827:	add    BYTE PTR ds:0x67d5,ah
	...
  40b83d:	add    BYTE PTR [eax],al
  40b83f:	add    BYTE PTR [edi],bl
  40b841:	aad    0x63
  40b843:	add    BYTE PTR [edi],bh
  40b845:	aad    0x67
  40b847:	add    BYTE PTR [eax+0x7f0074d5],bh
  40b84d:	aad    0x23
  40b84f:	add    BYTE PTR [eax+0x6b0000d5],cl
  40b855:	aad    0x72
  40b857:	add    BYTE PTR [ebp+edx*8+0x66],bh
  40b85b:	add    BYTE PTR [edx-0x2b],dl
  40b85e:	ins    BYTE PTR es:[edi],dx
  40b85f:	add    BYTE PTR [esi-0x2b],ah
  40b862:	inc    edi
  40b863:	add    BYTE PTR [edx-0x2b],ah
  40b866:	add    al,0x61
  40b868:	(bad)
  40b86d:	rol    BYTE PTR [ecx+eiz*2],0x62
  40b871:	and    al,0x2
  40b873:	push   0x23062
  40b878:	bound  esi,QWORD PTR [eax]
  40b87a:	outs   dx,BYTE PTR ds:[esi]
  40b87b:	ss pop ebx
  40b87d:	xor    DWORD PTR [esi+0x36],ebp
  40b880:	dec    ebx
  40b881:	pop    ds
  40b882:	ror    bh,0x6a
  40b885:	sbb    al,0xc0
  40b887:	iret   
  40b888:	pop    edx
  40b889:	push   ds
  40b88a:	and    DWORD PTR [edx],edi
  40b88c:	add    BYTE PTR [eax-0x66],dh
  40b88f:	inc    ecx
  40b890:	bound  ecx,QWORD PTR [edi-0x709dbead]
  40b896:	push   ebx
  40b897:	inc    ecx
  40b898:	bound  ecx,QWORD PTR [edi+0x6f624153]
  40b89e:	call   0x41:0x53cf6241
	...
  40b8b5:	add    BYTE PTR [eax],al
  40b8b7:	add    BYTE PTR [edx+0x6f],ah
  40b8ba:	call   0x6242:0x19896241
  40b8c1:	aas    
  40b8c2:	add    bh,BYTE PTR [ecx+0x62]
  40b8c5:	lahf   
  40b8c6:	add    DWORD PTR [ebx+0x62],edx
  40b8c9:	pop    eax
  40b8ca:	add    ah,BYTE PTR [ecx+0x62]
  40b8cd:	push   esp
  40b8ce:	add    ch,BYTE PTR [edi+0x62]
  40b8d1:	jnp    0x40b8d7
  40b8d3:	add    BYTE PTR [edx-0x31],ah
  40b8d6:	add    al,0x33
  40b8d8:	bound  edi,QWORD PTR [esi-0x3d9dc8fc]
  40b8de:	add    al,0x38
  40b8e0:	bound  esi,QWORD PTR [eax]
  40b8e2:	add    al,BYTE PTR [eax]
  40b8e4:	(bad)  
  40b8e5:	out    dx,eax
  40b8e6:	add    al,0x6f
  40b8e8:	bound  edx,QWORD PTR [edx-0x249d8cfc]
  40b8ee:	add    al,0x6c
  40b8f0:	(bad)  
  40b8f1:	(bad)  [esp+eax*1]
  40b8f4:	xchg   ebp,eax
  40b8f5:	fst    DWORD PTR [eax]
  40b8f7:	add    al,0xb4
  40b8f9:	(bad)  [ebx]
  40b8fb:	add    al,0x8d
  40b8fd:	fst    DWORD PTR [esi]
  40b8ff:	add    al,0xa1
  40b901:	fst    DWORD PTR [ebx]
  40b903:	add    al,0x83
  40b905:	fsqrt  
  40b907:	add    edx,DWORD PTR [ecx+0x6203e7d9]
  40b90d:	fldcw  WORD PTR [edx]
  40b90f:	add    al,0x8b
  40b911:	fxch   st(2)
  40b913:	add    eax,DWORD PTR [edi+0x7503d9d9]
  40b919:	fnstcw WORD PTR [ebx+eax*1+0x0]
	...
  40b930:	sub    ebx,ecx
  40b932:	mov    dh,0x3
  40b934:	inc    esp
  40b935:	fxch   st(3)
  40b937:	add    esp,DWORD PTR [ecx+ebx*8]
  40b93a:	mov    ecx,0xc4d94303
  40b93f:	add    eax,DWORD PTR [edi-0x27]
  40b942:	out    0x3,eax
  40b944:	(bad)  
  40b945:	fnstenv [ebx+eax*1+0x3b0d926]
  40b94c:	and    ecx,ebx
  40b94e:	add    DWORD PTR [ebx],0xb
  40b951:	fld    DWORD PTR [ebx+eax*1+0x37bd904]
  40b958:	(bad)  
  40b959:	fstp   DWORD PTR [edx+0x7ad90b03]
  40b95f:	add    ebp,DWORD PTR [esi]
  40b961:	fld    DWORD PTR [eax+0x5bd8f103]
  40b967:	add    al,0x14
  40b969:	fst    DWORD PTR [eax+0x4]
  40b96c:	(bad)  
  40b96d:	fcomp  DWORD PTR [esi+0x4]
  40b970:	xchg   ecx,eax
  40b971:	fstp   DWORD PTR [ecx]
  40b973:	add    al,0x62
  40b975:	fldcw  WORD PTR ds:0x24a6aa3d
  40b97b:	add    al,0x62
  40b97d:	fld    DWORD PTR [eax]
  40b97f:	sbb    bh,BYTE PTR [esi-0x60]
  40b982:	arpl   WORD PTR ds:0x1e6d8775,si
  40b988:	rcr    BYTE PTR [edi+0x7eba0d6d],0x72
  40b98f:	cmp    DWORD PTR [edi+0xe9688d],eax
	...
  40b9a5:	add    BYTE PTR [eax],al
  40b9a7:	add    BYTE PTR [ecx-0x27],ah
  40b9aa:	add    BYTE PTR [esi],ch
  40b9ac:	jnp    0x40b93b
  40b9ae:	inc    esi
  40b9af:	adc    BYTE PTR [edx-0x77f8b882],al
  40b9b5:	mov    BYTE PTR [edx-0x4],dh
  40b9b8:	jle    0x40b947
  40b9ba:	addr16 (bad) 
  40b9bc:	sbb    DWORD PTR [ebx-0x78814e89],0x64
  40b9c3:	lds    ecx,FWORD PTR [edx-0x62]
  40b9c6:	js     0x40b9b1
  40b9c8:	popa   
  40b9c9:	fld    DWORD PTR [eax]
  40b9cb:	call   0x7e25:0xd0468d3a
  40b9d2:	inc    edi
  40b9d3:	(bad)  
  40b9d4:	dec    ebx
  40b9d5:	mov    BYTE PTR [edx-0x44],dh
  40b9d8:	lea    esp,ds:[edi-0x6a]
  40b9dc:	inc    ebx
  40b9dd:	fwait
  40b9de:	ja     0x40b991
  40b9e0:	xchg   DWORD PTR ds:[ebp+eax*4+0xa],esp
  40b9e5:	fld    DWORD PTR [eax]
  40b9e7:	int3   
  40b9e8:	rcr    DWORD PTR [edx-0x229b1800],1
  40b9ee:	add    dh,ah
  40b9f0:	popa   
  40b9f1:	fld    DWORD PTR [eax]
  40b9f3:	loopne 0x40ba56
  40b9f5:	fld    DWORD PTR [eax]
  40b9f7:	loop   0x40ba5a
  40b9f9:	fld    DWORD PTR [eax]
  40b9fb:	cmc    
  40b9fc:	popa   
  40b9fd:	fld    DWORD PTR [eax]
  40b9ff:	shl    DWORD PTR ds:0x2923009a,0x9a
  40ba06:	add    BYTE PTR [esi+0x29],cl
  40ba09:	call   0x0:0x0
	...
  40ba20:	fisub  WORD PTR [edx]
  40ba22:	inc    eax
  40ba23:	add    BYTE PTR [edi+ebp*1],bh
  40ba26:	add    BYTE PTR ds:[eax],bl
  40ba29:	das    
  40ba2a:	add    BYTE PTR ds:[edi-0x23],ah
  40ba2e:	push   esi
  40ba2f:	add    BYTE PTR [edx-0x23],bl
  40ba32:	jb     0x40ba34
  40ba34:	jge    0x40ba13
  40ba36:	add    BYTE PTR [bx-0x23],ah
  40ba3a:	arpl   WORD PTR [eax],ax
  40ba3c:	inc    edx
  40ba3d:	(bad)  [esi+0x0]
  40ba40:	pop    ebp
  40ba41:	(bad)  [ebp+0x0]
  40ba44:	fst    QWORD PTR [si+0x0]
  40ba48:	stc    
  40ba49:	fistp  DWORD PTR [edi+0x0]
  40ba4c:	cmc    
  40ba4d:	(bad)  [ecx+0x0]
  40ba50:	pop    ss
  40ba51:	fcomp  QWORD PTR [edi+0x0]
  40ba54:	paddusb mm4,QWORD PTR [edi+0x0]
  40ba58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba59:	fld    TBYTE PTR [esi+0x0]
  40ba5c:	retf   
  40ba5d:	fild   DWORD PTR [eax]
  40ba5f:	add    BYTE PTR [edi],al
  40ba61:	fcom   QWORD PTR [ecx+0x0]
  40ba64:	paddusb mm6,QWORD PTR [edx+0x0]
  40ba68:	mov    ds:0x9c006edb,al
  40ba6d:	fild   DWORD PTR [esi+0x0]
  40ba70:	rcr    bl,cl
  40ba72:	ins    BYTE PTR es:[edi],dx
  40ba73:	add    dh,bl
  40ba75:	fild   DWORD PTR [edi+0x0]
  40ba78:	in     eax,0xdb
  40ba7a:	data16 add BYTE PTR [esp+ebx*8],dl
  40ba7e:	pop    esp
  40ba7f:	add    BYTE PTR [esi+0x30db],bl
	...
  40ba95:	add    BYTE PTR [eax],al
  40ba97:	add    bh,cl
  40ba99:	fstp   TBYTE PTR [eax+0x0]
  40ba9c:	scas   al,BYTE PTR es:[edi]
  40ba9d:	(bad)  [eax]
  40ba9f:	add    BYTE PTR [edi+0x270078db],ch
  40baa5:	frstor [ebx]
  40baa7:	add    BYTE PTR [eax],cl
  40baa9:	fld    QWORD PTR [eax]
  40baab:	add    BYTE PTR [edx-0x3c],ah
  40baae:	inc    ebp
  40baaf:	dec    esp
  40bab0:	lahf   
  40bab1:	int3   
  40bab2:	inc    ebp
  40bab3:	add    BYTE PTR [edx-0x38],ah
  40bab6:	inc    ebp
  40bab7:	inc    ecx
  40bab8:	sahf   
  40bab9:	add    BYTE PTR [edx],al
  40babb:	add    BYTE PTR [edx-0x10],ah
  40babe:	push   ebp
  40babf:	push   esp
  40bac0:	(bad)
  40bac5:	lds    eax,FWORD PTR [ebx+0x54]
  40bac8:	(bad)  
  40bac9:	(bad)  
  40baca:	push   esp
  40bacb:	push   esp
  40bacc:	stos   DWORD PTR es:[edi],eax
  40bacd:	mov    edi,0xcc625342
  40bad2:	push   esi
  40bad3:	inc    ecx
  40bad4:	mov    eax,ds:0x620004c5
  40bad9:	ret    
  40bada:	aas    
  40badb:	push   eax
  40badc:	fwait
  40badd:	add    BYTE PTR [edx],al
  40badf:	add    BYTE PTR [edx-0xc],ah
  40bae2:	aas    
  40bae3:	inc    ebx
  40bae4:	cdq    
  40bae5:	add    BYTE PTR [edx],al
  40bae7:	add    BYTE PTR [edx+0x45],ah
  40baea:	cmp    eax,0x23c2d43
  40baef:	add    BYTE PTR [edx+0x75],ah
  40baf2:	inc    ecx
  40baf3:	push   esi
  40baf4:	daa    
  40baf5:	add    BYTE PTR [edx],al
  40baf7:	add    BYTE PTR [edx+0x70],ah
  40bafa:	push   esp
  40bafb:	dec    edi
	...
  40bb10:	adc    al,BYTE PTR [esi+0x3b]
  40bb13:	dec    esi
  40bb14:	push   ds
  40bb15:	add    BYTE PTR [edx],al
  40bb17:	add    BYTE PTR [edx+0x50],ah
  40bb1a:	push   esp
  40bb1b:	dec    edi
  40bb1c:	adc    dl,BYTE PTR [eax+0x43]
  40bb1f:	push   esp
  40bb20:	and    DWORD PTR [eax],edi
  40bb22:	add    al,BYTE PTR [eax]
  40bb24:	bound  edx,QWORD PTR [ebx+0x47]
  40bb27:	inc    ecx
  40bb28:	xor    BYTE PTR [ebx+0x3a],al
  40bb2b:	add    BYTE PTR [edx+0x6d],ah
  40bb2e:	inc    eax
  40bb2f:	dec    esp
  40bb30:	sub    eax,0x62003d43
  40bb35:	jb     0x40bb7e
  40bb37:	push   eax
  40bb38:	sbb    eax,0x625839d9
  40bb3d:	fldcw  WORD PTR [edi*1+0x3b3b9aa3]
  40bb44:	lods   al,BYTE PTR ds:[esi]
  40bb45:	mov    al,ds:0xd9624b33
  40bb4a:	sub    bh,BYTE PTR [edi+ebx*4]
  40bb4d:	call   0x3e7:0xad974132
  40bb54:	(bad)  
  40bb55:	fstp   DWORD PTR [edi+eax*2]
  40bb58:	nop
  40bb59:	sahf   
  40bb5a:	sub    al,0x4
  40bb5c:	(bad)  
  40bb5d:	fldcw  WORD PTR [edi+ebx*1]
  40bb60:	mov    cl,0x9c
  40bb62:	sub    BYTE PTR [esi-0x5f],dl
  40bb65:	mov    eax,ds:0xd96203e7
  40bb6a:	xor    eax,0x25a0ae41
  40bb6f:	dec    ebx
  40bb70:	(bad)  
  40bb71:	fstp   DWORD PTR [edx]
  40bb73:	push   edi
	...
  40bb88:	mov    al,ds:0x9b562aaa
  40bb8d:	fwait
  40bb8e:	lods   al,BYTE PTR ds:[esi]
  40bb8f:	add    esp,DWORD PTR [edx-0x27]
  40bb92:	mov    ah,0x41
  40bb94:	xor    DWORD PTR [ecx+ebp*4-0x5f54deac],ebp
  40bb9b:	inc    ebp
  40bb9c:	daa    
  40bb9d:	fst    DWORD PTR [edi-0x5065d1be]
  40bba3:	add    esp,DWORD PTR [edx-0x27]
  40bba6:	xchg   edi,eax
  40bba7:	push   esi
  40bba8:	adc    BYTE PTR [esi-0x269dfc5c],bl
  40bbae:	mov    ah,BYTE PTR [eax+0x34]
  40bbb1:	xchg   DWORD PTR [esp+eiz*2+0x61868016],eax
  40bbb8:	(bad)  
  40bbb9:	fst    DWORD PTR [edi-0x7f6f028b]
  40bbbf:	push   ds
  40bbc0:	add    DWORD PTR [esi+0x7a07618d],eax
  40bbc6:	add    BYTE PTR [ebp+0x18],bh
  40bbc9:	xchg   BYTE PTR [esi-0x17],ch
  40bbcc:	popa   
  40bbcd:	fld    DWORD PTR [eax]
  40bbcf:	dec    edx
  40bbd0:	add    eax,0xbc447487
  40bbd5:	lea    ebp,[ebx]
  40bbd7:	inc    ebp
  40bbd8:	retf   
  40bbd9:	and    DWORD PTR [ebp+0x55],0xffffffae
  40bbdd:	fld    DWORD PTR [eax]
  40bbdf:	cmp    eax,0x3a6e7ad0
  40bbe4:	les    edi,FWORD PTR [esi+0x72]
  40bbe7:	add    al,0xcb
  40bbe9:	and    DWORD PTR [ecx+0x3e],0x0
	...
  40bbfd:	add    BYTE PTR [eax],al
  40bbff:	add    BYTE PTR [edx+0x5e0e6e82],bh
  40bc05:	fld    DWORD PTR [eax]
  40bc07:	adc    al,0x96
  40bc09:	jl     0x40bc7d
  40bc0b:	or     BYTE PTR [edx-0x51f5ff82],cl
  40bc11:	mov    gs,WORD PTR [esi+0x12]
  40bc14:	jnp    0x40bc93
  40bc16:	add    BYTE PTR [edx],dl
  40bc18:	mov    edi,DWORD PTR [esi+0x70]
  40bc1b:	les    edi,FWORD PTR [esi-0x7b]
  40bc1e:	idiv   DWORD PTR [bp+si-0x27]
  40bc22:	add    dl,cl
  40bc24:	test   DWORD PTR [ecx+esi*2+0xd961c4],eax
  40bc2b:	cmp    DWORD PTR [eax-0x4f63ff2c],esi
  40bc31:	aam    0x0
  40bc33:	mov    edx,0x4b00d4b0
  40bc38:	pushf  
  40bc39:	call   0x5b00:0x9a943700
  40bc40:	iret   
  40bc41:	aam    0x0
  40bc43:	push   ebx
  40bc44:	xchg   ecx,eax
  40bc45:	aam    0x0
  40bc47:	adc    BYTE PTR [ecx-0x7cb9ff2c],dh
  40bc4d:	call   0x0:0x8b61bc00
  40bc54:	jnp    0x40bc2e
  40bc56:	add    BYTE PTR [eax],al
  40bc58:	mov    eax,ds:0x7e0000b8
  40bc5d:	fadd   DWORD PTR [eax]
  40bc5f:	add    BYTE PTR ds:0x4000,cl
	...
  40bc75:	add    BYTE PTR [eax],al
  40bc77:	add    BYTE PTR [eax+0x18003fa3],bl
  40bc7d:	(bad)  
  40bc7e:	aas    
  40bc7f:	add    BYTE PTR [ecx+ecx*1+0x40],bl
  40bc83:	add    BYTE PTR [ebp+0x18003fff],bh
  40bc89:	mov    ds:0xffc3003f,eax
  40bc8e:	aas    
  40bc8f:	add    bh,ah
  40bc91:	add    eax,DWORD PTR [eax+0x0]
  40bc94:	in     al,dx
  40bc95:	add    eax,0x93c0040
  40bc9a:	inc    eax
  40bc9b:	add    BYTE PTR [eax+0x0],bh
  40bc9e:	inc    eax
  40bc9f:	add    BYTE PTR [ebp+0x0],bl
  40bca2:	inc    eax
  40bca3:	add    ah,dl
  40bca5:	cmp    BYTE PTR [esi],bh
  40bca7:	add    al,dl
  40bca9:	add    al,BYTE PTR [eax+0x0]
  40bcac:	dec    ecx
  40bcad:	fld    QWORD PTR [ecx+0x0]
  40bcb0:	dec    BYTE PTR [edx+0x3e]
  40bcb3:	add    BYTE PTR [edx-0x23],bl
  40bcb6:	inc    ecx
  40bcb7:	add    BYTE PTR [ecx-0x34ffbe28],al
  40bcbd:	fadd   QWORD PTR [ecx+0x0]
  40bcc0:	rcl    edi,0x0
  40bcc3:	add    BYTE PTR [esi-0x3c],bh
  40bcc6:	cmp    ebp,0x35
  40bcc9:	adc    eax,0x11
  40bccc:	dec    ecx
  40bccd:	stos   BYTE PTR es:[edi],al
  40bcce:	add    al,al
  40bcd0:	cld    
  40bcd1:	pop    ds
  40bcd2:	pop    eax
  40bcd3:	mov    ah,0xe1
  40bcd5:	imul   ecx,DWORD PTR [edx],0xcfcf7ee7
  40bcdb:	adc    DWORD PTR [eax],eax
	...
  40bced:	add    BYTE PTR [eax],al
  40bcef:	add    BYTE PTR [ecx],dl
  40bcf1:	jno    0x40bcf1
  40bcf3:	mov    edi,0x50ad3b62
  40bcf8:	xchg   ecx,eax
  40bcf9:	int3   
  40bcfa:	sub    eax,0x6e838785
  40bcff:	rcl    BYTE PTR [ebx-0x80],1
  40bd02:	dec    edi
  40bd03:	add    BYTE PTR [edx-0x49a635c6],ah
  40bd09:	jmp    0x3f9e:0x4e623fa0
  40bd10:	bound  edi,QWORD PTR [edx+edx*1-0x4b029dbd]
  40bd17:	aas    
  40bd18:	bound  eax,QWORD PTR [ecx-0x7ab8b9a8]
  40bd1e:	(bad)  
  40bd20:	push   ebx
  40bd21:	scas   al,BYTE PTR es:[di]
  40bd23:	call   DWORD PTR [ebp+0x5b]
  40bd26:	int3   
  40bd27:	rcr    BYTE PTR [eax+0x21],1
  40bd2a:	or     DWORD PTR [ebx-0x29],ecx
  40bd2d:	xor    DWORD PTR [ecx],edx
  40bd2f:	shl    BYTE PTR [ebx-0x7f],1
  40bd32:	lods   al,BYTE PTR ds:[esi]
  40bd33:	call   ebp
  40bd35:	mov    ebx,0x99d659cc
  40bd3a:	xchg   edx,eax
  40bd3b:	or     edi,ebp
  40bd3d:	pop    ebp
  40bd3e:	cmp    cl,dl
  40bd40:	push   ebx
  40bd41:	xchg   BYTE PTR [ebp-0x56444a01],dl
  40bd47:	push   eax
  40bd48:	icebp  
  40bd49:	icebp  
  40bd4a:	jg     0x40bda3
  40bd4c:	pop    ds
  40bd4d:	sub    DWORD PTR [ebx-0x30],0x73
  40bd51:	jle    0x40bda5
	...
  40bd67:	add    BYTE PTR [edx+0x1659ca3b],ah
  40bd6d:	jbe    0x40bd77
  40bd6f:	inc    ebx
  40bd70:	bound  ebp,QWORD PTR [edi+0x2]
  40bd73:	cmp    ah,BYTE PTR [edx-0x18]
  40bd76:	add    al,0x4d
  40bd78:	bound  edi,QWORD PTR [edx+eax*1]
  40bd7b:	cmp    esp,DWORD PTR [edx+0x7]
  40bd7e:	add    cl,BYTE PTR [esi+0x62]
  40bd81:	fnstcw WORD PTR [ecx-0x4926d3fd]
  40bd87:	add    esp,DWORD PTR [ecx+ebx*8]
  40bd8a:	scas   eax,DWORD PTR es:[edi]
  40bd8b:	add    ecx,DWORD PTR [ecx-0x27]
  40bd8e:	rol    BYTE PTR [ebx],cl
  40bd90:	dec    ecx
  40bd91:	fnstenv [ebx-0x2f26eafd]
  40bd97:	add    esp,DWORD PTR [edx-0x27]
  40bd9a:	cdq    
  40bd9b:	inc    ebp
  40bd9c:	and    BYTE PTR [ecx-0x3ccecc49],bh
  40bda2:	pop    ss
  40bda3:	xor    al,0x91
  40bda5:	(bad)  
  40bda7:	add    esp,DWORD PTR [edx-0x27]
  40bdaa:	cmp    DWORD PTR [esi-0x60],eax
  40bdad:	mov    ecx,0xd96203e7
  40bdb2:	ret    
  40bdb3:	inc    esp
  40bdb4:	mov    eax,ds:0xa13c0fd9
  40bdb9:	fxch   st(2)
  40bdbb:	retf   
  40bdbc:	cmp    DWORD PTR ds:0x2204ba9c,esi
  40bdc2:	cwde   
  40bdc3:	aam    0x23
  40bdc5:	sub    eax,0x1829d199
  40bdca:	mov    al,0xbc
	...
  40bde0:	sbb    ecx,ebx
  40bde2:	stos   BYTE PTR es:[edi],al
  40bde3:	jmp    0x40bdfe
  40bde5:	adc    eax,0x1fcda94
  40bdea:	cdq    
  40bdeb:	fucomip st,st(6)
  40bded:	cmc    
  40bdee:	xchg   edi,esp
  40bdf0:	in     eax,dx
  40bdf1:	adc    DWORD PTR [ecx-0x433a8eb],edi
  40bdf7:	add    BYTE PTR [ebp-0x37],dh
  40bdfa:	jmp    0x6b2e:0xe2e0660b
  40be01:	in     al,0xe8
  40be03:	add    eax,0x34fdd962
  40be08:	mov    eax,edx
  40be0a:	fiadd  DWORD PTR [esi]
  40be0c:	pusha  
  40be0d:	fild   DWORD PTR [eax]
  40be0f:	jmp    0xd4419775
  40be14:	dec    ebp
  40be15:	loope  0x40be31
  40be17:	fcom   QWORD PTR [eax-0x40]
  40be1a:	xor    edx,edx
  40be1c:	popa   
  40be1d:	fld    DWORD PTR [eax]
  40be1f:	dec    BYTE PTR [ebx+0x2a950ce0]
  40be25:	mov    ah,BYTE PTR [edi-0x17]
  40be28:	popa   
  40be29:	fld    DWORD PTR [eax]
  40be2b:	adc    dh,BYTE PTR [ebp+0x7b5ece30]
  40be31:	xor    bl,ch
  40be33:	adc    DWORD PTR [edx+0x5f16fe11],esp
  40be39:	out    0x10,eax
  40be3b:	jmp    0x9d4197a1
  40be40:	fbstp  TBYTE PTR [ebx-0x7f]
  40be43:	ja     0x40be45
	...
  40be55:	add    BYTE PTR [eax],al
  40be57:	add    dl,bl
  40be59:	push   ebp
  40be5a:	fdivr  QWORD PTR [edx-0x13]
  40be5d:	imul   ebx,DWORD PTR [edx-0x1ef3392],0xffffffc6
  40be64:	and    al,0x51
  40be66:	ficomp DWORD PTR [ecx+eiz*1+0x2a99872f]
  40be6d:	daa    
  40be6e:	ret    
  40be6f:	jmp    0x814197d5
  40be74:	and    ebx,DWORD PTR [eax]
  40be76:	frstor [ebx-0x707fcde2]
  40be7c:	mov    edx,0xb9aace1a
  40be81:	and    eax,edx
  40be83:	jmp    0xd94197e9
  40be88:	sub    al,0xc9
  40be8a:	xor    eax,0x1193860c
  40be8f:	push   ss
  40be90:	test   ebp,eax
  40be92:	ds sbb eax,0xaf00d194
  40be98:	and    BYTE PTR ss:[ebp+0x0],0xa6
  40be9d:	lods   eax,DWORD PTR ds:[esi]
  40be9e:	addr16 jg 0x40bf05
  40bea1:	fwait
  40bea2:	outs   dx,BYTE PTR ds:[esi]
  40bea3:	bound  esp,QWORD PTR [edx-0x9949489]
  40bea9:	fadd   QWORD PTR [eax]
  40beab:	add    BYTE PTR [ebx-0x60cbc936],cl
  40beb1:	(bad)  
  40beb2:	es add ch,bl
  40beb5:	mov    al,BYTE PTR [eax]
  40beb7:	add    BYTE PTR [edx+0x312fa1],ah
	...
  40becd:	add    BYTE PTR [eax],al
  40becf:	add    BYTE PTR [ebx-0x4ffff24],cl
  40bed5:	mov    eax,ds:0xa4c97716
  40beda:	push   esi
  40bedb:	pop    eax
  40bedc:	shr    DWORD PTR [ecx-0x5d52e0ab],cl
  40bee2:	push   edi
  40bee3:	push   ebp
  40bee4:	xchg   ebp,edx
  40bee6:	add    BYTE PTR [eax],al
  40bee8:	add    DWORD PTR [eax],esi
  40beea:	stos   BYTE PTR es:[edi],al
  40beeb:	into   
  40beec:	and    esi,DWORD PTR [esi+ebx*8]
  40beef:	test   eax,0xebfd2f0d
  40bef4:	sbb    al,0xdc
  40bef6:	add    BYTE PTR [eax],al
  40bef8:	mov    al,0x28
  40befa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40befb:	nop
  40befc:	mov    ebx,esp
  40befe:	add    BYTE PTR [eax],al
  40bf00:	sub    bh,al
  40bf02:	xor    BYTE PTR ds:0x3123f024,ch
  40bf08:	sbb    al,dh
  40bf0a:	es sub ax,0x3976
  40bf0f:	cmp    ch,BYTE PTR [esi]
  40bf11:	xor    BYTE PTR [esi],0x3e
  40bf14:	pop    ds
  40bf15:	mov    esi,0xcb232077
  40bf1a:	cmp    esi,DWORD PTR [edi]
  40bf1c:	mov    dh,0xcb
  40bf1e:	cmp    BYTE PTR [eax],bh
  40bf20:	int    0xdb
  40bf22:	add    BYTE PTR [eax],al
  40bf24:	mov    ch,0x85
  40bf26:	jo     0x40bfa2
  40bf28:	bound  ebx,QWORD PTR [edi]
  40bf2a:	outs   dx,DWORD PTR ds:[esi]
  40bf2b:	cmp    eax,DWORD PTR gs:[edx]
  40bf2e:	add    al,BYTE PTR [eax]
  40bf30:	(bad)  
  40bf31:	sar    BYTE PTR [edi+0xc5],0x0
	...
  40bf48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf49:	mov    dh,0xd6
  40bf4b:	shl    BYTE PTR [edx-0x1a],0xc1
  40bf4f:	iret   
  40bf50:	call   0xa46:0x62000201
  40bf57:	push   ecx
  40bf58:	daa    
  40bf59:	sbb    DWORD PTR [ebp+0x0],eax
  40bf5c:	(bad)  
  40bf5d:	loopne 0x40bf4d
  40bf5f:	test   DWORD PTR [edi-0x3b594b18],0x62000201
  40bf69:	dec    edi
  40bf6a:	and    al,0x21
  40bf6c:	inc    esi
  40bf6d:	pop    ecx
  40bf6e:	imul   edi,DWORD PTR [esi+0x62],0xf09088d7
  40bf75:	mov    BYTE PTR [edx+0x7858f99b],cl
  40bf7b:	call   0x7cde:0x91887aec
  40bf82:	add    DWORD PTR [ebp+ebp*8+0x62000553],0xe08a7d61
  40bf8d:	jbe    0x40bf11
  40bf8f:	mov    edi,0x82857700
  40bf94:	loop   0x40bf1d
  40bf96:	fld    TBYTE PTR [edx-0x67738b1d]
  40bf9c:	out    dx,al
  40bf9d:	jg     0x40bf29
  40bf9f:	inc    DWORD PTR ds:0x2ebf8e8c
  40bfa5:	inc    ebx
  40bfa6:	ror    DWORD PTR [edx+eiz*2+0x899379],cl
	...
  40bfbd:	add    BYTE PTR [eax],al
  40bfbf:	add    ah,dl
  40bfc1:	mov    bl,0x8e
  40bfc3:	ror    ebx,1
  40bfc5:	sahf   
  40bfc6:	xchg   edi,edi
  40bfc8:	fstp   st(1)
  40bfca:	sbb    BYTE PTR [esi+0x5a],bl
  40bfcd:	jne    0x40bf9d
  40bfcf:	add    esp,DWORD PTR [edx-0x27]
  40bfd2:	test   ah,dh
  40bfd4:	mov    esi,0xbde15af8
  40bfd9:	push   cs
  40bfda:	imul   eax,DWORD PTR [edi-0x3fe0902a],0x46355de
  40bfe4:	(bad)  
  40bfe5:	(bad)  [ebx]
  40bfe7:	leave  
  40bfe8:	mov    dl,0x19
  40bfea:	and    al,bl
  40bfec:	sub    DWORD PTR [esi],0x1b6cf27
  40bff2:	or     ebx,esi
  40bff4:	jl     0x40bffc
  40bff6:	call   0x621a21fe
  40bffb:	mov    ecx,esp
  40bffd:	arpl   WORD PTR [edx-0x5c],cx
  40c000:	lods   al,BYTE PTR ds:[esi]
  40c001:	inc    ecx
  40c002:	call   0x511a220a
  40c007:	mov    ?,ecx
  40c009:	jb     0x40bf95
  40c00b:	mov    ds:0xac9fd900,eax
  40c010:	push   ss
  40c011:	push   eax
  40c012:	popa   
  40c013:	ja     0x40bff0
  40c015:	fadd   DWORD PTR ds:0xe7bb891f
  40c01b:	or     eax,0x3e7e55e
  40c020:	(bad)  
  40c021:	fnstenv [edx-0x55]
	...
  40c038:	out    dx,eax
  40c039:	cmp    eax,0x5bc08d62
  40c03e:	jbe    0x40bfc0
  40c040:	mov    esp,0xe298755d
  40c045:	push   edi
  40c046:	jge    0x40c0c1
  40c048:	aad    0x5c
  40c04a:	add    sp,WORD PTR [edx-0x27]
  40c04e:	xchg   esp,esp
  40c050:	push   es
  40c051:	stc    
  40c052:	cwde   
  40c053:	ret    0x13f0
  40c056:	add    DWORD PTR [ebx+0x68011613],esp
  40c05c:	out    0x61,eax
  40c05e:	xchg   esp,eax
  40c05f:	cdq    
  40c060:	add    DWORD PTR [eax-0x5b],ebp
  40c063:	xchg   edx,eax
  40c064:	adc    al,BYTE PTR [ecx+0x1]
  40c067:	es or  eax,0x9b4fda18
  40c06d:	pop    ds
  40c06e:	idiv   BYTE PTR ds:0x1de0fdbc
  40c074:	(bad)  
  40c075:	hlt    
  40c076:	test   DWORD PTR [ecx-0x3f],0x903cfe0d
  40c07d:	pop    es
  40c07e:	xor    DWORD PTR [edx],0x40c031a2
  40c084:	popa   
  40c085:	fld    DWORD PTR [eax]
  40c087:	aas    
  40c088:	enter  0xca1c,0x22
  40c08c:	mov    al,ds:0xb534892a
  40c091:	push   ss
  40c092:	add    esp,ebx
  40c094:	xlat   BYTE PTR ds:[bx]
  40c096:	call   edx
  40c098:	push   esi
  40c099:	in     eax,dx
  40c09a:	inc    ecx
  40c09b:	out    0x0,eax
	...
  40c0ad:	add    BYTE PTR [eax],al
  40c0af:	add    BYTE PTR [edx-0x1f],bl
  40c0b2:	add    ch,ah
  40c0b4:	sub    BYTE PTR [eax],bl
  40c0b6:	shr    BYTE PTR [edx-0x2838d8dc],cl
  40c0bc:	cs sbb eax,0x3336adcc
  40c0c2:	aad    0xa8
  40c0c4:	neg    BYTE PTR [edx]
  40c0c6:	add    DWORD PTR [ebp+0x7a966ad7],ecx
  40c0cc:	loop   0x40c12e
  40c0ce:	xchg   BYTE PTR [edi-0x62],ch
  40c0d1:	imul   ebx,DWORD PTR [ebx-0x5491178c],0xffffffe9
  40c0d8:	popa   
  40c0d9:	fld    DWORD PTR [eax]
  40c0db:	aas    
  40c0dc:	test   eax,0x84206b81
  40c0e1:	cmp    DWORD PTR [ebx+0x0],0x47
  40c0e5:	xchg   DWORD PTR [ebx+0x60],esp
  40c0e8:	hlt    
  40c0e9:	js     0x40c14f
  40c0eb:	inc    esi
  40c0ec:	sti    
  40c0ed:	fadd   DWORD PTR [eax]
  40c0ef:	add    BYTE PTR [esi-0x7ee1e620],ah
  40c0f5:	adc    al,BYTE PTR ds:0x16d6740e
  40c0fb:	adc    esi,DWORD PTR [edi-0x39d8ea19]
  40c101:	rol    DWORD PTR [eax],0x0
  40c104:	outs   dx,DWORD PTR ds:[esi]
  40c105:	push   es
  40c106:	lock test DWORD PTR [eax-0x7],0x2d4de7e9
  40c10e:	(bad)  
  40c10f:	cli    
  40c110:	pop    esi
  40c111:	(bad)  
  40c112:	sti    
  40c113:	into   
	...
  40c128:	outs   dx,DWORD PTR ds:[esi]
  40c129:	pop    ss
  40c12a:	(bad)  
  40c12b:	inc    DWORD PTR [ecx]
  40c12d:	popa   
  40c12e:	test   DWORD PTR [ebp-0x7f71a30a],edx
  40c134:	aas    
  40c135:	lea    ecx,[ebp-0x6dc2fe74]
  40c13b:	nop
  40c13c:	add    eax,0x6f0000d5
  40c141:	and    al,bl
  40c143:	ror    DWORD PTR [eax+0x2cc6d413],cl
  40c149:	sbb    eax,0x252cdadc
  40c14e:	xlat   BYTE PTR ds:[ebx]
  40c14f:	fistp  QWORD PTR [ebx]
  40c151:	fadd   DWORD PTR [eax]
  40c153:	add    BYTE PTR [ebx],ah
  40c155:	inc    esi
  40c156:	xlat   BYTE PTR ds:[ebx]
  40c157:	(bad)  
  40c158:	aam    0x51
  40c15a:	rcl    dl,0x20
  40c15d:	push   ecx
  40c15e:	enter  0x20ce,0x19
  40c162:	ret    
  40c163:	retf   
  40c164:	xlat   BYTE PTR ds:[ebx]
  40c165:	dec    edi
  40c166:	lock add BYTE PTR [esi+edi*2-0x7da48fa0],bl
  40c16e:	jae    0x40c1d5
  40c170:	bound  esi,QWORD PTR [esi-0x41848296]
  40c176:	jb     0x40c1ec
  40c178:	jbe    0x40c139
  40c17a:	gs push ebx
  40c17c:	bound  ebp,QWORD PTR [edi-0xf]
  40c17f:	jmp    0x40c167
  40c181:	push   ebp
  40c182:	cmc    
  40c183:	clc    
  40c184:	retf   
  40c185:	ds fdivr st(4),st
  40c188:	shl    DWORD PTR [edx+0xf4d2],0x0
	...
  40c19f:	add    bl,al
  40c1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1a2:	mov    bh,0xfd
  40c1a4:	mov    edx,0xcdece29a
  40c1a9:	retf   
  40c1aa:	(bad)  
  40c1ac:	mov    ch,0x3
  40c1ae:	xor    esi,DWORD PTR [eax]
  40c1b0:	ja     0x40c1e1
  40c1b2:	sub    al,0x25
  40c1b4:	jno    0x40c1c1
  40c1b6:	cld    
  40c1b7:	and    DWORD PTR [ecx-0x2b],ecx
  40c1ba:	cli    
  40c1bb:	call   DWORD PTR [ebp-0x25738c52]
  40c1c1:	fwait
  40c1c2:	jp     0x40c15b
  40c1c4:	aam    0x77
  40c1c6:	stos   BYTE PTR es:[edi],al
  40c1c7:	sahf   
  40c1c8:	aam    0x89
  40c1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1cb:	push   DWORD PTR [ebp-0x47]
  40c1ce:	jecxz  0x40c1b6
  40c1d0:	jne    0x40c1a4
  40c1d2:	out    0xf1,eax
  40c1d4:	cmp    BYTE PTR [ecx-0x2ab50228],0xd2
  40c1db:	out    dx,al
  40c1dc:	dec    eax
  40c1dd:	sub    esp,edx
  40c1df:	in     al,dx
  40c1e0:	and    DWORD PTR [ecx],eax
  40c1e2:	add    al,BYTE PTR [eax]
  40c1e4:	bound  eax,QWORD PTR ds:0xde702229
  40c1ea:	and    esi,DWORD PTR [edi]
  40c1ec:	jge    0x40c1f3
  40c1ee:	sbb    bh,BYTE PTR [ebx]
  40c1f0:	jg     0x40c1d3
  40c1f2:	push   cs
  40c1f3:	sub    dh,BYTE PTR [ebp-0x2b]
  40c1f6:	sbb    ch,BYTE PTR [eax]
  40c1f8:	jb     0x40c1fa
  40c1fa:	add    al,BYTE PTR [eax]
  40c1fc:	(bad)  
  40c1fd:	fnstenv [ebx-0x66]
  40c200:	shl    BYTE PTR [esi],1
  40c202:	pop    ebx
  40c203:	xchg   esi,eax
	...
  40c218:	mov    edi,0xb89b7643
  40c21d:	pop    eax
  40c21e:	push   ecx
  40c21f:	test   al,0xc3
  40c221:	xor    al,0x43
  40c223:	(bad)  
  40c224:	in     eax,dx
  40c225:	or     al,BYTE PTR [eax]
  40c227:	aas    
  40c228:	pushf  
  40c229:	xchg   esi,eax
  40c22a:	cld    
  40c22b:	push   edx
  40c22c:	xor    BYTE PTR [esp+ecx*1+0x3c],dh
  40c230:	and    eax,0x543ab6ab
  40c235:	scas   eax,DWORD PTR es:[edi]
  40c236:	test   al,0x3e
  40c238:	sbb    eax,0x625fbea8
  40c23d:	fnstcw WORD PTR [ebp-0x355bedb0]
  40c243:	cmp    al,0x26
  40c245:	xchg   BYTE PTR [edx-0x6f5ef4bb],dh
  40c24b:	inc    esp
  40c24c:	add    bl,BYTE PTR [ebp-0x6dccaf6a]
  40c252:	test   al,0x5f
  40c254:	(bad)  
  40c255:	fnstcw WORD PTR [esi+eiz*8]
  40c258:	jns    0x40c277
  40c25a:	add    al,0xf1
  40c25c:	pushf  
  40c25d:	or     eax,0x256ee919
  40c262:	add    cl,ah
  40c264:	xchg   ebp,edi
  40c266:	sub    bl,bh
  40c268:	ja     0x40c25d
  40c26a:	adc    BYTE PTR [edx+eiz*2],al
  40c26d:	fldenv [ebx-0x2f]
  40c270:	fbld   TBYTE PTR [edi]
  40c272:	xchg   edi,eax
  40c273:	in     eax,dx
  40c274:	and    ebx,DWORD PTR [ecx]
  40c276:	lods   al,BYTE PTR ds:[esi]
  40c277:	leave  
  40c278:	pop    ss
  40c279:	xor    DWORD PTR [edi+0x77],edi
	...
  40c290:	jmp    0x40c2bd
  40c292:	xchg   ebx,eax
  40c293:	fdivrp st(5),st
  40c295:	and    DWORD PTR [edi-0x4ecef071],ebp
  40c29b:	mov    dh,0x14
  40c29d:	pop    ecx
  40c29e:	add    DWORD PTR [eax+ebp*8+0x1d],edx
  40c2a2:	mov    ch,0x85
  40c2a4:	adc    ah,BYTE PTR [edi]
  40c2a6:	int3   
  40c2a7:	mov    edi,0x91e33331
  40c2ac:	std    
  40c2ad:	push   DWORD PTR [eax-0x3bf8092]
  40c2b3:	jmp    0x36419c19
  40c2b8:	inc    ecx
  40c2b9:	mov    edi,0xa038b436
  40c2be:	add    dh,bl
  40c2c0:	cmp    BYTE PTR [eax+0x7d46f673],cl
  40c2c6:	je     0x40c2ce
  40c2c8:	data16 fld DWORD PTR [eax]
  40c2cb:	mov    ebx,0x103bc718
  40c2d0:	jb     0x40c29c
  40c2d2:	xor    BYTE PTR [edi],cl
  40c2d4:	adc    ecx,ebx
  40c2d6:	add    BYTE PTR [edi+0x2a],bl
  40c2d9:	push   edx
  40c2da:	mov    WORD PTR [ebx-0x5],es
  40c2dd:	cmp    al,0xac
  40c2df:	ja     0x40c2b4
  40c2e1:	dec    edi
  40c2e2:	mov    al,ds:0xa448d172
  40c2e7:	dec    esi
  40c2e8:	shl    DWORD PTR [edi],0xf6
  40c2eb:	adc    edi,DWORD PTR [edi-0x27a252b2]
  40c2f1:	xor    al,0xa9
  40c2f3:	inc    esi
	...
  40c308:	jg     0x40c301
  40c30a:	in     al,0x74
  40c30c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c30d:	sbb    esp,ebx
  40c30f:	jae    0x40c2ec
  40c311:	pop    esi
  40c312:	mov    ebp,DWORD PTR [eax-0x17]
  40c315:	pop    esi
  40c316:	nop
  40c317:	push   ds
  40c318:	xor    BYTE PTR [esi],ch
  40c31a:	xor    DWORD PTR [ebp-0xd01f6c5],0x72
  40c321:	rol    DWORD PTR [esp+ebp*8],cl
  40c324:	xor    al,0x9
  40c326:	(bad)  
  40c327:	xchg   esp,eax
  40c328:	(bad)  [ecx-0x58]
  40c32b:	add    BYTE PTR [ebx-0x59524fb4],ch
  40c331:	fs stos DWORD PTR es:[edi],eax
  40c333:	cli    
  40c334:	or     ebx,ebp
  40c336:	add    BYTE PTR [eax],al
  40c338:	cmp    DWORD PTR [esi],0xffffffa0
  40c33b:	stos   DWORD PTR es:[edi],eax
  40c33c:	pushf  
  40c33d:	dec    esp
  40c33e:	jmp    0xac7860df
  40c343:	add    BYTE PTR [ecx-0x58],bl
  40c346:	outs   dx,BYTE PTR ds:[esi]
  40c347:	outs   dx,DWORD PTR ds:[esi]
  40c348:	push   ecx
  40c349:	jp     0x40c3c7
  40c34b:	add    BYTE PTR ds:0xfb4643c8,dh
  40c351:	fadd   QWORD PTR [eax]
  40c353:	add    BYTE PTR [eax],dl
  40c355:	mov    esi,0xafc40000
  40c35a:	jns    0x40c3c3
  40c35c:	mov    ebx,0x200000dc
  40c361:	or     ebp,esi
  40c363:	repz call 0x452a7fce
  40c369:	sbb    eax,0xacf6
	...
  40c37e:	add    BYTE PTR [eax],al
  40c380:	sub    ah,BYTE PTR [edx-0x22]
  40c383:	cwde   
  40c384:	cmp    al,0x36
  40c386:	cli    
  40c387:	test   BYTE PTR [ebx-0x4bffff24],cl
  40c38d:	push   cs
  40c38e:	adc    DWORD PTR [ebx+ecx*4],edx
  40c391:	les    ecx,FWORD PTR [esi+0x4f]
  40c394:	xchg   edi,edx
  40c396:	push   cs
  40c397:	sbb    DWORD PTR [edx-0x15],esi
  40c39a:	add    eax,0x16eb7e1c
  40c39f:	sbb    edi,DWORD PTR [edx-0x22]
  40c3a2:	pop    ebp
  40c3a3:	pop    edx
  40c3a4:	retf   
  40c3a5:	mov    ebx,0xdb380808
  40c3aa:	adc    eax,0x24b1150c
  40c3af:	xor    BYTE PTR [ecx-0x36],dh
  40c3b2:	sub    eax,0x29c96e6f
  40c3b7:	arpl   WORD PTR [edx-0x2c],sp
  40c3ba:	sub    BYTE PTR ds:0x7f6d0787,ch
  40c3c0:	jb     0x40c3a0
  40c3c2:	and    DWORD PTR [eax],esi
  40c3c4:	imul   eax,DWORD PTR [ecx],0xfffffffb
  40c3c7:	cmp    BYTE PTR [ebx+0x620004c1],al
  40c3cd:	or     DWORD PTR [edi],ebx
  40c3cf:	pop    es
  40c3d0:	push   ebx
  40c3d1:	and    eax,0x76620002
  40c3d6:	je     0x40c369
  40c3d8:	aad    0x82
  40c3da:	mov    esi,0xc44026cc
  40c3df:	mov    bl,bh
  40c3e1:	mov    dl,BYTE PTR [edi+0x8e]
	...
  40c3f7:	add    bl,bl
  40c3f9:	scas   al,BYTE PTR es:[edi]
  40c3fa:	(bad)
  40c3fd:	xor    al,al
  40c3ff:	xchg   esi,eax
  40c400:	repz xchg esi,eax
  40c402:	int    0xc6
  40c404:	fwait
  40c405:	enter  0x9aba,0xda
  40c409:	ins    DWORD PTR es:[edi],dx
  40c40a:	repz cli 
  40c40c:	xlat   BYTE PTR ds:[ebx]
  40c40d:	push   esp
  40c40e:	scas   al,BYTE PTR es:[edi]
  40c40f:	lods   al,BYTE PTR ds:[esi]
  40c410:	in     eax,dx
  40c411:	pop    eax
  40c412:	test   DWORD PTR [eax-0x2054a906],esp
  40c418:	bound  eax,QWORD PTR [eax]
  40c41a:	push   es
  40c41b:	aas    
  40c41c:	inc    eax
  40c41d:	fiadd  DWORD PTR [eax+eax*1]
  40c420:	bound  ebx,QWORD PTR [eax-0x7c0b6083]
  40c426:	add    DWORD PTR [eax],eax
  40c428:	bound  ebp,QWORD PTR [esi]
  40c42a:	addr16 cs xor eax,0xfc373358
  40c431:	imul   ebp,DWORD PTR [esi+0x73],0x2b4445
  40c438:	bound  ebx,QWORD PTR [esi]
  40c43a:	sub    DWORD PTR [ecx],esp
  40c43c:	xchg   ebx,eax
  40c43d:	push   ds
  40c43e:	adc    al,0x5b
  40c440:	mov    ds:0x8a67213a,al
  40c445:	fld    DWORD PTR [eax]
  40c447:	or     eax,0x3a2cd968
  40c44c:	xchg   edx,eax
  40c44d:	mov    esi,0xd96203e7
  40c452:	pop    ebp
  40c453:	jle    0x40c427
  40c455:	sub    DWORD PTR [ecx-0x73],ebp
  40c458:	(bad)  
  40c459:	ins    DWORD PTR es:[edi],dx
  40c45a:	mov    ds:0x4,eax
	...
  40c46f:	add    BYTE PTR [edx-0x27],ah
  40c472:	and    eax,0xfaea14d
  40c477:	sti    
  40c478:	or     eax,0xdd99207
  40c47d:	or     DWORD PTR [esi+0x68d96204],ecx
  40c483:	jl     0x40c454
  40c485:	fldcw  WORD PTR [ecx-0x7801fa14]
  40c48b:	lock add al,0x3f
  40c48e:	cmp    eax,0x3132b498
  40c493:	xchg   esp,eax
  40c494:	mov    al,0x36
  40c496:	inc    ebp
  40c497:	mov    al,0x9c
  40c499:	fldenv [ebp+0x3a23f49f]
  40c49f:	mov    ebx,ds
  40c4a1:	push   esp
  40c4a2:	ins    DWORD PTR es:[edi],dx
  40c4a3:	mov    ah,0xf8
  40c4a5:	aas    
  40c4a6:	mov    DWORD PTR [eax-0x44d0e16b],ebp
  40c4ac:	mov    edi,0xf98584f9
  40c4b1:	arpl   WORD PTR [ebx],dx
  40c4b3:	(bad)  
  40c4b4:	fcomp  QWORD PTR [esi+0x6b]
  40c4b7:	xchg   ebx,esi
  40c4b9:	push   ebx
  40c4ba:	push   ebp
  40c4bb:	mov    bh,0xb2
  40c4bd:	pusha  
  40c4be:	pop    edx
  40c4bf:	xchg   esi,eax
  40c4c0:	mov    dl,0x42
  40c4c2:	pop    edx
  40c4c3:	test   al,0xbb
  40c4c5:	inc    esp
  40c4c6:	push   ebx
  40c4c7:	bnd je 0x40c50e
  40c4ca:	push   esp
  40c4cb:	scas   eax,DWORD PTR es:[edi]
  40c4cc:	test   al,0xfe
  40c4ce:	dec    ebx
  40c4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4d0:	pop    es
  40c4d1:	inc    ecx
  40c4d2:	add    DWORD PTR [ebp+0x0],ecx
	...
  40c4e5:	add    BYTE PTR [eax],al
  40c4e7:	add    BYTE PTR ds:0x661ece11,ah
  40c4ed:	fld    DWORD PTR [eax]
  40c4ef:	adc    ebp,DWORD PTR [ebx-0x33]
  40c4f2:	das    
  40c4f3:	pop    ebp
  40c4f4:	into   
  40c4f5:	jb     0x40c557
  40c4f7:	adc    dl,cl
  40c4f9:	fld    DWORD PTR [eax]
  40c4fb:	daa    
  40c4fc:	jbe    0x40c497
  40c4fe:	das    
  40c4ff:	cli    
  40c500:	mov    edi,0x279b00d9
  40c505:	sub    eax,0x63a8fa5
  40c50a:	(bad)  
  40c50b:	sbb    al,0x69
  40c50d:	pushf  
  40c50e:	jno    0x40c529
  40c510:	add    bh,0x59
  40c513:	sub    al,0x66
  40c515:	fld    DWORD PTR [eax]
  40c517:	nop
  40c518:	in     al,0xef
  40c51a:	out    0xe9,al
  40c51c:	popa   
  40c51d:	fld    DWORD PTR [eax]
  40c51f:	cli    
  40c520:	aas    
  40c521:	jo     0x40c593
  40c523:	enter  0x8c53,0x22
  40c527:	jmp    0x78419e8d
  40c52c:	sti    
  40c52d:	icebp  
  40c52e:	clc    
  40c52f:	lods   ax,WORD PTR ds:[esi]
  40c531:	cmp    al,ch
  40c533:	pusha  
  40c534:	repz arpl bx,di
  40c537:	sbb    BYTE PTR [ebx+0x798fe05],0x3d
  40c53e:	add    DWORD PTR [esi],ebx
  40c540:	cwde   
  40c541:	sub    al,0x96
  40c543:	jmp    0xda419ea9
  40c548:	xchg   esp,eax
  40c549:	out    0x1d,al
  40c54b:	fiadd  WORD PTR [eax]
	...
  40c55d:	add    BYTE PTR [eax],al
  40c55f:	add    BYTE PTR [edi+0x61f000e2],cl
  40c565:	fld    DWORD PTR [eax]
  40c567:	mov    bh,0x14
  40c569:	jp     0x40c5da
  40c56b:	call   0x7a0e:0xb440850f
  40c572:	jae    0x40c574
  40c574:	jmp    0xc247:0x75006ba2
  40c57b:	rol    dl,cl
  40c57d:	adc    al,0xd4
  40c57f:	add    BYTE PTR [edx-0xa],ah
  40c582:	icebp  
  40c583:	cld    
  40c584:	daa    
  40c585:	cs clc 
  40c587:	in     eax,dx
  40c588:	fsub   QWORD PTR [esi]
  40c58a:	std    
  40c58b:	sti    
  40c58c:	dec    ebx
  40c58d:	fld    DWORD PTR [eax]
  40c58f:	add    BYTE PTR [ebp+0x7a],bh
  40c592:	popa   
  40c593:	imul   ebx,DWORD PTR [eax+0x582c6b7c],0xffffffdd
  40c59a:	add    BYTE PTR [eax],al
  40c59c:	int3   
  40c59d:	adc    esp,esp
  40c59f:	rcr    ch,1
  40c5a1:	inc    edi
  40c5a2:	ret    0xd3d8
  40c5a5:	aas    
  40c5a6:	(bad)  
  40c5a7:	jmp    DWORD PTR [eax]
  40c5a9:	icebp  
  40c5aa:	cld    
  40c5ab:	loopne 0x40c5b8
  40c5ad:	fld    DWORD PTR [eax]
  40c5af:	add    bl,bh
  40c5b1:	fadd   DWORD PTR [eax]
  40c5b3:	add    bl,bh
  40c5b5:	fist   DWORD PTR [edx]
  40c5b7:	add    al,0xad
  40c5b9:	fdivr  st,st(7)
  40c5bb:	push   ss
  40c5bc:	mov    al,0xcc
  40c5be:	pop    ebx
  40c5bf:	adc    BYTE PTR [edi+0x150cd4],bl
	...
  40c5d5:	add    BYTE PTR [eax],al
  40c5d7:	add    ah,al
  40c5d9:	rol    DWORD PTR [edi+0x5],cl
  40c5dc:	int    0xd3
  40c5de:	or     BYTE PTR [ebx],cl
  40c5e0:	ret    
  40c5e1:	call   0xf02:0xd7c5010c
  40c5e8:	test   ch,ch
  40c5ea:	cmp    eax,0x3ce66437
  40c5ef:	and    ah,cl
  40c5f1:	test   al,0x7d
  40c5f3:	outs   dx,BYTE PTR ds:[esi]
  40c5f4:	retf   
  40c5f5:	ja     0x40c64d
  40c5f7:	push   eax
  40c5f8:	stos   DWORD PTR es:[edi],eax
  40c5f9:	jmp    0x40c61d
  40c5fb:	xor    al,0x7d
  40c5fd:	call   0x17a2ed31
  40c602:	ins    WORD PTR es:[edi],dx
  40c604:	sub    al,0x27
  40c606:	and    eax,0x5164393d
  40c60b:	sbb    DWORD PTR [edi-0x5dadc69b],esi
  40c611:	sub    BYTE PTR [edi],0x6c
  40c614:	mov    ah,0x66
  40c616:	dec    esi
  40c617:	pop    edi
  40c618:	scas   eax,DWORD PTR es:[edi]
  40c619:	ror    BYTE PTR [edx+0x9],0xa7
  40c61d:	mov    ah,0x4d
  40c61f:	dec    eax
  40c620:	test   eax,0x600d3dba
  40c625:	stc    
  40c626:	dec    ebx
  40c627:	dec    edx
  40c628:	pushf  
  40c629:	xchg   esp,eax
  40c62a:	push   ebx
  40c62b:	ds dec edi
  40c62d:	es clc 
  40c62f:	gs or  edx,0x6e
  40c633:	inc    eax
  40c634:	jl     0x40c5cd
  40c636:	pop    edi
  40c637:	jge    0x40c689
  40c639:	adc    edx,DWORD PTR [edi+0x62]
	...
  40c650:	xchg   esi,ebp
  40c652:	push   edx
  40c653:	push   0x6c
  40c655:	out    0x22,al
  40c657:	js     0x40c6d6
  40c659:	out    0x66,eax
  40c65b:	push   esp
  40c65c:	data16 jle 0x40c6d3
  40c65f:	jg     0x40c65e
  40c661:	mov    ds:0xa5f5ab76,al
  40c666:	test   DWORD PTR [ecx-0x25499918],ebx
  40c66c:	out    0x75,al
  40c66e:	mov    DWORD PTR [ebx-0x1245361f],edx
  40c674:	retf   0x7e89
  40c677:	mov    esi,ecx
  40c679:	imul   edi,DWORD PTR [edx-0x68],0xffffffd5
  40c67d:	jle    0x40c65c
  40c67f:	hlt    
  40c680:	(bad)  
  40c681:	lea    edx,[edx-0x567a3d5b]
  40c687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c688:	xchg   edx,eax
  40c689:	sbb    DWORD PTR [eax+ebp*4-0x6e7e2732],0xffffffcf
  40c691:	aaa    
  40c692:	push   esi
  40c693:	lods   al,BYTE PTR ds:[esi]
  40c694:	(bad)  
  40c695:	cmp    eax,0x4ac7a47a
  40c69a:	cmp    al,0xaf
  40c69c:	jle    0x40c6df
  40c69e:	and    eax,0x1df11dba
  40c6a3:	mov    ebp,0x73572b25
  40c6a8:	in     al,dx
  40c6a9:	and    DWORD PTR [eax],edx
  40c6ab:	mov    bh,0x1d
  40c6ad:	and    esi,DWORD PTR [ebp+edi*2+0xb]
  40c6b1:	ss mov ah,0xb1
	...
  40c6c8:	pop    ds
  40c6c9:	sub    bl,dl
  40c6cb:	ror    BYTE PTR [esi],0xf
  40c6ce:	lahf   
  40c6cf:	test   dl,bl
  40c6d1:	and    BYTE PTR [eax-0x4001fc2b],bh
  40c6d7:	call   0xe0030ce7
  40c6dc:	dec    BYTE PTR [ecx]
  40c6de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6df:	jmp    0xefd0c8db
  40c6e4:	lock and BYTE PTR [eax-0x7a04fa12],dl
  40c6eb:	fucomi st,st(6)
  40c6ed:	out    dx,al
  40c6ee:	inc    edx
  40c6ef:	test   al,0xb8
  40c6f1:	cmc    
  40c6f2:	(bad)  
  40c6f4:	popa   
  40c6f5:	out    0x1f,al
  40c6f7:	dec    ecx
  40c6f8:	push   esp
  40c6f9:	sbb    edi,0xc5d5680c
  40c6ff:	or     ebx,DWORD PTR [ebx-0x1e]
  40c702:	jmp    0x4c00:0xe3ec274f
  40c709:	jmp    0x9998c2f9
  40c70e:	in     eax,dx
  40c70f:	or     cl,BYTE PTR [ebx-0x23]
  40c712:	icebp  
  40c713:	and    al,0x40
  40c715:	int    0xfb
  40c717:	sbb    bh,BYTE PTR ds:0x73fd00d4
  40c71d:	mov    ch,0x39
  40c71f:	repz xor al,0xb0
  40c722:	cmp    eax,0x27b25692
  40c727:	xlat   BYTE PTR ds:[ebx]
  40c728:	jbe    0x40c6d8
  40c72a:	sub    al,0xc7
	...
  40c740:	cmp    BYTE PTR [edx+eiz*2-0x80],dh
  40c744:	aaa    
  40c745:	scas   eax,DWORD PTR es:[edi]
  40c746:	es scas eax,DWORD PTR es:[edi]
  40c748:	nop
  40c749:	jecxz  0x40c756
  40c74b:	mov    ebp,0x2d00d97b
  40c750:	and    ebp,DWORD PTR [ecx+eax*8]
  40c753:	add    ebx,DWORD PTR [edx]
  40c755:	sbb    eax,0x61b1c6d2
  40c75a:	fldcw  WORD PTR [esi-0x5233e60e]
  40c760:	repz push esp
  40c762:	sar    BYTE PTR [eax-0x5a2cd2e4],1
  40c768:	fstp   DWORD PTR [ebx+eax*8-0x55]
  40c76c:	and    BYTE PTR [eax],dl
  40c76e:	fistp  QWORD PTR [ecx+0x70b10c36]
  40c774:	in     eax,dx
  40c775:	dec    esp
  40c776:	mov    dl,0x93
  40c778:	fild   DWORD PTR [edi-0x60]
  40c77b:	jns    0x40c7ec
  40c77d:	lock jmp 0x40c70d
  40c780:	adc    ebx,DWORD PTR [esi]
  40c782:	repz xchg esi,eax
  40c784:	add    cl,bh
  40c786:	scas   al,BYTE PTR es:[edi]
  40c787:	push   edx
  40c788:	retf   
  40c789:	add    ah,ah
  40c78b:	xor    DWORD PTR [esi-0x1d690311],0x5a
  40c792:	xchg   edx,eax
  40c793:	data16 loope 0x40c7ed
  40c796:	xchg   DWORD PTR [esi],edi
  40c798:	jmp    0xf7c263fc
  40c79d:	fistp  QWORD PTR es:[ecx]
  40c7a0:	cwde   
  40c7a1:	sub    esi,ebp
  40c7a3:	add    BYTE PTR ds:[eax],al
	...
  40c7b6:	add    BYTE PTR [eax],al
  40c7b8:	popa   
  40c7b9:	fld    DWORD PTR [eax]
  40c7bb:	add    BYTE PTR [edx+0x12],bl
  40c7be:	(bad)  
  40c7bf:	aad    0x7a
  40c7c1:	sbb    al,0xd4
  40c7c3:	ror    BYTE PTR [ebp-0x4],0xc0
  40c7c7:	retf   0x1657
  40c7ca:	ffreep st(2)
  40c7cc:	aas    
  40c7cd:	sbb    eax,0x1923f8ea
  40c7d2:	rol    edi,1
  40c7d4:	das    
  40c7d5:	inc    esp
  40c7d6:	retf   0x5099
  40c7d9:	sbb    eax,0x2b76d1ca
  40c7de:	in     eax,0xf3
  40c7e0:	adc    DWORD PTR [edx],0xdc5fece5
  40c7e6:	add    BYTE PTR [eax],al
  40c7e8:	sar    BYTE PTR [edi-0x2d5ca6b7],1
  40c7ee:	jle    0x40c83e
  40c7f0:	jl     0x40c78b
  40c7f2:	add    BYTE PTR [eax],al
  40c7f4:	cmp    al,0xdf
  40c7f6:	xor    BYTE PTR [ebx],ah
  40c7f8:	pop    esp
  40c7f9:	in     eax,0x20
  40c7fb:	or     ecx,DWORD PTR ss:0xeb713c37
  40c802:	daa    
  40c803:	xor    al,0x59
  40c805:	out    0x1a,al
  40c807:	push   cs
  40c808:	add    eax,0x293125ea
  40c80d:	mov    ch,0x3a
  40c80f:	outs   dx,DWORD PTR ds:[esi]
  40c810:	push   es
  40c811:	out    0x3a,al
  40c813:	daa    
  40c814:	lock fist DWORD PTR [ecx]
  40c817:	add    eax,0x1a1ab5a7
	...
  40c830:	aam    0x9
  40c832:	pop    ss
  40c833:	adc    DWORD PTR [ebx+eiz*8-0x2354e8ef],esi
  40c83a:	adc    al,0x0
  40c83c:	xchg   ebx,eax
  40c83d:	xchg   DWORD PTR [ebx-0x617dc164],ebx
  40c843:	add    BYTE PTR [edx-0x28],dl
  40c846:	or     eax,0x5ee620d
  40c84b:	push   cs
  40c84c:	add    al,BYTE PTR cs:[bx+si]
  40c850:	bound  ecx,QWORD PTR [ebx+0x50]
  40c853:	jl     0x40c85a
  40c855:	sub    edx,DWORD PTR [esi+0x6c]
  40c858:	or     BYTE PTR [esi],dh
  40c85a:	ss jnp 0x40c86f
  40c85d:	sbb    BYTE PTR [ebp+eiz*2-0x6],bl
  40c861:	addr16 pop ecx
  40c863:	push   esi
  40c864:	and    BYTE PTR [ebp+ebx*2+0x6b],dl
  40c868:	out    dx,eax
  40c869:	push   edi
  40c86a:	pop    esi
  40c86b:	jbe    0x40c8ae
  40c86d:	xor    DWORD PTR [ecx+0x76],ebx
  40c870:	leave  
  40c871:	pop    edi
  40c872:	dec    edi
  40c873:	pop    edi
  40c874:	stos   DWORD PTR es:[edi],eax
  40c875:	push   edx
  40c876:	imul   ecx,DWORD PTR [esp+esi*4+0x30],0xf2985132
  40c87e:	add    DWORD PTR [eax],eax
  40c880:	bound  ecx,QWORD PTR ds:0x2e1ec0cf
  40c886:	loop   0x40c856
  40c888:	sbb    al,0x2d
  40c88a:	ror    al,0x4
  40c88d:	repnz add DWORD PTR [eax],eax
  40c890:	bound  eax,QWORD PTR [ebp-0x2e]
  40c893:	stc    
	...
  40c8a8:	or     ecx,DWORD PTR ds:0x3c0ee9dc
  40c8ae:	mov    esp,0xd6120cfc
  40c8b3:	loop   0x40c8b1
  40c8b5:	imul   ebx,edi,0xe15318cf
  40c8bb:	jmp    0x40c8c1
  40c8bd:	popa   
  40c8be:	into   
  40c8bf:	xlat   BYTE PTR ds:[ebx]
  40c8c0:	sbb    al,0x67
  40c8c2:	aad    0xf1
  40c8c4:	(bad)  
  40c8c5:	popa   
  40c8c6:	iret   
  40c8c7:	jmp    0xd10b1286
  40c8cc:	mov    ah,0x69
  40c8ce:	out    dx,eax
  40c8cf:	cld    
  40c8d0:	test   eax,0x9dc1b037
  40c8d5:	fdiv   DWORD PTR [edx]
  40c8d7:	mov    esi,0xba2efee9
  40c8dc:	mov    DWORD PTR [eax],ebx
  40c8de:	and    bl,al
  40c8e0:	mov    WORD PTR [ecx],es
  40c8e2:	push   eax
  40c8e3:	(bad)  
  40c8e4:	scas   eax,DWORD PTR es:[edi]
  40c8e5:	adc    al,0x95
  40c8e7:	xchg   BYTE PTR [edx+0x6203e830],bl
  40c8ed:	(bad)  [ecx]
  40c8ef:	and    al,BYTE PTR [ebx-0x49]
  40c8f2:	out    0x3,eax
  40c8f4:	(bad)  
  40c8f5:	fst    DWORD PTR [esi+ebp*2+0x3e77704]
  40c8fc:	(bad)  
  40c8fd:	fstp   DWORD PTR [ecx-0xc2fb6d4]
  40c903:	inc    edx
  40c904:	mov    esp,0x625eeaa3
  40c909:	fnstenv [ebx]
  40c90b:	out    0x0,al
	...
  40c91d:	add    BYTE PTR [eax],al
  40c91f:	add    bh,bh
  40c921:	inc    esi
  40c922:	push   cs
  40c923:	jns    0x40c96a
  40c925:	push   DWORD PTR [edx]
  40c927:	jg     0x40c8e6
  40c929:	push   edi
  40c92a:	outs   dx,BYTE PTR ds:[esi]
  40c92b:	mov    bh,dl
  40c92d:	sbb    cl,BYTE PTR [ebp+0x7a5bd38d]
  40c933:	mov    esp,ebx
  40c935:	data16 lods al,BYTE PTR ds:[esi]
  40c937:	pushf  
  40c938:	out    0x4e,eax
  40c93a:	pop    esp
  40c93b:	jb     0x40c91a
  40c93d:	pop    edi
  40c93e:	mov    ax,0x6637
  40c942:	push   edi
  40c943:	jp     0x40c92f
  40c945:	arpl   WORD PTR [ecx-0x6aeb0e66],ax
  40c94b:	jle    0x40c942
  40c94d:	(bad)  
  40c94e:	jne    0x40c8e9
  40c950:	ret    0x4635
  40c953:	add    al,0x62
  40c955:	fldcw  WORD PTR [edi]
  40c957:	adc    eax,0x8e99e38
  40c95c:	(bad)  
  40c95d:	(bad)  
  40c95f:	adc    eax,0xf00d97b
  40c964:	pop    ss
  40c965:	xchg   ebx,eax
  40c966:	pop    edx
  40c967:	sub    DWORD PTR [edi],esp
  40c969:	xchg   ecx,eax
  40c96a:	dec    eax
  40c96b:	mov    bl,0x1e
  40c96d:	jl     0x40c9d5
  40c96f:	mov    dl,0x22
  40c971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c972:	dec    esp
  40c973:	repnz aaa 
  40c975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c976:	push   edi
  40c977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c978:	pop    esi
  40c979:	mov    es,WORD PTR [eax]
  40c97b:	fcomp  QWORD PTR [ebx+0x63de01ce]
  40c981:	loopne 0x40c996
  40c983:	jmp    0x40c985
	...
  40c995:	add    BYTE PTR [eax],al
  40c997:	add    BYTE PTR [edx+0x7acd56d3],cl
  40c99d:	fild   WORD PTR [eax]
  40c99f:	jo     0x40c98b
  40c9a1:	sub    dh,cl
  40c9a3:	xor    ah,BYTE PTR [esi-0x27]
  40c9a6:	add    bl,ch
  40c9a8:	dec    esp
  40c9a9:	shl    BYTE PTR [edx],0xcf
  40c9ac:	cmp    BYTE PTR [ecx-0x3d861a8e],0x2c
  40c9b3:	mov    ebp,0xee7ab17e
  40c9b8:	jbe    0x40c96b
  40c9ba:	sub    ebp,ecx
  40c9bc:	popa   
  40c9bd:	fld    DWORD PTR [eax]
  40c9bf:	sbb    al,0x86
  40c9c1:	mov    ebx,0xcb84142f
  40c9c6:	and    al,0x1b
  40c9c8:	jl     0x40c99e
  40c9ca:	push   cs
  40c9cb:	icebp  
  40c9cc:	sbb    eax,0x5ed906e3
  40c9d1:	mov    cl,0x22
  40c9d3:	cli    
  40c9d4:	jo     0x40c983
  40c9d6:	xor    edi,ebx
  40c9d8:	outs   dx,BYTE PTR ds:[esi]
  40c9d9:	lods   eax,DWORD PTR ds:[esi]
  40c9da:	sbb    al,0xdf
  40c9dc:	idiv   ch
  40c9de:	std    
  40c9df:	pop    ebp
  40c9e0:	mov    esi,0xe676ae3a
  40c9e5:	push   edx
  40c9e6:	add    DWORD PTR [esi-0x3f],esi
  40c9e9:	cmp    DWORD PTR [esi-0x11c300b6],ebp
  40c9ef:	add    BYTE PTR [eax+0x30],cl
  40c9f2:	stos   BYTE PTR es:[edi],al
  40c9f3:	mov    bh,0x26
  40c9f5:	cmp    BYTE PTR [eax+0xd9bbb4],dh
	...
  40ca0f:	add    cl,dl
  40ca11:	xor    ebp,DWORD PTR [ecx-0x1bf3358]
  40ca17:	(bad)  
  40ca18:	fsubr  QWORD PTR [edx-0x56]
  40ca1b:	add    BYTE PTR [ebx+0x6e3f36e2],ch
  40ca21:	or     dh,BYTE PTR [edi]
  40ca23:	ss ins BYTE PTR es:[edi],dx
  40ca25:	loop   0x40ca53
  40ca27:	sub    eax,0x3635e881
  40ca2c:	pop    ebx
  40ca2d:	mov    eax,0xaf7d2f31
  40ca32:	ins    BYTE PTR es:[edi],dx
  40ca33:	pop    es
  40ca34:	stos   DWORD PTR es:[edi],eax
  40ca35:	mov    dh,0x26
  40ca37:	and    dh,BYTE PTR [ebx-0x4b]
  40ca3a:	sub    eax,0x4d86b38
  40ca3f:	sub    eax,0x5d2bfc17
  40ca44:	pop    ds
  40ca45:	add    DWORD PTR [ebx],ebx
  40ca47:	or     al,0x2f
  40ca49:	into   
  40ca4a:	or     BYTE PTR [eax],al
  40ca4c:	pop    ss
  40ca4d:	(bad)  
  40ca4e:	push   ds
  40ca4f:	adc    al,0x13
  40ca51:	fadd   DWORD PTR [esi]
  40ca53:	push   esp
  40ca54:	push   ebp
  40ca55:	add    BYTE PTR [esi],cl
  40ca57:	adc    al,0x6c
  40ca59:	mov    cl,0x18
  40ca5b:	pop    ds
  40ca5c:	inc    ecx
  40ca5d:	or     eax,DWORD PTR [esi]
  40ca5f:	add    eax,0x140b02
  40ca64:	add    DWORD PTR fs:[edi+eax*1],ebx
  40ca68:	clc    
  40ca69:	fiadd  DWORD PTR [ebx]
  40ca6b:	dec    edi
  40ca6c:	push   esi
  40ca6d:	dec    BYTE PTR [edi]
  40ca6f:	adc    DWORD PTR [edx],ecx
  40ca71:	out    dx,eax
  40ca72:	adc    al,0x47
	...
  40ca88:	adc    DWORD PTR ds:0xecff1219,eax
  40ca8e:	sbb    dl,BYTE PTR [ecx]
  40ca90:	(bad)  
  40ca91:	out    dx,al
  40ca92:	(bad)  
  40ca93:	jmp    DWORD PTR [edx-0x44]
  40ca96:	outs   dx,DWORD PTR ds:[esi]
  40ca97:	xchg   esi,eax
  40ca98:	in     al,0x88
  40ca9a:	mov    DWORD PTR [ebx-0x658b715c],ecx
  40caa0:	jmp    0x2312:0x629b757a
  40caa7:	and    BYTE PTR [edi+0x6f332ae2],al
  40caad:	movups XMMWORD PTR [ebp+0x7f],xmm4
  40cab1:	fisub  DWORD PTR [edi]
  40cab3:	sub    al,0x4f
  40cab5:	int3   
  40cab6:	pop    ds
  40cab7:	cmp    eax,0x1f23c
  40cabc:	bound  edi,QWORD PTR [esi-0x1955353d]
  40cac2:	leave  
  40cac3:	fisubr DWORD PTR [edi-0x62341639]
  40cac9:	rol    edi,0xd1
  40cacc:	popf   
  40cacd:	cdq    
  40cace:	retf   0x79e0
  40cad1:	shl    BYTE PTR [eax-0x404dca24],0x94
  40cad8:	pop    ebx
  40cad9:	loopne 0x40ca94
  40cadb:	fsub   QWORD PTR [edx-0x57]
  40cade:	jo     0x40ca7d
  40cae0:	xlat   BYTE PTR ds:[ebx]
  40cae1:	js     0x40cb59
  40cae3:	(bad)  
  40cae4:	fidivr DWORD PTR [ebx+0x6dd09896]
  40caea:	jns    0x40ca72
	...
  40cb00:	enter  0x766d,0xb3
  40cb04:	in     al,0x6a
  40cb06:	test   BYTE PTR [edi-0x408e7b20],al
  40cb0c:	mov    DWORD PTR [edx-0x5cd87f8c],0xf1cfb097
  40cb16:	add    DWORD PTR [eax],eax
  40cb18:	(bad)  
  40cb1a:	xor    ecx,DWORD PTR [ecx-0x71]
  40cb1d:	fldcw  WORD PTR [eax*1+0x3d2a8d72]
  40cb24:	(bad)  
  40cb25:	fnstcw WORD PTR [ebx-0x17f73522]
  40cb2b:	add    esp,DWORD PTR [edx-0x27]
  40cb2e:	pop    edx
  40cb2f:	mov    ecx,0x3e827e1
  40cb34:	(bad)  
  40cb35:	fnstcw WORD PTR [ecx-0x38]
  40cb38:	stos   BYTE PTR es:[edi],al
  40cb39:	push   ss
  40cb3a:	sahf   
  40cb3b:	scas   al,BYTE PTR es:[edi]
  40cb3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb3d:	push   esi
  40cb3e:	dec    eax
  40cb3f:	enter  0x16a7,0xe8
  40cb43:	add    esp,DWORD PTR [edx-0x27]
  40cb46:	jmp    0xe082663
  40cb4b:	pop    ds
  40cb4c:	inc    edx
  40cb4d:	xchg   eax,ebx
  40cb4f:	adc    BYTE PTR [ebx],bh
  40cb51:	rol    al,0xf0
  40cb54:	dec    ebx
  40cb55:	enter  0x400,0x62
  40cb59:	fldenv ds:0x15ff7be6
  40cb5f:	in     al,dx
  40cb60:	test   DWORD PTR ds:0xe408,ecx
	...
  40cb76:	add    BYTE PTR [eax],al
  40cb78:	ja     0x40cb7f
  40cb7a:	add    ecx,edx
  40cb7c:	pop    ebp
  40cb7d:	sti    
  40cb7e:	push   0xffffffa3
  40cb80:	add    BYTE PTR [ebx+edi*1],ch
  40cb83:	lods   al,BYTE PTR ds:[esi]
  40cb84:	std    
  40cb85:	pop    edi
  40cb86:	fs test eax,0x3e82dfe
  40cb8c:	(bad)  
  40cb8d:	(bad)  
  40cb8f:	hlt    
  40cb90:	push   0x77f6edcb
  40cb95:	mov    esi,0xe25a1c1b
  40cb9a:	sbb    al,0x10
  40cb9c:	inc    ebx
  40cb9d:	ret    0x150d
  40cba0:	(bad)  
  40cba1:	fstp   DWORD PTR [eax]
  40cba3:	(bad)  
  40cba4:	push   esp
  40cba5:	in     eax,0xda
  40cba7:	cmc    
  40cba8:	pop    esp
  40cba9:	fadd   QWORD PTR [eax]
  40cbab:	loope  0x40cbe1
  40cbad:	jmp    0xbb2e9fd0
  40cbb2:	pop    ecx
  40cbb3:	sub    ah,bh
  40cbb5:	outs   dx,BYTE PTR ds:[esi]
  40cbb6:	and    ch,BYTE PTR [edx+ebx*2]
  40cbb9:	(bad)  
  40cbba:	or     ch,cl
  40cbbc:	mov    cs,WORD PTR [ebx-0x26bd0db6]
  40cbc2:	add    BYTE PTR [ebp-0x65],ah
  40cbc5:	pop    ecx
  40cbc6:	mov    cl,0x35
  40cbc8:	mov    edi,0xdaecd20
  40cbcd:	sbb    cl,BYTE PTR [ecx-0x72e9ceac]
  40cbd3:	jne    0x40cbca
  40cbd5:	dec    esp
  40cbd6:	fadd   DWORD PTR [esi+0x2ddc00c5]
	...
  40cbf0:	ror    BYTE PTR ds:0x5da121c2,1
  40cbf6:	xchg   DWORD PTR [ebp+0x2c92697b],eax
  40cbfc:	lods   eax,DWORD PTR ds:[esi]
  40cbfd:	out    dx,al
  40cbfe:	jmp    0x40cc4f
  40cc00:	xchg   edi,eax
  40cc01:	stc    
  40cc02:	idiv   BYTE PTR [esi-0x2e]
  40cc05:	dec    eax
  40cc06:	in     al,0x6a
  40cc08:	data16 fld DWORD PTR [eax]
  40cc0b:	jnp    0x40cbb2
  40cc0d:	lock in eax,0x3f
  40cc10:	es adc edx,esp
  40cc13:	sbb    al,0x5e
  40cc15:	fld    DWORD PTR [eax]
  40cc17:	add    eax,DWORD PTR ds:0xef518858
  40cc1d:	xchg   BYTE PTR cs:[eax-0x11],dl
  40cc21:	inc    ecx
  40cc22:	mov    al,0xe9
  40cc24:	popa   
  40cc25:	fld    DWORD PTR [eax]
  40cc27:	sahf   
  40cc28:	inc    ecx
  40cc29:	or     eax,eax
  40cc2b:	(bad)  
  40cc2c:	add    eax,0x8dce2f3
  40cc31:	(bad)  
  40cc32:	test   eax,0xd961e9
  40cc37:	add    BYTE PTR [edi-0x28],ch
  40cc3a:	sub    al,0x22
  40cc3c:	add    esp,edi
  40cc3e:	add    al,BYTE PTR [eax]
  40cc40:	cmp    BYTE PTR [ecx-0x1a13f9f7],bh
  40cc46:	and    esp,DWORD PTR [ebx]
  40cc48:	add    dh,dl
  40cc4a:	sbb    eax,0x3bcb0f32
  40cc4f:	cmp    bh,BYTE PTR [ecx+0x2b29b3]
	...
  40cc65:	add    BYTE PTR [eax],al
  40cc67:	add    bl,cl
  40cc69:	aad    0x0
  40cc6b:	add    BYTE PTR [edi+0x59],al
  40cc6e:	cdq    
  40cc6f:	pushf  
  40cc70:	mov    ebx,0xb30000d5
  40cc75:	fwait
  40cc76:	jp     0x40cc90
  40cc78:	retf   
  40cc79:	aad    0x0
  40cc7b:	add    BYTE PTR [edx],cl
  40cc7d:	or     bh,bl
  40cc7f:	jmp    0x40cc3c
  40cc81:	aad    0x0
  40cc83:	add    BYTE PTR [edx],al
  40cc85:	push   esi
  40cc86:	idiv   cl
  40cc88:	sub    bh,BYTE PTR [ebx-0x3]
  40cc8b:	call   DWORD PTR [edi-0x50f7e130]
  40cc91:	pop    es
  40cc92:	adc    al,0xa
  40cc94:	aam    0xea
  40cc96:	or     dl,BYTE PTR [edi]
  40cc98:	mov    edx,ebp
  40cc9a:	add    BYTE PTR [eax],al
  40cc9c:	mov    al,0xc0
  40cc9e:	dec    edx
  40cc9f:	dec    ebx
  40cca0:	jnp    0x40cc77
  40cca2:	add    BYTE PTR [eax],al
  40cca4:	inc    edi
  40cca5:	loop   0x40ccc4
  40cca7:	sbb    BYTE PTR [ebx-0x19],dl
  40ccaa:	dec    esp
  40ccab:	sbb    esp,DWORD PTR [eax]
  40ccad:	call   0x1551:0xaafd3b16
  40ccb4:	sub    esi,DWORD PTR [edx-0x27eab1b5]
  40ccba:	pop    esp
  40ccbb:	dec    eax
  40ccbc:	js     0x40cc9e
  40ccbe:	pop    ecx
  40ccbf:	add    al,0x2e
  40ccc1:	idiv   ebp
  40ccc3:	jmp    DWORD PTR [edx+0x48]
  40ccc6:	mov    bh,0xc1
  40ccc8:	and    al,BYTE PTR [eax-0x3c]
  40cccb:	ret    0x0
	...
  40ccde:	add    BYTE PTR [eax],al
  40cce0:	bound  ecx,QWORD PTR [ebp-0x66]
  40cce3:	mov    al,0xcf
  40cce5:	jae    0x40cc85
  40cce7:	scas   eax,DWORD PTR es:[edi]
  40cce8:	loope  0x40cd4f
  40ccea:	xchg   edx,eax
  40cceb:	mov    eax,0xb7a66bb7
  40ccf0:	bound  edi,QWORD PTR [ecx-0x2a8694a8]
  40ccf6:	pop    esp
  40ccf7:	add    BYTE PTR [edx+0x16],ah
  40ccfa:	sbb    eax,0x202852a
  40ccff:	add    BYTE PTR [edx+0x5e],ah
  40cd02:	sahf   
  40cd03:	hlt    
  40cd04:	or     esi,DWORD PTR [edi+0x35bdff92]
  40cd0a:	push   ss
  40cd0b:	cmp    al,0x83
  40cd0d:	cld    
  40cd0e:	and    DWORD PTR [esi],ebp
  40cd10:	test   BYTE PTR [esi+0x63620004],bh
  40cd16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd17:	test   eax,0xa4a56ed5
  40cd1c:	mov    esi,0xcdbd9e65
  40cd21:	add    al,BYTE PTR [edx]
  40cd23:	add    BYTE PTR [edx-0x4f],ah
  40cd26:	aam    0xf7
  40cd28:	xchg   eax,eax
  40cd2a:	out    0xe0,eax
  40cd2c:	je     0x40cd30
  40cd2e:	add    al,BYTE PTR [eax]
  40cd30:	bound  eax,QWORD PTR [eax+0x53]
  40cd33:	ja     0x40cd2d
  40cd35:	inc    eax
  40cd36:	dec    esp
  40cd37:	ficom  DWORD PTR fs:[ecx+0x68]
  40cd3b:	fs into 
  40cd3d:	add    al,BYTE PTR [edx]
  40cd3f:	add    BYTE PTR [edx+0x11],ah
  40cd42:	(bad)  
  40cd43:	and    al,BYTE PTR [eax]
	...
  40cd55:	add    BYTE PTR [eax],al
  40cd57:	add    BYTE PTR [esp+edx*1+0x0],dl
  40cd5b:	or     al,0x5f
  40cd5d:	or     DWORD PTR [edx],eax
  40cd5f:	sbb    ah,BYTE PTR [edx+0x6d]
  40cd62:	pop    ecx
  40cd63:	inc    edi
  40cd64:	mov    ecx,0xb15162d9
  40cd69:	imul   eax,DWORD PTR [ebp+0x4],0x62
  40cd6d:	fld    DWORD PTR ds:0xcc95826
  40cd73:	sub    eax,DWORD PTR [ecx-0x42]
  40cd76:	(bad)  
  40cd77:	adc    al,0x3d
  40cd79:	les    ecx,FWORD PTR [ebx]
  40cd7b:	add    al,0x62
  40cd7d:	fldcw  WORD PTR [esi-0x550def42]
  40cd83:	(bad)  
  40cd84:	jmp    0xe5fc7ea4
  40cd89:	mul    ebx
  40cd8b:	sti    
  40cd8c:	ins    DWORD PTR es:[edi],dx
  40cd8d:	mov    bl,0xe7
  40cd8f:	add    edx,DWORD PTR [ebp+0x6105e2cc]
  40cd95:	aam    0xf6
  40cd97:	add    esp,DWORD PTR [edx-0x27]
  40cd9a:	jne    0x40cd69
  40cd9c:	ret    
  40cd9d:	and    BYTE PTR [eax-0x18],dh
  40cda0:	mov    edi,0xb1d674fb
  40cda5:	repnz (bad) 
  40cda7:	loopne 0x40cd47
  40cda9:	test   DWORD PTR [ecx+ebx*8-0x7c],0x95e743fd
  40cdb1:	not    DWORD PTR [esp+ecx*8-0x7e]
  40cdb5:	and    eax,DWORD PTR [ebx-0x17]
  40cdb8:	jle    0x40cdb2
  40cdba:	xor    eax,0xd3
	...
  40cdcf:	add    BYTE PTR [ecx+esi*8+0x2f],dh
  40cdd3:	loope  0x40cd74
  40cdd5:	cmc    
  40cdd6:	inc    eax
  40cdd7:	jmp    0xd962:0x30e0084
  40cdde:	dec    eax
  40cddf:	cwde   
  40cde0:	sti    
  40cde1:	cmp    eax,DWORD PTR [edx-0x61]
  40cde4:	(bad)  
  40cde5:	push   esi
  40cde6:	ds popf 
  40cde8:	cli    
  40cde9:	dec    edx
  40cdea:	dec    eax
  40cdeb:	mov    ds:0xa74036f5,al
  40cdf0:	repnz ds add ecx,ebp
  40cdf4:	popa   
  40cdf5:	fld    DWORD PTR [eax]
  40cdf7:	test   eax,0x32417275
  40cdfc:	gs popf 
  40cdfe:	jle    0x40ce32
  40ce00:	pop    ebx
  40ce01:	mov    al,ds:0xa453364e
  40ce06:	add    BYTE PTR [ebx],bl
  40ce08:	cmp    al,ah
  40ce0a:	and    eax,0xcb06ff8
  40ce0f:	or     eax,0xe935c352
  40ce14:	popa   
  40ce15:	fld    DWORD PTR [eax]
  40ce17:	inc    edi
  40ce18:	sub    DWORD PTR [ebp+0x62],0x65698c31
  40ce1f:	push   cs
  40ce20:	outs   dx,DWORD PTR ds:[esi]
  40ce22:	pop    edi
  40ce23:	jmp    0xed41a789
  40ce28:	mov    esi,0x61bb18e4
  40ce2d:	fld    DWORD PTR [edi]
  40ce2f:	out    dx,eax
  40ce30:	imul   ebx,esp,0x0
  40ce33:	lds    eax,FWORD PTR [eax]
	...
  40ce45:	add    BYTE PTR [eax],al
  40ce47:	add    BYTE PTR [esi-0x49],dl
  40ce4a:	sub    bl,ch
  40ce4c:	pop    eax
  40ce4d:	mov    esi,0xbe7d1b39
  40ce52:	xor    eax,0xd961e9
  40ce57:	or     al,0x3c
  40ce59:	scas   al,BYTE PTR es:[edi]
  40ce5a:	pop    ds
  40ce5b:	loop   0x40cec8
  40ce5d:	mov    al,0x38
  40ce5f:	cli    
  40ce60:	jno    0x40ce18
  40ce62:	sub    dl,ch
  40ce64:	outs   dx,DWORD PTR ds:[esi]
  40ce65:	mov    dl,0x29
  40ce67:	jmp    0xff41a7cd
  40ce6c:	dec    eax
  40ce6d:	mov    ch,0x2a
  40ce6f:	jmp    0xe17279c8
  40ce74:	outs   dx,BYTE PTR ds:[esi]
  40ce75:	lods   eax,DWORD PTR ds:[esi]
  40ce76:	and    ecx,esp
  40ce78:	jge    0x40ce23
  40ce7a:	aaa    
  40ce7b:	lds    ebx,FWORD PTR [ebp-0x3b]
  40ce7e:	add    BYTE PTR [eax],al
  40ce80:	inc    esp
  40ce81:	or     ah,ch
  40ce83:	repz add BYTE PTR [ecx],0xe1
  40ce87:	imul   DWORD PTR ds:0x60eed722
  40ce8d:	and    al,0xfe
  40ce8f:	inc    DWORD PTR [ecx+0x173e28e6]
  40ce95:	shr    DWORD PTR [edx+edi*1],cl
  40ce98:	js     0x40ce68
  40ce9a:	sbb    dh,BYTE PTR [esi]
  40ce9c:	gs mov eax,0xdd61362e
  40cea2:	add    BYTE PTR [eax],al
  40cea4:	rol    DWORD PTR [esi-0x3a],0xde
  40cea8:	mov    bh,0x28
  40ceaa:	fcmovnb st,st(4)
	...
  40cec0:	mov    bl,0x1d
  40cec2:	leave  
  40cec3:	retf   
  40cec4:	mov    ebx,0xfffe32
  40cec9:	es jmp 0xf848e5ce
  40cecf:	in     eax,0x12
  40ced1:	or     al,0xe8
  40ced3:	out    0xed,eax
  40ced5:	adc    eax,0xd9cbeae3
  40ceda:	add    BYTE PTR [eax],al
  40cedc:	in     eax,dx
  40cedd:	loop   0x40cf0b
  40cedf:	cmp    cl,BYTE PTR [ebx+0x552122bf]
  40cee5:	iret   
  40cee6:	and    BYTE PTR [edi],ah
  40cee8:	imul   eax,DWORD PTR [edx],0xdd5c2134
  40ceee:	add    BYTE PTR [eax],al
  40cef0:	sub    DWORD PTR [edi],ecx
  40cef2:	fdivrp st(6),st
  40cef4:	aas    
  40cef5:	add    edx,ebp
  40cef7:	loope  0x40cf1e
  40cef9:	cld    
  40cefa:	jmp    0x40cedc
  40cefc:	sub    ecx,edi
  40cefe:	out    0xfc,al
  40cf00:	daa    
  40cf01:	xor    esi,eax
  40cf03:	icebp  
  40cf04:	push   esp
  40cf05:	fiadd  DWORD PTR [eax]
  40cf07:	add    BYTE PTR [esi+0x62c9df36],cl
  40cf0d:	fild   QWORD PTR [ecx+edx*8-0x3e553fd4]
  40cf14:	and    eax,0x27d2bdd6
  40cf19:	in     al,dx
  40cf1a:	ror    dh,0x15
  40cf1d:	add    eax,DWORD PTR [edx]
  40cf1f:	add    BYTE PTR [edx-0x4a],ah
  40cf22:	pushf  
  40cf23:	mov    ebp,0x0
	...
  40cf38:	cli    
  40cf39:	or     BYTE PTR [edx-0x729f224e],0xa2
  40cf40:	aam    0x56
  40cf42:	mov    al,ds:0x8a6cc6b1
  40cf47:	lods   eax,DWORD PTR ds:[esi]
  40cf48:	mov    ebp,0x62a98b60
  40cf4d:	mov    al,0x32
  40cf4f:	dec    edx
  40cf50:	push   ebp
  40cf51:	int    0x35
  40cf53:	push   ebp
  40cf54:	pushf  
  40cf55:	iret   
  40cf56:	das    
  40cf57:	push   ss
  40cf58:	mov    BYTE PTR [ebp-0x52dca2d0],dh
  40cf5e:	add    DWORD PTR [eax],eax
  40cf60:	bound  esp,QWORD PTR [ebp-0x47]
  40cf63:	lds    ebp,FWORD PTR [esi-0x4d7039c0]
  40cf69:	push   eax
  40cf6a:	rcr    al,0x9e
  40cf6d:	push   esp
  40cf6e:	ret    
  40cf6f:	xchg   edi,eax
  40cf70:	xchg   esi,eax
  40cf71:	dec    esp
  40cf72:	ret    
  40cf73:	(bad)  
  40cf74:	xchg   edx,eax
  40cf75:	dec    esp
  40cf76:	mov    ebx,0x202d5
  40cf7c:	bound  esp,QWORD PTR [edi]
  40cf7e:	popa   
  40cf7f:	jbe    0x40cf83
  40cf81:	sbb    BYTE PTR [eax+eiz*2+0x47],bl
  40cf85:	sbb    al,0x5c
  40cf87:	data16 hlt 
  40cf89:	pop    ss
  40cf8a:	addr16 sub al,0x0
  40cf8d:	adc    esp,DWORD PTR cs:[ebx-0x10]
  40cf91:	and    eax,0xee03644c
  40cf96:	add    DWORD PTR [eax],eax
  40cf98:	(bad)  
  40cf99:	fldcw  WORD PTR [ebx-0x5e]
	...
  40cfb0:	or     al,BYTE PTR [esi+0x4b]
  40cfb3:	mov    ds:0xdb4d2a41,eax
  40cfb8:	add    DWORD PTR [ebx],edi
  40cfba:	aas    
  40cfbb:	fwait
  40cfbc:	cmp    DWORD PTR [edx],edi
  40cfbe:	inc    ebp
  40cfbf:	xchg   esp,eax
  40cfc0:	repnz xor eax,0x2ff897f6
  40cfc6:	xor    al,0x92
  40cfc8:	in     al,dx
  40cfc9:	inc    esp
  40cfca:	cmp    al,0x8e
  40cfcc:	std    
  40cfcd:	sub    al,0x75
  40cfcf:	sub    BYTE PTR [edi],0xd9
  40cfd2:	inc    eax
  40cfd3:	dec    edi
  40cfd4:	mov    gs,WORD PTR [ecx+0x55]
  40cfd7:	dec    esi
  40cfd8:	dec    ebx
  40cfd9:	test   DWORD PTR [edi+0x16],ecx
  40cfdc:	xchg   edx,eax
  40cfdd:	test   DWORD PTR ds:0x517d8655,edi
  40cfe3:	push   ds
  40cfe4:	test   BYTE PTR [eax+0x4d],bh
  40cfe7:	addr16 jp 0x40d065
  40cfea:	dec    edx
  40cfeb:	es jle 0x40d057
  40cfee:	retf   0x4a5d
  40cff1:	add    DWORD PTR [ecx-0x12],0x6d
  40cff5:	mov    ds:0xd96203fc,al
  40cffa:	shl    dl,0x6e
  40cffd:	retf   0xfdde
  40d000:	push   ecx
  40d001:	nop
  40d002:	(bad)  
  40d003:	jmp    0xef199f60
  40d008:	push   edi
  40d009:	mov    ah,bl
  40d00b:	in     al,dx
  40d00c:	pop    ss
  40d00d:	fsubr  st,st(0)
  40d00f:	push   es
  40d010:	ins    DWORD PTR es:[edi],dx
  40d011:	mov    al,ds:0xf3a8
	...
  40d026:	add    BYTE PTR [eax],al
  40d028:	sbb    eax,0x5534bbd9
  40d02d:	fnstenv [edi]
  40d02f:	fidivr WORD PTR [eax-0x15]
  40d032:	ds loop 0x40cfe7
  40d035:	fadd   st,st(2)
  40d037:	dec    edx
  40d038:	stc    
  40d039:	jne    0x40d03b
  40d03b:	(bad)  
  40d03c:	pop    ss
  40d03d:	xchg   BYTE PTR [eax],al
  40d03f:	(bad)  
  40d040:	push   edi
  40d041:	lds    edi,FWORD PTR [edx]
  40d043:	in     al,0x74
  40d045:	shl    BYTE PTR [ecx],0xe2
  40d048:	jle    0x40d006
  40d04a:	or     DWORD PTR [ebx+eax*4-0x6972891d],ebx
  40d051:	stos   DWORD PTR es:[edi],eax
  40d052:	adc    BYTE PTR [esi+ebp*4+0x54933167],dl
  40d059:	stos   DWORD PTR es:[edi],eax
  40d05a:	and    cl,ch
  40d05c:	popa   
  40d05d:	fld    DWORD PTR [eax]
  40d05f:	cs cli 
  40d061:	aaa    
  40d062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d063:	mov    dh,ch
  40d065:	cmp    BYTE PTR [ecx],al
  40d067:	mov    ebx,0xb3de0acf
  40d06c:	xchg   ecx,eax
  40d06d:	or     ecx,ebp
  40d06f:	mov    bh,0xcd
  40d071:	repnz std 
  40d073:	es inc cx
  40d076:	lods   eax,DWORD PTR ds:[esi]
  40d077:	call   0x72e2:0xb78c582a
  40d07e:	std    
  40d07f:	pusha  
  40d080:	push   0xe97ed864
  40d085:	xor    eax,0x4e4eb4c5
  40d08a:	loopne 0x40d100
	...
  40d0a0:	push   ebx
  40d0a1:	add    al,0x9f
  40d0a3:	jb     0x40d0da
  40d0a5:	sbb    bl,BYTE PTR [ecx-0x1efbc38f]
  40d0ab:	dec    eax
  40d0ac:	mov    ebp,0x9e77e9ef
  40d0b1:	inc    ebx
  40d0b2:	lods   eax,DWORD PTR ds:[esi]
  40d0b3:	cmp    eax,0x5bab419b
  40d0b8:	stos   DWORD PTR es:[edi],eax
  40d0b9:	div    edi
  40d0bb:	cwde   
  40d0bc:	mov    edx,0x985d9954
  40d0c1:	xor    edi,edx
  40d0c3:	dec    eax
  40d0c4:	mov    cl,0xfa
  40d0c6:	out    dx,al
  40d0c7:	add    BYTE PTR [esi+0x1b],cl
  40d0ca:	rcl    BYTE PTR [ebp-0x727de2b8],0x12
  40d0d1:	pop    eax
  40d0d2:	iret   
  40d0d3:	mov    bh,BYTE PTR [ebx-0x2a]
  40d0d6:	add    BYTE PTR [eax],al
  40d0d8:	es pushf 
  40d0da:	push   ebp
  40d0db:	inc    ebx
  40d0dc:	dec    esp
  40d0dd:	call   0x595f:0x35250
  40d0e4:	add    ch,dl
  40d0e6:	sub    eax,0x53990e1c
  40d0eb:	xor    edx,edi
  40d0ed:	fild   DWORD PTR [ecx+0x45]
  40d0f0:	aam    0xde
  40d0f2:	cmp    DWORD PTR [eax],ecx
  40d0f4:	add    DWORD PTR [ecx+ecx*2+0xc7ac4d],ebp
  40d0fb:	add    BYTE PTR [esi+0x7d92846b],dl
  40d101:	adc    BYTE PTR [bx+0x0],0x0
	...
  40d117:	add    BYTE PTR [edx+0x7e],bh
  40d11a:	xchg   edi,eax
  40d11b:	lea    eax,[ecx-0x65757090]
  40d121:	jae    0x40d0a8
  40d123:	mov    BYTE PTR [esi+0x72b1b769],dl
  40d129:	dec    edi
  40d12a:	mov    al,ds:0xa5535192
  40d12f:	mov    esi,0xa69a6b3c
  40d134:	cmp    BYTE PTR [ebp+0x7525978d],al
  40d13a:	lea    ecx,[esi+ebp*1-0x7d0001d2]
  40d141:	nop
  40d142:	dec    ebx
  40d143:	pop    esi
  40d144:	mov    ebx,0xb80000d5
  40d149:	add    al,0x1a
  40d14b:	push   es
  40d14c:	jb     0x40d10a
  40d14e:	adc    dl,BYTE PTR ds:0xe0fef87
  40d154:	bound  eax,QWORD PTR [ecx*1+0x6ed721a]
  40d15b:	adc    DWORD PTR [edx-0x44],esp
  40d15e:	rol    edx,0x9b
  40d161:	test   eax,0xce98ccc9
  40d166:	mov    dh,0xcc
  40d168:	xchg   ebx,eax
  40d169:	(bad)  
  40d16a:	loope  0x40d130
  40d16c:	sub    eax,0xe5cda7ad
  40d171:	add    al,BYTE PTR [edx]
  40d173:	add    BYTE PTR [edx-0x56],ah
  40d176:	mov    esp,0xa7cf17c4
  40d17b:	lods   al,BYTE PTR ds:[esi]
	...
  40d190:	add    al,0xa4
  40d192:	(bad)
  40d195:	lods   eax,DWORD PTR ds:[esi]
  40d196:	mov    ds:0xd0d838c3,eax
  40d19b:	into   
  40d19c:	xor    ebp,esi
  40d19e:	aad    0xed
  40d1a0:	cs and cl,al
  40d1a3:	hlt    
  40d1a4:	inc    DWORD PTR [esi]
  40d1a6:	out    0xff,eax
  40d1a8:	or     eax,0xc5b6885d
  40d1ad:	pusha  
  40d1ae:	popf   
  40d1af:	ficom  WORD PTR [esi]
  40d1b1:	push   edx
  40d1b2:	xchg   ebx,eax
  40d1b3:	mov    al,ds:0xb0b15ab7
  40d1b8:	int    0x8b
  40d1ba:	ja     0x40d157
  40d1bc:	fld    DWORD PTR [ecx+0x68febe84]
  40d1c2:	adc    BYTE PTR [ebp+0x471e3],0x62
  40d1c9:	stc    
  40d1ca:	out    0x13,eax
  40d1cc:	data16 std 
  40d1ce:	(bad)  
  40d1cf:	jnp    0x40d206
  40d1d1:	hlt    
  40d1d2:	lock add DWORD PTR [ebx+edi*8+0x52],edx
  40d1d7:	adc    eax,0x1b242869
  40d1dc:	imul   esp,DWORD PTR [edi],0xa
  40d1df:	sub    eax,0xf70ed95d
  40d1e4:	push   ebx
  40d1e5:	mov    edi,0xaa451609
  40d1ea:	out    0x3,eax
  40d1ec:	(bad)  
  40d1ed:	(bad)  
  40d1ef:	add    esp,DWORD PTR [edx-0x27]
  40d1f2:	stos   DWORD PTR es:[edi],eax
  40d1f3:	sub    eax,0x0
	...
  40d208:	pop    ds
  40d209:	pushf  
  40d20a:	test   DWORD PTR [ecx],0x5cbc7a07
  40d210:	jmp    0xac7969c4
  40d215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d216:	ror    BYTE PTR [edi],cl
  40d218:	mov    ah,BYTE PTR [edi+0x7d9bfeec]
  40d21e:	xchg   esi,eax
  40d21f:	dec    esp
  40d220:	mov    es,eax
  40d222:	jnp    0x40d27b
  40d224:	into   
  40d225:	sub    DWORD PTR [eax-0x3e4c5fd4],0x53
  40d22c:	xchg   ebx,eax
  40d22d:	mov    DWORD PTR [eax+0x6ccb9838],edx
  40d233:	xor    bh,BYTE PTR [ebx-0x55c7d87b]
  40d239:	cdq    
  40d23a:	add    DWORD PTR [eax],ebx
  40d23c:	cmp    bh,BYTE PTR [ecx+0x2a]
  40d23f:	inc    edi
  40d240:	mov    ds:0xa12922a3,al
  40d245:	xchg   ebp,eax
  40d246:	add    DWORD PTR [ebx+0x6c],ebx
  40d249:	imul   ecx,DWORD PTR [edx],0x28
  40d24c:	mov    cl,cl
  40d24e:	cli    
  40d24f:	push   ss
  40d250:	cmp    BYTE PTR [ebx-0x37aae70b],dh
  40d256:	enter  0x831e,0xac
  40d25a:	iret   
  40d25b:	dec    esi
  40d25c:	inc    eax
  40d25d:	ja     0x40d22f
  40d25f:	inc    ebx
  40d260:	push   ds
  40d261:	enter  0x404,0x6c
  40d265:	push   0x1b
  40d267:	xor    al,0x61
  40d269:	jae    0x40d26c
  40d26b:	dec    eax
	...
  40d280:	sub    bl,cl
  40d282:	add    BYTE PTR [ebp-0x6839ee09],bl
  40d288:	popa   
  40d289:	fld    DWORD PTR [eax]
  40d28b:	and    esi,DWORD PTR [ebx-0x59]
  40d28e:	and    ah,cl
  40d290:	jb     0x40d246
  40d292:	cmp    eax,0xd95b06
  40d297:	gs out 0x17,al
  40d29a:	ret    
  40d29b:	xor    BYTE PTR [edi+esi*1+0x17b87182],ch
  40d2a2:	xlat   BYTE PTR ds:[ebx]
  40d2a3:	adc    edi,DWORD PTR [ecx+eiz*2+0x17181f8e]
  40d2aa:	les    esp,FWORD PTR [ebx-0x32]
  40d2ad:	inc    esp
  40d2ae:	fadd   QWORD PTR [eax-0x3]
  40d2b1:	sub    bl,BYTE PTR [esi-0x3cecfb8b]
  40d2b7:	pop    edi
  40d2b8:	add    bh,BYTE PTR [ecx]
  40d2ba:	cld    
  40d2bb:	add    ebp,DWORD PTR [eax]
  40d2bd:	push   edi
  40d2be:	mov    ds:0xeff31451,al
  40d2c3:	imul   eax,esi,0x3c
  40d2c6:	in     eax,0xfa
  40d2c8:	aaa    
  40d2c9:	push   ebx
  40d2ca:	mov    dh,0x9d
  40d2cc:	aaa    
  40d2cd:	repz std 
  40d2cf:	ja     0x40d337
  40d2d1:	fld    DWORD PTR [eax]
  40d2d3:	inc    edx
  40d2d4:	push   eax
  40d2d5:	lea    ecx,[ebp+0x22]
  40d2d8:	dec    edx
  40d2d9:	popf   
  40d2da:	pop    edx
  40d2db:	push   ebp
  40d2dc:	stos   BYTE PTR es:[edi],al
  40d2dd:	xchg   edx,eax
  40d2de:	push   eax
  40d2df:	daa    
  40d2e0:	cmp    al,0x94
  40d2e2:	pop    eax
  40d2e3:	daa    
	...
  40d2f8:	cmp    eax,0x27247c67
  40d2fd:	mov    ds:0x6f8c3e40,eax
  40d302:	pusha  
  40d303:	cmp    BYTE PTR [ebx+0x2d1f4285],dl
  40d309:	jge    0x40d389
  40d30b:	call   FWORD PTR [ebx]
  40d30d:	data16 jo 0x40d310
  40d310:	pop    ebp
  40d311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d312:	inc    eax
  40d313:	popaw  
  40d315:	aad    0x0
  40d317:	add    BYTE PTR [esi+esi*4+0x44],bh
  40d31b:	push   es
  40d31c:	inc    ecx
  40d31d:	stos   DWORD PTR es:[edi],eax
  40d31e:	dec    eax
  40d31f:	add    bh,al
  40d321:	stos   BYTE PTR es:[edi],al
  40d322:	aas    
  40d323:	pop    eax
  40d324:	iret   
  40d325:	mov    esp,0xb6854343
  40d32a:	inc    edx
  40d32b:	pop    esi
  40d32c:	mov    ebx,edx
  40d32e:	add    BYTE PTR [eax],al
  40d330:	add    al,0x64
  40d332:	jg     0x40d2cf
  40d334:	or     DWORD PTR [ebp-0x71],edi
  40d337:	fimul  DWORD PTR ds:0x4a009a57
  40d33d:	out    dx,al
  40d33e:	push   ss
  40d33f:	sbb    eax,DWORD PTR [ebp-0x1]
  40d342:	or     BYTE PTR [edi+0x60],bl
  40d345:	fcom   DWORD PTR [edi]
  40d347:	add    BYTE PTR [ebp-0xb],ah
  40d34a:	lock sti 
  40d34c:	ins    DWORD PTR es:[edi],dx
  40d34d:	and    edi,DWORD PTR [ebp-0x1dd9909]
  40d353:	push   DWORD PTR [eax]
  40d355:	test   BYTE PTR [edx],0x19
  40d358:	or     bh,bh
  40d35a:	push   cs
  40d35b:	push   eax
	...
  40d370:	aaa    
  40d371:	repnz adc eax,DWORD PTR [eax]
  40d374:	sub    BYTE PTR [ecx],ah
  40d376:	bnd jmp 0xf425de9a
  40d37c:	fisttp DWORD PTR [ebx]
  40d37e:	bnd call 0x41ad8f
  40d384:	xor    ch,BYTE PTR [ecx-0x3ccdb2a2]
  40d38a:	dec    esi
  40d38b:	pop    eax
  40d38c:	cmp    eax,0x277277c3
  40d391:	popf   
  40d392:	gs jp  0x40d404
  40d395:	mov    al,ds:0x7a645e54
  40d39a:	push   0x54cd6262
  40d39f:	and    BYTE PTR ds:0x32472bb2,ch
  40d3a5:	test   al,0x39
  40d3a7:	pop    ebp
  40d3a8:	adc    eax,0x155959aa
  40d3ad:	shr    DWORD PTR [esi],0x5f
  40d3b0:	cmp    eax,0x62000200
  40d3b5:	mov    dl,0xcd
  40d3b7:	jmp    0xf114613a
  40d3bc:	stos   BYTE PTR es:[edi],al
  40d3bd:	xchg   ecx,eax
  40d3be:	fcomip st,st(3)
  40d3c0:	(bad)  
  40d3c1:	cmc    
  40d3c2:	sbb    ah,BYTE PTR [ecx+ecx*2]
  40d3c5:	icebp  
  40d3c6:	push   ds
  40d3c7:	sub    edx,DWORD PTR [ebx+ebx*8+0x1f]
  40d3cb:	das    
  40d3cc:	and    eax,0x88060cd6
  40d3d1:	add    al,BYTE PTR [edx]
	...
  40d3e7:	add    BYTE PTR [edx-0x26],ah
  40d3ea:	aaa    
  40d3eb:	pusha  
  40d3ec:	imul   ebp,ecx,0xfd656301
  40d3f2:	cmc    
  40d3f3:	outs   dx,BYTE PTR ds:[esi]
  40d3f4:	bound  esi,QWORD PTR [eax]
  40d3f6:	cs inc edx
  40d3f8:	mov    WORD PTR [esi],?
  40d3fa:	pop    eax
  40d3fb:	push   edi
  40d3fc:	mov    ds:0x624c343c,eax
  40d401:	adc    al,0xe
  40d403:	xor    dl,BYTE PTR [edx+esi*1+0x1b]
  40d407:	xor    esp,DWORD PTR [edx-0x4e]
  40d40a:	push   edi
  40d40b:	addr16 xchg esi,eax
  40d40d:	xchg   edx,eax
  40d40e:	pop    ebp
  40d40f:	ja     0x40d394
  40d411:	stos   DWORD PTR es:[edi],eax
  40d412:	cmp    eax,0x639d8960
  40d417:	jle    0x40d39a
  40d419:	lods   eax,DWORD PTR ds:[esi]
  40d41a:	pop    esi
  40d41b:	add    BYTE PTR [edx-0x26],ah
  40d41e:	dec    DWORD PTR [esi]
  40d420:	inc    esi
  40d421:	or     dh,bh
  40d423:	push   ds
  40d424:	imul   edi,ebx,0x22
  40d427:	adc    DWORD PTR [edx-0x27],esi
  40d42a:	retf   0x72fe
  40d42d:	(bad)  
  40d42e:	(bad)  
  40d42f:	lock push edi
  40d431:	mov    ch,0xc3
  40d433:	hlt    
  40d434:	pop    eax
  40d435:	loope  0x40d41a
  40d437:	repnz pusha 
  40d439:	(bad)  
  40d43a:	ror    BYTE PTR [edx],cl
  40d43c:	dec    esi
  40d43d:	(bad)  
  40d43e:	shl    BYTE PTR [eax],0x68
  40d441:	mov    ah,0xc0
  40d443:	or     DWORD PTR [edx-0x27],esp
  40d446:	fcomi  st,st(5)
  40d448:	imul   edx,edx,0xfffffff6
  40d44b:	out    dx,al
	...
  40d460:	pop    ds
  40d461:	fwait
  40d462:	mov    esp,0xe7cd66ed
  40d467:	add    esp,DWORD PTR [edx-0x27]
  40d46a:	and    eax,0x4304b5c0
  40d46f:	in     eax,0x6b
  40d471:	call   0xecb5a1c8
  40d476:	and    eax,0x3ffe49cd
  40d47b:	xlat   BYTE PTR ds:[ebx]
  40d47c:	inc    esi
  40d47d:	jmp    0x8267:0xd9620439
  40d484:	fild   WORD PTR [esi+0x49]
  40d487:	(bad)  
  40d488:	icebp  
  40d489:	dec    ebp
  40d48a:	push   edx
  40d48b:	xchg   ebx,eax
  40d48c:	repz cmp cl,BYTE PTR [edx+0x4]
  40d490:	(bad)  
  40d491:	fst    DWORD PTR [eax-0x65]
  40d494:	hlt    
  40d495:	cmp    al,0x67
  40d497:	data16 jmp 0x40d4f2
  40d49a:	dec    ebx
  40d49b:	xor    dl,0x53
  40d49e:	mov    fs,WORD PTR [edi-0x18]
  40d4a1:	inc    esp
  40d4a2:	push   0xe6d96203
  40d4a7:	sti    
  40d4a8:	pop    esi
  40d4a9:	loopne 0x40d49d
  40d4ab:	hlt    
  40d4ac:	imul   ecx,DWORD PTR [eax-0x26b61923],0x36
  40d4b3:	xor    BYTE PTR [esp+eiz*2-0x7b6ee800],bl
  40d4ba:	inc    edx
  40d4bb:	adc    eax,0x40487c9b
  40d4c0:	xchg   ebp,eax
  40d4c1:	jnp    0x40d50e
  40d4c3:	add    BYTE PTR cs:[eax],al
	...
  40d4d6:	add    BYTE PTR [eax],al
  40d4d8:	test   DWORD PTR [eax-0x63b8d7b3],esp
  40d4de:	push   ebx
  40d4df:	sbb    al,0x78
  40d4e1:	mov    eax,DWORD PTR [edi+eiz*1+0x72]
  40d4e5:	jb     0x40d4e7
  40d4e7:	or     BYTE PTR [eax],bl
  40d4e9:	and    BYTE PTR [eax+0xe],0x42
  40d4ed:	jle    0x40d553
  40d4ef:	add    bl,BYTE PTR [esi-0x27]
  40d4f2:	add    ch,ch
  40d4f4:	test   ecx,ebx
  40d4f6:	add    bl,bl
  40d4f8:	cmp    eax,0x4ddd528f
  40d4fd:	call   0x9849:0x9b459f50
  40d504:	aas    
  40d505:	test   DWORD PTR [eax],eax
  40d507:	call   0x7661:0x9d007661
  40d50e:	add    bl,cl
  40d510:	popa   
  40d511:	mov    DWORD PTR [eax],eax
  40d513:	fwait
  40d514:	popa   
  40d515:	add    BYTE PTR [eax],0x97
  40d518:	popa   
  40d519:	add    BYTE PTR [eax],0x85
  40d51c:	popa   
  40d51d:	je     0x40d51f
  40d51f:	xchg   BYTE PTR [ecx+0x74],ah
  40d522:	add    cl,ch
  40d524:	popa   
  40d525:	fld    DWORD PTR [eax]
  40d527:	iret   
  40d528:	popa   
  40d529:	je     0x40d52b
  40d52b:	jno    0x40d58e
  40d52d:	je     0x40d52f
  40d52f:	jmp    0x1441ae95
  40d534:	neg    BYTE PTR [ecx-0x695a4d00]
  40d53a:	add    ah,cl
	...
  40d550:	popf   
  40d551:	xchg   esi,eax
  40d552:	add    BYTE PTR [ebp+0x9697],al
  40d558:	test   eax,0x56004179
  40d55d:	mov    al,BYTE PTR [ecx+0x0]
  40d560:	ret    0x3fe8
  40d563:	add    BYTE PTR [esi],ah
  40d565:	mov    al,BYTE PTR [ecx+0x0]
  40d568:	inc    edi
  40d569:	mov    al,BYTE PTR [ecx+0x0]
  40d56c:	pop    edi
  40d56d:	aad    0x67
  40d56f:	add    BYTE PTR [eax-0x2b],bl
  40d572:	jo     0x40d574
  40d574:	mov    bh,0xd6
  40d576:	pop    edi
  40d577:	add    BYTE PTR [edx-0x2b],ah
  40d57a:	dec    esi
  40d57b:	add    BYTE PTR [edx-0x2b],bl
  40d57e:	imul   eax,DWORD PTR [eax],0x6e
  40d581:	aad    0x0
  40d583:	add    al,bh
  40d585:	aad    0xd4
  40d587:	add    BYTE PTR [esi-0x2b],cl
  40d58a:	add    BYTE PTR [eax],al
  40d58c:	jnp    0x40d564
  40d58e:	add    BYTE PTR [eax],al
  40d590:	ret    
  40d591:	(bad)  
  40d592:	add    BYTE PTR [eax],al
  40d594:	mov    edx,esi
  40d596:	add    BYTE PTR [eax],al
  40d598:	jnp    0x40d570
  40d59a:	add    BYTE PTR [eax],al
  40d59c:	jnp    0x40d574
  40d59e:	add    BYTE PTR [eax],al
  40d5a0:	dec    ebx
  40d5a1:	(bad)  
  40d5a2:	add    BYTE PTR [eax],al
  40d5a4:	dec    ebx
  40d5a5:	(bad)  
  40d5a6:	add    BYTE PTR [eax],al
  40d5a8:	cmp    edx,esi
  40d5aa:	add    BYTE PTR [eax],al
  40d5ac:	cmp    edx,esi
  40d5ae:	add    BYTE PTR [eax],al
  40d5b0:	dec    ebx
  40d5b1:	(bad)  
	...
  40d5c6:	add    BYTE PTR [eax],al
  40d5c8:	dec    ebx
  40d5c9:	(bad)  
  40d5ca:	add    BYTE PTR [eax],al
  40d5cc:	cmp    edx,esi
  40d5ce:	add    BYTE PTR [eax],al
  40d5d0:	cmp    edx,esi
  40d5d2:	add    BYTE PTR [eax],al
  40d5d4:	or     edx,esi
  40d5d6:	add    BYTE PTR [eax],al
  40d5d8:	or     edx,esi
  40d5da:	add    BYTE PTR [eax],al
  40d5dc:	sti    
  40d5dd:	aad    0x0
  40d5df:	add    BYTE PTR [edi],bh
  40d5e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5e2:	inc    esp
  40d5e3:	add    BYTE PTR [edx+0x0],ah
  40d5e6:	add    al,BYTE PTR [eax]
  40d5e8:	bound  eax,QWORD PTR [eax]
  40d5ea:	add    al,BYTE PTR [eax]
  40d5ec:	bound  eax,QWORD PTR [eax]
  40d5ee:	add    al,BYTE PTR [eax]
  40d5f0:	bound  eax,QWORD PTR [eax]
  40d5f2:	add    al,BYTE PTR [eax]
  40d5f4:	bound  edi,QWORD PTR [edi-0x2b]
  40d5f7:	or     esi,DWORD PTR [ecx]
  40d5f9:	lds    ebp,FWORD PTR [esi]
  40d5fb:	push   edi
  40d5fc:	(bad)  [ebx-0x2145efe0]
  40d602:	das    
  40d603:	add    ah,BYTE PTR [edx+0x43]
  40d606:	dec    esi
  40d607:	and    al,0x7e
  40d609:	jg     0x40d640
  40d60b:	and    al,0x4a
  40d60d:	push   ebx
  40d60e:	lds    esi,FWORD PTR [ebx+0x7e]
  40d611:	adc    al,0x11
  40d613:	fisttp DWORD PTR [eax]
  40d615:	(bad)  
  40d616:	jbe    0x40d66b
  40d618:	ds adc al,0x2b
  40d61b:	mov    ecx,DWORD PTR [edx+0x798ad066]
  40d621:	xchg   DWORD PTR [esp],ecx
  40d624:	pusha  
  40d625:	add    ch,al
  40d627:	jae    0x40d667
  40d629:	lock les edx,FWORD PTR [eax+eax*1]
	...
  40d63d:	add    BYTE PTR [eax],al
  40d63f:	add    BYTE PTR [edx-0x26ffbdf3],al
  40d645:	inc    ebx
  40d646:	push   ds
  40d647:	adc    bl,ch
  40d649:	dec    esi
  40d64a:	push   ds
  40d64b:	and    al,0xe9
  40d64d:	xor    al,0x22
  40d64f:	mov    DWORD PTR [esi+0x22852216],esp
  40d655:	ins    BYTE PTR es:[edi],dx
  40d656:	cmp    eax,0x5465a24
  40d65b:	mov    ebp,DWORD PTR [eax-0x49fef50a]
  40d661:	sub    DWORD PTR [edi-0xb],edi
  40d664:	scas   eax,DWORD PTR es:[edi]
  40d665:	sti    
  40d666:	or     bh,BYTE PTR [ecx+0x6a]
  40d669:	arpl   bp,di
  40d66b:	mov    dl,BYTE PTR [ebx]
  40d66d:	fsub   st(7),st
  40d66f:	mov    dh,BYTE PTR [esi+0x4b180bd9]
  40d675:	mov    ah,bl
  40d677:	imul   edx,DWORD PTR ss:[ecx+edi*1+0x8],0xffffffe9
  40d67d:	repnz pusha 
  40d67f:	pop    eax
  40d680:	inc    esi
  40d681:	int    0x72
  40d683:	pop    eax
  40d684:	ds mov ecx,0xbd8648be
  40d68a:	push   0xffffffc5
  40d68c:	imul   esp,DWORD PTR [edx+0x5481e813],0x6b55e83c
  40d696:	scas   eax,DWORD PTR es:[edi]
  40d697:	mov    DWORD PTR [edi+0x3b852e6e],esi
  40d69d:	mov    ecx,0xd962077f
  40d6a2:	stc    
  40d6a3:	push   ds
	...
  40d6b8:	fcomip st,st(6)
  40d6ba:	repz push ebx
  40d6bc:	jmp    0x5b3b59af
  40d6c1:	(bad)  
  40d6c2:	fbstp  TBYTE PTR [esi]
  40d6c4:	and    eax,0x616a6f56
  40d6c9:	(bad)  
  40d6cb:	mov    edx,?
  40d6cd:	fsub   QWORD PTR [eax+0x45]
  40d6d0:	push   0xfffffff4
  40d6d2:	sbb    BYTE PTR [ecx-0x71653f05],dl
  40d6d8:	push   ds
  40d6d9:	fnstenv [edx-0x2f]
  40d6dc:	pop    esp
  40d6dd:	mov    ebx,esp
  40d6df:	mov    es,WORD PTR [ebp+0x5c]
  40d6e2:	cs ret 
  40d6e4:	sar    DWORD PTR [ebx-0x23a6466e],1
  40d6ea:	xchg   esp,eax
  40d6eb:	pop    es
  40d6ec:	mov    dh,0xc3
  40d6ee:	bound  ecx,QWORD PTR [eax+0x7e]
  40d6f1:	shl    DWORD PTR [edx+0x58],0x86
  40d6f5:	leave  
  40d6f6:	jo     0x40d702
  40d6f8:	xlat   BYTE PTR ds:[ebx]
  40d6f9:	pop    edi
  40d6fa:	inc    esi
  40d6fb:	or     BYTE PTR [edx-0x27],ah
  40d6fe:	add    BYTE PTR [eax-0x60],ah
  40d701:	fld    QWORD PTR [edi+0x2c59a7]
  40d707:	rcr    BYTE PTR [ebp+0x54],cl
  40d70a:	push   ebp
  40d70b:	add    eax,0xfcfd8b56
  40d710:	adc    eax,0x80e940ca
  40d715:	xchg   DWORD PTR [ebx+0x73],ebx
  40d718:	sbb    al,0x83
  40d71a:	and    DWORD PTR [ebp+0x0],0x0
	...
  40d730:	ins    DWORD PTR es:[edi],dx
  40d731:	sbb    ecx,DWORD PTR ds:0x558f2ce9
  40d737:	bound  edx,QWORD PTR [esi]
  40d739:	mov    ?,ebp
  40d73b:	cld    
  40d73c:	add    edx,ecx
  40d73e:	inc    eax
  40d73f:	jmp    0x92cad9f8
  40d744:	mov    ecx,0xb5172485
  40d749:	(bad)  
  40d74a:	mov    dh,0x2f
  40d74c:	mov    ebx,0x8a2fb6d6
  40d751:	fcmovb st,st(5)
  40d753:	mov    edx,0x3efeeaf
  40d758:	push   0xffffffe8
  40d75a:	je     0x40d769
  40d75c:	push   0x56
  40d75e:	inc    edi
  40d75f:	pop    es
  40d760:	dec    ebp
  40d761:	or     edx,DWORD PTR ds:0xfd979fea
  40d767:	hlt    
  40d768:	adc    eax,0xdce940cf
  40d76d:	sbb    ecx,DWORD PTR ds:0x476b2164
  40d773:	out    0xdb,al
  40d775:	pushf  
  40d776:	and    al,0xa6
  40d778:	dec    esp
  40d779:	out    dx,eax
  40d77a:	jb     0x40d7b0
  40d77c:	xlat   BYTE PTR ds:[ebx]
  40d77d:	xchg   esp,eax
  40d77e:	and    al,0x69
  40d780:	(bad)  
  40d781:	test   al,0x71
  40d783:	jecxz  0x40d7d5
  40d785:	das    
  40d786:	clc    
  40d787:	(bad)  
  40d789:	pop    edi
  40d78a:	dec    edi
  40d78b:	add    BYTE PTR [edi],dl
  40d78d:	cmp    BYTE PTR [edx],dl
  40d78f:	mov    al,ch
  40d791:	icebp  
  40d792:	push   cs
  40d793:	mov    dh,0x0
	...
  40d7a5:	add    BYTE PTR [eax],al
  40d7a7:	add    BYTE PTR [ebx],dl
  40d7a9:	sbb    bh,BYTE PTR [esi+0xf1a550f]
  40d7af:	mov    dh,0xd2
  40d7b1:	inc    edx
  40d7b2:	idiv   ecx
  40d7b4:	jae    0x40d739
  40d7b6:	and    ebp,DWORD PTR [ebx+0xc]
  40d7b9:	ret    0x146a
  40d7bc:	sbb    al,0xa2
  40d7be:	and    al,0x14
  40d7c0:	outs   dx,BYTE PTR ds:[esi]
  40d7c1:	xchg   ebx,eax
  40d7c2:	add    eax,DWORD PTR es:[esi+ecx*4]
  40d7c6:	std    
  40d7c7:	adc    eax,0x40c37b
  40d7cc:	cmp    BYTE PTR [ecx],dl
  40d7ce:	or     dh,BYTE PTR [ebx+0x15fd80ba]
  40d7d4:	dec    edi
  40d7d6:	inc    eax
  40d7d7:	add    BYTE PTR [ebx+edi*2-0x76],ch
  40d7db:	ret    
  40d7dc:	jo     0x40d7fd
  40d7de:	add    al,BYTE PTR [eax]
  40d7e0:	inc    ebp
  40d7e1:	push   esp
  40d7e2:	icebp  
  40d7e3:	push   edi
  40d7e4:	adc    BYTE PTR [ebx+0xf604208],al
  40d7ea:	or     cl,BYTE PTR [ebp-0x55172e93]
  40d7f0:	adc    dl,bl
  40d7f2:	add    BYTE PTR [ebx+ecx*2+0x438303ae],al
  40d7f9:	sbb    bl,ch
  40d7fb:	sub    eax,edi
  40d7fd:	cwde   
  40d7fe:	and    al,0xc
  40d800:	jnp    0x40d7b0
  40d802:	pop    ss
  40d803:	mov    eax,DWORD PTR ds:0x3fc069d2
  40d809:	fld    QWORD PTR [esi+0x4]
	...
  40d820:	and    esi,edx
  40d822:	std    
  40d823:	je     0x40d83c
  40d825:	retf   0xff50
  40d828:	mov    dl,BYTE PTR ss:[esi]
  40d82b:	inc    eax
  40d82c:	(bad)  
  40d82d:	lock test bl,al
  40d830:	pop    esi
  40d831:	jnp    0x40d87d
  40d833:	or     bh,dl
  40d835:	daa    
  40d836:	add    ecx,DWORD PTR [ecx+0x5e60e8ac]
  40d83c:	and    ah,dh
  40d83e:	add    DWORD PTR [esi-0x27],edx
  40d841:	loopne 0x40d7cf
  40d843:	dec    ebp
  40d844:	pop    esi
  40d845:	or     bl,bl
  40d847:	mov    ah,BYTE PTR [ebx-0x10]
  40d84a:	test   BYTE PTR [ebp+0x5e],ah
  40d84d:	lock test BYTE PTR [ebp+0x5a],ah
  40d851:	lock pop edi
  40d853:	ret    
  40d854:	mov    WORD PTR [ebx-0x4e],gs
  40d857:	mov    ch,BYTE PTR [esi]
  40d859:	fmul   QWORD PTR [ebx+ecx*4]
  40d85c:	sbb    al,0xf8
  40d85e:	sub    al,0xc9
  40d860:	pop    esi
  40d861:	fwait
  40d862:	les    ecx,FWORD PTR [ebx]
  40d864:	sub    eax,0x61043f6d
  40d869:	test   DWORD PTR [edi+eax*1],0xb33ff79
  40d870:	adc    al,BYTE PTR [ebp+0x31ba0c52]
  40d876:	mov    es,WORD PTR [eax]
  40d878:	bound  ecx,QWORD PTR [ebx+0x4]
  40d87b:	xor    ah,BYTE PTR [edx+0x7273c173]
  40d881:	ja     0x40d8d2
  40d883:	or     BYTE PTR [eax],al
	...
  40d895:	add    BYTE PTR [eax],al
  40d897:	add    cl,bl
  40d899:	and    eax,0xf3906b0a
  40d89e:	mov    esi,cs
  40d8a0:	mov    dl,al
  40d8a2:	mov    eax,DWORD PTR [eax]
  40d8a4:	bound  esi,QWORD PTR [edi]
  40d8a6:	pusha  
  40d8a7:	ret    0xf05e
  40d8aa:	mov    WORD PTR [ebx-0x7a],ss
  40d8ad:	(bad)  
  40d8ae:	cld    
  40d8af:	push   eax
  40d8b0:	push   0x1f
  40d8b2:	adc    BYTE PTR [ecx-0x2dd3054d],cl
  40d8b8:	push   esi
  40d8b9:	fldcw  WORD PTR [edx-0x3e]
  40d8bc:	popa   
  40d8bd:	icebp  
  40d8be:	in     al,0x8c
  40d8c0:	(bad)  
  40d8c1:	fldcw  WORD PTR [ecx]
  40d8c3:	pop    es
  40d8c4:	bound  ecx,QWORD PTR [esi-0xa1f509e]
  40d8ca:	mov    ds:0xc0eb5159,eax
  40d8cf:	ss jb  0x40d928
  40d8d2:	lods   eax,DWORD PTR ds:[esi]
  40d8d3:	jg     0x40d8af
  40d8d5:	sahf   
  40d8d6:	aaa    
  40d8d7:	mov    ds,WORD PTR [esi-0x58b708df]
  40d8dd:	leave  
  40d8de:	fs int 0xe6
  40d8e1:	mov    fs,WORD PTR [edi+0x630aa70f]
  40d8e7:	push   ecx
  40d8e8:	pop    edx
  40d8e9:	push   edx
  40d8ea:	cmp    eax,0x8f6eea68
  40d8ef:	lea    ecx,[esi+0x35]
  40d8f2:	popa   
  40d8f3:	dec    ecx
  40d8f4:	push   ss
  40d8f5:	push   ebx
  40d8f6:	xor    eax,0x6ca9da80
  40d8fb:	int    0x0
	...
  40d90d:	add    BYTE PTR [eax],al
  40d90f:	add    BYTE PTR [esi],dh
  40d911:	iret   
  40d912:	adc    DWORD PTR [ecx],edx
  40d914:	mov    ch,0xce
  40d916:	retf   
  40d917:	adc    DWORD PTR [edx],esp
  40d919:	fld    DWORD PTR [edx-0x16d4aae7]
  40d91f:	push   esp
  40d920:	out    dx,eax
  40d921:	frstor [esp+eax*8+0x51e7992c]
  40d928:	xor    dl,BYTE PTR [esi+0x1d]
  40d92b:	push   0x8aeb8984
  40d930:	lea    edx,[eax+0x26]
  40d933:	pop    esi
  40d934:	stos   DWORD PTR es:[edi],eax
  40d935:	pop    ss
  40d936:	in     al,0x3
  40d938:	adc    ecx,DWORD PTR [edx-0x2ac1a79e]
  40d93e:	call   0xe956:0x958e738a
  40d945:	add    DWORD PTR [ecx],eax
  40d947:	bound  edx,QWORD PTR [eax]
  40d949:	jmp    0x40d90d
  40d94b:	jmp    0x9d61b2b1
  40d950:	push   0x61e57a58
  40d955:	ins    DWORD PTR es:[edi],dx
  40d956:	or     ch,BYTE PTR [eax]
  40d958:	cld    
  40d959:	iret   
  40d95a:	jmp    0xdfba40
  40d95f:	adc    bl,dl
  40d961:	sbb    bh,ch
  40d963:	icebp  
  40d964:	call   0x5d505b7a
  40d969:	sbb    ah,al
  40d96b:	loope  0x40d98b
  40d96d:	loope  0x40d98b
  40d96f:	jb     0x40d940
  40d971:	sbb    bl,ch
  40d973:	stc    
	...
  40d988:	or     cl,dh
  40d98a:	mov    edi,edx
  40d98c:	fimul  WORD PTR [edi-0x61f0adc]
  40d992:	or     eax,0x45502e3f
  40d997:	add    eax,0xeb0551ca
  40d99c:	fst    DWORD PTR [edi+0x2b54da24]
  40d9a2:	shl    DWORD PTR [ebx-0x1f],0x23
  40d9a6:	push   edi
  40d9a7:	sub    DWORD PTR [esi-0x2c],ebx
  40d9aa:	mov    dh,0x91
  40d9ac:	loopne 0x40d9a8
  40d9ae:	or     eax,0x113be7ea
  40d9b3:	std    
  40d9b4:	mov    DWORD PTR [esi+0x45],ecx
  40d9b7:	lds    edi,FWORD PTR [ebp+0x51]
  40d9ba:	inc    ebp
  40d9bb:	jmp    0x40da23
  40d9bd:	mov    ebp,0x6e5aad05
  40d9c2:	push   ss
  40d9c3:	jae    0x40d9ea
  40d9c5:	mov    ebp,0x679e0511
  40d9ca:	or     DWORD PTR ds:0xa6016e26,edx
  40d9d0:	mov    eax,0xcb003cda
  40d9d5:	mov    eax,ds:0xda7c8301
  40d9da:	mov    edi,ebp
  40d9dc:	pusha  
  40d9dd:	xor    al,0x57
  40d9df:	dec    DWORD PTR [edi]
  40d9e1:	sti    
  40d9e2:	and    eax,0x25fadfff
  40d9e7:	jmp    FWORD PTR [esi]
  40d9e9:	xchg   DWORD PTR [esi],edx
  40d9eb:	inc    eax
	...
  40da00:	cmp    edx,DWORD PTR [eax+0x42]
  40da03:	and    al,0x1b
  40da05:	pop    eax
  40da06:	ret    0x8e0c
  40da09:	push   ss
  40da0a:	jb     0x40da26
  40da0c:	out    dx,al
  40da0d:	dec    edi
  40da0e:	push   0x24
  40da10:	and    eax,DWORD PTR [edi-0x540baaaa]
  40da16:	and    al,0x30
  40da18:	jo     0x40da2a
  40da1a:	out    0xca,al
  40da1c:	or     edx,edi
  40da1e:	add    BYTE PTR [ebx+0x187c940],cl
  40da24:	and    dl,dl
  40da26:	mov    DWORD PTR [edi+ebp*2-0xf],ebp
  40da2a:	mov    cl,BYTE PTR [edi+ebx*2-0x47]
  40da2e:	cmc    
  40da2f:	add    DWORD PTR [ebx-0x70bfff2a],edi
  40da35:	fimul  DWORD PTR [ecx+0x162dbb43]
  40da3b:	test   edx,0xab0000d6
  40da41:	stos   BYTE PTR es:[edi],al
  40da42:	push   es
  40da43:	mov    edi,DWORD PTR [eax-0x37]
  40da46:	or     DWORD PTR [eax],0x2f0252e4
  40da4c:	je     0x40d9d1
  40da4e:	pop    ebx
  40da4f:	pop    ebx
  40da50:	jb     0x40dad0
  40da52:	ret    0x7b0c
  40da55:	mov    DWORD PTR [esi-0x75],edx
  40da58:	lahf   
  40da59:	cli    
  40da5a:	adc    DWORD PTR [edi-0x10],edx
  40da5d:	cwde   
  40da5e:	and    al,0x14
  40da60:	bound  esp,QWORD PTR [edx]
  40da62:	push   ebp
  40da63:	inc    DWORD PTR [eax]
	...
  40da75:	add    BYTE PTR [eax],al
  40da77:	add    dh,ch
  40da79:	fistp  DWORD PTR [ebx+ecx*4]
  40da7c:	cmp    ecx,DWORD PTR [eax-0x5caa024b]
  40da82:	lea    edx,[ebp+0x63]
  40da85:	ds or  eax,0xc77760b6
  40da8b:	mov    WORD PTR [esi-0x4b],?
  40da8e:	les    edx,FWORD PTR [esi-0x5e]
  40da91:	lock mov es,WORD PTR [esi+0x63]
  40da95:	and    BYTE PTR [edi+edi*8-0x74],dl
  40da99:	cld    
  40da9a:	pop    esp
  40da9b:	pop    esi
  40da9c:	mov    ecx,0xb10010ae
  40daa1:	dec    edx
  40daa2:	mov    DWORD PTR [ebx+0x46],esi
  40daa5:	add    al,0x55
  40daa7:	pinsrw mm6,WORD PTR [ecx+0x2],0x8b
  40daac:	sbb    esp,DWORD PTR [edi+0x4d]
  40daaf:	and    al,0x4e
  40dab1:	addr16 inc eax
  40dab3:	or     al,0xdf
  40dab5:	mov    eax,ds:0x790d0302
  40daba:	adc    DWORD PTR [ebx],ebp
  40dabc:	fld    TBYTE PTR [edi-0x5]
  40dabf:	jmp    0x31cf:0x458f0a4f
  40dac6:	add    ebp,ecx
  40dac8:	popa   
  40dac9:	cmp    ecx,DWORD PTR [ebx+0x40676340]
  40dacf:	adc    BYTE PTR [ebp+0x620000ef],bl
  40dad5:	lock test al,0x1c
  40dad8:	pushf  
  40dad9:	lock or al,0x8a
	...
  40daf0:	fs adc al,0xd
  40daf3:	or     al,0xe2
  40daf5:	addr16 inc edx
  40daf7:	add    edi,ebx
  40daf9:	mov    cl,0xc0
  40dafb:	add    bl,BYTE PTR [ebp-0x16fdbd88]
  40db01:	fsubr  DWORD PTR [edx-0x1c2762ed]
  40db07:	add    esp,DWORD PTR [edx-0x27]
  40db0a:	mov    dh,0x8e
  40db0c:	pop    ds
  40db0d:	xlat   BYTE PTR ds:[ebx]
  40db0e:	lods   eax,DWORD PTR ds:[esi]
  40db0f:	pop    eax
  40db10:	and    dh,cl
  40db12:	out    0x50,eax
  40db14:	scas   eax,DWORD PTR es:[edi]
  40db15:	push   esp
  40db16:	and    DWORD PTR [eax+0x55d3b599],ecx
  40db1c:	fldenv [ebp+0x3]
  40db1f:	adc    al,0xe9
  40db21:	sbb    bl,bl
  40db23:	ror    DWORD PTR [esp+edx*2-0x6eb21864],1
  40db2a:	fwait
  40db2b:	adc    al,0x9a
  40db2d:	fisttp QWORD PTR gs:[ebx-0x56]
  40db31:	gs in  al,dx
  40db33:	cmp    ch,0xd5
  40db36:	je     0x40db44
  40db38:	fld    st(5)
  40db3a:	mov    ch,0xa8
  40db3c:	pop    ebx
  40db3d:	shr    BYTE PTR [esi],1
  40db3f:	pop    ss
  40db40:	cmp    al,0xf4
  40db42:	jmp    0x40db4e
  40db44:	mov    ah,0xc5
  40db46:	sbb    eax,0xefb5a18f
  40db4b:	mov    BYTE PTR [ecx],bh
  40db4d:	fucomi st,st(2)
  40db4f:	daa    
  40db50:	xchg   BYTE PTR [ebp+0xd212],bh
	...
  40db66:	add    BYTE PTR [eax],al
  40db68:	pusha  
  40db69:	or     DWORD PTR [ecx],esi
  40db6b:	xor    BYTE PTR [ecx],bl
  40db6d:	xchg   edx,eax
  40db6e:	cmp    ebp,ebp
  40db70:	sbb    dl,BYTE PTR [edx-0xd1ef1cd]
  40db76:	jmp    0x40dba8
  40db78:	rsqrtps xmm6,xmm4
  40db7b:	stc    
  40db7c:	mov    eax,0x64106089
  40db81:	pop    edx
  40db82:	xchg   edx,eax
  40db83:	add    al,0x62
  40db85:	fldenv [edi+0x38]
  40db88:	push   0x5a
  40db8a:	cmp    BYTE PTR [ebx-0x9ff1f74],0x4b
  40db91:	sahf   
  40db92:	mov    DWORD PTR [edx],ebp
  40db94:	push   esi
  40db95:	pop    esp
  40db96:	and    ecx,ebp
  40db98:	les    esp,FWORD PTR [ebp-0x60ad8f9a]
  40db9e:	jg     0x40dbf3
  40dba0:	pop    esi
  40dba1:	pop    ecx
  40dba2:	dec    BYTE PTR [esi-0x66]
  40dba5:	sar    DWORD PTR [edi+0x43],1
  40dba8:	sbb    DWORD PTR [edi+0x0],ebx
  40dbab:	jmp    0xaaca963b
  40dbb0:	jno    0x40dbca
  40dbb2:	add    ebx,ebp
  40dbb4:	popa   
  40dbb5:	fld    DWORD PTR [eax]
  40dbb7:	adc    dl,BYTE PTR [eax+0x51]
  40dbba:	adc    eax,0x80e1e4df
  40dbbf:	xchg   ebp,eax
  40dbc0:	bound  ebx,QWORD PTR [ebx+edi*8-0x72]
  40dbc4:	pop    ebx
  40dbc5:	ror    BYTE PTR [ecx+0x1871b2],cl
  40dbcb:	jmp    0x0:0x0
	...
  40dbde:	add    BYTE PTR [eax],al
  40dbe0:	popa   
  40dbe1:	fld    DWORD PTR [eax]
  40dbe3:	xchg   esi,eax
  40dbe4:	stos   DWORD PTR es:[edi],eax
  40dbe5:	push   esp
  40dbe6:	les    ecx,FWORD PTR [esp+ebx*4-0x1b16eae5]
  40dbed:	fwait
  40dbee:	and    al,0xed
  40dbf0:	mov    eax,ds:0x8ce90d1b
  40dbf5:	xchg   DWORD PTR [ecx+0x55cbc255],ecx
  40dbfb:	jb     0x40db8a
  40dbfd:	mov    ch,0x14
  40dbff:	pop    ss
  40dc00:	xor    eax,esp
  40dc02:	je     0x40dc11
  40dc04:	push   sp
  40dc06:	fadd   st,st(1)
  40dc08:	dec    esi
  40dc09:	(bad)  
  40dc0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc0c:	jmp    0x327:0x593aff85
  40dc13:	bound  edx,QWORD PTR [esp+ecx*2-0x71e65bcb]
  40dc1a:	inc    eax
  40dc1b:	add    BYTE PTR [ebx+0x6b014750],cl
  40dc21:	mov    edi,ebp
  40dc23:	push   esi
  40dc24:	ja     0x40dba8
  40dc26:	pop    esi
  40dc27:	pop    ebx
  40dc28:	leave  
  40dc29:	xlat   BYTE PTR ds:[ebx]
  40dc2a:	add    bh,al
  40dc2c:	mov    dl,ah
  40dc2e:	add    BYTE PTR [eax],al
  40dc30:	jnp    0x40dc5e
  40dc32:	jae    0x40dc32
  40dc34:	or     al,0x23
  40dc36:	mov    DWORD PTR [ecx+0x47],0x4b0000d6
  40dc3d:	dec    BYTE PTR cs:[si+0x5523]
  40dc43:	mov    eax,DWORD PTR [eax]
	...
  40dc55:	add    BYTE PTR [eax],al
  40dc57:	add    BYTE PTR [edi-0x37efbab1],bl
  40dc5d:	ss push cs
  40dc5f:	test   BYTE PTR [ebx],0xd6
  40dc62:	cmp    BYTE PTR [eax+0x4c],dl
  40dc65:	test   eax,0x1c28750c
  40dc6a:	inc    ebp
  40dc6b:	clc    
  40dc6c:	jne    0x40dc55
  40dc6e:	add    BYTE PTR [ecx],al
  40dc70:	inc    esp
  40dc71:	cdq    
  40dc72:	cld    
  40dc73:	bound  esi,QWORD PTR [ecx-0x4972ff66]
  40dc79:	and    ch,bl
  40dc7b:	adc    DWORD PTR [ecx+ebx*4-0x10],eax
  40dc7f:	imul   BYTE PTR [ecx-0x26]
  40dc82:	add    bh,al
  40dc84:	inc    esi
  40dc85:	sub    DWORD PTR [eax-0x56],esp
  40dc88:	cmp    edx,ebp
  40dc8a:	mov    eax,DWORD PTR [ebp-0x45]
  40dc8d:	test   eax,ebp
  40dc8f:	aaa    
  40dc90:	sahf   
  40dc91:	and    bh,bh
  40dc93:	leave  
  40dc94:	stc    
  40dc95:	rol    DWORD PTR [eax],1
  40dc97:	push   ebp
  40dc98:	inc    eax
  40dc99:	xor    DWORD PTR [ebx-0x15aa64bb],ecx
  40dc9f:	adc    ch,dl
  40dca1:	xchg   ebp,eax
  40dca2:	push   DWORD PTR [edi]
  40dca4:	imul   esp,DWORD PTR [eax],0x75
  40dca7:	or     al,0x62
  40dca9:	mov    ebp,0x4827c713
  40dcae:	mov    al,0x45
  40dcb0:	arpl   sp,bp
  40dcb2:	rol    BYTE PTR [esi+ecx*4-0x2e],0x6e
  40dcb7:	aas    
  40dcb8:	bound  esi,QWORD PTR [ebp+0x3d]
  40dcbb:	clc    
	...
  40dcd0:	mov    DWORD PTR [ecx],eax
  40dcd2:	rol    DWORD PTR [edx+esi*2+0x7f],0xe6
  40dcd7:	add    BYTE PTR [edx-0x49],ah
  40dcda:	cmp    eax,0x455a00f4
  40dcdf:	add    bh,ch
  40dce1:	xor    al,0xb2
  40dce3:	dec    edi
  40dce4:	dec    edx
  40dce5:	sahf   
  40dce6:	mov    eax,0xc6a94dfe
  40dceb:	or     esp,DWORD PTR [edx+0x3d]
  40dcee:	(bad)  
  40dcef:	jmp    0x40dc84
  40dcf1:	inc    ecx
  40dcf2:	push   eax
  40dcf3:	mov    ebp,DWORD PTR [edi-0x272f7320]
  40dcf9:	xor    eax,0x3c4f3c03
  40dcfe:	sbb    BYTE PTR [edi+eax*2],bh
  40dd01:	inc    esp
  40dd02:	sbb    al,0x24
  40dd04:	pop    edx
  40dd05:	adc    al,0x12
  40dd07:	je     0x40dd67
  40dd09:	sbb    al,0x1a
  40dd0b:	je     0x40dd67
  40dd0d:	and    al,0xe2
  40dd0f:	jae    0x40dd77
  40dd11:	sub    al,0xea
  40dd13:	je     0x40dd65
  40dd15:	imul   eax,DWORD PTR [ebx+0xc],0xffffffe1
  40dd19:	out    0xb8,eax
  40dd1b:	jmp    0xb9e9:0x23f7b58
  40dd22:	or     BYTE PTR [ebx+0x56026962],cl
  40dd28:	int    0xa4
  40dd2a:	or     BYTE PTR [ebp-0x74add7e1],cl
  40dd30:	test   al,0x36
  40dd32:	aas    
  40dd33:	clc    
	...
  40dd48:	mov    ch,0xd8
  40dd4a:	leave  
  40dd4b:	add    ah,BYTE PTR [edx+0x16]
  40dd4e:	and    eax,0x283343b8
  40dd53:	add    al,0x8a
  40dd55:	inc    ecx
  40dd56:	mov    WORD PTR [eax-0x3a4f816c],?
  40dd5c:	pop    ecx
  40dd5d:	fnstcw WORD PTR [edx-0x182f5c3d]
  40dd63:	sub    eax,0x7a98160
  40dd68:	(bad)  
  40dd69:	out    0xab,eax
  40dd6b:	fbld   TBYTE PTR [ecx-0x28]
  40dd6e:	mov    ch,0x8c
  40dd70:	jb     0x40dd87
  40dd72:	out    dx,al
  40dd73:	retf   
  40dd74:	in     al,0x99
  40dd76:	out    0x2f,eax
  40dd78:	pop    edi
  40dd79:	icebp  
  40dd7a:	jno    0x40dcfc
  40dd7c:	(bad)  
  40dd7d:	fnstenv [edx-0x3f]
  40dd80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd81:	pop    ss
  40dd82:	in     al,dx
  40dd83:	add    ebp,ecx
  40dd85:	lea    eax,[ebx]
  40dd87:	add    BYTE PTR [ebx+0x76],cl
  40dd8a:	outs   dx,BYTE PTR ds:[esi]
  40dd8b:	add    ah,BYTE PTR [edx+0x50]
  40dd8e:	lods   al,BYTE PTR ds:[esi]
  40dd8f:	fbld   TBYTE PTR [ecx-0xe]
  40dd92:	cdq    
  40dd93:	and    BYTE PTR [edx-0x27],0xb8
  40dd97:	push   esp
  40dd98:	jmp    0x20cd7a9c
  40dd9d:	pop    ecx
  40dd9e:	or     BYTE PTR [esp+ebp*4],al
  40dda1:	test   BYTE PTR [eax+0x47],ah
  40dda4:	inc    esi
  40dda5:	leave  
  40dda6:	push   0xffffffab
  40dda8:	cmc    
  40dda9:	push   0x4c12
	...
  40ddbe:	add    BYTE PTR [eax],al
  40ddc0:	jbe    0x40dd7c
  40ddc2:	das    
  40ddc3:	xor    BYTE PTR [ebp+0x50],cl
  40ddc6:	sub    al,0xe0
  40ddc8:	jns    0x40de20
  40ddca:	test   al,0x7
  40ddcc:	fidivr WORD PTR [eax+ebp*8-0x17eb9dfd]
  40ddd3:	dec    esi
  40ddd4:	(bad)  
  40ddd5:	fld    DWORD PTR [eax]
  40ddd7:	jmp    0xe940a6ea
  40dddc:	popa   
  40dddd:	push   ds
  40ddde:	add    ecx,ebp
  40dde0:	popa   
  40dde1:	sbb    edx,ebp
  40dde3:	in     eax,dx
  40dde4:	sub    bl,ah
  40dde6:	std    
  40dde7:	jmp    0x4c44ce0d
  40ddec:	pop    esi
  40dded:	fld    DWORD PTR [eax]
  40ddef:	imul   ebx,ecx,0x84e9bb17
  40ddf5:	fdiv   st(5),st
  40ddf7:	retf   0x21a3
  40ddfa:	add    ebp,esp
  40ddfc:	popa   
  40ddfd:	fnstcw WORD PTR [ecx]
  40ddff:	sub    BYTE PTR ds:0xe30874b1,dh
  40de05:	sbb    al,0x75
  40de07:	hlt    
  40de08:	pop    edx
  40de09:	fadd   QWORD PTR [eax]
  40de0b:	jmp    0x4534371
  40de10:	data16 xlat BYTE PTR ds:[ebx]
  40de12:	add    cl,ch
  40de14:	jne    0x40dd99
  40de16:	cmp    ebp,ecx
  40de18:	pusha  
  40de19:	fld    DWORD PTR [eax]
  40de1b:	mov    ah,0xc6
  40de1d:	jb     0x40de21
  40de1f:	adc    ch,BYTE PTR [edx+esi*2]
  40de22:	add    al,0x12
	...
  40de38:	pusha  
  40de39:	outs   dx,DWORD PTR ds:[esi]
  40de3a:	add    DWORD PTR [esi-0x16c43b38],esi
  40de40:	(bad)  
  40de41:	fld    DWORD PTR [eax]
  40de43:	jge    0x40de9d
  40de45:	sahf   
  40de46:	add    bh,ah
  40de48:	popa   
  40de49:	fnstenv [ebp+edi*4-0x8]
  40de4d:	sbb    DWORD PTR [ebx+eiz*2-0xf],esi
  40de51:	fiadd  DWORD PTR [ebp+0x53]
  40de54:	pop    esi
  40de55:	outs   dx,DWORD PTR ds:[esi]
  40de56:	add    dh,bl
  40de58:	repnz arpl WORD PTR [esi+0x2d],bp
  40de5c:	data16 fcom QWORD PTR [ebx]
  40de5f:	inc    ebp
  40de60:	jo     0x40ddfb
  40de62:	add    BYTE PTR [eax],al
  40de64:	push   eax
  40de65:	sub    BYTE PTR [ebp-0x763f710a],al
  40de6b:	inc    esp
  40de6c:	outs   dx,DWORD PTR ds:[esi]
  40de6d:	rol    DWORD PTR [ebx-0x72a46b40],0x0
  40de74:	mov    ebx,0xb300c5d7
  40de79:	xlat   BYTE PTR ds:[ebx]
  40de7a:	add    BYTE PTR [eax],al
  40de7c:	loop   0x40ded6
  40de7e:	(bad)  
  40de7f:	dec    DWORD PTR [ebx+0x4ceb03b1]
  40de85:	mov    dl,0x4
  40de87:	push   0x7b
  40de89:	and    dh,BYTE PTR ds:0x996578
  40de8f:	dec    DWORD PTR [esi+0x7b4012bb]
  40de95:	pop    eax
  40de96:	mov    esi,0x6567e74
  40de9b:	inc    DWORD PTR [eax]
	...
  40dead:	add    BYTE PTR [eax],al
  40deaf:	add    BYTE PTR [eax-0x753fce28],ah
  40deb5:	das    
  40deb6:	add    eax,DWORD PTR [eax+0x687d598]
  40debc:	rol    DWORD PTR [esp+eax*1+0x10a98b85],cl
  40dec3:	mov    edi,edi
  40dec5:	cli    
  40dec6:	sbb    DWORD PTR [ebp-0x38b75585],eax
  40decc:	cmp    ecx,edi
  40dece:	add    BYTE PTR [eax],al
  40ded0:	or     esi,DWORD PTR [eax]
  40ded2:	ds push 0xd68b
  40ded8:	in     al,dx
  40ded9:	mov    al,0x1
  40dedb:	push   ebp
  40dedc:	add    al,0xac
  40dede:	and    al,0x20
  40dee0:	or     BYTE PTR [esi],0xe6
  40dee3:	push   edi
  40dee4:	icebp  
  40dee5:	(bad)  
  40dee6:	add    BYTE PTR [ebx+edi*4-0x4274fb57],al
  40deed:	xor    BYTE PTR [ebx+ecx*4],ch
  40def0:	bound  eax,QWORD PTR [eax+eiz*8+0x310bdf1b]
  40def7:	or     ch,cl
  40def9:	std    
  40defa:	inc    ebp
  40defb:	adc    ah,BYTE PTR [edx]
  40defd:	lock mov al,BYTE PTR [esi]
  40df00:	jmp    0x2f3f5de7
  40df05:	cli    
  40df06:	mov    dh,cl
  40df08:	mov    edx,0x6200bad3
  40df0d:	addr16 ret 
  40df0f:	out    0x51,eax
  40df11:	push   0x1
	...
  40df27:	add    cl,ch
  40df29:	cmp    ch,BYTE PTR [ebp+0x1f1e42b]
  40df2f:	sbb    DWORD PTR [edx+0x1f5e535b],0xffffffc7
  40df36:	pop    ecx
  40df37:	ret    0xf06a
  40df3a:	jle    0x40df04
  40df3c:	div    BYTE PTR [ecx+0x465f87f]
  40df42:	sti    
  40df43:	test   BYTE PTR [eax],dh
  40df45:	cld    
  40df46:	out    dx,al
  40df47:	adc    dh,0xd4
  40df4a:	add    BYTE PTR [eax],al
  40df4c:	fld1   
  40df4e:	or     bh,BYTE PTR ss:[eax-0x79eb4abd]
  40df55:	inc    BYTE PTR [ecx+0x0]
  40df58:	dec    ecx
  40df59:	cli    
  40df5a:	mov    ah,0x73
  40df5c:	xchg   ah,ch
  40df5e:	dec    edi
  40df5f:	call   0x429577
  40df64:	out    0xaf,eax
  40df66:	cmp    DWORD PTR ds:0x243077ac,esp
  40df6c:	pop    esi
  40df6d:	ins    DWORD PTR es:[edi],dx
  40df6e:	scas   al,BYTE PTR es:[edi]
  40df6f:	jae    0x40dfcb
  40df71:	fisttp DWORD PTR [esi]
  40df73:	dec    esp
  40df74:	push   eax
  40df75:	xor    BYTE PTR [edx],al
  40df77:	mov    DWORD PTR [edx+ecx*2-0x57],ebx
  40df7b:	or     eax,0xe02bd8d9
  40df80:	pop    ebp
  40df81:	push   esp
  40df82:	test   al,0x2f
  40df84:	fs adc ch,al
  40df87:	dec    esp
  40df88:	(bad)  
  40df89:	(bad)  
  40df8b:	add    BYTE PTR [eax],0x0
	...
  40df9e:	add    BYTE PTR [eax],al
  40dfa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfa1:	fldcw  WORD PTR [ecx+0x7284620b]
  40dfa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfa8:	adc    al,BYTE PTR [ebx+0x4e0cb262]
  40dfae:	mov    dl,0x7e
  40dfb0:	mov    bh,0x64
  40dfb2:	and    DWORD PTR ss:[edi-0x18b5ec27],0xe23e1bd9
  40dfbd:	pop    edx
  40dfbe:	jecxz  0x40dfc3
  40dfc0:	push   ss
  40dfc1:	int3   
  40dfc2:	jb     0x40dfc9
  40dfc4:	clc    
  40dfc5:	(bad)  
  40dfc6:	adc    DWORD PTR [eax+ecx*1],eax
  40dfc9:	fnstcw WORD PTR [edi+0x57]
  40dfcc:	js     0x40dfa5
  40dfce:	out    0x88,eax
  40dfd0:	addr16 dec esi
  40dfd2:	fisttp QWORD PTR [ebx]
  40dfd4:	clc    
  40dfd5:	fsubr  DWORD PTR [esi+eax*2+0x5e]
  40dfd9:	sub    edi,DWORD PTR [esi+0x4f0a554c]
  40dfdf:	push   cs
  40dfe0:	bnd jmp 0x40df8a
  40dfe3:	add    ebx,edi
  40dfe5:	cdq    
  40dfe6:	mov    bl,0xa
  40dfe8:	jnp    0x40e038
  40dfea:	xor    al,0x2e
  40dfec:	pop    esi
  40dfed:	fs and eax,0x9c6482a8
  40dff3:	pop    es
  40dff4:	(bad)  
  40dff6:	xchg   ebx,eax
  40dff7:	or     al,0x1d
  40dff9:	out    dx,eax
  40dffa:	mov    ds:0x60d9a211,eax
  40dfff:	std    
  40e000:	clc    
  40e001:	out    0x72,al
  40e003:	add    BYTE PTR ds:[eax],al
	...
  40e016:	add    BYTE PTR [eax],al
  40e018:	push   esi
  40e019:	pop    esi
  40e01a:	daa    
  40e01b:	das    
  40e01c:	mov    al,fs:0xd9a6e900
  40e022:	add    cl,ch
  40e024:	loop   0x40dfc6
  40e026:	std    
  40e027:	inc    esi
  40e028:	nop
  40e029:	mov    ds:0x2e61f1c2,al
  40e02e:	mov    al,ch
  40e030:	das    
  40e031:	sub    dl,BYTE PTR [edi+0x62]
  40e034:	pop    ss
  40e035:	pop    esi
  40e036:	idiv   BYTE PTR ds:0xbefe5c7f
  40e03c:	jp     0x40e073
  40e03e:	mov    ch,BYTE PTR [esi+esi*4]
  40e041:	or     ecx,eax
  40e043:	add    ah,BYTE PTR [edi+0x6a311c4c]
  40e049:	lock dec eax
  40e04b:	adc    eax,0xe54b6461
  40e050:	jmp    0x55d9:0x993a74a1
  40e057:	jmp    0x332ab9bd
  40e05c:	pop    esp
  40e05d:	fist   DWORD PTR [edi-0x7e]
  40e060:	pop    ebp
  40e061:	or     al,0xc8
  40e063:	sub    ch,ch
  40e065:	cdq    
  40e066:	dec    edi
  40e067:	jb     0x40e0c9
  40e069:	jb     0x40e0bd
  40e06b:	mov    ecx,0xe8f7a6f9
  40e070:	popa   
  40e071:	pop    ebp
  40e072:	rcl    ch,0x75
  40e075:	fs push cs
  40e077:	je     0x40e014
  40e079:	rcl    DWORD PTR [eax+0x51],1
	...
  40e090:	loop   0x40e062
  40e092:	(bad)  
  40e093:	call   0xe4b57875
  40e098:	lods   al,BYTE PTR ds:[esi]
  40e099:	sbb    eax,0x633f12f9
  40e09e:	jae    0x40e08d
  40e0a0:	jmp    0x4cec:0xd0fe74cd
  40e0a7:	sti    
  40e0a8:	mov    eax,ds:0xf50087d9
  40e0ad:	jbe    0x40e0bb
  40e0af:	mov    eax,esi
  40e0b1:	xlat   BYTE PTR ds:[ebx]
  40e0b2:	test   al,al
  40e0b4:	ja     0x40e098
  40e0b6:	lds    eax,FWORD PTR [eax]
  40e0b8:	aam    0xdb
  40e0ba:	add    BYTE PTR [eax],al
  40e0bc:	js     0x40e052
  40e0be:	(bad)  
  40e0bf:	pop    esi
  40e0c0:	adc    bl,BYTE PTR [esi+0x58950005]
  40e0c6:	icebp  
  40e0c7:	add    DWORD PTR [ebx],0xffffff8b
  40e0ca:	test   dh,dh
  40e0cc:	xchg   edx,eax
  40e0ce:	cmp    dh,al
  40e0d0:	ja     0x40e090
  40e0d2:	push   esi
  40e0d3:	mov    ebp,DWORD PTR [ebp-0x728b01a0]
  40e0d9:	push   esi
  40e0da:	iret   
  40e0db:	call   0x4164bc
  40e0e0:	adc    BYTE PTR [ebx-0x22f84c1b],bl
  40e0e6:	add    BYTE PTR [ebx-0x7b568c13],cl
  40e0ec:	jp     0x40e0c9
  40e0ee:	xor    eax,eax
  40e0f0:	pop    esp
  40e0f1:	sub    eax,edx
  40e0f3:	test   DWORD PTR [eax],eax
	...
  40e105:	add    BYTE PTR [eax],al
  40e107:	add    cl,bl
  40e109:	sysret 
  40e10b:	(bad)  
  40e10c:	jns    0x40e140
  40e10e:	add    DWORD PTR [eax],eax
  40e110:	jnp    0x40e13b
  40e112:	ret    0xd055
  40e115:	jbe    0x40e0a1
  40e117:	dec    ebp
  40e118:	push   ebx
  40e119:	pop    esi
  40e11a:	jmp    0x11c1a27
  40e11f:	lea    esi,[esi+0x7cfffc82]
  40e125:	sub    bh,dh
  40e127:	jne    0x40e16c
  40e129:	jae    0x40e157
  40e12b:	add    bh,BYTE PTR [ebx]
  40e12d:	fild   DWORD PTR [eax+eax*8+0x75fdeec7]
  40e134:	pop    ss
  40e135:	pop    eax
  40e136:	push   ebp
  40e137:	or     al,0x62
  40e139:	xchg   ecx,eax
  40e13a:	or     BYTE PTR [edx+ecx*1-0x5014d1a],0xd8
  40e142:	lods   eax,DWORD PTR ds:[esi]
  40e143:	(bad)  
  40e144:	std    
  40e145:	or     edi,eax
  40e147:	mov    bl,BYTE PTR [edi+0x76bf88b4]
  40e14d:	mov    esi,0xc08cffca
  40e152:	add    DWORD PTR [eax],eax
  40e154:	loope  0x40e0de
  40e156:	scas   eax,DWORD PTR es:[edi]
  40e157:	enter  0xafa1,0x38
  40e15b:	and    al,0x72
  40e15d:	cmp    ebx,DWORD PTR [ecx+0x24]
  40e160:	push   esi
  40e161:	lahf   
  40e162:	cmp    BYTE PTR [edx+edx*2],ah
  40e165:	dec    ebx
  40e166:	inc    ecx
  40e167:	and    al,0x66
  40e169:	cwde   
  40e16a:	in     al,0xfd
	...
  40e180:	lods   eax,DWORD PTR ds:[esi]
  40e181:	xchg   ebx,eax
  40e183:	(bad)  
  40e184:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40e186:	adc    DWORD PTR [ebx-0x10263ca],ecx
  40e18c:	push   cs
  40e18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e18e:	adc    DWORD PTR [ebx-0x180263e2],ecx
  40e194:	add    bl,BYTE PTR [esi-0x51]
  40e197:	(bad)  
  40e198:	mov    eax,ds:0x6a24594b
  40e19d:	cmp    eax,DWORD PTR [ecx+0x24]
  40e1a0:	pop    cx
  40e1a2:	inc    edi
  40e1a3:	jmp    DWORD PTR [ebp+0x3f]
  40e1a6:	mov    al,0x73
  40e1a8:	xchg   al,dl
  40e1aa:	jl     0x40e1ff
  40e1ac:	jle    0x40e16a
  40e1ae:	mov    al,0x73
  40e1b0:	xchg   al,dl
  40e1b2:	jl     0x40e1ff
  40e1b4:	jle    0x40e182
  40e1b6:	cdq    
  40e1b7:	scas   eax,DWORD PTR es:[edi]
  40e1b8:	cmp    al,0x17
  40e1ba:	mov    al,0xc2
  40e1bc:	(bad)  
  40e1bd:	cmp    esp,DWORD PTR [ecx-0x7d4f6076]
  40e1c3:	jmp    0x40e21f
  40e1c5:	fldl2t 
  40e1c7:	add    esp,DWORD PTR [edx+0x64]
  40e1ca:	lods   al,BYTE PTR fs:[esi]
  40e1cc:	push   ss
  40e1cd:	(bad)  
  40e1ce:	push   ss
  40e1cf:	push   esp
  40e1d0:	or     eax,0xea9be04c
  40e1d5:	xlat   BYTE PTR ds:[ebx]
  40e1d6:	out    0x3,eax
  40e1d8:	out    0x98,al
  40e1da:	jae    0x40e1f0
  40e1dc:	out    0x63,eax
  40e1de:	out    dx,eax
  40e1df:	scas   al,BYTE PTR es:[edi]
  40e1e0:	in     al,dx
  40e1e1:	aad    0xff
  40e1e3:	mov    ebx,0x0
	...
  40e1f8:	call   0x1dc8c9d4
  40e1fd:	dec    ebp
  40e1fe:	in     al,0xf4
  40e200:	adc    eax,0xa584aaa0
  40e205:	aad    0xa0
  40e207:	(bad)
  40e20b:	add    eax,0x571ad962
  40e210:	or     al,0x2e
  40e212:	inc    edx
  40e213:	add    eax,0x18044cdf
  40e218:	add    eax,0x84e2243
  40e21d:	cmp    BYTE PTR [ecx-0x64],al
  40e220:	mov    ds:0x403e953,eax
  40e225:	pusha  
  40e226:	in     eax,0x7e
  40e228:	pand   mm6,QWORD PTR [esi]
  40e22b:	aaa    
  40e22c:	mov    cs,WORD PTR [ecx]
  40e22e:	test   al,0x29
  40e230:	jmp    0x40e24e
  40e232:	int3   
  40e233:	sbb    ecx,ebx
  40e235:	pop    esp
  40e236:	ret    
  40e237:	fbld   TBYTE PTR [ebx-0x27]
  40e23a:	out    0x84,eax
  40e23c:	aad    0xdd
  40e23e:	call   0xd7a14179
  40e243:	sti    
  40e244:	cmp    al,bl
  40e246:	sbb    bh,BYTE PTR [edx+0xc0c1dd6]
  40e24c:	xchg   edx,eax
  40e24d:	shl    ebp,0x2e
  40e250:	arpl   cx,bx
  40e252:	add    BYTE PTR [ecx-0x2edae754],bl
  40e258:	xchg   ecx,eax
  40e259:	data16 xchg bh,cl
	...
  40e270:	fld    DWORD PTR gs:[eax]
  40e273:	mov    ecx,0xfb2cedd2
  40e278:	mov    eax,ds:0x4d2983d9
  40e27d:	dec    edx
  40e27e:	mov    WORD PTR [ebp-0x1af12fb],gs
  40e284:	dec    edi
  40e285:	test   eax,0x6061a911
  40e28a:	lock pop esp
  40e28c:	popf   
  40e28d:	std    
  40e28e:	sbb    BYTE PTR [edx],ah
  40e290:	push   ss
  40e291:	dec    ecx
  40e292:	pop    ebp
  40e293:	jb     0x40e2d7
  40e295:	clc    
  40e296:	and    al,0xeb
  40e298:	popa   
  40e299:	(bad)  [ecx+0x2fcba6d]
  40e29f:	jmp    0x6b0f4305
  40e2a4:	mov    eax,ds:0x60348bd6
  40e2a9:	rol    DWORD PTR [esi],0x29
  40e2ac:	pop    esi
  40e2ad:	fld    DWORD PTR [ebx+0x32164ea9]
  40e2b3:	mov    al,0x2f
  40e2b5:	sub    dl,BYTE PTR [edx+0x3e]
  40e2b8:	sub    edx,DWORD PTR ss:[eax+0x38]
  40e2bc:	mov    ch,0xed
  40e2be:	add    al,bl
  40e2c0:	and    ecx,ebx
  40e2c2:	sub    DWORD PTR [ecx-0x6d7bfdbc],0x3c
  40e2c9:	in     al,0x80
  40e2cb:	in     eax,dx
  40e2cc:	pop    esp
  40e2cd:	aam    0x0
  40e2cf:	fstp   QWORD PTR [ecx+0xf]
  40e2d2:	ret    0xdc
	...
  40e2e5:	add    BYTE PTR [eax],al
  40e2e7:	add    BYTE PTR [ebx-0x65],ch
  40e2ea:	add    al,0xee
  40e2ec:	popa   
  40e2ed:	aas    
  40e2ee:	add    eax,ecx
  40e2f0:	sbb    DWORD PTR [eax+eax*2+0x0],0x15fe314b
  40e2f8:	fucomi st,st(5)
  40e2fa:	inc    eax
  40e2fb:	add    BYTE PTR [eax],ch
  40e2fd:	cwde   
  40e2fe:	add    ah,0x7
  40e301:	sbb    dl,ch
  40e303:	add    bh,BYTE PTR [eax]
  40e305:	cwde   
  40e306:	pop    esi
  40e307:	pop    esi
  40e308:	(bad)  
  40e309:	push   ds
  40e30a:	add    ah,0xb
  40e30d:	fiadd  DWORD PTR [eax]
  40e30f:	add    BYTE PTR [eax],bh
  40e311:	enter  0x40bd,0x48
  40e315:	enter  0xc3bd,0xce
  40e319:	dec    esi
  40e31a:	jmp    0xd68b:0x52c96783
  40e321:	jecxz  0x40e379
  40e323:	push   edi
  40e324:	cwde   
  40e325:	test   BYTE PTR [eax+ebx*1+0x78],dh
  40e329:	test   BYTE PTR [esi+0x57],dl
  40e32c:	mov    ah,0x10
  40e32e:	or     eax,ebp
  40e330:	push   0x30fffe83
  40e335:	mov    BYTE PTR [edx-0xc9f703c],al
  40e33b:	je     0x40e363
  40e33d:	pop    eax
  40e33e:	sti    
  40e33f:	jmp    FWORD PTR [edi-0xb]
  40e342:	mov    DWORD PTR [esi],ecx
  40e344:	push   ss
  40e345:	xor    ebp,eax
  40e347:	push   edx
  40e348:	hlt    
  40e349:	int3   
  40e34a:	(bad)  
  40e34b:	adc    eax,0x0
	...
  40e360:	xor    ebp,ebp
  40e362:	inc    eax
  40e363:	add    dh,bh
  40e365:	xchg   edi,eax
  40e366:	je     0x40e377
  40e368:	lock xor BYTE PTR [ecx],bl
  40e36b:	mov    eax,ebp
  40e36d:	outs   dx,DWORD PTR ds:[esi]
  40e36e:	retf   
  40e36f:	std    
  40e370:	hlt    
  40e371:	add    BYTE PTR [edx+0x466ef4c8],0x8d
  40e378:	push   cs
  40e379:	jg     0x40e3c8
  40e37b:	(bad)  
  40e37c:	(bad)  
  40e37d:	sahf   
  40e37e:	dec    ebp
  40e37f:	jmp    DWORD PTR [edx-0x2b]
  40e382:	push   ebp
  40e383:	adc    ah,BYTE PTR [edx-0x49407740]
  40e389:	mov    al,0xae
  40e38b:	je     0x40e3df
  40e38d:	inc    ebp
  40e38e:	dec    ecx
  40e38f:	clc    
  40e390:	sub    eax,0x254ffd96
  40e395:	scas   al,BYTE PTR es:[edi]
  40e396:	fst    DWORD PTR [ecx]
  40e398:	mov    ds:0x1e447ac0,al
  40e39d:	dec    eax
  40e39e:	inc    ecx
  40e39f:	adc    al,0xe1
  40e3a1:	loopne 0x40e389
  40e3a3:	gs fcmovnb st,st(1)
  40e3a6:	cmp    BYTE PTR [edx+0x66],0xc1
  40e3aa:	cmp    BYTE PTR [ebx],al
  40e3ac:	jmp    0x6dc0dd08
  40e3b1:	mov    ah,0x4
  40e3b3:	jne    0x40e40f
  40e3b5:	mov    ch,0x81
  40e3b7:	(bad)  
  40e3b8:	ffree  st(0)
  40e3ba:	and    ecx,DWORD PTR [ecx+0x5ec74763]
  40e3c0:	sub    al,0x7
  40e3c2:	mov    edx,0xc2
	...
  40e3d7:	add    BYTE PTR [edi],ch
  40e3d9:	aaa    
  40e3da:	mov    eax,ds:0xffc8ce80
  40e3df:	jmp    DWORD PTR [edx-0x11]
  40e3e2:	ja     0x40e400
  40e3e4:	jbe    0x40e394
  40e3e6:	inc    ecx
  40e3e7:	add    BYTE PTR [edi+esi*1],cl
  40e3ea:	or     BYTE PTR ss:0x228728e8,dh
  40e3f1:	rcl    BYTE PTR [ebx-0x75],0x8b
  40e3f5:	imul   ecx,edi,0xffffff84
  40e3f8:	mov    ds:0x258b09ed,al
  40e3fd:	enter  0x1e06,0x60
  40e401:	rol    BYTE PTR [ecx],0x50
  40e404:	ins    DWORD PTR es:[edi],dx
  40e405:	aad    0xfd
  40e407:	dec    BYTE PTR [edi-0x1c]
  40e40a:	adc    al,BYTE PTR [eax+0x62]
  40e40d:	fst    DWORD PTR [edi-0x18a1b4fd]
  40e413:	add    esp,DWORD PTR [edx+0x41]
  40e416:	rol    BYTE PTR [ebp+eax*4+0x10acb5d9],0x5c
  40e41e:	daa    
  40e41f:	aaa    
  40e420:	push   0x5e
  40e422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e423:	sti    
  40e424:	loopne 0x40e3be
  40e426:	fstp   QWORD PTR [eax+0x1bea3f08]
  40e42c:	sbb    BYTE PTR [edx-0x59],0x3
  40e430:	lods   al,BYTE PTR ds:[esi]
  40e431:	shl    ah,cl
  40e433:	mov    ebx,0x86e81970
  40e438:	lds    ecx,FWORD PTR [ebx-0x75]
  40e43b:	add    BYTE PTR [eax],0x0
	...
  40e44e:	add    BYTE PTR [eax],al
  40e450:	daa    
  40e451:	xlat   BYTE PTR ds:[ebx]
  40e452:	jb     0x40e412
  40e454:	std    
  40e455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e456:	mov    ebp,0x275c6203
  40e45b:	sub    al,0x8f
  40e45d:	mov    fs,ebx
  40e45f:	add    ah,BYTE PTR [edx-0x27]
  40e462:	cmp    bh,BYTE PTR [edi-0x1a]
  40e465:	rcr    ah,1
  40e467:	lods   al,BYTE PTR ds:[esi]
  40e468:	int3   
  40e469:	daa    
  40e46a:	cmp    BYTE PTR [esi-0x6f],dl
  40e46d:	retf   
  40e46e:	xor    eax,0x6bebbd56
  40e473:	adc    ah,BYTE PTR [edx]
  40e475:	fldenv [ebx+eax*8+0x2f]
  40e479:	adc    DWORD PTR [esi-0x15],ecx
  40e47c:	icebp  
  40e47d:	sbb    esi,DWORD PTR [esi+0x1bd19cae]
  40e483:	(bad)  
  40e484:	pop    eax
  40e485:	xchg   esi,eax
  40e486:	sbb    al,0xda
  40e488:	push   eax
  40e489:	mov    al,ds:0x1bd97b0d
  40e48e:	nop
  40e48f:	scas   al,BYTE PTR es:[edi]
  40e490:	jl     0x40e463
  40e492:	jb     0x40e4e8
  40e494:	push   0x5e
  40e496:	sub    al,0x0
  40e498:	fistp  WORD PTR [ebx+0x0]
  40e49b:	jno    0x40e451
  40e49d:	sar    ch,cl
  40e49f:	sbb    ecx,esp
  40e4a1:	call   0xb8e8:0xd961ed26
  40e4a8:	adc    bl,dl
  40e4aa:	add    BYTE PTR [ecx+eiz*1-0x20],ch
  40e4ae:	sbb    ecx,0xe
  40e4b1:	sar    ch,1
  40e4b3:	sti    
	...
  40e4c8:	and    DWORD PTR [eax],esi
  40e4ca:	pop    edi
  40e4cb:	mov    ds:0xe9089ae8,al
  40e4d0:	xchg   edx,eax
  40e4d1:	sub    BYTE PTR [edx+0x37b41230],cl
  40e4d7:	(bad)  
  40e4d8:	pop    ebp
  40e4d9:	loopne 0x40e45e
  40e4db:	inc    esi
  40e4dc:	popa   
  40e4dd:	fld    DWORD PTR [eax]
  40e4df:	and    DWORD PTR [ebp+0x58],0xe5cee940
  40e4e6:	inc    eax
  40e4e7:	(bad)  [ecx-0x1b197827]
  40e4ed:	nop
  40e4ee:	or     eax,0xfdd0d36d
  40e4f3:	jmp    0xe9491671
  40e4f8:	popa   
  40e4f9:	inc    ebx
  40e4fa:	or     esi,ebx
  40e4fc:	ror    DWORD PTR [eax+0x6f],cl
  40e4ff:	sub    eax,0x4513d05e
  40e504:	push   esp
  40e505:	sbb    DWORD PTR [ecx],eax
  40e507:	jo     0x40e52a
  40e509:	loope  0x40e48e
  40e50b:	test   eax,0x62573f72
  40e510:	mov    bl,0x20
  40e512:	adc    ebp,DWORD PTR [ecx]
  40e514:	inc    cx
  40e516:	test   DWORD PTR [esi+0x1e],ebp
  40e519:	fscale 
  40e51b:	(bad)  
  40e51c:	mov    eax,0x862689a6
  40e521:	cmp    BYTE PTR [ecx-0x7826d99a],dl
  40e527:	add    BYTE PTR [edx-0x27],cl
  40e52a:	std    
  40e52b:	aaa    
	...
  40e540:	in     al,dx
  40e541:	stos   BYTE PTR es:[edi],al
  40e542:	mov    cl,BYTE PTR [edi-0x7d]
  40e545:	hlt    
  40e546:	pushf  
  40e547:	xchg   DWORD PTR [ebx+0x534187d5],ecx
  40e54d:	xor    DWORD PTR [esi],0xffffffff
  40e550:	xchg   ebp,eax
  40e551:	push   eax
  40e552:	dec    edi
  40e553:	or     BYTE PTR [ebx],ah
  40e555:	sub    BYTE PTR [edi+0x414d4b40],al
  40e55b:	or     al,0x9c
  40e55d:	int3   
  40e55e:	(bad)  
  40e55f:	(bad)  
  40e560:	mov    al,0x14
  40e562:	or     DWORD PTR [esi-0x3e],ebx
  40e565:	push   ss
  40e566:	adc    DWORD PTR [ebx+0x5938d3fc],ecx
  40e56c:	pop    es
  40e56d:	add    BYTE PTR [ebx],bl
  40e56f:	cmp    DWORD PTR [edx],esp
  40e571:	aam    0x71
  40e573:	adc    eax,0x740d1d32
  40e578:	sti    
  40e579:	mov    esp,0xcf771058
  40e57e:	mov    BYTE PTR [edi+0x7],0xd5
  40e582:	add    BYTE PTR [eax],al
  40e584:	sti    
  40e585:	dec    ebx
  40e586:	add    ebx,ebp
  40e588:	mov    bh,0x73
  40e58a:	fld    DWORD PTR [eax+0x5f87dbca]
  40e590:	rol    DWORD PTR [edx-0x483900ca],cl
  40e596:	cmovo  ecx,ebx
  40e599:	dec    esp
  40e59a:	pop    ds
  40e59b:	xor    cl,BYTE PTR [ebx]
  40e59d:	and    ebx,DWORD PTR [edx-0x3d]
  40e5a0:	push   ebp
  40e5a1:	push   eax
  40e5a2:	icebp  
  40e5a3:	push   edi
	...
  40e5b8:	inc    eax
  40e5b9:	sbb    cl,BYTE PTR [ecx]
  40e5bb:	add    eax,0xd965
  40e5c0:	pop    ebx
  40e5c1:	inc    esp
  40e5c2:	add    al,BYTE PTR [ecx]
  40e5c4:	jnp    0x40e5a1
  40e5c6:	push   ebp
  40e5c7:	jmp    DWORD PTR [edx-0x33]
  40e5ca:	cmp    DWORD PTR [edx],edx
  40e5cc:	and    al,dl
  40e5ce:	cmp    BYTE PTR [edi-0x400c4111],0x7b
  40e5d5:	pop    eax
  40e5d6:	add    DWORD PTR [eax],eax
  40e5d8:	bound  edi,QWORD PTR [ebx]
  40e5da:	cmp    BYTE PTR [eax],cl
  40e5dc:	pop    ebp
  40e5dd:	(bad)
  40e5e0:	jecxz  0x40e5e3
  40e5e2:	or     BYTE PTR [edx],al
  40e5e4:	(bad)  
  40e5e5:	sar    BYTE PTR [esi-0x2a],0x3a
  40e5e9:	(bad)  
  40e5ea:	call   0xc27723ee
  40e5ef:	je     0x40e634
  40e5f1:	dec    esp
  40e5f2:	inc    eax
  40e5f3:	or     bl,ch
  40e5f5:	bts    esi,edi
  40e5f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5f9:	cmp    DWORD PTR [edx+0x2f],edi
  40e5fc:	rol    BYTE PTR fs:[ecx],0x8b
  40e600:	pushf  
  40e601:	enter  0x8956,0xda
  40e605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e606:	(bad)  
  40e607:	jmp    DWORD PTR [edx+0x3b]
  40e60a:	inc    eax
  40e60b:	or     BYTE PTR [ecx],dh
  40e60d:	or     edi,DWORD PTR [ebp-0x69]
  40e610:	cmp    bh,BYTE PTR [esi+0x76d90001]
  40e616:	stc    
  40e617:	xor    bl,BYTE PTR [ebx]
  40e619:	cmp    cl,BYTE PTR [edx+0x3b]
	...
  40e62f:	add    BYTE PTR [eax+eax*8+0x1],ah
  40e633:	mov    ebx,DWORD PTR [eax+ecx*8]
  40e636:	sbb    DWORD PTR [esi-0x1b],esp
  40e639:	add    BYTE PTR ds:0x300ea89,al
  40e63f:	add    BYTE PTR [edx+0x3b],ah
  40e642:	inc    ebx
  40e643:	or     BYTE PTR [ebp+0x62064140],bl
  40e649:	rol    BYTE PTR [edx],0x0
  40e64c:	(bad)  
  40e64d:	sar    BYTE PTR [ebp+eax*2+0x6a],0x39
  40e652:	lea    eax,[edi+0x5c]
  40e655:	(bad)  
  40e657:	add    ebx,ecx
  40e659:	pop    ss
  40e65a:	lock and ebx,ebx
  40e65d:	popa   
  40e65e:	aaa    
  40e65f:	add    ah,BYTE PTR [edx-0x27]
  40e662:	bound  eax,QWORD PTR [edx+0x6a]
  40e665:	popa   
  40e666:	pop    edi
  40e667:	push   esi
  40e668:	fs (bad) 
  40e66b:	jl     0x40e68c
  40e66d:	loope  0x40e65b
  40e66f:	push   ebp
  40e670:	gs (bad) 
  40e673:	push   ebx
  40e674:	push   ebp
  40e675:	in     al,0xc7
  40e677:	adc    eax,0x4272d9a2
  40e67c:	pop    edx
  40e67d:	inc    ebx
  40e67e:	jmp    0x40e69b
  40e680:	(bad)  
  40e681:	push   esi
  40e682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e683:	add    ebx,DWORD PTR [edi+0x2b]
  40e686:	lock add esp,DWORD PTR [edx+0x29]
  40e68a:	aas    
  40e68b:	punpckhdq mm5,mm3
  40e68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e68f:	add    ebp,ecx
  40e691:	push   ds
  40e692:	loopne 0x40e6e5
	...
  40e6a8:	out    0x57,eax
  40e6aa:	xlat   BYTE PTR ds:[ebx]
  40e6ab:	add    DWORD PTR [edx-0x27],esp
  40e6ae:	mov    bh,0x1b
  40e6b0:	mov    esp,0x8a03a787
  40e6b5:	ds pop ecx
  40e6b7:	inc    esp
  40e6b8:	bound  eax,QWORD PTR [ecx-0x5f]
  40e6bb:	jb     0x40e6ea
  40e6bd:	(bad)  [edi-0x17e74cc9]
  40e6c3:	sbb    edx,DWORD PTR [eax+ecx*4-0x6b5fc59]
  40e6ca:	cwde   
  40e6cb:	inc    ebx
  40e6cc:	bound  eax,QWORD PTR [ecx-0x3d]
  40e6cf:	jae    0x40e656
  40e6d1:	fnstcw WORD PTR [edi]
  40e6d3:	lods   eax,DWORD PTR ds:[esi]
  40e6d4:	push   cs
  40e6d5:	sbb    eax,ebp
  40e6d7:	sbb    esi,DWORD PTR [eax-0x20fbd885]
  40e6dd:	push   ss
  40e6de:	in     al,dx
  40e6df:	sbb    ebx,ebx
  40e6e1:	mov    al,BYTE PTR [eax]
  40e6e3:	sub    DWORD PTR [esi+0x29],esp
  40e6e6:	(bad)  
  40e6e7:	sbb    BYTE PTR [edx+0x62],ah
  40e6ea:	dec    esi
  40e6eb:	icebp  
  40e6ec:	out    0x99,al
  40e6ee:	xor    al,0x70
  40e6f0:	pusha  
  40e6f1:	bound  ecx,QWORD PTR [esi-0x1f]
  40e6f4:	jbe    0x40e683
  40e6f6:	aaa    
  40e6f7:	lock ficom WORD PTR es:[ebx-0x3cd0e557]
  40e6ff:	icebp  
  40e700:	popa   
  40e701:	daa    
  40e702:	mov    bh,BYTE PTR [eax-0x22]
  40e705:	push   ss
  40e706:	add    eax,0x48d89221
  40e70b:	fadd   QWORD PTR [eax]
	...
  40e71d:	add    BYTE PTR [eax],al
  40e71f:	add    BYTE PTR [ebp+0x60],bl
  40e722:	inc    esi
  40e723:	icebp  
  40e724:	fiadd  WORD PTR [ecx+eax*1]
  40e727:	fnsave ds:0x914e30cc
  40e72d:	jmp    0x326a96bb
  40e732:	or     BYTE PTR [ecx],0x5e
  40e735:	sub    eax,edx
  40e737:	push   0xfffffff5
  40e739:	loopne 0x40e78c
  40e73b:	xchg   esp,eax
  40e73c:	mov    bl,0x24
  40e73e:	(bad)  
  40e73f:	popf   
  40e740:	sub    eax,0xba1089f9
  40e745:	in     eax,0x44
  40e747:	sti    
  40e748:	mov    eax,ds:0xee1189d9
  40e74d:	scas   eax,DWORD PTR es:[edi]
  40e74e:	mov    esi,DWORD PTR [esi+0x70f15fba]
  40e754:	xor    eax,0x256010f5
  40e759:	cmc    
  40e75a:	sbb    BYTE PTR [eax+0x8],ch
  40e75d:	iret   
  40e75e:	add    cl,ch
  40e760:	popa   
  40e761:	fadd   QWORD PTR [ebp+0xd95e6e]
  40e767:	bound  edi,QWORD PTR [ebx-0x1f]
  40e76a:	std    
  40e76b:	push   ebp
  40e76c:	ret    0x81ec
  40e76f:	add    dl,bh
  40e771:	fstp   TBYTE PTR [edx+0xd8ba04]
  40e777:	call   0x3ea8f6
  40e77c:	(bad)  
  40e77d:	xchg   esp,eax
  40e77e:	je     0x40e7f7
  40e780:	dec    esp
  40e781:	je     0x40e7f4
  40e783:	and    al,0x0
	...
  40e795:	add    BYTE PTR [eax],al
  40e797:	add    BYTE PTR [ebx+0x73244a51],dh
  40e79d:	jo     0x40e7d0
  40e79f:	fimul  WORD PTR [ebx-0x608b7628]
  40e7a5:	call   0xf5b0a82e
  40e7aa:	jg     0x40e828
  40e7ac:	das    
  40e7ad:	loopne 0x40e7af
  40e7af:	add    DWORD PTR [ebx-0x28],ecx
  40e7b2:	jl     0x40e7cb
  40e7b4:	shr    BYTE PTR [ecx],1
  40e7b6:	and    eax,0x321b0824
  40e7bb:	leave  
  40e7bc:	mov    ds:0x4b01cd30,eax
  40e7c1:	dec    edi
  40e7c2:	dec    ebp
  40e7c3:	or     BYTE PTR [eax+0xf59857d],dh
  40e7c9:	outs   dx,DWORD PTR ds:[esi]
  40e7ca:	or     BYTE PTR [ebx-0x1753032],cl
  40e7d0:	cmp    eax,0x7e011515
  40e7d5:	je     0x40e848
  40e7d7:	sub    BYTE PTR [eax+0xa6a091a],dl
  40e7dd:	lock mov WORD PTR [edx-0x76972835],?
  40e7e4:	sub    DWORD PTR ds:0x477e6801,edx
  40e7ea:	ds add al,bh
  40e7ed:	sbb    ch,BYTE PTR [ecx+0x68]
  40e7f0:	cmp    al,0x15
  40e7f2:	add    edi,edi
  40e7f4:	imul   esi,DWORD PTR [ebp+ecx*2+0x8],0x38
  40e7f9:	mov    WORD PTR ds:0x85,ds
	...
  40e80f:	add    BYTE PTR [edx-0x7e],ah
  40e812:	not    BYTE PTR [ecx+eiz*4+0x6573a6e6]
  40e819:	inc    edi
  40e81a:	mov    bh,0xe7
  40e81c:	popf   
  40e81d:	or     eax,DWORD PTR [eax+eax*1]
  40e820:	jmp    0x15008198
  40e825:	rol    DWORD PTR [ecx],0x5f
  40e828:	sub    al,0x15
  40e82a:	jnp    0x40e7ee
  40e82c:	sub    DWORD PTR [edi],edi
  40e82e:	mov    esi,0x1b9a00b
  40e833:	push   ebp
  40e834:	jmp    0x5e856386
  40e839:	inc    edi
  40e83a:	push   ecx
  40e83b:	or     bl,ah
  40e83d:	pop    ebp
  40e83e:	stc    
  40e83f:	add    DWORD PTR [edx-0x40],esp
  40e842:	cmp    BYTE PTR [edi-0xf861d7a],0xb2
  40e849:	inc    ebp
  40e84a:	jns    0x40e843
  40e84c:	inc    edi
  40e84d:	sub    al,0xa7
  40e84f:	out    0xac,eax
  40e851:	xor    BYTE PTR ds:0x2e00df00,al
  40e857:	pop    ds
  40e858:	fnstcw WORD PTR [edx-0xb]
  40e85b:	mov    edi,ss
  40e85d:	sbb    BYTE PTR [ecx-0x1c9e202],ch
  40e863:	inc    eax
  40e864:	mov    dl,0x37
  40e866:	lds    ecx,FWORD PTR [edx-0x17ae4364]
  40e86c:	adc    ebp,ebx
  40e86e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e86f:	(bad)  
  40e870:	out    0x0,al
  40e872:	add    eax,DWORD PTR cs:[eax]
	...
  40e885:	add    BYTE PTR [eax],al
  40e887:	add    ch,dh
  40e889:	jb     0x40e884
  40e88b:	xor    ah,BYTE PTR [edx]
  40e88d:	jae    0x40e84b
  40e88f:	rcr    DWORD PTR [edx-0x40],0xf2
  40e893:	mov    edi,0xfff5fe22
  40e898:	cs aaa 
  40e89a:	xchg   esi,eax
  40e89b:	cmp    BYTE PTR [esi+0x2c5117d9],0x22
  40e8a2:	sbb    ecx,ecx
  40e8a4:	dec    ebx
  40e8a5:	frstor [edi+edi*1-0x6a]
  40e8a9:	cmp    BYTE PTR es:[ecx-0x55],bh
  40e8ad:	pop    esi
  40e8ae:	mov    eax,0x70a9067b
  40e8b3:	inc    edi
  40e8b4:	mov    dh,0x60
  40e8b6:	adc    al,0xcc
  40e8b8:	xchg   esp,eax
  40e8b9:	in     al,0xf
  40e8bb:	push   cs
  40e8bc:	and    bl,cl
  40e8be:	push   0xffffffc0
  40e8c0:	pop    ecx
  40e8c1:	pop    esp
  40e8c2:	sub    al,0xd4
  40e8c4:	jmp    0x8ecd:0xc89c802c
  40e8cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8cc:	loope  0x40e867
  40e8ce:	sti    
  40e8cf:	xor    DWORD PTR [ebx],edx
  40e8d1:	and    ch,BYTE PTR [ebp+0x37]
  40e8d4:	xor    al,cl
  40e8d6:	xcrypt-cbc (bad)
  40e8d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8d8:	push   esp
  40e8d9:	retf   0xc463
  40e8dc:	shl    DWORD PTR ds:0x5c5e2673,1
  40e8e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8e3:	rcl    DWORD PTR [edx+edx*4+0x51ed97ac],cl
  40e8ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8eb:	add    eax,DWORD PTR [eax]
	...
  40e8fd:	add    BYTE PTR [eax],al
  40e8ff:	add    bl,bl
  40e901:	adc    edi,DWORD PTR [eax]
  40e903:	jnp    0x40e88b
  40e905:	lds    edi,FWORD PTR [esi]
  40e907:	(bad)  
  40e909:	out    0xa7,eax
  40e90b:	add    ebp,ebx
  40e90d:	adc    esi,DWORD PTR [eax]
  40e90f:	jg     0x40e8de
  40e911:	inc    esp
  40e912:	hlt    
  40e913:	sbb    eax,0xa5a74ce1
  40e918:	cdq    
  40e919:	inc    ebp
  40e91a:	in     al,dx
  40e91b:	inc    ebx
  40e91c:	jmp    0x40e931
  40e91e:	adc    BYTE PTR [ebp+0x3f74d577],ah
  40e924:	neg    BYTE PTR [ebp+0x2d]
  40e927:	jnp    0x40e990
  40e929:	rol    DWORD PTR [eax],0x98
  40e92c:	cmp    bl,al
  40e92e:	add    BYTE PTR [eax+0x576c524],dh
  40e934:	dec    ebx
  40e935:	adc    eax,0x883951d9
  40e93a:	inc    eax
  40e93b:	jmp    0x29f33d99
  40e940:	data16 es (bad) 
  40e943:	stc    
  40e944:	(bad)  
  40e945:	sbb    DWORD PTR ds:0x83d9dd6a,ecx
  40e94b:	test   eax,0xe8b1d745
  40e950:	into   
  40e951:	adc    al,0xed
  40e953:	mov    cl,0x6
  40e955:	or     al,BYTE PTR [ecx]
  40e957:	ins    BYTE PTR es:[edi],dx
  40e958:	xor    al,0xa9
  40e95a:	call   0xfe0ba942
  40e95f:	bound  ebp,QWORD PTR [eiz*4+0xfd48]
	...
  40e976:	add    BYTE PTR [eax],al
  40e978:	bound  esp,QWORD PTR [ecx]
  40e97a:	je     0x40e96d
  40e97c:	ficom  DWORD PTR ds:0x45c081d9
  40e982:	add    cl,ch
  40e984:	loop   0x40e9cb
  40e986:	shr    ecx,1
  40e988:	jne    0x40e95c
  40e98a:	std    
  40e98b:	aam    0x11
  40e98d:	enter  0x1513,0x50
  40e991:	sbb    DWORD PTR [ecx],eax
  40e993:	scas   al,BYTE PTR es:[edi]
  40e994:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e995:	push   ebx
  40e996:	shl    DWORD PTR [edx-0x16fb6518],0xcf
  40e99d:	fst    QWORD PTR [eax]
  40e99f:	(bad)  
  40e9a0:	push   ebp
  40e9a1:	fcos   
  40e9a3:	mov    bl,0x4
  40e9a5:	das    
  40e9a6:	mov    edi,0x11d6f75
  40e9ab:	mov    bh,0xc6
  40e9ad:	in     eax,dx
  40e9ae:	loopne 0x40e9ab
  40e9b0:	mov    eax,ds:0x56f9a0d9
  40e9b5:	sbb    eax,0xdb930001
  40e9ba:	jae    0x40e9db
  40e9bc:	dec    eax
  40e9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9be:	ins    DWORD PTR es:[edi],dx
  40e9bf:	pop    ecx
  40e9c0:	pop    es
  40e9c1:	fld    QWORD PTR [eax]
  40e9c3:	or     al,0xba
  40e9c5:	xchg   BYTE PTR [esp+esi*2],al
  40e9c8:	and    dl,BYTE PTR [ecx]
  40e9ca:	add    DWORD PTR [eax],eax
  40e9cc:	add    al,0xd3
  40e9ce:	adc    al,0x6f
  40e9d0:	xchg   ebp,ebx
  40e9d2:	xor    al,0xb8
  40e9d4:	jnp    0x40e9b3
  40e9d6:	mov    ds:0x1110c10,al
  40e9db:	push   esi
	...
  40e9f0:	fadd   st(2),st
  40e9f2:	fst    DWORD PTR [edx]
  40e9f4:	dec    ebx
  40e9f5:	fstp   QWORD PTR [esi-0x3d]
  40e9f8:	mov    eax,0xea8b5710
  40e9fd:	jne    0x40ea68
  40e9ff:	test   BYTE PTR [ebx-0x4cf93a24],cl
  40ea05:	push   esp
  40ea06:	cmp    eax,0x8c878800
  40ea0b:	inc    esi
  40ea0c:	arpl   WORD PTR ds:0xddc39e88,cx
  40ea12:	add    BYTE PTR [eax],al
  40ea14:	ret    0x995b
  40ea17:	add    BYTE PTR [ebx],bh
  40ea19:	fadd   st(5),st
  40ea1b:	xchg   bh,al
  40ea1d:	fld    QWORD PTR [eax]
  40ea1f:	add    BYTE PTR [edi+0x56],dl
  40ea22:	cmp    eax,0x9d5bc300
  40ea27:	add    BYTE PTR [ebx],bh
  40ea29:	fdiv   st(5),st
  40ea2b:	adc    eax,0x3dce3f
  40ea30:	xchg   edx,eax
  40ea31:	pop    ebx
  40ea32:	lea    eax,[eax]
  40ea34:	or     ebx,esp
  40ea36:	mov    esi,eax
  40ea38:	fld    QWORD PTR [esi]
  40ea3a:	ret    0x9057
  40ea3d:	data16 mov WORD PTR [edi-0x3d],es
  40ea41:	or     eax,esi
  40ea43:	pop    es
  40ea44:	bound  ecx,QWORD PTR [edx]
  40ea46:	mov    bh,BYTE PTR [edi]
  40ea48:	(bad)  
  40ea49:	xlat   BYTE PTR ds:[ebx]
  40ea4a:	neg    DWORD PTR [edi]
  40ea4c:	push   eax
  40ea4d:	jb     0x40ea50
  40ea4f:	mov    esp,ebp
  40ea51:	and    DWORD PTR ds:0x0,eax
	...
  40ea67:	add    BYTE PTR [edx+0x35],ah
  40ea6a:	lds    esi,FWORD PTR [ebx+0x65]
  40ea6d:	bound  esp,QWORD PTR [edx+0x41c45214]
  40ea73:	add    BYTE PTR [esi*1-0x4d9d6ca5],dl
  40ea7a:	add    DWORD PTR [ebx+0x34077e9c],ecx
  40ea80:	fcomi  st,st(1)
  40ea82:	add    al,0xe8
  40ea84:	inc    ebx
  40ea85:	mov    esp,0xffe90001
  40ea8a:	or     bh,al
  40ea8c:	fs push cs
  40ea8e:	ja     0x40eacf
  40ea90:	bound  ebp,QWORD PTR [edx+0x5c]
  40ea93:	jnp    0x40eaf8
  40ea95:	mov    dl,0x8e
  40ea97:	into   
  40ea98:	mov    ah,BYTE PTR [ecx+0x6f6dff85]
  40ea9e:	inc    ebp
  40ea9f:	and    al,0x56
  40eaa1:	mov    cl,0x3f
  40eaa3:	je     0x40eb0a
  40eaa5:	dec    ebx
  40eaa6:	shl    edi,cl
  40eaa8:	add    ebp,ecx
  40eaaa:	add    al,0x0
  40eaac:	fnstcw WORD PTR [edi+0x42]
  40eaaf:	ret    0xb05e
  40eab2:	ss push esi
  40eab4:	dec    edx
  40eab5:	jmp    0x2416:0x2f6200ea
  40eabc:	pop    esi
  40eabd:	cmp    edx,DWORD PTR [ecx]
  40eabf:	jo     0x40ea4c
  40eac1:	je     0x40eac4
  40eac3:	mov    bh,BYTE PTR [edx]
  40eac5:	or     BYTE PTR ds:0x8600e930,dh
  40eacb:	fiadd  DWORD PTR [eax]
	...
  40eadd:	add    BYTE PTR [eax],al
  40eadf:	add    BYTE PTR [esi-0x710a7756],dl
  40eae5:	fprem  
  40eae7:	mov    ds:0x8eebfd71,al
  40eaec:	dec    cx
  40eaee:	mov    cl,0x47
  40eaf0:	bound  esi,QWORD PTR [ebx]
  40eaf2:	jmp    0xe79f05a2
  40eaf7:	add    ecx,edx
  40eaf9:	pop    ds
  40eafa:	mov    BYTE PTR [edx+eiz*2],0x52
  40eafe:	sub    eax,0xe39b2941
  40eb03:	add    ebp,DWORD PTR [edi]
  40eb05:	push   edx
  40eb06:	rol    DWORD PTR [ebp+0x3771d5c9],cl
  40eb0c:	sub    bh,BYTE PTR gs:[esi]
  40eb0f:	lea    esi,[edx-0x13ee4cf5]
  40eb15:	call   0x4bf4:0x4a9dac6a
  40eb1c:	push   cs
  40eb1d:	in     eax,0x1f
  40eb1f:	pop    ss
  40eb20:	daa    
  40eb21:	push   esp
  40eb22:	and    al,0xa1
  40eb24:	adc    eax,0x2d9c2c54
  40eb29:	push   esp
  40eb2a:	and    al,0x98
  40eb2c:	and    eax,0x13101cc6
  40eb31:	push   edx
  40eb32:	popf   
  40eb33:	lods   al,BYTE PTR ds:[esi]
  40eb34:	jo     0x40eb12
  40eb36:	out    0x3,eax
  40eb38:	dec    ecx
  40eb39:	rep ins BYTE PTR es:[edi],dx
  40eb3b:	inc    edi
  40eb3c:	push   ebp
  40eb3d:	sub    DWORD PTR [edx],eax
  40eb3f:	add    al,0xb8
  40eb41:	fldcw  WORD PTR [esi+0x17]
	...
  40eb58:	push   esi
  40eb59:	sub    BYTE PTR [ebx-0x2e],dh
  40eb5c:	inc    ebp
  40eb5d:	or     esp,ebp
  40eb5f:	add    esp,DWORD PTR [edx-0x4e]
  40eb62:	cld    
  40eb63:	sub    eax,0xf7d4c662
  40eb68:	fcom   DWORD PTR [esi-0x398de8ba]
  40eb6e:	mov    ah,0xf
  40eb70:	adc    eax,0xb9e1014c
  40eb75:	js     0x40eb78
  40eb77:	jmp    0x6e113edd
  40eb7c:	mov    ah,0x49
  40eb7e:	sbb    ebp,DWORD PTR [ecx-0x29]
  40eb81:	xlat   BYTE PTR ds:[ebx]
  40eb82:	jae    0x40eb64
  40eb84:	bts    DWORD PTR [eax+edi*8-0x1f],esi
  40eb89:	mov    edi,0x596d7d01
  40eb8e:	cli    
  40eb8f:	call   0x2b3fc201
  40eb94:	out    0xc2,al
  40eb96:	add    DWORD PTR [ebx-0xe],edi
  40eb99:	jne    0x40eb9a
  40eb9b:	inc    esi
  40eb9c:	jg     0x40eb2e
  40eb9e:	ret    0x61f9
  40eba1:	or     eax,ecx
  40eba3:	ret    0x5acb
  40eba6:	in     al,dx
  40eba7:	in     eax,dx
  40eba8:	outs   dx,BYTE PTR ds:[esi]
  40eba9:	sub    al,0x8a
  40ebab:	adc    al,0x76
  40ebad:	and    BYTE PTR [ebp-0x17],al
  40ebb0:	pop    ebx
  40ebb1:	cs mov ecx,0x11d5af1
  40ebb7:	scas   al,BYTE PTR es:[edi]
  40ebb8:	rcl    DWORD PTR [edx+0x7c],1
  40ebbb:	int    0x0
	...
  40ebcd:	add    BYTE PTR [eax],al
  40ebcf:	add    BYTE PTR [ebp+0x556ac80a],dl
  40ebd5:	std    
  40ebd6:	cmp    al,0xd
  40ebd8:	fbstp  TBYTE PTR [ebp-0x1585e278]
  40ebde:	je     0x40eba3
  40ebe0:	out    0x40,al
  40ebe2:	and    eax,0x83d493bd
  40ebe7:	sub    eax,0x6e00d961
  40ebec:	ins    DWORD PTR es:[edi],dx
  40ebed:	std    
  40ebee:	inc    esp
  40ebef:	jb     0x40eb96
  40ebf1:	std    
  40ebf2:	inc    esp
  40ebf3:	mov    ecx,0xaa55a00e
  40ebf8:	jbe    0x40ec4a
  40ebfa:	retf   
  40ebfb:	inc    ecx
  40ebfc:	xor    al,0xc4
  40ebfe:	std    
  40ebff:	add    BYTE PTR [esp+ebx*2-0x4e81f043],ah
  40ec06:	add    BYTE PTR [eax],al
  40ec08:	sti    
  40ec09:	add    DWORD PTR [edx-0x75],edx
  40ec0c:	data16 jo 0x40ebe7
  40ec0f:	or     DWORD PTR [ebx],0xffffffd9
  40ec12:	push   ebp
  40ec13:	jmp    FWORD PTR [esi-0x5ea1758]
  40ec19:	fadd   DWORD PTR [eax]
  40ec1b:	mov    edi,DWORD PTR [edi-0x7fccc244]
  40ec21:	sbb    eax,0x4cc41838
  40ec26:	mov    esi,0x84e97b84
  40ec2b:	add    DWORD PTR [edx+0x7a5100d8],edi
  40ec31:	or     al,0x52
  40ec33:	mov    eax,DWORD PTR [eax]
	...
  40ec45:	add    BYTE PTR [eax],al
  40ec47:	add    BYTE PTR [esi],al
  40ec49:	jbe    0x40ec74
  40ec4b:	cmp    DWORD PTR [ebx+0x5f4487d8],0xffffffa1
  40ec52:	test   al,al
  40ec54:	xchg   esp,eax
  40ec55:	pop    esp
  40ec56:	out    0x0,eax
  40ec58:	mov    ebx,eax
  40ec5a:	mov    edx,DWORD PTR [eax+0xddfb]
  40ec60:	add    al,BYTE PTR [ecx]
  40ec62:	and    eax,0x8a1f0814
  40ec67:	add    BYTE PTR [ebx-0x1f0fe28],cl
  40ec6d:	xchg   ecx,eax
  40ec6e:	std    
  40ec6f:	(bad)  
  40ec70:	jnp    0x40ecdb
  40ec72:	inc    ebp
  40ec73:	jo     0x40ec47
  40ec75:	sub    DWORD PTR ds:0x4516d01c,esp
  40ec7b:	shl    edx,0xd7
  40ec7e:	not    cl
  40ec80:	imul   edx,DWORD PTR [ebp+0x59],0xe05d3c24
  40ec87:	add    DWORD PTR [esp+eiz*2+0x7e6288fe],edx
  40ec8e:	in     eax,0x1b
  40ec90:	(bad)  [ebp-0x1b]
  40ec93:	and    ebp,edi
  40ec95:	mov    DWORD PTR [ecx],edx
  40ec97:	push   ecx
  40ec98:	mov    dl,0x3
  40ec9a:	sbb    DWORD PTR [esi+eax*2],esp
  40ec9d:	arpl   WORD PTR [ebx+ecx*4],si
  40eca0:	pop    ss
  40eca1:	sbb    ah,dl
  40eca3:	or     esp,DWORD PTR [edx-0x4e]
  40eca6:	test   DWORD PTR [edi+0x4b8a4f6e],edi
	...
  40ecc0:	inc    esi
  40ecc1:	(bad)  
  40ecc2:	nop
  40ecc3:	inc    ebx
  40ecc4:	ds retf 0xe831
  40ecc8:	cmp    eax,DWORD PTR [ecx]
  40ecca:	add    eax,0xe565eb00
  40eccf:	and    ebx,ecx
  40ecd1:	ins    DWORD PTR es:[edi],dx
  40ecd2:	in     eax,0x1b
  40ecd4:	fnstenv [esi-0x2b]
  40ecd7:	cmp    ch,BYTE PTR [edi]
  40ecd9:	push   es
  40ecda:	sbb    DWORD PTR [edi-0x17],edx
  40ecdd:	push   es
  40ecde:	fld    QWORD PTR [edx-0x1329ba]
  40ece4:	fidivr WORD PTR [eax+0x15]
  40ece7:	dec    edi
  40ece8:	loop   0x40ed07
  40ecea:	jmp    0x4d4f4f0e
  40ecef:	cmp    esp,DWORD PTR [ebx]
  40ecf1:	stos   BYTE PTR es:[edi],al
  40ecf2:	push   cs
  40ecf3:	inc    ebx
  40ecf4:	and    ebp,DWORD PTR [edx-0x6a0900cf]
  40ecfa:	std    
  40ecfb:	mov    BYTE PTR [esi],bl
  40ecfd:	sahf   
  40ecfe:	jmp    0x9f06e101
  40ed03:	adc    al,0x12
  40ed05:	int3   
  40ed06:	inc    ecx
  40ed07:	add    cl,ch
  40ed09:	in     al,0xe8
  40ed0b:	sub    ebp,ecx
  40ed0d:	out    dx,eax
  40ed0e:	fmul   QWORD PTR [edx-0x7d1e6b62]
  40ed14:	push   ds
  40ed15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed16:	mov    WORD PTR [edi+0x5a],cs
  40ed19:	fnstcw WORD PTR [ecx-0x18778d55]
  40ed1f:	add    edi,DWORD PTR [ecx]
  40ed21:	in     al,dx
  40ed22:	push   esi
  40ed23:	clc    
	...
  40ed38:	cdq    
  40ed39:	out    0xa7,eax
  40ed3b:	add    ebx,DWORD PTR [edi-0x44]
  40ed3e:	jmp    0x8182:0xe14d6203
  40ed45:	std    
  40ed46:	or     eax,DWORD PTR [ebx+ebx*8]
  40ed49:	sbb    eax,0xd18bec04
  40ed4e:	je     0x40ed97
  40ed50:	ds icebp 
  40ed52:	mov    bh,0x29
  40ed54:	xchg   dl,al
  40ed56:	fwait
  40ed57:	out    0xa1,eax
  40ed59:	sub    cl,BYTE PTR [edi]
  40ed5b:	mov    ch,0xe8
  40ed5d:	sbb    eax,0x91e8d7cc
  40ed62:	psadbw mm1,QWORD PTR [ebx-0x27]
  40ed66:	out    0x83,eax
  40ed68:	dec    ecx
  40ed69:	std    
  40ed6a:	fiadd  DWORD PTR [ebx]
  40ed6c:	aaa    
  40ed6d:	out    0xe6,al
  40ed6f:	sbb    BYTE PTR [esi+0x1d],bh
  40ed72:	fistp  WORD PTR [eax]
  40ed74:	xchg   BYTE PTR ds:0x1d7e18d7,bl
  40ed7a:	iret   
  40ed7b:	sbb    BYTE PTR [esi+0x1d],al
  40ed7e:	pop    ds
  40ed7f:	popf   
  40ed80:	scas   eax,DWORD PTR es:[edi]
  40ed81:	and    bl,BYTE PTR [esi]
  40ed83:	aas    
  40ed84:	sub    DWORD PTR [esi-0x55],edx
  40ed87:	add    BYTE PTR [eax-0x16c9181f],ah
  40ed8d:	mov    ch,0xa6
  40ed8f:	pop    ss
  40ed90:	pop    edx
  40ed91:	ret    0xf814
  40ed94:	ins    BYTE PTR es:[edi],dx
  40ed95:	dec    esp
  40ed96:	clc    
  40ed97:	pushf  
  40ed98:	out    dx,al
  40ed99:	aam    0x8e
  40ed9b:	pop    ss
	...
  40edb0:	push   0x28
  40edb2:	nop
  40edb3:	aaa    
  40edb4:	push   esp
  40edb5:	ret    0x3f7e
  40edb8:	and    ch,ch
  40edba:	add    cl,ch
  40edbc:	loop   0x40ed6b
  40edbe:	and    BYTE PTR [edx],bl
  40edc0:	jne    0x40ee10
  40edc2:	out    0x72,eax
  40edc4:	xchg   edx,eax
  40edc5:	std    
  40edc6:	xor    al,0xb7
  40edc8:	jbe    0x40ee26
  40edca:	(bad)  
  40edcb:	fisttp QWORD PTR [esi+ecx*2+0x5c]
  40edcf:	add    eax,0xd449aa6
  40edd4:	push   es
  40edd5:	sbb    eax,DWORD PTR [ebp+edx*4+0x61]
  40edd9:	call   0xe900:0xd70a0d44
  40ede0:	popa   
  40ede1:	retf   
  40ede2:	shr    eax,0x4c
  40ede5:	jecxz  0x40ed68
  40ede7:	and    bl,BYTE PTR [edx+0x4b]
  40edea:	sbb    BYTE PTR [eax+0x9],ch
  40eded:	cmp    al,BYTE PTR [ecx]
  40edef:	xchg   ebp,eax
  40edf0:	popa   
  40edf1:	dec    esp
  40edf2:	adc    BYTE PTR [eax],bl
  40edf4:	or     ecx,DWORD PTR [edi]
  40edf6:	imul   ebp,ecx,0xffffffda
  40edf9:	test   al,0x51
  40edfb:	mov    edx,0x2177b998
  40ee00:	popa   
  40ee01:	fldl2t 
  40ee03:	icebp  
  40ee04:	sub    cl,BYTE PTR [esi-0x2f]
  40ee07:	shr    eax,1
  40ee09:	push   ebx
  40ee0a:	add    ch,cl
  40ee0c:	fidivr DWORD PTR ds:0xcbb31125
  40ee12:	push   esi
  40ee13:	sbb    BYTE PTR [eax],al
	...
  40ee25:	add    BYTE PTR [eax],al
  40ee27:	add    cl,ch
  40ee29:	adc    eax,0x15dd3125
  40ee2e:	and    eax,0x232f4e2d
  40ee33:	pop    ss
  40ee34:	aaa    
  40ee35:	sub    BYTE PTR [edx+0x13c5c9b4],cl
  40ee3b:	jmp    0xcd853ea1
  40ee40:	gs dec esi
  40ee42:	inc    esp
  40ee43:	lds    edi,FWORD PTR ds:0x27007452
  40ee49:	lds    ecx,FWORD PTR [eax-0x775ad88c]
  40ee4f:	inc    esp
  40ee50:	pop    ss
  40ee51:	mov    eax,ds:0xdd4ba3e8
  40ee56:	add    BYTE PTR [ebx+0x3335b93f],cl
  40ee5c:	mov    al,ds:0x57448c09
  40ee61:	mov    ebp,0xb8c78d4d
  40ee66:	sub    eax,0x56b03150
  40ee6b:	mov    edi,0xfb0525b8
  40ee71:	fadd   QWORD PTR [eax]
  40ee73:	call   esi
  40ee75:	add    al,0x82
  40ee77:	clc    
  40ee78:	or     ch,cl
  40ee7a:	add    eax,0xa733b33
  40ee7f:	add    ebx,edi
  40ee81:	fcom   QWORD PTR [ecx+0x51]
  40ee84:	sbb    BYTE PTR ds:0x22f2fb40,ah
  40ee8b:	push   ebx
	...
  40eea0:	hlt    
  40eea1:	or     ecx,DWORD PTR [edx+0x153f63cd]
  40eea7:	add    bl,cl
  40eea9:	push   ecx
  40eeaa:	pop    ecx
  40eeab:	and    al,0x83
  40eead:	test   al,0xc8
  40eeaf:	test   ebx,edi
  40eeb1:	aam    0x44
  40eeb3:	(bad)  [eax+0x6b]
  40eeb6:	push   ebx
  40eeb7:	push   ecx
  40eeb8:	add    bl,BYTE PTR [ecx]
  40eeba:	and    eax,0x25190e48
  40eebf:	inc    esp
  40eec0:	imul   ebp,ebp,0x21
  40eec3:	add    BYTE PTR [ebx+0x5c],bh
  40eec6:	add    DWORD PTR [si+0x6],edx
  40eeca:	mov    cl,ch
  40eecc:	shr    edx,cl
  40eece:	adc    eax,DWORD PTR [eax]
  40eed0:	jnp    0x40ef21
  40eed2:	dec    ecx
  40eed3:	and    al,0x62
  40eed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eed6:	das    
  40eed7:	xor    esi,DWORD PTR [eax]
  40eed9:	xor    eax,0x8c9e0ec5
  40eede:	xor    ecx,DWORD PTR [ecx-0x7322695a]
  40eee4:	sahf   
  40eee5:	mov    es,WORD PTR [ecx+0x50]
  40eee8:	retf   0x1b1
  40eeeb:	add    dl,ah
  40eeed:	stos   DWORD PTR es:[edi],eax
  40eeee:	add    al,0x57
  40eef0:	fld    TBYTE PTR [ebp-0x23]
  40eef3:	push   ebx
  40eef4:	xchg   ebx,eax
  40eef5:	cmp    ecx,eax
  40eef7:	out    0xa9,eax
  40eef9:	lds    eax,FWORD PTR [ecx]
  40eefb:	add    cl,ch
  40eefd:	test   ebp,ebx
  40eeff:	aaa    
  40ef00:	push   ecx
  40ef01:	in     al,0x7f
  40ef03:	mov    edi,0x0
	...
  40ef18:	push   ebp
  40ef19:	outs   dx,BYTE PTR ds:[esi]
  40ef1a:	retf   
  40ef1b:	mov    BYTE PTR [esi-0x5977032a],ah
  40ef21:	mov    ds,ecx
  40ef23:	imul   esp,DWORD PTR [ebx-0x7f],0x963e4388
  40ef2a:	xor    DWORD PTR [edx+0x7e],ebp
  40ef2d:	mov    BYTE PTR [edx],dh
  40ef2f:	push   ecx
  40ef30:	jmp    0x77649c39
  40ef35:	mov    dl,0x1
  40ef37:	push   0x63
  40ef39:	popa   
  40ef3a:	mov    WORD PTR [ebx-0x7a],es
  40ef3d:	call   0x6a34:0xe67e4388
  40ef44:	dec    edi
  40ef45:	or     BYTE PTR [edx],dh
  40ef47:	push   ecx
  40ef48:	fnstenv [ecx+ebp*4+0xb]
  40ef4c:	ja     0x40ef00
  40ef4e:	add    DWORD PTR [ebx-0x750331ea],ecx
  40ef54:	(bad)  
  40ef55:	aad    0xf8
  40ef57:	mov    cl,BYTE PTR [esi]
  40ef59:	into   
  40ef5a:	inc    esp
  40ef5b:	push   eax
  40ef5c:	jge    0x40ef63
  40ef5e:	loope  0x40ef83
  40ef60:	jmp    0x40ef3a
  40ef62:	sub    esp,eax
  40ef64:	cmp    eax,eax
  40ef66:	adc    esp,eax
  40ef68:	sbb    DWORD PTR [esi+0x2b],ecx
  40ef6b:	loopne 0x40eefe
  40ef6d:	mov    esi,0xaa1e013
  40ef72:	mov    cl,0x32
  40ef74:	dec    ebp
  40ef75:	inc    esi
  40ef76:	les    esi,FWORD PTR [ebx]
  40ef78:	scas   eax,DWORD PTR es:[edi]
  40ef79:	sub    bl,BYTE PTR [esi]
  40ef7b:	fwait
	...
  40ef90:	mov    cl,0xf5
  40ef92:	scas   eax,DWORD PTR es:[edi]
  40ef93:	xor    ecx,eax
  40ef95:	iret   
  40ef96:	shr    DWORD PTR [ebx+0x3e78f74],0xd9
  40ef9d:	mov    eax,ds:0xf996be6c
  40efa2:	(bad)  
  40efa3:	leave  
  40efa4:	std    
  40efa5:	push   edx
  40efa6:	mov    edi,0x2c526204
  40efab:	stos   DWORD PTR es:[edi],eax
  40efac:	loope  0x40efef
  40efae:	jmp    0x44ed8b6
  40efb3:	in     al,0xfd
  40efb5:	inc    edx
  40efb6:	mov    al,ds:0xab526204
  40efbb:	fild   WORD PTR [ecx-0x4f]
  40efbe:	cdq    
  40efbf:	sbb    esp,DWORD PTR [ebx-0x27]
  40efc2:	(bad)  
  40efc3:	retf   0x32bd
  40efc6:	add    BYTE PTR [edx+eiz*2],0x52
  40efca:	sub    bh,BYTE PTR [edx]
  40efcc:	and    al,0x1c
  40efce:	xchg   ebx,eax
  40efcf:	xchg   BYTE PTR [ecx-0x4a10d607],ah
  40efd5:	and    eax,0xb5e0a873
  40efda:	fild   WORD PTR [ebx+0x3e75db9]
  40efe0:	bound  ebp,QWORD PTR [edx]
  40efe2:	xor    DWORD PTR ss:[ebp-0x55731fbc],edx
  40efe9:	mov    esi,0x1ddaf034
  40efee:	add    DWORD PTR ds:0xd973bf7a,ecx
	...
  40f008:	fiadd  DWORD PTR [ebp+0xd]
  40f00b:	cmp    BYTE PTR [esi-0x34610115],bh
  40f011:	push   ebx
  40f012:	lock ins BYTE PTR es:[edi],dx
  40f014:	lock inc esp
  40f016:	push   es
  40f017:	(bad)  [ecx]
  40f019:	mov    cl,0x3b
  40f01b:	call   0x27cbc981
  40f020:	mov    ?,WORD PTR [ecx+0x2]
  40f023:	std    
  40f024:	dec    eax
  40f025:	xor    BYTE PTR [ecx],al
  40f027:	bound  ebp,QWORD PTR [eax]
  40f029:	mov    dh,0x17
  40f02b:	cmp    DWORD PTR [esi-0x27],esp
  40f02e:	mov    DWORD PTR [edi],ebp
  40f030:	test   dh,0xca
  40f033:	jmp    0x420f4299
  40f038:	pop    ebp
  40f039:	inc    ecx
  40f03a:	add    cl,ch
  40f03c:	cmp    DWORD PTR [esi-0x419e16d2],edi
  40f042:	adc    ecx,DWORD PTR ds:0x7900fdf4
  40f048:	popa   
  40f049:	mov    al,0xb
  40f04b:	call   0xe865c9b1
  40f050:	fstp   DWORD PTR [ecx]
  40f052:	and    eax,0x2549faf9
  40f057:	stc    
  40f058:	out    0x92,al
  40f05a:	push   0xffffffe8
  40f05c:	jmp    0xb9b1:0x60930d44
  40f063:	jbe    0x40f0c6
  40f065:	(bad)  [ecx+0x73bf34f1]
  40f06b:	stc    
	...
  40f080:	fimul  WORD PTR [ebx-0x42674718]
  40f086:	std    
  40f087:	bound  ebp,QWORD PTR [ebx+0x6156cdb5]
  40f08d:	fldl2t 
  40f08f:	add    BYTE PTR [eax],al
  40f091:	dec    ebp
  40f092:	xchg   BYTE PTR [edx+edi*2-0x27],dh
  40f096:	add    BYTE PTR [eax+0x5d],al
  40f099:	dec    esp
  40f09a:	into   
  40f09b:	mov    DWORD PTR [ebp+0x71],edi
  40f09e:	dec    eax
  40f09f:	xor    BYTE PTR [ecx-0x27],bh
  40f0a2:	mov    esi,ecx
  40f0a4:	call   FWORD PTR [ecx+0x34e31874]
  40f0aa:	leave  
  40f0ab:	add    BYTE PTR [ebx+0x4e],cl
  40f0ae:	retf   
  40f0af:	call   0x40da65
  40f0b4:	rcl    BYTE PTR [ecx-0x26c3aa1b],1
  40f0ba:	add    cl,ch
  40f0bc:	aaa    
  40f0bd:	(bad)  
  40f0be:	(bad)  
  40f0bf:	call   DWORD PTR [ebx+0x3b00d047]
  40f0c5:	push   esi
  40f0c6:	jnp    0x40f110
  40f0c8:	or     edx,DWORD PTR [eax+0x41]
  40f0cb:	and    al,0x1b
  40f0cd:	jmp    0x40f131
  40f0cf:	push   0x29
  40f0d1:	push   esp
  40f0d2:	push   ecx
  40f0d3:	and    al,0x27
  40f0d5:	add    cl,ch
  40f0d7:	mov    WORD PTR [eax-0x5074ff2a],ss
  40f0dd:	pushf  
  40f0de:	adc    DWORD PTR [edx],esi
  40f0e0:	mov    al,ds:0x3fa58
	...
  40f0f5:	add    BYTE PTR [eax],al
  40f0f7:	add    al,cl
  40f0f9:	femms  
  40f0fb:	mov    dh,0x88
  40f0fd:	push   ebx
  40f0fe:	push   ecx
  40f0ff:	and    al,0x9f
  40f101:	cli    
  40f102:	mov    DWORD PTR [esi+edi*8],ecx
  40f105:	nop
  40f106:	pop    ebp
  40f107:	inc    eax
  40f108:	mov    ebx,0xc99b6c70
  40f10d:	fmul   DWORD PTR [ebx+0x4d9c9f44]
  40f113:	lea    edi,[edi-0x47]
  40f116:	sbb    DWORD PTR [eax+0x11],edx
  40f119:	aad    0x8b
  40f11b:	inc    esp
  40f11c:	(bad)  
  40f11d:	into   
  40f11e:	sub    BYTE PTR [edx+0x3e],ch
  40f121:	add    ch,BYTE PTR [ebp+0x1b256c3]
  40f127:	sbb    DWORD PTR [esi-0x8407f5a],0xffffff9f
  40f12e:	sub    DWORD PTR [eax],eax
  40f130:	bound  esi,QWORD PTR [edx+0x456d6961]
  40f136:	inc    ecx
  40f137:	and    al,0xfa
  40f139:	add    DWORD PTR [esi+0x2e636e74],edx
  40f13f:	jo     0x40f195
  40f141:	outs   dx,DWORD PTR ds:[esi]
  40f142:	test   eax,0x9573d9b1
  40f147:	je     0x40f19f
  40f149:	loope  0x40f0d4
  40f14b:	retf   0x474a
  40f14e:	repz push DWORD PTR ds:0x5224112b
  40f155:	fistp  QWORD PTR [ecx-0x4ad528ae]
  40f15b:	inc    DWORD PTR [eax]
	...
  40f16d:	add    BYTE PTR [eax],al
  40f16f:	add    BYTE PTR ds:0xc7eaa9b2,bl
  40f175:	mov    cl,0x1
  40f177:	push   ebx
  40f178:	mov    cl,0x45
  40f17a:	xchg   BYTE PTR [edi+0x63],bh
  40f17d:	mov    dl,0x1
  40f17f:	call   0x4546a0
  40f184:	jmp    0x62422ecb
  40f189:	mov    dl,0x8a
  40f18b:	into   
  40f18c:	cli    
  40f18d:	sub    DWORD PTR [edi],ecx
  40f18f:	add    BYTE PTR [edx+0x2f],ah
  40f192:	xchg   edi,eax
  40f193:	add    DWORD PTR [ebp+0x46],esp
  40f196:	lds    eax,FWORD PTR [ebx]
  40f198:	pusha  
  40f199:	jae    0x40f1ce
  40f19b:	pop    ebx
  40f19c:	(bad)  
  40f19e:	aaa    
  40f19f:	ret    0xb256
  40f1a2:	xor    cl,BYTE PTR [ebx+0x56f99616]
  40f1a8:	jno    0x40f183
  40f1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1ab:	xor    edx,DWORD PTR [edx]
  40f1ad:	mov    esp,0x5175e053
  40f1b2:	jmp    0x6215:0x85b16329
  40f1b9:	fnstenv [edx-0x65]
  40f1bc:	fidivr WORD PTR [ebx-0x66cc00cc]
  40f1c2:	rol    BYTE PTR [edx+0x30e7bb75],0x6d
  40f1c9:	sbb    DWORD PTR [ebx],0x5
  40f1cc:	(bad)  
  40f1cd:	fnstenv [edx-0x3a]
  40f1d0:	inc    ebp
  40f1d1:	push   ecx
  40f1d2:	mov    BYTE PTR [ecx],0x0
	...
  40f1e5:	add    BYTE PTR [eax],al
  40f1e7:	add    BYTE PTR [edx+0x4e],ah
  40f1ea:	jg     0x40f16c
  40f1ec:	ds inc ebp
  40f1ee:	repz mov dl,BYTE PTR [edx+esi*4]
  40f1f2:	pop    ds
  40f1f3:	push   cs
  40f1f4:	(bad)  
  40f1f5:	fnstcw WORD PTR [ecx+0x163748c3]
  40f1fb:	mov    esi,DWORD PTR [ecx+0x2f8107f5]
  40f201:	inc    esi
  40f202:	sbb    BYTE PTR [ebx+0x3e921dc],al
  40f208:	(bad)  
  40f209:	(bad)  
  40f20b:	fidiv  WORD PTR [edi+0x65dfbbba]
  40f211:	dec    esp
  40f212:	outs   dx,BYTE PTR ds:[esi]
  40f213:	inc    ebx
  40f214:	arpl   cx,bx
  40f216:	out    0xab,eax
  40f218:	test   ch,ch
  40f21a:	jmp    0x9cdad922
  40f21f:	repnz fmul DWORD PTR [edx-0x26a821f1]
  40f226:	out    0x29,eax
  40f228:	push   0xffffffba
  40f22a:	hlt    
  40f22b:	fbstp  TBYTE PTR [ebx+0x19]
  40f22e:	call   0xd0ef5486
  40f233:	add    al,0xf5
  40f235:	sub    DWORD PTR [ecx],eax
  40f237:	call   0x66cacb9d
  40f23c:	jno    0x40f216
  40f23e:	add    cl,ch
  40f240:	mov    dl,BYTE PTR ds:0x93635b1d
  40f246:	add    eax,ebp
  40f248:	jmp    0x0:0xe85883
	...
  40f25f:	add    BYTE PTR [ecx-0x27],ah
  40f262:	mov    DWORD PTR [esi-0x168c3f4a],esi
  40f268:	popa   
  40f269:	push   esi
  40f26a:	(bad)  
  40f26b:	jmp    0x40f2cb
  40f26d:	gs shl ch,0x63
  40f271:	sbb    ebx,DWORD PTR [esi+eax*2+0x2b]
  40f275:	xchg   edi,eax
  40f276:	adc    al,0xe9
  40f278:	jmp    0x5724:0x92fd2515
  40f27f:	xor    ebx,DWORD PTR ss:[edi+0x45ef1a51]
  40f286:	and    eax,0x6ae1e9c9
  40f28b:	call   0xe9bcb499
  40f290:	popa   
  40f291:	dec    esi
  40f292:	clc    
  40f293:	ins    BYTE PTR es:[edi],dx
  40f294:	iret   
  40f295:	inc    esp
  40f296:	push   es
  40f297:	sbb    esp,DWORD PTR [esi]
  40f299:	mov    cl,0x15
  40f29b:	call   0x96cccc01
  40f2a0:	(bad)  
  40f2a1:	mov    ecx,0x8adae9fd
  40f2a6:	std    
  40f2a7:	ja     0x40f22b
  40f2a9:	mov    edx,0xa3c9e9fd
  40f2ae:	cs jmp 0x40f312
  40f2b1:	dec    esi
  40f2b2:	call   0x885b023
  40f2b7:	jb     0x40f260
  40f2b9:	mov    cl,0xa3
  40f2bb:	pushf  
  40f2bc:	popa   
  40f2bd:	fldl2t 
  40f2bf:	ss test eax,0x885b
	...
  40f2d5:	add    BYTE PTR [eax],al
  40f2d7:	add    BYTE PTR [ebx-0x4d8bff2b],bh
  40f2dd:	push   edx
  40f2de:	inc    ebx
  40f2df:	jo     0x40f323
  40f2e1:	sbb    DWORD PTR ds:0x8abb6018,esp
  40f2e7:	ret    
  40f2e8:	xor    al,BYTE PTR [edx]
  40f2ea:	and    eax,0xcc505b18
  40f2ef:	call   0x3e85cf
  40f2f4:	pop    es
  40f2f5:	xchg   esi,eax
  40f2f6:	je     0x40f31f
  40f2f8:	clc    
  40f2f9:	and    eax,DWORD PTR [esi+0x2d58b00]
  40f2ff:	jne    0x40f2c1
  40f301:	push   eax
  40f302:	push   ecx
  40f303:	and    al,0x93
  40f305:	push   eax
  40f306:	inc    ecx
  40f307:	and    al,0x5f
  40f309:	push   eax
  40f30a:	pop    es
  40f30b:	mov    DWORD PTR [ebx+0x62],edx
  40f30e:	inc    ecx
  40f30f:	and    al,0x2b
  40f311:	bound  eax,QWORD PTR [edi+0x4]
  40f314:	ret    0x89e4
  40f317:	inc    esp
  40f318:	pop    ss
  40f319:	cdq    
  40f31a:	ret    
  40f31b:	add    BYTE PTR [edx-0x7e],cl
  40f31e:	lods   al,BYTE PTR ds:[esi]
  40f31f:	sub    DWORD PTR [ebp+0x64],0xfffffffd
  40f323:	(bad)  
  40f324:	cmp    ebx,ebx
  40f326:	jae    0x40f346
  40f328:	mov    al,0x8
  40f32a:	and    eax,0x24f89018
  40f32f:	sbb    al,0x80
  40f331:	loop   0x40f2ba
  40f333:	or     BYTE PTR [eax-0x6fdfdb08],al
  40f339:	and    al,BYTE PTR ds:0x89
	...
  40f34f:	add    bl,dh
  40f351:	popa   
  40f352:	inc    ecx
  40f353:	and    al,0x67
  40f355:	ja     0x40f354
  40f357:	add    BYTE PTR [eax-0x34b1741f],ah
  40f35d:	arpl   WORD PTR [ebx+0x64],bx
  40f360:	jae    0x40f31f
  40f362:	sub    DWORD PTR [edx],eax
  40f364:	(bad)  
  40f366:	mov    ah,cl
  40f368:	mov    edx,0xc5ffb1e4
  40f36d:	inc    ebp
  40f36e:	ret    0x1373
  40f371:	push   ebx
  40f372:	xor    DWORD PTR [ebx-0x183bc471],ecx
  40f378:	mov    cl,0x28
  40f37a:	add    al,BYTE PTR [eax]
  40f37c:	fild   DWORD PTR [esi]
  40f37e:	jmp    0x17c3da9e
  40f383:	setne  BYTE PTR [eax+0x68]
  40f387:	dec    DWORD PTR [ebp+0x7ace7ec2]
  40f38d:	shl    edx,1
  40f38f:	add    DWORD PTR [edx-0x75],esp
  40f392:	inc    ebp
  40f393:	mov    esp,DWORD PTR [edx]
  40f395:	(bad)  
  40f396:	xor    al,0x51
  40f398:	(bad)  
  40f39a:	call   0xe947ceca
  40f39f:	sub    ecx,DWORD PTR [edx+0x1b]
  40f3a2:	repnz add BYTE PTR [edx+0x3b],ah
  40f3a6:	dec    ecx
  40f3a7:	and    al,0x6e
  40f3a9:	mov    DWORD PTR [ecx],ebp
  40f3ab:	or     bh,cl
  40f3ad:	lods   eax,DWORD PTR ds:[esi]
  40f3ae:	xor    al,0x8b
  40f3b0:	sub    cl,BYTE PTR [edx-0x2c]
  40f3b3:	inc    DWORD PTR [eax]
	...
  40f3c5:	add    BYTE PTR [eax],al
  40f3c7:	add    BYTE PTR ds:0x965c7cc2,dh
  40f3cd:	pop    ebx
  40f3ce:	jmp    0x40f358
  40f3d0:	lahf   
  40f3d1:	jbe    0x40f429
  40f3d3:	add    cl,BYTE PTR [ecx]
  40f3d5:	scas   al,BYTE PTR es:[edi]
  40f3d6:	int3   
  40f3d7:	pop    esp
  40f3d8:	stos   BYTE PTR es:[edi],al
  40f3d9:	xchg   edi,eax
  40f3da:	add    bh,bh
  40f3dc:	aam    0x5d
  40f3de:	add    al,0x0
  40f3e0:	bound  ebp,QWORD PTR [ebx]
  40f3e2:	ret    0x6ce7
  40f3e5:	call   0xc3f1f3f0
  40f3ea:	jle    0x40f3ba
  40f3ec:	cli    
  40f3ed:	xor    DWORD PTR [ecx],ebx
  40f3ef:	add    BYTE PTR [edx-0x27],ah
  40f3f2:	jno    0x40f3bb
  40f3f4:	cmp    al,0x17
  40f3f6:	mov    ebp,0xe7cca02e
  40f3fb:	cmp    cl,bl
  40f3fd:	les    edi,FWORD PTR [eax+0x20643134]
  40f403:	cmp    ah,cl
  40f405:	xor    esp,esp
  40f407:	add    ecx,DWORD PTR ds:0x3092e12d
  40f40d:	fucomp st(6)
  40f40f:	clc    
  40f410:	add    ebx,ecx
  40f412:	daa    
  40f413:	add    al,0xe9
  40f415:	and    ebp,esp
  40f417:	fwait
  40f418:	mov    cl,0x2c
  40f41a:	jmp    0xe074cd22
  40f41f:	sahf   
  40f420:	pop    esp
  40f421:	fs inc esp
  40f423:	mov    esi,fs
  40f425:	mov    bh,0x33
  40f427:	jmp    0x33f51212
	...
  40f440:	fistp  WORD PTR ds:0xcdf833b0
  40f446:	ds retf 
  40f448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f449:	mov    ch,0xe3
  40f44b:	add    esp,DWORD PTR [edx-0x27]
  40f44e:	xchg   esi,eax
  40f44f:	clc    
  40f450:	cmc    
  40f451:	int3   
  40f452:	daa    
  40f453:	add    al,0xad
  40f455:	bound  esi,QWORD PTR [edi-0x6e]
  40f458:	push   esi
  40f459:	push   ebp
  40f45a:	aam    0x43
  40f45c:	bound  ebx,QWORD PTR [ebp+edi*2+0x18]
  40f460:	push   ss
  40f461:	arpl   WORD PTR [edx],sp
  40f463:	fdivr  QWORD PTR ds:0x6204db53
  40f469:	bound  esi,QWORD PTR [edx-0x24b50215]
  40f46f:	add    al,0x62
  40f471:	bound  esp,QWORD PTR [edx]
  40f473:	fldcw  WORD PTR ds:0x179d03e9
  40f47a:	jae    0x40f442
  40f47c:	cwde   
  40f47d:	mov    al,ds:0xd9652b00
  40f482:	cmp    DWORD PTR ds:0xbf540be5,0xe1252a5c
  40f48c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f48d:	sub    ah,BYTE PTR ds:0xe76288d5
  40f493:	fimul  WORD PTR [ebp-0x67]
  40f496:	mov    al,0xeb
  40f498:	pusha  
  40f499:	outs   dx,DWORD PTR ds:[esi]
  40f49a:	rcl    BYTE PTR [ebx-0x6c38a2a4],0x60
  40f4a1:	sbb    al,0xc3
  40f4a3:	fiadd  WORD PTR [eax]
	...
  40f4b5:	add    BYTE PTR [eax],al
  40f4b7:	add    BYTE PTR [ebx],cl
  40f4b9:	jbe    0x40f4ec
  40f4bb:	ret    0x221e
  40f4be:	and    eax,0x88c317fa
  40f4c3:	xor    eax,0x2587c87a
  40f4c8:	jp     0x40f498
  40f4ca:	sub    DWORD PTR [ecx-0x17e3989d],0x61
  40f4d1:	(bad)  [ecx-0x750185cb]
  40f4d7:	sbb    eax,0xba89f27a
  40f4dc:	(bad)  [edx]
  40f4de:	and    eax,0x2998d6f5
  40f4e3:	stos   BYTE PTR es:[edi],al
  40f4e4:	push   0x17
  40f4e6:	dec    ecx
  40f4e7:	adc    eax,0xf8742198
  40f4ec:	mov    esp,0x71d1251a
  40f4f1:	fs inc esp
  40f4f3:	int    0xa1
  40f4f5:	or     DWORD PTR [ebp+eiz*1-0x41af09c6],ecx
  40f4fc:	push   eax
  40f4fd:	(bad)  
  40f4fe:	retf   
  40f4ff:	push   ecx
  40f500:	shl    BYTE PTR [ebp+edi*8+0x252a8f56],cl
  40f507:	or     eax,0x389e84
  40f50c:	(bad)  
  40f50d:	mov    ebp,0x34be7425
  40f512:	push   edx
  40f513:	and    al,0x67
  40f515:	aaa    
  40f516:	push   0x24
  40f518:	or     DWORD PTR [ebx],esi
  40f51a:	jb     0x40f540
	...
  40f530:	or     ebx,DWORD PTR [edi-0x31]
  40f533:	je     0x40f4f7
  40f535:	xor    al,0x42
  40f537:	and    al,0xb3
  40f539:	xor    al,BYTE PTR [eax+0x14]
  40f53c:	inc    edx
  40f53d:	iret   
  40f53e:	sbb    BYTE PTR [ecx+0x2aeac639],cl
  40f544:	inc    esi
  40f545:	and    DWORD PTR ds:0xfdefcb28,esp
  40f54b:	je     0x40f4ec
  40f54d:	sbb    DWORD PTR [esi+0x51],edx
  40f550:	adc    BYTE PTR [edi-0x1b],dh
  40f553:	repnz mov bh,0x48
  40f556:	(bad)  
  40f557:	jmp    0x40f4dd
  40f559:	dec    eax
  40f55a:	jno    0x40f580
  40f55c:	cmp    ebp,esp
  40f55e:	push   ecx
  40f55f:	push   edi
  40f560:	pop    edx
  40f561:	xor    al,0xcd
  40f563:	call   0x3f5984
  40f568:	add    DWORD PTR [edx-0x79],esi
  40f56b:	ins    BYTE PTR es:[edi],dx
  40f56c:	pop    edi
  40f56d:	scas   eax,DWORD PTR es:[edi]
  40f56e:	mov    dl,BYTE PTR [edi+ebp*1-0x53]
  40f572:	or     ecx,0x4489f86f
  40f578:	pop    ds
  40f579:	rol    DWORD PTR [ebp+0x3b],0xb
  40f57d:	int3   
  40f57e:	add    eax,DWORD PTR [eax+0x5374dee2]
  40f584:	retf   
  40f585:	pop    edi
  40f586:	add    BYTE PTR [ecx+esi*1-0x5a],dh
  40f58a:	int    0x75
  40f58c:	ds pop ecx
  40f58e:	clc    
  40f58f:	add    edi,DWORD PTR [edi]
  40f591:	sar    bl,0xc5
	...
  40f5a8:	add    al,0x13
  40f5aa:	aad    0x88
  40f5ac:	bound  ebx,QWORD PTR [esi+0x6edb11e5]
  40f5b2:	in     eax,0x13
  40f5b4:	cmp    DWORD PTR [esi-0x1b],edx
  40f5b7:	pop    ss
  40f5b8:	gs inc esi
  40f5ba:	ds (bad) 
  40f5bc:	in     eax,dx
  40f5bd:	jmp    0x40f55b
  40f5bf:	push   edi
  40f5c0:	sub    ah,BYTE PTR [esi-0x1b]
  40f5c3:	adc    dl,BYTE PTR [edi-0x5f]
  40f5c6:	xor    al,0x53
  40f5c8:	sub    eax,0x9f8b0248
  40f5cd:	fidivr DWORD PTR [edx]
  40f5cf:	jnp    0x40f633
  40f5d1:	ret    0xc77c
  40f5d4:	out    0xe9,eax
  40f5d6:	adc    eax,0xe57ee90f
  40f5db:	inc    ebx
  40f5dc:	fild   DWORD PTR [ecx+0xa]
  40f5df:	add    DWORD PTR [edx-0x3e],esp
  40f5e2:	cdq    
  40f5e3:	or     eax,0x3301c211
  40f5e8:	mov    ecx,0xd92b99ff
  40f5ed:	push   es
  40f5ee:	jmp    0xd93e3f16
  40f5f3:	jae    0x40f648
  40f5f5:	xlat   BYTE PTR ds:[ebx]
  40f5f6:	inc    edi
  40f5f7:	cmp    dh,ch
  40f5f9:	lds    ecx,FWORD PTR [esi+0x32064673]
  40f5ff:	push   ebx
  40f600:	gs out dx,al
  40f602:	call   0x33ee3f3e
  40f607:	dec    esi
  40f609:	sahf   
  40f60a:	int    0xfe
	...
  40f620:	(bad)  
  40f621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f622:	int    0xfe
  40f624:	into   
  40f625:	sahf   
  40f626:	int    0x56
  40f628:	cmp    eax,0x95d77952
  40f62d:	aam    0x2f
  40f62f:	mov    esp,DWORD PTR [ecx]
  40f631:	mov    DWORD PTR [ecx-0x237fa93d],0xbed9b2ff
  40f63b:	jp     0x40f693
  40f63d:	sub    ecx,eax
  40f63f:	inc    edi
  40f640:	(bad)
  40f645:	fldenv [ebx-0x3c]
  40f648:	jbe    0x40f619
  40f64a:	inc    esi
  40f64b:	sbb    BYTE PTR [esi],bh
  40f64d:	stc    
  40f64e:	sbb    BYTE PTR ds:[esi-0x7],al
  40f652:	sbb    BYTE PTR ss:[esi],bh
  40f655:	stc    
  40f656:	sbb    BYTE PTR cs:[esi+0x7e1826f9],al
  40f65d:	stc    
  40f65e:	push   ds
  40f65f:	cmp    BYTE PTR [esi+0x312902f9],al
  40f665:	pusha  
  40f666:	stos   DWORD PTR es:[edi],eax
  40f667:	out    0x59,eax
  40f669:	push   cs
  40f66a:	jae    0x40f68c
  40f66c:	jle    0x40f63b
  40f66e:	xchg   ebp,eax
  40f66f:	jp     0x40f6a2
  40f671:	std    
  40f672:	(bad)  
  40f673:	mov    BYTE PTR [eax-0x687738d4],cl
  40f679:	sub    al,0xb
  40f67b:	retf   
  40f67c:	add    al,0xed
  40f67e:	push   esp
  40f67f:	or     ecx,ebx
  40f681:	sbb    eax,DWORD PTR [ebx+ebx*4+0x0]
	...
  40f695:	add    BYTE PTR [eax],al
  40f697:	add    BYTE PTR [eax+0x60],ah
  40f69a:	es adc al,0xa
  40f69d:	(bad)  
  40f69f:	add    eax,edx
  40f6a1:	pop    es
  40f6a2:	push   ss
  40f6a3:	(bad)  
  40f6a4:	icebp  
  40f6a5:	cld    
  40f6a6:	dec    DWORD PTR [esi+0x4af5795]
  40f6ac:	xlat   BYTE PTR ds:[ebx]
  40f6ad:	fstp   st(2)
  40f6af:	xchg   ebp,eax
  40f6b0:	nop
  40f6b1:	mov    ss,WORD PTR [ecx]
  40f6b3:	add    al,0x4d
  40f6b5:	cs int3 
  40f6b7:	rol    DWORD PTR [esi+ebp*1-0x3c],cl
  40f6bb:	xlat   BYTE PTR ds:[ebx]
  40f6bc:	cmp    al,0x2e
  40f6be:	int3   
  40f6bf:	xlat   BYTE PTR ds:[ebx]
  40f6c0:	nop
  40f6c1:	or     edx,DWORD PTR [edx]
  40f6c3:	add    al,0x2d
  40f6c5:	cs add ebp,ecx
  40f6c8:	sbb    DWORD PTR [esi],ecx
  40f6ca:	push   eax
  40f6cb:	(bad)  
  40f6cc:	fdivr  QWORD PTR [edx-0x4c1b98e8]
  40f6d2:	mov    DWORD PTR [ecx-0x17],ebx
  40f6d5:	daa    
  40f6d6:	sbb    eax,0xc65e61e8
  40f6db:	scas   eax,DWORD PTR es:[edi]
  40f6dc:	xor    cl,BYTE PTR [esi]
  40f6de:	pop    esi
  40f6df:	mov    al,ds:0x9400cb23
  40f6e4:	push   0xd94d81be
  40f6e9:	push   edi
  40f6ea:	in     al,dx
  40f6eb:	std    
  40f6ec:	nop
  40f6ed:	or     ecx,DWORD PTR [edx-0x75f42e64]
  40f6f3:	fdiv   QWORD PTR [ecx+0x10]
  40f6f6:	inc    ebp
  40f6f7:	jmp    0xe7b5a3d6
	...
  40f710:	loopne 0x40f746
  40f712:	add    eax,0xe8e05ae9
  40f717:	add    BYTE PTR [eax-0x5e92ff27],bh
  40f71d:	sub    eax,0xd575ee14
  40f722:	std    
  40f723:	pop    esp
  40f724:	xchg   BYTE PTR [ebx-0x4da80a8d],dh
  40f72a:	jae    0x40f711
  40f72c:	(bad)  
  40f72d:	or     eax,0xb208c009
  40f732:	std    
  40f733:	jmp    0x534a0c32
  40f738:	mov    fs,WORD PTR [ebp+0x44]
  40f73b:	or     eax,0x34f65d6a
  40f740:	pop    edx
  40f741:	adc    al,0x57
  40f743:	adc    ebx,DWORD PTR [esi+0x9]
  40f746:	(bad)  
  40f747:	hlt    
  40f748:	jns    0x40f715
  40f74a:	inc    eax
  40f74b:	jmp    0x604d8d32
  40f750:	pop    edx
  40f751:	std    
  40f752:	adc    BYTE PTR [eax],al
  40f754:	rcr    BYTE PTR [eax],1
  40f756:	push   edi
  40f757:	push   eax
  40f758:	lods   al,BYTE PTR ds:[esi]
  40f759:	stos   BYTE PTR es:[edi],al
  40f75a:	dec    ebp
  40f75b:	push   ss
  40f75c:	jnp    0x40f73b
  40f75e:	add    esp,0x2479593f
  40f764:	pop    edi
  40f765:	fnsave [edx+edi*1+0x78]
  40f769:	leave  
  40f76a:	and    al,0x18
  40f76c:	sti    
  40f76d:	leave  
  40f76e:	xor    DWORD PTR [ebx],edi
  40f770:	int3   
  40f771:	mov    eax,ds:0x574
	...
  40f786:	add    BYTE PTR [eax],al
  40f788:	jo     0x40f7a6
  40f78a:	ins    DWORD PTR es:[edi],dx
  40f78b:	jmp    0x40f785
  40f78d:	xor    BYTE PTR [edi+0x70],al
  40f790:	and    edx,esi
  40f792:	add    BYTE PTR [eax],al
  40f794:	jmp    0x40f7f9
  40f796:	jno    0x40f7bc
  40f798:	stos   DWORD PTR es:[edi],eax
  40f799:	fs jno 0x40f7c0
  40f79c:	fwait
  40f79d:	fs je  0x40f7ac
  40f7a0:	ins    BYTE PTR es:[edi],dx
  40f7a1:	ins    DWORD PTR es:[edi],dx
  40f7a2:	cmp    al,0xca
  40f7a5:	retf   0x830d
  40f7a8:	out    0xb9,eax
  40f7aa:	adc    eax,0x25013800
  40f7af:	sbb    al,0xbb
  40f7b1:	pop    eax
  40f7b2:	popa   
  40f7b3:	and    al,0xab
  40f7b5:	aad    0xfd
  40f7b7:	jne    0x40f818
  40f7b9:	xor    al,BYTE PTR [edx+0x24]
  40f7bc:	xchg   edi,eax
  40f7bd:	fs jno 0x40f7e4
  40f7c0:	imul   esp,DWORD PTR [ecx+esi*2+0x24],0x5b
  40f7c5:	fs jno 0x40f7ec
  40f7c8:	jnp    0x40f799
  40f7ca:	add    BYTE PTR [edx+0x7b],ch
  40f7cd:	in     eax,0xfd
  40f7cf:	jne    0x40f850
  40f7d1:	call   0x553d8325
  40f7d6:	cmp    ch,bh
  40f7d8:	cld    
  40f7d9:	pop    ebp
  40f7da:	mov    dh,al
  40f7dc:	repz sub BYTE PTR [ebx],bl
  40f7df:	add    DWORD PTR [edx-0x3e],esp
  40f7e2:	js     0x40f7a9
  40f7e4:	popf   
  40f7e5:	add    BYTE PTR [eax],ch
  40f7e7:	mov    edi,DWORD PTR [edi]
  40f7e9:	test   dl,0x17
	...
  40f800:	(bad)  
  40f801:	lds    esi,FWORD PTR [edi-0x15]
  40f804:	and    eax,0x92a0e9ae
  40f809:	leave  
  40f80a:	dec    eax
  40f80b:	add    BYTE PTR ds:0x97fef58e,dl
  40f811:	mov    dl,0x8c
  40f813:	je     0x40f86b
  40f815:	pop    es
  40f816:	pop    ss
  40f817:	or     ch,bh
  40f819:	xchg   edx,eax
  40f81a:	aad    0xe7
  40f81c:	xchg   BYTE PTR [eax],bl
  40f81e:	(bad)  
  40f81f:	dec    BYTE PTR [edi-0x710009fc]
  40f825:	cmp    ebx,DWORD PTR [esi+0x628a57fe]
  40f82b:	outs   dx,DWORD PTR ds:[esi]
  40f82c:	cmp    edi,DWORD PTR [esi+0x1]
  40f82f:	call   DWORD PTR [edi-0x5a]
  40f832:	mov    WORD PTR [edx+esi*2-0x39],?
  40f836:	push   ss
  40f837:	or     al,0xbd
  40f839:	inc    ebp
  40f83a:	stc    
  40f83b:	(bad)  
  40f83c:	xor    bl,BYTE PTR [edx-0x5053b767]
  40f842:	mov    DWORD PTR [eax+eiz*4-0x72],ebx
  40f846:	add    DWORD PTR [ebp-0x17],edx
  40f849:	scas   al,BYTE PTR es:[edi]
  40f84a:	mov    DWORD PTR [edx+edi*2+0x61],esi
  40f84e:	adc    al,0x59
  40f850:	es ret 0x748a
  40f854:	outs   dx,BYTE PTR ds:[esi]
  40f855:	xchg   DWORD PTR [edi],ecx
  40f857:	adc    BYTE PTR [ebp+0x5],bh
  40f85a:	stc    
  40f85b:	(bad)  
  40f85c:	out    dx,eax
  40f85d:	test   eax,0x8a2e6f8a
  40f862:	dec    ebp
  40f863:	std    
	...
  40f878:	gs addr16 daa 
  40f87b:	ret    0xc276
  40f87e:	xor    BYTE PTR [ebx+0x11a6d946],cl
  40f884:	push   0x7a
  40f886:	pop    ss
  40f887:	sub    eax,0x1196d99e
  40f88c:	push   esi
  40f88d:	mov    al,0x14
  40f88f:	hlt    
  40f890:	xor    al,0x26
  40f892:	hlt    
  40f893:	mov    dh,BYTE PTR [esi-0x5deb811f]
  40f899:	ror    DWORD PTR [edi-0x76],0x1c
  40f89d:	mov    al,0xc
  40f89f:	(bad)  
  40f8a0:	jno    0x40f87b
  40f8a2:	mov    esp,0x435bf97e
  40f8a7:	mov    eax,fs
  40f8a9:	mov    esp,0x6494371b
  40f8ae:	adc    al,0x14
  40f8b0:	fwait
  40f8b1:	adc    eax,0x943132e8
  40f8b6:	dec    edi
  40f8b7:	ins    BYTE PTR es:[edi],dx
  40f8b8:	dec    ebx
  40f8b9:	(bad)  
  40f8bb:	jg     0x40f8da
  40f8bd:	es aam 0x8a
  40f8c0:	dec    esi
  40f8c1:	shl    DWORD PTR [esi],1
  40f8c3:	adc    DWORD PTR [esi-0x50],esi
  40f8c6:	xchg   esp,eax
  40f8c7:	repz les esp,FWORD PTR ds:0x15178ae4
  40f8ce:	add    edx,esp
  40f8d0:	(bad)  
  40f8d1:	(bad)  
  40f8d3:	jle    0x40f903
  40f8d5:	fnsave [ecx+0x38]
  40f8d8:	jle    0x40f8ba
  40f8da:	cmp    al,0x5
	...
  40f8f0:	call   0x3e595880
  40f8f5:	fisubr WORD PTR [edi+0x2f]
  40f8f8:	inc    esi
  40f8f9:	fucomip st,st(6)
  40f8fb:	push   ecx
  40f8fc:	mov    ds:0x51e02b61,eax
  40f901:	add    al,0xab
  40f903:	pmaxsw mm4,QWORD PTR [eax]
  40f906:	cmp    eax,0x6d00fbd7
  40f90b:	aas    
  40f90c:	ds int 0x0
  40f90f:	sbb    dl,BYTE PTR [esi+0x501113ae]
  40f915:	out    dx,eax
  40f916:	add    BYTE PTR [edx+0xd],ch
  40f919:	jecxz  0x40f8a6
  40f91b:	and    eax,0x6450e042
  40f920:	jge    0x40f917
  40f922:	xor    al,0x39
  40f924:	mov    ebx,0x71bd251a
  40f929:	push   es
  40f92a:	push   eax
  40f92b:	jb     0x40f918
  40f92d:	mov    dh,0x6a
  40f92f:	jae    0x40f919
  40f931:	scas   eax,DWORD PTR es:[edi]
  40f932:	mov    ah,BYTE PTR [ecx-0xbdabd69]
  40f938:	(bad)
  40f93c:	test   DWORD PTR [ecx+0x64f8ce74],esp
  40f942:	ret    
  40f943:	mov    eax,ds:0xd9251a76
  40f948:	ins    BYTE PTR es:[edi],dx
  40f949:	sbb    ah,BYTE PTR ds:0x251b14d5
  40f94f:	fnstenv [edx-0x2c]
  40f952:	xor    BYTE PTR [eax],0x0
	...
  40f965:	add    BYTE PTR [eax],al
  40f967:	add    BYTE PTR [edi+0x25],bl
  40f96a:	push   ecx
  40f96b:	imul   ebx,esi,0x40650dd9
  40f971:	scas   al,BYTE PTR es:[edi]
  40f972:	std    
  40f973:	jmp    0xf9661424
  40f978:	push   edx
  40f979:	aam    0x80
  40f97b:	add    BYTE PTR [ebp+eiz*1+0x36],ah
  40f97f:	call   FWORD PTR [esi-0x6432abaa]
  40f985:	lock sar DWORD PTR [ebx-0x1d],cl
  40f989:	ror    DWORD PTR [ebx-0x74269e17],0x25
  40f990:	sbb    bh,0x50
  40f993:	(bad)  
  40f994:	ins    DWORD PTR es:[edi],dx
  40f995:	vandpd ymm5,ymm0,YMMWORD PTR [esi+0x7]
  40f99a:	push   eax
  40f99b:	add    al,dh
  40f99d:	jb     0x40f984
  40f99f:	bound  esp,QWORD PTR [edx+0x38afe60]
  40f9a5:	popf   
  40f9a6:	pop    ecx
  40f9a7:	and    al,0x34
  40f9a9:	ficomp WORD PTR [esi+0xcb9778a]
  40f9af:	(bad)  
  40f9b0:	(bad)  
  40f9b1:	sub    al,0x6a
  40f9b3:	and    al,0x46
  40f9b5:	dec    ebp
  40f9b6:	xchg   ebx,eax
  40f9b7:	xor    esi,eax
  40f9b9:	adc    ebp,edx
  40f9bb:	pusha  
  40f9bc:	mov    ebx,0x7775005f
  40f9c1:	popf   
  40f9c2:	pop    ecx
  40f9c3:	and    al,0x4
  40f9c5:	fiadd  WORD PTR [esi+0x53]
  40f9c8:	js     0x40f9b2
  40f9ca:	push   0x1
	...
  40f9e0:	nop
  40f9e1:	jae    0x40f96b
  40f9e3:	pop    esp
  40f9e4:	pop    edi
  40f9e5:	mov    ch,0xe5
  40f9e7:	jmp    0x40fa05
  40f9e9:	fiadd  DWORD PTR [eax]
  40f9eb:	test   DWORD PTR [ebx-0x37],ecx
  40f9ee:	jnp    0x40d767
  40f9f4:	sti    
  40f9f5:	xor    cl,BYTE PTR [edx+0x24]
  40f9f8:	mov    ebx,0x5be8c62c
  40f9fd:	rol    BYTE PTR [eax],1
  40f9ff:	add    BYTE PTR [ecx+ecx*8+0x19501024],al
  40fa06:	and    eax,0x4232f834
  40fa0b:	and    al,0xa7
  40fa0d:	in     al,0x8b
  40fa0f:	inc    esp
  40fa10:	lahf   
  40fa11:	lea    ecx,[ebp+0x57]
  40fa14:	jl     0x40fa2f
  40fa16:	and    eax,0xd9a32c
  40fa1b:	add    BYTE PTR [edi+eiz*8+0x6096eb3c],al
  40fa22:	je     0x40fa3c
  40fa24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa25:	ficom  WORD PTR [edi+edi*8]
  40fa28:	bound  ecx,QWORD PTR ds:0xe57556f5
  40fa2e:	inc    eax
  40fa2f:	mov    ecx,DWORD PTR [edx+0x63185987]
  40fa35:	sar    BYTE PTR [edx+eax*8-0x43],0xc4
  40fa3a:	sub    ecx,DWORD PTR [ebx+0x13c6de3f]
  40fa40:	bound  esi,QWORD PTR [ebx+0xd]
  40fa43:	and    al,0x0
	...
  40fa55:	add    BYTE PTR [eax],al
  40fa57:	add    BYTE PTR [edx+0x4b],dh
  40fa5a:	or     eax,0xd435224
  40fa5f:	and    al,0x52
  40fa61:	pop    ebx
  40fa62:	or     eax,0x9cd15224
  40fa67:	mov    DWORD PTR [esp+ebp*1],esp
  40fa6a:	mov    ecx,eax
  40fa6c:	jb     0x40fa30
  40fa6e:	xor    dl,BYTE PTR [ecx-0x4f]
  40fa71:	lds    ebp,FWORD PTR [edi]
  40fa73:	push   0x63
  40fa75:	jno    0x40faf3
  40fa77:	rcl    bh,0x7e
  40fa7a:	fst    QWORD PTR [edi]
  40fa7c:	xchg   ebx,eax
  40fa7d:	cwde   
  40fa7e:	loop   0x40fab2
  40fa80:	pop    es
  40fa81:	data16 mov BYTE PTR [ebx+0x46],dh
  40fa85:	mov    dl,0x7a
  40fa87:	inc    ebx
  40fa88:	ds (bad) 
  40fa8a:	xor    DWORD PTR [ebx+0xa471aaa],ecx
  40fa90:	(bad)  {k3}
  40fa95:	mov    ds:0xcbdff77c,al
  40fa9a:	or     eax,0xd8894411
  40fa9f:	jae    0x40fb07
  40faa1:	fist   DWORD PTR [esp+eax*1]
  40faa4:	(bad)  [edi+0x1bbace7c]
  40faaa:	in     eax,0xff
  40faac:	popf   
  40faad:	aaa    
  40faae:	ds and al,0x3e
  40fab1:	inc    ebp
  40fab2:	mov    BYTE PTR [edi+0x5e],ch
  40fab5:	fnstenv [edx+0x34]
  40fab8:	pop    edx
  40fab9:	call   0x41976e
	...
  40face:	add    BYTE PTR [eax],al
  40fad0:	mov    dl,0x6b
  40fad2:	call   0x6502e3da
  40fad7:	cdq    
  40fad8:	icebp  
  40fad9:	xor    eax,0xd9420481
  40fade:	out    0x2d,eax
  40fae0:	jmp    0x40fafe
  40fae2:	or     al,0xe4
  40fae4:	cmp    eax,0x62053ec6
  40fae9:	pusha  
  40faea:	xchg   edi,eax
  40faeb:	or     DWORD PTR [edi+0x25],0xf5a17930
  40faf2:	(bad)  
  40faf3:	xor    ebp,ecx
  40faf5:	adc    al,0xc4
  40faf7:	out    dx,eax
  40faf8:	xchg   edi,eax
  40faf9:	push   es
  40fafa:	scas   eax,DWORD PTR es:[edi]
  40fafb:	(bad)  
  40fafc:	xchg   ebp,eax
  40fafd:	(bad)  
  40faff:	add    ebx,DWORD PTR ds:0xd82fc09
  40fb05:	(bad)  
  40fb07:	fcmovnu st,st(0)
  40fb09:	add    dh,al
  40fb0b:	xor    BYTE PTR [ebx],0x25
  40fb0e:	or     ebx,edx
  40fb10:	mov    ebp,0x6e021132
  40fb15:	iret   
  40fb16:	rol    DWORD PTR [esi-0x2b06428],0xa1
  40fb1d:	(bad)  
  40fb1f:	sbb    BYTE PTR ds:0x5086e525,0xd5
  40fb26:	(bad)  
  40fb28:	fcomp  DWORD PTR [edx]
  40fb2a:	lock fwait
  40fb2c:	and    bh,al
  40fb2e:	out    0x3,eax
  40fb30:	jmp    0xd5facf
	...
  40fb45:	add    BYTE PTR [eax],al
  40fb47:	add    BYTE PTR [edi-0x26],al
  40fb4a:	out    0x7a,eax
  40fb4c:	sahf   
  40fb4d:	rcl    BYTE PTR [ecx],0x16
  40fb50:	arpl   cx,bx
  40fb52:	popf   
  40fb53:	jp     0x40fb01
  40fb55:	rol    BYTE PTR [eax],0xb
  40fb58:	ins    BYTE PTR es:[edi],dx
  40fb59:	fiadd  DWORD PTR [eax]
  40fb5b:	mov    ?,WORD PTR [edx]
  40fb5d:	adc    BYTE PTR [eax+0x40],bl
  40fb60:	mov    al,ds:0xf93400db
  40fb65:	mov    edi,0x56e9cd81
  40fb6a:	in     al,dx
  40fb6b:	add    eax,0x2d8798e9
  40fb70:	adc    bh,0x89
  40fb73:	sub    DWORD PTR [edx+0x5a0d4460],ebx
  40fb79:	pusha  
  40fb7a:	inc    ebx
  40fb7b:	rcl    DWORD PTR [eax+0x742d485e],1
  40fb81:	push   esi
  40fb82:	fcomip st,st(1)
  40fb84:	mov    WORD PTR [esi+0x7b],ds
  40fb87:	cmc    
  40fb88:	mov    edx,0xa263053a
  40fb8d:	leave  
  40fb8e:	xchg   DWORD PTR ds:0x1e8bc742,esi
  40fb94:	jbe    0x40fbeb
  40fb96:	sar    ch,0x4
  40fb99:	pop    eax
  40fb9a:	jle    0x40fb6d
  40fb9c:	popa   
  40fb9d:	and    eax,0xd1576666
  40fba2:	mov    DWORD PTR [edx],esi
  40fba4:	in     al,0x24
  40fba6:	adc    eax,0x2f6e141
  40fbab:	jmp    0x40fbb0
	...
  40fbc0:	loop   0x40fc2c
  40fbc2:	je     0x40fb78
  40fbc4:	leave  
  40fbc5:	iret   
  40fbc6:	sbb    al,ch
  40fbc8:	popa   
  40fbc9:	pop    esi
  40fbca:	dec    ebx
  40fbcb:	rcr    DWORD PTR [ebx-0x7e],1
  40fbce:	call   0x119be48
  40fbd3:	xchg   ebx,eax
  40fbd4:	popa   
  40fbd5:	stos   BYTE PTR es:[edi],al
  40fbd6:	je     0x40fb9d
  40fbd8:	leave  
  40fbd9:	pop    ebp
  40fbda:	inc    esi
  40fbdb:	icebp  
  40fbdc:	jno    0x40fb88
  40fbde:	xor    BYTE PTR [esi],cl
  40fbe0:	pop    edi
  40fbe1:	lds    edx,FWORD PTR [esi+0x0]
  40fbe4:	pop    esp
  40fbe5:	leave  
  40fbe6:	or     al,0xff
  40fbe8:	pop    ss
  40fbe9:	mov    dh,BYTE PTR [ecx]
  40fbeb:	push   ecx
  40fbec:	add    dl,ah
  40fbee:	and    al,0x34
  40fbf0:	arpl   dx,di
  40fbf2:	(bad)  
  40fbf3:	(bad)  
  40fbf4:	jnp    0x40fc25
  40fbf6:	inc    edx
  40fbf7:	and    al,0x7f
  40fbf9:	sub    bl,bl
  40fbfb:	je     0x40fb7f
  40fbfd:	dec    esi
  40fbfe:	sbb    BYTE PTR cs:[edx-0x2a],bh
  40fc02:	mov    DWORD PTR [edi+edx*2-0x3f],eax
  40fc06:	test   al,al
  40fc08:	dec    esp
  40fc09:	sub    al,BYTE PTR [ebx-0x4f29b500]
  40fc0f:	add    DWORD PTR [eax],esp
  40fc11:	cmp    cl,BYTE PTR [ebx+0x2147f3cb]
  40fc17:	add    cl,BYTE PTR [ebx+0x51]
  40fc1a:	imul   edi,edi,0xffffff94
  40fc1d:	cmp    esi,edi
  40fc1f:	(bad)  
  40fc20:	cmp    esi,DWORD PTR [ecx]
  40fc22:	dec    ebp
  40fc23:	adc    al,0x0
	...
  40fc35:	add    BYTE PTR [eax],al
  40fc37:	add    bl,dl
  40fc39:	push   ebx
  40fc3a:	and    eax,DWORD PTR [edx]
  40fc3c:	or     ecx,esi
  40fc3e:	add    BYTE PTR [eax],dl
  40fc40:	or     edx,esi
  40fc42:	mov    ecx,DWORD PTR [edi+eiz*1-0x76]
  40fc46:	mov    dh,al
  40fc48:	xor    al,0x2c
  40fc4a:	mov    al,BYTE PTR [eax]
  40fc4c:	or     edx,esi
  40fc4e:	add    al,0x0
  40fc50:	or     edx,esi
  40fc52:	call   0x1185513
  40fc57:	test   DWORD PTR ds:0x78d2ec9,esp
  40fc5d:	mov    cl,BYTE PTR [esi]
  40fc5f:	push   eax
  40fc60:	inc    eax
  40fc61:	xchg   esi,eax
  40fc62:	dec    ebp
  40fc63:	push   ebx
  40fc64:	inc    eax
  40fc65:	arpl   bp,sp
  40fc67:	es xchg ebx,eax
  40fc69:	aad    0x0
  40fc6b:	test   BYTE PTR [ebx+0x62801ac9],cl
  40fc71:	inc    esp
  40fc72:	fisttp QWORD PTR [esi]
  40fc74:	bound  eax,QWORD PTR [eax+esi*8+0x55]
  40fc78:	xlat   BYTE PTR ds:[ebx]
  40fc79:	jnp    0x40fc58
  40fc7b:	and    esi,DWORD PTR [edx]
  40fc7d:	stos   DWORD PTR es:[edi],eax
  40fc7e:	push   cs
  40fc7f:	or     al,0x33
  40fc81:	aaa    
  40fc82:	cmp    DWORD PTR [edx+eax*2],esp
  40fc85:	fmul   st,st(4)
  40fc87:	std    
  40fc88:	test   DWORD PTR [edx-0x1fb9b488],esi
  40fc8e:	pushf  
  40fc8f:	rol    DWORD PTR [edi],cl
  40fc91:	rol    DWORD PTR [ecx],0x8b
  40fc94:	popf   
  40fc95:	xchg   edi,eax
  40fc96:	bt     DWORD PTR [edx-0x40],esp
  40fc9a:	jge    0x40fc5b
	...
  40fcb0:	xlat   BYTE PTR ds:[ebx]
  40fcb1:	adc    DWORD PTR [edi],0x8
  40fcb4:	push   ebp
  40fcb5:	xchg   ch,bl
  40fcb7:	adc    DWORD PTR [edx-0x5a40304e],esp
  40fcbd:	and    BYTE PTR [eax],ch
  40fcbf:	mov    eax,DWORD PTR [edi-0x1a]
  40fcc2:	ret    0x6217
  40fcc5:	add    al,BYTE PTR [ebx]
  40fcc7:	jmp    0x40fcfa
  40fcc9:	xor    al,0x96
  40fccb:	or     edx,DWORD PTR [ecx+0x666a2bc8]
  40fcd1:	(bad)  
  40fcd2:	sbb    al,BYTE PTR [eax]
  40fcd4:	out    0xf6,eax
  40fcd6:	loopne 0x40fce7
  40fcd8:	mov    dl,0x5
  40fcda:	ds and al,0x66
  40fcdd:	bound  ebx,QWORD PTR [ecx]
  40fcdf:	adc    esp,DWORD PTR [edx-0x4e]
  40fce2:	loope  0x40fce2
  40fce4:	outs   dx,BYTE PTR ds:[esi]
  40fce5:	(bad)  
  40fce6:	aam    0x8a
  40fce8:	repz cmp DWORD PTR [esi],eax
  40fceb:	and    al,0x42
  40fced:	pop    ds
  40fcee:	sub    al,0x58
  40fcf0:	xchg   ecx,eax
  40fcf1:	sti    
  40fcf2:	inc    eax
  40fcf3:	cmp    esp,DWORD PTR [ecx+0x4e391165]
  40fcf9:	fdivp  st(0),st
  40fcfb:	je     0x40fd35
  40fcfd:	fnstcw WORD PTR [ecx+ebx*1+0x3f6d0a62]
  40fd04:	jle    0x40fccb
  40fd06:	mov    bh,0x30
  40fd08:	adc    DWORD PTR [eax+0xa6ddf93],ebp
  40fd0e:	jae    0x40fcc5
  40fd10:	test   DWORD PTR [eax+esi*8+0x3],edi
	...
  40fd28:	bound  edx,QWORD PTR [ebx+esi*2-0x21]
  40fd2c:	jno    0x40fd82
  40fd2e:	dec    edi
  40fd30:	lds    ecx,FWORD PTR [ecx]
  40fd32:	cmp    DWORD PTR [ecx+0x7c23d88e],ecx
  40fd38:	out    0x1d,al
  40fd3a:	or     al,0x20
  40fd3c:	adc    dh,BYTE PTR [ebx]
  40fd3e:	in     eax,dx
  40fd3f:	(bad)  
  40fd40:	fs sub eax,0x54b33c0c
  40fd46:	lods   eax,DWORD PTR ds:[esi]
  40fd47:	ins    BYTE PTR es:[edi],dx
  40fd48:	aad    0xd2
  40fd4a:	out    0x3,eax
  40fd4c:	fst    DWORD PTR [esp+eax*1]
  40fd4f:	sbb    cl,bl
  40fd51:	test   al,0xda
  40fd53:	inc    ebx
  40fd54:	out    0xae,al
  40fd56:	out    dx,al
  40fd57:	(bad)  
  40fd58:	sbb    eax,0x96db3e0a
  40fd5d:	or     ah,BYTE PTR [ebx-0x30]
  40fd60:	and    ebp,0xd9274d8f
  40fd66:	out    0x8e,eax
  40fd68:	es push ebx
  40fd6a:	(bad)  
  40fd6b:	ins    BYTE PTR es:[edi],dx
  40fd6c:	ins    DWORD PTR es:[edi],dx
  40fd6d:	ss jmp 0x4fd7d676
  40fd73:	sbb    eax,0x8de7da8f
  40fd78:	and    BYTE PTR [esi],al
  40fd7a:	inc    ebx
  40fd7b:	push   es
  40fd7c:	xor    BYTE PTR [ecx+0x5c88e1ae],bl
  40fd82:	sub    edx,DWORD PTR [eax]
  40fd84:	mov    al,ds:0xe8d8e7d4
  40fd89:	mov    ah,0x0
  40fd8b:	bound  eax,QWORD PTR [eax]
	...
  40fd9d:	add    BYTE PTR [eax],al
  40fd9f:	add    BYTE PTR [ebx-0x6657c62d],bl
  40fda5:	sub    al,0xa
  40fda7:	es mov ebx,0x5594fdc7
  40fdad:	test   al,0x73
  40fdaf:	icebp  
  40fdb0:	cmp    al,0xcb
  40fdb2:	std    
  40fdb3:	xchg   esp,eax
  40fdb4:	jns    0x40fd5e
  40fdb6:	jae    0x40fd85
  40fdb8:	pop    esp
  40fdb9:	sbb    dl,BYTE PTR [ebp+0x74]
  40fdbc:	push   0xffffffa8
  40fdbe:	jae    0x40fd89
  40fdc0:	cld    
  40fdc1:	(bad)  
  40fdc3:	je     0x40fe32
  40fdc5:	test   al,0x73
  40fdc7:	stc    
  40fdc8:	loopne 0x40fd61
  40fdca:	pop    ebx
  40fdcb:	stos   DWORD PTR es:[edi],eax
  40fdcc:	cmp    eax,0x41c581d9
  40fdd1:	push   cs
  40fdd2:	mov    bh,ah
  40fdd4:	jno    0x40fdd6
  40fdd6:	inc    ebp
  40fdd7:	jmp    0xe85801a5
  40fddc:	popa   
  40fddd:	pop    ebp
  40fdde:	sar    BYTE PTR [ebx+edx*4],0xa6
  40fde2:	je     0x40fde9
  40fde4:	push   ss
  40fde5:	test   al,0x74
  40fde7:	int    0x29
  40fde9:	test   al,0x74
  40fdeb:	lds    ebp,FWORD PTR [ecx]
  40fded:	test   al,0x74
  40fdef:	int    0x19
  40fdf1:	test   al,0x74
  40fdf3:	lds    ebx,FWORD PTR [ecx]
  40fdf5:	test   al,0x74
  40fdf7:	int    0x29
  40fdf9:	test   al,0x74
  40fdfb:	lds    ebp,FWORD PTR [ecx]
  40fdfd:	test   al,0x74
  40fdff:	int    0x19
  40fe01:	or     cl,BYTE PTR [edx+0x9c]
	...
  40fe17:	add    BYTE PTR [ecx+0x4b],bh
  40fe1a:	std    
  40fe1b:	data16 loopne 0x40fdcf
  40fe1e:	scas   eax,DWORD PTR es:[edi]
  40fe1f:	jmp    0xbf92d785
  40fe24:	or     ah,ch
  40fe26:	div    BYTE PTR [edi+0x74a80b]
  40fe2c:	outs   dx,DWORD PTR ds:[esi]
  40fe2d:	xchg   ecx,eax
  40fe2e:	mov    cl,ch
  40fe30:	mov    cl,0xdd
  40fe32:	call   0x11c0d92
  40fe37:	mov    edx,DWORD PTR [ebx-0x178b01af]
  40fe3d:	dec    ecx
  40fe3e:	sahf   
  40fe3f:	or     dl,0xda
  40fe42:	add    BYTE PTR [ebx-0x5b4da47c],cl
  40fe48:	mov    ebx,0xcbe800da
  40fe4d:	icebp  
  40fe4e:	add    al,BYTE PTR [eax]
  40fe50:	adc    bl,BYTE PTR [esi+0x19fe1021]
  40fe56:	jne    0x40fe65
  40fe58:	add    BYTE PTR [ebx],cl
  40fe5a:	out    0xd,al
  40fe5c:	pop    ss
  40fe5d:	fld    QWORD PTR [eax]
  40fe5f:	mov    edi,DWORD PTR [edi]
  40fe61:	icebp  
  40fe62:	adc    BYTE PTR [ebx+0x74fe5e95],cl
  40fe68:	dec    esp
  40fe69:	pop    esp
  40fe6a:	mov    edx,0xda4b8c
  40fe6f:	add    DWORD PTR [ecx-0x5d8aa521],esi
  40fe75:	(bad)  
  40fe76:	(bad)  
  40fe77:	je     0x40fed8
  40fe79:	popf   
  40fe7a:	mov    BYTE PTR [ebx+0x0],dl
	...
  40fe90:	mov    bh,0xdd
  40fe92:	add    BYTE PTR [eax],al
  40fe94:	jp     0x40feea
  40fe96:	int3   
  40fe97:	call   0x3f5a57
  40fe9c:	mov    edi,0xe44f751d
  40fea1:	imul   esp,DWORD PTR [ecx-0x7625f500],0xffffffcf
  40fea8:	jecxz  0x40fe9e
  40feaa:	and    eax,DWORD PTR [edx]
  40feac:	sti    
  40fead:	push   esp
  40feae:	into   
  40feaf:	call   0x3eb2eb
  40feb4:	xchg   esp,eax
  40feb5:	mov    eax,ds:0xf625421
  40feba:	stc    
  40febb:	and    ecx,DWORD PTR [esi+0x3623f917]
  40fec1:	pop    ds
  40fec2:	stc    
  40fec3:	and    ebp,DWORD PTR [esi]
  40fec5:	out    0xf8,eax
  40fec7:	and    esi,DWORD PTR [esi]
  40fec9:	out    dx,eax
  40feca:	clc    
  40fecb:	and    ebp,DWORD PTR [esi]
  40fecd:	idiv   eax
  40fecf:	and    edx,DWORD PTR [esi]
  40fed1:	(bad)  
  40fed2:	clc    
  40fed3:	and    ecx,DWORD PTR [esi]
  40fed5:	popa   
  40fed6:	mov    esp,cs
  40fed8:	mov    edx,0xa5fe82d8
  40fedd:	cmp    dh,BYTE PTR [ebp-0x19]
  40fee0:	test   al,0x84
  40fee2:	add    al,BYTE PTR [eax]
  40fee4:	xor    eax,0x295d4b2b
  40fee9:	dec    ebp
  40feea:	test   bl,al
  40feec:	inc    edx
  40feed:	repnz sub BYTE PTR [eax],al
  40fef0:	or     BYTE PTR [edx+0x8adb],dh
	...
  40ff06:	add    BYTE PTR [eax],al
  40ff08:	fcom   QWORD PTR es:[eax+ebp*8]
  40ff0c:	and    eax,0xdf000177
  40ff11:	outs   dx,DWORD PTR ds:[esi]
  40ff12:	cmc    
  40ff13:	dec    edi
  40ff14:	fwait
  40ff15:	loope  0x40feef
  40ff17:	push   cs
  40ff18:	fdivp  st(6),st
  40ff1a:	add    DWORD PTR [eax],eax
  40ff1c:	bound  edi,QWORD PTR ds:0xc26e23c6
  40ff22:	lea    eax,[ebx-0x7a]
  40ff25:	(bad)  
  40ff27:	imul   eax,DWORD PTR [edi-0x65dc0abd],0x7a23f639
  40ff31:	jnp    0x40fef8
  40ff33:	and    eax,DWORD PTR [esi-0x4a]
  40ff36:	add    DWORD PTR [eax],eax
  40ff38:	bound  esp,QWORD PTR [ebx]
  40ff3a:	xlat   BYTE PTR ds:[ebx]
  40ff3b:	pop    edi
  40ff3c:	fldenv [esi+0x2ae11025]
  40ff42:	add    esi,DWORD PTR [ebp+0x56]
  40ff45:	fldenv [esi-0x9]
  40ff48:	inc    ecx
  40ff49:	int    0x6c
  40ff4b:	mov    DWORD PTR [ecx-0x3b],0xd9f8cb7
  40ff52:	ret    0xdd2e
  40ff55:	sub    eax,esi
  40ff57:	sub    BYTE PTR [esi],0x31
  40ff5a:	jae    0x40ff25
  40ff5c:	xor    DWORD PTR [eax-0x59],edx
  40ff5f:	or     edi,DWORD PTR [ebx+0x6203e8da]
  40ff65:	loop   0x40feff
  40ff67:	retf   
  40ff68:	fs pop ebx
  40ff6a:	adc    eax,DWORD PTR [ebx]
	...
  40ff80:	(bad)  
  40ff81:	fnop   
  40ff83:	xchg   esp,eax
  40ff84:	(bad)  
  40ff86:	out    0x3,eax
  40ff88:	jmp    0xeb08cba2
  40ff8d:	dec    eax
  40ff8e:	outs   dx,DWORD PTR ds:[esi]
  40ff8f:	add    esp,DWORD PTR [edx-0x27]
  40ff92:	(bad)  
  40ff93:	xlat   BYTE PTR ds:[ebx]
  40ff94:	inc    ecx
  40ff95:	adc    DWORD PTR [ebp-0x38],ebx
  40ff98:	or     eax,0x218b222e
  40ff9d:	std    
  40ff9e:	pop    ds
  40ff9f:	lea    esp,[ecx]
  40ffa1:	std    
  40ffa2:	repz mov ah,BYTE PTR [ecx]
  40ffa5:	std    
  40ffa6:	daa    
  40ffa7:	lea    esp,[ecx-0x5e74f803]
  40ffad:	std    
  40ffae:	pop    ss
  40ffaf:	lea    esp,[ecx-0x5e6efc03]
  40ffb5:	std    
  40ffb6:	retf   
  40ffb7:	mov    WORD PTR [ecx-0x192c3403],gs
  40ffbd:	adc    ebx,DWORD PTR [eax]
  40ffbf:	lea    edx,[ecx+0x496bc3fd]
  40ffc5:	imul   ecx
  40ffc7:	add    esp,DWORD PTR ds:0x62047358
  40ffcd:	fldl2e 
  40ffcf:	add    esp,DWORD PTR [edx-0x27]
  40ffd2:	add    BYTE PTR [ebp+ebx*1+0x34],ah
  40ffd6:	xor    BYTE PTR [edx],0xd2
  40ffd9:	mov    ds:0x2e60e9fd,eax
  40ffde:	adc    DWORD PTR [edx+0x56570b11],edi
	...
  40fff8:	jmp    0xe894:0xe8b84cf7
  40ffff:	stc    
  410000:	push   ebp
  410001:	mov    ds:0x50096afd,eax
  410006:	add    cl,ch
  410008:	popa   
  410009:	fisttp QWORD PTR ds:0xfda40464
  41000f:	jmp    0xdd6617e6
  410014:	xchg   ecx,eax
  410015:	dec    esi
  410016:	leave  
  410017:	add    DWORD PTR [ebp-0x1716ff88],eax
  41001d:	das    
  41001e:	and    eax,0x83b3e8a9
  410023:	test   DWORD PTR [edi-0x75fb7bee],0x55a489db
  41002d:	push   eax
  41002e:	dec    ebx
  41002f:	add    DWORD PTR [ecx],ecx
  410031:	test   DWORD PTR [ecx-0x7be2c5db],0xbaca6aa9
  41003b:	jmp    0x8041d9c1
  410040:	popa   
  410041:	leave  
  410042:	add    cl,ch
  410044:	mov    ecx,0x61e86488
  410049:	dec    esi
  41004a:	enter  0x2562,0xf7
  41004e:	inc    esp
  41004f:	xchg   edx,eax
  410050:	pop    ebp
  410051:	dec    esi
  410052:	dec    esp
  410053:	lds    ebx,FWORD PTR [ecx]
  410055:	loopne 0x410025
  410057:	out    0x23,al
  410059:	stos   BYTE PTR es:[edi],al
  41005a:	sub    DWORD PTR [ecx+0x0],0x0
	...
  41006d:	add    BYTE PTR [eax],al
  41006f:	add    BYTE PTR ds:0xdc0056cc,dl
  410075:	stos   BYTE PTR es:[edi],al
  410076:	and    DWORD PTR [eax+0x6b],eax
  410079:	and    dl,BYTE PTR ds:0xfd972550
  41007f:	add    bh,0xd2
  410082:	mov    ebx,ecx
  410084:	mov    ch,0x2e
  410086:	xor    DWORD PTR [ecx+0x4489d6fb],esp
  41008c:	push   edi
  41008d:	mov    DWORD PTR [eax+eax*8+0x3087d8b7],eax
  410094:	inc    esi
  410095:	sub    DWORD PTR [edx+0x3],esi
  410098:	push   edx
  410099:	mov    eax,ds:0x9c853315
  41009e:	jmp    0x7c3c:0x219a402b
  4100a5:	stos   BYTE PTR es:[edi],al
  4100a6:	and    DWORD PTR [esp+ecx*2-0x56],edx
  4100aa:	and    DWORD PTR [esp+ecx*2-0x56],edx
  4100ae:	and    DWORD PTR [esp+ebp*2-0x56],edx
  4100b2:	and    DWORD PTR [esp+ebx*2-0x56],edx
  4100b6:	and    DWORD PTR [esp+ecx*4-0x55],edx
  4100ba:	and    DWORD PTR [ebx+ebp*8+0x23],edx
  4100be:	jb     0x4100e4
  4100c0:	xlat   BYTE PTR ds:[ebx]
  4100c1:	lea    ecx,[edx-0x3726c33]
  4100c7:	dec    DWORD PTR [eax+edx*2+0x35bc8bed]
  4100ce:	add    BYTE PTR [edx+0x4b],ch
  4100d1:	(bad)  
  4100d2:	out    0x5b,eax
	...
  4100e8:	sbb    eax,0xfb33ff24
  4100ed:	mov    WORD PTR [ebp-0x1],cs
  4100f0:	xchg   ecx,esi
  4100f2:	sbb    bh,bh
  4100f4:	ja     0x4100e7
  4100f6:	sbb    bh,bh
  4100f8:	push   edi
  4100f9:	icebp  
  4100fa:	sbb    BYTE PTR [eax-0x34],dl
  4100fd:	mov    al,ds:0x11621c21
  410102:	cmc    
  410103:	pop    eax
  410104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410105:	mov    al,0x7c
  410107:	outs   dx,DWORD PTR ds:[esi]
  410108:	stos   BYTE PTR es:[edi],al
  410109:	shr    DWORD PTR [eax+edx*2+0xf],0x23
  41010e:	jl     0x4100d1
  410110:	jb     0x4100c2
  410112:	jl     0x410187
  410114:	inc    esi
  410115:	xor    BYTE PTR [eax],0xc0
  410118:	cmc    
  410119:	and    DWORD PTR ds:0xd1609210,0xfffffffe
  410120:	outs   dx,BYTE PTR ds:[esi]
  410121:	aam    0x20
  410123:	mov    eax,ds:0xffc56952
  410128:	aam    0x63
  41012a:	and    eax,0xcd5fcd1c
  41012f:	push   eax
  410130:	mov    edx,0xbdfe7dd6
  410135:	in     eax,dx
  410136:	adc    al,0x0
  410138:	mov    ch,0x43
  41013a:	and    eax,0x7bf07110
  41013f:	jae    0x4101bf
  410141:	mov    al,ds:0xd3324fd1
  410146:	clc    
  410147:	and    esi,DWORD PTR [esi+0x11]
  41014a:	cmc    
  41014b:	pop    eax
	...
  410160:	es mov al,0x7c
  410163:	jae    0x4101a3
  410165:	mov    WORD PTR [edi+ebp*2+0x12],?
  410169:	inc    ecx
  41016a:	imul   eax,DWORD PTR [edi+esi*2],0x52c17cba
  410171:	mov    al,0x7c
  410173:	jae    0x4101b3
  410175:	mov    al,ds:0x75dc030
  41017a:	sub    DWORD PTR [eax],edx
  41017c:	push   ebp
  41017d:	fild   QWORD PTR [eax]
  41017f:	adc    BYTE PTR [edx-0x31012b3e],dh
  410185:	into   
  410186:	and    BYTE PTR [ecx-0x37364e],ah
  41018c:	xor    al,0xda
  41018e:	pop    ss
  41018f:	fcom   DWORD PTR [edx+0x247fbeb1]
  410195:	mov    eax,ds:0x66213a9
  41019a:	arpl   WORD PTR [edi-0x4e],bp
  41019d:	or     al,0x1e
  41019f:	aad    0xd8
  4101a1:	fdivrp st(7),st
  4101a3:	fisub  DWORD PTR [ecx+0x51377fd9]
  4101a9:	(bad)  
  4101ab:	mov    BYTE PTR [esi-0x37],ch
  4101ae:	jno    0x41020b
  4101b0:	loope  0x410136
  4101b2:	shl    DWORD PTR ds:0x3c1d978,cl
  4101b8:	xor    al,0x33
  4101ba:	jmp    0xc9f2a647
  4101bf:	repnz int 0xa0
  4101c2:	jb     0x41023f
	...
  4101d8:	fisub  WORD PTR [eax+0x68bd21bb]
  4101de:	add    eax,DWORD PTR [edx]
  4101e0:	(bad)  
  4101e1:	fnstenv [edx+0x4c]
  4101e4:	lds    ecx,FWORD PTR [esi]
  4101e6:	retf   0x6201
  4101e9:	push   esi
  4101ea:	daa    
  4101eb:	imul   DWORD PTR [ebx+0x54]
  4101ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ef:	xlat   BYTE PTR ds:[ebx]
  4101f0:	ficomp WORD PTR [ecx+0x29d9007b]
  4101f6:	lock mov BYTE PTR [ecx+esi*4-0x5f821525],dl
  4101fe:	out    dx,al
  4101ff:	cmc    
  410200:	push   ebp
  410201:	mov    al,ds:0x266d185c
  410206:	add    BYTE PTR [ebx-0x12],bh
  410209:	les    edi,FWORD PTR ds:0x62cdb67b
  41020f:	je     0x4101f2
  410211:	cmp    DWORD PTR [ebx],0x1
  410214:	cmp    dh,bh
  410216:	fiadd  DWORD PTR [edx+eiz*2]
  410219:	add    BYTE PTR [ecx],al
  41021b:	bound  esp,QWORD PTR [eax-0x635fa602]
  410221:	les    eax,FWORD PTR [eax]
  410223:	cmp    al,0xdd
  410225:	mov    bl,0xfd
  410227:	adc    al,0x46
  410229:	jp     0x41029b
  41022b:	xor    BYTE PTR [edx],ah
  41022d:	mov    al,ds:0xa07214fe
  410232:	jae    0x41020d
  410234:	mov    BYTE PTR ds:0xd8137e0d,ah
  41023a:	std    
  41023b:	stc    
	...
  410250:	sbb    DWORD PTR [ecx],ecx
  410252:	jmp    0xfde07b59
  410257:	les    esp,FWORD PTR [edi-0x2b4bff34]
  41025d:	mov    bl,0xfd
  41025f:	fdivr  QWORD PTR [ecx+0x7a]
  410262:	jo     0x410214
  410264:	adc    eax,0x5dbcfea0
  410269:	mov    al,ds:0x2548d973
  41026e:	or     eax,0xfdd7b336
  410273:	mov    ecx,0xaee9088d
  410278:	sub    BYTE PTR [edi-0x33e04303],bl
  41027e:	add    BYTE PTR [esp+ebp*8+0x6dfd81b3],bh
  410285:	dec    esi
  410286:	push   ebx
  410287:	adc    DWORD PTR [ebp+0x3a935605],esi
  41028d:	push   esp
  41028e:	out    dx,eax
  41028f:	nop
  410290:	or     DWORD PTR [ecx-0x74],edi
  410293:	jmp    0x4102f6
  410295:	push   esp
  410296:	jnp    0x41028d
  410298:	fdivr  QWORD PTR [eax+edx*2-0x73605e05]
  41029f:	sub    al,0xce
  4102a1:	push   cs
  4102a2:	push   esi
  4102a3:	into   
  4102a4:	lods   al,BYTE PTR ds:[esi]
  4102a5:	push   ecx
  4102a6:	inc    esi
  4102a7:	add    BYTE PTR [ebx+0x5a],cl
  4102aa:	mov    ebp,0xc0e53c75
  4102af:	jmp    0x41d885
	...
  4102c8:	mov    eax,ds:0xd7558bf3
  4102cd:	jge    0x4102b4
  4102cf:	js     0x410288
  4102d1:	aam    0x0
  4102d3:	lea    ecx,[esi+0x31]
  4102d6:	dec    esi
  4102d7:	push   edi
  4102d8:	in     al,0x7
  4102da:	mov    DWORD PTR [esi-0x31],eax
  4102dd:	pop    ecx
  4102de:	mov    ebp,0x2eacdb74
  4102e3:	lea    ebx,[esi+0x31]
  4102e6:	pop    ecx
  4102e7:	call   0x405450
  4102ec:	jbe    0x410287
  4102ee:	jmp    0xd364af43
  4102f3:	mov    DWORD PTR ds:0xafc083e3,ecx
  4102f9:	sbb    ebp,DWORD PTR [eax+0x30]
  4102fc:	push   esi
  4102fd:	mov    ecx,ebp
  4102ff:	pop    ecx
  410300:	xor    ebx,DWORD PTR [eax+0x51cb0289]
  410306:	inc    esp
  410307:	in     al,dx
  410308:	fisttp DWORD PTR [ebx-0x67cd2c02]
  41030e:	cmp    DWORD PTR [ebp+0x6aabae7b],eax
  410314:	mov    edx,0xd2ec5451
  410319:	xor    ch,BYTE PTR ds:0x8bda798c
  41031f:	inc    ebp
  410320:	push   edi
  410321:	mov    dl,BYTE PTR [esi-0x1]
  410324:	pop    eax
  410325:	dec    ebp
  410326:	inc    ebx
  410327:	inc    eax
  410328:	(bad)  
  410329:	sbb    DWORD PTR [edx-0x6b],esi
	...
  410340:	adc    edi,esp
  410342:	mov    edx,DWORD PTR [ebp-0x69]
  410345:	and    ch,0x14
  410348:	bound  esi,QWORD PTR [edi+eax*1]
  41034b:	add    bh,ah
  41034d:	hlt    
  41034e:	push   0x5397b54f
  410353:	mov    BYTE PTR [esp+esi*8+0x2c6dbf7d],bl
  41035a:	std    
  41035b:	(bad)  
  41035c:	xor    eax,0xdf32ee6f
  410361:	fsubr  QWORD PTR [eax+0x58]
  410364:	cmp    al,BYTE PTR [edi-0x75]
  410367:	add    DWORD PTR [edx+0x35],esp
  41036a:	mov    esi,0x77e7b2eb
  41036f:	rcr    bl,cl
  410371:	in     eax,dx
  410372:	int3   
  410373:	test   BYTE PTR [edx],ah
  410375:	scas   eax,DWORD PTR es:[edi]
  410376:	jge    0x4103d2
  410378:	std    
  410379:	es js  0x4103e5
  41037c:	cs std 
  41037e:	int    0xe7
  410380:	mov    ecx,DWORD PTR [eax]
  410382:	pop    edi
  410383:	mov    ah,BYTE PTR [eax-0x50]
  410386:	xchg   BYTE PTR [edx+ecx*8+0x5f],al
  41038a:	sar    dh,1
  41038c:	mov    cl,0x38
  41038e:	ret    
  41038f:	dec    ebx
  410390:	out    0xef,eax
  410392:	pop    es
  410393:	test   BYTE PTR [edi+ebx*8-0x62b70189],al
  41039a:	xchg   BYTE PTR [edx+ecx*8+0x48],dl
  41039e:	imul   edi,DWORD PTR [ecx+ebx*8+0x8d01b1],0x0
	...
  4103b5:	add    BYTE PTR [eax],al
  4103b7:	add    BYTE PTR [edi],bl
  4103b9:	enter  0x56d4,0x9d
  4103bd:	loop   0x410348
  4103bf:	inc    ebp
  4103c0:	xor    dh,BYTE PTR ds:0x90e60e45
  4103c6:	js     0x4103c6
  4103c8:	test   DWORD PTR [ecx+0x2f],ecx
  4103cb:	lea    edx,[edi]
  4103cd:	int3   
  4103ce:	(bad)  
  4103d0:	ret    0x73a
  4103d3:	add    bh,bl
  4103d5:	fsubr  DWORD PTR [eax+eiz*2]
  4103d8:	adc    eax,0xea54df06
  4103dd:	adc    edi,DWORD PTR [edi+edi*2]
  4103e0:	adc    eax,0x4cff63cd
  4103e5:	popf   
  4103e6:	(bad)  
  4103e7:	in     eax,dx
  4103e8:	mov    WORD PTR [esi+0x14],cs
  4103eb:	je     0x410387
  4103ed:	mov    cl,0x6a
  4103ef:	mov    WORD PTR [ebx-0x27],fs
  4103f2:	pop    esp
  4103f3:	mov    esi,0x793f0a3d
  4103f8:	adc    BYTE PTR [ebx+0x25],dl
  4103fb:	fsubr  st(6),st
  4103fd:	cdq    
  4103fe:	out    0x7f,al
  410400:	cld    
  410401:	fwait
  410402:	mov    ?,WORD PTR [eax+0x7b]
  410405:	loope  0x41047b
  410407:	into   
  410408:	cmc    
  410409:	add    dl,BYTE PTR [eax-0x1828171f]
  41040f:	xchg   BYTE PTR [esi-0x132ee857],bl
  410415:	mov    BYTE PTR [eax-0x3f],dh
  410418:	mov    DWORD PTR [esi+0x27],edx
  41041b:	or     BYTE PTR [eax],al
	...
  41042d:	add    BYTE PTR [eax],al
  41042f:	add    dh,ah
  410431:	(bad)  
  410432:	push   ebp
  410433:	js     0x410409
  410435:	das    
  410436:	adc    DWORD PTR [edi+0x6ba0b136],eax
  41043c:	sbb    dl,BYTE PTR [eax-0x17]
  41043f:	add    ebp,edi
  410441:	push   ss
  410442:	inc    eax
  410443:	ror    DWORD PTR [esp+ebx*4],cl
  410446:	sbb    cl,BYTE PTR [edx+0x436d3927]
  41044c:	push   esp
  41044d:	push   ebp
  41044e:	dec    esp
  41044f:	jns    0x4103ed
  410451:	pushf  
  410452:	cmp    DWORD PTR ds:0xda0006e7,0x572ed85
  41045c:	bound  ecx,QWORD PTR [esi-0x5c]
  41045f:	imul   ebp,DWORD PTR ds:0x11f60104,0x51
  410466:	inc    esi
  410467:	test   esp,ebp
  410469:	pop    ebx
  41046a:	or     eax,0xfd9ece6d
  41046f:	fimul  WORD PTR [eax-0x21]
  410472:	mov    edi,DWORD PTR [edx+ecx*8]
  410475:	add    ecx,ebp
  410477:	(bad)  
  410479:	fld    DWORD PTR [eax]
  41047b:	je     0x4104a0
  41047d:	mov    al,0x50
  41047f:	push   ss
  410480:	mov    ch,0x87
  410482:	xchg   DWORD PTR [edi],ebp
  410484:	inc    esi
  410485:	push   ebp
  410486:	rcr    dh,0xad
  410489:	daa    
  41048a:	jmp    DWORD PTR [esi+0x6c3d32ad]
  410490:	xor    esi,DWORD PTR [edi+edx*2+0x81]
	...
  4104a7:	add    BYTE PTR [eax-0x2516fdae],dl
  4104ad:	adc    al,0xe9
  4104af:	sbb    DWORD PTR ds:0xbc70d19b,edx
  4104b5:	das    
  4104b6:	test   BYTE PTR [ecx+0x6f56555d],ch
  4104bc:	jne    0x410459
  4104be:	push   0x24
  4104c0:	fild   DWORD PTR [ecx+ebp*8]
  4104c3:	ror    BYTE PTR [ecx-0x7b],0x8a
  4104c7:	jmp    0x41052a
  4104c9:	dec    esi
  4104ca:	inc    ebx
  4104cb:	inc    ecx
  4104cc:	mov    dh,0x2
  4104ce:	(bad)  
  4104cf:	sbb    dl,bh
  4104d1:	adc    eax,0xcb266471
  4104d6:	test   al,dh
  4104d8:	das    
  4104d9:	fwait
  4104da:	std    
  4104db:	ret    
  4104dc:	ja     0x41052c
  4104de:	push   ebx
  4104df:	adc    DWORD PTR [edi+0x6073b8b3],eax
  4104e5:	(bad)  [ebx+0x560c09ac]
  4104eb:	push   cs
  4104ec:	xor    DWORD PTR [ebp-0x40],edx
  4104ef:	add    BYTE PTR [edx],dl
  4104f1:	pop    ebx
  4104f2:	jno    0x410503
  4104f4:	push   ss
  4104f5:	adc    eax,0xcd05e5f
  4104fa:	ror    BYTE PTR [eax],0x7b
  4104fd:	mov    BYTE PTR [edx+0x52b2aec],cl
  410503:	je     0x4104a7
  410505:	cdq    
  410506:	std    
  410507:	add    BYTE PTR [esi+ecx*2+0x74f7],dl
	...
  41051e:	add    BYTE PTR [eax],al
  410520:	inc    esp
  410521:	jmp    0xd622eee6
  410526:	add    BYTE PTR [eax],al
  410528:	pop    eax
  410529:	mov    ecx,DWORD PTR [edx+0x417c7b35]
  41052f:	add    BYTE PTR [eax],ch
  410531:	add    BYTE PTR [ebp+0x68e446f6],al
  410537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410538:	or     edx,edi
  41053a:	add    BYTE PTR [ebx-0x14],dl
  41053d:	jmp    0xd58873ba
  410542:	std    
  410543:	adc    eax,0x40c757
  410548:	xchg   BYTE PTR [esi],dl
  41054a:	jb     0x410557
  41054c:	or     BYTE PTR [esi],0xe6
  41054f:	pop    esi
  410550:	loop   0x410575
  410552:	dec    DWORD PTR [ebx-0x74ffd075]
  410558:	cmp    BYTE PTR [ecx-0xd],bl
  41055b:	cmova  esp,DWORD PTR [ecx-0x23450000]
  410562:	inc    esp
  410563:	(bad)  
  410564:	mov    edx,0xde88032f
  410569:	and    edx,DWORD PTR [edi+0x51]
  41056c:	inc    eax
  41056d:	adc    al,0xe6
  41056f:	mov    DWORD PTR [esi+0x23],edi
  410572:	inc    DWORD PTR [ebx+edi*2-0x75af7b2d]
  410579:	(bad)  
  41057a:	add    al,ch
  41057c:	bound  ebx,QWORD PTR [ebp+0x6]
  41057f:	add    DWORD PTR [edx+0x34],esp
  410582:	inc    edx
  410583:	push   cs
	...
  410598:	fisubr WORD PTR [edi+0x4]
  41059b:	add    BYTE PTR [edx+0x2f],ah
  41059e:	or     sp,di
  4105a1:	jb     0x4105d4
  4105a3:	mov    edx,0xffc1e88b
  4105a8:	jge    0x410552
  4105aa:	into   
  4105ab:	add    DWORD PTR [edx+0x35],esp
  4105ae:	inc    ebp
  4105af:	push   cs
  4105b0:	fist   WORD PTR [ebx+0x2f620004]
  4105b6:	imul   ecx,DWORD PTR [ebx],0xba30e1d7
  4105bc:	outs   dx,DWORD PTR cs:[esi]
  4105be:	(bad)  
  4105bf:	(bad)  
  4105c0:	cmp    eax,0x6201d060
  4105c5:	xor    eax,0x5bdf0e45
  4105ca:	add    al,0x0
  4105cc:	bound  ebp,QWORD PTR [edi]
  4105ce:	imul   ecx,DWORD PTR [ebx],0xba3cf1e7
  4105d4:	std    
  4105d5:	outs   dx,BYTE PTR ds:[esi]
  4105d6:	(bad)  
  4105d7:	(bad)  
  4105d8:	std    
  4105d9:	ja     0x4105ab
  4105db:	add    DWORD PTR [edx+0x35],esp
  4105de:	inc    ebp
  4105df:	push   cs
  4105e0:	(bad)  
  4105e2:	add    al,0x0
  4105e4:	bound  ebp,QWORD PTR [edi]
  4105e6:	imul   ecx,DWORD PTR [ebx],0xba3561d7
  4105ec:	jo     0x4105e2
  4105ee:	(bad)  
  4105ef:	(bad)  
  4105f0:	mov    ebp,0x6201d0ef
  4105f5:	xor    eax,0x4bdf0e45
  4105fa:	add    al,0x0
	...
  410610:	bound  ebp,QWORD PTR [edi]
  410612:	imul   ecx,DWORD PTR [ebx],0xb9c171e7
  410618:	ja     0x41060e
  41061a:	(bad)  
  41061b:	(bad)  
  41061c:	mov    ebp,0x63d04fd8
  410621:	fldenv [esp+eax*2+0x64]
  410625:	push   esp
  410626:	arpl   WORD PTR [edx+eiz*2],ax
  410629:	fldcw  WORD PTR [edx+0x68]
  41062c:	pop    ecx
  41062d:	dec    esp
  41062e:	mov    ch,0xbf
  410630:	mov    ebx,0x75c42460
  410635:	mov    cl,0x57
  410637:	shl    BYTE PTR [ebx-0x27],1
  41063a:	fs inc esp
  41063c:	out    dx,al
  41063d:	and    BYTE PTR [ebx+0x67],ch
  410640:	imul   esp,DWORD PTR [esi+0x2d],0xa2c51bcc
  410647:	ret    
  410648:	dec    ebp
  410649:	or     DWORD PTR [ebx-0x30],0x436cd963
  410650:	mov    dh,0xfd
  410652:	push   0x67
  410654:	imul   esp,DWORD PTR [esi+0x25],0xa32aebc8
  41065b:	ret    
  41065c:	and    eax,0x63d00f81
  410661:	fldenv [ebx+eax*2-0x72]
  410665:	sub    DWORD PTR [ebx+0x67],ebp
  410668:	pop    ecx
  410669:	sbb    ax,0xcbd4
  41066d:	adc    BYTE PTR [ebx+0x1380fdc3],dh
  410673:	rol    BYTE PTR [eax],1
	...
  410685:	add    BYTE PTR [eax],al
  410687:	add    BYTE PTR [ebx-0x27],ah
  41068a:	ins    BYTE PTR es:[edi],dx
  41068b:	inc    ebx
  41068c:	jbe    0x410663
  41068e:	push   0x67
  410690:	pop    ecx
  410691:	data16 mov ch,0xcf
  410694:	sbb    esi,DWORD PTR [edi+0x32]
  410697:	ret    
  410698:	aad    0x80
  41069a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41069b:	iret   
  41069c:	arpl   cx,bx
  41069e:	fs inc ebx
  4106a0:	dec    esi
  4106a1:	shr    DWORD PTR [edx+0x67],0x69
  4106a5:	lods   ax,WORD PTR ds:[esi]
  4106a7:	(bad)  
  4106a9:	rol    DWORD PTR [eax],1
  4106ab:	and    eax,0xfde598a1
  4106b0:	xchg   ebp,eax
  4106b1:	fiadd  DWORD PTR [eax]
  4106b3:	ins    BYTE PTR es:[edi],dx
  4106b4:	and    DWORD PTR ds:0xe3fd6a15,ecx
  4106ba:	mov    esp,DWORD PTR [edi+0x1d5c52b5]
  4106c0:	mov    eax,ds:0xade1e598
  4106c5:	fiadd  DWORD PTR [eax]
  4106c7:	and    DWORD PTR fs:[ebx+eax*1],ecx
  4106cb:	cmp    ah,BYTE PTR [eax+0x64]
  4106ce:	into   
  4106cf:	pusha  
  4106d0:	pop    esp
  4106d1:	or     DWORD PTR [eax+0x2d],ebx
  4106d4:	pop    bp
  4106d6:	fst    DWORD PTR [esp+eiz*2-0x7f]
  4106da:	outs   dx,DWORD PTR ds:[esi]
  4106db:	out    0x66,eax
  4106dd:	fld    DWORD PTR [ecx+ebp*4-0xb7f1cb6]
  4106e4:	xor    eax,0x5ee94531
  4106e9:	dec    ecx
  4106ea:	inc    ecx
	...
  410700:	je     0x410766
  410702:	or     edi,DWORD PTR [ecx]
  410704:	pop    ss
  410705:	sbb    al,0x1
  410707:	jae    0x41073c
  410709:	xchg   edi,eax
  41070a:	xor    DWORD PTR [ecx+0x2c0db2ea],ebp
  410710:	dec    esi
  410711:	popa   
  410712:	or     ebx,DWORD PTR [ecx]
  410714:	pop    ss
  410715:	sbb    al,0x1
  410717:	xchg   ecx,eax
  410718:	cmp    bh,ah
  41071a:	(bad)  
  41071b:	call   0x14cbe2b4
  410720:	jno    0x41077e
  410722:	fprem1 
  410724:	in     eax,0x5c
  410726:	neg    ch
  410728:	fldenv [edx+0x6]
  41072b:	rcr    DWORD PTR [esi+0x64],cl
  41072e:	into   
  41072f:	push   esi
  410730:	jbe    0x4106fd
  410732:	shr    BYTE PTR [edi+0xc83694],0x88
  410739:	mov    al,0x54
  41073b:	push   esi
  41073c:	int3   
  41073d:	push   ss
  41073e:	stc    
  41073f:	(bad)  
  410740:	in     al,dx
  410741:	adc    DWORD PTR [ebx-0x1],0xffffff8e
  410745:	sti    
  410746:	cmovo  ecx,DWORD PTR [ebx-0x746350ea]
  41074d:	fild   DWORD PTR [eax]
  41074f:	xor    edx,DWORD PTR [eax+0x18]
  410752:	retf   
  410753:	test   DWORD PTR [esi+0xc8b178f],eax
  410759:	gs std 
  41075b:	dec    DWORD PTR [ebx-0x70dbadea]
  410761:	les    edx,FWORD PTR [eax]
  410763:	sldt   WORD PTR [eax]
	...
  410776:	add    BYTE PTR [eax],al
  410778:	jmp    FWORD PTR [ecx-0x3]
  41077b:	dec    DWORD PTR [ebx-0x62]
  41077e:	add    al,0x3f
  410781:	enter  0x72cb,0x2b
  410785:	(bad)  
  410786:	popf   
  410787:	nop
  410788:	cmp    ebx,ebx
  41078a:	add    BYTE PTR [ebp+0x1c],dh
  41078d:	mov    al,0x52
  41078f:	push   0x4db4a
  410794:	hlt    
  410795:	icebp  
  410796:	je     0x4107aa
  410798:	jnp    0x410777
  41079a:	xchg   DWORD PTR [edi+0xda9b],eax
  4107a0:	jle    0x4107bc
  4107a2:	jb     0x410823
  4107a4:	popa   
  4107a5:	xchg   esi,eax
  4107a6:	push   edx
  4107a7:	jmp    FWORD PTR [edx+ebp*2+0xc0bfffd]
  4107ae:	adc    eax,0xfd9b1964
  4107b3:	mov    ah,bl
  4107b5:	popa   
  4107b6:	in     al,dx
  4107b7:	je     0x41081a
  4107b9:	or     dh,BYTE PTR [edx+0x24]
  4107bc:	fistp  WORD PTR [ecx-0x72]
  4107bf:	xchg   esp,eax
  4107c0:	retf   
  4107c1:	fiadd  DWORD PTR [eax]
  4107c3:	mov    esp,DWORD PTR [edx-0x7f]
  4107c6:	jb     0x410817
  4107c8:	jb     0x4107cd
  4107ca:	push   0xfffffffe
  4107cc:	aaa    
  4107cd:	mov    al,0xd8
  4107cf:	push   edx
  4107d0:	mov    ch,0xf
  4107d2:	xchg   edx,eax
  4107d3:	jmp    FWORD PTR [ebp+0x3a147280]
  4107d9:	mov    dl,0xc1
  4107db:	inc    DWORD PTR [eax]
	...
  4107ed:	add    BYTE PTR [eax],al
  4107ef:	add    BYTE PTR [eax+0x3e437e46],cl
  4107f5:	mov    WORD PTR [edi+0x44],es
  4107f8:	bound  ebp,QWORD PTR [edx]
  4107fa:	jge    0x410840
  4107fc:	arpl   WORD PTR [esi-0x38f5fb38],di
  410802:	enter  0x2f05,0x1b
  410806:	ret    0xa7ff
  410809:	inc    ebp
  41080a:	sti    
  41080b:	ret    0x417a
  41080e:	add    BYTE PTR [ecx],al
  410810:	bound  eax,QWORD PTR [eax*2+0x61038173]
  410817:	or     ebx,ecx
  410819:	push   esp
  41081a:	jge    0x410868
  41081c:	arpl   WORD PTR [eax-0x7f9fae95],bx
  410822:	xchg   BYTE PTR [edi+0x615985af],bh
  410828:	pop    edi
  410829:	add    DWORD PTR [ecx],0x8cc2284
  41082f:	mov    bl,0x63
  410831:	imul   eax,DWORD PTR ds:0x2859ee8,0x0
  410838:	mov    ah,0x6f
  41083a:	adc    eax,0x4c070dc
  41083f:	pop    edi
  410840:	pushf  
  410841:	mov    ebp,0x4299c27e
  410846:	or     BYTE PTR [eax],al
  410848:	xchg   edi,eax
  410849:	sti    
  41084a:	pusha  
  41084b:	push   eax
  41084c:	xchg   ebx,eax
  41084d:	repz fimul DWORD PTR [edx-0x270c26a9]
	...
  410868:	dec    ebx
  410869:	fnsave [edx+0x6b]
  41086c:	sub    BYTE PTR [esp+ebp*4-0x1],ah
  410870:	adc    eax,0x2d6fa464
  410875:	add    ebp,ecx
  410877:	fldl2e 
  410879:	xor    ebp,esp
  41087b:	jo     0x410891
  41087d:	stc    
  41087e:	push   0x6c
  410880:	bound  ecx,QWORD PTR [esp+edx*8]
  410883:	test   BYTE PTR [esi],bl
  410885:	xchg   ebp,eax
  410886:	out    0xf7,eax
  410888:	addr16 xchg esi,eax
  41088a:	xchg   esp,eax
  41088b:	outs   dx,DWORD PTR ds:[esi]
  41088c:	fsub   DWORD PTR [ebp-0x6a789801]
  410892:	push   cs
  410893:	mov    BYTE PTR [ebp+0x1e7ecd0c],bh
  410899:	in     eax,0x97
  41089b:	jle    0x4108c3
  41089d:	xchg   ecx,eax
  41089e:	xchg   edi,eax
  41089f:	fisttp QWORD PTR [esi+0x2f]
  4108a2:	popa   
  4108a3:	iret   
  4108a4:	imul   edx,DWORD PTR [esi+edi*1+0x5399dee4],0xd00ed909
  4108af:	xchg   BYTE PTR [edi+0xf],cl
  4108b2:	xchg   edx,eax
  4108b3:	mov    bl,0x62
  4108b5:	xor    al,0x26
  4108b7:	int    0x2a
  4108b9:	cwde   
  4108ba:	out    dx,eax
  4108bb:	add    esi,DWORD PTR [eax-0x67]
  4108be:	ret    0xa576
  4108c1:	adc    eax,0x28621004
  4108c6:	jb     0x410897
  4108c8:	inc    ecx
  4108c9:	jmp    0x41e302
	...
  4108de:	add    BYTE PTR [eax],al
  4108e0:	mov    ah,0xd
  4108e2:	clc    
  4108e3:	mov    eax,0xf7b25d63
  4108e8:	pushaw 
  4108ea:	clc    
  4108eb:	iret   
  4108ec:	or     cl,ch
  4108ee:	jb     0x4108e2
  4108f0:	add    DWORD PTR [eax-0x26551900],0xddd59284
  4108fa:	mov    eax,ebx
  4108fc:	test   eax,0xd072017f
  410901:	xor    al,0x8a
  410903:	aad    0x7d
  410905:	mov    ecx,0xf185bd89
  41090a:	xor    DWORD PTR [eax],esi
  41090c:	cmp    BYTE PTR [eax],ah
  41090e:	and    eax,0x25182cdd
  410913:	aad    0xdd
  410915:	scas   eax,DWORD PTR es:[edi]
  410916:	je     0x4108f4
  410918:	mov    al,0x24
  41091a:	mov    WORD PTR [ebp-0x49af32c3],gs
  410920:	mov    ah,0x93
  410922:	(bad)  
  410923:	add    bl,BYTE PTR [ebx+0x29]
  410926:	push   eax
  410927:	mov    dh,0x94
  410929:	xchg   ebx,eax
  41092a:	(bad)  
  41092b:	ins    BYTE PTR es:[edi],dx
  41092c:	and    DWORD PTR ds:0xb8a5c054,ecx
  410932:	sbb    al,0x7d
  410934:	mov    ds:0x779d1393,al
  410939:	sbb    DWORD PTR [ecx],eax
  41093b:	push   0xffffffc6
  41093d:	adc    dh,BYTE PTR [ebp+eiz*1+0x4d]
  410941:	dec    esi
  410942:	int    0x60
	...
  410958:	and    bh,BYTE PTR [eax-0x480215e0]
  41095e:	sbb    al,0x3c
  410960:	push   0xffffffc8
  410962:	rcl    dl,0x5b
  410965:	adc    DWORD PTR [edi],0x87d95f4a
  41096b:	and    eax,0xa983c54a
  410970:	sbb    bh,BYTE PTR [esi-0xac5d275]
  410976:	test   BYTE PTR [edx-0x16951df6],dh
  41097c:	push   ss
  41097d:	and    al,0x56
  41097f:	add    BYTE PTR [esi+0x4],dl
  410982:	aam    0xeb
  410984:	add    eax,0x46574dad
  410989:	add    al,0xd4
  41098b:	adc    DWORD PTR [ebx-0x22],0x74
  41098f:	adc    dl,BYTE PTR [eax-0x67]
  410992:	and    DWORD PTR [ebx+esi*1],ebp
  410995:	repnz popa 
  410997:	add    DWORD PTR [ebx+0xd5fc0c6],edi
  41099d:	test   eax,0xd7bfc25a
  4109a2:	test   bl,bl
  4109a4:	not    DWORD PTR [ebp-0x16a8bb76]
  4109aa:	xor    edx,edx
  4109ac:	push   esp
  4109ad:	xchg   ecx,eax
  4109ae:	and    DWORD PTR [eax],esp
  4109b0:	adc    ch,dl
  4109b2:	jmp    0x1c:0x21991004
  4109b9:	mov    eax,ds:0x2421
	...
  4109ce:	add    BYTE PTR [eax],al
  4109d0:	add    dl,BYTE PTR [ebp-0xc58bb76]
  4109d6:	jmp    0xea4fe0b2
  4109db:	sbb    DWORD PTR [edi-0x1b],0x51
  4109df:	call   0x400bda
  4109e4:	into   
  4109e5:	mov    cl,0xe5
  4109e7:	push   0x70
  4109e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109ea:	das    
  4109eb:	(bad)  [ebx]
  4109ed:	and    DWORD PTR [edx+eax*1-0x17bba5b5],eax
  4109f4:	pop    ebx
  4109f5:	add    dl,BYTE PTR ds:0xfd97096c
  4109fb:	test   bl,bh
  4109fd:	mov    cl,BYTE PTR [edi]
  4109ff:	mov    edi,ebx
  410a01:	cs (bad) 
  410a04:	mov    esp,0xfcc93303
  410a09:	dec    esp
  410a0a:	fiadd  DWORD PTR [ecx+0x62]
  410a0d:	add    al,0x42
  410a0f:	push   cs
  410a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a11:	dec    ecx
  410a12:	das    
  410a13:	sar    BYTE PTR [eax],0x3f
  410a16:	retf   0x221a
  410a19:	or     al,0x4a
  410a1b:	enter  0xf321,0x79
  410a1f:	lock loop 0x4109a4
  410a22:	std    
  410a23:	call   DWORD PTR [ecx-0x24]
  410a26:	aad    0x32
  410a28:	int    0xb9
  410a2a:	out    dx,al
  410a2b:	pop    es
  410a2c:	dec    esp
  410a2d:	(bad)  
  410a2e:	jp     0x410a75
  410a30:	not    WORD PTR [ebx]
  410a33:	inc    DWORD PTR [eax]
	...
  410a45:	add    BYTE PTR [eax],al
  410a47:	add    BYTE PTR [esi+0x58],ch
  410a4a:	jp     0x410a19
  410a4c:	lods   eax,DWORD PTR ds:[esi]
  410a4d:	outs   dx,BYTE PTR ds:[esi]
  410a4e:	std    
  410a4f:	inc    esi
  410a50:	imul   ecx,DWORD PTR [edx-0x7],0x7a638f71
  410a57:	dec    ebp
  410a58:	pop    esi
  410a59:	call   0x80a46c4a
  410a5e:	and    BYTE PTR [ebp+0x5e],0x80
  410a62:	and    BYTE PTR [ebp+0x6a],0x80
  410a66:	retf   
  410a67:	ret    0x4ce9
  410a6a:	and    eax,0xdf5a7a04
  410a6f:	add    BYTE PTR [edx-0x42],ah
  410a72:	add    eax,0x74f7b400
  410a77:	push   esi
  410a78:	jmp    0x9cce073e
  410a7d:	jl     0x410afd
  410a7f:	adc    ebx,edi
  410a81:	add    DWORD PTR [ecx],0x0
  410a84:	bound  ebx,QWORD PTR [eax-0x7f9c9fb0]
  410a8a:	test   DWORD PTR [edi-0x387f8249],edi
  410a90:	and    eax,0xb48b1697
  410a95:	js     0x410b0f
  410a97:	dec    ebp
  410a98:	pop    esi
  410a99:	fnstenv [edx-0x38]
  410a9c:	inc    ecx
  410a9d:	in     eax,0x70
  410a9f:	or     bl,dh
  410aa1:	pop    ebp
  410aa2:	sub    eax,0xe920eefc
  410aa7:	jp     0x410a50
  410aa9:	loope  0x410ad1
  410aab:	into   
	...
  410ac0:	and    ebx,ebp
  410ac2:	out    0xd5,eax
  410ac4:	fadd   DWORD PTR [edi-0x1aa07be2]
  410aca:	out    0x78,eax
  410acc:	pop    ecx
  410acd:	mov    ebp,0x5e58f7f3
  410ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ad3:	pop    es
  410ad4:	fldl2e 
  410ad6:	push   esi
  410ad7:	cmp    dl,bh
  410ad9:	xchg   ecx,eax
  410ada:	mov    ecx,0x355e0cff
  410adf:	pop    esp
  410ae0:	imul   ebx,ecx,0x330503e7
  410ae6:	sub    cl,BYTE PTR [eax]
  410ae8:	bound  ebp,QWORD PTR [ebx]
  410aea:	xchg   edi,eax
  410aeb:	js     0x410b06
  410aed:	mov    ebp,0xcd9278f3
  410af2:	popf   
  410af3:	sti    
  410af4:	adc    BYTE PTR [edi+eiz*2-0x6c269612],bh
  410afb:	adc    al,0x11
  410afd:	pop    esi
  410afe:	es jns 0x410b28
  410b01:	fnsave [edx+0x16]
  410b04:	gs int3 
  410b06:	dec    edi
  410b07:	jns    0x410b38
  410b09:	xchg   ecx,eax
  410b0a:	cdq    
  410b0b:	jmp    DWORD PTR [eax-0x2c03ba2c]
  410b11:	jle    0x410b55
  410b13:	aad    0xd8
  410b15:	lahf   
  410b16:	mov    edi,0xe7913dc7
  410b1b:	int3   
  410b1c:	xchg   edi,eax
  410b1d:	fwait
  410b1e:	jmp    0x410b23
  410b20:	fst    DWORD PTR ds:0x804
	...
  410b36:	add    BYTE PTR [eax],al
  410b38:	mov    WORD PTR [eax+eax*1-0x48],fs
  410b3c:	ss fs push esi
  410b3f:	in     eax,0x94
  410b41:	in     al,0x82
  410b43:	jb     0x410b6c
  410b45:	(bad)  [ebx-0x352c1c1b]
  410b4b:	sbb    edi,ebx
  410b4d:	and    BYTE PTR [eax+edi*1+0xbc1816a],cl
  410b54:	popa   
  410b55:	fldl2t 
  410b57:	jmp    0x410b8c
  410b59:	cdq    
  410b5a:	test   BYTE PTR [ecx+0x1ffde9d5],ch
  410b60:	(bad)  
  410b61:	arpl   WORD PTR [esi-0xf],dx
  410b64:	and    BYTE PTR [edx+0x2],bh
  410b67:	ins    BYTE PTR es:[edi],dx
  410b68:	pop    es
  410b69:	fucomp st(0)
  410b6b:	or     cl,al
  410b6d:	fld    DWORD PTR [eax]
  410b6f:	scas   al,BYTE PTR es:[edi]
  410b70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b71:	call   0xe525:0x2c2ae904
  410b78:	jp     0x410ba4
  410b7a:	or     DWORD PTR [edx-0x1eb09e61],edi
  410b80:	and    BYTE PTR [edx+0x2],bh
  410b83:	push   0x20
  410b85:	fsub   st(0),st
  410b87:	in     al,0x80
  410b89:	fld    DWORD PTR [eax]
  410b8b:	sub    esp,DWORD PTR [ebp-0x27]
  410b8e:	push   ebx
  410b8f:	bound  edx,QWORD PTR ds:0xe001e45b
  410b95:	test   BYTE PTR [eax-0x74269e18],dl
  410b9b:	in     eax,dx
	...
  410bb0:	test   DWORD PTR [ecx],ebp
  410bb2:	imul   ebp,ebx,0xe600d963
  410bb8:	jae    0x410ba3
  410bba:	push   ss
  410bbb:	sub    DWORD PTR [esi-0x78],ebx
  410bbe:	fdiv   st,st(2)
  410bc0:	mov    eax,ds:0x2bc489d0
  410bc5:	fwait
  410bc6:	std    
  410bc7:	add    BYTE PTR [esi-0x2f],bl
  410bca:	adc    al,0x40
  410bcc:	cmp    ebp,DWORD PTR [edx-0x25330e76]
  410bd2:	lock xchg DWORD PTR [ebx-0x2b],ecx
  410bd6:	test   BYTE PTR ds:0x41b323,0xfa
  410bdd:	mov    BYTE PTR ds:0x6c119457,dh
  410be3:	inc    esp
  410be4:	or     ebp,DWORD PTR [ebx-0x1924ea02]
  410bea:	inc    eax
  410beb:	add    BYTE PTR [ebp-0x26],ch
  410bee:	fsubr  DWORD PTR [esi-0x71]
  410bf1:	aad    0xff
  410bf3:	je     0x410ba6
  410bf5:	xor    ebp,DWORD PTR [ecx-0x7dfbbb01]
  410bfb:	shr    BYTE PTR [edi+0x730d80e4],0xb3
  410c02:	inc    ecx
  410c03:	add    dl,cl
  410c05:	sbb    al,BYTE PTR ds:0xfd4f95dc
  410c0b:	es dec edi
  410c0d:	xchg   ebp,eax
  410c0e:	std    
  410c0f:	push   esi
  410c10:	push   esp
  410c11:	jmp    0x0:0x12dc
	...
  410c28:	retf   
  410c29:	fistp  DWORD PTR [ebp-0x76]
  410c2c:	mov    edi,0xb58308ef
  410c31:	(bad)  
  410c32:	inc    BYTE PTR [ebx-0x78026c13]
  410c38:	mov    ebp,0x9f448787
  410c3d:	xchg   DWORD PTR [ebp-0x3bf189ba],eax
  410c43:	pop    esi
  410c44:	mov    DWORD PTR [ebp+0x4c055fd],ecx
  410c4a:	mov    DWORD PTR [esi],0x3d5c2b
  410c50:	xor    ebp,DWORD PTR [esi+0x0]
  410c53:	add    BYTE PTR [edx-0x80],ah
  410c56:	outs   dx,DWORD PTR ds:[esi]
  410c57:	inc    ebx
  410c58:	jle    0x410cd2
  410c5a:	add    al,0x74
  410c5c:	or     edi,DWORD PTR gs:[eax]
  410c5f:	out    0x1d,eax
  410c61:	and    DWORD PTR [eax+eax*1],eax
  410c64:	jmp    0x5f02d3a7
  410c69:	adc    al,0x8a
  410c6c:	inc    BYTE PTR [ecx]
  410c6e:	push   esi
  410c6f:	ja     0x410cd4
  410c71:	add    BYTE PTR [ecx],0x56
  410c74:	jmp    0x5d07deea
  410c79:	jo     0x410bfd
  410c7b:	aas    
  410c7c:	bound  ecx,QWORD PTR [esi]
  410c7e:	add    eax,ebx
  410c80:	je     0x410c36
  410c82:	add    al,0x1
  410c84:	push   edi
  410c85:	dec    esi
  410c86:	stos   BYTE PTR es:[edi],al
  410c87:	mov    eax,DWORD PTR [esp+esi*4+0x4]
  410c8b:	push   edi
	...
  410ca0:	int    0x8d
  410ca2:	popa   
  410ca3:	adc    DWORD PTR [edx],esp
  410ca5:	sub    BYTE PTR [edi+0x4],0x9a
  410ca9:	xchg   esi,eax
  410caa:	mov    ebp,0xba562ff
  410caf:	call   0xfeac23fe
  410cb4:	faddp  st(0),st
  410cb6:	in     eax,dx
  410cb7:	adc    dl,ah
  410cb9:	jne    0x410d04
  410cbb:	ins    DWORD PTR es:[edi],dx
  410cbc:	push   ds
  410cbd:	add    BYTE PTR [edi+eax*8],0x67
  410cc1:	adc    al,0xd8
  410cc3:	inc    ebx
  410cc4:	bound  edx,QWORD PTR [edi+0x4f623f4d]
  410cca:	push   0x14
  410ccc:	xchg   esi,eax
  410ccd:	xchg   edx,eax
  410cce:	sar    edi,0xd8
  410cd1:	push   ebp
  410cd2:	stc    
  410cd3:	push   edx
  410cd4:	xlat   BYTE PTR ds:[ebx]
  410cd5:	xor    eax,0xfcef4f65
  410cda:	jns    0x410cd9
  410cdc:	push   ebp
  410cdd:	jg     0x410cb1
  410cdf:	data16 fld DWORD PTR [bx]
  410ce3:	add    al,0x62
  410ce5:	add    edi,ebx
  410ce7:	imul   edi,DWORD PTR ds:0x62f0928e,0xdad0e7d9
  410cf1:	sub    eax,esp
  410cf3:	imul   ecx,DWORD PTR [esi-0x13],0x551dc3d5
  410cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cfb:	lock jo 0x410d28
  410cfe:	pop    ebp
  410cff:	jg     0x410ce6
  410d01:	mov    fs,WORD PTR [esi+0x69]
	...
  410d17:	add    BYTE PTR [ebx-0x27],bh
  410d1a:	aaa    
  410d1b:	imul   edx,DWORD PTR [esi+0x31],0x5af5c3fe
  410d22:	mov    ds:0x8b4be0f8,eax
  410d27:	push   0xffffffe4
  410d29:	(bad)  
  410d2a:	in     eax,0xcc
  410d2c:	push   ecx
  410d2d:	jmp    0x696e:0x8ec1a76a
  410d34:	jb     0x410d14
  410d36:	jl     0x410d7c
  410d38:	(bad)  
  410d39:	mov    al,ds:0x16ea0603
  410d3e:	in     eax,0x5c
  410d40:	popa   
  410d41:	xchg   edi,eax
  410d42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d43:	mul    BYTE PTR [edx+0x62]
  410d46:	je     0x410d98
  410d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d49:	lea    edi,[esi]
  410d4b:	pop    esp
  410d4c:	xchg   edi,edx
  410d4e:	out    0x3,eax
  410d50:	loope  0x410d48
  410d52:	fild   WORD PTR [ebx]
  410d54:	fisttp DWORD PTR [esi]
  410d56:	in     al,dx
  410d57:	jnp    0x410d78
  410d59:	fnstsw WORD PTR [esi+0x212ea77c]
  410d5f:	inc    esi
  410d60:	popa   
  410d61:	fldenv [edx-0x30]
  410d64:	inc    ecx
  410d65:	aad    0x72
  410d67:	(bad)  
  410d68:	popa   
  410d69:	pusha  
  410d6a:	test   al,0xff
  410d6c:	call   0xdf220e88
  410d71:	and    al,BYTE PTR ds:0x919c8ee
  410d77:	jae    0x410d98
  410d79:	loope  0x410cfc
  410d7b:	dec    ebx
	...
  410d90:	lea    eax,ds:[ebp+0x42633a28]
  410d97:	fsubr  QWORD PTR [ecx+0x1f720c19]
  410d9d:	fld    QWORD PTR [edi+0x4977628]
  410da3:	jmp    0x6b306ddb
  410da8:	sti    
  410da9:	fdivr  st,st(5)
  410dab:	sbb    eax,0x3eff4962
  410db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410db1:	(bad)  [esi+0x4923ed2f]
  410db7:	adc    eax,0xed7514e8
  410dbc:	das    
  410dbd:	cdq    
  410dbe:	jmp    0x5b1bcd93
  410dc3:	add    esi,DWORD PTR [ecx-0x80]
  410dc6:	add    edi,DWORD PTR [edx-0x1094e5c9]
  410dcc:	inc    edi
  410dcd:	push   ds
  410dce:	or     eax,0xfffa19be
  410dd3:	call   0xb9943239
  410dd8:	cmp    ah,ch
  410dda:	fcomp  st(4)
  410ddc:	mov    eax,ds:0xe630328c
  410de1:	test   ch,bh
  410de3:	pusha  
  410de4:	mov    ds:0x21540dd8,eax
  410de9:	sub    ebx,DWORD PTR [edi+0x2a]
  410dec:	mov    bl,0x5f
  410dee:	out    dx,eax
  410def:	push   0xffffff8b
  410df1:	aam    0x0
  410df3:	popf   
	...
  410e08:	ins    DWORD PTR es:[edi],dx
  410e09:	pop    edi
  410e0a:	inc    esi
  410e0b:	stc    
  410e0c:	ds adc eax,0x91730025
  410e12:	xchg   ecx,eax
  410e13:	shl    BYTE PTR [eax-0x40],0x55
  410e17:	push   DWORD PTR [esi]
  410e19:	adc    al,0x15
  410e1b:	inc    eax
  410e1c:	cmp    ecx,DWORD PTR [edi]
  410e1e:	inc    esp
  410e1f:	or     BYTE PTR [esi-0x4fd88deb],dh
  410e25:	and    DWORD PTR [ecx],0xfea5740c
  410e2b:	jbe    0x410e74
  410e2d:	repz adc al,0x30
  410e30:	add    eax,0xcb84fd98
  410e35:	mov    DWORD PTR [esi],eax
  410e37:	mov    DWORD PTR [ebp-0x1b],ecx
  410e3a:	mov    al,0x1
  410e3c:	and    BYTE PTR [esi+edi*8+0x14f31376],al
  410e43:	add    ch,dh
  410e45:	xchg   edi,eax
  410e46:	std    
  410e47:	and    BYTE PTR [ebp-0x73],0xfd
  410e4b:	xor    DWORD PTR [ebx-0x83da46d],edi
  410e51:	xlat   BYTE PTR ds:[ebx]
  410e52:	push   esi
  410e53:	mov    ebx,DWORD PTR [edx+0x58]
  410e56:	jnp    0x410e5c
  410e58:	dec    esp
  410e59:	mov    DWORD PTR ds:0x73f2b96a,edx
  410e5f:	add    al,0x3c
  410e61:	jmp    0x76fd:0xd80b15e4
  410e68:	(bad)  
  410e69:	repnz adc al,0x14
	...
  410e80:	mov    ch,0x97
  410e82:	std    
  410e83:	sub    ch,0x8b
  410e86:	inc    BYTE PTR [ebx+0x73fd8fdd]
  410e8c:	jle    0x410e80
  410e8e:	jae    0x410e98
  410e90:	cmp    al,0xea
  410e92:	add    BYTE PTR [esi],dl
  410e94:	mov    ebx,0x736681d7
  410e99:	xlat   BYTE PTR ds:[ebx]
  410e9a:	pop    esi
  410e9b:	ret    
  410e9c:	bound  ecx,QWORD PTR [ebp+0x7a]
  410e9f:	jmp    0x410e82
  410ea1:	lea    esi,[ebp-0x286f26ab]
  410ea7:	add    BYTE PTR [ebp+0x3],bl
  410eaa:	(bad)  
  410eab:	(bad)  
  410eac:	outs   dx,DWORD PTR ds:[esi]
  410ead:	fmul   QWORD PTR [edi]
  410eaf:	inc    eax
  410eb0:	(bad)  
  410eb1:	cmc    
  410eb2:	inc    esp
  410eb3:	jae    0x410f13
  410eb5:	out    dx,al
  410eb6:	inc    esp
  410eb7:	jmp    0xf582:0x69fc07c0
  410ebe:	mov    eax,0x33f793df
  410ec3:	(bad)  
  410ec4:	xchg   edx,eax
  410ec5:	jl     0x410e47
  410ec7:	mov    edi,0x4ced9b9d
  410ecc:	adc    eax,0xa21629ae
  410ed1:	sub    BYTE PTR [eax],0x33
  410ed4:	cmp    eax,0x1e750180
  410ed9:	ins    BYTE PTR es:[edi],dx
  410eda:	lock or esp,edi
  410edd:	mov    ebp,0x935267b0
  410ee2:	add    DWORD PTR [eax],eax
	...
  410ef8:	xchg   edx,eax
  410ef9:	out    0x23,al
  410efb:	mov    ebp,DWORD PTR [eax+ebp*2-0x7f9df9ff]
  410f02:	cmp    BYTE PTR [edi+0x446b3f57],0xe
  410f09:	loope  0x410efb
  410f0b:	add    al,0x7b
  410f0d:	xor    eax,0x2a537435
  410f12:	shl    DWORD PTR [ebx-0x7d545b9d],0x27
  410f19:	pop    eax
  410f1a:	add    DWORD PTR [edx+edx*8-0x35],esi
  410f1e:	lock mov bh,0x89
  410f21:	jg     0x410f89
  410f23:	je     0x410ec3
  410f25:	mov    ebx,0xd96fe010
  410f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2b:	add    ecx,DWORD PTR [ecx+0x1404576d]
  410f31:	mov    al,ds:0x256dfb29
  410f36:	arpl   WORD PTR [edi-0x1e],dx
  410f39:	jge    0x410fba
  410f3b:	add    al,0x62
  410f3d:	fldcw  WORD PTR [eax+eax*8+0x59]
  410f41:	sub    DWORD PTR [ebp-0x80],esp
  410f44:	in     eax,0x8a
  410f46:	out    dx,al
  410f47:	gs xchg ebp,eax
  410f49:	add    esp,ebp
  410f4b:	and    esp,DWORD PTR [edx-0x27]
  410f4e:	dec    edi
  410f4f:	gs xor al,0xd9
  410f52:	out    0xd2,eax
  410f54:	and    al,0x14
  410f56:	int3   
  410f57:	lock (bad) 
  410f59:	(bad)  
  410f5b:	add    BYTE PTR fs:[eax],al
	...
  410f6e:	add    BYTE PTR [eax],al
  410f70:	jbe    0x410f5f
  410f72:	aad    0xc3
  410f74:	adc    eax,0x5eefa755
  410f79:	pop    esi
  410f7a:	pop    esp
  410f7b:	push   eax
  410f7c:	pop    es
  410f7d:	mov    ah,BYTE PTR [esi-0x1826a4a4]
  410f83:	add    ebp,DWORD PTR [ebx]
  410f85:	xchg   esi,eax
  410f86:	fld    DWORD PTR [ebx+0x1a]
  410f89:	xchg   esi,eax
  410f8a:	fisubr WORD PTR [ebp-0x603dede]
  410f90:	and    eax,0xa230eb05
  410f95:	xchg   ebp,eax
  410f96:	add    DWORD PTR ds:0x201962a,ecx
  410f9c:	sub    dl,BYTE PTR [esi-0x21ce4550]
  410fa2:	push   0x5b
  410fa4:	dec    esi
  410fa5:	add    eax,0x95a231eb
  410faa:	xchg   edi,eax
  410fab:	add    ah,BYTE PTR [ecx+0x6c40e848]
  410fb1:	inc    ebx
  410fb2:	test   al,0xf7
  410fb4:	sbb    eax,0xc9e30105
  410fb9:	add    eax,0x9721fa02
  410fbe:	push   0x5
  410fc0:	scas   al,BYTE PTR es:[edi]
  410fc1:	xchg   esi,eax
  410fc2:	push   0xfffffff9
  410fc4:	test   eax,0x615e0d96
  410fc9:	and    DWORD PTR [ecx-0x6b],ecx
  410fcc:	ins    DWORD PTR es:[edi],dx
  410fcd:	push   esi
  410fce:	call   0x321d5daf
  410fd3:	sub    DWORD PTR [eax],eax
	...
  410fe5:	add    BYTE PTR [eax],al
  410fe7:	add    BYTE PTR [ebx-0x5d6ee30e],ah
  410fed:	repnz adc BYTE PTR [ecx-0x2a75d25e],dl
  410ff4:	adc    BYTE PTR [edi],ch
  410ff6:	mov    bl,al
  410ff8:	cdq    
  410ff9:	mov    al,ds:0x18c6d6fd
  410ffe:	imul   ebp,ecx,0xffffffbe
  411001:	or     eax,0x84dc7009
  411006:	std    
  411007:	aam    0x29
  411009:	out    dx,eax
  41100a:	inc    eax
  41100b:	jmp    0x5c4dacf2
  411010:	les    eax,FWORD PTR [eax+edx*2-0x21ef35a]
  411017:	pop    ss
  411018:	bound  ecx,QWORD PTR [eax+0x195c2913]
  41101e:	add    DWORD PTR [esi+0x29c0e399],edx
  411024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411025:	xchg   ecx,eax
  411026:	ret    0x61e5
  411029:	mov    al,BYTE PTR cs:[ebp+0x788a2eb0]
  411030:	sub    DWORD PTR [eax-0x3],ebx
  411033:	inc    si
  411035:	sbb    BYTE PTR [ebx-0x17],ch
  411038:	ds or  eax,0x84ec6009
  41103e:	std    
  41103f:	hlt    
  411040:	cdq    
  411041:	out    dx,al
  411042:	inc    eax
  411043:	add    BYTE PTR [ebx+0x60cc159],cl
  411049:	inc    edi
  41104a:	stc    
  41104b:	push   eax
	...
  411060:	push   esp
  411061:	ja     0x411068
  411063:	dec    ebp
  411065:	mov    dh,bh
  411067:	adc    eax,0x40d68f
  41106c:	dec    esp
  41106d:	adc    al,0x1b
  41106f:	sar    BYTE PTR [ebx+0x7fc2c89e],0xdc
  411076:	std    
  411077:	je     0x4110a8
  411079:	mov    dh,bh
  41107b:	jno    0x4110d0
  41107d:	std    
  41107e:	jo     0x411084
  411080:	push   esp
  411081:	(bad)  
  411082:	xor    al,0x16
  411084:	sti    
  411085:	fcomi  st,st(5)
  411087:	fsub   DWORD PTR [eax+0x1d]
  41108a:	ds ret 0xdc3f
  41108e:	sub    esp,0x8b564367
  411094:	or     dh,ch
  411096:	xchg   ch,bh
  411098:	and    al,0xfc
  41109a:	add    eax,0x336ab94f
  4110a0:	sub    BYTE PTR [ebx],0xe6
  4110a3:	ret    0xfbb6
  4110a6:	inc    BYTE PTR [ebx+ecx*8+0x478b2ea0]
  4110ad:	mov    cl,0x38
  4110af:	jl     0xfa3b9343
  4110b5:	mov    al,ds:0x43bb6a04
  4110ba:	jmp    0x741c:0x681c180b
  4110c1:	pusha  
  4110c2:	not    DWORD PTR [edi]
	...
  4110d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110d9:	lahf   
  4110da:	(bad)  
  4110db:	push   eax
  4110dc:	cli    
  4110dd:	cli    
  4110de:	jae    0x4110e4
  4110e0:	adc    al,0x82
  4110e2:	or     DWORD PTR [esi],edx
  4110e4:	bound  esi,QWORD PTR [edx]
  4110e6:	add    DWORD PTR [ebp-0x4ffa535e],eax
  4110ec:	arpl   WORD PTR [ebx],bp
  4110ee:	out    0x54,al
  4110f0:	xchg   ebp,eax
  4110f1:	lods   al,BYTE PTR ds:[esi]
  4110f2:	sbb    DWORD PTR [esi],edx
  4110f4:	and    dh,BYTE PTR [edx-0x72]
  4110f7:	cmp    al,0x82
  4110f9:	lods   al,BYTE PTR ds:[esi]
  4110fa:	sar    edi,0xe8
  4110fd:	jmp    0x9f730d85
  411102:	add    DWORD PTR [eax],eax
  411104:	idiv   BYTE PTR [ebx-0x72]
  411107:	int    0x7a
  411109:	mov    bl,0x5f
  41110b:	(bad)  
  41110c:	pop    ebp
  41110d:	data16 (bad) 
  41110f:	(bad)  
  411110:	push   ebp
  411111:	scas   al,BYTE PTR es:[edi]
  411112:	sbb    DWORD PTR [esi],edx
  411114:	mov    ds:0x913cc070,al
  411119:	lahf   
  41111a:	add    DWORD PTR [eax],eax
  41111c:	mov    bh,0xe2
  41111e:	ins    DWORD PTR es:[edi],dx
  41111f:	push   es
  411120:	sub    al,0xbd
  411122:	sub    BYTE PTR [eax],cl
  411124:	push   edx
  411125:	and    eax,0xdcaeff01
  41112a:	les    ecx,FWORD PTR [esi+eiz*4-0x7100ef2c]
  411131:	fadd   st(4),st
  411133:	mov    bl,BYTE PTR [ecx+eiz*8]
  411136:	out    dx,al
  411137:	psubd  mm5,QWORD PTR [ecx+0x5]
	...
  41114e:	add    BYTE PTR [eax],al
  411150:	(bad)  
  411151:	cmc    
  411152:	inc    ecx
  411153:	jae    0x41116a
  411155:	ins    BYTE PTR es:[edi],dx
  411156:	adc    BYTE PTR [ebx-0x26b92],al
  41115c:	jno    0x41116f
  41115e:	arpl   WORD PTR [ebx-0x7a],si
  411161:	jl     0x4111c5
  411163:	(bad)  
  411164:	nop
  411165:	xor    dl,al
  411167:	pop    ebp
  411168:	loope  0x41119e
  41116a:	sub    eax,0xb77056c2
  41116f:	push   esi
  411170:	dec    eax
  411171:	fldl2e 
  411173:	shr    eax,0x80
  411176:	ror    DWORD PTR [ebx],1
  411178:	loop   0x411180
  41117a:	in     eax,0x4
  41117c:	or     dl,dh
  41117e:	mov    ds:0x439f8553,eax
  411183:	bound  edx,QWORD PTR [ebp+ebx*2+0x2f33d727]
  41118a:	arpl   WORD PTR [edx+0x7d],dx
  41118d:	fld    TBYTE PTR [edx+eiz*2]
  411190:	jl     0x4111ef
  411192:	daa    
  411193:	xlat   BYTE PTR ds:[ebx]
  411194:	pop    ds
  411195:	push   edx
  411196:	mov    bl,0x27
  411198:	pop    esi
  411199:	(bad)  
  41119a:	pop    esi
  41119b:	or     eax,0xd8e980e1
  4111a0:	data16 repz xlat BYTE PTR ds:[ebx]
  4111a3:	mov    ebx,0x43bad248
  4111a8:	mov    ebx,0x4a8695e5
  4111ad:	out    dx,al
  4111ae:	faddp  st(7),st
  4111b0:	daa    
  4111b1:	sub    DWORD PTR [edx],edi
  4111b3:	popa   
	...
  4111c8:	lods   al,BYTE PTR ds:[esi]
  4111c9:	fstp   st(6)
  4111cb:	not    DWORD PTR [ecx]
  4111cd:	in     al,dx
  4111ce:	daa    
  4111cf:	add    al,0xdf
  4111d1:	cwde   
  4111d2:	push   esp
  4111d3:	std    
  4111d4:	popf   
  4111d5:	push   es
  4111d6:	cmc    
  4111d7:	add    cl,BYTE PTR [edi+0x41d8bee8]
  4111dd:	jmp    0x86a2eb98
  4111e2:	aam    0x23
  4111e4:	push   esp
  4111e5:	sbb    eax,ebp
  4111e7:	xchg   BYTE PTR [ebp+0x6293e40b],dh
  4111ed:	jb     0x4111de
  4111ef:	pusha  
  4111f0:	dec    esi
  4111f1:	shl    ebp,0xc3
  4111f4:	fst    QWORD PTR [edx-0x4a]
  4111f7:	(bad)  
  4111f8:	lds    esi,FWORD PTR [eax-0x7f]
  4111fb:	pusha  
  4111fc:	int3   
  4111fd:	test   DWORD PTR [eax],eax
  4111ff:	pop    ds
  411200:	inc    ebx
  411201:	in     eax,dx
  411202:	loopne 0x4111d8
  411204:	mov    eax,ds:0xa3292f85
  411209:	and    eax,ebx
  41120b:	icebp  
  41120c:	popa   
  41120d:	sub    al,0x8a
  41120f:	inc    ebp
  411210:	loope  0x411283
  411212:	test   cl,ch
  411214:	popa   
  411215:	fst    DWORD PTR [esi-0x2d]
  411218:	adc    DWORD PTR [ebx+eax*2+0x6b],0x7c
  41121d:	test   DWORD PTR [ebp+0x62],ecx
  411220:	xor    DWORD PTR [esi-0x57],edi
  411223:	add    BYTE PTR [edi-0x27],ah
  411226:	mov    dh,BYTE PTR [edi-0x123ba59b]
	...
  411240:	stc    
  411241:	xchg   edi,eax
  411242:	sti    
  411243:	push   ss
  411244:	add    eax,DWORD PTR [edi+0x524bdd73]
  41124a:	inc    ebx
  41124b:	imul   ecx,DWORD PTR [eax+0x50],0x9a3bf143
  411252:	shl    cl,0x3b
  411255:	push   edx
  411256:	inc    ebx
  411257:	imul   ebp,ebp,0x1d
  41125a:	cmp    DWORD PTR [ecx],0x14e896e7
  411260:	ret    
  411261:	cmp    ebp,0x37
  411264:	cdq    
  411265:	call   0xe984:0x70e0e908
  41126c:	popa   
  41126d:	fst    DWORD PTR [ecx+0x14]
  411270:	enter  0x6b2b,0x37
  411274:	outs   dx,DWORD PTR ds:[esi]
  411275:	test   BYTE PTR [ebx+0x55eb4a25],cl
  41127b:	cmp    edi,esp
  41127d:	mov    eax,ds:0xd8390be8
  411282:	add    BYTE PTR [ebx+0x16],ah
  411285:	rol    DWORD PTR [ecx+0x77716da5],1
  41128b:	add    dh,bl
  41128d:	stc    
  41128e:	(bad)  
  41128f:	mov    ebp,0xfffdac0b
  411294:	inc    eax
  411295:	retf   
  411296:	mov    eax,0xd8a410
  41129b:	data16 xor bl,BYTE PTR [ecx+eiz*1+0x543d1310]
  4112a3:	add    DWORD PTR [eax],eax
	...
  4112b5:	add    BYTE PTR [eax],al
  4112b7:	add    BYTE PTR [ebx+0x66ed55],bh
  4112bd:	sub    ah,BYTE PTR [ecx+eax*8+0x4a]
  4112c1:	shr    BYTE PTR [edx+0x14],1
  4112c4:	(bad)  
  4112c5:	fwait
  4112c6:	and    DWORD PTR [edx*4-0x6adbb6b1],edx
  4112cd:	dec    eax
  4112ce:	mov    cl,bl
  4112d0:	push   ebx
  4112d1:	sar    bl,0xff
  4112d4:	dec    esp
  4112d5:	pop    esp
  4112d6:	mov    ebp,0x14f99475
  4112db:	cmp    BYTE PTR [ebp-0x68],dl
  4112de:	std    
  4112df:	cmp    al,0xb
  4112e1:	mov    cl,0x0
  4112e3:	add    dh,dl
  4112e5:	add    BYTE PTR [ebx+0x3b],0x46
  4112e9:	pop    edi
  4112ea:	or     eax,0xdd84b27
  4112ef:	inc    edi
  4112f0:	sbb    ebx,DWORD PTR [ebp+esi*4+0xdd7d20]
  4112f7:	push   ax
  4112f9:	and    eax,0x1d79bf70
  4112fe:	jmp    0x411302
  411300:	ficomp WORD PTR [ebp+0x5e]
  411304:	outs   dx,BYTE PTR ds:[esi]
  411305:	inc    eax
  411306:	add    ah,0x77
  411309:	fld    QWORD PTR [eax]
  41130b:	add    cl,cl
  41130d:	mov    ebp,?
  41130f:	push   esp
  411310:	jo     0x41131b
  411312:	push   ecx
  411313:	push   ebx
  411314:	xor    eax,0x6227e54c
  411319:	ins    DWORD PTR es:[edi],dx
  41131a:	pop    ebp
  41131b:	inc    BYTE PTR [eax]
	...
  41132d:	add    BYTE PTR [eax],al
  41132f:	add    BYTE PTR [ecx+0x6a551b40],dl
  411335:	or     eax,ecx
  411337:	sti    
  411338:	fistp  QWORD PTR [eax+eiz*2-0x4bcfe1f2]
  41133f:	(bad)  
  411340:	aaa    
  411341:	jp     0x4113a1
  411343:	jo     0x4113a3
  411345:	sti    
  411346:	imul   DWORD PTR [ebx]
  411348:	push   esp
  411349:	xor    al,BYTE PTR [ecx]
  41134b:	mov    ebp,DWORD PTR [edx+0x16fe5dee]
  411351:	cdq    
  411352:	adc    dh,dh
  411354:	sub    al,0x64
  411356:	mov    dh,0xfe
  411358:	ja     0x4112dc
  41135a:	repz aas 
  41135c:	bound  ebx,QWORD PTR [eax-0x7382aa0b]
  411362:	fldcw  WORD PTR [ebp+0x1e]
  411365:	jb     0x4113c5
  411367:	adc    al,0x6
  411369:	add    cl,0xff
  41136c:	fidiv  WORD PTR [ecx-0x84af628]
  411372:	dec    esp
  411373:	out    0x88,eax
  411375:	(bad)  
  411376:	pop    ebp
  411377:	(bad)  
  411378:	fld    DWORD PTR [eax-0x70310a78]
  41137e:	out    0x22,eax
  411380:	jmp    0x399f8067
  411385:	jl     0x4113e5
  411387:	and    DWORD PTR [edx],0x2d
  41138a:	or     DWORD PTR [ebx-0xd467e4],ecx
  411390:	ja     0x41137a
  411392:	idiv   BYTE PTR [edi]
	...
  4113a8:	bound  eax,QWORD PTR [edi]
  4113aa:	hlt    
  4113ab:	imul   esp,DWORD PTR [ebx+0x7],0x4c2a8a4c
  4113b2:	out    dx,eax
  4113b3:	jmp    0xd988:0x5b0d1651
  4113ba:	jmp    0x842e0075
  4113bf:	clc    
  4113c0:	and    eax,0x765f3ed9
  4113c5:	in     eax,dx
  4113c6:	cmc    
  4113c7:	ret    
  4113c8:	aad    0x27
  4113ca:	xchg   eax,edi
  4113cc:	lods   eax,DWORD PTR ds:[esi]
  4113cd:	in     al,dx
  4113ce:	daa    
  4113cf:	add    al,0x91
  4113d1:	cdq    
  4113d2:	push   ss
  4113d3:	mov    esi,0x7a99018
  4113d8:	(bad)  
  4113d9:	out    dx,eax
  4113da:	out    0x5e,eax
  4113dc:	xor    DWORD PTR [ebp-0x42cea115],edi
  4113e2:	jecxz  0x411442
  4113e4:	adc    bl,ch
  4113e6:	dec    esi
  4113e7:	clc    
  4113e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113e9:	in     al,dx
  4113ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113eb:	add    esp,DWORD PTR [eax-0x2747182f]
  4113f1:	jne    0x41145d
  4113f3:	outs   dx,DWORD PTR ds:[esi]
  4113f4:	dec    ecx
  4113f5:	es xchg esi,eax
  4113f7:	mov    ch,dh
  4113f9:	aam    0xbe
  4113fb:	mov    ch,dh
  4113fd:	shl    BYTE PTR [edx+0x3c],1
  411400:	js     0x411429
  411402:	arpl   WORD PTR [edx],ax
  411404:	mov    ah,0x2a
  411406:	arpl   WORD PTR [edx+0x54],cx
  411409:	sub    esp,ebp
  41140b:	mov    BYTE PTR [eax],al
	...
  41141d:	add    BYTE PTR [eax],al
  41141f:	add    BYTE PTR ds:0x4a02e603,cl
  411425:	scas   al,BYTE PTR es:[edi]
  411426:	imul   DWORD PTR [ecx+0x7c]
  411429:	or     eax,0xc14e5e94
  41142e:	std    
  41142f:	ret    
  411430:	sub    eax,0x62251ac5
  411435:	fstp   DWORD PTR [edx+esi*4+0x1c]
  411439:	or     al,0xf4
  41143b:	mov    ds,WORD PTR [esi-0x68ebb053]
  411441:	(bad)  
  411443:	mov    bl,0x7b
  411445:	mov    eax,0x7aab6200
  41144a:	call   0x15a9:0x83d961e8
  411451:	shl    esi,0x24
  411454:	sub    ah,dl
  411456:	je     0x411444
  411458:	js     0x411476
  41145a:	in     eax,dx
  41145b:	adc    al,0xd9
  41145d:	mov    eax,DWORD PTR [ebx-0x63]
  411460:	popa   
  411461:	or     eax,0xa9a56a07
  411466:	add    ah,bh
  411468:	mov    bl,0x5c
  41146a:	imul   dh
  41146c:	or     esi,DWORD PTR [edx]
  41146e:	inc    ebp
  411470:	out    dx,eax
  411471:	push   ds
  411472:	enter  0xae2b,0x81
  411476:	(bad)  
  411477:	fmul   QWORD PTR ds:0xad4e0a6f
  41147d:	test   eax,0xc79ece9
  411482:	es jmp 0x411488
	...
  411498:	popa   
  411499:	adc    BYTE PTR [ebx],0x49
  41149c:	jne    0x41145f
  41149e:	add    bl,bh
  4114a0:	and    DWORD PTR [edi-0x20],ebp
  4114a3:	mov    esp,0x114f6dda
  4114a8:	stc    
  4114a9:	jle    0x4114a8
  4114ab:	push   ss
  4114ac:	jae    0x411459
  4114ae:	aaa    
  4114af:	mov    ah,0x69
  4114b1:	push   edx
  4114b2:	inc    ebx
  4114b3:	add    eax,0xeefd15dd
  4114b8:	sbb    eax,0x14f6509b
  4114bd:	fst    DWORD PTR [edx-0x12]
  4114c0:	or     al,0xd1
  4114c2:	std    
  4114c3:	pop    esp
  4114c4:	push   edx
  4114c5:	sub    BYTE PTR [edi-0x1b],0x86
  4114c9:	in     eax,0x3c
  4114cb:	jmp    DWORD PTR [ecx]
  4114cd:	or     eax,0x6ad965ab
  4114d3:	add    bl,bh
  4114d5:	sbb    eax,0x1df72472
  4114da:	jb     0x411500
  4114dc:	pop    es
  4114dd:	push   ds
  4114de:	jno    0x4114e4
  4114e0:	les    eax,FWORD PTR [edi-0x2ac4e9eb]
  4114e6:	ret    0xfb08
  4114e9:	pop    ecx
  4114ea:	jmp    0x5389ad1b
  4114ef:	mov    ebp,DWORD PTR [edi-0x4f]
  4114f2:	inc    eax
  4114f3:	push   edi
  4114f4:	push   eax
  4114f5:	mov    al,ds:0xc3504021
  4114fa:	test   dh,dh
	...
  411510:	mov    ch,0x43
  411512:	mov    esp,0xdcc300
  411517:	mov    ebp,DWORD PTR [eax+0xe3bc351]
  41151d:	int    0x4d
  41151f:	(bad)
  411522:	mov    cl,bl
  411524:	and    al,0x4a
  411526:	or     DWORD PTR [ebp+0x3039e3b],eax
  41152c:	and    esi,DWORD PTR [ecx-0x57821410]
  411532:	dec    ebx
  411533:	dec    DWORD PTR [esi+0x7b4016e4]
  411539:	fbstp  TBYTE PTR [ecx]
  41153b:	daa    
  41153c:	jnp    0x41151a
  41153e:	jae    0x411581
  411540:	je     0x4114ea
  411542:	and    DWORD PTR [esi+esi*4-0x68],ecx
  411546:	and    DWORD PTR [esp+eiz*2],edx
  411549:	test   al,0x21
  41154b:	dec    esp
  41154c:	rcl    BYTE PTR [ecx],1
  41154e:	dec    esi
  41154f:	push   0x49
  411551:	hlt    
  411552:	mov    edx,0x83dc4b00
  411557:	ror    BYTE PTR [esi+0x5f44f6bc],0x85
  41155e:	push   DWORD PTR [ebx+0x62]
  411561:	jo     0x41157f
  411563:	inc    esp
  411564:	ds mov dl,al
  411567:	movntq QWORD PTR [edi],mm7
  41156a:	fldcw  WORD PTR [ebx+0x5dba70d2]
  411570:	lahf   
  411571:	jmp    0x4114f8
  411573:	ret    
	...
  411588:	inc    esi
  411589:	xor    al,0xf4
  41158b:	(bad)  
  41158c:	in     al,dx
  41158d:	frstor [eax]
  41158f:	sbb    ch,ah
  411591:	test   BYTE PTR [ecx+0x14],ah
  411594:	and    dh,BYTE PTR [edx+0x13]
  411597:	ror    cl,0x59
  41159a:	ins    BYTE PTR es:[edi],dx
  41159b:	pop    ds
  41159c:	leave  
  41159d:	push   esi
  41159e:	pop    ecx
  41159f:	dec    edi
  4115a0:	lds    eax,FWORD PTR [ebp+0x7248081d]
  4115a6:	pop    edx
  4115a7:	jae    0x411627
  4115a9:	stos   BYTE PTR es:[edi],al
  4115aa:	pop    edx
  4115ab:	jae    0x411533
  4115ad:	ficomp DWORD PTR [ecx+0x70]
  4115b0:	pop    esi
  4115b1:	pop    ds
  4115b2:	lock (bad) 
  4115b4:	ja     0x4115e8
  4115b6:	add    DWORD PTR [ebx],esi
  4115b8:	stos   DWORD PTR es:[edi],eax
  4115b9:	repnz pop esp
  4115bb:	(bad)  
  4115bc:	pop    ebp
  4115bd:	sbb    eax,0x7256c145
  4115c2:	mov    al,0x8a
  4115c4:	mov    ?,edx
  4115c6:	push   0x53fb0c2b
  4115cb:	jmp    0x324c:0x37efb731
  4115d2:	add    DWORD PTR ds:0x18f91,edi
  4115d8:	iret   
  4115d9:	cmp    BYTE PTR [edx+0x74],bl
  4115dc:	push   0x5
  4115de:	rcl    bl,0xba
  4115e1:	loopne 0x4115e4
  4115e3:	add    BYTE PTR [edx+0x60],ah
  4115e6:	jmp    0x4115e9
  4115e8:	jmp    0x7782cb
	...
  4115fd:	add    BYTE PTR [eax],al
  4115ff:	add    BYTE PTR [edx-0x27],ah
  411602:	out    0x3,eax
  411604:	fistp  WORD PTR [ecx+0x15142b54]
  41160a:	mov    esp,0x10d48e05
  41160f:	shr    DWORD PTR [ecx],0x5
  411612:	jecxz  0x4115a2
  411614:	pop    ss
  411615:	jg     0x41164b
  411617:	hlt    
  411618:	call   0x6a11ccf4
  41161d:	jle    0x411653
  41161f:	or     al,0xed
  411621:	sub    eax,edi
  411623:	jg     0x4115ca
  411625:	add    eax,0x1f629363
  41162a:	mov    eax,ds:0x8ed97145
  41162f:	shr    BYTE PTR [ecx+0x6e63dc7e],1
  411635:	sbb    eax,ebp
  411637:	adc    eax,0xb08572a2
  41163c:	call   0x10f62eae
  411641:	daa    
  411642:	mov    edi,0x72d12e5a
  411647:	cmp    al,0x50
  411649:	jle    0x4116a1
  41164b:	(bad)  
  41164c:	pop    ebp
  41164d:	jle    0x411629
  41164f:	dec    DWORD PTR [esp+eiz*8-0x26ba0e09]
  411656:	fs inc ebx
  411658:	icebp  
  411659:	shr    BYTE PTR [edx+0x49],1
  41165c:	je     0x4116ce
  41165e:	popa   
  41165f:	add    esp,DWORD PTR [edx-0x27]
  411662:	jb     0x41162a
	...
  411678:	pop    ebp
  411679:	push   eax
  41167a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41167b:	pop    ebx
  41167c:	call   0x62d61294
  411681:	push   esp
  411682:	daa    
  411683:	iret   
  411684:	push   ax
  411686:	lods   al,BYTE PTR ds:[esi]
  411687:	push   edi
  411688:	inc    edi
  411689:	cwde   
  41168a:	out    dx,al
  41168b:	xchg   ecx,eax
  41168c:	and    dl,BYTE PTR [eax+0x0]
  41168f:	lods   al,BYTE PTR ds:[esi]
  411690:	imul   edi,DWORD PTR [esi+0x73],0xf90cdad9
  411697:	ds icebp 
  411699:	or     eax,0xe835f4fe
  41169e:	inc    eax
  41169f:	jmp    0xd7c4848a
  4116a4:	sbb    eax,0x5a3cfddf
  4116a9:	push   edx
  4116aa:	leave  
  4116ab:	ror    DWORD PTR [ebp-0x80],1
  4116ae:	std    
  4116af:	mov    dh,0xe2
  4116b1:	cmp    eax,0x14dedd74
  4116b6:	or     eax,0x250449e0
  4116bb:	jb     0x4116da
  4116bd:	(bad)  
  4116be:	jmp    0xfdccf67b
  4116c3:	or     ah,0x5a
  4116c6:	(bad)  
  4116c7:	call   0x8afeed60
  4116cc:	fld    DWORD PTR [bx+si]
  4116cf:	sub    BYTE PTR [eax+0x41],0x4c
  4116d3:	(bad)  
  4116d4:	popa   
  4116d5:	fnstcw WORD PTR [edi+0x67]
  4116d8:	pop    esp
  4116d9:	fadd   DWORD PTR [eax]
  4116db:	jmp    0x4116e0
	...
  4116f0:	push   0x15
  4116f2:	stc    
  4116f3:	push   esi
  4116f4:	scas   eax,DWORD PTR es:[edi]
  4116f5:	int    0xfd
  4116f7:	ficomp DWORD PTR [ecx+0x7e]
  4116fa:	jno    0x4116e9
  4116fc:	sub    ah,ch
  4116fe:	xor    bh,dl
  411700:	mov    eax,ds:0x8429847d
  411705:	jle    0x41175f
  411707:	fisubr WORD PTR [ebp+ebp*2-0x296dd97d]
  41170e:	push   ebp
  41170f:	push   ds
  411710:	dec    ebp
  411711:	popf   
  411712:	adc    ebp,DWORD PTR [ecx+0x278a1c61]
  411718:	or     BYTE PTR [eax],ah
  41171a:	enter  0x7900,0x85
  41171e:	std    
  41171f:	push   esp
  411720:	mov    al,0xf1
  411722:	sub    ah,0x1b
  411725:	out    0xd2,al
  411727:	push   edx
  411728:	leave  
  411729:	push   ebx
  41172a:	inc    esp
  41172b:	cld    
  41172c:	imul   eax,DWORD PTR [ebx+0x4f],0x6a
  411730:	andps  xmm0,XMMWORD PTR [eax+esi*8+0x5b]
  411735:	ins    DWORD PTR es:[edi],dx
  411736:	add    DWORD PTR [eax],eax
  411738:	sti    
  411739:	add    BYTE PTR [ecx-0x39],dl
  41173c:	ss and eax,0xd90b0001
  411742:	lds    eax,FWORD PTR [ebp-0x49]
  411745:	mov    BYTE PTR [esi],ah
  411747:	add    bl,bh
  411749:	sbb    DWORD PTR [ebp-0x8],eax
  41174c:	jae    0x4116d3
  41174e:	std    
  41174f:	(bad)  
  411750:	cld    
  411751:	imul   eax,DWORD PTR ds:0x16,0x0
	...
  411768:	mov    edx,ebp
  41176a:	cmc    
  41176b:	fcom   st(0)
  41176d:	sbb    BYTE PTR [esi],bh
  41176f:	leave  
  411770:	stc    
  411771:	rol    BYTE PTR [eax],1
  411773:	push   ebp
  411774:	xor    ah,dh
  411776:	push   eax
  411777:	push   0xffffffc7
  411779:	in     eax,0xd2
  41177b:	lea    eax,[esi-0x16bdb1df]
  411781:	outs   dx,BYTE PTR ds:[esi]
  411782:	add    edx,DWORD PTR [ecx+0x12]
  411785:	sub    edi,ecx
  411787:	call   DWORD PTR [esi+0x7b4014bc]
  41178d:	sub    esi,edx
  41178f:	sbb    edi,DWORD PTR [ebx]
  411791:	cwde   
  411792:	enter  0x35c3,0x7b
  411796:	aad    0x6e
  411798:	(bad)  
  411799:	fdivr  st,st(7)
  41179b:	push   edx
  41179c:	(bad)  
  41179d:	dec    edx
  41179e:	push   esi
  41179f:	mov    ah,BYTE PTR [edx]
  4117a1:	mov    esi,DWORD PTR [ebx]
  4117a3:	mov    esi,0x4172cf
  4117a8:	bound  edi,QWORD PTR [eax+ebx*2]
  4117ab:	adc    al,0x42
  4117ad:	add    cl,0xff
  4117b0:	dec    edi
  4117b1:	ins    DWORD PTR es:[edi],dx
  4117b2:	cmp    DWORD PTR [ebp-0x5a],ebp
  4117b5:	jb     0x4117b9
  4117b7:	jne    0x411811
  4117b9:	fisub  DWORD PTR [edi-0xc]
  4117bc:	sub    eax,0xaebf7e6b
  4117c1:	add    DWORD PTR [ecx-0x3ef3c5f4],0xff2b62ff
  4117cb:	fild   DWORD PTR [eax]
	...
  4117dd:	add    BYTE PTR [eax],al
  4117df:	add    BYTE PTR [esi+esi*4+0x4],bh
  4117e3:	daa    
  4117e4:	cs mov dl,0x4
  4117e7:	push   esi
  4117e8:	std    
  4117e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117ea:	xor    eax,0x8772a211
  4117ef:	retf   0x9dfa
  4117f2:	pop    esp
  4117f3:	(bad)  
  4117f4:	in     eax,0x6
  4117f6:	adc    al,bl
  4117f8:	ja     0x4117ac
  4117fa:	add    al,0x6a
  4117fc:	pop    esp
  4117fd:	lahf   
  4117fe:	cmp    al,BYTE PTR [edx-0x27]
  411801:	imul   esi,DWORD PTR [ecx-0x76a43aaa],0xe7a148e7
  41180b:	add    DWORD PTR ds:0xaa8a2f03,ecx
  411811:	out    dx,al
  411812:	push   edi
  411813:	(bad)  
  411814:	cs ins DWORD PTR es:[edi],dx
  411816:	cmp    dh,0x9d
  411819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41181a:	push   DWORD PTR [ecx]
  41181c:	mov    ecx,0x74140ff6
  411821:	xor    al,BYTE PTR [ecx]
  411823:	push   ebp
  411824:	test   ebx,ebx
  411826:	lods   eax,DWORD PTR ds:[esi]
  411827:	(bad)  
  411828:	xchg   esp,eax
  411829:	pop    es
  41182a:	inc    edx
  41182b:	pop    esi
  41182c:	adc    al,0x65
  41182e:	mov    edx,0xf4bde1c2
  411833:	cmc    
  411834:	pop    edi
  411835:	fnstcw WORD PTR [edi]
  411837:	out    0xa1,al
  411839:	fld1   
  41183b:	mov    dl,0xae
  41183d:	and    edi,DWORD PTR [edi-0x29fad577]
  411843:	xchg   ebp,eax
	...
  411858:	fldpi  
  41185a:	stos   DWORD PTR es:[edi],eax
  41185b:	add    edx,DWORD PTR [edx+edi*2+0x195363d4]
  411862:	call   0x7de27eb4
  411867:	mov    edi,0xfa5cda25
  41186c:	add    eax,0x1456d4f6
  411871:	push   esi
  411872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411873:	iret   
  411874:	jb     0x4118cf
  411876:	fdivr  QWORD PTR [ebx]
  411878:	ja     0x41188f
  41187a:	call   0x9c163d83
  41187f:	in     eax,0xa1
  411881:	(bad)  [esi]
  411883:	xor    BYTE PTR ds:0x4e5715d9,ch
  411889:	popf   
  41188a:	stc    
  41188b:	ret    
  41188c:	ffree  st(7)
  41188e:	mov    WORD PTR [eax+0x4a61d74b],?
  411894:	(bad)  
  411897:	push   esi
  411898:	les    ebp,FWORD PTR [ecx]
  41189a:	xchg   eax,esi
  41189c:	xchg   ebp,eax
  41189d:	in     al,0x27
  41189f:	add    al,0xe9
  4118a1:	sub    DWORD PTR [edx+0x56],0x12e404ac
  4118a8:	mov    ds:0x7e8adb6e,al
  4118ad:	shl    ebp,1
  4118af:	ret    
  4118b0:	xchg   ebp,eax
  4118b1:	and    eax,0xb52188bd
  4118b6:	out    dx,eax
  4118b7:	mov    bl,0x2e
  4118b9:	dec    esp
  4118ba:	stos   DWORD PTR es:[edi],eax
  4118bb:	pop    ds
	...
  4118d0:	inc    esi
  4118d1:	sub    DWORD PTR [ebp+0xe2fdb0],edx
  4118d7:	jmp    0x62972a3d
  4118dc:	adc    dl,BYTE PTR [ecx+0x6c]
  4118df:	int    0x6d
  4118e1:	jp     0x4118b4
  4118e3:	push   0xffffffb9
  4118e5:	jnp    0x41195a
  4118e7:	stos   BYTE PTR es:[edi],al
  4118e8:	mov    ah,0xe5
  4118ea:	cmp    bh,dh
  4118ec:	and    DWORD PTR [edx+0x3c],edi
  4118ef:	out    0x5c,eax
  4118f1:	fld    DWORD PTR [eax]
  4118f3:	je     0x41195c
  4118f5:	dec    esi
  4118f6:	dec    esp
  4118f7:	int    0x31
  4118f9:	push   ebp
  4118fa:	(bad)  
  4118fb:	jne    0x41197c
  4118fd:	jno    0x41192e
  4118ff:	aas    
  411900:	popa   
  411901:	(bad)  [ecx+0x748495d9]
  411907:	or     bh,BYTE PTR [ebp+0x42258c24]
  41190d:	loope  0x41195f
  41190f:	(bad)  
  411910:	adc    dh,BYTE PTR [esi+0x24c5171c]
  411916:	imul   ebx,edi,0x1648d961
  41191c:	(bad)  
  41191d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41191e:	sub    DWORD PTR [ecx-0x50762f4e],0x46
  411925:	(bad)  
  411926:	push   esi
  411927:	call   0x3734678d
  41192c:	das    
  41192d:	in     eax,0x14
  41192f:	fbld   TBYTE PTR [ecx+0xa78a79]
	...
  411945:	add    BYTE PTR [eax],al
  411947:	add    bh,ch
  411949:	sbb    ebx,DWORD PTR [edx+edx*1-0x1d]
  41194d:	xchg   ebp,eax
  41194e:	adc    BYTE PTR [edx-0x43add70f],ch
  411954:	iret   
  411955:	and    dh,BYTE PTR [ebx]
  411957:	xor    BYTE PTR [esi],al
  411959:	js     0x411950
  41195b:	push   esi
  41195c:	aaa    
  41195d:	push   edi
  41195e:	fs add eax,0xb7798e
  411964:	mov    ecx,ebp
  411966:	add    BYTE PTR [eax],al
  411968:	lock in al,dx
  41196a:	mov    BYTE PTR [edi+ebx*2-0x77],dl
  41196e:	das    
  41196f:	fild   DWORD PTR [esi]
  411971:	xchg   ecx,eax
  411972:	and    DWORD PTR [eax],edx
  411974:	jae    0x4119db
  411976:	push   esp
  411977:	add    DWORD PTR [ebx+0x62],ecx
  41197a:	jns    0x4119a0
  41197c:	dec    ebx
  41197d:	stc    
  41197e:	mov    ebp,0x41601e74
  411983:	and    al,0x1f
  411985:	sub    eax,0x834b6a56
  41198a:	sub    edx,DWORD PTR [ebp+0x34]
  41198d:	mov    cl,ch
  41198f:	adc    bl,bh
  411991:	fmul   QWORD PTR [ecx+0x6f0e88f0]
  411997:	jne    0x4119b4
  411999:	movnti DWORD PTR [eax+0xd71da30],eax
  4119a0:	or     BYTE PTR [eax+0x21],0x14
  4119a4:	adc    BYTE PTR [ebx],ah
  4119a6:	push   0xf3f85508
  4119ab:	je     0x4119ad
	...
  4119bd:	add    BYTE PTR [eax],al
  4119bf:	add    BYTE PTR [edx],al
  4119c1:	(bad)  
  4119c2:	into   
  4119c3:	call   0x41613d
  4119c8:	mov    eax,0xceff540d
  4119cd:	fcom   DWORD PTR [edx]
  4119cf:	inc    eax
  4119d0:	mov    ebx,0x755fc661
  4119d5:	xor    BYTE PTR [edx+0x59],bl
  4119d8:	sbb    BYTE PTR [edx],0x55
  4119db:	mov    esp,edi
  4119dd:	sub    esi,ebx
  4119df:	add    eax,0x417ed3
  4119e4:	mov    edx,0x398b5646
  4119e9:	popa   
  4119ea:	clc    
  4119eb:	jne    0x411a30
  4119ed:	sub    bh,BYTE PTR [edx-0x425f9d74]
  4119f3:	push   DWORD PTR [eax]
  4119f5:	daa    
  4119f6:	out    dx,eax
  4119f7:	fist   WORD PTR [eax+0x42]
  4119fa:	add    esi,esi
  4119fc:	pop    edi
  4119fd:	mov    edx,0x816243e3
  411a02:	into   
  411a03:	sbb    DWORD PTR [edx+0x7b],edi
  411a06:	dec    ebp
  411a07:	(bad)  
  411a08:	pop    ebp
  411a09:	push   es
  411a0a:	inc    edx
  411a0b:	jae    0x411a80
  411a0d:	add    al,BYTE PTR [edi]
  411a0f:	fdivr  DWORD PTR [esi+eax*2+0x7d1d0101]
  411a16:	xor    eax,0x1c82a66d
  411a1b:	aam    0xa2
  411a1d:	xor    BYTE PTR [eax-0x1031a802],0x3f
	...
  411a38:	bound  ecx,QWORD PTR [ebx-0x7a]
  411a3b:	inc    esp
  411a3c:	push   ds
  411a3d:	mov    dl,0xba
  411a3f:	imul   esp,DWORD PTR [edx-0x15],0x8ea7c641
  411a46:	adc    al,0x0
  411a48:	bound  eax,QWORD PTR [edx-0x610aaba7]
  411a4e:	push   ecx
  411a4f:	dec    edi
  411a50:	lea    esi,[edi]
  411a52:	mul    DWORD PTR [ebx]
  411a54:	push   esp
  411a55:	ret    0x8504
  411a58:	and    ch,BYTE PTR [esi+0x6be67f4]
  411a5e:	(bad)  
  411a61:	push   edi
  411a62:	neg    DWORD PTR [edi+0x70]
  411a65:	ret    0x3204
  411a68:	mov    ds:0x63b0065a,al
  411a6d:	mov    edi,0xd0a1c8b2
  411a72:	pop    edx
  411a73:	add    al,0x8a
  411a75:	(bad)  
  411a77:	jmp    DWORD PTR [edx-0x2d]
  411a7a:	mov    bh,0x55
  411a7c:	xor    eax,0xe84e72d9
  411a81:	imul   edx,esp,0xc564c919
  411a87:	mov    DWORD PTR [ebp-0x6206b0f6],0x6c03a7ca
  411a91:	fstp   QWORD PTR [edi]
  411a93:	loop   0x411ab6
  411a95:	fld1   
  411a97:	fmul   DWORD PTR [ebx-0x7f]
  411a9a:	bound  edx,QWORD PTR [edi+0x0]
	...
  411aad:	add    BYTE PTR [eax],al
  411aaf:	add    BYTE PTR [edi+esi*2+0x6b],bl
  411ab3:	inc    esp
  411ab4:	ror    eax,1
  411ab6:	add    DWORD PTR [bp+si],ebp
  411ab9:	or     BYTE PTR [ebx+eax*1+0x2fe49e63],ch
  411ac0:	iret   
  411ac1:	sbb    eax,0x1a0e2ae8
  411ac6:	call   0x140e4781
  411acb:	mul    BYTE PTR [ebp-0x27]
  411ace:	(bad)
  411ad3:	add    al,0xe7
  411ad5:	sbb    eax,0xf9df404
  411ada:	inc    edx
  411adb:	add    al,0x78
  411add:	fisttp DWORD PTR [ebx+eax*4-0x45188903]
  411ae4:	jmp    0x6c8a:0xed280405
  411aeb:	inc    ebx
  411aec:	jno    0x411aad
  411aee:	pop    esp
  411aef:	mov    DWORD PTR [ecx+0x4bba37c9],0x34fb11d9
  411af9:	pusha  
  411afa:	add    ebp,DWORD PTR [eax]
  411afc:	jle    0x411b74
  411afe:	mov    edx,0xd8edfd88
  411b03:	mov    eax,0x5315d94b
  411b08:	push   esi
  411b09:	adc    DWORD PTR [ecx],eax
  411b0b:	fbld   TBYTE PTR [ecx-0x625a7d8a]
  411b11:	test   al,0xc0
  411b13:	push   edx
	...
  411b28:	pop    edi
  411b29:	sub    edi,edi
  411b2b:	mov    ebp,0xb05a15d3
  411b30:	sbb    al,0xb
  411b32:	push   esp
  411b33:	mov    bh,0xb8
  411b35:	arpl   di,si
  411b37:	jb     0x411b80
  411b39:	pusha  
  411b3a:	or     eax,0xfd6cb451
  411b3f:	ss in  al,0x7d
  411b42:	push   0xffffffcd
  411b44:	or     DWORD PTR [ebx+0x5b5193f6],ebp
  411b4a:	sti    
  411b4b:	mul    BYTE PTR [eax+0x1d]
  411b4e:	icebp  
  411b4f:	mov    cl,0xdc
  411b51:	je     0x411b55
  411b53:	fisub  WORD PTR ds:0x61935686
  411b59:	or     bh,dh
  411b5b:	aam    0xf9
  411b5d:	retf   
  411b5e:	inc    eax
  411b5f:	jmp    0x874db540
  411b64:	sahf   
  411b65:	ret    
  411b66:	dec    ebx
  411b67:	xor    al,0x3a
  411b69:	aam    0x81
  411b6b:	int3   
  411b6c:	adc    eax,0x9e1b04ea
  411b71:	xor    DWORD PTR [eax],0x43
  411b74:	mul    BYTE PTR [ebp+eax*2-0x18]
  411b78:	mov    cl,0x64
  411b7a:	inc    ecx
  411b7b:	icebp  
  411b7c:	mov    cl,0x76
  411b7e:	adc    ebx,DWORD PTR [ecx]
  411b80:	call   0x2aab1c3a
  411b85:	loop   0x411b70
  411b87:	out    dx,eax
  411b88:	push   esi
  411b89:	pop    ds
  411b8a:	add    BYTE PTR [eax+0x0],dh
	...
  411b9d:	add    BYTE PTR [eax],al
  411b9f:	add    BYTE PTR [edi-0x64a0f227],ah
  411ba5:	(bad)  
  411ba6:	bound  sp,DWORD PTR [ebx+0xa0066c8]
  411bad:	cli    
  411bae:	add    eax,0x63b1b066
  411bb3:	mov    DWORD PTR [eax+0x6c01b0df],eax
  411bb9:	sub    ebx,DWORD PTR [ebx+ebx*2+0x48]
  411bbd:	pop    esp
  411bbe:	jmp    0x536fe417
  411bc3:	push   edi
  411bc4:	mov    ds:0x8b0008d9,eax
  411bc9:	int3   
  411bca:	fst    DWORD PTR [ebx+0x1c]
  411bcd:	into   
  411bce:	js     0x411c3e
  411bd0:	(bad)  
  411bd1:	(bad)  [ecx-0x76f5ff16]
  411bd7:	ins    BYTE PTR es:[edi],dx
  411bd8:	rol    DWORD PTR [bx+0x2774],1
  411bdd:	leave  
  411bde:	std    
  411bdf:	adc    eax,0x3d6ee7
  411be4:	shl    BYTE PTR ds:0xd9d6ff85,0x6a
  411beb:	or     BYTE PTR [esp+ebp*2-0x23],bl
  411bef:	adc    eax,0xc032d8fb
  411bf4:	bound  ebp,QWORD PTR [esi-0x9f50000]
  411bfa:	inc    ebx
  411bfb:	or     BYTE PTR [edx-0x6fd3de64],dl
  411c01:	fwait
  411c02:	add    eax,0x6a
	...
  411c17:	add    cl,bh
  411c19:	out    dx,eax
  411c1a:	inc    ecx
  411c1b:	and    al,0x57
  411c1d:	test   BYTE PTR [ecx+0x24],0x3b
  411c21:	inc    eax
  411c22:	arpl   WORD PTR [ecx-0x76eb3eb1],cx
  411c28:	aas    
  411c29:	shl    DWORD PTR [eax],0x85
  411c2c:	or     ecx,DWORD PTR [ebp+0x3fc86a0a]
  411c32:	mov    BYTE PTR [edi+eiz*4-0x34],al
  411c36:	xchg   DWORD PTR [edx+eiz*2-0x5a],ecx
  411c3a:	and    edi,edi
  411c3c:	ss sahf 
  411c3e:	(bad)  [esi+ebx*1+0x125311a6]
  411c45:	sar    DWORD PTR [ebx+ebx*2+0x7e],1
  411c49:	mov    al,ds:0x901e1450
  411c4e:	sar    edi,0x56
  411c51:	add    BYTE PTR [edx],0x0
  411c54:	bound  eax,QWORD PTR [ebx-0x7d9c957b]
  411c5a:	add    DWORD PTR [ebp-0x7d09715e],eax
  411c60:	jp     0x411be3
  411c62:	add    BYTE PTR [ebp+0x18129],al
  411c68:	fnstenv [ebp-0x21799484]
  411c6e:	jge    0x411cb3
  411c70:	jle    0x411ce7
  411c72:	pop    esp
  411c73:	add    ebx,edi
  411c75:	cmp    eax,0x45db1425
  411c7a:	and    eax,0x1c
	...
  411c8f:	add    bh,ch
  411c91:	cmp    eax,0xdb923825
  411c96:	xlat   BYTE PTR ds:[ebx]
  411c97:	pop    es
  411c98:	sub    eax,0x4fff05ec
  411c9d:	idiv   DWORD PTR ss:[edi]
  411ca0:	(bad)  
  411ca1:	std    
  411ca2:	inc    ecx
  411ca3:	push   cs
  411ca4:	(bad)  
  411ca6:	add    eax,DWORD PTR [eax]
  411ca8:	bound  ecx,QWORD PTR [eax+ecx*8-0x17eb5dd]
  411caf:	add    edx,0xffffff81
  411cb2:	add    DWORD PTR [eax],eax
  411cb4:	cmp    edi,DWORD PTR [esi-0x2a2c3d8]
  411cba:	sti    
  411cbb:	add    BYTE PTR [edx-0x7e],ah
  411cbe:	jp     0x411cc5
  411cc0:	dec    edx
  411cc1:	cmp    cl,0xff
  411cc4:	aad    0xd8
  411cc6:	ds jnp 0x411c68
  411cc9:	jae    0x411d02
  411ccb:	or     bl,bl
  411ccd:	sbb    al,0xcc
  411ccf:	jmp    0x411cb7
  411cd1:	cwde   
  411cd2:	paddq  mm5,mm0
  411cd5:	or     al,0xcc
  411cd7:	rcr    DWORD PTR [ebp+ecx*2-0x58],cl
  411cdb:	jl     0x411cf6
  411cdd:	mov    ebp,0xecb388da
  411ce2:	ret    0x637a
  411ce5:	data16 mov bl,0x27
  411ce8:	push   0xa
  411cea:	mov    bh,0xb8
  411cec:	das    
  411ced:	pusha  
  411cee:	and    DWORD PTR [edi+0x2d],ecx
  411cf1:	frstor [ebx+0x44]
	...
  411d08:	fs pop ebp
  411d0a:	dec    ebp
  411d0b:	add    al,0x62
  411d0d:	fcos   
  411d0f:	scas   eax,DWORD PTR es:[edi]
  411d10:	inc    ecx
  411d11:	enter  0x88e6,0xf
  411d15:	(bad)  
  411d17:	add    ebp,ecx
  411d19:	sbb    eax,0x99e6ebcc
  411d1e:	popf   
  411d1f:	out    dx,al
  411d20:	cmp    dh,bl
  411d22:	imul   edi,DWORD PTR ds:0xd80ec3b6,0xffffff81
  411d29:	add    eax,0xee2c4173
  411d2e:	ret    
  411d2f:	fist   WORD PTR [ebp+0x1b1c000a]
  411d35:	jae    0x411d25
  411d37:	xchg   ebp,edx
  411d39:	loop   0x411da6
  411d3b:	cwde   
  411d3c:	or     eax,0x5f7ae773
  411d41:	add    eax,ebp
  411d43:	sti    
  411d44:	std    
  411d45:	jb     0x411d7d
  411d47:	jnp    0x411d70
  411d49:	jae    0x411d62
  411d4b:	or     bl,bl
  411d4d:	sbb    eax,0x99deec04
  411d52:	add    BYTE PTR [eax],dh
  411d54:	pop    edx
  411d55:	pop    ebp
  411d56:	shl    BYTE PTR [eax],0xcf
  411d59:	jae    0x411d6e
  411d5b:	loope  0x411d34
  411d5d:	mov    dl,0x0
  411d5f:	fdiv   QWORD PTR [eax-0x46]
  411d62:	add    cl,ch
  411d64:	mov    esp,0x61e9895d
  411d69:	fdecstp 
  411d6b:	sub    eax,0x0
	...
  411d80:	jp     0x411d33
  411d82:	and    ch,dh
  411d84:	xor    DWORD PTR [eax-0x122e32a4],0xb6ad626c
  411d8e:	sbb    al,0x21
  411d90:	jl     0x411d7f
  411d92:	or     eax,0x73725ed3
  411d97:	in     eax,dx
  411d98:	sub    al,0xcd
  411d9a:	in     al,0xf4
  411d9c:	mov    eax,ds:0x8a298472
  411da1:	sti    
  411da2:	(bad)  
  411da3:	out    0x5e,eax
  411da5:	pop    ecx
  411da6:	jl     0x411db5
  411da8:	pop    edx
  411da9:	fnstenv [ebx-0x1a]
  411dac:	loope  0x411d9b
  411dae:	and    al,0xfc
  411db0:	in     ax,dx
  411db2:	dec    edx
  411db3:	push   ds
  411db4:	sub    eax,0x256468b6
  411db9:	mov    dh,0x30
  411dbb:	mov    edx,0xcd7472f1
  411dc0:	dec    ebp
  411dc1:	jb     0x411dd6
  411dc3:	jge    0x411df8
  411dc5:	mov    dl,0x0
  411dc7:	mov    ah,0x63
  411dc9:	fadd   DWORD PTR [eax]
  411dcb:	jmp    0x55cac9fd
  411dd0:	cmp    al,cl
  411dd2:	mov    DWORD PTR [ebp+0x3a],edx
  411dd5:	mov    ebp,0x73ac97e7
  411dda:	std    
  411ddb:	pusha  
  411ddc:	mov    dl,0xb5
  411dde:	sbb    BYTE PTR [eax],al
  411de0:	adc    BYTE PTR [edx],al
  411de2:	push   0x6
	...
  411df7:	add    BYTE PTR [eax+0x5e],al
  411dfa:	loop   0x411dff
  411dfc:	retf   
  411dfd:	aad    0x81
  411dff:	clc    
  411e00:	leave  
  411e01:	je     0x411e44
  411e03:	f2xm1  
  411e05:	test   BYTE PTR [edx-0x161e60a4],cl
  411e0b:	adc    al,BYTE PTR [eax+0x29]
  411e0e:	and    DWORD PTR [eax-0x20],edx
  411e11:	fadd   st,st(6)
  411e13:	inc    esp
  411e14:	lahf   
  411e15:	addr16 add bl,ch
  411e18:	mov    esi,0x8b274960
  411e1d:	aad    0x89
  411e1f:	iret   
  411e20:	jecxz  0x411da3
  411e22:	dec    edi
  411e23:	add    DWORD PTR [ebx+0x5a],edi
  411e26:	fidiv  DWORD PTR [esp+edi*2+0x28]
  411e2a:	(bad)  
  411e2b:	adc    eax,0x3d6a2b
  411e30:	add    DWORD PTR [ecx+0x43c41221],esp
  411e36:	pop    esp
  411e37:	pop    ebx
  411e38:	clc    
  411e39:	and    BYTE PTR [edx-0x3e],dl
  411e3c:	inc    edi
  411e3d:	fst    QWORD PTR [ecx+0x55]
  411e40:	in     eax,dx
  411e41:	and    eax,0x6173f18a
  411e46:	std    
  411e47:	(bad)  
  411e48:	cmp    esi,edx
  411e4a:	jns    0x411e70
  411e4c:	aas    
  411e4d:	retf   0x8beb
  411e50:	xchg   BYTE PTR [eax-0x2],bl
  411e53:	jne    0x411e91
  411e55:	adc    eax,0xdd3b04a0
  411e5a:	mov    eax,ebx
	...
  411e70:	(bad)  
  411e71:	daa    
  411e72:	push   esp
  411e73:	dec    DWORD PTR [edi+0x4852cb8]
  411e79:	outs   dx,BYTE PTR ds:[esi]
  411e7a:	inc    ecx
  411e7b:	sti    
  411e7c:	dec    esp
  411e7d:	push   ds
  411e7e:	adc    eax,0xc16d62a0
  411e83:	(bad)  
  411e84:	call   0xfa4698c4
  411e89:	sub    al,0xb2
  411e8b:	add    BYTE PTR [edx-0x27],ah
  411e8e:	push   ds
  411e8f:	jne    0x411ef7
  411e91:	je     0x411ed4
  411e93:	jmp    0x179a:0xbf091c1c
  411e9a:	vmovaps ymm1,ymm4
  411e9e:	or     BYTE PTR [ebp-0x14e81db],cl
  411ea4:	ins    DWORD PTR es:[edi],dx
  411ea5:	pop    edi
  411ea6:	adc    edi,edi
  411ea8:	push   edi
  411ea9:	mov    dl,0xf6
  411eab:	aas    
  411eac:	(bad)  
  411ead:	std    
  411eae:	int3   
  411eaf:	pop    es
  411eb0:	sub    DWORD PTR [ebp+0x57],ebp
  411eb3:	push   esp
  411eb4:	das    
  411eb5:	fdiv   st(7),st
  411eb7:	push   esp
  411eb8:	aaa    
  411eb9:	not    ebp
  411ebb:	and    edx,DWORD PTR [edx+0xf]
  411ebe:	(bad)  
  411ebf:	and    esi,DWORD PTR [edx]
  411ec1:	pop    es
  411ec2:	adc    al,0xff
  411ec4:	dec    edi
  411ec5:	dec    edx
  411ec6:	idiv   BYTE PTR [edi]
  411ec8:	(bad)  
  411ec9:	jmp    0xc3202291
  411ece:	(bad)  
  411ecf:	or     cl,ch
  411ed1:	mov    bh,0x59
  411ed3:	or     al,BYTE PTR [eax]
	...
  411ee5:	add    BYTE PTR [eax],al
  411ee7:	add    BYTE PTR [edx-0x7e],ah
  411eea:	add    ebx,ebp
  411eec:	or     dl,BYTE PTR [edx]
  411eee:	add    ebx,DWORD PTR [edi-0x5c]
  411ef1:	sub    eax,0x8252c1a8
  411ef6:	mov    bl,0x8a
  411ef8:	xor    ebx,edx
  411efa:	add    BYTE PTR es:[edx-0x7e],ah
  411efe:	cmp    BYTE PTR [ebp+0x5e],0x82
  411f02:	aad    0xc
  411f04:	sbb    eax,0x6fff05f0
  411f09:	push   ds
  411f0a:	idiv   DWORD PTR [edi]
  411f0c:	(bad)  
  411f0d:	fldcw  WORD PTR [edx-0x1e]
  411f10:	popa   
  411f11:	fldcw  WORD PTR [edx+0xa]
  411f14:	(bad)  
  411f15:	in     eax,0xe2
  411f17:	dec    edx
  411f18:	das    
  411f19:	jo     0x411f0f
  411f1b:	addr16 push esi
  411f1d:	sbb    eax,ebp
  411f1f:	xchg   BYTE PTR [edi],bh
  411f21:	fstp   DWORD PTR ds:0xb8643747
  411f27:	xchg   DWORD PTR [edi-0x1f],edx
  411f2a:	out    0xcf,eax
  411f2c:	pop    esi
  411f2d:	jo     0x411f4c
  411f2f:	cld    
  411f30:	(bad)  
  411f31:	lds    edi,FWORD PTR [ebx-0xf]
  411f34:	jge    0x411f0f
  411f36:	push   0xffffffe2
  411f38:	pop    ebp
  411f39:	fldcw  WORD PTR ds:0xdf7ce247
  411f3f:	add    al,0x62
  411f41:	fnstcw WORD PTR [edi]
  411f43:	add    al,0x9d
  411f45:	sbb    al,0x6c
  411f47:	mov    bh,0xe8
  411f49:	dec    esp
  411f4a:	ret    
  411f4b:	or     eax,DWORD PTR [eax]
	...
  411f5d:	add    BYTE PTR [eax],al
  411f5f:	add    BYTE PTR [ebx-0x27],ah
  411f62:	out    0xb1,eax
  411f64:	sub    al,0x5c
  411f66:	dec    edx
  411f67:	push   es
  411f68:	mov    ebp,0xe1f856d8
  411f6d:	fbld   TBYTE PTR [ebx+ecx*2-0x3bf4ab89]
  411f74:	(bad)  
  411f75:	(bad)  
  411f77:	(bad)  
  411f78:	call   0xe342dae5
  411f7d:	sahf   
  411f7e:	out    0x3,eax
  411f80:	loop   0x411f5b
  411f82:	setne  BYTE PTR [edi+ebp*2+0x1e]
  411f87:	push   edx
  411f88:	loope  0x411f3f
  411f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f8b:	add    al,0x62
  411f8d:	fld1   
  411f8f:	(bad)  ds:0x90b39008
  411f95:	adc    eax,0xb5d14ae8
  411f9a:	add    BYTE PTR [ecx+0x3000d95e],dh
  411fa0:	push   ss
  411fa1:	push   edi
  411fa2:	inc    eax
  411fa3:	jmp    0x29c9ead1
  411fa8:	data16 outs dx,BYTE PTR ds:[esi]
  411faa:	mov    ah,0xd
  411fac:	push   0xffffffd8
  411fae:	add    cl,ch
  411fb0:	(bad)  
  411fb2:	mov    BYTE PTR [ecx],ch
  411fb4:	pop    esi
  411fb5:	fiadd  WORD PTR [eax+ebp*4+0x11]
  411fb9:	jo     0x412031
  411fbb:	in     eax,dx
  411fbc:	sub    ch,al
  411fbe:	lods   al,BYTE PTR ds:[esi]
  411fbf:	aam    0xa1
  411fc1:	outs   dx,BYTE PTR ds:[esi]
  411fc2:	mov    BYTE PTR [edi],ch
	...
  411fd8:	(bad)  
  411fd9:	push   ebp
  411fda:	rcl    BYTE PTR [ecx+eiz*2],0xab
  411fde:	rol    BYTE PTR [eax-0x16ff263c],0xf2
  411fe5:	add    BYTE PTR ds:0x14baed74,al
  411feb:	sbb    BYTE PTR [ebp+ebx*1-0x452a51af],bh
  411ff2:	and    al,ch
  411ff4:	popa   
  411ff5:	fld    DWORD PTR [eax]
  411ff7:	xchg   dx,ax
  411ff9:	adc    ebp,DWORD PTR ds:[ecx+0x3d158161]
  412000:	popa   
  412001:	(bad)  [ecx+0x40c5ce0c]
  412007:	jmp    0xea3e8ee6
  41200c:	add    DWORD PTR [edx+0x7656bc04],esi
  412012:	inc    ebp
  412013:	adc    eax,0x2984d961
  412018:	adc    eax,0x5da58bec
  41201d:	leave  
  41201e:	push   eax
  41201f:	fs cmc 
  412021:	mov    ecx,0x1aa0b927
  412026:	and    eax,0xffda4300
  41202b:	dec    DWORD PTR [ebx]
  41202d:	and    edx,DWORD PTR ds:0xfd9a38c4
  412033:	test   BYTE PTR [ebx],bh
  412035:	mov    DWORD PTR [edi-0x48],ebx
  412038:	cld    
  412039:	aam    0x0
	...
  41204f:	add    BYTE PTR [edx-0x67],al
  412052:	and    DWORD PTR [eax],edx
  412054:	cld    
  412055:	xchg   ebx,eax
  412056:	inc    ecx
  412057:	and    al,0xeb
  412059:	pop    ss
  41205a:	inc    edx
  41205b:	add    al,0x56
  41205d:	aad    0x8b
  41205f:	inc    esp
  412060:	addr16 into 
  412062:	push   eax
  412063:	push   DWORD PTR [esi-0x44bff0a7]
  412069:	repnz inc ecx
  41206b:	and    al,0xcb
  41206d:	out    dx,al
  41206e:	mov    ebp,0x108b9f74
  412073:	lea    eax,[edi-0x6497e747]
  412079:	icebp  
  41207a:	cmp    eax,0x15204b00
  41207f:	push   eax
  412080:	mov    ch,0x99
  412082:	std    
  412083:	mov    al,BYTE PTR [edi-0x47]
  412086:	sbb    al,0x83
  412088:	(bad)  
  412089:	jo     0x412017
  41208b:	inc    esp
  41208c:	ja     0x41205c
  41208e:	push   0xfd94f334
  412093:	dec    edi
  412094:	or     al,0x7e
  412096:	pop    ebp
  412097:	adc    bh,BYTE PTR [ebx+0x574489d9]
  41209d:	gs push esp
  41209f:	or     DWORD PTR [ebx+0x78d4d66],0xffffffcd
  4120a6:	sbb    al,0x50
  4120a8:	jl     0x412031
  4120aa:	add    eax,0xb95684ff
  4120af:	and    al,0x17
  4120b1:	fadd   DWORD PTR [eax]
	...
  4120c7:	add    BYTE PTR [edx-0x7e],ah
  4120ca:	int    0x18
  4120cc:	xchg   edi,eax
  4120cd:	fist   DWORD PTR [eax+0x1816623]
  4120d3:	add    BYTE PTR ds:0x633c20a7,bl
  4120d9:	add    BYTE PTR [ecx],0xff
  4120dc:	xchg   esp,eax
  4120dd:	jp     0x412127
  4120df:	(bad)  
  4120e0:	loope  0x41215c
  4120e2:	add    dh,BYTE PTR [ebp+0x38]
  4120e5:	cmc    
  4120e6:	sub    al,0x74
  4120e8:	push   eax
  4120e9:	lods   eax,DWORD PTR ds:[esi]
  4120ea:	ficom  WORD PTR [edx]
  4120ec:	jp     0x4120b8
  4120ee:	jl     0x41212f
  4120f0:	bound  edx,QWORD PTR [ebx+0x43dd07cf]
  4120f6:	test   bh,dh
  4120f8:	arpl   WORD PTR [ebp-0x28e900e0],bp
  4120fe:	les    eax,FWORD PTR [eax]
  412100:	bound  eax,QWORD PTR [edx-0x3d794cb8]
  412106:	add    DWORD PTR [eax],eax
  412108:	(bad)  
  412109:	fadd   DWORD PTR [edx+ebp*2]
  41210c:	bound  ebx,QWORD PTR [ebx-0x31]
  41210f:	pop    es
  412110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412111:	lea    ebx,[ebp-0x7b7dddec]
  412117:	mul    DWORD PTR [ebx+0x6d]
  41211a:	std    
  41211b:	mov    DWORD PTR [edx-0x6b7505a9],esp
  412121:	or     dh,BYTE PTR [ebx+0x140b7dfd]
  412127:	rcl    BYTE PTR [edi],0x23
  41212a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41212b:	pop    edx
	...
  412140:	jecxz  0x4120f8
  412142:	jmp    0x43c38347
  412147:	sbb    esp,DWORD PTR [edx+0x51]
  41214a:	mov    ah,0x8a
  41214c:	mov    dh,0xde
  41214e:	hlt    
  41214f:	push   esp
  412150:	mov    ah,0xf7
  412152:	int    0x23
  412154:	outs   dx,BYTE PTR ds:[esi]
  412155:	fldcw  WORD PTR [esp+ebp*1-0xb]
  412159:	fsub   st,st(7)
  41215b:	mov    ds:0x2babdb35,eax
  412160:	xchg   esp,eax
  412161:	bound  ebx,QWORD PTR [ebx-0x2a9ade1]
  412167:	into   
  412168:	outs   dx,DWORD PTR ds:[esi]
  412169:	(bad)  
  41216a:	out    dx,eax
  41216b:	fst    QWORD PTR ds:0xb5edf706
  412171:	ret    
  412172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412173:	add    esp,ecx
  412175:	xchg   esp,eax
  412176:	repz (bad) 
  412179:	(bad)  
  41217b:	add    esi,DWORD PTR [ecx]
  41217d:	jle    0x4121bb
  41217f:	inc    edi
  412180:	ss icebp 
  412182:	cmp    eax,0xdc6ae5c0
  412187:	fbstp  TBYTE PTR [ebx+0x19]
  41218a:	call   0xb696ef09
  41218f:	mul    ecx
  412191:	inc    ebx
  412192:	out    0x3,eax
  412194:	bound  ebx,QWORD PTR [eax+0x23]
  412197:	and    BYTE PTR [edx+0x4bf313d9],al
  41219d:	fst    DWORD PTR [esi-0x714a7e30]
  4121a3:	icebp  
	...
  4121b8:	loope  0x412180
  4121ba:	daa    
  4121bb:	add    al,0x5f
  4121bd:	xlat   BYTE PTR ds:[ebx]
  4121be:	call   0x32783c6
  4121c3:	jns    0x4121e6
  4121c5:	mov    ch,0xcb
  4121c7:	mov    bl,0xd8
  4121c9:	adc    al,0xc
  4121cb:	lock mov edx,0x6203f7d8
  4121d1:	or     bh,BYTE PTR [edi+0x60e0fd46]
  4121d7:	mov    eax,0xf146bd41
  4121dc:	adc    ebp,eax
  4121de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121df:	add    ebx,edi
  4121e1:	cdq    
  4121e2:	add    BYTE PTR [ebp+0x544600b],bh
  4121e8:	cmp    dl,BYTE PTR [esi-0x40]
  4121eb:	popf   
  4121ec:	ins    BYTE PTR es:[edi],dx
  4121ed:	(bad)  
  4121ee:	call   0x3d24bad5
  4121f3:	ins    BYTE PTR es:[edi],dx
  4121f4:	pushf  
  4121f5:	out    0xb1,al
  4121f7:	(bad)  
  4121f8:	hlt    
  4121f9:	(bad)  
  4121fa:	add    DWORD PTR [ecx],ebx
  4121fc:	cdq    
  4121fd:	pushf  
  4121fe:	call   0x11af1d5
  412203:	ins    DWORD PTR es:[edi],dx
  412204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412205:	out    0x28,al
  412207:	out    dx,al
  412208:	adc    eax,0xff721cb7
  41220d:	xlat   BYTE PTR ds:[ebx]
  41220e:	inc    esi
  41220f:	in     eax,0xc4
  412211:	sbb    bh,dh
  412213:	cld    
  412214:	mov    cl,0xc4
  412216:	inc    eax
  412217:	jmp    0x11663884
	...
  412230:	loope  0x4121c8
  412232:	or     al,0xe8
  412234:	pop    ss
  412235:	xlat   BYTE PTR ds:[ebx]
  412236:	jmp    0xe8dc6aaa
  41223b:	outs   dx,DWORD PTR ds:[esi]
  41223c:	pminub mm0,QWORD PTR [eax]
  41223f:	pop    ecx
  412240:	data16 jle 0x412257
  412243:	jb     0x4122b1
  412245:	jb     0x4121f8
  412247:	daa    
  412248:	fld    DWORD PTR [bp+di-0x6a69]
  41224d:	ror    DWORD PTR [ecx+0x4e3239f7],cl
  412253:	call   0x1701c9b9
  412258:	les    ecx,FWORD PTR ds:0xde20105a
  41225e:	add    BYTE PTR [edx+0x15],ch
  412261:	ficom  WORD PTR [ecx-0x49]
  412264:	push   eax
  412265:	mov    ss,WORD PTR [ecx-0x3f]
  412268:	loope  0x4122d4
  41226a:	std    
  41226b:	jmp    0x92fafb
  412270:	xor    ebp,edx
  412272:	push   0x40d64b00
  412277:	dec    DWORD PTR [edi]
  412279:	retf   0x8930
  41227c:	out    0xc9,eax
  41227e:	sub    bh,bh
  412280:	ds cli 
  412282:	cmovo  ecx,DWORD PTR [ebx-0x11]
  412286:	in     eax,dx
  412287:	adc    DWORD PTR [ebp+0x13],0xf
  41228b:	test   BYTE PTR [esi+edx*8-0x72040000],bl
  412292:	std    
  412293:	sldt   WORD PTR [eax]
	...
  4122a6:	add    BYTE PTR [eax],al
  4122a8:	or     edx,esi
  4122aa:	push   ecx
  4122ab:	dec    esi
  4122ad:	popf   
  4122ae:	imul   eax,DWORD PTR [ebx+edi*8+0x12],0x15
  4122b3:	fs stc 
  4122b5:	xchg   ebp,eax
  4122b6:	std    
  4122b7:	mov    al,BYTE PTR [ebx]
  4122b9:	jmp    0xeb8a:0x3a9274fe
  4122c0:	push   edx
  4122c1:	inc    ecx
  4122c2:	and    DWORD PTR [eax],ebp
  4122c4:	lahf   
  4122c5:	addr16 push edx
  4122c7:	dec    DWORD PTR [edi-0x5100d347]
  4122cd:	jmp    0xd2fc62e1
  4122d2:	add    al,BYTE PTR [ecx]
  4122d4:	retf   
  4122d5:	aad    0x73
  4122d7:	push   esi
  4122d8:	inc    esi
  4122d9:	cdq    
  4122da:	and    DWORD PTR [eax],edx
  4122dc:	imul   esi,eax,0x41
  4122df:	and    al,0xb3
  4122e1:	(bad)  
  4122e2:	std    
  4122e3:	jnp    0x9c4078be
  4122e9:	ins    DWORD PTR es:[edi],dx
  4122ea:	(bad)  
  4122eb:	adc    eax,0x3d7a4f
  4122f0:	(bad)  
  4122f1:	adc    al,0x72
  4122f3:	cmp    dh,al
  4122f5:	cwde   
  4122f6:	and    DWORD PTR [eax],edx
  4122f8:	(bad)  
  4122f9:	adc    al,0x72
  4122fb:	sub    DWORD PTR [edx+0x7f],esp
  4122fe:	pop    ecx
  4122ff:	and    BYTE PTR [edi+0x7f],0x1
  412303:	mov    al,ds:0x53192762
  412308:	out    0x36,eax
  41230a:	sbb    eax,0x1c
	...
  41231f:	add    BYTE PTR [ebx+0x4555ac42],dh
  412325:	mov    ?,WORD PTR [ecx+0x11]
  412328:	mov    ds:0xaebf7e72,al
  41232d:	ins    DWORD PTR es:[edi],dx
  41232e:	js     0x412373
  412330:	xchg   BYTE PTR [edx+0x8],ah
  412333:	inc    esp
  412334:	jle    0x4123a0
  412336:	int    0x9c
  412338:	or     DWORD PTR [edx-0x55],ebp
  41233b:	(bad)  
  41233c:	outs   dx,DWORD PTR ds:[esi]
  41233d:	cli    
  41233e:	repnz aas 
  412340:	bound  esp,QWORD PTR [ebx-0x24ea74ff]
  412346:	and    eax,0xa672634c
  41234b:	push   ebp
  41234c:	cmc    
  41234d:	ins    DWORD PTR es:[edi],dx
  41234e:	popf   
  41234f:	adc    DWORD PTR [edx+0x983a472],esp
  412355:	push   cs
  412356:	cli    
  412357:	mov    ch,BYTE PTR [esi]
  412359:	(bad)  
  41235a:	in     al,dx
  41235b:	out    0x10,eax
  41235d:	add    al,BYTE PTR ds:[eax]
  412360:	sub    al,0xfc
  412362:	inc    eax
  412363:	pop    edx
  412364:	loope  0x4123a4
  412366:	cmc    
  412367:	shr    DWORD PTR [esi+0x72],0xae
  41236b:	mov    al,dh
  41236d:	repz push ebp
  41236f:	pop    ss
  412370:	fbld   TBYTE PTR [ebp-0x50f3ada8]
  412376:	ja     0x412370
  412378:	jmp    0xe2291c2a
  41237d:	mov    ds:0x32e60001,eax
  412382:	int    0x55
	...
  412398:	loop   0x41240f
  41239a:	inc    edi
  41239b:	add    ecx,ebp
  41239d:	(bad)  
  41239f:	sbb    ebp,edi
  4123a1:	(bad)  [edx+0x35]
  4123a4:	popa   
  4123a5:	je     0x412391
  4123a7:	cmp    BYTE PTR [edi+0x64],0x4e
  4123ab:	into   
  4123ac:	adc    DWORD PTR [esi+esi*1+0x44],0xce3e61ce
  4123b4:	cmp    DWORD PTR [eax-0x44],ebp
  4123b7:	sti    
  4123b8:	cmp    eax,0x3c4432e4
  4123bd:	lods   al,BYTE PTR ds:[esi]
  4123be:	inc    edx
  4123bf:	jg     0x4123b6
  4123c1:	in     al,dx
  4123c2:	add    DWORD PTR [esi+0x78c7ee2c],ebp
  4123c8:	adc    al,0x68
  4123ca:	xchg   esp,eax
  4123cb:	out    0xb0,eax
  4123cd:	or     al,0x9b
  4123cf:	inc    esp
  4123d0:	mov    gs,WORD PTR [ecx+0xf]
  4123d3:	push   cs
  4123d4:	push   cs
  4123d5:	push   0xecc57ef6
  4123da:	jmp    0x3495866f
  4123df:	xor    ch,bh
  4123e1:	cvtps2pi mm0,QWORD PTR ds:0x34245462
  4123e8:	std    
  4123e9:	pop    ss
  4123ea:	sbb    eax,0xaa536205
  4123ef:	jecxz  0x412428
  4123f1:	add    al,0xb1
  4123f3:	inc    esi
  4123f4:	sbb    ecx,0x153ddb18
  4123fa:	pusha  
  4123fb:	les    eax,FWORD PTR [eax]
	...
  41240d:	add    BYTE PTR [eax],al
  41240f:	add    BYTE PTR [ebp+0x5363fc66],bh
  412415:	sbb    eax,ebp
  412417:	mov    ?,WORD PTR [ebp+0x3db8965d]
  41241d:	push   cs
  41241e:	lods   al,BYTE PTR ss:[esi]
  412420:	xor    eax,0x2d042751
  412425:	lods   al,BYTE PTR ds:[esi]
  412426:	jne    0x41246b
  412428:	jbe    0x412433
  41242a:	add    ebx,ebx
  41242c:	mov    eax,ds:0xeb818a67
  412431:	je     0x4124a7
  412433:	scas   al,BYTE PTR es:[edi]
  412434:	leave  
  412435:	fist   DWORD PTR [eax]
  412437:	jmp    0x564a179d
  41243c:	imul   ebp,edi,0x6e
  41243f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412440:	popa   
  412441:	adc    cx,bp
  412444:	outs   dx,DWORD PTR ds:[esi]
  412445:	sbb    DWORD PTR [ecx],eax
  412447:	jb     0x4123df
  412449:	pop    ebp
  41244a:	idiv   BYTE PTR [ebp-0x5a73f3ad]
  412450:	inc    ebp
  412451:	xlat   BYTE PTR ds:[ebx]
  412452:	push   eax
  412453:	mov    edi,0xe90d67b4
  412458:	popa   
  412459:	repz add BYTE PTR [eax+0x42],ah
  41245d:	mov    ebx,0x5dbb0e1c
  412462:	sar    BYTE PTR [ebx+esi*2-0x60],0x5c
  412467:	lds    esi,FWORD PTR [ecx-0x2a]
  41246a:	inc    edx
  41246b:	xchg   ebp,eax
  41246c:	std    
  41246d:	(bad)  
  41246e:	mov    ch,ah
  412470:	inc    ebx
  412471:	jb     0x412478
  412473:	jb     0x412475
	...
  412485:	add    BYTE PTR [eax],al
  412487:	add    BYTE PTR [ebx+0x672dd57e],dl
  41248d:	fstp   DWORD PTR [ecx+0x3e]
  412490:	mov    eax,ds:0xa1fb3ccd
  412495:	data16 mov ch,BYTE PTR [edi+0x205e05c3]
  41249c:	and    eax,0xaec58a0d
  4124a1:	or     DWORD PTR [edx+0x53667e44],eax
  4124a7:	ds in  eax,0xe1
  4124aa:	or     BYTE PTR [ebx],dl
  4124ac:	push   sp
  4124ae:	inc    ebx
  4124af:	xchg   ecx,eax
  4124b0:	xchg   ecx,eax
  4124b1:	push   ebp
  4124b2:	inc    ebx
  4124b3:	mov    ?,WORD PTR [ecx+0x740016f0]
  4124b9:	sbb    dl,BYTE PTR ds:0xfd9ab6bc
  4124bf:	test   BYTE PTR [ebx-0x6900bcdf],bh
  4124c5:	xchg   esi,eax
  4124c6:	cmovo  ecx,DWORD PTR [ebx-0x69850aa1]
  4124cd:	mov    cl,BYTE PTR [di+0x13]
  4124d1:	popf   
  4124d2:	jno    0x412509
  4124d4:	mov    ds:0x4b01493f,eax
  4124d9:	push   edi
  4124da:	in     eax,dx
  4124db:	test   DWORD PTR [ebp+0x3b6a272e],edx
  4124e1:	dec    ecx
  4124e2:	inc    esp
  4124e3:	clc    
  4124e4:	fstp   TBYTE PTR [edi+0x67]
  4124e7:	push   ss
  4124e8:	hlt    
  4124e9:	sbb    dl,BYTE PTR ds:0xbc
	...
  4124ff:	add    BYTE PTR [esi],dh
  412501:	call   0xe73:0xdd5382fd
  412508:	or     BYTE PTR [ecx+0x2e528509],0xd
  41250f:	mov    eax,esi
  412511:	mov    eax,ds:0xd5600188
  412516:	mov    esi,ecx
  412518:	arpl   WORD PTR [ecx+0x49],di
  41251b:	add    DWORD PTR [ebx],ecx
  41251d:	ins    DWORD PTR es:[edi],dx
  41251e:	repz pop edi
  412520:	jo     0x412535
  412522:	pop    esp
  412523:	leave  
  412524:	mov    ecx,0x485100c8
  412529:	jno    0x41254c
  41252b:	add    BYTE PTR [eax-0x72],bh
  41252e:	push   ebx
  41252f:	push   edi
  412530:	push   eax
  412531:	pop    es
  412532:	push   ebx
  412533:	mov    esp,DWORD PTR [edx-0x667feae9]
  412539:	cdq    
  41253a:	std    
  41253b:	mov    al,BYTE PTR [ebx]
  41253d:	sbb    BYTE PTR [edx+0x24],dh
  412540:	scas   eax,DWORD PTR es:[edi]
  412541:	push   esi
  412542:	inc    ecx
  412543:	and    al,0x62
  412545:	rcl    DWORD PTR fs:[edx+0xa],1
  412549:	push   edi
  41254a:	aas    
  41254b:	call   DWORD PTR [ebp-0x31ebc03c]
  412551:	mov    ecx,es
  412553:	(bad)  
  412554:	fisubr WORD PTR [edi]
  412556:	mov    ch,0x61
  412558:	jge    0x4124e6
  41255a:	int    0x11
  41255c:	and    dh,BYTE PTR [eax-0x7c]
  41255f:	imul   eax
  412561:	mov    eax,ds
  412563:	mov    al,BYTE PTR [eax]
	...
  412575:	add    BYTE PTR [eax],al
  412577:	add    BYTE PTR [esi],dl
  412579:	aam    0x14
  41257b:	cmp    ebx,DWORD PTR [ebx-0x7c]
  41257e:	enter  0xa3ce,0x26
  412582:	int3   
  412583:	out    0x2f,eax
  412585:	sub    BYTE PTR [edx],al
  412587:	add    cl,bl
  412589:	mov    ds:0x32b6f585,al
  41258e:	mov    cs,WORD PTR [esi+0x63]
  412591:	and    esp,edx
  412593:	push   ebp
  412594:	sub    eax,0xa211f96e
  412599:	jb     0x412529
  41259b:	inc    ebx
  41259c:	inc    esi
  41259d:	bound  eax,QWORD PTR [eax+0x73]
  4125a0:	ds jle 0x412574
  4125a3:	push   ebp
  4125a4:	jp     0x412609
  4125a6:	inc    eax
  4125a7:	inc    DWORD PTR ds:0xbe144046
  4125ad:	(bad)  
  4125ae:	sar    edi,0xe0
  4125b1:	jp     0x4125b5
  4125b3:	jne    0x412605
  4125b5:	out    0xcd,eax
  4125b7:	and    ecx,DWORD PTR [edx-0xb]
  4125ba:	dec    edx
  4125bb:	jae    0x412621
  4125bd:	test   ebp,0x2e97223
  4125c3:	mov    esp,DWORD PTR [edi+eax*4-0x656b74f6]
  4125ca:	inc    edx
  4125cb:	dec    edx
  4125cc:	arpl   WORD PTR [edx-0xc],si
  4125cf:	mov    edi,0xdf45d915
  4125d4:	or     BYTE PTR [edx],al
  4125d6:	stos   BYTE PTR es:[edi],al
  4125d7:	or     esp,DWORD PTR [edx+0xa]
  4125da:	cmp    edx,edi
	...
  4125f0:	aaa    
  4125f1:	or     al,0xdb
  4125f3:	pop    esp
  4125f4:	xor    cl,dh
  4125f6:	add    esp,DWORD PTR [bp+si-0x27]
  4125fa:	adc    DWORD PTR [esi],eax
  4125fc:	xor    edi,ebp
  4125fe:	call   0xe832a08f
  412603:	add    esp,DWORD PTR [edx+0x19]
  412606:	mov    edi,0xf4647b8c
  41260b:	xchg   edi,eax
  41260c:	push   ebx
  41260d:	sbb    eax,ebp
  41260f:	mov    WORD PTR [ebp+0x58],cs
  412612:	dec    ebp
  412613:	inc    eax
  412614:	shr    DWORD PTR [esi-0x3a2ed194],1
  41261a:	add    al,ah
  41261c:	add    ecx,0x569119bb
  412622:	mov    ds:0x270951e7,eax
  412627:	mov    bh,0x81
  412629:	mov    ecx,0xce24d9b4
  41262e:	ja     0x412645
  412630:	mov    ds:0x914364d9,al
  412635:	xlat   BYTE PTR ds:[ebx]
  412636:	cmp    al,BYTE PTR [edx]
  412638:	mov    ah,0x64
  41263a:	aam    0x67
  41263c:	jae    0x412657
  41263e:	call   0x741b1ec6
  412643:	or     cl,ch
  412645:	xchg   ebx,eax
  412646:	iret   
  412647:	enter  0xda20,0xe7
  41264b:	fiadd  WORD PTR [edi+0x38436206]
  412651:	add    ch,BYTE PTR [edx+0x8]
	...
  412667:	add    BYTE PTR [edx+0xe],ah
  41266a:	jae    0x41269c
  41266c:	loopne 0x4126e2
  41266e:	jmp    0x412645
  412670:	sub    al,0xa8
  412672:	add    BYTE PTR [esi-0x1594f56b],dh
  412678:	mov    ecx,?
  41267a:	call   DWORD PTR [eax]
  41267c:	data16 fld DWORD PTR [eax]
  41267f:	imul   ecx,DWORD PTR [edi+0x7b96f24e],0x5e29124d
  412689:	push   edx
  41268a:	inc    esi
  41268b:	icebp  
  41268c:	loopne 0x4126f9
  41268e:	std    
  41268f:	cmc    
  412690:	rcl    DWORD PTR [ebx+ecx*2+0x7d],1
  412694:	xchg   edi,eax
  412695:	adc    edi,esi
  412697:	aam    0xf5
  412699:	leave  
  41269a:	inc    eax
  41269b:	jmp    0xc1b54a7a
  4126a0:	data16 in al,0xf8
  4126a3:	fdiv   QWORD PTR [eax]
  4126a5:	push   eax
  4126a6:	inc    ebx
  4126a7:	push   ebp
  4126a8:	out    0x1c,eax
  4126aa:	add    eax,0x4eda66c
  4126af:	jo     0x4126f5
  4126b1:	jo     0x4126e4
  4126b3:	ret    
  4126b4:	gs icebp 
  4126b6:	add    cl,bh
  4126b8:	popa   
  4126b9:	fst    DWORD PTR [eax-0x42]
  4126bc:	ins    BYTE PTR es:[edi],dx
  4126bd:	int    0xc0
  4126bf:	sti    
  4126c0:	and    DWORD PTR [ebx-0x78],esp
  4126c3:	out    dx,eax
  4126c4:	jmp    0x4b56:0x2cd97422
  4126cb:	add    eax,0x0
	...
  4126e0:	aaa    
  4126e1:	fs jbe 0x4126c9
  4126e4:	xor    DWORD PTR [esi+esi*2-0x1f],esp
  4126e8:	cmp    al,0xcd
  4126ea:	mov    eax,0x846321db
  4126ef:	test   eax,0x2c89ceb5
  4126f4:	mov    ds:0x1aed4e9f,al
  4126f9:	xlat   BYTE PTR ds:[ebx]
  4126fa:	mov    al,0xe8
  4126fc:	mov    cl,al
  4126fe:	push   0xfd56bb00
  412703:	jmp    FWORD PTR [edx+eiz*4+0x33]
  412707:	call   FWORD PTR [esi-0x34bff01a]
  41270d:	mov    ds:0xc2040873,eax
  412712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412713:	adc    bh,BYTE PTR [ebx-0x23]
  412716:	xor    al,al
  412718:	push   esp
  412719:	or     eax,0xffffffc2
  41271c:	jg     0x4126f4
  41271e:	push   esi
  41271f:	mov    ecx,DWORD PTR [edx]
  412721:	push   edi
  412722:	cmp    eax,DWORD PTR [eax]
  412724:	(bad)  
  412725:	shr    DWORD PTR [eax+0x0],cl
  412728:	or     edx,esi
  41272a:	add    BYTE PTR [edx-0x75],ch
  41272d:	mov    ds:0xe66eff33,eax
  412732:	cmovo  edi,DWORD PTR [ebx+0x57]
  412736:	jnp    0x412740
  412738:	dec    ebx
  412739:	sub    cl,BYTE PTR [eax]
  41273b:	jmp    FWORD PTR ds:0xdf15fdce
  412741:	mov    DWORD PTR [eax+0x0],0x0
	...
  412758:	in     eax,0x16
  41275a:	push   ebp
  41275b:	mov    esp,DWORD PTR [edi+0x3f10e95d]
  412761:	(bad)  
  412762:	add    BYTE PTR [ebp-0x55942],cl
  412768:	inc    esp
  412769:	mov    WORD PTR [esi+0x50],ss
  41276c:	jecxz  0x412719
  41276e:	std    
  41276f:	dec    DWORD PTR [ebx]
  412771:	dec    edi
  412772:	idiv   edi
  412774:	mov    cs,WORD PTR cs:[edi]
  412777:	inc    eax
  412778:	sti    
  412779:	lea    edi,[esi*8+0x7700d60b]
  412780:	jne    0x4127e9
  412782:	repz push edi
  412784:	adc    ecx,esi
  412786:	inc    esp
  412787:	add    ebx,edi
  412789:	test   DWORD PTR [ebp+0x70],esp
  41278c:	(bad)  
  41278d:	clc    
  41278e:	(bad)  
  41278f:	(bad)  
  412790:	cmp    eax,0x623f8d08
  412795:	in     eax,dx
  412796:	test   edi,esi
  412798:	(bad)  
  412799:	and    bh,BYTE PTR [ebx]
  41279b:	addr16 data16 jno 0x4127a0
  41279f:	add    BYTE PTR [edx],dl
  4127a1:	cwde   
  4127a2:	xchg   DWORD PTR [esi+0x60],esp
  4127a5:	jo     0x412727
  4127a7:	ret    
  4127a8:	dec    edx
  4127a9:	out    dx,eax
  4127aa:	cmp    al,0xfe
  4127ac:	push   ss
  4127ad:	scas   al,BYTE PTR es:[edi]
  4127ae:	xchg   DWORD PTR [edx+ebp*2+0x5],ecx
  4127b2:	xchg   bh,dh
  4127b4:	(bad)  
  4127b5:	pop    edx
  4127b6:	cmp    ecx,DWORD PTR [edi-0x29]
  4127b9:	or     al,0x35
  4127bb:	cli    
	...
  4127d0:	jge    0x4127bc
  4127d2:	sub    al,0xda
  4127d4:	mov    ecx,0xa2850170
  4127d9:	and    ecx,0x69
  4127dc:	bound  ecx,QWORD PTR [eax+0x735dff81]
  4127e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127e3:	add    al,cl
  4127e5:	jb     0x41278e
  4127e7:	add    BYTE PTR [edx+0x22000172],bh
  4127ed:	mov    al,ds:0x7e3d07b5
  4127f2:	xchg   ebp,eax
  4127f3:	adc    DWORD PTR [edx+0x2df78072],esp
  4127f9:	adc    al,BYTE PTR ds:[esi-0x1d]
  4127fd:	ror    BYTE PTR [edi+edi*8+0x1d],0x73
  412802:	scas   eax,DWORD PTR es:[edi]
  412803:	xchg   ebx,eax
  412804:	push   eax
  412805:	mov    dl,0xdb
  412807:	pop    ebp
  412808:	sbb    esi,DWORD PTR [ebp+0x5fb20008]
  41280e:	push   ss
  41280f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412810:	push   eax
  412811:	xor    al,BYTE PTR [ecx]
  412813:	mov    al,0x63
  412815:	fld    TBYTE PTR [ebx]
  412817:	push   esp
  412818:	(bad)  
  41281a:	rol    DWORD PTR [edx+0x3e3c9f9],cl
  412820:	bound  ecx,QWORD PTR [esi+0x6c]
  412823:	xor    ebx,eax
  412825:	pusha  
  412826:	into   
  412827:	aad    0x34
  412829:	or     DWORD PTR [eax+0x36],edx
  41282c:	lds    esp,FWORD PTR [eax-0x19]
  41282f:	mov    BYTE PTR [ebx+0xcbdc60],bh
	...
  412845:	add    BYTE PTR [eax],al
  412847:	add    BYTE PTR [ebx+0x19],dl
  41284a:	call   0xe7a7971a
  41284f:	add    esp,DWORD PTR [edx-0x18]
  412852:	xor    eax,0x97197f1
  412857:	shl    DWORD PTR [edx-0x27],0x37
  41285b:	lods   al,BYTE PTR ds:[esi]
  41285c:	std    
  41285d:	push   eax
  41285e:	daa    
  41285f:	add    al,0xfa
  412861:	dec    esp
  412862:	outs   dx,DWORD PTR ds:[esi]
  412863:	ret    
  412864:	jge    0x4128b3
  412866:	ins    BYTE PTR es:[edi],dx
  412867:	cmp    esi,DWORD PTR [esi+0x60]
  41286a:	outs   dx,BYTE PTR ds:[esi]
  41286b:	stos   DWORD PTR es:[edi],eax
  41286c:	popa   
  41286d:	(bad)  
  41286f:	add    edx,DWORD PTR [edx]
  412871:	jno    0x4128b6
  412873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412874:	arpl   cx,bx
  412876:	push   0x47
  412878:	jno    0x4128d6
  41287a:	dec    edi
  41287b:	cmp    al,0xd1
  41287d:	mov    ah,0x74
  41287f:	xchg   BYTE PTR [ebp+0x5e],cl
  412882:	ds cmp al,0xad
  412885:	dec    esi
  412886:	pop    esp
  412887:	xor    edi,DWORD PTR [eax]
  412889:	pusha  
  41288a:	mov    BYTE PTR cs:[ecx+esi*2],bl
  41288e:	fdivr  QWORD PTR [eax+0x62]
  412891:	fldenv [ebx+eax*2-0x6f]
  412895:	into   
  412896:	add    DWORD PTR [ebx],0x6ff460ad
  41289c:	jae    0x4128b7
  41289e:	call   0xec26ee29
  4128a3:	vdivps xmm0,xmm3,XMMWORD PTR [eax]
  4128a7:	lea    esi,[ebx+0x293233]
	...
  4128bd:	add    BYTE PTR [eax],al
  4128bf:	add    BYTE PTR [esi],cl
  4128c1:	inc    bh
  4128c3:	stos   BYTE PTR es:[edi],al
  4128c4:	outs   dx,BYTE PTR ds:[esi]
  4128c5:	fldl2t 
  4128c7:	loope  0x41289e
  4128c9:	pop    ds
  4128ca:	and    DWORD PTR [eax+0x4356b912],0xffffffb8
  4128d1:	std    
  4128d2:	data16 add bh,cl
  4128d5:	in     al,0x15
  4128d7:	out    dx,al
  4128d8:	xor    BYTE PTR [ecx],cl
  4128da:	add    ecx,DWORD PTR [edi-0x1d]
  4128dd:	mov    DWORD PTR [edx+eiz*8+0x3],esi
  4128e1:	mov    ds:0xf7571cd6,eax
  4128e6:	aaa    
  4128e7:	sub    BYTE PTR [edx-0x1a],ah
  4128ea:	add    edx,ebx
  4128ec:	and    DWORD PTR [eax+0x4b5aa5e],esp
  4128f2:	push   edi
  4128f3:	push   ds
  4128f4:	aad    0x60
  4128f6:	push   ebp
  4128f7:	mov    edx,0xa9135f1c
  4128fc:	dec    ebp
  4128fd:	sbb    DWORD PTR [ecx],eax
  4128ff:	bound  esi,QWORD PTR [esi]
  412901:	push   ebp
  412902:	div    dh
  412904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412905:	or     ax,0x6096
  412909:	pop    edx
  41290a:	clc    
  41290b:	mov    ch,0x5
  41290d:	rol    DWORD PTR [ecx+0x3eb3951],1
  412913:	iret   
  412914:	loop   0x412934
  412916:	jae    0x41292a
  412918:	in     eax,dx
  412919:	jbe    0x41294c
  41291b:	sub    DWORD PTR [ecx],edx
  41291d:	cmc    
  41291e:	xchg   edi,esp
  412920:	push   0xfbb4c5
	...
  412935:	add    BYTE PTR [eax],al
  412937:	add    BYTE PTR [ecx],ah
  412939:	pop    edi
  41293a:	and    BYTE PTR [ecx],0x59
  41293d:	in     eax,0xc
  41293f:	mov    edx,0x3d136030
  412944:	je     0x41295f
  412946:	add    DWORD PTR [eax],eax
  412948:	jbe    0x41295f
  41294a:	jmp    0x41294e
  41294c:	xchg   ebx,eax
  41294d:	lds    esi,FWORD PTR [edi+ecx*1-0x1b]
  412951:	pop    ecx
  412952:	in     al,dx
  412953:	je     0x412958
  412955:	cmp    DWORD PTR [eax+0x18782e],ecx
  41295b:	jmp    0x41295a
  41295d:	out    0x0,eax
  41295f:	pop    edi
  412960:	lea    eax,[eax+0x1690c387]
  412966:	push   ebp
  412967:	mov    ebp,DWORD PTR [edi+0x4af8e157]
  41296d:	mov    dh,0x55
  41296f:	add    al,0xcb
  412971:	ficom  DWORD PTR [esi-0x75]
  412974:	jmp    0xfd9a:0x339c658b
  41297b:	mov    dl,ch
  41297d:	push   ecx
  41297e:	dec    ecx
  41297f:	and    al,0x7f
  412981:	mov    dl,0x6a
  412983:	mov    edx,0xc083da7a
  412988:	xchg   DWORD PTR [edx],ebp
  41298a:	mov    WORD PTR [edi+eiz*4-0x74fffd36],es
  412991:	mov    cl,BYTE PTR [esp+eax*2-0xaf2959]
  412998:	repnz cmovo ax,WORD PTR [eax]
	...
  4129ad:	add    BYTE PTR [eax],al
  4129af:	add    BYTE PTR [ebx+0x4f],cl
  4129b2:	cmc    
  4129b3:	sub    DWORD PTR [ebx+eiz*4+0x56ae5671],0x21
  4129bb:	cmp    al,0x39
  4129bd:	fiadd  DWORD PTR [eax]
  4129bf:	call   0x3fcc32
  4129c4:	(bad)  
  4129c5:	sbb    dh,BYTE PTR [ebp+0x2c]
  4129c8:	rcl    BYTE PTR ds:0x51658b4e,0x49
  4129cf:	and    al,0xf
  4129d1:	mov    dl,0x2e
  4129d3:	mov    edx,0x85017162
  4129d8:	and    al,BYTE PTR [ebx+ebx*1-0xa]
  4129dc:	fimul  WORD PTR [ebx+0x70620211]
  4129e2:	adc    DWORD PTR [ebp+0x74098ca6],ecx
  4129e8:	fmul   DWORD PTR gs:[eax+0x2b76e5fe]
  4129ef:	add    al,0xca
  4129f1:	mov    al,0x44
  4129f3:	add    BYTE PTR [edx-0xb],ah
  4129f6:	and    BYTE PTR [ebx],0x72
  4129f9:	jb     0x4129fc
  4129fb:	add    BYTE PTR [edx],dh
  4129fd:	mov    edi,0x81ae1437
  412a02:	sar    edi,0xde
  412a05:	das    
  412a06:	lods   eax,DWORD PTR ds:[esi]
  412a07:	mov    al,0x15
  412a09:	das    
  412a0a:	or     eax,0x4b050c4
  412a0f:	push   0x16fe2
	...
  412a28:	sub    al,0x47
  412a2a:	or     eax,0x4b07058
  412a2f:	push   esi
  412a30:	test   DWORD PTR [ecx+ecx*2+0x11],edi
  412a34:	and    dh,BYTE PTR [eax+0x7e]
  412a37:	mov    edi,0xbf8e7715
  412a3c:	or     al,0xfb
  412a3e:	sbb    eax,0xd420a15c
  412a43:	push   esp
  412a44:	mov    ah,0x23
  412a46:	test   eax,0x1725e2b
  412a4b:	push   0x5a
  412a4d:	sub    dl,cl
  412a4f:	dec    BYTE PTR [edi+0x6243a79a]
  412a55:	out    0x2e,eax
  412a57:	mov    BYTE PTR [esi+0x2d3318ce],ah
  412a5d:	lods   al,BYTE PTR ds:[esi]
  412a5e:	or     eax,0xa7d95064
  412a63:	add    ebp,ecx
  412a65:	std    
  412a66:	ret    
  412a67:	fucomip st,st(0)
  412a69:	imul   ebp,DWORD PTR [edx+esi*1+0x5c],0x62042555
  412a71:	fstp   DWORD PTR [esi-0x17106b2f]
  412a77:	rcl    BYTE PTR [eax+0x45df7b5c],1
  412a7d:	xchg   esp,eax
  412a7e:	in     eax,0xeb
  412a80:	in     eax,0x5c
  412a82:	out    0x38,eax
  412a84:	jbe    0x412a07
  412a86:	test   ebx,0x8a755d5
	...
  412aa0:	out    0x39,al
  412aa2:	out    0x3,eax
  412aa4:	bound  eax,QWORD PTR [esi+ebx*1]
  412aa7:	ror    DWORD PTR [ebx-0x26],1
  412aaa:	push   ss
  412aab:	aad    0xb4
  412aad:	in     eax,0xb
  412aaf:	in     al,dx
  412ab0:	lods   al,BYTE PTR ds:[esi]
  412ab1:	(bad)  
  412ab2:	(bad)  
  412ab3:	adc    esp,DWORD PTR [edx]
  412ab5:	fldcw  WORD PTR [ebx+eax*2+0x6c]
  412ab9:	push   ebp
  412aba:	add    sp,WORD PTR [edx-0x27]
  412abe:	cmp    bh,BYTE PTR [ecx]
  412ac0:	jbe    0x412b3f
  412ac2:	test   ebx,0xbfd5b85
  412ac8:	jmp    0x24fa949
  412acd:	ret    
  412ace:	daa    
  412acf:	add    al,0xb
  412ad1:	int3   
  412ad2:	ss leave 
  412ad4:	push   edi
  412ad5:	push   eax
  412ad6:	aaa    
  412ad7:	xor    BYTE PTR [ebx],bh
  412ad9:	push   edx
  412ada:	mov    ch,0xb
  412adc:	stos   DWORD PTR es:[edi],eax
  412add:	in     eax,0xe5
  412adf:	test   BYTE PTR [edx],bh
  412ae1:	fcom   st(3)
  412ae3:	or     ah,cl
  412ae5:	jno    0x412ac2
  412ae7:	scas   al,BYTE PTR es:[edi]
  412ae8:	push   edx
  412ae9:	out    dx,eax
  412aea:	pop    es
  412aeb:	sub    eax,0xb700525d
  412af0:	inc    ecx
  412af1:	repnz or BYTE PTR [eax-0x15],ah
  412af5:	mov    bh,0x58
  412af7:	(bad)
  412afb:	out    dx,al
  412afc:	xchg   edx,eax
  412afd:	push   ss
  412afe:	(bad)  
  412b00:	jp     0x412b18
  412b02:	add    eax,0xde
	...
  412b17:	add    BYTE PTR [edx-0x66],bh
  412b1a:	xchg   edi,eax
  412b1b:	push   0x47
  412b1d:	rol    DWORD PTR [ecx],cl
  412b1f:	sub    esp,DWORD PTR [eax+0x2a990164]
  412b25:	lds    esp,FWORD PTR [eax-0x29]
  412b28:	and    DWORD PTR [eax+ebx*2+0x70],ebx
  412b2c:	sbb    al,0xc8
  412b2e:	xchg   DWORD PTR [edi+0x6e],ebx
  412b31:	push   esi
  412b32:	jmp    0x412b91
  412b34:	popa   
  412b35:	push   edx
  412b36:	jae    0x412b21
  412b38:	mov    eax,gs
  412b3a:	and    al,0x9
  412b3c:	jne    0x412b26
  412b3e:	and    al,0x9
  412b40:	ins    DWORD PTR es:[edi],dx
  412b41:	call   0x5de346a
  412b46:	(bad)  
  412b47:	xor    eax,0xfcfdb7c2
  412b4c:	sub    eax,0xe8e940cc
  412b51:	arpl   WORD PTR [ebx-0x7c282d6a],ax
  412b57:	jl     0x412b2c
  412b59:	leave  
  412b5a:	mov    DWORD PTR [edi-0x17ba4bb2],esi
  412b60:	popa   
  412b61:	push   esi
  412b62:	fscale 
  412b64:	ins    BYTE PTR es:[edi],dx
  412b65:	push   es
  412b66:	(bad)  
  412b67:	aam    0xd
  412b69:	int3   
  412b6a:	inc    eax
  412b6b:	jmp    0xbf9ebf58
  412b70:	cmp    al,BYTE PTR [eax]
  412b72:	pop    eax
  412b73:	sub    esi,DWORD PTR [esi-0x27]
  412b76:	push   ecx
  412b77:	mov    ah,0x17
  412b79:	push   eax
  412b7a:	xlat   BYTE PTR ds:[ebx]
	...
  412b8f:	add    BYTE PTR [eax],bh
  412b91:	lods   eax,DWORD PTR ds:[esi]
  412b92:	push   esi
  412b93:	mov    esp,DWORD PTR [ecx+0x3c0056e0]
  412b99:	push   edi
  412b9a:	test   bl,bl
  412b9c:	out    dx,al
  412b9d:	pop    edx
  412b9e:	test   bh,bh
  412ba0:	dec    dh
  412ba2:	jg     0x412ba3
  412ba4:	je     0x412b48
  412ba6:	(bad)  
  412ba7:	jg     0x412b96
  412ba9:	fmul   DWORD PTR [ecx+0x75ab7ef5]
  412baf:	dec    esi
  412bb0:	fiadd  DWORD PTR [ebp+0x771f548c]
  412bb6:	mov    WORD PTR [edi+ebx*1-0x3d],cs
  412bba:	call   0x1182576
  412bbf:	mov    edi,DWORD PTR [ebx-0x7d870ca7]
  412bc5:	pop    eax
  412bc6:	(bad)  
  412bc7:	jne    0x412b99
  412bc9:	pop    ebp
  412bca:	jns    0x412bf0
  412bcc:	shr    DWORD PTR [edx],cl
  412bce:	xor    ecx,DWORD PTR [ebx-0x7fee8671]
  412bd4:	arpl   bp,dx
  412bd6:	je     0x412c05
  412bd8:	xor    eax,0x3b06fd20
  412bdd:	pop    ecx
  412bde:	fimul  DWORD PTR [edi]
  412be0:	dec    edi
  412be1:	test   al,0xea
  412be3:	and    esp,esi
  412be5:	sub    ah,BYTE PTR [ecx]
  412be7:	sbb    BYTE PTR [esi],al
  412be9:	sbb    ah,BYTE PTR [ecx]
  412beb:	sbb    al,0xd4
  412bed:	sub    ah,BYTE PTR [ecx]
  412bef:	sbb    al,dh
  412bf1:	or     cl,BYTE PTR [esi-0x75]
	...
  412c08:	mov    al,0xae
  412c0a:	leave  
  412c0b:	add    bh,BYTE PTR [ebx-0x2a]
  412c0e:	mov    eax,esi
  412c10:	loopne 0x412c6d
  412c12:	test   bh,bh
  412c14:	aas    
  412c15:	xlat   BYTE PTR ds:[ebx]
  412c16:	mov    BYTE PTR [ebx],0x4b
  412c19:	or     DWORD PTR [edx-0x27dd9d3a],0x5a
  412c20:	and    BYTE PTR [ecx+eax*1+0x53],ah
  412c24:	xchg   edi,eax
  412c25:	cmp    cl,BYTE PTR [edx-0x314f8e28]
  412c2b:	mov    ch,BYTE PTR [eax]
  412c2d:	div    DWORD PTR [ecx]
  412c2f:	mov    esp,0x7ffe708d
  412c34:	out    0x16,eax
  412c36:	mov    cl,0x3
  412c38:	fistp  QWORD PTR [edx-0x3d1cf850]
  412c3e:	inc    BYTE PTR ss:0xe901ab4b
  412c45:	pop    esp
  412c46:	jge    0x412c3d
  412c48:	jp     0x412c8a
  412c4a:	aam    0x50
  412c4c:	fistp  QWORD PTR [ebx]
  412c4e:	fstp   QWORD PTR [edi]
  412c50:	xlat   BYTE PTR ds:[ebx]
  412c51:	cmp    ebx,ebp
  412c53:	sbb    ecx,edx
  412c55:	adc    eax,0xe7620003
  412c5a:	xor    al,0x84
  412c5c:	aam    0x7
  412c5e:	clc    
  412c5f:	test   ch,al
  412c61:	add    al,0x16
  412c63:	cmp    DWORD PTR [esi],edi
  412c65:	int3   
  412c66:	sbb    al,0x74
  412c68:	js     0x412c51
  412c6a:	shl    BYTE PTR [ebx],0x0
	...
  412c7d:	add    BYTE PTR [eax],al
  412c7f:	add    BYTE PTR [esi+0x5f],dl
  412c82:	dec    edx
  412c83:	imul   edi,DWORD PTR gs:[eax-0x53],0x2e
  412c88:	fdiv   QWORD PTR [ebp-0xb1df8fc]
  412c8e:	push   edi
  412c8f:	push   cs
  412c90:	es cmp eax,0xc3852227
  412c96:	loopne 0x412caf
  412c98:	out    dx,eax
  412c99:	stos   DWORD PTR es:[edi],eax
  412c9a:	loopne 0x412cb7
  412c9c:	jne    0x412d01
  412c9e:	fst    QWORD PTR [edi]
  412ca0:	fnstcw WORD PTR [edx]
  412ca2:	aam    0x8a
  412ca4:	cdq    
  412ca5:	push   edi
  412ca6:	pop    DWORD PTR [ecx]
  412ca8:	(bad)  
  412ca9:	(bad)  
  412cab:	mov    BYTE PTR [ebp+0x45],al
  412cae:	lock jle 0x412cfd
  412cb1:	into   
  412cb2:	in     al,dx
  412cb3:	lock add eax,0x9d0160c0
  412cb9:	fs sub eax,0x29b496d6
  412cbf:	adc    BYTE PTR [edx-0x51],ah
  412cc2:	sahf   
  412cc3:	mov    BYTE PTR [edx],ch
  412cc5:	or     eax,0xd9b47b36
  412cca:	out    dx,al
  412ccb:	sbb    esi,0x58
  412cce:	xchg   esp,eax
  412ccf:	jmp    esi
  412cd1:	sub    ebx,DWORD PTR [ebx+ecx*1+0x350e53e3]
  412cd8:	cld    
  412cd9:	fdivr  DWORD PTR [ebp+0x1]
  412cdc:	jmp    0x756f912b
  412ce1:	(bad)  
  412ce2:	push   0xffffffb8
	...
  412cf8:	inc    ecx
  412cf9:	icebp  
  412cfa:	out    0x7b,eax
  412cfc:	add    DWORD PTR [edx+0x27],esp
  412cff:	add    al,0x65
  412d01:	sahf   
  412d02:	and    esp,eax
  412d04:	jne    0x412d12
  412d06:	fidivr WORD PTR [esi-0x4d]
  412d09:	into   
  412d0a:	cli    
  412d0b:	sti    
  412d0c:	ins    DWORD PTR es:[edi],dx
  412d0d:	int    0x30
  412d0f:	jg     0x412cc5
  412d11:	into   
  412d12:	jecxz  0x412c9c
  412d14:	mov    dl,0x44
  412d16:	sbb    esi,DWORD PTR [esi+0x2b]
  412d19:	(bad)  
  412d1b:	or     DWORD PTR [eax+0x11353b13],0xfffffffd
  412d22:	mov    DWORD PTR [esi-0x2ec8a7d5],0x34960c2c
  412d2c:	push   esi
  412d2d:	rcr    ebp,0xc3
  412d30:	jne    0x412d8d
  412d32:	mov    ds:0xd3ab13,eax
  412d37:	jmp    0xa9c505a2
  412d3c:	sbb    edx,esp
  412d3e:	cmp    DWORD PTR [edx],ebp
  412d40:	push   es
  412d41:	fidiv  WORD PTR [edi+eiz*8-0x26]
  412d45:	das    
  412d46:	jmp    0xc68a083a
  412d4b:	in     eax,0x3a
  412d4d:	pop    eax
  412d4e:	add    al,BYTE PTR [edx+0x1a]
  412d51:	pop    ebp
  412d52:	test   al,0x2d
  412d55:	adc    esi,eax
  412d57:	mov    esp,0x5446452
	...
  412d70:	push   0x5e
  412d72:	rcr    BYTE PTR [ebp+0x1238626a],0xe
  412d79:	pop    ebp
  412d7a:	rcr    BYTE PTR [ebp-0x16fae09e],cl
  412d80:	push   ss
  412d81:	arpl   si,ax
  412d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d84:	mov    ds:0x1f9a00ec,eax
  412d89:	arpl   di,dx
  412d8b:	mov    edx,0xf889af98
  412d90:	push   ecx
  412d91:	scas   eax,DWORD PTR es:[edi]
  412d92:	add    dh,ch
  412d94:	loope  0x412df2
  412d96:	fst    DWORD PTR [edx+ebx*2+0x5e]
  412d9a:	rcr    BYTE PTR [esi+eax*8+0x58],cl
  412d9e:	cli    
  412d9f:	into   
  412da0:	jno    0x412df9
  412da2:	jge    0x412de3
  412da4:	pop    esp
  412da5:	fs cmc 
  412da7:	fs push 0xe5f06bd0
  412dad:	sti    
  412dae:	sbb    al,0x71
  412db0:	ds pusha 
  412db2:	inc    eax
  412db3:	jmp    0xc585cc18
  412db8:	pop    ebp
  412db9:	fs out dx,eax
  412dbb:	ins    BYTE PTR es:[edi],dx
  412dbc:	sub    al,0xcd
  412dbe:	adc    al,0x7
  412dc0:	(bad)  
  412dc1:	fbstp  TBYTE PTR [eax+eax*1+0x33]
  412dc5:	(bad)  
  412dc6:	fidiv  DWORD PTR [ebp-0x79]
  412dc9:	(bad)  
  412dca:	imul   bl
  412dcc:	inc    esi
  412dcd:	retf   
  412dce:	ja     0x412dd0
  412dd0:	inc    esp
  412dd1:	pop    ebx
  412dd2:	jmp    0x0:0x39
	...
  412de5:	add    BYTE PTR [eax],al
  412de7:	add    BYTE PTR [ecx+edx*4-0x7841dfdf],bh
  412dee:	(bad)  
  412def:	push   eax
  412df0:	add    al,0x30
  412df2:	(bad)  
  412df3:	adc    eax,0x40f127
  412df8:	enter  0xda1,0xb9
  412dfc:	and    ebx,ebx
  412dfe:	add    eax,0x759db680
  412e03:	or     dl,BYTE PTR [eax]
  412e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e06:	jbe    0x412e0e
  412e08:	mul    eax
  412e0a:	mov    eax,edi
  412e0c:	jo     0x412e63
  412e0e:	mov    dh,cl
  412e10:	sub    BYTE PTR [ebx-0x77f8769d],bl
  412e16:	mov    WORD PTR [eax+eiz*8],ds
  412e19:	popa   
  412e1a:	repz jns 0x412e24
  412e1d:	dec    eax
  412e1e:	lock jne 0x412e27
  412e21:	fadd   DWORD PTR [ecx+0x24]
  412e24:	mov    ebx,0xce74bd61
  412e29:	aad    0x15
  412e2b:	jmp    0x412dff
  412e2d:	popa   
  412e2e:	iret   
  412e2f:	je     0x412de7
  412e31:	dec    edi
  412e32:	mov    ebp,0x5ddf4266
  412e37:	mov    eax,DWORD PTR ds:0x97c25a29
  412e3d:	fimul  DWORD PTR [ecx-0x7c1ea8ac]
  412e43:	leave  
  412e44:	push   edi
  412e45:	dec    esi
  412e46:	push   ebx
  412e47:	push   edi
  412e48:	cld    
  412e49:	or     bh,bh
  412e4b:	inc    DWORD PTR [eax]
	...
  412e5d:	add    BYTE PTR [eax],al
  412e5f:	add    BYTE PTR [esi+edx*8-0xa],ch
  412e63:	and    BYTE PTR [edx+0x29],0x1
  412e67:	je     0x412ecf
  412e69:	add    ebx,eax
  412e6b:	je     0x412eda
  412e6d:	xchg   ebx,eax
  412e6e:	inc    ecx
  412e6f:	test   BYTE PTR [ecx+ebx*4-0x26],dh
  412e73:	call   FWORD PTR [eax+eax*8+0x2]
  412e77:	inc    esp
  412e78:	and    edi,DWORD PTR [ebp-0x3a988cad]
  412e7e:	inc    ecx
  412e7f:	ja     0x412ee5
  412e81:	jmp    0x412eb5
  412e83:	mov    BYTE PTR [eax-0x7f7cf965],cl
  412e89:	inc    eax
  412e8a:	rcr    BYTE PTR [ebp+0x49],cl
  412e8d:	inc    ebp
  412e8e:	imul   edx,DWORD PTR [esi+0x62],0x2284813f
  412e95:	mov    DWORD PTR [edx],ecx
  412e97:	test   DWORD PTR [eax],esi
  412e99:	mov    WORD PTR [esi],es
  412e9b:	add    DWORD PTR [eax+0x40],0x43
  412e9f:	add    esp,DWORD PTR [edx-0x35]
  412ea2:	aad    0x23
  412ea4:	pop    esi
  412ea5:	xchg   ebx,eax
  412ea6:	neg    dl
  412ea8:	out    0xf8,eax
  412eaa:	mov    ch,0x33
  412eac:	mov    WORD PTR [edi+0x72],?
  412eaf:	(bad)  
  412eb0:	in     eax,dx
  412eb1:	push   esi
  412eb2:	scas   eax,DWORD PTR es:[edi]
  412eb3:	mov    ch,ch
  412eb5:	gs in  al,dx
  412eb7:	sbb    BYTE PTR [esi+0x3e],dl
  412eba:	xchg   al,al
  412ebc:	pusha  
  412ebd:	push   cs
  412ebe:	mov    dh,0xf4
  412ec0:	out    0x2d,eax
  412ec2:	jnp    0x412e86
	...
  412ed8:	or     edx,DWORD PTR [edi]
  412eda:	add    eax,0xc536e207
  412edf:	rcr    bh,0x71
  412ee2:	mov    eax,0xac7fe70b
  412ee7:	add    eax,0x39798e79
  412eec:	mov    DWORD PTR [ecx+0x7a],eax
  412eef:	sbb    DWORD PTR ds:0x661d45d9,esi
  412ef5:	xchg   ecx,eax
  412ef6:	ss add al,0x5d
  412ef9:	pop    ecx
  412efa:	ins    BYTE PTR es:[edi],dx
  412efb:	inc    esp
  412efc:	cli    
  412efd:	fisub  WORD PTR [esi+edx*2-0xf]
  412f01:	fidiv  DWORD PTR [eax+0xe]
  412f04:	or     DWORD PTR [ebx],ebx
  412f06:	jecxz  0x412f0b
  412f08:	xor    DWORD PTR [ecx],ebx
  412f0a:	ins    BYTE PTR es:[edi],dx
  412f0b:	push   esi
  412f0c:	shl    esp,1
  412f0e:	push   0x665554ee
  412f13:	mov    cl,0xd3
  412f15:	fcomp  QWORD PTR [edi+0x67dc45d9]
  412f1b:	sbb    eax,0xb6e9126d
  412f20:	imul   ebx,DWORD PTR [eax+ebp*8],0xe799e567
  412f27:	xchg   BYTE PTR [ebx],dl
  412f29:	into   
  412f2a:	jmp    0xdf5892a9
  412f2f:	add    edx,DWORD PTR [ecx+0x19]
  412f32:	ins    BYTE PTR es:[edi],dx
  412f33:	push   esi
  412f34:	xchg   ecx,eax
  412f35:	in     al,0x68
  412f37:	out    dx,al
  412f38:	add    al,0x55
  412f3a:	push   ss
  412f3b:	mov    cl,0x0
	...
  412f4d:	add    BYTE PTR [eax],al
  412f4f:	add    BYTE PTR [ebx-0x24],dh
  412f52:	dec    edi
  412f53:	fprem1 
  412f55:	(bad)  [edi+0x1d]
  412f58:	pop    ebp
  412f59:	adc    ch,cl
  412f5b:	mov    dh,0x59
  412f5d:	sbb    al,0xe8
  412f5f:	pop    ebx
  412f60:	in     eax,0x99
  412f62:	out    0x86,eax
  412f64:	mov    bl,0xcd
  412f66:	jmp    0xef5892e5
  412f6b:	add    ebp,DWORD PTR [edi]
  412f6d:	pusha  
  412f6e:	ret    
  412f6f:	rcl    BYTE PTR [edi],cl
  412f71:	or     BYTE PTR [eax+0x2c62aff4],ch
  412f77:	xor    dh,ah
  412f79:	daa    
  412f7a:	xor    ebp,edx
  412f7c:	adc    BYTE PTR [eax+0x0],ah
  412f7f:	adc    al,0x76
  412f81:	lods   al,BYTE PTR ds:[esi]
  412f82:	mov    DWORD PTR [edx+eiz*2],ebp
  412f85:	add    al,bh
  412f87:	ins    BYTE PTR es:[edi],dx
  412f88:	push   ds
  412f89:	enter  0x730d,0x5d
  412f8d:	in     al,0x84
  412f8f:	test   eax,0xe888dcb5
  412f94:	mov    al,ds:0xb533469f
  412f99:	inc    ebp
  412f9a:	mov    DWORD PTR [edx+esi*1],esp
  412f9d:	mov    bl,0x59
  412f9f:	ins    BYTE PTR es:[edi],dx
  412fa0:	mov    bh,0xcd
  412fa2:	add    eax,0x7a8c2020
  412fa7:	jmp    0xe9078906
  412fac:	popa   
  412fad:	pusha  
  412fae:	dec    ebx
  412faf:	loope  0x412f95
  412fb1:	and    BYTE PTR [ebx+ebp*8+0x0],dh
	...
  412fc5:	add    BYTE PTR [eax],al
  412fc7:	add    BYTE PTR [eax-0x58cfa0f7],bh
  412fcd:	loopne 0x412fcf
  412fcf:	cli    
  412fd0:	mov    eax,ds:0xe43989ae
  412fd5:	sub    DWORD PTR [ebp+edi*8+0x2e],esi
  412fd9:	pop    edi
  412fda:	pop    esp
  412fdb:	int    0x75
  412fdd:	scas   al,BYTE PTR es:[edi]
  412fde:	push   ebp
  412fdf:	jb     0x412f96
  412fe1:	neg    DWORD PTR [eax]
  412fe3:	ret    0x5d48
  412fe6:	fst    DWORD PTR [ebp-0x2a4a1bb3]
  412fec:	bound  edi,QWORD PTR [ebx-0x2152f37d]
  412ff2:	pushaw 
  412ff4:	mov    eax,0x16ebbf56
  412ff9:	sahf   
  412ffa:	dec    edx
  412ffb:	pop    esp
  412ffc:	outs   dx,BYTE PTR ds:[esi]
  412ffd:	mov    bl,0x5b
  412fff:	inc    edx
  413000:	fld    TBYTE PTR [ecx]
  413002:	jae    0x412fe4
  413004:	loopne 0x413046
  413006:	add    bl,BYTE PTR [edi]
  413008:	inc    esi
  413009:	rol    BYTE PTR [eax],cl
  41300b:	add    BYTE PTR [edi+edx*2-0x29e22dce],bh
  413012:	adc    BYTE PTR [ebx-0x7afabeb9],cl
  413018:	ret    0xff90
  41301b:	mov    BYTE PTR [edx+0x7b0cbf25],ch
  413021:	xor    BYTE PTR [edx-0x379dc514],cl
  413027:	jne    0x4130a8
  413029:	inc    esi
  41302a:	mov    ebp,0xc9
	...
  41303f:	add    BYTE PTR [eax+0x4bfc4459],bh
  413045:	cmc    
  413046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413047:	(bad)  
  413048:	aam    0x2
  41304a:	mov    ecx,DWORD PTR [ebp-0x39]
  41304d:	push   esi
  41304e:	(bad)  
  41304f:	(bad)  
  413050:	mov    esi,0x91450e9d
  413055:	into   
  413056:	ror    cl,0x88
  413059:	xor    BYTE PTR [edx-0x379e0514],cl
  41305f:	jne    0x4130a0
  413061:	dec    eax
  413062:	mov    ebp,0x445878c9
  413067:	cld    
  413068:	sti    
  413069:	out    dx,al
  41306a:	xor    eax,0x8b0244fe
  41306f:	dec    ebp
  413070:	inc    edi
  413071:	push   esi
  413072:	(bad)  
  413073:	(bad)  
  413074:	jle    0x413013
  413076:	push   cs
  413077:	inc    ebp
  413078:	inc    ecx
  413079:	into   
  41307a:	ror    cl,0x48
  41307d:	xor    BYTE PTR [edx+0x562cc8ec],cl
  413083:	xor    esp,esp
  413085:	iret   
  413086:	(bad)  
  413087:	mov    ebx,0x8005d6fc
  41308c:	ds adc al,0x75
  41308f:	add    al,0x3e
  413091:	test   al,0x74
  413093:	or     BYTE PTR [edx],bh
  413095:	add    bh,bh
  413097:	jmp    DWORD PTR [edx+0x2b]
  41309a:	scas   al,BYTE PTR es:[edi]
  41309b:	jne    0x4130fd
  41309d:	mov    bh,0x42
  41309f:	test   BYTE PTR [edx+0x38f898],ah
	...
  4130b5:	add    BYTE PTR [eax],al
  4130b7:	add    BYTE PTR [edi],ah
  4130b9:	dec    eax
  4130ba:	imul   esp,DWORD PTR [edi+0xf0500ea],0x1f
  4130c1:	or     eax,0xc5a58afd
  4130c6:	dec    edi
  4130c7:	je     0x41313c
  4130c9:	(bad)  
  4130cb:	cmp    eax,0x796921f6
  4130d0:	bound  edi,QWORD PTR [ebx]
  4130d2:	add    DWORD PTR [ebx+ebx*4+0x79c2c54b],0x5dfd9936
  4130dd:	retf   
  4130de:	scas   al,BYTE PTR es:[edi]
  4130df:	push   ebp
  4130e0:	out    0xfc,eax
  4130e2:	cld    
  4130e3:	dec    edi
  4130e4:	cmp    dl,BYTE PTR [eax+0x2e]
  4130e7:	inc    BYTE PTR [ebp-0x59]
  4130ea:	cld    
  4130eb:	test   BYTE PTR [eax],dl
  4130ed:	xor    al,0x8
  4130ef:	xor    edx,DWORD PTR [eax]
  4130f1:	sbb    bh,BYTE PTR [eax+edx*1-0x73]
  4130f5:	jp     0x4130c1
  4130f7:	pop    esp
  4130f8:	and    BYTE PTR [ecx+eax*1],bh
  4130fb:	push   ebp
  4130fc:	jmp    0x6695ab9c
  413101:	mov    ch,0xc8
  413103:	pop    ss
  413104:	mov    dl,0xfb
  413106:	mov    eax,0x2e91b313
  41310b:	je     0x41315f
  41310d:	mov    bh,0xc0
  41310f:	pop    es
  413110:	or     bh,BYTE PTR [eax+esi*1]
  413113:	(bad)  
  413114:	in     eax,dx
  413115:	jl     0x413159
  413117:	push   esp
  413118:	(bad)  
  41311a:	jp     0x413170
	...
  413130:	outs   dx,BYTE PTR ds:[esi]
  413131:	mov    ebp,0x433217c8
  413136:	mov    ch,0x13
  413138:	xor    ebx,ecx
  41313a:	cmp    BYTE PTR ds:0xbf72e94e,ch
  413140:	gs inc ecx
  413142:	and    dh,BYTE PTR [eax]
  413144:	mov    ah,0x51
  413146:	sub    al,0x41
  413148:	loopne 0x41318e
  41314a:	repz (bad) 
  41314c:	or     al,0x5e
  41314e:	sar    BYTE PTR [ecx-0x65],1
  413151:	pop    edi
  413152:	xor    ebp,eax
  413154:	gs pop esp
  413156:	mov    esp,0x3e915bb7
  41315b:	add    al,0x5d
  41315d:	pop    ecx
  41315e:	nop
  41315f:	cwde   
  413160:	jge    0x4131b3
  413162:	out    0x78,eax
  413164:	sub    ebp,edi
  413166:	out    dx,eax
  413167:	aad    0x85
  413169:	inc    esi
  41316a:	test   DWORD PTR ds:0x87775d64,ebp
  413170:	push   edi
  413171:	shr    esi,cl
  413173:	imul   ebp,DWORD PTR [ecx+ebx*8-0x31c77c1a],0x1a
  41317b:	inc    esp
  41317c:	ficom  DWORD PTR [ebp-0x6a14ebfd]
  413182:	or     eax,DWORD PTR [eax]
  413184:	xchg   ecx,eax
  413185:	pop    edx
  413186:	and    eax,0xe7d96304
  41318b:	and    BYTE PTR [edi],0x51
  41318e:	ds sub eax,0x6de1cd9c
	...
  4131a8:	adc    al,0x51
  4131aa:	lods   eax,DWORD PTR cs:[esi]
  4131ac:	daa    
  4131ad:	xchg   esi,eax
  4131ae:	retf   
  4131af:	pop    ss
  4131b0:	arpl   WORD PTR [esi-0xd],bx
  4131b3:	cmc    
  4131b4:	out    dx,al
  4131b5:	popf   
  4131b6:	retf   
  4131b7:	adc    ecx,DWORD PTR [edx]
  4131b9:	shr    BYTE PTR [eax-0x5c9b9dfe],1
  4131bf:	out    0x55,eax
  4131c1:	push   ebp
  4131c2:	daa    
  4131c3:	mov    eax,0x7d005097
  4131c8:	mov    ebp,0x7f1789fc
  4131cd:	int3   
  4131ce:	and    al,0xd
  4131d0:	mov    cl,0xa9
  4131d2:	push   ebp
  4131d3:	jb     0x41324f
  4131d5:	cmp    BYTE PTR [edi-0x2b],ah
  4131d8:	xchg   BYTE PTR [edi-0x77],cl
  4131db:	shl    eax,1
  4131dd:	dec    edi
  4131de:	jp     0x4131c9
  4131e0:	pop    esi
  4131e1:	pop    ecx
  4131e2:	jae    0x4131d0
  4131e4:	loope  0x4131ba
  4131e6:	and    al,0xdd
  4131e8:	popa   
  4131e9:	(bad)  
  4131ea:	push   ss
  4131eb:	bound  edi,QWORD PTR [ebp+0x289218fc]
  4131f1:	push   ebp
  4131f2:	std    
  4131f3:	adc    al,0x62
  4131f5:	bound  ebx,QWORD PTR [ebx-0x17]
  4131f8:	jb     0x41318a
  4131fa:	jmp    0x11330de
  4131ff:	out    dx,al
  413200:	loope  0x413265
  413202:	leave  
  413203:	xchg   ecx,eax
  413204:	les    ebx,FWORD PTR [ecx+0x17dae8ff]
  41320a:	pop    ecx
  41320b:	sldt   WORD PTR [eax]
	...
  41321e:	add    BYTE PTR [eax],al
  413220:	pop    ds
  413221:	lods   eax,DWORD PTR ds:[esi]
  413222:	sub    DWORD PTR ds:0xe9081a45,0xbc0c43e2
  41322c:	push   cs
  41322d:	arpl   di,sp
  41322f:	bound  edi,QWORD PTR [ebx+0x61]
  413232:	jl     0x413241
  413234:	dec    esi
  413235:	push   esi
  413236:	jmp    0x4131ec
  413238:	sbb    ecx,DWORD PTR [eax+0x595ee955]
  41323e:	out    0x56,eax
  413240:	popa   
  413241:	fld    DWORD PTR [eax]
  413243:	jb     0x41320a
  413245:	sti    
  413246:	sbb    BYTE PTR [edi+0x16feaf59],dh
  41324c:	inc    esi
  41324d:	arpl   ax,si
  41324f:	fs aaa 
  413251:	rol    DWORD PTR ds:0xfd25a300,1
  413257:	push   es
  413258:	dec    ebx
  413259:	icebp  
  41325a:	jle    0x41328f
  41325c:	mov    edx,ebx
  41325e:	inc    ecx
  41325f:	and    al,0xab
  413261:	rol    BYTE PTR [ecx+0x24],cl
  413264:	iret   
  413265:	es add dh,0xcb
  413269:	aam    0x0
  41326b:	add    BYTE PTR [esi+0xb],al
  41326e:	jl     0x413278
  413270:	cmp    al,BYTE PTR [ebx]
  413272:	(bad)  
  413273:	call   FWORD PTR [ebx+eax*4+0x41d0a79]
  41327a:	(bad)  
  41327b:	dec    DWORD PTR [ebx+ebx*4+0x41]
  41327f:	and    al,0xb7
  413281:	aam    0x89
  413283:	(bad)  
	...
  413298:	push   cs
  413299:	xchg   ecx,eax
  41329a:	and    DWORD PTR [eax],edx
  41329c:	rcr    DWORD PTR [eax-0x3174fec3],cl
  4132a2:	pop    ecx
  4132a3:	and    al,0x6b
  4132a5:	iret   
  4132a6:	mov    ebp,0x7202a574
  4132ab:	and    al,0x27
  4132ad:	rcl    bl,1
  4132af:	call   DWORD PTR [edi+0x2f]
  4132b2:	and    DWORD PTR [ecx+0x6a],edx
  4132b5:	sub    cl,BYTE PTR [edx-0x6184c35]
  4132bb:	call   FWORD PTR [esi+ecx*8+0x7f8c81f5]
  4132c2:	std    
  4132c3:	push   es
  4132c4:	mov    ebx,0x1f800c88
  4132c9:	das    
  4132ca:	adc    DWORD PTR [eax],eax
  4132cc:	(bad)  
  4132cd:	call   0xdda8af5b
  4132d2:	jmp    0x7543b97d
  4132d7:	or     al,0x92
  4132d9:	and    ch,bh
  4132db:	xor    cl,BYTE PTR [ebx-0x12]
  4132de:	or     edi,DWORD PTR [edi+0x7016a62]
  4132e4:	loop   0x4132a1
  4132e6:	cmp    eax,0x480f9e7
  4132eb:	add    cl,ch
  4132ed:	test   ebp,0x8665355d
  4132f3:	ret    
  4132f4:	pop    esi
  4132f5:	add    bh,ch
  4132f7:	(bad)  
  4132f8:	fmul   DWORD PTR [ecx+eiz*8]
  4132fb:	pop    es
	...
  413310:	jmp    0xe7451411
  413315:	cld    
  413316:	loopne 0x413327
  413318:	adc    bl,BYTE PTR [edi]
  41331a:	lods   eax,DWORD PTR ds:[esi]
  41331b:	and    edx,DWORD PTR [edx+0x28]
  41331e:	lods   al,BYTE PTR ds:[esi]
  41331f:	std    
  413320:	popf   
  413321:	pop    DWORD PTR [esi-0x76]
  413324:	cs fdiv st(4),st
  413327:	mov    bl,BYTE PTR [esi]
  413329:	aam    0x0
  41332b:	lea    ebx,[esi]
  41332d:	sbb    al,0x11
  41332f:	push   eax
  413330:	jge    0x413316
  413332:	loopne 0x413343
  413334:	mov    cl,BYTE PTR [ecx+0x2a]
  413337:	(bad)  
  413338:	ins    DWORD PTR es:[edi],dx
  413339:	or     edi,0xffffff8a
  41333c:	jae    0x4133a6
  41333e:	or     eax,0x2f406200
  413343:	inc    ebx
  413344:	jle    0x41337e
  413346:	add    al,0x74
  413348:	gs mov ebx,0x7fe9e737
  41334e:	add    al,0x0
  413350:	jmp    0x5f02fb4a
  413355:	inc    eax
  413356:	iret   
  413357:	mov    dh,BYTE PTR [ebx]
  413359:	mov    ebx,0x3e1d07b7
  41335e:	push   ebp
  41335f:	xchg   DWORD PTR [edx-0x71377fc0],esp
  413365:	cmp    bh,BYTE PTR [esi+0x0]
  413368:	mov    bl,0xff
  41336a:	rol    DWORD PTR [edi],1
  41336c:	loope  0x413346
  41336e:	(bad)  
  41336f:	sti    
  413370:	std    
  413371:	bound  ebp,QWORD PTR ds:0xc9
	...
  413387:	add    BYTE PTR [edx],cl
  413389:	stos   DWORD PTR es:[edi],eax
  41338a:	retf   
  41338b:	add    al,0x62
  41338d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41338e:	bound  edx,QWORD PTR [edi]
  413390:	xchg   edx,eax
  413391:	test   al,0x9e
  413393:	jle    0x41336f
  413395:	pop    ecx
  413396:	jle    0x413393
  413398:	aad    0xc9
  41339a:	jmp    0x41340f
  41339c:	bound  eax,QWORD PTR [edx+0x7f]
  41339f:	xchg   BYTE PTR [esi],bh
  4133a1:	dec    ebp
  4133a2:	out    0xd1,eax
  4133a4:	sti    
  4133a5:	test   al,0xf6
  4133a7:	ret    
  4133a8:	mov    ch,0x90
  4133aa:	push   edi
  4133ab:	adc    DWORD PTR [edx],esp
  4133ad:	fnstcw WORD PTR [edi-0x18277e5e]
  4133b3:	jl     0x413342
  4133b5:	push   ebx
  4133b6:	mov    ch,0xb0
  4133b8:	push   esp
  4133b9:	(bad)  
  4133ba:	in     eax,0x84
  4133bc:	push   es
  4133bd:	push   ecx
  4133be:	out    0x76,eax
  4133c0:	push   ds
  4133c1:	push   ecx
  4133c2:	aaa    
  4133c3:	sar    BYTE PTR [edi+eiz*4-0x5],cl
  4133c7:	jle    0x41337e
  4133c9:	ret    
  4133ca:	into   
  4133cb:	jl     0x4133eb
  4133cd:	push   ecx
  4133ce:	fs cmp esi,ecx
  4133d1:	clc    
  4133d2:	jb     0x4133d7
  4133d4:	out    dx,eax
  4133d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133d6:	jnp    0x4133ae
  4133d8:	mov    dl,0x4c
  4133da:	pop    ss
  4133db:	or     cl,bl
  4133dd:	sahf   
  4133de:	imul   esi,ebp,0x33
  4133e1:	push   edi
  4133e2:	daa    
  4133e3:	jge    0x41338b
  4133e5:	push   ecx
  4133e6:	out    dx,al
  4133e7:	mov    esi,0x27a4632b
	...
  413400:	fsub   st,st(1)
  413402:	mov    bh,0x28
  413404:	xchg   edx,eax
  413405:	loope  0x413479
  413407:	add    dh,BYTE PTR [esp+ecx*2-0x69170469]
  41340e:	add    BYTE PTR ds:0xb5c05618,dh
  413414:	add    al,0x62
  413416:	inc    ebp
  413417:	icebp  
  413418:	pop    esi
  413419:	data16 xor ch,BYTE PTR [ecx]
  41341c:	sub    esp,DWORD PTR [edx]
  41341e:	sar    DWORD PTR [esi+ebp*2+0x21624f40],0xd5
  413426:	or     DWORD PTR [ebp+eax*4+0x4cf18a4c],0xb19bfca5
  413431:	dec    ebx
  413432:	dec    edi
  413433:	mov    eax,ds:0x1afc9d46
  413438:	adc    al,0x55
  41343a:	shr    dh,0xf4
  41343d:	and    cl,BYTE PTR [ecx+0x561768a8]
  413443:	xchg   ebx,eax
  413444:	mov    eax,ds:0x8e940e3
  413449:	lods   al,BYTE PTR ds:[esi]
  41344a:	adc    eax,0xdc415e29
  41344f:	or     ah,BYTE PTR [ecx-0x27]
  413452:	mov    DWORD PTR [ecx+0x41744604],edi
  413458:	xchg   ebx,eax
  413459:	dec    ebx
  41345a:	je     0x413421
  41345c:	ins    DWORD PTR es:[edi],dx
  41345d:	dec    ebx
  41345e:	adc    esp,DWORD PTR ds:0x62009957
	...
  413478:	cmp    DWORD PTR [ebp-0x3],edx
  41347b:	std    
  41347c:	dec    esp
  41347d:	pop    edi
  41347e:	push   cs
  41347f:	push   ss
  413480:	xor    BYTE PTR [ebx+0x4f],cl
  413483:	leave  
  413484:	int3   
  413485:	mov    WORD PTR [ebx-0x3d],?
  413488:	dec    edx
  413489:	add    DWORD PTR [ebp+ecx*1+0x56],0x60
  41348e:	push   cs
  41348f:	mov    ecx,0x114f4b13
  413494:	lods   eax,DWORD PTR ds:[esi]
  413495:	mov    WORD PTR [ebx-0xd],?
  413498:	jp     0x413462
  41349a:	and    al,0x0
  41349c:	aas    
  41349d:	int    0x3
  41349f:	push   esi
  4134a0:	push   esp
  4134a1:	sub    BYTE PTR ds:0x97b3b85,ch
  4134a7:	mov    edi,ebp
  4134a9:	ins    DWORD PTR es:[edi],dx
  4134aa:	std    
  4134ab:	push   ebp
  4134ac:	inc    esp
  4134ad:	sub    BYTE PTR ds:0x57c4b85,bh
  4134b3:	mov    edi,ebp
  4134b5:	sub    esi,edi
  4134b7:	push   eax
  4134b8:	add    eax,DWORD PTR [ebp-0xd]
  4134bb:	push   edi
  4134bc:	fisttp DWORD PTR fs:[eax+0x13]
  4134c0:	or     ebx,eax
  4134c2:	mov    esi,eax
  4134c4:	hlt    
  4134c5:	and    DWORD PTR [edi+0x5026bb10],edi
  4134cb:	push   ebx
  4134cc:	jle    0x4134e9
  4134ce:	push   esi
  4134cf:	mov    edx,DWORD PTR [edx-0x6b00a414]
  4134d5:	repz mov bl,BYTE PTR [edi+ebx*2+0x35]
  4134da:	mov    dh,al
	...
  4134f0:	cwde   
  4134f1:	xchg   edi,eax
  4134f2:	mov    BYTE PTR [edi+ebx*2-0x17],al
  4134f6:	xor    esi,0x4f
  4134f9:	xchg   edx,eax
  4134fa:	mov    BYTE PTR [edi+ebx*2-0x1b],al
  4134fe:	mov    DWORD PTR [esi],ecx
  413500:	neg    BYTE PTR [eax]
  413502:	and    DWORD PTR [eax],edx
  413504:	cmp    esi,esp
  413506:	jno    0x41352c
  413508:	mov    ds:0x2bc3b642,eax
  41350d:	sbb    edi,esi
  41350f:	push   ecx
  413510:	xor    edx,eax
  413512:	dec    ecx
  413513:	and    al,0x3b
  413515:	dec    eax
  413516:	iret   
  413517:	test   ebx,edi
  413519:	inc    edx
  41351a:	inc    esp
  41351b:	retf   0x91c2
  41351e:	and    DWORD PTR [eax],edx
  413520:	mov    al,0x4b
  413522:	push   ebx
  413523:	(bad)  
  413524:	sti    
  413525:	dec    esi
  413526:	mov    bh,BYTE PTR [edx+eiz*2-0x24]
  41352a:	adc    al,0x85
  41352c:	and    eax,0x658b0c25
  413531:	es es push esi
  413534:	adc    eax,0x5d8ad171
  413539:	imul   edi,DWORD PTR [edx-0x11],0x5
  41353d:	jb     0x413538
  41353f:	xor    ah,BYTE PTR [edx]
  413541:	mov    esi,0xce0e2e
  413546:	sbb    al,BYTE PTR [edi-0x6d]
  413549:	jecxz  0x4134fb
  41354b:	and    edi,DWORD PTR [edx]
  41354d:	(bad)  
  41354e:	es jae 0x4134d7
  413551:	sub    BYTE PTR [ecx],bl
  413553:	adc    al,0x0
	...
  413565:	add    BYTE PTR [eax],al
  413567:	add    ch,dl
  413569:	dec    ebx
  41356a:	mov    ch,BYTE PTR es:[edx+0x5e7449bd]
  413571:	mov    es,WORD PTR [ecx-0x16]
  413574:	(bad)  
  413575:	(bad)  
  413576:	cmp    bh,ah
  413578:	ret    
  413579:	sub    ah,BYTE PTR [esi]
  41357b:	(bad)  
  41357c:	fldcw  WORD PTR [eax]
  41357e:	cmp    dh,0x2e
  413581:	dec    eax
  413582:	jp     0x41358a
  413584:	xor    ebx,ebp
  413586:	and    eax,0xf6c7424f
  41358b:	push   esi
  41358c:	fst    DWORD PTR [eax-0x4aa5afda]
  413592:	sub    ecx,DWORD PTR [esi]
  413594:	(bad)  
  413595:	cmp    BYTE PTR [ecx+0x43],0x3e
  413599:	inc    esp
  41359a:	jp     0x4135a6
  41359c:	adc    DWORD PTR [ebx-0x2c],esp
  41359f:	pop    es
  4135a0:	fdiv   st,st(4)
  4135a2:	loopne 0x4135b7
  4135a4:	mov    ebp,0xbb5ac7f2
  4135a9:	stc    
  4135aa:	inc    edx
  4135ab:	punpckldq mm5,mm2
  4135ae:	jns    0x4135a0
  4135b0:	loope  0x41362b
  4135b2:	add    DWORD PTR [ecx+ebp*2-0x27],esi
  4135b6:	in     ax,dx
  4135b8:	xor    al,0xe4
  4135ba:	scas   eax,DWORD PTR es:[edi]
  4135bb:	adc    ah,BYTE PTR [edx+0x25dd6ad9]
  4135c1:	dec    ebx
  4135c2:	rcr    edi,cl
  4135c4:	gs dec edx
  4135c6:	fdiv   QWORD PTR [edi-0x7f186690]
	...
  4135e0:	int    0xc3
  4135e2:	jmp    0x4135d5
  4135e4:	lds    edi,FWORD PTR ds:0x89677ce3
  4135ea:	call   0xe81659b4
  4135ef:	rcr    al,1
  4135f1:	cmp    al,0xbd
  4135f3:	jp     0x413623
  4135f5:	icebp  
  4135f6:	mov    cl,0xbf
  4135f8:	fnsave [ecx]
  4135fa:	add    al,0x1e
  4135fc:	aad    0x49
  4135fe:	(bad)  
  4135ff:	scas   eax,DWORD PTR es:[edi]
  413600:	jno    0x41364c
  413602:	jl     0x413617
  413604:	(bad)
  413607:	es ss loope 0x413676
  41360b:	inc    esp
  41360c:	xor    esp,ebx
  41360e:	fimul  WORD PTR [esi-0x28]
  413611:	dec    eax
  413612:	mov    edi,0xe7d8bdf4
  413617:	js     0x4135c0
  413619:	cmp    eax,0xaaaf24e9
  41361e:	sbb    al,0x42
  413620:	pop    ebp
  413621:	fstp   DWORD PTR [ecx+edi*2]
  413624:	jns    0x4135c8
  413626:	(bad)  
  413627:	out    dx,eax
  413628:	pop    ebp
  413629:	scas   eax,DWORD PTR es:[edi]
  41362a:	sub    eax,DWORD PTR [edx+ecx*4]
  41362d:	push   ds
  41362e:	xchg   BYTE PTR [edx+eiz*2],al
  413631:	dec    edx
  413632:	sbb    al,0x10
  413634:	gs ret 
  413636:	mul    DWORD PTR [esi+edx*8]
  413639:	aad    0x86
  41363b:	scas   eax,DWORD PTR es:[edi]
  41363c:	pop    ebp
  41363d:	pop    ebp
  41363e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41363f:	mov    al,0x5e
  413641:	dec    eax
  413642:	add    BYTE PTR [edi+0x0],bl
	...
  413658:	retf   
  413659:	cmp    al,ch
  41365b:	ins    BYTE PTR es:[edi],dx
  41365c:	pop    edi
  41365d:	dec    eax
  41365e:	std    
  41365f:	jb     0x4136d5
  413661:	xor    eax,DWORD PTR [edx]
  413663:	pop    esi
  413664:	pushf  
  413665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413666:	pop    ebx
  413667:	sub    ecx,DWORD PTR [esi-0x27]
  41366a:	cmp    DWORD PTR ds:0x7253ac76,0x971cfcfa
  413674:	push   ds
  413675:	or     al,0xfe
  413677:	bound  ebx,QWORD PTR [ecx-0x484a14a3]
  41367d:	push   ebp
  41367e:	inc    esp
  41367f:	int    0x65
  413681:	test   eax,0x48299155
  413686:	std    
  413687:	jmp    0xd3294bf6
  41368c:	aad    0xda
  41368e:	add    BYTE PTR [edx-0x72],dh
  413691:	push   ecx
  413692:	je     0x413659
  413694:	gs pop esi
  413696:	idiv   BYTE PTR [ebp-0x55]
  413699:	push   ebx
  41369a:	inc    esp
  41369b:	lds    ebp,FWORD PTR [ebp-0x4d]
  41369e:	adc    eax,0x7219cb40
  4136a3:	(bad)  
  4136a4:	mov    dl,0x2a
  4136a6:	cmc    
  4136a7:	fsubr  DWORD PTR [eax]
  4136a9:	pushf  
  4136aa:	and    al,0xf5
  4136ac:	sbb    al,0x2a
  4136ae:	jae    0x41368a
  4136b0:	or     al,0x9c
  4136b2:	and    al,0xe1
  4136b4:	mov    cl,0xaf
  4136b6:	push   0x4d
  4136b8:	or     edx,DWORD PTR ds:0xe2e8
	...
  4136ce:	add    BYTE PTR [eax],al
  4136d0:	jne    0x4136ac
  4136d2:	add    BYTE PTR [edx+0x59],dh
  4136d5:	xor    esi,DWORD PTR [ecx]
  4136d7:	push   0x29
  4136d9:	inc    edi
  4136da:	out    0x1d,eax
  4136dc:	popa   
  4136dd:	fld    DWORD PTR [eax]
  4136df:	pop    esp
  4136e0:	adc    eax,0xf30014fc
  4136e5:	test   eax,0xc13b01c1
  4136ea:	in     eax,dx
  4136eb:	mov    DWORD PTR [edi+0x28],eax
  4136ee:	sbb    DWORD PTR [ebp-0x721b874b],eax
  4136f4:	mul    DWORD PTR [edi]
  4136f6:	adc    eax,0xdbe3b9
  4136fb:	add    BYTE PTR [ebx+0xb01b9f3],ah
  413701:	shl    ebp,0x8b
  413704:	(bad)  
  413705:	daa    
  413706:	adc    DWORD PTR [ecx-0x7aeed839],ecx
  41370c:	sahf   
  41370d:	dec    ebp
  41370e:	sub    DWORD PTR [edx+ecx*1],0xc78b00dc
  413715:	daa    
  413716:	adc    eax,0xe4c4383
  41371b:	sub    ah,0xda
  41371e:	add    BYTE PTR [eax],al
  413720:	inc    eax
  413721:	lods   al,BYTE PTR ds:[esi]
  413722:	mov    cl,ch
  413724:	jae    0x41374a
  413726:	xchg   esi,eax
  413727:	add    DWORD PTR [ebx+0x3d0fbdc6],edi
  41372d:	dec    esi
  41372e:	add    BYTE PTR [eax],al
  413730:	retf   
  413731:	xor    bh,BYTE PTR [ecx+0x24]
	...
  413748:	addr16 popa 
  41374a:	and    edx,DWORD PTR [ebp+0x30]
  41374d:	cwde   
  41374e:	in     eax,0x9a
  413750:	mov    ch,0xdb
  413752:	add    BYTE PTR [ebx+ecx*8-0x74047b15],al
  413759:	fild   DWORD PTR [eax]
  41375b:	mov    esi,DWORD PTR [edi+0x31]
  41375e:	adc    DWORD PTR [ebx-0x3b550b43],ecx
  413764:	mov    bl,bl
  413766:	mov    DWORD PTR [edi+eiz*4+0x43],edx
  41376a:	mov    cl,ch
  41376c:	rol    DWORD PTR [edx-0x3f],cl
  41376f:	add    DWORD PTR [edx+0x32],esp
  413772:	mov    cs,WORD PTR [ebx-0x7a]
  413775:	dec    esp
  413776:	scas   al,BYTE PTR es:[edi]
  413777:	enter  0xb566,0x4b
  41377b:	push   cs
  41377c:	out    0x89,al
  41377e:	add    al,0x0
  413780:	bound  ebx,QWORD PTR [eax+0x19]
  413783:	cmp    esp,DWORD PTR [ebx+0x30]
  413786:	mov    WORD PTR [ebx+0x7e],es
  413789:	aam    0x87
  41378b:	mov    edi,0xff5cbc5d
  413790:	and    eax,0x66729031
  413795:	mov    fs,WORD PTR [edx]
  413797:	adc    al,0x2
  413799:	and    eax,ecx
  41379b:	(bad)  
  41379c:	fmul   DWORD PTR [ebx]
  41379e:	sub    eax,0x1306125
  4137a3:	mov    esp,DWORD PTR [esi-0x59750724]
  4137a9:	adc    al,0xfd
  4137ab:	mov    BYTE PTR [eax],al
	...
  4137bd:	add    BYTE PTR [eax],al
  4137bf:	add    BYTE PTR [ecx+0x3e438e28],ah
  4137c5:	adc    al,0x8c
  4137c7:	dec    edx
  4137c8:	xchg   BYTE PTR [ecx-0x4535d43b],bh
  4137ce:	fiadd  DWORD PTR [eax]
  4137d0:	bound  eax,QWORD PTR [ebx+0x144ef633]
  4137d6:	cmc    
  4137d7:	mov    ah,BYTE PTR [esi]
  4137d9:	sbb    al,0xf9
  4137db:	mov    BYTE PTR [ecx-0x24],cl
  4137de:	mov    edx,0x8bd02188
  4137e3:	jnp    0x413863
  4137e5:	ror    BYTE PTR [ebp-0x2afc1412],1
  4137eb:	(bad)  
  4137ec:	outs   dx,DWORD PTR ds:[esi]
  4137ed:	jl     0x4137e2
  4137ef:	aas    
  4137f0:	(bad)  
  4137f1:	fstp   DWORD PTR [ebp-0x45def0c9]
  4137f7:	push   esi
  4137f8:	adc    eax,0x8a1421ef
  4137fd:	fyl2xp1 
  4137ff:	ret    
  413800:	ins    DWORD PTR es:[edi],dx
  413801:	push   ecx
  413802:	sub    bl,ah
  413804:	ficomp WORD PTR [ecx]
  413806:	sbb    edi,DWORD PTR [ebx+0x22cfca5c]
  41380c:	outs   dx,BYTE PTR ds:[esi]
  41380d:	sub    eax,0x554dc3d9
  413812:	cli    
  413813:	xlat   BYTE PTR ds:[ebx]
  413814:	mov    al,BYTE PTR [edi]
  413816:	cld    
  413817:	in     al,dx
  413818:	out    dx,al
  413819:	pushf  
  41381a:	ret    
  41381b:	out    0xa5,eax
  41381d:	inc    esi
  41381e:	sbb    eax,0xf93d5623
  413823:	ret    
	...
  413838:	and    eax,0x7197275d
  41383d:	pop    eax
  41383e:	retf   
  41383f:	out    0x41,eax
  413841:	(bad)  
  413843:	add    esp,DWORD PTR [edx-0x33]
  413846:	icebp  
  413847:	and    cl,BYTE PTR [edi+0x46]
  41384a:	fsub   QWORD PTR [edi+0x53]
  41384d:	cdq    
  41384e:	out    0x8c,eax
  413850:	aaa    
  413851:	add    dh,ah
  413853:	cwde   
  413854:	inc    eax
  413855:	push   edx
  413856:	jmp    0x6277:0x5f5292b9
  41385d:	(bad)  
  41385f:	mov    dh,0x3d
  413861:	push   ebx
  413862:	add    al,bl
  413864:	int    0xbd
  413866:	out    0x3,eax
  413868:	pop    edx
  413869:	fcos   
  41386b:	ins    BYTE PTR es:[edi],dx
  41386c:	cdq    
  41386d:	fsub   st,st(7)
  41386f:	xchg   ebp,esi
  413871:	retf   
  413872:	in     al,dx
  413873:	lods   eax,DWORD PTR ds:[esi]
  413874:	scas   eax,DWORD PTR es:[edi]
  413875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413876:	ror    BYTE PTR [ecx+esi*2],cl
  413879:	inc    esi
  41387a:	cs sub eax,0x219e5a60
  413880:	call   0x7a414419
  413885:	popf   
  413886:	sti    
  413887:	add    ah,BYTE PTR [edx+0x52]
  41388a:	add    BYTE PTR [esi+ecx*2+0x61e83d06],ah
  413891:	push   edx
  413892:	lds    eax,FWORD PTR [esi-0x60]
  413895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413896:	pop    ecx
  413897:	push   0x1a
  413899:	(bad)  
  41389a:	ret    0xed
	...
  4138ad:	add    BYTE PTR [eax],al
  4138af:	add    BYTE PTR [ecx-0x56],ah
  4138b2:	push   ecx
  4138b3:	xor    al,0x18
  4138b5:	lods   al,BYTE PTR ds:[esi]
  4138b6:	mov    DWORD PTR [eax+0x1704cbdd],eax
  4138bc:	sub    ebp,0xffffffe0
  4138bf:	(bad)  [ecx]
  4138c1:	inc    ebp
  4138c2:	xor    dl,BYTE PTR [edx-0x22db5be7]
  4138c8:	dec    DWORD PTR [edi+0x45]
  4138cb:	adc    ebp,ebx
  4138cd:	test   BYTE PTR [edx+ecx*8-0x18],dh
  4138d1:	mov    al,ds:0x9b42f924
  4138d6:	xor    BYTE PTR [edx+0x1b],dh
  4138d9:	cmc    
  4138da:	xor    DWORD PTR [ebx],ebx
  4138dc:	imul   ecx,ebx,0x28
  4138df:	bound  ecx,QWORD PTR [ecx+edx*2+0x6d]
  4138e3:	stc    
  4138e4:	(bad)  
  4138e5:	xor    eax,0xf0b2ea0c
  4138ea:	aaa    
  4138eb:	mov    esp,0x1627cd59
  4138f0:	aad    0x2c
  4138f2:	adc    ch,BYTE PTR [ecx-0xebc0f9f]
  4138f8:	lods   al,BYTE PTR ds:[esi]
  4138f9:	and    al,0x91
  4138fb:	in     eax,0x61
  4138fd:	enter  0x6210,0x92
  413901:	clc    
  413902:	adc    BYTE PTR [eax-0x6db6f18],ch
  413908:	mov    ss,WORD PTR [ebx+0x2f1b5b28]
  41390e:	and    al,0x60
  413910:	fadd   QWORD PTR [eax+ecx*4+0x2c]
	...
  413928:	push   0x52
  41392a:	pop    ebx
  41392b:	add    BYTE PTR [ebx+0x30304655],dl
  413931:	popf   
  413932:	push   ss
  413933:	add    ecx,DWORD PTR [ecx+esi*1+0x67]
  413937:	pop    ss
  413938:	pop    ebx
  413939:	cli    
  41393a:	jno    0x413960
  41393c:	fwait
  41393d:	stc    
  41393e:	adc    al,0x50
  413940:	ins    DWORD PTR es:[edi],dx
  413941:	sbb    ch,bh
  413943:	or     BYTE PTR [edi],0xd4
  413946:	mov    cl,0x1
  413948:	(bad)  
  413949:	cli    
  41394a:	adc    al,0xdc
  41394c:	sub    DWORD PTR [eax],ebx
  41394e:	std    
  41394f:	pop    esi
  413950:	test   BYTE PTR gs:[edi-0x407faf3d],al
  413957:	add    al,0x4b
  413959:	pop    ebp
  41395a:	jmp    0x53cc216f
  41395f:	push   edi
  413960:	mov    al,0xe7
  413962:	das    
  413963:	(bad)  [ebx+ecx*2-0x2834ed2b]
  41396a:	mov    edi,DWORD PTR [esi-0x1]
  41396d:	or     BYTE PTR [eax-0x77baa0bc],0x7c
  413974:	outs   dx,DWORD PTR ds:[esi]
  413975:	cmp    eax,0x4eab15fe
  41397a:	cmp    eax,0x38f30800
  41397f:	outs   dx,BYTE PTR ds:[esi]
  413980:	adc    ebp,ecx
  413982:	xchg   BYTE PTR [ebx+ecx*8+0xf8b00d7],dl
  413989:	cmp    al,0x21
  41398b:	and    DWORD PTR [eax],eax
	...
  41399d:	add    BYTE PTR [eax],al
  41399f:	add    bh,dh
  4139a1:	cmp    esp,DWORD PTR [ecx]
  4139a3:	mov    al,BYTE PTR [edi+0x3c]
  4139a6:	and    eax,0x113c378b
  4139ab:	or     DWORD PTR [ecx+0x32c931dc],0xffffff81
  4139b2:	and    DWORD PTR [eax],ebx
  4139b4:	xor    ch,BYTE PTR [ecx]
  4139b6:	and    DWORD PTR [eax],edx
  4139b8:	bound  esi,QWORD PTR [edi+0x71e123c6]
  4139be:	or     BYTE PTR [edx+0x71],ch
  4139c1:	das    
  4139c2:	inc    esp
  4139c3:	dec    edi
  4139c4:	xor    BYTE PTR [ebx-0xdabac09],al
  4139ca:	add    al,0x83
  4139cc:	sahf   
  4139cd:	and    eax,0xf1f7bf88
  4139d2:	mov    DWORD PTR [ebp+0x36],ecx
  4139d5:	das    
  4139d6:	int    0x23
  4139d8:	xchg   BYTE PTR [ebp+ebx*1+0x3b96874],dh
  4139df:	mov    DWORD PTR [ebx+0x5a408c34],esp
  4139e5:	addr16 jmp 0x41396a
  4139e8:	jnp    0x413a1a
  4139ea:	xchg   ebp,eax
  4139eb:	or     ch,cl
  4139ed:	jnp    0x4139d8
  4139ef:	add    BYTE PTR [edi-0x38],ch
  4139f2:	icebp  
  4139f3:	jmp    DWORD PTR ds:0xa3fefa1f
  4139f9:	xor    al,0xa7
  4139fb:	add    al,0xba
  4139fd:	mov    ecx,0x34a338db
  413a02:	pop    DWORD PTR [edi]
	...
  413a18:	fistp  DWORD PTR [ecx]
  413a1a:	or     DWORD PTR [ecx+0x32a34a3],ecx
  413a20:	loope  0x413a33
  413a22:	or     DWORD PTR [eax],eax
  413a24:	mov    cl,0x31
  413a26:	mov    cl,BYTE PTR [ebx+0x3e]
  413a29:	inc    eax
  413a2a:	add    BYTE PTR [ebx-0x7a],0x14
  413a2e:	or     eax,0xf91c2e8b
  413a33:	inc    esp
  413a34:	loope  0x413a27
  413a36:	cmc    
  413a37:	mov    BYTE PTR [esi],dl
  413a39:	sbb    al,0xf1
  413a3b:	cmp    cl,BYTE PTR [eax+ebx*1-0x71]
  413a3f:	mov    ecx,gs
  413a41:	mov    ah,0xe5
  413a43:	sbb    edx,DWORD PTR ds:0x89f8e6d9
  413a49:	out    0x27,eax
  413a4b:	add    al,0x3d
  413a4d:	mov    ds:0x9ea08a34,eax
  413a52:	push   0x47
  413a54:	pop    ebp
  413a55:	pop    ss
  413a56:	out    dx,eax
  413a57:	add    ebp,DWORD PTR [edi]
  413a59:	dec    esi
  413a5a:	retf   
  413a5b:	add    BYTE PTR [ecx+0x652f6a41],0xa6
  413a62:	adc    al,0xb6
  413a64:	fmul   DWORD PTR [eax+0x3e]
  413a67:	mov    ebx,DWORD PTR [edi+0x56]
  413a6a:	scas   al,BYTE PTR es:[edi]
  413a6b:	push   ds
  413a6c:	call   0x6245adc9
  413a71:	fldenv [eax-0x39]
  413a74:	and    ecx,0x508dc572
  413a7a:	and    ebp,eax
	...
  413a90:	pop    ecx
  413a91:	stos   BYTE PTR es:[edi],al
  413a92:	add    DWORD PTR [edi+eiz*8],eax
  413a95:	pushf  
  413a96:	ret    
  413a97:	jecxz  0x413a36
  413a99:	scas   eax,DWORD PTR es:[edi]
  413a9a:	jmp    0xfa0688bd
  413a9f:	ret    
  413aa0:	sbb    eax,0x6204ea05
  413aa5:	(bad)  
  413aa7:	or     al,0xe1
  413aa9:	inc    eax
  413aaa:	call   0xe7a719bd
  413aaf:	add    esp,DWORD PTR [edx+0x54]
  413ab2:	lds    eax,FWORD PTR [edi]
  413ab4:	xor    DWORD PTR [esi],ebx
  413ab6:	or     al,al
  413ab8:	inc    ecx
  413ab9:	in     eax,dx
  413aba:	mov    esp,0xf9394e1e
  413abf:	ret    
  413ac0:	fisttp QWORD PTR [esi-0x5b]
  413ac3:	(bad)  
  413ac4:	fimul  WORD PTR [edi]
  413ac6:	xchg   ebx,eax
  413ac7:	jecxz  0x413aa1
  413ac9:	stos   BYTE PTR es:[edi],al
  413aca:	(bad)  
  413acb:	mov    BYTE PTR [ebx-0x8d41f34],dh
  413ad1:	inc    BYTE PTR [eax]
  413ad3:	call   0x63198939
  413ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ad9:	loope  0x413a62
  413adb:	sub    eax,0xc283e5ba
  413ae0:	cmc    
  413ae1:	iret   
  413ae2:	mov    ebp,0xe7a769
  413ae7:	ret    0x5663
  413aea:	int    0xc6
  413aec:	int    0x42
  413aee:	adc    ebx,DWORD PTR [ebp+0x6c010170]
	...
  413b08:	cmp    eax,esi
  413b0a:	cdq    
  413b0b:	sbb    bl,bl
  413b0d:	adc    ebp,eax
  413b0f:	push   0x6500d963
  413b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b15:	int3   
  413b16:	cmp    DWORD PTR [ebx],eax
  413b18:	pop    esi
  413b19:	stos   BYTE PTR es:[edi],al
  413b1a:	mov    DWORD PTR [edi-0x16ff9782],ebx
  413b20:	popa   
  413b21:	push   ebp
  413b22:	shl    ch,0x4c
  413b25:	inc    eax
  413b26:	je     0x413af5
  413b28:	sub    eax,0xf81a0e54
  413b2d:	fsubr  QWORD PTR [edx-0x17]
  413b30:	sti    
  413b31:	or     ch,cl
  413b33:	xchg   edi,eax
  413b34:	data16 fiadd DWORD PTR [eax]
  413b37:	xchg   esi,eax
  413b38:	fimul  WORD PTR [edi-0x3f5716ee]
  413b3e:	out    dx,al
  413b3f:	jmp    DWORD PTR [ecx+0x55]
  413b42:	shr    dh,0x24
  413b45:	inc    edx
  413b46:	mov    DWORD PTR [edx],esp
  413b48:	inc    esi
  413b49:	inc    eax
  413b4a:	aaa    
  413b4b:	call   0x26956db1
  413b50:	inc    edi
  413b51:	aas    
  413b52:	mov    ebp,0xeaaf69
  413b57:	add    al,BYTE PTR [ebp+0xaac5e9f]
  413b5d:	push   esp
  413b5e:	jecxz  0x413b60
  413b60:	(bad)  
  413b61:	cdq    
  413b62:	mov    cl,BYTE PTR [edi+eiz*4-0x28]
  413b66:	call   0xff1ee782
  413b6b:	xor    eax,DWORD PTR [eax]
	...
  413b7d:	add    BYTE PTR [eax],al
  413b7f:	add    BYTE PTR [ebx-0x65],bh
  413b82:	add    DWORD PTR [eax],eax
  413b84:	push   0x828b5687
  413b89:	dec    edi
  413b8a:	pop    esi
  413b8b:	add    al,0x58
  413b8d:	ficom  WORD PTR [eax+eiz*8]
  413b90:	mov    DWORD PTR [edi*8-0x75cebb74],ebx
  413b97:	push   cs
  413b98:	xchg   ebx,eax
  413b99:	xchg   edi,eax
  413b9a:	cmp    BYTE PTR [ecx],al
  413b9c:	mov    edx,DWORD PTR [ecx+0x4e]
  413b9f:	sub    al,0xa3
  413ba1:	lahf   
  413ba2:	cmp    BYTE PTR [ecx],al
  413ba4:	jnp    0x413c18
  413ba6:	or     eax,0xd60558
  413bab:	inc    esi
  413bac:	sub    DWORD PTR [eax-0x8],0xffffff8d
  413bb0:	je     0x413b8b
  413bb2:	mov    DWORD PTR [esi],ecx
  413bb4:	repz mov dl,0x38
  413bb7:	add    DWORD PTR [ebx+0x72],ecx
  413bba:	add    eax,0xd60558
  413bbf:	inc    esi
  413bc0:	sub    DWORD PTR [eax-0x8],0x53
  413bc4:	mov    esp,0xcb12d947
  413bc9:	fistp  DWORD PTR [ebp+0x5e]
  413bcc:	rcr    BYTE PTR [eax-0x25181380],1
  413bd2:	add    BYTE PTR [eax],al
  413bd4:	call   0x3acc8f5f
  413bd9:	test   DWORD PTR [edx-0x74ff06fa],ecx
  413bdf:	test   al,0x9f
  413be1:	fild   DWORD PTR [eax]
	...
  413bf7:	add    BYTE PTR [esi+0x18],ch
  413bfa:	and    DWORD PTR [ebx+ebx*1],esp
  413bfd:	push   ecx
  413bfe:	retf   
  413bff:	call   0xfe5f6466
  413c04:	int    0xb5
  413c06:	inc    ecx
  413c07:	jae    0x413c3f
  413c09:	lds    esi,FWORD PTR [ebp-0x3252b9dd]
  413c0f:	and    ecx,DWORD PTR [edx-0x521cb126]
  413c15:	cs test al,0x0
  413c18:	fidiv  WORD PTR [ecx-0x71]
  413c1b:	or     eax,0x27e0f5ef
  413c20:	xor    bh,BYTE PTR [ebx+0xcbce74a]
  413c26:	sbb    esi,edi
  413c28:	jns    0x413c17
  413c2a:	sbb    DWORD PTR [ebx+0x46],esi
  413c2d:	into   
  413c2e:	xchg   DWORD PTR [ebx+0x3e],ecx
  413c31:	sub    ch,BYTE PTR [ecx]
  413c33:	not    BYTE PTR [ebp-0x5abe692]
  413c39:	inc    ecx
  413c3a:	loop   0x413c3b
  413c3c:	pop    ebp
  413c3d:	scas   al,BYTE PTR es:[edi]
  413c3e:	shl    BYTE PTR [ebx],0xc6
  413c41:	add    BYTE PTR [eax+0x292c864b],cl
  413c47:	shr    DWORD PTR [ecx],cl
  413c49:	pop    eax
  413c4a:	sbb    DWORD PTR [ebx+0x69d04622],eax
  413c50:	arpl   WORD PTR [ebp-0x1f85dc40],si
  413c56:	(bad)  
  413c57:	int    0x3a
  413c59:	cmp    bl,BYTE PTR [eax]
  413c5b:	inc    BYTE PTR [eax]
	...
  413c6d:	add    BYTE PTR [eax],al
  413c6f:	add    BYTE PTR ds:0x7223c8ae,bl
  413c75:	out    dx,eax
  413c76:	shl    BYTE PTR [ebx],0x72
  413c79:	mov    al,ds:0xa8623f81
  413c7e:	aaa    
  413c7f:	fdivr  st,st(5)
  413c81:	call   FWORD PTR [edx]
  413c83:	ret    0xbe2
  413c86:	push   es
  413c87:	jb     0x413c6f
  413c89:	inc    edx
  413c8a:	inc    ecx
  413c8b:	pop    esi
  413c8c:	test   cl,bl
  413c8e:	les    edi,FWORD PTR [esi+0x54315e2]
  413c94:	(bad)  
  413c95:	fldcw  WORD PTR [ecx]
  413c97:	or     al,0x62
  413c99:	push   edx
  413c9a:	dec    ebx
  413c9b:	loopne 0x413ca6
  413c9d:	(bad)  
  413c9f:	add    esp,edi
  413ca1:	ds je  0x413ca1
  413ca4:	push   cs
  413ca5:	test   al,0x64
  413ca7:	enter  0xe181,0xff
  413cab:	and    cl,BYTE PTR [edx-0x4a7219c2]
  413cb1:	push   ebp
  413cb2:	ret    0xde0a
  413cb5:	xchg   edi,esp
  413cb7:	add    esp,DWORD PTR [edx+0x30]
  413cba:	mov    al,BYTE PTR [ebx]
  413cbc:	(bad)  
  413cbd:	fst    DWORD PTR [ecx+0x5]
  413cc0:	adc    ebp,DWORD PTR [eax+0x4d75ae16]
  413cc6:	arpl   di,bx
  413cc8:	mov    eax,ds:0x7a03e7d9
  413ccd:	push   ss
  413cce:	call   0x3bf49ed8
  413cd3:	mov    DWORD PTR [eax],eax
	...
  413ce5:	add    BYTE PTR [eax],al
  413ce7:	add    BYTE PTR [ecx+0x45bd27f5],dh
  413ced:	leave  
  413cee:	sub    eax,DWORD PTR [esi]
  413cf0:	bound  ecx,QWORD PTR [ebx+ebp*1-0x20]
  413cf4:	jns    0x413d46
  413cf6:	arpl   di,bx
  413cf8:	cmc    
  413cf9:	fsub   st,st(7)
  413cfb:	add    ebx,edi
  413cfd:	xchg   esp,eax
  413cfe:	ret    
  413cff:	retf   
  413d00:	xchg   ebp,eax
  413d01:	push   edx
  413d02:	sub    ecx,DWORD PTR ss:0xe11a5e23
  413d09:	sbb    bl,bl
  413d0b:	lds    ebx,FWORD PTR [esi+eax*4-0x5d]
  413d0f:	fistp  WORD PTR [ebp+0x668faf91]
  413d15:	pop    edx
  413d16:	dec    edi
  413d17:	lock outs dx,BYTE PTR ds:[esi]
  413d19:	(bad)  
  413d1a:	add    dl,bh
  413d1c:	mov    eax,ds:0x5a587b4
  413d21:	nop
  413d22:	mov    edi,DWORD PTR [ebp-0x43]
  413d25:	mov    ebp,0x4c61e900
  413d2a:	dec    esp
  413d2b:	int    0x99
  413d2d:	xor    eax,0x3f680bc1
  413d32:	test   BYTE PTR [ecx],ch
  413d34:	in     eax,dx
  413d35:	loopne 0x413cc2
  413d37:	gs xchg ebp,eax
  413d39:	mov    ebp,0xa961e900
  413d3e:	mov    esp,DWORD PTR [ebp+0x7450fd85]
  413d44:	jmp    0xe8d9:0x61e9b8f9
  413d4b:	cli    
	...
  413d60:	fild   DWORD PTR [bx+si]
  413d63:	pop    esp
  413d64:	loop   0x413d5f
  413d66:	mov    al,0xe9
  413d68:	popa   
  413d69:	fst    DWORD PTR [eax+0x14]
  413d6c:	(bad)  
  413d6d:	in     eax,dx
  413d6e:	jae    0x413d59
  413d70:	popa   
  413d71:	push   edx
  413d72:	aad    0x5c
  413d74:	call   0xfd39:0x5a911cf9
  413d7b:	sahf   
  413d7c:	fst    QWORD PTR [eax+0x24]
  413d7f:	pop    ecx
  413d80:	data16 fld DWORD PTR [eax]
  413d83:	arpl   WORD PTR [esi+0x67e8c034],ax
  413d89:	fldcw  WORD PTR [edx-0x17]
  413d8c:	fcomp  QWORD PTR [eax+0x4ff1c124]
  413d92:	into   
  413d93:	or     edx,0xe566fd40
  413d99:	nop
  413d9a:	and    al,0xf9
  413d9c:	mov    ds:0x71f92498,al
  413da1:	push   ebx
  413da2:	inc    eax
  413da3:	jmp    0x11959e1
  413da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413da9:	loop   0x413d32
  413dab:	ret    
  413dac:	xchg   edx,eax
  413dad:	cmp    al,0xfe
  413daf:	push   DWORD PTR [eax+ebx*2]
  413db2:	jmp    0x11a3c8b
  413db7:	push   ebx
  413db8:	push   ds
  413db9:	mov    edx,DWORD PTR [esi-0x75]
  413dbc:	jb     0x413da0
  413dbe:	adc    al,0xd8
  413dc0:	leave  
  413dc1:	sbb    ch,bh
  413dc3:	mov    al,BYTE PTR [eax]
	...
  413dd5:	add    BYTE PTR [eax],al
  413dd7:	add    BYTE PTR [edi],ah
  413dd9:	cmp    ecx,ebp
  413ddb:	add    eax,0x4487d8cb
  413de0:	lahf   
  413de1:	sub    al,0x8a
  413de3:	inc    ebp
  413de4:	mov    ebx,0xba9cade1
  413de9:	fadd   DWORD PTR [eax]
  413deb:	lea    ecx,[edi+0x39]
  413dee:	adc    eax,0xfd4c7b68
  413df3:	jmp    DWORD PTR [ecx]
  413df5:	fst    DWORD PTR [eax-0x18]
  413df8:	mov    es,WORD PTR [edx]
  413dfa:	(bad)  
  413dfb:	dec    DWORD PTR [edi]
  413dfd:	cwde   
  413dfe:	je     0x413e07
  413e00:	jns    0x413d9a
  413e02:	call   0x119ba04
  413e07:	mov    edi,DWORD PTR [esi]
  413e09:	aad    0x8b
  413e0b:	dec    esp
  413e0c:	das    
  413e0d:	inc    eax
  413e0e:	push   eax
  413e0f:	jmp    FWORD PTR [edi+0x3b05ed1c]
  413e15:	fmul   DWORD PTR [ecx+0xd7bb88]
  413e1b:	add    al,cl
  413e1d:	(bad)  
  413e1e:	(bad)  
  413e1f:	call   0x3e51f0
  413e24:	mov    edi,0xc0d87198
  413e29:	and    DWORD PTR fs:[eax+edx*4],ebx
  413e2d:	dec    esp
  413e2e:	and    DWORD PTR [eax],ebx
  413e30:	nop
  413e31:	or     DWORD PTR [ebx-0x4e659d32],ecx
  413e37:	nop
  413e38:	arpl   WORD PTR [edx],si
  413e3a:	mov    al,BYTE PTR [ebx+0x0]
	...
  413e4d:	add    BYTE PTR [eax],al
  413e4f:	add    BYTE PTR [esi+0x3a],al
  413e52:	jle    0x413e13
  413e54:	lods   al,BYTE PTR gs:[esi]
  413e56:	jnp    0x413e57
  413e58:	in     eax,dx
  413e59:	xor    DWORD PTR [esi+0x2cd23e4b],eax
  413e5f:	cmp    al,0xf2
  413e61:	xor    BYTE PTR [ecx],al
  413e63:	sub    edx,DWORD PTR [esi+0x16]
  413e66:	stc    
  413e67:	imul   esp,DWORD PTR [ebx-0x4b],0x35a7237d
  413e6e:	add    DWORD PTR [eax],eax
  413e70:	adc    al,bh
  413e72:	xor    BYTE PTR [edx+0x7f5e9a4],cl
  413e78:	pusha  
  413e79:	xor    cl,BYTE PTR [edi+esi*8+0x738e2adf]
  413e80:	jmp    0xea3710af
  413e85:	icebp  
  413e86:	clc    
  413e87:	cmp    ah,BYTE PTR [esi]
  413e89:	into   
  413e8a:	lock je 0x413eb8
  413e8d:	add    al,0xad
  413e8f:	(bad)  
  413e90:	bound  esi,QWORD PTR [edx]
  413e92:	add    DWORD PTR [ebx+0x35e29a5],ecx
  413e98:	pusha  
  413e99:	xor    al,BYTE PTR [eax-0x23cb1141]
  413e9f:	outs   dx,DWORD PTR ds:[esi]
  413ea0:	outs   dx,BYTE PTR ds:[esi]
  413ea1:	(bad)  
  413ea3:	push   ebp
  413ea4:	enter  0x89d4,0xce
  413ea8:	cmp    al,al
  413eaa:	add    BYTE PTR [edx],al
  413eac:	bound  esi,QWORD PTR [ebp+0x19537344]
  413eb2:	xchg   ecx,eax
  413eb3:	or     eax,DWORD PTR [eax]
	...
  413ec5:	add    BYTE PTR [eax],al
  413ec7:	add    BYTE PTR [esi+0x1f8aae2c],ch
  413ecd:	pop    ecx
  413ece:	push   es
  413ecf:	stc    
  413ed0:	and    eax,0x9d789ac
  413ed5:	fimul  DWORD PTR [ebx]
  413ed7:	mov    esp,DWORD PTR [esi]
  413ed9:	xor    bl,BYTE PTR [edi]
  413edb:	sbb    DWORD PTR [ebx+edi*1],ecx
  413ede:	mov    ebp,0x708133d2
  413ee3:	add    al,0x62
  413ee5:	(bad)  [edi-0x3b]
  413ee8:	scas   al,BYTE PTR es:[edi]
  413ee9:	fsub   st,st(7)
  413eeb:	lods   eax,DWORD PTR ds:[esi]
  413eec:	xor    BYTE PTR [edi],ah
  413eee:	jo     0x413f6c
  413ef0:	in     eax,0x3a
  413ef2:	out    0x2b,eax
  413ef4:	xchg   ecx,eax
  413ef5:	test   al,ch
  413ef7:	add    edx,DWORD PTR [ecx+0x5c8aaa1e]
  413efd:	xor    DWORD PTR [ecx],ebx
  413eff:	into   
  413f00:	(bad)  
  413f01:	fldenv [edx+0x47]
  413f04:	lds    ebp,FWORD PTR [esi]
  413f06:	mov    ebp,0x2d4e6204
  413f0b:	sub    al,0xc1
  413f0d:	add    ebp,ecx
  413f0f:	add    ebx,ecx
  413f11:	mov    edi,fs
  413f13:	mov    dl,0x9c
  413f15:	test   DWORD PTR [ebx],ecx
  413f17:	adc    al,0x5e
  413f19:	(bad)  
  413f1b:	mov    bl,dl
  413f1d:	pop    ecx
  413f1e:	call   0x4272a126
  413f23:	enter  0x3a7d,0xfa
  413f27:	inc    ebx
  413f28:	loopne 0x413f68
  413f2a:	call   0x413f35
	...
  413f3f:	add    dh,dl
  413f41:	sbb    DWORD PTR [esi],edx
  413f43:	mov    dh,0x6
  413f45:	sahf   
  413f46:	push   0xe7d4313f
  413f4b:	add    esp,DWORD PTR [eax]
  413f4d:	shl    edi,1
  413f4f:	mov    ah,0xb0
  413f51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f52:	bound  edi,QWORD PTR [ebx+edi*4]
  413f55:	in     eax,0x60
  413f57:	mov    bh,0x81
  413f59:	int    0x8f
  413f5b:	add    DWORD PTR [edx-0x46751827],ecx
  413f61:	cmc    
  413f62:	add    ch,bl
  413f64:	icebp  
  413f65:	dec    esp
  413f66:	inc    ebx
  413f67:	in     eax,0xd1
  413f69:	cmp    dl,BYTE PTR [ebx]
  413f6b:	mov    ebp,0x6a00fa07
  413f70:	dec    ebp
  413f71:	into   
  413f72:	sub    DWORD PTR [ecx],0xffffffd5
  413f75:	shl    BYTE PTR [edx],cl
  413f77:	sub    DWORD PTR [esi+0xc],ecx
  413f7a:	add    cl,ch
  413f7c:	popa   
  413f7d:	retf   0xacb5
  413f80:	cmc    
  413f81:	mov    ds:0xb44cfa55,eax
  413f86:	and    DWORD PTR [eax],0xffffffed
  413f89:	mov    dh,0x89
  413f8b:	jmp    0xd966:0xfd8900f7
  413f92:	add    BYTE PTR [ecx+ecx*1+0xb00ff89],bl
  413f99:	sbb    edi,ebp
  413f9b:	push   es
  413f9c:	call   0xdd38c2ca
  413fa1:	mov    cs,WORD PTR [ecx+0x2e]
	...
  413fb7:	add    dh,dl
  413fb9:	xchg   ebp,eax
  413fba:	and    al,0xd1
  413fbc:	mov    esi,0xdd237efb
  413fc1:	fwait
  413fc2:	add    al,0x6a
  413fc4:	jmp    0x413f9b
  413fc6:	adc    BYTE PTR [ecx+eax*4+0x4e],bl
  413fca:	or     DWORD PTR [ecx+ebp*1-0x3a],esp
  413fce:	sbb    DWORD PTR [ecx+eiz*4-0x2b],esi
  413fd2:	push   0xffffffe5
  413fd4:	mov    cl,0x4c
  413fd6:	inc    ebx
  413fd7:	shl    DWORD PTR [ecx+0x4c15133a],1
  413fdd:	stc    
  413fde:	add    BYTE PTR [edx-0x5e],ch
  413fe1:	in     al,0x83
  413fe3:	test   eax,0x2d89b7f2
  413fe8:	inc    edx
  413fe9:	rol    DWORD PTR [eax+0x6a],1
  413fec:	mov    ds:0x870087e0,eax
  413ff1:	cmp    DWORD PTR ds:0xcc51453b,edx
  413ff7:	mov    ecx,DWORD PTR [edi+0x39]
  413ffa:	or     eax,0x1a05fd8b
  413fff:	ss or  bl,ch
  414002:	or     eax,0x633ebeb7
  414007:	test   DWORD PTR [edx+0x49],eax
  41400a:	push   eax
  41400b:	mov    ecx,DWORD PTR [eax]
  41400d:	push   edi
  41400e:	cmp    BYTE PTR [eax+0xdbfd],cl
  414014:	mov    dh,0x76
  414016:	mov    al,0x2
  414018:	mov    ds:0xffdbcf,eax
	...
  41402d:	add    BYTE PTR [eax],al
  41402f:	add    BYTE PTR [edx+eiz*2+0x497585ed],cl
  414036:	cmp    BYTE PTR [ecx],bh
  414038:	lods   eax,DWORD PTR ds:[esi]
  414039:	dec    esi
  41403a:	sub    ecx,DWORD PTR [ebp+0x7b82390d]
  414040:	(bad)  
  414041:	xor    BYTE PTR [ebp+ebx*1+0x30],dh
  414045:	fiadd  DWORD PTR [ebx-0x7dbac840]
  41404b:	rol    bl,0x82
  41404e:	or     eax,0x1b783e50
  414053:	push   eax
  414054:	jl     0x41409d
  414056:	push   ecx
  414057:	push   ss
  414058:	cmp    ebx,ebp
  41405a:	add    esp,0x74bdb77f
  414060:	jb     0x4140d7
  414062:	add    bl,0x73
  414065:	adc    DWORD PTR [ebx],edi
  414067:	jl     0x41403f
  414069:	popa   
  41406a:	retf   
  41406b:	call   0x416829
  414070:	pop    ecx
  414071:	pushf  
  414072:	pop    esi
  414073:	pop    esi
  414074:	sahf   
  414075:	jb     0x4140cf
  414077:	ret    0xdc47
  41407a:	mov    esi,ecx
  41407c:	bound  ebx,QWORD PTR [edx+0x52]
  41407f:	xor    al,0x63
  414081:	inc    edx
  414082:	push   ecx
  414083:	add    BYTE PTR [ecx+0x4d],cl
  414086:	sub    bl,0x7a
  414089:	lods   al,BYTE PTR ds:[esi]
  41408a:	inc    DWORD PTR [ebx]
  41408c:	jb     0x414048
  41408e:	std    
  41408f:	and    ebp,eax
  414091:	add    eax,DWORD PTR [ebx]
  414093:	push   esi
	...
  4140a8:	jmp    0xbf4f:0x5d04dd85
  4140af:	add    eax,0x98fc1cad
  4140b4:	jmp    0xfc37fb41
  4140b9:	stos   BYTE PTR es:[edi],al
  4140ba:	lea    esp,[ebx]
  4140bc:	ss push ecx
  4140be:	xchg   BYTE PTR [ebx+0x3e],dl
  4140c1:	push   ss
  4140c2:	mov    dh,BYTE PTR [ebx-0x7a]
  4140c5:	pop    ss
  4140c6:	or     ebp,eax
  4140c8:	jmp    0xdd7d:0xdf0ddd85
  4140cf:	or     esi,DWORD PTR [edx]
  4140d1:	adc    ecx,DWORD PTR [edx-0x19]
  4140d4:	push   ebx
  4140d5:	(bad)  
  4140d6:	add    al,BYTE PTR [eax]
  4140d8:	fiadd  WORD PTR [ecx]
  4140da:	add    eax,0x1418884
  4140df:	add    BYTE PTR [ecx],dl
  4140e1:	push   ebp
  4140e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140e3:	(bad)  
  4140e6:	cmp    BYTE PTR [esi+eax*1+0x2688ece6],cl
  4140ed:	fdivrp st(4),st
  4140ef:	mov    DWORD PTR [edi],edx
  4140f1:	inc    edx
  4140f2:	jnp    0x4140c4
  4140f4:	loop   0x414119
  4140f6:	icebp  
  4140f7:	mov    edi,0xc181428b
  4140fc:	add    eax,edx
  4140fe:	inc    ebx
  4140ff:	pusha  
  414100:	sub    BYTE PTR [ecx-0x68],dl
  414103:	and    edx,esp
  414105:	push   0xffffff8e
  414107:	jbe    0x41416f
  414109:	fdecstp 
  41410b:	pop    ecx
	...
  414120:	and    BYTE PTR [eax],bh
  414122:	stos   BYTE PTR es:[edi],al
  414123:	jl     0x414196
  414125:	icebp  
  414126:	(bad)  
  414127:	enter  0xc981,0x67
  41412b:	or     eax,0x2f3aebb
  414130:	hlt    
  414131:	sbb    bh,BYTE PTR [ebp+0x47]
  414134:	fucom  st(5)
  414136:	scas   eax,DWORD PTR es:[edi]
  414137:	jle    0x4140da
  414139:	std    
  41413a:	xlat   BYTE PTR ds:[ebx]
  41413b:	enter  0x609d,0xab
  41413f:	out    0x5d,eax
  414141:	lods   al,BYTE PTR ds:[esi]
  414142:	sub    BYTE PTR [ebx],al
  414144:	int3   
  414145:	sbb    al,cl
  414147:	or     DWORD PTR [esi+ebx*8],esp
  41414a:	psrad  mm6,QWORD PTR [eax]
  41414d:	or     esi,DWORD PTR [edx+0x4a]
  414150:	mov    gs,WORD PTR [esi]
  414152:	xor    al,0x12
  414154:	and    bh,ah
  414156:	jge    0x414197
  414158:	pusha  
  414159:	es fs ss dec esi
  41415d:	loop   0x41418d
  41415f:	add    eax,0x3e7ac50
  414164:	loop   0x414180
  414166:	jmp    0x25a35989
  41416b:	sahf   
  41416c:	pop    esi
  41416d:	jmp    0x3664:0x2fb4b219
  414174:	cs loop 0x4141a5
  414177:	add    eax,0x371c000
  41417c:	loop   0x414198
  41417e:	jmp    0xe8:0x2362201e
	...
  414195:	add    BYTE PTR [eax],al
  414197:	add    BYTE PTR [ecx-0x3d],cl
  41419a:	jmp    0x9cff:0x541be1ad
  4141a1:	fcom   DWORD PTR [eax-0x5e]
  4141a4:	pop    es
  4141a5:	(bad)  
  4141a6:	addr16 inc esi
  4141a8:	popa   
  4141a9:	inc    edx
  4141aa:	add    BYTE PTR [esp+edi*8],al
  4141ad:	fidiv  DWORD PTR [ecx]
  4141af:	fwait
  4141b0:	adc    ebp,DWORD PTR [edi]
  4141b2:	imul   BYTE PTR [edi+edx*4-0x53]
  4141b6:	or     BYTE PTR [esi+0xe72c65e],ah
  4141bc:	inc    dx
  4141be:	adc    edx,DWORD PTR [edi-0x17c305e3]
  4141c4:	retf   0xc5dd
  4141c7:	call   0xe9b5fecf
  4141cc:	jl     0x4141aa
  4141ce:	(bad)
  4141d1:	(bad)  
  4141d2:	imul   ebp,ecx,0xffffffef
  4141d5:	ficomp DWORD PTR [eax-0x15]
  4141d8:	cmp    edi,esp
  4141da:	mov    dh,0x22
  4141dc:	mov    dl,0x5f
  4141de:	shl    DWORD PTR [edi],0x5d
  4141e1:	lock add BYTE PTR [edx+0x258193b0],ah
  4141e8:	or     DWORD PTR [eax],ebx
  4141ea:	add    al,0xe9
  4141ec:	in     al,0x41
  4141ee:	dec    esp
  4141ef:	pop    esp
  4141f0:	aad    0xf9
  4141f2:	push   ecx
  4141f3:	mov    esp,0x23898f0b
  4141f8:	imul   ebp,ebp,0xe820
	...
  41420e:	add    BYTE PTR [eax],al
  414210:	popa   
  414211:	pop    ebp
  414212:	rcl    BYTE PTR [ebp-0x1126924b],0x61
  414219:	fldenv [esi-0x40]
  41421c:	popf   
  41421d:	stc    
  41421e:	adc    BYTE PTR [edx-0x64],bh
  414221:	fs inc esp
  414223:	lds    edx,FWORD PTR [ecx+0x71fcfda5]
  414229:	enter  0xe940,0x69
  41422d:	fisubr DWORD PTR [esi]
  41422f:	call   0x1b19a495
  414234:	pop    eax
  414235:	jne    0x414213
  414237:	add    BYTE PTR [esi-0x27],bh
  41423a:	add    BYTE PTR [ebp-0x2],dl
  41423d:	(bad)  
  41423e:	je     0x414248
  414240:	adc    al,0x2d
  414242:	jmp    0xea1ecd59
  414247:	push   cs
  414248:	mov    edx,cs
  41424a:	adc    al,0x84
  41424c:	dec    ecx
  41424d:	sbb    ebp,edi
  41424f:	cmp    al,0x49
  414251:	fadd   DWORD PTR [eax]
  414253:	add    BYTE PTR [esi+0x7],cl
  414256:	xor    dl,dl
  414258:	mov    ds:0x3b0002d5,al
  41425d:	mov    dh,0xc2
  41425f:	neg    DWORD PTR [edx+0x2b2449b4]
  414265:	outs   dx,DWORD PTR ds:[esi]
  414266:	mov    WORD PTR [edi+ebx*2+0x31],ss
  41426a:	in     eax,0x6a
  41426c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41426d:	retf   0x43fe
  414270:	(bad)  
  414271:	popf   
  414272:	jno    0x414294
	...
  414288:	xor    BYTE PTR [ecx+0x21],0x64
  41428c:	jbe    0x4142a7
  41428e:	and    DWORD PTR [eax],esp
  414290:	xchg   ebx,eax
  414291:	jb     0x414236
  414293:	add    bl,cl
  414295:	pop    ebp
  414296:	in     eax,0x0
  414298:	cmova  eax,DWORD PTR [ebp+0x48]
  41429c:	out    dx,eax
  41429d:	ss inc ebx
  41429f:	mov    eax,0xde73
  4142a4:	nop
  4142a5:	enter  0xa76f,0x99
  4142a9:	cwde   
  4142aa:	pop    esi
  4142ab:	pop    esi
  4142ac:	push   es
  4142ad:	xchg   BYTE PTR [edx+0x59ef7c4],al
  4142b3:	add    BYTE PTR [ebx-0x28],bl
  4142b6:	jmp    0xf0f730ad
  4142bb:	add    DWORD PTR ds:0x767400e1,0xffffffc9
  4142c2:	jae    0x4142c8
  4142c4:	bound  ecx,QWORD PTR [ebx]
  4142c6:	idiv   bl
  4142c8:	push   eax
  4142c9:	add    al,BYTE PTR ds:0x1460483
  4142cf:	and    DWORD PTR [edx+eax*2],0xffffff95
  4142d3:	or     bl,BYTE PTR [ebp+0x34]
  4142d6:	adc    BYTE PTR [esi+edi*8],dl
  4142d9:	xadd   edi,edi
  4142dc:	loopne 0x414301
  4142de:	add    DWORD PTR [esi+0x21],ebx
  4142e1:	retf   0x300
  4142e4:	bound  eax,QWORD PTR [edx-0x67]
  4142e7:	addr16 push 0xfffffffe
  4142ea:	add    al,0xe8
	...
  414300:	mov    bl,0x45
  414302:	add    al,0x0
  414304:	fstp   DWORD PTR [eax-0x2c]
  414307:	(bad)  
  414309:	int3   
  41430a:	xor    BYTE PTR [eax+0x19b62b7],cl
  414310:	mov    cl,0x6f
  414312:	jle    0x414358
  414314:	es jb  0x414327
  414317:	je     0x414383
  414319:	mov    edx,esi
  41431b:	jg     0x4142a0
  41431d:	jle    0x414320
  41431f:	push   0xffffffed
  414321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414322:	(bad)  
  414323:	pop    es
  414324:	push   ecx
  414325:	add    BYTE PTR [ecx],0xff
  414328:	mov    ah,0xc4
  41432a:	inc    ecx
  41432b:	je     0x41438a
  41432d:	xor    BYTE PTR [ecx-0x18],al
  414330:	rol    BYTE PTR [ecx+0x1],cl
  414333:	add    BYTE PTR [eax],bh
  414335:	inc    eax
  414336:	mov    ah,0x52
  414338:	out    dx,eax
  414339:	test   BYTE PTR [ecx],ah
  41433b:	dec    edi
  41433c:	mov    ch,0x4c
  41433e:	stc    
  41433f:	(bad)  
  414340:	ja     0x414308
  414342:	mov    ds:0x10486243,al
  414347:	(bad)  
  414348:	mov    ah,0xc4
  41434a:	inc    ecx
  41434b:	jae    0x4142cf
  41434d:	pop    ecx
  41434e:	aad    0x7
  414350:	(bad)  
  414351:	(bad)  
  414353:	cdq    
  414354:	pop    ebp
  414355:	xor    al,0x14
  414357:	mov    WORD PTR [edi],cs
  414359:	popf   
  41435a:	out    0xe,eax
  41435c:	dec    esi
  41435d:	mov    ebp,0x5e6dc3f9
  414362:	mov    bh,0x7d
	...
  414378:	out    dx,al
  414379:	loopne 0x4143df
  41437b:	push   ss
  41437c:	rcr    DWORD PTR ds:0x33550f71,1
  414382:	out    0xd2,eax
  414384:	sub    BYTE PTR [edi-0x62c2c48e],dl
  41438a:	int3   
  41438b:	add    al,0x62
  41438d:	popa   
  41438e:	in     eax,dx
  41438f:	inc    esi
  414390:	lahf   
  414391:	fst    st(7)
  414393:	sti    
  414394:	sub    eax,0x59c6ae33
  414399:	(bad)  
  41439a:	out    0x3,eax
  41439c:	bound  esp,QWORD PTR [ebp+eiz*1-0xc]
  4143a0:	std    
  4143a1:	loop   0x4143d6
  4143a3:	add    eax,0x2fac5e62
  4143a8:	ficomp DWORD PTR [ebx+0x39a67b1b]
  4143ae:	pusha  
  4143af:	(bad)  
  4143b0:	xor    eax,0xde80b88b
  4143b5:	cmp    eax,DWORD PTR [ebx+0xf]
  4143b8:	in     al,0x41
  4143ba:	mov    al,ds:0x9032ddb1
  4143bf:	jp     0x41435e
  4143c1:	inc    ecx
  4143c2:	loop   0x41437b
  4143c4:	int    0x32
  4143c6:	pusha  
  4143c7:	push   ds
  4143c8:	(bad)  
  4143c9:	(bad)  
  4143cb:	and    dh,0x3b
  4143ce:	adc    ecx,DWORD PTR [edi]
  4143d0:	mov    ah,0x1b
  4143d2:	out    0x3,eax
  4143d4:	and    ah,BYTE PTR [eax+0x5c9c0c7c]
  4143da:	adc    ecx,DWORD PTR [esi]
	...
  4143f0:	pushf  
  4143f1:	xor    al,BYTE PTR [eax]
  4143f3:	in     eax,dx
  4143f4:	popa   
  4143f5:	fld    DWORD PTR [eax]
  4143f7:	xor    DWORD PTR [ecx-0x3016ff26],0x6fb58b65
  414401:	xor    edi,ebp
  414403:	shl    edx,0xdd
  414406:	(bad)  
  414407:	call   0xea3e01ec
  41440c:	push   esp
  41440d:	stos   DWORD PTR es:[edi],eax
  41440e:	or     BYTE PTR [ebx+0x66],dl
  414411:	xor    dh,BYTE PTR [ebp-0x13]
  414414:	fs int 0x58
  414417:	xlat   BYTE PTR ds:[ebx]
  414418:	and    DWORD PTR [edx],esi
  41441a:	sub    BYTE PTR [ebp-0xecf45bb],0x61
  414421:	fst    DWORD PTR [esi-0x6a]
  414424:	int3   
  414425:	aad    0xfd
  414427:	hlt    
  414428:	icebp  
  414429:	retf   
  41442a:	inc    eax
  41442b:	jmp    0x6a4d5a10
  414430:	and    ch,BYTE PTR [esi]
  414432:	std    
  414433:	adc    BYTE PTR [ecx],0xe7
  414436:	shr    BYTE PTR [ecx],0xa1
  414439:	pop    edi
  41443a:	arpl   WORD PTR [ecx+0x33],dx
  41443d:	jno    0x8974b1ef
  414443:	fdiv   st(1),st
  414445:	pop    esi
  414446:	into   
  414447:	inc    ecx
  414448:	loop   0x414431
  41444a:	(bad)  
  41444b:	call   0x67295bbb
  414450:	gs (bad) 
  414452:	add    BYTE PTR [ebx],ch
	...
  414468:	pop    ebp
  414469:	fst    DWORD PTR [ebx+0x62]
  41446c:	ins    DWORD PTR es:[edi],dx
  41446d:	pop    ecx
  41446e:	in     al,dx
  41446f:	gs pop edx
  414471:	fld    DWORD PTR [eax]
  414473:	mov    bh,0xf4
  414475:	pop    esi
  414476:	mul    DWORD PTR [edx+eiz*8-0x6b]
  41447a:	cli    
  41447b:	push   cs
  41447c:	pop    esp
  41447d:	cmp    ch,BYTE PTR [eax+eax*1]
  414480:	xor    ch,bl
  414482:	add    BYTE PTR [ebx-0x83daa],cl
  414488:	mov    WORD PTR [esi-0x47],cs
  41448b:	add    eax,0x858bd57b
  414490:	aaa    
  414491:	(bad)  
  414493:	call   DWORD PTR [ecx]
  414495:	fst    QWORD PTR [eax-0x1]
  414498:	jbe    0x414517
  41449a:	adc    eax,DWORD PTR [eax+0x7b]
  41449d:	pop    eax
  41449e:	ror    DWORD PTR [esi+esi*8],0xe3
  4144a2:	jno    0x4144a6
  4144a4:	rol    BYTE PTR [esi],cl
  4144a6:	xor    al,al
  4144a8:	mov    bh,0x5e
  4144ab:	movzx  edx,WORD PTR [ebp+0x4df8c95b]
  4144b2:	and    eax,0x68dd4b01
  4144b7:	pop    eax
  4144b8:	inc    ebx
  4144b9:	sbb    ebp,edi
  4144bb:	out    0xd7,eax
  4144bd:	fiadd  DWORD PTR [ecx]
  4144bf:	add    BYTE PTR [edx+0x6683d570],dh
  4144c5:	cmc    
  4144c6:	std    
  4144c7:	mov    WORD PTR [esi-0xf],es
  4144ca:	dec    ebp
  4144cb:	inc    DWORD PTR [eax]
	...
  4144dd:	add    BYTE PTR [eax],al
  4144df:	add    BYTE PTR [esi],dh
  4144e1:	leave  
  4144e2:	cmovo  edi,ebx
  4144e5:	ins    BYTE PTR es:[edi],dx
  4144e6:	(bad)  
  4144e7:	adc    eax,0x3d2a27
  4144ec:	cmp    ch,0x84
  4144ef:	fisttp DWORD PTR [ecx+ebx*2]
  4144f2:	adc    eax,DWORD PTR [ecx]
  4144f4:	sti    
  4144f5:	fdiv   QWORD PTR [ecx]
  4144f7:	mul    BYTE PTR [edx+0x48]
  4144fa:	sar    DWORD PTR [esi-0x2f],1
  4144fd:	mov    cl,0x39
  4144ff:	mov    bl,0x46
  414501:	fidiv  WORD PTR [ecx+0x28]
  414504:	icebp  
  414505:	fisubr DWORD PTR [eax-0x40]
  414508:	xor    edx,DWORD PTR ds:0xc76256fd
  41450e:	cmc    
  41450f:	mov    bh,0x51
  414511:	add    BYTE PTR [ecx],0x85
  414514:	mov    ds:0x2d8cf3ad,al
  414519:	ss jle 0x414570
  41451c:	mov    dh,0xda
  41451e:	push   ebx
  41451f:	add    al,0x62
  414521:	inc    edx
  414522:	xchg   BYTE PTR [edi+0x44783f0f],bh
  414528:	sahf   
  414529:	mov    ch,0x41
  41452b:	je     0x414597
  41452d:	add    al,cl
  41452f:	je     0x4144c7
  414531:	sahf   
  414532:	aaa    
  414533:	jmp    0x6fb1:0xdfc6a961
  41453a:	test   BYTE PTR [ebx],0x71
  41453d:	add    al,BYTE PTR ds:0x122cf83
  414543:	sldt   WORD PTR [eax]
	...
  414556:	add    BYTE PTR [eax],al
  414558:	fidivr WORD PTR [ebp+0x1]
  41455b:	add    BYTE PTR [edx-0x3d],ah
  41455e:	mov    ds,edi
  414560:	xor    eax,0x62b98537
  414565:	inc    edx
  414566:	add    DWORD PTR [edi+0x11262],edi
  41456c:	mov    ch,0xcc
  41456e:	add    al,0xff
  414570:	dec    edi
  414571:	sub    bl,BYTE PTR [ebx-0x9409dbd]
  414577:	arpl   WORD PTR [eax-0x7e],si
  41457a:	add    DWORD PTR [ebx-0x2469570e],ecx
  414580:	fisttp WORD PTR [edi+0x41cb83fc]
  414586:	add    DWORD PTR [eax],eax
  414588:	lea    ecx,[ecx+eax*1]
  41458b:	push   0x62
  41458d:	or     al,0x5
  41458f:	pop    ebx
  414590:	xor    edi,esp
  414592:	xchg   esi,eax
  414593:	(bad)  
  414595:	add    al,0x9
  414597:	adc    DWORD PTR [edx],esp
  414599:	(bad)  
  41459b:	jp     0x4145c3
  41459d:	or     DWORD PTR [ebx+eax*2+0x31],esp
  4145a1:	cdq    
  4145a2:	push   0xffffffa6
  4145a4:	test   eax,0xfb3b6d8
  4145a9:	xor    ah,bl
  4145ab:	mov    bl,0x77
  4145ad:	cdq    
  4145ae:	out    0x80,eax
  4145b0:	mov    eax,ds:0xa56e60dc
  4145b5:	cs out dx,al
  4145b7:	or     ebp,DWORD PTR [edi+eax*4]
  4145ba:	je     0x414635
	...
  4145d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145d1:	fimul  WORD PTR cs:[ebx]
  4145d4:	jge    0x414570
  4145d6:	in     al,dx
  4145d7:	add    al,0x62
  4145d9:	pop    esp
  4145da:	sbb    al,0x8
  4145dc:	fs inc ebx
  4145de:	cmc    
  4145df:	(bad)  
  4145e0:	sbb    eax,0xbe7faa9a
  4145e5:	inc    ecx
  4145e6:	push   0xffffffb9
  4145e8:	dec    ecx
  4145e9:	das    
  4145ea:	bound  edx,QWORD PTR [ecx+0x341c2f29]
  4145f0:	cmp    al,0xc5
  4145f2:	fwait
  4145f3:	div    BYTE PTR [ebp-0x27]
  4145f6:	dec    edi
  4145f7:	aam    0x65
  4145f9:	(bad)  
  4145fb:	int3   
  4145fc:	lahf   
  4145fd:	aad    0xfb
  4145ff:	stc    
  414600:	call   0x27c0e589
  414605:	inc    edx
  414606:	pop    ss
  414607:	pop    es
  414608:	(bad)  
  414609:	fldenv [ecx+0x2c]
  41460c:	clc    
  41460d:	leave  
  41460e:	mov    bh,0xb1
  414610:	cld    
  414611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414612:	aas    
  414613:	or     ecx,DWORD PTR [esi-0x77]
  414616:	std    
  414617:	ret    
  414618:	in     eax,dx
  414619:	pop    ebx
  41461a:	and    edi,eax
  41461c:	mov    al,0xd8
  41461e:	jb     0x41465a
  414620:	(bad)
  414623:	add    al,0x62
  414625:	push   ebp
  414626:	add    BYTE PTR [edx],dl
  414628:	repnz (bad) 
  41462b:	mov    ah,0x81
  41462d:	das    
  41462e:	adc    ecx,DWORD PTR [ebp-0x4c]
  414631:	out    dx,al
  414632:	add    BYTE PTR [ecx+0x0],bl
	...
  414645:	add    BYTE PTR [eax],al
  414647:	add    BYTE PTR [edi+0x42],bl
  41464a:	add    bl,bl
  41464c:	and    DWORD PTR [esi],esi
  41464e:	lock jmp 0x4146ad
  414651:	fld    st(1)
  414653:	xchg   esi,eax
  414654:	in     eax,0xa2
  414656:	test   DWORD PTR [edi],ebx
  414658:	cdq    
  414659:	stc    
  41465a:	call   0x48fb932
  41465f:	cmp    bh,0x23
  414662:	lea    esi,[edx-0x6734b4ff]
  414668:	jp     0x414600
  41466a:	push   esp
  41466b:	lods   eax,DWORD PTR ds:[esi]
  41466c:	imul   ecx,DWORD PTR [edi+0x77dfd380],0x7b4bc336
  414676:	add    eax,DWORD PTR [ebx]
  414678:	jno    0x414675
  41467a:	jp     0x41467b
  41467c:	test   DWORD PTR [edi],eax
  41467e:	cmc    
  41467f:	jo     0x414647
  414681:	push   edx
  414682:	add    al,0x37
  414684:	push   0x39e7728f
  414689:	gs rol cl,1
  41468c:	nop
  41468d:	dec    esi
  41468e:	lea    ecx,ds:0x37c4f591
  414694:	outs   dx,DWORD PTR ds:[esi]
  414695:	sti    
  414696:	cld    
  414697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414698:	fadd   QWORD PTR [eax-0x707f5392]
  41469e:	comiss xmm0,DWORD PTR [edx+0xe]
  4146a2:	add    al,0xd5
  4146a4:	out    dx,eax
  4146a5:	inc    ecx
  4146a6:	and    bh,bl
  4146a8:	or     bl,dl
  4146aa:	push   esp
  4146ab:	adc    eax,DWORD PTR [eax]
	...
  4146bd:	add    BYTE PTR [eax],al
  4146bf:	add    BYTE PTR [ecx-0x3],dl
  4146c2:	mov    bh,ch
  4146c4:	add    bh,BYTE PTR [ecx+0x4]
  4146c7:	add    BYTE PTR [ecx+0x42],ah
  4146ca:	shr    cl,cl
  4146cc:	jle    0x414700
  4146ce:	xchg   edx,eax
  4146cf:	fistp  QWORD PTR [edi+eax*8]
  4146d2:	cli    
  4146d3:	inc    eax
  4146d4:	rol    DWORD PTR [ebx+0x5d],1
  4146d7:	jl     0x4146e0
  4146d9:	shl    DWORD PTR [ecx-0x46193277],0x55
  4146e0:	loope  0x41473d
  4146e2:	and    DWORD PTR [eax],esp
  4146e4:	pop    edi
  4146e5:	enter  0x49d,0xf1
  4146e9:	(bad)  
  4146ea:	repnz sti 
  4146ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146ed:	inc    esi
  4146ee:	mov    al,0x44
  4146f0:	rol    DWORD PTR [ebx+0x5d],1
  4146f3:	jp     0x4146a0
  4146f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f6:	cwde   
  4146f7:	pop    eax
  4146f8:	add    eax,0xc208d1fa
  4146fd:	das    
  4146fe:	mov    cl,0x79
  414700:	pop    edi
  414701:	cdq    
  414702:	push   0xe19bc862
  414707:	sbb    al,0xdc
  414709:	xchg   BYTE PTR [ecx+0x7461b11c],al
  41470f:	(bad)  
  414710:	push   cs
  414711:	inc    ebx
  414712:	pop    edx
  414713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414714:	push   eax
  414715:	retf   0xc424
  414718:	push   ds
  414719:	ja     0x414778
  41471b:	add    BYTE PTR [ecx],0x54
  41471e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41471f:	aaa    
  414720:	shr    DWORD PTR [eax+0x328],1
	...
  414736:	add    BYTE PTR [eax],al
  414738:	mov    WORD PTR [esi+0x3df94481],ds
  41473e:	out    dx,eax
  41473f:	add    al,0x21
  414741:	in     eax,dx
  414742:	jp     0x41478b
  414744:	bound  esp,QWORD PTR [ecx+0x76]
  414747:	mov    DWORD PTR ds:0x9ece1e6,ecx
  41474d:	push   es
  41474e:	mov    al,ds:0xa0407e04
  414753:	add    al,0x62
  414755:	enter  0x5f93,0x73
  414759:	fdivr  QWORD PTR ds:0x8d41cd7a
  41475f:	dec    ebx
  414760:	push   0xffffffa3
  414762:	arpl   WORD PTR [ebx+0x47ceb16a],ax
  414768:	mov    al,0x9e
  41476a:	adc    bl,BYTE PTR [edi-0x4b7c071e]
  414770:	fucom  st(4)
  414772:	or     ebp,DWORD PTR [edx+eiz*1]
  414775:	and    al,0x1c
  414777:	out    dx,eax
  414778:	fucomi st,st(6)
  41477a:	(bad)  [eax+0x6c851866]
  414780:	xchg   BYTE PTR [edi+0x5566a173],bh
  414786:	mov    esp,ebx
  414788:	inc    edx
  414789:	mov    esp,0x9d4ac760
  41478e:	push   ebx
  41478f:	lahf   
  414790:	jns    0x41476d
  414792:	pop    edi
  414793:	mov    ch,0x26
  414795:	enter  0x6390,0x5a
  414799:	inc    ebx
  41479a:	dec    esp
  41479b:	add    DWORD PTR [eax],0x0
	...
  4147ae:	add    BYTE PTR [eax],al
  4147b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147b1:	push   ss
  4147b2:	setg   BYTE PTR [edi-0x23a7791b]
  4147b9:	push   0xa1abfd59
  4147be:	mov    BYTE PTR [ebx+ebx*4+0x7f],al
  4147c2:	sub    bl,0xee
  4147c5:	inc    ecx
  4147c6:	add    DWORD PTR [eax],eax
  4147c8:	loope  0x4147a7
  4147ca:	loopne 0x4147cf
  4147cc:	(bad)  
  4147cd:	out    dx,eax
  4147ce:	lods   eax,DWORD PTR ds:[esi]
  4147cf:	push   ebp
  4147d0:	mov    ch,0xc8
  4147d2:	clc    
  4147d3:	mov    WORD PTR [esi+0x2e67d116],ds
  4147d9:	enter  0xffc0,0xc4
  4147dd:	inc    ecx
  4147de:	icebp  
  4147df:	(bad)  
  4147e0:	std    
  4147e1:	fdiv   DWORD PTR [edi-0x249df584]
  4147e7:	fild   WORD PTR [ecx+0x2c]
  4147ea:	cld    
  4147eb:	mov    bl,0x4f
  4147ed:	cdq    
  4147ee:	out    0x84,eax
  4147f0:	mov    eax,ds:0x81bf74dc
  4147f5:	std    
  4147f6:	rol    DWORD PTR [ebx],1
  4147f8:	xor    eax,0x619be7bf
  4147fd:	(bad)  
  4147ff:	sti    
  414800:	jo     0x414812
  414802:	mov    bh,0xc4
  414804:	dec    ebx
  414805:	sub    al,0x70
  414807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414808:	sbb    DWORD PTR [ebp-0x379e11ea],0x28e903a7
  414812:	jo     0x4147a3
	...
  414828:	inc    ecx
  414829:	leave  
  41482a:	adc    DWORD PTR fs:[ecx],edx
  41482d:	int3   
  41482e:	sahf   
  41482f:	popf   
  414830:	test   ecx,eax
  414832:	out    0x9d,eax
  414834:	addr16 and esi,0xfffffff1
  414838:	ins    DWORD PTR es:[edi],dx
  414839:	(bad)  
  41483a:	daa    
  41483b:	add    al,0xdb
  41483d:	xchg   esp,eax
  41483e:	or     esi,eax
  414840:	ficomp WORD PTR [eax]
  414842:	push   esp
  414843:	in     eax,0xee
  414845:	popf   
  414846:	or     esi,esp
  414848:	cmp    eax,0x4c07c2b5
  41484d:	call   0xf5dac1e4
  414852:	xlat   BYTE PTR ds:[ebx]
  414853:	sbb    ebx,DWORD PTR [ebx-0x14f859d2]
  414859:	push   ss
  41485a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41485c:	mov    cs,WORD PTR [esi-0x260ebf98]
  414862:	out    0x3,eax
  414864:	and    DWORD PTR [edi+ecx*1-0x186622c4],eax
  41486b:	cdq    
  41486c:	or     eax,0x26d005e
  414871:	pop    ebx
  414872:	add    cl,ch
  414874:	popa   
  414875:	mov    edi,0x5a59b91e
  41487a:	in     al,dx
  41487b:	pop    esi
  41487c:	gs push edi
  41487e:	(bad)  
  41487f:	std    
  414880:	loop   0x4148ec
  414882:	jae    0x4148a7
  414884:	clc    
  414885:	jmp    0x9944:0xf6a27450
	...
  4148a0:	imul   edi,DWORD PTR [edx-0x4],0xc7e661eb
  4148a7:	cli    
  4148a8:	and    DWORD PTR [ecx+0x4c],esp
  4148ab:	int    0x99
  4148ad:	push   edi
  4148ae:	(bad)  
  4148af:	in     eax,dx
  4148b0:	sub    ch,BYTE PTR [esi+0x7f08c924]
  4148b6:	test   eax,0x1cf6a25c
  4148bb:	cdq    
  4148bc:	sbb    dl,BYTE PTR [esi-0x762e42dc]
  4148c2:	dec    edi
  4148c3:	add    DWORD PTR [ebp-0x567b079],0x55
  4148ca:	and    al,0x8d
  4148cc:	popa   
  4148cd:	fld    DWORD PTR [eax]
  4148cf:	cmp    DWORD PTR [ebx-0x41f2bbed],esi
  4148d5:	xchg   esi,eax
  4148d6:	add    cl,ch
  4148d8:	popa   
  4148d9:	sub    dl,BYTE PTR [ebx]
  4148db:	jmp    0x64423330
  4148e0:	mov    eax,ds:0x5d3284db
  4148e5:	sub    edi,ebp
  4148e7:	scas   al,BYTE PTR es:[edi]
  4148e8:	in     eax,dx
  4148e9:	cmc    
  4148ea:	sbb    al,0x74
  4148ec:	in     eax,dx
  4148ed:	cmc    
  4148ee:	adc    al,0x91
  4148f0:	pop    eax
  4148f1:	xor    ch,bh
  4148f3:	xchg   esi,eax
  4148f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148f5:	push   0x74
  4148f7:	fisub  WORD PTR [esi+eiz*4+0x24]
  4148fb:	add    BYTE PTR [ebx],ch
  4148fd:	rcl    DWORD PTR [eax+edx*1],cl
  414900:	sub    BYTE PTR [esi],dl
  414902:	std    
  414903:	add    BYTE PTR [eax],0x0
	...
  414916:	add    BYTE PTR [eax],al
  414918:	xchg   ebx,eax
  414919:	shl    DWORD PTR [edx+eax*1-0x47],cl
  41491d:	(bad)  
  41491e:	(bad)  
  41491f:	je     0x414988
  414921:	inc    ecx
  414922:	mov    dh,BYTE PTR ds:0x3d27e7
  414928:	mov    esp,?
  41492a:	(bad)  
  41492b:	je     0x414994
  41492d:	xor    eax,0x6a32d6fe
  414932:	(bad)  
  414933:	dec    DWORD PTR [ebp+edx*2-0x2a46eb17]
  41493a:	add    BYTE PTR [ebx-0x2a],dl
  41493d:	jnp    0x414995
  41493f:	xor    esp,DWORD PTR [eax]
  414941:	test   DWORD PTR [si-0x59],edx
  414945:	ds mov ch,cl
  414948:	inc    eax
  414949:	(bad)  
  41494a:	in     eax,0x8f
  41494c:	jo     0x414923
  41494e:	add    BYTE PTR [ebp-0x777edcb5],al
  414954:	jnp    0x41492b
  414956:	add    bh,dh
  414958:	mov    ebx,0x8bfffd29
  41495d:	and    eax,0x2cf01171
  414962:	cmp    cl,0x50
  414965:	inc    edi
  414966:	pop    es
  414967:	test   DWORD PTR [ebp+0x3d3b0148],eax
  41496d:	push   edi
  41496e:	dec    DWORD PTR [edx-0x327591e5]
  414974:	xor    ecx,DWORD PTR [ecx-0x6]
  414977:	add    DWORD PTR [ebx],edi
  414979:	test   al,0xbd
  41497b:	jne    0x41497d
	...
  41498d:	add    BYTE PTR [eax],al
  41498f:	add    cl,dl
  414991:	test   al,0xf3
  414993:	je     0x414932
  414995:	adc    eax,0x58342459
  41499a:	add    al,0x83
  41499c:	bound  edx,QWORD PTR [eax]
  41499e:	fdiv   DWORD PTR [ebx-0x4f]
  4149a1:	mov    ebx,0xabac0b86
  4149a6:	xor    eax,0x15c1ae7
  4149ab:	add    cl,bl
  4149ad:	mov    ds:0xf476f57d,al
  4149b2:	jne    0x4149f7
  4149b4:	fidiv  DWORD PTR ds:[ecx+edi*4-0x3b558e]
  4149bc:	std    
  4149bd:	mov    esp,0xbeddfe1f
  4149c2:	inc    esp
  4149c3:	jae    0x414a43
  4149c5:	inc    edi
  4149c6:	js     0x41499d
  4149c8:	fbstp  TBYTE PTR [esi-0x23]
  4149cb:	sbb    edi,DWORD PTR [edx-0x4201e085]
  4149d1:	mov    esi,0xad4e7344
  4149d6:	mov    eax,0xccca4a23
  4149db:	std    
  4149dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149dd:	iret   
  4149de:	jne    0x414a2b
  4149e0:	inc    esi
  4149e1:	sub    dh,BYTE PTR [edi-0x29]
  4149e4:	mov    al,ch
  4149e6:	pop    ebp
  4149e7:	add    BYTE PTR [edx-0x55],ah
  4149ea:	ss out 0x81,eax
  4149ed:	sbb    eax,0xf3e80002
  4149f2:	pop    ss
  4149f3:	add    DWORD PTR [eax],eax
	...
  414a05:	add    BYTE PTR [eax],al
  414a07:	add    BYTE PTR [eax],dh
  414a09:	jb     0x4149af
  414a0b:	pop    ebp
  414a0c:	setnp  BYTE PTR [ecx+0x1344ec3]
  414a13:	add    BYTE PTR [ecx],ah
  414a15:	mov    cl,0x15
  414a17:	repz arpl WORD PTR [edx],si
  414a1a:	add    DWORD PTR [ebx-0x49],edx
  414a1d:	shr    BYTE PTR [ebx+0xfbb4b8a],1
  414a23:	cmp    BYTE PTR [ebp+0x6207f231],0xd9
  414a2a:	out    0xf4,eax
  414a2c:	out    0x58,al
  414a2e:	call   0xd7a5ac36
  414a33:	sti    
  414a34:	sbb    eax,0xd5d13a28
  414a39:	mov    BYTE PTR ds:0xd5817605,bl
  414a3f:	ret    
  414a40:	add    eax,0x9f7adcb2
  414a45:	frstor [edx-0x44]
  414a48:	push   0xffffff83
  414a4a:	jo     0x414a09
  414a4c:	pop    ecx
  414a4d:	mov    ebp,DWORD PTR [esp+edi*4+0x56]
  414a51:	mov    DWORD PTR [ebp+esi*4+0x6d],esp
  414a55:	xor    DWORD PTR [ebp+0x1d],ecx
  414a58:	aam    0x27
  414a5a:	jb     0x414a18
  414a5c:	xchg   esp,eax
  414a5d:	pop    esp
  414a5e:	dec    ebx
  414a5f:	neg    edx
  414a61:	sahf   
  414a62:	repz js 0x414a89
  414a65:	in     al,0xc1
  414a67:	(bad)  
  414a68:	sbb    edx,DWORD PTR [edx-0x53]
  414a6b:	ret    
	...
  414a80:	adc    edx,DWORD PTR [esi-0x5a]
  414a83:	mov    esp,0xb7a55615
  414a88:	test   DWORD PTR [edi],eax
  414a8a:	add    eax,0x6e539404
  414a8f:	inc    esp
  414a90:	lea    esp,[edi]
  414a92:	out    0x78,eax
  414a94:	ss mov ebp,ebx
  414a97:	ret    
  414a98:	jge    0x414aea
  414a9a:	gs aas 
  414a9c:	jne    0x414ac5
  414a9e:	out    0x6d,eax
  414aa0:	push   edx
  414aa1:	push   esi
  414aa2:	data16 (bad) 
  414aa4:	(bad)  
  414aa5:	(bad)  
  414aa7:	push   ebx
  414aa8:	jmp    0x6245ea0c
  414aad:	fst    DWORD PTR [edi]
  414aaf:	add    esi,DWORD PTR [esi]
  414ab1:	pop    ebx
  414ab2:	mov    ds:0x5ed910,eax
  414ab7:	call   0x265c:0x4100d966
  414abe:	std    
  414abf:	jmp    0xc1c79d55
  414ac4:	pop    esi
  414ac5:	fld    DWORD PTR [eax]
  414ac7:	cmp    DWORD PTR [ecx+0xd],esp
  414aca:	mov    edx,0xd95ee5
  414acf:	sbb    esi,ebx
  414ad1:	pop    esp
  414ad2:	shr    eax,cl
  414ad4:	popa   
  414ad5:	fst    DWORD PTR [eax+0x64]
  414ad8:	rol    BYTE PTR ds:0x3161e8ff,1
  414ade:	mov    DWORD PTR [edi+0x61],ecx
  414ae1:	daa    
  414ae2:	sub    DWORD PTR [ecx],0x0
	...
  414af5:	add    BYTE PTR [eax],al
  414af7:	add    BYTE PTR [ecx+0x5a],dl
  414afa:	fsub   st(1),st
  414afc:	popa   
  414afd:	fldcw  WORD PTR [edx-0x18]
  414b00:	repnz xchg ebp,eax
  414b02:	and    al,0xe1
  414b04:	mov    ecx,0x61e94ca2
  414b09:	push   edx
  414b0a:	dec    esp
  414b0b:	or     eax,0x4fa6315a
  414b10:	pop    esi
  414b11:	fld    DWORD PTR [ecx+ebp*1-0x1652a2af]
  414b18:	popa   
  414b19:	(bad)  [ebx-0xe0b59b]
  414b1f:	call   0x1df9d85
  414b24:	fld    DWORD PTR gs:[eax]
  414b27:	adc    DWORD PTR [esi-0x150902c2],ebp
  414b2d:	sbb    DWORD PTR ds:0xd9db61,ecx
  414b33:	jmp    0xe9412831
  414b38:	popa   
  414b39:	mov    BYTE PTR [eax+0x64],dl
  414b3c:	in     eax,0xfc
  414b3e:	shr    al,cl
  414b40:	popa   
  414b41:	fst    DWORD PTR [eax+0x0]
  414b44:	dec    eax
  414b45:	sbb    dl,BYTE PTR [eax+0x50]
  414b48:	add    al,0xc1
  414b4a:	test   BYTE PTR [ecx],dl
  414b4c:	mov    ebx,ebp
  414b4e:	das    
  414b4f:	sar    BYTE PTR [esi+0x5d787e1a],cl
  414b55:	in     al,0x54
  414b57:	inc    ebx
  414b58:	lds    ebp,FWORD PTR [ebp+0x3d09]
	...
  414b6e:	add    BYTE PTR [eax],al
  414b70:	paddusw mm0,QWORD PTR [eax]
  414b73:	add    BYTE PTR [esi-0x49],ah
  414b76:	das    
  414b77:	leave  
  414b78:	pop    ebp
  414b79:	push   esp
  414b7a:	or     al,0x43
  414b7c:	nop
  414b7d:	pop    esi
  414b7e:	and    al,0xe2
  414b80:	or     bl,dl
  414b82:	add    BYTE PTR [ecx+0x6d27d],cl
  414b88:	sti    
  414b89:	mov    bl,0x8
  414b8b:	lea    edi,[edi-0x2]
  414b8e:	fiadd  WORD PTR [ecx]
  414b90:	retf   
  414b91:	fst    DWORD PTR [eax-0x73]
  414b94:	cmp    eax,0xbb0006da
  414b99:	mov    ebx,edi
  414b9b:	aad    0x38
  414b9d:	push   ds
  414b9e:	or     al,0xb9
  414ba0:	and    eax,0x160000dd
  414ba5:	sahf   
  414ba6:	and    al,0x14
  414ba8:	jge    0x414b84
  414baa:	add    BYTE PTR [eax-0xe],al
  414bad:	mov    al,ds:0xd66783f5
  414bb2:	mov    edx,0xd98a04
  414bb7:	push   edx
  414bb8:	push   ss
  414bb9:	push   ebx
  414bba:	loope  0x414bc1
  414bbc:	jnp    0x414b97
  414bbe:	push   eax
  414bbf:	lea    eax,ds:0x8b0006ce
  414bc5:	xor    esp,ecx
  414bc7:	in     eax,0x84
  414bc9:	xlat   BYTE PTR ds:[ebx]
  414bca:	test   al,al
  414bcc:	push   cs
  414bcd:	cli    
  414bce:	xchg   DWORD PTR [edi+0x70d62],ecx
	...
  414be8:	bound  edi,QWORD PTR [ecx+0x325a1c92]
  414bee:	add    DWORD PTR [eax+0x31130763],esi
  414bf4:	adc    BYTE PTR [edx+0x3335fff2],ch
  414bfa:	mov    es,WORD PTR [esi+eax*4+0x26]
  414bfe:	mov    DWORD PTR [eax],edx
  414c00:	mov    ds:0x50fa75e9,al
  414c05:	jb     0x414c66
  414c07:	pop    esi
  414c08:	mov    bh,0xe7
  414c0a:	add    esp,0x13216
  414c10:	and    eax,eax
  414c12:	mov    ebx,edx
  414c14:	out    0x79,eax
  414c16:	js     0x414c8e
  414c18:	gs jmp 0x414c1c
  414c1b:	out    0xf2,ax
  414c1e:	js     0x414c8e
  414c20:	xor    eax,esp
  414c22:	push   edi
  414c23:	mov    eax,ebx
  414c25:	scas   eax,DWORD PTR es:[edi]
  414c26:	cld    
  414c27:	xor    BYTE PTR [edi+0x1f],cl
  414c2a:	adc    BYTE PTR [ebp-0x77bcfdd],dh
  414c30:	dec    edx
  414c31:	outs   dx,BYTE PTR ds:[esi]
  414c32:	push   es
  414c33:	cmp    DWORD PTR [edx+0x4803764a],0x9d01603e
  414c3d:	gs push edi
  414c3f:	push   0x5f
  414c41:	adc    BYTE PTR gs:[ebp-0x2fb542ad],dh
  414c48:	cld    
  414c49:	scas   al,BYTE PTR es:[edi]
  414c4a:	cld    
  414c4b:	pop    es
	...
  414c60:	adc    eax,0x5ee2c22a
  414c65:	scas   eax,DWORD PTR es:[edi]
  414c66:	(bad)  
  414c67:	ror    BYTE PTR [ecx-0x4ab971f4],1
  414c6d:	pop    esp
  414c6e:	cmp    al,0xc3
  414c70:	cmc    
  414c71:	fsubr  st,st(7)
  414c73:	ret    0xdd80
  414c76:	push   0xffffffc5
  414c78:	and    eax,0x9c8ee530
  414c7d:	inc    esp
  414c7e:	inc    ebp
  414c7f:	cmp    eax,0xc2f6ac21
  414c84:	inc    eax
  414c85:	(bad)  [edx-0x3b]
  414c88:	add    eax,0x1204ad50
  414c8d:	pop    eax
  414c8e:	test   al,0x5
  414c90:	cmp    ebx,DWORD PTR [esi]
  414c92:	or     eax,0x3c832c87
  414c97:	js     0x414cfc
  414c99:	pop    eax
  414c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c9b:	add    ch,bl
  414c9d:	sbb    ebp,DWORD PTR [esi]
  414c9f:	mov    esi,DWORD PTR [ebx-0x80]
  414ca2:	stos   BYTE PTR es:[edi],al
  414ca3:	test   BYTE PTR [ebx-0x27],al
  414ca6:	adc    DWORD PTR [edx+ebx*4],ecx
  414ca9:	sub    BYTE PTR [edx+0x628c8c54],0xfa
  414cb0:	js     0x414cd6
  414cb2:	data16 js 0x414d03
  414cb5:	push   eax
  414cb6:	pop    ecx
  414cb7:	add    BYTE PTR [esi+0x5d],dh
  414cba:	stc    
  414cbb:	inc    ebx
  414cbc:	bound  edx,QWORD PTR [eax-0x5a]
  414cbf:	adc    ebx,ebx
  414cc1:	inc    eax
  414cc2:	out    dx,eax
  414cc3:	add    al,BYTE PTR [eax]
	...
  414cd5:	add    BYTE PTR [eax],al
  414cd7:	add    BYTE PTR [edx-0x27],ah
  414cda:	jo     0x414c8f
  414cdc:	outs   dx,BYTE PTR ds:[esi]
  414cdd:	(bad)  
  414cdf:	add    ebp,ebx
  414ce1:	fwait
  414ce2:	xlat   BYTE PTR ds:[ebx]
  414ce3:	mov    WORD PTR [esi],?
  414ce5:	std    
  414ce6:	test   DWORD PTR [edx+0x3e8d0f2],0x13a65062
  414cf0:	cld    
  414cf1:	dec    edi
  414cf2:	mov    ds:0x70bb7627,eax
  414cf7:	xor    BYTE PTR [edx-0x26],0xe7
  414cfb:	add    edi,DWORD PTR [edi-0x55]
  414cfe:	add    ch,bl
  414d00:	(bad)  
  414d01:	int    0x18
  414d03:	fisub  DWORD PTR [ecx]
  414d05:	fst    DWORD PTR [ecx-0x1a]
  414d08:	dec    ebx
  414d09:	adc    DWORD PTR [ebx],0xc0566629
  414d0f:	pop    ebp
  414d10:	je     0x414d6b
  414d12:	jl     0x414d19
  414d14:	outs   dx,BYTE PTR ds:[esi]
  414d15:	fst    DWORD PTR [esi+0x53]
  414d18:	pop    esi
  414d19:	mov    cl,0x13
  414d1b:	jmp    0x414d7e
  414d1d:	fst    DWORD PTR [ecx+0x3d]
  414d20:	data16 and al,0x13
  414d23:	loope  0x414d6f
  414d25:	cdq    
  414d26:	add    BYTE PTR [edx+0x913245c],dl
  414d2c:	jnp    0x414cc7
  414d2e:	add    BYTE PTR [esi],dh
  414d30:	mov    ah,0x50
  414d32:	shl    DWORD PTR [edx],0x20
  414d35:	(bad)  
  414d36:	add    BYTE PTR [edx+0x12],ch
  414d39:	retf   0x1451
	...
  414d50:	xchg   esp,eax
  414d51:	mov    WORD PTR [ecx-0x2db7770],cs
  414d57:	cli    
  414d58:	push   ebp
  414d59:	push   eax
  414d5a:	repnz dec bx
  414d5d:	pop    ebp
  414d5e:	adc    ch,BYTE PTR [ecx-0x6beaf9f]
  414d64:	aam    0xa8
  414d66:	adc    al,0x62
  414d68:	push   cs
  414d69:	sar    bh,cl
  414d6b:	call   0x91f721d1
  414d70:	push   esi
  414d71:	and    bh,ch
  414d73:	jmp    0xda5a142c
  414d78:	and    ecx,ebx
  414d7a:	mov    ebp,DWORD PTR [ebp-0x49af3683]
  414d80:	pushf  
  414d81:	(bad)  
  414d82:	cld    
  414d83:	std    
  414d84:	and    ecx,ebx
  414d86:	sub    DWORD PTR [ecx],0x5d
  414d89:	pop    ebp
  414d8a:	in     eax,dx
  414d8b:	add    BYTE PTR [ebx-0x2a],bh
  414d8e:	add    BYTE PTR [edx-0x77],ch
  414d91:	test   DWORD PTR [esi+0x3b],esp
  414d94:	bound  esp,QWORD PTR [eax-0x394774df]
  414d9a:	xchg   DWORD PTR [edi+edx*2-0xf],ecx
  414d9e:	daa    
  414d9f:	mov    al,0x4b
  414da1:	fld    QWORD PTR [eax]
  414da3:	add    BYTE PTR [eax+0x55],ah
  414da6:	add    al,0x1
  414da8:	cmp    edx,esi
  414daa:	std    
  414dab:	jae    0x414e04
  414dad:	int    0xfd
  414daf:	dec    ebx
  414db0:	addr16 sar ebp,0x73
	...
  414dc8:	addr16 (bad) 
  414dcc:	addr16 stc 
  414dce:	out    0x64,eax
  414dd0:	mov    al,0x11
  414dd2:	jg     0x414dcc
  414dd4:	push   cs
  414dd5:	mov    ds:0xef167419,eax
  414dda:	mov    ebp,0xbdef0a74
  414ddf:	je     0x414dfb
  414de1:	push   edi
  414de2:	call   0x492944ed
  414de7:	je     0x414e13
  414de9:	mov    ?,WORD PTR [ecx+0x48]
  414dec:	loopne 0x414dd1
  414dee:	test   DWORD PTR [edi+edx*2-0x33],esi
  414df2:	out    0x38,eax
  414df4:	dec    eax
  414df5:	cs push cs
  414df7:	je     0x414e55
  414df9:	xchg   ebp,eax
  414dfa:	je     0x414e1e
  414dfc:	add    ebp,DWORD PTR [edx-0x17f9b7f3]
  414e02:	xchg   DWORD PTR [edi+eiz*2-0xf],eax
  414e06:	test   DWORD PTR [edi+eiz*2-0x7],eax
  414e0a:	test   DWORD PTR [edi+eiz*2-0x3b],esi
  414e0e:	out    0x24,eax
  414e10:	xor    BYTE PTR [edx-0x65eddbdc],bl
  414e16:	and    al,0x1c
  414e18:	bound  edi,QWORD PTR [ecx-0x288ddb8b]
  414e1e:	adc    ecx,DWORD PTR [ecx-0x78daebe2]
  414e24:	es sbb al,0x1d
  414e27:	jmp    0x24b70792
	...
  414e40:	dec    edx
  414e41:	mov    bh,0x45
  414e43:	and    al,0x3e
  414e45:	test   eax,0xad762448
  414e4a:	dec    eax
  414e4b:	and    al,0x72
  414e4d:	loop   0x414e4a
  414e4f:	adc    edx,edx
  414e51:	and    eax,0x72df0041
  414e56:	jne    0x414ea5
  414e58:	enter  0x5362,0xfd
  414e5c:	dec    edi
  414e5d:	rcl    BYTE PTR ds:0x4596240,cl
  414e63:	add    BYTE PTR [edx-0xe],ah
  414e66:	js     0x414e7d
  414e68:	mov    BYTE PTR [esi+ecx*4],dh
  414e6b:	inc    esp
  414e6c:	ds push ds
  414e6e:	push   ecx
  414e6f:	push   ebp
  414e70:	or     eax,0xa2130d26
  414e75:	xor    dl,BYTE PTR [ecx+0x6a]
  414e78:	bound  ebx,QWORD PTR [edi-0xdb09beb]
  414e7e:	add    al,0x89
  414e80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e81:	push   ss
  414e82:	sbb    eax,0x18ce9e29
  414e87:	push   0x1136e
  414e8c:	xor    bh,BYTE PTR [ebx-0x247ddbb8]
  414e92:	dec    eax
  414e93:	and    al,0x6a
  414e95:	inc    edx
  414e96:	cld    
  414e97:	je     0x414e1f
  414e99:	sar    bl,cl
  414e9b:	je     0x414f1b
  414e9d:	shr    BYTE PTR [edx+0x0],cl
  414ea0:	adc    eax,0x3015ef
	...
  414eb5:	add    BYTE PTR [eax],al
  414eb7:	add    BYTE PTR [edi-0x27],cl
  414eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ebb:	add    edi,DWORD PTR [edi]
  414ebd:	jg     0x414e7b
  414ebf:	pop    eax
  414ec0:	jecxz  0x414ed7
  414ec2:	test   ecx,0x50b8d966
  414ec8:	xor    DWORD PTR [ebx+edx*4+0x27],edx
  414ecc:	push   edx
  414ecd:	xchg   DWORD PTR [edx-0x39],esi
  414ed0:	rsqrtps xmm3,XMMWORD PTR [ebx-0x7abadd9]
  414ed7:	(bad)
  414edb:	add    edx,esi
  414edd:	pushf  
  414ede:	push   ecx
  414edf:	add    DWORD PTR [ebp-0x6e88570c],ebp
  414ee5:	hlt    
  414ee6:	test   al,0x77
  414ee8:	js     0x414ed8
  414eea:	and    DWORD PTR [ebx],eax
  414eec:	(bad)  
  414eed:	fnstenv [ebx]
  414eef:	and    BYTE PTR [ebx+0x7b133b1a],cl
  414ef5:	sbb    bl,dh
  414ef7:	xchg   dh,al
  414ef9:	fsub   st,st(7)
  414efb:	add    ebx,edi
  414efd:	shr    ecx,1
  414eff:	add    esp,DWORD PTR [edx-0x15]
  414f02:	mov    dl,0xe8
  414f04:	inc    ebx
  414f05:	pusha  
  414f06:	in     eax,0x1
  414f08:	(bad)  
  414f09:	fst    DWORD PTR [edx-0x1624400a]
  414f0f:	add    esp,DWORD PTR [edx+0x34]
  414f12:	test   DWORD PTR [ebp+eax*8-0x4fc1828],edi
  414f19:	int3   
  414f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  414f30:	(bad)  
  414f31:	(bad)  
  414f33:	call   0x3cbaf99
  414f38:	(bad)  
  414f39:	fstp   DWORD PTR [edx+0x1fc5c702]
  414f3f:	adc    DWORD PTR [edx],esp
  414f41:	fnstenv [edx+0x4f]
  414f44:	jle    0x414f0f
  414f46:	add    BYTE PTR [edx-0x6f],ah
  414f49:	push   edi
  414f4a:	push   esp
  414f4b:	add    eax,0x958ee846
  414f50:	pusha  
  414f51:	fld    DWORD PTR [eax]
  414f53:	xchg   esp,eax
  414f54:	pop    ds
  414f55:	call   0xd9a1d108
  414f5a:	add    BYTE PTR [edi+eax*2+0x608d86f2],dl
  414f61:	fld    DWORD PTR [eax]
  414f63:	mov    esp,0xe900d989
  414f68:	imul   bh
  414f6a:	test   BYTE PTR [edx],dl
  414f6c:	in     al,dx
  414f6d:	shr    DWORD PTR [edx-0x31],cl
  414f70:	mov    bh,0x1c
  414f72:	adc    esi,ebp
  414f74:	jb     0x414f0f
  414f76:	add    BYTE PTR [ecx+0x1a18a55e],al
  414f7c:	push   ds
  414f7d:	push   edi
  414f7e:	xchg   BYTE PTR [ecx+0x67],dl
  414f81:	fld    DWORD PTR [eax]
  414f83:	jo     0x414f65
  414f85:	mov    ch,0xff
  414f87:	call   0x3dc7a5ed
  414f8c:	pop    edi
  414f8d:	fld    DWORD PTR [eax]
  414f8f:	jb     0x414fb2
  414f91:	xor    DWORD PTR [edx+esi*2],ebx
	...
  414fa8:	stos   BYTE PTR es:[edi],al
  414fa9:	cmc    
  414faa:	adc    BYTE PTR [edx-0x4e],ah
  414fad:	cmc    
  414fae:	sbb    BYTE PTR [eax-0x48],ah
  414fb1:	mov    cl,0xff
  414fb3:	call   0x5d7a619
  414fb8:	pop    edi
  414fb9:	fld    DWORD PTR [eax]
  414fbb:	pusha  
  414fbc:	fsubr  DWORD PTR [ebp+0x5061e8ff]
  414fc2:	ret    
  414fc3:	(bad)  
  414fc4:	cmp    eax,DWORD PTR [edx-0x2a603fa7]
  414fca:	add    BYTE PTR [eax+0x62568a34],bh
  414fd0:	push   edx
  414fd1:	cmc    
  414fd2:	sbb    al,0x0
  414fd4:	fmul   QWORD PTR [edi-0x6]
  414fd7:	mov    edx,DWORD PTR [edx]
  414fd9:	push   esp
  414fda:	inc    BYTE PTR [ecx]
  414fdc:	mov    ecx,0x8b7400da
  414fe1:	push   ebp
  414fe2:	inc    BYTE PTR [edi]
  414fe4:	mov    edx,ebx
  414fe6:	add    BYTE PTR [ebx+edx*4+0x55],dh
  414fea:	inc    BYTE PTR [ecx+edi*2]
  414fed:	fiadd  DWORD PTR [eax]
  414fef:	jne    0x414fbe
  414ff1:	lods   al,BYTE PTR ds:[esi]
  414ff2:	add    dl,BYTE PTR [edi+0x64]
  414ff5:	enter  0x1524,0xcb
  414ff9:	fiadd  DWORD PTR [edi+0x7041b0d8]
  414fff:	add    DWORD PTR [ebx-0x26],edi
  415002:	je     0x415047
  415004:	(bad)  
  415005:	fisub  WORD PTR [eax+edx*1]
  415008:	fwait
  415009:	dec    esi
  41500a:	inc    esp
  41500b:	and    al,0x0
	...
  41501d:	add    BYTE PTR [eax],al
  41501f:	add    BYTE PTR [ebx-0x51],bl
  415022:	paddsb mm1,QWORD PTR fs:[edi]
  415026:	or     esi,DWORD PTR [edi-0x3efd53f5]
  41502c:	sub    cl,dl
  41502e:	pop    es
  41502f:	enter  0x864a,0x6a
  415033:	and    DWORD PTR [edx+eiz*1+0x11],ecx
  415037:	cmp    BYTE PTR [esi],bl
  415039:	call   0x8316:0xadcb8500
  415040:	ja     0x41503b
  415042:	adc    BYTE PTR [edx],al
  415044:	and    al,0x9e
  415046:	pop    ds
  415047:	add    DWORD PTR [ebx],ecx
  415049:	fidivr DWORD PTR [edi+0x7c]
  41504c:	pop    ds
  41504d:	retf   0xf04
  415050:	jg     0x415014
  415052:	std    
  415053:	(bad)  
  415054:	sti    
  415055:	dec    esp
  415056:	cdq    
  415057:	jo     0x415023
  415059:	fld    DWORD PTR [eax]
  41505b:	mov    edi,edi
  41505d:	mov    ebp,0x3f620f1c
  415062:	(bad)  ds:0x338ef60d
  415068:	push   0xfffffffd
  41506a:	inc    eax
  41506b:	add    BYTE PTR [ebx-0x5ef6ee71],ah
  415071:	aas    
  415072:	push   edx
  415073:	push   0xffffff82
  415075:	inc    edi
  415076:	cli    
  415077:	(bad)  
  415078:	push   ecx
  415079:	lock inc ecx
  41507b:	mov    DWORD PTR [edi+0x46443c55],esp
  415081:	and    al,0x70
  415083:	and    eax,0x0
	...
  415098:	clc    
  415099:	das    
  41509a:	xor    edx,edx
  41509c:	mov    ch,BYTE PTR [eax]
  41509e:	mov    bh,bh
  4150a0:	jne    0x4150d0
  4150a2:	mov    dl,0xc0
  4150a4:	ins    DWORD PTR es:[edi],dx
  4150a5:	fwait
  4150a6:	sbb    eax,0x51c6d928
  4150ab:	std    
  4150ac:	(bad)  
  4150ad:	into   
  4150ae:	sub    al,0x89
  4150b0:	daa    
  4150b1:	or     esp,DWORD PTR [ebx-0x2]
  4150b4:	dec    ebp
  4150b5:	add    al,0x54
  4150b7:	push   ebp
  4150b8:	inc    ebp
  4150b9:	gs jmp 0x173b380
  4150bf:	std    
  4150c0:	scas   al,BYTE PTR es:[edi]
  4150c1:	(bad)  
  4150c2:	and    BYTE PTR [ecx-0x1b8e4eb],cl
  4150c8:	and    eax,0xe1f08b6c
  4150cd:	ja     0x4150db
  4150cf:	or     eax,0x214e5
  4150d4:	bound  esi,QWORD PTR [ebx]
  4150d6:	jge    0x4150d3
  4150d8:	bound  esi,QWORD PTR [edx]
  4150da:	add    DWORD PTR [ecx-0x7bf7cf07],eax
  4150e0:	mov    bh,0x32
  4150e2:	add    DWORD PTR [eax],eax
  4150e4:	loope  0x41508d
  4150e6:	add    esi,DWORD PTR [edx+ebp*2-0x51]
  4150ea:	sti    
  4150eb:	add    edx,DWORD PTR [esi-0x27]
  4150ee:	mov    ebx,0x6a1f2386
  4150f3:	cld    
  4150f4:	int    0xa3
  4150f6:	stos   DWORD PTR es:[edi],eax
  4150f7:	add    ah,0x7a
  4150fa:	out    0x3,eax
	...
  415110:	bound  esp,QWORD PTR [ebp+0x77b4830c]
  415116:	out    0x3,eax
  415118:	bound  esp,QWORD PTR [ebp+0x78a482fb]
  41511e:	out    0x3,eax
  415120:	bound  esp,QWORD PTR [ebp+0x799482d3]
  415126:	out    0x3,eax
  415128:	bound  esp,QWORD PTR [ebp+0x768482cb]
  41512e:	out    0x3,eax
  415130:	bound  esp,QWORD PTR [esi-0x26111575]
  415136:	out    0x3,eax
  415138:	clc    
  415139:	fld    DWORD PTR [ecx-0x1850f0fd]
  41513f:	push   eax
  415140:	pop    edi
  415141:	(bad)  
  415142:	push   ebx
  415143:	cpuid  
  415145:	fnstenv [edx-0x2d]
  415148:	fisttp DWORD PTR ds:0x1c4627bf
  41514e:	into   
  41514f:	clc    
  415150:	mov    dh,0xf5
  415152:	adc    edx,DWORD PTR [ebp-0x74]
  415155:	xor    BYTE PTR [eax],al
  415157:	sub    DWORD PTR [edx+edi*2],0xffffffe7
  41515b:	add    esp,DWORD PTR [edx-0x5a]
  41515e:	loopne 0x4151cd
  415160:	bound  ebp,QWORD PTR [edi-0x2e6e075a]
  415166:	xchg   edx,eax
  415167:	sub    ecx,DWORD PTR [ebp+0x6203471b]
  41516d:	fst    DWORD PTR [ecx+eiz*1]
  415170:	mov    cl,bl
  415172:	adc    edx,edi
	...
  415188:	or     ebp,DWORD PTR [esi]
  41518a:	push   0xd8c3f9
  41518f:	jmp    0x3160f9f5
  415194:	inc    ecx
  415195:	sub    DWORD PTR [eax],eax
  415197:	jmp    0xd65f676
  41519c:	pop    ebx
  41519d:	data16 sar BYTE PTR [ecx-0x170038c7],0x61
  4151a5:	xchg   ch,bh
  4151a7:	fsubr  QWORD PTR [ecx-0x38]
  4151aa:	inc    eax
  4151ab:	jmp    0x929cccba
  4151b0:	or     BYTE PTR [edi],dl
  4151b2:	sbb    cl,ch
  4151b4:	loopne 0x4151d0
  4151b6:	mov    ds:0xdd961e9,eax
  4151bb:	gs pusha 
  4151bd:	sbb    al,0xfd
  4151bf:	jmp    0xe9e06ca4
  4151c4:	popa   
  4151c5:	(bad)  
  4151c7:	cmp    BYTE PTR [edx+0x1d],0xfd
  4151cb:	push   0xe900796b
  4151d0:	popa   
  4151d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151d2:	(bad)
  4151d6:	add    cl,ch
  4151d8:	popa   
  4151d9:	int3   
  4151da:	test   bl,cl
  4151dc:	data16 fld DWORD PTR [eax]
  4151df:	push   0xe9003b4c
  4151e4:	popa   
  4151e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151e6:	ret    
  4151e7:	push   ebx
  4151e8:	pop    edi
  4151e9:	sbb    al,0x74
  4151eb:	add    eax,0x0
	...
  415200:	xchg   BYTE PTR [edx+ebp*2+0x131c94e9],al
  415207:	cmp    eax,0x72009973
  41520c:	cs push ecx
  41520e:	retf   
  41520f:	xchg   ecx,eax
  415210:	mul    BYTE PTR [eax]
  415212:	std    
  415213:	xchg   esi,eax
  415214:	stc    
  415215:	outs   dx,DWORD PTR ds:[esi]
  415216:	jg     0x4151a7
  415218:	rcr    cl,0x0
  41521b:	add    BYTE PTR [ebx],cl
  41521d:	aam    0x81
  41521f:	xor    ch,BYTE PTR [edx+eiz*1-0x5]
  415223:	mov    esi,DWORD PTR [edi]
  415225:	stc    
  415226:	sbb    bh,dh
  415228:	mov    edi,ecx
  41522a:	add    BYTE PTR [eax],al
  41522c:	leave  
  41522d:	(bad)  
  41522e:	je     0x4151c1
  415230:	add    esi,esi
  415232:	lock add BYTE PTR [ebx+0x2cff6f2d],bh
  415239:	and    bh,BYTE PTR [edi-0x5]
  41523c:	mov    dl,0xaa
  41523e:	inc    eax
  41523f:	(bad)  
  415241:	jmp    0x56ae5241
  415246:	not    DWORD PTR [ecx]
  415248:	int    0x70
  41524a:	jg     0x415247
  41524c:	xchg   edi,eax
  41524d:	stos   BYTE PTR es:[edi],al
  41524e:	sbb    eax,DWORD PTR [ebx-0x7af437c0]
  415254:	call   0xa223:0xafffb23
  41525b:	add    BYTE PTR [ebx+0x6a850bd6],cl
  415261:	and    al,0xfb
  415263:	inc    DWORD PTR [eax]
	...
  415275:	add    BYTE PTR [eax],al
  415277:	add    BYTE PTR [ebx],dh
  415279:	push   ebp
  41527a:	in     eax,dx
  41527b:	add    BYTE PTR [ebx+0x2d],cl
  41527e:	cmp    edi,edi
  415280:	cmp    al,0x23
  415282:	jge    0x415282
  415284:	(bad)  
  415286:	add    BYTE PTR [eax],al
  415288:	cmp    al,0x59
  41528a:	xlat   BYTE PTR ds:[ebx]
  41528b:	(bad)  
  41528c:	sub    al,0x23
  41528e:	in     eax,0x29
  415290:	sbb    al,0x23
  415292:	sti    
  415293:	mov    ecx,0x22ec
  415298:	mov    edx,0xb00a224
  41529d:	(bad)  
  41529e:	jno    0x4152ca
  4152a0:	nop
  4152a1:	fisub  DWORD PTR [eax+ebx*1]
  4152a4:	nop
  4152a5:	xchg   esi,eax
  4152a6:	and    al,0xa9
  4152a8:	bound  esi,QWORD PTR [eax]
  4152aa:	add    edi,edi
  4152ac:	std    
  4152ad:	cli    
  4152ae:	jl     0x4152d1
  4152b0:	cmc    
  4152b1:	push   edx
  4152b2:	mul    BYTE PTR [ebx]
  4152b4:	bound  esi,QWORD PTR [eax]
  4152b6:	add    edi,edi
  4152b8:	in     al,dx
  4152b9:	inc    edi
  4152ba:	sbb    al,al
  4152bc:	xchg   DWORD PTR [eax+0x2d620001],esp
  4152c2:	xor    eax,esi
  4152c4:	bound  esi,QWORD PTR [eax]
  4152c6:	push   es
  4152c7:	mov    ch,0xa2
  4152c9:	xchg   esi,eax
  4152ca:	add    edi,DWORD PTR [edi-0x44]
  4152cd:	push   esp
  4152ce:	add    DWORD PTR [eax],eax
  4152d0:	bound  esp,QWORD PTR [ebx]
  4152d2:	cmp    ch,0xac
  4152d5:	(bad)  
  4152d7:	mov    DWORD PTR [ebx+0xc08009],esp
	...
  4152ed:	add    BYTE PTR [eax],al
  4152ef:	add    BYTE PTR [ebp-0x4c],ch
  4152f2:	in     eax,dx
  4152f3:	(bad)  
  4152f4:	xchg   ebp,eax
  4152f5:	repnz pop ebx
  4152f7:	cmp    DWORD PTR [ebx-0x7b2a7fd6],esp
  4152fd:	ret    0xfdf6
  415300:	not    BYTE PTR [ebx]
  415302:	and    eax,0xec570855
  415307:	fsubr  DWORD PTR [edx+ebx*1-0xd]
  41530b:	xor    DWORD PTR [esi+0x3f],0x6fb45352
  415312:	mov    dh,bh
  415314:	xchg   ecx,eax
  415315:	dec    ecx
  415316:	xchg   DWORD PTR [ebp+0x72],eax
  415319:	mov    ebx,edx
  41531b:	mov    DWORD PTR [ebx],edi
  41531d:	test   eax,0x1528839
  415322:	add    DWORD PTR [eax],eax
  415324:	scas   al,BYTE PTR es:[edi]
  415325:	sbb    BYTE PTR [eax-0x1155798c],cl
  41532b:	shl    DWORD PTR [ebx-0x2a],0x11
  41532f:	mov    DWORD PTR [esi-0x16a99f22],esi
  415335:	fnstenv [esi-0x61eba714]
  41533b:	cmc    
  41533c:	jecxz  0x41533a
  41533e:	xchg   esp,eax
  41533f:	xor    DWORD PTR ds:0x6e00aa10,esp
  415345:	out    0x11,al
  415347:	add    ebx,DWORD PTR [ebp-0x242e4556]
  41534d:	sub    BYTE PTR [edi+0x78],bh
  415350:	fcomp  DWORD PTR [eax]
  415352:	outs   dx,BYTE PTR ds:[esi]
  415353:	mov    DWORD PTR [eax],eax
	...
  415365:	add    BYTE PTR [eax],al
  415367:	add    BYTE PTR [esi],ah
  415369:	mov    ebp,0xbd1e8acf
  41536e:	repz call 0xcc0b7f5
  415374:	mov    ebp,0xc97ee718
  415379:	mov    gs,ebp
  41537b:	mov    bl,BYTE PTR [esi]
  41537d:	mov    ebp,0xaa55e8d3
  415382:	stc    
  415383:	shr    ebx,1
  415385:	sub    BYTE PTR [edi],bh
  415387:	cwde   
  415388:	out    0xda,al
  41538a:	out    0x4,eax
  41538c:	xlat   BYTE PTR ds:[ebx]
  41538d:	sbb    DWORD PTR [eax+0x40],esi
  415390:	ds in  eax,dx
  415392:	bound  esi,QWORD PTR [eax+0x46]
  415395:	and    DWORD PTR [edx+0x3d],0x1fb36452
  41539c:	push   es
  41539d:	bound  ebp,QWORD PTR [edi+0x4]
  4153a0:	gs sbb bh,ah
  4153a3:	mov    BYTE PTR [edi+0x5eb460e9],ah
  4153a9:	(bad)  
  4153ab:	add    esp,ecx
  4153ad:	xor    ebp,esi
  4153af:	jg     0x415396
  4153b1:	(bad)  
  4153b3:	add    ebp,ebx
  4153b5:	sbb    ebp,DWORD PTR [edx-0x1d]
  4153b8:	pusha  
  4153b9:	bound  ebp,QWORD PTR [ebx]
  4153bb:	and    BYTE PTR [edx-0x73],cl
  4153be:	jecxz  0x415429
  4153c0:	and    eax,0xfee0003
  4153c5:	sbb    al,BYTE PTR [esi*1+0x5b00836b]
	...
  4153e0:	pusha  
  4153e1:	(bad)  
  4153e2:	int    0x91
  4153e4:	xchg   ebp,eax
  4153e5:	gs (bad) 
  4153e7:	call   0x89c26dd6
  4153ec:	inc    ecx
  4153ed:	pusha  
  4153ee:	inc    esp
  4153ef:	int    0x55
  4153f1:	lea    eax,[ebx+edx*1]
  4153f4:	popa   
  4153f5:	add    al,BYTE PTR ds:0x7498a27f
  4153fb:	loop   0x415448
  4153fd:	fnstenv [edx-0x17da2513]
  415403:	adc    al,0xda
  415405:	pop    ss
  415406:	std    
  415407:	bound  esp,QWORD PTR [edx-0x171e1fa7]
  41540d:	pushf  
  41540e:	and    al,0x9
  415410:	xor    bl,ch
  415412:	push   0xffffffe8
  415414:	mov    edx,0x712af6dd
  415419:	lea    ecx,[ecx]
  41541b:	ret    
  41541c:	popa   
  41541d:	dec    ebx
  41541e:	add    dh,BYTE PTR [edx-0x5a]
  415421:	add    BYTE PTR [esi],dl
  415423:	ins    DWORD PTR es:[edi],dx
  415424:	pusha  
  415425:	(bad)  [ecx+0x546451ae]
  41542b:	lds    edx,FWORD PTR [ecx+0x16]
  41542e:	mov    al,0xed
  415430:	pusha  
  415431:	fld    DWORD PTR [eax]
  415433:	(bad)  
  415434:	mov    al,0xd8
  415436:	(bad)  
  415437:	call   0x90a5d79d
  41543c:	dec    ecx
  41543d:	add    dh,BYTE PTR [ebp+0x4c6061e8]
  415443:	add    eax,0x0
	...
  415458:	outs   dx,BYTE PTR ds:[esi]
  415459:	pop    eax
  41545a:	mov    edi,0x8109bddf
  41545f:	shr    BYTE PTR [ecx-0x74],1
  415462:	xor    BYTE PTR [eax],al
  415464:	xchg   ecx,eax
  415465:	or     eax,0xbb0eff56
  41546a:	adc    DWORD PTR [eax+0xb],eax
  41546d:	jbe    0x41546f
  41546f:	add    BYTE PTR [ebx],cl
  415471:	fwait
  415472:	je     0x415494
  415474:	sbb    ebp,0x97fbc000
  41547a:	enter  0xc123,0xc6
  41547e:	retf   0xf874
  415481:	jne    0x415483
  415483:	add    bh,bh
  415485:	pop    edx
  415486:	jno    0x415494
  415488:	dec    ebp
  415489:	or     dl,BYTE PTR [ecx]
  41548b:	or     al,0xbe
  41548d:	call   0xf041:0xdb0b8500
  415494:	adc    esi,DWORD PTR ds:[eax+ebp*1+0x50]
  415499:	sbb    ebp,eax
  41549b:	jecxz  0x4154e9
  41549d:	fadd   QWORD PTR [eax]
  41549f:	test   al,0xb
  4154a1:	(bad)  
  4154a2:	sbb    DWORD PTR [ebx],edi
  4154a4:	outs   dx,BYTE PTR ds:[esi]
  4154a5:	xchg   ecx,eax
  4154a6:	xor    eax,0xfbb0bb6a
  4154ab:	adc    eax,0x40f1a7
  4154b0:	add    BYTE PTR ds:0xdaf1016a,ch
  4154b6:	push   esi
  4154b7:	mov    esi,DWORD PTR [esi*1+0xf94b]
	...
  4154ce:	add    BYTE PTR [eax],al
  4154d0:	push   esp
  4154d1:	or     ah,bh
  4154d3:	and    dh,bh
  4154d5:	div    DWORD PTR [ebx+0x3d]
  4154d8:	into   
  4154d9:	or     edx,DWORD PTR [ecx]
  4154db:	pop    eax
  4154dc:	mov    ds,WORD PTR [edx-0x6e747b00]
  4154e2:	pop    ss
  4154e3:	test   DWORD PTR [ebp-0x72],ecx
  4154e6:	pop    es
  4154e7:	cmp    esi,DWORD PTR ds:0x7ff6038e
  4154ed:	rcl    DWORD PTR [edi+eax*1],0x62
  4154f1:	mov    ah,0x0
  4154f3:	mov    DWORD PTR [edi],ebp
  4154f5:	aas    
  4154f6:	inc    ebp
  4154f7:	and    al,0x52
  4154f9:	add    DWORD PTR [ecx],eax
  4154fb:	add    BYTE PTR [edx+0x2b],ah
  4154fe:	sbb    bh,BYTE PTR [edi+0x19]
  415501:	add    DWORD PTR [ecx+0x1cc6200],eax
  415507:	push   0x63
  415509:	jmp    0x89d3:0x33626a04
  415510:	sub    eax,0xf5f6fd58
  415515:	data16 mov dh,dh
  415518:	pop    ebp
  415519:	test   BYTE PTR [edi-0x1],dh
  41551c:	in     eax,0xff
  41551e:	jg     0x415564
  415520:	xchg   BYTE PTR [ecx+edx*2],ah
  415523:	push   esi
  415524:	popf   
  415525:	mov    ebx,0x8e2c28
  41552a:	add    DWORD PTR [eax],eax
  41552c:	lds    ecx,FWORD PTR [ecx+edx*1]
  41552f:	adc    esp,DWORD PTR [edx]
  415531:	add    BYTE PTR [eax+0xc0],cl
	...
  415547:	add    BYTE PTR [ebp+0x7c],ah
  41554a:	dec    ebx
  41554b:	jmp    FWORD PTR [ebp+0x7e447dff]
  415551:	sub    BYTE PTR [edx],al
  415553:	mov    ch,0x8a
  415555:	jp     0x41559c
  415557:	and    al,0xfe
  415559:	ss mov edx,0x11e4a3c0
  41555f:	or     DWORD PTR [edx-0x7e],edi
  415562:	ins    DWORD PTR es:[edi],dx
  415563:	and    al,0x52
  415565:	add    DWORD PTR [eax+0x30],edi
  415568:	jmp    0xe57e2f62
  41556d:	add    BYTE PTR [ecx],al
  41556f:	test   al,0x42
  415571:	mov    ecx,?
  415573:	mov    BYTE PTR [edi],ch
  415575:	jp     0x4155d4
  415577:	and    al,0xca
  415579:	xlat   BYTE PTR ds:[ebx]
  41557a:	sub    BYTE PTR [ecx+0x5c0bd9a6],cl
  415580:	jnp    0x41551f
  415582:	add    esi,DWORD PTR [eax]
  415584:	outs   dx,DWORD PTR ds:[esi]
  415585:	dec    esp
  415586:	lahf   
  415587:	jge    0x415527
  415589:	mov    ebp,0xbda61d43
  41558e:	inc    edx
  415590:	add    eax,0x22b8eeea
  415595:	loope  0x415536
  415597:	fstp   QWORD PTR [esi+0x60]
  41559a:	sbb    ebp,DWORD PTR [eax]
  41559c:	jp     0x415600
  41559e:	xor    ebp,DWORD PTR [eax]
  4155a0:	jp     0x4155fa
  4155a2:	sbb    ebp,DWORD PTR [eax]
  4155a4:	pop    edx
  4155a5:	fstp   DWORD PTR [ebx]
  4155a7:	add    dl,BYTE PTR [ecx+0xa2ffaa]
	...
  4155bd:	add    BYTE PTR [eax],al
  4155bf:	add    BYTE PTR [edx-0x27],ah
  4155c2:	out    0x5b,eax
  4155c4:	in     eax,0xda
  4155c6:	out    0x3,eax
  4155c8:	retf   
  4155c9:	jmp    0x56cd:0x8d5ec57d
  4155d0:	sbb    eax,0x62048981
  4155d5:	fxch   st(7)
  4155d7:	add    eax,0xf0e7d960
  4155dc:	cs mov ebp,0xbd267f07
  4155e2:	call   DWORD PTR [ebx-0x25]
  4155e5:	sub    esi,DWORD PTR [edx-0x3f]
  4155e8:	mov    al,BYTE PTR [esi]
  4155ea:	xor    ecx,esi
  4155ec:	xchg   edi,eax
  4155ed:	pop    eax
  4155ee:	stos   DWORD PTR es:[edi],eax
  4155ef:	daa    
  4155f0:	outs   dx,BYTE PTR ds:[esi]
  4155f1:	fstp   DWORD PTR [ebx-0x6cebceee]
  4155f7:	daa    
  4155f8:	push   cs
  4155f9:	or     DWORD PTR [esi+0x4],0x87fd962
  415600:	pusha  
  415601:	(bad)  
  415603:	fmul   QWORD PTR [esi+0xb]
  415606:	sub    al,BYTE PTR [esi+edx*8-0x46]
  41560a:	add    BYTE PTR [edx+edx*2-0x5682db73],bl
  415611:	inc    ecx
  415612:	add    cl,ch
  415614:	popa   
  415615:	or     DWORD PTR [eax],0xfdd961eb
  41561b:	pop    ebp
  41561c:	mov    bh,BYTE PTR [ecx-0x2e85da75]
  415622:	push   eax
  415623:	jb     0x415625
	...
  415635:	add    BYTE PTR [eax],al
  415637:	add    BYTE PTR [ebx],cl
  415639:	(bad)  
  41563a:	int    0xd1
  41563c:	ret    0xfd0e
  41563f:	mov    dh,0xde
  415641:	xchg   esp,eax
  415642:	and    al,0x9
  415644:	lea    cx,[edi]
  415647:	cmp    al,0x13
  415649:	lea    esp,[ecx*1-0x16ffc262]
  415650:	popa   
  415651:	add    DWORD PTR [ebx+ebp*8],0xdde9d961
  415658:	jmp    0x415673
  41565a:	adc    ch,dh
  41565c:	sub    BYTE PTR [eax-0x7a820203],0x68
  415663:	inc    esp
  415664:	popa   
  415665:	fld    DWORD PTR [eax]
  415667:	rcr    DWORD PTR [edi+edx*8+0x0],1
  41566b:	jmp    0x965e322
  415670:	xor    eax,0x1611249d
  415675:	(bad)  
  415676:	(bad)  
  415677:	jb     0x41561b
  415679:	add    BYTE PTR [edi+0x43],ch
  41567c:	xchg   edx,eax
  41567d:	adc    eax,0x8d602af6
  415682:	pop    ds
  415683:	xchg   esp,eax
  415684:	xchg   edx,eax
  415685:	mov    WORD PTR [edx*4-0x32db62fc],fs
  41568c:	sbb    DWORD PTR [ecx],edi
  41568e:	add    cl,ch
  415690:	popa   
  415691:	add    DWORD PTR [eax],0xfdd961eb
  415697:	add    bh,ah
  415699:	mov    ebx,0x8b20
	...
  4156ae:	add    BYTE PTR [eax],al
  4156b0:	jne    0x415658
  4156b2:	xchg   edi,ecx
  4156b4:	arpl   bp,dx
  4156b6:	cli    
  4156b7:	(bad)  
  4156b8:	cmp    al,0xb
  4156ba:	mov    edi,0xd75300
  4156bf:	je     0x415726
  4156c1:	scas   eax,DWORD PTR es:[edi]
  4156c2:	add    BYTE PTR [edx],dh
  4156c4:	stc    
  4156c5:	mov    cs,ebx
  4156c7:	call   0x3eebba
  4156cc:	sub    al,0x4c
  4156ce:	dec    esp
  4156cf:	and    al,0xaf
  4156d1:	adc    dh,BYTE PTR [eax+eax*8+0x10dd1c76]
  4156d8:	add    BYTE PTR [edi+0x4d],cl
  4156db:	push   0xd911
  4156e0:	xor    eax,0xf6081102
  4156e5:	xchg   esi,eax
  4156e6:	add    BYTE PTR [edi+0x3d],bl
  4156e9:	test   al,0x57
  4156eb:	xor    DWORD PTR [edi-0x34f33d53],0xc
  4156f2:	add    eax,eax
  4156f4:	jno    0x415697
  4156f6:	add    BYTE PTR [edi+edx*8],al
  4156f9:	mov    bh,0xe8
  4156fb:	sbb    al,0xc1
  4156fd:	fld    QWORD PTR [eax]
  4156ff:	test   BYTE PTR [ebx-0x4174e56f],cl
  415705:	pop    esi
  415706:	pop    ebp
  415707:	inc    esp
  415708:	mov    ebx,0xb781b413
  41570d:	fld    QWORD PTR [eax]
  41570f:	add    BYTE PTR [ebx+ecx*2+0x85],cl
	...
  415726:	add    BYTE PTR [eax],al
  415728:	mov    dl,dh
  41572a:	add    cl,al
  41572c:	sbb    ebp,ebp
  41572e:	pop    es
  41572f:	sar    DWORD PTR [eax],0x2
  415732:	and    DWORD PTR [eax+0x76],ebp
  415735:	xchg   esi,eax
  415736:	add    dh,dh
  415738:	bound  eax,QWORD PTR ds:0x265ac1
  41573e:	add    eax,0xdae82c74
  415743:	ja     0x4157a8
  415745:	add    BYTE PTR [ebp+0x7a1dcec0],al
  41574b:	dec    esp
  41574c:	xchg   ah,bh
  41574e:	xchg   edi,eax
  415750:	into   
  415751:	loope  0x4156f6
  415753:	cwde   
  415754:	ret    
  415755:	mov    esp,0xffe28904
  41575a:	add    eax,DWORD PTR [eax]
  41575c:	bound  edi,QWORD PTR [ecx+0x4]
  41575f:	lahf   
  415760:	retf   0x48a0
  415763:	add    cl,ch
  415765:	jg     0x41576c
  415767:	call   DWORD PTR ds:0x663f7c00
  41576d:	xadd   DWORD PTR [eax+0x20],eax
  415771:	add    al,0x1
  415773:	xor    DWORD PTR [edx],esp
  415775:	addr16 in al,dx
  415777:	std    
  415778:	aas    
  415779:	xor    al,0x18
  41577b:	inc    eax
  41577c:	bound  ebp,QWORD PTR [edx+0x8]
  41577f:	ror    BYTE PTR [eax+0x560404c4],0x22
  415786:	fldenv [ebx-0x7bfefea5]
	...
  4157a0:	mov    ds:0x5789280b,al
  4157a5:	pop    eax
  4157a6:	fs inc esp
  4157a8:	bound  eax,QWORD PTR [edi+0x795e2445]
  4157ae:	test   BYTE PTR [eax],al
  4157b0:	arpl   WORD PTR [eax],ax
  4157b2:	add    DWORD PTR [edi+0x4520ca],ebx
  4157b8:	jmp    0xeb497d00
  4157bd:	ja     0x4157c4
  4157bf:	dec    DWORD PTR [ebp+0x22c031ff]
  4157c5:	fldcw  WORD PTR [ecx]
  4157c7:	sti    
  4157c8:	jge    0x4157dc
  4157ca:	les    ecx,FWORD PTR [edi]
  4157cc:	push   ecx
  4157cd:	cdq    
  4157ce:	out    0xf5,eax
  4157d0:	popa   
  4157d1:	sbb    DWORD PTR [ecx-0x65229db9],esi
  4157d7:	push   ebp
  4157d8:	(bad)  
  4157d9:	sahf   
  4157da:	pcmpgtw mm1,mm5
  4157dd:	(bad)  
  4157df:	xchg   DWORD PTR [edx],esp
  4157e1:	xchg   BYTE PTR [ebx-0xc4a397e],ah
  4157e7:	add    esi,DWORD PTR [ecx-0x7309e519]
  4157ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157ee:	cmp    eax,0x5f531031
  4157f3:	arpl   WORD PTR [esi+0x14a8cfd9],bx
  4157f9:	adc    DWORD PTR [esi-0x14e444b2],edi
  4157ff:	add    ecx,DWORD PTR [edi]
  415801:	out    0xd3,eax
  415803:	adc    BYTE PTR [eax],al
	...
  415815:	add    BYTE PTR [eax],al
  415817:	add    BYTE PTR [edx-0x6b0a2527],ah
  41581d:	adc    BYTE PTR [ebx],dl
  41581f:	sub    BYTE PTR [edx+0x64],dl
  415822:	scas   eax,DWORD PTR es:[edi]
  415823:	in     eax,dx
  415824:	push   ecx
  415825:	jge    0x41581b
  415827:	inc    ebx
  415828:	(bad)  
  415829:	aam    0x9f
  41582b:	ja     0x415895
  41582d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41582e:	adc    eax,0xdbb54eed
  415833:	js     0x4157e8
  415835:	add    al,0x9d
  415837:	xor    DWORD PTR [edx+0x1b4e3b04],esp
  41583d:	adc    BYTE PTR [eax+ecx*1],al
  415840:	push   ecx
  415841:	cdq    
  415842:	out    0xf5,eax
  415844:	popa   
  415845:	sbb    DWORD PTR [ecx-0x442a9db9],esi
  41584b:	cs mov ah,cl
  41584e:	rol    BYTE PTR [edx],0x62
  415851:	push   ebp
  415852:	add    BYTE PTR [ecx],ch
  415854:	or     al,ch
  415856:	std    
  415857:	aam    0x6d
  415859:	jmp    0x8898:0xe3fae940
  415860:	sbb    eax,0x626837d9
  415865:	adc    ch,bh
  415867:	jmp    0x29734458
  41586c:	mov    dh,0xa9
  41586e:	push   eax
  41586f:	mov    edx,0x88884833
  415874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415875:	fld1   
  415877:	mov    al,0x4f
  415879:	push   cs
  41587a:	std    
  41587b:	sbb    al,BYTE PTR [eax]
	...
  41588d:	add    BYTE PTR [eax],al
  41588f:	add    BYTE PTR [esi],ah
  415891:	cdq    
  415892:	rcl    DWORD PTR [ebx+0x5d],0xe
  415896:	adc    ecx,DWORD PTR ds:0x1a009950
  41589c:	push   ds
  41589d:	sbb    bh,ch
  41589f:	or     al,0xb2
  4158a1:	in     al,dx
  4158a2:	inc    eax
  4158a3:	jmp    0x140234b7
  4158a8:	call   0xe898:0x8a1704d9
  4158af:	bound  ecx,QWORD PTR [ecx+0x2165fd10]
  4158b5:	test   DWORD PTR [eax-0x6a],eax
  4158b8:	push   esp
  4158b9:	in     eax,0x11
  4158bb:	sub    DWORD PTR [esi+0x62],ebx
  4158be:	xor    esp,DWORD PTR [ecx+0x40]
  4158c1:	xchg   ebp,eax
  4158c2:	add    al,al
  4158c4:	(bad)  
  4158c6:	(bad)  
  4158c7:	call   0x6265e52d
  4158cc:	psraw  mm7,mm7
  4158cf:	call   0xd637b535
  4158d4:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4158d6:	std    
  4158d7:	cld    
  4158d8:	sbb    esp,ebp
  4158da:	inc    eax
  4158db:	jmp    0xb471bc
  4158e0:	mov    eax,0x985050ab
  4158e5:	sub    DWORD PTR [ebp+0x979a88],esi
  4158eb:	call   0x3c6062
  4158f0:	cwde   
  4158f1:	sbb    ebx,DWORD PTR [esi-0x3d]
	...
  415908:	lock adc eax,0xfcb5c35e
  41590e:	and    BYTE PTR [eax],bl
  415910:	outs   dx,BYTE PTR ds:[esi]
  415911:	fwait
  415912:	add    BYTE PTR [esi-0x30],dl
  415915:	or     BYTE PTR [ecx+0x7fc5cfc9],al
  41591b:	stc    
  41591c:	push   esp
  41591d:	mov    BYTE PTR [edx],dh
  41591f:	test   DWORD PTR [ebp-0x78],ecx
  415922:	test   BYTE PTR cs:[esi+0x1b],0x5a
  415927:	inc    esp
  415928:	dec    ebx
  415929:	(bad)  
  41592b:	and    eax,0x178a823
  415930:	cmp    ecx,DWORD PTR [edi+0x360774c0]
  415936:	cwde   
  415937:	popa   
  415938:	aas    
  415939:	aad    0x87
  41593b:	cmp    bl,0xd5
  41593e:	add    BYTE PTR [eax],al
  415940:	sbb    BYTE PTR [ebx+0x74e3a114],0x44
  415947:	add    BYTE PTR [eax+0x55],dh
  41594a:	add    al,0x1
  41594c:	sti    
  41594d:	fiadd  DWORD PTR [ebp-0x405f0cba]
  415953:	push   ebp
  415954:	push   eax
  415955:	xor    DWORD PTR [esi-0x1],edx
  415958:	into   
  415959:	fdivp  st(3),st
  41595b:	jne    0x415908
  41595d:	add    esi,DWORD PTR [ecx+0xc]
  415960:	xor    al,0x88
  415962:	or     bh,bh
  415964:	mov    esi,0xcb4011da
  415969:	(bad)  
  41596a:	push   ecx
  41596b:	or     BYTE PTR [eax],al
	...
  41597d:	add    BYTE PTR [eax],al
  41597f:	add    BYTE PTR [edx+0x7b],ah
  415982:	hlt    
  415983:	mov    DWORD PTR [eax+ebx*4-0x68620276],edx
  41598a:	jge    0x415952
  41598c:	xor    al,0x6d
  41598e:	ret    
  41598f:	adc    BYTE PTR [edx+0x6d],ah
  415992:	jle    0x415980
  415994:	sub    al,0xbf
  415996:	outs   dx,DWORD PTR ds:[esi]
  415997:	adc    al,0x7d
  415999:	ins    DWORD PTR es:[edi],dx
  41599a:	adc    ebp,edi
  41599c:	out    dx,eax
  41599d:	sti    
  41599e:	jmp    0x1028b416
  4159a3:	clc    
  4159a4:	dec    esi
  4159a5:	inc    eax
  4159a6:	add    DWORD PTR [ecx-0xf81f749],ecx
  4159ac:	jmp    0x4db5366e
  4159b1:	pop    es
  4159b2:	jmp    0x52c2:0x485e1c89
  4159b9:	add    BYTE PTR [eax-0x77],dl
  4159bc:	inc    esi
  4159bd:	(bad)  
  4159be:	jmp    0x7068a436
  4159c3:	adc    al,0x25
  4159c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159c6:	adc    al,0xfd
  4159c8:	xchg   edi,eax
  4159c9:	add    al,0xea
  4159cb:	jae    0x415a37
  4159cd:	dec    edi
  4159ce:	adc    BYTE PTR [eax],ch
  4159d0:	ja     0x415992
  4159d2:	add    al,0x89
  4159d4:	scas   eax,DWORD PTR es:[edi]
  4159d5:	clc    
  4159d6:	jge    0x4159c8
  4159d8:	jmp    0xf5893322
  4159dd:	outs   dx,BYTE PTR ds:[esi]
  4159de:	jmp    0xc2:0x47c62489
	...
  4159f5:	add    BYTE PTR [eax],al
  4159f7:	add    BYTE PTR [esi+0x0],cl
  4159fa:	push   eax
  4159fb:	mov    esi,ecx
  4159fd:	in     eax,dx
  4159fe:	jmp    0x70d0d476
  415a03:	adc    al,0xcd
  415a05:	or     al,0x11
  415a07:	std    
  415a08:	dec    edi
  415a09:	sub    al,0xea
  415a0b:	jae    0x415a77
  415a0d:	fldenv [esi+0x10]
  415a10:	xchg   ah,ah
  415a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a13:	add    ebx,ebx
  415a15:	mov    ds:0x61b27edf,eax
  415a1a:	sbb    eax,0x460e79db
  415a1f:	jmp    0xe4a0:0x489d16eb
  415a26:	out    0x5d,eax
  415a28:	push   esi
  415a29:	sub    DWORD PTR [edi-0x5],0x2a0fd921
  415a30:	jo     0x415a0c
  415a32:	out    0x36,eax
  415a34:	je     0x415a95
  415a36:	pushf  
  415a37:	out    0xdb,eax
  415a39:	xchg   edi,eax
  415a3a:	retf   
  415a3b:	push   es
  415a3c:	sbb    eax,0x6e6b3edd
  415a41:	fdiv   QWORD PTR [esi]
  415a43:	push   ebx
  415a44:	fs jae 0x415ab3
  415a47:	aad    0xce
  415a49:	mov    bl,0x81
  415a4b:	add    eax,0xce22739b
  415a50:	mov    bl,0xeb
  415a52:	jb     0x415ac4
  415a54:	addr16 test edx,ebp
  415a57:	repnz fld QWORD PTR [esi+0xe9c3]
	...
  415a6e:	add    BYTE PTR [eax],al
  415a70:	xchg   esi,eax
  415a71:	aam    0x37
  415a73:	push   edx
  415a74:	pop    ss
  415a75:	out    0xdb,eax
  415a77:	adc    al,0xa2
  415a79:	fsqrt  
  415a7b:	mov    edx,0x3ede19e1
  415a80:	or     eax,0xe3e01c63
  415a85:	sahf   
  415a86:	fwait
  415a87:	jmp    0xf7c36e67
  415a8c:	xor    bl,BYTE PTR [ecx]
  415a8e:	daa    
  415a8f:	(bad)
  415a92:	pop    DWORD PTR [ebp+0x357e0d29]
  415a98:	mov    ds:0xcfca0001,al
  415a9d:	xlat   BYTE PTR ds:[ebx]
  415a9e:	add    BYTE PTR [ebx+0x16ad962],ch
  415aa4:	push   ss
  415aa5:	inc    ecx
  415aa6:	or     BYTE PTR [ebp+0x58d70161],ah
  415aac:	pop    esp
  415aad:	(bad)  [ecx-0x78fbe0a5]
  415ab3:	les    esi,FWORD PTR [ebp+0x663d635a]
  415ab9:	bound  ecx,QWORD PTR [ebp-0xb]
  415abc:	pop    esi
  415abd:	push   ds
  415abe:	xor    DWORD PTR [eax-0x3e],0x61e900d9
  415ac5:	fiadd  WORD PTR [eax+eax*4+0x6200d966]
  415acc:	sar    DWORD PTR [ecx],1
  415ace:	add    cl,ch
  415ad0:	popa   
  415ad1:	pop    eax
  415ad2:	shl    dh,cl
	...
  415ae8:	aad    0x62
  415aea:	add    cl,ch
  415aec:	popa   
  415aed:	or     al,0x7c
  415aef:	in     eax,0xc6
  415af1:	mov    al,0x10
  415af3:	pop    esp
  415af4:	(bad)  
  415af5:	out    dx,al
  415af6:	cmc    
  415af7:	ret    0x3266
  415afa:	and    ecx,eax
  415afc:	scas   al,BYTE PTR es:[edi]
  415afd:	cwde   
  415afe:	or     BYTE PTR [edx],al
  415b00:	mov    eax,ds:0x1e2487c5
  415b05:	shr    DWORD PTR [edi-0x3],0x98
  415b09:	mov    BYTE PTR [eax],dl
  415b0b:	jmp    0xcede:0x91535432
  415b12:	add    BYTE PTR ds:0xed426292,dh
  415b18:	ficom  WORD PTR [eax]
  415b1a:	or     BYTE PTR [ebx],bl
  415b1c:	mov    ds:0x1091c05a,eax
  415b21:	add    DWORD PTR [edi-0x93639dc],eax
  415b27:	add    BYTE PTR [edx+0x7b],dl
  415b2a:	fdivr  QWORD PTR [ebx]
  415b2c:	dec    ebx
  415b2d:	test   DWORD PTR [esi],esi
  415b2f:	je     0x6549cdf9
  415b35:	mov    ebp,es
  415b37:	je     0x415b8b
  415b39:	pop    eax
  415b3a:	(bad)  
  415b3c:	mov    esp,0xc10300d7
  415b41:	aam    0xcb
  415b43:	cmp    edi,esi
  415b45:	add    ebp,DWORD PTR [edi+0x1a]
  415b48:	push   es
  415b49:	sbb    eax,0x474
	...
  415b5e:	add    BYTE PTR [eax],al
  415b60:	pusha  
  415b61:	dec    esi
  415b62:	jae    0x415b76
  415b64:	add    bl,cl
  415b66:	adc    BYTE PTR [ecx],ch
  415b68:	mov    cl,BYTE PTR [ebp+edi*8-0x79f039fe]
  415b6f:	add    eax,esi
  415b71:	jb     0x415b57
  415b73:	mov    esi,DWORD PTR [esi-0x7714ba09]
  415b79:	aad    0x52
  415b7b:	add    al,0x70
  415b7d:	push   0x7f
  415b7f:	dec    ebp
  415b80:	dec    edi
  415b81:	repz scas eax,DWORD PTR es:[edi]
  415b83:	add    DWORD PTR [eax+0x3],esp
  415b86:	xor    al,al
  415b88:	or     edx,DWORD PTR [esi]
  415b8a:	xchg   DWORD PTR [ebp+0x13],esp
  415b8d:	push   edi
  415b8e:	dec    ecx
  415b8f:	cld    
  415b90:	or     al,0xc8
  415b92:	shr    al,0x68
  415b95:	add    al,0x2
  415b97:	add    cl,cl
  415b99:	adc    ebp,edi
  415b9b:	imul   edi,edi,0x470898ae
  415ba1:	aad    0xe8
  415ba3:	or     edx,ecx
  415ba5:	xlat   BYTE PTR ds:[ebx]
  415ba6:	add    BYTE PTR [ebx-0x27b6734f],cl
  415bac:	mov    BYTE PTR [eax-0x4],bh
  415baf:	add    BYTE PTR [eax-0x36],dh
  415bb2:	cmp    al,0x8b
  415bb4:	bound  edi,QWORD PTR [esp+ebp*1-0x1b4a14b0]
  415bbb:	xor    bh,BYTE PTR [ecx+0x38e54788]
  415bc1:	rcr    BYTE PTR [eax+eax*1+0x0],0x0
	...
  415bd6:	add    BYTE PTR [eax],al
  415bd8:	xchg   edx,eax
  415bd9:	add    BYTE PTR [ecx],al
  415bdb:	push   eax
  415bdc:	dec    eax
  415bdd:	add    BYTE PTR [ebp+edi*8+0x4f],dl
  415be1:	fcom   QWORD PTR [ecx]
  415be3:	inc    eax
  415be4:	bound  eax,QWORD PTR [edi-0x33d0780c]
  415bea:	jg     0x415be2
  415bec:	push   ss
  415bed:	push   ds
  415bee:	jp     0x415c43
  415bf0:	add    BYTE PTR [edi+0x2b2be8b5],0x4
  415bf7:	add    bl,bl
  415bf9:	cmp    eax,0x44a283c5
  415bfe:	cs push 0x62
  415c01:	add    WORD PTR [esi-0x27],dx
  415c05:	ret    
  415c06:	jns    0x415bd0
  415c08:	jp     0x415bd9
  415c0a:	out    0xfd,al
  415c0c:	pop    ebp
  415c0d:	ja     0x415c76
  415c0f:	(bad)  
  415c11:	mov    edi,0xb81970
  415c16:	out    0x73,al
  415c18:	inc    edx
  415c19:	imul   ecx,DWORD PTR [ebx-0x3],0xffffffb7
  415c1d:	call   0xfcb7007
  415c22:	inc    ecx
  415c23:	add    cl,bl
  415c25:	pop    ss
  415c26:	out    dx,al
  415c27:	(bad)  [ecx+0x47]
  415c2a:	out    dx,al
  415c2b:	fldl2e 
  415c2d:	mov    esp,0x282589dd
  415c32:	mov    esp,0x7d00631e
  415c37:	(bad)  [edi+0x592a]
	...
  415c4d:	add    BYTE PTR [eax],al
  415c4f:	add    dl,ah
  415c51:	inc    DWORD PTR [eax]
  415c53:	push   0x62
  415c55:	fnstcw WORD PTR ds:0x9e3171e7
  415c5b:	adc    BYTE PTR [edx-0x1a],al
  415c5e:	daa    
  415c5f:	add    al,0x93
  415c61:	add    esp,DWORD PTR [eax+0x70]
  415c64:	scas   al,BYTE PTR es:[edi]
  415c65:	push   ebp
  415c66:	xor    al,0xe8
  415c68:	iret   
  415c69:	pop    ebp
  415c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c6b:	ficomp DWORD PTR [ecx-0x3a]
  415c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c6f:	inc    ebx
  415c70:	mov    ds:0xe3dc045d,eax
  415c75:	fwait
  415c76:	arpl   si,sp
  415c78:	jae    0x415c93
  415c7a:	dec    edi
  415c7b:	lea    esi,[edx+0x8c2e7d6]
  415c81:	in     eax,dx
  415c82:	mov    edi,0xe7956a7b
  415c87:	fistp  DWORD PTR [ecx+ecx*1]
  415c8a:	jmp    0x1be53992
  415c8f:	jp     0x415d06
  415c91:	push   ebp
  415c92:	(bad)  
  415c93:	out    0x62,eax
  415c95:	pop    esi
  415c96:	scas   al,BYTE PTR es:[edi]
  415c97:	daa    
  415c98:	arpl   WORD PTR [edx],dx
  415c9a:	jb     0x415d17
  415c9c:	loop   0x415c76
  415c9e:	out    0x3,eax
  415ca0:	loope  0x415cb4
  415ca2:	xchg   ebx,eax
  415ca3:	pop    esp
  415ca4:	jecxz  0x415ce7
  415ca6:	imul   eax,DWORD PTR [ebx],0x62
  415ca9:	(bad)  
  415cab:	ins    DWORD PTR es:[edi],dx
  415cac:	ret    0xbb56
  415caf:	sub    al,0xe5
  415cb1:	mov    cs,WORD PTR [edi]
  415cb3:	add    BYTE PTR [eax],0x0
	...
  415cc6:	add    BYTE PTR [eax],al
  415cc8:	je     0x415ca3
  415cca:	pop    ebx
  415ccb:	dec    edi
  415ccc:	fistp  DWORD PTR [edi-0x55e0ff15]
  415cd2:	(bad)  
  415cd3:	shr    bl,cl
  415cd5:	adc    DWORD PTR [eax+0x37],esp
  415cd8:	ss pop edi
  415cda:	mov    al,0x70
  415cdc:	mov    bl,0x54
  415cde:	fld    QWORD PTR [eax]
  415ce0:	daa    
  415ce1:	push   ebp
  415ce2:	add    BYTE PTR [edi],ch
  415ce4:	push   esi
  415ce5:	fcmovb st,st(5)
  415ce7:	pusha  
  415ce8:	xor    eax,0x64486fd
  415ced:	push   ebx
  415cee:	add    DWORD PTR [esi+ebx*1-0x72],esp
  415cf2:	and    eax,0xb5d5dd10
  415cf7:	test   eax,0xa981dcbb
  415cfc:	pusha  
  415cfd:	fcmovb st,st(5)
  415cff:	sbb    DWORD PTR [ecx],esi
  415d01:	push   es
  415d02:	push   ebx
  415d03:	loope  0x415d3f
  415d05:	adc    DWORD PTR [ebx-0x7641cd60],eax
  415d0b:	lods   al,BYTE PTR ds:[esi]
  415d0c:	lea    esp,[eax+0x8]
  415d0f:	push   0xffffffa3
  415d11:	fld    QWORD PTR [ecx+0x4b526229]
  415d17:	sub    eax,0x2f8114bb
  415d1c:	jb     0x415d70
  415d1e:	push   ebx
  415d1f:	adc    eax,0xa4813aab
  415d24:	test   DWORD PTR [esi],eax
  415d26:	mov    al,0xe8
  415d28:	call   0x0:0x2931d4
	...
  415d3f:	add    BYTE PTR [esi],ah
  415d41:	sbb    cl,BYTE PTR [ecx+0x4b5a8984]
  415d47:	adc    eax,0x1c0cb47
  415d4c:	sub    al,0xf6
  415d4e:	add    ecx,ebp
  415d50:	and    ebx,ebp
  415d52:	add    BYTE PTR [ebx-0x1e878ea7],dl
  415d58:	jge    0x415d33
  415d5a:	call   0x11c6ca4
  415d5f:	jb     0x415d7c
  415d61:	push   edx
  415d62:	out    dx,eax
  415d63:	sbb    ebx,DWORD PTR [esi]
  415d65:	pop    edx
  415d66:	arpl   bp,dx
  415d68:	popa   
  415d69:	push   edx
  415d6a:	dec    esi
  415d6b:	or     eax,0x2f6d9b
  415d70:	jnp    0x415d4e
  415d72:	add    BYTE PTR [eax],al
  415d74:	jle    0x415da0
  415d76:	je     0x415dc7
  415d78:	mov    BYTE PTR [eax+0x2d],al
  415d7b:	test   BYTE PTR [ebx],cl
  415d7d:	fadd   QWORD PTR [eax]
  415d7f:	adc    al,0x4d
  415d81:	enter  0xd5ff,0x72
  415d85:	xchg   edi,eax
  415d86:	fmul   DWORD PTR [ebx+0x74c586c1]
  415d8c:	mov    cl,0x8e
  415d8e:	cmp    al,0x31
  415d90:	push   eax
  415d91:	ret    0x310
  415d94:	cmc    
  415d95:	or     BYTE PTR [ecx-0x24],0x42
  415d99:	jg     0x415d7b
  415d9b:	add    DWORD PTR [esp+ebx*8],0x74
  415d9f:	push   ss
  415da0:	adc    ah,0x71
  415da3:	or     al,BYTE PTR [eax]
	...
  415db5:	add    BYTE PTR [eax],al
  415db7:	add    BYTE PTR [eax],dh
  415db9:	(bad)  
  415dba:	or     BYTE PTR [ecx-0x7802b476],cl
  415dc0:	mov    esi,0x7fc77f24
  415dc5:	pop    eax
  415dc6:	mov    ebp,0x7f1d3004
  415dcb:	ret    0x209f
  415dce:	lds    esi,FWORD PTR [ebx]
  415dd0:	dec    ebx
  415dd1:	pushf  
  415dd2:	mov    edi,0x3223de8b
  415dd7:	shl    bl,0xc6
  415dda:	jecxz  0x415d5f
  415ddc:	push   es
  415ddd:	(bad)  
  415dde:	cli    
  415ddf:	call   0x438bb8
  415de4:	jns    0x415dec
  415de6:	std    
  415de7:	adc    BYTE PTR [edi+0x4e],0x1
  415deb:	add    BYTE PTR [ebx-0x56],cl
  415dee:	push   ecx
  415def:	push   esi
  415df0:	int3   
  415df1:	mov    al,ds:0x58128b10
  415df6:	fisubr DWORD PTR [edx+0x3b]
  415df9:	ret    0x5c88
  415dfc:	(bad)  
  415dfd:	aam    0x25
  415dff:	std    
  415e00:	outs   dx,DWORD PTR ds:[esi]
  415e01:	enter  0x3ffa,0x62
  415e05:	jae    0x415dcf
  415e07:	or     al,0xde
  415e09:	cmp    edx,DWORD PTR [edi+0x39]
  415e0c:	jmp    0x60218695
  415e11:	lock add BYTE PTR [ebx-0x76d41b0c],al
  415e18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e19:	sbb    al,0xe5
  415e1b:	add    eax,DWORD PTR [eax]
	...
  415e2d:	add    BYTE PTR [eax],al
  415e2f:	add    BYTE PTR [edx-0x10],ah
  415e32:	xchg   ebp,edi
  415e34:	dec    esi
  415e35:	test   BYTE PTR [ebp-0x13b1262b],0xe5
  415e3c:	dec    esp
  415e3d:	icebp  
  415e3e:	add    BYTE PTR [ecx+0x7ebd759a],cl
  415e44:	gs jnp 0x415e00
  415e47:	mov    DWORD PTR [eax+ebp*4-0xf9ce493],ebx
  415e4e:	(bad)  
  415e4f:	lock out 0xa6,eax
  415e52:	push   edi
  415e53:	inc    ebp
  415e54:	push   ecx
  415e55:	mov    al,0xeb
  415e57:	stos   DWORD PTR es:[edi],eax
  415e58:	(bad)  
  415e59:	lock add BYTE PTR ds:0x744cb3cc,cl
  415e60:	push   0xbbf05838
  415e65:	mov    ecx,0xeb620004
  415e6a:	pop    es
  415e6b:	mov    bh,0x98
  415e6d:	lock add BYTE PTR [eax],al
  415e70:	out    dx,eax
  415e71:	inc    ebx
  415e72:	and    eax,0x7d4e4a18
  415e77:	dec    DWORD PTR [ebp-0x75]
  415e7a:	aam    0x83
  415e7c:	dec    esp
  415e7d:	mov    WORD PTR [eax-0x6eb4177],?
  415e83:	mov    BYTE PTR ds:0xc8e8d27b,cl
  415e89:	fcomp  DWORD PTR [ebp+0x5]
  415e8c:	bound  edx,QWORD PTR [edx-0x41]
  415e8f:	mov    BYTE PTR [ebx],bh
  415e91:	xchg   al,ah
  415e93:	mov    es,WORD PTR [eax]
	...
  415ea5:	add    BYTE PTR [eax],al
  415ea7:	add    BYTE PTR [ecx+esi*8],ah
  415eaa:	pushf  
  415eab:	dec    DWORD PTR [esi+eax*1]
  415eae:	rcr    BYTE PTR [ecx+ebx*8+0xa000394],cl
  415eb5:	pop    ebp
  415eb6:	cmp    al,0x5
  415eb8:	bound  edx,QWORD PTR [ebx+eiz*2+0x27]
  415ebc:	adc    ebp,ebx
  415ebe:	out    0x3,eax
  415ec0:	js     0x415e9b
  415ec2:	jb     0x415e7e
  415ec4:	xor    dh,BYTE PTR [edx-0xf5b7146]
  415eca:	add    esi,ecx
  415ecc:	int    0x5
  415ece:	jb     0x415e8b
  415ed0:	loope  0x415ef3
  415ed2:	repz mov dh,0xe2
  415ed5:	test   bl,cl
  415ed7:	cli    
  415ed8:	mov    ch,0x52
  415eda:	jmp    0x6248:0x70e5228e
  415ee1:	(bad)  
  415ee2:	test   DWORD PTR [esi-0x870e95],0xce620594
  415eec:	jp     0x415f3f
  415eee:	jecxz  0x415ef4
  415ef0:	(bad)  
  415ef1:	retf   0x6b22
  415ef4:	mov    esi,0xe903e7db
  415ef9:	pushf  
  415efa:	add    esp,DWORD PTR [eax+edi*8]
  415efd:	fdiv   DWORD PTR [edi-0xa5eae1e]
  415f03:	inc    ebx
  415f04:	bound  ebx,QWORD PTR [eax+0x2b]
  415f07:	psubsw mm5,QWORD PTR [esi+0x3ae3]
	...
  415f1e:	add    BYTE PTR [eax],al
  415f20:	mov    ah,0x6f
  415f22:	jmp    0xebd03c63
  415f27:	mov    WORD PTR [ecx+0x5c0100d1],?
  415f2d:	dec    edx
  415f2e:	(bad)  
  415f2f:	call   0x479e7a10
  415f34:	mov    gs:0xd932a57f,al
  415f3a:	add    cl,ch
  415f3c:	pop    ds
  415f3d:	rol    BYTE PTR [eax],cl
  415f3f:	aaa    
  415f40:	fcomip st,st(4)
  415f42:	mov    BYTE PTR [edi],dh
  415f44:	jb     0x415f37
  415f46:	inc    esp
  415f47:	frstor [eax-0x27]
  415f4a:	push   0xffffffd9
  415f4c:	xchg   ecx,ebx
  415f4e:	push   esi
  415f4f:	scas   al,BYTE PTR es:[edi]
  415f50:	cmc    
  415f51:	lods   al,BYTE PTR ds:[esi]
  415f52:	push   ss
  415f53:	sub    DWORD PTR [esi+0x5a],ebx
  415f56:	(bad)  
  415f57:	in     eax,dx
  415f58:	and    ebx,DWORD PTR [edx]
  415f5a:	push   ebx
  415f5b:	(bad)  
  415f5d:	pop    edx
  415f5e:	in     al,dx
  415f5f:	fst    DWORD PTR [esi+0x59fc89ab]
  415f65:	scas   al,BYTE PTR es:[edi]
  415f66:	mov    ah,BYTE PTR [edi]
  415f68:	pop    esi
  415f69:	push   edx
  415f6a:	pop    esi
  415f6b:	mov    ch,0xe9
  415f6d:	cwde   
  415f6e:	cld    
  415f6f:	fmulp  st(3),st
  415f71:	sbb    DWORD PTR [eax-0x23],ecx
  415f74:	pop    eax
  415f75:	xchg   ecx,eax
  415f76:	jae    0x415f6b
  415f78:	stos   DWORD PTR es:[edi],eax
  415f79:	cwde   
  415f7a:	or     bl,al
  415f7c:	xchg   ch,bl
  415f7e:	(bad)  
  415f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f80:	pop    ecx
  415f81:	jno    0x415fed
  415f83:	jmp    0x415f88
	...
  415f98:	or     BYTE PTR [eax+0x50b7fb08],0x4b
  415f9f:	sbb    DWORD PTR [esi+0x61e9c89a],eax
  415fa5:	push   edx
  415fa6:	add    DWORD PTR [edx-0x2a],esi
  415fa9:	pop    ecx
  415faa:	(bad)  
  415fab:	call   0x3984b011
  415fb0:	mov    ss,WORD PTR [eax+0x46]
  415fb3:	test   eax,0xe8ab91
  415fb8:	retf   
  415fb9:	call   0x25f15fbe
  415fbe:	cmp    edi,0x75fc0db7
  415fc4:	aas    
  415fc5:	push   ebp
  415fc6:	(bad)  
  415fc7:	push   edi
  415fc8:	adc    eax,DWORD PTR [eax]
  415fca:	std    
  415fcb:	dec    DWORD PTR [ebx]
  415fcd:	push   ebp
  415fce:	adc    ebp,DWORD PTR [edx+0xa]
  415fd1:	push   ebp
  415fd2:	retf   
  415fd3:	dec    DWORD PTR [ecx]
  415fd5:	push   ebp
  415fd6:	into   
  415fd7:	call   0x3f64ad
  415fdc:	pop    esp
  415fdd:	xchg   edi,eax
  415fde:	das    
  415fdf:	rcl    BYTE PTR [eax+0x10],0xc2
  415fe3:	add    al,0xfb
  415fe5:	retf   0xec87
  415fe8:	sub    cl,al
  415fea:	push   esi
  415feb:	push   edi
  415fec:	push   eax
  415fed:	pop    ds
  415fee:	mov    DWORD PTR [ebp-0xd],ecx
  415ff1:	push   esp
  415ff2:	add    edx,DWORD PTR [ecx-0x24]
  415ff5:	stos   BYTE PTR es:[edi],al
  415ff6:	or     BYTE PTR [ebx-0x2a7ad],cl
	...
  416010:	retf   
  416011:	out    dx,eax
  416012:	shl    BYTE PTR [eax],1
  416014:	retf   
  416015:	xlat   BYTE PTR ds:[ebx]
  416016:	test   al,al
  416018:	mov    bh,0xed
  41601a:	sti    
  41601b:	jne    0x41605c
  41601d:	push   ebp
  41601e:	retf   
  41601f:	push   DWORD PTR [esi+0x7f75fb1f]
  416025:	out    dx,eax
  416026:	daa    
  416027:	add    BYTE PTR [ebx-0x29],bh
  41602a:	xchg   DWORD PTR [ebp+0x23],ecx
  41602d:	push   ebp
  41602e:	lock call 0x3f6539
  416034:	add    cl,ch
  416036:	push   esi
  416037:	push   DWORD PTR [esi-0x4767831]
  41603d:	(bad)  
  41603e:	add    BYTE PTR [eax],al
  416040:	jae    0x41604e
  416042:	add    BYTE PTR cs:[edx-0x10],ah
  416046:	adc    eax,eax
  416048:	out    0xea,eax
  41604a:	adc    BYTE PTR [ebp-0x38c0c3de],bl
  416050:	and    BYTE PTR [ecx],cl
  416052:	add    DWORD PTR [ebx-0x17],edx
  416055:	fadd   QWORD PTR [esp+eiz*8+0x1ced702a]
  41605c:	jo     0x41609c
  41605e:	xor    DWORD PTR [esi-0x4b],edx
  416061:	and    edx,DWORD PTR [edi+0x10]
  416064:	jmp    0x5eb53d92
  416069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41606a:	push   eax
  41606b:	and    al,0x42
  41606d:	sub    BYTE PTR [esi-0x76bc0205],bh
  416073:	lock add BYTE PTR [eax],al
	...
  416086:	add    BYTE PTR [eax],al
  416088:	fild   WORD PTR [edx+0x57]
  41608b:	or     cl,ah
  41608d:	cmp    ch,bl
  41608f:	out    0xe6,eax
  416091:	lock add BYTE PTR [eax],al
  416094:	out    dx,eax
  416095:	mov    ebx,0xc0b9312c
  41609a:	mov    WORD PTR [esi+eax*4-0x1],ds
  41609e:	mov    eax,DWORD PTR [esi+edi*2-0x8]
  4160a2:	fst    QWORD PTR [ebx]
  4160a4:	ret    0x411e
  4160a7:	add    BYTE PTR [ebp-0x3e],ah
  4160aa:	inc    edi
  4160ab:	or     BYTE PTR [edx],bl
  4160ad:	or     al,0x2e
  4160af:	dec    eax
  4160b0:	push   ebp
  4160b1:	jne    0x41603d
  4160b3:	add    BYTE PTR [edx-0x10],ah
  4160b6:	add    ebp,0x3905777a
  4160bc:	es fdiv st(4),st
  4160bf:	jo     0x4160c6
  4160c1:	fwait
  4160c2:	push   edi
  4160c3:	adc    cl,ch
  4160c5:	ins    DWORD PTR es:[edi],dx
  4160c6:	or     eax,0xf0abb7
  4160cb:	add    BYTE PTR [edx+0xa],bh
  4160ce:	jl     0x4160cf
  4160d0:	fldcw  WORD PTR gs:[ebx-0x3c]
  4160d4:	(bad)  
  4160d5:	outs   dx,BYTE PTR ds:[esi]
  4160d6:	loopne 0x4160d6
  4160d8:	data16 ins BYTE PTR es:[edi],dx
  4160da:	stos   DWORD PTR es:[edi],eax
  4160db:	daa    
  4160dc:	pop    edi
  4160dd:	out    dx,al
  4160de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160df:	sbb    BYTE PTR [edi],0xd1
  4160e2:	jb     0x4160eb
  4160e4:	jnp    0x416083
  4160e6:	ret    
  4160e7:	sti    
  4160e8:	mov    dl,0xaa
  4160ea:	(bad)  
  4160eb:	into   
	...
  416100:	cmp    dh,BYTE PTR [ebx+0x4b]
  416103:	add    eax,0x57a75d62
  416108:	scas   al,BYTE PTR es:[edi]
  416109:	add    dl,BYTE PTR [esp+esi*8-0x16]
  41610d:	stos   DWORD PTR es:[edi],eax
  41610e:	jecxz  0x4160ac
  416110:	sbb    cl,bl
  416112:	out    0x3,eax
  416114:	cli    
  416115:	aad    0x60
  416117:	add    al,0x62
  416119:	pop    ebp
  41611a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41611b:	push   edi
  41611c:	cmp    dh,cl
  41611e:	inc    ebp
  41611f:	in     al,0xed
  416121:	add    DWORD PTR [ecx+0x8],eax
  416124:	fldcw  WORD PTR [ebx+ecx*8-0x18f1eb09]
  41612b:	add    esp,DWORD PTR [edx+0x50]
  41612e:	sub    ebp,DWORD PTR [eax]
  416130:	jbe    0x416123
  416132:	test   BYTE PTR [ebx-0x3b],bh
  416135:	add    DWORD PTR [ebx-0x3d],ebp
  416138:	fidiv  WORD PTR ss:[edx-0x32]
  41613c:	retf   0x75a7
  41613f:	fisubr WORD PTR [edi+0x1e90d76e]
  416145:	mov    ebp,0x2373403
  41614a:	hlt    
  41614b:	xor    ebp,DWORD PTR [ecx+ebx*4-0x19]
  41614f:	adc    ch,BYTE PTR [ebx+0x230f2355]
  416155:	add    bh,BYTE PTR [ebx-0x2bfda9d9]
  41615b:	mov    edi,0xe9009950
  416160:	push   eax
  416161:	sbb    ch,al
  416163:	jmp    0x0:0x0
	...
  416176:	add    BYTE PTR [eax],al
  416178:	call   0x14b5:0xc56a00d8
  41617f:	jmp    0x9c406464
  416184:	push   eax
  416185:	cmp    DWORD PTR [ebx-0x1f],0x73168c63
  41618c:	jne    0x416143
  41618e:	or     eax,0xd9f22772
  416193:	add    cl,BYTE PTR [edi+edi*8]
  416196:	call   0x24cf347b
  41619b:	add    DWORD PTR [esi],ecx
  41619d:	fdivr  st,st(6)
  41619f:	fidiv  WORD PTR [edi]
  4161a1:	push   ebx
  4161a2:	push   cs
  4161a3:	rcl    DWORD PTR [ecx-0x1d],0xff
  4161a7:	call   0x34297186
  4161ac:	clc    
  4161ad:	(bad)  
  4161ae:	cld    
  4161af:	ins    BYTE PTR es:[edi],dx
  4161b0:	xchg   edx,eax
  4161b1:	mov    ch,0x14
  4161b3:	shl    DWORD PTR ds:0xdae8ff66,0x1a
  4161ba:	pop    ebp
  4161bb:	inc    edi
  4161bc:	fwait
  4161bd:	push   edx
  4161be:	jecxz  0x4161fc
  4161c0:	mov    al,ds:0xdb3800cd
  4161c5:	xchg   ebp,eax
  4161c6:	and    al,0xe1
  4161c8:	(bad)  
  4161c9:	into   
  4161ca:	mov    dh,0x29
  4161cc:	arpl   WORD PTR [edx-0x18],bx
  4161cf:	adc    DWORD PTR [edx],ebx
  4161d1:	jmp    0xd64b831e
  4161d6:	xor    ch,BYTE PTR [ecx-0x16ffd147]
	...
  4161f0:	popa   
  4161f1:	push   esp
  4161f2:	outs   dx,DWORD PTR ds:[esi]
  4161f3:	add    DWORD PTR [ebx+0x59d88bda],ecx
  4161f9:	push   edx
  4161fa:	(bad)  
  4161fb:	mov    ecx,0xa8524c
  416200:	pop    es
  416201:	fadd   QWORD PTR [eax]
  416203:	add    ah,cl
  416205:	dec    edi
  416206:	cmp    eax,0x50416828
  41620b:	mov    esi,DWORD PTR [eax]
  41620d:	push   esp
  41620e:	inc    esp
  41620f:	and    al,0x5f
  416211:	sbb    eax,0x9c59e011
  416216:	add    BYTE PTR [ebx-0x367e2ffb],cl
  41621c:	out    dx,eax
  41621d:	or     cl,BYTE PTR [eax+0x39f43356]
  416223:	sbb    cl,BYTE PTR [edx-0x24]
  416226:	xchg   eax,edi
  416228:	rcl    BYTE PTR [edi-0x480076f8],0x18
  41622f:	(bad)  
  416230:	mov    edi,0xeff10b1
  416235:	inc    eax
  416236:	adc    al,BYTE PTR [eax-0x5]
  416239:	push   eax
  41623a:	dec    esp
  41623b:	and    al,0xf7
  41623d:	(bad)  
  41623e:	mov    DWORD PTR [edi+ebp*2-0x27],eax
  416242:	cmp    edi,0x3065082e
  416248:	cs aad 0x0
  41624b:	push   0xffffffff
  41624d:	retf   
  41624e:	test   DWORD PTR [edi+ebp*4-0x4d],ebx
  416252:	call   0x416355
	...
  416267:	add    BYTE PTR [ebx*1-0xf04cd05],dh
  41626e:	ds mov esi,0xa6ab
  416274:	pop    ebp
  416275:	jae    0x41627b
  416277:	push   eax
  416278:	shr    edi,cl
  41627a:	mov    edx,0xc05834ff
  41627f:	je     0x416224
  416281:	push   eax
  416282:	dec    esp
  416283:	and    al,0x67
  416285:	enter  0xff56,0xaf
  416289:	mov    bh,0x20
  41628b:	push   edi
  41628c:	bound  ebx,QWORD PTR [edx-0x717a4247]
  416292:	test   eax,eax
  416294:	neg    BYTE PTR ds:0x2de94f36
  41629a:	and    eax,0x8dedf824
  41629f:	inc    esp
  4162a0:	ds push cs
  4162a2:	xor    eax,ebp
  4162a4:	push   eax
  4162a5:	ja     0x416283
  4162a7:	std    
  4162a8:	call   0x3b0eeb45
  4162ad:	arpl   dx,di
  4162af:	inc    BYTE PTR [ebp+0x7b]
  4162b2:	rcr    BYTE PTR [ebp-0x61],0x3b
  4162b6:	cmp    edx,DWORD PTR [edi+0x20]
  4162b9:	or     DWORD PTR [ecx],eax
  4162bb:	dec    edi
  4162bc:	xchg   ebx,eax
  4162bd:	arpl   WORD PTR [esi],si
  4162bf:	push   esi
  4162c0:	(bad)  
  4162c2:	xor    al,0x8b
  4162c4:	xchg   edi,eax
  4162c5:	call   0x10b15ffc
  4162ca:	idiv   BYTE PTR [edi]
	...
  4162e0:	bound  edi,QWORD PTR [ebx+0x48]
  4162e3:	and    al,0x3e
  4162e5:	jecxz  0x4162a4
  4162e7:	mov    DWORD PTR [ebx+0x6a431dec],esp
  4162ed:	mov    BYTE PTR [ecx],0xc6
  4162f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162f1:	int3   
  4162f2:	cmc    
  4162f3:	(bad)  
  4162f4:	clc    
  4162f5:	and    BYTE PTR [esi-0x3526701],cl
  4162fb:	or     al,0xdc
  4162fd:	adc    al,0x4
  4162ff:	add    BYTE PTR [edx+0x2e],ah
  416302:	inc    eax
  416303:	and    al,0x71
  416305:	xacquire xchg DWORD PTR [ebx+0x66],edi
  416309:	inc    ebx
  41630a:	mov    esi,0xed143687
  41630f:	ss dec ebp
  416311:	cld    
  416312:	not    BYTE PTR [eax-0x5b]
  416315:	inc    edi
  416316:	ficom  DWORD PTR [ebx]
  416318:	out    0xd9,al
  41631a:	stc    
  41631b:	inc    ebx
  41631c:	bound  edi,QWORD PTR [ecx+ebp*8-0x19269dfc]
  416323:	jg     0x4162a9
  416325:	(bad)  
  416327:	add    edi,DWORD PTR [edi-0x3a]
  41632a:	inc    esi
  41632b:	icebp  
  41632c:	shr    ebx,0xa7
  41632f:	add    esp,ebp
  416331:	fidivr WORD PTR [edi-0x18269d3d]
  416337:	ss pop edi
  416339:	les    ebx,FWORD PTR [edi+0x1ed99e69]
  41633f:	icebp  
  416340:	shr    ebx,0xa7
  416343:	add    eax,DWORD PTR [eax]
	...
  416355:	add    BYTE PTR [eax],al
  416357:	add    bl,bl
  416359:	add    BYTE PTR [ebx+ebx*8+0x6f],ah
  41635d:	push   ebp
  41635e:	pop    ds
  41635f:	add    al,0x62
  416361:	fst    DWORD PTR [ecx-0x347ad0e5]
  416367:	and    ecx,DWORD PTR [edi+0x7433d3fe]
  41636d:	cdq    
  41636e:	out    0x8d,eax
  416370:	sahf   
  416371:	mov    ch,0xfe
  416373:	imul   esp,edx,0xffffffd8
  416376:	out    0x3,eax
  416378:	ficom  DWORD PTR [ebp-0x665876f1]
  41637e:	sbb    dh,BYTE PTR [ebx*8+0x51dafb6d]
  416385:	mov    eax,ds:0x526243dd
  41638a:	adc    esp,DWORD PTR [eax]
  41638c:	call   0x132a:0xe0fbab5a
  416393:	(bad)  
  416394:	fist   DWORD PTR [ebx+ecx*8+0x1f46571f]
  41639b:	or     al,0x44
  41639d:	push   esp
  41639e:	mov    al,0x4f
  4163a0:	or     eax,0x654335ce
  4163a5:	sbb    BYTE PTR [eax],al
  4163a7:	mov    BYTE PTR [ecx+0x77],bl
  4163aa:	or     DWORD PTR [eax-0x9f5bb98],ebp
  4163b0:	lock sbb BYTE PTR [edi-0x174a925b],al
  4163b7:	fucom  st(7)
  4163b9:	sti    
  4163ba:	cld    
  4163bb:	bound  eax,QWORD PTR [eax]
	...
  4163cd:	add    BYTE PTR [eax],al
  4163cf:	add    BYTE PTR [edi-0x10ae27ae],ch
  4163d5:	inc    edx
  4163d6:	std    
  4163d7:	xor    DWORD PTR ds:[ebx-0x56de5175],ebp
  4163de:	std    
  4163df:	aam    0x91
  4163e1:	jecxz  0x416423
  4163e3:	jmp    0x6b02a750
  4163e8:	or     eax,0x993231ce
  4163ed:	test   DWORD PTR [eax],ebx
  4163ef:	mov    eax,ds:0x6968e8ad
  4163f4:	popa   
  4163f5:	fld    DWORD PTR [eax]
  4163f7:	ins    BYTE PTR es:[edi],dx
  4163f8:	mov    al,ds:0x8995199
  4163fd:	jmp    0xd9e33b5a
  416402:	sub    DWORD PTR [ebp+0x7207f26a],0x4f24b5a2
  41640c:	fst    DWORD PTR [esi-0x265a9dbe]
  416412:	mov    DWORD PTR [eax+0x72],esi
  416415:	cld    
  416416:	cld    
  416417:	jmp    0xe9fa4615
  41641c:	popa   
  41641d:	push   edx
  41641e:	inc    ebx
  41641f:	jmp    0xfd65d212
  416424:	test   BYTE PTR [ecx+ecx*4-0x303ad8f],cl
  41642b:	jmp    0xf07ed5c2
  416430:	and    cl,bl
  416432:	push   0x0
	...
  416447:	add    bl,cl
  416449:	fmul   DWORD PTR [eax]
  41644b:	add    bl,dl
  41644d:	outs   dx,DWORD PTR ds:[esi]
  41644e:	mov    eax,0xc07cbb00
  416453:	je     0x4163db
  416455:	in     eax,0xd7
  416457:	inc    ebx
  416458:	xor    bl,cl
  41645a:	xchg   edi,ecx
  41645c:	xor    ebp,esp
  41645e:	adc    al,0x1
  416460:	jnp    0x4164b1
  416462:	pop    ecx
  416463:	add    BYTE PTR [ebp-0x6623eedf],dh
  416469:	cwde   
  41646a:	add    BYTE PTR [edi-0x33],bl
  41646d:	ret    
  41646e:	mov    al,bl
  416470:	sar    BYTE PTR [edi-0x27c03dab],1
  416476:	push   ecx
  416477:	mov    ebp,DWORD PTR [edi-0x2e]
  41647a:	mov    dh,0x1
  41647c:	adc    al,0x4d
  41647e:	cli    
  41647f:	push   0x39
  416481:	mov    esi,0x8b0cfa37
  416486:	xor    BYTE PTR [ebx+0x1d74cb63],al
  41648c:	mov    eax,0xb275091d
  416491:	dec    ebp
  416492:	inc    ecx
  416493:	or     bl,al
  416495:	fmul   st(0),st
  416497:	jae    0x41649e
  416499:	pop    eax
  41649a:	jne    0x41649d
  41649c:	adc    DWORD PTR [edi+edi*8-0x786a36ce],ecx
  4164a3:	dec    ebp
  4164a4:	pop    ds
  4164a5:	dec    edi
  4164a6:	or     eax,0x414cf2eb
  4164ab:	or     al,0x0
	...
  4164bd:	add    BYTE PTR [eax],al
  4164bf:	add    ah,al
  4164c1:	xlat   BYTE PTR ds:[ebx]
  4164c2:	std    
  4164c3:	(bad)  
  4164c4:	sti    
  4164c5:	xlat   BYTE PTR ds:[ebx]
  4164c6:	das    
  4164c7:	ror    BYTE PTR [ebx+0x38350ee],0xce
  4164ce:	jl     0x41651e
  4164d0:	cmp    BYTE PTR [eax],ah
  4164d2:	or     al,0x7e
  4164d4:	bound  ebx,QWORD PTR [edx-0x7c]
  4164d7:	clc    
  4164d8:	outs   dx,DWORD PTR ds:[esi]
  4164d9:	out    0x28,al
  4164db:	cmp    ebx,edi
  4164dd:	icebp  
  4164de:	add    BYTE PTR [eax],al
  4164e0:	ss and eax,0x8285d7fe
  4164e6:	fadd   DWORD PTR [ecx+0x314ff09a]
  4164ec:	jmp    0x63066a1d
  4164f1:	out    dx,eax
  4164f2:	add    BYTE PTR [eax],al
  4164f4:	bound  edx,QWORD PTR [edi+0x1e2789b1]
  4164fa:	adc    al,0xc7
  4164fc:	cmp    eax,DWORD PTR [ebp-0xf]
  4164ff:	or     al,0xd7
  416501:	mov    al,0x42
  416503:	xchg   DWORD PTR [edx-0x69],ebx
  416506:	ror    DWORD PTR [ecx+0x3948f8a7],0x2a
  41650d:	pusha  
  41650e:	(bad)  
  41650f:	jg     0x4164dc
  416511:	icebp  
  416512:	or     dh,BYTE PTR [ecx+eiz*2+0x1f]
  416516:	mov    bl,0x42
  416518:	jmp    0x52c86a52
  41651d:	out    0xa9,eax
  41651f:	xor    DWORD PTR [edx],esp
  416521:	pop    esi
  416522:	ret    
  416523:	or     al,0x0
	...
  416535:	add    BYTE PTR [eax],al
  416537:	add    BYTE PTR [edx+0x5d],ah
  41653a:	mov    esp,gs
  41653c:	mov    ah,0x56
  41653e:	add    eax,DWORD PTR [edi-0x4c]
  416541:	add    ecx,DWORD PTR [ebx+0x4f4248ff]
  416547:	pop    ss
  416548:	loope  0x416572
  41654a:	or     dh,BYTE PTR [ebp+edx*4+0x6f]
  41654e:	fmul   QWORD PTR [ebx]
  416550:	outs   dx,BYTE PTR ds:[esi]
  416551:	in     al,dx
  416552:	adc    eax,eax
  416554:	stc    
  416555:	xchg   esp,eax
  416556:	mov    DWORD PTR [ebx+0x56],ecx
  416559:	sub    eax,DWORD PTR [ebx]
  41655b:	(bad)  
  41655c:	(bad)  
  41655e:	add    cl,ch
  416560:	sub    al,0xd9
  416562:	push   0xffffffdc
  416564:	pop    eax
  416565:	test   ebp,ebx
  416567:	push   ebp
  416568:	mov    eax,0x3c098f56
  41656d:	lods   eax,DWORD PTR ds:[esi]
  41656e:	int3   
  41656f:	and    BYTE PTR [edx-0x27],0xe7
  416573:	dec    edi
  416574:	push   ecx
  416575:	aam    0x9f
  416577:	mov    bh,0xa7
  416579:	cli    
  41657a:	imul   ebx,esp,0x8b93839d
  416580:	and    ebp,ecx
  416582:	cs add al,0x63
  416585:	(bad)  
  416587:	add    edi,DWORD PTR [ebx-0x55]
  41658a:	bound  eax,QWORD PTR [ecx+0x6e]
  41658d:	(bad)  
  41658e:	and    BYTE PTR ds:0x70f6e929,bl
  416594:	lods   eax,DWORD PTR ds:[esi]
  416595:	cwde   
  416596:	jo     0x4165a4
  416598:	jnp    0x416575
  41659a:	bound  eax,QWORD PTR [ecx+0x0]
	...
  4165ad:	add    BYTE PTR [eax],al
  4165af:	add    BYTE PTR [esi+0x12],ch
  4165b2:	out    0x4,eax
  4165b4:	(bad)  
  4165b5:	(bad)  
  4165b7:	jmp    0xd3cc:0xbacbe73
  4165be:	addr16 pop ebp
  4165c0:	aas    
  4165c1:	int3   
  4165c2:	xchg   ebx,eax
  4165c3:	add    dh,BYTE PTR [ebx+0x3]
  4165c6:	lods   eax,DWORD PTR ds:[esi]
  4165c7:	mov    ah,BYTE PTR [ecx+0x731470cd]
  4165cd:	sbb    DWORD PTR [edi-0x24e846cb],esp
  4165d3:	add    esp,ebx
  4165d5:	in     al,dx
  4165d6:	imul   BYTE PTR ds:0x12e04eb7
  4165dc:	or     al,0x50
  4165de:	pop    ebx
  4165df:	and    BYTE PTR [edx-0x40],dl
  4165e2:	push   esi
  4165e3:	add    BYTE PTR [edi+0x4b],ah
  4165e6:	xchg   ebp,eax
  4165e7:	add    esp,DWORD PTR [edx-0x27]
  4165ea:	sbb    dl,BYTE PTR [ebx]
  4165ec:	or     esp,DWORD PTR [eax+eax*1-0x7868389e]
  4165f3:	cmp    eax,0x4587e582
  4165f8:	sbb    ch,0xc5
  4165fb:	and    eax,0xe938e982
  416600:	popa   
  416601:	(bad)  [ecx-0x17f19f22]
  416607:	mov    bh,0xaf
  416609:	stc    
  41660a:	cld    
  41660b:	mov    eax,gs:0xe91f1685
  416611:	or     ebp,eax
  416613:	inc    esp
	...
  416628:	(bad)  
  416629:	fld    DWORD PTR [eax]
  41662b:	jb     0x41667a
  41662d:	mov    ch,0x10
  41662f:	scas   eax,DWORD PTR es:[edi]
  416630:	sbb    BYTE PTR [eax-0x18],bl
  416633:	adc    ecx,esp
  416635:	in     eax,dx
  416636:	aaa    
  416637:	inc    edx
  416638:	cs push eax
  41663a:	jmp    0x7c169b41
  41663f:	stos   DWORD PTR es:[edi],eax
  416640:	fcomp  DWORD PTR [esp+0x246de8d9]
  416647:	aad    0xe8
  416649:	out    0x8b,al
  41664b:	scas   eax,DWORD PTR es:[edi]
  41664c:	pop    ecx
  41664d:	fidivr DWORD PTR [edi-0x7456ca6d]
  416653:	test   al,0x69
  416655:	fcmovb st,st(1)
  416657:	mov    ecx,0xdf54cd0c
  41665c:	mov    eax,ds:0x5d2581d9
  416661:	pop    esp
  416662:	sar    BYTE PTR [ebp+eiz*2-0x74],0x89
  416667:	push   ds
  416668:	or     DWORD PTR [ebx+0x3],edi
  41666b:	jmp    0xd2c30ad1
  416670:	pushfw 
  416672:	sub    DWORD PTR [edx-0x1a924da2],0x89278d
  41667c:	das    
  41667d:	mov    ecx,0xb9478b18
  416682:	sbb    al,0x8b
  416684:	(bad)  
  416685:	mov    ecx,0xb9978b10
  41668a:	adc    al,0x46
	...
  4166a0:	js     0x4166fc
  4166a2:	sar    BYTE PTR [eax],0x38
  4166a5:	cmp    BYTE PTR [eax],bh
  4166a7:	mov    DWORD PTR [edi-0x47],ebx
  4166aa:	sbb    BYTE PTR [ecx-0x76e34679],cl
  4166b0:	jg     0x41666b
  4166b2:	adc    BYTE PTR [ecx+0x3b14b957],cl
  4166b8:	pushf  
  4166b9:	clc    
  4166ba:	or     ecx,DWORD PTR [eax+eiz*2-0x590004f2]
  4166c1:	mov    cl,0x5b
  4166c3:	pop    esi
  4166c4:	clc    
  4166c5:	sbb    BYTE PTR [eax],dl
  4166c7:	ret    
  4166c8:	mov    ebp,0x83247461
  4166cd:	lds    eax,FWORD PTR [edi-0x17e10f07]
  4166d3:	sub    edi,DWORD PTR [ebp-0x24]
  4166d6:	add    BYTE PTR [ebx+ecx*4-0x272df77],al
  4166dd:	jecxz  0x41672f
  4166df:	mov    edx,DWORD PTR [ebp+eax*1-0x23c4fa27]
  4166e6:	add    eax,0x8b52ead2
  4166ec:	push   esp
  4166ed:	add    eax,0xdc3b015f
  4166f2:	test   al,al
  4166f4:	scas   al,BYTE PTR es:[edi]
  4166f5:	imul   DWORD PTR [edi]
  4166f7:	ror    bl,0x0
  4166fa:	add    dh,BYTE PTR [ebx]
  4166fc:	dec    ebx
  4166fd:	scas   al,BYTE PTR es:[edi]
  4166fe:	pop    esi
  4166ff:	ret    0xdbff
  416702:	push   ecx
  416703:	mov    eax,DWORD PTR [eax]
	...
  416715:	add    BYTE PTR [eax],al
  416717:	add    BYTE PTR [edi],dl
  416719:	stos   DWORD PTR es:[edi],eax
  41671a:	dec    edi
  41671b:	push   esi
  41671c:	bound  esi,QWORD PTR [edi+0x19f64b85]
  416722:	neg    BYTE PTR [ebp-0x777fd9d]
  416728:	fbstp  TBYTE PTR [esi]
  41672a:	dec    ebp
  41672b:	dec    esi
  41672c:	jmp    0xd9c33ffd
  416731:	add    BYTE PTR [ebp+0x46],dl
  416734:	cmp    dl,ch
  416736:	data16 add ch,al
  416739:	or     al,0x59
  41673b:	outs   dx,BYTE PTR ds:[esi]
  41673c:	es add dl,ah
  41673f:	adc    edi,DWORD PTR [esi]
  416741:	hlt    
  416742:	inc    eax
  416743:	add    cl,bl
  416745:	jno    0x4167c5
  416747:	imul   BYTE PTR [esi]
  416749:	jmp    0x83a38dcd
  41674e:	pop    ebx
  41674f:	add    al,0x62
  416751:	pop    ebx
  416752:	push   DWORD PTR [eax]
  416754:	xchg   esp,eax
  416755:	test   bl,cl
  416757:	je     0x41679c
  416759:	imul   eax,ebx,0xffffff87
  41675c:	cmp    al,0x79
  41675e:	xor    eax,DWORD PTR [edx+ecx*4]
  416761:	ja     0x416736
  416763:	std    
  416764:	ins    DWORD PTR es:[edi],dx
  416765:	adc    BYTE PTR [ebx+0x4],0x63
  416769:	xor    eax,0x986c8908
  41676e:	adc    BYTE PTR [ebx],0x63
  416771:	add    BYTE PTR [eax-0x77f8c632],cl
  416777:	(bad)  
  416778:	cmp    edx,ebp
  41677a:	xchg   ebp,ecx
	...
  416790:	dec    edx
  416791:	push   ebx
  416792:	out    dx,al
  416793:	(bad)  
  416794:	xor    eax,0x8c5dc114
  416799:	cmp    ecx,edx
  41679b:	rcl    DWORD PTR [ecx+0x13892c4e],0xd9
  4167a2:	sbb    edi,edi
  4167a4:	adc    eax,0xd90e8801
  4167a9:	fldenv [ebp+0x8]
  4167ac:	loope  0x4167ce
  4167ae:	push   ebx
  4167af:	adc    al,0xe1
  4167b1:	neg    BYTE PTR [edx+0x20]
  4167b4:	mov    esi,esi
  4167b6:	push   cs
  4167b7:	jg     0x4167d0
  4167b9:	add    ah,BYTE PTR [ebx-0x7]
  4167bc:	in     al,0xf6
  4167be:	jno    0x416794
  4167c0:	loope  0x4167b1
  4167c2:	cmp    ecx,DWORD PTR [eax]
  4167c4:	nop
  4167c5:	adc    al,dl
  4167c7:	sbb    al,0x37
  4167c9:	bound  edi,QWORD PTR [ebp-0x18261373]
  4167cf:	add    ecx,edx
  4167d1:	cmp    BYTE PTR [edx+0x5],0x62
  4167d5:	bound  ebx,QWORD PTR [ebp-0x2efe7582]
  4167db:	clc    
  4167dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167dd:	not    BYTE PTR [ecx-0x4526f40c]
  4167e3:	mov    ch,0xcd
  4167e5:	dec    edi
  4167e6:	out    0x3,eax
  4167e8:	bound  eax,QWORD PTR [ecx]
  4167ea:	mov    ecx,0x70f68576
  4167ef:	lods   al,BYTE PTR ds:[esi]
  4167f0:	pop    ds
  4167f1:	xchg   edi,eax
  4167f2:	popa   
  4167f3:	mov    DWORD PTR [eax],0x0
	...
  416805:	add    BYTE PTR [eax],al
  416807:	add    BYTE PTR [ebx],bl
  416809:	sbb    ah,BYTE PTR [edx+0x48]
  41680c:	inc    esi
  41680d:	fstp   QWORD PTR [edx-0x479df3c8]
  416813:	pop    es
  416814:	mov    bh,0x62
  416816:	out    dx,eax
  416817:	nop
  416818:	push   edi
  416819:	div    BYTE PTR [esi]
  41681b:	add    al,0x93
  41681d:	adc    cl,dl
  41681f:	rcr    bl,1
  416821:	or     DWORD PTR [edx+ebx*8-0x44],esp
  416825:	shl    DWORD PTR [edx-0x3],cl
  416828:	loop   0x416841
  41682a:	jmp    0x416895
  41682c:	jne    0x4167be
  41682e:	jmp    0x416889
  416830:	pop    ebp
  416831:	(bad)  
  416832:	call   0xf3895d
  416837:	cs mov ebx,0x276a3ef6
  41683d:	mov    cl,0x4e
  41683f:	pop    esp
  416840:	and    eax,0x7d3c5e94
  416845:	sbb    ebx,DWORD PTR [ecx-0x55]
  416848:	stc    
  416849:	cmc    
  41684a:	push   ecx
  41684b:	bound  edi,QWORD PTR [esi+0x281cc7a7]
  416851:	pusha  
  416852:	out    dx,eax
  416853:	jb     0x416813
  416855:	lods   eax,DWORD PTR ds:[esi]
  416856:	dec    ecx
  416857:	in     eax,dx
  416858:	xor    ebp,DWORD PTR [ebx+0x5f9e6255]
  41685e:	add    DWORD PTR [edi],ecx
  416860:	push   edi
  416861:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416862:	add    eax,0x81d51bd5
  416867:	test   eax,0xea10837d
	...
  416880:	cwde   
  416881:	mov    ch,bh
  416883:	std    
  416884:	jge    0x41685b
  416886:	std    
  416887:	aam    0x55
  416889:	iret   
  41688a:	inc    eax
  41688b:	jmp    0x644d856c
  416890:	mov    eax,ds:0x6caeff69
  416895:	push   ds
  416896:	inc    ebx
  416897:	push   0xffffffa8
  416899:	mov    al,0x39
  41689b:	ret    0x755d
  41689e:	shr    BYTE PTR [esi-0x5ba1e114],cl
  4168a4:	xor    al,0x1b
  4168a6:	or     cl,ch
  4168a8:	fwait
  4168a9:	mov    cs,WORD PTR [ecx+0x4fe57db5]
  4168af:	pop    esp
  4168b0:	cwde   
  4168b1:	aad    0x50
  4168b3:	jb     0x4168e3
  4168b5:	add    ah,BYTE PTR [ebx+0x1e]
  4168b8:	adc    bh,dh
  4168ba:	sub    BYTE PTR [ecx],0x90
  4168bd:	int    0x4f
  4168bf:	pop    esp
  4168c0:	cwde   
  4168c1:	mov    ebp,0x1ab00050
  4168c6:	call   0xfb4c855f
  4168cb:	test   DWORD PTR [ebx-0x79],ecx
  4168ce:	add    al,0x33
  4168d0:	cmp    edx,DWORD PTR [ebx]
  4168d2:	push   DWORD PTR [edx]
  4168d4:	mov    ebx,0xc95e5b9d
  4168d9:	loope  0x4168db
  4168db:	mov    eax,DWORD PTR [edi-0x3f]
  4168de:	or     BYTE PTR [ebx+0x4487e143],cl
	...
  4168f8:	push   edi
  4168f9:	fld    DWORD PTR [edi-0x371a38c0]
  4168ff:	jne    0x4168c9
  416901:	int    0xc0
  416903:	ret    
  416904:	mov    al,0x18
  416906:	jg     0x4168e8
  416908:	std    
  416909:	popf   
  41690a:	mov    edi,0x1b90cb6a
  41690f:	and    DWORD PTR [edx-0x23c79523],ecx
  416915:	mov    BYTE PTR [edi+edi*8],al
  416918:	jmp    0x7fd8:0x89db5210
  41691f:	les    esi,FWORD PTR [edi-0x58ab78e3]
  416925:	hlt    
  416926:	xchg   DWORD PTR [edi+edx*2-0xb],ecx
  41692a:	push   edx
  41692b:	mov    edx,DWORD PTR [edi-0x4672f744]
  416931:	lock sti 
  416933:	ss push cs
  416935:	mov    al,0x8
  416937:	call   0x4245fb
  41693c:	retf   
  41693d:	xchg   DWORD PTR [eax+eax*1],eax
  416940:	in     eax,dx
  416941:	mov    al,BYTE PTR [edx]
  416943:	div    DWORD PTR [ebx+0x1e]
  416946:	jg     0x416934
  416948:	dec    edi
  416949:	lods   eax,DWORD PTR ds:[esi]
  41694a:	xchg   DWORD PTR [edi+eiz*1-0x14],ebx
  41694e:	push   edx
  41694f:	mov    esp,DWORD PTR [edx-0x2f]
  416952:	jnp    0x4169aa
  416954:	push   WORD PTR [ebx]
  416957:	add    al,0xb9
  416959:	ror    BYTE PTR [eax+ebp*8],1
	...
  416970:	dec    esi
  416971:	lar    eax,WORD PTR [eax]
  416974:	faddp  st(1),st
  416976:	inc    DWORD PTR [ebx+0x101d5]
  41697c:	fld    st(3)
  41697e:	or     BYTE PTR [ecx-0x3217a],al
  416984:	loopne 0x41690c
  416986:	or     BYTE PTR [eax],al
  416988:	fstp   TBYTE PTR [ebp+0x6c551028]
  41698e:	jae    0x416990
  416990:	bound  eax,QWORD PTR [edx]
  416992:	adc    al,0xc7
  416994:	das    
  416995:	jns    0x4169d4
  416997:	and    al,0x72
  416999:	retf   
  41699a:	jnp    0x4169d5
  41699c:	popa   
  41699d:	cmp    DWORD PTR [ebx+ebp*8],edx
  4169a0:	out    0x41,eax
  4169a2:	dec    edi
  4169a3:	ss jno 0x4169df
  4169a6:	jle    0x4169fd
  4169a8:	pop    edx
  4169a9:	jns    0x4169e8
  4169ab:	and    al,0x82
  4169ad:	addr16 pop es
  4169af:	and    DWORD PTR [edx+0x61145ae9],0x8d523141
  4169b9:	or     al,0x35
  4169bb:	push   ss
  4169bc:	and    al,BYTE PTR [edx]
  4169be:	test   ah,al
  4169c0:	outs   dx,BYTE PTR ds:[esi]
  4169c1:	jge    0x416984
  4169c3:	je     0x4169b1
  4169c5:	jbe    0x416a04
  4169c7:	and    al,0x42
  4169c9:	cmp    eax,0x692abf84
  4169ce:	cmp    eax,0x38858224
  4169d3:	or     BYTE PTR [eax],al
	...
  4169e5:	add    BYTE PTR [eax],al
  4169e7:	add    BYTE PTR [ecx-0x31e7dae4],bl
  4169ed:	iret   
  4169ee:	cmp    BYTE PTR [ecx-0x2cf025ec],cl
  4169f4:	cmp    al,0xf3
  4169f6:	sbb    eax,0xf26d2287
  4169fb:	jl     0x4169a1
  4169fd:	frstor [edx-0x45]
  416a00:	mov    ebx,0x6c04bf20
  416a05:	jg     0x4169c6
  416a07:	inc    ebx
  416a08:	scas   eax,DWORD PTR es:[edi]
  416a09:	mov    BYTE PTR [eax+0x49],ah
  416a0c:	repnz shl WORD PTR [ebx],cl
  416a10:	ins    BYTE PTR es:[edi],dx
  416a11:	cdq    
  416a12:	out    0x82,eax
  416a14:	es out 0x72,al
  416a17:	dec    eax
  416a18:	ds leave 
  416a1a:	bound  eax,QWORD PTR [eax+0x46]
  416a1d:	int    0x27
  416a1f:	and    DWORD PTR [ebp+0x664302b1],0x60
  416a26:	and    ebp,DWORD PTR [eax]
  416a28:	jb     0x416a88
  416a2a:	sub    ebp,DWORD PTR [eax]
  416a2c:	push   0x60
  416a2e:	sbb    ebp,DWORD PTR [eax]
  416a30:	outs   dx,BYTE PTR ds:[esi]
  416a31:	loop   0x416aa6
  416a33:	dec    esp
  416a34:	mov    edi,0x192f9df2
  416a39:	pop    esi
  416a3a:	cmp    eax,0xcf073b08
  416a3f:	jp     0x4169d5
  416a41:	add    DWORD PTR [esi],edx
  416a43:	repnz pushf 
  416a45:	repnz ss add eax,0xc86a8e34
	...
  416a60:	pop    esi
  416a61:	pop    ss
  416a62:	fild   WORD PTR [ebx]
  416a64:	loope  0x416a6a
  416a66:	fild   QWORD PTR [edx+0x8]
  416a69:	fnstenv [esi+0x3f23eb38]
  416a6f:	push   ss
  416a70:	ins    DWORD PTR es:[edi],dx
  416a71:	repnz out 0xda,al
  416a74:	mov    cl,0x59
  416a76:	ret    
  416a77:	daa    
  416a78:	push   0xffffffd9
  416a7a:	xchg   ebp,eax
  416a7b:	ss jmp 0x416af2
  416a7e:	add    BYTE PTR ds:0xb5ef6062,cl
  416a84:	dec    ecx
  416a85:	cli    
  416a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a87:	inc    ecx
  416a88:	fld    DWORD PTR [bx+0x5da6]
  416a8d:	mov    WORD PTR [ecx-0x3f0f1d9],cs
  416a93:	push   cs
  416a94:	adc    eax,0x657cc05d
  416a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a9a:	rcl    BYTE PTR [edx],0x75
  416a9d:	pusha  
  416a9e:	push   esi
  416a9f:	in     eax,dx
  416aa0:	mov    ds:0x88b1d280,eax
  416aa5:	and    ebp,eax
  416aa7:	push   es
  416aa8:	lock repnz cld 
  416aab:	and    DWORD PTR gs:[ebp-0x16],ebp
  416aaf:	bound  esp,QWORD PTR [edi-0x775e7623]
  416ab5:	sbb    bh,BYTE PTR [eax]
  416ab7:	jmp    0xa28d:0x29387fdf
  416abe:	xchg   DWORD PTR [edi],ebp
  416ac0:	pop    edx
  416ac1:	hlt    
  416ac2:	adc    bl,BYTE PTR [ecx]
	...
  416ad8:	int3   
  416ad9:	mov    cl,0x0
  416adb:	push   0xffffffa5
  416add:	in     al,0xb0
  416adf:	call   0xe203fe68
  416ae4:	popa   
  416ae5:	pop    eax
  416ae6:	in     al,dx
  416ae7:	shl    DWORD PTR [eax-0x7a],1
  416aea:	push   esi
  416aeb:	push   ds
  416aec:	cmp    BYTE PTR [ecx-0x631d73cf],dh
  416af2:	and    al,0xdd
  416af4:	dec    edx
  416af5:	mov    DWORD PTR [ecx+0x58c59490],ecx
  416afb:	jmp    DWORD PTR [ecx]
  416afd:	(bad)  [ecx-0x766ec22b]
  416b03:	adc    al,0x36
  416b05:	retf   
  416b06:	inc    eax
  416b07:	jmp    0xcd3817
  416b0c:	or     eax,0xff8d50d6
  416b11:	mov    eax,0x2794502c
  416b16:	or     esi,DWORD PTR [esi-0x7ca44701]
  416b1c:	pop    DWORD PTR [ebx+esi*8]
  416b1f:	push   es
  416b20:	dec    edx
  416b21:	xchg   ebx,eax
  416b22:	std    
  416b23:	pop    eax
  416b24:	inc    esp
  416b25:	mov    ds:0xb8ff88bd,al
  416b2a:	inc    ebx
  416b2b:	data16 and cl,BYTE PTR [edi-0x6cfd8beb]
  416b32:	add    al,0x8d
  416b34:	mov    ebp,0xbf8d4cf1
  416b39:	mov    eax,0x5034
	...
  416b4e:	add    BYTE PTR [eax],al
  416b50:	add    al,0x27
  416b52:	mov    di,WORD PTR ds:0x7c48004
  416b59:	ja     0x416ae0
  416b5b:	inc    esp
  416b5c:	pop    edi
  416b5d:	(bad)
  416b60:	leave  
  416b61:	mov    BYTE PTR [ebx],bl
  416b63:	bound  cx,DWORD PTR [edi-0x6d4d8bd9]
  416b6a:	adc    BYTE PTR [ebp-0x72b2fd83],cl
  416b70:	pop    ecx
  416b72:	cmp    al,0x50
  416b74:	aam    0x26
  416b76:	mov    di,WORD PTR [ebp-0x2e]
  416b7a:	jg     0x416b40
  416b7c:	xchg   DWORD PTR [esi-0x7b],esi
  416b7f:	inc    esp
  416b80:	scas   eax,DWORD PTR es:[edi]
  416b81:	cwde   
  416b82:	push   0x1
  416b84:	push   es
  416b85:	mov    eax,ds:0x726b1424
  416b8a:	(bad)  
  416b8b:	call   0x3c8934
  416b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b91:	mov    esi,0x21085b59
  416b96:	cmp    dl,al
  416b98:	(bad)  
  416b99:	inc    BYTE PTR [eax]
  416b9b:	push   esi
  416b9c:	or     eax,0x1ae8c97b
  416ba1:	iret   
  416ba2:	add    DWORD PTR [eax],eax
  416ba4:	jmp    0xb45190ce
  416ba9:	jnp    0x416b66
  416bab:	xchg   DWORD PTR [esi+esi*8-0x48c61928],ebx
  416bb2:	retf   
  416bb3:	test   BYTE PTR [eax],al
	...
  416bc5:	add    BYTE PTR [eax],al
  416bc7:	add    BYTE PTR [edx],ah
  416bc9:	inc    esi
  416bca:	jmp    0xfd601257
  416bcf:	push   0x5000a22
  416bd4:	mov    BYTE PTR [edx],bl
  416bd6:	xor    edx,DWORD PTR [eax+0x15]
  416bd9:	add    eax,0x2a21631
  416bde:	add    ah,0x56
  416be1:	mov    dl,0x1
  416be3:	pop    ebp
  416be4:	pushf  
  416be5:	inc    esp
  416be6:	std    
  416be7:	call   DWORD PTR [edx-0x26a9ca4d]
  416bed:	lea    ebp,[eax]
  416bef:	adc    al,0x79
  416bf1:	or     BYTE PTR [ecx],cl
  416bf3:	mov    DWORD PTR [ebx-0x16d00032],esp
  416bf9:	lods   eax,DWORD PTR ds:[esi]
  416bfa:	sub    BYTE PTR [ebx+ebx*8],bl
  416bfd:	mov    ebp,0x4b911028
  416c02:	ja     0x416c80
  416c04:	xchg   BYTE PTR [edx],ah
  416c06:	adc    al,al
  416c08:	cmp    al,0xf9
  416c0a:	inc    ebx
  416c0b:	and    BYTE PTR [esi],dh
  416c0d:	scas   eax,DWORD PTR es:[edi]
  416c0e:	pop    edx
  416c0f:	add    al,0xd7
  416c11:	out    dx,al
  416c12:	in     al,dx
  416c13:	mov    ah,BYTE PTR [esi+esi*8]
  416c16:	xor    eax,0x35049550
  416c1b:	push   ss
  416c1c:	and    al,BYTE PTR [edx]
  416c1e:	add    ah,0x56
  416c21:	jne    0x416be4
  416c23:	je     0x416c6d
  416c25:	fnstcw WORD PTR [eax-0xc4ad988]
  416c2b:	add    BYTE PTR ss:[eax],al
	...
  416c3e:	add    BYTE PTR [eax],al
  416c40:	jp     0x416c9b
  416c42:	push   ebx
  416c43:	int3   
  416c44:	addr16 push ebp
  416c46:	daa    
  416c47:	cld    
  416c48:	(bad)  
  416c49:	sbb    DWORD PTR [ebx-0x3d],ebp
  416c4c:	rol    ebx,1
  416c4e:	arpl   sp,cx
  416c50:	ror    ecx,1
  416c52:	rol    DWORD PTR [edi],0xd9
  416c55:	xchg   edi,eax
  416c56:	retf   
  416c57:	ss xchg edx,eax
  416c59:	out    dx,al
  416c5a:	sti    
  416c5b:	xor    ecx,DWORD PTR [ecx+ebx*4-0x19]
  416c5f:	and    BYTE PTR [esi],0xde
  416c62:	pop    edx
  416c63:	add    dl,BYTE PTR [edi+0x26]
  416c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c67:	and    eax,DWORD PTR [eax+esi*4-0x1c71dc53]
  416c6e:	arpl   sp,cx
  416c70:	xchg   ecx,eax
  416c71:	aad    0x8d
  416c73:	jp     0x416c11
  416c75:	mov    ecx,0x1933023a
  416c7a:	dec    ebp
  416c7b:	or     eax,0x3153a59f
  416c80:	js     0x416c4b
  416c82:	fs pop ebx
  416c84:	ds pop esp
  416c86:	and    eax,0xc6893120
  416c8b:	icebp  
  416c8c:	xor    edi,eax
  416c8e:	daa    
  416c8f:	add    al,0xe3
  416c91:	adc    eax,0x65a280e3
  416c96:	add    DWORD PTR ds:0xefcb9deb,esi
  416c9c:	adc    BYTE PTR [ecx],al
  416c9e:	or     cl,al
  416ca0:	scas   eax,DWORD PTR es:[edi]
  416ca1:	out    dx,al
  416ca2:	imul   eax,esp,0x0
	...
  416cb5:	add    BYTE PTR [eax],al
  416cb7:	add    BYTE PTR [edi+0x4e],dl
  416cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cbb:	and    BYTE PTR [edx-0x68802e9c],0x64
  416cc2:	xlat   BYTE PTR ds:[ebx]
  416cc3:	pop    ebp
  416cc4:	jb     0x416d22
  416cc6:	add    BYTE PTR [edi],ch
  416cc8:	inc    edx
  416cc9:	mov    dl,BYTE PTR [eax+0x6e]
  416ccc:	jae    0x416c6c
  416cce:	push   ss
  416ccf:	test   eax,0xedc45861
  416cd4:	aam    0xee
  416cd6:	or     eax,0x66a5219e
  416cdb:	adc    BYTE PTR [eax-0x2a0c8b5b],ah
  416ce1:	in     al,dx
  416ce2:	jb     0x416cc9
  416ce4:	ret    
  416ce5:	push   esi
  416ce6:	inc    esi
  416ce7:	std    
  416ce8:	in     al,dx
  416ce9:	in     eax,dx
  416cea:	pop    ebp
  416ceb:	(bad)
  416cef:	ret    0x1b86
  416cf2:	or     al,0xe9
  416cf4:	jae    0x416d56
  416cf6:	out    dx,eax
  416cf7:	bound  ebp,QWORD PTR [edx-0x4b]
  416cfa:	or     BYTE PTR [edx-0x60],ah
  416cfd:	aad    0x69
  416cff:	xor    BYTE PTR [esi-0x28],ah
  416d02:	push   cs
  416d03:	xchg   edx,eax
  416d04:	and    DWORD PTR [ecx-0x20ab10ff],esi
  416d0a:	jb     0x416cee
  416d0c:	xor    DWORD PTR [edx+0x4f],esp
  416d0f:	and    DWORD PTR [esi],edx
  416d11:	jmp    0xa35524
  416d16:	add    bl,BYTE PTR [ebx]
  416d18:	push   ds
  416d19:	push   ebp
  416d1a:	rcl    BYTE PTR [ebp+0x0],0x0
	...
  416d2e:	add    BYTE PTR [eax],al
  416d30:	(bad)  
  416d31:	in     al,dx
  416d32:	dec    ebp
  416d33:	in     eax,dx
  416d34:	push   esp
  416d35:	xchg   DWORD PTR [edx+edx*2],eax
  416d38:	adc    al,0xb1
  416d3a:	mov    DWORD PTR [edi-0x17ef2657],esp
  416d40:	popa   
  416d41:	pop    edx
  416d43:	in     eax,dx
  416d44:	popa   
  416d45:	pop    eax
  416d46:	in     al,dx
  416d47:	fnstenv [edx+ecx*4+0x56]
  416d4b:	bound  edx,QWORD PTR ds:0x1d3640b5
  416d51:	ins    DWORD PTR es:[edi],dx
  416d52:	and    al,0x0
  416d54:	push   ebx
  416d55:	outs   dx,BYTE PTR ds:[esi]
  416d56:	in     eax,0x8d
  416d58:	aas    
  416d59:	mov    ecx,0xcea76a2c
  416d5e:	xrelease mov DWORD PTR [edi-0x33],edi
  416d62:	adc    al,0x8b
  416d64:	xor    al,0xcf
  416d66:	retf   
  416d67:	pop    ebx
  416d68:	icebp  
  416d69:	in     eax,dx
  416d6a:	adc    dh,BYTE PTR [edx]
  416d6c:	jns    0x416ddf
  416d6e:	add    al,0x11
  416d70:	or     DWORD PTR [ecx+esi*2+0x350b58f4],ebp
  416d77:	jne    0x416dc0
  416d79:	mov    ds:0xcce78d57,eax
  416d7e:	sbb    BYTE PTR [ebx],ch
  416d80:	push   esp
  416d81:	ins    DWORD PTR es:[edi],dx
  416d82:	push   esp
  416d83:	and    al,0x37
  416d85:	ins    BYTE PTR es:[edi],dx
  416d86:	fimul  WORD PTR [ebx-0x3f8026fa]
  416d8c:	inc    ebx
  416d8d:	aam    0xbf
  416d8f:	sub    eax,DWORD PTR [esi+ecx*4+0x14]
  416d93:	mov    eax,DWORD PTR [eax]
	...
  416da5:	add    BYTE PTR [eax],al
  416da7:	add    BYTE PTR [ebp+ebp*2+0x44],cl
  416dab:	and    al,0xd3
  416dad:	rol    DWORD PTR [edi+0xbec81f8],0x32
  416db4:	or     dh,BYTE PTR [ecx+0x4]
  416db7:	or     cl,BYTE PTR [edx-0x5c]
  416dba:	jno    0x416db0
  416dbc:	jo     0x416d5f
  416dbe:	and    al,0x48
  416dc0:	adc    BYTE PTR [ecx-0x16deefdc],0x89
  416dc7:	inc    esp
  416dc8:	add    DWORD PTR [di-0x73],ecx
  416dcc:	xchg   DWORD PTR [ecx-0x2f3afcc],edi
  416dd2:	push   eax
  416dd3:	push   ss
  416dd4:	mov    edx,ebp
  416dd6:	jg     0x416d9c
  416dd8:	scas   eax,DWORD PTR es:[edi]
  416dd9:	imul   eax,eax,0x78
  416ddc:	popa   
  416ddd:	outs   dx,BYTE PTR ds:[esi]
  416dde:	push   esp
  416ddf:	and    al,0x62
  416de1:	out    dx,al
  416de2:	and    DWORD PTR ds:[ecx+0x5e730c0a],0x9a8191d6
  416ded:	imul   esp,DWORD PTR [edi],0x5e
  416df0:	daa    
  416df1:	mov    DWORD PTR [ebx-0x3bfcd3c],0xdbbce8ff
  416dfb:	repnz adc DWORD PTR [eax+esi*1],esp
  416dff:	mov    DWORD PTR [ebx-0x31],ebp
  416e02:	shl    BYTE PTR [edi],cl
  416e04:	aad    0xf6
  416e06:	inc    esi
  416e07:	es jmp 0x46e9c0
	...
  416e1d:	add    BYTE PTR [eax],al
  416e1f:	add    cl,ah
  416e21:	sar    esp,0x69
  416e24:	outs   dx,BYTE PTR ds:[esi]
  416e25:	inc    ebx
  416e27:	push   eax
  416e28:	cmp    eax,0x35181d26
  416e2d:	in     eax,dx
  416e2e:	sub    al,0x16
  416e30:	mov    ds:0x56c48402,al
  416e35:	jge    0x416dfb
  416e37:	je     0x416ea9
  416e39:	xor    al,0x84
  416e3b:	rcr    DWORD PTR [edx+0x17],0x50
  416e3f:	add    al,0x8e
  416e41:	into   
  416e42:	or     eax,0x5
  416e45:	inc    ebx
  416e46:	daa    
  416e47:	pop    ecx
  416e48:	and    dh,dh
  416e4a:	add    BYTE PTR [ecx+0x31cf071c],cl
  416e50:	adc    BYTE PTR [ecx-0x2191fbcf],bh
  416e56:	bound  esi,QWORD PTR [edi]
  416e58:	xor    esp,edx
  416e5a:	dec    ebp
  416e5b:	push   es
  416e5c:	cmp    al,0xd9
  416e5e:	xor    DWORD PTR [esi+edx*2],esi
  416e61:	cli    
  416e62:	cmp    dl,0x6e
  416e65:	scas   eax,DWORD PTR es:[edi]
  416e66:	test   DWORD PTR [esp+esi*8],0xe2c2c73f
  416e6d:	fsub   DWORD PTR [ebx]
  416e6f:	cld    
  416e70:	fst    DWORD PTR gs:[ebx]
  416e73:	(bad)  
  416e75:	out    dx,al
  416e76:	cli    
  416e77:	clc    
  416e78:	lock sbb BYTE PTR [edx+0x6a17a215],ch
  416e7f:	xlat   BYTE PTR ds:[ebx]
  416e80:	cmp    cl,BYTE PTR [eax+0x3214]
	...
  416e96:	add    BYTE PTR [eax],al
  416e98:	(bad)  [ebx+ecx*8+0xb]
  416e9c:	pop    ss
  416e9d:	pop    esi
  416e9e:	or     esp,DWORD PTR [eax]
  416ea0:	ds jg  0x416e9e
  416ea3:	sbb    al,0x9c
  416ea5:	pop    edi
  416ea6:	pop    ebp
  416ea7:	sbb    al,0x84
  416ea9:	lea    esp,[ecx-0x1]
  416eac:	xchg   esp,eax
  416ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eae:	out    0x7b,al
  416eb0:	pop    esi
  416eb1:	scas   al,BYTE PTR es:[edi]
  416eb2:	scas   al,BYTE PTR es:[edi]
  416eb3:	ss shl ebp,1
  416eb6:	imul   esi,DWORD PTR [edi],0x7e
  416eb9:	leave  
  416eba:	shr    edi,0x8a
  416ebd:	add    eax,DWORD PTR [edx]
  416ebf:	mov    edx,0x15eb5f97
  416ec4:	jo     0x416e99
  416ec6:	outs   dx,DWORD PTR ds:[esi]
  416ec7:	push   DWORD PTR [ebx+edx*4-0x5a]
  416ecb:	dec    esi
  416ecc:	push   ss
  416ecd:	xor    bl,0x76
  416ed0:	sahf   
  416ed1:	mov    ch,0xdb
  416ed3:	xor    ebx,ecx
  416ed5:	xchg   ebp,eax
  416ed6:	ret    
  416ed7:	pop    ss
  416ed8:	mov    dl,0xea
  416eda:	fld    TBYTE PTR [edi]
  416edc:	push   esp
  416edd:	cdq    
  416ede:	out    0x84,eax
  416ee0:	push   ds
  416ee1:	fiadd  WORD PTR [esi+0x26]
  416ee4:	mov    DWORD PTR [esi+0x173ac06a],ecx
  416eea:	jmp    0x416eef
  416eec:	xor    DWORD PTR [esi-0x45],ebx
  416eef:	test   esi,eax
  416ef1:	in     eax,dx
  416ef2:	out    0x3,eax
  416ef4:	bound  ebx,QWORD PTR [esp+ebp*2+0x0]
  416ef8:	(bad)  
  416ef9:	jmp    0x0:0xb5ff
	...
  416f10:	jno    0x416e95
  416f12:	call   0x11abb6f
  416f17:	(bad)  
  416f19:	cwde   
  416f1a:	push   ecx
  416f1b:	ins    BYTE PTR es:[edi],dx
  416f1c:	imul   esp,ebp,0xffffffe7
  416f1f:	sub    eax,0x5cfceac2
  416f24:	jecxz  0x416f07
  416f26:	inc    BYTE PTR [esi-0x2b02765b]
  416f2c:	inc    ebp
  416f2d:	mov    DWORD PTR [eax-0x17],0x5c501960
  416f34:	jecxz  0x416f17
  416f36:	(bad)  
  416f37:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  416f39:	mov    DWORD PTR [ebx-0x4efe6a54],ecx
  416f3f:	lea    esp,[edi-0x27]
  416f42:	mov    esi,0x95c111
  416f47:	ins    DWORD PTR es:[edi],dx
  416f48:	es gs and ebx,edx
  416f4c:	push   ecx
  416f4d:	pop    edi
  416f4e:	sub    DWORD PTR [ebp+0x24],0xffffffec
  416f52:	cld    
  416f53:	cdq    
  416f54:	mov    edx,0xbf11f49e
  416f59:	xor    eax,0x19a5e8ff
  416f5e:	je     0x416f47
  416f60:	push   esi
  416f61:	or     DWORD PTR [ebx+0x2801259c],0x4c
  416f68:	fld    DWORD PTR [si-0x4cd7]
  416f6d:	mov    ecx,0xd99bdd6a
  416f72:	push   esi
  416f73:	out    dx,al
	...
  416f88:	repnz adc DWORD PTR [esi],0x107f6629
  416f8f:	ins    BYTE PTR es:[edi],dx
  416f90:	loop   0x416fe6
  416f92:	(bad)  
  416f93:	(bad)  
  416f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f95:	mov    BYTE PTR [esi-0x32],dl
  416f98:	rcr    BYTE PTR [ecx-0x2a84ffea],cl
  416f9e:	jg     0x416f64
  416fa0:	ret    
  416fa1:	(bad)  
  416fa2:	xlat   BYTE PTR ds:[ebx]
  416fa3:	lea    eax,[esi-0x20ca17f7]
  416fa9:	aam    0x0
  416fab:	mov    edx,0xd4d5
  416fb0:	ss jno 0x416fb7
  416fb3:	(bad)  
  416fb4:	hlt    
  416fb5:	adc    al,dh
  416fb7:	add    DWORD PTR [ebx-0x1d8ab56c],ecx
  416fbd:	mov    bl,0x8a
  416fbf:	ret    
  416fc0:	inc    eax
  416fc1:	sub    al,0xbf
  416fc3:	test   BYTE PTR [esi-0x74bb91fb],0xd4
  416fca:	jno    0x417001
  416fcc:	lods   eax,DWORD PTR ds:[esi]
  416fcd:	push   ebx
  416fce:	mov    WORD PTR [esi-0x41],gs
  416fd1:	aad    0x56
  416fd3:	call   FWORD PTR [esi-0x3]
  416fd6:	adc    DWORD PTR [eax+0x4b],eax
  416fd9:	pop    ss
  416fda:	add    eax,esi
  416fdc:	xor    eax,0xe0100a9
  416fe1:	clc    
  416fe2:	in     al,0x2f
  416fe4:	je     0x417005
  416fe6:	sti    
  416fe7:	test   BYTE PTR [ebx+0x830e98],cl
	...
  416ffd:	add    BYTE PTR [eax],al
  416fff:	add    BYTE PTR [esi],bl
  417001:	sbb    DWORD PTR [esi+0x44],ebp
  417004:	cmp    ebx,ebp
  417006:	or     BYTE PTR ds:0x448e7b,0xa
  41700d:	mov    bh,0xfb
  41700f:	adc    eax,0x3cea47
  417014:	in     eax,0x54
  417016:	cmp    BYTE PTR [ebx-0x31],ah
  417019:	fdivr  QWORD PTR [edi-0x78071eaa]
  41701f:	icebp  
  417020:	adc    ecx,DWORD PTR [ebx+edi*8-0x1]
  417024:	add    al,0xae
  417026:	push   esi
  417027:	jmp    DWORD PTR [edx-0x1b]
  41702a:	sub    al,0x16
  41702c:	and    dh,dl
  41702e:	jg     0x416ff4
  417030:	pop    esi
  417031:	daa    
  417032:	lods   al,BYTE PTR ds:[esi]
  417033:	sbb    DWORD PTR [edx+0x11c126b2],esp
  417039:	lds    ebp,FWORD PTR [esi]
  41703b:	push   ebp
  41703c:	dec    eax
  41703d:	jmp    0x552d:0x3cd9eb0f
  417044:	fld    DWORD PTR [ecx-0x3d]
  417047:	adc    edi,DWORD PTR [edx]
  417049:	call   0xf62a708e
  41704e:	xor    BYTE PTR [esi],dl
  417050:	and    dh,dl
  417052:	cmpxchg8b QWORD PTR [ebx-0x28]
  417056:	hlt    
  417057:	mov    ah,BYTE PTR [eax+ecx*1]
  41705a:	hlt    
  41705b:	inc    ebx
  41705c:	mov    ds:0xf818c473,eax
  417061:	in     eax,0x30
  417063:	mov    eax,DWORD PTR [eax]
	...
  417075:	add    BYTE PTR [eax],al
  417077:	add    BYTE PTR ds:0x31fd30ea,bl
  41707d:	jae    0x41703d
  41707f:	dec    eax
  417080:	xchg   ecx,eax
  417081:	mov    dl,0x7f
  417083:	les    ebp,FWORD PTR [edx+0x18]
  417086:	or     ch,BYTE PTR [esi]
  417088:	push   ebp
  417089:	ror    DWORD PTR ds:0x4838f7f5,1
  417090:	scas   al,BYTE PTR es:[edi]
  417091:	fnstcw WORD PTR [edi-0x18]
  417094:	push   edi
  417095:	inc    ebp
  417096:	cmp    ebp,DWORD PTR [edx+0x52]
  417099:	jne    0x4170d9
  41709b:	or     BYTE PTR [edx-0x4ddbc483],dh
  4170a1:	xlat   BYTE PTR ds:[ebx]
  4170a2:	scas   eax,DWORD PTR es:[edi]
  4170a3:	data16 fldcw WORD PTR [edi]
  4170a6:	dec    DWORD PTR [esp+ecx*8]
  4170a9:	aas    
  4170aa:	add    BYTE PTR [esi+0x23],ah
  4170ad:	sar    esp,1
  4170af:	sbb    BYTE PTR [esi],0x6
  4170b2:	pop    ebx
  4170b3:	or     DWORD PTR [edx],ebx
  4170b5:	(bad)  [ebp+0x7b]
  4170b8:	xchg   edi,eax
  4170b9:	lods   eax,DWORD PTR ds:[esi]
  4170ba:	shl    BYTE PTR [ecx],cl
  4170bc:	dec    eax
  4170bd:	frstor [ebp+edi*1+0x5e]
  4170c1:	mov    DWORD PTR [esp+edi*1+0x6e],ebx
  4170c5:	mov    esi,eax
  4170c7:	mov    al,0x3c
  4170c9:	push   esp
  4170ca:	sub    eax,0x2d2f6f02
  4170cf:	add    DWORD PTR [edx+ebx*1],edi
  4170d2:	enter  0xe2fb,0x1c
  4170d6:	repz pop ebp
  4170d8:	pop    ebx
  4170d9:	adc    DWORD PTR ds:0x7b,eax
	...
  4170ef:	add    BYTE PTR [edi],ch
  4170f1:	mov    ecx,0x84392636
  4170f6:	stos   BYTE PTR es:[edi],al
  4170f7:	cs fcomi st,st(4)
  4170fa:	imul   ebx,edi,0xf78b5b8a
  417100:	loop   0x41717e
  417102:	retf   
  417103:	sti    
  417104:	jne    0x417090
  417106:	mov    edx,0xbe8f23a8
  41710b:	jnp    0x41711b
  41710d:	mov    ebp,0xbdae7aee
  417112:	test   DWORD PTR [edx],0x30d9d5b9
  417118:	fst    DWORD PTR [ebp+0x383df00b]
  41711e:	jno    0x417122
  417120:	bound  ebx,QWORD PTR [ebp+0x27]
  417123:	dec    edi
  417124:	pushf  
  417125:	push   edx
  417126:	cmp    cl,BYTE PTR [edx]
  417128:	mov    ebp,edx
  41712a:	popf   
  41712b:	inc    edx
  41712c:	fistp  DWORD PTR [edi+ebp*8-0x4ad9da7]
  417133:	xchg   ebx,eax
  417134:	mov    dh,ah
  417136:	fnstcw WORD PTR [edx+0x2a3dcfa]
  41713c:	bound  edx,QWORD PTR [edx-0x1]
  41713f:	jge    0x417140
  417141:	ins    DWORD PTR es:[edi],dx
  417142:	add    cl,al
  417144:	loope  0x4171ab
  417146:	and    al,0xde
  417148:	popa   
  417149:	push   eax
  41714a:	dec    esp
  41714b:	or     eax,0x55d5504e
  417150:	imul   esi,ecx,0x66bd
	...
  417166:	add    BYTE PTR [eax],al
  417168:	pop    edi
  417169:	fldl2t 
  41716b:	in     al,0xf9
  41716d:	dec    edi
  41716e:	nop
  41716f:	call   0xd20ec1d5
  417174:	sub    edx,edx
  417176:	(bad)  
  417177:	call   0xddb511a7
  41717c:	ja     0x417196
  41717e:	jmp    0x8b43216e
  417183:	sub    eax,0x2fe8ca8a
  417188:	in     al,0xe6
  41718a:	cld    
  41718b:	arpl   WORD PTR [ebp-0x2adda17c],sp
  417191:	cli    
  417192:	pop    edx
  417193:	stos   DWORD PTR es:[edi],eax
  417194:	outs   dx,BYTE PTR ds:[esi]
  417195:	(bad)  [edi+0x1a]
  417198:	sbb    ecx,DWORD PTR [edi-0x57489dab]
  41719e:	fnstcw WORD PTR [edx-0x9db7227]
  4171a4:	in     al,dx
  4171a5:	mov    es,WORD PTR [ebx+eax*8]
  4171a8:	and    BYTE PTR [eax-0x7f46be39],ch
  4171ae:	(bad)  
  4171af:	call   0x9a4a0088
  4171b4:	(bad)  
  4171b5:	in     al,0x30
  4171b7:	and    ch,ah
  4171b9:	lock out 0x51,eax
  4171bc:	(bad)  
  4171bd:	out    0xfc,al
  4171bf:	jb     0x417149
  4171c1:	aad    0x51
  4171c3:	xchg   ebx,eax
  4171c4:	and    BYTE PTR [eax-0xf299d39],ch
  4171ca:	xchg   BYTE PTR [edx+0x0],dh
	...
  4171e0:	data16 (bad) [ecx-0x16aef500]
  4171e7:	je     0x417213
  4171e9:	push   ecx
  4171ea:	sti    
  4171eb:	je     0x4171fb
  4171ed:	push   ecx
  4171ee:	div    BYTE PTR [edx+edx*1-0x80]
  4171f2:	xchg   edi,edx
  4171f4:	jo     0x4171ff
  4171f6:	cmp    BYTE PTR [edi+eiz*2-0x3e],bl
  4171fa:	je     0x417203
  4171fc:	mov    ds:0xbb011888,eax
  417201:	ss add eax,ebp
  417204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417205:	(bad)  
  417206:	std    
  417207:	push   DWORD PTR [ecx]
  417209:	add    al,BYTE PTR [edi+0xc1ca3cd]
  41720f:	add    DWORD PTR [ebx+0x41e8cb56],edi
  417215:	(bad)  
  417216:	std    
  417217:	call   DWORD PTR [eax]
  417219:	or     al,ch
  41721b:	mov    bl,0x7f
  41721d:	fadd   QWORD PTR [eax]
  41721f:	mov    bh,BYTE PTR [eax+0x405d5e7a]
  417225:	test   BYTE PTR [edi+0xfd7f83],bh
  41722b:	add    al,0x0
  41722d:	adc    al,0x72
  41722f:	or     DWORD PTR [ecx],ebp
  417231:	fucomp st(0)
  417233:	je     0x417231
  417235:	sbb    bh,bl
  417237:	jmp    0x417282
  417239:	out    dx,eax
  41723a:	mov    esp,0x7fd947c2
  41723f:	jl     0x4172a8
  417241:	rol    DWORD PTR [ebx+ecx*4],1
	...
  417258:	xchg   ecx,eax
  417259:	scas   al,BYTE PTR es:[edi]
  41725a:	add    eax,0x59305932
  41725f:	jmp    FWORD PTR [edi+edx*1-0x19]
  417263:	add    ch,BYTE PTR [ecx]
  417265:	sbb    edx,eax
  417267:	add    al,0x3b
  417269:	sbb    BYTE PTR [esp+0x7],dh
  41726d:	in     al,dx
  41726e:	lds    edx,FWORD PTR [edx+0x62]
  417271:	add    BYTE PTR [edi+edi*1],0xfa
  417275:	xchg   ebp,eax
  417276:	mov    edi,0x5b105fd
  41727b:	add    ch,bh
  41727d:	outs   dx,BYTE PTR ds:[esi]
  41727e:	in     eax,0x3
  417280:	xor    DWORD PTR [ecx+0x32103253],edi
  417286:	test   eax,0xbefbe4a9
  41728b:	ret    0xf266
  41728e:	sub    esp,0xf082
  417294:	xchg   ecx,eax
  417295:	cmp    DWORD PTR [ebx+0x53],edx
  417298:	(bad)  [esi-0x18]
  41729b:	sub    esp,DWORD PTR [eax-0xe]
  41729e:	add    BYTE PTR [ebp-0x17],dl
  4172a1:	sub    BYTE PTR [esi+0x135e1d7],cl
  4172a7:	or     eax,0x20ddc
  4172ac:	bound  esp,QWORD PTR [edi+0x47]
  4172af:	add    al,0xfc
  4172b1:	or     BYTE PTR [ecx],cl
  4172b3:	or     eax,0x211e6
  4172b8:	(bad)  
  4172b9:	les    edx,FWORD PTR [ebp+edi*8+0x0]
	...
  4172cd:	add    BYTE PTR [eax],al
  4172cf:	add    BYTE PTR [edi-0x52],dl
  4172d2:	adc    eax,DWORD PTR [eax+0x62]
  4172d5:	outs   dx,DWORD PTR ds:[esi]
  4172d6:	mov    esp,0x9d7d5cff
  4172db:	add    BYTE PTR [edx-0xe],ah
  4172de:	mov    ecx,DWORD PTR [ebp+0x66]
  4172e1:	jne    0x41732b
  4172e3:	and    al,0x76
  4172e5:	and    al,BYTE PTR [edx+ecx*8+0x2ad39a4d]
  4172ec:	pusha  
  4172ed:	repnz test al,al
  4172f0:	ins    DWORD PTR es:[edi],dx
  4172f1:	jle    0x4172aa
  4172f3:	add    BYTE PTR [edx-0xe],ah
  4172f6:	lea    edx,[esi+eax*4-0x26]
  4172fa:	lods   al,BYTE PTR ds:[esi]
  4172fb:	sbb    al,0x20
  4172fd:	fldenv [esi]
  4172ff:	shl    esi,0x18
  417302:	xchg   ebx,eax
  417303:	cs jmp 0x41729a
  417306:	retf   
  417307:	pop    ds
  417308:	cli    
  417309:	neg    DWORD PTR [eax-0x8af9dfd]
  41730f:	xchg   ah,dh
  417311:	ins    BYTE PTR es:[edi],dx
  417312:	xchg   esi,eax
  417313:	mov    cs,WORD PTR [esi-0x24a64043]
  417319:	push   cs
  41731a:	call   FWORD PTR [ebx-0x79182597]
  417320:	mov    ds:0x15f5266c,al
  417325:	mov    DWORD PTR [edi],esi
  417327:	push   esp
  417328:	xor    bl,BYTE PTR [eax-0x45]
  41732b:	psubusw mm2,QWORD PTR [ebx+ecx*1+0x36cbef0]
  417333:	cld    
	...
  417348:	fcomp  QWORD PTR [ebx+ecx*1+0x23521df4]
  41734f:	call   0xe86cc5c1
  417354:	pop    ecx
  417355:	icebp  
  417356:	lahf   
  417357:	jle    0x4172f0
  417359:	jecxz  0x4173c5
  41735b:	ret    
  41735c:	push   ss
  41735d:	int3   
  41735e:	mov    ?,esi
  417360:	add    eax,0xe9042b7a
  417365:	pushf  
  417366:	ret    
  417367:	out    dx,eax
  417368:	and    al,0x89
  41736a:	fs dec edi
  41736c:	inc    esi
  41736d:	lds    edi,FWORD PTR [edi-0x40]
  417370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417371:	jecxz  0x4173d8
  417373:	lea    edi,[edx]
  417375:	push   ebp
  417376:	stos   DWORD PTR es:[edi],eax
  417377:	out    0x65,eax
  417379:	icebp  
  41737a:	repz jge 0x4173cc
  41737d:	jecxz  0x4173e0
  41737f:	sar    DWORD PTR [edx],1
  417381:	dec    edi
  417382:	repnz add ah,BYTE PTR [edx+0x54]
  417386:	stos   DWORD PTR es:[edi],eax
  417387:	out    0x59,eax
  417389:	icebp  
  41738a:	inc    DWORD PTR [esi]
  41738c:	cmp    al,0xd9
  41738e:	add    BYTE PTR [edx+0x44],al
  417391:	jno    0x417397
  417393:	call   0xa5cd4cf9
  417398:	std    
  417399:	scas   al,BYTE PTR es:[edi]
  41739a:	push   eax
  41739b:	push   ss
  41739c:	dec    edx
  41739d:	(bad)  
  41739f:	hlt    
  4173a0:	xor    eax,ecx
  4173a2:	inc    eax
  4173a3:	jmp    0xe8441251
  4173a8:	popa   
  4173a9:	fnstenv [ebp-0x62]
	...
  4173c0:	jbe    0x4173a4
  4173c2:	adc    BYTE PTR [edx],0x2d
  4173c5:	xchg   edx,eax
  4173c6:	xor    edx,eax
  4173c8:	jmp    0x611df4b5
  4173cd:	imul   ecx,DWORD PTR [edi],0x64
  4173d0:	sub    esp,ebx
  4173d2:	mov    bl,BYTE PTR [esi]
  4173d4:	push   esi
  4173d5:	icebp  
  4173d6:	sub    eax,0x89d9600f
  4173db:	mov    ecx,0xfe73ebeb
  4173e0:	jnp    0x4173c4
  4173e2:	push   ecx
  4173e3:	pop    ss
  4173e4:	rcr    DWORD PTR [ebp-0x77ce22dc],cl
  4173ea:	push   ecx
  4173eb:	sahf   
  4173ec:	jnp    0x417467
  4173ee:	adc    DWORD PTR [ecx],ebp
  4173f0:	pop    ax
  4173f2:	clc    
  4173f3:	leave  
  4173f4:	push   esp
  4173f5:	inc    esp
  4173f6:	shr    DWORD PTR [ebp-0x67],0x66
  4173fa:	adc    edi,DWORD PTR [edx+0x184f92a6]
  417400:	(bad)  [ebx]
  417402:	mov    ebx,DWORD PTR ds:0xe1e8a67a
  417408:	and    eax,0x1e6400d9
  41740d:	aam    0x93
  41740f:	sub    bl,cl
  417411:	adc    ch,al
  417413:	fistp  WORD PTR [eax-0x1e]
  417416:	cld    
  417417:	add    BYTE PTR ds:0x888a5983,al
  41741d:	jle    0x41749c
  41741f:	les    ebx,FWORD PTR [ebx-0x29]
	...
  417436:	add    BYTE PTR [eax],al
  417438:	jns    0x41740b
  41743a:	add    BYTE PTR [eax+0x4180a],dh
  417440:	jae    0x41748b
  417442:	or     al,0x1
  417444:	sti    
  417445:	pop    ss
  417446:	add    al,0x0
  417448:	enter  0x688b,0xcc
  41744c:	jbe    0x4173eb
  41744e:	add    BYTE PTR [edx+0xb],ch
  417451:	call   0x3e50742d
  417456:	adc    BYTE PTR [eax-0x5],al
  417459:	dec    esi
  41745a:	lock test DWORD PTR [ebp-0x2974cd57],edi
  417461:	inc    ecx
  417462:	adc    BYTE PTR [eax-0x45],al
  417465:	mov    ch,BYTE PTR [edx+0x0]
  417468:	mov    al,ds:0x9eff53c6
  41746d:	push   ecx
  41746e:	adc    BYTE PTR [eax-0x35],al
  417471:	push   eax
  417472:	shl    BYTE PTR [esp+edi*4-0x7b],0xfb
  417477:	adc    eax,0x40c5df
  41747c:	pop    esp
  41747d:	mov    edi,ebx
  41747f:	rcl    DWORD PTR [eax],cl
  417481:	push   ds
  417482:	cmp    edi,0x5650316e
  417488:	sub    ch,bl
  41748a:	sti    
  41748b:	adc    eax,0x40c5f3
  417490:	push   esp
  417491:	or     DWORD PTR [edx+0x41750c3],0x0
  417498:	hlt    
  417499:	test   eax,0x424
	...
  4174ae:	add    BYTE PTR [eax],al
  4174b0:	js     0x4174c0
  4174b2:	push   edx
  4174b3:	mov    dl,0x4a
  4174b5:	xor    eax,0x8762fcdf
  4174ba:	mov    esi,0xbdf25ec2
  4174bf:	je     0x417447
  4174c1:	out    dx,al
  4174c2:	icebp  
  4174c3:	(bad)  
  4174c4:	nop
  4174c5:	in     al,0xce
  4174c7:	call   0xfe001bdc
  4174cc:	and    bh,dh
  4174ce:	add    BYTE PTR [ebx-0x17],dl
  4174d1:	mov    BYTE PTR [esp+ebp*8+0xf642],0xdf
  4174d9:	jne    0x41747a
  4174db:	stc    
  4174dc:	add    eax,0x955652d0
  4174e1:	imul   ebp,DWORD PTR [edi+0x109b8e8],0x0
  4174e8:	fild   QWORD PTR [edx-0xd1a0091]
  4174ee:	mov    ebp,ecx
  4174f0:	retf   0xc3ad
  4174f3:	std    
  4174f4:	aad    0xc3
  4174f6:	xlat   BYTE PTR ds:[ebx]
  4174f7:	and    DWORD PTR [edx+0x6e6a488a],0x7d
  4174fe:	dec    ebp
  4174ff:	fcom   DWORD PTR [ebx]
  417501:	ret    0x5153
  417504:	adc    DWORD PTR [edi],ebx
  417506:	adc    eax,0x4b25384
  41750b:	and    DWORD PTR [edx+0x5b65f4b0],0xffffff96
  417512:	inc    ebp
  417513:	(bad)  
	...
  417528:	push   cs
  417529:	out    dx,al
  41752a:	jg     0x417524
  41752c:	jbe    0x4174f3
  41752e:	call   0x8a1a1063
  417533:	dec    esp
  417534:	daa    
  417535:	cmp    cl,BYTE PTR [ebp+0x7ac29a43]
  41753b:	or     al,0xf
  41753d:	scas   al,BYTE PTR es:[edi]
  41753e:	add    al,0x8b
  417540:	xlat   BYTE PTR ds:[ebx]
  417541:	inc    edx
  417542:	mov    ebp,0x4fd95dfd
  417547:	fcomp  st(3)
  417549:	(bad)  
  41754b:	xchg   BYTE PTR [edx],ah
  41754d:	sar    BYTE PTR [esp+eax*8-0x22],1
  417551:	sbb    ah,dl
  417553:	or     dh,BYTE PTR [ebx+0x19]
  417556:	int    0x8a
  417558:	loope  0x417562
  41755a:	cmp    al,0xbd
  41755c:	das    
  41755d:	and    al,BYTE PTR [ebp+0x3]
  417560:	(bad)  
  417561:	fstp   DWORD PTR [edi+eax*4+0x0]
  417565:	in     al,0x25
  417567:	mov    ebp,0x4aa7c0ea
  41756c:	xchg   ecx,eax
  41756d:	jecxz  0x4175ed
  41756f:	xlat   BYTE PTR ds:[ebx]
  417570:	ficomp DWORD PTR [eax+0x8e18ee7]
  417576:	add    al,0xbd
  417578:	test   DWORD PTR [eax-0x33c1e902],0x5de303a7
  417582:	fild   WORD PTR [edx]
  417584:	push   esp
  417585:	mov    ebx,0x775e4572
  41758a:	and    BYTE PTR [eax+eax*1],bl
	...
  41759d:	add    BYTE PTR [eax],al
  41759f:	add    BYTE PTR [esi-0x3d],dl
  4175a2:	aaa    
  4175a3:	mov    ebp,0x43f99571
  4175a8:	bound  edx,QWORD PTR [ebp+ebx*1+0x8]
  4175ac:	arpl   WORD PTR [ecx],bx
  4175ae:	pop    ss
  4175af:	(bad)  
  4175b0:	(bad)  [eax]
  4175b2:	mov    ah,0xbc
  4175b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175b5:	lock in eax,0x7d
  4175b8:	lahf   
  4175b9:	fist   WORD PTR [ecx-0x48b216f8]
  4175bf:	mov    esi,0x9f7edf8f
  4175c4:	add    eax,0x1c5ce7da
  4175c9:	test   BYTE PTR [eax+0x14d95ec1],dh
  4175cf:	mov    DWORD PTR [esi+0x5b],edi
  4175d2:	add    BYTE PTR [ebp-0x2213a657],cl
  4175d8:	in     al,dx
  4175d9:	lea    esp,[ebp*8+0x4c3ff1b2]
  4175e0:	popa   
  4175e1:	(bad)  [ebx-0x1728c25b]
  4175e7:	pop    edi
  4175e8:	or     al,0xda
  4175ea:	add    BYTE PTR [ebp+0x21],ch
  4175ed:	popw   es
  4175ef:	push   ecx
  4175f0:	inc    esp
  4175f1:	in     eax,dx
  4175f2:	(bad)  
  4175f3:	call   0xec2b54aa
  4175f8:	adc    eax,DWORD PTR [edx]
  4175fa:	mov    esi,DWORD PTR [ebp-0x4b172903]
  417600:	mov    esp,0x6300d9
	...
  417615:	add    BYTE PTR [eax],al
  417617:	add    BYTE PTR [edx],ah
  417619:	or     DWORD PTR [ecx+0x41b9c04],0xdbffc9e9
  417623:	call   0x2b409f89
  417628:	pop    ebp
  417629:	fld1   
  41762b:	mov    al,ds:0x99fcdebc
  417630:	pop    edi
  417631:	sbb    eax,DWORD PTR [ecx+ebp*8]
  417634:	xor    dl,BYTE PTR [eax-0x14]
  417637:	push   0xfffffffa
  417639:	leave  
  41763a:	or     DWORD PTR [esi+ebp*2-0x22],0x50111f51
  417642:	bnd jb 0x417634
  417645:	int3   
  417646:	xchg   BYTE PTR [ebp+0x5e],dh
  417649:	fld    DWORD PTR [eax]
  41764b:	cli    
  41764c:	mov    esp,0x68f15da6
  417651:	pop    edx
  417652:	scas   eax,DWORD PTR es:[edi]
  417653:	jmp    0x3ccd4fb9
  417658:	into   
  417659:	mov    eax,es:0xe8d961e9
  41765f:	add    BYTE PTR [eax-0xf00010f],bh
  417665:	xchg   edx,eax
  417666:	add    al,0x6a
  417668:	in     al,dx
  417669:	dec    edi
  41766a:	push   ecx
  41766b:	lock jecxz 0x41762d
  41766e:	fiadd  WORD PTR [eax]
  417670:	dec    ebx
  417671:	pop    ecx
  417672:	shl    BYTE PTR [ebp-0x7d],0xaf
  417676:	adc    BYTE PTR [ebx-0x54],dl
  417679:	call   0x41e4f2
	...
  41768e:	add    BYTE PTR [eax],al
  417690:	pop    es
  417691:	(bad)  
  417693:	adc    eax,0x40c427
  417698:	mov    al,0xd
  41769a:	or     ecx,0x5985c8e7
  4176a0:	add    ecx,DWORD PTR [ebp+0x55]
  4176a3:	or     al,0x44
  4176a5:	xchg   esp,eax
  4176a6:	add    al,0xbc
  4176a8:	jle    0x41763f
  4176aa:	add    bh,al
  4176ac:	cli    
  4176ad:	push   ebp
  4176ae:	test   DWORD PTR [eax+0xb],eax
  4176b1:	das    
  4176b2:	add    cl,BYTE PTR [ebx-0x764319d0]
  4176b8:	mov    esp,0xfcc981d1
  4176bd:	dec    eax
  4176be:	shr    bl,0xee
  4176c1:	push   eax
  4176c2:	push   ecx
  4176c3:	hlt    
  4176c4:	add    bh,BYTE PTR [esi+0x0]
  4176c7:	add    BYTE PTR [ebx-0x46d326cf],bh
  4176cd:	fld    DWORD PTR [edi-0x45438b2]
  4176d3:	lea    edx,[esi+0x29]
  4176d6:	call   0x11b45a2
  4176db:	test   ebx,edi
  4176dd:	test   al,0x39
  4176df:	push   0xffffffb7
  4176e1:	xchg   bl,bh
  4176e3:	xor    eax,0x44b343
  4176e8:	in     al,dx
  4176e9:	enter  0x1264,0x62
  4176ed:	mov    al,0x4
  4176ef:	mov    DWORD PTR [edx+0x74],esi
  4176f2:	scas   eax,DWORD PTR es:[edi]
  4176f3:	je     0x4176f5
	...
  417705:	add    BYTE PTR [eax],al
  417707:	add    BYTE PTR [edi+0x69],dl
  41770a:	push   edi
  41770b:	or     bl,bl
  41770d:	mov    ebp,0xec1cc508
  417712:	je     0x41769f
  417714:	mov    ds:0xa06c1f2,al
  417719:	pusha  
  41771a:	inc    ecx
  41771b:	add    BYTE PTR [edx],bh
  41771d:	and    edi,DWORD PTR [esi-0x3]
  417720:	inc    ebp
  417721:	jp     0x417762
  417723:	adc    BYTE PTR [ecx-0xf],cl
  417726:	(bad)  
  417727:	icebp  
  417728:	jno    0x4176dc
  41772a:	mov    WORD PTR [ebp+0x5a],?
  41772d:	jne    0x4176de
  41772f:	jmp    0x5e025836
  417734:	mov    esp,0x5ec2cc47
  417739:	repnz dec edi
  41773b:	mov    esi,edi
  41773d:	outs   dx,DWORD PTR ds:[esi]
  41773e:	popf   
  41773f:	clc    
  417740:	jecxz  0x417718
  417742:	test   DWORD PTR [eax],eax
  417744:	(bad)
  417749:	icebp  
  41774a:	push   ebp
  41774b:	push   esi
  41774c:	fnstenv [ecx+0x7a088952]
  417752:	cmp    eax,0x29647624
  417757:	xor    esp,ecx
  417759:	mov    ecx,0x91560834
  41775e:	cmp    DWORD PTR [ebx+0x5a],0xfffffff0
  417762:	mov    edi,esi
  417764:	jmp    0x4176ec
  417766:	loopne 0x417777
  417768:	jmp    0x417700
  41776a:	loopne 0x417777
	...
  417780:	xor    al,0x2
  417782:	mov    WORD PTR [ecx+0x5a],cs
  417785:	jne    0x4177d7
  417787:	and    al,0x72
  417789:	sbb    bh,bh
  41778b:	add    eax,0x8ce7d962
  417790:	push   ss
  417791:	mov    ch,0xf7
  417793:	test   BYTE PTR [ecx],cl
  417795:	shr    edx,1
  417797:	xor    DWORD PTR [edx+0x50],edx
  41779a:	and    cl,BYTE PTR [eax]
  41779c:	jmp    0x7a494326
  4177a1:	jmp    0xdff3:0x506203e3
  4177a8:	imul   edx,DWORD PTR [eax+0x1a],0xb8ce900
  4177af:	sbb    al,0x3a
  4177b1:	out    dx,al
  4177b2:	cwde   
  4177b3:	mov    ecx,0x30275547
  4177b8:	pop    ebx
  4177b9:	test   BYTE PTR [ebp+0x7b5a686],dh
  4177bf:	push   ebx
  4177c0:	fisttp DWORD PTR [ebx+eax*1-0x206e251c]
  4177c7:	stos   DWORD PTR es:[edi],eax
  4177c8:	aam    0xd4
  4177ca:	call   0x9b5a55d2
  4177cf:	(bad)  
  4177d0:	mov    ebp,0x500612d9
  4177d5:	sbb    DWORD PTR [esi+0x4509b59],esi
  4177db:	push   edi
  4177dc:	and    ch,dl
  4177de:	out    0x4e,eax
  4177e0:	fucomi st,st(4)
  4177e2:	imul   ebp,DWORD PTR [eax+0x0],0x0
	...
  4177f8:	push   esi
  4177f9:	pop    eax
  4177fa:	je     0x417807
  4177fc:	arpl   WORD PTR [eax-0x1914af6b],cx
  417802:	jno    0x4177be
  417804:	push   eax
  417805:	mov    bl,BYTE PTR [edx]
  417807:	fisttp QWORD PTR [ebp+0x282fdf7c]
  41780d:	pop    eax
  41780e:	dec    esp
  41780f:	or     al,0x5e
  417811:	push   eax
  417812:	stos   BYTE PTR es:[edi],al
  417813:	mov    cl,BYTE PTR [ecx]
  417815:	in     eax,0x6f
  417817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417819:	bound  eax,QWORD PTR [eax]
  41781b:	aam    0xda
  41781d:	bound  edx,QWORD PTR [eax]
  41781f:	pop    esp
  417820:	sbb    al,0xe5
  417822:	out    0x28,eax
  417824:	inc    ebx
  417825:	fld    DWORD PTR [eax]
  417827:	mov    eax,gs:0x14610867
  41782d:	ror    BYTE PTR [ecx+0x16f1b22c],cl
  417833:	jb     0x417861
  417835:	fisttp QWORD PTR [eax+0x4d51b21c]
  41783b:	loope  0x4177ee
  41783d:	mov    ch,bh
  41783f:	imul   DWORD PTR [ecx-0x24]
  417842:	jne    0x417831
  417844:	stc    
  417845:	add    eax,DWORD PTR [ebx]
  417847:	call   0xe284c9ad
  41784c:	out    dx,al
  41784d:	adc    al,ch
  41784f:	pop    edi
  417850:	(bad)  
  417851:	(bad)  
  417853:	jae    0x4178c1
  417855:	shr    cl,1
  417857:	jmp    0x417888
  417859:	sbb    ebx,DWORD PTR [ebp-0x69]
	...
  417870:	mov    esi,0x61e5c212
  417875:	xchg   BYTE PTR [ecx+0x7b58b015],cl
  41787b:	icebp  
  41787c:	pusha  
  41787d:	mov    BYTE PTR [esi-0x42],dl
  417880:	out    dx,al
  417881:	dec    DWORD PTR [eax-0x56a895f0]
  417887:	jmp    0x7ec351ed
  41788c:	pop    ecx
  41788d:	(bad)  ds:0xd9406d
  417893:	jmp    0xe9ac421f
  417898:	adc    al,0xa7
  41789a:	js     0x4178eb
  41789c:	and    bl,cl
  41789e:	std    
  41789f:	cld    
  4178a0:	pop    ebp
  4178a1:	mov    DWORD PTR [eax-0x17],0x82e9e8
  4178a8:	in     eax,dx
  4178a9:	test   eax,0xcd7c8b1c
  4178ae:	ret    
  4178af:	push   es
  4178b0:	cmp    edx,DWORD PTR [ecx+0x40]
  4178b3:	add    BYTE PTR [edx],al
  4178b5:	fwait
  4178b6:	add    al,0xc7
  4178b8:	cmp    eax,0x7b2710cd
  4178bd:	(bad)  
  4178be:	ret    
  4178bf:	inc    esi
  4178c0:	xchg   DWORD PTR [esi-0x12],edx
  4178c3:	mov    ebp,DWORD PTR ss:[edi]
  4178c6:	add    dh,BYTE PTR [ebx]
  4178c8:	in     eax,dx
  4178c9:	push   edi
  4178ca:	div    BYTE PTR [edx+edx*2+0x56]
  4178ce:	arpl   WORD PTR [eax],cx
  4178d0:	dec    ebx
  4178d1:	push   edi
  4178d2:	jns    0x4178dc
	...
  4178e8:	dec    edx
  4178e9:	arpl   WORD PTR [ebx],si
  4178eb:	mov    edx,edi
  4178ed:	aad    0x76
  4178ef:	sbb    edx,eax
  4178f1:	mov    es,WORD PTR [ecx*4+0xbe821fe]
  4178f8:	ds (bad) 
  4178fa:	add    BYTE PTR [ebx-0x38c8de02],cl
  417900:	call   0xa401de92
  417905:	(bad)  
  417906:	add    BYTE PTR [eax],al
  417908:	sbb    BYTE PTR [ebx-0x32397cf4],0x2
  41790f:	jbe    0x417971
  417911:	dec    esi
  417912:	inc    edi
  417913:	or     BYTE PTR [esi+0x61e8fc88],al
  417919:	fld    DWORD PTR [eax]
  41791b:	add    BYTE PTR [eax-0x68],dh
  41791e:	cld    
  41791f:	cmp    edi,DWORD PTR [esi+eiz*4]
  417922:	and    ebp,DWORD PTR [ecx-0x75]
  417925:	sub    eax,0x4ccbffff
  41792a:	inc    esi
  41792b:	or     BYTE PTR [eax+0x14],dl
  41792e:	call   0x1177f83
  417933:	test   DWORD PTR [edx+0x30],esp
  417936:	sub    eax,0x100b1209
  41793b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41793c:	push   eax
  41793d:	mov    al,0x4
  41793f:	mov    al,0x63
  417941:	pop    es
  417942:	pop    es
  417943:	mov    DWORD PTR [esi+edx*4+0x3],esp
  417947:	mov    DWORD PTR [edx+ebp*1+0x3211],esp
	...
  41795e:	add    BYTE PTR [eax],al
  417960:	mov    ds:0x9b595692,al
  417965:	sub    eax,0x3030fffd
  41796a:	inc    ecx
  41796b:	imul   si,cx,0xffbe
  41796f:	add    al,0x62
  417971:	retf   0x781
  417974:	pusha  
  417975:	mov    al,ds:0xc266c204
  41797a:	push   ecx
  41797b:	mov    DWORD PTR [esi+0x44],eax
  41797e:	pushf  
  41797f:	clc    
  417980:	mov    bl,0x43
  417982:	cmp    DWORD PTR [eax],ecx
  417984:	arpl   WORD PTR [ebx+0xce9554e],dx
  41798a:	xchg   edi,esi
  41798c:	lods   eax,DWORD PTR ds:[esi]
  41798d:	mov    esi,0x7739bff2
  417992:	out    dx,eax
  417993:	cmc    
  417994:	imul   ecx,DWORD PTR [edi-0x65bb8d04],0x60
  41799b:	add    BYTE PTR [edx-0x3e],ah
  41799e:	dec    esi
  41799f:	std    
  4179a0:	push   edi
  4179a1:	jp     0x4179c9
  4179a3:	inc    esp
  4179a4:	(bad)  
  4179a5:	not    DWORD PTR [eax]
  4179a7:	fs push eax
  4179a9:	add    BYTE PTR [eax],0x83
  4179ac:	and    ch,BYTE PTR [edi+0xd]
  4179af:	mov    DWORD PTR [edx],ebx
  4179b1:	jmp    0x417993
  4179b3:	popf   
  4179b4:	(bad)
  4179b9:	push   edi
  4179ba:	cld    
  4179bb:	or     ah,0x4e
  4179be:	ret    
  4179bf:	mov    DWORD PTR ds:0xabedd9,ebx
	...
  4179d5:	add    BYTE PTR [eax],al
  4179d7:	add    BYTE PTR [edi+0x78],ah
  4179da:	jmp    0x73c1:0x5e99e603
  4179e1:	iret   
  4179e2:	and    al,0xfb
  4179e4:	xor    cl,ah
  4179e6:	cmp    edx,DWORD PTR [ebx]
  4179e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179e9:	or     eax,0xdd2f8977
  4179ee:	shl    DWORD PTR [edx],0xf7
  4179f1:	fldl2t 
  4179f3:	cmp    eax,0x31f24e4b
  4179f8:	ja     0x417983
  4179fa:	jmp    0x5f759653
  4179ff:	lahf   
  417a00:	sbb    DWORD PTR [ebx+0x641103e6],ebx
  417a06:	xchg   esi,eax
  417a07:	xor    DWORD PTR [esi-0x1f],0xffffffe7
  417a0b:	add    esp,DWORD PTR [edx+0x2c]
  417a0e:	sbb    al,0x4d
  417a10:	jmp    0x4179e3
  417a12:	pop    edi
  417a13:	cmp    eax,0x52a5e66
  417a18:	fidiv  WORD PTR [esi-0x16]
  417a1b:	add    esp,DWORD PTR [edx+0x64]
  417a1e:	mov    ds:0x5fb47307,al
  417a23:	shl    ecx,1
  417a25:	mov    eax,ds:0xd8d77ff3
  417a2a:	jmp    0xe28a6532
  417a2f:	mov    BYTE PTR [esi+eiz*2-0x4c],bl
  417a33:	jmp    DWORD PTR [edx+0x29]
  417a36:	repnz dec edx
  417a38:	xchg   ecx,eax
  417a39:	into   
  417a3a:	rol    BYTE PTR gs:[eax],cl
	...
  417a4d:	add    BYTE PTR [eax],al
  417a4f:	add    BYTE PTR [esi+0x56],dh
  417a52:	sbb    BYTE PTR [ebx],0x93
  417a55:	fcom   st(5)
  417a57:	cmp    edi,DWORD PTR [ebp+ebx*1-0x16]
  417a5b:	mov    ah,0x51
  417a5d:	cmp    eax,0x646243d8
  417a62:	add    ecx,edi
  417a64:	push   esp
  417a65:	iret   
  417a66:	jne    0x417a36
  417a68:	ficomp DWORD PTR ds:0xabc7ae05
  417a6e:	(bad)
  417a72:	pop    ebx
  417a73:	in     eax,0xe8
  417a75:	adc    DWORD PTR ss:[esi+0x7034e16f],esp
  417a7c:	and    ecx,ebx
  417a7e:	ret    0x7227
  417a81:	fmul   DWORD PTR [ecx-0x3d9dd1]
  417a87:	popa   
  417a88:	rcr    BYTE PTR [ebx-0xd],cl
  417a8b:	sbb    eax,0xa1866423
  417a90:	mov    ah,0xd5
  417a92:	cld    
  417a93:	cmp    DWORD PTR [ecx],edx
  417a95:	inc    ebx
  417a96:	push   es
  417a97:	xor    BYTE PTR [esi+0x61e87317],bh
  417a9d:	pop    ebp
  417a9e:	shl    ebp,0x67
  417aa1:	bound  eax,QWORD PTR [esi-0x32af38f]
  417aa7:	sbb    ebx,ebx
  417aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aaa:	jmp    0xfd18abeb
  417aaf:	jb     0x417ad8
  417ab1:	pop    edi
  417ab2:	pop    esp
  417ab3:	in     eax,dx
	...
  417ac8:	or     edi,ebx
  417aca:	fsub   st(1),st
  417acc:	popa   
  417acd:	pop    edx
  417ace:	sar    DWORD PTR [ebp-0x2b03d6a6],0xbd
  417ad5:	jmp    0x417b17
  417ad7:	jmp    0xe429516d
  417adc:	fcmovu st,st(7)
  417ade:	callw  0x22bc
  417ae2:	cld    
  417ae3:	stc    
  417ae4:	repz xchg esi,eax
  417ae6:	pop    esp
  417ae7:	mov    bh,0x9a
  417ae9:	sahf   
  417aea:	mov    edi,0x882a61e5
  417aef:	add    BYTE PTR [edi+0x59],cl
  417af2:	in     eax,0xf8
  417af4:	dec    edx
  417af5:	jle    0x417b2c
  417af7:	push   es
  417af8:	retf   
  417af9:	ficom  DWORD PTR [ecx+0x56]
  417afc:	inc    eax
  417afd:	pop    es
  417afe:	or     DWORD PTR [edi+0x50],edx
  417b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b02:	cmp    dh,0xc9
  417b05:	clts   
  417b07:	xor    cl,BYTE PTR [ebx]
  417b09:	jne    0x417afc
  417b0b:	add    BYTE PTR [ebx-0x45fb9726],bh
  417b11:	fiadd  DWORD PTR [eax]
  417b13:	lea    eax,[edi-0x3f]
  417b16:	sub    BYTE PTR [eax-0x34],dl
  417b19:	push   cs
  417b1a:	add    eax,0xfaab6ff
  417b1f:	inc    eax
  417b20:	jnp    0x417b83
  417b22:	shl    DWORD PTR [ecx+ebp*8+0x58],0x45
  417b27:	and    al,0xa3
  417b29:	sub    bh,dh
  417b2b:	adc    eax,0x0
	...
  417b40:	mov    bh,0xee
  417b42:	inc    eax
  417b43:	add    dh,ch
  417b45:	and    BYTE PTR ds:0x108a7b28,ah
  417b4b:	sar    BYTE PTR [eax],1
  417b4d:	sbb    al,BYTE PTR [ecx]
  417b4f:	mov    edx,ebx
  417b51:	pop    eax
  417b52:	xchg   ebp,eax
  417b53:	and    al,0x6b
  417b55:	fild   WORD PTR [eax]
  417b57:	add    BYTE PTR [ebx+edx*2+0xe],cl
  417b5b:	data16 (bad) 
  417b5d:	xchg   esp,eax
  417b5e:	jne    0x417b8f
  417b60:	rcr    BYTE PTR [edi+0x5f15f82a],0xf4
  417b67:	das    
  417b68:	xlat   BYTE PTR ds:[ebx]
  417b69:	in     al,dx
  417b6a:	bound  eax,QWORD PTR [ebx+0xb752952]
  417b70:	and    eax,0xe73af45f
  417b75:	loopne 0x417b84
  417b77:	mov    bh,0x4a
  417b79:	jbe    0x417b7d
  417b7b:	push   0x62
  417b7d:	(bad)
  417b81:	rol    DWORD PTR [ebx+0x77cf60c2],0x4
  417b88:	jne    0x417bd5
  417b8a:	mov    ebp,0x39ffdf66
  417b8f:	rcl    DWORD PTR [ecx+0x60872700],cl
  417b95:	dec    ebp
  417b96:	push   esp
  417b97:	and    al,0x52
  417b99:	jns    0x417c04
  417b9b:	add    BYTE PTR [edx-0x40],ah
  417b9e:	cwde   
  417b9f:	xlat   BYTE PTR ds:[ebx]
  417ba0:	jp     0x417b64
  417ba2:	add    BYTE PTR [ebx+0x0],cl
	...
  417bb8:	fsubrp st(3),st
  417bba:	hlt    
  417bbb:	add    DWORD PTR [edx-0x40],esp
  417bbe:	push   eax
  417bbf:	mov    ebx,DWORD PTR [esi]
  417bc1:	in     al,0x18
  417bc3:	push   eax
  417bc4:	push   ecx
  417bc5:	xchg   DWORD PTR [edi-0x75],edx
  417bc8:	fisub  WORD PTR [ebx-0x3f9dfbbc]
  417bce:	sbb    BYTE PTR [ebx+eiz*2],al
  417bd1:	rol    BYTE PTR [eax],0x50
  417bd4:	jp     0x417b73
  417bd6:	(bad)  
  417bd7:	std    
  417bd8:	gs inc edx
  417bda:	les    edx,FWORD PTR [edi+eiz*8]
  417bdd:	cmp    bh,0x82
  417be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417be1:	dec    ebx
  417be2:	scas   eax,DWORD PTR es:[edi]
  417be3:	std    
  417be4:	(bad)  
  417be6:	call   0xe5005712
  417beb:	por    mm7,QWORD PTR [esi-0x1c]
  417bef:	adc    ebx,DWORD PTR ds:0x6717e487
  417bf5:	ret    0x0
  417bf8:	fistp  DWORD PTR [esi+0x14e123e4]
  417bfe:	push   es
  417bff:	jbe    0x417c74
  417c01:	cmp    eax,0x35b2fe4a
  417c06:	inc    ebx
  417c07:	or     BYTE PTR [edx+0x463f74d9],dh
  417c0d:	icebp  
  417c0e:	adc    DWORD PTR [esi],esp
  417c10:	xor    edx,edi
  417c12:	jmp    0xd23f5297
  417c17:	pop    es
  417c18:	(bad)  
  417c19:	fnstenv [edi+edi*1+0x0]
	...
  417c2d:	add    BYTE PTR [eax],al
  417c2f:	add    BYTE PTR [esi+0x513111e9],al
  417c35:	fldl2t 
  417c37:	xchg   DWORD PTR [edx+0x27c354e4],esp
  417c3d:	xor    edi,DWORD PTR [edi]
  417c3f:	jge    0x417c02
  417c41:	ss test al,0x8
  417c44:	bound  edi,QWORD PTR [ebx]
  417c46:	addr16 sti 
  417c48:	pop    ebp
  417c49:	mov    ecx,ebp
  417c4b:	lds    ebx,FWORD PTR [esi-0x27]
  417c4e:	dec    ebx
  417c4f:	test   DWORD PTR [ebp-0x23],esp
  417c52:	jns    0x417c57
  417c54:	mov    al,ds:0xdb59e9dd
  417c59:	retf   0x425f
  417c5c:	pop    esi
  417c5d:	pop    esi
  417c5e:	mov    cl,0x38
  417c60:	push   0x751de960
  417c65:	sar    edx,cl
  417c67:	test   BYTE PTR [ebx*8-0x1eeb8317],al
  417c6e:	ins    BYTE PTR es:[edi],dx
  417c6f:	mov    ebx,0x36edfd6
  417c74:	enter  0x72da,0x14
  417c78:	jecxz  0x417cb4
  417c7a:	loop   0x417c7f
  417c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c7d:	cwde   
  417c7e:	imul   esp,DWORD PTR [eax+0x3e9d706],0x600e5ceb
  417c88:	pusha  
  417c89:	fldl2t 
  417c8b:	jp     0x417c23
  417c8d:	std    
  417c8e:	fnstcw WORD PTR [esi+ebp*8-0x4]
  417c92:	xchg   ecx,eax
  417c93:	push   es
	...
  417ca8:	(bad)  
  417ca9:	fld    DWORD PTR [eax]
  417cab:	push   0xe
  417cad:	aad    0x56
  417caf:	inc    ecx
  417cb0:	sbb    bl,BYTE PTR [ecx+0x297d26fc]
  417cb6:	cld    
  417cb7:	push   0xe90cd5c4
  417cbc:	popa   
  417cbd:	out    0x83,al
  417cbf:	fsub   DWORD PTR [eax-0x27]
  417cc2:	add    BYTE PTR [eax-0x3ab29fd0],bl
  417cc8:	imul   esp,DWORD PTR [eax+ecx*4],0xff8bba65
  417ccf:	call   0xd212df35
  417cd4:	mov    dl,dh
  417cd6:	(bad)  
  417cd7:	call   0xd4c23e12
  417cdc:	repnz inc edi
  417cde:	pop    es
  417cdf:	xchg   ecx,eax
  417ce0:	mov    al,ds:0xf8e900d8
  417ce5:	call   0x2ba365eb
  417cea:	xor    BYTE PTR [edi+0x650cbfe4],bh
  417cf0:	ret    0xd8
  417cf3:	jmp    0x2b19870e
  417cf8:	outs   dx,DWORD PTR ds:[esi]
  417cf9:	call   0x753:0xe77a258a
  417d00:	(bad)  
  417d02:	or     al,0x6c
  417d04:	sub    dl,bl
  417d06:	add    cl,ch
  417d08:	(bad)  
  417d09:	sbb    eax,0xd525
	...
  417d1e:	add    BYTE PTR [eax],al
  417d20:	into   
  417d21:	adc    eax,0xc2226202
  417d26:	pop    edi
  417d27:	sub    edx,esi
  417d29:	aam    0x86
  417d2b:	sub    DWORD PTR [ebx+0x4a],esi
  417d2e:	push   edx
  417d2f:	fs ins DWORD PTR es:[edi],dx
  417d31:	std    
  417d32:	sbb    BYTE PTR [eax+0x88a9a6],bh
  417d38:	push   esp
  417d39:	outs   dx,BYTE PTR ds:[esi]
  417d3a:	add    ebx,DWORD PTR ds:0x4483d709
  417d40:	pop    edi
  417d41:	in     eax,dx
  417d42:	cmp    eax,0xa684d934
  417d48:	or     edx,edi
  417d4a:	add    BYTE PTR [ebp+0x334b0a4b],al
  417d50:	push   esp
  417d51:	fnstenv [ebp+0x252a86c7]
  417d57:	and    al,0xed
  417d59:	push   ebp
  417d5a:	or     eax,0x4122dbc5
  417d5f:	add    BYTE PTR [ebx-0xc],ah
  417d62:	and    eax,0x4555bb02
  417d67:	and    al,0xbf
  417d69:	lock std 
  417d6b:	mov    esi,DWORD PTR [ebx+0x63245559]
  417d71:	jne    0x417dc4
  417d73:	fdivr  DWORD PTR [ebx+0x5fc07fd6]
  417d79:	sbb    ah,BYTE PTR [edi+0x1b]
  417d7c:	cmp    al,0x25
  417d7e:	arpl   WORD PTR [ebx],di
  417d80:	rol    DWORD PTR [edi],cl
  417d82:	retf   
  417d83:	mov    eax,DWORD PTR [eax]
	...
  417d95:	add    BYTE PTR [eax],al
  417d97:	add    bh,bh
  417d99:	sar    BYTE PTR [eax+0x66d68b02],0x1b
  417da0:	and    bh,bl
  417da2:	cmp    ecx,edi
  417da4:	dec    esi
  417da5:	fidivr DWORD PTR [edx+0xd67bc6]
  417dab:	mov    DWORD PTR [ebx+0x4f],eax
  417dae:	inc    ebp
  417daf:	and    al,0x3b
  417db1:	dec    edi
  417db2:	dec    ebp
  417db3:	and    al,0x2f
  417db5:	dec    edi
  417db6:	shr    eax,1
  417db8:	or     edi,edx
  417dba:	sti    
  417dbb:	push   DWORD PTR [eax-0x37e7dae7]
  417dc1:	pushf  
  417dc2:	add    eax,0x41396243
  417dc7:	and    al,0x4a
  417dc9:	xor    eax,0x559fd40
  417dce:	cld    
  417dcf:	sub    DWORD PTR [edi-0x60253ed],0x1db4fbd4
  417dd9:	aaa    
  417dda:	or     ebx,eax
  417ddc:	neg    BYTE PTR [edx-0x20ffc0]
  417de2:	cmp    BYTE PTR [ebp+ebp*8-0x26f01b8d],dh
  417de9:	mov    esp,esp
  417deb:	pop    ss
  417dec:	jmp    0xd565627c
  417df1:	out    dx,eax
  417df2:	mov    al,al
  417df4:	fld    DWORD PTR [ebx-0x17]
  417df7:	mov    ebx,0x7300c060
	...
  417e10:	add    BYTE PTR [edx-0x37],bh
  417e13:	add    BYTE PTR [edx-0x40],ah
  417e16:	jge    0x417e30
  417e18:	mov    ecx,0x62bf6e48
  417e1d:	rol    BYTE PTR [eax],0x5d
  417e20:	cmp    DWORD PTR [edi+0x3c],eax
  417e23:	and    al,0x6e
  417e25:	inc    edi
  417e26:	fld1   
  417e28:	mov    ch,0xbd
  417e2a:	add    eax,0xc636fc00
  417e2f:	pop    esi
  417e30:	mov    esp,eax
  417e32:	push   0xc062c1
  417e37:	pop    ebx
  417e38:	jecxz  0x417dbd
  417e3a:	add    ah,BYTE PTR fs:[edx-0x40]
  417e3e:	ret    0x6208
  417e41:	in     eax,dx
  417e42:	ja     0x417e30
  417e44:	loope  0x417ea4
  417e46:	or     BYTE PTR [ecx-0x4b],dl
  417e49:	xchg   ebx,eax
  417e4a:	shl    BYTE PTR [ecx],0x29
  417e4d:	cmp    edx,DWORD PTR [ecx-0x18]
  417e50:	out    dx,eax
  417e51:	ftst   
  417e53:	pushf  
  417e54:	or     eax,DWORD PTR [ebp-0x7b3ba571]
  417e5a:	rcl    BYTE PTR [ebx],0xf8
  417e5d:	sub    bl,BYTE PTR [ebp+0x48]
  417e60:	or     ch,BYTE PTR [edx]
  417e62:	inc    ebx
  417e63:	sbb    BYTE PTR [edx-0x1cfc5619],dh
  417e69:	xchg   ebp,eax
  417e6a:	out    0x80,al
  417e6c:	cdq    
  417e6d:	int    0x61
  417e6f:	push   eax
  417e70:	inc    cl
  417e72:	dec    ecx
  417e73:	add    BYTE PTR cs:[eax],al
	...
  417e86:	add    BYTE PTR [eax],al
  417e88:	cmc    
  417e89:	shl    BYTE PTR [esi-0x3d],1
  417e8c:	jno    0x417e66
  417e8e:	push   ecx
  417e8f:	(bad)  
  417e90:	(bad)  
  417e91:	fldl2t 
  417e93:	call   0xadca:0x9bb55e6d
  417e9a:	jb     0x417ea0
  417e9c:	bound  edx,QWORD PTR [ebp+0x2a]
  417e9f:	aaa    
  417ea0:	pop    eax
  417ea1:	xchg   ecx,eax
  417ea2:	sub    BYTE PTR [ebx],al
  417ea4:	(bad)  
  417ea5:	fptan  
  417ea7:	je     0x417e4b
  417ea9:	(bad)  
  417eaa:	stc    
  417eab:	jle    0x417ec6
  417ead:	rol    edx,0x44
  417eb0:	(bad)  
  417eb2:	jmp    0xf288213e
  417eb7:	imul   edx,ebp,0xffffffd9
  417eba:	jmp    0x92c9ddc2
  417ebf:	jg     0x417eda
  417ec1:	int    0xc2
  417ec3:	push   ebx
  417ec4:	(bad)  
  417ec5:	fldl2t 
  417ec7:	and    eax,0x493b9ceb
  417ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ecd:	pushf  
  417ece:	ins    DWORD PTR es:[edi],dx
  417ecf:	mov    ebx,0x74daf5ee
  417ed4:	pop    ebp
  417ed5:	ss ins DWORD PTR es:[edi],dx
  417ed7:	(bad)  
  417ed8:	into   
  417ed9:	out    dx,al
  417eda:	data16 lods al,BYTE PTR ds:[esi]
  417edc:	xchg   edx,eax
  417edd:	inc    esi
  417ede:	add    edx,ebx
  417ee0:	inc    esi
  417ee1:	test   DWORD PTR [edx-0x15],eax
  417ee4:	loop   0x417eb6
  417ee6:	jns    0x417ec5
  417ee8:	pop    esp
  417ee9:	pop    edx
  417eea:	stc    
  417eeb:	rol    DWORD PTR [eax],0x0
	...
  417efe:	add    BYTE PTR [eax],al
  417f00:	je     0x417ede
  417f02:	jmp    0x11add1e
  417f07:	inc    eax
  417f08:	and    cl,bl
  417f0a:	add    cl,ch
  417f0c:	adc    dl,BYTE PTR [eax+0x5847f167]
  417f12:	call   DWORD PTR [eax-0x4a35a3de]
  417f18:	add    al,0xdd
  417f1a:	mov    bl,0xe8
  417f1c:	aas    
  417f1d:	pop    esp
  417f1e:	rcl    DWORD PTR [ebp-0x2606a5a4],0x2c
  417f25:	jmp    0x17f:0xdb21560b
  417f2c:	xchg   BYTE PTR [ebp+0x6],al
  417f2f:	push   0xfffffffe
  417f31:	xor    BYTE PTR [esi-0x14],dh
  417f34:	call   0xf3055bf
  417f39:	mov    eax,0xd961e805
  417f3e:	jg     0x417f4b
  417f40:	inc    bx
  417f42:	or     DWORD PTR [ecx],esi
  417f44:	mov    ds:0xe4b38829,eax
  417f49:	xchg   edi,eax
  417f4a:	jne    0x417f8d
  417f4c:	xchg   edi,eax
  417f4d:	test   BYTE PTR [edx],al
  417f4f:	inc    edi
  417f50:	in     eax,0x98
  417f52:	jne    0x417f8d
  417f54:	xchg   ebx,eax
  417f55:	test   eax,0x59cb6254
  417f5a:	stc    
  417f5b:	fldcw  WORD PTR [edx+ebp*8]
  417f5e:	or     edx,DWORD PTR [esi+0x20]
  417f61:	fstp   TBYTE PTR [edi-0x6f]
	...
  417f78:	cmp    DWORD PTR [ebp+0x6],eax
  417f7b:	push   0x9
  417f7d:	xor    dh,BYTE PTR [esi+0x0]
  417f80:	inc    esi
  417f81:	icebp  
  417f82:	add    al,0x5f
  417f84:	cmp    BYTE PTR [esi-0x299ea9b0],cl
  417f8a:	push   edi
  417f8b:	pcmpeqb mm1,mm3
  417f8e:	xchg   DWORD PTR [esi+0x7b],eax
  417f91:	hlt    
  417f92:	cmp    eax,0xc1090632
  417f98:	cdq    
  417f99:	(bad)  
  417f9a:	xchg   DWORD PTR [edx+0x5b],eax
  417f9d:	jno    0x417fba
  417f9f:	(bad)  
  417fa0:	lds    edi,FWORD PTR ds:0x5463b63
  417fa6:	or     ecx,eax
  417fa8:	cdq    
  417fa9:	(bad)  
  417faa:	xchg   DWORD PTR [edx+0x42],eax
  417fad:	jno    0x417fba
  417faf:	(bad)  
  417fb0:	lds    ebx,FWORD PTR [ebp+0x63]
  417fb3:	cmp    eax,DWORD PTR [esi+0x5]
  417fb6:	adc    ecx,eax
  417fb8:	pop    ecx
  417fb9:	(bad)  
  417fba:	xchg   DWORD PTR [edx+0x22],eax
  417fbd:	fld    st(2)
  417fbf:	sete   BYTE PTR [edx+0x71b9c182]
  417fc6:	lds    esp,FWORD PTR [esi+0x36]
  417fc9:	test   BYTE PTR [ebx+0x5d],bl
  417fcc:	aaa    
  417fcd:	fld    DWORD PTR [ecx-0x39b03531]
  417fd3:	pop    edi
  417fd4:	and    eax,0xf85b124c
  417fd9:	(bad)  
  417fda:	mov    esp,0x6a
	...
  417fef:	add    BYTE PTR [ebx+0x430383f8],al
  417ff5:	push   ds
  417ff6:	ret    0x1057
  417ff9:	jg     0x417f7b
  417ffb:	leave  
  417ffc:	inc    edi
  417ffd:	test   BYTE PTR ds:0x7ff88ab7,0xc0
  418004:	push   edi
  418005:	push   ds
  418006:	xor    dl,dl
  418008:	xor    eax,0x6283ef4e
  41800d:	push   0xda6772da
  418012:	add    bl,BYTE PTR [esi+0x49]
  418015:	mov    ebp,0xc579f883
  41801a:	add    eax,DWORD PTR [ecx+0x6a51c223]
  418020:	jb     0x417fff
  418022:	fwait
  418023:	adc    al,0xbc
  418025:	inc    ebx
  418026:	lods   eax,DWORD PTR ds:[esi]
  418027:	aaa    
  418028:	mov    ch,0xc6
  41802a:	sbb    edx,edx
  41802c:	pop    eax
  41802d:	inc    ebx
  41802e:	ret    
  41802f:	shl    BYTE PTR [ecx+0x2],1
  418032:	clc    
  418033:	mov    ah,0x32
  418035:	inc    ebx
  418036:	mov    BYTE PTR [edx],0x5d
  418039:	inc    edi
  41803a:	push   es
  41803b:	dec    cx
  41803d:	std    
  41803e:	xor    esp,esp
  418040:	lahf   
  418041:	xchg   esi,eax
  418042:	add    eax,0xce83c36e
  418048:	arpl   WORD PTR [ebx-0x45],cx
  41804b:	cmc    
  41804c:	or     edi,DWORD PTR [ebx]
  41804e:	mov    edi,0xf812150d
  418053:	mov    ah,0x0
	...
  418065:	add    BYTE PTR [eax],al
  418067:	add    BYTE PTR [ebx+0x270d069b],ch
  41806d:	icebp  
  41806e:	jnp    0x418036
  418070:	and    al,0x5e
  418072:	jge    0x418089
  418074:	sbb    eax,0x48bff403
  418079:	enter  0x8722,0x65
  41807d:	sbb    BYTE PTR [eax-0x3f],cl
  418080:	adc    DWORD PTR [ebx],edi
  418082:	into   
  418083:	sub    DWORD PTR [ebx-0x32f2b7dd],0xffffffc0
  41808a:	and    al,BYTE PTR [ebx+0x565003a2]
  418090:	sub    eax,0x606ab2d3
  418095:	cmp    ebp,DWORD PTR [edx-0x5e271ea6]
  41809b:	fdiv   st,st(0)
  41809d:	aam    0x6e
  41809f:	lods   eax,DWORD PTR ds:[esi]
  4180a0:	jnp    0x418075
  4180a2:	stos   WORD PTR es:[edi],ax
  4180a4:	mov    eax,DWORD PTR [esi-0x18]
  4180a7:	push   es
  4180a8:	sub    BYTE PTR [edi],ah
  4180aa:	adc    ah,dh
  4180ac:	test   al,0xc0
  4180ae:	xlat   BYTE PTR ds:[ebx]
  4180af:	and    ebx,esp
  4180b1:	shl    DWORD PTR [ecx+0x74405132],1
  4180b7:	std    
  4180b8:	data16 test BYTE PTR [edx],ch
  4180bb:	xchg   BYTE PTR [edx],ah
  4180bd:	stos   BYTE PTR es:[edi],al
  4180be:	out    0xb3,eax
  4180c0:	arpl   WORD PTR [edi+0x371d72e3],bx
  4180c6:	xadd   DWORD PTR [ebx+0x21a5b6],edx
	...
  4180dd:	add    BYTE PTR [eax],al
  4180df:	add    cl,ah
  4180e1:	cdq    
  4180e2:	mov    dh,0x6
  4180e4:	jecxz  0x418082
  4180e6:	jmp    0x13a2ad69
  4180eb:	mov    dl,0xd
  4180ed:	pop    edx
  4180ee:	or     BYTE PTR ds:0x7e19165f,al
  4180f4:	pop    ds
  4180f5:	sub    eax,0x303ff661
  4180fa:	daa    
  4180fb:	xchg   BYTE PTR [ebx+0x35fb8fd9],al
  418101:	xor    BYTE PTR [edi],ah
  418103:	mov    cl,0x1e
  418105:	cmc    
  418106:	in     eax,dx
  418107:	add    al,0x14
  418109:	pusha  
  41810a:	stc    
  41810b:	rcr    DWORD PTR [ecx+eiz*8+0x70],0x44
  418110:	bound  eax,QWORD PTR [ebp-0x1b]
  418113:	fwait
  418114:	push   cs
  418115:	fld1   
  418117:	add    ebp,ebx
  418119:	xchg   ebx,eax
  41811a:	sub    al,0xc6
  41811c:	pop    esi
  41811d:	fstp   DWORD PTR [ebx]
  41811f:	jge    0x41819e
  418121:	and    al,0x6d
  418123:	inc    edx
  418124:	pop    esi
  418125:	sub    DWORD PTR [ecx],eax
  418127:	mov    dh,0x6d
  418129:	ins    DWORD PTR es:[edi],dx
  41812a:	movaps XMMWORD PTR [esi+0x62],xmm3
  41812e:	stc    
  41812f:	ins    BYTE PTR es:[edi],dx
  418130:	mov    ebx,0xb0640d48
  418135:	inc    ebp
  418136:	or     DWORD PTR [edx+0x70],esp
  418139:	aas    
  41813a:	add    ah,BYTE PTR [edx+0x18]
  41813d:	into   
  41813e:	(bad)  
  418140:	and    ebp,DWORD PTR [esi]
  418142:	pop    ebx
  418143:	stos   BYTE PTR es:[edi],al
	...
  418158:	xchg   ebp,eax
  418159:	(bad)  
  41815a:	in     eax,dx
  41815b:	sbb    BYTE PTR [ecx-0x52e9acd6],dl
  418161:	sbb    cl,bh
  418163:	mov    ecx,0x5e2fcc4f
  418168:	xchg   ebx,eax
  418169:	daa    
  41816a:	push   edx
  41816b:	pusha  
  41816c:	push   ebp
  41816d:	sar    esp,1
  41816f:	hlt    
  418170:	or     eax,0x8ee940dc
  418175:	dec    eax
  418176:	or     eax,0x1a481e64
  41817b:	bound  ebp,QWORD PTR [ebp+0x5fe168e1]
  418181:	fld    DWORD PTR [eax]
  418183:	mov    edi,0xb9fd1874
  418188:	ins    BYTE PTR es:[edi],dx
  418189:	and    cl,bh
  41818b:	add    DWORD PTR [ebp+0x56e900d8],esp
  418191:	mov    cl,0xe8
  418193:	jmp    0xcdf7:0x6afca1e6
  41819a:	jne    0x418217
  41819c:	repz cdq 
  41819e:	add    dh,BYTE PTR [esp+ecx*2+0x5a]
  4181a2:	jle    0x418189
  4181a4:	pusha  
  4181a5:	inc    ebp
  4181a6:	add    ebp,DWORD PTR [edx+0x7c]
  4181a9:	int    0xff
  4181ab:	pop    ebx
  4181ac:	inc    ecx
  4181ad:	pop    eax
  4181ae:	fcom   DWORD PTR [ebx+eiz*2+0xa]
  4181b2:	rol    DWORD PTR [eax],0x1d
  4181b5:	push   eax
  4181b6:	add    ebp,ebx
  4181b8:	imul   ebp,DWORD PTR [eax+0x8dea],0x0
	...
  4181ce:	add    BYTE PTR [eax],al
  4181d0:	pop    eax
  4181d1:	and    BYTE PTR [ebx+0x39],0x87
  4181d5:	sub    DWORD PTR [eax+0x3],esi
  4181d8:	xor    BYTE PTR [esi+0xc],ch
  4181db:	inc    edx
  4181dc:	cli    
  4181dd:	jge    0x4181e4
  4181df:	add    DWORD PTR [ebx-0x29],ecx
  4181e2:	jno    0x418223
  4181e4:	cmp    BYTE PTR [edi+0x293f8963],dl
  4181ea:	mov    bl,dl
  4181ec:	mov    eax,0x2575ff7c
  4181f1:	push   esi
  4181f2:	js     0x4181f0
  4181f4:	dec    ecx
  4181f5:	cld    
  4181f6:	sub    BYTE PTR [ebx+0x14616e75],cl
  4181fc:	cmp    edi,edx
  4181fe:	mov    eax,edi
  418200:	mov    es,WORD PTR [ecx-0x34dcee8b]
  418206:	sti    
  418207:	(bad)  
  418208:	sti    
  418209:	sub    BYTE PTR [esi-0x1],dl
  41820c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41820e:	cmovo  ecx,DWORD PTR [ebx]
  418211:	dec    esp
  418212:	shl    DWORD PTR [ebp+0x8],0x56
  418216:	retf   0x70ff
  418219:	xchg   ecx,eax
  41821a:	jmp    0x117c696
  41821f:	mov    ecx,DWORD PTR [eax-0x7c7cfd93]
  418225:	sbb    DWORD PTR [esi+0x5e],0xcbf9000
  41822c:	mov    ebx,0x48ec8a1b
  418231:	bound  ecx,QWORD PTR ds:0x56
	...
  418247:	add    BYTE PTR [esi],dl
  418249:	or     edi,ebp
  41824b:	push   eax
  41824c:	adc    esp,edx
  41824e:	xor    esi,esi
  418250:	ins    DWORD PTR es:[edi],dx
  418251:	cmp    al,0xff
  418253:	jmp    DWORD PTR [edx-0x40]
  418256:	adc    BYTE PTR [edx+0x33],0x39
  41825a:	xor    bh,al
  41825c:	fild   DWORD PTR ds:0xbc6ffda9
  418262:	adc    BYTE PTR [eax+0x62],al
  418265:	cmp    eax,0x374d73c5
  41826a:	push   edx
  41826b:	or     al,bh
  41826d:	mov    ebx,0x106a4379
  418272:	jp     0x4182b7
  418274:	push   esi
  418275:	adc    BYTE PTR [edx+0x4b],bh
  418278:	push   esi
  418279:	pop    eax
  41827a:	push   cs
  41827b:	add    BYTE PTR [edx-0x40],ah
  41827e:	xchg   edi,eax
  41827f:	add    ecx,esp
  418281:	xchg   DWORD PTR [ecx+eax*4+0x831bc3a],esp
  418288:	jnp    0x41827f
  41828a:	mov    al,0x73
  41828c:	popa   
  41828d:	inc    edi
  41828e:	xor    bh,al
  418290:	fyl2x  
  418292:	inc    edx
  418293:	(bad)  
  418294:	and    BYTE PTR [eax+eax*1+0x412dad56],bh
  41829b:	and    al,0x76
  41829d:	jo     0x418242
  41829f:	je     0x4182df
  4182a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182a2:	ja     0x418293
  4182a4:	std    
  4182a5:	mov    ebx,esp
  4182a7:	adc    esp,ecx
  4182a9:	jmp    0x0:0x6aa3
	...
  4182c0:	bound  ecx,QWORD PTR [esi-0x3b1ac95d]
  4182c6:	clc    
  4182c7:	mov    cr0,eax
  4182ca:	mov    ds:0xf3ffdf36,eax
  4182cf:	inc    ebx
  4182d0:	dec    esi
  4182d1:	pushf  
  4182d2:	or     ch,bh
  4182d4:	outs   dx,DWORD PTR ds:[esi]
  4182d5:	mov    al,0x10
  4182d7:	inc    eax
  4182d8:	bound  esi,QWORD PTR [edi]
  4182da:	mov    esp,0xf8fe145d
  4182df:	call   DWORD PTR [esi]
  4182e1:	fldcw  WORD PTR [esi-0x69]
  4182e4:	adc    eax,0x33cb1726
  4182e9:	pop    esp
  4182ea:	sub    eax,0x402632a8
  4182ef:	add    dh,BYTE PTR [ebx]
  4182f1:	es pop ss
  4182f3:	ins    DWORD PTR es:[edi],dx
  4182f4:	test   ecx,ecx
  4182f6:	jmp    0x7638:0x61281083
  4182fd:	leave  
  4182fe:	aad    0xff
  418300:	pop    ebp
  418301:	sbb    edx,ebp
  418303:	and    BYTE PTR [edx-0x2e592fbd],0xed
  41830a:	xchg   edx,eax
  41830b:	xor    BYTE PTR [edx-0x38],dh
  41830e:	adc    eax,0xfdc8b2f8
  418313:	sti    
  418314:	inc    esi
  418315:	dec    edi
  418316:	jle    0x4182be
  418318:	push   ecx
  418319:	in     eax,dx
  41831a:	fld    DWORD PTR [ebx+0x62]
  41831d:	or     al,0x98
  41831f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418320:	mov    cl,0xc5
  418322:	test   al,0xf6
	...
  418338:	out    dx,eax
  418339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41833a:	gs ret 
  41833c:	outs   dx,DWORD PTR ds:[esi]
  41833d:	sbb    eax,0xe971a630
  418342:	stc    
  418343:	inc    ebx
  418344:	bound  edx,QWORD PTR [ebx+0x27]
  418347:	dec    edx
  418348:	sbb    eax,0xad03da9c
  41834d:	sub    al,0x9d
  41834f:	dec    ebp
  418350:	(bad)  
  418351:	push   esi
  418352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418353:	fistp  WORD PTR [ebp+0x29]
  418356:	xlat   BYTE PTR ds:[ebx]
  418357:	lods   eax,DWORD PTR ds:[esi]
  418358:	mov    eax,cs
  41835a:	xchg   esi,eax
  41835b:	fistp  QWORD PTR [ebp+0x54]
  41835e:	add    BYTE PTR [ebp-0x15],cl
  418361:	mov    ds:0x5c93a6b5,al
  418366:	xor    esp,DWORD PTR [esi-0x2439b223]
  41836c:	mov    esi,0x51e100ee
  418371:	sbb    DWORD PTR [ecx],eax
  418373:	mov    eax,fs:0x2272474c
  418379:	std    
  41837a:	adc    BYTE PTR [esi+eiz*4+0x4c],ah
  41837e:	add    eax,0x3bb2bc62
  418383:	pop    esp
  418384:	dec    esi
  418385:	fld    QWORD PTR [ebp-0x16f1ad50]
  41838b:	ffree  st(7)
  41838d:	fld    DWORD PTR [eax]
  41838f:	bound  ebp,QWORD PTR [esi-0x75ca0ca4]
  418395:	push   ebx
  418396:	inc    ebp
  418397:	int    0x51
  418399:	sub    DWORD PTR [ebx-0x62],edx
	...
  4183b0:	xchg   edx,eax
  4183b1:	std    
  4183b2:	and    BYTE PTR [ebx],al
  4183b4:	pop    esi
  4183b5:	sub    al,0xfc
  4183b7:	fiadd  DWORD PTR [esi]
  4183b9:	in     al,dx
  4183ba:	or     cl,bl
  4183bc:	mov    eax,ds:0x8da985d9
  4183c1:	aad    0x87
  4183c3:	sub    eax,0xed87e442
  4183c8:	or     eax,0xcb1989d8
  4183cd:	fld    QWORD PTR [edi-0x51301d1]
  4183d3:	jmp    0x4e724a39
  4183d8:	pop    ebp
  4183d9:	jmp    0x52a32cee
  4183de:	les    ebx,FWORD PTR [esi-0x6fa7db59]
  4183e4:	and    edx,ecx
  4183e6:	add    BYTE PTR [edi-0x2164796],dl
  4183ec:	popa   
  4183ed:	fld    DWORD PTR [eax]
  4183ef:	pop    ss
  4183f0:	and    bh,ch
  4183f2:	or     al,ch
  4183f4:	test   esi,ebx
  4183f6:	xchg   DWORD PTR [edi],ebx
  4183f8:	out    dx,al
  4183f9:	mov    ah,0xfe
  4183fb:	add    BYTE PTR [ebx-0x22397625],bh
  418401:	cdq    
  418402:	add    eax,0xec40d500
  418407:	mov    ecx,ebp
  418409:	ret    
  41840a:	lds    eax,FWORD PTR [esi]
  41840c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41840d:	inc    edx
  41840e:	inc    ecx
  41840f:	add    BYTE PTR [esi],al
  418411:	xor    DWORD PTR [ebp+0xa],0x0
	...
  418429:	fisttp DWORD PTR [ebx-0x1]
  41842c:	dec    ebx
  41842d:	lds    eax,FWORD PTR [ecx-0x2246c9a]
  418433:	jbe    0x4183c4
  418435:	jl     0x418447
  418437:	dec    eax
  418438:	cwde   
  418439:	sbb    eax,DWORD PTR [ecx]
  41843b:	mov    ecx,ebp
  41843d:	sbb    eax,0xdbda9ae4
  418442:	add    BYTE PTR [ecx-0x6a],dl
  418445:	pop    ss
  418446:	xor    dh,dh
  418448:	xchg   ebp,eax
  418449:	pop    ss
  41844a:	push   ebx
  41844b:	push   0x38
  41844d:	adc    eax,0x7c715653
  418452:	push   ebx
  418453:	mov    edx,edx
  418455:	jge    0x418467
  418457:	mov    al,ds:0x85011b15
  41845c:	sti    
  41845d:	test   BYTE PTR [ecx],0x3d
  418460:	(bad)  
  418461:	(bad)  
  418463:	jg     0x41849c
  418465:	(bad)  
  418466:	xor    al,al
  418468:	mov    al,ds:0x2bba55b7
  41846d:	aam    0x40
  41846f:	add    dl,ah
  418471:	jmp    0xe198:0x630b4013
  418478:	or     ebx,ebx
  41847a:	mov    eax,edi
  41847c:	xchg   BYTE PTR [ebp+0x70],bh
  41847f:	add    al,0x9
  418481:	fwait
  418482:	jmp    0x6224:0x757e181a
  418489:	enter  0x13a5,0x0
	...
  41849d:	add    BYTE PTR [eax],al
  41849f:	add    BYTE PTR [esi],bl
  4184a1:	ret    
  4184a2:	inc    eax
  4184a3:	add    cl,bl
  4184a5:	clc    
  4184a6:	js     0x4184ad
  4184a8:	out    0xfb,eax
  4184aa:	sub    cl,BYTE PTR [esi]
  4184ac:	or     eax,0x70084fcf
  4184b1:	lock dec eax
  4184b3:	pop    ebp
  4184b4:	add    al,0x1d
  4184b6:	ds ret 0xb066
  4184ba:	xchg   ecx,eax
  4184bb:	dec    esp
  4184bc:	shl    BYTE PTR ds:0x370e3456,0x56
  4184c4:	sub    al,0xe3
  4184c6:	aaa    
  4184c7:	std    
  4184c8:	adc    dh,BYTE PTR [ebx+ecx*4-0x6ac4f2f3]
  4184cf:	std    
  4184d0:	adc    edi,DWORD PTR [eax+0x84ffd33]
  4184d6:	hlt    
  4184d7:	aas    
  4184d8:	bound  edi,QWORD PTR ds:0xa9317397
  4184de:	adc    al,0x24
  4184e0:	jb     0x4184ce
  4184e2:	shl    DWORD PTR [ecx],1
  4184e4:	and    ah,al
  4184e6:	xor    al,0x6a
  4184e8:	popa   
  4184e9:	jmp    0xfd0a:0xda925003
  4184f0:	mov    dh,0x9c
  4184f2:	in     al,dx
  4184f3:	cld    
  4184f4:	dec    edi
  4184f5:	ins    BYTE PTR es:[edi],dx
  4184f6:	idiv   DWORD PTR [edi]
  4184f8:	bound  edi,QWORD PTR ds:0xd49e89c5
  4184fe:	hlt    
  4184ff:	jae    0x41855b
  418501:	cmp    ecx,DWORD PTR ds:0x50
	...
  418517:	add    BYTE PTR ds:0xc5e90861,al
  41851d:	dec    eax
  41851e:	dec    edx
  41851f:	or     BYTE PTR [edx-0x685d5450],dh
  418525:	cmp    esi,DWORD PTR [ecx-0xe266077]
  41852b:	cmp    DWORD PTR [edi],esi
  41852d:	push   edx
  41852e:	and    DWORD PTR [esi],ebp
  418530:	bound  edx,QWORD PTR [edx-0x65]
  418533:	or     esp,ebx
  418535:	sahf   
  418536:	out    0x2d,al
  418538:	lds    edx,FWORD PTR [eax-0x54]
  41853b:	pop    es
  41853c:	jmp    0x418559
  41853e:	out    dx,al
  41853f:	mov    WORD PTR [edx+edx*2-0x5d],ds
  418543:	or     edi,DWORD PTR [edx+0x62053618]
  418549:	sub    DWORD PTR [eax+0x4],edx
  41854c:	jmp    0x875776c
  418551:	fdivr  DWORD PTR [ebx]
  418553:	mov    ds:0x3acad517,eax
  418558:	pop    esi
  418559:	pop    edx
  41855a:	mov    cl,0xa2
  41855c:	loope  0x4184f6
  41855e:	jmp    0x4185a7
  418560:	sub    ecx,edx
  418562:	adc    cl,BYTE PTR [edi-0x39f2d953]
  418568:	pop    edx
  418569:	fnstcw WORD PTR [edi+ecx*4]
  41856c:	dec    esi
  41856d:	sub    ebp,DWORD PTR [edi+0x48]
  418570:	push   0x2b
  418572:	cmp    ecx,DWORD PTR [edi-0x7115cfab]
  418578:	iret   
  418579:	shl    DWORD PTR [esi-0x37],1
	...
  418590:	data16 das 
  418592:	jmp    0x5f1f2223
  418597:	dec    eax
  418598:	pop    esi
  418599:	push   edx
  41859a:	in     al,0x8e
  41859c:	xchg   edi,eax
  41859d:	shl    DWORD PTR [esi+0x28],1
  4185a0:	push   0xffffffd9
  4185a2:	push   ecx
  4185a3:	cdq    
  4185a4:	rcr    edx,cl
  4185a6:	jmp    0xe2605ede
  4185ab:	xor    ebx,ecx
  4185ad:	push   ds
  4185ae:	inc    esi
  4185af:	xor    ecx,DWORD PTR [eax+0x6fa293da]
  4185b5:	aad    0x0
  4185b7:	ss sub ch,bl
  4185ba:	jg     0x4185dc
  4185bc:	rcr    BYTE PTR [eax-0x3f],0xf6
  4185c0:	and    eax,0xe4befd10
  4185c5:	test   BYTE PTR [ebx+0x20],bl
  4185c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c9:	rol    DWORD PTR [eax],1
  4185cb:	mov    ah,0xd4
  4185cd:	mov    ch,0x80
  4185cf:	or     eax,0xd5ed5ad9
  4185d4:	loope  0x418616
  4185d6:	sbb    ecx,ebp
  4185d8:	je     0x41862c
  4185da:	pop    esi
  4185db:	lds    ebp,FWORD PTR [ebx+0x2e]
  4185de:	mov    BYTE PTR [esi+edx*4+0x4f],ah
  4185e2:	inc    esp
  4185e3:	cmc    
  4185e4:	in     al,0x4e
  4185e6:	jno    0x4185ce
  4185e8:	and    eax,0xdea930c9
  4185ed:	rol    DWORD PTR [ecx],cl
  4185ef:	ins    BYTE PTR es:[edi],dx
  4185f0:	mov    edi,0x4e4d
	...
  418605:	add    BYTE PTR [eax],al
  418607:	add    BYTE PTR [edi],bl
  418609:	jmp    0x1ecaa782
  41860e:	xor    DWORD PTR [esp+edi*2],esi
  418611:	adc    al,0x51
  418613:	adc    esp,DWORD PTR [ecx+0x29]
  418616:	cld    
  418617:	hlt    
  418618:	or     edi,esp
  41861a:	inc    eax
  41861b:	jmp    0x6472a0f8
  418620:	push   ds
  418621:	dec    eax
  418622:	adc    DWORD PTR [ebx],edx
  418624:	outs   dx,BYTE PTR ds:[esi]
  418625:	(bad)  
  418626:	push   ss
  418627:	mov    DWORD PTR ds:0x1e6a0104,ebp
  41862d:	(bad)  
  41862e:	jmp    0xa572:0xd95e74
  418635:	in     eax,0x66
  418637:	cmc    
  418638:	call   0x98a5cf57
  41863d:	or     eax,0x22d8b950
  418642:	dec    ebp
  418643:	add    BYTE PTR [esp+ecx*8-0x2834e9b4],ah
  41864a:	mov    DWORD PTR [esi-0x15],eax
  41864d:	pop    esp
  41864e:	lds    ecx,FWORD PTR [edx+eax*4]
  418651:	cmovne ebp,ebx
  418654:	enter  0x434e,0x4c
  418658:	push   eax
  418659:	adc    al,0x1d
  41865b:	mov    eax,0x7ffe7a74
  418660:	mov    dl,0xd6
  418662:	lds    eax,FWORD PTR [edi+ebp*4-0x39]
  418666:	adc    al,0x89
  418668:	or     ebx,eax
  41866a:	or     eax,0x42
	...
  41867f:	add    BYTE PTR [edx-0x78dbbab2],bh
  418685:	push   esp
  418686:	inc    eax
  418687:	or     BYTE PTR [edx],dl
  418689:	sbb    al,0x25
  41868b:	adc    al,0x10
  41868d:	adc    DWORD PTR ds:0x18b13f89,ecx
  418693:	lea    edi,[edi]
  418695:	mov    cl,0xc
  418697:	push   eax
  418698:	neg    BYTE PTR [ebx]
  41869a:	and    eax,0x6c7a5b10
  41869f:	add    al,0x0
  4186a1:	adc    ecx,DWORD PTR ds:0x20b12f89
  4186a7:	call   0x3e3221
  4186ac:	cmp    BYTE PTR [esi-0x12903cd6],al
  4186b2:	dec    eax
  4186b3:	je     0x418711
  4186b5:	adc    eax,0xe1732575
  4186ba:	or     BYTE PTR [eax+0x2e],cl
  4186bd:	pop    ebp
  4186be:	or     BYTE PTR [si+0x74],dl
  4186c2:	add    BYTE PTR [edi-0x34f83],bh
  4186c8:	fdivr  QWORD PTR [ecx+0x10]
  4186cb:	loopne 0x4186db
  4186cd:	pop    ss
  4186ce:	add    DWORD PTR [ecx-0x78cf759e],ecx
  4186d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186d5:	mov    WORD PTR [edi+0x25299a7e],es
  4186db:	std    
  4186dc:	cmc    
  4186dd:	add    esp,DWORD PTR [ecx+0x40a22a13]
	...
  4186f7:	add    cl,bl
  4186f9:	call   0xb009807c
  4186fe:	add    BYTE PTR [eax],al
  418700:	dec    edi
  418701:	ret    
  418702:	mov    eax,ds:0xa1837673
  418707:	jae    0x418773
  418709:	rcl    DWORD PTR [edx],cl
  41870b:	or     dl,cl
  41870d:	int3   
  41870e:	push   es
  41870f:	add    BYTE PTR [edx+0x3c],ah
  418712:	ror    BYTE PTR ds:0xfda18ce7,0xa5
  418719:	push   esi
  41871a:	or     ch,bh
  41871c:	ja     0x4186ae
  41871e:	cli    
  41871f:	aas    
  418720:	bound  ebp,QWORD PTR [edi]
  418722:	and    edx,DWORD PTR [eax+0x62]
  418725:	das    
  418726:	and    edx,DWORD PTR [edx+eiz*2+0x39]
  41872a:	cmp    ebx,DWORD PTR [eax-0x75]
  41872d:	aam    0x9b
  41872f:	std    
  418730:	jne    0x418779
  418732:	dec    edx
  418733:	adc    al,0x5b
  418735:	repz hlt 
  418737:	mov    BYTE PTR [esi],cl
  418739:	fcom   QWORD PTR [eax]
  41873b:	mov    DWORD PTR [edi-0x14317870],esp
  418741:	mov    edi,0x39b2568d
  418746:	cmp    edx,DWORD PTR [ebx+ebx*8-0xf]
  41874a:	cmp    al,0xe8
  41874c:	idiv   ebp
  41874e:	add    eax,0x3c707100
  418753:	pop    esi
  418754:	mov    DWORD PTR [edi],esi
  418756:	stos   BYTE PTR es:[edi],al
  418757:	pop    ebx
  418758:	and    BYTE PTR [eax+0x5300],dl
	...
  41876e:	add    BYTE PTR [eax],al
  418770:	jmp    0xfec4dd4d
  418775:	shl    BYTE PTR [edi-0x50],0x3e
  418779:	es mov esp,0x89c2fa36
  41877f:	add    al,0x62
  418781:	dec    esi
  418782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418783:	or     ecx,DWORD PTR [eax+0x5e436ed9]
  418789:	pop    ecx
  41878a:	scas   eax,DWORD PTR es:[edi]
  41878b:	or     esp,DWORD PTR [edx+0x54]
  41878e:	mov    ds:0x9a48e8f7,al
  418793:	push   cs
  418794:	push   ds
  418795:	enter  0xce6f,0xba
  418799:	sub    al,0x58
  41879b:	add    eax,0xf9f4e62
  4187a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187a1:	sbb    al,0xce
  4187a3:	repnz mov ch,0x4e
  4187a6:	or     DWORD PTR [edi],0xe7ce14d9
  4187ac:	adc    al,0x2f
  4187ae:	jmp    0x3235:0x9fd2e90
  4187b5:	sub    bl,bl
  4187b7:	clc    
  4187b8:	mov    ebx,ebp
  4187ba:	sub    DWORD PTR [ecx+eiz*8],eax
  4187bd:	cwde   
  4187be:	push   ebp
  4187bf:	sar    BYTE PTR [esi-0x15],cl
  4187c2:	add    esi,esi
  4187c4:	xor    eax,0x63a7fcd9
  4187c9:	fldl2t 
  4187cb:	push   cs
  4187cc:	fimul  WORD PTR [esi]
  4187ce:	jmp    0xdc3fe9d6
  4187d3:	out    0x0,al
	...
  4187e5:	add    BYTE PTR [eax],al
  4187e7:	add    BYTE PTR [ebp-0x3f],dl
  4187ea:	push   ss
  4187eb:	hlt    
  4187ec:	daa    
  4187ed:	push   ss
  4187ee:	into   
  4187ef:	repnz inc ebp
  4187f1:	inc    BYTE PTR [esi-0xd269dfe]
  4187f7:	mov    BYTE PTR [ecx-0x26],cl
  4187fa:	jmp    0x157ac02
  4187ff:	int    0x30
  418801:	shr    cl,0x8a
  418804:	popa   
  418805:	fld    DWORD PTR [eax]
  418807:	imul   edi,DWORD PTR [eax-0x2f],0xd5a07200
  41880e:	mov    ebp,edx
  418810:	std    
  418811:	or     al,0x88
  418813:	shr    BYTE PTR [ebp-0x6a],cl
  418816:	inc    ebp
  418817:	or     eax,0xa989e906
  41881c:	popa   
  41881d:	pop    eax
  41881e:	inc    ebp
  41881f:	or     eax,0x57557f2
  418824:	mov    dh,0x4b
  418826:	or     DWORD PTR [eax-0x64],ebp
  418829:	test   eax,0xb261e901
  41882e:	add    ebp,DWORD PTR [eax-0x64]
  418831:	pop    ecx
  418832:	add    ch,cl
  418834:	popa   
  418835:	push   edx
  418836:	inc    ebx
  418837:	mov    cl,0x1b
  418839:	mov    esi,0x84ffefc
  41883e:	adc    DWORD PTR [edx+0x19],esp
  418841:	aad    0xb
  418843:	stos   DWORD PTR es:[edi],eax
  418844:	xchg   ecx,eax
  418845:	pop    ecx
  418846:	jl     0x418839
  418848:	popa   
  418849:	push   edx
  41884a:	inc    ebp
  41884b:	add    eax,0x0
	...
  418860:	mov    ss,WORD PTR [edi+0x4d]
  418863:	or     eax,0x555577e
  418868:	bound  ebx,QWORD PTR [eax+0x55]
  41886b:	or     eax,0x190f4b7a
  418870:	fisttp DWORD PTR [esi-0x3f852a17]
  418876:	cld    
  418877:	bound  ebx,QWORD PTR [edx-0x4d8de30b]
  41887d:	cmc    
  41887e:	and    BYTE PTR [edx+0x1cc15b43],dl
  418884:	pop    ecx
  418885:	pop    edx
  418886:	mov    WORD PTR [ebp+0x66],?
  418889:	fld    DWORD PTR [eax]
  41888b:	add    ah,bl
  41888d:	jno    0x4188a6
  41888f:	cmp    eax,0xfffcbc3b
  418894:	sub    al,0xb1
  418896:	and    DWORD PTR [edi+0xd5ab],0x9c86530b
  4188a0:	sti    
  4188a1:	fild   DWORD PTR [eax]
  4188a3:	mov    al,0xfa
  4188a5:	push   edi
  4188a6:	shl    DWORD PTR [ebx+esi*8+0x4e],0x45
  4188ab:	and    al,0x53
  4188ad:	add    eax,0xbd674488
  4188b2:	dec    esp
  4188b3:	push   ecx
  4188b4:	or     BYTE PTR [esi-0x24244c17],0x0
  4188bb:	mov    edx,DWORD PTR [edi]
  4188bd:	mov    eax,0xf1b8eb10
  4188c2:	add    al,0x58
	...
  4188d8:	test   al,0x92
  4188da:	sub    al,cl
  4188dc:	xlat   BYTE PTR ds:[ebx]
  4188dd:	push   cs
  4188de:	dec    ecx
  4188df:	je     0x41887d
  4188e1:	adc    esi,DWORD PTR [ebp+0x1e]
  4188e4:	repz out 0xd,eax
  4188e7:	dec    eax
  4188e8:	adc    al,BYTE PTR es:[esi+ecx*2+0x584394fb]
  4188f0:	xchg   ebx,eax
  4188f1:	fild   DWORD PTR [eax]
  4188f3:	add    BYTE PTR [eax+0x4b4e83a0],dh
  4188f9:	xchg   esi,eax
  4188fa:	inc    ebx
  4188fb:	pop    eax
  4188fc:	inc    ebp
  4188fd:	mov    dh,0xfc
  4188ff:	call   DWORD PTR [eax+0x633d89ac]
  418905:	(bad)  
  418906:	cmp    al,0x0
  418908:	lods   al,BYTE PTR ds:[esi]
  418909:	test   BYTE PTR [eax],bh
  41890b:	in     eax,0x48
  41890d:	fild   DWORD PTR [eax]
  41890f:	je     0x4188a4
  418911:	pop    esp
  418912:	(bad)  
  418913:	and    DWORD PTR [ebp+0x5],0x1
  418917:	and    DWORD PTR [edx-0x32],0x38
  41891b:	add    bl,ch
  41891d:	idiv   BYTE PTR [ecx+ebp*8]
  418920:	dec    esi
  418921:	dec    ebx
  418922:	dec    ecx
  418923:	or     al,0xd9
  418925:	repz hlt 
  418927:	push   es
  418928:	mov    ds:0xebc6d1a0,eax
  41892d:	out    0x34,al
  41892f:	xchg   DWORD PTR [eax+ebx*4+0x1fb64e87],esp
  418936:	sar    esp,1
  418938:	outs   dx,DWORD PTR ds:[esi]
  418939:	sbb    al,0xf0
  41893b:	aas    
	...
  418950:	bound  esi,QWORD PTR [eax]
  418952:	sbb    al,0x24
  418954:	push   ecx
  418955:	mov    al,0x13
  418957:	add    eax,0xea7eed9
  41895c:	mov    bl,0xb1
  41895e:	add    BYTE PTR [ecx+0x2ea89c29],cl
  418964:	fcomi  st,st(7)
  418966:	pushf  
  418967:	mov    DWORD PTR [ecx+0x62f712e8],ebx
  41896d:	mov    al,0x2a
  41896f:	add    BYTE PTR [ebp+0x1e5a80a5],bh
  418975:	mov    al,0x9d
  418977:	adc    ebp,DWORD PTR [edx-0x5f]
  41897a:	inc    eax
  41897b:	add    BYTE PTR ds:0x87893966,al
  418981:	dec    ebp
  418982:	ret    0x6208
  418985:	add    ecx,DWORD PTR [ebx+0x31ac465c]
  41898b:	push   ebp
  41898c:	fldenv [ecx+eiz*8]
  41898f:	pop    ss
  418990:	out    0x8b,al
  418992:	mov    al,BYTE PTR [ebp+0x4e]
  418995:	inc    ebp
  418996:	dec    eax
  418997:	jo     0x418991
  418999:	scas   eax,DWORD PTR es:[edi]
  41899a:	pop    es
  41899b:	inc    esp
  41899c:	call   0x8bb0:0x63b06398
  4189a3:	call   0x11d66287
  4189a8:	or     bp,WORD PTR [edx+0x27c1af]
  4189af:	lock retf 
  4189b1:	(bad)  [edx+0xd1]
	...
  4189c7:	add    BYTE PTR [ebp+0x2f042e2f],ch
  4189cd:	in     al,0x5
  4189cf:	mul    BYTE PTR [ebp-0x27]
  4189d2:	pop    esi
  4189d3:	xchg   esp,eax
  4189d4:	loope  0x41899c
  4189d6:	test   BYTE PTR [edx-0x15],0x14
  4189da:	push   cs
  4189db:	lock loop 0x4189d4
  4189de:	jmp    0x5f17266f
  4189e3:	inc    eax
  4189e4:	inc    esi
  4189e5:	stc    
  4189e6:	pusha  
  4189e7:	inc    edx
  4189e8:	push   edx
  4189e9:	dec    esp
  4189ea:	stos   DWORD PTR es:[edi],eax
  4189eb:	call   FWORD PTR [ebp-0x22f463af]
  4189f1:	ds out 0x9a,al
  4189f4:	jno    0x4189ff
  4189f6:	xlat   BYTE PTR ds:[ebx]
  4189f7:	inc    ebx
  4189f8:	bound  esi,QWORD PTR [ebx]
  4189fa:	out    dx,al
  4189fb:	sub    eax,0x319226cf
  418a00:	mov    BYTE PTR [eax],bl
  418a02:	jmp    0x519a:0xb3e9319a
  418a09:	rcr    edx,0x43
  418a0c:	bound  edx,QWORD PTR [edx+ebp*1+0x11]
  418a10:	push   eax
  418a11:	push   edx
  418a12:	and    ebp,DWORD PTR [eax+esi*8-0x14651440]
  418a19:	mov    ss,edx
  418a1b:	mov    esp,0xd5e9d88a
  418a20:	lds    esi,FWORD PTR [ecx+0x1b7d53e8]
  418a26:	sub    edi,DWORD PTR [ecx]
  418a28:	sbb    ebx,DWORD PTR [ebx+0x3da]
	...
  418a3e:	add    BYTE PTR [eax],al
  418a40:	adc    al,0x52
  418a42:	mov    ecx,0x15d5cc2
  418a47:	pop    ecx
  418a48:	mov    eax,ds:0x66477fd9
  418a4d:	fnstcw WORD PTR [edi+0xf]
  418a50:	pop    edx
  418a51:	(bad)  [ebp-0x3cf2add9]
  418a57:	das    
  418a58:	ss mov esp,0xf96227c3
  418a5e:	mov    DWORD PTR [ecx],ebp
  418a60:	mov    si,0xdd16
  418a64:	das    
  418a65:	std    
  418a66:	add    BYTE PTR [edx+0x43],ch
  418a69:	in     eax,dx
  418a6a:	add    BYTE PTR [edx+0x23],ah
  418a6d:	sbb    al,0xc0
  418a6f:	mov    edi,0xf5e9acdc
  418a74:	popa   
  418a75:	fld    DWORD PTR [eax]
  418a77:	pop    edi
  418a78:	cmp    eax,0x65e808f5
  418a7d:	(bad)  
  418a7e:	xchg   DWORD PTR [edi],esi
  418a80:	mov    ecx,0x61e9f951
  418a85:	push   edx
  418a86:	ret    
  418a87:	xchg   edi,eax
  418a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a89:	aad    0x0
  418a8b:	es pop esi
  418a8d:	pop    ebp
  418a8e:	xchg   ecx,eax
  418a8f:	test   eax,0xe5c25a61
  418a94:	div    dl
  418a96:	(bad)  
  418a97:	call   0xfdc9b2fd
  418a9c:	jno    0x418ac8
  418a9e:	mov    ah,ah
  418aa0:	xor    DWORD PTR [edi],ebx
  418aa2:	inc    ebp
  418aa3:	jmp    0x418aa8
	...
  418ab8:	jae    0x418b0c
  418aba:	jbe    0x418aa1
  418abc:	loop   0x418a81
  418abe:	jne    0x418a78
  418ac0:	fdivr  QWORD PTR [ebx+0x257a5dfc]
  418ac6:	mov    fs,WORD PTR [edx-0x6e]
  418ac9:	and    eax,0xe7c1fcfc
  418ace:	inc    eax
  418acf:	jmp    0x42ba04
  418ad4:	dec    ebp
  418ad5:	jmp    0x418ad8
  418ad7:	lea    esi,[eax]
  418ad9:	fld1   
  418adb:	test   DWORD PTR [eax-0x28],ecx
  418ade:	add    BYTE PTR [edi-0x40],dl
  418ae1:	gs (bad) 
  418ae3:	adc    eax,0x3cc327
  418ae8:	sub    BYTE PTR [eax+0x2b44f680],bl
  418aee:	rcr    DWORD PTR [edi-0x20],0xd2
  418af2:	rol    BYTE PTR cs:[ebp+0x37c2c3fe],0xd8
  418afa:	push   edx
  418afb:	push   edi
  418afc:	and    cl,0x24
  418aff:	adc    BYTE PTR [eax+0x2fff8068],al
  418b05:	out    0x81,al
  418b07:	jmp    DWORD PTR [ecx+ebp*8+0x52be5367]
  418b0e:	pop    ebx
  418b0f:	adc    al,0xb8
  418b11:	pusha  
  418b12:	adc    al,ah
  418b14:	or     DWORD PTR [eax],ebx
  418b16:	add    DWORD PTR [edx-0x5],ebp
  418b19:	or     dh,bh
  418b1b:	je     0x418b1d
	...
  418b2d:	add    BYTE PTR [eax],al
  418b2f:	add    BYTE PTR [edi-0x3f],ch
  418b32:	xchg   DWORD PTR [esi-0x41],ebp
  418b35:	dec    esp
  418b36:	enter  0x6ce8,0xd3
  418b3a:	add    BYTE PTR [eax],al
  418b3c:	push   eax
  418b3d:	gs xor dh,0xde
  418b41:	call   0x74fb:0xc39f7c7c
  418b48:	in     eax,dx
  418b49:	lahf   
  418b4a:	inc    eax
  418b4b:	and    al,0x9b
  418b4d:	push   es
  418b4e:	addr16 add al,0xf2
  418b51:	sar    BYTE PTR [edi],1
  418b53:	sar    ebx,0x8
  418b56:	(bad)  
  418b57:	je     0x418bb8
  418b59:	mov    ch,0x89
  418b5b:	int    0xb3
  418b5d:	enter  0x1,0x62
  418b61:	mov    dl,0x8d
  418b63:	lock fbld TBYTE PTR [ebx-0x1426e7f4]
  418b6a:	hlt    
  418b6b:	add    BYTE PTR [edx-0x28ff2b52],0xac
  418b72:	aad    0xf5
  418b74:	dec    ecx
  418b75:	mov    bh,0x83
  418b77:	inc    esi
  418b78:	data16 add BYTE PTR [edx+0x40bf9213],bl
  418b7f:	add    BYTE PTR [ecx+0x50dbeb63],dl
  418b85:	lock add al,0x5b
  418b88:	fldcw  WORD PTR [edx+0x3d]
  418b8b:	jmp    0x5e020af0
  418b90:	mov    esp,0xfff06e
	...
  418ba5:	add    BYTE PTR [eax],al
  418ba7:	add    BYTE PTR [edx+0x5e24142f],dh
  418bad:	mov    al,0x31
  418baf:	mov    DWORD PTR [ebx],ecx
  418bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bb2:	dec    esi
  418bb3:	cmp    DWORD PTR [esi-0x34],0x6f6efcf4
  418bba:	xor    eax,0xeca3df53
  418bbf:	push   edx
  418bc0:	xor    bh,dh
  418bc2:	cwde   
  418bc3:	adc    eax,edx
  418bc5:	sahf   
  418bc6:	inc    eax
  418bc7:	add    bh,ah
  418bc9:	je     0x418ba7
  418bcb:	or     esi,DWORD PTR [edx]
  418bcd:	repz or esp,DWORD PTR [esi+eiz*2]
  418bd1:	sub    eax,0x5cbd0449
  418bd6:	fcomp  QWORD PTR [ebx]
  418bd8:	retf   0x657
  418bdb:	add    BYTE PTR [edx+0x2d],ah
  418bde:	shl    BYTE PTR [ebp+edx*2+0x47],0x41
  418be3:	add    al,0x9d
  418be5:	cmp    al,0xdc
  418be7:	or     esp,edi
  418be9:	pop    ebx
  418bea:	cld    
  418beb:	cld    
  418bec:	xor    bl,cl
  418bee:	in     eax,dx
  418bef:	xchg   ebp,eax
  418bf0:	mov    ds:0x99f1db24,eax
  418bf5:	out    0x29,eax
  418bf7:	add    al,0x19
  418bf9:	dec    edi
  418bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bfb:	cmp    edi,DWORD PTR [ebx-0x29]
  418bfe:	test   ebx,0xca82007
  418c04:	bound  esp,QWORD PTR [edi+ebx*2]
  418c07:	test   al,0xe3
  418c09:	cmp    edx,esi
  418c0b:	add    al,0x0
	...
  418c1d:	add    BYTE PTR [eax],al
  418c1f:	add    BYTE PTR [ebx-0x5007bab2],dh
  418c25:	dec    esi
  418c26:	adc    eax,0x3b4496e4
  418c2b:	cmp    DWORD PTR [ecx-0x62f0161f],0x6
  418c32:	stos   BYTE PTR es:[edi],al
  418c33:	or     DWORD PTR [ebx],0x62dce645
  418c39:	inc    esp
  418c3a:	sub    eax,DWORD PTR [ecx-0x22d8baf4]
  418c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c41:	jmp    0x148e6223
  418c46:	push   es
  418c47:	adc    DWORD PTR ds:0x7196ba29,esi
  418c4d:	int    0xb9
  418c4f:	stos   DWORD PTR es:[edi],eax
  418c50:	push   es
  418c51:	mov    ebx,0xc0db9743
  418c56:	gs xchg edi,eax
  418c58:	push   esi
  418c59:	icebp  
  418c5a:	fwait
  418c5b:	xchg   esi,eax
  418c5c:	push   ecx
  418c5d:	loope  0x418cbb
  418c5f:	jg     0x418c43
  418c61:	xlat   BYTE PTR ds:[ebx]
  418c62:	jmp    0xfa85536a
  418c67:	sub    DWORD PTR [ebp+0x122ee82f],edi
  418c6d:	mov    edx,0x3fba0b95
  418c72:	add    BYTE PTR [edi-0x74d4b259],dl
  418c78:	xchg   edx,eax
  418c79:	mov    al,0x1
  418c7b:	pop    ebp
  418c7c:	in     al,0xbb
  418c7e:	cld    
  418c7f:	(bad)  
  418c80:	int3   
  418c81:	scas   eax,DWORD PTR es:[edi]
  418c82:	adc    eax,0xe6
	...
  418c97:	add    BYTE PTR [edx-0xb],dh
  418c9a:	push   edx
  418c9b:	cmp    dl,ch
  418c9d:	inc    ebp
  418c9e:	sbb    esi,edx
  418ca0:	push   edx
  418ca1:	in     eax,0xfb
  418ca3:	push   esp
  418ca4:	jbe    0x418c62
  418ca6:	jbe    0x418c9d
  418ca8:	int3   
  418ca9:	and    eax,0x12941e09
  418cae:	pop    esi
  418caf:	stos   DWORD PTR es:[edi],eax
  418cb0:	inc    ecx
  418cb1:	mov    ecx,0xe9422d7f
  418cb6:	add    DWORD PTR [esp+esi*2],edi
  418cb9:	bound  esi,QWORD PTR [ebp-0x3b]
  418cbc:	sbb    eax,0xe135760e
  418cc1:	xor    eax,0x2d61c925
  418cc6:	push   esi
  418cc7:	push   0x4d
  418cc9:	std    
  418cca:	and    al,0xe9
  418ccc:	jb     0x418cf5
  418cce:	xchg   BYTE PTR [edi+0x65],bh
  418cd1:	and    esi,DWORD PTR [eax]
  418cd3:	jl     0x418d03
  418cd5:	inc    edi
  418cd6:	adc    ebp,ebx
  418cd8:	mov    al,ds:0xa056cf0
  418cdd:	sub    al,0x3e
  418cdf:	mov    esp,0xd5fbb84b
  418ce4:	or     eax,0x3e5155d5
  418ce9:	mov    bh,0xfc
  418ceb:	ds call 0x657813a2
  418cf1:	add    edx,DWORD PTR [ebx+0x2e]
  418cf4:	pop    ebp
  418cf5:	std    
  418cf6:	and    al,0x74
  418cf8:	inc    esp
  418cf9:	mov    DWORD PTR [ecx],eax
  418cfb:	jmp    0x418d00
	...
  418d10:	popa   
  418d11:	mov    dh,0x75
  418d13:	int    0xc1
  418d15:	or     esp,DWORD PTR [edi-0x18]
  418d18:	jl     0x418d23
  418d1a:	cld    
  418d1b:	add    BYTE PTR [edi],ah
  418d1d:	cwde   
  418d1e:	sub    al,ch
  418d20:	xchg   edi,eax
  418d21:	push   esp
  418d22:	(bad)  
  418d23:	inc    DWORD PTR [eax]
  418d25:	lahf   
  418d26:	mov    dh,al
  418d28:	arpl   di,bx
  418d2a:	repnz (bad) 
  418d2c:	jl     0x418d90
  418d2e:	ret    
  418d2f:	jmp    0x418daf
  418d31:	dec    ebp
  418d32:	jne    0x418d58
  418d34:	pop    edi
  418d35:	pop    es
  418d36:	(bad)  
  418d37:	je     0x418da0
  418d39:	sar    ebp,0x74
  418d3c:	push   edi
  418d3d:	sar    ebp,0x74
  418d40:	addr16 sar ebp,0x74
  418d44:	addr16 sar ebp,0x74
  418d48:	addr16 sar ebp,0x54
  418d4c:	pop    ss
  418d4d:	rcr    BYTE PTR [ebp+0x5e],0x7e
  418d51:	fwait
  418d52:	and    DWORD PTR [eax],eax
  418d54:	js     0x418d5e
  418d56:	push   ebx
  418d57:	mov    edx,DWORD PTR [edi-0x47]
  418d5a:	adc    al,0x57
  418d5c:	mov    dh,0x67
  418d5e:	push   cs
  418d5f:	test   BYTE PTR [eax-0x27ffff23],ah
  418d65:	jo     0x418d9b
  418d67:	pop    esi
  418d68:	sub    ebx,ebp
  418d6a:	test   BYTE PTR [eax+0x3900dbfb],dh
  418d70:	mov    edi,0xf1c97
	...
  418d85:	add    BYTE PTR [eax],al
  418d87:	add    BYTE PTR [edi-0x4fffee9],al
  418d8d:	xchg   edx,eax
  418d8e:	pop    eax
  418d8f:	and    al,0x53
  418d91:	fiadd  WORD PTR [esp+ebx*4+0x5300dbcb]
  418d98:	clc    
  418d99:	dec    esp
  418d9a:	jne    0x418dc0
  418d9c:	pop    ebx
  418d9d:	jmp    0x8bfe:0x4e7ed3e8
  418da4:	push   ebx
  418da5:	cmp    al,ch
  418da7:	punpckldq mm0,DWORD PTR [esi+0x7b]
  418dab:	add    BYTE PTR [edx-0x3e],ah
  418dae:	cmp    DWORD PTR [ebx+0x4e],0x2a
  418db2:	cmp    DWORD PTR [esi+edi*2],esp
  418db5:	cdq    
  418db6:	xor    eax,0xd9c50e4c
  418dbb:	je     0x418ddb
  418dbd:	add    ecx,DWORD PTR cs:[ebx+0x5cd81207]
  418dc4:	cs push cs
  418dc6:	xor    eax,0xbfded39
  418dcb:	dec    ecx
  418dcc:	fscale 
  418dce:	loopne 0x418df3
  418dd0:	ins    DWORD PTR es:[edi],dx
  418dd1:	jns    0x418dcc
  418dd3:	mov    edi,0x100e77b2
  418dd8:	sbb    al,0x5
  418dda:	loope  0x418dff
  418ddc:	arpl   WORD PTR [edi+0x7083eb],ax
  418de2:	add    eax,0xeecd2283
  418de7:	imul   ebx,DWORD PTR [edi+ebp*8+0x57],0xe4
	...
  418dff:	add    BYTE PTR [ecx-0x40],ah
  418e02:	add    BYTE PTR [ebx],bh
  418e04:	pusha  
  418e05:	rol    DWORD PTR [eax],0x0
  418e08:	ins    DWORD PTR es:[edi],dx
  418e09:	cld    
  418e0a:	xchg   edi,eax
  418e0b:	jmp    0x507ec950
  418e10:	(bad)  
  418e12:	loopne 0x418e33
  418e14:	push   ecx
  418e15:	sbb    eax,DWORD PTR [edi+0x2c7fe8ff]
  418e1b:	mov    DWORD PTR [esi+0x6386ece4],esp
  418e21:	cmp    edx,DWORD PTR ds:0x51fdf58
  418e27:	xchg   esp,eax
  418e28:	mov    eax,ds:0x5688fc0b
  418e2d:	in     al,0xec
  418e2f:	mov    BYTE PTR [edi-0x3a0d1ae8],bl
  418e35:	fldenv [edx]
  418e37:	cmp    DWORD PTR [esi],0xfffffffd
  418e3a:	std    
  418e3b:	add    ebp,DWORD PTR [esi]
  418e3d:	loop   0x418df9
  418e3f:	xchg   esp,eax
  418e40:	push   ecx
  418e41:	mov    ecx,0x626243f5
  418e46:	daa    
  418e47:	test   al,0x71
  418e49:	mov    dh,0x76
  418e4b:	fistp  QWORD PTR ds:0x45df7eb6
  418e51:	mov    dh,0x76
  418e53:	fistp  QWORD PTR ds:0x4618e30f
  418e59:	add    ebx,ebx
  418e5b:	cmp    BYTE PTR [esi],bh
  418e5d:	add    DWORD PTR [ebx],esi
  418e5f:	xor    cl,BYTE PTR [ecx]
  418e61:	adc    ch,BYTE PTR [eax+0xec]
	...
  418e77:	add    BYTE PTR [ebp-0x49],ah
  418e7a:	or     eax,0xea1dbbdc
  418e7f:	cmp    ebx,ebp
  418e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e82:	gs dec edx
  418e84:	jb     0x418e8f
  418e86:	mov    ds:0x2a60820a,eax
  418e8b:	add    al,0x3f
  418e8d:	int3   
  418e8e:	leave  
  418e8f:	cmc    
  418e90:	jne    0x418e6b
  418e92:	pop    esi
  418e93:	ret    0x603a
  418e96:	js     0x418e2b
  418e98:	daa    
  418e99:	bound  esi,QWORD PTR [ebx+ecx*8+0x4470ed64]
  418ea0:	(bad)
  418ea5:	mov    dh,0x5f
  418ea7:	inc    edx
  418ea8:	pop    esi
  418ea9:	sahf   
  418eaa:	in     al,dx
  418eab:	pop    ss
  418eac:	rcr    BYTE PTR [eax],1
  418eae:	jmp    0x6204:0x5cc9fd31
  418eb5:	bound  ebx,QWORD PTR [esi+0x315c61e7]
  418ebb:	sbb    BYTE PTR [ecx-0x3f],ah
  418ebe:	sbb    BYTE PTR [eax+0x2b01b5d7],0x5a
  418ec5:	(bad)  [edi-0x69]
  418ec8:	inc    esp
  418ec9:	inc    esi
  418eca:	or     edx,ebx
  418ecc:	mov    eax,ds:0x5a17860b
  418ed1:	clc    
  418ed2:	xchg   DWORD PTR [eax-0x3a829f9b],edi
  418ed8:	lods   eax,DWORD PTR ds:[esi]
  418ed9:	pop    edi
  418eda:	pop    ebp
  418edb:	int    0x0
	...
  418eed:	add    BYTE PTR [eax],al
  418eef:	add    BYTE PTR [ecx-0x289bf8a0],dl
  418ef5:	sub    al,0x7
  418ef7:	mov    cl,0x3e
  418ef9:	loope  0x418f70
  418efb:	in     al,0x96
  418efd:	cs or  eax,0x7ff5765d
  418f03:	stos   DWORD PTR es:[edi],eax
  418f04:	pop    ebp
  418f05:	lock ret 0xce5b
  418f09:	out    0xc0,eax
  418f0b:	xor    BYTE PTR cs:[eax],dl
  418f0e:	mov    edi,0x556261f5
  418f13:	add    eax,0x3dcf5846
  418f18:	fs pop esp
  418f1a:	jmp    DWORD PTR [ecx+0x1e]
  418f1d:	ret    
  418f1e:	in     eax,dx
  418f1f:	cmp    al,0xbd
  418f21:	lds    edx,FWORD PTR [edx+0x36]
  418f24:	jecxz  0x418f3e
  418f26:	std    
  418f27:	cmp    ecx,edx
  418f29:	sub    BYTE PTR ds:0x76b6d662,cl
  418f2f:	icebp  
  418f30:	stc    
  418f31:	js     0x418f2f
  418f33:	jle    0x418f25
  418f35:	pop    eax
  418f36:	sar    ebp,0x65
  418f39:	jmp    0xa969:0xb4782c0
  418f40:	fld    DWORD PTR [bx+si]
  418f43:	sbb    bl,al
  418f45:	or     edi,esp
  418f47:	sbb    al,0x5e
  418f49:	inc    ebx
  418f4a:	inc    ebp
  418f4b:	jmp    0xa65820
  418f50:	mov    ecx,0x850118
	...
  418f65:	add    BYTE PTR [eax],al
  418f67:	add    BYTE PTR [ebx+0xeff0ecc],cl
  418f6d:	test   eax,0xd174c889
  418f72:	or     al,0xff
  418f74:	fidiv  WORD PTR [eax-0x22d8d01c]
  418f7a:	add    BYTE PTR [ebx+0x74f3614b],cl
  418f80:	scas   eax,DWORD PTR es:[edi]
  418f81:	xor    eax,DWORD PTR [esi]
  418f83:	push   esi
  418f84:	adc    BYTE PTR [edi+0x5bbb50fe],dl
  418f8a:	stc    
  418f8b:	dec    DWORD PTR [esi]
  418f8d:	mov    bl,0x89
  418f8f:	into   
  418f90:	arpl   di,dx
  418f92:	hlt    
  418f93:	inc    DWORD PTR [esi+ecx*4+0x3589ebbc]
  418f9a:	ret    
  418f9b:	pop    esi
  418f9c:	xor    al,0x70
  418f9e:	mov    edi,0xbc8d7b10
  418fa3:	push   esi
  418fa4:	bound  ebx,QWORD PTR [eax]
  418fa6:	or     DWORD PTR [esi+0x38],esi
  418fa9:	xor    eax,0x6fc0046c
  418fae:	cmp    BYTE PTR [edx],0x3b
  418fb1:	int3   
  418fb2:	or     eax,0x59bc840
  418fb7:	cmp    ecx,DWORD PTR [edx+0x75f272b5]
  418fbd:	push   eax
  418fbe:	enter  0xd491,0x49
  418fc2:	mov    cl,BYTE PTR [edi+ebp*1-0x50]
  418fc6:	or     DWORD PTR [edi*2+0x4bee7],0x0
	...
  418fde:	add    BYTE PTR [eax],al
  418fe0:	sti    
  418fe1:	icebp  
  418fe2:	mov    ecx,esi
  418fe4:	ins    BYTE PTR es:[edi],dx
  418fe5:	pop    ebp
  418fe6:	jnp    0x418ff4
  418fe8:	or     esi,DWORD PTR ds:0xcc07247d
  418fee:	or     DWORD PTR [ebx-0x76fb7b9e],ecx
  418ff4:	dec    esp
  418ff5:	and    ebx,ecx
  418ff7:	mov    bh,0xdd
  418ff9:	dec    edi
  418ffa:	cld    
  418ffb:	mov    BYTE PTR [esi+edi*4],bl
  418ffe:	test   DWORD PTR [edx+ecx*1],esp
  419001:	ret    0x4e7d
  419004:	pop    edx
  419005:	adc    eax,0x178ff4a
  41900a:	adc    al,0x20
  41900c:	fucomip st,st(0)
  41900e:	sbb    BYTE PTR [ecx+ebx*8],dl
  419011:	add    DWORD PTR [ebx+ecx*4],0x5e
  419015:	cmp    al,BYTE PTR [esi-0x32c16140]
  41901b:	dec    DWORD PTR [esi]
  41901d:	mov    esp,0x7966e885
  419022:	adc    esi,ebx
  419024:	xor    esi,DWORD PTR [edi]
  419026:	mov    edi,0x91302ce8
  41902b:	std    
  41902c:	adc    eax,0x6204c2f4
  419031:	aas    
  419032:	pushf  
  419033:	and    BYTE PTR [ecx],dl
  419035:	in     eax,dx
  419036:	ss mov esi,edx
  419039:	in     al,0xd4
  41903b:	push   esp
  41903c:	jmp    0xb40865ba
  419041:	cmp    eax,0x484a
	...
  419056:	add    BYTE PTR [eax],al
  419058:	xchg   ecx,eax
  419059:	sub    DWORD PTR [edx],0x37
  41905c:	jp     0x419024
  41905e:	dec    DWORD PTR [esi+ebx*4]
  419061:	sbb    DWORD PTR [esi],0x3c3d8816
  419067:	and    al,0x82
  419069:	aaa    
  41906a:	mov    eax,ds:0xe8a4a687
  41906f:	out    0x39,eax
  419071:	data16 add BYTE PTR [eax],al
  419074:	fnstcw WORD PTR [edx-0x68]
  419077:	daa    
  419078:	in     eax,0xc0
  41907a:	add    BYTE PTR [esi-0x1f],ah
  41907d:	fldenv [ecx-0x5]
  419080:	jae    0x419065
  419082:	outs   dx,BYTE PTR ds:[esi]
  419083:	and    DWORD PTR [edx+0x5c],edx
  419086:	inc    ebp
  419087:	push   ss
  419088:	pop    esi
  419089:	pop    esi
  41908a:	cmp    ebx,DWORD PTR [ebx+eiz*2-0x1520d2aa]
  419091:	(bad)  
  419092:	outs   dx,BYTE PTR ds:[esi]
  419093:	dec    ebx
  419094:	repnz fsubr st,st(1)
  419097:	add    ebx,ecx
  419099:	sub    al,BYTE PTR [edx]
  41909b:	cmp    bh,BYTE PTR [edi+0x75f509cc]
  4190a1:	fldcw  WORD PTR [esi+0x48]
  4190a4:	pop    edx
  4190a5:	pusha  
  4190a6:	scas   al,BYTE PTR es:[edi]
  4190a7:	out    0x49,eax
  4190a9:	pop    esi
  4190aa:	mov    ds:0xae6037eb,eax
  4190af:	out    0x79,eax
  4190b1:	mov    dl,0xd5
  4190b3:	scas   eax,DWORD PTR es:[edi]
  4190b4:	jo     0x4190cf
  4190b6:	jmp    0x0:0xd9fd167c
	...
  4190cd:	add    BYTE PTR [eax],al
  4190cf:	add    BYTE PTR [edi-0x11c3ce28],dh
  4190d5:	int3   
  4190d6:	pushfw 
  4190d8:	push   ecx
  4190d9:	sub    eax,0xbea5d2ee
  4190de:	idiv   BYTE PTR [edx+0x63]
  4190e1:	cmp    ebp,DWORD PTR [edi-0x7c]
  4190e4:	je     0x4190be
  4190e6:	jmp    0x5f21cbee
  4190eb:	add    edi,DWORD PTR [esi+ebx*2-0x4dc30f96]
  4190f2:	jmp    0x13d2:0xd5fdb67a
  4190f9:	lock cmp dh,ah
  4190fc:	mov    edi,0x7de82660
  419101:	or     BYTE PTR [ebp+0x17],dh
  419104:	ins    BYTE PTR es:[edi],dx
  419105:	pop    esi
  419106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419107:	jmp    DWORD PTR [ecx+0xc030197]
  41910d:	pop    edi
  41910e:	push   ebp
  41910f:	lds    eax,FWORD PTR [ecx]
  419111:	or     BYTE PTR [edx+0x6a],dl
  419114:	push   ds
  419115:	fst    QWORD PTR [eax-0x65]
  419118:	addr16 rcl edx,0x31
  41911c:	pop    edi
  41911d:	(bad)  [ecx-0x7a3a3a5b]
  419123:	sub    DWORD PTR [ebx-0x23],edi
  419126:	cs sub ecx,ebp
  419129:	sbb    BYTE PTR [eax+0x23c191e2],cl
  41912f:	jno    0x419197
  419131:	fld    DWORD PTR [edi+0xb5]
	...
  419147:	add    BYTE PTR [ebp-0x3a5a773b],bh
  41914d:	in     eax,0xe8
  41914f:	dec    ebp
  419150:	shl    BYTE PTR [ebx+0x2cc364fc],1
  419156:	and    bh,bh
  419158:	sub    bl,cl
  41915a:	add    DWORD PTR [ebp-0x6e],esi
  41915d:	pusha  
  41915e:	or     BYTE PTR [edx-0x26bc165f],bh
  419164:	clc    
  419165:	pop    ecx
  419166:	mov    eax,ebp
  419168:	popa   
  419169:	(bad)  [ebx]
  41916b:	and    eax,0xf1c357d6
  419170:	das    
  419171:	mov    ah,0x75
  419173:	add    eax,0xf581b95a
  419178:	popa   
  419179:	fld    DWORD PTR [esi+0x5bed3a25]
  41917f:	pop    ss
  419180:	xchg   ebx,eax
  419181:	adc    al,BYTE PTR [eax+0x59b41a5]
  419187:	jmp    0xe9234f6a
  41918c:	popa   
  41918d:	(bad)  [edi+0x3c]
  419190:	test   eax,0x667d257d
  419195:	fld    DWORD PTR [eax]
  419197:	add    BYTE PTR [ebp+0x2e],dh
  41919a:	dec    ebp
  41919b:	and    al,0x3
  41919d:	call   0x93255f2b
  4191a2:	sahf   
  4191a3:	add    BYTE PTR [ebx],cl
  4191a5:	test   DWORD PTR [ecx+0x5cc5ff8],0x32
	...
  4191bf:	add    BYTE PTR [ebx],bh
  4191c1:	dec    ebp
  4191c2:	and    eax,DWORD PTR [edx]
  4191c4:	sti    
  4191c5:	fsub   st(0),st
  4191c7:	mov    bl,0x8f
  4191c9:	pop    edi
  4191ca:	dec    BYTE PTR [ebx-0x7a2674dd]
  4191d0:	mov    ecx,ss
  4191d2:	aas    
  4191d3:	xor    eax,DWORD PTR [edx+0x1e10579d]
  4191d9:	and    DWORD PTR [ebx],edx
  4191db:	sysret 
  4191dd:	xchg   esi,eax
  4191de:	mov    BYTE PTR [ebp-0xd],cl
  4191e1:	mov    edx,edx
  4191e3:	xchg   dx,ax
  4191e5:	mov    ebp,0xe541440d
  4191ea:	push   ecx
  4191eb:	push   ebx
  4191ec:	cli    
  4191ed:	pop    ebx
  4191ee:	rol    DWORD PTR [ebx+ebp*8],0xa
  4191f2:	add    ch,al
  4191f4:	fwait
  4191f5:	test   ah,bh
  4191f7:	inc    DWORD PTR [eax]
  4191f9:	dec    esp
  4191fa:	xor    dh,0x17
  4191fd:	pushf  
  4191fe:	mov    cl,BYTE PTR [edi+eiz*2-0x57]
  419202:	push   esi
  419203:	mov    eax,DWORD PTR [edx+0x4bb77654]
  419209:	fmul   QWORD PTR [ecx-0x16822e32]
  41920f:	stc    
  419210:	or     bl,BYTE PTR [esi-0x2]
  419213:	jmp    0x426e01
  419218:	rcr    BYTE PTR [eax],0x11
  41921b:	test   DWORD PTR [ebx],ecx
  41921d:	enter  0x8902,0x6f
  419221:	rcr    DWORD PTR [ebx+ebp*8],0x0
	...
  419235:	add    BYTE PTR [eax],al
  419237:	add    BYTE PTR [edx-0x41],ah
  41923a:	add    eax,0x2449394e
  419240:	inc    edx
  419241:	sub    eax,edx
  419243:	push   0xc120
  419248:	(bad)  
  41924a:	call   0xe9377d62
  41924f:	sbb    esp,edi
  419251:	jge    0x419237
  419253:	sub    edx,DWORD PTR [ecx+0x3e5c7772]
  419259:	loop   0x4191e8
  41925b:	adc    edi,DWORD PTR [edx]
  41925d:	test   al,0x40
  41925f:	add    cl,ch
  419261:	outs   dx,BYTE PTR ds:[esi]
  419262:	add    al,0x81
  419264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419265:	mov    ebp,0x3b3c783e
  41926a:	fwait
  41926b:	imul   ecx,edi,0xe9db79a9
  419271:	xchg   BYTE PTR [ecx],al
  419273:	jmp    0x16df5a
  419278:	cmp    BYTE PTR cs:[ebx+0x4b],0x6a
  41927d:	fidiv  DWORD PTR [esi-0x1f]
  419280:	xchg   ebp,eax
  419281:	(bad)  
  419282:	mov    al,al
  419284:	pop    ss
  419285:	pushf  
  419286:	cmp    DWORD PTR [esi+edi*1-0x6e],0x962e8afa
  41928e:	hlt    
  41928f:	jo     0x4192e1
  419291:	or     al,0x0
  419293:	push   ebx
  419294:	jp     0x41930c
  419296:	scas   al,BYTE PTR es:[edi]
  419297:	std    
  419298:	cmp    al,BYTE PTR gs:[esp+0x0]
	...
  4192ad:	add    BYTE PTR [eax],al
  4192af:	add    BYTE PTR [edx+0x39],bh
  4192b2:	inc    esp
  4192b3:	and    al,0x72
  4192b5:	mov    ebp,ebx
  4192b7:	cld    
  4192b8:	(bad)  
  4192b9:	aam    0xe4
  4192bb:	mov    bl,BYTE PTR [edi+0x61e830b8]
  4192c1:	mov    eax,ds:0xd9dffd8d
  4192c6:	test   eax,0x35085e0b
  4192cb:	xor    al,0xd9
  4192cd:	sbb    eax,0x5305e3ce
  4192d2:	stos   DWORD PTR es:[edi],eax
  4192d3:	mov    WORD PTR [edi],ss
  4192d5:	pop    ebx
  4192d6:	(bad)  
  4192d7:	retf   
  4192d8:	lahf   
  4192d9:	xor    BYTE PTR [eax+0x78],dl
  4192dc:	mov    dh,0xf5
  4192de:	jge    0x4192e2
  4192e0:	(bad)  
  4192e1:	fnstenv [esi+0x51deeba8]
  4192e7:	push   0xfffffffd
  4192e9:	fldl2t 
  4192eb:	js     0x419304
  4192ed:	ret    0x9278
  4192f0:	(bad)  
  4192f1:	fstp   DWORD PTR [esi+0x37]
  4192f4:	jle    0x4192bf
  4192f6:	ins    BYTE PTR es:[edi],dx
  4192f7:	mov    cl,0x5f
  4192f9:	pop    edi
  4192fa:	and    al,0x3
  4192fc:	(bad)  
  4192fd:	fstp   DWORD PTR [esi+0xf]
  419300:	xchg   ch,al
  419302:	pop    esp
  419303:	pop    ss
  419304:	jle    0x41931e
  419306:	les    esi,FWORD PTR [bx+0x62]
  41930a:	adc    BYTE PTR [ecx],bl
  41930c:	jns    0x41936a
  41930e:	lods   al,BYTE PTR ds:[esi]
  41930f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419310:	xor    ecx,DWORD PTR [ecx]
  419312:	or     esi,esi
	...
  419328:	sub    eax,0xe303a9c7
  41932d:	xchg   ebp,eax
  41932e:	out    dx,al
  41932f:	jle    0x419350
  419331:	mov    BYTE PTR [eax-0x5ba3d209],al
  419337:	fwait
  419338:	adc    ch,BYTE PTR [esi+0x195433fd]
  41933e:	jmp    0x5dcb:0x69dd9e86
  419345:	and    al,0xe6
  419347:	and    DWORD PTR [esi+esi*4+0xe9521e9],0xffffffd1
  41934f:	adc    BYTE PTR [eax+0x43],ch
  419352:	add    ebp,ebp
  419354:	mov    edx,0xbb19e614
  419359:	pop    ss
  41935a:	std    
  41935b:	cmp    ecx,ebx
  41935d:	leave  
  41935e:	push   eax
  41935f:	mul    DWORD PTR [ecx-0x5e9d9d27]
  419365:	mov    dh,0x80
  419367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419368:	sbb    dh,BYTE PTR [edx+ecx*4]
  41936b:	out    dx,eax
  41936c:	inc    ebx
  41936d:	out    0x5b,al
  41936f:	jl     0x4193e3
  419371:	int3   
  419372:	data16 fnstcw WORD PTR [edx+0x14]
  419376:	out    dx,al
  419377:	sbb    DWORD PTR [ebx+0x17],edi
  41937a:	(bad)  
  41937b:	mov    eax,0xf750c9d8
  419380:	mov    eax,ds:0x216262d9
  419385:	mov    dl,0x80
  419387:	and    eax,0x4e4b2dda
	...
  4193a0:	fs aaa 
  4193a2:	mov    ah,BYTE PTR [edi-0x28c5cc31]
  4193a8:	push   edx
  4193a9:	fist   WORD PTR [ecx-0x3d]
  4193ac:	pop    esi
  4193ad:	inc    ebx
  4193ae:	add    eax,0x57ad6874
  4193b3:	adc    DWORD PTR [edi-0xc16fe40],eax
  4193b9:	push   ss
  4193ba:	in     al,0xeb
  4193bc:	jb     0x419382
  4193be:	push   ecx
  4193bf:	xchg   ebx,eax
  4193c0:	inc    bx
  4193c2:	adc    DWORD PTR [eax+ecx*2-0x25],ebp
  4193c6:	push   esi
  4193c7:	add    DWORD PTR [ebx-0x40],esi
  4193ca:	add    ecx,ebp
  4193cc:	fstp   DWORD PTR [edi+eiz*8-0x17]
  4193d0:	popa   
  4193d1:	aaa    
  4193d2:	mov    ah,BYTE PTR [edi]
  4193d4:	ins    BYTE PTR es:[edi],dx
  4193d5:	pop    eax
  4193d6:	ret    
  4193d7:	add    al,0xe5
  4193d9:	xchg   esi,eax
  4193da:	cmp    DWORD PTR [ecx+ebx*2],ebx
  4193dd:	pop    eax
  4193de:	dec    edi
  4193df:	add    BYTE PTR [eax+eiz*2],ah
  4193e2:	dec    BYTE PTR [ebx+0x1f08cd7]
  4193e8:	dec    ebx
  4193e9:	(bad)  [ecx+0x31a55f54]
  4193ef:	leave  
  4193f0:	inc    edx
  4193f1:	add    dl,BYTE PTR [ecx]
  4193f3:	lea    edi,[esi-0x59]
  4193f6:	or     eax,0x4831ca44
  4193fb:	dec    eax
  4193fc:	cmp    BYTE PTR [ebx+0x63],cl
  4193ff:	cmp    DWORD PTR [edx],eax
  419401:	mov    al,0x40
  419403:	into   
	...
  419418:	jo     0x41947d
  41941a:	sub    BYTE PTR [ecx+0x59],dl
  41941d:	xor    dl,BYTE PTR [ebp+0x24]
  419420:	mov    ebx,0x3b834be6
  419425:	lods   al,BYTE PTR ds:[esi]
  419426:	dec    esp
  419427:	mov    dl,0xf8
  419429:	push   eax
  41942a:	dec    edi
  41942b:	(bad)  
  41942c:	retf   0x89d8
  41942f:	lock ds dec edx
  419432:	jne    0x419449
  419434:	push   eax
  419435:	in     al,0x24
  419437:	sbb    al,0xed
  419439:	sub    eax,DWORD PTR [eax+ebp*8]
  41943c:	loop   0x419447
  41943e:	add    DWORD PTR [eax],eax
  419440:	inc    eax
  419441:	jb     0x4193ca
  419443:	fcom   DWORD PTR [ebx-0x75]
  419446:	in     al,dx
  419447:	inc    DWORD PTR [ebx+ebp*1+0x4d]
  41944b:	and    al,0x9f
  41944d:	push   eax
  41944e:	jno    0x419440
  419450:	mov    ebx,eax
  419452:	xchg   bl,al
  419454:	les    eax,FWORD PTR [edx]
  419456:	pop    eax
  419457:	pop    ebx
  419458:	cli    
  419459:	imul   esp,ecx,0x1
  41945c:	mov    ebx,eax
  41945e:	mov    esi,0x89e58b04
  419463:	push   esp
  419464:	pop    edi
  419465:	lods   eax,DWORD PTR ds:[esi]
  419466:	push   esi
  419467:	xor    ecx,DWORD PTR [ebp+0x621072a0]
  41946d:	xor    eax,0xf6651643
  419472:	mov    esi,0x602140d
  419477:	sub    DWORD PTR [esi+eiz*8],ebx
  41947a:	rol    DWORD PTR [edi+0x0],cl
	...
  41948d:	add    BYTE PTR [eax],al
  41948f:	add    BYTE PTR [edx-0x55b82012],ch
  419495:	out    0xe7,al
  419497:	inc    edi
  419498:	call   0xb9e:0x3a80fbce
  41949f:	adc    cl,ch
  4194a1:	shl    BYTE PTR [esi],0x89
  4194a4:	jmp    0x164a:0x62000039
  4194ab:	or     ah,BYTE PTR [edx-0x3e]
  4194ae:	popf   
  4194af:	adc    dh,BYTE PTR [eax]
  4194b1:	sbb    BYTE PTR [esi+0x255a900e],0xfb
  4194b8:	in     eax,dx
  4194b9:	xor    bl,BYTE PTR [esi-0x35f56ffa]
  4194bf:	sti    
  4194c0:	fld    QWORD PTR [edx]
  4194c2:	daa    
  4194c3:	push   edi
  4194c4:	mov    al,ds:0xd95300b5
  4194c9:	add    eax,0xc0b2ec80
  4194ce:	add    BYTE PTR [eax],al
  4194d0:	adc    DWORD PTR [ebp+edi*2+0x73],ecx
  4194d4:	push   0x43
  4194d6:	jge    0x4194cf
  4194d8:	fnstcw WORD PTR [edx-0x3f394f77]
  4194de:	add    BYTE PTR [eax],al
  4194e0:	out    dx,eax
  4194e1:	jl     0x41946f
  4194e3:	dec    edi
  4194e4:	or     BYTE PTR [ebp-0x366376d0],dh
  4194ea:	and    al,0x93
  4194ec:	test   DWORD PTR [edx+0x3e6dc07c],ebp
  4194f2:	cdq    
  4194f3:	inc    DWORD PTR [eax]
	...
  419505:	add    BYTE PTR [eax],al
  419507:	add    BYTE PTR [ebp-0x3f],dh
  41950a:	jge    0x419527
  41950c:	push   ss
  41950d:	fsincos 
  41950f:	inc    ebx
  419510:	bound  edi,QWORD PTR [edi]
  419512:	out    0x76,al
  419514:	mov    eax,ds:0xea5442a5
  419519:	sbb    edx,ebp
  41951b:	xor    ecx,DWORD PTR [edi-0x79]
  41951e:	addr16 mov edi,0xf8aa5456
  419524:	loope  0x419541
  419526:	jmp    0xe580f72e
  41952b:	jbe    0x4194ce
  41952d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41952e:	adc    cl,BYTE PTR [edx+ebx*8+0x19]
  419532:	jmp    0x66bf:0x67871f33
  419539:	push   esp
  41953a:	stos   BYTE PTR es:[edi],al
  41953b:	clc    
  41953c:	loope  0x419521
  41953e:	call   0xe39ff746
  419543:	mov    BYTE PTR [edx+0x6203e94d],dh
  419549:	pop    esp
  41954a:	and    eax,0xb3f9dc3
  41954f:	xor    al,0xdb
  419551:	fwait
  419552:	push   edx
  419553:	div    eax
  419555:	stos   BYTE PTR es:[edi],al
  419556:	push   ebx
  419557:	jg     0x4194fb
  419559:	fisub  DWORD PTR [ebp+0x6b]
  41955c:	int    0xaa
  41955e:	jmp    0x128f:0xa55c611d
  419565:	pop    esp
  419566:	lods   eax,DWORD PTR ds:[esi]
  419567:	inc    edi
  419568:	adc    ch,BYTE PTR [edx+0x33d5]
	...
  41957e:	add    BYTE PTR [eax],al
  419580:	push   esp
  419581:	sbb    edx,ebp
  419583:	jl     0x4195e4
  419585:	push   esi
  419586:	inc    ebp
  419587:	iret   
  419588:	lahf   
  419589:	stos   BYTE PTR es:[edi],al
  41958a:	adc    eax,DWORD PTR [ebx]
  41958c:	jecxz  0x419523
  41958e:	fiadd  WORD PTR [edx+eiz*4-0x2689662b]
  419595:	in     eax,0xfb
  419597:	xchg   DWORD PTR [edi-0x3f],edi
  41959a:	add    DWORD PTR [edi],esi
  41959c:	mov    al,ds:0x958300d9
  4195a1:	pop    edi
  4195a2:	inc    esi
  4195a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195a4:	cs pop esi
  4195a6:	mov    ss,WORD PTR ds:0xc1fcabe4
  4195ac:	sahf   
  4195ad:	cwde   
  4195ae:	add    ecx,ebp
  4195b0:	loope  0x4195df
  4195b2:	mov    ebp,0x4f564ce9
  4195b7:	call   0x34c26f1d
  4195bc:	pushf  
  4195bd:	(bad)  [ebx]
  4195bf:	data16 outs dx,BYTE PTR ds:[esi]
  4195c1:	stos   BYTE PTR es:[edi],al
  4195c2:	cld    
  4195c3:	jmp    0xe9ac4013
  4195c8:	call   0xe99b:0x9939d516
  4195cf:	adc    BYTE PTR [edx-0x27],dh
  4195d2:	add    BYTE PTR [ebx+eiz*8-0x10],dh
  4195d6:	cli    
  4195d7:	jle    0x4195be
  4195d9:	or     BYTE PTR [esi+0x78b1f227],cl
  4195df:	test   al,0x66
  4195e1:	(bad)  [ebx]
  4195e3:	lahf   
	...
  4195f8:	sub    ebp,DWORD PTR [edi+eiz*2-0x15]
  4195fc:	mov    edx,edx
  4195fe:	xchg   edx,eax
  4195ff:	add    DWORD PTR [eax-0x27],esp
  419602:	add    BYTE PTR [edx-0x59],ah
  419605:	push   edi
  419606:	jmp    0x2880ebd8
  41960b:	sub    edx,DWORD PTR [edx+0x33]
  41960e:	sub    BYTE PTR [ebx],ch
  419610:	push   edx
  419611:	and    BYTE PTR [eax],ch
  419613:	sub    edx,DWORD PTR [edx+0x14]
  419616:	adc    BYTE PTR [ecx],0x7c
  419619:	and    eax,0xdba3d225
  41961e:	test   BYTE PTR [esi+ebx*2],dl
  419621:	fld    DWORD PTR [eax]
  419623:	ret    0xdba3
  419626:	test   DWORD PTR [eax],eax
  419628:	xchg   ch,dl
  41962a:	add    BYTE PTR [eax],al
  41962c:	aad    0xe4
  41962e:	mov    DWORD PTR [edi],ecx
  419630:	add    BYTE PTR [eax*4-0x172a84ff],ch
  419637:	inc    edi
  419638:	(bad)  
  419639:	push   edx
  41963a:	(bad)  
  41963b:	jmp    0x42736a
  419640:	retf   
  419641:	shl    DWORD PTR [edi-0x29a5d3fd],1
  419647:	add    BYTE PTR [ebx],bh
  419649:	fst    QWORD PTR [edx+0x51]
  41964c:	mov    al,0xaf
  41964e:	mov    DWORD PTR [ecx+0xddc7],ecx
  419654:	and    edx,DWORD PTR ds:0x45fcffb3
  41965a:	ret    0x0
	...
  41966d:	add    BYTE PTR [eax],al
  41966f:	add    BYTE PTR [ebx],cl
  419671:	fisttp QWORD PTR [ecx-0x7bdbaaf1]
  419677:	nop
  419678:	cli    
  419679:	fadd   QWORD PTR [eax]
  41967b:	lea    esi,[esi]
  41967d:	adc    DWORD PTR [ecx-0x18],edx
  419680:	sti    
  419681:	js     0x419681
  419683:	jmp    edx
  419685:	adc    BYTE PTR [ecx],al
  419687:	add    bl,bh
  419689:	and    eax,DWORD PTR [esi]
  41968b:	adc    DWORD PTR [edx+0x700d74c8],0x63
  419692:	push   cs
  419693:	test   DWORD PTR [esi-0x24],ecx
  419696:	add    BYTE PTR [eax],al
  419698:	inc    ebx
  419699:	jmp    0x66f981a6
  41969e:	inc    eax
  41969f:	or     dl,cl
  4196a1:	pop    edi
  4196a2:	jo     0x4196ac
  4196a4:	inc    eax
  4196a5:	and    al,0x91
  4196a7:	add    DWORD PTR [ebx+0x42e852dc],edi
  4196ad:	push   0xfffffffe
  4196af:	push   DWORD PTR [edx+0x5c]
  4196b2:	add    DWORD PTR [eax],eax
  4196b4:	bound  esi,QWORD PTR [edx-0x28b17c87]
  4196ba:	cmp    ch,0x32
  4196bd:	sub    esi,DWORD PTR [esi-0x7cfd1a18]
  4196c3:	std    
  4196c4:	fdivrp st(2),st
  4196c6:	or     ebp,DWORD PTR [esi+0x4]
  4196c9:	xor    ecx,DWORD PTR [ecx+0x3c]
  4196cc:	gs mov edi,0xb6d70286
  4196d2:	cmp    BYTE PTR [ebx+0x0],0x0
	...
  4196e5:	add    BYTE PTR [eax],al
  4196e7:	add    BYTE PTR [edx-0x32027971],ah
  4196ed:	xchg   DWORD PTR [eax+eax*8+0x39],ebp
  4196f1:	xlat   BYTE PTR ds:[ebx]
  4196f2:	sbb    al,BYTE PTR [ecx-0x27a5a01]
  4196f8:	xor    eax,0xb8190b87
  4196fd:	xor    BYTE PTR [ebx-0x7d],0x9e
  419701:	jg     0x419689
  419703:	std    
  419704:	mov    dl,0xca
  419706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419707:	test   DWORD PTR [edx-0x1e2e7a4e],esp
  41970d:	jge    0x419708
  41970f:	hlt    
  419710:	sub    bh,BYTE PTR [eax+eax*8-0xb4dd02]
  419717:	xor    DWORD PTR [edx],esp
  419719:	lds    esi,FWORD PTR ss:[edi+edi*1+0x3b]
  41971e:	inc    ah
  419720:	lahf   
  419721:	or     bl,ch
  419723:	mov    ah,BYTE PTR [edx]
  419725:	mov    dl,0x79
  419727:	mov    dl,ch
  419729:	mov    al,0x0
  41972b:	add    bh,bl
  41972d:	jl     0x4196bb
  41972f:	xchg   DWORD PTR [edi],ebx
  419731:	push   cs
  419732:	jp     0x419733
  419734:	jmp    0xf565:0xa283906c
  41973b:	cld    
  41973c:	repnz adc eax,0xd9620000
  419742:	je     0x419783
  419744:	mov    cl,BYTE PTR [eax]
  419746:	adc    bl,BYTE PTR [edx+ebp*2+0x24e9d9]
	...
  41975d:	add    BYTE PTR [eax],al
  41975f:	add    BYTE PTR [esp+eax*1],ch
  419762:	and    edx,eax
  419764:	pop    esi
  419765:	fstp   DWORD PTR [eax+edi*2-0x73f9a472]
  41976c:	cmc    
  41976d:	mov    ah,0xbe
  41976f:	add    BYTE PTR [edx-0x27],ah
  419772:	pop    esp
  419773:	cmp    BYTE PTR [esi],bh
  419775:	fnstsw WORD PTR [ebx]
  419777:	sbb    ah,BYTE PTR [edx+0x33]
  41977a:	jmp    0xdb03:0xea2c049b
  419781:	sub    al,0xe2
  419783:	jbe    0x41971b
  419785:	std    
  419786:	icebp  
  419787:	test   BYTE PTR [ecx+esi*4-0x6a],dh
  41978b:	jbe    0x4197c4
  41978d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41978e:	pop    edi
  41978f:	cmc    
  419790:	loopne 0x419722
  419792:	ss (bad) 
  419794:	fcmovu st,st(0)
  419796:	lsl    ebx,WORD PTR [edi]
  419799:	retf   0x356e
  41979c:	pop    esi
  41979d:	push   esp
  41979e:	cs loopne 0x419806
  4197a1:	or     DWORD PTR [edx-0x7c58f69a],eax
  4197a7:	js     0x4197d5
  4197a9:	mov    dl,0x44
  4197ab:	xchg   esi,eax
  4197ac:	(bad)  
  4197ad:	fldenv [edi+esi*1+0x46]
  4197b1:	rol    DWORD PTR [ecx-0x16268f43],1
  4197b7:	rcr    BYTE PTR ds:0x399e6f08,1
  4197bd:	fwait
  4197be:	out    dx,al
  4197bf:	add    esi,DWORD PTR [ebx]
  4197c1:	push   edx
  4197c2:	xor    DWORD PTR [esi],ebp
	...
  4197d8:	fcmovnbe st,st(2)
  4197da:	fwait
  4197db:	js     0x4197c2
  4197dd:	dec    ebp
  4197de:	jmp    0x14ff9e6
  4197e3:	inc    ecx
  4197e4:	jl     0x419838
  4197e6:	add    ecx,ebp
  4197e8:	sub    bl,al
  4197ea:	das    
  4197eb:	pop    ds
  4197ec:	sbb    ah,BYTE PTR [ecx-0x6b]
  4197ef:	call   0x86cf7155
  4197f4:	xchg   ebp,eax
  4197f5:	or     edi,esp
  4197f7:	hlt    
  4197f8:	ror    ebx,0x40
  4197fb:	jmp    0x30c76bfa
  419800:	gs aam 0x87
  419803:	scas   al,BYTE PTR es:[edi]
  419804:	ins    DWORD PTR es:[edi],dx
  419805:	pop    ecx
  419806:	cmp    ecx,ebp
  419808:	push   ebp
  419809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41980a:	inc    esi
  41980b:	push   0xffffffa6
  41980d:	fisttp QWORD PTR [ecx+0x54]
  419810:	fimul  DWORD PTR [edx]
  419812:	cld    
  419813:	cld    
  419814:	lods   eax,DWORD PTR ds:[esi]
  419815:	retf   
  419816:	inc    eax
  419817:	jmp    0xe9013efa
  41981c:	popa   
  41981d:	fnstenv [edx-0x13]
  419820:	in     al,0x14
  419822:	and    eax,0x759ddadd
  419827:	adc    al,0xd5
  419829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41982a:	out    0x34,eax
  41982c:	or     al,0xde
  41982e:	jmpw   0x8212
  419832:	js     0x41983b
  419834:	sbb    ah,BYTE PTR [esi-0x38020b05]
  41983a:	inc    eax
  41983b:	jmp    0x419840
	...
  419850:	in     al,dx
  419851:	sub    al,0x25
  419853:	aad    0xe4
  419855:	mov    al,ds:0xf0ea7686
  41985a:	jmpw   0x8434
  41985e:	mov    esi,eax
  419860:	gs push eax
  419862:	or     BYTE PTR [eax-0x176aa21c],bh
  419868:	popa   
  419869:	fst    DWORD PTR [ebx-0x3f]
  41986c:	fstp   DWORD PTR [ebx]
  41986e:	inc    edx
  41986f:	add    bl,cl
  419871:	mov    cl,0xfc
  419873:	push   DWORD PTR [ebx+0x464ce8d9]
  419879:	fld    QWORD PTR [eax]
  41987b:	test   BYTE PTR [ebx-0x60],bh
  41987e:	adc    DWORD PTR [ebx-0x1306caac],ecx
  419884:	mov    ebx,ecx
  419886:	jg     0x41987e
  419888:	out    dx,eax
  419889:	ror    DWORD PTR [ecx+0x670b0006],1
  41988f:	add    DWORD PTR [ebp+ecx*8+0x5d],esp
  419893:	pop    esi
  419894:	(bad)  
  419895:	xchg   dl,al
  419897:	or     BYTE PTR [ebx+0x56],bh
  41989a:	inc    ebp
  41989b:	and    al,0x87
  41989d:	pop    esi
  41989e:	in     eax,dx
  41989f:	or     al,0x98
  4198a1:	adc    BYTE PTR [esi+0x33],0x20
  4198a5:	or     BYTE PTR [ecx-0x7fdc3f17],0xc0
  4198ac:	scas   eax,DWORD PTR es:[edi]
  4198ad:	lds    eax,FWORD PTR [ebx-0x173290bc]
  4198b3:	ja     0x4198b5
	...
  4198c5:	add    BYTE PTR [eax],al
  4198c7:	add    BYTE PTR ds:0x3a6a00d9,bl
  4198cd:	push   esi
  4198ce:	inc    ebp
  4198cf:	and    al,0x13
  4198d1:	mov    bh,0x4
  4198d3:	lea    ecx,[edi-0xf]
  4198d6:	sbb    BYTE PTR [eax-0x10],dl
  4198d9:	fsub   QWORD PTR [esi+0x1]
  4198dc:	dec    eax
  4198dd:	mov    WORD PTR [ecx+0x53],ss
  4198e0:	add    BYTE PTR [eax+eiz*1-0x75f146cc],0xcb
  4198e8:	shl    DWORD PTR [esp+ecx*8+0x1],cl
  4198ec:	sti    
  4198ed:	push   ebx
  4198ee:	icebp  
  4198ef:	test   DWORD PTR [ebp-0x54],ebp
  4198f2:	push   edi
  4198f3:	(bad)  
  4198f4:	mov    edi,0x68b2cfc
  4198f9:	fst    DWORD PTR [edx-0x18]
  4198fc:	bound  ebx,QWORD PTR [esi]
  4198fe:	mov    bl,0x0
  419900:	bound  esi,QWORD PTR [edi]
  419902:	js     0x419887
  419904:	mov    ebp,0x367fc39c
  419909:	fisubr WORD PTR [eax]
  41990b:	add    BYTE PTR [esi],dh
  41990d:	scas   al,BYTE PTR es:[edi]
  41990e:	mov    edx,DWORD PTR [esi+0x32]
  419911:	aaa    
  419912:	dec    esi
  419913:	call   0x41f37e
  419918:	cld    
  419919:	cs js  0x419932
  41991c:	adc    BYTE PTR [esi+0x3d72428b],bl
  419922:	inc    eax
  419923:	jae    0x41998b
  419925:	daa    
  419926:	dec    eax
  419927:	jmp    0x2c09ce8d
	...
  419940:	adc    edi,DWORD PTR ds:0xf93147c6
  419946:	xor    dl,dl
  419948:	(bad)  
  419949:	stc    
  41994a:	adc    al,0xd
  41994c:	sahf   
  41994d:	jno    0x4198dd
  41994f:	dec    ebx
  419950:	(bad)
  419955:	mov    al,0x0
  419957:	add    BYTE PTR [ecx+0x35d2608a],dl
  41995d:	arpl   WORD PTR [esi+0x6e663ace],cx
  419963:	std    
  419964:	and    eax,0xbc5d4a37
  419969:	sbb    eax,0xb61e80de
  41996e:	inc    esi
  41996f:	adc    BYTE PTR [edx+0x2f],ah
  419972:	jno    0x419990
  419974:	mov    cl,0xed
  419976:	(bad)  
  419977:	mov    BYTE PTR [esi-0x6a],dh
  41997a:	sub    al,0x55
  41997c:	mov    BYTE PTR [esi-0x3da5b975],cl
  419982:	mov    eax,DWORD PTR [esi+edi*1-0x76]
  419986:	ror    BYTE PTR [eax+0x1762d8cb],1
  41998c:	xor    cl,bl
  41998e:	test   eax,0xc0023503
  419993:	add    bh,BYTE PTR [eax]
  419995:	shr    DWORD PTR [edi+0x15fd2e8e],1
  41999b:	ins    BYTE PTR es:[edi],dx
  41999c:	jbe    0x419959
  41999e:	jmp    0x1f:0xbfda3803
	...
  4199b5:	add    BYTE PTR [eax],al
  4199b7:	add    cl,bl
  4199b9:	sbb    al,0x6
  4199bb:	sbb    al,0x32
  4199bd:	call   0x677072e4
  4199c2:	call   0x11f23653
  4199c7:	push   esp
  4199c8:	test   DWORD PTR [ebx+0x7fe15c5f],esp
  4199ce:	jle    0x4199bb
  4199d0:	jbe    0x4199fe
  4199d2:	(bad)  
  4199d3:	aas    
  4199d4:	fist   DWORD PTR ds:0xe17dd4ea
  4199da:	ss add al,0x62
  4199dd:	dec    esi
  4199de:	fiadd  DWORD PTR [esp+edx*2-0x2532a227]
  4199e5:	push   cs
  4199e6:	pop    edx
  4199e7:	lea    esi,[ebp-0x4e869b37]
  4199ed:	(bad)  [esi+0x78]
  4199f0:	dec    ebx
  4199f1:	xlat   BYTE PTR ds:[ebx]
  4199f2:	dec    cx
  4199f4:	jle    0x4199a7
  4199f6:	pop    ds
  4199f7:	cdq    
  4199f8:	(bad)  
  4199f9:	(bad)  
  4199fb:	mov    eax,0xf79c5d22
  419a00:	dec    edx
  419a01:	das    
  419a02:	int    0x34
  419a04:	xor    BYTE PTR [ecx],al
  419a06:	fwait
  419a07:	jb     0x4199ea
  419a09:	xchg   DWORD PTR ds:0x926a6f24,edx
  419a0f:	xchg   BYTE PTR [ecx],cl
  419a11:	and    al,0xe1
  419a13:	mov    WORD PTR [edi],fs
  419a15:	dec    edi
  419a16:	add    DWORD PTR ds:0xa967e13a,esp
	...
  419a30:	mov    eax,ds
  419a32:	ret    0x49b9
  419a35:	mov    ebp,0x1ce25ed9
  419a3a:	or     al,0x9e
  419a3c:	sbb    ah,al
  419a3e:	(bad)
  419a41:	call   0x91284a38
  419a46:	jmp    0xfce5d94c
  419a4b:	bound  ebx,QWORD PTR [ebx]
  419a4d:	add    al,0x5b
  419a4f:	mov    WORD PTR [esi+0x1c05c559],?
  419a55:	leave  
  419a56:	add    BYTE PTR [edx+ebp*4+0x71cd7d51],dh
  419a5d:	push   eax
  419a5e:	jmp    0xe4b5:0xe8d4bade
  419a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a66:	cld    
  419a67:	jno    0x419a0e
  419a69:	not    BYTE PTR [eax]
  419a6b:	ins    DWORD PTR es:[edi],dx
  419a6c:	and    DWORD PTR [esi],esp
  419a6e:	add    al,0xba
  419a70:	mov    eax,ds:0x61e984ba
  419a75:	fst    DWORD PTR [edx+0x51]
  419a78:	xchg   esi,eax
  419a79:	fadd   DWORD PTR [eax]
  419a7b:	jmp    0xce954610
  419a80:	jnp    0x419aa3
  419a82:	imul   ebp,DWORD PTR ds:0x4516a45e,0x50
  419a89:	sbb    DWORD PTR [ecx],eax
  419a8b:	ins    BYTE PTR es:[edi],dx
  419a8c:	sahf   
  419a8d:	sub    eax,0xa467430c
  419a92:	jne    0x419a61
	...
  419aa8:	jns    0x419afa
  419aaa:	leave  
  419aab:	xchg   ecx,eax
  419aac:	pop    ebp
  419aad:	sub    DWORD PTR [ecx],eax
  419aaf:	jmp    0x97c8438c
  419ab4:	sti    
  419ab5:	aad    0x2f
  419ab7:	add    bl,cl
  419ab9:	sub    eax,0xdd468b53
  419abe:	push   ecx
  419abf:	mov    edx,DWORD PTR [ebx-0x34000387]
  419ac5:	xchg   BYTE PTR [eax+esi*1-0x4a],ah
  419ac9:	aad    0x0
  419acb:	push   edi
  419acc:	push   eax
  419acd:	adc    ebp,ecx
  419acf:	mov    ebx,0x8bfe223e
  419ad4:	pop    ebp
  419ad5:	push   ecx
  419ad6:	shl    DWORD PTR [eax+edx*2+0x4e],0x45
  419adb:	and    al,0x97
  419add:	scas   eax,DWORD PTR es:[edi]
  419ade:	add    edi,edi
  419ae0:	out    0xd5,al
  419ae2:	add    eax,0x46e48583
  419ae8:	sti    
  419ae9:	aad    0x0
  419aeb:	push   ebx
  419aec:	repz in eax,0x6f
  419aef:	add    BYTE PTR [ebx-0x51],bh
  419af2:	sub    bh,bh
  419af4:	xlat   BYTE PTR ds:[ebx]
  419af5:	stc    
  419af6:	sub    BYTE PTR [ebx-0x6ed1cad3],cl
  419afc:	ins    BYTE PTR es:[edi],dx
  419afd:	and    al,BYTE PTR [ebp-0x762e1940]
  419b03:	into   
  419b04:	rcl    bh,0x66
  419b07:	add    DWORD PTR [ecx*8+0xc031],edi
	...
  419b1e:	add    BYTE PTR [eax],al
  419b20:	xor    bl,bl
  419b22:	mov    esi,eax
  419b24:	nop
  419b25:	jg     0x419b84
  419b27:	pop    ebp
  419b28:	or     ecx,edx
  419b2a:	add    BYTE PTR [ebp-0x50],dl
  419b2d:	xor    BYTE PTR [ebx+ecx*4+0x3a],cl
  419b31:	xchg   DWORD PTR [ebp-0x75],edx
  419b34:	mov    bl,0x40
  419b36:	cld    
  419b37:	dec    DWORD PTR [ebx]
  419b39:	mov    BYTE PTR [ebx-0x75],cl
  419b3c:	dec    esi
  419b3d:	int    0x66
  419b3f:	add    al,0x7e
  419b41:	xchg   ecx,eax
  419b42:	clc    
  419b43:	push   eax
  419b44:	bound  ebx,QWORD PTR [edx+0x28]
  419b47:	nop
  419b48:	std    
  419b49:	dec    edi
  419b4a:	test   al,al
  419b4c:	outs   dx,BYTE PTR ds:[esi]
  419b4d:	arpl   WORD PTR [edi+0x4d35ee4b],ax
  419b53:	je     0x419b8b
  419b55:	xor    DWORD PTR [ebp+0x0],edi
  419b58:	data16 adc al,BYTE PTR [eax]
  419b5b:	jne    0x419bdb
  419b5d:	or     al,BYTE PTR [edx-0x784d9d16]
  419b63:	lock fild WORD PTR [eax]
  419b66:	hlt    
  419b67:	push   ss
  419b68:	adc    eax,0xb6737b61
  419b6d:	sub    edx,ecx
  419b6f:	pop    es
  419b70:	adc    al,0xa
  419b72:	jl     0x419b01
  419b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b75:	out    0x83,eax
  419b77:	rcl    BYTE PTR [edi],0x7f
  419b7a:	xchg   esi,ecx
  419b7c:	mov    bh,BYTE PTR [edx+ebp*2+0x0]
  419b80:	bound  eax,QWORD PTR [eax+eax*2+0x5d]
	...
  419b97:	add    BYTE PTR [ecx+edi*8],ah
  419b9a:	inc    ecx
  419b9b:	or     BYTE PTR [edx+0x3b],ah
  419b9e:	ror    DWORD PTR [ebx],1
  419ba0:	jmp    0x23c91812
  419ba5:	mov    dh,0x8d
  419ba7:	das    
  419ba8:	mov    dl,0xb1
  419baa:	addr16 jmp 0x4cc94c99
  419bb0:	jle    0x419b60
  419bb2:	jge    0x419b64
  419bb4:	out    dx,al
  419bb5:	mov    al,0x0
  419bb7:	add    bh,dl
  419bb9:	in     eax,dx
  419bba:	sub    BYTE PTR [edx+ecx*8],cl
  419bbd:	ret    0xfff3
  419bc0:	xor    eax,0x3a50090c
  419bc5:	sub    eax,0x2e25fd95
  419bca:	inc    ebp
  419bcb:	or     eax,0x83f71f7
  419bd0:	(bad)  
  419bd1:	fstp   DWORD PTR [ecx+0x3]
  419bd4:	and    ch,cl
  419bd6:	jmp    0xee373a50
  419bdb:	add    dl,BYTE PTR [esp+edx*2+0x115c4599]
  419be2:	jno    0x419ba8
  419be4:	in     eax,dx
  419be5:	sub    esp,ebp
  419be7:	imul   edi,DWORD PTR [esi],0xffffffb3
  419bea:	jmp    0x5e42:0xc96eb03
  419bf1:	fldcw  WORD PTR [esi-0x28]
  419bf4:	or     ebp,0xd181d06e
  419bfa:	mov    ebx,0x88
	...
  419c0f:	add    BYTE PTR [esi],dh
  419c11:	cmc    
  419c12:	loope  0x419ba2
  419c14:	adc    al,dl
  419c16:	inc    edx
  419c17:	fst    DWORD PTR ss:[ecx]
  419c1a:	jmp    0x419c87
  419c1c:	or     al,0x83
  419c1e:	xor    edi,DWORD PTR [ebp-0x1e]
  419c21:	push   ds
  419c22:	out    0x3,al
  419c24:	xor    al,0x26
  419c26:	call   0xb5dd469f
  419c2b:	mov    BYTE PTR [esi+0x9],dh
  419c2e:	mov    ecx,0x60d12188
  419c33:	(bad)  
  419c34:	ins    DWORD PTR es:[edi],dx
  419c35:	dec    ebp
  419c36:	lods   eax,DWORD PTR ds:[esi]
  419c37:	jnp    0x419c4b
  419c39:	xor    DWORD PTR [edx-0x7e26db38],esp
  419c3f:	pop    eax
  419c40:	pop    ebp
  419c41:	lahf   
  419c42:	jmp    0x4d80:0x2d97a4d1
  419c49:	mov    bh,0xea
  419c4b:	mov    dl,0x60
  419c4d:	fldenv [esi+0x47]
  419c50:	push   esi
  419c51:	nop
  419c52:	test   al,0xb
  419c54:	bound  ebx,QWORD PTR [edx-0x2a]
  419c57:	and    edx,DWORD PTR [ebx-0x232957ae]
  419c5d:	adc    eax,0x58460d01
  419c62:	rcr    DWORD PTR [ecx+0x358a062f],0x3a
  419c69:	stc    
  419c6a:	cmp    eax,0xd96049
  419c6f:	out    0xe6,al
  419c71:	outs   dx,DWORD PTR ds:[esi]
  419c72:	add    ch,cl
	...
  419c88:	popa   
  419c89:	push   edx
  419c8a:	inc    edx
  419c8b:	in     eax,dx
  419c8c:	sti    
  419c8d:	retf   0x9150
  419c90:	addr16 cmp esp,0x76
  419c94:	mov    cl,0x9d
  419c96:	push   ss
  419c97:	adc    eax,0x6a01196c
  419c9c:	and    eax,0x562985cd
  419ca1:	push   ebp
  419ca2:	xchg   edx,eax
  419ca3:	call   0x132a7609
  419ca8:	pop    es
  419ca9:	lahf   
  419caa:	cld    
  419cab:	jo     0x419c52
  419cad:	cli    
  419cae:	sbb    al,0xfa
  419cb0:	and    DWORD PTR [edx+0x4d],edx
  419cb3:	or     eax,0x545567e
  419cb8:	dec    edx
  419cb9:	push   esi
  419cba:	inc    ebp
  419cbb:	int    0x3d
  419cbd:	mov    cl,0x32
  419cbf:	cwde   
  419cc0:	pusha  
  419cc1:	fld    DWORD PTR [edi+0x59ca8b31]
  419cc7:	shl    BYTE PTR [ebp-0xd8de706],1
  419ccd:	retf   
  419cce:	lods   eax,DWORD PTR ds:[esi]
  419cd0:	cmp    eax,0x7a17f3c1
  419cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cd6:	and    al,bh
  419cd8:	test   DWORD PTR [edx-0x3a7dba76],esi
  419cde:	test   edx,eax
  419ce0:	push   edx
  419ce1:	sub    ecx,DWORD PTR [eax+0x75a6e3d4]
  419ce7:	or     al,0xeb
  419ce9:	pop    ss
  419cea:	or     al,0x0
	...
  419d00:	mov    dl,0x99
  419d02:	and    BYTE PTR [eax],bl
  419d04:	mov    al,0x91
  419d06:	and    BYTE PTR [eax],ah
  419d08:	mov    eax,ds:0xffc181c9
  419d0d:	test   BYTE PTR [edi+edi*8+0xe],cl
  419d11:	mov    ss,WORD PTR [esi]
  419d13:	inc    eax
  419d14:	sti    
  419d15:	push   esi
  419d16:	lds    ecx,FWORD PTR [esi+ecx*4]
  419d19:	adc    eax,0x99801475
  419d1e:	and    BYTE PTR [eax],bl
  419d20:	cmp    al,0xd8
  419d22:	fld    DWORD PTR [ecx]
  419d24:	sti    
  419d25:	fld    DWORD PTR [ebx+0x39c1af44]
  419d2b:	(bad)  
  419d2c:	fld    DWORD PTR [edi]
  419d2e:	jmp    0xbb01:0xda22b20a
  419d35:	fld    DWORD PTR [ecx]
  419d37:	sti    
  419d38:	sahf   
  419d39:	mov    bl,0x89
  419d3b:	aad    0x3e
  419d3d:	sub    esi,DWORD PTR [ebp+0x2c]
  419d40:	mov    es,WORD PTR ss:[eax]
  419d43:	and    BYTE PTR [edx-0x2d72fe63],0x25
  419d4a:	jbe    0x419d9c
  419d4c:	xchg   edx,eax
  419d4d:	in     al,dx
  419d4e:	je     0x419d61
  419d50:	adc    BYTE PTR [ecx-0x2b7fe3e0],bl
  419d56:	jb     0x419d61
  419d58:	mov    al,ds:0x168037d4
  419d5d:	jle    0x419d5b
  419d5f:	jb     0x419d01
  419d61:	xchg   ebx,eax
  419d62:	jnp    0x419d25
	...
  419d78:	inc    eax
  419d79:	aam    0x0
  419d7b:	add    BYTE PTR [eax],dl
  419d7d:	or     ebp,DWORD PTR [edi-0x29]
  419d80:	rcr    BYTE PTR [edi],0x64
  419d83:	jmp    DWORD PTR [eax]
  419d85:	(bad)  
  419d86:	add    BYTE PTR [eax],al
  419d88:	mov    dh,0x94
  419d8a:	and    BYTE PTR [edx+eiz*2],dl
  419d8d:	xor    eax,0xb263d98f
  419d92:	add    al,ch
  419d94:	push   edx
  419d95:	mov    al,BYTE PTR [eax]
  419d97:	add    dh,bl
  419d99:	jb     0x419d8c
  419d9b:	or     eax,0x1420f6e9
  419da0:	or     ch,BYTE PTR ds:0x49620068
  419da6:	test   al,0x0
  419da8:	bound  esi,QWORD PTR [edx-0x61b9a375]
  419dae:	add    edi,ecx
  419db0:	pushf  
  419db1:	ficomp DWORD PTR [ebx-0x1]
  419db4:	in     eax,dx
  419db5:	mov    dl,0xd1
  419db7:	push   esp
  419db8:	in     eax,0x85
  419dba:	fcom   DWORD PTR ds:0x6c8bb222
  419dc0:	jle    0x419e20
  419dc2:	xor    eax,eax
  419dc4:	loope  0x419db4
  419dc6:	add    edi,DWORD PTR [eax]
  419dc8:	push   ds
  419dc9:	(bad)  
  419dca:	xor    dh,al
  419dcc:	and    eax,0x1f0d00ba
  419dd1:	jbe    0x419def
  419dd3:	sbb    al,0xdb
  419dd5:	imul   edi,esp,0xffffff88
  419dd8:	push   ds
  419dd9:	(bad)  
  419dda:	sub    al,0x50
	...
  419df0:	add    al,0x39
  419df2:	mov    edi,0xb73e706
  419df7:	push   ebx
  419df8:	xor    dh,bl
  419dfa:	adc    BYTE PTR [eax+0x6c],dl
  419dfd:	jb     0x419dff
  419dff:	and    DWORD PTR [esi+0x63fe83b6],0x7a4ec344
  419e09:	out    dx,eax
  419e0a:	pop    esp
  419e0b:	std    
  419e0c:	gs daa 
  419e0e:	push   edx
  419e0f:	push   eax
  419e10:	jmp    0x54a8060b
  419e15:	stos   DWORD PTR es:[edi],eax
  419e16:	jp     0x419d99
  419e18:	dec    esp
  419e19:	fscale 
  419e1b:	icebp  
  419e1c:	ja     0x419e50
  419e1e:	aam    0x5d
  419e20:	cmp    eax,0x51edea9c
  419e25:	dec    esi
  419e26:	and    eax,0x6c4e9200
  419e2b:	xor    BYTE PTR [esp+ebx*4],ah
  419e2e:	mov    ebx,0xb3092305
  419e33:	(bad)  
  419e35:	ret    
  419e36:	sub    DWORD PTR [ebx+eiz*8],eax
  419e39:	xchg   esp,eax
  419e3a:	idiv   BYTE PTR [esi+0x22]
  419e3d:	int3   
  419e3e:	je     0x419e84
  419e40:	mov    ch,al
  419e42:	popa   
  419e43:	rol    BYTE PTR [ecx-0x1f],0x2b
  419e47:	cmp    ch,ch
  419e49:	and    al,0xf5
  419e4b:	mov    WORD PTR [eax+edx*2],cs
  419e4e:	scas   eax,DWORD PTR es:[edi]
  419e4f:	ins    BYTE PTR es:[edi],dx
  419e50:	sub    BYTE PTR [ecx],0xe9
  419e53:	add    eax,DWORD PTR [eax]
	...
  419e65:	add    BYTE PTR [eax],al
  419e67:	add    dl,ch
  419e69:	adc    al,0xc6
  419e6b:	das    
  419e6c:	fisttp DWORD PTR [edi-0x2745e4ae]
  419e72:	jmp    0x1e36c504
  419e77:	mov    ebx,DWORD PTR [esi]
  419e79:	cmc    
  419e7a:	add    eax,0x15f51e87
  419e7f:	ins    BYTE PTR es:[edi],dx
  419e80:	inc    esi
  419e81:	ss jmp 0xe56868a
  419e87:	and    BYTE PTR [ebx+0x2f43f7d6],cl
  419e8d:	sti    
  419e8e:	(bad)  
  419e8f:	fsubr  st(2),st
  419e91:	xchg   esp,eax
  419e92:	retf   0x6645
  419e95:	fldenv [esi+0x68]
  419e98:	data16 or BYTE PTR [ebp-0x31f31b2f],dh
  419e9f:	adc    esi,DWORD PTR [ebx]
  419ea1:	adc    BYTE PTR [ebx+0xf5ae86],0xd9
  419ea8:	call   0xba12c3aa
  419ead:	inc    ebx
  419eae:	ins    BYTE PTR es:[edi],dx
  419eaf:	call   0x653aef15
  419eb4:	mov    edx,0x609a0526
  419eb9:	mov    al,0x79
  419ebb:	bound  eax,QWORD PTR [ebp-0x9]
  419ebe:	adc    BYTE PTR [edx-0x52],dh
  419ec1:	push   esi
  419ec2:	out    dx,al
  419ec3:	xor    eax,0xe6445003
  419ec8:	call   0x11ac3e2
	...
  419edd:	add    BYTE PTR [eax],al
  419edf:	add    bh,bh
  419ee1:	(bad)  
  419ee2:	sti    
  419ee3:	sbb    eax,0x9e50c142
  419ee8:	ins    BYTE PTR es:[edi],dx
  419ee9:	add    eax,0x585e2913
  419eee:	vpunpcklqdq ymm3,ymm4,YMMWORD PTR [ecx+0x15d6dd75]
  419ef6:	and    eax,0xd7d7a3d9
  419efb:	call   0x25cb7861
  419f00:	or     cl,0x37
  419f03:	pop    esp
  419f04:	iret   
  419f05:	sub    al,0x21
  419f08:	leave  
  419f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f0a:	fsubr  st,st(0)
  419f0c:	popa   
  419f0d:	fcos   
  419f0f:	push   ebp
  419f10:	outs   dx,BYTE PTR ds:[esi]
  419f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f12:	outs   dx,DWORD PTR ds:[esi]
  419f13:	jecxz  0x419eeb
  419f15:	xchg   esi,eax
  419f16:	push   0x29
  419f18:	ds call 0x5c51:0x945ee9fc
  419f20:	repz add BYTE PTR [edx],0xe9
  419f24:	popa   
  419f25:	push   eax
  419f26:	retf   
  419f27:	adc    esp,esp
  419f29:	mov    cl,0x1
  419f2b:	jmp    0x2ac87636
  419f30:	in     eax,dx
  419f31:	cwde   
  419f32:	jne    0x419f34
  419f34:	outs   dx,DWORD PTR ds:[esi]
  419f35:	push   ebx
  419f36:	push   eax
  419f37:	call   eax
  419f39:	adc    ecx,ebp
  419f3b:	popa   
  419f3c:	(bad)  
  419f3e:	add    BYTE PTR [edx-0x1731b28d],cl
	...
  419f58:	mov    eax,ds:0xce0000fa
  419f5d:	xchg   ecx,eax
  419f5e:	and    BYTE PTR [eax],bl
  419f60:	and    edi,DWORD PTR [eax+0x503b0160]
  419f66:	ret    0x7d5f
  419f69:	sbb    BYTE PTR [ecx-0x7d],0xc7
  419f6d:	rol    cl,1
  419f6f:	sbb    DWORD PTR [edi],0xffffffc9
  419f72:	push   ecx
  419f73:	push   ebp
  419f74:	jne    0x419fc2
  419f76:	dec    ebp
  419f77:	and    al,0x63
  419f79:	out    0xd9,al
  419f7b:	push   edi
  419f7c:	mov    ss,WORD PTR [ecx-0x767cebe0]
  419f82:	and    BYTE PTR [ebx],dl
  419f84:	add    BYTE PTR [ecx+0x35d32020],0x6b
  419f8b:	add    ebx,ecx
  419f8d:	dec    esi
  419f8e:	jmp    0x85137e18
  419f93:	fwait
  419f94:	mov    ebx,0xf78b00d5
  419f99:	mov    ecx,0x4c188b14
  419f9e:	inc    ebp
  419f9f:	and    al,0xb3
  419fa1:	pop    eax
  419fa2:	ror    DWORD PTR [edi],0x47
  419fa5:	push   edi
  419fa6:	add    DWORD PTR [eax],eax
  419fa8:	mov    ebx,0xb76af84e
  419fad:	and    dh,BYTE PTR [ebp+0x24]
  419fb0:	imul   edx,DWORD PTR [eax+0x46],0xf
  419fb4:	jmp    0x419fd8
  419fb6:	adc    BYTE PTR [ebp+eax*4-0x6b],dl
  419fba:	cld    
  419fbb:	add    BYTE PTR [eax],0x0
	...
  419fce:	add    BYTE PTR [eax],al
  419fd0:	inc    edi
  419fd1:	sar    DWORD PTR [edi-0x40],1
  419fd4:	bound  edi,QWORD PTR [ebx+eax*1]
  419fd7:	inc    esi
  419fd8:	jecxz  0x419fcc
  419fda:	push   edi
  419fdb:	jmp    DWORD PTR [ebp-0x51]
  419fde:	aaa    
  419fdf:	je     0x419f67
  419fe1:	scas   al,BYTE PTR es:[edi]
  419fe2:	repnz fisttp DWORD PTR [ecx+0x6d]
  419fe6:	cmp    BYTE PTR [esi+eax*4-0x4d],0x5
  419feb:	jae    0x419f71
  419fed:	cmp    BYTE PTR [ebx+0xd37e207],0x1
  419ff4:	lods   al,BYTE PTR ds:[esi]
  419ff5:	in     eax,dx
  419ff6:	xchg   DWORD PTR [esi+eax*4-0x72],edi
  419ffa:	in     eax,dx
  419ffb:	cmc    
  419ffc:	or     DWORD PTR [edx+0x4d610000],eax
  41a002:	aaa    
  41a003:	pause  
  41a005:	lods   al,BYTE PTR ds:[esi]
  41a006:	xchg   ebp,eax
  41a008:	jnp    0x41a04c
  41a00a:	push   edi
  41a00b:	inc    DWORD PTR ds:0x92c2ff83
  41a011:	add    eax,0x8263d98e
  41a016:	add    BYTE PTR [ecx-0x1abea4e4],cl
  41a01c:	bound  eax,QWORD PTR [edx+0x3be6d88a]
  41a022:	in     al,dx
  41a023:	or     al,0x25
  41a025:	stc    
  41a026:	repz and ebp,DWORD PTR [edx+0x5b]
  41a02a:	or     BYTE PTR [eax],bh
  41a02c:	and    eax,0xea0fec8a
  41a031:	push   edi
  41a032:	or     BYTE PTR [ecx+0x0],cl
	...
  41a048:	push   cs
  41a049:	out    0x1c,al
  41a04b:	mov    DWORD PTR [edi+0x636e871a],ebx
  41a051:	or     BYTE PTR [edx+0x67c5e9d8],0x84
  41a058:	jl     0x419fdc
  41a05a:	add    BYTE PTR [ebx-0x17db21e2],cl
  41a060:	aad    0xd9
  41a062:	xchg   BYTE PTR [edx+eiz*2],al
  41a065:	arpl   WORD PTR [edi],sp
  41a067:	(bad)  
  41a068:	pop    ss
  41a069:	ss scas eax,DWORD PTR es:[edi]
  41a06b:	and    BYTE PTR [esi-0x252fd913],0x85
  41a072:	cdq    
  41a073:	aam    0xe8
  41a075:	and    eax,0x7746afe
  41a07a:	jmp    0x75da8182
  41a07f:	push   ebp
  41a081:	fnstenv [eax-0x2d5f14bf]
  41a087:	iret   
  41a088:	aas    
  41a089:	fldl2t 
  41a08b:	sub    BYTE PTR [ecx+0x2218e695],0x90
  41a092:	mov    ds:0xce5c234b,al
  41a097:	or     BYTE PTR [ebx-0x6174e3d2],dh
  41a09d:	mov    ebp,0x24d8ccd5
  41a0a2:	into   
  41a0a3:	(bad)  
  41a0a5:	mov    cl,BYTE PTR ds:0x9a646203
  41a0ab:	jg     0x41a0ad
	...
  41a0bd:	add    BYTE PTR [eax],al
  41a0bf:	add    ah,dh
  41a0c1:	or     eax,0x842231e6
  41a0c6:	adc    eax,0xd5bd3689
  41a0cb:	rcl    dh,cl
  41a0cd:	or     al,0xce
  41a0cf:	sub    ebx,ebx
  41a0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0d2:	and    BYTE PTR [ecx],0xc6
  41a0d5:	xchg   edi,eax
  41a0d6:	arpl   dx,bp
  41a0d8:	popa   
  41a0d9:	cmp    BYTE PTR [ecx],ah
  41a0db:	clc    
  41a0dc:	sub    ebp,0xbd29c1e2
  41a0e2:	cmc    
  41a0e3:	xor    DWORD PTR [ebx+0x23f0435d],ecx
  41a0e9:	data16 lods al,BYTE PTR ds:[esi]
  41a0eb:	or     BYTE PTR [edi+0x50],ah
  41a0ee:	add    DWORD PTR [edi-0x67aed7a8],ebp
  41a0f4:	mov    al,0x60
  41a0f6:	dec    ebp
  41a0f7:	int    0x31
  41a0f9:	add    eax,DWORD PTR [ecx]
  41a0fb:	pop    ebx
  41a0fc:	je     0x41a17d
  41a0fe:	mov    dl,0x22
  41a100:	popa   
  41a101:	fld    DWORD PTR [edi+0x7583e501]
  41a107:	out    0xea,eax
  41a109:	sbb    eax,0x6224e125
  41a10e:	or     DWORD PTR [ecx],eax
  41a110:	pop    esi
  41a111:	inc    eax
  41a112:	add    ecx,ebp
  41a114:	xchg   edx,eax
  41a115:	sahf   
  41a116:	inc    edx
  41a117:	test   BYTE PTR [edi],0xb1
  41a11a:	test   DWORD PTR [ecx+0x62da1a5e],ebp
  41a120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a121:	add    DWORD PTR [edx+0xc4],0x0
	...
  41a137:	add    BYTE PTR [esi+0x6b378e94],ch
  41a13d:	and    al,0x76
  41a13f:	test   al,0xea
  41a141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a142:	jmp    0x11b4df2
  41a147:	arpl   WORD PTR [edx+0x1b445b34],sp
  41a14d:	pop    edx
  41a14e:	(bad)
  41a151:	loope  0x41a153
  41a153:	bound  ebx,QWORD PTR ds:0x153a04bb
  41a159:	sub    eax,0xe6db7254
  41a15e:	xchg   DWORD PTR [esi+0x46],esi
  41a161:	mov    bh,0x18
  41a163:	jg     0x41a149
  41a165:	sbb    edx,DWORD PTR [ebx]
  41a167:	retf   0x6051
  41a16a:	jmp    0x2b72:0x2ed9b769
  41a171:	in     al,0x94
  41a173:	lods   eax,DWORD PTR ds:[esi]
  41a174:	dec    ebp
  41a175:	in     eax,dx
  41a176:	call   0x11b7271
  41a17b:	add    BYTE PTR [ebp-0x27cf06a7],ch
  41a181:	xchg   esi,eax
  41a182:	xor    al,al
  41a184:	and    BYTE PTR [edx-0x26300081],cl
  41a18a:	add    edi,0xe8c76197
  41a190:	push   esp
  41a191:	push   0x1
  41a193:	add    BYTE PTR [ebp+eax*2+0x61288bd9],al
  41a19a:	into   
  41a19b:	call   0x41a1a0
	...
  41a1b0:	xor    cl,ch
  41a1b2:	sti    
  41a1b3:	(bad)  
  41a1b4:	mov    esi,0xbbde7b1a
  41a1b9:	mov    fs,WORD PTR [eax]
  41a1bb:	adc    al,0x3a
  41a1bd:	xchg   DWORD PTR [edi],ecx
  41a1bf:	mov    ecx,DWORD PTR [esi-0x4c74b423]
  41a1c5:	pop    ecx
  41a1c6:	cld    
  41a1c7:	(bad)  
  41a1c8:	cmp    ebp,DWORD PTR [edi-0x4d3c17ab]
  41a1ce:	std    
  41a1cf:	dec    DWORD PTR [edi-0x2b3d8ae3]
  41a1d5:	nop
  41a1d6:	and    BYTE PTR [eax+eax*4],dl
  41a1d9:	cs mov cl,bh
  41a1dc:	and    edi,DWORD PTR [ebx-0x7]
  41a1df:	inc    esp
  41a1e1:	pop    esp
  41a1e2:	jge    0x41a208
  41a1e4:	out    dx,eax
  41a1e5:	fsubr  QWORD PTR [edi+0x20]
  41a1e8:	and    DWORD PTR [ebx-0x6f447c05],0xdd968b13
  41a1f2:	cli    
  41a1f3:	enter  0xda78,0xb2
  41a1f7:	shr    BYTE PTR [ebp+ebp*4-0x79],0x46
  41a1fc:	mov    edi,0xdb60da9
  41a201:	fist   WORD PTR [eax-0x18]
  41a204:	int    0x75
  41a206:	add    DWORD PTR [eax],eax
  41a208:	bound  esi,QWORD PTR [eax+0x6]
  41a20b:	pop    ebp
  41a20c:	add    al,0x45
  41a20e:	retf   
  41a20f:	shl    DWORD PTR [esi-0x80],0x85
  41a213:	in     al,dx
	...
  41a228:	(bad)  
  41a229:	add    BYTE PTR [eax],0x0
  41a22c:	xor    DWORD PTR [ebp-0x26],esi
  41a22f:	xchg   BYTE PTR [esi],dl
  41a231:	fsubr  QWORD PTR [eax]
  41a233:	push   ebp
  41a234:	out    dx,eax
  41a235:	dec    ebx
  41a236:	and    al,0x14
  41a238:	mov    ch,BYTE PTR [edi]
  41a23a:	loope  0x41a23a
  41a23c:	ins    DWORD PTR es:[edi],dx
  41a23d:	cli    
  41a23e:	ins    BYTE PTR es:[edi],dx
  41a23f:	xchg   esi,esp
  41a241:	fwait
  41a242:	adc    BYTE PTR [ebx-0x57b73a3],al
  41a248:	pusha  
  41a249:	add    BYTE PTR [eax],0x89
  41a24c:	mov    esi,0x378314a6
  41a251:	mov    ah,0x84
  41a253:	in     eax,0x60
  41a255:	add    BYTE PTR [eax],0x89
  41a258:	daa    
  41a259:	stos   DWORD PTR es:[edi],eax
  41a25a:	fwait
  41a25b:	in     al,0x62
  41a25d:	cmp    BYTE PTR [ebp+0x44],0x7e
  41a261:	mov    cl,BYTE PTR [ecx+0x54066dc0]
  41a267:	add    ah,BYTE PTR [edx-0x7e]
  41a26a:	xor    ebx,ecx
  41a26c:	(bad)  [edi+0x7d]
  41a26f:	je     0x41a2af
  41a271:	scas   al,BYTE PTR es:[edi]
  41a272:	cmp    ebx,0x63
  41a275:	hlt    
  41a276:	les    ecx,FWORD PTR [edx-0x1847615a]
  41a27c:	fsubrp st(4),st
  41a27e:	add    eax,0xf442de00
  41a283:	xor    bh,ah
  41a285:	ins    DWORD PTR es:[edi],dx
  41a286:	hlt    
  41a287:	sub    al,0xe1
  41a289:	cmp    edi,edi
  41a28b:	imul   eax,DWORD PTR [eax],0x0
	...
  41a29d:	add    BYTE PTR [eax],al
  41a29f:	add    BYTE PTR [esi-0x3],dh
  41a2a2:	ret    
  41a2a3:	and    esp,DWORD PTR [esi]
  41a2a5:	jmp    0x41a27b
  41a2a7:	cld    
  41a2a8:	push   edi
  41a2a9:	fnstcw WORD PTR [ebp+0x66d92219]
  41a2af:	inc    edi
  41a2b0:	pop    esi
  41a2b1:	pop    esi
  41a2b2:	sub    dh,bh
  41a2b4:	push   esi
  41a2b5:	sbb    ebp,DWORD PTR [ecx+0x4a]
  41a2b8:	mov    ebx,0x5b03e9da
  41a2bd:	mov    ?,WORD PTR [eax+0x3f88db63]
  41a2c3:	pop    es
  41a2c4:	fisttp QWORD PTR ds:0x15eb1806
  41a2ca:	into   
  41a2cb:	adc    edx,DWORD PTR [ebx]
  41a2cd:	add    DWORD PTR [esi],ebp
  41a2cf:	add    esp,DWORD PTR [edx-0x27]
  41a2d2:	xlat   BYTE PTR ds:[ebx]
  41a2d3:	push   ebp
  41a2d4:	fldenv ds:0x4345f7c6
  41a2da:	pop    edx
  41a2db:	add    esp,DWORD PTR [edx+0x66]
  41a2de:	out    0xe0,al
  41a2e0:	dec    ebp
  41a2e1:	xchg   esp,eax
  41a2e2:	jmp    0x61e0:0xc61d1c03
  41a2e9:	data16 test BYTE PTR [ebx],0xeb
  41a2ed:	xchg   edi,eax
  41a2ee:	jno    0x41a2b8
  41a2f0:	xor    ebp,0x5d573b6c
  41a2f6:	daa    
  41a2f7:	push   es
  41a2f8:	(bad)  
  41a2f9:	(bad)  
  41a2fb:	dec    ecx
  41a2fc:	push   ebx
  41a2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2fe:	mov    bl,0x77
  41a300:	push   ebx
  41a301:	cdq    
  41a302:	inc    eax
  41a303:	or     al,BYTE PTR [eax]
	...
  41a315:	add    BYTE PTR [eax],al
  41a317:	add    BYTE PTR [edx+eiz*2+0x26],bh
  41a31b:	sub    BYTE PTR [edx],dh
  41a31d:	xor    ch,BYTE PTR [edi+0x76]
  41a320:	jge    0x41a2ad
  41a322:	mov    edi,0xe6d96203
  41a327:	js     0x41a302
  41a329:	adc    al,0xc6
  41a32b:	and    ebx,edx
  41a32d:	aas    
  41a32e:	or     al,0x9d
  41a330:	addr16 dec esp
  41a332:	sub    al,0x29
  41a334:	in     eax,0x2c
  41a336:	add    ebp,ecx
  41a338:	jge    0x41a335
  41a33a:	test   DWORD PTR [eax+0x2062b7b5],esp
  41a340:	nop
  41a341:	retf   0xff75
  41a344:	cs adc eax,0xf579f125
  41a34a:	ss fsubrp st(4),st
  41a34d:	jo     0x41a351
  41a34f:	jmp    0xee8d03b5
  41a354:	sbb    ebx,ebp
  41a356:	ss call 0x2f3e8285
  41a35c:	repz jnp 0x41a2e3
  41a35f:	call   0xa5c97cc5
  41a364:	inc    ebp
  41a365:	cmc    
  41a366:	das    
  41a367:	cmp    esp,ebp
  41a369:	aam    0x6d
  41a36b:	jmp    0xfe427cd1
  41a370:	fcmovbe st,st(0)
  41a372:	aad    0x7a
  41a374:	ins    DWORD PTR es:[edi],dx
  41a375:	sti    
  41a376:	test   DWORD PTR [eax],esp
  41a378:	arpl   WORD PTR [ebp+0x68],bx
  41a37b:	call   0x41a380
	...
  41a390:	popa   
  41a391:	fldenv [esi-0x15]
  41a394:	sub    ebp,edi
  41a396:	mov    DWORD PTR ds:0x6262c57a,esp
  41a39c:	sbb    edi,DWORD PTR [esi-0x44dc68f5]
  41a3a2:	bound  ebp,QWORD PTR [eax-0xd9d1e7f]
  41a3a8:	dec    ecx
  41a3a9:	pop    esi
  41a3aa:	inc    ebx
  41a3ab:	or     ah,BYTE PTR [edi+edx*8]
  41a3ae:	push   eax
  41a3af:	pop    esp
  41a3b0:	and    eax,0x569238b7
  41a3b5:	sti    
  41a3b6:	cmp    DWORD PTR [edi],edi
  41a3b8:	cmp    esp,esp
  41a3ba:	test   bh,dl
  41a3bc:	pusha  
  41a3bd:	fld    DWORD PTR [eax]
  41a3bf:	add    edi,DWORD PTR [ebx+0x31]
  41a3c2:	arpl   WORD PTR [eax],ax
  41a3c4:	push   edx
  41a3c5:	call   0x3943:0x14652c20
  41a3cc:	mov    esp,0x653a4b50
  41a3d1:	push   ss
  41a3d2:	loope  0x41a3dc
  41a3d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3d5:	xchg   ebp,eax
  41a3d6:	les    ecx,FWORD PTR [ebp+0x1066f005]
  41a3dc:	jmp    0x41a3f1
  41a3de:	inc    ebp
  41a3df:	and    al,0x6f
  41a3e1:	lods   eax,DWORD PTR ds:[esi]
  41a3e2:	mov    di,cx
  41a3e5:	mov    edx,0xa6b6ff36
  41a3ea:	push   ss
  41a3eb:	inc    eax
  41a3ec:	jnp    0x41a3c7
  41a3ee:	mov    ch,0x4c
  41a3f0:	lds    eax,FWORD PTR [bx+di+0xc4]
	...
  41a405:	add    BYTE PTR [eax],al
  41a407:	add    BYTE PTR [edi-0x4c],ch
  41a40a:	sti    
  41a40b:	out    0xa3,eax
  41a40d:	pop    ebx
  41a40e:	(bad)  
  41a40f:	(bad)  
  41a410:	jl     0x41a462
  41a412:	rcl    DWORD PTR [eax-0x42],0x12
  41a416:	and    eax,0xd64ba0
  41a41b:	call   0x3e521b
  41a420:	rcl    BYTE PTR [edx+0x20],0x28
  41a424:	loope  0x41a402
  41a426:	std    
  41a427:	xor    DWORD PTR [esi-0x41aff265],ebp
  41a42d:	pop    ecx
  41a42e:	and    eax,0xd63ba4
  41a433:	mov    DWORD PTR [edi-0x3f],eax
  41a436:	sub    al,0xe8
  41a438:	mov    dh,0xb5
  41a43a:	cld    
  41a43b:	(bad)  
  41a43c:	jle    0x41a3df
  41a43e:	and    BYTE PTR [esp+ecx*8],ch
  41a441:	push   eax
  41a442:	and    eax,0xd608d4
  41a447:	lea    ebp,[edi-0x3f]
  41a44a:	pushf  
  41a44b:	add    bl,bh
  41a44d:	aad    0x68
  41a44f:	cwde   
  41a450:	bound  esp,QWORD PTR [esi+0x58320000]
  41a456:	pop    edx
  41a457:	adc    ebp,0x5a
  41a45a:	mov    eax,eax
  41a45c:	push   esi
  41a45d:	enter  0xb46b,0x7e
  41a461:	je     0x41a463
  41a463:	add    BYTE PTR [edx-0x3d],ah
  41a466:	xor    al,0x73
  41a468:	bound  eax,QWORD PTR [eax+0x69d3]
	...
  41a47e:	add    BYTE PTR [eax],al
  41a480:	jle    0x41a487
  41a482:	leave  
  41a483:	and    ebp,DWORD PTR [edx]
  41a485:	push   eax
  41a486:	or     DWORD PTR [esi+eax*2+0x62000558],0x8d86d528
  41a491:	ror    BYTE PTR [eax+0x6be40ec0],cl
  41a497:	mov    ah,0x46
  41a499:	in     al,dx
  41a49a:	(bad)  
  41a49b:	jmp    DWORD PTR [edx+0x7]
  41a49e:	and    DWORD PTR [esi+edx*4],0xd00007e
  41a4a5:	test   DWORD PTR ds:0xa096f68b,0xd2826200
  41a4af:	cld    
  41a4b0:	mov    dl,0x76
  41a4b2:	test   al,al
  41a4b4:	push   ebp
  41a4b5:	std    
  41a4b6:	xchg   ebp,eax
  41a4b7:	add    BYTE PTR [edx-0x7e],ah
  41a4ba:	ja     0x41a538
  41a4bc:	jle    0x41a498
  41a4be:	ja     0x41a534
  41a4c0:	xchg   dh,dl
  41a4c2:	sub    al,0x1c
  41a4c4:	fs sub eax,0x6e1ae7d9
  41a4ca:	add    BYTE PTR [eax],al
  41a4cc:	fiadd  WORD PTR [edx-0xc]
  41a4cf:	dec    eax
  41a4d0:	and    al,0x77
  41a4d2:	cs (bad) 
  41a4d4:	fmul   st,st(6)
  41a4d6:	sub    BYTE PTR [eax],ah
  41a4d8:	mov    al,0x81
  41a4da:	ja     0x41a4aa
  41a4dc:	or     bl,dl
  41a4de:	push   ss
  41a4df:	imul   ebp,edi,0xffffff90
  41a4e2:	ins    DWORD PTR es:[edi],dx
  41a4e3:	mov    edi,0x0
	...
  41a4f8:	inc    ecx
  41a4f9:	and    DWORD PTR [ecx-0x31],esp
  41a4fc:	cmp    DWORD PTR [ecx-0x25c17a7f],0x5a287e9
  41a506:	retf   0x71d9
  41a509:	pop    esi
  41a50a:	sub    BYTE PTR cs:[esi],bl
  41a50d:	daa    
  41a50e:	sbb    ch,BYTE PTR [edi+0x51]
  41a511:	and    eax,0x5badc3fc
  41a516:	es jmp eax
  41a519:	cdq    
  41a51a:	(bad)  
  41a51c:	xor    al,BYTE PTR [ebx]
  41a51e:	les    esi,FWORD PTR [edx]
  41a520:	mov    al,0x32
  41a522:	push   edx
  41a523:	inc    esp
  41a524:	add    bl,dl
  41a526:	jmp    0x9f6bbab
  41a52b:	pop    esp
  41a52c:	(bad)  
  41a52d:	xor    cl,ch
  41a52f:	add    ebp,ecx
  41a531:	pop    ebp
  41a532:	into   
  41a533:	mov    esp,DWORD PTR [edx-0x27]
  41a536:	jmp    0xea3a6e96
  41a53b:	add    ebp,ebx
  41a53d:	adc    al,0xc6
  41a53f:	psubsw mm4,mm4
  41a542:	xchg   esp,eax
  41a543:	add    esp,DWORD PTR [edx-0x27]
  41a546:	jmp    0xd81e7e0e
  41a54b:	jl     0x41a4f3
  41a54d:	mov    ch,0xcd
  41a54f:	sub    dh,ch
  41a551:	or     edi,DWORD PTR [eax]
  41a553:	jns    0x41a503
  41a555:	mov    ch,0xf9
  41a557:	js     0x41a507
  41a559:	mov    ch,0xfd
  41a55b:	pop    edx
	...
  41a570:	pusha  
  41a571:	(bad)  
  41a572:	retf   
  41a573:	ins    DWORD PTR es:[edi],dx
  41a574:	jecxz  0x41a50c
  41a576:	repz xor DWORD PTR [eax],esi
  41a579:	lods   al,BYTE PTR fs:[esi]
  41a57b:	pop    esp
  41a57c:	or     DWORD PTR [ebx+0x38fb601],edx
  41a582:	and    eax,0x4cbc2a5c
  41a587:	cmp    dl,BYTE PTR [esi]
  41a589:	lea    edx,[esi]
  41a58b:	inc    ecx
  41a58c:	dec    esp
  41a58d:	sbb    DWORD PTR [ecx],eax
  41a58f:	push   0x2a
  41a591:	fisttp QWORD PTR [ebp+0x67318a25]
  41a597:	fnsave [edi-0x4e2b03e1]
  41a59d:	in     eax,0x40
  41a59f:	jmp    0x5c4f3a86
  41a5a4:	mov    ds:0xa05148bb,al
  41a5a9:	sti    
  41a5aa:	add    ecx,ebp
  41a5ac:	and    al,0x5d
  41a5ae:	and    eax,0xd96671
  41a5b3:	call   0xd961:0xce358161
  41a5ba:	xchg   DWORD PTR [ebp-0x141716c3],ebp
  41a5c0:	add    ebx,ecx
  41a5c2:	add    BYTE PTR [edx-0x5e],ah
  41a5c5:	mov    ebx,0xaff91118
  41a5ca:	add    ecx,ebp
  41a5cc:	jmp    0x41a567
  41a5ce:	call   0xe9de80b3
  41a5d3:	inc    DWORD PTR [eax]
	...
  41a5e5:	add    BYTE PTR [eax],al
  41a5e7:	add    al,al
  41a5e9:	fld    DWORD PTR [eax]
  41a5eb:	mov    ebx,0x9c5b2ca1
  41a5f0:	sbb    dl,BYTE PTR [eax]
  41a5f2:	lds    esi,FWORD PTR ds:0x2b00d963
  41a5f8:	(bad)
  41a5fd:	fld    DWORD PTR [eax]
  41a5ff:	ror    BYTE PTR [esi+ebp*4+0x6234e901],1
  41a606:	in     eax,dx
  41a607:	push   0x7d
  41a609:	xchg   ecx,eax
  41a60a:	add    BYTE PTR [eax],0x37
  41a60d:	(bad)  
  41a60e:	push   ecx
  41a60f:	mov    esp,DWORD PTR [esi-0xf]
  41a612:	push   edx
  41a613:	mov    ecx,edx
  41a615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a616:	adc    DWORD PTR [edi+ebx*2-0xf],0xffffff83
  41a61b:	inc    esp
  41a61c:	pop    ds
  41a61d:	jmp    0x41a69e
  41a61f:	fisttp DWORD PTR [esi-0x29]
  41a622:	xor    esi,esi
  41a624:	inc    eax
  41a625:	cld    
  41a626:	jmp    0x208fdc5e
  41a62b:	or     al,0x6a
  41a62d:	mov    bl,0x2
  41a62f:	mov    edx,DWORD PTR [ebx]
  41a631:	xor    ebx,DWORD PTR [ecx+0x46]
  41a634:	retf   
  41a635:	fidivr DWORD PTR [edi-0x40]
  41a638:	scas   al,BYTE PTR es:[edi]
  41a639:	dec    esp
  41a63a:	mov    DWORD PTR [edi+ebx*2-0x27],edi
  41a63e:	inc    ebp
  41a63f:	imul   eax,DWORD PTR [ecx+ebx*8],0xffffff89
  41a643:	iret   
  41a644:	dec    edx
  41a645:	sti    
  41a646:	(bad)  
  41a647:	out    0xac,eax
  41a649:	sti    
	...
  41a65e:	add    BYTE PTR [eax],al
  41a660:	adc    BYTE PTR [edx],cl
  41a662:	xor    dh,0xce
  41a665:	xlat   BYTE PTR ds:[ebx]
  41a666:	data16 cli 
  41a668:	shl    DWORD PTR [ecx],cl
  41a66a:	sub    al,0x8b
  41a66c:	mov    edi,0xad5710b6
  41a671:	std    
  41a672:	outs   dx,DWORD PTR ds:[esi]
  41a673:	adc    al,dh
  41a675:	sar    ebp,1
  41a677:	jne    0x41a6c0
  41a679:	std    
  41a67a:	outs   dx,DWORD PTR ds:[esi]
  41a67b:	or     BYTE PTR [esi+eax*4+0x20],ah
  41a67f:	sub    BYTE PTR [ebx+0x5a],dh
  41a682:	and    eax,0xf9113b01
  41a687:	test   DWORD PTR [eax+eax*4],esi
  41a68a:	add    ecx,DWORD PTR [ebx-0x1ea2cdab]
  41a690:	cmp    ebx,edx
  41a692:	jmp    0x7560649d
  41a697:	add    ah,BYTE PTR [edx-0x7]
  41a69a:	xor    ecx,DWORD PTR [ecx+0x58c6bf1d]
  41a6a0:	fstp   DWORD PTR [edx+ecx*8-0x7c7f8d3f]
  41a6a7:	in     al,dx
  41a6a8:	outs   dx,BYTE PTR ds:[esi]
  41a6a9:	repz rcl DWORD PTR [ebp-0x73],1
  41a6ad:	sub    eax,0xd05223c1
  41a6b2:	fiadd  DWORD PTR [edi]
  41a6b4:	fcmovnb st,st(3)
  41a6b6:	and    BYTE PTR [eax],ah
  41a6b8:	jmp    0x20260425
  41a6bd:	add    BYTE PTR [eax],0x83
  41a6c0:	mov    ds:0x88ef8c,al
	...
  41a6d5:	add    BYTE PTR [eax],al
  41a6d7:	add    BYTE PTR [esi-0x6c],cl
  41a6da:	adc    BYTE PTR [ebx+0x6a0186b4],al
  41a6e0:	mov    ebx,0xdf6a5be7
  41a6e5:	cmp    ebx,DWORD PTR [eax+edx*1]
  41a6e8:	adc    ch,BYTE PTR [edx+0x17ad88ff]
  41a6ee:	inc    edx
  41a6ef:	inc    ebx
  41a6f0:	bound  eax,QWORD PTR [eax+0x3817c081]
  41a6f6:	jns    0x41a73c
  41a6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6fa:	shr    BYTE PTR [ecx+0x6b],1
  41a6fd:	sti    
  41a6fe:	aaa    
  41a6ff:	call   0x41dbb5
  41a704:	out    0xbf,eax
  41a706:	icebp  
  41a707:	inc    ebp
  41a708:	xor    DWORD PTR [ebx],ebx
  41a70a:	jp     0x41a710
  41a70c:	xchg   ecx,eax
  41a70d:	or     DWORD PTR [edx+eax*8],ebx
  41a710:	jmp    0xda3cfcef
  41a715:	aad    0xf7
  41a717:	lods   al,BYTE PTR ds:[esi]
  41a718:	(bad)  
  41a719:	xchg   esi,eax
  41a71a:	adc    BYTE PTR [ecx],al
  41a71c:	mov    esi,0xa58b0c9e
  41a721:	adc    ch,0xfc
  41a724:	mov    dh,0xd9
  41a726:	or     eax,0x4de72708
  41a72b:	adc    ah,BYTE PTR [edx-0x1f32cf27]
  41a731:	cdq    
  41a732:	push   esi
  41a733:	sti    
  41a734:	(bad)  
  41a735:	(bad)  
  41a736:	je     0x41a700
  41a738:	add    al,0x80
  41a73a:	call   0x41a7bd
	...
  41a74f:	add    cl,dh
  41a751:	shl    BYTE PTR [esi+0x4d812bea],1
  41a757:	cli    
  41a758:	mov    bh,0xd4
  41a75a:	repnz mov cl,0x97
  41a75d:	fisubr DWORD PTR [eax-0x5727959d]
  41a763:	retf   0x2e37
  41a766:	das    
  41a767:	xchg   DWORD PTR [esi+0x3dd1a6dd],esp
  41a76d:	jnp    0x41a758
  41a76f:	add    esp,DWORD PTR [edx+0x60]
  41a772:	jns    0x41a74f
  41a774:	mov    DWORD PTR [esi+eiz*1],ebp
  41a777:	add    al,0x14
  41a779:	mov    ebp,?
  41a77b:	ror    DWORD PTR [edi+0x19],cl
  41a77e:	jmp    0x8a39:0x5edda686
  41a785:	es out 0x3,eax
  41a788:	bound  esp,QWORD PTR [eax+0x2c]
  41a78b:	leave  
  41a78c:	mov    ds:0x111b4e58,al
  41a791:	and    ebx,DWORD PTR [ebx-0x16257b57]
  41a797:	add    edx,DWORD PTR [eax+eiz*2]
  41a79a:	and    ebp,ebx
  41a79c:	and    ebx,DWORD PTR gs:[ebx]
  41a79f:	adc    BYTE PTR [edx-0x1cfc561d],bh
  41a7a5:	xchg   esp,eax
  41a7a6:	fidivr WORD PTR [eax-0x61]
  41a7a9:	aad    0x70
  41a7ab:	xor    bh,BYTE PTR [edx]
  41a7ad:	push   cs
  41a7ae:	mov    bl,0x4
  41a7b0:	bound  esp,QWORD PTR [eax+0x1]
  41a7b3:	lods   eax,DWORD PTR ds:[esi]
	...
  41a7c8:	push   ebp
  41a7c9:	ror    DWORD PTR [ebp+0xd8e15e],1
  41a7cf:	jmp    0xd1bebe7c
  41a7d4:	cld    
  41a7d5:	xchg   esi,eax
  41a7d6:	add    ecx,ebp
  41a7d8:	xor    BYTE PTR [edx],al
  41a7da:	add    DWORD PTR [ebx+0x6e],eax
  41a7dd:	das    
  41a7de:	mov    ?,WORD PTR ds:0x43e8e542
  41a7e4:	lods   al,BYTE PTR ds:[esi]
  41a7e5:	fld    DWORD PTR [eax]
  41a7e7:	fs jecxz 0x41a852
  41a7ea:	add    ecx,ebp
  41a7ec:	popa   
  41a7ed:	sub    DWORD PTR [edi-0x2f],esp
  41a7f0:	pop    ss
  41a7f1:	pop    edi
  41a7f2:	dec    ebp
  41a7f3:	lds    esi,FWORD PTR [ecx-0x7f]
  41a7f6:	push   ss
  41a7f7:	pop    ebx
  41a7f8:	pop    esi
  41a7f9:	fldcw  WORD PTR [edi]
  41a7fb:	mov    al,ds:0xe9fc8e05
  41a800:	popa   
  41a801:	(bad)  
  41a802:	(bad)  
  41a803:	sub    BYTE PTR [esi],bl
  41a805:	(bad)  
  41a806:	(bad)  
  41a807:	jmp    0x79f5866d
  41a80c:	ja     0x41a7a2
  41a80e:	mov    BYTE PTR [ecx+eiz*4],bh
  41a811:	dec    edx
  41a812:	jecxz  0x41a80d
  41a814:	cmp    DWORD PTR [edi-0x219e162a],esi
  41a81a:	mov    bl,0x29
  41a81c:	push   edi
  41a81d:	xchg   esp,eax
  41a81e:	or     BYTE PTR [edi],ch
  41a820:	pop    es
  41a821:	test   al,0x42
  41a823:	jo     0x41a808
  41a825:	jb     0x41a829
  41a827:	jmp    0x1350298d
	...
  41a840:	data16 (bad) [ebx]
  41a843:	pop    esi
  41a844:	out    dx,al
  41a845:	leave  
  41a846:	leave  
  41a847:	jb     0x41a7f6
  41a849:	retf   0xfc1
  41a84c:	outs   dx,BYTE PTR ds:[esi]
  41a84d:	cmp    esi,0xbd96630
  41a853:	add    BYTE PTR [ebp+edx*1+0x58b2c60a],al
  41a85a:	out    0x1,eax
  41a85c:	dec    ebx
  41a85d:	xlat   BYTE PTR ds:[ebx]
  41a85e:	mov    edi,eax
  41a860:	fsub   QWORD PTR [eax-0x11087ca9]
  41a866:	mov    esi,0x56a60b04
  41a86b:	push   edi
  41a86c:	in     eax,dx
  41a86d:	xor    ah,bh
  41a86f:	(bad)  
  41a870:	sti    
  41a871:	test   al,0x89
  41a873:	fnstenv [ecx+0x16ff51d5]
  41a879:	lahf   
  41a87a:	push   ss
  41a87b:	inc    eax
  41a87c:	or     ecx,DWORD PTR [esi]
  41a87e:	jge    0x41a8a4
  41a880:	pop    ds
  41a881:	lods   eax,DWORD PTR ds:[esi]
  41a882:	cmp    BYTE PTR [edx+0x29],bl
  41a885:	add    al,BYTE PTR [esi+0x4c]
  41a888:	fwait
  41a889:	add    cl,BYTE PTR [edx+0x4]
  41a88c:	inc    edx
  41a88d:	(bad)
  41a890:	push   edx
  41a891:	add    esi,edi
  41a893:	mov    esi,DWORD PTR [edx+ecx*8]
  41a896:	add    BYTE PTR [eax],al
  41a898:	retf   
  41a899:	or     eax,0x96955030
  41a89e:	cld    
  41a89f:	mov    BYTE PTR [eax-0x7f],bh
  41a8a2:	push   0x10
	...
  41a8b8:	cs pop ecx
  41a8ba:	leave  
  41a8bb:	add    BYTE PTR [ebx+0x88d50d6],cl
  41a8c1:	push   esi
  41a8c2:	add    DWORD PTR [eax],eax
  41a8c4:	jnp    0x41a86c
  41a8c6:	std    
  41a8c7:	(bad)  
  41a8c8:	mov    bl,0xd4
  41a8ca:	sti    
  41a8cb:	dec    DWORD PTR [ebx-0x742779fd]
  41a8d1:	(bad)  
  41a8d2:	add    BYTE PTR [eax+0xe],dl
  41a8d5:	push   ebp
  41a8d6:	xchg   ecx,eax
  41a8d7:	add    BYTE PTR [ebx-0x2a],bh
  41a8da:	push   eax
  41a8db:	call   DWORD PTR [ebp+0x6218c555]
  41a8e1:	jecxz  0x41a893
  41a8e3:	in     al,dx
  41a8e4:	popa   
  41a8e5:	add    BYTE PTR [eax],0x8b
  41a8e8:	fstp   st(3)
  41a8ea:	add    al,0x0
  41a8ec:	bound  esi,QWORD PTR [eax+0x73]
  41a8ef:	test   DWORD PTR [esi],edx
  41a8f1:	add    DWORD PTR [eax],0x3cf79200
  41a8f7:	call   0x4227b8
  41a8fc:	sbb    eax,0x6205fd63
  41a901:	cmp    BYTE PTR [ecx-0x7b],0x62
  41a905:	jb     0x41a907
  41a907:	add    BYTE PTR [edx+0x61f87c05],dh
  41a90d:	add    BYTE PTR [eax],0x50
  41a910:	jmp    0x60f5064b
  41a915:	add    BYTE PTR [eax],0x8b
  41a918:	fisttp QWORD PTR [ebx+0xfffe]
	...
  41a92e:	add    BYTE PTR [eax],al
  41a930:	(bad)  
  41a932:	ja     0x41a8fd
  41a934:	retf   0xff90
  41a937:	jmp    DWORD PTR [edx-0x51]
  41a93a:	cmp    eax,0x552c5ba
  41a93f:	add    BYTE PTR [ebx],ah
  41a941:	push   0x8062d730
  41a946:	repz mov ah,0xb2
  41a949:	dec    esi
  41a94a:	cmp    eax,0x4f2a5ba
  41a94f:	add    BYTE PTR [ebx],ah
  41a951:	rcr    DWORD PTR [edx+0x10],0x8a
  41a955:	fisttp WORD PTR [ebp+0x0]
  41a958:	bound  ebp,QWORD PTR [ebx-0x45a63f55]
  41a95e:	jge    0x41a8e1
  41a960:	test   BYTE PTR [eax-0x5170000],al
  41a966:	or     BYTE PTR [eax],cl
  41a968:	bound  eax,QWORD PTR [eax-0x271e793d]
  41a96e:	syscall 
  41a970:	(bad)  
  41a971:	fnstcw WORD PTR [ebx+0x2825237a]
  41a977:	add    BYTE PTR [edx+0x2c],ah
  41a97a:	mov    ch,0xcd
  41a97c:	scas   al,BYTE PTR es:[edi]
  41a97d:	push   esp
  41a97e:	xchg   BYTE PTR [edi],bl
  41a980:	push   esi
  41a981:	pop    esp
  41a982:	push   cs
  41a983:	clc    
  41a984:	jmp    0x5d2b:0x8827808a
  41a98b:	mov    esi,0xb6752961
  41a990:	test   eax,0x8c2471
	...
  41a9a5:	add    BYTE PTR [eax],al
  41a9a7:	add    BYTE PTR [edi],dl
  41a9a9:	mov    DWORD PTR [edi-0x43],ebx
  41a9ac:	mov    DWORD PTR [ebp+ebp*8-0x2d],edx
  41a9b0:	outs   dx,DWORD PTR ds:[esi]
  41a9b1:	sbb    edx,ebp
  41a9b3:	jl     0x41a99c
  41a9b5:	popf   
  41a9b6:	jmp    0xe478:0xd9f36203
  41a9bd:	pop    ecx
  41a9be:	jmp    0xaa7e:0x75296203
  41a9c5:	fldl2t 
  41a9c7:	add    esi,DWORD PTR [edx]
  41a9c9:	mov    BYTE PTR [edi-0x16259c25],dh
  41a9cf:	add    ebx,ecx
  41a9d1:	pop    edi
  41a9d2:	pop    edx
  41a9d3:	add    esp,DWORD PTR [edx-0x27]
  41a9d6:	sbb    DWORD PTR [ecx-0x21],edi
  41a9d9:	mov    eax,ds:0x296203ea
  41a9de:	imul   edx,DWORD PTR [edx-0x1d],0xffffff9d
  41a9e2:	add    bh,BYTE PTR [ecx-0x14]
  41a9e5:	imul   ebp,ecx,0x3
  41a9e8:	bound  edx,QWORD PTR [esi+0x73]
  41a9eb:	inc    edi
  41a9ec:	lea    ecx,[eax+0x640f5bea]
  41a9f2:	inc    ebx
  41a9f3:	data16 jmp 0x41a9ac
  41a9f6:	gs adc al,0x22
  41a9f9:	fld    DWORD PTR [eax]
  41a9fb:	cli    
  41a9fc:	cs pop esp
  41a9fe:	shl    DWORD PTR [ecx-0x17fb0eb5],0x61
  41aa05:	(bad)  [edi-0x47]
  41aa08:	ficomp DWORD PTR [edi-0x71]
  41aa0b:	call   0x41aa10
	...
  41aa20:	popa   
  41aa21:	fst    DWORD PTR [eax-0x48]
  41aa24:	cs test esi,edx
  41aa27:	ins    BYTE PTR es:[edi],dx
  41aa28:	mov    eax,ds:0x76ba1507
  41aa2d:	(bad)  
  41aa2e:	cmp    DWORD PTR [ebp-0x1d8a79e0],esp
  41aa34:	jp     0x41aa13
  41aa36:	add    ecx,ebp
  41aa38:	popa   
  41aa39:	add    al,0x5
  41aa3b:	inc    edi
  41aa3c:	cdq    
  41aa3d:	aad    0x3f
  41aa3f:	bound  ecx,QWORD PTR [edi+esi*1+0x6061e902]
  41aa46:	test   ch,dl
  41aa48:	arpl   cx,bx
  41aa4a:	add    BYTE PTR [ebx-0xa],dl
  41aa4d:	push   edx
  41aa4e:	or     DWORD PTR [edi+0x1900d961],0x6d
  41aa55:	pop    esi
  41aa56:	in     eax,0xea
  41aa58:	popa   
  41aa59:	fst    DWORD PTR [eax-0x62]
  41aa5c:	sub    DWORD PTR gs:[ebx],edx
  41aa5f:	sub    DWORD PTR [esi+0x5a],esp
  41aa62:	(bad)
  41aa65:	push   edi
  41aa66:	scas   eax,DWORD PTR es:[edi]
  41aa67:	call   0x5ecf83cd
  41aa6c:	inc    esi
  41aa6d:	fiadd  DWORD PTR [eax]
  41aa6f:	jmp    0x6ed97c7d
  41aa74:	aas    
  41aa75:	pop    esp
  41aa76:	shl    ecx,0x75
  41aa79:	icebp  
  41aa7a:	add    al,0xe8
  41aa7c:	popa   
  41aa7d:	(bad)  [edi-0x47]
  41aa80:	adc    al,0x5f
  41aa82:	scas   eax,DWORD PTR es:[edi]
  41aa83:	call   0x41aa88
	...
  41aa98:	popa   
  41aa99:	fst    DWORD PTR [eax+0x0]
  41aa9c:	js     0x41aab9
  41aa9e:	push   ecx
  41aa9f:	push   eax
  41aaa0:	xor    al,0x18
  41aaa2:	add    al,0xb5
  41aaa5:	xlat   BYTE PTR ds:[ebx]
  41aaa6:	xor    ecx,ecx
  41aaa8:	popf   
  41aaa9:	mov    dl,0x4c
  41aaab:	inc    ebx
  41aaac:	test   DWORD PTR [ecx-0x23c0c2f7],ecx
  41aab2:	add    BYTE PTR [eax],al
  41aab4:	test   BYTE PTR [esi-0x65d8769a],0x89
  41aabb:	xchg   BYTE PTR [ebp-0x26],dh
  41aabe:	add    BYTE PTR [eax],al
  41aac0:	mov    dl,0x4
  41aac2:	or     DWORD PTR [esi],eax
  41aac4:	cmp    ebx,ebx
  41aac6:	data16 or BYTE PTR [esi+0xb01c307],al
  41aacd:	fist   DWORD PTR [eax-0x73]
  41aad0:	jl     0x41aaac
  41aad2:	add    al,BYTE PTR [eax]
  41aad4:	sti    
  41aad5:	stos   BYTE PTR es:[edi],al
  41aad6:	std    
  41aad7:	adc    eax,0x40d74b
  41aadc:	mov    dh,al
  41aade:	or     al,0x8d
  41aae0:	test   DWORD PTR [eax],ebp
  41aae2:	cld    
  41aae3:	(bad)  
  41aae4:	sti    
  41aae5:	setle  BYTE PTR [edi*8+0x2ee800da]
  41aaed:	push   eax
  41aaee:	(bad)  
  41aaef:	(bad)  
  41aaf0:	sbb    bh,BYTE PTR ds:[ecx+0x2c]
  41aaf4:	arpl   cx,bx
  41aaf6:	sti    
  41aaf7:	(bad)  
  41aaf8:	mov    ebx,0x8d4ca9
	...
  41ab0d:	add    BYTE PTR [eax],al
  41ab0f:	add    BYTE PTR [ebp+0x28],cl
  41ab12:	cld    
  41ab13:	dec    ebx
  41ab15:	stos   BYTE PTR es:[edi],al
  41ab16:	xor    eax,eax
  41ab18:	dec    ebx
  41ab19:	lods   eax,DWORD PTR ds:[esi]
  41ab1a:	std    
  41ab1b:	aad    0x3e
  41ab1d:	sbb    bh,BYTE PTR [ebx+0x14]
  41ab20:	js     0x41aae4
  41ab22:	bound  edi,QWORD PTR [ecx]
  41ab24:	(bad)  
  41ab25:	cdq    
  41ab26:	(bad)  
  41ab27:	je     0x41ab8b
  41ab29:	jnp    0x41ab4e
  41ab2b:	add    al,0x63
  41ab2d:	jo     0x41ab2f
  41ab2f:	jnp    0x41ab97
  41ab31:	xchg   esi,eax
  41ab32:	ja     0x41ab40
  41ab34:	and    DWORD PTR [ebx],ecx
  41ab36:	jle    0x41ab22
  41ab38:	arpl   WORD PTR [eax+0x0],si
  41ab3b:	xchg   ebp,ebx
  41ab3d:	xchg   esp,eax
  41ab3e:	clc    
  41ab3f:	call   FWORD PTR [ebp-0x61]
  41ab42:	(bad)  
  41ab43:	pop    edx
  41ab44:	mov    ecx,0xb6fffbb2
  41ab49:	sti    
  41ab4a:	push   ebx
  41ab4b:	jg     0x41ab83
  41ab4d:	js     0x41ab4e
  41ab4f:	jmp    DWORD PTR [edx-0xd]
  41ab52:	call   0xdf00:0x608734f8
  41ab59:	lock pop DWORD PTR [eax]
  41ab5c:	bound  esi,QWORD PTR [eax-0x30]
  41ab5f:	mov    ch,bh
  41ab61:	ja     0x41abc2
  41ab63:	std    
  41ab64:	adc    eax,0x62ad96a8
  41ab69:	jo     0x41aaee
  41ab6b:	jnp    0x41abc3
  41ab6d:	jo     0x41ab43
  41ab6f:	push   cs
  41ab70:	std    
  41ab71:	les    edx,FWORD PTR [eax]
  41ab73:	mov    eax,DWORD PTR [eax]
	...
  41ab85:	add    BYTE PTR [eax],al
  41ab87:	add    bh,ah
  41ab89:	xchg   edi,eax
  41ab8a:	pop    edi
  41ab8b:	std    
  41ab8c:	in     eax,dx
  41ab8d:	dec    esi
  41ab8e:	fiadd  DWORD PTR [edi]
  41ab90:	cli    
  41ab91:	test   BYTE PTR [ebp+0x43496200],dl
  41ab97:	or     BYTE PTR [edx-0x33],ah
  41ab9a:	mov    ebp,esp
  41ab9c:	loope  0x41abf1
  41ab9e:	pop    ebp
  41ab9f:	jg     0x41ab57
  41aba1:	arpl   WORD PTR [edi],ax
  41aba3:	add    BYTE PTR [edx-0x1a],ah
  41aba6:	mov    ebp,edi
  41aba8:	out    0xf3,eax
  41abaa:	sub    BYTE PTR [eax],dl
  41abac:	arpl   WORD PTR [eax+0x0],si
  41abaf:	call   0x46f876
  41abb4:	loope  0x41ab8e
  41abb6:	int    0x27
  41abb8:	push   0xffffffd9
  41abba:	ins    BYTE PTR es:[edi],dx
  41abbb:	mov    BYTE PTR [esi-0x70],al
  41abbe:	in     eax,dx
  41abbf:	add    esp,DWORD PTR [edx+0x29]
  41abc2:	pop    ebp
  41abc3:	rol    BYTE PTR [ecx-0x2b],1
  41abc6:	push   ecx
  41abc7:	jmp    0xec2b8492
  41abcc:	jg     0x41aba5
  41abce:	jmp    0x9e95b7d6
  41abd3:	daa    
  41abd4:	jb     0x41ac47
  41abd6:	adc    DWORD PTR [edx+eiz*2+0x418ebbd9],edx
  41abdd:	daa    
  41abde:	daa    
  41abdf:	mov    bh,0xaf
  41abe1:	sub    al,0x5f
  41abe3:	pop    ebp
  41abe4:	jmp    0x41abfb
  41abe6:	into   
  41abe7:	repz call 0x470439
	...
  41abfd:	add    BYTE PTR [eax],al
  41abff:	add    BYTE PTR [edx-0x27],ah
  41ac02:	add    DWORD PTR [ebp+ecx*8+0x2288eb84],ebp
  41ac09:	add    dh,BYTE PTR [eax]
  41ac0b:	pop    ss
  41ac0c:	cmp    ebp,DWORD PTR [ecx]
  41ac0e:	aaa    
  41ac0f:	out    dx,al
  41ac10:	jno    0x41ac3d
  41ac12:	cmp    ah,BYTE PTR [ebx-0x72]
  41ac15:	mov    ebp,0x8492b705
  41ac1a:	fld    QWORD PTR [ebx]
  41ac1c:	gs sbb edx,ebp
  41ac1f:	mov    BYTE PTR [edx],ah
  41ac21:	add    al,0xf8
  41ac23:	sbb    eax,DWORD PTR [esi+0x65d7aadb]
  41ac29:	pop    eax
  41ac2a:	mov    ds:0x71bc58f7,al
  41ac2f:	jmp    DWORD PTR [edi-0x11]
  41ac32:	loope  0x41ac96
  41ac34:	dec    esi
  41ac35:	mov    ebp,0x3be790f1
  41ac3a:	jmp    0x7b6b0e42
  41ac3f:	clc    
  41ac40:	sbb    eax,0x5e2900eb
  41ac45:	push   edx
  41ac46:	inc    ebp
  41ac47:	lds    eax,FWORD PTR [ebp+0x5c]
  41ac4a:	test   BYTE PTR [edi+0x6a00d95e],dl
  41ac50:	and    eax,0xf4e8b0d5
  41ac55:	(bad)  
  41ac56:	sub    DWORD PTR cs:[eax+0x652b5826],esp
  41ac5d:	(bad)  [edi-0x69]
  41ac60:	test   al,0x51
  41ac62:	cli    
  41ac63:	bound  eax,QWORD PTR [eax]
	...
  41ac75:	add    BYTE PTR [eax],al
  41ac77:	add    BYTE PTR [ebp-0x7a3ef48],dl
  41ac7d:	inc    esi
  41ac7e:	add    ch,cl
  41ac80:	popa   
  41ac81:	jno    0x41acbe
  41ac83:	add    al,0x86
  41ac86:	xchg   BYTE PTR [ecx],ch
  41ac88:	sub    DWORD PTR [edx],edx
  41ac8a:	xor    BYTE PTR [edx],dh
  41ac8c:	hlt    
  41ac8d:	sub    BYTE PTR [edi-0x23],ah
  41ac90:	sti    
  41ac91:	adc    edi,esp
  41ac93:	jne    0x41ac1a
  41ac95:	mov    ebp,0xe8c09a4f
  41ac9a:	add    al,bl
  41ac9c:	and    DWORD PTR [ebp+eax*4+0x38ca00a9],eax
  41aca3:	cmp    eax,0xe1758658
  41aca8:	fiadd  WORD PTR [eax+0x514b4c15]
  41acae:	sbb    eax,0xfbdc07ef
  41acb3:	xor    eax,0x6e8de13a
  41acb8:	cwde   
  41acb9:	test   ah,bh
  41acbb:	jmp    0x395831d1
  41acc0:	fadd   st,st(3)
  41acc2:	add    BYTE PTR [edx-0x66],dh
  41acc5:	mov    bh,0x24
  41acc7:	pusha  
  41acc8:	fist   DWORD PTR [edx+0x5a61e902]
  41acce:	lds    eax,FWORD PTR [eax]
  41acd0:	scas   eax,DWORD PTR es:[edi]
  41acd1:	addr16 cld 
  41acd3:	jmp    0x464d:0x5fc0edb9
  41acda:	ret    0xc
	...
  41aced:	add    BYTE PTR [eax],al
  41acef:	add    BYTE PTR [ebx-0x572a9b4],cl
  41acf5:	retf   0xfffb
  41acf8:	jnp    0x41ad4e
  41acfa:	dec    ebp
  41acfb:	and    al,0x7f
  41acfd:	out    dx,eax
  41acfe:	aad    0x98
  41ad00:	sub    al,0xfa
  41ad02:	jg     0x41acc4
  41ad04:	mov    ds:0xc8db31b5,eax
  41ad09:	dec    esp
  41ad0a:	push   0x14
  41ad0c:	lds    eax,FWORD PTR [edi-0x3]
  41ad0f:	je     0x41ad78
  41ad11:	mov    ebp,0x8a7c5351
  41ad16:	cld    
  41ad17:	adc    bl,bh
  41ad19:	(bad)  
  41ad1a:	jg     0x41acdc
  41ad1c:	in     eax,dx
  41ad1d:	mov    WORD PTR [esp+ebx*2],?
  41ad20:	inc    ebp
  41ad21:	cli    
  41ad22:	je     0x41ad2c
  41ad24:	enter  0x1525,0x7d
  41ad28:	inc    esp
  41ad29:	dec    edi
  41ad2a:	sbb    eax,0xe9d66b06
  41ad2f:	add    bl,cl
  41ad31:	push   ss
  41ad32:	pop    ebx
  41ad33:	pop    ebx
  41ad34:	leave  
  41ad35:	fiadd  DWORD PTR [eax]
  41ad37:	push   ecx
  41ad38:	dec    edx
  41ad39:	dec    esp
  41ad3a:	dec    edi
  41ad3b:	push   esi
  41ad3c:	add    ah,0x89
  41ad3f:	jmp    0x249efb78
  41ad44:	sbb    edx,DWORD PTR [eax+0x6d]
  41ad47:	and    al,0x17
  41ad49:	out    dx,eax
  41ad4a:	lods   eax,DWORD PTR ds:[esi]
  41ad4b:	cwde   
  41ad4c:	lods   al,BYTE PTR ds:[esi]
  41ad4d:	stc    
  41ad4e:	mov    ebx,ecx
  41ad50:	inc    eax
  41ad51:	push   ds
  41ad52:	jmp    0x41adfd
	...
  41ad67:	add    bl,ah
  41ad69:	stc    
  41ad6a:	std    
  41ad6b:	mov    ebp,ebx
  41ad6d:	pop    ebx
  41ad6e:	dec    BYTE PTR [edi]
  41ad70:	(bad)  
  41ad71:	cli    
  41ad72:	outs   dx,BYTE PTR ds:[esi]
  41ad73:	add    BYTE PTR [edx+0x70],ah
  41ad76:	xor    esi,0x65
  41ad79:	or     al,BYTE PTR [edi-0x468f9e00]
  41ad7f:	imul   esp,DWORD PTR [ebp-0x18],0x65e9d08a
  41ad86:	push   0x70d356
  41ad8b:	mov    DWORD PTR [edx-0x3],edi
  41ad8e:	push   0x74
  41ad90:	cld    
  41ad91:	xor    al,0x2d
  41ad93:	sti    
  41ad94:	popa   
  41ad95:	xchg   esp,eax
  41ad96:	and    al,0x14
  41ad98:	out    0x4a,eax
  41ad9a:	push   es
  41ad9b:	add    DWORD PTR [ebp+0x62d8f228],ebx
  41ada1:	jo     0x41ad30
  41ada3:	fsub   st,st(7)
  41ada5:	out    0xd3,al
  41ada7:	dec    eax
  41ada8:	lods   al,BYTE PTR ds:[esi]
  41ada9:	mov    ebx,0x3f7623d3
  41adae:	popa   
  41adaf:	adc    esi,DWORD PTR [edx-0x1f003f7e]
  41adb5:	mov    ebx,0x5a35830b
  41adba:	adc    BYTE PTR [ecx+0x55f09c9e],cl
  41adc0:	lock dec edx
  41adc2:	push   0x6fd31a
  41adc7:	and    DWORD PTR [edx],0x26
  41adca:	and    edx,DWORD PTR [edi+0x0]
	...
  41addd:	add    BYTE PTR [eax],al
  41addf:	add    BYTE PTR [eax-0x1d],bh
  41ade2:	mov    esp,0x92389e0c
  41ade7:	inc    ebp
  41ade8:	arpl   ax,ax
  41adea:	xchg   ecx,eax
  41adeb:	inc    esi
  41adec:	arpl   WORD PTR [edi+0x3f],bp
  41adef:	push   ebx
  41adf0:	xchg   edx,eax
  41adf1:	or     BYTE PTR [ecx],dl
  41adf3:	xor    ebp,esp
  41adf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf6:	mov    al,0x15
  41adf8:	and    dh,BYTE PTR [eax+0x7f]
  41adfb:	les    esp,FWORD PTR [esi-0x27]
  41adfe:	mov    cs,WORD PTR [eax]
  41ae00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae01:	(bad)  
  41ae03:	add    ebx,ebx
  41ae05:	xchg   ebp,eax
  41ae06:	jg     0x41adfe
  41ae08:	jmp    0x9c4e:0x16f3c624
  41ae0f:	mov    esi,0xbbaf4e08
  41ae14:	loop   0x41adb2
  41ae16:	loop   0x41ae84
  41ae18:	inc    esi
  41ae19:	mov    ecx,ebp
  41ae1b:	add    edx,DWORD PTR [ebx-0x67]
  41ae1e:	ret    
  41ae1f:	mov    ebp,0xbcc11e28
  41ae24:	mov    ds:0x6281e970,al
  41ae29:	fstp   DWORD PTR [esi-0x30]
  41ae2c:	inc    ecx
  41ae2d:	fst    QWORD PTR [ecx-0xd]
  41ae30:	ins    DWORD PTR es:[edi],dx
  41ae31:	sub    edx,0xfd8265e9
  41ae37:	cmp    DWORD PTR [eax+0x715eea15],0xffffffc1
  41ae3e:	clc    
  41ae3f:	ret    
  41ae40:	dec    ebp
  41ae41:	int3   
  41ae42:	sub    DWORD PTR [edx+0x0],eax
	...
  41ae55:	add    BYTE PTR [eax],al
  41ae57:	add    BYTE PTR [esi-0x27],bl
  41ae5a:	mov    esp,0x65d4e8a
  41ae5f:	pop    esp
  41ae60:	jecxz  0x41aecf
  41ae62:	adc    BYTE PTR [eax-0x4d6e4a6a],0x90
  41ae69:	daa    
  41ae6a:	fwait
  41ae6b:	mov    dl,BYTE PTR ds:0xa0f9b55
  41ae71:	dec    ecx
  41ae72:	sub    al,BYTE PTR [edx+eiz*2]
  41ae75:	push   ebp
  41ae76:	stos   BYTE PTR es:[edi],al
  41ae77:	push   cs
  41ae78:	ficom  WORD PTR [ebp-0x19]
  41ae7b:	add    esp,DWORD PTR [edx+0x54]
  41ae7e:	xor    esi,esp
  41ae80:	loop   0x41ae1d
  41ae82:	dec    edx
  41ae83:	jmp    0xb59e:0x8ce85467
  41ae8a:	add    BYTE PTR [ecx],bh
  41ae8c:	jmp    0xda1b3ac
  41ae91:	mov    ebp,0x5452da78
  41ae96:	push   ebp
  41ae97:	lds    esi,FWORD PTR [ecx+0x28]
  41ae9a:	mov    al,BYTE PTR ds:0x2589f18a
  41aea0:	mov    cl,BYTE PTR [ecx]
  41aea2:	jmp    0xfcc1bab9
  41aea7:	sbb    bl,dl
  41aea9:	adc    eax,0x53d1cd25
  41aeae:	inc    ebp
  41aeaf:	lds    ebp,FWORD PTR [ebp+0x29]
  41aeb2:	mov    ?,WORD PTR [ebp-0x3d16fabb]
  41aeb8:	fcomp  st(1)
  41aeba:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
  41aece:	add    BYTE PTR [eax],al
  41aed0:	and    DWORD PTR ds:0xbcad6212,eax
  41aed6:	and    BYTE PTR [edx+0x19],dh
  41aed9:	jno    0x41ae63
  41aedb:	dec    esi
  41aedc:	pop    esi
  41aedd:	(bad)  [ecx-0x181e7a53]
  41aee3:	in     eax,0xe6
  41aee5:	in     al,dx
  41aee6:	and    al,0x1
  41aee8:	fst    DWORD PTR ds:0xcaafda15
  41aeee:	leave  
  41aeef:	scas   eax,DWORD PTR es:[edi]
  41aef0:	pop    esi
  41aef1:	or     DWORD PTR ds:0x8140bade,eax
  41aef7:	inc    ebp
  41aef8:	test   DWORD PTR [edi+0x1],edx
  41aefb:	jmp    0xa5cb8a61
  41af00:	inc    ebp
  41af01:	fnsave [ebp-0x1a]
  41af04:	loopne 0x41ae9d
  41af06:	add    eax,0x1cbc3270
  41af0b:	push   ecx
  41af0c:	pop    esi
  41af0d:	jmp    0xd2e9812
  41af12:	and    eax,0x8c88862d
  41af17:	add    dl,bh
  41af19:	(bad)  [esi+0x2]
  41af1c:	xchg   ebx,eax
  41af1d:	loope  0x41aea7
  41af1f:	inc    eax
  41af20:	retf   
  41af21:	sbb    al,0x75
  41af23:	and    al,0x1f
  41af25:	push   edx
  41af26:	fmul   DWORD PTR [ecx-0x76d34e89]
  41af2c:	push   edi
  41af2d:	mov    cl,0x54
  41af2f:	mov    DWORD PTR [edi-0x4f],esp
  41af32:	pop    eax
  41af33:	mov    DWORD PTR [eax],eax
	...
  41af45:	add    BYTE PTR [eax],al
  41af47:	add    BYTE PTR [edi+0x57895cb7],dh
  41af4d:	mov    cl,0x60
  41af4f:	call   0x3dbae7
  41af54:	push   cs
  41af55:	adc    eax,0xa9360e70
  41af5a:	and    BYTE PTR [eax+0x33],bl
  41af5d:	retf   0x190
  41af60:	jnp    0x41af54
  41af62:	cld    
  41af63:	add    BYTE PTR [ebx+0x5f4489db],cl
  41af69:	cdq    
  41af6a:	add    DWORD PTR [edi+ebx*2+0x45],0x6a
  41af6f:	or     esi,edx
  41af71:	mov    al,ds:0xa1c04c20
  41af76:	and    BYTE PTR [esi+esi*4-0x6f],bl
  41af7a:	and    BYTE PTR [esi+edx*8+0x41],bl
  41af7e:	and    BYTE PTR [edx+eiz*1],bh
  41af81:	push   esp
  41af82:	jne    0x41afa8
  41af84:	pop    es
  41af85:	push   esp
  41af86:	inc    ebp
  41af87:	and    al,0xef
  41af89:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af8b:	std    
  41af8c:	cmp    bl,bl
  41af8e:	dec    ebx
  41af8f:	(bad)  
  41af90:	push   DWORD PTR [esi-0x6e79afe8]
  41af96:	and    BYTE PTR [eax-0x5],al
  41af99:	dec    edi
  41af9a:	dec    ebp
  41af9b:	and    al,0xaf
  41af9d:	in     eax,dx
  41af9e:	xchg   edi,eax
  41af9f:	mov    bh,bl
  41afa1:	fidivr DWORD PTR [edi-0x40]
  41afa4:	bound  ebx,QWORD PTR [ebp*1-0x72b69c9]
  41afab:	jge    0x41afad
	...
  41afbd:	add    BYTE PTR [eax],al
  41afbf:	add    BYTE PTR [eax-0x1f],al
  41afc2:	pop    ebp
  41afc3:	je     0x41b003
  41afc5:	js     0x41af52
  41afc7:	dec    esp
  41afc8:	xchg   al,ah
  41afca:	mov    ah,0x69
  41afcc:	gs sbb eax,0xc01a23c4
  41afd2:	ins    BYTE PTR es:[edi],dx
  41afd3:	push   edi
  41afd4:	(bad)  [eax+0x0]
  41afd7:	test   BYTE PTR [edx+0x62988477],ah
  41afdd:	jo     0x41afdf
  41afdf:	mov    DWORD PTR [esi],esi
  41afe1:	mov    esp,cs
  41afe3:	imul   ebx,DWORD PTR [ebx-0x13],0xe95e23b3
  41afea:	ins    BYTE PTR es:[edi],dx
  41afeb:	pop    edi
  41afec:	xchg   edi,eax
  41afed:	jno    0x41afef
  41afef:	dec    edi
  41aff0:	fild   QWORD PTR [esp]
  41aff3:	sbb    BYTE PTR [edx],dh
  41aff5:	in     eax,dx
  41aff6:	ret    
  41aff7:	and    esp,DWORD PTR [edx]
  41aff9:	inc    eax
  41affa:	mov    ecx,DWORD PTR [esi+edi*1-0x5c]
  41affe:	push   0x70d84f
  41b003:	and    DWORD PTR [edx-0x41c8dbbc],0xffffffcc
  41b00a:	clc    
  41b00b:	jge    0x41b081
  41b00d:	popa   
  41b00e:	pop    ebp
  41b00f:	je     0x41af97
  41b011:	fmul   DWORD PTR [ebx-0x4fbf81b4]
  41b017:	imul   ebp,DWORD PTR [esi-0xb],0x40aa23c3
  41b01e:	push   0x6fdb0b
  41b023:	test   BYTE PTR [eax],al
	...
  41b035:	add    BYTE PTR [eax],al
  41b037:	add    BYTE PTR [edx],ah
  41b039:	add    al,0xb0
  41b03b:	mov    BYTE PTR [esi-0x610a3374],dl
  41b041:	xchg   esp,eax
  41b042:	enter  0x91fe,0xd9
  41b046:	in     eax,dx
  41b047:	mov    fs,WORD PTR [edx+esi*2]
  41b04a:	dec    DWORD PTR [eax-0x4bbe4a5a]
  41b050:	nop
  41b051:	and    al,0x35
  41b053:	mov    DWORD PTR [esi-0x1693de4b],ebx
  41b059:	push   ebx
  41b05a:	jmp    0xeb28:0x3e98e603
  41b061:	sbb    al,0x6
  41b063:	shl    BYTE PTR [edx-0x61],1
  41b066:	jne    0x41b028
  41b068:	xor    ecx,0xf310b139
  41b06e:	jmp    0x8d6c:0x31b52688
  41b075:	push   ebx
  41b076:	jmp    0xeaff:0xf598de03
  41b07d:	fwait
  41b07e:	jg     0x41b088
  41b080:	jmp    0x41b0f0
  41b082:	mov    edi,0xded636e
  41b087:	aam    0xdc
  41b089:	in     al,dx
  41b08a:	add    eax,0xf9edeb24
  41b08f:	push   ss
  41b090:	ins    BYTE PTR es:[edi],dx
  41b091:	jge    0x41b027
  41b093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b094:	ficomp WORD PTR [eax]
  41b096:	jmp    0x3:0xfdb4fe86
	...
  41b0ad:	add    BYTE PTR [eax],al
  41b0af:	add    BYTE PTR [edi+0x46],bl
  41b0b2:	push   cs
  41b0b3:	mov    WORD PTR [edx-0x27],fs
  41b0b6:	jmp    0xadf77741
  41b0bb:	add    eax,DWORD PTR [edi+0x46]
  41b0be:	mov    BYTE PTR [ebx-0x7916269e],0xbe
  41b0c5:	mov    ch,0x9d
  41b0c7:	add    ebp,DWORD PTR [edi]
  41b0c9:	push   es
  41b0ca:	into   
  41b0cb:	pop    ds
  41b0cc:	(bad)  ds:0x9d05cbc6
  41b0d2:	add    DWORD PTR [edi-0x47],ebp
  41b0d5:	jle    0x41b05c
  41b0d7:	sub    DWORD PTR [edx],esi
  41b0d9:	sar    BYTE PTR [edi+0x64],0x32
  41b0dd:	jge    0x41b155
  41b0df:	in     al,0xec
  41b0e1:	sub    BYTE PTR [ecx-0x3e],dh
  41b0e4:	pop    edi
  41b0e5:	retf   0xcece
  41b0e8:	sbb    eax,0x20721cb9
  41b0ed:	jmp    0x51f3e5ed
  41b0f2:	dec    ecx
  41b0f3:	loope  0x41b104
  41b0f5:	push   edx
  41b0f6:	push   ebp
  41b0f7:	add    eax,0x3bc0ca7a
  41b0fc:	jecxz  0x41b0a5
  41b0fe:	or     al,0x2e
  41b100:	and    eax,0xe5965229
  41b105:	mov    ch,0x94
  41b107:	jmp    0x35cf8a6d
  41b10c:	and    BYTE PTR ds:0x7ee0f7e9,0xfc
  41b113:	ins    DWORD PTR es:[edi],dx
	...
  41b128:	and    DWORD PTR [eax],ecx
  41b12a:	pop    ss
  41b12b:	pop    esp
  41b12c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b12d:	mov    eax,0x56655138
  41b132:	cld    
  41b133:	pop    esi
  41b134:	in     al,0x93
  41b136:	add    eax,0xbd11b6a
  41b13b:	imul   ecx,DWORD PTR [edi-0x9b90383],0xffffffe7
  41b142:	add    ecx,ebp
  41b144:	popa   
  41b145:	push   edx
  41b146:	ins    DWORD PTR es:[edi],dx
  41b147:	or     eax,0x9ad7c91e
  41b14c:	ficom  DWORD PTR [eiz*1+0x454f11c9]
  41b153:	lds    ecx,FWORD PTR [ecx+0x61fa6929]
  41b159:	fldenv [eax]
  41b15b:	mov    ah,0xde
  41b15d:	sbb    al,0x25
  41b15f:	add    bh,ah
  41b161:	push   ss
  41b162:	inc    ebp
  41b163:	and    al,0xdb
  41b165:	jnp    0x41b163
  41b167:	dec    DWORD PTR [ebx]
  41b169:	pop    ds
  41b16a:	adc    BYTE PTR [esi+esi*1+0x382fc98],bh
  41b171:	fsubr  DWORD PTR [edi+0xe]
  41b174:	jo     0x41b107
  41b176:	and    BYTE PTR [eax],ah
  41b178:	jle    0x41b112
  41b17a:	cwde   
  41b17b:	cmp    eax,0xd876
  41b180:	and    eax,0x4acb89d3
  41b185:	and    cl,cl
  41b187:	add    bl,cl
  41b189:	xlat   BYTE PTR ds:[ebx]
  41b18a:	or     eax,0x85
	...
  41b19f:	add    cl,bh
  41b1a1:	aam    0x0
  41b1a3:	add    BYTE PTR [ecx-0x2e],dh
  41b1a6:	xchg   DWORD PTR [edi+eiz*4-0x51],edx
  41b1aa:	push   ebx
  41b1ab:	call   0x3dcf88
  41b1b0:	push   cs
  41b1b1:	cdq    
  41b1b2:	and    BYTE PTR [eax],ah
  41b1b4:	dec    ebx
  41b1b5:	push   esp
  41b1b6:	inc    ebp
  41b1b7:	and    al,0xab
  41b1b9:	inc    edi
  41b1ba:	xchg   DWORD PTR [edi+eiz*4-0x4d],edx
  41b1be:	mov    ebp,ecx
  41b1c0:	add    al,BYTE PTR [ecx+0x20]
  41b1c3:	sub    BYTE PTR [ebx],dh
  41b1c5:	pop    ss
  41b1c6:	mov    bh,bh
  41b1c8:	sbb    al,0x4e
  41b1ca:	icebp  
  41b1cb:	test   DWORD PTR ds:0xb78b71a9,edx
  41b1d1:	fistp  DWORD PTR [ecx+edx*2]
  41b1d4:	retf   0x4552
  41b1d7:	and    al,0x3f
  41b1d9:	inc    edi
  41b1da:	mov    esi,ecx
  41b1dc:	mov    ds:0x3b01ed89,eax
  41b1e1:	dec    esi
  41b1e2:	retf   
  41b1e3:	mov    esp,DWORD PTR [ebx+0x4bd7f8ed]
  41b1e9:	xlat   BYTE PTR ds:[ebx]
  41b1ea:	cmp    ebx,0x35d0e362
  41b1f0:	jno    0x41b1d4
  41b1f2:	jnp    0x41b1cd
  41b1f4:	scas   al,BYTE PTR es:[edi]
  41b1f5:	lea    ecx,[ebp-0x7a5bb9bc]
  41b1fb:	cmp    al,0xd2
  41b1fd:	jo     0x41b1cb
  41b1ff:	adc    eax,0xfd90450d
	...
  41b218:	outs   dx,DWORD PTR ds:[esi]
  41b219:	lock cmc 
  41b21b:	aas    
  41b21c:	bound  eax,QWORD PTR [edi]
  41b21e:	lods   al,BYTE PTR ds:[esi]
  41b21f:	and    ecx,DWORD PTR [esi-0x40]
  41b222:	lea    edx,[eax+esi*4]
  41b225:	cwde   
  41b226:	cdq    
  41b227:	leave  
  41b228:	bound  esi,QWORD PTR [eax-0x3e]
  41b22b:	cmp    cl,dl
  41b22d:	mov    esi,0xcc26893d
  41b232:	lock mov BYTE PTR [ecx+0x62d52f98],dh
  41b239:	jo     0x41b1be
  41b23b:	inc    esp
  41b23c:	xchg   BYTE PTR [eax-0x73e17550],dl
  41b242:	and    BYTE PTR [eax-0x21],dl
  41b245:	les    esp,FWORD PTR [eax]
  41b247:	sub    al,0xd9
  41b249:	inc    ebp
  41b24a:	push   0x58fbe953
  41b24f:	mov    DWORD PTR [edx-0x228cae13],edx
  41b255:	aas    
  41b256:	cmp    eax,0xcc715df6
  41b25b:	pxor   mm6,QWORD PTR [esp+ebx*1]
  41b25f:	cmp    BYTE PTR [edx],dl
  41b261:	test   DWORD PTR [eax-0x18],0x701a
  41b268:	fidiv  WORD PTR [eax-0x7514f335]
  41b26e:	or     BYTE PTR [edi-0x78e3334a],al
  41b274:	scas   al,BYTE PTR es:[edi]
  41b275:	aam    0x18
  41b277:	xchg   DWORD PTR [esi+0xc3cdd9],esp
	...
  41b28d:	add    BYTE PTR [eax],al
  41b28f:	add    al,ch
  41b291:	or     al,0xc6
  41b293:	sbb    ecx,DWORD PTR [edx+0x7b]
  41b296:	ins    DWORD PTR es:[edi],dx
  41b297:	pop    eax
  41b298:	das    
  41b299:	dec    esi
  41b29a:	sahf   
  41b29b:	pop    ds
  41b29c:	dec    edx
  41b29d:	jno    0x41b22f
  41b29f:	xor    BYTE PTR [edx-0x27],ah
  41b2a2:	outs   dx,BYTE PTR ds:[esi]
  41b2a3:	mov    DWORD PTR [ecx+0x1],0xd936e202
  41b2aa:	jmp    0x65f7493b
  41b2af:	ins    BYTE PTR es:[edi],dx
  41b2b0:	call   0xe0c:0xeb03eaa2
  41b2b7:	mov    esp,0x4b30a05
  41b2bc:	bound  ebx,QWORD PTR [edx]
  41b2be:	and    al,0xb9
  41b2c0:	cmp    cl,BYTE PTR [esi-0x3b]
  41b2c3:	mov    ecx,0x685f23a2
  41b2c8:	jecxz  0x41b336
  41b2ca:	push   ss
  41b2cb:	mov    DWORD PTR [ecx],esp
  41b2cd:	test   DWORD PTR [edi+ebp*4],edi
  41b2d0:	jb     0x41b34c
  41b2d2:	xor    ebp,DWORD PTR [edi-0x36a07816]
  41b2d8:	sub    DWORD PTR gs:[edx-0x7c86205d],eax
  41b2df:	and    BYTE PTR [edx+0x629565c9],0xd9
  41b2e6:	jmp    0x61c6d475
  41b2eb:	mov    esi,0x5bad4e3d
  41b2f0:	sub    eax,0x27a450
	...
  41b305:	add    BYTE PTR [eax],al
  41b307:	add    ch,bl
  41b309:	adc    bl,BYTE PTR [edx]
  41b30b:	mov    DWORD PTR [ecx],esp
  41b30d:	cmp    DWORD PTR [edx-0xdf4254c],0x5271d98c
  41b317:	sbb    eax,ebp
  41b319:	js     0x41b31c
  41b31b:	(bad)  ss:[ecx+0x5d5d1b86]
  41b322:	test   cl,ch
  41b324:	popa   
  41b325:	fld    DWORD PTR [edi+0x4b6499a4]
  41b32b:	icebp  
  41b32c:	cmp    esp,ecx
  41b32e:	mov    eax,edi
  41b330:	(bad)  
  41b331:	mov    eax,0xe1277004
  41b336:	mov    DWORD PTR [ecx+esi*4-0x250eb1a0],edx
  41b33d:	or     al,0xdd
  41b33f:	nop
  41b340:	(bad)  
  41b341:	hlt    
  41b342:	in     al,dx
  41b343:	jo     0x41b367
  41b345:	ins    DWORD PTR es:[edi],dx
  41b346:	jmp    0xfcba4ec1
  41b34b:	inc    ebx
  41b34c:	pop    edx
  41b34d:	fs push esi
  41b34f:	mov    eax,ds:0xc38d80a6
  41b354:	data16 fst DWORD PTR [ebx+0x6c]
  41b358:	mov    ds:0x9a645194,al
  41b35d:	test   cl,ch
  41b35f:	int3   
  41b360:	inc    esp
  41b361:	fld    DWORD PTR [eax]
  41b363:	ins    DWORD PTR es:[edi],dx
  41b364:	and    esp,ebp
  41b366:	jmp    0x41b39e
  41b368:	jmp    0x41b386
  41b36a:	leave  
  41b36b:	cmp    DWORD PTR [eax],eax
	...
  41b37d:	add    BYTE PTR [eax],al
  41b37f:	add    bl,bl
  41b381:	and    al,0xed
  41b383:	sbb    DWORD PTR [ebp+0x5e],0x991de901
  41b38a:	jbe    0x41b31a
  41b38c:	mov    esp,edx
  41b38e:	data16 (bad) 
  41b391:	sbb    al,0xb1
  41b393:	sbb    DWORD PTR [ebp+0xe157375],esi
  41b399:	sbb    eax,0x5a61eba2
  41b39e:	vpsrad ymm3,ymm0,XMMWORD PTR [ecx+0x2aeec76]
  41b3a6:	cld    
  41b3a7:	add    dh,dl
  41b3a9:	cdq    
  41b3aa:	lods   al,BYTE PTR ds:[esi]
  41b3ab:	push   eax
  41b3ac:	xor    esi,ebx
  41b3ae:	xchg   DWORD PTR [ebp+0x77],eax
  41b3b1:	sub    al,0x87
  41b3b3:	dec    ebp
  41b3b4:	xchg   DWORD PTR [eax+ebx*1],eax
  41b3b7:	xchg   BYTE PTR [ebx-0x24],cl
  41b3ba:	test   al,al
  41b3bc:	iret   
  41b3bd:	ja     0x41b36b
  41b3bf:	add    DWORD PTR [eax-0x26],esp
  41b3c2:	cs shl ah,0x2d
  41b3c6:	ret    
  41b3c7:	ret    0xdc0f
  41b3ca:	push   ecx
  41b3cb:	push   ebp
  41b3cc:	in     eax,dx
  41b3cd:	inc    esi
  41b3ce:	push   0x38
  41b3d0:	enter  0x5000,0xff
  41b3d4:	into   
  41b3d5:	xchg   ebx,eax
  41b3d6:	outs   dx,BYTE PTR ds:[esi]
  41b3d7:	inc    esp
  41b3d8:	or     esp,DWORD PTR [ecx-0x9]
  41b3db:	mov    esp,DWORD PTR [edx]
  41b3dd:	push   cs
  41b3de:	adc    BYTE PTR [ecx+ebp*8-0x65],ah
  41b3e2:	cld    
  41b3e3:	mov    al,BYTE PTR [eax]
	...
  41b3f5:	add    BYTE PTR [eax],al
  41b3f7:	add    BYTE PTR [ebx],cl
  41b3f9:	clc    
  41b3fa:	bnd je 0x41b3d8
  41b3fd:	dec    esi
  41b3fe:	add    DWORD PTR [eax],edx
  41b400:	retf   
  41b401:	fisttp DWORD PTR [edi-0x73]
  41b404:	test   DWORD PTR [ebp-0x1c],esi
  41b407:	in     al,dx
  41b408:	inc    eax
  41b409:	fadd   QWORD PTR [eax]
  41b40b:	lea    esi,[ebp-0x3b]
  41b40e:	dec    edi
  41b40f:	call   0x3e15fc
  41b414:	inc    eax
  41b415:	cdq    
  41b416:	and    BYTE PTR [eax],bl
  41b418:	mov    dh,bh
  41b41a:	add    DWORD PTR [esi],0x12
  41b41d:	jg     0x41b41f
  41b41f:	mov    DWORD PTR [ebp-0x1b],esp
  41b422:	sub    DWORD PTR [esi-0x79],0x62
  41b426:	pop    ebx
  41b427:	adc    BYTE PTR [edx],al
  41b429:	(bad)  
  41b42a:	adc    bl,ch
  41b42c:	mov    DWORD PTR [eax-0x10],esp
  41b42f:	test   DWORD PTR ds:0x628b3689,ecx
  41b435:	ss sbb al,0x14
  41b438:	fst    DWORD PTR [esi+0x8]
  41b43b:	call   0xfd97ced2
  41b440:	jmp    0x41b480
  41b442:	add    al,0x83
  41b444:	and    dh,BYTE PTR ds:0x4eaf52f9
  41b44a:	call   0x834cab
  41b44f:	push   ebx
  41b450:	(bad)  
  41b451:	xlat   BYTE PTR ds:[ebx]
  41b452:	jmp    0x41b44f
  41b454:	push   edx
  41b455:	inc    eax
  41b456:	add    BYTE PTR [edi-0x3f848364],al
	...
  41b470:	xchg   esi,eax
  41b471:	test   BYTE PTR [ecx-0x5094f63a],cl
  41b477:	mov    BYTE PTR [ecx+ebx*8],bl
  41b47a:	push   0x11880560
  41b47f:	rcr    BYTE PTR [ebp+0x2058b41e],0x69
  41b486:	add    BYTE PTR [ebx-0x27],dl
  41b489:	pushf  
  41b48a:	scas   eax,DWORD PTR es:[edi]
  41b48b:	push   eax
  41b48c:	mov    ebx,?
  41b48e:	dec    esi
  41b48f:	xor    DWORD PTR [ecx+0x4f07b2d9],edi
  41b495:	jge    0x41b448
  41b497:	imul   esp,DWORD PTR [ebx-0x65],0x5cdc891e
  41b49e:	add    BYTE PTR [eax],al
  41b4a0:	(bad)  
  41b4a1:	jmp    0x41b468
  41b4a3:	dec    edi
  41b4a4:	and    dh,BYTE PTR [eax-0x7e237594]
  41b4aa:	add    BYTE PTR [ebx-0x39f8335e],al
  41b4b0:	daa    
  41b4b1:	pop    esp
  41b4b2:	push   DWORD PTR [esi]
  41b4b4:	cmp    ch,BYTE PTR [eax-0x3225ff33]
  41b4ba:	pop    eax
  41b4bb:	push   ecx
  41b4bc:	test   DWORD PTR [ebp+0x54],ebp
  41b4bf:	mov    DWORD PTR [ecx+ebx*8-0x269630af],ebp
  41b4c6:	jmp    0xaf1a7280
  41b4cb:	dec    edx
  41b4cc:	mov    ds:0x6a41e929,eax
  41b4d1:	fldcw  WORD PTR [edx]
  41b4d3:	add    BYTE PTR [eax],0x0
	...
  41b4e6:	add    BYTE PTR [eax],al
  41b4e8:	out    0xd8,al
  41b4ea:	jmp    0xea1b14f2
  41b4ef:	add    edi,DWORD PTR [edx]
  41b4f1:	loope  0x41b4e4
  41b4f3:	add    ah,BYTE PTR [edx+0x29]
  41b4f6:	jmp    0x7271983b
  41b4fb:	add    esp,DWORD PTR [edx-0x27]
  41b4fe:	jmp    0x96b802d2
  41b503:	pop    ds
  41b504:	push   0x5a
  41b506:	sub    ebx,edx
  41b508:	push   ss
  41b509:	in     eax,dx
  41b50a:	lds    ecx,FWORD PTR [ebx]
  41b50c:	cli    
  41b50d:	or     bl,BYTE PTR [edi+0x2]
  41b510:	bound  ebx,QWORD PTR [edx+ebp*1-0x32]
  41b514:	popa   
  41b515:	stos   DWORD PTR es:[edi],eax
  41b516:	test   eax,0xe929605f
  41b51b:	inc    ebp
  41b51c:	pop    edx
  41b51d:	fldcw  WORD PTR [edx-0x1627297b]
  41b523:	add    esp,DWORD PTR [esi-0x27]
  41b526:	jmp    0xf3ca7f2e
  41b52b:	add    al,0x62
  41b52d:	sub    ecx,ebp
  41b52f:	inc    esi
  41b530:	xor    DWORD PTR [edx-0x42],esp
  41b533:	mov    ch,0x17
  41b535:	push   cs
  41b536:	jne    0x41b501
  41b538:	mov    ecx,0xba556f08
  41b53d:	aaa    
  41b53e:	fild   WORD PTR [ebx]
  41b540:	bound  ebx,QWORD PTR [edx+ebp*4-0x2e]
  41b544:	inc    ebp
  41b545:	bound  eax,QWORD PTR ds:0x19cdeafc
  41b54b:	push   ebx
	...
  41b560:	adc    DWORD PTR [ebp+0x1],esi
  41b563:	bound  esp,QWORD PTR [ecx]
  41b565:	je     0x41b576
  41b567:	fs neg DWORD PTR es:[ebx]
  41b56b:	mov    ecx,0x8ee9a6f4
  41b570:	ins    DWORD PTR es:[edi],dx
  41b571:	jne    0x41b56f
  41b573:	fs fwait
  41b575:	jno    0x41b5c8
  41b577:	bound  esp,QWORD PTR [eax+0x61f27a81]
  41b57d:	fld    DWORD PTR [ebp-0x4e6dced7]
  41b583:	call   0x2c0bcc98
  41b588:	push   0xffffffd9
  41b58a:	sub    DWORD PTR cs:[ebp-0x3d8da995],edx
  41b591:	and    al,0x53
  41b593:	mov    esi,0xb9fd18e2
  41b598:	pushf  
  41b599:	ins    BYTE PTR es:[edi],dx
  41b59a:	jmp    0xfcb6ca40
  41b59f:	jb     0x41b557
  41b5a1:	pop    eax
  41b5a2:	repz ja 0x41b5dd
  41b5a5:	lods   al,BYTE PTR ds:[esi]
  41b5a6:	jne    0x41b585
  41b5a8:	pusha  
  41b5a9:	and    eax,0x6beaf576
  41b5ae:	jnp    0x41b5b1
  41b5b0:	test   al,0x75
  41b5b2:	jbe    0x41b589
  41b5b4:	nop
  41b5b5:	call   0x251c83c2
  41b5ba:	adc    ebp,DWORD PTR [ecx]
  41b5bc:	pop    esi
  41b5bd:	pop    edx
  41b5be:	(bad)
  41b5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5c2:	push   ebx
  41b5c3:	rol    DWORD PTR [eax],0x0
	...
  41b5d6:	add    BYTE PTR [eax],al
  41b5d8:	mul    ecx
  41b5da:	add    cl,ch
  41b5dc:	cmp    al,0x9b
  41b5de:	call   0xfce392cd
  41b5e3:	ds lock fwait
  41b5e6:	mov    edi,0x880b61e1
  41b5eb:	adc    eax,0x53e54a
  41b5f0:	adc    BYTE PTR [eax+eiz*1+0x7b070614],ah
  41b5f7:	sbb    ch,BYTE PTR [eax-0xc]
  41b5fa:	pop    esp
  41b5fb:	and    al,0x9b
  41b5fd:	repz add DWORD PTR [edi-0x4b],edx
  41b601:	repz leave 
  41b603:	jmp    FWORD PTR [ebx+0x61]
  41b606:	sar    DWORD PTR [esi-0x7d],0xd3
  41b60a:	clc    
  41b60b:	add    edi,DWORD PTR [ebx-0x5080019f]
  41b611:	inc    ebx
  41b612:	sub    DWORD PTR [edi+eiz*2+0x6d],esi
  41b616:	pop    ebp
  41b617:	mov    esi,DWORD PTR [ebp+0x2a]
  41b61a:	ret    0x4b0c
  41b61d:	xor    DWORD PTR [ecx-0x7033714],ecx
  41b623:	sbb    DWORD PTR [edi+0x74],0x51
  41b627:	push   esi
  41b628:	ror    BYTE PTR ds:0xf4858b56,0x0
  41b62f:	add    BYTE PTR [ebx],cl
  41b631:	popa   
  41b632:	shl    DWORD PTR [ebp-0x3],0xf2
  41b636:	aas    
  41b637:	adc    BYTE PTR ds:0x8afbd8,dh
	...
  41b64d:	add    BYTE PTR [eax],al
  41b64f:	add    dh,al
  41b651:	jae    0x41b636
  41b653:	fisttp WORD PTR [edx]
  41b655:	fadd   DWORD PTR [eax]
  41b657:	xor    esp,DWORD PTR [eax]
  41b659:	retf   
  41b65a:	ret    
  41b65b:	inc    ebx
  41b65c:	sbb    DWORD PTR [ecx+0x25480f20],0xffffffff
  41b663:	je     0x41b627
  41b665:	ficom  WORD PTR [edi+0xc]
  41b668:	push   eax
  41b669:	push   ds
  41b66a:	push   cs
  41b66b:	dec    esp
  41b66c:	jbe    0x41b647
  41b66e:	mov    BYTE PTR [edi+eiz*2-0x26],bl
  41b672:	lds    eax,FWORD PTR [esi+0xdd2f]
  41b678:	mov    eax,0x620000d7
  41b67d:	push   edi
  41b67e:	push   es
  41b67f:	mov    DWORD PTR [edi],esp
  41b681:	xchg   esi,eax
  41b682:	mov    al,0xfc
  41b684:	punpckhdq mm7,QWORD PTR [ebp-0x32]
  41b688:	fstp   TBYTE PTR [ebp+0x527a1828]
  41b68e:	pop    ss
  41b68f:	(bad)  
  41b690:	jge    0x41b688
  41b692:	dec    esp
  41b693:	or     eax,0x812943ac
  41b698:	adc    BYTE PTR [edx+0x763e4477],0x85
  41b69f:	clc    
  41b6a0:	fs (bad) 
  41b6a2:	clc    
  41b6a3:	sub    BYTE PTR [edx],0x1c
  41b6a6:	pop    eax
  41b6a7:	mov    WORD PTR [ebx-0x80],fs
  41b6aa:	add    BYTE PTR [ebx-0x7ef4cade],al
  41b6b0:	cmp    cl,BYTE PTR [eax+0x37d4]
	...
  41b6c6:	add    BYTE PTR [eax],al
  41b6c8:	jmp    0x624237cf
  41b6cd:	or     BYTE PTR ds:0x857ca6c1,0xf8
  41b6d4:	pusha  
  41b6d5:	arpl   WORD PTR [ecx],cx
  41b6d7:	mov    DWORD PTR [edi-0x6e78770],ebx
  41b6dd:	add    DWORD PTR [ebp+0x80dabe],0x0
  41b6e4:	pusha  
  41b6e5:	test   ebx,0x3ef5650f
  41b6eb:	mov    BYTE PTR [edx-0x1],bl
  41b6ee:	test   eax,0x80628c
  41b6f3:	add    cl,ch
  41b6f5:	push   edx
  41b6f6:	pop    eax
  41b6f7:	outs   dx,DWORD PTR ds:[esi]
  41b6f8:	imul   eax,DWORD PTR [eax-0x7ee41900],0x0
  41b6ff:	add    dh,bl
  41b701:	or     al,BYTE PTR [eax+eax*1+0x24d48062]
  41b708:	jmp    0x62c122e6
  41b70d:	fldl2t 
  41b70f:	or     al,0xa3
  41b711:	cmc    
  41b712:	in     al,dx
  41b713:	test   BYTE PTR [edx-0x1403f429],bl
  41b719:	sbb    eax,0x99e600ce
  41b71e:	mul    ah
  41b720:	cs jb  0x41b720
  41b723:	sti    
  41b724:	call   0xeb9dc14c
  41b729:	pusha  
  41b72a:	jmp    0x41b732
	...
  41b73f:	add    cl,ah
  41b741:	cdq    
  41b742:	(bad)  
  41b743:	jnp    0x41b71d
  41b745:	sbb    eax,0x98e6010e
  41b74a:	(bad)  
  41b74b:	mov    esp,0x36e52e1
  41b750:	(bad)  
  41b751:	fnstenv [ebp-0x1de5253c]
  41b757:	test   BYTE PTR [edx-0x27],cl
  41b75a:	mov    ch,0xff
  41b75c:	popf   
  41b75d:	in     al,dx
  41b75e:	stc    
  41b75f:	jl     0x41b77d
  41b761:	and    edi,0xfed96204
  41b767:	pop    es
  41b768:	jmp    0x41b70c
  41b76a:	add    cl,BYTE PTR [ebp+0x62]
  41b76d:	fldl2t 
  41b76f:	test   ah,cl
  41b771:	pusha  
  41b772:	jmp    0xeaec:0x7dd76203
  41b779:	and    al,BYTE PTR [esi+0x66f99c7c]
  41b77f:	out    0x8d,al
  41b781:	fldenv [esi-0x1a]
  41b784:	sbb    ecx,0xd945e666
  41b78a:	cmp    BYTE PTR [edx+ebp*8+0x6576d2a2],dh
  41b791:	fldl2t 
  41b793:	jns    0x41b7b3
  41b795:	mov    ebp,0xf4e0e600
  41b79a:	and    al,0xd5
  41b79c:	popa   
  41b79d:	out    0x38,al
  41b79f:	ins    DWORD PTR es:[edi],dx
  41b7a0:	es out 0x29,al
  41b7a3:	push   0x0
	...
  41b7b5:	add    BYTE PTR [eax],al
  41b7b7:	add    ah,dl
  41b7b9:	pusha  
  41b7ba:	add    ecx,ebp
  41b7bc:	popa   
  41b7bd:	xlat   BYTE PTR ds:[ebx]
  41b7be:	jne    0x41b7a0
  41b7c0:	loopne 0x41b7f4
  41b7c2:	(bad)  
  41b7c3:	jmp    0xf5419129
  41b7c8:	mov    WORD PTR [ebp-0x65],ss
  41b7cb:	ins    DWORD PTR es:[edi],dx
  41b7cc:	data16 fld DWORD PTR [eax]
  41b7cf:	cmc    
  41b7d0:	xchg   esi,eax
  41b7d1:	pusha  
  41b7d2:	xor    DWORD PTR [ebp+0x66],0xffffffd9
  41b7d6:	add    BYTE PTR [edx],ah
  41b7d8:	and    ebp,esi
  41b7da:	pop    ebx
  41b7db:	push   0xffffffae
  41b7dd:	fstp   TBYTE PTR [ebx-0x4d]
  41b7e0:	fcomp  DWORD PTR [ecx+edx*1]
  41b7e3:	das    
  41b7e4:	data16 fldl2t 
  41b7e7:	jno    0x41b847
  41b7e9:	fld    DWORD PTR [eax]
  41b7eb:	bound  edi,QWORD PTR [ecx+eax*4-0x64]
  41b7ef:	hlt    
  41b7f0:	pop    esi
  41b7f1:	fld    DWORD PTR [edi+0xd9e26f]
  41b7f7:	jmp    0xacb6d0e5
  41b7fc:	fstp   DWORD PTR [eax]
  41b7fe:	jbe    0x41b79a
  41b800:	cwde   
  41b801:	pop    ss
  41b802:	or     DWORD PTR [edx-0x52],ebp
  41b805:	fnstenv [ebx+esi*8-0x37]
  41b809:	jmp    0x41b817
  41b80b:	add    edx,edx
  41b80d:	fild   DWORD PTR [eax]
  41b80f:	jmp    0x72a94ac
  41b814:	fld    DWORD PTR [bx+si]
  41b817:	push   0xffffffd7
  41b819:	popa   
  41b81a:	add    ecx,ebp
	...
  41b830:	popa   
  41b831:	(bad)  [ebp-0x1a]
  41b834:	pop    eax
  41b835:	lahf   
  41b836:	jmp    0xfcaeec3b
  41b83b:	call   DWORD PTR [ecx+0x30]
  41b83e:	and    BYTE PTR [edi],cl
  41b840:	dec    edi
  41b841:	lods   eax,DWORD PTR ds:[esi]
  41b842:	outs   dx,DWORD PTR ds:[esi]
  41b843:	or     DWORD PTR [eax+0x5e],ecx
  41b846:	mov    DWORD PTR [eax],eax
  41b848:	mov    ebx,0xb974fedc
  41b84d:	retf   
  41b84e:	(bad)  [ebx+0x1884654e]
  41b854:	loopne 0x41b820
  41b856:	mov    DWORD PTR [ebp-0x6d],eax
  41b859:	fcmovnb st,st(5)
  41b85b:	cmp    eax,DWORD PTR [edi-0x6c82ef48]
  41b861:	pop    esp
  41b862:	cmp    DWORD PTR [edx],ecx
  41b864:	outs   dx,BYTE PTR ds:[esi]
  41b865:	imul   edi,ebp,0x75
  41b868:	imul   ebp,DWORD PTR [ebx],0x4c
  41b86b:	call   0x3fd6de
  41b870:	jo     0x41b88e
  41b872:	push   cs
  41b873:	test   DWORD PTR ds:0xfcfffe1e,esp
  41b879:	icebp  
  41b87a:	add    BYTE PTR [ebx+edi*1+0x68b00dc],0x6c
  41b882:	not    al
  41b884:	imul   ebx,DWORD PTR [ecx+ecx*4],0x5e17b001
  41b88b:	pop    esi
  41b88c:	and    bl,dh
  41b88e:	fistp  WORD PTR [ebp+0x49]
  41b891:	jo     0x41b88f
  41b893:	push   esp
	...
  41b8a8:	adc    BYTE PTR [eax],0x82
  41b8ab:	in     al,dx
  41b8ac:	iret   
  41b8ad:	sub    dl,BYTE PTR [esi+0x57]
  41b8b0:	nop
  41b8b1:	sbb    eax,0x1edb478a
  41b8b6:	jbe    0x41b91c
  41b8b8:	sub    BYTE PTR [esp+ecx*1],0x8b
  41b8bc:	je     0x41b8ff
  41b8be:	add    DWORD PTR [eax],eax
  41b8c0:	sti    
  41b8c1:	out    dx,al
  41b8c2:	pop    ebp
  41b8c3:	pusha  
  41b8c4:	bound  eax,QWORD PTR [ecx+0x57]
  41b8c7:	add    dl,ch
  41b8c9:	rol    BYTE PTR [ecx-0x70759c1e],cl
  41b8cf:	and    al,0x62
  41b8d1:	cmp    BYTE PTR [ecx-0x10],0xe7
  41b8d5:	das    
  41b8d6:	fldenv [ebx]
  41b8d8:	lods   al,BYTE PTR ds:[esi]
  41b8d9:	mov    bh,0xb4
  41b8db:	add    ecx,ebx
  41b8dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8de:	mov    ah,0x73
  41b8e0:	add    BYTE PTR [ebx],0xb8
  41b8e3:	punpckhdq mm3,mm4
  41b8e6:	add    al,0x89
  41b8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8e9:	pop    ecx
  41b8ea:	sbb    ch,BYTE PTR [edx]
  41b8ec:	bound  eax,QWORD PTR [edx-0x5f853187]
  41b8f2:	and    al,0x0
  41b8f4:	(bad)  
  41b8f5:	sti    
  41b8f6:	cmp    ch,al
  41b8f8:	push   ebp
  41b8f9:	push   esp
  41b8fa:	add    eax,0xa9980d00
  41b8ff:	(bad)  
  41b900:	mov    eax,ds:0xe89f5827
  41b905:	add    DWORD PTR [eax],0x61852284
  41b90b:	mov    DWORD PTR [eax],eax
	...
  41b91d:	add    BYTE PTR [eax],al
  41b91f:	add    BYTE PTR [ecx+ecx*1],bl
  41b922:	add    BYTE PTR [ebx],ch
  41b924:	bound  eax,QWORD PTR [eax-0x7f157a89]
  41b92a:	add    BYTE PTR [eax],al
  41b92c:	loope  0x41b96c
  41b92e:	mov    eax,0x7a16b7ff
  41b933:	add    ecx,esp
  41b935:	push   ebp
  41b936:	push   eax
  41b937:	add    bl,ch
  41b939:	cmp    eax,0x74a18954
  41b93e:	ja     0x41b99b
  41b940:	push   cs
  41b941:	jmp    0xf984:0xbb50f7c3
  41b948:	popa   
  41b949:	repz inc edx
  41b94b:	or     eax,0x537bc3ac
  41b950:	adc    bl,dl
  41b952:	dec    ebx
  41b953:	jns    0x41b9ab
  41b955:	adc    al,0xb2
  41b957:	jecxz  0x41b8f6
  41b959:	fld    st(1)
  41b95b:	jno    0x41b92e
  41b95d:	fsubr  st,st(1)
  41b95f:	fxch   st(5)
  41b961:	pop    ebp
  41b962:	sub    eax,0x2d5c3234
  41b967:	push   esp
  41b968:	retf   0x67bb
  41b96b:	add    esp,DWORD PTR [edx-0x53]
  41b96e:	call   0xa7b1794a
  41b973:	pop    eax
  41b974:	nop
  41b975:	pop    edx
  41b976:	mov    cs,WORD PTR [edi]
  41b978:	xor    eax,DWORD PTR [esp+edi*1]
  41b97b:	mov    ch,0xea
  41b97d:	jo     0x41b90a
  41b97f:	xchg   esp,eax
  41b980:	(bad)  
  41b981:	fldl2t 
  41b983:	add    eax,DWORD PTR [eax]
	...
  41b995:	add    BYTE PTR [eax],al
  41b997:	add    bl,bl
  41b999:	push   ds
  41b99a:	sbb    bl,BYTE PTR [eax+edi*8+0x62]
  41b99e:	jmp    0x65aba4a6
  41b9a3:	push   ebp
  41b9a4:	pop    edi
  41b9a5:	push   ebp
  41b9a6:	add    eax,DWORD PTR [ebx]
  41b9a8:	(bad)  
  41b9a9:	fldcw  WORD PTR [esi-0x54]
  41b9ac:	shr    DWORD PTR [edx+0x54df5544],1
  41b9b2:	jmp    0xd8f8:0xbdd86203
  41b9b9:	adc    eax,0x610f0aba
  41b9be:	jmp    0x2178:0xe7e46203
  41b9c5:	or     DWORD PTR [edi+0x3d],ebp
  41b9c8:	cmp    ah,ah
  41b9ca:	rol    BYTE PTR [ebx],1
  41b9cc:	bound  edx,QWORD PTR [ebp+0x2a]
  41b9cf:	cld    
  41b9d0:	loope  0x41ba48
  41b9d2:	jmp    0x627b:0x435a6203
  41b9d9:	fldl2t 
  41b9db:	add    DWORD PTR [ecx+0x6],esi
  41b9de:	add    DWORD PTR [edx-0x648b163a],esi
  41b9e4:	ins    BYTE PTR es:[edi],dx
  41b9e5:	sbb    al,0x61
  41b9e7:	push   ebx
  41b9e8:	in     al,0x60
  41b9ea:	add    dh,BYTE PTR [eax-0x5e]
  41b9ed:	mov    ecx,0xd99f6228
  41b9f2:	mov    DWORD PTR ds:0xdc66bd82,esp
  41b9f8:	dec    edx
  41b9f9:	adc    eax,0x125
	...
  41ba0e:	add    BYTE PTR [eax],al
  41ba10:	test   BYTE PTR [edx],0xfc
  41ba13:	ds xchg edx,eax
  41ba15:	push   esi
  41ba16:	ins    DWORD PTR es:[edi],dx
  41ba17:	add    eax,0xcd4d5652
  41ba1c:	mov    eax,ds:0x6482e075
  41ba21:	fnstcw WORD PTR [edi-0x53]
  41ba24:	xchg   edx,eax
  41ba25:	pop    edx
  41ba26:	rcl    DWORD PTR [edi+eax*2],0x3
  41ba2a:	or     DWORD PTR [edx+edx*8-0x47],esi
  41ba2e:	adc    al,0x20
  41ba30:	push   ds
  41ba31:	jp     0x41ba28
  41ba33:	call   0x25cfd899
  41ba38:	inc    edx
  41ba39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba3a:	push   eax
  41ba3b:	mov    eax,0xfd2514ea
  41ba40:	adc    DWORD PTR [eax+0x4d],esp
  41ba43:	or     eax,0x6b09816e
  41ba48:	data16 fld DWORD PTR [edi+0x2ceda637]
  41ba4f:	jmp    0xbe0312b5
  41ba54:	adc    eax,DWORD PTR [ebx]
  41ba56:	add    bl,BYTE PTR [ecx+0x368883ac]
  41ba5c:	xchg   BYTE PTR [ebp-0x9],bl
  41ba5f:	push   ds
  41ba60:	test   eax,0x456cd962
  41ba65:	in     eax,0x69
  41ba67:	sbb    DWORD PTR [eax-0x8ff8f92],0x1f
  41ba6e:	adc    BYTE PTR [ecx+ebx*1+0x84fc99],al
	...
  41ba85:	add    BYTE PTR [eax],al
  41ba87:	add    BYTE PTR [ebx-0x76],cl
  41ba8a:	dec    ecx
  41ba8b:	cmp    eax,esp
  41ba8d:	jo     0x41baff
  41ba8f:	inc    esi
  41ba90:	outs   dx,BYTE PTR ds:[esi]
  41ba91:	das    
  41ba92:	ins    BYTE PTR es:[edi],dx
  41ba93:	mov    DWORD PTR [ecx+edi*2],ebp
  41ba96:	in     al,0x8d
  41ba98:	inc    esp
  41ba99:	aad    0x0
  41ba9b:	mov    esi,DWORD PTR [eiz*1-0x29cefd96]
  41baa2:	xchg   DWORD PTR [esi+0xd54b],ecx
  41baa8:	mov    ds:0xbb0005f4,eax
  41baad:	icebp  
  41baae:	inc    ecx
  41baaf:	sbb    BYTE PTR [ebx-0xe],ch
  41bab2:	mov    ah,al
  41bab4:	mov    bl,al
  41bab6:	add    al,ch
  41bab8:	or     ebx,DWORD PTR [edx-0x4]
  41babb:	jmp    FWORD PTR [esi]
  41babd:	xchg   ebx,eax
  41babe:	and    al,0x50
  41bac0:	push   cs
  41bac1:	xacquire lock add DWORD PTR [ebx+0x571e8d8],ecx
  41bac9:	aad    0x0
  41bacb:	lea    ecx,ds:0x7bfffc58
  41bad1:	adc    BYTE PTR [eax],bh
  41bad3:	push   es
  41bad4:	dec    ebx
  41bad5:	fmul   DWORD PTR [ebx-0x75]
  41bad8:	adc    BYTE PTR [eax],0x9a
  41badb:	pop    ebx
  41badc:	pushf  
  41badd:	pop    ds
  41bade:	jmp    0x4d77:0x448f6205
  41bae5:	pop    ds
  41bae6:	mov    dh,0xa4
  41bae8:	dec    ebx
  41bae9:	fadd   DWORD PTR [eax]
  41baeb:	mov    eax,DWORD PTR [eax]
	...
  41bafd:	add    BYTE PTR [eax],al
  41baff:	add    ah,cl
  41bb01:	daa    
  41bb02:	in     al,0x82
  41bb04:	mov    dl,0xd5
  41bb06:	add    BYTE PTR [edi-0x23],bl
  41bb09:	inc    eax
  41bb0a:	pop    ecx
  41bb0b:	and    DWORD PTR [edx-0x42],0x3
  41bb0f:	shl    DWORD PTR [ebx-0x521084dc],0xd3
  41bb16:	xchg   ecx,eax
  41bb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb18:	bound  eax,QWORD PTR [edx+0x52a48900]
  41bb1e:	pop    eax
  41bb1f:	fild   DWORD PTR ss:[eax-0x3157700]
  41bb26:	dec    ecx
  41bb27:	je     0x41babc
  41bb29:	mov    ecx,edi
  41bb2b:	arpl   cx,bp
  41bb2d:	xor    cl,BYTE PTR [edx+0x76]
  41bb30:	inc    edx
  41bb31:	call   0xc07c:0x826226f7
  41bb38:	aaa    
  41bb39:	xchg   edx,eax
  41bb3a:	dec    ecx
  41bb3b:	mov    dh,0xfe
  41bb3d:	add    DWORD PTR [eax],0xb4cbd900
  41bb43:	out    0x20,eax
  41bb45:	jmp    0x71cbbb49
  41bb4a:	adc    eax,0xbcbb59c0
  41bb4f:	sbb    BYTE PTR [edx-0x24fd9b02],ah
  41bb55:	sti    
  41bb56:	jl     0x41bb58
  41bb58:	bound  eax,QWORD PTR [edx+0x3f1b5da9]
  41bb5e:	lods   al,BYTE PTR ds:[esi]
  41bb5f:	mov    BYTE PTR [esi-0x2],bh
  41bb62:	pop    eax
  41bb63:	push   eax
	...
  41bb78:	or     al,0xe7
  41bb7a:	dec    edi
  41bb7b:	push   ebp
  41bb7c:	pop    ebp
  41bb7d:	inc    ebx
  41bb7e:	mov    eax,ds:0x7d806200
  41bb83:	dec    esi
  41bb84:	mov    dl,0x18
  41bb86:	data16 mov BYTE PTR [ebx-0x80],ah
  41bb8a:	jnp    0x41bb4c
  41bb8c:	ins    DWORD PTR es:[edi],dx
  41bb8d:	hlt    
  41bb8e:	sub    eax,0x15806200
  41bb93:	std    
  41bb94:	jno    0x41bb64
  41bb96:	pop    es
  41bb97:	mov    esi,0x3e9d9da
  41bb9c:	bound  eax,QWORD PTR [edx]
  41bb9e:	ins    DWORD PTR es:[edi],dx
  41bb9f:	mov    edx,0x3dadda85
  41bba4:	mov    bh,0x8
  41bba6:	pop    edi
  41bba7:	cmp    al,0xfa
  41bba9:	ret    
  41bbaa:	iret   
  41bbab:	add    esp,DWORD PTR [edx+0x56]
  41bbae:	cmp    al,0x7c
  41bbb0:	(bad)  
  41bbb1:	fldl2t 
  41bbb3:	add    eax,0x444545f
  41bbb8:	(bad)  
  41bbb9:	fnstenv [ecx+edi*4+0x3d]
  41bbbd:	(bad)  
  41bbbe:	in     eax,dx
  41bbbf:	jl     0x41bb96
  41bbc1:	popa   
  41bbc2:	sub    eax,0xe618db60
  41bbc7:	jp     0x41bbe2
  41bbc9:	jge    0x41bc40
  41bbcb:	scas   al,BYTE PTR es:[edi]
  41bbcc:	test   eax,0x95c67110
  41bbd1:	pusha  
  41bbd2:	sub    eax,0xb759ba5c
  41bbd7:	add    ah,BYTE PTR [edx+0x2]
  41bbda:	jne    0x41bb9a
	...
  41bbf0:	test   eax,0xb5b66d09
  41bbf5:	cmp    ecx,0xcdd96283
  41bbfb:	add    cl,BYTE PTR [esi]
  41bbfd:	jp     0x41bc0f
  41bbff:	dec    BYTE PTR [ebx]
  41bc01:	les    ebp,FWORD PTR [esi+edi*4-0x4f]
  41bc05:	or     DWORD PTR [ebx],ebx
  41bc07:	dec    ecx
  41bc08:	hlt    
  41bc09:	in     al,0x81
  41bc0b:	mov    edx,0x84e9d7cb
  41bc10:	lds    esp,FWORD PTR es:[ebx+eax*2-0x2f]
  41bc15:	or     eax,eax
  41bc17:	sti    
  41bc18:	fadd   DWORD PTR [ebx]
  41bc1a:	pop    edx
  41bc1b:	stos   BYTE PTR es:[edi],al
  41bc1c:	cmp    eax,0x6202371d
  41bc21:	(bad)  
  41bc22:	call   0x1ab5d9d
  41bc27:	cdq    
  41bc28:	mov    ah,0x1e
  41bc2a:	loope  0x41bc6d
  41bc2c:	jge    0x41bc1a
  41bc2e:	add    cl,ch
  41bc30:	gs push 0x70
  41bc33:	jl     0xd2fb894f
  41bc39:	add    al,0x8e
  41bc3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc3c:	mov    cl,0x9
  41bc3e:	mov    ?,WORD PTR [ecx+eax*4+0x617d1d81]
  41bc45:	fld    DWORD PTR [ecx+ebp*1+0x5c51c41d]
  41bc4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc4d:	and    eax,0x165b3851
  41bc52:	icebp  
  41bc53:	cmp    DWORD PTR [eax],eax
	...
  41bc65:	add    BYTE PTR [eax],al
  41bc67:	add    BYTE PTR [ebx+0x1e],bl
  41bc6a:	loope  0x41bc2d
  41bc6c:	or     dl,ch
  41bc6e:	add    cl,ch
  41bc70:	inc    ebp
  41bc71:	cdq    
  41bc72:	jne    0x41bc50
  41bc74:	idiv   bh
  41bc76:	sti    
  41bc77:	ins    BYTE PTR es:[edi],dx
  41bc78:	mov    ds:0xb4435125,eax
  41bc7d:	pop    esi
  41bc7e:	inc    esi
  41bc7f:	mov    ecx,0x894e5eee
  41bc84:	cmp    BYTE PTR ds:[ebx-0x17],0x61
  41bc89:	ins    BYTE PTR es:[edi],dx
  41bc8a:	mov    bl,0x4d
  41bc8c:	data16 fld DWORD PTR [eax]
  41bc8f:	(bad)  
  41bc90:	int3   
  41bc91:	sbb    ecx,ebp
  41bc93:	mov    eax,0x1efc69f9
  41bc98:	mov    esp,0xa762c092
  41bc9d:	add    DWORD PTR [ebx+0x62],edx
  41bca0:	(bad)  
  41bca1:	or     eax,0xcf322f28
  41bca6:	xchg   DWORD PTR [ebp-0x12722e8b],esi
  41bcac:	aas    
  41bcad:	mov    ds:0xb114b141,al
  41bcb2:	dec    esi
  41bcb3:	add    BYTE PTR [ebx+0x4b00003b],dl
  41bcb9:	dec    ebp
  41bcba:	cld    
  41bcbb:	jmp    0xdd3b:0x948be42b
  41bcc2:	add    BYTE PTR [ebp-0x74df60a7],al
  41bcc8:	out    dx,eax
  41bcc9:	enter  0x3b08,0x0
	...
  41bcdd:	add    BYTE PTR [eax],al
  41bcdf:	add    BYTE PTR [ebp-0x6f],cl
  41bce2:	sbb    BYTE PTR [ebx+0xed7a],cl
  41bce8:	or     ebx,esp
  41bcea:	ret    0x493b
  41bced:	mov    al,ds:0xe64d2b0c
  41bcf2:	jnp    0x41bc84
  41bcf4:	sti    
  41bcf5:	fadd   QWORD PTR [eax]
  41bcf7:	mov    DWORD PTR [edx-0x8],ebx
  41bcfa:	add    BYTE PTR [eax],al
  41bcfc:	retf   
  41bcfd:	add    ecx,ebx
  41bcff:	xor    bh,bl
  41bd01:	ds ret 0xbb04
  41bd05:	sub    eax,0xe45d5551
  41bd0a:	jmp    0x41bd63
  41bd0c:	xor    BYTE PTR [esi],ah
  41bd0e:	dec    esp
  41bd0f:	idiv   BYTE PTR [ebx+0x6d]
  41bd12:	add    al,0x74
  41bd14:	ret    
  41bd15:	add    BYTE PTR [ecx],0x58
  41bd18:	repnz (bad) 
  41bd1a:	sti    
  41bd1b:	dec    DWORD PTR [ebx-0x60dba31d]
  41bd21:	sub    esp,esp
  41bd23:	imul   esi,edx,0x1f
  41bd26:	inc    BYTE PTR [ebx+ecx*8-0x7695ff77]
  41bd2d:	add    ebp,ecx
  41bd2f:	mov    ecx,DWORD PTR ds:0x7b0000f8
  41bd35:	jecxz  0x41bda3
  41bd37:	and    al,0x67
  41bd39:	pop    edx
  41bd3a:	iret   
  41bd3b:	jle    0x41bd45
  41bd3d:	jecxz  0x41bd83
  41bd3f:	and    al,0x62
  41bd41:	push   0x77
  41bd43:	mov    es,WORD PTR [eax]
	...
  41bd55:	add    BYTE PTR [eax],al
  41bd57:	add    dl,dh
  41bd59:	jno    0x41bd5b
  41bd5b:	add    bh,ch
  41bd5d:	fstp   QWORD PTR [ecx+eax*1]
  41bd60:	sub    bl,bl
  41bd62:	xor    esi,DWORD PTR [ebp-0x69]
  41bd65:	std    
  41bd66:	sti    
  41bd67:	or     DWORD PTR [ecx-0x41],ebp
  41bd6a:	retf   0xb04d
  41bd6d:	and    DWORD PTR [edi+0x42b921e7],ebp
  41bd73:	std    
  41bd74:	fcos   
  41bd76:	imul   eax,DWORD PTR [eax],0x62
  41bd79:	jb     0x41bd82
  41bd7b:	mov    edi,0x8605827f
  41bd80:	shl    BYTE PTR [ecx+0x0],cl
  41bd83:	add    BYTE PTR [ecx],bh
  41bd85:	mov    edx,0x71ce8e7c
  41bd8a:	add    BYTE PTR [eax],al
  41bd8c:	leave  
  41bd8d:	inc    ebx
  41bd8e:	and    BYTE PTR [esi+0x71ee],0x62
  41bd95:	sti    
  41bd96:	sbb    BYTE PTR [eax+0x39007262],0xbf
  41bd9d:	push   ds
  41bd9e:	jmp    0x6188:0xc3acc782
  41bda5:	lds    eax,FWORD PTR [ebp+0x74]
  41bda8:	jle    0x41bd40
  41bdaa:	jns    0x41bd75
  41bdac:	popf   
  41bdad:	popa   
  41bdae:	jnp    0x41bd70
  41bdb0:	sbb    bh,al
  41bdb2:	jns    0x41bdf8
  41bdb4:	inc    esi
  41bdb5:	xchg   edx,eax
  41bdb6:	pop    ds
  41bdb7:	sub    BYTE PTR [ecx-0x32],bh
  41bdba:	(bad)  
  41bdbb:	add    eax,DWORD PTR [eax]
	...
  41bdcd:	add    BYTE PTR [eax],al
  41bdcf:	add    BYTE PTR [ebx+0x75fd45ca],cl
  41bdd5:	jmp    0x23c0:0xfd4a23b8
  41bddc:	inc    esi
  41bddd:	ret    0xc379
  41bde0:	popa   
  41bde1:	fnstenv [edx]
  41bde3:	sbb    DWORD PTR [edi],ebx
  41bde5:	or     dh,BYTE PTR [ecx-0x48]
  41bde8:	add    ecx,0x721478b8
  41bdee:	pop    ebp
  41bdef:	dec    ebx
  41bdf0:	aas    
  41bdf1:	outs   dx,DWORD PTR ds:[si]
  41bdf3:	sub    al,0xe1
  41bdf5:	add    dl,0x2c
  41bdf8:	fist   DWORD PTR [edi]
  41bdfa:	call   0xe0f4:0xe1c9654d
  41be01:	mov    ds:0x67174522,eax
  41be06:	xchg   esi,eax
  41be07:	pop    ds
  41be08:	inc    esi
  41be09:	push   edx
  41be0a:	and    al,0x5c
  41be0c:	mov    dh,0x61
  41be0e:	or     eax,DWORD PTR [ebp-0x1a]
  41be11:	cdq    
  41be12:	jle    0x41bdf3
  41be14:	jne    0x41bdfb
  41be16:	(bad)
  41be19:	jmp    0xb0d5:0xe80b7ed1
  41be20:	fsubp  st(5),st
  41be22:	or     eax,0x5edd6f0
  41be27:	sbb    BYTE PTR [edx-0x38bb2f3a],bh
  41be2d:	push   edx
  41be2e:	mov    ds:0xbe5ab08,al
  41be33:	add    DWORD PTR [eax],eax
	...
  41be45:	add    BYTE PTR [eax],al
  41be47:	add    BYTE PTR [ebx-0x3738435e],bh
  41be4d:	push   edx
  41be4e:	and    BYTE PTR cs:[edx+0x626b845a],al
  41be55:	fldl2t 
  41be57:	add    ebx,ebp
  41be59:	mov    cl,0xd6
  41be5b:	inc    ebx
  41be5c:	push   ebp
  41be5d:	pop    edi
  41be5e:	add    sp,WORD PTR [edx-0x27]
  41be62:	fisubr DWORD PTR [edi-0x5e]
  41be65:	push   es
  41be66:	and    al,0xa7
  41be68:	sbb    al,BYTE PTR [eax]
  41be6a:	test   al,0xf3
  41be6c:	ins    DWORD PTR es:[edi],dx
  41be6d:	push   ebp
  41be6e:	add    ebp,ebp
  41be70:	pop    edx
  41be71:	pop    esi
  41be72:	adc    DWORD PTR [ecx+0x61],0xffffffd9
  41be76:	add    BYTE PTR [ebp+edx*2-0x2b],dh
  41be7a:	daa    
  41be7b:	inc    eax
  41be7c:	enter  0x915f,0xe9
  41be80:	popa   
  41be81:	(bad)  [ecx+0xd9cd6f]
  41be87:	jmp    0x3f3d4124
  41be8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be8d:	push   edx
  41be8e:	add    eax,0x995fa8f2
  41be93:	jmp    0x372b97f9
  41be98:	lahf   
  41be99:	fs cld 
  41be9b:	mov    eax,0xbf5608d0
  41bea0:	mov    dh,0x50
  41bea2:	cli    
  41bea3:	bound  edi,QWORD PTR [esi-0xe560ceb]
  41bea9:	fnsave [esi+eiz*8+0x0]
	...
  41bebd:	add    BYTE PTR [eax],al
  41bebf:	add    BYTE PTR [ebx],cl
  41bec1:	fldl2t 
  41bec3:	shl    DWORD PTR [ebx-0x27],1
  41bec6:	add    BYTE PTR [edx+0x5],ah
  41bec9:	mov    edx,0xed213a20
  41bece:	and    al,0x9
  41bed0:	jle    0x41bee0
  41bed2:	stc    
  41bed3:	(bad)  
  41bed4:	and    DWORD PTR [edx-0x3f],ebx
  41bed7:	push   ecx
  41bed8:	push   ebx
  41bed9:	push   eax
  41beda:	dec    ebp
  41bedb:	or     eax,0xfa025eca
  41bee0:	and    DWORD PTR [esi-0x9],edi
  41bee3:	call   0x76c99849
  41bee8:	cli    
  41bee9:	fadd   DWORD PTR [eax]
  41beeb:	jmp    0x41bd2dda
  41bef0:	fstp   QWORD PTR [ebx-0x67]
  41bef3:	jmp    0xaf799859
  41bef8:	push   ecx
  41bef9:	adc    eax,0x528800f0
  41befe:	xchg   ecx,eax
  41beff:	add    BYTE PTR [ebx-0x27],bh
  41bf02:	push   edx
  41bf03:	push   eax
  41bf04:	in     al,dx
  41bf05:	and    BYTE PTR [eax],ah
  41bf07:	and    al,0xcc
  41bf09:	ret    0x1650
  41bf0c:	or     ebx,ecx
  41bf0e:	mov    DWORD PTR [edi+eiz*2+0x6d],eax
  41bf12:	add    esp,0x8b31563f
  41bf18:	les    eax,FWORD PTR [ecx+0x1]
  41bf1b:	add    BYTE PTR [ebx+0x64],cl
  41bf1e:	in     al,dx
  41bf1f:	jne    0x41bf64
  41bf21:	ins    BYTE PTR es:[edi],dx
  41bf22:	(bad)  [ecx+0x0]
	...
  41bf38:	mov    WORD PTR [ecx+0x1],es
  41bf3b:	add    BYTE PTR [ebx],cl
  41bf3d:	popfw  
  41bf3f:	mov    WORD PTR [ebx],cs
  41bf41:	fld    DWORD PTR [eax]
  41bf43:	jne    0x41bee1
  41bf45:	ins    BYTE PTR es:[edi],dx
  41bf46:	mov    esp,0xfbf56240
  41bf4b:	dec    DWORD PTR [ebx]
  41bf4d:	fidiv  WORD PTR [ebp+0xd90b90]
  41bf53:	sub    eax,DWORD PTR [ebp+0x56]
  41bf56:	xchg   BYTE PTR [ebx+edi*8+0x34eb00d8],dl
  41bf5d:	pop    esp
  41bf5e:	sti    
  41bf5f:	push   DWORD PTR [esi]
  41bf61:	(bad)  
  41bf62:	mov    DWORD PTR [edi+eiz*2+0x71],eax
  41bf66:	and    DWORD PTR [eax],0x33d6b3bb
  41bf6c:	lock gs popf 
  41bf6f:	cwde   
  41bf70:	retf   
  41bf71:	fadd   DWORD PTR [eax]
  41bf73:	jne    0x41bfcd
  41bf75:	xor    eax,0xd8bb1ffc
  41bf7a:	push   ecx
  41bf7b:	call   DWORD PTR [esi-0x74bb91e0]
  41bf81:	pop    ss
  41bf82:	adc    BYTE PTR [ecx+ecx*4-0x68],ah
  41bf86:	cld    
  41bf87:	mov    BYTE PTR [edx-0xd],ah
  41bf8a:	xchg   edi,eax
  41bf8b:	add    BYTE PTR [edx+0x72],ah
  41bf8e:	mov    eax,eax
  41bf90:	out    dx,eax
  41bf91:	jb     0x41bf41
  41bf93:	add    edi,DWORD PTR [ebx-0x3a]
  41bf96:	add    eax,0x96f76200
  41bf9b:	pushf  
	...
  41bfb0:	bound  esi,QWORD PTR [edx+0x0]
  41bfb3:	xor    DWORD PTR [eax],0x7c
  41bfb6:	push   ss
  41bfb7:	mov    ebp,esp
  41bfb9:	push   ecx
  41bfba:	add    BYTE PTR [eax],al
  41bfbc:	(bad)  
  41bfbd:	imul   DWORD PTR [esi-0x68]
  41bfc0:	bound  esi,QWORD PTR [edx+0x0]
  41bfc3:	add    DWORD PTR [edx-0x39],ecx
  41bfc6:	push   esp
  41bfc7:	jmp    0x240da738
  41bfcc:	jp     0x41bf68
  41bfce:	add    BYTE PTR [eax],ah
  41bfd0:	bound  esi,QWORD PTR [edx-0x75]
  41bfd3:	call   DWORD PTR [ebx+eax*1]
  41bfd6:	cwde   
  41bfd7:	add    BYTE PTR [edx+0x72],ah
  41bfda:	aas    
  41bfdb:	push   eax
  41bfdc:	pop    esi
  41bfdd:	test   DWORD PTR [edi-0x7d],0x20888310
  41bfe4:	arpl   WORD PTR [edx+0x0],si
  41bfe7:	mov    DWORD PTR [ebp+0x62fffff9],edi
  41bfed:	pop    ds
  41bfee:	dec    ebp
  41bfef:	xor    DWORD PTR [eax-0x1440667e],0x5a
  41bff6:	add    BYTE PTR gs:[edx+0x72],ah
  41bffa:	xchg   DWORD PTR [ebp+0x71e6],edx
  41c000:	sub    edi,ecx
  41c002:	xchg   ecx,eax
  41c003:	xchg   esp,eax
  41c004:	bound  esi,QWORD PTR [edx+0x0]
  41c007:	mov    esp,DWORD PTR [esi]
  41c009:	ficom  WORD PTR ds:0x8dc51050
  41c00f:	int    0x8a
  41c011:	hlt    
  41c012:	cmp    ebp,edi
	...
  41c028:	xchg   ebp,eax
  41c029:	fsubr  DWORD PTR [esi+0x34]
  41c02c:	in     eax,0xec
  41c02e:	lds    edx,FWORD PTR [edi]
  41c030:	loope  0x41c09c
  41c032:	adc    cl,BYTE PTR [ecx+0x3a3a13eb]
  41c038:	xor    eax,0xe110f1c9
  41c03d:	and    bh,BYTE PTR [ecx+eax*2+0x67]
  41c041:	fnstcw WORD PTR [edx]
  41c043:	fs (bad) 
  41c045:	fldl2t 
  41c047:	mov    edi,fs
  41c049:	cmp    edx,ebp
  41c04b:	add    esp,DWORD PTR [edx-0x62]
  41c04e:	push   0xffffffa0
  41c050:	(bad)  
  41c051:	fldl2t 
  41c053:	mov    edi,0xa06b5069
  41c058:	(bad)  
  41c059:	fldl2t 
  41c05b:	mov    cl,bh
  41c05d:	cmp    edx,ebp
  41c05f:	add    esp,DWORD PTR [edx+0x62]
  41c062:	mov    esi,0x1b4e7de7
  41c067:	inc    ecx
  41c068:	mov    ?,WORD PTR [ebp+0x6c092bc9]
  41c06e:	sbb    eax,DWORD PTR [ecx-0x25]
  41c071:	xchg   ecx,eax
  41c072:	ins    DWORD PTR es:[edi],dx
  41c073:	dec    ebx
  41c074:	jne    0x41c058
  41c076:	or     si,0xe9d9
  41c07b:	add    ebp,edi
  41c07d:	in     eax,dx
  41c07e:	mov    ?,ebx
  41c080:	mov    DWORD PTR [ebp-0x5f19ef2a],edi
  41c086:	jmp    0x10:0xdc5cd740
	...
  41c09d:	add    BYTE PTR [eax],al
  41c09f:	add    ah,bl
  41c0a1:	test   al,0xda
  41c0a3:	inc    eax
  41c0a4:	(bad)  
  41c0a5:	dec    esi
  41c0a6:	cs call 0xe8675f09
  41c0ac:	push   ecx
  41c0ad:	shl    BYTE PTR ds:0xbb0c1434,cl
  41c0b3:	mov    bh,0x81
  41c0b5:	mov    ebp,0x974b600
  41c0ba:	adc    ebp,DWORD PTR [ecx]
  41c0bc:	pop    esi
  41c0bd:	mov    al,0xab
  41c0bf:	and    DWORD PTR [ecx-0x27],0xb69d7200
  41c0c6:	and    dl,al
  41c0c8:	sub    ebx,DWORD PTR [edx-0x7c]
  41c0cb:	jne    0x41c12e
  41c0cd:	fld    DWORD PTR [eax]
  41c0cf:	jb     0x41c076
  41c0d1:	mov    dh,0x30
  41c0d3:	jmp    0xd961:0x59ac5a33
  41c0da:	add    BYTE PTR [edx-0x63],ch
  41c0dd:	aad    0x89
  41c0df:	sbb    DWORD PTR [ecx+0x45],ecx
  41c0e2:	(bad)  
  41c0e3:	jmp    0xfab79a49
  41c0e8:	cmp    BYTE PTR [ebp-0x6b],al
  41c0eb:	jmp    0xf2b79a51
  41c0f0:	sub    BYTE PTR [ebp-0x63],al
  41c0f3:	jmp    0xeab79a59
  41c0f8:	push   ss
  41c0f9:	add    DWORD PTR [eax+0x62],0x7236709e
  41c100:	and    eax,0x7024b6
	...
  41c115:	add    BYTE PTR [eax],al
  41c117:	add    BYTE PTR [ecx+0x7a],ch
  41c11a:	ja     0x41c133
  41c11c:	mov    ds:0xfdad3964,al
  41c121:	enter  0xdf74,0xe4
  41c125:	push   0x7b
  41c127:	fcomi  st,st(6)
  41c129:	xor    al,0x99
  41c12b:	jmp    0x36cb9a91
  41c130:	in     eax,dx
  41c131:	fadd   DWORD PTR [eax]
  41c133:	jmp    0xe9d2f516
  41c138:	popa   
  41c139:	fld    DWORD PTR [edi-0x764a35d3]
  41c13f:	loope  0x41c0c7
  41c141:	xlat   BYTE PTR ds:[ebx]
  41c142:	cli    
  41c143:	add    BYTE PTR [ecx+eiz*4-0x7d7cfd9a],ah
  41c14a:	pop    esi
  41c14b:	pop    ebp
  41c14c:	jo     0x41c0d2
  41c14e:	push   ebx
  41c14f:	ret    0xd5bb
  41c152:	push   edx
  41c153:	jmp    FWORD PTR [edi+0x71]
  41c156:	add    al,0x8b
  41c158:	jmp    0x68d5:0x8a2d2ab4
  41c15f:	add    BYTE PTR [edx+0x358d00d5],cl
  41c165:	cmp    eax,0x544b06c5
  41c16a:	inc    ecx
  41c16b:	add    bl,ah
  41c16d:	jno    0xfc770c74
  41c173:	(bad)  
  41c175:	fld    QWORD PTR [edi-0x444ad4b2]
  41c17b:	add    BYTE PTR [eax],0x0
	...
  41c18e:	add    BYTE PTR [eax],al
  41c190:	dec    edx
  41c191:	fisttp QWORD PTR [ecx-0x7f36a0bc]
  41c197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c198:	mov    edi,0x650000d5
  41c19d:	ins    BYTE PTR es:[edi],dx
  41c19e:	ret    
  41c19f:	mov    ebp,ecx
  41c1a1:	mov    WORD PTR [ecx+0x4b4e0346],cs
  41c1a7:	push   esp
  41c1a8:	xchg   edx,eax
  41c1a9:	(bad)  
  41c1aa:	push   esp
  41c1ab:	mov    DWORD PTR [ebp-0x74717c80],esi
  41c1b1:	aad    0x0
  41c1b3:	add    BYTE PTR [edx-0x4ff76b1],al
  41c1b9:	fadd   st(5),st
  41c1bb:	xchg   BYTE PTR [edi-0x2b],dh
  41c1be:	add    BYTE PTR [eax],al
  41c1c0:	retf   0xdc
  41c1c3:	add    BYTE PTR [edx+0x4f],al
  41c1c6:	xchg   ecx,eax
  41c1c7:	add    BYTE PTR [ebx+0x4f8e83dc],bh
  41c1cd:	fadd   QWORD PTR [eax]
  41c1cf:	add    BYTE PTR [edx-0x25],ah
  41c1d2:	inc    ebp
  41c1d3:	je     0x41c23a
  41c1d5:	mov    edx,0xe8db11b9
  41c1da:	fwait
  41c1db:	add    BYTE PTR [edx+0x72],ah
  41c1de:	lea    ecx,[esi+0x72c2]
  41c1e4:	jmp    0x41c1e6
  41c1e6:	cwde   
  41c1e7:	add    BYTE PTR [edx+0x72],ah
  41c1ea:	lea    ecx,[esi+0x72be]
  41c1f0:	jmp    0x103a025
	...
  41c205:	add    BYTE PTR [eax],al
  41c207:	add    BYTE PTR [edx+0x72],ch
  41c20a:	(bad)  
  41c20b:	mov    BYTE PTR [ebx+0x4a],dh
  41c20e:	adc    al,0x0
  41c210:	bound  esi,QWORD PTR [edx+0x36]
  41c213:	inc    esp
  41c214:	xchg   BYTE PTR [edx+0x5],bh
  41c217:	je     0x41c276
  41c219:	sti    
  41c21a:	dec    ebp
  41c21b:	call   0x416e09
  41c220:	fnstenv [edi+0x7266c1dd]
  41c226:	(bad)  
  41c227:	mov    BYTE PTR [ebx],dh
  41c229:	sti    
  41c22a:	int    0x53
  41c22c:	and    eax,0xa286d070
  41c231:	jb     0x41c25b
  41c233:	test   BYTE PTR [eax],ch
  41c235:	jb     0x41c237
  41c237:	adc    DWORD PTR [edx+edi*2-0x14a68cfb],0x7262988d
  41c242:	add    al,ch
  41c244:	jno    0x41c202
  41c246:	(bad)  
  41c247:	(bad)  
  41c248:	jmp    0x7a29728c
  41c24d:	lods   al,BYTE PTR ds:[esi]
  41c24e:	(bad)  
  41c24f:	(bad)  
  41c250:	fldcw  WORD PTR [edi]
  41c252:	mov    al,ds:0xffbc41e7
  41c257:	call   FWORD PTR [ebp+0x228ca877]
  41c25d:	fldl2t 
  41c25f:	frstor [edx-0x3276cbfb]
  41c265:	data16 ins BYTE PTR es:[edi],dx
  41c267:	mov    BYTE PTR [edx-0x27],ah
  41c26a:	jmp    0x41c271
	...
  41c27f:	add    BYTE PTR [esi],dh
  41c281:	(bad)  
  41c282:	outs   dx,BYTE PTR ds:[esi]
  41c283:	mov    BYTE PTR [ecx+0x74],0xe8
  41c287:	lock fstp QWORD PTR [ebx+0x74]
  41c28b:	mov    WORD PTR [edx-0x27],fs
  41c28e:	jmp    0x6f17d394
  41c293:	into   
  41c294:	adc    DWORD PTR [eax+ebp*8-0x10],esi
  41c298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c299:	dec    ebp
  41c29a:	mov    BYTE PTR [edx],0xe1
  41c29d:	ins    DWORD PTR es:[edi],dx
  41c29e:	adc    eax,0x6f06110f
  41c2a3:	dec    esi
  41c2a4:	jp     0x41c28a
  41c2a6:	jmp    0xe96b24ae
  41c2ab:	sub    cl,cl
  41c2ad:	push   es
  41c2ae:	pop    edi
  41c2af:	dec    edi
  41c2b0:	cmp    dl,dh
  41c2b2:	das    
  41c2b3:	add    al,0x62
  41c2b5:	push   edx
  41c2b6:	bound  eax,QWORD PTR [edi-0xe121ac1]
  41c2bc:	cmc    
  41c2bd:	jb     0x41c26f
  41c2bf:	xor    eax,0x3ea55e4
  41c2c4:	(bad)  
  41c2c5:	fdiv   DWORD PTR [ebp-0x32201ceb]
  41c2cb:	add    ecx,DWORD PTR [ecx+ecx*8+0x5e81b62a]
  41c2d2:	pushf  
  41c2d3:	mov    ds:0xd3f55eae,eax
  41c2d8:	push   edi
  41c2d9:	sbb    edx,ebp
  41c2db:	sbb    BYTE PTR [esi],0xce
  41c2de:	data16 jle 0x41c2bb
  41c2e1:	fldl2t 
  41c2e3:	add    eax,DWORD PTR [eax]
	...
  41c2f5:	add    BYTE PTR [eax],al
  41c2f7:	add    BYTE PTR [eax-0x1c],ah
  41c2fa:	fiadd  WORD PTR [eax-0x16ff1aa4]
  41c300:	bswap  esp
  41c302:	sti    
  41c303:	ja     0x41c31a
  41c305:	push   edx
  41c306:	inc    ebx
  41c307:	dec    ebp
  41c308:	xchg   edi,esp
  41c30a:	jo     0x41c2f6
  41c30c:	es or  esp,edi
  41c30f:	cld    
  41c310:	xchg   ecx,eax
  41c311:	les    eax,FWORD PTR [eax-0x17]
  41c314:	loop   0x41c2ab
  41c316:	or     eax,0xcb518f1c
  41c31b:	shl    DWORD PTR [ebx-0x27],1
  41c31e:	add    cl,ch
  41c320:	loop   0x41c319
  41c322:	fs jmp 0x91b2d304
  41c328:	rcr    dh,cl
  41c32a:	add    ecx,ebp
  41c32c:	icebp  
  41c32d:	pop    ebp
  41c32e:	pop    ebx
  41c32f:	aaa    
  41c330:	xchg   ebp,eax
  41c331:	cdq    
  41c332:	push   ebx
  41c333:	bound  esi,QWORD PTR [eax]
  41c335:	push   eax
  41c336:	dec    ebx
  41c337:	sbb    eax,0xe9ca3136
  41c33c:	popa   
  41c33d:	push   eax
  41c33e:	inc    ebp
  41c33f:	int    0x69
  41c341:	pop    eax
  41c342:	arpl   WORD PTR ds:0xbd435666,cx
  41c348:	ficom  DWORD PTR [eiz*1+0x5916e8ed]
  41c34f:	mov    bh,0xa3
  41c351:	rol    DWORD PTR [eax],1
  41c353:	bound  edx,QWORD PTR [eax]
  41c355:	push   es
  41c356:	sub    BYTE PTR [eax-0x5fb14fb],bl
	...
  41c370:	mov    eax,ds:0xea9f1d70
  41c375:	in     al,0x24
  41c377:	loope  0x41c35d
  41c379:	data16 jne 0x41c36d
  41c37c:	ficomp DWORD PTR [ebp+0x220ea54]
  41c382:	mov    ch,bh
  41c384:	jns    0x41c35f
  41c386:	and    cl,ch
  41c388:	popa   
  41c389:	mov    al,ds:0x97ec00d0
  41c38e:	ret    0x895e
  41c391:	(bad)  
  41c392:	add    BYTE PTR [ebx+0x1007607],cl
  41c398:	cli    
  41c399:	jge    0x41c324
  41c39b:	inc    ecx
  41c39c:	pop    ds
  41c39d:	pop    esi
  41c39e:	cmp    ebx,DWORD PTR [eax+0x19]
  41c3a1:	int3   
  41c3a2:	data16 add BYTE PTR [ecx],ah
  41c3a5:	aad    0xe8
  41c3a7:	pushf  
  41c3a8:	pushf  
  41c3a9:	mov    eax,ds:0xd9b7c2fd
  41c3ae:	dec    edi
  41c3af:	mov    ebp,DWORD PTR [edi-0x7c867e7d]
  41c3b5:	fscale 
  41c3b7:	jne    0x41c364
  41c3b9:	dec    esi
  41c3ba:	inc    eax
  41c3bb:	or     al,0x4b
  41c3bd:	mov    ds:0xcd56ff30,al
  41c3c2:	outs   dx,DWORD PTR ds:[esi]
  41c3c3:	pop    es
  41c3c4:	jecxz  0x41c3fa
  41c3c6:	cli    
  41c3c7:	(bad)  
  41c3c8:	fsubr  QWORD PTR [ebp-0x61d41801]
  41c3ce:	std    
  41c3cf:	inc    DWORD PTR [edx+0xcc282]
	...
  41c3e5:	add    BYTE PTR [eax],al
  41c3e7:	add    BYTE PTR [ebx-0x75],cl
  41c3ea:	mov    ecx,esi
  41c3ec:	mov    eax,0xce006037
  41c3f1:	(bad)  
  41c3f2:	ins    BYTE PTR es:[edi],dx
  41c3f3:	call   0x3ce473
  41c3f8:	rcl    DWORD PTR [edi-0x7b],0x0
  41c3fc:	cmp    ebx,ecx
  41c3fe:	cs inc esp
  41c400:	push   edi
  41c401:	int    0x81
  41c403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c404:	mov    edx,ebp
  41c406:	add    BYTE PTR [eax],al
  41c408:	or     esp,DWORD PTR [eax-0x27045b7e]
  41c40e:	add    BYTE PTR [edx+edi*8],ah
  41c411:	push   0xd90b8486
  41c416:	add    BYTE PTR [ebx+0xbdc2e62],cl
  41c41c:	and    eax,0x620088f5
  41c421:	jb     0x41c428
  41c423:	add    BYTE PTR [edx+0x72],ah
  41c426:	lea    eax,[esi+0x72ea]
  41c42c:	sub    al,0xb0
  41c42e:	or     al,0x0
  41c430:	loope  0x41c3b8
  41c432:	sbb    BYTE PTR [ecx+0x17],dl
  41c435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c436:	iret   
  41c437:	mov    BYTE PTR [esi],dh
  41c439:	into   
  41c43a:	hlt    
  41c43b:	mov    BYTE PTR [eax+0x6203b6ef],dh
  41c441:	out    0x2c,eax
  41c443:	jae    0x41c4aa
  41c445:	loop   0x41c44b
  41c447:	out    0x9d,eax
  41c449:	jno    0x41c44b
	...
  41c45f:	add    bh,ah
  41c461:	sbb    eax,0x71b98407
  41c466:	add    BYTE PTR [eax],al
  41c468:	out    0x44,eax
  41c46a:	pop    es
  41c46b:	test   cl,al
  41c46d:	jno    0x41c46f
  41c46f:	add    cl,ah
  41c471:	dec    esp
  41c472:	or     BYTE PTR [ebx+0x3e],dh
  41c475:	enter  0x8b10,0xb6
  41c479:	xchg   esi,eax
  41c47a:	loopne 0x41c4d2
  41c47c:	dec    edx
  41c47d:	iret   
  41c47e:	sub    bh,bh
  41c480:	dec    ebp
  41c481:	std    
  41c482:	mov    ebx,0xd11c6623
  41c487:	dec    edi
  41c488:	cmp    eax,0xa215cc65
  41c48d:	jb     0x41c412
  41c48f:	les    ebx,FWORD PTR [esi-0xb]
  41c492:	aas    
  41c493:	or     eax,0x597de
  41c498:	bound  ebx,QWORD PTR [edi+0x5b]
  41c49b:	push   0x5e
  41c49d:	stc    
  41c49e:	shl    DWORD PTR [ebx],cl
  41c4a0:	inc    edx
  41c4a1:	stc    
  41c4a2:	shl    DWORD PTR [ebx],cl
  41c4a4:	ds fld st(1)
  41c4a7:	xchg   ah,bh
  41c4a9:	rcl    DWORD PTR [ebx+ebp*8-0x309b3975],cl
  41c4b0:	inc    ecx
  41c4b1:	shl    DWORD PTR [eax-0x1692c6d5],0x3
  41c4b8:	jmp    0x2c518ad1
  41c4bd:	push   es
  41c4be:	call   0xc3:0xd405713a
	...
  41c4d5:	add    BYTE PTR [eax],al
  41c4d7:	add    ch,al
  41c4d9:	push   esi
  41c4da:	scas   al,BYTE PTR es:[edi]
  41c4db:	or     cl,ah
  41c4dd:	cwde   
  41c4de:	jmp    0x41c55e
  41c4e0:	outs   dx,DWORD PTR ds:[esi]
  41c4e1:	fucompp 
  41c4e3:	add    ebx,ebx
  41c4e5:	xchg   edi,eax
  41c4e6:	mov    edi,0x3d696ace
  41c4eb:	adc    cl,BYTE PTR [eax]
  41c4ed:	ret    
  41c4ee:	ins    BYTE PTR es:[edi],dx
  41c4ef:	rol    BYTE PTR [ecx-0x3f],1
  41c4f2:	adc    BYTE PTR [ecx*4-0x7fc1691],ch
  41c4f9:	aam    0x41
  41c4fb:	aam    0xe8
  41c4fd:	adc    al,0xc6
  41c4ff:	sbb    ecx,DWORD PTR [ebx+0x643a66be]
  41c505:	int3   
  41c506:	fs adc al,0x65
  41c509:	pop    ebx
  41c50a:	jmp    0x6de0:0x164c76ad
  41c511:	add    BYTE PTR [edx-0x1626c4da],al
  41c517:	xchg   BYTE PTR [esi-0x6f2e024b],bl
  41c51d:	or     DWORD PTR [ebx+0xf],ebx
  41c520:	mov    es,ebx
  41c522:	test   eax,0xde95e303
  41c527:	jle    0x41c54b
  41c529:	retf   
  41c52a:	ins    BYTE PTR es:[edi],dx
  41c52b:	sub    BYTE PTR [edx-0x27],ah
  41c52e:	jmp    0x14328e0
  41c533:	cdq    
  41c534:	in     al,0xd
  41c536:	and    eax,0x24ff0609
  41c53b:	fld    DWORD PTR [eax]
	...
  41c54d:	add    BYTE PTR [eax],al
  41c54f:	add    ch,cl
  41c551:	shl    DWORD PTR [esi-0x18],cl
  41c554:	dec    ecx
  41c555:	mov    eax,gs:0x67061e9
  41c55b:	add    DWORD PTR [edi],ecx
  41c55d:	cmp    al,0x1
  41c55f:	jmp    0x654e5ec1
  41c564:	fld    DWORD PTR es:[eax]
  41c567:	jmp    0x76c99a4a
  41c56c:	lds    esp,FWORD PTR [ebx]
  41c56e:	add    DWORD PTR [ecx],ecx
  41c570:	data16 (bad) [ecx-0x17553ddb]
  41c577:	xchg   edx,eax
  41c578:	and    bl,cl
  41c57a:	add    BYTE PTR [edx+0x79],ah
  41c57d:	push   esi
  41c57e:	out    dx,al
  41c57f:	neg    BYTE PTR ds:0x61e90130
  41c585:	push   eax
  41c586:	jge    0x41c595
  41c588:	push   0xffffffa8
  41c58a:	xlat   BYTE PTR ds:[ebx]
  41c58b:	sub    bl,dh
  41c58d:	frstor [edx*8-0x3abaaf9f]
  41c594:	jno    0x41c5e9
  41c596:	je     0x41c585
  41c598:	fsubr  st,st(4)
  41c59a:	or     al,0xa6
  41c59c:	mov    ds:0x61c900ca,al
  41c5a1:	(bad)  [ecx+0x66b005e6]
  41c5a7:	in     eax,dx
  41c5a8:	push   esi
  41c5a9:	sbb    bl,BYTE PTR [edx+0x64]
  41c5ac:	xchg   ebx,eax
  41c5ad:	int3   
  41c5ae:	inc    esp
  41c5af:	sub    BYTE PTR [ecx],dl
  41c5b1:	add    eax,0xd9e9
	...
  41c5c6:	add    BYTE PTR [eax],al
  41c5c8:	inc    eax
  41c5c9:	fadd   DWORD PTR [eax]
  41c5cb:	bound  edx,QWORD PTR [edx+0x50]
  41c5ce:	dec    esp
  41c5cf:	in     eax,0xd6
  41c5d1:	push   0x760b00b9
  41c5d6:	cld    
  41c5d7:	push   DWORD PTR [eax-0x68]
  41c5da:	or     al,0x89
  41c5dc:	out    dx,eax
  41c5dd:	jns    0x41c60b
  41c5df:	mov    edi,esp
  41c5e1:	jns    0x41c5f3
  41c5e3:	jmp    0x41c5f7
  41c5e5:	sub    al,0x2
  41c5e7:	push   edi
  41c5e8:	push   ebx
  41c5e9:	add    DWORD PTR [ebx],ebp
  41c5eb:	add    bh,bl
  41c5ed:	dec    esp
  41c5ee:	dec    esi
  41c5ef:	add    al,0x80
  41c5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5f2:	mov    DWORD PTR [edi],eax
  41c5f4:	push   edx
  41c5f5:	sbb    ah,BYTE PTR [eax]
  41c5f7:	xor    BYTE PTR [ebx],ah
  41c5f9:	(bad)  
  41c5fa:	and    BYTE PTR [eax],al
  41c5fc:	mov    ebx,0x4210456c
  41c601:	xchg   edx,eax
  41c602:	and    BYTE PTR [esi+ecx*2],dl
  41c605:	stos   DWORD PTR es:[edi],eax
  41c606:	outs   dx,DWORD PTR ds:[esi]
  41c607:	or     bh,BYTE PTR [esi]
  41c609:	or     al,0x70
  41c60b:	or     al,BYTE PTR [eax-0x5a]
  41c60e:	jg     0x41c606
  41c610:	psubusw mm7,QWORD PTR [ecx]
  41c613:	repz pop esi
  41c615:	jbe    0x41c696
  41c617:	ror    BYTE PTR [edi-0x2e],0x89
  41c61b:	dec    esp
  41c61c:	pop    edi
  41c61d:	imul   ecx,DWORD PTR [ebp+edx*2-0x5d],0x8b017770
  41c625:	pop    eax
  41c626:	shl    DWORD PTR [esi+eax*4+0x5e],0xf1
  41c62b:	je     0x41c62d
	...
  41c63d:	add    BYTE PTR [eax],al
  41c63f:	add    BYTE PTR [edi+0x6f24754e],al
  41c645:	lods   al,BYTE PTR ds:[esi]
  41c646:	imul   edi,edi,0xfc6710e4
  41c64c:	jne    0x41c6b2
  41c64e:	enter  0x19e8,0x18
  41c652:	add    DWORD PTR [eax],eax
  41c654:	adc    BYTE PTR [esi+ecx*1],cl
  41c657:	xchg   esp,eax
  41c658:	mov    BYTE PTR [edx+0x4d],ah
  41c65b:	and    al,0x37
  41c65d:	add    eax,0x42629fe2
  41c662:	add    BYTE PTR [edx-0x2ef63df],cl
  41c668:	xchg   ebp,eax
  41c669:	inc    esi
  41c66a:	xchg   DWORD PTR [esi+edi*1-0x26],ecx
  41c66e:	xor    esi,DWORD PTR ds:0xfeb911fa
  41c674:	add    eax,0x22195d10
  41c679:	clc    
  41c67a:	pop    esp
  41c67b:	pop    ebp
  41c67c:	xchg   esp,eax
  41c67d:	xchg   ebp,eax
  41c67e:	xlat   BYTE PTR ds:[ebx]
  41c67f:	and    BYTE PTR [esi],0x4b
  41c682:	inc    edx
  41c683:	or     al,0x62
  41c685:	lea    eax,[edi+0x34eee3ec]
  41c68b:	call   ebp
  41c68d:	inc    edx
  41c68e:	iret   
  41c68f:	push   esp
  41c690:	cmp    BYTE PTR [esi+0x731d8ef],dl
  41c696:	cdq    
  41c697:	push   edi
  41c698:	es inc edx
  41c69a:	retf   
  41c69b:	cld    
  41c69c:	dec    edi
  41c69d:	call   0xc3b:0xc362400a
	...
  41c6b8:	or     eax,0x701bf8bb
  41c6bd:	add    al,BYTE PTR ds:0x88c5adfd
  41c6c3:	adc    cl,BYTE PTR [edi+ecx*4+0x2070e833]
  41c6ca:	xor    edi,ebp
  41c6cc:	jmp    0x92e27fd3
  41c6d1:	cdq    
  41c6d2:	sar    bh,0xaa
  41c6d5:	pusha  
  41c6d6:	add    eax,0x80b56200
  41c6db:	adc    bl,BYTE PTR [edi+ebx*2+0x33]
  41c6df:	mov    BYTE PTR [edx+0x2],bh
  41c6e2:	into   
  41c6e3:	jb     0x41c72d
  41c6e5:	fsubr  st(4),st
  41c6e7:	push   eax
  41c6e8:	or     DWORD PTR [esi-0x23],eax
  41c6eb:	inc    ebx
  41c6ec:	(bad)  
  41c6ed:	fnstenv [esi-0xc4eaeca]
  41c6f3:	ret    
  41c6f4:	sub    eax,0x93072e5b
  41c6f9:	pop    eax
  41c6fa:	xor    esi,DWORD PTR [ebx+0x1d]
  41c6fd:	mov    bh,0x9e
  41c6ff:	dec    esp
  41c700:	and    ebp,DWORD PTR [edi-0x4e2e0f92]
  41c706:	lods   eax,DWORD PTR ds:[esi]
  41c707:	add    esp,ecx
  41c709:	dec    esi
  41c70a:	mov    dh,0x10
  41c70c:	jmp    0x41c6b4
  41c70e:	in     eax,dx
  41c70f:	ds pop esp
  41c711:	int    0x77
  41c713:	ret    
  41c714:	in     eax,dx
  41c715:	aas    
  41c716:	cwde   
  41c717:	cmp    eax,0x455ed962
	...
  41c730:	retf   0x2bc3
  41c733:	add    esp,DWORD PTR [edx-0x6e]
  41c736:	inc    edx
  41c737:	fsub   QWORD PTR [ecx]
  41c739:	fld    DWORD PTR [ecx]
  41c73b:	or     esp,DWORD PTR [eax-0x27]
  41c73e:	jmp    0xf83b38cd
  41c743:	ret    
  41c744:	mov    ch,0xbf
  41c746:	jge    0x41c723
  41c748:	and    ecx,ebx
  41c74a:	ror    BYTE PTR [esi-0x46],cl
  41c74d:	je     0x41c733
  41c74f:	add    esp,DWORD PTR [edx-0x3f]
  41c752:	inc    ebp
  41c753:	(bad)  [ecx]
  41c755:	fnstcw WORD PTR [edx-0x8e3d3b2]
  41c75b:	inc    ebx
  41c75c:	fstp   QWORD PTR [ecx-0x5ec274db]
  41c762:	stos   BYTE PTR es:[edi],al
  41c763:	ret    
  41c764:	xor    eax,0x6dc470d5
  41c769:	xlat   BYTE PTR ds:[ebx]
  41c76a:	or     ah,dl
  41c76c:	imul   esp,DWORD PTR [ecx-0x17],0x70dd9d8a
  41c773:	ret    
  41c774:	pop    ebp
  41c775:	pusha  
  41c776:	sub    DWORD PTR [eax],ecx
  41c778:	in     eax,0x98
  41c77a:	add    cl,bl
  41c77c:	fcom   DWORD PTR [esi]
  41c77e:	adc    eax,0x89ef2160
  41c783:	test   al,0x4d
  41c785:	pop    esi
  41c786:	inc    edx
  41c787:	and    ecx,ebx
  41c789:	push   ss
  41c78a:	and    DWORD PTR [eax+0x21],esp
  41c78d:	sti    
  41c78e:	mov    DWORD PTR [eax+0x15426009],ebp
	...
  41c7a8:	jmp    0x21b1f8c3
  41c7ad:	or     ecx,DWORD PTR [ecx+0x42600da8]
  41c7b3:	xchg   ebp,eax
  41c7b4:	call   0xa1b414cf
  41c7b9:	sbb    BYTE PTR [edx-0x46],dl
  41c7bc:	sbb    al,0xad
  41c7be:	push   ebx
  41c7bf:	bound  ebp,QWORD PTR [ecx]
  41c7c1:	push   esp
  41c7c2:	push   ss
  41c7c3:	xor    DWORD PTR [eax-0x67],esi
  41c7c6:	add    BYTE PTR [edx-0x31],ch
  41c7c9:	push   esi
  41c7ca:	xchg   ecx,edi
  41c7cc:	std    
  41c7cd:	jmp    0xedfce759
  41c7d2:	xor    ebx,0xe900cbb1
  41c7d8:	push   es
  41c7d9:	fisubr WORD PTR [esi]
  41c7db:	test   eax,0xe901ca78
  41c7e0:	popa   
  41c7e1:	pusha  
  41c7e2:	int3   
  41c7e3:	ror    ebp,0x57
  41c7e6:	cld    
  41c7e7:	jmp    0xd96675c8
  41c7ec:	or     BYTE PTR [ecx],ah
  41c7ee:	add    ecx,ebp
  41c7f0:	popa   
  41c7f1:	pop    esi
  41c7f2:	xor    al,0xc1
  41c7f4:	pushf  
  41c7f5:	fwait
  41c7f6:	add    ecx,ebp
  41c7f8:	jmp    0x7641:0xecc23041
  41c7ff:	in     eax,dx
  41c800:	fimul  DWORD PTR [eax-0x18]
  41c803:	repnz jmp 0xfb80:0x3b0024ac
  41c80b:	push   edx
	...
  41c820:	rcr    BYTE PTR [edi-0x245aa518],1
  41c826:	add    BYTE PTR [ebx+0x75f2d7bb],cl
  41c82c:	inc    esp
  41c82d:	popa   
  41c82e:	enter  0xb5e8,0x17
  41c832:	add    DWORD PTR [eax],eax
  41c834:	ret    0x85
  41c837:	test   DWORD PTR [ebp+0xa2a84dd],esi
  41c83d:	fiadd  DWORD PTR [eax]
  41c83f:	(bad)  
  41c840:	(bad)  
  41c841:	xor    eax,0xda23500c
  41c846:	add    BYTE PTR [eax],al
  41c848:	sbb    eax,DWORD PTR [edx-0x25f4aa0f]
  41c84e:	mov    esi,ecx
  41c850:	push   ebx
  41c851:	cwde   
  41c852:	xchg   ecx,eax
  41c853:	add    ebx,edi
  41c855:	pusha  
  41c856:	jmp    0x4ec8a6e0
  41c85b:	push   0xffffffbb
  41c85d:	sub    ch,bh
  41c85f:	xor    eax,0x407be3
  41c864:	int3   
  41c865:	jecxz  0x41c8cb
  41c867:	adc    cl,BYTE PTR [ebx]
  41c869:	fimul  DWORD PTR [ecx+0x751346f0]
  41c86f:	adc    DWORD PTR [eax],esi
  41c871:	and    DWORD PTR [eax],esp
  41c873:	adc    BYTE PTR [ebx-0x15],al
  41c876:	add    DWORD PTR [esi-0x79],0xffffffd4
  41c87a:	push   0x8
  41c87c:	adc    ch,BYTE PTR [ebx]
  41c87e:	or     bl,ch
  41c880:	jns    0x41c858
  41c882:	icebp  
  41c883:	test   DWORD PTR [eax],eax
	...
  41c895:	add    BYTE PTR [eax],al
  41c897:	add    ch,al
  41c899:	nop
  41c89a:	and    cl,BYTE PTR [ebx+0x4e89e155]
  41c8a0:	jae    0x41c893
  41c8a2:	mul    BYTE PTR [edx]
  41c8a4:	jnp    0x41c87f
  41c8a6:	test   al,al
  41c8a8:	(bad)  
  41c8a9:	hlt    
  41c8aa:	or     DWORD PTR [edi+0xe1b3ad5],eax
  41c8b0:	jmp    0x8413e641
  41c8b5:	inc    edx
  41c8b6:	add    BYTE PTR [ecx-0x3d19a4ec],cl
  41c8bc:	bound  eax,QWORD PTR [edx+0x7b]
  41c8bf:	dec    ebp
  41c8c0:	pop    esi
  41c8c1:	int    0xc8
  41c8c3:	and    edx,DWORD PTR [edx-0x6e]
  41c8c6:	jb     0x41c8c8
  41c8c8:	bound  eax,QWORD PTR [edx+0x10]
  41c8cb:	push   esi
  41c8cc:	mov    dh,BYTE PTR [eax-0x54ea0027]
  41c8d2:	(bad)  
  41c8d3:	nop
  41c8d4:	arpl   WORD PTR [edx-0x77],ax
  41c8d7:	ror    BYTE PTR [esi+0x464c7b2a],0x32
  41c8de:	xor    edi,0x6a
  41c8e1:	je     0x41c8db
  41c8e3:	xchg   BYTE PTR [ebp+0x524d7d46],ah
  41c8e9:	xlat   BYTE PTR ds:[ebx]
  41c8ea:	pop    es
  41c8eb:	mov    DWORD PTR [edx+0x62c421da],ebp
  41c8f1:	inc    edx
  41c8f2:	jnp    0x41c941
  41c8f4:	(bad)
  41c8f8:	jb     0x41c96c
  41c8fa:	fisub  DWORD PTR [edi+0x0]
	...
  41c90d:	add    BYTE PTR [eax],al
  41c90f:	add    BYTE PTR [esi-0x35ffff93],dh
  41c915:	jecxz  0x41c8aa
  41c917:	jmp    FWORD PTR [ebp-0x487ce839]
  41c91d:	mov    dh,0xb3
  41c91f:	imul   esi,DWORD PTR [edx+0xf],0xac1a3330
  41c926:	enter  0x8cff,0x2d
  41c92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c92b:	adc    DWORD PTR [edx],esp
  41c92d:	inc    edx
  41c92e:	jnp    0x41c920
  41c930:	out    0x8c,eax
  41c932:	mov    ah,0xe
  41c934:	jmp    0x5e29f712
  41c939:	popa   
  41c93a:	cld    
  41c93b:	jl     0x41c959
  41c93d:	frstor [eax-0x5f]
  41c940:	bound  ebp,QWORD PTR gs:[eax+eax*1]
  41c944:	dec    ebx
  41c945:	xlat   BYTE PTR ds:[ebx]
  41c946:	outs   dx,BYTE PTR ds:[esi]
  41c947:	ss loope 0x41c994
  41c94a:	test   dl,0xda
  41c94d:	stos   BYTE PTR es:[edi],al
  41c94e:	in     eax,dx
  41c94f:	jle    0x41c8fd
  41c951:	loope  0x41c8d4
  41c953:	rol    BYTE PTR [ebx+0x2287e9d9],cl
  41c959:	int    0xf
  41c95b:	jg     0x41c8f9
  41c95d:	loope  0x41c9cb
  41c95f:	inc    ebx
  41c960:	xchg   esi,eax
  41c961:	in     al,0x69
  41c963:	jmp    0x41c97a
  41c965:	int    0xea
  41c967:	(bad)  
  41c968:	(bad)  
  41c969:	shr    eax,1
  41c96b:	add    ecx,DWORD PTR [esi+0xd1ea9d8]
  41c971:	pop    edx
  41c972:	inc    edi
  41c973:	add    al,0x0
	...
  41c985:	add    BYTE PTR [eax],al
  41c987:	add    BYTE PTR [edx-0x27],ah
  41c98a:	imul   ebp,DWORD PTR [eax+eiz*2-0x1bc19960],0xe5089c97
  41c995:	retf   
  41c996:	cmc    
  41c997:	push   ds
  41c998:	fs pusha 
  41c99a:	xor    al,0x1b
  41c99c:	jo     0x41c998
  41c99e:	jmp    0x264a4a6
  41c9a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9a4:	mov    eax,ds:0xb573e9d8
  41c9a9:	mov    dl,0x43
  41c9ab:	iret   
  41c9ac:	or     dh,BYTE PTR [edx+0x600fd5a6]
  41c9b2:	(bad)  
  41c9b4:	jmp    0xf3cc:0x9786e5d2
  41c9bb:	jl     0x41ca1c
  41c9bd:	inc    ecx
  41c9be:	and    al,0x48
  41c9c0:	(bad)  
  41c9c1:	fld    DWORD PTR [eax]
  41c9c3:	bound  esp,QWORD PTR [ebx]
  41c9c5:	inc    ecx
  41c9c6:	cmp    al,0xa5
  41c9c8:	pop    esi
  41c9c9:	fld    DWORD PTR [edi-0x27f791d9]
  41c9cf:	jo     0x41c961
  41c9d1:	xlat   BYTE PTR ds:[ebx]
  41c9d2:	test   DWORD PTR [esi-0x61781ae6],edx
  41c9d8:	jbe    0x41ca05
  41c9da:	and    ecx,ebp
  41c9dc:	popa   
  41c9dd:	pusha  
  41c9de:	int3   
  41c9df:	xchg   ecx,eax
  41c9e0:	cmp    eax,0xbee90117
  41c9e5:	mov    ds:0xdb10600c,eax
  41c9ea:	call   0x41c9f2
	...
  41c9ff:	add    BYTE PTR [edx-0xf8dff27],bl
  41ca05:	out    0x89,al
  41ca07:	mov    bh,0x1d
  41ca09:	pop    esp
  41ca0a:	pop    ebx
  41ca0b:	stc    
  41ca0c:	fcom   QWORD PTR [ebp+esi*2-0x9]
  41ca10:	mov    fs,WORD PTR [ecx+ebp*8]
  41ca13:	jns    0x41ca13
  41ca15:	push   edx
  41ca16:	cld    
  41ca17:	bound  esp,QWORD PTR [ebx+0x5e2afc41]
  41ca1d:	fstp   DWORD PTR [ebx+0x70]
  41ca20:	adc    bh,ah
  41ca22:	pop    edx
  41ca23:	ret    0xab9e
  41ca26:	xchg   DWORD PTR [eax],ebx
  41ca28:	pop    edi
  41ca29:	mov    ds:0x18750104,eax
  41ca2e:	add    ecx,ebp
  41ca30:	dec    esi
  41ca31:	mov    ds:0x187d1108,eax
  41ca36:	add    ecx,ebp
  41ca38:	mov    ds:0x35588f10,eax
  41ca3e:	shr    cl,0x61
  41ca41:	stos   DWORD PTR es:[edi],eax
  41ca42:	push   ebx
  41ca43:	jb     0x41cabd
  41ca45:	or     bl,dh
  41ca47:	adc    bl,bl
  41ca49:	call   0xdb:0x61aef672
  41ca50:	adc    BYTE PTR [ecx],bl
  41ca52:	inc    eax
  41ca53:	add    edx,eax
  41ca55:	out    dx,al
  41ca56:	int3   
  41ca57:	push   DWORD PTR [ecx+ecx*1-0x21377cbd]
  41ca5e:	cmp    DWORD PTR [edi+0x33],esi
  41ca61:	mov    esp,edi
  41ca63:	pop    ebx
	...
  41ca78:	neg    BYTE PTR [eax]
  41ca7a:	cmp    al,0x5f
  41ca7c:	rcl    bh,0x5a
  41ca7f:	jmp    FWORD PTR [ebx]
  41ca81:	push   edi
  41ca82:	in     eax,dx
  41ca83:	add    BYTE PTR [esi],bh
  41ca85:	(bad)  
  41ca86:	add    BYTE PTR [ebx+0x5003abf],cl
  41ca8c:	dec    ebx
  41ca8d:	(bad)  
  41ca8e:	push   ecx
  41ca8f:	push   ebp
  41ca90:	dec    ebp
  41ca91:	xor    BYTE PTR [ecx],dh
  41ca93:	(bad)  [eax+0x48ea89ff]
  41ca99:	push   cs
  41ca9a:	test   BYTE PTR [edi+ebp*2-0xf],ch
  41ca9e:	mov    BYTE PTR [eax],bl
  41caa0:	sbb    eax,0x3248ccf
  41caa5:	xlat   BYTE PTR ds:[ebx]
  41caa6:	add    BYTE PTR [eax],al
  41caa8:	mov    dl,0xb
  41caaa:	cld    
  41caab:	dec    DWORD PTR [ebx]
  41caad:	pop    ebp
  41caae:	ds or  al,0x14
  41cab1:	pop    esp
  41cab2:	hlt    
  41cab3:	add    ebx,edi
  41cab5:	aad    0x33
  41cab7:	das    
  41cab8:	hlt    
  41cab9:	pusha  
  41caba:	in     al,dx
  41cabb:	add    ebx,ecx
  41cabd:	aad    0xf5
  41cabf:	inc    edi
  41cac0:	mov    edi,0x9b0000d5
  41cac5:	fadd   DWORD PTR [edi+ecx*8-0x7cff2a46]
  41cacc:	hlt    
  41cacd:	push   ecx
  41cace:	or     eax,0xd77d86
  41cad3:	add    BYTE PTR [ebp-0x4bfeffe7],cl
  41cad9:	pop    ecx
  41cada:	mov    ebp,0x1
	...
  41caef:	add    BYTE PTR [edx+0x40],ah
  41caf2:	add    BYTE PTR [esi-0x21],ah
  41caf5:	js     0x41caf3
  41caf7:	xor    BYTE PTR [ecx-0x28ffffc1],0xc3
  41cafe:	call   0x822c24
  41cb03:	call   0xfd6de8d8
  41cb08:	fldcw  WORD PTR [edi+0x1d]
  41cb0b:	mov    esp,0x3c00401c
  41cb10:	data16 fdiv st(7),st
  41cb13:	pop    edx
  41cb14:	enter  0xc844,0xc
  41cb18:	mov    al,ds:0x30c6866a
  41cb1d:	inc    edx
  41cb1e:	add    BYTE PTR [eax],al
  41cb20:	jmp    0xe24ae89d
  41cb25:	mov    edi,0x4822832b
  41cb2a:	js     0x41caac
  41cb2c:	bound  eax,QWORD PTR [edx+0x0]
  41cb2f:	push   0x76
  41cb31:	mov    ch,0xc0
  41cb33:	and    edi,DWORD PTR [esi]
  41cb35:	xchg   ecx,eax
  41cb36:	rcl    BYTE PTR [ebp-0x4f],1
  41cb39:	jae    0x41cb66
  41cb3b:	adc    ebx,esi
  41cb3d:	xor    eax,eax
  41cb3f:	jmp    esi
  41cb41:	add    ch,BYTE PTR [ebx-0x33b68398]
  41cb47:	inc    ebx
  41cb48:	dec    esp
  41cb49:	outs   dx,BYTE PTR ds:[esi]
  41cb4a:	cld    
  41cb4b:	sub    dl,0x46
  41cb4e:	mov    cl,0x5c
  41cb50:	xchg   ecx,eax
  41cb51:	stc    
  41cb52:	mov    ds:0x86,al
	...
  41cb67:	add    BYTE PTR [esi],ah
  41cb69:	jbe    0x41cb4b
  41cb6b:	imul   esp,DWORD PTR [eax+0x7a],0x264fe7e7
  41cb72:	adc    DWORD PTR [esi+eax*4+0x6a],0x4262e86d
  41cb7a:	add    al,ch
  41cb7c:	(bad)  
  41cb7d:	fxch   st(3)
  41cb7f:	add    al,0x62
  41cb81:	pop    esi
  41cb82:	ss call 0x83490fbd
  41cb88:	cdq    
  41cb89:	fcom   QWORD PTR [edx+ecx*1-0x27]
  41cb8d:	gs push cs
  41cb8f:	cmp    al,0x62
  41cb91:	fldl2t 
  41cb93:	ins    BYTE PTR es:[edi],dx
  41cb94:	test   ecx,ebx
  41cb96:	jmp    0xc463559e
  41cb9b:	add    al,0x62
  41cb9d:	pop    esi
  41cb9e:	jle    0x41cb87
  41cba0:	popf   
  41cba1:	fldl2t 
  41cba3:	add    ecx,DWORD PTR [ebx-0x2b]
  41cba6:	pop    esi
  41cba7:	xlat   BYTE PTR ds:[ebx]
  41cba8:	xor    ecx,0xf981c75c
  41cbae:	sbb    DWORD PTR [ecx+0x4ddf4d6],eax
  41cbb4:	(bad)  
  41cbb5:	fld    DWORD PTR [ecx-0x16258e31]
  41cbbb:	mov    BYTE PTR [edx],ah
  41cbbd:	loopne 0x41cc3b
  41cbbf:	inc    ebx
  41cbc0:	ficomp WORD PTR [eax]
  41cbc2:	aad    0xf9
  41cbc4:	push   edx
  41cbc5:	sbb    esp,ecx
  41cbc7:	jl     0x41cba7
  41cbc9:	hlt    
  41cbca:	icebp  
  41cbcb:	add    al,0x0
	...
  41cbdd:	add    BYTE PTR [eax],al
  41cbdf:	add    BYTE PTR [edx-0x27],ah
  41cbe2:	sbb    BYTE PTR ds:0x80ea5005,0xe6
  41cbe9:	hlt    
  41cbea:	pop    es
  41cbeb:	add    esp,DWORD PTR [edx-0x27]
  41cbee:	popa   
  41cbef:	or     esp,DWORD PTR [edx-0x24d6635e]
  41cbf5:	mov    esp,0xd7eb17c5
  41cbfa:	sbb    sp,WORD PTR [esi-0x57]
  41cbfe:	pop    esp
  41cbff:	(bad)  
  41cc00:	pop    ecx
  41cc01:	test   eax,0xa981d774
  41cc06:	mov    dh,0x3c
  41cc08:	retf   0xd5
  41cc0b:	nop
  41cc0c:	pop    esi
  41cc0d:	fld    DWORD PTR [ecx+ebp*1-0x162ca454]
  41cc14:	popa   
  41cc15:	(bad)  [ebp+0xcf8a75]
  41cc1b:	jmp    0x64322e81
  41cc20:	mov    ds:0x25d1490b,al
  41cc25:	daa    
  41cc26:	add    ch,cl
  41cc28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc29:	rol    DWORD PTR [eax+edx*1],0x63
  41cc2d:	and    BYTE PTR [eax-0x1334a951],al
  41cc33:	fisub  DWORD PTR [ecx]
  41cc35:	mov    bh,0x89
  41cc37:	jmp    0x41cc15
  41cc39:	xchg   ebp,eax
  41cc3a:	and    al,0xf9
  41cc3c:	xor    ecx,eax
  41cc3e:	add    DWORD PTR [edx],edi
  41cc40:	int    0x55
  41cc42:	and    eax,0xcd
	...
  41cc57:	add    BYTE PTR [eax-0x27],ah
  41cc5a:	add    BYTE PTR [eax+0x22],dh
  41cc5d:	sti    
  41cc5e:	sub    BYTE PTR [eax],dh
  41cc60:	popa   
  41cc61:	fld    DWORD PTR [eax]
  41cc63:	imul   edx,DWORD PTR [esi],0x3db589a0
  41cc69:	sti    
  41cc6a:	jg     0x41cc9b
  41cc6c:	dec    edi
  41cc6d:	dec    esp
  41cc6e:	push   ss
  41cc6f:	in     eax,0x71
  41cc71:	cdq    
  41cc72:	add    BYTE PTR [esi+eiz*4-0x36],ah
  41cc76:	fs je  0x41cc93
  41cc79:	sti    
  41cc7a:	sbb    al,0x99
  41cc7c:	jl     0x41cc13
  41cc7e:	and    al,0xd5
  41cc80:	adc    DWORD PTR [edx-0xa25a3b1],ebp
  41cc86:	nop
  41cc87:	jmp    0x1e92a5ed
  41cc8c:	sbb    bh,bl
  41cc8e:	and    al,0x16
  41cc90:	ins    DWORD PTR es:[edi],dx
  41cc91:	loope  0x41cca3
  41cc93:	test   eax,0xc15a61
  41cc98:	pop    esp
  41cc99:	xchg   ecx,eax
  41cc9a:	and    BYTE PTR [eax],dl
  41cc9c:	int3   
  41cc9d:	push   ss
  41cc9e:	jo     0x41ccc4
  41cca0:	stos   DWORD PTR es:[edi],eax
  41cca1:	std    
  41cca2:	movups xmm1,XMMWORD PTR [ebx-0x427d03e6]
  41cca9:	(bad)  
  41ccaa:	outs   dx,DWORD PTR ds:[esi]
  41ccab:	xor    BYTE PTR [edx+0x1c],al
  41ccae:	add    al,0x74
  41ccb0:	pop    ebx
  41ccb1:	in     eax,dx
  41ccb2:	ja     0x41cc3b
  41ccb4:	jp     0x41cc90
  41ccb6:	mov    DWORD PTR [edi-0x6d],ecx
  41ccb9:	(bad)  [esp+0x0]
	...
  41cccd:	add    BYTE PTR [eax],al
  41cccf:	add    BYTE PTR [ebx+0x4b77c441],al
  41ccd5:	into   
  41ccd6:	test   BYTE PTR [ebx+edi*8],ah
  41ccd9:	fld    DWORD PTR [eax]
  41ccdb:	add    BYTE PTR [ebx],ch
  41ccdd:	into   
  41ccde:	test   BYTE PTR [edi+ebx*2],ah
  41cce1:	fild   DWORD PTR [eax]
  41cce3:	add    BYTE PTR [ebx+0x3bfffb6d],bl
  41cce9:	pop    edx
  41ccea:	(bad)  
  41cceb:	adc    eax,0x40e98b
  41ccf0:	mov    al,0x56
  41ccf2:	and    eax,0xda4614
  41ccf7:	data16 ror dh,0x24
  41ccfb:	sbb    BYTE PTR [edx],bh
  41ccfd:	fiadd  DWORD PTR [eax]
  41ccff:	(bad)  
  41cd00:	or     ebx,ebx
  41cd02:	sub    DWORD PTR [edi],ebp
  41cd04:	or     BYTE PTR ds:0xf1676c83,bh
  41cd0a:	cmp    ebp,0x2814d0f
  41cd10:	cmp    eax,0x9ebfdfd
  41cd15:	leave  
  41cd16:	sti    
  41cd17:	pop    esi
  41cd18:	fstp   QWORD PTR [esi]
  41cd1a:	mov    al,bl
  41cd1c:	and    BYTE PTR [ebx-0x3b],bl
  41cd1f:	add    dh,al
  41cd21:	fld    DWORD PTR [eax]
  41cd23:	ret    0x3c62
  41cd26:	add    BYTE PTR [edi-0x42],bh
  41cd29:	out    0x3,eax
  41cd2b:	add    BYTE PTR [edx+0x73],ah
  41cd2e:	rcl    DWORD PTR [ebp+0x15],cl
  41cd31:	push   0x56ac
	...
  41cd46:	add    BYTE PTR [eax],al
  41cd48:	push   ds
  41cd49:	inc    eax
  41cd4a:	jns    0x41cd33
  41cd4c:	jno    0x41cd39
  41cd4e:	sub    al,0x13
  41cd50:	ret    0xc051
  41cd53:	(bad)  
  41cd54:	call   0x1e995a3d
  41cd59:	inc    eax
  41cd5a:	jnp    0x41cd97
  41cd5c:	test   BYTE PTR [eax],0xc1
  41cd5f:	(bad)  
  41cd60:	js     0x41cd67
  41cd62:	test   BYTE PTR ds:0x75863f6e,bh
  41cd68:	arpl   WORD PTR [eax+0x0],ax
  41cd6b:	aaa    
  41cd6c:	xor    eax,0x636d7f2f
  41cd71:	inc    eax
  41cd72:	add    dh,dh
  41cd74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd75:	ss add eax,0xa9bf9174
  41cd7b:	add    esp,DWORD PTR [ebx-0x1b]
  41cd7e:	std    
  41cd7f:	hlt    
  41cd80:	popf   
  41cd81:	add    BYTE PTR ds:[eax],dl
  41cd84:	bound  eax,QWORD PTR [edx-0x4f]
  41cd87:	or     al,0xe1
  41cd89:	inc    ebp
  41cd8a:	cld    
  41cd8b:	add    BYTE PTR [edi+0x5e452f1c],dh
  41cd91:	inc    edx
  41cd92:	loopne 0x41cd93
  41cd94:	sbb    eax,0xaf891127
  41cd99:	cmp    dl,bl
  41cd9b:	push   eax
  41cd9c:	mov    cl,0x9b
  41cd9e:	mov    cl,0xb
  41cda0:	xlat   BYTE PTR ds:[ebx]
  41cda1:	xor    esp,0xffffffe7
  41cda4:	xor    bl,ch
  41cda6:	daa    
  41cda7:	std    
  41cda8:	fild   WORD PTR [edx]
  41cdaa:	scas   al,BYTE PTR es:[edi]
  41cdab:	or     eax,0x0
	...
  41cdc0:	cmp    DWORD PTR [ebx+0x3],eax
  41cdc3:	cmp    eax,0xf823d9e1
  41cdc8:	push   edx
  41cdc9:	jle    0x41cddc
  41cdcb:	(bad)  
  41cdcd:	dec    esp
  41cdce:	jmp    0x6206:0xeff5de78
  41cdd5:	fst    DWORD PTR [ecx]
  41cdd7:	call   0x7f3d1a79
  41cddc:	mov    dl,0x41
  41cdde:	mov    WORD PTR [edi+0x6804cad],?
  41cde4:	or     DWORD PTR [edi-0x2aa63319],edi
  41cdea:	jmp    0x8d55:0xac5a7cc5
  41cdf1:	dec    esp
  41cdf2:	jmp    0x7ea8:0x7d41947e
  41cdf9:	dec    esp
  41cdfa:	gs inc ebx
  41cdfc:	cli    
  41cdfd:	retf   0x103f
  41ce00:	fstp   DWORD PTR [ebp-0x56eaf7fb]
  41ce06:	cmp    edx,edi
  41ce08:	mov    dl,0x4c
  41ce0a:	cmc    
  41ce0b:	jg     0x41ce72
  41ce0d:	cdq    
  41ce0e:	jmp    0x10cf093
  41ce13:	mov    ds:0x122dad8c,al
  41ce18:	mov    dh,0xdd
  41ce1a:	sub    cx,WORD PTR [esi-0x32]
  41ce1e:	adc    al,0xf7
  41ce20:	and    al,0xb3
  41ce22:	pusha  
  41ce23:	mov    bh,0x0
	...
  41ce35:	add    BYTE PTR [eax],al
  41ce37:	add    BYTE PTR [ecx+0x602866f1],ah
  41ce3d:	(bad)  
  41ce3e:	cmc    
  41ce3f:	js     0x41cdef
  41ce41:	cmc    
  41ce42:	mov    ecx,0xe9d8fa6c
  41ce47:	add    edi,edx
  41ce49:	fs dec esi
  41ce4b:	add    al,0x62
  41ce4d:	pop    esi
  41ce4e:	xchg   esi,eax
  41ce4f:	fbld   TBYTE PTR [ebp-0x1af5fec0]
  41ce55:	dec    edi
  41ce56:	add    BYTE PTR [edi+edx*2+0x21cd9560],dh
  41ce5d:	fld    DWORD PTR [eax]
  41ce5f:	jmp    0xe94302aa
  41ce64:	popa   
  41ce65:	inc    ecx
  41ce66:	jns    0x41ce6d
  41ce68:	pop    esi
  41ce69:	(bad)  [ebp+0x18b9d5d]
  41ce6f:	jmp    0x624710d5
  41ce74:	popf   
  41ce75:	not    DWORD PTR [esp+ebx*2]
  41ce78:	in     eax,0xf7
  41ce7a:	sbb    BYTE PTR [ecx],bh
  41ce7c:	adc    eax,0x60f5255d
  41ce81:	fld    DWORD PTR [eax]
  41ce83:	ror    DWORD PTR [edx+0x4e90209],0x19
  41ce8a:	or     al,0x5c
  41ce8c:	es push ebp
  41ce8e:	shl    DWORD PTR [esp+esi*2],0x8
  41ce92:	ror    DWORD PTR [edi-0x17],0x54
  41ce96:	and    eax,0xd960d9
  41ce9b:	pusha  
	...
  41ceb0:	js     0x41cefc
  41ceb2:	cld    
  41ceb3:	jmp    0xf3672484
  41ceb8:	data16 fld DWORD PTR [eax]
  41cebb:	popa   
  41cebc:	push   esi
  41cebd:	cdq    
  41cebe:	dec    ecx
  41cebf:	cld    
  41cec0:	(bad)  
  41cec1:	pusha  
  41cec2:	add    al,0x6a
  41cec4:	push   esi
  41cec5:	fst    QWORD PTR [eax+0x64]
  41cec8:	and    ebx,edi
  41ceca:	push   eax
  41cecb:	pop    esp
  41cecc:	adc    dh,bh
  41cece:	dec    eax
  41cecf:	push   ecx
  41ced0:	(bad)  
  41ced1:	mov    ds:0x1995e901,eax
  41ced6:	jne    0x41ce82
  41ced8:	xchg   esp,eax
  41ced9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceda:	and    al,0xd1
  41cedc:	xchg   DWORD PTR [ebp-0x1134ffe4],ebx
  41cee2:	ins    BYTE PTR es:[edi],dx
  41cee3:	aam    0xa
  41cee5:	xlat   BYTE PTR ds:[ebx]
  41cee6:	inc    ecx
  41cee7:	cmp    DWORD PTR [ecx],0xffffffd9
  41ceea:	cmp    ebx,0x33ee850b
  41cef0:	mov    esi,DWORD PTR [edi-0x7d]
  41cef3:	add    dh,BYTE PTR [ebx-0x4d]
  41cef6:	jg     0x41cef9
  41cef8:	mov    ebx,0xcf2444cf
  41cefd:	ins    BYTE PTR es:[edi],dx
  41cefe:	add    BYTE PTR [ebp+0x50142b0f],cl
  41cf04:	ror    DWORD PTR [edx-0x79],1
  41cf07:	test   BYTE PTR [edi-0x44ffff36],bl
  41cf0d:	xchg   DWORD PTR es:[edi+ebp*2+0xfffb35],edx
	...
  41cf25:	add    BYTE PTR [eax],al
  41cf27:	add    BYTE PTR [ebx-0x4b3f1012],cl
  41cf2d:	add    DWORD PTR [edi+0xdca3d8],eax
  41cf33:	add    BYTE PTR [ebx+0x3f59786e],cl
  41cf39:	aad    0xfd
  41cf3b:	adc    eax,0x40e4d7
  41cf40:	push   esp
  41cf41:	pop    ds
  41cf42:	push   edi
  41cf43:	mov    cl,BYTE PTR [eax]
  41cf45:	sbb    eax,0x4a03c47b
  41cf4a:	cld    
  41cf4b:	(bad)  
  41cf4c:	stc    
  41cf4d:	dec    ecx
  41cf4e:	cld    
  41cf4f:	mov    ah,BYTE PTR [esi]
  41cf51:	pop    edx
  41cf52:	push   esp
  41cf53:	inc    esp
  41cf54:	dec    ebx
  41cf55:	out    dx,al
  41cf56:	test   al,0xbf
  41cf58:	dec    ebx
  41cf59:	(bad)  
  41cf5a:	and    DWORD PTR ds:0x401f8f,0x9820553b
  41cf64:	and    cl,BYTE PTR [edx+0x2548fffc]
  41cf6a:	push   esi
  41cf6b:	push   edi
  41cf6c:	bound  ebx,QWORD PTR [eax]
  41cf6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf6f:	push   esi
  41cf70:	sahf   
  41cf71:	inc    eax
  41cf72:	jge    0x41cf66
  41cf74:	xor    edi,esi
  41cf76:	sub    BYTE PTR [ebx],dl
  41cf78:	add    ch,BYTE PTR [esi]
  41cf7a:	sar    bh,0x5
  41cf7d:	repz sub ch,bh
  41cf80:	in     eax,0xb6
  41cf82:	mov    ds:0xcce77223,eax
  41cf87:	mov    BYTE PTR [edi+edi*4+0x26],ah
  41cf8b:	or     al,0x0
	...
  41cf9d:	add    BYTE PTR [eax],al
  41cf9f:	add    BYTE PTR [eax-0x77],dl
  41cfa2:	in     eax,dx
  41cfa3:	int3   
  41cfa4:	dec    ebp
  41cfa5:	test   DWORD PTR [ecx],esi
  41cfa7:	inc    esi
  41cfa8:	inc    ax
  41cfaa:	add    BYTE PTR [eax],al
  41cfac:	add    ah,0xc4
  41cfaf:	sub    BYTE PTR [ebx-0x53c24dcd],0x71
  41cfb6:	cld    
  41cfb7:	(bad)  
  41cfb8:	adc    eax,edi
  41cfba:	ja     0x41cfcf
  41cfbc:	cli    
  41cfbd:	cwde   
  41cfbe:	sar    bh,0xde
  41cfc1:	dec    ebx
  41cfc2:	adc    eax,0xc108eeb7
  41cfc7:	inc    DWORD PTR [ebp+0x620062c2]
  41cfcd:	mov    ah,0x44
  41cfcf:	je     0x41d014
  41cfd1:	sub    ebx,0xffffff9e
  41cfd4:	into   
  41cfd5:	call   0x35a2cf9a
  41cfda:	mov    BYTE PTR [edi-0x62],dl
  41cfdd:	xor    cl,dh
  41cfdf:	dec    edi
  41cfe0:	dec    ebp
  41cfe1:	inc    esi
  41cfe2:	rcl    BYTE PTR ds:0x67732a2,1
  41cfe8:	arpl   WORD PTR ds:0x329e5788,si
  41cfee:	jg     0x41cfb4
  41cff0:	pop    esi
  41cff1:	repz xlat BYTE PTR ds:[ebx]
  41cff3:	cmp    eax,0xfd7f9061
  41cff8:	outs   dx,BYTE PTR ds:[esi]
  41cff9:	(bad)  
  41cffb:	arpl   WORD PTR [edx+0xdbfc0c5],cx
  41d001:	dec    eax
  41d002:	std    
  41d003:	inc    edi
	...
  41d018:	jo     0x41cfb3
  41d01a:	jmp    0xa3eaeb9f
  41d01f:	not    al
  41d021:	sbb    DWORD PTR [edi+0x68d96641],ebx
  41d027:	sbb    BYTE PTR [edx],bh
  41d029:	fucompp 
  41d02b:	add    esi,DWORD PTR [ebx]
  41d02d:	scas   al,BYTE PTR es:[edi]
  41d02e:	outs   dx,BYTE PTR ds:[esi]
  41d02f:	pop    eax
  41d030:	jle    0x41d03f
  41d032:	jmp    0x5ef1323a
  41d037:	rcr    DWORD PTR [ebp-0x50],0x5e
  41d03b:	sub    eax,0x7ff319e1
  41d040:	mov    eax,ds:0xe303e9d9
  41d045:	mov    ecx,0x73bd03e5
  41d04a:	jmp    0x74e7:0xec536203
  41d051:	int    0xf5
  41d053:	out    0x4d,eax
  41d055:	int    0xe5
  41d057:	out    0x27,eax
  41d059:	int    0xe5
  41d05b:	icebp  
  41d05c:	call   0xe434:0x6372ef34
  41d063:	jb     0x41d0c5
  41d065:	xor    al,0xe8
  41d067:	jb     0x41d0ce
  41d069:	sahf   
  41d06a:	aas    
  41d06b:	add    al,0x5f
  41d06d:	shl    ch,1
  41d06f:	jp     0x41d095
  41d071:	dec    eax
  41d072:	adc    edi,esp
  41d074:	inc    ebp
  41d075:	addr16 (bad) 
  41d078:	inc    edi
  41d079:	push   esp
  41d07a:	mov    edx,0x7a
	...
  41d08f:	add    BYTE PTR [ecx+esi*1],ch
  41d092:	aam    0x9
  41d094:	(bad)  
  41d095:	fldenv [ebp+0x43]
  41d098:	mov    dh,0xca
  41d09a:	add    dh,ah
  41d09c:	mov    bh,0x1a
  41d09e:	add    BYTE PTR [ecx-0x4e9f329f],0xc5
  41d0a5:	lods   al,BYTE PTR ds:[esi]
  41d0a6:	dec    eax
  41d0a7:	aad    0xe
  41d0a9:	mov    al,ds:0x95e1b275
  41d0ae:	push   eax
  41d0af:	jmp    0x41d109
  41d0b1:	lods   al,BYTE PTR ds:[esi]
  41d0b2:	xchg   DWORD PTR [esi+0x54552ed],ebx
  41d0b8:	push   edx
  41d0b9:	test   eax,0xdfac6251
  41d0be:	call   0xfc88e1cb
  41d0c3:	ins    BYTE PTR es:[edi],dx
  41d0c4:	and    esp,ecx
  41d0c6:	inc    eax
  41d0c7:	pop    ss
  41d0c8:	or     eax,0xf5eb14fc
  41d0cd:	push   cs
  41d0ce:	or     al,0x56
  41d0d0:	cmc    
  41d0d1:	sti    
  41d0d2:	sbb    al,0xf6
  41d0d4:	inc    esp
  41d0d5:	popf   
  41d0d6:	and    al,0xdf
  41d0d8:	pusha  
  41d0d9:	xchg   esi,eax
  41d0da:	or     BYTE PTR [edx+0x4d],ch
  41d0dd:	aad    0xb6
  41d0df:	in     eax,0x66
  41d0e1:	fld    DWORD PTR [eax]
  41d0e3:	cmp    DWORD PTR [ecx-0x5dfab2ae],esi
  41d0e9:	aas    
  41d0ea:	inc    ecx
  41d0eb:	pop    esi
  41d0ec:	aas    
  41d0ed:	inc    esi
  41d0ee:	xchg   BYTE PTR [ecx+0x1d8deacd],ch
	...
  41d108:	xor    bh,0xe8
  41d10b:	sar    BYTE PTR [ecx+0x47],0xfc
  41d10f:	ret    0x1d68
  41d112:	inc    esp
  41d113:	in     eax,dx
  41d114:	arpl   WORD PTR [eax],si
  41d116:	add    eax,0x20317af
  41d11b:	imul   edi,DWORD PTR [ebx-0x25],0x92cafb75
  41d122:	or     BYTE PTR [ecx+0xe38c],al
  41d128:	dec    ebx
  41d129:	ret    0x85f0
  41d12c:	mov    ch,0x4c
  41d12e:	jg     0x41d174
  41d130:	lods   al,BYTE PTR ds:[esi]
  41d131:	cld    
  41d132:	std    
  41d133:	pop    edi
  41d134:	ins    DWORD PTR es:[edi],dx
  41d135:	push   ds
  41d136:	pop    ecx
  41d137:	add    DWORD PTR [edi+0x25],0x98fbfffb
  41d13e:	add    al,0x0
  41d140:	sbb    BYTE PTR [ecx],0x20
  41d143:	add    al,0x88
  41d145:	loope  0x41d177
  41d147:	push   ebx
  41d148:	(bad)  
  41d149:	adc    al,0x55
  41d14b:	mov    esp,DWORD PTR [ebx]
  41d14d:	dec    edi
  41d14e:	mov    ecx,esi
  41d150:	jbe    0x41d14e
  41d152:	or     eax,0xdb6884
  41d157:	add    BYTE PTR [ebp-0x79],dh
  41d15a:	dec    esp
  41d15b:	add    bh,BYTE PTR [edi+eax*8-0x2544fded]
  41d162:	mov    DWORD PTR [eax-0x45],ebp
  41d165:	jecxz  0x41d0fe
  41d167:	add    ebx,ecx
  41d169:	fimul  DWORD PTR [ecx+0x7]
	...
  41d17f:	add    BYTE PTR [eax],bh
  41d181:	cmc    
  41d182:	or     BYTE PTR [edi],cl
  41d184:	cmp    eax,esi
  41d186:	sti    
  41d187:	dec    DWORD PTR [ebx+0x40fbf31]
  41d18d:	or     esp,edi
  41d18f:	(bad)  
  41d190:	jnp    0x41d161
  41d192:	pop    eax
  41d193:	clc    
  41d194:	dec    eax
  41d195:	into   
  41d196:	inc    ebp
  41d197:	or     BYTE PTR [ebx],bh
  41d199:	arpl   WORD PTR [ebx+ecx*4],bx
  41d19c:	lods   eax,DWORD PTR ds:[esi]
  41d19d:	ret    
  41d19e:	pop    esp
  41d19f:	and    al,0x5f
  41d1a1:	in     eax,0xef
  41d1a3:	add    DWORD PTR [ebx-0x26],edi
  41d1a6:	test   al,al
  41d1a8:	cmp    al,0xc6
  41d1aa:	arpl   WORD PTR [ecx],ax
  41d1ac:	dec    ebx
  41d1ad:	ficom  DWORD PTR [ecx-0x73]
  41d1b0:	test   BYTE PTR [ebp+0x4c],al
  41d1b3:	push   0x62
  41d1b5:	xor    DWORD PTR [ecx-0x32],edi
  41d1b8:	dec    edx
  41d1b9:	ja     0x41d1ba
  41d1bb:	jmp    DWORD PTR [edx-0x4c]
  41d1be:	aas    
  41d1bf:	or     eax,0xffffe2e6
  41d1c4:	(bad)  
  41d1c6:	jae    0x41d20d
  41d1c8:	push   0xffffffe0
  41d1ca:	xchg   esi,eax
  41d1cb:	add    ecx,ebp
  41d1cd:	or     eax,0x3063c718
  41d1d2:	add    BYTE PTR [edx+eiz*1+0x633b7c3f],al
  41d1d9:	xor    BYTE PTR [eax],al
  41d1db:	mov    DWORD PTR [eax+ecx*2-0x7212f866],ecx
  41d1e2:	hlt    
  41d1e3:	xor    BYTE PTR [eax],al
	...
  41d1f5:	add    BYTE PTR [eax],al
  41d1f7:	add    BYTE PTR [ebx],bl
  41d1f9:	jno    0x41d213
  41d1fb:	aam    0x23
  41d1fd:	xor    DWORD PTR [eax],eax
  41d1ff:	test   BYTE PTR [edx+0x63237b4e],ah
  41d205:	xor    BYTE PTR [eax],al
  41d207:	mov    ebx,DWORD PTR [esi]
  41d209:	adc    al,0xd
  41d20b:	push   eax
  41d20c:	jmp    0x6a8f4513
  41d211:	call   0x46efc97d
  41d216:	jnp    0x41d1d8
  41d218:	push   ebp
  41d219:	mov    ch,0xf5
  41d21b:	(bad)  
  41d21c:	popf   
  41d21d:	das    
  41d21e:	jae    0x41d264
  41d220:	fdiv   QWORD PTR ds:[esp+ecx*1+0x6806fed5]
  41d228:	bound  esi,QWORD PTR [eax]
  41d22a:	add    BYTE PTR [eax+0x12],al
  41d22d:	mov    ebx,0xcb1223c8
  41d232:	int3   
  41d233:	add    edi,DWORD PTR [edx-0x5e]
  41d236:	mov    edi,edi
  41d238:	gs mov eax,0xbd8623c8
  41d23e:	inc    esp
  41d23f:	or     eax,0x48ad9de
  41d244:	(bad)  
  41d245:	fldcw  WORD PTR [esi-0x48]
  41d248:	and    ebp,0xe181a866
  41d24e:	jmp    0xb292ed29
  41d253:	xchg   DWORD PTR [eax],ebp
  41d255:	fdivr  st(7),st
  41d257:	jmp    0x41d233
  41d259:	fisub  DWORD PTR [esi+0x1c]
	...
  41d270:	fs (bad) 
  41d272:	enter  0x23de,0xcd
  41d276:	add    al,0x1a
  41d278:	dec    ebp
  41d279:	fucomp st(0)
  41d27b:	cwde   
  41d27c:	pop    edx
  41d27d:	lock cmp DWORD PTR [edi],eax
  41d280:	sub    bl,BYTE PTR [ecx+0x50]
  41d283:	or     dh,BYTE PTR [ebx+0x3b]
  41d286:	dec    edi
  41d287:	adc    bl,bl
  41d289:	loop   0x41d2f7
  41d28b:	lds    ebx,FWORD PTR [edi+0x52]
  41d28e:	scas   al,BYTE PTR es:[edi]
  41d28f:	out    0x75,eax
  41d291:	pop    eax
  41d292:	aas    
  41d293:	or     ch,al
  41d295:	xchg   ebp,eax
  41d296:	int    0xeb
  41d298:	fistp  DWORD PTR [edx]
  41d29a:	fadd   st,st(7)
  41d29c:	sub    esp,0x117004cd
  41d2a2:	pop    edi
  41d2a3:	enter  0xe181,0x71
  41d2a7:	rol    BYTE PTR [ecx+0x314464f1],1
  41d2ad:	fcmovne st,st(0)
  41d2af:	mov    DWORD PTR [ecx-0xb],0x28eb10fe
  41d2b6:	outs   dx,DWORD PTR ds:[esi]
  41d2b7:	dec    ebx
  41d2b8:	jp     0x41d2da
  41d2ba:	mov    ecx,0x2e526204
  41d2bf:	call   0xe878230d
  41d2c4:	push   ebp
  41d2c5:	push   esi
  41d2c6:	xor    ecx,DWORD PTR [edx+edi*2]
  41d2c9:	loop   0x41d347
  41d2cb:	add    esp,DWORD PTR [edx+0x50]
  41d2ce:	add    DWORD PTR ds:0xa187ec4a,ebx
	...
  41d2e8:	in     al,0x9c
  41d2ea:	and    al,0xc9
  41d2ec:	ficom  WORD PTR [esp+0x249cd6d9]
  41d2f3:	fucomp st(2)
  41d2f5:	es jbe 0x41d2f3
  41d2f8:	in     al,0x9c
  41d2fa:	and    al,0xcd
  41d2fc:	ficomp WORD PTR [esp+0x249cd4c1]
  41d303:	aad    0xee
  41d305:	pushf  
  41d306:	and    al,0xad
  41d308:	inc    esp
  41d309:	loop   0x41d292
  41d30b:	mov    ch,0x5
  41d30d:	clc    
  41d30e:	call   0x11b788a
  41d313:	push   0xffffffc5
  41d315:	idiv   DWORD PTR [eax]
  41d317:	jmp    0x5668ff8
  41d31c:	push   dx
  41d31e:	dec    ebp
  41d31f:	add    eax,0xd55510e
  41d324:	ficom  WORD PTR [eax+0x45]
  41d327:	add    eax,0x9cc156d2
  41d32c:	gs pop eax
  41d32e:	iret   
  41d32f:	xchg   esp,eax
  41d330:	pop    ebp
  41d331:	pop    eax
  41d332:	retf   0x6c9c
  41d335:	push   eax
  41d336:	dec    ebp
  41d337:	(bad)
  41d33a:	jo     0x41d33d
  41d33c:	add    BYTE PTR [esi-0x18],0xd7
  41d340:	ficomp DWORD PTR [eax]
  41d342:	jbe    0x41d2fe
  41d344:	repnz xchg edx,eax
  41d346:	inc    eax
  41d347:	pop    esp
  41d348:	int    0xf7
  41d34a:	sub    BYTE PTR [edx+0x0],dh
	...
  41d35d:	add    BYTE PTR [eax],al
  41d35f:	add    BYTE PTR [ecx-0x59],ah
  41d362:	sti    
  41d363:	cmp    DWORD PTR [edx+0x5a],esi
  41d366:	stc    
  41d367:	(bad)  
  41d368:	fcmovbe st,st(4)
  41d36a:	daa    
  41d36b:	(bad)  
  41d36c:	pop    esi
  41d36d:	push   es
  41d36e:	add    BYTE PTR [eax],0xa6
  41d371:	aam    0xd
  41d373:	add    DWORD PTR [ecx-0x9],0xfffffffd
  41d377:	jmp    DWORD PTR [eax]
  41d379:	sbb    BYTE PTR [edi-0x1bcaa0b4],al
  41d37f:	inc    ebx
  41d380:	add    edi,ecx
  41d382:	std    
  41d383:	mov    esi,ebp
  41d385:	cmc    
  41d386:	pop    eax
  41d387:	clc    
  41d388:	aam    0xf8
  41d38a:	jmp    0xe8e993db
  41d38f:	dec    edi
  41d390:	jecxz  0x41d38a
  41d392:	std    
  41d393:	inc    ebx
  41d394:	mov    dh,0x81
  41d396:	and    BYTE PTR [esi+eax*4+0x29],al
  41d39a:	and    BYTE PTR [edx+eax*4],ch
  41d39d:	sbb    DWORD PTR [eax],esp
  41d39f:	inc    esp
  41d3a0:	mov    bl,0xe2
  41d3a2:	add    al,BYTE PTR [eax]
  41d3a4:	sti    
  41d3a5:	push   edi
  41d3a6:	jnp    0x41d3c4
  41d3a8:	or     edx,edi
  41d3aa:	adc    BYTE PTR [eax],al
  41d3ac:	or     eax,0x5f4c87ea
  41d3b1:	xor    eax,0xf8a30fe4
  41d3b6:	std    
  41d3b7:	add    BYTE PTR ds:0xb0eb0287,0x53
  41d3be:	dec    ebx
  41d3bf:	inc    eax
  41d3c0:	push   esi
  41d3c1:	and    DWORD PTR [eax],0x28
	...
  41d3d7:	add    BYTE PTR [eax-0x2a],dl
  41d3da:	dec    esi
  41d3db:	(bad)  
  41d3dc:	sti    
  41d3dd:	rol    BYTE PTR [ecx+0x36a64f8],cl
  41d3e3:	(bad)  
  41d3e4:	idiv   DWORD PTR [edx]
  41d3e6:	and    al,0xe8
  41d3e8:	push   ebp
  41d3e9:	loopne 0x41d3e8
  41d3eb:	(bad)  
  41d3ec:	fcom   DWORD PTR [esi+0x45c34639]
  41d3f2:	mov    esp,0xfef5a3f7
  41d3f7:	xor    DWORD PTR [ebx+0x625d5e19],edi
  41d3fd:	pop    es
  41d3fe:	xchg   ah,al
  41d400:	xor    ch,BYTE PTR [esi+0x4]
  41d403:	add    BYTE PTR [ebx],dl
  41d405:	loope  0x41d3bc
  41d407:	push   edx
  41d408:	or     al,0xc7
  41d40a:	xchg   ebx,eax
  41d40b:	and    edi,DWORD PTR [esi+0x3f]
  41d40e:	cmp    eax,0x8d88e955
  41d413:	dec    esp
  41d414:	xchg   BYTE PTR [esi+ecx*4],dl
  41d417:	rcr    ebx,1
  41d419:	add    ebp,ecx
  41d41b:	adc    ebp,edx
  41d41d:	add    ebp,ecx
  41d41f:	adc    cl,ah
  41d421:	push   0xee00d0c
  41d426:	(bad)  
  41d427:	jmp    DWORD PTR [edx-0x39]
  41d42a:	icebp  
  41d42b:	sbb    BYTE PTR [edi],0x3c
  41d42e:	adc    DWORD PTR [edx+0x3164],eax
  41d434:	dec    ecx
  41d435:	test   eax,0x315c8510
	...
  41d44e:	add    BYTE PTR [eax],al
  41d450:	jmp    0x23cad8ce
  41d455:	iret   
  41d456:	enter  0x4e23,0xd7
  41d45a:	enter  0x4623,0x33
  41d45e:	sbb    esi,0x62
  41d461:	xor    BYTE PTR [eax],al
  41d463:	cmc    
  41d464:	mov    ds:0xa200002f,eax
  41d469:	dec    edx
  41d46a:	test   dl,dl
  41d46c:	bound  esi,QWORD PTR [eax]
  41d46e:	add    BYTE PTR [eax+edx*4-0x5c0af39d],al
  41d475:	das    
  41d476:	add    BYTE PTR [eax],al
  41d478:	and    cl,BYTE PTR [ebx-0x7c]
  41d47b:	ret    0x3062
  41d47e:	add    BYTE PTR [ecx+0x25b0b3],cl
  41d484:	bound  esi,QWORD PTR [eax]
  41d486:	xor    BYTE PTR [esi+eiz*2-0x27],0xe2
  41d48b:	enter  0xed41,0x6e
  41d48f:	enter  0xe541,0x21
  41d493:	cwde   
  41d494:	sbb    DWORD PTR [ecx-0x6eda4aab],edx
  41d49a:	cmp    eax,0xe630e2d5
  41d49f:	xchg   edi,eax
  41d4a0:	popf   
  41d4a1:	pop    esp
  41d4a2:	ret    0xce0c
  41d4a5:	clc    
  41d4a6:	data16 sub al,0x72
  41d4a9:	shr    BYTE PTR [edi+ecx*4+0x62],1
  41d4ad:	fldl2t 
  41d4af:	adc    ah,BYTE PTR fs:[ebx+0x42d]
	...
  41d4c6:	add    BYTE PTR [eax],al
  41d4c8:	jnp    0x41d461
  41d4ca:	loope  0x41d4da
  41d4cc:	loope  0x41d528
  41d4ce:	jmp    0xe60f:0x98566203
  41d4d5:	jae    0x41d4c1
  41d4d7:	add    esp,DWORD PTR [edx-0x75]
  41d4da:	jmp    0xf7378b6a
  41d4df:	sub    dl,BYTE PTR [ecx-0x1f2454ac]
  41d4e5:	adc    bl,ch
  41d4e7:	add    eax,0x4b5f2ceb
  41d4ec:	sti    
  41d4ed:	add    ch,BYTE PTR [edi-0xb]
  41d4f0:	ficom  DWORD PTR [edx+0x54902ae5]
  41d4f6:	fwait
  41d4f7:	jmp    0x41d4e3
  41d4f9:	nop
  41d4fa:	std    
  41d4fb:	sub    bh,BYTE PTR [eax+0x54]
  41d4fe:	mov    ebx,0xf590daf3
  41d503:	sub    al,BYTE PTR [eax-0x4af86ca4]
  41d509:	vmovhpd xmm5,xmm3,xmm5
  41d50d:	(bad)  
  41d50f:	add    esp,DWORD PTR [edx-0x3a]
  41d512:	jmp    0x41d496
  41d514:	pop    ds
  41d515:	aad    0x0
  41d517:	jmp    0xf966:0x28f407fa
  41d51e:	add    cl,ch
  41d520:	in     eax,dx
  41d521:	out    dx,eax
  41d522:	xchg   DWORD PTR [esi],esi
  41d524:	outs   dx,BYTE PTR ds:[esi]
  41d525:	push   edx
  41d526:	dec    esp
  41d527:	in     eax,0xe0
  41d529:	inc    esp
  41d52a:	or     eax,0x55
	...
  41d53f:	add    BYTE PTR [ebx+0x5a],ah
  41d542:	(bad)  
  41d543:	(bad)  
  41d545:	fisttp WORD PTR [ebp+0x43087a24]
  41d54b:	fsqrt  
  41d54d:	out    0x4f,al
  41d54f:	sbb    dl,BYTE PTR [ecx]
  41d551:	(bad)  
  41d552:	lea    esi,[edi]
  41d554:	jb     0x41d587
  41d556:	ffreep st(1)
  41d558:	pop    esp
  41d559:	xchg   BYTE PTR ds:[ecx+0x27f3d6d9],ch
  41d560:	pop    edx
  41d561:	fld    DWORD PTR [eax]
  41d563:	jmp    0x73c40749
  41d568:	aad    0xfb
  41d56a:	punpckldq mm4,DWORD PTR ds:0x5fc224fc
  41d571:	fidiv  DWORD PTR [edx]
  41d573:	jo     0x41d58a
  41d575:	cld    
  41d576:	and    al,0x6a
  41d578:	pop    esi
  41d579:	int    0xb
  41d57b:	push   0x3c
  41d57d:	aas    
  41d57e:	cld    
  41d57f:	dec    esi
  41d580:	in     eax,0x2a
  41d582:	jbe    0x41d573
  41d584:	push   es
  41d585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d586:	and    al,0xd5
  41d588:	cli    
  41d589:	fsubr  DWORD PTR [edi]
  41d58b:	adc    ah,BYTE PTR [eax+0xf8ec051]
  41d591:	mov    ds:0x1a06c057,eax
  41d596:	or     eax,0xe87f93e9
  41d59b:	sbb    dh,al
  41d59d:	stos   BYTE PTR es:[edi],al
  41d59e:	xchg   DWORD PTR [ebp-0x3b],edi
  41d5a1:	rcl    DWORD PTR [edx+0x0],cl
	...
  41d5b8:	xor    BYTE PTR [ecx-0x22efa8f0],al
  41d5be:	jg     0x41d592
  41d5c0:	jl     0x41d619
  41d5c2:	pop    es
  41d5c3:	add    DWORD PTR [ebx-0x25],edi
  41d5c6:	repnz inc edi
  41d5c8:	dec    ebx
  41d5c9:	fisttp DWORD PTR ds:0xda8b85
  41d5cf:	add    BYTE PTR [eax+0x2],bl
  41d5d2:	inc    edx
  41d5d3:	cmp    DWORD PTR [edi*1-0x2b587af3],edi
  41d5da:	add    BYTE PTR [eax],al
  41d5dc:	enter  0x185c,0x0
  41d5e0:	cmp    al,0x57
  41d5e2:	out    0x0,eax
  41d5e4:	cmp    ebx,ebx
  41d5e6:	jnp    0x41d667
  41d5e8:	pop    edi
  41d5e9:	aad    0x0
  41d5eb:	adc    BYTE PTR [ebx-0x32],cl
  41d5ee:	test   ebp,ebx
  41d5f0:	dec    ebx
  41d5f1:	fild   DWORD PTR [eax]
  41d5f3:	call   0x3e1c91
  41d5f8:	mov    dh,0x95
  41d5fa:	or     eax,0xd5fb85
  41d5ff:	add    BYTE PTR [edx],ch
  41d601:	sbb    DWORD PTR [eax],ecx
  41d603:	mov    ebp,DWORD PTR [esi+0x41]
  41d606:	in     al,0xe4
  41d608:	add    eax,0x9b8b00db
  41d60d:	push   esi
  41d60e:	repz ja 0xfb41d6c2
  41d615:	push   ecx
  41d616:	dec    eax
  41d617:	adc    al,0x93
  41d619:	or     edx,DWORD PTR [ebx]
	...
  41d62f:	add    bl,cl
  41d631:	push   ecx
  41d632:	fld    DWORD PTR [ebp-0x6c7b3390]
  41d638:	mov    ebx,0xbb6a00da
  41d63d:	fnsave [ebp+0xc]
  41d640:	xor    BYTE PTR [edi+0x386277fd],cl
  41d646:	sub    cl,bl
  41d648:	xor    al,0xcf
  41d64a:	sbb    eax,0x4acb9289
  41d64f:	call   0x41fb5d
  41d654:	fdivrp st(0),st
  41d656:	cwde   
  41d657:	bound  edx,QWORD PTR [ecx-0x7]
  41d65a:	xlat   BYTE PTR ds:[ebx]
  41d65b:	dec    esp
  41d65c:	push   ss
  41d65d:	popf   
  41d65e:	jmp    0x1e4328cc
  41d663:	xor    edi,edx
  41d665:	xchg   ebp,eax
  41d666:	enter  0x6cff,0x45
  41d66a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d66b:	adc    DWORD PTR [edx],esp
  41d66d:	xor    BYTE PTR [ebx-0x2ed02940],al
  41d673:	(bad)  
  41d674:	jmp    0xc7b9:0x66488737
  41d67b:	pop    es
  41d67c:	fild   DWORD PTR [edi]
  41d67e:	adc    ecx,ebp
  41d680:	pusha  
  41d681:	and    eax,DWORD PTR [eax-0x79]
  41d684:	popf   
  41d685:	hlt    
  41d686:	add    eax,0xffffffb6
  41d689:	or     eax,DWORD PTR [ebp+0x10cb6239]
  41d68f:	je     0x41d6df
  41d691:	imul   eax,DWORD PTR [ebx],0x3c
	...
  41d6a8:	pop    ecx
  41d6a9:	cmp    al,0x5
  41d6ab:	inc    esi
  41d6ac:	fdiv   DWORD PTR ds:0x9d8fc084
  41d6b2:	fdiv   st,st(0)
  41d6b4:	je     0x41d6e4
  41d6b6:	mov    DWORD PTR [ebp-0x5a],ecx
  41d6b9:	mov    ebx,0x80212945
  41d6be:	mov    cl,0xe7
  41d6c0:	rcr    DWORD PTR ds:0x3de20000,cl
  41d6c6:	add    BYTE PTR [edx+ebp*2+0x6e],dh
  41d6ca:	mov    esi,ebx
  41d6cc:	loop   0x41d6fb
  41d6ce:	add    BYTE PTR [ebx-0x57],dh
  41d6d1:	fsubr  DWORD PTR [esi-0x32]
  41d6d4:	push   ecx
  41d6d5:	xor    ebx,ebx
  41d6d7:	cmc    
  41d6d8:	mov    ch,0x3d
  41d6da:	pop    edi
  41d6db:	adc    esp,ecx
  41d6dd:	inc    esi
  41d6de:	fild   DWORD PTR [esi+0x1c033e0b]
  41d6e4:	push   ebx
  41d6e5:	and    ah,BYTE PTR [edi+0x6c8d1f88]
  41d6eb:	inc    ebx
  41d6ec:	push   ss
  41d6ed:	xlat   BYTE PTR ds:[ebx]
  41d6ee:	data16 fwait
  41d6f0:	popa   
  41d6f1:	fldenv [edx+0x6]
  41d6f4:	xor    esp,DWORD PTR [edx]
  41d6f6:	jo     0x41d73f
  41d6f8:	mov    ebx,edx
  41d6fa:	pop    ss
  41d6fb:	inc    esp
  41d6fc:	setg   BYTE PTR [edi+edi*4]
  41d700:	mov    ds:0xeab0e9d4,eax
  41d705:	sub    eax,0xa3862867
  41d70a:	sbb    cl,BYTE PTR [edi+0x0]
	...
  41d720:	cmp    eax,0x45efd032
  41d725:	cmp    eax,0x556f446e
  41d72a:	test   BYTE PTR [edx+eiz*2],0xd9
  41d72e:	inc    DWORD PTR ds:0x2c998ed9
  41d734:	fs mov ebp,eax
  41d737:	add    ebp,ebx
  41d739:	mov    ds:0x25a188ed,eax
  41d73e:	sbb    dh,BYTE PTR [ebp+0x2be18bda]
  41d744:	(bad)  
  41d745:	scas   al,BYTE PTR es:[edi]
  41d746:	call   0xeb5bb84e
  41d74b:	or     BYTE PTR [eax],0xda
  41d74e:	jmp    0x35d8cb56
  41d753:	push   es
  41d754:	push   edi
  41d755:	push   ebp
  41d756:	dec    edx
  41d757:	add    al,0x62
  41d759:	fldl2e 
  41d75b:	push   edx
  41d75c:	and    DWORD PTR [ebx],ebx
  41d75e:	add    DWORD PTR [ecx+0xd468658],ebx
  41d764:	pop    ebp
  41d765:	xchg   ebx,eax
  41d766:	or     BYTE PTR [ebx+ebp*4+0x2c],dh
  41d76a:	push   ecx
  41d76b:	adc    DWORD PTR [ebx],esi
  41d76d:	mov    eax,DWORD PTR [ecx]
  41d76f:	jmp    0xa9cb4c7c
  41d774:	popa   
  41d775:	scas   eax,DWORD PTR es:[edi]
  41d776:	add    DWORD PTR [esi+0x11f090ea],ebx
  41d77c:	jecxz  0x41d709
  41d77e:	add    ecx,ebp
  41d780:	fmul   QWORD PTR [ebx+0x120]
	...
  41d796:	add    BYTE PTR [eax],al
  41d798:	add    cl,al
  41d79a:	sti    
  41d79b:	out    0x64,al
  41d79d:	sbb    DWORD PTR [ecx-0x22],edx
  41d7a0:	rcr    esp,cl
  41d7a2:	lea    esp,[esi+edx*2]
  41d7a5:	xor    DWORD PTR [edi+ebx*1+0x5f],ebp
  41d7a9:	fldenv [esi-0x18]
  41d7ac:	adc    BYTE PTR [edi+0x4e],cl
  41d7af:	mov    ecx,0xe84ab589
  41d7b4:	popa   
  41d7b5:	push   edx
  41d7b6:	dec    ebx
  41d7b7:	add    eax,0xa6765a76
  41d7bc:	pop    eax
  41d7bd:	fcmovb st,st(0)
  41d7bf:	cmp    DWORD PTR [ecx-0x3d],ebx
  41d7c2:	and    al,0x64
  41d7c4:	sbb    ch,BYTE PTR [ecx+ebp*8]
  41d7c7:	pop    ds
  41d7c8:	sbb    BYTE PTR [ebx],bh
  41d7ca:	cld    
  41d7cb:	sbb    bl,ch
  41d7cd:	xchg   edi,eax
  41d7ce:	cld    
  41d7cf:	sbb    ebx,ebp
  41d7d1:	(bad)  
  41d7d2:	lock or DWORD PTR [ebx-0x75],0x8fdae901
  41d7da:	lock push ecx
  41d7dc:	push   0xe4e9018b
  41d7e1:	(bad)  
  41d7e2:	or     BYTE PTR [edx-0xd],ah
  41d7e5:	push   esi
  41d7e6:	iret   
  41d7e7:	aad    0xed
  41d7e9:	or     cl,al
  41d7eb:	add    BYTE PTR [edx+0x13],ah
  41d7ee:	add    al,0x76
  41d7f0:	or     cl,BYTE PTR [ebx+0x47]
  41d7f3:	add    al,0x40
  41d7f5:	popa   
  41d7f6:	clc    
  41d7f7:	cmp    edx,edx
  41d7f9:	dec    ebx
  41d7fa:	push   edi
  41d7fb:	inc    eax
	...
  41d810:	dec    eax
  41d811:	xchg   ebp,eax
  41d812:	add    al,0x3b
  41d814:	or     eax,edx
  41d816:	outs   dx,BYTE PTR ds:[esi]
  41d817:	repz pusha 
  41d819:	xor    al,0x6a
  41d81b:	or     al,0xe1
  41d81d:	xlat   BYTE PTR ds:[ebx]
  41d81e:	std    
  41d81f:	xor    eax,0x4071e3
  41d824:	xchg   esp,eax
  41d825:	sub    esp,DWORD PTR [eax+0x12]
  41d828:	mov    ebx,0xfc07fd7
  41d82d:	dec    eax
  41d82e:	and    DWORD PTR [eax-0x71],0x736081d7
  41d835:	xlat   BYTE PTR ds:[ebx]
  41d836:	lds    eax,FWORD PTR [eax]
  41d838:	iret   
  41d839:	dec    edx
  41d83a:	inc    ecx
  41d83b:	add    BYTE PTR [eax-0x2d3fce2e],ah
  41d841:	xlat   BYTE PTR ds:[ebx]
  41d842:	jg     0x41d804
  41d844:	(bad)  
  41d845:	cmp    ecx,DWORD PTR [ecx-0x79539f2]
  41d84b:	mov    edi,DWORD PTR [edx]
  41d84d:	test   ebp,edi
  41d84f:	push   eax
  41d850:	aaa    
  41d851:	dec    esi
  41d852:	or     eax,DWORD PTR [ebx+0x760dcd82]
  41d858:	cmp    al,0x4e
  41d85a:	or     al,0x6a
  41d85c:	cmp    esp,edx
  41d85e:	dec    esi
  41d85f:	add    al,0x5b
  41d861:	(bad)  
  41d862:	jmp    0xec545e71
  41d867:	call   0x3ceb1f
  41d86c:	leave  
  41d86d:	xchg   esi,eax
  41d86e:	pop    ebp
  41d86f:	pop    esi
  41d870:	xor    dl,BYTE PTR [ebx+0x4]
	...
  41d886:	add    BYTE PTR [eax],al
  41d888:	mov    dh,cl
  41d88a:	adc    al,0x1
  41d88c:	bound  esi,QWORD PTR [eax]
  41d88e:	add    BYTE PTR [ecx-0x71],dl
  41d891:	xor    BYTE PTR [ecx+0x3d3fd388],0x89
  41d898:	sub    al,0x48
  41d89a:	mov    ch,0xfc
  41d89c:	push   esp
  41d89d:	xor    al,0x53
  41d89f:	out    0xc7,eax
  41d8a1:	xor    BYTE PTR [eax],al
  41d8a3:	mov    DWORD PTR [edi+0x16871dc7],ebp
  41d8a9:	adc    al,0xf4
  41d8ab:	out    0x12,eax
  41d8ad:	sub    edi,edi
  41d8af:	(bad)  
  41d8b0:	(bad)  [esp+ebx*8+0x17]
  41d8b4:	pop    ebx
  41d8b5:	jb     0x41d8a3
  41d8b7:	jge    0x41d92b
  41d8b9:	(bad)  
  41d8ba:	scas   al,BYTE PTR es:[edi]
  41d8bb:	rdtsc  
  41d8bd:	inc    ebx
  41d8be:	xchg   edx,eax
  41d8bf:	adc    ebx,ecx
  41d8c1:	(bad)  [edi+esi*1]
  41d8c4:	xor    DWORD PTR gs:[eax],eax
  41d8c7:	jmp    0x8986a02c
  41d8cc:	jns    0x41d887
  41d8ce:	mov    ebx,0xa3b95223
  41d8d3:	and    edi,DWORD PTR [esi-0x27]
  41d8d6:	mov    eax,0x7c2b7a23
  41d8db:	pusha  
  41d8dc:	arpl   WORD PTR [eax],si
  41d8de:	add    BYTE PTR [ebx+0x37080522],al
  41d8e4:	pushf  
  41d8e5:	cmp    al,0x9
  41d8e7:	lea    edx,[ecx+0x31]
	...
  41d8fd:	add    BYTE PTR [eax],al
  41d8ff:	add    bh,bl
  41d901:	repz loopne 0x41d917
  41d904:	cmp    bh,ch
  41d906:	aam    0xff
  41d908:	sbb    eax,0xdf37b1c7
  41d90d:	pop    ebp
  41d90e:	mov    WORD PTR [ebx+ecx*2-0x1a],fs
  41d912:	add    BYTE PTR [eax+eax*4-0x51],dh
  41d916:	cdq    
  41d917:	pop    ss
  41d918:	arpl   cx,bx
  41d91a:	fmul   st(3),st
  41d91c:	call   0x9e25deb5
  41d921:	cmp    bl,al
  41d923:	(bad)  
  41d924:	(bad)  
  41d926:	nop
  41d927:	sub    bl,cl
  41d929:	fsubr  st,st(1)
  41d92b:	sub    eax,ecx
  41d92d:	shr    al,cl
  41d92f:	add    ebx,ebx
  41d931:	inc    eax
  41d932:	ins    DWORD PTR es:[edi],dx
  41d933:	sbb    BYTE PTR [edi+0x55],dl
  41d936:	rol    BYTE PTR [edx],1
  41d938:	(bad)  
  41d939:	fldcw  WORD PTR [esi+0x44]
  41d93c:	ins    DWORD PTR es:[edi],dx
  41d93d:	xchg   ebp,eax
  41d93e:	(bad)
  41d941:	test   eax,0x925650e2
  41d946:	data16 sbb al,BYTE PTR [ebp+eax*8-0x10]
  41d94b:	test   BYTE PTR [ebp-0x7f38b13],cl
  41d951:	clc    
  41d952:	inc    BYTE PTR [eax+edi*8]
  41d955:	into   
  41d956:	nop
  41d957:	mov    eax,ds:0xc42acce4
  41d95c:	cmp    dl,BYTE PTR [ebp+0x38e9e405]
  41d962:	mov    edi,0xe6
	...
  41d977:	add    bl,bh
  41d979:	xchg   edi,eax
  41d97a:	pop    esp
  41d97b:	mov    al,0x81
  41d97d:	add    DWORD PTR [ecx],esp
  41d97f:	sub    al,0xa5
  41d981:	adc    al,0xe9
  41d983:	add    edi,DWORD PTR [eax-0x7e379b1e]
  41d989:	add    DWORD PTR [edi+0x7499cbf2],edi
  41d98f:	mov    al,0x81
  41d991:	add    DWORD PTR [ecx+0x2c],eax
  41d994:	imul   edx,DWORD PTR [ecx+ebp*8],0x5ce0b803
  41d99b:	enter  0x141,0x20
  41d99f:	sub    al,0x12
  41d9a1:	and    eax,0x31db03e9
  41d9a6:	add    DWORD PTR [ebp+ebp*2-0x1a],ebp
  41d9aa:	test   BYTE PTR [ebx],dh
  41d9ac:	data16 fld DWORD PTR [eax]
  41d9af:	jb     0x41d94d
  41d9b1:	inc    ecx
  41d9b2:	lock clc 
  41d9b4:	popa   
  41d9b5:	fld    DWORD PTR [ecx+ebp*1-0x5599112e]
  41d9bc:	jmp    0xd9:0x5e85254d
  41d9c3:	mov    al,ds:0xe8d7e479
  41d9c8:	popa   
  41d9c9:	ss jae 0x41d9d1
  41d9cc:	jmp    0x41da2b
  41d9ce:	and    eax,0xd95e65
  41d9d3:	push   ds
  41d9d4:	(bad)  
  41d9d6:	push   eax
  41d9d7:	mov    fs:0xba28fc,al
	...
  41d9ed:	add    BYTE PTR [eax],al
  41d9ef:	add    cl,dl
  41d9f1:	inc    eax
  41d9f2:	or     eax,0x88366c7f
  41d9f7:	lea    ebp,[ebp-0x1edfcff8]
  41d9fd:	sbb    eax,0xe6266415
  41da02:	inc    ebp
  41da03:	ror    bl,1
  41da05:	cmc    
  41da06:	lea    esi,ds:0xc1598c82
  41da0c:	sub    edx,DWORD PTR [ebx]
  41da0e:	add    ch,cl
  41da10:	or     ebx,DWORD PTR [edx-0xbbde273]
  41da16:	pop    ecx
  41da17:	shl    DWORD PTR [edi-0x2416fded],1
  41da1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da1e:	push   eax
  41da1f:	(bad)  
  41da20:	in     eax,dx
  41da21:	sti    
  41da22:	adc    al,0x3e
  41da24:	cwde   
  41da25:	or     DWORD PTR [ecx-0x409d99d7],0x45e67a6c
  41da2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da30:	shl    DWORD PTR [eax-0x41],1
  41da33:	add    BYTE PTR [eax-0x79e7df78],dl
  41da39:	out    0xd,al
  41da3b:	inc    ebp
  41da3c:	mov    ch,0x6b
  41da3e:	jg     0x41da12
  41da40:	xor    edi,DWORD PTR [eax+ecx*4+0x3fdf0b40]
  41da47:	ret    0xe5ab
  41da4a:	mov    ebx,0x88c3d102
  41da4f:	inc    eax
  41da50:	retf   
  41da51:	pusha  
  41da52:	inc    ebp
  41da53:	and    al,0x0
	...
  41da65:	add    BYTE PTR [eax],al
  41da67:	add    BYTE PTR [ebx],dl
  41da69:	fild   WORD PTR [edx+eax*8-0x15]
  41da6d:	bound  eax,QWORD PTR [ebp+0x24]
  41da70:	pop    edi
  41da71:	ins    DWORD PTR es:[edi],dx
  41da72:	xchg   DWORD PTR [edi+eiz*2-0x7b],edx
  41da76:	push   edx
  41da77:	push   ebx
  41da78:	sti    
  41da79:	cmp    esp,0xfb9d5557
  41da7f:	push   cs
  41da80:	es pushf 
  41da82:	add    eax,0xcbe46b80
  41da88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da89:	fild   DWORD PTR [eax]
  41da8b:	add    DWORD PTR [edi+0x44],0xffffff8a
  41da8f:	fsub   DWORD PTR [eax+0x38]
  41da92:	mov    DWORD PTR [edi+eiz*4+0x47],esi
  41da96:	mov    ebp,ecx
  41da98:	xchg   ebx,eax
  41da99:	jae    0x41da51
  41da9b:	add    BYTE PTR [ebx+0x60],bh
  41da9e:	dec    ebp
  41da9f:	and    al,0x6b
  41daa1:	add    edx,DWORD PTR [ecx-0x4a]
  41daa4:	dec    ebx
  41daa5:	fisttp DWORD PTR [ecx-0x1bca98b4]
  41daab:	inc    edi
  41daac:	aad    0xdd
  41daae:	add    BYTE PTR [ebx-0x49befa03],cl
  41dab4:	dec    ebx
  41dab5:	fisttp DWORD PTR [ecx-0x49ed2c31]
  41dabb:	add    BYTE PTR [ebx],bh
  41dabd:	outs   dx,BYTE PTR ds:[esi]
  41dabe:	pop    esi
  41dabf:	pop    ebp
  41dac0:	bound  edi,QWORD PTR [edx+0x7ce35941]
  41dac6:	icebp  
  41dac7:	(bad)  
  41dac8:	adc    eax,0x814141
	...
  41dadd:	add    BYTE PTR [eax],al
  41dadf:	add    dh,bh
  41dae1:	inc    esp
  41dae2:	stos   DWORD PTR es:[edi],eax
  41dae3:	mov    bl,bh
  41dae5:	(bad)  
  41dae6:	mov    DWORD PTR [ebx+0x3a],esi
  41dae9:	mov    ebp,0x96de0d0a
  41daee:	add    al,0x0
  41daf0:	bound  ebp,QWORD PTR [ebx-0x620fc3e]
  41daf6:	add    eax,0x40c984
  41dafb:	add    cl,ch
  41dafd:	test   esp,eax
  41daff:	and    BYTE PTR [edx+0x62e07c47],0x40
  41db06:	add    BYTE PTR [ecx+0xd003c3a],al
  41db0c:	in     al,0xf6
  41db0e:	add    al,0x0
  41db10:	bound  ebp,QWORD PTR [ebx-0xd8faf36]
  41db16:	sbb    DWORD PTR [ebx+edx*2],0xffffffb8
  41db1a:	mov    al,0x23
  41db1c:	sbb    edx,DWORD PTR gs:[ecx]
  41db1f:	or     eax,0x4f5e1
  41db24:	bound  edx,QWORD PTR [edi-0x77]
  41db27:	(bad)  
  41db28:	xor    DWORD PTR [edi-0x79],eax
  41db2b:	inc    esp
  41db2c:	ds xor al,0xd9
  41db2f:	lock icebp 
  41db31:	fld    DWORD PTR [esi-0x21f61df2]
  41db37:	jae    0x41dba6
  41db39:	rcl    BYTE PTR [esi],0x3b
  41db3c:	iret   
  41db3d:	inc    ebp
  41db3e:	jnp    0x41db3d
  41db40:	pop    ebp
  41db41:	cld    
  41db42:	adc    al,BYTE PTR [esi+0x0]
	...
  41db55:	add    BYTE PTR [eax],al
  41db57:	add    BYTE PTR [ecx-0x18166d8d],cl
  41db5d:	xchg   BYTE PTR [ebx-0x5c2716ff],cl
  41db63:	fdiv   DWORD PTR [edx]
  41db65:	stos   BYTE PTR es:[edi],al
  41db66:	call   0x1e735628
  41db6b:	xchg   esi,eax
  41db6c:	jmp    0xe9e5:0x82811d9b
  41db73:	sub    BYTE PTR [ecx-0x28d44d9e],al
  41db79:	stos   BYTE PTR es:[edi],al
  41db7a:	jb     0x41db90
  41db7c:	cmp    ebx,DWORD PTR [esi]
  41db7e:	cmc    
  41db7f:	mov    ecx,0xdfde368e
  41db84:	push   ebp
  41db85:	ss (bad) 
  41db87:	fild   WORD PTR [ebp+0x36]
  41db8a:	std    
  41db8b:	scas   eax,DWORD PTR es:[edi]
  41db8c:	ja     0x41db27
  41db8e:	jmp    0x6d267a13
  41db93:	inc    ebx
  41db94:	push   ecx
  41db95:	popf   
  41db96:	outs   dx,BYTE PTR ds:[esi]
  41db97:	mov    DWORD PTR [ecx-0x74eaa133],0x3110ef30
  41dba1:	leave  
  41dba2:	outs   dx,BYTE PTR ds:[esi]
  41dba3:	mov    esi,0x8df1f275
  41dba8:	dec    eax
  41dba9:	pop    ecx
  41dbaa:	xchg   ecx,eax
  41dbab:	adc    al,0x44
  41dbad:	lods   al,BYTE PTR ds:[esi]
  41dbae:	repnz mov esp,0x406ecc8a
  41dbb4:	cmp    ebx,DWORD PTR [edi]
  41dbb6:	call   0xb3:0xdd3614ad
	...
  41dbcd:	add    BYTE PTR [eax],al
  41dbcf:	add    BYTE PTR [edi-0x67],dl
  41dbd2:	jmp    0xf267a57
  41dbd7:	sbb    edi,DWORD PTR [ebx]
  41dbd9:	push   ss
  41dbda:	outs   dx,DWORD PTR ds:[esi]
  41dbdb:	shr    DWORD PTR ds:0x61c55e88,0x0
  41dbe2:	mov    ds:0xd9e1fb4,eax
  41dbe7:	out    dx,eax
  41dbe8:	dec    esp
  41dbe9:	cmp    eax,0x35449fcf
  41dbee:	add    DWORD PTR [edx+0x23],esp
  41dbf1:	mov    eax,ds:0x352fe6e8
  41dbf6:	cld    
  41dbf7:	jo     0x41dc13
  41dbf9:	stc    
  41dbfa:	sbb    BYTE PTR [esi+ebx*4-0x58],ah
  41dbfe:	xchg   edx,edx
  41dc00:	je     0x41dbe8
  41dc02:	jle    0x41dc24
  41dc04:	jno    0x41dc3c
  41dc06:	cld    
  41dc07:	jae    0x41dbd3
  41dc09:	clc    
  41dc0a:	nop    DWORD PTR [edi+edx*1-0x189b7da8]
  41dc12:	ror    BYTE PTR [edi],0xb3
  41dc15:	pop    ecx
  41dc16:	(bad)
  41dc19:	pop    edx
  41dc1a:	in     eax,dx
  41dc1b:	int    0xac
  41dc1d:	xchg   DWORD PTR [edx-0x42],edx
  41dc20:	stc    
  41dc21:	popf   
  41dc22:	add    ecx,ebp
  41dc24:	popa   
  41dc25:	mov    edi,0xacab4600
  41dc2a:	push   0xffffffa5
  41dc2c:	popa   
  41dc2d:	(bad)  
  41dc2f:	bound  ebx,QWORD PTR [esp+ebx*2+0x75]
  41dc33:	add    eax,0x0
	...
  41dc48:	xchg   esi,eax
  41dc49:	xor    eax,0xf4b78d16
  41dc4e:	add    BYTE PTR [edx+0x76],dh
  41dc51:	pop    eax
  41dc52:	fcomp  DWORD PTR [eax+ebp*2-0x53ff3f19]
  41dc59:	xor    edi,esp
  41dc5b:	jmp    0x1ac9af4f
  41dc60:	mov    bh,0x59
  41dc62:	int3   
  41dc63:	imul   BYTE PTR [ebx]
  41dc65:	popf   
  41dc66:	and    al,0xd6
  41dc68:	popa   
  41dc69:	inc    ecx
  41dc6a:	popf   
  41dc6b:	shl    DWORD PTR [esi-0x27],0x87
  41dc6f:	xor    al,0x5e
  41dc71:	bound  ecx,QWORD PTR [ebx]
  41dc73:	inc    ebx
  41dc74:	pop    ebx
  41dc75:	mov    eax,ebp
  41dc77:	cmp    BYTE PTR [edx-0x2fffff27],0xe8
  41dc7e:	adc    DWORD PTR [edi+ebx*2+0x45],0x7f
  41dc83:	rol    BYTE PTR [esp+ebx*2-0x9],cl
  41dc87:	add    BYTE PTR [ebx-0x28],cl
  41dc8a:	ret    0x1f44
  41dc8d:	das    
  41dc8e:	sti    
  41dc8f:	add    ah,0xc6
  41dc92:	outs   dx,DWORD PTR ds:[esi]
  41dc93:	dec    esi
  41dc94:	popa   
  41dc95:	and    al,BYTE PTR [edi+0x53241f54]
  41dc9b:	call   0x3de210
  41dca0:	jbe    0x41dd16
  41dca2:	and    BYTE PTR [ebx+eiz*8],ch
  41dca5:	imul   DWORD PTR [edi]
  41dca7:	add    DWORD PTR [ebx],ecx
  41dca9:	pop    esp
  41dcaa:	shl    DWORD PTR [eax+eax*1+0x0],0x0
	...
  41dcbf:	add    BYTE PTR [eax+ebx*8-0x4b],dl
  41dcc3:	inc    esp
  41dcc4:	pop    edi
  41dcc5:	or     eax,0x3c0f8d4c
  41dcca:	cmp    BYTE PTR [eax+0x36],dl
  41dccd:	sbb    al,0x20
  41dccf:	sub    al,0xeb
  41dcd1:	pop    eax
  41dcd2:	inc    ebp
  41dcd3:	and    al,0xef
  41dcd5:	push   ebp
  41dcd6:	sub    al,0x50
  41dcd8:	and    esi,DWORD PTR [ecx]
  41dcda:	jb     0x41dcdb
  41dcdc:	test   BYTE PTR [ebx-0x3b],bl
  41dcdf:	adc    al,0x3e
  41dce1:	cwde   
  41dce2:	outs   dx,DWORD PTR ds:[esi]
  41dce3:	or     al,0x30
  41dce5:	and    BYTE PTR fs:[esi+eax*1],ah
  41dce9:	sbb    al,0x20
  41dceb:	dec    eax
  41dcec:	mov    al,ds:0xc802e9df
  41dcf1:	(bad)  
  41dcf2:	mov    DWORD PTR [edi+ebx*4+0x3f],edx
  41dcf6:	mov    DWORD PTR [ebp-0x75],esi
  41dcf9:	pop    edx
  41dcfa:	ret    
  41dcfb:	jmp    0x41dc85
  41dcfd:	into   
  41dcfe:	cmp    DWORD PTR [edi+ebx*2+0x3d],0x39
  41dd03:	jne    0x41dd80
  41dd05:	push   ecx
  41dd06:	mov    esp,DWORD PTR ss:[edx+0x4]
  41dd0a:	jmp    0x7eacc62a
  41dd0f:	or     bl,bl
  41dd11:	in     al,dx
  41dd12:	call   0x1daab63e
  41dd17:	shl    ecx,1
  41dd19:	inc    eax
  41dd1a:	add    BYTE PTR [edx+eiz*1-0x48770212],al
  41dd21:	inc    eax
  41dd22:	test   DWORD PTR [eax+eax*1+0x0],esp
	...
  41dd36:	add    BYTE PTR [eax],al
  41dd38:	jle    0x41dd5a
  41dd3a:	add    BYTE PTR [ecx+0x447d360c],al
  41dd40:	ds inc esp
  41dd42:	jge    0x41dd98
  41dd44:	inc    esi
  41dd45:	cmp    BYTE PTR [ebp+0x0],bh
  41dd48:	cmp    esp,edi
  41dd4a:	call   0x78923e76
  41dd4f:	push   esp
  41dd50:	or     BYTE PTR ds:[ebx+0x7dd276f6],al
  41dd57:	inc    esp
  41dd58:	ds xor al,0x7b
  41dd5b:	dec    edx
  41dd5c:	ja     0x41dd15
  41dd5e:	add    al,0x29
  41dd60:	mov    ds:0x1dffc33f,eax
  41dd65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd66:	enter  0x7e23,0x51
  41dd6a:	add    eax,0xf3eb12c2
  41dd6f:	outs   dx,DWORD PTR ds:[esi]
  41dd70:	dec    esp
  41dd71:	add    BYTE PTR [eax],0x81
  41dd74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd75:	sub    al,0x7b
  41dd77:	inc    esp
  41dd78:	jle    0x41dde2
  41dd7a:	adc    DWORD PTR [esi+eax*2+0x20],esi
  41dd7e:	mov    al,0xfc
  41dd80:	push   cs
  41dd81:	sbb    al,0xe0
  41dd83:	cld    
  41dd84:	ja     0x41ddd6
  41dd86:	cli    
  41dd87:	aas    
  41dd88:	bound  edi,QWORD PTR [edi-0x7b16f3b8]
  41dd8e:	in     al,0x1b
  41dd90:	or     BYTE PTR ds:0xd911087d,cl
  41dd96:	outs   dx,BYTE PTR ds:[esi]
  41dd97:	cmp    ebp,ebx
  41dd99:	lods   al,BYTE PTR ds:[esi]
  41dd9a:	jmp    0x41ddba
	...
  41ddaf:	add    BYTE PTR ds:0xeb03ea6d,cl
  41ddb5:	or     BYTE PTR [ecx-0x39],ah
  41ddb8:	adc    ecx,0x5c57356c
  41ddbe:	out    dx,eax
  41ddbf:	adc    BYTE PTR [edi],bh
  41ddc1:	xor    bl,BYTE PTR [edi+0x3c]
  41ddc4:	dec    edx
  41ddc5:	jb     0x41de3e
  41ddc7:	add    esp,DWORD PTR [edx+0x5f]
  41ddca:	cs call 0xaf7d701e
  41ddd0:	mov    edx,0x229fae56
  41ddd5:	push   esi
  41ddd6:	jle    0x41ddcf
  41ddd8:	mov    dl,0x5e
  41ddda:	es call 0x9fb06a1d
  41dde0:	inc    ecx
  41dde1:	add    DWORD PTR [edi*2+0x7d12d971],ebx
  41dde8:	sub    esp,DWORD PTR [edx-0x6be4890]
  41ddee:	jo     0x41ddaf
  41ddf0:	adc    ebp,0x9dbd11e6
  41ddf6:	call   0x49b3ffe
  41ddfb:	out    0x56,eax
  41ddfd:	pop    esp
  41ddfe:	test   eax,0x5fd96202
  41de03:	shl    DWORD PTR [ecx+esi*4+0x575ed330],0xdd
  41de0b:	add    ah,BYTE PTR [edx-0x27]
  41de0e:	imul   ecx,DWORD PTR [edx],0xdf6ae255
	...
  41de28:	xchg   esp,eax
  41de29:	xor    edx,ebp
  41de2b:	test   BYTE PTR [esi],al
  41de2d:	std    
  41de2e:	fld    QWORD PTR [ebx]
  41de30:	fstp   DWORD PTR [edx-0x2d98606]
  41de36:	add    cl,dl
  41de38:	test   BYTE PTR [eax],0x88
  41de3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de3c:	popa   
  41de3d:	inc    eax
  41de3e:	pop    es
  41de3f:	imul   ebx,DWORD PTR [eax+0x6cf075f6],0x1bfd2495
  41de49:	repnz mov esi,0x45277057
  41de4f:	or     eax,0xdd70304a
  41de54:	sbb    BYTE PTR [edi],dl
  41de56:	add    dl,ch
  41de58:	icebp  
  41de59:	xchg   BYTE PTR [edi+0x52d13a35],al
  41de5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de60:	sub    esp,DWORD PTR [ecx+0x5a662912]
  41de66:	vpcmpgtb ymm4,ymm3,ymm2
  41de6a:	dec    ebx
  41de6b:	sub    BYTE PTR [esi-0x27],0x0
  41de6f:	jmp    0xf4730755
  41de74:	gs jmp 0xc54d:0x591982c9
  41de7c:	adc    eax,0xf20d4d62
  41de81:	arpl   WORD PTR [ebp+0x5],dx
  41de84:	mov    edx,0xbb0d4516
  41de89:	xor    ah,ah
  41de8b:	and    al,0x0
	...
  41de9d:	add    BYTE PTR [eax],al
  41de9f:	add    BYTE PTR [edi-0x798d03d2],dl
  41dea5:	pop    edx
  41dea6:	cli    
  41dea7:	call   0xe9fd4368
  41deac:	popa   
  41dead:	fnstenv [edi]
  41deaf:	popf   
  41deb0:	(bad)  
  41deb3:	push   0xa
  41deb5:	fld    DWORD PTR [eax]
  41deb7:	jmp    0xc96663d4
  41debc:	sbb    ch,dl
  41debe:	(bad)  
  41debf:	(bad)  
  41dec1:	and    al,BYTE PTR ds:0x20191000
  41dec7:	sub    al,0x90
  41dec9:	aam    0x1
  41decb:	enter  0xf200,0xe8
  41decf:	xor    DWORD PTR [eax],ebp
  41ded1:	aad    0x0
  41ded3:	mov    eax,DWORD PTR [ebx+0x5374e861]
  41ded9:	popa   
  41deda:	dec    BYTE PTR [edi]
  41dedc:	(bad)  
  41dedd:	mov    ch,0x0
  41dedf:	add    BYTE PTR [ebx],bh
  41dee1:	mov    bl,0xcf
  41dee3:	mov    ecx,DWORD PTR [esp+edx*8]
  41dee6:	mov    DWORD PTR [edx],ebx
  41dee8:	dec    ebx
  41dee9:	fmul   QWORD PTR [ecx-0x7e0b3fd5]
  41deef:	vpminub ymm4,ymm0,ymm3
  41def3:	mov    DWORD PTR [edi+0x41],ebp
  41def6:	adc    BYTE PTR [ebx],bh
  41def8:	xor    BYTE PTR [esi+0x1f],al
  41defb:	mov    eax,DWORD PTR [edi+0x41]
  41defe:	sub    al,0x8b
  41df00:	(bad)  
  41df01:	mov    dl,0x8
  41df03:	mov    DWORD PTR [eax],eax
	...
  41df15:	add    BYTE PTR [eax],al
  41df17:	add    BYTE PTR [edi+0x41],cl
  41df1a:	adc    al,0x8b
  41df1c:	mov    bl,0xd3
  41df1e:	xor    DWORD PTR [edx-0x3f7b23f5],esi
  41df24:	test   DWORD PTR [edi-0x77],0x89055754
  41df2b:	add    dh,BYTE PTR [eax+0x21]
  41df2e:	and    BYTE PTR [eax],bl
  41df30:	enter  0xe9cb,0x4
  41df34:	inc    eax
  41df35:	push   0xf9363020
  41df3a:	je     0x41df66
  41df3c:	xor    dl,bl
  41df3e:	xchg   DWORD PTR [esi-0x37],ecx
  41df41:	adc    bh,BYTE PTR [ebx-0x769447fd]
  41df47:	inc    esp
  41df48:	xchg   edi,eax
  41df49:	inc    ebx
  41df4a:	dec    ebx
  41df4b:	add    eax,DWORD PTR [ebp+0x6c]
  41df4e:	std    
  41df4f:	adc    eax,0x3ff65262
  41df54:	(bad)  
  41df56:	inc    ebx
  41df57:	or     al,0x85
  41df59:	lods   eax,DWORD PTR ds:[esi]
  41df5a:	jecxz  0x41df6f
  41df5c:	adc    eax,0x12130b48
  41df61:	adc    al,al
  41df63:	jmp    eax
  41df65:	cmc    
  41df66:	sti    
  41df67:	mov    BYTE PTR [ebp+0x62b1a809],dl
  41df6d:	inc    eax
  41df6e:	jns    0x41dfb4
  41df70:	jle    0x41df9e
  41df72:	mov    eax,0xc8bc5200
  41df77:	and    edx,DWORD PTR [edx+0x88d9a9]
	...
  41df8d:	add    BYTE PTR [eax],al
  41df8f:	add    BYTE PTR [edx-0x1],bh
  41df92:	add    ebx,edi
  41df94:	jmp    0x357aa2b1
  41df99:	adc    BYTE PTR [edx+0xe7824ab],al
  41df9f:	mov    al,0x63
  41dfa1:	out    dx,eax
  41dfa2:	stos   BYTE PTR es:[edi],al
  41dfa3:	pop    edx
  41dfa4:	mov    ecx,0x201448c3
  41dfa9:	xor    DWORD PTR [eax],eax
  41dfab:	xor    ah,BYTE PTR [edx]
  41dfad:	dec    esp
  41dfae:	jns    0xb22628e1
  41dfb4:	bound  eax,QWORD PTR [eax+0x19]
  41dfb7:	icebp  
  41dfb8:	loope  0x41df66
  41dfba:	in     al,0x88
  41dfbc:	mov    ds,esp
  41dfbe:	fcom   DWORD PTR [eax+0x37]
  41dfc1:	data16 mov ch,0x88
  41dfc4:	push   esi
  41dfc5:	fadd   st(4),st
  41dfc7:	imul   esp,DWORD PTR [ecx+edi*4-0x40],0x3dab6a23
  41dfcf:	pop    ecx
  41dfd0:	leave  
  41dfd1:	push   cs
  41dfd2:	jns    0x41e003
  41dfd4:	jns    0x41dfc9
  41dfd6:	mov    ds,WORD PTR [ebx]
  41dfd8:	imul   esi,edx,0xd93c1795
  41dfde:	outs   dx,BYTE PTR ds:[esi]
  41dfdf:	ret    
  41dfe0:	popa   
  41dfe1:	mov    bh,0xc6
  41dfe3:	mov    DWORD PTR [ecx-0x13],0xf521c88b
  41dfea:	int    0x97
  41dfec:	jno    0x41dff0
  41dfee:	sbb    al,0x1
  41dff0:	lods   al,BYTE PTR ds:[esi]
  41dff1:	repnz push ss
  41dff3:	xchg   ecx,eax
	...
  41e008:	xchg   edi,eax
  41e009:	jmp    0x41e034
  41e00b:	lods   eax,DWORD PTR ds:[esi]
  41e00c:	jl     0xf9e060a0
  41e012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e013:	out    dx,eax
  41e014:	pop    ebp
  41e015:	jmp    0x41dfc0
  41e017:	js     0x41e05d
  41e019:	pop    esp
  41e01a:	cmp    eax,DWORD PTR [esi]
  41e01c:	jnp    0x41e060
  41e01e:	popa   
  41e01f:	mov    DWORD PTR [ecx-0x7e488f2f],0x819f70cd
  41e029:	cdq    
  41e02a:	cmp    eax,0xe417e2fa
  41e02f:	js     0x41e042
  41e031:	inc    ecx
  41e032:	not    BYTE PTR [ecx+0x62]
  41e035:	fldcw  WORD PTR [esi+0x2b]
  41e038:	jmp    0x41dfce
  41e03a:	int    0xf7
  41e03c:	in     al,0x8c
  41e03e:	(bad)
  41e041:	cwde   
  41e042:	sar    DWORD PTR [eax+0x3a],0x62
  41e046:	sub    cl,BYTE PTR [eax]
  41e048:	(bad)  [ebp+ecx*8-0x3a6b1b19]
  41e04f:	jecxz  0x41e031
  41e051:	adc    esi,ebx
  41e053:	imul   al
  41e055:	test   BYTE PTR ds:0xd9ce8c4,al
  41e05b:	enter  0xa9c5,0x4d
  41e05f:	or     al,0xc7
  41e061:	popa   
  41e062:	(bad)  
  41e063:	out    0x7d,eax
  41e065:	bound  ebx,QWORD PTR [esi+0x15421e7]
  41e06b:	inc    esp
	...
  41e080:	aad    0xe5
  41e082:	test   DWORD PTR [edx],edx
  41e084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e085:	pop    ecx
  41e086:	sub    eax,0x9587d961
  41e08c:	jge    0x41e077
  41e08e:	xchg   DWORD PTR [ebp-0x5a722e7b],esp
  41e094:	jge    0x41e083
  41e096:	push   eax
  41e097:	je     0x41e03e
  41e099:	stc    
  41e09a:	dec    eax
  41e09b:	cdq    
  41e09c:	scas   al,BYTE PTR es:[edi]
  41e09d:	sub    al,0x75
  41e09f:	int    0xa5
  41e0a1:	pusha  
  41e0a2:	rol    DWORD PTR [ecx],cl
  41e0a4:	or     esi,DWORD PTR [edx]
  41e0a6:	cld    
  41e0a7:	out    0xdd,al
  41e0a9:	lea    esp,[eiz*1+0x6d0c19e2]
  41e0b0:	adc    BYTE PTR [esp+edi*8],ch
  41e0b3:	jmp    0x29669e7c
  41e0b8:	pop    ebp
  41e0b9:	aad    0x87
  41e0bb:	xor    eax,0x6a62e942
  41e0c0:	(bad)  
  41e0c2:	cmp    al,0xe1
  41e0c4:	sub    BYTE PTR [eax-0x29],bl
  41e0c7:	jmp    0x25a8ba2d
  41e0cc:	fwait
  41e0cd:	test   DWORD PTR [eax*8-0x4a0ecb42],esp
  41e0d4:	pop    edi
  41e0d5:	fld    DWORD PTR [edi-0x722efdcb]
  41e0db:	adc    eax,0x90e8f502
  41e0e0:	sub    DWORD PTR [esi],ebp
  41e0e2:	cld    
  41e0e3:	bound  eax,QWORD PTR [eax]
	...
  41e0f5:	add    BYTE PTR [eax],al
  41e0f7:	add    BYTE PTR [esi-0x16],dl
  41e0fa:	shr    BYTE PTR [edx+0x69],0x24
  41e0fe:	or     al,0xa5
  41e100:	imul   edx,DWORD PTR [ebp+edi*2+0xd],0xdefc579a
  41e108:	dec    ecx
  41e109:	fadd   QWORD PTR [ecx]
  41e10b:	add    bl,cl
  41e10d:	fdivr  DWORD PTR [ecx]
  41e10f:	jl     0x41e170
  41e111:	sbb    eax,0xd5bc830d
  41e116:	add    BYTE PTR [eax],al
  41e118:	inc    eax
  41e119:	fsqrt  
  41e11b:	sub    ecx,edi
  41e11d:	loop   0x41e123
  41e11f:	add    edi,DWORD PTR [edi+0x3e031c0c]
  41e125:	scas   al,BYTE PTR es:[edi]
  41e126:	inc    esp
  41e127:	and    al,0xbf
  41e129:	dec    ecx
  41e12a:	push   cs
  41e12b:	mov    ecx,edi
  41e12d:	or     al,0x10
  41e12f:	mov    esi,DWORD PTR [ebx-0x23621be0]
  41e135:	aad    0x0
  41e137:	jmp    0x41e12b
  41e139:	stos   BYTE PTR es:[edi],al
  41e13a:	enter  0x8e8,0x88
  41e13e:	add    BYTE PTR [eax],al
  41e140:	shr    BYTE PTR [eax+eiz*1+0x38],cl
  41e144:	mov    esi,0x8840d98
  41e149:	fadd   DWORD PTR [eax]
  41e14b:	add    BYTE PTR [esp+ebx*1],ah
  41e14e:	dec    BYTE PTR [ebx+0x40166836]
  41e154:	cmp    ebx,edi
  41e156:	je     0x41e17c
  41e158:	arpl   WORD PTR [ebp-0x3],sp
  41e15b:	xlat   BYTE PTR ds:[ebx]
	...
  41e170:	nop
  41e171:	ins    BYTE PTR es:[edi],dx
  41e172:	and    BYTE PTR [eax-0x78],cl
  41e175:	in     al,dx
  41e176:	or     al,0x8b
  41e178:	das    
  41e179:	call   0x534f:0x201f7401
  41e180:	pop    ebp
  41e181:	loopne 0x41e158
  41e183:	mov    eax,DWORD PTR [edi+0x39]
  41e186:	inc    esp
  41e187:	mov    edi,DWORD PTR [edi]
  41e189:	cmp    DWORD PTR [ebx+eax*4],edi
  41e18c:	mov    edi,0x93448923
  41e191:	sub    al,0x89
  41e193:	dec    esp
  41e194:	pop    edi
  41e195:	xor    eax,0x3f62c829
  41e19a:	mov    esp,0xb0717e23
  41e19f:	mov    ah,BYTE PTR [esi-0x3c]
  41e1a2:	mov    ah,0xfc
  41e1a4:	lea    esp,[esi-0x407ddc6d]
  41e1aa:	cmp    ecx,DWORD PTR [ecx+ebx*8]
  41e1ad:	dec    esp
  41e1ae:	enter  0x57e7,0x5b
  41e1b2:	add    eax,0xc874e900
  41e1b7:	mov    BYTE PTR [esi],bl
  41e1b9:	push   ds
  41e1ba:	enter  0x5a86,0xb7
  41e1be:	mov    bl,0x23
  41e1c0:	es test eax,0x69eb03b7
  41e1c6:	clc    
  41e1c7:	lds    esp,FWORD PTR [esi]
  41e1c9:	push   ds
  41e1ca:	call   0x81955acd
  41e1cf:	(bad)  
  41e1d1:	fidivr WORD PTR [ebp+0x6]
	...
  41e1e8:	jmp    0x526ae26f
  41e1ed:	mov    dh,0xf8
  41e1ef:	aaa    
  41e1f0:	fldenv [edx+0x1d]
  41e1f3:	sahf   
  41e1f4:	repnz inc eax
  41e1f6:	add    BYTE PTR [ecx+0x742db61a],cl
  41e1fc:	cdq    
  41e1fd:	mov    bh,0x2e
  41e1ff:	mov    DWORD PTR [ecx],ebx
  41e201:	sbb    DWORD PTR ds:0x7d406218,eax
  41e207:	call   0x4c22a6f5
  41e20c:	fld    st(4)
  41e20e:	loopne 0x41e257
  41e210:	fldenv [edx]
  41e212:	test   edx,eax
  41e214:	pusha  
  41e215:	aas    
  41e216:	sub    ecx,DWORD PTR [ecx-0x5364b6db]
  41e21c:	bound  eax,QWORD PTR [eax+0x7c]
  41e21f:	shr    BYTE PTR [esi+0x12],0x7d
  41e223:	add    eax,0xaeebd961
  41e228:	xor    cl,BYTE PTR [ecx-0x3ce210a6]
  41e22e:	test   eax,0x5ec3db03
  41e233:	add    ebx,esp
  41e235:	adc    eax,0x139104f6
  41e23a:	out    0x5,al
  41e23c:	pop    ecx
  41e23d:	pop    esi
  41e23e:	jecxz  0x41e281
  41e240:	push   ds
  41e241:	fucomip st,st(0)
  41e243:	std    
  41e244:	call   0x64bcc9e8
  41e249:	pop    esi
  41e24a:	das    
  41e24b:	sbb    al,0x0
	...
  41e25d:	add    BYTE PTR [eax],al
  41e25f:	add    BYTE PTR [esi-0x27fc1586],dl
  41e265:	xchg   ebp,eax
  41e266:	(bad)
  41e269:	rol    DWORD PTR [ebx],cl
  41e26b:	or     DWORD PTR [edi+0x56],esi
  41e26e:	push   cs
  41e26f:	fcom   DWORD PTR [edx]
  41e271:	test   BYTE PTR [ebx-0x7207752c],bl
  41e277:	fild   WORD PTR [ecx-0x22f5917e]
  41e27d:	mov    WORD PTR ds:0x218a94f0,es
  41e283:	stc    
  41e284:	fild   QWORD PTR [esi-0x17]
  41e287:	add    esp,DWORD PTR [edx-0x1a]
  41e28a:	mov    al,0x7a
  41e28c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e28d:	cmc    
  41e28e:	or     eax,0xe695b77d
  41e293:	adc    bl,bl
  41e295:	sbb    DWORD PTR [ebx+0x1e606991],ebp
  41e29b:	loopne 0x41e2f6
  41e29d:	sub    dl,BYTE PTR [esp+edi*8]
  41e2a0:	jnp    0x41e26b
  41e2a2:	and    DWORD PTR ds:0x7f8b2a13,0x946dda22
  41e2ac:	hlt    
  41e2ad:	sub    edx,ebp
  41e2af:	jl     0x41e32d
  41e2b1:	lds    eax,FWORD PTR [eax]
  41e2b3:	push   0xffffffc5
  41e2b5:	cmc    
  41e2b6:	and    cl,ch
  41e2b8:	out    0xb4,al
  41e2ba:	and    al,0x5
  41e2bc:	pop    esi
  41e2bd:	pusha  
  41e2be:	pop    ebx
  41e2bf:	stc    
  41e2c0:	out    0x2d,al
  41e2c2:	add    esp,esi
	...
  41e2d8:	fistp  WORD PTR [esi+0x6061e901]
  41e2de:	jne    0x41e2ed
  41e2e0:	mov    dl,0x60
  41e2e2:	add    BYTE PTR [edx+0x59],ch
  41e2e5:	ror    DWORD PTR [ebx],cl
  41e2e7:	imul   ecx,DWORD PTR [edi-0x27],0x0
  41e2eb:	jmp    0x6e4df99e
  41e2f0:	ja     0x41e2cb
  41e2f2:	add    cl,ch
  41e2f4:	mov    ah,BYTE PTR [eax+ecx*2-0x13]
  41e2f8:	jae    0x41e364
  41e2fa:	adc    eax,0x108fdde
  41e2ff:	jmp    0xf03b3b65
  41e304:	push   0x53
  41e306:	(bad)  
  41e307:	jmp    0x29c1bc6d
  41e30c:	outs   dx,DWORD PTR ds:[esi]
  41e30d:	lock aas 
  41e30f:	repz dec esp
  41e311:	pop    esp
  41e312:	mov    eax,0x66d961e9
  41e317:	or     esi,esi
  41e319:	mov    dl,0x8
  41e31b:	xlat   BYTE PTR ds:[ebx]
  41e31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e31d:	fstp   QWORD PTR [ecx-0xa]
  41e320:	and    ch,BYTE PTR [eax-0x80]
  41e323:	inc    ebp
  41e324:	inc    edx
  41e325:	std    
  41e326:	add    dh,ah
  41e328:	xchg   esp,eax
  41e329:	sbb    DWORD PTR [esi+0x4ed10215],ecx
  41e32f:	adc    ebx,DWORD PTR [esi+0x60]
  41e332:	inc    ebp
  41e333:	lds    ebx,FWORD PTR [ecx]
  41e335:	push   edx
  41e336:	inc    esp
  41e337:	shr    ebx,1
  41e339:	sub    bl,bh
  41e33b:	sbb    DWORD PTR [eax],eax
	...
  41e34d:	add    BYTE PTR [eax],al
  41e34f:	add    BYTE PTR [edx+0x52],ah
  41e352:	adc    DWORD PTR [eax],eax
  41e354:	outs   dx,BYTE PTR ds:[esi]
  41e355:	fs push es
  41e357:	call   0x3fc5a6
  41e35c:	loopne 0x41e3b0
  41e35e:	mov    DWORD PTR [edi+0x13],ecx
  41e361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e362:	cmp    eax,DWORD PTR [eax+edx*2]
  41e365:	popa   
  41e366:	and    BYTE PTR [eax],bl
  41e368:	jo     0x41e388
  41e36a:	add    BYTE PTR [ecx-0x72cff709],cl
  41e370:	pop    es
  41e371:	or     DWORD PTR [eax],ebx
  41e373:	push   eax
  41e374:	sbb    DWORD PTR cs:[eax],esp
  41e377:	and    al,0xcb
  41e379:	imul   edx,DWORD PTR [ecx-0x1],0x523c08e7
  41e380:	cli    
  41e381:	mov    ds:0xd154e8cd,eax
  41e386:	std    
  41e387:	inc    DWORD PTR [edi]
  41e389:	popf   
  41e38a:	je     0x41e391
  41e38c:	mov    ch,0xa5
  41e38e:	je     0x41e3b4
  41e390:	ja     0x41e335
  41e392:	dec    esp
  41e393:	and    al,0x83
  41e395:	(bad)  
  41e396:	call   0xb91e5f49
  41e39b:	add    bl,bh
  41e39d:	fadd   QWORD PTR [eax]
  41e39f:	data16 (bad) 
  41e3a1:	sbb    al,0x0
  41e3a3:	je     0x41e32f
  41e3a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3a6:	push   ebp
  41e3a7:	cmp    al,dl
  41e3a9:	jo     0x41e3cb
  41e3ab:	xor    al,0x72
  41e3ad:	arpl   WORD PTR [eax],ax
  41e3af:	jb     0x41e407
  41e3b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3b2:	inc    esp
  41e3b3:	and    al,0x0
	...
  41e3c5:	add    BYTE PTR [eax],al
  41e3c7:	add    BYTE PTR [edi+0x22],ah
  41e3ca:	cld    
  41e3cb:	pop    ds
  41e3cc:	cmp    ebx,esp
  41e3ce:	xchg   DWORD PTR [edi+edx*2+0x35],esi
  41e3d2:	push   esi
  41e3d3:	push   eax
  41e3d4:	sub    BYTE PTR [eax+0x20],0x2c
  41e3d8:	nop
  41e3d9:	sbb    al,BYTE PTR [eax]
  41e3db:	sub    edi,DWORD PTR [edx+0x6272fd6b]
  41e3e1:	ss ja  0x41e3f6
  41e3e4:	out    dx,eax
  41e3e5:	cli    
  41e3e6:	cli    
  41e3e7:	out    0xc,eax
  41e3e9:	outs   dx,BYTE PTR ds:[esi]
  41e3ea:	add    edi,ebp
  41e3ec:	fldcw  WORD PTR ds:0x41d913dc
  41e3f2:	jg     0x41e3ee
  41e3f4:	arpl   WORD PTR [edi],ax
  41e3f6:	jns    0x41e470
  41e3f8:	aad    0xbe
  41e3fa:	add    ch,BYTE PTR [ecx]
  41e3fc:	jns    0x41e431
  41e3fe:	out    0x80,eax
  41e400:	(bad)  
  41e401:	aaa    
  41e402:	repz and BYTE PTR [ecx-0x69],0x2
  41e407:	std    
  41e408:	loope  0x41e427
  41e40a:	fcomp  QWORD PTR [ebx]
  41e40c:	bound  ebp,QWORD PTR [ebx+0x686a238b]
  41e412:	(bad)  
  41e413:	mov    BYTE PTR ds:0x94ff9a3a,dh
  41e419:	inc    esi
  41e41a:	hlt    
  41e41b:	mov    dh,0x7b
  41e41d:	(bad)  
  41e41e:	(bad)  
  41e41f:	(bad)  
  41e420:	jp     0x41e420
  41e422:	or     BYTE PTR [eax],al
  41e424:	bound  edi,QWORD PTR [ebx-0x5a667cd9]
  41e42a:	call   0x41e52b
	...
  41e43f:	add    dh,dh
  41e441:	sbb    eax,0x2e9188e4
  41e446:	mov    esp,DWORD PTR [ebx]
  41e448:	xchg   cl,ch
  41e44a:	cmp    al,0x0
  41e44c:	bound  esi,QWORD PTR [eax]
  41e44e:	call   0x45ff:0xe95c45ff
  41e455:	mov    esp,0xa6ade839
  41e45a:	add    al,0x0
  41e45c:	jmp    0x3a61c54d
  41e461:	call   DWORD PTR [edx+0x0]
  41e464:	bound  esp,QWORD PTR [esi-0x5]
  41e467:	(bad)  
  41e468:	xchg   ecx,eax
  41e469:	cmp    eax,DWORD PTR ds:0x6ed96676
  41e46f:	scas   al,BYTE PTR es:[edi]
  41e470:	xor    DWORD PTR gs:[ebp+0x16],edi
  41e474:	pop    es
  41e475:	daa    
  41e476:	pop    edi
  41e477:	rol    BYTE PTR [ecx-0xf],0x5e
  41e47b:	mov    eax,0x8129f541
  41e480:	lods   eax,DWORD PTR ds:[esi]
  41e481:	shl    DWORD PTR [eax-0x40],0x41
  41e485:	icebp  
  41e486:	pusha  
  41e487:	mov    eax,0xbcaef581
  41e48c:	sbb    eax,0xcfb467d6
  41e491:	es pop ebx
  41e493:	jns    0x41e4bb
  41e495:	std    
  41e496:	std    
  41e497:	sar    ch,1
  41e499:	xchg   BYTE PTR [esi],cl
  41e49b:	inc    ecx
  41e49c:	adc    al,0xc2
  41e49e:	sub    DWORD PTR [edi-0x7f60fe4a],esp
	...
  41e4b8:	sahf   
  41e4b9:	cmc    
  41e4ba:	es scas al,BYTE PTR es:[edi]
  41e4bc:	jmp    0x11d1:0x24789328
  41e4c3:	or     edi,DWORD PTR [ecx+0x1478e9d9]
  41e4c9:	leave  
  41e4ca:	add    DWORD PTR [ebx],edx
  41e4cc:	leave  
  41e4cd:	fldl2t 
  41e4cf:	js     0x41e4f5
  41e4d1:	stc    
  41e4d2:	adc    DWORD PTR [ebx],ebx
  41e4d4:	mov    ecx,0x1478e9d9
  41e4d9:	std    
  41e4da:	add    DWORD PTR [ebx],esp
  41e4dc:	or     ecx,ebx
  41e4de:	jmp    0xd233895b
  41e4e3:	sub    bh,cl
  41e4e5:	fsubr  st,st(1)
  41e4e7:	js     0x41e47d
  41e4e9:	jmp    0xd94b17af
  41e4ee:	jmp    0xd473096b
  41e4f3:	sbb    ch,BYTE PTR [edi]
  41e4f5:	outs   dx,DWORD PTR es:[esi]
  41e4f7:	mov    ch,0x91
  41e4f9:	pop    esp
  41e4fa:	add    DWORD PTR [eax-0x3eae2413],esp
  41e500:	pop    ecx
  41e501:	loope  0x41e4fe
  41e503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e504:	mov    ah,BYTE PTR [edi-0x52a19bb4]
  41e50a:	or     ah,BYTE PTR [edx+0x36]
  41e50d:	xor    DWORD PTR [edx-0x1d],ebx
  41e510:	popa   
  41e511:	fld    DWORD PTR [edi-0x518eb64a]
  41e517:	jmp    0x2d8d357d
	...
  41e530:	pop    es
  41e531:	sbb    eax,0x5eee2943
  41e536:	inc    ecx
  41e537:	jmp    0x8cd62443
  41e53c:	popa   
  41e53d:	fnstcw WORD PTR [edi+0x45]
  41e540:	aad    0x88
  41e542:	push   ebp
  41e543:	mov    bh,0x3a
  41e545:	ins    DWORD PTR es:[edi],dx
  41e546:	and    eax,0xd96169
  41e54b:	xchg   esi,eax
  41e54c:	sub    BYTE PTR [ebp-0x6ae72adc],cl
  41e552:	and    al,0xfd
  41e554:	loopne 0x41e57c
  41e556:	cld    
  41e557:	data16 movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  41e55a:	or     esp,DWORD PTR [esi-0x77]
  41e55d:	fadd   DWORD PTR [eax]
  41e55f:	jmp    0x6967425e
  41e564:	popa   
  41e565:	fld    DWORD PTR [eax]
  41e567:	xchg   ebx,eax
  41e568:	ins    BYTE PTR es:[edi],dx
  41e569:	call   0xf9f75245
  41e56e:	push   eax
  41e56f:	nop
  41e570:	fadd   DWORD PTR [ebp-0x62277edc]
  41e576:	and    al,0x55
  41e578:	fild   QWORD PTR [eax-0x7f28a6dc]
  41e57e:	and    al,0x5d
  41e580:	dec    esi
  41e581:	aam    0xd1
  41e583:	call   0x9735e9
  41e588:	pop    edi
  41e589:	in     eax,dx
  41e58a:	popw   es
  41e58c:	xor    BYTE PTR ds:0xd90ad0ff,0x87
  41e593:	test   BYTE PTR [eax],al
	...
  41e5a5:	add    BYTE PTR [eax],al
  41e5a7:	add    BYTE PTR [edi+0x51],bl
  41e5aa:	cld    
  41e5ab:	(bad)  
  41e5ac:	sti    
  41e5ad:	lea    edx,[eax+0x6a]
  41e5b0:	clc    
  41e5b1:	dec    ecx
  41e5b2:	dec    eax
  41e5b3:	and    al,0x5f
  41e5b5:	xor    eax,0xd90b5def
  41e5ba:	jg     0x41e57c
  41e5bc:	hlt    
  41e5bd:	pop    esp
  41e5be:	mov    ecx,0x66d8fb02
  41e5c3:	or     BYTE PTR [ebp-0x1a],dh
  41e5c6:	mov    ah,0x24
  41e5c8:	aas    
  41e5c9:	fld    QWORD PTR [eax]
  41e5cb:	add    ah,dl
  41e5cd:	push   ecx
  41e5ce:	test   eax,0x52d8bb02
  41e5d3:	lea    eax,[edi]
  41e5d5:	std    
  41e5d6:	push   eax
  41e5d7:	push   ecx
  41e5d8:	sti    
  41e5d9:	xlat   BYTE PTR ds:[ebx]
  41e5da:	andps  xmm1,XMMWORD PTR [ebp+0x7f830098]
  41e5e1:	leave  
  41e5e2:	jg     0x41e5a4
  41e5e4:	test   BYTE PTR [ecx-0x6f],dl
  41e5e7:	add    cl,BYTE PTR [ebx-0x72b428]
  41e5ed:	lock test BYTE PTR [eax],al
  41e5f0:	jnp    0x41e5ca
  41e5f2:	push   eax
  41e5f3:	push   0xffffff89
  41e5f5:	dec    ecx
  41e5f6:	dec    eax
  41e5f7:	and    al,0xcf
  41e5f9:	xor    BYTE PTR [ebx-0x7c2784a3],ch
  41e5ff:	inc    esp
  41e600:	lahf   
  41e601:	cld    
  41e602:	jg     0x41e5c4
  41e604:	inc    esp
  41e605:	pop    esp
  41e606:	jno    0x41e60a
  41e608:	dec    ebx
  41e609:	fmul   DWORD PTR [ecx+0xac]
	...
  41e61f:	add    BYTE PTR [edi+0x5d],bl
  41e622:	cld    
  41e623:	(bad)  
  41e624:	cmp    edx,DWORD PTR [ecx-0x19]
  41e627:	punpckldq mm6,DWORD PTR [esi+0x32620263]
  41e62e:	push   ebp
  41e62f:	mov    esp,DWORD PTR [esi-0x47afdf2a]
  41e635:	xor    DWORD PTR [ecx-0x1319b9b5],edx
  41e63b:	xor    BYTE PTR [edi-0x5978ffce],0x16
  41e642:	sub    BYTE PTR [ebx+0x44843322],al
  41e648:	pusha  
  41e649:	xor    al,BYTE PTR [eax]
  41e64b:	aaa    
  41e64c:	xchg   esi,eax
  41e64d:	push   ds
  41e64e:	sbb    BYTE PTR ds:0x61ce6,cl
  41e654:	(bad)  
  41e656:	xchg   ecx,eax
  41e657:	inc    ebx
  41e658:	xchg   BYTE PTR [edx],cl
  41e65a:	push   eax
  41e65b:	mov    ebx,DWORD PTR [esi]
  41e65d:	push   ds
  41e65e:	cmp    BYTE PTR [eax-0x21],dl
  41e661:	ins    DWORD PTR es:[edi],dx
  41e662:	and    al,0x74
  41e664:	mov    edx,0x62006116
  41e669:	mov    ecx,0xbd822443
  41e66e:	mov    edi,0x63ce60c
  41e673:	add    BYTE PTR [edx-0x59],ah
  41e676:	jnp    0x41e69c
  41e678:	jbe    0x41e62f
  41e67a:	dec    BYTE PTR [esi+ebx*8]
  41e67d:	add    BYTE PTR [esi],al
  41e67f:	add    BYTE PTR [edx-0x53],ah
  41e682:	push   ebx
  41e683:	and    al,0x0
	...
  41e695:	add    BYTE PTR [eax],al
  41e697:	add    BYTE PTR [edx],ch
  41e699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e69a:	rol    DWORD PTR [esi-0x78c7e9e2],1
  41e6a0:	push   ss
  41e6a1:	push   ds
  41e6a2:	cmp    al,0xe8
  41e6a4:	ds ret 0x4
  41e6a8:	xlat   BYTE PTR ds:[ebx]
  41e6a9:	mov    ebp,0x30628423
  41e6ae:	add    BYTE PTR [edi-0x4e],cl
  41e6b1:	test   DWORD PTR [ebx+0x24],eax
  41e6b4:	ret    0x39d9
  41e6b7:	(bad)  
  41e6b8:	cdq    
  41e6b9:	std    
  41e6ba:	push   ebp
  41e6bb:	in     al,dx
  41e6bc:	push   esp
  41e6bd:	test   cl,ch
  41e6bf:	add    esp,ecx
  41e6c1:	sbb    DWORD PTR [esi+0x5d],edx
  41e6c4:	fist   DWORD PTR [ebp+0xe]
  41e6c7:	mov    BYTE PTR ds:0x2486ea23,ah
  41e6cd:	shr    DWORD PTR [ebp-0x28],cl
  41e6d0:	adc    al,0x23
  41e6d2:	jmp    0x1a90:0xf2d01484
  41e6d9:	fldl2t 
  41e6db:	add    esp,ebx
  41e6dd:	xor    eax,0xaf9252e6
  41e6e2:	ficomp WORD PTR [ebp-0x27]
  41e6e5:	xchg   ebp,eax
  41e6e6:	int    0x57
  41e6e8:	cli    
  41e6e9:	int    0x4
  41e6eb:	add    edi,ebx
  41e6ed:	pop    esp
  41e6ee:	stos   BYTE PTR es:[edi],al
  41e6ef:	adc    ecx,esp
  41e6f1:	addr16 jmp 0xbe9648fa
  41e6f7:	daa    
  41e6f8:	mov    dl,BYTE PTR [esi+ebp*4+0x27]
	...
  41e710:	and    dh,BYTE PTR [ecx]
  41e712:	or     al,0xe
  41e714:	(bad)  
  41e715:	fldenv [esp+eax*8+0x5e]
  41e719:	pop    esp
  41e71a:	add    esp,DWORD PTR gs:[edx-0x27]
  41e71e:	add    BYTE PTR [eax+0x46],ah
  41e721:	in     eax,0xe2
  41e723:	mov    dl,dh
  41e725:	fsubr  st,st(1)
  41e727:	add    esp,ebx
  41e729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e72a:	int    0x3b
  41e72c:	xchg   edx,edx
  41e72e:	bound  ecx,QWORD PTR [esp+edi*2+0x21f9ea22]
  41e735:	std    
  41e736:	in     eax,dx
  41e737:	add    dh,dh
  41e739:	shr    DWORD PTR [edx],cl
  41e73b:	mov    BYTE PTR [ecx+0x5d],al
  41e73e:	jmp    0x61e9:0xc16203
  41e745:	(bad)  
  41e747:	fistp  QWORD PTR [edi+0x7d6dc3dc]
  41e74d:	push   ecx
  41e74e:	add    ecx,ebp
  41e750:	popa   
  41e751:	retf   0xe900
  41e754:	popa   
  41e755:	or     DWORD PTR [ebx],0xffffff96
  41e758:	sub    ecx,DWORD PTR [edi+0x4e]
  41e75b:	jmp    0x41e731
  41e75d:	aad    0x3a
  41e75f:	jmp    0xd961:0x82ad3a29
  41e766:	xchg   ecx,eax
  41e768:	fsubr  DWORD PTR [ebp+0x2edd0524]
  41e76e:	or     al,0x65
  41e770:	test   eax,0xe9fc22
	...
  41e785:	add    BYTE PTR [eax],al
  41e787:	add    dh,ah
  41e789:	dec    ebp
  41e78a:	and    eax,0xd96165
  41e78f:	jb     0x41e79d
  41e791:	cmp    ch,BYTE PTR [ecx-0x52]
  41e794:	pusha  
  41e795:	fcos   
  41e797:	jnp    0x41e7d3
  41e799:	and    al,0x75
  41e79b:	lds    eax,FWORD PTR [ebp+0x31fcfb8b]
  41e7a1:	retf   
  41e7a2:	inc    eax
  41e7a3:	jmp    0x19667d96
  41e7a8:	fist   WORD PTR ds:0xa1aaea0d
  41e7ae:	cmp    BYTE PTR [esi],dl
  41e7b0:	sub    bl,ch
  41e7b2:	ret    0x52e7
  41e7b5:	fwait
  41e7b6:	xchg   DWORD PTR [ebp+0x3d],esi
  41e7b9:	pop    ecx
  41e7ba:	add    ecx,ebp
  41e7bc:	popa   
  41e7bd:	mov    WORD PTR [eax-0x41],ss
  41e7c0:	(bad)  
  41e7c1:	(bad)  
  41e7c2:	push   eax
  41e7c3:	mul    DWORD PTR [ecx]
  41e7c5:	fnstcw WORD PTR [edi+0x2d]
  41e7c8:	gs fdiv st,st(3)
  41e7cb:	sbb    DWORD PTR [ecx+edx*2+0x1b],0x0
  41e7d0:	out    dx,al
  41e7d1:	mov    DWORD PTR [esp+eax*2],esp
  41e7d4:	add    ch,dh
  41e7d6:	out    dx,eax
  41e7d7:	call   0x3cf204
  41e7dc:	scas   al,BYTE PTR es:[edi]
  41e7dd:	pop    eax
  41e7de:	and    BYTE PTR [ebx+edi*1+0x7b5100dd],al
  41e7e5:	dec    edx
  41e7e6:	inc    eax
  41e7e7:	and    al,0x83
  41e7e9:	test   DWORD PTR [edi+0x4c],eax
	...
  41e7ff:	add    BYTE PTR [edi-0x5f],ah
  41e802:	call   0x1176717
  41e807:	mov    esp,DWORD PTR [ebx]
  41e809:	dec    edi
  41e80a:	js     0x41e830
  41e80c:	aaa    
  41e80d:	push   edx
  41e80e:	std    
  41e80f:	je     0x41e811
  41e811:	push   esp
  41e812:	test   al,0x24
  41e814:	ja     0x41e7eb
  41e816:	add    BYTE PTR [eax],al
  41e818:	xchg   BYTE PTR [edx],ch
  41e81a:	jge    0x41e822
  41e81c:	cmp    BYTE PTR [ecx+0x34801424],0x6a
  41e823:	or     DWORD PTR [esi-0x7f],ebp
  41e826:	and    al,0x5c
  41e828:	sub    BYTE PTR ds:0xdccacedf,0x87
  41e82f:	test   BYTE PTR [edi-0x440003a8],ah
  41e835:	test   DWORD PTR [eax-0x73],edx
  41e838:	pop    es
  41e839:	stc    
  41e83a:	pusha  
  41e83b:	push   eax
  41e83c:	mov    DWORD PTR ds:[esp+esi*2],esp
  41e840:	and    ecx,DWORD PTR [ebx]
  41e842:	pop    ecx
  41e843:	add    BYTE PTR [ebx+0xb24804d],bh
  41e849:	aad    0x0
  41e84b:	add    BYTE PTR [esi],al
  41e84d:	adc    eax,0x19001270
  41e852:	and    BYTE PTR [ebx+edi*2+0x1f8900dc],al
  41e859:	icebp  
  41e85a:	test   BYTE PTR [eax],al
  41e85c:	bound  esi,QWORD PTR [edx]
  41e85e:	add    BYTE PTR [ebx-0x78f1b093],al
	...
  41e878:	(bad)  
  41e879:	push   cs
  41e87a:	cmp    bh,0x5d
  41e87d:	xor    cl,BYTE PTR [ebp+0x4ae7e9b]
  41e883:	add    BYTE PTR [edx+0x7d],ah
  41e886:	dec    eax
  41e887:	and    al,0x7e
  41e889:	loop   0x41e81c
  41e88b:	inc    ebx
  41e88c:	xchg   dh,dl
  41e88e:	push   esp
  41e88f:	mov    esp,DWORD PTR [esi+0x5e874ce]
  41e895:	out    dx,al
  41e896:	add    al,0x0
  41e898:	fidiv  WORD PTR [ecx+0x79]
  41e89b:	add    al,0xe9
  41e89d:	sbb    ah,bh
  41e89f:	pop    es
  41e8a0:	jmp    0xd966118a
  41e8a5:	int    0x28
  41e8a7:	and    BYTE PTR [ebp+0x4673fbe3],ch
  41e8ad:	xacquire xchg DWORD PTR [ebx+0x3e],ecx
  41e8b1:	or     bh,bl
  41e8b3:	mov    bl,0x46
  41e8b5:	mov    ds:0x5762ffff,al
  41e8ba:	mov    ah,0x23
  41e8bc:	repnz xor DWORD PTR [eax],eax
  41e8bf:	add    BYTE PTR [edi],ch
  41e8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c2:	jae    0x41e8e8
  41e8c4:	jle    0x41e88e
  41e8c6:	xchg   DWORD PTR [ebx+0x7e],esi
  41e8c9:	not    BYTE PTR [edx-0x3]
  41e8cc:	ss (bad) 
  41e8ce:	inc    eax
  41e8cf:	std    
  41e8d0:	cs into 
  41e8d2:	push   esp
  41e8d3:	push   0x58
  41e8d5:	ins    BYTE PTR es:[edi],dx
  41e8d6:	call   0x744b03
  41e8db:	mov    DWORD PTR [eax],eax
	...
  41e8ed:	add    BYTE PTR [eax],al
  41e8ef:	add    BYTE PTR [edx+0x6f72f0b4],cl
  41e8f5:	mov    ebx,0x5c0de7cd
  41e8fa:	add    BYTE PTR [eax],al
  41e8fc:	(bad)  
  41e8fe:	cs jmp 0x41e8f6
  41e901:	jb     0x41e8ed
  41e903:	add    ebp,ebx
  41e905:	lar    esi,WORD PTR [eax+edi*4-0x28]
  41e90a:	jmp    0xe8758999
  41e90f:	xor    ah,BYTE PTR [edx]
  41e911:	jg     0x41e8ae
  41e913:	pusha  
  41e914:	mov    ebx,0x206f2e5a
  41e919:	shr    cl,cl
  41e91b:	cmp    BYTE PTR [ecx],0xe2
  41e91e:	fild   DWORD PTR [edi]
  41e920:	cmp    dh,BYTE PTR [eax-0x73cafbdb]
  41e926:	cmp    al,0x56
  41e928:	xchg   edi,eax
  41e929:	push   eax
  41e92a:	sub    BYTE PTR ss:[edx+0x50],dl
  41e92e:	sub    BYTE PTR ss:[esi-0x5c],dh
  41e932:	repz mov ebp,0x42dafe9
  41e938:	mov    ah,0x1e
  41e93a:	aad    0xe3
  41e93c:	jae    0x41e8d7
  41e93e:	jmp    0xc634a38
  41e943:	dec    eax
  41e944:	(bad)  
  41e945:	fcomp  DWORD PTR [edx+ebx*1]
  41e948:	cli    
  41e949:	fadd   QWORD PTR [esi-0x55aa1903]
  41e94f:	js     0x41e9be
  41e951:	pop    ecx
  41e952:	in     eax,dx
  41e953:	sti    
	...
  41e968:	inc    edi
  41e969:	xchg   ebp,eax
  41e96a:	jmp    0x6e169071
  41e96f:	outs   dx,BYTE PTR ds:[esi]
  41e970:	push   ds
  41e971:	(bad)  [esi+0x6e]
  41e974:	jge    0x41e94f
  41e976:	mov    bl,0xfc
  41e978:	push   eax
  41e979:	std    
  41e97a:	test   DWORD PTR [ebx+0x62],0xe27ce52
  41e981:	push   esp
  41e982:	inc    ebx
  41e983:	or     eax,0x3e920e6
  41e988:	bound  edx,QWORD PTR [edx+0x1]
  41e98b:	xchg   ebp,eax
  41e98c:	inc    ebp
  41e98d:	add    DWORD PTR [ebp-0x11b0a8ee],0x7fd961e8
  41e997:	popf   
  41e998:	cmp    eax,0x539c0489
  41e99d:	push   eax
  41e99e:	inc    ebp
  41e99f:	lds    edx,FWORD PTR ds:0x6e993959
  41e9a5:	pop    edx
  41e9a6:	(bad)  
  41e9a8:	popa   
  41e9a9:	fldenv [esi-0x16]
  41e9ac:	lods   al,BYTE PTR ds:[esi]
  41e9ad:	xor    BYTE PTR [eax],bl
  41e9af:	push   0xffffffe2
  41e9b1:	hlt    
  41e9b2:	push   eax
  41e9b3:	jmp    0xd961:0xe8ca5a6e
  41e9ba:	xchg   DWORD PTR ds:0x11808d7a,ebp
  41e9c0:	lahf   
  41e9c1:	int3   
  41e9c2:	test   DWORD PTR [ebp-0x5ff26a0],eax
  41e9c8:	add    al,0x9b
  41e9ca:	adc    WORD PTR [eax],ax
	...
  41e9dd:	add    BYTE PTR [eax],al
  41e9df:	add    BYTE PTR [eax-0x27],bh
  41e9e2:	sti    
  41e9e3:	hlt    
  41e9e4:	mov    DWORD PTR [edi-0x350116bc],ebp
  41e9ea:	fs sti 
  41e9ec:	mov    eax,ds:0x75a985d9
  41e9f1:	rol    BYTE PTR [edi-0x204c065f],1
  41e9f7:	xchg   dh,bl
  41e9f9:	push   eax
  41e9fa:	icebp  
  41e9fb:	xchg   edx,eax
  41e9fc:	arpl   ax,bp
  41e9fe:	repnz ins BYTE PTR es:[edi],dx
  41ea00:	xlat   BYTE PTR ds:[ebx]
  41ea01:	int3   
  41ea02:	test   BYTE PTR [ecx+0x60],bl
  41ea05:	fld    DWORD PTR [eax]
  41ea07:	jb     0x41ea2e
  41ea09:	cmc    
  41ea0a:	adc    al,0x70
  41ea0c:	pop    edi
  41ea0d:	push   eax
  41ea0e:	inc    ebp
  41ea0f:	or     eax,0xe56b5656
  41ea14:	stc    
  41ea15:	xlat   BYTE PTR ds:[ebx]
  41ea16:	jne    0x41ea18
  41ea18:	xchg   esp,eax
  41ea19:	push   eax
  41ea1a:	ror    DWORD PTR [ebx-0x417bcdbc],1
  41ea20:	jp     0x41e9fb
  41ea22:	mov    eax,edi
  41ea24:	add    BYTE PTR [esi-0x640defdc],dl
  41ea2a:	or     BYTE PTR [ebx-0x769f0a29],cl
  41ea30:	mov    ch,0xcd
  41ea32:	test   al,0x4
  41ea34:	iret   
  41ea35:	ror    DWORD PTR [ecx-0x1682d0bc],cl
  41ea3b:	or     edx,eax
  41ea3d:	mov    WORD PTR [esp+ebx*2],fs
  41ea40:	rol    BYTE PTR ds:0x63e4,0x0
	...
  41ea57:	add    BYTE PTR [ebp-0x29],dh
  41ea5a:	add    BYTE PTR [ebx],dh
  41ea5c:	repnz dec esi
  41ea5e:	inc    esi
  41ea5f:	adc    BYTE PTR [edx-0x7ac6eb61],dh
  41ea65:	int    0xd
  41ea67:	test   BYTE PTR [edi],ah
  41ea69:	(bad)  
  41ea6a:	add    BYTE PTR [eax],al
  41ea6c:	mov    fs,WORD PTR [eax]
  41ea6e:	jle    0x41ea78
  41ea70:	jle    0x41ea87
  41ea72:	or     eax,0xd65b84
  41ea77:	add    BYTE PTR [eax-0x61],bh
  41ea7a:	or     al,0x9
  41ea7c:	jo     0x41ea40
  41ea7e:	push   esp
  41ea7f:	push   ss
  41ea80:	dec    ebx
  41ea81:	aad    0x7a
  41ea83:	and    esp,DWORD PTR [ecx-0x43]
  41ea86:	xchg   DWORD PTR [edi+ebx*1-0x3b],edx
  41ea8a:	push   ebx
  41ea8b:	call   0x3cfc80
  41ea90:	inc    esi
  41ea91:	cdq    
  41ea92:	and    al,0x18
  41ea94:	popa   
  41ea95:	int    0xfd
  41ea97:	jbe    0x41ea5c
  41ea99:	mov    ch,bh
  41ea9b:	ror    DWORD PTR [eax+0x19],cl
  41ea9e:	or     BYTE PTR [ebp-0x7ffb5575],al
  41eaa4:	bound  esi,QWORD PTR [eax+edx*2-0x1]
  41eaa8:	loopne 0x41ea37
  41eaaa:	add    esi,DWORD PTR [ebx+0x31]
  41eaad:	scas   eax,DWORD PTR es:[edi]
  41eaae:	js     0x41ead4
  41eab0:	or     dl,cl
  41eab2:	js     0x41eb00
  41eab4:	clc    
  41eab5:	dec    BYTE PTR [eax+0x5dda3e53]
  41eabb:	call   0x41eac0
	...
  41ead0:	mov    esi,0xe90005e6
  41ead5:	ds sbb al,0x64
  41ead8:	clc    
  41ead9:	adc    BYTE PTR [ecx+0x501a3e43],cl
  41eadf:	push   ebp
  41eae0:	pop    ebp
  41eae1:	mov    edi,0xb566c383
  41eae6:	les    esi,FWORD PTR [edx+0x79]
  41eae9:	scas   eax,DWORD PTR es:[edi]
  41eaea:	js     0x41eb10
  41eaec:	mov    edx,0xe81b6c11
  41eaf1:	jmp    0x3c0e:0x86793c25
  41eaf8:	cmp    BYTE PTR [esi+0x12],0x3c
  41eafc:	pop    ebx
  41eafd:	mov    es,WORD PTR [eax]
  41eaff:	cmp    al,0x6f
  41eb01:	xchg   esp,eax
  41eb02:	or     cl,BYTE PTR ds:0xfd3971d4
  41eb08:	bound  esi,QWORD PTR [edx]
  41eb0a:	add    BYTE PTR [ebx+0x5d],dh
  41eb0d:	jae    0x41eb51
  41eb0f:	sbb    BYTE PTR [ebx+0x32],ah
  41eb12:	add    BYTE PTR [eax],al
  41eb14:	in     al,dx
  41eb15:	cmc    
  41eb16:	and    BYTE PTR [eax],dl
  41eb18:	pop    edx
  41eb19:	mov    bh,0x3b
  41eb1b:	and    al,0x76
  41eb1d:	mov    ecx,0x25561c41
  41eb22:	mov    eax,DWORD PTR [ebx+0x7e]
  41eb25:	and    cl,BYTE PTR [ebp+0x3bb78245]
  41eb2b:	and    al,0x4e
  41eb2d:	push   edi
  41eb2e:	sbb    ecx,DWORD PTR [ecx+0x740dd92e]
	...
  41eb48:	jecxz  0x41eb58
  41eb4a:	pop    ebx
  41eb4b:	jmp    0x41eb56
  41eb4d:	pop    esi
  41eb4e:	jmp    0x5cec656
  41eb53:	jo     0x41eb38
  41eb55:	push   cs
  41eb56:	inc    ebx
  41eb57:	mov    WORD PTR [edi],ds
  41eb59:	stc    
  41eb5a:	push   ecx
  41eb5b:	dec    eax
  41eb5c:	leave  
  41eb5d:	fldl2t 
  41eb5f:	mov    esi,0x3a581e9
  41eb64:	adc    edx,DWORD PTR [edx-0x54]
  41eb67:	pop    ds
  41eb68:	ja     0x41eb2f
  41eb6a:	or     DWORD PTR ds:0xbb52d922,edx
  41eb70:	or     al,0x95
  41eb72:	jmp    0x93741a05
  41eb77:	in     eax,0x56
  41eb79:	sbb    ebx,DWORD PTR [ecx+0x4321f8e]
  41eb7f:	loope  0x41ebc7
  41eb81:	sbb    ebx,DWORD PTR [edi-0x37]
  41eb84:	xchg   esi,eax
  41eb85:	xor    DWORD PTR [esi],edi
  41eb87:	jmp    0x41ebbf
  41eb89:	sbb    edx,esp
  41eb8b:	inc    edx
  41eb8c:	xchg   edx,eax
  41eb8d:	xlat   BYTE PTR ds:[ebx]
  41eb8e:	pop    esp
  41eb8f:	adc    ebx,ebx
  41eb91:	and    ecx,0x6d
  41eb94:	bound  ebx,QWORD PTR [edx]
  41eb96:	cmp    al,0x8
  41eb98:	push   ebx
  41eb99:	adc    dl,dl
  41eb9b:	fwait
  41eb9c:	cmp    eax,ebx
  41eb9e:	jmp    0xe5e7b122
  41eba3:	sub    DWORD PTR [edi-0x14af1877],0xb
  41ebaa:	xchg   edx,eax
  41ebab:	sbb    DWORD PTR [eax],eax
	...
  41ebbd:	add    BYTE PTR [eax],al
  41ebbf:	add    al,bh
  41ebc1:	sbb    dl,BYTE PTR [ebx-0x7e7ce873]
  41ebc7:	mov    esp,0x55831ac8
  41ebcc:	xlat   BYTE PTR ds:[ebx]
  41ebcd:	les    ebx,FWORD PTR [ebp+0xd92216]
  41ebd3:	bound  esp,QWORD PTR [eax+0x28601331]
  41ebd9:	ror    DWORD PTR [ecx-0x34afae49],1
  41ebdf:	push   ecx
  41ebe0:	push   esi
  41ebe1:	pop    ds
  41ebe2:	cld    
  41ebe3:	push   esi
  41ebe4:	xlat   BYTE PTR ds:[ebx]
  41ebe5:	or     al,0xe9
  41ebe7:	(bad)  
  41ebe9:	sbb    bh,ah
  41ebeb:	cli    
  41ebec:	mov    eax,ds:0x2e9c5a7d
  41ebf1:	pop    eax
  41ebf2:	(bad)
  41ebf5:	out    dx,al
  41ebf6:	add    BYTE PTR [edx+0x7253832c],bl
  41ebfc:	cli    
  41ebfd:	hlt    
  41ebfe:	adc    al,0x72
  41ec00:	jno    0x41ec59
  41ec02:	cld    
  41ec03:	popf   
  41ec04:	pop    edx
  41ec05:	push   eax
  41ec06:	inc    ebx
  41ec07:	in     eax,dx
  41ec08:	sahf   
  41ec09:	xchg   esp,eax
  41ec0a:	add    al,0x7d
  41ec0c:	(bad)  
  41ec0d:	out    0xc0,eax
  41ec0f:	adc    bl,ch
  41ec11:	sbb    esp,edi
  41ec13:	jmp    0xa59c2a1e
  41ec18:	popa   
  41ec19:	mov    BYTE PTR [ecx+0x161c7667],cl
  41ec1f:	leave  
  41ec20:	push   edi
  41ec21:	cdq    
  41ec22:	add    BYTE PTR [ecx+0x0],al
	...
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    dl,dh
  41ec39:	add    BYTE PTR [ecx+ebp*8-0x12],0xb
  41ec3e:	jmp    0xfc5ef487
  41ec43:	and    DWORD PTR gs:[edi-0x225c9cdf],esp
  41ec4a:	cmp    al,0xe8
  41ec4c:	lea    edi,[edi-0x2871d00e]
  41ec52:	jne    0x41ec49
  41ec54:	ins    DWORD PTR es:[edi],dx
  41ec55:	pop    edx
  41ec56:	jbe    0x41ec56
  41ec58:	ficomp WORD PTR [ebx-0x35b317e8]
  41ec5e:	test   DWORD PTR [eax],eax
  41ec60:	fsubr  QWORD PTR [ecx+0x19cc8307]
  41ec66:	cld    
  41ec67:	jne    0x41ec1d
  41ec69:	dec    esp
  41ec6a:	into   
  41ec6b:	call   0x3f1db7
  41ec70:	clc    
  41ec71:	and    BYTE PTR [edi],cl
  41ec73:	fsubr  QWORD PTR [ecx-0xa09ff6b]
  41ec79:	test   esi,edi
  41ec7b:	je     0x41ec43
  41ec7d:	in     al,0xfd
  41ec7f:	cmp    DWORD PTR [ebp-0x77c88d73],ebx
  41ec85:	cld    
  41ec86:	mov    BYTE PTR [esi-0x49],ch
  41ec89:	aam    0xe9
  41ec8b:	mov    ebx,DWORD PTR [ebp+0x21]
  41ec8e:	outs   dx,DWORD PTR ds:[esi]
  41ec8f:	or     al,0x3c
  41ec91:	stos   DWORD PTR es:[edi],eax
  41ec92:	or     BYTE PTR [edx-0x79],ch
  41ec95:	sub    eax,0x214ceb9f
  41ec9a:	add    al,0x0
	...
  41ecad:	add    BYTE PTR [eax],al
  41ecaf:	add    dh,dh
  41ecb1:	call   0x8bb5ba3f
  41ecb6:	loope  0x41ecb7
  41ecb8:	dec    esp
  41ecb9:	pop    edi
  41ecba:	dec    esi
  41ecbb:	inc    eax
  41ecbc:	in     al,0x65
  41ecbe:	sti    
  41ecbf:	(bad)  
  41ecc0:	fistp  DWORD PTR [eax]
  41ecc2:	dec    ebp
  41ecc3:	adc    DWORD PTR [eax],0xfffffff6
  41ecc6:	inc    ebp
  41ecc7:	cmp    eax,0xfffffff5
  41ecca:	cmp    DWORD PTR [esi-0x7d],edi
  41eccd:	mov    ecx,ecx
  41eccf:	mov    edi,ebp
  41ecd1:	add    eax,0x111cf11c
  41ecd6:	and    DWORD PTR [esi+0x63],0x6c01b0dd
  41ecdd:	scas   eax,DWORD PTR es:[edi]
  41ecde:	push   edi
  41ecdf:	pop    ebx
  41ece0:	leave  
  41ece1:	fld    DWORD PTR [eax]
  41ece3:	push   ebp
  41ece4:	jo     0x41ece7
  41ece6:	mov    DWORD PTR [ebp-0x1],edx
  41ece9:	pop    ebx
  41ecea:	call   0x4b154f23
  41ecef:	push   ebp
  41ecf0:	jmp    0xd63b733e
  41ecf5:	pop    edi
  41ecf6:	hlt    
  41ecf7:	jl     0x41ed56
  41ecf9:	jg     0x41ecb3
  41ecfb:	inc    ebp
  41ecfd:	add    al,BYTE PTR [edi+0x61836a42]
  41ed03:	loopne 0x41ed67
  41ed05:	and    DWORD PTR [ecx-0x14],0x62
  41ed09:	push   ecx
  41ed0a:	lea    eax,[edx-0x42]
  41ed0d:	jge    0x41ed50
  41ed0f:	or     al,0x32
  41ed11:	sbb    al,0x1
  41ed13:	mov    eax,DWORD PTR [eax]
	...
  41ed25:	add    BYTE PTR [eax],al
  41ed27:	add    BYTE PTR [edi],ah
  41ed29:	mov    ds:0xaa7a528d,al
  41ed2e:	(bad)  
  41ed2f:	push   esp
  41ed30:	bound  eax,QWORD PTR [edx]
  41ed32:	cmp    DWORD PTR [edi-0x6f8193],0x7a7f0275
  41ed3c:	pop    esi
  41ed3d:	add    eax,DWORD PTR [ebx]
  41ed3f:	sbb    eax,0x2
  41ed42:	add    BYTE PTR [eax],al
  41ed44:	loope  0x41ed5b
  41ed46:	add    al,0x8b
  41ed48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed49:	or     ch,BYTE PTR [edx+0x1]
  41ed4c:	mov    dl,0x6c
  41ed4e:	cld    
  41ed4f:	pop    ecx
  41ed50:	cmp    bh,BYTE PTR [edi+0x7d3dfd53]
  41ed56:	les    esi,FWORD PTR [edx-0x51]
  41ed59:	lea    edx,[eax+0xc]
  41ed5c:	ffreep st(4)
  41ed5e:	or     al,0xe8
  41ed60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed61:	add    eax,0x41e70000
  41ed66:	jno    0x41edce
  41ed68:	mov    BYTE PTR [ecx],cl
  41ed6a:	mov    DWORD PTR [edx+0x12],edx
  41ed6d:	mov    ecx,0x11882ec
  41ed72:	add    BYTE PTR [edi-0x11],cl
  41ed75:	mov    esp,0xd8e75008
  41ed7a:	sub    al,0xf4
  41ed7c:	popf   
  41ed7d:	sub    ax,0xfde4
  41ed81:	nop
  41ed82:	cmp    al,BYTE PTR [edx+eiz*2]
  41ed85:	fs xchg edx,eax
  41ed87:	adc    dh,0x8c
  41ed8a:	jmp    0x0:0x8a
	...
  41ed9d:	add    BYTE PTR [eax],al
  41ed9f:	add    BYTE PTR [eax-0x1b],dl
  41eda2:	fs in  eax,dx
  41eda4:	inc    esi
  41eda5:	fnsave [esi+0xf72f6]
  41edab:	or     ch,cl
  41edad:	lods   eax,DWORD PTR ds:[esi]
  41edae:	xor    eax,0x2fb0ba5c
  41edb3:	add    al,0x62
  41edb5:	stos   BYTE PTR es:[edi],al
  41edb6:	fs inc eax
  41edb8:	outs   dx,BYTE PTR ds:[esi]
  41edb9:	test   eax,0xa8a6405c
  41edbe:	je     0x41ee08
  41edc0:	add    BYTE PTR [eax],0xaf
  41edc3:	dec    esi
  41edc4:	(bad)  
  41edc5:	fldcw  WORD PTR [ebx+eax*8-0xf]
  41edc9:	fistp  WORD PTR [esi+0x48]
  41edcc:	pop    si
  41edce:	xor    DWORD PTR [esi+0x66],esi
  41edd1:	int3   
  41edd2:	sub    DWORD PTR [edx],esi
  41edd4:	popf   
  41edd5:	test   eax,0xa8b74db9
  41edda:	pop    esi
  41eddb:	retf   0xe33d
  41edde:	jmp    0xe8444fe6
  41ede3:	xor    DWORD PTR [edx],esp
  41ede5:	mov    bh,0x93
  41ede7:	pop    edx
  41ede8:	and    eax,0x9303e21c
  41eded:	lods   al,BYTE PTR ds:[esi]
  41edee:	cmp    ecx,DWORD PTR [ebp-0x25]
  41edf1:	xchg   ebp,eax
  41edf2:	add    eax,0x6d08db18
  41edf7:	cmc    
  41edf8:	lahf   
  41edf9:	lock pop esi
  41edfb:	dec    eax
  41edfc:	ds icebp 
  41edfe:	outs   dx,BYTE PTR ds:[esi]
  41edff:	int    0x5
  41ee01:	mov    ds:0x37e,eax
	...
  41ee16:	add    BYTE PTR [eax],al
  41ee18:	bound  esp,QWORD PTR [eax+0x1]
  41ee1b:	das    
  41ee1c:	dec    esi
  41ee1d:	pop    esi
  41ee1e:	jnp    0x41ee1d
  41ee20:	je     0x41ee78
  41ee22:	jbe    0x41ee11
  41ee24:	xor    ebx,DWORD PTR [ecx]
  41ee26:	call   0x24d4c967
  41ee2b:	int    0x5c
  41ee2d:	adc    eax,0xa2eaf47b
  41ee32:	and    al,0xc9
  41ee34:	fisubr DWORD PTR ds:0x180ad3e9
  41ee3a:	cld    
  41ee3b:	pusha  
  41ee3c:	jl     0x41ee07
  41ee3e:	mov    edi,ebp
  41ee40:	test   DWORD PTR [edx-0x3f],ebx
  41ee43:	fst    QWORD PTR [esi+0x2c20fbc9]
  41ee49:	mov    eax,ds:0x35eb1e72
  41ee4e:	mov    BYTE PTR [edi+0x72e7d855],bh
  41ee54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee55:	adc    eax,0x8b8eed76
  41ee5a:	or     bl,al
  41ee5c:	imul   eax,DWORD PTR [ecx],0x156f4331
  41ee62:	test   DWORD PTR [ecx],ebp
  41ee64:	std    
  41ee65:	in     al,dx
  41ee66:	xchg   DWORD PTR [esi+esi*2],ebp
  41ee69:	adc    ah,dl
  41ee6b:	push   ss
  41ee6c:	push   edi
  41ee6d:	arpl   WORD PTR [ebx-0x57],cx
  41ee70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee71:	pusha  
  41ee72:	add    al,BYTE PTR [esi]
  41ee74:	mov    dh,0xdd
  41ee76:	dec    ebx
  41ee77:	push   0x3b
  41ee79:	out    dx,al
  41ee7a:	inc    ebx
  41ee7b:	push   0x0
	...
  41ee8d:	add    BYTE PTR [eax],al
  41ee8f:	add    BYTE PTR [ebx],ah
  41ee91:	out    dx,al
  41ee92:	aaa    
  41ee93:	outs   dx,DWORD PTR ds:[esi]
  41ee94:	test   eax,0x6099c78b
  41ee99:	mov    ah,0x5a
  41ee9b:	cmp    al,0x8b
  41ee9d:	sbb    edx,DWORD PTR ds:0xed60ace9
  41eea3:	push   0xfffffffd
  41eea5:	in     eax,dx
  41eea6:	dec    edi
  41eea7:	add    BYTE PTR [eax+0x6c5610af],dl
  41eead:	pusha  
  41eeae:	ja     0x41eeb8
  41eeb0:	or     BYTE PTR [ebx],0x83
  41eeb3:	jle    0x41eea8
  41eeb5:	xchg   esi,eax
  41eeb6:	fdiv   DWORD PTR [eax+edi*8+0x53]
  41eeba:	add    DWORD PTR [eax],eax
  41eebc:	jle    0x41eecb
  41eebe:	or     eax,0xda4a84
  41eec3:	add    ah,ah
  41eec5:	test   BYTE PTR [ecx*4+0x54e40196],cl
  41eecc:	sbb    dl,0x0
  41eecf:	mov    ebx,DWORD PTR [ebp-0x37]
  41eed2:	mov    ecx,eax
  41eed4:	inc    eax
  41eed5:	pushf  
  41eed6:	xor    BYTE PTR [eax-0x14],dl
  41eed9:	jg     0x41eedb
  41eedb:	call   0x3f1cac
  41eee0:	bndldx (bad),[eax+0x34]
  41eee4:	xlat   BYTE PTR ss:[ebx]
  41eee6:	in     al,dx
  41eee7:	mov    edx,DWORD PTR [ebp+0x63]
  41eeea:	inc    esi
  41eeeb:	cmp    BYTE PTR [ebx],dh
  41eeed:	jo     0x41eede
  41eeef:	push   DWORD PTR [esi+edx*4]
  41eef2:	mov    ebx,0x74
	...
  41ef07:	add    BYTE PTR [ebx-0x6a],ch
  41ef0a:	fdiv   DWORD PTR [eax+edi*2+0x53]
  41ef0e:	add    DWORD PTR [ecx],eax
  41ef10:	lock sbb al,0xe4
  41ef13:	sub    eax,0x8b00d817
  41ef18:	or     eax,0xb4e89c5
  41ef1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef1e:	xchg   DWORD PTR [ebp+0x57],eax
  41ef21:	test   al,0x66
  41ef23:	add    DWORD PTR [ebx+0x5a],esp
  41ef26:	fdivr  st,st(7)
  41ef28:	inc    esp
  41ef29:	arpl   WORD PTR [esi+0x38],di
  41ef2c:	mov    al,0x9a
  41ef2e:	or     al,0x85
  41ef30:	repnz xchg ecx,eax
  41ef32:	sbb    cl,BYTE PTR [ebx-0x791f3a9e]
  41ef38:	arpl   WORD PTR [edi+0x49],si
  41ef3b:	lock fcmovnb st,st(1)
  41ef3e:	or     BYTE PTR [ecx+0x3e7e4e9f],cl
  41ef44:	push   0xf
  41ef46:	mov    ebp,0x2652a71e
  41ef4b:	dec    ebx
  41ef4c:	test   BYTE PTR [ecx-0x613bf],0x7a
  41ef53:	dec    edx
  41ef54:	into   
  41ef55:	pop    edx
  41ef56:	mov    ss:0x65830262,eax
  41ef5c:	mov    al,BYTE PTR [edx]
  41ef5e:	dec    edi
  41ef5f:	pop    esi
  41ef60:	adc    al,BYTE PTR [edx]
  41ef62:	dec    ebx
  41ef63:	(bad)  
  41ef64:	mov    al,ds:0x1388fffe
  41ef69:	and    dh,BYTE PTR [ebx]
  41ef6b:	rol    BYTE PTR [eax],0x0
	...
  41ef7e:	add    BYTE PTR [eax],al
  41ef80:	out    0xd0,eax
  41ef82:	js     0x41ef96
  41ef84:	(bad)  [ecx+0x24]
  41ef87:	sub    DWORD PTR [ebx+0x5b65fb36],0x0
  41ef8e:	je     0x41ef96
  41ef90:	add    al,0xd9
  41ef92:	add    eax,0xc3426374
  41ef97:	jle    0x41ef94
  41ef99:	sub    eax,0x2520000
  41ef9e:	push   ebx
  41ef9f:	push   esi
  41efa0:	adc    eax,0xa2310474
  41efa5:	out    0x5c,eax
  41efa7:	call   0x41f271
  41efac:	ffreep st(1)
  41efae:	jns    0x41f00c
  41efb0:	fld    DWORD PTR [eax+0x3c]
  41efb3:	xor    DWORD PTR [eax],esi
  41efb5:	jge    0x41ef7b
  41efb7:	jae    0x41f020
  41efb9:	dec    ecx
  41efba:	push   eax
  41efbb:	add    al,0xb5
  41efbd:	je     0x41ef3f
  41efbf:	jbe    0x41f02f
  41efc1:	(bad)  
  41efc3:	ja     0x41f017
  41efc5:	pop    eax
  41efc6:	popa   
  41efc7:	or     al,0x1d
  41efc9:	(bad)  
  41efca:	fild   QWORD PTR [eiz*4+0x530953f5]
  41efd1:	sbb    DWORD PTR [edx],ebp
  41efd3:	fisttp WORD PTR [edx+0x60]
  41efd6:	and    DWORD PTR [ecx+eiz*8],edi
  41efd9:	das    
  41efda:	ds mov esp,0x872599ea
  41efe0:	lods   eax,DWORD PTR ds:[esi]
  41efe1:	loopne 0x41f051
  41efe3:	cmp    eax,DWORD PTR [eax]
	...
  41eff5:	add    BYTE PTR [eax],al
  41eff7:	add    BYTE PTR [esi+0x60],bl
  41effa:	fcmovu st,st(6)
  41effc:	jo     0x41f05e
  41effe:	aam    0x86
  41f000:	(bad)  
  41f001:	in     al,0x17
  41f003:	pop    ss
  41f004:	mov    edx,DWORD PTR [edx]
  41f006:	sti    
  41f007:	add    cl,ah
  41f009:	call   0xc2bf:0x2b3107e5
  41f010:	bound  ecx,QWORD PTR [edi+eiz*2]
  41f013:	in     al,dx
  41f014:	pop    ecx
  41f015:	mov    BYTE PTR [ebx+0x45],cl
  41f018:	jecxz  0x41f032
  41f01a:	add    ch,BYTE PTR [edi]
  41f01c:	mov    bl,0x86
  41f01e:	cmp    bl,dh
  41f020:	out    dx,al
  41f021:	jle    0x41f00a
  41f023:	dec    ebx
  41f024:	das    
  41f025:	mov    bl,0x9e
  41f027:	(bad)  
  41f028:	loop   0x41efbb
  41f02a:	mov    cl,0x4
  41f02c:	icebp  
  41f02d:	fistp  DWORD PTR [esi+0x44]
  41f030:	push   ds
  41f031:	pusha  
  41f032:	stos   BYTE PTR es:[edi],al
  41f033:	pop    es
  41f034:	mov    ds:0x10c629c7,eax
  41f039:	pusha  
  41f03a:	push   cs
  41f03b:	xchg   BYTE PTR [ecx-0x42],cl
  41f03e:	pop    esi
  41f03f:	dec    eax
  41f040:	push   0x60
  41f042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f043:	fcmovnu st,st(2)
  41f045:	pushf  
  41f046:	cmc    
  41f047:	jl     0x41efe9
  41f049:	add    eax,0x6052486f
  41f04e:	add    DWORD PTR [ecx+eax*2-0x1d1736a6],esp
  41f055:	lahf   
  41f056:	fmul   QWORD PTR [edi+0x1b]
  41f059:	cwde   
  41f05a:	fmul   QWORD PTR [edx]
	...
  41f070:	jl     0x41f0cc
  41f072:	push   esi
  41f073:	int    0x99
  41f075:	xchg   edi,eax
  41f076:	clc    
  41f077:	shl    DWORD PTR [edx-0x3716fde8],0x18
  41f07e:	or     eax,0xf2609be9
  41f083:	push   ds
  41f084:	ja     0x41f032
  41f086:	or     BYTE PTR [ebx],ch
  41f088:	(bad)  
  41f089:	daa    
  41f08a:	sbb    DWORD PTR [eax+eiz*4-0x23],esi
  41f08e:	call   0xfc54f837
  41f093:	ins    DWORD PTR es:[edi],dx
  41f094:	sahf   
  41f095:	xchg   DWORD PTR ds:0xe8160e6a,eax
  41f09b:	rcr    dh,1
  41f09d:	mov    fs,WORD PTR [ebp*8+0x62198d61]
  41f0a4:	sub    cl,ah
  41f0a6:	addr16 test eax,0xed42d85e
  41f0ac:	pop    es
  41f0ad:	icebp  
  41f0ae:	sti    
  41f0af:	aad    0x45
  41f0b1:	jmp    0xa9af4706
  41f0b6:	adc    ch,BYTE PTR [ecx-0xa3aa79f]
  41f0bc:	push   es
  41f0bd:	pushf  
  41f0be:	or     BYTE PTR [esi+edi*1+0x12],ch
  41f0c2:	mov    DWORD PTR [edi+0x2b5ab579],esp
  41f0c8:	pop    edx
  41f0c9:	fst    DWORD PTR [edx+0x72]
  41f0cc:	jno    0x41f12f
  41f0ce:	dec    ebp
  41f0cf:	lds    ebx,FWORD PTR [ecx+0x61]
  41f0d2:	inc    ebx
  41f0d3:	loope  0x41f0d5
	...
  41f0e5:	add    BYTE PTR [eax],al
  41f0e7:	add    BYTE PTR [esi+0x2182191a],dh
  41f0ed:	jmp    0x304:0x87ce0053
  41f0f4:	dec    esp
  41f0f5:	fld    QWORD PTR ds:0x98c3c3b
  41f0fb:	push   eax
  41f0fc:	mov    fs,WORD PTR [esi+0x3a09e818]
  41f102:	cld    
  41f103:	push   DWORD PTR [eax]
  41f105:	fsubr  QWORD PTR [esi]
  41f107:	rol    BYTE PTR [edi+0x1c107016],0x98
  41f10e:	or     BYTE PTR [ebx-0x2d96ea9b],cl
  41f114:	add    edx,DWORD PTR [ebp+0x3c5ae8cc]
  41f11a:	cld    
  41f11b:	call   FWORD PTR [edi+eiz*4-0x42]
  41f11f:	add    al,0xfb
  41f121:	xchg   esp,eax
  41f122:	dec    edi
  41f123:	and    al,0xc7
  41f125:	les    ecx,FWORD PTR [ebx+0x8]
  41f128:	js     0x41f101
  41f12a:	adc    DWORD PTR [ecx-0x3d],0xffffffb4
  41f12e:	into   
  41f12f:	sbb    BYTE PTR [eax],bh
  41f131:	pop    ss
  41f132:	add    al,ch
  41f134:	idiv   BYTE PTR [esp+edi*8]
  41f137:	dec    DWORD PTR [ecx]
  41f139:	fiadd  DWORD PTR [eax]
  41f13b:	push   esi
  41f13c:	inc    eax
  41f13d:	pop    es
  41f13e:	push   ebp
  41f13f:	mov    esi,ebp
  41f141:	or     eax,0x92874e87
  41f146:	jne    0x42c6d3
	...
  41f160:	and    esp,edx
  41f162:	mov    eax,ds:0xbc597b00
  41f167:	jne    0x41f0ef
  41f169:	pop    esp
  41f16a:	(bad)  
  41f16b:	jmp    DWORD PTR [eax]
  41f16d:	out    dx,eax
  41f16e:	cmp    DWORD PTR [edi+eiz*2-0x27],0x94627400
  41f176:	dec    ebp
  41f177:	or     al,dl
  41f179:	mov    ds:0xfe626a04,al
  41f17e:	lock jae 0x41f107
  41f181:	adc    bh,BYTE PTR [ebx+0x3]
  41f184:	fidiv  DWORD PTR [edx-0xf]
  41f187:	adc    dl,BYTE PTR [edx-0x1effbfd8]
  41f18d:	mov    esi,0xfaa488fb
  41f192:	jp     0x41f1db
  41f194:	arpl   WORD PTR [ecx-0x2f42f7c6],cx
  41f19a:	mov    esi,0x77d06203
  41f19f:	out    dx,al
  41f1a0:	loop   0x41f182
  41f1a2:	add    al,0x73
  41f1a4:	pop    edx
  41f1a5:	mov    edi,DWORD PTR [edx]
  41f1a7:	or     BYTE PTR [edx],cl
  41f1a9:	mov    ecx,0x13f5ff9f
  41f1ae:	rol    BYTE PTR [edi+0x4427964],0xdb
  41f1b5:	sar    ah,0x86
  41f1b8:	and    al,0xfe
  41f1ba:	dec    ebp
  41f1bb:	shr    ecx,0xd1
  41f1be:	add    BYTE PTR [ebx-0x77031a50],al
	...
  41f1d8:	and    ecx,DWORD PTR [edx]
  41f1da:	jge    0x41f21a
  41f1dc:	outs   dx,BYTE PTR ds:[esi]
  41f1dd:	imul   edx,DWORD PTR [edi],0x39
  41f1e0:	adc    edi,edx
  41f1e2:	jno    0x41f203
  41f1e4:	fld    st(1)
  41f1e6:	or     BYTE PTR [ecx],al
  41f1e8:	and    ecx,DWORD PTR [edx]
  41f1ea:	daa    
  41f1eb:	rcl    BYTE PTR [ecx],1
  41f1ed:	pop    es
  41f1ee:	jp     0x41f1f1
  41f1f0:	and    BYTE PTR [ecx+0x55],bh
  41f1f3:	or     al,0xe6
  41f1f5:	ret    0xf679
  41f1f8:	dec    edx
  41f1f9:	add    al,0x79
  41f1fb:	or     ebp,edi
  41f1fd:	inc    esp
  41f1fe:	add    eax,0x2ef62387
  41f203:	shl    BYTE PTR [ecx+0x620c6583],0xd9
  41f20a:	outs   dx,BYTE PTR ds:[esi]
  41f20b:	inc    ebp
  41f20c:	outs   dx,BYTE PTR ds:[esi]
  41f20d:	sbb    al,0xb7
  41f20f:	push   ebp
  41f210:	jmp    0x41f21b
  41f212:	push   0x2e
  41f214:	bound  eax,QWORD PTR [ebp+0x22231e2]
  41f21a:	dec    ebx
  41f21b:	add    al,0x62
  41f21d:	fst    DWORD PTR [esi+edx*2+0xbcd8ceb]
  41f224:	loope  0x41f235
  41f226:	jno    0x41f226
  41f228:	fidivr DWORD PTR [ebp+ecx*1+0x18]
  41f22c:	jmp    0x41f24b
  41f22e:	rol    bl,cl
  41f230:	mov    dh,0x10
  41f232:	sar    DWORD PTR [edx+0x15],cl
  41f235:	add    al,0xf1
  41f237:	xor    ah,BYTE PTR [edx]
  41f239:	push   esi
  41f23a:	ret    
  41f23b:	inc    BYTE PTR [eax]
	...
  41f24d:	add    BYTE PTR [eax],al
  41f24f:	add    bh,ch
  41f251:	pop    eax
  41f252:	jmp    0x5628:0x46646203
  41f259:	pop    ecx
  41f25a:	out    dx,al
  41f25b:	sbb    esp,DWORD PTR [edx-0x7b]
  41f25e:	sbb    eax,DWORD PTR [ebx+ebx*4+0x18]
  41f262:	push   ds
  41f263:	stc    
  41f264:	loopne 0x41f275
  41f266:	adc    al,0x61
  41f268:	fldcw  WORD PTR [esi-0x26757d1f]
  41f26e:	cld    
  41f26f:	push   cs
  41f270:	jmp    0xe91dda14
  41f275:	cmp    ch,dl
  41f277:	add    esp,ebp
  41f279:	(bad)  [ebx+eax*8+0x31]
  41f27d:	test   al,0xba
  41f27f:	pop    eax
  41f280:	xor    dl,BYTE PTR [eax]
  41f282:	cmc    
  41f283:	push   ebx
  41f284:	ins    BYTE PTR es:[edi],dx
  41f285:	cdq    
  41f286:	jmp    0x611e940d
  41f28b:	ins    DWORD PTR es:[edi],dx
  41f28c:	pop    esi
  41f28d:	add    al,0x10
  41f28f:	jnp    0x41f2b8
  41f291:	aad    0x6e
  41f293:	mov    edx,0xe800a8e8
  41f298:	pusha  
  41f299:	es jmp 0xfc51b0c9
  41f29f:	ins    DWORD PTR es:[edi],dx
  41f2a0:	and    DWORD PTR [ebx+0xc60722f],ecx
  41f2a6:	dec    ebx
  41f2a7:	in     eax,dx
  41f2a8:	pusha  
  41f2a9:	xchg   edi,eax
  41f2aa:	add    al,0xb6
  41f2ac:	stos   BYTE PTR es:[edi],al
  41f2ad:	test   eax,0xe791dcfb
  41f2b2:	inc    eax
  41f2b3:	jmp    0x41f2b8
	...
  41f2c8:	loopne 0x41f2e4
  41f2ca:	or     eax,0x87d5bfe8
  41f2cf:	lahf   
  41f2d0:	pop    ebp
  41f2d1:	pusha  
  41f2d2:	add    BYTE PTR [edi-0x2103f196],ch
  41f2d8:	pushf  
  41f2d9:	aad    0x87
  41f2db:	daa    
  41f2dc:	pop    edx
  41f2dd:	pusha  
  41f2de:	add    BYTE PTR [edi-0x3903f1a6],ah
  41f2e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2e5:	aad    0xb0
  41f2e7:	call   0xa970cc06
  41f2ec:	lahf   
  41f2ed:	mov    dl,0x5a
  41f2ef:	adc    ah,BYTE PTR [eax]
  41f2f1:	xlat   BYTE PTR ds:[ebx]
  41f2f2:	add    BYTE PTR [ebx],dl
  41f2f4:	bound  eax,QWORD PTR [ecx-0x26e20e38]
  41f2fa:	call   0x11d4690
  41f2ff:	or     DWORD PTR fs:[ebx-0x273795ca],ecx
  41f306:	jp     0x41f2bc
  41f308:	jb     0x41f323
  41f30a:	mov    ch,BYTE PTR [edx+esi*4]
  41f30d:	push   edi
  41f30e:	inc    esi
  41f30f:	test   DWORD PTR [ebx+0x1b],edi
  41f312:	jle    0x41f320
  41f314:	out    0xd2,al
  41f316:	or     cl,ch
  41f318:	or     al,0xea
  41f31a:	adc    ch,0x89
  41f31d:	paddb  mm2,mm4
  41f320:	xchg   DWORD PTR [ecx-0x3f],ebx
  41f323:	add    BYTE PTR [ecx+0xf0fbec1],cl
  41f329:	adc    eax,0x4d81
	...
  41f33e:	add    BYTE PTR [eax],al
  41f340:	aaa    
  41f341:	cld    
  41f342:	call   0xd973ae57
  41f347:	xor    ecx,DWORD PTR [ebx-0x21743e6b]
  41f34d:	xor    DWORD PTR [ecx+0x31fc774d],eax
  41f353:	shl    BYTE PTR [ebx+0x2f],0x71
  41f357:	add    cl,BYTE PTR [ebx+0x19]
  41f35a:	dec    ebx
  41f35b:	push   ecx
  41f35c:	fsub   DWORD PTR [esi-0x5b322677]
  41f362:	adc    DWORD PTR [edi+ebx*1-0x1a],0x7f
  41f367:	fstp   TBYTE PTR [edi+0x7f0b8691]
  41f36d:	push   ebx
  41f36e:	jo     0x41f3de
  41f370:	push   0x5f448315
  41f375:	in     eax,0x80
  41f377:	stc    
  41f378:	push   esi
  41f379:	xchg   BYTE PTR [ebx],al
  41f37b:	push   0x9
  41f37d:	mov    ds:0xe55f4483,al
  41f382:	jmp    0x29456e8c
  41f387:	jne    0x41f353
  41f389:	cwde   
  41f38a:	xchg   BYTE PTR [ebx],al
  41f38c:	mov    eax,0xb7c9312e
  41f391:	leave  
  41f392:	jl     0x41f3c1
  41f394:	xchg   edi,eax
  41f395:	ret    0x257d
  41f398:	mov    ah,0x3b
  41f39a:	mov    esp,0x6afcb6a
  41f39f:	and    ebx,0xffffffc9
  41f3a2:	xchg   ebx,eax
  41f3a3:	push   ecx
	...
  41f3b8:	dec    esi
  41f3b9:	nop
  41f3ba:	jmp    0x41f347
  41f3bc:	add    DWORD PTR [edx],esi
  41f3be:	mov    ds:0x1d98972,al
  41f3c3:	lock bound edx,QWORD PTR [ebx]
  41f3c6:	jmp    0xe900:0x79cdd940
  41f3cd:	(bad)  
  41f3ce:	sub    esi,DWORD PTR [eax]
  41f3d0:	mul    esi
  41f3d2:	js     0x41f427
  41f3d4:	inc    esi
  41f3d5:	sub    al,0x84
  41f3d7:	mov    edi,0x102433d9
  41f3dc:	(bad)  
  41f3dd:	inc    DWORD PTR [eax+0x1aa63c7]
  41f3e3:	je     0x41f44a
  41f3e5:	jmp    0x41f3b1
  41f3e7:	xor    BYTE PTR [ebx],0x3
  41f3ea:	cmc    
  41f3eb:	(bad)  
  41f3ec:	jmp    0x41f416
  41f3ee:	ja     0x41f439
  41f3f0:	pop    esi
  41f3f1:	out    0xf9,eax
  41f3f3:	add    BYTE PTR [eax+0x5e618102],0x2
  41f3fa:	pop    edx
  41f3fb:	or     BYTE PTR [edx-0x46a4b96d],bh
  41f401:	cdq    
  41f402:	dec    ebp
  41f403:	shl    DWORD PTR [ecx+0x1b82ca77],0xa7
  41f40a:	cmp    BYTE PTR [edx+0x73c47e63],cl
  41f410:	pushf  
  41f411:	in     al,0x33
  41f413:	not    BYTE PTR [ebp+0x373be677]
  41f419:	lds    eax,FWORD PTR [ecx]
  41f41b:	push   0x0
	...
  41f42d:	add    BYTE PTR [eax],al
  41f42f:	add    BYTE PTR [eax-0x6d],ah
  41f432:	fist   DWORD PTR [edx]
  41f434:	xchg   esi,eax
  41f435:	daa    
  41f436:	jno    0x41f44a
  41f438:	mov    ecx,0x453723f3
  41f43d:	adc    BYTE PTR [ebx-0xa],bl
  41f440:	push   0xe1bfaa03
  41f445:	xor    al,0xd5
  41f447:	add    BYTE PTR [edx+0x69fe7ac1],dh
  41f44d:	push   edx
  41f44e:	imul   ebp,edx,0x7029d9e6
  41f454:	arpl   WORD PTR [eax+0x2b],bx
  41f457:	add    eax,0xd35f1bdb
  41f45c:	mov    ?,WORD PTR [edx]
  41f45e:	push   0xffffffe6
  41f460:	arpl   sp,bx
  41f462:	lods   al,BYTE PTR ds:[esi]
  41f463:	hlt    
  41f464:	jmp    0x8eab:0x327c9b14
  41f46b:	(bad)  
  41f46c:	loop   0x41f426
  41f46e:	jmp    0xbef35ed0
  41f473:	(bad)  
  41f474:	mov    dl,0xa6
  41f476:	outs   dx,BYTE PTR ds:[esi]
  41f477:	pop    eax
  41f478:	xchg   cl,ch
  41f47a:	(bad)  
  41f47b:	into   
  41f47c:	scas   eax,DWORD PTR es:[edi]
  41f47d:	pusha  
  41f47e:	sbb    DWORD PTR [ecx+0x7cf58c48],eax
  41f484:	push   edi
  41f485:	bound  ebx,QWORD PTR [edi+edi*8-0x4c1e551c]
  41f48c:	and    al,0xff
  41f48e:	xchg   DWORD PTR [edx-0x4d],edx
  41f491:	test   al,0x36
  41f493:	push   edi
	...
  41f4a8:	mov    cl,0xc
  41f4aa:	push   esi
  41f4ab:	and    BYTE PTR [edx],bh
  41f4ad:	test   al,0x41
  41f4af:	fisttp QWORD PTR [eax]
  41f4b1:	fldl2t 
  41f4b3:	jmp    0x6062:0x43d8d950
  41f4ba:	ret    0xee80
  41f4bd:	mov    bh,ch
  41f4bf:	js     0x41f457
  41f4c1:	fcmovb st,st(1)
  41f4c3:	mov    eax,ds:0x7ce9d8fd
  41f4c8:	and    DWORD PTR [ebp-0x7af27eff],esi
  41f4ce:	int    0x56
  41f4d0:	xor    esp,DWORD PTR [ecx+edi*1-0x327b40af]
  41f4d7:	sbb    edx,DWORD PTR [ebx]
  41f4d9:	adc    DWORD PTR [eax+0x10bade8],0x11d95276
  41f4e3:	sub    DWORD PTR [esi-0x2e],esp
  41f4e6:	ret    
  41f4e7:	jb     0x41f53e
  41f4e9:	mov    ch,0x18
  41f4eb:	aad    0x8c
  41f4ed:	pusha  
  41f4ee:	leave  
  41f4ef:	inc    ecx
  41f4f0:	out    dx,al
  41f4f1:	imul   eax,DWORD PTR [ecx],0xffffffe9
  41f4f4:	aaa    
  41f4f5:	sbb    eax,ebp
  41f4f7:	hlt    
  41f4f8:	stc    
  41f4f9:	out    dx,eax
  41f4fa:	cmp    BYTE PTR [eax+0x63],dh
  41f4fd:	push   esp
  41f4fe:	imul   ebp,ebp,0xffffffe6
  41f501:	lea    ecx,[eax]
  41f503:	jns    0x41f56b
  41f505:	lods   al,BYTE PTR ds:[esi]
  41f506:	pop    edx
  41f507:	les    esp,FWORD PTR [edi+edx*1+0xe909]
	...
  41f51e:	add    BYTE PTR [eax],al
  41f520:	mov    bl,0x60
  41f522:	repnz bound ecx,QWORD PTR [ebp-0x72fef74b]
  41f529:	scas   al,BYTE PTR es:[edi]
  41f52a:	sti    
  41f52b:	push   es
  41f52c:	loop   0x41f578
  41f52e:	jp     0x41f515
  41f530:	ja     0x41f54b
  41f532:	call   0x754e871c
  41f537:	lds    edx,FWORD PTR ds:0x9dd1cb62
  41f53d:	or     al,0xfc
  41f53f:	ficomp WORD PTR [eax-0x4c16fae9]
  41f545:	pusha  
  41f546:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f548:	pusha  
  41f549:	pop    ebp
  41f54a:	mov    ch,BYTE PTR [ecx]
  41f54c:	pop    esi
  41f54d:	add    DWORD PTR [eax-0xd2699a3],edi
  41f553:	sub    eax,0x3501e142
  41f558:	arpl   WORD PTR [eax-0x35],sp
  41f55b:	xchg   ecx,eax
  41f55c:	mov    DWORD PTR [ecx],edi
  41f55e:	add    ecx,ebp
  41f560:	dec    esi
  41f561:	adc    al,0x5b
  41f563:	stos   DWORD PTR es:[edi],eax
  41f564:	(bad)  
  41f565:	fst    DWORD PTR [ebp+0x62]
  41f568:	call   0xe854:0xe300e559
  41f56f:	inc    esp
  41f570:	dec    eax
  41f571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f572:	mov    ecx,esi
  41f574:	call   0x751b7fc8
  41f579:	mov    edx,?
  41f57b:	mov    DWORD PTR [edi-0x5076e316],esi
  41f581:	jmp    0x0:0x8918
	...
  41f598:	iret   
  41f599:	jmp    0x4476:0x2dd390c
  41f5a0:	lock adc eax,0xe5674c83
  41f5a6:	mov    DWORD PTR [esi-0x7d],ebx
  41f5a9:	aad    0xd8
  41f5ab:	cmp    DWORD PTR [eax+0x7b],eax
  41f5ae:	and    BYTE PTR [ecx+0x1a],dl
  41f5b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5b2:	dec    ebx
  41f5b3:	push   ecx
  41f5b4:	or     al,ch
  41f5b6:	into   
  41f5b7:	xor    eax,DWORD PTR [edx+0x4a85e92d]
  41f5bd:	(bad)  
  41f5be:	add    DWORD PTR [edi+eiz*1-0x26],0x7f
  41f5c3:	shl    BYTE PTR [esi+0x174489ef],0xe6
  41f5ca:	xor    ecx,ecx
  41f5cc:	or     esp,0x24
  41f5cf:	mov    ebx,DWORD PTR [edi+0x78470cb9]
  41f5d5:	push   ss
  41f5d6:	and    al,0x89
  41f5d8:	scas   eax,DWORD PTR es:[edi]
  41f5d9:	mov    ecx,0xb9478918
  41f5de:	adc    BYTE PTR [ebx],bh
  41f5e0:	popf   
  41f5e1:	adc    DWORD PTR [edx-0x3e],esi
  41f5e4:	dec    esp
  41f5e5:	lahf   
  41f5e6:	xchg   bl,al
  41f5e8:	push   eax
  41f5e9:	mov    esi,ds
  41f5eb:	pop    ebp
  41f5ec:	or     DWORD PTR [edx],ecx
  41f5ee:	cld    
  41f5ef:	imul   eax,esp,0x22047082
  41f5f5:	xor    BYTE PTR [edi+0x24],0x62
  41f5f9:	sub    al,0xf5
  41f5fb:	mov    ds:0x0,al
	...
  41f610:	ins    DWORD PTR es:[edi],dx
  41f611:	mov    ds:0x7d3c203c,eax
  41f616:	mov    dh,0x73
  41f618:	jo     0x41f615
  41f61a:	mov    al,0x40
  41f61c:	sbb    dl,0x7b
  41f61f:	mov    edi,0xcf7d1916
  41f624:	mov    ah,BYTE PTR [edi-0x79]
  41f627:	dec    DWORD PTR [ebp+0x3e537d11]
  41f62d:	in     al,dx
  41f62e:	stc    
  41f62f:	mov    ah,0xa2
  41f631:	adc    DWORD PTR [edi-0x4efc9541],edi
  41f637:	(bad)  
  41f638:	pop    ebp
  41f639:	add    ebp,0x47
  41f63c:	sbb    cl,BYTE PTR [ebx+edi*8-0x80]
  41f640:	dec    edx
  41f641:	imul   ecx,DWORD PTR cs:[esp+edi*4],0xffffff89
  41f646:	xor    esp,DWORD PTR [esp+edx*4]
  41f649:	jmp    0x41f645
  41f64b:	fld    DWORD PTR gs:[esi+0x1c]
  41f64f:	xor    al,0x6d
  41f651:	scas   eax,DWORD PTR es:[edi]
  41f652:	mov    ebp,0x3cea6069
  41f657:	aas    
  41f658:	sub    eax,0x22b5f408
  41f65d:	arpl   WORD PTR [ebx+0x4b],si
  41f660:	inc    esi
  41f661:	sbb    bl,al
  41f663:	adc    BYTE PTR [edi+edi*8-0x1d],dl
  41f667:	mov    bl,BYTE PTR [esi+0x56824de]
  41f66d:	xor    ah,ah
  41f66f:	jl     0x41f5f9
  41f671:	repnz xlat BYTE PTR ds:[ebx]
  41f673:	xor    eax,DWORD PTR [eax]
	...
  41f685:	add    BYTE PTR [eax],al
  41f687:	add    BYTE PTR [ecx+0x7688e41f],ah
  41f68d:	ficom  WORD PTR [eax]
  41f68f:	test   BYTE PTR [edx],ah
  41f691:	(bad)  
  41f692:	pop    ds
  41f693:	std    
  41f694:	push   edi
  41f695:	cli    
  41f696:	repnz mov ah,0x1c
  41f699:	fscale 
  41f69b:	push   esp
  41f69c:	xor    cl,BYTE PTR [eax]
  41f69e:	adc    al,0x14
  41f6a0:	fstp   DWORD PTR [ebp+0x56123fcd]
  41f6a6:	push   ds
  41f6a7:	and    BYTE PTR [esi-0xf],ch
  41f6aa:	enter  0xaf3d,0x8
  41f6ae:	les    si,DWORD PTR [ecx]
  41f6b1:	fidiv  WORD PTR [esi-0x180ba23d]
  41f6b7:	xor    ah,BYTE PTR [edx-0x24e058af]
  41f6bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6be:	add    eax,0xc019e1f8
  41f6c3:	add    al,0x6f
  41f6c5:	dec    edi
  41f6c6:	das    
  41f6c7:	dec    esp
  41f6c8:	addr16 sahf 
  41f6ca:	and    DWORD PTR [ebx-0x61],edi
  41f6cd:	push   edx
  41f6ce:	sahf   
  41f6cf:	pop    ds
  41f6d0:	push   esi
  41f6d1:	icebp  
  41f6d2:	jge    0x41f65a
  41f6d4:	pop    esi
  41f6d5:	or     BYTE PTR [ebp+0x38],bl
  41f6d8:	jle    0x41f693
  41f6da:	sub    al,BYTE PTR [eax-0x7a]
  41f6dd:	mov    ecx,0xd9857f19
  41f6e2:	add    ecx,eax
  41f6e4:	jle    0x41f6ee
  41f6e6:	or     edi,DWORD PTR [ebx-0x4f]
  41f6e9:	mov    ebp,0x7ae5
	...
  41f6fe:	add    BYTE PTR [eax],al
  41f700:	test   eax,0xa17ae1bd
  41f705:	mov    ebp,0xf22532d9
  41f70a:	out    0xe6,al
  41f70c:	push   ss
  41f70d:	or     BYTE PTR [edi+0x44],ch
  41f710:	mov    dh,0xdc
  41f712:	and    eax,0xe9c65a20
  41f717:	add    eax,edx
  41f719:	fcom   DWORD PTR [edx+0xc]
  41f71c:	test   DWORD PTR [ebp+ecx*1+0x1a19e2fc],0xbd71e7
  41f727:	loope  0x41f6e2
  41f729:	xor    al,0x55
  41f72b:	call   0x1e035391
  41f730:	bound  ecx,QWORD PTR [ecx+0x2]
  41f733:	xchg   edx,eax
  41f734:	arpl   bx,cx
  41f736:	shr    BYTE PTR [ebx-0x291bf847],0x5e
  41f73d:	or     ah,bh
  41f73f:	cmp    DWORD PTR [esi+0x1a],esp
  41f742:	or     BYTE PTR [ebp-0x16ff2e8f],0x30
  41f749:	push   edx
  41f74a:	popf   
  41f74b:	lds    ecx,FWORD PTR [ecx-0x2f]
  41f74e:	add    cl,ch
  41f750:	xor    ch,BYTE PTR [edi-0x1718dad]
  41f756:	nop
  41f757:	jmp    0xa634d0bd
  41f75c:	push   ebp
  41f75d:	in     eax,dx
  41f75e:	add    DWORD PTR [ebp+0x57d5868],edi
	...
  41f778:	push   esi
  41f779:	(bad)  [ebx]
  41f77b:	ins    BYTE PTR es:[edi],dx
  41f77c:	add    eax,DWORD PTR [edi]
  41f77e:	cld    
  41f77f:	jmp    0xfd6692cb
  41f784:	or     DWORD PTR [ebp-0x424295f9],0x5c34e92c
  41f78e:	xchg   ecx,eax
  41f78f:	jmp    0xeac9d0f5
  41f794:	mov    ecx,ebx
  41f796:	or     cl,ch
  41f798:	popa   
  41f799:	push   edx
  41f79a:	dec    ebp
  41f79b:	int    0x5d
  41f79d:	xchg   esi,eax
  41f79e:	xchg   DWORD PTR [edx],esp
  41f7a0:	cld    
  41f7a1:	xchg   esi,eax
  41f7a2:	add    al,0x72
  41f7a4:	(bad)  
  41f7a5:	pop    ebx
  41f7a6:	cld    
  41f7a7:	popa   
  41f7a8:	inc    esi
  41f7a9:	push   edx
  41f7aa:	inc    ebx
  41f7ab:	stc    
  41f7ac:	scas   al,BYTE PTR es:[edi]
  41f7ad:	push   edx
  41f7ae:	dec    ebp
  41f7af:	add    eax,0x8d96a2
  41f7b4:	dec    ebp
  41f7b5:	int    0x89
  41f7b7:	enter  0x5213,0x3e
  41f7bb:	add    ebx,ecx
  41f7bd:	mov    cl,0xc5
  41f7bf:	(bad)  
  41f7c1:	test   ebx,edi
  41f7c3:	(bad)  
  41f7c4:	mov    ebx,0x9f274580
  41f7c9:	jge    0x41f83f
  41f7cb:	add    al,0x97
  41f7cd:	shr    DWORD PTR [edi+0x7d],1
  41f7d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7d1:	shl    DWORD PTR [edi+ebx*2+0x3e],1
  41f7d5:	cld    
  41f7d6:	outs   dx,DWORD PTR ds:[esi]
  41f7d7:	jne    0x41f809
  41f7d9:	fsubr  DWORD PTR [eax+0x0]
	...
  41f7f0:	sbb    edx,0x0
  41f7f3:	lea    esi,[edi-0x47]
  41f7f6:	inc    esp
  41f7f7:	push   ecx
  41f7f8:	adc    BYTE PTR [eax-0x3],al
  41f7fb:	push   eax
  41f7fc:	jg     0x41f77f
  41f7fe:	repz (bad) 
  41f800:	int    0xea
  41f802:	jg     0x41f803
  41f804:	xchg   edx,eax
  41f805:	xor    ebp,edi
  41f807:	adc    eax,0x40d763
  41f80c:	leavew 
  41f80e:	and    eax,0x24774b00
  41f813:	dec    edi
  41f815:	mov    ecx,0xda3b084c
  41f81a:	xchg   DWORD PTR [edi+ebx*1-0x2e],eax
  41f81e:	std    
  41f81f:	mov    ah,0x2f
  41f821:	into   
  41f822:	or     BYTE PTR [eax],al
  41f824:	dec    ebx
  41f825:	or     eax,0xe8bad150
  41f82b:	inc    edx
  41f82c:	(bad)  
  41f82d:	cld    
  41f82e:	cld    
  41f82f:	test   DWORD PTR [ebx+0xc],ecx
  41f832:	or     BYTE PTR [esp+eax*1-0x3],0xfc
  41f837:	xor    edi,DWORD PTR [ebx+0x465e5d99]
  41f83d:	nop
  41f83e:	jnp    0x41f804
  41f840:	(bad)  
  41f841:	loopne 0x41f83f
  41f843:	push   ebp
  41f845:	xor    esp,esi
  41f847:	(bad)  
  41f848:	fmul   DWORD PTR [ebp-0x28]
  41f84b:	addr16 (bad) {k1}{z}
  41f851:	out    dx,eax
  41f852:	(bad)  
  41f853:	inc    DWORD PTR [eax]
	...
  41f865:	add    BYTE PTR [eax],al
  41f867:	add    BYTE PTR [ecx+0x34375e39],dl
  41f86d:	adc    al,0x5a
  41f86f:	add    ch,BYTE PTR [edx]
  41f871:	idiv   DWORD PTR [ebx]
  41f873:	mov    edi,0x25a48c9
  41f878:	sbb    bl,BYTE PTR [ebx-0x34]
  41f87b:	push   ebp
  41f87c:	fld    DWORD PTR [eax+0x68124d78]
  41f882:	fwait
  41f883:	call   0xf83e:0x43edf062
  41f88a:	inc    ah
  41f88c:	sub    BYTE PTR fs:[ebp+0x3f],dh
  41f890:	bound  ebp,QWORD PTR [edi*8-0x71685378]
  41f897:	call   0xb20c:0xc578f062
  41f89e:	sti    
  41f89f:	dec    DWORD PTR [esi]
  41f8a1:	mov    edx,ebx
  41f8a3:	add    BYTE PTR [esi-0x35],0x7e
  41f8a7:	jmp    0x41f8df
  41f8a9:	icebp  
  41f8aa:	(bad)  
  41f8ab:	push   DWORD PTR [ecx+0x4c314d44]
  41f8b1:	mov    dh,ah
  41f8b3:	inc    ebp
  41f8b4:	xchg   esp,eax
  41f8b5:	jge    0x41f8ea
  41f8b7:	and    al,0x6e
  41f8b9:	ficomp DWORD PTR [ebp+edi*8+0x62]
  41f8bd:	repnz push edi
  41f8bf:	add    BYTE PTR [ebx-0xe],ah
  41f8c2:	dec    DWORD PTR [edx-0x83e912]
  41f8c8:	adc    eax,0x43bcf3
	...
  41f8dd:	add    BYTE PTR [eax],al
  41f8df:	add    BYTE PTR [esi-0x27],al
  41f8e2:	sbb    eax,0xe999dc78
  41f8e7:	jmp    0x41f8e5
  41f8e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8ea:	call   0xf9d6e3f2
  41f8ef:	nop
  41f8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8f1:	shr    DWORD PTR [esi-0xb],1
  41f8f4:	xchg   ebp,eax
  41f8f5:	push   esi
  41f8f6:	sub    BYTE PTR es:[edx-0x57],bh
  41f8fa:	pop    esi
  41f8fb:	dec    ebx
  41f8fc:	pop    esi
  41f8fd:	(bad)  
  41f8fe:	mov    es,WORD PTR [edx+esi*1+0x4]
  41f902:	cmp    BYTE PTR [eax],cl
  41f904:	ficomp WORD PTR [ecx]
  41f906:	jmp    0x41f88f
  41f908:	fstp   st(2)
  41f90a:	jmp    0xc5d7e412
  41f90f:	neg    eax
  41f911:	popf   
  41f912:	int    0xfb
  41f914:	adc    eax,0x8a39e96f
  41f919:	xor    al,0xff
  41f91b:	add    al,0x62
  41f91d:	push   eax
  41f91e:	mul    BYTE PTR [edi]
  41f920:	jbe    0x41f974
  41f922:	scas   al,BYTE PTR es:[edi]
  41f923:	daa    
  41f924:	inc    edx
  41f925:	push   eax
  41f926:	hlt    
  41f927:	mov    ss,WORD PTR [ebx]
  41f929:	in     eax,0x60
  41f92b:	cmp    esp,DWORD PTR [esi+0x50]
  41f92e:	fsub   st(3),st
  41f930:	pop    ecx
  41f931:	jmp    0x5213:0xdb03
  41f937:	or     ecx,edi
  41f939:	fsubr  st,st(1)
  41f93b:	mov    ss,ecx
  41f93d:	mov    ebp,0xd4578909
  41f942:	ins    DWORD PTR es:[edi],dx
  41f943:	imul   eax,DWORD PTR [eax],0x0
	...
  41f955:	add    BYTE PTR [eax],al
  41f957:	add    BYTE PTR [ebp+0x4],al
  41f95a:	jmp    0xe9c:0xcdbd9190
  41f961:	fldl2t 
  41f963:	add    ebp,DWORD PTR [edx-0x5c]
  41f966:	icebp  
  41f967:	pop    eax
  41f968:	and    eax,0xddaa1199
  41f96d:	fld    DWORD PTR [eax]
  41f96f:	jmp    0x59676166
  41f974:	data16 fld DWORD PTR [eax]
  41f977:	mov    al,ds:0xe9fc03cb
  41f97c:	or     DWORD PTR [edi-0x3f],esp
  41f97f:	call   0x5cf49e5
  41f984:	or     al,0x4
  41f986:	cld    
  41f987:	jmp    0xbefeda85
  41f98c:	rol    BYTE PTR [ecx+esi*2],0x35
  41f990:	repz xchg edi,eax
  41f992:	and    al,0x1
  41f994:	mov    BYTE PTR [ecx+0x657d6d8d],ch
  41f99a:	add    ecx,ebp
  41f99c:	popa   
  41f99d:	test   eax,0xb58a2d8d
  41f9a2:	push   eax
  41f9a3:	pop    esp
  41f9a4:	and    eax,0xb61924bd
  41f9a9:	and    ebx,DWORD PTR [eax+0x7e]
  41f9ac:	sbb    BYTE PTR [eax-0x3b],0xd1
  41f9b0:	jmp    0xeb4a:0xa7540c43
  41f9b7:	call   0x65cfd31d
	...
  41f9d0:	inc    ebp
  41f9d1:	inc    DWORD PTR [eax]
  41f9d3:	jmp    0xe9431539
  41f9d8:	and    DWORD PTR [ebp+esi*2+0x7629dd40],ebx
  41f9df:	lods   al,BYTE PTR ds:[esi]
  41f9e0:	inc    eax
  41f9e1:	mov    BYTE PTR [eax],dl
  41f9e3:	bound  ebx,QWORD PTR [ebp-0x55d1df43]
  41f9e9:	aad    0x27
  41f9eb:	lods   eax,DWORD PTR ds:[esi]
  41f9ec:	jge    0x41f9cf
  41f9ee:	xchg   DWORD PTR [ecx+ebp*2+0x7d9dfba9],ebp
  41f9f5:	in     eax,0xe8
  41f9f7:	push   esp
  41f9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9f9:	add    al,0xfc
  41f9fb:	add    BYTE PTR [edi+0x1c207016],dh
  41fa01:	stos   DWORD PTR es:[edi],eax
  41fa02:	adc    BYTE PTR [ebx+0x75fdcebe],cl
  41fa08:	das    
  41fa09:	sar    ebp,0x74
  41fa0c:	push   edi
  41fa0d:	mov    cl,0xe8
  41fa0f:	sahf   
  41fa10:	dec    ecx
  41fa11:	clc    
  41fa12:	cld    
  41fa13:	pmullw mm0,QWORD PTR [edx+ebp*2+0x1]
  41fa18:	xchg   DWORD PTR ds:0x17360f5e,ebx
  41fa1e:	jmp    0x4662d226
  41fa23:	mov    edi,DWORD PTR [edi-0x4f]
  41fa26:	adc    al,ch
  41fa28:	mov    ebp,0xf0fffb82
  41fa2d:	fdiv   QWORD PTR [ecx]
  41fa2f:	test   BYTE PTR [ebp+0x244854],0x0
	...
  41fa46:	add    BYTE PTR [eax],al
  41fa48:	mov    bl,0xee
  41fa4a:	sub    ebx,DWORD PTR [ebx+edi*4-0x53247b2a]
  41fa51:	pop    edx
  41fa52:	nop
  41fa53:	add    BYTE PTR [ebx-0x448a022a],cl
  41fa59:	push   ebx
  41fa5a:	dec    eax
  41fa5b:	and    al,0xd7
  41fa5d:	stc    
  41fa5e:	outs   dx,BYTE PTR ds:[esi]
  41fa5f:	or     al,0xfc
  41fa61:	test   eax,0x2390e808
  41fa66:	std    
  41fa67:	inc    DWORD PTR [esi]
  41fa69:	sbb    eax,0x59007e6f
  41fa6e:	and    BYTE PTR [eax-0x74ff2985],al
  41fa74:	mov    bh,0xb1
  41fa76:	test   BYTE PTR [eax],al
  41fa78:	dec    ebx
  41fa79:	(bad)  
  41fa7a:	push   edx
  41fa7b:	push   eax
  41fa7c:	rcl    BYTE PTR [ebx+eax*4],0x84
  41fa80:	pop    ss
  41fa81:	dec    esi
  41fa82:	cld    
  41fa83:	dec    DWORD PTR [ebx+0x4f]
  41fa86:	and    BYTE PTR [edx+eiz*2],0x7c
  41fa8a:	add    al,0x0
  41fa8c:	bound  edi,QWORD PTR [ecx-0x78]
  41fa8f:	and    edx,edx
  41fa91:	out    dx,eax
  41fa92:	(bad)  
  41fa93:	dec    DWORD PTR [edx]
  41fa95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa96:	jo     0x41fa97
  41fa98:	adc    eax,0x1482d477
  41fa9d:	mov    WORD PTR [edx-0x77],es
  41faa0:	ins    BYTE PTR es:[edi],dx
  41faa1:	xchg   DWORD PTR [eax+0xc],edx
  41faa4:	cmp    esi,eax
  41faa6:	add    BYTE PTR [ebx-0x60],dh
  41faa9:	ja     0x41fafb
  41faab:	adc    BYTE PTR [eax],al
	...
  41fabd:	add    BYTE PTR [eax],al
  41fabf:	add    BYTE PTR [edi+esi*2+0x892fcfe],dl
  41fac6:	lea    ecx,ds:0xc3e837e8
  41facc:	stc    
  41facd:	out    dx,eax
  41face:	dec    DWORD PTR [eax-0x6764e864]
  41fad4:	(bad)  
  41fad5:	lock sbb eax,0x36
  41fad9:	sbb    eax,0x705e44e1
  41fade:	pusha  
  41fadf:	or     BYTE PTR [edx-0x13],ah
  41fae2:	add    BYTE PTR [ebx-0x17bfebea],cl
  41fae8:	inc    esi
  41fae9:	loopne 0x41faea
  41faeb:	(bad)  
  41faec:	fild   QWORD PTR [edi]
  41faee:	bound  ecx,QWORD PTR ds:0xe7498a51
  41faf4:	sbb    eax,0xe9fce07a
  41faf9:	(bad)  
  41fafa:	out    0x93,eax
  41fafc:	(bad)  
  41fafe:	inc    DWORD PTR [eax-0x77000413]
  41fb04:	(bad)  
  41fb05:	rol    DWORD PTR [edi+edi*8-0x6aef0ca3],cl
  41fb0c:	and    DWORD PTR [ebx-0xd9d6782],ebx
  41fb12:	inc    eax
  41fb13:	pop    esi
  41fb14:	fcomp  st(1)
  41fb16:	es cmp al,0xeb
  41fb19:	idiv   BYTE PTR [ebp+eax*8-0x1f442697]
  41fb20:	mov    cl,0xb5
  41fb22:	fisttp QWORD PTR [eax+eax*1+0x0]
	...
  41fb35:	add    BYTE PTR [eax],al
  41fb37:	add    BYTE PTR [edx*2+0x5c6e27b6],dh
  41fb3e:	test   BYTE PTR [edi],al
  41fb40:	bound  esp,QWORD PTR [edi-0x25a5b6d5]
  41fb46:	add    DWORD PTR [ebx],esi
  41fb48:	int3   
  41fb49:	add    bl,ah
  41fb4b:	mov    BYTE PTR [ebp+0x2212f085],bh
  41fb51:	lds    ebp,FWORD PTR [ebx]
  41fb53:	or     BYTE PTR [ebx+0x19],cl
  41fb56:	sar    DWORD PTR [edi+eax*4+0x3103f21b],cl
  41fb5d:	push   esp
  41fb5e:	into   
  41fb5f:	or     ecx,0xffffffa5
  41fb62:	sbb    ecx,DWORD PTR [ecx-0x319a2f5c]
  41fb68:	lds    eax,FWORD PTR [eax]
  41fb6a:	jmp    0x66d6:0x64cd308a
  41fb71:	push   ebp
  41fb72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb73:	add    al,0x62
  41fb75:	fldcw  WORD PTR [eax+0x1d]
  41fb78:	and    DWORD PTR [ebx-0x1be9cbda],ebp
  41fb7e:	ins    BYTE PTR es:[edi],dx
  41fb7f:	dec    ecx
  41fb80:	(bad)  
  41fb81:	test   eax,0xa6d903ff
  41fb86:	xchg   ecx,eax
  41fb87:	in     al,dx
  41fb88:	ja     0x41fb76
  41fb8a:	call   0x6553e692
  41fb8f:	int    0xf0
  41fb91:	xlat   BYTE PTR ds:[ebx]
  41fb92:	mov    edi,0xea3b84df
  41fb97:	add    esp,DWORD PTR [edx+0x54]
  41fb9a:	lods   eax,DWORD PTR ds:[esi]
  41fb9b:	or     eax,DWORD PTR [eax]
	...
  41fbad:	add    BYTE PTR [eax],al
  41fbaf:	add    bl,ah
  41fbb1:	add    bl,ch
  41fbb3:	push   cs
  41fbb4:	fild   QWORD PTR [eax+0x1]
  41fbb7:	jmp    0x63dd51d
  41fbbc:	fucomi st,st(1)
  41fbbe:	xchg   edi,eax
  41fbbf:	test   al,0x61
  41fbc1:	push   edx
  41fbc2:	inc    edx
  41fbc3:	icebp  
  41fbc4:	mov    bh,BYTE PTR [esi+0x76]
  41fbc7:	adc    eax,0x6279f281
  41fbcc:	lahf   
  41fbcd:	aad    0xe7
  41fbcf:	jge    0x41fbb1
  41fbd1:	mov    ch,0x0
  41fbd3:	adc    ch,BYTE PTR [edi+0x11a8b3ce]
  41fbd9:	icebp  
  41fbda:	imul   ebx,esi,0xd20ebeec
  41fbe0:	or     dh,0xb3
  41fbe3:	sub    BYTE PTR [edx+0x31],dl
  41fbe6:	call   FWORD PTR [esp+eiz*2-0x32]
  41fbea:	mov    bl,0x28
  41fbec:	jmp    0x7fd8:0xc9a855f0
  41fbf3:	mov    cl,0xb7
  41fbf5:	lock dec ebp
  41fbf7:	push   0x5f
  41fbf9:	(bad)  
  41fbfa:	out    0x23,eax
  41fbfc:	lods   al,BYTE PTR ds:[esi]
  41fbfd:	mov    esi,0xd715ed0c
  41fc02:	or     edx,DWORD PTR [esi+0x1e]
  41fc05:	out    0xe7,eax
  41fc07:	aad    0xe0
  41fc09:	pop    ss
  41fc0a:	cld    
  41fc0b:	or     BYTE PTR [esi+ecx*8-0x4d],0x28
  41fc10:	cwde   
  41fc11:	lock xor esi,ebp
	...
  41fc28:	in     al,dx
  41fc29:	mov    esi,0xce38821c
  41fc2e:	mov    bl,0x28
  41fc30:	xchg   al,bl
  41fc32:	rcl    DWORD PTR [edx+0x40],0x16
  41fc36:	add    edi,DWORD PTR [ecx]
  41fc38:	add    DWORD PTR [ecx-0x319dbe00],ebx
  41fc3e:	mov    bl,0xa8
  41fc40:	push   ebp
  41fc41:	push   es
  41fc42:	rol    DWORD PTR [eax],1
  41fc44:	mov    al,0xa
  41fc46:	or     eax,0xbbcf0ab7
  41fc4b:	call   0xf46f08f
  41fc50:	int3   
  41fc51:	xchg   ebp,eax
  41fc52:	or     al,0xc1
  41fc54:	push   ebx
  41fc55:	rol    DWORD PTR [ecx+0x64e4ae0],1
  41fc5b:	xor    edi,DWORD PTR [ebx-0xd]
  41fc5e:	add    al,0x6a
  41fc60:	push   esi
  41fc61:	repz add DWORD PTR [edx+0x65],ebp
  41fc65:	ret    0xc95a
  41fc68:	dec    ecx
  41fc69:	rol    BYTE PTR [eax],cl
  41fc6b:	(bad)  
  41fc6c:	ret    0x76da
  41fc6f:	call   0xd54a:0x9a84daba
  41fc76:	mov    bl,BYTE PTR [edx-0x656b2ab6]
  41fc7c:	cmp    dl,ch
  41fc7e:	xchg   esi,eax
  41fc7f:	call   0xd58a:0x9a83d53a
  41fc86:	scas   eax,DWORD PTR es:[edi]
  41fc87:	call   0x0:0x9ac2d58a
	...
  41fc9e:	add    BYTE PTR [eax],al
  41fca0:	jp     0x41fc77
  41fca2:	int3   
  41fca3:	call   0xd58a:0x9aced57a
  41fcaa:	sbb    DWORD PTR [edx-0x65292a76],0x7a
  41fcb1:	aad    0xde
  41fcb3:	call   0xd54a:0x9ae6d57a
  41fcba:	icebp  
  41fcbb:	call   0xd53a:0x9ab0d54a
  41fcc2:	sub    esp,0x5752c7b7
  41fcc8:	xchg   ecx,eax
  41fcc9:	ficom  WORD PTR [edi+0x55]
  41fccc:	push   es
  41fccd:	xchg   ecx,eax
  41fcce:	and    al,0x10
  41fcd0:	bound  ebx,QWORD PTR [edx]
  41fcd2:	add    BYTE PTR [eax-0x27],dl
  41fcd5:	stos   BYTE PTR es:[edi],al
  41fcd6:	mov    esi,ebp
  41fcd8:	pop    ebp
  41fcd9:	sbb    eax,0xf0a21638
  41fcde:	adc    al,al
  41fce0:	mov    ds:0xdb0bc873,al
  41fce5:	xor    esp,DWORD PTR [eax+eiz*1]
  41fce8:	jmp    0x41fd15
  41fcea:	and    al,0x3c
  41fcec:	jmp    0x41fd21
  41fcee:	and    al,0x44
  41fcf0:	fild   QWORD PTR [ebx]
  41fcf2:	and    al,0xc
  41fcf4:	xchg   edx,eax
  41fcf5:	jns    0x41fd67
  41fcf7:	and    al,0x72
  41fcf9:	inc    ebx
  41fcfa:	jmp    0x41fd4e
  41fcfc:	scas   eax,DWORD PTR es:[edi]
  41fcfd:	data16 fst QWORD PTR [edx]
  41fd00:	neg    BYTE PTR [eax+eax*2]
	...
  41fd17:	add    bh,bl
  41fd19:	scas   eax,DWORD PTR es:[edi]
  41fd1a:	push   ebx
  41fd1b:	add    eax,0xc2e73030
  41fd20:	(bad)  
  41fd21:	lock jmp FWORD PTR [ecx+0x52]
  41fd25:	mov    ebp,0xc84ffd35
  41fd2a:	repnz aas 
  41fd2c:	bound  ecx,QWORD PTR [ebx-0x7479dbcd]
  41fd32:	dec    ebx
  41fd33:	and    al,0x7a
  41fd35:	jae    0x41fcfa
  41fd37:	or     edi,DWORD PTR [edx-0x420151cf]
  41fd3d:	mov    BYTE PTR [ebx+eax*4],al
  41fd40:	mov    ds:0x1e88b7e3,al
  41fd45:	or     al,0x1c
  41fd47:	mov    DWORD PTR [esi],ecx
  41fd49:	adc    al,0x18
  41fd4b:	sub    DWORD PTR [ebx+0x587feefb],0xf
  41fd52:	push   ebx
  41fd53:	or     al,0x1b
  41fd55:	mov    dl,0x87
  41fd57:	dec    ebx
  41fd58:	ds sub al,0x87
  41fd5b:	push   ebx
  41fd5c:	inc    esi
  41fd5d:	fldenv [ecx]
  41fd5f:	jmp    0x28184eee
  41fd64:	ficomp DWORD PTR es:[eax-0x72]
  41fd68:	pop    ds
  41fd69:	(bad)  [ebx+eax*8-0x2f]
  41fd6d:	int3   
  41fd6e:	outs   dx,BYTE PTR ds:[esi]
  41fd6f:	retf   
  41fd70:	cmp    eax,0x6203609f
  41fd75:	push   eax
  41fd76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd77:	daa    
  41fd78:	xchg   BYTE PTR [eax-0x6a],dl
  41fd7b:	daa    
	...
  41fd90:	jp     0x41fde4
  41fd92:	stos   DWORD PTR es:[edi],eax
  41fd93:	pop    es
  41fd94:	loope  0x41fdaf
  41fd96:	xchg   ebp,eax
  41fd97:	or     bl,bl
  41fd99:	int3   
  41fd9a:	add    DWORD PTR [edx-0x33],edx
  41fd9d:	fldl2t 
  41fd9f:	call   0x43d9a891
  41fda4:	mov    dl,0xf1
  41fda6:	dec    eax
  41fda7:	jp     0x41fdb6
  41fda9:	std    
  41fdaa:	pop    esi
  41fdab:	inc    edi
  41fdac:	ds mov ebp,0x954656ea
  41fdb2:	sub    ebx,ebx
  41fdb4:	jno    0x41fd6b
  41fdb6:	and    eax,0x39d5a707
  41fdbb:	in     al,dx
  41fdbc:	fisub  DWORD PTR [edx-0x16]
  41fdbf:	add    ebp,ebx
  41fdc1:	xchg   esp,eax
  41fdc2:	in     eax,dx
  41fdc3:	rcl    ebp,0xab
  41fdc6:	outs   dx,BYTE PTR ds:[esi]
  41fdc7:	inc    ebx
  41fdc8:	adc    bp,WORD PTR [esi]
  41fdcb:	add    al,ch
  41fdcd:	cld    
  41fdce:	pop    esi
  41fdcf:	inc    eax
  41fdd0:	xchg   BYTE PTR [ebp-0x2ee172d7],bh
  41fdd6:	add    ecx,DWORD PTR [edi+0x61cdb521]
  41fddc:	fst    QWORD PTR [ebp+ebx*8-0x1e4ade72]
  41fde3:	xchg   BYTE PTR [ebp-0x28],bh
  41fde6:	cmc    
  41fde7:	or     bl,BYTE PTR [edx]
  41fde9:	test   DWORD PTR [eax],eax
  41fdeb:	out    dx,eax
  41fdec:	mov    ds:0x8ce90a95,eax
  41fdf1:	rol    dl,cl
  41fdf3:	scas   al,BYTE PTR es:[edi]
	...
  41fe08:	imul   edx,edi,0xffffffe7
  41fe0b:	in     eax,0xa3
  41fe0d:	xchg   ebp,eax
  41fe0e:	or     ch,al
  41fe10:	sar    ebx,1
  41fe12:	pop    edx
  41fe13:	scas   eax,DWORD PTR es:[edi]
  41fe14:	call   0x87a7:0x1d05c55a
  41fe1b:	dec    ebp
  41fe1c:	in     eax,0xef
  41fe1e:	adc    BYTE PTR [ebx+edx*4+0x9],ah
  41fe22:	push   eax
  41fe23:	cli    
  41fe24:	cld    
  41fe25:	repz shl DWORD PTR [edi],cl
  41fe28:	sbb    ebp,edi
  41fe2a:	test   BYTE PTR [ecx],ch
  41fe2c:	xchg   edx,eax
  41fe2d:	outs   dx,DWORD PTR ds:[esi]
  41fe2e:	xchg   DWORD PTR [ebp+edx*1-0x73eeb9af],esp
  41fe35:	scas   al,BYTE PTR es:[edi]
  41fe36:	dec    edi
  41fe37:	jno    0x41fe53
  41fe39:	aam    0xfb
  41fe3b:	je     0x41fe5a
  41fe3d:	std    
  41fe3e:	adc    eax,0xbc0d51
  41fe43:	fs mov BYTE PTR es:[ecx+0x21],al
  41fe48:	ss cld 
  41fe4a:	outs   dx,DWORD PTR ds:[esi]
  41fe4b:	sbb    eax,0xd6c75a30
  41fe50:	aam    0x13
  41fe52:	jmp    0xfc3d0912
  41fe57:	jb     0x41fe0a
  41fe59:	push   esi
  41fe5a:	repz xor eax,0xe900717c
  41fe60:	sar    ebx,1
  41fe62:	dec    esi
  41fe63:	sbb    dh,BYTE PTR [eax-0x2]
  41fe66:	adc    eax,0xbbac51
  41fe6b:	add    BYTE PTR fs:[eax],al
	...
  41fe7e:	add    BYTE PTR [eax],al
  41fe80:	mov    eax,ds:0x343a1186
  41fe85:	inc    BYTE PTR [edi-0x20d0149]
  41fe8b:	add    BYTE PTR [ebx-0xcfb1729],cl
  41fe91:	xlat   BYTE PTR ds:[ebx]
  41fe92:	add    BYTE PTR [ebx-0x1731b50d],cl
  41fe98:	sub    eax,0x9dfffb80
  41fe9d:	dec    edx
  41fe9e:	inc    edi
  41fe9f:	lock adc ecx,DWORD PTR [ecx+0x4a7b0093]
  41fea6:	inc    edi
  41fea7:	hlt    
  41fea8:	mov    ds:0x4b009451,eax
  41fead:	dec    esp
  41feae:	rcr    DWORD PTR [ebx-0x6e],0x13
  41feb2:	push   esi
  41feb3:	mov    eax,DWORD PTR [edi]
  41feb5:	fisttp DWORD PTR [eax]
  41feb7:	push   edi
  41feb8:	retf   
  41feb9:	loopne 0x41fef7
  41febb:	mov    eax,DWORD PTR [ecx-0x44ba0457]
  41fec1:	loopne 0x41fef0
  41fec3:	jne    0x41feff
  41fec5:	cdq    
  41fec6:	push   ebp
  41fec7:	push   ecx
  41fec8:	aad    0x1f
  41feca:	shld   DWORD PTR [eax],edi,0x97
  41fece:	add    BYTE PTR [ebp-0x75de56c5],al
  41fed4:	mul    eax
  41fed6:	test   al,al
  41fed8:	ja     0x41fed8
  41feda:	aaa    
  41fedb:	and    BYTE PTR [edi-0x76f6c7f7],dl
  41fee1:	fnstcw WORD PTR [ecx*1+0x0]
	...
  41fef8:	test   ecx,edx
  41fefa:	cmp    al,0xff
  41fefc:	aaa    
  41fefd:	int    0x3c
  41feff:	ds xchg edi,eax
  41ff01:	fnstcw WORD PTR [edi+ebp*1]
  41ff04:	xchg   esi,eax
  41ff05:	fnstenv [eax+0x2ed3a001]
  41ff0b:	shr    BYTE PTR [edi+edi*4-0x42],0x4
  41ff10:	retf   
  41ff11:	push   ebp
  41ff12:	call   0x52ec6727
  41ff17:	mov    DWORD PTR [edx-0x44],esp
  41ff1a:	and    BYTE PTR [eax],dl
  41ff1c:	jmp    0x3e8d8d6a
  41ff21:	and    BYTE PTR [ecx],dh
  41ff23:	xor    dh,BYTE PTR [eax-0x7acf1cc1]
  41ff29:	aas    
  41ff2a:	rol    BYTE PTR [edi-0x7d09ebea],cl
  41ff30:	stos   DWORD PTR es:[edi],eax
  41ff31:	add    edi,DWORD PTR [eax+eax*1+0x63]
  41ff35:	lock inc DWORD PTR [edx-0x7ffbe389]
  41ff3c:	sahf   
  41ff3d:	jmp    0x41ff58
  41ff3f:	jae    0x41ff9d
  41ff41:	inc    ebp
  41ff42:	out    0xe9,eax
  41ff44:	(bad)  
  41ff45:	lock dec DWORD PTR [ecx+0x3c14235e]
  41ff4c:	ins    DWORD PTR es:[edi],dx
  41ff4d:	jne    0x41ff2b
  41ff4f:	push   DWORD PTR ds:0xa7c28cf0
  41ff55:	jne    0x41ff1b
  41ff57:	or     al,0xdf
  41ff59:	mov    ebx,0x4
	...
  41ff6e:	add    BYTE PTR [eax],al
  41ff70:	bound  ebx,QWORD PTR [ebp-0x3cb700cb]
  41ff76:	add    eax,0x1c2bdbd5
  41ff7b:	sbb    BYTE PTR [edx+0x2c],cl
  41ff7e:	sbb    al,0x12
  41ff80:	jbe    0x41ffc8
  41ff82:	test   esi,esi
  41ff84:	pop    ebp
  41ff85:	add    eax,DWORD PTR [edx-0xf9d4f]
  41ff8b:	jg     0x41ffb5
  41ff8d:	ror    DWORD PTR [ecx],cl
  41ff8f:	or     DWORD PTR [ebx],0xfffffff0
  41ff92:	(bad)  
  41ff93:	jmp    edi
  41ff95:	lods   eax,DWORD PTR ds:[esi]
  41ff96:	dec    DWORD PTR [edi+0x38]
  41ff99:	repnz cmp eax,0x3f78b6b7
  41ff9f:	add    dl,cl
  41ffa1:	add    ecx,ebx
  41ffa3:	cld    
  41ffa4:	mov    ch,0xd8
  41ffa6:	outs   dx,BYTE PTR ds:[esi]
  41ffa7:	inc    edi
  41ffa8:	xchg   ch,ah
  41ffaa:	gs ret 
  41ffac:	push   esi
  41ffad:	push   ebp
  41ffae:	popf   
  41ffaf:	add    esp,DWORD PTR [edx-0x27]
  41ffb2:	xlat   BYTE PTR ds:[ebx]
  41ffb3:	mov    ch,0xdd
  41ffb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffb6:	int    0xf5
  41ffb8:	test   BYTE PTR [edi-0x16],cl
  41ffbb:	add    esp,DWORD PTR [edx+0x56]
  41ffbe:	jno    0x41ffc1
  41ffc0:	hlt    
  41ffc1:	mov    ch,0x17
  41ffc3:	outs   dx,BYTE PTR ds:[esi]
  41ffc4:	pop    esp
  41ffc5:	lahf   
  41ffc6:	mov    al,ds:0xe998e4e7
  41ffcb:	jmp    0x420026
  41ffcd:	cli    
  41ffce:	push   edx
  41ffcf:	fsub   st,st(1)
  41ffd1:	sbb    esi,edx
  41ffd3:	or     eax,DWORD PTR [eax]
	...
  41ffe5:	add    BYTE PTR [eax],al
  41ffe7:	add    BYTE PTR [eax],dl
  41ffe9:	(bad)  [ecx+0x2f]
  41ffec:	xchg   bl,cl
  41ffee:	dec    esi
  41ffef:	popa   
  41fff0:	(bad)  [ebp-0x731703f3]
  41fff6:	call   0x29ee0eff
  41fffb:	mov    esp,DWORD PTR [ecx-0x13f70943]
  420001:	sbb    DWORD PTR [ecx+0x3f],esp
  420004:	inc    esi
  420005:	aad    0x5f
  420007:	sbb    DWORD PTR [ebp+0x63],0xffffffaa
  42000b:	add    ebx,DWORD PTR [edi+0x2f]
  42000e:	sub    bl,BYTE PTR [edx+ebx*1]
  420011:	jo     0x41ffe1
  420013:	mov    WORD PTR [ecx-0x14ca3243],gs
  420019:	in     eax,0x74
  42001b:	cld    
  42001c:	xchg   edi,eax
  42001d:	popf   
  42001e:	jmp    0xa04415ad
  420023:	(bad)  
  420024:	fdivp  st(0),st
  420026:	les    edx,FWORD PTR gs:[eax-0x2e]
  42002a:	outs   dx,BYTE PTR ds:[esi]
  42002b:	dec    eax
  42002c:	xchg   cl,dl
  42002e:	outs   dx,DWORD PTR ds:[esi]
  42002f:	inc    eax
  420030:	jle    0x41fffe
  420032:	add    BYTE PTR [edi+0x54560a6],dh
  420038:	mov    cl,0xb4
  42003a:	or     al,0x1a
  42003c:	mov    esp,0x60e85063
  420041:	push   cs
  420042:	call   0x4571659c
  420047:	lds    edx,FWORD PTR [eax+0x858162]
	...
  42005d:	add    BYTE PTR [eax],al
  42005f:	add    bh,bl
  420061:	mov    eax,0xd7627100
  420066:	inc    edx
  420067:	arpl   WORD PTR [edx],si
  420069:	mov    ebp,0xbd2a620e
  42006e:	adc    al,0xae
  420070:	dec    eax
  420071:	lock or ebp,DWORD PTR [ebx-0x75]
  420075:	idiv   bl
  420077:	push   esi
  420078:	mov    esi,ebp
  42007a:	call   esp
  42007c:	jne    0x42004b
  42007e:	pop    ebx
  42007f:	jb     0x42008d
  420081:	xchg   esi,eax
  420082:	pop    ebp
  420083:	mov    ds:0x2a111be0,al
  420088:	jecxz  0x42008c
  42008a:	jbe    0x4200d6
  42008c:	loop   0x420097
  42008e:	jbe    0x4200d6
  420090:	dec    edx
  420091:	in     al,0x74
  420093:	inc    edx
  420094:	dec    edx
  420095:	jecxz  0x42010b
  420097:	ds jp  0x42007a
  42009a:	je     0x4200d6
  42009c:	jp     0x42005d
  42009e:	jne    0x420072
  4200a0:	fcomp  DWORD PTR [ebx+0x1e38d524]
  4200a6:	xor    cl,0x62
  4200a9:	outs   dx,DWORD PTR ds:[esi]
  4200aa:	and    BYTE PTR [ebx-0x17bf9b9e],al
  4200b0:	jns    0x42009f
  4200b2:	mov    DWORD PTR [ecx],ebp
  4200b4:	pop    esi
  4200b5:	fcmovb st,st(3)
  4200b7:	cmp    DWORD PTR [ebp+0x21faa4ca],esi
  4200bd:	fld    DWORD PTR [ebp+0x388fb00]
  4200c3:	mov    BYTE PTR [eax],0x0
	...
  4200d6:	add    BYTE PTR [eax],al
  4200d8:	mov    edi,0xc831bed
  4200dd:	fldl2t 
  4200df:	fwait
  4200e0:	inc    ecx
  4200e1:	clc    
  4200e2:	sbb    al,0xeb
  4200e4:	sub    BYTE PTR [edx+0x50],ah
  4200e7:	and    al,0xa9
  4200e9:	add    dl,BYTE PTR [ebx+0x52aa5851]
  4200ef:	mov    esp,ecx
  4200f1:	bound  edi,QWORD PTR [ebx-0xd353fcd]
  4200f7:	push   edi
  4200f8:	adc    BYTE PTR [eax-0x47fde7dc],dl
  4200fe:	and    al,0x10
  420100:	inc    BYTE PTR [eax]
  420102:	jo     0x420159
  420104:	icebp  
  420105:	fild   WORD PTR [ecx]
  420107:	add    BYTE PTR [edx],0xbc
  42010a:	outs   dx,DWORD PTR ds:[esi]
  42010b:	push   es
  42010c:	(bad)  
  42010d:	idiv   BYTE PTR ds:0x809da02b
  420113:	stc    
  420114:	dec    ebx
  420115:	mov    WORD PTR [esi],es
  420117:	and    BYTE PTR [edx-0x34fa8b3f],0x15
  42011e:	cs jne 0x420131
  420121:	pop    ebx
  420122:	repz inc ecx
  420124:	enter  0x80d9,0xf9
  420128:	inc    edx
  420129:	test   al,0xb
  42012b:	(bad)  
  42012c:	retf   0x3839
  42012f:	add    eax,0xf980d9ec
  420134:	les    ecx,FWORD PTR [ecx-0x6f9d8001]
  42013a:	jb     0x42014c
	...
  420150:	dec    ebp
  420151:	idiv   BYTE PTR ds:0x1061bd25
  420157:	adc    ebp,DWORD PTR ds:[ebx-0x57]
  42015b:	add    ebx,edi
  42015d:	mov    ah,0xe9
  42015f:	add    esp,DWORD PTR [edx+0x78]
  420162:	or     BYTE PTR [esi],bh
  420164:	jmp    0x21522225
  420169:	(bad)  
  42016a:	sbb    ebx,ebx
  42016c:	push   eax
  42016d:	dec    ebx
  42016e:	mov    ebx,0x35007c03
  420173:	mov    DWORD PTR [esi+eiz*8+0x420b5933],ebx
  42017a:	add    DWORD PTR [eax],eax
  42017c:	adc    DWORD PTR [esi+0x7bbb892d],ebp
  420182:	(bad)  
  420183:	mov    BYTE PTR [ebp+0x2300c7db],ah
  420189:	hlt    
  42018a:	mul    bh
  42018c:	xchg   DWORD PTR [ebp+0x70e90004],ecx
  420192:	jnp    0x420189
  420194:	out    dx,al
  420195:	adc    eax,0x6b95892e
  42019a:	leave  
  42019b:	out    0x2,eax
  42019d:	xchg   edi,eax
  42019e:	aad    0xfc
  4201a0:	jmp    0x9143eb6a
  4201a5:	shl    BYTE PTR ds:0x2bc3a95e,0x89
  4201ac:	ss sub eax,0x63ff
  4201b3:	mov    dl,0x0
	...
  4201c5:	add    BYTE PTR [eax],al
  4201c7:	add    BYTE PTR [eax+0x53],ah
  4201ca:	mov    DWORD PTR cs:[ebx],esi
  4201cd:	aaa    
  4201ce:	xchg   edi,eax
  4201cf:	out    dx,eax
  4201d0:	hlt    
  4201d1:	jb     0x420250
  4201d3:	out    0x25,eax
  4201d5:	fild   DWORD PTR [eax+eax*1]
  4201d8:	jmp    0x420217
  4201da:	or     BYTE PTR [ebx+0x31fc7522],al
  4201e0:	and    cl,cl
  4201e2:	mov    ?,edi
  4201e4:	std    
  4201e5:	inc    DWORD PTR [edx-0x2af99d76]
  4201eb:	cld    
  4201ec:	cli    
  4201ed:	fcom   DWORD PTR [edi+ecx*4]
  4201f0:	out    0xf5,al
  4201f2:	outs   dx,BYTE PTR ds:[esi]
  4201f3:	lods   al,BYTE PTR ds:[esi]
  4201f5:	pop    ecx
  4201f6:	and    eax,0xe9e3d6d8
  4201fb:	add    esp,edx
  4201fd:	fcomp  DWORD PTR [ecx]
  4201ff:	adc    DWORD PTR [edx-0x16f3db50],esp
  420205:	mov    ds:0x18d104b5,eax
  42020a:	idiv   DWORD PTR [eax+0xaa5a22]
  420210:	adc    cl,BYTE PTR [edx-0x269dfbef]
  420216:	test   eax,0x39c91f86
  42021b:	in     al,dx
  42021c:	rcr    edi,0xe8
  42021f:	add    ebx,esi
  420221:	sbb    dh,dh
  420223:	sub    al,0xe9
  420225:	fwait
  420226:	jns    0x42025b
  420228:	jmp    0x12d6fd0
	...
  42023d:	add    BYTE PTR [eax],al
  42023f:	add    BYTE PTR [edi-0x21],dh
  420242:	call   0xd65ae04a
  420247:	cmp    al,0xeb
  420249:	jbe    0x4202a0
  42024b:	adc    BYTE PTR [edx],ah
  42024d:	mov    bl,0xa4
  42024f:	iret   
  420250:	(bad)  
  420251:	loop   0x4202bb
  420253:	push   esi
  420254:	push   edx
  420255:	fucompp 
  420257:	add    esp,DWORD PTR [edx-0x6dcc3099]
  42025d:	mov    DWORD PTR [esi+eax*2+0x2e],ebx
  420261:	add    bl,ch
  420263:	or     DWORD PTR ds:0x91c365f5,esp
  420269:	mov    esi,0x3d70d4ba
  42026e:	stc    
  42026f:	inc    ebx
  420270:	bound  ebx,QWORD PTR [esi+0x2a]
  420273:	dec    edi
  420274:	push   0xe2e99560
  420279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42027a:	add    ch,dh
  42027c:	adc    DWORD PTR [edx-0x34],esp
  42027f:	add    DWORD PTR [ebp+ebp*4+0x34dae900],edi
  420286:	jbe    0x420294
  420288:	xchg   esi,eax
  420289:	(bad)  
  42028a:	retf   
  42028b:	shl    DWORD PTR [ecx+ebx*8+0x0],0xe9
  420290:	ja     0x4202a4
  420292:	mov    ?,WORD PTR [edx+esi*4]
  420295:	cld    
  420296:	sub    al,0xf0
  420298:	fnstenvw [esi+0xd95fc7]
  42029f:	pop    esp
  4202a0:	jecxz  0x420296
  4202a2:	std    
  4202a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4202b8:	xchg   ecx,eax
  4202b9:	push   ds
  4202ba:	add    ch,cl
  4202bc:	es lahf 
  4202be:	jne    0x420250
  4202c0:	adc    al,0x19
  4202c2:	pop    esp
  4202c3:	das    
  4202c4:	cmp    eax,0x61edbf1c
  4202c9:	pop    esp
  4202ca:	inc    ebx
  4202cb:	in     eax,dx
  4202cc:	pushf  
  4202cd:	or     al,0x56
  4202cf:	bound  eax,QWORD PTR [edx+0x6775ec73]
  4202d5:	fld    DWORD PTR [eax]
  4202d7:	mov    edx,0x6af2622b
  4202dc:	mov    al,0xe5
  4202de:	add    ch,bl
  4202e0:	test   DWORD PTR [edi+0x5e],ebx
  4202e3:	loope  0x4202ca
  4202e5:	adc    BYTE PTR [esi+0x1],dh
  4202e8:	jecxz  0x420348
  4202ea:	adc    DWORD PTR [edi],edi
  4202ec:	adc    ebp,esi
  4202ee:	call   0xfc36d08f
  4202f3:	push   0xffffff93
  4202f5:	lidtd  [esi+0x377e5a5b]
  4202fc:	imul   cx,WORD PTR [ebx],0x62
  420300:	mov    al,ds:0xcba48de5
  420305:	mov    ds:0xa7eb0050,eax
  42030a:	call   0x11f1232
  42030f:	mov    ecx,0xde5d
  420314:	mov    fs,WORD PTR [edx+0xc]
  420317:	(bad)  
  420318:	cld    
  420319:	push   es
  42031a:	mov    BYTE PTR [eax],0x0
	...
  42032d:	add    BYTE PTR [eax],al
  42032f:	add    bl,cl
  420331:	xchg   edi,eax
  420332:	inc    ebx
  420333:	jne    0x4202e7
  420335:	jb     0x420384
  420337:	or     al,0x46
  420339:	xor    eax,0x156a0670
  42033e:	es add bl,cl
  420341:	xlat   BYTE PTR ds:[ebx]
  420342:	and    DWORD PTR [esi-0x41],0x77db84d7
  420349:	cmc    
  42034a:	xchg   BYTE PTR [esi-0x55],cl
  42034d:	pop    fs
  42034f:	or     al,0x8a
  420351:	xlat   BYTE PTR ds:[ebx]
  420352:	mov    DWORD PTR [esi-0x7d],ecx
  420355:	pusha  
  420356:	ret    
  420357:	je     0x4202db
  420359:	movntps XMMWORD PTR [edi],xmm7
  42035c:	jnp    0x420335
  42035e:	and    DWORD PTR [esi+0x73],0xc25b5ad7
  420365:	sbb    eax,0x74550000
  42036a:	jmp    0xc80d:0x70083d83
  420371:	enter  0x7400,0x43
  420375:	or     BYTE PTR [esi],dh
  420377:	call   DWORD PTR [esi+0x7f]
  42037a:	adc    DWORD PTR [eax+0x3b],eax
  42037d:	je     0x42034c
  42037f:	call   0x3cf294
  420384:	rcr    BYTE PTR [eax],0xe4
  420387:	jg     0x420320
  420389:	(bad)  
  42038a:	add    BYTE PTR [ebx+0x4bea875],cl
  420390:	or     esi,DWORD PTR [edx+0xec89]
	...
  4203a6:	add    BYTE PTR [eax],al
  4203a8:	bound  eax,QWORD PTR [ecx+0x601bdb]
  4203ae:	add    BYTE PTR [ecx],dh
  4203b0:	and    dl,BYTE PTR [eax+0x3a]
  4203b3:	push   ebp
  4203b4:	jmp    0x8cc8492
  4203b9:	out    dx,al
  4203ba:	sar    esp,1
  4203bc:	fstp   TBYTE PTR [ebx]
  4203be:	clc    
  4203bf:	xchg   BYTE PTR [ebp+0x72747aec],bl
  4203c5:	or     BYTE PTR [ebp+0x7c0bd5b0],bl
  4203cb:	xchg   edi,eax
  4203cc:	adc    BYTE PTR [edx],al
  4203ce:	add    BYTE PTR [eax],al
  4203d0:	fldenv [edi]
  4203d2:	fnsave [eax]
  4203d4:	adc    esi,DWORD PTR [ebx]
  4203d6:	rol    BYTE PTR [edx+0x6a48a8a2],cl
  4203dc:	push   esi
  4203dd:	xchg   ebp,eax
  4203de:	cmp    ebx,eax
  4203e0:	adc    esi,DWORD PTR [eax-0x5046cecb]
  4203e6:	xor    eax,0xef846ffd
  4203eb:	aas    
  4203ec:	bound  edi,QWORD PTR [ebp-0x3c]
  4203ef:	jge    0x420443
  4203f1:	loop   0x4203fa
  4203f3:	pop    esp
  4203f4:	daa    
  4203f5:	dec    edx
  4203f6:	pop    ecx
  4203f7:	or     al,0xe1
  4203f9:	push   0x2f467af8
  4203fe:	mov    bh,0x65
  420400:	fld    TBYTE PTR [ebx+eax*2]
  420403:	fsubr  st,st(7)
  420405:	cmp    al,0xa8
  420407:	dec    edi
  420408:	sbb    ah,bh
  42040a:	sub    al,BYTE PTR [eax+eax*1+0x0]
	...
  42041e:	add    BYTE PTR [eax],al
  420420:	bound  esi,QWORD PTR [edi-0x42]
  420423:	out    0x1c,eax
  420425:	add    eax,0xbfe7ffff
  42042a:	add    DWORD PTR [ebx+0x72c48422],edx
  420430:	pop    ebx
  420431:	xchg   edi,eax
  420432:	add    dh,BYTE PTR [ecx]
  420434:	or     ecx,ebx
  420436:	(bad)  
  420437:	ret    
  420438:	xchg   DWORD PTR [eax-0x1c],esp
  42043b:	mov    al,BYTE PTR [edi]
  42043d:	fsubr  st,st(1)
  42043f:	add    ebx,ecx
  420441:	pop    ebx
  420442:	add    bh,cl
  420444:	push   es
  420445:	bnd jno 0x420434
  420448:	cmp    eax,0xeacd74a0
  42044d:	sbb    DWORD PTR [ebx+0x27208b31],edx
  420453:	aaa    
  420454:	fild   DWORD PTR [edi+eiz*2]
  420457:	out    0xd5,eax
  420459:	push   edi
  42045a:	into   
  42045b:	iret   
  42045c:	aam    0xf1
  42045e:	jmp    0xe1d5df97
  420463:	cmp    DWORD PTR [ebx-0x4b82e515],edx
  420469:	pop    edi
  42046a:	sub    BYTE PTR ss:[esi+0x5c],ah
  42046e:	(bad)  
  42046f:	push   edi
  420470:	pusha  
  420471:	mov    eax,0x1625df6
  420476:	push   ebp
  420477:	into   
  420478:	sahf   
  420479:	icebp  
  42047a:	gs ret 
  42047c:	pop    bp
  42047e:	je     0x420483
  420480:	(bad)  
  420481:	fstp   DWORD PTR [edi+edi*1+0x0]
	...
  420495:	add    BYTE PTR [eax],al
  420497:	add    BYTE PTR [esi],bh
  420499:	shr    DWORD PTR [ebx-0x1636b9b9],1
  42049f:	fld    TBYTE PTR [esi+0x26]
  4204a2:	jae    0x420474
  4204a4:	fisub  DWORD PTR [ecx-0x55da2423]
  4204aa:	jmp    0xd65beab2
  4204af:	addr16 jmp 0x420452
  4204b2:	in     eax,0x7e
  4204b4:	loope  0x42046b
  4204b6:	add    DWORD PTR [ebx],0x7e99d962
  4204bc:	mov    eax,ds:0x4a33d9b5
  4204c1:	sub    eax,0xd961fe01
  4204c6:	xchg   DWORD PTR [ebp+0x2984dd7d],esi
  4204cc:	mov    ch,0x96
  4204ce:	lea    ebp,[ebp-0x62763ac3]
  4204d4:	inc    ebp
  4204d5:	(bad)
  4204d8:	(bad)
  4204db:	ins    DWORD PTR es:[edi],dx
  4204dc:	and    DWORD PTR [esi+edx*1+0x64],ebp
  4204e0:	sbb    ebp,DWORD PTR [ebp+0xa]
  4204e3:	bound  esp,QWORD PTR [ebx+0x1]
  4204e6:	pop    esp
  4204e7:	pop    edx
  4204e8:	popa   
  4204e9:	fld    DWORD PTR [edi-0x70774149]
  4204ef:	jmp    0x6134af55
  4204f4:	sub    dh,BYTE PTR [ebp+0x5c7fc20c]
  4204fa:	fdivr  DWORD PTR ds:0x0
	...
  420510:	mov    esi,0x38ed4461
  420515:	mov    al,0x28
  420517:	pusha  
  420518:	popa   
  420519:	bound  ecx,QWORD PTR [ebp+ebx*8+0x28]
  42051d:	scas   eax,DWORD PTR es:[edi]
  42051e:	or     BYTE PTR [eax+0x65],dh
  420521:	bound  eax,QWORD PTR [edx-0x13]
  420524:	push   ss
  420525:	xchg   ebp,eax
  420526:	add    al,0x82
  420528:	pop    ebx
  420529:	pop    ss
  42052a:	inc    ebp
  42052b:	lds    edx,FWORD PTR [ecx+0x45fdfaef]
  420531:	leave  
  420532:	xchg   DWORD PTR [esi+0x76fdf396],ebp
  420538:	popf   
  420539:	daa    
  42053a:	jmp    0x420524
  42053c:	popa   
  42053d:	(bad)  [ebp-0x3d2e7a53]
  420543:	jmp    0xdc8b9ea9
  420548:	push   ds
  420549:	lea    eax,[edi-0x786d8bd9]
  42054f:	add    BYTE PTR [esi+0x4b04beaa],ch
  420555:	mov    cl,0x89
  420557:	in     al,dx
  420558:	mov    eax,0x6783f401
  42055d:	leave  
  42055e:	push   ecx
  42055f:	push   esi
  420560:	fdiv   QWORD PTR [ecx-0xe]
  420563:	call   0x3e5f05
  420568:	sub    BYTE PTR ds:0xd4d848e4,0x0
  42056f:	mov    edi,ebx
  420571:	pusha  
  420572:	test   BYTE PTR [edi],0x0
	...
  420585:	add    BYTE PTR [eax],al
  420587:	add    BYTE PTR [edi-0x44],bh
  42058a:	sti    
  42058b:	(bad)  
  42058c:	sti    
  42058d:	pop    eax
  42058e:	dec    eax
  42058f:	and    al,0xb
  420591:	ins    DWORD PTR es:[edi],dx
  420592:	outs   dx,DWORD PTR ds:[esi]
  420593:	and    al,0xdb
  420595:	adc    esp,ecx
  420597:	retf   
  420598:	retf   0x84db
  42059b:	rol    ah,0x57
  42059e:	clc    
  42059f:	add    BYTE PTR [ebx+0x6f4c87db],bh
  4205a5:	shr    eax,0xde
  4205a8:	pop    es
  4205a9:	aad    0x0
  4205ab:	lea    edi,[edi-0x3f]
  4205ae:	and    al,0x6a
  4205b0:	pop    edx
  4205b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205b2:	dec    ebx
  4205b3:	push   0x73
  4205b5:	je     0x420584
  4205b7:	call   0x3dc61e
  4205bc:	call   FWORD PTR [ebx]
  4205be:	or     eax,0xdbd184
  4205c3:	add    dh,dh
  4205c5:	scas   eax,DWORD PTR es:[edi]
  4205c6:	and    al,0x10
  4205c8:	shl    ecx,cl
  4205ca:	int3   
  4205cb:	add    DWORD PTR [ebx+0x57],edi
  4205ce:	mov    esp,0xfc2cff0f
  4205d3:	dec    DWORD PTR [ebx+0x5a]
  4205d6:	dec    eax
  4205d7:	and    al,0x4f
  4205d9:	adc    ecx,DWORD PTR [edi-0x31]
  4205dc:	bound  eax,QWORD PTR [ecx]
  4205de:	add    BYTE PTR [ebx+0x69f8d49e],cl
  4205e4:	outs   dx,DWORD PTR ds:[esi]
  4205e5:	push   eax
  4205e6:	xor    eax,0xbd6bc76a
  4205eb:	out    0x0,eax
	...
  4205fd:	add    BYTE PTR [eax],al
  4205ff:	add    BYTE PTR [edi+eax*2+0x5],al
  420603:	add    dh,bl
  420605:	sar    dl,0x83
  420608:	lds    eax,FWORD PTR [eax]
  42060a:	add    BYTE PTR [eax],al
  42060c:	out    0x3c,eax
  42060e:	and    al,0x10
  420610:	cli    
  420611:	jmp    0x4205c4
  420613:	inc    BYTE PTR ds:0xfd82c77c
  420619:	ins    BYTE PTR es:[edi],dx
  42061a:	jmp    0x420618
  42061c:	outs   dx,BYTE PTR ds:[esi]
  42061d:	adc    al,0xf0
  42061f:	push   esp
  420620:	xchg   ebx,eax
  420621:	pop    edx
  420622:	pop    ebx
  420623:	mov    DWORD PTR [ecx+ebx*8],edx
  420626:	mov    edi,0x7900635d
  42062b:	int3   
  42062c:	call   0xf095e349
  420631:	add    BYTE PTR [eax],al
  420633:	test   BYTE PTR [ecx-0x427baf7c],ch
  420639:	out    0x83,eax
  42063b:	and    DWORD PTR [edx+0x0],0x0
  42063f:	mov    ebx,DWORD PTR [esi]
  420641:	fdivr  st(4),st
  420643:	out    0xf1,eax
  420645:	dec    edi
  420646:	add    BYTE PTR [eax],al
  420648:	jmp    0xf3e8a85
  42064d:	in     al,dx
  42064e:	int3   
  42064f:	jae    0x420697
  420651:	lock xor al,0x4f
  420654:	clc    
  420655:	in     eax,dx
  420656:	js     0x420625
  420658:	mov    ah,BYTE PTR [ebp+0x2a]
  42065b:	push   DWORD PTR [ebp+0x6b]
  42065e:	mov    ebp,0x20588a89
  420663:	xchg   edx,eax
	...
  420678:	bound  eax,QWORD PTR [eax]
  42067a:	test   al,bl
  42067c:	(bad)  
  42067d:	fnstenv [eax-0xa4a5682]
  420683:	fld    TBYTE PTR [edx+0x5]
  420686:	jmp    0x5d6df8e
  42068b:	clc    
  42068c:	retf   
  42068d:	leave  
  42068e:	cdq    
  42068f:	xor    cl,al
  420691:	imul   ebp,DWORD PTR [esi-0x42],0x2937745
  420698:	bound  edx,QWORD PTR [ebp+0x2a]
  42069b:	pop    eax
  42069c:	dec    ebx
  42069d:	pop    esp
  42069e:	mov    dh,0x27
  4206a0:	jb     0x4206a3
  4206a2:	sub    edi,DWORD PTR [eax-0x33a111f4]
  4206a8:	loopne 0x420697
  4206aa:	xchg   ebp,eax
  4206ab:	pop    ds
  4206ac:	jmp    DWORD PTR [ebp+ecx*8-0xd]
  4206b0:	mov    cs,WORD PTR [eax+0x1edb528f]
  4206b6:	add    cl,BYTE PTR [eax-0x7c]
  4206b9:	fsubr  st,st(1)
  4206bb:	js     0x42066b
  4206bd:	(bad)  
  4206bf:	fld    TBYTE PTR [ebp-0x19fc15b9]
  4206c5:	adc    DWORD PTR [ebp-0xc],ebx
  4206c8:	fcmovu st,st(6)
  4206ca:	sar    DWORD PTR [esi+0x78e9d8ec],0xa7
  4206d1:	add    BYTE PTR [edx+esi*2-0x2a091253],ah
  4206d8:	ficom  DWORD PTR [esi]
  4206da:	or     ebp,DWORD PTR [esi]
	...
  4206f0:	cmp    esp,DWORD PTR [edx-0x73]
  4206f3:	mov    cs:0xe2df6e83,eax
  4206f9:	hlt    
  4206fa:	xchg   ecx,eax
  4206fb:	cmp    BYTE PTR [ecx-0x58],0xe5
  4206ff:	add    esp,DWORD PTR [edx+0x58]
  420702:	add    eax,0x49ed75f4
  420707:	add    edx,DWORD PTR [ebx]
  420709:	bound  eax,QWORD PTR [ecx]
  42070b:	xchg   ebx,eax
  42070c:	das    
  42070d:	push   esi
  42070e:	pop    ebp
  42070f:	lds    ebx,FWORD PTR [ebp+0x54]
  420712:	dec    ebp
  420713:	or     eax,0xe27fde4e
  420718:	pusha  
  420719:	fld    DWORD PTR [eax]
  42071b:	inc    ecx
  42071c:	mov    al,ds:0xbae90162
  420721:	adc    al,0xe9
  420723:	dec    edx
  420724:	shr    ah,0xfb
  420727:	jb     0x42073a
  420729:	pop    eax
  42072a:	repz out 0xdd,al
  42072d:	ja     0x420730
  42072f:	jmp    0xcd8f6795
  420734:	or     DWORD PTR [ebp+esi*2-0x3b],edx
  420738:	stc    
  420739:	hlt    
  42073a:	or     BYTE PTR [edx],ah
  42073c:	pusha  
  42073d:	fld    DWORD PTR [ecx+ebp*1-0x17c0a702]
  420744:	popa   
  420745:	(bad)  [ebp-0x173aba53]
  42074b:	mov    eax,ds:0x60fbeba5
  420750:	and    eax,0x6c1cb5
	...
  420765:	add    BYTE PTR [eax],al
  420767:	add    BYTE PTR [esi+0x32de2268],bl
  42076d:	mov    ch,0x14
  42076f:	cmp    DWORD PTR [edi-0x79d9381],ecx
  420775:	hlt    
  420776:	stos   BYTE PTR es:[edi],al
  420777:	and    al,0x5f
  420779:	fld    DWORD PTR [edi-0x79327dd3]
  42077f:	xchg   ecx,eax
  420780:	xchg   BYTE PTR [ecx+edx*4-0x27aa9e17],ch
  420787:	not    BYTE PTR ds:0x61e901dd
  42078d:	bound  ebx,QWORD PTR [ebp-0x33]
  420790:	lea    ebx,[edi+0x4d]
  420793:	lds    eax,FWORD PTR [ecx+0x1]
  420796:	in     eax,dx
  420797:	add    BYTE PTR [esi+0x478d00d6],ch
  42079d:	mov    ecx,0xa87e6a20
  4207a2:	dec    ebx
  4207a3:	push   0x5e
  4207a5:	imul   ecx,ebp,0xffffffe8
  4207a8:	ds sar ebx,0xff
  4207ac:	(bad)  
  4207ad:	adc    eax,0xd5a2840d
  4207b2:	add    BYTE PTR [eax],al
  4207b4:	and    esp,ebp
  4207b6:	arpl   WORD PTR [ecx+esi*4],bx
  4207b9:	xchg   ebp,eax
  4207ba:	add    BYTE PTR [ecx+0x11],dl
  4207bd:	mov    DWORD PTR [ecx+0x5779a3ce],ecx
  4207c3:	add    DWORD PTR [ebx],ecx
  4207c5:	ins    BYTE PTR es:[edi],dx
  4207c6:	mov    ebx,0xfc25870f
  4207cb:	inc    DWORD PTR [eax]
	...
  4207dd:	add    BYTE PTR [eax],al
  4207df:	add    bl,bh
  4207e1:	lea    eax,[ecx*4+0x5014cbb7]
  4207e8:	mov    edx,0x2d8b728d
  4207ed:	or     eax,0xd7fa5d49
  4207f2:	test   al,al
  4207f4:	cld    
  4207f5:	imul   esi,DWORD PTR [eax+eax*1+0x7d81d7cb],0xffffffdb
  4207fd:	xlat   BYTE PTR ds:[ebx]
  4207fe:	jb     0x420818
  420800:	lods   al,BYTE PTR ds:[esi]
  420801:	mov    BYTE PTR [eax],dl
  420803:	jmp    DWORD PTR [esi]
  420805:	icebp  
  420806:	dec    edx
  420807:	push   0x14
  420809:	ins    BYTE PTR es:[edi],dx
  42080a:	int    0xe8
  42080c:	dec    esi
  42080d:	ret    0xfffb
  420810:	inc    edi
  420811:	sbb    BYTE PTR ds:0xd81284,cl
  420817:	add    BYTE PTR [esi],al
  420819:	cmp    esi,DWORD PTR [eax+0x13]
  42081c:	pop    eax
  42081d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42081e:	imul   dx,WORD PTR [eax],0xe432
  420823:	(bad)  
  420824:	bound  esp,QWORD PTR [ebp+0x41e60005]
  42082a:	test   DWORD PTR [ebx+0x1e0],0xfff7ece1
  420834:	icebp  
  420835:	adc    bh,al
  420837:	jb     0x4208a3
  420839:	rcr    DWORD PTR [edx+0x6a],1
  42083c:	jmp    0xafb5dfe3
  420841:	add    DWORD PTR [eax],eax
  420843:	test   BYTE PTR [eax],al
	...
  420855:	add    BYTE PTR [eax],al
  420857:	add    BYTE PTR [edx],ah
  420859:	or     eax,0xd4ae8b5b
  42085e:	adc    al,0x32
  420860:	sbb    DWORD PTR [ecx-0x53d20411],ecx
  420866:	js     0x4208b3
  420868:	jle    0x42085a
  42086a:	pop    ebp
  42086b:	inc    DWORD PTR ds:0x15fcce32
  420871:	jge    0x420832
  420873:	jae    0x4208cb
  420875:	jge    0x4208ea
  420877:	and    ebx,DWORD PTR [edx+0xafffffe]
  42087d:	ret    0xfc96
  420880:	cmc    
  420881:	gs jnp 0x4208a7
  420884:	or     bh,bh
  420886:	(bad)  
  420887:	call   DWORD PTR [edx-0x79b484af]
  42088d:	xor    al,0x32
  42088f:	call   0x46d819
  420894:	fcomp  DWORD PTR [eax]
  420896:	mov    ebp,ebp
  420898:	arpl   WORD PTR [eax],ax
  42089a:	add    BYTE PTR [ebx+0x23cd4ee],cl
  4208a0:	bound  eax,QWORD PTR [eax]
  4208a2:	ret    0xadfe
  4208a5:	sar    DWORD PTR [edx],0x73
  4208a8:	stos   DWORD PTR es:[edi],eax
  4208a9:	xchg   esi,eax
  4208aa:	add    al,0x8b
  4208ac:	cs aam 0x10
  4208af:	call   0xc9e0e222
  4208b4:	mov    ds,WORD PTR [esi-0x14]
  4208b7:	fist   DWORD PTR [ecx+0x49]
  4208ba:	jmp    0x0:0x3
	...
  4208cd:	add    BYTE PTR [eax],al
  4208cf:	add    bl,ch
  4208d1:	sbb    eax,DWORD PTR [edx-0x16262de9]
  4208d7:	jge    0x42087b
  4208d9:	(bad)  
  4208da:	fnstcw WORD PTR [edi+edx*2+0x1]
  4208de:	enter  0x5d73,0xea
  4208e2:	pop    esi
  4208e3:	mov    edx,0x479ce3d
  4208e8:	bound  esp,QWORD PTR [edi+0x5eab2a29]
  4208ee:	dec    ebp
  4208ef:	daa    
  4208f0:	and    ch,bl
  4208f2:	jmp    0x673ef425
  4208f7:	fcomp  DWORD PTR [ecx-0x6d7452a4]
  4208fd:	sbb    DWORD PTR [edx-0x40226784],0x2
  420904:	jmp    0x4208d7
  420906:	mov    eax,0x1b0e5030
  42090b:	xor    al,0x52
  42090d:	push   esp
  42090e:	sub    cl,BYTE PTR [edi-0x58]
  420911:	pop    esi
  420912:	popf   
  420913:	ret    
  420914:	je     0x420906
  420916:	jmp    0x771acb1e
  42091b:	or     BYTE PTR ds:0x984f2d94,ch
  420921:	pusha  
  420922:	popf   
  420923:	idiv   DWORD PTR [ebp+0x62037314]
  420929:	pop    esi
  42092a:	fidivr DWORD PTR [esi-0x31]
  42092d:	fs add eax,0x1d5c667d
  420933:	clc    
	...
  420948:	and    al,0xea
  42094a:	cmp    al,0xf8
  42094c:	pop    ss
  42094d:	cmp    BYTE PTR [edx+0x1545633],0xa9
  420954:	sub    al,0xc8
  420956:	sti    
  420957:	xor    al,0x9a
  420959:	test   al,0xce
  42095b:	aas    
  42095c:	fwait
  42095d:	data16 or BYTE PTR [ebx],dl
  420960:	pop    esp
  420961:	sub    al,0x9e
  420964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420965:	in     al,dx
  420966:	sti    
  420967:	arpl   cx,cx
  420969:	pusha  
  42096a:	retf   
  42096b:	xchg   ecx,eax
  42096c:	enter  0x15c,0xe9
  420970:	cmp    cl,BYTE PTR [ebx+0x208eaa86]
  420976:	mov    edi,0x878c61e1
  42097b:	push   ebp
  42097c:	out    0xf4,al
  42097e:	adc    al,0x6a
  420980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420981:	in     eax,0x0
  420983:	mov    edx,0xb9189bb4
  420988:	sub    ch,BYTE PTR [esp+edx*1+0x74]
  42098c:	jl     0x42096f
  42098e:	lea    ebp,[ebp+ebx*1+0x2aa43001]
  420995:	out    0x85,al
  420997:	sub    DWORD PTR [ebp+0x2e292edd],esp
  42099d:	xchg   ebx,eax
  42099e:	xchg   DWORD PTR [ecx+ebx*1-0x19eaba4e],esp
  4209a5:	jnp    0x420993
  4209a7:	jmp    0xea36858a
	...
  4209c0:	mov    al,0xf0
  4209c2:	push   eax
  4209c3:	(bad)  
  4209c4:	xchg   edi,eax
  4209c5:	in     eax,0x8d
  4209c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209c8:	mov    ch,0x0
  4209ca:	pusha  
  4209cb:	call   FWORD PTR [ebp-0x65cb781b]
  4209d1:	push   edx
  4209d2:	(bad)  
  4209d4:	xchg   ebx,eax
  4209d5:	push   esi
  4209d6:	add    ecx,ebp
  4209d8:	cmp    eax,0x9cf77501
  4209dd:	imul   esi,esp,0x0
  4209e0:	xor    BYTE PTR [edx+0x16eff0c],ch
  4209e6:	mov    DWORD PTR [ebp-0x7d],ecx
  4209e9:	pop    ds
  4209ea:	outs   dx,DWORD PTR ds:[esi]
  4209eb:	adc    BYTE PTR [ebx-0x3b0008a5],ah
  4209f1:	arpl   bx,dx
  4209f3:	mov    esi,DWORD PTR [esi]
  4209f5:	add    esp,esp
  4209f7:	xor    eax,DWORD PTR [ebx*8-0x4b377600]
  4209fe:	ret    
  4209ff:	ret    
  420a00:	dec    esi
  420a01:	fs out 0x83,eax
  420a04:	xlat   BYTE PTR ds:[ebx]
  420a05:	in     eax,dx
  420a06:	push   eax
  420a07:	push   esi
  420a08:	jl     0x420a6e
  420a0a:	icebp  
  420a0b:	push   ecx
  420a0c:	mov    dh,0xaa
  420a0e:	hlt    
  420a0f:	mov    eax,edx
  420a11:	retf   
  420a12:	fld1   
  420a14:	inc    esp
  420a15:	out    0xfa,eax
  420a17:	dec    edi
  420a19:	sbb    eax,0x8aa42270
  420a1e:	clc    
  420a1f:	test   DWORD PTR [ebp+0x20],ebp
  420a22:	outs   dx,DWORD PTR ds:[esi]
  420a23:	hlt    
	...
  420a38:	xor    al,0xa8
  420a3a:	cmc    
  420a3b:	(bad)  
  420a3c:	fsubrp st(3),st
  420a3e:	mov    dh,dl
  420a40:	and    edx,ebx
  420a42:	push   ebx
  420a43:	call   0x3f1b4c
  420a48:	nop
  420a49:	mov    ds:0x5338af4,al
  420a4e:	in     al,dx
  420a4f:	mov    cs,WORD PTR [ebx]
  420a51:	fcomp  QWORD PTR [ebp+0x5e]
  420a54:	jno    0x420a72
  420a56:	pop    ecx
  420a57:	leave  
  420a58:	cmp    ecx,ebx
  420a5a:	add    BYTE PTR [ebp+0x40],dl
  420a5d:	add    DWORD PTR [ebx-0x14],edi
  420a60:	scas   eax,DWORD PTR es:[edi]
  420a61:	out    0xfb,eax
  420a63:	call   DWORD PTR [esi+0x59]
  420a66:	in     al,dx
  420a67:	sti    
  420a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a69:	push   ds
  420a6a:	push   ecx
  420a6b:	push   esi
  420a6c:	bound  esp,QWORD PTR [edi-0xe5397cc]
  420a72:	(bad)  
  420a73:	(bad)  
  420a74:	fstp   DWORD PTR [ebx]
  420a76:	ja     0x420a66
  420a78:	jno    0x420ab5
  420a7a:	ret    
  420a7b:	adc    ch,BYTE PTR [edx]
  420a7d:	add    al,0x40
  420a7f:	add    BYTE PTR [edx],ch
  420a81:	cmc    
  420a82:	sar    bh,1
  420a84:	(bad)  
  420a85:	icebp  
  420a86:	dec    edx
  420a87:	pop    ecx
  420a88:	xlat   BYTE PTR ds:[ebx]
  420a89:	jl     0x420a52
  420a8b:	cli    
  420a8c:	jge    0x420adc
  420a8e:	xor    BYTE PTR [ecx+0xa],dl
  420a91:	out    dx,al
  420a92:	jns    0x420ad3
  420a94:	bound  ebp,QWORD PTR [ebp-0x80]
  420a97:	out    dx,eax
  420a98:	imul   esp,DWORD PTR [esi-0x3e],0x4f
	...
  420aaf:	add    BYTE PTR [ebp+0x6],bl
  420ab2:	adc    al,0x12
  420ab4:	mov    ds:0xd6bf80f0,al
  420ab9:	mov    ebp,0x864a8a79
  420abe:	ret    0x4afc
  420ac1:	push   cs
  420ac2:	(bad)  
  420ac3:	(bad)  
  420ac4:	xor    eax,0x7c73bf7d
  420ac9:	inc    ecx
  420aca:	jns    0x420a5e
  420acc:	sub    ah,BYTE PTR [esi-0x4116033e]
  420ad2:	xlat   BYTE PTR ds:[ebx]
  420ad3:	sbb    dh,BYTE PTR [edx-0x49]
  420ad6:	ret    0x2283
  420ad9:	inc    ebp
  420ada:	in     al,0x88
  420adc:	lods   al,BYTE PTR ds:[esi]
  420add:	cld    
  420ade:	sub    cl,BYTE PTR [ebx-0x3373711]
  420ae4:	cmc    
  420ae5:	fadd   DWORD PTR [edx]
  420ae7:	std    
  420ae8:	in     eax,dx
  420ae9:	fistp  QWORD PTR [eax-0x76]
  420aec:	jmp    0xd7c8:0xe8fcc5e5
  420af3:	dec    eax
  420af4:	pop    esp
  420af5:	icebp  
  420af6:	call   FWORD PTR [esp+ebp*1-0x27]
  420afa:	outs   dx,DWORD PTR ds:[esi]
  420afb:	shr    DWORD PTR [edx],0x10
  420afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aff:	or     ecx,0xffffffbd
  420b02:	out    0x3,eax
  420b04:	bound  ecx,QWORD PTR [edx+0x52172e34]
  420b0a:	mov    eax,ds:0xea5eaddc
  420b0f:	add    edx,DWORD PTR [ebx+0xb]
  420b12:	inc    eax
  420b13:	add    DWORD PTR [eax],eax
	...
  420b25:	add    BYTE PTR [eax],al
  420b27:	add    BYTE PTR ds:0x7b81b8ee,ch
  420b2d:	fstp   DWORD PTR ds:0xe56d1bf9
  420b33:	pop    ecx
  420b34:	fs bnd jmp 0x420b91
  420b38:	pop    esi
  420b39:	repnz out 0x59,eax
  420b3c:	pusha  
  420b3d:	xchg   DWORD PTR [eax],ebx
  420b3f:	xor    edx,DWORD PTR ds:0x86306c88
  420b45:	mov    bh,0xb6
  420b47:	mov    edx,0x462583d
  420b4c:	bound  esp,QWORD PTR [esi+esi*8]
  420b4f:	es sahf 
  420b51:	fxch   st(7)
  420b53:	adc    eax,0x40607f9a
  420b58:	jle    0x420b1f
  420b5a:	pop    esp
  420b5b:	inc    eax
  420b5c:	xchg   BYTE PTR [ecx+0x52953299],dh
  420b62:	and    al,0xf7
  420b64:	sbb    eax,0xa5ffe9e6
  420b69:	push   esp
  420b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b6b:	pop    ds
  420b6c:	mov    DWORD PTR ds:[esi-0x51],ebp
  420b70:	push   edx
  420b71:	adc    BYTE PTR [edx],dl
  420b73:	cmp    ah,BYTE PTR [edx]
  420b75:	fsubr  st,st(1)
  420b77:	js     0x420b66
  420b79:	pop    ebx
  420b7a:	or     ecx,DWORD PTR [edi+0x66]
  420b7d:	stos   DWORD PTR es:[edi],eax
  420b7e:	sub    ecx,ebx
  420b80:	xor    ebx,DWORD PTR [edx+0xe]
  420b83:	clc    
  420b84:	call   0x820f0c15
  420b89:	push   eax
  420b8a:	into   
  420b8b:	add    DWORD PTR [eax],eax
	...
  420b9d:	add    BYTE PTR [eax],al
  420b9f:	add    dl,dh
  420ba1:	fld    DWORD PTR [ecx]
  420ba3:	jmp    0xfbb831ed
  420ba8:	sbb    edx,ecx
  420baa:	lea    ebp,ds:0xe966c182
  420bb0:	jno    0x420b96
  420bb2:	adc    eax,0xa5b421
  420bb7:	push   0xffffffdd
  420bb9:	rcl    DWORD PTR [edx+0x64],1
  420bbc:	push   ebp
  420bbd:	mov    ebp,0x503f1918
  420bc2:	enter  0x6f91,0x36
  420bc6:	cld    
  420bc7:	sahf   
  420bc8:	inc    esi
  420bc9:	xchg   DWORD PTR [ebp+0x32],ebx
  420bcc:	loope  0x420be7
  420bce:	and    eax,0xbfd961eb
  420bd3:	sbb    al,0xeb
  420bd5:	icebp  
  420bd6:	jg     0x420b5d
  420bd8:	sub    DWORD PTR [edx-0x13],ebx
  420bdb:	or     DWORD PTR [ebx-0x34e9ad78],edx
  420be1:	loop   0x420b6a
  420be3:	pop    eax
  420be4:	push   ds
  420be5:	sahf   
  420be6:	or     al,0x69
  420be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420be9:	rol    DWORD PTR [ecx],1
  420beb:	fsubr  QWORD PTR [edi]
  420bed:	pop    edx
  420bee:	jl     0x420bcd
  420bf0:	lea    ebp,[ebx+0x8]
  420bf3:	shl    DWORD PTR [ebx-0x7f],cl
  420bf6:	jmp    0x11b6d17
  420bfb:	ret    
  420bfc:	dec    eax
  420bfd:	push   eax
  420bfe:	push   ebp
  420bff:	add    eax,0xe2e88c46
	...
  420c18:	lock jecxz 0x420c16
  420c1b:	ins    BYTE PTR es:[edi],dx
  420c1c:	cmp    eax,0x31bf1cbd
  420c21:	push   eax
  420c22:	inc    ebp
  420c23:	lds    edx,FWORD PTR [ecx+0x6f]
  420c26:	ds add bl,cl
  420c29:	add    BYTE PTR [edi],al
  420c2b:	stos   DWORD PTR es:[edi],eax
  420c2c:	retf   0x81d8
  420c2f:	les    edi,FWORD PTR [ebx-0x3c80449d]
  420c35:	leave  
  420c36:	rol    BYTE PTR [eax-0x4e],0x6d
  420c3a:	sti    
  420c3b:	dec    ebx
  420c3d:	jmp    0x420c34
  420c3f:	push   esi
  420c40:	pop    eax
  420c41:	add    al,0x41
  420c43:	push   ebx
  420c44:	jne    0x420cc5
  420c46:	sub    esp,0x244049af
  420c4c:	inc    edi
  420c4d:	lea    edx,[edx-0x73]
  420c50:	aas    
  420c51:	icebp  
  420c52:	cmp    ecx,DWORD PTR [ecx-0x76c40ea9]
  420c58:	addr16 icebp 
  420c5a:	aas    
  420c5b:	mov    DWORD PTR [edi-0xf],edx
  420c5e:	inc    ebx
  420c5f:	call   0x3fe4ba
  420c64:	pop    es
  420c65:	sbb    eax,0xe0dc7a70
  420c6a:	xchg   BYTE PTR [edi+eiz*1-0x40],al
  420c6e:	push   0xd83fca
  420c73:	push   eax
  420c74:	scas   al,BYTE PTR es:[edi]
  420c75:	mov    DWORD PTR [eax+ebp*1],esp
  420c78:	mov    bl,0x48
  420c7a:	aaa    
  420c7b:	inc    DWORD PTR [eax]
	...
  420c8d:	add    BYTE PTR [eax],al
  420c8f:	add    BYTE PTR [ecx+edx*2+0x532a74bc],bl
  420c96:	push   eax
  420c97:	and    al,0x33
  420c99:	push   ebx
  420c9a:	dec    eax
  420c9b:	and    al,0x7
  420c9d:	xor    ch,al
  420c9f:	out    0xb,al
  420ca1:	fmul   DWORD PTR [ecx+0x29c5674c]
  420ca7:	enter  0x8982,0x24
  420cab:	sbb    BYTE PTR [esi+0x1d],dh
  420cae:	jle    0x420ced
  420cb0:	jo     0x420cd0
  420cb2:	push   0x2d
  420cb4:	(bad)  
  420cb5:	call   ebp
  420cb7:	push   esi
  420cb8:	cmc    
  420cb9:	ror    BYTE PTR [ebx+0x39bfdfe7],0x2e
  420cc0:	out    0xd4,eax
  420cc2:	cmp    BYTE PTR [eax],bl
  420cc4:	jmp    0xd955f116
  420cc9:	inc    edx
  420cca:	add    al,0x51
  420ccc:	mov    edx,0xbdfd3ad3
  420cd1:	jge    0x420c92
  420cd3:	jae    0x420d38
  420cd5:	mov    ah,0x83
  420cd7:	sar    BYTE PTR [edi-0x3b],0x39
  420cdb:	in     al,dx
  420cdc:	fldcw  WORD PTR [ebp+0x3b8a13e8]
  420ce2:	mov    edi,?
  420ce4:	xchg   ebp,eax
  420ce5:	(bad)  
  420ce7:	adc    BYTE PTR [edx+eax*1-0x17863f6c],0x8a
  420cef:	dec    ebx
  420cf0:	inc    esi
  420cf1:	out    dx,al
  420cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cf3:	mov    bl,0x0
	...
  420d05:	add    BYTE PTR [eax],al
  420d07:	add    dh,ah
  420d09:	icebp  
  420d0a:	dec    DWORD PTR [edx-0x17e3e1e2]
  420d10:	sub    al,0x17
  420d12:	mov    edi,0x5f2fe9fc
  420d17:	pop    esi
  420d18:	mov    bh,0xc7
  420d1a:	mov    esp,edx
  420d1c:	scas   eax,DWORD PTR es:[edi]
  420d1d:	das    
  420d1e:	test   ebx,ebp
  420d20:	xchg   dl,dh
  420d22:	(bad)  
  420d23:	call   DWORD PTR [ecx-0x73ad2441]
  420d29:	ja     0x420d9e
  420d2b:	and    ebx,DWORD PTR [esi-0x72000006]
  420d31:	addr16 mov esp,0xe8dc9e86
  420d37:	xchg   BYTE PTR [esi-0x5179132c],dh
  420d3d:	fdivr  st(0),st
  420d3f:	xchg   BYTE PTR [esi-0x1ae03227],ah
  420d45:	test   ebp,eax
  420d47:	jecxz  0x420d25
  420d49:	test   ebp,ecx
  420d4b:	inc    edi
  420d4c:	in     eax,0x85
  420d4e:	lds    ecx,FWORD PTR [ebx-0x23]
  420d51:	test   ebp,ecx
  420d53:	jmp    eax
  420d55:	jmp    0x420dcc
  420d57:	pop    ecx
  420d58:	addr16 push ebx
  420d5a:	pop    ecx
  420d5b:	add    esp,DWORD PTR [edx-0x27]
  420d5e:	shl    WORD PTR [ebx+0x63],0x4
  420d63:	test   DWORD PTR [edi-0x1d79152a],edi
  420d69:	fldl2t 
  420d6b:	add    eax,DWORD PTR [eax]
	...
  420d7d:	add    BYTE PTR [eax],al
  420d7f:	add    bl,bl
  420d81:	pop    ebp
  420d82:	push   es
  420d83:	pop    eax
  420d84:	pop    esp
  420d85:	fldl2t 
  420d87:	push   edx
  420d88:	xor    dl,BYTE PTR [esi+ebp*1-0x18]
  420d8c:	inc    ecx
  420d8d:	icebp  
  420d8e:	daa    
  420d8f:	cmp    al,0x8f
  420d91:	loop   0x420d51
  420d93:	xor    ebx,ebx
  420d95:	call   0x946e:0xd77f84ed
  420d9c:	(bad)  
  420d9e:	jmp    0xc5dfe6a6
  420da3:	pop    ds
  420da4:	fstp   QWORD PTR [ebp-0x6316d833]
  420daa:	lds    esp,FWORD PTR [ebx]
  420dac:	mov    dl,0x88
  420dae:	pusha  
  420daf:	pop    eax
  420db0:	xchg   BYTE PTR [ecx-0x26],dh
  420db3:	xchg   edi,eax
  420db4:	mov    eax,ds:0x998ad9bd
  420db9:	mov    ebp,0x89e6abd5
  420dbe:	push   edx
  420dbf:	sar    DWORD PTR [edx],0x98
  420dc2:	pop    esp
  420dc3:	nop
  420dc4:	adc    DWORD PTR [ecx-0x16],0x22f16203
  420dcb:	test   al,0x15
  420dcd:	loop   0x420dcf
  420dcf:	ret    
  420dd0:	jne    0x420e20
  420dd2:	mov    ebp,0xfbe2f105
  420dd7:	jmp    0xadcf9a78
  420ddc:	std    
  420ddd:	shr    eax,0xd7
  420de0:	sub    ah,ah
  420de2:	sti    
  420de3:	push   0x0
	...
  420df5:	add    BYTE PTR [eax],al
  420df7:	add    BYTE PTR [ebx],bl
  420df9:	scas   eax,DWORD PTR es:[edi]
  420dfa:	dec    ebp
  420dfb:	jl     0x420e0e
  420dfd:	jp     0x420dbb
  420dff:	in     al,0x61
  420e01:	(bad)  [ebp+0x14dba6d]
  420e07:	jmp    0xe692966d
  420e0c:	push   esp
  420e0d:	adc    DWORD PTR [edx],0x7d505e29
  420e13:	or     eax,0xddc558b6
  420e18:	(bad)  
  420e19:	xchg   esp,eax
  420e1a:	add    al,0x53
  420e1c:	popa   
  420e1d:	dec    esi
  420e1e:	inc    ebp
  420e1f:	add    eax,0xf5e8917e
  420e24:	xor    al,0xd9
  420e26:	add    al,dh
  420e28:	and    eax,0x691c20bd
  420e2d:	push   ecx
  420e2e:	pop    ebp
  420e2f:	lds    ebx,FWORD PTR [ebx-0x6]
  420e32:	and    ebp,edx
  420e34:	popa   
  420e35:	fld    DWORD PTR [edi+0x247dd882]
  420e3b:	mov    ecx,0xe12474e8
  420e40:	or     esp,esp
  420e42:	jl     0x420eba
  420e44:	and    bl,BYTE PTR [eax+0x45]
  420e47:	lds    edx,FWORD PTR [ebp+0x74eafb5a]
  420e4d:	leave  
  420e4e:	push   ecx
  420e4f:	mov    edx,0x6456c587
  420e54:	popf   
  420e55:	mov    ch,0x7c
  420e57:	inc    ecx
  420e58:	and    BYTE PTR [ecx+eax*1+0x0],bl
	...
  420e70:	or     ebp,DWORD PTR [esi]
  420e72:	or     ebp,DWORD PTR [edx+0x2f]
  420e75:	lea    eax,[edi+0x50995f44]
  420e7b:	jmp    FWORD PTR [esi]
  420e7d:	lea    edx,[edx]
  420e7f:	inc    eax
  420e80:	or     edx,DWORD PTR [esi-0x40]
  420e83:	or     al,0x70
  420e85:	test   al,0x24
  420e87:	sub    al,0xe1
  420e89:	fadd   DWORD PTR [ecx+0xd83fafe]
  420e8f:	dec    esp
  420e90:	pop    ss
  420e91:	stc    
  420e92:	sbb    eax,DWORD PTR [ebx+0x1bf857]
  420e98:	inc    ebx
  420e99:	and    BYTE PTR [esi+edx*1],0x42
  420e9d:	nop
  420e9e:	and    al,0x34
  420ea0:	xor    bh,BYTE PTR [ecx+0x24]
  420ea3:	push   eax
  420ea4:	les    ecx,FWORD PTR [esi+0x50]
  420ea7:	add    bh,BYTE PTR [ebx+0x20c589dc]
  420ead:	adc    eax,0xf14f8910
  420eb2:	push   ebx
  420eb3:	mov    ebx,eax
  420eb5:	dec    esi
  420eb6:	pop    eax
  420eb7:	and    al,0x6f
  420eb9:	push   edx
  420eba:	ret    
  420ebb:	(bad)  
  420ebd:	fiadd  WORD PTR [ecx]
  420ebf:	add    BYTE PTR [ebx-0x2cfbb2ad],cl
  420ec5:	xlat   BYTE PTR ds:[ebx]
  420ec6:	push   edx
  420ec7:	add    BYTE PTR [ebx+0x58],bh
  420eca:	mov    esp,0x1edff0f
  420ecf:	add    BYTE PTR [ebx+0x53],cl
  420ed2:	js     0x420ef8
	...
  420ee8:	aaa    
  420ee9:	(bad)  
  420eeb:	mov    DWORD PTR [edi-0x8],edx
  420eee:	xor    ecx,DWORD PTR [ebx+0x74e752c8]
  420ef4:	pop    edi
  420ef5:	push   esp
  420ef6:	push   0x58545b24
  420efb:	and    al,0x62
  420efd:	jmp    0x2448:0x795a4490
  420f04:	mov    ds:0x6e69bc6b,al
  420f09:	inc    ebp
  420f0a:	push   ebx
  420f0b:	std    
  420f0c:	ja     0x420f4c
  420f0e:	push   ss
  420f0f:	inc    eax
  420f10:	bound  esi,QWORD PTR [ebx-0x38]
  420f13:	or     esp,edi
  420f15:	mov    cl,0x38
  420f17:	or     BYTE PTR [ebx+esi*2-0x3cd6ec37],bl
  420f1e:	cs in  eax,0xd9
  420f21:	dec    ebp
  420f22:	in     al,0x37
  420f24:	jmp    0x9159f36e
  420f29:	mov    ebx,0x6d5df2f7
  420f2e:	outs   dx,BYTE PTR ds:[esi]
  420f2f:	inc    ch
  420f31:	icebp  
  420f32:	test   dl,bh
  420f34:	aam    0xf1
  420f36:	(bad)  
  420f37:	jmp    DWORD PTR [ebp+0x73]
  420f3a:	sar    dh,1
  420f3c:	lods   eax,DWORD PTR ds:[esi]
  420f3d:	icebp  
  420f3e:	xchg   BYTE PTR [ebx+0x7e],dh
  420f41:	stos   BYTE PTR es:[edi],al
  420f42:	xchg   ecx,eax
  420f43:	dec    ebx
  420f44:	inc    esi
  420f45:	loop   0x420ed7
  420f47:	push   ebp
  420f48:	outs   dx,BYTE PTR ds:[esi]
  420f49:	or     cl,BYTE PTR [edx]
  420f4b:	mov    al,BYTE PTR [eax]
	...
  420f5d:	add    BYTE PTR [eax],al
  420f5f:	add    BYTE PTR [edx-0xe],ah
  420f62:	cmp    DWORD PTR [edi+0x1426d40e],0xffffffef
  420f69:	scas   al,BYTE PTR es:[edi]
  420f6a:	or     al,0x50
  420f6c:	jmp    0x6179f826
  420f71:	xor    BYTE PTR [eax-0x3],dl
  420f74:	dec    edi
  420f75:	mov    ds:0x73624012,al
  420f7a:	ret    
  420f7b:	or     ebx,DWORD PTR [edi-0x24ec3a8d]
  420f81:	aam    0xe8
  420f83:	pop    ss
  420f84:	fnsetpm(287 only) 
  420f86:	jecxz  0x420fdf
  420f88:	out    dx,eax
  420f89:	(bad)  
  420f8b:	or     ecx,DWORD PTR [esp+ecx*2+0x5079e7ae]
  420f92:	fsubrp st(7),st
  420f94:	test   ecx,esi
  420f96:	(bad)  
  420f97:	cmp    DWORD PTR [edi],ebx
  420f99:	fild   QWORD PTR [ebx+eax*8+0x66]
  420f9d:	push   eax
  420f9e:	xchg   ebx,eax
  420f9f:	add    al,0x62
  420fa1:	fstp   DWORD PTR [esi-0x33]
  420fa4:	std    
  420fa5:	mov    ebp,0x55febead
  420faa:	sub    cl,BYTE PTR [esi]
  420fac:	loope  0x420f3f
  420fae:	call   0x64c871b6
  420fb3:	dec    edi
  420fb4:	lods   eax,DWORD PTR ds:[esi]
  420fb6:	add    DWORD PTR [edi-0x78fd21b0],esp
  420fbc:	adc    eax,0xccf564cf
  420fc1:	fsubp  st(1),st
  420fc3:	add    BYTE PTR [eax],0x0
	...
  420fd6:	add    BYTE PTR [eax],al
  420fd8:	cwde   
  420fd9:	fisub  WORD PTR [esi+0x3f]
  420fdc:	xchg   BYTE PTR [ebp-0x21a5bfe9],ch
  420fe2:	push   ebp
  420fe3:	call   0xe8685c01
  420fe8:	jns    0x420f71
  420fea:	rcl    DWORD PTR [ebx-0x763d21ec],0x7d
  420ff1:	push   esp
  420ff2:	int    0xd
  420ff4:	fcmove st,st(1)
  420ff6:	call   0x269471fe
  420ffb:	call   0x86c6241
  421000:	jmp    0x42102b
  421002:	push   0x3
  421004:	(bad)  
  421005:	fld    DWORD PTR [ecx-0x16261d5d]
  42100b:	lock xor esp,DWORD PTR [eax]
  42100e:	dec    edx
  42100f:	or     eax,0xb372d962
  421014:	fcom   DWORD PTR [eax+eax*1-0x41a16233]
  42101b:	popa   
  42101c:	push   ebx
  42101d:	fld    DWORD PTR [eax]
  42101f:	mov    ebx,0x72538e91
  421024:	sbb    al,0xf6
  421026:	fnsave [edi+eiz*8-0x24]
  42102a:	jg     0x42107d
  42102c:	popa   
  42102d:	int3   
  42102e:	mov    WORD PTR [esi],ds
  421030:	pop    esi
  421031:	fld    DWORD PTR [eax]
  421033:	ds mov dl,0xb5
  421036:	xor    al,0x41
  421038:	out    dx,al
  421039:	cmp    ah,bh
  42103b:	add    BYTE PTR cs:[eax],al
	...
  42104e:	add    BYTE PTR [eax],al
  421050:	repz push ss
  421052:	test   DWORD PTR [ecx],ebp
  421054:	jmp    0x420fef
  421056:	and    al,0xc5
  421058:	pop    esi
  421059:	dec    edx
  42105a:	ret    0x9e62
  42105d:	aad    0x87
  42105f:	imul   esi,esi,0xe8e9fbde
  421065:	cdq    
  421066:	and    al,0xc1
  421068:	fsubr  QWORD PTR [ebp+0x28]
  42106b:	lahf   
  42106c:	fcom   DWORD PTR [ecx-0x35015adc]
  421072:	loopne 0x42106f
  421074:	and    ecx,ebx
  421076:	xchg   DWORD PTR ds:0x3139a5ba,esp
  42107c:	push   esi
  42107d:	addr16 push es
  42107f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421080:	and    eax,0x98e813b5
  421085:	test   DWORD PTR [eax],ebx
  421087:	ss pop edx
  421089:	push   ecx
  42108a:	pop    ebp
  42108b:	or     eax,0xd4fb876f
  421090:	popf   
  421091:	mov    DWORD PTR [eax-0x17],0xf62461e1
  421098:	popa   
  421099:	push   eax
  42109a:	dec    ebp
  42109b:	int    0x21
  42109d:	int3   
  42109e:	xchg   esp,eax
  42109f:	test   eax,0x2498e9
  4210a4:	pop    ebx
  4210a5:	push   esp
  4210a6:	ret    
  4210a7:	jne    0x4210f0
  4210a9:	push   ebp
  4210aa:	mov    esp,0x40522e74
  4210af:	and    al,0x27
  4210b1:	mov    cl,0x88
  4210b3:	adc    eax,DWORD PTR [eax]
	...
  4210c5:	add    BYTE PTR [eax],al
  4210c7:	add    BYTE PTR [ebx-0x27],cl
  4210ca:	dec    ebx
  4210cb:	call   DWORD PTR [edi]
  4210cd:	cmc    
  4210ce:	jae    0x42105b
  4210d0:	add    edx,ebp
  4210d2:	push   ebp
  4210d3:	mov    eax,DWORD PTR [edx+0xbfffb58]
  4210d9:	xor    DWORD PTR [ecx+0x7f1d4c9c],esp
  4210df:	in     eax,dx
  4210e0:	ror    dh,cl
  4210e2:	add    sp,dx
  4210e5:	dec    ebx
  4210e6:	dec    eax
  4210e7:	and    al,0x1b
  4210e9:	xor    DWORD PTR [ebx+0x76],esp
  4210ec:	dec    esp
  4210ed:	sbb    eax,0x85aa0ce9
  4210f2:	dec    edi
  4210f3:	(bad)  
  4210f4:	push   esp
  4210f6:	das    
  4210f7:	call   0x3fb6f1
  4210fc:	inc    edi
  4210fd:	sbb    BYTE PTR [eax+0x33],dh
  421100:	inc    eax
  421101:	fs pop ds
  421103:	push   esp
  421104:	(bad)
  421107:	mov    BYTE PTR [edi+0x460115f9],0x27
  42110e:	jo     0x42111f
  421110:	mov    WORD PTR [ecx+0xf005c24],gs
  421116:	in     al,0x30
  421118:	and    ah,BYTE PTR [eax]
  42111a:	std    
  42111b:	test   DWORD PTR [ebx+0x3f8d149e],edi
  421121:	stc    
  421122:	and    ebp,eax
  421124:	fsub   DWORD PTR [ebp+edi*8+0x2499bcff]
  42112b:	cmp    al,0x0
	...
  42113d:	add    BYTE PTR [eax],al
  42113f:	add    dl,dh
  421141:	inc    eax
  421142:	and    BYTE PTR [edx+eiz*2-0x14],dl
  421146:	(bad)  
  421147:	(bad)  
  421148:	jmp    0xe959ed2a
  42114d:	mov    ebp,0xe5d94fe0
  421152:	fist   DWORD PTR [ebx-0x27]
  421155:	in     eax,0xdb
  421157:	and    esp,DWORD PTR [eax-0x14c84191]
  42115d:	sbb    eax,0x5db4fdc
  421162:	fcom   QWORD PTR [ebx+0x69]
  421165:	push   ds
  421166:	fcomp  QWORD PTR [edi]
  421168:	lahf   
  421169:	std    
  42116a:	mov    cl,BYTE PTR [ebx+0x3e]
  42116d:	fisubr WORD PTR [eax+eax*8-0x774864f1]
  421174:	xchg   dh,cl
  421176:	loopne 0x421100
  421178:	jbe    0x421150
  42117a:	call   0x1450b807
  42117f:	call   0x467b79
  421184:	fldcw  WORD PTR ds:0x35eb43dc
  42118a:	fcomp  QWORD PTR [ebx]
  42118c:	jmp    0x9189edbe
  421191:	test   eax,0x127e438d
  421196:	test   al,0xdf
  421198:	jmp    0x48ce:0x1e88fff1
  42119f:	xchg   DWORD PTR [esi],esp
  4211a1:	(bad)  
  4211a2:	and    al,0x8b
	...
  4211b8:	push   ds
  4211b9:	into   
  4211ba:	and    al,0x50
  4211bc:	or     ah,BYTE PTR [eax-0x779dc11b]
  4211c2:	cld    
  4211c3:	cld    
  4211c4:	push   ss
  4211c5:	(bad)  
  4211c6:	call   0x51103851
  4211cb:	std    
  4211cc:	not    ch
  4211ce:	call   0xce1b2859
  4211d3:	push   edi
  4211d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211d5:	xchg   esp,eax
  4211d6:	lds    edi,FWORD PTR [ebx]
  4211d8:	gs repz mov ch,0x4a
  4211dc:	pusha  
  4211dd:	fldenv [esi-0x41]
  4211e0:	jno    0x42123b
  4211e2:	push   es
  4211e3:	loopne 0x42125c
  4211e5:	fsubr  st,st(2)
  4211e7:	jg     0x421260
  4211e9:	fdiv   QWORD PTR [edx-0x46]
  4211ec:	jmp    0x723f:0x3df3c58d
  4211f3:	add    esp,DWORD PTR [edx+0x4e]
  4211f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211f7:	fild   QWORD PTR [ecx+0x4e]
  4211fa:	mov    dh,0xdf
  4211fc:	inc    ebp
  4211fd:	push   esp
  4211fe:	sub    cl,BYTE PTR [edx]
  421200:	not    DWORD PTR [ebp+0x1053120d]
  421206:	push   edx
  421207:	sbb    ch,0xd9
  42120a:	jmp    0xcdf7bb9d
  42120f:	stos   DWORD PTR es:[edi],eax
  421210:	jns    0x421263
  421212:	jmp    0xda30:0x120edb03
  421219:	fldl2t 
  42121b:	lea    eax,[eax]
	...
  42122d:	add    BYTE PTR [eax],al
  42122f:	add    BYTE PTR [ecx],ah
  421231:	mov    ch,0xf3
  421233:	pop    edx
  421234:	xor    al,0x7c
  421236:	sahf   
  421237:	test   BYTE PTR [ecx+0x6203e39d],ah
  42123d:	pop    ss
  42123e:	loop   0x421243
  421240:	adc    DWORD PTR [esi-0x2],ecx
  421243:	test   ecx,eax
  421245:	loope  0x4212ad
  421247:	test   al,0x55
  421249:	xchg   BYTE PTR [edx+edx*2],dh
  42124c:	cmovle esi,DWORD PTR [ecx-0x7fe8f47]
  421253:	inc    ebx
  421254:	bound  edx,QWORD PTR [eax+0x2e]
  421257:	loopne 0x4212ce
  421259:	sbb    al,0x8a
  42125b:	add    esp,DWORD PTR [edx-0x27]
  42125e:	add    BYTE PTR [edx+0x27],ah
  421261:	aad    0xff
  421263:	mov    ds:0x8915dc0e,eax
  421268:	push   esp
  421269:	cdq    
  42126a:	add    bl,bl
  42126c:	mov    eax,ds:0x77cd4552
  421271:	icebp  
  421272:	dec    edi
  421273:	sbb    ebx,DWORD PTR [ebx]
  421275:	fld    QWORD PTR [edi+0x75ddcd81]
  42127b:	adc    esi,DWORD PTR [ecx+ebx*8+0x66]
  42127f:	jmp    0xed2b2372
  421284:	neg    ah
  421286:	sti    
  421287:	ins    DWORD PTR es:[edi],dx
  421288:	es addr16 daa 
  42128b:	sbb    bl,BYTE PTR [esi]
  42128d:	jo     0x42128f
  42128f:	test   eax,0x41c850b1
	...
  4212a8:	dec    edx
  4212a9:	loopne 0x4212a6
  4212ab:	inc    esi
  4212ac:	loop   0x4212c7
  4212ae:	jbe    0x421293
  4212b0:	(bad)  
  4212b1:	cwde   
  4212b2:	add    al,0xc1
  4212b4:	and    DWORD PTR [ebp+0x29bae909],esi
  4212ba:	popf   
  4212bb:	call   0xf53dec21
  4212c0:	gs enter 0xe940,0x5c
  4212c5:	sbb    dh,BYTE PTR [ebp-0x11]
  4212c8:	push   es
  4212c9:	aad    0x2f
  4212cb:	sub    DWORD PTR [esi],esp
  4212cd:	push   ecx
  4212ce:	inc    ebp
  4212cf:	lds    ebp,FWORD PTR [edi-0x24]
  4212d2:	adc    eax,0x995411
  4212d7:	pusha  
  4212d8:	and    dh,BYTE PTR [ebp+0x6af4d118]
  4212de:	sti    
  4212df:	(bad)  
  4212e1:	loope  0x421268
  4212e3:	(bad)  
  4212e4:	dec    ebp
  4212e5:	das    
  4212e6:	xchg   dh,cl
  4212e8:	push   0x55
  4212ea:	imul   eax,DWORD PTR [eax],0x79
  4212ed:	aad    0x0
  4212ef:	mov    bh,BYTE PTR [edi]
  4212f1:	stc    
  4212f2:	adc    DWORD PTR [ebx+ecx*8-0x74688030],eax
  4212f9:	aad    0x0
  4212fb:	lea    ebp,[edi]
  4212fd:	stc    
  4212fe:	sbb    edi,DWORD PTR [ecx+0xd5b0]
  421304:	jecxz  0x4212f9
  421306:	add    eax,0xbc584b01
  42130b:	je     0x42130d
	...
  42131d:	add    BYTE PTR [eax],al
  42131f:	add    BYTE PTR ds:0x1b24775e,ch
  421325:	fldcw  WORD PTR [esi+0xf]
  421328:	ror    ah,0x88
  42132b:	enter  0x8c2,0x25
  42132f:	and    BYTE PTR [ebx+0x3b008473],dl
  421335:	xchg   BYTE PTR [edx],al
  421337:	mov    eax,DWORD PTR [ebx-0x7c]
  42133a:	mov    eax,DWORD PTR [edi-0x9ce22f5]
  421340:	mov    bl,0xca
  421342:	inc    esi
  421343:	add    ebx,edi
  421345:	gs jecxz 0x4212cd
  421348:	cmp    eax,0x568b5a08
  42134d:	(bad)
  421350:	inc    edx
  421351:	pop    esp
  421352:	cmp    DWORD PTR [ecx],ecx
  421354:	sti    
  421355:	or     cl,BYTE PTR [esi-0x75]
  421358:	les    eax,FWORD PTR [ebx+ebp*2-0x7e233479]
  42135f:	daa    
  421360:	mov    ebx,0xbb04645d
  421365:	gs int3 
  421367:	call   0x401e28
  42136c:	inc    eax
  42136d:	loope  0x421357
  42136f:	pop    ebx
  421370:	cmp    al,0xdd
  421372:	add    BYTE PTR [ebx-0x78b07a0c],cl
  421378:	(bad)  {k2}{z}
  42137d:	ret    0xf80a
  421380:	lea    ebp,[ecx+eax*1]
  421383:	mov    eax,DWORD PTR [eax]
	...
  421395:	add    BYTE PTR [eax],al
  421397:	add    BYTE PTR [esi],ch
  421399:	fsubrp st(4),st
  42139b:	mov    dh,0xa9
  42139d:	ret    0xffff
  4213a0:	jmp    0x4213a0
  4213a2:	loopne 0x4213c3
  4213a4:	jp     0x42139a
  4213a6:	add    edi,edi
  4213a8:	gs mov bl,0xbf
  4213ab:	imul   esp,DWORD PTR [edx+0x2],0x5a298955
  4213b2:	mov    cl,bh
  4213b4:	dec    ebp
  4213b5:	pop    edi
  4213b6:	lods   eax,DWORD PTR ds:[esi]
  4213b7:	mov    BYTE PTR [ebx-0x3e],ah
  4213ba:	dec    DWORD PTR [eax+0x719a5a2d]
  4213c0:	xor    eax,0x8643bb47
  4213c5:	aam    0xff
  4213c7:	out    0xfc,eax
  4213c9:	popa   
  4213ca:	mov    bl,0xfc
  4213cc:	push   ecx
  4213cd:	stc    
  4213ce:	cmp    BYTE PTR [edi+0xd57c188],0xa7
  4213d5:	or     dh,al
  4213d7:	jmp    0x9f3b:0x23db85db
  4213de:	sti    
  4213df:	or     al,0xe4
  4213e1:	and    BYTE PTR ds:0xadb36200,al
  4213e7:	xchg   BYTE PTR [esi-0x62],ch
  4213ea:	or     ecx,DWORD PTR [ecx-0x415839d7]
  4213f0:	xor    eax,edx
  4213f2:	inc    DWORD PTR [ebx-0x3784315e]
  4213f8:	(bad)  {z}
	...
  42140d:	add    BYTE PTR [eax],al
  42140f:	add    BYTE PTR [ebp-0x3d],ah
  421412:	mov    ebp,0x139e1e86
  421417:	mov    ebx,DWORD PTR [edx]
  421419:	fyl2x  
  42141b:	stos   DWORD PTR es:[edi],eax
  42141c:	xor    BYTE PTR [ecx-0x25],dl
  42141f:	mov    dh,0xe1
  421421:	cwde   
  421422:	pop    ebp
  421423:	sbb    al,0x31
  421425:	fs call 0x18b6:0xc34db2ab
  42142d:	pop    esp
  42142e:	retf   
  42142f:	sti    
  421430:	xor    bl,BYTE PTR [ecx-0x2de73d7]
  421436:	xlat   BYTE PTR ds:[ebx]
  421437:	lods   al,BYTE PTR ds:[esi]
  421438:	(bad)  
  42143a:	jmp    0xc65eb042
  42143f:	adc    ah,BYTE PTR [edx+0x62]
  421442:	es add bl,ch
  421445:	mov    DWORD PTR [ecx+0x4],ebp
  421448:	(bad)  
  421449:	fst    DWORD PTR [ecx-0x16261da4]
  42144f:	repnz adc edx,DWORD PTR [ecx-0x269df9b7]
  421456:	jb     0x42140c
  421458:	jb     0x4213f3
  42145a:	test   eax,0x2759178a
  42145f:	fwait
  421460:	pop    ebx
  421461:	fldl2t 
  421463:	push   ecx
  421464:	pop    ss
  421465:	dec    esi
  421466:	push   es
  421467:	in     al,dx
  421468:	popf   
  421469:	(bad)  
  42146a:	mov    ebp,0x88c13ddf
  42146f:	pushf  
  421470:	(bad)  
  421471:	(bad)  
  421472:	ins    BYTE PTR es:[edi],dx
  421473:	ret    
	...
  421488:	jbe    0x42149a
  42148a:	pusha  
  42148b:	aas    
  42148c:	inc    esi
  42148d:	jmp    0x12c6:0x1dddc323
  421494:	sahf   
  421495:	fcom   DWORD PTR [edi-0x678e4288]
  42149b:	add    esp,DWORD PTR [edx+0x5d]
  42149e:	sub    DWORD PTR [edi],ebp
  4214a0:	lea    esp,[edx-0x5b]
  4214a3:	fistp  WORD PTR [ecx-0x29]
  4214a6:	add    BYTE PTR [ecx-0x49bf9f3c],ch
  4214ac:	mov    ch,0xd8
  4214ae:	outs   dx,BYTE PTR ds:[esi]
  4214af:	not    DWORD PTR [eax+eiz*2]
  4214b2:	retf   
  4214b3:	sar    DWORD PTR [edx],1
  4214b5:	dec    edx
  4214b6:	cld    
  4214b7:	(bad)  
  4214b8:	jmp    0x421504
  4214ba:	and    eax,0x8759baf5
  4214bf:	cmp    eax,0x68e7ea82
  4214c4:	into   
  4214c5:	mov    DWORD PTR [edi-0x18],0x54c6061
  4214cc:	dec    edx
  4214cd:	pop    esi
  4214ce:	inc    ecx
  4214cf:	in     eax,dx
  4214d0:	jb     0x421468
  4214d2:	inc    eax
  4214d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214d4:	mov    eax,ds:0xa261010c
  4214d9:	std    
  4214da:	push   cs
  4214db:	bound  edx,QWORD PTR [edx-0x1cd3eb03]
  4214e1:	fwait
  4214e2:	cmp    BYTE PTR [eax+0x72],dh
  4214e5:	std    
  4214e6:	adc    al,0xb2
  4214e8:	jle    0x4214c7
  4214ea:	or     ebx,DWORD PTR [ebp+0x0]
	...
  4214fd:	add    BYTE PTR [eax],al
  4214ff:	add    BYTE PTR ds:0xdb66fbd5,cl
  421505:	and    BYTE PTR ds:0xe92c63d3,al
  42150b:	gs lahf 
  42150d:	fld    DWORD PTR [eax]
  42150f:	fidivr WORD PTR [edi+0x22]
  421512:	and    eax,0x669685db
  421517:	call   0x2187f9b5
  42151c:	loop   0x4214bc
  42151e:	je     0x421506
  421520:	fisub  DWORD PTR [eax+ebp*8-0x42bd18a]
  421527:	push   0xffffff97
  421529:	(bad)  [esi]
  42152b:	xchg   esp,eax
  42152c:	into   
  42152d:	pop    eax
  42152e:	jnp    0x421515
  421530:	push   0x5c004052
  421535:	out    0xd8,al
  421537:	adc    cl,BYTE PTR [ebx]
  421539:	fisubr DWORD PTR [ecx]
  42153b:	inc    esp
  42153c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42153d:	icebp  
  42153e:	aaa    
  42153f:	sub    BYTE PTR [ebp+0x4975fbc3],0x24
  421546:	add    edx,DWORD PTR [bx+si]
  421549:	mov    eax,ds:0x8cb232e3
  42154e:	cld    
  42154f:	test   BYTE PTR [ebx+0x7b6a1706],bh
  421555:	inc    DWORD PTR [eax]
  421557:	mov    esi,DWORD PTR [eax-0x5306df7f]
  42155d:	mov    WORD PTR [edi-0x40],?
  421560:	ss loopne 0x4215c9
	...
  421577:	add    BYTE PTR [ecx-0x25],dl
  42157a:	mov    ebx,ecx
  42157c:	repz in al,0xf3
  42157f:	(bad)  
  421580:	in     al,dx
  421581:	lea    ecx,[esi]
  421583:	fmul   DWORD PTR [ecx+0x19]
  421586:	add    DWORD PTR [ecx-0x74ec4689],ecx
  42158c:	dec    esp
  42158d:	sbb    DWORD PTR [edi-0x7626b47b],0x7e6be3cf
  421597:	add    BYTE PTR [ebx],bh
  421599:	bound  eax,QWORD PTR [eax+0x4]
  42159c:	(bad)  
  42159d:	cmp    bl,bh
  42159f:	dec    DWORD PTR [ebx]
  4215a1:	fidivr DWORD PTR [edi-0x231c63b0]
  4215a7:	adc    bh,BYTE PTR [ebx+0x74389d8]
  4215ad:	bound  ebp,QWORD PTR [ebx+0xd90a9c]
  4215b3:	call   0x4323a5
  4215b8:	or     BYTE PTR [ebx-0x2709cf4e],ch
  4215be:	add    bh,dh
  4215c0:	(bad)  {k1}{z}
  4215c5:	imul   ebx,DWORD PTR [eax],0x0
  4215c8:	xor    BYTE PTR [esp+esi*4+0x12],dh
  4215cc:	out    0xb0,al
  4215ce:	aas    
  4215cf:	add    bh,bl
  4215d1:	add    al,BYTE PTR ds:0xafc54b83
  4215d7:	cld    
  4215d8:	mov    ecx,0x407ace
	...
  4215ed:	add    BYTE PTR [eax],al
  4215ef:	add    BYTE PTR [esi-0x41],ah
  4215f2:	enter  0x954f,0xd5
  4215f6:	retf   
  4215f7:	adc    DWORD PTR [edx],esp
  4215f9:	ret    0x5e4e
  4215fc:	daa    
  4215fd:	idiv   DWORD PTR [ebx-0x1e]
  421600:	pop    ds
  421601:	jg     0x4215b9
  421603:	inc    ebx
  421604:	mov    BYTE PTR ds:[esi+edx*2],0xd9
  421609:	xchg   ecx,eax
  42160a:	mov    DWORD PTR ds:0x454ede,0x3397bdd6
  421614:	ffreep st(1)
  421616:	dec    DWORD PTR [eax+0x3c30424]
  42161c:	(bad)  
  42161d:	out    dx,eax
  42161e:	pop    ecx
  42161f:	push   esi
  421620:	jmp    0x503f6f8d
  421625:	push   es
  421626:	adc    eax,DWORD PTR [eax+0x62]
  421629:	aaa    
  42162a:	int    0xb7
  42162c:	cmp    bh,BYTE PTR [edi-0x7a230001]
  421632:	and    al,BYTE PTR [edx+eiz*2-0x19]
  421636:	int3   
  421637:	jge    0x421678
  421639:	mov    WORD PTR [esi+0x3fb00212],gs
  42163f:	add    cl,ch
  421641:	les    ebx,FWORD PTR [ebx]
  421643:	popa   
  421644:	sahf   
  421645:	ret    0xff97
  421648:	out    0xc1,al
  42164a:	inc    DWORD PTR [eax+0x2695d93f]
  421650:	es fldl2t 
  421653:	test   BYTE PTR [eax],0x0
	...
  421666:	add    BYTE PTR [eax],al
  421668:	adc    eax,0x41668c2b
  42166d:	cmp    BYTE PTR [esi+0x25edc703],ah
  421673:	push   ss
  421674:	and    bl,cl
  421676:	adc    BYTE PTR [eax+0x5ae9d3b5],bl
  42167c:	adc    al,0xd4
  42167e:	aam    0xa3
  421680:	push   ebx
  421681:	sbb    edx,ebp
  421683:	add    dl,bh
  421685:	adc    eax,0xd91e2746
  42168a:	out    0xae,al
  42168c:	aam    0x44
  42168e:	inc    edi
  42168f:	dec    eax
  421690:	bound  ebx,QWORD PTR [edx-0x3e]
  421693:	fwait
  421694:	(bad)  
  421695:	fldl2t 
  421697:	cmp    DWORD PTR ds:0x620a998f,esi
  42169d:	fld    st(1)
  42169f:	add    eax,0x87e9d8de
  4216a4:	sbb    eax,0xf030a4e
  4216a9:	fisttp QWORD PTR ds:0x4ad9a627
  4216af:	fwait
  4216b0:	(bad)  
  4216b1:	fldl2t 
  4216b3:	jle    0x4216e3
  4216b5:	jmp    FWORD PTR [esi-0x229b0b22]
  4216bb:	cld    
  4216bc:	(bad)  
  4216be:	std    
  4216bf:	es sahf 
  4216c1:	fnstenv [edi-0x45e79e80]
  4216c7:	push   esp
  4216c8:	or     ah,BYTE PTR [ebp+ebp*2+0x3]
	...
  4216df:	add    BYTE PTR [edx+0x64],ah
  4216e2:	in     eax,0xe
  4216e4:	mov    dl,0x78
  4216e6:	aad    0x26
  4216e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216e9:	(bad)  
  4216eb:	lds    ecx,FWORD PTR [edx]
  4216ed:	repz add BYTE PTR [ebp+edx*2+0x14],ah
  4216f2:	jmp    0xfc14f321
  4216f7:	ins    DWORD PTR es:[edi],dx
  4216f8:	mov    eax,ds:0x58ee2246
  4216fd:	fbld   TBYTE PTR [edx+ecx*4+0x25]
  421701:	(bad)  [ebp-0x5dd6ab1b]
  421707:	xchg   ebp,eax
  421708:	test   BYTE PTR ds:0x215d6c01,bl
  42170e:	push   esi
  42170f:	cdq    
  421710:	leave  
  421711:	jno    0x421697
  421713:	jmp    0x24cc5279
  421718:	dec    edx
  421719:	cmp    BYTE PTR [ebp-0x17],al
  42171c:	cmp    edx,esp
  42171e:	adc    eax,0x11974b5
  421723:	xor    BYTE PTR cs:[esi],ch
  421726:	pop    eax
  421727:	stos   BYTE PTR es:[edi],al
  421728:	sbb    BYTE PTR [esp+edi*4],ch
  42172b:	sub    eax,0x1e011d3f
  421730:	out    dx,eax
  421731:	(bad)  
  421732:	sti    
  421733:	aam    0xc1
  421735:	call   0xe021007a
  42173a:	jo     0x421746
  42173c:	stos   BYTE PTR es:[edi],al
  42173d:	fldenv [esi-0x3]
  421740:	cdq    
  421741:	cmp    esp,DWORD PTR [eax+0x1]
	...
  421757:	add    BYTE PTR [edi+0x1d],bh
  42175a:	add    DWORD PTR [ecx-0x16ffa9e7],edx
  421760:	fmul   st(3),st
  421762:	jne    0x421745
  421764:	inc    eax
  421765:	pop    es
  421766:	jno    0x421772
  421768:	call   0x66d9:0x7ffbe7d9
  42176f:	pop    esi
  421770:	xchg   edi,eax
  421771:	lods   al,BYTE PTR ds:[esi]
  421772:	das    
  421773:	and    dh,ch
  421775:	ds shr cl,1
  421778:	popa   
  421779:	js     0x4217eb
  42177b:	add    BYTE PTR [eax],ch
  42177d:	sbb    al,BYTE PTR [ecx]
  42177f:	push   edi
  421780:	xor    al,0xea
  421782:	fcom   QWORD PTR [edx]
  421784:	mov    ebx,0x385e5dd5
  421789:	sub    al,0x50
  42178b:	push   esi
  42178c:	sbb    al,0x55
  42178e:	shl    DWORD PTR [ebx],cl
  421790:	ins    DWORD PTR es:[edi],dx
  421791:	inc    edx
  421792:	dec    eax
  421793:	arpl   di,di
  421795:	aad    0x4f
  421797:	mov    edx,DWORD PTR [ebp+0x4e]
  42179a:	xor    edi,edi
  42179c:	sahf   
  42179d:	jne    0x4217b0
  42179f:	inc    eax
  4217a0:	retf   
  4217a1:	call   FWORD PTR [ebx+0x119d864]
  4217a7:	ds popfw 
  4217aa:	outs   dx,DWORD PTR ds:[esi]
  4217ab:	xor    eax,0x6367d310
  4217b0:	aas    
  4217b1:	fnstsw WORD PTR [edi-0x37]
  4217b4:	das    
  4217b5:	mov    ah,0xc
  4217b7:	mov    bh,0xcb
  4217b9:	ins    DWORD PTR es:[edi],dx
  4217ba:	(bad)  
  4217bb:	cwde   
	...
  4217d0:	mov    dl,ch
  4217d2:	jg     0x421794
  4217d4:	das    
  4217d5:	call   0xf9b8cee7
  4217da:	popa   
  4217db:	inc    esp
  4217dc:	jnp    0x42182c
  4217de:	add    DWORD PTR [ebp+0x6a0f0904],eax
  4217e4:	sub    esp,DWORD PTR [ebx+eiz*2]
  4217e7:	cmp    DWORD PTR [edi+0xd],eax
  4217ea:	jb     0x4217f0
  4217ec:	pop    ebp
  4217ed:	push   esp
  4217ee:	or     BYTE PTR [eax-0x73],dh
  4217f1:	mov    esi,0x27ba72f4
  4217f6:	(bad)  
  4217f7:	adc    eax,0x40e6d7
  4217fc:	shl    BYTE PTR [ecx+0x1e265e5c],0xc2
  421803:	push   ebp
  421804:	nop
  421805:	jo     0x421787
  421807:	in     al,0x62
  421809:	sub    bh,BYTE PTR [edi-0x15]
  42180c:	mov    es,ebx
  42180e:	(bad)  
  42180f:	call   DWORD PTR [ecx+0x6a727c70]
  421815:	addr16 xor ch,0x5d
  421819:	ds inc esi
  42181b:	jmp    ebp
  42181d:	ret    0x7a97
  421820:	mov    eax,0xa283ffc2
  421825:	mov    edi,0xc2633283
  42182a:	(bad)  
  42182b:	jle    0x421871
  42182d:	mov    dh,0xfe
  42182f:	add    DWORD PTR [edx-0x3e],esp
  421832:	add    BYTE PTR [ebx+0x0],al
	...
  421848:	in     al,dx
  421849:	ret    0xffff
  42184c:	jmp    0x62863cc7
  421851:	jae    0x421803
  421853:	adc    al,BYTE PTR [edx-0x3ffc02c]
  421859:	pusha  
  42185a:	sbb    al,0x61
  42185c:	es ret 0x8325
  421860:	mov    ds:0x629183af,al
  421865:	ret    0xb6ff
  421868:	jne    0x4217f9
  42186a:	add    al,0x0
  42186c:	add    al,0xc3
  42186e:	les    ecx,FWORD PTR [edx-0x491729f2]
  421874:	cs ret 0xffff
  421878:	mov    esp,0xa6611d23
  42187d:	ret    0x3697
  421880:	std    
  421881:	sar    bh,0x4e
  421884:	out    dx,eax
  421885:	add    eax,0x174a27e9
  42188a:	push   es
  42188b:	add    BYTE PTR [edx+0x3b],ah
  42188e:	lods   eax,DWORD PTR ds:[esi]
  42188f:	and    BYTE PTR ds:0xb68b25c6,0xd9
  421896:	or     eax,0xe9a2ccf0
  42189b:	add    esp,DWORD PTR [edx-0x3f]
  42189e:	out    dx,al
  42189f:	data16 add al,0xd0
  4218a2:	pop    esp
  4218a3:	pop    eax
  4218a4:	inc    esi
  4218a5:	jmp    0xd037d42a
  4218aa:	jmp    0x42194a
	...
  4218bf:	add    BYTE PTR [eax+0x78],bl
  4218c2:	call   0x1227ffca
  4218c7:	adc    ah,BYTE PTR [edx]
  4218c9:	fnstcw WORD PTR [ecx-0x59c3ba9c]
  4218cf:	add    ecx,edi
  4218d1:	add    eax,0xd91e4ef2
  4218d6:	fs (bad) 
  4218d8:	call   0x674de6f9
  4218dd:	push   ss
  4218de:	xor    dl,BYTE PTR [ebp-0x27]
  4218e1:	adc    al,0xce
  4218e3:	cmp    edx,DWORD PTR [edx]
  4218e5:	pop    esi
  4218e6:	gs call 0x42bf2d1
  4218ec:	or     dl,ch
  4218ee:	call   0xc26b7af6
  4218f3:	push   cs
  4218f4:	ret    0xe9d9
  4218f7:	and    BYTE PTR [ecx+0x418774f0],0x51
  4218fe:	jmp    0x1a6a7b06
  421903:	pushf  
  421904:	mov    dh,0xca
  421906:	stos   BYTE PTR es:[edi],al
  421907:	scas   al,BYTE PTR es:[edi]
  421908:	jmp    0x36e1:0xa5af3ad6
  42190f:	scas   eax,DWORD PTR es:[edi]
  421910:	jo     0x4218bf
  421912:	test   DWORD PTR [ebx+0x62],0xbf8517c2
  421919:	aad    0xe9
  42191b:	add    al,0x62
  42191d:	fxtract 
  42191f:	sbb    al,0xe3
  421921:	dec    edi
  421922:	add    ecx,esp
	...
  421938:	pop    eax
  421939:	inc    ebp
  42193a:	pusha  
  42193b:	pop    esp
  42193c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42193d:	cmc    
  42193e:	js     0x4218f9
  421940:	(bad)  
  421941:	jmp    0x42191f
  421943:	cmc    
  421944:	mov    eax,ds:0x4d2985d9
  421949:	and    eax,0xd65be967
  42194e:	lea    ebp,[ebp+0x6c50e6fd]
  421954:	in     eax,0xfa
  421956:	test   cl,ch
  421958:	popa   
  421959:	fst    DWORD PTR [eax-0x22]
  42195c:	dec    esp
  42195d:	adc    al,0xb
  42195f:	int3   
  421960:	add    al,0xcf
  421962:	sti    
  421963:	jmp    0xe1b4e599
  421968:	hlt    
  421969:	jmp    0x42195b
  42196b:	cmc    
  42196c:	and    ecx,ebx
  42196e:	test   DWORD PTR [ecx],ebp
  421970:	xchg   ebp,edi
  421972:	jg     0x421975
  421974:	dec    dx
  421976:	push   cs
  421977:	push   0x77
  421979:	loope  0x421983
  42197b:	je     0x42191b
  42197d:	xchg   DWORD PTR [ebx+esi*2],ebp
  421980:	push   ds
  421981:	(bad)  
  421983:	hlt    
  421984:	ds loope 0x4219e9
  421987:	push   0x52
  421989:	cmc    
  42198a:	adc    BYTE PTR [ecx],cl
  42198c:	xor    cl,ch
  42198e:	das    
  42198f:	mov    al,0x3c
  421991:	push   esi
  421992:	dec    esp
  421993:	and    eax,0xd4c6256
  421998:	dec    esi
  421999:	rcl    DWORD PTR [ecx],0xac
	...
  4219b0:	bswap  ebp
  4219b2:	push   edx
  4219b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219b4:	ins    DWORD PTR es:[edi],dx
  4219b5:	mov    cl,0x14
  4219b7:	sub    DWORD PTR [esi+0x2c],esp
  4219ba:	pop    ebx
  4219bb:	xor    cl,bl
  4219bd:	mov    ebx,0xd96aab5d
  4219c2:	push   edx
  4219c3:	add    BYTE PTR [eax+0x54082511],dh
  4219c9:	daa    
  4219ca:	(bad)  
  4219cb:	adc    eax,0x40f0df
  4219d0:	cmp    BYTE PTR [ebp-0x1d],0x1c
  4219d4:	mov    ds:0x3b8400d5,al
  4219d9:	int3   
  4219da:	jg     0x421969
  4219dc:	sti    
  4219dd:	fld    DWORD PTR [eax]
  4219df:	test   DWORD PTR [esp+ecx*8-0x25f47a81],ebp
  4219e6:	add    BYTE PTR [ebx+0xa74da2d],al
  4219ec:	js     0x421a6d
  4219ee:	push   es
  4219ef:	je     0x4219b7
  4219f1:	pop    eax
  4219f2:	std    
  4219f3:	pop    es
  4219f4:	test   BYTE PTR [ebx],0x52
  4219f7:	push   edi
  4219f8:	ins    BYTE PTR es:[edi],dx
  4219f9:	out    0x4,al
  4219fb:	adc    ebx,edi
  4219fd:	(bad)  [ecx+0x6fa046d8]
  421a03:	addr16 in eax,dx
  421a05:	add    eax,0xd75d8314
  421a0a:	je     0x421a1b
  421a0c:	cmp    BYTE PTR [edi+0x5],ch
  421a0f:	jne    0x421998
  421a11:	push   eax
  421a12:	icebp  
  421a13:	jmp    0x421a15
	...
  421a25:	add    BYTE PTR [eax],al
  421a27:	add    BYTE PTR [ecx+0x50],ah
  421a2a:	jo     0x421a50
  421a2c:	mov    esi,DWORD PTR [eax+0xf]
  421a2f:	xor    eax,edx
  421a31:	sbb    ch,dl
  421a33:	add    bl,BYTE PTR [eax-0x6e]
  421a36:	imul   eax,DWORD PTR [eax],0xd3887c11
  421a3c:	xchg   ebx,eax
  421a3d:	mov    bh,0xca
  421a3f:	add    BYTE PTR [ebx+0x50],bh
  421a42:	in     al,dx
  421a43:	test   DWORD PTR ds:0xbe552c05,edx
  421a49:	or     al,0x62
  421a4b:	inc    esp
  421a4c:	cmp    esp,DWORD PTR [esi+edi*8]
  421a4f:	adc    eax,0x40116262
  421a54:	bound  ebp,QWORD PTR [ecx]
  421a56:	lock mov DWORD PTR [edx+0x2e7997c2],esp
  421a5d:	dec    esp
  421a5e:	lods   eax,DWORD PTR ds:[esi]
  421a5f:	mov    BYTE PTR [ebx+ebx*2],dl
  421a62:	xor    ah,bh
  421a64:	sbb    eax,0x6ffd533c
  421a69:	push   ss
  421a6a:	adc    al,BYTE PTR [eax+0x62]
  421a6d:	(bad)  
  421a6e:	call   0x78fda963
  421a73:	int    0xa
  421a75:	sub    eax,0x6bf5ff7f
  421a7a:	lods   al,BYTE PTR ds:[esi]
  421a7b:	adc    bl,BYTE PTR [edx-0x4f]
  421a7e:	aas    
  421a7f:	add    BYTE PTR [ecx+0x3c5cc537],cl
  421a85:	add    BYTE PTR [eax+eax*1],al
  421a88:	loope  0x421a70
  421a8a:	aas    
  421a8b:	push   ecx
	...
  421aa0:	aaa    
  421aa1:	test   BYTE PTR [eax+ebp*2-0x3e],dl
  421aa5:	xor    eax,0x6eeb0040
  421aaa:	jecxz  0x421acb
  421aac:	jno    0x421a81
  421aae:	lods   al,BYTE PTR ds:[esi]
  421aaf:	adc    al,BYTE PTR [edx]
  421ab1:	mov    cl,0x3f
  421ab3:	add    bl,bl
  421ab5:	jle    0x421a9a
  421ab7:	and    esp,edi
  421ab9:	add    bh,ch
  421abb:	sub    esp,0xffffffc1
  421abe:	(bad)  
  421abf:	(bad)  
  421ac0:	cli    
  421ac1:	popf   
  421ac2:	jns    0x421b03
  421ac4:	bound  edx,QWORD PTR [edx]
  421ac6:	test   al,0x12
  421ac8:	adc    dl,al
  421aca:	aas    
  421acb:	add    BYTE PTR [ebp+0x632be0fe],bl
  421ad1:	ret    0xffff
  421ad4:	fild   DWORD PTR [esi]
  421ad6:	loope  0x421b07
  421ad8:	jmp    0x421ad7
  421ada:	loopne 0x421b0f
  421adc:	jmp    0x421ab6
  421ade:	and    eax,0xa95695e0
  421ae3:	sti    
  421ae4:	loope  0x421af4
  421ae6:	jmp    0x5d667cee
  421aeb:	cmp    BYTE PTR [esi+0x9],bh
  421aee:	sbb    DWORD PTR [ecx-0x67],edi
  421af1:	cmc    
  421af2:	mov    ecx,0x6ca92754
  421af7:	les    ebp,FWORD PTR [esi+0x56]
  421afa:	les    eax,FWORD PTR [edx+eiz*2]
  421afd:	fnstcw WORD PTR [edx+0x1641b752]
  421b03:	jle    0x421b05
	...
  421b15:	add    BYTE PTR [eax],al
  421b17:	add    BYTE PTR [ebp-0x27],al
  421b1a:	push   edx
  421b1b:	adc    DWORD PTR [edx],ebp
  421b1d:	jmp    0xb12d1ecb
  421b22:	ins    BYTE PTR es:[edi],dx
  421b23:	iret   
  421b24:	pop    esi
  421b25:	push   ebp
  421b26:	loop   0x421b2c
  421b28:	(bad)  
  421b29:	fst    DWORD PTR [esi-0x26568f56]
  421b2f:	inc    ebx
  421b30:	bound  esp,QWORD PTR [eax+0x11]
  421b33:	cmp    DWORD PTR [eax-0x3a649a25],0x221be9cb
  421b3d:	pop    ecx
  421b3e:	jmp    0x90662a46
  421b43:	add    eax,0x37ad93a
  421b48:	bound  esp,QWORD PTR [ebx+esi*8]
  421b4b:	adc    dh,dl
  421b4d:	in     al,0xa9
  421b4f:	add    ebx,ebp
  421b51:	adc    al,0xe
  421b53:	adc    cl,ah
  421b55:	cwde   
  421b56:	push   ebp
  421b57:	out    0xd8,eax
  421b59:	sbb    al,0xe
  421b5b:	call   0x110d448c
  421b60:	mov    fs,esp
  421b62:	sub    DWORD PTR [ecx+eiz*8],eax
  421b65:	cwde   
  421b66:	xor    eax,0x114d8fb
  421b6b:	or     eax,0xd4fc1b3a
  421b70:	inc    ebp
  421b71:	call   0x8b2504b6
  421b76:	jne    0x421b5d
  421b78:	(bad)  
  421b79:	dec    esi
  421b7a:	and    eax,0xfd
	...
  421b8f:	add    BYTE PTR [edi+eax*1-0x265e063b],bh
  421b96:	data16 icebp 
  421b98:	xchg   esp,eax
  421b99:	int3   
  421b9a:	shl    BYTE PTR [eax+0x65],cl
  421b9d:	cmc    
  421b9e:	adc    BYTE PTR [ebx],al
  421ba0:	sbb    al,0x2a
  421ba2:	cld    
  421ba3:	xchg   edi,eax
  421ba4:	xchg   esi,eax
  421ba5:	push   ss
  421ba6:	and    eax,0x74ccb601
  421bab:	add    eax,0xfcfc2872
  421bb0:	rcr    edx,0x40
  421bb3:	jmp    0x3fc7d62c
  421bb8:	cmp    eax,0xb894534b
  421bbd:	out    0xcc,eax
  421bbf:	fldenv [ecx]
  421bc1:	(bad)  [ecx-0x7a154a5b]
  421bc7:	sub    DWORD PTR [ebp+0x34],edi
  421bca:	imul   ecx,ecx,0xbe409d61
  421bd0:	adc    BYTE PTR [eax],ch
  421bd2:	cld    
  421bd3:	xchg   ebp,eax
  421bd4:	xchg   ebp,eax
  421bd5:	repnz sti 
  421bd7:	jge    0x421b66
  421bd9:	not    BYTE PTR [ebx-0x6a]
  421bdc:	adc    cl,ah
  421bde:	adc    eax,0x1197139
  421be3:	mov    eax,fs:0x32723c46
  421be9:	cmc    
  421bea:	adc    al,0x64
  421bec:	lods   al,BYTE PTR ds:[esi]
  421bed:	inc    esi
  421bee:	and    esp,DWORD PTR [edx+0x3a]
  421bf1:	cmc    
  421bf2:	sub    al,0x2
	...
  421c08:	cmp    dh,ch
  421c0a:	inc    eax
  421c0b:	add    BYTE PTR [ecx],dl
  421c0d:	aad    0x58
  421c0f:	rdpmc  
  421c11:	lea    ecx,[eax+0x28c56f44]
  421c17:	inc    esp
  421c18:	pop    edi
  421c19:	sbb    DWORD PTR [edi+0x0],esp
  421c1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c1d:	and    ecx,DWORD PTR [esi]
  421c1f:	dec    eax
  421c20:	cld    
  421c21:	and    al,0x4c
  421c23:	push   ebp
  421c24:	aam    0xd9
  421c26:	rcl    BYTE PTR [ebx+ecx*4],1
  421c29:	aad    0x4b
  421c2b:	jmp    FWORD PTR [edi]
  421c2d:	stos   BYTE PTR es:[edi],al
  421c2e:	sbb    ecx,DWORD PTR [ebp+0x5627b977]
  421c34:	jecxz  0x421c58
  421c36:	int    0x0
  421c38:	or     ecx,DWORD PTR [ebp-0xc]
  421c3b:	jmp    FWORD PTR [edi]
  421c3d:	stos   BYTE PTR es:[edi],al
  421c3e:	sbb    edx,DWORD PTR [ebp-0x5c]
  421c41:	fcmove st,st(4)
  421c43:	adc    bl,cl
  421c45:	aad    0x52
  421c47:	(bad)  
  421c48:	out    dx,al
  421c49:	xchg   ecx,eax
  421c4a:	or     eax,DWORD PTR [eax-0x5]
  421c4d:	sbb    bh,dh
  421c4f:	adc    eax,0x40e53b
  421c54:	clc    
  421c55:	or     BYTE PTR [esi],0xc0
  421c58:	mov    ebx,0xff8b0115
  421c5d:	test   eax,0x80cbeb1f
  421c62:	outs   dx,DWORD PTR ds:[esi]
  421c63:	and    al,0xaf
  421c65:	or     BYTE PTR [esi],0x3c
  421c68:	mov    ecx,0x8b0115
	...
  421c7d:	add    BYTE PTR [eax],al
  421c7f:	add    BYTE PTR [esi+ecx*2+0x40],bh
  421c83:	and    al,0x9f
  421c85:	dec    edx
  421c86:	mov    esp,0xfcedab74
  421c8b:	(bad)  
  421c8c:	retf   
  421c8d:	aad    0x50
  421c8f:	dec    DWORD PTR [esi+0x7b400f25]
  421c95:	dec    edx
  421c96:	mov    esp,0xa8ba6274
  421c9b:	jae    0x421cdb
  421c9d:	fsubr  DWORD PTR [ecx-0x1ef49231]
  421ca3:	and    esp,DWORD PTR [ebp-0x5c]
  421ca6:	jecxz  0x421cb9
  421ca8:	mov    ds:0xb5c47cb2,al
  421cad:	fadd   DWORD PTR [ebx+0x59]
  421cb0:	loope  0x421d28
  421cb2:	aas    
  421cb3:	ret    0xb25e
  421cb6:	push   ecx
  421cb7:	mov    DWORD PTR [edi-0x56],esi
  421cba:	dec    ebp
  421cbb:	inc    esp
  421cbc:	bound  ebx,QWORD PTR [edx+0x3f]
  421cbf:	daa    
  421cc0:	bound  esi,QWORD PTR [edx-0x60514085]
  421cc6:	xchg   edi,eax
  421cc7:	sbb    esi,DWORD PTR [ebx-0x4f]
  421cca:	inc    DWORD PTR [edx-0x30d30de]
  421cd0:	xchg   esi,eax
  421cd1:	(bad)  
  421cd2:	cld    
  421cd3:	mov    BYTE PTR [edx],bl
  421cd5:	lods   eax,DWORD PTR ds:[esi]
  421cd6:	jmp    edi
  421cd8:	repnz aaa 
  421cda:	test   eax,0xdbaef5fc
  421cdf:	pop    es
  421ce0:	in     eax,dx
  421ce1:	call   0x430c62
	...
  421cf6:	add    BYTE PTR [eax],al
  421cf8:	cli    
  421cf9:	popf   
  421cfa:	(bad)  
  421cfb:	(bad)  
  421cfc:	fnstsw WORD PTR [ebx]
  421cfe:	ret    0x5ce8
  421d01:	imul   DWORD PTR [ebx]
  421d03:	and    al,0x5a
  421d05:	call   ecx
  421d07:	pop    ebp
  421d08:	mov    al,ds:0xe952ffbe
  421d0d:	ficom  WORD PTR [ecx-0x77]
  421d10:	outs   dx,DWORD PTR ds:[esi]
  421d11:	or     BYTE PTR [ebp+0x44],0x62
  421d15:	jmp    0x72a8:0xb26227a3
  421d1c:	jbe    0x421ced
  421d1e:	sub    eax,0xf44d9510
  421d23:	cld    
  421d24:	pop    ss
  421d25:	fyl2x  
  421d27:	jg     0x421cee
  421d29:	dec    ebp
  421d2a:	in     eax,dx
  421d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d2c:	xchg   edi,eax
  421d2d:	push   esp
  421d2e:	fstp   DWORD PTR [esi+eax*2-0x24fc160e]
  421d35:	lahf   
  421d36:	into   
  421d37:	add    ah,BYTE PTR [edi-0x51]
  421d3a:	sbb    ecx,DWORD PTR [ecx+0x20]
  421d3d:	jmp    0xb52d6e2b
  421d42:	adc    edi,DWORD PTR [ebx-0x70]
  421d45:	and    DWORD PTR [eax+0x40],eax
  421d48:	bound  esi,QWORD PTR [ecx-0x37c22350]
  421d4e:	ins    DWORD PTR es:[edi],dx
  421d4f:	les    esi,FWORD PTR [ecx+0x5d61820e]
  421d55:	fucompp 
  421d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d58:	mov    al,0xf9
  421d5a:	jp     0x421d8d
	...
  421d70:	jle    0x421d3a
  421d72:	cld    
  421d73:	or     edx,DWORD PTR [edi]
  421d75:	dec    esi
  421d76:	(bad)  
  421d77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d78:	nop
  421d79:	jmp    0xc8984ee0
  421d7e:	aam    0xfb
  421d80:	loopne 0x421d1a
  421d82:	(bad)  
  421d84:	(bad)  
  421d85:	push   esp
  421d86:	and    DWORD PTR [eax+eiz*1-0x558bda0],ebx
  421d8d:	fidivr DWORD PTR [edx]
  421d8f:	into   
  421d90:	jmp    0xe9d9:0x7da441c8
  421d97:	jp     0x421d40
  421d99:	mov    bl,0xfa
  421d9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d9c:	push   eax
  421d9d:	stc    
  421d9e:	sbb    dh,BYTE PTR [ecx]
  421da0:	pop    esi
  421da1:	enter  0xb9c,0xb7
  421da5:	dec    ebp
  421da6:	mul    BYTE PTR [esi+0x3102e930]
  421dac:	push   esi
  421dad:	enter  0xfb74,0x9e
  421db1:	scas   al,BYTE PTR es:[edi]
  421db2:	add    BYTE PTR [edi-0x16e364d6],dl
  421db8:	xor    dl,BYTE PTR [edx-0x14]
  421dbb:	aas    
  421dbc:	or     DWORD PTR [ebx],ecx
  421dbe:	inc    ecx
  421dbf:	inc    ebx
  421dc0:	and    bl,cl
  421dc2:	call   0xfc09b413
  421dc7:	into   
  421dc8:	xor    ch,ch
  421dca:	sti    
  421dcb:	cmp    al,0x4e
  421dcd:	(bad)  
  421dce:	jne    0x421dbd
  421dd0:	add    al,0x4c
  421dd2:	or     DWORD PTR [ebp+0x0],ebp
	...
  421de5:	add    BYTE PTR [eax],al
  421de7:	add    BYTE PTR [ecx],ah
  421de9:	dec    ebx
  421dea:	push   cs
  421deb:	scas   al,BYTE PTR es:[edi]
  421dec:	pop    ds
  421ded:	push   edx
  421dee:	lock xchg ecx,eax
  421df0:	fsin   
  421df2:	add    cl,ch
  421df4:	mov    eax,0xfcebe79c
  421df9:	lods   al,BYTE PTR ds:[esi]
  421dfa:	pop    edx
  421dfb:	sub    al,0x20
  421dfd:	xlat   BYTE PTR ds:[ebx]
  421dfe:	add    BYTE PTR [ecx+ebp*4],bl
  421e01:	mov    dl,0x52
  421e03:	jb     0x421e17
  421e05:	pop    ds
  421e06:	push   edi
  421e07:	sub    eax,0xc12eb15e
  421e0c:	popa   
  421e0d:	fld    DWORD PTR [ecx+ebp*1-0x1016f5cb]
  421e14:	push   ecx
  421e15:	(bad)  
  421e16:	sti    
  421e17:	push   esi
  421e18:	xor    bh,cl
  421e1a:	sti    
  421e1b:	aam    0x65
  421e1d:	les    esi,FWORD PTR [ebp-0x1f]
  421e20:	mov    esp,0x923e154b
  421e25:	jmp    0xc60fdb25
  421e2a:	jne    0x421e0d
  421e2c:	loop   0x421db4
  421e2e:	je     0x421e23
  421e30:	pop    ss
  421e31:	push   eax
  421e32:	enter  0x3311,0x5d
  421e36:	sti    
  421e37:	push   ss
  421e38:	fcomp  st(0)
  421e3a:	sti    
  421e3b:	aaa    
  421e3c:	sub    BYTE PTR [esi-0x5d0dff18],dh
  421e42:	sti    
  421e43:	call   DWORD PTR [eax]
  421e45:	test   al,ch
  421e47:	pop    ss
  421e48:	mov    esi,?
  421e4a:	and    bh,bh
	...
  421e60:	push   ss
  421e61:	fdivp  st(5),st
  421e63:	jne    0x421ec8
  421e65:	jl     0x421ed5
  421e67:	adc    al,0x9c
  421e69:	not    BYTE PTR [eax]
  421e6b:	call   DWORD PTR [esi]
  421e6d:	sar    esp,0x75
  421e70:	cmp    DWORD PTR [ebp-0x2b],0x5e
  421e74:	ds fwait
  421e76:	pop    ss
  421e77:	add    BYTE PTR [esi+0x40],dh
  421e7a:	call   0x5bf8ded5
  421e7f:	pop    edx
  421e80:	xchg   ebp,ebx
  421e82:	call   0x11c3355
  421e87:	test   BYTE PTR [ebx],cl
  421e89:	or     DWORD PTR [esi],ebp
  421e8b:	call   0x3ceb31
  421e90:	fdivr  st(5),st
  421e92:	sbb    bh,bh
  421e94:	es (bad) 
  421e96:	std    
  421e97:	jne    0x421ed4
  421e99:	jge    0x421f09
  421e9b:	or     al,0x8c
  421e9d:	test   BYTE PTR [eax],0x85
  421ea0:	mov    ebx,0x90560708
  421ea5:	test   ebx,esp
  421ea7:	loope  0x421e2d
  421ea9:	jl     0x421ea7
  421eab:	jmp    0x421eb6
  421ead:	jge    0x421e84
  421eaf:	mov    ecx,DWORD PTR [ebx-0x4d8179b]
  421eb5:	(bad)  [ecx-0x215cf3a]
  421ebb:	jne    0x421e70
  421ebd:	jl     0x421f2d
  421ebf:	adc    al,0x7c
  421ec1:	not    BYTE PTR [eax]
  421ec3:	inc    DWORD PTR [eax]
	...
  421ed5:	add    BYTE PTR [eax],al
  421ed7:	add    dh,ah
  421ed9:	int    0xfc
  421edb:	jne    0x421e90
  421edd:	jl     0x421eb4
  421edf:	pop    esi
  421ee0:	bound  ecx,QWORD PTR [ebp-0x729dec3f]
  421ee6:	js     0x421ed3
  421ee8:	loope  0x421ed5
  421eea:	loopne 0x421f41
  421eec:	xor    eax,0x1e608507
  421ef1:	mov    al,0x65
  421ef3:	sbb    esp,DWORD PTR [ebx-0x50]
  421ef6:	call   DWORD PTR [ebx+ebx*8-0x1c]
  421efa:	test   BYTE PTR [eax+0x26],ah
  421efd:	mov    al,0xa4
  421eff:	adc    dl,BYTE PTR [edx-0x3f]
  421f02:	aas    
  421f03:	add    bh,ah
  421f05:	outs   dx,DWORD PTR ds:[esi]
  421f06:	hlt    
  421f07:	add    DWORD PTR [esi-0x4f],0xffffffff
  421f0b:	jmp    ecx
  421f0d:	lds    ecx,FWORD PTR [edi+0x1b29e60]
  421f13:	or     eax,0xfffea3e7
  421f18:	bound  edx,QWORD PTR [edx]
  421f1a:	mov    ah,BYTE PTR [ebx-0x5a]
  421f1d:	mov    dl,0xe3
  421f1f:	(bad)  
  421f20:	scas   al,BYTE PTR es:[edi]
  421f21:	add    esp,DWORD PTR [eax-0x7d]
  421f24:	sar    esi,0x4
  421f27:	sub    DWORD PTR [edx],0xc3282ab6
  421f2d:	dec    edx
  421f2e:	and    DWORD PTR [edx+eiz*2+0x35],eax
  421f32:	shl    BYTE PTR [edx+0x5e],0x7c
  421f36:	cli    
  421f37:	ja     0x421eba
  421f39:	jbe    0x421f3a
  421f3b:	inc    BYTE PTR [eax]
	...
  421f4d:	add    BYTE PTR [eax],al
  421f4f:	add    BYTE PTR [edx],cl
  421f51:	dec    edx
  421f52:	add    BYTE PTR [eax],al
  421f54:	bound  ebp,QWORD PTR [edi]
  421f56:	test   al,0xfe
  421f58:	jno    0x421f17
  421f5a:	xor    bh,0x60
  421f5d:	test   DWORD PTR [esi+eax*8],esp
  421f60:	addr16 call 0x7598:0xb0624420
  421f68:	loope  0x421f74
  421f6a:	(bad)  
  421f6b:	jb     0x421fc0
  421f6d:	(bad)  [eax+0x7b]
  421f70:	inc    edx
  421f71:	sbb    eax,0x4ef57eea
  421f76:	loope  0x421f35
  421f78:	pusha  
  421f79:	inc    ecx
  421f7a:	xchg   DWORD PTR [edi],edi
  421f7c:	(bad)  
  421f7d:	fisttp QWORD PTR [esi]
  421f7f:	inc    esp
  421f80:	jecxz  0x421f43
  421f82:	call   0xecdd57b5
  421f87:	sub    eax,DWORD PTR [ebx]
  421f89:	sbb    eax,0x2a7afdea
  421f8e:	es push es
  421f90:	neg    ah
  421f92:	sbb    eax,0x8911f107
  421f97:	mov    BYTE PTR [edx],al
  421f99:	sbb    eax,0xde6d86ea
  421f9e:	cmp    al,0xf6
  421fa0:	loop   0x421fa7
  421fa2:	jb     0x421fcb
  421fa4:	sahf   
  421fa5:	(bad)  
  421fa7:	sbb    BYTE PTR [ebx+ebx*4+0x1dc31be4],dl
  421fae:	jmp    0x9c:0x66f64b06
	...
  421fc5:	add    BYTE PTR [eax],al
  421fc7:	add    BYTE PTR [edi+0x4e],bl
  421fca:	ret    0x588e
  421fcd:	push   ecx
  421fce:	push   es
  421fcf:	dec    eax
  421fd0:	bound  ebx,QWORD PTR [esi-0x50]
  421fd3:	sbb    DWORD PTR [ebp-0x65],esp
  421fd6:	in     al,0x1b
  421fd8:	sbb    DWORD PTR ds:0xedfb08ea,0xffffffda
  421fdf:	pop    ecx
  421fe0:	pusha  
  421fe1:	inc    ecx
  421fe2:	mov    DWORD PTR [edi+0x62],0xe33de32f
  421fe9:	shr    eax,0x12
  421fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fed:	xchg   edi,eax
  421fee:	xchg   DWORD PTR [ebx+eax*4],ebx
  421ff1:	sbb    eax,0xde1712ea
  421ff6:	ins    DWORD PTR es:[edi],dx
  421ff7:	daa    
  421ff8:	push   ds
  421ff9:	fld    DWORD PTR [eax]
  421ffb:	cli    
  421ffc:	sahf   
  421ffd:	inc    edx
  421ffe:	ds pop ebp
  422000:	jge    0x42201f
  422002:	add    DWORD PTR [esi],esp
  422004:	add    esp,eax
  422006:	sti    
  422007:	out    dx,al
  422008:	sub    BYTE PTR [edx+eiz*2+0x453a4c4a],al
  42200f:	jmp    0xe942e51d
  422014:	popa   
  422015:	cmp    edi,DWORD PTR [edx]
  422017:	in     al,0xd
  422019:	cmp    BYTE PTR [ebp-0x17],al
  42201c:	push   0x72b062e8
  422021:	imul   esp,DWORD PTR [ebp+ebp*1+0x66],0x48
  422026:	or     eax,0x4537ed89
  42202b:	jmp    0x422030
	...
  422040:	pop    es
  422041:	inc    eax
  422042:	pusha  
  422043:	and    eax,0x7102b25e
  422048:	jb     0x42208f
  42204a:	pusha  
  42204b:	and    eax,0x954d4e5e
  422050:	xchg   esi,eax
  422051:	les    edx,FWORD PTR ds:0x1034edd
  422057:	paddsw mm1,QWORD PTR [edi]
  42205a:	fld    QWORD PTR [edi]
  42205c:	out    0xcf,eax
  42205e:	jp     0x42206a
  422060:	call   0x2ff5:0xf4e8b0d9
  422067:	mov    al,0x34
  422069:	adc    DWORD PTR [edx+0x7],0x7d
  42206d:	inc    eax
  42206e:	pusha  
  42206f:	sub    eax,0x6eb91266
  422074:	rol    dl,0xfb
  422077:	mov    esi,0xca78cfe9
  42207c:	popf   
  42207d:	(bad)  [eax+0x45384de4]
  422083:	jmp    0xbc98c3
  422088:	test   al,0x1a
  42208a:	add    edi,edi
  42208c:	scas   al,BYTE PTR es:[edi]
  42208d:	(bad)  
  42208e:	adc    al,BYTE PTR [eax-0x45]
  422091:	pop    ebx
  422092:	mov    edi,0x5c96c90c
  422097:	pop    esi
  422098:	jb     0x422035
  42209a:	cmc    
  42209b:	add    eax,0x45079b
  4220a0:	mov    edx,0x562fe1
	...
  4220b5:	add    BYTE PTR [eax],al
  4220b7:	add    BYTE PTR ds:0x8b446d52,dl
  4220bd:	add    dh,bh
  4220bf:	adc    eax,0x3bcc6b
  4220c4:	(bad)  
  4220c5:	fidiv  DWORD PTR [eax]
  4220c7:	outs   dx,DWORD PTR ds:[esi]
  4220c8:	mov    edi,0x7c74fbd6
  4220cd:	outs   dx,BYTE PTR ds:[esi]
  4220ce:	gs (bad) 
  4220d0:	xchg   esp,eax
  4220d1:	js     0x422152
  4220d3:	ror    BYTE PTR [edi],0xe7
  4220d6:	and    DWORD PTR ds:0x45084f,0x3006564b
  4220e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220e1:	adc    DWORD PTR [ecx],eax
  4220e3:	add    DWORD PTR [ebp+0x78],ebp
  4220e6:	push   cs
  4220e7:	fsubr  QWORD PTR [ecx]
  4220e9:	push   ss
  4220ea:	add    DWORD PTR [esi-0x55],ebx
  4220ed:	in     eax,0x61
  4220ef:	inc    esp
  4220f0:	dec    ebx
  4220f1:	popf   
  4220f2:	cmc    
  4220f3:	add    eax,0x45090b
  4220f8:	cmp    ch,bl
  4220fa:	das    
  4220fb:	push   esi
  4220fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220fd:	imul   ebp,DWORD PTR [ebp+0x44],0x15fe000b
  422104:	fcmovne st,st(2)
  422106:	cmp    eax,DWORD PTR [eax]
  422108:	(bad)  
  422109:	fidiv  DWORD PTR [eax]
  42210b:	outs   dx,DWORD PTR ds:[esi]
  42210c:	iret   
  42210d:	aad    0xfb
  42210f:	je     0x4220fd
  422111:	ins    DWORD PTR es:[edi],dx
  422112:	and    esi,edi
  422114:	bound  ebp,QWORD PTR [ebx]
  422116:	mov    ds:0x11ac2283,al
  42211b:	add    DWORD PTR [eax],0x0
	...
  42212d:	add    BYTE PTR [eax],al
  42212f:	add    BYTE PTR [edi+0x624430c4],al
  422135:	mov    al,0x7f
  422137:	or     dl,BYTE PTR [edx+0x6300439b]
  42213d:	push   0xffffffa0
  42213f:	adc    bl,BYTE PTR [esi+0x14003fbd]
  422145:	adc    BYTE PTR [ecx],ah
  422147:	popa   
  422148:	es mov al,0xc4
  42214b:	push   edx
  42214c:	fld    st(3)
  42214e:	mul    BYTE PTR cs:[edi-0x80]
  422152:	xor    BYTE PTR [edx+eiz*2-0x4f],al
  422156:	adc    dh,BYTE PTR [ebx]
  422158:	xor    al,0xa
  42215a:	xchg   ecx,eax
  42215b:	ins    DWORD PTR es:[edi],dx
  42215c:	push   ds
  42215d:	mov    al,0x39
  42215f:	std    
  422160:	push   edi
  422161:	nop
  422162:	cmc    
  422163:	aas    
  422164:	bound  ebp,QWORD PTR [edx-0xc02cffe]
  42216a:	add    al,0xff
  42216c:	out    dx,al
  42216d:	retf   0xd9a7
  422170:	pop    edi
  422171:	cwde   
  422172:	mov    al,ds:0xf072283
  422177:	add    DWORD PTR [edi+0x624430be],0x720a7fb2
  422181:	out    0x48,eax
  422183:	add    BYTE PTR [ebx+0x8],ah
  422186:	mov    ds:0x3fc50e12,al
  42218b:	add    BYTE PTR [ebx+esi*1-0x159d03dd],al
  422192:	dec    eax
  422193:	mov    al,BYTE PTR [eax]
	...
  4221a5:	add    BYTE PTR [eax],al
  4221a7:	add    BYTE PTR [edx+0x7e12a0b2],ah
  4221ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221ae:	aas    
  4221af:	add    bh,bl
  4221b1:	jb     0x4221c6
  4221b3:	cmp    DWORD PTR [edx+0x358dc9d9],ecx
  4221b9:	fnstcw WORD PTR [ecx-0x7d6af60]
  4221bf:	inc    ebx
  4221c0:	bound  edx,QWORD PTR [esi+0x29]
  4221c3:	pop    ss
  4221c4:	mov    ecx,DWORD PTR [esi-0x4c]
  4221c7:	lahf   
  4221c8:	and    al,0xd0
  4221ca:	jb     0x4221da
  4221cc:	hlt    
  4221cd:	xor    eax,0xd01503ae
  4221d2:	jb     0x4221e2
  4221d4:	(bad)  
  4221d5:	xor    eax,0xc02503ae
  4221da:	aam    0x8b
  4221dc:	inc    edx
  4221dd:	adc    eax,0x5570a0ea
  4221e2:	xchg   BYTE PTR [edi+0x62],al
  4221e5:	rcr    BYTE PTR [ecx],0x98
  4221e8:	lods   eax,DWORD PTR ds:[esi]
  4221e9:	in     al,0x29
  4221eb:	in     al,0x20
  4221ed:	mov    ebp,0x16dac420
  4221f2:	out    dx,al
  4221f3:	leave  
  4221f4:	mov    ds:0xe2956f27,al
  4221f9:	jg     0x422200
  4221fb:	add    ah,BYTE PTR [edx-0x27]
  4221fe:	jmp    0xea735f1b
  422203:	or     esp,DWORD PTR [edx-0x27]
  422206:	dec    edi
  422207:	add    al,0x57
  422209:	push   es
  42220a:	inc    edx
  42220b:	add    BYTE PTR cs:[eax],al
	...
  42221e:	add    BYTE PTR [eax],al
  422220:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422221:	fnstenv [edx+0x29ebc1f9]
  422227:	add    al,0xe5
  422229:	push   esi
  42222a:	int    0x1
  42222c:	(bad)  
  42222d:	fldenv [esp+eax*8-0x50]
  422231:	int    0xff
  422233:	or     esp,DWORD PTR [edi]
  422235:	out    0x89,al
  422237:	stc    
  422238:	pop    ebp
  422239:	fnstenv [edi+0x399cb7c3]
  42223f:	add    eax,0x1f009cac
  422244:	in     eax,0x4b
  422246:	and    eax,0xfbaee8dd
  42224b:	(bad)  
  42224d:	shr    eax,cl
  42224f:	sub    al,0xef
  422251:	mov    esp,0x951e1afb
  422256:	add    bl,cl
  422258:	jmp    0x422259
  42225a:	add    BYTE PTR [eax+0x1c],dh
  42225d:	in     eax,0x89
  42225f:	addr16 (bad) 
  422261:	sar    bl,0xe9
  422264:	(bad)  
  422265:	push   ebp
  422266:	and    al,0xeb
  422268:	popa   
  422269:	(bad)  [ecx+0xd9c66f]
  42226f:	jmp    0x2b9cb84c
  422274:	push   esi
  422275:	fst    DWORD PTR [edx+0x62]
  422278:	div    DWORD PTR [edi-0x269e16ec]
  42227e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422280:	test   edi,edx
  422282:	add    DWORD PTR [ebp+0x0],edi
	...
  422295:	add    BYTE PTR [eax],al
  422297:	add    BYTE PTR [edx+edx*2-0x36],bl
  42229b:	add    DWORD PTR [ebx-0x1716febf],esp
  4222a1:	xchg   ebp,eax
  4222a2:	pop    edx
  4222a3:	stos   DWORD PTR es:[edi],eax
  4222a4:	fst    DWORD PTR gs:[edx+0x62]
  4222a8:	into   
  4222a9:	push   eax
  4222aa:	mov    al,BYTE PTR ds:0xae00d960
  4222b0:	pop    edi
  4222b1:	dec    ecx
  4222b2:	xchg   DWORD PTR [ecx],ebp
  4222b4:	data16 mov cl,0xbf
  4222b7:	xor    ebx,DWORD PTR [esi-0x27]
  4222ba:	ret    
  4222bb:	out    0xd1,eax
  4222bd:	push   ebp
  4222be:	inc    eax
  4222bf:	jmp    0x909cafac
  4222c4:	fsubrp st(1),st
  4222c6:	sti    
  4222c7:	xchg   esi,eax
  4222c8:	jo     0x42231a
  4222ca:	pop    esp
  4222cb:	lds    edx,FWORD PTR [ecx]
  4222cd:	and    eax,0x649a0088
  4222d2:	rol    BYTE PTR [ecx],0x17
  4222d5:	(bad)  
  4222d6:	imul   edx,DWORD PTR [esp+ecx*4],0x9e1024e6
  4222dd:	dec    esp
  4222de:	pop    ss
  4222df:	add    DWORD PTR [ebx],ecx
  4222e1:	fucomi st,st(0)
  4222e3:	and    eax,0xf600dabe
  4222e8:	cmp    al,bl
  4222ea:	je     0x422312
  4222ec:	inc    eax
  4222ed:	push   ss
  4222ee:	and    eax,0x6f9a4610
  4222f3:	push   cs
  4222f4:	cmp    BYTE PTR [edx+0xc3e4fff],bl
  4222fa:	adc    eax,0xe8
	...
  42230f:	add    BYTE PTR [ecx+0xe],dl
  422312:	add    DWORD PTR [eax],eax
  422314:	push   eax
  422315:	retf   0x1469
  422318:	push   ebx
  422319:	mov    WORD PTR [eax-0x1],gs
  42231c:	dec    esp
  42231d:	or     cl,BYTE PTR [eax-0x68d68b2]
  422323:	dec    esp
  422324:	mov    ebx,edx
  422326:	sbb    DWORD PTR [esi+0xd8b3],0xffffffed
  42232d:	add    edi,DWORD PTR [edi+0x56048b0c]
  422333:	call   DWORD PTR [edi]
  422335:	mov    cl,0xb
  422337:	mov    eax,DWORD PTR [edx+0x6b246f5c]
  42233d:	jb     0x4222e9
  42233f:	pop    ds
  422340:	sub    al,0x5c
  422342:	mov    al,dh
  422344:	(bad)  
  422345:	addr16 jge 0x422362
  422348:	adc    eax,0x3b022354
  42234d:	(bad)  
  42234f:	jae    0x42236b
  422351:	push   edi
  422352:	cmc    
  422353:	je     0x422383
  422355:	add    al,0xfe
  422357:	je     0x422380
  422359:	retf   0x4f86
  42235c:	bound  edi,QWORD PTR [edi+eiz*4-0x4f53e4]
  422363:	pop    esp
  422364:	jmp    0x5b045dd6
  422369:	mov    al,0x35
  42236b:	push   ebp
  42236c:	add    eax,0xe913e3bc
  422371:	dec    eax
  422372:	sahf   
  422373:	jae    0x422375
	...
  422385:	add    BYTE PTR [eax],al
  422387:	add    BYTE PTR [esi],bh
  422389:	mov    esp,0xc446739c
  42238e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42238f:	adc    eax,0x889e2742
  422394:	shl    BYTE PTR [ebx+edx*4],cl
  422397:	jge    0x422327
  422399:	inc    BYTE PTR [ebp-0x4f9fd9]
  42239f:	add    DWORD PTR [esi-0x25],ecx
  4223a2:	xor    DWORD PTR [ebx+0x1bbdd],ecx
  4223a8:	bound  esi,QWORD PTR [ebx]
  4223aa:	(bad)  
  4223ab:	adc    edx,DWORD PTR [ecx]
  4223ad:	dec    ebx
  4223ae:	into   
  4223af:	out    0x3a,eax
  4223b1:	je     0x4223b2
  4223b3:	jmp    edi
  4223b5:	in     eax,0x18
  4223b7:	or     al,0x2c
  4223b9:	xlat   BYTE PTR ds:[ebx]
  4223ba:	sbb    BYTE PTR [edx+ebp*2],ah
  4223bd:	dec    ebx
  4223be:	into   
  4223bf:	out    0xb0,eax
  4223c1:	je     0x4223c2
  4223c3:	call   DWORD PTR [ecx]
  4223c5:	cmp    ecx,esi
  4223c7:	out    0x2d,eax
  4223c9:	add    al,0x5
  4223cb:	add    BYTE PTR [ecx],cl
  4223cd:	dec    DWORD PTR [ecx+0xb7204c5]
  4223d3:	add    BYTE PTR [ecx+0x66243c37],dh
  4223d9:	fisttp DWORD PTR [ecx-0x17cbab0a]
  4223df:	add    DWORD PTR [edx-0x4e],esp
  4223e2:	dec    BYTE PTR [esi+eiz*8]
  4223e5:	xor    BYTE PTR [eax],al
  4223e7:	add    BYTE PTR [edx-0x27],ah
  4223ea:	ins    BYTE PTR es:[edi],dx
  4223eb:	mov    eax,0x0
	...
  422400:	scas   eax,DWORD PTR es:[edi]
  422401:	cmp    edx,DWORD PTR [edx-0x6d42dbcb]
  422407:	xchg   ebp,ebx
  422409:	inc    esi
  42240a:	in     eax,0x80
  42240c:	sbb    eax,0xb1198ebd
  422411:	and    ebp,DWORD PTR [ebp-0x7c]
  422414:	cmp    edi,edx
  422416:	jmp    0xcdaf0d1e
  42241b:	add    ah,BYTE PTR [edx-0x27]
  42241e:	mov    ecx,0xeeb21888
  422423:	dec    edi
  422424:	(bad)  
  422425:	fst    DWORD PTR [edx+0x54]
  422428:	adc    edi,0xda1403e9
  42242e:	icebp  
  42242f:	add    esp,DWORD PTR [edx+0x0]
  422432:	sbb    al,0xc
  422434:	push   ss
  422435:	enter  0x9c9b,0x31
  422439:	cmc    
  42243a:	int    0x88
  42243c:	test   al,0xb1
  42243e:	push   0x4f
  422440:	(bad)  
  422441:	fnstenv [ebx-0x180a1164]
  422447:	add    esp,DWORD PTR [edx+0x50]
  42244a:	sbb    ch,BYTE PTR [ebx-0x63fd2308]
  422450:	fisub  DWORD PTR [ecx-0xaee4242]
  422456:	test   BYTE PTR fs:[ecx-0x29],cl
  42245a:	jmp    0xb4923662
  42245f:	lods   al,BYTE PTR ds:[esi]
  422460:	mov    cl,0x10
  422462:	jmp    0x0:0x3
	...
  422475:	add    BYTE PTR [eax],al
  422477:	add    cl,ah
  422479:	mov    al,ds:0x845ef653
  42247e:	add    eax,0x6ed96206
  422483:	leave  
  422484:	mov    dl,0xbc
  422486:	xor    eax,0xb169e0
  42248b:	es stos BYTE PTR es:[edi],al
  42248d:	fld    DWORD PTR [eax]
  42248f:	pmulhw mm3,QWORD PTR [eax+0x2a5c925d]
  422496:	cld    
  422497:	adc    eax,0xae8cc42
  42249c:	sbb    DWORD PTR [ebp-0x68aad105],edi
  4224a2:	or     cl,ch
  4224a4:	push   edx
  4224a5:	push   edx
  4224a6:	jmp    0x289914c2
  4224ab:	jmp    0x42250e
  4224ad:	fld    DWORD PTR [ecx]
  4224af:	bound  edx,QWORD PTR [edx-0xb]
  4224b2:	adc    al,0xdd
  4224b4:	sub    bl,BYTE PTR [eax-0xe]
  4224b7:	fbld   TBYTE PTR [esi]
  4224b9:	mov    cl,0xb4
  4224bb:	push   esp
  4224bc:	stc    
  4224bd:	mov    esp,0x1b722984
  4224c2:	push   eax
  4224c3:	and    BYTE PTR [esi-0x2f],0x0
  4224c7:	jmp    0xe695ed70
  4224cc:	and    eax,0xca748d9b
  4224d1:	fld    DWORD PTR [eax]
  4224d3:	jmp    0xe85ea3b2
  4224d8:	popa   
  4224d9:	fst    DWORD PTR [edx+0x62]
	...
  4224f0:	test   eax,0x61a264b3
  4224f5:	fsincos 
  4224f7:	cmp    al,0x82
  4224f9:	fld    DWORD PTR [eax]
  4224fb:	jmp    0xf691b1d4
  422500:	ins    DWORD PTR es:[edi],dx
  422501:	cmc    
  422502:	and    BYTE PTR [ecx],al
  422504:	les    edx,FWORD PTR [eax]
  422506:	add    ecx,ebp
  422508:	xor    edx,DWORD PTR [edx-0x35]
  42250b:	ror    DWORD PTR [esi-0x6b16fef0],1
  422511:	mov    esp,0xd95c05b5
  422516:	add    BYTE PTR [eax],al
  422518:	rcl    BYTE PTR [ecx-0x3ea08b04],1
  42251e:	jecxz  0x4224b2
  422520:	adc    al,0x60
  422522:	cld    
  422523:	pop    edi
  422524:	push   eax
  422525:	push   0xd
  422527:	push   esi
  422528:	add    al,0xcb
  42252a:	and    al,0x14
  42252c:	(bad)  
  42252d:	retf   0x1424
  422530:	jecxz  0x422588
  422532:	sbb    al,0xff
  422534:	in     al,0x0
  422536:	pop    eax
  422537:	ret    0xd717
  42253a:	dec    edi
  42253b:	mov    edx,edi
  42253d:	push   ebp
  42253e:	out    0xac,eax
  422540:	or     edx,edi
  422542:	add    BYTE PTR [esi-0x80],dl
  422545:	gs cmp dl,0x84
  422549:	iret   
  42254a:	test   BYTE PTR [edi-0x9ff2905],ah
  422550:	push   cs
  422551:	sar    esi,cl
  422553:	mov    BYTE PTR [eax],0x0
	...
  422566:	add    BYTE PTR [eax],al
  422568:	(bad)  
  422569:	bound  edi,QWORD PTR [ebx+0x0]
  42256c:	mov    ebx,0x361e74d6
  422571:	adc    ebp,edi
  422573:	push   ecx
  422574:	inc    esi
  422575:	push   ecx
  422576:	push   ebx
  422577:	inc    DWORD PTR [edi+ebx*2-0x367badb6]
  42257e:	call   DWORD PTR ds:0xc07fd6fb
  422584:	inc    edx
  422586:	or     al,0x64
  422589:	ins    DWORD PTR es:[edi],dx
  42258a:	loope  0x42258c
  42258c:	jnp    0x422564
  42258e:	xchg   DWORD PTR [ebp-0x79],eax
  422591:	pop    es
  422592:	mov    BYTE PTR [ebp-0x3a02d],al
  422598:	fild   DWORD PTR [esi+edi*8]
  42259b:	adc    eax,0x3bc73b
  4225a0:	nop
  4225a1:	jne    0x42260c
  4225a3:	add    ah,BYTE PTR [edx+0x6]
  4225a6:	pop    ds
  4225a7:	aaa    
  4225a8:	out    dx,eax
  4225a9:	pop    es
  4225aa:	call   0x5e69:0xe7fd4dfc
  4225b1:	sub    eax,0x833d5b7c
  4225b6:	cdq    
  4225b7:	dec    edi
  4225b8:	out    0xf4,eax
  4225ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225bb:	dec    edi
  4225bc:	and    al,0xed
  4225be:	or     edi,edi
  4225c0:	cmp    eax,0x62001ce1
  4225c5:	xor    eax,0x4b15597c
  4225ca:	cdq    
  4225cb:	push   ecx
	...
  4225e0:	mov    dl,0x45
  4225e2:	cmp    al,0xe4
  4225e4:	mov    dl,0x68
  4225e6:	and    al,0x78
  4225e8:	bound  esi,QWORD PTR [eax+0x2f7c58ac]
  4225ee:	push   esp
  4225ef:	push   edi
  4225f0:	in     eax,dx
  4225f1:	xor    bl,BYTE PTR [edx+0x2a556f14]
  4225f7:	adc    bh,ch
  4225f9:	sub    al,0x25
  4225fb:	std    
  4225fc:	aad    0xa
  4225fe:	xor    eax,0x3510278b
  422603:	(bad)  
  422604:	pop    ds
  422605:	stos   DWORD PTR es:[edi],eax
  422606:	sti    
  422607:	out    0x7c,eax
  422609:	mov    bh,bh
  42260b:	jmp    edi
  42260d:	xor    al,0x3b
  42260f:	std    
  422610:	lods   eax,DWORD PTR ds:[esi]
  422611:	repnz xor dl,BYTE PTR [eax-0x29]
  422615:	je     0x4225a6
  422617:	dec    edi
  422618:	mov    dl,BYTE PTR [edi+edx*1-0x2289e00]
  42261f:	imul   ebp,DWORD PTR [esi+0x45],0xaff8e03c
  422626:	das    
  422627:	std    
  422628:	push   edi
  422629:	push   0x2f623ff1
  42262e:	ror    DWORD PTR [ebx],0x74
  422631:	fsubr  DWORD PTR [eax+ecx*1]
  422634:	gs inc ebp
  422636:	in     eax,dx
  422637:	shl    DWORD PTR [eax-0x5f3f1218],0xb5
  42263e:	test   DWORD PTR [ebx],0xcced962
	...
  422658:	sbb    al,0x1f
  42265a:	jmp    0x42265e
  42265c:	daa    
  42265d:	pop    ds
  42265e:	mov    dh,0x1
  422660:	(bad)  
  422661:	fldl2t 
  422663:	lea    esp,[eax+0x593e71e1]
  422669:	inc    ebx
  42266a:	out    0x86,al
  42266c:	mov    al,ds:0xa08739e5
  422671:	xchg   ebp,eax
  422672:	cmp    edx,eax
  422674:	mov    al,ds:0xa0c1ece5
  422679:	out    0xe9,eax
  42267b:	stos   DWORD PTR es:[edi],eax
  42267c:	push   ds
  42267d:	xor    edx,ebp
  42267f:	add    ebp,ebx
  422681:	push   ds
  422682:	outs   dx,BYTE PTR ds:[esi]
  422683:	test   BYTE PTR [ebp-0x6f794623],ch
  422689:	xchg   ebp,eax
  42268a:	outs   dx,BYTE PTR ds:[esi]
  42268b:	leave  
  42268c:	lds    ecx,FWORD PTR [esi-0x9]
  42268f:	add    ah,BYTE PTR [edx-0x14]
  422692:	and    BYTE PTR [edi+0xd],bh
  422695:	jmp    0x9b1ce8f6
  42269a:	fwait
  42269b:	retf   0xe1a3
  42269e:	jmp    0xe5eff025
  4226a3:	add    esp,DWORD PTR [edx+0xc]
  4226a6:	mov    ebp,0xb2aadb31
  4226ab:	mov    dl,BYTE PTR [ecx]
  4226ad:	std    
  4226ae:	shr    DWORD PTR [ebx-0x67f52e68],0x52
  4226b5:	mov    ds:0x4d5705c5,al
  4226ba:	sub    ah,dl
	...
  4226d0:	call   0x5464:0x6083010c
  4226d7:	lds    ebp,FWORD PTR [edx+0x5f]
  4226da:	dec    esp
  4226db:	or     eax,0xd1ca6192
  4226e0:	in     al,0xe6
  4226e2:	add    ecx,ebp
  4226e4:	aad    0x78
  4226e6:	or     esp,DWORD PTR [ebp-0x1f]
  4226e9:	fld    DWORD PTR [eax]
  4226eb:	jmp    0xd66742cb
  4226f0:	mov    ebp,0x656d0b78
  4226f5:	fild   DWORD PTR [eax]
  4226f7:	jmp    0x3b029660
  4226fc:	outs   dx,BYTE PTR ds:[esi]
  4226fd:	fs xchg esp,eax
  4226ff:	vpsubusw xmm0,xmm2,XMMWORD PTR [eax]
  422703:	jmp    0x72accf0
  422708:	pop    ss
  422709:	mov    bh,0xfb
  42270b:	ins    DWORD PTR es:[edi],dx
  42270c:	push   ds
  42270d:	in     eax,0x84
  42270f:	sbb    eax,0xe600d960
  422714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422715:	sbb    al,0x25
  422717:	(bad)  
  422718:	mov    eax,0x6a2148e1
  42271d:	fadd   QWORD PTR [eax+0x74d961eb]
  422723:	test   al,0xe2
  422725:	ja     0x42279c
  422727:	pop    ebx
  422728:	fldenv [eax+0xa89ec66]
  42272e:	xchg   BYTE PTR [eax],dh
  422730:	adc    eax,0xe9fbdb
	...
  422745:	add    BYTE PTR [eax],al
  422747:	add    BYTE PTR [ecx-0x1a],ah
  42274a:	inc    esp
  42274b:	es js  0x422729
  42274e:	or     ebx,DWORD PTR [esi-0x62]
  422751:	adc    cl,BYTE PTR [edx+0x55d7bda5]
  422757:	fs and bh,ch
  42275a:	and    al,0xb9
  42275c:	aas    
  42275d:	mov    dh,0x15
  42275f:	add    BYTE PTR [ebx-0x5fffc43b],al
  422765:	cwde   
  422766:	or     al,0x85
  422768:	xchg   ebx,eax
  422769:	fld    DWORD PTR [eax]
  42276b:	add    ch,ah
  42276d:	xchg   esp,eax
  42276e:	ja     0x422794
  422770:	pop    edi
  422771:	retf   0xb00e
  422774:	dec    edx
  422775:	xchg   BYTE PTR [edi],al
  422777:	add    cl,BYTE PTR [ebx-0x25]
  42277a:	xchg   DWORD PTR [edi+eiz*2+0x3b00015d],ecx
  422781:	fmul   st(0),st
  422783:	jmp    0x422766
  422785:	mov    eax,edx
  422787:	push   ecx
  422788:	mov    eax,ds:0x8e5058d9
  42278d:	push   es
  42278e:	and    eax,0x839cb050
  422793:	pop    esp
  422794:	daa    
  422795:	mov    ebx,0xde1bece3
  42279a:	add    BYTE PTR [ebx+edi*4-0x51e7b21],al
  4227a1:	fiadd  DWORD PTR [eax]
  4227a3:	cmp    bh,0x96
  4227a6:	inc    ebx
  4227a7:	add    eax,0x1d559fc
	...
  4227c0:	sti    
  4227c1:	(bad)  
  4227c3:	inc    esp
  4227c4:	push   edi
  4227c5:	sar    edx,0x73
  4227c8:	int    0x77
  4227ca:	aas    
  4227cb:	and    al,0x13
  4227cd:	enter  0xfffb,0xbb
  4227d1:	gs addr16 and al,0xff
  4227d5:	add    DWORD PTR [edi],0xffffff89
  4227d8:	scas   eax,DWORD PTR es:[edi]
  4227d9:	xchg   esi,eax
  4227da:	push   ebx
  4227db:	mov    DWORD PTR [edi],0xbb175797
  4227e1:	fiadd  DWORD PTR [eax]
  4227e3:	syscall 
  4227e5:	mul    BYTE PTR [ebx+ecx*2]
  4227e8:	adc    cl,al
  4227ea:	pop    edi
  4227eb:	adc    ah,BYTE PTR [edx-0x80]
  4227ee:	push   DWORD PTR [eax]
  4227f0:	fwait
  4227f1:	cmp    ebx,DWORD PTR [ebp+0x14297269]
  4227f7:	and    al,0x3e
  4227f9:	jp     0x422842
  4227fb:	or     eax,0x471de
  422800:	bound  edi,QWORD PTR [eax+0x47]
  422803:	je     0x422816
  422805:	call   0xc131ab0f
  42280a:	(bad)  
  42280b:	push   DWORD PTR [ebx-0x796c7c0e]
  422811:	nop
  422812:	add    al,0x0
  422814:	bound  ebp,QWORD PTR [ebx]
  422816:	ret    
  422817:	out    0xe2,eax
  422819:	(bad)  
  42281a:	(bad)  
  42281b:	(bad)  
  42281c:	fidivr WORD PTR [edi+0x5]
  42281f:	test   BYTE PTR [edi+0xffffc1],dh
	...
  422835:	add    BYTE PTR [eax],al
  422837:	add    BYTE PTR [eax+0x1d0829a0],bh
  42283d:	lea    edx,[edi]
  42283f:	outs   dx,BYTE PTR ds:[esi]
  422840:	sahf   
  422841:	rcl    BYTE PTR [edx+edx*8+0x7b8747d9],0x3e
  422849:	cwde   
  42284a:	jp     0x422848
  42284c:	ins    DWORD PTR es:[edi],dx
  42284d:	cmp    al,0xf3
  42284f:	(bad)  
  422850:	cmc    
  422851:	mov    edi,0xda8a1529
  422856:	hlt    
  422857:	gs fcmovnb st,st(6)
  42285a:	aaa    
  42285b:	push   eax
  42285c:	out    dx,eax
  42285d:	cmp    esp,ecx
  42285f:	jmp    0x4228c3
  422861:	sar    bh,0x4f
  422864:	fistp  QWORD PTR [esi+0x7]
  422867:	out    0x64,eax
  422869:	sar    edi,0xff
  42286c:	adc    ecx,DWORD PTR [edx-0x1bf17502]
  422872:	cmc    
  422873:	mov    BYTE PTR [edi+edx*1-0x269cf035],bl
  42287a:	jmp    0x662805fe
  42287f:	jmp    0x8a2bde18
  422884:	and    ebp,edi
  422886:	bnd jg 0x42284e
  422889:	in     eax,0x6d
  42288b:	cmc    
  42288c:	jl     0x422843
  42288e:	jmp    0x3c27c563
  422893:	les    ebx,FWORD PTR [ecx+ecx*1]
  422896:	pop    ebp
  422897:	jo     0x4228da
  422899:	loope  0x422888
  42289b:	add    eax,DWORD PTR [eax]
	...
  4228ad:	add    BYTE PTR [eax],al
  4228af:	add    BYTE PTR [edx+0x60],ah
  4228b2:	stos   DWORD PTR es:[edi],eax
  4228b3:	stos   DWORD PTR es:[edi],eax
  4228b4:	push   0xe603e8c9
  4228b9:	cdq    
  4228ba:	fidivr DWORD PTR [edi+0x63]
  4228bd:	fucompp 
  4228bf:	add    ebp,DWORD PTR [edi+0x6b]
  4228c2:	and    eax,0xa0e84ee0
  4228c7:	mov    ebx,ecx
  4228c9:	fucomp st(1)
  4228cb:	jmp    DWORD PTR ds:0x463f74b5
  4228d1:	or     eax,0x66a5333a
  4228d6:	ins    DWORD PTR es:[edi],dx
  4228d7:	fistp  WORD PTR [ecx-0x23]
  4228da:	jmp    0x35a4dae2
  4228df:	loopne 0x422862
  4228e1:	mov    ah,0xd4
  4228e3:	xchg   ebx,eax
  4228e4:	push   eax
  4228e5:	sbb    edx,ebp
  4228e7:	jle    0x422896
  4228e9:	sub    eax,0x115e29e0
  4228ee:	jo     0x4228ab
  4228f0:	les    eax,FWORD PTR [edi-0x17]
  4228f3:	add    esp,DWORD PTR [edx-0x18]
  4228f6:	and    BYTE PTR [ecx-0x20629f64],cl
  4228fc:	xor    DWORD PTR [esi+0x30],ebx
  4228ff:	rcpps  xmm4,xmm4
  422902:	jae    0x4228c5
  422904:	jmp    0x41ec:0x696d011d
  42290b:	in     eax,0x55
  42290d:	cli    
  42290e:	xchg   DWORD PTR [eax-0x6b36a86b],esi
	...
  422928:	in     eax,0xb6
  42292a:	mov    esi,0x6edaeb69
  42292f:	das    
  422930:	cmp    ebx,ebp
  422932:	pop    eax
  422933:	jae    0x4228ee
  422935:	pop    esp
  422936:	pop    esp
  422937:	lds    edi,FWORD PTR [ecx-0x4b]
  42293a:	je     0x422909
  42293c:	cmp    eax,0x77f115b6
  422941:	hlt    
  422942:	add    dl,dl
  422944:	jnp    0x4229a8
  422946:	push   ecx
  422947:	stc    
  422948:	aam    0x1b
  42294a:	sbb    ecx,eax
  42294c:	lds    esp,FWORD PTR [edi]
  42294e:	add    ecx,ebp
  422950:	les    ebp,FWORD PTR [ecx+ecx*4-0x7a13b5bb]
  422957:	mov    esi,0xe8afdd5b
  42295c:	int3   
  42295d:	mov    WORD PTR [esi-0x2a],fs
  422960:	jns    0x42299d
  422962:	cmp    ch,dh
  422964:	jp     0x4228f0
  422966:	das    
  422967:	test   eax,0x60191d97
  42296c:	cdq    
  42296d:	fucom  st(7)
  42296f:	mov    al,ds:0x21053f4f
  422974:	ss pusha 
  422976:	push   esp
  422977:	lds    edx,FWORD PTR [ebp+0x62]
  42297a:	retf   0x3c81
  42297d:	out    0x1,al
  42297f:	jmp    0xbab69d61
  422984:	jg     0x422953
  422986:	data16 icebp 
  422988:	lock out 0x78,al
  42298b:	mov    DWORD PTR [eax],0x0
	...
  42299d:	add    BYTE PTR [eax],al
  42299f:	add    BYTE PTR ds:0x4534fbd9,ah
  4229a5:	lods   al,BYTE PTR ds:[esi]
  4229a6:	mov    DWORD PTR [eax],eax
  4229a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229a9:	mov    ebx,0xd2748533
  4229ae:	or     BYTE PTR [ebx+0x24582fba],dh
  4229b4:	xchg   ebx,eax
  4229b5:	push   edx
  4229b6:	adc    ebp,DWORD PTR [edx-0x77]
  4229b9:	jmp    DWORD PTR [esi+0x4]
  4229bc:	fnsave [eax*1+0x3f58cb58]
  4229c3:	and    al,0xe3
  4229c5:	out    0x87,eax
  4229c7:	inc    edi
  4229c8:	(bad)  
  4229c9:	out    0xe8,eax
  4229cb:	and    ch,dh
  4229cd:	xlat   BYTE PTR ds:[ebx]
  4229ce:	add    BYTE PTR [ebx],dh
  4229d0:	cmp    ebp,ebp
  4229d2:	data16 add dl,bl
  4229d5:	out    0x87,eax
  4229d7:	push   esp
  4229d8:	outs   dx,DWORD PTR ds:[esi]
  4229d9:	icebp  
  4229da:	mov    esi,ecx
  4229dc:	xor    ebx,ecx
  4229de:	or     eax,0xbb5b3b01
  4229e3:	jne    0x422a34
  4229e5:	xor    al,0xcd
  4229e7:	call   0x42f4dd
  4229ec:	cmp    DWORD PTR [edi+0x2565e5c],edx
  4229f2:	jl     0x4229b8
  4229f4:	out    dx,eax
  4229f5:	fiadd  DWORD PTR [eax]
  4229f7:	add    al,cl
  4229f9:	psubq  mm0,QWORD PTR [ebx-0x3b8027e0]
  422a00:	std    
  422a01:	(bad)  
  422a02:	add    BYTE PTR [esi+0x0],ah
	...
  422a15:	add    BYTE PTR [eax],al
  422a17:	add    BYTE PTR [eax+0x6d4c251a],al
  422a1d:	xor    al,0x45
  422a1f:	add    al,BYTE PTR [ecx+edx*1]
  422a22:	inc    eax
  422a23:	and    al,0x42
  422a25:	cmc    
  422a26:	or     eax,0xdf5184
  422a2b:	add    BYTE PTR [ebx],dl
  422a2d:	fadd   DWORD PTR [ecx+esi*2+0x4800d6be]
  422a34:	bound  edx,QWORD PTR [edi+esi*8-0x63445e81]
  422a3b:	push   edi
  422a3c:	fs sar bh,0xb7
  422a40:	loop   0x422a02
  422a42:	(bad)  
  422a43:	(bad)  
  422a44:	fild   DWORD PTR [ebx+eiz*8-0x1c8324a1]
  422a4b:	dec    edi
  422a4c:	out    dx,eax
  422a4d:	test   bl,ah
  422a4f:	pop    edi
  422a50:	xor    al,BYTE PTR [ebp+0x44]
  422a53:	and    al,0xfe
  422a55:	outs   dx,DWORD PTR ds:[esi]
  422a56:	cmp    ebp,edi
  422a58:	outs   dx,DWORD PTR ds:[esi]
  422a59:	cmp    cl,0x3f
  422a5c:	bound  eax,QWORD PTR [ebp-0x40]
  422a5f:	or     al,0xdf
  422a61:	cdq    
  422a62:	or     BYTE PTR [eax],al
  422a64:	bound  edi,QWORD PTR ds:0x50122444
  422a6a:	add    BYTE PTR [ebx+0x64486],0x62
  422a71:	lock ss std 
  422a74:	ja     0x422a3a
  422a76:	stc    
  422a77:	aas    
  422a78:	bound  edi,QWORD PTR ds:0xcc5
	...
  422a8e:	add    BYTE PTR [eax],al
  422a90:	out    0xbc,eax
  422a92:	add    al,BYTE PTR [eax]
  422a94:	bound  eax,QWORD PTR [esi]
  422a96:	cli    
  422a97:	fild   DWORD PTR gs:[ebx]
  422a9a:	jmp    0xc85cb50c
  422a9f:	inc    ebx
  422aa0:	inc    esi
  422aa1:	enter  0xb13,0x51
  422aa5:	xor    BYTE PTR [edi-0x7d],0x46
  422aa9:	inc    eax
  422aaa:	add    eax,0x49396200
  422aaf:	and    al,0x8e
  422ab1:	sub    eax,0x488a2441
  422ab6:	xor    eax,0x76c06312
  422abb:	inc    ebx
  422abc:	ds jo  0x422a43
  422abf:	neg    ebp
  422ac1:	fdiv   st,st(2)
  422ac3:	xchg   edx,ecx
  422ac5:	fsub   st(1),st
  422ac7:	add    edi,DWORD PTR [edx]
  422ac9:	(bad)  
  422aca:	jmp    0xe2818cd1
  422acf:	nop
  422ad0:	jo     0x422b03
  422ad2:	aam    0x47
  422ad4:	bound  esi,QWORD PTR [edx+0x5bc57d14]
  422ada:	inc    esp
  422adb:	pop    ss
  422adc:	pop    ebx
  422add:	callw  0x645c
  422ae1:	std    
  422ae2:	add    DWORD PTR [ebx+0x3e9dca3],ebx
  422ae8:	(bad)  
  422ae9:	sub    al,0xce
  422aeb:	(bad)  
  422aed:	or     al,0xc6
  422aef:	xlat   BYTE PTR ds:[ebx]
  422af0:	xor    bl,BYTE PTR [ecx+0x7c99]
	...
  422b06:	add    BYTE PTR [eax],al
  422b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b09:	sar    BYTE PTR [edi+0x66b16e8c],0x8c
  422b10:	fs loop 0x422b77
  422b13:	and    DWORD PTR [ecx-0x27],0xf5a984e9
  422b1a:	add    eax,0xd5de291
  422b1f:	or     BYTE PTR [ebp-0x4f],al
  422b22:	jmp    0xf71df6b7
  422b27:	mov    edx,0x87710a8d
  422b2c:	sub    DWORD PTR [ebp+0x646203e9],0xa51e825
  422b36:	jno    0x422abf
  422b38:	inc    ecx
  422b39:	loope  0x422b23
  422b3b:	add    esp,DWORD PTR [edx+0xa]
  422b3e:	xchg   DWORD PTR gs:[ecx-0x2b],eax
  422b42:	call   0x194b8d4a
  422b47:	jnp    0x422af2
  422b49:	cmc    
  422b4a:	adc    eax,0xf5997b
  422b4f:	and    DWORD PTR [ecx+0x24],ebp
  422b52:	and    eax,0x246c58ad
  422b57:	stc    
  422b58:	pusha  
  422b59:	fld    DWORD PTR [eax]
  422b5b:	pop    esi
  422b5c:	aam    0xac
  422b5e:	adc    eax,0xc05c61a9
  422b63:	fsubrp st(3),st
  422b65:	jmp    0x43a4146e
  422b6a:	adc    al,0x9e
	...
  422b80:	sub    al,0x4c
  422b82:	and    al,0x31
  422b84:	popa   
  422b85:	fld    DWORD PTR [eax]
  422b87:	bound  esp,QWORD PTR [ebx+0x60f492b8]
  422b8d:	fld    DWORD PTR [ecx+ebp*1+0x292fd175]
  422b94:	push   ecx
  422b95:	inc    ecx
  422b96:	cld    
  422b97:	push   cs
  422b98:	popa   
  422b99:	fst    DWORD PTR [ebp-0x61]
  422b9c:	ror    bl,cl
  422b9e:	rcl    ah,1
  422ba0:	and    ecx,ebx
  422ba2:	test   DWORD PTR [ecx],ebp
  422ba4:	bound  ebx,QWORD PTR [edi-0x2]
  422ba7:	in     al,0x61
  422ba9:	fld    DWORD PTR [edi-0x71ffb5cb]
  422baf:	jne    0x422beb
  422bb1:	test   al,0x0
  422bb3:	jmp    0x586c219
  422bb8:	inc    esi
  422bb9:	xor    BYTE PTR [ecx],al
  422bbb:	jmp    0xeca0ed21
  422bc0:	data16 fld DWORD PTR [ecx+ebp*4-0x1445a3db]
  422bc8:	popa   
  422bc9:	(bad)  [ebp+0x50d00a2d]
  422bcf:	ins    BYTE PTR es:[edi],dx
  422bd0:	call   0x5070:0x31396cf5
  422bd7:	add    ebp,ebp
  422bd9:	lods   al,BYTE PTR ds:[esi]
  422bda:	add    BYTE PTR [eax],al
  422bdc:	or     esi,ecx
  422bde:	dec    ebx
  422bdf:	call   DWORD PTR [esi]
  422be1:	mov    al,ds:0x4015
	...
  422bf6:	add    BYTE PTR [eax],al
  422bf8:	sti    
  422bf9:	sub    al,0x40
  422bfb:	and    al,0x87
  422bfd:	bound  edi,QWORD PTR [ebx+0x1094d0f]
  422c03:	add    BYTE PTR [ebx-0x43f90ca6],bh
  422c09:	pop    ecx
  422c0a:	mov    WORD PTR [edx],es
  422c0c:	retf   
  422c0d:	(bad)  [edx-0x75]
  422c10:	out    dx,eax
  422c11:	mov    bh,0x63
  422c13:	bound  bx,DWORD PTR [ecx+0x1f]
  422c17:	cmp    BYTE PTR [eax+0x60f00db],0xc9
  422c1e:	(bad)  
  422c1f:	dec    DWORD PTR [ebx-0x1aa8012f]
  422c25:	mov    ds:0x327e75c3,al
  422c2a:	and    BYTE PTR [edi+eax*1],0xdc
  422c2e:	add    BYTE PTR [eax],al
  422c30:	mov    al,ds:0x506c2517
  422c35:	les    esp,FWORD PTR [ebp+0x3b]
  422c38:	cmp    al,0xd2
  422c3a:	sbb    al,0x6a
  422c3c:	cmp    eax,DWORD PTR [ebx]
  422c3e:	push   ecx
  422c3f:	lea    edx,[edi-0x4072903f]
  422c45:	mov    dh,0x87
  422c47:	add    edi,DWORD PTR [ebx]
  422c49:	fucomi st,st(0)
  422c4b:	sbb    BYTE PTR [eax+0xb8500d5],0xb0
  422c52:	jle    0x422c9a
  422c54:	cmp    ebx,ebx
  422c56:	add    BYTE PTR [eax+0xf00db6e],al
	...
  422c70:	xchg   BYTE PTR [esi-0x73f4ffff],bl
  422c76:	shl    DWORD PTR [esi+0x2],1
  422c79:	repnz add BYTE PTR [edi],cl
  422c7c:	bound  edi,QWORD PTR ds:0xc06201d0
  422c82:	int3   
  422c83:	push   ebx
  422c84:	mov    BYTE PTR ds:[eax],bl
  422c87:	ss in  eax,dx
  422c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c8a:	jecxz  0x422cab
  422c8c:	xlat   BYTE PTR ds:[ebx]
  422c8d:	cld    
  422c8e:	call   0x844f5efe
  422c93:	and    ebp,DWORD PTR [edx-0x3e]
  422c96:	(bad)  
  422c97:	push   DWORD PTR [edx]
  422c99:	or     BYTE PTR [eax+0x25c06271],dh
  422c9f:	aaa    
  422ca0:	(bad)  
  422ca1:	aam    0x4
  422ca3:	add    ah,BYTE PTR [edx-0x40]
  422ca6:	sbb    BYTE PTR [esi],cl
  422ca8:	fild   DWORD PTR [esp+eiz*8]
  422cab:	pop    ss
  422cac:	pusha  
  422cad:	sar    bh,0x86
  422cb0:	not    ah
  422cb2:	or     BYTE PTR [edx],al
  422cb4:	(bad)  
  422cb5:	shl    BYTE PTR [esi+0x43],0x46
  422cb9:	mov    al,ds:0x983e437c
  422cbe:	pop    ss
  422cbf:	and    BYTE PTR [edx-0x40],0xff
  422cc3:	push   ecx
  422cc4:	out    0x7c,eax
  422cc6:	jecxz  0x422d37
  422cc8:	adc    ch,BYTE PTR [edi-0x7fb3a80d]
  422cce:	dec    DWORD PTR [esp+edx*1]
  422cd1:	jne    0x422cd1
  422cd3:	add    BYTE PTR [eax],0x0
	...
  422ce6:	add    BYTE PTR [eax],al
  422ce8:	push   ds
  422ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cea:	aaa    
  422ceb:	or     eax,0x48ee6
  422cf0:	bound  ebx,QWORD PTR [edx]
  422cf2:	call   DWORD PTR [esi-0x77]
  422cf5:	sbb    DWORD PTR [eax],0x82a7aa38
  422cfb:	les    esp,FWORD PTR [ebx-0x40]
  422cfe:	inc    DWORD PTR [eax+0x1648dca6]
  422d04:	ins    DWORD PTR es:[edi],dx
  422d05:	push   cs
  422d06:	push   ecx
  422d07:	(bad)  
  422d08:	adc    eax,0x7219e9d9
  422d0d:	adc    DWORD PTR [edx],edi
  422d0f:	jg     0x422cb1
  422d11:	aad    0x39
  422d13:	jg     0x422cb6
  422d15:	cmc    
  422d16:	adc    DWORD PTR [edi+ebx*1],esi
  422d19:	adc    eax,0xd949dfce
  422d1e:	jmp    0xf5a2a926
  422d23:	out    0x51,eax
  422d25:	rcl    DWORD PTR [eax],0x12
  422d28:	(bad)  
  422d29:	fxch   st(7)
  422d2b:	test   esp,0x6203e9be
  422d31:	arpl   WORD PTR [edi+eax*1-0x7825671a],bp
  422d38:	jmp    0x1967:0x5f03e9d7
  422d3f:	jg     0x422d64
  422d41:	(bad)  
  422d42:	lock inc edi
  422d44:	inc    esi
  422d45:	adc    eax,0xd81a7ddb
  422d4a:	jmp    0x422d52
	...
  422d5f:	add    BYTE PTR [eax],dh
  422d61:	pop    esp
  422d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d63:	push   es
  422d64:	xor    bl,BYTE PTR [ebp+ebp*2-0x18]
  422d68:	in     eax,0xda
  422d6a:	jmp    0xcd033f72
  422d6f:	adc    DWORD PTR [edx-0x27],esp
  422d72:	mov    dh,0xba
  422d74:	fcom   DWORD PTR [esi+ecx*8]
  422d77:	iret   
  422d78:	lods   eax,DWORD PTR ds:[esi]
  422d79:	or     ah,BYTE PTR [edx-0x80]
  422d7c:	jno    0x422ddf
  422d7e:	out    0x3,eax
  422d80:	bound  ecx,QWORD PTR [edx]
  422d82:	ins    DWORD PTR es:[edi],dx
  422d83:	xchg   DWORD PTR [ecx+0x6203e75d],eax
  422d89:	pop    eax
  422d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d8b:	push   es
  422d8c:	xchg   edx,eax
  422d8d:	bound  ebx,QWORD PTR ds:0x2d6279e8
  422d93:	call   0xdc42da31
  422d98:	icebp  
  422d99:	mov    DWORD PTR [eax-0x17],0x6c0b6cdc
  422da0:	sbb    DWORD PTR [ebx+edi*8-0x78637417],ebp
  422da7:	and    eax,0xa085f10a
  422dac:	dec    ebp
  422dad:	retf   0x3f0b
  422db0:	and    esp,DWORD PTR [edx+0x44]
  422db3:	gs cmp esp,esp
  422db6:	inc    ecx
  422db7:	in     eax,dx
  422db8:	jne    0x422d84
  422dba:	xchg   DWORD PTR [eax],esp
  422dbc:	rcl    BYTE PTR [edi-0x37],cl
  422dbf:	fdivr  st(5),st
  422dc1:	scas   al,BYTE PTR es:[edi]
  422dc2:	mov    esi,0x69
	...
  422dd7:	add    bl,bl
  422dd9:	fisubr DWORD PTR [esi+0x37]
  422ddc:	fcomp  st(5)
  422dde:	add    ecx,ebp
  422de0:	popa   
  422de1:	bound  eax,QWORD PTR [ecx-0x27]
  422de4:	jno    0x422e3a
  422de6:	inc    esp
  422de7:	add    eax,0xd171adba
  422dec:	sbb    al,0x18
  422dee:	and    eax,0xb2c151b9
  422df3:	cwde   
  422df4:	popa   
  422df5:	fldenv [edx-0x20]
  422df8:	push   ebp
  422df9:	cmc    
  422dfa:	push   0xc0e97c9c
  422dff:	pusha  
  422e00:	(bad)  
  422e02:	sub    cl,0x61
  422e05:	(bad)  [ecx-0x3bf825b]
  422e0b:	jge    0x422e52
  422e0d:	lock sti 
  422e0f:	aam    0xe9
  422e11:	mov    BYTE PTR [eax-0x17],0xcc
  422e15:	and    BYTE PTR ds:0x7ffce4fd,ah
  422e1b:	push   ebp
  422e1c:	inc    edx
  422e1d:	sbb    BYTE PTR [edi],al
  422e1f:	fidivr WORD PTR [ebx+0x3b0000a1]
  422e25:	fsub   DWORD PTR [esi+0x10]
  422e28:	or     ebx,0xfffffffe
  422e2b:	mov    BYTE PTR [edi-0x47],cl
  422e2e:	pop    ds
  422e2f:	pop    eax
  422e30:	mov    eax,ds:0x3f8962d9
  422e35:	mov    ecx,0x324b5867
  422e3a:	aas    
  422e3b:	add    al,0x0
	...
  422e4d:	add    BYTE PTR [eax],al
  422e4f:	add    BYTE PTR [ebx],bh
  422e51:	xor    al,BYTE PTR [eax+0x24]
  422e54:	dec    edi
  422e55:	in     eax,0xe8
  422e57:	jmp    0xf36a:0xd7
  422e5d:	cld    
  422e5e:	bound  ecx,QWORD PTR [ebx+0x2698ccf]
  422e64:	pop    ebp
  422e65:	cs inc eax
  422e67:	and    al,0xb5
  422e69:	inc    DWORD PTR [ecx]
  422e6b:	enter  0xe138,0x24
  422e6f:	and    al,0x14
  422e71:	cs dec eax
  422e73:	and    al,0xc7
  422e75:	enter  0x335a,0x7b
  422e79:	int    0x80
  422e7b:	add    BYTE PTR [ebx+0xf8d50d7],bh
  422e81:	mov    ecx,0xd78b0283
  422e86:	push   eax
  422e87:	dec    DWORD PTR [esi+0x7b4012ff]
  422e8d:	stc    
  422e8e:	mov    DWORD PTR [edi+ebp*4-0x25],eax
  422e92:	bound  ecx,QWORD PTR [ecx+0x287b8ff]
  422e98:	jnp    0x422e71
  422e9a:	or     eax,0xbf543bb7
  422e9f:	or     al,0xc6
  422ea1:	xor    DWORD PTR [eax],esp
  422ea3:	or     BYTE PTR [ecx-0x29],0x0
  422ea7:	mov    DWORD PTR [edi-0x47],edi
  422eaa:	das    
  422eab:	call   0x3cdeef
  422eb0:	bound  edi,QWORD PTR [ecx]
  422eb2:	cmp    al,0x24
	...
  422ec8:	jle    0x422f09
  422eca:	mov    ah,bh
  422ecc:	pop    ebp
  422ecd:	cmp    al,0x14
  422ecf:	jmp    DWORD PTR ds:0x467bccc1
  422ed5:	lods   al,BYTE PTR ds:[esi]
  422ed6:	sbb    eax,0xf516ba04
  422edb:	push   esi
  422edc:	pop    ebp
  422edd:	cld    
  422ede:	lds    ecx,FWORD PTR [eax-0x7f1c6b6a]
  422ee4:	and    bh,BYTE PTR [ebx+0x3e437c]
  422eea:	jl     0x422f3f
  422eec:	inc    esi
  422eed:	cld    
  422eee:	retf   
  422eef:	into   
  422ef0:	fs mov dh,dh
  422ef3:	mov    ah,0x26
  422ef5:	pushf  
  422ef6:	pop    ss
  422ef7:	aaa    
  422ef8:	push   ds
  422ef9:	xchg   esp,eax
  422efa:	retf   
  422efb:	jb     0x422f6c
  422efd:	xor    ecx,DWORD PTR [esp]
  422f00:	cmp    BYTE PTR ds:0x704e243c,0xd2
  422f07:	mov    edi,0x51b5d712
  422f0c:	fistp  QWORD PTR [esp+ebx*8-0x249b5ab1]
  422f13:	aaa    
  422f14:	popf   
  422f15:	lea    esi,[edi+0x7ac02212]
  422f1b:	inc    ebx
  422f1c:	inc    esi
  422f1d:	pushf  
  422f1e:	xor    bh,0x85
  422f21:	mov    ebx,0xc062c97b
  422f26:	dec    DWORD PTR [edx-0x786b32]
	...
  422f40:	ins    DWORD PTR es:[edi],dx
  422f41:	sar    BYTE PTR [edx-0x39],0x7a
  422f45:	inc    ecx
  422f46:	(bad)  
  422f47:	(bad)  
  422f48:	pop    ebp
  422f49:	cmp    al,0xc0
  422f4b:	or     al,0xde
  422f4d:	jecxz  0x422f4e
  422f4f:	jmp    DWORD PTR [edx-0x27]
  422f52:	outs   dx,BYTE PTR ds:[esi]
  422f53:	cmp    BYTE PTR [esi+0x19],bh
  422f56:	ins    DWORD PTR es:[edi],dx
  422f57:	inc    eax
  422f58:	xchg   cl,bh
  422f5a:	cmp    DWORD PTR [edi-0x5f],esi
  422f5d:	cmc    
  422f5e:	cmp    eax,0x19997334
  422f63:	dec    esp
  422f64:	es stos BYTE PTR es:[edi],al
  422f66:	jmp    0x19da7a6e
  422f6b:	ja     0x422fce
  422f6d:	add    BYTE PTR [edx],bl
  422f6f:	mov    DWORD PTR [ecx+0x7088e1f5],edx
  422f75:	in     eax,dx
  422f76:	repz inc ebx
  422f78:	bound  ebx,QWORD PTR [esi-0x47]
  422f7b:	jg     0x422f90
  422f7d:	sub    bl,bh
  422f7f:	clc    
  422f80:	mov    dh,0x1c
  422f82:	into   
  422f83:	sbb    ebp,DWORD PTR ds:0x50cfc61d
  422f89:	sub    eax,0x603fc3b7
  422f8e:	and    al,0x4
  422f90:	ficom  DWORD PTR [ebx]
  422f92:	call   0xde326bda
  422f97:	fild   WORD PTR [ebp+0x3f]
  422f9a:	out    dx,al
  422f9b:	sub    ah,BYTE PTR [edi+0x15]
  422f9e:	sub    DWORD PTR [eax+eiz*1-0x2a],edi
  422fa2:	outs   dx,BYTE PTR ds:[esi]
  422fa3:	inc    eax
	...
  422fb8:	jle    0x422f9f
  422fba:	inc    al
  422fbc:	adc    bh,bl
  422fbe:	mov    edi,0x5d092df3
  422fc3:	inc    eax
  422fc4:	inc    esi
  422fc5:	and    eax,0xd6fbf90f
  422fca:	ror    ah,0xbc
  422fcd:	and    ebx,DWORD PTR [edi-0x45eea1e3]
  422fd3:	jbe    0x422ff6
  422fd5:	cmc    
  422fd6:	jns    0x42300b
  422fd8:	fst    DWORD PTR [ebx]
  422fda:	out    0x33,al
  422fdc:	dec    edx
  422fdd:	enter  0x7900,0x61
  422fe1:	fldenv [esi-0x15]
  422fe4:	jns    0x422fef
  422fe6:	mov    gs,WORD PTR ds:0x72513742
  422fec:	jge    0x422feb
  422fee:	dec    eax
  422fef:	push   0x21
  422ff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ff2:	jmp    DWORD PTR [ebx+0x3902b171]
  422ff8:	pop    esi
  422ff9:	(bad)  [ebp+0x1a93d65]
  422fff:	jmp    0x5b6d665
  423004:	sbb    DWORD PTR cs:[eax],esi
  423007:	test   eax,0xc5445251
  42300c:	xor    eax,0x4539beda
  423011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423012:	je     0x422fd9
  423014:	sub    eax,0xf4b115a6
  423019:	call   0x42a21e
	...
  42302e:	add    BYTE PTR [eax],al
  423030:	xchg   ebp,eax
  423031:	std    
  423032:	and    al,0xba
  423034:	mov    eax,ds:0xca6ef959
  423039:	dec    ebx
  42303a:	rcl    bl,0x5f
  42303d:	add    ecx,DWORD PTR [edx+0x1dc9d6d]
  423043:	jmp    0xb90c1aa9
  423048:	jo     0x423024
  42304a:	mov    esi,0xfc2570
  42304f:	call   0xadca09b5
  423054:	mov    ch,0xf0
  423056:	mov    DWORD PTR [ebp-0x53],esp
  423059:	loopne 0x42305c
  42305b:	jmp    0x65d048c1
  423060:	popf   
  423061:	fadd   QWORD PTR [ecx]
  423063:	jmp    0x609439c9
  423068:	sbb    eax,0x7a0010fc
  42306d:	fadd   QWORD PTR [eax]
  42306f:	push   DWORD PTR [esi]
  423071:	pop    eax
  423072:	push   cs
  423073:	inc    eax
  423074:	dec    ebx
  423075:	daa    
  423076:	mov    esp,0xf878ac0f
  42307b:	(bad)  
  42307c:	cmp    al,0x24
  42307e:	js     0x4230a4
  423080:	and    DWORD PTR [eax+ecx*2],0x24
  423084:	addr16 inc ebp
  423086:	pop    edi
  423087:	or     eax,0x11e9dc3a
  42308c:	mov    eax,0x1375fc55
  423091:	or     edi,ebx
  423093:	xchg   DWORD PTR [eax],eax
	...
  4230a5:	add    BYTE PTR [eax],al
  4230a7:	add    BYTE PTR [edi-0x47],ch
  4230aa:	adc    ebp,ebx
  4230ac:	pop    es
  4230ad:	mov    edi,DWORD PTR [ebx-0x38dc3c76]
  4230b3:	call   0x42ffcd
  4230b8:	and    cl,0x24
  4230bb:	xor    dl,ah
  4230bd:	xchg   ebp,eax
  4230be:	cli    
  4230bf:	(bad)  
  4230c0:	sti    
  4230c1:	or     bh,bl
  4230c3:	call   0x430e21
  4230c8:	sbb    BYTE PTR [ecx+ebp*2+0x45266517],bl
  4230cf:	add    ah,BYTE PTR [ebx-0x69f8cc3b]
  4230d5:	mov    ch,0x69
  4230d7:	adc    bl,dh
  4230d9:	jmp    0x42310c
  4230db:	shr    bl,0x20
  4230de:	inc    ebp
  4230df:	or     bl,cl
  4230e1:	pop    esi
  4230e2:	push   cs
  4230e3:	pop    eax
  4230e4:	mov    ch,0x1b
  4230e6:	add    DWORD PTR [ebx+0x5e8a147],eax
  4230ec:	mov    BYTE PTR [ebx+0x22774782],bl
  4230f2:	int    0xe8
  4230f4:	inc    eax
  4230f5:	mov    ds:0x3962fffa,eax
  4230fa:	inc    ecx
  4230fb:	and    al,0x4e
  4230fd:	xor    ecx,DWORD PTR [ebp+0x503655fc]
  423103:	call   FWORD PTR [ebp-0x4f]
  423106:	xor    BYTE PTR [ebx+0x7e],0x9c
  42310a:	into   
  42310b:	mov    BYTE PTR [eax],0x0
	...
  42311e:	add    BYTE PTR [eax],al
  423120:	mov    bl,0x3b
  423122:	mov    ch,0x88
  423124:	adc    al,0x89
  423126:	fdiv   st,st(5)
  423128:	cmp    eax,0xe1e77688
  42312d:	lea    eax,[ebx+esi*2]
  423130:	mov    bl,0xe1
  423132:	jns    0x423177
  423134:	jle    0x423102
  423136:	xor    al,0x81
  423138:	push   cs
  423139:	mov    ch,0x78
  42313b:	dec    ebx
  42313c:	mov    al,ds:0xb15ea797
  423142:	dec    DWORD PTR [eax-0x771c6b6a]
  423148:	or     cl,BYTE PTR [ecx-0x44]
  42314b:	or     esp,DWORD PTR [ebx-0x50]
  42314e:	jle    0x42314a
  423150:	in     eax,dx
  423151:	int    0xf3
  423153:	mov    BYTE PTR [esi-0x6c],ch
  423156:	xlat   BYTE PTR ds:[ebx]
  423157:	mov    al,0x63
  423159:	sub    BYTE PTR [esp],ah
  42315c:	jp     0x4231b7
  42315e:	push   ecx
  42315f:	dec    ebp
  423161:	mov    al,0x76
  423163:	retf   0xfba
  423166:	out    dx,al
  423167:	cld    
  423168:	mov    ebp,0x86243c2b
  42316d:	cmp    ecx,DWORD PTR [esp]
  423170:	jp     0x42310c
  423172:	add    DWORD PTR [edi+0x59],edx
  423175:	icebp  
  423176:	das    
  423177:	xor    DWORD PTR [edx-0x162d89c0],esp
  42317d:	(bad)  
  42317e:	xchg   edi,eax
  42317f:	rcl    DWORD PTR [edi+0x8682f7],cl
	...
  423195:	add    BYTE PTR [eax],al
  423197:	add    BYTE PTR [esi],bl
  423199:	fxch   st(5)
  42319b:	xor    esp,ebx
  42319d:	mov    eax,ds:0x525d10e8
  4231a2:	cmp    al,0x7a
  4231a4:	lahf   
  4231a5:	mov    cl,0x38
  4231a7:	stc    
  4231a8:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4231aa:	outs   dx,BYTE PTR ds:[esi]
  4231ab:	mov    eax,0x4ee2245
  4231b0:	bound  edx,QWORD PTR [edx-0x7b]
  4231b3:	fistp  WORD PTR [ebp-0x66851f4e]
  4231b9:	std    
  4231ba:	add    eax,0xe8d5c99c
  4231bf:	add    esp,ebx
  4231c1:	mov    ds:0xfae1f5d2,eax
  4231c6:	retf   0x2685
  4231c9:	pop    edx
  4231ca:	les    eax,FWORD PTR [ebx]
  4231cc:	xchg   esi,eax
  4231cd:	add    dh,bh
  4231cf:	ret    
  4231d0:	jmp    0x423172
  4231d2:	mov    esi,0xc195db2f
  4231d7:	sub    eax,0x78e9d85d
  4231dc:	add    eax,0x70859c5a
  4231e1:	rcl    DWORD PTR [esi-0x1],1
  4231e4:	in     eax,0x4
  4231e6:	(bad)  
  4231e7:	jmp    0x4231e3
  4231e9:	in     eax,0x6e
  4231eb:	mov    bh,0xc5
  4231ed:	and    al,0xd4
  4231ef:	test   dh,dl
  4231f1:	jmp    0xfd93b79f
  4231f6:	mov    ebp,0x6f08b078
  4231fb:	mov    dh,0x0
	...
  42320d:	add    BYTE PTR [eax],al
  42320f:	add    ch,al
  423211:	xor    DWORD PTR [ebp-0x7b],edx
  423214:	mov    dh,0x59
  423216:	push   ecx
  423217:	add    esi,DWORD PTR [ecx]
  423219:	rcr    BYTE PTR [esi-0x51],cl
  42321c:	ficom  DWORD PTR [esi-0x2797e7af]
  423222:	jmp    0x9c96bf
  423227:	xor    edi,esp
  423229:	sub    cl,BYTE PTR [ecx]
  42322b:	jp     0x42328e
  42322d:	push   ecx
  42322e:	pop    esp
  42322f:	int    0x89
  423231:	mov    al,0x4
  423233:	fisub  DWORD PTR [ecx-0x4a9d07b1]
  423239:	mov    ebp,0xd960dcff
  42323e:	xchg   DWORD PTR [esi],esi
  423240:	(bad)  
  423241:	mov    esp,0x5961e96d
  423246:	sti    
  423247:	call   0x12c6f4a8
  42324c:	jb     0x42321c
  42324e:	sti    
  42324f:	pop    ebp
  423250:	inc    edx
  423251:	icebp  
  423252:	jg     0x423207
  423254:	fisub  WORD PTR [ebp+0x523a0d74]
  42325a:	retf   0x40c1
  42325d:	test   al,0xfb
  42325f:	(bad)  
  423260:	pushf  
  423261:	or     edx,DWORD PTR fs:[esi+edx*8+0x52]
  423266:	ret    
  423267:	rcr    al,0xac
  42326a:	sti    
  42326b:	scas   al,BYTE PTR es:[edi]
  42326c:	xor    al,0x52
  42326e:	in     al,dx
  42326f:	push   0xffffffd5
  423271:	rcl    BYTE PTR [edx+0x72],0x0
	...
  423285:	add    BYTE PTR [eax],al
  423287:	add    al,dl
  423289:	pop    ecx
  42328a:	not    BYTE PTR [esi+0x24f3175d]
  423290:	jmp    0xd4:0xea2cc3da
  423297:	jmp    0x645b5ffd
  42329c:	xchg   esp,eax
  42329d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42329e:	push   ecx
  42329f:	pop    esp
  4232a0:	mov    WORD PTR [ebp-0x381944af],?
  4232a6:	add    al,0xf7
  4232a8:	and    ecx,ebx
  4232aa:	test   DWORD PTR [ecx],ebp
  4232ac:	pop    ebp
  4232ad:	retf   
  4232ae:	jg     0x4232d1
  4232b0:	fidiv  WORD PTR [ecx-0x1ce9ffb8]
  4232b6:	cld    
  4232b7:	push   eax
  4232b8:	push   es
  4232b9:	jecxz  0x42329f
  4232bb:	push   eax
  4232bc:	jmp    0xad82411e
  4232c1:	sbb    BYTE PTR [ecx],al
  4232c3:	jmp    0x423332
  4232c5:	and    DWORD PTR [edi],edi
  4232c7:	call   0x673b15be
  4232cc:	add    bl,ah
  4232ce:	loop   0x4232bb
  4232d0:	jge    0x42332b
  4232d2:	pop    esi
  4232d3:	clc    
  4232d4:	dec    ebx
  4232d5:	mov    DWORD PTR [ebx-0xd1c2d9a],edi
  4232db:	mov    bh,dh
  4232dd:	lahf   
  4232de:	imul   eax,DWORD PTR [eax],0x6aefe3c3
  4232e4:	xor    ecx,DWORD PTR [ecx+0x3e]
  4232e7:	hlt    
  4232e8:	jnp    0x423369
  4232ea:	lds    eax,FWORD PTR [ebp+0x0]
	...
  4232fd:	add    BYTE PTR [eax],al
  4232ff:	add    BYTE PTR [edi],cl
  423301:	(bad)  
  423303:	adc    eax,0x40c233
  423308:	mov    BYTE PTR ds:0xc3c3f704,dh
  42330e:	rol    BYTE PTR [eax+0x75],0x16
  423312:	ret    0xfb08
  423315:	pop    esp
  423316:	out    0x34,eax
  423318:	or     bl,al
  42331a:	add    BYTE PTR [ebx+0x2e],dl
  42331d:	jg     0x4232a7
  42331f:	icebp  
  423320:	sub    al,0x56
  423322:	outs   dx,DWORD PTR ds:[esi]
  423323:	and    al,0x1f
  423325:	xor    BYTE PTR [ebx+0x3057e40e],dh
  42332b:	leave  
  42332c:	pop    ss
  42332d:	fimul  WORD PTR ds:0xfbb2fa94
  423333:	imul   edi,DWORD PTR [eax+ecx*2+0x565b244f],0x54532447
  42333e:	int    0xe8
  423340:	bound  esi,QWORD PTR [edi+0x6]
  423343:	jmp    DWORD PTR [ebp+0x7c73453d]
  423349:	lahf   
  42334a:	pop    edx
  42334b:	inc    eax
  42334c:	mov    DWORD PTR [edx-0x7cb98481],edi
  423352:	push   DWORD PTR [ebx+0x65]
  423355:	cwde   
  423356:	call   DWORD PTR [eax-0x11]
  423359:	and    ebx,DWORD PTR gs:0x2a6cf3e9
  423360:	gs mov cl,0xff
  423363:	add    DWORD PTR [eax],0x0
	...
  423376:	add    BYTE PTR [eax],al
  423378:	mov    ds:0x2231664c,al
  42337d:	jl     0x423360
  42337f:	pop    edx
  423380:	mov    ecx,0x63334931
  423385:	mov    al,0xff
  423387:	rcr    cl,0x44
  42338a:	and    ebp,DWORD PTR [ecx]
  42338c:	repnz push ss
  42338e:	lea    eax,[ebx+0x7e]
  423391:	fmul   DWORD PTR [ebx+0x4471d9ce]
  423397:	out    0x52,eax
  423399:	xor    DWORD PTR [esi-0x1],esp
  42339c:	sbb    eax,0x3208ff9c
  4233a1:	sub    BYTE PTR [ebp+0x22],al
  4233a4:	bound  ebp,QWORD PTR [ebx-0x1]
  4233a7:	jmp    DWORD PTR [ebx]
  4233a9:	xchg   edx,eax
  4233aa:	wbinvd 
  4233ac:	and    esi,DWORD PTR [edx+0x5f]
  4233af:	pop    es
  4233b0:	and    eax,DWORD PTR [edi+0x7]
  4233b3:	or     DWORD PTR [eax],esp
  4233b5:	stc    
  4233b6:	jmp    0xddff:0x81958701
  4233bd:	mov    al,0xe
  4233bf:	test   ebx,ebp
  4233c1:	mov    al,0xff
  4233c3:	call   DWORD PTR [ecx+0x30ffee2b]
  4233c9:	add    eax,0xd95d23d4
  4233ce:	outs   dx,BYTE PTR ds:[esi]
  4233cf:	push   ecx
  4233d0:	mov    ebp,0x6204e389
  4233d5:	pop    ebp
  4233d6:	sub    edi,esi
  4233d8:	add    dl,BYTE PTR [eax-0x5b]
  4233db:	daa    
	...
  4233f0:	ja     0x423443
  4233f2:	lods   eax,DWORD PTR ds:[esi]
  4233f3:	aas    
  4233f4:	and    bl,BYTE PTR [ebp+0x29]
  4233f7:	neg    DWORD PTR [edx+0x1a]
  4233fa:	imul   eax,DWORD PTR [edx+0x3e9d986],0x8f0e7ffc
  423404:	xor    dl,BYTE PTR [eax-0x3abe3894]
  42340a:	mov    ecx,0xa55414d4
  42340f:	daa    
  423410:	scas   al,BYTE PTR es:[edi]
  423411:	or     DWORD PTR [ecx-0x31],esi
  423414:	xor    ebp,0xcc5217fa
  42341a:	test   eax,0x7598e103
  42341f:	or     esi,edx
  423421:	std    
  423422:	jno    0x4233ec
  423424:	add    ecx,0x1cdb42ce
  42342a:	push   cs
  42342b:	and    bl,bl
  42342d:	mov    al,ds:0xfc914464
  423432:	add    cl,dh
  423434:	popa   
  423435:	sub    eax,0xc58e8cf1
  42343a:	ins    BYTE PTR es:[edi],dx
  42343b:	adc    DWORD PTR [eax-0x14e64153],0x61ee0219
  423445:	push   esi
  423446:	test   eax,0x2d549208
  42344b:	sub    BYTE PTR [ebx],dh
  42344d:	or     DWORD PTR [edx-0x1626b614],eax
  423453:	mov    WORD PTR [eax],es
	...
  423465:	add    BYTE PTR [eax],al
  423467:	add    BYTE PTR [ecx],ah
  423469:	std    
  42346a:	fst    st(3)
  42346c:	into   
  42346d:	retf   
  42346e:	add    BYTE PTR [ecx+0x6d],dh
  423471:	sbb    DWORD PTR [ecx],eax
  423473:	fs jecxz 0x42349b
  423476:	mov    ebx,0x18f5aa73
  42347b:	sbb    eax,0xa885d48c
  423480:	pusha  
  423481:	fld    DWORD PTR [eax]
  423483:	ret    
  423484:	jno    0x4234d4
  423486:	inc    esp
  423487:	or     eax,0x99012f5a
  42348c:	loop   0x423454
  42348e:	pop    eax
  42348f:	fbld   TBYTE PTR [ecx-0x5588f55f]
  423495:	cmc    
  423496:	xor    al,0x6a
  423498:	sub    cl,dh
  42349a:	bound  esi,QWORD PTR [eax+0x72]
  42349d:	cmc    
  42349e:	xor    BYTE PTR [ecx-0x1651a2ae],ah
  4234a4:	popa   
  4234a5:	(bad)  [eax+0x7d]
  4234a8:	addr16 xchg edi,eax
  4234aa:	inc    esp
  4234ab:	lds    ebp,FWORD PTR [ecx+0x2]
  4234ae:	jmp    0x125c:0xd960d8
  4234b5:	std    
  4234b6:	xor    cl,dl
  4234b8:	ret    
  4234b9:	aad    0x1
  4234bb:	jmp    0x45cbed9e
  4234c0:	jp     0x42347f
  4234c2:	jg     0x423490
  4234c4:	loop   0x4234f2
  4234c6:	ffreep st(6)
  4234c8:	or     eax,0x7220fd
	...
  4234dd:	add    BYTE PTR [eax],al
  4234df:	add    BYTE PTR [edx+esi*1-0x474c9da9],dh
  4234e6:	cli    
  4234e7:	lods   al,BYTE PTR ds:[esi]
  4234e8:	loop   0x423487
  4234ea:	xchg   DWORD PTR [ecx+0x3c75a236],esp
  4234f0:	adc    DWORD PTR [esp+eax*2-0x33],edx
  4234f4:	cmp    DWORD PTR [ecx],ecx
  4234f6:	cmp    BYTE PTR [ebp+0x6d],0x54
  4234fa:	dec    esp
  4234fb:	add    BYTE PTR [edi-0x2d701714],ah
  423501:	fild   DWORD PTR [eax]
  423503:	mov    edi,DWORD PTR [edi-0xf]
  423506:	sbb    al,0x8b
  423508:	jecxz  0x42353e
  42350a:	lods   al,BYTE PTR ds:[esi]
  42350b:	or     edx,ecx
  42350d:	fadd   QWORD PTR [ecx+0xda70cfd]
  423513:	mov    eax,DWORD PTR [edi-0x3839db08]
  423519:	clc    
  42351a:	sbb    BYTE PTR [ebx+0x32],bl
  42351d:	fs sti 
  42351f:	(bad)  
  423520:	jnp    0x42356f
  423522:	(bad)  
  423523:	call   0x3ffa8c
  423528:	add    BYTE PTR [eax-0x580fdfe1],bl
  42352e:	pop    ds
  42352f:	and    al,0xf8
  423531:	adc    eax,DWORD PTR [edx]
  423533:	push   eax
  423534:	loope  0x4235b4
  423536:	mov    ch,dl
  423538:	ror    BYTE PTR [edx],0xe4
  42353b:	stos   BYTE PTR es:[edi],al
  42353c:	pop    esi
  42353d:	pop    ecx
  42353e:	cld    
  42353f:	mov    esp,DWORD PTR [ebx-0x23]
  423542:	stc    
  423543:	jne    0x423545
	...
  423555:	add    BYTE PTR [eax],al
  423557:	add    BYTE PTR [edx+0x4d],al
  42355a:	into   
  42355b:	mov    ebx,DWORD PTR [ebp+0x34]
  42355e:	mov    ebp,0x89dc4a07
  423563:	int    0x13
  423565:	scas   al,BYTE PTR es:[edi]
  423566:	add    al,BYTE PTR [ecx]
  423568:	cmp    ebx,DWORD PTR [ebx-0x4]
  42356b:	(bad)  
  42356c:	cmp    al,0x58
  42356e:	pop    ebx
  42356f:	call   FWORD PTR [eax+eiz*1]
  423572:	cmp    ebx,edi
  423574:	cld    
  423575:	push   edi
  423576:	mov    DWORD PTR [eax],eax
  423578:	sti    
  423579:	fld    TBYTE PTR [esi]
  42357b:	(bad)  [edx]
  42357d:	pop    esp
  42357e:	sti    
  42357f:	dec    DWORD PTR [ebx]
  423581:	mov    dh,0x88
  423583:	inc    esp
  423584:	daa    
  423585:	in     eax,dx
  423586:	bound  ecx,QWORD PTR [ecx+0x3228ee62]
  42358c:	jmp    0xe76b5e86
  423591:	in     eax,0x28
  423593:	xor    bl,bl
  423595:	cmc    
  423596:	sub    BYTE PTR [edx+edi*4],dh
  423599:	gs add eax,0x7d3abdff
  42359f:	xor    BYTE PTR [ebp+0x79840c36],0xff
  4235a6:	jnp    0x4235a4
  4235a8:	fdecstp 
  4235aa:	ins    BYTE PTR es:[edi],dx
  4235ab:	bound  esi,QWORD PTR [ecx+0xf]
  4235ae:	jl     0x423538
  4235b0:	lods   eax,DWORD PTR ds:[esi]
  4235b1:	push   ss
  4235b2:	stc    
  4235b3:	and    eax,DWORD PTR [edx+0x2b]
  4235b6:	dec    ebx
  4235b7:	imul   ebp,DWORD PTR [eax],0xfac51a
	...
  4235cd:	add    BYTE PTR [eax],al
  4235cf:	add    BYTE PTR [ebp-0x12],bh
  4235d2:	aaa    
  4235d3:	shr    edi,0xaa
  4235d6:	xchg   ah,dl
  4235d8:	(bad)  
  4235da:	ins    BYTE PTR es:[edi],dx
  4235db:	push   esp
  4235dc:	pop    ebp
  4235dd:	mov    cl,0xff
  4235df:	call   0xfcbf6950
  4235e4:	iret   
  4235e5:	scas   eax,DWORD PTR es:[edi]
  4235e6:	inc    ebp
  4235e7:	inc    ebx
  4235e8:	xchg   BYTE PTR [eax+0x6260e8d6],bh
  4235ee:	push   esi
  4235ef:	mov    BYTE PTR ds:0x630775d9,ch
  4235f5:	mov    al,0x7f
  4235f7:	clc    
  4235f8:	arpl   WORD PTR ds:0xcca6801b,ax
  4235fe:	sbb    al,0x5a
  423600:	xchg   esi,eax
  423601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423602:	jp     0x423677
  423604:	sar    BYTE PTR ds:[edi-0x37],1
  423608:	or     eax,0x6623f360
  42360d:	cmp    ecx,DWORD PTR [esi-0x19]
  423610:	cld    
  423611:	ins    BYTE PTR es:[edi],dx
  423612:	jp     0x423610
  423614:	(bad)  
  423616:	test   eax,0x6f9ad10e
  42361b:	inc    edx
  42361c:	cld    
  42361d:	xchg   esp,eax
  42361e:	xchg   esp,eax
  42361f:	jle    0x4235ff
  423621:	add    al,0x5f
  423623:	outs   dx,DWORD PTR ds:[esi]
  423624:	and    al,0xa
  423626:	sbb    al,0xd7
  423628:	sbb    al,0xea
  42362a:	sahf   
  42362b:	sar    BYTE PTR ds:0x6203ee23,cl
  423631:	push   edx
  423632:	outs   dx,DWORD PTR ds:[esi]
  423633:	jle    0x423635
	...
  423645:	add    BYTE PTR [eax],al
  423647:	add    BYTE PTR [eax-0x3f],dl
  42364a:	clc    
  42364b:	ret    
  42364c:	lods   eax,DWORD PTR ds:[esi]
  42364d:	push   ebx
  42364e:	pop    ecx
  42364f:	mov    BYTE PTR [edi-0x152d4adb],ch
  423655:	xchg   BYTE PTR [esi+0x4d],bl
  423658:	jge    0x4236a4
  42365a:	sub    DWORD PTR [ebx],eax
  42365c:	bound  edx,QWORD PTR [eax-0x5c]
  42365f:	jg     0x423641
  423661:	cdq    
  423662:	mov    ebp,0x15d44ac8
  423667:	fldenv [ecx]
  423669:	fnstenv [esi-0x7d2bed2e]
  42366f:	xchg   ecx,eax
  423670:	and    ebx,ecx
  423672:	mov    ecx,0xb07b2d2
  423677:	sbb    BYTE PTR [esi-0x38],ch
  42367a:	test   eax,0x64a0db03
  42367f:	jle    0x423652
  423681:	mov    BYTE PTR [ecx-0x162678ed],0xd6
  423688:	les    ebp,FWORD PTR ss:[ebp+0x12]
  42368c:	mov    ds:0x507d32d9,al
  423691:	jne    0x42368a
  423693:	ret    
  423694:	sbb    eax,0x6568e86b
  423699:	xor    edx,ebp
  42369b:	or     DWORD PTR ds:0x907d169e,0xffffff9d
  4236a2:	add    BYTE PTR [edi],bl
  4236a4:	jg     0x423671
  4236a6:	and    dl,bl
  4236a8:	and    DWORD PTR [esi+0xa655],ebx
	...
  4236be:	add    BYTE PTR [eax],al
  4236c0:	push   ebp
  4236c1:	jne    0x4236d1
  4236c3:	sub    DWORD PTR [esi-0x4],ebx
  4236c6:	pop    edx
  4236c7:	arpl   WORD PTR [ebx],sp
  4236c9:	add    edx,ecx
  4236cb:	stos   DWORD PTR es:[edi],eax
  4236cc:	push   0xffffffd9
  4236ce:	push   ebp
  4236cf:	jb     0x423723
  4236d1:	pop    ecx
  4236d2:	in     al,0x81
  4236d4:	loope  0x423687
  4236d6:	dec    eax
  4236d7:	jmp    0x42373a
  4236d9:	(bad)  [edi-0x45]
  4236dc:	and    DWORD PTR [ebx],ecx
  4236de:	push   ebx
  4236df:	sbb    dh,BYTE PTR [ecx+ebp*8]
  4236e2:	xlat   BYTE PTR ds:[ebx]
  4236e3:	mov    dh,0xd8
  4236e5:	sub    DWORD PTR ds:0x2519e909,esp
  4236eb:	in     eax,dx
  4236ec:	call   0x7c1f5bf2
  4236f1:	popf   
  4236f2:	imul   ebp,ebx,0xd824cb06
  4236f8:	mov    eax,ds:0x3341869d
  4236fd:	pushf  
  4236fe:	mov    DWORD PTR [ebp+0x1c7fc145],esp
  423704:	out    0xcc,eax
  423706:	test   BYTE PTR [ecx+0x5c00d960],dh
  42370c:	sub    bh,cl
  42370e:	sub    BYTE PTR [ecx-0x3abb69cc],bl
  423714:	xchg   ecx,eax
  423715:	in     eax,dx
  423716:	(bad)  
  423717:	call   0xcd57d57d
  42371c:	push   eax
  42371d:	sbb    DWORD PTR [ecx],eax
  42371f:	ins    BYTE PTR es:[edi],dx
  423720:	mov    eax,ds:0xc84cd
	...
  423735:	add    BYTE PTR [eax],al
  423737:	add    BYTE PTR [ecx-0x27],ah
  42373a:	add    BYTE PTR [edx+0x2d],ah
  42373d:	stc    
  42373e:	xor    BYTE PTR [eax+ebp*4-0x33],ah
  423742:	test   BYTE PTR [eax],al
  423744:	adc    bl,al
  423746:	add    BYTE PTR [eax],al
  423748:	pusha  
  423749:	int3   
  42374a:	sbb    BYTE PTR [edi+0x4f],bl
  42374d:	aad    0xd
  42374f:	test   dh,al
  423751:	fadd   DWORD PTR [eax]
  423753:	add    BYTE PTR [eax],cl
  423755:	sbb    DWORD PTR [edi-0x25],edi
  423758:	dec    edi
  423759:	retf   
  42375a:	xor    ecx,DWORD PTR [ecx*2-0x34117b33]
  423761:	fadd   DWORD PTR [eax]
  423763:	inc    eax
  423764:	mov    al,ds:0xf3f27219
  423769:	pusha  
  42376a:	mov    ebp,0x3f4fcb00
  42376f:	and    al,0x9b
  423771:	push   ebx
  423772:	mov    ebx,0xfc003f0f
  423777:	(bad)  
  423778:	mov    ebx,0x7b24701d
  42377d:	scas   eax,DWORD PTR es:[edi]
  42377e:	sti    
  42377f:	addr16 mov edx,esp
  423782:	add    BYTE PTR [eax],al
  423784:	and    al,0xc3
  423786:	sbb    BYTE PTR [ecx],dl
  423788:	mov    ebx,0xef889d8
  42378d:	sbb    eax,0xd7f9840d
  423792:	add    BYTE PTR [eax],al
  423794:	test   BYTE PTR [ebx+0xcf0241f],0xe4
  42379b:	inc    BYTE PTR [eax]
	...
  4237ad:	add    BYTE PTR [eax],al
  4237af:	add    BYTE PTR [eax+ebx*8+0x0],dl
  4237b3:	mov    edx,DWORD PTR [ebx-0x60ea037b]
  4237b9:	retf   0x40
  4237bc:	mov    esi,0x99840d01
  4237c1:	fadd   DWORD PTR [eax]
  4237c3:	add    al,al
  4237c5:	mov    WORD PTR [edi],ds
  4237c7:	and    al,0x80
  4237c9:	rcl    al,cl
  4237cb:	pop    edx
  4237cc:	jg     0x4237a3
  4237ce:	outs   dx,DWORD PTR ds:[esi]
  4237cf:	jne    0x423833
  4237d1:	xor    DWORD PTR [ebx],0xfffffffd
  4237d4:	outs   dx,DWORD PTR ds:[esi]
  4237d5:	stos   BYTE PTR es:[edi],al
  4237d6:	cmovo  esp,DWORD PTR [edx-0x29]
  4237da:	add    eax,ecx
  4237dc:	test   al,0xf6
  4237de:	add    al,0x73
  4237e0:	xchg   DWORD PTR [edi],esi
  4237e2:	adc    al,ah
  4237e4:	cwde   
  4237e5:	test   BYTE PTR [ecx+ecx*4],0x59
  4237e9:	daa    
  4237ea:	adc    edx,DWORD PTR [eax-0x6]
  4237ed:	push   edx
  4237ee:	in     eax,dx
  4237ef:	(bad)  
  4237f0:	(bad)  [eax*2-0x6c8cc8e]
  4237f7:	and    esi,DWORD PTR [esi+0x25]
  4237fa:	leave  
  4237fb:	and    eax,DWORD PTR [edx+0x66bb112d]
  423801:	mov    dl,0xff
  423803:	dec    edx
  423805:	into   
  423806:	in     al,dx
  423807:	jmp    FWORD PTR [ebp-0x7ddc0eda]
  42380d:	ss inc ebp
  42380f:	jae    0x423868
  423811:	aaa    
  423812:	shl    DWORD PTR [ebx],0x0
	...
  423825:	add    BYTE PTR [eax],al
  423827:	add    BYTE PTR [edx+0x39],dl
  42382a:	add    DWORD PTR [esi+0x23c11325],edi
  423830:	push   0x29
  423832:	stc    
  423833:	and    edx,DWORD PTR [esi+0x37]
  423836:	stc    
  423837:	and    edx,DWORD PTR [edx+0x41]
  42383a:	mov    cl,BYTE PTR [ebx+0x46]
  42383d:	jle    0x4237c9
  42383f:	aam    0x7a
  423841:	outs   dx,BYTE PTR ds:[esi]
  423842:	jns    0x423840
  423844:	pop    ebp
  423845:	cmp    cl,cl
  423847:	and    esi,DWORD PTR [esi+0x7f]
  42384a:	push   ebp
  42384b:	or     al,0x14
  42384d:	jmp    0xc9c0:0xac2283c2
  423854:	jmp    0x4238ca
  423856:	sbb    ebx,DWORD PTR [ecx+ecx*2]
  423859:	mov    ch,0x8a
  42385b:	jnp    0x4237e3
  42385d:	fyl2xp1 
  42385f:	mov    ds,WORD PTR [edx]
  423861:	mov    dl,0xb3
  423863:	jmp    0x423882
  423865:	fwait
  423866:	pop    esi
  423867:	xlat   BYTE PTR ds:[ebx]
  423868:	inc    ecx
  423869:	lds    edi,FWORD PTR [esi+0xdfddb0b]
  42386f:	adc    bl,bl
  423871:	sbb    eax,0x9a971406
  423876:	fcomp  QWORD PTR [edi-0x7715e6ad]
  42387c:	mov    eax,ds:0x90d3d1f5
  423881:	call   0x80ea:0x196d23f4
  423888:	adc    eax,0x5264cb
	...
  42389d:	add    BYTE PTR [eax],al
  42389f:	add    bh,cl
  4238a1:	call   0xd0e1:0xf5498e82
  4238a8:	mov    esi,0x22154dc4
  4238ad:	fldenv [edx+edi*2+0x5e]
  4238b1:	push   esp
  4238b2:	je     0x42392d
  4238b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238b5:	call   0x3c1:0x4685496e
  4238bc:	bound  ecx,QWORD PTR [esi-0x5b]
  4238bf:	pop    ds
  4238c0:	outs   dx,BYTE PTR ds:[esi]
  4238c1:	cli    
  4238c2:	mov    ds:0x444e2ad8,eax
  4238c7:	fsub   DWORD PTR [edx+0x5e1fada3]
  4238cd:	fcom   DWORD PTR [ebx-0x146d8372]
  4238d3:	fistp  DWORD PTR [ecx]
  4238d6:	jmp    0x55eb:0x97b160ef
  4238dd:	call   0x3ed:0x97af415e
  4238e4:	lods   al,BYTE PTR ds:[esi]
  4238e5:	add    dl,BYTE PTR [eax+0x127e8ff]
  4238eb:	test   eax,0x294a5118
  4238f0:	mov    ecx,0x61e968fe
  4238f5:	push   eax
  4238f6:	dec    edx
  4238f7:	leave  
  4238f8:	mov    es,WORD PTR [esi]
  4238fa:	imul   ebp,ecx,0xc10a5061
  423900:	and    eax,0xe90132
	...
  423915:	add    BYTE PTR [eax],al
  423917:	add    ah,bl
  423919:	and    eax,DWORD PTR ds:0x5bb90d2e
  42391f:	pop    ss
  423920:	lahf   
  423921:	or     DWORD PTR [ebx+0x16],edx
  423924:	fbld   TBYTE PTR [edx-0x2a5c3dd1]
  42392a:	mov    WORD PTR [ebx-0x5a],?
  42392d:	cdq    
  42392e:	mov    BYTE PTR [esi],dh
  423930:	push   dx
  423932:	pop    ebx
  423933:	frstor [edx]
  423935:	adc    eax,0xd9d43d05
  42393a:	add    BYTE PTR [ecx],dl
  42393c:	loop   0x42398d
  42393e:	inc    eax
  42393f:	jmp    0x61574e20
  423944:	mov    edi,DWORD PTR [ebp+0x5281c689]
  42394a:	pop    ebx
  42394b:	add    eax,0xb928fce9
  423950:	and    edx,DWORD PTR ds:0xc70b4e11
  423956:	pop    esp
  423957:	(bad)  [ecx+0x45b68c99]
  42395d:	push   eax
  42395e:	shl    BYTE PTR [eax+0x19],cl
  423961:	call   0xe88c:0xd6f9e9fb
  423968:	popa   
  423969:	push   edx
  42396a:	jae    0x423931
  42396c:	call   0x237162a6
  423971:	cmc    
  423972:	add    DWORD PTR [esi],esp
  423974:	and    edi,ecx
  423976:	add    BYTE PTR ss:[ebx],bh
  423979:	fld    QWORD PTR [eax]
  42397b:	mov    eax,DWORD PTR [eax]
	...
  42398d:	add    BYTE PTR [eax],al
  42398f:	add    BYTE PTR [edx+esi*4-0x5477a4a3],al
  423996:	mov    cl,dh
  423998:	arpl   cx,bp
  42399a:	add    BYTE PTR [eax],al
  42399c:	cmp    ecx,DWORD PTR [ebx]
  42399e:	inc    eax
  42399f:	and    al,0x13
  4239a1:	fdiv   QWORD PTR [edi+eax*1-0x80]
  4239a5:	and    ah,ah
  4239a7:	iret   
  4239a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239a9:	fld    QWORD PTR [eax]
  4239ab:	mov    esi,DWORD PTR [ebp+0xb04c1b2]
  4239b1:	lods   al,BYTE PTR ds:[esi]
  4239b2:	dec    edx
  4239b3:	push   esi
  4239b4:	or     BYTE PTR [ebx],0x55
  4239b7:	xor    edi,DWORD PTR [ebx+eiz*2+0x19ef246f]
  4239be:	push   es
  4239bf:	mov    WORD PTR [ecx-0x64],ss
  4239c2:	sti    
  4239c3:	cmp    BYTE PTR [ebp-0x1f],ch
  4239c6:	jb     0x423a1f
  4239c8:	mov    BYTE PTR [eax+0x5dd35e88],ch
  4239ce:	pop    edi
  4239cf:	and    al,0x9b
  4239d1:	fmul   QWORD PTR [ecx+0x735d7004]
  4239d7:	or     BYTE PTR [ebx-0x7874e476],bh
  4239dd:	clc    
  4239de:	adc    BYTE PTR [ebx],dh
  4239e0:	cs gs inc ebx
  4239e3:	add    al,0x88
  4239e5:	pop    ds
  4239e6:	in     al,0x23
  4239e8:	sbb    al,0x11
  4239ea:	std    
  4239eb:	mov    esi,DWORD PTR [edi+0x55]
  4239ee:	inc    ebp
  4239ef:	add    DWORD PTR [esi+0x7c],0x38
  4239f3:	jo     0x4239f5
	...
  423a05:	add    BYTE PTR [eax],al
  423a07:	add    BYTE PTR [ebx-0x48741672],al
  423a0d:	clc    
  423a0e:	adc    al,0x8b
  423a10:	pop    edi
  423a11:	push   esi
  423a12:	jle    0x4239ef
  423a14:	mul    esi
  423a16:	mov    DWORD PTR [ebx+0x62],ecx
  423a19:	xchg   BYTE PTR [eax+0x0],al
  423a1c:	es cld 
  423a1e:	mov    edi,0xe06c3dff
  423a23:	(bad)  
  423a24:	cmp    eax,0xc1e74d0b
  423a29:	addr16 (bad) 
  423a2b:	jmp    DWORD PTR [ebp-0x4ff406b5]
  423a31:	ins    DWORD PTR es:[edi],dx
  423a32:	fstp   DWORD PTR [eax-0x11]
  423a35:	(bad)  
  423a36:	sbb    al,ch
  423a38:	pop    ss
  423a39:	inc    ebx
  423a3a:	jae    0x423a38
  423a3c:	fincstp 
  423a3e:	or     al,0xc5
  423a40:	pushf  
  423a41:	xchg   bl,ch
  423a43:	xchg   ecx,eax
  423a44:	mov    ds:0x7d436782,al
  423a49:	cmp    bh,0x5c
  423a4c:	and    eax,0xa2899780
  423a51:	adc    ch,0x56
  423a54:	cmp    eax,DWORD PTR [ebx-0x2f]
  423a57:	mov    dh,al
  423a59:	ror    dl,1
  423a5b:	imul   ebx,DWORD PTR [esi-0x24],0xda8ffd04
  423a62:	loop   0x423aa7
  423a64:	bound  ecx,QWORD PTR [ebx]
  423a66:	jbe    0x423a64
  423a68:	dec    edi
  423a69:	out    0xe,al
  423a6b:	inc    eax
	...
  423a80:	(bad)  
  423a81:	std    
  423a82:	inc    esp
  423a83:	jae    0x423ad7
  423a85:	add    esp,ebp
  423a87:	add    esp,DWORD PTR [edx+0x3]
  423a8a:	in     eax,0x7
  423a8c:	(bad)  
  423a8d:	mov    DWORD PTR [esp+eiz*4],0xe8ff41d8
  423a94:	pusha  
  423a95:	xchg   ebx,eax
  423a96:	aas    
  423a97:	xchg   BYTE PTR [edi],ah
  423a99:	(bad)  
  423a9a:	cmp    DWORD PTR [edi+0x4d8890ee],0xfbd23566
  423aa4:	(bad)  
  423aa6:	call   0xee6c997c
  423aab:	or     BYTE PTR [ebp-0x69],0x9d
  423aaf:	(bad)  
  423ab0:	std    
  423ab1:	fdivr  st,st(6)
  423ab3:	adc    eax,0x81060cdb
  423ab8:	aaa    
  423ab9:	push   cs
  423aba:	aad    0x8a
  423abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423abd:	(bad)  [edx]
  423abf:	(bad)  
  423ac0:	and    DWORD PTR [ecx+ebp*4+0x3],esp
  423ac4:	cmp    dh,BYTE PTR [ebx+0x6262044b]
  423aca:	stos   DWORD PTR es:[edi],eax
  423acb:	imul   esi,DWORD PTR [ecx],0x0
  423ace:	jmp    0x224d:0x2b995003
  423ad5:	pop    ebx
  423ad6:	aad    0xeb
  423ad8:	xchg   edx,eax
  423ad9:	sub    al,0x14
  423adb:	mov    ecx,DWORD PTR [ebx+eiz*2]
  423ade:	and    eax,0x612e6a20
  423ae3:	xlat   BYTE PTR ds:[ebx]
	...
  423af8:	inc    ecx
  423af9:	in     eax,dx
  423afa:	xchg   ecx,eax
  423afb:	add    DWORD PTR [edx-0x4275656a],0x5c
  423b02:	test   BYTE PTR [esi],al
  423b04:	fadd   QWORD PTR [esi]
  423b06:	jmp    0xfe9c9d0e
  423b0b:	pop    es
  423b0c:	mov    ebp,0xb4e067e7
  423b11:	xchg   esi,eax
  423b12:	jmp    0xd1ff7c99
  423b17:	add    esi,DWORD PTR [ebx-0x67]
  423b1a:	je     0x423b13
  423b1c:	inc    ecx
  423b1d:	cmc    
  423b1e:	mov    gs,WORD PTR [edx-0x7780d6f5]
  423b24:	and    DWORD PTR [ebp+0x2685e9fd],edi
  423b2a:	push   edx
  423b2b:	xor    BYTE PTR [esi],dh
  423b2d:	fucomi st,st(1)
  423b2f:	and    BYTE PTR [ecx+0x8fb00e5],0x61
  423b36:	dec    esp
  423b37:	add    eax,0x11d5616a
  423b3c:	adc    DWORD PTR es:[edx],eax
  423b3f:	jmp    0x65098aa0
  423b44:	cmp    eax,0x755c18ba
  423b49:	addr16 mov edi,ebp
  423b4c:	loop   0x423ba3
  423b4e:	or     esp,DWORD PTR [ebp+0x4d]
  423b51:	xchg   esi,eax
  423b52:	sti    
  423b53:	jmp    0xc1674d32
  423b58:	fcmovu st,st(1)
  423b5a:	ins    DWORD PTR es:[edi],dx
  423b5b:	jmp    0x423b60
	...
  423b70:	popa   
  423b71:	fld    DWORD PTR [eax]
  423b73:	ins    BYTE PTR es:[edi],dx
  423b74:	pop    edx
  423b75:	fs mov esi,ebp
  423b78:	sbb    BYTE PTR [edx],cl
  423b7a:	and    BYTE PTR ss:[edx],dl
  423b7d:	mov    esi,0x944f3c49
  423b82:	xor    bh,BYTE PTR [esi+0x2914a165]
  423b88:	pushaw 
  423b8a:	add    bl,dh
  423b8c:	mov    dh,0x95
  423b8e:	and    al,0xa6
  423b90:	data16 fld DWORD PTR [eax]
  423b93:	cmp    DWORD PTR [edi-0x15],ecx
  423b96:	int3   
  423b97:	std    
  423b98:	mov    eax,ds:0x64df8695
  423b9d:	xchg   esp,eax
  423b9e:	add    cl,ch
  423ba0:	popa   
  423ba1:	dec    DWORD PTR [ecx-0x417b518]
  423ba7:	mov    edi,0xd5c8eb36
  423bac:	mov    eax,ds:0x16f1e695
  423bb1:	int3   
  423bb2:	sti    
  423bb3:	hlt    
  423bb4:	sbb    eax,0xde940ea
  423bb9:	mov    cl,0x74
  423bbb:	add    al,0xf
  423bbd:	int    0xfb
  423bbf:	add    bh,bh
  423bc1:	mov    eax,0xd98b0080
  423bc6:	std    
  423bc7:	ss xor al,0xe6
  423bca:	push   esp
  423bcb:	push   ss
  423bcc:	mov    ebx,0x57c481d9
  423bd1:	adc    al,0xbc
  423bd3:	jne    0x423bd5
	...
  423be5:	add    BYTE PTR [eax],al
  423be7:	add    BYTE PTR [esi+0x62],al
  423bea:	or     eax,0xfbb469e8
  423bef:	(bad)  
  423bf0:	mov    eax,0x2c8300f3
  423bf5:	fsqrt  
  423bf7:	ret    
  423bf8:	retf   
  423bf9:	adc    al,BYTE PTR [eax]
  423bfb:	ud1    ebp,DWORD PTR [esp+edi*8+0x6f5c34ff]
  423c03:	and    al,0x63
  423c05:	(bad)  
  423c06:	aas    
  423c07:	and    al,0xb7
  423c09:	fld    DWORD PTR [eax]
  423c0b:	add    bl,bh
  423c0d:	popa   
  423c0e:	adc    eax,0x5784c985
  423c13:	lea    eax,[ebp-0x33]
  423c16:	push   ecx
  423c17:	mov    esp,DWORD PTR [eax+0x4cefcafd]
  423c1d:	retf   0xe8c3
  423c20:	push   ebx
  423c21:	dec    ecx
  423c22:	sti    
  423c23:	call   DWORD PTR [edx-0x67]
  423c26:	jmp    0x423bad
  423c28:	or     eax,DWORD PTR [ecx+eax*1+0x1d61b821]
  423c2f:	mov    edi,esp
  423c31:	adc    edi,ebp
  423c33:	jns    0x423be5
  423c35:	popa   
  423c36:	enter  0x66e8,0xb7
  423c3a:	std    
  423c3b:	(bad)  
  423c3c:	sbb    BYTE PTR ds:[esp+edx*1-0x18],dh
  423c41:	pop    ds
  423c42:	jg     0x423c04
  423c44:	test   DWORD PTR [edi-0x5d887c9e],edi
  423c4a:	jl     0x423cc3
	...
  423c60:	bound  eax,QWORD PTR [ebx-0x5965c742]
  423c66:	imul   ebp,eax,0x59
  423c69:	or     eax,0x6b0f4fe6
  423c6e:	mov    al,dl
  423c70:	stos   DWORD PTR es:[edi],eax
  423c71:	sbb    DWORD PTR [ebx-0x1],esi
  423c74:	sbb    cl,BYTE PTR gs:0x868262b4
  423c7b:	inc    ebp
  423c7c:	mov    ds:0x61723ffd,al
  423c81:	mov    eax,ds:0xbbe0ffba
  423c86:	sti    
  423c87:	cld    
  423c88:	scas   al,BYTE PTR es:[edi]
  423c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c8a:	repz jb 0x423c5c
  423c8d:	push   es
  423c8e:	les    esp,FWORD PTR [ebx]
  423c90:	push   esi
  423c91:	std    
  423c92:	jmp    0x423cb7
  423c94:	dec    edx
  423c95:	test   esi,0xfcc8e90b
  423c9b:	push   ebp
  423c9c:	jmp    0xda3dd266
  423ca1:	nop
  423ca2:	outs   dx,BYTE PTR ds:[esi]
  423ca3:	push   ecx
  423ca4:	push   esi
  423ca5:	jmp    FWORD PTR [esp+edi*8+0x76]
  423ca9:	xchg   BYTE PTR [edi-0x7f78f702],ch
  423caf:	dec    ebx
  423cb0:	inc    esi
  423cb1:	stos   BYTE PTR es:[edi],al
  423cb2:	push   edi
  423cb3:	shl    esi,cl
  423cb5:	inc    edx
  423cb6:	outs   dx,DWORD PTR ds:[esi]
  423cb7:	xor    DWORD PTR [edx+0x395acf1a],esp
  423cbd:	dec    DWORD PTR [eax+0x67]
  423cc0:	mov    al,ds:0x69ff85
	...
  423cd5:	add    BYTE PTR [eax],al
  423cd7:	add    BYTE PTR [esi-0x26],bh
  423cda:	dec    esp
  423cdb:	pop    es
  423cdc:	adc    BYTE PTR es:[edi-0x13],0x6c
  423ce1:	cmp    bh,0x88
  423ce4:	mov    ds:0xe1cbc9f8,eax
  423ce9:	fdiv   QWORD PTR [eax-0x1]
  423cec:	push   eax
  423ced:	fstp   DWORD PTR [ebx+0x7d]
  423cf0:	adc    BYTE PTR [ecx-0x1ba60be2],ch
  423cf6:	push   sp
  423cf8:	test   DWORD PTR [ebx-0x1ed28117],edx
  423cfe:	jo     0x423cd9
  423d00:	xchg   ecx,eax
  423d01:	(bad)  
  423d02:	push   ds
  423d03:	jge    0x423d0d
  423d05:	mov    cl,0x5e
  423d07:	or     BYTE PTR [eax-0x1b045ea1],dh
  423d0d:	and    al,0x46
  423d0f:	mov    DWORD PTR [ebx+eiz*8],ebx
  423d12:	gs test al,0x4d
  423d15:	xchg   ebx,eax
  423d16:	jmp    0x67256a49
  423d1b:	xchg   esi,eax
  423d1c:	cmp    eax,0x617ee993
  423d21:	inc    edi
  423d22:	outs   dx,BYTE PTR ds:[esi]
  423d23:	outs   dx,DWORD PTR ds:[esi]
  423d24:	mov    edx,0xaa068992
  423d29:	fnsave [edi-0x34e31abd]
  423d2f:	das    
  423d30:	pop    esi
  423d31:	push   es
  423d32:	dec    edi
  423d33:	add    edx,esp
  423d35:	cdq    
  423d36:	pusha  
  423d37:	enter  0x5f25,0x1d
  423d3b:	mov    eax,DWORD PTR [eax]
	...
  423d4d:	add    BYTE PTR [eax],al
  423d4f:	add    BYTE PTR [ebp+0x5c],ch
  423d52:	mov    al,0xf1
  423d54:	dec    edi
  423d55:	sub    BYTE PTR [ebx+0x1c5ee737],bh
  423d5b:	add    bl,bl
  423d5d:	and    al,0xe2
  423d5f:	pop    ebx
  423d60:	hlt    
  423d61:	cld    
  423d62:	jmp    0x14dc1e6a
  423d67:	leave  
  423d68:	ficomp DWORD PTR [edx+ecx*4]
  423d6b:	jle    0x423d86
  423d6d:	pop    edx
  423d6e:	(bad)  [eax-0x2b24ec5c]
  423d74:	mov    dh,0xd
  423d76:	arpl   WORD PTR [ebx],sp
  423d78:	fld    TBYTE PTR [ecx+eax*1]
  423d7b:	in     eax,0x24
  423d7d:	pop    ds
  423d7e:	or     DWORD PTR [ecx-0x16ff0871],eax
  423d84:	jmp    0xe117:0xd077552
  423d8b:	(bad)  
  423d8c:	lds    ebx,FWORD PTR [ebp+0x50]
  423d8f:	fs ds adc al,0x15
  423d93:	cwde   
  423d94:	lock add eax,0x26eca984
  423d9a:	or     eax,0xe8daa262
  423d9f:	xchg   edx,eax
  423da0:	dec    edx
  423da1:	xchg   edx,eax
  423da2:	sti    
  423da3:	ins    BYTE PTR es:[edi],dx
  423da4:	mov    eax,ds:0x1a730407
  423da9:	jge    0x423da5
  423dab:	sub    DWORD PTR [ecx+ebp*2-0x31375b7a],esp
  423db2:	add    al,0x72
	...
  423dc8:	and    ch,BYTE PTR [esi+0x5b24ed74]
  423dce:	pop    ebp
  423dcf:	adc    DWORD PTR [edi+eiz*1-0x6ac6ff2b],esp
  423dd6:	sti    
  423dd7:	out    0x47,al
  423dd9:	stos   BYTE PTR es:[edi],al
  423dda:	jne    0x423dcd
  423ddc:	out    0x1e,al
  423dde:	std    
  423ddf:	(bad)  
  423de0:	into   
  423de1:	xchg   edx,eax
  423de2:	out    0xf7,al
  423de4:	sub    esp,DWORD PTR [ecx+0x45]
  423de7:	mov    ch,0x99
  423de9:	sar    ebx,0xbe
  423dec:	jae    0x423db7
  423dee:	shr    BYTE PTR [ecx],0x9f
  423df1:	popa   
  423df2:	gs shl edi,0x1e
  423df6:	std    
  423df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423df8:	mov    WORD PTR [ecx-0x28742918],ds
  423dfe:	add    BYTE PTR [ebx+0x7d7e91c6],ch
  423e04:	mov    ds:0xa7006458,al
  423e09:	fld    DWORD PTR [eax]
  423e0b:	push   ebx
  423e0c:	push   esi
  423e0d:	scas   eax,DWORD PTR es:[edi]
  423e0e:	push   esp
  423e0f:	jmp    DWORD PTR [edi+0x7f8960b9]
  423e15:	shl    DWORD PTR [eax],0x8d
  423e18:	iret   
  423e19:	mov    ecx,0x5a5ae818
  423e1e:	cli    
  423e1f:	push   edi
  423e21:	sbb    al,0xd
  423e23:	test   BYTE PTR [ebx],bl
  423e25:	fld    QWORD PTR [eax]
  423e27:	add    dh,ch
  423e29:	cwde   
  423e2a:	pop    ds
  423e2b:	adc    al,0x0
	...
  423e3d:	add    BYTE PTR [eax],al
  423e3f:	add    BYTE PTR [ebx],dl
  423e41:	es jg  0x423e45
  423e44:	jnp    0x423ea0
  423e46:	mov    ebx,0xfc2ac60f
  423e4b:	dec    DWORD PTR [ebx-0x39]
  423e4e:	fld    DWORD PTR [ebx+0x4487dd5f]
  423e54:	pop    ss
  423e55:	lds    edx,FWORD PTR [eax-0x73]
  423e58:	fistp  QWORD PTR [eax+0x6315e830]
  423e5e:	cli    
  423e5f:	inc    esi
  423e61:	adc    eax,0xd56a850d
  423e66:	add    BYTE PTR [eax],al
  423e68:	sbb    BYTE PTR [ecx-0x676fc7e1],0x1f
  423e6f:	cmp    al,0x7a
  423e71:	sbb    edi,esp
  423e73:	(bad)  
  423e74:	sub    al,0xa
  423e76:	adc    eax,0xfbb582c
  423e7c:	test   BYTE PTR [ebx+edi*8-0x1],ah
  423e80:	sti    
  423e81:	xchg   BYTE PTR [edi],al
  423e83:	xor    DWORD PTR [edx-0x34600224],0xcb8a85d9
  423e8d:	fadd   QWORD PTR [eax]
  423e8f:	push   ecx
  423e90:	ds push eax
  423e92:	pop    ds
  423e93:	sbb    BYTE PTR [edx+0x5a],ah
  423e96:	dec    ecx
  423e97:	test   DWORD PTR [ebx-0x7e],esp
  423e9a:	cmp    BYTE PTR [edi+0x4b7dd62f],0x86
  423ea1:	call   0x0:0x8a57
	...
  423eb8:	inc    ecx
  423eb9:	cmp    bh,0x88
  423ebc:	xchg   edx,eax
  423ebd:	cmc    
  423ebe:	jns    0x423f33
  423ec0:	add    cl,BYTE PTR [ebx]
  423ec2:	in     al,dx
  423ec3:	and    ecx,DWORD PTR [edx+0xb]
  423ec6:	bound  ecx,QWORD PTR [edx+0x4fe4de1e]
  423ecc:	mov    ebx,0x62000f82
  423ed1:	(bad)  [edi-0x78]
  423ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ed5:	jg     0x423e9f
  423ed7:	mov    esi,0x4b7a6d12
  423edc:	xchg   dl,ah
  423ede:	pop    esp
  423edf:	repnz fadd QWORD PTR [eax-0xae57701]
  423ee6:	ss jb  0x423f4f
  423ee9:	sti    
  423eea:	ret    
  423eeb:	and    eax,edx
  423eed:	adc    DWORD PTR [edi+0x28],0x3a
  423ef1:	std    
  423ef2:	aas    
  423ef3:	jge    0x423f5b
  423ef5:	cmc    
  423ef6:	jo     0x423f6a
  423ef8:	adc    al,0xfb
  423efa:	inc    edx
  423efb:	sub    BYTE PTR [ecx+edi*8],ah
  423efe:	ret    
  423eff:	and    edi,DWORD PTR [edx-0xd]
  423f02:	cmp    eax,0xc90b66e8
  423f07:	and    ebp,DWORD PTR [edx-0x3]
  423f0a:	cmp    eax,0xc0fb6f72
  423f0f:	and    edx,DWORD PTR [esi-0xe]
  423f12:	shl    bh,cl
  423f14:	push   ecx
  423f15:	push   eax
  423f16:	imul   edi,esp,0xffffffd8
  423f19:	imul   esi,DWORD PTR [edi-0x33],0x0
	...
  423f30:	retf   0xde7f
  423f33:	call   ebp
  423f35:	fdiv   DWORD PTR [eax+eax*8-0x7f]
  423f39:	in     eax,0x91
  423f3b:	out    dx,al
  423f3c:	(bad)  
  423f3e:	jmp    0xf547d9ca
  423f43:	sub    BYTE PTR [ecx],0xb5
  423f46:	fstp   QWORD PTR [ebx-0x7f]
  423f49:	push   esi
  423f4a:	call   0xe2db2052
  423f4f:	xchg   DWORD PTR [eax-0x70],eax
  423f52:	push   0x6f
  423f54:	mov    bl,dl
  423f56:	pop    ss
  423f57:	dec    ebx
  423f58:	loop   0x423f66
  423f5a:	push   es
  423f5b:	sbb    BYTE PTR [edx+0x5],ah
  423f5e:	loope  0x423ee0
  423f60:	sub    DWORD PTR [ebp+0x54c05bf5],esi
  423f66:	call   0x9d714e6e
  423f6b:	jns    0x423f0f
  423f6d:	xor    esp,DWORD PTR [edi+0x48]
  423f70:	test   eax,0xa503e19b
  423f75:	sub    bh,BYTE PTR [ebp+0x3ecab6d5]
  423f7b:	shl    DWORD PTR [edx-0x342d18fd],cl
  423f81:	(bad)  
  423f82:	add    DWORD PTR [ebx],0x6f69d962
  423f88:	mov    cl,0xb5
  423f8a:	mov    ecx,0xc5b5997c
  423f8f:	jp     0x423fab
  423f91:	arpl   si,di
  423f93:	outs   dx,BYTE PTR ds:[esi]
	...
  423fa8:	jo     0x42400f
  423faa:	test   ebx,0x82d9640d
  423fb0:	pop    es
  423fb1:	(bad)  
  423fb2:	pop    ebp
  423fb3:	(bad)  
  423fb4:	xchg   edx,eax
  423fb5:	sub    dh,BYTE PTR [edi]
  423fb7:	fisub  DWORD PTR [ebx+0x2a]
  423fba:	sbb    al,0x6f
  423fbc:	push   eax
  423fbd:	aad    0xd6
  423fbf:	ret    
  423fc0:	in     eax,0x63
  423fc2:	add    BYTE PTR [ecx-0x1f8a7216],dh
  423fc8:	scas   eax,DWORD PTR es:[edi]
  423fc9:	lea    edx,ds:0x119734d
  423fcf:	xchg   edx,eax
  423fd0:	push   0x6dcd4460
  423fd5:	mov    WORD PTR [eax-0x37],?
  423fd8:	nop
  423fd9:	sub    DWORD PTR [edi-0x13],esp
  423fdc:	xchg   esp,eax
  423fdd:	lea    edx,ds:0x1195381
  423fe3:	bound  edi,QWORD PTR [ecx]
  423fe5:	pop    ebx
  423fe6:	in     eax,dx
  423fe7:	cmc    
  423fe8:	addr16 pusha 
  423fea:	inc    esp
  423feb:	or     eax,0x54c6072
  423ff0:	outs   dx,BYTE PTR ds:[esi]
  423ff1:	mov    WORD PTR [eax+0x9],?
  423ff4:	fwait
  423ff5:	jbe    0x42404e
  423ff7:	dec    esp
  423ff8:	add    al,0x8d
  423ffa:	xchg   BYTE PTR [ecx],ah
  423ffc:	fiadd  DWORD PTR [ebx-0x7275198c]
  424002:	adc    eax,0x1197335
  424007:	les    ecx,FWORD PTR fs:[edx]
  42400a:	add    al,0xbe
	...
  424020:	mov    esp,0x21fba4eb
  424025:	mov    es,WORD PTR [edi+ebx*1+0xf7fe235]
  42402c:	les    ecx,FWORD PTR [edx]
  42402e:	add    al,0x9f
  424030:	mov    esp,0x21dba4eb
  424035:	mov    ds,WORD PTR [edx-0x69]
  424038:	xor    ah,BYTE PTR [eax-0x41]
  42403b:	xchg   edx,eax
  42403c:	es cwde 
  42403e:	or     cl,ch
  424040:	aaa    
  424041:	and    eax,0xeb77d888
  424046:	sub    al,0xf8
  424048:	and    DWORD PTR [esi-0x35642e7a],ecx
  42404e:	das    
  42404f:	add    BYTE PTR [ebx-0x3735766c],bh
  424055:	hlt    
  424056:	jle    0x42401f
  424058:	lahf   
  424059:	repnz bound ecx,QWORD PTR [edi]
  42405c:	inc    ebp
  42405d:	sbb    eax,DWORD PTR [edi-0x7f8c36b2]
  424063:	sar    BYTE PTR [edx-0x56],0x65
  424067:	mov    edx,ecx
  424069:	cld    
  42406a:	push   cs
  42406b:	sub    BYTE PTR [edx-0x1c7d0467],bh
  424071:	xlat   BYTE PTR ds:[ebx]
  424072:	je     0x424095
  424074:	cmp    ch,bh
  424076:	push   DWORD PTR [ebx-0x49]
  424079:	pop    eax
  42407a:	repz add cl,BYTE PTR [esi-0x74b9c72a]
  424081:	jle    0x424094
  424083:	inc    BYTE PTR [eax]
	...
  424095:	add    BYTE PTR [eax],al
  424097:	add    BYTE PTR [ebp+0x7b5686e9],bh
  42409d:	pop    ecx
  42409e:	stc    
  42409f:	sbb    ah,BYTE PTR [edi-0x3b3fcde6]
  4240a5:	fwait
  4240a6:	rol    DWORD PTR [ebx+edi*2],0x10
  4240aa:	dec    eax
  4240ab:	and    al,0x47
  4240ad:	or     al,0x46
  4240af:	adc    al,dl
  4240b1:	cwde   
  4240b2:	dec    DWORD PTR [ebp+edi*8+0x5341c5dc]
  4240b9:	aam    0x0
  4240bb:	add    BYTE PTR [ebx+0x54],cl
  4240be:	mov    ebx,0x3bb83e75
  4240c3:	adc    al,0x50
  4240c5:	jecxz  0x42404a
  4240c7:	inc    ecx
  4240c8:	aaa    
  4240c9:	adc    bh,BYTE PTR [eax+ecx*1]
  4240cc:	mov    ss,WORD PTR ds:0x2ad8106f
  4240d2:	adc    DWORD PTR [ecx+0xb],0x16
  4240d6:	cmp    edx,DWORD PTR [edx+edi*8]
  4240d9:	fadd   DWORD PTR [eax]
  4240db:	add    BYTE PTR [edx+0x72],ah
  4240de:	(bad)  
  4240df:	call   0x88b53102
  4240e4:	adc    al,0x1d
  4240e6:	sub    BYTE PTR [eax],dh
  4240e8:	outs   dx,DWORD PTR ds:[esi]
  4240e9:	jae    0x4240ac
  4240eb:	gs fwait
  4240ed:	sar    dh,cl
  4240ef:	jae    0x4240b1
  4240f1:	(bad)  
  4240f2:	aas    
  4240f3:	add    DWORD PTR [ecx-0x49772d9d],edi
  4240f9:	jmp    DWORD PTR [ebx-0x9]
	...
  424110:	jecxz  0x424168
  424112:	sti    
  424113:	add    DWORD PTR [edx-0x7e],esp
  424116:	rcl    BYTE PTR [ebp-0x27],1
  424119:	(bad)  
  42411a:	sti    
  42411b:	push   esp
  42411c:	loope  0x4240aa
  42411e:	or     eax,DWORD PTR [eax]
  424120:	jmp    0x4240d8
  424122:	sub    BYTE PTR [edi+ecx*1],cl
  424125:	mov    DWORD PTR [esi+0x7d],edi
  424128:	inc    edx
  424129:	cmp    bh,0x9f
  42412c:	bound  esp,QWORD PTR [ebx-0x1e038111]
  424132:	add    al,0xff
  424134:	jne    0x4240b8
  424136:	icebp  
  424137:	fist   WORD PTR fs:[ebx+ebx*1-0x605a9aab]
  42413f:	adc    BYTE PTR [edx+0x6a527882],ah
  424145:	arpl   WORD PTR [edx+0x4b],di
  424148:	xchg   BYTE PTR [esi-0x4ec52888],cl
  42414e:	push   eax
  42414f:	(bad)  
  424150:	cmp    eax,0xa8733ffd
  424155:	idiv   DWORD PTR [eax]
  424157:	out    0x70,eax
  424159:	je     0x4241c7
  42415b:	cld    
  42415c:	loope  0x424137
  42415e:	add    dh,BYTE PTR [ebx+0x7d]
  424161:	jae    0x424117
  424163:	inc    eax
  424164:	push   0xffffffff
  424166:	addr16 ja 0x4240ff
  424169:	fldlg2 
  42416b:	xchg   BYTE PTR ds:0xad155531,cl
  424171:	pusha  
  424172:	and    eax,0x20
	...
  424187:	add    BYTE PTR [edx+0x5e],dl
  42418a:	and    eax,0xd2295620
  42418f:	adc    ch,cl
  424191:	mov    edi,DWORD PTR [edx+0x25606e5f]
  424197:	and    BYTE PTR [esi+0x23],ah
  42419a:	pop    ebp
  42419b:	rol    BYTE PTR [ecx-0x72a3c61b],0x8b
  4241a2:	call   0xe8f8:0x1d98e16b
  4241a9:	and    al,0xc6
  4241ab:	adc    edx,DWORD PTR [edi]
  4241ad:	pusha  
  4241ae:	scas   eax,DWORD PTR es:[edi]
  4241af:	pop    esp
  4241b0:	stos   DWORD PTR es:[edi],eax
  4241b1:	test   eax,0x2b3e6b7a
  4241b6:	cmp    al,BYTE PTR ds:0xc984603b
  4241bc:	mov    ds:0xdad1e9e0,eax
  4241c1:	mov    DWORD PTR [edx-0x581ee882],esi
  4241c7:	ficom  WORD PTR [ebx+0x61ba5cf8]
  4241cd:	and    DWORD PTR [eax-0x1c],0x44658b65
  4241d4:	rcl    ah,1
  4241d6:	data16 cmp al,0x56
  4241d9:	jg     0x4241db
  4241db:	xchg   ecx,ecx
  4241dd:	mov    ch,0xf5
  4241df:	add    ecx,esi
  4241e1:	lock outs dx,BYTE PTR ds:[esi]
  4241e3:	ret    0xfe65
  4241e6:	sub    esp,esp
  4241e8:	bound  edx,QWORD PTR [ebx]
  4241ea:	out    0xdd,al
	...
  424200:	lea    ecx,[edx+0x29521f7d]
  424206:	sti    
  424207:	adc    BYTE PTR [edx+0x61a900e3],dh
  42420d:	pop    eax
  42420e:	(bad)  
  42420f:	fisttp QWORD PTR [esp+edx*1-0x74368bf7]
  424216:	mov    BYTE PTR [edi],ch
  424218:	(bad)  
  424219:	sub    eax,0x8af5ab5b
  42421e:	push   ebp
  42421f:	bound  esi,QWORD PTR [esi+0x61]
  424222:	dec    esp
  424223:	or     eax,0xf14261e6
  424228:	mov    esp,0x1e426093
  42422d:	sub    dl,BYTE PTR [esp+ebx*2-0x45]
  424231:	(bad)  
  424232:	push   ebp
  424234:	pop    esp
  424235:	aam    0x37
  424237:	out    dx,al
  424238:	mov    bh,0xe1
  42423a:	push   eax
  42423b:	mov    gs,WORD PTR fs:[edx]
  42423e:	jmp    0xfbcd08ea
  424243:	xchg   edx,eax
  424244:	pop    edi
  424245:	mov    eax,0x11062165
  42424b:	jbe    0x424228
  42424d:	rol    BYTE PTR [edi-0x30fe71e9],cl
  424253:	leave  
  424254:	add    al,0x9d
  424256:	call   0xfbccc85f
  42425b:	mov    dh,0xab
  42425d:	cwde   
  42425e:	add    al,0xe9
  424260:	in     al,dx
  424261:	and    eax,0xed25
	...
  424276:	add    BYTE PTR [eax],al
  424278:	xor    al,0x1a
  42427a:	or     DWORD PTR [edx-0x1eaeaca5],edi
  424280:	xor    al,0xa8
  424282:	pusha  
  424283:	push   0xffffffa6
  424285:	(bad)  
  424286:	call   0xfbcc847b
  42428b:	sub    edi,DWORD PTR ds:0xae62558a
  424291:	pop    edi
  424292:	inc    edx
  424293:	fst    QWORD PTR [ecx]
  424295:	lea    edx,ds:0x40e43f00
  42429b:	add    al,bl
  42429d:	adc    eax,0x98820683
  4242a2:	dec    DWORD PTR [eax-0x3977723b]
  4242a8:	popf   
  4242a9:	adc    al,0x56
  4242ab:	push   edi
  4242ac:	jo     0x4242b4
  4242ae:	xor    edi,edi
  4242b0:	push   edx
  4242b1:	mov    edi,0x97801172
  4242b6:	(bad)  
  4242b7:	(bad)  
  4242b8:	out    0x3d,eax
  4242ba:	cld    
  4242bb:	adc    eax,0x40e2e7
  4242c0:	test   BYTE PTR [edx+edi*1+0x4e0c0c72],bh
  4242c7:	add    al,0xf3
  4242c9:	mov    ebp,0x2cb0060
  4242ce:	inc    esi
  4242cf:	or     al,0x7b
  4242d1:	add    BYTE PTR [edi],cl
  4242d3:	and    BYTE PTR [ecx+0x7d5efb95],ch
  4242d9:	adc    al,0x4f
  4242db:	push   esi
	...
  4242f0:	adc    BYTE PTR [esi],al
  4242f2:	xchg   DWORD PTR [esi+0x7f],ebp
  4242f5:	call   0x40:0xe2db15fc
  4242fc:	clc    
  4242fd:	jle    0x424302
  4242ff:	add    BYTE PTR [esi+0x585750a8],dl
  424305:	sbb    al,0x31
  424307:	call   DWORD PTR [edx-0x21]
  42430a:	jb     0x424348
  42430c:	lock xchg esi,eax
  42430e:	inc    DWORD PTR [edx+0x73fb355f]
  424314:	pop    ebp
  424315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424316:	sti    
  424317:	(bad)  
  424318:	push   edi
  424319:	xor    eax,0xefb715fc
  42431e:	inc    eax
  42431f:	add    dh,al
  424321:	sbb    eax,0xfb62156f
  424326:	mov    esi,0xa7af2d03
  42432b:	cld    
  42432c:	dec    edi
  42432d:	push   ss
  42432e:	adc    eax,DWORD PTR [eax+0x62]
  424331:	or     edi,DWORD PTR [edi-0x58691efd]
  424337:	(bad)  
  424338:	clc    
  424339:	jl     0x4243b7
  42433b:	dec    ebp
  42433c:	pop    esi
  42433d:	or     edi,esp
  42433f:	mov    dh,0xeb
  424341:	jle    0x4242c9
  424343:	inc    eax
  424344:	popf   
  424345:	jmp    0x42436d
  424347:	jb     0x42436f
  424349:	cld    
  42434a:	push   esp
  42434b:	mov    esi,0x4d727500
  424350:	or     WORD PTR [edx],cx
  424353:	call   0x424358
	...
  424368:	push   0xffffffef
  42436a:	add    al,0x0
  42436c:	sub    eax,0x6ffccbeb
  424371:	sahf   
  424372:	adc    eax,0xc3c86240
  424377:	rcl    BYTE PTR [ecx],0xc5
  42437a:	into   
  42437b:	mov    BYTE PTR [ebx+0xf0bda25],dh
  424381:	pop    edi
  424382:	or     ah,al
  424384:	jo     0x424338
  424386:	add    al,0x31
  424388:	mov    ecx,0x1707c949
  42438d:	mov    ah,BYTE PTR [esi]
  42438f:	pop    esp
  424390:	ds xchg bl,ch
  424393:	jno    0x42437e
  424395:	xor    BYTE PTR [edx+0x4d],0x5e
  424399:	std    
  42439a:	or     eax,DWORD PTR [ebx-0x8d9a]
  4243a0:	jp     0x424371
  4243a2:	leave  
  4243a3:	call   FWORD PTR [ebp-0x2]
  4243a6:	aas    
  4243a7:	jae    0x424360
  4243a9:	addr16 aam 0x69
  4243ac:	data16 mov bh,0xeb
  4243af:	and    edi,DWORD PTR [esi-0x27]
  4243b2:	and    ch,bh
  4243b4:	cmp    DWORD PTR [ebp-0x427e10e6],0x855068b6
  4243be:	stc    
  4243bf:	ret    
  4243c0:	and    eax,0x1e7e0153
  4243c5:	or     eax,0xbdb62ab8
  4243ca:	int    0xef
	...
  4243e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4243e1:	repz out 0xd4,eax
  4243e4:	mov    dl,0x88
  4243e6:	pop    ebp
  4243e7:	and    BYTE PTR [edx],dh
  4243e9:	repz fcmove st,st(7)
  4243ec:	mov    ecx,DWORD PTR [eax-0x13a5ee2e]
  4243f2:	sub    DWORD PTR [ecx+eiz*8],eax
  4243f5:	cwde   
  4243f6:	cmp    al,0x32
  4243f8:	fucomip st,st(5)
  4243fa:	sub    eax,0x19d92212
  4243ff:	iret   
  424400:	into   
  424401:	in     eax,dx
  424402:	stc    
  424403:	adc    al,0x22
  424405:	fnstcw WORD PTR [edx]
  424407:	addr16 push eax
  424409:	cmp    eax,0x52b5c3f7
  42440e:	sti    
  42440f:	inc    esp
  424410:	ret    
  424411:	ficomp DWORD PTR [esi+esi*4+0x61]
  424415:	jno    0x424429
  424417:	(bad)  
  424418:	popf   
  424419:	xchg   DWORD PTR [edx],ebx
  42441b:	rcl    DWORD PTR [esi+0x221295ed],1
  424421:	(bad)  [ebx]
  424423:	leave  
  424424:	fistp  DWORD PTR [ebx-0x26aebe42]
  42442a:	outs   dx,BYTE PTR ds:[esi]
  42442b:	imul   dl
  42442d:	push   ds
  42442e:	out    dx,al
  42442f:	into   
  424430:	in     al,0xc4
  424432:	popa   
  424433:	addr16 pop edi
  424435:	mov    ah,bl
  424437:	adc    esi,DWORD PTR [ebx+0x19]
  42443a:	jmp    0x3112:0x7454b2
  424441:	sub    eax,0x3888
	...
  424456:	add    BYTE PTR [eax],al
  424458:	adc    eax,0x2cf57a54
  42445d:	xchg   BYTE PTR ds:0x1195009,dl
  424463:	push   ss
  424464:	in     al,dx
  424465:	ficom  WORD PTR [ebx+0xe]
  424468:	push   ebx
  424469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42446a:	push   cs
  42446b:	test   eax,0xbac0c861
  424470:	test   al,0xc6
  424472:	cmp    edi,edx
  424474:	push   DWORD PTR [ecx-0x79d42079]
  42447a:	push   eax
  42447b:	jb     0x42443c
  42447d:	fisub  DWORD PTR [edi]
  42447f:	mov    dl,0x7a
  424481:	ficomp DWORD PTR [eax+0x58c70839]
  424487:	adc    ah,BYTE PTR [esi]
  424489:	aad    0x3e
  42448b:	test   al,0xb1
  42448d:	test   DWORD PTR ds:0x119703d,edx
  424493:	ins    BYTE PTR es:[edi],dx
  424494:	and    DWORD PTR [ebx],ecx
  424496:	and    ebp,DWORD PTR [edx+0x20]
  424499:	(bad)  
  42449a:	callw  0x647
  42449e:	sbb    bl,BYTE PTR [ebx]
  4244a0:	adc    ecx,ecx
  4244a2:	xlat   BYTE PTR ds:[ebx]
  4244a3:	sub    bl,BYTE PTR [ebp+0x53891585]
  4244a9:	sbb    DWORD PTR [ecx],eax
  4244ab:	xchg   bh,dl
  4244ad:	ficom  WORD PTR [ebx+0x7e]
  4244b0:	jb     0x424457
  4244b2:	push   cs
  4244b3:	sub    DWORD PTR [esi+0x24],esp
  4244b6:	pop    ebx
  4244b7:	arpl   WORD PTR [eax],sp
  4244b9:	and    DWORD PTR [edi+0xed],edi
	...
  4244cf:	add    BYTE PTR [ecx-0x35],ah
  4244d2:	xlat   BYTE PTR ds:[ebx]
  4244d3:	push   edx
  4244d4:	add    BYTE PTR [ecx-0x14],bl
  4244d7:	cmc    
  4244d8:	nop
  4244d9:	sub    edx,DWORD PTR [ebx-0x4a]
  4244dc:	mov    eax,DWORD PTR [esi-0x5f65ff7a]
  4244e2:	sti    
  4244e3:	sbb    BYTE PTR ds:0x1d8300ba,0xe6
  4244ea:	add    BYTE PTR [ebx+0x6a00e21d],al
  4244f0:	dec    ebx
  4244f1:	and    dh,BYTE PTR [ecx]
  4244f3:	ror    DWORD PTR [ebx-0x26],cl
  4244f6:	test   al,al
  4244f8:	inc    esp
  4244f9:	push   es
  4244fa:	fiadd  WORD PTR [eax]
  4244fc:	cmp    ebx,edx
  4244fe:	xchg   DWORD PTR [edi+ebp*1-0x1a],eax
  424502:	push   eax
  424503:	mov    eax,DWORD PTR [ebp+0x22]
  424506:	mov    esi,0x84d9fbd2
  42450b:	shl    BYTE PTR [esi+eax*1],0xca
  42450f:	add    BYTE PTR [ebx],cl
  424511:	fidiv  DWORD PTR [ecx]
  424513:	in     eax,dx
  424514:	push   0xffffffa1
  424516:	pop    ds
  424517:	adc    al,0xa1
  424519:	fld    QWORD PTR [edi+0x50d15f44]
  42451f:	push   0xffffffce
  424521:	push   cs
  424522:	inc    eax
  424523:	and    al,0x73
  424525:	lods   eax,DWORD PTR ds:[esi]
  424526:	cld    
  424527:	ss adc al,0xd6
  42452a:	mov    eax,0x7fdd7b12
  42452f:	shl    BYTE PTR [ebp+eax*1+0x85],0x0
	...
  424547:	add    bl,cl
  424549:	fld    DWORD PTR [ecx+0xd19f7c]
  42454f:	je     0x4245a8
  424551:	pop    eax
  424552:	ja     0x424578
  424554:	add    DWORD PTR [esi+0x4110796e],0x1f
  42455b:	sbb    al,0xc8
  42455d:	dec    ebx
  42455e:	adc    ecx,DWORD PTR [edx+0x4430d53d]
  424564:	outs   dx,DWORD PTR ds:[esi]
  424565:	mov    ebp,0xe95f4489
  42456a:	xor    ebx,ebx
  42456c:	(bad)  
  42456d:	sti    
  42456e:	add    BYTE PTR [bx-0x7e],ah
  424572:	inc    edi
  424573:	and    BYTE PTR ds:0x62d08076,0x9
  42457a:	mov    ecx,0xc3876e23
  42457f:	and    edi,DWORD PTR [edx+0x4b]
  424582:	shl    BYTE PTR [ecx+0x64],1
  424585:	ja     0x42456a
  424587:	and    edi,DWORD PTR [esi+0x6b]
  42458a:	mov    eax,0xff732b7e
  42458f:	lahf   
  424590:	bound  ebp,QWORD PTR [ebx-0x40]
  424593:	imul   esp,DWORD PTR [edx+0x5f],0xeb2488cc
  42459a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42459b:	shl    DWORD PTR [edx+0x72],1
  42459e:	jnp    0x42455f
  4245a0:	mov    fs,WORD PTR [ebx-0x80]
  4245a3:	inc    ebp
  4245a4:	inc    edx
  4245a5:	jno    0x42461f
  4245a7:	in     al,dx
  4245a8:	jmp    0x424570
  4245aa:	and    BYTE PTR [eax+eax*1],dl
	...
  4245bd:	add    BYTE PTR [eax],al
  4245bf:	add    cl,ah
  4245c1:	les    esp,FWORD PTR [eax]
  4245c3:	add    ah,ch
  4245c5:	mov    esi,0x8b632020
  4245ca:	jp     0x42463d
  4245cc:	aad    0x43
  4245ce:	or     BYTE PTR fs:[esi-0x2a],0x8
  4245d3:	add    BYTE PTR [ebp-0x4],dl
  4245d6:	fdiv   st(4),st
  4245d8:	mov    ebp,0x8a45643b
  4245dd:	imul   eax,esp,0xaf6badfc
  4245e3:	(bad)  
  4245e4:	mov    eax,0x46437891
  4245e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245ea:	fcos   
  4245ec:	and    eax,0x7acd79ed
  4245f1:	in     eax,dx
  4245f2:	dec    esi
  4245f3:	inc    DWORD PTR [ebp+0x6e733ffe]
  4245f9:	fldenv [edx+0x2d]
  4245fc:	ja     0x4245ec
  4245fe:	test   DWORD PTR [edx],edx
  424600:	and    bl,cl
  424602:	ins    BYTE PTR es:[edi],dx
  424603:	inc    ebx
  424604:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424606:	pop    ss
  424607:	inc    esp
  424608:	mov    esi,0xe2c8a523
  42460d:	pushf  
  42460e:	fld    QWORD PTR [eax-0x4e]
  424611:	sub    ebx,DWORD PTR [ebx-0x16108a27]
  424617:	fs jo  0x42461b
  42461a:	xchg   esp,eax
  42461b:	mov    edi,0x783f4f35
  424620:	xor    al,0x84
  424622:	cld    
  424623:	fild   WORD PTR [eax]
	...
  424635:	add    BYTE PTR [eax],al
  424637:	add    BYTE PTR [ebx+0x19],dl
  42463a:	jmp    0x6dee:0xfb5e0d78
  424641:	pop    eax
  424642:	jmp    0x4246a8
  424644:	loop   0x424658
  424646:	loop   0x4246ac
  424648:	loop   0x42465c
  42464a:	fisub  WORD PTR [edx+eiz*8-0x6]
  42464e:	stc    
  42464f:	add    esp,ebx
  424651:	cli    
  424652:	cmc    
  424653:	add    esp,ebp
  424655:	and    dh,dl
  424657:	outs   dx,BYTE PTR ds:[esi]
  424658:	arpl   ax,cx
  42465a:	ror    DWORD PTR [ecx+0x16ee0dd7],cl
  424660:	mov    ds:0x9f8ee06f,al
  424665:	push   ecx
  424666:	repz imul edi,ebp,0xffffff82
  42466a:	stos   BYTE PTR es:[edi],al
  42466b:	arpl   cx,sp
  42466d:	cwde   
  42466e:	sbb    al,0xe
  424670:	and    eax,0xd36cab50
  424675:	nop
  424676:	xchg   edx,eax
  424677:	arpl   WORD PTR [edx+0x3e4a5e7d],di
  42467d:	and    ebx,DWORD PTR [edi]
  42467f:	inc    edi
  424680:	xor    BYTE PTR [eax-0x73],dl
  424683:	xchg   DWORD PTR [ecx-0x20],edi
  424686:	add    BYTE PTR [ebx+ebx*4+0x7f],ah
  42468a:	dec    edi
  42468b:	pop    ss
  42468c:	mov    ecx,0x71dcfc13
  424691:	push   eax
  424692:	icebp  
  424693:	jb     0x424628
  424695:	fld    TBYTE PTR [edi]
  424697:	xor    ch,BYTE PTR [ebp+0x2977b]
	...
  4246ad:	add    BYTE PTR [eax],al
  4246af:	add    BYTE PTR [edi-0x27],ah
  4246b2:	xchg   DWORD PTR [ecx-0x15],eax
  4246b5:	test   DWORD PTR [ebp-0x1a],esi
  4246b8:	ja     0x424653
  4246ba:	jmp    0x11ba515
  4246bf:	ret    
  4246c0:	sub    BYTE PTR [bx+si+0x72],dl
  4246c4:	nop
  4246c5:	jp     0x424675
  4246c7:	cmp    BYTE PTR [esi-0x27],ah
  4246ca:	test   BYTE PTR [ecx],ch
  4246cc:	push   ecx
  4246cd:	pop    ebp
  4246ce:	jle    0x4246b9
  4246d0:	popa   
  4246d1:	(bad)  [ebp-0x77ed7654]
  4246d7:	das    
  4246d8:	jle    0x4246cb
  4246da:	shr    ecx,1
  4246dc:	popa   
  4246dd:	pop    ebp
  4246de:	shl    BYTE PTR [ebp+0x14],0x52
  4246e2:	inc    edx
  4246e3:	add    DWORD PTR [ebp-0x64],ecx
  4246e6:	mov    DWORD PTR [edx+ecx*4],esp
  4246e9:	push   eax
  4246ea:	inc    edx
  4246eb:	icebp  
  4246ec:	lods   al,BYTE PTR ds:[esi]
  4246ed:	push   ecx
  4246ee:	sbb    eax,0xc2d779
  4246f3:	jno    0x42469f
  4246f5:	mov    cl,BYTE PTR [ebp+0x6712d624]
  4246fb:	in     al,dx
  4246fc:	repnz pop ss
  4246fe:	cmc    
  4246ff:	sbb    DWORD PTR [ecx-0x34],eax
  424702:	sti    
  424703:	mov    edx,0xd57442ea
  424708:	in     al,0xff
  42470a:	adc    ah,ch
  42470c:	mov    dh,BYTE PTR [esi+eiz*2+0x1117f2e9]
	...
  424727:	add    BYTE PTR [ebx+0x3e],bh
  42472a:	cld    
  42472b:	jne    0x42473c
  42472d:	div    DWORD PTR ds:0xbb51e8ff
  424733:	je     0x4246e4
  424735:	in     eax,0x77
  424737:	adc    BYTE PTR [esi+0x4836fc7f],dl
  42473d:	ret    0x140
  424740:	lods   eax,DWORD PTR ds:[esi]
  424741:	mov    dh,0x81
  424743:	push   esi
  424744:	addr16 (bad) 
  424747:	inc    esi
  424748:	jae    0x424740
  42474a:	push   cs
  42474b:	cwde   
  42474c:	sub    DWORD PTR [esi-0x14cc1505],edx
  424752:	fst    DWORD PTR [ebx-0x74]
  424755:	mov    eax,ds:0xf76d8be7
  42475a:	outs   dx,BYTE PTR ds:[esi]
  42475b:	call   0x10e2db3
  424760:	cmp    esi,edi
  424762:	xor    eax,0xa3a16ff
  424767:	inc    eax
  424768:	or     edx,DWORD PTR [ebx+0x46]
  42476b:	cld    
  42476c:	jae    0x4247df
  42476e:	push   edi
  42476f:	add    bl,bh
  424771:	push   ebx
  424772:	rcr    BYTE PTR [edi-0x13],0x42
  424776:	ret    0xefc2
  424779:	aad    0x81
  42477b:	in     al,dx
  42477c:	test   DWORD PTR [esi+ecx*2+0x56],0x8b552680
  424784:	sub    eax,0xb75e888d
  424789:	hlt    
  42478a:	dec    ebx
  42478b:	push   0x0
	...
  42479d:	add    BYTE PTR [eax],al
  42479f:	add    BYTE PTR [ebx-0x4cdbc0ae],bh
  4247a5:	inc    ebp
  4247a6:	imul   eax,DWORD PTR ds:0x281f911e,0xff35f87b
  4247b0:	mov    dh,0x5d
  4247b2:	adc    DWORD PTR [eax+0x62],eax
  4247b5:	jo     0x424739
  4247b7:	mov    edi,0x7b85af16
  4247bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247be:	add    dh,BYTE PTR [ebx+0x4e]
  4247c1:	pop    es
  4247c2:	mov    ecx,0xb93f6623
  4247c7:	pop    ss
  4247c8:	call   0x306270b0
  4247cd:	dec    edx
  4247ce:	test   DWORD PTR [edx-0x137382e0],0x5b882861
  4247d8:	xchg   BYTE PTR [edx+0x962d084],cl
  4247de:	mov    ecx,0xd10a6e23
  4247e3:	and    eax,DWORD PTR [edx-0x4901c040]
  4247e9:	jbe    0x42476d
  4247eb:	shr    DWORD PTR [edi-0x47327227],1
  4247f1:	jb     0x4247a7
  4247f3:	push   esp
  4247f4:	cmp    dl,BYTE PTR [esi]
  4247f6:	xor    eax,0x44f71dff
  4247fb:	jb     0x4247be
  4247fd:	inc    esp
  4247fe:	aas    
  4247ff:	pop    esp
  424800:	lods   al,BYTE PTR ds:[esi]
  424801:	pop    ebp
  424802:	mov    esp,0x80
	...
  424817:	add    BYTE PTR [esi],bl
  424819:	lahf   
  42481a:	inc    esp
  42481b:	mov    BYTE PTR [esi-0x6379086a],ah
  424821:	xchg   BYTE PTR [esi-0x1df6a593],al
  424827:	pand   mm1,mm0
  42482a:	clc    
  42482b:	scas   eax,DWORD PTR es:[edi]
  42482c:	arpl   WORD PTR [ebx-0x22ceb19d],bx
  424832:	mov    dh,0x54
  424834:	fstp   DWORD PTR [ecx-0x43a357c]
  42483a:	rol    BYTE PTR [edi],1
  42483c:	jmp    0xa3cb5928
  424841:	fld    st(6)
  424843:	inc    ebp
  424844:	push   0xffffff96
  424846:	adc    eax,0xec9ae2f0
  42484b:	in     eax,dx
  42484c:	popf   
  42484d:	pop    ebx
  42484e:	mov    bh,0x3
  424850:	xor    BYTE PTR [edx],ch
  424852:	outs   dx,DWORD PTR ds:[esi]
  424853:	push   eax
  424854:	test   ebx,edi
  424856:	cdq    
  424857:	add    esp,DWORD PTR [edx+0x55]
  42485a:	test   eax,0xf25416d7
  42485f:	repz dec edx
  424861:	or     dl,dh
  424863:	test   BYTE PTR [edi-0x2a],bh
  424866:	outs   dx,BYTE PTR ds:[esi]
  424867:	push   ecx
  424868:	jge    0x424867
  42486a:	scas   al,BYTE PTR es:[edi]
  42486b:	add    esp,DWORD PTR [edx+0x54]
  42486e:	xor    DWORD PTR [esi-0x7956fac6],eax
  424874:	push   edi
  424875:	add    dh,al
  424877:	in     eax,dx
  424878:	scas   al,BYTE PTR es:[edi]
  424879:	sbb    ah,0x27
	...
  424890:	push   eax
  424891:	sbb    edx,ebp
  424893:	ins    BYTE PTR es:[edi],dx
  424894:	push   0x27
  424896:	mov    bh,0x8c
  424898:	push   ds
  424899:	jno    0x424854
  42489b:	xor    esp,DWORD PTR ds:0x5a6b5e80
  4248a1:	outs   dx,DWORD PTR ds:[esi]
  4248a2:	xchg   esp,eax
  4248a3:	dec    BYTE PTR [ebx+0x41d702da]
  4248a9:	mov    ecx,0x93da396e
  4248ae:	add    ebx,edi
  4248b0:	dec    ecx
  4248b1:	fucompp 
  4248b3:	mov    WORD PTR [ecx-0x1372fe4b],gs
  4248b9:	push   esp
  4248ba:	test   eax,0xe84961d8
  4248bf:	push   0x64
  4248c1:	push   esp
  4248c2:	sahf   
  4248c3:	ins    BYTE PTR es:[edi],dx
  4248c4:	sub    DWORD PTR [edx+ebp*8],esp
  4248c7:	add    edx,DWORD PTR [eax+0x28be1a99]
  4248cd:	and    al,0x1
  4248cf:	adc    BYTE PTR [eax],ah
  4248d1:	fadd   DWORD PTR [eax]
  4248d3:	push   0x32
  4248d5:	aam    0x4f
  4248d7:	jb     0x42487b
  4248d9:	mov    ebx,0x24ec3418
  4248de:	mov    BYTE PTR ds:0xa687b94a,dl
  4248e4:	inc    ecx
  4248e5:	call   0xeefb:0x87e17887
  4248ec:	frstor [ebx+0x0]
  4248ef:	jmp    0xc5869d55
	...
  424908:	inc    ecx
  424909:	sub    ecx,ebp
  42490b:	fstp   QWORD PTR [eax+eax*4]
  42490e:	sti    
  42490f:	gs push ds
  424911:	int    0x84
  424913:	arpl   WORD PTR [esi-0x27],sp
  424916:	add    BYTE PTR [edx],dl
  424918:	and    bh,BYTE PTR [ebx-0x11b09dc]
  42491e:	add    cl,ch
  424920:	popa   
  424921:	or     eax,DWORD PTR [ebx]
  424923:	repnz sbb eax,0x19ba20bb
  424929:	retf   0x70ce
  42492c:	jmp    0xf0:0xb2da20ba
  424933:	mov    esp,0x1ca51d3
  424938:	(bad)  
  424939:	lea    eax,[eax]
  42493b:	jmp    0x88b68825
  424940:	sti    
  424941:	jle    0x4248cf
  424943:	lods   eax,DWORD PTR ds:[esi]
  424944:	inc    ebp
  424945:	in     eax,0x50
  424947:	sub    DWORD PTR [edx+0x52],0x44
  42494b:	or     eax,0x17fc2946
  424950:	test   ebx,ebp
  424952:	mov    eax,0x847ea1fb
  424957:	test   eax,0x8015ad
  42495c:	daa    
  42495d:	mov    cl,0x10
  42495f:	add    eax,0x4c89958e
  424964:	outs   dx,DWORD PTR ds:[esi]
  424965:	jge    0x424998
  424967:	dec    esi
  424968:	xchg   ebx,eax
  424969:	push   ebx
  42496a:	aas    
  42496b:	and    al,0x0
	...
  42497d:	add    BYTE PTR [eax],al
  42497f:	add    BYTE PTR [edi+0x301842eb],ch
  424985:	inc    esi
  424986:	pop    ds
  424987:	and    BYTE PTR [ebx],al
  424989:	mov    ds,WORD PTR [edi]
  42498b:	sbb    BYTE PTR [eax-0x60bb7cf3],bh
  424991:	xchg   BYTE PTR [eax],al
  424993:	ret    0x29a8
  424996:	add    eax,0xca5b8e
  42499c:	mov    al,0xc7
  42499e:	outs   dx,BYTE PTR ds:[esi]
  42499f:	add    al,0x40
  4249a1:	repnz outs dx,DWORD PTR ds:[esi]
  4249a3:	push   ds
  4249a4:	lock leave 
  4249a6:	adc    BYTE PTR [edi+ebp*2-0x4b],0x89
  4249ab:	jmp    0x6b75c20
  4249b0:	or     DWORD PTR [esi],eax
  4249b2:	cmp    edi,eax
  4249b4:	or     eax,0xd4c0320a
  4249b9:	cmp    edx,DWORD PTR [esi+0x5b]
  4249bc:	enter  0x816,0xc2
  4249c0:	xor    ebx,edx
  4249c2:	repnz inc esp
  4249c4:	pop    ds
  4249c5:	cmp    dl,0x74
  4249c8:	pop    bx
  4249ca:	ja     0x4249f0
  4249cc:	pminub mm6,QWORD PTR [edx-0x1a]
  4249d0:	xchg   edx,eax
  4249d1:	xchg   esp,eax
  4249d2:	or     ecx,DWORD PTR [ecx+0x6e83d1ed]
  4249d8:	pop    es
  4249d9:	dec    ebp
  4249da:	dec    ebp
  4249db:	adc    al,0x3b
  4249dd:	aad    0xe9
  4249df:	fsubr  DWORD PTR [esi]
  4249e1:	push   eax
  4249e2:	out    0x83,eax
	...
  4249f8:	pop    ss
  4249f9:	test   DWORD PTR [eax+0x56],edx
  4249fc:	(bad)  
  4249fd:	sti    
  4249fe:	dec    edi
  4249ff:	mov    BYTE PTR [eax+edi*2],bl
  424a02:	and    BYTE PTR [esi+0x5e],al
  424a05:	repz pop esp
  424a07:	cld    
  424a08:	push   ebp
  424a09:	hlt    
  424a0a:	mov    edi,?
  424a0c:	mov    ebp,0x11d9106f
  424a11:	das    
  424a12:	ror    BYTE PTR [ebx],cl
  424a14:	lods   eax,DWORD PTR ds:[esi]
  424a15:	fisttp QWORD PTR [eax+ebp*8]
  424a18:	mov    al,0x2d
  424a1a:	add    al,0x0
  424a1c:	out    0x2f,al
  424a1e:	fdiv   DWORD PTR [ebp+0x31]
  424a21:	sbb    eax,0xea32fbc4
  424a26:	add    ecx,DWORD PTR [ebx-0x34afbe1]
  424a2c:	xor    al,0x7
  424a2e:	hlt    
  424a2f:	mov    bh,0x50
  424a31:	mov    al,0x4
  424a33:	and    DWORD PTR [edx-0x187f4365],0x1b
  424a3a:	add    al,0x73
  424a3c:	mov    ebx,0x9017caf8
  424a41:	pop    ebp
  424a42:	push   edi
  424a43:	mov    BYTE PTR [edi+0x6a5611be],dh
  424a49:	repnz inc edi
  424a4b:	(bad)  
  424a4c:	jae    0x424a82
  424a4e:	div    DWORD PTR [eax]
  424a50:	mov    WORD PTR [edx-0x794b0350],gs
  424a56:	xchg   DWORD PTR [edx+0x2a],ecx
  424a59:	(bad)  
  424a5b:	pop    es
	...
  424a70:	jmp    0xe94d229
  424a75:	fld    TBYTE PTR [ebp+ecx*8-0x407c8d9e]
  424a7c:	mov    cs,WORD PTR [esi-0x79587550]
  424a82:	scas   eax,DWORD PTR es:[edi]
  424a83:	imul   ebx,DWORD PTR [edi+0x1d],0xd992f3c4
  424a8a:	loop   0x424aa1
  424a8c:	out    0xe6,eax
  424a8e:	jns    0x424a81
  424a90:	popf   
  424a91:	fldcw  WORD PTR [ebx+eax*2+0x51]
  424a95:	out    0x66,al
  424a97:	fmulp  st(1),st
  424a99:	(bad)  
  424a9a:	cmp    al,0xd
  424a9c:	mov    ebx,0x7c85cdba
  424aa2:	fdivr  QWORD PTR [ebx+0x53]
  424aa5:	sbb    edx,ebp
  424aa7:	xchg   ebx,eax
  424aa8:	lods   al,BYTE PTR ds:[esi]
  424aa9:	outs   dx,DWORD PTR ds:[esi]
  424aaa:	out    0x11,eax
  424aac:	mov    ds:0xa24b3f1b,al
  424ab1:	sub    esp,0x23
  424ab4:	pop    es
  424ab5:	adc    eax,0xc11102ea
  424aba:	sbb    ebx,DWORD PTR [esi+0x425ebd9]
  424ac0:	adc    al,0x7c
  424ac2:	fsub   QWORD PTR [ebx+0x53]
  424ac5:	sbb    edx,ebp
  424ac7:	push   ebp
  424ac8:	pusha  
  424ac9:	mov    ecx,0xd965c7d2
  424ace:	aam    0xf9
  424ad0:	inc    ebp
  424ad1:	fucomi st,st(1)
  424ad3:	add    eax,DWORD PTR [eax]
	...
  424ae5:	add    BYTE PTR [eax],al
  424ae7:	add    BYTE PTR [edx+0x55],ah
  424aea:	sub    edi,edx
  424aec:	pop    esp
  424aed:	pop    ecx
  424aee:	hlt    
  424aef:	and    esi,DWORD PTR [edi+0x2702ea15]
  424af5:	(bad)  
  424af6:	or     eax,0xf5d9a1ed
  424afb:	fwait
  424afc:	ins    DWORD PTR es:[edi],dx
  424afd:	fnstcw WORD PTR [ebx-0x862afa4]
  424b03:	ret    
  424b04:	sbb    eax,0x52b5271e
  424b09:	cmp    DWORD PTR [edi-0x15],0xffffffb7
  424b0d:	icebp  
  424b0e:	jmp    0x711beccc
  424b13:	push   ss
  424b14:	(bad)  
  424b15:	and    DWORD PTR [ecx],eax
  424b17:	lods   eax,DWORD PTR ds:[esi]
  424b18:	popa   
  424b19:	jle    0x424b30
  424b1b:	xchg   ecx,eax
  424b1c:	idiv   DWORD PTR [ebx-0x2f5d9600]
  424b22:	sti    
  424b23:	hlt    
  424b24:	jne    0x424af2
  424b26:	inc    eax
  424b27:	jmp    0x25994728
  424b2c:	data16 icebp 
  424b2e:	push   0xfa7ba223
  424b33:	aam    0xb5
  424b35:	jmp    0xc729347a
  424b3a:	and    al,0x4a
  424b3c:	mov    ds:0xaddc887b,al
  424b41:	clc    
  424b42:	inc    esp
  424b43:	jmp    0xa731236
  424b48:	mov    ds:0xd4887b,al
	...
  424b5d:	add    BYTE PTR [eax],al
  424b5f:	add    BYTE PTR [ecx],bh
  424b61:	cli    
  424b62:	inc    esp
  424b63:	jmp    0xa6f123e
  424b68:	mov    ds:0x85bc887b,al
  424b6d:	clc    
  424b6e:	inc    esp
  424b6f:	jmp    0xca5b1252
  424b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b75:	jnp    0x424aff
  424b77:	adc    al,0x86
  424b79:	clc    
  424b7a:	inc    esp
  424b7b:	jmp    0x2a9fc771
  424b80:	mov    esi,0xa946fc27
  424b85:	lock add DWORD PTR [esi],edi
  424b88:	push   ebx
  424b89:	pop    ecx
  424b8a:	push   esi
  424b8b:	lods   eax,DWORD PTR ds:[esi]
  424b8c:	popa   
  424b8d:	jl     0x424ba4
  424b8f:	icebp  
  424b90:	ss mov ebx,0x51f32a00
  424b96:	in     al,dx
  424b97:	push   0xe902128a
  424b9c:	popa   
  424b9d:	push   eax
  424b9e:	mov    esi,0x8d6bdcb7
  424ba3:	add    BYTE PTR [esi-0x30002a3],ah
  424ba9:	dec    ebx
  424baa:	ret    
  424bab:	call   0x3ced58
  424bb0:	mov    ds,WORD PTR [eax-0x4d]
  424bb3:	(bad)  
  424bb4:	cld    
  424bb5:	pop    ds
  424bb6:	dec    esp
  424bb7:	push   esi
  424bb8:	mov    esp,0x8b124b89
  424bbd:	aad    0x5a
  424bbf:	leave  
  424bc0:	clc    
  424bc1:	push   ebx
  424bc2:	out    0xc,eax
	...
  424bd8:	push   0x335548
  424bdd:	dec    esp
  424bde:	ror    DWORD PTR [ebx+0x57e7e3fa],0x42
  424be5:	cmp    bl,BYTE PTR [edi]
  424be7:	sbb    BYTE PTR [edx],dh
  424be9:	mov    bl,BYTE PTR [edi]
  424beb:	adc    al,0x82
  424bed:	inc    edx
  424bee:	pop    ds
  424bef:	and    BYTE PTR [eax+edx*2+0x4b],bh
  424bf3:	add    DWORD PTR [ebx-0x2a],edi
  424bf6:	mov    DWORD PTR [ebx+esi*1],eax
  424bf9:	push   ebx
  424bfa:	aaa    
  424bfb:	lds    ecx,FWORD PTR [ebx-0x74ffc0c4]
  424c01:	push   ecx
  424c02:	pop    es
  424c03:	lds    edi,FWORD PTR [ebx+0x3c]
  424c06:	aas    
  424c07:	add    dl,dh
  424c09:	xchg   ecx,eax
  424c0a:	pop    ds
  424c0b:	adc    BYTE PTR [ecx+ebx*2+0x1c],cl
  424c0f:	add    DWORD PTR [ebx-0x2a],ecx
  424c12:	cmp    eax,0x2685cf2f
  424c18:	cmp    dl,dh
  424c1a:	add    bh,bh
  424c1c:	addr16 pop eax
  424c1e:	push   ds
  424c1f:	fimul  WORD PTR [edx]
  424c21:	(bad)  
  424c22:	fwait
  424c23:	mov    ecx,ss
  424c25:	cmp    ebx,edi
  424c27:	xor    ch,BYTE PTR [ecx+0x4b]
  424c2a:	inc    ebx
  424c2b:	sbb    al,0x73
  424c2d:	sahf   
  424c2e:	cld    
  424c2f:	jmp    DWORD PTR [edx-0x1d]
  424c32:	mov    ch,bh
  424c34:	out    0xe1,eax
  424c36:	push   es
  424c37:	test   BYTE PTR [ecx+esi*2-0x1],bl
  424c3b:	inc    DWORD PTR [eax]
	...
  424c4d:	add    BYTE PTR [eax],al
  424c4f:	add    bl,al
  424c51:	jmp    0x424c10
  424c53:	inc    ebx
  424c54:	bound  edx,QWORD PTR [esi+0x5]
  424c57:	mov    DWORD PTR [edx+0x49bcbd8c],ebx
  424c5d:	and    al,0xc6
  424c5f:	inc    ebp
  424c61:	sbb    BYTE PTR [edx-0x4],bl
  424c64:	aad    0x4e
  424c66:	pop    eax
  424c67:	push   esi
  424c68:	es jo  0x424cd1
  424c6b:	mov    dh,0x62
  424c6d:	jo     0x424c6e
  424c6f:	sahf   
  424c70:	out    dx,al
  424c71:	mov    ch,0xc0
  424c73:	push   DWORD PTR [eax+0x5e]
  424c76:	lea    eax,[edi+0x4e]
  424c79:	scas   al,BYTE PTR es:[edi]
  424c7a:	ins    BYTE PTR es:[edi],dx
  424c7b:	cmp    al,0xa5
  424c7d:	xor    bl,BYTE PTR [ecx-0x78]
  424c80:	xchg   edx,eax
  424c81:	hlt    
  424c82:	dec    esi
  424c83:	or     al,0xde
  424c85:	xor    al,0x4
  424c87:	add    BYTE PTR [edx+0xb],ah
  424c8a:	sbb    ebp,DWORD PTR [ecx+0x21]
  424c8d:	jo     0x424cf5
  424c8f:	xchg   edx,eax
  424c90:	bound  esi,QWORD PTR [eax-0x1]
  424c93:	mov    BYTE PTR [edi],ch
  424c95:	and    bh,ch
  424c97:	aas    
  424c98:	bound  ebp,QWORD PTR [ebx+0x70216a32]
  424c9e:	data16 and BYTE PTR [edx-0x7e],0xff
  424ca3:	mov    BYTE PTR [edi+0x623ff622],cl
  424ca9:	addr16 push ebx
  424cab:	cmc    
  424cac:	mov    ds:0xe9776c82,al
  424cb1:	ins    DWORD PTR es:[edi],dx
  424cb2:	pop    ebx
  424cb3:	adc    BYTE PTR [eax],al
	...
  424cc5:	add    BYTE PTR [eax],al
  424cc7:	add    BYTE PTR [edx+0x352f9882],ah
  424ccd:	inc    ebx
  424cce:	(bad)  
  424ccf:	call   0xffd2268d
  424cd4:	mov    ebx,0xe6c2b64
  424cd9:	js     0x424ced
  424cdb:	pop    ecx
  424cdc:	fisubr DWORD PTR [ecx+0x64]
  424cdf:	push   edx
  424ce0:	push   esi
  424ce1:	pop    ebp
  424ce2:	ins    BYTE PTR es:[edi],dx
  424ce3:	add    al,0x62
  424ce5:	fnstcw WORD PTR [edx]
  424ce7:	and    DWORD PTR [edx-0x629315e6],esp
  424ced:	add    esp,edi
  424cef:	ins    BYTE PTR es:[edi],dx
  424cf0:	add    ah,BYTE PTR [ebp+0x1c]
  424cf3:	lock ja 0x424d0f
  424cf6:	jmp    0xbb04:0x282f1898
  424cfd:	mov    eax,0xcf6a0e5e
  424d02:	sub    DWORD PTR [edi+edi*8],eax
  424d05:	dec    esi
  424d06:	jae    0x424cca
  424d08:	mov    ch,0x83
  424d0a:	test   DWORD PTR [eax+esi*2-0x5a3c2b7b],0x5c91b137
  424d15:	(bad)  [esi-0x465114e2]
  424d1b:	out    dx,al
  424d1c:	dec    ebp
  424d1d:	(bad)  [edx+0x59]
  424d20:	rcr    BYTE PTR [edx],1
  424d22:	jmp    0x506b:0xb464556c
  424d29:	sbb    edx,ebp
  424d2b:	cwde   
	...
  424d40:	cmp    al,0x2f
  424d42:	sub    BYTE PTR [ebx+edi*2],al
  424d45:	in     al,0x6e
  424d47:	push   cs
  424d48:	pop    esi
  424d49:	into   
  424d4a:	test   eax,0x9ac51703
  424d4f:	ret    0x634d
  424d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d53:	pop    ds
  424d54:	jb     0x424db2
  424d56:	push   ebp
  424d57:	pop    es
  424d58:	jmp    0x424ce9
  424d5a:	outs   dx,BYTE PTR ds:[esi]
  424d5b:	dec    ebx
  424d5c:	fsubr  QWORD PTR [eax-0x23f6a000]
  424d62:	call   0xfbb97164
  424d67:	ins    BYTE PTR es:[edi],dx
  424d68:	mov    eax,ds:0x257215eb
  424d6d:	mov    esp,0xb0ccaa14
  424d72:	ins    BYTE PTR es:[edi],dx
  424d73:	lds    eax,FWORD PTR [ecx-0xc]
  424d76:	or     dh,BYTE PTR [edx-0x43]
  424d79:	mov    ebx,0x75e41018
  424d7e:	sti    
  424d7f:	mul    cl
  424d81:	lahf   
  424d82:	sti    
  424d83:	add    bl,BYTE PTR [edi+0x62]
  424d86:	mov    edi,0x58131446
  424d8b:	push   0x22
  424d8d:	in     al,0xbe
  424d8f:	in     eax,dx
  424d90:	popa   
  424d91:	fs dec ecx
  424d93:	jmp    0xe983e1cb
  424d98:	mov    edx,DWORD PTR [ecx+eax*2+0x41929fe9]
  424d9f:	jmp    0xe983e09b
	...
  424db8:	mov    eax,0xb9e94192
  424dbd:	xchg   edx,eax
  424dbe:	inc    ecx
  424dbf:	jmp    0xe983e0d4
  424dc4:	cld    
  424dc5:	xchg   edx,eax
  424dc6:	inc    ecx
  424dc7:	jmp    0xe983e0b1
  424dcc:	(bad)  
  424dcd:	xchg   edx,eax
  424dce:	inc    ecx
  424dcf:	jmp    0xe983e0a3
  424dd4:	sbb    BYTE PTR [ebx-0x6cd616bf],dl
  424dda:	inc    ecx
  424ddb:	jmp    0x5ca2ccef
  424de0:	lods   eax,DWORD PTR ds:[esi]
  424de1:	jne    0x424d9d
  424de3:	ror    DWORD PTR [ebx],0x1b
  424de6:	add    DWORD PTR [edi+0xe0cbac],esi
  424dec:	sbb    DWORD PTR [ebx-0x642f1805],ebx
  424df2:	cli    
  424df3:	(bad)  
  424df4:	mov    esi,0xcd0b701d
  424df9:	(bad)  
  424dfa:	paddusb mm3,QWORD PTR [ecx]
  424dfd:	fwait
  424dfe:	sti    
  424dff:	xor    DWORD PTR [ebx+0x2f],ecx
  424e02:	shl    BYTE PTR [eax-0x173fd306],0x2
  424e09:	pushf  
  424e0a:	cli    
  424e0b:	call   ebx
  424e0d:	sbb    BYTE PTR [ecx+0x44],0xb
  424e11:	adc    BYTE PTR [edi],cl
  424e13:	fmul   QWORD PTR [ecx]
  424e15:	fwait
  424e16:	sti    
  424e17:	ret    0x2cd
  424e1a:	xchg   esp,eax
  424e1b:	inc    ebx
	...
  424e30:	retf   0x89da
  424e33:	lock xor eax,DWORD PTR [ebp+0xfbb4459]
  424e3a:	paddusb mm1,mm1
  424e3d:	call   0xff5:0x5a0b32fb
  424e44:	bndldx bnd3,[esi-0x3d]
  424e48:	dec    eax
  424e49:	arpl   WORD PTR [edi+0x24],dx
  424e4c:	xchg   DWORD PTR [eax+ecx*4-0xe],eax
  424e50:	btr    DWORD PTR [edi+0xd],ebp
  424e54:	repz repnz cld 
  424e57:	push   esp
  424e59:	idiv   BYTE PTR [ebx-0x3f37808b]
  424e5f:	jmp    0x424e01
  424e61:	pshufw mm4,QWORD PTR [edi+eax*4],0x63
  424e66:	aad    0x33
  424e68:	ret    0xcd02
  424e6b:	std    
  424e6c:	hlt    
  424e6d:	push   cs
  424e6e:	mov    eax,esi
  424e70:	into   
  424e71:	and    al,0x7d
  424e73:	adc    bh,BYTE PTR [edi+0x62056fb3]
  424e79:	sbb    BYTE PTR [esi-0x4],dh
  424e7c:	inc    ebp
  424e7d:	daa    
  424e7e:	xadd   bh,ah
  424e81:	mov    ch,0x2
  424e83:	xchg   esp,eax
  424e84:	and    cl,BYTE PTR [ebx]
  424e86:	out    dx,al
  424e87:	or     DWORD PTR [ecx],0x34
  424e8a:	out    dx,eax
  424e8b:	out    0xc7,eax
  424e8d:	(bad)  
  424e8e:	push   edx
  424e8f:	cld    
  424e90:	out    0xbf,al
  424e92:	rol    BYTE PTR [eax+eax*1],1
	...
  424ea5:	add    BYTE PTR [eax],al
  424ea7:	add    BYTE PTR [edx],cl
  424ea9:	add    edx,DWORD PTR [ebx-0x4]
  424eac:	or     eax,0x63af3edb
  424eb1:	inc    esi
  424eb2:	mov    dh,0xc1
  424eb4:	push   0xffffff80
  424eb6:	scas   al,BYTE PTR es:[edi]
  424eb7:	push   ebp
  424eb8:	cmc    
  424eb9:	mov    ebx,es
  424ebb:	adc    DWORD PTR [edx-0x5107980],esp
  424ec1:	data16 test al,0xff
  424ec4:	fld    QWORD PTR [ebx]
  424ec6:	inc    ebp
  424ec7:	jae    0x424e52
  424ec9:	jmp    0x424ece
  424ecb:	sub    BYTE PTR [eax],0xc4
  424ece:	add    al,0x81
  424ed0:	retf   
  424ed1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ed2:	rcr    BYTE PTR [edi],1
  424ed4:	adc    ebx,DWORD PTR [edi-0x3faccc15]
  424eda:	add    al,0x83
  424edc:	mov    ds:0x6369ebb4,al
  424ee1:	inc    edi
  424ee2:	or     eax,DWORD PTR [eax-0x2fb3bc8]
  424ee8:	outs   dx,DWORD PTR ds:[esi]
  424ee9:	js     0x424ed9
  424eeb:	aas    
  424eec:	bound  eax,QWORD PTR ds:0x42ef0c45
  424ef2:	imul   eax,DWORD PTR [ecx],0xfcaa3b30
  424ef8:	dec    edi
  424ef9:	pushf  
  424efa:	icebp  
  424efb:	aas    
  424efc:	(bad)  
  424efd:	cli    
  424efe:	inc    ecx
  424eff:	pop    ebp
  424f00:	or     DWORD PTR [ebx-0x56],eax
  424f03:	cld    
  424f04:	ja     0x424edf
  424f06:	mov    ch,0xf1
  424f08:	xchg   ebp,eax
  424f09:	fldcw  WORD PTR [esi+0x54]
	...
  424f20:	mov    ebx,0xe20f52d9
  424f25:	montmul (bad)
  424f26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f27:	add    edi,DWORD PTR [edi]
  424f29:	iret   
  424f2a:	add    ebx,esi
  424f2c:	jne    0x424f07
  424f2e:	xchg   ebx,eax
  424f2f:	push   esp
  424f30:	push   eax
  424f31:	mov    ebp,0x1725c3d7
  424f36:	daa    
  424f37:	scas   al,BYTE PTR es:[edi]
  424f38:	jmp    0xf474:0xaf548f6a
  424f3f:	jg     0x424fb4
  424f41:	sbb    edx,ebp
  424f43:	jle    0x424f0a
  424f45:	in     eax,dx
  424f46:	not    DWORD PTR [esi]
  424f48:	loop   0x424f23
  424f4a:	jmp    0x9422bd52
  424f4f:	push   esp
  424f50:	push   eax
  424f51:	cmp    eax,0xa7e5c3d7
  424f56:	sub    DWORD PTR [esi-0x4a549f5e],esi
  424f5c:	mov    ds:0x32f7cd58,al
  424f61:	push   cs
  424f62:	cmp    al,0x89
  424f64:	stos   DWORD PTR es:[edi],eax
  424f65:	test   al,0xbc
  424f67:	jmp    0x424f27
  424f69:	aad    0xe9
  424f6b:	add    ecx,DWORD PTR [eax+0x74]
  424f6e:	adc    al,0xb1
  424f70:	cmp    ebx,edx
  424f72:	mov    dl,0xee
  424f74:	jge    0x424f43
  424f76:	sub    DWORD PTR [ebx+ebp*8],eax
  424f79:	imul   esp,DWORD PTR [esi+0x55],0x88d1e894
  424f80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f81:	adc    esi,DWORD PTR ds:0xb9
	...
  424f97:	add    dl,ah
  424f99:	popf   
  424f9a:	in     eax,dx
  424f9b:	inc    ecx
  424f9c:	fldenv gs:[esi-0x29]
  424fa0:	inc    ecx
  424fa1:	leave  
  424fa2:	xlat   BYTE PTR ds:[ebx]
  424fa3:	iret   
  424fa4:	jg     0x42500c
  424fa6:	add    BYTE PTR ds:0x6e50e542,ch
  424fac:	dec    esp
  424fad:	mov    WORD PTR [ecx+ebp*4],ss
  424fb0:	popa   
  424fb1:	pusha  
  424fb2:	inc    esp
  424fb3:	add    eax,0xfcfc095a
  424fb8:	jge    0x424f87
  424fba:	inc    eax
  424fbb:	jmp    0x9c96c30b
  424fc0:	add    al,0x5f
  424fc2:	inc    esp
  424fc3:	add    eax,0xdcfc242a
  424fc8:	jns    0x424f92
  424fca:	inc    eax
  424fcb:	jmp    0x36b7846c
  424fd0:	mov    al,BYTE PTR [edx+0x52]
  424fd3:	jb     0x424f85
  424fd5:	push   cs
  424fd6:	cld    
  424fd7:	cld    
  424fd8:	or     ecx,ecx
  424fda:	inc    eax
  424fdb:	jmp    0x4d57c4af
  424fe0:	repz mov bl,0x0
  424fe3:	lahf   
  424fe4:	mov    ds:0xf9e96723,al
  424fe9:	jae    0x424fe6
  424feb:	fldenv [ecx+0x76]
  424fee:	adc    eax,0xb3cf2d
  424ff3:	fs es call 0xc7738900
  424ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ffb:	sti    
	...
  425010:	mov    eax,ds:0x1ce8ab73
  425015:	stos   BYTE PTR es:[edi],al
  425016:	shr    BYTE PTR [edx-0x50e9f18],0x66
  42501d:	test   eax,0xfb4243c0
  425022:	mov    DWORD PTR [edi],ebp
  425024:	call   0xc423:0x88278e22
  42502b:	das    
  42502c:	pop    edx
  42502d:	je     0x42502a
  42502f:	jmp    0x44ee95
  425034:	fcomi  st,st(2)
  425036:	cmp    eax,DWORD PTR [eax]
  425038:	repnz xchg esi,eax
  42503a:	add    ecx,DWORD PTR [ecx+0x4e83d93d]
  425040:	cmp    ecx,DWORD PTR [eax]
  425042:	addps  xmm2,XMMWORD PTR [ebp-0x69]
  425046:	sti    
  425047:	add    BYTE PTR [edi+0xdc689d9],0x1c
  42504e:	push   esi
  42504f:	mov    ebx,DWORD PTR [edx+0x4b001015]
  425055:	xlat   BYTE PTR ds:[ebx]
  425056:	repnz inc esp
  425058:	addr16 jne 0x425055
  42505b:	jae    0x425091
  42505d:	hlt    
  42505e:	int    0xe8
  425060:	dec    ebp
  425061:	xor    ebx,edi
  425063:	call   DWORD PTR [eax+0x7c25e1f]
  425069:	xlat   BYTE PTR ds:[ebx]
  42506a:	push   edx
  42506b:	mov    ebp,DWORD PTR [edx+0x5a]
  42506e:	jge    0x425078
  425070:	or     esp,DWORD PTR [eax]
  425072:	push   es
  425073:	rol    BYTE PTR [eax],1
	...
  425085:	add    BYTE PTR [eax],al
  425087:	add    BYTE PTR [ecx-0x63],dh
  42508a:	sti    
  42508b:	jae    0x42507f
  42508d:	pop    es
  42508e:	jbe    0x425098
  425090:	in     al,dx
  425091:	jno    0x425032
  425093:	adc    cl,BYTE PTR [ebx]
  425095:	xlat   BYTE PTR ds:[ebx]
  425096:	mov    DWORD PTR [esi-0x25],ecx
  425099:	push   cs
  42509a:	aam    0x54
  42509c:	mov    ebx,0xc306c5d6
  4250a1:	cmc    
  4250a2:	cmp    eax,DWORD PTR [eax]
  4250a4:	lea    ebx,[edx]
  4250a6:	push   ecx
  4250a7:	push   esi
  4250a8:	xor    BYTE PTR ds:0x2762db31,cl
  4250ae:	add    esi,DWORD PTR [ebp-0x77]
  4250b1:	sub    edx,DWORD PTR [eax+0x6a]
  4250b4:	mov    ch,BYTE PTR [ebx]
  4250b6:	cld    
  4250b7:	adc    eax,0x3b6cf3
  4250bc:	adc    ah,BYTE PTR [eax+0x40628503]
  4250c2:	rol    DWORD PTR [eax],cl
  4250c4:	xor    DWORD PTR [edi],esp
  4250c6:	ret    0xe85d
  4250c9:	aas    
  4250ca:	stos   BYTE PTR es:[edi],al
  4250cb:	shl    cl,0xd9
  4250ce:	cld    
  4250cf:	push   ecx
  4250d1:	(bad)  
  4250d2:	jp     0x425117
  4250d4:	xchg   BYTE PTR [esi+ecx*2+0x6e],bh
  4250d8:	push   0xffffffe9
  4250da:	les    ecx,FWORD PTR [ebx]
  4250dc:	dec    ebp
  4250dd:	ins    DWORD PTR es:[edi],dx
  4250de:	xor    edx,DWORD PTR [ecx]
  4250e0:	mov    ds:0x62034580,al
  4250e5:	das    
  4250e6:	adc    bl,cl
  4250e8:	jnp    0x425123
  4250ea:	div    DWORD PTR [ebx+0x0]
	...
  4250fd:	add    BYTE PTR [eax],al
  4250ff:	add    BYTE PTR [ebp+0x4f],bl
  425102:	dec    esi
  425103:	outs   dx,BYTE PTR ds:[esi]
  425104:	pop    edx
  425105:	stos   DWORD PTR es:[edi],eax
  425106:	clc    
  425107:	xor    DWORD PTR [eax+0x40],0xffffffff
  42510b:	and    BYTE PTR [edx],0x55
  42510e:	add    al,0x41
  425110:	fdivr  DWORD PTR [esi+0x1355c0aa]
  425116:	lds    edx,FWORD PTR [ebx]
  425118:	loope  0x4250e1
  42511a:	sbb    esi,DWORD PTR [ebp+0x61]
  42511d:	das    
  42511e:	aas    
  42511f:	rcr    BYTE PTR [ebp-0x56],0xbc
  425123:	pop    ss
  425124:	loope  0x4250e5
  425126:	xor    ebp,DWORD PTR [eax]
  425128:	mov    ds:0xc688b8be,eax
  42512d:	(bad)  
  42512e:	pusha  
  42512f:	sbb    esi,DWORD PTR [edi+eiz*8]
  425132:	dec    edi
  425133:	imul   esp,DWORD PTR [ebx-0x3],0x1fcae3bb
  42513a:	pop    eax
  42513b:	push   DWORD PTR [ebp+0x624a4787]
  425141:	xor    BYTE PTR [esi+0x42],0xa6
  425145:	cld    
  425146:	ret    
  425147:	out    dx,eax
  425148:	xor    al,BYTE PTR [ebx-0xd]
  42514b:	inc    edi
  42514c:	jae    0x425127
  42514e:	sub    DWORD PTR [ecx+eiz*8],eax
  425151:	cwde   
  425152:	adc    al,0x0
  425154:	gs sbb al,0x9e
  425157:	push   ecx
  425158:	push   eax
  425159:	xchg   ecx,eax
  42515a:	test   ebx,0x542c6075
  425160:	sti    
  425161:	int3   
  425162:	xchg   ecx,eax
  425163:	rol    BYTE PTR [eax],cl
	...
  425175:	add    BYTE PTR [eax],al
  425177:	add    BYTE PTR [eax],ah
  425179:	jb     0x4251ed
  42517b:	jg     0x425125
  42517d:	jne    0x425198
  42517f:	pop    esp
  425180:	sbb    DWORD PTR [ebx-0x6619fc17],eax
  425186:	aad    0x15
  425188:	mov    eax,0x4dc764e1
  42518d:	or     bl,BYTE PTR [ebp-0x41]
  425190:	inc    ecx
  425191:	or     BYTE PTR [edi+0x65712d5b],0x44
  425198:	mov    cl,0xb9
  42519a:	mov    edi,0x2e16e907
  42519f:	mov    ah,0xe8
  4251a1:	push   ds
  4251a2:	push   cs
  4251a3:	pop    esp
  4251a4:	cmc    
  4251a5:	sub    cl,0x3
  4251a8:	ficomp WORD PTR [ecx+0x7ad019d]
  4251ae:	pop    ebp
  4251af:	mov    edi,0x5dca8201
  4251b4:	in     eax,dx
  4251b5:	jo     0x42521c
  4251b7:	inc    esp
  4251b8:	jo     0x425189
  4251ba:	jg     0x4251b3
  4251bc:	dec    ebx
  4251bd:	fst    DWORD PTR [ebx-0x3ee8fb0]
  4251c3:	ret    
  4251c4:	int    0x2
  4251c6:	bnd jle 0x4251e9
  4251c9:	imul   edi,DWORD PTR [ecx],0x39dd277f
  4251cf:	push   ecx
  4251d0:	push   eax
  4251d1:	or     esp,ebx
  4251d3:	ret    
  4251d4:	lods   eax,DWORD PTR ds:[esi]
  4251d5:	pop    ebx
  4251d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251d7:	jmp    0x4251b1
  4251d9:	push   ds
  4251da:	add    ebp,ecx
	...
  4251f0:	cmp    DWORD PTR [esi+0xf61e9e9],esp
  4251f6:	retf   0xd6aa
  4251f9:	push   es
  4251fa:	push   esp
  4251fb:	jae    0x425234
  4251fd:	popa   
  4251fe:	icebp  
  4251ff:	add    DWORD PTR [eax+0x62e90123],0xd260c027
  425209:	ins    DWORD PTR es:[edi],dx
  42520a:	add    cl,ch
  42520c:	popa   
  42520d:	data16 sti 
  42520f:	ja     0x4251b8
  425211:	pop    eax
  425212:	adc    al,BYTE PTR [ecx-0x16fedcec]
  425218:	bound  esp,QWORD PTR [edi]
  42521a:	rol    BYTE PTR [eax-0x52799256],0x85
  425221:	leave  
  425222:	xchg   DWORD PTR [esi+ebp*8],ecx
  425225:	lds    eax,FWORD PTR [eax-0x17]
  425228:	test   eax,0x1b70ff0e
  42522d:	fsqrt  
  42522f:	sub    esp,esi
  425231:	repz and al,0xd5
  425234:	popa   
  425235:	popa   
  425236:	push   edx
  425237:	call   0xf5a93171
  42523c:	mov    dl,0xec
  42523e:	and    al,0xf1
  425240:	jl     0x425258
  425242:	add    eax,0x7f8592b9
  425247:	sub    eax,0x6c0880ed
  42524c:	and    ebx,esp
  42524e:	call   0xfbaf853b
  425253:	add    DWORD PTR [eax],0x0
	...
  425266:	add    BYTE PTR [eax],al
  425268:	int    0x77
  42526a:	mov    ah,0x2d
  42526c:	sbb    eax,0x9c6c506d
  425271:	(bad)  
  425272:	push   eax
  425273:	(bad)  
  425274:	jne    0x4252cf
  425276:	(bad)  
  425277:	fld    QWORD PTR [esi+ecx*1]
  42527a:	pop    eax
  42527b:	add    cl,bh
  42527d:	ins    BYTE PTR es:[edi],dx
  42527e:	sti    
  42527f:	adc    BYTE PTR [edi+0x778b51b8],0xc1
  425286:	xor    al,0x89
  425288:	ja     0x42524b
  42528a:	add    al,0x83
  42528c:	shr    BYTE PTR [ecx+esi*2+0xd],0x10
  425291:	mov    ah,0xe3
  425293:	push   ds
  425294:	jnp    0x4252b4
  425296:	std    
  425297:	mov    edx,DWORD PTR [edi-0x3f]
  42529a:	add    al,0xeb
  42529c:	jns    0x425268
  42529e:	ror    BYTE PTR [ecx-0x7aeb3ec1],0xb
  4252a5:	popf   
  4252a6:	add    al,0x32
  4252a8:	or     ecx,DWORD PTR ds:0xdb3b0173
  4252ae:	and    DWORD PTR [edi+ebx*2-0x27],0xb72f8300
  4252b6:	sbb    BYTE PTR [eax],al
  4252b8:	out    dx,al
  4252b9:	repz bound ecx,QWORD PTR [eax]
  4252bc:	int    0x27
  4252be:	mov    BYTE PTR [ecx+0x3f],bh
  4252c1:	fsub   st(5),st
  4252c3:	sub    DWORD PTR [edi],0xffffffb7
  4252c6:	sbb    al,0x0
  4252c8:	cmp    eax,0x401fa1
	...
  4252dd:	add    BYTE PTR [eax],al
  4252df:	add    bl,bh
  4252e1:	or     eax,0xdafb0144
  4252e6:	mov    edi,edx
  4252e8:	sbb    BYTE PTR ds:0x671f741b,al
  4252ee:	adc    BYTE PTR [edi+ebx*1-0x2d],0xe9
  4252f3:	push   0xd3cd671
  4252f8:	pop    edi
  4252f9:	mov    ?,WORD PTR [edi]
  4252fb:	or     cl,BYTE PTR [edi+0x76]
  4252fe:	xor    dh,BYTE PTR [edi+ebx*2+0x7d]
  425302:	outs   dx,BYTE PTR ds:[esi]
  425303:	lods   eax,DWORD PTR ss:[esi]
  425305:	aad    0xfb
  425307:	je     0x42536b
  425309:	rcl    DWORD PTR [eax],1
  42530b:	and    BYTE PTR [edi],ch
  42530d:	into   
  42530e:	add    DWORD PTR [eax-0x53],0x2d024803
  425315:	mov    dh,0x77
  425317:	inc    ebx
  425318:	inc    esi
  425319:	test   BYTE PTR [esi-0x9],bh
  42531c:	pusha  
  42531d:	mov    bl,0x11
  42531f:	xchg   DWORD PTR [esi],ecx
  425321:	cld    
  425322:	adc    ebp,ecx
  425324:	pop    esp
  425325:	add    BYTE PTR [ebx],cl
  425327:	and    bh,dh
  425329:	jl     0x4252ed
  42532b:	cmp    BYTE PTR [edi-0x2e],dh
  42532e:	push   edx
  42532f:	xchg   dh,ch
  425331:	sti    
  425332:	sbb    eax,DWORD PTR [eax-0x25]
  425335:	mov    ah,0x28
  425337:	sbb    al,0xad
  425339:	pop    ebx
  42533a:	and    al,0x89
  42533c:	scas   al,BYTE PTR es:[edi]
  42533d:	xchg   esp,eax
  42533e:	pop    ss
  42533f:	aaa    
  425340:	(bad)  
  425341:	fdiv   st(0),st
  425343:	jb     0x425345
	...
  425355:	add    BYTE PTR [eax],al
  425357:	add    BYTE PTR [ebp-0x15],ch
  42535a:	mov    ebx,0x6c45623
  42535f:	mov    DWORD PTR [ebx],esp
  425361:	stc    
  425362:	mov    ebx,0xbbeb5623
  425367:	and    edx,DWORD PTR [edx+0x7f]
  42536a:	ret    
  42536b:	(bad)  
  42536c:	jmp    0x4253a9
  42536e:	and    edx,DWORD PTR [ebx*4-0x98eaf95]
  425375:	retf   0x88e7
  425378:	or     eax,0xf588f3cb
  42537d:	ds push es
  42537f:	sti    
  425380:	add    ecx,DWORD PTR gs:[ecx-0x1]
  425384:	in     eax,dx
  425385:	jg     0x425406
  425387:	cmp    al,0x58
  425389:	jg     0x425313
  42538b:	mov    ebx,0x38ff8062
  425390:	xlat   BYTE PTR ds:[ebx]
  425391:	mov    es,WORD PTR [ebx-0x16269d4d]
  425397:	add    ebx,ebx
  425399:	xchg   esi,eax
  42539a:	and    bl,BYTE PTR [ecx]
  42539c:	mov    al,ds:0xba8104e3
  4253a1:	aad    0xda
  4253a3:	xchg   ebp,edi
  4253a5:	fsubr  st,st(1)
  4253a7:	add    ebp,DWORD PTR [ebp+0x15]
  4253aa:	push   es
  4253ab:	in     al,dx
  4253ac:	outs   dx,BYTE PTR ds:[esi]
  4253ad:	push   esp
  4253ae:	dec    edi
  4253af:	add    al,0x62
  4253b1:	fnstenv [ebx+0x6cde8d03]
  4253b7:	jae    0x42533e
  4253b9:	ins    DWORD PTR es:[edi],dx
  4253ba:	jmp    0x4253ca
	...
  4253cf:	add    BYTE PTR [esi],ah
  4253d1:	mov    ch,0x29
  4253d3:	std    
  4253d4:	loopne 0x42542b
  4253d6:	jmp    0x2dd9b5de
  4253db:	sub    BYTE PTR [edx],ah
  4253dd:	fmul   DWORD PTR [esi-0x32121d34]
  4253e3:	jmp    0x42543a
  4253e5:	out    0xb6,al
  4253e7:	push   ebp
  4253e8:	dec    esp
  4253e9:	fcmovu st,st(4)
  4253eb:	sbb    eax,0xd0e270e3
  4253f0:	ret    0x2760
  4253f3:	sbb    DWORD PTR [ebp-0x2b],esi
  4253f6:	pop    esi
  4253f7:	rol    BYTE PTR [ecx-0x23b5f0e3],0x1a
  4253fe:	bnd jp 0x425395
  425401:	(bad)  [ecx+ebp*1+0x66]
  425405:	push   esi
  425406:	fs add al,0x62
  425409:	fxch   st(6)
  42540b:	push   ecx
  42540c:	(bad)  
  42540e:	(bad)  
  42540f:	inc    ebx
  425410:	in     al,0xea
  425412:	in     eax,dx
  425413:	xchg   bh,ch
  425415:	sbb    BYTE PTR [esi],0x4
  425418:	(bad)  
  425419:	fldenv [esi+0x49]
  42541c:	pop    ebp
  42541d:	out    0xb4,eax
  42541f:	js     0x425442
  425421:	mov    ch,0x0
  425423:	fstp   st(4)
  425425:	sub    al,0x74
  425427:	mov    esp,0x2d37976a
  42542c:	jp     0x4253e7
  42542e:	jne    0x425434
  425430:	mul    BYTE PTR [ecx-0x39]
  425433:	rol    DWORD PTR [eax],0x0
	...
  425446:	add    BYTE PTR [eax],al
  425448:	mov    dh,0xb5
  42544a:	add    cl,ch
  42544c:	in     al,0x2c
  42544e:	jne    0x42542c
  425450:	sub    ah,BYTE PTR [eax]
  425452:	and    eax,0x412b1b05
  425457:	pusha  
  425458:	aad    0xb8
  42545a:	and    al,0xf0
  42545c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42545d:	mov    eax,0x4fddf648
  425462:	add    cl,ch
  425464:	popa   
  425465:	bound  ecx,QWORD PTR [ebp+ecx*8+0x71]
  425469:	ins    DWORD PTR es:[edi],dx
  42546a:	inc    esp
  42546b:	lds    edi,FWORD PTR [ecx-0x4f]
  42546e:	std    
  42546f:	mul    bl
  425471:	cmp    al,0xfa
  425473:	jle    0x425423
  425475:	stos   BYTE PTR es:[edi],al
  425476:	rcl    BYTE PTR [esi],0x4
  425479:	addps  xmm5,XMMWORD PTR [edx-0x5b]
  42547d:	sar    BYTE PTR [esi+0x71c261f9],0xe5
  425484:	mov    edx,0xbaa52508
  425489:	adc    BYTE PTR ds:0xcf9e2f9,ah
  42548f:	jmp    0xb269f23e
  425494:	gs ret 0x60eb
  425498:	xor    edx,esp
  42549a:	mov    ebx,esp
  42549c:	mov    BYTE PTR [edx],al
  42549e:	add    eax,0xfb6c4c10
  4254a3:	jmp    0xf567448a
  4254a8:	arpl   ax,bp
  4254aa:	(bad)  
  4254ab:	mov    ds:0x0,al
	...
  4254c0:	adc    eax,0x670047b0
  4254c5:	mov    edx,0x30d27449
  4254ca:	outs   dx,DWORD PTR ds:[esi]
  4254cb:	xor    eax,DWORD PTR [eax]
  4254cd:	test   BYTE PTR [edx],dl
  4254cf:	dec    ebx
  4254d0:	push   esi
  4254d1:	loopne 0x42545c
  4254d3:	pop    esp
  4254d4:	push   edi
  4254d5:	mov    BYTE PTR gs:[edi+eiz*2-0x3b],al
  4254da:	sub    DWORD PTR [ebx-0x39],eax
  4254dd:	retf   0x2474
  4254e0:	dec    ebx
  4254e1:	out    dx,al
  4254e2:	cli    
  4254e3:	mov    BYTE PTR [edx-0x27],ch
  4254e6:	jmp    0x1f83650d
  4254eb:	adc    BYTE PTR [eax],al
  4254ed:	cdq    
  4254ee:	pop    ds
  4254ef:	sub    al,0x60
  4254f1:	xchg   esp,eax
  4254f2:	dec    DWORD PTR [eax+0x243fea7a]
  4254f8:	or     edx,0x44
  4254fb:	and    al,0x9f
  4254fd:	or     al,BYTE PTR [ecx+ecx*4]
  425500:	jp     0x4254ec
  425502:	aas    
  425503:	and    al,0xa7
  425505:	retf   0x89be
  425508:	mov    bl,cl
  42550a:	xor    eax,eax
  42550c:	adc    dl,BYTE PTR [esi+0x159c0eff]
  425512:	jecxz  0x425589
  425514:	mov    esp,0x1f80fd1e
  425519:	retf   
  42551a:	inc    esp
  42551b:	add    al,al
  42551d:	sub    DWORD PTR [edi],ebx
  42551f:	dec    esp
  425520:	pop    ss
  425521:	sub    BYTE PTR [eax+0x44],cl
	...
  425537:	add    BYTE PTR [edi+0x69],dl
  42553a:	mov    eax,0xd70bff
  42553f:	(bad)  
  425540:	ret    
  425541:	aad    0xe9
  425543:	push   ss
  425544:	adc    esp,0x6fe7203c
  42554a:	aaa    
  42554b:	or     edi,ebx
  42554d:	push   0x37
  42554f:	or     eax,0xcfe4262
  425554:	lods   al,BYTE PTR ds:[esi]
  425555:	ror    BYTE PTR [ebx],0xc1
  425558:	outs   dx,DWORD PTR ds:[esi]
  425559:	jne    0x42551f
  42555b:	cmp    BYTE PTR [esi+ebp*8-0x993179f],ch
  425562:	(bad)  
  425563:	cmp    eax,DWORD PTR [edx+0x5b3bf6e4]
  425569:	hlt    
  42556a:	add    BYTE PTR [edi+ebp*2],bh
  42556d:	or     al,BYTE PTR [eax]
  42556f:	or     eax,0xc10a40f4
  425574:	aaa    
  425575:	jne    0x425530
  425577:	cmp    BYTE PTR [ebx+0x3e885eaf],dh
  42557d:	aam    0xf4
  42557f:	mov    BYTE PTR [ebx+0x3903c3d7],ah
  425585:	xor    ecx,eax
  425587:	xchg   BYTE PTR [eax-0x17],ah
  42558a:	aad    0x3
  42558c:	mov    DWORD PTR [edx+edi*2+0x5b],esi
  425590:	ds jo  0x42560d
  425593:	inc    ebx
  425594:	inc    esi
  425595:	cwde   
  425596:	sbb    al,BYTE PTR [ecx+0x5e]
  425599:	xchg   ebx,eax
  42559b:	and    eax,DWORD PTR [eax]
	...
  4255ad:	add    BYTE PTR [eax],al
  4255af:	add    BYTE PTR [edx-0x14f83a17],cl
  4255b5:	gs repz scas eax,DWORD PTR es:[edi]
  4255b8:	arpl   WORD PTR [ecx+0x4e],bx
  4255bb:	std    
  4255bc:	inc    ebp
  4255bd:	repz mov cl,0x88
  4255c0:	xor    esp,edi
  4255c2:	mov    ecx,0xcbb8df0b
  4255c7:	sbb    BYTE PTR ds:0x3a081b84,ch
  4255cd:	rol    DWORD PTR [ecx],1
  4255cf:	call   FWORD PTR ds:0x5e723ff5
  4255d5:	outs   dx,BYTE PTR ds:[esi]
  4255d6:	aas    
  4255d7:	call   0xc044d49
  4255dc:	(bad)  
  4255de:	jmp    0xf17fd5f
  4255e3:	imul   dl
  4255e5:	add    ah,dl
  4255e7:	push   es
  4255e8:	xchg   esi,eax
  4255e9:	mov    ch,0xe1
  4255eb:	js     0x425584
  4255ed:	aad    0x11
  4255ef:	dec    ebx
  4255f0:	cs fldl2t 
  4255f3:	jg     0x42560a
  4255f5:	in     eax,0x12
  4255f7:	xchg   ebx,eax
  4255f8:	int3   
  4255f9:	or     ebp,DWORD PTR [eax]
  4255fb:	inc    ebp
  4255fd:	push   esi
  4255fe:	aad    0xf4
  425600:	call   0x25f75bd9
  425605:	(bad)  
  425606:	jmp    0xe34203e8
  42560b:	jl     0x425599
  42560d:	add    dl,0x48
  425610:	sahf   
  425611:	imul   esp,DWORD PTR [ebp+0x44],0x0
	...
  425628:	push   bp
  42562a:	dec    edi
  42562b:	add    al,0x62
  42562d:	fst    DWORD PTR [edx]
  42562f:	jge    0x42563a
  425631:	mov    ch,0xd1
  425633:	jle    0x4256b3
  425635:	out    dx,eax
  425636:	out    dx,al
  425637:	jl     0x425662
  425639:	mov    ch,0xcd
  42563b:	pop    ebx
  42563c:	dec    edx
  42563d:	fmul   QWORD PTR [edx+0x6e70da49]
  425643:	rol    BYTE PTR [ecx-0x1fca4947],0x68
  42564a:	sbb    al,0x77
  42564c:	sahf   
  42564d:	fcmovu st,st(2)
  42564f:	mov    eax,0x4d15714
  425654:	arpl   WORD PTR [ebx-0x1f],si
  425657:	xlat   BYTE PTR ds:[ebx]
  425658:	loopne 0x4256c2
  42565a:	rcr    ebx,1
  42565c:	nop
  42565d:	push   esp
  42565e:	push   ds
  42565f:	pop    esp
  425660:	mov    dh,0x68
  425662:	inc    edx
  425663:	dec    ecx
  425664:	loope  0x4255ff
  425666:	mov    ch,0xa7
  425668:	jmp    0x7451:0xd3e1011c
  42566f:	add    eax,0xed6fd9f6
  425674:	pop    esi
  425675:	lahf   
  425676:	jmp    FWORD PTR [ecx-0x1271e70b]
  42567c:	dec    ebx
  42567d:	sqrtps xmm1,XMMWORD PTR [esi]
  425680:	cmc    
  425681:	clc    
  425682:	adc    ch,BYTE PTR [ecx-0x3a8b999f]
  425688:	gs data16 je 0x425659
	...
  4256a0:	pop    ebp
  4256a1:	paddb  mm2,mm4
  4256a4:	adc    edi,ecx
  4256a6:	inc    eax
  4256a7:	jmp    0x29674412
  4256ac:	fistp  WORD PTR [eax+ebx*1+0x42a363af]
  4256b3:	fs sbb ah,dh
  4256b6:	adc    eax,0x24ec2b1e
  4256bb:	stc    
  4256bc:	and    ebx,esi
  4256be:	and    BYTE PTR [edi],ch
  4256c0:	shl    BYTE PTR [ebp+0x15],1
  4256c3:	sbb    DWORD PTR [eax+0x3d6a00a8],edx
  4256c9:	aam    0xff
  4256cb:	xchg   ebp,eax
  4256cc:	sbb    DWORD PTR [ebp+0x676fe402],0x66
  4256d3:	loope  0x4256a6
  4256d5:	addr16 pop ebp
  4256d7:	xchg   edx,eax
  4256d8:	stos   DWORD PTR es:[di],eax
  4256da:	rcr    BYTE PTR [ebx+ecx*1],0x1
  4256de:	sub    BYTE PTR [ebp-0x16eb65af],0xf4
  4256e5:	push   eax
  4256e6:	in     al,dx
  4256e7:	push   0xffffff95
  4256e9:	fmul   DWORD PTR [ebp+0x510e91a4]
  4256ef:	push   esi
  4256f0:	sbb    al,0xd4
  4256f2:	xchg   DWORD PTR [eax+0x7],ebx
  4256f5:	push   0x63de00fa
  4256fa:	jecxz  0x425738
  4256fc:	push   edi
  4256fd:	adc    ebp,edi
  4256ff:	test   BYTE PTR [ebx],bh
  425701:	cwde   
  425702:	inc    eax
  425703:	mov    eax,DWORD PTR [eax]
	...
  425715:	add    BYTE PTR [eax],al
  425717:	add    dh,ch
  425719:	adc    eax,DWORD PTR [ecx]
  42571b:	push   esi
  42571c:	pmulhw mm0,QWORD PTR [ebp+0x8]
  425720:	mov    eax,0xacfc56e4
  425725:	out    dx,al
  425726:	aaa    
  425727:	adc    esp,DWORD PTR [eax]
  425729:	sbb    DWORD PTR [ecx],eax
  42572b:	inc    esi
  42572c:	iret   
  42572d:	xchg   edi,eax
  42572e:	pop    es
  42572f:	push   eax
  425730:	in     al,dx
  425731:	sub    eax,0x69eb15fc
  425736:	cmp    eax,DWORD PTR [eax]
  425738:	cmp    BYTE PTR [eax+0x65252907],ch
  42573e:	mov    BYTE PTR [esi-0x39],cl
  425741:	ds pop eax
  425743:	test   DWORD PTR [edx],eax
  425745:	mov    DWORD PTR [edx],ecx
  425747:	push   ecx
  425748:	xchg   esp,eax
  425749:	xchg   esi,eax
  42574a:	add    ebp,eax
  42574c:	mov    ah,0xd9
  42574e:	sti    
  42574f:	call   DWORD PTR [eax]
  425751:	daa    
  425752:	pop    es
  425753:	mov    edi,DWORD PTR [ebx-0x1c]
  425756:	inc    ebp
  425757:	add    al,0xb
  425759:	ficomp WORD PTR [edx-0x37]
  42575c:	leave  
  42575d:	fs sti 
  42575f:	push   esp
  425760:	lock add BYTE PTR [ecx+0x3ee06bec],al
  425767:	lock sub eax,0x7100692d
  42576d:	fdiv   st(5),st
  42576f:	jne    0x4257c4
  425771:	in     al,0xea
  425773:	call   0x3f6a64
  425778:	mov    edi,0x46f1d
	...
  42578d:	add    BYTE PTR [eax],al
  42578f:	add    BYTE PTR [eax+0x1d],bl
  425792:	jmp    0x76307a5
  425797:	mov    esp,DWORD PTR [edx+0x35]
  42579a:	dec    ebx
  42579b:	xchg   BYTE PTR [ebx-0x5],ah
  42579e:	mov    edx,0x4f356103
  4257a3:	pop    ebp
  4257a4:	sub    esi,DWORD PTR [ebx+0x1ce0fff8]
  4257aa:	icebp  
  4257ab:	push   esp
  4257ac:	xlat   BYTE PTR ds:[ebx]
  4257ad:	cmp    al,0x1b
  4257af:	or     BYTE PTR [edx-0x77b0c07d],dl
  4257b5:	jno    0x4257f9
  4257b7:	jae    0x4257ff
  4257b9:	cwde   
  4257ba:	jbe    0x4257b2
  4257bc:	fstp   TBYTE PTR [ebx+ebx*1]
  4257bf:	adc    al,0xca
  4257c1:	inc    DWORD PTR [edi-0x4]
  4257c4:	aad    0xfc
  4257c6:	inc    esp
  4257c7:	or     al,0xe6
  4257c9:	mov    ds:0xfb620004,eax
  4257ce:	mov    eax,0x5ca68623
  4257d3:	shr    BYTE PTR [ecx-0x79],0x42
  4257d7:	mov    BYTE PTR [edx+0x5d764df5],dh
  4257dd:	ret    0xe644
  4257e0:	stc    
  4257e1:	jo     0x4257e2
  4257e3:	(bad)  
  4257e4:	jmp    0xd99558a8
  4257e9:	sbb    al,0x21
  4257eb:	adc    dl,ah
  4257ed:	mov    ah,0x1c
  4257ef:	std    
  4257f0:	cmp    ch,al
  4257f2:	cli    
  4257f3:	lds    eax,FWORD PTR [eax]
	...
  425805:	add    BYTE PTR [eax],al
  425807:	add    BYTE PTR [esi],bl
  425809:	pushf  
  42580a:	repz (bad) 
  42580c:	daa    
  42580d:	sti    
  42580e:	mov    ebx,0x77a34e23
  425813:	pop    esp
  425814:	push   0xffffff8b
  425816:	daa    
  425817:	add    BYTE PTR [ebx+ebx*4],dh
  42581a:	dec    edi
  42581b:	jge    0x425894
  42581d:	sti    
  42581e:	sub    BYTE PTR ds:[ebp-0x6d338988],bl
  425825:	fst    DWORD PTR [ecx+0x47]
  425828:	cmp    BYTE PTR [esi+0x5a],ah
  42582b:	jg     0x42581a
  42582d:	in     al,dx
  42582e:	(bad)  
  42582f:	jp     0x4257d2
  425831:	mov    ebp,0xddb67af1
  425836:	je     0x42582f
  425838:	arpl   WORD PTR [edx-0x5e],dx
  42583b:	sti    
  42583c:	bound  edx,QWORD PTR [esi+edi*8-0x4a649dbc]
  425843:	hlt    
  425844:	lods   eax,DWORD PTR ds:[esi]
  425845:	push   esp
  425846:	in     eax,dx
  425847:	sbb    DWORD PTR [ebp-0x114cdc26],esp
  42584d:	retf   
  42584e:	cdq    
  42584f:	in     eax,dx
  425850:	and    eax,0x693f66d9
  425855:	pop    ecx
  425856:	test   DWORD PTR [edi],ebx
  425858:	jb     0x425833
  42585a:	jne    0x425858
  42585c:	ficomp DWORD PTR ds:0xb1613dee
  425862:	leave  
  425863:	shr    BYTE PTR [edi],0x5c
  425866:	fcmovnb st,st(6)
  425868:	push   ecx
  425869:	push   edx
  42586a:	and    al,BYTE PTR [eax]
	...
  425880:	adc    al,0x66
  425882:	pop    ebp
  425883:	and    BYTE PTR [esi-0x26],ch
  425886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425887:	mov    ah,0x9e
  425889:	retf   
  42588a:	sbb    esi,ebp
  42588c:	push   ebp
  42588d:	fldenv [esi+0x40]
  425890:	pop    ecx
  425891:	push   edx
  425892:	and    bh,al
  425894:	fadd   QWORD PTR ds:0xeca47ee2
  42589a:	lock mov dl,0x12
  42589d:	jno    0x42585d
  42589f:	add    BYTE PTR [ebp+0x65],ch
  4258a2:	jle    0x4258a6
  4258a4:	mov    dl,0xd7
  4258a6:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4258a8:	mov    edi,0x71406704
  4258ad:	xchg   edi,eax
  4258ae:	fld    DWORD PTR [ebx]
  4258b0:	int    0x75
  4258b2:	add    ch,bl
  4258b4:	pusha  
  4258b5:	fld    DWORD PTR [eax]
  4258b7:	pop    esp
  4258b8:	and    bh,BYTE PTR [ecx+0xf04ba04]
  4258be:	push   esp
  4258bf:	mov    eax,0x63d4fcf1
  4258c4:	push   ds
  4258c5:	gs jecxz 0x425902
  4258c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258c9:	gs sti 
  4258cb:	jb     0x42587b
  4258cd:	push   edi
  4258ce:	repnz out dx,al
  4258d0:	lea    edx,[edx+0x5261e900]
  4258d6:	jl     0x4258dd
  4258d8:	repnz pop ecx
  4258da:	sti    
  4258db:	out    dx,eax
  4258dc:	out    dx,al
  4258dd:	push   esi
  4258de:	mov    ebp,0x66d961e9
  4258e3:	out    dx,eax
	...
  4258f8:	push   0xffffff8e
  4258fa:	mov    ecx,0xa45805
  4258ff:	adc    DWORD PTR [ebp+0x4ce900b9],esi
  425905:	and    al,0xb
  425907:	ins    BYTE PTR es:[edi],dx
  425908:	out    0x64,eax
  42590a:	sti    
  42590b:	jmp    0x1a762144
  425910:	mov    ecx,DWORD PTR [edi+0x4a]
  425913:	out    0xa,eax
  425915:	retf   
  425916:	xchg   al,ch
  425918:	pop    ebp
  425919:	mov    ecx,0xdc65fb74
  42591e:	jl     0x42590d
  425920:	pop    ebp
  425921:	sar    BYTE PTR [edx-0xd],1
  425924:	xchg   esi,eax
  425925:	es shl ah,0x1e
  425929:	fs sti 
  42592b:	jmp    0xe28430dc
  425930:	cmp    ebp,edx
  425932:	fild   QWORD PTR [ebp+ebp*4-0x48]
  425936:	adc    al,0x39
  425938:	dec    ebx
  425939:	xchg   esp,eax
  42593a:	dec    esi
  42593b:	cmp    ch,dl
  42593d:	adc    BYTE PTR ds:0x3fa52700,ah
  425943:	and    al,0x27
  425945:	fld    DWORD PTR [eax]
  425947:	add    BYTE PTR [ebx],bh
  425949:	add    BYTE PTR [edi+0x22],cl
  42594c:	dec    ebx
  42594d:	fmul   DWORD PTR [ecx+0x7016c6f0]
  425953:	pop    esp
  425954:	adc    edx,edx
  425956:	push   edx
  425957:	jmp    DWORD PTR [esi]
  425959:	loopne 0x42596b
  42595b:	inc    eax
	...
  425970:	or     esp,ecx
  425972:	repz test DWORD PTR [esp+edx*4-0x3c4074bb],ebx
  42597a:	adc    al,0x2b
  42597c:	cmp    al,0xeb
  42597e:	ins    DWORD PTR es:[edi],dx
  42597f:	jmp    DWORD PTR [eax-0x5d]
  425982:	add    cl,ch
  425984:	xchg   BYTE PTR [eax],bl
  425986:	jle    0x4259bd
  425988:	xchg   BYTE PTR [ebx],cl
  42598a:	jle    0x4259bd
  42598c:	test   al,0x27
  42598e:	mov    dh,dl
  425990:	xor    bh,bh
  425992:	test   BYTE PTR [eax],0xcb
  425995:	(bad)  
  425996:	mov    esi,0x89d7bb9c
  42599b:	xchg   esp,eax
  42599c:	xchg   edi,eax
  42599d:	mov    edi,0x28cbfffb
  4259a2:	add    BYTE PTR [edx],0x76
  4259a5:	dec    edx
  4259a6:	push   esp
  4259a7:	add    DWORD PTR [edx],eax
  4259a9:	mov    dh,0xf6
  4259ab:	add    BYTE PTR [ebx-0x74635951],bh
  4259b1:	xlat   BYTE PTR ds:[ebx]
  4259b2:	mov    DWORD PTR [edi+eiz*2+0x7bfffa69],ecx
  4259b9:	jmp    0xe8cd:0x527a88fa
  4259c0:	lea    ecx,[eax+0x1bf1fffb]
  4259c6:	jmp    0x5d59e2cd
  4259cb:	pop    esi
  4259cc:	bound  ebp,QWORD PTR [ebp+0x6d267edb]
  4259d2:	add    al,0x0
	...
  4259e8:	bound  ebp,QWORD PTR [esi]
  4259ea:	or     al,0x0
  4259ec:	mov    cl,0xe7
  4259ee:	loopne 0x425a13
  4259f0:	pop    edx
  4259f1:	vandps ymm5,ymm5,ymm1
  4259f5:	fimul  WORD PTR [ebx-0x45e8201a]
  4259fb:	pop    es
  4259fc:	out    0xa,eax
  4259fe:	mov    ecx,0x2a6a8339
  425a03:	xor    eax,0x35b90ae7
  425a08:	out    0x27,eax
  425a0a:	add    eax,0xee2d1b83
  425a0f:	out    0x2b,eax
  425a11:	cmp    eax,0xa8e9ffff
  425a16:	mov    esp,edi
  425a18:	outs   dx,BYTE PTR ds:[esi]
  425a19:	xchg   esp,eax
  425a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a1b:	das    
  425a1c:	ja     0x425a8e
  425a1e:	call   DWORD PTR [eax-0x27]
  425a21:	mov    ds:0x9bcaca8b,eax
  425a26:	es call ebp
  425a29:	hlt    
  425a2a:	inc    esp
  425a2b:	jb     0x425a86
  425a2d:	out    0x4f,eax
  425a2f:	out    0xc1,eax
  425a31:	cmp    al,0xff
  425a33:	push   DWORD PTR [eax-0x50]
  425a36:	sub    ebx,DWORD PTR [edi]
  425a38:	jmp    0x4259f4
  425a3a:	je     0x425a3a
  425a3c:	mov    eax,0x2f2facd6
  425a41:	jo     0x425a42
  425a43:	mov    BYTE PTR [ecx-0x818af09],dh
  425a49:	xchg   ebx,eax
  425a4a:	(bad)  
  425a4b:	inc    DWORD PTR [eax]
	...
  425a5d:	add    BYTE PTR [eax],al
  425a5f:	add    BYTE PTR [ebp-0x16],bl
  425a62:	inc    edi
  425a63:	xor    BYTE PTR [eax+0x260c39f5],dh
  425a69:	inc    ecx
  425a6a:	(bad)  
  425a6b:	rcl    DWORD PTR ds:0xae143d9,0x97
  425a72:	in     eax,0x3
  425a74:	jecxz  0x425aeb
  425a76:	icebp  
  425a77:	lea    esp,[ecx-0x4f291243]
  425a7d:	or     ecx,DWORD PTR [edi+ecx*4]
  425a80:	sar    DWORD PTR [ebp+0x5fdadab9],1
  425a86:	or     ecx,DWORD PTR [ebp-0x7428424f]
  425a8c:	mov    eax,ds:0x1388fdbd
  425a91:	in     al,dx
  425a92:	out    dx,eax
  425a93:	lods   eax,DWORD PTR ds:[esi]
  425a94:	pusha  
  425a95:	add    al,0xcc
  425a97:	mov    WORD PTR [ecx+0x702ef9bd],cs
  425a9d:	out    dx,eax
  425a9e:	fsubr  st(0),st
  425aa0:	jnp    0x425a6b
  425aa2:	xchg   edi,eax
  425aa3:	nop
  425aa4:	mov    eax,ds:0x87d3d4bd
  425aa9:	push   eax
  425aaa:	mov    ebp,0x5c7159e7
  425aaf:	iret   
  425ab0:	in     eax,dx
  425ab1:	popa   
  425ab2:	(bad)  
  425ab3:	pop    esi
  425ab4:	xchg   edx,eax
  425ab5:	or     al,0x65
  425ab7:	mov    DWORD PTR [ecx-0x2925463f],0x2219e1cb
  425ac1:	fnstcw WORD PTR [esi+0x48]
	...
  425ad7:	add    BYTE PTR [esi+0x4d],dl
  425ada:	sub    DWORD PTR [edi-0x56311303],eax
  425ae0:	loopne 0x425b4c
  425ae2:	pop    ebp
  425ae3:	adc    eax,0xf4060cdb
  425ae8:	push   esi
  425ae9:	sub    ch,BYTE PTR [ebx-0x3e6e152c]
  425aef:	sar    DWORD PTR [esi-0x28],1
  425af2:	jmp    0xe72f287e
  425af7:	hlt    
  425af8:	stos   BYTE PTR es:[edi],al
  425af9:	adc    eax,0xfe801601
  425afe:	xchg   BYTE PTR [edx+0x1c45897],ch
  425b04:	and    al,0xce
  425b06:	add    BYTE PTR [edi],dh
  425b08:	ss mov ecx,0x2aa396ef
  425b0e:	add    DWORD PTR [eax+0x5e],edx
  425b11:	in     eax,0x32
  425b13:	loopne 0x425b8e
  425b15:	mov    eax,fs:0xf05261e9
  425b1b:	ins    BYTE PTR es:[edi],dx
  425b1c:	js     0x425b09
  425b1e:	jmp    FWORD PTR [eax]
  425b20:	xchg   DWORD PTR [ecx+ebp*8],ecx
  425b23:	add    al,bh
  425b25:	pusha  
  425b26:	sti    
  425b27:	gs sahf 
  425b29:	in     al,dx
  425b2a:	ds mov edx,0x4ef1f334
  425b30:	ins    DWORD PTR es:[edi],dx
  425b31:	or     eax,0x961a912
  425b36:	cld    
  425b37:	aam    0x31
  425b39:	rol    BYTE PTR [eax-0x17],1
	...
  425b50:	jle    0x425baa
  425b52:	psubsw mm4,QWORD PTR [ecx+0xa]
  425b56:	cld    
  425b57:	fsubr  st(1),st
  425b59:	inc    DWORD PTR [ecx+ebp*8-0x5e]
  425b5d:	retf   
  425b5e:	test   bl,bh
  425b60:	mov    eax,ds:0x60ebbc60
  425b65:	fld    DWORD PTR [eax]
  425b67:	adc    dh,BYTE PTR [ecx+esi*2-0x48]
  425b6b:	or     BYTE PTR [ebx],ah
  425b6d:	pop    ebp
  425b6e:	dec    edi
  425b6f:	div    BYTE PTR [eax+eiz*8+0x5e61a561]
  425b76:	adc    eax,0x119576d
  425b7b:	and    bl,BYTE PTR ds:0xbf34e6ec
  425b81:	push   ecx
  425b82:	retf   0xafc1
  425b85:	data16 sti 
  425b87:	add    BYTE PTR [ebp+eiz*2-0x2746a145],ah
  425b8e:	add    BYTE PTR [ecx-0x4359],al
  425b94:	mov    eax,DWORD PTR [ebp-0x59ed17ac]
  425b9a:	cld    
  425b9b:	dec    DWORD PTR [eax+0x5eff50fd]
  425ba1:	nop
  425ba2:	or     al,BYTE PTR [eax+0x4b]
  425ba5:	mov    esp,?
  425ba7:	adc    eax,0x40cc6b
  425bac:	mov    ebx,ebx
  425bae:	mov    bl,0x1
  425bb0:	aas    
  425bb1:	bound  edx,QWORD PTR [edx]
  425bb3:	call   0x425bb8
	...
  425bc8:	cmp    ebx,edi
  425bca:	sti    
  425bcb:	push   DWORD PTR [eax+0xeff7ea4]
  425bd1:	rol    BYTE PTR [eax-0x17],cl
  425bd4:	imul   ebx,esp,0x84cd0000
  425bda:	xchg   BYTE PTR [edi+ebx*2-0x40004bf],dl
  425be1:	loop   0x425c03
  425be3:	or     BYTE PTR [ecx+0x1a],ch
  425be6:	in     al,0x16
  425be8:	jmp    0xfd78:0x778d00db
  425bef:	add    bh,bl
  425bf1:	fucomi st,st(0)
  425bf3:	(bad)  
  425bf4:	loope  0x425c0e
  425bf6:	std    
  425bf7:	lea    edi,[ebx]
  425bf9:	inc    esi
  425bfa:	cli    
  425bfb:	(bad)  
  425bfc:	mov    ebx,0xeae8cd4c
  425c01:	sar    ebp,cl
  425c03:	dec    DWORD PTR [esi+0x1c]
  425c06:	je     0x425c4f
  425c08:	loope  0x425bd1
  425c0a:	xchg   DWORD PTR [edi+ebx*2-0x3b],ecx
  425c0e:	dec    ebx
  425c0f:	push   eax
  425c10:	ins    DWORD PTR es:[edi],dx
  425c11:	mov    WORD PTR [eax-0x1],ss
  425c14:	bound  ebx,QWORD PTR [ebp-0x7d]
  425c17:	push   cs
  425c18:	and    dh,BYTE PTR [edx-0x78]
  425c1b:	mov    edi,0x36a5640c
  425c20:	es mov dh,0x6
  425c23:	je     0x425c93
  425c25:	repz cmp al,0x13
  425c28:	not    edi
  425c2a:	out    dx,eax
  425c2b:	mov    BYTE PTR [eax],0x0
	...
  425c3e:	add    BYTE PTR [eax],al
  425c40:	add    al,0xe9
  425c42:	rol    BYTE PTR [ebx+0x56],1
  425c45:	in     eax,dx
  425c46:	enter  0x6e23,0xa0
  425c4a:	jbe    0x425c4f
  425c4c:	mov    ecx,0xde8b04b4
  425c51:	mov    WORD PTR [edi],?
  425c53:	inc    DWORD PTR [ebp+0x71]
  425c56:	daa    
  425c57:	fdiv   st(6),st
  425c59:	jo     0x425c5a
  425c5b:	and    BYTE PTR [edx],0x80
  425c5e:	cwde   
  425c5f:	mov    edi,0x9b9b0e6
  425c64:	jno    0x425c16
  425c66:	mov    ds:0x38cce686,al
  425c6b:	call   DWORD PTR ds:0x63ed7c71
  425c71:	jo     0x425c72
  425c73:	mov    bl,dh
  425c75:	aam    0x3a
  425c77:	add    DWORD PTR [edx+0x70],esp
  425c7a:	xchg   DWORD PTR [edi],edx
  425c7c:	mov    ds:0xdff9b839,al
  425c81:	in     al,dx
  425c82:	call   0xffb2bf7a
  425c87:	dec    edi
  425c88:	fstp   QWORD PTR [ebp-0x65]
  425c8b:	adc    BYTE PTR [edx],ah
  425c8d:	jo     0x425c1f
  425c8f:	add    DWORD PTR [esi+0x62ffff5c],0x40
  425c96:	cmp    dl,BYTE PTR [edx]
  425c98:	cmp    BYTE PTR es:[edi+0x2cc8e8ff],0xda
  425ca0:	add    ebx,edx
  425ca2:	jmp    0x425caa
	...
  425cb7:	add    dh,bl
  425cb9:	cdq    
  425cba:	push   ebp
  425cbb:	fidiv  WORD PTR [eax]
  425cbd:	dec    esp
  425cbe:	cmp    eax,0xaf204de8
  425cc3:	add    esp,DWORD PTR [edx-0x27]
  425cc6:	rcl    DWORD PTR [ecx-0x9],1
  425cc9:	xlat   BYTE PTR ds:[ebx]
  425cca:	jmp    0xd7978d59
  425ccf:	ret    
  425cd0:	jne    0x425cef
  425cd2:	mov    eax,ds:0x3cd96203
  425cd7:	aas    
  425cd8:	xor    BYTE PTR [ecx+0x8],bl
  425cdb:	enter  0x5f5d,0xbb
  425cdf:	add    BYTE PTR [eax-0x28],ah
  425ce2:	jmp    0x74ed2dea
  425ce7:	pop    ds
  425ce8:	test   eax,0x6203e9db
  425ced:	or     ah,BYTE PTR [ebp-0x79]
  425cf0:	sbb    DWORD PTR [ebp-0x17],0xd0096203
  425cf7:	add    al,0xd9
  425cf9:	push   esp
  425cfa:	add    eax,0xe95e1d64
  425cff:	shr    eax,cl
  425d01:	add    al,0x6
  425d03:	int3   
  425d04:	add    eax,0x63eae2d
  425d09:	add    al,0x3b
  425d0b:	clc    
  425d0c:	jge    0x425d06
  425d0e:	lods   eax,DWORD PTR ds:[esi]
  425d0f:	add    esi,edi
  425d11:	xchg   ah,ch
  425d13:	add    ebp,ebp
  425d15:	pop    ebp
  425d16:	jmp    0x6f3e6ed2
  425d1b:	dec    esi
	...
  425d30:	lds    esp,FWORD PTR [eax+0x1d]
  425d33:	ds (bad) 
  425d35:	test   eax,0x22edd29
  425d3a:	imul   eax,DWORD PTR [edi-0x5b],0xa003e9d4
  425d41:	aam    0x0
  425d43:	jmp    0x629565d6
  425d48:	stos   BYTE PTR es:[edi],al
  425d49:	loope  0x425db5
  425d4b:	sub    eax,0x39c0a85e
  425d50:	mov    cl,0xd
  425d52:	imul   edx,DWORD PTR ds:0x39009f49,0x5ae88bdb
  425d5c:	cmp    BYTE PTR [ebp-0x5],bl
  425d5f:	jae    0x425d7f
  425d61:	test   eax,0xd9119c0
  425d66:	imul   edi,DWORD PTR [esi+0x39],0xdb39009f
  425d6d:	mov    ebp,eax
  425d6f:	push   ds
  425d70:	mov    BYTE PTR [ebp-0x5],bl
  425d73:	ins    DWORD PTR es:[edi],dx
  425d74:	mov    ebx,0x5e1457fe
  425d79:	push   ebp
  425d7a:	sar    ah,0x5d
  425d7d:	stos   BYTE PTR es:[edi],al
  425d7e:	shl    BYTE PTR [eax],0xa3
  425d81:	test   eax,0x9a1929c0
  425d86:	push   ebp
  425d87:	bound  esi,QWORD PTR [edx-0x25]
  425d8a:	in     al,dx
  425d8b:	cmp    DWORD PTR [esi-0x27],ebx
  425d8e:	add    BYTE PTR [edx-0x452855c9],bh
	...
  425da8:	in     al,0x47
  425daa:	xor    BYTE PTR [esi+0x4f],cl
  425dad:	pop    ebp
  425dae:	mov    ecx,0xfbb7560a
  425db3:	push   ecx
  425db4:	ret    0x3d
  425db7:	jmp    0x70db65a0
  425dbc:	mov    BYTE PTR [ebx+edi*8-0x17],bl
  425dc0:	cmp    DWORD PTR [ebx+0x6d],ebx
  425dc3:	call   0x169faf29
  425dc8:	push   esp
  425dc9:	pop    ebx
  425dca:	sti    
  425dcb:	jmp    0xc7adb1
  425dd0:	or     ebx,DWORD PTR [esi+0x4bdbfffc]
  425dd6:	ds cwde 
  425dd8:	fild   DWORD PTR [esi-0x3594ea04]
  425dde:	inc    eax
  425ddf:	add    BYTE PTR [esi],dh
  425de1:	sbb    BYTE PTR [edi+0x5b],ch
  425de4:	xor    esp,DWORD PTR [ecx-0x62740006]
  425dea:	push   cs
  425deb:	in     al,dx
  425dec:	mov    DWORD PTR [eax-0x62c97305],ebx
  425df2:	dec    ebx
  425df3:	push   0xffffff8a
  425df5:	mov    DWORD PTR [esi+0x55881345],eax
  425dfb:	mov    DWORD PTR [esi],esi
  425dfd:	popf   
  425dfe:	cld    
  425dff:	adc    eax,0x40c86f
  425e04:	(bad)  
  425e05:	sbb    BYTE PTR [edi+0x3d],ch
  425e08:	cwde   
  425e09:	mov    dl,BYTE PTR [eax+0x53]
	...
  425e20:	scas   al,BYTE PTR es:[edi]
  425e21:	push   ebx
  425e22:	sub    edi,edi
  425e24:	fcomp  QWORD PTR [ebx+ecx*2-0x35fc901]
  425e2b:	adc    eax,0x40c843
  425e30:	rol    BYTE PTR [eax],0xfd
  425e33:	jne    0x425df8
  425e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e36:	fcomp  DWORD PTR [edx]
  425e38:	mov    al,ds:0x1b100e9d
  425e3d:	cwde   
  425e3e:	sti    
  425e3f:	std    
  425e40:	cmp    BYTE PTR [edx*1-0x2634176],ah
  425e47:	ret    
  425e48:	adc    eax,ebx
  425e4a:	mov    BYTE PTR [ebp+0x2c],bl
  425e4d:	pop    eax
  425e4e:	clc    
  425e4f:	add    eax,0x328c29d0
  425e54:	cmp    edi,DWORD PTR [esi+0x58]
  425e57:	leave  
  425e58:	mov    al,ch
  425e5a:	cli    
  425e5b:	jmp    0x20be:0x88d2ca62
  425e62:	into   
  425e63:	push   ebp
  425e64:	sub    eax,0x12fbc2e5
  425e69:	dec    eax
  425e6a:	pop    es
  425e6b:	dec    edi
  425e6c:	jmp    0xae3849d8
  425e71:	test   BYTE PTR [ebx],bl
  425e73:	adc    BYTE PTR [edx],ah
  425e75:	jb     0x425df7
  425e77:	mov    edi,0x4a8bb816
  425e7c:	xchg   esi,eax
  425e7d:	cdq    
  425e7e:	adc    BYTE PTR [ecx],bh
  425e80:	arpl   WORD PTR [edx-0x76],si
  425e83:	out    dx,eax
	...
  425e98:	fistp  WORD PTR [ebx]
  425e9a:	mov    al,0x20
  425e9c:	out    0x1a,eax
  425e9e:	mov    al,0x1c
  425ea0:	out    0xac,eax
  425ea2:	cmp    al,0x4f
  425ea4:	clc    
  425ea5:	jne    0x425e75
  425ea7:	imul   edx,DWORD PTR [esi+0x33],0x665dfbb1
  425eae:	jecxz  0x425ebf
  425eb0:	mov    ds:0xd7bf8070,al
  425eb5:	jns    0x425e41
  425eb7:	int    0x3a
  425eb9:	xchg   esp,ecx
  425ebb:	(bad)  
  425ebc:	cmp    eax,0xaffc3120
  425ec1:	in     al,0x37
  425ec3:	adc    al,BYTE PTR [esi]
  425ec5:	jg     0x425e86
  425ec7:	inc    DWORD PTR [edi+eiz*8-0x4fd4a2c2]
  425ece:	ror    DWORD PTR [eax+0x1b28f006],1
  425ed4:	mov    cl,0x22
  425ed6:	into   
  425ed7:	xor    BYTE PTR [ebx+edi*1],cl
  425eda:	lods   eax,DWORD PTR ds:[esi]
  425edb:	add    ebp,ecx
  425edd:	mov    ecx,0x813e1237
  425ee2:	mov    edi,0x83a8d8ff
  425ee7:	(bad)  
  425ee8:	in     eax,0xd9
  425eea:	fidivr WORD PTR [ebx]
  425eec:	push   ecx
  425eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425eee:	ins    BYTE PTR es:[edi],dx
  425eef:	rol    ecx,0x9
  425ef2:	mov    ebx,0xed752042
  425ef7:	add    esp,DWORD PTR [edx-0x27]
  425efa:	add    dl,BYTE PTR [ecx]
	...
  425f10:	sbb    cl,al
  425f12:	test   eax,0xb0c8cb03
  425f17:	fdivr  DWORD PTR [ebp-0x273e171c]
  425f1d:	adc    al,0xce
  425f1f:	shl    DWORD PTR [esi],cl
  425f21:	pop    edx
  425f22:	hlt    
  425f23:	xlat   BYTE PTR ds:[ebx]
  425f24:	fs sbb edx,ebp
  425f27:	or     ch,0xe4
  425f2a:	mov    esi,0x8dc486d2
  425f2f:	adc    eax,0x416ed922
  425f34:	push   ss
  425f35:	sti    
  425f36:	push   cs
  425f37:	dec    ebp
  425f38:	mov    ds:0xe2275f04,al
  425f3d:	ins    DWORD PTR es:[edi],dx
  425f3e:	std    
  425f3f:	mov    BYTE PTR [eax-0x512dc9a3],ah
  425f45:	or     edi,edx
  425f47:	pop    esi
  425f48:	mov    dl,0xef
  425f4a:	leave  
  425f4b:	mov    ?,WORD PTR [edx+ebx*2]
  425f4e:	fadd   st(7),st
  425f50:	ins    BYTE PTR es:[edi],dx
  425f51:	sbb    edx,ebp
  425f53:	shl    DWORD PTR [esi],cl
  425f55:	(bad)  
  425f56:	int    0x13
  425f58:	mov    ds:0xb04364d9,al
  425f5d:	ret    
  425f5e:	je     0x425f20
  425f60:	sbb    DWORD PTR [ecx],ecx
  425f62:	shl    bl,1
  425f64:	mov    ebx,DWORD PTR [edx+0x52]
  425f67:	adc    BYTE PTR [esi-0x37],ch
  425f6a:	test   eax,0xbc98e103
  425f6f:	push   DWORD PTR [ebx]
  425f71:	cdq    
  425f72:	dec    esi
  425f73:	into   
	...
  425f88:	call   0x117b60a0
  425f8d:	test   eax,0x92097fb
  425f92:	mov    ah,BYTE PTR [ebp+eax*4+0x5f214595]
  425f99:	fld    DWORD PTR [eax]
  425f9b:	jmp    0xf9772728
  425fa0:	mov    eax,ds:0xd298459
  425fa5:	mov    ecx,0x4e8c9a4f
  425faa:	inc    ebp
  425fab:	add    eax,0x74fc0891
  425fb0:	ins    DWORD PTR es:[edi],dx
  425fb1:	pop    ebp
  425fb2:	adc    eax,0x1197621
  425fb7:	fs push ds
  425fb9:	out    0xa,al
  425fbb:	(bad)  
  425fbc:	pop    ebp
  425fbd:	or     eax,0xcc5e290f
  425fc2:	mov    dl,0xa2
  425fc4:	std    
  425fc5:	sbb    DWORD PTR [ebx],ecx
  425fc7:	and    eax,0xb5755d1b
  425fcc:	sub    eax,edi
  425fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fcf:	(bad)  [ecx+0x3baa8959]
  425fd5:	mov    bh,0x57
  425fd7:	mov    al,0x9f
  425fd9:	stos   DWORD PTR es:[edi],eax
  425fda:	xchg   DWORD PTR [ebp+0x5c4fa831],eax
  425fe0:	add    eax,0x6e135051
  425fe5:	ret    
  425fe6:	sti    
  425fe7:	mov    edx,0xd5155596
	...
  426000:	push   ecx
  426001:	cdq    
  426002:	add    BYTE PTR [esi+ebx*4-0x1b],ah
  426006:	test   BYTE PTR [esi+eiz*2-0x27],bh
  42600a:	add    BYTE PTR [ebp+edx*8+0x54],ch
  42600e:	push   eax
  42600f:	mov    edx,0x4e19c336
  426014:	mov    ch,0x50
  426016:	sti    
  426017:	add    BYTE PTR [esi],bl
  426019:	inc    ecx
  42601a:	or     eax,DWORD PTR [eax+0xb]
  42601d:	fdivr  DWORD PTR [ebx+0xf11ac75]
  426023:	dec    esp
  426024:	or     DWORD PTR ds:0x978382fb,ebx
  42602a:	outs   dx,BYTE PTR ds:[esi]
  42602b:	ins    BYTE PTR es:[edi],dx
  42602c:	push   eax
  42602d:	and    bh,dh
  42602f:	test   DWORD PTR [edx+0x63565e89],eax
  426035:	sahf   
  426036:	inc    esp
  426037:	add    bl,cl
  426039:	gs jmp 0x425fc1
  42603c:	lods   eax,DWORD PTR ds:[esi]
  42603d:	mov    BYTE PTR [ebx-0x73],dl
  426040:	(bad)  
  426041:	adc    BYTE PTR [edi+edi*8+0x2e],cl
  426045:	adc    BYTE PTR [esi+0x6a],dl
  426048:	bound  edx,QWORD PTR [edx]
  42604a:	outs   dx,DWORD PTR ds:[esi]
  42604b:	clc    
  42604c:	mov    ah,0xe7
  42604e:	sub    al,0x10
  426050:	cmp    ebx,ebp
  426052:	jg     0x426014
  426054:	das    
  426055:	push   edi
  426056:	cld    
  426057:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  426059:	out    0x28,eax
  42605b:	adc    BYTE PTR [ebx-0x23],cl
  42605e:	jg     0x426020
  426060:	das    
  426061:	inc    ebx
  426062:	mov    DWORD PTR [eax],eax
	...
  426078:	call   FWORD PTR [ebx-0x35abd791]
  42607e:	mov    ebx,0x36129b48
  426083:	dec    DWORD PTR [esi+0x3c]
  426086:	or     eax,DWORD PTR [eax+0x3b]
  426089:	xlat   BYTE PTR ds:[ebx]
  42608a:	mov    ebx,0x335b1c74
  42608f:	add    BYTE PTR [ebx],ch
  426091:	fadd   QWORD PTR [eax]
  426093:	jae    0x4260d4
  426095:	int    0xfa
  426097:	jmp    0xdd7b:0x335b40
  42609e:	add    BYTE PTR [edx],bl
  4260a0:	dec    ebx
  4260a1:	pop    edi
  4260a2:	push   ebx
  4260a3:	add    esp,DWORD PTR [edx-0x45]
  4260a6:	dec    ecx
  4260a7:	out    0xd5,eax
  4260a9:	jle    0x4260aa
  4260ab:	call   FWORD PTR [edi+ebx*4+0x2cf5f7aa]
  4260b2:	pop    ebx
  4260b3:	adc    DWORD PTR [edx-0x763f72be],esp
  4260b9:	stc    
  4260ba:	inc    esp
  4260bb:	push   edx
  4260bc:	jmp    0x3fc32fae
  4260c1:	idiv   bh
  4260c3:	addr16 es mov esp,0x4cc4ffbf
  4260ca:	mov    ds:0x7a422211,eax
  4260cf:	mov    edi,0xeba7222e
  4260d4:	fadd   DWORD PTR [ecx+0x2ca54fff]
  4260da:	iret   
  4260db:	adc    DWORD PTR [eax],eax
	...
  4260ed:	add    BYTE PTR [eax],al
  4260ef:	add    BYTE PTR [edx],ah
  4260f1:	inc    edx
  4260f2:	cmp    BYTE PTR [edi+0x4a88520e],0x8e
  4260f9:	adc    BYTE PTR [edi-0x7e6e7a04],ah
  4260ff:	mov    edi,0xbff145f7
  426104:	stos   DWORD PTR es:[edi],eax
  426105:	cmp    BYTE PTR [edi+0x7a],0x6e
  426109:	inc    ecx
  42610a:	add    dl,BYTE PTR [ebx-0x7fc0875e]
  426110:	dec    esi
  426111:	cdq    
  426112:	rcl    DWORD PTR [ebp-0x17],1
  426115:	in     al,dx
  426116:	loopne 0x42617f
  426118:	xchg   ecx,eax
  426119:	sub    bh,0xea
  42611c:	lods   eax,DWORD PTR ds:[esi]
  42611d:	mov    ebx,0x4eb6536
  426122:	loope  0x42612f
  426124:	(bad)  
  426126:	mov    cl,0x16
  426128:	mov    eax,0x7e438a04
  42612d:	sbb    al,0xd0
  42612f:	dec    edi
  426130:	sbb    eax,0x6fdbfcda
  426135:	cdq    
  426136:	jmp    0x2b2882bd
  42613b:	rol    BYTE PTR [ecx-0x7],0xa5
  42613f:	add    esp,DWORD PTR [edx-0x27]
  426142:	je     0x426104
  426144:	inc    ecx
  426145:	jmp    0x6539e1e3
  42614a:	lods   eax,DWORD PTR ds:[esi]
  42614b:	fild   WORD PTR [ecx-0x1a]
  42614e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42614f:	cmp    eax,0xdf9d562d
	...
  426168:	inc    ebp
  426169:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  42616b:	fbstp  TBYTE PTR [ebp-0x54]
  42616e:	add    DWORD PTR [ebx],0xd0e5d962
  426174:	adc    BYTE PTR [esp+ebp*2+0x229c6637],ch
  42617b:	aam    0x10
  42617d:	push   esi
  42617e:	fadd   QWORD PTR [ebx]
  426180:	push   ebx
  426181:	cdq    
  426182:	jmp    0x1a103f07
  426187:	std    
  426188:	or     ebp,edi
  42618a:	pop    ecx
  42618b:	mov    al,0x73
  42618d:	ret    
  42618e:	stc    
  42618f:	mov    BYTE PTR [ecx],ah
  426191:	std    
  426192:	cmc    
  426193:	sar    DWORD PTR [esi-0x33],cl
  426196:	or     eax,0x22db7dbc
  42619b:	add    al,0x62
  42619d:	inc    edx
  42619e:	xlat   BYTE PTR ds:[ebx]
  42619f:	ss icebp 
  4261a1:	cld    
  4261a2:	aad    0x8a
  4261a4:	nop
  4261a5:	jge    0x42619e
  4261a7:	ret    
  4261a8:	push   ebp
  4261a9:	push   edi
  4261aa:	mov    bl,0x36
  4261ac:	sar    ebp,1
  4261ae:	stc    
  4261af:	ss das 
  4261b1:	bound  esp,QWORD PTR ds:0xe74255e0
  4261b7:	repnz cmc 
  4261b9:	mov    ch,0x1b
  4261bb:	(bad)  
  4261bd:	sbb    al,0x0
  4261bf:	adc    DWORD PTR [eax-0x16ebff1e],esp
  4261c5:	inc    ecx
  4261c6:	push   ecx
  4261c7:	mov    edi,0xa48d4c10
	...
  4261e0:	push   ebp
  4261e1:	pop    ebx
  4261e2:	into   
  4261e3:	fsubr  QWORD PTR [esi-0x5a]
  4261e6:	push   0x115eb4d
  4261eb:	cdq    
  4261ec:	dec    ecx
  4261ed:	shl    DWORD PTR [eax+ebp*8+0x61],1
  4261f1:	pop    eax
  4261f2:	(bad)  
  4261f3:	in     eax,0x38
  4261f5:	out    0x4e,al
  4261f7:	cwde   
  4261f8:	or     esi,ebx
  4261fa:	xchg   DWORD PTR [ecx-0x6f17569f],ebp
  426200:	in     eax,dx
  426201:	push   esi
  426202:	sti    
  426203:	push   0xffffff85
  426205:	out    0x85,al
  426207:	sub    edi,esi
  426209:	lock sti 
  42620b:	jl     0x42625e
  42620d:	pusha  
  42620e:	push   ebp
  42620f:	std    
  426210:	ja     0x4261dd
  426212:	or     al,0xf6
  426214:	cmc    
  426215:	fucomp st(0)
  426217:	iret   
  426218:	push   esp
  426219:	push   ebp
  42621a:	sti    
  42621b:	jb     0x4261ba
  42621d:	push   ecx
  42621e:	xchg   ecx,ebx
  426220:	ds stos BYTE PTR es:[edi],al
  426222:	inc    edx
  426223:	jmp    0x3004c289
  426228:	sub    DWORD PTR [eax],ebx
  42622a:	or     al,0xe9
  42622c:	loop   0x42626f
  42622e:	pop    esp
  42622f:	sbb    bl,BYTE PTR [edi-0x619de743]
  426235:	push   ebp
  426236:	mov    BYTE PTR ds:0xa62fe142,bl
  42623c:	(bad)  
  42623d:	out    0xa0,eax
  42623f:	sti    
  426240:	and    DWORD PTR [ebp-0x7a],edx
  426243:	mov    cl,0x0
	...
  426255:	add    BYTE PTR [eax],al
  426257:	add    ch,al
  426259:	xor    DWORD PTR [ebx],ecx
  42625b:	gs xchg ebp,eax
  42625d:	push   esp
  42625e:	sti    
  42625f:	add    BYTE PTR [ebx+0x24],cl
  426262:	push   ebp
  426263:	mov    esi,esi
  426265:	sub    BYTE PTR [ecx],dl
  426267:	inc    eax
  426268:	cmp    eax,DWORD PTR [ecx-0x22b474e1]
  42626e:	push   ecx
  42626f:	call   DWORD PTR [ebp+0x60]
  426272:	aas    
  426273:	and    al,0x17
  426275:	xor    DWORD PTR [edi],0x51d8bb8b
  42627b:	push   DWORD PTR ds:0xc78be362
  426281:	xor    al,0xf
  426283:	test   DWORD PTR [ebx],edi
  426285:	fiadd  WORD PTR [edx+ebp*4-0x7aff2705]
  42628c:	sahf   
  42628d:	fiadd  WORD PTR [edx+eiz*4-0x74ff2735]
  426294:	div    DWORD PTR [ebx+ecx*1]
  426297:	push   edi
  426298:	add    eax,0xcf24475c
  42629d:	daa    
  42629e:	cmp    BYTE PTR [edi+eiz*4+0x38],0xfc
  4262a3:	shl    BYTE PTR [eax+esi*4-0x6b653fe8],1
  4262aa:	pop    ds
  4262ab:	adc    al,0xd8
  4262ad:	cwde   
  4262ae:	imul   eax,DWORD PTR [ebp+eiz*1+0x60],0x5b97243f
  4262b6:	aas    
  4262b7:	and    al,0x5f
  4262b9:	es dec ebx
  4262bb:	inc    DWORD PTR [eax]
	...
  4262cd:	add    BYTE PTR [eax],al
  4262cf:	add    BYTE PTR [esi+0x30],dh
  4262d2:	adc    eax,0xbf598b40
  4262d7:	or     al,0xfe
  4262d9:	xchg   ebx,eax
  4262da:	pop    ds
  4262db:	sbb    BYTE PTR [ebx+0x5c],cl
  4262de:	aas    
  4262df:	and    al,0x5f
  4262e1:	sub    BYTE PTR [eax+0x55ec2744],cl
  4262e7:	push   eax
  4262e8:	hlt    
  4262e9:	scas   eax,DWORD PTR es:[edi]
  4262ea:	sbb    al,al
  4262ec:	bound  esp,QWORD PTR ds:0x426203ff
  4262f2:	add    al,BYTE PTR [eax]
  4262f4:	bound  eax,QWORD PTR [edx-0x5]
  4262f7:	ss out dx,al
  4262f9:	sbb    eax,0x4225ff7b
  4262fe:	iret   
  4262ff:	push   esp
  426300:	mov    ch,0xeb
  426302:	add    DWORD PTR [ebx+0x3e],0xfffffff2
  426306:	add    eax,0x90dde643
  42630b:	inc    DWORD PTR ds:0x9454cf42
  426311:	sti    
  426312:	mov    ebx,0xff868e23
  426317:	jmp    DWORD PTR [edx-0x37]
  42631a:	mov    bl,0x23
  42631c:	xchg   BYTE PTR [ebx],cl
  42631e:	or     esi,DWORD PTR [eax]
  426320:	jb     0x4262a4
  426322:	inc    DWORD PTR [edx-0x2f28a5e]
  426328:	push   esi
  426329:	push   ds
  42632a:	adc    ecx,DWORD PTR [ecx+0x4011a68f]
  426330:	(bad)
	...
  426345:	add    BYTE PTR [eax],al
  426347:	add    BYTE PTR [esi],ch
  426349:	es pop ss
  42634b:	std    
  42634c:	xchg   esp,eax
  42634d:	(bad)  
  42634e:	mov    bl,0x23
  426350:	cmp    BYTE PTR [edi+0x427623b3],0xab
  426357:	add    eax,0x13e8b595
  42635c:	lea    ecx,[ebx+edx*8+0x12ee6ffc]
  426363:	inc    eax
  426364:	bound  eax,QWORD PTR [edx+edx*8]
  426367:	mov    BYTE PTR [ebp-0x597f3406],bl
  42636d:	cmc    
  42636e:	inc    edx
  42636f:	adc    esp,DWORD PTR [edx-0xc]
  426372:	jnp    0x426362
  426374:	loope  0x426378
  426376:	or     DWORD PTR [eax],eax
  426378:	into   
  426379:	f2xm1  
  42637b:	xor    dl,bh
  42637d:	fstp   QWORD PTR [edx+0x29e7fe19]
  426383:	add    al,0xe3
  426385:	adc    ebp,edx
  426387:	mov    bh,0x5d
  426389:	push   edx
  42638a:	mov    ebx,0xd77d5032
  42638f:	ret    
  426390:	and    eax,0x1d9dd9c1
  426395:	lods   eax,DWORD PTR ds:[esi]
  426396:	push   0x19
  426398:	mov    edx,0xe303a9eb
  42639d:	sbb    eax,0xad22d1ed
  4263a2:	pop    esi
  4263a3:	and    BYTE PTR [esp+eiz*2-0x405ad05c],ch
  4263aa:	jmp    0x4263e1
	...
  4263bf:	add    BYTE PTR [eax-0x1f],dh
  4263c2:	xchg   edi,eax
  4263c3:	aam    0x7b
  4263c5:	fnstenv [edx]
  4263c7:	sbb    esi,ebx
  4263c9:	jmp    0x1a236777
  4263ce:	popf   
  4263cf:	call   FWORD PTR ds:0x7367f452
  4263d5:	cdq    
  4263d6:	jmp    0xfe978459
  4263db:	add    eax,0x46301973
  4263e0:	popa   
  4263e1:	fst    DWORD PTR [esi+edi*2-0x4bfaa747]
  4263e8:	(bad)  
  4263e9:	fldl2t 
  4263eb:	and    al,0x55
  4263ee:	jecxz  0x426422
  4263f0:	mov    gs,WORD PTR [ecx-0x28fccc8]
  4263f6:	std    
  4263f7:	ret    
  4263f8:	jge    0x42645f
  4263fa:	fs das 
  4263fc:	ja     0x426450
  4263fe:	ret    0x1dd3
  426401:	ror    DWORD PTR [ebp+0x7f],0x25
  426405:	fld    DWORD PTR [eax]
  426407:	fs jmp 0x6cba:0x90aefc61
  42640f:	jmp    0x426472
  426411:	fst    DWORD PTR [eax-0x6f]
  426414:	pop    ss
  426415:	mov    eax,0x15e4e901
  42641a:	adc    al,0x64
  42641c:	mov    eax,ds:0xe2740fd4
  426421:	popa   
  426422:	cld    
  426423:	jle    0x426425
	...
  426435:	add    BYTE PTR [eax],al
  426437:	add    BYTE PTR [eax+0x3a],dh
  42643a:	or     al,0xe9
  42643c:	popa   
  42643d:	fld    DWORD PTR [ecx+ebp*4-0x174f2a33]
  426444:	dec    esi
  426445:	sbb    DWORD PTR [esi],ebp
  426447:	sub    DWORD PTR [esi+0x19],eax
  42644a:	push   ebp
  42644b:	bound  ebx,QWORD PTR [ebp-0x2d]
  42644e:	in     al,dx
  42644f:	fldcw  WORD PTR [edx-0x27]
  426452:	add    BYTE PTR [edx+ebx*8-0x7f],dh
  426456:	std    
  426457:	xor    BYTE PTR ds:[eax+edx*2+0x4060f173],ch
  42645f:	jmp    0x1c2aa7b8
  426464:	jle    0x4264ba
  426466:	sti    
  426467:	gs and ebp,esp
  42646a:	test   BYTE PTR [edx],al
  42646c:	popa   
  42646d:	fld    DWORD PTR [eax]
  42646f:	pop    esp
  426470:	jmp    0x8da2:0x7006fc7d
  426477:	xor    DWORD PTR fs:[edi-0x5],ecx
  42647b:	div    BYTE PTR [eax+0x6dc51554]
  426481:	cdq    
  426482:	add    BYTE PTR [ebp+eiz*8+0x7d],dh
  426486:	cld    
  426487:	ficom  WORD PTR [ebx-0x5e]
  42648a:	push   edx
  42648b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  42648d:	dec    ebp
  42648e:	push   0x111f771
  426493:	add    BYTE PTR [ebx-0xb],cl
  426496:	mov    esp,0x81d57a62
  42649b:	les    eax,FWORD PTR [eax]
	...
  4264ad:	add    BYTE PTR [eax],al
  4264af:	add    BYTE PTR [ebx],bh
  4264b1:	push   esi
  4264b2:	repz push DWORD PTR [ecx+ebx*2]
  4264b6:	test   eax,0x89dd3b00
  4264bb:	push   ebp
  4264bc:	out    0x26,eax
  4264be:	dec    ebx
  4264bf:	(bad)  
  4264c0:	mov    ch,0xf6
  4264c3:	jmp    esp
  4264c5:	in     eax,dx
  4264c6:	outs   dx,BYTE PTR ds:[esi]
  4264c7:	clc    
  4264c8:	in     eax,0xa
  4264ca:	mov    DWORD PTR [ebp-0x59],ecx
  4264cd:	iret   
  4264ce:	shr    eax,cl
  4264d0:	sub    DWORD PTR [ecx],ebx
  4264d2:	sti    
  4264d3:	(bad)  
  4264d4:	jg     0x426474
  4264d6:	pop    eax
  4264d7:	movq   QWORD PTR [edx-0x5],mm4
  4264db:	(bad)  
  4264dc:	sti    
  4264dd:	iret   
  4264de:	jle    0x426490
  4264e0:	xchg   esi,eax
  4264e1:	or     bh,ch
  4264e3:	push   eax
  4264e4:	and    eax,ebp
  4264e6:	mov    BYTE PTR [eax-0x5],al
  4264e9:	iret   
  4264ea:	jle    0x42647c
  4264ec:	mov    eax,ds:0xc568fd0a
  4264f1:	fild   DWORD PTR [eax]
  4264f3:	add    bl,bh
  4264f5:	hlt    
  4264f6:	dec    ecx
  4264f7:	popa   
  4264f8:	mov    edx,0xcbc481dc
  4264fd:	push   ebp
  4264fe:	repz call ebp
  426501:	jbe    0x426566
  426503:	add    al,0xca
  426505:	fadd   QWORD PTR [eax]
  426507:	lea    edi,[esi]
  426509:	(bad)
  42650c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42650d:	sub    al,0x63
  42650f:	enter  0x1500,0xfb
  426513:	inc    BYTE PTR [eax]
	...
  426525:	add    BYTE PTR [eax],al
  426527:	add    BYTE PTR [esi+0x7b400a28],ch
  42652d:	xchg   esp,eax
  42652e:	add    bh,BYTE PTR ss:[edx-0x24]
  426532:	add    BYTE PTR [edi+0x62],dh
  426535:	add    ebx,DWORD PTR [ebx+0x7c081443]
  42653b:	inc    edx
  42653c:	stos   BYTE PTR es:[edi],al
  42653d:	lods   al,BYTE PTR ds:[esi]
  42653e:	add    al,0x50
  426540:	gs and eax,0x42a215c7
  426546:	test   bl,al
  426548:	push   bx
  42654a:	aas    
  42654b:	dec    edi
  42654c:	(bad)  
  42654d:	leave  
  42654e:	ret    0xd7e7
  426551:	hlt    
  426552:	ins    BYTE PTR es:[edi],dx
  426553:	dec    edi
  426554:	enter  0x7a42,0x92
  426558:	shr    BYTE PTR [ebx+0x30],cl
  42655b:	cld    
  42655c:	ffreep st(4)
  42655e:	outs   dx,DWORD PTR ds:[esi]
  42655f:	cli    
  426560:	and    eax,0xda7276cf
  426565:	jle    0x426529
  426567:	jecxz  0x4265cc
  426569:	inc    edx
  42656a:	(bad)  
  42656b:	(bad)  
  42656c:	cli    
  42656d:	mov    ecx,0xa705fc2b
  426572:	inc    edi
  426573:	sbb    BYTE PTR [edx],ah
  426575:	scas   eax,DWORD PTR es:[edi]
  426576:	inc    edi
  426577:	call   0xafbd12e3
  42657c:	out    dx,eax
  42657d:	xchg   esi,eax
  42657e:	xor    bh,ah
  426580:	jo     0x4265dd
  426582:	(bad)  
  426583:	call   DWORD PTR [eax-0x5e392dfe]
  426589:	fmul   DWORD PTR [si]
	...
  4265a0:	adc    al,0x76
  4265a2:	jecxz  0x4265af
  4265a4:	f2xm1  
  4265a6:	jl     0x426533
  4265a8:	cld    
  4265a9:	cmp    esi,edi
  4265ab:	jmp    DWORD PTR [edx-0x4b]
  4265ae:	ss jae 0x426615
  4265b1:	retf   
  4265b2:	(bad)  
  4265b3:	imul   esp,DWORD PTR [ebx+0x4f],0x7c6810e
  4265ba:	clc    
  4265bb:	(bad)  
  4265bc:	xchg   ebp,eax
  4265bd:	inc    ecx
  4265be:	push   DWORD PTR [eax]
  4265c0:	mov    ds:0xe17d4bd8,al
  4265c5:	into   
  4265c6:	add    DWORD PTR ds:0xce32d962,eax
  4265cc:	mov    ds:0x7984e9d4,eax
  4265d1:	inc    esp
  4265d2:	jmp    0x14eec7da
  4265d7:	(bad)  
  4265d8:	jmp    0x1d5c:0xae4af648
  4265df:	call   0xe887c779
  4265e4:	outs   dx,BYTE PTR ds:[esi]
  4265e5:	inc    ecx
  4265e6:	adc    al,0x48
  4265e8:	cmp    eax,0x81c0644f
  4265ed:	xchg   ebp,eax
  4265ee:	adc    DWORD PTR [esi-0x79],0x9980e9d9
  4265f5:	cmc    
  4265f6:	and    eax,0x2df5a147
  4265fb:	pusha  
  4265fc:	fstp   QWORD PTR [ecx-0xa568317]
  426602:	mov    ch,0x1b
	...
  426618:	rcr    bl,0x5a
  42661b:	das    
  42661c:	jmp    0xbe94:0xadc00dcd
  426623:	ret    
  426624:	in     eax,dx
  426625:	pop    ebp
  426626:	jae    0x426634
  426628:	in     eax,0x4e
  42662a:	jmp    0xe92475af
  42662f:	add    esp,DWORD PTR [edx+0x61]
  426632:	(bad)  
  426633:	out    0x7d,eax
  426635:	pusha  
  426636:	lods   eax,DWORD PTR ds:[esi]
  426637:	out    0x6d,eax
  426639:	pusha  
  42663a:	lods   eax,DWORD PTR ds:[esi]
  42663b:	out    0x59,eax
  42663d:	pusha  
  42663e:	test   edi,esp
  426640:	push   ebp
  426641:	bound  ebp,QWORD PTR [ebx+eax*1+0x7ce6c1db]
  426648:	cmp    ebp,esi
  42664a:	ror    DWORD PTR [eax-0x58ff3a46],1
  426650:	loop   0x4265ec
  426652:	and    al,0x99
  426654:	mov    cl,0x63
  426656:	inc    esp
  426657:	or     eax,0xf1689e96
  42665c:	push   ecx
  42665d:	fld    DWORD PTR [eax]
  42665f:	inc    ecx
  426660:	inc    ebp
  426661:	dec    ebp
  426662:	add    cl,ch
  426664:	cmp    al,0xc9
  426666:	add    al,0xae
  426668:	popf   
  426669:	cli    
  42666a:	fs in  eax,0x61
  42666d:	fld    DWORD PTR [eax]
  42666f:	mov    dh,0x7a
  426671:	in     eax,dx
  426672:	adc    ch,BYTE PTR [ecx]
  426674:	pop    dx
  426676:	rcr    BYTE PTR [esp+ebp*2],0x62
  42667a:	inc    esp
  42667b:	lds    eax,FWORD PTR [eax]
	...
  42668d:	add    BYTE PTR [eax],al
  42668f:	add    BYTE PTR ds:0x361afb9e,dl
  426695:	dec    ebp
  426696:	adc    eax,0x995011
  42669b:	ins    BYTE PTR es:[edi],dx
  42669c:	mov    eax,ds:0x669c85dd
  4266a1:	fld    DWORD PTR [eax]
  4266a3:	jbe    0x426672
  4266a5:	stc    
  4266a6:	xor    BYTE PTR [edx+0x4f],ah
  4266a9:	sbb    DWORD PTR ss:[esi+0x34],esp
  4266ad:	dec    ebp
  4266ae:	xchg   DWORD PTR [ebp-0x5e7919fb],esp
  4266b4:	inc    esp
  4266b5:	ss add eax,0x844d3f42
  4266bb:	sub    DWORD PTR [edx+0x7292ff2],ebp
  4266c1:	pop    es
  4266c2:	inc    ebp
  4266c3:	add    eax,0x7484dcc6
  4266c8:	data16 fld DWORD PTR [eax]
  4266cb:	pop    edx
  4266cc:	pop    esi
  4266cd:	mov    bh,0x89
  4266cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266d0:	popf   
  4266d1:	add    eax,0xe4bdb589
  4266d6:	jmp    0x11bcd1b
  4266db:	add    cl,dl
  4266dd:	in     eax,0x31
  4266df:	(bad)  
  4266e1:	(bad)  
  4266e2:	cs js  0x4266c2
  4266e5:	adc    eax,0x75b6fefb
  4266ea:	adc    DWORD PTR [eax+0x7b],eax
  4266ed:	push   esi
  4266ee:	mov    ebx,0x4fd06374
  4266f3:	and    al,0x0
	...
  426705:	add    BYTE PTR [eax],al
  426707:	add    BYTE PTR [ebx+0x4c],dh
  42670a:	mov    ch,0xa
  42670c:	sub    cl,BYTE PTR [ebp+esi*4+0x4a]
  426710:	pushf  
  426711:	sub    DWORD PTR [eax-0x23f5cc38],ecx
  426717:	dec    BYTE PTR [ebx+edx*8]
  42671a:	jecxz  0x426707
  42671c:	cmp    edx,edx
  42671e:	call   0x7f9155a8
  426723:	outs   dx,BYTE PTR ds:[esi]
  426724:	dec    edx
  426725:	fld    DWORD PTR [eax]
  426727:	mov    BYTE PTR [edi+0x41],ch
  42672a:	das    
  42672b:	test   esp,ebx
  42672d:	xchg   ecx,eax
  42672e:	sub    al,0x8b
  426730:	xor    al,0xcc
  426732:	inc    edi
  426733:	and    al,0x2f
  426735:	sub    BYTE PTR [edi+edi*8+0x7b],dl
  426739:	inc    ebp
  42673a:	jle    0x4266fc
  42673c:	push   ss
  42673d:	cmp    DWORD PTR [eax+0x32737cc9],eax
  426743:	dec    esp
  426744:	cmp    DWORD PTR [si],ecx
  426747:	xchg   esp,eax
  426748:	dec    ebx
  426749:	popa   
  42674a:	mov    ebx,0x4d1ea75
  42674f:	push   ecx
  426750:	(bad)  
  426751:	std    
  426752:	dec    ebx
  426753:	xor    al,0x94
  426755:	popf   
  426756:	sbb    eax,eax
  426758:	lea    edx,[ebp+0x51674482]
  42675e:	mov    BYTE PTR [edi+edx*4+0x30],al
  426762:	or     al,0xb7
  426764:	pmullw mm7,QWORD PTR [eax]
  426767:	mov    eax,0xffe45262
	...
  426780:	lods   eax,DWORD PTR ds:[esi]
  426781:	push   esp
  426782:	call   0x677c984e
  426787:	das    
  426788:	pop    ss
  426789:	inc    edx
  42678a:	jmp    DWORD PTR [ebp+0x59]
  42678d:	cli    
  42678e:	mov    ch,0xd
  426790:	clc    
  426791:	and    eax,0x2a9788ce
  426796:	ds loop 0x426815
  426799:	sub    eax,DWORD PTR [ebx-0x7dfc1041]
  42679f:	jmp    0x4267f3
  4267a1:	mov    bh,0x3a
  4267a3:	out    0x68,eax
  4267a5:	sbb    eax,0x7ce9fc2d
  4267aa:	cmp    DWORD PTR [edi+0x427836cf],0x62
  4267b1:	cwde   
  4267b2:	(bad)  
  4267b3:	cld    
  4267b4:	jb     0x42681f
  4267b6:	das    
  4267b7:	(bad)  
  4267b8:	cmp    eax,0x7e837a42
  4267bd:	ret    0xffff
  4267c0:	bound  edx,QWORD PTR [edx]
  4267c2:	sbb    eax,0x2c5441cb
  4267c7:	and    DWORD PTR [edx],0x46
  4267ca:	fisttp WORD PTR [ecx*8+0x627fe3bd]
  4267d1:	inc    edx
  4267d2:	inc    DWORD PTR [edi-0x66]
  4267d5:	add    al,BYTE PTR cs:[ecx+0x7b2450a]
  4267dc:	imul   ecx,DWORD PTR gs:[ebx-0xbe1fdd],0xffffffff
	...
  4267f8:	jl     0x4267fb
  4267fa:	inc    ecx
  4267fb:	pop    es
  4267fc:	ins    DWORD PTR es:[edi],dx
  4267fd:	ret    
  4267fe:	dec    eax
  4267ff:	mov    BYTE PTR [esi],bl
  426801:	(bad)  
  426803:	fistp  DWORD PTR gs:[ebp+0x3]
  426807:	cmp    BYTE PTR [ecx],dl
  426809:	fld1   
  42680b:	jnp    0x426826
  42680d:	cmc    
  42680e:	repnz sbb BYTE PTR [ecx+0x5f],ah
  426812:	mov    ch,0xe7
  426814:	push   esi
  426815:	pusha  
  426816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426817:	out    0x45,eax
  426819:	pusha  
  42681a:	mov    ch,0xe7
  42681c:	jns    0x426880
  42681e:	sar    DWORD PTR [eax+0x9],1
  426821:	cmc    
  426822:	shl    DWORD PTR [ebp-0x14426b26],0xff
  426829:	popa   
  42682a:	call   0x661de6af
  42682f:	xchg   esp,eax
  426830:	jne    0x42687d
  426832:	jmp    0x1da0ceb5
  426837:	loopne 0x42687a
  426839:	stos   BYTE PTR es:[edi],al
  42683a:	sbb    ch,BYTE PTR [ebx]
  42683c:	lods   eax,DWORD PTR ds:[esi]
  42683d:	add    DWORD PTR [ebp+0x44],esp
  426840:	shl    dl,1
  426842:	data16 cmp al,0x4e
  426845:	mov    ah,0xf0
  426847:	mov    edi,0x8ff2f581
  42684c:	std    
  42684d:	or     eax,0x5e5db0e9
  426852:	jmp    0x79d4:0x8aa42d9d
  426859:	pop    esi
  42685a:	sub    eax,0xe0
	...
  42686f:	add    BYTE PTR [ebp-0x26],dh
  426872:	xor    eax,DWORD PTR [edx+ebp*4]
  426875:	(bad)
  426878:	nop
  426879:	lahf   
  42687a:	dec    esi
  42687c:	lods   al,BYTE PTR ds:[esi]
  42687d:	mov    edi,0xbf601ef8
  426882:	mov    edi,0xaed38bcc
  426887:	js     0x42681a
  426889:	cmc    
  42688a:	mov    cl,0x1b
  42688c:	push   eax
  42688d:	mov    ah,0xe8
  42688f:	add    ebp,DWORD PTR [edi-0x7e]
  426892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426893:	xlat   BYTE PTR ds:[ebx]
  426894:	lea    ebp,[ecx-0x95d9c00]
  42689a:	pop    esp
  42689b:	cdq    
  42689c:	dec    edx
  42689d:	xchg   esi,eax
  42689e:	and    al,0x99
  4268a0:	(bad)  
  4268a2:	push   eax
  4268a3:	adc    DWORD PTR [ebp-0x1b16fe54],ebx
  4268a9:	push   ss
  4268aa:	adc    BYTE PTR [esi+ebx*1-0x34],ah
  4268ae:	adc    dh,dh
  4268b0:	adc    BYTE PTR [esi-0x56513ed4],dl
  4268b6:	push   eax
  4268b7:	mov    fs:0xa9974f6,al
  4268bd:	sahf   
  4268be:	and    al,0x3d
  4268c0:	pop    esi
  4268c1:	lds    eax,FWORD PTR [ecx]
  4268c3:	fimul  WORD PTR [eax-0x36]
  4268c6:	jl     0x4268d5
  4268c8:	jb     0x426914
  4268ca:	outs   dx,DWORD PTR ds:[esi]
  4268cb:	loope  0x4268b1
  4268cd:	aam    0x66
  4268cf:	jmp    0xf592b604
	...
  4268e8:	xlat   BYTE PTR ds:[ebx]
  4268e9:	scas   al,BYTE PTR es:[edi]
  4268ea:	and    al,0xde
  4268ec:	iret   
  4268ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268ee:	and    al,0xf9
  4268f0:	les    edi,FWORD PTR [esi-0x694336dc]
  4268f6:	and    al,0x1
  4268f8:	fst    QWORD PTR [ebp+0x4b67f524]
  4268fe:	mov    esi,0x7fd6a26a
  426903:	test   eax,0xc5545219
  426908:	adc    DWORD PTR [ebx+0x6c],edx
  42690b:	int    0x1
  42690d:	push   ebx
  42690e:	inc    esp
  42690f:	lds    ebx,FWORD PTR [ecx+0x59]
  426912:	imul   ch
  426914:	clc    
  426915:	push   edi
  426916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426917:	pop    esp
  426918:	dec    eax
  426919:	dec    ebp
  42691a:	test   DWORD PTR [esi-0x43],edx
  42691d:	fld    QWORD PTR [edi+0x504d10e6]
  426923:	add    bl,dl
  426925:	inc    edx
  426926:	mov    ebx,0x4729ff89
  42692b:	mov    edi,DWORD PTR ds:0xbbfffa52
  426931:	retf   0x89cd
  426934:	dec    ebp
  426935:	ss cli 
  426937:	dec    ebx
  426939:	xchg   edi,eax
  42693a:	test   DWORD PTR [eax],edi
  42693c:	mov    edx,0x630100d5
  426941:	pop    eax
  426942:	sti    
  426943:	dec    DWORD PTR [ebx-0x7e8b4437]
  426949:	dec    esi
  42694a:	mov    ch,0x8e
	...
  426960:	rcl    esp,cl
  426962:	add    BYTE PTR [eax],al
  426964:	add    BYTE PTR [eax+0x57],bl
  426967:	add    DWORD PTR [ebx+0x58483d5],ecx
  42696d:	xor    eax,0xff7bfffa
  426972:	test   DWORD PTR [eax],edi
  426974:	jp     0x42694b
  426976:	add    BYTE PTR [edx+0x4f],ch
  426979:	pop    ss
  42697a:	xchg   BYTE PTR [esi+0xdc53],bh
  426980:	rcr    dl,0x7f
  426983:	ror    BYTE PTR [edi-0x4a49f216],0x35
  42698a:	cli    
  42698b:	dec    DWORD PTR [ebx-0x3a]
  42698e:	cmp    ecx,DWORD PTR [eax]
  426990:	ret    0x8d59
  426993:	and    BYTE PTR [edx],bh
  426995:	fld    QWORD PTR [eax]
  426997:	dec    BYTE PTR [ebp+0xbfffa35]
  42699d:	pop    esi
  42699e:	les    eax,FWORD PTR [ecx+eax*2]
  4269a1:	js     0x426979
  4269a3:	adc    BYTE PTR [eax+0x11236fdc],0x51
  4269aa:	xchg   BYTE PTR [edi+ebx*2+0x31],al
  4269ae:	dec    ebx
  4269af:	lea    esp,[edx+0x76]
  4269b2:	fistp  DWORD PTR [edi-0x6e]
  4269b5:	xchg   edi,eax
  4269b6:	or     edx,DWORD PTR [eax+0x74]
  4269b9:	jb     0x4269ba
  4269bb:	sbb    BYTE PTR [esi-0x79ac8dca],0x6a
  4269c2:	popf   
  4269c3:	or     eax,DWORD PTR [eax]
	...
  4269d5:	add    BYTE PTR [eax],al
  4269d7:	add    BYTE PTR [eax],bh
  4269d9:	sbb    eax,0xc071e7c6
  4269de:	add    al,0x0
  4269e0:	out    0x76,eax
  4269e2:	fild   DWORD PTR [ebx-0x46]
  4269e5:	lea    ebp,[eax]
  4269e7:	std    
  4269e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269e9:	ja     0x4269b4
  4269eb:	pop    edx
  4269ec:	cmp    DWORD PTR [ecx+0x3262f340],esi
  4269f2:	inc    eax
  4269f4:	xor    al,0xbb
  4269f6:	das    
  4269f7:	xor    BYTE PTR [edx+0x635b8189],ah
  4269fd:	xor    bh,bh
  4269ff:	jb     0x426a5b
  426a01:	add    dl,ch
  426a03:	dec    edi
  426a04:	adc    ch,BYTE PTR [edi]
  426a06:	or     ch,al
  426a08:	push   eax
  426a09:	repnz add al,0x87
  426a0c:	in     al,0xfd
  426a0e:	(bad)  
  426a0f:	jmp    DWORD PTR [edx-0x43]
  426a12:	aas    
  426a13:	jb     0x426a7b
  426a15:	inc    esp
  426a16:	aas    
  426a17:	pop    ebp
  426a18:	and    edx,eax
  426a1a:	(bad)  
  426a1b:	pop    ebp
  426a1c:	and    DWORD PTR [ebx-0x221ee4ed],esi
  426a22:	loopne 0x426a2f
  426a24:	bound  eax,QWORD PTR [ebx]
  426a26:	int3   
  426a27:	push   ebp
  426a28:	lea    edi,[ebx+0x16a6c426]
  426a2e:	(bad)  
  426a30:	adc    eax,0xe588ff32
  426a35:	cmp    esi,edi
  426a37:	jmp    DWORD PTR [edx-0x47]
  426a3a:	mov    ebx,0x23
	...
  426a4f:	add    BYTE PTR [edx-0x27],al
  426a52:	outs   dx,BYTE PTR ds:[esi]
  426a53:	sub    BYTE PTR [ecx-0x26],0xe9
  426a57:	add    esp,ebp
  426a59:	pushf  
  426a5a:	or     eax,0xd5fd8dc
  426a5f:	add    esp,DWORD PTR [edx-0x27]
  426a62:	cdq    
  426a63:	sub    BYTE PTR [eax+0x39],dh
  426a66:	xlat   BYTE PTR ds:[ebx]
  426a67:	ret    
  426a68:	int    0xa
  426a6a:	inc    ebp
  426a6b:	jmp    0xd862:0x3e8a0f6
  426a72:	imul   eax,DWORD PTR [edx+0x7ce947b4],0xffffffe6
  426a79:	lods   al,BYTE PTR ds:[esi]
  426a7a:	call   0xa561cc82
  426a7f:	fbstp  TBYTE PTR [ebx-0x27]
  426a82:	outs   dx,BYTE PTR ds:[esi]
  426a83:	pop    es
  426a84:	retf   0x1e5d
  426a87:	clc    
  426a88:	loope  0x426a30
  426a8a:	call   0x1e96cc92
  426a8f:	sbb    ebp,DWORD PTR [ebx-0x1ed81dce]
  426a95:	sbb    dl,ch
  426a97:	sbb    BYTE PTR [esi],0xda
  426a9a:	jmp    0x616d9aa2
  426a9f:	rol    BYTE PTR [ecx-0x7e3f8e16],1
  426aa5:	call   0x5167d894
  426aaa:	and    eax,0x35526de0
  426aaf:	cmp    BYTE PTR [ebp+0x5c],bl
  426ab2:	fwait
  426ab3:	test   DWORD PTR [eax],0x0
	...
  426ac5:	add    BYTE PTR [eax],al
  426ac7:	add    cl,ah
  426ac9:	inc    esi
  426aca:	jmp    0x5c18ccd2
  426acf:	mov    esi,0x3b5ea959
  426ad4:	add    eax,0x6204cb09
  426ad9:	pop    esp
  426ada:	test   eax,0x3ee1f7
  426adf:	jmp    0x364e4445
  426ae4:	adc    ebx,ebp
  426ae6:	xchg   DWORD PTR [ebp+0x1787ef15],esi
  426aec:	imul   edx,DWORD PTR [edx+0x461009cc],0x45b1f96f
  426af6:	push   edx
  426af7:	fst    DWORD PTR [ebp-0x7a]
  426afa:	je     0x426aeb
  426afc:	ror    BYTE PTR [ecx+esi*4-0x18],1
  426b00:	dec    ecx
  426b01:	xchg   edx,eax
  426b02:	and    al,0xdb
  426b04:	ds retf 0xfd24
  426b08:	pop    eax
  426b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b0a:	sti    
  426b0b:	hlt    
  426b0c:	mov    ecx,0x36e940ec
  426b11:	pop    es
  426b12:	and    al,0xe9
  426b14:	popa   
  426b15:	add    dl,al
  426b17:	test   BYTE PTR [edi+eax*8],0x0
  426b1b:	jmp    0x5ec73f81
  426b20:	pop    esi
  426b21:	fld    DWORD PTR [eax]
  426b23:	bound  edi,QWORD PTR [esi]
  426b25:	(bad)  
  426b26:	jmp    0xfb89002f
  426b2b:	out    dx,al
	...
  426b40:	in     eax,dx
  426b41:	pop    esi
  426b42:	add    cl,ch
  426b44:	popa   
  426b45:	pop    eax
  426b46:	jmp    0xcf9cc042
  426b4b:	jmp    0xd0c244b1
  426b50:	push   ebp
  426b51:	retf   0x6277
  426b54:	add    eax,0x746218fa
  426b59:	aad    0xb2
  426b5b:	sub    eax,0x9150e2a2
  426b60:	xor    BYTE PTR [ecx-0x5],al
  426b63:	xchg   esi,eax
  426b64:	test   al,0x15
  426b66:	call   0xfb87b497
  426b6b:	add    ah,bl
  426b6d:	mov    dh,0x57
  426b6f:	add    ebx,edi
  426b71:	fscale 
  426b73:	adc    eax,0x40e7e7
  426b78:	or     DWORD PTR [esi+0x7670121f],0x1671141f
  426b82:	pop    ds
  426b83:	adc    eax,DWORD PTR [ecx+0x2d111f86]
  426b89:	call   0x23c:0xec674483
  426b90:	mov    esp,0x8cff3957
  426b95:	(bad)  
  426b96:	jnp    0x426b92
  426b98:	leave  
  426b99:	mov    BYTE PTR [ebx+eax*4+0x0],dl
  426b9d:	inc    edx
  426b9e:	sti    
  426b9f:	jae    0x426b78
  426ba1:	(bad)  
  426ba2:	jo     0x426bac
	...
  426bb8:	je     0x426bd5
  426bba:	pop    es
  426bbb:	aas    
  426bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426bbd:	fld    DWORD PTR [eax]
  426bbf:	push   DWORD PTR [esi+0x7b401195]
  426bc5:	loop   0x426c28
  426bc7:	cmp    eax,0xfffb26b8
  426bcc:	(bad)  
  426bce:	ss inc esp
  426bd0:	fld    QWORD PTR fs:[eax]
  426bd3:	jle    0x426c52
  426bd5:	ds inc ebp
  426bd7:	daa    
  426bd8:	jnp    0x426bb3
  426bda:	je     0x426be3
  426bdc:	outs   dx,BYTE PTR ds:[esi]
  426bdd:	sub    BYTE PTR [eax+eax*1],ah
  426be0:	dec    ebx
  426be1:	je     0x426c61
  426be3:	mov    bh,BYTE PTR [edi+0x39]
  426be6:	adc    DWORD PTR [edx+eax*1-0x474618b],eax
  426bed:	loopne 0x426c1d
  426bef:	(bad)  
  426bf0:	cld    
  426bf1:	dec    BYTE PTR [ecx-0x7917d8bc]
  426bf7:	dec    esp
  426bf8:	bound  edx,QWORD PTR [esi]
  426bfa:	adc    DWORD PTR [ecx-0x1f4e16a],ecx
  426c00:	and    bl,cl
  426c02:	shl    BYTE PTR [ebx],1
  426c04:	jno    0x426c6d
  426c06:	mov    al,BYTE PTR [ebx-0x7efbb8e5]
  426c0c:	jns    0x426c50
  426c0e:	dec    DWORD PTR [eax-0x17f1d9d7]
  426c14:	sbb    esp,esi
  426c16:	and    eax,0xd0b3d9fc
  426c1b:	inc    BYTE PTR [eax]
	...
  426c2d:	add    BYTE PTR [eax],al
  426c2f:	add    ch,bl
  426c31:	xor    al,BYTE PTR [eax+0x18330a23]
  426c37:	add    eax,0xe6c6aa34
  426c3c:	lds    ecx,FWORD PTR [ebx]
  426c3e:	mov    esp,0xfe6b0d38
  426c43:	jmp    DWORD PTR [edx+0x4b]
  426c46:	cmp    DWORD PTR [esp+ebp*4-0x1d],0xda958825
  426c4e:	mov    bl,0xfe
  426c50:	popf   
  426c51:	xor    dh,BYTE PTR [edx-0x7c]
  426c54:	push   esi
  426c55:	xor    edi,edi
  426c57:	push   DWORD PTR [edx]
  426c59:	inc    ebx
  426c5a:	or     bl,ah
  426c5c:	jo     0x426cd0
  426c5e:	call   FWORD PTR [esp+ebx*1+0x55]
  426c62:	enter  0x9e80,0xde
  426c66:	inc    ecx
  426c67:	dec    esi
  426c68:	adc    edi,edi
  426c6a:	retf   
  426c6b:	push   ebp
  426c6c:	or     eax,0x7e23a3b7
  426c71:	mov    bh,0x2e
  426c73:	mov    BYTE PTR [ebp+0x5dbf7a22],bl
  426c79:	mov    esi,0x3245feff
  426c7e:	sub    eax,0xf4315b44
  426c83:	or     DWORD PTR [ecx+ebx*8],0xffffffe9
  426c87:	add    esp,DWORD PTR [edx+0x4f]
  426c8a:	and    cl,BYTE PTR [ebx]
  426c8c:	and    al,0x11
  426c8e:	fs push ebp
  426c90:	pop    ecx
  426c91:	fucompp 
  426c93:	add    eax,DWORD PTR [eax]
	...
  426ca5:	add    BYTE PTR [eax],al
  426ca7:	add    BYTE PTR [ecx+0x6de02d51],dh
  426cad:	or     BYTE PTR [edi-0x28c68fdc],bl
  426cb3:	ret    
  426cb4:	std    
  426cb5:	dec    BYTE PTR [ebx-0x35]
  426cb8:	hlt    
  426cb9:	inc    ebx
  426cba:	jmp    0xe9bb4fb3
  426cbf:	add    esp,DWORD PTR [edx+0x50]
  426cc2:	imul   ecx,edi,0xffffffdc
  426cc5:	inc    ebx
  426cc6:	jmp    0x6ca3f643
  426ccb:	push   ss
  426ccc:	push   ecx
  426ccd:	xchg   edx,eax
  426cce:	outs   dx,BYTE PTR ds:[esi]
  426ccf:	ss mov ebp,0xbe244149
  426cd5:	pop    esp
  426cd6:	sub    DWORD PTR [edi-0x4c53af89],ebp
  426cdc:	in     al,0x9c
  426cde:	lds    edx,FWORD PTR [ebx]
  426ce0:	loope  0x426cfa
  426ce2:	popf   
  426ce3:	lock push edx
  426ce5:	adc    dl,al
  426ce7:	mov    dh,0x65
  426ce9:	push   esi
  426cea:	lods   al,BYTE PTR ds:[esi]
  426ceb:	or     eax,0x7a289d5f
  426cf0:	and    ebp,edi
  426cf2:	fld    QWORD PTR [eax+0xf7fdcbd]
  426cf8:	adc    dl,BYTE PTR [esi+0x2a]
  426cfb:	(bad)  
  426cfc:	sbb    eax,0x4fb7f444
  426d01:	cdq    
  426d02:	jmp    0x65188e8d
  426d07:	inc    esp
  426d08:	rcl    ah,1
  426d0a:	outs   dx,BYTE PTR ds:[esi]
  426d0b:	rol    BYTE PTR [eax],1
	...
  426d1d:	add    BYTE PTR [eax],al
  426d1f:	add    BYTE PTR [ecx-0x7e379013],al
  426d25:	in     eax,0x0
  426d27:	icebp  
  426d28:	fidiv  DWORD PTR es:[edx+eiz*8+0x1c]
  426d2d:	add    bl,BYTE PTR [ebx+0xd96741]
  426d33:	sbb    edi,DWORD PTR [edi-0x569d0cf]
  426d39:	not    BYTE PTR [eax]
  426d3b:	bound  esi,QWORD PTR [ecx+0x66401d3a]
  426d41:	fld    DWORD PTR [edi+0x7fd2fa25]
  426d47:	icebp  
  426d48:	imul   ebx,ecx,0xb240dc74
  426d4e:	or     BYTE PTR [edx-0x3a],ch
  426d51:	into   
  426d52:	add    BYTE PTR [esi-0x15],bl
  426d55:	es push cs
  426d57:	test   eax,0x41cd5061
  426d5c:	inc    ecx
  426d5d:	(bad)  
  426d5e:	sti    
  426d5f:	inc    esi
  426d60:	fstp   QWORD PTR [esp+edx*2-0x18]
  426d64:	popa   
  426d65:	fnstcw WORD PTR [edi+0xd]
  426d68:	ds inc edx
  426d6a:	ss dec edi
  426d6c:	test   BYTE PTR [ebx-0x5],0xe9
  426d70:	shl    BYTE PTR [esp+edi*1-0x18],cl
  426d74:	popa   
  426d75:	fnstenv [esi+ebp*8-0x14]
  426d79:	adc    al,0xe8
  426d7b:	mov    ds:0x9c00d961,eax
  426d80:	inc    eax
  426d81:	out    0xdc,eax
  426d83:	fild   DWORD PTR [eax]
	...
  426d95:	add    BYTE PTR [eax],al
  426d97:	add    BYTE PTR [ecx-0x154e19be],ah
  426d9d:	xor    BYTE PTR [ebp+ecx*8-0x19],0x9d
  426da2:	sbb    DWORD PTR ds:0x5615c894,esp
  426da8:	ins    DWORD PTR es:[edi],dx
  426da9:	push   ecx
  426daa:	mov    ah,BYTE PTR [ebp+0x66]
  426dad:	fld    DWORD PTR [eax]
  426daf:	pop    esp
  426db0:	sub    al,ah
  426db2:	push   eax
  426db3:	add    BYTE PTR [ebx],dh
  426db5:	fidiv  DWORD PTR [eax-0x44a5fb02]
  426dbb:	je     0x426dd0
  426dbd:	push   ebx
  426dbe:	lea    eax,[eax+0x5700d64a]
  426dc4:	sar    DWORD PTR [ebp+0x47],cl
  426dc7:	inc    esp
  426dc9:	pop    ecx
  426dca:	mov    ebx,0x887f0374
  426dcf:	into   
  426dd0:	jecxz  0x426e26
  426dd2:	(bad)  
  426dd3:	(bad)  
  426dd4:	sti    
  426dd5:	push   ss
  426dd6:	pop    ebp
  426dd7:	pop    ebp
  426dd8:	inc    eax
  426dd9:	test   BYTE PTR [edx-0x3e],dl
  426ddc:	(bad)  
  426dde:	xor    eax,eax
  426de0:	add    BYTE PTR [esi],0x33
  426de3:	and    DWORD PTR [ebx],0xd0000dd
  426de9:	pop    ds
  426dea:	push   eax
  426deb:	push   esi
  426dec:	inc    esi
  426ded:	lds    ecx,FWORD PTR [edi+0x1]
  426df0:	retf   
  426df1:	aad    0x55
  426df3:	mov    ecx,eax
  426df5:	push   edx
  426df6:	aaa    
  426df7:	xchg   BYTE PTR [esi],bh
  426df9:	imul   DWORD PTR [edi+0x4]
	...
  426e10:	inc    edx
  426e11:	and    dl,BYTE PTR [ebp+0x7a230b42]
  426e17:	pop    eax
  426e18:	mov    edx,0x517200d5
  426e1d:	pop    ss
  426e1e:	pop    ebp
  426e1f:	cmp    ecx,DWORD PTR [ecx+0x6a]
  426e22:	or     cl,BYTE PTR [ecx-0x581e6]
  426e28:	jnp    0x426e9c
  426e2a:	shl    DWORD PTR [eax+edx*1-0x6d],1
  426e2e:	pop    eax
  426e2f:	jmp    0x3d9160
  426e34:	rcr    BYTE PTR [edx+0x29f05650],1
  426e3a:	push   ebx
  426e3b:	push   ss
  426e3c:	cmp    ebx,ebp
  426e3e:	push   ebp
  426e3f:	mov    esp,DWORD PTR [edx+0x29]
  426e42:	aad    0xd8
  426e44:	enter  0x8a42,0x84
  426e48:	pop    edx
  426e49:	xor    edi,edi
  426e4b:	call   FWORD PTR ds:0xa2883738
  426e51:	xor    dh,BYTE PTR [edi+ecx*2-0x15b7015]
  426e58:	sub    eax,0xbe9c8633
  426e5d:	xor    edi,edi
  426e5f:	call   FWORD PTR ds:0xe707aa81
  426e65:	mov    bh,0xfc
  426e67:	dec    BYTE PTR ds:0x54fb433
  426e6d:	imul   ebp,DWORD PTR [edx-0x1b5010e9],0xfe
	...
  426e87:	add    ch,dh
  426e89:	xor    dh,BYTE PTR [edi+ecx*2-0x3c79ff13]
  426e90:	lods   eax,DWORD PTR ds:[esi]
  426e92:	leave  
  426e93:	add    esi,DWORD PTR [edx]
  426e95:	mov    edx,0x32633781
  426e9a:	jmp    edi
  426e9c:	inc    esi
  426e9d:	in     eax,0x21
  426e9f:	cld    
  426ea0:	cmp    BYTE PTR [esi],ah
  426ea2:	mov    ebp,0x259aaa88
  426ea7:	or     ah,BYTE PTR [edx+0x32]
  426eaa:	mov    WORD PTR [edx],?
  426eac:	dec    esi
  426ead:	inc    esp
  426eae:	mov    edi,0xe0b7d6ff
  426eb3:	(bad)  
  426eb4:	popf   
  426eb5:	xor    ch,BYTE PTR [edi-0x76625304]
  426ebb:	arpl   WORD PTR [bp+si],si
  426ebe:	dec    DWORD PTR [edi-0x25]
  426ec1:	lahf   
  426ec2:	mov    eax,0x86327dfe
  426ec7:	pushf  
  426ec8:	sbb    dh,BYTE PTR [ecx]
  426eca:	(bad)  
  426ecb:	(bad)  
  426ecc:	fcmovnu st,st(1)
  426ece:	cmp    BYTE PTR [edi+0x20e94064],0x37
  426ed5:	push   esp
  426ed6:	sub    eax,0x625265e8
  426edb:	jg     0x426f29
  426edd:	inc    eax
  426ede:	jmp    0xe8bb4d71
  426ee3:	add    esp,DWORD PTR [edx-0x57]
  426ee6:	pusha  
  426ee7:	xor    BYTE PTR [ebp+0x3e9da],0x0
	...
  426efe:	add    BYTE PTR [eax],al
  426f00:	in     eax,0x5f
  426f02:	ins    DWORD PTR es:[edi],dx
  426f03:	add    ah,BYTE PTR [edx-0x27]
  426f06:	jo     0x426e88
  426f08:	in     eax,0xd9
  426f0a:	jmp    0x5da24c12
  426f0f:	add    ah,BYTE PTR [edx-0x27]
  426f12:	jo     0x426e94
  426f14:	aad    0xd9
  426f16:	jmp    0x5da2541e
  426f1b:	add    ah,BYTE PTR [edx-0x27]
  426f1e:	pusha  
  426f1f:	adc    ch,0xd9
  426f22:	jmp    0x6e69562a
  426f27:	dec    eax
  426f28:	ds lahf 
  426f2a:	scas   al,BYTE PTR es:[edi]
  426f2b:	inc    ebp
  426f2c:	popa   
  426f2d:	fnstenv [ebx-0x22cf4374]
  426f33:	add    esp,DWORD PTR [edx-0x27]
  426f36:	xor    eax,edi
  426f38:	adc    ecx,0x545e97e8
  426f3e:	sbb    ebp,DWORD PTR [ebx]
  426f40:	sub    DWORD PTR [edx+ebp*8],eax
  426f43:	add    ebx,ebx
  426f45:	push   ss
  426f46:	mov    ebx,0xb6d96145
  426f4b:	mov    ecx,0xad18542e
  426f50:	popa   
  426f51:	sbb    bl,ch
  426f53:	cmp    ebx,edx
  426f55:	cwde   
  426f56:	jmp    0x1132ee9
  426f5b:	call   0x629a48c1
  426f60:	push   edx
  426f61:	pop    esp
  426f62:	leave  
  426f63:	pop    ebp
	...
  426f78:	pop    esp
  426f79:	push   edx
  426f7a:	add    DWORD PTR [ebx+0x67],edx
  426f7d:	cmp    al,0x10
  426f7f:	push   0xffffff9d
  426f81:	fiadd  DWORD PTR [edi+0x54]
  426f84:	jl     0x426f8f
  426f86:	cld    
  426f87:	add    BYTE PTR [esi+eiz*4-0x389e16ff],ah
  426f8e:	pop    ss
  426f8f:	(bad)  
  426f90:	fsubr  QWORD PTR [edx+0x5061e901]
  426f96:	or     al,0x61
  426f98:	fist   DWORD PTR [edi]
  426f9a:	je     0x426f80
  426f9c:	dec    ecx
  426f9d:	xor    al,0x36
  426f9f:	xchg   esi,eax
  426fa0:	jne    0x426f37
  426fa2:	aaa    
  426fa3:	dec    edi
  426fa4:	into   
  426fa5:	aas    
  426fa6:	sti    
  426fa7:	jmp    0xbcc9ab9f
  426fac:	add    ecx,ebp
  426fae:	inc    eax
  426faf:	jmp    0xe87ec486
  426fb4:	popa   
  426fb5:	fst    DWORD PTR [eax+0x66]
  426fb8:	sub    eax,0x66b58a51
  426fbd:	fld    DWORD PTR [eax]
  426fbf:	inc    ecx
  426fc0:	iret   
  426fc1:	add    DWORD PTR [ecx],eax
  426fc3:	jmp    0xe89ec4a0
  426fc8:	popa   
  426fc9:	fld    DWORD PTR [ebp+0x50d5da29]
  426fcf:	ss mov ebx,0x61a90e7a
  426fd5:	push   edx
  426fd6:	adc    BYTE PTR [ecx-0x46ff26a2],0x0
	...
  426fed:	add    BYTE PTR [eax],al
  426fef:	add    BYTE PTR [ebp+eiz*1-0x73],bh
  426ff3:	outs   dx,DWORD PTR ds:[esi]
  426ff4:	(bad)  
  426ff5:	ds sti 
  426ff7:	jmp    0x115adcd
  426ffc:	adc    BYTE PTR [edi+0x5b],cl
  426fff:	add    DWORD PTR [ebx-0x4e1c1726],ecx
  427005:	fiadd  DWORD PTR [eax]
  427007:	pop    edi
  427008:	inc    esp
  427009:	xlat   BYTE PTR ds:[ebx]
  42700a:	test   BYTE PTR [ebx+edi*1+0x85b5ad5],cl
  427011:	test   BYTE PTR [ebx+ecx*4-0x51],dl
  427015:	xor    DWORD PTR [edi],eax
  427017:	mov    ebp,DWORD PTR [edx]
  427019:	jo     0x427015
  42701b:	mov    cl,BYTE PTR [edx+esi*8]
  42701e:	int    0x22
  427020:	dec    edx
  427021:	fidivr DWORD PTR [edi-0x40]
  427024:	ja     0x427071
  427026:	mov    BYTE PTR [esi+0xd593],cl
  42702c:	push   ecx
  42702d:	aam    0x50
  42702f:	call   0x3dab5d
  427034:	xchg   DWORD PTR [edx-0x249ee092],ebx
  42703a:	mov    edi,ecx
  42703c:	repz scas al,BYTE PTR es:[edi]
  42703e:	and    DWORD PTR [ecx],eax
  427040:	or     edx,DWORD PTR [ecx-0x45]
  427043:	je     0x427057
  427045:	push   ebx
  427046:	lea    ebx,[eax+0x6a00d9fa]
  42704c:	cli    
  42704d:	mov    ebx,esp
  42704f:	add    ebp,DWORD PTR [eax-0x2b]
  427052:	add    BYTE PTR [eax+eax*1+0x0],al
	...
  427065:	add    BYTE PTR [eax],al
  427067:	add    BYTE PTR [ebx+0x7b320466],cl
  42706d:	in     eax,dx
  42706e:	jnp    0x427070
  427070:	mov    ebx,0x1d8d51d9
  427075:	push   ds
  427076:	cli    
  427077:	dec    ebx
  427079:	mov    al,ch
  42707b:	inc    esp
  42707c:	addr16 inc ecx
  42707e:	sti    
  42707f:	(bad)  
  427080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427081:	stc    
  427082:	adc    DWORD PTR [eax-0x75],eax
  427085:	push   esp
  427086:	mov    ebp,0xff316258
  42708b:	dec    DWORD PTR [ebp+0xdffffce]
  427091:	pop    ebp
  427092:	xchg   ch,cl
  427094:	mov    bh,BYTE PTR [esi-0x548a03e7]
  42709a:	aas    
  42709b:	jae    0x4270b5
  42709d:	mov    ebx,0x30635775
  4270a2:	inc    DWORD PTR [ecx-0x37]
  4270a5:	sbb    BYTE PTR [eax-0x47ab18ae],0xfe
  4270ac:	dec    ebp
  4270ad:	xor    ecx,DWORD PTR [eax-0x283bc536]
  4270b3:	(bad)  
  4270b4:	cmp    eax,0x877344b7
  4270b9:	mov    ch,0xc5
  4270bb:	add    edx,DWORD PTR [edx+0x512ff36b]
  4270c1:	repnz add al,0x89
  4270c4:	in     al,dx
  4270c5:	call   0xffc3:0xb762ffff
	...
  4270e0:	fimul  DWORD PTR [esi]
  4270e2:	xchg   esp,edi
  4270e4:	int3   
  4270e5:	idiv   bh
  4270e7:	jmp    DWORD PTR [edx-0x45]
  4270ea:	adc    BYTE PTR [edi+0x63],0x32
  4270ee:	(bad)  
  4270ef:	cld    
  4270f0:	push   edi
  4270f1:	data16 out dx,al
  4270f3:	aas    
  4270f4:	(bad)  
  4270f5:	in     al,dx
  4270f6:	enter  0x7623,0x31
  4270fa:	mov    edx,0x3b3dd550
  4270ff:	adc    DWORD PTR [edx],esp
  427101:	xor    cl,BYTE PTR [ecx-0x47dd81bd]
  427107:	pop    esp
  427108:	sbb    al,0xf0
  42710a:	or     BYTE PTR [eax],al
  42710c:	jmp    0x1146547f
  427111:	gs mov ch,0x88
  427114:	mov    bl,0xd9
  427116:	(bad)  
  427117:	dec    edx
  427118:	push   ebx
  427119:	and    al,ah
  42711b:	retf   
  42711c:	gs dec esi
  42711e:	xor    ebp,0xe0634e36
  427124:	test   BYTE PTR [ecx+ebp*8],bh
  427127:	or     al,0x26
  427129:	xor    bl,BYTE PTR [ecx-0xd2a5f80]
  42712f:	test   BYTE PTR [ebp+0x3303a9e7],0x3c
  427136:	and    BYTE PTR [esi-0x4b],bl
  427139:	fucompp 
  42713b:	add    ecx,esp
  42713d:	mov    ecx,0xdab1855e
  427142:	jmp    0x42714a
	...
  427157:	add    bl,bl
  427159:	int3   
  42715a:	add    DWORD PTR [esi-0x25053adc],0x97ddf5a9
  427164:	dec    esi
  427165:	or     BYTE PTR [eax+0x74e994da],bl
  42716b:	ret    0xcc77
  42716e:	and    eax,0x66e58b42
  427173:	inc    ebx
  427174:	popa   
  427175:	test   eax,0xa5701d34
  42717a:	fcmovnb st,st(3)
  42717c:	std    
  42717d:	push   esi
  42717e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42717f:	psraw  mm3,QWORD PTR [eax]
  427182:	cld    
  427183:	stc    
  427184:	fimul  DWORD PTR [edx+0x15]
  427187:	add    esp,DWORD PTR [edx-0x27]
  42718a:	outs   dx,BYTE PTR ds:[esi]
  42718b:	unpckhps xmm6,XMMWORD PTR [ecx]
  42718e:	mov    cl,0xda
  427190:	(bad)  
  427191:	cmp    ebx,DWORD PTR [esi-0x7b]
  427194:	xor    edx,ebx
  427196:	jmp    0x671c849e
  42719b:	out    0xf5,eax
  42719d:	fsub   DWORD PTR [edx+0xa0f7d8]
  4271a3:	call   0x82b14b09
  4271a8:	frstor [eax]
  4271aa:	je     0x42719a
  4271ac:	jmp    0xfb3d:0x753be80d
  4271b3:	fs out 0xff,eax
  4271b6:	add    ecx,ebp
  4271b8:	popa   
  4271b9:	test   eax,0xdcfb
	...
  4271ce:	add    BYTE PTR [eax],al
  4271d0:	cmp    eax,0xb6e940ea
  4271d5:	popf   
  4271d6:	pop    ebp
  4271d7:	arpl   WORD PTR [edx],sp
  4271d9:	mov    eax,ds:0x5a61e5be
  4271de:	in     al,dx
  4271df:	or     DWORD PTR ds:0x877252a8,edx
  4271e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271e6:	mov    DWORD PTR [ebp+0x42],eax
  4271e9:	jecxz  0x4271d3
  4271eb:	pop    ebx
  4271ec:	cmp    eax,0x5672fb3e
  4271f1:	push   edi
  4271f2:	repnz xor al,0x61
  4271f5:	pop    es
  4271f6:	rol    eax,0xb7
  4271f9:	cmp    bh,bl
  4271fb:	jmp    0xe16730d4
  427200:	in     al,dx
  427201:	pushf  
  427202:	add    al,0xa7
  427204:	and    dh,bh
  427206:	adc    al,0xe9
  427208:	loop   0x427247
  42720a:	jne    0x4271e8
  42720c:	fimul  DWORD PTR [esi+0x1549e524]
  427212:	in     al,0x7e
  427214:	pop    ecx
  427215:	dec    edi
  427216:	jl     0x4271e5
  427218:	cmc    
  427219:	push   ecx
  42721a:	lea    ebx,[ebp+0x5f]
  42721d:	fld    DWORD PTR [eax]
  42721f:	mov    esi,0x5faca989
  427224:	jns    0x42727d
  427226:	xlat   BYTE PTR ds:[ebx]
  427227:	xlat   BYTE PTR ds:[ebx]
  427228:	pop    ss
  427229:	or     ch,dh
  42722b:	bound  ebx,QWORD PTR [eax+0x4f]
  42722e:	push   esp
  42722f:	add    BYTE PTR [edi+0x29],ch
  427232:	imul   eax,DWORD PTR [eax],0x0
	...
  427248:	je     0x4272b3
  42724a:	pop    ds
  42724b:	dec    eax
  42724c:	mov    eax,0x5f74fc91
  427251:	or     eax,0xeaf74fc
  427256:	push   esp
  427257:	call   0x3cb2d2
  42725c:	add    bl,BYTE PTR [ecx]
  42725e:	pop    ds
  42725f:	cmp    dh,bh
  427261:	xchg   esp,eax
  427262:	outs   dx,DWORD PTR ds:[esi]
  427263:	lock adc BYTE PTR es:[edi],bl
  427267:	sbb    bl,bl
  427269:	out    dx,al
  42726a:	or     dh,bh
  42726c:	je     0x42724d
  42726e:	mov    BYTE PTR [edi+ebx*4+0x2a],cl
  427272:	xor    dl,dl
  427274:	push   esp
  427275:	test   al,0xc2
  427277:	inc    edx
  427278:	mov    edi,0x1450c96
  42727d:	dec    ebp
  42727e:	inc    edi
  42727f:	and    al,0x4f
  427281:	dec    ebx
  427282:	inc    edi
  427283:	and    al,0x63
  427285:	in     eax,dx
  427286:	jns    0x4272c0
  427288:	hlt    
  427289:	fiadd  WORD PTR [eax+0x6e0b33c5]
  42728f:	mov    al,0xc0
  427291:	shr    al,1
  427293:	mov    ebx,0x8b00d603
  427298:	(bad)
  42729b:	cmp    bl,bh
  42729d:	aad    0x86
  42729f:	inc    esp
  4272a0:	pop    ds
  4272a1:	sub    bl,BYTE PTR [esi+ebx*2+0x46]
  4272a5:	jp     0x427227
  4272a7:	les    ebp,FWORD PTR [ebx]
  4272a9:	xchg   esp,eax
  4272aa:	sldt   WORD PTR [eax]
	...
  4272bd:	add    BYTE PTR [eax],al
  4272bf:	add    BYTE PTR [esi+0x4a],cl
  4272c2:	out    0x51,eax
  4272c4:	dec    edx
  4272c5:	adc    BYTE PTR [ebp-0x75],0x22
  4272c9:	xchg   DWORD PTR [eax+0xd55783],ecx
  4272cf:	add    BYTE PTR [edx-0x49],ah
  4272d2:	cwde   
  4272d3:	pop    es
  4272d4:	(bad)  [edi+edx*1-0x78]
  4272d8:	and    eax,0xac30ae48
  4272dd:	enter  0xfbc0,0xba
  4272e1:	pop    eax
  4272e2:	sbb    ah,bh
  4272e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272e5:	mov    bl,0x3f
  4272e7:	jae    0x42731c
  4272e9:	pause  
  4272eb:	or     esp,edi
  4272ed:	je     0x427306
  4272ef:	push   ebp
  4272f0:	xor    dl,BYTE PTR [esi+0x5]
  4272f3:	std    
  4272f4:	outs   dx,DWORD PTR ds:[esi]
  4272f5:	dec    esp
  4272f6:	cmc    
  4272f7:	aas    
  4272f8:	bound  edi,QWORD PTR [edi+0x4c]
  4272fb:	ds cmp ecx,esi
  4272fe:	nop
  4272ff:	xor    DWORD PTR [ebx],ebp
  427301:	mov    ebx,0xb7427303
  427306:	mov    esi,0x8965d6f
  42730b:	mov    DWORD PTR [edx+0x4e42862a],esp
  427311:	stc    
  427312:	add    DWORD PTR [edx+0x4a],0xfffffff3
  427316:	stos   BYTE PTR es:[edi],al
  427317:	add    DWORD PTR ds:0xa2119316,edi
  42731d:	inc    edx
  42731e:	rol    BYTE PTR [ecx],cl
  427320:	arpl   WORD PTR [edx-0x1],ax
  427323:	jb     0x427325
	...
  427335:	add    BYTE PTR [eax],al
  427337:	add    BYTE PTR [edi-0x3d],bl
  42733a:	inc    esi
  42733b:	cld    
  42733c:	or     DWORD PTR [ebx],ebp
  42733e:	aam    0xc6
  427340:	mov    ds:0xa60c3e3b,eax
  427345:	push   ecx
  427346:	mov    cl,0x88
  427348:	sbb    DWORD PTR [ebx-0x22],ebx
  42734b:	std    
  42734c:	std    
  42734d:	pop    edi
  42734e:	mov    ecx,0xbdd91c88
  427353:	(bad)  
  427354:	and    BYTE PTR [ebx],bh
  427356:	inc    DWORD PTR [eax+0x52b602f6]
  42735c:	xor    al,0xd9
  42735e:	outs   dx,BYTE PTR ds:[esi]
  42735f:	nop
  427360:	or     DWORD PTR [ecx+0x19923b6e],0x6655c210
  42736a:	fwait
  42736b:	icebp  
  42736c:	outs   dx,BYTE PTR ds:[esi]
  42736d:	popf   
  42736e:	xor    DWORD PTR [ecx-0x751ee51e],esi
  427374:	or     ebp,edi
  427376:	(bad)  [ebx]
  427378:	enter  0x2b02,0x19
  42737c:	loope  0x427397
  42737e:	popf   
  42737f:	add    BYTE PTR [eax+0x19],dl
  427382:	adc    bl,bl
  427384:	mov    WORD PTR [eax],?
  427386:	jmp    0xf23fa511
  42738b:	mov    WORD PTR [edi+0x76eb4641],gs
  427391:	cmp    BYTE PTR [ebx-0x4e02de74],al
  427397:	pop    ebp
  427398:	push   ebp
  427399:	add    dl,ch
  42739b:	add    eax,DWORD PTR [eax]
	...
  4273ad:	add    BYTE PTR [eax],al
  4273af:	add    BYTE PTR ds:0x62045ce9,dl
  4273b5:	mov    edi,0xe3d14364
  4273ba:	dec    ebx
  4273bb:	frstor [ebx]
  4273bd:	stos   DWORD PTR es:[edi],eax
  4273be:	mov    ah,0xa1
  4273c0:	jp     0x4273dc
  4273c2:	cmp    dh,BYTE PTR [edi+edi*4]
  4273c5:	fs and eax,0x6cbf99e0
  4273cb:	inc    ebx
  4273cc:	mov    cl,0xe3
  4273ce:	inc    ebx
  4273cf:	frstor [ebx]
  4273d1:	stos   DWORD PTR es:[edi],eax
  4273d2:	test   al,0xa1
  4273d4:	pop    edx
  4273d5:	sbb    dl,BYTE PTR [edx]
  4273d7:	pop    eax
  4273d8:	fdiv   DWORD PTR [ebx+0x49]
  4273db:	add    ah,BYTE PTR [edx-0x27]
  4273de:	xor    al,BYTE PTR [edx-0x5f]
  4273e1:	std    
  4273e2:	fild   DWORD PTR [ebx]
  4273e4:	sbb    al,0x9d
  4273e6:	(bad)
  4273e9:	ss add ah,bl
  4273ec:	(bad)
  4273ef:	jmp    0x7c4dec50
  4273f4:	adc    eax,0x285154fc
  4273f9:	xlat   BYTE PTR ds:[ebx]
  4273fa:	sti    
  4273fb:	push   esi
  4273fc:	(bad)  
  4273fd:	inc    edi
  4273fe:	test   DWORD PTR [edi-0x13],edx
  427401:	mov    ecx,DWORD PTR [ebp+0x50d795ad]
  427407:	jb     0x427424
  427409:	inc    eax
  42740a:	push   0x85354b0e
  42740f:	sub    ecx,edi
  427411:	in     eax,dx
  427412:	and    BYTE PTR [ebp+0x0],0x0
	...
  427425:	add    BYTE PTR [eax],al
  427427:	add    BYTE PTR [ebp-0x5a93ff75],dh
  42742d:	sti    
  42742e:	sbb    BYTE PTR [ebp-0x47ff3e73],bl
  427434:	mov    cl,0x60
  427436:	retf   0xeb11
  427439:	cli    
  42743a:	sti    
  42743b:	(bad)  
  42743c:	in     al,dx
  42743d:	ja     0x4274b3
  42743f:	aad    0xd6
  427441:	and    eax,0x3643fae8
  427446:	sti    
  427447:	jno    0x42746b
  427449:	sti    
  42744a:	push   cs
  42744b:	shl    BYTE PTR [ebp-0x3d],cl
  42744e:	add    DWORD PTR [eax],edi
  427450:	push   cs
  427451:	(bad)  
  427452:	retf   0xd0c1
  427455:	sti    
  427456:	sti    
  427457:	(bad)  
  427458:	out    0x9a,al
  42745a:	and    al,0xda
  42745c:	fsub   st,st(4)
  42745e:	call   0xfb79898e
  427463:	bound  esp,QWORD PTR [esi+edi*1-0x269e21c9]
  42746a:	sbb    BYTE PTR ds:0x62008b02,0xfb
  427471:	adc    cl,BYTE PTR [esi]
  427473:	sub    DWORD PTR [esi-0x53],esp
  427476:	(bad)  
  427477:	call   DWORD PTR [esi+ecx*8-0x32]
  42747b:	sub    bh,0x16
  42747e:	adc    DWORD PTR [eax],eax
  427480:	out    0x36,eax
  427482:	stos   DWORD PTR es:[edi],eax
  427483:	add    eax,esp
  427485:	jns    0x427502
  427487:	jl     0x4274f0
  427489:	sub    bh,bl
  42748b:	push   cs
	...
  4274a0:	inc    edi
  4274a1:	xor    al,0xfc
  4274a3:	jmp    FWORD PTR [eax+eiz*2]
  4274a6:	sub    BYTE PTR [eax-0x36],0xda
  4274aa:	add    BYTE PTR [eax+0x1c],dl
  4274ad:	sub    bl,bl
  4274af:	adc    bh,bl
  4274b1:	fiadd  DWORD PTR [edi-0x79c2a8bc]
  4274b7:	mov    ebx,0xddab
  4274bc:	(bad)  [ebx-0x34]
  4274bf:	call   0x3e8be4
  4274c4:	neg    BYTE PTR [ebx+esi*2+0x68cd0040]
  4274cb:	mul    BYTE PTR [ebx+0x7b6a35db]
  4274d1:	popa   
  4274d2:	inc    edi
  4274d3:	and    al,0x8f
  4274d5:	ins    DWORD PTR es:[edi],dx
  4274d6:	dec    ebx
  4274d7:	mov    edi,DWORD PTR [ebp+eax*1-0x5]
  4274db:	and    al,0x3c
  4274dd:	iret   
  4274de:	mov    eax,ebx
  4274e0:	xor    ebx,DWORD PTR [eax-0x9]
  4274e3:	add    BYTE PTR [ebx],bh
  4274e5:	arpl   sp,cx
  4274e7:	mov    DWORD PTR [ebp+0x6990e8d9],eax
  4274ed:	into   
  4274ee:	cld    
  4274ef:	mov    esi,DWORD PTR [edi+0x39]
  4274f2:	jge    0x3cf7ad
  4274f8:	or     ebp,DWORD PTR [edx-0x4]
  4274fb:	aad    0x91
  4274fd:	fwait
  4274fe:	pop    esp
  4274ff:	pop    esi
  427500:	dec    esi
  427501:	jb     0x427483
  427503:	les    eax,FWORD PTR [eax]
	...
  427515:	add    BYTE PTR [eax],al
  427517:	add    BYTE PTR [edx+0x0],ah
  42751a:	aas    
  42751b:	add    esp,DWORD PTR [edx-0x26]
  42751e:	add    eax,0xf3249e8b
  427523:	dec    edi
  427524:	fld    DWORD PTR [esi-0x50be6dd9]
  42752a:	adc    cl,BYTE PTR [ecx+0x7336bbba]
  427530:	mov    cl,0xaa
  427532:	mov    esp,DWORD PTR [ebx]
  427534:	jbe    0x4274f9
  427536:	push   ebp
  427537:	arpl   WORD PTR [ebx+0x40],sp
  42753a:	jmp    DWORD PTR [ebx+0x3c]
  42753d:	cli    
  42753e:	test   eax,0x27eee8ff
  427543:	mov    WORD PTR [edi-0x1a17ed09],es
  427549:	ret    0x4323
  42754c:	xor    DWORD PTR [ebp-0x53],ecx
  42754f:	mov    BYTE PTR [ebx-0x57d778a],cl
  427555:	inc    eax
  427556:	(bad)  
  427557:	push   DWORD PTR [edx]
  427559:	adc    dh,BYTE PTR [esi]
  42755b:	xchg   BYTE PTR [esi],ah
  42755d:	sbb    al,0xf7
  42755f:	cld    
  427560:	dec    edi
  427561:	loopne 0x427554
  427563:	aas    
  427564:	bound  ebp,QWORD PTR [ebx+0x40636358]
  42756a:	dec    DWORD PTR [ebp+ebp*2-0x46]
  42756e:	idiv   esi
  427570:	push   ebp
  427571:	inc    ebx
  427572:	add    BYTE PTR [edx-0xbe3e],0xd9
  427579:	(bad)  
  42757a:	loopne 0x4275d3
	...
  427590:	jmp    0x7b381ea0
  427595:	aas    
  427596:	iret   
  427597:	mov    ah,BYTE PTR [edx+ebp*1-0x1b851851]
  42759e:	adc    eax,0x582e7fc
  4275a3:	xchg   DWORD PTR [edi],ebx
  4275a5:	fucompp 
  4275a7:	add    esp,DWORD PTR [edx+0x2b]
  4275aa:	and    eax,0x1cdaa9e0
  4275af:	push   es
  4275b0:	jmp    0x42754f
  4275b2:	lds    edi,FWORD PTR [ebx-0x2e124e1e]
  4275b8:	pop    esi
  4275b9:	xchg   bp,ax
  4275bb:	add    al,0x62
  4275bd:	fnstcw WORD PTR [ebx-0x40]
  4275c0:	adc    DWORD PTR [ebp+0x4ade04e7],0xbf6203e9
  4275ca:	and    DWORD PTR [edi-0x520a02df],eax
  4275d0:	sub    eax,0x4fb3f434
  4275d5:	cdq    
  4275d6:	jmp    0x6d28175b
  4275db:	dec    edi
  4275dc:	cmp    eax,0x3403e9da
  4275e1:	xor    al,0xd4
  4275e3:	aaa    
  4275e4:	jae    0x42757f
  4275e6:	jmp    0xea473b16
  4275eb:	add    edx,DWORD PTR [ebx+0x7]
  4275ee:	push   eax
  4275ef:	xor    al,0x66
  4275f1:	fldl2t 
  4275f3:	or     al,0x0
	...
  427605:	add    BYTE PTR [eax],al
  427607:	add    BYTE PTR [eax+eiz*2+0x346c8474],al
  42760e:	jmp    0xd23f9799
  427613:	and    BYTE PTR [ebx],0x61
  427616:	(bad)  
  427617:	add    esp,DWORD PTR [edx-0x79]
  42761a:	dec    edi
  42761b:	add    al,0xb8
  42761d:	fnstcw WORD PTR [ecx]
  42761f:	sub    al,0x36
  427621:	mov    eax,ds:0x629714d2
  427626:	and    eax,0xdc3451e0
  42762b:	and    edx,DWORD PTR [ebx-0x67]
  42762e:	jmp    0x14017b9
  427633:	or     ebp,esp
  427635:	pushaw 
  427637:	call   0x72934f9d
  42763c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42763d:	cmp    al,0x9c
  42763f:	les    ebp,FWORD PTR [esi+0x35]
  427642:	xchg   DWORD PTR [ecx-0x1e86ca84],edx
  427648:	jmp    0xe7d9:0x61e8646e
  42764f:	push   ss
  427650:	adc    esi,DWORD PTR [eax+eax*2-0x50]
  427654:	sbb    eax,0xd5ec10f8
  427659:	pusha  
  42765a:	retf   0xd52
  42765d:	popa   
  42765e:	repz rcl BYTE PTR [edi-0x14],cl
  427662:	call   FWORD PTR [ebx-0x1604ccff]
  427668:	mov    ebx,ebp
  42766a:	imul   ecx
	...
  427680:	popa   
  427681:	inc    edx
  427682:	(bad)  
  427683:	stc    
  427684:	and    esp,esi
  427686:	xchg   DWORD PTR [ebp-0x16997443],esp
  42768c:	(bad)  
  42768d:	pop    edx
  42768e:	inc    edx
  42768f:	in     eax,dx
  427690:	cmp    DWORD PTR [ebx+0x416e1e1e],edi
  427696:	or     eax,0x58f7a562
  42769b:	and    DWORD PTR [ecx-0x75],0x50
  42769f:	adc    edi,esp
  4276a1:	clc    
  4276a2:	sti    
  4276a3:	(bad)  
  4276a4:	in     al,0x73
  4276a6:	callw  0xe210
  4276aa:	xlat   BYTE PTR ds:[ebx]
  4276ab:	xchg   ecx,eax
  4276ac:	fcomp  QWORD PTR [edi+0x60]
  4276af:	call   0x244e5015
  4276b4:	jbe    0x427643
  4276b6:	call   0xfb78c0eb
  4276bb:	push   ds
  4276bc:	jecxz  0x427715
  4276be:	pusha  
  4276bf:	add    BYTE PTR [edx],bh
  4276c1:	xlat   BYTE PTR ds:[ebx]
  4276c2:	add    BYTE PTR [edi],cl
  4276c4:	mov    dl,0xf7
  4276c6:	std    
  4276c7:	call   esp
  4276c9:	(bad)  
  4276ca:	outs   dx,DWORD PTR ds:[esi]
  4276cb:	and    al,0x2f
  4276cd:	enter  0xdc0e,0x9
  4276d1:	pop    ss
  4276d2:	sti    
  4276d3:	pop    esi
  4276d4:	inc    ebp
  4276d5:	push   0x5a30c389
  4276da:	mov    edi,0xfb35c944
  4276df:	imul   edi,ebx,0x9caac7
	...
  4276f5:	add    BYTE PTR [eax],al
  4276f7:	add    dl,bh
  4276f9:	(bad)  
  4276fa:	add    bh,bh
  4276fc:	mov    esi,0xcb40115a
  427701:	iret   
  427702:	rcr    DWORD PTR [ebx],cl
  427704:	jnp    0x4276d4
  427706:	rol    ebx,cl
  427708:	add    ebp,DWORD PTR [eax+eiz*1]
  42770b:	cmp    ch,cl
  42770d:	call   0xf8df:0x5a778b4e
  427714:	cmp    bh,cl
  427716:	add    ecx,DWORD PTR [ebx]
  427718:	mov    ebx,0xfd5551d6
  42771d:	outs   dx,DWORD PTR ds:[esi]
  42771e:	arpl   WORD PTR [eax-0x74ff296f],bx
  427724:	and    al,dh
  427726:	push   cs
  427727:	in     al,dx
  427728:	mov    DWORD PTR [esi],edx
  42772a:	sti    
  42772b:	sub    bh,0x3a
  42772e:	pop    ss
  42772f:	add    BYTE PTR [eax],cl
  427731:	sbb    DWORD PTR [edi],0x3f597b20
  427737:	and    al,0x83
  427739:	pop    ecx
  42773a:	xchg   DWORD PTR [ebx+eiz*4],esp
  42773d:	fld    QWORD PTR [eax]
  42773f:	add    BYTE PTR [ecx+eiz*1+0x1f],bh
  427743:	sbb    BYTE PTR [edi-0x2dffc4a8],al
  427749:	pop    ebx
  42774a:	xchg   ebx,eax
  42774b:	add    DWORD PTR [edx+0x40],esp
  42774e:	jmp    edi
  427750:	call   0xeb34:0xd9fc0e6c
  427757:	adc    DWORD PTR [edx+0xa38240],esp
	...
  42776d:	add    BYTE PTR [eax],al
  42776f:	add    BYTE PTR [esi-0x6c],al
  427772:	add    al,0x0
  427774:	bound  eax,QWORD PTR [eax-0x7e]
  427777:	mov    ds:0x45846,eax
  42777c:	bound  eax,QWORD PTR [eax-0x80]
  42777f:	add    DWORD PTR [esi-0x68],0xffffffff
  427783:	jmp    DWORD PTR [edx-0x47]
  427786:	adc    BYTE PTR [ebx-0x7500bf9d],0xde
  42778d:	sbb    eax,DWORD PTR [edi-0x50c02202]
  427793:	(bad)  
  427794:	ficomp WORD PTR [ebx]
  427796:	jae    0x427796
  427798:	int    0x3f
  42779a:	imul   ecx,DWORD PTR [ebp+0x22],0x40
  42779e:	push   cs
  42779f:	aad    0xe9
  4277a1:	int3   
  4277a2:	lods   al,BYTE PTR ds:[esi]
  4277a3:	adc    eax,0xe9974022
  4277a8:	popa   
  4277a9:	inc    eax
  4277aa:	dec    DWORD PTR [edx-0x19b2422]
  4277b0:	popf   
  4277b1:	aas    
  4277b2:	popf   
  4277b3:	jmp    DWORD PTR ds:0xe68a3703
  4277b9:	and    eax,DWORD PTR [ebx-0x7dc07a02]
  4277bf:	ret    
  4277c0:	outs   dx,BYTE PTR ds:[esi]
  4277c1:	mov    ecx,0x40638b82
  4277c6:	dec    DWORD PTR [edx-0x90dc1a]
  4277cc:	gs aas 
  4277ce:	scas   eax,DWORD PTR es:[edi]
  4277cf:	cld    
  4277d0:	xor    al,0x74
  4277d2:	aas    
  4277d3:	dec    edi
	...
  4277e8:	mov    dl,0xf4
  4277ea:	add    al,0x8b
  4277ec:	sahf   
  4277ed:	(bad)  ds:0x58ddc8c
  4277f3:	xchg   esp,eax
  4277f4:	in     al,0x95
  4277f6:	or     eax,0xf3363d98
  4277fb:	adc    BYTE PTR [esi],ch
  4277fd:	(bad)  
  4277fe:	jmp    0xe7ad9da0
  427803:	jle    0x4277ee
  427805:	cmc    
  427806:	popa   
  427807:	add    al,0x62
  427809:	fld    st(1)
  42780b:	ss ja  0x42783e
  42780e:	mov    ds:0x11f5a17f,al
  427813:	jnp    0x4277f7
  427815:	dec    ecx
  427816:	call   0x25a0da1e
  42781b:	call   0x84a8da65
  427820:	in     al,0x30
  427822:	jmp    0xce3799a5
  427827:	jp     0x42780b
  427829:	popa   
  42782a:	call   0xada0da32
  42782f:	out    0x75,eax
  427831:	mov    DWORD PTR [eax-0x50],esi
  427834:	cmp    ebp,0x181b060
  42783a:	popa   
  42783b:	mov    al,0x81
  42783d:	jmp    0xe17db284
  427842:	ins    BYTE PTR es:[edi],dx
  427843:	enter  0x9d41,0xbf
  427847:	add    esi,DWORD PTR [edx]
  427849:	xor    BYTE PTR [edx],dl
  42784b:	test   DWORD PTR [eax],eax
	...
  42785d:	add    BYTE PTR [eax],al
  42785f:	add    BYTE PTR [ecx+0x41c874dd],ah
  427865:	mov    DWORD PTR [edi-0x4626f40d],ecx
  42786b:	adc    BYTE PTR [esi-0x5e7ad614],cl
  427871:	fnsave [eax+eax*8+0x41]
  427875:	std    
  427876:	cdq    
  427877:	jp     0x42781a
  427879:	cmc    
  42787a:	add    BYTE PTR [ebp-0x7edb6328],cl
  427880:	imul   edx,DWORD PTR [edi],0x6372e7f5
  427886:	inc    esp
  427887:	add    eax,0x6d7f5742
  42788c:	pusha  
  42788d:	fld    DWORD PTR [eax]
  42788f:	bound  ebp,QWORD PTR [esi+0x38]
  427892:	jbe    0x42784d
  427894:	push   edx
  427895:	sub    eax,0x2ffff166
  42789a:	cli    
  42789b:	cld    
  42789c:	jmp    0x732bbd5e
  4278a1:	retf   
  4278a2:	fs sti 
  4278a4:	and    DWORD PTR [eax],esi
  4278a6:	test   BYTE PTR [ecx-0x163c1f2b],ch
  4278ac:	add    DWORD PTR [edx+0x40],esp
  4278af:	jmp    0x9247011c
  4278b4:	pop    edi
  4278b5:	jmp    0xe9a8:0xfc556cc0
  4278bc:	popa   
  4278bd:	fld    DWORD PTR [edi+0x92469a1]
  4278c3:	jmp    0x4278c8
	...
  4278d8:	popa   
  4278d9:	push   ebp
  4278da:	rcl    ah,0xbe
  4278dd:	pusha  
  4278de:	mov    DWORD PTR [ecx-0x1],0xe54efb2d
  4278e5:	outs   dx,DWORD PTR ds:[esi]
  4278e6:	jne    0x427913
  4278e8:	and    al,0x81
  4278ea:	and    al,ch
  4278ec:	popa   
  4278ed:	(bad)  [ebx]
  4278ef:	jg     0x4278cf
  4278f1:	out    0x1,eax
  4278f3:	jmp    0x13a33a59
  4278f8:	popa   
  4278f9:	fldenv [esi-0x17]
  4278fc:	mov    ah,0x9f
  4278fe:	sti    
  4278ff:	cld    
  427900:	in     eax,0xc9
  427902:	inc    eax
  427903:	jmp    0x13da0ee
  427908:	out    0x25,eax
  42790a:	add    cl,BYTE PTR ss:[edx-0x25]
  42790e:	add    BYTE PTR [eax+eax*2-0x26],dh
  427912:	mov    dl,0x8b
  427914:	adc    ebx,esp
  427916:	add    BYTE PTR [eax],al
  427918:	adc    BYTE PTR [ecx+esi*2-0x1c0d4feb],0x2
  427920:	sbb    ebx,edi
  427922:	cld    
  427923:	lea    ecx,[edi+0x3b00a341]
  427929:	fucomi st,st(0)
  42792b:	sbb    edi,eax
  42792d:	fdivp  st(4),st
  42792f:	jmp    0x4278be
  427931:	mov    dl,0x8f
  427933:	sbb    DWORD PTR [ebx-0x2c],0x0
  427937:	add    BYTE PTR [eax],al
  427939:	lods   al,BYTE PTR ds:[esi]
  42793a:	xchg   edi,eax
  42793b:	add    DWORD PTR [eax],eax
	...
  42794d:	add    BYTE PTR [eax],al
  42794f:	add    BYTE PTR [ebx],cl
  427951:	fisttp DWORD PTR ds:0xd46f84
  427957:	add    BYTE PTR [eax-0x4fea8a6],al
  42795d:	fidivr DWORD PTR [ecx]
  42795f:	rcl    dh,1
  427961:	fnstcw WORD PTR [edi-0x40]
  427964:	xlat   BYTE PTR ds:[ebx]
  427965:	sub    eax,0x7ee3cb88
  42796a:	lock (bad) 
  42796c:	cmp    al,0xd2
  42796e:	(bad)  
  42796f:	xor    dh,BYTE PTR [edx-0x53]
  427972:	inc    edi
  427973:	and    al,0xb7
  427975:	das    
  427976:	mov    ch,0xc1
  427978:	inc    eax
  427979:	popa   
  42797a:	or     BYTE PTR [eax],0xba
  42797d:	fiadd  DWORD PTR [eax]
  42797f:	test   DWORD PTR [ebx+0x51],ecx
  427982:	(bad)  
  427983:	cmp    bl,bh
  427985:	xor    ch,BYTE PTR [edi+0x10]
  427988:	cmp    eax,0x974c8394
  42798d:	es jnp 0x427989
  427990:	xchg   DWORD PTR [eax-0x1f],ecx
  427993:	jmp    0x46e9fa
  427998:	bound  ecx,QWORD PTR [edi]
  42799a:	push   ebp
  42799b:	mov    esi,0x77fecd9
  4279a0:	arpl   WORD PTR [eax-0x1],ax
  4279a3:	or     BYTE PTR [edi+esi*1-0x7d],0x3d
  4279a8:	arpl   WORD PTR [eax-0x1],ax
  4279ab:	mov    bl,dh
  4279ad:	fild   DWORD PTR [eax-0x1]
  4279b0:	cmp    eax,0xfcaf40
	...
  4279c5:	add    BYTE PTR [eax],al
  4279c7:	add    BYTE PTR [eax+edi*1+0x1f66750a],ch
  4279ce:	clc    
  4279cf:	xor    ecx,DWORD PTR [eax+eax*1+0x5]
  4279d3:	and    DWORD PTR [edx],0x3f
  4279d6:	mov    BYTE PTR [ebx+eiz*2],dl
  4279d9:	inc    eax
  4279da:	push   ebp
  4279dc:	out    0xd3,al
  4279de:	inc    eax
  4279df:	inc    DWORD PTR ds:0xad73f740
  4279e5:	cmp    DWORD PTR [ebx-0xbfe9dd],eax
  4279eb:	call   FWORD PTR [ebp-0x5b]
  4279ee:	aas    
  4279ef:	and    DWORD PTR [edx],0x27
  4279f2:	mov    al,bh
  4279f4:	bound  eax,QWORD PTR [eax-0x1]
  4279f7:	call   0x97b93578
  4279fc:	arpl   WORD PTR [eax-0x1],ax
  4279ff:	imul   esp,DWORD PTR [ebx-0x5b],0x3fbe2383
  427a06:	(bad)  
  427a07:	call   DWORD PTR [edx]
  427a09:	cwde   
  427a0a:	adc    BYTE PTR [ecx],bl
  427a0c:	bound  eax,QWORD PTR [eax-0x7d]
  427a0f:	mov    edi,0x88b4252f
  427a14:	jmp    0x62427ed8
  427a19:	dec    edi
  427a1a:	pop    ss
  427a1b:	jmp    0x427a43
  427a1d:	dec    DWORD PTR [edx]
  427a1f:	mov    bl,dh
  427a21:	fmul   st,st(5)
  427a23:	or     edi,DWORD PTR [ebp+0x2d]
  427a26:	jmp    0x16164de
  427a2b:	rol    DWORD PTR [eax],1
	...
  427a3d:	add    BYTE PTR [eax],al
  427a3f:	add    BYTE PTR [esi+0x6d7a0a2e],dl
  427a45:	push   ebx
  427a46:	add    bl,BYTE PTR [eax-0x189adbe0]
  427a4c:	sub    edx,ebx
  427a4e:	jmp    0x661ec756
  427a53:	jle    0x427a9a
  427a55:	sub    eax,0xf5f980e9
  427a5a:	mov    ecx,0xe9d96204
  427a5f:	cld    
  427a60:	rcr    BYTE PTR [ecx],1
  427a62:	gs inc esp
  427a64:	push   esi
  427a65:	push   esi
  427a66:	fs add al,0x62
  427a69:	fldcw  WORD PTR [esi+0x6]
  427a6c:	mov    cl,BYTE PTR [ecx-0x14]
  427a6f:	add    esp,DWORD PTR [edx+0x5e]
  427a72:	pop    ebp
  427a73:	call   0x42c5151
  427a78:	lods   eax,DWORD PTR ds:[esi]
  427a79:	pop    esi
  427a7a:	ins    DWORD PTR es:[edi],dx
  427a7b:	call   0x42c5475
  427a80:	popf   
  427a81:	pusha  
  427a82:	fwait
  427a83:	or     eax,0x446ce195
  427a88:	pop    edi
  427a89:	lea    ebx,[ecx]
  427a8b:	jg     0x427a7e
  427a8d:	cmc    
  427a8e:	gs pop es
  427a90:	(bad)  
  427a91:	fstp   DWORD PTR [eax+eax*4-0x7f]
  427a95:	sub    eax,0x416203e9
  427a9a:	pop    edx
  427a9b:	pusha  
  427a9c:	mov    ch,0x2c
  427a9e:	pop    esi
  427a9f:	adc    al,0xe0
  427aa1:	and    edx,ebp
  427aa3:	rol    DWORD PTR [eax],0x0
	...
  427ab6:	add    BYTE PTR [eax],al
  427ab8:	ficom  DWORD PTR [ebx-0x5a227927]
  427abe:	(bad)  
  427abf:	adc    eax,0xe800d21f
  427ac4:	hlt    
  427ac5:	test   BYTE PTR [ebp-0x792c15d7],0xaf
  427acc:	mov    al,dh
  427ace:	cs fwait
  427ad0:	arpl   WORD PTR [ebx+0x43eb6219],sp
  427ad6:	add    ecx,ebp
  427ad8:	popa   
  427ad9:	mov    edi,0xf7ea7400
  427ade:	cld    
  427adf:	jmp    0x1935445
  427ae4:	or     eax,0xdde900d2
  427ae9:	imul   esi,DWORD PTR [ebp-0xf],0xfffffff7
  427aed:	pusha  
  427aee:	(bad)  
  427aef:	shr    DWORD PTR [eax+0x29],1
  427af2:	sti    
  427af3:	(bad)  
  427af4:	stos   BYTE PTR es:[edi],al
  427af5:	push   ds
  427af6:	call   0xfb6f8b64
  427afb:	mov    edi,0xe9ccf7e5
  427b00:	popa   
  427b01:	fsin   
  427b03:	in     eax,0xe5
  427b05:	loop   0x427b01
  427b07:	scas   al,BYTE PTR es:[edi]
  427b08:	push   esi
  427b09:	pop    ecx
  427b0a:	mov    esp,0xfb2c35cd
  427b0f:	jmp    0xa9d85975
  427b14:	in     eax,0x6b
  427b16:	or     esp,DWORD PTR [ebp+0x68]
  427b19:	cs sti 
  427b1b:	xchg   BYTE PTR [eax],al
	...
  427b2d:	add    BYTE PTR [eax],al
  427b2f:	add    BYTE PTR [esi-0x58],ch
  427b32:	and    al,0xd5
  427b34:	pop    edx
  427b35:	and    eax,ebp
  427b37:	leave  
  427b38:	outs   dx,DWORD PTR ds:[esi]
  427b39:	sub    eax,0x348a62fb
  427b3e:	inc    esi
  427b3f:	push   edi
  427b40:	outs   dx,BYTE PTR ds:[esi]
  427b41:	sub    eax,0x2d67eee9
  427b46:	sti    
  427b47:	mov    eax,0x7d24602c
  427b4c:	popa   
  427b4d:	fld    DWORD PTR [eax]
  427b4f:	add    BYTE PTR [ebx],dh
  427b51:	push   esp
  427b52:	sar    edi,1
  427b54:	push   esp
  427b55:	pop    ecx
  427b56:	ja     0x427b7c
  427b58:	lahf   
  427b59:	xlat   BYTE PTR ds:[ebx]
  427b5a:	mov    DWORD PTR ds:0x3b29df,esi
  427b60:	(bad)  
  427b62:	std    
  427b63:	je     0x427b04
  427b65:	jae    0x427b63
  427b67:	(bad)  
  427b68:	clc    
  427b69:	pop    ebx
  427b6a:	pop    ds
  427b6b:	pusha  
  427b6c:	jnp    0x427bb1
  427b6e:	add    eax,0x5b32dfff
  427b73:	jmp    FWORD PTR [ebp-0x55]
  427b76:	inc    edi
  427b77:	and    al,0x27
  427b79:	iret   
  427b7a:	xor    edi,0x3d88df35
  427b80:	imul   esp,DWORD PTR [ebx],0x3b
  427b83:	add    dh,al
  427b85:	sbb    DWORD PTR [edi],ebx
  427b87:	xor    BYTE PTR [ebx-0x22],ch
  427b8a:	aam    0x8d
  427b8c:	inc    edi
  427b8d:	cmp    DWORD PTR [ebx-0x18],ebp
  427b90:	and    ebp,DWORD PTR [edx]
  427b92:	cld    
  427b93:	inc    DWORD PTR [eax]
	...
  427ba5:	add    BYTE PTR [eax],al
  427ba7:	add    BYTE PTR [esi-0x47fe04f],al
  427bad:	(bad)  
  427bae:	add    al,ch
  427bb0:	(bad)  
  427bb1:	sub    esp,edi
  427bb3:	push   DWORD PTR [esi+0x59]
  427bb6:	pop    ds
  427bb7:	nop
  427bb8:	or     edx,edi
  427bba:	add    BYTE PTR [eax-0x2c],dl
  427bbd:	out    0x80,al
  427bbf:	jl     0x427be0
  427bc1:	inc    ebx
  427bc2:	sti    
  427bc3:	jae    0x427b92
  427bc5:	fild   QWORD PTR [edi+0x24]
  427bc8:	addr16 (bad) 
  427bcb:	lea    edi,[edi]
  427bcd:	cmp    DWORD PTR [ebx+0x1],esi
  427bd0:	mov    ebx,0x7cff50d6
  427bd5:	stos   BYTE PTR es:[edi],al
  427bd6:	xchg   DWORD PTR [edi+ebp*1],esp
  427bd9:	aam    0x0
  427bdb:	add    BYTE PTR [edx-0x5],ah
  427bde:	and    BYTE PTR [ebx],0xd2
  427be1:	inc    ecx
  427be2:	(bad)  
  427be3:	dec    esi
  427be5:	bound  edi,QWORD PTR [edi-0x2bcd8201]
  427beb:	dec    DWORD PTR [ebp-0x45dc874b]
  427bf1:	inc    eax
  427bf2:	(bad)  
  427bf3:	dec    DWORD PTR [edx+0x75fc3452]
  427bf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bfa:	mov    eax,0xc0fb4e23
  427bff:	and    ecx,DWORD PTR [edx+0x10]
  427c02:	js     0x427c43
  427c04:	(bad)  
  427c05:	enter  0x2f1d,0x62
  427c09:	inc    eax
  427c0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c0b:	pop    ebp
	...
  427c20:	scas   eax,DWORD PTR es:[edi]
  427c21:	inc    edi
  427c22:	jp     0x427c06
  427c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c25:	inc    DWORD PTR [ebx-0xc37985]
  427c2b:	push   eax
  427c2c:	(bad)  
  427c2d:	jecxz  0x427caa
  427c2f:	jnp    0x427bb7
  427c31:	sub    al,0x7a
  427c33:	jmp    0xff423710
  427c38:	sbb    eax,0x63bc7d40
  427c3d:	inc    ecx
  427c3e:	(bad)  
  427c3f:	(bad)  
  427c40:	fld    DWORD PTR [eax+0x75393e91]
  427c46:	jl     0x427c8b
  427c48:	inc    esi
  427c49:	sub    al,0xb1
  427c4b:	std    
  427c4c:	and    DWORD PTR [ebx],edi
  427c4e:	push   ecx
  427c4f:	lock fsubr DWORD PTR [ebx]
  427c52:	leave  
  427c53:	add    eax,ebp
  427c55:	or     dl,BYTE PTR [ecx-0x34]
  427c58:	call   0x5eca4898
  427c5d:	push   0x77
  427c5f:	adc    ecx,DWORD PTR [ebx-0x7bf4aecd]
  427c65:	or     edx,DWORD PTR [ecx-0x3f]
  427c68:	popa   
  427c69:	fnstenv [ecx]
  427c6b:	test   BYTE PTR [ecx+ebp*1+0x5f6203e9],dl
  427c72:	in     eax,dx
  427c73:	int3   
  427c74:	ficomp DWORD PTR [ebp+eax*1+0x10d553ec]
  427c7b:	jl     0x427c9d
  427c7d:	fldenv [edx+ecx*1-0x6f220ae7]
	...
  427c98:	sahf   
  427c99:	mov    ah,BYTE PTR [ecx+0x6a]
  427c9c:	jge    0x427c76
  427c9e:	jmp    0xe8ac66a6
  427ca3:	add    al,0x62
  427ca5:	fnstenv [edx-0x1ee8f558]
  427cab:	add    esi,DWORD PTR [eax+edx*4-0x2a7e7892]
  427cb2:	mov    dh,0x11
  427cb4:	loopne 0x427cde
  427cb6:	jge    0x427ca1
  427cb8:	mov    dl,0x54
  427cba:	(bad)  
  427cbb:	fist   WORD PTR [ecx-0xc]
  427cbe:	scas   eax,DWORD PTR es:[edi]
  427cbf:	jle    0x427d22
  427cc1:	retf   0x17
  427cc4:	dec    esp
  427cc5:	lahf   
  427cc6:	popa   
  427cc7:	push   es
  427cc8:	jae    0x427ce3
  427cca:	push   cs
  427ccb:	nop
  427ccc:	inc    ecx
  427ccd:	shl    edx,0xbf
  427cd0:	add    eax,0xfb8f2a9c
  427cd5:	test   BYTE PTR [edx],dl
  427cd7:	stos   BYTE PTR es:[edi],al
  427cd8:	and    edx,esi
  427cda:	jmp    0x3ad20d91
  427cdf:	jge    0x427d5a
  427ce1:	std    
  427ce2:	cmc    
  427ce3:	jl     0x427d08
  427ce5:	push   ebx
  427ce6:	sub    eax,0x805459e0
  427ceb:	jge    0x427cba
  427ced:	pop    esi
  427cee:	cmp    cl,0xe1
  427cf1:	adc    ecx,ebp
  427cf3:	add    esp,DWORD PTR [edx+0x56]
  427cf6:	add    BYTE PTR ds:0x8127ccc2,ch
	...
  427d10:	div    DWORD PTR [edx+0x53871aff]
  427d16:	dec    esp
  427d17:	add    eax,0x568582ba
  427d1c:	rcl    dl,cl
  427d1e:	xchg   ch,ah
  427d20:	mov    eax,0x162afa95
  427d25:	daa    
  427d26:	out    0xea,al
  427d28:	and    esp,DWORD PTR [edi]
  427d2a:	sti    
  427d2b:	test   al,0xc7
  427d2d:	stos   DWORD PTR es:[edi],eax
  427d2e:	out    0xde,eax
  427d30:	adc    edx,DWORD PTR [esp+0x546e7b01]
  427d37:	lds    edi,FWORD PTR [eax+0x51]
  427d3a:	shr    DWORD PTR [eax],0x46
  427d3d:	fidivr DWORD PTR [edi+0x8]
  427d40:	addr16 push ebx
  427d42:	mov    eax,0xe8cda9
  427d47:	sub    BYTE PTR [ecx-0x5ed47824],al
  427d4d:	inc    eax
  427d4e:	add    al,0xe2
  427d50:	mov    al,ds:0x440d4c52
  427d55:	push   edx
  427d56:	test   al,0x29
  427d58:	stos   BYTE PTR es:[edi],al
  427d59:	call   0xd9a6e75e
  427d5e:	adc    dl,0x60
  427d61:	scas   eax,DWORD PTR es:[edi]
  427d62:	adc    dh,dh
  427d64:	mov    bl,0x67
  427d66:	jg     0x427d33
  427d68:	or     ah,BYTE PTR [edi-0x22]
  427d6b:	jmp    0x427d0d
  427d6d:	inc    eax
  427d6e:	add    ah,dl
  427d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d71:	push   edx
  427d72:	nop
  427d73:	sub    DWORD PTR [eax],eax
	...
  427d85:	add    BYTE PTR [eax],al
  427d87:	add    BYTE PTR [edx-0x18],bh
  427d8a:	add    BYTE PTR [edx+0x693d6b67],dl
  427d90:	push   esi
  427d91:	fidiv  DWORD PTR [edx-0x21]
  427d94:	fisubr DWORD PTR [ebp-0x3f]
  427d97:	add    BYTE PTR [eax-0x4],cl
  427d9a:	cmp    al,0x8a
  427d9c:	push   ebx
  427d9d:	sbb    al,0x87
  427d9f:	inc    eax
  427da0:	mov    ebx,0xeb101c4
  427da5:	pop    esp
  427da6:	ja     0x427dcc
  427da8:	pop    edi
  427da9:	fnsave [eax+eiz*1-0x44]
  427dad:	mov    esp,eax
  427daf:	inc    dx
  427db1:	fimul  DWORD PTR ds:0x827a46b6
  427db7:	inc    esi
  427db8:	mov    DWORD PTR [eax],esp
  427dba:	mov    ch,0xc2
  427dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dbd:	mov    ds:0x897c0445,al
  427dc2:	mov    edx,0x51a0266
  427dc7:	add    DWORD PTR [ebp+0x24],0xffffffe8
  427dcb:	push   cs
  427dcc:	repz adc DWORD PTR [ebx+0x55a37a6e],eax
  427dd3:	add    al,bl
  427dd5:	pusha  
  427dd6:	add    BYTE PTR [ebx-0x81d97b],al
  427ddc:	cmp    al,0xa8
  427dde:	aas    
  427ddf:	dec    DWORD PTR [edi+ebx*8-0x78]
  427de3:	inc    esp
  427de4:	daa    
  427de5:	sub    ebx,DWORD PTR [eax+0x2b]
  427de8:	sbb    edi,DWORD PTR [edi-0x78]
  427deb:	mov    BYTE PTR [eax],0x0
	...
  427dfe:	add    BYTE PTR [eax],al
  427e00:	ins    DWORD PTR es:[edi],dx
  427e01:	jo     0x427e55
  427e03:	ret    0xdb43
  427e06:	sub    esp,0x5c886c3f
  427e0c:	sub    DWORD PTR [di-0x75],edx
  427e10:	retf   0xdada
  427e13:	push   edi
  427e14:	sub    BYTE PTR [ecx+0x1f],0x14
  427e18:	adc    bl,0x38
  427e1b:	repz in al,dx
  427e1d:	pop    ebx
  427e1e:	mov    dl,0x0
  427e20:	sti    
  427e21:	fimul  DWORD PTR [edi+0x33]
  427e24:	bound  ebx,QWORD PTR [ebp-0x31]
  427e27:	rcr    DWORD PTR [ecx-0x6fab70bd],1
  427e2d:	imul   eax,DWORD PTR [eax-0x7b03a83a],0xff147e7b
  427e37:	mov    DWORD PTR [esp+ebp*1+0x0],ebp
  427e3b:	sbb    DWORD PTR [edx+esi*1-0x4ad801ea],0x7f66d2c5
  427e46:	mov    cl,BYTE PTR [eax]
  427e48:	ins    DWORD PTR es:[edi],dx
  427e49:	dec    esi
  427e4a:	inc    ebp
  427e4b:	mov    edx,ebp
  427e4d:	pop    ebp
  427e4e:	ja     0x427e8f
  427e50:	bound  ecx,QWORD PTR [ebx-0x4b64ce02]
  427e56:	cmp    eax,0xa0b35773
  427e5b:	and    ecx,DWORD PTR [esi+0x30]
  427e5e:	js     0x427e9e
  427e60:	mov    eax,ds:0xbf4d37
	...
  427e75:	add    BYTE PTR [eax],al
  427e77:	add    dl,ah
  427e79:	leave  
  427e7a:	loopne 0x427e88
  427e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427e7d:	jl     0x427e5a
  427e7f:	adc    ebp,eax
  427e81:	out    0xc7,eax
  427e83:	lock shl ah,1
  427e86:	add    dh,0xce
  427e89:	aaa    
  427e8a:	sar    ch,0x2b
  427e8d:	mov    eax,0xf25213b8
  427e92:	jg     0x427e8d
  427e94:	data16 test BYTE PTR [ecx-0x7e],ah
  427e98:	aaa    
  427e99:	test   BYTE PTR [ecx+ecx*4-0x760b2352],bh
  427ea0:	sahf   
  427ea1:	aam    0xf5
  427ea3:	mov    DWORD PTR [esi+0x3bfeedc],esi
  427ea9:	xor    bh,BYTE PTR [edi]
  427eab:	out    0x66,eax
  427ead:	cmp    dh,BYTE PTR [edi]
  427eaf:	mov    DWORD PTR [esi-0x1a0b3227],ebx
  427eb5:	xchg   esp,eax
  427eb6:	(bad)
  427eb9:	adc    ch,BYTE PTR [ecx-0x76e69ce4]
  427ebf:	jmp    FWORD PTR [ebx+0x11]
  427ec2:	test   eax,0x15d36721
  427ec7:	loopne 0x427f3b
  427ec9:	push   ecx
  427eca:	and    eax,0xa0ea5ce0
  427ecf:	mov    eax,0xe20d8cdd
  427ed4:	loopne 0x427f09
  427ed6:	fcomi  st,st(7)
  427ed8:	fistp  DWORD PTR [ebp+eiz*8+0xe3]
	...
  427eef:	add    ch,ah
  427ef1:	frstor [edx-0x3aeba53c]
  427ef7:	cmovp  ebp,DWORD PTR [edx]
  427efa:	jmp    0xea06:0x32261881
  427f01:	mov    WORD PTR ds:0x1ff218ec,es
  427f07:	jp     0x427eaf
  427f09:	test   DWORD PTR [ebx-0x1ae31d56],edi
  427f0f:	inc    ecx
  427f10:	fstp   DWORD PTR gs:[edi+0x4]
  427f14:	jmp    0x66dd:0x81bf6ed7
  427f1b:	or     eax,DWORD PTR [edi+ebp*4-0x25]
  427f1f:	lods   eax,DWORD PTR ds:[esi]
  427f20:	call   0x2c1d67cc
  427f25:	push   edi
  427f26:	cmp    DWORD PTR ds:0xd218dddb,eax
  427f2c:	lahf   
  427f2d:	and    al,0x61
  427f2f:	(bad)  
  427f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f31:	(bad)  
  427f32:	push   esp
  427f33:	adc    BYTE PTR [edi-0x4bfc12e9],dh
  427f39:	push   eax
  427f3a:	mov    bh,0xad
  427f3c:	fisub  DWORD PTR [ebp-0x1e05f300]
  427f42:	retf   0xfa35
  427f45:	lea    edx,[ecx+0x3f]
  427f48:	addr16 (bad) 
  427f4a:	push   eax
  427f4b:	mul    DWORD PTR [ecx]
  427f4d:	and    eax,0x4fdaad7e
  427f52:	dec    ebx
  427f53:	mov    es,WORD PTR [eax]
	...
  427f65:	add    BYTE PTR [eax],al
  427f67:	add    BYTE PTR [ebp+0x1b],dl
  427f6a:	je     0x427f5f
  427f6c:	dec    ebx
  427f6d:	cwde   
  427f6e:	xor    DWORD PTR [esi-0x52],edi
  427f71:	fdiv   DWORD PTR [ecx]
  427f73:	and    ch,ch
  427f75:	cs pop ebx
  427f77:	mov    eax,cr3
  427f7a:	add    BYTE PTR [edx+0x4a],ch
  427f7d:	ror    BYTE PTR [edi-0x4c],1
  427f80:	not    DWORD PTR [ecx+0x74]
  427f83:	or     eax,0x60d7e98a
  427f88:	sar    al,cl
  427f8a:	adc    al,0x70
  427f8c:	retf   0x10f8
  427f8f:	xchg   esi,eax
  427f90:	or     edx,DWORD PTR [ecx]
  427f92:	bound  esp,QWORD PTR [eax+0x4]
  427f95:	and    al,0x0
  427f97:	jmp    0x7301d1fd
  427f9c:	cmp    al,0x5f
  427f9e:	add    al,ch
  427fa0:	popa   
  427fa1:	(bad)  [eax+0x629a21eb]
  427fa7:	rcl    BYTE PTR [edx+ebp*4+0x526472f3],cl
  427fae:	adc    esi,DWORD PTR [edx-0xe]
  427fb1:	not    DWORD PTR [esi+eiz*8]
  427fb4:	scas   eax,DWORD PTR es:[edi]
  427fb5:	sbb    DWORD PTR [esi+0x745111e5],eax
  427fbb:	or     eax,0xebbeda46
  427fc0:	imul   ebx,DWORD PTR [esp+ecx*2+0xd],0xa0b2d513
  427fc8:	pop    edi
  427fc9:	sbb    DWORD PTR [esi+0x0],eax
	...
  427fdf:	add    bh,bh
  427fe1:	push   es
  427fe2:	add    DWORD PTR [edi],0xffffff93
  427fe5:	xor    al,0x2a
  427fe7:	(bad)  
  427fe9:	cdq    
  427fea:	xor    dl,dl
  427fec:	lock arpl WORD PTR [edi],bx
  427fef:	sbb    ah,dh
  427ff1:	xchg   ebp,eax
  427ff2:	enter  0x3f0f,0xdf
  427ff6:	inc    esp
  427ff7:	mov    dl,BYTE PTR [edx]
  427ff9:	mov    ds:0x6ad82447,al
  427ffe:	outs   dx,BYTE PTR ds:[esi]
  427fff:	ret    0x7b84
  428002:	push   esi
  428003:	pop    ebx
  428004:	cmp    ah,ah
  428006:	pop    es
  428007:	ret    0xd7cf
  42800a:	push   0xd7ca02
  42800f:	dec    DWORD PTR [edi-0x572fcfd]
  428015:	and    ecx,DWORD PTR [ebx-0x1]
  428018:	sahf   
  428019:	addr16 adc eax,0xbf588b40
  42801f:	or     al,0x39
  428021:	and    al,0xfb
  428023:	addr16 jns 0x427ffc
  428026:	add    BYTE PTR [eax],al
  428028:	push   es
  428029:	pop    ss
  42802a:	dec    DWORD PTR [edi+0x44]
  42802d:	push   esp
  42802e:	pop    ds
  42802f:	or     al,0x44
  428031:	xor    ecx,DWORD PTR [ebx+0x16]
  428034:	mov    ebx,0x47c481d7
  428039:	cdq    
  42803a:	(bad)  
  42803b:	inc    eax
  42803d:	xlat   BYTE PTR ds:[ebx]
  42803e:	sub    eax,0x4810533b
	...
  428058:	into   
  428059:	aaa    
  42805a:	mov    BYTE PTR [edi+ebp*1+0x23],al
  42805e:	add    BYTE PTR [ecx+0x3f],0xa2
  428062:	aas    
  428063:	and    al,0x33
  428065:	push   esi
  428066:	inc    ecx
  428067:	or     BYTE PTR [eax],dl
  428069:	int    0x83
  42806b:	push   esp
  42806c:	(bad)  
  42806d:	aam    0xc
  42806f:	lea    esp,[ebx+0x464c8a3c]
  428075:	xor    al,0x4f
  428077:	call   0xfc41e3b7
  42807c:	and    BYTE PTR [ecx],bh
  42807e:	call   DWORD PTR [ecx+ebp*8+0x64]
  428082:	mov    eax,DWORD PTR [ecx]
  428084:	loope  0x4280ce
  428086:	add    al,0x74
  428088:	xor    ch,al
  42808a:	js     0x4280a4
  42808c:	loope  0x4280e6
  42808e:	add    esi,DWORD PTR [esi+ebx*2-0x2]
  428092:	mov    esi,0x51a795e7
  428097:	or     ch,al
  428099:	sub    eax,0x5893870b
  42809e:	scas   eax,DWORD PTR es:[edi]
  42809f:	cli    
  4280a0:	mov    ch,0xb3
  4280a2:	jmp    0x4280c6
  4280a4:	lods   eax,DWORD PTR ds:[esi]
  4280a5:	add    DWORD PTR [edi],eax
  4280a7:	sti    
  4280a8:	xor    edi,DWORD PTR [edx+ecx*4]
  4280ab:	dec    ebp
  4280ac:	push   0xffffff8b
  4280ae:	jns    0x4280bc
  4280b0:	jmp    0x8edf6d96
  4280b5:	fwait
  4280b6:	jmp    edi
  4280b8:	jae    0x42806f
  4280ba:	inc    ebp
  4280bb:	add    al,0x0
	...
  4280cd:	add    BYTE PTR [eax],al
  4280cf:	add    cl,ch
  4280d1:	jge    0x4280da
  4280d3:	push   eax
  4280d4:	jne    0x428143
  4280d6:	or     eax,DWORD PTR [edi-0x3e3376d]
  4280dc:	gs ret 
  4280de:	mov    ah,0x1
  4280e0:	mov    edi,0xaf000cee
  4280e5:	mov    bh,0xf0
  4280e7:	push   edx
  4280e8:	fldenv [ebx+ecx*1-0x942cc79]
  4280ef:	jne    0x428157
  4280f1:	pop    edi
  4280f2:	mov    edi,0x2b795e7
  4280f7:	das    
  4280f8:	sbb    ebx,ecx
  4280fa:	push   cs
  4280fb:	lds    ebp,FWORD PTR [esi+0x4e783196]
  428101:	xchg   ecx,eax
  428102:	pop    ebp
  428103:	sbb    ebp,DWORD PTR [edx-0x68b40753]
  428109:	nop
  42810a:	outs   dx,BYTE PTR ds:[esi]
  42810b:	pop    eax
  42810c:	jb     0x42815c
  42810e:	sub    al,0xc
  428110:	nop
  428111:	xor    DWORD PTR [ecx],ebx
  428113:	add    dh,dh
  428115:	and    DWORD PTR [esi-0x18d16cc4],edi
  42811b:	ins    DWORD PTR es:[edi],dx
  42811c:	arpl   WORD PTR [esi+0x34],cx
  42811f:	adc    al,0xe5
  428121:	xchg   ebx,eax
  428122:	loope  0x42817d
  428124:	retf   0x8db2
  428127:	add    cl,dh
  428129:	dec    ebp
  42812a:	mov    cl,0xee
  42812c:	and    BYTE PTR [edx],0xf7
  42812f:	or     esp,ebp
  428131:	xchg   ebx,eax
  428132:	loope  0x428136
	...
  428148:	inc    ebp
  428149:	fstp   QWORD PTR [esi+0x58]
  42814c:	push   edx
  42814d:	mov    edx,DWORD PTR [ecx+0x2c]
  428150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428151:	and    DWORD PTR [edx-0x12],ebx
  428154:	jb     0x4281a4
  428156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428157:	or     esp,edi
  428159:	xchg   esi,eax
  42815a:	in     eax,0x8e
  42815c:	aaa    
  42815d:	leave  
  42815e:	cdq    
  42815f:	pop    ecx
  428160:	jp     0x4281dc
  428162:	add    bh,BYTE PTR ds:[esi+0x4d]
  428166:	and    ecx,DWORD PTR [esi-0x3a737d5d]
  42816c:	pop    esi
  42816d:	fnstenv [esi+0x6e8a8b8e]
  428173:	push   es
  428174:	mov    cl,0x54
  428176:	xchg   ebp,eax
  428177:	daa    
  428178:	outs   dx,BYTE PTR ds:[esi]
  428179:	xchg   ecx,eax
  42817a:	pop    esi
  42817b:	rcr    BYTE PTR [edx-0x30b4225b],cl
  428181:	stc    
  428182:	pop    DWORD PTR [esi]
  428184:	lea    ecx,[ebx]
  428186:	add    BYTE PTR [eax-0xa01632e],dl
  42818c:	xor    DWORD PTR [ecx-0x38],ebx
  42818f:	test   al,0x41
  428191:	and    dh,ah
  428193:	out    dx,al
  428194:	(bad)  
  428195:	and    BYTE PTR [esi],ch
  428197:	mov    ebx,0xeb434eb9
  42819c:	or     ch,BYTE PTR [ebx]
  42819e:	xchg   DWORD PTR [ecx-0x2f00c4df],esi
  4281a4:	xor    ch,ch
  4281a6:	add    cl,ch
  4281a8:	out    0x29,al
  4281aa:	test   DWORD PTR [edi+0x0],esi
	...
  4281c0:	push   0xffffffc4
  4281c2:	push   edx
  4281c3:	arpl   WORD PTR ds:[esi+0x18ef0124],sp
  4281ca:	call   0xfb5fe4a5
  4281cf:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4281d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281d2:	or     dh,BYTE PTR [edx+0x32]
  4281d5:	cmc    
  4281d6:	sbb    BYTE PTR [ecx+ebp*4-0x5b],ah
  4281da:	(bad)  
  4281db:	pop    edi
  4281dc:	popa   
  4281dd:	pop    eax
  4281de:	ret    0x5982
  4281e1:	pop    eax
  4281e2:	retf   0x4951
  4281e5:	in     eax,dx
  4281e6:	add    cl,ch
  4281e8:	push   esi
  4281e9:	sbb    DWORD PTR [ebx-0x49],ebx
  4281ec:	ss pop edi
  4281ee:	or     al,0xe9
  4281f0:	xor    al,0x58
  4281f2:	in     al,dx
  4281f3:	jb     0x428256
  4281f5:	mov    al,ds:0xe8f5e9e8
  4281fa:	dec    eax
  4281fb:	mov    ebp,0xeae8a059
  428200:	cmc    
  428201:	aam    0x2e
  428203:	sub    DWORD PTR [edi-0x14],esi
  428206:	xchg   DWORD PTR [ecx+ebp*2-0x191a8adc],ebp
  42820d:	or     eax,ebp
  42820f:	dec    ebx
  428210:	dec    ebp
  428211:	and    al,0xfb
  428213:	add    BYTE PTR [eax-0xd],dh
  428216:	div    DWORD PTR [ecx+0x33]
  428219:	fldcw  WORD PTR [esi+0x4]
  42821c:	rcl    BYTE PTR [eax-0x2f4900f8],0x83
  428223:	rol    DWORD PTR [eax],1
	...
  428235:	add    BYTE PTR [eax],al
  428237:	add    BYTE PTR [ebx],dl
  428239:	mov    bl,0xf3
  42823b:	(bad)  
  42823c:	cmp    al,0x2d
  42823e:	adc    DWORD PTR [ebp+0x4d83d14a],ecx
  428244:	add    ecx,DWORD PTR [edi+esi*8-0x2eb2f08b]
  42824b:	call   0x39a076
  428250:	jnp    0x42822d
  428252:	pop    ebp
  428253:	ret    0xdc03
  428256:	push   ebp
  428257:	mov    ecx,edi
  428259:	add    DWORD PTR [ebx-0x2eb3308b],0x4a6f585
  428263:	xor    edi,ebx
  428265:	sub    al,0x57
  428267:	mov    edi,DWORD PTR [ecx+0xa2bc9e4]
  42826d:	test   al,0x3b
  42826f:	dec    eax
  428270:	mov    bh,0xef
  428272:	dec    eax
  428273:	je     0x428209
  428275:	xchg   ebx,eax
  428276:	je     0x428289
  428278:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42827a:	dec    ecx
  42827b:	mov    edx,esi
  42827d:	retf   
  42827e:	or     DWORD PTR [ebp-0x7d],0xffffff81
  428282:	call   0xfd1ba0ca
  428287:	jmp    0x4282eb
  428289:	mov    ebx,fs
  42828b:	add    dl,BYTE PTR [ecx-0x64aa7c26]
  428291:	dec    esp
  428292:	dec    ebp
  428293:	or     ch,dl
  428295:	xor    ebp,DWORD PTR [eax]
  428297:	cld    
  428298:	cmp    al,0xd9
  42829a:	mov    al,cl
	...
  4282b0:	jo     0x4282a2
  4282b2:	div    DWORD PTR [edx+0x62]
  4282b5:	cmp    BYTE PTR [ebp+ecx*2+0x475cf5a],cl
  4282bc:	fnstcw WORD PTR ds:0x274a520f
  4282c2:	cld    
  4282c3:	sti    
  4282c4:	xor    eax,0x9f870fdc
  4282c9:	cmp    BYTE PTR [edx+0x59ab5e3e],cl
  4282cf:	adc    BYTE PTR [edx+0x186fece6],dh
  4282d5:	or     bl,bh
  4282d7:	xchg   DWORD PTR [esp+edi*4],ebx
  4282da:	lds    ebx,FWORD PTR [edx-0x59]
  4282dd:	jb     0x4282ef
  4282df:	add    BYTE PTR [edi-0x72ad0f55],dl
  4282e5:	mov    ebx,0xfc9f87fd
  4282ea:	test   DWORD PTR [ebx],eax
  4282ec:	call   0xec49:0xb2fe79e8
  4282f3:	sbb    eax,0x86ff3089
  4282f8:	shl    BYTE PTR [ebp-0x419a8b0e],cl
  4282fe:	sti    
  4282ff:	jne    0x42836f
  428301:	stos   DWORD PTR es:[edi],eax
  428302:	retf   
  428303:	sti    
  428304:	das    
  428305:	cmp    bh,ah
  428307:	pusha  
  428308:	lods   eax,DWORD PTR ds:[esi]
  428309:	scas   eax,DWORD PTR es:[edi]
  42830a:	sti    
  42830b:	test   DWORD PTR [edx+0x2f870ffc],esp
  428311:	and    BYTE PTR [eax+0xc9],cl
	...
  428327:	add    BYTE PTR [esi],cl
  428329:	xor    cl,BYTE PTR [ecx+eax*1+0x9e7f6d9]
  428330:	(bad)  
  428332:	in     al,dx
  428333:	or     BYTE PTR [ecx+0x30],cl
  428336:	jmp    FWORD PTR [esi]
  428338:	mov    ds:0xa05d5d47,al
  42833d:	cld    
  42833e:	inc    BYTE PTR [ebx+ebx*4-0x18dd6227]
  428345:	or     dl,BYTE PTR [ebp-0x32622ae2]
  42834b:	pop    es
  42834c:	bound  ebx,QWORD PTR [ebp-0xa310125]
  428352:	in     eax,dx
  428353:	push   ecx
  428354:	xchg   ebx,eax
  428355:	push   ds
  428356:	aam    0x8f
  428358:	gs cdq 
  42835a:	jmp    0x98cdcc49
  42835f:	dec    BYTE PTR [edi+0x45]
  428362:	test   BYTE PTR [ebx+0x62],0x32
  428366:	cmc    
  428367:	push   ebp
  428368:	inc    ebp
  428369:	daa    
  42836a:	sub    eax,DWORD PTR [ebx-0x339be1e6]
  428370:	pop    ecx
  428371:	xchg   esp,eax
  428372:	stos   DWORD PTR es:[edi],eax
  428373:	xor    dh,al
  428375:	loope  0x428326
  428377:	push   cs
  428378:	sahf   
  428379:	pop    ss
  42837a:	adc    eax,edx
  42837c:	fldenvw [esp+ecx*8+0x6e]
  428381:	cli    
  428382:	ins    BYTE PTR es:[edi],dx
  428383:	rcl    DWORD PTR [esi-0x42],1
  428386:	data16 jg 0x428407
  428389:	aad    0xe9
  42838b:	jg     0x42838d
	...
  42839d:	add    BYTE PTR [eax],al
  42839f:	add    BYTE PTR [eax+0x1e],bl
  4283a2:	adc    eax,0x188b5e28
  4283a7:	call   DWORD PTR [edi+0x75]
  4283aa:	(bad)  
  4283ab:	inc    ebx
  4283ac:	bound  esi,QWORD PTR [edx]
  4283ae:	rcl    DWORD PTR [ecx+0x13],cl
  4283b1:	push   ds
  4283b2:	aam    0x6b
  4283b4:	push   ebx
  4283b5:	cdq    
  4283b6:	jmp    0x16c9faa5
  4283bb:	mul    BYTE PTR [eax]
  4283bd:	pop    edx
  4283be:	and    esi,edi
  4283c0:	out    0xf,eax
  4283c2:	fimul  DWORD PTR [eax-0x60]
  4283c5:	jmp    0xcde6be05
  4283ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283cb:	lds    ebx,FWORD PTR [eax]
  4283cd:	sbb    eax,DWORD PTR [eax]
  4283cf:	in     eax,dx
  4283d0:	popa   
  4283d1:	push   esp
  4283d2:	leave  
  4283d3:	mov    ch,0x40
  4283d5:	push   esp
  4283d6:	into   
  4283d7:	popf   
  4283d8:	jl     0x428376
  4283da:	jl     0x4283a1
  4283dc:	pop    ebp
  4283dd:	fnstcw WORD PTR [edi+eiz*8+0x4c]
  4283e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283e2:	and    al,0xe5
  4283e4:	mov    bl,0x8a
  4283e6:	sti    
  4283e7:	fsubr  QWORD PTR [ecx]
  4283e9:	int    0x40
  4283eb:	jmp    0x98914438
  4283f0:	sub    al,0xc7
  4283f2:	xor    al,0xdb
  4283f4:	mov    eax,ds:0xb7fde7d9
  4283f9:	in     al,dx
  4283fa:	repnz daa 
  4283fc:	jecxz  0x42840f
  4283fe:	sti    
  4283ff:	ins    BYTE PTR es:[edi],dx
  428400:	sbb    ecx,edx
  428402:	inc    ebp
  428403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  428418:	push   ebx
  428419:	daa    
  42841a:	aaa    
  42841b:	mov    bl,0x6f
  42841d:	xchg   ebp,eax
  42841e:	ret    0x201f
  428421:	(bad)  
  428422:	add    dl,bh
  428424:	and    ebx,esp
  428426:	inc    esp
  428427:	add    eax,0xe10c9f5a
  42842c:	jo     0x4283d3
  42842e:	or     eax,0x44e42129
  428433:	int    0x65
  428435:	popf   
  428436:	hlt    
  428437:	fisub  DWORD PTR [ecx-0x1516fba5]
  42843d:	sbb    ah,bh
  42843f:	or     BYTE PTR [eax+ecx*4],0xe8
  428443:	fcom   DWORD PTR [eax-0x1d9d04e0]
  428449:	cmc    
  42844a:	or     al,0x72
  42844c:	scas   eax,DWORD PTR es:[edi]
  42844d:	push   esp
  42844e:	add    ebx,DWORD PTR [esi+0x2e]
  428451:	aad    0x85
  428453:	sub    DWORD PTR ds:0x871f7fd6,edx
  428459:	xor    al,0xb
  42845b:	add    cl,bh
  42845d:	(bad)  
  42845e:	or     eax,0x13
  428461:	add    BYTE PTR [edi+0x0],dh
  428464:	jnp    0x4284b7
  428466:	lock test DWORD PTR ds:0x80e810a1,ebp
  42846d:	push   ebp
  42846e:	add    BYTE PTR [eax],al
  428470:	mov    edi,0xc0077415
  428475:	mov    BYTE PTR [ebx+0x88754cf],0x83
	...
  428490:	gs push ds
  428492:	je     0x42849f
  428494:	mov    esi,0xc0077423
  428499:	or     ebp,eax
  42849b:	fs dec edi
  42849d:	push   ds
  42849e:	test   DWORD PTR [ebx-0x74fe4df4],0x5f101cc4
  4284a8:	push   0xffc25615
  4284ad:	xlat   BYTE PTR ds:[ebx]
  4284ae:	dec    esi
  4284af:	mov    edi,DWORD PTR [edx-0x8a11ae]
  4284b5:	jmp    0x88fae37a
  4284ba:	test   edx,edx
  4284bc:	das    
  4284bd:	ret    
  4284be:	bound  eax,QWORD PTR [eax]
  4284c0:	call   0x99:0xd04d6883
  4284c7:	push   0xffffffbb
  4284c9:	push   eax
  4284ca:	ret    0xece8
  4284cd:	push   cs
  4284ce:	idiv   edi
  4284d0:	xor    DWORD PTR [eax],eax
  4284d2:	jecxz  0x4284e6
  4284d4:	dec    ebp
  4284d5:	pop    edi
  4284d6:	dec    ebp
  4284d7:	or     edi,DWORD PTR [ecx-0x2b]
  4284da:	sub    ecx,ecx
  4284dc:	jecxz  0x428533
  4284de:	in     al,0xff
  4284e0:	add    al,0x53
  4284e2:	ror    BYTE PTR [edi],0xe
  4284e5:	sbb    DWORD PTR [ebx+ebx*8-0x78f9029e],eax
  4284ec:	pop    esp
  4284ed:	sbb    dh,bh
  4284ef:	xchg   BYTE PTR [edx+edx*4+0x860f],ch
	...
  428506:	add    BYTE PTR [eax],al
  428508:	mov    eax,ds:0x14bf5d76
  42850d:	mov    bh,0xee
  42850f:	das    
  428510:	mov    ds:0x8074f5b4,al
  428515:	pop    ebx
  428516:	dec    edi
  428517:	push   eax
  428518:	lods   al,BYTE PTR ds:[esi]
  428519:	dec    eax
  42851a:	dec    edx
  42851b:	pop    es
  42851c:	mov    al,ds:0x45504f30
  428521:	es sti 
  428523:	adc    BYTE PTR [edx-0x200777d0],ah
  428529:	sbb    esi,DWORD PTR [ebp+0x8]
  42852c:	fsqrt  
  42852e:	push   0xfcbad901
  428533:	push   cs
  428534:	jmp    0x219cdca4
  428539:	loopne 0x428589
  42853b:	xchg   DWORD PTR [ebx],edx
  42853d:	add    al,0x11
  42853f:	fdiv   DWORD PTR [eax-0x10]
  428542:	add    al,0x87
  428544:	sbb    ch,BYTE PTR [eax+0x25f50446]
  42854a:	jg     0x4285ad
  42854c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42854d:	xor    BYTE PTR [edx+0xbee511],cl
  428553:	sti    
  428554:	ja     0x42856e
  428556:	adc    al,BYTE PTR [eax+0x62]
  428559:	pop    es
  42855a:	ret    0x2437
  42855d:	xor    al,0x72
  42855f:	adc    al,ch
  428561:	ret    0xfb0c
  428564:	ja     0x428516
  428566:	gs inc esp
  428568:	bound  ebx,QWORD PTR [ebx+0x8411]
	...
  42857e:	add    BYTE PTR [eax],al
  428580:	push   eax
  428581:	lock add al,0x3d
  428584:	pusha  
  428585:	xor    edi,edi
  428587:	call   DWORD PTR [esi]
  428589:	fnstenv [edx]
  42858b:	pop    edx
  42858c:	sub    eax,0x938eb316
  428591:	dec    esi
  428592:	mov    ds:0x79d3a0ff,eax
  428597:	mov    BYTE PTR [edx],ah
  428599:	fldcw  WORD PTR [ebp+ecx*8-0x12]
  42859d:	shr    BYTE PTR [esi+0x5],cl
  4285a0:	add    al,0xd8
  4285a2:	xor    dl,BYTE PTR [eax+esi*2]
  4285a5:	xchg   ebp,eax
  4285a6:	add    eax,0xeb12630c
  4285ab:	jg     0x428593
  4285ad:	cwde   
  4285ae:	jmp    0x2390e722
  4285b3:	in     al,dx
  4285b4:	push   edx
  4285b5:	icebp  
  4285b6:	jmp    0xa3556abe
  4285bb:	lds    ebx,FWORD PTR [esi-0x27]
  4285be:	data16 std 
  4285c0:	and    BYTE PTR [edi-0x64d47914],0x73
  4285c7:	push   cs
  4285c8:	out    dx,eax
  4285c9:	push   edi
  4285ca:	dec    ecx
  4285cb:	sti    
  4285cc:	sbb    DWORD PTR [edx],ebx
  4285ce:	data16 sti 
  4285d0:	test   eax,0xdd61eda2
  4285d5:	pop    ss
  4285d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4285d7:	mov    fs,WORD PTR [ebx]
  4285d9:	hlt    
  4285da:	jmp    0xfc5ce7e2
  4285df:	add    esp,DWORD PTR [edx-0x27]
  4285e2:	call   0x428656
	...
  4285f7:	add    al,bh
  4285f9:	adc    BYTE PTR [edx],0x37
  4285fc:	fstp   DWORD PTR [edx-0x16]
  4285ff:	push   es
  428600:	(bad)  
  428601:	fldcw  WORD PTR [edi+edi*8-0x75]
  428605:	inc    eax
  428606:	mov    esi,0xda20b3c5
  42860b:	mov    dl,0x56
  42860d:	push   esp
  42860e:	shr    DWORD PTR [ecx+0x22],1
  428611:	fnstcw WORD PTR [esi+0xd43dd4]
  428617:	fs sub eax,ebx
  42861a:	out    0xe4,eax
  42861c:	adc    edx,edx
  42861e:	(bad)  
  42861f:	fstp   DWORD PTR [eax-0x54230c1f]
  428625:	jmp    0xb79bc8ea
  42862a:	xchg   ebp,esp
  42862c:	loop   0x428620
  42862e:	push   0xffffffa9
  428630:	popa   
  428631:	jle    0x42868d
  428633:	sub    dl,BYTE PTR [esi]
  428635:	mov    dl,BYTE PTR [ebp+0x62]
  428638:	std    
  428639:	hlt    
  42863a:	adc    dl,bh
  42863c:	and    edx,edx
  42863e:	inc    esp
  42863f:	int    0x65
  428641:	stos   DWORD PTR es:[edi],eax
  428642:	mov    edx,0xc0d961e9
  428647:	out    0xa2,al
  428649:	or     DWORD PTR [edi],ebp
  42864b:	xor    dl,BYTE PTR [eax+0x51cd5462]
  428651:	pusha  
  428652:	stc    
  428653:	jae    0x428669
  428655:	in     eax,0xb2
  428657:	sub    esp,DWORD PTR [esi-0x3b]
  42865a:	lds    eax,FWORD PTR [ecx+0x0]
	...
  428670:	mov    WORD PTR [ecx+0x13675d00],ds
  428676:	mov    esi,0x6eb20c69
  42867b:	(bad)  
  42867c:	xlat   BYTE PTR ds:[ebx]
  42867d:	pop    eax
  42867e:	out    0xec,eax
  428680:	push   0x4b
  428682:	mov    esi,0xc5e5b3f6
  428687:	dec    esp
  428688:	jg     0x428623
  42868a:	add    dh,ah
  42868c:	mov    bl,0xdd
  42868e:	lds    edi,FWORD PTR ds:0xf00994f
  428694:	mov    eax,ds:0x5f0707fa
  428699:	and    DWORD PTR [ebx],ecx
  42869b:	pop    esi
  42869c:	mov    eax,ds:0x59c54462
  4286a1:	jnp    0x428628
  4286a3:	add    BYTE PTR [ebx],cl
  4286a5:	mov    ah,BYTE PTR [esi-0x1]
  4286a8:	mov    bh,0xf8
  4286aa:	sbb    al,0x8a
  4286ac:	retf   
  4286ad:	data16 (bad) 
  4286af:	call   0x42ea02
  4286b4:	adc    BYTE PTR [ecx+0x4a7c1824],bl
  4286ba:	call   0x15544d12
  4286bf:	js     0x428737
  4286c1:	pushf  
  4286c2:	add    BYTE PTR [ebp+0xf08894b],al
  4286c8:	cmc    
  4286c9:	sbb    al,0xc1
  4286cb:	loopne 0x428658
  4286cd:	in     eax,0xf0
  4286cf:	mov    eax,DWORD PTR [esp+ebp*8]
  4286d2:	out    dx,al
  4286d3:	inc    eax
	...
  4286e8:	pop    ecx
  4286e9:	pop    esp
  4286ea:	je     0x4286f4
  4286ec:	jne    0x42868b
  4286ee:	adc    DWORD PTR [eax+0x1abdde6],eax
  4286f4:	xchg   edx,eax
  4286f5:	fld    QWORD PTR [ecx]
  4286f7:	add    BYTE PTR [ebx-0x68],cl
  4286fa:	ror    DWORD PTR [ebp+0x450617fa],cl
  428700:	adc    DWORD PTR [ebp+0x1],0x1
  428704:	or     ebx,esp
  428706:	dec    esi
  428707:	lea    ebx,[ebx-0x27]
  42870a:	pop    es
  42870b:	inc    ebp
  42870c:	mov    ecx,0x5b247c5b
  428711:	fst    QWORD PTR [ebp+0xf]
  428714:	inc    esi
  428715:	sbb    al,0x50
  428717:	push   DWORD PTR [edi]
  428719:	mov    ecx,0xe416ff1c
  42871e:	adc    eax,0xd808fb40
  428723:	sbb    ecx,DWORD PTR [ebx]
  428725:	or     eax,ebx
  428727:	jmp    0x4286d5
  428729:	rcr    DWORD PTR [esp-0x31],cl
  42872d:	xchg   DWORD PTR [edi],ebx
  42872f:	mov    esp,DWORD PTR [edx+0x3d]
  428732:	out    0xc2,eax
  428734:	mov    esp,0xed0bf866
  428739:	dec    ecx
  42873a:	popa   
  42873b:	test   DWORD PTR [ebx+0x1d87170d],ebx
  428741:	xor    dh,cl
  428743:	inc    eax
  428744:	jo     0x4286c8
  428746:	imul   eax,DWORD PTR [edx],0xffffffe3
  428749:	iret   
  42874a:	(bad)  
  42874b:	inc    DWORD PTR [eax]
	...
  42875d:	add    BYTE PTR [eax],al
  42875f:	add    BYTE PTR [edx-0x1e],ah
  428762:	dec    esi
  428763:	push   ecx
  428764:	cli    
  428765:	add    edi,esi
  428767:	jmp    DWORD PTR [edx-0x65]
  42876a:	mov    esi,0x593ea22e
  42876f:	pop    ebp
  428770:	or     DWORD PTR [ecx],edi
  428772:	lds    ecx,FWORD PTR [eax]
  428774:	bound  edi,QWORD PTR [ebx+0x43]
  428777:	and    al,0x6a
  428779:	aaa    
  42877a:	test   al,0x4c
  42877c:	jle    0x42878a
  42877e:	out    0x61,al
  428780:	test   DWORD PTR [eax],eax
  428782:	inc    DWORD PTR [esi-0x16f8db6a]
  428788:	int    0x1f
  42878a:	(bad)  
  42878b:	call   FWORD PTR ds:0xa6567b06
  428791:	add    bh,ch
  428793:	or     eax,0x5c000a0
  428798:	jmp    0x410e:0x14003b6a
  42879f:	add    dl,dl
  4287a1:	add    DWORD PTR [esi+0xc9a4666],edi
  4287a7:	sti    
  4287a8:	aaa    
  4287a9:	test   al,0x62
  4287ab:	inc    esp
  4287ac:	bound  ebx,QWORD PTR [edi]
  4287ae:	adc    DWORD PTR [eax+edx*2-0x40],esp
  4287b2:	add    al,0x85
  4287b4:	and    dl,ch
  4287b6:	push   cs
  4287b7:	jg     0x4287fb
  4287b9:	fadd   DWORD PTR [ebx+eax*8]
  4287bc:	and    bl,cl
  4287be:	leave  
  4287bf:	repz pop edi
  4287c1:	fwait
  4287c2:	jmp    0x428885
	...
  4287d7:	add    BYTE PTR [edx],ah
  4287d9:	mov    ebp,0xd97c0993
  4287de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287df:	dec    esi
  4287e0:	fisttp QWORD PTR [eax]
  4287e2:	bound  cx,DWORD PTR ss:[ebp-0x22df753e]
  4287ea:	and    DWORD PTR [eax+0x6e],esi
  4287ed:	mov    eax,ds:0xcf9913f4
  4287f2:	push   ecx
  4287f3:	repz in al,dx
  4287f5:	fsubr  st,st(1)
  4287f7:	jmp    0x8934:0xec1b1661
  4287fe:	call   0x522a6506
  428803:	or     eax,0x82e9d941
  428808:	inc    eax
  428809:	fldenv [esi+0x5e]
  42880c:	data16 (bad) [ebx+0x2062b1c2]
  428813:	or     DWORD PTR [ecx+0x77ff95d9],0x19
  42881a:	dec    BYTE PTR [ebp-0x70]
  42881d:	add    DWORD PTR [ebx-0x9],esi
  428820:	cmp    DWORD PTR [esi],edx
  428822:	outs   dx,BYTE PTR ds:[esi]
  428823:	hlt    
  428824:	out    0xe,eax
  428826:	jne    0x428866
  428828:	xor    BYTE PTR [ebp-0x7fe3ec33],bl
  42882e:	ficomp DWORD PTR [ebx+0x7c]
  428831:	test   BYTE PTR [eax+0x7],0xa7
  428835:	sbb    bl,dl
  428837:	aas    
  428838:	ds jmp 0x42f826
	...
  42884e:	add    BYTE PTR [eax],al
  428850:	cld    
  428851:	push   cs
  428852:	mov    cl,0x69
  428854:	cmp    al,BYTE PTR [ecx-0x265d7473]
  42885a:	dec    edi
  42885b:	add    al,0x7c
  42885d:	loopne 0x42885f
  42885f:	sbb    DWORD PTR [eax-0x1f],ecx
  428862:	sti    
  428863:	xor    eax,0x9152bd82
  428868:	shl    BYTE PTR [eax+0x1],1
  42886b:	jmp    0xe4b7a152
  428870:	out    dx,al
  428871:	leave  
  428872:	ret    
  428873:	es (bad) 
  428875:	fadd   DWORD PTR [eax]
  428877:	jmp    0x9243d1dd
  42887c:	push   esi
  42887d:	pop    esi
  42887e:	retf   0xc681
  428881:	mov    edx,0x1953e900
  428886:	pop    edx
  428887:	(bad)  
  428888:	mov    ds:0xd8b600e0,eax
  42888d:	movq   QWORD PTR [esi],mm2
  428890:	lea    ax,[ebx+ebx*1]
  428894:	sahf   
  428895:	std    
  428896:	dec    ebx
  428897:	lahf   
  428898:	jns    0x428862
  42889a:	sti    
  42889b:	ds ins BYTE PTR es:[edi],dx
  42889d:	pop    ebp
  42889e:	lock ins BYTE PTR es:[edi],dx
  4288a0:	dec    edi
  4288a1:	mov    ?,WORD PTR ds:0xcbd9537
  4288a7:	jmp    0x428864
  4288a9:	loopne 0x428903
  4288ab:	xchg   ebx,eax
  4288ac:	ins    BYTE PTR es:[edi],dx
  4288ad:	mov    dl,0xb
  4288af:	lods   al,BYTE PTR ds:[esi]
  4288b0:	or     BYTE PTR es:[ebp+eax*8+0x0],al
	...
  4288c5:	add    BYTE PTR [eax],al
  4288c7:	add    BYTE PTR [ebp-0x26],bl
  4288ca:	je     0x4288b7
  4288cc:	cmp    al,0x32
  4288ce:	sar    WORD PTR [ecx+0x61a9883d],0xa9
  4288d6:	push   edx
  4288d7:	add    DWORD PTR [ecx+eiz*2],edx
  4288da:	add    ecx,ebp
  4288dc:	mov    WORD PTR [ecx],ds
  4288de:	jne    0x4288cc
  4288e0:	fmul   st,st(0)
  4288e2:	ret    
  4288e3:	bound  edx,QWORD PTR cs:[ebx]
  4288e6:	sti    
  4288e7:	jmp    0x43d24d
  4288ec:	adc    cl,ah
  4288ee:	or     esi,0x13
  4288f1:	aad    0x1e
  4288f3:	add    bl,cl
  4288f5:	retf   0x5ec0
  4288f8:	fs pop ss
  4288fa:	add    al,0x0
  4288fc:	mov    fs,WORD PTR [edx-0x14]
  4288ff:	adc    edi,0xffffffed
  428902:	jnp    0x428969
  428904:	(bad)  
  428906:	jnp    0x42896d
  428908:	rcr    ebp,cl
  42890a:	dec    ebx
  42890b:	push   esi
  42890c:	dec    esp
  42890d:	jg     0x428910
  42890f:	lea    esi,[esi+0x9]
  428912:	xor    edx,0xffffffe3
  428915:	xchg   esi,eax
  428916:	idiv   edi
  428918:	add    al,0x59
  42891a:	shl    BYTE PTR [ebp+0x7e],0x82
  42891e:	cld    
  42891f:	pop    ebx
  428920:	xor    ch,al
  428922:	cmp    DWORD PTR [ebp+0x1f],0x62
  428926:	inc    ebp
  428927:	or     BYTE PTR [edx],al
  428929:	(bad)  
  42892a:	add    al,0x8b
	...
  428940:	mov    esi,0xf03789dc
  428945:	adc    DWORD PTR [eax],0xffffff89
  428948:	or     al,0xdc
  42894a:	add    DWORD PTR [esi],0x21
  42894d:	adc    al,0x4e
  42894f:	mov    esp,edi
  428951:	out    0xe8,eax
  428953:	popa   
  428954:	mov    dh,0xd8
  428956:	add    BYTE PTR [ebx+0xe29e804],cl
  42895c:	shl    BYTE PTR ds:0x2f4d8d,0xaf
  428963:	(bad)  
  428964:	and    al,0xd
  428966:	add    ebx,0xfffffff4
  428969:	lods   eax,DWORD PTR ds:[esi]
  42896a:	push   ebx
  42896b:	leave  
  42896c:	dec    ecx
  42896d:	loope  0x42896f
  42896f:	push   ebp
  428970:	nop
  428971:	cld    
  428972:	jp     0x428960
  428974:	(bad)  
  428976:	test   al,0x6e
  428978:	(bad)  
  428979:	mov    BYTE PTR [edi+ecx*2],0x8c
  42897d:	cwde   
  42897e:	adc    DWORD PTR [edi+0x2084b80b],eax
  428984:	in     al,0x84
  428986:	aas    
  428987:	or     BYTE PTR [eax],ch
  428989:	aad    0xed
  42898b:	push   0x40d3e6
  428990:	int    0x14
  428992:	adc    ecx,DWORD PTR [esi]
  428994:	and    al,BYTE PTR [edx]
  428996:	imul   eax,DWORD PTR [eax],0x7ff024a
  42899c:	(bad)  
  42899d:	fadd   DWORD PTR [ebx+edi*8]
  4289a0:	push   edi
  4289a1:	push   ss
  4289a2:	adc    DWORD PTR [eax+0x0],eax
	...
  4289b5:	add    BYTE PTR [eax],al
  4289b7:	add    BYTE PTR [edx-0x61],ah
  4289ba:	ja     0x428a26
  4289bc:	add    bh,BYTE PTR es:[edx-0x40]
  4289c0:	ucomiss xmm6,xmm4
  4289c3:	adc    eax,0x3f10e2
  4289c8:	sar    ecx,0x64
  4289cb:	inc    esp
  4289cc:	(bad)  
  4289cd:	(bad)  
  4289ce:	cli    
  4289cf:	bound  eax,QWORD PTR [ecx]
  4289d1:	ds (bad) 
  4289d3:	(bad)  
  4289d4:	jns    0x4289d8
  4289d6:	mov    ebp,0x3b1efd05
  4289db:	add    BYTE PTR [ebx+0x16],ah
  4289de:	pop    ds
  4289df:	bound  si,DWORD PTR [eax-0xc]
  4289e3:	adc    eax,0x3f0ec6
  4289e8:	f2xm1  
  4289ea:	jp     0x4289de
  4289ec:	mov    dh,0xfc
  4289ee:	dec    esp
  4289ef:	sti    
  4289f0:	dec    edi
  4289f1:	add    al,0x11
  4289f3:	inc    eax
  4289f4:	bound  ecx,QWORD PTR [ecx-0xc6e7ab]
  4289fa:	das    
  4289fb:	bnd jmp 0x428a53
  4289fe:	adc    DWORD PTR [esi-0x62],0x0
  428a02:	jp     0x4289f6
  428a04:	xchg   esi,eax
  428a05:	fstp   DWORD PTR [edi]
  428a07:	sub    DWORD PTR [edi+0x62f4a005],0x9bdbe9d9
  428a11:	mov    al,ds:0xa4df03e8
  428a16:	aad    0x55
  428a18:	jmp    0x58d809
	...
  428a2d:	add    BYTE PTR [eax],al
  428a2f:	add    BYTE PTR [edx],ah
  428a31:	fldenv [eax+0x4a]
  428a34:	jbe    0x428a92
  428a36:	test   eax,0xe8496678
  428a3b:	fisubr WORD PTR [esi+ebx*2-0x2c]
  428a3f:	jg     0x428a55
  428a41:	popf   
  428a42:	jmp    0xdbd03acf
  428a47:	pop    ecx
  428a48:	test   eax,0x2215c9ec
  428a4d:	fldcw  WORD PTR [esi-0x3e]
  428a50:	mov    dh,BYTE PTR [esi-0x389dfc34]
  428a56:	test   eax,0x26203552
  428a5b:	push   edi
  428a5c:	xor    BYTE PTR [edx+0x39b9fa16],ch
  428a62:	gs inc esp
  428a64:	bound  eax,QWORD PTR [ecx]
  428a66:	pop    eax
  428a67:	shr    DWORD PTR [ecx+0x12],0x6d
  428a6b:	(bad)  
  428a6c:	out    dx,al
  428a6d:	(bad)
  428a70:	in     eax,0x29
  428a72:	idiv   BYTE PTR [edx+ecx*2+0x49f31dc3]
  428a79:	pop    esi
  428a7a:	inc    ecx
  428a7b:	mov    DWORD PTR ds:0x63dbed92,ebp
  428a81:	and    edx,DWORD PTR [edx]
  428a83:	repz fild QWORD PTR ds:0xfe2297da
  428a8a:	(bad)  
  428a8b:	(bad)  [eax+0x23]
  428a8e:	cli    
  428a8f:	repnz out 0x18,al
  428a92:	add    BYTE PTR [eax+eax*1+0x0],bh
	...
  428aa6:	add    BYTE PTR [eax],al
  428aa8:	push   0x111cec01
  428aad:	push   cs
  428aae:	out    0xef,eax
  428ab0:	rcl    edi,1
  428ab2:	test   BYTE PTR [ecx+0x6a42e07a],ch
  428ab8:	sub    ch,bl
  428aba:	jg     0x428a8b
  428abc:	xor    DWORD PTR [bx-0x22da],0xe
  428ac2:	(bad)  
  428ac3:	push   ds
  428ac4:	sub    eax,0xfdc12c8d
  428ac9:	and    edi,ebx
  428acb:	scas   al,BYTE PTR es:[edi]
  428acc:	in     eax,0x18
  428ace:	je     0x428a9a
  428ad0:	daa    
  428ad1:	fldenv [esi-0x18]
  428ad4:	pcmpeqw mm1,QWORD PTR [ecx+ebp*1-0x6316fea2]
  428adc:	mov    al,0xd
  428ade:	test   BYTE PTR [ecx-0x5a171ad3],ch
  428ae4:	mov    ds:0xa16dfb0d,al
  428ae9:	mov    edi,?
  428aeb:	cmp    BYTE PTR [esi+0x52],ah
  428aee:	call   0xfb502d81
  428af3:	sbb    esp,DWORD PTR [esi-0x6a9daaaf]
  428af9:	xchg   ecx,eax
  428afa:	in     al,0x51
  428afc:	in     al,0x4
  428afe:	sub    BYTE PTR [edx+0x7253a70a],bl
  428b04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428b06:	sti    
  428b07:	fadd   QWORD PTR [ecx-0x20]
  428b0a:	inc    eax
  428b0b:	jmp    0x428b10
	...
  428b20:	push   es
  428b21:	ficom  DWORD PTR [edi-0x53]
  428b24:	popa   
  428b25:	pop    esi
  428b26:	dec    esp
  428b27:	lds    ebp,FWORD PTR [ecx-0x56]
  428b2a:	das    
  428b2b:	pop    ds
  428b2c:	xchg   ecx,eax
  428b2d:	bound  esi,QWORD PTR [ebp+eax*8+0x49]
  428b31:	bound  eax,QWORD PTR [eax+eax*1+0x17]
  428b35:	loope  0x428b2e
  428b37:	adc    eax,0x40f187
  428b3c:	and    BYTE PTR [eax*4-0x7c876825],0xcb
  428b44:	xor    ebx,DWORD PTR [eax-0x71f4ffdc]
  428b4a:	clc    
  428b4b:	test   DWORD PTR [edx+edx*4],ecx
  428b4e:	dec    edi
  428b4f:	push   edi
  428b50:	sub    BYTE PTR [ebx-0x4aa88b09],dh
  428b56:	not    DWORD PTR ds:0x40e84f
  428b5c:	dec    eax
  428b5d:	std    
  428b5e:	add    BYTE PTR [edx+eax*8-0x73],dh
  428b62:	(bad)  
  428b63:	call   0x434429
  428b68:	ror    cl,1
  428b6a:	xor    edi,0x3e
  428b6d:	cdq    
  428b6e:	and    al,0x1c
  428b70:	inc    edx
  428b71:	xchg   ecx,eax
  428b72:	and    al,0x1c
  428b74:	xor    ch,BYTE PTR [ecx-0x580cdfdc]
  428b7a:	mov    al,0x0
  428b7c:	mov    ebp,DWORD PTR [esi-0x3e8872e0]
  428b82:	sub    BYTE PTR [ecx+0x0],bl
	...
  428b95:	add    BYTE PTR [eax],al
  428b97:	add    BYTE PTR [ebx],dh
  428b99:	mov    bh,0x48
  428b9b:	add    DWORD PTR [ebx+0x6724448f],ecx
  428ba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ba2:	not    DWORD PTR ds:0x40e6af
  428ba8:	not    BYTE PTR [esp+esi*2]
  428bab:	or     eax,edx
  428bad:	and    eax,0x18a3c92b
  428bb2:	push   cs
  428bb3:	add    BYTE PTR [ebx],bh
  428bb5:	xor    al,0xa
  428bb7:	sar    DWORD PTR [ebp+0xa],0xe8
  428bbb:	ficomp DWORD PTR [ebp+0xa]
  428bbe:	imul   eax
  428bc0:	(bad)  
  428bc1:	std    
  428bc2:	stos   BYTE PTR es:[edi],al
  428bc3:	add    BYTE PTR [edx+0x7b],ah
  428bc6:	mov    esi,0xff2339e8
  428bcb:	push   DWORD PTR [edi+0x70dc120f]
  428bd1:	inc    edx
  428bd2:	call   FWORD PTR [edx-0x54]
  428bd5:	pop    ebp
  428bd6:	dec    esp
  428bd7:	xchg   edi,edi
  428bd9:	xchg   esp,eax
  428bda:	lds    edx,FWORD PTR [ebp-0x17]
  428bdd:	sbb    eax,0xcf5aec84
  428be2:	jge    0x428bdd
  428be4:	xchg   ebp,eax
  428be5:	pop    ds
  428be6:	adc    ah,al
  428be8:	push   eax
  428be9:	ret    0x8704
  428bec:	aaa    
  428bed:	(bad)  
  428bee:	jnp    0x428c3d
  428bf0:	push   0x1a
  428bf2:	push   esi
  428bf3:	scas   eax,DWORD PTR es:[edi]
  428bf4:	bound  eax,QWORD PTR [edx]
  428bf6:	add    eax,0x4f
  428bf9:	mov    esi,0x557d
	...
  428c0e:	add    BYTE PTR [eax],al
  428c10:	outs   dx,BYTE PTR ds:[esi]
  428c11:	mov    edi,DWORD PTR [edx]
  428c13:	or     dl,cl
  428c15:	out    dx,eax
  428c16:	push   ss
  428c17:	add    BYTE PTR [edx+0x76],ah
  428c1a:	mov    edi,0xdcf06f75
  428c1f:	sbb    eax,esp
  428c21:	(bad)  
  428c22:	lock sti 
  428c24:	psubd  mm5,mm7
  428c27:	adc    eax,0x3f32b2
  428c2c:	clc    
  428c2d:	jmp    0xf07c:0x188a557b
  428c34:	mov    cl,BYTE PTR [edx+0x1c620148]
  428c3a:	lock lea ecx,[edi]
  428c3d:	stos   BYTE PTR es:[edi],al
  428c3e:	jl     0x428c0a
  428c40:	dec    edx
  428c41:	ja     0x428c2a
  428c43:	sti    
  428c44:	push   ebp
  428c45:	addr16 add al,0xd7
  428c49:	clc    
  428c4a:	jnp    0x428ca1
  428c4c:	push   esi
  428c4d:	fst    DWORD PTR [ecx]
  428c4f:	mov    edi,esi
  428c51:	bndldx bnd3,[eax+0x39]
  428c55:	in     eax,0x35
  428c57:	adc    eax,0xbaaad9a2
  428c5c:	in     al,0xe1
  428c5e:	jmp    0xe5f8335c
  428c63:	add    dh,BYTE PTR [eax+0x60c7f862]
  428c69:	inc    ecx
  428c6a:	pop    ebp
  428c6b:	inc    ebx
  428c6c:	bound  eax,QWORD PTR [ebp-0x45652414]
  428c72:	jmp    0x428c7a
	...
  428c87:	add    ch,bl
  428c89:	pop    ss
  428c8a:	xor    eax,edx
  428c8c:	fnstenvw [ebx+edi*2]
  428c90:	neg    BYTE PTR [eax-0x2b]
  428c93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c94:	fmul   QWORD PTR [esi]
  428c96:	jmp    0x5ee8bced
  428c9b:	in     eax,dx
  428c9c:	jge    0x428cd0
  428c9e:	fidiv  DWORD PTR [esi-0x76f42ae7]
  428ca4:	stos   DWORD PTR es:[edi],eax
  428ca5:	test   dl,ah
  428ca7:	lods   al,BYTE PTR ds:[esi]
  428ca8:	mov    eax,ds:0xc503e9d9
  428cad:	shl    BYTE PTR [esi+0x6f],1
  428cb0:	pop    edx
  428cb1:	push   cs
  428cb2:	std    
  428cb3:	xor    ch,bh
  428cb5:	fs or  ecx,esi
  428cb8:	cdq    
  428cb9:	push   cs
  428cba:	and    edx,0xeee9d820
  428cc0:	adc    ecx,esp
  428cc2:	je     0x428c4d
  428cc4:	add    cl,BYTE PTR [edx+ebx*2]
  428cc7:	out    dx,eax
  428cc8:	adc    ch,BYTE PTR [edx+0xfba8964]
  428cce:	dec    edx
  428ccf:	out    dx,eax
  428cd0:	cli    
  428cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428cd2:	call   0x51ebeeda
  428cd7:	lea    eax,[edx+0xf]
  428cda:	add    BYTE PTR [esi],dh
  428cdc:	loope  0x428cf2
  428cde:	adc    al,0x64
  428ce0:	push   ds
  428ce1:	test   DWORD PTR [eax],edx
  428ce3:	pusha  
  428ce4:	daa    
  428ce5:	fld    DWORD PTR [eax]
  428ce7:	jmp    0x17eaf0ce
	...
  428d00:	cmp    eax,0x9c3ee812
  428d05:	fadd   DWORD PTR [eax]
  428d07:	adc    edi,ebp
  428d09:	in     al,dx
  428d0a:	add    cl,ch
  428d0c:	cwde   
  428d0d:	and    eax,ebp
  428d0f:	mov    dl,0x10
  428d11:	fld    DWORD PTR [eax]
  428d13:	bound  ecx,QWORD PTR [ebx-0x15107623]
  428d19:	sbb    BYTE PTR [ebp-0x1a],dh
  428d1c:	xor    ebx,DWORD PTR [ecx]
  428d1e:	jmp    0x11beea4
  428d23:	pusha  
  428d24:	call   0x5bd0:0x47a92fdd
  428d2b:	in     eax,0xe2
  428d2d:	fwait
  428d2e:	or     al,0xe6
  428d30:	jmp    0xc200:0xd2248918
  428d37:	inc    edx
  428d38:	fld    DWORD PTR [si+0x2da9]
  428d3d:	test   BYTE PTR [esi-0x13],ah
  428d40:	or     ebp,ebp
  428d42:	xchg   BYTE PTR [ecx],ch
  428d44:	pop    esi
  428d45:	test   al,0x87
  428d47:	idiv   DWORD PTR [ecx]
  428d49:	and    BYTE PTR [eax],al
  428d4b:	jmp    0x86448eb1
  428d50:	popa   
  428d51:	fld    DWORD PTR [ecx+ebp*4-0x69953f3]
  428d58:	mov    WORD PTR [ecx-0x1d0747f4],cs
  428d5e:	push   0xd96121
  428d63:	inc    ecx
	...
  428d78:	jno    0x428d7c
  428d7a:	add    BYTE PTR [eax],al
  428d7c:	dec    ebx
  428d7d:	push   ebp
  428d7e:	shl    BYTE PTR [esp+edi*8-0x4e],0x4
  428d83:	(bad)  
  428d84:	(bad)  
  428d85:	cld    
  428d86:	dec    edi
  428d87:	push   ecx
  428d88:	ror    BYTE PTR [esi],0x63
  428d8b:	retf   0xd94b
  428d8e:	add    al,ch
  428d90:	mov    ds:0xbf00002e,al
  428d95:	sbb    BYTE PTR [eax+esi*1-0x7a],dh
  428d99:	popa   
  428d9a:	test   al,0xfe
  428d9c:	fs sti 
  428d9e:	dec    edi
  428d9f:	jmp    FWORD PTR [esi]
  428da1:	pop    ecx
  428da2:	or     al,BYTE PTR [eax-0x5]
  428da5:	test   al,0x8d
  428da7:	test   DWORD PTR [ebx+0x3bfff6fe],esp
  428dad:	test   al,0x83
  428daf:	push   cs
  428db0:	xchg   ebx,eax
  428db1:	push   edx
  428db2:	add    BYTE PTR [eax],al
  428db4:	sti    
  428db5:	xor    BYTE PTR [ebx-0x7b270412],ch
  428dbb:	rcr    BYTE PTR [edi-0x44ba7df1],0xc9
  428dc2:	leave  
  428dc3:	inc    ecx
  428dc4:	inc    ebx
  428dc5:	or     eax,0xc34016e2
  428dca:	test   esi,esi
  428dcc:	pop    edi
  428dcd:	or     eax,DWORD PTR [edx+0x1ac4d30e]
  428dd3:	add    BYTE PTR [ebx-0x1a17396f],bh
  428dd9:	mov    edx,0x0
	...
  428dee:	add    BYTE PTR [eax],al
  428df0:	adc    DWORD PTR [edx-0x7e],edx
  428df3:	shl    DWORD PTR [ebx+ebx*4+0x53],0xc9
  428df8:	mov    ecx,0x5600d9
  428dfd:	or     BYTE PTR [edi-0x75],cl
  428e00:	test   esp,edx
  428e02:	mov    edi,0x4059cf06
  428e07:	add    BYTE PTR [edx+0x7d],ah
  428e0a:	in     eax,dx
  428e0b:	je     0x428e61
  428e0d:	ja     0x428e0c
  428e0f:	out    0x69,eax
  428e11:	loopne 0x428e17
  428e13:	add    cl,ch
  428e15:	mov    edx,0x28004dc
  428e1a:	push   ecx
  428e1c:	sahf   
  428e1d:	(bad)  
  428e1e:	add    BYTE PTR [ecx],al
  428e20:	and    eax,0xa28c82fc
  428e25:	add    dh,BYTE PTR [ebx+0x3]
  428e28:	fnstenv [ebx+0x283f0dc]
  428e2e:	call   FWORD PTR [edx-0x17]
  428e31:	mov    ebx,0x25ebe4a
  428e36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e37:	cdq    
  428e38:	sar    DWORD PTR [edx-0x7f],0xbf
  428e3c:	scas   eax,DWORD PTR es:[edi]
  428e3d:	ja     0x428e1f
  428e3f:	jg     0x428e47
  428e41:	cli    
  428e42:	jg     0x428e30
  428e44:	cmp    cl,bh
  428e46:	push   ebx
  428e47:	push   edx
  428e48:	xchg   ebp,eax
  428e49:	ja     0x428e21
  428e4b:	das    
  428e4c:	or     DWORD PTR [ebp-0x7679dbbd],ebp
  428e52:	inc    ebx
  428e53:	and    al,0x0
	...
  428e65:	add    BYTE PTR [eax],al
  428e67:	add    BYTE PTR [esi],bl
  428e69:	movsx  ecx,WORD PTR [ecx-0x3ceb21d2]
  428e70:	push   ds
  428e71:	(bad)  
  428e72:	sub    al,al
  428e74:	out    dx,al
  428e75:	rol    DWORD PTR [ebx+eax*8],0x1e
  428e79:	push   ss
  428e7a:	xor    esi,DWORD PTR [ebx+ebx*8-0x249dfb3f]
  428e81:	mov    ch,0x28
  428e83:	sbb    bl,ch
  428e85:	mov    ch,0x28
  428e87:	sbb    al,0xeb
  428e89:	in     eax,dx
  428e8a:	sub    BYTE PTR [eax],ah
  428e8c:	xor    DWORD PTR [ecx-0x6b],ebx
  428e8f:	add    BYTE PTR [edx+0x2],ah
  428e92:	cmp    BYTE PTR [edx+0x6e],0xd9
  428e96:	stc    
  428e97:	cld    
  428e98:	jecxz  0x428ef9
  428e9a:	jmp    0x5ee5f0a2
  428e9f:	mov    esp,0x33ac87a
  428ea4:	bound  ebx,QWORD PTR [esi+0x41]
  428ea7:	xchg   BYTE PTR [ecx-0x7a],bl
  428eaa:	mov    esp,0x1d021978
  428eaf:	or     eax,0x3f660b49
  428eb4:	xchg   BYTE PTR [ebp-0x6a149ade],bh
  428eba:	lds    ebx,FWORD PTR [ebx]
  428ebc:	fisttp DWORD PTR [ebp+0x54c033cd]
  428ec2:	sub    DWORD PTR [esi-0x51],esi
  428ec5:	pop    esi
  428ec6:	stos   DWORD PTR es:[edi],eax
  428ec7:	jmp    DWORD PTR [esi+edx*2+0x1311]
	...
  428ede:	add    BYTE PTR [eax],al
  428ee0:	mov    dl,0x5c
  428ee2:	call   0x6202:0xec00cb13
  428ee9:	add    DWORD PTR [edx+0x6ed96274],ebx
  428eef:	int3   
  428ef0:	out    0x2e,eax
  428ef2:	pop    esp
  428ef3:	clc    
  428ef4:	lods   eax,DWORD PTR ds:[esi]
  428ef5:	sbb    cl,ch
  428ef7:	add    esp,DWORD PTR [edx+0x73]
  428efa:	jo     0x428f3c
  428efc:	jle    0x428ebf
  428efe:	into   
  428eff:	and    bh,bl
  428f01:	xchg   ebp,eax
  428f02:	or     eax,0x5ca63218
  428f07:	cmp    BYTE PTR [esi+0x570f91b9],al
  428f0d:	or     bl,BYTE PTR [edx+0x6073a57f]
  428f13:	inc    eax
  428f14:	jle    0x428ed7
  428f16:	sbb    DWORD PTR [ecx],0x78e9d943
  428f1c:	es mov ch,0xe1
  428f1f:	fld    TBYTE PTR [ecx+0x797600ed]
  428f25:	mov    edx,0x94fb1ad7
  428f2a:	and    al,0xfd
  428f2c:	adc    DWORD PTR [esp+ecx*2+0x5],ebx
  428f30:	cmp    al,BYTE PTR [ecx]
  428f32:	popf   
  428f33:	ins    BYTE PTR es:[edi],dx
  428f34:	jns    0x428f44
  428f36:	xchg   DWORD PTR [esi],ebx
  428f38:	frstor ds:[ecx]
  428f3b:	jmp    0xbcca36a1
  428f40:	dec    ebp
  428f41:	push   ebx
  428f42:	retf   
  428f43:	inc    ecx
	...
  428f58:	jg     0x428f59
  428f5a:	(bad)  
  428f5b:	call   0x1fc7991c
  428f60:	cmp    DWORD PTR [ebp+0x52],edx
  428f63:	push   ds
  428f64:	cmp    DWORD PTR [esi],ecx
  428f66:	xchg   BYTE PTR [ebp-0x6570ebb],ch
  428f6c:	lea    esp,[esi-0x168a4a73]
  428f72:	mov    DWORD PTR [ebp-0x1f171693],ebx
  428f78:	fcmovnu st,st(0)
  428f7a:	add    BYTE PTR [ebp+0x26],ah
  428f7d:	test   DWORD PTR [edi],esi
  428f7f:	shr    DWORD PTR ds:0x34e90038,1
  428f85:	and    BYTE PTR [edi-0x5f],bh
  428f88:	inc    ecx
  428f89:	jae    0x428f8f
  428f8b:	pop    esp
  428f8c:	sub    eax,0x572818b5
  428f91:	xchg   ebp,eax
  428f92:	and    al,0xe1
  428f94:	test   eax,0x61e99a0c
  428f99:	push   edx
  428f9a:	dec    esp
  428f9b:	add    eax,0xb2400156
  428fa0:	enter  0x7f0d,0xec
  428fa4:	mov    eax,ds:0x51e944a2
  428fa9:	add    DWORD PTR [eax],0x665961e9
  428faf:	add    BYTE PTR [edi-0x7cdba374],dh
  428fb5:	(bad)  
  428fb6:	adc    al,0xf4
  428fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fb9:	xchg   ebp,eax
  428fba:	add    BYTE PTR [ebp+0x0],cl
	...
  428fd0:	pop    edi
  428fd1:	mov    ecx,0x60cde810
  428fd6:	add    BYTE PTR [eax],al
  428fd8:	adc    dh,cl
  428fda:	test   al,0x8
  428fdc:	xchg   DWORD PTR [ebx+eiz*8],ecx
  428fdf:	jge    0x428fe1
  428fe1:	fiadd  WORD PTR [eax]
  428fe3:	mov    al,BYTE PTR [edi]
  428fe5:	jmp    0x797b3802
  428fea:	push   ds
  428feb:	mov    ecx,0x40849b
  428ff0:	mov    ds:0x7cffcf36,eax
  428ff5:	xchg   DWORD PTR [esp+0x63],eax
  428ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ffa:	add    BYTE PTR [eax],al
  428ffc:	cmp    ebx,DWORD PTR [ebp-0x2f]
  428fff:	call   0x50438c8c
  429004:	icebp  
  429005:	fisttp QWORD PTR [ebx+0x53]
  429008:	call   0x2bbaa500
  42900d:	popf   
  42900e:	add    bl,ch
  429010:	sbb    ah,BYTE PTR [ebp+0x4]
  429013:	je     0x429003
  429015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429016:	add    BYTE PTR [eax],al
  429018:	sti    
  429019:	pop    esp
  42901a:	bound  edx,QWORD PTR [esp+ecx*1]
  42901d:	fxtract 
  42901f:	adc    al,0x8b
  429021:	fisttp QWORD PTR [ebp-0x172a98b4]
  429027:	add    ch,BYTE PTR [edi+0x6d5ff6f1]
  42902d:	mov    al,ds:0xa0a68b53
  429032:	mov    ebx,0x53
	...
  429047:	add    BYTE PTR [ebp-0x56],dh
  42904a:	sub    ebx,ebx
  42904c:	push   0x628bf986
  429051:	arpl   sp,bx
  429053:	push   eax
  429054:	(bad)  
  429055:	repnz inc BYTE PTR [edx+eiz*4-0x26afa6fa]
  42905d:	aaa    
  42905e:	ds call 0x46ed85
  429064:	out    0x32,eax
  429066:	imul   ebp,edi,0xffffffdf
  429069:	test   al,0x70
  42906b:	pop    ebp
  42906c:	fnstenv [edi-0xd8c4624]
  429072:	inc    BYTE PTR [esi+0x75ee7d52]
  429078:	pop    esi
  429079:	add    al,0xbf
  42907b:	out    0x9c,eax
  42907d:	sub    al,0xf7
  42907f:	dec    esi
  429080:	inc    ebp
  429081:	add    eax,0xf2a66a67
  429086:	out    0x15,eax
  429088:	mov    esi,0xe7003f04
  42908d:	mov    cl,0x70
  42908f:	pop    es
  429090:	sbb    eax,0xa28caaf2
  429095:	bnd jne 0x429108
  429098:	pop    esi
  429099:	jmp    0x42909d
  42909b:	xchg   DWORD PTR [ecx],esp
  42909d:	jge    0x429063
  42909f:	jne    0x429113
  4290a1:	jnp    0x429099
  4290a3:	out    0x1d,eax
  4290a5:	pop    ss
  4290a6:	(bad)  
  4290a7:	(bad)  
  4290a8:	jmp    0x11b67fc
	...
  4290bd:	add    BYTE PTR [eax],al
  4290bf:	add    BYTE PTR [ebp-0xe],cl
  4290c2:	(bad)  
  4290c3:	out    0x1a,al
  4290c5:	jnp    0x42907e
  4290c7:	call   0xfc2ac0f6
  4290cc:	fbstp  TBYTE PTR [ecx]
  4290ce:	imul   ecx,DWORD PTR [ecx],0x32
  4290d1:	cmp    esi,0xfffffffa
  4290d4:	outs   dx,DWORD PTR ds:[esi]
  4290d5:	push   esi
  4290d6:	adc    eax,0xc47c6240
  4290db:	out    0x60,eax
  4290dd:	fstp   DWORD PTR [ecx+0x2]
  4290e0:	or     DWORD PTR [edi-0xada3ac2],esp
  4290e6:	les    edx,FWORD PTR [edi+esi*1+0x54]
  4290ea:	xor    BYTE PTR [ebp*4+0x2f2b1aae],0xd9
  4290f2:	jmp    0xb403:0xe9d89a7e
  4290f9:	call   0x42a4d4d0
  4290fe:	or     DWORD PTR [ecx],edx
  429100:	and    bl,cl
  429102:	push   ecx
  429103:	cdq    
  429104:	gs pop es
  429106:	jmp    0x9c93bb87
  42910b:	add    ebx,edi
  42910d:	adc    BYTE PTR [eax+eax*1+0x1e50197c],bh
  429114:	arpl   cx,bx
  429116:	jmp    0x98ecf497
  42911b:	call   0x42b96f2
  429120:	bound  edx,QWORD PTR [edx-0x5c]
  429123:	add    eax,DWORD PTR [eax]
	...
  429135:	add    BYTE PTR [eax],al
  429137:	add    BYTE PTR [ebp+0x1953e152],dl
  42913d:	imul   ecx,ecx,0x6ed96202
  429143:	bound  ebp,QWORD PTR ds:[edx+0x695fb6e]
  42914a:	pop    eax
  42914b:	or     esp,DWORD PTR [ebx-0x27]
  42914e:	jmp    0x371c30cf
  429153:	jnp    0x4291af
  429155:	test   eax,0xd85295da
  42915a:	jmp    0xe9df7662
  42915f:	js     0x42918f
  429161:	mov    ebp,0xab5a7ae1
  429166:	push   ecx
  429167:	xor    al,0x71
  429169:	cdq    
  42916a:	add    cl,ch
  42916c:	adc    DWORD PTR [edx],eax
  42916e:	adc    DWORD PTR [esi+ebx*4-0x74],esp
  429172:	pop    esi
  429173:	je     0x429197
  429175:	mov    ebp,0xa527392c
  42917a:	and    al,0xf1
  42917c:	test   ah,ch
  42917e:	push   eax
  42917f:	cli    
  429180:	and    ecx,ebx
  429182:	repnz sbb WORD PTR [ebx-0x77],di
  429187:	and    eax,0xa92fb542
  42918c:	push   ds
  42918d:	adc    eax,0x545e298c
  429192:	dec    esp
  429193:	or     eax,0xa5897b5e
  429198:	inc    ebp
  429199:	shr    eax,0xc5
	...
  4291b0:	inc    ecx
  4291b1:	add    edi,ebx
  4291b3:	gs push ds
  4291b5:	lea    ebx,[edx]
  4291b7:	jb     0x42915b
  4291b9:	mov    ebp,0xe92a6a18
  4291be:	xchg   ecx,esp
  4291c0:	mov    eax,0x55b5fb05
  4291c5:	mov    ebp,0x994d9d8d
  4291ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4291cb:	inc    esp
  4291cc:	add    ebp,DWORD PTR [ecx-0x6708e95b]
  4291d2:	add    ecx,ebp
  4291d4:	popa   
  4291d5:	pop    esi
  4291d6:	inc    esp
  4291d7:	int    0x59
  4291d9:	test   eax,0xa7fcf187
  4291de:	or     dh,dh
  4291e0:	lea    edi,[ebp-0x6ead11ec]
  4291e6:	movaps XMMWORD PTR [esi+0x54],xmm4
  4291ea:	inc    esp
  4291eb:	add    eax,0xfcfba95a
  4291f0:	xor    esi,edx
  4291f2:	inc    eax
  4291f3:	jmp    0x9b6333
  4291f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4291f9:	jne    0x42921f
  4291fb:	inc    esp
  4291fc:	sbb    eax,0x6b244484
  429201:	(bad)  
  429202:	adc    al,0x4c
  429204:	cwde   
  429205:	cdq    
  429206:	add    BYTE PTR [ebx+0x245484eb],cl
  42920c:	lahf   
  42920d:	pop    eax
  42920e:	retf   0xf0f
  429211:	mov    ecx,0xfff7
	...
  429226:	add    BYTE PTR [eax],al
  429228:	in     al,0x82
  42922a:	inc    ebp
  42922b:	add    BYTE PTR [eax],dl
  42922d:	add    dh,BYTE PTR [ebx]
  42922f:	pop    esp
  429230:	lahf   
  429231:	cdq    
  429232:	je     0x42924f
  429234:	push   es
  429235:	xchg   esi,eax
  429236:	and    al,0x10
  429238:	pop    ecx
  429239:	pop    edx
  42923a:	in     al,dx
  42923b:	adc    al,dh
  42923d:	std    
  42923e:	mov    WORD PTR [edi+ebx*2-0x33],?
  429242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429244:	out    dx,al
  429245:	test   al,0xa5
  429247:	(bad)  
  429248:	fisub  DWORD PTR [eax]
  42924a:	add    BYTE PTR [eax],al
  42924c:	cmp    esp,DWORD PTR [eax]
  42924e:	or     eax,0x10e50f8d
  429253:	push   esi
  429254:	fldcw  WORD PTR [eax-0x21c06e09]
  42925a:	add    BYTE PTR [eax],al
  42925c:	mov    al,0x8
  42925e:	lea    eax,[edi+ebx*1-0x23]
  429262:	push   eax
  429263:	call   FWORD PTR [esi]
  429265:	xchg   ebp,eax
  429266:	or     eax,DWORD PTR [eax+0xb]
  429269:	pop    edx
  42926a:	out    dx,al
  42926b:	jne    0x42927d
  42926d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42926e:	jnp    0x4292ec
  429270:	pop    ds
  429271:	jmp    0xc84b086d
  429276:	rol    DWORD PTR [ebx-0x7f],cl
  429279:	pop    ss
  42927a:	push   edi
  42927b:	pop    esi
  42927c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42927d:	xchg   edx,eax
  42927e:	jnp    0x429244
  429280:	push   edi
  429281:	pop    ss
  429282:	or     BYTE PTR [eax],al
  429284:	(bad)  
  429285:	lds    edi,FWORD PTR [ecx-0x14]
  429288:	xor    ecx,esp
  42928a:	jns    0x42927d
	...
  4292a0:	(bad)  
  4292a2:	call   0x4b23ef2e
  4292a7:	sti    
  4292a8:	adc    bl,BYTE PTR [edx-0x49aa87]
  4292ae:	mov    ch,0x85
  4292b0:	mov    ds:0x1f0afa87,al
  4292b5:	inc    ecx
  4292b6:	dec    edx
  4292b7:	mov    DWORD PTR [edi],esi
  4292b9:	outs   dx,BYTE PTR ds:[esi]
  4292ba:	in     eax,0x50
  4292bc:	push   0x77
  4292be:	cmp    edi,esp
  4292c0:	sub    al,0x49
  4292c2:	rcl    DWORD PTR [ebp-0x27],0x56
  4292c6:	dec    edi
  4292c7:	push   ecx
  4292c8:	adc    DWORD PTR [edi],edi
  4292ca:	enter  0xe74f,0xbd
  4292ce:	call   0xfb6aa423
  4292d3:	dec    esi
  4292d4:	adc    DWORD PTR [edi],edi
  4292d6:	in     al,0x75
  4292d8:	push   0x1a
  4292da:	(bad)  
  4292db:	jmp    DWORD PTR [edx+0x72]
  4292de:	in     eax,0x15
  4292e0:	data16 and bh,BYTE PTR [edi]
  4292e3:	add    bh,bl
  4292e5:	mov    cl,0x6b
  4292e7:	push   ebp
  4292e8:	xchg   esp,eax
  4292e9:	ja     0x4292dc
  4292eb:	xchg   DWORD PTR [edi-0x47aeb1da],ecx
  4292f1:	hlt    
  4292f2:	pop    eax
  4292f3:	add    al,0xb8
  4292f5:	inc    BYTE PTR [ebp-0x18]
  4292f8:	mov    bh,0xa
  4292fa:	(bad)  
  4292fb:	jmp    edi
  4292fd:	cmp    al,0xe7
  4292ff:	push   eax
  429300:	fbstp  TBYTE PTR [edi+esi*8]
  429303:	dec    edi
	...
  429318:	mov    cl,0x68
  42931a:	add    BYTE PTR [edi-0x6f],cl
  42931d:	pop    edi
  42931e:	in     al,0x75
  429320:	repz imul di,sp,0xd8ed
  429326:	cld    
  429327:	call   DWORD PTR [ebp-0x67]
  42932a:	jmp    0xe2d035ad
  42932f:	in     al,0x4f
  429331:	ror    edx,1
  429333:	push   cs
  429334:	jb     0x42931f
  429336:	sub    DWORD PTR [eax*2+0x3602c186],eax
  42933d:	shr    DWORD PTR [ebx],1
  42933f:	cmp    DWORD PTR [eax-0x3a57c884],0xa90256d6
  429349:	lea    ebx,[ebp-0x616881c]
  42934f:	inc    ebx
  429350:	bound  esp,QWORD PTR [ebx+0x1235c05f]
  429356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429357:	adc    esp,DWORD PTR [edx-0x52]
  42935a:	ins    BYTE PTR es:[edi],dx
  42935b:	push   edi
  42935c:	inc    esi
  42935d:	push   ecx
  42935e:	push   0xe9d692d7
  429363:	add    ebx,edi
  429365:	pop    ebp
  429366:	xchg   ecx,eax
  429367:	out    0x69,al
  429369:	add    esi,DWORD PTR [esi+0x2ec6b24d]
  42936f:	push   eax
  429370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429371:	outs   dx,DWORD PTR ds:[esi]
  429372:	add    eax,0x4208e551
  429377:	push   cs
  429378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429379:	out    0xa9,al
  42937b:	add    eax,DWORD PTR [eax]
	...
  42938d:	add    BYTE PTR [eax],al
  42938f:	add    bh,ah
  429391:	sbb    DWORD PTR [ebp-0x691643d1],edi
  429397:	dec    ebp
  429398:	sub    ebp,ebp
  42939a:	ror    DWORD PTR ds:0xbf66d9a2,0x6e
  4293a1:	mov    ds:0x56adc05f,eax
  4293a6:	and    al,0x6b
  4293a8:	sbb    edx,DWORD PTR [edi]
  4293aa:	je     0x42942a
  4293ac:	mov    edx,0x92e3fa04
  4293b1:	add    al,BYTE PTR [eax]
  4293b3:	fsub   QWORD PTR ds:0x74e940d3
  4293b9:	pop    esp
  4293ba:	test   al,0xe4
  4293bc:	add    edi,edi
  4293be:	dec    edi
  4293bf:	(bad)  
  4293c1:	push   cs
  4293c2:	movaps XMMWORD PTR [esi+0x5c],xmm3
  4293c6:	rcl    BYTE PTR [ebp-0x4e],0x54
  4293ca:	test   DWORD PTR [ecx+0x19fafec3],edx
  4293d0:	shr    esp,0x84
  4293d3:	fisub  DWORD PTR [ecx]
  4293d5:	(bad)  [ebp+0x647bd624]
  4293db:	cmp    ebx,edx
  4293dd:	pop    esp
  4293de:	test   al,0x9c
  4293e0:	cmp    esi,0x6e9b964f
  4293e6:	adc    DWORD PTR [ecx],ebp
  4293e8:	pop    sp
  4293ea:	sar    ch,0xc3
  4293ed:	ja     0x42946e
  4293ef:	cld    
  4293f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293f1:	mov    dh,BYTE PTR [ebp+0x48]
	...
  429408:	dec    ebp
  429409:	sbb    DWORD PTR [edx+0x60],esp
  42940c:	sbb    ebp,ecx
  42940e:	push   edx
  42940f:	je     0x42942c
  429411:	sbb    eax,0x3a5b5e50
  429416:	adc    ch,BYTE PTR [ecx-0x2b3fa39f]
  42941c:	fnsave [ecx]
  42941e:	add    DWORD PTR [edx-0x35],edx
  429421:	lods   al,BYTE PTR ds:[esi]
  429422:	xchg   DWORD PTR [ebp-0x1b],ecx
  429425:	cld    
  429426:	imul   DWORD PTR [eax+0x32]
  429429:	loope  0x42942c
  42942b:	jmp    0x93963b91
  429430:	xor    DWORD PTR [ecx-0x16ba5a73],ebp
  429436:	push   eax
  429437:	add    DWORD PTR [edx-0x1c],edx
  42943a:	add    cl,ch
  42943c:	jbe    0x4293eb
  42943e:	and    al,0x0
  429440:	adc    esi,DWORD PTR [eax+0x31]
  429443:	push   esp
  429444:	daa    
  429445:	rol    cl,cl
  429447:	jmp    0xe827:0x5431701b
  42944e:	sub    edx,edx
  429450:	dec    eax
  429451:	adc    al,0x82
  429453:	inc    esp
  429454:	into   
  429455:	int    0x30
  429457:	inc    esp
  429458:	xlat   BYTE PTR ds:[ebx]
  429459:	add    eax,0x5afb3340
  42945e:	stc    
  42945f:	add    al,0xcc
  429461:	cdq    
  429462:	enter  0x4842,0x24
  429466:	or     BYTE PTR [edx-0x5e],dh
  429469:	in     al,0x45
  42946b:	adc    BYTE PTR [eax],al
	...
  42947d:	add    BYTE PTR [eax],al
  42947f:	add    BYTE PTR [edi-0x43],dh
  429482:	div    DWORD PTR [ebp-0x55]
  429485:	mov    esp,0x689f2444
  42948a:	dec    esp
  42948b:	and    al,0x8f
  42948d:	in     eax,dx
  42948e:	or     ebp,edi
  429490:	fdivr  st(6),st
  429492:	mov    WORD PTR [edi+edx*4-0x33],es
  429496:	bound  edx,QWORD PTR [eax]
  429498:	pop    ebx
  429499:	push   0xedab244c
  42949e:	pop    ebx
  42949f:	out    dx,eax
  4294a0:	cld    
  4294a1:	test   BYTE PTR [esi],0xb6
  4294a4:	mov    dh,0x9
  4294a6:	jp     0x429490
  4294a8:	dec    ebx
  4294a9:	test   eax,0xd137481f
  4294ae:	dec    eax
  4294af:	jne    0x42950b
  4294b1:	pop    edi
  4294b2:	in     al,0x8c
  4294b4:	sti    
  4294b5:	fsub   QWORD PTR [edx+0x7]
  4294b8:	nop
  4294b9:	shl    DWORD PTR [edx+0x9cbff4],cl
  4294bf:	push   0x45
  4294c1:	push   eax
  4294c2:	jne    0x4294d0
  4294c4:	sbb    al,0xc4
  4294c6:	or     esi,0x73
  4294c9:	push   es
  4294ca:	xor    BYTE PTR [ecx],al
  4294cc:	(bad)
  4294d1:	fild   DWORD PTR [edx]
  4294d3:	xchg   DWORD PTR [edi-0x6dd792fa],ebx
  4294d9:	ins    DWORD PTR es:[edi],dx
  4294da:	inc    ebx
  4294db:	and    al,0x52
  4294dd:	(bad)  
  4294de:	ficom  WORD PTR ds:0x3f28c6
	...
  4294f8:	test   DWORD PTR [eax+0x343fe58d],ebx
  4294fe:	hlt    
  4294ff:	jmp    FWORD PTR [edi]
  429501:	jnp    0x4294d2
  429503:	bound  bx,DWORD PTR [esp+eax*1-0x7611a33d]
  42950b:	inc    eax
  42950c:	bound  edi,QWORD PTR [edi]
  42950e:	repz scas eax,DWORD PTR es:[edi]
  429510:	dec    esp
  429511:	mov    dl,0x4
  429513:	mov    DWORD PTR [esi+esi*8],esp
  429516:	mov    eax,edx
  429518:	add    al,0x33
  42951a:	xchg   DWORD PTR ss:[ebx-0x6a000796],edx
  429521:	repnz fadd DWORD PTR [esi+eax*2-0x6]
  429526:	std    
  429527:	jae    0x429586
  429529:	mov    ecx,esi
  42952b:	call   0x41b375
  429530:	jmp    0x6700d365
  429535:	repnz cmp BYTE PTR [edi+0x45e7373],al
  42953c:	bound  esi,QWORD PTR [edi+0x31e70406]
  429542:	push   DWORD PTR [ebx+0x64]
  429545:	jae    0x4295a5
  429547:	add    al,0x63
  429549:	cmp    eax,0x7a57fb0d
  42954e:	idiv   BYTE PTR [edi]
  429550:	bound  esi,QWORD PTR [ebx+0x4e]
  429553:	add    al,0x2d
  429555:	push   eax
  429556:	les    eax,FWORD PTR [edi+0x14edd99b]
	...
  429570:	and    bl,BYTE PTR [ecx-0x3071349c]
  429576:	into   
  429577:	retf   
  429578:	xchg   esi,eax
  429579:	shr    DWORD PTR [eax-0x25],cl
  42957c:	pusha  
  42957d:	(bad)  
  42957f:	xor    DWORD PTR [esi-0x25],0xffffffb6
  429583:	ret    
  429584:	mov    ch,0xa5
  429586:	pop    esi
  429587:	lock xchg ebx,eax
  429589:	pop    esp
  42958a:	test   bh,bl
  42958c:	bound  ecx,QWORD PTR [esi+0x2c]
  42958f:	loopne 0x4295c3
  429591:	stos   DWORD PTR es:[edi],eax
  429592:	push   ecx
  429593:	add    ebx,DWORD PTR [esi]
  429595:	fldl2t 
  429597:	ins    DWORD PTR es:[edi],dx
  429598:	bound  ebp,QWORD PTR [edx-0x19160936]
  42959e:	sub    DWORD PTR [edi+eiz*8],eax
  4295a1:	sbb    BYTE PTR [ecx+0x9],al
  4295a4:	fst    QWORD PTR [ebp-0x7a5d794b]
  4295aa:	out    0x14,eax
  4295ac:	mov    ds:0x26d9a611,al
  4295b1:	mov    ch,0xe5
  4295b3:	add    dh,BYTE PTR [eax]
  4295b5:	push   esp
  4295b6:	cwde   
  4295b7:	enter  0x7160,0x5a
  4295bb:	inc    ebx
  4295bc:	bound  eax,QWORD PTR [ebp-0x1c351414]
  4295c2:	jmp    0x135972ca
  4295c7:	(bad)  
  4295c8:	data16 fldcw WORD PTR [eax-0x11]
  4295cc:	mov    ds:0xad03e9d0,al
  4295d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4295d2:	mov    bl,0x38
	...
  4295e8:	mov    esp,0xe5d55ea1
  4295ed:	add    BYTE PTR [edi+esi*2+0x7e],bl
  4295f1:	gs jmp 0x51e2f7fa
  4295f7:	dec    ecx
  4295f8:	jns    0x4295d2
  4295fa:	add    cl,ch
  4295fc:	fcom   QWORD PTR [ebp+0x24]
  4295ff:	pop    ecx
  429600:	popa   
  429601:	fld    DWORD PTR [eax]
  429603:	es cmc 
  429605:	mov    ch,0xd4
  429607:	icebp  
  429608:	popa   
  429609:	fld    DWORD PTR [edi+0x3d774b26]
  42960f:	mov    ecx,0x7c12ef9
  429614:	add    dl,BYTE PTR [esi-0x40]
  429617:	jne    0x4295be
  429619:	ja     0x42961c
  42961b:	fs popf 
  42961d:	mov    ch,0x44
  42961f:	add    DWORD PTR [edx],ebp
  429621:	jl     0x429623
  429623:	jmp    0xe9668020
  429628:	popa   
  429629:	add    dh,BYTE PTR [ebp+ecx*1-0x16ff2df6]
  429630:	repnz xchg ebp,eax
  429632:	and    al,0xe1
  429634:	jo     0x4295df
  429636:	data16 or cl,ch
  429639:	adc    al,bl
  42963b:	sub    eax,0x5c08a97a
  429640:	push   ds
  429641:	fld1   
  429643:	jl     0x4295e5
  429645:	add    edi,ebx
  429647:	fs sahf 
  429649:	test   BYTE PTR [esi],dl
  42964b:	push   esp
	...
  429660:	rol    WORD PTR [eax],1
  429663:	jmp    0xdd672c17
  429668:	inc    ecx
  429669:	test   BYTE PTR [edx],cl
  42966b:	ja     0x429697
  42966d:	mov    ch,0x14
  42966f:	call   0xedc21089
  429674:	cmp    eax,0x7edd00e1
  429679:	scas   eax,DWORD PTR es:[edi]
  42967a:	sar    BYTE PTR [esi+0x68579c97],0x1a
  429681:	sbb    DWORD PTR [eax],ecx
  429683:	jmp    0x46d5e9
  429688:	dec    ebx
  429689:	les    ecx,FWORD PTR [ebp+0x415f84]
  42968f:	add    BYTE PTR [ebx],bh
  429691:	retf   0x548d
  429694:	pop    edi
  429695:	popf   
  429696:	lea    ecx,[edi+ebp*1-0x3e]
  42969a:	call   0x11816ed
  42969f:	cmp    edi,DWORD PTR ds:0xbf8acfa0
  4296a5:	mov    ch,0x5f
  4296a7:	and    al,0xe4
  4296a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296aa:	add    al,0x3c
  4296ac:	add    BYTE PTR [ecx-0x59efc33d],ah
  4296b2:	aas    
  4296b3:	mov    edi,esp
  4296b5:	ror    BYTE PTR [ebp+0x416f8c],0x0
  4296bc:	retf   
  4296bd:	les    eax,FWORD PTR [ebx+0x4c9b4cf]
  4296c3:	mov    eax,DWORD PTR [eax]
	...
  4296d5:	add    BYTE PTR [eax],al
  4296d7:	add    BYTE PTR [ebx+0xb79ee50],ch
  4296dd:	pop    ds
  4296de:	adc    eax,0x998d38
  4296e3:	cmp    eax,0xb6a8
  4296e8:	outs   dx,BYTE PTR ds:[esi]
  4296e9:	xor    DWORD PTR [ebp-0x8ca800a],eax
  4296ef:	mov    ah,0x9f
  4296f1:	inc    ebp
  4296f2:	or     BYTE PTR [eax],al
  4296f4:	jnp    0x42975e
  4296f6:	inc    esp
  4296f7:	and    al,0x93
  4296f9:	retf   0x6a50
  4296fc:	stos   BYTE PTR es:[edi],al
  4296fd:	push   edx
  4296fe:	(bad)  
  4296ff:	call   0x38ae8e
  429704:	(bad)  
  429705:	sbb    DWORD PTR [edi],eax
  429707:	test   BYTE PTR [esi+0x1e],ah
  42970a:	idiv   edi
  42970c:	mov    al,0x58
  42970e:	mov    eax,0xd94bc8
  429713:	data16 (bad) 
  429715:	jmp    0x900bb62
  42971a:	mov    edi,0x6aaa22fa
  42971f:	sti    
  429720:	xor    eax,0x3e8738bc
  429725:	jo     0x42970a
  429727:	clc    
  429728:	fldenv [ebp+0xb]
  42972b:	or     DWORD PTR [esi],0x6200040b
  429731:	inc    esp
  429732:	xor    bh,bl
  429734:	xchg   edi,eax
  429735:	add    al,BYTE PTR [esi+0x75dd9f1]
  42973b:	call   0x429740
	...
  429750:	sub    edx,ebp
  429752:	(bad)  
  429754:	fidiv  WORD PTR [edx-0x4dcffca8]
  42975a:	in     al,dx
  42975b:	(bad)  
  42975c:	(bad)  {k6}
  429761:	out    dx,al
  429762:	(bad)  
  429763:	jae    0x4297d2
  429765:	sbb    edx,DWORD PTR [ebx+0x10]
  429768:	fnstenv [ebp+0x1e4ffb0c]
  42976e:	imul   eax,DWORD PTR ds:0xe808bcbd,0xfbda32e4
  429778:	out    0x32,al
  42977a:	pop    eax
  42977b:	fdivr  QWORD PTR [eax]
  42977d:	int    0x8b
  42977f:	push   esp
  429780:	inc    esi
  429781:	push   es
  429782:	ss call 0x40b522
  429788:	clc    
  429789:	out    dx,al
  42978a:	sub    eax,0xce48551
  42978f:	lea    ebp,[esi]
  429791:	push   cs
  429792:	pop    ds
  429793:	sti    
  429794:	in     al,dx
  429795:	cmc    
  429796:	out    0x30,al
  429798:	xor    edx,0x161e8cfe
  42979e:	pop    es
  42979f:	mov    DWORD PTR [esi+0x4a240dd9],esp
  4297a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4297a6:	jmp    0x5192f9ae
  4297ab:	xchg   DWORD PTR [ecx-0x7b],ecx
  4297ae:	repz xor al,0xef
  4297b1:	xchg   esp,eax
  4297b2:	or     eax,0x10
	...
  4297c7:	add    BYTE PTR [edx+0x4a27ad4e],dl
  4297cd:	icebp  
  4297ce:	and    eax,0x5ed962e1
  4297d3:	int    0xa
  4297d5:	add    BYTE PTR [eax],al
  4297d7:	add    al,0x62
  4297d9:	push   eax
  4297da:	mov    ah,0xb
  4297dc:	in     eax,0x8a
  4297de:	loope  0x42976e
  4297e0:	sahf   
  4297e1:	mov    ch,0xf9
  4297e3:	xor    edi,ecx
  4297e5:	test   ecx,ebx
  4297e7:	fsubr  QWORD PTR [edi-0x33]
  4297ea:	adc    esp,ecx
  4297ec:	daa    
  4297ed:	sti    
  4297ee:	icebp  
  4297ef:	mov    BYTE PTR [esi+0x6202e1b4],ch
  4297f5:	fnstenv [edi+ecx*2+0x7e]
  4297f9:	jmp    0xd8f001cf
  4297fe:	jmp    0xa4023a13
  429803:	clc    
  429804:	std    
  429805:	add    esp,DWORD PTR [ecx-0x3bafe7c4]
  42980b:	ds in  al,dx
  42980d:	int3   
  42980e:	jmp    0x682f7549
  429813:	out    dx,eax
  429814:	pop    esi
  429815:	xlat   BYTE PTR ds:[ebx]
  429816:	jmp    0x32e5bd1e
  42981b:	(bad)  
  42981c:	fist   WORD PTR [eax]
  42981e:	xchg   esp,eax
  42981f:	fmul   QWORD PTR [ecx+0x791ae7f0]
  429825:	sti    
  429826:	mov    ch,0xc3
  429828:	out    0x8d,eax
  42982a:	inc    ecx
  42982b:	mov    BYTE PTR [eax],al
	...
  42983d:	add    BYTE PTR [eax],al
  42983f:	add    BYTE PTR [edx+0x4f],ch
  429842:	add    BYTE PTR [ecx+0x60f495d8],dl
  429848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429849:	add    DWORD PTR [ecx-0x7d0dca54],ecx
  42984f:	and    DWORD PTR [ecx-0x27],0x62
  429853:	adc    BYTE PTR [ebp-0x12e68bbf],al
  429859:	xchg   esp,eax
  42985a:	mov    eax,0xf48ce499
  42985f:	push   ecx
  429860:	pop    ebp
  429861:	cmp    bl,0x36
  429864:	fstp   QWORD PTR [ecx]
  429866:	je     0x429871
  429868:	jmp    0x42980e
  42986a:	cld    
  42986b:	jb     0x429811
  42986d:	add    eax,0xfee2e2e8
  429872:	cli    
  429873:	bound  edx,QWORD PTR [ebp+eax*1+0x6e091187]
  42987a:	sbb    ecx,ebp
  42987c:	popa   
  42987d:	stos   BYTE PTR es:[edi],al
  42987e:	shl    BYTE PTR [eax-0x5c],0x5
  429882:	mov    DWORD PTR [ecx+ecx*1-0x1012baaf],ebp
  429889:	push   esp
  42988a:	int3   
  42988b:	in     al,0xb9
  42988d:	dec    BYTE PTR [edi+0x6c]
  429890:	sbb    eax,DWORD PTR ds:0xfe26b0e8
  429896:	cli    
  429897:	bound  ebp,QWORD PTR [ebx]
  429899:	add    eax,0xdc12a984
  42989e:	xchg   DWORD PTR [edx+ecx*4],edx
  4298a1:	icebp  
  4298a2:	pop    es
  4298a3:	push   0x0
	...
  4298b5:	add    BYTE PTR [eax],al
  4298b7:	add    BYTE PTR [ecx-0x4de37902],cl
  4298bd:	push   edx
  4298be:	fcom   DWORD PTR [ecx-0x16ff1f89]
  4298c4:	je     0x4298d6
  4298c6:	and    DWORD PTR [esi+eiz*4],esp
  4298c9:	mov    eax,0x8cef8d4d
  4298ce:	hlt    
  4298cf:	add    bl,dl
  4298d1:	lods   al,BYTE PTR ds:[esi]
  4298d2:	sbb    DWORD PTR [eax],eax
  4298d4:	jnp    0x429927
  4298d6:	push   ebp
  4298d7:	in     al,0x61
  4298d9:	mov    edi,0xe0ece859
  4298de:	add    DWORD PTR [eax],eax
  4298e0:	add    bh,BYTE PTR [ecx]
  4298e2:	mov    BYTE PTR [eax+0x3b],al
  4298e5:	dec    ebx
  4298e6:	rol    DWORD PTR [ebp-0x3cba3170],0xfb
  4298ed:	pop    eax
  4298ee:	test   DWORD PTR [edi],0xff510f06
  4298f4:	mov    dh,0x99
  4298f6:	idiv   bh
  4298f8:	ins    BYTE PTR es:[edi],dx
  4298f9:	push   eax
  4298fa:	inc    ebp
  4298fb:	in     al,0xfb
  4298fd:	push   eax
  4298fe:	inc    ebp
  4298ff:	lock icebp 
  429901:	aad    0x50
  429903:	call   0x38d725
  429908:	js     0x429923
  42990a:	sbb    BYTE PTR [ebx-0x170fb5a4],cl
  429910:	push   ecx
  429911:	std    
  429912:	cli    
  429913:	push   DWORD PTR [eax+0xa]
  429916:	call   0x118acfe
  42991b:	xor    eax,DWORD PTR [eax]
	...
  42992d:	add    BYTE PTR [eax],al
  42992f:	add    BYTE PTR [ebx-0x78f011a8],cl
  429935:	cwde   
  429936:	lock mov edx,0xd49d
  42993c:	ds push ecx
  42993e:	enter  0xacfd,0x1e
  429942:	mov    esi,0x4294cb01
  429947:	jne    0x4298eb
  429949:	mov    esi,0x13025b56
  42994e:	push   ecx
  42994f:	push   ecx
  429950:	js     0x42991a
  429952:	sub    DWORD PTR [edi+eiz*4-0x17],0x50
  429957:	push   edi
  429958:	adc    BYTE PTR ds:0xb562b707,bl
  42995e:	add    al,0xe8
  429960:	shl    DWORD PTR [ebp-0x54150427],cl
  429966:	and    BYTE PTR [ebp*2+0x220eb724],bl
  42996d:	lock adc esi,ecx
  429970:	jmp    0x7e9725bf
  429975:	repnz sbb edx,DWORD PTR [ebx+0x5a]
  429979:	adc    BYTE PTR [eax],bh
  42997b:	xchg   BYTE PTR [esi+0x2b2ef8e6],bl
  429981:	jp     0x4299c6
  429983:	and    al,0x4e
  429985:	imul   ecx,DWORD PTR [esi+0x4],0x61
  429989:	mov    cl,0x17
  42998b:	add    ch,BYTE PTR [edi+0x22b205e9]
  429991:	cmp    ecx,DWORD PTR [ebx+0x6]
	...
  4299a8:	stos   BYTE PTR es:[edi],al
  4299a9:	push   ebp
  4299aa:	and    esp,DWORD PTR [esi+0x72]
  4299ad:	test   DWORD PTR [eax+0x8],eax
  4299b0:	stc    
  4299b1:	add    eax,0x3def046d
  4299b6:	sti    
  4299b7:	dec    edi
  4299b8:	out    0x48,eax
  4299ba:	add    al,0x50
  4299bc:	in     eax,dx
  4299bd:	or     eax,0x2a2122b
  4299c2:	add    ah,0x6e
  4299c5:	out    dx,eax
  4299c6:	mov    ch,0x16
  4299c8:	mov    ds:0xa284c400,al
  4299cd:	lea    ebp,[edi+eax*4+0x16]
  4299d1:	out    0xf0,al
  4299d3:	xchg   BYTE PTR [esi],dl
  4299d5:	fdivrp st(4),st
  4299d7:	test   DWORD PTR [esi],ebx
  4299d9:	out    0xf8,al
  4299db:	cmp    eax,0x88f841e1
  4299e0:	push   cs
  4299e1:	out    0xf4,al
  4299e3:	mov    BYTE PTR [esi],ch
  4299e5:	fdivrp st(0),st
  4299e7:	ss sub eax,0xbf55f1d9
  4299ed:	pop    ecx
  4299ee:	sbb    eax,0xe2d94220
  4299f3:	jle    0x4299c8
  4299f5:	fldl2t 
  4299f7:	add    esp,ebx
  4299f9:	js     0x4299ec
  4299fb:	mov    bl,0x61
  4299fd:	fldl2t 
  4299ff:	push   ebp
  429a00:	pop    ebx
  429a01:	fs jmp 0xb2d9:0x9a64626d
  429a09:	(bad)  [esi+0x1]
	...
  429a20:	(bad)  
  429a21:	fldcw  WORD PTR [esi-0x37]
  429a24:	dec    ecx
  429a25:	mov    ebp,esp
  429a27:	mov    WORD PTR [edx],?
  429a29:	pop    esp
  429a2a:	dec    ebx
  429a2b:	fldcw  WORD PTR [esi+0x4ed1ce88]
  429a31:	fdiv   QWORD PTR [edx+0x5f80b1ff]
  429a37:	inc    eax
  429a38:	inc    esi
  429a39:	aad    0x61
  429a3b:	add    ch,BYTE PTR [ecx+0x2f]
  429a3e:	sub    DWORD PTR [esi+edx*4-0x49],ecx
  429a42:	mov    cl,0x4e
  429a44:	cwde   
  429a45:	cmp    ecx,0xffffff86
  429a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a49:	loope  0x429a49
  429a4b:	sbb    bl,ch
  429a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a4e:	loope  0x4299d4
  429a50:	jmp    0x429a49
  429a52:	jae    0x429a53
  429a54:	mov    ch,0xd9
  429a56:	inc    BYTE PTR [eax-0x1e]
  429a59:	je     0x429a20
  429a5b:	and    esp,DWORD PTR [edx+0x6e]
  429a5e:	and    ecx,DWORD PTR [ebp+0x3970cd20]
  429a64:	outs   dx,BYTE PTR ds:[esi]
  429a65:	les    esi,FWORD PTR [ecx-0x40874a7e]
  429a6b:	add    esp,DWORD PTR [edx+0x6c]
  429a6e:	or     al,BYTE PTR [edi+0x4170da23]
  429a74:	dec    edx
  429a75:	pop    esp
  429a76:	add    BYTE PTR [ecx+0x6a1f6b6f],dh
  429a7c:	sub    edx,ecx
  429a7e:	sti    
  429a7f:	xchg   edx,eax
  429a80:	mov    ebp,0x6c047e
	...
  429a95:	add    BYTE PTR [eax],al
  429a97:	add    BYTE PTR [ebp+ebx*8+0x50],al
  429a9b:	fs and ebx,edx
  429a9e:	push   eax
  429a9f:	mov    es,WORD PTR [edi+eiz*4+0x78662912]
  429aa6:	(bad)  
  429aa7:	in     eax,dx
  429aa8:	fcom   DWORD PTR [edx-0x2e5c51ec]
  429aae:	add    ecx,ebp
  429ab0:	popa   
  429ab1:	fldcw  WORD PTR [esi]
  429ab3:	sub    DWORD PTR [edx-0x773da26d],ecx
  429ab9:	nop
  429aba:	mov    esi,0x55a661e1
  429abf:	mov    bh,0xe6
  429ac1:	ins    DWORD PTR es:[edi],dx
  429ac2:	and    al,0xd9
  429ac4:	push   esi
  429ac5:	push   cs
  429ac6:	bound  ebp,QWORD PTR [edx+0x4b]
  429ac9:	not    DWORD PTR [ecx+0x62]
  429acc:	cmp    BYTE PTR [ebp+0x26],ch
  429acf:	(bad)  
  429ad0:	into   
  429ad1:	xor    al,0xc0
  429ad3:	jle    0x429a6a
  429ad5:	loop   0x429ae2
  429ad7:	push   esi
  429ad8:	pop    ds
  429ad9:	pop    edi
  429ada:	or     al,0x2c
  429adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429add:	outs   dx,DWORD PTR ds:[esi]
  429ade:	inc    eax
  429adf:	jmp    0xb20878ca
  429ae4:	(bad)  
  429ae5:	cdq    
  429ae6:	add    BYTE PTR [edx-0x12b528e4],bh
  429aec:	jbe    0x429b0a
  429aee:	aaa    
  429aef:	sub    BYTE PTR ds:0xe14f3eca,ah
  429af5:	out    dx,eax
  429af6:	adc    DWORD PTR [ebx+0xb],ebx
  429af9:	repz jae 0x429b09
	...
  429b10:	mov    esi,0xc637cb5f
  429b15:	popa   
  429b16:	cli    
  429b17:	add    BYTE PTR [esi+ecx*1-0x25903f7c],ah
  429b1e:	sub    ebx,ebx
  429b20:	dec    eax
  429b21:	scas   al,BYTE PTR es:[edi]
  429b22:	push   esi
  429b23:	pop    ebp
  429b24:	add    DWORD PTR [edx],ebx
  429b26:	push   ebx
  429b27:	ret    0xda93
  429b2a:	dec    esi
  429b2b:	mov    ebp,edx
  429b2d:	mov    BYTE PTR [ebx+0x63988356],0xd2
  429b34:	xchg   DWORD PTR [ecx+0x46],esp
  429b37:	add    al,0xd3
  429b39:	push   ebp
  429b3a:	push   cs
  429b3b:	add    BYTE PTR [ebx+0x76],bh
  429b3e:	shl    BYTE PTR [ebp+0x4e],0x5b
  429b42:	enter  0xe0ff,0xc3
  429b46:	jnp    0x429bc4
  429b48:	pop    edi
  429b49:	loope  0x429b4b
  429b4b:	je     0x429baf
  429b4d:	bound  edi,QWORD PTR [esi]
  429b4f:	or     BYTE PTR [eax],ah
  429b51:	sbb    bl,BYTE PTR [ebx+eax*1]
  429b54:	std    
  429b55:	cmc    
  429b56:	fs sbb al,0xa4
  429b59:	mov    DWORD PTR [eax+edx*1],esp
  429b5c:	retf   
  429b5d:	push   cs
  429b5e:	adc    eax,0x9a3d50
  429b63:	cmp    DWORD PTR [edi],0xffffffe1
  429b66:	add    DWORD PTR [esi+0x13],0x61
  429b6a:	dec    eax
  429b6b:	add    DWORD PTR [edx-0x4aa0f761],edx
  429b71:	pop    ss
  429b72:	add    al,0x0
	...
  429b88:	lods   eax,DWORD PTR ds:[esi]
  429b89:	(bad)  
  429b8b:	mov    esi,DWORD PTR [edi-0x4274f72b]
  429b91:	loope  0x429bf6
  429b93:	leave  
  429b94:	mov    bh,0x82
  429b96:	rcr    BYTE PTR [esp+ebp*8],0x60
  429b9a:	jbe    0x429ba0
  429b9c:	mov    eax,0x8006fbde
  429ba1:	fisubr WORD PTR [edx+0xb]
  429ba4:	bound  esi,QWORD PTR [eax+0x18565189]
  429baa:	loopne 0x429bbf
  429bac:	bound  eax,QWORD PTR [eax]
  429bae:	out    0xfe,al
  429bb0:	jae    0x429bf2
  429bb2:	jnp    0x429b74
  429bb4:	push   ss
  429bb5:	adc    dl,dl
  429bb7:	dec    edx
  429bb8:	push   0x7b
  429bba:	sub    eax,0xf331f908
  429bbf:	xchg   BYTE PTR [ebp+0x62123b47],dl
  429bc5:	add    BYTE PTR [edx],dh
  429bc7:	pop    edx
  429bc8:	mov    al,ds:0x1686fefb
  429bcd:	and    al,0xfb
  429bcf:	ss adc ebp,eax
  429bd2:	dec    ebp
  429bd3:	or     ch,bl
  429bd5:	ror    DWORD PTR [edi+eiz*2],1
  429bd8:	xor    BYTE PTR [edi],ah
  429bda:	jle    0x429b9d
  429bdc:	data16 mov ah,BYTE PTR [edi]
  429bdf:	adc    ah,BYTE PTR [edx+0x2]
  429be2:	rol    DWORD PTR [edx+eiz*2],0x35
  429be6:	xchg   ah,ch
  429be8:	loope  0x429ba0
  429bea:	add    edi,DWORD PTR [edi+0x0]
	...
  429bfd:	add    BYTE PTR [eax],al
  429bff:	add    bh,al
  429c01:	call   0x2fdc:0x678d51ff
  429c08:	adc    al,0x86
  429c0a:	shl    BYTE PTR [edi+eiz*4-0x6b],cl
  429c0e:	inc    eax
  429c0f:	clc    
  429c10:	mov    dl,0x34
  429c12:	mov    BYTE PTR [ebp+0x6],al
  429c15:	xor    ebp,DWORD PTR [ecx-0x2]
  429c18:	xchg   esp,eax
  429c19:	retf   
  429c1a:	lock sbb ecx,DWORD PTR [esi+0x42]
  429c1e:	inc    DWORD PTR [edx+eiz*1-0x6078f58a]
  429c25:	fiadd  DWORD PTR [eax-0x77cda940]
  429c2b:	dec    eax
  429c2c:	pusha  
  429c2d:	jge    0x429bfb
  429c2f:	je     0x429bb6
  429c31:	(bad)  
  429c33:	and    eax,0x88e9d970
  429c38:	mov    dl,0x5e
  429c3a:	fist   DWORD PTR [eax+0x58]
  429c3d:	data16 and al,0xd0
  429c40:	adc    dh,ah
  429c42:	cmp    ebx,esp
  429c44:	adc    BYTE PTR [edi-0x19],bh
  429c47:	sub    al,0x99
  429c49:	into   
  429c4a:	aad    0xef
  429c4c:	push   ebp
  429c4d:	fldenv [esp+eax*8+0x17]
  429c51:	loop   0x429cc1
  429c53:	(bad)  
  429c54:	jp     0x429c02
  429c56:	repz add esp,DWORD PTR [edx-0x58]
  429c5a:	fwait
  429c5b:	xor    eax,0xcb2b1bdd
  429c60:	lods   eax,DWORD PTR ds:[esi]
  429c61:	mov    BYTE PTR [ebx],bl
  429c63:	sub    eax,0x0
	...
  429c78:	fucomp st(7)
  429c7a:	mov    dh,0xb8
  429c7c:	dec    edx
  429c7d:	data16 jb 0x429c55
  429c80:	pop    ecx
  429c81:	pusha  
  429c82:	jns    0x429d03
  429c84:	push   eax
  429c85:	ins    DWORD PTR es:[edi],dx
  429c86:	adc    ecx,DWORD PTR [ecx-0x2a96fee7]
  429c8c:	cmp    esp,esi
  429c8e:	pop    ebp
  429c8f:	(bad)  
  429c91:	repz aam 0xf9
  429c94:	nop
  429c95:	mov    eax,DWORD PTR [edx-0x11]
  429c98:	test   edx,ecx
  429c9a:	test   eax,0xa8224d03
  429c9f:	add    al,0xd0
  429ca1:	pcmpgtb mm0,mm4
  429ca4:	pop    ecx
  429ca5:	popf   
  429ca6:	inc    eax
  429ca7:	mov    DWORD PTR [ecx],ebx
  429ca9:	add    DWORD PTR [ebx],edx
  429cab:	out    dx,eax
  429cac:	std    
  429cad:	repz pop ebp
  429caf:	(bad)  
  429cb0:	or     al,BYTE PTR [esp+esi*8]
  429cb3:	add    esp,DWORD PTR [edx-0x6c]
  429cb6:	mov    ds:0x268fa589,eax
  429cbb:	cs in  eax,0xe9
  429cbe:	push   ebp
  429cc0:	(bad)  
  429cc1:	fist   WORD PTR [ecx+ebp*4]
  429cc4:	popa   
  429cc5:	pop    esp
  429cc6:	shl    BYTE PTR [edx-0x67],cl
  429cc9:	add    BYTE PTR [eax-0x7c106922],ch
  429ccf:	test   eax,0xce52e624
  429cd4:	mov    esp,0x5e290eef
  429cd9:	pop    esi
  429cda:	shl    BYTE PTR [eax+eax*1],0x0
	...
  429cee:	add    BYTE PTR [eax],al
  429cf0:	pusha  
  429cf1:	(bad)  
  429cf2:	mov    edi,0x5a98a1fa
  429cf7:	stos   BYTE PTR es:[edi],al
  429cf8:	loop   0x429cfe
  429cfa:	and    al,0x60
  429cfc:	cdq    
  429cfd:	fadd   DWORD PTR [eax]
  429cff:	jmp    0x62952b36
  429d04:	mov    eax,DWORD PTR [edi-0x32bdca73]
  429d0a:	das    
  429d0b:	mov    ds:0xe8392979,al
  429d10:	popa   
  429d11:	das    
  429d12:	add    cl,ch
  429d14:	popa   
  429d15:	leave  
  429d16:	push   edx
  429d17:	sbb    ah,ch
  429d19:	popf   
  429d1a:	and    al,0x5
  429d1c:	mov    gs,esi
  429d1e:	adc    al,0x9
  429d20:	xor    dh,BYTE PTR [ebx+0x5d196200]
  429d26:	sti    
  429d27:	aam    0x29
  429d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d2a:	push   edx
  429d2b:	call   0xee56:0x9249ddc
  429d32:	adc    al,0xe1
  429d34:	add    eax,0x296200b3
  429d39:	pop    ebp
  429d3a:	sti    
  429d3b:	test   BYTE PTR [ebp+0x61e90046],0xee
  429d42:	adc    al,0xe5
  429d44:	add    eax,0x266200b3
  429d49:	popa   
  429d4a:	inc    esp
  429d4b:	add    BYTE PTR [edi],dl
  429d4d:	out    0xe2,eax
  429d4f:	jle    0x429d2d
  429d51:	push   es
  429d52:	test   DWORD PTR [eax+eax*1+0x0],0x0
	...
  429d65:	add    BYTE PTR [eax],al
  429d67:	add    BYTE PTR [ebx-0x317a8c5e],cl
  429d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d6e:	adc    BYTE PTR [ebp-0x74db3ed1],cl
  429d74:	mul    BYTE PTR [ecx+ecx*8+0x0]
  429d78:	retf   
  429d79:	(bad)  
  429d7a:	call   0x11eefd7
  429d7f:	push   esi
  429d80:	dec    eax
  429d81:	stos   BYTE PTR es:[edi],al
  429d82:	push   ebp
  429d83:	push   DWORD PTR [esi-0x74bff11a]
  429d89:	jae    0x429d7b
  429d8b:	test   ebp,edx
  429d8d:	nop
  429d8e:	push   cs
  429d8f:	push   ebx
  429d90:	jae    0x429d6f
  429d92:	add    BYTE PTR [eax],al
  429d94:	jnp    0x429d41
  429d96:	dec    ebx
  429d97:	push   ebx
  429d98:	ss push es
  429d9a:	adc    eax,0x9668f8
  429d9f:	mov    ebp,ebx
  429da1:	pop    edi
  429da2:	out    dx,al
  429da3:	je     0x429dbe
  429da5:	pop    es
  429da6:	adc    eax,0x963814
  429dab:	push   eax
  429dac:	mov    esp,0xfb13faf0
  429db1:	aad    0x83
  429db3:	(bad)  
  429db4:	mov    al,0x35
  429db6:	call   0xf7492b9f
  429dbb:	test   BYTE PTR [ebx-0x70],bh
  429dbe:	add    edx,DWORD PTR [esi-0x64]
  429dc1:	lock adc dl,BYTE PTR [ebx+ecx*8]
  429dc5:	aad    0x85
  429dc7:	rcl    bh,0xdb
  429dca:	stos   DWORD PTR es:[edi],eax
  429dcb:	add    DWORD PTR [eax],eax
	...
  429ddd:	add    BYTE PTR [eax],al
  429ddf:	add    ch,dh
  429de1:	push   es
  429de2:	adc    eax,0x960714
  429de7:	test   BYTE PTR [eax+0x628b0790],ah
  429ded:	inc    esp
  429dee:	and    edx,DWORD PTR [eax]
  429df0:	out    0xbf,eax
  429df2:	pop    eax
  429df3:	add    ebx,ecx
  429df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429df6:	fdiv   st(3),st
  429df8:	fdivr  st(2),st
  429dfa:	int    0x53
  429dfc:	aad    0x14
  429dfe:	add    edx,DWORD PTR [edx+eiz*1]
  429e01:	add    BYTE PTR [esi],ch
  429e03:	pop    edx
  429e04:	daa    
  429e05:	retw   0xe157
  429e09:	cmp    esp,DWORD PTR [ebx]
  429e0b:	mov    edi,0x7fdb770f
  429e10:	mov    esi,0x892f31ef
  429e15:	xor    DWORD PTR [eax],ecx
  429e17:	loopne 0x429e25
  429e19:	mov    esp,0xb52c0104
  429e1e:	or     bh,BYTE PTR [edx+0x48b1de]
  429e24:	sub    al,0x3b
  429e26:	clc    
  429e27:	fist   WORD PTR [eax-0x40]
  429e2a:	add    al,0xa0
  429e2c:	sbb    cl,0x48
  429e2f:	add    BYTE PTR [edx+0x561a5800],bh
  429e35:	add    ecx,ecx
  429e37:	add    eax,0x48e3c4
  429e3c:	push   ebp
  429e3d:	inc    eax
  429e3e:	or     BYTE PTR [ecx+eax*8-0x4a],dh
  429e42:	add    al,0x7c
	...
  429e58:	xlat   BYTE PTR ds:[ebx]
  429e59:	inc    edx
  429e5a:	dec    DWORD PTR [eax+0x4461965f]
  429e60:	bound  esp,QWORD PTR [edi+ebx*8+0x6a]
  429e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e65:	add    bh,BYTE PTR [ecx]
  429e67:	sti    
  429e68:	dec    edi
  429e69:	mov    dh,0xf5
  429e6b:	aas    
  429e6c:	bound  ebp,QWORD PTR [edx+eax*8-0x77]
  429e70:	mov    bh,0xb2
  429e72:	jl     0x429ed1
  429e74:	push   ss
  429e75:	jp     0x429ea7
  429e77:	clc    
  429e78:	fcmovu st,st(1)
  429e7a:	lods   al,BYTE PTR ds:[esi]
  429e7b:	shr    BYTE PTR [ebp-0x4ffd4974],cl
  429e81:	and    DWORD PTR [eax+0x57],ecx
  429e84:	lea    edx,[ebp-0x29ac917]
  429e8a:	hlt    
  429e8b:	rcl    BYTE PTR [esi-0x2dbf939f],cl
  429e91:	mov    WORD PTR [ecx],es
  429e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e94:	mov    al,ds:0xa286e9ef
  429e99:	data16 repz jge 0x429ec4
  429e9d:	lock fcmovb st,st(4)
  429ea0:	jmp    0xb46a:0xac10d296
  429ea7:	frstor [ebx+ebp*1-0x16d08118]
  429eae:	shl    BYTE PTR [esp+edx*8-0x32814e11],1
  429eb5:	(bad)  
  429eb6:	push   cs
  429eb7:	mov    ebx,0xe06e86c5
	...
  429ed0:	std    
  429ed1:	cld    
  429ed2:	hlt    
  429ed3:	adc    al,0xa4
  429ed5:	out    0xeb,eax
  429ed7:	jecxz  0x429ed1
  429ed9:	xchg   esp,eax
  429eda:	jmp    0x1ac9b3e1
  429edf:	jge    0x429f34
  429ee1:	mov    sp,0xe690
  429ee5:	jle    0x429f14
  429ee7:	add    al,0xb1
  429ee9:	lock shl ebx,cl
  429eec:	push   esp
  429eed:	cdq    
  429eee:	jmp    0xa5c1e196
  429ef3:	add    ecx,DWORD PTR [edx]
  429ef5:	fcmovu st,st(4)
  429ef7:	lock lods al,BYTE PTR ds:[esi]
  429ef9:	mov    dh,0x45
  429efb:	bound  ebx,QWORD PTR [esi+0x62ffe9d9]
  429f01:	pop    ss
  429f02:	in     al,0x69
  429f04:	mov    ch,0x95
  429f06:	add    cl,ch
  429f08:	xor    bl,BYTE PTR [eax*1+0x957eb5]
  429f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f10:	jl     0x429eab
  429f12:	add    BYTE PTR [ebx-0x2],cl
  429f15:	add    BYTE PTR [ecx+ebp*8+0x2a],0xf4
  429f1a:	adc    al,0x2d
  429f1c:	in     al,dx
  429f1d:	scas   eax,DWORD PTR es:[edi]
  429f1e:	add    BYTE PTR [edx+0x70107717],bh
  429f24:	(bad)  
  429f25:	std    
  429f26:	mov    BYTE PTR [ecx+esi*4+0x47f55561],bl
  429f2d:	pop    es
  429f2e:	pop    ebx
  429f2f:	scas   al,BYTE PTR es:[edi]
  429f30:	and    al,0xed
  429f32:	add    cl,ch
	...
  429f48:	popa   
  429f49:	fldenv [ecx+0x95475d]
  429f4f:	cmp    ebp,DWORD PTR [edi+ebx*4+0x4e]
  429f53:	idiv   bl
  429f55:	pop    ss
  429f56:	jg     0x429f25
  429f58:	xchg   ebp,eax
  429f59:	repnz xor esp,DWORD PTR [ecx+0xc]
  429f5d:	sahf   
  429f5e:	in     al,dx
  429f5f:	sbb    esp,DWORD PTR [esi-0x6d583b0d]
  429f65:	push   esp
  429f66:	rcl    BYTE PTR ds:0x64007585,0x24
  429f6d:	icebp  
  429f6e:	dec    edi
  429f6f:	aaa    
  429f70:	push   es
  429f71:	loop   0x429f73
  429f73:	jmp    0x75b79219
  429f78:	fsubr  DWORD PTR [eax+edi*8+0x76]
  429f7c:	push   esp
  429f7d:	xor    edx,DWORD PTR ds:0xf86e5e29
  429f83:	call   0x2b3d6d1d
  429f88:	loope  0x429f70
  429f8a:	std    
  429f8b:	fldenv [ebp-0x42]
  429f8e:	into   
  429f8f:	inc    edx
  429f90:	fmul   DWORD PTR [edx-0x4ef4ff9a]
  429f96:	not    DWORD PTR ds:0x3af0c3
  429f9c:	js     0x429fb4
  429f9e:	or     al,0xc6
  429fa0:	mov    esi,0xb68d001e
  429fa5:	push   cs
  429fa6:	call   0xf74ae8ad
  429fab:	mov    al,BYTE PTR [eax]
	...
  429fbd:	add    BYTE PTR [eax],al
  429fbf:	add    BYTE PTR [esi-0x4fa1a8e2],bh
  429fc5:	xor    edi,DWORD PTR [ebx+0x7b0e5055]
  429fcb:	in     al,dx
  429fcc:	mov    bh,0x6f
  429fce:	inc    ebp
  429fcf:	in     al,0xed
  429fd1:	mov    cl,0x62
  429fd3:	sbb    al,0xeb
  429fd5:	ins    DWORD PTR es:[edi],dx
  429fd6:	repnz push edi
  429fd8:	adc    DWORD PTR [esi],ebx
  429fda:	sub    esi,esi
  429fdc:	xchg   esp,eax
  429fdd:	lock push 0x11
  429fe0:	jnp    0x429fb7
  429fe2:	test   eax,eax
  429fe4:	paddd  mm7,QWORD PTR [edi+0x7d]
  429fe8:	(bad)  
  429fea:	adc    BYTE PTR [eax],al
  429fec:	mov    edx,DWORD PTR [ecx+0x1d3ef70e]
  429ff2:	add    DWORD PTR [ecx],eax
  429ff4:	jnp    0x429fd0
  429ff6:	jne    0x42a005
  429ff8:	nop
  429ff9:	mov    esp,esp
  429ffb:	cmp    DWORD PTR [esi+0x5],edx
  429ffe:	outs   dx,BYTE PTR ds:[esi]
  429fff:	add    eax,0x2bf09000
  42a004:	int3   
  42a005:	mov    esi,0x2c85c683
  42a00a:	mov    ebx,0x4ecce783
  42a00f:	push   edi
  42a010:	shl    BYTE PTR [ebx],0x2b
  42a013:	mul    bl
  42a015:	dec    esi
  42a016:	idiv   edi
  42a018:	les    ebx,FWORD PTR [edx-0x8]
  42a01b:	push   ds
  42a01c:	inc    esp
  42a01d:	pop    eax
  42a01e:	or     eax,DWORD PTR [ecx]
  42a020:	bound  eax,QWORD PTR [eax]
  42a022:	dec    DWORD PTR [eax+eax*1+0x0]
	...
  42a035:	add    BYTE PTR [eax],al
  42a037:	add    BYTE PTR [esi-0x77b0032c],bl
  42a03d:	inc    eax
  42a03e:	pop    ecx
  42a03f:	sbb    ch,BYTE PTR [ebp+0x77fbca0a]
  42a045:	sub    ah,dh
  42a047:	aas    
  42a048:	bound  esi,QWORD PTR [ebp-0x3c]
  42a04b:	or     esp,esi
  42a04d:	mov    eax,0x4a620004
  42a052:	push   ds
  42a053:	lea    esp,[esi-0x2d9a10e4]
  42a059:	das    
  42a05a:	retf   0x3a15
  42a05d:	push   cs
  42a05e:	aas    
  42a05f:	add    cl,ah
  42a061:	mov    bl,0x0
  42a063:	lea    esp,[esi]
  42a065:	sbb    al,0xfb
  42a067:	push   ecx
  42a068:	cmp    BYTE PTR [esi],bl
  42a06a:	das    
  42a06b:	push   ebx
  42a06c:	dec    eax
  42a06d:	test   ecx,0x3ef12e15
  42a073:	add    bh,ah
  42a075:	aas    
  42a076:	cli    
  42a077:	sub    eax,0xffffffff
  42a07a:	(bad)  
  42a07b:	push   DWORD PTR [ecx]
  42a07d:	int    0x81
  42a07f:	ins    BYTE PTR es:[edi],dx
  42a080:	ds add al,0x35
  42a083:	xchg   DWORD PTR [edi+0x7950ad7a],esp
  42a089:	repnz std 
  42a08b:	xlat   BYTE PTR ds:[ebx]
  42a08c:	loope  0x42a0c8
  42a08e:	in     eax,dx
  42a08f:	or     bl,ch
  42a091:	outs   dx,BYTE PTR ds:[esi]
  42a092:	(bad)  
  42a093:	jmp    DWORD PTR [edx+0x7a]
  42a096:	inc    eax
  42a097:	add    dl,ah
  42a099:	dec    eax
  42a09a:	fdiv   QWORD PTR [eax+eax*1+0x0]
	...
  42a0ae:	add    BYTE PTR [eax],al
  42a0b0:	addr16 or ah,0xe8
  42a0b4:	iret   
  42a0b5:	cld    
  42a0b6:	jge    0x42a0b0
  42a0b8:	addr16 in eax,dx
  42a0ba:	sti    
  42a0bb:	xchg   BYTE PTR ds:0xa2244318,bl
  42a0c1:	fld1   
  42a0c3:	dec    eax
  42a0c4:	arpl   WORD PTR [ebx+0x6867ca66],ax
  42a0ca:	test   BYTE PTR [eax+0x2f1b5b6],0x5
  42a0d1:	xchg   DWORD PTR [ecx-0x5e],edx
  42a0d4:	add    bl,bl
  42a0d6:	jmp    0xbc2fab5d
  42a0db:	ret    0x80fd
  42a0de:	pop    esi
  42a0df:	and    BYTE PTR [edx-0x38],cl
  42a0e2:	test   eax,0xce14dd03
  42a0e7:	inc    edi
  42a0e8:	inc    esi
  42a0e9:	xchg   ebp,eax
  42a0ea:	sub    eax,DWORD PTR [edi+0x46]
  42a0ed:	rol    DWORD PTR [eax],1
  42a0ef:	or     dl,0xd6
  42a0f2:	jo     0x42a13b
  42a0f4:	jbe    0x42a0c8
  42a0f6:	retw   0x8867
  42a0fa:	fs inc edi
  42a0fc:	jle    0x42a0cb
  42a0fe:	cdq    
  42a0ff:	into   
  42a100:	ss mov ch,0x35
  42a103:	pop    edx
  42a104:	mov    ecx,0xa287b3ec
  42a109:	adc    edi,DWORD PTR gs:[ecx+0x1e]
  42a10d:	mov    ch,0xd
  42a10f:	sbb    DWORD PTR [ecx+0x7d158],esp
	...
  42a125:	add    BYTE PTR [eax],al
  42a127:	add    bl,ch
  42a129:	xchg   ebp,eax
  42a12a:	add    eax,0xa4d9d5f7
  42a12f:	inc    edx
  42a130:	bound  edx,QWORD PTR [ebx]
  42a132:	and    eax,0x6c025628
  42a137:	(bad)  
  42a138:	out    dx,al
  42a139:	leave  
  42a13a:	call   0x91ff:0x5e994658
  42a141:	(bad)  
  42a142:	and    eax,0x9103e504
  42a147:	or     eax,0x3679eb4e
  42a14c:	(bad)  
  42a14d:	(bad)  
  42a14e:	add    BYTE PTR [edx+ebx*4-0x4b],ah
  42a152:	sbb    al,0x19
  42a154:	ja     0x42a1c9
  42a156:	sti    
  42a157:	in     ax,dx
  42a159:	push   ebp
  42a15a:	shr    dh,0xa4
  42a15d:	cld    
  42a15e:	pop    esp
  42a15f:	mov    dl,0xa4
  42a161:	xchg   ebp,eax
  42a162:	and    al,0xe1
  42a164:	push   ecx
  42a165:	lock jae 0x42a175
  42a168:	bound  esi,QWORD PTR [ebx+0x1a]
  42a16b:	xchg   esi,eax
  42a16c:	stos   DWORD PTR es:[edi],eax
  42a16d:	lock cli 
  42a16f:	fcomp  QWORD PTR [ecx+0x4ee940ca]
  42a175:	push   esp
  42a176:	ret    0xe2c7
  42a179:	adc    al,0x28
  42a17b:	sub    esp,DWORD PTR [edx-0x27]
  42a17e:	repnz in al,dx
  42a180:	jmp    0x612be603
  42a185:	cmp    ax,0xe79f
  42a189:	pop    esp
  42a18a:	push   0xffffffa5
	...
  42a1a0:	popa   
  42a1a1:	xchg   ebx,edi
  42a1a3:	fadd   st(1),st
  42a1a5:	fiadd  DWORD PTR [eax-0x17]
  42a1a8:	add    ecx,esp
  42a1aa:	imul   ebp,DWORD PTR ds:0x5401415e,0xffffffbf
  42a1b1:	push   0x25
  42a1b3:	jns    0x42a230
  42a1b5:	xchg   ebp,eax
  42a1b6:	add    cl,ch
  42a1b8:	popf   
  42a1b9:	fadd   st,st(2)
  42a1bb:	in     al,dx
  42a1bc:	sub    al,0x92
  42a1be:	inc    esp
  42a1bf:	jmp    0xe547ba25
  42a1c4:	es xchg ebp,eax
  42a1c6:	add    ch,dh
  42a1c8:	jmp    0x798da265
  42a1cd:	jle    0x42a213
  42a1cf:	jmp    0xb557920b
  42a1d4:	jae    0x42a181
  42a1d6:	add    BYTE PTR [edi],ch
  42a1d8:	and    ebp,edi
  42a1da:	jae    0x42a1dc
  42a1dc:	daa    
  42a1dd:	out    dx,eax
  42a1de:	cmc    
  42a1df:	je     0x42a208
  42a1e1:	out    dx,eax
  42a1e2:	cmc    
  42a1e3:	jno    0x42a228
  42a1e5:	push   ds
  42a1e6:	push   ecx
  42a1e7:	add    al,0xc8
  42a1e9:	adc    cl,BYTE PTR [edx+eax*8]
  42a1ec:	xor    edx,edi
  42a1ee:	push   ebp
  42a1ef:	mov    ebx,DWORD PTR [edi-0x41e713a7]
  42a1f5:	mov    ds:0x90d456ec,eax
  42a1fa:	and    DWORD PTR [ebx+0x48e8bf5a],ecx
  42a200:	push   ss
  42a201:	fadd   DWORD PTR [eax]
  42a203:	mov    eax,DWORD PTR [eax]
	...
  42a215:	add    BYTE PTR [eax],al
  42a217:	add    BYTE PTR [esi],cl
  42a219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a21a:	or     al,BYTE PTR [eax+0xb]
  42a21d:	ins    BYTE PTR es:[edi],dx
  42a21e:	inc    ebp
  42a21f:	in     al,dx
  42a220:	mov    ebx,0x4c2c6e1d
  42a225:	and    eax,0x540b4689
  42a22a:	shl    BYTE PTR [ebp-0x3c],0xc8
  42a22e:	shr    cl,0x66
  42a231:	(bad)  
  42a232:	add    BYTE PTR [eax],al
  42a234:	icebp  
  42a235:	mov    eax,0xc0c7558d
  42a23a:	call   0x11a985f
  42a23f:	lea    eax,[esi+0x15ff5009]
  42a245:	shl    edi,1
  42a247:	xlat   BYTE PTR ds:[ebx]
  42a248:	inc    edx
  42a249:	xchg   edi,eax
  42a24a:	xor    al,0x85
  42a24c:	retf   
  42a24d:	mov    esi,edx
  42a24f:	push   0x68
  42a251:	jo     0x42a2a8
  42a253:	hlt    
  42a254:	inc    edx
  42a255:	or     eax,0xd67a3505
  42a25a:	lea    eax,[ebp-0x49]
  42a25d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a25e:	div    DWORD PTR [esi-0x71]
  42a261:	pop    ds
  42a262:	iret   
  42a263:	mov    DWORD PTR [ebp-0x5b],eax
  42a266:	test   eax,eax
  42a268:	(bad)  
  42a269:	int3   
  42a26a:	ret    
  42a26b:	data16 xchg BYTE PTR [ebp+0x48bbf431],cl
  42a272:	fidiv  DWORD PTR [ebx+eiz*2]
  42a275:	add    BYTE PTR [eax+0x45],bh
  42a278:	dec    esi
  42a279:	rol    bh,1
  42a27b:	jb     0x42a27d
	...
  42a28d:	add    BYTE PTR [eax],al
  42a28f:	add    BYTE PTR [esi-0x63765085],cl
  42a295:	mov    eax,0x48b6c081
  42a29a:	pop    edx
  42a29b:	and    eax,0x59cb2cd7
  42a2a0:	or     cl,bl
  42a2a2:	adc    BYTE PTR [ecx],al
  42a2a4:	bound  esp,QWORD PTR [ebp+0x41]
  42a2a7:	hlt    
  42a2a8:	mov    dl,0xab
  42a2aa:	dec    esi
  42a2ab:	sub    al,0x5
  42a2ad:	retf   
  42a2ae:	jge    0x42a2f2
  42a2b0:	ds jne 0x42a277
  42a2b3:	je     0x42a29c
  42a2b5:	inc    ebp
  42a2b6:	and    DWORD PTR [ebp-0x17d23769],ecx
  42a2bc:	scas   al,BYTE PTR es:[edi]
  42a2bd:	or     eax,DWORD PTR [eax+eax*1]
  42a2c0:	out    dx,eax
  42a2c1:	xor    al,0xd7
  42a2c3:	push   eax
  42a2c4:	aad    0x69
  42a2c6:	adc    edi,ebx
  42a2c8:	mov    ch,0x68
  42a2ca:	ds inc eax
  42a2cc:	fistp  QWORD PTR [edi-0x4b37c09]
  42a2d2:	(bad)  
  42a2d5:	fstp   TBYTE PTR [ecx+0x55]
  42a2d8:	mov    dl,0x98
  42a2da:	fcom   QWORD PTR [ebp-0x7300fe92]
  42a2e0:	daa    
  42a2e1:	adc    BYTE PTR [edi],ch
  42a2e3:	sti    
  42a2e4:	or     al,0xc4
  42a2e6:	(bad)  
  42a2e7:	rcr    ebx,cl
  42a2e9:	mov    cl,0x40
  42a2eb:	test   DWORD PTR [edx+0x7d4b7af2],esp
  42a2f1:	cmp    al,dh
  42a2f3:	data16 add BYTE PTR [eax],al
	...
  42a306:	add    BYTE PTR [eax],al
  42a308:	dec    edx
  42a309:	fnstenv [eax+esi*1+0x72]
  42a30d:	(bad)  
  42a30e:	xchg   ecx,eax
  42a30f:	push   ecx
  42a310:	cs fsubr st,st(1)
  42a313:	js     0x42a2bc
  42a315:	jmp    0xb6136e52
  42a31a:	xor    BYTE PTR [edx-0x7ece6025],0x22
  42a321:	fldcw  WORD PTR [ebp+0x13]
  42a324:	cmp    ecx,ebp
  42a326:	imul   ebx,DWORD PTR [ebp-0x75],0x8bdbbc56
  42a32d:	icebp  
  42a32e:	mov    cl,0xf
  42a330:	arpl   cx,bx
  42a332:	fs inc eax
  42a334:	or     cl,BYTE PTR [edx-0x17b9aeb6]
  42a33a:	sbb    DWORD PTR [eax+0x37a35322],eax
  42a340:	pop    ecx
  42a341:	dec    esi
  42a342:	sub    DWORD PTR [edx],ebp
  42a344:	cwde   
  42a345:	adc    ah,BYTE PTR [esi]
  42a347:	xor    ch,bl
  42a349:	cmc    
  42a34a:	xlat   BYTE PTR gs:[ebx]
  42a34c:	outs   dx,BYTE PTR ds:[esi]
  42a34d:	cmp    bh,BYTE PTR [ecx+0x2d]
  42a350:	sahf   
  42a351:	fldenv [esi+0x60]
  42a354:	out    0xd9,al
  42a356:	pop    esp
  42a357:	cmp    dh,bl
  42a359:	mov    al,BYTE PTR [edx]
  42a35b:	push   eax
  42a35c:	pop    edx
  42a35d:	call   0x826ddafa
  42a362:	ins    BYTE PTR es:[edi],dx
  42a363:	ret    
  42a364:	aaa    
  42a365:	fild   QWORD PTR [ecx+0x5d551f0c]
  42a36b:	push   es
	...
  42a380:	jge    0x42a39b
  42a382:	mov    al,0xc6
  42a384:	pop    esi
  42a385:	fnstenv [esi]
  42a387:	xor    cl,BYTE PTR [edx-0x66367005]
  42a38d:	call   0x54a0c3ce
  42a392:	in     al,dx
  42a393:	jae    0x42a3c1
  42a395:	popf   
  42a396:	add    cl,ch
  42a398:	inc    DWORD PTR [eax]
  42a39a:	sti    
  42a39b:	sbb    BYTE PTR [esi-0x7e],cl
  42a39e:	xchg   DWORD PTR [ecx-0x138bef1e],ebx
  42a3a4:	xor    BYTE PTR [ebx-0x341a7eaf],cl
  42a3aa:	sti    
  42a3ab:	mov    ?,WORD PTR [esi]
  42a3ad:	loopne 0x42a365
  42a3af:	xchg   BYTE PTR [ebx],bl
  42a3b1:	pusha  
  42a3b2:	ret    0x771f
  42a3b5:	sub    al,ch
  42a3b7:	cmp    al,0xe9
  42a3b9:	jecxz  0x42a3b5
  42a3bb:	gs push ds
  42a3bd:	ins    DWORD PTR es:[edi],dx
  42a3be:	adc    ah,BYTE PTR [esi-0x6e]
  42a3c1:	mov    ebp,0x582d7204
  42a3c6:	push   esi
  42a3c7:	lods   eax,DWORD PTR ds:[esi]
  42a3c8:	popa   
  42a3c9:	jg     0x42a3ca
  42a3cb:	inc    eax
  42a3cc:	mov    ah,0xc1
  42a3ce:	sti    
  42a3cf:	inc    esi
  42a3d0:	cs cld 
  42a3d2:	mov    eax,0x903a1b3e
  42a3d7:	xchg   ebx,eax
  42a3d8:	cmp    eax,0x65c9fbd9
  42a3dd:	push   0x603705ec
  42a3e2:	pop    esp
  42a3e3:	lds    eax,FWORD PTR [eax]
	...
  42a3f5:	add    BYTE PTR [eax],al
  42a3f7:	add    BYTE PTR [ebp-0x75],dl
  42a3fa:	jg     0x42a38e
  42a3fc:	int    0xe7
  42a3fe:	test   DWORD PTR [ebp+0x7253b575],edx
  42a404:	gs dec ecx
  42a406:	push   esi
  42a407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a408:	popa   
  42a409:	arpl   WORD PTR [edx],si
  42a40b:	jmp    DWORD PTR [ebx]
  42a40d:	leave  
  42a40e:	add    al,0x74
  42a410:	push   ecx
  42a411:	mov    ?,ebx
  42a413:	pop    edx
  42a414:	mov    dl,0xe2
  42a416:	push   edx
  42a417:	sub    DWORD PTR [edi],esp
  42a419:	icebp  
  42a41a:	pop    eax
  42a41b:	ins    BYTE PTR es:[edi],dx
  42a41c:	mov    ah,0x6c
  42a41e:	and    DWORD PTR [ebx+0x74],eax
  42a421:	push   esi
  42a422:	push   esp
  42a423:	add    BYTE PTR [edi-0xb],bl
  42a426:	push   edi
  42a427:	call   0x447128
  42a42c:	and    DWORD PTR [edx],edx
  42a42e:	lea    edx,[edi+ebx*2-0xb]
  42a432:	or     ebp,0xffe5d6d3
  42a438:	les    esp,FWORD PTR [esi-0x40]
  42a43b:	jne    0x42a48c
  42a43d:	pop    esi
  42a43e:	inc    esi
  42a43f:	adc    BYTE PTR [edi],bh
  42a441:	rol    BYTE PTR [ebx-0x7c2ce0bc],0x4c
  42a448:	pop    ds
  42a449:	iret   
  42a44a:	mov    DWORD PTR [edi+ebp*1-0x45],eax
  42a44e:	lea    eax,[edi+ebx*1-0x1]
  42a452:	dec    edx
  42a453:	(bad)  
  42a454:	inc    esi
  42a456:	dec    eax
  42a457:	push   eax
  42a458:	test   BYTE PTR [esi+0x4824],dl
	...
  42a46e:	add    BYTE PTR [eax],al
  42a470:	dec    esp
  42a471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a472:	and    al,0x28
  42a474:	jg     0x42a4e5
  42a476:	inc    eax
  42a477:	add    BYTE PTR [edx-0x4ccfdb42],dl
  42a47d:	sar    DWORD PTR [esi],cl
  42a47f:	push   DWORD PTR [ebx*2-0x3f50ff18]
  42a486:	dec    eax
  42a487:	je     0x42a4a8
  42a489:	mov    ds:0xa2f77448,eax
  42a48e:	jne    0x42a4a8
  42a490:	loope  0x42a474
  42a492:	bound  edx,QWORD PTR [eax-0x1408ee9d]
  42a498:	rol    DWORD PTR [edx-0x2544d8c2],1
  42a49e:	push   0xf71163b7
  42a4a3:	dec    esp
  42a4a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a4a6:	pop    ecx
  42a4a7:	pop    ecx
  42a4a8:	cmp    BYTE PTR ds:0x63b0ebf7,ah
  42a4ae:	inc    esp
  42a4af:	and    al,0x62
  42a4b1:	(bad)  
  42a4b2:	std    
  42a4b3:	inc    ecx
  42a4b4:	jb     0x42a531
  42a4b6:	inc    eax
  42a4b7:	and    al,0x26
  42a4b9:	mov    edi,0x3ce15722
  42a4be:	call   0x30330380
  42a4c3:	xchg   DWORD PTR [esi+0x5a7577ce],eax
  42a4c9:	jne    0x42a495
  42a4cb:	je     0x42a4bb
  42a4cd:	inc    edi
  42a4ce:	mov    esp,0x804f5db8
  42a4d3:	rol    BYTE PTR [eax],0x0
	...
  42a4e6:	add    BYTE PTR [eax],al
  42a4e8:	into   
  42a4e9:	fld    TBYTE PTR [ebx]
  42a4eb:	push   edx
  42a4ec:	cmp    cl,BYTE PTR [ecx+0x7c45fbc2]
  42a4f2:	les    esi,FWORD PTR [eax+eiz*4+0x7b]
  42a4f6:	stc    
  42a4f7:	(bad)  
  42a4f8:	cwde   
  42a4f9:	mov    esp,0xa626604
  42a4fe:	call   DWORD PTR [ecx-0x48]
  42a501:	repz (bad) 
  42a503:	in     al,dx
  42a504:	je     0x42a495
  42a506:	ret    
  42a507:	xchg   DWORD PTR [edx],ebx
  42a509:	jge    0x42a4ce
  42a50b:	je     0x42a545
  42a50d:	lahf   
  42a50e:	push   ecx
  42a50f:	adc    cl,bl
  42a511:	hlt    
  42a512:	outs   dx,BYTE PTR ds:[esi]
  42a513:	push   esi
  42a514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a515:	lock shl DWORD PTR [ebp+0x66],0x85
  42a51a:	jnp    0x42a49c
  42a51c:	arpl   ax,si
  42a51e:	(bad)  
  42a51f:	push   ecx
  42a520:	in     eax,0x40
  42a522:	pop    es
  42a523:	pushaw 
  42a525:	daa    
  42a526:	das    
  42a527:	call   0xfc067af1
  42a52c:	fldcw  WORD PTR [esi+0x77baf077]
  42a532:	repnz cli 
  42a534:	mov    ebp,0x2ffaf0da
  42a539:	add    BYTE PTR [eax+edx*4+0x42dd908],ah
  42a540:	test   eax,0x992ded6b
  42a545:	mov    BYTE PTR [ecx],dl
  42a547:	sbb    DWORD PTR [esi+0xd35ed4],0x0
	...
  42a55e:	add    BYTE PTR [eax],al
  42a560:	jp     0x42a594
  42a562:	add    esi,0x26a35189
  42a568:	test   edx,ecx
  42a56a:	mov    dl,0x50
  42a56c:	push   edx
  42a56d:	cmp    BYTE PTR [ecx+0x29],bl
  42a570:	fldenv es:[edx-0x6570a9b0]
  42a577:	xor    ebx,DWORD PTR [edx-0x440852a8]
  42a57d:	xchg   BYTE PTR [esi+0x1af5e530],ah
  42a583:	jnp    0x42a554
  42a585:	shl    DWORD PTR [ebp+ecx*8-0x4a],1
  42a589:	ins    DWORD PTR es:[edi],dx
  42a58a:	or     DWORD PTR [edi],0x7f69e4fa
  42a590:	and    ch,BYTE PTR [esi-0x32]
  42a593:	cs nop
  42a595:	icebp  
  42a596:	repz lds ebx,FWORD PTR [ecx]
  42a599:	in     eax,0x6c
  42a59b:	ret    
  42a59c:	mov    ss,WORD PTR [edi+0x7fddf85e]
  42a5a2:	lods   eax,DWORD PTR ds:[esi]
  42a5a3:	add    edi,DWORD PTR [ecx+ebx*8-0x31]
  42a5a7:	add    edx,DWORD PTR [eax-0x65241991]
  42a5ad:	retf   
  42a5ae:	sub    al,dh
  42a5b0:	in     eax,0xe1
  42a5b2:	imul   eax,esi,0x6e
  42a5b5:	scas   eax,DWORD PTR es:[edi]
  42a5b6:	sbb    dl,BYTE PTR [eax+0x72]
  42a5b9:	push   eax
  42a5ba:	in     al,0x73
  42a5bc:	sub    al,0x9d
  42a5be:	jmp    0x7517fd89
  42a5c3:	jle    0x42a5c5
	...
  42a5d5:	add    BYTE PTR [eax],al
  42a5d7:	add    BYTE PTR [edx+0x1003e9d9],dh
  42a5dd:	in     al,0xff
  42a5df:	ja     0x42a63e
  42a5e1:	jnp    0x42a5e4
  42a5e3:	xchg   esi,eax
  42a5e4:	jno    0x42a5d7
  42a5e6:	push   esi
  42a5e7:	out    0x9f,eax
  42a5e9:	loopne 0x42a571
  42a5eb:	scas   al,BYTE PTR es:[edi]
  42a5ec:	sbb    ebp,ecx
  42a5ee:	out    0xed,eax
  42a5f0:	(bad)  
  42a5f1:	(bad)  
  42a5f3:	ret    0xdf92
  42a5f6:	je     0x42a5d1
  42a5f8:	ror    BYTE PTR [ecx+0x56],0x25
  42a5fc:	data16 loopne 0x42a673
  42a5ff:	in     eax,0x47
  42a601:	loopne 0x42a652
  42a603:	in     eax,dx
  42a604:	loop   0x42a623
  42a606:	or     al,0x72
  42a608:	mov    ?,ecx
  42a60a:	adc    DWORD PTR [ecx+0x27],esp
  42a60d:	loopne 0x42a595
  42a60f:	scas   eax,DWORD PTR es:[edi]
  42a610:	jg     0x42a60e
  42a612:	or     eax,0xa1c99d8e
  42a617:	pop    ecx
  42a618:	js     0x42a5b7
  42a61a:	add    BYTE PTR [esi-0x53],bh
  42a61d:	aad    0x52
  42a61f:	jbe    0x42a68f
  42a621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a622:	jg     0x42a5c9
  42a624:	sub    al,BYTE PTR [edx-0x6b8ed5a3]
  42a62a:	xchg   DWORD PTR [ebp+0x6252c97d],edi
  42a630:	gs dec ecx
  42a632:	push   esi
  42a633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a634:	popa   
  42a635:	mov    BYTE PTR [edi-0x76329a3b],al
  42a63b:	mov    ch,0x0
	...
  42a64d:	add    BYTE PTR [eax],al
  42a64f:	add    BYTE PTR [ebp-0x2b],bl
  42a652:	test   DWORD PTR [esi],esi
  42a654:	out    dx,eax
  42a655:	push   edi
  42a656:	call   0xef42:0x85d961e9
  42a65d:	push   ecx
  42a65e:	xchg   edx,eax
  42a65f:	jmp    0x6d2b7fc5
  42a664:	out    0xdf,eax
  42a666:	cli    
  42a667:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42a669:	iret   
  42a66a:	test   BYTE PTR [eax],al
  42a66c:	cmp    ch,bl
  42a66e:	add    BYTE PTR [eax],al
  42a670:	(bad)  
  42a671:	push   0x3e
  42a673:	adc    al,0xdb
  42a675:	pop    eax
  42a676:	int    0xff
  42a678:	inc    edx
  42a679:	cdq    
  42a67a:	and    al,0x1c
  42a67c:	mov    esp,0x4b12daf2
  42a681:	(bad)  [ebx]
  42a683:	test   BYTE PTR [esi],0x31
  42a686:	jbe    0x42a6c8
  42a688:	mov    ch,0xa3
  42a68a:	out    dx,eax
  42a68b:	add    al,0x7a
  42a68d:	xchg   ebx,eax
  42a68e:	sub    BYTE PTR [ebx+0x6a10b94f],cl
  42a694:	mov    ebx,DWORD PTR [esp+esi*1]
  42a697:	test   DWORD PTR [esi],0x786a049f
  42a69d:	push   DWORD PTR [eax+ebx*1-0x3f7ae204]
  42a6a4:	ja     0x42a68c
  42a6a6:	add    BYTE PTR fs:[esi+0x3b01805e],ch
  42a6ad:	xlat   BYTE PTR ds:[ebx]
  42a6ae:	call   0xf75f2dc8
  42a6b3:	test   DWORD PTR [eax],eax
	...
  42a6c5:	add    BYTE PTR [eax],al
  42a6c7:	add    BYTE PTR [ebx],cl
  42a6c9:	sahf   
  42a6ca:	inc    DWORD PTR [ebp-0x10]
  42a6cd:	or     DWORD PTR [esp+ecx*8-0x70],edi
  42a6d1:	loopne 0x42a6fc
  42a6d3:	ror    bl,0x84
  42a6d6:	mov    DWORD PTR [esp+esi*4-0x1c],eax
  42a6da:	sub    esi,0x1824929c
  42a6e0:	pushf  
  42a6e1:	repz (bad) 
  42a6e3:	adc    cl,bl
  42a6e5:	(bad)  
  42a6e6:	test   ebp,ebp
  42a6e8:	mov    dl,0xe9
  42a6ea:	cmc    
  42a6eb:	je     0x42a754
  42a6ed:	mov    ebp,0xa32190a1
  42a6f2:	add    BYTE PTR [ebx+0x14],dl
  42a6f5:	push   ds
  42a6f6:	push   eax
  42a6f7:	push   eax
  42a6f8:	bound  ebp,QWORD PTR [edi-0x45]
  42a6fb:	or     al,0xd9
  42a6fd:	fcom   st(7)
  42a6ff:	inc    edi
  42a700:	or     eax,0xa787c4dc
  42a705:	inc    ebp
  42a706:	fmul   DWORD PTR [esi]
  42a708:	jmp    0x26991632
  42a70d:	lock ret 
  42a70f:	je     0x42a78f
  42a711:	fcom   QWORD PTR [ebx+0x53]
  42a714:	popf   
  42a715:	stos   BYTE PTR es:[edi],al
  42a716:	push   esp
  42a717:	jg     0x42a6b7
  42a719:	cld    
  42a71a:	pop    ebp
  42a71b:	pop    edx
  42a71c:	sub    DWORD PTR [ecx+0x1b620cc2],ebp
  42a722:	cmp    BYTE PTR [esi+ebp*2],ah
  42a725:	and    edi,DWORD PTR [eax]
  42a727:	and    al,0x66
  42a729:	sub    edi,DWORD PTR [eax]
  42a72b:	and    al,0x0
	...
  42a73d:	add    BYTE PTR [eax],al
  42a73f:	add    BYTE PTR [esi+0x18],bl
  42a742:	in     al,0xfa
  42a744:	gs cmp eax,ebx
  42a747:	push   ebp
  42a748:	jmp    0x6f2f2aa0
  42a74d:	mov    ds:0x77488757,al
  42a752:	mov    ch,0xe8
  42a754:	mov    ss,WORD PTR [edi-0x41]
  42a757:	sti    
  42a758:	loop   0x42a77e
  42a75a:	cmp    BYTE PTR [ecx-0x62],bl
  42a75d:	lock dec BYTE PTR [edx]
  42a760:	out    0xf5,eax
  42a762:	add    eax,DWORD PTR [eax]
  42a764:	bound  esi,QWORD PTR [ebp-0x4a]
  42a767:	je     0x42a7ad
  42a769:	push   es
  42a76a:	fisttp WORD PTR [edi+ebp*4+0x6ae85d9c]
  42a771:	rol    DWORD PTR ds:0x569b7800,0xfb
  42a778:	push   edi
  42a779:	rcl    BYTE PTR [ebx],0x40
  42a77c:	bound  edi,QWORD PTR [ebp+0x59]
  42a77f:	in     al,dx
  42a780:	fnstenv [edi-0x26fc0354]
  42a786:	and    al,bl
  42a788:	out    0x18,eax
  42a78a:	jmp    0x4403:0xe9d8c288
  42a791:	lea    edi,[edi+0x3]
  42a794:	leave  
  42a795:	stos   DWORD PTR es:[edi],eax
  42a796:	xor    DWORD PTR [ecx],0x18fad926
  42a79c:	ds (bad) 
  42a79e:	test   eax,0x63e8e503
  42a7a3:	mov    edx,0x0
	...
  42a7b8:	cs (bad) 
  42a7ba:	outs   dx,BYTE PTR ds:[esi]
  42a7bb:	ror    DWORD PTR [edx-0x663d0a33],1
  42a7c1:	sbb    ebx,ebp
  42a7c3:	lahf   
  42a7c4:	repnz cwde 
  42a7c6:	jmp    0xcef7b057
  42a7cb:	add    eax,0xb963eb4d
  42a7d0:	imul   ebx,DWORD PTR [ebp-0x7d],0x5ed96203
  42a7d7:	sar    DWORD PTR [edx-0x3f],1
  42a7da:	sahf   
  42a7db:	ret    0x5659
  42a7de:	test   eax,0xe948de12
  42a7e3:	add    esp,DWORD PTR [edx-0xf]
  42a7e6:	ja     0x42a860
  42a7e8:	dec    ecx
  42a7e9:	loope  0x42a857
  42a7eb:	ret    
  42a7ec:	imul   edx,DWORD PTR [ebp+0x6f],0x66d96203
  42a7f3:	scas   eax,DWORD PTR es:[edi]
  42a7f4:	pop    esi
  42a7f5:	dec    esi
  42a7f6:	sbb    esi,esp
  42a7f8:	out    dx,eax
  42a7f9:	mov    ecx,0x5262460c
  42a7fe:	adc    al,0x94
  42a800:	lods   al,BYTE PTR ds:[esi]
  42a801:	xchg   ebp,eax
  42a802:	jmp    0xe926f0b2
  42a807:	add    ebx,edi
  42a809:	sbb    DWORD PTR [edi+eiz*1-0x6f131283],edi
  42a810:	test   al,0xa5
  42a812:	add    BYTE PTR [ebx-0x70],dh
  42a815:	mov    dh,0x3e
  42a817:	jmp    0xea3a5fd5
	...
  42a830:	popa   
  42a831:	push   esi
  42a832:	rcl    BYTE PTR [ecx+esi*1-0xd1a13a0],0x93
  42a83a:	cmp    BYTE PTR [ebx-0x32],dl
  42a83d:	mov    edx,0xcc09e93e
  42a842:	imul   ecx
  42a844:	popa   
  42a845:	push   esi
  42a846:	sar    BYTE PTR [ebp+ebp*4+0x5f],0xec
  42a84b:	fst    st(2)
  42a84d:	xchg   ebx,eax
  42a84e:	cmp    al,0xa3
  42a850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a851:	mov    ebx,0xdfc9e93e
  42a856:	cmc    
  42a857:	jmp    0x5502febd
  42a85c:	jbe    0x42a8bd
  42a85e:	in     al,dx
  42a85f:	cmc    
  42a860:	in     al,dx
  42a861:	xchg   ebx,eax
  42a862:	push   eax
  42a863:	add    DWORD PTR [esi-0x4616c148],0xfffffff3
  42a86a:	cmc    
  42a86b:	jmp    0x1d02fed1
  42a870:	jp     0x42a863
  42a872:	push   esp
  42a873:	push   esp
  42a874:	and    esp,esp
  42a876:	sub    DWORD PTR [ecx-0x1b3d2776],0xffffff8c
  42a87d:	add    BYTE PTR [ecx+ebp*8+0x60],0x29
  42a882:	add    DWORD PTR [edx+0x59256058],edx
  42a888:	mov    WORD PTR [ebp-0x4e061700],ss
  42a88e:	mov    ch,0x66
  42a890:	and    ebx,DWORD PTR [eax+0x2]
  42a893:	rol    DWORD PTR [eax],cl
	...
  42a8a5:	add    BYTE PTR [eax],al
  42a8a7:	add    BYTE PTR [eax+0x58],ah
  42a8aa:	retf   0x7656
  42a8ad:	scas   eax,DWORD PTR es:[edi]
  42a8ae:	shr    BYTE PTR [esi+0xbf1283],0x8a
  42a8b5:	sub    DWORD PTR [eax+0x6],esi
  42a8b8:	or     ebx,esp
  42a8ba:	dec    ebx
  42a8bb:	push   ebp
  42a8bc:	int    0x80
  42a8be:	lea    ecx,[edi+ebx*2-0x34ffffab]
  42a8c5:	dec    esp
  42a8c6:	jmp    0x40ff:0xf5ed12e8
  42a8cd:	push   ecx
  42a8ce:	and    al,0x6a
  42a8d0:	mov    ecx,0x278b00db
  42a8d5:	icebp  
  42a8d6:	jle    0x42a8de
  42a8d8:	retf   
  42a8d9:	(bad)  ds:0xf7cc1233
  42a8df:	mov    ecx,DWORD PTR [esi+ecx*2-0x3a]
  42a8e3:	mov    DWORD PTR [edi-0xf],ecx
  42a8e6:	adc    ch,al
  42a8e8:	jae    0x42a8b3
  42a8ea:	add    BYTE PTR [eax],al
  42a8ec:	add    BYTE PTR [eax*4+0x7557a4ed],dh
  42a8f3:	add    DWORD PTR [ebx+0x6554fdb],ecx
  42a8f9:	push   eax
  42a8fa:	and    al,0x88
  42a8fc:	jnp    0x42a8d9
  42a8fe:	add    al,ch
  42a900:	cmp    al,0xeb
  42a902:	cmc    
  42a903:	call   esi
  42a905:	dec    esi
  42a906:	and    al,0x32
  42a908:	dec    ecx
  42a909:	fild   DWORD PTR [eax]
  42a90b:	call   0x42a910
	...
  42a920:	(bad)  
  42a921:	adc    dh,dh
  42a923:	jmp    FWORD PTR [eax]
  42a925:	inc    BYTE PTR [eax+eax*8+0x14628b63]
  42a92c:	(bad)  
  42a92d:	mov    fs,WORD PTR [eax+eiz*1]
  42a930:	dec    edx
  42a931:	test   DWORD PTR [ebp-0x526e07c],ecx
  42a937:	dec    DWORD PTR [ebx]
  42a939:	mov    ecx,DWORD PTR [ebx+0x53]
  42a93c:	mov    ah,0xc7
  42a93e:	test   BYTE PTR [ecx],dl
  42a940:	bound  esi,QWORD PTR [eax]
  42a942:	inc    DWORD PTR [edx+eiz*1+0x3b61f50f]
  42a949:	xor    al,0x43
  42a94b:	push   ss
  42a94c:	outs   dx,BYTE PTR ds:[esi]
  42a94d:	in     al,dx
  42a94e:	cmp    eax,0x56
  42a951:	and    eax,0x171b2ee9
  42a956:	xchg   BYTE PTR [esi+eiz*1-0x2c],cl
  42a95a:	mov    eax,DWORD PTR [esi+edi*2-0x24]
  42a95e:	dec    esi
  42a95f:	mov    dh,0x5e
  42a961:	and    eax,0x7cd70043
  42a966:	jecxz  0x42a9db
  42a968:	pusha  
  42a969:	lock (bad) 
  42a96b:	out    0x80,eax
  42a96d:	pop    ebp
  42a96e:	(bad)  
  42a96f:	jmp    edi
  42a971:	mov    al,0x10
  42a973:	xchg   ebp,eax
  42a974:	mov    ds:0x6875bf74,al
  42a979:	ret    
  42a97a:	les    esp,FWORD PTR [edx-0x15]
  42a97d:	je     0x42a967
  42a97f:	outs   dx,DWORD PTR ds:[esi]
  42a980:	pusha  
  42a981:	lock dec BYTE PTR [eax+eax*1+0x0]
	...
  42a995:	add    BYTE PTR [eax],al
  42a997:	add    dh,bl
  42a999:	aam    0x34
  42a99b:	(bad)  
  42a99c:	jge    0x42a98e
  42a99e:	dec    esi
  42a99f:	sti    
  42a9a0:	dec    edi
  42a9a1:	sub    al,0xf
  42a9a3:	inc    eax
  42a9a4:	bound  esi,QWORD PTR [ebp+0x58]
  42a9a7:	and    al,0x1e
  42a9a9:	call   0xeb:0xb34a594f
  42a9b0:	bound  eax,QWORD PTR [ebx]
  42a9b2:	mov    edi,0xe8a3da40
  42a9b7:	push   cs
  42a9b8:	(bad)  [ebx-0x23c2ec18]
  42a9be:	loop   0x42a9d7
  42a9c0:	xchg   edx,eax
  42a9c1:	ins    DWORD PTR es:[edi],dx
  42a9c2:	dec    eax
  42a9c3:	and    al,0x9e
  42a9c5:	rcl    BYTE PTR [ecx+0x26d47e44],0x14
  42a9cc:	mov    dl,0xd9
  42a9ce:	push   ecx
  42a9cf:	daa    
  42a9d0:	dec    edx
  42a9d1:	fsubr  st,st(1)
  42a9d3:	and    BYTE PTR [esi],0xc5
  42a9d6:	mov    sp,0xce09
  42a9da:	gs ins DWORD PTR es:[edi],dx
  42a9dc:	(bad)  
  42a9dd:	fldl2t 
  42a9df:	nop
  42a9e0:	sahf   
  42a9e1:	mov    ch,0xa1
  42a9e3:	push   ebx
  42a9e4:	fild   WORD PTR [ebp+ecx*1+0x38]
  42a9e8:	in     al,0xdd
  42a9ea:	call   0xa5f7987f
  42a9ef:	pop    es
  42a9f0:	(bad)  
  42a9f1:	fst    DWORD PTR [ecx]
  42a9f3:	je     0x42aa43
  42a9f5:	fldl2t 
  42a9f7:	mov    BYTE PTR [edx+0x8d65cd],ah
	...
  42aa0d:	add    BYTE PTR [eax],al
  42aa0f:	add    BYTE PTR [edx-0x27],ah
  42aa12:	jmp    0xe99bf469
  42aa17:	add    esp,DWORD PTR [edx+0x73]
  42aa1a:	call   0xe9b3bf71
  42aa1f:	add    esp,DWORD PTR [edx+0x19]
  42aa22:	je     0x42a9ab
  42aa24:	ds dec ecx
  42aa26:	in     eax,0x3
  42aa28:	bound  ecx,QWORD PTR [ecx-0x3511e72e]
  42aa2e:	sub    DWORD PTR [eiz*8+0x79bd65e8],eax
  42aa35:	arpl   WORD PTR [eax],cx
  42aa37:	mov    edi,0x43d78d57
  42aa3c:	bound  ebx,QWORD PTR [edx-0x4f]
  42aa3f:	push   ebx
  42aa40:	xlat   BYTE PTR ds:[ebx]
  42aa41:	jg     0x42aab1
  42aa43:	inc    edi
  42aa44:	jle    0x42aa0b
  42aa46:	sub    DWORD PTR [ebp+0xfdb5a6],ecx
  42aa4c:	cmp    bl,cl
  42aa4e:	jmp    0xfe9a1356
  42aa53:	mov    esi,0x478ddd39
  42aa58:	popf   
  42aa59:	dec    esi
  42aa5a:	add    BYTE PTR ds:0x1650c53a,ch
  42aa60:	mov    ebx,0xf1fcfb87
  42aa65:	retf   
  42aa66:	inc    eax
  42aa67:	jmp    0xe2b6c446
  42aa6c:	pop    ds
  42aa6d:	xchg   esi,eax
  42aa6e:	and    al,0xfa
  42aa70:	data16 mov ds:0xd7c,al
	...
  42aa86:	add    BYTE PTR [eax],al
  42aa88:	pop    edx
  42aa89:	gs add al,0x71
  42aa8c:	lea    esi,[ebp-0x395b60f1]
  42aa92:	cwde   
  42aa93:	(bad)  [ecx]
  42aa95:	fst    DWORD PTR [edx+0x26]
  42aa98:	jp     0x42aacf
  42aa9a:	push   cs
  42aa9b:	test   eax,0xcd445361
  42aaa0:	jo     0x42aaf7
  42aaa2:	rcl    BYTE PTR [ebp+ebp*2+0x79cd8c4e],0xd5
  42aaaa:	add    cl,ch
  42aaac:	stc    
  42aaad:	nop
  42aaae:	jle    0x42aa99
  42aab0:	popa   
  42aab1:	push   esp
  42aab2:	int    0x1
  42aab4:	add    dl,bl
  42aab6:	add    cl,ch
  42aab8:	jmp    0x42aa4f
  42aaba:	and    al,0xfa
  42aabc:	mov    edx,0xd8b22fd5
  42aac1:	sbb    al,0xb6
  42aac3:	mov    edi,0x7400d961
  42aac8:	shl    BYTE PTR [ebp-0x269e1680],cl
  42aace:	mov    al,dl
  42aad0:	and    BYTE PTR [ebx+0x7fbfb375],dl
  42aad6:	pop    ebp
  42aad7:	inc    edx
  42aad8:	loope  0x42aaee
  42aada:	jo     0x42aac3
  42aadc:	popa   
  42aadd:	fnstcw WORD PTR [esi-0x13a59e13]
  42aae3:	popf   
  42aae4:	outs   dx,BYTE PTR ds:[esi]
  42aae5:	fld    DWORD PTR [eax]
  42aae7:	add    BYTE PTR [eax-0x7c],bl
  42aaea:	dec    esi
  42aaeb:	push   edi
	...
  42ab00:	mov    esi,0x3b882449
  42ab05:	fadd   DWORD PTR [eax]
  42ab07:	mov    DWORD PTR [edi-0xf],esi
  42ab0a:	push   ss
  42ab0b:	call   0x389a3e
  42ab10:	jle    0x42ab5b
  42ab12:	and    al,0x3a
  42ab14:	stc    
  42ab15:	xlat   BYTE PTR ds:[ebx]
  42ab16:	add    al,ch
  42ab18:	xchg   edx,eax
  42ab19:	adc    esi,esi
  42ab1b:	(bad)  
  42ab1c:	clc    
  42ab1d:	add    BYTE PTR [ebp+0x628e23c0],al
  42ab23:	adc    al,0x7e
  42ab25:	mov    DWORD PTR [esp+edi*1],esp
  42ab28:	cli    
  42ab29:	xchg   DWORD PTR [ebp-0x56a587c],ecx
  42ab2f:	(bad)  
  42ab30:	mov    ebx,0x6c534b87
  42ab35:	les    eax,FWORD PTR [ecx+edx*1-0x3f7a27f5]
  42ab3c:	fucomp st(1)
  42ab3e:	pusha  
  42ab3f:	cmp    edi,ecx
  42ab41:	xchg   ebx,eax
  42ab42:	cs je  0x42ab04
  42ab45:	pop    eax
  42ab46:	clc    
  42ab47:	adc    al,0xe
  42ab49:	imul   BYTE PTR [ecx]
  42ab4b:	leave  
  42ab4c:	and    eax,0x43444c50
  42ab51:	dec    esp
  42ab52:	inc    esp
  42ab53:	and    al,0x73
  42ab55:	test   DWORD PTR [edx+0x914e0c],esi
  42ab5b:	(bad)  
  42ab5c:	out    dx,eax
  42ab5d:	repz jbe 0x42ab62
  42ab60:	jnp    0x42ab39
  42ab62:	call   0x42abe5
	...
  42ab77:	add    BYTE PTR [eax],dh
  42ab79:	aad    0x0
  42ab7b:	test   DWORD PTR [ebx],ecx
  42ab7d:	into   
  42ab7e:	xchg   ebp,eax
  42ab7f:	rol    bh,0x16
  42ab82:	jne    0x42ab8e
  42ab84:	sub    BYTE PTR [edi],dl
  42ab86:	pop    esi
  42ab87:	mov    DWORD PTR [edx+0x6c],esp
  42ab8a:	jecxz  0x42ac03
  42ab8c:	pusha  
  42ab8d:	lock dec BYTE PTR [esi+ebx*8+0x2dfe370c]
  42ab95:	icebp  
  42ab96:	dec    esi
  42ab97:	sti    
  42ab98:	dec    edi
  42ab99:	xor    al,0x10
  42ab9b:	inc    eax
  42ab9c:	bound  esi,QWORD PTR [edi+0x73]
  42ab9f:	and    al,0x90
  42aba1:	out    dx,al
  42aba2:	(bad)  
  42aba3:	(bad)  
  42aba4:	js     0x42abca
  42aba6:	mov    dl,BYTE PTR [esi+edi*1-0x2c]
  42abaa:	push   edi
  42abab:	call   0x40898a
  42abb0:	jecxz  0x42ab4c
  42abb2:	lock cwde 
  42abb4:	push   ebx
  42abb5:	fwait
  42abb6:	push   ebp
  42abb7:	lea    ebx,[esi-0x10b00f34]
  42abbd:	xor    al,0xe3
  42abbf:	addr16 dec eax
  42abc1:	fmul   QWORD PTR [esi-0x18]
  42abc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42abc5:	adc    bh,dh
  42abc7:	jmp    ecx
  42abc9:	lods   al,BYTE PTR ds:[esi]
  42abca:	movq   QWORD PTR [edx-0x187bf335],mm7
  42abd1:	icebp  
  42abd2:	(bad)  
  42abd3:	(bad)  
  42abd4:	fbstp  TBYTE PTR [ebx+eiz*8]
  42abd7:	pop    edi
  42abd8:	adc    dh,BYTE PTR [ebp-0x6d]
  42abdb:	and    al,0x0
	...
  42abed:	add    BYTE PTR [eax],al
  42abef:	add    BYTE PTR [esi],bl
  42abf1:	out    dx,al
  42abf2:	(bad)  
  42abf3:	jmp    edi
  42abf5:	fs loopne 0x42ab7b
  42abf8:	data16 lock (bad) 
  42abfb:	out    0x54,eax
  42abfd:	xchg   DWORD PTR [eax+eax*1],eax
  42ac00:	out    0x30,eax
  42ac02:	pop    es
  42ac03:	test   BYTE PTR [edi],al
  42ac05:	icebp  
  42ac06:	(bad)  
  42ac07:	(bad)  
  42ac08:	fbstp  TBYTE PTR [eax+eiz*8-0x79]
  42ac0c:	pop    esp
  42ac0d:	lock dec BYTE PTR [edi-0x11]
  42ac11:	jae    0x42abf3
  42ac13:	sbb    DWORD PTR [esi-0x27],0xffffffe9
  42ac17:	add    esi,DWORD PTR [edx+0x546bf3da]
  42ac1d:	cdq    
  42ac1e:	jmp    0x8e90f6b1
  42ac23:	xchg   DWORD PTR [edi],esi
  42ac25:	(bad)  
  42ac27:	jg     0x42abc7
  42ac29:	fsubr  st,st(1)
  42ac2b:	add    esp,DWORD PTR [ebp+0x191bcd8d]
  42ac31:	dec    esp
  42ac32:	gs loopne 0x42ac06
  42ac35:	shr    cl,cl
  42ac37:	add    esi,DWORD PTR [edx-0x761f8ab4]
  42ac3d:	xlat   BYTE PTR ds:[ebx]
  42ac3e:	jmp    0x58f9b46
  42ac43:	sbb    BYTE PTR [esi-0x27],0xe9
  42ac47:	stos   DWORD PTR es:[edi],eax
  42ac48:	lods   eax,DWORD PTR ds:[esi]
  42ac49:	pop    esi
  42ac4a:	jmp    0xe25b8b52
  42ac4f:	jg     0x42ac09
  42ac51:	fsubr  st,st(1)
  42ac53:	add    eax,DWORD PTR [eax]
	...
  42ac65:	add    BYTE PTR [eax],al
  42ac67:	add    BYTE PTR [edx+0x59],cl
  42ac6a:	jmp    0xe6b20e72
  42ac6f:	sub    eax,0x3e971c5
  42ac74:	bound  ebx,QWORD PTR [ecx+0x5c]
  42ac77:	cmp    BYTE PTR [esi+0x49],0xed
  42ac7b:	add    esp,DWORD PTR [edx-0x77]
  42ac7e:	ins    BYTE PTR es:[edi],dx
  42ac7f:	dec    eax
  42ac80:	jle    0x42ac2f
  42ac82:	add    ebp,ebx
  42ac84:	push   ds
  42ac85:	fldl2t 
  42ac87:	jg     0x42ac2b
  42ac89:	leave  
  42ac8a:	ins    DWORD PTR es:[edi],dx
  42ac8b:	jb     0x42acef
  42ac8d:	fldl2t 
  42ac8f:	mov    BYTE PTR [esi],bl
  42ac91:	mov    ch,0x9
  42ac93:	push   esp
  42ac94:	out    dx,eax
  42ac95:	mov    WORD PTR ds:0xd7cea18,es
  42ac9b:	pop    ds
  42ac9c:	jp     0x42ac55
  42ac9e:	cmp    al,0x4
  42aca0:	bound  edx,QWORD PTR [ebp+0x0]
  42aca3:	test   eax,0xe9c95d68
  42aca8:	popa   
  42aca9:	fld    DWORD PTR [ebp-0x7a06bde3]
  42acaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42acb0:	push   esp
  42acb1:	sbb    eax,0x5d68cd25
  42acb6:	mov    ecx,0x37d961e9
  42acbb:	and    eax,0x6609fd42
  42acc0:	mov    ebx,0x57e900d9
  42acc5:	in     eax,0x7f
  42acc7:	outs   dx,DWORD PTR ds:[esi]
  42acc8:	popa   
  42acc9:	fldenv [eax+0xe9]
	...
  42acdf:	add    BYTE PTR [eax+0x5c],bl
  42ace2:	mov    eax,ds:0x8bd961e9
  42ace7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ace8:	addr16 pop esi
  42acea:	enter  0xa9d5,0xc1
  42acee:	pusha  
  42acef:	icebp  
  42acf0:	popa   
  42acf1:	fld    DWORD PTR [ebp+0x75b0e221]
  42acf7:	repnz loop 0x42acc5
  42acfa:	js     0x42acd8
  42acfc:	xchg   DWORD PTR [edx+edi*8],ebp
  42acff:	cld    
  42ad00:	lods   eax,DWORD PTR ds:[esi]
  42ad01:	out    0x40,al
  42ad03:	jmp    0x33d4ee4
  42ad08:	ins    BYTE PTR es:[edi],dx
  42ad09:	sub    ecx,DWORD PTR [esi+0x5c]
  42ad0c:	sbb    eax,0x241120fd
  42ad11:	push   esi
  42ad12:	add    ecx,ebp
  42ad14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad15:	call   0x5d8c:0x28338c74
  42ad1c:	mov    ch,0x68
  42ad1e:	add    ecx,ebp
  42ad20:	popa   
  42ad21:	shl    ecx,0x13
  42ad24:	retf   
  42ad25:	aam    0x86
  42ad27:	sub    eax,0xd285f482
  42ad2c:	jmp    0x3f43703a
  42ad31:	mov    ecx,0xb568010f
  42ad36:	div    BYTE PTR [edi+ebp*2-0xb]
  42ad3a:	cmc    
  42ad3b:	adc    eax,0x40eedf
  42ad40:	mov    eax,0x182521
	...
  42ad55:	add    BYTE PTR [eax],al
  42ad57:	add    ah,ah
  42ad59:	pop    esp
  42ad5a:	jge    0x42ad80
  42ad5c:	cmp    al,0xdc
  42ad5e:	je     0x42ad6c
  42ad60:	xchg   esi,eax
  42ad61:	popa   
  42ad62:	and    eax,0xdc3f80
  42ad67:	call   0x440976
  42ad6c:	mov    ss,WORD PTR [edx+0x21b63274]
  42ad72:	and    eax,0x7293b318
  42ad77:	add    bl,bh
  42ad79:	pop    esi
  42ad7a:	test   DWORD PTR [ebx+eax*4],esp
  42ad7d:	fild   DWORD PTR [eax]
  42ad7f:	add    BYTE PTR [ebx+0x3715f626],bh
  42ad85:	out    dx,eax
  42ad86:	inc    eax
  42ad87:	add    BYTE PTR [esi-0x63],bh
  42ad8a:	push   es
  42ad8b:	test   DWORD PTR [ecx-0x6d],esi
  42ad8e:	idiv   bh
  42ad90:	and    ah,dh
  42ad92:	or     ebx,0xfffe9473
  42ad98:	mov    ebx,0xfc6ac84
  42ad9d:	mov    eax,0x4560010f
  42ada2:	mov    WORD PTR [edi+ebx*4-0xd],cs
  42ada6:	call   0x11e8e77
  42adab:	push   ebp
  42adac:	xchg   esp,eax
  42adad:	out    0xc4,al
  42adaf:	adc    cl,bl
  42adb1:	fndisi(8087 only) 
  42adb3:	add    dl,BYTE PTR [eax]
  42adb5:	xchg   ebp,eax
  42adb6:	mov    bl,0xee
  42adb8:	jp     0x42ad95
  42adba:	add    BYTE PTR [ebp+0x0],cl
	...
  42add0:	bound  edi,QWORD PTR [esi]
  42add2:	fiadd  DWORD PTR [edi-0x78013d9e]
  42add8:	dec    ebx
  42add9:	add    DWORD PTR [ebx+0x75],ecx
  42addc:	push   0xbc5bc14a
  42ade1:	in     eax,dx
  42ade2:	pop    ebx
  42ade3:	sbb    DWORD PTR [esi],0x62000675
  42ade9:	xor    ebp,0xffffffcd
  42adec:	fcmovnb st,st(5)
  42adee:	jbe    0x42ae54
  42adf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adf1:	rol    BYTE PTR [ecx+edi*4-0x6],0xdc
  42adf6:	inc    eax
  42adf7:	add    cl,bl
  42adf9:	sar    DWORD PTR [edi-0x6cbb18],0x7e
  42ae00:	and    eax,ebp
  42ae02:	daa    
  42ae03:	sar    BYTE PTR [edi+0x39],0x1
  42ae07:	ins    BYTE PTR es:[edi],dx
  42ae08:	popa   
  42ae09:	add    al,BYTE PTR [edi-0x48be5fff]
  42ae0f:	je     0x42ad9d
  42ae11:	test   dh,bh
  42ae13:	jnp    0x42ae16
  42ae15:	cmp    cl,BYTE PTR [ebx]
  42ae17:	pushf  
  42ae18:	xchg   BYTE PTR [esi+edi*8-0x14b47342],al
  42ae1f:	fwait
  42ae20:	inc    esi
  42ae21:	test   dh,bh
  42ae23:	adc    ah,0x90
  42ae26:	add    al,0x0
  42ae28:	(bad)  
  42ae29:	iret   
  42ae2a:	sub    BYTE PTR [esi+0x2efec062],0xb4
  42ae31:	xchg   ebx,eax
  42ae32:	(bad)  
  42ae33:	rol    BYTE PTR [eax],cl
	...
  42ae45:	add    BYTE PTR [eax],al
  42ae47:	add    cl,bh
  42ae49:	out    0xb8,eax
  42ae4b:	sti    
  42ae4c:	sub    eax,0xe695024b
  42ae51:	pop    esp
  42ae52:	cmp    al,BYTE PTR [eax]
  42ae54:	push   ecx
  42ae55:	mov    esp,0x7bfeb88b
  42ae5a:	(bad)  
  42ae5b:	push   ds
  42ae5c:	cdq    
  42ae5d:	fst    DWORD PTR [esi]
  42ae5f:	or     bh,ch
  42ae61:	xchg   ecx,eax
  42ae62:	inc    esp
  42ae63:	inc    eax
  42ae64:	bound  esp,QWORD PTR [edx-0x57]
  42ae67:	add    DWORD PTR [edx+0x3dadb8d8],0xffffffe5
  42ae6e:	ins    BYTE PTR es:[edi],dx
  42ae6f:	dec    esp
  42ae70:	adc    BYTE PTR ds:0x6c69f2e8,bl
  42ae76:	les    ebp,FWORD PTR [edx]
  42ae78:	sahf   
  42ae79:	fldenv ds:0x5c6c5e8d
  42ae7f:	and    BYTE PTR [esi+0x1dba68d9],bl
  42ae85:	(bad)  
  42ae87:	add    esi,DWORD PTR [esi-0x46459663]
  42ae8d:	(bad)  
  42ae8f:	add    esp,DWORD PTR [edi+0x5e89130c]
  42ae95:	ins    BYTE PTR es:[edi],dx
  42ae96:	xor    BYTE PTR [eax],ah
  42ae98:	sahf   
  42ae99:	fstp   DWORD PTR [esi+0x7]
  42ae9c:	cmp    eax,0x1ce2ec26
  42aea1:	or     ch,bl
  42aea3:	mov    ah,BYTE PTR [ebx]
  42aea5:	pop    edx
  42aea6:	dec    eax
  42aea7:	add    eax,0x5fc013
	...
  42aec0:	out    0x20,eax
  42aec2:	call   0xde30:0x630a623f
  42aec9:	aad    0x33
  42aecb:	repz mov ds:0xa182e35f,al
  42aed1:	fsubr  QWORD PTR [eax-0x49]
  42aed4:	dec    esi
  42aed5:	inc    edi
  42aed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aed7:	add    edi,DWORD PTR [esi]
  42aed9:	lods   eax,DWORD PTR ds:[esi]
  42aeda:	mov    bl,0x8a
  42aedc:	addr16 xchg ecx,eax
  42aede:	test   BYTE PTR [edi],bh
  42aee0:	bound  ecx,QWORD PTR [edx]
  42aee2:	cmc    
  42aee3:	das    
  42aee4:	cmp    BYTE PTR ds:0x9a4e2e8,bl
  42aeea:	add    esp,esp
  42aeec:	inc    ebp
  42aeed:	inc    ebx
  42aeee:	inc    ebp
  42aeef:	jmp    0x6b030d1c
  42aef4:	rcl    edi,0xcf
  42aef7:	shl    BYTE PTR [eax-0x1f],1
  42aefa:	and    DWORD PTR [ecx],0x24
  42aefd:	sbb    eax,0xc15b1a01
  42af02:	addr16 sub eax,0x350c605e
  42af08:	test   BYTE PTR ds:0x8e5d6201,bl
  42af0e:	mov    ecx,0x85d9a245
  42af13:	test   al,0x1e
  42af15:	ret    0xda06
  42af18:	sub    DWORD PTR [ebp-0x40],ebx
  42af1b:	int3   
  42af1c:	retf   0x3731
  42af1f:	mov    fs,WORD PTR [esi]
  42af21:	mov    edx,0xba02
	...
  42af36:	add    BYTE PTR [eax],al
  42af38:	sbb    DWORD PTR [ebp-0x40],ebx
  42af3b:	(bad)  
  42af3c:	in     eax,0xb0
  42af3e:	cli    
  42af3f:	jbe    0x42af5f
  42af41:	mov    edx,0x1819ba0a
  42af46:	xchg   BYTE PTR [eax],ch
  42af48:	push   ds
  42af49:	ret    0x700f
  42af4c:	bnd jo 0x42afb4
  42af4f:	lods   eax,DWORD PTR ds:[esi]
  42af50:	popa   
  42af51:	add    al,0xc0
  42af53:	scas   eax,DWORD PTR es:[edi]
  42af54:	and    BYTE PTR [edi],ch
  42af56:	xchg   BYTE PTR [ebp-0x72],dl
  42af59:	sub    ch,BYTE PTR [ecx-0x77]
  42af5c:	jge    0x42af7b
  42af5e:	add    DWORD PTR [esi],esi
  42af60:	jb     0x42af57
  42af62:	push   cs
  42af63:	test   eax,0x21446661
  42af68:	xor    eax,edx
  42af6a:	adc    al,0xb1
  42af6c:	push   esi
  42af6d:	sbb    DWORD PTR [ecx],eax
  42af6f:	ins    BYTE PTR es:[edi],dx
  42af70:	mov    eax,ds:0x520e074e
  42af75:	mov    cl,0xf
  42af77:	add    bl,bh
  42af79:	fadd   DWORD PTR [ecx-0x7e288f38]
  42af7f:	dec    ebp
  42af80:	xchg   ebx,eax
  42af81:	jg     0x42af1d
  42af83:	(bad)  
  42af84:	jl     0x42af14
  42af86:	mov    cl,0x1
  42af88:	rcr    BYTE PTR [edx+0x1927a069],cl
  42af8e:	add    edi,edi
  42af90:	jbe    0x42af4a
  42af92:	or     al,0x40
  42af94:	jnp    0x42af2f
  42af96:	out    dx,eax
  42af97:	add    eax,0x44fbe3
	...
  42afb0:	dec    edx
  42afb1:	sub    DWORD PTR [edi-0x75],ecx
  42afb4:	push   esi
  42afb5:	js     0x42afc2
  42afb7:	inc    eax
  42afb8:	cmp    eax,DWORD PTR [ebx]
  42afba:	sub    edi,DWORD PTR [ebx+0x44fbcf]
  42afc0:	js     0x42af50
  42afc2:	iret   
  42afc3:	test   BYTE PTR [esi+0x50],0x67
  42afc7:	inc    esp
  42afc8:	cmp    edx,edi
  42afca:	jae    0x42afe6
  42afcc:	shr    DWORD PTR [edi-0xa],cl
  42afcf:	call   FWORD PTR [ecx+ebx*2+0x583a74c1]
  42afd6:	or     al,0xb8
  42afd8:	or     eax,0x34010114
  42afdd:	aam    0xb6
  42afdf:	outs   dx,BYTE PTR ds:[esi]
  42afe0:	(bad)  
  42afe1:	xlat   BYTE PTR ds:[ebx]
  42afe2:	adc    ch,BYTE PTR [edi]
  42afe4:	leave  
  42afe5:	xlat   BYTE PTR ds:[ebx]
  42afe6:	dec    ecx
  42afe7:	push   esi
  42afe9:	stos   DWORD PTR es:[edi],eax
  42afea:	or     eax,DWORD PTR [eax-0x5]
  42afed:	push   eax
  42afee:	mov    eax,ds:0x49d80764
  42aff3:	push   DWORD PTR [ebp-0x7b]
  42aff6:	je     0x42aff6
  42aff8:	jl     0x42af88
  42affa:	xor    al,0x8
  42affd:	lea    edx,[esp+ebx*8]
  42b000:	mov    ecx,0x628b0117
  42b005:	add    al,0x53
  42b007:	push   edi
  42b008:	mov    eax,ds:0xb0874d8b
  42b00d:	inc    esi
  42b00e:	mov    dh,0x37
  42b010:	xchg   ebp,eax
  42b011:	dec    edx
  42b012:	cli    
  42b013:	xchg   BYTE PTR [eax],al
	...
  42b025:	add    BYTE PTR [eax],al
  42b027:	add    BYTE PTR [esi+edx*8+0x7b952709],bl
  42b02e:	sub    eax,DWORD PTR [ecx+edx*2]
  42b031:	sub    BYTE PTR [ecx-0x4ac475f4],0xfb
  42b038:	jne    0x42b028
  42b03a:	into   
  42b03b:	repz je 0x42b072
  42b03e:	cli    
  42b03f:	adc    al,BYTE PTR ds:0xb455bffc
  42b045:	jmp    0x42afce
  42b047:	not    BYTE PTR [ecx-0x1816766e]
  42b04d:	sub    DWORD PTR [edx],0x17
  42b050:	mov    cl,0xcb
  42b052:	ins    BYTE PTR es:[edi],dx
  42b053:	pop    esp
  42b054:	xchg   ah,cl
  42b056:	js     0x42b053
  42b058:	(bad)  
  42b059:	sar    dh,0x86
  42b05c:	sbb    DWORD PTR [ecx+0x79],ebx
  42b05f:	sti    
  42b060:	and    eax,0x4c04865c
  42b065:	cli    
  42b066:	div    edx
  42b068:	nop
  42b069:	pop    esp
  42b06a:	pop    ecx
  42b06b:	pop    ebx
  42b06c:	lods   al,BYTE PTR ds:[esi]
  42b06d:	in     eax,0xbe
  42b06f:	or     BYTE PTR [edx+0x3f],ah
  42b072:	mov    ds:0x898a9710,al
  42b077:	icebp  
  42b078:	jmp    0xd95e8af9
  42b07d:	push   ss
  42b07e:	mov    DWORD PTR [esi+edi*1-0x20],edx
  42b082:	dec    ebx
  42b083:	mov    DWORD PTR [esi-0x24],edx
  42b086:	or     al,ch
  42b088:	repz or esi,DWORD PTR [ebp+0xfb]
	...
  42b09f:	add    cl,bl
  42b0a1:	or     BYTE PTR [esi+0x22d9c52c],ah
  42b0a7:	mov    ah,0xb
  42b0a9:	(bad)  
  42b0ab:	add    esp,DWORD PTR [edx+0x4d]
  42b0ae:	idiv   BYTE PTR [esi+eiz*1-0x28700c03]
  42b0b5:	sbb    eax,ebp
  42b0b7:	mov    esp,0x87dffd26
  42b0bc:	out    0x19,eax
  42b0be:	call   0xa4dd236b
  42b0c3:	fbstp  TBYTE PTR [ecx+0x65]
  42b0c6:	jne    0x42b10c
  42b0c8:	bound  ebx,QWORD PTR [edx+0x6d4de824]
  42b0ce:	gs inc esp
  42b0d0:	bound  esp,QWORD PTR [esi]
  42b0d2:	pop    ss
  42b0d3:	(bad)  
  42b0d4:	xor    eax,0xebcef799
  42b0d9:	sub    al,0x4
  42b0db:	fsub   st(2),st
  42b0dd:	sbb    al,0xc
  42b0df:	call   0x881e82ca
  42b0e4:	jp     0x42b0be
  42b0e6:	out    0x3,eax
  42b0e8:	in     eax,0xa2
  42b0ea:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42b0ec:	push   edx
  42b0ed:	pusha  
  42b0ee:	and    al,0xe8
  42b0f0:	push   ecx
  42b0f1:	push   esi
  42b0f2:	nop
  42b0f3:	push   es
  42b0f4:	scas   eax,DWORD PTR es:[edi]
  42b0f5:	adc    edx,DWORD PTR [eax+0x7bd218cd]
  42b0fb:	pop    ebp
  42b0fc:	(bad)  
  42b0fd:	fsub   st,st(7)
  42b0ff:	add    edx,DWORD PTR [esi+0x48a2e7]
	...
  42b115:	add    BYTE PTR [eax],al
  42b117:	add    BYTE PTR [esi],bh
  42b119:	icebp  
  42b11a:	jnp    0x42b09d
  42b11c:	mov    ds:0x3e4822d9,al
  42b121:	cmc    
  42b122:	arpl   WORD PTR [ecx+0x143ed9a2],ax
  42b128:	and    DWORD PTR ds:0x63ee0c0c,ebx
  42b12e:	test   al,0x3
  42b130:	mov    eax,ds:0x720d011c
  42b135:	ins    DWORD PTR es:[edi],dx
  42b136:	mov    WORD PTR [ecx-0x32b2a59f],gs
  42b13c:	push   ebp
  42b13d:	pop    edx
  42b13e:	push   ebp
  42b13f:	lds    ebx,FWORD PTR [ecx+0x6a60f302]
  42b145:	std    
  42b146:	and    al,0x2
  42b148:	pop    edx
  42b149:	pop    edx
  42b14a:	jne    0x42b119
  42b14c:	test   DWORD PTR [eax+ecx*8+0x75],ebx
  42b150:	mov    ch,0x5a
  42b152:	mov    esi,0xf951a7c2
  42b157:	call   0x742ba3a7
  42b15c:	mov    bl,0xcd
  42b15e:	cli    
  42b15f:	mov    al,ds:0xe900d85e
  42b164:	test   BYTE PTR [eax-0x1dd557ca],bl
  42b16a:	or     WORD PTR [esi-0x28b831a8],bp
  42b171:	adc    eax,0x25cee95c
  42b176:	and    eax,0x15fe701
  42b17b:	jmp    0x42b180
	...
  42b190:	popa   
  42b191:	pop    eax
  42b192:	inc    ebp
  42b193:	lds    edx,FWORD PTR [ecx-0x7f]
  42b196:	and    DWORD PTR ds:0x14d65636,ebx
  42b19c:	pop    edx
  42b19d:	push   ebp
  42b19e:	rol    DWORD PTR [eax],0x3e
  42b1a1:	mov    ecx,0xd4d07f52
  42b1a6:	cs fwait
  42b1a8:	outs   dx,DWORD PTR ds:[esi]
  42b1a9:	(bad)  
  42b1aa:	push   edi
  42b1ab:	jbe    0x42b17b
  42b1ad:	push   esi
  42b1ae:	iret   
  42b1af:	fsubr  QWORD PTR [ecx+0x37]
  42b1b2:	or     bl,al
  42b1b4:	in     al,dx
  42b1b5:	mov    eax,ds:0xd4b389e9
  42b1ba:	cli    
  42b1bb:	fisubr WORD PTR [ebx-0x67]
  42b1be:	arpl   WORD PTR [eax],ax
  42b1c0:	dec    eax
  42b1c1:	pushf  
  42b1c2:	xor    DWORD PTR [esi+0x52],esp
  42b1c5:	sbb    BYTE PTR [eax+eax*1+0x20],bl
  42b1c9:	xor    al,BYTE PTR [edx+0x62e44f74]
  42b1cf:	push   es
  42b1d0:	mov    eax,ds:0x4a5814ee
  42b1d5:	mov    dl,BYTE PTR [ebp+0x5dcfb8d]
  42b1db:	inc    esp
  42b1dc:	imul   ecx,DWORD PTR [esi],0x2a
  42b1df:	leave  
  42b1e0:	jae    0x42b1f5
  42b1e2:	idiv   edi
  42b1e4:	xchg   esp,eax
  42b1e5:	add    DWORD PTR [esi],eax
  42b1e7:	mov    esi,0x8960cc7f
  42b1ec:	mov    edi,0x4f8b0129
  42b1f1:	ror    DWORD PTR [edx],0xa8
	...
  42b208:	mov    al,BYTE PTR [edi]
  42b20a:	push   ss
  42b20b:	test   al,0x79
  42b20d:	or     BYTE PTR [edi],al
  42b20f:	test   DWORD PTR [eax+0x6b6a0311],esi
  42b215:	and    al,0x5f
  42b217:	cmp    DWORD PTR [edi+0x4674f720],eax
  42b21d:	xor    al,0x9
  42b21f:	je     0x42b249
  42b221:	je     0x42b210
  42b223:	std    
  42b224:	add    al,0x8a
  42b226:	test   eax,0xb2cf4f01
  42b22b:	loopne 0x42b201
  42b22d:	aam    0x0
  42b22f:	data16 cmp bl,BYTE PTR [eax]
  42b232:	pop    esp
  42b233:	add    BYTE PTR [eax-0x6fd7dacf],dl
  42b239:	and    DWORD PTR ds:0x25198024,esp
  42b23f:	adc    al,0x38
  42b241:	adc    eax,0xc16f4488
  42b246:	xor    ebx,edi
  42b248:	add    al,0x56
  42b24a:	loopne 0x42b24a
  42b24c:	bound  esp,QWORD PTR [edi]
  42b24e:	mov    al,0x87
  42b250:	sahf   
  42b251:	(bad)  
  42b252:	adc    al,0x57
  42b254:	or     dh,BYTE PTR [edx+0xedf1832]
  42b25a:	cmp    DWORD PTR [edi+ebx*8],edx
  42b25d:	je     0x42b20f
  42b25f:	data16 sub BYTE PTR ds:0x60187901,0xe7
  42b267:	adc    BYTE PTR [edi],ch
  42b269:	mov    eax,0xe985
	...
  42b27e:	add    BYTE PTR [eax],al
  42b280:	pusha  
  42b281:	ja     0x42b2b6
  42b283:	cmc    
  42b284:	jno    0x42b27f
  42b286:	mov    DWORD PTR es:[esi],ebp
  42b289:	push   ebp
  42b28a:	(bad)  
  42b28b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b28c:	pop    esp
  42b28d:	inc    esi
  42b28e:	adc    ecx,DWORD PTR [ebx]
  42b290:	aad    0x7c
  42b292:	(bad)  
  42b293:	jle    0x42b21f
  42b295:	pusha  
  42b296:	xor    al,0xc
  42b298:	loope  0x42b253
  42b29a:	sub    al,0x73
  42b29c:	pop    ebp
  42b29d:	inc    ebx
  42b29e:	mov    esi,0x433904e0
  42b2a3:	add    cl,bl
  42b2a5:	jbe    0x42b2f8
  42b2a7:	pop    edx
  42b2a8:	mov    edi,0x2010c243
  42b2ad:	mov    cl,0xfe
  42b2af:	push   ecx
  42b2b0:	(bad)  [ecx+ebp*8]
  42b2b3:	pop    es
  42b2b4:	fldz   
  42b2b6:	or     al,ch
  42b2b8:	stc    
  42b2b9:	ret    
  42b2ba:	(bad)  
  42b2bb:	(bad)  
  42b2bc:	jmp    0x61f7497f
  42b2c1:	sar    dh,0x86
  42b2c4:	xchg   esp,eax
  42b2c5:	mov    eax,0xc061ac96
  42b2ca:	(bad)  
  42b2cb:	pop    ecx
  42b2cc:	and    BYTE PTR [ebp+0x51d951fe],dh
  42b2d2:	xchg   esi,eax
  42b2d3:	adc    al,0x62
  42b2d5:	sar    dh,0xf1
  42b2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b2d9:	(bad)  [ebx]
  42b2db:	cld    
  42b2dc:	bound  eax,QWORD PTR [ebp-0x1d]
  42b2df:	jl     0x42b2f9
  42b2e1:	ret    0x476
	...
  42b2f8:	(bad)  
  42b2f9:	fstp   DWORD PTR [esi-0x37]
  42b2fc:	cmp    BYTE PTR [ebx+0x623003ec],bl
  42b302:	cmp    DWORD PTR [eax+0x7d],ebx
  42b305:	into   
  42b306:	sub    ecx,DWORD PTR [ecx]
  42b308:	push   cs
  42b309:	pop    ebp
  42b30a:	test   al,0x3
  42b30c:	jnp    0x42b35d
  42b30e:	hlt    
  42b30f:	cmp    DWORD PTR [edx-0x1a2f90d6],eax
  42b315:	pop    ss
  42b316:	loopne 0x42b31c
  42b318:	in     eax,0x5a
  42b31a:	rol    BYTE PTR [edx],1
  42b31c:	pop    ss
  42b31d:	loopne 0x42b385
  42b31f:	ret    
  42b320:	pop    esi
  42b321:	sub    DWORD PTR [eax],edx
  42b323:	mov    cs,WORD PTR [ecx+0x547f3ce]
  42b329:	call   0xa855:0xdcfbecc0
  42b330:	or     eax,0x8fc2a62
  42b335:	xchg   esi,eax
  42b336:	sub    cl,BYTE PTR [eax]
  42b338:	mov    edx,0xb804285c
  42b33d:	shr    BYTE PTR [esi],0x3
  42b340:	(bad)  
  42b341:	fstp   DWORD PTR [eax]
  42b343:	push   ebx
  42b344:	mov    bh,0x27
  42b346:	sbb    edi,DWORD PTR [ebx-0x3a]
  42b349:	cmc    
  42b34a:	iret   
  42b34b:	sbb    DWORD PTR [edi+ebx*8],edi
  42b34e:	pop    edx
  42b34f:	pop    es
  42b350:	jmp    0x42b36e
  42b352:	les    edx,FWORD PTR [edi]
  42b354:	mov    BYTE PTR [edx-0x70],bl
  42b357:	pop    ss
  42b358:	scas   al,BYTE PTR es:[edi]
  42b359:	loopne 0x42b35c
  42b35b:	jmp    0x42b35d
	...
  42b36d:	add    BYTE PTR [eax],al
  42b36f:	add    BYTE PTR [ebx],ah
  42b371:	fisubr WORD PTR [ebp+ecx*4+0x62]
  42b375:	(bad)  
  42b377:	and    eax,0xcd012ce5
  42b37c:	push   ebp
  42b37d:	cmp    eax,DWORD PTR [esi+0x62ee05fd]
  42b383:	and    dl,BYTE PTR [ebx]
  42b385:	loop   0x42b308
  42b387:	data16 fld DWORD PTR [bx+si]
  42b38b:	sbb    dl,BYTE PTR [eax]
  42b38d:	cmp    eax,DWORD PTR [edx+esi*1+0x6c62dd9a]
  42b394:	add    eax,DWORD PTR [ebp+0x2]
  42b397:	daa    
  42b398:	sbb    dh,ch
  42b39a:	sbb    al,0xe8
  42b39c:	call   0xc5d83c7e
  42b3a1:	icebp  
  42b3a2:	and    eax,0x7dd47a2f
  42b3a7:	adc    DWORD PTR [ebx+0x44],ecx
  42b3aa:	add    ecx,DWORD PTR [edi-0x6b00d54a]
  42b3b0:	inc    ecx
  42b3b1:	dec    esi
  42b3b2:	shr    ch,0x33
  42b3b5:	push   esi
  42b3b6:	add    dh,bh
  42b3b8:	xor    ebp,ebx
  42b3ba:	test   ecx,edi
  42b3bc:	loopne 0x42b390
  42b3be:	cli    
  42b3bf:	jne    0x42b3d2
  42b3c1:	push   esi
  42b3c2:	inc    ebp
  42b3c3:	or     eax,0x11f3364e
  42b3c8:	popa   
  42b3c9:	dec    ecx
  42b3ca:	or     DWORD PTR [ebp+0x1a],ebx
  42b3cd:	aaa    
  42b3ce:	sub    DWORD PTR [ebx+0x66],eax
  42b3d1:	daa    
  42b3d2:	cli    
  42b3d3:	fadd   QWORD PTR [eax]
	...
  42b3e5:	add    BYTE PTR [eax],al
  42b3e7:	add    BYTE PTR [ecx-0x1f16bf19],ch
  42b3ed:	test   DWORD PTR [eax],0x7dd8cce6
  42b3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b3f4:	cmp    eax,0x371d4915
  42b3f9:	dec    esp
  42b3fa:	jmp    0x67281ef3
  42b3ff:	cmc    
  42b400:	enter  0x68cb,0xf9
  42b404:	loop   0x42b41d
  42b406:	add    eax,0xf6257400
  42b40b:	adc    eax,0x40e36b
  42b410:	js     0x42b3a6
  42b412:	or     eax,0x16b50f80
  42b417:	add    BYTE PTR [edi],dl
  42b419:	shl    DWORD PTR [eax-0x77],1
  42b41c:	lods   eax,DWORD PTR ds:[esi]
  42b41d:	mov    eax,0xbb1d8960
  42b422:	stos   BYTE PTR es:[edi],al
  42b423:	add    DWORD PTR [eax],esp
  42b425:	fisubr DWORD PTR [edx]
  42b427:	sar    ah,0x1e
  42b42a:	pop    esp
  42b42b:	pop    ebx
  42b42c:	add    bl,BYTE PTR [ebx+0x4fe6000d]
  42b432:	in     eax,dx
  42b433:	cmp    DWORD PTR [edi-0x50],0x7b
  42b437:	jge    0x42b3ec
  42b439:	fmul   DWORD PTR [ecx+0x56]
  42b43c:	hlt    
  42b43d:	dec    edi
  42b43e:	fmul   DWORD PTR [edi]
  42b440:	aaa    
  42b441:	add    DWORD PTR ss:[eax],eax
  42b444:	mov    edx,DWORD PTR [edi+0x7c]
  42b447:	or     al,0x8b
  42b449:	retf   
  42b44a:	jle    0x42b3e8
	...
  42b460:	jnp    0x42b43a
  42b462:	add    BYTE PTR [edx-0x5d],ch
  42b465:	pop    ecx
  42b466:	inc    esp
  42b467:	fsub   st,st(1)
  42b469:	fcom   DWORD PTR [eax-0x1]
  42b46c:	jbe    0x42b48e
  42b46e:	cmovo  edi,DWORD PTR [ebx+0x51]
  42b472:	dec    esp
  42b473:	or     al,bh
  42b475:	mov    al,ds:0x7e01830d
  42b47a:	mov    esi,0xd80345
  42b47f:	add    BYTE PTR [ebx],bh
  42b481:	jo     0x42b4cc
  42b483:	pop    ss
  42b484:	cmp    bl,al
  42b486:	or     DWORD PTR [ebp+0x1f],0xb2ffc359
  42b48d:	adc    al,0xdd
  42b48f:	call   0x4299d5
  42b494:	bound  esi,QWORD PTR [edi]
  42b496:	sub    dl,BYTE PTR [eax]
  42b498:	jmp    0x42b48e
  42b49a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b49b:	test   DWORD PTR ds:0x97870bce,edx
  42b4a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4a2:	xor    edx,0xffffff8e
  42b4a5:	lods   al,BYTE PTR ds:[esi]
  42b4a6:	jns    0x42b47a
  42b4a8:	jmp    0x60ad5217
  42b4ad:	ret    0x86fe
  42b4b0:	sbb    al,BYTE PTR [edi+0x42]
  42b4b3:	loopne 0x42b490
  42b4b5:	je     0x42b459
  42b4b7:	mov    DWORD PTR [edi+0x1a],edx
  42b4ba:	cwde   
  42b4bb:	(bad)  
  42b4bc:	call   0x4fc25745
  42b4c1:	out    dx,al
  42b4c2:	add    al,0x74
	...
  42b4d8:	jle    0x42b517
  42b4da:	lds    esi,FWORD PTR [edx+eax*4+0x35]
  42b4de:	lods   al,BYTE PTR ds:[esi]
  42b4df:	je     0x42b53f
  42b4e1:	cmp    eax,0x3d4a74b6
  42b4e6:	cmp    BYTE PTR [edi+edx*8],al
  42b4e9:	ins    BYTE PTR es:[edi],dx
  42b4ea:	mov    BYTE PTR [edi+0x4ead8473],0x66
  42b4f1:	aas    
  42b4f2:	lods   eax,DWORD PTR ds:[esi]
  42b4f3:	sti    
  42b4f4:	push   ss
  42b4f5:	mov    dh,0x6e
  42b4f7:	add    DWORD PTR [ecx-0x5b],edi
  42b4fa:	jns    0x42b541
  42b4fc:	xor    BYTE PTR [esi],0xbd
  42b4ff:	call   0x41759d
  42b504:	frndint 
  42b506:	shr    al,1
  42b508:	xchg   ecx,eax
  42b509:	sar    dh,0xff
  42b50c:	jmp    0x2a2b5dfe
  42b511:	ret    0xfffe
  42b514:	nop
  42b515:	or     BYTE PTR [ebp+0x5a],0xa9
  42b519:	jns    0x42b4db
  42b51b:	adc    BYTE PTR [edx-0x1b],ah
  42b51e:	ja     0x42b50c
  42b520:	loope  0x42b4fb
  42b522:	xchg   ebx,eax
  42b523:	or     ebx,DWORD PTR [ebp-0x5052ccdd]
  42b529:	loope  0x42b501
  42b52b:	enter  0xd0e5,0x5f
  42b52f:	mov    al,0xe7
  42b531:	sbb    al,0x90
  42b533:	jp     0x42b4e4
  42b535:	shl    DWORD PTR [ecx+0x36],0xe
  42b539:	ret    0x22c1
	...
  42b550:	stc    
  42b551:	retf   0xc364
  42b554:	outs   dx,BYTE PTR ds:[esi]
  42b555:	hlt    
  42b556:	bound  esi,QWORD PTR [esi]
  42b558:	pop    esi
  42b559:	pop    esp
  42b55a:	lods   eax,DWORD PTR ds:[esi]
  42b55b:	mov    bh,0xfa
  42b55d:	out    dx,eax
  42b55e:	enter  0xd9ac,0x5e
  42b562:	aad    0xb7
  42b564:	ficomp WORD PTR [ecx+0x44c910bc]
  42b56a:	aam    0x78
  42b56c:	cdq    
  42b56d:	retf   0x13bd
  42b570:	adc    dl,cl
  42b572:	mov    ch,0x9b
  42b574:	retf   0x22c4
  42b577:	lods   al,BYTE PTR ds:[esi]
  42b578:	test   eax,0x9878405f
  42b57d:	rcl    DWORD PTR [esi+0x5ed96202],0x3e
  42b584:	mov    al,cl
  42b586:	mov    es,WORD PTR [edx]
  42b588:	(bad)  
  42b589:	fstp   DWORD PTR [edx-0x706923b3]
  42b58f:	mov    edx,0x55e7e9bc
  42b594:	(bad)  
  42b596:	cmp    edi,DWORD PTR [edi+0x10]
  42b599:	loope  0x42b5c0
  42b59b:	pop    ds
  42b59c:	xchg   esp,eax
  42b59d:	add    DWORD PTR [ebp+0x3a],esp
  42b5a0:	shr    WORD PTR [ebp+0x6bd96204],0xc4
  42b5a8:	xlat   BYTE PTR ds:[ebx]
  42b5a9:	aam    0x66
  42b5ab:	mov    esp,0x1be49
  42b5b0:	in     eax,0x4c
  42b5b2:	and    eax,0xdd
	...
  42b5c7:	add    BYTE PTR [ecx+0x45],ah
  42b5ca:	sbb    BYTE PTR [edx-0x60],dh
  42b5cd:	loope  0x42b634
  42b5cf:	test   eax,0xed44cb06
  42b5d4:	jg     0x42b5d7
  42b5d6:	cli    
  42b5d7:	adc    eax,0x8650da02
  42b5dc:	jae    0x42b607
  42b5de:	adc    ebp,DWORD PTR [ecx]
  42b5e0:	pop    esi
  42b5e1:	dec    edx
  42b5e2:	vhaddpd ymm2,ymm3,YMMWORD PTR [edi]
  42b5e6:	or     DWORD PTR [esi+esi*1-0x28],ebx
  42b5ea:	xchg   DWORD PTR [edi+0x2b5b2ee9],esi
  42b5f0:	(bad)  
  42b5f1:	fst    DWORD PTR [edx+0x62]
  42b5f4:	pop    ss
  42b5f5:	push   edx
  42b5f6:	dec    ebp
  42b5f7:	add    eax,0xf14352d6
  42b5fc:	ins    BYTE PTR es:[edi],dx
  42b5fd:	mov    al,ds:0xa1d229
  42b602:	push   edx
  42b603:	fs mov ch,dl
  42b606:	std    
  42b607:	fstp   QWORD PTR [esi+edx*8+0x35]
  42b60b:	div    BYTE PTR [edi-0x2e]
  42b60e:	push   eax
  42b60f:	ins    BYTE PTR es:[edi],dx
  42b610:	(bad)  
  42b612:	jmp    0x11c1dfa
  42b617:	add    bl,BYTE PTR [ebx+edi*8-0x40]
  42b61b:	ins    DWORD PTR es:[edi],dx
  42b61c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b61d:	inc    esp
  42b61e:	adc    esi,edi
  42b620:	dec    ebx
  42b621:	loope  0x42b5a8
  42b623:	lahf   
  42b624:	jns    0x42b658
  42b626:	iret   
  42b627:	shl    esp,0x9d
  42b62a:	jmp    0x42b67f
	...
  42b63f:	add    BYTE PTR [esi-0x27],ah
  42b642:	add    BYTE PTR [esi],bh
  42b644:	sbb    BYTE PTR [ebx+0x2ddce905],cl
  42b64a:	and    eax,0x92a44e5
  42b64f:	add    BYTE PTR [eax+0x535189c3],cl
  42b655:	call   0x9e0adf24
  42b65a:	add    eax,0xdd56e8
  42b65f:	add    cl,bh
  42b661:	enter  0x55fa,0xb0
  42b665:	lea    eax,[edx+edx*8+0xe83c17e]
  42b66c:	jecxz  0x42b68f
  42b66e:	add    DWORD PTR [eax],eax
  42b670:	sti    
  42b671:	pop    edi
  42b672:	pop    ds
  42b673:	add    al,dh
  42b675:	iret   
  42b676:	jnp    0x42b63a
  42b678:	punpcklbw mm6,DWORD PTR [edi]
  42b67b:	add    BYTE PTR [ecx+0xa],bl
  42b67e:	adc    DWORD PTR [edx-0xd],ebp
  42b681:	jae    0x42b6b7
  42b683:	js     0x42b69a
  42b685:	or     DWORD PTR [ecx],eax
  42b687:	(bad)  
  42b688:	fsubp  st(0),st
  42b68a:	or     al,BYTE PTR [eax-0x35]
  42b68d:	addr16 adc edi,edi
  42b690:	int    0xe6
  42b692:	or     bh,bh
  42b694:	into   
  42b695:	hlt    
  42b696:	inc    sp
  42b698:	retf   
  42b699:	jae    0x42b6af
  42b69b:	jl     0x42b637
  42b69d:	sbb    al,0x1
  42b69f:	test   DWORD PTR [ebx+0x9],edi
  42b6a2:	add    eax,0x32
	...
  42b6b7:	add    BYTE PTR [ebx+0x12],bh
  42b6ba:	mov    edx,0x4c8d89
  42b6bf:	pop    esi
  42b6c0:	dec    eax
  42b6c1:	sub    al,BYTE PTR [edx+0x74adfef1]
  42b6c7:	or     al,0x10
  42b6c9:	ret    0x63e2
  42b6cc:	mov    ebx,esp
  42b6ce:	add    BYTE PTR [ebx+0x30e1dc9d],al
  42b6d4:	clc    
  42b6d5:	mov    dl,0xfa
  42b6d7:	push   ecx
  42b6d8:	push   cs
  42b6d9:	in     eax,dx
  42b6da:	bound  eax,QWORD PTR [eax]
  42b6dc:	bound  ebp,QWORD PTR [edi-0x13b8816]
  42b6e2:	add    al,0xfb
  42b6e4:	ja     0x42b6fc
  42b6e6:	adc    eax,DWORD PTR [eax+0x62]
  42b6e9:	stos   DWORD PTR es:[edi],eax
  42b6ea:	adc    eax,0x51c74fb
  42b6ef:	sti    
  42b6f0:	outs   dx,DWORD PTR ds:[esi]
  42b6f1:	or     dl,BYTE PTR [edi]
  42b6f3:	inc    esp
  42b6f4:	bound  edi,QWORD PTR [edi+0xa]
  42b6f7:	jl     0x42b74c
  42b6f9:	repnz add al,0x85
  42b6fc:	and    ah,ch
  42b6fe:	add    BYTE PTR [esi],ch
  42b700:	and    bh,al
  42b702:	ret    
  42b703:	mov    DWORD PTR [edx+eax*1-0x2],esp
  42b707:	pop    ecx
  42b708:	and    DWORD PTR ds:0xdc92043e,esi
  42b70e:	cld    
  42b70f:	cli    
  42b710:	das    
  42b711:	retf   0x4418
  42b714:	bound  edi,QWORD PTR [edi]
  42b716:	or     ah,BYTE PTR [eax+edx*2+0x72]
  42b71a:	(bad)  
  42b71b:	mov    esi,0x0
	...
  42b730:	out    0xf8,eax
  42b732:	sub    edi,edi
  42b734:	nop
  42b735:	bnd ret 
  42b737:	push   ecx
  42b738:	cmp    BYTE PTR [edx-0x67b5ca57],dh
  42b73e:	cmp    al,BYTE PTR [eax]
  42b740:	mov    ebp,0x220e1aa4
  42b745:	mov    dl,0xc5
  42b747:	test   DWORD PTR [ebx+0x3850f965],ebx
  42b74d:	mov    dl,0xa9
  42b74f:	xor    eax,0x3a601a
  42b754:	xchg   ebp,eax
  42b755:	int3   
  42b756:	push   ss
  42b757:	push   cs
  42b758:	and    dh,BYTE PTR [edx+0x4b2d52c5]
  42b75e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b75f:	xchg   DWORD PTR [eax+0x34],esi
  42b762:	test   al,0x74
  42b764:	pop    eax
  42b765:	cmp    eax,0xd95474af
  42b76a:	xor    DWORD PTR [ebp+0x56],edi
  42b76d:	nop
  42b76e:	ror    dh,1
  42b770:	pop    ecx
  42b771:	(bad)  
  42b772:	sar    DWORD PTR [esi+0x50],cl
  42b775:	dec    ebp
  42b776:	xlat   BYTE PTR ds:[ebx]
  42b777:	jl     0x42b792
  42b779:	daa    
  42b77a:	and    bl,BYTE PTR [ebx-0x574438e6]
  42b780:	cdq    
  42b781:	daa    
  42b782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b783:	push   ecx
  42b784:	xchg   ecx,eax
  42b785:	sub    BYTE PTR [edi+0x2f],bl
  42b788:	xchg   ch,ch
  42b78a:	outs   dx,BYTE PTR ds:[esi]
  42b78b:	daa    
  42b78c:	jle    0x42b777
  42b78e:	outs   dx,BYTE PTR ds:[esi]
  42b78f:	aaa    
  42b790:	inc    esi
  42b791:	loope  0x42b729
  42b793:	pop    edi
	...
  42b7a8:	mov    ebx,0x5ec62a26
  42b7ad:	fst    DWORD PTR [esi]
  42b7af:	push   edx
  42b7b0:	mov    cl,0x52
  42b7b2:	jle    0x42b830
  42b7b4:	sbb    edx,DWORD PTR [ebx-0x5d]
  42b7b7:	fwait
  42b7b8:	jmp    0x42b780
  42b7ba:	imul   ebp,DWORD PTR [eax-0x4e92361b],0x6e
  42b7c1:	aad    0xb2
  42b7c3:	push   esp
  42b7c4:	xor    dh,al
  42b7c6:	std    
  42b7c7:	push   ebx
  42b7c8:	jo     0x42b7e3
  42b7ca:	call   0xa3185e53
  42b7cf:	jl     0x42b771
  42b7d1:	daa    
  42b7d2:	lahf   
  42b7d3:	les    ebp,FWORD PTR ds:0x69df9452
  42b7d9:	das    
  42b7da:	xchg   ebx,eax
  42b7db:	jl     0x42b791
  42b7dd:	push   edx
  42b7de:	sbb    DWORD PTR [ecx+edx*2-0x26],edi
  42b7e2:	ss fcmovnb st,st(7)
  42b7e6:	adc    ebp,DWORD PTR [eax+0xa9499de]
  42b7ec:	in     eax,0xf
  42b7ee:	out    0xf0,eax
  42b7f0:	adc    al,0xc6
  42b7f2:	je     0x42b7d3
  42b7f4:	push   ecx
  42b7f5:	das    
  42b7f6:	add    esi,esi
  42b7f8:	sub    DWORD PTR [bp+di],edx
  42b7fb:	test   eax,0xf5c54661
  42b800:	pop    esi
  42b801:	loop   0x42b788
  42b803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b804:	stc    
  42b805:	(bad)  
  42b806:	das    
  42b807:	test   eax,0xab56239d
	...
  42b820:	dec    esi
  42b821:	(bad)  
  42b822:	das    
  42b823:	test   eax,0x54500b1
  42b828:	ds dec eax
  42b82a:	push   cs
  42b82b:	add    bh,al
  42b82d:	pop    esi
  42b82e:	sbb    eax,0x370fabd8
  42b833:	(bad)  
  42b834:	jae    0x42b809
  42b836:	inc    eax
  42b837:	sub    ecx,DWORD PTR [ecx]
  42b839:	sbb    ah,BYTE PTR ds:0x2eb253e1
  42b83f:	test   eax,0xe9058799
  42b844:	or     al,0x88
  42b846:	retf   0x8fee
  42b849:	xchg   BYTE PTR [esi],ah
  42b84b:	test   al,0xd9
  42b84d:	mov    dh,0x4e
  42b84f:	pop    ss
  42b850:	popf   
  42b851:	pop    esi
  42b852:	div    DWORD PTR [edx-0x51]
  42b855:	or     eax,0x3772057d
  42b85a:	pop    ds
  42b85b:	add    cl,BYTE PTR [edx-0x66e5eb03]
  42b861:	shl    DWORD PTR [ebp+0xd],0x72
  42b865:	ret    0x575
  42b868:	push   edx
  42b869:	sub    edi,edx
  42b86b:	fsub   QWORD PTR ds:0xe0e940eb
  42b871:	pushf  
  42b872:	or     eax,0xb4c9e6c
  42b877:	stos   BYTE PTR es:[edi],al
  42b878:	pop    edi
  42b879:	push   cs
  42b87a:	ficomp DWORD PTR [edi-0x513f0a0b]
  42b880:	daa    
  42b881:	cs mov edi,0x0
	...
  42b897:	add    BYTE PTR [ebx+0x50c681d9],dl
  42b89d:	ja     0x42b821
  42b89f:	inc    esp
  42b8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8a1:	lds    esi,FWORD PTR [ebx]
  42b8a3:	enter  0xd1e8,0x31
  42b8a7:	rol    BYTE PTR [ecx+ebp*8],1
  42b8aa:	je     0x42b8ba
  42b8ac:	jo     0x42b845
  42b8ae:	push   ecx
  42b8af:	push   edx
  42b8b0:	call   0x119:0x5550147c
  42b8b7:	xor    edi,0xffffffcc
  42b8ba:	stos   BYTE PTR es:[edi],al
  42b8bb:	add    DWORD PTR [eax],edx
  42b8bd:	fld    TBYTE PTR [edx]
  42b8bf:	ror    BYTE PTR [ecx],0xc5
  42b8c2:	cli    
  42b8c3:	push   esp
  42b8c4:	shr    BYTE PTR [eax+edx*2+0x56],0xae
  42b8c9:	sbb    ebp,edi
  42b8cb:	push   eax
  42b8cc:	nop
  42b8cd:	lea    ecx,[edi+0x6a]
  42b8d0:	or     DWORD PTR [esp+eax*2+0xde07fc],eax
  42b8d7:	add    ah,bl
  42b8d9:	jmp    0xdd8dccba
  42b8de:	test   al,al
  42b8e0:	imul   DWORD PTR [ebx+eax*4-0x3ea680bb]
  42b8e7:	je     0x42b93f
  42b8e9:	enter  0x66c9,0x52
  42b8ed:	int3   
  42b8ee:	inc    eax
  42b8ef:	jmp    0x42b8c6
  42b8f1:	retf   
  42b8f2:	scas   eax,DWORD PTR es:[edi]
  42b8f3:	push   es
  42b8f4:	cmp    BYTE PTR [eax+0x26],dh
  42b8f7:	je     0x42b8af
  42b8f9:	push   edi
  42b8fa:	stc    
  42b8fb:	pop    esp
	...
  42b910:	test   dh,0x64
  42b913:	jl     0x42b8e8
  42b915:	out    0x87,al
  42b917:	push   es
  42b918:	cmp    BYTE PTR [esi-0x313d9a05],al
  42b91e:	jne    0x42b905
  42b920:	jo     0x42b8ee
  42b922:	adc    esi,0x62
  42b925:	sub    DWORD PTR [eax+0x0],esp
  42b928:	bound  esi,QWORD PTR [edx-0x4ebf8a6a]
  42b92e:	(bad)  
  42b92f:	pop    ecx
  42b930:	stos   DWORD PTR es:[edi],eax
  42b931:	out    dx,eax
  42b932:	push   eax
  42b933:	xchg   DWORD PTR [esi-0x1c0765d1],eax
  42b939:	(bad)  
  42b93a:	das    
  42b93b:	jmp    DWORD PTR [ebp-0x4e]
  42b93e:	push   ecx
  42b93f:	push   ebp
  42b940:	mov    ah,0xb
  42b942:	sbb    eax,0x4f1e7cc
  42b947:	data16 (bad) 
  42b949:	loopne 0x42b912
  42b94b:	sti    
  42b94c:	outs   dx,DWORD PTR ds:[esi]
  42b94d:	cmp    dl,BYTE PTR ds:0xb5476240
  42b953:	test   DWORD PTR [ebx+edi*4],ebp
  42b956:	jp     0x42b99f
  42b958:	arpl   WORD PTR [edx+0x5e7786fe],si
  42b95e:	adc    eax,0xa59f6240
  42b963:	push   ebx
  42b964:	lods   al,BYTE PTR ds:[esi]
  42b965:	imul   ecx,edx,0xffffff85
  42b968:	and    ah,BYTE PTR [ebx-0x4d9cd886]
  42b96e:	dec    BYTE PTR [edi-0x6c]
  42b971:	sti    
  42b972:	mov    ds:0xd5,eax
	...
  42b987:	add    bh,bl
  42b989:	jno    0x42b9b5
  42b98b:	repz out 0x32,eax
  42b98e:	hlt    
  42b98f:	or     DWORD PTR [eax-0x4f],0xfffffffe
  42b993:	call   DWORD PTR [ecx+0x7e547215]
  42b999:	into   
  42b99a:	addr16 fwait
  42b99c:	bound  esi,QWORD PTR [edx-0x29c97702]
  42b9a2:	or     al,0x89
  42b9a4:	dec    esi
  42b9a5:	ficom  WORD PTR [eax]
  42b9a7:	call   0x408a12
  42b9ac:	fnstenv [esi+ecx*4-0x1826ddf0]
  42b9b3:	sbb    DWORD PTR [esi+0x2e],esp
  42b9b6:	ins    DWORD PTR es:[edi],dx
  42b9b7:	inc    eax
  42b9b8:	ds std 
  42b9ba:	mov    bh,0x76
  42b9bc:	es std 
  42b9be:	(bad)  
  42b9bf:	push   ebx
  42b9c0:	xor    ah,al
  42b9c2:	sbb    edi,DWORD PTR [edi-0x5e]
  42b9c5:	shl    DWORD PTR [ebx-0x64],cl
  42b9c8:	(bad)  
  42b9c9:	(bad)  
  42b9cb:	js     0x42b9eb
  42b9cd:	std    
  42b9ce:	sar    DWORD PTR [esi-0x65],cl
  42b9d1:	dec    ebp
  42b9d2:	in     al,dx
  42b9d3:	js     0x42b9fc
  42b9d5:	scas   eax,DWORD PTR es:[edi]
  42b9d6:	in     eax,0x9b
  42b9d8:	cld    
  42b9d9:	(bad)  
  42b9da:	shl    DWORD PTR [ebx+ebx*8-0x20f3fbe3],cl
  42b9e1:	cdq    
  42b9e2:	repz jg 0x42ba0a
  42b9e5:	(bad)  
  42b9e7:	add    edi,DWORD PTR [ebp+ebx*8+0x771c]
	...
  42b9fe:	add    BYTE PTR [eax],al
  42ba00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ba01:	std    
  42ba02:	add    edx,DWORD PTR [edi+edx*8+0x1d]
  42ba06:	int3   
  42ba07:	jecxz  0x42b9b6
  42ba09:	sub    ebx,DWORD PTR [ebx-0x1c662034]
  42ba0f:	jg     0x42b9d7
  42ba11:	(bad)  
  42ba13:	add    ecx,ecx
  42ba15:	xchg   ebp,eax
  42ba16:	jne    0x42ba5b
  42ba18:	bound  ebp,QWORD PTR [edi]
  42ba1a:	jnp    0x42ba94
  42ba1c:	adc    DWORD PTR [ebp+0x24],edx
  42ba1f:	loopne 0x42ba8a
  42ba21:	mov    cl,0xaf
  42ba23:	adc    DWORD PTR [ebx-0x27],esp
  42ba26:	je     0x42ba67
  42ba28:	xchg   BYTE PTR [ecx-0x48],al
  42ba2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba2c:	outs   dx,DWORD PTR ds:[esi]
  42ba2d:	xchg   ecx,eax
  42ba2e:	cld    
  42ba2f:	inc    ebx
  42ba30:	bound  edx,QWORD PTR [esp+eiz*4-0x21]
  42ba34:	jge    0x42ba5f
  42ba36:	inc    ebx
  42ba37:	push   cs
  42ba38:	mov    dl,0xe7
  42ba3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba3b:	add    esp,edi
  42ba3d:	sub    eax,0x81be0d01
  42ba42:	mov    eax,ds:0xe8d961e9
  42ba47:	push   0xffffff80
  42ba49:	fld    DWORD PTR [eax]
  42ba4b:	ins    BYTE PTR es:[edi],dx
  42ba4c:	or     eax,0x61e878fd
  42ba51:	fld1   
  42ba53:	inc    edx
  42ba54:	mov    edi,0xef6fabe
  42ba59:	sbb    eax,0xce11d125
  42ba5e:	mov    cl,0xad
  42ba60:	(bad)  
  42ba61:	lock push eax
  42ba63:	fiadd  WORD PTR [eax]
	...
  42ba75:	add    BYTE PTR [eax],al
  42ba77:	add    dh,dh
  42ba79:	sbb    al,0x25
  42ba7b:	pop    ds
  42ba7c:	xchg   esi,eax
  42ba7d:	push   esp
  42ba7e:	test   DWORD PTR ds:0xe900d8ea,eax
  42ba84:	xchg   ecx,eax
  42ba85:	push   esp
  42ba86:	test   DWORD PTR ds:0xe900d7d6,eax
  42ba8c:	jno    0x42bae2
  42ba8e:	inc    ebp
  42ba8f:	add    eax,0x6d8c2992
  42ba94:	cmp    dl,dl
  42ba96:	(bad)  
  42ba97:	call   0x397df5fd
  42ba9c:	into   
  42ba9d:	push   esi
  42ba9e:	pop    ss
  42ba9f:	call   0xca07fd05
  42baa4:	ficomp DWORD PTR [eax+0x4cc0c47b]
  42baaa:	and    eax,0x255cd2dd
  42baaf:	jge    0x42bb0f
  42bab1:	fld    DWORD PTR [eax]
  42bab3:	jbe    0x42baff
  42bab5:	std    
  42bab6:	sbb    al,0x62
  42bab8:	test   eax,0x9eeb6728
  42babd:	mov    cl,0x5d
  42babf:	rol    BYTE PTR [eax],cl
  42bac1:	mov    esi,0x8771202e
  42bac6:	(bad)  
  42bac7:	test   al,0xdd
  42bac9:	cwde   
  42baca:	or     al,BYTE PTR [eax]
  42bacc:	push   cs
  42bacd:	test   DWORD PTR [edx-0x1d3aa0b4],eax
  42bad3:	add    esi,DWORD PTR [esi+0x76]
  42bad6:	imul   bl
  42bad8:	mov    edi,0x33002a
	...
  42baed:	add    BYTE PTR [eax],al
  42baef:	add    BYTE PTR [esi+0x0],dh
  42baf2:	dec    edi
  42baf3:	dec    DWORD PTR [esi+0x7b40114d]
  42baf9:	push   ss
  42bafa:	add    ebx,0xffffffb5
  42bafd:	sbb    BYTE PTR [edx-0x75],dl
  42bb00:	outs   dx,BYTE PTR ds:[esi]
  42bb01:	sbb    BYTE PTR [edx+0x7a88f055],bh
  42bb07:	in     al,0x73
  42bb09:	pop    esp
  42bb0a:	in     eax,dx
  42bb0b:	hlt    
  42bb0c:	jns    0x42bae3
  42bb0e:	add    BYTE PTR [ebx-0x63],dl
  42bb11:	push   eax
  42bb12:	je     0x42bb1c
  42bb14:	mov    WORD PTR [esp+esi*2+0x10],?
  42bb18:	sar    cl,0xc
  42bb1b:	push   edi
  42bb1c:	lea    edi,[esp+edx*1-0x60]
  42bb20:	sbb    ebx,DWORD PTR ds:0x52038b01
  42bb26:	ror    BYTE PTR [edi],cl
  42bb28:	mov    edi,0x3bffffd9
  42bb2d:	fs inc esp
  42bb2f:	adc    BYTE PTR [ebx],cl
  42bb31:	fld    QWORD PTR [eax]
  42bb33:	adc    BYTE PTR [edx+edx*2],al
  42bb36:	adc    DWORD PTR [ecx],eax
  42bb38:	sti    
  42bb39:	fadd   QWORD PTR [ebx+0x95924f6]
  42bb3f:	add    DWORD PTR [ebx],ecx
  42bb41:	(bad)  [ecx]
  42bb43:	shl    BYTE PTR [edx],0xd3
  42bb46:	add    eax,0xdc7586
  42bb4b:	add    BYTE PTR [edx+0x4f0f0512],dh
  42bb51:	popa   
  42bb52:	add    DWORD PTR [eax],eax
	...
  42bb68:	retf   
  42bb69:	je     0x42baff
  42bb6b:	push   ebx
  42bb6c:	bound  esi,QWORD PTR [edx-0x605d7c02]
  42bb72:	sub    al,0x62
  42bb75:	mov    dl,0xfe
  42bb77:	mov    WORD PTR [esi],ds
  42bb79:	(bad)  
  42bb7a:	cld    
  42bb7b:	dec    edi
  42bb7c:	lods   eax,DWORD PTR ds:[esi]
  42bb7d:	popf   
  42bb7e:	mov    cs,WORD PTR [esi]
  42bb80:	and    dh,BYTE PTR [edx+0x3a469491]
  42bb86:	(bad)  
  42bb87:	jmp    DWORD PTR [edx+0x39]
  42bb8a:	pop    esi
  42bb8b:	add    BYTE PTR [edx-0x4e],ah
  42bb8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb8f:	jns    0x42bbd3
  42bb91:	mov    cl,0xfe
  42bb93:	mov    WORD PTR [esi],ss
  42bb95:	mov    fs,esi
  42bb97:	mov    eax,0xfffeb2c3
  42bb9c:	jp     0x42bbf9
  42bb9e:	fiadd  WORD PTR [eax]
  42bba0:	bound  ebx,QWORD PTR ds:0xb25a248a
  42bba6:	(bad)  
  42bba7:	dec    DWORD PTR [edx+0x43]
  42bbaa:	call   0x7e44:0x59b74dfb
  42bbb1:	retf   0xb2e
  42bbb4:	cmc    
  42bbb5:	in     eax,dx
  42bbb6:	call   0x59f24dd4
  42bbbb:	inc    esp
  42bbbc:	xchg   al,dl
  42bbbe:	xor    al,0x8d
  42bbc0:	sahf   
  42bbc1:	(bad)  
  42bbc2:	fmul   DWORD PTR [edi-0x11]
  42bbc5:	sub    eax,0xb26307e9
  42bbca:	dec    BYTE PTR [edi+0x0]
	...
  42bbdd:	add    BYTE PTR [eax],al
  42bbdf:	add    bh,bl
  42bbe1:	sub    eax,0xb262cbe9
  42bbe6:	dec    BYTE PTR [edi-0x11]
  42bbe9:	in     eax,dx
  42bbea:	call   0x2ec3443e
  42bbef:	call   0x426567
  42bbf4:	loope  0x42bc6b
  42bbf6:	in     eax,0x84
  42bbf8:	mov    ds:0xd91be1d8,al
  42bbfd:	push   es
  42bbfe:	ins    DWORD PTR es:[edi],dx
  42bbff:	dec    eax
  42bc00:	xchg   ch,bh
  42bc02:	push   edx
  42bc03:	sbb    bl,BYTE PTR [esi+0xc]
  42bc06:	ss xor al,0x44
  42bc09:	(bad)  [eax+0x3b3327ab]
  42bc0f:	mov    eax,ds:0x23bc98e6
  42bc14:	fistp  QWORD PTR [edi-0x66b2c04c]
  42bc1a:	mov    bl,dl
  42bc1c:	pusha  
  42bc1d:	inc    ebp
  42bc1e:	mov    ch,0x8e
  42bc20:	es cmc 
  42bc22:	iret   
  42bc23:	xor    ecx,DWORD PTR [ecx+0x3df5a3e5]
  42bc29:	(bad)  [ebp+0x6da50a0b]
  42bc2f:	inc    esp
  42bc30:	bound  ecx,QWORD PTR [esi-0x54]
  42bc33:	inc    edi
  42bc34:	and    ch,BYTE PTR [ecx]
  42bc36:	add    ah,bh
  42bc38:	pop    ecx
  42bc39:	mov    edi,0x382ad4e3
  42bc3e:	jno    0x42bc8b
  42bc40:	pop    edx
  42bc41:	dec    esp
  42bc42:	sub    al,0xe8
	...
  42bc58:	pop    ecx
  42bc59:	sub    DWORD PTR [edi-0x33],esp
  42bc5c:	cmp    DWORD PTR [ebx-0x4d],edx
  42bc5f:	stos   DWORD PTR es:[edi],eax
  42bc60:	call   0xe646a548
  42bc65:	cdq    
  42bc66:	cmp    al,0xe4
  42bc68:	sub    BYTE PTR [esi+0x4],al
  42bc6b:	clc    
  42bc6c:	out    dx,al
  42bc6d:	adc    eax,0x4618dfcc
  42bc72:	(bad)  
  42bc73:	repz cmp al,0xab
  42bc76:	cmp    BYTE PTR [esi],ch
  42bc78:	add    al,0x22
  42bc7a:	adc    BYTE PTR [ebp-0x717c4175],0xa6
  42bc81:	cmc    
  42bc82:	jmp    0x42bc2f
  42bc84:	xchg   edx,eax
  42bc85:	jecxz  0x42bc87
  42bc87:	call   0x629ddeed
  42bc8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc8d:	xchg   BYTE PTR es:[esp+edx*4+0x7f],cl
  42bc92:	or     eax,0xed5694e9
  42bc97:	mov    eax,0xb4672b90
  42bc9c:	out    dx,al
  42bc9d:	enter  0x9c8c,0xd9
  42bca1:	and    cl,ch
  42bca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bca4:	(bad)  
  42bca5:	fadd   DWORD PTR [eax]
  42bca7:	fs ins BYTE PTR es:[edi],dx
  42bca9:	shl    DWORD PTR [edi+0x2e],0xee
  42bcad:	xchg   ebx,eax
  42bcae:	jmp    0xfb058e14
  42bcb3:	mov    eax,fs:0xc2510244
  42bcb9:	ret    0xe901
	...
  42bcd0:	into   
  42bcd1:	cmc    
  42bcd2:	data16 lahf 
  42bcd4:	in     al,0x24
  42bcd6:	stc    
  42bcd7:	mov    al,ds:0xe819f4b9
  42bcdc:	popa   
  42bcdd:	dec    esp
  42bcde:	push   esp
  42bcdf:	icebp  
  42bce0:	mov    es,edx
  42bce2:	xchg   BYTE PTR [edi-0x212e94fa],dh
  42bce8:	in     eax,dx
  42bce9:	push   ebx
  42bcea:	rcr    DWORD PTR [ebp+ebx*2-0x7f],0xfb
  42bcef:	into   
  42bcf0:	data16 fxam 
  42bcf3:	jmp    0x42bd05
  42bcf5:	jle    0x42bd52
  42bcf7:	mov    al,0x21
  42bcf9:	and    al,0x86
  42bcfb:	lds    esi,FWORD PTR [ecx+0x2b]
  42bcfe:	xchg   BYTE PTR [edx+esi*2],dh
  42bd01:	sub    ah,BYTE PTR [edi-0x1d]
  42bd04:	dec    ebx
  42bd05:	fst    DWORD PTR [edx+0x72]
  42bd08:	enter  0xf855,0x96
  42bd0c:	or     esp,DWORD PTR [esi]
  42bd0e:	adc    ebp,DWORD PTR [ecx]
  42bd10:	dec    sp
  42bd12:	dec    ebx
  42bd13:	add    BYTE PTR [edi],al
  42bd15:	pop    ebx
  42bd16:	lds    ecx,FWORD PTR [esi+eax*4]
  42bd19:	mov    WORD PTR [ebp+0x1e],?
  42bd1c:	arpl   WORD PTR [edi-0xa],bx
  42bd1f:	dec    esp
  42bd21:	push   eax
  42bd22:	sar    BYTE PTR [eax+0x414ce7],cl
  42bd28:	mov    esp,0x3e50ba10
  42bd2d:	adc    BYTE PTR ds:0x54a7a150,cl
  42bd33:	call   0x42bd38
	...
  42bd48:	mov    ecx,0x10fff726
  42bd4d:	fidivr DWORD PTR [esi+0x4c52bb01]
  42bd53:	or     BYTE PTR [esi],al
  42bd55:	mov    WORD PTR [ebp+0x13],?
  42bd58:	or     ebx,DWORD PTR [esp+0x78597d75]
  42bd5f:	add    DWORD PTR [ebx-0x20],edi
  42bd62:	or     BYTE PTR [ebx],dh
  42bd64:	dec    ebx
  42bd65:	test   DWORD PTR [edi+0x2f72b546],0x85a3c58d
  42bd6f:	leave  
  42bd70:	out    0xaf,eax
  42bd72:	test   BYTE PTR [ecx],dl
  42bd74:	mov    DWORD PTR [edi+0x62cb2475],0x53557531
  42bd7e:	push   eax
  42bd7f:	add    DWORD PTR [ebx+0x46747962],edi
  42bd85:	pop    ecx
  42bd86:	repz pop eax
  42bd88:	jbe    0x42bd58
  42bd8a:	adc    eax,0x94313
  42bd90:	cmp    esi,DWORD PTR [eax+0x7]
  42bd93:	mov    edi,ebx
  42bd95:	jo     0x42bda8
  42bd97:	or     DWORD PTR [ebx],ecx
  42bd99:	fabs   
  42bd9b:	add    eax,0x895f8e28
  42bda0:	bound  edi,QWORD PTR [edx-0x64890477]
  42bda6:	jle    0x42bde3
  42bda8:	dec    eax
  42bda9:	mov    ebp,0x8008
	...
  42bdbe:	add    BYTE PTR [eax],al
  42bdc0:	ins    DWORD PTR es:[edi],dx
  42bdc1:	mov    cl,0xfe
  42bdc3:	je     0x42be23
  42bdc5:	jg     0x42bd85
  42bdc7:	out    0x65,eax
  42bdc9:	aaa    
  42bdca:	retf   
  42bdcb:	call   0xfbddf130
  42bdd0:	sub    eax,0x8a428d94
  42bdd5:	test   BYTE PTR [edi],dh
  42bdd7:	pop    ebp
  42bdd8:	mov    al,ds:0xe954feba
  42bddd:	es jg  0x42bdc4
  42bde0:	stos   BYTE PTR es:[edi],al
  42bde1:	das    
  42bde2:	stos   BYTE PTR es:[edi],al
  42bde3:	sbb    al,0x11
  42bde5:	pop    esp
  42bde6:	xor    ebp,eax
  42bde8:	or     al,0x51
  42bdea:	fwait
  42bdeb:	sti    
  42bdec:	jmp    0x8df8c466
  42bdf1:	(bad)  
  42bdf3:	(bad)  
  42bdf4:	fldcw  WORD PTR [ebx-0x64823881]
  42bdfa:	push   ebx
  42bdfb:	dec    eax
  42bdfc:	es das 
  42bdfe:	int3   
  42bdff:	sti    
  42be00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be01:	jbe    0x42bde5
  42be03:	adc    esp,DWORD PTR [ebx+eax*8-0x1]
  42be07:	inc    esp
  42be09:	xchg   eax,ecx
  42be0b:	je     0x42bdb0
  42be0d:	or     al,0xd8
  42be0f:	dec    ebx
  42be10:	xchg   dh,al
  42be12:	adc    dh,BYTE PTR [esi]
  42be14:	mov    eax,0xeb6238b0
  42be19:	add    eax,0x3c6517e9
  42be1e:	inc    ebp
  42be1f:	dec    ebp
  42be20:	and    edx,DWORD PTR [ecx+0x620d]
	...
  42be36:	add    BYTE PTR [eax],al
  42be38:	pop    ecx
  42be39:	jno    0x42bdc5
  42be3b:	dec    esp
  42be3c:	inc    esi
  42be3d:	stos   BYTE PTR es:[edi],al
  42be3e:	and    al,0x89
  42be40:	sahf   
  42be41:	fxch   st(3)
  42be43:	stc    
  42be44:	and    BYTE PTR ds:0xd988ffc4,dl
  42be4a:	out    0x2,eax
  42be4c:	or     dl,BYTE PTR [edx]
  42be4e:	jne    0x42be54
  42be50:	bound  edx,QWORD PTR [eax-0x60]
  42be53:	xor    ebp,0xbb87ebbb
  42be59:	fsub   st,st(7)
  42be5b:	add    esp,ebp
  42be5d:	pop    DWORD PTR [eax+0x63baf412]
  42be63:	mov    DWORD PTR [ecx+0x33],ebx
  42be66:	outs   dx,DWORD PTR ds:[esi]
  42be67:	xor    ebx,DWORD PTR [esi+ecx*2]
  42be6a:	mov    eax,ds:0x752fc5fb
  42be6f:	add    al,0x62
  42be71:	push   eax
  42be72:	cmp    BYTE PTR [ecx-0x78144458],al
  42be78:	fcmovnu st,st(0)
  42be7a:	out    0x3,eax
  42be7c:	in     eax,0x8a
  42be7e:	inc    eax
  42be7f:	xor    dh,ah
  42be81:	mov    edx,0x50333323
  42be86:	sub    ch,BYTE PTR [ebx+ebx*2-0x1a62ed89]
  42be8d:	rcl    DWORD PTR [ecx],cl
  42be8f:	add    al,0x63
  42be91:	inc    ebp
  42be92:	in     eax,dx
  42be93:	mov    ss,WORD PTR [edx]
  42be95:	aad    0xe
  42be97:	add    dh,BYTE PTR ds:0x77ea7
	...
  42bead:	add    BYTE PTR [eax],al
  42beaf:	add    bh,ch
  42beb1:	adc    ah,ah
  42beb3:	xor    edi,DWORD PTR [esi+edx*8-0x24c53292]
  42beba:	mov    WORD PTR [ecx+ecx*2-0x65e857aa],ds
  42bec1:	dec    esi
  42bec2:	jecxz  0x42be4c
  42bec4:	sub    bl,cl
  42bec6:	jp     0x42bf0b
  42bec8:	sahf   
  42bec9:	out    dx,al
  42beca:	and    ebp,eax
  42becc:	push   ecx
  42becd:	inc    ebp
  42bece:	add    DWORD PTR [esi+ebp*4],ebp
  42bed1:	inc    ebp
  42bed2:	or     BYTE PTR [edx-0x2e],ah
  42bed5:	mov    cl,0x1b
  42bed7:	jg     0x42bf3a
  42bed9:	fxam   
  42bedb:	fistp  QWORD PTR [ebx]
  42bedd:	fldenv [esi-0x18]
  42bee0:	in     al,dx
  42bee1:	and    eax,0xb4c9f225
  42bee6:	mov    gs,ecx
  42bee8:	popa   
  42bee9:	push   ebp
  42beea:	shl    ebp,0xe5
  42beed:	push   esp
  42beee:	inc    ebp
  42beef:	int    0xd2
  42bef1:	inc    BYTE PTR [ebx]
  42bef3:	hlt    
  42bef4:	push   0xd551cb52
  42bef9:	cmp    al,0xfa
  42befb:	pop    esi
  42befc:	cli    
  42befd:	sar    BYTE PTR [ebp*8+0x1f85d654],cl
  42bf04:	or     DWORD PTR [ebx],edx
  42bf06:	lea    eax,[esi-0x32]
  42bf09:	push   edx
  42bf0a:	retf   
  42bf0b:	push   ecx
  42bf0c:	sub    BYTE PTR [esi+0x1],ah
  42bf0f:	jmp    0x433d4ef6
	...
  42bf28:	pop    esp
  42bf29:	mov    cl,0xf7
  42bf2b:	mov    BYTE PTR [ecx-0x27],ah
  42bf2e:	test   DWORD PTR [edi],ebp
  42bf30:	mov    ecx,0x61e99251
  42bf35:	push   edx
  42bf36:	mov    BYTE PTR [ecx],0xe0
  42bf39:	add    cx,bp
  42bf3c:	fimul  DWORD PTR [esi-0x41377817]
  42bf42:	cli    
  42bf43:	xchg   esi,eax
  42bf44:	lahf   
  42bf45:	jmp    0xab5c:0xb3ea92c0
  42bf4c:	(bad)  
  42bf4d:	fnstcw WORD PTR [edi-0x33]
  42bf50:	xor    bh,BYTE PTR [edx+edi*8+0x3bb173e9]
  42bf57:	mov    ecx,ebx
  42bf59:	mov    ebp,0xb977008c
  42bf5e:	push   ds
  42bf5f:	call   0x38fc58
  42bf64:	sub    BYTE PTR [ecx],0x25
  42bf67:	cmp    al,0x9
  42bf69:	(bad)  
  42bf6a:	add    BYTE PTR [ebx],dh
  42bf6c:	mov    ebx,0xfc24454c
  42bf71:	div    DWORD PTR [edi]
  42bf73:	inc    esi
  42bf74:	inc    edi
  42bf75:	into   
  42bf76:	test   BYTE PTR [edi+0x5300d60a],bl
  42bf7c:	dec    esi
  42bf7d:	dec    edx
  42bf7e:	ins    DWORD PTR es:[edi],dx
  42bf7f:	and    al,0x3
  42bf81:	pop    es
  42bf82:	mov    WORD PTR [esi-0x4d],es
  42bf85:	test   DWORD PTR [ecx-0x36b57eaa],0xe8
	...
  42bf9f:	add    BYTE PTR [ebp+0x50000129],ch
  42bfa5:	pop    ebp
  42bfa6:	mov    BYTE PTR [edi+ebp*2-0x4b],bh
  42bfaa:	jnp    0x42bfab
  42bfac:	and    al,0xe8
  42bfae:	and    al,0xf6
  42bfb0:	mov    ebp,0x918405d4
  42bfb5:	aam    0x0
  42bfb7:	add    BYTE PTR [ebx-0x74fff5b3],ah
  42bfbd:	pop    esi
  42bfbe:	xor    al,0x80
  42bfc0:	(bad)  
  42bfc2:	add    bh,bh
  42bfc4:	mov    ?,WORD PTR [ecx]
  42bfc6:	or     eax,DWORD PTR [eax-0x75]
  42bfc9:	mov    al,ds:0xd58b00fc
  42bfce:	out    0x4a,eax
  42bfd0:	jp     0x42bfa7
  42bfd2:	add    BYTE PTR [ebx-0x5ec792cc],cl
  42bfd8:	push   ebp
  42bfd9:	push   esp
  42bfda:	push   eax
  42bfdb:	push   ecx
  42bfdc:	shl    BYTE PTR [ecx+ebp*8-0x9ad2410],0x8d
  42bfe4:	ja     0x42bf9f
  42bfe6:	dec    esi
  42bfe7:	call   0xfb3fa54e
  42bfec:	xor    eax,0x86243a16
  42bff1:	rol    BYTE PTR [ecx+0x424625c6],cl
  42bff7:	and    al,0xbe
  42bff9:	call   0xd88c:0xc263137f
  42c000:	out    0x9b,al
  42c002:	or     ch,BYTE PTR [eax]
	...
  42c018:	add    eax,0xf42be0cf
  42c01d:	enter  0xfb05,0x6e
  42c021:	sahf   
  42c022:	out    0x8c,al
  42c024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c025:	(bad)  
  42c026:	sub    al,0x1
  42c028:	js     0x42bfec
  42c02a:	cmp    al,0xb
  42c02c:	daa    
  42c02d:	push   edx
  42c02e:	mov    ecx,ebx
  42c030:	retf   0x6b60
  42c033:	sti    
  42c034:	int    0x2d
  42c036:	inc    edx
  42c037:	and    al,0x7e
  42c039:	sub    al,0xb6
  42c03b:	call   0x4877bd
  42c040:	sti    
  42c041:	clc    
  42c042:	add    al,0x0
  42c044:	bound  ebp,QWORD PTR ds:0xe243a
  42c04a:	(bad)  
  42c04b:	jmp    DWORD PTR [edx]
  42c04d:	jns    0x42c060
  42c04f:	stc    
  42c050:	fmulp  st(3),st
  42c052:	push   es
  42c053:	test   BYTE PTR [edx+eax*8-0x3e070002],bl
  42c05a:	sub    al,0x0
  42c05c:	or     dl,al
  42c05e:	mov    DWORD PTR [esi+edi*1+0x76],ecx
  42c062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c063:	mov    bh,dl
  42c065:	ret    0x86fe
  42c068:	out    0x9d,al
  42c06a:	fidiv  WORD PTR [esi]
  42c06c:	and    eax,0x62af81bf
  42c071:	ret    0x67fe
  42c074:	xchg   edx,eax
  42c075:	fstp   DWORD PTR [esp+eax*1+0x62]
  42c079:	inc    ebx
  42c07a:	in     eax,0x3c
	...
  42c090:	lods   eax,DWORD PTR ds:[esi]
  42c091:	data16 cmp al,0xe0
  42c094:	pop    ecx
  42c095:	fs fwait
  42c097:	lods   al,BYTE PTR ds:[esi]
  42c098:	out    0x4a,eax
  42c09a:	call   0x34db9ea2
  42c09f:	cli    
  42c0a0:	xor    edx,0x13
  42c0a3:	loopne 0x42c116
  42c0a5:	ror    DWORD PTR cs:[eax],cl
  42c0a8:	rcr    DWORD PTR [esp+ecx*8],1
  42c0ab:	icebp  
  42c0ac:	xchg   ebp,eax
  42c0ad:	data16 xor al,0xe0
  42c0b0:	pop    ebp
  42c0b1:	mov    fs:0x8b845fac,eax
  42c0b7:	cdq    
  42c0b8:	in     eax,0x44
  42c0ba:	int3   
  42c0bb:	idiv   esp
  42c0bd:	fidiv  DWORD PTR [ebp-0x367193d]
  42c0c3:	adc    BYTE PTR [ecx+0x6f],ch
  42c0c6:	and    al,0xe0
  42c0c8:	jne    0x42c0eb
  42c0ca:	mov    al,0xf
  42c0cc:	pop    ebp
  42c0cd:	and    DWORD PTR [eax-0x5360e5f2],esi
  42c0d3:	fbld   TBYTE PTR [edx+ebx*8+0x3e]
  42c0d7:	xor    eax,DWORD PTR [eax+0x5c]
  42c0da:	(bad)  
  42c0db:	fist   WORD PTR [ebx-0x23]
  42c0de:	mov    ah,0x4a
  42c0e0:	out    dx,eax
  42c0e1:	and    al,0xc
  42c0e3:	aam    0x7d
  42c0e5:	mov    edx,DWORD PTR [ebx-0x67]
  42c0e8:	mov    DWORD PTR [edx-0xc],eax
  42c0eb:	sub    eax,0x1bd5b85a
  42c0f0:	or     BYTE PTR ds:0x98e8,bl
	...
  42c106:	add    BYTE PTR [eax],al
  42c108:	dec    edi
  42c109:	cmp    eax,0x646243f6
  42c10e:	and    BYTE PTR [edi-0x73],bh
  42c111:	sub    al,0xce
  42c113:	sub    eax,0xba016062
  42c118:	out    0x24,al
  42c11a:	add    DWORD PTR [eax+0x23e34196],ebx
  42c120:	pushf  
  42c121:	fld    DWORD PTR [edi+0x1416232]
  42c127:	jmp    0x1dce9a8b
  42c12c:	inc    edx
  42c12d:	sbb    ebp,ecx
  42c12f:	fisubr DWORD PTR [ecx+0x2165fab2]
  42c135:	sub    eax,0xc2266202
  42c13a:	mov    edx,0x86b2eab6
  42c13f:	mov    ah,0xb9
  42c141:	jno    0x42c135
  42c143:	sahf   
  42c144:	ficomp DWORD PTR [ecx+0x7d]
  42c147:	int    0xee
  42c149:	mov    dh,0xb
  42c14b:	gs pop ss
  42c14d:	mov    ah,0xfa
  42c14f:	xchg   dh,dl
  42c151:	mov    ds:0xd94c43e9,al
  42c156:	add    BYTE PTR [ecx+0x6d],ch
  42c159:	std    
  42c15a:	or     eax,0xf2e55ce9
  42c15f:	out    dx,eax
  42c160:	pusha  
  42c161:	fs inc ebx
  42c163:	add    DWORD PTR [ebx+0x5c],ebp
  42c166:	imul   edx,DWORD PTR [edi-0x26],0xffffffb2
  42c16a:	pop    edx
  42c16b:	lods   al,BYTE PTR ds:[esi]
	...
  42c180:	outs   dx,BYTE PTR ds:[esi]
  42c181:	or     BYTE PTR [ebp+esi*4+0x68e8fe85],cl
  42c188:	sbb    DWORD PTR [edx+0x92b62fa],esi
  42c18e:	jmp    0xfaf4c97d
  42c193:	jb     0x42c130
  42c195:	shl    DWORD PTR [edx+0x16],0xda
  42c199:	mov    dl,0x8c
  42c19b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c19c:	xchg   ebp,eax
  42c19d:	cli    
  42c19e:	call   0xfaf4b49e
  42c1a3:	add    BYTE PTR [eax-0x787ea866],ch
  42c1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1aa:	cld    
  42c1ab:	dec    DWORD PTR [ebx-0x64]
  42c1ae:	add    eax,0x757eb800
  42c1b3:	push   ebx
  42c1b4:	xchg   BYTE PTR [edi],al
  42c1b6:	dec    esi
  42c1b7:	push   0x74
  42c1b9:	(bad)  
  42c1ba:	call   0x1afc394c
  42c1bf:	pop    ecx
  42c1c0:	and    eax,DWORD PTR [edi]
  42c1c2:	adc    al,BYTE PTR [ecx]
  42c1c4:	cmp    ecx,DWORD PTR [ebx-0x22b90909]
  42c1ca:	jmp    FWORD PTR [ecx+0x9]
  42c1cd:	gs jge 0x42c1f4
  42c1d0:	aaa    
  42c1d1:	repz je 0x42c1e5
  42c1d4:	jno    0x42c183
  42c1d6:	lea    eax,[ebp+0x7]
  42c1d9:	jmp    0xcb83:0xb227548b
  42c1e0:	jecxz  0x42c17f
  42c1e2:	mov    WORD PTR [eax],es
	...
  42c1f8:	sti    
  42c1f9:	pusha  
  42c1fa:	je     0x42c214
  42c1fc:	jne    0x42c24c
  42c1fe:	adc    al,0x80
  42c200:	mov    ecx,0x778d0119
  42c205:	mov    ecx,0x63055012
  42c20a:	ret    0x3e8
  42c20d:	pusha  
  42c20e:	add    DWORD PTR [eax],eax
  42c210:	sbb    BYTE PTR ds:[ebx+0x53],al
  42c214:	jmp    0x42c276
  42c216:	push   ebp
  42c217:	and    al,0xbf
  42c219:	(bad)  
  42c21b:	call   0x442213
  42c220:	(bad)  
  42c221:	sbb    BYTE PTR ds:0x24c93c1c,ah
  42c227:	adc    al,0x3c
  42c229:	leave  
  42c22a:	and    al,0x1c
  42c22c:	pop    esp
  42c22d:	leave  
  42c22e:	and    al,0x18
  42c230:	bound  esi,QWORD PTR [eax-0x77]
  42c233:	inc    esp
  42c234:	inc    esi
  42c235:	ins    BYTE PTR es:[edi],dx
  42c236:	sub    BYTE PTR [eax],ah
  42c238:	adc    cl,al
  42c23a:	leave  
  42c23b:	adc    esp,DWORD PTR [ebx-0x3e]
  42c23e:	jg     0x42c204
  42c240:	jp     0x42c281
  42c242:	popf   
  42c243:	sbb    ebx,DWORD PTR [ebp+0x3d]
  42c246:	arpl   WORD PTR [eax],ax
  42c248:	(bad)  
  42c24a:	mov    DWORD PTR [esi+eax*4-0x2],eax
  42c24e:	xor    al,0x66
  42c250:	arpl   WORD PTR [edx],bx
  42c252:	mov    ecx,0x93c2a656
  42c257:	adc    eax,0x3e91a2
	...
  42c270:	jmp    0x661a43ef
  42c275:	inc    esi
  42c276:	jo     0x42c278
  42c278:	(bad)  
  42c27a:	xchg   ebx,eax
  42c27b:	adc    eax,0x3eb096
  42c280:	aas    
  42c281:	or     edi,esi
  42c283:	jmp    DWORD PTR [edx-0x2b]
  42c286:	or     ecx,DWORD PTR [edi-0x13]
  42c289:	lods   eax,DWORD PTR ds:[esi]
  42c28a:	pop    edx
  42c28b:	push   cs
  42c28c:	mov    ds:0xe7db87c2,al
  42c291:	ja     0x42c29d
  42c293:	js     0x42c2dd
  42c295:	retf   0x826
  42c298:	int    0x6d
  42c29a:	push   ss
  42c29b:	push   0x1e
  42c29d:	ret    0x1593
  42c2a0:	inc    esi
  42c2a1:	mov    al,0x3e
  42c2a3:	add    cl,ch
  42c2a5:	or     al,BYTE PTR [ecx-0x7898c905]
  42c2ab:	xor    eax,0x3e9412
  42c2b0:	or     BYTE PTR [edx+0x525e4589],dl
  42c2b6:	mov    DWORD PTR [ebx+0x66],eax
  42c2b9:	push   edx
  42c2ba:	xchg   ebx,eax
  42c2bb:	rcr    cl,cl
  42c2bd:	fldcw  WORD PTR [ebx+eax*1-0x26722315]
  42c2c4:	out    0x1e,al
  42c2c6:	cld    
  42c2c7:	xor    ebx,edi
  42c2c9:	sbb    al,0xf4
  42c2cb:	xor    ebp,DWORD PTR [ecx-0x75]
  42c2ce:	mov    bh,0xc3
  42c2d0:	fstp   QWORD PTR [ebp+0x8ce0]
	...
  42c2e6:	add    BYTE PTR [eax],al
  42c2e8:	mov    ecx,0xa0dc8a09
  42c2ed:	and    eax,0x1c8de274
  42c2f2:	add    BYTE PTR [eax],dl
  42c2f4:	pop    eax
  42c2f5:	cmp    esp,DWORD PTR [ecx]
  42c2f7:	cmp    eax,0x2cf02d9c
  42c2fc:	hlt    
  42c2fd:	iret   
  42c2fe:	or     eax,DWORD PTR [edx+0x62]
  42c301:	jb     0x42c2eb
  42c303:	add    ebp,DWORD PTR [edx-0x27]
  42c306:	iret   
  42c307:	out    0xd2,al
  42c309:	mov    bl,0xb3
  42c30b:	jg     0x42c32f
  42c30d:	sub    eax,0xc06353e4
  42c312:	clc    
  42c313:	mov    BYTE PTR [ecx],ch
  42c315:	rcl    edx,0x8d
  42c318:	stc    
  42c319:	mov    bl,0x5f
  42c31b:	leave  
  42c31c:	cli    
  42c31d:	ins    BYTE PTR es:[edi],dx
  42c31e:	dec    eax
  42c31f:	xchg   ebp,eax
  42c320:	jmp    0x38786b0b
  42c325:	push   ss
  42c326:	pop    ds
  42c327:	sbb    DWORD PTR [esi-0x1ad058d4],0xcaa067c4
  42c331:	push   edi
  42c332:	push   esp
  42c333:	sub    al,0x2d
  42c335:	push   cs
  42c336:	mov    dl,0x2c
  42c338:	retf   0x74d6
  42c33b:	xchg   ebp,eax
  42c33c:	test   eax,0x835ae666
  42c341:	into   
  42c342:	add    edx,DWORD PTR [eax]
  42c344:	mov    cl,BYTE PTR [edi+0x626203af]
  42c34a:	add    DWORD PTR [ebp+0x0],ebp
	...
  42c360:	lods   eax,DWORD PTR ds:[esi]
  42c361:	iret   
  42c362:	sub    DWORD PTR [ecx],0x55
  42c365:	xlat   BYTE PTR ds:[ebx]
  42c366:	inc    eax
  42c367:	adc    BYTE PTR [ebx-0x26],cl
  42c36a:	add    cl,ch
  42c36c:	dec    ebx
  42c36d:	stos   BYTE PTR es:[edi],al
  42c36e:	cli    
  42c36f:	cld    
  42c370:	and    eax,0x31e940ca
  42c375:	mov    al,0x14
  42c377:	cdq    
  42c378:	push   eax
  42c379:	repz add BYTE PTR [ecx],dl
  42c37c:	hlt    
  42c37d:	and    eax,0x99cde901
  42c382:	or     ah,BYTE PTR [ebp-0x5e]
  42c385:	fadd   DWORD PTR [eax]
  42c387:	jmp    0xe942ba94
  42c38c:	popa   
  42c38d:	pop    edx
  42c38e:	push   ebp
  42c38f:	or     eax,0x1d8c0a36
  42c394:	inc    edx
  42c395:	retf   
  42c396:	dec    edi
  42c397:	jb     0x42c3c2
  42c399:	ret    0xef45
  42c39c:	pusha  
  42c39d:	fld    DWORD PTR [ebp-0x54b1d3f]
  42c3a3:	fiadd  WORD PTR [ebp+0x61e9017d]
  42c3a9:	xor    ah,BYTE PTR [ebp-0x3b]
  42c3ac:	add    DWORD PTR [ebx+0x1de53968],esi
  42c3b2:	and    eax,0x50d93bc1
  42c3b7:	xchg   ecx,eax
  42c3b8:	mov    WORD PTR [edx+0x0],?
  42c3bb:	jmp    0xc967f1aa
  42c3c0:	loop   0x42c35f
  42c3c2:	or     eax,0x6a
	...
  42c3d7:	add    ah,ch
  42c3d9:	fnsave [ebx-0x1b]
  42c3dc:	(bad)  
  42c3dd:	out    0xf9,eax
  42c3df:	hlt    
  42c3e0:	loope  0x42c3c5
  42c3e2:	inc    eax
  42c3e3:	jmp    0xd46475ca
  42c3e8:	jle    0x42c444
  42c3ea:	cmp    eax,DWORD PTR [eax]
  42c3ec:	push   ss
  42c3ed:	add    ah,BYTE PTR ds:0x83719924
  42c3f3:	lgdtd  [edi-0x2088cfd3]
  42c3fa:	ins    DWORD PTR es:[edi],dx
  42c3fb:	add    al,0xf1
  42c3fd:	popf   
  42c3fe:	loop   0x42c418
  42c400:	icebp  
  42c401:	xchg   esi,eax
  42c402:	sub    eax,0x6fb39741
  42c407:	add    eax,0xebc896fb
  42c40c:	push   eax
  42c40d:	pusha  
  42c40e:	shr    BYTE PTR [edx+ebp*8],0x89
  42c412:	add    eax,0xc0563377
  42c417:	test   eax,0x77571bf
  42c41c:	xor    esi,DWORD PTR [esp+edi*1-0x1addfce]
  42c423:	mov    edi,0xa88e11a
  42c428:	enter  0x3ddb,0xeb
  42c42c:	into   
  42c42d:	pusha  
  42c42e:	enter  0x7375,0x61
  42c432:	shl    BYTE PTR [ebp+0x5f],cl
  42c435:	pop    eax
  42c436:	inc    ebp
  42c437:	and    al,0xf
  42c439:	lahf   
  42c43a:	inc    ebp
  42c43b:	and    al,0x0
	...
  42c44d:	add    BYTE PTR [eax],al
  42c44f:	add    BYTE PTR [ebx],ch
  42c451:	fld    QWORD PTR [eax]
  42c453:	add    BYTE PTR [ebx],cl
  42c455:	xor    ecx,DWORD PTR [edi+0x8]
  42c458:	adc    BYTE PTR [edi],0x5
  42c45b:	push   eax
  42c45c:	aam    0xce
  42c45e:	or     al,0xe8
  42c460:	jmp    0x4742bac8
  42c465:	sbb    DWORD PTR ds:0xfc05e320,esp
  42c46b:	push   DWORD PTR [edx+esi*1]
  42c46e:	aam    0x8b
  42c470:	jne    0x42c4c7
  42c472:	sub    eax,0x8c4614f5
  42c477:	push   esp
  42c478:	(bad)  
  42c479:	in     al,0xf4
  42c47b:	out    0x89,eax
  42c47d:	adc    eax,0xffe7fb8e
  42c482:	std    
  42c483:	test   BYTE PTR [ebp-0xd],al
  42c486:	(bad)  
  42c487:	sti    
  42c488:	fistp  QWORD PTR [ebx-0x1e]
  42c48b:	pop    ss
  42c48c:	jp     0x42c49d
  42c48e:	adc    BYTE PTR [eax],al
  42c490:	bound  esp,QWORD PTR [edi]
  42c492:	xchg   ebp,eax
  42c493:	test   DWORD PTR [ebx+ecx*2+0x47],ebp
  42c497:	xchg   esi,ebp
  42c499:	mov    ds:0x4b6584e6,eax
  42c49e:	mov    BYTE PTR [esi+0x2429443c],0x82
  42c4a5:	ret    0x501c
  42c4a8:	fistp  QWORD PTR [esi-0x1e]
  42c4ab:	daa    
  42c4ac:	mov    eax,0xe5e82ec2
  42c4b1:	test   BYTE PTR ds:0x0,al
	...
  42c4c7:	add    cl,ah
  42c4c9:	jbe    0x42c4c5
  42c4cb:	mov    WORD PTR [esi+0x6865d8de],fs
  42c4d1:	repz xor al,0xfb
  42c4d4:	ja     0x42c4a8
  42c4d6:	idiv   BYTE PTR [edi]
  42c4d8:	bound  eax,QWORD PTR [ebx-0x3e]
  42c4db:	or     al,0xdf
  42c4dd:	imul   al
  42c4df:	pop    ds
  42c4e0:	cli    
  42c4e1:	fimul  WORD PTR [edi-0x3cbc0205]
  42c4e7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42c4e9:	lds    edi,FWORD PTR [edx+0x555b1c87]
  42c4ef:	hlt    
  42c4f0:	in     eax,0x5f
  42c4f2:	push   ss
  42c4f3:	xor    BYTE PTR [edi-0x3e],dl
  42c4f6:	(bad)  
  42c4f7:	cli    
  42c4f8:	pop    DWORD PTR [edx+0x25]
  42c4fb:	inc    esp
  42c4fc:	bound  esp,QWORD PTR [edi]
  42c4fe:	stc    
  42c4ff:	xor    DWORD PTR [eax+0x2],0x5
  42c503:	cmp    eax,0x3e8d960
  42c508:	bound  esp,QWORD PTR ds:0xf51e7e69
  42c50e:	repz fwait
  42c510:	dec    edi
  42c511:	push   eax
  42c512:	dec    ebx
  42c513:	xchg   edx,eax
  42c514:	dec    ebp
  42c515:	cdq    
  42c516:	mov    ds:0x6f143731,eax
  42c51b:	test   al,0x2f
  42c51d:	fwait
  42c51e:	in     al,dx
  42c51f:	add    eax,DWORD PTR ds:0x1736a4bd
  42c525:	pop    es
  42c526:	mov    ebx,0xfff51e80
  42c52b:	xor    eax,DWORD PTR [eax]
	...
  42c53d:	add    BYTE PTR [eax],al
  42c53f:	add    BYTE PTR [ecx+0x25],ch
  42c542:	int3   
  42c543:	das    
  42c544:	jp     0x42c53e
  42c546:	adc    BYTE PTR [edx-0x7fe113a7],dl
  42c54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c54d:	cmc    
  42c54e:	xlat   BYTE PTR ds:[ebx]
  42c54f:	jl     0x42c4ff
  42c551:	cmc    
  42c552:	fistp  DWORD PTR [ebx+0x3e82d34]
  42c558:	jmp    0x42c56e
  42c55a:	or     al,0x2c
  42c55c:	fistp  WORD PTR [eax-0x74830bab]
  42c562:	es jg  0x42c4fb
  42c565:	cmc    
  42c566:	out    dx,eax
  42c567:	fwait
  42c568:	js     0x42c598
  42c56a:	call   0xcfd3a172
  42c56f:	adc    ah,ch
  42c571:	sub    al,0xc
  42c573:	hlt    
  42c574:	jg     0x42c569
  42c576:	pop    esi
  42c577:	popf   
  42c578:	cwde   
  42c579:	push   esi
  42c57a:	mov    ds:0x185e2f18,eax
  42c57f:	fiadd  DWORD PTR [edi+0x184265b0]
  42c585:	pop    esi
  42c586:	xor    al,0xe8
  42c588:	jge    0x42c54b
  42c58a:	adc    BYTE PTR [ebx-0x3b9a5027],bh
  42c590:	push   edi
  42c591:	mov    BYTE PTR [eax],0xf
  42c594:	inc    edi
  42c595:	(bad)  [edx-0x4e]
  42c598:	and    eax,0xb6dc4af5
  42c59d:	cmp    DWORD PTR [esi+0x363b67a7],eax
  42c5a3:	lods   eax,DWORD PTR ds:[esi]
	...
  42c5b8:	mov    ebp,0x250f751f
  42c5bd:	xor    bl,al
  42c5bf:	add    esp,DWORD PTR [edi+0x6c186fc2]
  42c5c5:	out    0x5a,eax
  42c5c7:	ret    0xe6f2
  42c5ca:	push   edx
  42c5cb:	pop    esp
  42c5cc:	sub    dh,ch
  42c5ce:	sbb    al,0xb9
  42c5d0:	hlt    
  42c5d1:	add    al,0x25
  42c5d3:	add    ebp,ebp
  42c5d5:	sbb    al,0x25
  42c5d7:	mov    eax,ebp
  42c5d9:	sub    al,0x25
  42c5db:	icebp  
  42c5dc:	stc    
  42c5dd:	xor    eax,0x54f306f5
  42c5e2:	shl    DWORD PTR [ebp+0x54],0x58
  42c5e6:	inc    ebp
  42c5e7:	int    0x51
  42c5e9:	add    bh,cl
  42c5eb:	neg    bl
  42c5ed:	push   esi
  42c5ee:	dec    ebp
  42c5ef:	or     eax,0xd1d15686
  42c5f4:	mov    edx,0xa7e9012d
  42c5f9:	xchg   ecx,eax
  42c5fa:	xchg   BYTE PTR ds:0xb3e9070a,bl
  42c600:	out    dx,al
  42c601:	mov    dl,0xfa
  42c603:	ins    BYTE PTR es:[edi],dx
  42c604:	dec    ebp
  42c605:	cmc    
  42c606:	adc    al,0xc1
  42c608:	int3   
  42c609:	sub    DWORD PTR [ecx],eax
  42c60b:	jmp    0x479d348f
  42c610:	inc    ebp
  42c611:	push   es
  42c612:	jle    0x42c5b9
  42c614:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c615:	outs   dx,DWORD PTR ds:[esi]
  42c616:	add    eax,0xed562ce9
  42c61b:	push   0x0
	...
  42c62d:	add    BYTE PTR [eax],al
  42c62f:	add    BYTE PTR ds:0xef007eb2,al
  42c635:	fimul  WORD PTR [ecx+0x56]
  42c638:	push   edx
  42c639:	out    dx,al
  42c63a:	and    al,0x1c
  42c63c:	fs test bl,dl
  42c63f:	lea    ebx,[edi-0x3f]
  42c642:	push   ss
  42c643:	mov    eax,DWORD PTR [ecx+0x33]
  42c646:	pop    ebp
  42c647:	and    al,0x53
  42c649:	dec    ebp
  42c64a:	pop    ds
  42c64b:	jl     0x42c608
  42c64d:	fiadd  DWORD PTR [ecx+0x65006f0]
  42c653:	test   al,dl
  42c655:	fild   DWORD PTR [eax]
  42c657:	add    BYTE PTR [eax],dl
  42c659:	out    dx,al
  42c65a:	and    al,0x20
  42c65c:	(bad)  
  42c65d:	adc    eax,0x49db4c25
  42c662:	je     0x42c66c
  42c664:	lock jo 0x42c650
  42c667:	das    
  42c668:	inc    ebx
  42c669:	dec    ecx
  42c66a:	test   BYTE PTR [ebx-0x74e94949],0x98
  42c671:	xor    bl,BYTE PTR [ebp+0x24]
  42c674:	cmp    BYTE PTR [ebx],dh
  42c676:	push   ebp
  42c677:	and    al,0x1b
  42c679:	xor    eax,DWORD PTR [ebp+0x24]
  42c67c:	daa    
  42c67d:	push   edi
  42c67e:	ror    DWORD PTR [edi],0xc7
  42c681:	mov    cl,0x1
  42c683:	add    BYTE PTR [ebx+0x33],cl
  42c686:	leave  
  42c687:	imul   esi,edx,0xffffffa2
  42c68a:	sti    
  42c68b:	int    0xc2
  42c68d:	sbb    DWORD PTR ds:0x4ffbe24,esp
  42c693:	lea    eax,[eax]
	...
  42c6a5:	add    BYTE PTR [eax],al
  42c6a7:	add    BYTE PTR [ebp-0x5d],cl
  42c6aa:	mov    DWORD PTR [edi+eiz*2-0x43],ebx
  42c6ae:	sbb    DWORD PTR [edi+edx*2-0x3f],0xffffff83
  42c6b3:	inc    BYTE PTR [edx+0x651c2519]
  42c6b9:	pop    edx
  42c6ba:	mov    ebp,0xd57924
  42c6bf:	add    BYTE PTR [edx-0x40],ah
  42c6c2:	adc    dl,BYTE PTR [edx]
  42c6c4:	inc    esp
  42c6c5:	cmp    ecx,DWORD PTR [ecx-0x1401fdc]
  42c6cb:	inc    DWORD PTR [ecx+ebx*4+0x43]
  42c6cf:	xor    bl,cl
  42c6d1:	sti    
  42c6d2:	call   0x637833ea
  42c6d7:	add    BYTE PTR [edx-0x40],ah
  42c6da:	and    al,0x7f
  42c6dc:	out    dx,al
  42c6dd:	ror    DWORD PTR [eax-0x13f9e00],cl
  42c6e3:	jae    0x42c759
  42c6e5:	xchg   esi,eax
  42c6e6:	ja     0x42c66c
  42c6e8:	ds cmp al,0x5
  42c6eb:	add    BYTE PTR [edx-0x6a],ah
  42c6ee:	int    0x42
  42c6f0:	dec    edx
  42c6f1:	cmp    ecx,DWORD PTR [ecx+0x24]
  42c6f4:	push   esi
  42c6f5:	(bad)
  42c6f9:	sar    dh,0x8c
  42c6fc:	es xchg esp,eax
  42c6fe:	cs push eax
  42c700:	cld    
  42c701:	dec    BYTE PTR [eax+0x24]
  42c704:	xchg   edx,eax
  42c705:	fmul   DWORD PTR [eax-0x52d6162]
	...
  42c720:	ja     0x42c764
  42c722:	out    dx,eax
  42c723:	aas    
  42c724:	bound  edi,QWORD PTR [ecx]
  42c726:	dec    ecx
  42c727:	and    al,0x76
  42c729:	aaa    
  42c72a:	dec    ecx
  42c72b:	and    al,0x5a
  42c72d:	bnd jnp 0x42c774
  42c730:	xchg   dh,cl
  42c732:	mov    DWORD PTR ds:0x3eb0e2,edx
  42c738:	out    dx,eax
  42c739:	into   
  42c73a:	call   0xe941b26a
  42c73f:	cmp    esp,DWORD PTR ds:0x5d47e8f7
  42c745:	ret    0xfffe
  42c748:	or     cl,BYTE PTR [esi-0xb]
  42c74b:	add    BYTE PTR [edx-0x27],ah
  42c74e:	imul   eax,ebx,0x76
  42c751:	in     al,0xde
  42c753:	lea    esi,[ebp+ebx*8+0x5e]
  42c757:	aaa    
  42c758:	xchg   ch,cl
  42c75a:	ss jnp 0x42c706
  42c75d:	shl    DWORD PTR [esi+0x6facc992],0x47
  42c764:	jle    0x42c72b
  42c766:	pop    esi
  42c767:	aaa    
  42c768:	xchg   cl,bh
  42c76a:	pop    esi
  42c76b:	aas    
  42c76c:	jle    0x42c73b
  42c76e:	popw   ds
  42c770:	xchg   cl,dl
  42c772:	sbb    eax,0xec0253c
  42c777:	cmp    bl,BYTE PTR ds:0x1e7d0ebc
  42c77d:	cmc    
  42c77e:	fild   DWORD PTR [edx+0x4721ef7b]
	...
  42c798:	ds enter 0x9ae8,0x6e
  42c79d:	pusha  
  42c79e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c79f:	out    0x51,eax
  42c7a1:	pusha  
  42c7a2:	mov    esp,0xac604de7
  42c7a7:	out    0x49,eax
  42c7a9:	pop    eax
  42c7aa:	lods   al,BYTE PTR ds:[esi]
  42c7ab:	out    0x75,eax
  42c7ad:	out    dx,eax
  42c7ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c7af:	and    BYTE PTR [ebx],0xef
  42c7b2:	data16 (bad) 
  42c7b4:	xchg   esp,eax
  42c7b5:	bound  edx,QWORD PTR [edi+eiz*8-0x185b9d9b]
  42c7bc:	pop    ecx
  42c7bd:	lock pop ss
  42c7bf:	(bad)  
  42c7c0:	mov    bh,0xce
  42c7c2:	loop   0x42c751
  42c7c4:	sub    DWORD PTR [ecx+0x5c],ebx
  42c7c7:	call   0x480a120
  42c7cc:	mov    ch,0x25
  42c7ce:	fistp  QWORD PTR [eax+0x32]
  42c7d1:	pusha  
  42c7d2:	mov    dl,0x9c
  42c7d4:	je     0x42c806
  42c7d6:	call   0x1d3a3de
  42c7db:	bound  edi,QWORD PTR [eax+eax*8-0x501844c6]
  42c7e2:	mov    WORD PTR ds:0x33e8f3fa,?
  42c7e8:	inc    edi
  42c7e9:	fld    DWORD PTR [eax]
  42c7eb:	arpl   WORD PTR [ebx+0x5b325b0f],sp
  42c7f1:	mov    dh,0x5c
  42c7f3:	stos   DWORD PTR es:[edi],eax
  42c7f4:	pop    edx
  42c7f5:	fst    DWORD PTR [ecx+0x72]
  42c7f8:	fcom   DWORD PTR [ebp-0x38]
  42c7fb:	std    
	...
  42c810:	pop    edi
  42c811:	push   ebx
  42c812:	add    BYTE PTR [ebp-0x62],ah
  42c815:	and    al,0x69
  42c817:	sbb    dh,al
  42c819:	push   es
  42c81a:	xchg   BYTE PTR [ebx-0x6e],bl
  42c81d:	sti    
  42c81e:	jae    0x42c818
  42c820:	sbb    ebx,DWORD PTR [edx]
  42c822:	add    BYTE PTR ds:0x5052566,cl
  42c828:	ds es add edx,ebx
  42c82c:	pop    ebp
  42c82d:	sub    al,0xc0
  42c82f:	jmp    0x42c880
  42c831:	sbb    al,0x87
  42c833:	shl    ah,1
  42c835:	jmp    0x42c807
  42c837:	in     eax,0x68
  42c839:	or     BYTE PTR es:[eax],ch
  42c83c:	rcl    ah,0x62
  42c83f:	push   0xfffffff8
  42c841:	jmp    0xeb17b82b
  42c846:	mov    ecx,0x82664c5
  42c84b:	sub    BYTE PTR [eax],al
  42c84d:	(bad)  
  42c84e:	bound  ebp,QWORD PTR [edx-0x28]
  42c851:	out    0xe5,al
  42c853:	fbstp  TBYTE PTR [edx+ebp*8+0x26652599]
  42c85a:	adc    eax,0x62d603a8
  42c85f:	push   0xfffffffb
  42c861:	push   es
  42c862:	arpl   si,bx
  42c864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c865:	push   0x63
  42c867:	add    al,bh
  42c869:	pushw  es
  42c86b:	mov    bh,0xe9
  42c86d:	pop    ss
  42c86e:	loop   0x42c833
  42c870:	pop    DWORD PTR [ecx+0x7452]
	...
  42c886:	add    BYTE PTR [eax],al
  42c888:	or     BYTE PTR [edx-0x39],bl
  42c88b:	add    DWORD PTR [eax-0x6c],esi
  42c88e:	push   edi
  42c88f:	data16 jb 0x42c837
  42c892:	push   edi
  42c893:	ret    
  42c894:	mov    eax,0x5d086396
  42c899:	cs (bad) 
  42c89b:	push   edi
  42c89c:	test   BYTE PTR [eax+0x53e18b4e],bl
  42c8a2:	enter  0x5f74,0x2f
  42c8a6:	add    BYTE PTR [ebx+ecx*1+0x693346c3],al
  42c8ad:	in     al,0x81
  42c8af:	repnz inc edi
  42c8b1:	mov    dh,BYTE PTR [ebp+0x5]
  42c8b4:	mov    eax,ds:0x92eb56d8
  42c8b9:	call   0x3c0a:0x51ad7523
  42c8c0:	(bad)  
  42c8c1:	fmul   QWORD PTR [esi]
  42c8c3:	imul   ebx,DWORD PTR [ecx-0x50],0x60
  42c8c7:	cwde   
  42c8c8:	popf   
  42c8c9:	pop    ecx
  42c8ca:	jecxz  0x42c8fc
  42c8cc:	fstp   st(1)
  42c8ce:	ror    BYTE PTR [edi],1
  42c8d0:	or     al,0x68
  42c8d2:	inc    eax
  42c8d3:	mov    cl,BYTE PTR [edx-0x66]
  42c8d6:	sub    bh,BYTE PTR [ebp+0x5d]
  42c8d9:	push   edx
  42c8da:	shl    DWORD PTR [eax+edi*1+0x59],0xc7
  42c8df:	add    eax,edx
  42c8e1:	jo     0x42c8d1
  42c8e3:	fld    st(0)
  42c8e5:	xchg   esp,eax
  42c8e6:	push   es
  42c8e7:	mov    bh,0x59
  42c8e9:	lods   eax,DWORD PTR ds:[esi]
  42c8ea:	scas   eax,DWORD PTR es:[edi]
  42c8eb:	leave  
	...
  42c900:	pop    edi
  42c901:	rol    DWORD PTR ds:0xbf29ea45,cl
  42c907:	pop    esi
  42c908:	bound  ebx,QWORD PTR [edx]
  42c90a:	jl     0x42c91f
  42c90c:	mov    ch,0x7f
  42c90e:	sar    BYTE PTR [edi-0x76df5788],cl
  42c914:	pop    ebp
  42c915:	clc    
  42c916:	and    eax,0x293791bf
  42c91b:	and    al,0x66
  42c91d:	ret    0x3f79
  42c920:	pop    esi
  42c921:	jmp    0x42c99c
  42c923:	cmp    al,0xda
  42c925:	es inc edx
  42c927:	ins    BYTE PTR es:[edi],dx
  42c928:	popa   
  42c929:	(bad)  
  42c92a:	sbb    al,0x87
  42c92c:	shl    BYTE PTR [esi],1
  42c92e:	xor    DWORD PTR [edx+esi*2],esp
  42c931:	xchg   eax,eax
  42c933:	aaa    
  42c934:	mov    dl,0xa9
  42c936:	cli    
  42c937:	mov    cs:0x1ef1cc56,al
  42c93d:	xchg   esp,eax
  42c93e:	out    0x0,al
  42c940:	ss (bad) 
  42c942:	jg     0x42c912
  42c944:	and    al,0xc7
  42c946:	jns    0x42c99f
  42c948:	push   edx
  42c949:	xlat   BYTE PTR ds:[ebx]
  42c94a:	xchg   BYTE PTR [ebx],cl
  42c94c:	int3   
  42c94d:	mov    cl,0xf7
  42c94f:	mov    cl,0x5e
  42c951:	stos   DWORD PTR es:[edi],eax
  42c952:	jl     0x42c958
  42c954:	push   0x66
  42c956:	inc    eax
  42c957:	cmp    BYTE PTR [esi-0x77],ah
  42c95a:	adc    edi,edx
  42c95c:	(bad)  
  42c95e:	add    eax,0x7ca279e7
  42c963:	add    al,BYTE PTR [eax]
	...
  42c975:	add    BYTE PTR [eax],al
  42c977:	add    al,bl
  42c979:	mov    edx,0x8ca5423c
  42c97e:	mov    dh,0x75
  42c980:	sub    BYTE PTR [esi],bh
  42c982:	mov    bl,0x7b
  42c984:	push   ebx
  42c985:	fs mov esi,0x2b48a540
  42c98b:	mov    esi,0xec85b26e
  42c990:	xchg   BYTE PTR [ecx-0x266e0002],dh
  42c996:	cmp    al,0x32
  42c998:	xchg   ecx,eax
  42c999:	push   esp
  42c99a:	pushf  
  42c99b:	fild   QWORD PTR [ecx-0x22fc1826]
  42c9a1:	mov    bl,0x5f
  42c9a3:	add    bl,bl
  42c9a5:	xor    eax,0x82dce80c
  42c9aa:	inc    DWORD PTR [edx+0x66]
  42c9ad:	fsub   DWORD PTR [esi-0x63]
  42c9b0:	push   ebp
  42c9b1:	(bad)  
  42c9b3:	(bad)  
  42c9b4:	repz mov al,ds:0xc431e02c
  42c9ba:	fwait
  42c9bb:	mov    bl,cl
  42c9bd:	mov    al,ds:0xa899e02c
  42c9c2:	mov    ecx,DWORD PTR [edx-0x2093abb7]
  42c9c8:	sub    edx,ebx
  42c9ca:	out    0x3,eax
  42c9cc:	mov    ecx,0x6a42aee0
  42c9d1:	fsub   DWORD PTR [esi+0x3c]
  42c9d4:	jae    0x42c9af
  42c9d6:	out    0x91,eax
  42c9d8:	fdivp  st(5),st
  42c9da:	mov    edi,0x4
	...
  42c9ef:	add    BYTE PTR [edx-0x27],ah
  42c9f2:	in     eax,0x7e
  42c9f4:	fdivp  st(5),st
  42c9f6:	mov    bh,0x4
  42c9f8:	(bad)  
  42c9f9:	fnstenv [eax+0x3f]
  42c9fc:	ds loope 0x42c9b2
  42c9ff:	in     eax,dx
  42ca00:	in     al,0x55
  42ca02:	or     al,0x30
  42ca04:	arpl   cx,bx
  42ca06:	out    0x78,eax
  42ca08:	es std 
  42ca0a:	mov    edi,0xbbfd067c
  42ca0f:	jl     0x42c9bf
  42ca11:	std    
  42ca12:	scas   eax,DWORD PTR es:[edi]
  42ca13:	jl     0x42c9f3
  42ca15:	cld    
  42ca16:	mov    bl,0x4
  42ca18:	(bad)  
  42ca19:	fldcw  WORD PTR [esi+0x77]
  42ca1c:	jle    0x42ca37
  42ca1e:	jmp    0x1962c26
  42ca23:	lods   al,BYTE PTR ds:[esi]
  42ca24:	popa   
  42ca25:	aam    0xb2
  42ca27:	sbb    DWORD PTR [esi-0x56eedad3],ebp
  42ca2d:	sub    eax,0x1d9e0525
  42ca32:	and    eax,0x250d991a
  42ca37:	cmc    
  42ca38:	out    0xae,al
  42ca3a:	jae    0x42ca32
  42ca3c:	loop   0x42c9f3
  42ca3e:	xor    ecx,ebp
  42ca40:	popa   
  42ca41:	aam    0xb2
  42ca43:	imul   eax,DWORD PTR [ebp+0x2c],0x3f
  42ca47:	jmp    0xd0c6c726
  42ca4c:	push   ebx
  42ca4d:	out    0x0,eax
  42ca4f:	out    dx,al
  42ca50:	xor    edx,DWORD PTR [esi]
  42ca52:	add    dh,ah
	...
  42ca68:	xor    ebx,DWORD PTR [esi]
  42ca6a:	jmp    DWORD PTR [edi-0x4efa2eff]
  42ca70:	fisub  WORD PTR ds:0x153919fe
  42ca76:	and    eax,0xb65cbac5
  42ca7b:	jmp    0xe1e2a3e1
  42ca80:	js     0x42ca9f
  42ca82:	add    DWORD PTR [eax+0x22],esi
  42ca85:	std    
  42ca86:	adc    BYTE PTR [esi+ebx*4-0x2d],ch
  42ca8a:	test   BYTE PTR [edx+0x7200d966],cl
  42ca90:	dec    ebx
  42ca91:	xor    DWORD PTR [esi],ebp
  42ca93:	sub    DWORD PTR [esi],esp
  42ca95:	push   edx
  42ca96:	inc    ebp
  42ca97:	or     eax,0xa4b2d43e
  42ca9c:	ins    DWORD PTR es:[edi],dx
  42ca9d:	push   eax
  42ca9e:	inc    ebp
  42ca9f:	int    0x45
  42caa1:	pusha  
  42caa2:	inc    edx
  42caa3:	in     eax,dx
  42caa4:	fcomp  DWORD PTR ds:0x1ad68125
  42caaa:	ins    DWORD PTR es:[edi],dx
  42caab:	ret    0x5120
  42caae:	inc    ebp
  42caaf:	add    BYTE PTR [edi],dl
  42cab1:	retf   
  42cab2:	add    DWORD PTR [edi+eiz*1+0x4b00001b],0x789c186
  42cabd:	xchg   DWORD PTR [esi-0x77],ebp
  42cac0:	outs   dx,DWORD PTR ds:[esi]
  42cac1:	mov    ecx,0x85c88b66
  42cac6:	ror    DWORD PTR [edi],0xf5
  42cac9:	out    dx,eax
  42caca:	add    ecx,DWORD PTR [ecx+0x0]
	...
  42cae0:	inc    edi
  42cae1:	mov    ecx,0xe7850f72
  42cae6:	inc    al
  42cae8:	sub    ah,BYTE PTR [ebx+0x8fcc803]
  42caee:	inc    esp
  42caef:	or     BYTE PTR [edx-0x477dad2],al
  42caf5:	fiadd  DWORD PTR [eax]
  42caf7:	sysexit 
  42caf9:	out    dx,eax
  42cafa:	std    
  42cafb:	shr    dl,0xa2
  42cafe:	add    ecx,eax
  42cb00:	inc    eax
  42cb01:	es and eax,0xdaba48
  42cb07:	cdq    
  42cb08:	nop
  42cb09:	pushf  
  42cb0a:	sar    al,1
  42cb0c:	inc    edx
  42cb0d:	out    0x24,al
  42cb0f:	jl     0x42cb51
  42cb11:	pop    ecx
  42cb12:	test   DWORD PTR [eax],eax
  42cb14:	mov    ebx,0x678487da
  42cb19:	pop    ebp
  42cb1a:	add    DWORD PTR [eax],eax
  42cb1c:	mov    esp,DWORD PTR ds:0xda7b987e
  42cb22:	add    BYTE PTR [ecx+0x86860f],cl
  42cb28:	mov    ebx,edx
  42cb2a:	mov    ecx,DWORD PTR [edi+eiz*2-0x3]
  42cb2e:	xchg   DWORD PTR [edi+eiz*2+0x7b000159],eax
  42cb35:	push   ecx
  42cb36:	push   ebp
  42cb37:	and    al,0x5b
  42cb39:	daa    
  42cb3a:	ror    DWORD PTR [edi],0x62
  42cb3d:	aas    
  42cb3e:	inc    ebx
  42cb3f:	sub    eax,0x87f9b062
	...
  42cb58:	jmp    0x42caeb
  42cb5a:	(bad)  
  42cb5b:	jmp    ecx
  42cb5d:	cld    
  42cb5e:	dec    DWORD PTR [eax-0x731d6b3a]
  42cb64:	xchg   edi,eax
  42cb65:	mov    bl,0xf9
  42cb67:	mov    cl,0x58
  42cb69:	xor    ecx,DWORD PTR [edx+eiz*2+0x1a23c6d]
  42cb70:	bound  esi,QWORD PTR [eax-0x787a0681]
  42cb76:	jp     0x42cb4a
  42cb78:	arpl   WORD PTR [eax+0x1bfb7efe],si
  42cb7e:	adc    DWORD PTR [edi-0x1f],ebp
  42cb81:	push   0x337c7420
  42cb86:	mov    WORD PTR [eax+0x6f],gs
  42cb89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb8a:	repz mov cl,0x2f
  42cb8d:	mov    cl,0xf3
  42cb8f:	mov    cl,0x1f
  42cb91:	mov    dl,0xc5
  42cb93:	loope  0x42cbef
  42cb95:	mov    ebx,0x48baffb6
  42cb9a:	(bad)  
  42cb9b:	(bad)  
  42cb9c:	mov    ebp,0x7e8477af
  42cba1:	int3   
  42cba2:	add    eax,DWORD PTR [eax]
  42cba4:	(bad)  
  42cba5:	lock xor al,0x2f
  42cba8:	mov    ds:0x9d522e6f,al
  42cbad:	dec    ebx
  42cbae:	loope  0x42cc0b
  42cbb0:	arpl   WORD PTR [eax+0x6e9986fe],si
  42cbb6:	xor    DWORD PTR [esi+edi*1+0x57c],0x0
	...
  42cbce:	add    BYTE PTR [eax],al
  42cbd0:	(bad)  
  42cbd1:	out    0x50,eax
  42cbd3:	and    al,0x16
  42cbd5:	mov    cl,0xfe
  42cbd7:	jmp    FWORD PTR [ebp+0x2b]
  42cbda:	loope  0x42cc37
  42cbdc:	arpl   cx,bx
  42cbde:	out    0x3,eax
  42cbe0:	dec    edx
  42cbe1:	enter  0x8719,0x59
  42cbe5:	jmp    0x9ad8110a
  42cbea:	fstp   TBYTE PTR [edi-0x49]
  42cbed:	stc    
  42cbee:	out    0x3,eax
  42cbf0:	out    0x99,eax
  42cbf2:	je     0x42cbee
  42cbf4:	jbe    0x42cbb9
  42cbf6:	xrelease xchg BYTE PTR [ecx],ch
  42cbf9:	aad    0x64
  42cbfb:	sti    
  42cbfc:	inc    edi
  42cbfd:	(bad)  
  42cbff:	add    cl,BYTE PTR [esi+0x309d0bfd]
  42cc05:	fsub   st,st(7)
  42cc07:	add    ebx,DWORD PTR [ecx+0x6b]
  42cc0a:	xor    eax,0x2d6b5900
  42cc0f:	add    DWORD PTR [ebx],esp
  42cc11:	mov    eax,0xd925faf0
  42cc16:	xchg   ebp,eax
  42cc17:	retf   0xfdd1
  42cc1a:	pop    ds
  42cc1b:	add    eax,0xf824d962
  42cc20:	in     al,0x1c
  42cc22:	in     al,dx
  42cc23:	int3   
  42cc24:	xchg   ecx,eax
  42cc25:	dec    ecx
  42cc26:	jecxz  0x42cca0
  42cc28:	cmc    
  42cc29:	xlat   BYTE PTR ds:[ebx]
  42cc2a:	out    0x3,eax
  42cc2c:	fld    TBYTE PTR ds:0xa23cf3cc
  42cc32:	add    eax,0xf7
	...
  42cc47:	add    dh,bl
  42cc49:	and    al,0xe6
  42cc4b:	add    esp,DWORD PTR [edx+0x50]
  42cc4e:	and    ebx,esp
  42cc50:	xchg   edx,eax
  42cc51:	lahf   
  42cc52:	addr16 push es
  42cc54:	inc    edx
  42cc55:	fldcw  WORD PTR [esi-0x4b]
  42cc58:	jmp    0x42cc77
  42cc5a:	or     al,0xdc
  42cc5c:	ficom  DWORD PTR ds:0xe80be004
  42cc62:	outs   dx,BYTE PTR ds:[esi]
  42cc63:	xchg   ebx,eax
  42cc64:	in     eax,0xb2
  42cc66:	jmp    0x42ccb5
  42cc68:	push   0x2f7f00d4
  42cc6d:	fidivr DWORD PTR [edi-0x372496b8]
  42cc73:	loop   0x42cc90
  42cc75:	sub    eax,0xfd64ea08
  42cc7a:	inc    ebx
  42cc7b:	shl    BYTE PTR [ecx+edi*8+0x7c],cl
  42cc7f:	push   es
  42cc80:	(bad)  
  42cc81:	xor    eax,0x35b8cd25
  42cc86:	and    eax,0x2515b8dd
  42cc8b:	int    0xae
  42cc8d:	sub    eax,0x1da8c125
  42cc92:	and    eax,0x36aa3311
  42cc97:	cs dec dh
  42cc9a:	mov    eax,DWORD PTR [edi]
  42cc9c:	pusha  
  42cc9d:	fld    DWORD PTR [eax]
  42cc9f:	(bad)  
  42cca0:	into   
  42cca1:	jmp    0x42cce4
  42cca3:	adc    DWORD PTR [esi+eax*1-0x74],ebp
  42cca7:	xor    DWORD PTR [eax+0x52],esp
  42ccaa:	dec    ebp
  42ccab:	or     eax,0x0
	...
  42ccc0:	(bad)  
  42ccc1:	cli    
  42ccc2:	push   ecx
  42ccc3:	add    eax,0xd5250d69
  42ccc8:	push   esp
  42ccc9:	jecxz  0x42ccc9
  42cccb:	cmp    BYTE PTR [ecx-0x43faeb60],dl
  42ccd1:	jecxz  0x42ccd3
  42ccd3:	xor    BYTE PTR [ecx+0x5e],bh
  42ccd6:	sar    esp,0xaf
  42ccd9:	pop    edx
  42ccda:	push   ebp
  42ccdb:	lds    ecx,FWORD PTR [ebp-0x491c4d32]
  42cce1:	imul   edi,DWORD PTR [edi],0x9b9a0e8
  42cce7:	repnz fldenv [ebx-0x2e5dd37]
  42ccee:	dec    eax
  42ccef:	call   0xddbea655
  42ccf4:	or     bl,BYTE PTR [eax]
  42ccf6:	or     eax,0x82896200
  42ccfb:	clts   
  42ccfd:	dec    ebp
  42ccfe:	add    BYTE PTR [eax],al
  42cd00:	jnp    0x42cd20
  42cd02:	jne    0x42cd28
  42cd04:	mov    edx,DWORD PTR [eax-0x5b02d7b1]
  42cd0a:	or     DWORD PTR [edi+ebx*1-0x51],0xffffffe3
  42cd0f:	mov    dl,0xc0
  42cd11:	loope  0x42cd37
  42cd13:	and    al,0xc0
  42cd15:	sbb    DWORD PTR ds:0x4d200a28,esp
  42cd1b:	and    al,0x1f
  42cd1d:	xchg   edx,eax
  42cd1e:	inc    edi
  42cd1f:	and    BYTE PTR [esp+ebp*1-0x43],al
  42cd23:	add    DWORD PTR [eax],eax
	...
  42cd35:	add    BYTE PTR [eax],al
  42cd37:	add    BYTE PTR [ebx],bh
  42cd39:	xlat   BYTE PTR ds:[ebx]
  42cd3a:	mov    ecx,DWORD PTR [eax+0x9]
  42cd3d:	and    BYTE PTR [ebp+0x24],cl
  42cd40:	fdivr  DWORD PTR [di]
  42cd43:	and    al,0x82
  42cd45:	loop   0x42cd6b
  42cd47:	sub    BYTE PTR [eax-0x6a],bh
  42cd4a:	sti    
  42cd4b:	dec    edi
  42cd4c:	pop    edx
  42cd4d:	pop    esp
  42cd4e:	adc    al,0x6c
  42cd50:	or     eax,0x52590117
  42cd55:	and    al,cl
  42cd57:	movd   DWORD PTR [edi],mm5
  42cd5a:	add    BYTE PTR [eax],al
  42cd5c:	retf   
  42cd5d:	and    DWORD PTR [ebp+0x24],eax
  42cd60:	mov    bl,0xad
  42cd62:	mov    al,0x8
  42cd64:	les    edx,FWORD PTR [ecx+eax*2]
  42cd67:	add    edx,edi
  42cd69:	ja     0x42cd74
  42cd6b:	or     esi,ebx
  42cd6d:	fld    st(7)
  42cd6f:	cmp    eax,DWORD PTR [edi-0x7e]
  42cd72:	inc    edx
  42cd73:	add    DWORD PTR [ebx+0x400c7bd6],edi
  42cd79:	in     eax,0xc
  42cd7b:	cmp    DWORD PTR [edi+0x25],edi
  42cd7e:	push   es
  42cd7f:	lea    ecx,[edx]
  42cd81:	xlat   BYTE PTR ds:[ebx]
  42cd82:	add    BYTE PTR [eax],al
  42cd84:	bound  esi,QWORD PTR [edi]
  42cd86:	cmp    ah,BYTE PTR [esi+edi*1]
  42cd89:	jo     0x42ce02
  42cd8b:	je     0x42cdd3
  42cd8d:	xor    BYTE PTR [edi+0x44],0x3e
  42cd91:	fadd   st(7),st
  42cd93:	inc    edx
  42cd94:	inc    edx
  42cd95:	mov    ebx,0xb0635c73
  42cd9a:	inc    BYTE PTR [esi+0x0]
	...
  42cdb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cdb1:	xchg   esp,eax
  42cdb2:	(bad)  
  42cdb3:	xchg   BYTE PTR [esi-0x10192d64],ah
  42cdb9:	ss jge 0x42cd50
  42cdbc:	bound  esi,QWORD PTR [eax-0x54dd7b02]
  42cdc2:	jp     0x42cdeb
  42cdc4:	xor    al,0xa3
  42cdc6:	jle    0x42cdd3
  42cdc8:	hlt    
  42cdc9:	inc    esp
  42cdca:	cli    
  42cdcb:	or     ch,ah
  42cdcd:	jl     0x42cdca
  42cdcf:	rol    BYTE PTR [eax],0xa8
  42cdd2:	or     edx,eax
  42cdd4:	jmp    0x42cdc1
  42cdd6:	sub    BYTE PTR [ebx+eiz*8],ch
  42cdd9:	test   DWORD PTR [esi-0x5],edi
  42cddc:	bound  esi,QWORD PTR [eax-0x4ecb7bf1]
  42cde2:	(bad)  
  42cde3:	(bad)  
  42cde4:	jmp    0x62436723
  42cde9:	mov    al,0x3b
  42cdeb:	push   eax
  42cdec:	pop    esi
  42cded:	add    DWORD PTR [edx-0x14f9cdd],0xffffff88
  42cdf4:	dec    esi
  42cdf5:	pushf  
  42cdf6:	push   cs
  42cdf7:	jg     0x42cdc4
  42cdf9:	ror    BYTE PTR ds:0xfeb15985,cl
  42cdff:	jmp    ecx
  42ce01:	fisub  DWORD PTR [eax+eax*1]
  42ce04:	jmp    0xa4c9fad3
  42ce09:	cmp    cl,bl
  42ce0b:	and    edi,DWORD PTR [edx+0x39]
  42ce0e:	leave  
  42ce0f:	and    eax,DWORD PTR [esi-0x27]
  42ce12:	loope  0x42ce48
	...
  42ce28:	(bad)  [esp+eax*1]
  42ce2b:	xor    ch,ah
  42ce2d:	mov    al,0xe3
  42ce2f:	mov    ecx,0xc691d25c
  42ce34:	bound  ebx,QWORD PTR [eax-0x6ea2f3b7]
  42ce3a:	call   DWORD PTR [ecx-0xa]
  42ce3d:	iret   
  42ce3e:	out    0xda,al
  42ce40:	inc    ecx
  42ce41:	sbb    al,0xef
  42ce43:	bnd jge 0x42ce63
  42ce46:	or     ecx,DWORD PTR [ebp-0x713c0a3a]
  42ce4c:	mov    esi,0x9e8ef3f5
  42ce51:	cmc    
  42ce52:	ret    
  42ce53:	mov    WORD PTR [esi+0x3036cff5],ss
  42ce59:	in     eax,0xa2
  42ce5b:	and    ebx,DWORD PTR [ecx+0x4e]
  42ce5e:	xor    al,BYTE PTR [edx+eiz*2]
  42ce61:	fstp   DWORD PTR [esi+0x4e]
  42ce64:	push   ebp
  42ce65:	or     BYTE PTR [eax],dl
  42ce67:	cli    
  42ce68:	lods   eax,DWORD PTR ds:[esi]
  42ce69:	pop    esp
  42ce6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce6b:	add    eax,0x1c0c05db
  42ce70:	cmp    eax,0xae8d0410
  42ce75:	cmc    
  42ce76:	adc    edx,DWORD PTR [ecx-0x29e8245d]
  42ce7c:	call   0xa25d1247
  42ce81:	fst    DWORD PTR [eax]
  42ce83:	fucom  st(6)
  42ce85:	cdq    
  42ce86:	sbb    eax,0xc40ddd35
  42ce8b:	das    
	...
  42cea0:	pop    ecx
  42cea1:	addr16 jmp 0xe94ddeb9
  42cea7:	inc    esp
  42cea8:	ret    0xeed1
  42ceab:	push   ebx
  42ceac:	fstp   QWORD PTR [eax+0x54]
  42ceaf:	add    esp,DWORD PTR [edx-0x27]
  42ceb2:	add    dl,al
  42ceb4:	xchg   ecx,eax
  42ceb5:	fdivr  st(1),st
  42ceb7:	xchg   ebx,eax
  42ceb8:	jl     0x42ce49
  42ceba:	aas    
  42cebb:	jo     0x42ce6a
  42cebd:	cld    
  42cebe:	adc    dh,ch
  42cec0:	ficomp DWORD PTR [ebx+0x1]
  42cec3:	jmp    0x5982729
  42cec8:	pop    esi
  42cec9:	call   0x6bbbe017
  42cece:	xchg   BYTE PTR [ebp-0x627a0abb],ah
  42ced4:	cmp    eax,0x256040f1
  42ced9:	cld    
  42ceda:	and    al,0xe2
  42cedc:	sub    al,al
  42cede:	jnp    0x42ce94
  42cee0:	repnz push ss
  42cee2:	call   FWORD PTR [edi+0x15]
  42cee5:	cld    
  42cee6:	sub    al,0xea
  42cee8:	sbb    ah,bh
  42ceea:	xchg   DWORD PTR [ebp-0x54740e83],ebx
  42cef0:	or     DWORD PTR [bx+si-0xa],edx
  42cef4:	dec    ebp
  42cef5:	sub    eax,0x261a913
  42cefa:	pop    eax
  42cefb:	ins    BYTE PTR es:[edi],dx
  42cefc:	sahf   
  42cefd:	xor    esi,DWORD PTR es:[edx+0x2a]
  42cf01:	cld    
  42cf02:	sub    dh,ah
	...
  42cf18:	retf   
  42cf19:	sahf   
  42cf1a:	or     edx,DWORD PTR [edi-0x364026d4]
  42cf20:	data16 fmul st,st(0)
  42cf23:	jb     0x42cf00
  42cf25:	inc    esp
  42cf26:	add    ecx,ebp
  42cf28:	popa   
  42cf29:	clc    
  42cf2a:	dec    eax
  42cf2b:	in     eax,0x5a
  42cf2d:	adc    BYTE PTR [esi],0xb0
  42cf30:	mov    eax,ds:0x71c54d50
  42cf35:	sub    DWORD PTR es:[edx-0x66],esp
  42cf39:	sti    
  42cf3a:	and    al,0x62
  42cf3c:	xchg   edx,eax
  42cf3d:	sti    
  42cf3e:	sub    al,0x0
  42cf40:	mov    edx,DWORD PTR [ebp+eax*2+0x24]
  42cf44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf45:	fdivr  QWORD PTR ds:0x665af20
  42cf4b:	mov    dh,0x7e
  42cf4d:	fadd   QWORD PTR ds:0xbfd5c6b6
  42cf53:	loope  0x42cee8
  42cf55:	int3   
  42cf56:	enter  0x81eb,0xe4
  42cf5a:	rol    BYTE PTR [eax+0x2],0x91
  42cf5e:	push   ds
  42cf5f:	adc    BYTE PTR [ecx+0x120357d4],dl
  42cf65:	push   esi
  42cf66:	jge    0x42cf8c
  42cf68:	mov    ebx,ebx
  42cf6a:	add    eax,0xbeea85
  42cf6f:	add    bl,cl
  42cf71:	sahf   
  42cf72:	cli    
  42cf73:	push   ebx
  42cf74:	cmp    al,0x57
  42cf76:	mov    ds,WORD PTR ds:0x33e7db3b
	...
  42cf90:	dec    ecx
  42cf91:	fild   DWORD PTR [eax]
  42cf93:	pcmpeqw mm0,QWORD PTR [esi-0x698af0ff]
  42cf9a:	cld    
  42cf9b:	rcr    BYTE PTR [ecx-0x33],0x1
  42cf9f:	rol    BYTE PTR [edx+0xb008540],1
  42cfa5:	fisttp DWORD PTR [ebx+0x45540904]
  42cfab:	and    al,0x7
  42cfad:	fidivr WORD PTR ds:0x29ccaf14
  42cfb3:	ror    BYTE PTR [ebx+0x52],0x3e
  42cfb7:	cmp    BYTE PTR [edx],dl
  42cfb9:	aam    0xfa
  42cfbb:	(bad)  
  42cfbc:	sti    
  42cfbd:	dec    ebp
  42cfbe:	adc    BYTE PTR ds:[eax-0x77],al
  42cfc2:	push   es
  42cfc3:	sub    ecx,DWORD PTR [ecx]
  42cfc5:	dec    esi
  42cfc6:	push   ebp
  42cfc7:	and    al,0xd7
  42cfc9:	dec    ebp
  42cfca:	add    eax,0x2396281
  42cfcf:	xchg   ecx,eax
  42cfd0:	jmp    0xa9c9e0cc
  42cfd5:	mov    edx,ecx
  42cfd7:	addr16 fucomi st,st(4)
  42cfda:	xchg   esp,eax
  42cfdb:	add    al,0x6b
  42cfdd:	cld    
  42cfde:	and    DWORD PTR [eax+0x63],ecx
  42cfe1:	mov    al,0xfe
  42cfe3:	or     ah,ch
  42cfe5:	push   ss
  42cfe6:	(bad)  
  42cfe7:	jmp    DWORD PTR [edx+0x2d]
  42cfea:	(bad)  
  42cfeb:	std    
  42cfec:	jp     0x42cf92
  42cfee:	(bad)  
  42cfef:	jmp    DWORD PTR [edx+0x3b]
  42cff2:	mov    cl,0x94
	...
  42d008:	bound  esi,QWORD PTR [eax-0x50807b02]
  42d00e:	xor    bh,0x44
  42d011:	mov    al,0xfe
  42d013:	cmp    bh,dl
  42d015:	mov    ah,0x11
  42d017:	test   DWORD PTR [eax-0x2a],edx
  42d01a:	add    al,0x0
  42d01c:	fnstenv [esi+edi*8-0x78]
  42d020:	fstp   QWORD PTR [ebx]
  42d022:	(bad)  
  42d023:	jmp    DWORD PTR [edx+0x3b]
  42d026:	ret    
  42d027:	mov    db2,eax
  42d02a:	add    edx,DWORD PTR [eax+0x2d]
  42d02d:	and    eax,0xb4adfb0a
  42d032:	adc    DWORD PTR ds:0xffbe8692,0x8718ece8
  42d03c:	jg     0x42cfe6
  42d03e:	lea    eax,[esi+edi*1+0x620003dc]
  42d045:	cmp    ecx,ecx
  42d047:	and    ebx,DWORD PTR [esi-0x24f3b6cd]
  42d04d:	xor    ebp,DWORD PTR [ecx]
  42d04f:	push   eax
  42d050:	arpl   WORD PTR [eax-0x4f1b1702],si
  42d056:	(bad)  
  42d057:	jmp    DWORD PTR [ebp-0x27]
  42d05a:	pop    ecx
  42d05b:	leave  
  42d05c:	bound  edx,QWORD PTR [eax+0x64]
  42d05f:	sub    BYTE PTR [edx],dh
  42d061:	fsub   st,st(7)
  42d063:	add    eax,DWORD PTR [ebx+ebx*8+0x2f]
  42d067:	add    ecx,edx
  42d069:	dec    edi
  42d06a:	adc    al,0x28
	...
  42d080:	dec    esi
  42d081:	mov    al,0x3b
  42d083:	jp     0x42d02e
  42d085:	popf   
  42d086:	pop    edi
  42d087:	mov    BYTE PTR [esi-0x3],al
  42d08a:	call   0x715c3292
  42d08f:	enter  0xc541,0xb7
  42d093:	aad    0x33
  42d095:	sahf   
  42d096:	pushf  
  42d097:	sub    BYTE PTR [esi],bl
  42d099:	fsub   st,st(7)
  42d09b:	add    esp,edi
  42d09d:	add    esp,edi
  42d09f:	(bad)  
  42d0a0:	push   0x62e00464
  42d0a5:	(bad)  
  42d0a7:	jle    0x42d0bf
  42d0a9:	test   BYTE PTR [ebx-0x47269dfc],0x8a
  42d0b0:	and    eax,0x4979f9b2
  42d0b5:	popf   
  42d0b6:	xlat   BYTE PTR ds:[ebx]
  42d0b7:	dec    esp
  42d0b8:	mov    ds:0x6df828e0,eax
  42d0bd:	fsubrp st(0),st
  42d0bf:	jg     0x42d0ea
  42d0c1:	popf   
  42d0c2:	je     0x42d0f8
  42d0c4:	fistp  WORD PTR [ecx-0x44a0f584]
  42d0ca:	jmp    0x42d14a
  42d0cc:	sbb    ebp,ecx
  42d0ce:	ins    BYTE PTR es:[edi],dx
  42d0cf:	push   es
  42d0d0:	push   0xd00ee7d9
  42d0d5:	push   cs
  42d0d6:	jmp    0xe65980e9
  42d0db:	inc    esp
  42d0dc:	add    edx,edx
  42d0de:	out    dx,al
  42d0df:	dec    ebx
  42d0e0:	in     eax,dx
  42d0e1:	mov    cl,0x68
	...
  42d0f7:	add    BYTE PTR [edx+0x5],ah
  42d0fa:	add    DWORD PTR [edi+edi*2],edi
  42d0fd:	push   esp
  42d0fe:	lea    eax,ds:0xe900d99e
  42d104:	fcom   DWORD PTR ds:0x3e38f525
  42d10a:	xchg   BYTE PTR [esi],ch
  42d10c:	mov    dh,0x51
  42d10e:	test   ebp,eax
  42d110:	mov    eax,ds:0x38e900d9
  42d115:	pushf  
  42d116:	das    
  42d117:	mov    al,0x9e
  42d119:	sbb    al,0x7c
  42d11b:	jmp    0x7cc7a0da
  42d120:	dec    edx
  42d121:	fld    DWORD PTR [eax]
  42d123:	ins    DWORD PTR es:[edi],dx
  42d124:	(bad)  
  42d126:	pop    eax
  42d127:	call   0x6c4caa8d
  42d12c:	add    dl,0x0
  42d12f:	jmp    0xe88f3898
  42d134:	pop    esp
  42d135:	addr16 inc esp
  42d137:	jmp    0x42d157
  42d139:	mov    edx,0x9ca9e209
  42d13e:	jmp    0x551c33ac
  42d143:	popf   
  42d144:	mov    eax,0x61698254
  42d149:	fld    DWORD PTR [eax]
  42d14b:	pusha  
  42d14c:	in     eax,0xf4
  42d14e:	dec    eax
  42d14f:	call   0x582aaab5
  42d154:	popa   
  42d155:	fld    DWORD PTR [eax]
  42d157:	jb     0x42d136
  42d159:	hlt    
  42d15a:	pop    esp
  42d15b:	call   0x42d160
	...
  42d170:	popa   
  42d171:	fld    DWORD PTR [eax+0x60]
  42d174:	sbb    eax,0x343914f8
  42d179:	or     bh,dl
  42d17b:	xchg   ebp,eax
  42d17c:	cmp    bh,ch
  42d17e:	(bad)  
  42d17f:	call   0xea971fe5
  42d184:	push   cs
  42d185:	lahf   
  42d186:	mov    ch,0x0
  42d188:	pop    edi
  42d189:	mov    ecx,0x1cfb0001
  42d18e:	mov    ch,0x24
  42d190:	ja     0x42d16a
  42d192:	add    BYTE PTR [eax],al
  42d194:	jp     0x42d1e8
  42d196:	ret    0x8ee8
  42d199:	and    dh,dh
  42d19b:	jmp    FWORD PTR [eax+0x93b3b09]
  42d1a1:	into   
  42d1a2:	test   BYTE PTR [esi-0x62],bh
  42d1a5:	xlat   BYTE PTR ds:[ebx]
  42d1a6:	add    BYTE PTR ds:0xfff61bc2,bh
  42d1ac:	mov    ah,0x53
  42d1ae:	push   0x25
  42d1b0:	mov    edx,edi
  42d1b2:	cmp    ebx,DWORD PTR [edi+eax*1]
  42d1b5:	push   ds
  42d1b6:	div    BYTE PTR [esp+eax*2-0x24]
  42d1ba:	adc    esp,edi
  42d1bc:	and    al,0x1e
  42d1be:	jne    0x42d1f8
  42d1c0:	push   esi
  42d1c1:	mov    edi,0xa124fffc
  42d1c6:	xor    DWORD PTR [ebp+0x3d03a13b],eax
  42d1cc:	test   DWORD PTR [ebx],ebx
  42d1ce:	idiv   bh
  42d1d0:	inc    esp
  42d1d1:	push   esp
  42d1d2:	daa    
  42d1d3:	sbb    eax,0x0
	...
  42d1e8:	dec    ebx
  42d1e9:	xlat   BYTE PTR ds:[ebx]
  42d1ea:	add    eax,0x5d816b6
  42d1ef:	mov    dh,0xfe
  42d1f1:	fdivr  DWORD PTR [edi-0x372dbc1f]
  42d1f7:	add    esp,DWORD PTR [edx+0x55]
  42d1fa:	jl     0x42d1fc
  42d1fc:	iret   
  42d1fd:	mov    ds:0xf1b78b1c,eax
  42d202:	inc    eax
  42d203:	add    DWORD PTR [ebx],ecx
  42d205:	xlat   BYTE PTR ds:[ebx]
  42d206:	add    DWORD PTR [edi+ebx*1-0x3d],0x651480e1
  42d20e:	dec    esp
  42d20f:	add    esp,esi
  42d211:	fs inc esp
  42d213:	add    ah,BYTE PTR [edx+0x71]
  42d216:	pop    edi
  42d217:	or     BYTE PTR [ecx+0x78],ch
  42d21a:	add    ecx,ebp
  42d21c:	loop   0x42d233
  42d21e:	add    eax,0x82876e54
  42d223:	xchg   esp,eax
  42d224:	xchg   al,cl
  42d226:	std    
  42d227:	jmp    DWORD PTR [edx+0x7b]
  42d22a:	adc    ebp,0xffffff86
  42d22d:	mov    al,0xfe
  42d22f:	jle    0x42d1d0
  42d231:	scas   eax,DWORD PTR es:[edi]
  42d232:	xchg   DWORD PTR [esi+eax*4-0x5c],ebp
  42d236:	addr16 ds mov ebx,0xf40b7d4b
  42d23d:	in     eax,0xfd
  42d23f:	or     ch,ah
  42d241:	cmc    
  42d242:	inc    al
  42d244:	cmp    DWORD PTR [eax+0x4949c809],0x39
  42d24b:	pop    ebx
	...
  42d260:	cli    
  42d261:	mov    ds:0xb03ee380,al
  42d266:	(bad)  
  42d267:	ss sbb eax,0xebd2f188
  42d26d:	imul   esi,esi,0xffffffe6
  42d270:	nop
  42d271:	push   ecx
  42d272:	neg    BYTE PTR [eax+0x1e]
  42d275:	mov    al,0x87
  42d277:	inc    esp
  42d278:	xchg   BYTE PTR [eax+0x3465c083],al
  42d27e:	mov    esp,0x89b06200
  42d283:	dec    ebx
  42d284:	mov    edx,0xeb403e7f
  42d289:	sub    esp,DWORD PTR [edx]
  42d28b:	nop
  42d28c:	bound  esi,QWORD PTR [eax+0x6cf40afe]
  42d292:	dec    DWORD PTR [eax+0x9293de]
  42d298:	bound  esi,QWORD PTR [eax+0x39664389]
  42d29e:	and    BYTE PTR [edx+ebp*8],0xd8
  42d2a2:	out    0x3,eax
  42d2a4:	bound  ecx,QWORD PTR [esi+0x23]
  42d2a7:	call   0x80a46af0
  42d2ac:	ds jns 0x42d297
  42d2af:	add    esp,DWORD PTR [edx+0x4e]
  42d2b2:	ins    BYTE PTR es:[edi],dx
  42d2b3:	and    BYTE PTR [edx-0x7afc1828],ah
  42d2b9:	cwde   
  42d2ba:	popa   
  42d2bb:	cmp    BYTE PTR [esi+0x75],0xe8
  42d2bf:	add    esp,DWORD PTR [edx+0x50]
  42d2c2:	je     0x42d2e4
	...
  42d2d8:	out    0xd8,al
  42d2da:	out    0x3,eax
  42d2dc:	in     eax,0x95
  42d2de:	mov    edi,0x1d636944
  42d2e3:	push   es
  42d2e4:	fist   DWORD PTR [esp+ecx*8-0x55]
  42d2e8:	(bad)  
  42d2e9:	(bad)  
  42d2eb:	or     dl,al
  42d2ed:	adc    esp,edi
  42d2ef:	inc    esp
  42d2f0:	adc    eax,0xffffffde
  42d2f3:	dec    ebx
  42d2f4:	pop    ecx
  42d2f5:	arpl   WORD PTR [ebp+0x44cdb00],bp
  42d2fb:	mov    esp,0xae7d962
  42d300:	mov    al,0xb
  42d302:	in     al,0x44
  42d304:	adc    eax,0xffffffee
  42d307:	dec    ebx
  42d308:	fst    QWORD PTR [esp+eax*1-0x34]
  42d30c:	(bad)  
  42d30d:	(bad)  
  42d30f:	pushf  
  42d310:	jge    0x42d2ad
  42d312:	sbb    DWORD PTR [ebx+ebx*8+0x5d],edi
  42d316:	int3   
  42d317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d318:	(bad)  
  42d319:	(bad)  
  42d31b:	mov    fs,ecx
  42d31d:	pop    ebp
  42d31e:	call   0x64a53526
  42d323:	and    dl,dh
  42d325:	(bad)  
  42d327:	add    ebx,ebp
  42d329:	pusha  
  42d32a:	pusha  
  42d32b:	add    al,0x62
  42d32d:	fld    DWORD PTR [eax]
  42d32f:	pusha  
  42d330:	jmp    0x8bd9:0x61e9bcbd
  42d337:	jne    0x42d39e
  42d339:	imul   eax,DWORD PTR [ecx],0xe9
	...
  42d34f:	add    BYTE PTR [ecx+0x62],ah
  42d352:	test   DWORD PTR ds:0xe900d9b2,ecx
  42d358:	push   0xe2d9252d
  42d35d:	cdq    
  42d35e:	or     ch,BYTE PTR [esi+0x76]
  42d361:	mov    esp,0x6168e900
  42d366:	in     al,dx
  42d367:	shl    BYTE PTR [ecx-0x27],cl
  42d36a:	jge    0x42d318
  42d36c:	arpl   WORD PTR [edx-0x6bc76005],ax
  42d372:	xchg   BYTE PTR [ebp+0x55],ch
  42d375:	xor    eax,0x1961e900
  42d37a:	mov    BYTE PTR ds:0x1d87ed82,dl
  42d380:	inc    edx
  42d381:	jmp    0xc585010d
  42d386:	push   eax
  42d387:	pop    ss
  42d388:	or     DWORD PTR [ebp+0x25],ecx
  42d38b:	lds    ebx,FWORD PTR [esi-0x27]
  42d38e:	add    BYTE PTR [edx+edx*4-0x69],ch
  42d392:	sti    
  42d393:	popf   
  42d394:	push   ebp
  42d395:	xor    eax,0x2c61e900
  42d39a:	cli    
  42d39b:	jge    0x42d3e2
  42d39d:	xor    eax,0x9461e900
  42d3a2:	mov    ch,0xd
  42d3a4:	cmp    bl,cl
  42d3a6:	add    cl,ch
  42d3a8:	ss pop edi
  42d3aa:	(bad)  
  42d3ab:	adc    ebp,edx
  42d3ad:	mov    edi,edx
  42d3af:	push   ds
  42d3b0:	je     0x42d354
  42d3b2:	inc    eax
  42d3b3:	rol    BYTE PTR [eax],cl
	...
  42d3c5:	add    BYTE PTR [eax],al
  42d3c7:	add    BYTE PTR [esi-0x5e9bcff3],bl
  42d3cd:	or     eax,0xf21e0006
  42d3d2:	cld    
  42d3d3:	call   FWORD PTR [edx+eiz*8]
  42d3d6:	adc    DWORD PTR [ecx+0xf00dc30],0x55
  42d3dd:	mov    eax,ds:0x57e50f01
  42d3e2:	cld    
  42d3e3:	shr    BYTE PTR [edx],0xe5
  42d3e6:	add    eax,ecx
  42d3e8:	or     BYTE PTR [ebx],al
  42d3ea:	cmp    DWORD PTR [ebp-0x5],0x701975a7
  42d3f1:	popa   
  42d3f2:	and    eax,0xdbca40
  42d3f7:	mov    eax,DWORD PTR [edi+0x1deb2cb9]
  42d3fd:	dec    si
  42d3ff:	jo     0x42d453
  42d401:	imul   esp,DWORD PTR ds:0xdbca40,0x9564c4eb
  42d40b:	and    al,0x7b
  42d40d:	fadd   QWORD PTR [eax]
  42d40f:	add    BYTE PTR [ecx],dh
  42d411:	pop    eax
  42d412:	cli    
  42d413:	cmp    edi,DWORD PTR [esi-0x77]
  42d416:	add    bh,BYTE PTR [edi+esi*2]
  42d419:	loop   0x42d39e
  42d41b:	jnp    0x42d3b5
  42d41d:	fild   DWORD PTR [eax]
  42d41f:	pmulhw mm3,QWORD PTR [edi+0x57d50f01]
  42d426:	cld    
  42d427:	shr    BYTE PTR [edx],0xe5
  42d42a:	add    eax,ecx
	...
  42d440:	js     0x42d444
  42d442:	cmp    DWORD PTR [ebp+0x7b],0xcbeb6ea7
  42d449:	mov    ?,edx
  42d44b:	push   esp
  42d44c:	rcr    BYTE PTR [eax-0x7f],0x0
  42d450:	cmp    ebx,ebx
  42d452:	sbb    DWORD PTR [edi-0x19],0xf3248563
  42d459:	fild   DWORD PTR [eax]
  42d45b:	add    BYTE PTR [edx+0x7f],ah
  42d45e:	jp     0x42d494
  42d460:	sub    al,0xe8
  42d462:	ja     0x42d49b
  42d464:	xchg   BYTE PTR [esi+ecx*1+0x78aae60b],ah
  42d46b:	sti    
  42d46c:	adc    eax,0xdafec1fe
  42d471:	je     0x42d48d
  42d473:	sub    al,0xe2
  42d475:	mov    ecx,0x87517515
  42d47a:	mov    al,0x45
  42d47c:	pop    esi
  42d47d:	add    ebx,DWORD PTR [edx-0x17e6ddc]
  42d483:	(bad)  
  42d484:	jmp    0xfe81:0x32247a89
  42d48b:	(bad)  
  42d48c:	jmp    0x639eee95
  42d491:	cmp    dh,0x3f
  42d494:	loop   0x42d453
  42d496:	add    al,0x53
  42d498:	adc    al,BYTE PTR [edi-0x7fa48a85]
  42d49e:	(bad)  
  42d49f:	push   ecx
  42d4a0:	lods   eax,DWORD PTR ds:[esi]
  42d4a1:	sub    al,0x1a
  42d4a3:	pop    esp
	...
  42d4b8:	arpl   WORD PTR [eax-0x63290502],ax
  42d4be:	rol    BYTE PTR [eax],cl
  42d4c0:	bound  eax,QWORD PTR [eax-0x6329052f]
  42d4c6:	rol    BYTE PTR [eax],cl
  42d4c8:	bound  eax,QWORD PTR [eax+0x5446b479]
  42d4ce:	(bad)  
  42d4cf:	jmp    DWORD PTR [edx+0x52]
  42d4d2:	(bad)  
  42d4d3:	rcr    ecx,1
  42d4d5:	mov    ebx,0x1f6ca365
  42d4da:	jns    0x42d461
  42d4dc:	and    al,BYTE PTR [edi-0x7f875185]
  42d4e2:	inc    BYTE PTR [esi-0x76ef2342]
  42d4e8:	push   cs
  42d4e9:	fxch   st(3)
  42d4eb:	(bad)  [edx-0x27]
  42d4ee:	out    0x6a,eax
  42d4f0:	call   0x5946bce7
  42d4f5:	dec    edi
  42d4f6:	popf   
  42d4f7:	add    bl,BYTE PTR [ecx+0x4f]
  42d4fa:	lods   eax,DWORD PTR ds:[esi]
  42d4fb:	add    eax,0xcf07823
  42d500:	sub    bl,dl
  42d502:	add    BYTE PTR [ebx-0x106c2671],al
  42d508:	cld    
  42d509:	jg     0x42d494
  42d50b:	jns    0x42d506
  42d50d:	xchg   ebp,eax
  42d50e:	outs   dx,DWORD PTR ds:[esi]
  42d50f:	cmp    BYTE PTR [esi],0x35
  42d512:	jmp    0x285f371a
  42d517:	aam    0x93
  42d519:	xchg   esi,eax
  42d51a:	jl     0x42d53c
	...
  42d530:	ds fsub st,st(7)
  42d533:	add    ebx,ebp
  42d535:	stos   DWORD PTR es:[edi],eax
  42d536:	mov    bl,0xb0
  42d538:	xchg   BYTE PTR ds:0x2e6203e9,dh
  42d53e:	mov    ds:0xe93586b0,eax
  42d543:	add    esp,DWORD PTR [edx-0x6a]
  42d546:	pop    esp
  42d547:	and    BYTE PTR [esi],cl
  42d549:	fsub   st,st(7)
  42d54b:	add    edx,DWORD PTR [ebx]
  42d54d:	bound  ebp,QWORD PTR [edi+0x7b8f5d6c]
  42d553:	ja     0x42d534
  42d555:	cwde   
  42d556:	jecxz  0x42d4d8
  42d558:	sbb    bl,dh
  42d55a:	out    0x3,eax
  42d55c:	pop    ecx
  42d55d:	dec    edi
  42d55e:	mov    ch,0x4
  42d560:	imul   ecx,DWORD PTR [edi-0x5b],0xe077a301
  42d567:	or     bl,BYTE PTR [edx-0x187bbf27]
  42d56d:	fcomp  DWORD PTR [ebx-0x517cbb11]
  42d573:	js     0x42d5ce
  42d575:	xchg   ebp,eax
  42d576:	add    DWORD PTR [esi+ebx*8-0x2732dafb],ebp
  42d57d:	scas   al,BYTE PTR es:[edi]
  42d57e:	or     bl,BYTE PTR [edi+0x28]
  42d581:	fimul  DWORD PTR [ecx]
  42d583:	push   edi
  42d584:	and    BYTE PTR [edi-0x23a1f73f],dl
  42d58a:	enter  0x8eea,0x59
  42d58e:	aaa    
  42d58f:	popf   
  42d590:	or     eax,0x658681
	...
  42d5a5:	add    BYTE PTR [eax],al
  42d5a7:	add    BYTE PTR [edx+0x35],al
  42d5aa:	add    cl,ch
  42d5ac:	popa   
  42d5ad:	sbb    DWORD PTR [ecx-0x69],edx
  42d5b0:	mov    WORD PTR [ebp+0x25],cs
  42d5b3:	inc    ebp
  42d5b4:	fld    DWORD PTR [bx+si]
  42d5b7:	push   0xffffffa3
  42d5b9:	xchg   esp,eax
  42d5ba:	sti    
  42d5bb:	popf   
  42d5bc:	dec    ebp
  42d5bd:	xor    eax,0x5c61e900
  42d5c2:	(bad)  
  42d5c3:	push   ds
  42d5c4:	push   ebp
  42d5c5:	dec    ebp
  42d5c6:	and    eax,0xd95f1d
  42d5cb:	mov    dh,0xfd
  42d5cd:	mov    ebp,0xd961e85c
  42d5d2:	stc    
  42d5d3:	pop    ebp
  42d5d4:	pop    ebp
  42d5d5:	xor    eax,0x8161e900
  42d5da:	retf   
  42d5db:	pushf  
  42d5dc:	xor    al,0x90
  42d5de:	test   BYTE PTR [ecx-0x1f27a1a4],ch
  42d5e4:	popa   
  42d5e5:	(bad)  
  42d5e7:	rol    DWORD PTR [edi],0x90
  42d5ea:	cli    
  42d5eb:	sub    al,0x65
  42d5ed:	inc    edi
  42d5ee:	dec    esp
  42d5ef:	call   0xeb871d50
  42d5f4:	es jp  0x42d600
  42d5f7:	repnz sub DWORD PTR [ecx+ebp*8+0x4e946a69],edx
  42d5ff:	aad    0xf8
  42d601:	or     edx,0xf60ba700
  42d607:	bswap  ebp
  42d609:	mov    eax,ds:0xf01
	...
  42d61e:	add    BYTE PTR [eax],al
  42d620:	int    0x99
  42d622:	cld    
  42d623:	rcr    BYTE PTR [edx-0x4f37fe20],0x29
  42d62a:	and    dl,cl
  42d62c:	mov    dl,0xa4
  42d62e:	push   ds
  42d62f:	adc    cl,al
  42d631:	fidivr DWORD PTR [ecx+eiz*2]
  42d634:	leave  
  42d635:	mov    bh,0x81
  42d637:	mov    WORD PTR [edi],gs
  42d639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d63a:	add    DWORD PTR [eax],eax
  42d63c:	or     ebx,DWORD PTR [edi+0x48]
  42d63f:	add    al,0x82
  42d641:	pushf  
  42d642:	push   ds
  42d643:	and    al,0x80
  42d645:	pop    esp
  42d646:	and    eax,0xd80a54
  42d64b:	mov    esi,edx
  42d64d:	pop    esi
  42d64e:	lea    esp,[edi+ebp*1]
  42d651:	fadd   DWORD PTR [eax]
  42d653:	add    BYTE PTR [eax],ah
  42d655:	fld    DWORD PTR [edi+0x3cb96f74]
  42d65b:	pop    eax
  42d65c:	les    edx,FWORD PTR [ebx]
  42d65e:	xor    al,0x1a
  42d660:	mov    ebx,0xa4593cd7
  42d665:	adc    ebp,DWORD PTR [edx+ebx*1]
  42d668:	retf   
  42d669:	xlat   BYTE PTR ds:[ebx]
  42d66a:	cmp    al,0x5a
  42d66c:	les    edx,FWORD PTR [ebx]
  42d66e:	and    al,0x1a
  42d670:	mov    ebx,0x845b3cd7
  42d675:	adc    ebx,DWORD PTR [edx+ebx*1]
  42d678:	mov    edx,edi
  42d67a:	cmp    al,0x5d
  42d67c:	test   BYTE PTR [ebx],dl
  42d67e:	adc    al,0x1a
  42d680:	jnp    0x42d659
  42d682:	cmp    al,0x5f
	...
  42d698:	(bad)  
  42d699:	fistp  QWORD PTR [edx+eiz*2]
  42d69c:	je     0x42d6b0
  42d69e:	scas   al,BYTE PTR es:[edi]
  42d69f:	add    BYTE PTR [ebx+0x62b605d7],cl
  42d6a5:	push   eax
  42d6a6:	add    DWORD PTR [edi-0x3eeb21e2],eax
  42d6ac:	inc    eax
  42d6ad:	mov    DWORD PTR ds:0x97ca2b2,eax
  42d6b3:	rcr    bl,1
  42d6b5:	xor    eax,DWORD PTR [ecx-0x7c7f9e00]
  42d6bb:	add    al,0x50
  42d6bd:	ja     0x42d67c
  42d6bf:	adc    esi,DWORD PTR [esi-0x5d3fce78]
  42d6c5:	stc    
  42d6c6:	mov    ebx,0x89ab3937
  42d6cb:	inc    ebx
  42d6cc:	jb     0x42d6d5
  42d6ce:	les    ecx,FWORD PTR [ebx]
  42d6d0:	dec    ecx
  42d6d1:	mov    esi,0xf7703481
  42d6d6:	add    BYTE PTR [ecx-0x78508325],al
  42d6dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d6dd:	mov    WORD PTR [ecx-0x133cb639],cs
  42d6e3:	gs (bad) 
  42d6e5:	stc    
  42d6e6:	shr    DWORD PTR [edi+0xdfa355e],0x3c
  42d6ed:	fld    DWORD PTR [eax-0x17ed5dc]
  42d6f3:	dec    DWORD PTR [ebp+0x76]
  42d6f6:	add    eax,0x2479f960
	...
  42d710:	sub    al,BYTE PTR [ecx+0x3e9fffe]
  42d716:	mov    al,BYTE PTR [eax]
  42d718:	bound  eax,QWORD PTR [eax-0x7381b379]
  42d71e:	jnp    0x42d6e9
  42d720:	push   ss
  42d721:	enter  0x5135,0x5e
  42d725:	(bad)  
  42d726:	rol    DWORD PTR [esi-0x6b83069d],0x62
  42d72d:	cmp    dh,0x86
  42d730:	and    ebx,ecx
  42d732:	test   DWORD PTR [edx-0x7e],0xf374b7d7
  42d739:	in     al,0x52
  42d73b:	in     al,dx
  42d73c:	pop    ecx
  42d73d:	xchg   edx,eax
  42d73e:	cmc    
  42d73f:	shl    DWORD PTR [ebx+0x19],cl
  42d742:	call   0x8009dcf
  42d747:	and    DWORD PTR [esi],0x71be5ee5
  42d74d:	pop    esi
  42d74e:	mov    ebp,0xcc5ceb0b
  42d753:	retf   
  42d754:	(bad)  
  42d755:	(bad)  
  42d757:	mov    BYTE PTR [esi-0x49753043],ah
  42d75d:	mov    ebp,0xbce68aeb
  42d762:	xchg   edi,eax
  42d763:	add    ah,BYTE PTR [edx-0x27]
  42d766:	adc    BYTE PTR [esi+edx*1-0x6e],ch
  42d76a:	xrelease xchg DWORD PTR [esi+0x7f83d7bd],ebp
  42d771:	fnstcw WORD PTR [edi+edi*2]
	...
  42d788:	sahf   
  42d789:	mov    ebp,0xbce67d1f
  42d78e:	aaa    
  42d78f:	add    eax,0x87dad962
  42d794:	repnz (bad) 
  42d796:	ret    
  42d797:	jae    0x42d726
  42d799:	xor    eax,0x5d592804
  42d79e:	push   0x6f
  42d7a0:	leave  
  42d7a1:	xchg   ecx,eax
  42d7a2:	push   0xe5ff432e
  42d7a7:	push   cs
  42d7a8:	stos   DWORD PTR es:[edi],eax
  42d7a9:	push   ebp
  42d7aa:	mov    DWORD PTR [edx+0xa],esi
  42d7ad:	(bad)  
  42d7ae:	lahf   
  42d7af:	jg     0x42d78f
  42d7b1:	mov    esp,0xd962052b
  42d7b6:	daa    
  42d7b7:	test   BYTE PTR [edi],dl
  42d7b9:	fst    DWORD PTR [edx]
  42d7bb:	jge    0x42d79b
  42d7bd:	mov    esp,0xd95f1100
  42d7c2:	add    BYTE PTR [ecx],bl
  42d7c4:	popa   
  42d7c5:	pop    esp
  42d7c6:	pop    ss
  42d7c7:	(bad)  
  42d7c8:	popa   
  42d7c9:	fst    DWORD PTR [edx+0x5e]
  42d7cc:	stos   BYTE PTR es:[edi],al
  42d7cd:	mov    esp,0xd961e85c
  42d7d2:	mov    esi,DWORD PTR [esp+eiz*2+0x2a0d7594]
  42d7d9:	pop    eax
  42d7da:	(bad)  
  42d7db:	xchg   esi,eax
  42d7dc:	rol    BYTE PTR [ebp+0x25],1
  42d7df:	xchg   ebp,eax
  42d7e0:	pop    esi
  42d7e1:	fld    DWORD PTR [eax]
  42d7e3:	cs cli 
  42d7e5:	mov    ch,0x5c
  42d7e7:	call   0x563cb14d
	...
  42d800:	jp     0x42d82f
  42d802:	add    cl,ch
  42d804:	popa   
  42d805:	add    DWORD PTR [edi],0x84949115
  42d80b:	sub    DWORD PTR [ecx+0x56],esp
  42d80e:	adc    al,0xe1
  42d810:	popa   
  42d811:	fld    DWORD PTR [ebp+0x313a5d]
  42d817:	jmp    0xf7122e7d
  42d81c:	jmp    0x6d58:0x61e91938
  42d823:	or     eax,0xf6e8824e
  42d828:	popa   
  42d829:	fnstenv [edi]
  42d82b:	ds xchg edx,eax
  42d82d:	add    eax,0xf8b10208
  42d832:	or     DWORD PTR [ebp+0x71],ebp
  42d835:	mov    ecx,0x553be900
  42d83a:	and    eax,0xd95f39
  42d83f:	jmp    0x42d7f6
  42d841:	add    al,0x86
  42d843:	es xchg bh,al
  42d846:	xlat   BYTE PTR ds:[ebx]
  42d847:	adc    eax,0x59c7b1
  42d84c:	outs   dx,DWORD PTR ds:[esi]
  42d84d:	fadd   QWORD PTR [esi+esi*8-0x74ff2354]
  42d854:	fld    QWORD PTR fs:[ebx+0x31eb77d2]
  42d85b:	fldcw  WORD PTR [edx+eiz*2-0x22]
  42d85f:	pop    ds
  42d860:	jnp    0x42d83e
  42d862:	dec    esi
  42d863:	lea    eax,[eax]
	...
  42d875:	add    BYTE PTR [eax],al
  42d877:	add    BYTE PTR [eax+eiz*8-0x303faeb0],dh
  42d87e:	call   0xf64d66a8
  42d883:	test   DWORD PTR [ebx-0x25],edi
  42d886:	test   dl,dl
  42d888:	sub    al,0xdc
  42d88a:	add    bl,ch
  42d88c:	cmp    ecx,DWORD PTR [edi]
  42d88e:	dec    esi
  42d88f:	sbb    al,0xae
  42d891:	fmul   DWORD PTR [edi]
  42d893:	cmp    esp,DWORD PTR [ebx+0x2cc27adb]
  42d899:	fadd   QWORD PTR [eax]
  42d89b:	mov    eax,DWORD PTR [eax-0x11]
  42d89e:	ret    0xa8a
  42d8a1:	mov    esi,0x60fc2c3d
  42d8a6:	stos   BYTE PTR es:[edi],al
  42d8a7:	pop    ds
  42d8a8:	sti    
  42d8a9:	fld    TBYTE PTR [ecx]
  42d8ab:	ror    bl,0xbe
  42d8ae:	shl    BYTE PTR [edi+ebp*8+0xd],1
  42d8b2:	inc    eax
  42d8b3:	add    DWORD PTR [ecx-0x5e],eax
  42d8b6:	sub    eax,0x1635760f
  42d8bb:	add    bl,cl
  42d8bd:	xchg   esi,eax
  42d8be:	jmp    0xf64c7a55
  42d8c3:	cmp    ebp,DWORD PTR [ebp+ebp*4+0x7]
  42d8c7:	test   DWORD PTR [edx],ebp
  42d8c9:	jmp    0xf90c:0x34860000
  42d8d0:	cld    
  42d8d1:	or     DWORD PTR [edx+0xd53387],eax
  42d8d7:	add    BYTE PTR [edx-0x7d],ah
  42d8da:	leave  
  42d8db:	add    BYTE PTR [bx+si],al
	...
  42d8ee:	add    BYTE PTR [eax],al
  42d8f0:	pop    ecx
  42d8f1:	dec    edx
  42d8f2:	pop    esp
  42d8f3:	jecxz  0x42d8de
  42d8f5:	dec    edx
  42d8f6:	jbe    0x42d884
  42d8f8:	inc    esi
  42d8f9:	ret    0xfffd
  42d8fc:	bound  ebx,QWORD PTR [ebx+0x63]
  42d8ff:	repnz out 0x95,al
  42d902:	into   
  42d903:	add    BYTE PTR [edx-0x7e],ah
  42d906:	add    al,0x74
  42d908:	sbb    al,0xb
  42d90a:	shr    BYTE PTR [ebx+0x29],0xc9
  42d90e:	repz cmp ch,cl
  42d911:	inc    edi
  42d912:	push   es
  42d913:	test   DWORD PTR [eax],esi
  42d915:	dec    ebp
  42d916:	adc    al,0x52
  42d918:	fbstp  TBYTE PTR [edi]
  42d91a:	or     dl,BYTE PTR [eax-0x4d]
  42d91d:	sti    
  42d91e:	cmp    ebp,eax
  42d920:	cmp    eax,0x4bfb6ebc
  42d925:	push   0xac2dfb71
  42d92a:	rcr    DWORD PTR [ebx],0x69
  42d92d:	leave  
  42d92e:	inc    DWORD PTR [edx-0x180a4]
  42d934:	call   0x3e8605bc
  42d939:	jg     0x42d8be
  42d93b:	das    
  42d93c:	gs cmp dh,0x2e
  42d940:	and    al,BYTE PTR [ecx+0x27]
  42d943:	inc    ebx
  42d944:	push   esi
  42d945:	sub    al,0x7c
  42d947:	xchg   BYTE PTR [ecx-0x1a89a87f],ah
  42d94d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d94e:	jno    0x42d989
  42d950:	push   ebp
  42d951:	rcl    BYTE PTR [ebp+0x75],0x0
	...
  42d965:	add    BYTE PTR [eax],al
  42d967:	add    ch,dl
  42d969:	xchg   edi,eax
  42d96a:	jno    0x42d9a5
  42d96c:	push   ebp
  42d96d:	sar    bh,0x84
  42d970:	jo     0x42d919
  42d972:	(bad)  
  42d973:	(bad)  
  42d974:	jnp    0x42d93d
  42d976:	aam    0x74
  42d978:	dec    ecx
  42d979:	fldcw  WORD PTR [esi-0x38]
  42d97c:	cmp    edx,edx
  42d97e:	mov    edi,0x92fbde00
  42d983:	jo     0x42d91e
  42d985:	bound  esi,QWORD PTR [ebx]
  42d987:	or     al,0xdf
  42d989:	stos   DWORD PTR es:[edi],eax
  42d98a:	cld    
  42d98b:	and    eax,0x84ebb155
  42d990:	jne    0x42d981
  42d992:	out    0x3,eax
  42d994:	adc    BYTE PTR [ebx+ebx*1+0x10],bl
  42d998:	adc    ebp,DWORD PTR [ecx]
  42d99a:	outs   dx,DWORD PTR ds:[esi]
  42d99b:	cmp    al,0x7a
  42d99d:	data16 das 
  42d99f:	jno    0x42da0a
  42d9a1:	push   esp
  42d9a2:	sub    BYTE PTR [eax],al
  42d9a4:	out    0xae,al
  42d9a6:	jmp    0x450f:0xb35c6203
  42d9ad:	ret    0xc06c
  42d9b0:	imul   eax,edx,0xde1a2ce8
  42d9b6:	bound  edi,QWORD PTR [edi]
  42d9b8:	pop    eax
  42d9b9:	(bad)  
  42d9bb:	jge    0x42d9ea
  42d9bd:	shl    BYTE PTR [edx+0x2954591f],1
  42d9c3:	adc    DWORD PTR [edx-0x27],esp
  42d9c6:	(bad)  
  42d9c7:	inc    ebx
  42d9c8:	mov    ds:0xf7e8d0,al
	...
  42d9dd:	add    BYTE PTR [eax],al
  42d9df:	add    BYTE PTR [ecx+0x63],bl
  42d9e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d9e3:	add    cl,BYTE PTR [esi+edx*1-0x3b]
  42d9e7:	add    bh,ah
  42d9e9:	ds retf 0x6203
  42d9ed:	bound  ebp,QWORD PTR [ebx]
  42d9ef:	loopne 0x42da35
  42d9f1:	fcomp  DWORD PTR [esi]
  42d9f3:	dec    esp
  42d9f4:	sti    
  42d9f5:	mov    edx,ss
  42d9f7:	outs   dx,DWORD PTR ds:[esi]
  42d9f8:	(bad)  
  42d9fa:	sub    ah,al
  42d9fc:	push   0x620e615b
  42da01:	fnop   
  42da03:	add    ecx,ecx
  42da05:	lea    eax,[ecx]
  42da07:	mov    dh,0x39
  42da09:	sbb    ch,BYTE PTR [ebp-0xe]
  42da0c:	sub    edx,esp
  42da0e:	test   BYTE PTR [eax+0x72fa923c],dl
  42da14:	(bad)  
  42da15:	in     eax,0x83
  42da17:	mov    ebx,0xb135eb9a
  42da1c:	xchg   ebp,eax
  42da1d:	push   cs
  42da1e:	jb     0x42d9e8
  42da20:	popa   
  42da21:	fst    DWORD PTR [edx+0x6c]
  42da24:	(bad)
  42da27:	sbb    ecx,edi
  42da29:	xchg   ebp,eax
  42da2a:	jmp    0xfad612fe
  42da2f:	ins    BYTE PTR es:[edi],dx
  42da30:	es loop 0x42d9b7
  42da33:	retf   
  42da34:	fld    DWORD PTR ds:[eax]
  42da37:	fs sbb eax,0xe302e5f1
  42da3d:	and    BYTE PTR ds:0xd8c46712,bl
  42da43:	out    dx,al
	...
  42da58:	fsubr  QWORD PTR [ecx]
  42da5a:	and    cl,ch
  42da5c:	popa   
  42da5d:	push   ebx
  42da5e:	(bad)  
  42da5f:	repnz sbb al,0xc1
  42da62:	or     DWORD PTR [ebx+ebx*1-0x46],ebp
  42da66:	add    cl,ch
  42da68:	jo     0x42da03
  42da6a:	inc    ecx
  42da6b:	shl    BYTE PTR [esi+0x5],1
  42da6e:	or     eax,0x36da2163
  42da73:	scas   al,BYTE PTR es:[edi]
  42da74:	inc    edx
  42da75:	loopne 0x42d9fa
  42da77:	mov    ebx,0x6200d93e
  42da7c:	and    eax,0x48e82601
  42da81:	mov    cl,0xa
  42da83:	ins    BYTE PTR es:[edi],dx
  42da84:	cmp    bh,BYTE PTR [edx+0xc86e900]
  42da8a:	sti    
  42da8b:	(bad)  
  42da8c:	dec    esp
  42da8d:	les    ebx,FWORD PTR [ecx+0x41]
  42da90:	fcmovnbe st,st(7)
  42da92:	sub    eax,0xcf0ffb00
  42da97:	inc    eax
  42da98:	mov    al,0xde
  42da9a:	xor    DWORD PTR [edi+0x73],ebx
  42da9d:	test   BYTE PTR [eax],al
  42da9f:	lea    ecx,[eax-0x7cb87804]
  42daa5:	mov    WORD PTR [eax+0x3e0fc44b],?
  42daab:	xor    al,0x84
  42daad:	inc    esi
  42daae:	adc    eax,0xc018b801
  42dab3:	jmp    0x9ba0:0xd01b987f
  42daba:	data16 jb 0x42dabd
	...
  42dacd:	add    BYTE PTR [eax],al
  42dacf:	add    BYTE PTR [edi+edx*2-0x7b74838a],dl
  42dad6:	adc    eax,0x40b4e73b
  42dadb:	add    DWORD PTR [ebx-0x28],edi
  42dade:	outs   dx,BYTE PTR ds:[esi]
  42dadf:	or     al,0xc2
  42dae1:	xchg   ebx,eax
  42dae2:	push   esi
  42dae3:	cmp    esp,edi
  42dae5:	jnp    0x42daee
  42dae7:	(bad)  
  42dae8:	scas   eax,DWORD PTR es:[edi]
  42dae9:	fadd   DWORD PTR [eax]
  42daeb:	add    al,dl
  42daed:	into   
  42daee:	loope  0x42db02
  42daf0:	inc    esp
  42daf1:	inc    esi
  42daf2:	add    cl,BYTE PTR [ebx-0x49fa3c04]
  42daf8:	aaa    
  42daf9:	nop
  42dafa:	sub    eax,eax
  42dafc:	jp     0x42db2b
  42dafe:	add    eax,0x82d02840
  42db03:	inc    ebp
  42db04:	or     esp,DWORD PTR [ecx-0x23e09377]
  42db0a:	cmp    al,0x5
  42db0c:	mov    cs,WORD PTR [ebp-0x2e4f3fd5]
  42db12:	add    eax,0xfe2f4b94
  42db17:	xor    bh,BYTE PTR [ebx+0x6e0fc2c1]
  42db1d:	adc    eax,0x7362c084
  42db22:	sbb    DWORD PTR [edx+eax*4-0x5017017e],0x50
  42db2a:	ins    BYTE PTR es:[edi],dx
  42db2b:	sti    
  42db2c:	(bad)  
  42db2e:	or     al,0x85
  42db30:	nop
  42db31:	int    0xd2
  42db33:	add    BYTE PTR ss:[eax],al
	...
  42db46:	add    BYTE PTR [eax],al
  42db48:	adc    eax,0x1412efce
  42db4d:	add    eax,0x6b121bc4
  42db52:	hlt    
  42db53:	imul   ebp,ecx,0x36
  42db56:	pop    ebp
  42db57:	xor    BYTE PTR [eax-0x5d7a93a5],ch
  42db5d:	add    BYTE PTR [ebx-0x17dbd8c],0x2e
  42db64:	stos   DWORD PTR es:[edi],eax
  42db65:	shl    BYTE PTR [edi-0x41],0x21
  42db69:	inc    edi
  42db6a:	lds    ebp,FWORD PTR [ebx+0x5d]
  42db6d:	add    BYTE PTR ds:0x802a65fd,bh
  42db73:	jnp    0x42db53
  42db75:	cmp    ch,0x83
  42db78:	mov    ecx,0x890004e0
  42db7d:	hlt    
  42db7e:	sub    BYTE PTR [eax+0x63],al
  42db81:	cmp    dh,0xa
  42db84:	in     al,0x32
  42db86:	push   ds
  42db87:	add    BYTE PTR [edx-0x77],ah
  42db8a:	mov    ebp,0xca43db7b
  42db8f:	or     dl,ah
  42db91:	ds push ds
  42db93:	add    BYTE PTR [edx+0x56],ah
  42db96:	jb     0x42dbf2
  42db98:	or     esp,DWORD PTR [edi+0x762001e]
  42db9e:	les    ebp,FWORD PTR [ebx+0x39]
  42dba1:	xor    ecx,DWORD PTR [edx]
  42dba3:	aaa    
  42dba4:	sbb    cl,BYTE PTR [edx+ebp*4]
  42dba7:	xchg   BYTE PTR [ecx+0x4f],ah
  42dbaa:	aaa    
  42dbab:	inc    ecx
	...
  42dbc0:	sub    cl,bl
  42dbc2:	sub    ah,BYTE PTR [eax]
  42dbc4:	outs   dx,DWORD PTR ds:[esi]
  42dbc5:	inc    esp
  42dbc6:	and    DWORD PTR [ebp+0xe6bda79],edi
  42dbcc:	sbb    cl,0xe7
  42dbcf:	jns    0x42db5e
  42dbd1:	fdivr  st,st(5)
  42dbd3:	les    esi,FWORD PTR [esi-0x26]
  42dbd6:	arpl   WORD PTR [edx],dx
  42dbd8:	sbb    cl,0xe7
  42dbdb:	pop    eax
  42dbdc:	fcomp  DWORD PTR [esi-0x59]
  42dbdf:	shl    BYTE PTR [edx+edx*1+0x14],0xfd
  42dbe4:	daa    
  42dbe5:	add    al,0x9d
  42dbe7:	ins    BYTE PTR es:[edi],dx
  42dbe8:	cdq    
  42dbe9:	push   esi
  42dbea:	adc    esi,eax
  42dbec:	xchg   ebp,eax
  42dbed:	(bad)  [ebx+0x6a]
  42dbf0:	imul   ebx,ecx,0xdaab28e7
  42dbf6:	popa   
  42dbf7:	jb     0x42dc52
  42dbf9:	(bad)  
  42dbfb:	xor    BYTE PTR [edx-0x163b4ee7],ah
  42dc01:	pop    edi
  42dc02:	stos   DWORD PTR es:[edi],eax
  42dc03:	iret   
  42dc04:	jl     0x42dc71
  42dc06:	pop    ds
  42dc07:	int    0xc9
  42dc09:	push   es
  42dc0a:	xor    bh,ah
  42dc0c:	adc    ebx,esi
  42dc0e:	pop    esi
  42dc0f:	les    edx,FWORD PTR [ecx+0x63073a16]
  42dc15:	aad    0x50
  42dc17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc18:	cmp    BYTE PTR [edx-0x266d7cd],cl
  42dc1e:	mov    dh,0x3a
  42dc20:	pop    ecx
  42dc21:	inc    ebx
  42dc22:	out    dx,eax
  42dc23:	js     0x42dc25
	...
  42dc35:	add    BYTE PTR [eax],al
  42dc37:	add    BYTE PTR [ecx+0x6675a6c5],ah
  42dc3d:	fsubr  st,st(3)
  42dc3f:	cld    
  42dc40:	loope  0x42dc8f
  42dc42:	jmp    0x42dc47
  42dc44:	bound  eax,QWORD PTR [eax-0x75f6911f]
  42dc4a:	mov    edi,0x10689cc
  42dc4f:	inc    edi
  42dc50:	test   BYTE PTR [edi+0x6],0x62
  42dc54:	es (bad) 
  42dc56:	sub    eax,0x84cb1cbb
  42dc5b:	cmc    
  42dc5c:	data16 xor BYTE PTR [ebp-0x29],0x49
  42dc61:	mov    ?,WORD PTR [esi]
  42dc63:	cs stos BYTE PTR es:[edi],al
  42dc65:	cli    
  42dc66:	xchg   ecx,eax
  42dc67:	not    BYTE PTR [ebx]
  42dc69:	rol    BYTE PTR [ebp-0x31458dda],cl
  42dc6f:	sub    ebx,DWORD PTR [ebp+0xce81555]
  42dc75:	xchg   ebx,eax
  42dc76:	ss inc esi
  42dc78:	mov    bh,dl
  42dc7a:	jge    0x42dc6a
  42dc7c:	rcl    ecx,cl
  42dc7e:	test   DWORD PTR [esi],ebp
  42dc80:	push   edx
  42dc81:	retf   0xe5f2
  42dc84:	jmpw   0xf6f
  42dc88:	clc    
  42dc89:	(bad)  
  42dc8a:	cli    
  42dc8b:	ret    0xfda8
  42dc8e:	or     DWORD PTR [edx-0x6c],ebp
  42dc91:	mov    ?,edx
  42dc93:	outs   dx,BYTE PTR ds:[esi]
  42dc94:	imul   eax,DWORD PTR [edi+0x6],0x3dc5a172
  42dc9b:	push   edi
	...
  42dcb0:	(bad)  
  42dcb1:	ficom  DWORD PTR [eax]
  42dcb3:	inc    edx
  42dcb4:	jmp    0x49003689
  42dcb9:	or     BYTE PTR [ebp+0x46],dl
  42dcbc:	mov    ecx,0x65770a84
  42dcc1:	enter  0x317d,0x34
  42dcc5:	aam    0x84
  42dcc7:	ins    DWORD PTR es:[edi],dx
  42dcc8:	mov    edx,0xe3f6fa84
  42dccd:	sbb    eax,0x861e91a
  42dcd2:	stc    
  42dcd3:	in     eax,0x13
  42dcd5:	out    0x7d,eax
  42dcd7:	adc    DWORD PTR [ebx],ecx
  42dcd9:	or     eax,0x5a1e0026
  42dcde:	add    DWORD PTR [eax],eax
  42dce0:	or     edi,DWORD PTR [ecx+0x10]
  42dce3:	cmp    eax,0xbd24
  42dce8:	or     al,0x5b
  42dcea:	sub    DWORD PTR [edi],ebx
  42dcec:	sti    
  42dced:	fdivr  QWORD PTR [ebx]
  42dcef:	sub    DWORD PTR [ebx-0x23],ebp
  42dcf2:	add    BYTE PTR [edi],cl
  42dcf4:	inc    esp
  42dcf5:	rcl    DWORD PTR ds:0x6db5bb00,1
  42dcfb:	pusha  
  42dcfc:	int3   
  42dcfd:	pop    ecx
  42dcfe:	adc    eax,0xe7dccb1f
  42dd03:	sub    edi,0x5c3bf5f3
  42dd09:	mov    eax,ds:0xf1838307
  42dd0e:	cmc    
  42dd0f:	dec    DWORD PTR [ebx]
  42dd11:	mov    bh,0x2
  42dd13:	sldt   WORD PTR [eax]
	...
  42dd26:	add    BYTE PTR [eax],al
  42dd28:	push   es
  42dd29:	mov    ds:0x9fdcfff6,eax
  42dd2e:	jmp    0xf636bc9c
  42dd33:	cmp    ebx,DWORD PTR [ecx+eiz*4+0x7]
  42dd37:	and    eax,0xfffffff2
  42dd3a:	cmc    
  42dd3b:	dec    DWORD PTR [edx+ecx*2-0x2b924606]
  42dd42:	add    BYTE PTR [eax],al
  42dd44:	or     BYTE PTR [edi-0x7b878846],dh
  42dd4a:	jle    0x42dd27
  42dd4c:	cmp    eax,0xa38300dc
  42dd51:	test   DWORD PTR [edi],eax
  42dd53:	test   BYTE PTR [ecx-0x2e],bl
  42dd56:	add    BYTE PTR [eax],al
  42dd58:	enter  0x20f4,0xf
  42dd5c:	mov    ebp,0xb13b0016
  42dd62:	mov    al,ds:0x5dc0b00
  42dd67:	test   BYTE PTR [edx+0x30],ah
  42dd6a:	or     BYTE PTR [eax],al
  42dd6c:	bound  edx,QWORD PTR [ebp+0x7262127e]
  42dd72:	test   DWORD PTR [ebx-0x1584f],0xfb62920b
  42dd7c:	in     eax,dx
  42dd7d:	xor    al,0xfe
  42dd7f:	pop    ds
  42dd80:	bound  esi,QWORD PTR [edx-0x7]
  42dd83:	jge    0x42ddfc
  42dd85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd86:	push   0x1e7c97fb
	...
  42dd9f:	add    BYTE PTR [edx-0x59],ah
  42dda2:	sbb    BYTE PTR [eax+0x3cfe7264],0x8d
  42dda9:	rol    BYTE PTR [eax+eax*1],cl
  42ddac:	div    BYTE PTR gs:[ecx+0x1a]
  42ddb0:	bound  esi,QWORD PTR [edx+0x23]
  42ddb3:	pop    ebx
  42ddb4:	xor    BYTE PTR [edx-0x2],0xa
  42ddb8:	out    0xf3,al
  42ddba:	push   es
  42ddbb:	add    BYTE PTR [edx-0x53],ah
  42ddbe:	(bad)  
  42ddbf:	das    
  42ddc0:	bound  esi,QWORD PTR [edx+0x5d]
  42ddc3:	mov    esi,0xad8bf49
  42ddc8:	loope  0x42dda0
  42ddca:	data16 sti 
  42ddcc:	jne    0x42de4c
  42ddce:	mov    al,0xff
  42ddd0:	stos   DWORD PTR es:[edi],eax
  42ddd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddd2:	push   es
  42ddd3:	add    BYTE PTR [edx+0x33],ah
  42ddd6:	sub    eax,0xf7d5d5be
  42dddb:	xor    DWORD PTR [ebx],0x2c
  42ddde:	push   0xf628e1fb
  42dde3:	or     bl,dh
  42dde5:	enter  0xfb6b,0x3d
  42dde9:	hlt    
  42ddea:	ins    BYTE PTR es:[edi],dx
  42ddeb:	and    BYTE PTR [ebp-0xc],ah
  42ddee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddef:	imul   DWORD PTR ds:0x62a021b8
  42ddf5:	(bad)  
  42ddf7:	add    ebp,DWORD PTR [ecx+0x5d]
  42ddfa:	push   esp
  42ddfb:	ins    DWORD PTR es:[edi],dx
  42ddfc:	sbb    DWORD PTR [edi-0x268f7c2b],eax
  42de02:	out    0x5a,eax
	...
  42de18:	push   0x3f690386
  42de1d:	fld    st(7)
  42de1f:	add    esp,DWORD PTR [edx-0x2a]
  42de22:	gs pop ss
  42de24:	dec    eax
  42de25:	(bad)  
  42de27:	es pop esp
  42de29:	mov    ecx,0x5f6903e7
  42de2e:	je     0x42de9c
  42de30:	fld    DWORD PTR [esi-0x267de6eb]
  42de36:	out    0xf8,eax
  42de38:	loope  0x42de8a
  42de3a:	mov    edi,0x1ac4b968
  42de3f:	and    al,0x62
  42de41:	(bad)  
  42de43:	jg     0x42de6d
  42de45:	sub    BYTE PTR [ebx-0x28269898],0x3
  42de4c:	bound  esi,QWORD PTR [eax-0x70]
  42de4f:	imul   ebx,DWORD PTR [ecx-0x637307a],0x877166d5
  42de59:	xchg   BYTE PTR [ebx+0x26dab3f8],al
  42de5f:	test   DWORD PTR [edx-0x2d],edi
  42de62:	loop   0x42dde9
  42de64:	or     BYTE PTR [edx-0x7f1a9795],al
  42de6a:	cmc    
  42de6b:	clc    
  42de6c:	jecxz  0x42dee7
  42de6e:	std    
  42de6f:	add    esp,DWORD PTR [edx-0x3c]
  42de72:	ins    BYTE PTR es:[edi],dx
  42de73:	add    esp,DWORD PTR [edx-0x27]
  42de76:	fidivr DWORD PTR [edi+0x2a]
  42de79:	in     al,0xe7
  42de7b:	add    eax,DWORD PTR [eax]
	...
  42de8d:	add    BYTE PTR [eax],al
  42de8f:	add    BYTE PTR [edi-0x42],bh
  42de92:	pop    es
  42de93:	add    al,0x62
  42de95:	(bad)  
  42de96:	add    BYTE PTR [edi+0x7a],ch
  42de99:	mov    ?,edx
  42de9b:	cs jl  0x42de4e
  42de9e:	and    cl,ch
  42dea0:	popa   
  42dea1:	rol    BYTE PTR [edx+0xd95c2b],cl
  42dea7:	add    BYTE PTR [edx-0x72],ch
  42deaa:	cli    
  42deab:	push   cs
  42deac:	and    ch,BYTE PTR ss:[ebp-0xa]
  42deb0:	out    0x47,al
  42deb2:	cld    
  42deb3:	(bad)  
  42deb4:	jge    0x42de88
  42deb6:	mov    dl,0xea
  42deb8:	es pop es
  42deba:	stc    
  42debb:	jecxz  0x42dea7
  42debd:	add    esp,DWORD PTR [edx+0x7dd96604]
  42dec3:	loope  0x42dea0
  42dec5:	rol    BYTE PTR [edx-0x57dc707],cl
  42decb:	or     al,0xe3
  42decd:	fadd   DWORD PTR [eax]
  42decf:	jmp    0xc2473888
  42ded4:	cmp    eax,0x639b2e82
  42ded9:	mov    eax,ds:0xc73daeda
  42dede:	xor    eax,0x7e5a95ab
  42dee3:	cld    
  42dee4:	popa   
  42dee5:	(bad)  
  42dee7:	cdq    
  42dee8:	clc    
  42dee9:	cmp    edx,0x13b7de
  42deef:	test   bh,0x1b
  42def2:	jmp    DWORD PTR [edi+0x0]
	...
  42df08:	call   eax
  42df0a:	add    eax,0x7e9061a1
  42df0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42df10:	popa   
  42df11:	push   eax
  42df12:	dec    ebp
  42df13:	or     eax,0x56d526e
  42df18:	push   0xffffffcc
  42df1a:	mov    WORD PTR ds:0xe900da0e,cs
  42df20:	cmp    dl,bh
  42df22:	test   DWORD PTR [eax],eax
  42df24:	fmul   QWORD PTR [ebx+eax*4-0x3ea54efc]
  42df2b:	js     0x42df70
  42df2d:	add    BYTE PTR [ebp-0x76],dl
  42df30:	aas    
  42df31:	loopne 0x42df03
  42df33:	jmp    0x42df4d
  42df35:	mov    dh,0x6d
  42df37:	dec    eax
  42df38:	out    dx,eax
  42df39:	add    BYTE PTR [ebx+0x1e8982d6],0x24
  42df40:	pusha  
  42df41:	jg     0x42dec6
  42df43:	push   edi
  42df44:	xlat   BYTE PTR ds:[ebx]
  42df45:	(bad)  
  42df47:	inc    edx
  42df48:	jb     0x42def3
  42df4a:	push   ds
  42df4b:	and    al,0x81
  42df4d:	call   0x3c29:0xe4bf87fa
  42df54:	lea    ecx,[esp+edi*2+0xd8cbe3]
  42df5b:	cmp    al,0x80
  42df5d:	jae    0x42df9d
  42df5f:	cmp    al,0x66
  42df61:	mov    WORD PTR [edi-0x29],?
  42df64:	retf   
  42df65:	fadd   DWORD PTR [eax]
  42df67:	cvtps2pi mm0,QWORD PTR [ecx+0x1]
  42df6b:	xor    eax,DWORD PTR [eax]
	...
  42df7d:	add    BYTE PTR [eax],al
  42df7f:	add    bl,bh
  42df81:	pop    eax
  42df82:	jge    0x42dfa8
  42df84:	test   al,0x41
  42df86:	pop    es
  42df87:	xchg   esp,eax
  42df88:	retf   
  42df89:	sbb    eax,0x441208e0
  42df8e:	push   ds
  42df8f:	adc    al,0x84
  42df91:	ss inc esp
  42df93:	add    al,BYTE PTR [eax+0x4eb605c0]
  42df99:	fdivr  DWORD PTR [edi+0x450573e0]
  42df9f:	and    al,0x8b
  42dfa1:	mov    esi,DWORD PTR [eax+0x3e857f45]
  42dfa7:	and    al,0x5b
  42dfa9:	inc    DWORD PTR [esp+0x5b]
  42dfad:	mov    edi,DWORD PTR [esi]
  42dfaf:	inc    esp
  42dfb0:	(bad)  
  42dfb1:	(bad)  
  42dfb2:	sub    BYTE PTR [edi+0x1f],bh
  42dfb5:	jge    0x42e00e
  42dfb7:	and    eax,0x23ba046d
  42dfbc:	jno    0x42dffb
  42dfbe:	jns    0x42e008
  42dfc0:	call   0xdb4444b3
  42dfc5:	sbb    dl,BYTE PTR gs:[ebp*2-0x67518a04]
  42dfcd:	xor    bh,dh
  42dfcf:	or     cl,ah
  42dfd1:	icebp  
  42dfd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dfd3:	jbe    0x42df77
  42dfd5:	jb     0x42df58
  42dfd7:	shr    BYTE PTR [ebp+0x36],0xba
  42dfdb:	and    esi,DWORD PTR [esi]
  42dfdd:	or     DWORD PTR [edx-0x4e06addd],edi
  42dfe3:	and    eax,DWORD PTR [eax]
	...
  42dff5:	add    BYTE PTR [eax],al
  42dff7:	add    BYTE PTR [edx],bh
  42dff9:	stc    
  42dffa:	shl    DWORD PTR [ebx],1
  42dffc:	jle    0x42dff3
  42dffe:	dec    esi
  42dfff:	or     ebx,esi
  42e001:	test   eax,0xdecdfb52
  42e006:	inc    esp
  42e007:	inc    eax
  42e008:	fstp   TBYTE PTR [ebp+0x4a792020]
  42e00e:	jmp    0x21509541
  42e013:	push   eax
  42e014:	arpl   WORD PTR [edx-0x2],si
  42e017:	xchg   BYTE PTR [esi],dl
  42e019:	fimul  WORD PTR [eax]
  42e01b:	push   ebx
  42e01c:	xor    BYTE PTR [edi],al
  42e01e:	push   eax
  42e01f:	call   0xfba735b6
  42e024:	out    0x31,eax
  42e026:	hlt    
  42e027:	xor    esp,0x7e
  42e02a:	(bad)  
  42e02b:	(bad)  
  42e02c:	jmp    0xe9670116
  42e031:	mov    ebp,0xbdd92020
  42e036:	and    BYTE PTR [eax],ch
  42e038:	popa   
  42e039:	push   0xd9a688c5
  42e03e:	or     esp,DWORD PTR [ecx*4-0x1ac92568]
  42e045:	sbb    eax,0x918d140c
  42e04a:	fstp   TBYTE PTR [edi-0x28]
  42e04d:	je     0x42e092
  42e04f:	gs mov ch,0x5
  42e052:	add    al,0x10
  42e054:	(bad)  
  42e056:	imul   edi,DWORD PTR [esi+0x54],0xffffffd9
  42e05a:	out    0x78,eax
	...
  42e070:	out    0xbd,al
  42e072:	ret    
  42e073:	add    ah,BYTE PTR [edx-0x27]
  42e076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e077:	pop    edx
  42e078:	mov    ds:0x903e7e7,eax
  42e07d:	dec    esi
  42e07e:	(bad)  
  42e07f:	shl    DWORD PTR [edx-0x27],cl
  42e082:	out    0xcc,eax
  42e084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e085:	dec    esi
  42e086:	pop    ss
  42e087:	pop    esp
  42e088:	iret   
  42e089:	jne    0x42e07e
  42e08b:	fistp  WORD PTR fs:[ecx-0x198a8025]
  42e092:	out    0x3,eax
  42e094:	aad    0x1e
  42e096:	add    al,0x20
  42e098:	mov    ebx,0xc964c4fc
  42e09d:	push   esp
  42e09e:	and    eax,0x99c3d03
  42e0a3:	jnp    0x42e0c3
  42e0a5:	mov    ebp,0xd91f79df
  42e0aa:	pop    ebp
  42e0ab:	inc    edx
  42e0ac:	fcomi  st,st(5)
  42e0ae:	add    ecx,DWORD PTR [eax]
  42e0b0:	pop    esi
  42e0b1:	sbb    esi,ebx
  42e0b3:	adc    DWORD PTR ds:0x4e03e7d9,0x49be1a0e
  42e0bd:	adc    al,0x13
  42e0bf:	jmp    0x1602c2c
  42e0c4:	inc    ebp
  42e0c5:	cdq    
  42e0c6:	push   0xd21f6a
  42e0cb:	aas    
  42e0cc:	lods   al,BYTE PTR ds:[esi]
  42e0cd:	(bad)  [ecx]
  42e0cf:	push   ebp
  42e0d0:	mov    eax,ds:0xf1e098
	...
  42e0e5:	add    BYTE PTR [eax],al
  42e0e7:	add    BYTE PTR [eax+0xd7009a3],ah
  42e0ed:	mov    dh,0x24
  42e0ef:	out    0xf7,al
  42e0f1:	sbb    edi,edi
  42e0f3:	loope  0x42e16e
  42e0f5:	into   
  42e0f6:	mov    dl,0xac
  42e0f8:	xor    eax,0xc681d0db
  42e0fd:	jle    0x42e0f9
  42e0ff:	mov    dh,0x2e
  42e101:	push   ss
  42e102:	shl    DWORD PTR [eax+0x2d],1
  42e105:	mov    dh,0x28
  42e107:	push   0x54
  42e109:	fsubr  QWORD PTR ds:0x2515883b
  42e10f:	stc    
  42e110:	mov    ch,dh
  42e112:	and    al,0xed
  42e114:	and    edi,DWORD PTR [ebx+0x43]
  42e117:	test   bh,0x97
  42e11a:	sbb    esi,DWORD PTR cs:[ecx+edx*1-0x49]
  42e11f:	stos   DWORD PTR es:[edi],eax
  42e120:	inc    edx
  42e121:	fwait
  42e122:	mov    BYTE PTR [ebp-0x58f64283],bl
  42e128:	out    0x32,al
  42e12a:	ja     0x42e155
  42e12c:	data16 into 
  42e12e:	mov    edx,0x410ae469
  42e133:	jmp    0xdb031e2
  42e138:	bound  edx,QWORD PTR [eax+0x4d]
  42e13b:	add    eax,0xd4550b6
  42e140:	jbe    0x42e19e
  42e142:	shl    DWORD PTR [esi+ebx*4],0x49
  42e146:	cli    
  42e147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e148:	add    esi,edi
  42e14a:	xchg   DWORD PTR ds:0x0,esp
	...
  42e160:	cmp    dh,BYTE PTR [ecx-0x6c931b1b]
  42e166:	aas    
  42e167:	pusha  
  42e168:	mov    edx,0xf00028b5
  42e16d:	adc    cl,BYTE PTR [eax-0x767a58ac]
  42e173:	push   esp
  42e174:	xchg   edi,eax
  42e175:	mov    ch,0x31
  42e177:	retf   0xe54f
  42e17a:	xor    DWORD PTR [edi+0x2f],ebx
  42e17d:	in     al,dx
  42e17e:	jns    0x42e1f5
  42e180:	dec    ecx
  42e181:	fld    QWORD PTR [eax]
  42e183:	pmulhw mm1,QWORD PTR [eax+0xfc0c02b]
  42e18a:	jp     0x42e16d
  42e18c:	inc    esp
  42e18d:	popf   
  42e18e:	retf   
  42e18f:	loopne 0x42e141
  42e191:	test   eax,0xef7a181e
  42e196:	stc    
  42e197:	inc    edx
  42e198:	xchg   ecx,edx
  42e19a:	add    cl,BYTE PTR [edi]
  42e19c:	xchg   DWORD PTR [edx+0x4ffb0013],edx
  42e1a2:	inc    ebp
  42e1a3:	and    al,0x1b
  42e1a5:	push   eax
  42e1a6:	dec    ebp
  42e1a7:	and    al,0xfb
  42e1a9:	pushf  
  42e1aa:	mov    DWORD PTR [edi+eiz*1-0x43],eax
  42e1ae:	xor    ecx,eax
  42e1b0:	ins    DWORD PTR es:[edi],dx
  42e1b1:	adc    al,0x82
  42e1b3:	inc    esp
  42e1b4:	pop    ss
  42e1b5:	mov    ch,0x31
  42e1b7:	enter  0x58bc,0x67
  42e1bb:	in     al,dx
  42e1bc:	mov    esp,0x677c79fb
  42e1c1:	mov    cl,0x0
  42e1c3:	sldt   WORD PTR [eax]
	...
  42e1d6:	add    BYTE PTR [eax],al
  42e1d8:	aaa    
  42e1d9:	ins    BYTE PTR es:[edi],dx
  42e1da:	or     eax,DWORD PTR [eax]
  42e1dc:	retf   
  42e1dd:	dec    edi
  42e1de:	test   DWORD PTR [edi+edi*2],esp
  42e1e1:	(bad)  
  42e1e2:	add    BYTE PTR [eax],al
  42e1e4:	jnp    0x42e1d4
  42e1e6:	popa   
  42e1e7:	adc    bh,BYTE PTR [ebx+0x5f4781dc]
  42e1ed:	call   0x970b0dbc
  42e1f2:	xor    eax,edx
  42e1f4:	jl     0x42e246
  42e1f6:	aas    
  42e1f7:	adc    esp,DWORD PTR [edx+0x72]
  42e1fa:	inc    BYTE PTR [ebp+0x451cb361]
  42e200:	arpl   WORD PTR [edi+0x7248f489],ax
  42e206:	(bad)  
  42e207:	call   0xfba1e301
  42e20c:	jmp    0x3071d2c7
  42e211:	jmp    0x42e254
  42e213:	mov    DWORD PTR ds:[esi+ecx*1-0x17c8074],esi
  42e21b:	jmp    FWORD PTR [ebp+0x68]
  42e21e:	add    eax,DWORD PTR [edi-0x4df07d73]
  42e224:	lahf   
  42e225:	jno    0x42e1b3
  42e227:	add    al,0x52
  42e229:	xor    edx,DWORD PTR [esi]
  42e22b:	add    al,0x73
  42e22d:	lahf   
  42e22e:	mov    eax,ecx
  42e230:	js     0x42e2a4
  42e232:	(bad)  
  42e233:	gs pusha 
  42e235:	call   0xfb54:0x28fbe803
	...
  42e250:	std    
  42e251:	sahf   
  42e252:	cwde   
  42e253:	push   ebp
  42e254:	arpl   WORD PTR [edi-0x4e9fba68],ax
  42e25a:	arpl   WORD PTR [eax],cx
  42e25c:	pop    ecx
  42e25d:	loop   0x42e1e9
  42e25f:	(bad)  
  42e260:	loope  0x42e216
  42e262:	add    ah,bh
  42e264:	inc    esp
  42e265:	jecxz  0x42e2ab
  42e267:	inc    eax
  42e268:	(bad)  [ebp+0x60552828]
  42e26e:	mov    dl,0x0
  42e270:	ins    DWORD PTR es:[edi],dx
  42e271:	push   0x93a2fdc2
  42e276:	or     eax,0x3e829207
  42e27b:	and    BYTE PTR [esi],0xce
  42e27e:	adc    esp,DWORD PTR [edx]
  42e280:	jmp    0xa2d6f2e4
  42e285:	fdiv   DWORD PTR [eax-0x38]
  42e288:	inc    ecx
  42e289:	mov    ch,0x8e
  42e28b:	aaa    
  42e28c:	xor    eax,0xa88d2899
  42e291:	inc    edx
  42e292:	mov    esp,DWORD PTR [ecx+0x79]
  42e295:	push   DWORD PTR [eax-0x38]
  42e298:	inc    ecx
  42e299:	mov    cl,0x24
  42e29b:	ins    DWORD PTR es:[edi],dx
  42e29c:	xor    esp,ecx
  42e29e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e29f:	(bad)  
  42e2a0:	in     al,0x91
  42e2a2:	jg     0x42e313
  42e2a4:	test   DWORD PTR [ecx+0x53188ca8],ebx
  42e2aa:	cmp    BYTE PTR [ebp+0x3b],ch
  42e2ad:	dec    ebp
  42e2ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e2af:	bound  ecx,QWORD PTR [ebp+0x8ca6ab]
	...
  42e2c5:	add    BYTE PTR [eax],al
  42e2c7:	add    BYTE PTR [edx],ch
  42e2c9:	mov    ebx,0x69e8112d
  42e2ce:	call   0x611c48af
  42e2d3:	rol    BYTE PTR [ecx-0x4b],1
  42e2d6:	fisub  DWORD PTR [ecx-0x3c617e16]
  42e2dc:	or     eax,0xca366516
  42e2e1:	jle    0x42e2f6
  42e2e3:	popa   
  42e2e4:	jns    0x42e2b4
  42e2e6:	mov    ds:0xad476933,eax
  42e2eb:	add    esp,DWORD PTR [edi-0x6dd79b79]
  42e2f1:	fsub   st,st(7)
  42e2f3:	add    esp,DWORD PTR [ebx+0x50]
  42e2f6:	xchg   esp,eax
  42e2f7:	daa    
  42e2f8:	jb     0x42e34a
  42e2fa:	xor    al,0x28
  42e2fc:	push   0x50
  42e2fe:	and    al,0x28
  42e300:	adc    BYTE PTR [eax+0x44],0x28
  42e304:	pop    esi
  42e305:	into   
  42e306:	arpl   WORD PTR [ebx],bx
  42e308:	arpl   cx,bx
  42e30a:	out    0x8c,eax
  42e30c:	adc    ecx,ecx
  42e30e:	jo     0x42e2c7
  42e310:	and    ebp,0xd5fbe600
  42e316:	adc    BYTE PTR [edx-0x33],ah
  42e319:	mov    edx,0xbaa57010
  42e31e:	and    dl,bl
  42e320:	and    DWORD PTR [ecx],ebx
  42e322:	mov    BYTE PTR ds:0xa135ad4a,ch
  42e328:	xchg   ebp,eax
  42e329:	scas   eax,DWORD PTR es:[edi]
  42e32a:	xor    eax,0x26
	...
  42e33f:	add    BYTE PTR [edx-0x2d],dh
  42e342:	jge    0x42e329
  42e344:	jo     0x42e3c4
  42e346:	cli    
  42e347:	out    0xfb,al
  42e349:	jge    0x42e2d2
  42e34b:	in     eax,dx
  42e34c:	jge    0x42e333
  42e34e:	cmp    eax,0x38d4ebf6
  42e353:	jb     0x42e33a
  42e355:	mov    ah,0x4c
  42e357:	call   0xa57abcbd
  42e35c:	jge    0x42e317
  42e35e:	or     DWORD PTR [esp+esi*2-0x20],ebp
  42e362:	add    cl,ch
  42e364:	(bad)  
  42e365:	adc    al,0x25
  42e367:	add    eax,0x5455126
  42e36c:	push   edx
  42e36d:	(bad)  
  42e36e:	mov    edi,0xc6c69ca7
  42e373:	out    dx,al
  42e374:	fstp   st(2)
  42e376:	in     eax,0x16
  42e378:	cmp    dh,0x7c
  42e37b:	lds    edi,FWORD PTR ds:0xe96c09d9
  42e381:	retf   
  42e382:	add    cl,ch
  42e384:	(bad)  
  42e385:	cmp    eax,0xb585ad88
  42e38a:	xor    eax,0xb74c7223
  42e38f:	jmp    0x3e78bcf5
  42e394:	rcl    dl,cl
  42e396:	jge    0x42e3fd
  42e398:	data16 fld DWORD PTR [eax]
  42e39b:	fmulp  st(7),st
  42e39d:	jge    0x42e326
  42e39f:	add    BYTE PTR [ebp+eiz*8+0x5],cl
  42e3a3:	mov    dh,0x0
	...
  42e3b5:	add    BYTE PTR [eax],al
  42e3b7:	add    BYTE PTR [edi+0x6f548389],bh
  42e3bd:	test   DWORD PTR [ecx],edi
  42e3bf:	inc    esp
  42e3c0:	pop    edi
  42e3c1:	mov    ch,0x73
  42e3c3:	push   es
  42e3c4:	cmp    BYTE PTR [ebx+esi*1-0x7de79836],dl
  42e3cb:	mov    WORD PTR [edi-0x74fffe67],gs
  42e3d1:	push   edx
  42e3d2:	inc    ebp
  42e3d3:	and    al,0x9f
  42e3d5:	pop    edx
  42e3d6:	jge    0x42e3fc
  42e3d8:	xchg   ebx,eax
  42e3d9:	fld    DWORD PTR ds:0xf5ef9085
  42e3df:	call   DWORD PTR [eax]
  42e3e1:	rol    DWORD PTR ds:0xfa7e1d82,0xff
  42e3e8:	rcl    BYTE PTR [ecx+0x25],1
  42e3eb:	pop    esp
  42e3ec:	dec    edx
  42e3ed:	fld    DWORD PTR [eax]
  42e3ef:	inc    eax
  42e3f0:	ret    0x1e91
  42e3f3:	xor    al,0xcb
  42e3f5:	inc    esi
  42e3f6:	div    DWORD PTR [edi+ebx*2+0xb000199]
  42e3fd:	push   eax
  42e3fe:	aam    0xff
  42e400:	(bad)  
  42e401:	mov    cl,0x5c
  42e403:	add    ebx,edi
  42e405:	fmul   DWORD PTR [ebp-0x1]
  42e408:	scas   eax,DWORD PTR es:[edi]
  42e409:	mov    cl,0x5c
  42e40b:	add    DWORD PTR [ebx],ecx
  42e40d:	fprem1 
  42e40f:	mov    ah,0x1f
  42e411:	cmp    eax,0x45fb0001
  42e416:	or     ebx,0x53
  42e419:	aad    0xe2
  42e41b:	inc    DWORD PTR [eax]
	...
  42e42d:	add    BYTE PTR [eax],al
  42e42f:	add    ah,dl
  42e431:	pop    DWORD PTR [ebp+0x351b4c0]
  42e437:	push   cs
  42e438:	mov    ebx,0x5f8c81d8
  42e43d:	xchg   ebp,eax
  42e43e:	add    DWORD PTR [eax],eax
  42e440:	bound  esi,QWORD PTR [edx-0x79]
  42e443:	inc    esp
  42e444:	jle    0x42e42c
  42e446:	adc    eax,0xcdce865c
  42e44b:	mov    esp,0xfffda0bb
  42e450:	popf   
  42e451:	out    dx,eax
  42e452:	fidivr DWORD PTR [ebx+0x62]
  42e455:	test   DWORD PTR [ecx-0x18edddc],0x170a0eff
  42e45f:	fxtract 
  42e461:	in     eax,dx
  42e462:	push   cs
  42e463:	shl    BYTE PTR [edx],0xf9
  42e466:	ret    0x2b5b
  42e469:	stos   DWORD PTR es:[edi],eax
  42e46a:	loopne 0x42e476
  42e46c:	aam    0x85
  42e46e:	pop    ebx
  42e46f:	sti    
  42e470:	pop    ebp
  42e471:	pop    ecx
  42e472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e473:	clc    
  42e474:	push   ebp
  42e475:	jmp    0x42e3fd
  42e477:	mov    WORD PTR [esi+0x62000532],es
  42e47d:	sub    esi,esp
  42e47f:	cli    
  42e480:	cmp    eax,0xa2c00f23
  42e485:	stc    
  42e486:	shl    DWORD PTR [ebx],0x7e
  42e489:	xlat   BYTE PTR ds:[ebx]
  42e48a:	dec    esp
  42e48b:	jl     0x42e50b
  42e48d:	xlat   BYTE PTR ds:[ebx]
  42e48e:	mov    ecx,0x3aef6d6b
  42e493:	or     eax,DWORD PTR [eax]
	...
  42e4a5:	add    BYTE PTR [eax],al
  42e4a7:	add    BYTE PTR [edx+0x72],ah
  42e4aa:	or     esi,DWORD PTR [edx+0x441d2f61]
  42e4b0:	ds xchg edx,eax
  42e4b2:	or     eax,DWORD PTR [ebp-0x17643]
  42e4b8:	jmp    0xa26f06f2
  42e4bd:	or     edx,eax
  42e4bf:	and    esi,DWORD PTR [esi]
  42e4c1:	xchg   edi,eax
  42e4c2:	inc    ebp
  42e4c3:	jp     0x42e483
  42e4c5:	inc    esi
  42e4c6:	dec    eax
  42e4c7:	or     ebx,esi
  42e4c9:	and    DWORD PTR [esi-0x5],0xe066d8cd
  42e4d0:	xor    DWORD PTR [ebp-0x218f319],0x506203f8
  42e4da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4db:	mov    esp,DWORD PTR [esi]
  42e4dd:	mov    ch,0xd7
  42e4df:	sbb    BYTE PTR [ebx+ecx*8-0x269d5294],bl
  42e4e6:	out    0x18,eax
  42e4e8:	cmp    ebp,ebp
  42e4ea:	fiadd  DWORD PTR [eax+0x3e7d8e3]
  42e4f0:	pop    ecx
  42e4f1:	inc    ebx
  42e4f2:	out    0x1a,eax
  42e4f4:	es mov ch,0xc7
  42e4f7:	(bad)  
  42e4f8:	arpl   WORD PTR [eax],bx
  42e4fa:	sub    DWORD PTR [ecx],ebx
  42e4fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4fd:	cld    
  42e4fe:	(bad)
  42e502:	daa    
  42e503:	add    esp,DWORD PTR [edx-0x27]
  42e506:	pop    esi
  42e507:	enter  0xe981,0x66
  42e50b:	loopne 0x42e50d
	...
  42e51d:	add    BYTE PTR [eax],al
  42e51f:	add    BYTE PTR [ecx-0x20f3184f],al
  42e525:	dec    ecx
  42e526:	push   ecx
  42e527:	pop    ebp
  42e528:	cmp    DWORD PTR [edi+0x1eb40d2f],edi
  42e52e:	lock add esp,DWORD PTR [edx+0x4e]
  42e532:	ins    BYTE PTR es:[edi],dx
  42e533:	sub    BYTE PTR [esi-0x5dfc1828],al
  42e539:	push   eax
  42e53a:	lods   al,BYTE PTR ds:[esi]
  42e53b:	daa    
  42e53c:	dec    esi
  42e53d:	sub    DWORD PTR [edx-0x3c4a29a4],edx
  42e543:	add    ah,BYTE PTR [edx-0x27]
  42e546:	outs   dx,BYTE PTR ds:[esi]
  42e547:	aaa    
  42e548:	stc    
  42e549:	inc    ebp
  42e54a:	int3   
  42e54b:	mov    edi,0xb4e7d962
  42e550:	call   0x6302b19a
  42e555:	(bad)  
  42e557:	pop    esp
  42e558:	push   ss
  42e559:	mov    dh,0x0
  42e55b:	xchg   ebp,eax
  42e55c:	pusha  
  42e55d:	fld    DWORD PTR [eax]
  42e55f:	cwde   
  42e560:	ficom  DWORD PTR [edx+0x7e39dce9]
  42e566:	cli    
  42e567:	xor    ah,ch
  42e569:	cdq    
  42e56a:	or     ch,BYTE PTR [esi+edx*1-0x33]
  42e56e:	add    cl,ch
  42e570:	fimul  DWORD PTR [ebp+0x25]
  42e573:	sub    DWORD PTR [ecx-0x27],esp
  42e576:	add    BYTE PTR [edx-0x5b],dh
  42e579:	mov    dh,0x34
  42e57b:	repnz aad 0xb6
  42e57e:	adc    BYTE PTR [edx],bh
  42e580:	in     eax,dx
  42e581:	jo     0x42e585
  42e583:	add    DWORD PTR [eax],eax
	...
  42e595:	add    BYTE PTR [eax],al
  42e597:	add    BYTE PTR [esi-0x27],bl
  42e59a:	jge    0x42e5ba
  42e59c:	cmp    BYTE PTR [edx-0x79],0x65
  42e5a0:	cmp    eax,0x61e90019
  42e5a5:	add    eax,0x728c289
  42e5aa:	test   DWORD PTR [edx+0x2e8819a1],edi
  42e5b0:	and    al,cl
  42e5b2:	inc    ecx
  42e5b3:	in     eax,dx
  42e5b4:	pop    esi
  42e5b5:	dec    edi
  42e5b6:	je     0x42e61e
  42e5b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e5b9:	jle    0x42e5a3
  42e5bb:	mov    DWORD PTR [esi-0x1a9d0582],edx
  42e5c1:	mov    ah,0x40
  42e5c3:	call   0xd22abf29
  42e5c8:	xchg   BYTE PTR [esi-0x6],bh
  42e5cb:	add    bl,bh
  42e5cd:	in     eax,dx
  42e5ce:	or     DWORD PTR [edx-0x55],ebp
  42e5d1:	xchg   dl,bh
  42e5d3:	cs pop esi
  42e5d5:	inc    edi
  42e5d6:	(bad)  
  42e5d7:	fst    DWORD PTR [ebx-0x45]
  42e5da:	cmp    eax,0x14b62570
  42e5df:	ins    DWORD PTR es:[edi],dx
  42e5e0:	ins    DWORD PTR es:[edi],dx
  42e5e1:	mov    ch,0x50
  42e5e3:	call   0xb7bf49
  42e5e8:	cld    
  42e5e9:	push   eax
  42e5ea:	dec    esi
  42e5eb:	xor    ah,cl
  42e5ed:	arpl   WORD PTR [ecx+eax*1+0x41],cx
  42e5f1:	rcl    BYTE PTR [eax],cl
  42e5f3:	add    DWORD PTR [esi+0x576c87d8],0xffffff81
  42e5fa:	xor    al,BYTE PTR [eax+eax*1]
	...
  42e60d:	add    BYTE PTR [eax],al
  42e60f:	add    BYTE PTR [edx-0x4b607b32],bh
  42e615:	aad    0x0
  42e617:	jmp    0x38d2b7
  42e61c:	lods   al,BYTE PTR ds:[esi]
  42e61d:	addr16 inc esp
  42e61f:	add    DWORD PTR [eax],ecx
  42e621:	sbb    bl,bh
  42e623:	mov    BYTE PTR [edi],bl
  42e625:	mov    ecx,0xb9473b1c
  42e62a:	adc    al,0xf
  42e62c:	test   dl,0xe8
  42e62f:	(bad)  
  42e630:	fsub   st(3),st
  42e632:	adc    BYTE PTR [edi],0x8b
  42e635:	aad    0x5
  42e637:	mov    dh,0x36
  42e639:	aam    0x5
  42e63b:	mov    dh,0x36
  42e63d:	sar    DWORD PTR [edi-0x2f17ac1e],cl
  42e643:	mov    eax,DWORD PTR [ecx]
  42e645:	popa   
  42e646:	les    eax,FWORD PTR [ebx]
  42e648:	loopne 0x42e5de
  42e64a:	pop    es
  42e64b:	mov    dh,0x6
  42e64d:	fiadd  WORD PTR ds:0xbfdf06b6
  42e653:	loop   0x42e698
  42e655:	call   0x5dbe1a2a
  42e65a:	jge    0x42e680
  42e65c:	sub    al,dl
  42e65e:	or     esi,0x89c1090c
  42e664:	(bad)  
  42e665:	fsub   DWORD PTR [ebx+ebp*8]
  42e668:	pop    edi
  42e669:	rol    al,1
  42e66b:	inc    eax
  42e66c:	nop
  42e66d:	and    esi,DWORD PTR [ebx+0x76145cff]
  42e673:	mov    DWORD PTR [eax],eax
	...
  42e685:	add    BYTE PTR [eax],al
  42e687:	add    BYTE PTR [edx+0x46],ah
  42e68a:	sbb    ch,BYTE PTR [eax]
  42e68c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e68d:	fcmovnb st,st(5)
  42e68f:	and    al,BYTE PTR cs:[ebx-0x75]
  42e693:	enter  0xe5c9,0x11
  42e697:	shl    BYTE PTR [edx],0xfb
  42e69a:	inc    esi
  42e69b:	xchg   DWORD PTR [edx+0xc0b6bdb],esi
  42e6a1:	mov    dh,0x3
  42e6a3:	das    
  42e6a4:	mov    ds:0x7e448bc2,al
  42e6a9:	fiadd  DWORD PTR ds:0x458427b2
  42e6af:	ficomp WORD PTR [edx-0x15]
  42e6b2:	inc    edi
  42e6b3:	pop    es
  42e6b4:	mov    dl,0x8b
  42e6b6:	mov    ds:0x1356208d,eax
  42e6bb:	into   
  42e6bc:	and    bl,bh
  42e6be:	inc    ebp
  42e6bf:	pop    ds
  42e6c0:	cwde   
  42e6c1:	outs   dx,DWORD PTR ds:[esi]
  42e6c2:	cwde   
  42e6c3:	nop
  42e6c4:	bound  edi,QWORD PTR [ebx-0x4115003c]
  42e6ca:	and    BYTE PTR [ebx*2-0x170779d8],ah
  42e6d1:	rol    DWORD PTR [eax*2-0x469ac19],0x55
  42e6d9:	out    dx,eax
  42e6da:	(bad)  
  42e6db:	or     ah,BYTE PTR [esi-0x604df8ae]
  42e6e1:	add    cl,0xf1
  42e6e4:	out    0xdd,al
  42e6e6:	mov    ah,0x0
  42e6e8:	bound  eax,QWORD PTR [edx+0x8905]
	...
  42e6fe:	add    BYTE PTR [eax],al
  42e700:	sahf   
  42e701:	fdivrp st(4),st
  42e703:	mov    BYTE PTR [esi-0x5977031a],cl
  42e709:	fisub  WORD PTR [ecx+ecx*4]
  42e70c:	xchg   dh,ah
  42e70e:	clc    
  42e70f:	or     ah,dh
  42e711:	test   DWORD PTR ds:0x6ed96200,eax
  42e717:	mov    dl,0x4d
  42e719:	bound  esi,QWORD PTR [edi+ebx*1-0xa617b2]
  42e720:	pop    ebp
  42e721:	fs mov ah,0x1f
  42e724:	dec    edx
  42e725:	bound  ebp,QWORD PTR [edi+ebx*1-0x3cd8537e]
  42e72c:	jmp    0x6ca1:0x9527cc1c
  42e733:	push   ss
  42e734:	lea    ebx,[eax]
  42e736:	push   esp
  42e737:	or     DWORD PTR ds:0x6203ed2e,edi
  42e73d:	call   0xf527ecdb
  42e742:	add    esi,eax
  42e744:	fs call 0x649ce7c3
  42e74a:	jl     0x42e76c
  42e74c:	es (bad) 
  42e74f:	add    ecx,DWORD PTR [ebx+0x1d]
  42e752:	add    al,0x24
  42e754:	pop    ecx
  42e755:	pop    ebp
  42e756:	push   0xfffffff2
  42e758:	jge    0x42e7d1
  42e75a:	outs   dx,DWORD PTR ds:[esi]
  42e75b:	rol    BYTE PTR [ecx-0x3b],0x27
  42e75f:	mov    esp,DWORD PTR [esi]
  42e761:	mov    ebp,0x1cbb
	...
  42e776:	add    BYTE PTR [eax],al
  42e778:	mov    ds:0x241db4f6,eax
  42e77d:	out    0x63,eax
  42e77f:	xchg   ecx,eax
  42e780:	inc    ecx
  42e781:	ja     0x42e7f6
  42e783:	test   esi,ecx
  42e785:	mov    ebp,0x5c5903c3
  42e78a:	mov    al,ds:0x6ed96209
  42e78f:	inc    ebp
  42e790:	jmp    0x42e7af
  42e792:	or     al,0xf4
  42e794:	je     0x42e739
  42e796:	fild   DWORD PTR [esi+0x3e7d9e8]
  42e79c:	push   ebp
  42e79d:	push   ss
  42e79e:	int3   
  42e79f:	or     BYTE PTR [ebp+0x61e90149],dl
  42e7a5:	(bad)  [ecx]
  42e7a7:	ja     0x42e808
  42e7a9:	pop    esi
  42e7aa:	jge    0x42e779
  42e7ac:	or     eax,0x59e5b2e4
  42e7b1:	pop    esi
  42e7b2:	mov    ebp,0xda25cd
  42e7b7:	jmp    0xc9680504
  42e7bc:	lods   eax,DWORD PTR ds:[esi]
  42e7bd:	fdivr  DWORD PTR ds:0x7d9f76a8
  42e7c3:	adc    bh,bl
  42e7c5:	gs and eax,0xd960a9
  42e7cb:	jb     0x42e7ca
  42e7cd:	mov    edx,0xba8d6a10
  42e7d2:	sub    cl,ch
  42e7d4:	pop    edx
  42e7d5:	pop    esp
  42e7d6:	imul   eax,esi,0xa136720a
	...
  42e7f0:	push   0xfffffff7
  42e7f2:	or     eax,0x85d961d7
  42e7f7:	ins    DWORD PTR es:[edi],dx
  42e7f8:	ins    DWORD PTR es:[edi],dx
  42e7f9:	adc    eax,0x1961e900
  42e7fe:	mov    BYTE PTR ds:0x3750ad42,ch
  42e804:	sbb    ebp,DWORD PTR ds:0xd9613525
  42e80a:	add    BYTE PTR [edx+0x34],ah
  42e80d:	jb     0x42e7c4
  42e80f:	int    0x15
  42e811:	fld    DWORD PTR [eax]
  42e813:	jmp    0xcdf85b2a
  42e818:	adc    eax,0xaae900d9
  42e81d:	sub    eax,0xd960c525
  42e822:	add    BYTE PTR [eax-0x7b16621a],bh
  42e828:	ret    
  42e829:	jb     0x42e825
  42e82b:	mov    eax,fs:0xe30083e2
  42e831:	jecxz  0x42e833
  42e833:	add    BYTE PTR [eax-0x5bfdaa2],dl
  42e839:	fld    DWORD PTR [eax]
  42e83b:	mov    edi,DWORD PTR [edi+0x4b34d5]
  42e841:	cs push ds
  42e843:	adc    al,bl
  42e845:	dec    esi
  42e846:	call   0x11cd70a
  42e84b:	adc    esp,0xffffff8d
  42e84e:	cli    
  42e84f:	mov    dl,BYTE PTR [edi-0x2a]
  42e852:	inc    eax
  42e853:	add    DWORD PTR [eax],eax
	...
  42e865:	add    BYTE PTR [eax],al
  42e867:	add    bl,cl
  42e869:	fnstenv [eax+ecx*4+0x10]
  42e86d:	mov    bl,0x6e
  42e86f:	test   BYTE PTR [eax],cl
  42e871:	sbb    al,BYTE PTR [ecx-0x77]
  42e874:	mov    WORD PTR [ecx],?
  42e876:	cmp    DWORD PTR [edi+0x17],eax
  42e879:	fiadd  WORD PTR [esi-0x9f26b8b]
  42e87f:	jmp    0x38f0f7
  42e884:	adc    BYTE PTR [ecx+0x25],ah
  42e887:	inc    eax
  42e888:	mov    bl,cl
  42e88a:	add    cl,ch
  42e88c:	and    ecx,DWORD PTR [esi]
  42e88e:	idiv   bh
  42e890:	mov    BYTE PTR [ecx],bl
  42e892:	inc    ecx
  42e893:	mov    DWORD PTR [edi-0x47],ecx
  42e896:	adc    al,0x3b
  42e898:	mov    bl,0x90
  42e89a:	push   ds
  42e89b:	cmp    esi,DWORD PTR [ecx+eax*4]
  42e89e:	pop    es
  42e89f:	add    DWORD PTR [edi],0xffffffe1
  42e8a2:	add    BYTE PTR [eax],al
  42e8a4:	push   esp
  42e8a5:	addr16 cli 
  42e8a7:	inc    edx
  42e8a8:	and    dh,BYTE PTR ds:0xf544201e
  42e8ae:	ins    BYTE PTR es:[edi],dx
  42e8af:	adc    eax,0x4481d93b
  42e8b4:	outs   dx,DWORD PTR ds:[esi]
  42e8b5:	imul   edi,DWORD PTR [edx],0x14d4ff89
  42e8bb:	cmp    esp,DWORD PTR [edx-0x3f]
  42e8be:	rcr    bl,cl
  42e8c0:	imul   edi,DWORD PTR [eax+0x24ff8401],0x36e1fb52
  42e8ca:	sbb    ah,BYTE PTR [eax+eax*1]
	...
  42e8dd:	add    BYTE PTR [eax],al
  42e8df:	add    BYTE PTR [edx+0x7b],ah
  42e8e2:	sbb    DWORD PTR [ecx],0x86fe8255
  42e8e8:	and    edx,ebp
  42e8ea:	shl    BYTE PTR [ebx],0x52
  42e8ed:	ja     0x42e937
  42e8ef:	or     ebx,edi
  42e8f1:	sbb    eax,DWORD PTR ds:0xb3876200
  42e8f7:	imul   ebp,DWORD PTR [ebp-0x1],0xffffff83
  42e8fb:	add    BYTE PTR [edx-0x7e],ah
  42e8fe:	add    esi,DWORD PTR [edx+0x23ba2961]
  42e904:	sub    dh,0xfb
  42e907:	and    esi,DWORD PTR ds:[edi-0x183583ba]
  42e90e:	and    DWORD PTR [edx+eiz*1],0xd9fffe81
  42e915:	mov    esi,0x1ee11020
  42e91a:	and    DWORD PTR [eax],ebp
  42e91c:	bound  eax,QWORD PTR [ebx+0x2b845d81]
  42e922:	push   ebx
  42e923:	aaa    
  42e924:	stos   BYTE PTR es:[edi],al
  42e925:	xchg   ebx,eax
  42e926:	or     BYTE PTR [eax],0x57
  42e929:	cmp    dh,0x86
  42e92c:	ficomp WORD PTR [esi-0x7d9dff4e]
  42e932:	mov    esi,0xa9e1e88
  42e937:	push   eax
  42e938:	mov    ah,0x5b
  42e93a:	mov    ah,BYTE PTR [esi+esi*4]
  42e93d:	cmp    esi,0x5354d9ff
  42e943:	mov    ah,0x0
	...
  42e955:	add    BYTE PTR [eax],al
  42e957:	add    BYTE PTR [esi-0x1a],bh
  42e95a:	add    eax,DWORD PTR [eax]
  42e95c:	(bad)  
  42e95d:	fnstcw WORD PTR [edx-0x444311aa]
  42e963:	add    al,0x62
  42e965:	fst    DWORD PTR [edx-0x71]
  42e968:	jle    0x42e97f
  42e96a:	jmp    0x6f4d4b72
  42e96f:	dec    edx
  42e970:	or     dh,BYTE PTR [edi]
  42e972:	inc    ebp
  42e973:	push   esi
  42e974:	or     DWORD PTR [esi+0x28],ebx
  42e977:	push   es
  42e978:	fild   WORD PTR [ebp-0x1f]
  42e97b:	add    esp,DWORD PTR [edx+0x60]
  42e97e:	je     0x42e99f
  42e980:	mov    ds:0xe503e7da,al
  42e985:	sbb    al,0xcc
  42e987:	setge  BYTE PTR [eax-0x178de055]
  42e98e:	inc    esp
  42e98f:	ins    BYTE PTR es:[edi],dx
  42e990:	push   cs
  42e991:	int    0xe7
  42e993:	add    ecx,DWORD PTR [ebp-0xc]
  42e996:	jae    0x42e99b
  42e998:	frstor [esp+eax*8-0x3d]
  42e99c:	(bad)  
  42e99d:	(bad)  
  42e99f:	iret   
  42e9a0:	(bad)  [edi-0x581e3140]
  42e9a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9a7:	(bad)  
  42e9a8:	ficomp DWORD PTR [ebx]
  42e9aa:	sub    al,0x1b
  42e9ac:	and    ebp,esi
  42e9ae:	repnz test DWORD PTR [edi],ecx
  42e9b1:	je     0x42e96e
  42e9b3:	push   ebp
  42e9b4:	jnp    0x42e9db
  42e9b6:	mov    esp,0x5c5f8955
  42e9bb:	and    BYTE PTR [eax],al
	...
  42e9cd:	add    BYTE PTR [eax],al
  42e9cf:	add    BYTE PTR [edx],ah
  42e9d1:	(bad)  
  42e9d3:	add    ecx,DWORD PTR [ebx+0x69559b00]
  42e9d9:	jecxz  0x42ea34
  42e9db:	scas   eax,DWORD PTR es:[edi]
  42e9dc:	(bad)  
  42e9dd:	in     al,0x51
  42e9df:	mov    edi,0xc869a5f
  42e9e4:	pop    ebp
  42e9e5:	mov    DWORD PTR [edi+0x10ddb43],esi
  42e9eb:	int    0x81
  42e9ed:	sbb    DWORD PTR [eax+0x7dbd8225],ecx
  42e9f3:	sub    al,0x63
  42e9f5:	or     BYTE PTR [ecx+0x9d961e9],0x9f
  42e9fc:	in     eax,0xd9
  42e9fe:	mov    edi,0x45606e49
  42ea03:	or     eax,0xa4b2de3e
  42ea08:	arpl   ax,sp
  42ea0a:	inc    esp
  42ea0b:	or     eax,0x69c0c23e
  42ea10:	sbb    dh,BYTE PTR [edi-0x781556d3]
  42ea16:	or     dh,BYTE PTR [ebp-0x5a]
  42ea19:	jp     0x42e9e9
  42ea1b:	fisub  DWORD PTR [ecx-0x16c879e7]
  42ea21:	sbb    eax,0x6ef9d125
  42ea26:	cli    
  42ea27:	(bad)  
  42ea28:	mov    dh,0x1d
  42ea2a:	out    0x9b,al
  42ea2c:	jb     0x42e9c7
  42ea2e:	inc    ecx
  42ea2f:	bound  esi,QWORD PTR [esi+0x7a]
  42ea32:	in     al,dx
  42ea33:	sbb    al,BYTE PTR [eax]
	...
  42ea45:	add    BYTE PTR [eax],al
  42ea47:	add    BYTE PTR [esi],bl
  42ea49:	sbb    DWORD PTR [eax-0x7a3e7ddb],ecx
  42ea4f:	mov    edi,0xa92e7a3a
  42ea54:	mov    eax,ds:0x460d4561
  42ea59:	fidiv  WORD PTR [edx-0x1e679edc]
  42ea5f:	loope  0x42ea39
  42ea61:	sbb    eax,0x27670925
  42ea66:	inc    esp
  42ea67:	jmp    0x42ead1
  42ea69:	sbb    eax,0x87dac925
  42ea6e:	out    0x7f,al
  42ea70:	fdiv   QWORD PTR [ebx-0xd6e9d3f]
  42ea76:	fiadd  WORD PTR [eax]
  42ea78:	dec    edx
  42ea79:	pop    edi
  42ea7a:	push   ebp
  42ea7b:	and    al,0x27
  42ea7d:	fnsave [esi+0x3a90d390]
  42ea83:	add    BYTE PTR [esp+ecx*2],bl
  42ea86:	add    DWORD PTR [eax],0x44fa9640
  42ea8c:	(bad)  
  42ea8d:	push   ss
  42ea8e:	push   es
  42ea8f:	inc    esp
  42ea90:	not    ecx
  42ea92:	cmp    al,0x89
  42ea94:	(bad)  
  42ea95:	shl    DWORD PTR [eax],1
  42ea97:	setne  BYTE PTR [ebx]
  42ea9a:	cli    
  42ea9b:	inc    esp
  42ea9c:	xchg   edx,eax
  42ea9d:	inc    edx
  42ea9e:	push   ds
  42ea9f:	adc    BYTE PTR [edx-0x7de7e1ce],al
  42eaa5:	jp     0x42eac5
  42eaa7:	sbb    al,0x86
  42eaa9:	test   al,0x5
  42eaab:	mov    es,WORD PTR [eax]
	...
  42eabd:	add    BYTE PTR [eax],al
  42eabf:	add    BYTE PTR [eax-0x27],bh
  42eac2:	add    BYTE PTR [eax],al
  42eac4:	js     0x42eadc
  42eac6:	repz xor DWORD PTR [ebx-0x23],0x5
  42eacb:	xchg   esp,edx
  42eacd:	fild   DWORD PTR [eax]
  42eacf:	add    ah,cl
  42ead1:	rol    BYTE PTR [ebx-0x567bb33],cl
  42ead7:	xor    cl,BYTE PTR [ebx-0x532fcc6a]
  42eadd:	icebp  
  42eade:	pop    edi
  42eadf:	add    edi,DWORD PTR [ebx+0x574487d5]
  42eae5:	jno    0x42ea6a
  42eae7:	dec    edi
  42eae8:	pop    edi
  42eae9:	loop   0x42eac2
  42eaeb:	invd   
  42eaed:	add    eax,DWORD PTR ds:[eax]
  42eaf0:	jnp    0x42eb4c
  42eaf2:	jbe    0x42eb0c
  42eaf4:	jnp    0x42ea7f
  42eaf6:	sbb    BYTE PTR [ebx-0x72af7aac],cl
  42eafc:	inc    esp
  42eafd:	imul   ecx,DWORD PTR [edx+0x51],0x33e8b1f0
  42eb04:	bound  ecx,QWORD PTR ds:0x42e7fb4f
  42eb0a:	inc    BYTE PTR [ebp+ecx*8-0x2600016d]
  42eb11:	(bad)  
  42eb12:	sub    BYTE PTR [eax],dl
  42eb14:	cmp    DWORD PTR [ecx+0x2b5e4b1b],esp
  42eb1a:	sub    eax,0x1ec5573
  42eb1f:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42eb21:	(bad)  
  42eb23:	pop    ss
	...
  42eb38:	jno    0x42eafc
  42eb3a:	les    edi,FWORD PTR [eax]
  42eb3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb3d:	jle    0x42eb3e
  42eb3f:	sub    DWORD PTR [ebp-0x2700016d],0x43
  42eb46:	add    eax,0xfdd59d36
  42eb4b:	sub    DWORD PTR [ecx-0x1600016d],0x26
  42eb52:	and    dl,BYTE PTR [ecx+eiz*4]
  42eb55:	inc    ecx
  42eb56:	jge    0x42eba4
  42eb58:	outs   dx,BYTE PTR ds:[esi]
  42eb5a:	or     eax,esi
  42eb5c:	pop    esp
  42eb5d:	std    
  42eb5e:	pop    ebx
  42eb5f:	cmc    
  42eb60:	pusha  
  42eb61:	cmp    dh,0x86
  42eb64:	and    eax,0x89be1b5e
  42eb69:	retf   0x82fd
  42eb6c:	mov    dh,BYTE PTR [ebx+0x4f]
  42eb6f:	sti    
  42eb70:	popa   
  42eb71:	pushf  
  42eb72:	pop    ebp
  42eb73:	loope  0x42ebd5
  42eb75:	cmp    dh,0x2e
  42eb78:	mov    ds:0x46447bc2,al
  42eb7d:	or     dx,ax
  42eb80:	gs out 0x33,al
  42eb83:	dec    BYTE PTR [ebp-0x9a4f47e]
  42eb89:	jbe    0x42eb0e
  42eb8b:	or     DWORD PTR [ecx+0x3f],esi
  42eb8e:	dec    edi
  42eb8f:	or     ebp,DWORD PTR [ecx+ebx*8+0x70ecc6e6]
  42eb96:	out    dx,al
  42eb97:	xlat   BYTE PTR ds:[ebx]
  42eb98:	inc    ecx
  42eb99:	loopne 0x42ebfc
  42eb9b:	push   eax
	...
  42ebb0:	ins    BYTE PTR es:[edi],dx
  42ebb1:	(bad)  
  42ebb3:	xchg   BYTE PTR [edx-0x23],bl
  42ebb6:	add    esp,esi
  42ebb8:	int3   
  42ebb9:	jno    0x42eba8
  42ebbb:	xlat   BYTE PTR ds:[ebx]
  42ebbc:	sub    DWORD PTR [esi-0x269dfc94],0xffffffda
  42ebc3:	mov    BYTE PTR [edx-0x35],cl
  42ebc6:	out    0x3,eax
  42ebc8:	imul   ebp,eax,0xffffffc7
  42ebcb:	add    bl,bh
  42ebcd:	(bad)  
  42ebce:	test   BYTE PTR [ebx],0x62
  42ebd1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42ebd3:	daa    
  42ebd4:	outs   dx,BYTE PTR ds:[esi]
  42ebd5:	sbb    DWORD PTR [ecx-0x39],esi
  42ebd8:	inc    ecx
  42ebd9:	(bad)  
  42ebdc:	mov    BYTE PTR [esi],ch
  42ebde:	inc    ecx
  42ebdf:	jge    0x42ebdd
  42ebe1:	outs   dx,DWORD PTR ds:[esi]
  42ebe2:	call   0x974084f5
  42ebe7:	pop    esp
  42ebe8:	loop   0x42eb9d
  42ebea:	in     eax,dx
  42ebeb:	fadd   DWORD PTR [ecx]
  42ebed:	sbb    al,0xff
  42ebef:	arpl   WORD PTR [ebp+0x1e7ca899],cx
  42ebf5:	mov    ch,0xdb
  42ebf7:	push   cs
  42ebf8:	mov    dl,0xdf
  42ebfa:	imul   esp,ecx,0xffffffc7
  42ebfd:	outs   dx,DWORD PTR ds:[esi]
  42ebfe:	call   0xdb400511
  42ec03:	xchg   bh,bh
  42ec05:	push   0xffffffe3
  42ec07:	push   ecx
  42ec08:	pop    ecx
  42ec09:	daa    
  42ec0a:	out    0xc4,eax
  42ec0c:	and    al,0x71
  42ec0e:	loope  0x42ec10
  42ec10:	out    0x53,al
  42ec12:	test   BYTE PTR [ebx],0x0
	...
  42ec25:	add    BYTE PTR [eax],al
  42ec27:	add    BYTE PTR [edx+0x5c],ah
  42ec2a:	shl    BYTE PTR [ecx+ebx*2],0x55
  42ec2e:	push   esi
  42ec2f:	test   BYTE PTR [ebp-0x3e0bfe91],0xd8
  42ec36:	add    cl,ch
  42ec38:	bound  edx,QWORD PTR [ebp-0x7e]
  42ec3b:	sti    
  42ec3c:	popa   
  42ec3d:	fld    DWORD PTR [ebp+0x40c53a25]
  42ec43:	pusha  
  42ec44:	sub    bh,BYTE PTR [ebx-0xc602dec]
  42ec4a:	(bad)  
  42ec4b:	nop
  42ec4c:	je     0x42ecbd
  42ec4e:	cli    
  42ec4f:	jmp    0x608485c2
  42ec54:	sub    bh,BYTE PTR [ebx-0x1d8e4dec]
  42ec5a:	mov    WORD PTR [edx],cs
  42ec5c:	fld    DWORD PTR fs:[eax]
  42ec5f:	and    dh,bl
  42ec61:	add    cl,BYTE PTR [edx]
  42ec63:	push   0xffffffcc
  42ec65:	jl     0x42ec61
  42ec67:	dec    esi
  42ec68:	arpl   WORD PTR [ebx],bp
  42ec6a:	(bad)  
  42ec6b:	test   eax,0xb50871e6
  42ec70:	adc    eax,esi
  42ec72:	clc    
  42ec73:	or     DWORD PTR [edx],ebx
  42ec75:	fdivr  DWORD PTR [ebx]
  42ec77:	mov    DWORD PTR [esi-0x27],ebx
  42ec7a:	add    dh,dh
  42ec7c:	in     al,0x15
  42ec7e:	psubsw mm4,QWORD PTR [ecx+0x56]
  42ec82:	inc    ebp
  42ec83:	int    0xd5
  42ec85:	scas   al,BYTE PTR es:[edi]
  42ec86:	xchg   DWORD PTR [ebp+0x2b35c57d],esp
	...
  42eca0:	mov    al,0x89
  42eca2:	call   0x11c4db5
  42eca7:	mov    edx,0xa5881921
  42ecac:	jge    0x42ec73
  42ecae:	xor    eax,0xe15d62b9
  42ecb3:	call   0x3678c619
  42ecb8:	and    bl,0x7d
  42ecbb:	imul   BYTE PTR [edi]
  42ecbd:	jb     0x42ecb9
  42ecbf:	add    BYTE PTR [eax+edx*2+0x21f842fa],dl
  42ecc6:	add    edi,DWORD PTR [edi+ebx*4+0x55]
  42ecca:	stc    
  42eccb:	or     eax,0x12095894
  42ecd0:	jnp    0x42ecac
  42ecd2:	cmp    eax,DWORD PTR [ebp+0xf00da7b]
  42ecd8:	iret   
  42ecd9:	pop    ds
  42ecda:	adc    BYTE PTR [eax],al
  42ecdc:	dec    ebx
  42ecdd:	in     eax,dx
  42ecde:	inc    esp
  42ecdf:	and    al,0x2f
  42ece1:	call   0xc233:0x661f4489
  42ece8:	xor    eax,0x4aa8e7af
  42eced:	fiadd  DWORD PTR [eax]
  42ecef:	xor    edi,DWORD PTR [ebx-0x66]
  42ecf2:	mov    DWORD PTR [edi+ebx*2+0x71],eax
  42ecf6:	xor    edx,eax
  42ecf8:	add    al,0xee
  42ecfa:	xchg   edi,eax
  42ecfb:	add    DWORD PTR [ebx],ecx
  42ecfd:	fidiv  DWORD PTR [ecx]
  42ecff:	pop    edi
  42ed00:	aaa    
  42ed01:	fnstcw WORD PTR [ecx-0x30]
	...
  42ed18:	dec    edx
  42ed19:	or     esi,esi
  42ed1b:	(bad)  
  42ed1d:	aad    0x39
  42ed1f:	xor    DWORD PTR [ebx],0x6c
  42ed22:	pop    es
  42ed23:	mov    WORD PTR ds:0x78fffa6b,?
  42ed29:	and    cl,BYTE PTR [esi+edi*2]
  42ed2c:	rcr    dh,0x83
  42ed2f:	add    bl,cl
  42ed31:	fld    DWORD PTR ds:0xfa6b8d85
  42ed37:	call   DWORD PTR [eax-0x6a]
  42ed3a:	push   ds
  42ed3b:	adc    al,0xb
  42ed3d:	repz inc esp
  42ed3f:	and    al,0x8f
  42ed41:	fdivr  QWORD PTR [edx+0x600bf67e]
  42ed47:	add    DWORD PTR [ebx+0x62c029d9],edi
  42ed4d:	sar    BYTE PTR [ebx+0x44],0x3e
  42ed51:	fs pop es
  42ed53:	rcr    BYTE PTR [ebp-0x1c],1
  42ed56:	scas   al,BYTE PTR es:[edi]
  42ed57:	add    BYTE PTR [edx-0x80],ah
  42ed5a:	pop    es
  42ed5b:	pop    ebx
  42ed5c:	push   cs
  42ed5d:	ja     0x42edde
  42ed5f:	call   0x6ab4:0xafe806a
  42ed66:	ja     0x42edab
  42ed68:	cs ret 
  42ed6a:	jbe    0x42ed70
  42ed6c:	arpl   WORD PTR [esi-0x3720f4fe],bx
  42ed72:	repz dec DWORD PTR [ebp-0x18]
  42ed76:	enter  0x6e23,0xc2
  42ed7a:	jnp    0x42edc0
	...
  42ed90:	xchg   BYTE PTR [esi+0x4ab4be07],cl
  42ed96:	pop    esp
  42ed97:	and    eax,0x2efe8263
  42ed9c:	and    al,BYTE PTR [ebx+0x7d]
  42ed9f:	inc    esp
  42eda0:	inc    esi
  42eda1:	outs   dx,BYTE PTR ds:[esi]
  42eda2:	pop    es
  42eda3:	shl    BYTE PTR [ebp+0xe],1
  42eda6:	repz add BYTE PTR [edx-0x7e],ah
  42edaa:	pop    es
  42edab:	pop    ebx
  42edac:	jbe    0x42ee29
  42edae:	jg     0x42ee0e
  42edb0:	push   0xffffff82
  42edb2:	dec    BYTE PTR [edx]
  42edb4:	lods   al,BYTE PTR ds:[esi]
  42edb5:	ja     0x42ee2e
  42edb7:	inc    ebx
  42edb8:	ss aas 
  42edba:	js     0x42edc0
  42edbc:	arpl   WORD PTR [esi-0x7b19f4fe],dx
  42edc2:	cmc    
  42edc3:	call   ebp
  42edc5:	test   eax,0x7d427623
  42edcb:	inc    esp
  42edcc:	jle    0x42ed54
  42edce:	pop    es
  42edcf:	mov    esi,0xe95bca3c
  42edd4:	bound  eax,QWORD PTR [edx-0x265dd102]
  42edda:	daa    
  42eddb:	jge    0x42edfb
  42eddd:	mov    ch,0xf3
  42eddf:	or     dh,BYTE PTR [edx+0x622963dc]
  42ede5:	(bad)  
  42ede7:	adc    bl,BYTE PTR [ebx-0x65100e6]
  42eded:	(bad)  [esi-0x61]
  42edf0:	jb     0x42ee5e
  42edf2:	mov    bl,0xfe
	...
  42ee08:	mov    bl,0xe0
  42ee0a:	pop    esi
  42ee0b:	(bad)  
  42ee0c:	xor    DWORD PTR [edi-0x14],ebx
  42ee0f:	add    al,0x35
  42ee11:	mov    ds:0x9a7fc329,al
  42ee16:	jecxz  0x42eda0
  42ee18:	push   esi
  42ee19:	leave  
  42ee1a:	out    0x3,eax
  42ee1c:	in     eax,0x14
  42ee1e:	int3   
  42ee1f:	test   DWORD PTR [ebp+0x56282462],0xecda5b0
  42ee29:	add    BYTE PTR [ebx+0x3],0x62
  42ee2d:	fst    DWORD PTR [esi]
  42ee2f:	inc    esp
  42ee30:	mov    ds:0x7627a462,al
  42ee35:	mov    al,0x37
  42ee37:	(bad)  
  42ee38:	jmp    0x6246d68d
  42ee3d:	test   al,0x30
  42ee3f:	les    ecx,FWORD PTR [esp+ecx*1-0x34]
  42ee43:	(bad)  
  42ee44:	jl     0x42ee45
  42ee46:	aaa    
  42ee47:	dec    esi
  42ee48:	stc    
  42ee49:	(bad)  [ecx-0x6]
  42ee4c:	in     al,0x13
  42ee4e:	fdivr  QWORD PTR [ecx+0x5e]
  42ee51:	fcmovbe st,st(6)
  42ee53:	cmp    al,0x23
  42ee55:	sbb    dh,al
  42ee57:	inc    esp
  42ee58:	imul   edx,DWORD PTR [ebp+0x4e],0x6f6bcdf3
  42ee5f:	mov    DWORD PTR [ecx+0x267ca7c5],0x68dd00b5
  42ee69:	sub    edi,DWORD PTR [ebx+0x14]
	...
  42ee80:	or     BYTE PTR [ecx],al
  42ee82:	cs test eax,0x545609e
  42ee88:	call   0x59a2:0xc555d0a2
  42ee8f:	cmp    eax,0xeea7ea8f
  42ee94:	popa   
  42ee95:	(bad)  [ecx]
  42ee97:	ja     0x42ef14
  42ee99:	push   edx
  42ee9a:	inc    edx
  42ee9b:	std    
  42ee9c:	mov    ds:0x45e80555,al
  42eea1:	leave  
  42eea2:	or     DWORD PTR [ebp+ebx*8-0x38],ebp
  42eea6:	add    cl,ch
  42eea8:	ficom  DWORD PTR ds:0x6221fd25
  42eeae:	inc    ebp
  42eeaf:	lds    edx,FWORD PTR [ebp-0x5c]
  42eeb2:	mov    esi,0x2e727607
  42eeb7:	mov    edx,0x2d8819a1
  42eebc:	mov    al,ch
  42eebe:	xor    eax,0x35b31299
  42eec3:	mov    BYTE PTR ds:0x66d57de0,0xd9
  42eeca:	add    dh,ah
  42eecc:	out    dx,eax
  42eecd:	rol    BYTE PTR [ebp-0x79558a5a],cl
  42eed3:	in     eax,dx
  42eed4:	pusha  
  42eed5:	mov    ch,0x10
  42eed7:	out    dx,al
  42eed8:	in     eax,0x9
  42eeda:	adc    ecx,ebp
  42eedc:	popa   
  42eedd:	push   edx
  42eede:	inc    ebp
  42eedf:	add    eax,0xad87aaea
	...
  42eef8:	cmp    eax,0xac2b35c5
  42eefd:	add    BYTE PTR [esi-0x7a2e8253],0x5d
  42ef04:	jp     0x42ef1f
  42ef06:	add    BYTE PTR [eax],al
  42ef08:	mov    ebx,0xa75431d6
  42ef0d:	mov    dh,0x5
  42ef0f:	test   BYTE PTR [eax],dh
  42ef11:	div    ebp
  42ef13:	(bad)  
  42ef14:	cmp    BYTE PTR [ecx+0x6dbb241e],cl
  42ef1a:	test   DWORD PTR [ebx-0x6f],ebp
  42ef1d:	(bad)  
  42ef1e:	add    BYTE PTR [ebx+0x5c8820cb],al
  42ef24:	addr16 jno 0x42efa2
  42ef27:	clc    
  42ef28:	mov    WORD PTR [ebp+0x7f],gs
  42ef2b:	push   esp
  42ef2c:	jno    0x42ef04
  42ef2e:	add    bh,bh
  42ef30:	addr16 push edx
  42ef32:	or     al,0x78
  42ef34:	cmp    ebp,edx
  42ef36:	or     DWORD PTR [edi+0x4f],0xc80fd7e0
  42ef3d:	pusha  
  42ef3e:	add    DWORD PTR [eax],eax
  42ef40:	dec    ebx
  42ef41:	pop    ecx
  42ef42:	jbe    0x42ef5c
  42ef44:	cmp    eax,DWORD PTR [edx+0x7d648b14]
  42ef4a:	push   eax
  42ef4b:	lea    eax,[ecx+ebp*2-0x4e3faeb6]
  42ef52:	call   0xf65f61f6
  42ef57:	test   DWORD PTR [ebx-0x7d],edi
  42ef5a:	sub    cl,BYTE PTR [ebx+0x0]
	...
  42ef70:	xlat   BYTE PTR ds:[ebx]
  42ef71:	mov    cl,0x10
  42ef73:	jmp    0x42ef82
  42ef75:	rol    DWORD PTR [ebp+0x1c],1
  42ef78:	jo     0x42ef38
  42ef7a:	ins    DWORD PTR es:[edi],dx
  42ef7b:	pop    ss
  42ef7c:	xchg   ecx,eax
  42ef7d:	fnstenv [edx]
  42ef7f:	inc    edi
  42ef80:	outs   dx,DWORD PTR ds:[esi]
  42ef81:	or     BYTE PTR [edx],0x33
  42ef84:	dec    ebx
  42ef85:	xchg   esi,eax
  42ef86:	cmp    DWORD PTR [edi+0x1f],eax
  42ef89:	or     BYTE PTR [esi],0x8a
  42ef8c:	mov    eax,0xae4732d6
  42ef91:	add    DWORD PTR [esi],0x773e6243
  42ef97:	push   esp
  42ef98:	xchg   BYTE PTR [eax+0x9],dh
  42ef9b:	push   esp
  42ef9c:	jle    0x42ef3e
  42ef9e:	retf   0xe9a6
  42efa1:	sti    
  42efa2:	and    DWORD PTR [eax+0x63],eax
  42efa5:	cmp    dh,0x7e
  42efa8:	cs xchg esp,eax
  42efaa:	push   ss
  42efab:	add    BYTE PTR [ebp-0x3],dl
  42efae:	push   edx
  42efaf:	loopne 0x42ef4e
  42efb1:	mov    cl,BYTE PTR [edx]
  42efb3:	pop    esp
  42efb4:	ds ins BYTE PTR es:[edi],dx
  42efb6:	idiv   DWORD PTR [ebp-0x17]
  42efb9:	mov    bh,dh
  42efbb:	(bad)  
  42efbc:	fsincos 
  42efbe:	and    BYTE PTR [ebx+eiz*2-0x80],bl
  42efc2:	(bad)  
  42efc3:	aas    
  42efc4:	jmp    0x42ef81
  42efc6:	and    BYTE PTR [edx+edx*1],dh
  42efc9:	ret    0xb445
  42efcc:	ds adc al,0x4
  42efcf:	add    BYTE PTR [edx-0x15],ah
  42efd2:	das    
  42efd3:	sti    
	...
  42efe8:	push   cs
  42efe9:	xchg   edi,eax
  42efea:	mov    ds:0xaf726200,al
  42efef:	cli    
  42eff0:	push   cs
  42eff1:	xchg   edi,eax
  42eff2:	mov    ds:0x47726200,al
  42eff7:	mov    ah,0x7e
  42eff9:	into   
  42effa:	add    eax,DWORD PTR [eax]
  42effc:	(bad)  
  42effe:	jns    0x42efc7
  42f000:	cmp    al,dh
  42f002:	fs sti 
  42f004:	sbb    eax,0x65c0812c
  42f009:	cmc    
  42f00a:	add    eax,0x7b726204
  42f00f:	mov    WORD PTR [esi],?
  42f011:	xor    al,BYTE PTR ds:0xc0eb6200
  42f017:	and    ebp,DWORD PTR [esi]
  42f019:	imul   esp,DWORD PTR [edx-0x76dca9dd],0xffffffe9
  42f020:	popf   
  42f021:	fptan  
  42f023:	add    esp,DWORD PTR [edx+0x5c]
  42f026:	fwait
  42f027:	(bad)  
  42f028:	aad    0x53
  42f02a:	and    BYTE PTR fs:[edx],ah
  42f02d:	(bad)  
  42f02f:	add    ecx,DWORD PTR [esi+0x53]
  42f032:	mov    edi,0xb75f302c
  42f037:	inc    ebx
  42f038:	and    dl,BYTE PTR [edx-0x55]
  42f03b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f03c:	push   0x20
  42f03e:	ins    BYTE PTR es:[edi],dx
  42f03f:	cli    
  42f040:	fdivr  DWORD PTR [esi-0x2e]
  42f043:	dec    edx
  42f044:	cdq    
  42f045:	jb     0x42f09d
  42f047:	dec    ebx
  42f048:	cdq    
  42f049:	push   0xb75f
	...
  42f05e:	add    BYTE PTR [eax],al
  42f060:	inc    ecx
  42f061:	mov    ecx,0xb3f9c25e
  42f066:	lods   eax,DWORD PTR ds:[esi]
  42f067:	push   ds
  42f068:	mov    ebp,0x5ed1afa4
  42f06d:	push   esp
  42f06e:	adc    ebx,eax
  42f070:	test   BYTE PTR [eax+0x97b2ce7],ah
  42f076:	mov    ds:0x2c54594a,eax
  42f07b:	and    BYTE PTR [edx-0x56f0d88c],al
  42f081:	cmc    
  42f082:	push   ss
  42f083:	xchg   ecx,eax
  42f084:	pop    ecx
  42f085:	das    
  42f086:	out    0x86,eax
  42f088:	cmp    dl,dh
  42f08a:	hlt    
  42f08b:	hlt    
  42f08c:	je     0x42f032
  42f08e:	adc    bl,al
  42f090:	pop    eax
  42f091:	pop    esp
  42f092:	mov    bh,0x4a
  42f094:	sub    DWORD PTR [eax+0x68],ebp
  42f097:	push   cs
  42f098:	fs out dx,al
  42f09a:	add    DWORD PTR [edi+0x75],ebx
  42f09d:	pop    esp
  42f09e:	push   eax
  42f09f:	std    
  42f0a0:	xchg   ecx,eax
  42f0a1:	(bad)  
  42f0a2:	adc    bl,dl
  42f0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f0a5:	fsubr  DWORD PTR [ecx+ebp*8-0x8]
  42f0a9:	cmp    eax,DWORD PTR [bp-0x2c06]
  42f0ae:	add    BYTE PTR [ebp-0x2207190f],bh
  42f0b4:	adc    eax,0x616c3bdf
  42f0b9:	fld    DWORD PTR [eax]
  42f0bb:	out    dx,al
  42f0bc:	loop   0x42f08f
  42f0be:	stc    
  42f0bf:	push   ss
  42f0c0:	sbb    BYTE PTR [eax+0xd23e],ch
	...
  42f0d6:	add    BYTE PTR [eax],al
  42f0d8:	mov    fs,ebp
  42f0da:	mov    bh,0x10
  42f0dc:	sub    esp,DWORD PTR [ebx-0x6]
  42f0df:	(bad)  
  42f0e0:	aaa    
  42f0e1:	adc    eax,0xc00cc925
  42f0e6:	xor    eax,0x7dd28d8e
  42f0eb:	inc    esi
  42f0ec:	sub    esp,DWORD PTR [edx+edi*8-0x12]
  42f0f0:	repz addr16 jg 0x42f0c5
  42f0f4:	mov    edx,edx
  42f0f6:	test   dl,cl
  42f0f8:	sbb    BYTE PTR [edx+edi*8+0x6a],ah
  42f0fc:	cs mov ecx,0x63446509
  42f102:	cli    
  42f103:	mov    dh,0x65
  42f105:	cmp    DWORD PTR [ecx],eax
  42f107:	jmp    0xb6c7c56d
  42f10c:	test   al,0x62
  42f10e:	cli    
  42f10f:	sub    bl,BYTE PTR [eax+esi*4]
  42f112:	iret   
  42f113:	adc    eax,0x8fc57091
  42f118:	fwait
  42f119:	bound  eax,QWORD PTR [esi-0x1a467dcb]
  42f11f:	retf   0x266
  42f122:	ins    DWORD PTR es:[edi],dx
  42f123:	out    0xe6,al
  42f125:	mov    esp,0xd29b6ef9
  42f12a:	mov    dl,0xea
  42f12c:	out    0x61,al
  42f12e:	or     ch,dl
  42f130:	adc    eax,ebp
  42f132:	clc    
  42f133:	or     DWORD PTR [edx],esi
  42f135:	loopne 0x42f172
  42f137:	mov    DWORD PTR [esi-0x27],ebx
	...
  42f14e:	add    BYTE PTR [eax],al
  42f150:	hlt    
  42f151:	out    0x9b,eax
  42f153:	(bad)  
  42f154:	xor    al,0x10
  42f156:	cmp    al,BYTE PTR [edx-0x10]
  42f159:	stos   DWORD PTR es:[edi],eax
  42f15a:	jl     0x42f135
  42f15c:	mov    ds:0x84fff6ef,al
  42f161:	in     al,0x4c
  42f163:	and    al,0xab
  42f165:	add    eax,0x8f143b3c
  42f16a:	pop    es
  42f16b:	sub    DWORD PTR [eax+0x13],0xfffffff6
  42f16f:	push   DWORD PTR [eax+ecx*2+0x676382fa]
  42f176:	pop    es
  42f177:	test   BYTE PTR [eax+edx*1],ch
  42f17a:	idiv   bh
  42f17c:	cmp    BYTE PTR ds:0x800f0f02,dl
  42f182:	clc    
  42f183:	push   DWORD PTR [ebp+ebx*2-0x197bf307]
  42f18a:	arpl   si,di
  42f18c:	xchg   esp,eax
  42f18d:	adc    DWORD PTR [edx-0x8],edi
  42f190:	jbe    0x42f1f3
  42f192:	jle    0x42f1f0
  42f194:	mov    ch,0x11
  42f196:	idiv   BYTE PTR ds:0xd9fe
  42f19c:	test   dh,ah
  42f19e:	dec    edi
  42f19f:	inc    BYTE PTR [ecx+edx*1]
  42f1a2:	cmp    al,BYTE PTR [edx+0x40]
  42f1a5:	stos   DWORD PTR es:[edi],eax
  42f1a6:	jl     0x42f167
  42f1a8:	loop   0x42f141
  42f1aa:	clc    
  42f1ab:	call   esp
  42f1ad:	in     al,0x4c
  42f1af:	and    al,0x2b
  42f1b1:	add    eax,0x3b2c
	...
  42f1c6:	add    BYTE PTR [eax],al
  42f1c8:	push   esp
  42f1c9:	add    DWORD PTR [edi],0xf6109c83
  42f1cf:	inc    DWORD PTR [eax+ecx*2]
  42f1d2:	cli    
  42f1d3:	add    BYTE PTR [ebx-0x77e5919c],0x12
  42f1da:	add    dh,BYTE PTR [edx+eiz*2+0x65]
  42f1de:	test   eax,edi
  42f1e0:	push   esi
  42f1e1:	mov    esi,gs
  42f1e3:	jle    0x42f1df
  42f1e5:	ins    BYTE PTR es:[edi],dx
  42f1e6:	retf   0x3706
  42f1e9:	std    
  42f1ea:	std    
  42f1eb:	jmp    DWORD PTR [edx+0x7f]
  42f1ee:	jnp    0x42f205
  42f1f0:	in     al,0xb6
  42f1f2:	dec    eax
  42f1f3:	aas    
  42f1f4:	and    BYTE PTR [ebx+0x2f],bh
  42f1f7:	jl     0x42f19e
  42f1f9:	enter  0xf9fb,0xcd
  42f1fd:	into   
  42f1fe:	or     al,0x5b
  42f200:	xchg   DWORD PTR ss:[ebp+0x48debc71],eax
  42f207:	or     ebp,esp
  42f209:	push   0x7d
  42f20b:	inc    ebx
  42f20c:	jbe    0x42f274
  42f20e:	sti    
  42f20f:	add    BYTE PTR [esi-0x79],bl
  42f212:	jnp    0x42f205
  42f214:	lahf   
  42f215:	jle    0x42f259
  42f217:	aas    
  42f218:	and    BYTE PTR [ebx+0xc4223b0],bh
  42f21e:	and    ch,cl
  42f220:	jle    0x42f1b6
  42f222:	inc    edx
  42f223:	sti    
  42f224:	cmp    DWORD PTR [edi-0x551ef528],edi
  42f22a:	inc    edx
  42f22b:	sti    
	...
  42f240:	ins    DWORD PTR es:[edi],dx
  42f241:	jle    0x42f1cf
  42f243:	pop    es
  42f244:	fnstcw WORD PTR [esi+0x7166f210]
  42f24a:	cli    
  42f24b:	or     bl,dh
  42f24d:	daa    
  42f24e:	dec    eax
  42f24f:	sti    
  42f250:	dec    ebp
  42f251:	mov    al,0xbe
  42f253:	ss scas al,BYTE PTR es:[edi]
  42f255:	sahf   
  42f256:	push   ds
  42f257:	jl     0x42f276
  42f259:	dec    edx
  42f25a:	cmp    ebp,0x35
  42f25d:	in     al,0x5
  42f25f:	pop    ebx
  42f260:	mov    esi,0x24257f7b
  42f265:	hlt    
  42f266:	inc    ecx
  42f267:	or     edx,esp
  42f269:	fldz   
  42f26b:	jp     0x42f20e
  42f26d:	lods   eax,DWORD PTR ds:[esi]
  42f26e:	push   ecx
  42f26f:	add    BYTE PTR [ebx-0x26],ah
  42f272:	loop   0x42f1f4
  42f274:	mov    edi,0x3d474b66
  42f279:	pop    ss
  42f27a:	jmp    FWORD PTR [edi+0x26bbb941]
  42f280:	sti    
  42f281:	inc    ecx
  42f282:	xor    eax,0x8aa0e947
  42f287:	xlat   BYTE PTR ds:[ebx]
  42f288:	push   0xd9492358
  42f28d:	fs jmp 0x42f21d
  42f290:	gs push eax
  42f292:	stos   DWORD PTR es:[edi],eax
  42f293:	(bad)  
  42f295:	fucomp st(0)
  42f297:	add    al,0x69
  42f299:	pop    ebp
  42f29a:	or     DWORD PTR [eax-0x47],0x64
  42f29e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f29f:	shl    DWORD PTR [ebp+ecx*1-0x34],0x23
	...
  42f2b8:	test   BYTE PTR es:[ecx],al
  42f2bb:	rcr    BYTE PTR [esi+0x390ae364],cl
  42f2c1:	cmc    
  42f2c2:	jmp    0x5946:0xd366ab82
  42f2c9:	sub    ebx,edi
  42f2cb:	jp     0x42f2ee
  42f2cd:	lods   eax,DWORD PTR ds:[esi]
  42f2ce:	mov    ecx,0xeac962ff
  42f2d3:	or     BYTE PTR [ebx],0x66
  42f2d6:	mov    bl,0x46
  42f2d8:	and    eax,0x81afef17
  42f2dd:	mov    ecx,0x154b2723
  42f2e2:	popf   
  42f2e3:	inc    esi
  42f2e4:	dec    ecx
  42f2e5:	mov    al,ds:0xc6b4d832
  42f2ea:	fimul  DWORD PTR [ebp+0x102b5065]
  42f2f0:	xor    ch,bl
  42f2f2:	call   0x1a04bea
  42f2f7:	mov    esi,0x2afa609a
  42f2fc:	and    BYTE PTR [ebx-0x1ac1f2ac],ch
  42f302:	fst    QWORD PTR [eax+0x6b]
  42f305:	data16 cli 
  42f307:	push   esi
  42f308:	loopne 0x42f2e9
  42f30a:	jl     0x42f2f5
  42f30c:	hlt    
  42f30d:	push   edi
  42f30e:	and    DWORD PTR [esp+ebx*4+0x60],eax
  42f312:	xchg   BYTE PTR [ebp+0x4d],ch
  42f315:	sbb    DWORD PTR [eax],eax
  42f317:	jmp    0x2cd3657d
	...
  42f330:	and    al,0x60
  42f332:	or     bl,BYTE PTR [edi+0x1a]
  42f335:	fmul   DWORD PTR [ecx]
  42f337:	push   edi
  42f338:	mov    ds:0x602c7ddc,al
  42f33d:	jl     0x42f348
  42f33f:	fsubp  st(7),st
  42f341:	adc    eax,0x1de7f600
  42f346:	jmp    DWORD PTR [edi]
  42f348:	inc    esi
  42f349:	rol    DWORD PTR ds:0x81726021,1
  42f34f:	ins    BYTE PTR es:[edi],dx
  42f350:	popa   
  42f351:	or     eax,0x9de3d275
  42f356:	(bad)  
  42f357:	imul   ebx,DWORD PTR [edx+0x94a14b7],0x76ed24f5
  42f361:	push   edi
  42f362:	sub    eax,0x61
  42f365:	fld    DWORD PTR [edi+0x14275]
  42f36b:	jmp    0xe89f65d1
  42f370:	popa   
  42f371:	fldenv [esi-0x15]
  42f374:	or     DWORD PTR [ebx],edx
  42f376:	cli    
  42f377:	push   ebp
  42f378:	add    BYTE PTR ds:0x5a61e900,0xc6
  42f37f:	mov    ss,edx
  42f381:	mov    ebp,0xd74a005c
  42f386:	add    BYTE PTR [edi-0x54],dl
  42f389:	dec    ecx
  42f38a:	and    eax,0xd73a5c
  42f38f:	call   DWORD PTR [edi-0x47]
  42f392:	pop    esp
  42f393:	add    DWORD PTR [eax],eax
	...
  42f3a5:	add    BYTE PTR [eax],al
  42f3a7:	add    BYTE PTR [ebx],cl
  42f3a9:	xlat   BYTE PTR ds:[ebx]
  42f3aa:	dec    edx
  42f3ab:	mov    edx,edi
  42f3ad:	ret    0xe834
  42f3b0:	pop    esi
  42f3b1:	mov    edx,0x1d86fff5
  42f3b6:	push   es
  42f3b7:	test   DWORD PTR [ebx-0x2a],esp
  42f3ba:	add    BYTE PTR [eax],al
  42f3bc:	jo     0x42f33f
  42f3be:	push   ds
  42f3bf:	sub    al,0xa2
  42f3c1:	push   esi
  42f3c2:	(bad)  
  42f3c4:	mov    WORD PTR [esi],fs
  42f3c6:	div    DWORD PTR [edi+eiz*4-0x44fffec6]
  42f3cd:	loope  0x42f390
  42f3cf:	jmp    edi
  42f3d1:	ret    0x5744
  42f3d4:	ins    BYTE PTR es:[edi],dx
  42f3d5:	dec    ecx
  42f3d6:	and    eax,0xd6ca5c
  42f3db:	push   DWORD PTR [edi-0x47]
  42f3de:	pop    esp
  42f3df:	add    DWORD PTR [ebx-0x584b0a2a],edi
  42f3e5:	cmp    al,BYTE PTR [ecx]
  42f3e7:	add    BYTE PTR [ebx-0x53231602],cl
  42f3ed:	sbb    eax,0xe37cc084
  42f3f2:	test   BYTE PTR [eax],0x8b
  42f3f5:	(bad)  
  42f3f6:	jns    0x42f3bd
  42f3f8:	mov    bh,bh
  42f3fa:	dec    eax
  42f3fb:	out    0xac,al
  42f3fd:	sbb    eax,0xd83eb606
  42f402:	add    eax,0xbfd986b6
  42f407:	loope  0x42f45c
  42f409:	popa   
  42f40a:	ret    0x89
	...
  42f41d:	add    BYTE PTR [eax],al
  42f41f:	add    BYTE PTR [edi-0x47],bh
  42f422:	sub    al,0x8d
  42f424:	bound  esi,QWORD PTR [edi+esi*8+0x36]
  42f428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f429:	ins    BYTE PTR es:[edi],dx
  42f42a:	cmc    
  42f42b:	mov    esp,DWORD PTR [eax+0x68]
  42f42e:	(bad)  
  42f42f:	jmp    ecx
  42f431:	sbb    ebx,DWORD PTR [edx]
  42f433:	pop    eax
  42f434:	arpl   WORD PTR [eax-0x2],si
  42f437:	jmp    FWORD PTR [ebp-0x56]
  42f43a:	mov    dl,0x0
  42f43c:	loope  0x42f433
  42f43e:	fiadd  WORD PTR [esi+0xacdbf6]
  42f444:	bound  esi,QWORD PTR [eax-0x28]
  42f447:	std    
  42f448:	xchg   ebp,eax
  42f449:	xor    DWORD PTR [ebx-0x451d9a31],0xfffffffd
  42f450:	and    dl,BYTE PTR [ecx]
  42f452:	test   BYTE PTR [esi],0x1a
  42f455:	stc    
  42f456:	imul   esp,DWORD PTR [edx+edi*1],0xe2fffe71
  42f45d:	jnp    0x42f476
  42f45f:	push   esp
  42f460:	push   edi
  42f461:	inc    edx
  42f462:	jns    0x42f3e8
  42f464:	jle    0x42f492
  42f466:	(bad)  
  42f467:	jmp    DWORD PTR [edx+0x30]
  42f46a:	ja     0x42f4b0
  42f46c:	jle    0x42f3f2
  42f46e:	scas   al,BYTE PTR es:[edi]
  42f46f:	or     dh,ah
  42f471:	cmp    al,0xfe
  42f473:	dec    ebp
  42f474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f475:	mov    ds:0x70635c19,eax
  42f47a:	dec    BYTE PTR [edx]
  42f47c:	int3   
  42f47d:	fist   WORD PTR [eiz*2-0x4bc08fde]
	...
  42f498:	lods   al,BYTE PTR ds:[esi]
  42f49a:	add    eax,DWORD PTR [eax]
  42f49c:	bound  ebp,QWORD PTR [edi+0x59]
  42f49f:	push   ebx
  42f4a0:	jne    0x42f485
  42f4a2:	call   0xfeb35802
  42f4a7:	xchg   BYTE PTR [ecx-0x41db86d6],bl
  42f4ad:	jno    0x42f4ad
  42f4af:	call   DWORD PTR [ebp-0x26]
  42f4b2:	pop    ebx
  42f4b3:	call   0x42acf61
  42f4b8:	cmp    dl,BYTE PTR [eax]
  42f4ba:	mov    ah,0x43
  42f4bc:	cmp    DWORD PTR [edi-0x58],edx
  42f4bf:	mov    eax,0x3fe19e60
  42f4c4:	sub    DWORD PTR [ecx-0xb],esp
  42f4c7:	fstp   DWORD PTR [eax+0x27]
  42f4ca:	and    eax,0x25276905
  42f4cf:	push   es
  42f4d0:	fld    QWORD PTR [ebp+0xc]
  42f4d3:	fsub   QWORD PTR [edx-0x27]
  42f4d6:	out    0x44,eax
  42f4d8:	add    edx,edx
  42f4da:	fimul  WORD PTR [ebx-0x3]
  42f4dd:	jno    0x42f4ba
  42f4df:	jns    0x42f488
  42f4e1:	(bad)  
  42f4e3:	jns    0x42f48c
  42f4e5:	fld    TBYTE PTR [eax]
  42f4e7:	and    eax,0x8f1fd45a
  42f4ec:	es mov ch,0xd3
  42f4ef:	adc    DWORD PTR [esi-0x2448444e],0x56
  42f4f6:	ss adc ebx,edi
  42f4f9:	pop    es
  42f4fa:	loopne 0x42f4ff
	...
  42f510:	(bad)  
  42f511:	rcl    BYTE PTR [ecx-0x37],1
  42f514:	mov    ch,0xcf
  42f516:	cmp    DWORD PTR [edx+edx*2-0x5afc580a],eax
  42f51d:	js     0x42f580
  42f51f:	mov    al,0x41
  42f521:	mov    ebp,0x184d0b5e
  42f526:	in     al,dx
  42f527:	adc    cl,BYTE PTR [ecx+esi*4]
  42f52a:	mov    ebx,0xeb608942
  42f52f:	lods   eax,DWORD PTR ds:[esi]
  42f530:	jne    0x42f533
  42f532:	sub    esp,edx
  42f534:	push   ss
  42f535:	add    al,0x69
  42f537:	inc    edi
  42f538:	ds (bad) 
  42f53b:	add    esp,DWORD PTR [ecx+edi*4+0x54ece900]
  42f542:	and    eax,0xd95f0d
  42f547:	sub    DWORD PTR [esi],esi
  42f549:	idiv   dh
  42f54b:	inc    eax
  42f54c:	arpl   WORD PTR cs:[ebp+0xd91dcd],si
  42f553:	jmp    0x3e3d7b3c
  42f558:	inc    ebp
  42f559:	add    al,0x0
  42f55b:	jmp    0x3e3d01c1
  42f560:	add    eax,0x61e90004
  42f565:	pop    eax
  42f566:	(bad)  
  42f567:	xchg   bp,ax
  42f569:	mov    ch,0x5c
  42f56b:	call   0x9e3cced1
  42f570:	add    eax,0xe90004
	...
  42f585:	add    BYTE PTR [eax],al
  42f587:	add    BYTE PTR [ecx+0x71],ah
  42f58a:	mov    ds:0xe664a022,eax
  42f58f:	jbe    0x42f575
  42f591:	xor    BYTE PTR [esi+edx*8-0x22],0xea
  42f596:	push   esp
  42f597:	fsubp  st(2),st
  42f599:	xchg   edi,eax
  42f59a:	add    ch,cl
  42f59c:	popa   
  42f59d:	mov    ds:0xc90dc171,al
  42f5a2:	test   DWORD PTR [esi-0x17],ebp
  42f5a5:	fadd   DWORD PTR [eax]
  42f5a7:	jmp    0xc2ac1208
  42f5ac:	sbb    esp,edx
  42f5ae:	test   BYTE PTR [eax+ebx*2],dh
  42f5b1:	fld    DWORD PTR [eax]
  42f5b3:	(bad)  
  42f5b4:	in     eax,0xb4
  42f5b6:	dec    eax
  42f5b7:	call   0x6ecacf1d
  42f5bc:	out    0xd8,al
  42f5be:	add    cl,ch
  42f5c0:	(bad)  
  42f5c1:	push   esp
  42f5c2:	and    eax,0xd9612d
  42f5c7:	pusha  
  42f5c8:	jmp    0x42f606
  42f5ca:	add    DWORD PTR [eax],eax
  42f5cc:	jnp    0x42f5a9
  42f5ce:	bound  eax,QWORD PTR [ecx]
  42f5d0:	repnz mov DWORD PTR [edx-0x7b],ebp
  42f5d4:	stc    
  42f5d5:	fst    QWORD PTR [edi]
  42f5d7:	cld    
  42f5d8:	add    al,0x19
  42f5da:	pop    eax
  42f5db:	mov    DWORD PTR [ecx+eiz*1-0x4d05bbf9],esp
  42f5e2:	pop    edx
  42f5e3:	call   esp
  42f5e5:	sbb    BYTE PTR [edx-0x8831d3f],al
  42f5eb:	inc    DWORD PTR [eax]
	...
  42f5fd:	add    BYTE PTR [eax],al
  42f5ff:	add    ah,ah
  42f601:	dec    esp
  42f602:	test   DWORD PTR [edi+eax*2],esp
  42f605:	fiadd  DWORD PTR [eax]
  42f607:	add    BYTE PTR [ebx-0x7b],cl
  42f60a:	dec    esp
  42f60b:	dec    DWORD PTR [edi+0x71]
  42f60e:	push   esi
  42f60f:	add    ebx,edi
  42f611:	fiadd  DWORD PTR [ecx-0xa46a0ac]
  42f617:	je     0x42f688
  42f619:	xchg   ecx,eax
  42f61a:	jmp    0xf65b9a86
  42f61f:	mov    edi,DWORD PTR [edi+0x71]
  42f622:	inc    edx
  42f623:	add    ebx,edi
  42f625:	fiadd  DWORD PTR [edi+0xd54b87]
  42f62b:	add    BYTE PTR [eax+0x51],al
  42f62e:	and    eax,0xdaba40
  42f633:	mov    DWORD PTR [edi+eiz*1],eax
  42f636:	mov    DWORD PTR [edi-0x25],eax
  42f639:	mov    bl,0x81
  42f63b:	or     al,0xcb
  42f63d:	fiadd  DWORD PTR [ecx+0x37ca9f44]
  42f643:	inc    esp
  42f644:	lahf   
  42f645:	jb     0x42f64e
  42f647:	lea    esp,[ebp-0x7bffff34]
  42f64d:	out    0x24,al
  42f64f:	push   eax
  42f650:	jp     0x42f62c
  42f652:	add    BYTE PTR [ebx+0x57167137],cl
  42f658:	bound  eax,QWORD PTR [edi-0x4b9dc4e]
  42f65e:	push   esp
  42f65f:	call   0xfb84314a
	...
  42f678:	fbstp  TBYTE PTR [eax]
  42f67a:	adc    DWORD PTR [eax+eiz*2+0x61fffe71],eax
  42f681:	int3   
  42f682:	call   0xe22ecfaa
  42f687:	pop    ebx
  42f688:	arpl   WORD PTR [eax-0x2],si
  42f68b:	cli    
  42f68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f68d:	mov    esi,fs
  42f68f:	aas    
  42f690:	xchg   edx,eax
  42f691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f692:	aas    
  42f693:	mov    ah,0x86
  42f695:	mov    ah,0xfd
  42f697:	jmp    DWORD PTR [edx-0x15]
  42f69a:	push   edx
  42f69b:	sti    
  42f69c:	(bad)  
  42f69d:	mov    ebx,edx
  42f69f:	add    BYTE PTR [edx+0x70],ah
  42f6a2:	(bad)  
  42f6a3:	(bad)  
  42f6a4:	mov    ch,0xf7
  42f6a6:	jno    0x42f6cc
  42f6a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6a9:	jno    0x42f6a9
  42f6ab:	(bad)  
  42f6ac:	std    
  42f6ad:	cmp    esp,edx
  42f6af:	pop    ebx
  42f6b0:	arpl   WORD PTR [eax-0x2],si
  42f6b3:	cli    
  42f6b4:	mov    dh,0xcb
  42f6b6:	loopne 0x42f6b8
  42f6b8:	bound  esi,QWORD PTR [eax+0x26]
  42f6bb:	fwait
  42f6bc:	mov    eax,0xa28540a6
  42f6c1:	and    ecx,DWORD PTR [esi+0x40b5fbe9]
  42f6c7:	sti    
  42f6c8:	fistp  DWORD PTR [ebx]
  42f6ca:	loop   0x42f6df
  42f6cc:	jns    0x42f686
  42f6ce:	mov    edx,0xe203b55b
  42f6d3:	dec    edi
  42f6d4:	arpl   WORD PTR [eax-0x2],si
  42f6d7:	xchg   BYTE PTR [esi],dl
  42f6d9:	xchg   esp,eax
  42f6da:	sbb    dl,BYTE PTR [ebx+0x0]
	...
  42f6ed:	add    BYTE PTR [eax],al
  42f6ef:	add    BYTE PTR [eax],dh
  42f6f1:	sti    
  42f6f2:	push   esp
  42f6f3:	call   0xfb83c172
  42f6f8:	out    0xd8,eax
  42f6fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6fb:	mov    eax,0xe8345270
  42f700:	inc    ecx
  42f701:	push   edx
  42f702:	sub    al,0xe8
  42f704:	cmp    eax,0xdac4adda
  42f709:	adc    al,0xc
  42f70b:	in     al,dx
  42f70c:	sub    al,0x15
  42f70e:	add    al,0x14
  42f710:	fimul  WORD PTR [eax-0x232b1c41]
  42f716:	sub    eax,DWORD PTR [esi+edx*8]
  42f719:	mov    esi,0xe7b9dede
  42f71e:	(bad)  
  42f71f:	cli    
  42f720:	fnstenv [ebp-0x269dfad9]
  42f726:	adc    DWORD PTR [edi],ecx
  42f728:	jge    0x42f6c3
  42f72a:	sub    BYTE PTR [ebp-0x393f025f],cl
  42f730:	cdq    
  42f731:	int3   
  42f732:	(bad)  
  42f733:	jmp    0x42f73f
  42f735:	pop    ebp
  42f736:	imul   edi,ebx,0xffffffa9
  42f739:	mov    ch,0xfb
  42f73b:	push   cs
  42f73c:	test   al,bh
  42f73e:	lock add esp,DWORD PTR [edx+0x50]
  42f742:	ins    BYTE PTR es:[edi],dx
  42f743:	call   0x42ad1e1
  42f748:	mov    ds:0x31e7ac52,al
  42f74d:	or     DWORD PTR [edx-0x6c49e9c2],edx
  42f753:	add    al,0x0
	...
  42f765:	add    BYTE PTR [eax],al
  42f767:	add    BYTE PTR [edx-0x27],ah
  42f76a:	pop    esi
  42f76b:	pop    ecx
  42f76c:	leave  
  42f76d:	and    eax,0xd962dfcc
  42f772:	out    0x8a,eax
  42f774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f775:	add    al,0x13
  42f777:	js     0x42f7f7
  42f779:	std    
  42f77a:	call   0x3c9f5982
  42f77f:	call   0x42ad18d
  42f784:	cdq    
  42f785:	and    eax,0xd9b5cd01
  42f78a:	add    cl,ch
  42f78c:	cmp    DWORD PTR [eax-0x28],ebp
  42f78f:	out    0x44,al
  42f791:	push   esi
  42f792:	shr    esi,0xea
  42f795:	pop    ebx
  42f796:	cld    
  42f797:	(bad)  
  42f798:	xor    al,0xb4
  42f79a:	pop    esp
  42f79b:	add    eax,0xd45537a
  42f7a0:	push   0xffffffa3
  42f7a2:	pop    esp
  42f7a3:	add    eax,0xc0b5ec7a
  42f7a8:	jb     0x42f77c
  42f7aa:	add    cl,ch
  42f7ac:	loopne 0x42f78d
  42f7ae:	jl     0x42f799
  42f7b0:	push   esp
  42f7b1:	push   ebp
  42f7b2:	(bad)  
  42f7b3:	out    dx,eax
  42f7b4:	popa   
  42f7b5:	fnstenv ds:0x7ecef236
  42f7bb:	xchg   ebx,eax
  42f7bc:	pop    ecx
  42f7bd:	fld    DWORD PTR [eax]
  42f7bf:	ret    0xb4c5
  42f7c2:	inc    eax
  42f7c3:	call   0x7f2ad129
  42f7c8:	dec    ecx
  42f7c9:	pusha  
  42f7ca:	cli    
  42f7cb:	push   0x0
	...
  42f7dd:	add    BYTE PTR [eax],al
  42f7df:	add    ah,cl
  42f7e1:	fild   WORD PTR [eax]
  42f7e3:	neg    ch
  42f7e5:	je     0x42f7f0
  42f7e7:	jmp    0x632c6c4d
  42f7ec:	sbb    eax,0x1a1028b8
  42f7f1:	mov    eax,0x84d2f610
  42f7f6:	or     ecx,ebp
  42f7f8:	popa   
  42f7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f7fa:	pop    ecx
  42f7fb:	lds    edx,FWORD PTR [eax]
  42f7fd:	jns    0x42f809
  42f7ff:	ja     0x42f871
  42f801:	lods   al,BYTE PTR ds:[esi]
  42f802:	shl    BYTE PTR [edx+0x1b],0xdc
  42f806:	(bad)  
  42f808:	mov    eax,ds:0xa562e18a
  42f80d:	mov    bh,0x18
  42f80f:	sub    BYTE PTR [ebx+0x5c],bh
  42f812:	aas    
  42f813:	add    BYTE PTR [edi],dh
  42f815:	aam    0x2
  42f817:	sysret 
  42f819:	in     eax,0x8
  42f81b:	add    BYTE PTR [ebx-0x20db7ab2],cl
  42f821:	aam    0x0
  42f823:	add    BYTE PTR [eax+edx*4+0x1e],bh
  42f827:	adc    BYTE PTR [ebx-0x7b],cl
  42f82a:	push   eax
  42f82b:	call   edi
  42f82d:	jo     0x42f885
  42f82f:	add    DWORD PTR [ebx-0x29],edi
  42f832:	adc    ebp,0x5c24e09c
  42f838:	dec    edx
  42f839:	xlat   BYTE PTR ds:[ebx]
  42f83a:	add    BYTE PTR [ebx-0x4b087b00],cl
  42f840:	addr16 jns 0x42f844
	...
  42f857:	add    BYTE PTR [ebx],bh
  42f859:	sahf   
  42f85a:	mov    ah,0x24
  42f85c:	jg     0x42f834
  42f85e:	add    BYTE PTR [eax],al
  42f860:	int3   
  42f861:	loope  0x42f887
  42f863:	pop    esp
  42f864:	cmp    dl,bh
  42f866:	add    al,ch
  42f868:	jbe    0x42f868
  42f86a:	cmc    
  42f86b:	inc    DWORD PTR [esi-0x1d6f8aeb]
  42f871:	mov    ebp,?
  42f873:	(bad)  
  42f874:	jl     0x42f8c4
  42f876:	pop    ebp
  42f877:	and    al,0x7
  42f879:	vpexpandb ymm2{k3},YMMWORD PTR [edi+0x6c]
  42f880:	sbb    BYTE PTR [edx+0x7],dh
  42f883:	mov    dh,0xe8
  42f885:	imul   edi,DWORD PTR [edx-0x1fa7ce75],0xe10a0b07
  42f88f:	mov    edi,edi
  42f891:	jb     0x42f8a5
  42f893:	shl    DWORD PTR [ecx],0xd8
  42f896:	test   BYTE PTR [ecx+edx*8],al
  42f899:	and    ch,BYTE PTR [edx]
  42f89b:	mov    eax,DWORD PTR [edi]
  42f89d:	jae    0x42f8a9
  42f89f:	inc    ebx
  42f8a0:	bound  esi,QWORD PTR [eax]
  42f8a2:	xchg   DWORD PTR [esi+eax*4+0x60],eax
  42f8a6:	stc    
  42f8a7:	inc    ebx
  42f8a8:	jle    0x42f832
  42f8aa:	mov    edx,0x817a89cd
  42f8af:	jnp    0x42f8c7
  42f8b1:	jo     0x42f865
  42f8b3:	pop    ss
  42f8b4:	dec    ecx
  42f8b5:	or     al,0xe9
  42f8b7:	aas    
  42f8b8:	arpl   WORD PTR [eax-0x2],si
  42f8bb:	jno    0x42f8bd
	...
  42f8cd:	add    BYTE PTR [eax],al
  42f8cf:	add    BYTE PTR [ebp-0x41],ch
  42f8d2:	inc    esp
  42f8d3:	inc    eax
  42f8d4:	jmp    0x42f881
  42f8d6:	loopne 0x42f910
  42f8d8:	and    eax,0x8f8b0c0c
  42f8dd:	mov    edi,DWORD PTR ds:0xe8bc99fb
  42f8e3:	adc    esp,DWORD PTR [ebp-0x12]
  42f8e6:	or     cl,BYTE PTR [eax]
  42f8e8:	bound  esi,QWORD PTR [eax-0x77]
  42f8eb:	test   BYTE PTR [esi+0x14],bh
  42f8ee:	(bad)  
  42f8ef:	jmp    DWORD PTR [edx-0x50]
  42f8f2:	test   DWORD PTR [esi+edi*2+0x7c],eax
  42f8f6:	into   
  42f8f7:	push   ecx
  42f8f8:	sub    eax,0x635be204
  42f8fd:	jo     0x42f8fd
  42f8ff:	xchg   BYTE PTR [edi],dh
  42f901:	(bad)  [ecx+0x24]
  42f904:	mov    dh,0x71
  42f906:	(bad)  
  42f907:	(bad)  
  42f908:	fnstenv [esi]
  42f90a:	aad    0xfa
  42f90c:	into   
  42f90d:	retf   
  42f90e:	loopne 0x42f910
  42f910:	bound  esi,QWORD PTR [eax+0x3d]
  42f913:	mov    ah,0x3e
  42f915:	and    al,0xff
  42f917:	jmp    DWORD PTR [edx+0xb]
  42f91a:	jb     0x42f940
  42f91c:	xchg   BYTE PTR [ecx-0x2],dh
  42f91f:	dec    edx
  42f921:	push   eax
  42f922:	push   esi
  42f923:	sti    
  42f924:	aad    0xec
  42f926:	cmp    eax,0x39dbe70b
  42f92b:	sti    
  42f92c:	(bad)
  42f92f:	mov    DWORD PTR [ecx+0xf8aea5],0x0
	...
  42f945:	add    BYTE PTR [eax],al
  42f947:	add    BYTE PTR [ecx],bl
  42f949:	mov    ch,0xfb
  42f94b:	mov    al,0xeb
  42f94d:	outs   dx,DWORD PTR ds:[esi]
  42f94e:	dec    esi
  42f94f:	add    al,0x62
  42f951:	fldenv [esi-0x44]
  42f954:	sbb    ecx,ebx
  42f956:	jmp    0x5503:0xe7d1d287
  42f95d:	sbb    bl,0x85
  42f960:	mov    edx,0x3b03e7d1
  42f965:	add    bl,BYTE PTR [ebp+ecx*4+0x11]
  42f969:	std    
  42f96a:	rcl    cl,0x80
  42f96d:	pop    ecx
  42f96e:	retf   
  42f96f:	(bad)  
  42f970:	fidiv  WORD PTR [ebx+eiz*1+0x27d96205]
  42f977:	das    
  42f978:	fwait
  42f979:	fs sbb al,0xe0
  42f97c:	jne    0x42f992
  42f97e:	adc    al,0xe0
  42f980:	push   ebp
  42f981:	call   0xd9a47afa
  42f986:	out    0xfe,eax
  42f988:	cwde   
  42f989:	(bad)
  42f98c:	fcom   DWORD PTR [edi-0x75]
  42f98f:	cmp    ebx,DWORD PTR [ecx-0x71]
  42f992:	out    dx,eax
  42f993:	mov    fs,WORD PTR [ecx-0x2ff4d8f7]
  42f999:	fucomp st(0)
  42f99b:	cld    
  42f99c:	mov    eax,ds:0xdf0ac7fd
  42f9a1:	shr    dl,0x3
  42f9a4:	bound  esp,QWORD PTR [esp+eiz*2-0x20]
  42f9a8:	cdq    
  42f9a9:	(bad)  
  42f9ab:	add    eax,DWORD PTR [eax]
	...
  42f9bd:	add    BYTE PTR [eax],al
  42f9bf:	add    BYTE PTR [edx+eiz*2],ch
  42f9c2:	mov    ah,0xdf
  42f9c4:	dec    ebp
  42f9c5:	cdq    
  42f9c6:	xchg   edi,eax
  42f9c7:	rcr    eax,1
  42f9c9:	lea    eax,[eax+ebx*8]
  42f9cc:	(bad)  
  42f9cd:	fld    DWORD PTR [eax]
  42f9cf:	jmp    0x763d28b0
  42f9d4:	ret    0xffb4
  42f9d7:	call   0xb7095a3d
  42f9dc:	js     0x42f96b
  42f9de:	and    eax,0xd966b5
  42f9e3:	push   cs
  42f9e4:	xor    bh,ch
  42f9e6:	pop    esp
  42f9e7:	call   0x363cd34d
  42f9ec:	xor    BYTE PTR [edi+edi*8-0x8be9e18],0x16
  42f9f4:	dec    ecx
  42f9f5:	push   esp
  42f9f6:	test   BYTE PTR [ecx-0x1a179333],ch
  42f9fc:	sub    eax,0xed62fa54
  42fa01:	cld    
  42fa02:	pop    esp
  42fa03:	call   0xd283d369
  42fa08:	push   edi
  42fa09:	pop    edi
  42fa0a:	dec    ebp
  42fa0b:	add    eax,0xd4d1076
  42fa10:	jbe    0x42f9f6
  42fa12:	mov    esp,ebx
  42fa14:	pusha  
  42fa15:	fld    DWORD PTR [eax]
  42fa17:	loop   0x42fa31
  42fa19:	les    ecx,FWORD PTR [ecx]
  42fa1b:	push   0x4c
  42fa1d:	push   ebx
  42fa1e:	cli    
  42fa1f:	xchg   esi,eax
  42fa20:	pop    eax
  42fa21:	mov    edi,esi
  42fa23:	sub    DWORD PTR [eax],eax
	...
  42fa35:	add    BYTE PTR [eax],al
  42fa37:	add    BYTE PTR [edi],ah
  42fa39:	pushf  
  42fa3a:	and    al,0xc9
  42fa3c:	push   0x61e7ee5e
  42fa41:	fld    DWORD PTR [ebp-0x4bd293]
  42fa47:	call   0xb5ca94ad
  42fa4c:	sbb    eax,0x13b940f0
  42fa51:	push   ebx
  42fa52:	mov    ch,0xd
  42fa54:	or     bl,cl
  42fa56:	add    cl,ch
  42fa58:	aam    0x2d
  42fa5a:	cli    
  42fa5b:	add    BYTE PTR [edi+0x38],bl
  42fa5e:	push   esi
  42fa5f:	add    ebx,ecx
  42fa61:	fild   DWORD PTR [ecx-0x4aed1335]
  42fa67:	and    al,0xd7
  42fa69:	fadd   QWORD PTR [eax]
  42fa6b:	add    BYTE PTR [eax+ecx*8-0x2435a3dc],al
  42fa72:	add    bh,bh
  42fa74:	(bad)  
  42fa77:	add    DWORD PTR [ebx+0x7c86e8db],edi
  42fa7d:	adc    esi,esi
  42fa7f:	test   DWORD PTR [ebx-0x78],ecx
  42fa82:	xchg   ebx,eax
  42fa83:	jmp    0x3911b3
  42fa88:	add    al,bl
  42fa8a:	and    al,0x5c
  42fa8c:	mov    bl,bl
  42fa8e:	add    BYTE PTR [eax-0x70],al
  42fa91:	push   ebx
  42fa92:	adc    DWORD PTR [edi+ebx*2-0x13],0x31
  42fa97:	push   esp
  42fa98:	pop    edi
  42fa99:	cmc    
  42fa9a:	add    eax,0x8d
	...
  42faaf:	add    BYTE PTR [ebp+0x600000db],bh
  42fab5:	xor    BYTE PTR [esi+0xf],ah
  42fab8:	mov    eax,0xf4fffc70
  42fabd:	loopne 0x42fa6d
  42fabf:	or     esi,DWORD PTR [eax+0x44432a18]
  42fac5:	leave  
  42fac6:	add    al,0x1
  42fac8:	adc    dl,BYTE PTR [edi-0x28fbdfe2]
  42face:	js     0x42fad6
  42fad0:	or     ebx,ebx
  42fad2:	add    DWORD PTR [edi+ebx*1-0x4fffed1],0x1f54891c
  42fadd:	jmp    0x42fb1f
  42fadf:	push   eax
  42fae0:	mov    ebp,0xb724b511
  42fae5:	fild   DWORD PTR [eax]
  42fae7:	add    BYTE PTR [edx-0x45],ah
  42faea:	dec    ecx
  42faeb:	sti    
  42faec:	scas   al,BYTE PTR es:[edi]
  42faed:	(bad)  
  42faef:	add    BYTE PTR [edx+0x40],ah
  42faf2:	(bad)  
  42faf3:	(bad)  
  42faf4:	sub    eax,0x2e247117
  42faf9:	inc    ecx
  42fafa:	(bad)  
  42fafb:	inc    ebp
  42fafd:	int3   
  42fafe:	loopne 0x42fb5b
  42fb00:	arpl   WORD PTR [eax-0x2],ax
  42fb03:	cli    
  42fb04:	out    dx,al
  42fb05:	sbb    al,0xd2
  42fb07:	add    BYTE PTR [edx+0x40],ah
  42fb0a:	es pop es
  42fb0c:	(bad)  
  42fb0d:	out    0x37,eax
  42fb0f:	test   DWORD PTR [edx+0xe989d4],esp
	...
  42fb25:	add    BYTE PTR [eax],al
  42fb27:	add    BYTE PTR [edi-0x25],ch
  42fb2a:	aaa    
  42fb2b:	sti    
  42fb2c:	fld    st(4)
  42fb2e:	loopne 0x42fb8b
  42fb30:	arpl   WORD PTR [eax-0x2],ax
  42fb33:	aas    
  42fb34:	mov    edx,esi
  42fb36:	mov    ecx,DWORD PTR [esi+edi*1+0x50]
  42fb3a:	std    
  42fb3b:	dec    ebx
  42fb3c:	inc    esi
  42fb3d:	dec    eax
  42fb3e:	or     DWORD PTR [ebp-0x1c1b7],ecx
  42fb44:	cdq    
  42fb45:	jmp    FWORD PTR [eax+0x31dbe10a]
  42fb4b:	sti    
  42fb4c:	dec    ebp
  42fb4d:	aas    
  42fb4e:	jo     0x42fb4f
  42fb50:	mov    al,ds:0x8223ba49
  42fb55:	dec    edi
  42fb56:	jp     0x42fb5c
  42fb58:	pop    esp
  42fb59:	inc    eax
  42fb5a:	inc    BYTE PTR [esi+0xd223e6]
  42fb60:	bound  eax,QWORD PTR [eax-0x41]
  42fb63:	mov    BYTE PTR [esi-0x4dbff1dc],ch
  42fb69:	out    dx,al
  42fb6a:	aaa    
  42fb6b:	mov    ah,0x46
  42fb6d:	in     al,dx
  42fb6e:	std    
  42fb6f:	jmp    DWORD PTR [edx-0x45]
  42fb72:	dec    edx
  42fb73:	sti    
  42fb74:	mov    dh,0xd8
  42fb76:	or     ebx,eax
  42fb78:	(bad)  
  42fb79:	(bad)  
  42fb7b:	mov    WORD PTR ds:0x3e6f52ae,fs
  42fb81:	mov    ch,0xe8
  42fb83:	add    esp,DWORD PTR [edx+0x56]
  42fb86:	jl     0x42fb67
  42fb88:	cmp    eax,ebx
  42fb8a:	out    0x3,eax
	...
  42fba0:	leave  
  42fba1:	mov    WORD PTR [eax+ebx*8],cs
  42fba4:	(bad)  
  42fba5:	(bad)  
  42fba7:	sub    edx,ecx
  42fba9:	and    edi,DWORD PTR cs:[eax]
  42fbac:	fistp  WORD PTR [eax]
  42fbae:	xchg   esp,eax
  42fbaf:	pushf  
  42fbb0:	mov    ebx,0xa9380e77
  42fbb5:	ret    0x2a15
  42fbb8:	sti    
  42fbb9:	push   edx
  42fbba:	add    edi,DWORD PTR [eax]
  42fbbc:	fstp   QWORD PTR [esp+eax*8-0x29]
  42fbc0:	(bad)  
  42fbc1:	(bad)  
  42fbc3:	ret    
  42fbc4:	jp     0x42fb98
  42fbc6:	call   0x3ca55dce
  42fbcb:	loopne 0x42fc32
  42fbcd:	adc    dh,BYTE PTR [eax+eiz*8]
  42fbd0:	dec    ebp
  42fbd1:	out    0x64,al
  42fbd3:	cdq    
  42fbd4:	pop    edi
  42fbd5:	(bad)  
  42fbd7:	mov    ch,BYTE PTR [ecx+0x695cfec5]
  42fbdd:	pop    eax
  42fbde:	test   BYTE PTR [eax],bh
  42fbe0:	dec    ecx
  42fbe1:	push   ebp
  42fbe2:	pop    edi
  42fbe3:	rol    BYTE PTR [ecx+0x6e3c66f1],0xce
  42fbea:	xor    DWORD PTR [ebx-0x50180e47],eax
  42fbf0:	dec    ebx
  42fbf1:	pusha  
  42fbf2:	cmp    ebx,DWORD PTR [eax+edx*4]
  42fbf5:	and    bx,WORD PTR [eax]
  42fbf8:	mov    dl,0xaa
  42fbfa:	outs   dx,BYTE PTR ds:[esi]
  42fbfb:	dec    ebx
  42fbfc:	or     bh,ch
  42fbfe:	dec    edx
  42fbff:	or     DWORD PTR ss:[edi+0x1],ebx
  42fc03:	test   eax,0x0
	...
  42fc18:	pop    ebp
  42fc19:	pop    esi
  42fc1a:	data16 in al,0x61
  42fc1d:	fld    DWORD PTR [ebp-0x1a1aea43]
  42fc23:	pop    es
  42fc24:	stc    
  42fc25:	lahf   
  42fc26:	sbb    al,0x12
  42fc28:	xchg   eax,ecx
  42fc2a:	sbb    eax,0x420b6163
  42fc2f:	adc    eax,0x292ded13
  42fc34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc35:	adc    DWORD PTR [edx-0x2b],eax
  42fc38:	pop    esp
  42fc39:	pop    ebp
  42fc3a:	inc    esi
  42fc3b:	in     al,0x61
  42fc3d:	fld    DWORD PTR [esi+0x420b5eaa]
  42fc43:	int3   
  42fc44:	fs pop ebp
  42fc46:	cmp    ch,ah
  42fc48:	popa   
  42fc49:	fld    DWORD PTR [ebp+0x9ecbda5]
  42fc4f:	aas    
  42fc50:	imul   edx,esp,0xd3a103c0
  42fc56:	clc    
  42fc57:	out    0x5c,al
  42fc59:	pop    eax
  42fc5a:	ins    DWORD PTR es:[edi],dx
  42fc5b:	out    dx,al
  42fc5c:	xor    al,0x50
  42fc5e:	cli    
  42fc5f:	or     eax,0x2b78a6e3
  42fc64:	data16 aam 0xf7
  42fc67:	jecxz  0x42fcc5
  42fc69:	pop    ebp
  42fc6a:	fsub   st(1),st
  42fc6c:	popa   
  42fc6d:	(bad)  [ecx]
  42fc6f:	outs   dx,DWORD PTR ds:[esi]
  42fc70:	jb     0x42fc50
  42fc72:	add    cl,ch
  42fc74:	loopne 0x42fcc7
  42fc76:	or     eax,0xf7d46f3f
  42fc7b:	fadd   QWORD PTR [eax]
	...
  42fc8d:	add    BYTE PTR [eax],al
  42fc8f:	add    BYTE PTR ds:0xe2a07fee,cl
  42fc95:	fadd   DWORD PTR [eax]
  42fc97:	jmp    0xee3d5b00
  42fc9c:	popa   
  42fc9d:	fnstenv [edi]
  42fc9f:	push   ss
  42fca0:	(bad)  
  42fca1:	fiadd  WORD PTR [ebx-0x5ab6b00]
  42fca7:	push   edx
  42fca9:	mov    BYTE PTR [eax],0x0
  42fcac:	sti    
  42fcad:	dec    esi
  42fcae:	push   edi
  42fcaf:	ins    BYTE PTR es:[edi],dx
  42fcb0:	sbb    al,0x57
  42fcb2:	mov    ds:0x80d80b00,eax
  42fcb7:	cmp    esi,ecx
  42fcb9:	fiadd  DWORD PTR [ebx+0xd7fba1]
  42fcbf:	inc    ebx
  42fcc0:	and    ch,BYTE PTR [edi+0x1]
  42fcc3:	add    bl,cl
  42fcc5:	push   esi
  42fcc6:	clc    
  42fcc7:	or     DWORD PTR [ebx+edx*8-0x2844fb30],edi
  42fcce:	jns    0x42fcc9
  42fcd0:	imul   ebx,esp,0xffffff84
  42fcd3:	mov    edi,0x828100d7
  42fcd9:	mov    eax,0xfebb0000
  42fcde:	jno    0x42fc63
  42fce0:	jb     0x42fcc7
  42fce2:	je     0x42fd60
  42fce4:	or     BYTE PTR ds:0x5d147421,dl
  42fcea:	clc    
  42fceb:	mov    al,ds:0xeb00d77b
  42fcf0:	cmp    dl,BYTE PTR [edi-0x8]
  42fcf3:	or     al,BYTE PTR [eax]
	...
  42fd05:	add    BYTE PTR [eax],al
  42fd07:	add    BYTE PTR [ecx],bl
  42fd09:	jg     0x42fd86
  42fd0b:	stc    
  42fd0c:	jle    0x42fcea
  42fd0e:	jle    0x42fcaf
  42fd10:	ja     0x42fce9
  42fd12:	add    BYTE PTR [ecx+0xd332],al
  42fd18:	dec    ebx
  42fd19:	add    cl,BYTE PTR [edx-0x7d]
  42fd1c:	and    ah,al
  42fd1e:	add    eax,0xd9bd82
  42fd23:	add    al,cl
  42fd25:	push   cs
  42fd26:	or     al,0x76
  42fd28:	jo     0x42fd80
  42fd2a:	clc    
  42fd2b:	test   DWORD PTR [ebx],edi
  42fd2d:	xlat   BYTE PTR ds:[ebx]
  42fd2e:	add    bl,ch
  42fd30:	(bad)  
  42fd31:	lds    eax,FWORD PTR [edi+0x16a5643]
  42fd37:	add    DWORD PTR [esi+0x69],ebx
  42fd3a:	mov    dh,0xfa
  42fd3c:	or     eax,0x4e4387d4
  42fd41:	rol    BYTE PTR [eax],cl
  42fd43:	add    DWORD PTR [esi+0x57],esp
  42fd46:	in     eax,dx
  42fd47:	xchg   BYTE PTR [ebp+0x63042af4],bl
  42fd4d:	inc    ecx
  42fd4e:	daa    
  42fd4f:	fs in  eax,0xab
  42fd52:	xor    eax,DWORD PTR [edi+0x42aec25]
  42fd58:	arpl   WORD PTR [ecx+0x29],ax
  42fd5b:	psubusw mm7,QWORD PTR [ebx-0x16]
  42fd5f:	icebp  
  42fd60:	pop    esi
  42fd61:	inc    ecx
  42fd62:	push   cs
  42fd63:	jmp    0xfb770095
  42fd68:	jmp    0x134e7f0
	...
  42fd7d:	add    BYTE PTR [eax],al
  42fd7f:	add    BYTE PTR [esi+0x41],ah
  42fd82:	push   cs
  42fd83:	or     ebx,esi
  42fd85:	sub    bh,dl
  42fd87:	call   FWORD PTR [ebp+0x362480b7]
  42fd8d:	inc    ecx
  42fd8e:	(bad)  
  42fd8f:	jmp    DWORD PTR [eax]
  42fd91:	leave  
  42fd92:	shl    BYTE PTR [ebx],1
  42fd94:	jb     0x42fd16
  42fd96:	into   
  42fd97:	push   ecx
  42fd98:	jge    0x42fda6
  42fd9a:	loope  0x42fdf7
  42fd9c:	arpl   WORD PTR [eax-0x2],ax
  42fd9f:	xchg   BYTE PTR [edi+0x6246a33],dl
  42fda5:	inc    ecx
  42fda6:	(bad)  
  42fda7:	(bad)  
  42fda8:	jmp    0xf3dcb23
  42fdad:	in     al,0xd8
  42fdaf:	add    BYTE PTR [edx+0x40],ah
  42fdb2:	xor    eax,0xfdec7eb4
  42fdb7:	jmp    DWORD PTR [edx-0x7d]
  42fdba:	push   0x24
  42fdbc:	xchg   esi,eax
  42fdbd:	fld1   
  42fdbf:	add    esp,DWORD PTR [edx+0x41]
  42fdc2:	mov    ecx,0x6d52294f
  42fdc7:	inc    ebx
  42fdc8:	imul   ebx,DWORD PTR [ebp+0x1b],0x91521936
  42fdcf:	dec    esp
  42fdd0:	or     dl,BYTE PTR [edx+0x7b]
  42fdd3:	mov    BYTE PTR [ecx+0x41af5ee5],dh
  42fdd9:	add    eax,0x5e74075f
  42fdde:	lods   al,BYTE PTR ds:[esi]
  42fddf:	and    DWORD PTR [esi+0x60],0xdfac
	...
  42fdf6:	add    BYTE PTR [eax],al
  42fdf8:	sub    DWORD PTR [esi-0x5d],ebx
  42fdfb:	adc    eax,DWORD PTR [ebp-0x7e409edd]
  42fe01:	adc    DWORD PTR [edi-0x1],ebp
  42fe04:	out    0x5f,eax
  42fe06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe07:	fist   WORD PTR [ebp+0x5e]
  42fe0a:	imul   edi,DWORD PTR [edi+0x62],0xffffffd9
  42fe0e:	out    0x8a,eax
  42fe10:	push   ds
  42fe11:	std    
  42fe12:	fisttp DWORD PTR [eax-0x545d0213]
  42fe18:	aas    
  42fe19:	xlat   BYTE PTR ds:[ebx]
  42fe1a:	pusha  
  42fe1b:	jmp    edi
  42fe1d:	pop    ebp
  42fe1e:	pop    esp
  42fe1f:	fbstp  TBYTE PTR ds:0x3d03e7d8
  42fe25:	sbb    DWORD PTR [edi-0x49],esp
  42fe28:	inc    ecx
  42fe29:	icebp  
  42fe2a:	test   ecx,ebx
  42fe2c:	push   0xeac2259d
  42fe31:	pushf  
  42fe32:	or     ebx,DWORD PTR [eax]
  42fe34:	(bad)  [ebx+eax*1-0x2d56ed20]
  42fe3b:	js     0x42fdc3
  42fe3d:	lods   eax,DWORD PTR ds:[esi]
  42fe3e:	call   0x7a236046
  42fe43:	leave  
  42fe44:	dec    ebp
  42fe45:	push   eax
  42fe46:	je     0x42fe30
  42fe48:	test   eax,0x61e900da
  42fe4d:	in     al,0xb2
  42fe4f:	pop    ecx
  42fe50:	dec    esi
  42fe51:	mov    dh,0x40
  42fe53:	jmp    0xc5f85260
  42fe58:	adc    eax,0xe900da
	...
  42fe6d:	add    BYTE PTR [eax],al
  42fe6f:	add    BYTE PTR [esi+eiz*1-0x6],ah
  42fe73:	push   ebp
  42fe74:	or     dh,BYTE PTR [ebp+0x5861e8ff]
  42fe7a:	(bad)  
  42fe7b:	jle    0x42fe07
  42fe7d:	cmc    
  42fe7e:	pop    esp
  42fe7f:	call   0xb12bd7e5
  42fe84:	lea    edx,[edx+edi*8+0x72]
  42fe88:	xchg   esi,eax
  42fe89:	push   esi
  42fe8a:	iret   
  42fe8b:	aad    0xe9
  42fe8d:	pop    ecx
  42fe8e:	div    edi
  42fe90:	lea    edx,[edx+edi*8-0x2c]
  42fe94:	mov    dh,0x57
  42fe96:	inc    ebp
  42fe97:	or     eax,0x658261ca
  42fe9c:	pop    esi
  42fe9d:	fld    DWORD PTR [eax]
  42fe9f:	out    0x3b,al
  42fea1:	sahf   
  42fea2:	(bad)  
  42fea3:	fnstsw WORD PTR [ebx]
  42fea5:	xchg   esi,eax
  42fea6:	(bad)  
  42fea7:	daa    
  42fea8:	xchg   ecx,esp
  42feaa:	add    eax,0x81425d31
  42feaf:	xchg   esp,eax
  42feb0:	popa   
  42feb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42feb2:	jae    0x42feac
  42feb4:	adc    al,0x95
  42feb6:	and    al,0xdd
  42feb8:	or     al,0x9d
  42feba:	and    al,0xcd
  42febc:	fs xchg BYTE PTR fs:[ebx],ch
  42fec0:	pop    edi
  42fec1:	jecxz  0x42febb
  42fec3:	out    dx,al
  42fec4:	xor    BYTE PTR [eax+0x42],bl
  42fec7:	cmc    
  42fec8:	in     al,dx
  42fec9:	lods   al,BYTE PTR ds:[esi]
  42feca:	and    al,0x1d
  42fecc:	jecxz  0x42feab
  42fece:	xor    ah,BYTE PTR [eax+0x6d]
  42fed1:	popa   
  42fed2:	xchg   BYTE PTR [esi],ah
	...
  42fee8:	bound  ebx,QWORD PTR [eax+0x5d]
  42feeb:	add    BYTE PTR [edi+0x3d],bl
  42feee:	mov    DWORD PTR [ebx+edx*8-0x28],ebx
  42fef2:	or     DWORD PTR [edi+0x1b],0x600c3dcf
  42fef9:	fwait
  42fefa:	xor    DWORD PTR [edi+ebx*1-0x14],0x55b33487
  42ff02:	repz push ds
  42ff04:	test   DWORD PTR [edx],0xcf3674f6
  42ff0a:	test   BYTE PTR [edi+edi*1],ah
  42ff0d:	(bad)  
  42ff0e:	add    BYTE PTR [eax],al
  42ff10:	xchg   edx,eax
  42ff11:	arpl   WORD PTR [ebp+0x29dc0b00],bx
  42ff17:	shl    dl,0xe
  42ff1a:	out    dx,al
  42ff1b:	inc    DWORD PTR [edi+ecx*8-0x2b58db7c]
  42ff22:	add    BYTE PTR [eax],al
  42ff24:	inc    eax
  42ff25:	enter  0x4424,0xca
  42ff29:	fild   DWORD PTR [eax]
  42ff2b:	inc    eax
  42ff2c:	jmp    0x42ff08
  42ff2e:	scas   al,BYTE PTR es:[edi]
  42ff2f:	inc    ebp
  42ff30:	mov    ebx,0x6fb4f725
  42ff35:	sub    DWORD PTR [ecx],eax
  42ff37:	add    bl,cl
  42ff39:	fisubr DWORD PTR [esi+0x3a80ab90]
  42ff3f:	add    BYTE PTR [eax+ecx*8+0x24],al
  42ff43:	pop    esp
  42ff44:	mov    bl,bl
  42ff46:	add    BYTE PTR [ebx],al
  42ff48:	dec    esi
  42ff49:	xor    esi,edi
  42ff4b:	mov    ah,0x0
	...
  42ff5d:	add    BYTE PTR [eax],al
  42ff5f:	add    BYTE PTR [edi+0x7b00011f],bl
  42ff65:	into   
  42ff66:	rcl    DWORD PTR [esi+0x74],0xc6
  42ff6a:	and    al,0x5c
  42ff6c:	mov    bl,bl
  42ff6e:	add    al,ch
  42ff70:	push   cs
  42ff71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff72:	cmc    
  42ff73:	(bad)  
  42ff74:	(bad)  
  42ff75:	xchg   esp,eax
  42ff76:	add    eax,0x37c06285
  42ff7b:	sti    
  42ff7c:	push   ebp
  42ff7d:	mov    edx,0x40629c77
  42ff82:	(bad)  
  42ff83:	call   0xfb738757
  42ff88:	jmp    0x639ee849
  42ff8d:	inc    eax
  42ff8e:	(bad)  
  42ff8f:	aas    
  42ff90:	xchg   edx,eax
  42ff91:	ja     0x43000c
  42ff93:	and    al,0x86
  42ff95:	inc    ecx
  42ff96:	(bad)  
  42ff97:	jmp    FWORD PTR [ebp-0x52]
  42ff9a:	sar    edi,0x14
  42ff9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ff9e:	call   0xfe8362fe
  42ffa3:	or     cl,ah
  42ffa5:	rcl    BYTE PTR [eiz*2-0x4bcebf5e],0x3e
  42ffad:	fdiv   st(5),st
  42ffaf:	jmp    DWORD PTR [edx-0x3b]
  42ffb2:	sar    ebp,1
  42ffb4:	mov    WORD PTR [edi+0x413e2478],gs
  42ffba:	(bad)  
  42ffbb:	(bad)  
  42ffbc:	jmp    0x42ff42
  42ffbe:	loop   0x42ffeb
  42ffc0:	xor    BYTE PTR [edi+0x78],al
  42ffc3:	push   ebp
	...
  42ffd8:	arpl   WORD PTR [ebx+0x43],ax
  42ffdb:	push   ecx
  42ffdc:	popa   
  42ffdd:	lock jnp 0x42ffa7
  42ffe0:	retf   0x5529
  42ffe3:	sti    
  42ffe4:	lods   eax,DWORD PTR ds:[esi]
  42ffe5:	retf   
  42ffe6:	mov    al,ds:0xc8c94e23
  42ffeb:	and    edx,DWORD PTR [esi+0x25]
  42ffee:	or     edi,esp
  42fff0:	xchg   ebp,eax
  42fff1:	fbstp  TBYTE PTR [ecx-0x523072e0]
  42fff7:	push   esp
  42fff8:	test   DWORD PTR ds:0x4022119a,esp
  42fffe:	(bad)  
  42ffff:	pop    eax
  430000:	fild   WORD PTR [eax]
  430002:	mov    dl,0xc
  430004:	fcmovnu st,st(1)
  430006:	inc    edx
  430007:	mov    ah,0xad
  430009:	in     eax,dx
  43000a:	(bad)  [eax]
  43000c:	pop    ecx
  43000d:	inc    eax
  43000e:	call   0x5f91594b
  430013:	mov    DWORD PTR [ecx-0x1986fefb],0x6903e7d8
  43001d:	push   esp
  43001e:	mov    eax,0x614e3939
  430023:	pusha  
  430024:	into   
  430025:	fsub   st,st(7)
  430027:	add    edi,DWORD PTR [ebx]
  430029:	xor    al,0x92
  43002b:	xor    BYTE PTR [ecx],bl
  43002d:	bound  ebp,QWORD PTR [edi+eiz*8-0x47]
  430031:	fsub   st,st(7)
  430033:	add    esp,DWORD PTR [edx+0x3e7782a9]
  430039:	lods   eax,DWORD PTR ds:[esi]
  43003a:	call   0x430042
	...
  43004f:	add    BYTE PTR [edx-0x22],ah
  430052:	cmp    esi,eax
  430054:	cmc    
  430055:	dec    esi
  430056:	xor    al,0xe7
  430058:	mov    eax,ebx
  43005a:	out    0x3,eax
  43005c:	pop    ecx
  43005d:	xchg   DWORD PTR [eax+0x13],edi
  430060:	inc    edi
  430061:	cdq    
  430062:	out    0x30,eax
  430064:	push   cs
  430065:	cmc    
  430066:	stos   DWORD PTR es:[edi],eax
  430067:	add    ah,BYTE PTR [edx-0x27]
  43006a:	out    0x56,al
  43006c:	xor    DWORD PTR [esi+0x74],ecx
  43006f:	out    0x19,eax
  430071:	fsub   st,st(7)
  430073:	add    edi,DWORD PTR [ecx+0x62d00484]
  430079:	(bad)  
  43007b:	rcr    ah,cl
  43007d:	and    DWORD PTR [eax],edx
  43007f:	xchg   ebx,eax
  430080:	lods   al,BYTE PTR ds:[esi]
  430081:	dec    ebp
  430082:	adc    eax,DWORD PTR [esi-0x739b225e]
  430088:	nop
  430089:	dec    ebp
  43008a:	add    esi,DWORD PTR [ecx+0x6c]
  43008d:	dec    ebp
  43008e:	sti    
  43008f:	das    
  430090:	mov    edi,DWORD PTR [ebp+0x1]
  430093:	call   0x65c8d9f9
  430098:	test   DWORD PTR [ecx-0x669e1701],esi
  43009e:	push   eax
  43009f:	(bad)  
  4300a1:	cmc    
  4300a2:	pop    esp
  4300a3:	call   0x974cda09
  4300a8:	sbb    ecx,DWORD PTR [ebp-0x5]
  4300ab:	jge    0x4300e7
  4300ad:	mov    cl,0xff
  4300af:	call   0x59f5e115
	...
  4300c8:	dec    esi
  4300c9:	mov    dh,0x40
  4300cb:	jmp    0x4568864c
  4300d0:	pop    edi
  4300d1:	fld    DWORD PTR [eax]
  4300d3:	jmp    0xb10a:0x5df9a8ba
  4300da:	(bad)  
  4300db:	call   0xcdf85141
  4300e0:	adc    eax,0x16e900da
  4300e5:	push   esp
  4300e6:	mov    BYTE PTR [ecx+0x6efa1ef2],0xdb
  4300ed:	sbb    DWORD PTR [edx],ecx
  4300ef:	ins    BYTE PTR es:[edi],dx
  4300f0:	sbb    eax,0x4c5efa4b
  4300f5:	in     al,0xfc
  4300f7:	push   esi
  4300f8:	test   DWORD PTR [edx+0x56],eax
  4300fb:	call   0x6dc8da61
  430100:	mov    edx,0x61e8ffb0
  430105:	loopne 0x4300b9
  430107:	pushf  
  430108:	pop    esi
  430109:	cdq    
  43010a:	push   eax
  43010b:	cs sub dh,ch
  43010e:	pop    esp
  43010f:	call   0x574cda75
  430114:	stos   DWORD PTR es:[edi],eax
  430115:	dec    esp
  430116:	sti    
  430117:	pop    ebp
  430118:	mov    dh,BYTE PTR [eax-0x1f9e1701]
  43011e:	mov    dl,0x0
  430120:	sti    
  430121:	in     al,0x63
  430123:	inc    eax
  430124:	mov    edi,ebx
  430126:	mov    ah,0x24
  430128:	iret   
  430129:	aad    0x0
	...
  43013f:	add    BYTE PTR [eax-0x5f],bh
  430142:	dec    ebp
  430143:	inc    edi
  430145:	xor    al,0x56
  430147:	add    DWORD PTR [ebx-0x28],ecx
  43014a:	stc    
  43014b:	iret   
  43014c:	sub    al,0xc4
  43014e:	and    al,0x5c
  430150:	cmp    bl,al
  430152:	add    BYTE PTR [ecx-0x30],dl
  430155:	psubsw mm4,mm2
  430158:	(bad)  
  43015a:	cmc    
  43015b:	test   DWORD PTR [ebx],ecx
  43015d:	dec    ebx
  43015e:	jle    0x4301d7
  430160:	cmp    bl,al
  430162:	add    cl,ch
  430164:	rcl    DWORD PTR [eax],cl
  430166:	idiv   bh
  430168:	nop
  430169:	push   esp
  43016a:	and    eax,0xd80a5c
  43016f:	inc    eax
  430170:	dec    ebx
  430171:	cld    
  430172:	mov    ah,0x24
  430174:	aas    
  430175:	(bad)  
  430176:	add    BYTE PTR [eax],al
  430178:	or     al,0xc6
  43017a:	inc    ebx
  43017b:	add    BYTE PTR [esp+eax*8+0x24],ch
  43017f:	pop    esp
  430180:	cli    
  430181:	xlat   BYTE PTR ds:[ebx]
  430182:	add    BYTE PTR [edi],cl
  430184:	lds    esp,FWORD PTR [edi+0x11]
  430187:	gs or  ebx,eax
  43018a:	cmc    
  43018b:	mov    ah,0x67
  43018d:	sub    DWORD PTR [ecx],eax
  43018f:	add    BYTE PTR [ebx+0x1c57d3d6],bh
  430195:	les    esp,FWORD PTR [esp+ebx*2]
  430198:	retf   0xd7
  43019b:	push   DWORD PTR [edi]
  43019d:	xor    al,0x56
  43019f:	add    DWORD PTR [ebx+0x8b4fd7],edi
	...
  4301b5:	add    BYTE PTR [eax],al
  4301b7:	add    BYTE PTR [eax-0x10],dh
  4301ba:	mov    ecx,edx
  4301bc:	jl     0x4301b9
  4301be:	add    eax,0x62
  4301c1:	xor    ecx,DWORD PTR [ecx+0x2ada979a]
  4301c7:	mov    DWORD PTR ds:0x7e1c6bd2,esp
  4301cd:	dec    edx
  4301ce:	sub    al,0xe9
  4301d0:	lds    eax,FWORD PTR [ecx-0x2]
  4301d3:	(bad)  
  4301d4:	fnstenv [ebp+0x42635be1]
  4301da:	dec    BYTE PTR [edx]
  4301dc:	adc    al,0x6
  4301de:	(bad)  
  4301df:	aas    
  4301e0:	mov    dl,0x23
  4301e2:	jns    0x430208
  4301e4:	scas   al,BYTE PTR es:[edi]
  4301e5:	inc    ecx
  4301e6:	(bad)  
  4301e7:	call   DWORD PTR [ebp-0x36]
  4301ea:	sar    edi,0x3c
  4301ed:	(bad)
  4301f0:	arpl   WORD PTR [eax-0x2],ax
  4301f3:	or     dh,ah
  4301f5:	rcl    BYTE PTR [eiz*2-0x4bd2bf5e],0x46
  4301fd:	or     al,0xfe
  4301ff:	jmp    DWORD PTR [edx+0x3f]
  430202:	inc    ebx
  430203:	push   ebx
  430204:	or     eax,0x635be8a5
  430209:	inc    eax
  43020a:	(bad)  
  43020b:	(bad)  
  43020c:	sub    eax,0x962478cc
  430211:	inc    ecx
  430212:	(bad)  
  430213:	call   DWORD PTR [ebx+0x2ce837b7]
  430219:	adc    DWORD PTR [ebx+edi*8],ebp
	...
  430230:	out    0x0,eax
  430232:	cld    
  430233:	test   BYTE PTR [ebx],ah
  430235:	lods   eax,DWORD PTR ds:[esi]
  430236:	sub    edi,ebx
  430238:	fbstp  TBYTE PTR [ebp+0x0]
  43023b:	mov    DWORD PTR ds:0xbe1d6690,ebx
  430241:	or     ebp,DWORD PTR [ecx+ebp*8]
  430244:	jae    0x430253
  430246:	sub    al,0xfb
  430248:	fnstenv [eax+ebp*8-0x18269ca5]
  43024f:	add    esp,DWORD PTR [edx]
  430251:	test   eax,0xad3e781a
  430256:	call   0x521d645e
  43025b:	mov    DWORD PTR [ebp+0x19e83c4b],0x6903e7d8
  430265:	sbb    DWORD PTR [eax+0x14],0x7
  430269:	cdq    
  43026a:	out    0x2c,eax
  43026c:	scas   al,BYTE PTR es:[edi]
  43026d:	cmc    
  43026e:	inc    ebx
  43026f:	add    esp,DWORD PTR [edx-0x27]
  430272:	out    0x56,al
  430274:	mov    cl,0x4a
  430276:	pushf  
  430277:	out    0xa9,eax
  430279:	fsub   st,st(7)
  43027b:	add    ecx,DWORD PTR [ecx-0x7b]
  43027e:	or     al,0xd0
  430280:	(bad)  
  430281:	(bad)  
  430283:	rcr    ah,cl
  430285:	sbb    eax,0x4a124fc0
  43028a:	stos   DWORD PTR es:[edi],eax
  43028b:	xchg   BYTE PTR [edx],ah
  43028d:	fisubr DWORD PTR [esp+0x16]
  430291:	dec    edx
  430292:	fwait
  430293:	ins    DWORD PTR es:[edi],dx
	...
  4302a8:	js     0x4302f7
  4302aa:	xchg   ebx,eax
  4302ab:	sub    al,0xe5
  4302ad:	push   esp
  4302ae:	(bad)  
  4302af:	(bad)  
  4302b0:	(bad)  
  4302b1:	(bad)  
  4302b3:	jp     0x430296
  4302b5:	ins    BYTE PTR es:[edi],dx
  4302b6:	call   0xaaa164be
  4302bb:	sbb    bl,BYTE PTR [eax]
  4302bd:	inc    ebp
  4302be:	imul   ebp,DWORD PTR [ebx*8+0x62d00c54],0xffffffd9
  4302c6:	out    0xfc,eax
  4302c8:	adc    esp,DWORD PTR [eax+ebp*8-0x6bb5e23d]
  4302cf:	out    0x29,eax
  4302d1:	fsub   st,st(7)
  4302d3:	add    ebp,DWORD PTR [ecx-0x7d]
  4302d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4302d7:	add    edi,DWORD PTR [ecx-0x6df2fe7c]
  4302dd:	fadd   DWORD PTR [eax]
  4302df:	jmp    0xf9c48a8a
  4302e4:	les    ecx,FWORD PTR [ecx]
  4302e6:	add    DWORD PTR [esi],ebx
  4302e8:	or     eax,0x61e85cf5
  4302ed:	fscale 
  4302ef:	and    ebp,DWORD PTR [esi-0x52324ab2]
  4302f5:	fadd   DWORD PTR [eax]
  4302f7:	jmp    0x3e3d2c5e
  4302fc:	test   DWORD PTR [ebp-0x579e1701],ebp
  430302:	test   DWORD PTR [edx-0x212f4782],esi
  430308:	mov    DWORD PTR [esi-0x3f],ebx
  43030b:	out    0x0,al
	...
  43031d:	add    BYTE PTR [eax],al
  43031f:	add    dl,ah
  430321:	ret    
  430322:	hlt    
  430323:	into   
  430324:	jns    0x430342
  430326:	inc    ebp
  430327:	or     eax,0xbefce332
  43032c:	mov    DWORD PTR [esi+0x44],edx
  43032f:	jmp    0x4302df
  430331:	pop    esp
  430332:	popf   
  430333:	jmp    0x2dc8dc99
  430338:	add    cl,BYTE PTR ds:0x445205e8
  43033e:	cli    
  43033f:	out    0x93,al
  430341:	scas   al,BYTE PTR es:[edi]
  430342:	(bad)  
  430343:	fst    QWORD PTR [ebx+0x44a7fe9e]
  430349:	rol    DWORD PTR ds:0x64ac5d99,1
  43034f:	pusha  
  430350:	adc    bh,ch
  430352:	xor    al,0xb2
  430354:	adc    BYTE PTR [ebp-0x32a1108d],bh
  43035a:	and    al,0xa5
  43035c:	je     0x430348
  43035e:	or     DWORD PTR [edi-0x68f4b7f4],ebx
  430364:	pushf  
  430365:	fdivr  QWORD PTR [edi+0x3452a00]
  43036b:	enter  0x8132,0x1e
  43036f:	inc    esp
  430370:	inc    eax
  430371:	pop    esp
  430372:	xchg   ebp,eax
  430373:	add    BYTE PTR [ebx-0x50bb7824],bh
  430379:	sbb    al,0x8d
  43037b:	inc    esp
  43037c:	lahf   
  43037d:	sbb    al,0x89
  43037f:	xchg   DWORD PTR [edi],ecx
  430381:	fld    QWORD PTR [eax]
	...
  430397:	add    BYTE PTR [esi],ah
  430399:	sbb    bh,bl
  43039b:	mov    bh,cl
  43039d:	sub    BYTE PTR [edx-0x75],al
  4303a0:	mov    esp,0x9f4487ec
  4303a5:	sub    al,0x7b
  4303a7:	clc    
  4303a8:	xchg   ebp,eax
  4303a9:	jae    0x4303b8
  4303ab:	(bad)  
  4303ac:	xlat   BYTE PTR ds:[ebx]
  4303ad:	sub    BYTE PTR [edx-0x7823b500],bh
  4303b3:	dec    esp
  4303b4:	pop    edi
  4303b5:	and    ebx,0xc004c020
  4303bb:	loope  0x430406
  4303bd:	repz adc ebx,DWORD PTR [eax+ebx*2+0x19]
  4303c2:	cli    
  4303c3:	mov    al,BYTE PTR [ebx]
  4303c5:	lds    ecx,FWORD PTR [esp+0x47]
  4303c9:	pop    edx
  4303ca:	enter  0xc75,0x66
  4303ce:	hlt    
  4303cf:	jmp    0x3912bc
  4303d4:	or     BYTE PTR [eax-0x445afe2],0xfa
  4303db:	dec    edi
  4303dc:	in     al,0x8a
  4303de:	push   es
  4303df:	push   ecx
  4303e0:	je     0x4303cb
  4303e2:	push   eax
  4303e3:	push   ss
  4303e4:	cmp    ebx,ebp
  4303e6:	add    DWORD PTR [edi+ebx*1-0x34fffee8],0xb246cc6
  4303f1:	lds    eax,FWORD PTR [esp+0x62]
  4303f5:	adc    bh,BYTE PTR [ebp+ecx*2+0x62]
  4303f9:	mov    bl,0x39
  4303fb:	or     al,0x0
	...
  43040d:	add    BYTE PTR [eax],al
  43040f:	add    dl,ah
  430411:	cwde   
  430412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430413:	push   ss
  430414:	mov    ds:0xc27f042b,al
  430419:	bswap  esp
  43041b:	(bad)  
  43041c:	mov    ds:0x3e2489ba,eax
  430421:	xor    esi,edi
  430423:	jmp    DWORD PTR [eax]
  430425:	leave  
  430426:	mov    ecx,0xc9b95623
  43042b:	and    ebp,DWORD PTR [esi-0x7c]
  43042e:	into   
  43042f:	cli    
  430430:	mov    dh,0x15
  430432:	ret    0x6200
  430435:	xor    dh,bh
  430437:	mov    cl,0xa3
  430439:	dec    esi
  43043a:	imul   esp,DWORD PTR [esi+eax*1],0x31
  43043e:	(bad)  
  43043f:	jmp    FWORD PTR [ebp+0x66]
  430442:	xchg   ebp,eax
  430443:	adc    BYTE PTR [edi+0x4d5304f0],bh
  430449:	gs loope 0x4304a7
  43044c:	arpl   WORD PTR [eax],si
  43044e:	(bad)  
  43044f:	(bad)  
  430450:	push   ss
  430451:	and    BYTE PTR [ecx+0x24],dh
  430454:	xchg   esi,eax
  430455:	xor    esi,edi
  430457:	(bad)  
  430458:	fnstcw WORD PTR [ebx+0x28]
  43045b:	mov    ah,0x7e
  43045d:	aam    0xfd
  43045f:	jmp    DWORD PTR [edx+0x68]
  430462:	ror    edx,1
  430464:	adc    eax,0xa3c8f468
  430469:	mov    ecx,0x2b3623c0
  43046e:	aas    
  43046f:	or     esp,esi
  430471:	xchg   esi,eax
  430472:	add    al,0x0
	...
  430488:	bound  eax,QWORD PTR [ebp-0x301203f9]
  43048e:	test   DWORD PTR [ebx-0x1cf37],0xb027d9e7
  430498:	pusha  
  430499:	add    al,0xfa
  43049b:	daa    
  43049c:	leave  
  43049d:	inc    esi
  43049e:	ffree  st(1)
  4304a0:	(bad)  
  4304a1:	popf   
  4304a2:	add    eax,esp
  4304a4:	jmp    0x6ed9:0x62045c5e
  4304ab:	rol    BYTE PTR [ecx-0x5bdbd757],0x96
  4304b2:	sub    dh,BYTE PTR [eax-0x4edd56bf]
  4304b8:	imul   eax,DWORD PTR [esi-0xb],0xe79973d3
  4304bf:	clc    
  4304c0:	rcl    DWORD PTR [eax+ebp*8-0x1a634c08],cl
  4304c7:	inc    edx
  4304c8:	adc    ecx,0xffffffee
  4304cb:	cmp    ebp,DWORD PTR [ebp+0x31]
  4304ce:	addr16 inc eax
  4304d0:	push   esi
  4304d1:	push   ebx
  4304d2:	popf   
  4304d3:	add    esp,edx
  4304d5:	aas    
  4304d6:	cmp    al,0xaf
  4304d8:	mov    BYTE PTR [edx+0x24],dl
  4304db:	loopne 0x43046e
  4304dd:	push   edx
  4304de:	cmp    al,0xe0
  4304e0:	jno    0x430512
  4304e2:	sub    al,0x29
  4304e4:	cmp    DWORD PTR [esi+0x6f],eax
  4304e7:	mov    bh,0x81
  4304e9:	xchg   ebp,eax
  4304ea:	ins    BYTE PTR es:[edi],dx
  4304eb:	pop    DWORD PTR [eax]
	...
  4304fd:	add    BYTE PTR [eax],al
  4304ff:	add    BYTE PTR [esi+0x6203e819],al
  430505:	add    bl,BYTE PTR [esi-0x69d01e08]
  43050b:	sub    BYTE PTR [ecx],bl
  43050d:	inc    esi
  43050e:	cmc    
  43050f:	retf   
  430510:	pushf  
  430511:	popf   
  430512:	out    0x7c,eax
  430514:	sahf   
  430515:	std    
  430516:	mov    ebx,0x834b141a
  43051b:	sub    ch,bl
  43051d:	pushf  
  43051e:	ret    
  43051f:	ret    
  430520:	in     al,0x94
  430522:	add    ch,cl
  430524:	lods   eax,DWORD PTR ds:[esi]
  430525:	push   eax
  430526:	adc    BYTE PTR [ebp+0x61],0xd9
  43052a:	add    BYTE PTR [ebp+edx*2-0x3],dh
  43052e:	shr    cl,0x61
  430531:	fnstenv ds:0xd659ca21
  430537:	dec    esp
  430538:	mov    al,BYTE PTR [edx-0x6]
  43053b:	fsubr  QWORD PTR [ecx+0x48e94496]
  430541:	sub    esp,edi
  430543:	ss jp  0x4305a4
  430546:	inc    ebp
  430547:	add    eax,0xcd4d5ea6
  43054c:	int    0x50
  43054e:	xor    BYTE PTR [ebp+0x61],0xd9
  430552:	add    BYTE PTR [ebp+eax*1-0x3],ah
  430556:	shr    cl,0x61
  430559:	fnstenv ds:0xf9d7c531
  43055f:	aam    0x99
  430561:	xchg   esi,eax
  430562:	inc    esp
  430563:	jmp    0x430568
	...
  430578:	outs   dx,BYTE PTR ds:[esi]
  430579:	test   DWORD PTR [ecx+edi*2-0x1b5dcda0],ecx
  430580:	jge    0x4305c2
  430582:	addr16 loop 0x4305f4
  430585:	pop    edx
  430586:	out    dx,eax
  430587:	(bad)  
  430588:	jge    0x430545
  43058a:	in     eax,0xc0
  43058c:	or     BYTE PTR [edi],dh
  43058e:	cli    
  43058f:	mov    BYTE PTR [edx+0x8e93e92],0xaa
  430596:	ds jmp 0xe981afd7
  43059c:	fsubr  QWORD PTR [ecx-0x6c7c16c2]
  4305a2:	ds jmp 0xe9819a4d
  4305a8:	dec    esi
  4305a9:	xchg   esp,eax
  4305aa:	ds jmp 0x81aea5
  4305b0:	or     edi,DWORD PTR [eax]
  4305b2:	dec    esi
  4305b3:	inc    edx
  4305b4:	sti    
  4305b5:	xor    ecx,DWORD PTR [esi+0x42]
  4305b8:	sti    
  4305b9:	mov    WORD PTR [esi+0x42],cs
  4305bc:	retf   
  4305bd:	pop    ds
  4305be:	dec    ebx
  4305bf:	inc    edx
  4305c0:	retf   
  4305c1:	mov    cs,WORD PTR [ebx+0x42]
  4305c4:	mov    ebx,0xbb4249c7
  4305c9:	jp     0x430619
  4305cb:	inc    edx
  4305cc:	retf   
  4305cd:	call   DWORD PTR [edx+eax*2-0x35]
  4305d1:	adc    DWORD PTR [ebp+0x42],0xffffffbb
  4305d5:	cwde   
  4305d6:	push   ebx
  4305d7:	inc    edx
  4305d8:	mov    ebx,0x424ed9
	...
  4305ed:	add    BYTE PTR [eax],al
  4305ef:	add    BYTE PTR [ebx-0x74bdb3b3],cl
  4305f5:	aaa    
  4305f6:	dec    esp
  4305f7:	inc    edx
  4305f8:	jnp    0x43062d
  4305fa:	inc    esp
  4305fb:	inc    edx
  4305fc:	jnp    0x4305a1
  4305fe:	push   eax
  4305ff:	inc    edx
  430600:	mov    ebp,DWORD PTR [edx]
  430602:	push   ecx
  430603:	inc    edx
  430604:	mov    ecx,edx
  430606:	pop    eax
  430607:	inc    edx
  430608:	jnp    0x4305b1
  43060a:	pop    eax
  43060b:	inc    edx
  43060c:	jnp    0x4305fa
  43060e:	push   ecx
  43060f:	inc    edx
  430610:	dec    ebx
  430611:	sbb    ebx,DWORD PTR [ecx+0x42]
  430614:	dec    ebx
  430615:	fist   DWORD PTR [edi+0x42]
  430618:	cmp    eax,DWORD PTR [ecx+ebx*2+0x42]
  43061c:	cmp    edi,DWORD PTR [esi]
  43061e:	pop    ecx
  43061f:	inc    edx
  430620:	dec    ebx
  430621:	mov    ebx,DWORD PTR [ecx+0x42]
  430624:	dec    ebx
  430625:	push   ss
  430626:	pop    ecx
  430627:	inc    edx
  430628:	cmp    edx,eax
  43062a:	push   edi
  43062b:	inc    edx
  43062c:	cmp    ebp,DWORD PTR [esi+0x160b425c]
  430632:	push   esi
  430633:	inc    edx
  430634:	or     ebx,DWORD PTR [edx]
  430636:	push   esi
  430637:	inc    edx
  430638:	sti    
  430639:	mov    BYTE PTR [esi+0x42],dl
  43063c:	bound  esi,QWORD PTR [edx]
  43063e:	jl     0x43069c
  430640:	mov    al,ds:0xa05c7932
  430645:	xor    cl,BYTE PTR [esp+ebx*2+0x5b4532a0]
  43064c:	mov    al,ds:0x205ac332
  430651:	xor    ah,bl
  430653:	pop    edx
	...
  430668:	and    BYTE PTR [edx],dh
  43066a:	jle    0x4306c7
  43066c:	and    BYTE PTR [edx],dh
  43066e:	xchg   ebp,eax
  43066f:	pop    ebx
  430670:	and    BYTE PTR [edx],dh
  430672:	xchg   BYTE PTR [ebx+0x20],bl
  430675:	xor    bl,BYTE PTR [edi+0x5b]
  430678:	and    BYTE PTR [edx],dh
  43067a:	pop    edi
  43067b:	push   ebx
  43067c:	and    BYTE PTR [edx],dh
  43067e:	mov    edx,0xbe322051
  430683:	jae    0x4306a5
  430685:	xor    dl,BYTE PTR [esi]
  430687:	inc    edi
  430688:	and    BYTE PTR [edx],dh
  43068a:	add    BYTE PTR [edx+0x20],cl
  43068d:	xor    dl,BYTE PTR [edi]
  43068f:	dec    edx
  430690:	and    BYTE PTR [edx],dh
  430692:	into   
  430693:	inc    ebp
  430694:	and    BYTE PTR [edx],dh
  430696:	repnz inc esi
  430698:	and    BYTE PTR [edx],dh
  43069a:	cmp    al,0x47
  43069c:	and    BYTE PTR [edx],dh
  43069e:	arpl   WORD PTR [eax+eiz*1+0x32],cx
  4306a2:	aaa    
  4306a3:	arpl   WORD PTR [eax-0x5f9cabd0],sp
  4306a9:	xor    dl,ah
  4306ab:	inc    esp
  4306ac:	mov    al,ds:0xa04a0230
  4306b1:	xor    BYTE PTR [esi-0x2acf5fb7],ch
  4306b7:	jo     0x430659
  4306b9:	xor    BYTE PTR [ecx],dl
  4306bb:	outs   dx,BYTE PTR ds:[esi]
  4306bc:	mov    al,ds:0xa06d9d30
  4306c1:	xor    BYTE PTR [edx+0x6e],ah
  4306c4:	mov    al,ds:0xa06f1130
  4306c9:	(bad)  
  4306cb:	mov    al,0x0
	...
  4306dd:	add    BYTE PTR [eax],al
  4306df:	add    BYTE PTR [edi+edx*4-0x19],bh
  4306e3:	dec    ebp
  4306e4:	jne    0x43067d
  4306e6:	out    0x64,eax
  4306e8:	jae    0x430681
  4306ea:	out    0x41,eax
  4306ec:	test   DWORD PTR [edi-0x68648319],edx
  4306f2:	out    0x53,eax
  4306f4:	cwde   
  4306f5:	xchg   edi,eax
  4306f6:	out    0x8,eax
  4306f8:	push   eax
  4306f9:	xchg   edi,eax
  4306fa:	out    0x3,eax
  4306fc:	arpl   di,dx
  4306fe:	out    0xff,al
  430700:	popa   
  430701:	fsubr  st(1),st
  430703:	cld    
  430704:	pop    ebp
  430705:	rcr    ch,1
  430707:	clc    
  430708:	imul   edx,esp,0xd26bb99d
  43070e:	xlat   BYTE PTR ds:[ebx]
  43070f:	adc    bl,BYTE PTR [edi+ecx*4-0x2a]
  430713:	cmovg  ebp,ebx
  430716:	fimul  DWORD PTR [ebx]
  430718:	jnp    0x4306f9
  43071a:	into   
  43071b:	or     BYTE PTR [ebp-0x22],ch
  43071e:	dec    BYTE PTR [eax]
  430720:	outs   dx,BYTE PTR ds:[esi]
  430721:	in     eax,0xfc
  430723:	add    eax,0xe1c8f969
  430728:	pop    edi
  430729:	test   ebp,0xc6f657e1
  43072f:	fild   WORD PTR [esi-0x5]
  430732:	ret    0x3adb
  430735:	lock rcr dl,0x8a
  430739:	lock mov ebp,0x14f57cd9
  43073f:	(bad)  
  430740:	js     0x4306d1
  430742:	sub    eax,0xba
	...
  430757:	add    BYTE PTR [edi-0x5845e271],bl
  43075d:	or     DWORD PTR [eax],ebx
  43075f:	mov    edx,0xeff70772
  430764:	jbe    0x430772
  430766:	cmc    
  430767:	in     eax,dx
  430768:	jo     0x430775
  43076a:	add    esi,edi
  43076c:	or     DWORD PTR [ecx],eax
  43076e:	aaa    
  43076f:	repnz std 
  430771:	or     esi,DWORD PTR [esi]
  430773:	in     eax,0xcb
  430775:	fwait
  430776:	inc    esi
  430777:	xor    ecx,eax
  430779:	add    al,0x3b
  43077b:	(bad)  
  43077c:	and    DWORD PTR [ecx-0x62ddd5c2],ebx
  430782:	inc    edx
  430783:	cs xchg cx,ax
  430786:	inc    edi
  430787:	pop    ecx
  430788:	pop    edi
  430789:	mov    ds:0xa3abe93e,eax
  43078e:	ds jmp 0xe981aa7b
  430794:	sbb    DWORD PTR [ebx-0x5da916c2],esp
  43079a:	ds jmp 0xe981aa95
  4307a0:	push   edx
  4307a1:	mov    ecx,0xb92be93e
  4307a6:	ds jmp 0xe981c0d7
  4307ac:	bound  ebp,QWORD PTR [edi-0x509d16c2]
  4307b2:	ds jmp 0xe981c09f
  4307b8:	arpl   WORD PTR [eax+0xe93e],di
	...
  4307ce:	add    BYTE PTR [eax],al
  4307d0:	mov    ah,0xb8
  4307d2:	ds jmp 0xe981bfa9
  4307d8:	push   ds
  4307d9:	mov    eax,0xb75de93e
  4307de:	ds jmp 0xe981c307
  4307e4:	stc    
  4307e5:	mov    edx,0xbbf3e93e
  4307ea:	ds jmp 0xe981c39d
  4307f0:	jnp    0x4307ad
  4307f2:	ds jmp 0x81bd62
  4307f8:	cmp    edi,DWORD PTR [ebp-0x42c4bd9c]
  4307fe:	fs inc edx
  430800:	or     ebx,eax
  430802:	inc    dx
  430804:	or     ebx,eax
  430806:	inc    dx
  430808:	sti    
  430809:	lahf   
  43080a:	fs inc edx
  43080c:	sti    
  43080d:	jmp    0x144e4a75
  430812:	gs inc edx
  430814:	or     ebx,DWORD PTR [esi+0x65]
  430817:	inc    edx
  430818:	sti    
  430819:	xchg   ecx,eax
  43081a:	arpl   WORD PTR [edx-0x5],ax
  43081d:	adc    eax,0x29cb4267
  430822:	addr16 inc edx
  430824:	retf   
  430825:	and    BYTE PTR [edi+0x42],0xbb
  430829:	jbe    0x430892
  43082b:	inc    edx
  43082c:	mov    ebx,0xcb42676f
  430831:	arpl   WORD PTR [edi+0x42],sp
	...
  430848:	retf   
  430849:	pop    eax
  43084a:	inc    dx
  43084c:	mov    ebx,0xbb426658
  430851:	pop    eax
  430852:	inc    dx
  430854:	mov    edx,edi
  430856:	inc    dx
  430858:	mov    edx,edi
  43085a:	inc    dx
  43085c:	jnp    0x4308b8
  43085e:	addr16 inc edx
  430860:	jnp    0x43084f
  430862:	inc    dx
  430864:	mov    edx,edi
  430866:	gs inc edx
  430868:	mov    eax,DWORD PTR [ecx+0x67]
  43086b:	inc    edx
  43086c:	jnp    0x43089d
  43086e:	addr16 inc edx
  430870:	jnp    0x4308c7
  430872:	in     eax,dx
  430873:	cmp    al,0x4a
  430875:	fadd   QWORD PTR [eax]
  430877:	mov    edi,DWORD PTR [edi+0x3b013a31]
  43087d:	fadd   QWORD PTR [ecx+0x1295f94]
  430883:	add    BYTE PTR [edx+0x32],ah
  430886:	or     DWORD PTR [esi+edi*2+0x36],0x1f
  43088b:	jg     0x43082b
  43088d:	into   
  43088e:	aam    0xfa
  430890:	loope  0x43087f
  430892:	call   0xb82625c2
  430897:	push   ecx
  430898:	jmp    0x6396ea62
  43089d:	xor    bh,dh
  43089f:	sub    DWORD PTR cs:[ebx],esi
  4308a2:	push   cs
  4308a3:	push   ebx
  4308a4:	jmp    0xf58d9a11
  4308a9:	mov    edx,0x892e
	...
  4308be:	add    BYTE PTR [eax],al
  4308c0:	mov    cs,WORD PTR [esi]
  4308c2:	out    0x88,al
  4308c4:	xchg   BYTE PTR [esi],dl
  4308c6:	ret    0x3e88
  4308c9:	push   cs
  4308ca:	jmp    0x1e88:0xde163688
  4308d1:	into   
  4308d2:	fmul   DWORD PTR [eax-0xd0329ca]
  4308d8:	mov    al,ds:0xc00abc16
  4308dd:	and    eax,0xa8af6607
  4308e2:	imul   ecx,DWORD PTR [eax],0xfb893262
  4308e8:	ins    DWORD PTR es:[edi],dx
  4308e9:	scas   al,BYTE PTR es:[edi]
  4308ea:	arpl   WORD PTR [eax],cx
  4308ec:	bound  esi,QWORD PTR [edx]
  4308ee:	mov    eax,eax
  4308f0:	pop    ebp
  4308f1:	scas   al,BYTE PTR es:[edi]
  4308f2:	jnp    0x4308fc
  4308f4:	bound  esi,QWORD PTR [edx]
  4308f6:	mov    ecx,DWORD PTR [esi+eax*2+0x6200054e]
  4308fd:	sub    DWORD PTR [edx+0x24],edi
  430900:	add    dh,BYTE PTR [ecx]
  430902:	(bad)  
  430903:	(bad)  
  430904:	out    dx,eax
  430905:	dec    ecx
  430906:	mov    ecx,ecx
  430908:	ins    DWORD PTR es:[edi],dx
  430909:	mov    bh,0x83
  43090b:	or     BYTE PTR [edx+0x30],ah
  43090e:	mov    ecx,ecx
  430910:	retf   
  430911:	fldl2e 
  430913:	lods   eax,DWORD PTR ds:[esi]
  430914:	push   edx
  430915:	xor    DWORD PTR [ecx+0xc],esp
  430918:	(bad)  
  430919:	(bad)  
  43091b:	pop    eax
  43091c:	mov    eax,ds:0xad48e6e1
  430921:	mov    esi,0x407
	...
  430936:	add    BYTE PTR [eax],al
  430938:	fist   DWORD PTR [ebp-0x79976bfd]
  43093e:	sub    eax,DWORD PTR [eax]
  430940:	jmp    0x4308d7
  430942:	add    ebp,DWORD PTR [eax+ebx*2-0x2501d47a]
  430949:	pop    ebp
  43094a:	les    esp,FWORD PTR [ebx]
  43094c:	(bad)  
  43094d:	(bad)  
  43094f:	pop    esp
  430950:	adc    bh,BYTE PTR [edx-0x6ba6fbd9]
  430956:	and    ah,ah
  430958:	loop   0x430958
  43095a:	and    al,0xb6
  43095c:	pushf  
  43095d:	test   eax,0xad81c860
  430962:	das    
  430963:	les    ecx,FWORD PTR [edi+0x1e8ae7ce]
  430969:	cmc    
  43096a:	stos   DWORD PTR es:[edi],eax
  43096b:	mov    ah,BYTE PTR [esi]
  43096d:	cmc    
  43096e:	mov    bh,0x8a
  430970:	push   ss
  430971:	cmc    
  430972:	not    DWORD PTR [edi-0x1793b383]
  430978:	dec    ecx
  430979:	fsub   st,st(7)
  43097b:	add    esi,DWORD PTR [edx]
  43097d:	mov    bl,0xe7
  43097f:	mov    gs,esi
  430981:	cmc    
  430982:	sub    eax,DWORD PTR [edx+eiz*2]
  430985:	fldcw  WORD PTR [esi+0x51]
  430988:	jp     0x43099a
  43098a:	aam    0x3
  43098c:	bound  edx,QWORD PTR [edx+0x0]
  43098f:	mov    eax,DWORD PTR [esi]
  430991:	cmc    
  430992:	out    dx,eax
  430993:	xchg   BYTE PTR [edi-0x3c],bh
  430996:	jmp    0xb:0xf13069ad
	...
  4309ad:	add    BYTE PTR [eax],al
  4309af:	add    BYTE PTR [edx-0x27],ah
  4309b2:	add    BYTE PTR [edx-0x26],ah
  4309b5:	cmc    
  4309b6:	pop    esp
  4309b7:	call   0x34c8e31d
  4309bc:	push   esi
  4309bd:	push   esi
  4309be:	shl    dl,0xa7
  4309c1:	sbb    cl,ch
  4309c3:	in     eax,dx
  4309c4:	fidivr WORD PTR [eax]
  4309c6:	add    BYTE PTR [eax+0x25],ah
  4309c9:	cli    
  4309ca:	xor    dh,dh
  4309cc:	mov    dl,BYTE PTR [esp+ecx*1+0x7f3e49a8]
  4309d3:	leave  
  4309d4:	pusha  
  4309d5:	push   eax
  4309d6:	test   DWORD PTR ds:0xe900d952,eax
  4309dc:	jb     0x430968
  4309de:	inc    esp
  4309df:	add    esp,DWORD PTR [ecx+0x406a0f30]
  4309e5:	fadd   DWORD PTR [edi+0xa05fa1d]
  4309eb:	ds adc al,0xe2
  4309ee:	or     DWORD PTR [esi+0x29],ecx
  4309f1:	shl    BYTE PTR [ecx-0x34c129d4],cl
  4309f7:	jmp    0xd952:0xd855020
  4309fe:	add    cl,ch
  430a00:	out    dx,al
  430a01:	push   esp
  430a02:	and    eax,0xd960b1
  430a07:	(bad)  
  430a08:	(bad)  
  430a0a:	push   eax
  430a0b:	call   0x65cae371
  430a10:	test   DWORD PTR ds:0xe901,ecx
	...
  430a26:	add    BYTE PTR [eax],al
  430a28:	popa   
  430a29:	push   esi
  430a2a:	test   DWORD PTR ds:0xe900d8ca,eax
  430a30:	pop    esi
  430a31:	sbb    BYTE PTR [eax+0x1898565],cl
  430a37:	jmp    0xc5885a9d
  430a3c:	ins    DWORD PTR es:[edi],dx
  430a3d:	push   eax
  430a3e:	lea    eax,[eax]
  430a40:	xchg   edi,eax
  430a41:	test   eax,0x4e4b0000
  430a46:	inc    esp
  430a47:	or     BYTE PTR [edx+0x3c3303f0],cl
  430a4d:	adc    eax,0x51d2c71b
  430a52:	and    eax,0xd94b98
  430a57:	mov    eax,DWORD PTR [esi+0x40e8bfcd]
  430a5d:	cmp    BYTE PTR [edi+0x1e317789],bh
  430a63:	mov    DWORD PTR [edi+0xb008631],eax
  430a69:	fld    DWORD PTR [ecx-0x1769fcbb]
  430a6f:	sbb    eax,0x84879418
  430a74:	daa    
  430a75:	lds    eax,FWORD PTR [eax]
  430a77:	add    BYTE PTR [ebx],cl
  430a79:	push   eax
  430a7a:	inc    esp
  430a7b:	or     BYTE PTR [edx-0x4bdce813],bh
  430a81:	dec    esi
  430a82:	test   DWORD PTR [ebx+edi*1],esp
  430a85:	aad    0x0
  430a87:	add    BYTE PTR [eax-0x69],al
  430a8a:	mov    edi,0xe8
	...
  430a9f:	add    ah,al
  430aa1:	aaa    
  430aa2:	mov    edi,0x7e313789
  430aa7:	add    bl,cl
  430aa9:	fadd   DWORD PTR [ecx+0x8ed8ac2]
  430aaf:	and    eax,DWORD PTR [esi+ecx*2-0x2accdb7b]
  430ab6:	add    BYTE PTR [eax],al
  430ab8:	adc    BYTE PTR [edi+0x3781e8bf],dl
  430abe:	mov    edi,0x96310789
  430ac3:	add    BYTE PTR [ebx-0x28],bh
  430ac6:	add    edx,0x231ced4a
  430acc:	(bad)  
  430acd:	jmp    0x430a5a
  430acf:	test   BYTE PTR [esi-0x6e],al
  430ad2:	add    al,0x0
  430ad4:	(bad)  
  430ad5:	mov    DWORD PTR [esi-0x3f],0xcadf2b4b
  430adc:	jmp    0x4e42f2d0
  430ae1:	xor    al,BYTE PTR [esi]
  430ae3:	pushaw 
  430ae5:	xchg   ebx,eax
  430ae6:	or     DWORD PTR [ebp+0x2d],eax
  430ae9:	fistp  WORD PTR [ecx]
  430aeb:	(bad)  
  430aec:	loope  0x430adf
  430aee:	std    
  430aef:	jmp    DWORD PTR [edx-0x47]
  430af2:	mov    DWORD PTR [esi+ebx*1],esp
  430af5:	xor    bh,dh
  430af7:	(bad)  
  430af8:	jmp    0x430aef
  430afa:	call   0xe208f67a
  430aff:	mov    ds:0x88fe3262,eax
	...
  430b18:	(bad)  
  430b19:	or     eax,0x32620022
  430b1e:	lea    edi,[esi+edi*1+0x62fffe86]
  430b25:	mov    ecx,0xc76a23b9
  430b2a:	aas    
  430b2b:	mov    ecx,0x17e3262
  430b30:	xor    DWORD PTR [ecx-0x6e],0xfe328f20
  430b37:	jg     0x430b9b
  430b39:	push   ds
  430b3a:	or     al,0x3d
  430b3c:	bound  esi,QWORD PTR [edx]
  430b3e:	inc    BYTE PTR [eax]
  430b40:	xlat   BYTE PTR cs:[ebx]
  430b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b43:	call   0x476c03
  430b48:	bound  edi,QWORD PTR [edi]
  430b4a:	aaa    
  430b4b:	aas    
  430b4c:	jmp    0x430aeb
  430b4e:	loope  0x430af7
  430b50:	bound  esi,QWORD PTR [edx]
  430b52:	(bad)  
  430b53:	out    0x40,al
  430b55:	mov    bh,0xc8
  430b57:	pop    es
  430b58:	(bad)  
  430b5a:	sub    BYTE PTR [edi+0x443f0852],dl
  430b60:	mov    ah,bl
  430b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b63:	loop   0x430b11
  430b65:	push   ecx
  430b66:	fs out 0xbd,eax
  430b69:	fsub   st,st(7)
  430b6b:	add    eax,DWORD PTR [ebp-0x30]
  430b6e:	mov    dh,0x3a
  430b70:	xchg   ebp,eax
  430b71:	push   eax
  430b72:	xor    al,0xe7
  430b74:	add    eax,0xb03e7da
  430b79:	(bad)  
  430b7b:	xchg   ebx,eax
	...
  430b90:	cmp    eax,0x5e97b956
  430b95:	dec    esi
  430b96:	sub    eax,0x5ed8450c
  430b9b:	inc    edx
  430b9c:	inc    ebp
  430b9d:	sbb    BYTE PTR [esi+eiz*8],bh
  430ba0:	pop    esi
  430ba1:	(bad)  
  430ba3:	repz adc eax,0xddf2bc7
  430ba9:	cmp    ecx,DWORD PTR [eax]
  430bab:	add    al,0x8e
  430bad:	add    ch,ah
  430baf:	add    esp,DWORD PTR [edx+0x9]
  430bb2:	call   0xe83f484e
  430bb7:	add    esp,DWORD PTR [edx+0x270a13d9]
  430bbd:	(bad)  
  430bbf:	mov    bl,0xdd
  430bc1:	lds    edx,FWORD PTR [ebx-0x56]
  430bc4:	xlat   BYTE PTR ds:[ebx]
  430bc5:	lahf   
  430bc6:	pusha  
  430bc7:	rol    BYTE PTR [ecx+0x7e5fb0b9],0x15
  430bce:	call   0xaa086dd6
  430bd3:	adc    eax,0x97e8cd1f
  430bd8:	and    eax,0x792b56af
  430bdd:	shl    edi,cl
  430bdf:	add    ebx,ebx
  430be1:	iret   
  430be2:	in     al,dx
  430be3:	add    esp,DWORD PTR [edx+0x2e]
  430be6:	add    esi,ebp
  430be8:	mov    ebx,0xbbebe5d4
  430bed:	int    0x57
  430bef:	jb     0x430c30
  430bf1:	push   eax
  430bf2:	pop    ebp
  430bf3:	lds    eax,FWORD PTR [eax]
	...
  430c05:	add    BYTE PTR [eax],al
  430c07:	add    cl,al
  430c09:	pop    ecx
  430c0a:	clc    
  430c0b:	push   ss
  430c0c:	data16 fld DWORD PTR [eax]
  430c0f:	(bad)  
  430c10:	outs   dx,BYTE PTR ds:[esi]
  430c11:	push   ebx
  430c12:	shr    BYTE PTR [eax],0x7e
  430c15:	rol    ecx,1
  430c17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c18:	cmp    eax,0x61e8feb6
  430c1d:	(bad)  [eax-0x7739c25b]
  430c23:	xor    eax,0x96e5c54a
  430c28:	sahf   
  430c29:	xchg   ebp,eax
  430c2a:	and    al,0x4d
  430c2c:	popa   
  430c2d:	fld    DWORD PTR [eax]
  430c2f:	jmp    0x3d67990d
  430c34:	dec    ebx
  430c35:	jo     0x430bbd
  430c37:	and    al,0x66
  430c39:	mov    edx,0x54d8eee0
  430c3e:	and    eax,0xd961b9
  430c43:	jb     0x430c2a
  430c45:	hlt    
  430c46:	fs call 0x3dae5ad
  430c4c:	arpl   WORD PTR [esi-0x79a9710f],bx
  430c52:	inc    esp
  430c53:	fucomi st,st(2)
  430c55:	jl     0x430c7c
  430c57:	add    eax,0xc200d961
  430c5c:	imul   esi,DWORD PTR [edi-0x12567d],0xffffff85
  430c63:	xor    edx,ebp
  430c65:	adc    eax,0x9c38ea67
  430c6a:	icebp  
  430c6b:	push   esp
	...
  430c80:	mov    dl,BYTE PTR [ecx]
  430c82:	jge    0x430c9d
  430c84:	aad    0xbf
  430c86:	(bad)  
  430c87:	push   DWORD PTR [eax+0x448af9dc]
  430c8d:	xchg   edi,eax
  430c8e:	fild   WORD PTR [edx]
  430c90:	push   esp
  430c91:	inc    ebx
  430c92:	push   esi
  430c93:	push   ebx
  430c94:	mov    edi,0xf2e881d5
  430c99:	imul   ebx,DWORD PTR [esi],0x73eafe54
  430c9f:	pop    es
  430ca0:	loope  0x430c81
  430ca2:	out    0x92,eax
  430ca4:	jle    0x430c7b
  430ca6:	add    BYTE PTR [ebx-0x38a5bef9],cl
  430cac:	inc    DWORD PTR [eax+0x22]
  430caf:	add    DWORD PTR [ebx],edi
  430cb1:	fld    QWORD PTR [eax]
  430cb3:	jmp    0x430cf5
  430cb5:	bound  ebp,QWORD PTR [ebp+0xdeab24]
  430cbb:	add    BYTE PTR [edx-0x39abe17f],dh
  430cc1:	fnstenv ds:0x57e0a199
  430cc7:	mul    DWORD PTR [edx]
  430cc9:	popa   
  430cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ccb:	and    al,0x8b
  430ccd:	fld    QWORD PTR [eax]
  430ccf:	add    bl,bh
  430cd1:	pop    edi
  430cd2:	lea    esp,[edi+eiz*8]
  430cd5:	fld    QWORD PTR [eax]
  430cd7:	add    ah,al
  430cd9:	push   0x6663244d
  430cde:	jge    0x430d04
  430ce0:	xor    esp,DWORD PTR [esi+0x45]
  430ce3:	and    al,0x0
	...
  430cf5:	add    BYTE PTR [eax],al
  430cf7:	add    BYTE PTR [edi],dh
  430cf9:	in     al,0xad
  430cfb:	inc    ecx
  430cfc:	mov    ebx,0xc9450561
  430d01:	fadd   QWORD PTR [eax]
  430d03:	add    BYTE PTR [eax],dl
  430d05:	mov    ecx,0xdcba6424
  430d0a:	add    BYTE PTR [edi],cl
  430d0c:	hlt    
  430d0d:	fwait
  430d0e:	xchg   DWORD PTR [edi+ebx*2+0x62000105],eax
  430d15:	inc    edx
  430d16:	sub    ebp,0x277bd32e
  430d1c:	mov    al,ds:0x9ad14d33
  430d21:	(bad)
  430d24:	bound  eax,QWORD PTR [edx-0x2]
  430d27:	jmp    DWORD PTR [ebx]
  430d29:	inc    ebx
  430d2a:	sbb    DWORD PTR [edi],esp
  430d2c:	stos   BYTE PTR es:[edi],al
  430d2d:	lods   eax,DWORD PTR ds:[esi]
  430d2e:	add    BYTE PTR [ebx+0x3700e7e1],cl
  430d34:	push   0x54
  430d36:	hlt    
  430d37:	jle    0x430d8e
  430d39:	out    0x81,eax
  430d3b:	jmp    0x430da3
  430d3d:	sbb    edx,DWORD PTR [esi]
  430d3f:	outs   dx,DWORD PTR ds:[esi]
  430d40:	dec    esp
  430d41:	stos   DWORD PTR es:[edi],eax
  430d42:	mov    eax,0xa8bbc223
  430d47:	and    ebp,DWORD PTR [esi+0x5a23c8bb]
  430d4d:	ret    
  430d4e:	xchg   ecx,eax
  430d4f:	and    esi,DWORD PTR [edx+0x42]
  430d52:	xchg   ecx,eax
  430d53:	sub    BYTE PTR [ecx+eax*1],dh
  430d56:	or     esi,edi
  430d58:	mov    cl,0xe3
  430d5a:	add    eax,0xb3
	...
  430d6f:	add    BYTE PTR [ebx+0x32b20716],ah
  430d75:	and    DWORD PTR [esi],0x521e108
  430d7b:	mov    DWORD PTR [esi-0x59770f22],ebp
  430d81:	es mov edx,0xb9ab6673
  430d87:	and    ebp,DWORD PTR [edx+0x3f]
  430d8a:	push   eax
  430d8b:	adc    al,0x52
  430d8d:	mov    ecx,0xb87623a9
  430d92:	les    ecx,FWORD PTR [ebx]
  430d94:	pop    esi
  430d95:	cs loope 0x430da2
  430d98:	adc    eax,0xc0aef01
  430d9d:	jp     0x430de4
  430d9f:	call   0x23a9e70e
  430da4:	arpl   WORD PTR [edx-0x5c],sp
  430da7:	fistp  QWORD PTR [ecx+0x64]
  430daa:	lods   al,BYTE PTR ds:[esi]
  430dab:	fist   WORD PTR [ebp+0x62]
  430dae:	pushf  
  430daf:	fistp  WORD PTR [ebp-0x18]
  430db2:	jns    0x430e33
  430db4:	push   0xffffffd9
  430db6:	call   0xaca56fbe
  430dbb:	fisttp WORD PTR [ecx+0x5a]
  430dbe:	test   bh,bl
  430dc0:	sbb    edx,ebx
  430dc2:	out    0x3,eax
  430dc4:	(bad)  
  430dc5:	(bad)  
  430dc7:	jmp    esp
  430dc9:	dec    esp
  430dca:	int3   
  430dcb:	dec    edi
  430dcc:	(bad)  
  430dcd:	(bad)  
  430dcf:	mov    ds,esi
  430dd1:	std    
  430dd2:	jecxz  0x430d60
	...
  430de8:	(bad)  
  430de9:	std    
  430dea:	xlat   BYTE PTR ds:[ebx]
  430deb:	cmp    BYTE PTR [edi],0xae
  430dee:	mov    esp,0xfffdde8e
  430df3:	add    ah,BYTE PTR [edx-0x27]
  430df6:	je     0x430e00
  430df8:	(bad)  
  430dfa:	out    0x3,eax
  430dfc:	(bad)  
  430dfd:	fisub  DWORD PTR [ebp+ebx*8-0x12f754c6]
  430e04:	mov    eax,cs:0x9a142ba8
  430e0a:	outs   dx,BYTE PTR ds:[esi]
  430e0b:	pop    ss
  430e0c:	lea    esp,[ecx]
  430e0e:	mov    bl,0x15
  430e10:	mov    ebp,0x9de00c62
  430e15:	bound  edx,QWORD PTR [eax+eiz*8]
  430e18:	xchg   ecx,eax
  430e19:	bound  esi,QWORD PTR [eax+eiz*8-0x4f]
  430e1d:	(bad)  
  430e1f:	add    ebx,ebp
  430e21:	mov    ch,0xc3
  430e23:	neg    DWORD PTR [ebp+esi*4-0x35]
  430e27:	fcmovnbe st,st(5)
  430e29:	stos   BYTE PTR es:[edi],al
  430e2a:	and    BYTE PTR [ebp+0x7b00f2c8],cl
  430e30:	out    dx,eax
  430e31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430e32:	adc    DWORD PTR [edx-0x2206052e],0xffffff95
  430e39:	cli    
  430e3a:	mov    esp,DWORD PTR [ebp-0x44af4173]
  430e40:	(bad)  
  430e41:	xchg   BYTE PTR es:[esi],bl
  430e44:	dec    esi
  430e45:	in     eax,0xa0
  430e47:	inc    edi
  430e48:	jnp    0x430ea8
  430e4a:	pop    ebp
  430e4b:	add    eax,0x0
	...
  430e60:	(bad)  
  430e61:	pop    ebp
  430e62:	sar    DWORD PTR [ecx+esi*4+0x1205955f],0xd9
  430e6a:	add    cl,ch
  430e6c:	inc    esi
  430e6d:	xlat   BYTE PTR ds:[ebx]
  430e6e:	test   DWORD PTR [ebp+0x2b85ba8d],ebp
  430e74:	ja     0x430e8f
  430e76:	ss adc ebx,esi
  430e79:	mov    DWORD PTR [esi+0x249a37ee],0x7ddfdc75
  430e83:	lock pusha 
  430e85:	lods   eax,DWORD PTR ds:[esi]
  430e86:	or     ah,BYTE PTR [ebx+0x23]
  430e89:	fnstenv [esi]
  430e8b:	sub    eax,0xe474ad42
  430e90:	and    ch,bh
  430e92:	neg    BYTE PTR [ebx-0x6f]
  430e95:	pop    esi
  430e96:	ins    DWORD PTR es:[edi],dx
  430e97:	add    eax,0xd955ed2
  430e9c:	fcmovu st,st(0)
  430e9e:	add    cl,ch
  430ea0:	mov    WORD PTR [edi],fs
  430ea2:	or     ch,BYTE PTR [edx+esi*2-0x27]
  430ea6:	add    cl,ch
  430ea8:	out    dx,al
  430ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430eaa:	and    al,0xfd
  430eac:	je     0x430ece
  430eae:	jns    0x430edb
  430eb0:	or     DWORD PTR [edx+0x6d22d24],ecx
  430eb6:	ss xchg esi,eax
  430eb8:	push   0xffffffb6
  430eba:	fild   WORD PTR [eax]
  430ebc:	retf   
  430ebd:	fld    DWORD PTR [eax]
  430ebf:	mov    eax,DWORD PTR [edx]
  430ec1:	loope  0x430e71
  430ec3:	push   cs
	...
  430ed8:	inc    eax
  430ed9:	jbe    0x430ef9
  430edb:	js     0x430e79
  430edd:	xchg   DWORD PTR [ecx+eax*1],eax
  430ee0:	sbb    BYTE PTR [ebp+eax*1+0xda7f84],0x0
  430ee8:	cmc    
  430ee9:	adc    al,0xef
  430eeb:	jb     0x430f10
  430eed:	add    edi,DWORD PTR [ebx+0x5d98b00]
  430ef3:	mov    dh,0x85
  430ef5:	adc    al,0xc1
  430ef7:	maskmovq mm1,(bad)
  430ef8:	test   DWORD PTR [eax+0x178b0000],0xc9d9f733
  430f02:	out    0xad,eax
  430f04:	jnp    0x430edf
  430f06:	add    BYTE PTR [ebx+0xe6160f],al
  430f0c:	dec    ebx
  430f0d:	fld    DWORD PTR [eax]
  430f0f:	vmptrld QWORD PTR [ecx+0x663b0000]
  430f16:	test   DWORD PTR [ebx+ecx*4],esp
  430f19:	fadd   DWORD PTR [eax]
  430f1b:	add    BYTE PTR [eax-0x4b],cl
  430f1e:	and    al,0x58
  430f20:	dec    edx
  430f21:	fld    DWORD PTR [eax]
  430f23:	cmp    ecx,DWORD PTR [ebx]
  430f25:	fnstsw WORD PTR [esi-0x77]
  430f28:	cmp    ebx,ecx
  430f2a:	add    BYTE PTR [ebx],bh
  430f2c:	xor    al,0x49
  430f2e:	arpl   WORD PTR [ebp+0x3b2649c0],ax
  430f34:	xchg   edi,eax
  430f35:	cmp    DWORD PTR [edx+0x6ed8fb00],ebp
  430f3b:	dec    esi
	...
  430f50:	int3   
  430f51:	dec    ecx
  430f52:	push   ds
  430f53:	and    al,0x6e
  430f55:	sbb    DWORD PTR [esi],ebx
  430f57:	push   0x24b4cc2b
  430f5c:	bound  ecx,QWORD PTR [edx-0x489dfffc]
  430f62:	sub    eax,0x3e4aa487
  430f67:	fwait
  430f68:	int3   
  430f69:	mov    bl,0x85
  430f6b:	pop    esp
  430f6c:	jle    0x430f50
  430f6e:	jg     0x430f30
  430f70:	aaa    
  430f71:	jo     0x430f9a
  430f73:	daa    
  430f74:	jmp    0x62f2f03f
  430f79:	inc    edx
  430f7a:	inc    BYTE PTR [esi-0x15f19ea]
  430f80:	mov    ds:0x786e14c7,al
  430f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430f86:	sub    ah,BYTE PTR [edi]
  430f88:	mov    bl,0xa8
  430f8a:	(bad)  
  430f8b:	xor    eax,0x7490e61e
  430f90:	ins    BYTE PTR es:[edi],dx
  430f91:	mov    edi,0x2bee011b
  430f96:	mov    BYTE PTR [esi],bh
  430f98:	arpl   WORD PTR [eax],di
  430f9a:	mov    edx,0x155ef23
  430f9f:	inc    edx
  430fa0:	cdq    
  430fa1:	retf   
  430fa2:	mov    ds,WORD PTR [edi+0x5be095e9]
  430fa8:	arpl   WORD PTR [edx-0x2],ax
  430fab:	xchg   BYTE PTR [esi-0x438055da],dh
  430fb1:	inc    ebx
  430fb2:	or     DWORD PTR [ebp+0x0],esi
	...
  430fc5:	add    BYTE PTR [eax],al
  430fc7:	add    BYTE PTR [esi-0x41],cl
  430fca:	push   ss
  430fcb:	add    DWORD PTR [esi+0x60f77f3d],esi
  430fd1:	xchg   ebp,eax
  430fd2:	push   es
  430fd3:	aaa    
  430fd4:	adc    eax,0x547ffa8f
  430fd9:	sub    BYTE PTR [ecx-0x4e585c00],dl
  430fdf:	and    esi,DWORD PTR [edx-0x47]
  430fe2:	mov    cl,0x23
  430fe4:	pop    esi
  430fe5:	mov    ebp,0xd96f752f
  430fea:	loopne 0x43105b
  430fec:	inc    esi
  430fed:	sbb    eax,0xae6203e8
  430ff2:	add    ecx,DWORD PTR [ebx-0x7ed802ca]
  430ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430ff9:	mov    al,0xb
  430ffb:	mov    ecx,DWORD PTR ds:0xbdd8a200
  431001:	xlat   BYTE PTR ds:[ebx]
  431002:	out    0x3,eax
  431004:	aas    
  431005:	xchg   edx,eax
  431006:	mov    dh,0x4c
  431008:	jnp    0x430faf
  43100a:	or     esi,eax
  43100c:	pop    eax
  43100d:	push   esi
  43100e:	sub    DWORD PTR [edx],eax
  431010:	cwde   
  431011:	out    dx,eax
  431012:	mov    ds:0x9fab51df,eax
  431017:	adc    BYTE PTR [esi],0xfd
  43101a:	adc    eax,DWORD PTR [esi+edx*1]
  43101d:	sar    esi,cl
  43101f:	dec    edx
  431020:	pop    ecx
  431021:	pop    eax
  431022:	pop    ecx
  431023:	add    al,0x62
  431025:	fstp   DWORD PTR [esi-0x69]
  431028:	inc    ecx
  431029:	cmc    
  43102a:	repnz dec ebp
	...
  431040:	arpl   WORD PTR [edx-0x711be22],bx
  431046:	into   
  431047:	ds (bad) 
  431049:	aad    0xce
  43104b:	dec    edx
  43104c:	les    ebp,FWORD PTR [ecx]
  43104e:	pmaxsw mm2,QWORD PTR [esi+ebx*1-0x274a7d15]
  431056:	out    0x3,eax
  431058:	imul   ebp,DWORD PTR [ebx-0x17],0x5c176cc4
  43105f:	(bad)  
  431060:	je     0x431080
  431062:	push   esi
  431063:	adc    BYTE PTR ds:0x24d920d9,bh
  431069:	jecxz  0x4310d1
  43106b:	mov    eax,0x8ae7d962
  431070:	sahf   
  431071:	std    
  431072:	repz mov dh,ch
  431075:	std    
  431076:	add    BYTE PTR [ebp-0x5ff269a],al
  43107c:	cmp    al,0x8c
  43107e:	push   ebx
  43107f:	cmp    al,0x57
  431081:	ins    DWORD PTR es:[edi],dx
  431082:	and    eax,0xd95e9d
  431087:	mov    fs:0x83958f6,al
  43108d:	xor    eax,0x1fdb1f55
  431092:	mov    BYTE PTR ds:0xe9010ac2,dh
  431098:	popa   
  431099:	pusha  
  43109a:	mov    ch,0xc5
  43109c:	sbb    ecx,0xc5d8e900
  4310a2:	and    al,0xd1
	...
  4310b8:	jns    0x4310b8
  4310ba:	ret    
  4310bb:	push   esi
  4310bc:	ja     0x431118
  4310be:	stc    
  4310bf:	adc    BYTE PTR [edx],cl
  4310c1:	std    
  4310c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4310c3:	jmp    0xdbb7ea29
  4310c8:	ficomp DWORD PTR [ebp+0x18fd0924]
  4310ce:	or     ah,BYTE PTR [ebp-0x163f030b]
  4310d4:	popa   
  4310d5:	fld    DWORD PTR [edi+0x7fd285a5]
  4310db:	push   ss
  4310dc:	pop    eax
  4310dd:	cs cli 
  4310df:	push   cs
  4310e0:	pop    edi
  4310e1:	pop    ebp
  4310e2:	sti    
  4310e3:	jmp    0xfec2ea49
  4310e8:	dec    edx
  4310e9:	cs cli 
  4310eb:	imul   ch
  4310ed:	std    
  4310ee:	mov    eax,0xfa2e4dcd
  4310f3:	and    cl,BYTE PTR [esi-0x53]
  4310f6:	sbb    dh,ch
  4310f8:	fistp  QWORD PTR [edi]
  4310fa:	add    ecx,ebp
  4310fc:	popa   
  4310fd:	pop    eax
  4310fe:	cli    
  4310ff:	out    dx,eax
  431100:	ins    DWORD PTR es:[edi],dx
  431101:	cs cli 
  431103:	add    BYTE PTR [ebp-0xb007abe],ah
  431109:	mov    dl,0xd7
  43110b:	add    BYTE PTR [ebx],cl
  43110d:	(bad)  
  43110e:	loope  0x43111b
  431110:	cmp    BYTE PTR [edx-0x2a0447dc],0x0
  431117:	cmp    edx,ebp
  431119:	(bad)  
  43111a:	sti    
  43111b:	mov    WORD PTR [eax],es
	...
  43112d:	add    BYTE PTR [eax],al
  43112f:	add    BYTE PTR [ebp-0x2a],ah
  431132:	sbb    DWORD PTR [edi+ebx*4+0x75],0xa19f9483
  43113a:	add    BYTE PTR [eax],al
  43113c:	mov    ebx,0xb739f708
  431141:	adc    DWORD PTR [edx],esi
  431143:	je     0x431196
  431145:	mov    dl,0xd1
  431147:	je     0x4311a0
  431149:	adc    ah,ch
  43114b:	jae    0x431136
  43114d:	int3   
  43114e:	je     0x431174
  431150:	outs   dx,DWORD PTR ds:[esi]
  431151:	pop    edx
  431152:	inc    ebp
  431153:	and    al,0xa3
  431155:	gs dec esp
  431157:	mov    ebp,DWORD PTR [eax+0x61]
  43115a:	(bad)  
  43115b:	call   0x39bc5d
  431160:	push   cs
  431161:	xchg   esi,eax
  431162:	add    eax,0xd67c85
  431167:	add    al,dh
  431169:	imul   ebx,DWORD PTR [esi],0x24c1f060
  43116f:	mov    ah,0x4b
  431171:	fld    QWORD PTR [eax]
  431173:	jmp    0x431196
  431175:	bound  ecx,QWORD PTR [ebp+0x24]
  431178:	fbld   TBYTE PTR [ecx-0x45]
  43117b:	sub    edi,DWORD PTR [edx+0x11]
  43117e:	jmp    0xff39:0xff631577
  431185:	adc    BYTE PTR [esi+0x75],ch
  431188:	sub    eax,0x3401f858
  43118d:	pop    ecx
  43118e:	fadd   QWORD PTR [eax]
  431190:	bound  eax,QWORD PTR [edx-0x2]
  431193:	test   DWORD PTR [eax],eax
	...
  4311a5:	add    BYTE PTR [eax],al
  4311a7:	add    BYTE PTR [ecx+eax*2-0x12b9bc34],bl
  4311ae:	std    
  4311af:	xor    DWORD PTR [edx],0x43
  4311b2:	(bad)  
  4311b3:	(bad)  
  4311b4:	jmp    0x3ebede26
  4311b9:	xor    bh,bh
  4311bb:	test   BYTE PTR [esi],ah
  4311bd:	inc    ebx
  4311be:	(bad)  
  4311bf:	(bad)  
  4311c0:	fdecstp 
  4311c2:	call   0xfe9daad6
  4311c7:	sbb    BYTE PTR [edx],0x43
  4311ca:	(bad)  
  4311cb:	jmp    edx
  4311cd:	aad    0xd
  4311cf:	or     eax,0xe7cb0a4f
  4311d4:	xor    DWORD PTR [esi],ebx
  4311d6:	jle    0x431255
  4311d8:	bound  edi,QWORD PTR [ecx+ebx*4]
  4311db:	sbb    ecx,ebx
  4311dd:	jle    0x4311c1
  4311df:	pop    ss
  4311e0:	lods   al,BYTE PTR ds:[esi]
  4311e1:	cmp    dl,0x1f
  4311e4:	pop    ss
  4311e5:	cs xor edi,0x63
  4311e9:	push   es
  4311ea:	cli    
  4311eb:	jle    0x431176
  4311ed:	inc    esp
  4311ee:	xchg   edx,eax
  4311ef:	add    ah,cl
  4311f1:	outs   dx,BYTE PTR ds:[esi]
  4311f2:	loop   0x431257
  4311f4:	pusha  
  4311f5:	ins    DWORD PTR es:[edi],dx
  4311f6:	add    ecx,DWORD PTR [ebp-0x441abf11]
  4311fc:	inc    esi
  4311fd:	fiadd  WORD PTR [eax+eax*1]
  431200:	bound  ebp,QWORD PTR [ebx-0x2649dc60]
  431206:	test   ah,bh
  431208:	push   ebp
  431209:	(bad)  
  43120b:	cli    
	...
  431220:	cmp    DWORD PTR [eax+0x7b],ebx
  431223:	std    
  431224:	xchg   ecx,eax
  431225:	sub    al,cl
  431227:	ss cmp al,0xae
  43122a:	cmc    
  43122b:	xor    BYTE PTR ds:0x2dfb0a09,0xd9
  431232:	pop    esp
  431233:	popf   
  431234:	fmul   QWORD PTR [esp+eax*1-0x58]
  431238:	(bad)  
  431239:	(bad)  
  43123b:	int3   
  43123c:	mov    ebp,esi
  43123e:	call   DWORD PTR [edi+0x7bf5ca4]
  431244:	xchg   ch,dh
  431246:	ins    BYTE PTR es:[edi],dx
  431247:	pop    es
  431248:	fbstp  TBYTE PTR [eax]
  43124a:	mov    bl,0x12
  43124c:	stc    
  43124d:	mov    BYTE PTR [esi-0x39],bl
  431250:	inc    ecx
  431251:	xchg   ecx,eax
  431252:	inc    bx
  431254:	pop    edx
  431255:	mov    DWORD PTR [esi-0x79],ebp
  431258:	xchg   cl,al
  43125a:	call   0xa89f7462
  43125f:	sti    
  431260:	sbb    eax,0x73b3dd30
  431265:	cdq    
  431266:	out    0x86,eax
  431268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431269:	fcomp  QWORD PTR [esi-0x79]
  43126c:	jle    0x4312c7
  43126e:	call   0x84357476
  431273:	out    0x9d,eax
  431275:	fsub   st,st(7)
  431277:	add    esp,ebp
  431279:	pushf  
  43127a:	or     edi,DWORD PTR [eax+0x7c21a068]
  431280:	out    0xf4,al
  431282:	add    eax,DWORD PTR [bx+si]
	...
  431295:	add    BYTE PTR [eax],al
  431297:	add    BYTE PTR [edx-0x27],ah
  43129a:	cmp    bh,al
  43129c:	adc    eax,0x3b03ab8c
  4312a1:	jge    0x4312a7
  4312a3:	test   BYTE PTR [edx-0x27],ah
  4312a6:	out    0x97,eax
  4312a8:	push   es
  4312a9:	fs and eax,0xb462c71e
  4312af:	out    0x65,eax
  4312b1:	bound  edi,QWORD PTR [edi+eiz*8-0x4f]
  4312b5:	pop    edx
  4312b6:	test   bh,ah
  4312b8:	jge    0x431293
  4312ba:	jae    0x4312b7
  4312bc:	in     al,0x1c
  4312be:	add    esi,esi
  4312c0:	sub    eax,0x61a54d87
  4312c5:	mov    bh,0xf4
  4312c7:	inc    ecx
  4312c8:	fnsave [edx]
  4312ca:	jne    0x4312bd
  4312cc:	cs daa 
  4312ce:	jne    0x4312bd
  4312d0:	xchg   esi,eax
  4312d1:	sbb    ah,dh
  4312d3:	push   esp
  4312d4:	pop    DWORD PTR [ebp+0x1fdd0924]
  4312da:	jne    0x4312e3
  4312dc:	out    0x6d,eax
  4312de:	and    eax,0xd9614d
  4312e3:	call   0x7d68a2bb
  4312e8:	cli    
  4312e9:	sahf   
  4312ea:	(bad)  
  4312eb:	call   0xcdd06951
  4312f0:	add    edx,ebx
  4312f2:	add    cl,ch
  4312f4:	scas   al,BYTE PTR es:[edi]
  4312f5:	push   edx
  4312f6:	and    eax,0xd96119
  4312fb:	jo     0x4312fd
	...
  43130d:	add    BYTE PTR [eax],al
  43130f:	add    BYTE PTR [ecx+0x56ed5861],dh
  431315:	call   0x723f:0x3653a17d
  43131c:	(bad)  
  43131e:	enter  0x61e9,0xd9
  431322:	xchg   edi,eax
  431323:	add    bl,BYTE PTR [eax+ecx*1]
  431326:	stc    
  431327:	push   0x5f
  431329:	das    
  43132a:	jge    0x431319
  43132c:	push   es
  43132d:	adc    al,0xe6
  43132f:	or     al,0xff
  431331:	pop    esp
  431332:	and    eax,0xd95e71
  431337:	add    ah,dl
  431339:	cmc    
  43133a:	mov    al,0xe9
  43133c:	popa   
  43133d:	fld    DWORD PTR [ebp-0x71b58b]
  431343:	call   0x624a73a9
  431348:	loop   0x43133e
  43134a:	mov    esp,0xda3b00
  43134f:	sub    ecx,edi
  431351:	inc    ecx
  431352:	stos   BYTE PTR es:[edi],al
  431353:	add    BYTE PTR [ebx-0x26],cl
  431356:	xchg   DWORD PTR [edx+0x47],ecx
  431359:	int    0xf9
  43135b:	imul   edi,DWORD PTR ds:0x5e5e5782,0x6fc4817c
  431365:	fiadd  DWORD PTR [eax]
  431367:	add    BYTE PTR [ecx+0x6a50fa41],bh
  43136d:	fs push ebp
  43136f:	push   esi
  431370:	jo     0x431379
  431372:	dec    edx
  431373:	adc    al,BYTE PTR [eax]
	...
  431385:	add    BYTE PTR [eax],al
  431387:	add    BYTE PTR [ebx-0x2b],cl
  43138a:	dec    ebp
  43138b:	mov    edx,edx
  43138d:	push   ecx
  43138e:	push   es
  43138f:	mov    ?,WORD PTR [ebx]
  431391:	aad    0xf5
  431393:	xor    edi,esp
  431395:	out    dx,eax
  431396:	push   0xfa1a3d28
  43139b:	(bad)  
  43139c:	test   al,0xac
  43139e:	call   0xf047f9a2
  4313a3:	mov    esp,ebx
  4313a5:	push   esi
  4313a6:	in     al,dx
  4313a7:	je     0x431348
  4313a9:	push   esi
  4313aa:	div    BYTE PTR [ebx+eiz*4-0x52]
  4313ae:	inc    esp
  4313af:	and    al,0xa7
  4313b1:	imul   edx,DWORD PTR [eax-0x1],0xff1e35b7
  4313b8:	push   esi
  4313b9:	push   edi
  4313ba:	shl    DWORD PTR [ebp-0x6d],0x6a
  4313be:	div    DWORD PTR [edi+edx*2+0x41]
  4313c2:	or     ebx,0x3c
  4313c5:	inc    esi
  4313c6:	push   ds
  4313c7:	sbb    al,0x23
  4313c9:	and    eax,0xc87bfffa
  4313ce:	je     0x4313f4
  4313d0:	lods   al,BYTE PTR ds:[si]
  4313d2:	lock call DWORD PTR [ecx+ebp*2+0x6462c683]
  4313da:	stos   DWORD PTR es:[edi],eax
  4313db:	push   esi
  4313dc:	stos   DWORD PTR es:[edi],eax
  4313dd:	imul   eax,DWORD PTR [esp+ecx*1+0x62],0x914819bf
  4313e5:	inc    ebp
  4313e6:	mov    eax,0xf4526f86
  4313eb:	aas    
	...
  431400:	bound  eax,QWORD PTR [ebx+0x7d]
  431403:	stc    
  431404:	mov    edx,0x62407af6
  431409:	or     edx,edx
  43140b:	ret    0xde9e
  43140e:	loopne 0x431429
  431410:	bound  eax,QWORD PTR [edx-0x2]
  431413:	cli    
  431414:	sub    al,0x8b
  431416:	lods   al,BYTE PTR ds:[esi]
  431417:	mov    DWORD PTR [edx-0x16ccf4be],esp
  43141d:	sbb    cl,BYTE PTR [edx]
  43141f:	sar    BYTE PTR [edx-0xe],cl
  431422:	jp     0x431464
  431424:	bound  esi,QWORD PTR [ebx-0x2e]
  431427:	xchg   BYTE PTR [edx-0x2d78ccb5],bh
  43142d:	mov    ecx,0xb5822398
  431432:	pop    ds
  431433:	or     ebx,esi
  431435:	cmc    
  431436:	add    eax,DWORD PTR [eax]
  431438:	bound  esi,QWORD PTR [ebp-0x3221f4db]
  43143e:	add    eax,DWORD PTR [eax]
  431440:	bound  esi,QWORD PTR [ebp+0x65de0b12]
  431446:	add    eax,0x44cf6200
  43144b:	mov    DWORD PTR [esi],ebx
  43144d:	fsubp  st(4),st
  43144f:	mov    BYTE PTR [esi],ah
  431451:	(bad)  
  431452:	clc    
  431453:	mov    BYTE PTR [esi],bl
  431455:	fdivrp st(0),st
  431457:	mov    WORD PTR [esi],fs
  431459:	(bad)  
  43145a:	lock dec edi
  43145c:	out    0x7e,eax
  43145e:	loop   0x431477
  431460:	adc    bh,bl
  431462:	aaa    
  431463:	test   DWORD PTR [eax],eax
	...
  431475:	add    BYTE PTR [eax],al
  431477:	add    BYTE PTR [edx-0x78770d27],ah
  43147d:	(bad)  
  43147f:	add    ebx,ebp
  431481:	pushf  
  431482:	retf   
  431483:	out    dx,eax
  431484:	out    0x21,al
  431486:	fild   DWORD PTR [edi+0x3e7da6b]
  43148c:	jnp    0x431423
  43148e:	ret    
  43148f:	imul   DWORD PTR [eax+0x55]
  431492:	jecxz  0x431498
  431494:	(bad)  
  431495:	fcos   
  431497:	push   edx
  431498:	hlt    
  431499:	sub    esp,ebx
  43149b:	jp     0x4314b7
  43149d:	push   esi
  43149e:	(bad)  
  4314a0:	loope  0x43147a
  4314a2:	call   0xcac776aa
  4314a7:	xchg   edi,eax
  4314a8:	inc    ecx
  4314a9:	stc    
  4314aa:	ret    0x4197
  4314ad:	int    0xba
  4314af:	xor    al,BYTE PTR [ebp+0x3e]
  4314b2:	ins    DWORD PTR es:[edi],dx
  4314b3:	inc    ebx
  4314b4:	ja     0x431450
  4314b6:	pop    esi
  4314b7:	sbb    BYTE PTR [ebx],ch
  4314b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4314ba:	retf   
  4314bb:	not    DWORD PTR [ebx-0x1a]
  4314be:	ins    BYTE PTR es:[edi],dx
  4314bf:	scas   al,BYTE PTR es:[edi]
  4314c0:	test   DWORD PTR [edi+edx*8],ebp
  4314c3:	push   cs
  4314c4:	push   esi
  4314c5:	cmc    
  4314c6:	add    ecx,DWORD PTR [edi]
  4314c8:	outs   dx,DWORD PTR ds:[esi]
  4314c9:	mov    ecx,0x54bdc3d8
  4314ce:	test   al,0x97
  4314d0:	imul   edx,DWORD PTR [ebx-0xfe1bd9a],0xa751e7f3
  4314da:	dec    ecx
  4314db:	sbb    al,BYTE PTR [eax]
	...
  4314ed:	add    BYTE PTR [eax],al
  4314ef:	add    BYTE PTR [eax-0x40],dh
  4314f2:	push   ecx
  4314f3:	mov    edi,0x16e6c8ff
  4314f8:	xor    BYTE PTR [esi-0x5c],bl
  4314fb:	out    0x35,eax
  4314fd:	mov    DWORD PTR [edi+0x47],ecx
  431500:	int3   
  431501:	sub    edi,DWORD PTR [ebx]
  431503:	jl     0x43150b
  431505:	cmc    
  431506:	add    ch,bl
  431508:	call   0xe94c39b1
  43150d:	pop    ds
  43150e:	jmp    0xfa71c8b6
  431513:	push   0xffffffe5
  431515:	not    BYTE PTR [ecx+ebp*8]
  431518:	dec    esp
  431519:	push   esi
  43151a:	popf   
  43151b:	jmp    0xadceee81
  431520:	inc    ebp
  431521:	ret    
  431522:	push   eax
  431523:	mov    edx,0x9c519664
  431528:	pop    esp
  431529:	les    esi,FWORD PTR [edi+edx*8-0x567ad4df]
  431530:	pop    ds
  431531:	push   esi
  431532:	test   ecx,ebp
  431534:	popa   
  431535:	fld    DWORD PTR [ebp-0x7c3d05d3]
  43153b:	test   eax,0xe9815707
  431540:	popa   
  431541:	fnstcw WORD PTR [ebp+0x3d]
  431544:	or     dh,bh
  431546:	add    BYTE PTR [eax-0x3e],ah
  431549:	idiv   BYTE PTR [eax]
  43154b:	aaa    
  43154c:	and    BYTE PTR [ebp+0x5f5e1110],dh
  431552:	inc    ecx
  431553:	jmp    0x431558
	...
  431568:	push   esp
  431569:	xchg   ebp,eax
  43156a:	and    al,0x2d
  43156c:	push   ss
  43156d:	xor    esp,DWORD PTR [edi+0x5b]
  431570:	push   edi
  431571:	xchg   BYTE PTR cs:0xa965e2ca,ch
  431578:	mov    dl,0x5d
  43157a:	dec    ebp
  43157b:	int    0xc5
  43157d:	pop    ss
  43157e:	inc    ebp
  43157f:	in     eax,0xf1
  431581:	(bad)  
  431582:	add    cl,ch
  431584:	popa   
  431585:	push   edx
  431586:	inc    ebp
  431587:	add    eax,0xf5c0b3a6
  43158c:	or     BYTE PTR [ebp-0x6af562fc],ch
  431592:	and    al,0x0
  431594:	arpl   WORD PTR [eax-0x46],dx
  431597:	sbb    al,0xf2
  431599:	sbb    dh,bh
  43159b:	push   ebx
  43159c:	xor    al,0x21
  43159e:	push   ds
  43159f:	cmp    BYTE PTR [eax],al
  4315a1:	and    DWORD PTR [esi],ebx
  4315a3:	sbb    dh,dl
  4315a5:	sbb    DWORD PTR [esi],ebx
  4315a7:	cmp    BYTE PTR [edx],bl
  4315a9:	stos   DWORD PTR es:[edi],eax
  4315aa:	dec    esp
  4315ab:	and    al,0x27
  4315ad:	addr16 dec edx
  4315af:	(bad)  
  4315b0:	out    dx,eax
  4315b1:	xor    DWORD PTR [edx-0x1],esp
  4315b4:	pop    ebp
  4315b5:	push   edx
  4315b6:	ror    DWORD PTR [ebx-0x74edce01],0x43
  4315bd:	inc    edx
  4315be:	add    dl,BYTE PTR [eax+0x34]
  4315c1:	add    cl,BYTE PTR [bp+di-0x2f32]
  4315c6:	adc    BYTE PTR [ebp+0x4e],dl
  4315c9:	bound  edx,QWORD PTR [ebp+0x50]
	...
  4315e0:	xor    al,0x67
  4315e2:	push   cs
  4315e3:	mov    edi,DWORD PTR [edi]
  4315e5:	inc    ecx
  4315e6:	adc    ch,bl
  4315e8:	or     DWORD PTR [ecx],ecx
  4315ea:	mov    edx,0x537a555f
  4315ef:	cmp    DWORD PTR [edi-0x4f34393],0xffffffb0
  4315f6:	inc    esp
  4315f7:	and    al,0xcf
  4315f9:	push   0xb0a18b55
  4315fe:	out    0x85,eax
  431600:	sti    
  431601:	pop    esi
  431602:	pop    es
  431603:	mov    eax,DWORD PTR [eax]
  431605:	into   
  431606:	imul   ebp,DWORD PTR [esi-0x1b],0x62c083dc
  43160d:	loope  0x431638
  43160f:	shl    al,0x1e
  431612:	dec    edi
  431613:	mov    esi,DWORD PTR [edi+0x52330e31]
  431619:	addr16 push ecx
  43161b:	jmp    FWORD PTR [edi+0x62571a31]
  431621:	jo     0x4315d4
  431623:	push   eax
  431624:	das    
  431625:	fwait
  431626:	bnd call DWORD PTR [edx-0x80]
  43162a:	inc    BYTE PTR [edx+eiz*4-0x11810d97]
  431631:	fucomi st,st(4)
  431633:	jmp    edi
  431635:	add    al,0x7e
  431637:	jl     0x4315d3
  431639:	(bad)  
  43163a:	std    
  43163b:	jae    0x4316a1
  43163d:	cmp    eax,edx
  43163f:	and    ebp,DWORD PTR [edx+0x4e]
  431642:	add    ch,BYTE PTR [edi]
	...
  431658:	and    bl,ah
  43165a:	add    edx,eax
  43165c:	data16 sbb bh,dh
  43165f:	pop    edx
  431660:	xchg   edi,eax
  431661:	jnp    0x4316a3
  431663:	or     al,0x62
  431665:	inc    ecx
  431666:	mov    bl,0x52
  431668:	mov    eax,0x1cff9832
  43166d:	xchg   eax,esp
  43166f:	pop    ss
  431670:	jmp    0xdc2990e6
  431675:	mul    al
  431677:	adc    edi,edx
  431679:	test   DWORD PTR ds:0xcabfdfb,eax
  43167f:	test   ebp,esi
  431681:	out    0x0,eax
  431683:	das    
  431684:	and    bl,BYTE PTR [esp+eax*8]
  431687:	inc    edx
  431688:	mov    WORD PTR [ebx-0x7e7917cb],?
  43168e:	add    eax,0x8042e9fb
  431693:	repnz push esi
  431695:	add    DWORD PTR [ebx+0x4c],edi
  431698:	jle    0x4316a0
  43169a:	mov    bl,0x52
  43169c:	adc    al,0x5f
  43169e:	xchg   ecx,eax
  43169f:	and    eax,DWORD PTR [edx+0xd8d2fab]
  4316a5:	scas   eax,DWORD PTR es:[edi]
  4316a6:	sbb    al,0x5b
  4316a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4316a9:	mov    bh,0x5
  4316ab:	aaa    
  4316ac:	mov    eax,ds:0xdcfedbd9
  4316b1:	pop    ss
  4316b2:	push   eax
  4316b3:	icebp  
  4316b4:	shr    BYTE PTR [eax],cl
  4316b6:	push   ebx
  4316b7:	xlat   BYTE PTR ds:[ebx]
  4316b8:	lds    esi,FWORD PTR [esp+ebx*8]
  4316bb:	jle    0x4316bd
	...
  4316cd:	add    BYTE PTR [eax],al
  4316cf:	add    BYTE PTR [esi],ah
  4316d1:	std    
  4316d2:	jecxz  0x431654
  4316d4:	mov    ds:0x4a7ce5ad,al
  4316d9:	push   esp
  4316da:	sub    ch,BYTE PTR [edi-0x537377f5]
  4316e0:	pop    ds
  4316e1:	shl    edi,1
  4316e3:	jle    0x431683
  4316e5:	std    
  4316e6:	jecxz  0x43169e
  4316e8:	mov    dh,0x54
  4316ea:	cs jg  0x431728
  4316ed:	pop    esi
  4316ee:	sub    BYTE PTR [ebp+0x1c2f5468],cl
  4316f4:	and    eax,0xe70af9b6
  4316f9:	sbb    BYTE PTR [ecx-0x1],dh
  4316fc:	je     0x431717
  4316fe:	dec    ebx
  431700:	mov    al,0x28
  431702:	pop    esp
  431703:	loopne 0x431772
  431705:	push   esp
  431706:	pop    esp
  431707:	loopne 0x43177e
  431709:	nop
  43170a:	aaa    
  43170b:	mov    bh,0x34
  43170d:	add    al,0x37
  43170f:	mov    cl,0xf8
  431711:	int    0x6b
  431713:	hlt    
  431714:	xor    eax,0x684364d9
  431719:	int3   
  43171a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43171c:	inc    ecx
  43171d:	shr    DWORD PTR [ecx],0xf3
  431720:	inc    ebx
  431721:	loop   0x431766
  431723:	ret    
  431724:	fld    TBYTE PTR [edi+esi*8-0x1002de32]
  43172b:	xchg   DWORD PTR [ecx-0x14],esp
  43172e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43172f:	push   ds
  431730:	pusha  
  431731:	in     al,dx
  431732:	mov    al,0xa1
	...
  431748:	jmp    0x84:0xeab22d4
  43174f:	stos   DWORD PTR es:[edi],eax
  431750:	lods   eax,DWORD PTR ds:[esi]
  431751:	daa    
  431752:	push   ecx
  431753:	adc    al,0xd1
  431755:	mov    ebp,0x2461d300
  43175a:	jne    0x431761
  43175c:	jle    0x4317bc
  43175e:	shl    BYTE PTR [edx+0x67],0x52
  431762:	inc    ebp
  431763:	add    eax,0x468b3f72
  431768:	push   0xe2418624
  43176d:	and    edi,DWORD PTR [edx-0x13]
  431770:	mov    WORD PTR [edi-0x1a],fs
  431773:	stos   DWORD PTR es:[edi],eax
  431774:	and    BYTE PTR [ecx+0x3f28f58b],cl
  43177a:	popa   
  43177b:	pop    ecx
  43177c:	pop    eax
  43177d:	and    al,BYTE PTR [esi+0x752be219]
  431783:	fdivr  DWORD PTR [ebp+edx*4-0x74130adc]
  43178a:	push   edx
  43178b:	(bad)  
  43178c:	fdiv   st(2),st
  43178e:	and    BYTE PTR [edx+0x72],ah
  431791:	push   esp
  431792:	pop    edx
  431793:	out    dx,al
  431794:	js     0x431718
  431796:	stc    
  431797:	out    0x6b,al
  431799:	out    dx,al
  43179a:	mov    ebp,0xcb600f55
  43179f:	rcl    ecx,0x76
  4317a2:	cli    
  4317a3:	into   
  4317a4:	pop    ss
  4317a5:	addr16 out 0xf5,al
  4317a8:	jbe    0x431747
  4317aa:	and    al,0xdd
	...
  4317c0:	ins    BYTE PTR es:[edi],dx
  4317c1:	sbb    DWORD PTR [ebp-0x15],esi
  4317c4:	push   0xfa785c1
  4317c9:	sbb    DWORD PTR [ecx+0x44],0xe9096509
  4317d0:	push   ss
  4317d1:	mov    ss,WORD PTR [edx+0x62]
  4317d4:	jno    0x431760
  4317d6:	test   DWORD PTR [edi],esp
  4317d8:	stos   BYTE PTR es:[edi],al
  4317d9:	not    ebp
  4317db:	add    BYTE PTR [eax],dh
  4317dd:	push   ecx
  4317de:	sub    bh,BYTE PTR [eax-0x48]
  4317e1:	rol    BYTE PTR [ecx+0x1271f2ea],1
  4317e7:	jbe    0x431793
  4317e9:	scas   eax,DWORD PTR es:[edi]
  4317ea:	adc    al,0x9e
  4317ec:	mov    BYTE PTR [ecx+0x1a],ch
  4317ef:	je     0x431779
  4317f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4317f2:	or     ch,BYTE PTR [edx+0x2c]
  4317f5:	inc    edi
  4317f6:	test   DWORD PTR [ebx],0xe8cba435
  4317fc:	ds in  al,0x0
  4317ff:	add    BYTE PTR [esi],al
  431801:	popf   
  431802:	je     0x431811
  431804:	mov    eax,0x19185715
  431809:	icebp  
  43180a:	sub    eax,eax
  43180c:	sbb    al,0x70
  43180e:	pop    ebp
  43180f:	pop    ebx
  431810:	js     0x4317b6
  431812:	cmp    eax,0x58d9be24
  431817:	sete   BYTE PTR [ecx]
  43181a:	sub    cl,BYTE PTR [ebx+0x48d3e04]
  431820:	mov    bl,0xa4
  431822:	add    al,0x30
	...
  431838:	cmp    BYTE PTR [eax+0x67f6e4e1],bl
  43183e:	dec    edi
  43183f:	mov    edi,DWORD PTR [edi+0x39]
  431842:	or     ch,BYTE PTR [ebx]
  431844:	outs   dx,BYTE PTR ds:[esi]
  431845:	jmp    0x443e5c9c
  43184a:	cld    
  43184b:	imul   ecx,DWORD PTR [ebx],0x478cfa44
  431851:	cmp    DWORD PTR [esi],edx
  431853:	push   eax
  431854:	jo     0x431821
  431856:	dec    esi
  431857:	jmp    DWORD PTR [edi]
  431859:	cmp    DWORD PTR [edx],esp
  43185b:	mov    esp,DWORD PTR [ecx-0x290008bd]
  431861:	and    DWORD PTR [ebx],ecx
  431863:	inc    eax
  431864:	mov    ebx,0x6274c0a6
  431869:	pop    ds
  43186a:	pushf  
  43186b:	dec    DWORD PTR [ebx+0x3c]
  43186e:	jae    0x4318b4
  431870:	jle    0x4318aa
  431872:	scas   al,BYTE PTR es:[edi]
  431873:	mov    WORD PTR [esi+0x17],fs
  431876:	scas   al,BYTE PTR es:[edi]
  431877:	push   ecx
  431878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431879:	add    al,0xd6
  43187b:	push   cs
  43187c:	and    dh,BYTE PTR [eax]
  43187e:	jnp    0x431840
  431880:	push   cs
  431881:	xor    al,0x4e
  431883:	add    DWORD PTR [ecx+0x2c],edi
  431886:	pushf  
  431887:	add    BYTE PTR [ecx-0x10],dl
  43188a:	lods   eax,DWORD PTR ds:[esi]
  43188b:	dec    edi
  43188c:	adc    ah,BYTE PTR [eax+0x9]
  43188f:	je     0x4318cf
  431891:	aam    0xae
  431893:	cli    
  431894:	push   edi
  431895:	sub    ch,dh
  431897:	aas    
  431898:	bound  esp,QWORD PTR [edx]
  43189a:	ds pop ebx
	...
  4318b0:	mov    esp,0x62084455
  4318b5:	fs mov cl,0xfb
  4318b8:	(bad)  
  4318b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4318ba:	jmp    0x9086:0xfe32622f
  4318c1:	push   es
  4318c2:	jge    0x431912
  4318c4:	dec    esi
  4318c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4318c6:	xchg   ebx,eax
  4318c7:	daa    
  4318c8:	jmp    0x431904
  4318ca:	(bad)  
  4318cb:	jmp    DWORD PTR [edx+0x5f]
  4318ce:	or     DWORD PTR [edi],ebp
  4318d0:	and    ah,bh
  4318d2:	shl    DWORD PTR [eax-0x6a],0x30
  4318d6:	rcr    BYTE PTR [edi],cl
  4318d8:	and    esi,DWORD PTR [eax+edi*8-0x2]
  4318dc:	or     eax,0xfd811511
  4318e1:	out    0x48,eax
  4318e3:	inc    esi
  4318e4:	mov    BYTE PTR [edi+0xd90fbe],ah
  4318ea:	xchg   ecx,eax
  4318eb:	fadd   DWORD PTR [ebp-0x16adc234]
  4318f1:	popa   
  4318f2:	jle    0x4318d6
  4318f4:	arpl   cx,bx
  4318f6:	sbb    al,0xf4
  4318f8:	lds    ebp,FWORD PTR [ebx+eax*1+0x7]
  4318fc:	leave  
  4318fd:	pop    ebp
  4318fe:	test   al,0x90
  431900:	pusha  
  431901:	pop    eax
  431902:	fld    QWORD PTR [ebx+0xc]
  431905:	popf   
  431906:	out    0x4,eax
  431908:	hlt    
  431909:	xor    DWORD PTR [esi],ebx
  43190b:	shl    BYTE PTR [ebp+0x21aa9461],0xd9
  431912:	jg     0x4318d5
	...
  431928:	cmc    
  431929:	(bad)  
  43192b:	bound  ecx,QWORD PTR [esi-0x20fc5c81]
  431931:	sbb    ebp,ebx
  431933:	dec    DWORD PTR [edi+0x19]
  431936:	stos   BYTE PTR es:[edi],al
  431937:	inc    edx
  431938:	fild   QWORD PTR [ebx]
  43193a:	mov    ebp,0x9ac5aaf9
  43193f:	mov    edi,0x749b3c65
  431944:	pop    ecx
  431945:	and    al,0x40
  431947:	test   DWORD PTR [esp-0x55b037dd],eax
  43194e:	add    al,0x1c
  431950:	push   es
  431951:	mov    ebx,0xccdc0712
  431956:	stos   BYTE PTR es:[edi],al
  431957:	mov    edi,0x91285835
  43195c:	pop    ebp
  43195d:	xor    DWORD PTR [esi-0x4bdbd72f],ecx
  431963:	dec    DWORD PTR [ebx+edx*1-0x330bfdc8]
  43196a:	inc    edx
  43196b:	ror    BYTE PTR ds:0x6190d25d,0xe5
  431972:	in     eax,0x91
  431974:	mov    eax,0xb4a5e968
  431979:	lea    ebp,[esi+0x17]
  43197c:	jecxz  0x4319b2
  43197e:	lock add DWORD PTR [edx-0x27],esp
  431982:	add    BYTE PTR [edi+0x673da26],bh
  431988:	not    bh
  43198a:	push   ebp
  43198b:	sub    eax,0x0
	...
  4319a0:	data16 mov ch,BYTE PTR ds:0x199269b0
  4319a7:	jmp    0x1504770d
  4319ac:	(bad)  
  4319ae:	shl    BYTE PTR [eax+0x1c0cb120],0xa2
  4319b5:	and    edx,DWORD PTR [ecx+0x3]
  4319b8:	pusha  
  4319b9:	sub    al,0xba
  4319bc:	jl     0x4319e1
  4319be:	cli    
  4319bf:	ins    DWORD PTR es:[edi],dx
  4319c0:	and    DWORD PTR [ebp-0x277a2e1a],ebp
  4319c6:	add    cl,ch
  4319c8:	cli    
  4319c9:	pop    ebp
  4319ca:	stc    
  4319cb:	dec    esp
  4319cc:	pop    esp
  4319cd:	and    BYTE PTR [ecx-0x2d],dl
  4319d0:	popa   
  4319d1:	and    BYTE PTR [edx*2+0x6200e36e],dl
  4319d8:	xchg   ecx,eax
  4319d9:	push   esp
  4319da:	mov    WORD PTR [ecx],?
  4319dc:	push   0x1e
  4319de:	cli    
  4319df:	adc    DWORD PTR [esi],esp
  4319e1:	fs add ecx,ebp
  4319e4:	loop   0x4319ff
  4319e6:	sahf   
  4319e7:	jmp    0xde43b0f4
  4319ec:	mov    dl,0x19
  4319ee:	enter  0xf22a,0x5b
  4319f2:	in     eax,dx
  4319f3:	push   0xe905414d
  4319f8:	popa   
  4319f9:	xchg   DWORD PTR [ecx-0x9],edx
  4319fc:	mov    eax,ds:0x8b6d09d8
  431a01:	fld    DWORD PTR [eax]
  431a03:	jmp    0x431a08
	...
  431a18:	loope  0x4319fe
  431a1a:	adc    al,0x36
  431a1c:	and    ah,BYTE PTR [ebx]
  431a1e:	add    esi,ebx
  431a20:	ja     0x431a6a
  431a22:	add    DWORD PTR [eax],eax
  431a24:	sti    
  431a25:	(bad)  
  431a26:	sub    esi,esi
  431a28:	call   0x44ce790a
  431a2d:	cmp    eax,0xabcb4076
  431a32:	xchg   ebx,eax
  431a33:	push   0xe8f5dd00
  431a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431a39:	call   0xa2891a3e
  431a3e:	clc    
  431a3f:	std    
  431a40:	in     al,0xdc
  431a42:	push   eax
  431a43:	push   0xffffffbb
  431a45:	inc    eax
  431a46:	cli    
  431a47:	(bad)  
  431a48:	ins    BYTE PTR es:[edi],dx
  431a49:	add    eax,0x408b4076
  431a4e:	cli    
  431a4f:	(bad)  
  431a50:	scas   al,BYTE PTR es:[edi]
  431a51:	jp     0x431a5e
  431a53:	inc    eax
  431a54:	jnp    0x4319f9
  431a56:	shl    BYTE PTR [ebp+0x54],0xaa
  431a5a:	sub    DWORD PTR [eax+0x10],0xffffffdc
  431a5e:	cmc    
  431a5f:	(bad)  
  431a60:	out    dx,al
  431a61:	aam    0xfb
  431a63:	jmp    DWORD PTR [ebp*2-0x62ec357d]
  431a6a:	adc    eax,0xc0a34b00
  431a6f:	je     0x431a9d
  431a71:	fnsave [ebx]
  431a73:	add    BYTE PTR [eax],ah
  431a75:	(bad)  
  431a76:	cli    
  431a77:	mov    WORD PTR [esi+0xfffbd5],?
	...
  431a8d:	add    BYTE PTR [eax],al
  431a8f:	add    BYTE PTR [ebp+ebp*2-0x9],dl
  431a93:	adc    eax,0x3a26eb
  431a98:	mov    esi,0xb80b749d
  431a9d:	in     al,0xc
  431a9f:	inc    esi
  431aa0:	mov    ah,bl
  431aa2:	push   esp
  431aa3:	jb     0x431a57
  431aa5:	shl    BYTE PTR [ebx+ebp*2],0x2d
  431aa9:	sub    al,BYTE PTR [ebx+0x3a515f86]
  431aaf:	add    BYTE PTR [edx+0x39],ah
  431ab2:	sti    
  431ab3:	mov    edi,0xe704fc98
  431ab8:	push   ecx
  431ab9:	push   ecx
  431aba:	ds push esi
  431abc:	sahf   
  431abd:	xor    BYTE PTR [esi+0x1],dl
  431ac0:	push   esi
  431ac1:	repz fbld TBYTE PTR ss:[ebp+0x30]
  431ac6:	(bad)  
  431ac7:	sahf   
  431ac8:	mov    ds:0x24ffc095,al
  431acd:	cmp    dh,0x59
  431ad0:	stos   DWORD PTR es:[edi],eax
  431ad1:	outs   dx,BYTE PTR ds:[esi]
  431ad2:	stos   DWORD PTR es:[edi],eax
  431ad3:	xchg   dh,al
  431ad5:	mov    al,0x11
  431ad7:	sub    al,0x66
  431ad9:	xor    dh,bh
  431adb:	dec    esi
  431adc:	or     al,0xcb
  431ade:	pushf  
  431adf:	dec    ebx
  431ae0:	add    esp,esi
  431ae2:	add    al,0xfb
  431ae4:	outs   dx,DWORD PTR ds:[esi]
  431ae5:	adc    al,0xf0
  431ae7:	aas    
  431ae8:	bound  edi,QWORD PTR [edi-0x4b56d0bc]
  431aee:	jb     0x431ac6
  431af0:	jns    0x431a7c
  431af2:	add    al,0x89
	...
  431b08:	push   edi
  431b09:	mov    eax,fs:0x61126243
  431b0f:	add    DWORD PTR fs:[esi+edi*8+0x61],edi
  431b14:	add    DWORD PTR [ebx],ebx
  431b16:	mov    eax,ds:0xe2b96243
  431b1b:	outs   dx,DWORD PTR ds:[esi]
  431b1c:	shr    DWORD PTR [esi-0x2],0xe7
  431b20:	sbb    bh,ch
  431b22:	add    edi,ebx
  431b24:	out    dx,eax
  431b25:	or     BYTE PTR [edi+0x1],0x62
  431b29:	xor    bh,BYTE PTR [ecx-0x36]
  431b2c:	cmp    bh,BYTE PTR [esi]
  431b2e:	cwde   
  431b2f:	stc    
  431b30:	and    eax,0xa6783db6
  431b35:	pop    esp
  431b36:	jmp    0xb44f:0xaec6a78c
  431b3d:	fnstenv [esi]
  431b3f:	push   edi
  431b40:	or     edi,eax
  431b42:	arpl   WORD PTR ds:0xc46cd9a2,dx
  431b48:	jnp    0x431b33
  431b4a:	inc    ecx
  431b4b:	cmp    eax,0x7895968e
  431b50:	push   esi
  431b51:	pop    esp
  431b52:	rcr    BYTE PTR [eax],0x5f
  431b55:	cmc    
  431b56:	test   ah,0x43
  431b59:	push   edx
  431b5a:	sbb    al,0x49
  431b5c:	mov    dh,0x4e
  431b5e:	sub    eax,0xec6315d8
  431b63:	pusha  
  431b64:	fldenv es:[ecx+edx*4-0x63]
  431b69:	push   ds
  431b6a:	mov    eax,DWORD PTR [ebx]
	...
  431b80:	mov    edx,0x6203e237
  431b85:	push   esi
  431b86:	test   al,0x13
  431b88:	neg    DWORD PTR [ecx]
  431b8a:	ins    BYTE PTR es:[edi],dx
  431b8b:	les    ecx,FWORD PTR [esi]
  431b8d:	shl    BYTE PTR [esi+0x6d5203c3],cl
  431b93:	int3   
  431b94:	xchg   BYTE PTR [eax],ah
  431b96:	pop    ebx
  431b97:	mov    ebp,0x3e7da8b
  431b9c:	out    0x56,eax
  431b9e:	jmp    FWORD PTR cs:[eax+0x20]
  431ba2:	jo     0x431bc0
  431ba4:	and    dl,BYTE PTR [edx+0x5c5fdb4]
  431baa:	pusha  
  431bab:	inc    esp
  431bac:	bound  ecx,QWORD PTR [esi+0x65]
  431baf:	int3   
  431bb0:	dec    esi
  431bb1:	and    BYTE PTR [ebx],ah
  431bb3:	push   esp
  431bb4:	dec    ecx
  431bb5:	(bad)  
  431bb6:	retf   
  431bb7:	push   ss
  431bb8:	mov    ds:0x9102d6d9,al
  431bbd:	mov    BYTE PTR [ebp+0x6],bh
  431bc0:	xchg   ecx,eax
  431bc1:	mov    bl,0xe8
  431bc3:	imul   esp,DWORD PTR [edx-0x27],0xffffffe7
  431bc7:	sub    esi,0x55
  431bca:	add    DWORD PTR [ecx],esp
  431bcc:	arpl   WORD PTR [edx+edi*8],sp
  431bcf:	cdq    
  431bd0:	sbb    BYTE PTR [ebp-0x26a11804],dl
  431bd6:	add    BYTE PTR [edx+0x2c],ch
  431bd9:	and    edi,edx
  431bdb:	cld    
  431bdc:	int    0xcd
  431bde:	inc    eax
  431bdf:	jmp    0xc7c14bc0
	...
  431bf8:	pusha  
  431bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431bfa:	sbb    eax,0xfc94f316
  431bff:	sbb    DWORD PTR [ecx-0x5a],esp
  431c02:	cld    
  431c03:	pop    esp
  431c04:	ficom  DWORD PTR [edi]
  431c06:	cld    
  431c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431c08:	pusha  
  431c09:	mov    DWORD PTR [edx-0x62],edx
  431c0c:	pop    edx
  431c0d:	popa   
  431c0e:	movaps XMMWORD PTR [esi+0x56],xmm3
  431c12:	rcr    esi,0x1a
  431c15:	jle    0x431c13
  431c17:	pop    ds
  431c18:	popa   
  431c19:	(bad)  
  431c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431c1b:	(bad)  [ecx]
  431c1d:	fld1   
  431c1f:	jp     0x431c8d
  431c21:	fld    DWORD PTR [eax]
  431c23:	bound  esi,QWORD PTR [edx+0x4d]
  431c26:	push   edi
  431c27:	lods   eax,DWORD PTR ds:[esi]
  431c28:	popa   
  431c29:	xor    DWORD PTR [ecx],eax
  431c2b:	jno    0x431c8d
  431c2d:	and    al,0xb1
  431c2f:	call   0x20989f34
  431c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431c35:	test   BYTE PTR [ebp-0x6c423ab],al
  431c3b:	mov    BYTE PTR [ecx],ah
  431c3d:	test   DWORD PTR [ecx+ebp*8-0x22],eax
  431c41:	xor    dl,BYTE PTR [ebp-0x1a]
  431c44:	popa   
  431c45:	(bad)  [ebp-0x41]
  431c48:	test   al,0x56
  431c4a:	fcom   DWORD PTR [ebx-0x4f11a99f]
  431c50:	fdivr  QWORD PTR [eax]
  431c52:	add    dh,bl
  431c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431c55:	sbb    BYTE PTR [esi+0x447c7b00],bl
	...
  431c6f:	add    BYTE PTR [ebx+0x33],dh
  431c72:	idiv   bh
  431c74:	or     al,0x75
  431c76:	rcr    BYTE PTR [edx-0x39],cl
  431c79:	fiadd  DWORD PTR [ebx+0x5c570cc0]
  431c7f:	add    DWORD PTR [ebx],ecx
  431c81:	fld    TBYTE PTR [ecx]
  431c83:	inc    DWORD PTR [esi+0x34107523]
  431c89:	fcom   DWORD PTR [ebx]
  431c8b:	ins    BYTE PTR es:[edi],dx
  431c8c:	or     DWORD PTR [ebx+0x7ff7a300],ebx
  431c92:	inc    esp
  431c93:	add    BYTE PTR [esi+0x15],al
  431c96:	jecxz  0x431cc4
  431c98:	push   ecx
  431c99:	cmp    eax,0x4dbb4088
  431c9e:	ret    0xdee8
  431ca1:	sbb    al,0xf7
  431ca3:	inc    DWORD PTR [eax-0x32]
  431ca6:	fcomp  DWORD PTR [edx-0x79]
  431ca9:	aad    0x50
  431cab:	mov    edx,0x3a4b13
  431cb0:	repz sub ebx,esi
  431cb3:	dec    DWORD PTR [esp+ecx*2]
  431cb6:	or     eax,0x9171d4
  431cbb:	mov    ecx,DWORD PTR [ebx+0x2d]
  431cbe:	jle    0x431c4d
  431cc0:	sbb    eax,0x7cc084d8
  431cc5:	push   esi
  431cc6:	adc    al,0x1
  431cc8:	jnp    0x431ca4
  431cca:	or     esi,0xff7eef13
  431cd0:	pushf  
  431cd1:	push   ecx
  431cd2:	mov    edx,0xf
	...
  431ce7:	add    bh,al
  431ce9:	int3   
  431cea:	(bad)  
  431ceb:	(bad)  
  431cec:	cmp    ecx,DWORD PTR [edi+0x3e]
  431cef:	and    al,0x4b
  431cf1:	mov    ch,BYTE PTR [eax+0x2]
  431cf4:	dec    ecx
  431cf5:	fiadd  DWORD PTR [eax]
  431cf7:	jmp    DWORD PTR [edx+0x1d]
  431cfa:	push   cs
  431cfb:	adc    ah,BYTE PTR [edx+0x3ac68d30]
  431d01:	mov    es,WORD PTR [eax]
  431d03:	sti    
  431d04:	sbb    eax,0xde0ac4b4
  431d09:	rol    DWORD PTR [eax+eax*1],cl
  431d0c:	bound  esi,QWORD PTR [ebp-0x20be8b0a]
  431d12:	push   edi
  431d13:	data16 arpl WORD PTR [eax+0x309e55e0],cx
  431d1a:	add    DWORD PTR ds:0x3e21fa,edx
  431d20:	loope  0x431d46
  431d22:	and    BYTE PTR [eax+0x26],0x30
  431d26:	add    DWORD PTR [edi+0x4890e2],ebx
  431d2c:	out    0x6f,eax
  431d2e:	adc    DWORD PTR [edi+ebx*4-0x70001d1],eax
  431d35:	pop    edi
  431d36:	pop    esp
  431d37:	inc    esp
  431d38:	bound  esi,QWORD PTR [ebx+0x8bafac6]
  431d3e:	fs sti 
  431d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431d41:	xchg   edx,eax
  431d42:	rcl    DWORD PTR [ebp+0x26],0x30
  431d46:	cmp    DWORD PTR [edi-0x53539b],0x0
	...
  431d5d:	add    BYTE PTR [eax],al
  431d5f:	add    BYTE PTR [ebp-0x7acffed1],cl
  431d65:	sbb    al,0x16
  431d67:	adc    BYTE PTR [edx],ah
  431d69:	xor    BYTE PTR [ebp-0x193e739],ah
  431d6f:	dec    edi
  431d70:	ret    
  431d71:	repz pop ebx
  431d73:	inc    esp
  431d74:	bound  ebx,QWORD PTR [edx-0x36]
  431d77:	push   ebp
  431d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431d79:	xor    al,BYTE PTR [ecx]
  431d7b:	xor    al,cl
  431d7d:	xor    BYTE PTR [edi-0x18],dl
  431d80:	xor    DWORD PTR [eax-0x2],0xffffffff
  431d84:	(bad)  
  431d86:	cs jmp 0x431d93
  431d89:	push   ds
  431d8a:	sbb    eax,DWORD PTR [eax]
  431d8c:	ficomp WORD PTR [ecx]
  431d8e:	pushf  
  431d8f:	sub    DWORD PTR [ecx],0xa2126bc7
  431d95:	fld    DWORD PTR [esi+0x1b]
  431d98:	mov    ecx,0x1386e795
  431d9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d9e:	mov    eax,ds:0x13cee552
  431da3:	pop    ebp
  431da4:	sahf   
  431da5:	fxch   st(7)
  431da7:	fsub   st,st(7)
  431da9:	sbb    ebx,ebx
  431dab:	mov    DWORD PTR [ebp+0x672b32a5],esi
  431db1:	add    eax,0x7862482e
  431db6:	inc    esp
  431db7:	gs fldenv es:[esi+esi*8+0x4e]
  431dbd:	in     al,dx
  431dbe:	fs nop
  431dc0:	cmp    DWORD PTR [ecx-0x17],0x3
	...
  431dd7:	add    BYTE PTR [edx+0x31],ah
  431dda:	lahf   
  431ddb:	add    esp,DWORD PTR [edx-0x27]
  431dde:	ins    BYTE PTR es:[edi],dx
  431ddf:	mov    BYTE PTR [ecx+0x6203e982],al
  431de5:	test   BYTE PTR [edi],dh
  431de7:	ins    BYTE PTR es:[edi],dx
  431de8:	jbe    0x431da4
  431dea:	sub    eax,DWORD PTR [ecx+ebx*4]
  431ded:	out    0xab,al
  431def:	pop    edx
  431df0:	push   ds
  431df1:	fldcw  WORD PTR ds:0x6448dd12
  431df7:	mov    ebp,0x3ab7c69
  431dfc:	mov    dl,al
  431dfe:	imul   edi,edi,0xec1f5078
  431e04:	int3   
  431e05:	sbb    eax,0x19e1ff4b
  431e0a:	mov    esp,0xe6185015
  431e0f:	ja     0x431e72
  431e11:	xor    DWORD PTR [ecx],eax
  431e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431e14:	bound  esp,QWORD PTR [eax]
  431e16:	cli    
  431e17:	inc    edx
  431e18:	popa   
  431e19:	in     al,dx
  431e1a:	shr    BYTE PTR [ecx+0x740a5be5],0x1e
  431e21:	xor    edi,edi
  431e23:	fisub  DWORD PTR [ecx]
  431e25:	jg     0x431e81
  431e27:	mov    dl,0xd8
  431e29:	xor    al,0x5c
  431e2b:	sub    bh,BYTE PTR [ebx+0x1268ed54]
  431e31:	ror    BYTE PTR [eax],0xe9
  431e34:	popa   
  431e35:	xchg   DWORD PTR [ebp-0x16b30d08],eax
  431e3b:	fiadd  WORD PTR [eax]
	...
  431e4d:	add    BYTE PTR [eax],al
  431e4f:	add    ah,bh
  431e51:	push   ds
  431e52:	jmp    0x11c7ecd
  431e57:	shl    BYTE PTR fs:[ebp-0x4],cl
  431e5b:	into   
  431e5c:	in     al,0x33
  431e5e:	sbb    esi,DWORD PTR [ebx+0x59861edf]
  431e64:	mov    edi,0x3be900d8
  431e69:	sbb    ecx,DWORD PTR [ebp-0x5e001a4]
  431e6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431e70:	push   ss
  431e71:	dec    esi
  431e72:	dec    esp
  431e73:	or     DWORD PTR [esi],0xcf5b787
  431e79:	xchg   ebp,eax
  431e7a:	add    BYTE PTR [ecx-0x7905b302],al
  431e80:	fidiv  WORD PTR [ecx]
  431e82:	add    cl,ch
  431e84:	popa   
  431e85:	dec    esi
  431e86:	test   BYTE PTR [ebx+0x62],al
  431e89:	and    dl,bh
  431e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e8c:	popa   
  431e8d:	fld    DWORD PTR [eax-0x50]
  431e90:	cli    
  431e91:	and    DWORD PTR [esp+eiz*4-0x17997427],ecx
  431e98:	stc    
  431e99:	cld    
  431e9a:	push   esi
  431e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431e9c:	popa   
  431e9d:	and    BYTE PTR [eax+eax*1],dl
  431ea0:	or     eax,esi
  431ea2:	inc    eax
  431ea3:	add    al,dl
  431ea5:	es test esi,esi
  431ea8:	pextrw esi,mm5,0x15
  431eac:	out    0xc8,eax
  431eae:	inc    eax
  431eaf:	add    BYTE PTR [esi+0x64],al
  431eb2:	cli    
  431eb3:	inc    DWORD PTR [eax]
	...
  431ec5:	add    BYTE PTR [eax],al
  431ec7:	add    BYTE PTR [ebx-0x5e],cl
  431eca:	pop    es
  431ecb:	push   esi
  431ecc:	push   esp
  431ecd:	shl    DWORD PTR [edx+edx*1-0x9d62905],0x90
  431ed5:	adc    al,0x58
  431ed7:	leave  
  431ed8:	dec    eax
  431ed9:	add    DWORD PTR [ecx-0x45d58514],0x4ed6fb05
  431ee3:	push   edi
  431ee4:	jo     0x431f04
  431ee6:	lea    ecx,[ebp-0x8e0b5]
  431eec:	and    BYTE PTR [edi],0xe2
  431eef:	adc    al,bh
  431ef1:	(bad)  
  431ef2:	add    BYTE PTR [ebp-0x7e1b2],cl
  431ef8:	adc    al,0x1d
  431efa:	jne    0x431f04
  431efc:	inc    eax
  431efd:	add    al,0x4a
  431eff:	push   esi
  431f00:	hlt    
  431f01:	loop   0x431ecf
  431f03:	pop    edx
  431f04:	(bad)  
  431f05:	aad    0xb7
  431f07:	sbb    al,0x74
  431f09:	xchg   ecx,eax
  431f0a:	add    al,ch
  431f0c:	popf   
  431f0d:	dec    ebx
  431f0e:	idiv   edi
  431f10:	je     0x431f8d
  431f12:	mov    edx,0x8b53d68f
  431f18:	out    0x58,eax
  431f1a:	out    0x6c,al
  431f1c:	ins    DWORD PTR es:[edi],dx
  431f1d:	xchg   DWORD PTR [ebx-0x54d2ccab],ecx
  431f23:	inc    DWORD PTR [esp+ebx*1]
  431f26:	lea    eax,[ebp-0x1d]
  431f29:	test   DWORD PTR [ecx],ebp
  431f2b:	test   BYTE PTR [eax],0x0
	...
  431f3e:	add    BYTE PTR [eax],al
  431f40:	bound  ebx,QWORD PTR [edx+0x66]
  431f43:	fmul   QWORD PTR [eax]
  431f45:	je     0x431f45
  431f47:	cli    
  431f48:	ja     0x431fba
  431f4a:	cmovo  esp,DWORD PTR [edx-0x4b]
  431f4e:	les    esi,FWORD PTR [ebx+0x5b]
  431f51:	mov    bh,0xcc
  431f53:	out    0x44,eax
  431f55:	aas    
  431f56:	std    
  431f57:	cli    
  431f58:	jmp    0x9504a71c
  431f5d:	jmp    0x5ad67021
  431f62:	push   ebp
  431f63:	xchg   DWORD PTR [eax],ebp
  431f65:	mov    bh,0x11
  431f67:	aam    0xb8
  431f69:	ins    BYTE PTR es:[edi],dx
  431f6a:	inc    BYTE PTR [esi-0x7a6d37ed]
  431f70:	or     al,0x23
  431f72:	xchg   DWORD PTR [ebx+0x3e],eax
  431f75:	cmp    BYTE PTR [ebx-0x2f539241],al
  431f7b:	push   ebp
  431f7d:	das    
  431f7e:	push   ecx
  431f7f:	push   ebp
  431f80:	js     0x431fb0
  431f82:	xor    edi,edx
  431f84:	xchg   ecx,eax
  431f85:	fisttp WORD PTR [ecx+0x54d08643]
  431f8b:	push   edx
  431f8c:	sub    eax,0x77fafb86
  431f91:	cmp    BYTE PTR [ecx],dl
  431f93:	inc    eax
  431f94:	bound  esi,QWORD PTR [edi-0xfaed7c6]
  431f9a:	add    al,0x2f
  431f9c:	stos   DWORD PTR es:[edi],eax
  431f9d:	lock cmp DWORD PTR [edi+0x44587003],0x0
	...
  431fb8:	(bad)  
  431fb9:	sti    
  431fba:	mov    bl,0xd6
  431fbc:	ins    DWORD PTR es:[edi],dx
  431fbd:	in     al,dx
  431fbe:	aad    0x7e
  431fc0:	add    BYTE PTR [ebx],0x7
  431fc3:	inc    esp
  431fc4:	inc    esi
  431fc5:	add    al,0x31
  431fc7:	in     eax,dx
  431fc8:	das    
  431fc9:	(bad)  
  431fca:	or     BYTE PTR [ebp+0x280bd926],cl
  431fd0:	adc    cl,BYTE PTR [esi-0x5c]
  431fd3:	daa    
  431fd4:	dec    esi
  431fd5:	pusha  
  431fd6:	sub    BYTE PTR [ecx+0x1e],bl
  431fd9:	fsin   
  431fdb:	push   cs
  431fdc:	ss mov ah,0xab
  431fdf:	add    edx,DWORD PTR [ebp+0x1a]
  431fe2:	cwde   
  431fe3:	push   ebp
  431fe4:	dec    ecx
  431fe5:	xor    DWORD PTR [ebp-0x3d],ebp
  431fe8:	into   
  431fe9:	fld    TBYTE PTR [ecx]
  431feb:	rcl    BYTE PTR [esi-0x5e71147d],0xbd
  431ff2:	call   DWORD PTR [ebx-0x1b]
  431ff5:	popf   
  431ff6:	retf   
  431ff7:	pop    ds
  431ff8:	jmp    0x432027
  431ffa:	scas   al,BYTE PTR es:[edi]
  431ffb:	inc    edi
  431ffc:	(bad)  
  431ffd:	(bad)  
  431ffe:	hlt    
  431fff:	xlat   BYTE PTR ds:[ebx]
  432000:	scas   eax,DWORD PTR es:[edi]
  432001:	popf   
  432002:	out    0x0,eax
  432004:	and    ebp,DWORD PTR [edx+0x5f30fc99]
  43200a:	sub    BYTE PTR [esi-0x4],dh
  43200d:	push   ss
  43200e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43200f:	sti    
  432010:	cs pop ecx
  432012:	dec    ecx
  432013:	inc    eax
  432014:	bound  esp,QWORD PTR [esp+edi*1+0x20]
  432018:	dec    esi
  432019:	and    DWORD PTR [edi+0x65],0x0
	...
  432030:	fldcw  WORD PTR es:[esi-0x36]
  432034:	mov    ebp,0xc8fbc07e
  432039:	pop    ebp
  43203a:	test   al,0x71
  43203c:	les    edx,FWORD PTR [esi]
  43203e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43203f:	sti    
  432040:	jbe    0x43209f
  432042:	or     DWORD PTR [eax+0x62],eax
  432045:	fs xor al,0x20
  432048:	push   esi
  432049:	sub    DWORD PTR [ebx+0x65],0xca5ed91e
  432050:	test   DWORD PTR [edx+0x5d98fb80],esp
  432056:	test   al,0x71
  432058:	mov    WORD PTR [esi],ss
  43205a:	add    DWORD PTR [edx-0x2b8ad01e],ebp
  432060:	or     ecx,ebx
  432062:	sub    cl,0x61
  432065:	scas   al,BYTE PTR es:[edi]
  432066:	stc    
  432067:	aad    0x4d
  432069:	icebp  
  43206a:	push   edx
  43206b:	push   esi
  43206c:	push   ebx
  43206d:	mov    ecx,0xc861a90d
  432072:	rcl    BYTE PTR [edx+0x62],0x60
  432076:	inc    ebp
  432077:	add    eax,0x9655b676
  43207c:	stos   DWORD PTR es:[edi],eax
  43207d:	mov    dl,0x57
  43207f:	sub    esp,DWORD PTR [edx-0x27]
  432082:	jmpw   0xedbe
  432086:	or     BYTE PTR [eax-0x3062693],0xa5
  43208d:	out    0x40,al
  43208f:	jmp    0x295950a4
	...
  4320a8:	adc    DWORD PTR [eax],esi
  4320aa:	mov    esi,0xfedbfa68
  4320af:	call   0xa5cec915
  4320b4:	pop    ebp
  4320b5:	jmp    0xbd78950a
  4320ba:	inc    esp
  4320bb:	cmp    ebp,ebx
  4320bd:	xor    dl,al
  4320bf:	sub    eax,0xe928f142
  4320c4:	popa   
  4320c5:	fyl2xp1 
  4320c7:	fdivr  st(1),st
  4320c9:	call   0x58260a0e
  4320ce:	je     0x4320b7
  4320d0:	fisubr DWORD PTR [ebx-0x500d6dc]
  4320d6:	add    cl,ch
  4320d8:	popa   
  4320d9:	add    ecx,eax
  4320db:	lods   eax,DWORD PTR ds:[esi]
  4320dc:	popa   
  4320dd:	fst    DWORD PTR [ebx+0x3f]
  4320e0:	adc    DWORD PTR [eax+0x3c],esp
  4320e3:	xor    DWORD PTR [eax-0x67],esi
  4320e6:	add    BYTE PTR [eax],al
  4320e8:	push   ds
  4320e9:	lock (bad) 
  4320eb:	(bad)  
  4320ec:	jnp    0x432096
  4320ee:	sub    esi,esi
  4320f0:	(bad)  
  4320f1:	xchg   edi,eax
  4320f2:	sbb    eax,0xdb8bfc
  4320f7:	push   esi
  4320f8:	mov    ebx,0x4783cf12
  4320fd:	loopne 0x43208a
  4320ff:	test   BYTE PTR [edi+0x15],dl
  432102:	cli    
  432103:	dec    DWORD PTR [ebx-0x55]
  432106:	xchg   DWORD PTR [edi+eiz*2+0xfffa11],ebp
	...
  43211d:	add    BYTE PTR [eax],al
  43211f:	add    BYTE PTR [ebx],bh
  432121:	adc    al,0x15
  432123:	adc    BYTE PTR [edx],ch
  432125:	fwait
  432126:	add    BYTE PTR [ebp+0x5502898b],al
  43212c:	scas   al,BYTE PTR es:[edi]
  43212d:	xchg   esi,eax
  43212e:	sbb    eax,0xdb3bfc
  432133:	jmp    0x432174
  432135:	add    DWORD PTR [eax],0x1
  432138:	or     ebx,ebx
  43213a:	mov    eax,DWORD PTR [edi+eiz*1-0x4000015]
  432141:	test   al,0x50
  432143:	jmp    DWORD PTR [edi+ebx*2-0x42]
  432147:	or     al,0x9e
  432149:	pushw  ds
  43214b:	pushf  
  43214c:	or     ebx,ebx
  43214e:	add    BYTE PTR [ecx+0xde19],bh
  432154:	and    edi,DWORD PTR [eax+0x5fcb00cc]
  43215a:	dec    esi
  43215b:	and    al,0x73
  43215d:	push   edx
  43215e:	fild   DWORD PTR [eax]
  432160:	mov    ebx,0xff4ce8da
  432165:	fld    QWORD PTR [eax]
  432167:	lea    eax,[edi+0x2e5028b9]
  43216d:	imul   ebx,DWORD PTR [esi],0xdabba0
  432173:	call   0xf9f05ada
  432178:	popf   
  432179:	mov    ch,0x50
  43217b:	and    al,0x4a
  43217d:	cdq    
  43217e:	loopne 0x43217f
  432180:	lea    eax,[eax]
  432182:	xchg   DWORD PTR [ebx+0x0],eax
	...
  432195:	add    BYTE PTR [eax],al
  432197:	add    BYTE PTR [esi],bh
  432199:	and    dh,ah
  43219b:	sub    BYTE PTR [esi+0x1e8cfe00],ch
  4321a1:	in     al,0x1c
  4321a3:	push   eax
  4321a4:	clc    
  4321a5:	add    BYTE PTR [eax-0x73],dl
  4321a8:	fsubrp st(4),st
  4321aa:	lods   al,BYTE PTR ds:[esi]
  4321ab:	call   FWORD PTR [ebp+0x0]
  4321ae:	mov    bh,0xfd
  4321b0:	push   ebp
  4321b1:	add    BYTE PTR [esi+0x4f],bh
  4321b4:	mov    bl,0x89
  4321b6:	jo     0x4321dc
  4321b8:	jp     0x432233
  4321ba:	dec    eax
  4321bb:	and    al,0x8e
  4321bd:	jns    0x43222f
  4321bf:	and    al,0x7e
  4321c1:	mov    edi,0x40520c09
  4321c6:	inc    BYTE PTR [edx+eiz*1-0x5972e88b]
  4321cd:	sbb    al,0xe
  4321cf:	push   eax
  4321d0:	lods   al,BYTE PTR ds:[esi]
  4321d1:	lea    edx,[eax+0x24]
  4321d4:	push   edx
  4321d5:	test   DWORD PTR [eax+0x24],ecx
  4321d8:	inc    edx
  4321d9:	fcom   DWORD PTR [ebp-0x57]
  4321dc:	cld    
  4321dd:	push   es
  4321de:	lea    esi,[ebx+0x3e]
  4321e1:	adc    ch,ch
  4321e3:	(bad)  
  4321e4:	loopne 0x43222d
  4321e6:	stc    
  4321e7:	jle    0x4321d3
  4321e9:	cs push 0x19
  4321ec:	out    0x3f,eax
  4321ee:	push   0x15
  4321f0:	xor    dh,dh
  4321f2:	push   0xfffffffe
  4321f4:	fsubp  st(3),st
  4321f6:	and    BYTE PTR [eax],ah
  4321f8:	sub    ebx,DWORD PTR [eax]
  4321fa:	cmp    al,BYTE PTR gs:[eax]
	...
  43220d:	add    BYTE PTR [eax],al
  43220f:	add    BYTE PTR [edx+0x0],ah
  432212:	(bad)  
  432213:	leave  
  432214:	retf   0x5dd8
  432217:	mov    al,ds:0x3f6f15a8
  43221c:	jle    0x43220b
  43221e:	fs dec edi
  432220:	inc    esi
  432221:	rcl    DWORD PTR [eax-0x22],0x95
  432225:	adc    eax,0xbd218ae8
  43222a:	ret    
  43222b:	jmp    0x4321e3
  43222d:	and    eax,ebp
  43222f:	add    ebp,edi
  432231:	pop    esp
  432232:	(bad)  
  432233:	sti    
  432234:	jne    0x43224b
  432236:	call   0xe5c63489
  43223b:	xchg   BYTE PTR [ecx],dl
  43223d:	mov    ebp,0xcb4a5af3
  432242:	or     DWORD PTR [edx+eiz*2],eax
  432245:	data16 lods al,BYTE PTR ds:[esi]
  432247:	pop    ds
  432248:	cmp    BYTE PTR [edi-0x11],0x53
  43224c:	mov    esp,0x864f64d7
  432251:	mov    ecx,0xd35beb90
  432256:	out    0x3,eax
  432258:	fistp  WORD PTR [ebp-0x71d6b83d]
  43225e:	retf   
  43225f:	nop    DWORD PTR [esi+0x66b20fc3]
  432266:	lods   al,BYTE PTR ds:[esi]
  432267:	pop    ds
  432268:	push   esi
  432269:	test   eax,0x195378d
  43226e:	cmp    BYTE PTR [edi-0x4098eb03],bh
	...
  432288:	dec    ebp
  432289:	bound  ebp,QWORD PTR [eax+eiz*1]
  43228c:	dec    esi
  43228d:	mov    ah,0x39
  43228f:	pop    ecx
  432290:	gs adc ecx,ebp
  432293:	js     0x432303
  432295:	pusha  
  432296:	mov    bh,0xbd
  432298:	ret    
  432299:	(bad)  
  43229b:	add    edi,DWORD PTR [edx+0x6204aea9]
  4322a1:	mov    al,0x0
  4322a3:	push   0xe8fed8a2
  4322a8:	popa   
  4322a9:	push   esp
  4322aa:	push   ebx
  4322ab:	ds cmc 
  4322ad:	push   eax
  4322ae:	add    al,0xe9
  4322b0:	popa   
  4322b1:	test   al,0x85
  4322b3:	cwde   
  4322b4:	push   cs
  4322b5:	popa   
  4322b6:	sub    DWORD PTR fs:[esi-0x59],ebx
  4322ba:	stc    
  4322bb:	fdiv   QWORD PTR [ecx]
  4322bd:	out    0x40,eax
  4322bf:	jmp    0x8c0089c
  4322c4:	and    bl,cl
  4322c6:	std    
  4322c7:	(bad)  [ebp-0x1f16bb52]
  4322cd:	sbb    BYTE PTR ds:0x55e9c12,cl
  4322d3:	sbb    BYTE PTR [esi-0x2d61bd29],dl
  4322d9:	or     BYTE PTR [edx-0x59],bl
  4322dc:	and    BYTE PTR [ebp-0x20b27b],ch
  4322e2:	or     dl,ch
  4322e4:	popa   
  4322e5:	(bad)  [ebx-0x5edc99c]
  4322eb:	add    BYTE PTR es:[eax],al
	...
  4322fe:	add    BYTE PTR [eax],al
  432300:	pushf  
  432301:	test   al,0x85
  432303:	and    ebx,ecx
  432305:	or     BYTE PTR [ecx+0x53],dl
  432308:	fcmovu st,st(4)
  43230a:	add    cl,ch
  43230c:	(bad)  
  43230d:	pop    ebx
  43230e:	fs test eax,0x81c80161
  432314:	or     al,0xf
  432316:	xchg   dh,bl
  432318:	jmp    0x510e:0xeceff95c
  43231f:	jb     0x432348
  432321:	cld    
  432322:	mov    ebx,0xc1d961cc
  432327:	out    dx,al
  432328:	popa   
  432329:	adc    edi,edx
  43232b:	jmp    0xb87712
  432330:	jae    0x432394
  432332:	(bad)  
  432333:	clc    
  432334:	add    eax,0x5c51f70b
  432339:	pusha  
  43233a:	retf   0x168d
  43233d:	adc    dh,dh
  43233f:	inc    DWORD PTR [eax+eax*1]
  432342:	push   0xffffffec
  432344:	mov    ebx,0x7fc084d7
  432349:	fadd   QWORD PTR [ecx-0xd9ec9e9]
  43234f:	cld    
  432350:	in     al,0xa
  432352:	loop   0x43234d
  432354:	sbb    eax,0x89ebf70b
  432359:	mov    al,0x5f
  43235c:	gs es mov ebx,0x80fbf055
  432363:	in     al,dx
	...
  432378:	jae    0x432356
  43237a:	add    BYTE PTR [eax],al
  43237c:	(bad)  
  43237d:	pop    ecx
  43237e:	repnz (bad) 
  432380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432381:	or     edx,DWORD PTR [eax+0x57]
  432384:	ror    BYTE PTR [eax],1
  432386:	cmp    ecx,0xffffffeb
  432389:	push   eax
  43238a:	mov    dh,0x5
  43238c:	dec    ebx
  43238d:	xlat   BYTE PTR ds:[ebx]
  43238e:	mov    bh,0x88
  432390:	push   ds
  432391:	xchg   edi,eax
  432392:	add    al,ch
  432394:	daa    
  432395:	(bad)  
  432396:	cmc    
  432397:	push   DWORD PTR [esi+0x74fef259]
  43239d:	or     ecx,DWORD PTR [edx-0x75]
  4323a0:	dec    ebp
  4323a1:	pop    edi
  4323a2:	(bad)  
  4323a3:	call   0x3d2593
  4323a8:	jle    0x4323c0
  4323aa:	outs   dx,BYTE PTR ds:[esi]
  4323ab:	sbb    eax,0x8d08a980
  4323b0:	xchg   esi,eax
  4323b1:	push   cs
  4323b2:	clc    
  4323b3:	inc    DWORD PTR [edi+eiz*4]
  4323b6:	cmc    
  4323b7:	jne    0x4323b0
  4323b9:	popa   
  4323ba:	ret    0x62e8
  4323bd:	mov    ebp,eax
  4323bf:	call   ebp
  4323c1:	jl     0x432387
  4323c3:	jae    0x43242c
  4323c5:	movsx  edi,BYTE PTR [edi]
  4323c8:	mov    ecx,0x1dc030fe
  4323cd:	jmp    0xeb7f:0x6abdc5
  4323d4:	jbe    0x4323d7
  4323d6:	(bad)  
  4323d7:	call   DWORD PTR [ecx]
  4323d9:	int    0x4a
  4323db:	push   ebx
	...
  4323f0:	fist   WORD PTR [edi+edi*8]
  4323f3:	jmp    DWORD PTR [edx-0x33]
  4323f6:	ins    BYTE PTR es:[edi],dx
  4323f7:	or     BYTE PTR [ecx],cl
  4323f9:	rol    BYTE PTR [ecx*4+0x502e1c1e],0xe9
  432401:	xchg   BYTE PTR [edi+0x20bc9dd8],al
  432407:	xor    BYTE PTR [edx+0x7a0a9893],ah
  43240d:	push   ecx
  43240e:	pushf  
  43240f:	cli    
  432410:	pop    ebp
  432411:	out    dx,eax
  432412:	into   
  432413:	sub    esi,DWORD PTR cs:[esi+0x40]
  432417:	or     al,0x86
  432419:	adc    BYTE PTR [edx],bh
  43241b:	adc    al,0x7a
  43241d:	inc    ecx
  43241e:	xor    eax,eax
  432420:	loope  0x4323ea
  432422:	add    BYTE PTR [ebx],cl
  432424:	sahf   
  432425:	mov    eax,0x6e17373e
  43242a:	call   0x48c88794
  43242f:	and    al,0x7a
  432431:	fdivr  st,st(7)
  432433:	bound  eax,QWORD PTR ss:[eax]
  432436:	and    DWORD PTR [ebx+0x46],0xd750fe20
  43243d:	cmp    ebx,DWORD PTR [edx]
  43243f:	sub    al,0x92
  432441:	jge    0x43248b
  432443:	and    al,0x56
  432445:	fdivr  DWORD PTR [esi-0x18269de9]
  43244b:	jg     0x4323f2
  43244d:	mov    WORD PTR ds:0xfbbd2987,fs
  432453:	jmp    0x432455
	...
  432465:	add    BYTE PTR [eax],al
  432467:	add    ch,dl
  432469:	lock out 0x3,eax
  43246c:	in     eax,0x8
  43246e:	ins    DWORD PTR es:[edi],dx
  43246f:	in     eax,dx
  432470:	dec    ebx
  432471:	(bad)  
  432472:	(bad)  
  432473:	cmc    
  432474:	xor    eax,edx
  432476:	(bad)  
  432477:	cmc    
  432478:	adc    BYTE PTR [esi-0xa79b8a4],ah
  43247e:	(bad)  
  43247f:	pop    edx
  432480:	ins    DWORD PTR es:[edi],dx
  432481:	(bad)  
  432483:	jg     0x432462
  432485:	mov    ecx,?
  432487:	push   edx
  432488:	xor    BYTE PTR [esp+eiz*8+0x14],ah
  43248c:	xor    ah,BYTE PTR [esp+esi*1+0x20]
  432490:	inc    edx
  432491:	add    edi,ebx
  432493:	sbb    ah,BYTE PTR [edx-0x27]
  432496:	imul   eax,ebx,0xfffffff1
  432499:	fstp   QWORD PTR [edi+eax*2+0x46]
  43249d:	in     eax,dx
  43249e:	dec    edi
  43249f:	pop    edi
  4324a0:	dec    edx
  4324a1:	(bad)  
  4324a3:	call   0x1fe7830c
  4324a8:	outs   dx,BYTE PTR ds:[esi]
  4324a9:	add    DWORD PTR [ecx-0x9269de5],esi
  4324af:	in     eax,dx
  4324b0:	scas   al,BYTE PTR es:[edi]
  4324b1:	pop    esi
  4324b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4324b3:	pop    ds
  4324b4:	mov    es,WORD PTR [ebx-0x18c6ac19]
  4324ba:	(bad)  
  4324bb:	or     eax,0xbf66d9a2
  4324c0:	pop    ecx
  4324c1:	and    dl,BYTE PTR fs:[eax+edi*4-0x52]
  4324c6:	scas   al,BYTE PTR es:[edi]
  4324c7:	and    BYTE PTR [ecx],0xc6
  4324ca:	call   0x4324d2
	...
  4324df:	add    BYTE PTR [edx+0x1c],ah
  4324e2:	imul   esp,edi,0x3e7d6c9
  4324e8:	lods   eax,DWORD PTR ds:[esi]
  4324e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4324ea:	add    BYTE PTR [edx+0x44],ah
  4324ed:	jne    0x4324fd
  4324ef:	test   eax,0x53247761
  4324f4:	pop    esi
  4324f5:	adc    al,0x34
  4324f7:	popa   
  4324f8:	inc    eax
  4324f9:	xchg   ebp,eax
  4324fa:	add    BYTE PTR [ebx-0x59],ah
  4324fd:	adc    edx,ebx
  4324ff:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  432501:	mov    WORD PTR [edx],cs
  432503:	jb     0x43250b
  432505:	stc    
  432506:	shl    BYTE PTR ds:0x359e13b1,1
  43250c:	inc    eax
  43250d:	xchg   ebp,eax
  43250e:	add    dl,al
  432510:	pop    ecx
  432511:	nop
  432512:	and    esp,DWORD PTR ds:0xe9009540
  432518:	in     al,0xcd
  43251a:	jl     0x432523
  43251c:	sub    bl,cl
  43251e:	add    dh,bl
  432520:	in     eax,0xf0
  432522:	(bad)  
  432523:	call   0x24045f89
  432528:	sub    bl,cl
  43252a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43252b:	mov    DWORD PTR [ecx-0x27],esp
  43252e:	add    dh,bl
  432530:	in     eax,0xe0
  432532:	(bad)  
  432533:	call   0xf1446799
  432538:	popa   
  432539:	fnstenv [edi+ebx*1-0x4a]
  43253d:	push   ecx
  43253e:	add    cl,ch
  432540:	popa   
  432541:	ja     0x432543
  432543:	inc    esi
	...
  432558:	mov    edx,DWORD PTR [ecx+0x1461a56a]
  43255e:	shr    DWORD PTR [esi+ebx*1-0x74],cl
  432562:	or     DWORD PTR [esi],ebp
  432564:	imul   ebx,DWORD PTR [ecx+0x60],0xffffffad
  432568:	popa   
  432569:	pop    eax
  43256a:	leave  
  43256b:	adc    ebx,edi
  43256d:	ja     0x432568
  43256f:	push   ss
  432570:	xor    eax,0x8d292f0e
  432575:	in     eax,0x7c
  432577:	add    ch,ch
  432579:	xchg   edi,eax
  43257a:	add    BYTE PTR [ebx+0x7b0e2d33],cl
  432580:	in     al,dx
  432581:	or     ah,BYTE PTR [ecx+0x97d1c0]
  432587:	test   al,0x5b
  432589:	xchg   ecx,eax
  43258a:	push   es
  43258b:	lea    ecx,[edi+0x58e808c1]
  432591:	or     edi,esi
  432593:	(bad)  
  432594:	ficomp DWORD PTR [ebx]
  432596:	push   esp
  432597:	inc    esp
  432598:	mov    ebx,0xcb00fa6c
  43259d:	(bad)  [ebx+ebx*1-0x48]
  4325a1:	sbb    ecx,DWORD PTR [edx+0x51]
  4325a4:	inc    eax
  4325a5:	fnstcw WORD PTR [esi+ebp*2+0x77]
  4325a9:	aad    0x50
  4325ab:	push   0x3acc5a
  4325b0:	pop    ebx
  4325b1:	sub    eax,0xadc44f9
  4325b6:	mov    eax,ds:0xa141c0
  4325bb:	test   al,0x0
	...
  4325cd:	add    BYTE PTR [eax],al
  4325cf:	add    BYTE PTR [ebx-0x6f],cl
  4325d2:	pop    edx
  4325d3:	push   edi
  4325d4:	popa   
  4325d5:	fldenv [edx+0x0]
  4325d8:	cld    
  4325d9:	sar    BYTE PTR [eax+0x6e],1
  4325dc:	mov    bh,0xdb
  4325de:	cmc    
  4325df:	(bad)  
  4325e0:	cld    
  4325e1:	loop   0x432580
  4325e3:	inc    eax
  4325e4:	dec    ebx
  4325e5:	bound  edi,QWORD PTR [edx+0x5a582f74]
  4325eb:	or     BYTE PTR [ebx],bh
  4325ed:	mov    ?,WORD PTR [ecx]
  4325ef:	(bad)  
  4325f0:	or     edx,edi
  4325f2:	add    bl,ch
  4325f4:	dec    ecx
  4325f5:	enter  0x8bc0,0x16
  4325f9:	jg     0x432661
  4325fb:	inc    esp
  4325fc:	cmp    edx,DWORD PTR [eax+0x7ca5e8c1]
  432602:	cmc    
  432603:	jmp    DWORD PTR [edx+0x5a]
  432606:	cli    
  432607:	gs (bad) 
  432609:	fistp  QWORD PTR [eax]
  43260b:	js     0x432681
  43260d:	cmp    al,0xfe
  43260f:	cli    
  432610:	adc    al,0x76
  432612:	mov    ebp,0x5d836673
  432617:	or     BYTE PTR [edx+0x79],ah
  43261a:	and    eax,0xfefca2c2
  43261f:	out    0x60,al
  432621:	repz les eax,FWORD PTR [esi+0x445ea46f]
  432628:	bound  edi,QWORD PTR [ebx-0x44]
  43262b:	out    0x49,eax
  43262d:	call   0x444b:0x4103faef
	...
  432648:	(bad)  
  432649:	out    0x88,eax
  43264b:	mov    edi,0xd2d5f52b
  432650:	or     esi,DWORD PTR [edi]
  432652:	lock cmp DWORD PTR [ecx-0x16aedf1c],0xfffffff5
  43265a:	imul   ebp,DWORD PTR [edx+0x26],0x1f22d600
  432661:	push   edi
  432662:	lock xchg BYTE PTR [edi],dh
  432665:	or     al,0x60
  432667:	inc    esp
  432668:	bound  edi,QWORD PTR [ebp-0xa]
  43266b:	jae    0x4326c1
  43266d:	jnp    0x43262d
  43266f:	out    0xa5,eax
  432671:	inc    ebx
  432672:	icebp  
  432673:	cli    
  432674:	jmp    0xe39a7536
  432679:	mov    ebx,0x6204b0
  43267e:	xlat   BYTE PTR ds:[ebx]
  43267f:	or     edi,esi
  432681:	xchg   esi,eax
  432682:	out    dx,eax
  432683:	pop    ecx
  432684:	cdq    
  432685:	or     eax,0xfe005fbb
  43268b:	mov    esi,0x80e07b97
  432690:	ss fpatan 
  432693:	add    eax,0x476cd962
  432698:	push   ss
  432699:	stos   BYTE PTR es:[edi],al
  43269a:	mov    ecx,0x1662b353
  43269f:	ss sub eax,0x5243dd0e
  4326a5:	cdq    
  4326a6:	out    0x86,eax
  4326a8:	mov    ch,0x84
  4326aa:	jnp    0x432704
	...
  4326c0:	jmp    0x61f41248
  4326c5:	fsub   st,st(7)
  4326c7:	add    ecx,DWORD PTR [edx+0x51]
  4326ca:	push   0x43
  4326cc:	bound  ebx,QWORD PTR [ebp+ebp*2-0x9]
  4326d0:	into   
  4326d1:	or     eax,0x13258cb
  4326d6:	loopne 0x43269a
  4326d8:	mov    ebp,0x65c7670d
  4326dd:	push   esp
  4326de:	test   al,0x71
  4326e0:	sbb    ch,BYTE PTR [eax+0xbb1865c]
  4326e6:	mov    ds:0xd7812df0,eax
  4326eb:	adc    BYTE PTR [ebp-0x27],0x5e
  4326ef:	ror    edx,cl
  4326f1:	(bad)  
  4326f3:	add    esp,edx
  4326f5:	add    BYTE PTR [ecx-0x5c],ch
  4326f8:	jnp    0x432707
  4326fa:	gs ret 
  4326fc:	icebp  
  4326fd:	shl    DWORD PTR [esi-0x15],0x68
  432701:	test   cl,al
  432703:	jle    0x4326e3
  432705:	add    al,0x65
  432707:	lock pop eax
  432709:	stos   BYTE PTR es:[edi],al
  43270a:	pop    edx
  43270b:	push   ss
  43270c:	push   ss
  43270d:	jmp    0x57222ab9
  432712:	push   esp
  432713:	out    dx,al
  432714:	dec    eax
  432715:	or     eax,0xc92599b
  43271a:	aad    0xd3
  43271c:	addr16 cdq 
  43271e:	add    cl,ch
  432720:	imul   ebx,DWORD PTR [esi+0x4a],0x2e
	...
  432737:	add    BYTE PTR [esi+0x21],dh
  43273a:	pop    ss
  43273b:	inc    edx
  43273c:	adc    ecx,DWORD PTR [edx+edi*8-0x6c]
  432740:	add    eax,0x76e51410
  432745:	cdq    
  432746:	add    BYTE PTR [esi-0x5d41ac4d],ch
  43274c:	mov    eax,0x1572544b
  432751:	mov    esp,fs
  432753:	icebp  
  432754:	mov    cs,WORD PTR [ecx+ebx*2]
  432757:	add    DWORD PTR [edx+ecx*1+0x4ceae6fa],esp
  43275e:	jne    0x432759
  432760:	xchg   ebx,eax
  432761:	and    ch,cl
  432763:	int    0xd3
  432765:	psubd  mm0,mm1
  432768:	and    BYTE PTR [edi-0x260e1700],al
  43276e:	in     eax,0xeb
  432770:	jae    0x43278b
  432772:	xchg   ah,cl
  432774:	adc    ecx,DWORD PTR [ecx+ebp*8-0x66]
  432778:	mov    ch,0xf
  43277a:	cli    
  43277b:	ins    DWORD PTR es:[edi],dx
  43277c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43277d:	mov    BYTE PTR [eax],ch
  43277f:	adc    ebx,DWORD PTR [esi+0x10]
  432782:	adc    al,0x5
  432784:	jo     0x43271f
  432786:	add    BYTE PTR [edx-0x3a],ah
  432789:	inc    esp
  43278a:	dec    esp
  43278b:	and    esp,DWORD PTR [esi-0x27]
  43278e:	(bad)  
  43278f:	rcr    BYTE PTR [esi-0x7a],0x14
  432793:	bound  esp,QWORD PTR [edi]
  432795:	int    0x7f
  432797:	lods   eax,DWORD PTR ds:[esi]
  432798:	imul   ebx,DWORD PTR [ebx+eax*2+0xe9],0x0
	...
  4327af:	add    BYTE PTR [ecx-0x7a],ah
  4327b2:	or     BYTE PTR [edx-0x56],dh
  4327b5:	loope  0x4327df
  4327b7:	jmp    0x4b1e:0x1ae10f26
  4327be:	jmp    0xf73febc3
  4327c3:	(bad)  
  4327c4:	cmp    BYTE PTR [eax],bl
  4327c6:	mov    esp,0x81b13b04
  4327cb:	in     al,dx
  4327cc:	mov    eax,0xdd5361f9
  4327d1:	leave  
  4327d2:	ror    DWORD PTR [edi],1
  4327d4:	lods   eax,DWORD PTR ds:[esi]
  4327d5:	or     BYTE PTR [edx+eax*1-0x80],ah
  4327d9:	fnstenv [ebx+0x95a454]
  4327df:	(bad)  
  4327e0:	ficomp WORD PTR [edi-0x1e]
  4327e3:	jle    0x432848
  4327e5:	cld    
  4327e6:	test   BYTE PTR [ebp+0x77e25fc6],0xc6
  4327ed:	cli    
  4327ee:	test   BYTE PTR [ebx+ecx*1-0x3874e16f],0x50
  4327f6:	dec    esi
  4327f7:	(bad)  
  4327f8:	jnp    0x4327cf
  4327fa:	bound  eax,QWORD PTR [ecx]
  4327fc:	es mov cl,0x98
  4327ff:	call   0x3a252e
  432804:	inc    esi
  432805:	cdq    
  432806:	cwde   
  432807:	call   0x38c25d
  43280c:	aas    
  43280d:	sbb    BYTE PTR [ebp+0x9],dh
  432810:	lds    edx,FWORD PTR [esi]
  432812:	jp     0x43280f
	...
  432828:	jle    0x4327b3
  43282a:	mov    esp,0x14779eb
  43282f:	pop    esi
  432830:	push   eax
  432831:	dec    esi
  432832:	mov    ebx,0x7b2bf055
  432837:	in     al,0xe3
  432839:	aas    
  43283a:	ficom  DWORD PTR [eax]
  43283c:	jnp    0x432815
  43283e:	call   0x117966c
  432843:	mov    BYTE PTR [edi],dl
  432845:	mov    bl,0xfd
  432847:	push   edx
  432848:	push   cs
  432849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43284a:	dec    ebp
  43284b:	xor    esp,DWORD PTR [edx-0x40]
  43284e:	push   esp
  43284f:	xchg   DWORD PTR [edi+0x0],edx
  432852:	inc    edi
  432853:	inc    esp
  432854:	bound  eax,QWORD PTR [ebp-0x7775dbaf]
  43285a:	inc    ecx
  43285b:	and    al,0x48
  43285d:	cwde   
  43285e:	das    
  43285f:	push   ebx
  432860:	and    al,0xbc
  432862:	cmp    DWORD PTR [edi+0x43772596],0x4b77283e
  43286c:	inc    esi
  43286d:	sbb    al,0x81
  43286f:	push   ebx
  432870:	or     BYTE PTR ds:[ebp+0x43],bh
  432874:	inc    esi
  432875:	clc    
  432876:	aad    0x5b
  432878:	stc    
  432879:	or     ebp,esp
  43287b:	xchg   BYTE PTR [esi+0x1c],dh
  43287e:	push   es
  43287f:	xchg   edx,ebp
  432881:	dec    edi
  432882:	mov    esi,0x4085dd84
  432887:	and    al,0x7e
  432889:	sti    
  43288a:	inc    ecx
  43288b:	lock add BYTE PTR [eax],al
	...
  43289e:	add    BYTE PTR [eax],al
  4328a0:	mov    edx,0xc5fa545e
  4328a5:	pop    ss
  4328a6:	std    
  4328a7:	xchg   BYTE PTR [esi],dh
  4328a9:	fmul   QWORD PTR [edi+eax*4]
  4328ac:	ss aam 0x24
  4328af:	sub    DWORD PTR [edx+edx*1+0x2b62fffe],0x632b83
  4328ba:	inc    BYTE PTR [esi-0x3715975b]
  4328c0:	bound  eax,QWORD PTR [eax]
  4328c2:	cmp    BYTE PTR [edi-0x2708bab],0x7d
  4328c9:	add    BYTE PTR [ecx],dh
  4328cb:	xlat   BYTE PTR ds:[ebx]
  4328cc:	and    edi,ebp
  4328ce:	jns    0x432923
  4328d0:	inc    esi
  4328d1:	fsub   QWORD PTR [ebp+0x2cb0532f]
  4328d7:	call   0xed9e01ec
  4328dc:	pop    eax
  4328dd:	pop    esp
  4328de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4328df:	daa    
  4328e0:	ret    0xb6a9
  4328e3:	pop    ebx
  4328e4:	es scas eax,DWORD PTR es:[edi]
  4328e6:	mov    ds:0xa7e43903,eax
  4328eb:	adc    ah,BYTE PTR [edx-0x190b9127]
  4328f1:	add    ah,bl
  4328f3:	xchg   ebx,eax
  4328f5:	xlat   BYTE PTR ds:[ebx]
  4328f6:	out    0x3,eax
  4328f8:	sbb    esp,esp
  4328fa:	mov    bl,0x11
  4328fc:	mov    ds:0xdb4dcd9,al
  432901:	or     ch,al
  432903:	jbe    0x432905
	...
  432915:	add    BYTE PTR [eax],al
  432917:	add    BYTE PTR [ebp-0x5d],bl
  43291a:	or     dl,BYTE PTR [edi]
  43291c:	(bad)  
  43291d:	out    0xa7,al
  43291f:	add    eax,DWORD PTR [ebp+0x27]
  432922:	outs   dx,DWORD PTR ds:[esi]
  432923:	repnz out 0x2,al
  432926:	jecxz  0x4328af
  432928:	mov    ds:0xca03e7d7,eax
  43292d:	call   0x7808:0x41620405
  432934:	popa   
  432935:	push   esi
  432936:	in     eax,0xc3
  432938:	das    
  432939:	xchg   ebp,eax
  43293a:	out    0x13,eax
  43293c:	out    dx,eax
  43293d:	pop    esp
  43293e:	or     al,0xc0
  432940:	mov    ch,0x9
  432942:	call   0xe7fa7122
  432947:	add    ebx,esi
  432949:	sbb    BYTE PTR ds:0xcc5cef39,dh
  43294f:	add    edx,DWORD PTR [ebp+0x16dbe809]
  432955:	setae  ah
  432958:	add    edx,DWORD PTR [esi+0x4c]
  43295b:	daa    
  43295c:	mov    dh,0xd5
  43295e:	out    0x3,eax
  432960:	bound  eax,QWORD PTR [ebp-0x4b1e813e]
  432966:	add    BYTE PTR ds:0x1900d962,bh
  43296c:	mov    eax,0x957456ee
  432971:	mov    ebp,0xa3055138
  432976:	cli    
  432977:	push   esi
  432978:	les    ebx,FWORD PTR [esp+0x15]
	...
  43298f:	add    BYTE PTR [esi+0x53ad1404],dl
  432995:	cdq    
  432996:	add    dl,ch
  432998:	and    DWORD PTR [esi+0x55],edx
  43299b:	or     eax,0xfa05006a
  4329a0:	and    DWORD PTR [eax+0x7bbb9ce],edi
  4329a6:	pop    ecx
  4329a7:	adc    esp,ebp
  4329a9:	jecxz  0x4329ab
  4329ab:	jmp    0xe74c3d9
  4329b0:	push   cs
  4329b1:	or     eax,DWORD PTR [ecx+ebp*1]
  4329b4:	stos   DWORD PTR es:[edi],eax
  4329b5:	popf   
  4329b6:	add    cl,bl
  4329b8:	jne    0x432990
  4329ba:	push   0x80d961e9
  4329bf:	xor    DWORD PTR [ebp+0x4],0x14
  4329c3:	fnsave [edx-0x67]
  4329c6:	add    BYTE PTR [edx],bh
  4329c8:	dec    ebx
  4329c9:	lods   al,BYTE PTR ds:[esi]
  4329ca:	and    al,0x4d
  4329cc:	test   ebx,0xf15c2a4d
  4329d2:	fidivr WORD PTR [edi+0x258c03c9]
  4329d8:	cmp    BYTE PTR [ecx+0x50],0xfa
  4329dc:	mov    eax,ds:0x88eb6698
  4329e1:	in     eax,dx
  4329e2:	cwde   
  4329e3:	clc    
  4329e4:	and    ecx,ebx
  4329e6:	test   DWORD PTR [ecx-0x188b0a1d],edx
  4329ec:	xor    al,BYTE PTR [esp+edx*1]
  4329ef:	mov    ch,0x54
  4329f1:	cdq    
	...
  432a06:	add    BYTE PTR [eax],al
  432a08:	push   esi
  432a09:	hlt    
  432a0a:	adc    al,0xa4
  432a0c:	mov    DWORD PTR [eax+eax*1-0x53da3f76],ebx
  432a13:	sti    
  432a14:	int3   
  432a15:	hlt    
  432a16:	sbb    DWORD PTR [edi+eiz*2-0x15],0x6856ff4e
  432a1e:	or     al,0x40
  432a20:	cmp    esp,DWORD PTR ds:0xdc4b0170
  432a26:	jns    0x432a26
  432a28:	sbb    eax,DWORD PTR [ebx]
  432a2a:	test   DWORD PTR [ebp+0x3a],ebp
  432a2d:	fadd   QWORD PTR [eax]
  432a2f:	mov    dl,0x39
  432a31:	xor    eax,0x5c823473
  432a36:	loop   0x432a07
  432a38:	jne    0x432a2e
  432a3a:	div    BYTE PTR [ebx]
  432a3c:	mov    al,ds:0x174487a0
  432a41:	mov    esp,0x881cc083
  432a46:	inc    eax
  432a47:	add    DWORD PTR [ebx],ecx
  432a49:	fmul   QWORD PTR [ebx+0x21c278c]
  432a4f:	add    bl,bh
  432a51:	and    ebx,DWORD PTR [ebx+0x2af2cd6e]
  432a57:	rol    BYTE PTR [edi+0x1c],cl
  432a5a:	mov    eax,ds:0x9921c4
  432a5f:	pmulhw mm0,QWORD PTR [ebp+0x64]
  432a63:	push   ss
  432a64:	lods   al,BYTE PTR ds:[esi]
  432a65:	retf   
  432a66:	add    eax,0x4584f045
  432a6b:	and    al,0x0
	...
  432a7d:	add    BYTE PTR [eax],al
  432a7f:	add    BYTE PTR [ebx-0xc],bl
  432a82:	adc    al,0x3c
  432a84:	mov    ebx,DWORD PTR [ebx-0x7737c500]
  432a8a:	push   es
  432a8b:	call   0x3d70e9
  432a90:	adc    ecx,eax
  432a92:	and    al,0x16
  432a94:	bound  ebx,QWORD PTR [ecx-0x17]
  432a97:	(bad)  
  432a98:	jge    0x432a8b
  432a9a:	and    eax,0x70fa3e5c
  432a9f:	es ins DWORD PTR es:[edi],dx
  432aa1:	push   cs
  432aa2:	cli    
  432aa3:	xchg   BYTE PTR [edi+0x66],dl
  432aa6:	dec    esp
  432aa7:	inc    esp
  432aa8:	bound  esi,QWORD PTR [edi+0x2e]
  432aab:	mov    dh,0xea
  432aad:	hlt    
  432aae:	inc    esp
  432aaf:	add    BYTE PTR [edx],bh
  432ab1:	add    al,0xd6
  432ab3:	inc    DWORD PTR [ebp+0x7e]
  432ab6:	mov    DWORD PTR [ebx],esp
  432ab8:	cmp    dh,cl
  432aba:	std    
  432abb:	jmp    edi
  432abd:	mov    WORD PTR [ecx],ds
  432abf:	rcr    BYTE PTR [edx-0x10],0xfd
  432ac3:	out    0xcf,eax
  432ac5:	pop    ds
  432ac6:	call   0xd64b34c5
  432acb:	jb     0x432ae4
  432acd:	shl    dh,0x83
  432ad0:	and    bh,al
  432ad2:	cmp    BYTE PTR [edi-0x5020f9e],0x75
  432ad9:	cld    
  432ada:	jp     0x432ae8
  432adc:	push   cs
  432add:	cmp    edi,DWORD PTR [edx]
  432adf:	add    ch,ch
  432ae1:	(bad)  
  432ae2:	cmc    
  432ae3:	mov    ch,0x0
	...
  432af5:	add    BYTE PTR [eax],al
  432af7:	add    bl,ch
  432af9:	imul   eax,DWORD PTR [ebx+0x0],0xffffffca
  432afd:	jmp    0x432add
  432aff:	call   ebp
  432b01:	lea    edi,[eax+0x23]
  432b04:	retf   0xfdf0
  432b07:	(bad)  
  432b08:	mov    edx,0xbdffbf45
  432b0d:	js     0x432b4f
  432b0f:	and    al,0x4c
  432b11:	fcmovb st,st(3)
  432b13:	or     ah,bh
  432b15:	mov    ds:0x7d620004,al
  432b1a:	inc    eax
  432b1b:	and    al,0x46
  432b1d:	loopne 0x432b52
  432b1f:	shl    BYTE PTR [edx],0xd9
  432b22:	(bad)  
  432b24:	xor    eax,0x9434e79d
  432b29:	push   esp
  432b2a:	and    BYTE PTR fs:[esi-0x28],ah
  432b2e:	out    0x3,eax
  432b30:	mov    dl,BYTE PTR [eax+0x21]
  432b33:	jmp    0xf9eb87a0
  432b38:	into   
  432b39:	sbb    DWORD PTR [eax+0x40],esp
  432b3c:	xchg   bh,ch
  432b3e:	arpl   sp,ax
  432b40:	shl    DWORD PTR [ebx-0x4a],1
  432b43:	jbe    0x432af6
  432b45:	mov    ebp,0xaa88aac3
  432b4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b4b:	sbb    eax,0xe9553f4a
  432b50:	cmp    BYTE PTR [esp+ebp*4+0x1f],dl
  432b54:	ret    0xf6a9
  432b57:	ret    
  432b58:	xchg   ebp,eax
  432b59:	stos   BYTE PTR es:[edi],al
  432b5a:	mov    edi,0xc7
	...
  432b6f:	add    BYTE PTR [edi+0x6ee8e79d],dh
  432b75:	icebp  
  432b76:	cmc    
  432b77:	inc    ebx
  432b78:	bound  edx,QWORD PTR [edx-0x74]
  432b7b:	pop    ds
  432b7c:	ds push eax
  432b7e:	lods   al,BYTE PTR ds:[esi]
  432b7f:	pop    ds
  432b80:	pop    edx
  432b81:	push   eax
  432b82:	jl     0x432ba3
  432b84:	push   esi
  432b85:	jae    0x432b89
  432b87:	jg     0x432b36
  432b89:	mov    esi,eax
  432b8b:	dec    esi
  432b8c:	jmp    0x2259977c
  432b91:	fsin   
  432b93:	adc    eax,DWORD PTR [ebp+0x21773819]
  432b99:	mov    ebp,0xdb3c5407
  432b9e:	ror    BYTE PTR [esi],cl
  432ba0:	ds jmp 0x432bca
  432ba3:	add    al,0x35
  432ba5:	test   DWORD PTR [ebx],ecx
  432ba7:	or     al,0x62
  432ba9:	push   edx
  432baa:	cmc    
  432bab:	lahf   
  432bac:	push   edi
  432bad:	cdq    
  432bae:	add    cl,ch
  432bb0:	or     eax,0x4235f9db
  432bb5:	loope  0x432bb0
  432bb7:	mov    edi,0xd124897a
  432bbc:	jp     0x432be5
  432bbe:	push   esp
  432bbf:	xchg   esi,eax
  432bc0:	xchg   ebx,eax
  432bc1:	pop    esi
  432bc2:	dec    ebp
  432bc3:	lds    eax,FWORD PTR [ecx-0xf]
  432bc6:	xor    BYTE PTR [ebx],dh
  432bc8:	jnp    0x432bcc
  432bca:	cmp    DWORD PTR ds:0xe273ea42,ebx
  432bd0:	(bad)  
  432bd2:	add    BYTE PTR [edx],dl
	...
  432be8:	mov    ds:0x9f99e8d9,al
  432bed:	add    dl,bh
  432bef:	jb     0x432bfb
  432bf1:	std    
  432bf2:	lea    esi,[esi+0x4a]
  432bf5:	add    BYTE PTR [edi+0x59e755a5],al
  432bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432bfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432bfd:	lods   al,BYTE PTR ds:[esi]
  432bfe:	test   DWORD PTR [esp+ebx*4+0x44],eax
  432c02:	push   esp
  432c03:	bound  esi,QWORD PTR ds:0x4e974daa
  432c09:	pop    es
  432c0a:	xor    BYTE PTR cs:[ebx-0x5e41e0f],ah
  432c11:	inc    DWORD PTR [ecx+ebp*1-0x19978973]
  432c18:	loope  0x432c1e
  432c1a:	cli    
  432c1b:	push   es
  432c1c:	pop    esp
  432c1d:	push   ebp
  432c1e:	adc    BYTE PTR [ecx-0xabba99f],ch
  432c24:	xor    BYTE PTR [ebp+edx*8+0xf0d67ee],dh
  432c2b:	sub    DWORD PTR [esi-0x57],esp
  432c2e:	stc    
  432c2f:	hlt    
  432c30:	and    eax,0x38e940d4
  432c35:	adc    al,0x84
  432c37:	mov    ebx,0x2dc032
  432c3c:	repnz mov dh,0x4b
  432c3f:	cld    
  432c40:	gs into 
  432c42:	add    DWORD PTR [ecx+eax*1],0x5f74ba5a
  432c49:	mov    ds:0x3879,eax
	...
  432c5e:	add    BYTE PTR [eax],al
  432c60:	mov    dh,0x89
  432c62:	push   ss
  432c63:	cvttps2pi mm3,QWORD PTR [ebp-0x541c7d06]
  432c6a:	je     0x432c7e
  432c6c:	or     BYTE PTR ds:0xc0737400,ah
  432c72:	dec    eax
  432c73:	jne    0x432cec
  432c75:	call   edi
  432c77:	jmp    0x432cbc
  432c79:	push   edi
  432c7a:	ret    
  432c7b:	or     al,ah
  432c7d:	xlat   BYTE PTR ds:[ebx]
  432c7e:	jns    0x432c4b
  432c80:	aas    
  432c81:	popf   
  432c82:	xor    DWORD PTR [ebp-0x59],ecx
  432c85:	jno    0x432c4c
  432c87:	push   edx
  432c88:	xchg   esp,eax
  432c89:	jmp    0xc3ee:0xd80b130c
  432c90:	xor    esi,DWORD PTR [esp+ecx*1-0x42]
  432c94:	int3   
  432c95:	add    edi,edx
  432c97:	(bad)  
  432c98:	std    
  432c99:	cli    
  432c9a:	adc    al,0x88
  432c9c:	cmp    bl,BYTE PTR [eax-0x21c70a00]
  432ca2:	je     0x432ccc
  432ca4:	jae    0x432c69
  432ca6:	(bad)  
  432ca7:	dec    DWORD PTR [ebx]
  432ca9:	and    BYTE PTR [ebx+0x29d80b61],dh
  432caf:	leave  
  432cb0:	jg     0x432ccf
  432cb2:	pop    es
  432cb3:	inc    ebp
  432cb4:	jmp    0xc3:0xf1c004f5
  432cbb:	add    al,0x4f
  432cbd:	mov    bh,0x2a
  432cbf:	rol    BYTE PTR [edx],cl
  432cc1:	and    BYTE PTR [eax+0x44],0x0
	...
  432cd5:	add    BYTE PTR [eax],al
  432cd7:	add    BYTE PTR [ebx+0x62048a1f],bh
  432cdd:	repnz std 
  432cdf:	out    0x4f,al
  432ce1:	xor    edi,edx
  432ce3:	std    
  432ce4:	mov    bh,0x5e
  432ce6:	jle    0x432cc6
  432ce8:	arpl   WORD PTR [eax+0x4e76e7b6],cx
  432cee:	jecxz  0x432cea
  432cf0:	fidiv  WORD PTR [ecx]
  432cf2:	push   0xffffffb9
  432cf4:	push   ecx
  432cf5:	fs xor ecx,0x4eb9f0f
  432cfc:	mov    ds:0x600040c7,al
  432d01:	out    dx,al
  432d02:	xchg   esi,eax
  432d03:	gs ins DWORD PTR es:[edi],dx
  432d05:	pop    edx
  432d06:	adc    esp,ebp
  432d08:	push   eax
  432d09:	mov    dl,0x4
  432d0b:	out    0x54,eax
  432d0d:	js     0x432d4b
  432d0f:	sbb    cl,ch
  432d11:	icebp  
  432d12:	loop   0x432d23
  432d14:	xchg   ecx,eax
  432d15:	leave  
  432d16:	jns    0x432cd7
  432d18:	push   ebp
  432d19:	(bad)  
  432d1a:	les    ecx,FWORD PTR [ebx+eiz*4-0x54794155]
  432d21:	or     bl,ah
  432d23:	jae    0x432cab
  432d25:	hlt    
  432d26:	jbe    0x432d28
  432d28:	nop
  432d29:	ret    
  432d2a:	dec    ebp
  432d2b:	add    al,0x51
  432d2d:	mov    ecx,0xad65bf79
  432d32:	les    ecx,FWORD PTR [ebx+eiz*4+0x6203bfbb]
  432d39:	xchg   DWORD PTR [eax+ebx*1],edi
	...
  432d50:	std    
  432d51:	sbb    al,BYTE PTR fs:[ecx+ebp*8]
  432d55:	icebp  
  432d56:	dec    edi
  432d57:	sti    
  432d58:	xchg   edx,eax
  432d59:	or     BYTE PTR [edi],ch
  432d5b:	leave  
  432d5c:	fidiv  WORD PTR [eax+0x7da394f2]
  432d62:	inc    esp
  432d63:	sti    
  432d64:	mov    al,ds:0x1b86fdfc
  432d69:	fcos   
  432d6b:	in     al,0x51
  432d6d:	mov    ebp,0xa76278e3
  432d72:	rcl    BYTE PTR [esi+eiz*2-0x3a],cl
  432d76:	mov    al,ds:0x5cd2ed80
  432d7b:	ret    
  432d7c:	(bad)  
  432d7d:	cwde   
  432d7e:	mov    edx,0x5ed961c2
  432d83:	cmp    edi,DWORD PTR [edx+0x4e]
  432d86:	jmp    0xd72c4b6f
  432d8b:	mov    edx,0x8eeb19e1
  432d90:	mov    ds:0xb4e52954,al
  432d95:	dec    esi
  432d96:	and    DWORD PTR [ecx+ebp*2],ecx
  432d99:	(bad)  
  432d9a:	retf   
  432d9b:	(bad)  
  432d9c:	(bad)  
  432d9e:	adc    eax,0xb6edade5
  432da3:	mov    edx,0x8edb18e1
  432da8:	and    dl,BYTE PTR [ecx+ebp*4-0x1c]
  432dac:	pop    es
  432dad:	fucom  st(7)
  432daf:	js     0x432d5b
  432db1:	loope  0x432e11
  432db3:	add    eax,DWORD PTR [eax]
	...
  432dc5:	add    BYTE PTR [eax],al
  432dc7:	add    BYTE PTR [ecx],bh
  432dc9:	test   eax,0x5d1b30ef
  432dce:	sub    ch,dh
  432dd0:	into   
  432dd1:	pop    ss
  432dd2:	ins    DWORD PTR es:[edi],dx
  432dd3:	inc    ebx
  432dd4:	sbb    DWORD PTR [esi],edx
  432dd6:	xchg   edi,eax
  432dd7:	js     0x432d92
  432dd9:	mov    ebp,0xaab04edf
  432dde:	outs   dx,BYTE PTR ds:[esi]
  432ddf:	fstp   TBYTE PTR [edi-0x47]
  432de2:	ins    BYTE PTR es:[edi],dx
  432de3:	addr16 push edx
  432de5:	outs   dx,DWORD PTR ds:[esi]
  432de6:	out    0xbc,eax
  432de8:	sahf   
  432de9:	fnstcw WORD PTR [edi+0x74]
  432dec:	sub    eax,0x5a4770d9
  432df1:	dec    esi
  432df2:	jae    0x432dff
  432df4:	xor    DWORD PTR [edx],eax
  432df6:	add    esp,ebx
  432df8:	sub    edi,esp
  432dfa:	inc    eax
  432dfb:	jmp    0xaa72054b
  432e00:	add    ch,BYTE PTR gs:[edx]
  432e03:	out    0xe2,al
  432e05:	adc    eax,0xd8ca6a0d
  432e0a:	or     DWORD PTR [ebp-0x5f],esi
  432e0d:	jnp    0x432e1e
  432e0f:	jo     0x432e47
  432e11:	loope  0x432e6a
  432e13:	fs stos BYTE PTR es:[edi],al
  432e15:	push   esp
  432e16:	add    eax,0xd9602c
  432e1b:	jmp    0xf70475b6
  432e20:	inc    ebp
  432e21:	sbb    BYTE PTR [ecx-0x76a690fa],al
  432e27:	cs popa 
  432e29:	sahf   
  432e2a:	pop    edx
  432e2b:	pusha  
	...
  432e40:	adc    al,0xb1
  432e42:	shr    DWORD PTR [esi+ebp*1],0x29
  432e46:	xchg   ebx,eax
  432e47:	sub    esp,DWORD PTR [esi+0x1c]
  432e4a:	inc    esp
  432e4b:	mov    ebp,0xe93f6b43
  432e50:	push   cs
  432e51:	xchg   esi,eax
  432e52:	cmp    BYTE PTR [ebp-0x29],ah
  432e55:	mov    esi,0xbd7c2600
  432e5a:	adc    bh,BYTE PTR [esi-0x5d]
  432e5d:	fld    st(1)
  432e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432e60:	mov    eax,ds:0x61ab91c9
  432e65:	sbb    al,0x44
  432e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e68:	mov    ds:0xd6e93f6c,al
  432e6d:	xchg   ebp,eax
  432e6e:	dec    eax
  432e6f:	mov    esi,ds
  432e71:	mov    esi,0x9dc47200
  432e76:	push   ebp
  432e77:	sub    edi,ebp
  432e79:	add    BYTE PTR [eax-0x2ea8a958],cl
  432e7f:	imul   eax,DWORD PTR [ebx],0xf6007484
  432e85:	pop    esp
  432e86:	hlt    
  432e87:	sbb    edx,DWORD PTR [esi-0x3]
  432e8a:	sbb    eax,0x88d1bf9b
  432e8f:	inc    ecx
  432e90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432e91:	sbb    DWORD PTR [ecx+eax*2-0x7f35b0ac],eax
  432e98:	test   eax,0x4b05747c
  432e9d:	pop    ds
  432e9e:	adc    esi,DWORD PTR [ebp-0x3a]
  432ea1:	mov    eax,0x8880
	...
  432eb6:	add    BYTE PTR [eax],al
  432eb8:	jp     0x432e6e
  432eba:	mov    ecx,0x24a1dc51
  432ebf:	or     al,0xfe
  432ec1:	lds    esi,FWORD PTR [eax]
  432ec3:	call   DWORD PTR [edi-0x4f]
  432ec6:	or     al,0x83
  432ec8:	mov    edx,0x9e8ee205
  432ecd:	fadd   QWORD PTR [eax]
  432ecf:	pop    ecx
  432ed0:	leave  
  432ed1:	int    0x0
  432ed3:	mov    al,0x7a
  432ed5:	pop    ss
  432ed6:	push   ebp
  432ed7:	mov    ecx,edi
  432ed9:	push   esi
  432eda:	out    0x4,al
  432edc:	dec    ecx
  432edd:	fadd   QWORD PTR [eax]
  432edf:	(bad)  
  432ee0:	(bad)  
  432ee1:	stc    
  432ee2:	cld    
  432ee3:	(bad)  
  432ee4:	mov    esp,0x33574ec8
  432ee9:	aad    0xff
  432eeb:	dec    DWORD PTR [ebx-0x34]
  432eee:	dec    edi
  432eef:	push   DWORD PTR [esi]
  432ef1:	rcl    BYTE PTR [eax+eax*2],0x3b
  432ef5:	dec    edi
  432ef6:	rol    BYTE PTR [ebp+0x33277b80],cl
  432efc:	push   ebp
  432efd:	push   eax
  432efe:	clc    
  432eff:	call   DWORD PTR [ecx+edi*2+0x4efb407c]
  432f06:	(bad)  
  432f07:	js     0x432ec8
  432f09:	fwait
  432f0a:	add    BYTE PTR [ebx-0x72],dl
  432f0d:	push   0xfffffff6
  432f0f:	std    
  432f10:	(bad)  
  432f11:	out    0xdd,eax
  432f13:	out    0x6c,eax
  432f15:	test   eax,0xb1df0004
  432f1a:	pop    eax
  432f1b:	adc    BYTE PTR [eax],al
	...
  432f2d:	add    BYTE PTR [eax],al
  432f2f:	add    cl,ah
  432f31:	mov    dh,0x10
  432f33:	inc    edx
  432f34:	loope  0x432f3c
  432f36:	inc    esi
  432f37:	outs   dx,BYTE PTR ds:[esi]
  432f38:	test   eax,0x245abe42
  432f3d:	fwait
  432f3e:	retf   
  432f3f:	mov    esi,0x620a2849
  432f44:	jmp    0x22beacb8
  432f49:	repnz jmp 0x6208:0x2225e3ea
  432f51:	repnz xor dl,BYTE PTR [ebp+0x2c]
  432f55:	fild   QWORD PTR [esp+ecx*4+0x63]
  432f59:	repnz std 
  432f5b:	cs test eax,0x154edc8a
  432f61:	mov    dh,BYTE PTR [ecx]
  432f63:	and    al,0x41
  432f65:	addr16 stc 
  432f67:	push   edi
  432f68:	push   esp
  432f69:	mov    dl,0x4
  432f6b:	jg     0x432f0b
  432f6d:	add    eax,0x219e14df
  432f72:	ds add bl,ch
  432f75:	scas   eax,DWORD PTR es:[edi]
  432f76:	or     BYTE PTR [edi+0x4a],bh
  432f79:	jo     0x432fd3
  432f7b:	add    edx,DWORD PTR [eax+0x6048ecb0]
  432f81:	lock std 
  432f83:	dec    esi
  432f84:	out    0x3c,eax
  432f86:	and    ah,BYTE PTR [eax]
  432f88:	jmp    0x432f8b
  432f8a:	jge    0x432f13
  432f8c:	fisubr WORD PTR [eax-0x3fe211e3]
  432f92:	nop
  432f93:	inc    ebx
	...
  432fa8:	ds and al,0x2e
  432fab:	sti    
  432fac:	ja     0x432fde
  432fae:	stc    
  432faf:	aas    
  432fb0:	(bad)  
  432fb1:	fnstenv [eax+0x4a]
  432fb4:	push   0x54
  432fb6:	sub    BYTE PTR [edi+0x1a],dl
  432fb9:	retf   
  432fba:	daa    
  432fbb:	inc    ebx
  432fbc:	xchg   edx,eax
  432fbd:	dec    esp
  432fbe:	mov    ah,0x27
  432fc0:	inc    edx
  432fc1:	inc    eax
  432fc2:	(bad)  
  432fc3:	jl     0x432faa
  432fc5:	push   ebp
  432fc6:	adc    bh,bl
  432fc8:	sar    dh,cl
  432fca:	repnz (bad) 
  432fcc:	and    DWORD PTR [ebp+0x731533cb],esi
  432fd2:	call   0x23e6c975
  432fd7:	add    al,0xf
  432fd9:	(bad)  
  432fda:	cld    
  432fdb:	jmp    0x43303c
  432fdd:	cdq    
  432fde:	out    0x8a,eax
  432fe0:	and    ch,cl
  432fe2:	ins    BYTE PTR es:[edi],dx
  432fe3:	les    edx,FWORD PTR [ecx]
  432fe5:	xor    cl,BYTE PTR [esi+0x3]
  432fe8:	out    0xa5,eax
  432fea:	or     esp,DWORD PTR [ebx+ecx*8]
  432fed:	mov    ebx,0xf16a5bff
  432ff2:	mov    eax,0x6cfe78d3
  432ff7:	dec    eax
  432ff8:	fnsave ds:[edi]
  432ffb:	xor    eax,0x43f4fe17
  433000:	push   ebx
  433001:	cdq    
  433002:	out    0x8a,eax
  433004:	mov    al,ds:0xd1c464e5
  433009:	push   esi
  43300a:	inc    BYTE PTR [edx]
	...
  433020:	fbld   TBYTE PTR [ebx+eax*8-0x7a44f4dd]
  433027:	pop    esp
  433028:	(bad)  
  43302a:	mov    ebx,ss
  43302c:	cmp    dh,bh
  43302e:	fs dec eax
  433030:	xchg   ch,bl
  433032:	mov    bh,0x6b
  433034:	jp     0x43309e
  433036:	sbb    BYTE PTR ds:0x36e373ad,al
  43303c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43303d:	inc    BYTE PTR [eax]
  43303f:	fsub   QWORD PTR [ebp-0x32]
  433042:	inc    eax
  433043:	jmp    0x29c70b20
  433048:	push   ebx
  433049:	push   ebp
  43304a:	pop    ecx
  43304b:	push   ds
  43304c:	add    eax,DWORD PTR [ebx]
  43304e:	dec    esi
  43304f:	mov    edx,0xb8fe7736
  433054:	add    ah,ch
  433056:	clc    
  433057:	(bad)  [ecx]
  433059:	fld    DWORD PTR [ebx+0x45557329]
  43305f:	test   dl,0x2
  433062:	mov    BYTE PTR [esi-0x17d72b2f],ah
  433068:	popa   
  433069:	fldenv [esi-0x17]
  43306c:	call   0xb519490b
  433071:	mov    DWORD PTR [ebx],edx
  433073:	sub    DWORD PTR [esi+0x56],ebx
  433076:	jmp    0x8515bce7
  43307b:	xor    al,0x61
  43307d:	fld    DWORD PTR [eax]
  43307f:	bound  esi,QWORD PTR [ebp+edx*1+0x11]
  433083:	sub    DWORD PTR [eax],eax
	...
  433095:	add    BYTE PTR [eax],al
  433097:	add    BYTE PTR [esi-0x48],bl
  43309a:	pop    ecx
  43309b:	int    0x40
  43309d:	mov    ds:0xa4661328,al
  4330a2:	stc    
  4330a3:	mov    edi,0x32c9ad8
  4330a8:	push   esp
  4330a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4330aa:	stc    
  4330ab:	lahf   
  4330ac:	call   0x435c6148
  4330b1:	mov    BYTE PTR [esp+ebx*1],ch
  4330b4:	inc    ebx
  4330b5:	out    0xe0,al
  4330b7:	fldenv [ecx-0x6ad67c27]
  4330bd:	out    0x50,eax
  4330bf:	shl    DWORD PTR [ecx+0x73],cl
  4330c2:	add    BYTE PTR [edx+ebx*4-0x47],ah
  4330c6:	push   eax
  4330c7:	pop    esp
  4330c8:	ins    DWORD PTR es:[edi],dx
  4330c9:	mov    ch,0x28
  4330cb:	add    BYTE PTR [eax-0x7961df5],dl
  4330d1:	cli    
  4330d2:	imul   bl
  4330d4:	stc    
  4330d5:	in     eax,0xc0
  4330d7:	push   ebp
  4330d8:	sub    BYTE PTR [ebx-0x2734eba8],0x62
  4330df:	add    BYTE PTR [edx-0x6f],dh
  4330e2:	sbb    al,0xff
  4330e4:	fist   WORD PTR cs:[ebp+0x1c]
  4330e8:	add    al,0x55
  4330ea:	adc    eax,DWORD PTR [ecx]
  4330ec:	retf   
  4330ed:	fadd   DWORD PTR [ecx+0x60009f4c]
  4330f3:	mov    edi,edx
  4330f5:	jmp    0x4788:0xd563c15e
	...
  433110:	or     esp,0xffffffae
  433113:	rol    ah,0x2b
  433116:	aas    
  433117:	sub    al,0x42
  433119:	xchg   esp,eax
  43311a:	xor    al,0xa8
  43311c:	mov    eax,0xab82fea4
  433121:	stc    
  433122:	jp     0x4330e4
  433124:	jg     0x433173
  433126:	aas    
  433127:	xor    al,0xa3
  433129:	xchg   esi,eax
  43312a:	xchg   ecx,eax
  43312b:	push   DWORD PTR [eax+ebp*2-0x4ed8c7ff]
  433132:	or     eax,0xf9f0fe0f
  433137:	(bad)  
  433138:	jnp    0x4331a3
  43313a:	xchg   BYTE PTR [edi+ecx*2],ah
  43313d:	xlat   BYTE PTR ds:[ebx]
  43313e:	add    BYTE PTR [eax],al
  433140:	sbb    DWORD PTR [edi],edi
  433142:	loop   0x43312c
  433144:	fcomp  DWORD PTR [edi+esi*8]
  433147:	lea    edi,[ecx+edi*4+0x62]
  43314b:	adc    BYTE PTR [ebx-0x27],ah
  43314e:	push   ebp
  43314f:	inc    esp
  433150:	dec    ebx
  433151:	enter  0x52e8,0xe0
  433155:	sbb    esi,edi
  433157:	lea    esp,[edx+0x76]
  43315a:	sub    BYTE PTR [edx-0x18020d9e],al
  433160:	mov    esp,0xe9fadb58
  433165:	jno    0x433149
  433167:	add    BYTE PTR [edx-0xe],ah
  43316a:	mov    WORD PTR [edx-0x6a],es
  43316d:	mov    edx,ebp
  43316f:	add    BYTE PTR [edx-0xe],ah
  433172:	nop
  433173:	add    DWORD PTR [eax],0x0
	...
  433186:	add    BYTE PTR [eax],al
  433188:	ds je  0x43318f
  43318b:	add    BYTE PTR [edx-0x54],ah
  43318e:	add    al,0x0
  433190:	mov    ds:0x4af95939,al
  433195:	lock add al,0x0
  433198:	bound  ebp,QWORD PTR [ebp-0x78]
  43319b:	and    edx,DWORD PTR [ebx+0x32fffdeb]
  4331a1:	popf   
  4331a2:	inc    ecx
  4331a3:	push   eax
  4331a4:	adc    ch,BYTE PTR [edx]
  4331a6:	repnz xchg esi,eax
  4331a8:	mov    ch,0x1a
  4331aa:	xchg   ecx,eax
  4331ab:	push   ebx
  4331ac:	xchg   BYTE PTR [esi],al
  4331ae:	push   0x93cfeb01
  4331b3:	xchg   edi,eax
  4331b4:	jp     0x4331e0
  4331b6:	pop    esi
  4331b7:	lock xchg ebp,eax
  4331b9:	cmp    dl,BYTE PTR [ecx+0x2e264643]
  4331bf:	bound  bx,DWORD PTR [edx-0xdd9aa40]
  4331c6:	ficom  DWORD PTR [edx+eiz*1]
  4331c9:	add    DWORD PTR [esi],edi
  4331cb:	add    bl,bl
  4331cd:	push   0x5d
  4331cf:	add    DWORD PTR [edx-0xe],esp
  4331d2:	mov    BYTE PTR [edi-0x5f89393],bh
  4331d8:	push   ebp
  4331d9:	jl     0x433242
  4331db:	add    BYTE PTR [ebp+0x1e],cl
  4331de:	push   edx
  4331df:	adc    eax,0xef86f0a2
  4331e4:	out    0xd9,eax
  4331e6:	pop    ecx
  4331e7:	push   edi
  4331e8:	pushf  
  4331e9:	mov    ds:0xf85a,eax
	...
  4331fe:	add    BYTE PTR [eax],al
  433200:	sbb    eax,0xdb03a7ea
  433205:	push   edx
  433206:	mov    ah,0x4
  433208:	(bad)  
  433209:	fldcw  WORD PTR [ebx+eax*8-0x6f]
  43320d:	(bad)
  433210:	dec    ebp
  433211:	test   eax,0xe5093597
  433216:	inc    edi
  433217:	repz cmp eax,0x998670d9
  43321d:	fsub   st,st(7)
  43321f:	add    esp,edi
  433221:	sbb    DWORD PTR [ebp+edi*8+0x3752fa95],ebx
  433228:	arpl   cx,bx
  43322a:	out    0xde,eax
  43322c:	outs   dx,BYTE PTR ds:[esi]
  43322d:	or     eax,0xca6243d8
  433232:	cmp    DWORD PTR [edx+0x47e19de],edi
  433238:	jmp    0x43328c
  43323a:	inc    eax
  43323b:	add    esp,DWORD PTR [edx-0x27]
  43323e:	aas    
  43323f:	or     eax,0x6a3a2127
  433244:	(bad)  
  433245:	cli    
  433246:	mov    ah,0x8a
  433248:	fcomp  QWORD PTR [edx+0x582d3f21]
  43324e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43324f:	sub    BYTE PTR [edx-0x27],bl
  433252:	out    0xc0,eax
  433254:	cs dec esi
  433256:	mov    esp,0x994e1033
  43325b:	xor    eax,0x3fb7af5
  433260:	fisub  DWORD PTR [edx+edx*4+0x58]
	...
  433277:	add    BYTE PTR [ebx-0x6],bl
  43327a:	adc    DWORD PTR [eax],eax
  43327c:	pop    ecx
  43327d:	in     al,0xa3
  43327f:	hlt    
  433280:	xchg   ebp,eax
  433281:	fldenv [esi+0x5e]
  433284:	pop    esi
  433285:	fld    DWORD PTR [eax]
  433287:	bound  esp,QWORD PTR [ebp+0x35]
  43328a:	movaps XMMWORD PTR [esi-0x7b],xmm4
  43328e:	add    esp,DWORD PTR [esi-0x74]
  433291:	int    0xf9
  433293:	ss jecxz 0x433315
  433296:	add    al,0x56
  433298:	mov    dl,al
  43329a:	stc    
  43329b:	xlat   BYTE PTR ds:[ebx]
  43329c:	gs (bad) 
  43329e:	adc    ecx,DWORD PTR [ecx+0x6a00ba11]
  4332a4:	lods   al,BYTE PTR ds:[esi]
  4332a5:	in     eax,0x0
  4332a7:	mov    ebp,0xd572fe5c
  4332ac:	push   ds
  4332ad:	daa    
  4332ae:	jle    0x433257
  4332b0:	icebp  
  4332b1:	stc    
  4332b2:	ins    DWORD PTR es:[edi],dx
  4332b3:	lock push cs
  4332b5:	mov    BYTE PTR [eax],dl
  4332b7:	push   ss
  4332b8:	in     eax,dx
  4332b9:	std    
  4332ba:	push   cs
  4332bb:	test   eax,0xe93a7a61
  4332c0:	sub    eax,0xaeb7f9d5
  4332c5:	xor    DWORD PTR es:[esi+eiz*4-0x7],0x57ea6d6d
  4332ce:	pop    ecx
  4332cf:	call   0xa9c70c35
  4332d4:	adc    eax,0xcfd650cc
  4332d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4332da:	(bad)  
  4332db:	call   0x4332e0
	...
  4332f0:	popa   
  4332f1:	(bad)  
  4332f2:	adc    esi,DWORD PTR [ebp+0x7200b991]
  4332f8:	out    0x9d,eax
  4332fa:	(bad)  
  4332fb:	call   0x36048761
  433300:	addr16 test eax,0xc9b5fcf9
  433306:	inc    eax
  433307:	jmp    0xe8988ae6
  43330c:	popa   
  43330d:	fld    DWORD PTR [ebx+0x50dcb5a9]
  433313:	add    ah,bl
  433315:	out    dx,eax
  433316:	mov    ecx,0x81dd7b10
  43331b:	xchg   BYTE PTR [ebx-0x24],bl
  43331e:	add    BYTE PTR [eax],al
  433320:	(bad)  
  433321:	sbb    al,0x6e
  433323:	add    edi,ebx
  433325:	adc    eax,0x5cc58bcf
  43332a:	add    DWORD PTR [eax],eax
  43332c:	cmp    esp,DWORD PTR [eax-0x46]
  43332f:	je     0x43339b
  433331:	retf   0x57f5
  433334:	sti    
  433335:	adc    eax,0x9d298415
  43333a:	add    BYTE PTR ds:0xdbf9,bh
  433340:	mov    bh,0xec
  433342:	dec    esi
  433343:	push   edi
  433344:	shr    edx,1
  433346:	div    BYTE PTR [esi+0xdb73]
  43334c:	dec    esp
  43334d:	out    dx,eax
  43334e:	xor    DWORD PTR [ebx+ecx*1],edx
  433351:	fisttp QWORD PTR [ebx+0x8e]
	...
  433367:	add    bh,bl
  433369:	fild   DWORD PTR [eax]
  43336b:	add    BYTE PTR [ebx-0xb],dh
  43336e:	dec    ebp
  43336f:	dec    esp
  433371:	mov    ah,0x56
  433373:	leave  
  433374:	mov    BYTE PTR [ecx-0x12e574b2],ch
  43337a:	dec    esi
  43337b:	xor    ecx,DWORD PTR [eax+ebx*2-0x2344ff86]
  433382:	test   dl,dl
  433384:	aaa    
  433385:	test   BYTE PTR [eax-0x6129884],al
  43338b:	push   cs
  43338c:	adc    eax,0xba94071f
  433391:	adc    ecx,ecx
  433393:	and    al,al
  433395:	gs push es
  433397:	xor    BYTE PTR [ebx],cl
  433399:	pop    ss
  43339a:	call   0x62a1:0xf45d2372
  4333a1:	fcomp  DWORD PTR [eax]
  4333a3:	sbb    BYTE PTR [eax-0x5d],0x4e
  4333a7:	sbb    ah,dl
  4333a9:	pop    ebx
  4333aa:	mov    al,ds:0x767e9b72
  4333af:	mov    ds:0x74fe0262,eax
  4333b4:	push   0xd483bd7b
  4333b9:	fs add eax,0x40e6200
  4333bf:	xchg   DWORD PTR [ecx],esp
  4333c1:	jp     0x433401
  4333c3:	push   cs
  4333c4:	or     edx,edx
  4333c6:	sbb    BYTE PTR [ecx-0x1fe40],0x0
	...
  4333dd:	add    BYTE PTR [eax],al
  4333df:	add    BYTE PTR [edi-0x213d7514],dl
  4333e5:	(bad)  
  4333e6:	mov    eax,ds:0x4a01fdff
  4333eb:	(bad)  
  4333ec:	call   0x5384c0b3
  4333f1:	retf   
  4333f2:	in     eax,dx
  4333f3:	add    esp,0xffffffa1
  4333f6:	add    al,0x0
  4333f8:	bound  ecx,QWORD PTR [ebp+0xc]
  4333fb:	xchg   DWORD PTR [ebp+0x62a07685],ebx
  433401:	add    bh,dh
  433403:	jae    0x433465
  433405:	jnp    0x4333c8
  433407:	xchg   DWORD PTR [edx+edx*1],esp
  43340a:	jp     0x433465
  43340c:	arpl   WORD PTR [ebx+eax*1-0x2342a2a8],cx
  433413:	add    DWORD PTR [esp+eax*1],0x4a
  433417:	jmp    eax
  433419:	push   esi
  43341a:	add    al,0x84
  43341c:	xor    al,0x6
  43341e:	dec    edx
  43341f:	jmp    eax
  433421:	inc    esi
  433422:	out    dx,al
  433423:	and    DWORD PTR [edx+edx*1],0x4a
  433427:	jmp    eax
  433429:	push   esi
  43342a:	cli    
  43342b:	adc    DWORD PTR [ecx+ebx*8],0xfffffff8
  43342f:	dec    edi
  433430:	ins    DWORD PTR es:[edi],dx
  433431:	pop    edx
  433432:	stos   DWORD PTR es:[edi],eax
  433433:	or     eax,DWORD PTR [eax]
  433435:	fs stos DWORD PTR es:[edi],eax
  433437:	cmp    bh,BYTE PTR [eax+0x55ffa592]
  43343d:	mov    gs,WORD PTR [esi-0x19]
  433440:	loop   0x433447
  433442:	pushf  
  433443:	add    eax,DWORD PTR [eax]
	...
  433455:	add    BYTE PTR [eax],al
  433457:	add    BYTE PTR [edx-0x27],ah
  43345a:	sbb    ebx,ebx
  43345c:	push   esi
  43345d:	int    0xd6
  43345f:	inc    ebx
  433460:	bound  ecx,QWORD PTR [ecx-0x34d20f9e]
  433466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433467:	add    ebx,edi
  433469:	sbb    esp,ebx
  43346b:	(bad)  
  43346c:	out    dx,eax
  43346d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43346e:	dec    ebx
  43346f:	xor    al,0x7c
  433471:	jge    0x4334e7
  433473:	mov    BYTE PTR [ebp-0xa],al
  433476:	cmp    bl,dl
  433478:	mov    dl,0x83
  43347a:	in     eax,0x33
  43347c:	stc    
  43347d:	int3   
  43347e:	retf   
  43347f:	out    dx,eax
  433480:	xor    eax,0x71c36cd9
  433485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433486:	pop    ax
  433488:	out    0xa7,al
  43348a:	pushf  
  43348b:	inc    edx
  43348c:	inc    esp
  43348d:	fstp   DWORD PTR [eax+esi*1-0xe]
  433491:	xor    BYTE PTR [ebp+0x4c],dh
  433494:	xchg   ecx,eax
  433495:	ror    BYTE PTR [edi],0xd7
  433498:	mov    dh,0xf6
  43349a:	xacquire xchg DWORD PTR [esi],edx
  43349d:	dec    ecx
  43349e:	jle    0x4334e7
  4334a0:	out    0x64,eax
  4334a2:	adc    cl,bl
  4334a4:	test   al,0xf6
  4334a6:	iret   
  4334a7:	add    cl,bl
  4334a9:	not    dl
  4334ab:	jg     0x43348a
  4334ad:	ins    BYTE PTR es:[edi],dx
  4334ae:	add    ebx,DWORD PTR [edx+0x42b78dd]
  4334b4:	cmp    al,0xb
  4334b6:	outs   dx,DWORD PTR ds:[esi]
  4334b7:	retf   0x6d7d
  4334ba:	add    BYTE PTR [edx+0x0],dh
	...
  4334d0:	fwait
  4334d1:	repz test BYTE PTR [ecx-0xb821fee],ch
  4334d8:	mov    eax,ds:0x65e9448c
  4334dd:	inc    DWORD PTR [edi]
  4334df:	fist   DWORD PTR [edi]
  4334e1:	pop    edi
  4334e2:	retf   
  4334e3:	or     DWORD PTR [ecx-0xb],0x208886f9
  4334ea:	mov    esi,0xc1d962ab
  4334ef:	jmp    0x43347a
  4334f1:	dec    ecx
  4334f2:	inc    ecx
  4334f3:	jmp    0x126fcdde
  4334f8:	mov    eax,ds:0x45b585bd
  4334fd:	fld    QWORD PTR [edi+0x3098eeeb]
  433503:	add    ah,BYTE PTR [ecx+0xdab87c1]
  433509:	pop    edi
  43350a:	adc    BYTE PTR [ebp+0x2b00d960],0x62
  433511:	fst    DWORD PTR [ebx+0x62]
  433514:	or     dh,BYTE PTR [edi-0x14]
  433517:	rcr    esi,0x8
  43351a:	mov    WORD PTR [ebp+edi*4+0x4c154460],fs
  433521:	leave  
  433522:	mov    ebp,DWORD PTR [ebx-0x4b74768b]
  433528:	lds    ecx,FWORD PTR [eax-0x2466b79]
  43352e:	sbb    dl,BYTE PTR [ecx-0x65]
  433531:	bnd data16 jmp 0x433535
	...
  433545:	add    BYTE PTR [eax],al
  433547:	add    BYTE PTR [ecx-0xe],dh
  43354a:	scas   al,BYTE PTR es:[edi]
  43354b:	cmp    eax,0xde00d961
  433550:	mov    ah,0x59
  433552:	adc    eax,0x7f6629
  433557:	into   
  433558:	test   BYTE PTR [ebp+0x15],al
  43355b:	add    BYTE PTR [ebx],bh
  43355d:	fld    QWORD PTR [ebx-0x7e18b040]
  433563:	rol    BYTE PTR [esi],1
  433565:	lahf   
  433566:	call   0x10a9f53
  43356b:	add    BYTE PTR [edx-0x3574afe4],dh
  433571:	test   al,0x81
  433573:	inc    esi
  433574:	pop    ebx
  433575:	data16 hlt 
  433577:	(bad)  
  433578:	mov    ebx,0x3b0000f4
  43357d:	into   
  43357e:	retf   0x8bff
  433581:	fdivr  st,st(7)
  433583:	dec    DWORD PTR [ebx-0x79]
  433586:	fs pop ecx
  433588:	jecxz  0x433549
  43358a:	and    al,BYTE PTR [eax]
  43358c:	cmp    esi,DWORD PTR [ecx+edi*4+0x74]
  433590:	xor    eax,0x7246e12
  433595:	retfw  0x8057
  433599:	and    ah,dl
  43359b:	add    dh,BYTE PTR [edx+edx*1]
  43359e:	neg    DWORD PTR [edi-0x1b]
  4335a1:	push   ds
  4335a2:	(bad)  
  4335a3:	jmp    DWORD PTR [edx+0x44fe70ef]
  4335a9:	ret    
  4335aa:	sub    esp,0x0
	...
  4335c0:	js     0x4335d6
  4335c2:	repnz adc DWORD PTR [edi-0x74],0xadcb0004
  4335ca:	dec    esi
  4335cb:	push   edi
  4335cc:	loope  0x4335a5
  4335ce:	cmp    ecx,0x11460364
  4335d4:	sti    
  4335d5:	fcom   DWORD PTR [eax-0x1]
  4335d8:	sahf   
  4335d9:	test   al,0xf
  4335db:	inc    eax
  4335dc:	retf   
  4335dd:	int    0xd1
  4335df:	push   ebx
  4335e0:	imul   ebx,DWORD PTR ss:0xd8bb8c,0x4b7d62b9
  4335eb:	xor    ecx,DWORD PTR [ebx+0x1a]
  4335ee:	loope  0x4335db
  4335f0:	lea    ebx,[ebx]
  4335f2:	mov    BYTE PTR [ebx+0x46a3e],dl
  4335f8:	bound  ebx,QWORD PTR [edx]
  4335fa:	test   DWORD PTR [eax-0x407ebc8b],eax
  433600:	pop    ebp
  433601:	xchg   BYTE PTR [esi],ch
  433603:	add    DWORD PTR [edx+0x2],esp
  433606:	nop
  433607:	add    bh,ch
  433609:	jge    0x43362b
  43360b:	lock bound eax,QWORD PTR [edx]
  43360e:	(bad)  
  43360f:	out    0xae,eax
  433611:	pop    eax
  433612:	sar    dl,cl
  433614:	fiadd  WORD PTR [ecx+0x2]
  433617:	test   BYTE PTR [esi+0x35fffe01],cl
  43361d:	or     eax,0x2a20eca
  433622:	cmp    DWORD PTR [edi+0x0],0x0
	...
  433638:	push   ebp
  433639:	ins    DWORD PTR es:[edi],dx
  43363a:	les    eax,FWORD PTR [edi-0x7bfe195a]
  433640:	and    dl,BYTE PTR [ebx]
  433642:	sbb    DWORD PTR [edx-0x7301fd9e],0xb8f4deae
  43364c:	fadd   QWORD PTR [ecx]
  43364e:	(bad)  
  43364f:	dec    DWORD PTR [edx]
  433651:	sti    
  433652:	xchg   esi,eax
  433653:	(bad)  
  433654:	in     eax,dx
  433655:	ins    BYTE PTR es:[edi],dx
  433656:	and    BYTE PTR [ebx],0xe2
  433659:	(bad)  
  43365a:	std    
  43365b:	push   DWORD PTR [edx]
  43365d:	xor    DWORD PTR [eax+0x4],ebp
  433660:	cmp    ebx,edx
  433662:	jle    0x433666
  433664:	bound  eax,QWORD PTR [edx]
  433666:	jp     0x433627
  433668:	dec    esi
  433669:	jbe    0x4335f3
  43366b:	inc    ebx
  43366c:	xchg   BYTE PTR [edx],dl
  43366e:	mov    DWORD PTR [ebx-0x17d82],edx
  433674:	(bad)  
  433675:	fnstenv [edi]
  433677:	mov    ebx,DWORD PTR [edi+0x620b7900]
  43367d:	fldcw  WORD PTR [ebx+eax*8+0x11]
  433681:	jle    0x4336c0
  433683:	inc    eax
  433684:	sub    BYTE PTR [ebx-0x62c1c08c],cl
  43368a:	push   ss
  43368b:	xor    al,0x79
  43368d:	int    0xf
  43368f:	out    dx,al
  433690:	xor    eax,0x59bf66d9
  433695:	data16 ins BYTE PTR es:[edi],dx
  433697:	pop    ds
  433698:	fcmovu st,st(0)
  43369a:	out    0x3,eax
	...
  4336b0:	jmp    0x43364f
  4336b2:	retf   
  4336b3:	dec    ebx
  4336b4:	out    0x9d,eax
  4336b6:	ret    
  4336b7:	adc    esi,DWORD PTR [edx-0x61dfd39c]
  4336bd:	mov    DWORD PTR [esi],edx
  4336bf:	adc    ebp,DWORD PTR [eiz*2-0x2819e09c]
  4336c6:	out    0x3,eax
  4336c8:	fld    TBYTE PTR [ebp+0xb]
  4336cb:	dec    eax
  4336cc:	cmp    ch,ch
  4336ce:	stos   BYTE PTR es:[edi],al
  4336cf:	(bad)  
  4336d0:	sbb    BYTE PTR [ebp+0x28],bl
  4336d3:	dec    edi
  4336d4:	inc    eax
  4336d5:	sbb    DWORD PTR [edi-0xe],0x4f42f30d
  4336dc:	lods   eax,DWORD PTR ds:[esi]
  4336de:	cmp    dh,al
  4336e0:	loope  0x4336a9
  4336e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4336e3:	add    ebx,ebp
  4336e5:	lods   al,BYTE PTR ds:[esi]
  4336e6:	xor    ecx,0x2d
  4336e9:	fldenv [edx]
  4336eb:	dec    edi
  4336ec:	lods   eax,DWORD PTR ds:[esi]
  4336ee:	sbb    ch,BYTE PTR [ebp+0x13cb6dd8]
  4336f4:	(bad)  [ebx]
  4336f6:	and    bh,BYTE PTR [edi]
  4336f8:	xchg   dl,ah
  4336fa:	call   0x8fc94c31
  4336ff:	add    dl,BYTE PTR [edx-0x27]
  433702:	add    cl,ch
  433704:	mov    ebp,cs
  433706:	pusha  
  433707:	aad    0x21
  433709:	fld    DWORD PTR [esi-0x7f217dbb]
  43370f:	loop   0x433772
  433711:	ins    BYTE PTR es:[edi],dx
  433712:	pop    ecx
  433713:	cmp    BYTE PTR [eax],al
	...
  433725:	add    BYTE PTR [eax],al
  433727:	add    BYTE PTR [edi+0x60352526],ch
  43372d:	fld    DWORD PTR [eax]
  43372f:	je     0x433713
  433731:	mov    dh,0xf8
  433733:	jmp    0xb6931099
  433738:	shl    BYTE PTR [esi-0x269e1604],cl
  43373e:	xchg   DWORD PTR ds:0x258bb942,ebp
  433744:	cmp    BYTE PTR [ecx+0x171f6250],0x45
  43374b:	lds    edi,FWORD PTR [ecx-0x5b]
  43374e:	fwait
  43374f:	sub    ebx,DWORD PTR [esi+0x16]
  433752:	inc    ebp
  433753:	lds    eax,FWORD PTR [ebp+0x5e2b98b2]
  433759:	push   ss
  43375a:	inc    ebp
  43375b:	lds    edx,FWORD PTR [ecx-0x62]
  43375e:	fwait
  43375f:	stos   DWORD PTR es:[edi],eax
  433760:	popa   
  433761:	push   ss
  433762:	inc    ebp
  433763:	add    eax,0xab9b8272
  433768:	popa   
  433769:	push   ss
  43376a:	inc    ebp
  43376b:	add    eax,0xab9c2b6e
  433770:	popa   
  433771:	push   ss
  433772:	inc    ebp
  433773:	add    eax,0xab9be95a
  433778:	popa   
  433779:	push   ss
  43377a:	inc    ebp
  43377b:	add    eax,0xab9ba5a6
  433780:	popa   
  433781:	add    edi,edi
  433783:	jge    0x4337eb
  433785:	fldcw  WORD PTR [esi+0x255ddce8]
  43378b:	sbb    DWORD PTR [eax],eax
	...
  43379d:	add    BYTE PTR [eax],al
  43379f:	add    BYTE PTR [esi-0x27],ah
  4337a2:	add    BYTE PTR [eax],al
  4337a4:	jae    0x4337f8
  4337a6:	repz (bad) 
  4337a8:	mov    esp,0xcd5fbb5f
  4337ad:	mov    al,0x81
  4337af:	in     eax,0xde
  4337b1:	sbb    BYTE PTR [ebp-0x75],dl
  4337b4:	(bad)  
  4337b5:	pop    eax
  4337b6:	fdivp  st(0),st
  4337b8:	or     dl,bh
  4337ba:	sbb    eax,0x50300053
  4337bf:	push   edi
  4337c0:	add    ch,BYTE PTR [edx+0xf101c24]
  4337c6:	jnp    0x4337c3
  4337c8:	mov    esi,0x8a8784dc
  4337cd:	aad    0x0
  4337cf:	lea    edi,[eax]
  4337d1:	xlat   BYTE PTR ds:[ebx]
  4337d2:	jns    0x4337cc
  4337d4:	jp     0x4337b2
  4337d6:	jge    0x43381f
  4337d8:	dec    edx
  4337d9:	fld    QWORD PTR [eax]
  4337db:	push   edi
  4337dc:	in     al,dx
  4337dd:	jmp    FWORD PTR [ecx+0x14]
  4337e0:	jnp    0x4337b7
  4337e2:	xor    eax,0x84071eb6
  4337e8:	xor    eax,0xc80000dc
  4337ed:	cwde   
  4337ee:	and    al,0x14
  4337f0:	mov    esp,0xfb15f5be
  4337f5:	add    BYTE PTR [edx],bh
  4337f7:	add    BYTE PTR [eax+0xb102490],cl
  4337fd:	fs ds and al,0x13
  433801:	jo     0x4337bc
  433803:	jle    0x433805
	...
  433815:	add    BYTE PTR [eax],al
  433817:	add    BYTE PTR [ecx],cl
  433819:	bound  edx,QWORD PTR [esi+0x24]
  43381c:	sbb    eax,DWORD PTR [ebp-0x22f4fc00]
  433822:	dec    ecx
  433823:	push   esi
  433824:	cmp    al,0xff
  433826:	mov    ebp,0x84dcbb14
  43382b:	rol    BYTE PTR [edx],0xeb
  43382e:	popa   
  43382f:	add    BYTE PTR [edx-0x2],ah
  433832:	std    
  433833:	push   DWORD PTR [ecx]
  433835:	sub    BYTE PTR ds:0xea326ffb,ch
  43383b:	aas    
  43383c:	bound  ebp,QWORD PTR [ecx+0x31]
  43383f:	and    al,0x4e
  433841:	inc    ebx
  433842:	sbb    DWORD PTR [esi+eax*4+0xa],ebx
  433846:	push   edx
  433847:	rcr    cl,cl
  433849:	xchg   esi,eax
  43384a:	sub    BYTE PTR [ebx+eax*8],bl
  43384d:	pop    edx
  43384e:	fs inc esp
  433850:	bound  eax,QWORD PTR [edi]
  433852:	xchg   ebp,eax
  433853:	add    esp,DWORD PTR [ebx+0x2]
  433856:	(bad)  
  433857:	cli    
  433858:	rol    BYTE PTR [edx],cl
  43385a:	add    eax,0x35c86200
  43385f:	sti    
  433860:	dec    edi
  433861:	scas   al,BYTE PTR es:[edi]
  433862:	clc    
  433863:	aas    
  433864:	bound  edi,QWORD PTR [ecx+0x48]
  433867:	and    al,0x52
  433869:	or     esp,0xfffffffa
  43386c:	ins    DWORD PTR es:[edi],dx
  43386d:	jbe    0x433876
  43386f:	add    DWORD PTR [edx+0x2],esp
  433872:	push   esi
  433873:	add    BYTE PTR [esi+0x2],ah
  433876:	dec    BYTE PTR [edi-0x54]
  433879:	push   edi
  43387a:	clc    
  43387b:	ret    
	...
  433890:	push   esi
  433891:	ret    0x8904
  433894:	sahf   
  433895:	push   ds
  433896:	jmp    0x9e38:0xee16a686
  43389d:	fdivp  st(0),st
  43389f:	jae    0x433909
  4338a1:	(bad)  
  4338a2:	idiv   DWORD PTR [ebx-0x7901bd92]
  4338a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4338a9:	(bad)  
  4338aa:	hlt    
  4338ab:	addr16 loop 0x4338ab
  4338ae:	std    
  4338af:	call   DWORD PTR [edx+0x4ffb3748]
  4338b5:	repnz icebp 
  4338b7:	aas    
  4338b8:	bound  eax,QWORD PTR [ebx-0x26aa0637]
  4338be:	imul   edi,DWORD PTR [ebp+0x7ee7efdd],0x21
  4338c5:	mov    ch,0xf3
  4338c7:	fwait
  4338c8:	int3   
  4338c9:	fisub  WORD PTR [ecx+edx*4-0x3b]
  4338cd:	out    dx,eax
  4338ce:	out    0x9b,eax
  4338d0:	ins    DWORD PTR es:[edi],dx
  4338d1:	lods   eax,DWORD PTR gs:[esi]
  4338d3:	jle    0x4338ee
  4338d5:	mov    ch,0xd7
  4338d7:	ss adc al,dh
  4338da:	aam    0x3f
  4338dc:	dec    edi
  4338dd:	cdq    
  4338de:	out    0x7c,eax
  4338e0:	and    DWORD PTR [ebp-0x202a7705],esi
  4338e6:	imul   esp,DWORD PTR [ebp+ecx*4+0x2180e7ef],0xffffffb5
  4338ee:	pop    es
  4338ef:	xor    al,0x2d
  4338f1:	xchg   DWORD PTR [edx],edx
  4338f3:	rol    DWORD PTR [eax],cl
	...
  433905:	add    BYTE PTR [eax],al
  433907:	add    BYTE PTR [esi-0x7f],cl
  43390a:	fild   DWORD PTR [ebx+0x62]
  43390d:	push   esi
  43390e:	test   al,0x2
  433910:	fisub  WORD PTR [ebx-0x18]
  433913:	add    esp,DWORD PTR [edx-0x7d]
  433916:	out    0x3a,eax
  433918:	pop    ecx
  433919:	retfw  
  43391b:	pop    ss
  43391c:	dec    ecx
  43391d:	retw   
  43391f:	pop    ds
  433920:	mov    edx,0x620427d9
  433925:	out    dx,al
  433926:	repz daa 
  433928:	jb     0x433918
  43392a:	fsub   QWORD PTR [edi+0x56]
  43392d:	cdq    
  43392e:	out    0xde,eax
  433930:	mov    eax,0x1dfbe840
  433935:	out    dx,eax
  433936:	rol    DWORD PTR [edi],cl
  433938:	inc    ebp
  433939:	sbb    DWORD PTR [edi],edi
  43393b:	repz or BYTE PTR [esi+0x3],ah
  43393f:	hlt    
  433940:	mov    bl,0xee
  433942:	fadd   QWORD PTR [edi+0x57]
  433945:	cdq    
  433946:	out    0x86,eax
  433948:	in     eax,dx
  433949:	out    dx,al
  43394a:	add    BYTE PTR [ebp-0x21ff88cb],bh
  433950:	enter  0x512e,0x91
  433954:	(bad)  
  433955:	fld    DWORD PTR [eax]
  433957:	jmp    0x89572bf4
  43395c:	retf   0xae
  43395f:	add    ah,BYTE PTR [ecx]
  433961:	push   esi
  433962:	dec    esp
  433963:	icebp  
  433964:	pusha  
  433965:	sub    bh,BYTE PTR [esi+0x20b51d70]
  43396b:	out    0x0,al
	...
  43397d:	add    BYTE PTR [eax],al
  43397f:	add    al,cl
  433981:	sbb    eax,eax
  433983:	add    BYTE PTR [ecx+0x7e0d4561],dh
  433989:	ja     0x43398b
  43398b:	ins    BYTE PTR es:[edi],dx
  43398c:	sub    dh,BYTE PTR [ebp-0x215057dc]
  433992:	xchg   DWORD PTR ds:0x7250a93a,ebx
  433998:	mov    ebx,0x2a488931
  43399d:	fld    DWORD PTR [edi-0x1742c5eb]
  4339a3:	jb     0x4339c5
  4339a5:	fld    DWORD PTR [eax]
  4339a7:	xchg   edx,eax
  4339a8:	(bad)  
  4339aa:	xor    eax,DWORD PTR [ecx-0x69ff6a3f]
  4339b0:	push   ebp
  4339b1:	xchg   esi,eax
  4339b2:	adc    ebp,DWORD PTR [ecx]
  4339b4:	pop    esi
  4339b5:	repnz xor ebx,DWORD PTR [ebp-0x3f]
  4339b9:	xchg   ebp,eax
  4339ba:	add    BYTE PTR [esi+0x2d],bh
  4339bd:	or     cl,BYTE PTR [edi]
  4339bf:	sub    DWORD PTR [esi-0x42],esp
  4339c2:	ror    BYTE PTR [esi],0x70
  4339c5:	xchg   BYTE PTR [ebp+0x52f4d4c],al
  4339cb:	jmp    0x6b30901c
  4339d0:	add    bh,BYTE PTR [edx-0xe]
  4339d3:	in     al,0x21
  4339d5:	test   BYTE PTR [eax+eax*1+0xb],al
  4339d9:	(bad)  
  4339da:	je     0x433a09
  4339dc:	xchg   ebx,eax
  4339dd:	jecxz  0x4339c0
  4339df:	push   DWORD PTR [ecx+eiz*2]
  4339e2:	mov    edx,0x74
	...
  4339f7:	add    BYTE PTR [edi-0x71],bl
  4339fa:	add    BYTE PTR [ebp-0x724781e2],cl
  433a00:	adc    dl,cl
  433a02:	daa    
  433a03:	call   0x3a4c4a
  433a08:	push   esp
  433a09:	xchg   BYTE PTR [eax],dl
  433a0b:	lea    ecx,[esi]
  433a0d:	jle    0x433a05
  433a0f:	jne    0x4339d8
  433a11:	or     BYTE PTR [ebp+0x8],dh
  433a14:	retf   
  433a15:	or     BYTE PTR ds:0x998f10,dl
  433a1b:	jmp    0x4339b1
  433a1d:	or     BYTE PTR [ebp+0x10],dh
  433a20:	mov    ah,0x86
  433a22:	or     al,0xff
  433a24:	cs in  eax,dx
  433a26:	not    BYTE PTR ds:0x39e603
  433a2c:	mov    dl,0x13
  433a2e:	push   es
  433a2f:	add    BYTE PTR [ebp+0x3f5ac0d6],ch
  433a35:	aad    0x4
  433a37:	je     0x4339bd
  433a39:	adc    DWORD PTR [ebp+0x7e0a04ea],edi
  433a3f:	shr    BYTE PTR [edi-0x21],0x29
  433a43:	sar    BYTE PTR [ebx+0x13],0xfe
  433a47:	call   esp
  433a49:	mov    bl,0x44
  433a4b:	adc    al,0x8b
  433a4d:	aad    0x53
  433a4f:	mov    esp,edi
  433a51:	adc    al,BYTE PTR ds:0xa151c0
  433a57:	add    al,0x4d
  433a59:	outs   dx,BYTE PTR ds:[esi]
  433a5a:	je     0x433a68
	...
  433a70:	aas    
  433a71:	mov    eax,0x9b198e8
  433a76:	test   DWORD PTR [edx+eiz*2+0x491851c2],0xa66074c5
  433a81:	add    dl,BYTE PTR [ebx+0x10]
  433a84:	cmc    
  433a85:	and    eax,0x129786f2
  433a8a:	jge    0x433ad8
  433a8c:	pop    edx
  433a8d:	call   0xfdc:0xb3ddfc6a
  433a94:	aad    0x45
  433a96:	repnz cli 
  433a98:	push   edi
  433a99:	repnz aaa 
  433a9b:	sti    
  433a9c:	dec    edi
  433a9d:	cli    
  433a9e:	rcl    BYTE PTR [esi+edx*1],1
  433aa1:	push   cs
  433aa2:	add    BYTE PTR ds:[ecx*2+0x4d620fc4],dl
  433aaa:	jge    0x433a97
  433aac:	lods   al,BYTE PTR ds:[esi]
  433aad:	cmc    
  433aae:	mov    ebp,0x2022655
  433ab3:	push   edx
  433ab4:	jmp    0x43b73b3e
  433ab9:	sbb    ch,BYTE PTR [edi]
  433abb:	out    0x85,al
  433abd:	sbb    ecx,DWORD PTR [ecx+0x6f9f6bf]
  433ac3:	xor    eax,0x48a1d2
  433ac8:	not    DWORD PTR [ecx]
  433aca:	retf   
  433acb:	je     0x433b1b
  433acd:	ja     0x433b06
  433acf:	adc    cl,ch
  433ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433ad2:	cld    
  433ad3:	out    0x0,eax
	...
  433ae5:	add    BYTE PTR [eax],al
  433ae7:	add    BYTE PTR [ebp+0x39faca4d],ch
  433aed:	repnz retf 0x6e74
  433af1:	pop    ebx
  433af2:	pop    eax
  433af3:	adc    BYTE PTR [ebx+edx*2+0x5350858],dl
  433afa:	cmp    dl,BYTE PTR [edx+eiz*4]
  433afd:	add    ch,BYTE PTR [ebx*2+0x54fe1220]
  433b04:	jmp    0x5f198ee1
  433b09:	sbb    DWORD PTR [esi-0x462a9db9],edi
  433b0f:	jp     0x433a9f
  433b11:	fst    st(3)
  433b13:	and    al,0xa
  433b15:	fisttp QWORD PTR [ebp-0x31]
  433b18:	clc    
  433b19:	push   esp
  433b1a:	sub    BYTE PTR [eax+0x4a],bl
  433b1d:	mov    al,0xfc
  433b1f:	jae    0x433aa3
  433b21:	xchg   ebp,eax
  433b22:	out    0x58,eax
  433b24:	jb     0x433b12
  433b26:	pushf  
  433b27:	neg    esp
  433b29:	test   edi,esi
  433b2b:	jp     0x433b4b
  433b2d:	loope  0x433b2e
  433b2f:	hlt    
  433b30:	(bad)  
  433b31:	jmp    0x433b3d
  433b33:	fld    TBYTE PTR [ebp-0x14]
  433b36:	jl     0x433b2f
  433b38:	mov    eax,0xa935d765
  433b3d:	gs (bad) 
  433b40:	dec    esi
  433b41:	mov    esp,edx
  433b43:	inc    ebx
  433b44:	bound  ecx,QWORD PTR [ebx-0x269a3dbc]
  433b4a:	xor    al,0x7b
	...
  433b60:	jns    0x433b44
  433b62:	in     al,dx
  433b63:	ret    
  433b64:	das    
  433b65:	xchg   ebp,eax
  433b66:	out    0x7,eax
  433b68:	adc    BYTE PTR [eax+0x3d],ah
  433b6b:	add    dh,ch
  433b6d:	mov    ecx,0xeb7ac5cf
  433b72:	mov    dl,0x87
  433b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433b75:	fs iret 
  433b77:	or     dl,BYTE PTR [edi+0x62480949]
  433b7d:	fs test esi,0x385ec5d6
  433b84:	jb     0x433be4
  433b86:	sbb    eax,0x841f45fc
  433b8b:	into   
  433b8c:	cmp    bh,bh
  433b8e:	xlat   BYTE PTR ds:[ebx]
  433b8f:	into   
  433b90:	mov    dh,0xc5
  433b92:	add    BYTE PTR [esi-0x76],dh
  433b95:	leave  
  433b96:	push   edx
  433b97:	outs   dx,BYTE PTR ds:[esi]
  433b98:	mov    edx,0x65fcf9e1
  433b9d:	lds    eax,FWORD PTR [eax-0x17]
  433ba0:	aas    
  433ba1:	mov    WORD PTR [esi-0x7a7b9e07],?
  433ba7:	cmp    eax,0xa3c0d617
  433bac:	popf   
  433bad:	fld    DWORD PTR [edi+edx*4]
  433bb0:	push   0x3ebd1065
  433bb5:	add    DWORD PTR [ecx-0x7b1053c0],eax
  433bbb:	sub    DWORD PTR ds:0x51d435d1,ebp
  433bc1:	jns    0x433c07
  433bc3:	jmp    0x433bc8
	...
  433bd8:	sub    cl,cl
  433bda:	stc    
  433bdb:	xchg   esp,eax
  433bdc:	leave  
  433bdd:	push   ebx
  433bde:	push   esp
  433bdf:	fnstsw WORD PTR [eax]
  433be1:	popf   
  433be2:	or     BYTE PTR [ecx],dl
  433be4:	(bad)  
  433be6:	stc    
  433be7:	test   BYTE PTR [ebx-0x768b0625],0xef
  433bee:	jae    0x433bed
  433bf0:	dec    edi
  433bf1:	out    dx,al
  433bf2:	jae    0x433be1
  433bf4:	sahf   
  433bf5:	gs or  dh,dl
  433bf8:	(bad)  
  433bf9:	dec    BYTE PTR ds:0x5b8f6629
  433bff:	stos   DWORD PTR es:[edi],eax
  433c00:	jp     0x433bec
  433c02:	push   esp
  433c03:	jb     0x433b87
  433c05:	call   0x957be50d
  433c0a:	add    ch,ah
  433c0c:	xchg   edi,eax
  433c0d:	push   edx
  433c0e:	je     0x433c09
  433c10:	lods   eax,DWORD PTR ds:[esi]
  433c11:	mov    eax,0xef28d6e8
  433c16:	stc    
  433c17:	ins    DWORD PTR es:[edi],dx
  433c18:	push   ds
  433c19:	data16 sbb dl,dl
  433c1c:	push   esp
  433c1d:	dec    ecx
  433c1e:	pusha  
  433c1f:	add    BYTE PTR [edi-0x53ef8c2b],al
  433c25:	sbb    BYTE PTR [eax],0x8b
  433c28:	inc    esi
  433c29:	icebp  
  433c2a:	or     BYTE PTR [ebp+0x3],0xe
  433c2e:	ss cld 
  433c30:	jl     0x433c4e
  433c32:	jecxz  0x433c47
  433c34:	lods   al,BYTE PTR ds:[esi]
  433c35:	sbb    BYTE PTR [eax],0xff
  433c38:	es loop 0x433c8a
  433c3b:	inc    DWORD PTR [eax]
	...
  433c4d:	add    BYTE PTR [eax],al
  433c4f:	add    BYTE PTR [esi],dl
  433c51:	jmp    0x5015:0x1cf375f6
  433c58:	pop    ss
  433c59:	xchg   esi,eax
  433c5a:	add    BYTE PTR [esi-0x32],bl
  433c5d:	pop    ss
  433c5e:	push   cs
  433c5f:	add    dh,dh
  433c61:	jo     0x433c48
  433c63:	test   dh,0x15
  433c66:	push   esp
  433c67:	inc    esp
  433c68:	mov    ebx,0xe68b4ed1
  433c6d:	jmp    0xba65ddf
  433c72:	loop   0x433c73
  433c74:	pop    esp
  433c75:	popa   
  433c76:	mov    edx,0x33e0c374
  433c7b:	nop
  433c7c:	ficom  DWORD PTR [ecx+0x1cbb7500]
  433c82:	jne    0x433c98
  433c84:	adc    BYTE PTR [ebx-0x12c174f0],ah
  433c8a:	loope  0x433c7f
  433c8c:	mov    al,0x1c
  433c8e:	imul   ebx
  433c90:	jnp    0x433cae
  433c92:	jne    0x433ca8
  433c94:	pushf  
  433c95:	adc    BYTE PTR [eax],0x56
  433c98:	lods   al,BYTE PTR ds:[esi]
  433c99:	or     BYTE PTR [eax],0xff
  433c9c:	xchg   BYTE PTR [ebp-0x48b4bfec],ch
  433ca2:	pop    ebx
  433ca3:	ret    0xdd5b
  433ca6:	push   ebx
  433ca7:	mov    ebx,edi
  433ca9:	push   cs
  433caa:	add    eax,0x48ac62c0
  433caf:	add    BYTE PTR [esi-0x50],ah
  433cb2:	ja     0x433d28
	...
  433cc8:	data16 out 0x1e,al
  433ccb:	call   0xfb1087ca
  433cd0:	fidiv  WORD PTR [edx]
  433cd2:	push   edx
  433cd3:	sbb    BYTE PTR [ecx+0x2d],bl
  433cd6:	outs   dx,BYTE PTR ds:[esi]
  433cd7:	pusha  
  433cd8:	sahf   
  433cd9:	repnz push edx
  433cdb:	adc    BYTE PTR ds:0xaf86f20e,cl
  433ce1:	loop   0x433d5b
  433ce3:	dec    esp
  433ce4:	push   0xffffff9a
  433ce6:	call   0xed0f:0xd89ff5f6
  433ced:	sub    eax,0x26ffaf2
  433cf2:	xor    al,0xfb
  433cf4:	push   edi
  433cf5:	cli    
  433cf6:	int3   
  433cf7:	adc    al,0x8e
  433cf9:	out    0x3d,al
  433cfb:	add    BYTE PTR [eiz*1+0x25620fc0],ch
  433d02:	jns    0x433cef
  433d04:	mov    ah,0xfd
  433d06:	mov    ebp,0x1f21e55
  433d0b:	push   edx
  433d0c:	fldcw  WORD PTR [ebp-0x13]
  433d0f:	jae    0x433c94
  433d11:	ficomp DWORD PTR [edi-0x18]
  433d14:	popf   
  433d15:	test   DWORD PTR [edx+0x9da0ebf],0x4091f235
  433d1f:	add    BYTE PTR [edi],cl
  433d21:	loop   0x433ce9
  433d23:	je     0x433d7f
  433d25:	jnp    0x433d56
  433d27:	adc    al,0xe9
  433d29:	lods   eax,DWORD PTR ds:[esi]
  433d2a:	clc    
  433d2b:	out    0x0,eax
	...
  433d3d:	add    BYTE PTR [eax],al
  433d3f:	add    BYTE PTR ds:0x79fac61b,al
  433d45:	add    eax,edi
  433d47:	je     0x433dc3
  433d49:	aaa    
  433d4a:	push   eax
  433d4b:	adc    al,0xac
  433d4d:	fldenv [edx+0x14e85e51]
  433d53:	cld    
  433d54:	dec    eax
  433d55:	into   
  433d56:	dec    edi
  433d57:	lock jge 0x433d33
  433d5a:	sub    DWORD PTR [ecx],ebp
  433d5c:	hlt    
  433d5d:	int3   
  433d5e:	out    0x30,eax
  433d60:	in     eax,0xf4
  433d62:	jno    0x433d65
  433d64:	and    al,BYTE PTR [ebx-0x7099fbd5]
  433d6a:	pop    esi
  433d6b:	push   ecx
  433d6c:	jb     0x433ddb
  433d6e:	or     ah,bl
  433d70:	push   0xfffffff1
  433d72:	pop    edx
  433d73:	retf   
  433d74:	loope  0x433d8e
  433d76:	fsub   st(3),st
  433d78:	xor    al,0xae
  433d7a:	ja     0x433de1
  433d7c:	sahf   
  433d7d:	fnstcw WORD PTR [ebx+esi*8+0x7edf6de8]
  433d84:	mov    cs,ebp
  433d86:	pop    esi
  433d87:	cmp    DWORD PTR [esi-0xf],ebp
  433d8a:	leave  
  433d8b:	into   
  433d8c:	fsub   st,st(7)
  433d8e:	push   cs
  433d8f:	test   eax,0x4ecaff6d
  433d95:	int    0xb9
  433d97:	retf   0xd536
  433d9a:	or     dl,BYTE PTR [ecx+0x6a]
  433d9d:	call   0x9995017e
  433da2:	out    0x29,eax
	...
  433db8:	pop    es
  433db9:	sbb    ebx,esp
  433dbb:	add    edx,DWORD PTR [ebp-0x2a]
  433dbe:	xchg   ebx,eax
  433dbf:	out    dx,eax
  433dc0:	push   ebp
  433dc1:	fstp   DWORD PTR [edx+eax*1-0x36]
  433dc5:	adc    cl,BYTE PTR [ecx+0xf1c6245]
  433dcb:	stc    
  433dcc:	sub    ebp,ecx
  433dce:	daa    
  433dcf:	add    al,0xef
  433dd1:	fidivr WORD PTR [edi-0xd]
  433dd4:	iret   
  433dd5:	call   0x2100:0xd62cc6e7
  433ddc:	push   edx
  433ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433dde:	add    BYTE PTR [eax+eiz*2],dh
  433de1:	and    DWORD PTR [ebp+0x4a],esi
  433de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433de5:	fnstcw WORD PTR [ebp+0xbb021da]
  433deb:	fisttp QWORD PTR [ebp-0x59]
  433dee:	add    BYTE PTR [ebx-0x19],dl
  433df1:	inc    edi
  433df2:	aas    
  433df3:	jmp    0xab01d920
  433df8:	jb     0x433e58
  433dfa:	in     eax,dx
  433dfb:	push   0x35
  433dfd:	mov    edi,0x8d21e4f2
  433e02:	inc    esp
  433e03:	jmp    0xd4c8c715
  433e08:	or     DWORD PTR [ebx+0x2a],ebp
  433e0b:	inc    ecx
  433e0c:	ja     0x433e09
  433e0e:	stc    
  433e0f:	dec    esi
  433e10:	jne    0x433e38
  433e12:	jne    0x433e20
  433e14:	jecxz  0x433dfe
  433e16:	je     0x433e20
  433e18:	gs nop
  433e1a:	add    al,0x41
	...
  433e30:	dec    edx
  433e31:	jecxz  0x433e2c
  433e33:	cs loop 0x433e5c
  433e36:	jne    0x433e34
  433e38:	das    
  433e39:	mov    cl,0x52
  433e3b:	ins    BYTE PTR es:[edi],dx
  433e3c:	mov    al,BYTE PTR [ecx]
  433e3e:	push   eax
  433e3f:	add    ebp,edx
  433e41:	push   esi
  433e42:	cli    
  433e43:	push   cs
  433e44:	ss popf 
  433e46:	fdiv   QWORD PTR [edx+eiz*1+0x1]
  433e4a:	push   ecx
  433e4b:	adc    bl,BYTE PTR [esi-0x75]
  433e4e:	stc    
  433e4f:	fmul   QWORD PTR [ebp-0x34]
  433e52:	inc    eax
  433e53:	jmp    0xee024ea3
  433e58:	popa   
  433e59:	mov    WORD PTR [ebp+0x28f2dfcd],es
  433e5f:	fistp  QWORD PTR [ebp+0x26]
  433e62:	push   edi
  433e63:	and    eax,0x52dd5e
  433e68:	lock xchg ebp,eax
  433e6a:	or     BYTE PTR [ebp+edx*2+0x5],dh
  433e6e:	inc    ebp
  433e6f:	out    0x14,eax
  433e71:	adc    BYTE PTR [esi-0x40],bh
  433e74:	pop    esi
  433e76:	xor    esi,0x6f
  433e79:	mov    edx,0x23f4e81
  433e7e:	dec    edx
  433e7f:	call   esp
  433e81:	jne    0x64398e47
  433e87:	sub    BYTE PTR [ebp+0x6e],cl
  433e8a:	dec    esp
  433e8b:	fmul   DWORD PTR [edx+0x5]
  433e8e:	push   edi
  433e8f:	nop
  433e90:	xchg   esp,eax
  433e91:	adc    BYTE PTR [ecx+0x45],cl
	...
  433ea7:	add    bh,ah
  433ea9:	ins    DWORD PTR es:[edi],dx
  433eaa:	inc    esp
  433eab:	fmul   st,st(3)
  433ead:	add    al,0x1
  433eaf:	push   esi
  433eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433eb1:	imul   cl
  433eb3:	adc    ecx,ebx
  433eb5:	fst    DWORD PTR [esi-0x37]
  433eb8:	dec    ecx
  433eb9:	fld    DWORD PTR [eax]
  433ebb:	push   ebp
  433ebc:	jo     0x433ebf
  433ebe:	jnp    0x433eac
  433ec0:	jmp    0x433ec9
  433ec2:	add    eax,0xa5f1c0
  433ec7:	add    al,0xed
  433ec9:	fs je  0x433ed4
  433ecc:	out    dx,eax
  433ecd:	int3   
  433ece:	call   0xf7539ccb
  433ed3:	test   BYTE PTR [ebx+0x4d852289],cl
  433ed9:	mov    DWORD PTR [esi],ebx
  433edb:	and    DWORD PTR [ebp+0x302173c9],0xffffffa3
  433ee2:	or     al,ch
  433ee4:	xchg   ebp,eax
  433ee5:	maskmovq mm7,mm7
  433ee8:	(bad)  
  433ee9:	sbb    al,0x6e
  433eeb:	adc    eax,0x8d4ecd31
  433ef0:	ss sub eax,0xfd62e851
  433ef6:	ins    DWORD PTR es:[edi],dx
  433ef7:	cli    
  433ef8:	jne    0x433f72
  433efa:	cmp    bl,al
  433efc:	fbstp  TBYTE PTR [esp+esi*4+0x2ff0794f]
  433f03:	sti    
  433f04:	ja     0x433ea4
  433f06:	lock aas 
  433f08:	(bad)  
  433f09:	aam    0xb5
  433f0b:	mov    ebp,0x0
	...
  433f20:	data16 repnz sub al,BYTE PTR [edi+0x2fd17036]
  433f28:	xor    al,0xf6
  433f2a:	mov    ebp,0xf9f29e55
  433f2f:	push   ecx
  433f30:	fxam   
  433f32:	cmc    
  433f33:	jae    0x433fa6
  433f35:	dec    edx
  433f36:	mov    al,ds:0x796c1de1
  433f3b:	mov    edi,0xf17b188e
  433f40:	xchg   esi,eax
  433f41:	aam    0x83
  433f43:	cmp    DWORD PTR [edx+0xd],edx
  433f46:	pop    ds
  433f47:	xchg   DWORD PTR [edx+edi*8-0x6c0b542b],ebp
  433f4e:	enter  0x2284,0x27
  433f52:	jmp    0x433fb9
  433f54:	xor    cl,BYTE PTR [ebx+esi*2+0x4c]
  433f58:	mov    dl,0x41
  433f5a:	(bad)  
  433f5b:	mov    dh,0xe5
  433f5d:	mov    bl,0xc8
  433f5f:	mov    BYTE PTR [edi],ah
  433f61:	call   0xdd:0x22b24472
  433f68:	adc    al,0xcb
  433f6a:	jmp    0x9b59:0xfe324f3b
  433f71:	mov    al,0xf9
  433f73:	call   DWORD PTR [edx]
  433f75:	aas    
  433f76:	xor    BYTE PTR [edi],ch
  433f78:	mov    ecx,0x4cffbe4
  433f7d:	inc    BYTE PTR ds:[eax]
  433f80:	xor    eax,0xd56ed9
	...
  433f95:	add    BYTE PTR [eax],al
  433f97:	add    BYTE PTR [esi],cl
  433f99:	mov    ah,0x9a
  433f9b:	js     0x433fa8
  433f9d:	popf   
  433f9e:	out    0x2e,eax
  433fa0:	jns    0x433f70
  433fa2:	(bad)  
  433fa3:	repnz sub eax,0xfbb487d9
  433fa9:	pushf  
  433faa:	out    0x9b,eax
  433fac:	bound  ebp,QWORD PTR [esi-0x2a]
  433faf:	mul    DWORD PTR [edx+0x52]
  433fb2:	int    0x83
  433fb4:	mov    ebx,0x667ce79d
  433fb9:	or     eax,0x3762400a
  433fbe:	mov    eax,0x32d99e56
  433fc3:	(bad)  
  433fc4:	push   esi
  433fc5:	add    eax,0xb06243d6
  433fca:	jbe    0x43401c
  433fcc:	push   edi
  433fcd:	xchg   ebx,eax
  433fce:	and    DWORD PTR [eax+0x4a],edx
  433fd1:	xchg   ebx,eax
  433fd2:	repz out 0x9b,eax
  433fd5:	ins    DWORD PTR es:[edi],dx
  433fd6:	div    DWORD PTR ds:0x4305e59
  433fdc:	(bad)  
  433fdd:	fst    DWORD PTR [edx-0x1866ac3c]
  433fe3:	pop    ecx
  433fe4:	inc    esi
  433fe5:	lock add eax,0xa7caf587
  433feb:	add    eax,DWORD PTR [esi+edi*4+0x3e]
  433fef:	in     eax,dx
  433ff0:	sbb    cl,bh
  433ff2:	rol    DWORD PTR [ebx+0x62],1
  433ff5:	outs   dx,DWORD PTR ds:[esi]
  433ff6:	iret   
  433ff7:	ficom  DWORD PTR [ebp+0x24]
  433ffa:	call   0x4340ed
	...
  43400f:	add    BYTE PTR [ebp-0x27],bh
  434012:	jge    0x433ffb
  434014:	mov    esp,0x53b44adb
  434019:	cdq    
  43401a:	out    0x59,eax
  43401c:	dec    esp
  43401d:	cmp    ch,BYTE PTR [eax+0x56]
  434020:	fld    DWORD PTR es:[eax]
  434023:	xchg   edi,eax
  434024:	push   edx
  434025:	fs retf 
  434027:	out    dx,al
  434028:	loop   0x43404d
  43402a:	je     0x434041
  43402c:	lea    eax,es:[ebp+0x13e06629]
  434033:	inc    ebp
  434034:	jo     0x433fd9
  434036:	add    BYTE PTR [ecx+eiz*4+0x67],ah
  43403a:	sbb    BYTE PTR [ecx+0x4e],dl
  43403d:	dec    ecx
  43403e:	inc    ecx
  43403f:	jmp    0x19571ed5
  434044:	push   eax
  434045:	mov    ds:0xd0216400,eax
  43404a:	inc    esp
  43404b:	lods   al,BYTE PTR ds:[esi]
  43404c:	add    BYTE PTR [ebx+0x6a],ah
  43404f:	and    eax,0x4803fa66
  434054:	loope  0x4340c6
  434056:	inc    esp
  434057:	jmp    0xfd9f5cb4
  43405c:	addr16 pop esp
  43405e:	shl    ebp,0xa3
  434061:	push   esp
  434062:	dec    ebp
  434063:	int    0xd
  434065:	mov    cl,BYTE PTR [ebp+0x1]
  434068:	leavew 
  43406a:	add    cl,ch
  43406c:	xor    al,0xde
  43406e:	shl    BYTE PTR [ecx+eiz*1+0x6e],1
  434072:	dec    eax
  434073:	push   esi
	...
  434088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434089:	mov    ebp,0xbd35620c
  43408e:	sbb    al,0x83
  434090:	in     eax,0xd9
  434092:	add    cl,ch
  434094:	mov    ecx,0x9c374653
  434099:	pop    ebx
  43409a:	icebp  
  43409b:	cs sbb eax,0xd2260cbd
  4340a1:	sub    dl,BYTE PTR [ebx]
  4340a3:	test   eax,0x9cf35c61
  4340a8:	push   edi
  4340a9:	fidiv  WORD PTR [ebp+eax*8-0x47]
  4340ad:	fist   WORD PTR [ebx]
  4340af:	add    BYTE PTR [edi-0x19],al
  4340b2:	cmp    DWORD PTR [eax],eax
  4340b4:	pop    ebx
  4340b5:	fucom  st(1)
  4340b7:	sbb    cl,BYTE PTR [ebx+edx*4+0x2bfa1824]
  4340be:	cli    
  4340bf:	das    
  4340c0:	jnp    0x434098
  4340c2:	dec    ecx
  4340c3:	push   ebx
  4340c4:	xor    eax,0x2f15f5a8
  4340c9:	call   0x1d494107
  4340ce:	jecxz  0x4340a8
  4340d0:	imul   edx,DWORD PTR [esi],0xae805e57
  4340d6:	mov    edx,0x4fa74b08
  4340db:	push   ebx
  4340dc:	jbe    0x434091
  4340de:	dec    ebp
  4340df:	mov    edi,DWORD PTR [edi-0x47]
  4340e2:	sbb    al,0x6a
  4340e4:	jg     0x434146
  4340e6:	ror    DWORD PTR [ebx-0x7c4b26],cl
	...
  434100:	push   edi
  434101:	in     eax,0x5f
  434103:	cmp    DWORD PTR [ebx+edx*4],esi
  434106:	stc    
  434107:	add    ah,0xd6
  43410a:	xor    esi,0xfffffffc
  43410d:	popa   
  43410e:	fld    DWORD PTR [eax]
  434110:	sti    
  434111:	aad    0x81
  434113:	retf   
  434114:	mov    bl,0xfd
  434116:	inc    ebx
  434117:	(bad)  
  434118:	pushf  
  434119:	pusha  
  43411a:	loope  0x43409d
  43411c:	mov    ds,ecx
  43411e:	(bad)  
  43411f:	(bad)  
  434120:	sti    
  434121:	in     al,dx
  434122:	jp     0x4340ef
  434124:	sti    
  434125:	aad    0x0
  434127:	mov    ecx,DWORD PTR [ebp+eax*1+0x1c8d4ac3]
  43412e:	or     eax,0x42
  434131:	mov    eax,ds:0xe3a1024
  434136:	inc    BYTE PTR [eax]
  434138:	retf   
  434139:	aad    0x5
  43413b:	and    DWORD PTR [edx+0x7e],0x4
  43413f:	add    BYTE PTR [edx+0x7d],ah
  434142:	shl    DWORD PTR [edx+ebx*2+0x75],1
  434146:	mov    ch,0xa
  434148:	out    0x99,al
  43414a:	add    al,0x0
  43414c:	bound  esi,QWORD PTR [ebp-0x4b]
  43414f:	je     0x434189
  434151:	daa    
  434152:	shl    DWORD PTR [ebx+0x71],1
  434155:	ins    DWORD PTR es:[edi],dx
  434156:	stc    
  434157:	ins    BYTE PTR es:[edi],dx
  434158:	pusha  
  434159:	lock std 
  43415b:	call   DWORD PTR [edx]
  43415d:	lahf   
  43415e:	sub    bh,bl
  434160:	push   edi
  434161:	mov    al,ds:0x3fea
	...
  434176:	add    BYTE PTR [eax],al
  434178:	bound  ebp,QWORD PTR [edi-0x47]
  43417b:	or     esi,DWORD PTR [edi+ebx*1-0x4d8e2c15]
  434182:	add    al,0x87
  434184:	sbb    al,0x1b
  434186:	jp     0x4341cd
  434188:	inc    esp
  434189:	cmp    BYTE PTR [ebx+0x3],dh
  43418c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43418d:	dec    ebx
  43418e:	dec    eax
  43418f:	test   DWORD PTR [edi-0x41],eax
  434192:	sub    cl,BYTE PTR [ebp-0x222aa]
  434198:	(bad)
  43419d:	fadd   DWORD PTR ds:0x76687844
  4341a3:	push   ebx
  4341a4:	inc    esi
  4341a5:	push   es
  4341a6:	cmc    
  4341a7:	xchg   esp,eax
  4341a8:	sahf   
  4341a9:	into   
  4341aa:	call   0x40fe63dd
  4341af:	and    al,0x56
  4341b1:	imul   DWORD PTR [edx-0x41]
  4341b4:	popa   
  4341b5:	mov    cl,0x0
  4341b7:	lds    esp,FWORD PTR [edi]
  4341b9:	out    dx,al
  4341ba:	(bad)  
  4341bb:	jmp    DWORD PTR [edx+0x23]
  4341be:	ss aaa 
  4341c0:	rcr    DWORD PTR [esi],1
  4341c2:	jmp    0x3214:0xc548314d
  4341c9:	fyl2xp1 
  4341cb:	inc    ebx
  4341cc:	bound  edx,QWORD PTR [esp+ebp*4+0x1f]
  4341d0:	push   esi
  4341d1:	push   esp
  4341d2:	mov    esp,0x245c821f
  4341d7:	mul    DWORD PTR [edx+ebp*8+0x4767]
	...
  4341ee:	add    BYTE PTR [eax],al
  4341f0:	inc    esi
  4341f1:	mov    ebp,0x736b4fe7
  4341f6:	xchg   ebx,eax
  4341f7:	sub    eax,DWORD PTR [eax]
  4341f9:	push   edx
  4341fa:	loop   0x43417c
  4341fc:	mov    ds:0x2f0874db,eax
  434201:	(bad)  
  434203:	add    esp,DWORD PTR [edx-0x77]
  434206:	cmp    bl,BYTE PTR [edx+0x69]
  434209:	(bad)  
  43420a:	aaa    
  43420b:	sbb    ah,BYTE PTR [edx]
  43420d:	fldenv [esi-0x38]
  434210:	imul   eax,DWORD PTR [edi-0x33d1e646],0x16e50427
  43421a:	mov    edi,0x43197506
  43421f:	bound  ebx,QWORD PTR [edi-0xba2bf7c]
  434225:	aam    0xe7
  434227:	pop    ecx
  434228:	in     eax,0xe9
  43422a:	inc    dx
  43422c:	push   esi
  43422d:	fsincos 
  43422f:	or     al,0x19
  434231:	addr16 jmp 0x4341f6
  434234:	outs   dx,BYTE PTR ds:[esi]
  434235:	mov    edi,edx
  434237:	inc    ebx
  434238:	bound  edx,QWORD PTR [edx+ebx*4+0x62]
  43423c:	sti    
  43423d:	dec    ecx
  43423e:	push   es
  43423f:	add    al,0x62
  434241:	mov    BYTE PTR [esi-0x43],ch
  434244:	std    
  434245:	fmul   QWORD PTR [eax]
  434247:	add    al,0x62
  434249:	push   ebp
  43424a:	sub    BYTE PTR [eax],bh
  43424c:	sub    eax,0x6e3b7487
  434251:	pop    esp
  434252:	cli    
  434253:	add    eax,DWORD PTR [eax]
	...
  434265:	add    BYTE PTR [eax],al
  434267:	add    BYTE PTR [esi-0x2f],cl
  43426a:	add    BYTE PTR [esi],dh
  43426c:	enter  0x13e2,0x99
  434270:	jno    0x43420b
  434272:	add    BYTE PTR [edx+0x22],ch
  434275:	mov    ch,0xc
  434277:	jmp    0x8395fbe9
  43427c:	popa   
  43427d:	ja     0x43427f
  43427f:	or     DWORD PTR [ebp-0x26],0x6ba0e900
  434286:	and    al,0xdd
  434288:	mov    al,ds:0x1ddcf9aa
  43428d:	leave  
  43428e:	inc    eax
  43428f:	jmp    0xefb7626e
  434294:	xchg   cl,bl
  434296:	cs test eax,0xe8a9ddc4
  43429c:	add    eax,DWORD PTR [esi+edi*4-0x7a799e1f]
  4342a3:	aad    0xb6
  4342a5:	mov    BYTE PTR [ebp+0x40],bh
  4342a8:	jb     0x434283
  4342aa:	shr    DWORD PTR [edx+eiz*1],0xdb
  4342ae:	add    cl,ch
  4342b0:	popa   
  4342b1:	and    dl,BYTE PTR gs:[ebx]
  4342b4:	dec    sp
  4342b6:	inc    esp
  4342b7:	popf   
  4342b8:	xchg   ecx,eax
  4342b9:	dec    esp
  4342ba:	inc    esp
  4342bb:	xchg   ecx,eax
  4342bc:	xchg   ecx,eax
  4342bd:	ja     0x4342c6
  4342bf:	mov    gs,WORD PTR [esi-0x33]
  4342c2:	stc    
  4342c3:	fsubr  QWORD PTR [ecx-0x1516bf37]
  4342c9:	push   ds
  4342ca:	jne    0x4342b0
	...
  4342e0:	in     al,0x5d
  4342e2:	cld    
  4342e3:	in     eax,0x4a
  4342e5:	fiadd  DWORD PTR [ebp+0x236b9ac]
  4342eb:	aad    0x5f
  4342ed:	scas   al,BYTE PTR es:[edi]
  4342ee:	shl    BYTE PTR [eax-0x1c],0xfc
  4342f2:	add    edx,ebp
  4342f4:	pop    ds
  4342f5:	sbb    bh,cl
  4342f7:	add    al,cl
  4342f9:	or     eax,0x4fee53bb
  4342fe:	jmp    0xf75e8ceb
  434303:	inc    DWORD PTR [eax+0x7e]
  434306:	and    al,0x10
  434308:	rol    BYTE PTR [edx],0x6e
  43430b:	add    al,0x99
  43430d:	sbb    ah,bl
  43430f:	push   esi
  434310:	inc    eax
  434311:	mov    fs,WORD PTR [esp+ecx*1]
  434314:	in     eax,dx
  434315:	dec    edi
  434316:	retf   
  434317:	call   0x3a9143
  43431c:	adc    BYTE PTR [edx],ch
  43431e:	test   esi,esi
  434320:	push   cs
  434321:	(bad)  
  434322:	sub    al,al
  434324:	pusha  
  434325:	fisttp DWORD PTR [ebx-0x312b7bad]
  43432b:	push   edi
  43432c:	lock sbb dh,BYTE PTR [ebx]
  43432f:	repnz or bl,cl
  434332:	add    BYTE PTR [edx],0x1
  434335:	enter  0x788,0x8c
  434339:	dec    ebp
  43433a:	add    al,0x4a
  43433c:	pusha  
  43433d:	pop    ds
  43433e:	ins    BYTE PTR es:[edi],dx
  43433f:	repnz mov eax,ds:0x62d5
	...
  434355:	add    BYTE PTR [eax],al
  434357:	add    ah,dh
  434359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43435a:	or     al,0x53
  43435c:	jge    0x434376
  43435e:	jne    0x434364
  434360:	aam    0xc5
  434362:	inc    esp
  434363:	adc    BYTE PTR [ebx-0x2b],bh
  434366:	mov    ebx,DWORD PTR [eax-0x2c]
  434369:	pop    ds
  43436a:	rcr    DWORD PTR [edx],cl
  43436c:	ror    BYTE PTR [ebx-0x38],0xfe
  434370:	enter  0x1e2c,0x8c
  434374:	xchg   esp,eax
  434375:	sbb    BYTE PTR [ebx+eax*8+0x5b5b7b54],al
  43437c:	dec    ecx
  43437d:	leave  
  43437e:	add    BYTE PTR [ebx+0xd6e1842],al
  434384:	bound  esi,QWORD PTR [ebx-0xb]
  434387:	push   DWORD PTR [ecx-0x8]
  43438a:	shl    BYTE PTR [eax],0xdd
  43438d:	cld    
  43438e:	popa   
  43438f:	or     eax,0x54c4f022
  434394:	fst    DWORD PTR [ebx+0x7acae383]
  43439a:	inc    ecx
  43439b:	sbb    cl,ah
  43439d:	ret    
  43439e:	adc    BYTE PTR ds:0xfb3fbeb5,ah
  4343a4:	adc    al,0x5a
  4343a6:	dec    BYTE PTR [edi-0x5b]
  4343a9:	inc    esp
  4343aa:	adc    al,BYTE PTR [edi-0x501b66d]
  4343b0:	sldt   ecx
  4343b3:	je     0x434413
  4343b5:	out    0x32,eax
  4343b7:	or     BYTE PTR [ebp+0xd9204],al
	...
  4343cd:	add    BYTE PTR [eax],al
  4343cf:	add    BYTE PTR [edx],ah
  4343d1:	lock test bh,dh
  4343d4:	jne    0x43435a
  4343d6:	or     BYTE PTR [esi],ch
  4343d8:	mov    ds:0x1ff2e91a,al
  4343dd:	call   0xf32643df
  4343e2:	xchg   BYTE PTR [ecx],al
  4343e4:	into   
  4343e5:	clc    
  4343e6:	test   BYTE PTR [ebx-0x7a],cl
  4343e9:	cli    
  4343ea:	sar    BYTE PTR [esi-0x6a],0xd6
  4343ee:	adc    bl,bh
  4343f0:	out    dx,eax
  4343f1:	scas   al,BYTE PTR es:[edi]
  4343f2:	call   0x54e5d5fe
  4343f7:	bound  si,DWORD PTR [edi-0x31]
  4343fb:	out    0x39,eax
  4343fd:	icebp  
  4343fe:	std    
  4343ff:	call   edx
  434401:	icebp  
  434402:	pop    edi
  434403:	xchg   edi,edi
  434405:	mov    ebp,0xbd6213c2
  43440a:	mov    ebp,ebx
  43440c:	mov    bl,0xc1
  43440e:	mov    DWORD PTR [edx+edi*8-0x27],eax
  434412:	mov    bh,0xc0
  434414:	xor    bl,ah
  434416:	hlt    
  434417:	jg     0x434478
  434419:	cdq    
  43441a:	out    0x86,eax
  43441c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43441d:	data16 jecxz 0x434415
  434420:	sbb    eax,0x268cd7f1
  434425:	shr    DWORD PTR [esi+0x46],1
  434428:	retf   0xe952
  43442b:	mov    WORD PTR [esi],ds
  43442d:	frstor [eax+0x42]
  434430:	sub    cx,bp
  434433:	retf   0x0
	...
  434446:	add    BYTE PTR [eax],al
  434448:	not    ebp
  43444a:	out    0x56,eax
  43444c:	in     eax,0xed
  43444e:	scas   ax,WORD PTR es:[edi]
  434450:	pop    ecx
  434451:	dec    esi
  434452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434453:	mov    bh,0x7
  434455:	ficom  DWORD PTR [edi-0x18909dd3]
  43445b:	rcl    BYTE PTR [edx-0x24],0xdc
  43445f:	imul   esi,DWORD PTR [edx-0x67],0xffffffe7
  434463:	xchg   BYTE PTR [ebp-0x4a0e149a],bh
  434469:	lock test DWORD PTR [edx+0x515ed116],0x8ade526e
  434474:	scas   al,BYTE PTR es:[edi]
  434475:	loope  0x4344e7
  434477:	dec    edx
  434478:	pop    esi
  434479:	sub    ecx,ebp
  43447b:	int3   
  43447c:	pmullw mm4,mm7
  43447f:	mov    esi,0x29dbb5d1
  434484:	(bad)  
  434485:	fcomp  QWORD PTR [ebx]
  434487:	call   0xe85720f1
  43448c:	pop    ebp
  43448d:	(bad)  
  43448f:	mov    esi,0x43f9314e
  434494:	(bad)  
  434495:	in     al,0x9f
  434497:	sbb    esp,DWORD PTR [edx]
  434499:	in     al,0x9f
  43449b:	ret    0xd959
  43449e:	add    BYTE PTR [ecx+ebx*8],bl
  4344a1:	out    dx,eax
  4344a2:	dec    edi
  4344a3:	add    esp,DWORD PTR [esi+0x4e]
  4344a6:	inc    esp
  4344a7:	gs mov fs,eax
  4344aa:	jae    0x434499
	...
  4344c0:	lods   al,BYTE PTR ds:[esi]
  4344c1:	or     BYTE PTR fs:[esi-0x11],dl
  4344c5:	ficom  WORD PTR [ebx]
  4344c7:	xchg   ecx,eax
  4344c8:	jo     0x434463
  4344ca:	add    BYTE PTR [edx+0x33],dh
  4344cd:	fnstsw WORD PTR [ebp+0x33]
  4344d0:	or     eax,0x1de6c155
  4344d5:	adc    eax,DWORD PTR [esi+0x91daf28]
  4344db:	jmp    0x1e70ccef
  4344e0:	hlt    
  4344e1:	aam    0xc8
  4344e3:	xchg   DWORD PTR ds:0xd761ffd9,ebx
  4344e9:	xor    DWORD PTR fs:[edx-0x5a94afe8],ebx
  4344f0:	popa   
  4344f1:	mov    ecx,?
  4344f3:	fadd   st(1),st
  4344f5:	int    0x40
  4344f7:	jmp    0x2dae58fd
  4344fc:	pop    esi
  4344fd:	xor    DWORD PTR [eax],eax
  4344ff:	push   esp
  434500:	dec    edi
  434501:	int    0xff
  434503:	pop    edi
  434504:	bound  edx,QWORD PTR [ebp+0x6b]
  434507:	and    eax,0x713c5066
  43450c:	xchg   DWORD PTR [ebp+0xd627000],edx
  434512:	imul   ebp,DWORD PTR ds:0x3fc93b5e,0xffffffaa
  434519:	(bad)  [ebp-0x5a]
  43451c:	pop    edx
  43451d:	std    
  43451e:	push   cs
  43451f:	sub    DWORD PTR [esi-0x7e],esp
  434522:	lahf   
  434523:	popa   
	...
  434538:	ja     0x4344cf
  43453a:	add    BYTE PTR [ecx+eiz*1+0x66],ah
  43453e:	sub    BYTE PTR [eax],al
  434540:	jae    0x4344d3
  434542:	add    BYTE PTR [eax-0x5],0x1b
  434546:	adc    eax,0x97296c
  43454b:	test   ebx,ecx
  43454d:	mov    ds:0x46b36813,al
  434552:	cmp    al,BYTE PTR [eax]
  434554:	stos   DWORD PTR es:[edi],eax
  434555:	sbb    edx,DWORD PTR ds:0x96e950
  43455b:	mov    ds:0x44ac43,eax
  434560:	inc    esi
  434561:	push   ss
  434562:	jne    0x434568
  434564:	leave  
  434565:	push   ss
  434566:	jecxz  0x434579
  434568:	mov    eax,ds:0x6774f6ee
  43456d:	ror    DWORD PTR [ebp-0x1],0x95
  434571:	sbb    ecx,edx
  434573:	mul    DWORD PTR [ebx]
  434575:	mov    edi,0x7b73f7c0
  43457a:	push   esi
  43457b:	ret    0xd6bf
  43457e:	dec    esi
  43457f:	push   edi
  434580:	fcomp  DWORD PTR [ebx]
  434582:	lock add eax,0x44ac53
  434588:	jp     0x4345d9
  43458a:	icebp  
  43458b:	jne    0x434541
  43458d:	xchg   DWORD PTR [ecx+0x910d8c],esi
  434593:	push   ebx
  434594:	mov    edx,es
  434596:	loopne 0x4345aa
  434598:	cmp    edx,ebp
  43459a:	mov    al,ds:0xc8
	...
  4345af:	add    BYTE PTR [ebp+0x4aa80091],bl
  4345b5:	mov    ds:0x4f3a0c17,eax
  4345ba:	cmp    eax,0x919d84
  4345bf:	mov    DWORD PTR [esi+0x4e],ecx
  4345c2:	push   0x3d4f4b44
  4345c7:	int3   
  4345c8:	pop    ebp
  4345c9:	xchg   ecx,eax
  4345ca:	add    BYTE PTR [edx+0x442b3862],ah
  4345d0:	bound  ebx,QWORD PTR [edi-0x1c9eb45]
  4345d6:	cmp    eax,0x8891a900
  4345db:	imul   ebx,DWORD PTR [esi+0x77bf82f0],0xe8442618
  4345e5:	das    
  4345e6:	(bad)  
  4345e7:	cli    
  4345e8:	push   edi
  4345e9:	or     al,0x10
  4345eb:	inc    eax
  4345ec:	bound  ebp,QWORD PTR [ebp-0x3c]
  4345ef:	jae    0x434668
  4345f1:	sbb    BYTE PTR [esi],ah
  4345f3:	nop
  4345f4:	and    dh,al
  4345f6:	dec    ebp
  4345f7:	sti    
  4345f8:	ja     0x43463a
  4345fa:	adc    BYTE PTR [eax+0x62],al
  4345fd:	dec    edi
  4345fe:	mov    DWORD PTR [ecx+0x26],ebp
  434601:	lock cmp BYTE PTR [edi-0x401013d1],0xb9
  434609:	loopne 0x434632
  43460b:	sub    BYTE PTR [ebp+0x3513e23b],ah
  434611:	retf   
  434612:	repnz cli 
	...
  434628:	mov    dl,0xda
  43462a:	aad    0x16
  43462c:	mov    ds:0x245ad5e2,al
  434631:	scas   al,BYTE PTR es:[edi]
  434632:	adc    BYTE PTR [eax],al
  434634:	pop    ss
  434635:	ja     0x4345e7
  434637:	jle    0x4345bf
  434639:	ret    
  43463a:	dec    edi
  43463b:	push   edx
  43463c:	fld    DWORD PTR [eax+ebx*1-0x7cd726ad]
  434643:	icebp  
  434644:	(bad)  
  434645:	adc    eax,0x9f674fad
  43464a:	mov    esp,0x2914663b
  43464f:	push   ecx
  434650:	xlat   BYTE PTR ds:[ebx]
  434651:	add    eax,0x3b934fdd
  434656:	leave  
  434657:	out    0xf4,eax
  434659:	fldenv [ecx-0x58a1d744]
  43465f:	ss popa 
  434661:	or     ebp,DWORD PTR [eax-0x18266256]
  434667:	add    edx,DWORD PTR [ebp-0x1afc0faa]
  43466d:	push   ss
  43466e:	sbb    BYTE PTR [esi],dl
  434670:	mov    ds:0x950bfdd9,al
  434675:	dec    ebp
  434676:	fst    QWORD PTR [eax-0x19]
  434679:	push   ds
  43467a:	inc    eax
  43467b:	push   ebx
  43467c:	jmp    0x110036cf
  434681:	pop    ebp
  434682:	sub    ecx,DWORD PTR [edi]
  434684:	pop    ebp
  434685:	push   esi
  434686:	fadd   QWORD PTR [ebx]
  434688:	dec    esi
  434689:	out    0x96,al
  43468b:	mov    es,WORD PTR [eax]
	...
  43469d:	add    BYTE PTR [eax],al
  43469f:	add    BYTE PTR [esi],ah
  4346a1:	mov    ecx,0xe54ebc97
  4346a6:	xor    dl,ah
  4346a8:	cmp    al,0x9d
  4346aa:	fild   DWORD PTR [eax+0x37e7e936]
  4346b0:	pop    edi
  4346b1:	sub    al,0x6d
  4346b3:	inc    esi
  4346b4:	mov    edx,0x72361329
  4346b9:	fdiv   DWORD PTR [edx]
  4346bb:	and    BYTE PTR [ecx+0x268e96e5],0xc9
  4346c2:	xchg   edi,eax
  4346c3:	push   ebp
  4346c4:	mov    DWORD PTR [eax+0x56e4ebfe],esi
  4346ca:	fmul   DWORD PTR [eax+0xbe25ea0]
  4346d0:	es lahf 
  4346d2:	aaa    
  4346d3:	mov    ebx,0x31d2e4ee
  4346d8:	push   0xffffffd8
  4346da:	push   ss
  4346db:	mov    ebx,0x43d8896e
  4346e0:	bound  ebx,QWORD PTR [esi-0x59]
  4346e3:	xor    dl,dh
  4346e5:	pop    ebp
  4346e6:	add    BYTE PTR [edi-0x517c158e],bh
  4346ec:	jb     0x4346d4
  4346ee:	data16 icebp 
  4346f0:	nop
  4346f1:	sub    edi,edx
  4346f3:	hlt    
  4346f4:	xchg   ecx,eax
  4346f5:	jmp    0x434737
  4346f7:	jmp    0x594fe2e0
  4346fc:	pop    edi
  4346fd:	xor    al,0x5b
  4346ff:	and    bl,BYTE PTR [edi]
  434701:	xchg   esi,eax
  434702:	adc    cl,ch
	...
  434718:	mov    dl,0x60
  43471a:	in     al,dx
  43471b:	sbb    BYTE PTR [eax-0x6f8779d4],dl
  434721:	pusha  
  434722:	mul    BYTE PTR [esi+0x53]
  434725:	lea    ecx,[esi]
  434727:	test   eax,0x56f95861
  43472c:	xchg   edx,eax
  43472d:	sbb    al,0x7e
  43472f:	pushf  
  434730:	or     eax,0x76497dd3
  434735:	call   0xc2fe:0x3f31d4e0
  43473c:	pusha  
  43473d:	inc    ecx
  43473e:	add    ecx,ebp
  434740:	popa   
  434741:	pop    ecx
  434742:	push   edx
  434743:	je     0x434760
  434745:	aad    0xe8
  434747:	pminsw mm2,mm2
  43474a:	stc    
  43474b:	ins    DWORD PTR es:[edi],dx
  43474c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43474d:	dec    ebx
  43474e:	sbb    ebx,edx
  434750:	mov    eax,ds:0x30995127
  434755:	dec    bx
  434757:	std    
  434758:	mov    ecx,0xb8f6f9d8
  43475d:	pop    ebx
  43475e:	shl    BYTE PTR [ebp+0x5d],0x66
  434762:	dec    ebx
  434763:	in     eax,0xb9
  434765:	xchg   esp,eax
  434766:	cld    
  434767:	fisubr WORD PTR [eax+0x6fc1ff87]
  43476d:	fs dec ebx
  43476f:	int    0x9
  434771:	mov    bh,ah
  434773:	add    BYTE PTR [esp+edx*4],ah
  434776:	sub    eax,eax
  434778:	fs xor ecx,eax
  43477b:	ret    0x0
	...
  43478e:	add    BYTE PTR [eax],al
  434790:	inc    edi
  434791:	fist   DWORD PTR [ebx-0x75]
  434794:	neg    DWORD PTR [edi-0x23]
  434797:	clc    
  434798:	mov    eax,0x4683217e
  43479d:	jmp    0x669f9da2
  4347a2:	clc    
  4347a3:	je     0x43480b
  4347a5:	test   DWORD PTR [ecx],ebp
  4347a7:	or     al,0xe4
  4347a9:	xchg   ebx,eax
  4347aa:	xor    eax,0x50070904
  4347af:	lea    ecx,[edi-0x47]
  4347b2:	add    eax,0xc6665a50
  4347b7:	call   0x39d9a2
  4347bc:	jg     0x434758
  4347be:	ins    DWORD PTR es:[edi],dx
  4347bf:	jns    0x434809
  4347c1:	adc    DWORD PTR [ecx],ecx
  4347c3:	add    BYTE PTR [eax-0x37],al
  4347c6:	dec    ecx
  4347c7:	push   ss
  4347c8:	sti    
  4347c9:	fidiv  DWORD PTR [edi+ecx*1-0x4f]
  4347cd:	loop   0x4347c4
  4347cf:	jne    0x434794
  4347d1:	popa   
  4347d2:	cmp    eax,0xf62a9b24
  4347d7:	(bad)  
  4347d8:	cmp    BYTE PTR [esi-0x21397cfb],dl
  4347de:	add    BYTE PTR [esp+eax*4+0x4],dh
  4347e2:	or     edi,edi
  4347e4:	out    dx,al
  4347e5:	fimul  WORD PTR [ebx+0x50f29f44]
  4347eb:	jmp    FWORD PTR [ebp+0x5f]
  4347ee:	mov    ebp,0x1111080c
	...
  434807:	add    bh,ch
  434809:	loop   0x43486d
  43480b:	or     BYTE PTR [esi+eax*1-0x46c072ef],al
  434812:	sbb    DWORD PTR [eax+0x62],edx
  434815:	scas   eax,DWORD PTR es:[edi]
  434816:	into   
  434817:	jle    0x434837
  434819:	mov    ah,0x2b
  43481b:	or     BYTE PTR [ebp+0x15],cl
  43481e:	adc    DWORD PTR [ebp+0x4fecdc9e],ecx
  434824:	cmp    eax,0xe7595576
  434829:	sti    
  43482a:	loopne 0x434837
  43482c:	xchg   edx,eax
  43482d:	adc    DWORD PTR [edx+ecx*8-0x54e81c6],ecx
  434834:	sbb    eax,0x8ffb0f5b
  434839:	sar    BYTE PTR [eax+0x295f5e74],1
  43483f:	or     BYTE PTR ds:0xce14b88f,al
  434845:	mov    al,0x3d
  434847:	add    ch,ch
  434849:	addr16 sbb eax,eax
  43484c:	cmc    
  43484d:	pop    ss
  43484e:	pop    eax
  43484f:	pop    edx
  434850:	fstp   DWORD PTR [edx+edx*2]
  434853:	mov    esi,0x874fc072
  434858:	rcl    DWORD PTR [edi-0x40320083],cl
  43485e:	dec    edi
  43485f:	sti    
  434860:	outs   dx,DWORD PTR ds:[esi]
  434861:	js     0x434876
  434863:	inc    eax
  434864:	bound  esi,QWORD PTR [esi-0x48]
  434867:	adc    al,0xee
  434869:	mov    al,0x3d
	...
  43487f:	add    BYTE PTR [ebp-0x523fe3e9],dh
  434885:	pop    ss
  434886:	push   edi
  434887:	mov    edi,0x7ea93b37
  43488c:	xchg   bh,cl
  43488e:	test   BYTE PTR [esi+ecx*4-0x22],cl
  434892:	push   ebx
  434893:	push   edx
  434894:	sub    eax,0x7dff7d68
  434899:	mov    edi,0xc30bff2b
  43489e:	and    eax,0xe7d96200
  4348a3:	adc    DWORD PTR [edx],0x64
  4348a6:	sub    al,0xb8
  4348a8:	in     al,0xc7
  4348aa:	mov    edi,0xcad54cca
  4348af:	hlt    
  4348b0:	xor    al,0x5e
  4348b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4348b3:	das    
  4348b4:	mov    edx,0xadb42466
  4348b9:	data16 and al,0xb8
  4348bc:	cmp    eax,0x28b8abf3
  4348c1:	pop    esi
  4348c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4348c3:	das    
  4348c4:	mov    dl,BYTE PTR [edx]
  4348c6:	cmp    eax,0x5f2890b0
  4348cb:	adc    cl,BYTE PTR ss:[eax-0x23]
  4348cf:	or     BYTE PTR [eax],0xda
  4348d2:	out    0x63,eax
  4348d4:	add    eax,0x9efb224c
  4348d9:	int    0xfa
  4348db:	or     al,0x2d
  4348dd:	shl    dl,1
  4348df:	add    bl,bl
  4348e1:	repz jo 0x43493d
	...
  4348f8:	pop    esi
  4348f9:	ror    BYTE PTR [esi],0x8d
  4348fc:	test   al,0xc1
  4348fe:	into   
  4348ff:	sbb    al,0xd4
  434902:	pusha  
  434903:	add    edi,esp
  434905:	cdq    
  434906:	mov    ebx,0xac6614ea
  43490b:	scas   eax,DWORD PTR es:[edi]
  43490c:	adc    ch,BYTE PTR [eax+ebx*4]
  43490f:	mov    eax,0xe2ad52e
  434914:	jmp    0x9399:0xdf03a7e7
  43491b:	or     ebp,esp
  43491d:	push   ds
  43491e:	sbb    al,0xfc
  434920:	mov    al,ds:0x238ae34e
  434925:	fnsave [esi]
  434927:	add    bh,BYTE PTR [ebp-0x24]
  43492a:	outs   dx,BYTE PTR ds:[esi]
  43492b:	or     DWORD PTR [edx-0x4591fec8],ecx
  434931:	iret   
  434932:	mov    ebx,DWORD PTR [ebp+esi*4-0x521dbf44]
  434939:	iret   
  43493a:	xchg   BYTE PTR [edx-0x5fa9d04b],ch
  434940:	and    al,bl
  434942:	add    BYTE PTR [edx+0x27],ah
  434945:	pop    ebx
  434946:	iret   
  434947:	test   al,0xf8
  434949:	jecxz  0x43496e
  43494b:	jmp    0xe24419b1
  434950:	and    ebx,DWORD PTR [ebx-0x31]
  434953:	push   0xe9fad400
  434958:	popa   
  434959:	call   0x0:0xf9df
	...
  434970:	push   0x6681bfaa
  434975:	call   0x18bd:0x9358e1de
  43497c:	mov    cl,0x2e
  43497e:	xchg   BYTE PTR [eax+0x2485ade9],dl
  434984:	pop    esi
  434985:	bound  ebx,QWORD PTR [ebp+eax*8+0x59]
  434989:	rol    edi,0x66
  43498c:	lods   eax,DWORD PTR ds:[esi]
  43498d:	into   
  43498e:	cmp    esp,DWORD PTR [ebx+esi*1-0x2b22aeec]
  434995:	add    al,cl
  434997:	inc    eax
  434998:	popa   
  434999:	fiadd  DWORD PTR [eax]
  43499b:	jmp    0xf3aa71b7
  4349a0:	push   ds
  4349a1:	pop    esp
  4349a2:	repz (bad) 
  4349a4:	stc    
  4349a5:	ret    0x62a3
  4349a8:	sbb    ebx,ebp
  4349aa:	call   0xfa123700
  4349af:	jo     0x4349d2
  4349b1:	fld    QWORD PTR [ebp-0x643e965c]
  4349b7:	push   cs
  4349b8:	aad    0xce
  4349ba:	xchg   DWORD PTR [eax],eax
  4349bc:	mov    eax,0xceb705df
  4349c1:	fild   DWORD PTR [ecx+0x1854ac1]
  4349c7:	rcr    DWORD PTR [edx-0x1b],0xb2
  4349cb:	(bad)  
  4349cc:	jnp    0x4349a5
  4349ce:	add    BYTE PTR [ebx],ah
  4349d0:	or     eax,esp
  4349d2:	mov    edi,0x66
	...
  4349e7:	add    dl,al
  4349e9:	pop    ss
  4349ea:	or     eax,0x1121f40f
  4349ef:	mov    edi,edx
  4349f1:	popf   
  4349f2:	loope  0x4349fc
  4349f4:	push   0x43e1c097
  4349f9:	loopne 0x4349ba
  4349fb:	retw   0x1117
  4349ff:	je     0xcace5526
  434a05:	popf   
  434a06:	loope  0x434a10
  434a08:	sub    BYTE PTR [ecx-0x1ffc1e40],bl
  434a0e:	mov    edi,0xb179266
  434a13:	sysenter 
  434a15:	and    DWORD PTR ds:0xe19dca8b,edx
  434a1b:	or     BYTE PTR [eax],bl
  434a1d:	cdq    
  434a1e:	shl    cl,0xf3
  434a21:	fistp  QWORD PTR [edi+0x15175266]
  434a27:	pmuludq mm4,QWORD PTR [ecx]
  434a2a:	jnp    0x924e7aa
  434a30:	pop    eax
  434a31:	xchg   edi,eax
  434a32:	shl    cl,0xb3
  434a35:	fistp  QWORD PTR [edi+0xf174266]
  434a3b:	sysenter 
  434a3d:	and    DWORD PTR [ecx],ebx
  434a3f:	mov    edi,DWORD PTR [edx-0x63]
  434a42:	loope  0x434a4c
  434a44:	test   al,0x98
  434a46:	shl    cl,0x62
  434a49:	mov    eax,0xc106
	...
  434a5e:	add    BYTE PTR [eax],al
  434a60:	add    al,0x39
  434a62:	aas    
  434a63:	sbb    BYTE PTR [ebp+0x13],dl
  434a66:	dec    ecx
  434a67:	push   ss
  434a68:	jmp    0x6b2b0f6e
  434a6d:	lahf   
  434a6e:	mov    edi,0x6b883c0
  434a73:	sar    esp,0x48
  434a76:	inc    eax
  434a77:	push   ss
  434a78:	ins    DWORD PTR es:[edi],dx
  434a79:	imul   eax,DWORD PTR [ecx+0x1c],0xffffffe9
  434a7d:	sbb    esp,ecx
  434a7f:	pop    ss
  434a80:	fld    DWORD PTR [eax-0x20a51843]
  434a86:	mov    esi,0x8c843c0
  434a8b:	sar    DWORD PTR [ecx+edi*1-0x6b18e3c0],0x30
  434a93:	xor    ecx,ebx
  434a95:	sbb    esp,ecx
  434a97:	sbb    ecx,DWORD PTR [eax+0xf8756c7]
  434a9d:	aaa    
  434a9e:	mov    eax,0x4236c7ee
  434aa3:	add    dl,bh
  434aa5:	ja     0x434a59
  434aa7:	cli    
  434aa8:	std    
  434aa9:	dec    eax
  434aaa:	add    BYTE PTR [edi-0x365a3b59],al
  434ab0:	in     al,dx
  434ab1:	inc    edx
  434ab2:	mov    ah,0x88
  434ab4:	mov    eax,ds:0x8a4c88c4
  434ab9:	sub    al,al
  434abb:	stc    
  434abc:	aad    0x2a
  434abe:	xchg   BYTE PTR [esi],bh
  434ac0:	jp     0x434af9
  434ac2:	pop    ecx
  434ac3:	and    al,0x0
	...
  434ad5:	add    BYTE PTR [eax],al
  434ad7:	add    BYTE PTR [edx+0x7b],dh
  434ada:	mov    BYTE PTR [esi+0x5958751c],bh
  434ae0:	mov    al,ds:0xd950fdb7
  434ae5:	mov    eax,0xd91aff50
  434aea:	jecxz  0x434b3a
  434aec:	sbb    eax,0xd104ff98
  434af1:	pop    ss
  434af2:	adc    al,0x5
  434af4:	sar    DWORD PTR [edi],1
  434af6:	cli    
  434af7:	dec    ebp
  434af8:	test   DWORD PTR [eax-0x12b9b792],ebx
  434afe:	xchg   edx,eax
  434aff:	mov    ah,BYTE PTR [ecx]
  434b01:	std    
  434b02:	xlat   BYTE PTR ds:[ebx]
  434b03:	stos   DWORD PTR es:[edi],eax
  434b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434b05:	push   ss
  434b06:	jmp    0xe6db:0x6ed234b4
  434b0d:	mov    esi,0xe1bc3d59
  434b12:	push   ss
  434b13:	scas   al,BYTE PTR es:[edi]
  434b14:	mov    ch,0x44
  434b16:	shr    bl,cl
  434b18:	inc    esp
  434b19:	dec    ebp
  434b1a:	or     al,0x14
  434b1c:	xchg   edx,eax
  434b1d:	inc    ebx
  434b1e:	call   0x3c2a8470
  434b23:	push   cs
  434b24:	mov    ds:0x59bf66d9,al
  434b29:	fs scas eax,DWORD PTR es:[edi]
  434b2b:	call   0x29eaa25b
  434b30:	push   0x31
  434b32:	jecxz  0x434b73
  434b34:	sbb    dl,BYTE PTR ds:0x2c702e9f
  434b3a:	sbb    dh,BYTE PTR [ebp+0x0]
	...
  434b50:	jno    0x434b47
  434b52:	(bad)  
  434b53:	mov    ah,0x4e
  434b55:	and    eax,0x5c6243da
  434b5a:	mov    ds:0xdb99df07,eax
  434b5f:	sbb    eax,DWORD PTR [ecx+eiz*8-0x41]
  434b63:	cmp    al,0x69
  434b65:	mov    BYTE PTR [edx-0x8],bl
  434b68:	(bad)  
  434b69:	dec    ebp
  434b6a:	mov    bh,BYTE PTR [ebx-0x38]
  434b6d:	shl    bh,1
  434b6f:	add    ebx,DWORD PTR [ecx]
  434b71:	das    
  434b72:	popf   
  434b73:	pop    eax
  434b74:	sbb    ebx,DWORD PTR [ebx+0x3b61e100]
  434b7a:	xchg   BYTE PTR [esi],ah
  434b7c:	cli    
  434b7d:	mov    edi,0x8c66bf4d
  434b82:	je     0x434b49
  434b84:	pop    ebp
  434b85:	sub    al,0x66
  434b87:	pop    ds
  434b88:	jns    0x434be1
  434b8a:	aaa    
  434b8b:	bound  eax,QWORD PTR [esi+0xd]
  434b8e:	(bad)  
  434b8f:	sub    eax,0xd5508c66
  434b94:	bound  ebp,QWORD PTR [ecx-0x2f928f80]
  434b9a:	ins    DWORD PTR es:[edi],dx
  434b9b:	jecxz  0x434b77
  434b9d:	xor    al,0x13
  434b9f:	or     ebp,ebx
  434ba1:	sbb    al,0x13
  434ba3:	add    eax,0x3585d7f5
  434ba8:	push   0x68258601
  434bad:	std    
  434bae:	sub    DWORD PTR [ecx-0x5a013086],0x0
	...
  434bc5:	add    BYTE PTR [eax],al
  434bc7:	add    BYTE PTR [ebp-0x2522dadc],dh
  434bcd:	mov    al,ds:0xf1a6eb74
  434bd2:	pop    ecx
  434bd3:	inc    edi
  434bd4:	lods   eax,DWORD PTR ds:[esi]
  434bd5:	(bad)
  434bd9:	pop    eax
  434bda:	out    dx,eax
  434bdb:	scas   al,BYTE PTR es:[edi]
  434bdc:	pop    eax
  434bdd:	push   ebp
  434bde:	nop
  434bdf:	sub    DWORD PTR [esi-0x3f],ebx
  434be2:	sub    eax,0xf2d2b0b9
  434be7:	and    eax,0xfcffd80a
  434bec:	pop    eax
  434bed:	pop    eax
  434bee:	retf   0x5381
  434bf1:	push   esi
  434bf2:	stc    
  434bf3:	pop    bp
  434bf5:	call   0x457f:0xd96a2b5a
  434bfc:	into   
  434bfd:	fadd   DWORD PTR [eax]
  434bff:	jmp    0x967230
  434c04:	xor    BYTE PTR [ecx+0x1e],dl
  434c07:	sbb    dl,cl
  434c09:	fild   DWORD PTR [eax]
  434c0b:	push   edi
  434c0c:	inc    eax
  434c0d:	lahf   
  434c0e:	sub    cl,0x38
  434c11:	mov    esp,DWORD PTR ds:0xf9a9090f
  434c17:	dec    DWORD PTR [ebx+0x7e90f754]
  434c1d:	fild   DWORD PTR [eax]
  434c1f:	(bad)  
  434c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434c22:	stc    
  434c23:	dec    DWORD PTR [ebx-0x668b13a0]
  434c29:	fisubr DWORD PTR [ebp+0x45]
	...
  434c3f:	add    BYTE PTR [ebx+0x56],bh
  434c42:	icebp  
  434c43:	add    ch,bh
  434c45:	int3   
  434c46:	jp     0x434c40
  434c48:	pop    esp
  434c49:	fadd   QWORD PTR [ebx+0xdb4bba]
  434c4f:	(bad)  
  434c50:	jg     0x434c13
  434c52:	or     DWORD PTR [ebx+edi*1],eax
  434c55:	fild   DWORD PTR [eax]
  434c57:	test   ebp,edi
  434c59:	push   es
  434c5a:	add    dl,BYTE PTR [esi+0x58]
  434c5d:	pop    eax
  434c5e:	inc    ebp
  434c5f:	and    al,0x13
  434c61:	jae    0x434c09
  434c63:	pop    eax
  434c64:	hlt    
  434c65:	mov    edi,DWORD PTR [ecx+0x3b]
  434c68:	or     eax,DWORD PTR [edi]
  434c6a:	push   edx
  434c6b:	shrd   DWORD PTR [edi],ecx,cl
  434c6e:	sti    
  434c6f:	mov    WORD PTR ds:0x69c132b1,?
  434c75:	and    eax,0xdb0bc869
  434c7a:	add    BYTE PTR [edx+0xb],ch
  434c7d:	mov    WORD PTR [eax+edi*2],?
  434c80:	and    DWORD PTR gs:[ecx],eax
  434c83:	dec    DWORD PTR [esi]
  434c85:	test   DWORD PTR [edx],0xf24fcb40
  434c8b:	test   DWORD PTR [esi+eax*1],esi
  434c8e:	adc    al,0x8b
  434c90:	(bad)  
  434c91:	not    DWORD PTR [ebp-0x50e08abe]
  434c97:	mov    cs:0xd28406ff,al
  434c9d:	cmp    ch,0x61
  434ca0:	fstp   TBYTE PTR [edi+0x35]
  434ca3:	out    0x0,eax
	...
  434cb5:	add    BYTE PTR [eax],al
  434cb7:	add    BYTE PTR [eax-0x2d],ah
  434cba:	scas   al,BYTE PTR es:[edi]
  434cbb:	test   BYTE PTR [ebp-0x5378f694],bl
  434cc1:	dec    ebx
  434cc2:	mov    ebx,0x116fdb61
  434cc7:	call   0xfaf2816f
  434ccc:	jmp    0x434d4d
  434cce:	or     eax,0x45a285
  434cd3:	xchg   DWORD PTR [ebp+0x5a],esp
  434cd6:	add    al,0x87
  434cd8:	xchg   ebp,eax
  434cd9:	mov    edi,0x4b5d2f0e
  434cde:	enter  0x95e6,0x35
  434ce2:	call   0x45ff:0x85188573
  434ce9:	sar    BYTE PTR [edx+0x72],0xaa
  434ced:	sub    al,BYTE PTR ds:0x45a53552
  434cf3:	adc    ah,BYTE PTR [edx+0x56c384c0]
  434cf9:	cmp    edi,DWORD PTR [edx-0x50615919]
  434cff:	cli    
  434d00:	mov    dl,0x5
  434d02:	push   edi
  434d03:	sti    
  434d04:	ja     0x434d16
  434d06:	pop    ss
  434d07:	inc    eax
  434d08:	bound  eax,QWORD PTR [ebx-0x37]
  434d0b:	or     ecx,DWORD PTR [eax+0x4c427aa4]
  434d11:	repz push esp
  434d13:	sti    
  434d14:	push   edi
  434d15:	lock push ss
  434d17:	inc    eax
  434d18:	bound  eax,QWORD PTR [ebx-0x37]
  434d1b:	or     eax,DWORD PTR [eax]
	...
  434d2d:	add    BYTE PTR [eax],al
  434d2f:	add    cl,cl
  434d31:	fsub   DWORD PTR [edx-0x45d1ea0b]
  434d37:	dec    esi
  434d38:	xor    eax,0x62fc2b58
  434d3d:	(bad)  
  434d3f:	lds    esp,FWORD PTR [ecx-0x27]
  434d42:	xchg   esi,eax
  434d43:	jl     0x434d5e
  434d45:	cmc    
  434d46:	out    dx,eax
  434d47:	push   esi
  434d48:	in     eax,0xbf
  434d4a:	pop    esi
  434d4b:	cmp    eax,0xaf402752
  434d50:	sbb    al,0xce
  434d52:	and    bh,BYTE PTR [ebp+0x1e]
  434d55:	jmp    0x37b592ca
  434d5a:	pop    edi
  434d5b:	inc    edi
  434d5c:	outs   dx,BYTE PTR ds:[esi]
  434d5d:	aaa    
  434d5e:	popa   
  434d5f:	inc    ebp
  434d60:	push   esi
  434d61:	pop    edx
  434d62:	mov    WORD PTR [ebx],ss
  434d64:	bound  ecx,QWORD PTR [edx]
  434d66:	sub    BYTE PTR [edx+eiz*8],bl
  434d69:	fsub   st,st(7)
  434d6b:	add    eax,DWORD PTR [eax]
  434d6d:	pusha  
  434d6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434d6f:	pop    ss
  434d70:	out    dx,eax
  434d71:	inc    esi
  434d72:	xor    BYTE PTR [edi-0x6c],bh
  434d75:	and    DWORD PTR [edx],esi
  434d77:	push   esp
  434d78:	dec    ecx
  434d79:	out    0x37,eax
  434d7b:	sbb    ah,BYTE PTR [edx-0x3c3be927]
  434d81:	(bad)  
  434d82:	jmp    0x370fd3a4
  434d87:	adc    al,0xdf
  434d89:	sbb    dl,bl
  434d8b:	push   ebx
  434d8c:	sub    edi,esp
  434d8e:	pop    ss
  434d8f:	sbb    ah,BYTE PTR [edx+0xe00dd9]
	...
  434da5:	add    BYTE PTR [eax],al
  434da7:	add    dh,ah
  434da9:	push   ss
  434daa:	repnz sbb eax,0x16932962
  434db0:	stos   BYTE PTR es:[edi],al
  434db1:	jecxz  0x434dda
  434db3:	add    al,0x7d
  434db5:	xchg   ebp,eax
  434db6:	retf   
  434db7:	push   ecx
  434db8:	xchg   edi,eax
  434db9:	xor    BYTE PTR [esi+0x1266207],ah
  434dbf:	(bad)  
  434dc0:	lds    ebx,FWORD PTR [ecx-0x14]
  434dc3:	sub    DWORD PTR [ecx+ebx*8+0x0],esp
  434dc7:	mov    edx,0x4369283b
  434dcc:	popa   
  434dcd:	fld    DWORD PTR [eax]
  434dcf:	sbb    dl,BYTE PTR [edi-0x7d5645e5]
  434dd5:	adc    eax,0xe5f29e01
  434dda:	pop    eax
  434ddb:	xlat   BYTE PTR ds:[ebx]
  434ddc:	and    ecx,ebx
  434dde:	jge    0x434e0d
  434de0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434de1:	xchg   BYTE PTR [edx+0x66d925be],dh
  434de7:	jmp    0x434df1
  434de9:	adc    DWORD PTR [eax],esp
  434deb:	adc    DWORD PTR [edi-0x3f],esi
  434dee:	push   es
  434def:	xor    dl,dl
  434df1:	iret   
  434df2:	mov    ebx,DWORD PTR [edi+eiz*4-0x33]
  434df6:	stc    
  434df7:	push   es
  434df8:	fld    DWORD PTR [ebx+0x5dbdff9e]
  434dfe:	mov    al,0x1b
  434e00:	pusha  
  434e01:	fld    DWORD PTR [eax]
  434e03:	bound  esp,QWORD PTR [ebx]
  434e05:	mov    ah,0x42
  434e07:	sub    DWORD PTR [edi+ecx*8],eax
  434e0a:	sub    DWORD PTR [ecx+0x0],0x0
	...
  434e1d:	add    BYTE PTR [eax],al
  434e1f:	add    BYTE PTR [esi+0x14],bh
  434e22:	addr16 std 
  434e24:	loop   0x434e42
  434e26:	fnstcw WORD PTR [eax]
  434e28:	xchg   esi,eax
  434e29:	daa    
  434e2a:	dec    esi
  434e2b:	sbb    al,BYTE PTR ds:0xa1d884e5
  434e31:	fld    DWORD PTR [ebx+0x630874a9]
  434e37:	lock lods eax,DWORD PTR ds:[esi]
  434e39:	push   ss
  434e3a:	rcr    DWORD PTR ds:0xf5f94c62,cl
  434e40:	push   edx
  434e41:	hlt    
  434e42:	sub    eax,0x54623cbb
  434e47:	and    al,0x2e
  434e49:	pop    ebp
  434e4a:	push   ebx
  434e4b:	add    BYTE PTR [ebx],bh
  434e4d:	ds loop 0x434e50
  434e50:	sti    
  434e51:	xlat   BYTE PTR ds:[ebx]
  434e52:	call   0x118e283
  434e57:	lea    eax,[esi+0x168d499d]
  434e5d:	dec    eax
  434e5e:	or     edi,0x33
  434e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434e62:	in     eax,dx
  434e63:	jmp    FWORD PTR [edx+eiz*2]
  434e66:	mov    ecx,0x7d95360f
  434e6b:	shl    dh,0xcf
  434e6e:	sub    al,al
  434e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434e71:	cmp    ch,BYTE PTR ss:[edi-0x9]
  434e75:	xlat   BYTE PTR ds:[ebx]
  434e76:	mov    bh,0xee
  434e78:	mov    dl,bh
  434e7a:	add    BYTE PTR [ebp-0x368fa],cl
  434e80:	ins    BYTE PTR es:[edi],dx
  434e81:	dec    ebp
  434e82:	adc    al,BYTE PTR [eax+0x0]
	...
  434e95:	add    BYTE PTR [eax],al
  434e97:	add    dl,al
  434e99:	adc    bl,dh
  434e9b:	pop    edi
  434e9c:	int    0x47
  434e9e:	add    DWORD PTR [ebx+0x32],ebx
  434ea1:	cwde   
  434ea2:	dec    edi
  434ea3:	mov    ebp,DWORD PTR [edx+0x4e]
  434ea6:	or     BYTE PTR [ebp-0x17f6eebe],al
  434eac:	call   0xc943456a
  434eb1:	mov    ah,0xf9
  434eb3:	pop    ebp
  434eb4:	clc    
  434eb5:	and    al,0x2a
  434eb7:	mul    BYTE PTR ds:0x876ee8e2
  434ebd:	aad    0xff
  434ebf:	push   esi
  434ec0:	mov    al,0x7d
  434ec2:	je     0x434ef8
  434ec4:	dec    eax
  434ec5:	xchg   BYTE PTR ds:[esi+0x77],ch
  434ec9:	aad    0x49
  434ecb:	push   DWORD PTR [esi]
  434ecd:	ja     0x434eda
  434ecf:	inc    eax
  434ed0:	or     eax,DWORD PTR [ebp+0x215de804]
  434ed6:	add    DWORD PTR [ecx],eax
  434ed8:	(bad)  
  434ed9:	in     eax,dx
  434eda:	adc    ch,al
  434edc:	push   0x5b
  434ede:	stos   BYTE PTR es:[edi],al
  434edf:	cli    
  434ee0:	fiadd  WORD PTR [eax-0x421df2cf]
  434ee6:	xchg   ebp,eax
  434ee7:	imul   ebx,DWORD PTR [esi-0x6876fb40],0x62441c4c
  434ef1:	(bad)
  434ef5:	into   
  434ef6:	cmp    eax,0x73982900
  434efb:	push   0x0
	...
  434f0d:	add    BYTE PTR [eax],al
  434f0f:	add    BYTE PTR [esi],ah
  434f11:	rcl    BYTE PTR [ebx+0x68],0x96
  434f15:	jbe    0x434f58
  434f17:	add    BYTE PTR [ebp+0x22113da5],ch
  434f1d:	ror    BYTE PTR [eax+0x76b916bf],0xc7
  434f24:	mov    bh,BYTE PTR [ecx-0x27]
  434f27:	cli    
  434f28:	lea    eax,[edi-0x52]
  434f2b:	test   BYTE PTR [esp+ebp*2+0x30358903],cl
  434f32:	add    eax,0xbd8e60e7
  434f37:	pop    edx
  434f38:	or     al,0xff
  434f3a:	pop    eax
  434f3b:	xchg   DWORD PTR [esi+0x3f],esi
  434f3e:	call   0x9e69:0x95b55413
  434f45:	sar    dh,0x51
  434f48:	fild   DWORD PTR [ecx+esi*4]
  434f4b:	xchg   BYTE PTR [ebx+0x2d],dl
  434f4e:	repnz push edx
  434f50:	std    
  434f51:	sub    ebx,DWORD PTR [ebx]
  434f53:	inc    esp
  434f54:	(bad)  
  434f55:	jmp    0x434f02
  434f57:	adc    al,0x42
  434f59:	scas   al,BYTE PTR es:[edi]
  434f5a:	cmp    eax,0x95bd2c00
  434f5f:	imul   esp,DWORD PTR [esi+0x6d74fec0],0xb928fd9
  434f69:	retf   0x889a
  434f6c:	lds    eax,FWORD PTR [edx+eiz*8-0x80]
  434f70:	inc    esi
  434f71:	mov    ebp,0x47f9
	...
  434f86:	add    BYTE PTR [eax],al
  434f88:	(bad)  
  434f89:	fldenv [edi-0x1]
  434f8c:	add    eax,0x6304243b
  434f91:	and    dh,BYTE PTR [ebx+0x17]
  434f94:	mov    esi,0x390427e6
  434f99:	aas    
  434f9a:	out    0x7e,al
  434f9c:	push   ds
  434f9d:	mov    ebp,0xd970e54f
  434fa2:	out    0x7e,eax
  434fa4:	jecxz  0x43500e
  434fa6:	out    0x3,eax
  434fa8:	bound  eax,QWORD PTR [ecx-0x1a]
  434fab:	add    ah,BYTE PTR [edx-0x27]
  434fae:	xchg   edi,eax
  434faf:	jle    0x434fc7
  434fb1:	mov    ebp,0xd970633f
  434fb6:	out    0x7e,eax
  434fb8:	push   ds
  434fb9:	int    0x8d
  434fbb:	pop    es
  434fbc:	xor    bl,BYTE PTR [esp+ebp*4-0x61]
  434fc0:	jge    0x435027
  434fc2:	cli    
  434fc3:	add    esp,DWORD PTR [edx+0x5c]
  434fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434fc7:	stos   DWORD PTR es:[edi],eax
  434fc8:	adc    ch,BYTE PTR [ecx]
  434fca:	jne    0x43500b
  434fcc:	jle    0x434f8e
  434fce:	(bad)  
  434fcf:	or     esp,DWORD PTR [edx-0x27]
  434fd2:	jge    0x434feb
  434fd4:	pop    ecx
  434fd5:	dec    edi
  434fd6:	loopne 0x434f84
  434fd8:	into   
  434fd9:	shl    edx,0x16
  434fdc:	retf   0x27ef
  434fdf:	add    al,0xc5
  434fe1:	popf   
  434fe2:	jecxz  0x435062
  434fe4:	scas   al,BYTE PTR es:[edi]
  434fe5:	mov    ch,0xbf
  434fe7:	inc    eax
  434fe8:	push   ecx
  434fe9:	(bad)  
  434feb:	dec    ebp
	...
  435000:	sbb    ebx,DWORD PTR [ebx+eiz*8+0x548f03]
  435007:	(bad)
  43500a:	clc    
  43500b:	push   0xe90514f5
  435010:	popa   
  435011:	pop    ecx
  435012:	cmp    esi,ebp
  435014:	xchg   esi,eax
  435015:	sbb    eax,0x2b92e801
  43501a:	push   edx
  43501b:	bound  ebp,QWORD PTR [ebx]
  43501d:	pusha  
  43501e:	out    dx,eax
  43501f:	(bad)  
  435020:	test   ax,0x8490
  435025:	enter  0xe9f9,0x5c
  435029:	push   esp
  43502a:	and    al,0x9
  43502c:	popa   
  43502d:	fld    DWORD PTR [eax]
  43502f:	push   ecx
  435030:	in     eax,dx
  435031:	push   0x1c445efa
  435036:	and    eax,0xd26011f5
  43503b:	pop    esp
  43503c:	xor    eax,0x61e864fc
  435041:	fld1   
  435043:	fdivr  st(6),st
  435045:	ret    
  435046:	stc    
  435047:	bound  edx,QWORD PTR [ecx+edx*8-0x7d]
  43504b:	aaa    
  43504c:	dec    esp
  43504d:	out    0x8b,al
  43504f:	lods   eax,DWORD PTR ds:[esi]
  435050:	test   esp,esp
  435052:	push   eax
  435053:	xchg   ecx,eax
  435054:	and    DWORD PTR [eax*2+0xda59e9],esi
  43505b:	jmp    0x39571441
  435060:	push   edx
  435061:	sbb    DWORD PTR [ecx],eax
  435063:	test   BYTE PTR [eax],0x0
	...
  435076:	add    BYTE PTR [eax],al
  435078:	cwde   
  435079:	out    dx,al
  43507a:	shl    bh,0x20
  43507d:	mov    edi,0xfd7d6a51
  435082:	pop    eax
  435083:	jmp    0xd967ad52
  435088:	pop    edi
  435089:	fld    DWORD PTR [eax]
  43508b:	cmp    DWORD PTR [ebx-0x29d2daec],edi
  435091:	jg     0x4350e0
  435093:	add    BYTE PTR [esp+esi*2],ah
  435096:	mov    WORD PTR [edi+ebx*2+0x15],cs
  43509a:	dec    edi
  43509b:	push   ebx
  43509c:	and    esi,DWORD PTR [edx+0x4a]
  43509f:	inc    esp
  4350a1:	pop    ebp
  4350a2:	test   DWORD PTR [eax],0x7600dcd3
  4350a8:	push   ecx
  4350a9:	out    0xf9,eax
  4350ab:	push   edi
  4350ac:	or     BYTE PTR [ecx],0x25
  4350af:	adc    al,0x80
  4350b1:	js     0x435102
  4350b3:	push   edi
  4350b4:	dec    ebx
  4350b5:	inc    edx
  4350b6:	ds and al,0x13
  4350b9:	sub    al,0xb3
  4350bb:	inc    eax
  4350bc:	sbb    DWORD PTR fs:[ecx],eax
  4350bf:	call   0x3aaec8
  4350c4:	push   ebx
  4350c5:	sbb    DWORD PTR ds:0x6d788013,esp
  4350cb:	or     eax,DWORD PTR [eax-0x7c]
  4350ce:	loope  0x4350df
  4350d0:	dec    edx
  4350d1:	je     0x4350c9
  4350d3:	mov    bh,bh
  4350d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4350d6:	or     bh,BYTE PTR [edx+0xde15]
	...
  4350f0:	push   es
  4350f1:	inc    ecx
  4350f2:	push   ds
  4350f3:	pusha  
  4350f4:	mov    bl,bl
  4350f6:	add    dh,al
  4350f8:	jp     0x4350d5
  4350fa:	aas    
  4350fb:	dec    edx
  4350fc:	out    dx,al
  4350fd:	je     0x435155
  4350ff:	pop    esi
  435100:	mov    al,0x46
  435102:	in     eax,0x5d
  435104:	dec    ecx
  435105:	fld    DWORD PTR [eax]
  435107:	xor    edi,DWORD PTR [ebx]
  435109:	pusha  
  43510a:	test   DWORD PTR [esp+esi*2],0x496ab968
  435111:	adc    al,0x82
  435113:	xlat   BYTE PTR ds:[ebx]
  435114:	sbb    BYTE PTR [esi+0x7c33d022],al
  43511a:	jae    0x43511b
  43511c:	and    al,0xc4
  43511e:	scas   eax,DWORD PTR es:[edi]
  43511f:	and    BYTE PTR [edx+0x38],0x8e
  435123:	aas    
  435124:	bound  edi,QWORD PTR [ecx]
  435126:	cmp    ah,BYTE PTR [edx+ecx*2]
  435129:	xor    esp,DWORD PTR [esi+0x7923af00]
  43512f:	inc    ebx
  435130:	inc    esi
  435131:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435132:	dec    ebp
  435133:	push   edx
  435134:	mov    cl,0x25
  435136:	jb     0x43515b
  435138:	scas   al,BYTE PTR es:[edi]
  435139:	mov    bl,0xfd
  43513b:	(bad)  
  43513c:	(bad)  [edx+ebx*8]
  43513f:	pop    ebx
  435140:	popa   
  435141:	mov    al,0xfd
  435143:	out    0x33,eax
  435145:	or     al,0xa6
  435147:	cli    
  435148:	fstp   DWORD PTR [eax-0x80]
  43514b:	cli    
  43514c:	outs   dx,DWORD PTR ds:[esi]
  43514d:	mov    esp,0x2ac9bff3
  435152:	jnp    0x4351c7
	...
  435168:	jle    0x435116
  43516a:	jp     0x4351af
  43516c:	xchg   al,bl
  43516e:	fwait
  43516f:	lds    esp,FWORD PTR [bx]
  435172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435173:	push   esp
  435174:	jmp    0xbb26d495
  435179:	xor    DWORD PTR [edx-0x24f99b5],edx
  43517f:	dec    esi
  435180:	or     al,0x4b
  435182:	mov    ch,0x52
  435184:	out    dx,eax
  435185:	cmp    al,0xda
  435187:	pop    edi
  435188:	arpl   WORD PTR [eax-0x17577903],si
  43518e:	mov    cl,0x9a
  435190:	test   bh,ah
  435192:	js     0x4351d7
  435194:	inc    esi
  435195:	int3   
  435196:	dec    ebp
  435197:	xchg   DWORD PTR [ebp+eiz*1-0x4ef9dc8e],ecx
  43519e:	std    
  43519f:	(bad)  
  4351a0:	jp     0x435167
  4351a2:	mov    eax,ds:0x3a3d5dfa
  4351a7:	and    al,0x72
  4351a9:	pusha  
  4351aa:	sbb    eax,DWORD PTR [ecx]
  4351ac:	xchg   ecx,eax
  4351ad:	(bad)  
  4351af:	push   ecx
  4351b0:	or     ebx,eax
  4351b2:	out    0x3,eax
  4351b4:	loop   0x4351e6
  4351b6:	sub    BYTE PTR [ecx],bl
  4351b8:	sahf   
  4351b9:	fnstcw WORD PTR [eax]
  4351bb:	jnp    0x435156
  4351bd:	std    
  4351be:	or     edi,DWORD PTR [ebx-0x57]
  4351c1:	std    
  4351c2:	pop    es
  4351c3:	test   eax,0x43d7d576
  4351c8:	bound  ebx,QWORD PTR [edi+eiz*4+0x2f]
	...
  4351e0:	imul   edx,DWORD PTR [ebx+ebp*1-0x20],0x406d2959
  4351e8:	inc    esi
  4351e9:	in     eax,0x37
  4351eb:	ja     0x43517e
  4351ed:	std    
  4351ee:	ret    
  4351ef:	jbe    0x43518a
  4351f1:	std    
  4351f2:	fistp  WORD PTR [ebx-0x5686a83b]
  4351f8:	in     al,0x44
  4351fa:	int3   
  4351fb:	neg    esp
  4351fd:	enter  0x57e,0x4d
  435201:	xchg   edi,eax
  435202:	bound  edi,QWORD PTR [ebx+0x51]
  435205:	std    
  435206:	repz test BYTE PTR [ebx-0x20e5243b],bh
  43520d:	into   
  43520e:	rcr    DWORD PTR [esi],cl
  435210:	sub    eax,0x630c0c45
  435215:	dec    esp
  435216:	stc    
  435217:	jbe    0x43523a
  435219:	std    
  43521a:	fist   DWORD PTR [ebx+0x30]
  43521d:	cs pop ebp
  43521f:	js     0x435262
  435221:	and    eax,0x9e6203e7
  435226:	arpl   ax,sp
  435228:	sbb    edx,ebx
  43522a:	out    0x3,eax
  43522c:	je     0x4351f3
  43522e:	out    0x3,eax
  435230:	jp     0x4352aa
  435232:	fwait
  435233:	test   al,0x68
  435235:	push   ecx
  435236:	sub    bh,BYTE PTR [ebp+0x4d]
  435239:	mov    dl,0x0
  43523b:	or     ecx,DWORD PTR [ebx-0x79d0640]
  435241:	pop    ebx
  435242:	je     0x435251
	...
  435258:	jb     0x4352ac
  43525a:	jl     0x435261
  43525c:	cmp    al,BYTE PTR [ebp+eiz*2+0xd]
  435260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435261:	(bad)  [ebx-0x4af29b]
  435267:	call   0x2dcf7bcd
  43526c:	add    ah,BYTE PTR [ecx]
  43526e:	jmp    0xfa04024a
  435273:	ror    DWORD PTR fs:[eax+0x6],cl
  435277:	aas    
  435278:	mov    bl,0x56
  43527a:	dec    esp
  43527b:	lds    eax,FWORD PTR [ecx-0x4f]
  43527e:	sahf   
  43527f:	cmp    cl,bl
  435281:	mov    edi,0xd73db283
  435286:	xchg   DWORD PTR [edx+0x7e2ec6c6],edi
  43528c:	dec    eax
  43528d:	mov    dl,0xff
  43528f:	call   0xc5c7a8f5
  435294:	sbb    edx,0xc4a3e900
  43529a:	stc    
  43529b:	test   eax,0x62f84e78
  4352a0:	mov    ds:0x2eb25b1f,al
  4352a5:	mov    ebp,0x5c142a5b
  4352aa:	in     al,dx
  4352ab:	cwde   
  4352ac:	xchg   esi,eax
  4352ad:	xchg   ecx,eax
  4352ae:	push   edx
  4352af:	fs and al,0xc5
  4352b2:	aas    
  4352b3:	inc    ecx
  4352b4:	in     al,dx
  4352b5:	ret    0x26f9
  4352b8:	add    al,0x84
  4352ba:	je     0x4352b6
	...
  4352d0:	out    0x45,al
  4352d2:	std    
  4352d3:	in     eax,dx
  4352d4:	inc    esp
  4352d5:	(bad)  
  4352d6:	test   ecx,ebx
  4352d8:	out    dx,al
  4352d9:	fwait
  4352da:	call   0xf63523df
  4352df:	call   eax
  4352e1:	call   0x5fe1:0x80c009e2
  4352e8:	mov    esp,0xfb33f671
  4352ed:	sbb    cl,al
  4352ef:	ret    
  4352f0:	jbe    0x435332
  4352f2:	out    0x51,al
  4352f4:	jne    0x43530a
  4352f6:	arpl   WORD PTR [edx],ax
  4352f8:	shl    BYTE PTR [esi-0x74],0x55
  4352fc:	pop    ds
  4352fd:	push   ss
  4352fe:	jmp    0xf6bf30b2
  435303:	mov    ebx,ebx
  435305:	pop    ecx
  435306:	out    dx,eax
  435307:	je     0x435370
  435309:	inc    eax
  43530a:	push   ebp
  43530b:	cld    
  43530c:	in     eax,0x96
  43530e:	add    BYTE PTR [ebp-0x1],dh
  435311:	push   esi
  435312:	in     eax,0xc
  435314:	mov    edx,0x61564b5e
  435319:	jmp    0x3891:0x64ac8b52
  435320:	pop    ebp
  435321:	jl     0x4352a5
  435323:	into   
  435324:	jecxz  0x4352e3
  435326:	jbe    0x435327
  435328:	cmp    al,0x4d
  43532a:	add    ebx,ebp
  43532c:	sar    BYTE PTR [esi],cl
  43532e:	enter  0xb5e8,0xfa
  435332:	cmc    
  435333:	inc    DWORD PTR [eax]
	...
  435345:	add    BYTE PTR [eax],al
  435347:	add    BYTE PTR [ecx-0x63],bl
  43534a:	push   esi
  43534b:	pop    esi
  43534c:	sbb    BYTE PTR [eax+0x5e0f8b54],0xe5
  435353:	les    eax,FWORD PTR [esi+0x5600d7]
  435359:	mov    fs,ecx
  43535b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43535c:	cmp    al,0x7c
  43535e:	test   BYTE PTR [ebx+edi*1+0xe8d2e0a],0x1d
  435366:	repz jmp DWORD PTR [edx-0x15]
  43536a:	pushf  
  43536b:	mov    al,0x95
  43536d:	shl    BYTE PTR [ecx+0x78cd767e],cl
  435373:	test   BYTE PTR [esi-0x29],dl
  435376:	mov    eax,ds:0x47a5c8fa
  43537b:	dec    esi
  43537c:	mov    dl,0x37
  43537e:	mov    bl,0xe7
  435380:	cdq    
  435381:	clc    
  435382:	mov    ds:0x3e3deffa,al
  435387:	div    BYTE PTR ds:0x67bc15ac
  43538d:	mov    al,0xfd
  43538f:	gs (bad) 
  435391:	loopne 0x435334
  435393:	adc    al,0xba
  435395:	stos   BYTE PTR es:[edi],al
  435396:	cmp    eax,0xf174e100
  43539b:	pop    ecx
  43539c:	sbb    esi,DWORD PTR [eax+0x54]
  43539f:	dec    edi
  4353a0:	scas   eax,DWORD PTR es:[edi]
  4353a1:	add    cl,BYTE PTR [edx+0x66]
  4353a4:	outs   dx,BYTE PTR ds:[esi]
  4353a5:	add    eax,0x38192f50
  4353aa:	lods   eax,DWORD PTR ds:[esi]
  4353ab:	dec    esi
	...
  4353c0:	xchg   ebp,eax
  4353c1:	push   ebx
  4353c2:	adc    BYTE PTR [eax+0x4c],bl
  4353c5:	lock add al,0x7f
  4353c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4353c9:	mov    ah,0x78
  4353cb:	push   ebx
  4353cc:	jle    0x43536e
  4353ce:	pop    ss
  4353cf:	sub    ebx,DWORD PTR gs:[eax+0x0]
  4353d3:	cli    
  4353d4:	lds    edi,FWORD PTR [ebx]
  4353d6:	ja     0x4353c7
  4353d8:	out    0x2a,eax
  4353da:	sub    bl,BYTE PTR [edx]
  4353dc:	jmp    0x69532d55
  4353e1:	std    
  4353e2:	repnz inc edx
  4353e4:	lahf   
  4353e5:	pusha  
  4353e6:	dec    ebx
  4353e7:	push   ebx
  4353e8:	popf   
  4353e9:	lods   eax,DWORD PTR ds:[esi]
  4353ea:	dec    ebp
  4353eb:	adc    ah,BYTE PTR [edx]
  4353ed:	mov    al,0x7e
  4353ef:	ret    
  4353f0:	pop    esi
  4353f1:	aaa    
  4353f2:	mov    ah,0xe7
  4353f4:	or     ecx,ebx
  4353f6:	mov    eax,ds:0xe88678a6
  4353fb:	inc    esi
  4353fc:	sbb    BYTE PTR [esi+ebx*2],ah
  4353ff:	ret    0x2014
  435402:	daa    
  435403:	push   eax
  435404:	fnsave [ebp-0x7018ad68]
  43540a:	je     0x435402
  43540c:	mov    dl,0x6
  43540e:	push   ss
  43540f:	ins    BYTE PTR es:[edi],dx
  435410:	and    eax,0x3a03e7d9
  435415:	data16 jecxz 0x4353bd
  435418:	cmp    BYTE PTR [esi-0x3a6188f6],ch
  43541e:	aaa    
  43541f:	sbb    ah,BYTE PTR [edx+0x2f]
  435422:	jmp    0x4354c2
	...
  435437:	add    BYTE PTR ds:0xe703e815,cl
  43543d:	cwde   
  43543e:	xor    al,0x0
  435440:	inc    esp
  435441:	cdq    
  435442:	mov    esi,0xac2be50a
  435447:	push   esp
  435448:	retf   
  435449:	nop
  43544a:	out    0x3,eax
  43544c:	bound  esi,QWORD PTR [ecx-0x3e0757f7]
  435452:	pop    esi
  435453:	aaa    
  435454:	out    dx,al
  435455:	dec    esi
  435456:	scas   eax,DWORD PTR es:[edi]
  435457:	pushf  
  435458:	cmp    DWORD PTR [ebx-0x7d],eax
  43545b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43545c:	out    0x95,eax
  43545e:	push   ds
  43545f:	mov    ebx,0x985f2c14
  435464:	xor    ah,BYTE PTR [esi]
  435466:	adc    cl,BYTE PTR [ebp+0x3c]
  435469:	std    
  43546a:	mov    esi,0xcdbfe550
  43546f:	add    edx,DWORD PTR [ecx]
  435471:	ret    0x4bfc
  435474:	push   eax
  435475:	sbb    eax,ebp
  435477:	and    BYTE PTR [ecx-0x61b08b2c],0x2e
  43547e:	ret    0x8a4a
  435481:	sub    eax,0xbec73401
  435486:	test   DWORD PTR [ecx],edi
  435488:	add    eax,0x73ed73c8
  43548d:	and    ebp,0xfd1cfafc
  435493:	shl    BYTE PTR [edx+0xe2a41ce],cl
  435499:	daa    
  43549a:	push   edx
  43549b:	push   es
	...
  4354b0:	ins    DWORD PTR es:[edi],dx
  4354b1:	sub    DWORD PTR [ebx],edx
  4354b3:	test   eax,0xe5c54061
  4354b8:	retf   0xe892
  4354bb:	(bad)  
  4354bd:	(bad)  
  4354be:	stc    
  4354bf:	cdq    
  4354c0:	pusha  
  4354c1:	and    al,0x5b
  4354c3:	inc    edx
  4354c4:	stc    
  4354c5:	jg     0x43551a
  4354c7:	(bad)  
  4354c8:	aad    0x3f
  4354ca:	in     eax,dx
  4354cb:	add    eax,0xde7491a5
  4354d0:	jnp    0x4354c7
  4354d2:	dec    edi
  4354d3:	ins    BYTE PTR es:[edi],dx
  4354d4:	push   esp
  4354d5:	popf   
  4354d6:	push   eax
  4354d7:	mov    dh,0x5c
  4354d9:	sub    DWORD PTR [ebx],edx
  4354db:	sub    DWORD PTR [esi+0x40],ebx
  4354de:	vpcmpeqb ymm4,ymm1,YMMWORD PTR ds:0xb80213dd
  4354e6:	add    al,0x3
  4354e8:	data16 lock into 
  4354eb:	add    eax,DWORD PTR [edx+eiz*1-0x17]
  4354ef:	mov    ecx,DWORD PTR [edx]
  4354f1:	(bad)  
  4354f2:	stc    
  4354f3:	mov    al,0xa2
  4354f5:	aas    
  4354f6:	call   0x481ad2e4
  4354fb:	cmc    
  4354fc:	(bad)  
  4354fd:	lock shr BYTE PTR [edx],0x5b
  435501:	lock pop eax
  435503:	sub    bl,BYTE PTR [ebx-0x11]
  435506:	pop    eax
  435507:	sub    ah,dl
  435509:	mov    ah,0x24
  43550b:	mov    edx,0x522b14
  435510:	adc    BYTE PTR [edx+0x2a],dh
  435513:	fild   DWORD PTR [eax]
	...
  435525:	add    BYTE PTR [eax],al
  435527:	add    BYTE PTR [eax],dl
  435529:	mov    ecx,DWORD PTR [eax+0x38e95f5c]
  43552f:	pop    ds
  435530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  435531:	inc    eax
  435532:	stos   DWORD PTR es:[edi],eax
  435533:	add    BYTE PTR [ebx-0x60b37424],cl
  435539:	shr    al,1
  43553b:	call   0xc53b:0x84f67551
  435542:	jge    0x4354e6
  435544:	dec    ebx
  435545:	fadd   QWORD PTR [eax]
  435547:	mov    eax,DWORD PTR [ebp+0x54ffb564]
  43554d:	jl     0x4354db
  43554f:	push   esp
  435550:	pop    ds
  435551:	aam    0x81
  435553:	enter  0x11b2,0x25
  435557:	sbb    al,0x13
  435559:	cmp    dh,dh
  43555b:	call   DWORD PTR [eax+edx*2]
  43555e:	gs and al,0x33
  435561:	dec    edi
  435562:	jmp    0xc79353f2
  435567:	call   0x3ad47f
  43556c:	jg     0x435503
  43556e:	je     0x43557b
  435570:	sub    BYTE PTR [ebx+0x7c463be1],0xf6
  435577:	mov    ebx,eax
  435579:	dec    edi
  43557a:	loop   0x435504
  43557c:	aaa    
  43557d:	mov    cl,0x19
  43557f:	mov    edi,esp
  435581:	mov    bh,0x1d
  435583:	mov    edi,ebx
  435585:	mov    bh,0x21
  435587:	mov    DWORD PTR [edi-0x4f],esi
  43558a:	and    eax,0x85
	...
  43559f:	add    BYTE PTR [ebp-0x1f],cl
  4355a2:	es mov edi,eax
  4355a5:	pushf  
  4355a6:	pop    ss
  4355a7:	jne    0x435576
  4355a9:	sbb    edi,DWORD PTR [ecx]
  4355ab:	pop    esi
  4355ac:	retf   0xf9e7
  4355af:	inc    ebp
  4355b0:	bound  ebx,QWORD PTR [ebx]
  4355b2:	xchg   edx,eax
  4355b3:	test   BYTE PTR [edx+0x6ee6fa8f],ah
  4355b9:	pop    edi
  4355ba:	sub    eax,0xf3c66ffb
  4355bf:	aas    
  4355c0:	bound  ebp,QWORD PTR ds:0x1d5273c5
  4355c6:	push   ecx
  4355c7:	and    al,0x42
  4355c9:	jmp    0xbf87:0xde74d8c2
  4355d0:	test   esi,0x1d0dfb2a
  4355d6:	push   ecx
  4355d7:	and    al,0x8a
  4355d9:	call   0xc0982e8b
  4355de:	cmp    DWORD PTR [edi+0x739ea3d6],0x538a947e
  4355e8:	xchg   ah,ah
  4355ea:	mov    DWORD PTR [ebx+0x7e],ecx
  4355ed:	shr    BYTE PTR [ebx+ecx*1-0x7a6157d7],1
  4355f4:	or     bl,BYTE PTR [esi]
  4355f6:	dec    edx
  4355f7:	and    al,0x42
  4355f9:	test   al,0x12
  4355fb:	fst    DWORD PTR [eax+eax*4]
  4355fe:	nop
  4355ff:	dec    ebx
  435600:	inc    esi
  435601:	pushf  
  435602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435603:	rol    DWORD PTR [eax],cl
	...
  435615:	add    BYTE PTR [eax],al
  435617:	add    BYTE PTR [ebx],cl
  435619:	jo     0x4355b9
  43561b:	test   DWORD PTR [ecx],esp
  43561d:	sbb    BYTE PTR [edi],bh
  43561f:	pop    ebp
  435620:	cdq    
  435621:	xor    eax,edx
  435623:	and    esp,DWORD PTR [ecx]
  435625:	xor    al,0xaa
  435627:	sub    edx,DWORD PTR [ecx-0x2f78c8fb]
  43562d:	fisttp WORD PTR [ebx-0x5a6f818d]
  435633:	sti    
  435634:	int3   
  435635:	inc    edi
  435636:	lahf   
  435637:	xchg   BYTE PTR [edx-0x79dbd5c7],bh
  43563d:	fldcw  WORD PTR [ecx+ebx*4+0x2e]
  435641:	int3   
  435642:	mov    ch,0x8e
  435644:	sahf   
  435645:	mov    cl,0x1d
  435647:	popf   
  435648:	test   al,0xbe
  43564a:	inc    eax
  43564b:	mov    esp,0xd6e7be9d
  435650:	lods   al,BYTE PTR ds:[esi]
  435651:	dec    esp
  435652:	stos   DWORD PTR es:[edi],eax
  435653:	out    0x75,eax
  435655:	push   eax
  435656:	xchg   ebx,eax
  435657:	out    0x6d,eax
  435659:	mov    cl,0x84
  43565b:	pushf  
  43565c:	js     0x43561c
  43565e:	imul   eax,ebx,0x68
  435661:	push   ebp
  435662:	push   edx
  435663:	add    esp,DWORD PTR [edx-0x27]
  435666:	fs aaa 
  435668:	fstp   QWORD PTR ds:[esi-0x30]
  43566c:	inc    ebp
  43566d:	stos   BYTE PTR es:[edi],al
  43566e:	(bad)  
  43566f:	mov    eax,ds:0xe7935258
  435674:	imul   edx,DWORD PTR [edx+0x1f],0xbff5a98b
  43567b:	mov    WORD PTR [eax],es
	...
  43568d:	add    BYTE PTR [eax],al
  43568f:	add    BYTE PTR [ecx-0x5e74ec0b],dl
  435695:	cmc    
  435696:	pop    ss
  435697:	mov    ecx,DWORD PTR [ecx+0x57ac1bf5]
  43569d:	mov    ds:0x98e1a1c9,eax
  4356a2:	xacquire xchg DWORD PTR [ebp-0x4ffc1827],edx
  4356a9:	push   ecx
  4356aa:	adc    ebp,eax
  4356ac:	ins    BYTE PTR es:[edi],dx
  4356ad:	mov    esi,0x196f83d4
  4356b2:	call   0xd0390045
  4356b7:	xor    al,0xdb
  4356b9:	adc    al,0xcc
  4356bb:	jecxz  0x435699
  4356bd:	leave  
  4356be:	jg     0x4356f8
  4356c0:	addr16 (bad) 
  4356c3:	mov    ebp,cs
  4356c5:	push   ebx
  4356c6:	jp     0x4356e0
  4356c8:	sub    DWORD PTR [edx+0x0],edx
  4356cb:	add    eax,0x624dddba
  4356d0:	xchg   ebx,eax
  4356d1:	mov    ch,0x2
  4356d3:	and    BYTE PTR [eax],al
  4356d5:	ret    
  4356d6:	test   DWORD PTR [ebp-0x41af223b],esi
  4356dc:	(bad)  
  4356dd:	mov    eax,gs
  4356df:	jnp    0x4356bc
  4356e1:	mov    edi,0x499e6df9
  4356e6:	adc    eax,0x2511dc97
  4356eb:	add    eax,0xe90420b6
  4356f0:	popa   
  4356f1:	push   ebp
  4356f2:	rcr    BYTE PTR [ebp+0x0],0x0
	...
  435705:	add    BYTE PTR [eax],al
  435707:	add    BYTE PTR [ebx+0x13],ch
  43570a:	ret    
  43570b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43570c:	test   edx,ebp
  43570e:	jmp    FWORD PTR [esi-0x3ab3b3d5]
  435714:	dec    ebp
  435715:	mov    ch,0xe
  435717:	in     al,dx
  435718:	popa   
  435719:	fld    DWORD PTR [ebp+0x73bfe501]
  43571f:	sub    edx,esp
  435721:	sbb    BYTE PTR ds:0x2530eed6,ah
  435727:	or     eax,0xf8747cea
  43572c:	add    cl,BYTE PTR [ecx+0x25]
  43572f:	add    eax,0x152528d7
  435734:	out    dx,eax
  435735:	(bad)  
  435736:	call   0xfa034f26
  43573b:	jae    0x435706
  43573d:	dec    ebp
  43573e:	dec    esp
  43573f:	or     eax,0x9167b4f6
  435744:	ret    
  435745:	mov    edi,0xe50a358b
  43574a:	call   0xfa032102
  43574f:	arpl   WORD PTR [esi],bx
  435751:	and    BYTE PTR [ebx+0x2c],bl
  435754:	lahf   
  435755:	cmp    al,0xc5
  435757:	add    BYTE PTR [edi-0x4813856b],ch
  43575d:	add    eax,0x4e645654
  435762:	jne    0x435788
  435764:	mov    ds:0x1a8be34d,eax
  435769:	push   ebx
  43576a:	idiv   BYTE PTR [ecx+0x0]
	...
  43577d:	add    BYTE PTR [eax],al
  43577f:	add    BYTE PTR [eax+0x3b15f603],dh
  435785:	(bad)  
  435786:	cmp    DWORD PTR [eax],eax
  435788:	add    BYTE PTR [eax-0x7c],ah
  43578b:	call   FWORD PTR [esp+edx*8-0x14cf3fd6]
  435792:	or     esi,0xfffc7f23
  435798:	dec    esp
  435799:	dec    ebx
  43579a:	dec    ebp
  43579b:	and    al,0x93
  43579d:	dec    ebp
  43579e:	shr    eax,0x2d
  4357a1:	pop    esi
  4357a2:	idiv   bh
  4357a4:	add    BYTE PTR [eiz*1-0x7d82c7d8],al
  4357ab:	enter  0xfcd3,0x24
  4357af:	adc    dl,dl
  4357b1:	add    al,0x25
  4357b3:	adc    al,0xc2
  4357b5:	adc    al,0x25
  4357b7:	sbb    dl,al
  4357b9:	cld    
  4357ba:	and    al,0x1c
  4357bc:	adc    eax,eax
  4357be:	fdivr  st,st(6)
  4357c0:	or     al,0x51
  4357c2:	mov    ecx,0x13705c74
  4357c7:	push   DWORD PTR [edi-0x3274da4f]
  4357cd:	add    edx,DWORD PTR [eax+ebp*8+0xa]
  4357d1:	mov    al,ds:0x8580fff7
  4357d6:	or     dh,0x23
  4357d9:	xchg   esi,eax
  4357da:	iret   
  4357db:	(bad)  
  4357dc:	mov    esp,0xea75b950
  4357e1:	push   0x2445
	...
  4357f6:	add    BYTE PTR [eax],al
  4357f8:	(bad)
  4357fd:	dec    ebx
  4357fe:	cdq    
  4357ff:	xchg   dl,dl
  435801:	sub    al,0x93
  435803:	je     0x4357ba
  435805:	data16 (bad) 
  435807:	scas   al,BYTE PTR es:[edi]
  435808:	arpl   WORD PTR ds:0x5a522451,si
  43580e:	rcl    edx,0xb4
  435811:	xor    al,BYTE PTR [edi+0x407c0dbe]
  435817:	push   edi
  435818:	loope  0x435807
  43581a:	clc    
  43581b:	mov    ebp,0xeb7eb26a
  435820:	push   esi
  435821:	pop    edi
  435822:	cmp    BYTE PTR [edx-0x27],dl
  435825:	sub    dh,cl
  435827:	(bad)  
  435828:	sub    eax,0x42245135
  43582d:	cmp    DWORD PTR [ecx],esi
  43582f:	and    al,0x4a
  435831:	dec    ecx
  435832:	inc    ecx
  435833:	and    al,0x42
  435835:	jmp    0xbf88:0xe265f800
  43583c:	ins    DWORD PTR es:[edi],dx
  43583d:	xor    al,0x4a
  43583f:	add    DWORD PTR [edx-0x50],esp
  435842:	daa    
  435843:	adc    al,0xdf
  435845:	je     0x435828
  435847:	aaa    
  435848:	scas   eax,DWORD PTR es:[edi]
  435849:	pusha  
  43584a:	call   0xe100:0x3da29214
  435851:	ins    BYTE PTR es:[edi],dx
  435852:	or     eax,ebp
  435854:	out    0xf0,al
  435856:	add    al,0x0
  435858:	xlat   BYTE PTR ds:[ebx]
  435859:	cld    
  43585a:	call   0x435876
	...
  43586f:	add    bl,bl
  435871:	inc    ebx
  435872:	(bad)  
  435873:	jmp    DWORD PTR [edx+0x49]
  435876:	inc    edx
  435877:	and    al,0x52
  435879:	test   al,0xf0
  43587b:	cmc    
  43587c:	add    eax,0x88ef8684
  435881:	test   al,0x8c
  435883:	jae    0x4358c3
  435885:	(bad)  
  435887:	mov    WORD PTR [ecx-0xb],?
  43588a:	mov    DWORD PTR [eax-0x21],0xbf87e2c3
  435891:	(bad)  
  435893:	add    ebx,ebp
  435895:	cmp    eax,0xa77cfbcc
  43589a:	outs   dx,BYTE PTR ds:[esi]
  43589b:	(bad)  
  43589c:	rol    ah,1
  43589e:	ins    BYTE PTR es:[edi],dx
  43589f:	mov    cl,0x68
  4358a1:	push   esp
  4358a2:	xchg   edi,eax
  4358a3:	add    esp,DWORD PTR [edx-0x27]
  4358a6:	je     0x4358af
  4358a8:	jno    0x4358f9
  4358aa:	mov    ebx,DWORD PTR cs:[ecx]
  4358ad:	cmc    
  4358ae:	cli    
  4358af:	mov    bh,BYTE PTR [ebx+0x201257fe]
  4358b5:	dec    esp
  4358b6:	sar    ebx,1
  4358b8:	in     al,0xc9
  4358ba:	arpl   sp,cx
  4358bc:	push   cs
  4358bd:	xor    DWORD PTR [esi+0x44578f7],edi
  4358c3:	lock out 0x16,al
  4358c6:	in     al,dx
  4358c7:	xor    ebp,DWORD PTR [ecx-0x1c]
  4358ca:	mov    bl,0xf5
  4358cc:	and    eax,0x69c766d9
  4358d1:	push   esp
  4358d2:	daa    
  4358d3:	sbb    BYTE PTR [eax],al
	...
  4358e5:	add    BYTE PTR [eax],al
  4358e7:	add    BYTE PTR [edi+0x7de7ab4e],ah
  4358ed:	mov    al,ch
  4358ef:	mov    WORD PTR [edx+edx*2-0x5d],es
  4358f3:	out    0x50,eax
  4358f5:	das    
  4358f6:	sar    BYTE PTR [ebx],1
  4358f8:	xor    eax,0x74abe6a2
  4358fd:	fwait
  4358fe:	push   ebp
  4358ff:	into   
  435900:	fadd   QWORD PTR [esp+ecx*1-0x10]
  435904:	loope  0x435895
  435906:	fiadd  DWORD PTR [esi+0x3e7d8ed]
  43590c:	test   cl,ah
  43590e:	sbb    al,0x37
  435910:	xlat   BYTE PTR ds:[ebx]
  435911:	adc    al,0x1
  435913:	or     eax,0x158c0a1a
  435918:	or     bl,dl
  43591a:	mov    esi,DWORD PTR ds:0x4fe8f5fa
  435920:	dec    eax
  435921:	mov    esi,0x44a66cf9
  435926:	push   edi
  435927:	bound  esi,QWORD PTR [edx]
  435929:	cmc    
  43592a:	sbb    al,0x91
  43592c:	mov    ecx,0xb37efa43
  435931:	mov    ds:0xd9666de7,al
  435936:	add    BYTE PTR [ebx+0x12],ah
  435939:	cmc    
  43593a:	adc    DWORD PTR [edx+0x1a],esi
  43593d:	cmc    
  43593e:	xor    BYTE PTR [eax],ah
  435940:	arpl   WORD PTR [esi+0x8],ax
  435943:	add    ah,BYTE PTR [ebx-0x4]
  435946:	adc    BYTE PTR [ebx],0x69
  435949:	fnstenv [edx-0x6d]
	...
  435960:	stos   DWORD PTR es:[edi],eax
  435961:	scas   eax,DWORD PTR es:[edi]
  435962:	ins    DWORD PTR es:[edi],dx
  435963:	loopne 0x43593f
  435965:	xchg   edi,eax
  435966:	and    eax,0x57e1482c
  43596b:	push   eax
  43596c:	iret   
  43596d:	shl    BYTE PTR [ebp+0x29],0x6e
  435971:	or     DWORD PTR [edx+edi*4-0x3a],edx
  435975:	in     al,0x50
  435977:	jmp    DWORD PTR [ecx+0x72257dd9]
  43597d:	pop    edi
  43597e:	dec    esp
  43597f:	int    0x56
  435981:	aas    
  435982:	sbb    DWORD PTR [ecx-0x6da4ec6],esp
  435988:	dec    edx
  435989:	xchg   ecx,eax
  43598a:	xchg   DWORD PTR [ebp+0x3d],ebp
  43598d:	shl    DWORD PTR ds:0xfa30f8d1,1
  435993:	faddp  st(6),st
  435995:	pop    edi
  435996:	je     0x4359a5
  435998:	bound  esp,QWORD PTR [eax+0x7c]
  43599b:	add    eax,0x16c016
  4359a0:	nop
  4359a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4359a2:	loope  0x43596b
  4359a4:	mov    ds:0xde8bf656,al
  4359a9:	addr16 inc ebp
  4359ab:	and    al,0xfb
  4359ad:	popa   
  4359ae:	cld    
  4359af:	call   0x392cab
  4359b4:	jo     0x435a02
  4359b6:	test   dh,dh
  4359b8:	jg     0x435969
  4359ba:	dec    esi
  4359bb:	mov    ecx,DWORD PTR ds:0xbb008f14
  4359c1:	fsub   st(0),st
  4359c3:	fild   WORD PTR [eax]
	...
  4359d5:	add    BYTE PTR [eax],al
  4359d7:	add    BYTE PTR [ebp+edx*2-0xa],cl
  4359db:	mov    eax,DWORD PTR ds:0x25e8d163
  4359e1:	shl    ebp,cl
  4359e3:	push   DWORD PTR [esi]
  4359e5:	sub    BYTE PTR ds:0xf0431320,ah
  4359eb:	push   DWORD PTR [edx+eiz*2]
  4359ee:	mov    edx,0x51f7c55f
  4359f3:	cmp    DWORD PTR [edi],0xffffff98
  4359f6:	mov    edx,0x53e9ea51
  4359fb:	push   esi
  4359fc:	add    ch,BYTE PTR [eax]
  4359fe:	and    eax,0x4d67cc10
  435a03:	and    al,0x6b
  435a05:	adc    ecx,DWORD PTR [edi-0x17238500]
  435a0b:	(bad)  [ebx+0x55]
  435a0e:	test   BYTE PTR [ebx-0x7a2d7585],0x4d
  435a15:	iret   
  435a16:	cmp    al,0x8b
  435a18:	idiv   DWORD PTR [edi-0x76ec95f7]
  435a1e:	retf   
  435a1f:	mov    ecx,DWORD PTR [edx-0x410a1209]
  435a25:	outs   dx,DWORD PTR ds:[esi]
  435a26:	je     0x435a53
  435a28:	mov    dh,0xc1
  435a2a:	xor    BYTE PTR [ebx-0xb266f9e],cl
  435a30:	xchg   ecx,eax
  435a31:	in     al,0x2a
  435a33:	adc    al,0xd
  435a35:	mul    al
  435a37:	pop    ss
  435a38:	xlat   BYTE PTR ds:[ebx]
  435a39:	inc    BYTE PTR [eax]
  435a3b:	push   eax
	...
  435a50:	std    
  435a51:	xchg   esp,eax
  435a52:	sub    DWORD PTR [edx],edx
  435a54:	mov    ds:0x5ec382c2,al
  435a59:	inc    ebp
  435a5a:	lds    esi,FWORD PTR [ebx+0x5b]
  435a5d:	inc    ebx
  435a5e:	mov    esi,0x124d9917
  435a63:	fmulp  st(1),st
  435a65:	ret    
  435a66:	push   edx
  435a67:	add    cl,bl
  435a69:	outs   dx,DWORD PTR ds:[esi]
  435a6a:	lods   al,BYTE PTR ds:[esi]
  435a6b:	daa    
  435a6c:	dec    ebx
  435a6d:	aaa    
  435a6e:	xchg   esi,eax
  435a6f:	test   DWORD PTR [ecx+0x195d36ce],esp
  435a75:	leave  
  435a76:	cmp    edi,DWORD PTR [edi-0x78d187ef]
  435a7c:	mov    al,0x3c
  435a7e:	int3   
  435a7f:	jae    0x435ad0
  435a81:	inc    ebp
  435a82:	(bad)  
  435a83:	jae    0x435ad0
  435a85:	sbb    dh,BYTE PTR [esi]
  435a87:	jns    0x435a16
  435a89:	push   ds
  435a8a:	mov    dh,bh
  435a8c:	fcomip st,st(6)
  435a8e:	(bad)  
  435a90:	xor    BYTE PTR [edx],al
  435a92:	stos   BYTE PTR es:[edi],al
  435a93:	daa    
  435a94:	or     al,0x3b
  435a96:	scas   al,BYTE PTR es:[edi]
  435a97:	mov    eax,0xfffdc1ca
  435a9c:	jp     0x435a45
  435a9e:	mov    ?,edx
  435aa0:	pop    ebp
  435aa1:	cmp    al,0xc6
  435aa3:	test   DWORD PTR [edx],edi
  435aa5:	fldenv [edi-0x751fb289]
  435aab:	mov    esi,0x2bc739
  435ab0:	jno    0x435a84
  435ab2:	pop    ebx
  435ab3:	xchg   edi,eax
	...
  435ac8:	(bad)  
  435ac9:	sar    ch,0xe7
  435acc:	push   ecx
  435acd:	(bad)  
  435acf:	call   0xcdd:0x3f3a1728
  435ad6:	pop    edi
  435ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435ad8:	mov    dl,0x8
  435ada:	xor    dh,BYTE PTR [ebx]
  435adc:	in     eax,0xb0
  435ade:	je     0x435b10
  435ae0:	push   es
  435ae1:	jno    0x435b43
  435ae3:	add    esp,DWORD PTR [edx-0x27]
  435ae6:	mov    edi,0xaab6edec
  435aeb:	mov    ?,ebp
  435aed:	pop    esp
  435aee:	cdq    
  435aef:	sqrtps xmm4,XMMWORD PTR [edx+0x24]
  435af3:	cwde   
  435af4:	inc    edi
  435af5:	into   
  435af6:	(bad)  
  435af7:	mov    ch,0x3a
  435af9:	scas   al,BYTE PTR es:[edi]
  435afa:	cwde   
  435afb:	sbb    BYTE PTR [edi+0x16dcf12c],0xb5
  435b02:	cmc    
  435b03:	(bad)  
  435b04:	jmp    0x7fa7:0xdd0c7ede
  435b0b:	js     0x435b42
  435b0d:	mov    dh,0x62
  435b0f:	(bad)  
  435b10:	mov    bl,0x16
  435b12:	outs   dx,DWORD PTR ds:[esi]
  435b13:	sar    DWORD PTR [ebx],0xa0
  435b16:	es xor BYTE PTR ss:[esi],cl
  435b1a:	pop    edi
  435b1b:	xchg   ebp,eax
  435b1c:	out    0xa0,al
  435b1e:	mov    ebx,0xb3afded3
  435b23:	out    0x4,eax
  435b25:	scas   eax,DWORD PTR es:[edi]
  435b26:	fimul  DWORD PTR [esi+0x1b17c193]
	...
  435b40:	imul   esi,DWORD PTR [esi-0x49216492],0x928fff94
  435b4a:	(bad)  
  435b4b:	jmp    0xd8ea:0x5c3262b3
  435b52:	out    0x3,eax
  435b54:	cmp    dl,BYTE PTR [esi-0xf]
  435b57:	cdq    
  435b58:	cmp    BYTE PTR [edx+0x0],ah
  435b5b:	es out 0x8d,eax
  435b5e:	call   0xf9f5a4f2
  435b63:	shr    BYTE PTR [esi],cl
  435b65:	cmp    al,0x1
  435b67:	sbb    dl,ah
  435b69:	jo     0x435b02
  435b6b:	jmp    0x682c34d1
  435b70:	lock mov dl,0xf9
  435b73:	jae    0x435b3b
  435b75:	adc    bl,BYTE PTR [ebx+0x73]
  435b78:	daa    
  435b79:	movsx  ebx,BYTE PTR [edi+eiz*8]
  435b7d:	ror    DWORD PTR [edi+0x18],0x30
  435b81:	or     al,BYTE PTR [esi-0x2f32260]
  435b87:	pusha  
  435b88:	pop    esp
  435b89:	mov    dh,0xf9
  435b8b:	jmp    0x8f34a999
  435b90:	jmp    0x435bf0
  435b92:	lock ins BYTE PTR es:[edi],dx
  435b94:	lock sub DWORD PTR [eax],ebx
  435b97:	jb     0x435c16
  435b99:	mov    ch,0x2d
  435b9b:	fwait
  435b9c:	sbb    DWORD PTR [edi-0x559e1701],ecx
  435ba2:	out    dx,eax
  435ba3:	ins    BYTE PTR es:[edi],dx
	...
  435bb8:	in     al,dx
  435bb9:	sub    al,0x8
  435bbb:	and    BYTE PTR ds:0xe8ed6eb5,ah
  435bc1:	(bad)  
  435bc3:	loopne 0x435ba3
  435bc5:	lahf   
  435bc6:	call   0xf9f5c5be
  435bcb:	cli    
  435bcc:	rcl    DWORD PTR [edx],cl
  435bce:	xchg   BYTE PTR [edi],ch
  435bd0:	cmp    BYTE PTR [eax+0xa339abd],ah
  435bd6:	xchg   BYTE PTR [ebx],bl
  435bd8:	in     eax,0xa0
  435bda:	je     0x435bb6
  435bdc:	fsubr  QWORD PTR [edx-0x5877398c]
  435be2:	aad    0xe8
  435be4:	popa   
  435be5:	fld    DWORD PTR [ebp+0x33856500]
  435beb:	js     0x435c29
  435bed:	push   edx
  435bee:	cmp    al,0xc6
  435bf1:	push   edx
  435bf2:	je     0x435bf8
  435bf4:	jmp    0x656c3e6e
  435bf9:	data16 into 
  435bfb:	mov    ecx,0xd8e1
  435c00:	and    esp,eax
  435c02:	out    dx,al
  435c03:	call   FWORD PTR [esi+eiz*2]
  435c06:	(bad)  
  435c07:	mov    al,bl
  435c09:	add    cl,0x77
  435c0c:	mov    esp,0xa110e251
  435c11:	(bad)  [ecx]
  435c13:	shl    BYTE PTR [edx+0x36],cl
  435c16:	cli    
  435c17:	(bad)  
  435c18:	sti    
  435c19:	sub    cl,0xf5
	...
  435c30:	cld    
  435c31:	push   ecx
  435c32:	sbb    eax,0xffffff8c
  435c35:	out    dx,eax
  435c36:	add    bl,0x90
  435c39:	sahf   
  435c3a:	push   esp
  435c3b:	mov    ebp,edi
  435c3d:	out    0x4f,eax
  435c3f:	push   esi
  435c40:	push   esp
  435c41:	data16 clc 
  435c43:	lea    edx,[esi+0x51]
  435c46:	mov    eax,0xd8bb96
  435c4b:	call   0x39a609
  435c50:	adc    BYTE PTR [eax-0x7c],cl
  435c53:	div    BYTE PTR [edi+0x1f4582a9]
  435c59:	push   es
  435c5a:	cmp    DWORD PTR [ebx],esi
  435c5c:	imul   ebp,edi,0x6e06f1ed
  435c62:	je     0x435c6d
  435c64:	jb     0x435c81
  435c66:	std    
  435c67:	jb     0x435bf0
  435c69:	pop    edi
  435c6a:	(bad)  
  435c6b:	jmp    0xc8f5:0xe8c76572
  435c72:	cmc    
  435c73:	jmp    DWORD PTR [edx-0x71]
  435c76:	(bad)  
  435c77:	pop    edx
  435c78:	fsincos 
  435c7a:	aaa    
  435c7b:	leave  
  435c7c:	and    DWORD PTR [ebp-0x74],edx
  435c7f:	jmp    0x435c14
  435c81:	push   ecx
  435c82:	das    
  435c83:	push   ebx
  435c84:	enter  0x8c66,0xf8
  435c88:	fisttp WORD PTR [ecx+edx*4+0x58]
  435c8c:	cmp    al,BYTE PTR [eax+0x271dfa8a]
  435c92:	xchg   ebp,eax
  435c93:	test   BYTE PTR [eax],al
	...
  435ca5:	add    BYTE PTR [eax],al
  435ca7:	add    BYTE PTR [esi+edx*1],cl
  435caa:	jmp    0x5136:0x26a6a786
  435cb1:	push   eax
  435cb2:	cmp    esi,ebx
  435cb4:	repz cmp al,0xaf
  435cb7:	je     0x435d24
  435cb9:	test   eax,0xbe70fc48
  435cbe:	mov    WORD PTR [edx],es
  435cc0:	stc    
  435cc1:	test   al,0x86
  435cc3:	leave  
  435cc4:	retf   0xa8b
  435cc7:	sti    
  435cc8:	aad    0x8e
  435cca:	mov    ebx,DWORD PTR [edx-0x27]
  435ccd:	jnp    0x435d01
  435ccf:	leave  
  435cd0:	mov    eax,ds:0xe1eb85d4
  435cd5:	pop    ebp
  435cd6:	pushf  
  435cd7:	push   eax
  435cd8:	adc    esp,edx
  435cda:	sub    DWORD PTR [edi+0x73cc3cb0],eax
  435ce0:	je     0x435d27
  435ce2:	mov    esi,DWORD PTR [ebx+0x48]
  435ce5:	xchg   DWORD PTR [ebx-0x530c16cb],ecx
  435ceb:	pop    ebp
  435cec:	adc    eax,0x8a869223
  435cf1:	inc    esp
  435cf2:	xchg   edx,eax
  435cf3:	je     0x435d5b
  435cf5:	mov    al,0xb6
  435cf7:	out    0x3e,al
  435cf9:	push   esp
  435cfa:	daa    
  435cfb:	fs fxch st(2)
  435cfe:	cmp    ebp,eax
  435d00:	xor    ecx,ebx
  435d02:	sbb    al,0x97
  435d04:	pop    eax
  435d05:	pop    edi
  435d06:	sub    cl,BYTE PTR [edx+0xe15c22d]
	...
  435d20:	dec    ecx
  435d21:	mov    bl,0xfe
  435d23:	add    eax,0x1f8dd9bc
  435d28:	lea    eax,[edi-0x53a65460]
  435d2e:	repnz xchg esi,eax
  435d30:	out    0x91,eax
  435d32:	mov    dh,BYTE PTR ds:0x8b3e96dc
  435d38:	push   es
  435d39:	adc    eax,0xfd9982a7
  435d3e:	jmp    0x435d43
  435d40:	xchg   esi,eax
  435d41:	cld    
  435d42:	pop    esi
  435d43:	inc    esp
  435d44:	pop    edx
  435d45:	pop    esp
  435d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d47:	addps  xmm4,xmm6
  435d4a:	mov    al,0x83
  435d4c:	sub    eax,0xe2093cd9
  435d51:	xor    ecx,ebp
  435d53:	add    ebp,DWORD PTR [esi-0x1c]
  435d56:	sub    bl,bl
  435d58:	sub    ebp,edi
  435d5a:	jecxz  0x435d6b
  435d5c:	aad    0xf2
  435d5e:	jle    0x435d0a
  435d60:	lea    edi,[esi-0x40fa2d1e]
  435d66:	out    0x8a,al
  435d68:	and    ah,cl
  435d6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435d6b:	push   DWORD PTR [ebp+0x2d9c5f0b]
  435d71:	repnz out 0xf,eax
  435d74:	pop    esi
  435d75:	out    0x27,eax
  435d77:	stos   BYTE PTR es:[edi],al
  435d78:	cmp    BYTE PTR [ebx+ebx*2],cl
  435d7b:	(bad)  
  435d7d:	in     eax,0x3f
  435d7f:	pop    ebx
  435d80:	mov    BYTE PTR [edx+0x8a4a],dh
	...
  435d96:	add    BYTE PTR [eax],al
  435d98:	jge    0x435df6
  435d9a:	push   esp
  435d9b:	adc    BYTE PTR [esi-0x19],ah
  435d9e:	daa    
  435d9f:	stos   BYTE PTR es:[edi],al
  435da0:	pop    ds
  435da1:	push   es
  435da2:	add    DWORD PTR [edi-0x3f175a28],ebx
  435da8:	nop
  435da9:	mov    al,0xf9
  435dab:	jb     0x435d51
  435dad:	fisttp QWORD PTR [ebx+0x59645e99]
  435db3:	loope  0x435d8f
  435db5:	lds    ebp,FWORD PTR [edx]
  435db7:	ret    0xb31b
  435dba:	push   es
  435dbb:	cwde   
  435dbc:	jae    0x435dca
  435dbe:	cli    
  435dbf:	aam    0x71
  435dc1:	mov    DWORD PTR [eax-0x17],0x6205273e
  435dc8:	je     0x435da7
  435dca:	jge    0x435d79
  435dcc:	push   0x32
  435dce:	imul   eax
  435dd0:	fiadd  WORD PTR fs:[ebp+0x7321b9e2]
  435dd7:	into   
  435dd8:	out    dx,eax
  435dd9:	xor    bl,BYTE PTR [esi]
  435ddb:	jmp    0xd2487cb6
  435de0:	neg    DWORD PTR [edx-0x3b]
  435de3:	shr    DWORD PTR [ebp+ebp*1-0x6],0xae
  435de8:	sub    al,0x69
  435dea:	inc    DWORD PTR [ecx-0x6b]
  435ded:	push   cs
  435dee:	mov    edi,0x3a761e5
  435df3:	jmp    0xe8447b7e
  435df8:	push   esp
  435df9:	hlt    
  435dfa:	push   edx
  435dfb:	inc    edi
	...
  435e10:	jmp    0x13ae:0x87e9453f
  435e17:	mov    DWORD PTR [eax+0x5e4900f1],esi
  435e1d:	ds inc ebp
  435e1f:	jmp    0xfeb7372d
  435e24:	loop   0x435e22
  435e26:	mov    esp,0xd94db3
  435e2b:	frstor [eax-0x69]
  435e2e:	add    eax,DWORD PTR [eax]
  435e30:	mov    ebp,0x8b0044ee
  435e35:	je     0x435e3b
  435e37:	add    al,0xa4
  435e39:	icebp  
  435e3a:	add    BYTE PTR [ebx+esi*8],dh
  435e3d:	sbb    al,0x1
  435e3f:	mov    ds:0x44f64b,al
  435e44:	or     eax,0x49dc1446
  435e49:	sbb    eax,0x785e01
  435e4e:	sub    ah,0xc8
  435e51:	add    DWORD PTR ds:0x4fb4fe8b,0x4de4ae8b
  435e5b:	mov    esi,edi
  435e5d:	push   esp
  435e5e:	mov    WORD PTR [ebp+0x3f],es
  435e61:	in     eax,dx
  435e62:	mov    eax,DWORD PTR [ebp+0x6b]
  435e65:	in     eax,0xf5
  435e67:	jne    0x435e80
  435e69:	(bad)  
  435e6a:	clc    
  435e6b:	mov    esp,DWORD PTR [esi-0x1f]
  435e6e:	mov    ebp,0x8d30bf45
  435e73:	inc    eax
	...
  435e88:	or     esp,DWORD PTR [esp+esi*2-0x4]
  435e8c:	and    esp,eax
  435e8e:	lods   al,BYTE PTR ds:[esi]
  435e8f:	(bad)  
  435e90:	mov    ah,0x2f
  435e92:	mov    edx,0xf159b174
  435e97:	add    DWORD PTR [edi-0x4f],ebp
  435e9a:	jp     0x435e5c
  435e9c:	neg    BYTE PTR [ecx-0xf]
  435e9f:	add    DWORD PTR [esi+edx*8+0x62],ebp
  435ea3:	call   DWORD PTR [ecx-0x2b]
  435ea6:	mov    ecx,DWORD PTR [ebp-0x58]
  435ea9:	jmp    0x435ef9
  435eab:	dec    DWORD PTR [ebp+edx*1+0x7a]
  435eaf:	les    ecx,FWORD PTR [ebx+0x30ffc159]
  435eb5:	fadd   DWORD PTR [ecx+0x44619b4d]
  435ebb:	adc    al,0x62
  435ebd:	mov    ecx,0x75d9103e
  435ec2:	fstp   QWORD PTR [edx+0x1c]
  435ec5:	jmp    0x45a57a89
  435eca:	mov    bl,ch
  435ecc:	adc    edx,DWORD PTR [ebx-0x78]
  435ecf:	sbb    al,0xa6
  435ed1:	dec    esp
  435ed2:	cmp    DWORD PTR [eax],eax
  435ed4:	mov    ah,0x2b
  435ed6:	or     ecx,DWORD PTR [eax]
  435ed8:	lods   eax,DWORD PTR ds:[esi]
  435ed9:	xor    eax,0xdab7738c
  435ede:	stc    
  435edf:	sbb    al,BYTE PTR [ebp-0x21]
  435ee2:	jns    0x435ea3
  435ee4:	mov    dh,0x66
  435ee6:	daa    
  435ee7:	add    eax,ecx
  435ee9:	shr    DWORD PTR [ebx],0x66
	...
  435f00:	popa   
  435f01:	cmp    ecx,ecx
  435f03:	out    0x6d,eax
  435f05:	cmp    eax,0xd1dfa94
  435f0a:	cmc    
  435f0b:	xchg   BYTE PTR [edx],bl
  435f0d:	(bad)  
  435f0e:	pop    ss
  435f0f:	or     al,0xe7
  435f11:	xchg   BYTE PTR [edi],dl
  435f13:	pop    es
  435f14:	lods   al,BYTE PTR ds:[esi]
  435f15:	lahf   
  435f16:	aaa    
  435f17:	adc    al,0xe1
  435f19:	jge    0x435f1b
  435f1b:	xchg   edx,esi
  435f1d:	mov    ch,dh
  435f1f:	cli    
  435f20:	ja     0x435eb0
  435f22:	add    BYTE PTR [edx-0x23dee],0x48
  435f29:	shl    DWORD PTR [esi],0x50
  435f2c:	sub    al,0x2b
  435f2e:	mov    edx,0x8d4720e7
  435f33:	cli    
  435f34:	(bad)  [esi+0x79]
  435f37:	out    dx,eax
  435f38:	retf   0x1875
  435f3b:	cli    
  435f3c:	mov    ch,0x49
  435f3e:	or     BYTE PTR [ebx],bl
  435f40:	lods   eax,DWORD PTR ds:[esi]
  435f41:	es jp  0x435f05
  435f44:	mov    ecx,0x72748e8c
  435f49:	fldenv [edx+0x19]
  435f4c:	popw   es
  435f4e:	pop    ebx
  435f4f:	cmp    DWORD PTR [esi+0x5c],esi
  435f52:	sub    eax,DWORD PTR [eax]
  435f54:	sub    DWORD PTR [edi],ecx
  435f56:	scas   eax,DWORD PTR es:[edi]
  435f57:	mov    esp,0x38e7c8bf
  435f5c:	fnstsw WORD PTR [eax+ebx*4+0x73cde536]
  435f63:	add    BYTE PTR cs:[eax],al
	...
  435f76:	add    BYTE PTR [eax],al
  435f78:	push   ds
  435f79:	fst    DWORD PTR [ecx-0x451e2982]
  435f7f:	mov    BYTE PTR [ebx+0x26],dl
  435f82:	mov    ch,0x9b
  435f84:	loopne 0x435f55
  435f86:	adc    dl,BYTE PTR [ebx+0x3f9399e1]
  435f8c:	(bad)  
  435f8d:	fmul   DWORD PTR [ebp-0x18bc6ffc]
  435f93:	jle    0x435fb9
  435f95:	ret    0x102d
  435f98:	sub    BYTE PTR [edi+0x627218ea],ch
  435f9e:	fist   WORD PTR [edx-0x6d9b2272]
  435fa4:	xchg   esi,eax
  435fa5:	loop   0x435fe0
  435fa7:	xchg   ebx,eax
  435fa8:	scas   al,BYTE PTR es:[edi]
  435fa9:	lds    esp,FWORD PTR [esi-0x39]
  435fac:	imul   esp,DWORD PTR [edx-0x49],0x34ae5b9e
  435fb3:	clc    
  435fb4:	ficom  WORD PTR [esi+0x67]
  435fb7:	add    al,0x62
  435fb9:	fnstcw WORD PTR ds:0x3a093106
  435fbf:	jg     0x435f5d
  435fc1:	shl    DWORD PTR [ecx+edx*4-0x3da15138],0xdc
  435fc9:	test   eax,0xaf36327f
  435fce:	sbb    BYTE PTR [ebx-0x6d853020],0xe4
  435fd5:	xchg   edi,eax
  435fd6:	add    BYTE PTR [edx-0x268c4d9e],al
	...
  435ff0:	lock and eax,0x5f0bf0d
  435ff6:	adc    eax,0x59e2a56a
  435ffb:	mov    bh,0x34
  435ffd:	mov    al,ds:0x461f9be
  436002:	xchg   BYTE PTR [ebp+0x2e],dl
  436005:	or     eax,DWORD PTR [esi+0x45041df4]
  43600b:	jmp    0x2e5e3fd9
  436010:	lock pop ecx
  436012:	rcr    BYTE PTR [ebp-0xe8c4cb2],0xcc
  436019:	mov    al,ds:0x9ce9ea66
  43601e:	jl     0x43602f
  436020:	shl    BYTE PTR [ebp-0x4d2f18ba],1
  436026:	stc    
  436027:	je     0x436052
  436029:	mov    bl,0x53
  43602b:	in     eax,0x76
  43602d:	adc    ecx,eax
  43602f:	sub    ebx,DWORD PTR [ecx]
  436031:	scas   al,BYTE PTR es:[edi]
  436032:	mov    al,ds:0x11544a5
  436037:	fidiv  WORD PTR [esi-0x17]
  43603a:	stc    
  43603b:	pop    ebp
  43603c:	cli    
  43603d:	(bad)  
  43603f:	push   ebp
  436040:	or     bl,dh
  436042:	stc    
  436043:	cmp    eax,0x7de8de0a
  436048:	shl    BYTE PTR [edx+0x7281aaf9],1
  43604e:	push   esi
  43604f:	and    eax,0xdd70b266
	...
  436068:	repnz sub DWORD PTR ds:0x2529f2f9,esp
  43606f:	stc    
  436070:	repnz sub DWORD PTR ds:0xfa4bd9f9,esp
  436077:	add    ah,bl
  436079:	inc    edi
  43607a:	mov    edx,0x44ff6fa1
  43607f:	add    BYTE PTR [eax*8-0x4a6800c8],ch
  436086:	or     edi,edi
  436088:	mov    bh,0xb5
  43608a:	or     edi,edi
  43608c:	mov    bh,0xb5
  43608e:	or     eax,ebp
  436090:	jbe    0x4360da
  436092:	idiv   bh
  436094:	dec    eax
  436095:	cmp    dh,BYTE PTR [esi-0xa2638a6]
  43609b:	jo     0x43610c
  43609d:	dec    eax
  43609e:	ins    DWORD PTR es:[edi],dx
  43609f:	and    al,0x8b
  4360a1:	dec    eax
  4360a2:	ins    DWORD PTR es:[edi],dx
  4360a3:	and    al,0x3b
  4360a5:	dec    edx
  4360a6:	ins    DWORD PTR es:[edi],dx
  4360a7:	and    al,0x5b
  4360a9:	push   ecx
  4360aa:	loop   0x4360aa
  4360ac:	ins    BYTE PTR es:[edi],dx
  4360ad:	dec    edx
  4360ae:	mov    edx,0x44fbafa1
  4360b3:	add    BYTE PTR [ebp+eax*8+0x48],ch
  4360b7:	push   DWORD PTR [edi-0x2a17fe4c]
  4360bd:	dec    ecx
  4360be:	idiv   bh
  4360c0:	js     0x4360fa
  4360c2:	mov    dh,0x5a
  4360c4:	(bad)  
  4360c5:	fdiv   st,st(5)
  4360c7:	jo     0x436118
  4360c9:	dec    edx
  4360ca:	ins    DWORD PTR es:[edi],dx
  4360cb:	and    al,0x0
	...
  4360dd:	add    BYTE PTR [eax],al
  4360df:	add    BYTE PTR [ebx],dl
  4360e1:	push   ecx
  4360e2:	cmp    eax,0xba4a2cff
  4360e7:	cmp    DWORD PTR [edi+0x555549c4],0xfffffff2
  4360ee:	sbb    ecx,0xfffd2c13
  4360f4:	lods   al,BYTE PTR ds:[esi]
  4360f5:	push   ebx
  4360f6:	ror    BYTE PTR [edi],cl
  4360f8:	inc    edi
  4360f9:	enter  0xffff,0xcb
  4360fd:	sub    ecx,DWORD PTR [esi+0x24]
  436100:	stos   DWORD PTR es:[edi],eax
  436101:	pop    ds
  436102:	in     al,dx
  436103:	add    BYTE PTR [edx-0x3e],ah
  436106:	std    
  436107:	out    0xfa,eax
  436109:	and    edi,esi
  43610b:	jmp    edi
  43610d:	into   
  43610e:	call   0x26fa9962
  436113:	call   0x416d0e
  436118:	loope  0x4360f0
  43611a:	call   0x4268c342
  43611f:	and    al,0x32
  436121:	cmp    eax,0xfc6a243a
  436126:	inc    ecx
  436127:	and    al,0x5a
  436129:	ror    eax,0x43
  43612c:	ds mov dh,0xf8
  43612f:	jmp    FWORD PTR [ebp-0x3e]
  436132:	jbe    0x436177
  436134:	ds loop 0x4360d3
  436137:	or     al,0x67
  436139:	ret    0x86fd
  43613c:	push   edx
  43613d:	cmp    eax,0xa1e60a98
  436142:	(bad)  
  436143:	inc    DWORD PTR [eax]
	...
  436155:	add    BYTE PTR [eax],al
  436157:	add    BYTE PTR [edx+0x35],ah
  43615a:	inc    edx
  43615b:	and    al,0x52
  43615d:	jb     0x4361db
  43615f:	(bad)  
  436160:	dec    edx
  436161:	scas   al,BYTE PTR es:[edi]
  436162:	cli    
  436163:	jmp    FWORD PTR ds:0x4e244229
  436169:	cmp    eax,0x6f5173be
  43616e:	nop
  43616f:	cmp    BYTE PTR [esi+0x3971f4de],dl
  436175:	cmp    eax,0xf1522441
  43617a:	mov    DWORD PTR [ebx],esi
  43617c:	mov    edx,0x65e7b636
  436181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436182:	std    
  436183:	(bad)  
  436184:	(bad)  [ecx+0x4bd9fb16]
  43618a:	jne    0x436158
  43618c:	retf   0x35bb
  43618f:	sti    
  436190:	aad    0xd8
  436192:	ins    BYTE PTR es:[edi],dx
  436193:	les    edx,FWORD PTR [ecx-0x22]
  436196:	outs   dx,BYTE PTR ds:[esi]
  436197:	dec    eax
  436198:	jle    0x43615f
  43619a:	sub    cl,bl
  43619c:	cmp    ebp,esi
  43619e:	not    DWORD PTR [ecx]
  4361a0:	(bad)  
  4361a1:	out    0x94,eax
  4361a3:	mov    DWORD PTR [esi+0x1980eb25],edi
  4361a9:	cmc    
  4361aa:	iret   
  4361ab:	fwait
  4361ac:	into   
  4361ad:	aam    0xe7
  4361af:	add    ebx,ebp
  4361b1:	test   al,0x6c
  4361b3:	xchg   esi,eax
  4361b4:	push   ss
  4361b5:	jne    0x43621b
  4361b7:	xchg   esi,eax
  4361b8:	pop    eax
  4361b9:	push   ebp
  4361ba:	xchg   ebx,eax
  4361bb:	add    al,0x0
	...
  4361cd:	add    BYTE PTR [eax],al
  4361cf:	add    BYTE PTR [edx-0x27],ah
  4361d2:	pop    esp
  4361d3:	inc    eax
  4361d4:	ror    DWORD PTR ds:[edi+0x53],1
  4361d8:	cwde   
  4361d9:	stos   BYTE PTR es:[edi],al
  4361da:	cmp    al,BYTE PTR [ecx+0x33d7f521]
  4361e0:	pop    ecx
  4361e1:	lds    esi,FWORD PTR [ebx]
  4361e3:	repnz xchg ebp,eax
  4361e5:	fnstenv [edi-0x8ca8972]
  4361eb:	inc    ebx
  4361ec:	bound  ebx,QWORD PTR [esi+0xf]
  4361ef:	push   ebx
  4361f0:	bound  edx,QWORD PTR [edx+ecx*1-0x1]
  4361f4:	loope  0x436241
  4361f6:	out    0x3,eax
  4361f8:	bound  edi,QWORD PTR [edi]
  4361fa:	fadd   QWORD PTR [eax+0x2cd3f591]
  436200:	or     al,dl
  436202:	push   ecx
  436203:	add    al,0x62
  436205:	out    0xd9,al
  436207:	int3   
  436208:	xchg   ecx,eax
  436209:	cmc    
  43620a:	test   DWORD PTR ds:0x56e35e67,0x375cd287
  436214:	ds int 0xcf
  436217:	mov    esp,0x88baaaa0
  43621c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43621d:	and    eax,0xe227e001
  436222:	je     0x436229
  436224:	into   
  436225:	cs loop 0x4361ba
  436228:	arpl   bx,di
  43622a:	aad    0x36
  43622c:	aad    0xc5
  43622e:	or     al,0xfa
  436230:	and    ecx,ebx
  436232:	test   BYTE PTR [edx+0x0],dh
	...
  436248:	dec    ebp
  436249:	or     esp,DWORD PTR [edi+0x19]
  43624c:	dec    eax
  43624d:	fyl2xp1 
  43624f:	mov    ah,0x59
  436251:	aas    
  436252:	inc    ebp
  436253:	jmp    0xdba82844
  436258:	and    ecx,ebx
  43625a:	test   DWORD PTR [ecx-0x26],ebx
  43625d:	test   al,0x74
  43625f:	out    dx,al
  436260:	or     BYTE PTR [eax-0x5091d018],ah
  436266:	stc    
  436267:	es pop edi
  436269:	dec    ebp
  43626a:	nop
  43626b:	test   eax,0xf9feb261
  436270:	iret   
  436271:	popa   
  436272:	xor    esi,DWORD PTR [ebp-0x75]
  436275:	adc    eax,0x25ef6401
  43627a:	xor    BYTE PTR [ebx-0x3aaba2ae],dl
  436280:	xor    eax,0xb792e911
  436285:	stos   BYTE PTR es:[edi],al
  436286:	stc    
  436287:	pop    esp
  436288:	popf   
  436289:	cmc    
  43628a:	sbb    BYTE PTR [ecx-0x24933b24],bl
  436290:	mov    eax,ds:0x752983d9
  436295:	loopne 0x43621c
  436297:	sbb    DWORD PTR [eax],esi
  436299:	mov    eax,ds:0xd963ebe8
  43629e:	add    BYTE PTR [ecx+0x6405b261],bl
  4362a4:	mov    ds:0xcfc118f5,al
  4362a9:	lahf   
  4362aa:	cli    
	...
  4362bf:	add    BYTE PTR [edi+eax*4],ah
  4362c2:	mov    ecx,0x51fa455f
  4362c7:	or     DWORD PTR [edi],0xffffffd1
  4362ca:	mov    ecx,0xe8cdc76a
  4362cf:	or     BYTE PTR [edi-0x2b],bh
  4362d2:	call   0x119dbd4
  4362d7:	mov    DWORD PTR [esi+0x75],edi
  4362da:	xor    cl,0x98
  4362dd:	or     BYTE PTR [eax+0x5529e75d],0xbc
  4362e4:	push   ecx
  4362e5:	mov    ebx,0x21e8e858
  4362ea:	cli    
  4362eb:	push   DWORD PTR [esi]
  4362ed:	loop   0x4362a3
  4362ef:	push   0x64
  4362f1:	(bad)  
  4362f2:	call   0x11871cf
  4362f7:	push   ecx
  4362f8:	push   es
  4362f9:	adc    bh,BYTE PTR [ebp-0x1e94ffb0]
  4362ff:	pop    es
  436300:	pop    ss
  436301:	pop    esp
  436302:	test   BYTE PTR [edi],0xec
  436305:	xchg   esp,eax
  436306:	mov    BYTE PTR [ebp+0x7f],al
  436309:	in     al,dx
  43630a:	mov    eax,DWORD PTR [ebp-0x31]
  43630d:	in     eax,dx
  43630e:	or     esi,0xffe25073
  436314:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  436316:	scas   al,BYTE PTR es:[edi]
  436317:	clc    
  436318:	xchg   edx,eax
  436319:	push   esi
  43631a:	test   BYTE PTR [eax],0x4b
  43631d:	and    al,BYTE PTR [ebp-0x2c]
  436320:	fst    QWORD PTR [ecx+0xfc0]
	...
  436336:	add    BYTE PTR [eax],al
  436338:	mov    edi,0xbffffd6
  43633d:	push   DWORD PTR [ecx]
  43633f:	stc    
  436340:	xor    al,0x61
  436342:	outs   dx,DWORD PTR ds:[esi]
  436343:	add    ebx,edi
  436345:	fmul   QWORD PTR [ebx+0x50ebcb4d]
  43634b:	mov    esp,DWORD PTR [edx-0x80]
  43634e:	xchg   ebp,eax
  43634f:	push   eax
  436350:	push   es
  436351:	cwde   
  436352:	mov    WORD PTR [eax-0x407d9159],cs
  436358:	push   ebp
  436359:	ds sub eax,0x7ab26201
  43635f:	inc    esp
  436360:	scas   al,BYTE PTR es:[edi]
  436361:	ret    0x8733
  436364:	pushf  
  436365:	dec    edx
  436366:	(bad)  
  436367:	jmp    0x43632e
  436369:	inc    edi
  43636a:	js     0x43635b
  43636c:	out    0x48,eax
  43636e:	cld    
  43636f:	sub    DWORD PTR [ebx],0xffffffb1
  436372:	std    
  436373:	(bad)  
  436374:	fldln2 
  436376:	mov    eax,0xfc62ab7e
  43637b:	jge    0x4363dc
  43637d:	mov    cl,0xfd
  43637f:	(bad)  
  436380:	jmp    0xfca1852
  436385:	out    dx,al
  436386:	add    bl,dl
  436388:	fld    TBYTE PTR [ebp-0x53]
  43638b:	mov    WORD PTR [ebx],fs
  43638d:	loop   0x43638f
  43638f:	ret    0x7deb
  436392:	mov    cl,0xc2
  436394:	daa    
  436395:	out    dx,al
  436396:	(bad)  
  436397:	jmp    DWORD PTR [edx-0x4e]
  43639a:	jbe    0x436410
	...
  4363b0:	cmp    edi,DWORD PTR es:[ecx+0x42635236]
  4363b7:	pop    si
  4363b9:	call   0xc7c8:0x601a4c76
  4363c0:	mov    cl,0x96
  4363c2:	and    esi,DWORD PTR [edi]
  4363c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4363c5:	(bad)  
  4363c6:	adc    al,BYTE PTR [ebx]
  4363c8:	imul   eax,DWORD PTR [eax-0x34b38aff],0xffffffed
  4363cf:	or     dl,ch
  4363d1:	lock pop ss
  4363d3:	or     al,0x5b
  4363d5:	jbe    0x43635a
  4363d7:	ins    DWORD PTR es:[edi],dx
  4363d8:	pop    ebx
  4363d9:	fldenv [eax]
  4363db:	lock jecxz 0x4363de
  4363de:	push   edi
  4363df:	add    BYTE PTR [ebx-0x7fd3504c],ah
  4363e5:	in     al,0x9f
  4363e7:	adc    DWORD PTR [esi+0xf],ebx
  4363ea:	outs   dx,DWORD PTR ds:[esi]
  4363eb:	cmp    DWORD PTR [edx],eax
  4363ed:	mov    cl,0xc6
  4363ef:	cli    
  4363f0:	(bad)  [edi+0x5bb2315e]
  4363f6:	mov    eax,ds:0xbc1de500
  4363fb:	lahf   
  4363fc:	not    DWORD PTR [eax+0x3c]
  4363ff:	mov    ds:0x7d880de4,eax
  436404:	es or  esi,0x66d85a3d
  43640b:	push   eax
  43640c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43640d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43640e:	out    0x7e,eax
  436410:	pop    edi
  436411:	fstp   QWORD PTR [esi-0x38]
	...
  436428:	fstp   QWORD PTR [ecx]
  43642a:	popa   
  43642b:	cmp    DWORD PTR [esi+0x58fbade3],ebp
  436431:	pop    esp
  436432:	jg     0x436438
  436434:	(bad)  
  436435:	fstp   DWORD PTR [esi+0x46]
  436438:	pop    esi
  436439:	push   esp
  43643a:	adc    edi,DWORD PTR [esp+eiz*8-0x21]
  43643e:	inc    BYTE PTR [ecx]
  436440:	out    dx,al
  436441:	mov    edi,0xe266436e
  436446:	test   eax,0x5e86ceff
  43644b:	inc    ebx
  43644c:	pop    edx
  43644d:	loop   0x4363f8
  43644f:	sti    
  436450:	into   
  436451:	mov    gs,WORD PTR [esi+0x43]
  436454:	outs   dx,BYTE PTR ds:[esi]
  436455:	loop   0x436400
  436457:	imul   DWORD PTR [esi+0x52435e96]
  43645d:	loop   0x436408
  43645f:	repz mov cl,0x9e
  436462:	outs   dx,BYTE PTR ds:[esi]
  436463:	inc    ebx
  436464:	jbe    0x436448
  436466:	add    BYTE PTR [edi+0x62ba2b05],ch
  43646c:	mov    eax,ds:0xf62f35c1
  436471:	sub    dh,BYTE PTR [edx+0x35c5a072]
  436477:	das    
  436478:	or     ch,BYTE PTR [ebx]
  43647a:	stos   BYTE PTR es:[edi],al
  43647b:	bound  esp,QWORD PTR [eax-0x1d0ca07]
  436481:	sub    ah,BYTE PTR [edx+0x35fd2072]
  436487:	das    
  436488:	ret    0x9a2a
  43648b:	bound  eax,QWORD PTR [eax]
	...
  43649d:	add    BYTE PTR [eax],al
  43649f:	add    BYTE PTR [eax],ah
  4364a1:	icebp  
  4364a2:	xor    eax,0x922da62f
  4364a7:	jb     0x4364c9
  4364a9:	cmc    
  4364aa:	xor    eax,0x8a2d9a2f
  4364af:	gs cld 
  4364b1:	sub    eax,0xb8e1349
  4364b6:	xchg   BYTE PTR [esi+ebx*4],bl
  4364b9:	pop    ss
  4364ba:	cli    
  4364bb:	fcom   QWORD PTR [ecx-0x35]
  4364be:	inc    eax
  4364bf:	jmp    0x74964e33
  4364c4:	sbb    al,0xe9
  4364c6:	push   eax
  4364c7:	pop    esi
  4364c8:	jb     0x4364e0
  4364ca:	adc    ebp,DWORD PTR [ecx-0xe3ad99f]
  4364d0:	xchg   esp,eax
  4364d1:	mov    sp,WORD PTR [ecx+0x465b515e]
  4364d8:	fcom   QWORD PTR ds:0xb99262dd
  4364de:	out    0x92,eax
  4364e0:	fsub   DWORD PTR [edx-0x7e758d07]
  4364e6:	aas    
  4364e7:	adc    BYTE PTR [ecx-0x23e9065e],ah
  4364ed:	adc    al,0xfd
  4364ef:	push   cs
  4364f0:	scas   eax,DWORD PTR es:[edi]
  4364f1:	addr16 in eax,0x0
  4364f4:	cs (bad) 
  4364f6:	mov    ecx,0x65274840
  4364fb:	call   0x404688
  436500:	leave  
  436501:	cdq    
  436502:	loope  0x436560
	...
  436518:	cmp    edx,ebx
  43651a:	add    dl,al
  43651c:	pop    es
  43651d:	ficom  DWORD PTR [ebx-0x75]
  436520:	pop    ds
  436521:	pop    edx
  436522:	in     eax,0x84
  436524:	sti    
  436525:	fld    DWORD PTR [eax]
  436527:	push   ebx
  436528:	inc    ebp
  436529:	call   0x4a945faf
  43652e:	loope  0x43653b
  436530:	adc    DWORD PTR [eax-0xa],edx
  436533:	cmp    DWORD PTR [esi-0x44bbabe3],0xffffffd9
  43653a:	add    eax,0xda2484
  43653f:	add    BYTE PTR [ebx-0x62],cl
  436542:	outs   dx,DWORD PTR ds:[esi]
  436543:	pop    ecx
  436544:	xchg   ebp,ebx
  436546:	add    BYTE PTR [edi],cl
  436548:	ss aaa 
  43654a:	add    DWORD PTR [eax],eax
  43654c:	mov    esp,DWORD PTR [esi]
  43654e:	lock je 0x4364f6
  436551:	ret    
  436552:	sbb    ecx,DWORD PTR [ebp-0x17a7828a]
  436558:	pop    eax
  436559:	sub    edx,edi
  43655b:	call   DWORD PTR [ecx+0x76ff4f50]
  436561:	imul   ecx,DWORD PTR [edx],0x552e7b40
  436567:	loopne 0x436559
  436569:	fs loope 0x436573
  43656c:	push   es
  43656d:	push   edx
  43656e:	test   BYTE PTR [ebp+0x7084a28b],0x3a
  436575:	fld    DWORD PTR [eax]
  436577:	xor    esp,DWORD PTR [eax+0x80452c]
	...
  43658d:	add    BYTE PTR [eax],al
  43658f:	add    BYTE PTR [ebp+0x62408a3d],bl
  436595:	mov    dl,0x2d
  436597:	lea    edx,[edi+0x2a4c71de]
  43659d:	sub    al,BYTE PTR [edx]
  43659f:	clc    
  4365a0:	and    al,0x7e
  4365a2:	add    DWORD PTR [eax],0x88954deb
  4365a8:	scas   eax,DWORD PTR es:[edi]
  4365a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4365aa:	jbe    0x436620
  4365ac:	(bad)  
  4365ad:	sub    ah,BYTE PTR [ebx]
  4365af:	lock or ah,BYTE PTR [eax]
  4365b2:	cmp    edx,0xfffffff5
  4365b5:	cmp    DWORD PTR [ebx],ecx
  4365b7:	in     al,0xdf
  4365b9:	lds    esp,FWORD PTR [eax-0xd19dd7d]
  4365bf:	out    0xf9,eax
  4365c1:	mov    cl,0xfd
  4365c3:	(bad)  
  4365c4:	jmp    0xe2b02c6
  4365c9:	in     al,0x87
  4365cb:	cli    
  4365cc:	mov    ebx,0x62fffe87
  4365d1:	dec    edx
  4365d2:	jbe    0x4365d4
  4365d4:	bound  esi,QWORD PTR [edx+0x5aba4c7c]
  4365da:	push   edx
  4365db:	push   0xffffffa5
  4365dd:	pop    ebx
  4365de:	xchg   ebp,eax
  4365df:	xchg   BYTE PTR [edx+0x23],bh
  4365e2:	mov    DWORD PTR [ebx+0x1079bba2],eax
  4365e8:	arpl   WORD PTR [edx+0x7e5786fd],si
  4365ee:	sub    eax,DWORD PTR [edx+eiz*2+0x27]
  4365f2:	cmp    esp,DWORD PTR [eax+eax*1+0x0]
	...
  436605:	add    BYTE PTR [eax],al
  436607:	add    bl,ch
  436609:	jno    0x4365d8
  43660b:	xchg   BYTE PTR [edi],ah
  43660d:	out    dx,al
  43660e:	jbe    0x436650
  436610:	cs daa 
  436612:	cmp    esp,DWORD PTR [eax-0x793a8f15]
  436618:	lahf   
  436619:	ret    0x4076
  43661c:	mov    ?,WORD PTR [edi]
  43661e:	cmp    ebx,DWORD PTR [eax+0x43a8d8db]
  436624:	in     eax,0x1d
  436626:	xor    BYTE PTR [edx-0x5e],bh
  436629:	sbb    eax,0x51d63e5f
  43662e:	test   al,0x3b
  436630:	fstp   QWORD PTR ds:0x19eb342c
  436636:	lods   al,BYTE PTR ds:[esi]
  436637:	jp     0x4365d3
  436639:	cmc    
  43663a:	jge    0x43663b
  43663c:	xlat   BYTE PTR ds:[ebx]
  43663d:	push   esp
  43663e:	push   edi
  43663f:	inc    ebx
  436640:	(bad)  
  436641:	call   0xc13302f6
  436646:	fiadd  DWORD PTR [edi+0x7fe298e1]
  43664c:	mov    cl,0xd8
  43664e:	out    0x3,eax
  436650:	fst    st(5)
  436652:	sub    DWORD PTR [edx],0x26
  436655:	fldenv [esi-0x68]
  436658:	imul   edx,DWORD PTR [esi+0x20],0xa8cc17d4
  43665f:	inc    edx
  436660:	bound  esi,QWORD PTR [ecx-0x269dd671]
  436666:	les    ebp,FWORD PTR fs:[eax+0x5e]
  43666a:	jns    0x436670
	...
  436680:	(bad)  
  436681:	fstp   DWORD PTR [esi-0x7]
  436684:	jmp    0x1d479287
  436689:	mov    ch,0xeb
  43668b:	js     0x4366b7
  43668d:	in     eax,dx
  43668e:	sub    eax,0xe816a2d5
  436693:	fwait
  436694:	lahf   
  436695:	add    eax,0x98e703e8
  43669a:	aam    0x7
  43669c:	fst    st(5)
  43669e:	xchg   ebx,eax
  43669f:	sub    ah,BYTE PTR [esi]
  4366a1:	fldenv [esi-0x68]
  4366a4:	pop    ecx
  4366a5:	push   esi
  4366a6:	mov    al,0xcb
  4366a8:	pop    ss
  4366a9:	movaps XMMWORD PTR [edx+0x62],xmm0
  4366ad:	mov    cl,0x0
  4366af:	jns    0x43672c
  4366b1:	fld    DWORD PTR [eax]
  4366b3:	fs push ds
  4366b5:	cs pop edi
  4366b7:	jb     0x4366f4
  4366b9:	pop    edi
  4366ba:	push   esi
  4366bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4366bc:	popa   
  4366bd:	and    ch,ch
  4366bf:	in     eax,0xaa
  4366c1:	adc    DWORD PTR ds:0x3e988353,edi
  4366c7:	jmp    0xe99eafc5
  4366cc:	popa   
  4366cd:	pop    esp
  4366ce:	sar    BYTE PTR [ecx+ecx*2+0x5a],0xb
  4366d3:	sub    eax,0x6a011d38
  4366d8:	aad    0xce
  4366da:	mov    esi,DWORD PTR [eax]
  4366dc:	imul   edi,DWORD PTR ss:[ecx-0x58],0xffffffa3
  4366e1:	fld1   
  4366e3:	dec    ebp
	...
  4366f8:	cmp    ebx,ecx
  4366fa:	add    BYTE PTR [ecx+eiz*4+0x2d],ch
  4366fe:	sub    esi,DWORD PTR [edx-0x26]
  436701:	pop    esi
  436702:	push   esi
  436703:	sub    eax,0xdded2266
  436708:	dec    edx
  436709:	adc    DWORD PTR [ebp+0x63],ecx
  43670c:	ss cdq 
  43670e:	ds jmp 0xe99f6bed
  436714:	popa   
  436715:	pop    esp
  436716:	rcl    BYTE PTR [edx+esi*4],0xba
  43671a:	(bad)  
  43671b:	fsubrp st(4),st
  43671d:	lahf   
  43671e:	test   BYTE PTR [ecx-0x133d259b],ch
  436724:	pop    edi
  436725:	add    BYTE PTR [ebp-0x17],al
  436728:	pop    esi
  436729:	imul   edi,edi,0xbc797451
  43672f:	ret    
  436730:	xor    eax,0x95b187d9
  436735:	mov    edx,0x9fdcf69c
  43673a:	add    BYTE PTR cs:[ebx-0x6da4a905],cl
  436741:	xchg   edi,eax
  436742:	loope  0x43678f
  436744:	xchg   ebx,eax
  436745:	pop    ebx
  436746:	div    BYTE PTR [ebx]
  436748:	jnp    0x4366d8
  43674a:	add    al,0x76
  43674c:	and    ah,dl
  43674e:	add    BYTE PTR [edi],cl
  436750:	(bad)  
  436751:	fdivr  DWORD PTR [edx+ebx*2-0x74462a01]
  436758:	jmp    0x0:0x854fa9
	...
  43676f:	add    BYTE PTR [ecx-0x37],bh
  436772:	or     BYTE PTR [ebx+0x41889dca],cl
  436778:	pop    es
  436779:	aas    
  43677a:	sub    ecx,DWORD PTR [ebx-0x29cd6176]
  436780:	cdq    
  436781:	test   BYTE PTR [edx-0x1d500bf],al
  436787:	inc    ebp
  436788:	push   eax
  436789:	ins    DWORD PTR es:[edi],dx
  43678a:	push   0x1d
  43678c:	popf   
  43678d:	and    ah,bh
  43678f:	or     BYTE PTR [ecx],0xd7
  436792:	xchg   DWORD PTR [ecx-0x39],edx
  436795:	ret    
  436796:	add    eax,0xffffff8e
  436799:	inc    edi
  43679a:	pop    edi
  43679b:	cmp    DWORD PTR [ecx-0x7672f92e],edi
  4367a1:	xlat   BYTE PTR ds:[ebx]
  4367a2:	xchg   DWORD PTR [ecx-0x39],eax
  4367a5:	mov    BYTE PTR [ecx+0x6057f85e],bh
  4367ab:	or     al,0xbb
  4367ad:	and    BYTE PTR [ecx+0xc],al
  4367b0:	inc    ebp
  4367b1:	cwde   
  4367b2:	dec    edi
  4367b3:	mov    ebx,DWORD PTR [edx]
  4367b5:	pop    ebp
  4367b6:	ja     0x4367c4
  4367b8:	jnp    0x43678b
  4367ba:	adc    dl,BYTE PTR [edi-0x38]
  4367bd:	pop    esp
  4367be:	cmp    BYTE PTR [esi+0x73],bh
  4367c1:	ror    DWORD PTR [edi],cl
  4367c3:	mov    eax,ebp
  4367c5:	mov    eax,ds:0x49620c82
  4367ca:	pushf  
  4367cb:	pmuludq mm2,QWORD PTR [edx]
  4367ce:	test   BYTE PTR [edx-0x67],al
  4367d1:	cwde   
  4367d2:	cmc    
  4367d3:	ins    DWORD PTR es:[edi],dx
	...
  4367e8:	inc    ebp
  4367e9:	inc    eax
  4367ea:	js     0x436835
  4367ec:	data16 sbb bh,dh
  4367ef:	imul   eax,DWORD PTR [ebp-0x10],0xb266617f
  4367f6:	and    BYTE PTR [ecx+0x6a],0xb2
  4367fa:	and    edi,DWORD PTR [edi+0x528e3b94]
  436800:	loop   0x436852
  436802:	icebp  
  436803:	(bad)  
  436804:	call   0x8e4f415f
  436809:	stos   DWORD PTR es:[edi],eax
  43680a:	js     0x436855
  43680c:	cmp    di,cx
  43680f:	mov    eax,0xfb11d0fa
  436814:	std    
  436815:	fbstp  TBYTE PTR [edi-0x37]
  436818:	or     ch,BYTE PTR [ebp-0x1812060f]
  43681e:	and    bh,BYTE PTR [esi+0x532bb25e]
  436824:	jmp    0xe94f493f
  436829:	popa   
  43682a:	enter  0x5a79,0xe3
  43682e:	fistp  QWORD PTR [edi+0x44]
  436831:	jle    0x436830
  436833:	jae    0x43688c
  436835:	jecxz  0x4368ae
  436837:	fucompp 
  436839:	lock add BYTE PTR [edi-0x5069d6a2],al
  436840:	aaa    
  436841:	dec    edi
  436842:	test   BYTE PTR [esi],bh
  436844:	pop    ecx
  436845:	clc    
  436846:	cld    
  436847:	ins    DWORD PTR es:[edi],dx
  436848:	test   ebx,edi
  43684a:	sub    eax,DWORD PTR [edi+0x0]
	...
  436860:	pushf  
  436861:	pop    edx
  436862:	jmp    0x2572ec72
  436867:	pop    edx
  436868:	mov    al,ds:0x2503ebd9
  43686d:	pop    es
  43686e:	into   
  43686f:	add    ah,ch
  436871:	xor    BYTE PTR [ebp+0x36545598],0x78
  436878:	sub    esi,DWORD PTR [ecx-0x5faa2e33]
  43687e:	arpl   bx,ax
  436880:	rcl    eax,1
  436882:	mov    ebp,0xd4a0b000
  436887:	fwait
  436888:	push   ecx
  436889:	sbb    eax,ebp
  43688b:	js     0x4368d2
  43688d:	push   esi
  43688e:	adc    DWORD PTR [esi],ecx
  436890:	inc    esi
  436891:	jmp    FWORD PTR [esi-0x4ab7140]
  436897:	jg     0x43689a
  436899:	mov    eax,ds:0xc699766
  43689e:	xchg   edx,eax
  43689f:	sub    al,0x9
  4368a1:	es in  al,0x78
  4368a4:	das    
  4368a5:	mov    al,ds:0xa1e4fb74
  4368aa:	jo     0x43688c
  4368ac:	inc    ecx
  4368ad:	shl    DWORD PTR [eax+0x0],0x46
  4368b1:	mov    ebp,0xc50219d2
  4368b6:	daa    
  4368b7:	add    al,0xe5
  4368b9:	test   al,0x6c
  4368bb:	jp     0x436925
  4368bd:	push   ebp
  4368be:	popa   
  4368bf:	add    al,0x62
  4368c1:	(bad)  
  4368c3:	mov    edx,0x0
	...
  4368d8:	push   ss
  4368d9:	int    0x5c
  4368db:	enter  0xcd81,0x37
  4368df:	adc    esi,ecx
  4368e1:	adc    eax,0xdb47daf0
  4368e6:	test   al,0x65
  4368e8:	push   ebp
  4368e9:	aam    0x9f
  4368eb:	aad    0x7
  4368ed:	(bad)  [edi]
  4368ef:	mov    BYTE PTR [ebp-0x77261861],dl
  4368f5:	lds    eax,FWORD PTR [eax]
  4368f7:	mov    cl,0x6a
  4368f9:	sbb    DWORD PTR [ecx],eax
  4368fb:	fs es and eax,0xb6f81a05
  436902:	push   esi
  436903:	jb     0x43689f
  436905:	sti    
  436906:	or     al,0x6a
  436908:	out    0xa2,al
  43690a:	jae    0x4368ae
  43690c:	in     al,dx
  43690d:	frstor [eax]
  43690f:	fsub   QWORD PTR [ecx]
  436911:	lahf   
  436912:	cmp    DWORD PTR [bx+si],ebp
  436915:	pop    eax
  436916:	fidiv  DWORD PTR [esi]
  436918:	test   eax,0x61e900cd
  43691d:	rcl    DWORD PTR [eax-0x6d],1
  436920:	mov    cl,0x8
  436922:	xchg   ah,dl
  436924:	(bad)
  436927:	jmp    0xb5c8f20c
  43692c:	inc    ebp
  43692d:	leave  
  43692e:	stc    
  43692f:	jl     0x436996
  436931:	push   esi
  436932:	dec    esp
  436933:	lds    ebp,FWORD PTR [ecx-0x5e]
  436936:	jae    0x436919
  436938:	jns    0x43696c
  43693a:	cli    
  43693b:	out    dx,al
	...
  436950:	loopne 0x4369a3
  436952:	inc    esp
  436953:	or     eax,0x3af1375a
  436958:	loope  0x4368e5
  43695a:	and    edx,esi
  43695c:	loopne 0x436901
  43695e:	icebp  
  43695f:	cmp    esp,ecx
  436961:	scas   al,BYTE PTR es:[edi]
  436962:	dec    ebp
  436963:	(bad)  
  436964:	cmp    edx,DWORD PTR [edi+0x74]
  436967:	add    eax,0x6c02b66a
  43696c:	and    al,0x2a
  43696e:	call   FWORD PTR [edi+0x64]
  436971:	add    al,BYTE PTR [esi-0x79f83c51]
  436977:	test   dl,al
  436979:	pop    esp
  43697a:	or     cl,ch
  43697c:	mov    dl,BYTE PTR [edi-0x14]
  43697f:	push   0x4c20d
  436984:	mov    ebx,edx
  436986:	dec    ecx
  436987:	mov    cl,BYTE PTR [esi+0x574ece]
  43698d:	sbb    al,0x83
  43698f:	icebp  
  436990:	mov    ecx,0x76ff4fff
  436995:	or     ax,WORD PTR [eax+0x7b]
  436999:	push   edi
  43699a:	icebp  
  43699b:	inc    DWORD PTR [edi-0x1c317d64]
  4369a1:	leave  
  4369a2:	je     0x4369ab
  4369a4:	mov    bl,0x5d
  4369a6:	sbb    bh,dh
  4369a8:	mov    WORD PTR [edi],gs
  4369aa:	add    eax,0xf7361ee8
  4369af:	inc    edi
  4369b1:	sbb    dh,BYTE PTR [ebp+0x64]
	...
  4369c8:	cmc    
  4369c9:	pop    ebx
  4369ca:	std    
  4369cb:	add    BYTE PTR [ebx],bh
  4369cd:	fimul  DWORD PTR [ebx-0x9a6b473]
  4369d3:	jmp    DWORD PTR [ebx-0x62]
  4369d6:	sub    dh,bh
  4369d8:	pop    esp
  4369d9:	dec    ecx
  4369da:	test   al,dh
  4369dc:	push   cs
  4369dd:	pop    eax
  4369de:	not    BYTE PTR [eax+0xc]
  4369e1:	(bad)  
  4369e2:	int3   
  4369e3:	adc    ecx,ebx
  4369e5:	(bad)  [ebx-0xf9dfcab]
  4369eb:	add    bl,bh
  4369ed:	fld1   
  4369ef:	pop    esp
  4369f0:	imul   edx,ebp,0x0
  4369f3:	lea    eax,[esi+0x2d]
  4369f6:	repz call FWORD PTR [esp+eax*4-0x69c1ff9d]
  4369fe:	icebp  
  4369ff:	push   eax
  436a00:	ds push esi
  436a02:	jmp    0x499b7704
  436a07:	push   DWORD PTR [esi-0x44bff513]
  436a0d:	push   esi
  436a0e:	mov    ecx,0xebab6274
  436a13:	add    bh,ch
  436a15:	xor    al,0x6d
  436a17:	not    BYTE PTR [ebp-0x72ae2baa]
  436a1d:	test   BYTE PTR [ecx-0x754fddf0],bh
  436a23:	mov    WORD PTR [edx-0x75057fd6],cs
  436a29:	lods   al,BYTE PTR ds:[esi]
  436a2a:	popa   
  436a2b:	cli    
	...
  436a40:	ins    DWORD PTR es:[edi],dx
  436a41:	(bad)  
  436a42:	icebp  
  436a43:	pop    es
  436a44:	(bad)  
  436a46:	mov    ecx,ecx
  436a48:	dec    edx
  436a49:	fs sbb eax,0x452f55fa
  436a4f:	je     0x436abe
  436a51:	xor    BYTE PTR ss:[edi+ebx*2+0x32],0x7c
  436a57:	add    eax,0xfe580b6
  436a5c:	jge    0x436a10
  436a5e:	std    
  436a5f:	cli    
  436a60:	push   edi
  436a61:	into   
  436a62:	adc    al,BYTE PTR [eax+0x62]
  436a65:	les    eax,FWORD PTR [ebx-0x18]
  436a68:	lods   eax,DWORD PTR ds:[esi]
  436a69:	retf   
  436a6a:	jg     0x436a66
  436a6c:	push   eax
  436a6d:	repnz imul edi,ebp,0xffffffbd
  436a71:	mov    cl,0xe0
  436a73:	pop    ecx
  436a74:	test   eax,0x620742f9
  436a79:	das    
  436a7a:	jno    0x436a8b
  436a7c:	xchg   ecx,eax
  436a7d:	fst    st(6)
  436a7f:	push   edx
  436a80:	(bad)  [eax+0x3793f88c]
  436a86:	or     eax,DWORD PTR [eax]
  436a88:	cmp    esi,esi
  436a8a:	add    al,0x8d
  436a8c:	cs into 
  436a8e:	sbb    al,0x89
  436a90:	ds (bad) 
  436a92:	sbb    al,ch
  436a94:	dec    esi
  436a95:	sar    BYTE PTR [esi-0x6],cl
  436a98:	out    0x72,al
  436a9a:	icebp  
  436a9b:	ins    DWORD PTR es:[edi],dx
  436a9c:	jo     0x436a77
  436a9e:	mov    esi,0xc826a886
  436aa3:	add    BYTE PTR [eax],0x0
	...
  436ab6:	add    BYTE PTR [eax],al
  436ab8:	xor    ebp,esi
  436aba:	retf   
  436abb:	mov    WORD PTR [ecx],?
  436abd:	cmc    
  436abe:	out    dx,eax
  436abf:	adc    BYTE PTR [ecx],0xf5
  436ac2:	jecxz  0x436a50
  436ac4:	sahf   
  436ac5:	mov    cl,0x78
  436ac7:	or     DWORD PTR [eax+0x41cf649c],0x7d5b5dc5
  436ad1:	mov    al,0x7
  436ad3:	sub    BYTE PTR [eax-0x50],0xad
  436ad7:	mov    ecx,?
  436ad9:	hlt    
  436ada:	out    dx,eax
  436adb:	mov    WORD PTR [ecx+0x2e8cf3f5],gs
  436ae1:	mov    cl,0x23
  436ae3:	in     al,dx
  436ae4:	dec    eax
  436ae5:	pushf  
  436ae6:	ins    BYTE PTR es:[edi],dx
  436ae7:	iret   
  436ae8:	add    ebp,0x8c45735e
  436aee:	pop    es
  436aef:	cmp    BYTE PTR [eax],0x56
  436af2:	sbb    edi,esi
  436af4:	jns    0x436b27
  436af6:	or     al,BYTE PTR [edx]
  436af8:	(bad)  
  436af9:	fnstcw WORD PTR [edx+0x1950368c]
  436aff:	imul   esp,DWORD PTR [esi],0xffffff95
  436b02:	add    al,BYTE PTR [eax+0x157398e1]
  436b08:	or     DWORD PTR ds:0xce527cc,esp
  436b0e:	les    edx,FWORD PTR [edi]
  436b10:	(bad)  
  436b11:	push   eax
  436b12:	mov    ecx,0xda9acc6c
  436b17:	jg     0x436af8
  436b19:	sbb    BYTE PTR [esi+0x4e],0x0
	...
  436b2d:	add    BYTE PTR [eax],al
  436b2f:	add    ch,al
  436b31:	or     edi,DWORD PTR [edi]
  436b33:	jg     0x436b0d
  436b35:	dec    esi
  436b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436b37:	fild   QWORD PTR [ebx]
  436b39:	(bad)  
  436b3a:	push   ds
  436b3b:	and    DWORD PTR [ecx+0x6aab00c8],0xffffffd9
  436b42:	sub    eax,0x85d3c8a0
  436b47:	test   al,0x88
  436b49:	jae    0x436b4a
  436b4b:	adc    al,0x57
  436b4d:	mov    ch,al
  436b4f:	fadd   QWORD PTR [ecx+0x1c]
  436b52:	mov    ecx,0xd09e097c
  436b57:	xchg   ecx,eax
  436b58:	cwde   
  436b59:	and    al,0xeb
  436b5b:	jo     0x436bb7
  436b5d:	dec    esi
  436b5e:	and    cl,bh
  436b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436b61:	fwait
  436b62:	inc    eax
  436b63:	push   0xe9009bf7
  436b68:	popa   
  436b69:	sub    ebx,eax
  436b6b:	cdq    
  436b6c:	pop    edi
  436b6d:	pop    esp
  436b6e:	push   edx
  436b6f:	mov    esi,0x4e2da9e8
  436b74:	xchg   edi,eax
  436b75:	fbstp  TBYTE PTR [ebx-0x1d]
  436b78:	cmp    ebx,ebx
  436b7a:	add    cl,ch
  436b7c:	shl    DWORD PTR [eax+eax*1],1
  436b7f:	sahf   
  436b80:	adc    al,0x9
  436b82:	cli    
  436b83:	aam    0x15
  436b85:	retf   
  436b86:	inc    eax
  436b87:	jmp    0xe7b6c666
  436b8c:	(bad)  
  436b8d:	loopne 0x436bbd
  436b8f:	sub    DWORD PTR [ecx+0xe8a99c],ecx
	...
  436ba5:	add    BYTE PTR [eax],al
  436ba7:	add    BYTE PTR [ecx+eax*1],dh
  436baa:	mov    esi,0x4f71a72
  436baf:	xchg   edi,eax
  436bb0:	fsubr  DWORD PTR [ecx+0x1169af87]
  436bb6:	dec    ecx
  436bb7:	jne    0x436c1f
  436bb9:	sbb    ah,BYTE PTR [ebx]
  436bbb:	jmp    0xe948a4a0
  436bc0:	js     0x436bd9
  436bc2:	jle    0x436bab
  436bc4:	pop    esp
  436bc5:	test   al,0x3
  436bc7:	cdq    
  436bc8:	(bad)  
  436bc9:	push   ss
  436bca:	add    DWORD PTR [eax],eax
  436bcc:	mov    edx,0x6c5332a1
  436bd1:	pop    edx
  436bd2:	test   DWORD PTR [esi-0x71],ebp
  436bd5:	aad    0x4d
  436bd7:	dec    DWORD PTR [esi-0x44bff3ca]
  436bdd:	push   eax
  436bde:	sbb    al,0xb0
  436be0:	push   ebp
  436be1:	xchg   ecx,eax
  436be2:	stc    
  436be3:	cmc    
  436be4:	enter  0x73d5,0x19
  436be8:	jecxz  0x436b9a
  436bea:	idiv   bh
  436bec:	in     al,0x52
  436bee:	mov    ecx,0x2457ab74
  436bf3:	mov    ah,0x65
  436bf5:	xchg   ecx,eax
  436bf6:	stc    
  436bf7:	dec    DWORD PTR [ebx]
  436bf9:	sidtd  [eax+0x44676566]
  436c00:	jnp    0x436b85
  436c02:	not    BYTE PTR ds:0x40c897
  436c08:	add    al,0x7f
  436c0a:	add    dh,0x0
	...
  436c1d:	add    BYTE PTR [eax],al
  436c1f:	add    BYTE PTR ds:0xedfffe18,al
  436c25:	dec    esi
  436c26:	lock mov ecx,DWORD PTR ds:0xef4848ce
  436c2d:	mov    ebx,0xd63f7e79
  436c32:	je     0x436c3d
  436c34:	inc    esp
  436c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436c36:	std    
  436c37:	(bad)  
  436c38:	push   ds
  436c39:	or     BYTE PTR [ecx],0x40
  436c3c:	or     edx,DWORD PTR [edi+0x37]
  436c3f:	add    BYTE PTR [edi+0x40062d0],cl
  436c45:	in     eax,0xf5
  436c47:	adc    eax,0x40c5eb
  436c4c:	in     eax,0x16
  436c4e:	push   ebp
  436c4f:	mov    edx,DWORD PTR [edi]
  436c51:	mov    BYTE PTR [edi-0x75],cl
  436c54:	or     al,BYTE PTR [edx+eax*4-0x3a479dba]
  436c5b:	inc    edi
  436c5c:	dec    esi
  436c5d:	in     al,dx
  436c5e:	ins    BYTE PTR es:[edi],dx
  436c5f:	xor    al,0xcd
  436c61:	xchg   edx,eax
  436c62:	jnp    0x436be7
  436c64:	mov    ds:0xa22e08e4,al
  436c69:	xchg   esi,eax
  436c6a:	test   BYTE PTR [esp+esi*1+0x6bd730b4],0xd3
  436c72:	icebp  
  436c73:	sub    bl,cl
  436c75:	icebp  
  436c76:	or     al,0x27
  436c78:	mov    eax,ds:0xf480bbb
  436c7d:	mov    bl,0xb5
  436c7f:	add    esp,edx
  436c81:	scas   eax,DWORD PTR es:[edi]
  436c82:	std    
  436c83:	out    0x0,al
	...
  436c95:	add    BYTE PTR [eax],al
  436c97:	add    BYTE PTR [eax+0x27],bl
  436c9a:	ret    0x890b
  436c9d:	lods   al,BYTE PTR ds:[esi]
  436c9e:	mov    ch,0xfe
  436ca0:	cmc    
  436ca1:	scas   eax,DWORD PTR es:[edi]
  436ca2:	std    
  436ca3:	push   edx
  436ca4:	adc    DWORD PTR [edi-0x33],ebx
  436ca7:	cli    
  436ca8:	sub    al,0xfb
  436caa:	adc    DWORD PTR [edx+esi*2+0x42],esp
  436cae:	std    
  436caf:	test   BYTE PTR [edx],ah
  436cb1:	scas   al,BYTE PTR es:[edi]
  436cb2:	add    DWORD PTR [ecx+0x4e492b6d],ecx
  436cb8:	inc    ebp
  436cb9:	dec    esi
  436cba:	or     ebx,edi
  436cbc:	mov    bh,0x7a
  436cbe:	jl     0x436cf2
  436cc0:	xor    eax,0xa20fe5ae
  436cc5:	add    ch,0xf2
  436cc8:	or     bl,ah
  436cca:	inc    esp
  436ccb:	aas    
  436ccc:	or     DWORD PTR [eax+ecx*4+0x35d45109],ebx
  436cd3:	push   ebp
  436cd4:	pop    esi
  436cd5:	sbb    BYTE PTR [edi+eax*4],bl
  436cd8:	xchg   DWORD PTR [edx+0x4c66b20c],ecx
  436cde:	xor    cl,al
  436ce0:	aas    
  436ce1:	xchg   ebp,edi
  436ce3:	jmp    DWORD PTR [edx-0x27]
  436ce6:	test   al,0x6a
  436ce8:	pop    ebp
  436ce9:	int3   
  436cea:	jmp    0x436c72
  436cec:	jge    0x436cf7
  436cee:	sub    al,0x4
  436cf0:	xchg   esp,eax
  436cf1:	aam    0x34
  436cf3:	adc    BYTE PTR [esi+edi*2],bh
  436cf6:	jo     0x436d05
  436cf8:	adc    bl,bl
  436cfa:	sbb    bl,dh
	...
  436d10:	adc    al,0x36
  436d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436d13:	or     esp,DWORD PTR [edx+0x2e]
  436d16:	pop    edi
  436d17:	outs   dx,DWORD PTR ds:[esi]
  436d18:	adc    ah,BYTE PTR [eax+edi*1+0xc]
  436d1c:	adc    BYTE PTR [esi+0x25],ah
  436d1f:	jge    0x436d46
  436d21:	or     eax,0xd97f812b
  436d26:	adc    edx,DWORD PTR [eax]
  436d28:	and    al,0xe
  436d2a:	in     al,dx
  436d2b:	jmp    0x8925f1a1
  436d30:	not    BYTE PTR [esi+edi*2+0x9e8fc05]
  436d37:	mov    esi,esi
  436d39:	xchg   esp,eax
  436d3a:	data16 cli 
  436d3c:	popa   
  436d3d:	(bad)  
  436d3f:	and    eax,0xc664d9c4
  436d44:	pop    ecx
  436d45:	sub    DWORD PTR [ebx-0xa],ecx
  436d48:	gs add esp,esi
  436d4b:	jl     0x436d1f
  436d4d:	fnstsw WORD PTR [edx]
  436d4f:	push   ss
  436d50:	call   0xa8a2:0x8503a7e9
  436d57:	cmp    BYTE PTR [ebx],ah
  436d59:	push   cs
  436d5a:	in     eax,dx
  436d5b:	cmp    ch,BYTE PTR [edi+0x4d019395]
  436d61:	mov    ds:0xe7fc425d,al
  436d66:	aad    0x43
  436d68:	add    al,0xe4
  436d6a:	outs   dx,BYTE PTR ds:[esi]
  436d6b:	or     bl,ch
  436d6d:	sbb    eax,0x621274f0
  436d72:	add    cl,ah
	...
  436d88:	mov    cl,0xd8
  436d8a:	pop    edx
  436d8b:	and    BYTE PTR [ebx-0x2ac3ff20],ah
  436d91:	cmp    DWORD PTR [ebp-0x33],0x6a
  436d95:	sub    BYTE PTR [ebx+0x38],dl
  436d98:	jmp    0x436dbe
  436d9a:	cmc    
  436d9b:	bound  edx,QWORD PTR [eax+eax*4+0x5b]
  436d9f:	(bad)  
  436da0:	dec    ecx
  436da1:	xchg   ebx,eax
  436da2:	mov    ebp,DWORD PTR [edx+esi*1]
  436da5:	xchg   ebx,eax
  436da6:	jae    0x436d8d
  436da8:	cmp    BYTE PTR ds:0x920bc109,cl
  436dae:	stc    
  436daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436db0:	loop   0x436e09
  436db2:	je     0x436daf
  436db4:	mov    dh,0x29
  436db6:	mov    WORD PTR [edx+edx*1],fs
  436db9:	sub    BYTE PTR [esi+ecx*4+0x9],0x93
  436dbe:	test   BYTE PTR [ecx-0x1752246e],ch
  436dc4:	or     al,0x96
  436dc6:	das    
  436dc7:	xchg   edx,eax
  436dc8:	jmp    0x436dee
  436dca:	cmc    
  436dcb:	adc    ebp,0xd466f991
  436dd1:	push   esi
  436dd2:	pop    edx
  436dd3:	ret    0x54ae
  436dd6:	or     cl,ch
  436dd8:	fadd   QWORD PTR [edx+0x2932ba0c]
  436dde:	push   edx
  436ddf:	cli    
  436de0:	mov    eax,ds:0xee0466d6
  436de5:	sbb    ah,BYTE PTR ds:0x4dfefbde
  436deb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  436e00:	popa   
  436e01:	xor    al,BYTE PTR [esi+0x74afe307]
  436e07:	call   0xe4:0xed424b68
  436e0e:	stc    
  436e0f:	bound  esi,QWORD PTR [ebx+0x17004461]
  436e15:	repz call 0xf7574493
  436e1b:	xor    ebx,0xfffffff0
  436e1e:	push   0x50
  436e20:	mov    ds,WORD PTR [ecx-0x78d4ebe3]
  436e26:	cmp    DWORD PTR [edx-0x23],ebp
  436e29:	test   eax,0xe9acff63
  436e2e:	js     0x436e41
  436e30:	jnp    0x436e0f
  436e32:	add    eax,0xffffff87
  436e35:	xlat   BYTE PTR ds:[ebx]
  436e36:	sub    eax,eax
  436e38:	pop    ebx
  436e39:	cmp    ax,0x8f24
  436e3d:	pop    edi
  436e3e:	mov    ecx,0x54ae4bfb
  436e43:	push   0xfffffffc
  436e45:	adc    edx,DWORD PTR ds:0xf99a9828
  436e4b:	xor    al,dl
  436e4d:	test   BYTE PTR [eax],al
  436e4f:	test   DWORD PTR [ebx-0x3d49f94e],edi
  436e55:	jecxz  0x436e9a
  436e57:	fmul   DWORD PTR [esi]
  436e59:	push   esi
  436e5a:	sbb    eax,0x6e125b14
  436e5f:	and    al,0x93
  436e61:	test   BYTE PTR [edi],dl
  436e63:	push   ebp
	...
  436e78:	xchg   ecx,eax
  436e79:	adc    esi,edi
  436e7b:	adc    eax,0x40ed43
  436e80:	(bad)  
  436e81:	aaa    
  436e82:	jne    0x436e8c
  436e84:	push   0x5744821d
  436e89:	out    dx,al
  436e8a:	loope  0x436e90
  436e8c:	mov    cl,0x56
  436e8e:	sbb    eax,0xa18c813
  436e93:	dec    edi
  436e94:	neg    BYTE PTR [esi+edx*2+0x5e]
  436e98:	push   ds
  436e99:	mov    bh,0x7a
  436e9b:	les    ecx,FWORD PTR [edi]
  436e9d:	sbb    al,0xfe
  436e9f:	jmp    DWORD PTR [edx+0x52]
  436ea2:	mov    dl,al
  436ea4:	fnstenv [ecx+ecx*2+0x65809e55]
  436eab:	jns    0x436e55
  436ead:	xchg   esi,eax
  436eae:	ja     0x436e6e
  436eb0:	xchg   ecx,eax
  436eb1:	push   ebx
  436eb2:	pop    edx
  436eb3:	push   edx
  436eb4:	stos   BYTE PTR es:[edi],al
  436eb5:	adc    edx,ebx
  436eb7:	inc    ebx
  436eb8:	bound  ecx,QWORD PTR [ebx]
  436eba:	dec    esp
  436ebb:	cmp    BYTE PTR [edx],bh
  436ebd:	lods   al,BYTE PTR ds:[esi]
  436ebe:	lock fs jmp 0x436e89
  436ec2:	js     0x436e4b
  436ec4:	push   0x3
  436ec6:	psraw  mm7,QWORD PTR ds:[edi]
  436eca:	adc    al,0x81
  436ecc:	mov    ebx,0x620002ef
  436ed1:	shr    BYTE PTR [ebp+eiz*2+0x22],cl
  436ed5:	sbb    BYTE PTR ds:0xe5806230,al
  436edb:	or     al,BYTE PTR [eax]
	...
  436eed:	add    BYTE PTR [eax],al
  436eef:	add    BYTE PTR [edi-0x80],ah
  436ef2:	std    
  436ef3:	dec    esi
  436ef4:	or     BYTE PTR [edi+0x77],ch
  436ef7:	adc    al,0x46
  436ef9:	xchg   ebx,eax
  436efa:	mov    ebp,0x7957d8ff
  436eff:	cli    
  436f00:	test   BYTE PTR [esi-0x31],0xb9
  436f04:	or     dh,bl
  436f06:	sar    bh,0xd8
  436f09:	in     eax,dx
  436f0a:	jl     0x436f5c
  436f0c:	or     eax,0x4afbeeff
  436f11:	sub    cl,dl
  436f13:	cli    
  436f14:	push   ebp
  436f15:	push   es
  436f16:	inc    ebp
  436f17:	jae    0x436f8b
  436f19:	stc    
  436f1a:	dec    DWORD PTR ss:[ebp+0xb]
  436f1e:	mov    edi,0x3effa103
  436f23:	psraw  mm0,mm7
  436f26:	sbb    DWORD PTR [esi+0xd],ebp
  436f29:	gs test dh,dh
  436f2c:	jg     0x436f07
  436f2e:	pushf  
  436f2f:	dec    ebp
  436f31:	fimul  DWORD PTR [esi]
  436f33:	or     al,0xb3
  436f35:	xor    DWORD PTR [edx+edi*2],0x43d59508
  436f3c:	test   al,0x30
  436f3e:	daa    
  436f3f:	mov    ds:0x3a7ede5,eax
  436f44:	aad    0xf9
  436f46:	xchg   esi,eax
  436f47:	mov    edi,0xfa339ed
  436f4c:	mov    ds:0x2cf386d9,al
  436f51:	sbb    eax,0xa2e8
	...
  436f66:	add    BYTE PTR [eax],al
  436f68:	xor    ebp,ebp
  436f6a:	daa    
  436f6b:	add    al,0xed
  436f6d:	pop    ecx
  436f6e:	ss rol ch,0x39
  436f72:	xor    edx,DWORD PTR [eax]
  436f74:	and    bl,cl
  436f76:	xchg   BYTE PTR [ebx-0x5d17e2dc],dl
  436f7c:	sbb    eax,0xc50427ee
  436f81:	cmp    DWORD PTR [esi],esi
  436f83:	rcr    BYTE PTR [ebp+0x220fdb39],0xd9
  436f8a:	inc    esi
  436f8b:	mov    bl,0x1c
  436f8d:	sbb    eax,0xe879a2e8
  436f92:	daa    
  436f93:	add    al,0xdd
  436f95:	cdq    
  436f96:	push   ss
  436f97:	shl    BYTE PTR [ebp+0x39],0x17
  436f9b:	adc    BYTE PTR [edx],ah
  436f9d:	fld    DWORD PTR [esi+0x53]
  436fa0:	adc    al,0x1d
  436fa2:	call   0xa8311549
  436fa7:	add    esi,ebp
  436fa9:	js     0x436f61
  436fab:	mov    edi,0x1013394d
  436fb0:	mov    ds:0xac7386d9,al
  436fb5:	sbb    eax,0xeceda2e8
  436fba:	add    BYTE PTR [ecx-0x6aff8b9f],ch
  436fc0:	in     eax,0x93
  436fc2:	mov    al,ds:0x1196d29
  436fc7:	dec    edx
  436fc8:	jno    0x436ff7
  436fca:	inc    ebp
  436fcb:	jmp    0x436fd0
	...
  436fe0:	shl    BYTE PTR [edi],0x14
  436fe3:	test   eax,0x9d207461
  436fe8:	mov    ebp,0x51f9a093
  436fed:	sbb    DWORD PTR [ecx],eax
  436fef:	dec    edx
  436ff0:	xor    DWORD PTR ds:0xffc0e945,ebp
  436ff6:	adc    al,0x29
  436ff8:	data16 je 0x43703b
  436ffb:	xor    eax,0x15a093a2
  437000:	jae    0x43701b
  437002:	add    DWORD PTR [edx-0x16bad852],ecx
  437008:	push   es
  437009:	cmp    BYTE PTR [ecx+ebp*1],dl
  43700c:	pop    esi
  43700d:	je     0x43706f
  43700f:	sbb    eax,0x51a093a2
  437014:	push   edx
  437015:	sbb    DWORD PTR [ecx],eax
  437017:	dec    edx
  437018:	xchg   esi,eax
  437019:	daa    
  43701a:	inc    ebp
  43701b:	jmp    0x2957afde
  437020:	data16 je 0x436fa3
  437023:	xor    eax,0xfda093a2
  437028:	push   edx
  437029:	sbb    DWORD PTR [ecx],eax
  43702b:	dec    edx
  43702c:	into   
  43702d:	daa    
  43702e:	inc    ebp
  43702f:	jmp    0x2957e3fa
  437034:	pop    esi
  437035:	je     0x436fd7
  437037:	mov    ebp,0xc1a0931d
  43703c:	sbb    DWORD PTR gs:[ecx],eax
  43703f:	mov    dl,BYTE PTR [esi]
  437041:	daa    
  437042:	inc    ebp
  437043:	jmp    0x437048
	...
  437058:	(bad)  
  437059:	cmp    dl,BYTE PTR [eax+eax*1]
  43705c:	or     edx,edi
  43705e:	cdq    
  43705f:	ror    bh,0x52
  437062:	stc    
  437063:	mov    al,ds:0x40e997
  437068:	fsubr  DWORD PTR ds:0x3e0b444e
  43706e:	popa   
  43706f:	adc    eax,0xe099d6cb
  437074:	iret   
  437075:	push   edx
  437076:	stc    
  437077:	mov    al,ds:0x40ea2f
  43707c:	test   al,0xd
  43707e:	dec    esi
  43707f:	inc    esp
  437080:	or     edi,DWORD PTR [esi]
  437082:	adc    eax,0x99d6bb15
  437087:	add    dh,cl
  437089:	push   edx
  43708a:	stc    
  43708b:	mov    al,ds:0x40e9cf
  437090:	call   0xbb87c47b
  437095:	cmp    eax,0xdd7b1555
  43709a:	cdq    
  43709b:	and    BYTE PTR [esi-0x67],bl
  43709e:	stc    
  43709f:	mov    al,ds:0x40e9c3
  4370a4:	fadd   st,st(6)
  4370a6:	push   ebx
  4370a7:	inc    esp
  4370a8:	mov    ebx,0x4b14f93d
  4370ad:	fstp   QWORD PTR [ecx-0x666b1c0]
  4370b3:	mov    al,ds:0x40e2f3
  4370b8:	sbb    BYTE PTR [esi+0x4454],ah
	...
  4370ce:	add    BYTE PTR [eax],al
  4370d0:	mov    edi,DWORD PTR ds:0xdd4b1521
  4370d6:	cdq    
  4370d7:	pusha  
  4370d8:	dec    esi
  4370d9:	cdq    
  4370da:	stc    
  4370db:	mov    al,ds:0x40e9a7
  4370e0:	call   0x4b87c56a
  4370e5:	cmp    eax,0x406214d1
  4370ea:	std    
  4370eb:	sahf   
  4370ec:	loop   0x43713a
  4370ee:	mov    ecx,0xa2c02ff
  4370f3:	inc    eax
  4370f4:	bound  ebx,QWORD PTR [edi-0x73]
  4370f7:	push   esp
  4370f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4370f9:	and    BYTE PTR [edi+ebx*4-0x6102bfae],0xc2
  437101:	push   esp
  437102:	mov    ecx,0x73830aff
  437107:	cli    
  437108:	or     eax,0xb3eb8655
  43710d:	push   ecx
  43710e:	mov    BYTE PTR [esi+edi*8+0x6f],al
  437112:	mov    BYTE PTR [edx+edi*8+0x6f],al
  437116:	in     eax,0xb3
  437118:	sar    BYTE PTR [edi],cl
  43711a:	std    
  43711b:	cli    
  43711c:	xor    eax,DWORD PTR [ebx-0x3f8877f7]
  437122:	add    al,0x7f
  437124:	fiadd  DWORD PTR [eax-0x4326eb16]
  43712a:	js     0x43711d
  43712c:	mov    ds:0xe90cea7e,eax
  437131:	les    ecx,FWORD PTR [ecx+eax*8]
	...
  437148:	retf   
  437149:	jge    0x4370d1
  43714b:	pop    es
  43714c:	fld    st(4)
  43714e:	jl     0x437136
  437150:	pusha  
  437151:	(bad)  
  437152:	cmp    eax,0xfd83a0c8
  437157:	push   esp
  437158:	jmp    0x5a97f8c0
  43715d:	jmp    FWORD PTR [eax+0x63]
  437160:	fnstcw WORD PTR ds:0x8bf7faca
  437166:	ds out 0x52,eax
  437169:	lock add esi,DWORD PTR [ebx-0x18131060]
  437170:	sar    BYTE PTR [edi-0x269d99fc],cl
  437176:	je     0x437137
  437178:	stc    
  437179:	add    edx,DWORD PTR [esi]
  43717b:	aam    0xe4
  43717d:	mov    bh,BYTE PTR [edi]
  43717f:	mov    esp,DWORD PTR [edi+ecx*4+0x4a]
  437183:	and    DWORD PTR [ecx],0xae446cee
  437189:	out    dx,eax
  43718a:	ins    BYTE PTR es:[edi],dx
  43718b:	mov    edi,0xbf652965
  437190:	pop    ecx
  437191:	sub    DWORD PTR [ebp-0x41],ebx
  437194:	stc    
  437195:	sub    DWORD PTR [ebx],esp
  437197:	cs sbb edi,esp
  43719a:	outs   dx,DWORD PTR ds:[esi]
  43719b:	cpuid  
  43719d:	fldenv [esi+0x7c]
  4371a0:	bound  eax,QWORD PTR [esi]
  4371a2:	in     eax,0x88
  4371a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4371a5:	fisttp QWORD PTR [esi]
  4371a7:	add    al,BYTE PTR [ebp-0x67]
  4371aa:	cdq    
  4371ab:	dec    edx
	...
  4371c0:	scas   eax,DWORD PTR es:[edi]
  4371c1:	loope  0x4371aa
  4371c3:	int    0x34
  4371c5:	xchg   DWORD PTR [eax+0x74e05031],esi
  4371cb:	shl    DWORD PTR [ecx-0x2e],0xef
  4371cf:	out    dx,eax
  4371d0:	pop    ecx
  4371d1:	pop    ss
  4371d2:	addr16 inc ebx
  4371d4:	popa   
  4371d5:	aam    0x15
  4371d7:	repnz mov cl,0xcb
  4371da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4371db:	aad    0xf4
  4371dd:	dec    ecx
  4371de:	call   0xc39e5eb8
  4371e3:	pop    es
  4371e4:	arpl   cx,bx
  4371e6:	out    0xd0,eax
  4371e8:	ss daa 
  4371ea:	outs   dx,DWORD PTR ds:[esi]
  4371eb:	scas   eax,DWORD PTR es:[edi]
  4371ec:	inc    ecx
  4371ed:	in     eax,dx
  4371ee:	call   0x5f6bd3f6
  4371f3:	mov    bh,0x41
  4371f5:	mov    ch,0xe8
  4371f7:	add    esp,DWORD PTR [edx+0x64]
  4371fa:	popf   
  4371fb:	mov    BYTE PTR [edx+0x27ef7a56],cl
  437201:	pop    esp
  437202:	add    BYTE PTR [esi-0x12],dh
  437205:	or     ebx,DWORD PTR [eax]
  437207:	mov    edx,0xa0c157b3
  43720c:	leave  
  43720d:	(bad)  
  43720e:	stc    
  43720f:	jmp    0x3baafbd2
  437214:	mov    ecx,0xe8e9f98f
  437219:	sbb    esp,DWORD PTR ds:0x252be8d9
  43721f:	aad    0x72
  437221:	mov    ds:0xad8b,al
	...
  437236:	add    BYTE PTR [eax],al
  437238:	inc    ebp
  437239:	jmp    0xe3d9a0bb
  43723e:	inc    esp
  43723f:	sub    BYTE PTR [ecx],dh
  437241:	sub    DWORD PTR [eax+0x6c],edx
  437244:	int    0xbb
  437246:	and    al,0xb9
  437248:	xor    BYTE PTR [ebx-0x25ba3abc],bl
  43724e:	add    cl,ch
  437250:	popa   
  437251:	bound  ebp,QWORD PTR [ebp+eax*8+0x31]
  437255:	xchg   esp,eax
  437256:	adc    edi,ebp
  437258:	push   edi
  437259:	sbb    DWORD PTR [ecx],eax
  43725b:	push   0x59
  43725d:	fnstenv [ebx+0x9]
  437260:	mov    ah,0x8f
  437262:	push   ebx
  437263:	cmp    ch,BYTE PTR [ebx+0x6bb91392]
  437269:	sbb    DWORD PTR [ecx],eax
  43726b:	fs adc dl,BYTE PTR es:[eax]
  43726f:	adc    ch,BYTE PTR [esi]
  437271:	(bad)  
  437272:	shl    DWORD PTR [eax+ebp*1+0x13],1
  437276:	xchg   esi,eax
  437277:	cli    
  437278:	and    DWORD PTR [ebp-0xe],edx
  43727b:	fdivrp st(5),st
  43727d:	dec    edi
  43727e:	in     eax,0xeb
  437280:	dec    edi
  437281:	cdq    
  437282:	pop    ecx
  437283:	aas    
  437284:	mov    bl,0x26
  437286:	sub    BYTE PTR [ebp-0x16ff259e],0x27
  43728d:	fadd   DWORD PTR [eax]
  43728f:	add    BYTE PTR [esi+0x10],dl
  437292:	out    0x51,al
  437294:	push   ebp
  437295:	mov    ah,0x82
  437297:	repnz add dh,bh
  43729a:	loop   0x4372b0
	...
  4372b0:	int3   
  4372b1:	nop
  4372b2:	add    DWORD PTR [ebp+0x1640c16],ecx
  4372b8:	rcr    BYTE PTR [edx],1
  4372ba:	dec    eax
  4372bb:	call   0x3a7ec0
  4372c0:	(bad)  
  4372c1:	adc    eax,0x13c60c6e
  4372c6:	jne    0x4372b0
  4372c8:	stos   DWORD PTR es:[edi],eax
  4372c9:	aam    0x55
  4372cb:	pop    esi
  4372cc:	adc    BYTE PTR [edi],0xfe
  4372cf:	call   FWORD PTR [ecx]
  4372d1:	sbb    esp,ebx
  4372d3:	div    cl
  4372d5:	(bad)  
  4372d7:	je     0x437300
  4372d9:	xchg   ebx,eax
  4372da:	dec    ebx
  4372db:	push   ecx
  4372dc:	ins    BYTE PTR es:[edi],dx
  4372dd:	lock sbb BYTE PTR [esi],dl
  4372e0:	retf   
  4372e1:	fidiv  DWORD PTR [ecx]
  4372e3:	inc    esp
  4372e4:	daa    
  4372e5:	xlat   BYTE PTR ds:[ebx]
  4372e6:	add    eax,0xfe173b94
  4372eb:	inc    ebp
  4372ed:	mov    bl,0x82
  4372ef:	stc    
  4372f0:	loope  0x4372d2
  4372f2:	add    eax,0xacc4b7
  4372f7:	push   eax
  4372f8:	lods   al,BYTE PTR ds:[esi]
  4372f9:	icebp  
  4372fa:	fcom   DWORD PTR ds:0xf081d57b
  437300:	dec    eax
  437301:	or     bh,dh
  437303:	je     0x43736c
  437305:	cmp    DWORD PTR [edx+0x3f],0xffffffb9
  437309:	lods   al,BYTE PTR ds:[esi]
  43730a:	adc    eax,0x58e52159
  43730f:	cmova  ecx,ebp
  437312:	push   eax
  437313:	push   edi
	...
  437328:	push   ebp
  437329:	or     dl,BYTE PTR ds:0xf99a950c
  43732f:	test   BYTE PTR [edx+0x40],ah
  437332:	icebp  
  437333:	add    eax,0x14185f14
  437338:	dec    esp
  437339:	rol    BYTE PTR [edi+edi*2],0x9c
  43733d:	bswap  edi
  43733f:	xchg   BYTE PTR [esi+eiz*8+0x41c45041],bl
  437346:	inc    ebx
  437347:	pop    es
  437348:	mov    cl,0x4d
  43734a:	(bad)  
  43734b:	mov    WORD PTR [esi-0x6eafff2c],fs
  437351:	daa    
  437352:	xlat   BYTE PTR ds:[ebx]
  437353:	push   edx
  437354:	xchg   ebx,eax
  437355:	scas   eax,DWORD PTR es:[edi]
  437356:	mov    dh,0xe5
  437358:	jmp    0x3257e213
  43735d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43735e:	mov    ebp,0xf1bfdeff
  437363:	add    al,0xe1
  437365:	mov    bh,0x6e
  437367:	out    0x94,al
  437369:	dec    esi
  43736a:	jp     0x4373df
  43736c:	inc    esi
  43736d:	nop
  43736e:	mov    cl,dh
  437370:	mov    ?,WORD PTR [ebx-0x7d99867e]
  437376:	clc    
  437377:	or     ch,cl
  437379:	ins    DWORD PTR es:[edi],dx
  43737a:	or     eax,0x55789c87
  43737f:	mov    cl,0x7e
  437381:	xchg   DWORD PTR [edi-0x7a],ebp
  437384:	fcmovu st,st(2)
  437386:	adc    bh,BYTE PTR [edi+0x54]
  437389:	jl     0x4373a3
  43738b:	jne    0x43738d
	...
  43739d:	add    BYTE PTR [eax],al
  43739f:	add    BYTE PTR [edi+0xb],bl
  4373a2:	xlat   BYTE PTR ds:[ebx]
  4373a3:	psubusw mm6,QWORD PTR [ebp+0x1403e80c]
  4373aa:	jo     0x4373a6
  4373ac:	jmp    0x4eb4eee8
  4373b1:	cmc    
  4373b2:	jbe    0x437428
  4373b4:	xchg   ebx,eax
  4373b5:	cli    
  4373b6:	clc    
  4373b7:	and    esi,DWORD PTR [edx-0x1a]
  4373ba:	outs   dx,DWORD PTR ds:[esi]
  4373bb:	adc    al,0x9a
  4373bd:	fdivr  st,st(4)
  4373bf:	ret    
  4373c0:	lea    ebx,[edx-0x57]
  4373c3:	jno    0x4373a3
  4373c5:	lea    ebx,[ebx]
  4373c7:	jmp    esp
  4373c9:	popf   
  4373ca:	add    DWORD PTR [ebx+0x8],edi
  4373cd:	fisttp DWORD PTR [edi+0x7a8d68c5]
  4373d3:	jge    0x43744a
  4373d5:	push   ebx
  4373d6:	mov    ?,eax
  4373d8:	outs   dx,DWORD PTR ds:[esi]
  4373d9:	pop    eax
  4373da:	imul   esi,DWORD PTR [ecx-0x32],0xc33d6ede
  4373e1:	(bad)  
  4373e2:	into   
  4373e3:	add    eax,0x7152bf3a
  4373e8:	cmp    BYTE PTR [ecx+0x57],ah
  4373eb:	jge    0x437415
  4373ed:	sub    ch,0xe7
  4373f0:	sub    BYTE PTR [ebp-0x26c2c292],cl
  4373f6:	retf   
  4373f7:	jo     0x437411
  4373f9:	popa   
  4373fa:	and    edx,edx
  4373fc:	mov    eax,0xcccabf2e
  437401:	and    esi,DWORD PTR [ebx+0x7c]
	...
  437417:	add    BYTE PTR [edx],dl
  437419:	add    dl,ch
  43741b:	add    BYTE PTR [ecx-0x6dfd822d],dh
  437421:	mov    esp,ds
  437423:	dec    ebx
  437424:	push   esi
  437425:	sbb    eax,ebp
  437427:	jl     0x437416
  437429:	pop    eax
  43742a:	bnd jo 0x43747e
  43742d:	sbb    DWORD PTR [edx+0x4dd79b84],eax
  437433:	adc    BYTE PTR [ebx],ch
  437435:	push   edi
  437437:	retf   
  437438:	pop    eax
  437439:	adc    eax,0x2413d2a0
  43743e:	retf   
  43743f:	push   ss
  437440:	mov    fs,esi
  437442:	daa    
  437443:	add    al,0xe7
  437445:	cdq    
  437446:	xor    al,0xff
  437448:	aas    
  437449:	fiadd  DWORD PTR [eax]
  43744b:	push   ds
  43744c:	adc    esp,ebp
  43744e:	and    bh,dl
  437450:	mov    eax,ds:0x95a9848c
  437455:	icebp  
  437456:	stc    
  437457:	hlt    
  437458:	cmp    edi,esp
  43745a:	inc    eax
  43745b:	jmp    0x8e94f05e
  437460:	dec    esp
  437461:	in     eax,0x12
  437463:	sub    DWORD PTR [esi+0x27],esp
  437466:	cli    
  437467:	aam    0x1
  437469:	in     eax,0x40
  43746b:	jmp    0x633d1356
  437470:	stos   BYTE PTR es:[edi],al
  437471:	das    
  437472:	pop    ebx
  437473:	sub    ah,al
  437475:	jg     0x43747f
  437477:	in     al,0x61
  437479:	(bad)  [ebp-0x44]
	...
  437490:	sbb    bh,BYTE PTR [ebx+0x250cb4eb]
  437496:	mov    WORD PTR [ebp+0x7250ed85],gs
  43749c:	xchg   edi,eax
  43749d:	push   ebx
  43749e:	neg    DWORD PTR [edx+ebp*4+0x5c052518]
  4374a5:	fld    DWORD PTR [eax]
  4374a7:	jmp    0xd1688534
  4374ac:	mov    BYTE PTR [eax],dh
  4374ae:	and    eax,0xf4e572c5
  4374b3:	hlt    
  4374b4:	and    DWORD PTR [esi+edi*2+0x7d0d6001],ecx
  4374bb:	xchg   edi,eax
  4374bc:	fimul  WORD PTR [edi]
  4374be:	and    eax,0xf35461dd
  4374c3:	ja     0x4374d9
  4374c5:	push   ebx
  4374c6:	inc    esp
  4374c7:	popf   
  4374c8:	pop    esi
  4374c9:	es imul ebp,ecx,0x6400d95d
  4374d0:	loop   0x437489
  4374d2:	and    al,ch
  4374d4:	popa   
  4374d5:	(bad)  [edi+0x0]
  4374d8:	dec    ebx
  4374d9:	push   cs
  4374da:	ds and al,0x5b
  4374dd:	cld    
  4374de:	adc    al,0xd0
  4374e0:	mov    esi,0xa38af997
  4374e5:	push   edi
  4374e6:	cld    
  4374e7:	add    DWORD PTR [edi-0x66],eax
  4374ea:	cmp    BYTE PTR [edi+ebx*4-0x19],bh
  4374ee:	bound  eax,QWORD PTR [eax]
  4374f0:	ds pop edx
  4374f2:	jge    0x437518
	...
  437508:	stos   DWORD PTR es:[edi],eax
  437509:	aam    0x0
  43750b:	add    al,dh
  43750d:	retf   
  43750e:	dec    ecx
  43750f:	(bad)  
  437511:	rcl    BYTE PTR [eax-0x1],1
  437514:	fisttp WORD PTR ds:[esi]
  437517:	inc    eax
  437518:	dec    ebx
  437519:	rol    bl,0x75
  43751c:	jne    0x4374b1
  43751e:	arpl   WORD PTR [eax],ax
  437520:	push   es
  437521:	shl    BYTE PTR [esp+0x3f],0x89
  437526:	stos   BYTE PTR es:[edi],al
  437527:	push   ebp
  437528:	out    dx,al
  437529:	mov    cl,0x8c
  43752b:	inc    esp
  43752c:	pop    edi
  43752d:	mov    ch,0x50
  43752f:	push   ebp
  437530:	jl     0x4374d3
  437532:	sbb    eax,0xd70928
  437537:	add    BYTE PTR [edx-0x6dd3e277],al
  43753d:	test   eax,0xf064301d
  437542:	hlt    
  437543:	adc    eax,0xf879d6cb
  437548:	or     cl,BYTE PTR [edx-0x563ba181]
  43754e:	push   edx
  43754f:	cmp    DWORD PTR [edi],0xcb00048d
  437555:	pop    ss
  437556:	sub    esp,0xd5b7
  43755c:	lea    ecx,[esi]
  43755e:	scas   al,BYTE PTR es:[edi]
  43755f:	and    al,0xc7
  437561:	aad    0x0
  437563:	add    BYTE PTR [edx-0x35],ah
  437566:	jne    0x437560
  437568:	out    0xea,eax
  43756a:	add    edi,DWORD PTR [edi+0x0]
	...
  43757d:	add    BYTE PTR [eax],al
  43757f:	add    BYTE PTR [ebx-0x1d810640],ch
  437585:	cmp    ch,0xff
  437588:	xor    edi,esi
  43758a:	mov    DWORD PTR [ebx],esp
  43758c:	jbe    0x43750f
  43758e:	std    
  43758f:	jmp    edi
  437591:	xchg   edi,eax
  437592:	icebp  
  437593:	push   ss
  437594:	das    
  437595:	scas   eax,DWORD PTR es:[edi]
  437596:	dec    edi
  437597:	mov    esp,0xfffd7f8a
  43759c:	jmp    0x1037e7e0
  4375a1:	jmp    0x80a55cf4
  4375a6:	std    
  4375a7:	mov    BYTE PTR [esi-0x51770664],ah
  4375ad:	xchg   esp,eax
  4375ae:	or     eax,0x804b6666
  4375b3:	inc    ebx
  4375b4:	jle    0x437596
  4375b6:	aam    0x88
  4375b8:	scas   al,BYTE PTR es:[edi]
  4375b9:	fsub   QWORD PTR [eax+ebp*8]
  4375bc:	sub    BYTE PTR [esi-0x36180596],bl
  4375c2:	icebp  
  4375c3:	adc    bl,cl
  4375c5:	mov    cl,0x44
  4375c7:	fbld   TBYTE PTR [eax+0x70]
  4375ca:	push   0xffffffb3
  4375cc:	ds aam 0x3
  4375cf:	add    BYTE PTR [edx+0x5],ah
  4375d2:	ret    0x3e23
  4375d5:	push   eax
  4375d6:	push   ebp
  4375d7:	stos   BYTE PTR es:[edi],al
  4375d8:	and    bl,0x6a
  4375db:	and    ah,BYTE PTR cs:[edi+0x522163e]
  4375e2:	mov    edx,0x23
	...
  4375f7:	add    BYTE PTR [esi-0x61],dl
  4375fa:	inc    esp
  4375fb:	dec    edi
  4375fc:	xchg   ecx,eax
  4375fd:	mov    dl,ah
  4375ff:	push   ecx
  437600:	out    0x33,eax
  437602:	and    DWORD PTR [eax],esp
  437604:	xor    bl,cl
  437606:	cmp    DWORD PTR [ebp+0x6e],ebp
  437609:	test   esp,esi
  43760b:	ret    
  43760c:	mov    ebp,0x2e446d2e
  437611:	lock aas 
  437613:	rol    BYTE PTR [eax+0x4e6ce7d9],0x79
  43761a:	aam    0xc3
  43761c:	popf   
  43761d:	push   esi
  43761e:	lahf   
  43761f:	ins    DWORD PTR es:[edi],dx
  437620:	cmp    BYTE PTR [ebx],ch
  437622:	imul   ecx,DWORD PTR [eax+0x59],0xc403e7d8
  437629:	fsubr  st(7),st
  43762b:	xor    BYTE PTR [ebp-0x77],0x1b
  43762f:	pop    edi
  437630:	(bad)  
  437632:	push   edx
  437633:	jg     0x437646
  437635:	mov    ch,0xd7
  437637:	pop    ebx
  437638:	and    al,0x8d
  43763a:	jp     0x4376a9
  43763c:	loope  0x4375d7
  43763e:	cld    
  43763f:	sti    
  437640:	mov    ds:0xbc03695c,eax
  437645:	jae    0x437695
  437647:	push   edi
  437648:	fcomp  QWORD PTR [edx+0x5496584e]
  43764e:	inc    ebx
  43764f:	fisub  DWORD PTR [edx-0x78]
  437652:	aam    0x17
  437654:	(bad)  
  437655:	(bad)  [edi+0x27]
  437658:	sub    DWORD PTR [ecx+0x813a],ecx
	...
  43766e:	add    BYTE PTR [eax],al
  437670:	adc    eax,0xe717bb89
  437675:	push   ss
  437676:	aam    0xd2
  437678:	xchg   ecx,ebx
  43767a:	mov    bh,0x44
  43767c:	sahf   
  43767d:	in     eax,dx
  43767e:	addr16 add al,0x62
  437681:	fst    DWORD PTR [edx]
  437683:	pop    ss
  437684:	inc    esi
  437685:	out    dx,eax
  437686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437687:	add    ecx,DWORD PTR [edi-0x6ffc2465]
  43768d:	push   esp
  43768e:	clc    
  43768f:	sbb    bl,0x88
  437692:	add    BYTE PTR [ebp+0x71],bh
  437695:	(bad)  
  437696:	(bad)  
  437697:	xchg   esi,eax
  437698:	ds in  eax,dx
  43769a:	in     al,0xfc
  43769c:	mov    eax,ds:0x54de5388
  4376a1:	in     eax,dx
  4376a2:	adc    ch,BYTE PTR [ecx]
  4376a4:	pop    esi
  4376a5:	and    edi,DWORD PTR [esi+0x672b943a]
  4376ab:	fmul   DWORD PTR [ebx-0x553f797a]
  4376b1:	shl    DWORD PTR [ecx-0x5e74d12],cl
  4376b7:	aam    0x19
  4376b9:	in     eax,dx
  4376ba:	inc    eax
  4376bb:	jmp    0x9fc0eeca
  4376c0:	push   cs
  4376c1:	or     al,0x1e
  4376c3:	cmovns esp,esp
  4376c6:	in     ax,dx
  4376c8:	cwde   
  4376c9:	(bad)  
  4376ca:	adc    BYTE PTR [ecx],ah
  4376cc:	addr16 sbb al,0xc9
  4376cf:	sbb    BYTE PTR [edi],dh
  4376d1:	sub    bh,dl
  4376d3:	fadd   QWORD PTR [eax]
	...
  4376e5:	add    BYTE PTR [eax],al
  4376e7:	add    BYTE PTR [ebp-0x1b16bf13],ch
  4376ed:	inc    edi
  4376ee:	je     0x4376e3
  4376f0:	das    
  4376f1:	adc    DWORD PTR [ebx],0xfffffff5
  4376f4:	push   edi
  4376f5:	sbb    DWORD PTR [ecx],eax
  4376f7:	push   0x77
  4376f9:	sbb    DWORD PTR [ecx+0x62],0xffffffa7
  4376fd:	and    dl,BYTE PTR [esi+0x2a]
  437700:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437701:	sbb    esp,ebp
  437703:	push   0xffffff89
  437705:	ror    DWORD PTR [ecx],cl
  437707:	outs   dx,BYTE PTR ds:[esi]
  437708:	lock fadd DWORD PTR [eax]
  43770b:	jmp    0x74c7338e
  437710:	lods   al,BYTE PTR ds:[esi]
  437711:	mov    BYTE PTR [eax],0x69
  437714:	mov    esi,DWORD PTR [ebx-0x721e088c]
  43771a:	es xchg ebp,eax
  43771c:	pop    eax
  43771d:	pop    ecx
  43771e:	mov    BYTE PTR [eax],0x1b
  437721:	pop    esp
  437722:	repz popa 
  437724:	int3   
  437725:	pop    ecx
  437726:	ins    DWORD PTR es:[edi],dx
  437727:	add    ebx,ecx
  437729:	fild   DWORD PTR [eax+0x7e8551fa]
  43772f:	imul   edi,DWORD PTR [edx-0x4895ff25],0x26
  437736:	cld    
  437737:	imul   ebp,DWORD PTR [ebp-0x675456d],0x1a3c1980
  437741:	(bad)  
  437742:	(bad)  
  437743:	cmp    esp,DWORD PTR [ecx]
  437745:	mov    edx,?
  437747:	mov    cl,dl
  437749:	pop    ds
  43774a:	jp     0x437746
	...
  437760:	xchg   ecx,eax
  437761:	add    BYTE PTR [ebx+ecx*2+0x6a00db7a],0x76
  437769:	xchg   ebx,eax
  43776a:	mov    edx,0x5e3d180
  43776f:	test   DWORD PTR [ebp+0x510000dc],ebx
  437775:	jmp    0x4377cf
  437777:	ret    
  437778:	retf   
  437779:	mul    DWORD PTR [esi]
  43777b:	shufps xmm1,xmm4,0xff
  43777f:	(bad)  
  437780:	cmp    esp,DWORD PTR [ebp+0x5d78580e]
  437786:	repz pop ebx
  437788:	push   ss
  437789:	xchg   DWORD PTR [ebx+0x18],esp
  43778c:	repz pop ds
  43778e:	test   dl,al
  437790:	btc    DWORD PTR [ecx+eiz*2],edi
  437794:	jmp    0xd5bdad1f
  437799:	rol    BYTE PTR [eax+0x47f1bfa],cl
  43779f:	adc    BYTE PTR [ecx-0x4c],0x76
  4377a3:	push   cs
  4377a4:	jnp    0x43779d
  4377a6:	daa    
  4377a7:	je     0x43779b
  4377a9:	pop    edx
  4377aa:	repz sub eax,0xff807f62
  4377b0:	bound  esi,QWORD PTR [eax-0x3]
  4377b3:	gs dec ecx
  4377b5:	cmp    BYTE PTR [edx-0x7b],al
  4377b8:	mov    al,ds:0x433c1d74
  4377bd:	add    bh,dl
  4377bf:	cmp    ecx,DWORD PTR [eax+0xe]
  4377c2:	outs   dx,BYTE PTR ds:[esi]
  4377c3:	jg     0x4377c5
	...
  4377d5:	add    BYTE PTR [eax],al
  4377d7:	add    al,cl
  4377d9:	loopne 0x4377c3
  4377db:	add    al,0xe2
  4377dd:	jp     0x43780b
  4377df:	jp     0x43779d
  4377e1:	lock imul ebp,DWORD PTR [ecx],0x36
  4377e5:	xchg   ecx,eax
  4377e6:	jge    0x4377dd
  4377e8:	ja     0x4377ae
  4377ea:	dec    eax
  4377eb:	jg     0x437785
  4377ed:	xlat   BYTE PTR ds:[ebx]
  4377ee:	cmc    
  4377ef:	add    DWORD PTR [esi],0x4f
  4377f2:	data16 cli 
  4377f4:	loop   0x437840
  4377f6:	sub    esi,DWORD PTR [edi+edx*2-0x10]
  4377fa:	imul   edi,DWORD PTR [edx],0x6d
  4377fd:	std    
  4377fe:	inc    eax
  4377ff:	push   DWORD PTR [ebp+0x70]
  437802:	fistp  DWORD PTR [edx]
  437804:	or     dh,BYTE PTR [ebx]
  437806:	fistp  DWORD PTR [ebx]
  437808:	or     dh,BYTE PTR [ebx]
  43780a:	jge    0x437801
  43780c:	mov    edi,0x7865f98d
  437811:	call   0x408bf757
  437816:	loope  0x43781c
  437818:	loop   0x437813
  43781a:	sub    al,0x7a
  43781c:	push   edi
  43781d:	or     al,BYTE PTR [ebx+ecx*1-0x7e]
  437821:	in     al,dx
  437822:	jecxz  0x437891
  437824:	data16 aam 0xde
  437827:	jno    0x437884
  437829:	lock imul esi,DWORD PTR ds:0xff90fd6d,0x15
  437831:	jo     0x43780e
  437833:	sbb    BYTE PTR [edx+0x35f57db3],ch
  437839:	fptan  
  43783b:	jg     0x43783d
	...
  43784d:	add    BYTE PTR [eax],al
  43784f:	add    BYTE PTR [edx-0x7a],al
  437852:	sbb    ch,BYTE PTR [edx+0x75]
  437855:	adc    edx,0xffffffef
  437858:	stos   DWORD PTR es:[edi],eax
  437859:	pop    eax
  43785a:	std    
  43785b:	xor    ah,dl
  43785d:	xor    al,0xf2
  437860:	push   esp
  437861:	repz fmul st(3),st
  437864:	adc    al,0xd6
  437866:	cmp    DWORD PTR [ebp+0x4d],eax
  437869:	inc    ecx
  43786a:	daa    
  43786b:	jmp    0xf92b51f5
  437870:	out    0xe8,al
  437872:	fisubr DWORD PTR [ecx-0x48]
  437875:	pop    eax
  437876:	int    0x25
  437878:	aaa    
  437879:	ins    DWORD PTR es:[edi],dx
  43787a:	cmp    eax,0xf29a0a23
  43787f:	mov    cl,0xdf
  437881:	pop    eax
  437882:	jg     0x4378c8
  437884:	sbb    ebx,DWORD PTR [ecx]
  437886:	call   0x3e208e8e
  43788b:	and    al,0x2a
  43788d:	call   0x8483:0xd5c6e67
  437894:	outs   dx,DWORD PTR ds:[esi]
  437895:	lds    ebx,FWORD PTR [eax+eax*8]
  437898:	test   BYTE PTR [eax+0x58a7b1da],cl
  43789e:	aas    
  43789f:	inc    esp
  4378a0:	fistp  DWORD PTR [ecx]
  4378a2:	call   0xfe2146aa
  4378a7:	and    eax,0x6e6798aa
  4378ac:	fs aam 0x6b
  4378af:	push   esi
  4378b0:	cmp    eax,DWORD PTR [ebp+0x845a]
	...
  4378c6:	add    BYTE PTR [eax],al
  4378c8:	das    
  4378c9:	(bad)
  4378cc:	inc    ebp
  4378cd:	jbe    0x4378a9
  4378cf:	mov    cl,0xe7
  4378d1:	pop    ecx
  4378d2:	jg     0x437918
  4378d4:	fwait
  4378d5:	sbb    eax,ebp
  4378d7:	add    ebp,DWORD PTR [ecx+0x5e]
  4378da:	add    BYTE PTR [edx+0x78],dh
  4378dd:	jg     0x4378d8
  4378df:	imul   esi,DWORD PTR [ebx+eiz*8+0x9],0xf982b46d
  4378e7:	push   ds
  4378e8:	fimul  WORD PTR [esi+0x316de639]
  4378ee:	cli    
  4378ef:	push   cs
  4378f0:	jnp    0x4378a5
  4378f2:	shr    BYTE PTR [ecx-0x16b8aada],0x3d
  4378f9:	xchg   ebx,eax
  4378fa:	ds jmp 0xe9822686
  437900:	jp     0x4378af
  437902:	ds jmp 0xe98221fd
  437908:	test   al,0xa8
  43790a:	ds jmp 0xe9822127
  437910:	push   0xffe93ea8
  437915:	test   al,0x3e
  437917:	jmp    0xe9822133
  43791c:	data16 scas al,BYTE PTR es:[edi]
  43791e:	ds jmp 0xe9822118
  437924:	jp     0x4378d3
  437926:	ds jmp 0xe9822785
	...
  437940:	dec    ecx
  437941:	scas   al,BYTE PTR es:[edi]
  437942:	ds jmp 0xe98226ed
  437948:	cmp    eax,0xdee93ead
  43794d:	outs   dx,DWORD PTR ds:[esi]
  43794e:	and    al,0x6a
  437950:	sub    eax,0x2ee910b8
  437955:	sub    eax,0x27b07253
  43795a:	xchg   DWORD PTR [edi+0x69c85b52],esp
  437960:	sar    bh,0x87
  437963:	mov    ch,0x45
  437965:	in     eax,dx
  437966:	xchg   DWORD PTR [eax],eax
  437968:	(bad)  
  43796a:	xor    BYTE PTR [eax+0x7409e3c7],cl
  437970:	cld    
  437971:	int3   
  437972:	shr    cl,0x8c
  437975:	fld    QWORD PTR [eax]
  437977:	add    BYTE PTR [eax+0xb3c1d7c],cl
  43797d:	jae    0x4379c3
  43797f:	mov    al,ch
  437981:	(bad)  
  437982:	test   cl,cl
  437984:	iret   
  437985:	loopne 0x437907
  437987:	stc    
  437988:	leave  
  437989:	mov    edi,ebx
  43798b:	and    BYTE PTR [edx-0x7c],0x6d
  43798f:	loope  0x4379cc
  437991:	out    dx,eax
  437992:	adc    BYTE PTR [edi+edx*2+0x58],dh
  437996:	clc    
  437997:	cmp    eax,0x4281d01e
  43799c:	arpl   WORD PTR [edx-0x47],bx
  43799f:	je     0x43798c
  4379a1:	inc    edi
  4379a3:	inc    DWORD PTR [eax]
	...
  4379b5:	add    BYTE PTR [eax],al
  4379b7:	add    bl,ch
  4379b9:	pop    ecx
  4379ba:	mov    ecx,0x3ffed374
  4379bf:	pop    ss
  4379c0:	pop    edi
  4379c1:	add    al,0x6
  4379c3:	pop    es
  4379c4:	add    eax,DWORD PTR [ebx+0xe]
  4379c7:	jmp    0x4379c0
  4379c9:	mov    eax,0xff730c88
  4379ce:	aas    
  4379cf:	pop    ss
  4379d0:	cwde   
  4379d1:	pop    ss
  4379d2:	cmp    ch,cl
  4379d4:	pusha  
  4379d5:	fadd   DWORD PTR [eax]
  4379d7:	add    BYTE PTR [ecx],al
  4379d9:	inc    ebx
  4379da:	add    BYTE PTR [ebx+0x3338b977],cl
  4379e0:	add    BYTE PTR [edx+0x107f0f26],dh
  4379e6:	mov    DWORD PTR [edi+ebx*1-0x1d],ebx
  4379ea:	sub    ebx,ebx
  4379ec:	xchg   ebp,ecx
  4379ee:	add    eax,0x56047644
  4379f3:	and    al,0x62
  4379f5:	mov    WORD PTR [ecx],ss
  4379f7:	adc    al,0x71
  4379f9:	(bad)  
  4379fa:	sub    BYTE PTR [edx],cl
  4379fc:	jmp    0x657f9335
  437a01:	cmp    cl,BYTE PTR [eax-0x78]
  437a04:	scas   al,BYTE PTR es:[edi]
  437a05:	aam    0x1c
  437a07:	lea    esp,[esi-0x28]
  437a0a:	cmp    DWORD PTR [ebx+0x46],eax
  437a0d:	fdiv   DWORD PTR [eax+eax*1]
  437a10:	bound  esi,QWORD PTR [eax+0x76]
  437a13:	cld    
  437a14:	fisttp DWORD PTR [ecx+ebx*1+0x2c]
  437a18:	sub    edi,edx
  437a1a:	icebp  
  437a1b:	add    DWORD PTR [eax],0x0
	...
  437a2e:	add    BYTE PTR [eax],al
  437a30:	outs   dx,BYTE PTR cs:[esi]
  437a32:	std    
  437a33:	jmp    edx
  437a35:	add    al,BYTE PTR ds:0xeaabd838
  437a3b:	pextrw edi,(bad),0xc5
  437a3d:	cmp    bh,cl
  437a3f:	cmp    BYTE PTR [esp+esi*2],0xfd
  437a43:	aas    
  437a44:	arpl   WORD PTR [eax-0xe],si
  437a47:	and    BYTE PTR [ecx-0x7f],0xfd
  437a4b:	call   DWORD PTR [ebp+0x6a]
  437a4e:	mov    ebx,0x65ef2a00
  437a53:	cmp    al,0x65
  437a55:	sti    
  437a56:	xchg   edi,eax
  437a57:	adc    BYTE PTR [edx+0x70],ah
  437a5a:	bound  esp,QWORD PTR [ebx]
  437a5c:	(bad)  
  437a5e:	pop    esp
  437a5f:	cmp    eax,0xc66f062
  437a64:	gs cld 
  437a66:	idiv   ch
  437a68:	ins    DWORD PTR es:[edi],dx
  437a69:	jo     0x437ae8
  437a6b:	neg    BYTE PTR [eax-0x5d]
  437a6e:	jns    0x437a6d
  437a70:	arpl   WORD PTR [eax-0x3],si
  437a73:	jg     0x437af1
  437a75:	outs   dx,DWORD PTR ds:[esi]
  437a76:	jle    0x437ac1
  437a78:	pop    edx
  437a79:	or     edi,DWORD PTR [edi+0x49]
  437a7c:	push   esi
  437a7d:	repz ja 0x437a81
  437a80:	loop   0x437a5a
  437a82:	pop    esi
  437a83:	mov    ebx,0x49b5d68
  437a88:	(bad)  
  437a89:	(bad)  [ebx]
  437a8b:	push   0xfd5fe8bf
  437a90:	mov    ch,0x51
  437a92:	test   eax,0x4
	...
  437aa7:	add    ch,bh
  437aa9:	dec    ecx
  437aaa:	addr16 push 0x5e
  437aad:	shr    BYTE PTR [ebx+0x1e],cl
  437ab0:	add    eax,0xf483e782
  437ab5:	into   
  437ab6:	repnz sub BYTE PTR [esi+edx*8+0x1b2003e7],0xe9
  437abf:	cs std 
  437ac1:	popa   
  437ac2:	addr16 push 0x6e
  437ac5:	shr    BYTE PTR [ebx-0x7f],cl
  437ac8:	popa   
  437ac9:	(bad)  
  437acb:	adc    esp,0xffffffce
  437ace:	loop   0x437a50
  437ad0:	pop    eax
  437ad1:	(bad)  
  437ad2:	out    0x3,eax
  437ad4:	cmp    eax,0x62080c05
  437ad9:	fwait
  437ada:	and    DWORD PTR [ebx],eax
  437adc:	jl     0x437aeb
  437ade:	data16 jns 0x437b20
  437ae1:	aad    0x64
  437ae3:	push   edi
  437ae4:	adc    eax,ecx
  437ae6:	outs   dx,BYTE PTR ds:[esi]
  437ae7:	rol    BYTE PTR [ecx-0x1b],1
  437aea:	outs   dx,BYTE PTR ds:[esi]
  437aeb:	cmp    eax,0x80c1d44
  437af0:	fst    QWORD PTR [edx+0x5b966517]
  437af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437af7:	lock pop edi
  437af9:	dec    edi
  437afa:	and    DWORD PTR ds:0xffe35d46,ecx
  437b00:	fstp   QWORD PTR [edx]
  437b02:	repz jns 0x437ab0
  437b05:	call   0x521bde71
  437b0a:	sub    esp,DWORD PTR [eax]
	...
  437b20:	pop    ebp
  437b21:	rol    BYTE PTR [eax],1
  437b23:	ins    BYTE PTR es:[edi],dx
  437b24:	sbb    dl,0x0
  437b27:	jmp    0xfd68a7e6
  437b2c:	loop   0x437b2a
  437b2e:	and    al,0xfd
  437b30:	popa   
  437b31:	jb     0x437b63
  437b33:	call   0x52c45499
  437b38:	inc    esi
  437b39:	aam    0x84
  437b3b:	clc    
  437b3c:	adc    eax,0x8d3f981
  437b41:	sub    DWORD PTR [edi],esi
  437b43:	adc    DWORD PTR [edi],ecx
  437b45:	pop    ebp
  437b46:	and    ah,ch
  437b48:	popa   
  437b49:	fld    st(2)
  437b4b:	scas   eax,DWORD PTR es:[edi]
  437b4c:	pusha  
  437b4d:	scas   al,BYTE PTR es:[edi]
  437b4e:	out    0xca,eax
  437b50:	xchg   BYTE PTR [ebx-0x29849607],al
  437b56:	or     DWORD PTR [esi+esi*8-0x26],esp
  437b5a:	add    cl,ch
  437b5c:	pop    ebx
  437b5d:	fcmovb st,st(0)
  437b5f:	adc    DWORD PTR [eax+0x31],esp
  437b62:	or     dh,ah
  437b64:	inc    esp
  437b65:	rol    BYTE PTR [ecx+ebp*8],1
  437b68:	popa   
  437b69:	fwait
  437b6a:	inc    edx
  437b6b:	call   0x5453acf9
  437b70:	test   al,0x0
  437b72:	jnp    0x437b73
  437b74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437b75:	or     al,0x5
  437b77:	sbb    ah,BYTE PTR [esi]
  437b79:	ja     0x437b78
  437b7b:	stc    
  437b7c:	and    eax,eax
  437b7e:	ror    cl,0x8e
  437b81:	(bad)  
  437b82:	mov    edi,0x61
	...
  437b97:	add    bh,al
  437b99:	jmp    0x437b20
  437b9b:	sub    edx,DWORD PTR [esi+0x56]
  437b9e:	rcr    BYTE PTR ds:0x9eca5867,0x11
  437ba5:	(bad)  
  437ba6:	call   0x4919f194
  437bab:	(bad)  
  437bad:	iret   
  437bae:	adc    BYTE PTR [eax],al
  437bb0:	dec    ebx
  437bb1:	fadd   QWORD PTR [eax+0x4e01bb0e]
  437bb7:	and    al,0x27
  437bb9:	add    cl,BYTE PTR [eax+0x17]
  437bbc:	retf   
  437bbd:	sti    
  437bbe:	jbe    0x437b48
  437bc0:	out    dx,eax
  437bc1:	fisttp WORD PTR [ecx]
  437bc3:	xrstors [edx]
  437bc6:	clc    
  437bc7:	dec    DWORD PTR [ebx+eiz*1-0x23f4efff]
  437bce:	or     DWORD PTR [esi+0x13],0x442bc501
  437bd5:	fld    DWORD PTR [esp+0xf]
  437bd9:	push   ebx
  437bda:	sub    dl,0x80
  437bdd:	mov    es,WORD PTR ds:0x36d363b
  437be3:	jb     0x437bec
  437be5:	mov    cl,0xc8
  437be7:	jae    0x437be0
  437be9:	add    cl,al
  437beb:	mov    esp,DWORD PTR [ecx+0x1]
  437bee:	outs   dx,BYTE PTR ds:[esi]
  437bef:	and    al,0xab
  437bf1:	(bad)  
  437bf2:	out    dx,eax
  437bf3:	sysret 
  437bf5:	in     eax,dx
  437bf6:	and    cl,al
  437bf8:	mov    al,0xe
  437bfa:	sub    DWORD PTR [eax+eax*1+0x0],0x0
	...
  437c0f:	add    BYTE PTR [edi+0x178948b3],ah
  437c15:	mov    cl,0x20
  437c17:	mov    edx,DWORD PTR [edi]
  437c19:	mov    cl,0x30
  437c1b:	add    edx,DWORD PTR [ebx+0x7d89c04f]
  437c21:	int    0x82
  437c23:	dec    esp
  437c24:	mov    BYTE PTR [bx+si+0x7f56],cl
  437c29:	into   
  437c2a:	mov    edx,0x14b1678b
  437c2f:	clts   
  437c31:	or     dl,bh
  437c33:	dec    DWORD PTR [ebx-0x64db8aaa]
  437c39:	fstp   TBYTE PTR [esi+0x1f716246]
  437c3f:	or     esp,esi
  437c41:	retf   
  437c42:	pop    esi
  437c43:	cli    
  437c44:	push   ebp
  437c45:	or     al,0xeb
  437c47:	adc    esp,edi
  437c49:	dec    ebp
  437c4a:	fdiv   DWORD PTR [ecx+ebx*8]
  437c4d:	fsubr  QWORD PTR [eax]
  437c4f:	and    cl,ch
  437c51:	aaa    
  437c52:	sub    DWORD PTR [esi+edi*2-0x30],eax
  437c56:	mov    ecx,ecx
  437c58:	mov    ds:0xdfd45e40,al
  437c5d:	mov    al,0xd8
  437c5f:	add    eax,0x23f636e8
  437c64:	fadd   QWORD PTR [edi+eax*1-0x74585b78]
  437c6b:	dec    ecx
  437c6c:	ins    DWORD PTR es:[edi],dx
  437c6d:	lock arpl WORD PTR [edx-0x16],di
  437c71:	pop    esp
  437c72:	and    DWORD PTR [edi],ecx
	...
  437c88:	outs   dx,BYTE PTR ds:[esi]
  437c89:	sub    DWORD PTR [edx],0x8a78467c
  437c8f:	ret    0x9bfb
  437c92:	add    al,0x0
  437c94:	(bad)  
  437c95:	cli    
  437c96:	shl    BYTE PTR [ebx],1
  437c98:	jno    0x437c85
  437c9a:	or     BYTE PTR [edi+0x7ef19436],al
  437ca0:	mov    WORD PTR ds:0x21fce900,ds
  437ca7:	cmp    bl,cl
  437ca9:	outs   dx,DWORD PTR ds:[esi]
  437caa:	pop    edi
  437cab:	cli    
  437cac:	lods   eax,DWORD PTR ds:[esi]
  437cad:	mov    DWORD PTR ss:[eax],0x8503fb61
  437cb4:	mov    ds:0xa4872724,al
  437cb9:	xchg   edi,eax
  437cba:	sub    eax,0xac4a284
  437cbf:	xchg   BYTE PTR [edi+ebx*4],bl
  437cc2:	and    DWORD PTR [ecx+0x4185716e],eax
  437cc8:	dec    ebp
  437cc9:	fldcw  WORD PTR [ebp-0x2f]
  437ccc:	push   eax
  437ccd:	pop    ecx
  437cce:	mov    dl,ah
  437cd0:	fisttp QWORD PTR ds:0x5468f6cc
  437cd6:	jmp    0x6f1cdee9
  437cdb:	mov    bh,0x81
  437cdd:	in     eax,0x22
  437cdf:	pop    ds
  437ce0:	(bad)  
  437ce1:	mov    ch,0xc3
  437ce3:	adc    ah,bh
  437ce5:	inc    esp
  437ce6:	ins    BYTE PTR es:[edi],dx
  437ce7:	bound  edi,QWORD PTR [eax]
  437ce9:	push   edx
  437cea:	mov    bl,0x27
	...
  437d00:	xchg   BYTE PTR [eax+esi*1-0x29],dl
  437d04:	jg     0x437d58
  437d06:	lods   eax,DWORD PTR ds:[esi]
  437d07:	or     esp,edi
  437d09:	mov    eax,ds:0x95dd26d3
  437d0e:	push   cs
  437d0f:	inc    ebp
  437d10:	in     al,0xa7
  437d12:	xchg   edi,eax
  437d13:	mov    ds,WORD PTR [ebx]
  437d15:	jle    0x437d2d
  437d17:	mov    BYTE PTR [ebp-0x5c7221fc],bh
  437d1d:	out    0xcb,al
  437d1f:	xchg   BYTE PTR [ecx-0x26],bl
  437d22:	outs   dx,DWORD PTR ds:[esi]
  437d23:	leave  
  437d24:	push   eax
  437d25:	xchg   DWORD PTR [ecx+0x64ce58fa],ebp
  437d2b:	inc    ecx
  437d2c:	imul   ebx,ecx,0xffffffe7
  437d2f:	mov    ds,WORD PTR [ecx]
  437d31:	mov    ch,0xdb
  437d33:	mov    fs,WORD PTR [ecx]
  437d35:	mov    ch,0xdb
  437d37:	mov    BYTE PTR [edx+0xd8eba04],ch
  437d3d:	int    0x6c
  437d3f:	cmp    eax,0x496eb631
  437d44:	jl     0x437cde
  437d46:	pop    esi
  437d47:	xor    ebp,DWORD PTR ds:0xa4619952
  437d4d:	push   ebx
  437d4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437d4f:	fsub   DWORD PTR [edi+0x53]
  437d52:	and    ecx,edi
  437d54:	inc    ecx
  437d55:	push   ebp
  437d56:	add    ch,ah
  437d58:	gs push ecx
  437d5a:	inc    edx
  437d5b:	(bad)  
  437d5c:	sbb    ebx,DWORD PTR [eax]
  437d5e:	adc    ah,BYTE PTR [esi]
  437d60:	push   ebx
  437d61:	push   esp
  437d62:	test   al,0xef
	...
  437d78:	popa   
  437d79:	fld    DWORD PTR [ebp-0x7a1a75d3]
  437d7f:	sbb    eax,0xb083b18a
  437d84:	sub    dh,BYTE PTR [edi+0x565a2185]
  437d8a:	aad    0xfd
  437d8c:	xchg   BYTE PTR [ecx+eax*8-0x3e],dl
  437d90:	mov    al,ds:0xdeb9cf53
  437d95:	xchg   edx,eax
  437d96:	stc    
  437d97:	cmp    bl,ch
  437d99:	cmp    al,0x74
  437d9b:	jecxz  0x437d8c
  437d9d:	sbb    dl,BYTE PTR [edx]
  437d9f:	add    eax,0x70fed0dc
  437da4:	sbb    al,ch
  437da6:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437da8:	or     al,BYTE PTR [eax]
  437daa:	or     ch,BYTE PTR [esp+edx*1-0x2d]
  437dae:	add    cl,ch
  437db0:	out    0x10,al
  437db2:	and    eax,0x7491e4c9
  437db7:	iret   
  437db8:	(bad)  
  437db9:	and    BYTE PTR ds:0x1523eefd,ah
  437dbf:	fs xchg edi,eax
  437dc1:	or     BYTE PTR [esi],bl
  437dc3:	jb     0x437de0
  437dc5:	mov    bl,0xbf
  437dc7:	jb     0x437d5a
  437dc9:	or     al,0x86
  437dcb:	daa    
  437dcc:	inc    ebx
  437dcd:	mov    eax,DWORD PTR [ebx-0x792965d7]
  437dd3:	das    
  437dd4:	stos   DWORD PTR es:[edi],eax
  437dd5:	mov    eax,0x515bed82
  437dda:	inc    edx
  437ddb:	inc    BYTE PTR [eax]
	...
  437ded:	add    BYTE PTR [eax],al
  437def:	add    BYTE PTR [ebx],bh
  437df1:	sbb    dl,BYTE PTR [edx]
  437df3:	dec    esi
  437df4:	jae    0x437e4c
  437df6:	cmp    al,0x0
  437df8:	xchg   ebp,eax
  437df9:	fadd   DWORD PTR [eax]
  437dfb:	mov    edi,DWORD PTR [edi]
  437dfd:	mov    cl,0x3c
  437dff:	pop    edi
  437e00:	push   ebp
  437e01:	cmp    al,0x52
  437e03:	cmp    DWORD PTR [edi+0x7b08bab4],0xffffffe9
  437e0a:	scas   al,BYTE PTR es:[edi]
  437e0b:	ret    
  437e0c:	icebp  
  437e0d:	push   edi
  437e0e:	mov    ecx,0x84d58b7c
  437e13:	shl    BYTE PTR [esp+edx*2],0xe2
  437e17:	or     eax,0x5c81d83b
  437e1c:	pop    ds
  437e1d:	mov    ah,0x83
  437e1f:	fild   DWORD PTR [edx+edi*1-0x47]
  437e23:	movq   QWORD PTR [edx],mm3
  437e26:	mov    DWORD PTR [edi+ebx*2-0x4f],ebx
  437e2a:	mov    esi,0xbed83846
  437e2f:	inc    esi
  437e30:	or     cl,dl
  437e32:	jns    0x437e1c
  437e34:	sub    BYTE PTR [ebp+eiz*1+0x74cbb383],ah
  437e3b:	push   ds
  437e3c:	js     0x437e2e
  437e3e:	std    
  437e3f:	jae    0x437e5c
  437e41:	nop
  437e42:	push   es
  437e43:	test   eax,ebp
  437e45:	into   
  437e46:	add    BYTE PTR [eax],al
  437e48:	cmp    eax,0x5207fb92
  437e4d:	or     eax,0x1274fff8
  437e52:	inc    eax
  437e53:	add    al,BYTE PTR [eax]
	...
  437e65:	add    BYTE PTR [eax],al
  437e67:	add    BYTE PTR [esi+ebp*8-0x69b0145],bh
  437e6e:	mov    edi,0xe7d2b946
  437e73:	mov    ecx,0xc6f71bb5
  437e78:	std    
  437e79:	aad    0xff
  437e7b:	call   0x3a994b
  437e80:	std    
  437e81:	xchg   edx,eax
  437e82:	add    BYTE PTR [edi],dh
  437e84:	bound  ebx,QWORD PTR [ecx-0x756a065f]
  437e8a:	or     DWORD PTR [edx-0x31788fdc],esi
  437e90:	loop   0x437ed9
  437e92:	and    al,0x7f
  437e94:	jp     0x437f0a
  437e96:	or     cl,BYTE PTR [ebx-0x28e65]
  437e9c:	pop    ebp
  437e9d:	out    dx,al
  437e9e:	jg     0x437e9f
  437ea0:	gs jno 0x437f21
  437ea3:	out    0x62,eax
  437ea5:	jae    0x437e28
  437ea7:	jge    0x437efd
  437ea9:	dec    esp
  437eaa:	pop    ecx
  437eab:	gs pop ebx
  437ead:	mov    dh,0x25
  437eaf:	mov    esi,0xf9d1f455
  437eb4:	cmp    eax,0x4d73cd04
  437eb9:	mov    eax,0xf2bf8409
  437ebe:	pop    ecx
  437ebf:	cli    
  437ec0:	fnstenv [ecx+eiz*1]
  437ec3:	sbb    dl,ch
  437ec5:	sub    al,BYTE PTR [edx+eax*8]
  437ec8:	pushf  
  437ec9:	outs   dx,BYTE PTR ds:[esi]
  437eca:	std    
  437ecb:	call   0x437ed0
	...
  437ee0:	scas   eax,DWORD PTR es:[edi]
  437ee1:	adc    bl,BYTE PTR [edx-0x6]
  437ee4:	loop   0x437efd
  437ee6:	and    eax,0x5b5ce60b
  437eeb:	cli    
  437eec:	cmc    
  437eed:	not    eax
  437eef:	and    ecx,DWORD PTR [edx+0x76]
  437ef2:	cmp    al,0xa
  437ef4:	(bad)  
  437ef5:	inc    ecx
  437ef6:	adc    BYTE PTR [eax],al
  437ef8:	(bad)  
  437ef9:	lock push ebp
  437efb:	cmp    BYTE PTR [ebp+0x1b],ah
  437efe:	int    0xc
  437f00:	bound  esi,QWORD PTR [eax-0x19]
  437f03:	call   DWORD PTR [edx+edi*4+0x3d]
  437f07:	gs push 0x890bd383
  437f0d:	mov    cl,0x59
  437f0f:	jno    0x437f6b
  437f11:	fld    DWORD PTR [eax-0x32b17276]
  437f17:	imul   edi,DWORD PTR [ebx-0x6afc1752],0xffffffa2
  437f1e:	imul   BYTE PTR [ecx+0x54]
  437f21:	jmp    0x437f16
  437f23:	push   cs
  437f24:	add    al,0xe7
  437f26:	in     al,dx
  437f27:	add    esp,DWORD PTR [edx+0x2]
  437f2a:	loope  0x437f46
  437f2c:	sbb    cl,dl
  437f2e:	fiadd  DWORD PTR [ecx+0x3e7cc60]
  437f34:	fst    QWORD PTR [esi-0x7e23b73a]
  437f3a:	xchg   edx,eax
  437f3b:	push   cs
  437f3c:	fidivr WORD PTR [esi-0x25]
  437f3f:	add    esp,DWORD PTR [edx+0x50]
  437f42:	adc    DWORD PTR [eax],edx
	...
  437f58:	fucomp st(4)
  437f5a:	ret    
  437f5b:	sbb    ebp,ebx
  437f5d:	sbb    ah,al
  437f5f:	mov    DWORD PTR [ecx+0x3b6cd6b5],ebp
  437f65:	jl     0x437fc9
  437f67:	pop    esi
  437f68:	sub    edx,DWORD PTR [ebx]
  437f6a:	out    0x89,eax
  437f6c:	stos   DWORD PTR es:[edi],eax
  437f6d:	(bad)  
  437f6e:	addr16 pop esp
  437f70:	pusha  
  437f71:	add    al,BYTE PTR ds:0xfd97d00f
  437f77:	jae    0x437f1a
  437f79:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  437f7b:	add    esi,DWORD PTR [edi-0x21]
  437f7e:	pop    esi
  437f7f:	mov    bh,0x41
  437f81:	in     eax,0x67
  437f83:	pop    esp
  437f84:	arpl   WORD PTR [edi-0x4d],cx
  437f87:	daa    
  437f88:	push   ebp
  437f89:	retf   0x4a64
  437f8c:	fidivr WORD PTR [ecx+0x12]
  437f8f:	inc    ebp
  437f90:	and    edx,edi
  437f92:	imul   DWORD PTR [edi+ecx*1+0x7c]
  437f96:	add    bl,BYTE PTR [esi-0x5d]
  437f99:	adc    ah,dh
  437f9b:	add    eax,ebp
  437f9d:	xchg   edi,eax
  437f9e:	add    BYTE PTR [edx+0x19],ch
  437fa1:	shl    BYTE PTR [ebx+eiz*4-0x20],1
  437fa5:	or     DWORD PTR [ecx],0xc0faad5d
  437fab:	(bad)  
  437fad:	cmp    esi,0xf9c4dee5
  437fb3:	into   
  437fb4:	das    
  437fb5:	push   ebx
  437fb6:	push   esp
  437fb7:	or     eax,0xf15d708a
	...
  437fd0:	popa   
  437fd1:	fsqrt  
  437fd3:	das    
  437fd4:	arpl   WORD PTR [ebx+0x4a],dx
  437fd7:	jmp    0xcf2e:0x1e0380e1
  437fde:	mov    dl,0xa8
  437fe0:	js     0x43802b
  437fe2:	pop    eax
  437fe3:	jnp    0x438003
  437fe5:	jns    0x43805b
  437fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437fe8:	fisttp DWORD PTR [eiz*1+0x471e1dd]
  437fef:	jae    0x438003
  437ff1:	mov    ebp,0xeadce60d
  437ff6:	sti    
  437ff7:	outs   dx,BYTE PTR ds:[esi]
  437ff8:	(bad)  
  437ff9:	call   0x5c6b:0x8233eb42
  438000:	mov    edi,0x62affa73
  438005:	pop    edi
  438006:	dec    edx
  438007:	jmp    0xe3c1:0xbe0671e1
  43800e:	mov    dl,0x28
  438010:	pop    eax
  438011:	dec    ecx
  438012:	dec    esp
  438013:	pop    ebx
  438014:	push   ds
  438015:	jns    0x43808b
  438017:	push   esp
  438018:	fisttp DWORD PTR [eiz*1+0x58e1fbfd]
  43801f:	jecxz  0x43804a
  438021:	pop    esi
  438022:	dec    esp
  438023:	int    0xd2
  438025:	jecxz  0x437faa
  438027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438028:	sub    al,0x73
  43802a:	stc    
  43802b:	add    cl,dh
  43802d:	imul   ebp,eax,0x52
  438030:	(bad)  
  438031:	fadd   QWORD PTR [eax]
  438033:	add    DWORD PTR [eax],0x0
	...
  438046:	add    BYTE PTR [eax],al
  438048:	das    
  438049:	rcr    BYTE PTR [eax+eax*1],0x85
  43804d:	lahf   
  43804e:	add    BYTE PTR [edx],dh
  438050:	xchg   edx,eax
  438051:	lods   al,BYTE PTR ds:[esi]
  438052:	add    DWORD PTR [eax],eax
  438054:	mov    ebx,DWORD PTR [esi]
  438056:	inc    eax
  438057:	add    DWORD PTR [esp+eax*1+0x20],ebx
  43805b:	std    
  43805c:	pushf  
  43805d:	adc    eax,0x9eb3ce83
  438062:	pop    es
  438063:	add    BYTE PTR [ebx+0x7d74b95f],cl
  438069:	push   cs
  43806a:	add    BYTE PTR [ebx],al
  43806c:	and    ecx,esp
  43806e:	pop    eax
  43806f:	push   0x6a
  438071:	xor    eax,DWORD PTR [esi]
  438073:	inc    esp
  438074:	or     al,BYTE PTR [ecx]
  438076:	sti    
  438077:	xor    cl,BYTE PTR [ebx]
  438079:	pushf  
  43807a:	adc    BYTE PTR [edi+eiz*1+0x70],0x81
  43807f:	inc    esi
  438080:	cmp    ah,BYTE PTR [ecx+0x3b]
  438083:	sbb    dh,al
  438085:	sbb    al,0x7
  438087:	test   BYTE PTR [eax-0x3fffff24],cl
  43808d:	es not eax
  438090:	mov    dh,0x1c
  438092:	pop    es
  438093:	test   BYTE PTR [ebx-0x7e0008e8],ah
  438099:	sahf   
  43809a:	push   cs
  43809b:	and    al,0x84
  43809d:	call   0x1896699f
  4380a2:	idiv   edi
  4380a4:	mov    edx,DWORD PTR [ecx]
  4380a6:	or     eax,0xf5ad870f
  4380ab:	inc    DWORD PTR [eax]
	...
  4380bd:	add    BYTE PTR [eax],al
  4380bf:	add    BYTE PTR [esp+ebx*2],bh
  4380c2:	repnz or ch,ah
  4380c5:	pop    edi
  4380c6:	(bad)  
  4380c7:	cld    
  4380c8:	jl     0x4380df
  4380ca:	test   BYTE PTR [esi+0x62],al
  4380cd:	ja     0x4380f0
  4380cf:	xchg   BYTE PTR [esi+0x7c],bl
  4380d2:	push   di
  4380d4:	push   esi
  4380d5:	cmp    ch,0x7f
  4380d8:	mov    ecx,0xe805d24d
  4380dd:	xchg   DWORD PTR [ecx],esp
  4380df:	std    
  4380e0:	pop    esi
  4380e1:	add    DWORD PTR [ebp-0x7b4b46ff],0x808727f6
  4380eb:	retf   
  4380ec:	imul   eax,DWORD PTR [edx-0x59bb8003],0x846c413e
  4380f6:	aas    
  4380f7:	inc    ecx
  4380f8:	popa   
  4380f9:	test   BYTE PTR [edi],bh
  4380fb:	inc    ecx
  4380fc:	arpl   WORD PTR [esp+ebp*2+0x55466e91],dx
  438103:	jg     0x438141
  438105:	add    DWORD PTR [edx-0x7ea895b7],0x49
  43810c:	dec    di
  43810e:	test   dh,dh
  438110:	pop    eax
  438111:	xchg   edi,eax
  438112:	jns    0x438165
  438114:	inc    esi
  438115:	pusha  
  438116:	push   ebp
  438117:	jg     0x438152
  438119:	xchg   BYTE PTR [esi],al
  43811b:	test   BYTE PTR [edi-0x1d05aa14],ah
  438121:	jmp    0x4380ef
  438123:	or     al,BYTE PTR [eax]
	...
  438135:	add    BYTE PTR [eax],al
  438137:	add    bh,bl
  438139:	repnz or DWORD PTR [eax],eax
  43813c:	bound  edi,QWORD PTR [esi+0x195f00be]
  438142:	sbb    bh,ah
  438144:	or     eax,0xaef68528
  438149:	outs   dx,DWORD PTR ds:[esi]
  43814a:	and    BYTE PTR [esi-0x3e027f9d],0x9c
  438151:	cmp    edi,0x55c497e8
  438157:	cli    
  438158:	loop   0x438133
  43815a:	push   ds
  43815b:	mov    al,0x68
  43815d:	pop    esp
  43815e:	add    BYTE PTR ds:0xc229d962,0x62
  438165:	fiadd  WORD PTR [eax]
  438167:	(bad)  
  438168:	leave  
  438169:	jbe    0x43816d
  43816b:	test   BYTE PTR [ecx+ecx*1-0x271f7f15],dh
  438172:	out    0x3,eax
  438174:	mov    al,ds:0xbb0be91f
  438179:	test   al,0xe3
  43817b:	pop    edx
  43817c:	cwde   
  43817d:	pop    ecx
  43817e:	fisubr WORD PTR [edx]
  438180:	imul   ebx,DWORD PTR [esp+ebx*2+0x5],0xd3dd962
  438188:	sub    ah,BYTE PTR [ecx+0x29]
  43818b:	add    eax,0x5abbd48b
  438190:	js     0x4381f6
  438192:	es xor al,0x29
  438195:	loopne 0x438171
  438197:	and    BYTE PTR [esi],0xe2
  43819a:	out    0x3,eax
	...
  4381b0:	shl    dh,0x59
  4381b3:	inc    esi
  4381b4:	ret    
  4381b5:	ret    0x202b
  4381b8:	push   0xffffff9f
  4381ba:	and    DWORD PTR ds:0xc170ff5c,eax
  4381c0:	ins    DWORD PTR es:[edi],dx
  4381c1:	cmp    BYTE PTR [ebx+0x5e],0x38
  4381c5:	jbe    0x43822e
  4381c7:	pop    esi
  4381c8:	jnp    0x4381b6
  4381ca:	loopne 0x43820d
  4381cc:	mov    ds:0xb6ceed8,eax
  4381d1:	jb     0x43822d
  4381d3:	pop    edx
  4381d4:	dec    edi
  4381d5:	adc    eax,0x6558fc0c
  4381da:	fimul  DWORD PTR [esi]
  4381dc:	(bad)  
  4381dd:	fldenv [edi+0x5e]
  4381e0:	cmp    ah,dh
  4381e2:	push   0x1
  4381e4:	pop    ebp
  4381e5:	fld    DWORD PTR [eax]
  4381e7:	jmp    0xd98de0ef
  4381ec:	add    edi,edi
  4381ee:	(bad)  
  4381ef:	repz ret 
  4381f1:	loop   0x4381ad
  4381f3:	sub    al,bl
  4381f5:	jbe    0x4381b8
  4381f7:	(bad)  
  4381f8:	jl     0x43821f
  4381fa:	and    eax,0x4a60c3f1
  4381ff:	(bad)  
  438201:	jp     0x438200
  438203:	call   0x21797d69
  438208:	pop    eax
  438209:	pop    edx
  43820a:	loopne 0x4381ef
  43820c:	popa   
  43820d:	fld    DWORD PTR [esi-0x1819bdcb]
  438213:	lea    eax,[eax]
	...
  438225:	add    BYTE PTR [eax],al
  438227:	add    BYTE PTR [edi],dh
  438229:	jae    0x438224
  43822b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  43822d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43822e:	cmp    al,0xe0
  438230:	pop    edx
  438231:	pop    edx
  438232:	int3   
  438233:	repz popa 
  438235:	fldenv [edx-0x12]
  438238:	(bad)  [esi]
  43823a:	bound  eax,QWORD PTR [edx]
  43823c:	mov    ds:0xa0a718b9,al
  438241:	fmul   DWORD PTR [edi+ecx*1]
  438244:	jmp    0xe7d39163
  438249:	imul   edi,ecx,0xffffff96
  43824c:	out    0x6b,al
  43824e:	and    BYTE PTR [ecx+ebx*2],dl
  438251:	xchg   edi,eax
  438252:	inc    edx
  438253:	call   0x82bf04bc
  438258:	fwait
  438259:	outs   dx,DWORD PTR ds:[esi]
  43825a:	ss adc eax,0x5d09d182
  438260:	test   al,0xde
  438262:	add    cl,ch
  438264:	loope  0x4382d1
  438266:	aaa    
  438267:	out    dx,al
  438268:	jmp    0x85f7:0x61e9064d
  43826f:	lahf   
  438270:	psubq  mm4,QWORD PTR [ebp+0x0]
  438274:	xor    ah,bl
  438276:	pop    esi
  438277:	pcmpeqw mm3,QWORD PTR [esi]
  43827a:	pusha  
  43827b:	add    eax,DWORD PTR [ebx+0x77]
  43827e:	and    cl,BYTE PTR [edi+ebx*2+0x75]
  438282:	pop    edi
  438283:	mov    DWORD PTR ds:0x468de26f,edx
  438289:	sahf   
  43828a:	leave  
  43828b:	cmp    al,0x0
	...
  43829d:	add    BYTE PTR [eax],al
  43829f:	add    dl,al
  4382a1:	mov    DWORD PTR [edi],ecx
  4382a3:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4382a5:	push   edx
  4382a6:	mov    edx,0x1d349066
  4382ab:	sbb    BYTE PTR [ebp-0x69],bh
  4382ae:	add    BYTE PTR [esi],cl
  4382b0:	fstp   QWORD PTR [edi+0x3f]
  4382b3:	adc    al,0x62
  4382b5:	into   
  4382b6:	icebp  
  4382b7:	inc    DWORD PTR [eax+ebx*2-0xb7bdf0e]
  4382be:	and    edi,ebx
  4382c0:	mov    ah,0x11
  4382c2:	test   BYTE PTR [esi-0x74],al
  4382c5:	aam    0x8c
  4382c7:	or     al,0x77
  4382c9:	jmp    FWORD PTR [ebp-0x742774f6]
  4382cf:	inc    ebx
  4382d0:	retf   
  4382d1:	int3   
  4382d2:	pop    es
  4382d3:	ja     0x438331
  4382d5:	ja     0x438259
  4382d7:	dec    esi
  4382d8:	pop    edi
  4382d9:	jp     0x43833d
  4382db:	leave  
  4382dc:	push   ecx
  4382dd:	jp     0x4382e5
  4382df:	mov    esi,0xc7fa79f8
  4382e4:	pop    ebp
  4382e5:	(bad)  
  4382e6:	dec    esp
  4382e7:	and    al,0x43
  4382e9:	push   eax
  4382ea:	fiadd  WORD PTR [ebx]
  4382ec:	dec    ebx
  4382ed:	fcomp  DWORD PTR [esi-0x77]
  4382f0:	test   DWORD PTR [ecx+0x5f],ebp
  4382f3:	cmp    eax,DWORD PTR [ebx]
  4382f5:	mov    edx,eax
  4382f7:	jmp    0x3a953c
  4382fc:	mov    edx,DWORD PTR ds:0xd8627404
  438302:	test   dh,dh
	...
  438318:	push   edi
  438319:	mov    ?,esp
  43831b:	jg     0x438316
  43831d:	loope  0x4382e8
  43831f:	mov    dl,0x1c
  438321:	cmp    al,0xfe
  438323:	or     bh,bl
  438325:	leave  
  438326:	pop    ebx
  438327:	cli    
  438328:	in     eax,0x1
  43832a:	pop    ebp
  43832b:	or     al,0x57
  43832d:	imul   edi,DWORD PTR [edi],0x66726341
  438333:	(bad)
  438336:	pop    eax
  438337:	jg     0x438302
  438339:	ja     0x438343
  43833b:	test   DWORD PTR [ebx-0x6305a729],esp
  438341:	cmp    edi,esi
  438343:	sub    al,0xbb
  438345:	test   eax,0x1a5fa5b
  43834a:	pop    ebp
  43834b:	add    eax,0x41869016
  438350:	ins    DWORD PTR es:[edi],dx
  438351:	fidiv  WORD PTR [esi+0xb]
  438354:	push   0x62061799
  438359:	cmp    BYTE PTR [ebp-0xa],0x6f
  43835d:	imul   edi,DWORD PTR [ecx-0x67],0x78
  438361:	xor    dl,BYTE PTR [ecx+0x7f]
  438364:	imul   esi,DWORD PTR [edi+0x2],0x5127cf84
  43836b:	cli    
  43836c:	loop   0x438310
  43836e:	(bad)  
  43836f:	jle    0x438315
  438371:	push   0x7c9c7e52
  438376:	push   edx
  438377:	test   DWORD PTR [ecx],esp
  438379:	xchg   ebp,eax
  43837a:	sbb    eax,0x3c
	...
  43838f:	add    bl,al
  438391:	imul   edi,DWORD PTR [edi-0x53],0x6b
  438395:	cmp    ch,0x3b
  438398:	test   al,0x7b
  43839a:	jp     0x438341
  43839c:	pop    ebx
  43839d:	cmp    ch,0xa
  4383a0:	(bad)  
  4383a2:	es mov ds:0xa33de7cb,eax
  4383a9:	(bad)  
  4383aa:	call   0xcb679131
  4383af:	leave  
  4383b0:	jno    0x4383c9
  4383b2:	ins    BYTE PTR es:[di],dx
  4383b4:	xor    al,0xed
  4383b6:	repnz retf 
  4383b8:	jno    0x43837d
  4383ba:	data16 ins BYTE PTR es:[edi],dx
  4383bc:	in     al,0xe6
  4383be:	push   es
  4383bf:	int3   
  4383c0:	push   ecx
  4383c1:	iret   
  4383c2:	data16 ins BYTE PTR es:[edi],dx
  4383c4:	popa   
  4383c5:	in     eax,dx
  4383c6:	in     al,dx
  4383c7:	retf   
  4383c8:	pop    eax
  4383c9:	pop    esp
  4383ca:	xchg   ebx,eax
  4383cb:	or     al,0x62
  4383cd:	fldenv [ecx]
  4383cf:	mov    esi,0xe50edf53
  4383d4:	aas    
  4383d5:	loopne 0x438376
  4383d7:	mov    esp,DWORD PTR [ebx]
  4383d9:	retf   
  4383da:	(bad)  
  4383db:	mov    esp,0x1d21ba3
  4383e0:	test   DWORD PTR [esi],eax
  4383e2:	stos   BYTE PTR es:[edi],al
  4383e3:	mov    ebp,0xc8ced873
  4383e8:	mov    ds:0x7d03fa1b,eax
  4383ed:	sbb    ah,BYTE PTR [edx-0x3123ac43]
  4383f3:	les    eax,FWORD PTR [eax]
	...
  438405:	add    BYTE PTR [eax],al
  438407:	add    BYTE PTR [ebx-0x7b0f2de5],ah
  43840d:	scas   al,BYTE PTR es:[edi]
  43840e:	imul   bx,WORD PTR [eax],0xffed
  438412:	cmc    
  438413:	retf   
  438414:	rol    eax,1
  438416:	das    
  438417:	int3   
  438418:	rcl    edx,1
  43841a:	das    
  43841b:	shl    BYTE PTR [ebx+0x21],1
  43841e:	sbb    al,0x9
  438420:	call   0xe7d9:0x6b0e64e2
  438427:	cmp    eax,0x6aeacba3
  43842c:	dec    ecx
  43842d:	fwait
  43842e:	add    BYTE PTR [edi],ch
  438430:	xor    al,0xd7
  438432:	in     eax,0xd7
  438434:	pop    edi
  438435:	sbb    BYTE PTR [ebx],dl
  438437:	dec    DWORD PTR [eax-0x583d1e]
  43843d:	loope  0x438424
  43843f:	jecxz  0x438488
  438441:	sbb    BYTE PTR [ebx],dl
  438443:	jmp    0xd807:0xafc2d688
  43844a:	ret    0x66a7
  43844d:	jecxz  0x438436
  43844f:	test   DWORD PTR [esi-0x679a0691],eax
  438455:	fild   WORD PTR [ebp+ebp*8+0x7300d966]
  43845c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43845d:	(bad)  
  43845e:	or     DWORD PTR [edi+0x1e],ebx
  438461:	pop    ebx
  438462:	adc    al,0x64
  438464:	ror    DWORD PTR [eax*2+0x206ae1e9],1
  43846b:	je     0x43846d
	...
  43847d:	add    BYTE PTR [eax],al
  43847f:	add    BYTE PTR [edx+0x5cea6a5b],dh
  438485:	daa    
  438486:	ret    
  438487:	imul   esi,DWORD PTR [ebp-0x37],0x97695c00
  43848e:	inc    edx
  43848f:	call   0xe86f0526
  438494:	popa   
  438495:	fld    DWORD PTR [esi-0x4d219cc1]
  43849b:	lods   al,BYTE PTR ds:[esi]
  43849c:	pop    eax
  43849d:	aad    0x10
  43849f:	out    dx,al
  4384a0:	in     eax,dx
  4384a1:	iret   
  4384a2:	(bad)  
  4384a3:	call   0xe53ade09
  4384a8:	sub    al,0xc3
  4384aa:	and    BYTE PTR [ecx+eiz*2-0x5496f51a],0x18
  4384b2:	je     0x438494
  4384b4:	xchg   DWORD PTR [edx],ebx
  4384b6:	adc    edi,ebx
  4384b8:	enter  0xffda,0xff
  4384bc:	dec    ebx
  4384bd:	fld    QWORD PTR [eax-0x7c29c603]
  4384c3:	adc    al,BYTE PTR [edx-0x23]
  4384c6:	add    BYTE PTR [eax-0x7af9da70],al
  4384cc:	adc    ah,ah
  4384ce:	add    BYTE PTR [eax],al
  4384d0:	inc    ebp
  4384d1:	das    
  4384d2:	invd   
  4384d4:	mov    ds:0xbfffa02,al
  4384d9:	pop    ebp
  4384da:	clc    
  4384db:	or     dh,BYTE PTR [esi-0x50286c2]
  4384e1:	lahf   
  4384e2:	sub    eax,0x80
	...
  4384f7:	add    BYTE PTR [eax],dh
  4384f9:	xchg   esi,eax
  4384fa:	je     0x438505
  4384fc:	test   DWORD PTR [edi],ebp
  4384fe:	ud2    
  438500:	jb     0x4384ac
  438502:	stc    
  438503:	(bad)  
  438504:	mov    ebx,0xe601fc5c
  438509:	mov    ebx,0xa006fb80
  43850e:	or     dh,al
  438510:	add    eax,0x7be90a7f
  438515:	aad    0x0
  438517:	add    BYTE PTR [ebx],bh
  438519:	or     BYTE PTR [ecx],al
  43851b:	jne    0x4384da
  43851d:	pop    esp
  43851e:	repnz sub eax,0x46bee436
  438524:	xchg   ebp,eax
  438525:	sub    al,0xad
  438528:	jnp    0x438506
  43852a:	add    BYTE PTR [eax-0x7afa2552],al
  438530:	loop   0x438516
  438532:	add    BYTE PTR [eax],al
  438534:	sti    
  438535:	adc    BYTE PTR [ecx+0xf],al
  438538:	test   BYTE PTR [ebx+0x1],0x0
  43853c:	dec    ebx
  43853d:	adc    BYTE PTR [eax],0x58
  438540:	shr    DWORD PTR [esi],cl
  438542:	psubsw mm1,mm3
  438545:	fadd   QWORD PTR [eax]
  438547:	add    BYTE PTR [edx+0x2],ah
  43854a:	push   edi
  43854b:	adc    DWORD PTR [edi+0x63fc7d6a],esi
  438551:	addr16 jp 0x4384e6
  438554:	pop    edx
  438555:	cmp    ch,0x7f
  438558:	sub    DWORD PTR [ebp+0x8503],edi
	...
  43856e:	add    BYTE PTR [eax],al
  438570:	in     al,dx
  438571:	jns    0x438570
  438573:	call   FWORD PTR [eax+eax*2]
  438576:	jmp    0x438581
  438578:	stc    
  438579:	xchg   edx,eax
  43857a:	jge    0x438578
  43857c:	arpl   WORD PTR [ebp-0x7d047fd9],cx
  438582:	retf   0xe224
  438585:	sbb    dh,BYTE PTR [eax-0x44479b8c]
  43858b:	adc    DWORD PTR [esi+0x1b],edx
  43858e:	mov    ah,0x7f
  438590:	fld    DWORD PTR [edx+ecx*8+0x1]
  438594:	pushf  
  438595:	aas    
  438596:	jmp    0x43859b
  438598:	mov    ecx,0x23f67d32
  43859d:	ja     0x438619
  43859f:	pop    edx
  4385a0:	push   0xffffff82
  4385a2:	std    
  4385a3:	rcr    DWORD PTR [eax+edx*4],0xf5
  4385a7:	out    0x26,al
  4385a9:	add    dl,BYTE PTR [ebx-0x3]
  4385ac:	mov    cs:0xe566f87d,al
  4385b2:	or     BYTE PTR [eax+0x34d7b399],al
  4385b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4385b9:	mov    bh,0xf6
  4385bb:	sbb    BYTE PTR [ecx-0x2a],bh
  4385be:	test   al,bh
  4385c0:	ins    DWORD PTR es:[edi],dx
  4385c1:	add    eax,0xd279801b
  4385c6:	xlat   BYTE PTR ds:[ebx]
  4385c7:	and    al,0xa4
  4385c9:	mov    bh,0xf6
  4385cb:	adc    bh,BYTE PTR [ecx-0x7a]
  4385ce:	jge    0x4385cc
  4385d0:	(bad)
	...
  4385e5:	add    BYTE PTR [eax],al
  4385e7:	add    BYTE PTR [ebp-0x27],bl
  4385ea:	out    0x3,eax
  4385ec:	loop   0x43865e
  4385ee:	jmp    0x4385f2
  4385f0:	fild   QWORD PTR [edx+ebp*8]
  4385f3:	add    esp,DWORD PTR [edx+0x59]
  4385f6:	mov    ?,WORD PTR [eax+ebp*2+0x620b3b54]
  4385fd:	fldenv [ecx+0x71dc53ca]
  438603:	dec    ecx
  438604:	in     eax,0xff
  438606:	out    0x5c,al
  438608:	nop
  438609:	jae    0x43866d
  43860b:	push   ebx
  43860c:	lea    esi,[edx+0x7]
  43860f:	add    ebx,esi
  438611:	add    BYTE PTR [eax+0x53],dl
  438614:	clc    
  438615:	bound  esp,QWORD PTR [ebx+0x27544a27]
  43861b:	add    esp,DWORD PTR [esi+0x53d26796]
  438621:	aam    0x60
  438623:	enter  0xc181,0xb4
  438627:	pop    es
  438628:	mov    al,ds:0x58fae917
  43862d:	daa    
  43862e:	test   eax,0xff8adc04
  438633:	out    0xcc,eax
  438635:	outs   dx,BYTE PTR ds:[esi]
  438636:	or     bh,BYTE PTR [ebx+eiz*1-0x28]
  43863a:	ret    
  43863b:	add    al,0x59
  43863d:	push   esp
  43863e:	test   al,0x4d
  438640:	test   al,0x6e
  438642:	pop    ebp
  438643:	retf   0xb570
  438646:	pop    ecx
  438647:	add    BYTE PTR [eax-0x80],ch
  43864a:	test   eax,0xa
	...
  43865f:	add    BYTE PTR [edx-0x27],ah
  438662:	addr16 dec esi
  438664:	pop    edi
  438665:	in     eax,0xc2
  438667:	xor    DWORD PTR [esp+ebx*8+0x53],0x5e
  43866c:	cmc    
  43866d:	jno    0x438676
  43866f:	fadd   DWORD PTR [esi+0x6c83ac82]
  438675:	jecxz  0x438677
  438677:	cmp    eax,0xdcf5ee56
  43867c:	sub    eax,0x81a280d7
  438681:	in     al,0xba
  438683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438684:	sbb    ebx,ecx
  438686:	sbb    eax,0xc0bf4982
  43868b:	pop    es
  43868c:	mov    bh,0x18
  43868e:	adc    DWORD PTR [ebx],edx
  438690:	das    
  438691:	push   es
  438692:	add    DWORD PTR [edx+0x2f87fb62],0xa993e314
  43869c:	pop    ebp
  43869d:	mov    ebp,0xee66af88
  4386a2:	jl     0x4386a9
  4386a4:	data16 (bad) [ecx]
  4386a7:	ins    DWORD PTR es:[edi],dx
  4386a8:	mov    BYTE PTR [ebx-0x7],ch
  4386ab:	dec    esi
  4386ac:	je     0x4386b2
  4386ae:	add    eax,0x29ea3c6c
  4386b3:	jb     0x438662
  4386b5:	mov    ecx,0xb7286228
  4386ba:	mov    esi,0xf9a05499
  4386bf:	cmp    bl,dl
  4386c1:	sub    eax,0xf374
	...
  4386d6:	add    BYTE PTR [eax],al
  4386d8:	inc    edi
  4386d9:	sbb    BYTE PTR [edx],dl
  4386db:	int    0xe7
  4386dd:	loope  0x4386dd
  4386df:	pusha  
  4386e0:	stos   DWORD PTR es:[edi],eax
  4386e1:	retf   0xb786
  4386e4:	test   al,0xed
  4386e6:	fistp  QWORD PTR [esi+0x29]
  4386e9:	and    ah,BYTE PTR ds:0xc95460da
  4386ef:	jmp    0x438752
  4386f1:	fld    DWORD PTR [ebp+0x7dc53a3d]
  4386f7:	inc    ebp
  4386f8:	cmp    al,cl
  4386fa:	add    al,al
  4386fc:	retf   
  4386fd:	push   0xfffffff9
  4386ff:	into   
  438700:	fisub  WORD PTR [esi+0x20]
  438703:	add    BYTE PTR [ebp+edx*2-0x69],dh
  438707:	mul    DWORD PTR [edi+eax*1-0x257c0486]
  43870e:	xor    DWORD PTR [edi-0x39ff26c3],0x7d
  438715:	fsub   DWORD PTR [ecx+ebp*8]
  438718:	mov    bh,0x12
  43871a:	idiv   edi
  43871c:	retf   
  43871d:	push   ds
  43871e:	dec    esi
  43871f:	movsx  esp,BYTE PTR [ebp+0x1fe4fff5]
  438726:	inc    eax
  438727:	add    DWORD PTR [esi],ebx
  438729:	adc    BYTE PTR [edi+esi*8-0x6c],dh
  43872d:	or     bh,BYTE PTR [edx-0x5]
  438730:	outs   dx,DWORD PTR ds:[esi]
  438731:	fiadd  DWORD PTR [ebx-0x8f57842]
  438737:	(bad)  
  438738:	mov    ebp,0xe91ed7
	...
  43874d:	add    BYTE PTR [eax],al
  43874f:	add    BYTE PTR [ebx],ah
  438751:	adc    dh,bh
  438753:	dec    DWORD PTR [ebx+0x7e0f4a1e]
  438759:	cmp    ebp,esi
  43875b:	jmp    DWORD PTR [edi+ebx*1]
  43875e:	inc    eax
  43875f:	add    DWORD PTR [eax+edx*1+0x50],ebp
  438763:	test   DWORD PTR [edx+ecx*1-0x264b0486],0xa679a83
  43876e:	test   esi,0xe928d80d
  438774:	call   DWORD PTR [ecx]
  438776:	idiv   edi
  438778:	ss xchg esi,eax
  43877a:	(bad)  
  43877b:	cmp    al,0xb3
  43877d:	fnstcw WORD PTR [ebp+0x64]
  438780:	(bad)  
  438781:	fadd   DWORD PTR [eax]
  438783:	data16 mov ah,0x4a
  438786:	mov    edx,0x1da17066
  43878b:	sbb    BYTE PTR [ebp+0x622900a2],bh
  438791:	sbb    al,0x76
  438793:	inc    ecx
  438794:	push   edx
  438795:	cdq    
  438796:	and    al,0xf3
  438798:	ins    DWORD PTR es:[edi],dx
  438799:	xchg   ebx,eax
  43879a:	jge    0x438792
  43879c:	xor    al,0x7b
  43879e:	sub    BYTE PTR [ebx],0x59
  4387a1:	and    edx,DWORD PTR [eax-0x3f]
  4387a4:	pushf  
  4387a5:	sbb    DWORD PTR [ebx],0x504b73e9
  4387ab:	cli    
  4387ac:	xlat   BYTE PTR ds:[ebx]
  4387ad:	mov    esi,0x736b3b34
  4387b2:	mov    BYTE PTR [eax],dh
	...
  4387c8:	pop    esp
  4387c9:	cmp    ch,0x61
  4387cc:	pop    ebp
  4387cd:	adc    al,0x45
  4387cf:	popa   
  4387d0:	jns    0x438788
  4387d2:	sub    BYTE PTR [eax],bl
  4387d4:	and    al,0xbc
  4387d6:	std    
  4387d7:	es jl  0x4387d3
  4387da:	(bad)  
  4387db:	or     eax,0xfa5811fb
  4387e0:	add    eax,0x770c4d02
  4387e5:	jns    0x43882e
  4387e7:	inc    ecx
  4387e8:	arpl   WORD PTR [esi+0x56],bp
  4387eb:	(bad)  
  4387ed:	adc    dl,BYTE PTR [ecx+0x7f]
  4387f0:	jmp    0x3ec8885c
  4387f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4387f6:	push   eax
  4387f7:	cli    
  4387f8:	retf   
  4387f9:	mov    cs,WORD PTR [ecx-0x6]
  4387fc:	int    0x1
  4387fe:	dec    ebp
  4387ff:	add    eax,0xfbfbf655
  438804:	mov    ebp,0x4d417bc2
  438809:	xchg   esi,eax
  43880a:	jno    0x438817
  43880c:	push   esi
  43880d:	leave  
  43880e:	mov    dl,0x1
  438810:	bound  eax,QWORD PTR [edx-0x85e4e00]
  438816:	jne    0x4387d7
  438818:	push   ss
  438819:	inc    edx
  43881a:	std    
  43881b:	sbb    DWORD PTR [ebx-0x1c780d28],0xffffffd9
  438822:	out    0x3,eax
  438824:	imul   esp,DWORD PTR [ebx],0x582a0229
  43882a:	iret   
  43882b:	sti    
	...
  438840:	pop    eax
  438841:	push   esp
  438842:	into   
  438843:	dec    edx
  438844:	push   0xe728ba6b
  438849:	call   0x6d994b0e
  43884e:	and    DWORD PTR [ebx],eax
  438850:	loop   0x4388c2
  438852:	adc    bh,bh
  438854:	out    dx,al
  438855:	cdq    
  438856:	cdq    
  438857:	cmp    al,0x81
  438859:	xlat   BYTE PTR ds:[ebx]
  43885a:	sbb    BYTE PTR [esi+0x37],0x6b
  43885e:	out    0x4d,eax
  438860:	mov    ds:0xbb4d67d6,eax
  438865:	ficom  DWORD PTR [esp+eax*2+0x1b]
  438869:	mov    ds:0x8e0b02cb,al
  43886e:	in     eax,0x3
  438870:	bound  ebp,QWORD PTR [ebx-0x57]
  438873:	add    ah,dl
  438875:	jo     0x438840
  438877:	xlat   BYTE PTR ds:[ebx]
  438878:	push   0x68d85059
  43887d:	inc    esp
  43887e:	daa    
  43887f:	dec    esi
  438880:	and    eax,0x1e5ce9b6
  438885:	fsub   st,st(7)
  438887:	add    esp,DWORD PTR [eax-0x34f819ed]
  43888d:	cmp    DWORD PTR ds:0xa96bc84f,ebp
  438893:	add    bl,ah
  438895:	add    esp,edi
  438897:	xor    DWORD PTR [edi-0x1e791d21],0x71
  43889e:	or     cl,BYTE PTR [edi+0x58]
  4388a1:	and    esp,DWORD PTR ds:0xa
	...
  4388b7:	add    dl,bl
  4388b9:	jno    0x438913
  4388bb:	les    ebx,FWORD PTR [ebp-0x4493ff25]
  4388c1:	(bad)  
  4388c2:	stc    
  4388c3:	out    dx,al
  4388c4:	or     ebx,DWORD PTR [esi]
  4388c6:	and    eax,0x58e1abfa
  4388cb:	and    esi,DWORD PTR [esi]
  4388cd:	push   ebx
  4388ce:	push   esp
  4388cf:	or     eax,0x583df7a
  4388d4:	adc    al,0x6f
  4388d6:	stc    
  4388d7:	jno    0x438878
  4388d9:	ins    BYTE PTR es:[edi],dx
  4388da:	call   0xf9b340bc
  4388df:	mov    bh,0x1f
  4388e1:	imul   eax,DWORD PTR [edi-0x9a69ee9],0xfffffff9
  4388e8:	inc    esp
  4388e9:	push   edi
  4388ea:	inc    ebp
  4388eb:	mov    eax,ds:0x5f096fac
  4388f0:	mov    ds:0xb3e588a4,eax
  4388f5:	stos   BYTE PTR es:[edi],al
  4388f6:	add    dh,dh
  4388f8:	fisubr DWORD PTR [ebp+0x54ac7ef8]
  4388fe:	dec    esp
  4388ff:	int    0x10
  438901:	jmp    0xfd25:0x688def6
  438908:	add    al,0x55
  43890a:	jmp    0x438960
  43890c:	lods   al,BYTE PTR ds:[esi]
  43890d:	outs   dx,DWORD PTR ds:[esi]
  43890e:	data16 loopne 0x4388da
  438911:	jb     0x4388d7
  438913:	dec    edi
  438914:	daa    
  438915:	imul   eax,DWORD PTR [edi-0x9a69f61],0xffffffef
	...
  438930:	fcom   QWORD PTR [esi+0x11]
  438933:	xor    DWORD PTR [edi+ebp*2],esp
  438936:	or     DWORD PTR [edi+0x23],esi
  438939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43893a:	mov    BYTE PTR [ecx],al
  43893c:	push   eax
  43893d:	stos   BYTE PTR es:[edi],al
  43893e:	add    dh,ch
  438940:	jmp    0x4c54:0x2416f8d1
  438947:	lds    esi,FWORD PTR [eax-0x51ff0917]
  43894d:	out    dx,al
  43894e:	dec    ebp
  43894f:	and    al,0xb7
  438951:	push   0xffffff84
  438953:	mov    ecx,0xc6f71b96
  438958:	(bad)
  43895b:	jmp    0x3a8b4b
  438960:	popf   
  438961:	xchg   edx,eax
  438962:	cli    
  438963:	mov    DWORD PTR ds:0x331162d8,esi
  438969:	(bad)  
  43896b:	pmuludq mm7,QWORD PTR [ecx+0x671cffee]
  438972:	scas   eax,DWORD PTR es:[edi]
  438973:	ret    0xe551
  438976:	and    DWORD PTR [edx-0x7afa2285],edx
  43897c:	or     eax,0xb1fff70f
  438981:	cdq    
  438982:	sbb    eax,0xa13cb13
  438987:	mov    esi,DWORD PTR [edi-0x4f]
  43898a:	adc    al,0xf
  43898c:	mov    dh,0x96
  43898e:	hlt    
  43898f:	call   FWORD PTR [edi+ebx*1+0x240]
	...
  4389a6:	add    BYTE PTR [eax],al
  4389a8:	add    BYTE PTR [eax+esi*2],al
  4389ab:	cmc    
  4389ac:	jl     0x4389c4
  4389ae:	clc    
  4389af:	inc    esi
  4389b0:	clc    
  4389b1:	loop   0x438a02
  4389b3:	add    ecx,DWORD PTR [ebx-0x7bf100ed]
  4389b9:	inc    eax
  4389ba:	out    dx,al
  4389bb:	call   FWORD PTR [esi+eiz*2-0x1a9e3d51]
  4389c2:	xor    eax,0x5dd0b92
  4389c7:	test   DWORD PTR ds:0x41fff70e,esi
  4389cd:	cdq    
  4389ce:	sbb    eax,0x133b13
  4389d3:	mov    esi,edi
  4389d5:	rcl    BYTE PTR [edi+ecx*1],0x62
  4389d9:	cmc    
  4389da:	ret    
  4389db:	hlt    
  4389dc:	lods   eax,DWORD PTR ds:[esi]
  4389dd:	xlat   BYTE PTR ds:[ebx]
  4389de:	inc    edx
  4389df:	inc    ecx
  4389e0:	pusha  
  4389e1:	outs   dx,BYTE PTR ds:[esi]
  4389e2:	push   esi
  4389e3:	cmp    DWORD PTR [edi+0x26854c67],edx
  4389e9:	xchg   esi,eax
  4389ea:	lock jg 0x438976
  4389ed:	xchg   edx,eax
  4389ee:	cld    
  4389ef:	adc    DWORD PTR [ebx-0x7b],0x4c
  4389f3:	cli    
  4389f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4389f5:	sar    dh,0xff
  4389f8:	mov    ebx,edx
  4389fa:	push   ecx
  4389fb:	cli    
  4389fc:	ins    DWORD PTR es:[edi],dx
  4389fd:	repnz dec eax
  4389ff:	xor    eax,0x4142baef
  438a04:	arpl   di,dx
  438a06:	jg     0x438a83
  438a08:	jle    0x4389e0
  438a0a:	add    al,0xb
	...
  438a20:	out    0xd6,al
  438a22:	inc    ebp
  438a23:	cli    
  438a24:	inc    ebp
  438a25:	jmp    0x4389ce
  438a27:	pop    es
  438a28:	out    0x9a,eax
  438a2a:	shl    DWORD PTR [eax],1
  438a2c:	jmp    0xd967b2d6
  438a31:	sbb    BYTE PTR ds:[esi-0x5c4146e],bh
  438a38:	xor    ebp,edi
  438a3a:	cmp    eax,0xc3fc6873
  438a3f:	adc    al,BYTE PTR [esi-0xd]
  438a42:	stc    
  438a43:	(bad)  
  438a44:	fnsave [edi]
  438a46:	hlt    
  438a47:	test   DWORD PTR [edi+ebp*2-0x58a1f83],ebp
  438a4e:	mov    ecx,0xed8e5123
  438a53:	es out 0xec,eax
  438a56:	les    eax,FWORD PTR [eax]
  438a58:	retf   
  438a59:	out    0x52,al
  438a5b:	cli    
  438a5c:	aad    0xfb
  438a5e:	mov    ecx,0x21b7123
  438a63:	xchg   DWORD PTR [esi],ebp
  438a65:	fxch   st(3)
  438a67:	idiv   DWORD PTR [edi*8+0x726227c3]
  438a6e:	pop    ds
  438a6f:	push   edi
  438a70:	test   al,0x67
  438a72:	addr16 dec eax
  438a74:	push   esi
  438a75:	out    dx,al
  438a76:	jmp    0xb61dadc0
  438a7b:	pop    eax
  438a7c:	sti    
  438a7d:	pop    eax
  438a7e:	out    dx,al
  438a7f:	clc    
  438a80:	pop    eax
  438a81:	pop    esi
  438a82:	dec    esp
	...
  438a97:	add    BYTE PTR [edx-0x27],ah
  438a9a:	outs   dx,BYTE PTR ds:[esi]
  438a9b:	mov    eax,0xc2a1bd41
  438aa0:	bound  esi,QWORD PTR [esi+0x5d583d6c]
  438aa6:	mov    edx,0x6e67684c
  438aab:	scas   al,BYTE PTR es:[edi]
  438aac:	gs pop esp
  438aae:	sahf   
  438aaf:	shl    BYTE PTR [edx],1
  438ab1:	push   ebx
  438ab2:	stos   BYTE PTR es:[edi],al
  438ab3:	pop    ds
  438ab4:	and    edx,DWORD PTR [ebx-0x68]
  438ab7:	pop    edi
  438ab8:	aad    0x59
  438aba:	sahf   
  438abb:	and    al,0x69
  438abd:	pop    ebp
  438abe:	imul   edx,DWORD PTR [eax+0x38],0x67
  438ac2:	std    
  438ac3:	cld    
  438ac4:	xchg   ebp,eax
  438ac5:	mov    ds:0x58e1fbaf,eax
  438aca:	jnp    0x438b17
  438acc:	sbb    BYTE PTR [ebx+0x23],dl
  438acf:	and    BYTE PTR [esi+0x5c],dh
  438ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438ad3:	sti    
  438ad4:	mov    eax,ds:0x41c0609e
  438ad9:	lds    ebp,FWORD PTR [ecx]
  438adb:	ret    0xa962
  438ade:	and    edx,eax
  438ae0:	hlt    
  438ae1:	addr16 dec di
  438ae4:	pop    esi
  438ae5:	in     al,dx
  438ae6:	mov    bh,0xe1
  438ae8:	and    BYTE PTR [eax],ah
  438aea:	jmp    0x279fed04
  438aef:	sti    
  438af0:	loope  0x438af2
  438af2:	add    DWORD PTR ds:0x93856319,edi
  438af8:	int    0x5d
  438afa:	aad    0x9d
	...
  438b10:	push   esi
  438b11:	pop    esi
  438b12:	push   esp
  438b13:	lds    edi,FWORD PTR [ebp-0x123d3ea1]
  438b19:	mov    edx,0x1668621c
  438b1e:	cli    
  438b1f:	sbb    ah,bl
  438b21:	es je  0x438b17
  438b24:	pop    ss
  438b25:	sbb    BYTE PTR [edx],dl
  438b27:	int    0xd
  438b29:	rol    BYTE PTR [ecx+eiz*2],cl
  438b2c:	mov    al,ds:0x713786cb
  438b31:	out    0xdf,al
  438b33:	pop    esi
  438b34:	not    BYTE PTR [ecx]
  438b36:	and    eax,0x395d68fa
  438b3b:	into   
  438b3c:	sbb    BYTE PTR [ebx-0x7b],ah
  438b3f:	sbb    eax,0x457dcd82
  438b44:	add    ch,0x0
  438b47:	rcl    BYTE PTR [eax+0x6a],0xf9
  438b4b:	scas   al,BYTE PTR es:[edi]
  438b4c:	loope  0x438bbc
  438b4e:	push   es
  438b4f:	sbb    al,0x60
  438b51:	fwait
  438b52:	inc    edx
  438b53:	call   0xe6e909b2
  438b58:	rcl    DWORD PTR [edi],cl
  438b5a:	jmp    DWORD PTR [edx+0x64]
  438b5d:	out    0xc7,al
  438b5f:	leave  
  438b60:	in     al,0x7d
  438b62:	pop    es
  438b63:	cmc    
  438b64:	ficomp DWORD PTR ds:0xe9c9cf75
  438b6a:	adc    DWORD PTR [ebx-0x33],esp
  438b6d:	mov    ecx,0x64232f0d
  438b72:	stc    
  438b73:	mov    cl,0x0
	...
  438b85:	add    BYTE PTR [eax],al
  438b87:	add    al,bh
  438b89:	pop    esp
  438b8a:	out    0x5a,eax
  438b8c:	cwde   
  438b8d:	arpl   WORD PTR [eax-0x208ede21],ax
  438b93:	add    BYTE PTR [eax+0x2280f713],bl
  438b99:	jg     0x438ba1
  438b9b:	xchg   ebp,eax
  438b9c:	jnp    0x438bae
  438b9e:	ret    0xa624
  438ba1:	push   es
  438ba2:	ss mov esi,edi
  438ba5:	lds    ebx,FWORD PTR [eax]
  438ba7:	mov    cl,BYTE PTR [eax+0x7a2a0884]
  438bad:	xor    al,0x33
  438baf:	ret    0x5a84
  438bb2:	mov    esi,0x5d98b02
  438bb7:	mov    esi,0x99bfc748
  438bbc:	add    bl,BYTE PTR [eax+0x6ded8901]
  438bc2:	call   0xf7532a7d
  438bc7:	add    BYTE PTR [edx-0x42f68b7d],0x9a
  438bce:	sti    
  438bcf:	or     eax,0xffef02a2
  438bd4:	and    al,0x5e
  438bd6:	clc    
  438bd7:	arpl   WORD PTR [esp+esi*8-0x47],ax
  438bdb:	inc    BYTE PTR [ebx]
  438bdd:	mov    edx,0xdb7d8805
  438be2:	out    0xdc,eax
  438be4:	fcom   QWORD PTR [edx]
  438be6:	test   DWORD PTR [eax-0x7af99c00],0x0
	...
  438c00:	out    dx,al
  438c01:	adc    eax,0x4b04fff7
  438c06:	aas    
  438c07:	add    cl,ch
  438c09:	xchg   edi,eax
  438c0a:	add    BYTE PTR [ecx],dh
  438c0c:	mov    BYTE PTR ds:0x2131740a,al
  438c12:	ins    DWORD PTR es:[edi],dx
  438c13:	cmovae esp,DWORD PTR [edx-0x7c]
  438c17:	jno    0x438bb1
  438c19:	adc    dh,bh
  438c1b:	add    BYTE PTR ds:0x6269e869,0xff
  438c22:	inc    edi
  438c23:	cli    
  438c24:	loop   0x438baa
  438c26:	cmc    
  438c27:	call   0xfa8b2b6f
  438c2c:	loop   0x438ca2
  438c2e:	stc    
  438c2f:	call   0xfa8b2b5f
  438c34:	loop   0x438bdd
  438c36:	cli    
  438c37:	or     ah,bh
  438c39:	pop    ebp
  438c3a:	dec    esp
  438c3b:	cli    
  438c3c:	mov    ch,0xef
  438c3e:	fiadd  WORD PTR [ebx]
  438c40:	(bad)  
  438c41:	les    edi,FWORD PTR [esi+0x7a83e212]
  438c47:	jp     0x438ca9
  438c49:	jb     0x438c48
  438c4b:	test   DWORD PTR [eax+ebp*8+0x43],esi
  438c4f:	mov    edi,0x1f95707a
  438c54:	push   cs
  438c55:	mov    edi,DWORD PTR [ecx+ecx*8-0x76]
  438c59:	mov    ds:0xfd620000,eax
  438c5e:	cmp    eax,0x4f67e60a
  438c63:	cli    
	...
  438c78:	mov    WORD PTR gs:[esi+edi*8+0x4a],es
  438c7d:	push   0x4f
  438c7f:	cli    
  438c80:	push   ebp
  438c81:	dec    edx
  438c82:	(bad)  
  438c83:	jae    0x438ce0
  438c85:	xor    al,0xbf
  438c87:	add    BYTE PTR [ecx+0x3deef499],dl
  438c8d:	cmp    edi,DWORD PTR [ecx+ecx*2+0x6a]
  438c91:	out    0x3e,eax
  438c93:	push   es
  438c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438c95:	jle    0x438c60
  438c97:	int    0x81
  438c99:	(bad)  
  438c9a:	clc    
  438c9b:	jle    0x438cb8
  438c9d:	pop    ebx
  438c9e:	leave  
  438c9f:	or     BYTE PTR [esp+edi*4],bl
  438ca2:	std    
  438ca3:	cmp    edi,ebx
  438ca5:	scas   al,BYTE PTR es:[edi]
  438ca6:	dec    edi
  438ca7:	cli    
  438ca8:	add    eax,0x71fe64f2
  438cad:	fsincos 
  438caf:	jl     0x438cdc
  438cb1:	jno    0x438cdb
  438cb3:	add    al,0x62
  438cb5:	fldcw  WORD PTR [ebx+eax*2+0x71]
  438cb9:	shl    BYTE PTR [ecx],cl
  438cbb:	shl    DWORD PTR [edx-0x5a],0x50
  438cbf:	pop    edi
  438cc0:	shl    DWORD PTR [ebx+0x3a],1
  438cc3:	jl     0x438c60
  438cc5:	jo     0x438cf9
  438cc7:	add    al,0x62
  438cc9:	fldenv [ebx+eax*2+0x68]
  438ccd:	pop    ebp
  438cce:	es dec esi
  438cd0:	mov    eax,0xba2c6363
  438cd5:	sub    DWORD PTR [eax+ecx*2],ebx
  438cd8:	test   al,0x4f
  438cda:	mov    ds:0x1f,eax
	...
  438cef:	add    BYTE PTR [edx+0x5e],al
  438cf2:	daa    
  438cf3:	clc    
  438cf4:	and    DWORD PTR [esi+ebp*2+0x60b541c7],ebx
  438cfb:	mov    edi,0x5a9ab941
  438d00:	iret   
  438d01:	data16 loop 0x438d4b
  438d04:	push   0xed7aa62b
  438d09:	cwde   
  438d0a:	push   esp
  438d0b:	les    esp,FWORD PTR [ebp-0x61]
  438d0e:	retf   0xe1f7
  438d11:	mov    edx,0xd26203e5
  438d16:	jns    0x438d5c
  438d18:	jmp    0xdc0b:0xdafc2950
  438d1f:	cmp    eax,0x5cdbd8a3
  438d24:	fbld   TBYTE PTR [edi-0x66]
  438d27:	inc    edi
  438d28:	lods   eax,DWORD PTR ds:[esi]
  438d29:	pop    esi
  438d2a:	in     al,0xd0
  438d2c:	pop    edx
  438d2d:	fwait
  438d2e:	and    DWORD PTR ds:0x52677050,eax
  438d34:	sbb    BYTE PTR [ebx-0x16],ah
  438d37:	(bad)  
  438d38:	int3   
  438d39:	dec    edi
  438d3a:	add    BYTE PTR [ecx-0x62],ch
  438d3d:	in     eax,0x40
  438d3f:	jmp    0xfeb6eba9
  438d44:	loope  0x438db1
  438d46:	xor    eax,0xf5e2eed5
  438d4b:	or     ebp,ebp
  438d4d:	pop    ebp
  438d4e:	in     eax,0xe8
  438d50:	popa   
  438d51:	fld    st(2)
  438d53:	scas   eax,DWORD PTR es:[edi]
	...
  438d68:	pop    esi
  438d69:	lods   al,BYTE PTR ds:[esi]
  438d6a:	out    0x9d,eax
  438d6c:	xor    ebx,DWORD PTR [edi-0x7]
  438d6f:	bound  ecx,QWORD PTR [ebx+ebx*8]
  438d72:	test   DWORD PTR [edi+0x32a4cfb5],ecx
  438d78:	(bad)  
  438d79:	into   
  438d7a:	mov    edx,0xdf993f29
  438d7f:	in     eax,dx
  438d80:	pusha  
  438d81:	xchg   ecx,eax
  438d82:	or     eax,0xcff6933
  438d87:	mul    bl
  438d89:	mov    ds:0xe661e8ff,eax
  438d8e:	pop    es
  438d8f:	mov    dl,0xcf
  438d91:	fimul  DWORD PTR [ecx]
  438d93:	imul   ebp,DWORD PTR [esi-0x28],0x0
  438d97:	jmp    0xaa612694
  438d9c:	loopne 0x438e08
  438d9e:	stc    
  438d9f:	out    0xe5,al
  438da1:	mov    edx,0x5061e8ff
  438da6:	dec    edx
  438da7:	icebp  
  438da8:	(bad)  
  438da9:	add    BYTE PTR ds:0xf96d81d0,cl
  438daf:	mov    dh,0xe1
  438db1:	push   0xb
  438db3:	fsubrp st(2),st
  438db5:	shr    esi,cl
  438db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  438db8:	pushf  
  438db9:	jnp    0x438d3c
  438dbb:	imul   ebx,DWORD PTR [eax-0xa93f624],0x988ef966
  438dc5:	sbb    BYTE PTR [ecx],cl
  438dc7:	add    BYTE PTR [eax+0xfffd84],cl
	...
  438ddd:	add    BYTE PTR [eax],al
  438ddf:	add    BYTE PTR [eax],dl
  438de1:	and    al,0x5
  438de3:	jne    0x438de8
  438de5:	push   esi
  438de6:	pop    es
  438de7:	and    dl,ah
  438de9:	(bad)  
  438dea:	in     eax,dx
  438deb:	(bad)  
  438dec:	jl     0x438d92
  438dee:	aas    
  438def:	add    DWORD PTR [edx+0x4],eax
  438df2:	in     al,0xf1
  438df4:	mov    WORD PTR [ebx],ds
  438df6:	or     DWORD PTR [esi-0x3d],0xffffffde
  438dfa:	les    ebp,FWORD PTR [ebx]
  438dfc:	test   bh,dl
  438dfe:	inc    esp
  438dff:	and    al,0xcf
  438e01:	hlt    
  438e02:	sbb    dl,0x40
  438e05:	xor    al,0x5
  438e07:	cmp    ebx,DWORD PTR [eax-0x6d]
  438e0a:	add    esi,DWORD PTR [edx-0x39]
  438e0d:	into   
  438e0e:	enter  0xc773,0xde
  438e12:	ror    BYTE PTR [ebx+0x2465df71],0xab
  438e19:	pop    eax
  438e1a:	in     al,dx
  438e1b:	cmpxchg8b QWORD PTR [edx]
  438e1e:	and    ecx,eax
  438e20:	and    BYTE PTR [esi-0x206cfcbf],0xc0
  438e27:	mov    edi,edi
  438e29:	shl    DWORD PTR [eax],0x8b
  438e2c:	ud1    edi,DWORD PTR [eax]
  438e2f:	mov    DWORD PTR ds:0x574c8365,edi
  438e35:	push   0x623f5688
  438e3a:	mov    ebx,0x14b9778b
  438e3f:	shufps xmm6,xmm2,0xf0
  438e43:	inc    DWORD PTR [eax]
	...
  438e55:	add    BYTE PTR [eax],al
  438e57:	add    BYTE PTR [eax+eiz*4],cl
  438e5a:	aas    
  438e5b:	add    DWORD PTR [ecx],esi
  438e5d:	add    al,0x8c
  438e5f:	icebp  
  438e60:	cld    
  438e61:	push   ss
  438e62:	jp     0x438e5f
  438e64:	ds data16 test dh,dl
  438e68:	bound  eax,QWORD PTR [eax+0x43]
  438e6b:	cli    
  438e6c:	loope  0x438e3c
  438e6e:	and    BYTE PTR [eax],ah
  438e70:	bound  esi,QWORD PTR [eax]
  438e72:	mov    edx,0x796f4900
  438e77:	jne    0x438e8c
  438e79:	call   0x86dc14c1
  438e7e:	jp     0x438e56
  438e80:	outs   dx,BYTE PTR ds:[esi]
  438e81:	shl    DWORD PTR [edi+0x53],0x46
  438e85:	shl    BYTE PTR [edi-0x3e],cl
  438e88:	cmp    DWORD PTR [esi],ebp
  438e8a:	sbb    DWORD PTR [eax],esp
  438e8c:	jmp    0xb23e4351
  438e91:	in     eax,dx
  438e92:	inc    esp
  438e93:	jae    0x438eed
  438e95:	in     al,dx
  438e96:	mov    edx,0xf8f07e12
  438e9b:	add    edx,ebp
  438e9d:	cmp    ah,ch
  438e9f:	test   DWORD PTR [edi+ebx*2],esp
  438ea2:	jge    0x438e84
  438ea4:	sub    eax,0x5123b8ea
  438ea9:	ja     0x438f25
  438eab:	pop    edi
  438eac:	sahf   
  438ead:	iret   
  438eae:	inc    ebx
  438eaf:	xchg   BYTE PTR [esi],ch
  438eb1:	mov    gs,ecx
  438eb3:	jle    0x438ebb
  438eb5:	xchg   esi,eax
  438eb6:	sbb    eax,0x4e2a7b00
  438ebb:	cli    
	...
  438ed0:	jge    0x438ec4
  438ed2:	inc    edi
  438ed3:	add    eax,0xf1c1ed65
  438ed8:	ins    DWORD PTR es:[edi],dx
  438ed9:	jg     0x438e5b
  438edb:	popa   
  438edc:	pop    esi
  438edd:	jb     0x438f35
  438edf:	add    eax,0x85448f5c
  438ee4:	pushf  
  438ee5:	jg     0x438ebe
  438ee7:	or     BYTE PTR [esi+0x2305a6e9],al
  438eed:	cdq    
  438eee:	xchg   edx,eax
  438eef:	(bad)  
  438ef0:	cmp    eax,0x4d417772
  438ef5:	fxch   st(3)
  438ef7:	outs   dx,BYTE PTR ds:[esi]
  438ef8:	pop    ecx
  438ef9:	(bad)  
  438efa:	nop
  438efb:	mov    ds:0x79e76025,al
  438f00:	mov    ds:0x41d75ec8,eax
  438f05:	mov    eax,ds:0xc7596dcb
  438f0a:	nop
  438f0b:	jb     0x438f12
  438f0d:	pusha  
  438f0e:	out    0x79,eax
  438f10:	mov    ds:0x696dc3c8,eax
  438f15:	(bad)  
  438f16:	push   eax
  438f17:	jle    0x438f06
  438f19:	pop    edi
  438f1a:	out    0x79,eax
  438f1c:	mov    ds:0x697f0bc8,eax
  438f21:	(bad)  
  438f22:	pop    edi
  438f23:	mov    ebp,0x5a44b470
  438f28:	fsubr  DWORD PTR [eax+0x3a]
  438f2b:	inc    esp
  438f2c:	fist   WORD PTR [esi]
  438f2e:	fistp  DWORD PTR [edi]
  438f30:	fcmove st,st(4)
  438f32:	iret   
  438f33:	pop    eax
	...
  438f48:	cmp    al,0x53
  438f4a:	test   eax,0xeb5481ec
  438f4f:	clc    
  438f50:	mov    esp,0x70bd5dfa
  438f55:	mov    ch,0x5c
  438f57:	mul    DWORD PTR [esi+0x74]
  438f5a:	mov    al,ds:0x6709b78
  438f5f:	add    ah,BYTE PTR [edx-0x27]
  438f62:	ins    BYTE PTR es:[edi],dx
  438f63:	inc    ebx
  438f64:	icebp  
  438f65:	into   
  438f66:	icebp  
  438f67:	cld    
  438f68:	je     0x438f5b
  438f6a:	jmp    0x438f47
  438f6c:	pop    es
  438f6d:	retf   0x1340
  438f70:	push   ds
  438f71:	call   0x8f27:0x998d07be
  438f78:	mov    ecx,0xa38bdbb5
  438f7d:	fsubr  DWORD PTR [esi-0x39]
  438f80:	ins    DWORD PTR es:[edi],dx
  438f81:	push   esp
  438f82:	add    BYTE PTR [ecx-0x4d56aaaf],ch
  438f88:	mov    eax,ds:0xa1b78563
  438f8d:	mov    es,WORD PTR [ebx-0x62aaae57]
  438f93:	xchg   edx,eax
  438f94:	mov    eax,ds:0x79278663
  438f99:	mov    ch,0x81
  438f9b:	cmc    
  438f9c:	pop    eax
  438f9d:	push   ecx
  438f9e:	inc    edx
  438f9f:	(bad)  
  438fa0:	ss dec edx
  438fa2:	cmc    
  438fa3:	jbe    0x438f46
  438fa5:	push   esp
  438fa6:	inc    edx
  438fa7:	(bad)  
  438fa8:	std    
  438fa9:	dec    ebx
  438faa:	or     al,0xfe
	...
  438fc0:	cmp    al,0xdb
  438fc2:	xchg   BYTE PTR [edi-0x1a684ab8],ah
  438fc8:	jle    0x43901b
  438fca:	inc    edx
  438fcb:	mul    bh
  438fcd:	sbb    BYTE PTR [edx],dl
  438fcf:	xchg   ecx,eax
  438fd0:	mov    eax,ds:0x20b683d3
  438fd5:	arpl   cx,di
  438fd7:	or     eax,0x401cd302
  438fdc:	add    eax,0x7226f964
  438fe1:	xchg   DWORD PTR [esi],edi
  438fe3:	jmp    0xe9821811
  438fe8:	outs   dx,DWORD PTR ds:[esi]
  438fe9:	jge    0x439029
  438feb:	jmp    0xe982128b
  438ff0:	mov    edx,0xc8e93e82
  438ff5:	cmp    BYTE PTR [esi],0xe9
  438ff8:	out    dx,al
  438ff9:	cmp    BYTE PTR [esi],0xe9
  438ffc:	aam    0x82
  438ffe:	ds jmp 0xe98211f4
  439004:	adc    DWORD PTR [edx+0x7d41e93e],eax
  43900a:	ds jmp 0x820d2e
  439010:	cmp    ebx,DWORD PTR [esi]
  439012:	fadd   QWORD PTR [edx+0x3b]
  439015:	call   0xa68ed2f6
  43901a:	fadd   QWORD PTR [edx+0x4b]
  43901d:	(bad)  
  43901e:	(bad)  
  43901f:	inc    edx
  439020:	cmp    esi,DWORD PTR [ecx-0x29]
  439023:	inc    edx
	...
  439038:	cmp    esp,DWORD PTR [esi+0x7c0b42d7]
  43903e:	fld    DWORD PTR [edx+0xb]
  439041:	fld    DWORD PTR ds:[edx-0x5]
  439045:	cmp    eax,0x3dfb42d9
  43904a:	fld    DWORD PTR [edx+0xb]
  43904d:	fld    DWORD PTR ds:[edx+0xb]
  439051:	fld    DWORD PTR ds:[edx-0x5]
  439055:	cmp    eax,0xe8fb42d9
  43905a:	fld    DWORD PTR [edx-0x35]
  43905d:	call   0x3e0ed33b
  439062:	fld    DWORD PTR [edx-0x45]
  439065:	call   0xe8fed343
  43906a:	fld    DWORD PTR [edx-0x35]
  43906d:	call   0xe90ed34b
  439072:	fld    DWORD PTR [edx-0x45]
  439075:	call   0xe8fed353
  43907a:	fld    DWORD PTR [edx-0x75]
  43907d:	jo     0x43905f
  43907f:	inc    edx
  439080:	mov    ebx,DWORD PTR [ecx-0x7c84bd20]
  439086:	loopne 0x4390ca
  439088:	jnp    0x4390bf
  43908a:	loopne 0x4390ce
  43908c:	mov    ebx,DWORD PTR [edi]
  43908e:	loopne 0x4390d2
  439090:	mov    edx,DWORD PTR [ecx-0x20]
  439093:	inc    edx
  439094:	jnp    0x439088
  439096:	loopne 0x4390da
  439098:	jnp    0x439076
  43909a:	loopne 0x4390de
	...
  4390b0:	bound  esi,QWORD PTR [edx+0x59]
  4390b3:	loopne 0x439055
  4390b5:	jb     0x4390ec
  4390b7:	loopne 0x439059
  4390b9:	jb     0x4390e4
  4390bb:	shl    DWORD PTR [eax-0x5f21f58e],1
  4390c1:	jb     0x4390bb
  4390c3:	jecxz  0x439065
  4390c5:	jb     0x4390c8
  4390c7:	shl    DWORD PTR [eax-0x5f2d5b8e],cl
  4390cd:	jb     0x4390cb
  4390cf:	in     al,0xa0
  4390d1:	jb     0x4390ee
  4390d3:	loop   0x439075
  4390d5:	jb     0x4390d6
  4390d7:	loope  0x439079
  4390d9:	jb     0x439149
  4390db:	loope  0x43907d
  4390dd:	jb     0x439158
  4390df:	loope  0x439081
  4390e1:	jb     0x439160
  4390e3:	shl    BYTE PTR [eax-0x5f1b4b8e],cl
  4390e9:	jb     0x43910e
  4390eb:	loope  0x43908d
  4390ed:	jb     0x4390ea
  4390ef:	loop   0x439111
  4390f1:	jb     0x439084
  4390f3:	loop   0x439115
  4390f5:	jb     0x43911e
  4390f7:	shl    BYTE PTR [eax],cl
  4390f9:	jb     0x4390ff
  4390fb:	loop   0x43911d
  4390fd:	jb     0x439166
  4390ff:	(bad)  
  439100:	and    BYTE PTR [edx-0xc],dh
  439103:	frstor [eax]
  439105:	jb     0x4390c9
  439107:	frstor [eax]
  439109:	jb     0x4390e3
  43910b:	frstor [eax]
  43910d:	jb     0x4390c7
  43910f:	frstor [eax]
  439111:	jb     0x439180
  439113:	fld    QWORD PTR [eax]
	...
  439125:	add    BYTE PTR [eax],al
  439127:	add    BYTE PTR [eax],ah
  439129:	jb     0x43914c
  43912b:	frstor [eax]
  43912d:	jb     0x439148
  43912f:	fbld   TBYTE PTR [eax]
  439131:	jb     0x43910a
  439133:	fisub  WORD PTR [eax]
  439135:	jb     0x4390c6
  439137:	fisub  WORD PTR [eax]
  439139:	jb     0x4390ca
  43913b:	fisub  WORD PTR [eax]
  43913d:	(bad)  
  43913f:	xchg   ecx,eax
  439140:	test   BYTE PTR [edi],dl
  439142:	call   0xe85acdd8
  439147:	aam    0xb3
  439149:	push   eax
  43914a:	fmul   DWORD PTR [ebp+0x4a6636b]
  439150:	into   
  439151:	pop    ss
  439152:	jmp    0x4391cc
  439154:	stos   DWORD PTR es:[edi],eax
  439155:	lds    ebx,FWORD PTR [edx]
  439157:	lea    esp,[edx]
  439159:	out    dx,eax
  43915a:	inc    ebx
  43915b:	fwait
  43915c:	mov    BYTE PTR [edx+eiz*4-0x20],ah
  439160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439161:	popa   
  439162:	call   0xa364da1e
  439167:	add    esp,DWORD PTR [edx-0x27]
  43916a:	add    ebp,edi
  43916c:	and    eax,0xc584cce5
  439171:	hlt    
  439172:	add    ebp,edi
  439174:	and    eax,0xfc43d4e5
  439179:	(bad)  
  43917a:	jno    0x4391c0
  43917c:	dec    ebp
  43917d:	out    0xfc,al
  43917f:	cmp    DWORD PTR [ecx+ebx*8+0xae513d4],esp
  439186:	loopne 0x43916c
  439188:	sub    ecx,ebp
  43918a:	data16 cmp al,BYTE PTR [eax]
	...
  43919d:	add    BYTE PTR [eax],al
  43919f:	add    al,cl
  4391a1:	in     eax,0xec
  4391a3:	hlt    
  4391a4:	add    eax,0x8d054f19
  4391a9:	cdq    
  4391aa:	xchg   ecx,eax
  4391ab:	fdivr  st(4),st
  4391ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4391ae:	daa    
  4391af:	test   eax,0xb9f81a6a
  4391b4:	pop    ebx
  4391b5:	repz loopne 0x43917a
  4391b8:	outs   dx,DWORD PTR ds:[esi]
  4391b9:	jecxz  0x43919a
  4391bb:	cmp    DWORD PTR [edx-0x37],esp
  4391be:	xchg   ebx,eax
  4391bf:	or     edi,DWORD PTR ds:0x62392699
  4391c5:	shl    DWORD PTR [ebx+0x3b],1
  4391c8:	test   DWORD PTR [edx+0x0],ecx
  4391cb:	div    BYTE PTR ds:0x4e11f15f
  4391d1:	cdq    
  4391d2:	inc    eax
  4391d3:	stos   BYTE PTR es:[edi],al
  4391d4:	(bad)
  4391d8:	xor    eax,0x820d7c54
  4391dd:	repz or eax,0x67007f62
  4391e3:	out    dx,eax
  4391e4:	push   eax
  4391e5:	sbb    edx,DWORD PTR [edi+0x70]
  4391e8:	adc    dh,BYTE PTR [edi+0x51a6fa1c]
  4391ee:	add    DWORD PTR [edx+ebx*2-0x4d],ebx
  4391f2:	aas    
  4391f3:	jb     0x4391b8
  4391f5:	push   ecx
  4391f6:	inc    esp
  4391f7:	lds    esi,FWORD PTR [ecx-0x5e]
  4391fa:	call   0x8872e5
  4391ff:	jmp    0x7250e565
	...
  439218:	xchg   esp,eax
  439219:	jb     0x4391b1
  43921b:	nop
  43921c:	cmp    eax,0xe179855f
  439221:	pusha  
  439222:	sbb    al,0xee
  439224:	cld    
  439225:	out    0x76,al
  439227:	sbb    dl,BYTE PTR [edi+0x1a583619]
  43922d:	les    edi,FWORD PTR [ebp+0x57]
  439230:	jp     0x439217
  439232:	sbb    ecx,edi
  439234:	jne    0x439210
  439236:	cli    
  439237:	loope  0x439240
  439239:	cmc    
  43923a:	jge    0x43927b
  43923c:	pop    edi
  43923d:	in     eax,0x36
  43923f:	push   0x74
  439241:	les    esi,FWORD PTR [ecx+ecx*8-0x20]
  439245:	pusha  
  439246:	adc    eax,0xbf53b19d
  43924b:	adc    al,bh
  43924d:	pop    edx
  43924e:	stc    
  43924f:	jmp    0xc52923e4
  439254:	fcomp  DWORD PTR [eax-0x478cff83]
  43925a:	je     0x439277
  43925c:	mov    bl,0x22
  43925e:	or     eax,0x4195f748
  439263:	je     0x4391e6
  439265:	mov    gs,WORD PTR [ebp+0x3a]
  439268:	xor    esp,DWORD PTR [eax]
  43926a:	imul   ebp,DWORD PTR [edx+0x46],0xffffffaf
  43926e:	add    ebp,DWORD PTR [edx+0x47]
  439271:	scas   eax,DWORD PTR es:[edi]
  439272:	jmp    FWORD PTR [ecx+0x38]
  439275:	scas   eax,DWORD PTR es:[edi]
  439276:	sti    
  439277:	imul   edi,DWORD PTR [ecx],0x4c327d
	...
  43928d:	add    BYTE PTR [eax],al
  43928f:	add    BYTE PTR [edi-0x47],ah
  439292:	jae    0x43929b
  439294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439295:	call   0x8b12:0xaf458f3d
  43929c:	clc    
  43929d:	outs   dx,BYTE PTR ds:[esi]
  43929e:	les    esp,FWORD PTR [esi-0x6e]
  4392a1:	xchg   edx,eax
  4392a2:	xchg   BYTE PTR [eax+edi*1],al
  4392a5:	push   ss
  4392a6:	cmp    ah,BYTE PTR [esi-0x7e]
  4392a9:	xchg   edx,eax
  4392aa:	xchg   BYTE PTR [esi],al
  4392ac:	push   ebp
  4392ad:	push   es
  4392ae:	fimul  DWORD PTR [ecx+0x6615714f]
  4392b4:	add    dl,bl
  4392b6:	sub    ecx,ecx
  4392b8:	cmp    dl,BYTE PTR [esi-0x3aa8a3ce]
  4392be:	add    eax,0xf69aa582
  4392c3:	(bad)  
  4392c4:	ds xchg esp,eax
  4392c6:	loope  0x43924b
  4392c8:	xor    edx,edx
  4392ca:	outs   dx,BYTE PTR ds:[esi]
  4392cb:	xchg   edx,eax
  4392cc:	test   ebx,edx
  4392ce:	add    al,0x74
  4392d0:	outs   dx,DWORD PTR ds:[esi]
  4392d1:	retf   0x47ad
  4392d4:	mov    edi,0x8603032f
  4392d9:	xor    cl,bh
  4392db:	dec    edi
  4392dc:	jl     0x43929f
  4392de:	jl     0x4392f6
  4392e0:	retf   
  4392e1:	aad    0x79
  4392e3:	les    esp,FWORD PTR [edx+0x74]
  4392e6:	add    bl,bh
  4392e8:	lea    ebp,[edi-0x3]
  4392eb:	jno    0x439344
  4392ed:	pop    ds
  4392ee:	cmp    eax,0xee69893f
  4392f3:	enter  0x0,0x0
	...
  439307:	add    BYTE PTR [ebx],ah
  439309:	fldcw  WORD PTR [eax-0x5b959206]
  43930f:	mov    BYTE PTR ds:0xbdbff06e,bl
  439315:	sbb    dl,bl
  439317:	push   esi
  439318:	mov    ebx,0xd9000c84
  43931d:	push   cs
  43931e:	jmp    0x85c62426
  439323:	add    bl,ch
  439325:	add    DWORD PTR [ecx],ecx
  439327:	mov    DWORD PTR [ebx+0x2d3d8a3a],esp
  43932d:	mov    esi,0x9a62653e
  439332:	or     eax,DWORD PTR [eax+eiz*1-0x36]
  439336:	mov    ebp,0x3e81e90b
  43933b:	add    esp,DWORD PTR [edx-0x45]
  43933e:	fsub   DWORD PTR [ebx]
  439340:	pop    esi
  439341:	retf   
  439342:	dec    BYTE PTR [eax+0x3becb63]
  439348:	jmp    0x43934b
  43934a:	or     DWORD PTR [edi+0x40863aa0],eax
  439350:	pop    edx
  439351:	repz inc esp
  439353:	mov    BYTE PTR [eax-0x37],ah
  439356:	mov    esi,0x584eb03
  43935b:	mov    esi,0x733c4266
  439360:	jle    0x4393ac
  439362:	cmp    al,0x73
  439364:	xchg   BYTE PTR [edx+0x3c],cl
  439367:	jo     0x4393c7
  439369:	call   0x0:0xffff
	...
  439380:	bound  eax,QWORD PTR [edx+0x3f]
  439383:	pop    es
  439384:	(bad)  
  439385:	fnstenv [esi-0x802c678]
  43938b:	(bad)  
  43938c:	fadd   st(5),st
  43938e:	retf   
  43938f:	rdtsc  
  439391:	fsubr  QWORD PTR [ecx+edx*8]
  439394:	fcom   QWORD PTR [edx+0xf]
  439397:	(bad)  
  439398:	jge    0x4393f2
  43939a:	out    0x87,eax
  43939c:	mov    ch,0xce
  43939e:	jmp    0x439390
  4393a0:	lods   eax,DWORD PTR ds:[esi]
  4393a1:	inc    esp
  4393a2:	vpunpckhbw ymm1,ymm5,ymm5
  4393a6:	or     esp,DWORD PTR [eax]
  4393a8:	in     eax,0xf
  4393aa:	(bad)  [edi+0x36e6f581]
  4393b0:	mov    bl,0x58
  4393b2:	hlt    
  4393b3:	shl    DWORD PTR [ebx-0x67],cl
  4393b6:	out    0x80,eax
  4393b8:	and    ebp,esp
  4393ba:	(bad)  
  4393bb:	fsub   QWORD PTR [ecx-0x31]
  4393be:	out    0x8a,al
  4393c0:	mov    ch,bl
  4393c2:	pop    esi
  4393c3:	inc    ebp
  4393c4:	mov    edi,DWORD PTR [eax-0x1b2026bc]
  4393ca:	out    0xd5,eax
  4393cc:	mov    al,0x64
  4393ce:	cwde   
  4393cf:	mov    BYTE PTR [ebx+0x41bfe6dd],cl
  4393d5:	in     eax,0x1a
  4393d7:	sub    al,0x56
  4393d9:	(bad)  
  4393db:	add    ebx,esi
  4393dd:	sbb    ah,bh
  4393df:	pop    es
  4393e0:	cmp    eax,0xb7e19
	...
  4393f5:	add    BYTE PTR [eax],al
  4393f7:	add    ch,bl
  4393f9:	fsubrp st(6),st
  4393fb:	lds    esp,FWORD PTR [ecx+0x62]
  4393fe:	fld    DWORD PTR [edi]
  439400:	cmp    DWORD PTR [edi+0x64620725],esi
  439406:	mov    ds:0x9aaf61e7,eax
  43940b:	mov    BYTE PTR [edx+0x300ba313],bh
  439411:	std    
  439412:	add    BYTE PTR [edx-0x62],ah
  439415:	jecxz  0x4393a2
  439417:	mov    eax,0x9df05d66
  43941c:	imul   ecx,DWORD PTR [edx+edx*8-0x36],0x2f05751
  439424:	arpl   WORD PTR [eax-0x10],sp
  439427:	bound  ebp,QWORD PTR [edi]
  439429:	pop    edi
  43942a:	leave  
  43942b:	adc    DWORD PTR [ecx],edi
  43942d:	mov    al,ds:0x97dcfef9
  439432:	je     0x439420
  439434:	fmul   st,st(2)
  439436:	or     BYTE PTR [ecx],bh
  439438:	pusha  
  439439:	mov    ah,0x5a
  43943b:	stos   DWORD PTR es:[edi],eax
  43943c:	(bad)  
  43943d:	fld    DWORD PTR [ebp+0x35db4225]
  439443:	sub    BYTE PTR [edx-0x35],ah
  439446:	add    al,0x1b
  439448:	sahf   
  439449:	aas    
  43944a:	add    esi,DWORD PTR [eax+0x27]
  43944d:	(bad)  [eax+0xde9fe8]
  439453:	pop    ds
  439454:	fisttp QWORD PTR [ecx-0x7b]
  439457:	fistp  QWORD PTR [ecx+0x12]
  43945a:	dec    eax
  43945b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  439470:	pop    ecx
  439471:	pop    es
  439472:	shl    DWORD PTR [eax+0x60],0x60
  439476:	inc    edx
  439477:	in     eax,dx
  439478:	ficomp WORD PTR [eax-0x5762d0f8]
  43947e:	test   DWORD PTR [eax-0x13],edi
  439481:	mov    al,ds:0xa203912c
  439486:	stc    
  439487:	jbe    0x43946e
  439489:	shl    BYTE PTR [eax],1
  43948b:	jmp    0xe03d7645
  439490:	rcl    DWORD PTR [ebx+0x13],1
  439493:	test   DWORD PTR [ecx+ebx*4+0x0],ebp
  439497:	mov    bh,0x24
  439499:	test   al,0x85
  43949b:	pop    eax
  43949c:	fdivp  st(0),st
  43949e:	cli    
  43949f:	add    BYTE PTR [eax-0x6d],cl
  4394a2:	and    eax,0x68f0ee00
  4394a7:	add    BYTE PTR [ebx-0x23],bl
  4394aa:	add    BYTE PTR [edx-0x45],ch
  4394ad:	adc    esi,DWORD PTR ds:0xf996f578
  4394b3:	dec    BYTE PTR [esi+0x7b400b76]
  4394b9:	gs aas 
  4394bb:	sub    al,0xfe
  4394bd:	pushf  
  4394be:	je     0x4394c4
  4394c0:	mov    ecx,0xd11ce29a
  4394c5:	out    0xf5,al
  4394c7:	je     0x439468
  4394c9:	fimul  WORD PTR [ebx-0x9d550ba]
  4394cf:	adc    eax,0x40eb9b
	...
  4394e8:	enter  0x616,0x8b
  4394ec:	add    eax,0x3b000002
  4394f1:	fidiv  DWORD PTR [eax-0x2607aff]
  4394f7:	dec    DWORD PTR [ebp+0x2a]
  4394fa:	cmp    cl,0xa1
  4394fd:	inc    ebp
  4394fe:	mov    WORD PTR [edi+0x3f],?
  439501:	test   cl,bh
  439503:	push   ebp
  439504:	(bad)  
  439505:	call   0xdd8eab62
  43950a:	add    DWORD PTR [edi+0x27],0x820cbd5f
  439511:	sbb    edx,DWORD PTR [ecx]
  439513:	(bad)  
  439514:	dec    esp
  439515:	icebp  
  439516:	add    BYTE PTR [eax],ah
  439518:	or     ebx,edx
  43951a:	push   ebp
  43951b:	(bad)  
  43951c:	std    
  43951d:	inc    ecx
  43951e:	stc    
  43951f:	(bad)  
  439520:	sti    
  439521:	das    
  439522:	mov    edx,0xf00d5056
  439527:	push   es
  439528:	retf   0x385
  43952b:	and    DWORD PTR [edx+0x2e],0xffffffc1
  43952f:	dec    DWORD PTR [esi+0x3c]
  439532:	repnz mov edi,0x7b7d32c9
  439538:	jle    0x439582
  43953a:	std    
  43953b:	jae    0x439598
  43953d:	cmpxchg BYTE PTR [edi],ch
  439540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439541:	sub    al,0x3d
  439543:	adc    BYTE PTR [edx],ah
  439545:	inc    eax
  439546:	mov    BYTE PTR [ecx+0x4e],al
  439549:	xchg   esi,eax
  43954a:	inc    ebx
  43954b:	add    eax,DWORD PTR [eax]
	...
  43955d:	add    BYTE PTR [eax],al
  43955f:	add    BYTE PTR [edx-0x69],ah
  439562:	mov    bh,al
  439564:	fnstenv [esi-0x3f]
  439567:	test   BYTE PTR [ebx-0x16ae1c2d],ch
  43956d:	ror    BYTE PTR ds:0xbebd5666,1
  439573:	xor    edx,DWORD PTR [edx]
  439575:	jno    0x4395ad
  439577:	adc    al,0xb2
  439579:	push   esp
  43957a:	mov    ebp,0xc8fbe8ff
  43957f:	jle    0x4395a7
  439581:	aas    
  439582:	xchg   BYTE PTR [edi+0x72],ch
  439585:	or     al,0x38
  439587:	adc    al,0x16
  439589:	xor    DWORD PTR [ebp+0x43f397ff],edi
  43958f:	push   ecx
  439590:	fst    DWORD PTR [ecx+0x3e9cc2cf]
  439596:	(bad)  
  439597:	jmp    DWORD PTR [edx+0x42]
  43959a:	inc    eax
  43959b:	add    edx,esp
  43959d:	rol    ah,1
  43959f:	dec    DWORD PTR [ebp+0x51fa10e4]
  4395a5:	arpl   WORD PTR [ebp-0x49365d87],ax
  4395ab:	inc    ebx
  4395ac:	loop   0x43958a
  4395ae:	mov    ah,0xf9
  4395b0:	xchg   esp,eax
  4395b1:	repz or DWORD PTR [ecx-0x2bcee],0x98a1d9eb
  4395bc:	aad    0x54
  4395be:	out    0x8a,eax
  4395c0:	or     edi,DWORD PTR [edx-0x19]
  4395c3:	add    eax,DWORD PTR [eax]
	...
  4395d5:	add    BYTE PTR [eax],al
  4395d7:	add    BYTE PTR [edx+0x41],ah
  4395da:	sbb    DWORD PTR [eax-0x5266ab45],edi
  4395e0:	bound  esp,QWORD PTR [esi+0x69]
  4395e3:	test   BYTE PTR [edx-0x27],ah
  4395e6:	out    0x2b,eax
  4395e8:	in     eax,0xd5
  4395ea:	sub    DWORD PTR [ecx],edi
  4395ec:	out    0x9d,eax
  4395ee:	retf   
  4395ef:	pop    es
  4395f0:	jmp    0x439585
  4395f2:	rol    DWORD PTR ds:0x7a60d962,cl
  4395f8:	dec    ebp
  4395f9:	xlat   BYTE PTR ds:[ebx]
  4395fa:	out    0x3,eax
  4395fc:	mov    al,ds:0x6205c35b
  439601:	fld1   
  439603:	inc    eax
  439604:	jecxz  0x43960f
  439606:	out    0x3,al
  439608:	bound  edi,QWORD PTR [ecx+0x5c5dc455]
  43960e:	sub    DWORD PTR [ebx*8-0x24ebfc64],ecx
  439615:	call   0x8af3:0xfda18ce3
  43961c:	mov    ds:0x238d22e9,eax
  439621:	mov    bl,0xa5
  439623:	pop    es
  439624:	bound  ebp,QWORD PTR [ebx+0x62d6325e]
  43962a:	test   DWORD PTR ds:0x1aad962,0x42766e2
  439634:	cli    
  439635:	dec    ebp
  439636:	out    0x3,eax
  439638:	bound  esp,QWORD PTR [esi+0x59]
  43963b:	add    DWORD PTR [eax],0x0
	...
  43964e:	add    BYTE PTR [eax],al
  439650:	(bad)  
  439651:	(bad)  
  439653:	sub    esp,DWORD PTR [esi+edx*8+0x79]
  439657:	cmp    dh,bl
  439659:	bound  eax,QWORD PTR [eax]
  43965b:	cdq    
  43965c:	popa   
  43965d:	fld    DWORD PTR [eax]
  43965f:	sub    DWORD PTR [ecx-0x2a],0xa1dc66fa
  439666:	jo     0x4396b9
  439668:	in     al,dx
  439669:	push   ecx
  43966a:	stc    
  43966b:	push   esi
  43966c:	fsub   QWORD PTR [ecx+0x51944114]
  439672:	stc    
  439673:	inc    esi
  439674:	jae    0x43960e
  439676:	and    al,0xf1
  439678:	pusha  
  439679:	sbb    BYTE PTR [edx],al
  43967b:	loope  0x439655
  43967d:	adc    eax,DWORD PTR [ecx]
  43967f:	mov    ch,0x62
  439681:	pop    esp
  439682:	retf   0xd811
  439685:	xchg   esi,eax
  439686:	stc    
  439687:	push   ds
  439688:	ficomp WORD PTR [ecx]
  43968a:	pop    edx
  43968b:	sub    eax,DWORD PTR [ebp-0x6a9db1ad]
  439691:	test   DWORD PTR [eax],0x52fae69c
  439697:	xchg   esi,eax
  439698:	ficom  WORD PTR [eax-0x269e14c8]
  43969e:	sub    eax,0x744fdff7
  4396a3:	std    
  4396a4:	call   0x622ecb12
  4396a9:	fld    DWORD PTR [ebp+0x74fb48eb]
  4396af:	or     bh,ah
  4396b1:	sar    DWORD PTR [esi+0xed],cl
	...
  4396c7:	add    BYTE PTR [eax],bh
  4396c9:	dec    eax
  4396ca:	outs   dx,BYTE PTR ds:[esi]
  4396cb:	mov    ebx,0xeb3019e7
  4396d0:	popa   
  4396d1:	(bad)  [ebp+0x62]
  4396d4:	addr16 dec esi
  4396d6:	push   eax
  4396d7:	stc    
  4396d8:	adc    BYTE PTR [edx],ah
  4396da:	jge    0x43967d
  4396dc:	push   ebp
  4396dd:	fist   WORD PTR [ebx+0x5bb12da9]
  4396e3:	xor    ah,BYTE PTR [eax-0x46ffff2a]
  4396e9:	xchg   esi,eax
  4396ea:	loop   0x4396e1
  4396ec:	push   ebp
  4396ed:	pop    esi
  4396ee:	mov    al,0x38
  4396f0:	stc    
  4396f1:	(bad)  
  4396f2:	add    BYTE PTR [ebx],dh
  4396f4:	or     esp,DWORD PTR [ebx]
  4396f6:	test   dh,dh
  4396f8:	mov    bh,0xee
  4396fa:	or     DWORD PTR [ecx+0xd777],0xc1d9140
  439704:	inc    eax
  439705:	in     al,dx
  439706:	xor    DWORD PTR [edx],edi
  439708:	neg    ebx
  43970a:	inc    eax
  43970b:	cmp    DWORD PTR [edx-0x27],0x31
  43970f:	(bad)  
  439710:	jmp    0xed03c21d
  439715:	sub    al,0xbb
  439717:	add    al,0x8b
  439719:	pop    edi
  43971a:	mov    ebx,0x822274eb
  43971f:	mov    ecx,0xd8b3
  439724:	cwde   
  439725:	test   al,0x84
  439727:	push   edi
  439729:	aas    
  43972a:	dec    edx
  43972b:	mov    eax,DWORD PTR [eax]
	...
  43973d:	add    BYTE PTR [eax],al
  43973f:	add    bh,cl
  439741:	xor    al,BYTE PTR ds:0x2dcc0056
  439747:	add    cl,BYTE PTR [ebx-0x2a]
  43974a:	add    DWORD PTR [esi],0xa74f580
  439750:	jns    0x4397a8
  439752:	mov    edi,0x6ba27004
  439757:	repnz and dl,bl
  43975a:	jg     0x43971d
  43975c:	cmp    ebx,eax
  43975e:	add    BYTE PTR [eax],al
  439760:	dec    ecx
  439761:	pop    esi
  439762:	add    bh,bh
  439764:	dec    ebx
  439765:	fst    DWORD PTR [esi+0x5b]
  439768:	ins    BYTE PTR es:[edi],dx
  439769:	xchg   edi,eax
  43976a:	std    
  43976b:	call   DWORD PTR [ebp+0x5e]
  43976e:	lock mov DWORD PTR ds:0x62408b76,0x6052540
  439779:	xor    al,BYTE PTR gs:[esi+0x33fb8324]
  439780:	(bad)  
  439782:	add    al,0xe8
  439784:	out    0x5e,eax
  439786:	cmp    dl,bh
  439788:	jmp    0x5d06987e
  43978d:	xor    al,0x8f
  43978f:	aas    
  439790:	bound  edx,QWORD PTR [edx-0x54e36cd4]
  439796:	xor    bh,BYTE PTR [esi+0x3e]
  439799:	fadd   QWORD PTR [eax]
  43979b:	add    BYTE PTR [esi],ch
  43979d:	xchg   BYTE PTR cs:[ebx-0x7a],cl
  4397a1:	cmp    al,0x25
  4397a3:	jp     0x4397a5
	...
  4397b5:	add    BYTE PTR [eax],al
  4397b7:	add    dl,cl
  4397b9:	or     DWORD PTR [ebx],esi
  4397bb:	xchg   BYTE PTR [esi],ch
  4397bd:	fadd   QWORD PTR [eax]
  4397bf:	call   0xfa7619dd
  4397c4:	mov    al,ds:0x67efd3b
  4397c9:	and    al,0xf9
  4397cb:	push   esi
  4397cd:	cmp    DWORD PTR [esi-0x39],edi
  4397d0:	jne    0x4397cf
  4397d2:	stc    
  4397d3:	(bad)  
  4397d4:	jp     0x439814
  4397d6:	sbb    esp,edi
  4397d8:	gs mov esi,0x86d0b21
  4397de:	lds    esi,FWORD PTR [edi]
  4397e0:	mov    cl,0xcb
  4397e2:	push   esi
  4397e3:	push   esp
  4397e4:	fst    DWORD PTR [ebx]
  4397e6:	or     eax,0x88107127
  4397eb:	jo     0x439863
  4397ed:	das    
  4397ee:	fs iret 
  4397f0:	inc    DWORD PTR gs:[bp-0x17c4]
  4397f6:	out    0xe5,eax
  4397f8:	fucomi st,st(6)
  4397fa:	loopne 0x43980b
  4397fc:	jmp    0x18ca98f4
  439801:	(bad)  
  439803:	fs or  ebx,ebp
  439806:	lahf   
  439807:	add    DWORD PTR [ebx+0x41b867f1],ecx
  43980d:	stc    
  43980e:	out    0x8a,eax
  439810:	test   eax,0x718adff5
  439815:	cmc    
  439816:	shr    DWORD PTR [edi-0x1c079ba2],cl
	...
  439830:	(bad)  
  439831:	(bad)  
  439832:	pop    esi
  439833:	sub    eax,0x8907d2dc
  439838:	xor    al,0xdd
  43983a:	push   cs
  43983b:	pop    edx
  43983c:	pop    eax
  43983d:	xor    BYTE PTR [ebx+0x29dc51df],0x35
  439844:	dec    esi
  439845:	xchg   ecx,eax
  439846:	xlat   BYTE PTR ds:[ebx]
  439847:	ret    
  439848:	lods   eax,DWORD PTR ds:[esi]
  439849:	arpl   WORD PTR [ebx-0x589cb221],sp
  43984f:	sti    
  439850:	pop    ecx
  439851:	fidiv  DWORD PTR [edx+eiz*8-0x5b69b3b4]
  439858:	in     al,0x9d
  43985a:	ret    
  43985b:	adc    edx,edi
  43985d:	in     eax,0xe1
  43985f:	sub    BYTE PTR [ebx+0x63],ah
  439862:	loope  0x4397ef
  439864:	pusha  
  439865:	cwde   
  439866:	test   eax,0xf1cb7ff8
  43986b:	add    BYTE PTR [edi-0x24],ch
  43986e:	hlt    
  43986f:	clc    
  439870:	dec    esp
  439871:	retf   
  439872:	add    BYTE PTR [ecx],ch
  439874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439875:	or     eax,0x1480aee6
  43987a:	xlat   BYTE PTR ds:[ebx]
  43987b:	mov    al,0x9f
  43987d:	fs and esp,eax
  439880:	ins    DWORD PTR es:[edi],dx
  439881:	pop    esi
  439882:	repz add eax,0x8949dd3d
  439888:	arpl   WORD PTR [edi+0x18a4fc70],si
  43988e:	add    bl,ch
  439890:	loop   0x4398ab
  439892:	(bad)  
  439893:	icebp  
	...
  4398a8:	push   ebx
  4398a9:	mov    esi,0x4f3ceaf0
  4398ae:	cld    
  4398af:	loop   0x439903
  4398b1:	mov    esi,0x141e82dd
  4398b6:	add    eax,0xee070314
  4398bb:	cli    
  4398bc:	push   esi
  4398bd:	pop    eax
  4398be:	dec    esp
  4398bf:	lds    edx,FWORD PTR [ecx+0x5e]
  4398c2:	adc    al,0xe7
  4398c4:	mov    dl,dh
  4398c6:	test   edi,esp
  4398c8:	call   0xcd7216a7
  4398cd:	into   
  4398ce:	ret    0xcae5
  4398d1:	cmp    eax,0x46625b6e
  4398d6:	std    
  4398d7:	dec    ebx
  4398d8:	mov    edx,0x964c6e3e
  4398dd:	mov    cl,0x5b
  4398df:	mov    ds:0x2b0c1be2,al
  4398e4:	popf   
  4398e5:	dec    edi
  4398e6:	cmp    BYTE PTR ds:0xe9f94fed,0xb2
  4398ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4398ee:	push   edx
  4398ef:	jb     0x439944
  4398f1:	popa   
  4398f2:	dec    esp
  4398f3:	int    0x51
  4398f5:	lods   al,BYTE PTR ds:[esi]
  4398f6:	test   DWORD PTR [edi],ebx
  4398f8:	call   0x3a24bdc8
  4398fd:	or     BYTE PTR [ecx-0x4e1cce02],ch
  439903:	adc    DWORD PTR [edx-0x71],edx
  439906:	inc    eax
  439907:	gs mov ecx,0x4283e3
	...
  43991d:	add    BYTE PTR [eax],al
  43991f:	add    BYTE PTR [edi-0x27],ah
  439922:	add    BYTE PTR [ebx+0x5c],dl
  439925:	mov    ebx,0xe42eb283
  43992a:	inc    esp
  43992b:	mov    cl,0xde
  43992d:	xchg   edx,eax
  43992e:	and    al,0x0
  439930:	scas   eax,DWORD PTR es:[edi]
  439931:	aad    0x0
  439933:	add    BYTE PTR [ebx],bh
  439935:	xchg   DWORD PTR [esp+eax*4],ecx
  439938:	repz xchg ecx,eax
  43993a:	or     BYTE PTR [ecx+0xf70928],al
  439940:	sti    
  439941:	push   edi
  439942:	ret    0x7608
  439945:	and    DWORD PTR ds:0xf6463b6c,ebx
  43994b:	and    DWORD PTR [edi+0x41],esp
  43994e:	sbb    eax,0x21416721
  439953:	push   esi
  439954:	test   al,0xf9
  439956:	mov    esi,0x3586af44
  43995b:	add    bl,cl
  43995d:	(bad)  
  43995f:	adc    eax,0x40f1cb
  439964:	ds xchg ebp,eax
  439966:	push   es
  439967:	test   BYTE PTR [edx+0x400000d5],bh
  43996d:	rcr    DWORD PTR ds:0xdabbb0,1
  439973:	push   esi
  439974:	and    DWORD PTR ss:0x3d59fb74,ebx
  43997b:	and    al,0xbf
  43997d:	sub    dh,dh
  43997f:	adc    eax,0x40f117
	...
  439998:	(bad)  
  439999:	xchg   esp,eax
  43999a:	push   es
  43999b:	xchg   ebp,eax
  43999c:	dec    ebx
  43999d:	int    0x3d
  43999f:	and    al,0x78
  4399a1:	push   esi
  4399a2:	mov    ecx,0x3dcf8174
  4399a7:	and    al,0xef
  4399a9:	ds aas 
  4399ab:	add    al,0xd6
  4399ad:	loope  0x439930
  4399af:	clc    
  4399b0:	and    BYTE PTR [eax+0x417f8afd],cl
  4399b6:	imul   edi,DWORD PTR [ebx],0x8afd893d
  4399bc:	bound  ebx,QWORD PTR [eax]
  4399be:	fisubr DWORD PTR [ecx]
  4399c0:	jmp    0x61231c47
  4399c5:	leave  
  4399c6:	shl    DWORD PTR [ebx],0x46
  4399c9:	add    al,0xb8
  4399cb:	repnz out 0xdb,al
  4399ce:	xchg   esp,eax
  4399cf:	call   DWORD PTR ds:0x62fffd40
  4399d5:	and    BYTE PTR [ecx+0x75805018],dh
  4399db:	inc    ebx
  4399dc:	inc    esi
  4399dd:	push   edx
  4399de:	jnp    0x439a2b
  4399e0:	ds push ebx
  4399e2:	or     eax,0xbf88de77
  4399e8:	outs   dx,DWORD PTR ds:[esi]
  4399e9:	loop   0x439a19
  4399eb:	mov    edi,0xfffda2cb
  4399f0:	(bad)  
  4399f1:	out    0x7f,al
  4399f3:	add    DWORD PTR [esi+0x62fffdbc],0xffffff90
  4399fa:	add    BYTE PTR [ebx+0x0],0x0
	...
  439a0e:	add    BYTE PTR [eax],al
  439a10:	xchg   ah,ch
  439a12:	aam    0xfa
  439a14:	dec    edi
  439a15:	lods   al,BYTE PTR ds:[esi]
  439a16:	adc    DWORD PTR [eax+0x62],eax
  439a19:	mov    ebp,0xffcf0a3d
  439a1e:	jne    0x439a63
  439a20:	inc    esi
  439a21:	xor    al,BYTE PTR [ecx+0x7aec0ebf]
  439a27:	add    DWORD PTR [esi-0x44],0xfffffffd
  439a2b:	jmp    DWORD PTR [edx+0x3b]
  439a2e:	mov    DWORD PTR [ebx],0x41da3eff
  439a34:	pop    esi
  439a35:	mov    ecx,0xcb4623c1
  439a3a:	and    DWORD PTR [ebx],0xfffd3fe2
  439a40:	call   0x99527bbb
  439a45:	xor    al,0xb0
  439a47:	add    DWORD PTR [ecx-0x27],edi
  439a4a:	jmp    0x8393bc9
  439a4f:	jle    0x4399f2
  439a51:	cmc    
  439a52:	cmc    
  439a53:	sbb    al,0xd7
  439a55:	pop    edi
  439a56:	sbb    ebp,eax
  439a58:	pop    esp
  439a59:	pop    edi
  439a5a:	test   al,0x7c
  439a5c:	mov    eax,ds:0xf31cd5f5
  439a61:	mov    edi,0xc56e30e7
  439a66:	aam    0xc3
  439a68:	or     eax,0x3de82b62
  439a6d:	push   esi
  439a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439a6f:	mov    eax,0x1792a933
	...
  439a88:	adc    ch,dl
  439a8a:	daa    
  439a8b:	add    al,0xe5
  439a8d:	dec    ecx
  439a8e:	cmp    BYTE PTR [eax+0x40e0141],0xd9
  439a95:	out    0xf,al
  439a97:	sbb    BYTE PTR [edx],ah
  439a99:	fldenv [edx+edi*1+0x51]
  439a9d:	out    dx,al
  439a9e:	outs   dx,BYTE PTR ds:[esi]
  439a9f:	enter  0xe581,0x5a
  439aa3:	mov    ah,0x59
  439aa5:	mov    ds:0xe9a61752,eax
  439aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439aab:	add    ebx,ebx
  439aad:	xchg   ebp,eax
  439aae:	or     ebx,esp
  439ab0:	ficomp WORD PTR [ecx]
  439ab2:	mov    ah,0x19
  439ab4:	xor    BYTE PTR [esp+ebx*8+0x43],cl
  439ab8:	gs cdq 
  439aba:	out    0xf5,eax
  439abc:	int    0xac
  439abe:	ror    esi,0x2c
  439ac1:	pop    edx
  439ac2:	and    edx,DWORD PTR [eax+0x45e74c7d]
  439ac8:	pop    ebp
  439ac9:	fld    DWORD PTR [ecx-0x1c0b167c]
  439acf:	add    ebx,DWORD PTR [ecx+0x55]
  439ad2:	cmp    BYTE PTR [ebx],al
  439ad4:	(bad)  
  439ad5:	fld    DWORD PTR [eax]
  439ad7:	bound  ebp,QWORD PTR [edx]
  439ad9:	clc    
  439ada:	sbb    BYTE PTR [edx-0x6],ch
  439add:	neg    DWORD PTR [eax-0x17]
  439ae0:	fidiv  WORD PTR [edi+0x62663d24]
  439ae6:	inc    esp
  439ae7:	or     eax,0x544530e
	...
  439b00:	sub    dh,bl
  439b02:	inc    esp
  439b03:	or     eax,0x70d5fb42
  439b08:	and    eax,0x1d6260f8
  439b0d:	clc    
  439b0e:	cmp    BYTE PTR [edx],al
  439b10:	sbb    bh,al
  439b12:	xor    BYTE PTR [edx],ch
  439b14:	mov    DWORD PTR [eax-0x6782fadc],ebx
  439b1a:	and    al,0x25
  439b1c:	push   cs
  439b1d:	dec    edi
  439b1e:	xor    ebx,DWORD PTR [ebp-0x40]
  439b21:	xchg   edi,eax
  439b22:	add    BYTE PTR [eax-0x53],dh
  439b25:	neg    DWORD PTR [eax+esi*2-0x53]
  439b29:	div    DWORD PTR [eax+0x76]
  439b2c:	ins    BYTE PTR es:[edi],dx
  439b2d:	adc    DWORD PTR [eax],edx
  439b2f:	sub    DWORD PTR [esi+0x11],esp
  439b32:	pop    ebp
  439b33:	or     eax,0x7383e06f
  439b38:	popa   
  439b39:	fld    DWORD PTR [eax]
  439b3b:	fs popf 
  439b3d:	idiv   DWORD PTR [ecx+edi*4]
  439b40:	sub    al,0x98
  439b42:	and    al,0xf9
  439b44:	xchg   ecx,eax
  439b45:	dec    esi
  439b46:	adc    ebx,DWORD PTR [ecx+0x75]
  439b49:	cdq    
  439b4a:	add    BYTE PTR [ecx+eiz*1-0x3b],ch
  439b4e:	jb     0x439ae7
  439b50:	push   edx
  439b51:	in     eax,0xe4
  439b53:	stc    
  439b54:	mov    eax,ds:0x85a5884b
  439b59:	out    dx,eax
  439b5a:	add    DWORD PTR [esp+ebp*4],0xffffffd7
  439b5e:	or     DWORD PTR [esi],0xffffffb5
  439b61:	shl    BYTE PTR [esi+0x0],cl
	...
  439b78:	jnp    0x439baa
  439b7a:	push   esp
  439b7b:	push   esi
  439b7c:	pop    esp
  439b7d:	in     eax,0xbc
  439b7f:	adc    BYTE PTR [ebx],cl
  439b81:	xlat   BYTE PTR ds:[ebx]
  439b82:	cmp    DWORD PTR [edi+eiz*1-0x1d],0x31ce0062
  439b8a:	sbb    eax,0xe20ab040
  439b8f:	in     eax,dx
  439b90:	psubq  mm6,mm6
  439b93:	mov    ebp,DWORD PTR [edi+0x41]
  439b96:	adc    DWORD PTR [edx+0x3b],ebp
  439b99:	sub    BYTE PTR [ecx-0x7b],ah
  439b9c:	or     edx,edi
  439b9e:	add    BYTE PTR [ebp-0x3b],dl
  439ba1:	and    DWORD PTR ds:0x14fbfb5c,ebx
  439ba7:	pusha  
  439ba8:	push   es
  439ba9:	pop    ss
  439baa:	stc    
  439bab:	jg     0x439c0c
  439bad:	inc    ecx
  439bae:	inc    ebp
  439baf:	add    BYTE PTR [esi+0x4a],dl
  439bb2:	arpl   WORD PTR [edx],ax
  439bb4:	xor    eax,0xfb030e6d
  439bb9:	(bad)  
  439bba:	push   ebx
  439bbb:	push   DWORD PTR [esi-0x34bff2de]
  439bc1:	daa    
  439bc2:	mov    WORD PTR [edi+eiz*4+0x16],ss
  439bc6:	or     bh,0x33
  439bc9:	(bad)  
  439bca:	cmc    
  439bcb:	call   FWORD PTR [edx+edi*8]
  439bce:	ins    DWORD PTR es:[edi],dx
  439bcf:	and    al,0xaf
  439bd1:	and    al,0xf6
  439bd3:	adc    eax,0x40e52f
  439bd8:	adc    BYTE PTR [ebp-0x7e],cl
  439bdb:	jl     0x439bdd
	...
  439bed:	add    BYTE PTR [eax],al
  439bef:	add    BYTE PTR [edi-0xf],ah
  439bf2:	sub    DWORD PTR [edi+eiz*2-0x23],0xe7675c38
  439bfa:	add    eax,0xd52985
  439bff:	add    BYTE PTR [eax],cl
  439c01:	mov    DWORD PTR ds:0xb8406220,ebx
  439c07:	or     esp,ecx
  439c09:	pop    esp
  439c0a:	loope  0x439c2f
  439c0c:	(bad)  
  439c0d:	cli    
  439c0e:	enter  0x7023,0x40
  439c12:	mov    cl,0x3
  439c14:	jmp    0x183b:0xb40de163
  439c1b:	in     al,0x72
  439c1d:	add    BYTE PTR ds:0xed4be80,al
  439c23:	add    bl,ch
  439c25:	sti    
  439c26:	call   0x97955246
  439c2b:	jmp    DWORD PTR [esp+ecx*1]
  439c2e:	jmp    0xe947b95a
  439c33:	daa    
  439c34:	lods   al,BYTE PTR ds:[esi]
  439c35:	sbb    DWORD PTR [eax],0xffffffbc
  439c38:	jb     0x439c3a
  439c3a:	add    eax,0xd1c56266
  439c3f:	and    esi,DWORD PTR [edx]
  439c41:	(bad)  
  439c42:	cmp    ah,bh
  439c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439c45:	fs sub bh,dl
  439c48:	js     0x439c8a
  439c4a:	shl    DWORD PTR [ebp+0x4e],cl
  439c4d:	in     eax,dx
  439c4e:	sub    DWORD PTR [edx+eax*2],edx
  439c51:	and    eax,0xffbd
	...
  439c66:	add    BYTE PTR [eax],al
  439c68:	int3   
  439c69:	sub    dh,BYTE PTR [bp+di-0x7a]
  439c6d:	sbb    al,0x6
  439c6f:	shl    BYTE PTR [edx],0x8a
  439c72:	jl     0x439cb7
  439c74:	xchg   BYTE PTR [eax],dh
  439c76:	sub    dl,BYTE PTR [esi+eax*1]
  439c79:	push   eax
  439c7a:	mov    ebp,0xe11c2dff
  439c7f:	or     eax,0x66148c62
  439c84:	bound  ecx,QWORD PTR [ebx]
  439c86:	mov    dl,0x23
  439c88:	dec    edx
  439c89:	add    esi,DWORD PTR [edx+0x2a623a23]
  439c8f:	adc    al,0xc6
  439c91:	fdiv   st,st(7)
  439c93:	ret    
  439c94:	jge    0x439c9c
  439c96:	sub    bl,dl
  439c98:	and    eax,0xe5d8e2bf
  439c9d:	xchg   esp,eax
  439c9e:	ret    
  439c9f:	iret   
  439ca0:	push   0xa21887e3
  439ca5:	fldenv [edi-0x51]
  439ca8:	adc    DWORD PTR [ebp-0x4ca74719],0xf0bdd5e3
  439cb2:	out    0x3,al
  439cb4:	bound  ebp,QWORD PTR [esi-0x1271e826]
  439cba:	daa    
  439cbb:	add    al,0x9d
  439cbd:	push   esi
  439cbe:	xor    ebp,eax
  439cc0:	jne    0x439d16
  439cc2:	mov    dl,0x1c
  439cc4:	aas    
  439cc5:	inc    ebp
  439cc6:	mov    edx,0xb2d97f2d
  439ccb:	test   DWORD PTR [eax],0x0
	...
  439cdd:	add    BYTE PTR [eax],al
  439cdf:	add    cl,bl
  439ce1:	mov    edx,0xef090423
  439ce6:	fist   WORD PTR [edx]
  439ce8:	mov    ds:0xf59190d9,al
  439ced:	dec    eax
  439cee:	out    0x35,eax
  439cf0:	lods   al,BYTE PTR ds:[esi]
  439cf1:	fst    QWORD PTR [ebx]
  439cf3:	mov    esp,0x7fc36de
  439cf8:	out    0x48,eax
  439cfa:	repz clc 
  439cfc:	aas    
  439cfd:	fstp   DWORD PTR [edx]
  439cff:	xlat   BYTE PTR ds:[ebx]
  439d00:	xor    ecx,DWORD PTR [eax-0x2c]
  439d03:	outs   dx,DWORD PTR ds:[esi]
  439d04:	push   ebp
  439d05:	cdq    
  439d06:	out    0x78,eax
  439d08:	sub    ebp,edi
  439d0a:	repz cdq 
  439d0c:	mov    ch,0x55
  439d0e:	mov    ebx,0x7f316de7
  439d13:	sub    DWORD PTR [eax+0x41c86e48],ebp
  439d19:	loope  0x439ce8
  439d1b:	std    
  439d1c:	xor    esi,DWORD PTR [ecx-0x269d2200]
  439d22:	add    BYTE PTR [ecx-0x2ab12ca],bl
  439d28:	mov    eax,ds:0x7dad8648
  439d2d:	in     al,dx
  439d2e:	sub    eax,0x5455a332
  439d33:	lds    esi,FWORD PTR [ebp-0x69]
  439d36:	call   0xf98728a8
  439d3b:	adc    bl,BYTE PTR [edx+ecx*2]
  439d3e:	mov    ebp,0x840215e1
  439d43:	cld    
	...
  439d58:	or     al,0xdc
  439d5a:	and    esi,0xfffffff5
  439d5d:	fisub  WORD PTR [esi-0x17]
  439d60:	push   cs
  439d61:	lods   eax,DWORD PTR ds:[esi]
  439d62:	push   edx
  439d63:	(bad)  
  439d64:	push   esp
  439d65:	test   DWORD PTR [eax],edx
  439d67:	sub    DWORD PTR [esi+0x60],ebx
  439d6a:	ins    BYTE PTR es:[edi],dx
  439d6b:	or     eax,0x6c00bf7a
  439d70:	sub    eax,0x4c6240fc
  439d75:	inc    eax
  439d76:	push   edi
  439d77:	mov    dl,0x36
  439d79:	inc    ebx
  439d7a:	test   DWORD PTR ds:0xe966f00a,ebp
  439d80:	sets   cl
  439d83:	cld    
  439d84:	aad    0xeb
  439d86:	inc    eax
  439d87:	jmp    0xedb72568
  439d8c:	shr    DWORD PTR [esi],cl
  439d8e:	in     eax,0xe6
  439d90:	pop    edx
  439d91:	adc    eax,0x2ed247e5
  439d96:	cmp    eax,0x28fc0d6e
  439d9b:	mov    edi,0xf9cced8e
  439da0:	mov    eax,ds:0x54565347
  439da5:	sbb    DWORD PTR [eax],edx
  439da7:	test   eax,0xbd5f61
  439dac:	xor    al,dl
  439dae:	cld    
  439daf:	call   DWORD PTR [esi+ecx*1+0x5]
  439db3:	shl    cl,0x1f
  439db6:	stc    
  439db7:	add    ebp,eax
  439db9:	rcl    BYTE PTR [ebp+0x24],0x0
	...
  439dcd:	add    BYTE PTR [eax],al
  439dcf:	add    BYTE PTR [ebx+0x2d],dh
  439dd2:	dec    esi
  439dd3:	mov    edx,edi
  439dd5:	aas    
  439dd6:	or     eax,0x70e3af74
  439ddb:	cwde   
  439ddc:	push   esp
  439ddd:	cmc    
  439dde:	jge    0x439da0
  439de0:	fild   WORD PTR [ecx+0x1dcfff84]
  439de6:	div    BYTE PTR ds:0x3d7bc7
  439dec:	xor    al,0xed
  439dee:	xor    al,0x11
  439df0:	mov    ebx,ebp
  439df2:	xor    eax,0x356e0bbe
  439df8:	push   eax
  439df9:	adc    edi,ebp
  439dfb:	je     0x439e48
  439dfd:	cmp    DWORD PTR [bp+si+0xb],ebp
  439e01:	sub    al,0xf6
  439e03:	adc    eax,0x40eb43
  439e08:	sbb    BYTE PTR [ebx],0x1
  439e0b:	mov    esp,edi
  439e0d:	(bad)  
  439e0e:	aas    
  439e0f:	sbb    al,0x88
  439e11:	cdq    
  439e12:	add    eax,0x62d93c89
  439e17:	adc    BYTE PTR [esi-0x79affae5],al
  439e1d:	sbb    al,BYTE PTR [ecx]
  439e1f:	push   eax
  439e20:	repz jns 0x439e63
  439e23:	call   DWORD PTR [esi+eax*8+0x3f]
  439e27:	or     ch,bh
  439e29:	(bad)  
  439e2b:	jmp    0xa6be:0xff4a2bc3
  439e32:	or     eax,0x40
	...
  439e47:	add    bl,cl
  439e49:	adc    edx,DWORD PTR [edi+0x5b]
  439e4c:	(bad)  {k7}{z}
  439e51:	cmp    eax,0x3026553d
  439e56:	stc    
  439e57:	push   ecx
  439e58:	jmp    0x164b77e9
  439e5d:	rcr    DWORD PTR [eax+eax*1],cl
  439e60:	jmp    0xb64:0xa28325f7
  439e67:	sti    
  439e68:	das    
  439e69:	mov    ah,0xa3
  439e6b:	inc    ebx
  439e6c:	(bad)  
  439e6d:	out    dx,eax
  439e6e:	sysenter 
  439e70:	push   ebx
  439e71:	jo     0x439e70
  439e73:	test   BYTE PTR [edx],ah
  439e75:	(bad)  
  439e76:	sti    
  439e77:	sar    BYTE PTR ss:[eax+esi*4],cl
  439e7b:	add    al,0x91
  439e7d:	lock (bad) 
  439e7f:	out    0x59,al
  439e81:	aaa    
  439e82:	test   eax,0x26066e23
  439e87:	adc    al,0xda
  439e89:	dec    ebx
  439e8a:	mov    ebp,0xf5728fff
  439e8f:	dec    DWORD PTR [esi+0x67f111bb]
  439e95:	jo     0x439e62
  439e97:	inc    ebx
  439e98:	bound  edi,QWORD PTR [edi+ecx*8]
  439e9b:	push   edx
  439e9c:	(bad)  [edi*8+0x67184d73]
  439ea3:	xchg   edx,eax
  439ea4:	std    
  439ea5:	jle    0x439f20
  439ea7:	mov    edi,0x3426166e
	...
  439ec0:	(bad)  
  439ec2:	sar    bh,0xe4
  439ec5:	dec    esp
  439ec6:	jmp    0x7a73c0db
  439ecb:	out    dx,eax
  439ecc:	(bad)  
  439ece:	test   eax,0xf94e891b
  439ed3:	je     0x439f42
  439ed5:	into   
  439ed6:	ror    BYTE PTR [edi],0xa2
  439ed9:	fcomp  st(3)
  439edb:	cld    
  439edc:	mov    eax,0x562aebcb
  439ee1:	and    eax,0x52a5c3f7
  439ee6:	mov    eax,ds:0xe8dea3fb
  439eeb:	push   ds
  439eec:	inc    si
  439eee:	mov    ah,0x13
  439ef0:	mov    ebx,ecx
  439ef2:	jecxz  0x439ec6
  439ef4:	mov    bl,ch
  439ef6:	jnp    0x439f07
  439ef8:	and    bl,cl
  439efa:	ret    0x16c9
  439efd:	sbb    ebp,ebx
  439eff:	add    esi,DWORD PTR [eax-0x25]
  439f02:	daa    
  439f03:	int    0x21
  439f05:	(bad)  
  439f07:	shl    esp,1
  439f09:	int    0xcb
  439f0b:	sti    
  439f0c:	sar    ebx,1
  439f0e:	pop    fs
  439f10:	lock inc esp
  439f12:	bnd jle 0x439f1a
  439f15:	into   
  439f16:	int3   
  439f17:	sub    dh,BYTE PTR [esi+0x55]
  439f1a:	dec    eax
  439f1b:	shl    BYTE PTR ds:0x52eff444,0x99
  439f22:	out    0x7e,eax
	...
  439f38:	in     eax,0xcd
  439f3a:	fsub   st(4),st
  439f3c:	(bad)  
  439f3d:	fnstsw WORD PTR [esp+edi*8]
  439f40:	and    ebx,edx
  439f42:	call   0xbf14ecc3
  439f47:	add    DWORD PTR [eax+0x56afd444],esi
  439f4d:	cdq    
  439f4e:	out    0xc9,eax
  439f50:	mov    bh,0xdd
  439f52:	out    0x31,eax
  439f54:	sbb    WORD PTR ds:0x31d8e5c0,bp
  439f5b:	jge    0x439fae
  439f5d:	std    
  439f5e:	out    dx,eax
  439f5f:	scas   eax,DWORD PTR es:[edi]
  439f60:	xor    DWORD PTR [ecx],0xffffffc2
  439f63:	nop
  439f64:	enter  0x44,0x6d
  439f68:	push   ds
  439f69:	enter  0x6e1b,0xcd
  439f6d:	push   eax
  439f6e:	pop    edi
  439f6f:	lods   eax,DWORD PTR ds:[esi]
  439f70:	popa   
  439f71:	inc    eax
  439f72:	adc    edx,DWORD PTR ds:0x6c009951
  439f78:	push   ds
  439f79:	enter  0x120b,0xd6
  439f7d:	fdiv   DWORD PTR [ebx-0xf]
  439f80:	and    eax,DWORD PTR [eax+eax*1+0x72]
  439f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439f85:	fsubr  st(5),st
  439f87:	out    dx,al
  439f88:	mov    bl,0x3f
  439f8a:	adc    ecx,DWORD PTR [ecx-0x38ff66ae]
  439f90:	pop    ds
  439f91:	fadd   DWORD PTR [eax]
  439f93:	pop    ss
  439f94:	ins    DWORD PTR es:[edi],dx
  439f95:	test   BYTE PTR [esi-0x53],dl
  439f98:	popa   
  439f99:	fst    QWORD PTR [edx+0x62]
	...
  439fb0:	adc    bh,al
  439fb2:	or     al,0x7d
  439fb4:	ds cmp al,0xe8
  439fb7:	push   edi
  439fb8:	jnp    0x439ff9
  439fba:	test   BYTE PTR [ecx],ch
  439fbc:	adc    ch,dh
  439fbe:	stc    
  439fbf:	mov    ah,0xb5
  439fc1:	mov    ecx,0xed8ae944
  439fc6:	xor    al,0xf8
  439fc8:	and    DWORD PTR [esp+eax*4-0x57],eax
  439fcc:	cmc    
  439fcd:	fnsave ds:0x3cd1e59
  439fd3:	cli    
  439fd4:	mov    eax,ds:0x33f2e604
  439fd9:	aas    
  439fda:	je     0x439fe9
  439fdc:	or     bh,BYTE PTR [edi]
  439fde:	adc    edx,DWORD PTR [ecx]
  439fe0:	push   edx
  439fe1:	cdq    
  439fe2:	add    BYTE PTR [edi-0x64],al
  439fe5:	fadd   QWORD PTR [eax]
  439fe7:	xor    al,0x6f
  439fe9:	xor    dl,dh
  439feb:	in     al,dx
  439fec:	mov    eax,ds:0xdde944ae
  439ff1:	xchg   edx,eax
  439ff2:	test   DWORD PTR [eax],eax
  439ff4:	jle    0x43a03b
  439ff6:	dec    esi
  439ff7:	je     0x439fc4
  439ff9:	fbld   TBYTE PTR [esi+edx*4-0x3f820eb4]
  43a000:	mov    bh,0x78
  43a002:	div    BYTE PTR ds:0x3d772f
  43a008:	or     al,0xd3
  43a00a:	xor    al,0x11
  43a00c:	sti    
  43a00d:	xlat   BYTE PTR ds:[ebx]
  43a00e:	cmp    eax,0x556df106
	...
  43a028:	pusha  
  43a029:	adc    bh,ch
  43a02b:	je     0x43a018
  43a02d:	pop    esp
  43a02e:	jl     0x43a03c
  43a030:	jnp    0x43a0a5
  43a032:	push   es
  43a033:	push   0xffffff9b
  43a035:	retf   0xc3e
  43a038:	mov    ebx,0xab0c44ca
  43a03d:	fbld   TBYTE PTR [esi+0x7af14c3f]
  43a043:	jge    0x43a0a0
  43a045:	xlat   BYTE PTR ds:[ebx]
  43a046:	je     0x43a075
  43a048:	cmc    
  43a049:	icebp  
  43a04a:	outs   dx,BYTE PTR ds:[esi]
  43a04b:	or     BYTE PTR [ebp+edx*8-0x1c],cl
  43a04f:	adc    bl,bh
  43a051:	(bad)  
  43a052:	bound  eax,QWORD PTR [eax]
  43a054:	dec    esp
  43a055:	jae    0x43a058
  43a057:	mov    ebx,DWORD PTR [ebx]
  43a059:	pusha  
  43a05a:	or     eax,0x60e90c53
  43a05f:	adc    eax,0xd8eddd7b
  43a064:	adc    BYTE PTR [edi+0x4554ff4f],dl
  43a06a:	cmp    DWORD PTR [ecx+0x15f5d144],ecx
  43a070:	fucomip st,st(5)
  43a072:	inc    eax
  43a073:	add    BYTE PTR [ebp+0x46],ch
  43a076:	mov    ecx,0x40de04c6
  43a07b:	jmp    0x43a07b
  43a07d:	sti    
  43a07e:	je     0x43a090
  43a080:	bound  ebp,QWORD PTR [ebx-0x51]
  43a083:	or     esi,DWORD PTR [ecx]
  43a085:	push   ebx
  43a086:	push   gs
  43a088:	outs   dx,BYTE PTR ds:[esi]
  43a089:	lock add al,0x5b
	...
  43a0a0:	sub    ebp,esp
  43a0a2:	or     esp,DWORD PTR ds:[edx-0x1b]
  43a0a6:	jne    0x43a093
  43a0a8:	mov    ah,0x3d
  43a0aa:	cmp    eax,0xf9301e55
  43a0af:	dec    esi
  43a0b0:	fld    DWORD PTR [ebp+0x202e52f5]
  43a0b6:	adc    eax,0x2193f410
  43a0bb:	and    DWORD PTR [edx+0x57fa9a84],0xffffffb4
  43a0c2:	mov    ds:0x100b6243,eax
  43a0c7:	xor    al,0x53
  43a0c9:	jo     0x43a0c8
  43a0cb:	xchg   BYTE PTR [edx-0x4b],bh
  43a0ce:	and    DWORD PTR [ebx+0x17],esi
  43a0d1:	aaa    
  43a0d2:	ret    0xef03
  43a0d5:	jg     0x43a0f9
  43a0d7:	jb     0x43a153
  43a0d9:	shr    DWORD PTR [ecx+0xdc35513],cl
  43a0df:	sti    
  43a0e0:	aad    0x34
  43a0e2:	and    dh,BYTE PTR [esi+edx*2+0x4b]
  43a0e6:	adc    BYTE PTR [edx+edx*2-0x48810290],dh
  43a0ed:	inc    eax
  43a0ee:	std    
  43a0ef:	jae    0x43a170
  43a0f1:	or     ah,BYTE PTR [edx]
  43a0f3:	jb     0x43a14f
  43a0f5:	sub    edx,DWORD PTR [eax]
  43a0f7:	in     al,0x72
  43a0f9:	lock add al,0x66
  43a0fc:	bound  ebx,QWORD PTR [ebx]
  43a0fe:	stos   BYTE PTR es:[edi],al
  43a0ff:	pop    es
  43a100:	fnstcw WORD PTR [edi-0x69]
  43a103:	adc    eax,DWORD PTR [eax]
	...
  43a115:	add    BYTE PTR [eax],al
  43a117:	add    BYTE PTR [ecx+0x5760108b],dh
  43a11d:	lock add al,0xf3
  43a120:	sbb    bl,cl
  43a122:	inc    BYTE PTR [ebx-0x6d]
  43a125:	inc    edx
  43a126:	adc    bh,ah
  43a128:	and    eax,0xd9082a50
  43a12d:	jmp    0x43a16a
  43a12f:	adc    esp,DWORD PTR [edx]
  43a131:	fldenv [ecx]
  43a133:	call   0x2e2a:0x4e21bcf
  43a13a:	in     al,0x26
  43a13c:	ss jmp 0xa6ad51ac
  43a142:	bound  edx,QWORD PTR [eax]
  43a144:	into   
  43a145:	in     al,dx
  43a146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a147:	add    ecx,DWORD PTR [ecx]
  43a149:	sahf   
  43a14a:	mov    ah,0x41
  43a14c:	imul   ebx,ecx,0xdc7d1768
  43a152:	out    0x3,eax
  43a154:	aaa    
  43a155:	stos   DWORD PTR es:[edi],eax
  43a156:	xchg   edx,eax
  43a157:	jp     0x43a0e3
  43a159:	add    eax,0x58e07a21
  43a15e:	call   0x27a00366
  43a163:	scas   eax,DWORD PTR es:[edi]
  43a164:	pop    esp
  43a165:	test   al,0xb7
  43a167:	es dec esi
  43a169:	pop    ebp
  43a16a:	cmc    
  43a16b:	ret    
  43a16c:	pop    ebp
  43a16d:	(bad)  
  43a16e:	in     eax,0x4
  43a170:	(bad)  
  43a171:	fptan  
  43a173:	jg     0x43a0f5
  43a175:	(bad)  
  43a177:	add    edx,edi
  43a179:	mov    BYTE PTR [ebx+0x4],dh
	...
  43a190:	(bad)  
  43a191:	fstp   DWORD PTR [esi+0x35]
  43a194:	cmp    eax,0x2826e0e7
  43a199:	dec    edi
  43a19a:	imul   esp,eax,0x27
  43a19d:	fsubr  st(7),st
  43a19f:	add    ecx,DWORD PTR [edx]
  43a1a1:	jl     0x43a1cf
  43a1a3:	sbb    BYTE PTR es:[edi-0x71],cl
  43a1a7:	xchg   edx,eax
  43a1a8:	(bad)  
  43a1a9:	(bad)  
  43a1ab:	js     0x43a1c3
  43a1ad:	xor    al,BYTE PTR [eax]
  43a1af:	add    al,0x4b
  43a1b1:	cmp    eax,0xc89e64f9
  43a1b6:	inc    edi
  43a1b7:	adc    edx,DWORD PTR [edx+0x4e]
  43a1ba:	dec    esp
  43a1bb:	lds    eax,FWORD PTR ds:0xd33c50aa
  43a1c1:	adc    BYTE PTR [eax+0x39],0x7f
  43a1c5:	in     eax,0x84
  43a1c7:	fsub   DWORD PTR [ecx-0x3567bc0]
  43a1cd:	out    dx,al
  43a1ce:	sub    eax,0x4d01dca0
  43a1d3:	and    eax,0x6a06c55c
  43a1d8:	jle    0x43a1c6
  43a1da:	jnp    0x43a1e1
  43a1dc:	les    edx,FWORD PTR [ecx+0x4c]
  43a1df:	lods   eax,DWORD PTR ds:[esi]
  43a1e0:	or     DWORD PTR [ebp+0x44],0xb6907e05
  43a1e7:	in     eax,dx
  43a1e8:	call   0xfcfc:0xa6c009c
  43a1ef:	jmp    0x712c7b55
	...
  43a208:	cmovae edi,ecx
  43a20b:	ins    BYTE PTR es:[edi],dx
  43a20c:	rcl    DWORD PTR es:[ebx+0x7380e229],cl
  43a213:	jecxz  0x43a267
  43a215:	and    BYTE PTR [edx+0x60],0xe2
  43a219:	sti    
  43a21a:	clc    
  43a21b:	jmp    0xffb7b81
  43a220:	popa   
  43a221:	fld    DWORD PTR [eax]
  43a223:	fs loop 0x43a221
  43a226:	(bad)  
  43a227:	jmp    0xbb717b8d
  43a22c:	test   eax,0xf53040d0
  43a231:	inc    ebp
  43a232:	dec    esi
  43a233:	fs in  eax,dx
  43a235:	sti    
  43a236:	xchg   esp,eax
  43a237:	jmp    0xfb7b9d
  43a23c:	xchg   esi,eax
  43a23d:	sub    DWORD PTR [esi],0x29
  43a240:	xor    ebx,DWORD PTR [eax]
  43a242:	mov    bh,bh
  43a244:	mov    ah,0x48
  43a246:	enter  0x3f6a,0x18
  43a24a:	push   esp
  43a24b:	push   ecx
  43a24c:	jbe    0x43a1ce
  43a24e:	sbb    eax,0x14f62b50
  43a253:	pop    eax
  43a254:	fstp   QWORD PTR [ebx]
  43a256:	stc    
  43a257:	cmp    bh,0x47
  43a25a:	div    BYTE PTR [edi-0x29]
  43a25d:	(bad)  
  43a25e:	jge    0x43a284
  43a260:	das    
  43a261:	fadd   QWORD PTR [eax]
  43a263:	add    BYTE PTR [edx+0x68],al
  43a266:	sbb    eax,0x1d80424c
  43a26b:	push   esp
	...
  43a280:	inc    esp
  43a281:	iret   
  43a282:	rcl    BYTE PTR [ecx],0xfb
  43a285:	fisttp DWORD PTR [ebx+0x50e56f44]
  43a28b:	lea    edi,[edi-0x77afbae1]
  43a291:	out    0x54,al
  43a293:	mov    edx,0x3969ff
  43a298:	push   es
  43a299:	enter  0x41d,0x8a
  43a29d:	fild   DWORD PTR [eax]
  43a29f:	call   0x3b90c7
  43a2a4:	(bad)  
  43a2a5:	fwait
  43a2a6:	je     0x43a2ac
  43a2a8:	cmp    DWORD PTR [ebx-0x151ecc1e],ebx
  43a2ae:	mov    eax,DWORD PTR [edi+ebx*1-0x31]
  43a2b2:	push   eax
  43a2b3:	push   esi
  43a2b4:	jae    0x43a270
  43a2b6:	cmp    al,0xff
  43a2b8:	xor    al,0x64
  43a2ba:	loope  0x43a2bf
  43a2bc:	dec    ebx
  43a2bd:	fcomi  st,st(5)
  43a2bf:	ja     0x43a2f8
  43a2c1:	cld    
  43a2c2:	adc    al,0x84
  43a2c4:	sub    DWORD PTR [ebx],ebx
  43a2c6:	stc    
  43a2c7:	test   BYTE PTR [edx+0x70],ah
  43a2ca:	cwde   
  43a2cb:	or     eax,0xfad60faf
  43a2d0:	ja     0x43a33e
  43a2d2:	repz aas 
  43a2d4:	(bad)  
  43a2d5:	retf   
  43a2d6:	dec    esi
  43a2d7:	out    0xff,eax
  43a2d9:	jg     0x43a2f9
  43a2db:	cli    
  43a2dc:	or     DWORD PTR [esp+edx*2+0x0],edi
  43a2e0:	lea    edx,[esi+0x80bf]
	...
  43a2f6:	add    BYTE PTR [eax],al
  43a2f8:	push   ds
  43a2f9:	imul   ecx,DWORD PTR [eax],0xb7736200
  43a2ff:	xchg   dh,al
  43a301:	mov    bl,0x28
  43a303:	mul    ecx
  43a305:	add    BYTE PTR fs:[edi+0x38],cl
  43a309:	xor    DWORD PTR [esi],ebx
  43a30b:	adc    al,0x2e
  43a30d:	and    DWORD PTR [ebp-0x850da01],edi
  43a313:	dec    edi
  43a314:	push   ebx
  43a315:	jo     0x43a314
  43a317:	cli    
  43a318:	outs   dx,DWORD PTR ds:[esi]
  43a319:	les    esp,FWORD PTR [ebx-0x8589dbd]
  43a31f:	shl    DWORD PTR [eax+0x70],cl
  43a322:	std    
  43a323:	cs test eax,0x9b84caab
  43a329:	test   BYTE PTR [ecx+0xccc2686],bh
  43a32f:	aaa    
  43a330:	pop    edi
  43a331:	mov    al,ds:0x5d6243a3
  43a336:	fstp   TBYTE PTR [esi-0x1a]
  43a339:	adc    ecx,DWORD PTR [ecx]
  43a33b:	cld    
  43a33c:	xlat   BYTE PTR ds:[ebx]
  43a33d:	and    esp,DWORD PTR [edi+edx*4-0x3d]
  43a341:	je     0x43a340
  43a343:	xchg   BYTE PTR [esi+0x6365ed0c],dh
  43a349:	xor    eax,0x306200f1
  43a34e:	lods   eax,DWORD PTR ds:[esi]
  43a34f:	mov    eax,0xffc150ea
  43a354:	inc    ebp
  43a355:	fnstcw WORD PTR [edx]
  43a357:	sbb    ebp,DWORD PTR [eax]
  43a359:	outs   dx,BYTE PTR ds:[esi]
  43a35b:	adc    BYTE PTR [eax],al
	...
  43a36d:	add    BYTE PTR [eax],al
  43a36f:	add    dl,bh
  43a371:	mov    bh,0x2b
  43a373:	add    al,0xea
  43a375:	push   edi
  43a376:	add    eax,DWORD PTR ds:0xd8c2d962
  43a37c:	icebp  
  43a37d:	mov    bh,0x23
  43a37f:	add    al,0xf9
  43a381:	jecxz  0x43a31e
  43a383:	cmc    
  43a384:	xor    eax,0x87b716d9
  43a389:	ds je  0x43a353
  43a38c:	inc    ecx
  43a38d:	jmp    0xd9b9c6c9
  43a392:	cld    
  43a393:	ret    
  43a394:	aad    0x52
  43a396:	lahf   
  43a397:	xchg   dl,cl
  43a399:	cmp    eax,0x197463fc
  43a39e:	fs dec esp
  43a3a0:	push   0xdcbea765
  43a3a5:	xor    ecx,DWORD PTR [edi+eax*2]
  43a3a8:	loop   0x43a3d6
  43a3aa:	imul   eax,DWORD PTR [ebx],0x62
  43a3ad:	fnstenv [esi+0x5ea633b8]
  43a3b3:	adc    eax,0x515e3fdc
  43a3b8:	test   DWORD PTR [ecx-0x3277dd9e],esp
  43a3be:	jb     0x43a403
  43a3c0:	jmp    0xdad7:0xbdf80b94
  43a3c7:	mov    BYTE PTR [esi],bl
  43a3c9:	fsub   st,st(7)
  43a3cb:	add    edx,edi
  43a3cd:	xchg   esp,eax
  43a3ce:	ret    
  43a3cf:	rep lods eax,DWORD PTR ds:[esi]
  43a3d1:	mov    ds:0xf812,eax
	...
  43a3e6:	add    BYTE PTR [eax],al
  43a3e8:	leave  
  43a3e9:	out    0xa7,al
  43a3eb:	add    esp,edi
  43a3ed:	sbb    DWORD PTR [ebx-0x16],edi
  43a3f0:	fsub   QWORD PTR [ebx+ebp*4+0x4e3fad]
  43a3f7:	scas   al,BYTE PTR es:[edi]
  43a3f8:	icebp  
  43a3f9:	mov    WORD PTR [ebx+0x50ed45a5],cs
  43a3ff:	out    0xca,al
  43a401:	clc    
  43a402:	sbb    al,0x6c
  43a404:	xor    eax,DWORD PTR [ecx]
  43a406:	jmp    0xf984073a
  43a40b:	pop    esp
  43a40c:	xor    bh,cl
  43a40e:	sub    cl,dl
  43a410:	inc    ecx
  43a411:	cmp    bh,dl
  43a413:	mov    esi,0xebe524ec
  43a418:	(bad)  
  43a41a:	test   DWORD PTR [ebp-0x6],edi
  43a41d:	fs add cl,ch
  43a420:	popa   
  43a421:	push   ebp
  43a422:	aad    0x15
  43a424:	lods   eax,DWORD PTR ds:[esi]
  43a425:	dec    edx
  43a426:	inc    esp
  43a427:	int    0xcd
  43a429:	int3   
  43a42a:	jae    0x43a453
  43a42c:	add    edi,0xc
  43a42f:	xchg   ch,cl
  43a431:	jl     0x43a442
  43a433:	sub    DWORD PTR [esi-0x30],esp
  43a436:	mov    cl,0x24
  43a438:	push   edx
  43a439:	shl    BYTE PTR [ecx-0x20e5a1dc],1
  43a43f:	stc    
  43a440:	push   esi
  43a441:	adc    DWORD PTR [ecx],ecx
  43a443:	xchg   esi,eax
  43a444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a445:	cmp    al,0x50
  43a447:	out    0x3a,al
  43a449:	lea    eax,[eax+ebp*1]
	...
  43a460:	inc    ecx
  43a461:	int3   
  43a462:	add    eax,0x713fd131
  43a467:	icebp  
  43a468:	mov    ebx,0x6ce1133f
  43a46d:	cld    
  43a46e:	add    BYTE PTR [esi+eiz*1-0x38],ah
  43a472:	or     eax,0x713fbd93
  43a477:	in     eax,dx
  43a478:	and    ch,0x84
  43a47b:	sti    
  43a47c:	and    DWORD PTR [esp+eax*4],edi
  43a47f:	sub    DWORD PTR [ebx+0x55],esi
  43a482:	mov    esp,0xd83b00
  43a487:	mov    ecx,DWORD PTR [ebp+ebp*8-0x6d302b5]
  43a48e:	jge    0x43a450
  43a490:	mov    bh,0x6f
  43a492:	add    BYTE PTR [edi+0x2b],0x6e
  43a496:	or     DWORD PTR [ebp+0x6],edx
  43a499:	inc    esp
  43a49a:	add    BYTE PTR [eax],al
  43a49c:	or     ecx,DWORD PTR [eax-0x5a0f51f]
  43a4a2:	idiv   bh
  43a4a4:	inc    esp
  43a4a5:	jmp    0x470eba9f
  43a4aa:	cmp    DWORD PTR [eax],eax
  43a4ac:	push   ebp
  43a4ad:	imul   esi,ebp,0xffffffff
  43a4b0:	xor    al,0xcd
  43a4b2:	cmc    
  43a4b3:	mov    bh,0x73
  43a4b5:	xlat   BYTE PTR ds:[ebx]
  43a4b6:	add    BYTE PTR [eax],al
  43a4b8:	cld    
  43a4b9:	inc    edx
  43a4ba:	xor    DWORD PTR [ebx+ecx*4],edx
  43a4bd:	aad    0x83
  43a4bf:	shl    BYTE PTR [edi+0x20],0x61
  43a4c3:	call   0x43a4c8
	...
  43a4d8:	mov    eax,0xb4ff00d7
  43a4dd:	retf   
  43a4de:	cmc    
  43a4df:	adc    eax,0x394647
  43a4e4:	inc    esi
  43a4e5:	cwde   
  43a4e6:	je     0x43a4f8
  43a4e8:	xor    BYTE PTR [ecx],dl
  43a4ea:	or     DWORD PTR [eax+0x33c3],eax
  43a4f0:	mov    edx,esi
  43a4f2:	jae    0x43a50f
  43a4f4:	add    DWORD PTR [ebp-0x5ef19e1e],edx
  43a4fa:	jne    0x43a4fd
  43a4fc:	mov    edx,edi
  43a4fe:	bound  eax,QWORD PTR [eax]
  43a500:	sub    al,0x22
  43a502:	not    BYTE PTR ds:0x394747
  43a508:	lock test eax,0xf87531e1
  43a50e:	test   BYTE PTR [ebx-0x641e539e],0x62
  43a515:	xor    ch,bh
  43a517:	repnz mov ds:0x62fffd0c,al
  43a51d:	jo     0x43a4b1
  43a51f:	aaa    
  43a520:	(bad)  
  43a521:	scas   eax,DWORD PTR es:[edi]
  43a522:	cmp    eax,0xc19d9203
  43a527:	and    eax,DWORD PTR [edx-0x11ebe600]
  43a52d:	inc    esp
  43a52e:	mov    ebp,0xe8ece6ff
  43a533:	pop    ss
  43a534:	js     0x43a568
  43a536:	lods   eax,DWORD PTR ds:[esi]
  43a537:	cli    
  43a538:	int    0xdc
  43a53a:	add    eax,DWORD PTR [eax]
	...
  43a550:	bound  edi,QWORD PTR [ebx-0x9]
  43a553:	or     DWORD PTR [esi-0x10],0x4
  43a557:	lea    esp,[esi+0x5565fcd4]
  43a55d:	out    0x6,al
  43a55f:	push   eax
  43a560:	frstor [ebx+0x306200b8]
  43a566:	sbb    dl,BYTE PTR [esi+ecx*2]
  43a569:	inc    ebp
  43a56a:	mov    ebp,0xba31f5ff
  43a56f:	pop    ecx
  43a570:	pop    ds
  43a571:	test   DWORD PTR [ebx-0x2cf213d],0xfd38a0ff
  43a57b:	push   esp
  43a57c:	fldenv [ebp+edi*2+0x30af9ae3]
  43a583:	sbb    esi,DWORD PTR [ecx]
  43a585:	jp     0x43a50d
  43a587:	in     eax,dx
  43a588:	xor    eax,0xd913c2b7
  43a58d:	stc    
  43a58e:	inc    ecx
  43a58f:	(bad)  
  43a590:	cmp    DWORD PTR [eax],esi
  43a592:	std    
  43a593:	push   DWORD PTR [ebp+0x7a]
  43a596:	icebp  
  43a597:	dec    esi
  43a598:	ins    DWORD PTR es:[edi],dx
  43a599:	and    eax,0xd92214ed
  43a59e:	out    0x88,eax
  43a5a0:	sbb    eax,0x557d63ca
  43a5a5:	cmp    ah,bh
  43a5a7:	mov    ah,BYTE PTR [ebx-0x7e3bed1b]
  43a5ad:	(bad)  
  43a5af:	add    esp,DWORD PTR [edx+0x90e4c5]
	...
  43a5c5:	add    BYTE PTR [eax],al
  43a5c7:	add    BYTE PTR [ebx-0x1af7012b],bh
  43a5cd:	cli    
  43a5ce:	inc    di
  43a5d0:	add    DWORD PTR [edx+0x27],0xe73a1de8
  43a5d7:	repz xchg ecx,eax
  43a5d9:	xchg   ebp,eax
  43a5da:	cmp    al,BYTE PTR [ebx-0x6ec81b33]
  43a5e0:	mov    eax,ds:0xf8b3e3f5
  43a5e5:	jecxz  0x43a652
  43a5e7:	div    DWORD PTR ds:0x58436cd9
  43a5ed:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  43a5ef:	xchg   DWORD PTR [ebp+0x238ad8c3],esp
  43a5f5:	in     eax,0x66
  43a5f7:	inc    ebx
  43a5f8:	jno    0x43a5a3
  43a5fa:	xchg   edx,eax
  43a5fb:	clc    
  43a5fc:	cmp    eax,0xdf0427e4
  43a601:	sbb    bl,bh
  43a603:	mov    bl,0xe4
  43a605:	xchg   edx,eax
  43a606:	shl    DWORD PTR [esi-0x4c14e6cc],cl
  43a60c:	ficom  WORD PTR [ebx+eax*8-0x3c5ea01]
  43a613:	(bad)  
  43a614:	jno    0x43a5af
  43a616:	out    0x88,eax
  43a618:	aad    0xc9
  43a61a:	jl     0x43a65f
  43a61c:	test   dh,dl
  43a61e:	adc    eax,0xbb18e144
  43a623:	sar    DWORD PTR [eax-0x3e],cl
  43a626:	ror    DWORD PTR [edx+0x6200a26b],cl
	...
  43a640:	xor    BYTE PTR [edx],dh
  43a642:	fldcw  WORD PTR [esp+eax*2]
  43a645:	aas    
  43a646:	test   edi,ebp
  43a648:	out    dx,al
  43a649:	pushf  
  43a64a:	and    al,0xf9
  43a64c:	call   0xdefdbaeb
  43a651:	pushf  
  43a652:	and    al,0xc1
  43a654:	fs int 0xb0
  43a657:	frstor [ecx]
  43a659:	cmp    DWORD PTR [ecx+ebp*1+0x1985dfcd],eax
  43a660:	shl    BYTE PTR [esp-0x33878627],cl
  43a667:	out    0x7f,al
  43a669:	xchg   ebx,eax
  43a66a:	pop    edx
  43a66b:	cdq    
  43a66c:	popa   
  43a66d:	nop
  43a66e:	test   esp,ecx
  43a670:	int    0x77
  43a672:	push   ebx
  43a673:	bound  edx,QWORD PTR [edx-0x49]
  43a676:	in     al,dx
  43a677:	fldlg2 
  43a679:	popf   
  43a67a:	lock sbb DWORD PTR [edi-0x33],edx
  43a67e:	lock (bad) [ecx]
  43a681:	cmp    DWORD PTR [esp+ebx*1-0x1701bfb2],ecx
  43a688:	popa   
  43a689:	fld    st(7)
  43a68b:	stos   BYTE PTR es:[edi],al
  43a68c:	or     eax,0x1138ec60
  43a691:	inc    bx
  43a693:	xchg   ecx,eax
  43a694:	push   cs
  43a695:	mov    bh,cl
  43a697:	fsubr  QWORD PTR [ecx]
  43a699:	leave  
  43a69a:	inc    eax
  43a69b:	jmp    0x633c4c8a
  43a6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a6a1:	xor    al,0x66
  43a6a3:	jmp    0x43a6a8
	...
  43a6b8:	loopne 0x43a6d3
  43a6ba:	add    BYTE PTR [ecx+0x21],ch
  43a6bd:	(bad)  
  43a6be:	push   0x500c69
  43a6c3:	cld    
  43a6c4:	and    BYTE PTR [edx-0x7631b0a2],0xe8
  43a6cb:	add    BYTE PTR [edi-0x37],ch
  43a6ce:	(bad)  
  43a6cf:	push   DWORD PTR [edx]
  43a6d1:	call   0xf5f9:0x2d3901a9
  43a6d8:	mov    edi,0x1d00fd40
  43a6dd:	popa   
  43a6de:	lock (bad) 
  43a6e0:	cmp    eax,0x3b408b98
  43a6e5:	push   eax
  43a6e6:	add    al,0xe8
  43a6e8:	inc    ebp
  43a6e9:	adc    esi,esi
  43a6eb:	push   DWORD PTR [eax+0x3fc2579f]
  43a6f1:	fdivr  QWORD PTR [ebp+0xdacb41]
  43a6f7:	add    BYTE PTR [ebx],bh
  43a6f9:	mov    WORD PTR [eax],es
  43a6fb:	ret    
  43a6fc:	add    al,0x1b
  43a6fe:	popa   
  43a6ff:	mov    al,0xa
  43a701:	cdq    
  43a702:	dec    edi
  43a703:	mov    ebp,DWORD PTR [edx]
  43a705:	pop    ecx
  43a706:	ja     0x43a758
  43a708:	clc    
  43a709:	dec    esi
  43a70a:	adc    ebp,DWORD PTR [edx+0x9]
  43a70d:	addr16 inc edi
  43a70f:	push   esp
  43a710:	xchg   ebx,eax
  43a711:	adc    DWORD PTR [ecx+0x70d4fb40],eax
  43a717:	add    al,0x23
  43a719:	xchg   ebp,eax
  43a71a:	out    0xff,al
	...
  43a730:	add    al,0x5f
  43a732:	mov    ecx,0xb909bf75
  43a737:	pop    esi
  43a738:	clc    
  43a739:	pusha  
  43a73a:	mov    edi,0xfffd6d7d
  43a740:	retf   
  43a741:	fucomi st,st(0)
  43a743:	xor    BYTE PTR [edi],dl
  43a745:	aad    0xf6
  43a747:	mov    al,0xba
  43a749:	jne    0x43a705
  43a74b:	push   ebx
  43a74c:	dec    ebp
  43a74d:	(bad)  
  43a74e:	lock push edi
  43a750:	adc    BYTE PTR [esi],bl
  43a752:	dec    ecx
  43a753:	mov    esi,DWORD PTR [edi+0x6248093f]
  43a759:	push   ss
  43a75a:	loop   0x43a7c1
  43a75c:	pusha  
  43a75d:	imul   ebp,eax,0xffffffbe
  43a760:	test   esp,0x4e248caf
  43a766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a767:	xor    ebx,edx
  43a769:	cmp    ebp,0x253df3fa
  43a76f:	jns    0x43a7be
  43a771:	add    BYTE PTR ds:0x14e2284,bl
  43a777:	cs and bl,ah
  43a77a:	in     al,0x88
  43a77c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a77d:	jo     0x43a7a7
  43a77f:	or     ch,bl
  43a781:	pop    esi
  43a782:	mov    eax,ds:0xff509cc2
  43a787:	jmp    DWORD PTR [edx+0x40]
  43a78a:	and    eax,0x1547c9e8
  43a78f:	cli    
  43a790:	xchg   esi,eax
  43a791:	in     al,0xf0
  43a793:	mov    WORD PTR [eax],es
	...
  43a7a5:	add    BYTE PTR [eax],al
  43a7a7:	add    BYTE PTR [esp+ebp*8+0x1fa0e7ad],ah
  43a7ae:	adc    eax,0xf9690dfa
  43a7b3:	mov    edi,0x59b578f5
  43a7b8:	cdq    
  43a7b9:	or     BYTE PTR [eax+eax*1],0x94
  43a7bd:	mov    ebx,0xd09c8613
  43a7c2:	int3   
  43a7c3:	inc    edi
  43a7c4:	push   edi
  43a7c5:	and    DWORD PTR [ebx-0x4ef91903],ebp
  43a7cb:	fidiv  WORD PTR [bp+si-0x3c]
  43a7d0:	(bad)  
  43a7d1:	rol    DWORD PTR [eax],1
  43a7d3:	call   0xfa58f767
  43a7d8:	fild   WORD PTR [eax-0x7f8ffc71]
  43a7de:	sub    DWORD PTR [ebx*4-0x62014b02],ebx
  43a7e5:	(bad)  
  43a7e7:	add    ebx,DWORD PTR [ecx-0x20f7fc53]
  43a7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a7ee:	mov    ebx,0xdbfd111a
  43a7f3:	sub    esi,DWORD PTR [edi+eax*2+0x42]
  43a7f7:	sbb    esi,DWORD PTR [eax+0x11]
  43a7fa:	fiadd  WORD PTR [ebx+0x70]
  43a7fd:	adc    DWORD PTR [ecx-0x6e26a2bb],edx
  43a803:	sbb    dl,cl
  43a805:	std    
  43a806:	out    dx,eax
  43a807:	mov    ss,WORD PTR [edx+0x41]
  43a80a:	pop    ss
  43a80b:	jle    0x43a80d
	...
  43a81d:	add    BYTE PTR [eax],al
  43a81f:	add    BYTE PTR [eax+0x36],cl
  43a822:	jg     0x43a827
  43a824:	inc    esp
  43a825:	ss out 0x88,eax
  43a828:	stos   DWORD PTR es:[edi],eax
  43a829:	lea    ebp,[edx]
  43a82b:	add    cl,dh
  43a82d:	dec    edx
  43a82e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a82f:	add    edi,DWORD PTR [edx]
  43a831:	dec    ecx
  43a832:	add    DWORD PTR [ebx],ebx
  43a834:	sub    BYTE PTR [edx-0x7f],bl
  43a837:	stos   DWORD PTR es:[edi],eax
  43a838:	sbb    eax,0x5eb4291f
  43a83d:	(bad)  
  43a83f:	add    esp,ebp
  43a841:	push   ds
  43a842:	xor    DWORD PTR [esi+0x61],eax
  43a845:	fnstenv [ecx]
  43a847:	(bad)  
  43a848:	repnz inc eax
  43a84a:	fild   DWORD PTR [ebx]
  43a84c:	(bad)  
  43a84d:	fnstenv [ecx-0x171ebe41]
  43a853:	(bad)  
  43a854:	pusha  
  43a855:	bound  ebx,QWORD PTR [ecx-0x5d0ee6d5]
  43a85b:	sbb    bl,ah
  43a85d:	push   ds
  43a85e:	cmp    DWORD PTR [esi+0x61],eax
  43a861:	fnstcw WORD PTR [ecx]
  43a863:	(bad)  
  43a864:	shl    BYTE PTR [ecx+0x19],cl
  43a867:	mov    al,0xa0
  43a869:	ficomp WORD PTR [ebx+0x75]
  43a86c:	jne    0x43a847
  43a86e:	(bad)  
  43a86f:	pusha  
  43a870:	jne    0x43a8a8
  43a872:	add    BYTE PTR [esi+0x20],dh
  43a875:	fsubr  DWORD PTR [eax+0x5e]
  43a878:	mov    eax,ds:0xd22a5b35
  43a87d:	pop    esi
  43a87e:	in     al,dx
  43a87f:	push   0x45
  43a881:	retf   0xbe52
	...
  43a898:	aam    0xb4
  43a89a:	or     BYTE PTR [edx+0x56],ah
  43a89d:	mov    bh,0x79
  43a89f:	icebp  
  43a8a0:	popa   
  43a8a1:	lods   al,BYTE PTR ds:[esi]
  43a8a2:	inc    ebp
  43a8a3:	push   0xffffffcb
  43a8a5:	in     eax,0x0
  43a8a7:	mov    ebp,0x95496476
  43a8ac:	mov    al,ds:0x61e8ec9d
  43a8b1:	fld    DWORD PTR [eax]
  43a8b3:	jb     0x43a91b
  43a8b5:	bound  eax,QWORD PTR [ebx+0x19]
  43a8b8:	aam    0x99
  43a8ba:	add    al,0x60
  43a8bc:	and    ch,BYTE PTR [ecx]
  43a8be:	xchg   DWORD PTR [ecx+ebx*2-0x2d01ff42],esi
  43a8c5:	in     al,0x8b
  43a8c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a8c8:	jge    0x43a906
  43a8ca:	mov    edx,0x842f7b01
  43a8cf:	test   eax,0x5f7d3fe5
  43a8d4:	adc    dh,BYTE PTR ds:0xaa6aff6d
  43a8da:	sbb    BYTE PTR [ebx+ebp*1-0x77],bl
  43a8de:	stc    
  43a8df:	aas    
  43a8e0:	repnz cmp al,0x32
  43a8e3:	iret   
  43a8e4:	dec    ebx
  43a8e5:	das    
  43a8e6:	sub    DWORD PTR [ecx-0x56d1272b],0xffffff8f
  43a8ed:	ss test eax,0xc7931ae8
  43a8f3:	stos   DWORD PTR es:[edi],eax
  43a8f4:	(bad)  
  43a8f5:	fst    DWORD PTR [ebx+0x62]
  43a8f8:	jp     0x43a8ad
  43a8fa:	in     al,0x91
	...
  43a910:	icebp  
  43a911:	pop    ebx
  43a912:	inc    ebx
  43a913:	add    BYTE PTR [ebx+0x30574f6d],dh
  43a919:	shl    BYTE PTR [edx],1
  43a91b:	inc    edi
  43a91c:	mov    bh,0x5b
  43a91e:	dec    esi
  43a91f:	and    BYTE PTR [esi],bh
  43a921:	mov    cl,BYTE PTR [ecx+0x5d88b00]
  43a927:	inc    esp
  43a928:	sub    DWORD PTR [esi+0x77],ebx
  43a92b:	push   eax
  43a92c:	jnp    0x43a991
  43a92e:	(bad)  
  43a92f:	scas   eax,DWORD PTR es:[edi]
  43a930:	mov    bh,bh
  43a932:	add    al,BYTE PTR [ecx]
  43a934:	mov    ebx,eax
  43a936:	sbb    DWORD PTR [ebp-0x69],0x105465
  43a93d:	mov    BYTE PTR ss:[edi+eiz*2-0x1f],dl
  43a942:	dec    ecx
  43a943:	push   edx
  43a944:	rcr    BYTE PTR [edi-0x2e1e531f],1
  43a94a:	test   BYTE PTR [edi],0xa5
  43a94d:	pop    ds
  43a94e:	push   ds
  43a94f:	sub    DWORD PTR [edx+0x52],0x6d
  43a953:	or     eax,ecx
  43a955:	rcl    BYTE PTR [edx],1
  43a957:	shufps xmm7,xmm4,0xf9
  43a95b:	(bad)  
  43a95c:	cmp    esp,DWORD PTR [ebp+0x4d]
  43a95f:	and    al,0x3f
  43a961:	fst    st(0)
  43a963:	sub    esp,DWORD PTR [ebx]
  43a965:	pop    edi
  43a966:	dec    ebp
  43a967:	and    al,0xff
  43a969:	mov    dl,0xc8
  43a96b:	emms   
  43a96d:	(bad)  
  43a96e:	stc    
  43a96f:	dec    DWORD PTR [ebx]
  43a971:	gs aas 
  43a973:	push   eax
	...
  43a988:	xor    esp,DWORD PTR ds:0x25337a6d
  43a98e:	push   es
  43a98f:	test   DWORD PTR [ebx-0x2dffff28],ecx
  43a995:	sbb    DWORD PTR [ecx+0xf],edx
  43a998:	inc    edi
  43a999:	xchg   edi,eax
  43a99a:	stc    
  43a99b:	(bad)  
  43a99c:	mov    ebx,0x627ed2b2
  43a9a1:	cmp    al,0xb4
  43a9a3:	dec    ebp
  43a9a4:	mov    ebp,0x4ffaf4cc
  43a9a9:	shr    dh,cl
  43a9ab:	aas    
  43a9ac:	bound  edi,QWORD PTR [edi+0x4d90b39]
  43a9b2:	icebp  
  43a9b3:	push   ecx
  43a9b4:	jmp    0x43a9bf
  43a9b6:	mov    WORD PTR [edx+esi*2-0x59],es
  43a9ba:	dec    eax
  43a9bb:	mov    BYTE PTR [esi],ah
  43a9bd:	fdivrp st(4),st
  43a9bf:	out    0x8c,eax
  43a9c1:	mov    ebx,DWORD PTR [eax]
  43a9c3:	cli    
  43a9c4:	out    0x1,al
  43a9c6:	or     DWORD PTR [ecx+edx*8-0x70002bf],eax
  43a9cd:	inc    eax
  43a9ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a9cf:	(bad)  
  43a9d0:	rol    BYTE PTR [ecx+0x48d4fafd],1
  43a9d6:	or     BYTE PTR [ecx-0x52],0xc8
  43a9da:	pushf  
  43a9db:	in     al,dx
  43a9dc:	dec    ebp
  43a9dd:	aam    0x7a
  43a9df:	mov    edi,0x72184dce
  43a9e4:	outs   dx,BYTE PTR ds:[esi]
  43a9e5:	mov    bh,0xc2
  43a9e7:	or     esi,DWORD PTR ds:0xfb05b4
	...
  43a9fd:	add    BYTE PTR [eax],al
  43a9ff:	add    BYTE PTR [eax+edi*2-0x27718ee8],dh
  43aa06:	fcomp  QWORD PTR gs:[edi]
  43aa09:	inc    esp
  43aa0a:	jp     0x43a9cb
  43aa0c:	mov    fs,WORD PTR [ebp+0x40aa617d]
  43aa12:	cmp    al,BYTE PTR [ecx-0x4e]
  43aa15:	inc    ebp
  43aa16:	std    
  43aa17:	jmp    DWORD PTR [edx+0x17]
  43aa1a:	xacquire xchg BYTE PTR [esp+eiz*4-0x13adbb1b],bl
  43aa22:	jmp    0x6e4c:0x863c6dfa
  43aa29:	or     DWORD PTR [ecx-0x5d26cdf9],0xffffff91
  43aa30:	pop    ebp
  43aa31:	inc    ecx
  43aa32:	sbb    al,0x39
  43aa34:	(bad)  
  43aa35:	xor    ch,BYTE PTR [ebx+0x44]
  43aa38:	xor    edi,ebp
  43aa3a:	pop    esi
  43aa3b:	inc    esi
  43aa3c:	mov    ebp,0xa817601e
  43aa41:	pop    esi
  43aa42:	adc    esp,eax
  43aa44:	pop    ecx
  43aa45:	pop    esp
  43aa46:	mov    es,WORD PTR [edi]
  43aa48:	jmp    0x985b151f
  43aa4d:	push   esi
  43aa4e:	loope  0x43aa03
  43aa50:	bound  esi,QWORD PTR [ebx-0x76f47d15]
  43aa56:	in     al,dx
  43aa57:	cwde   
  43aa58:	arpl   WORD PTR [esi-0x5c],bx
  43aa5b:	out    dx,eax
  43aa5c:	hlt    
  43aa5d:	clc    
  43aa5e:	out    0x5b,eax
  43aa60:	int    0xd2
  43aa62:	out    0x3,eax
	...
  43aa78:	sub    eax,0x1df98f9b
  43aa7d:	xor    esp,DWORD PTR [edi]
  43aa7f:	mov    bh,0xbb
  43aa81:	mov    gs,WORD PTR [esi+0x21]
  43aa84:	scas   al,BYTE PTR es:[edi]
  43aa85:	pop    ss
  43aa86:	test   DWORD PTR [ebx],0x12fe1974
  43aa8c:	xchg   esi,eax
  43aa8d:	pop    esi
  43aa8e:	sti    
  43aa8f:	mov    dl,0x93
  43aa91:	pop    esi
  43aa92:	clc    
  43aa93:	scas   al,BYTE PTR es:[edi]
  43aa94:	jl     0x43aaa4
  43aa96:	xchg   esi,eax
  43aa97:	mov    BYTE PTR [ebx-0x2e01d507],bl
  43aa9d:	inc    esi
  43aa9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aa9f:	add    ecx,DWORD PTR [edx]
  43aaa1:	adc    ah,ah
  43aaa3:	push   ss
  43aaa4:	or     BYTE PTR [edi+0x48db88e8],bh
  43aaaa:	out    0x3,eax
  43aaac:	bound  eax,QWORD PTR [ecx-0x65]
  43aaaf:	sbb    al,bh
  43aab1:	xor    DWORD PTR [ecx+0x6ed855c0],edi
  43aab7:	rcr    BYTE PTR [ecx+0x60],0x0
  43aabb:	das    
  43aabc:	bound  esp,QWORD PTR [eax+0x5a]
  43aabf:	(bad)  
  43aac1:	(bad)  
  43aac2:	adc    al,0x70
  43aac4:	pop    ss
  43aac5:	retf   0x374
  43aac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aac9:	xchg   esp,eax
  43aaca:	or     BYTE PTR ds:0x8e03bbbe,bl
  43aad0:	rcr    cl,cl
  43aad2:	mov    ebx,DWORD PTR [edi]
  43aad4:	mul    BYTE PTR [edx+ecx*2-0x47]
  43aad8:	jns    0x43ab05
  43aada:	shl    BYTE PTR [esi+0x0],cl
	...
  43aaed:	add    BYTE PTR [eax],al
  43aaef:	add    BYTE PTR [ebx+esi*4-0x8],dh
  43aaf3:	in     al,0xe5
  43aaf5:	xor    cl,BYTE PTR [eax+0x4327f1c7]
  43aafb:	add    DWORD PTR [eax-0x54],esp
  43aafe:	add    ah,BYTE PTR [eax-0x9]
  43ab01:	adc    DWORD PTR [eax],eax
  43ab03:	jmp    0x2fc93969
  43ab08:	mov    bh,0x8a
  43ab0a:	pop    ebx
  43ab0b:	sub    esi,DWORD PTR [ebp+0x31]
  43ab0e:	push   ebx
  43ab0f:	bound  esi,QWORD PTR [esi+0x38]
  43ab12:	adc    al,0xe9
  43ab14:	popa   
  43ab15:	fptan  
  43ab17:	lods   eax,DWORD PTR ds:[esi]
  43ab18:	sub    eax,0x4494ffd9
  43ab1d:	pop    eax
  43ab1e:	retf   0xd601
  43ab21:	jmp    0x2b5a:0x1ae80ef9
  43ab28:	sub    eax,0x4e725331
  43ab2d:	push   edi
  43ab2e:	dec    edx
  43ab2f:	fstp   QWORD PTR [edx+ebx*8-0x4c]
  43ab33:	pop    ebx
  43ab34:	and    DWORD PTR [ecx],esi
  43ab36:	loope  0x43ab7b
  43ab38:	sbb    al,0x34
  43ab3a:	stc    
  43ab3b:	ins    BYTE PTR es:[edi],dx
  43ab3c:	fsub   QWORD PTR [eax+0x0]
  43ab3f:	jmp    0xccdaeca5
  43ab44:	dec    edi
  43ab45:	xor    ecx,DWORD PTR [ebx-0x1ecacb00]
  43ab4b:	xchg   ecx,eax
  43ab4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ab4d:	(bad)  
  43ab4e:	test   bh,0xcd
  43ab51:	mov    BYTE PTR [ebx+0x40],cl
	...
  43ab67:	add    bl,cl
  43ab69:	mov    dx,0x8851
  43ab6d:	add    BYTE PTR [edx+0x1d2150d9],0x10
  43ab74:	jge    0x43ab73
  43ab76:	adc    dh,bl
  43ab78:	out    0xc6,al
  43ab7a:	or     BYTE PTR [edi+ebx*4+0x34],0x82
  43ab7f:	call   0xfe2dd157
  43ab84:	adc    al,0x64
  43ab86:	cmp    eax,0xecafb724
  43ab8b:	je     0x43ab5c
  43ab8d:	push   edi
  43ab8e:	push   esp
  43ab8f:	add    eax,0x4b8cec78
  43ab94:	jg     0x43ab9a
  43ab96:	xchg   edi,eax
  43ab97:	xor    eax,0xc07dc624
  43ab9c:	scas   eax,DWORD PTR es:[edi]
  43ab9d:	sbb    DWORD PTR [edx+0x393ecb35],eax
  43aba3:	add    ah,bh
  43aba5:	pusha  
  43aba6:	jb     0x43abbc
  43aba8:	out    dx,al
  43aba9:	les    ebp,FWORD PTR [ebp+0x24]
  43abac:	addr16 jle 0x43aba5
  43abaf:	(bad)  
  43abb0:	cmp    bh,al
  43abb2:	sub    BYTE PTR [edi+ebp*1+0x28],0x54
  43abb7:	dec    edi
  43abb9:	(bad)  
  43abbb:	data16 jl 0x43abec
  43abbe:	xor    esp,DWORD PTR [eax]
  43abc0:	mov    eax,0x1456fbee
  43abc5:	(bad)  
  43abc6:	cli    
  43abc7:	cld    
  43abc8:	mov    BYTE PTR [ecx+0x6611],bl
	...
  43abde:	add    BYTE PTR [eax],al
  43abe0:	mov    esp,0x780a0c2c
  43abe5:	in     eax,dx
  43abe6:	sti    
  43abe7:	scas   eax,DWORD PTR es:[edi]
  43abe8:	bound  eax,QWORD PTR [ecx+0x3b]
  43abeb:	add    ah,BYTE PTR [edx-0x25]
  43abee:	xchg   edi,eax
  43abef:	adc    ebx,ebx
  43abf1:	call   0x4688:0x6f95afc
  43abf8:	jbe    0x43ac14
  43abfa:	ds xor al,0xd5
  43abfd:	jle    0x43ab7f
  43abff:	pop    esi
  43ac00:	jbe    0x43ac44
  43ac02:	sbb    BYTE PTR [esi+0x6a],0x42
  43ac06:	sar    BYTE PTR [edi-0x6bfbab19],1
  43ac0c:	mov    ds:0xb56b1ff,al
  43ac11:	test   BYTE PTR ds:0x21ab0f00,al
  43ac17:	xchg   BYTE PTR [edi],ah
  43ac19:	ss jle 0x43ac07
  43ac1c:	push   0x44
  43ac1e:	std    
  43ac1f:	push   DWORD PTR [ebx+edx*8]
  43ac22:	or     dh,cl
  43ac24:	bound  esi,QWORD PTR [edx]
  43ac26:	lods   al,BYTE PTR ds:[esi]
  43ac27:	xchg   BYTE PTR [ebx+0xd],bh
  43ac2a:	rol    DWORD PTR [esi-0x407fc5f1],cl
  43ac30:	ds push edx
  43ac32:	or     BYTE PTR [edx+ebp*2+0x4afa14ec],0x26
  43ac3a:	pop    esp
  43ac3b:	cli    
  43ac3c:	push   ebp
  43ac3d:	mov    dh,0x3d
  43ac3f:	jae    0x43abe8
  43ac41:	stos   DWORD PTR es:[edi],eax
  43ac42:	xchg   esp,eax
  43ac43:	add    eax,DWORD PTR [eax]
	...
  43ac55:	add    BYTE PTR [eax],al
  43ac57:	add    BYTE PTR [ebx+0x5f71ed47],cl
  43ac5d:	mov    ebx,0xdfc80bbc
  43ac62:	mov    BYTE PTR [ebx],dl
  43ac64:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ac66:	xor    bh,0x27
  43ac69:	xor    BYTE PTR ds:0x143a81e7,cl
  43ac6f:	cli    
  43ac70:	fild   WORD PTR [eax]
  43ac72:	mov    ah,BYTE PTR [ecx]
  43ac74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ac75:	fstp   DWORD PTR [esi]
  43ac77:	fwait
  43ac78:	push   ebp
  43ac79:	stos   DWORD PTR es:[edi],eax
  43ac7a:	(bad)  
  43ac7b:	sahf   
  43ac7c:	inc    ebp
  43ac7d:	(bad)  
  43ac7e:	cmp    DWORD PTR [ebx],edx
  43ac80:	cs pop ecx
  43ac82:	dec    eax
  43ac83:	enter  0x2fed,0xdc
  43ac87:	xchg   DWORD PTR [edi-0x67],edx
  43ac8a:	out    0x1a,eax
  43ac8c:	mov    ch,0xd2
  43ac8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ac8f:	xchg   DWORD PTR [ebp-0x30bb99d1],esi
  43ac95:	pop    DWORD PTR [ecx+0x3d]
  43ac98:	pop    es
  43ac99:	loop   0x43ac82
  43ac9b:	(bad)  
  43ac9c:	std    
  43ac9d:	cdq    
  43ac9e:	jle    0x43acb9
  43aca0:	fsub   QWORD PTR [eax-0xaceed21]
  43aca6:	out    dx,eax
  43aca7:	jle    0x43ad0b
  43aca9:	cs repz out 0x65,eax
  43acad:	cs pop ss
  43acaf:	cld    
  43acb0:	(bad)  
  43acb1:	fidiv  DWORD PTR [esi-0x3fe61ecb]
  43acb7:	add    bl,BYTE PTR [edi]
  43acb9:	and    ebp,DWORD PTR [esi+0x45]
	...
  43acd0:	mov    edi,0xdcbae7e1
  43acd5:	xor    BYTE PTR [esi-0x3d],bl
  43acd8:	popa   
  43acd9:	push   ss
  43acda:	jmp    0x2a88:0xe799d737
  43ace1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ace2:	jmp    0xe9070f65
  43ace7:	adc    bl,BYTE PTR [ebp-0x79]
  43acea:	je     0x43ac87
  43acec:	pop    ebp
  43aced:	bound  ebp,QWORD PTR [ecx]
  43acef:	dec    ebx
  43acf0:	arpl   bp,sp
  43acf2:	pusha  
  43acf3:	les    esi,FWORD PTR ds:0x2e359f36
  43acf9:	outs   dx,BYTE PTR cs:[esi]
  43acfb:	ret    0x1661
  43acfe:	loope  0x43ac97
  43ad00:	out    dx,eax
  43ad01:	cwde   
  43ad02:	add    cl,ch
  43ad04:	jns    0x43ad14
  43ad06:	xor    al,0xee
  43ad08:	jo     0x43ad32
  43ad0a:	inc    esp
  43ad0b:	or     eax,0xe6c1d862
  43ad10:	in     eax,0x61
  43ad12:	inc    eax
  43ad13:	jmp    0x624556cb
  43ad18:	mov    al,ds:0x50fdc536
  43ad1d:	xor    eax,DWORD PTR [ebp+0x46c10a6]
  43ad23:	jmp    0xb0c93843
  43ad28:	dec    esp
  43ad29:	mov    ds:0xb369f524,al
  43ad2e:	out    dx,eax
  43ad2f:	pushf  
  43ad30:	push   eax
  43ad31:	push   ebp
  43ad32:	rcr    BYTE PTR ds:0x0,0x0
	...
  43ad45:	add    BYTE PTR [eax],al
  43ad47:	add    bl,al
  43ad49:	push   esi
  43ad4a:	dec    esp
  43ad4b:	lds    ebp,FWORD PTR [ebp-0x316e2faa]
  43ad51:	mov    al,ds:0x3e1ce900
  43ad56:	cmp    DWORD PTR [edi-0x13],0xffffffd1
  43ad5a:	push   edx
  43ad5b:	outs   dx,BYTE PTR ds:[esi]
  43ad5c:	mov    cl,BYTE PTR [ecx]
  43ad5e:	or     eax,0x495c61a9
  43ad63:	icebp  
  43ad64:	mov    ebx,0xaf560f56
  43ad69:	fnstsw WORD PTR [ebp+0x51]
  43ad6c:	push   eax
  43ad6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ad6e:	or     dh,BYTE PTR [edx+0x23]
  43ad71:	ss xor ebp,0x292e2f70
  43ad78:	adc    BYTE PTR [ebx+0x6961e5be],dl
  43ad7e:	call   DWORD PTR [ecx]
  43ad80:	push   0xabf9e264
  43ad85:	cmp    BYTE PTR [ebp+0x7d40b4bc],0x5
  43ad8c:	pop    ecx
  43ad8d:	stos   DWORD PTR es:[edi],eax
  43ad8e:	in     al,dx
  43ad8f:	add    BYTE PTR [edi],dl
  43ad91:	add    al,0xb9
  43ad93:	push   esi
  43ad94:	nop
  43ad95:	lds    ecx,FWORD PTR [eax-0x77d6d8bc]
  43ad9b:	inc    esp
  43ad9c:	daa    
  43ad9d:	and    eax,0x3d574488
  43ada2:	mov    BYTE PTR [edi+eiz*2+0x41],al
  43ada6:	add    BYTE PTR [esi+0x7],0xa2
  43adaa:	cmp    eax,0x24
	...
  43adbf:	add    BYTE PTR [edi],al
  43adc1:	xchg   ebp,eax
  43adc2:	mov    eax,DWORD PTR [eax-0x5]
  43adc5:	scas   eax,DWORD PTR es:[edi]
  43adc6:	ins    DWORD PTR es:[edi],dx
  43adc7:	and    al,0xd3
  43adc9:	scas   eax,DWORD PTR es:[edi]
  43adca:	cmp    eax,0x1fcdbf24
  43adcf:	mov    ebp,DWORD PTR [ebp-0x1f]
  43add2:	mov    edx,DWORD PTR [edi+edx*4+0x28]
  43add6:	add    BYTE PTR [ecx],0x79
  43add9:	retf   0x449
  43addc:	inc    edi
  43addd:	xchg   ebp,eax
  43adde:	ins    DWORD PTR es:[edi],dx
  43addf:	cmp    ah,bl
  43ade1:	push   ecx
  43ade2:	sbb    eax,0x1d212e14
  43ade7:	or     BYTE PTR [esi],cl
  43ade9:	sbb    DWORD PTR ds:0x1d210214,ebx
  43adef:	adc    al,0xe3
  43adf1:	pop    ecx
  43adf2:	pusha  
  43adf3:	add    BYTE PTR [ebx-0x62],bh
  43adf6:	imul   edx,DWORD PTR [edi],0xb8b7d88b
  43adfc:	sbb    al,0x0
  43adff:	call   0x39e883
  43ae04:	retf   
  43ae05:	leave  
  43ae06:	xor    al,0x80
  43ae08:	sub    dl,BYTE PTR [ecx+edi*8]
  43ae0b:	(bad)  
  43ae0c:	ss push esp
  43ae0e:	or     eax,DWORD PTR [eax+0x3b]
  43ae11:	sbb    edi,ebx
  43ae13:	add    BYTE PTR [ebx],bh
  43ae15:	fdiv   DWORD PTR [edi+esi*4-0x3]
  43ae19:	lods   al,BYTE PTR ds:[esi]
  43ae1a:	in     al,0x5d
  43ae1c:	(bad)  
  43ae1d:	push   DWORD PTR [ecx+0x20c13e86]
  43ae23:	pop    es
	...
  43ae38:	arpl   WORD PTR [edx-0x3],ax
  43ae3b:	or     dl,ch
  43ae3d:	inc    esp
  43ae3e:	cmc    
  43ae3f:	xchg   BYTE PTR [edi+0x72df3e12],bl
  43ae45:	aaa    
  43ae46:	sub    eax,0xb2a96386
  43ae4b:	pop    es
  43ae4c:	jmp    0x3049f52
  43ae51:	cmp    bh,ah
  43ae53:	iret   
  43ae54:	js     0x43ae8c
  43ae56:	jp     0x43ae9c
  43ae58:	pop    edx
  43ae59:	sar    BYTE PTR [ecx-0x74],cl
  43ae5c:	fisubr DWORD PTR [ebx+0x10]
  43ae5f:	cli    
  43ae60:	jmp    0x43ae2e
  43ae62:	cld    
  43ae63:	ret    0x69e7
  43ae66:	psubd  mm0,mm5
  43ae69:	inc    eax
  43ae6a:	std    
  43ae6b:	jmp    DWORD PTR [edx+0x4a]
  43ae6e:	les    eax,FWORD PTR [ecx]
  43ae70:	mov    ch,0x42
  43ae72:	jp     0x43ae00
  43ae74:	stos   BYTE PTR es:[edi],al
  43ae75:	pop    ebx
  43ae76:	adc    dl,bh
  43ae78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ae79:	sub    al,0xf1
  43ae7b:	cli    
  43ae7c:	pop    ss
  43ae7d:	adc    dl,BYTE PTR [eax]
  43ae7f:	je     0x43aee7
  43ae81:	pop    edx
  43ae82:	pop    edi
  43ae83:	add    DWORD PTR [ebp+0x72bd36ba],ecx
  43ae89:	inc    edx
  43ae8a:	mov    dl,0x86
  43ae8c:	mov    ?,WORD PTR [esi-0x40ec08df]
  43ae92:	mov    al,BYTE PTR [edi]
  43ae94:	bound  ebp,QWORD PTR [edi-0x49]
  43ae97:	push   edx
  43ae98:	fprem  
  43ae9a:	xchg   ecx,eax
  43ae9b:	pop    ebx
	...
  43aeb0:	jmp    0x54c4a01a
  43aeb5:	add    DWORD PTR [ecx],edx
  43aeb7:	call   0xd961:0x86ae6362
  43aebe:	je     0x43ae79
  43aec0:	ins    DWORD PTR es:[edi],dx
  43aec1:	pop    esi
  43aec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43aec3:	div    DWORD PTR [ebx+ebx*1]
  43aec6:	call   FWORD PTR [eax+0x7f]
  43aec9:	sub    cl,BYTE PTR [edx]
  43aecb:	xchg   ebp,esp
  43aecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43aece:	sar    DWORD PTR [esp+ebx*1+0x60],0x7f
  43aed3:	not    DWORD PTR [ebx+eiz*1]
  43aed6:	fs enter 0x605d,0x72
  43aedb:	sti    
  43aedc:	fisub  WORD PTR [ebx]
  43aede:	pop    ebx
  43aedf:	jmp    FWORD PTR [ebp+0x6599da83]
  43aee5:	pop    esi
  43aee6:	sahf   
  43aee7:	pcmpeqd mm4,mm1
  43aeea:	mov    edi,0xc22ae8ac
  43aeef:	jnp    0x43af17
  43aef1:	loope  0x43af63
  43aef3:	pop    es
  43aef4:	fst    QWORD PTR [edx-0x2adfb921]
  43aefa:	out    0x3,eax
  43aefc:	les    ebp,FWORD PTR [edx]
  43aefe:	jo     0x43ae97
  43af00:	imul   ebx,DWORD PTR [esi-0x12],0xe8c9f582
  43af07:	les    edx,FWORD PTR [ecx+0x69]
  43af0a:	call   0xa82c5629
  43af0f:	scas   eax,DWORD PTR es:[edi]
  43af10:	cmp    ecx,DWORD PTR [esi+0x296e]
	...
  43af26:	add    BYTE PTR [eax],al
  43af28:	ss pop ss
  43af2a:	xlat   BYTE PTR ds:[ebx]
  43af2b:	add    esi,DWORD PTR [edi]
  43af2d:	pop    esi
  43af2e:	jnp    0x43aeb3
  43af30:	jns    0x43af0f
  43af32:	mov    dh,0xb5
  43af34:	js     0x43aeda
  43af36:	idiv   DWORD PTR [edx+0x72]
  43af39:	out    0x2e,al
  43af3b:	sbb    DWORD PTR [esi],0x71b16025
  43af41:	pusha  
  43af42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43af43:	cmovne ebx,DWORD PTR [ebx+0x55]
  43af47:	push   cs
  43af48:	pop    eax
  43af49:	push   ebp
  43af4a:	add    BYTE PTR [ecx],ch
  43af4c:	jmp    0x732f:0x55b4f9da
  43af53:	sbb    eax,0xf1732ef7
  43af58:	mov    eax,0x5cbce820
  43af5d:	das    
  43af5e:	stc    
  43af5f:	arpl   WORD PTR [esi+0x53],si
  43af62:	dec    ebx
  43af63:	std    
  43af64:	jns    0x43af98
  43af66:	cs (bad) 
  43af68:	fs nop
  43af6a:	xchg   BYTE PTR [edx],ch
  43af6c:	mov    ecx,0x61ddbe20
  43af71:	push   edx
  43af72:	push   esp
  43af73:	or     eax,0x54ce546a
  43af78:	out    dx,eax
  43af79:	push   edx
  43af7a:	jmp    FWORD PTR [ecx-0x27]
  43af7d:	lds    eax,FWORD PTR [eax+0x5a]
  43af80:	pop    edx
  43af81:	cli    
  43af82:	rcl    dl,0xbb
  43af85:	stos   BYTE PTR es:[edi],al
  43af86:	sar    cl,0x78
  43af89:	rol    BYTE PTR [ebp+0x2b],cl
	...
  43af9f:	add    dh,cl
  43afa1:	stos   BYTE PTR es:[edi],al
  43afa2:	rcr    cl,0x60
  43afa5:	imul   eax,DWORD PTR [ebp+0x251a38f0],0xffffffb8
  43afac:	out    dx,eax
  43afad:	push   edx
  43afae:	outs   dx,DWORD PTR ds:[esi]
  43afaf:	std    
  43afb0:	loopne 0x43b01d
  43afb2:	adc    dl,dl
  43afb4:	outs   dx,DWORD PTR ds:[esi]
  43afb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43afb6:	pop    es
  43afb7:	jb     0x43af92
  43afb9:	sar    ebp,1
  43afbb:	mov    dl,0xa8
  43afbd:	pop    ds
  43afbe:	jb     0x43afab
  43afc0:	mov    al,0x69
  43afc2:	pop    edx
  43afc3:	stos   DWORD PTR es:[edi],eax
  43afc4:	pop    ebp
  43afc5:	fst    DWORD PTR [edx-0x42]
  43afc8:	fld    TBYTE PTR [ecx]
  43afca:	xchg   BYTE PTR [eax+0x59],bl
  43afcd:	data16 stc 
  43afcf:	push   esi
  43afd0:	pop    esp
  43afd1:	push   ebx
  43afd2:	shl    BYTE PTR [ebx+esi*1-0x5a],1
  43afd6:	and    al,0x0
  43afd8:	rcr    BYTE PTR [eax+0x1d],1
  43afdb:	or     al,0x62
  43afdd:	adc    esi,DWORD PTR [esi+ecx*1-0x40]
  43afe1:	sbb    bh,ch
  43afe3:	and    al,0x3b
  43afe5:	fld    QWORD PTR [eax]
  43afe7:	jo     0x43b02b
  43afe9:	and    DWORD PTR ds:0x4b21cf10,ebx
  43afef:	mov    eax,DWORD PTR [ebp+0x54ff89c4]
  43aff5:	xlat   BYTE PTR ds:[ebx]
  43aff6:	adc    al,0x8e
  43aff9:	jmp    0x5e56:0x9cd8e074
  43b000:	cmp    DWORD PTR [ecx+edi*8],esp
  43b003:	mov    al,BYTE PTR [eax]
	...
  43b015:	add    BYTE PTR [eax],al
  43b017:	add    BYTE PTR [ecx],bh
  43b019:	ret    
  43b01a:	out    dx,al
  43b01b:	push   ecx
  43b01c:	cmp    ch,BYTE PTR [edx+0x54]
  43b01f:	push   esi
  43b020:	sub    al,0xa2
  43b022:	jne    0x43b048
  43b024:	mul    DWORD PTR [ecx-0x26bb7418]
  43b02a:	xchg   DWORD PTR [edi+ebp*2+0x21],ebp
  43b02e:	test   cl,cl
  43b030:	pop    DWORD PTR [edx+0x7a]
  43b033:	sar    DWORD PTR [ecx-0xbcdd73c],0xd6
  43b03a:	sbb    al,0x4e
  43b03d:	repnz ins DWORD PTR es:[edi],dx
  43b03f:	pop    ebp
  43b040:	int    0x1e
  43b042:	std    
  43b043:	add    BYTE PTR [esi+0x4e],al
  43b046:	or     DWORD PTR [esi+edi*2-0x5e],esi
  43b04a:	inc    esi
  43b04b:	or     bl,dh
  43b04d:	sub    ebp,DWORD PTR [ebx]
  43b04f:	call   DWORD PTR [edx+eiz*4]
  43b052:	loope  0x43afd9
  43b054:	out    0x41,al
  43b056:	mov    esp,DWORD PTR ss:[edi+0x31]
  43b05a:	or     eax,0x14e0455
  43b05f:	push   esi
  43b060:	adc    al,0xe
  43b062:	loope  0x43b082
  43b064:	bound  edx,QWORD PTR [eax+0x7fd9fa0b]
  43b06a:	stc    
  43b06b:	mov    BYTE PTR [esi-0x61730f2a],ah
  43b071:	fdivrp st(0),st
  43b073:	dec    edi
  43b074:	mov    cl,0xef
  43b076:	xchg   ebx,eax
  43b077:	pop    es
  43b078:	fxch   st(4)
  43b07a:	sbb    al,0xb9
	...
  43b090:	imul   edi,edi,0xab27860b
  43b096:	adc    al,0xe7
  43b098:	xor    DWORD PTR [ecx],eax
  43b09a:	or     al,0xfa
  43b09c:	loope  0x43b075
  43b09e:	std    
  43b09f:	je     0x43b109
  43b0a1:	retf   
  43b0a2:	loop   0x43b02a
  43b0a4:	popf   
  43b0a5:	sub    al,dh
  43b0a7:	inc    edx
  43b0a8:	pop    esi
  43b0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b0aa:	out    dx,eax
  43b0ab:	xchg   BYTE PTR [ecx],bl
  43b0ad:	fisubr DWORD PTR [ecx]
  43b0af:	xor    ch,bh
  43b0b1:	sar    BYTE PTR ds:[edi+0x56a9e895],1
  43b0b8:	mov    ebp,ecx
  43b0ba:	add    esp,DWORD PTR ds:[edx-0x1d]
  43b0be:	mov    ah,0x51
  43b0c0:	frstor [esi]
  43b0c2:	js     0x43b090
  43b0c4:	retf   0xa40
  43b0c7:	cli    
  43b0c8:	int    0xba
  43b0ca:	les    ecx,FWORD PTR [ebx]
  43b0cc:	pushf  
  43b0cd:	cmp    eax,0xf6e90000
  43b0d2:	add    dl,al
  43b0d4:	push   ds
  43b0d5:	xor    edi,esi
  43b0d7:	(bad)  
  43b0d8:	fnstenv [edx+0x18]
  43b0db:	xlat   BYTE PTR ds:[ebx]
  43b0dc:	adc    esp,ebx
  43b0de:	mov    dl,0x52
  43b0e0:	popf   
  43b0e1:	and    eax,0x78e917e1
  43b0e6:	or     al,0x73
  43b0e8:	inc    esi
  43b0e9:	or     dl,al
  43b0eb:	icebp  
  43b0ec:	jp     0x43b0a4
  43b0ee:	or     edi,edx
  43b0f0:	jge    0x43b0ca
  43b0f2:	outs   dx,BYTE PTR ds:[esi]
  43b0f3:	or     eax,DWORD PTR [eax]
	...
  43b105:	add    BYTE PTR [eax],al
  43b107:	add    dh,bl
  43b109:	daa    
  43b10a:	shr    eax,cl
  43b10c:	adc    BYTE PTR [esi+ebx*1+0x1b],dl
  43b110:	xor    ch,BYTE PTR [eax]
  43b112:	dec    edx
  43b113:	or     al,0xe4
  43b115:	sub    DWORD PTR [ebp+edx*1-0x2f],ebp
  43b119:	aam    0x6e
  43b11b:	mov    bh,0x81
  43b11d:	lds    ebp,FWORD PTR [ecx+esi*1-0x2f]
  43b121:	fcomp  QWORD PTR [esi-0x44]
  43b124:	imul   edx,DWORD PTR [eax-0x13],0xb91fdcac
  43b12b:	test   al,0x8a
  43b12d:	sbb    esp,ebx
  43b12f:	add    esp,ebx
  43b131:	xor    eax,0xd96202f7
  43b136:	xchg   esi,eax
  43b137:	mov    dh,0xb3
  43b139:	jmp    0x2c7:0xfde1150c
  43b140:	(bad)  
  43b141:	fld1   
  43b143:	mov    ah,0xe4
  43b145:	add    BYTE PTR [ebx-0x71],bl
  43b148:	mov    ?,WORD PTR [edx]
  43b14a:	dec    esp
  43b14b:	int    0x3b
  43b14d:	lods   eax,DWORD PTR ds:[esi]
  43b14e:	dec    ebx
  43b14f:	jg     0x43b1bc
  43b151:	fst    st(2)
  43b153:	inc    ebx
  43b154:	frstor [esi]
  43b156:	repz add ecx,DWORD PTR [edi-0x80]
  43b15a:	push   0xb726c823
  43b15f:	or     ebx,edx
  43b161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b162:	jecxz  0x43b0e8
  43b164:	rcr    cl,0xe7
  43b167:	add    esi,DWORD PTR [edx]
  43b169:	(bad)  
  43b16a:	mov    gs,edx
	...
  43b180:	in     al,0xd3
  43b182:	into   
  43b183:	stc    
  43b184:	cs into 
  43b186:	pop    esi
  43b187:	(bad)  
  43b188:	popa   
  43b189:	cld    
  43b18a:	out    0x3,eax
  43b18c:	bound  ebp,QWORD PTR [ecx-0x2de9bd42]
  43b192:	add    BYTE PTR [esi-0x64],bh
  43b195:	fiadd  DWORD PTR [eax]
  43b197:	jmp    0xfbb7d817
  43b19c:	idiv   bl
  43b19e:	dec    esi
  43b19f:	jb     0x43b1ce
  43b1a1:	ds sub eax,0x85235957
  43b1a7:	cmp    ebx,esp
  43b1a9:	adc    esi,DWORD PTR [ebx+0x1c]
  43b1ac:	jne    0x43b170
  43b1ae:	xchg   DWORD PTR [edi],ecx
  43b1b0:	int    0xe4
  43b1b2:	add    al,0x80
  43b1b4:	pop    esi
  43b1b5:	(bad)  [eax]
  43b1b7:	jmp    0xd3cb8ba9
  43b1bc:	push   esp
  43b1bd:	shl    BYTE PTR [ebx],cl
  43b1bf:	push   ds
  43b1c0:	pop    ecx
  43b1c1:	ss stc 
  43b1c3:	pusha  
  43b1c4:	sbb    al,0xda
  43b1c6:	in     eax,0xeb
  43b1c8:	sahf   
  43b1c9:	lock push edx
  43b1cb:	jb     0x43b222
  43b1cd:	ds add edi,edi
  43b1d0:	pop    eax
  43b1d1:	and    eax,DWORD PTR [ebp+0x7327e2f9]
  43b1d7:	popa   
  43b1d8:	fsub   st(1),st
  43b1da:	data16 icebp 
  43b1dc:	push   0x224f78ed
  43b1e1:	es cli 
  43b1e3:	cld    
	...
  43b1f8:	(bad)
  43b1fb:	jmp    0x3dcae85c
  43b200:	ret    0x83c9
  43b203:	mov    bh,0xc8
  43b205:	pop    ecx
  43b206:	or     ebp,eax
  43b208:	popa   
  43b209:	fld    st(1)
  43b20b:	daa    
  43b20c:	mov    dl,0xf5
  43b20e:	add    cl,ch
  43b210:	popa   
  43b211:	pop    esi
  43b212:	std    
  43b213:	xor    ebp,DWORD PTR ds:0xa36018e6
  43b219:	int    0x85
  43b21b:	jmp    0x1812:0x1ce61c
  43b222:	adc    eax,0x26146ceb
  43b227:	je     0x43b29a
  43b229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b22a:	data16 or BYTE PTR [eax],al
  43b22d:	push   0x2a46830d
  43b232:	cli    
  43b233:	aam    0xfe
  43b235:	ins    DWORD PTR es:[edi],dx
  43b236:	sbb    eax,0x26e82314
  43b23b:	jmp    FWORD PTR [ebx+eiz*4-0x5ac8db93]
  43b242:	mov    ecx,0xf9e0c70f
  43b247:	(bad)  
  43b248:	cmp    esp,DWORD PTR [edi+eax*2-0x6283fec]
  43b24f:	int    0xb2
  43b251:	fld    QWORD PTR [ecx+0x40a64747]
  43b257:	add    al,0xc0
  43b259:	pop    ss
  43b25a:	add    DWORD PTR [ecx+0x0],ecx
	...
  43b270:	retf   0x7a20
  43b273:	jns    0x43b288
  43b275:	fld    DWORD PTR [ecx+0x40a5ff47]
  43b27b:	or     al,0x85
  43b27d:	xor    al,0xf6
  43b27f:	jno    0x43b284
  43b281:	mov    ds:0xac3b103e,al
  43b286:	inc    eax
  43b287:	adc    BYTE PTR [ebx],ch
  43b289:	rcl    BYTE PTR [eax+edx*2],cl
  43b28c:	in     eax,0x18
  43b28e:	stc    
  43b28f:	add    BYTE PTR [edi],0x22
  43b292:	add    BYTE PTR [esi-0x49],ch
  43b295:	or     eax,0xe65057ec
  43b29a:	loope  0x43b2ff
  43b29c:	push   cs
  43b29d:	shl    esi,cl
  43b29f:	mov    esi,ebx
  43b2a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b2a2:	div    BYTE PTR [ebp+0x37]
  43b2a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b2a6:	aas    
  43b2a7:	adc    al,0x8e
  43b2a9:	fadd   DWORD PTR [eax]
  43b2ab:	mov    al,ds:0x71903262
  43b2b0:	loope  0x43b324
  43b2b2:	xor    al,0x4f
  43b2b4:	out    0xf4,eax
  43b2b6:	aam    0x4f
  43b2b8:	(bad)  
  43b2ba:	in     al,0x2e
  43b2bc:	fwait
  43b2bd:	pop    edx
  43b2be:	inc    ebx
  43b2bf:	sar    DWORD PTR [ebp-0x4d],0x80
  43b2c3:	mov    edi,0x54ae11ee
  43b2c8:	clc    
  43b2c9:	sub    eax,0x9a9486ab
  43b2ce:	mov    ecx,0x83935d25
  43b2d3:	mov    ebx,0x0
	...
  43b2e8:	jle    0x43b2b4
  43b2ea:	std    
  43b2eb:	jmp    DWORD PTR [edx+0x32]
  43b2ee:	jl     0x43b369
  43b2f0:	outs   dx,BYTE PTR ds:[esi]
  43b2f1:	retfw  
  43b2f3:	ret    0xdea6
  43b2f6:	in     al,dx
  43b2f7:	add    esp,DWORD PTR [edx+0x32]
  43b2fa:	std    
  43b2fb:	test   BYTE PTR ds:0x8c52fc4e,ch
  43b301:	mov    ebp,0xda4223b8
  43b306:	push   ebp
  43b307:	std    
  43b308:	adc    al,0xdb
  43b30a:	pop    es
  43b30b:	mov    bl,0x46
  43b30d:	or     bh,dh
  43b30f:	jmp    DWORD PTR [edx-0x43]
  43b312:	mov    eax,0x98b95e23
  43b317:	and    edx,DWORD PTR [esi+0xa]
  43b31a:	retf   0xecfd
  43b31d:	add    bh,BYTE PTR [edx-0x6]
  43b320:	outs   dx,BYTE PTR ds:[esi]
  43b321:	aaa    
  43b322:	mov    al,0x51
  43b324:	out    dx,eax
  43b325:	(bad)
  43b328:	retf   0x3b3
  43b32b:	sti    
  43b32c:	int    0xa6
  43b32e:	jno    0x43b353
  43b330:	jbe    0x43b363
  43b332:	std    
  43b333:	(bad)  
  43b334:	jmp    0xc97429b3
  43b339:	fdiv   st,st(0)
  43b33b:	jl     0x43b2d8
  43b33d:	xor    BYTE PTR [ecx-0x28],dl
  43b340:	test   al,0x23
  43b342:	(bad)  
  43b343:	inc    ebx
  43b344:	cmp    BYTE PTR [ebx+0x1ce2ad2c],al
  43b34a:	xlat   BYTE PTR ds:[ebx]
  43b34b:	add    al,BYTE PTR [eax]
	...
  43b35d:	add    BYTE PTR [eax],al
  43b35f:	add    BYTE PTR [edx-0x27],ah
  43b362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b363:	test   DWORD PTR [ebp+0x619e1986],0x2e08e7af
  43b36d:	mov    eax,ds:0x4e6dbfd1
  43b372:	inc    eax
  43b373:	or     BYTE PTR [esi-0x43],cl
  43b376:	cmc    
  43b377:	ret    
  43b378:	pop    ebp
  43b379:	push   eax
  43b37a:	push   edi
  43b37b:	jle    0x43b3d0
  43b37d:	scas   al,BYTE PTR es:[edi]
  43b37e:	in     al,dx
  43b37f:	test   BYTE PTR [ebx+0x75054ed9],al
  43b385:	sub    ebp,DWORD PTR [ecx+edx*1-0x4f]
  43b389:	in     eax,dx
  43b38a:	mov    ebp,0x22d1bfcf
  43b38f:	into   
  43b390:	mov    ch,0xb3
  43b392:	mov    ds:0x8bcd2903,eax
  43b397:	cmc    
  43b398:	pop    ebp
  43b399:	fldenv [eax+0x1]
  43b39c:	fistp  WORD PTR [ecx]
  43b39e:	jnp    0x43b393
  43b3a0:	and    BYTE PTR [edx+0x2305d3d3],bl
  43b3a6:	out    0x7c,eax
  43b3a8:	imul   ecx,DWORD PTR [esi+0x21],0x7a
  43b3ac:	call   0xcf11:0xe4f4cec5
  43b3b3:	mov    cl,0x38
  43b3b5:	and    dl,dl
  43b3b7:	jnp    0x43b364
  43b3b9:	xor    DWORD PTR [ecx],ebx
  43b3bb:	xlat   BYTE PTR ds:[ebx]
  43b3bc:	fsub   DWORD PTR [edx]
  43b3be:	test   BYTE PTR [ebx+0x2b],0x7e
  43b3c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b3c3:	mov    cl,0x0
	...
  43b3d5:	add    BYTE PTR [eax],al
  43b3d7:	add    ah,bl
  43b3d9:	xor    eax,0xbe5a6800
  43b3de:	(bad)  
  43b3df:	call   0x72964645
  43b3e4:	push   edi
  43b3e5:	xchg   DWORD PTR [ebp+0x928e3a3],eax
  43b3eb:	ins    DWORD PTR es:[edi],dx
  43b3ec:	pop    ebx
  43b3ed:	and    bh,cl
  43b3ef:	jmp    0xc5144b0e
  43b3f4:	push   ecx
  43b3f5:	pop    ds
  43b3f6:	cdq    
  43b3f7:	jmp    0xe9fd0b88
  43b3fc:	popa   
  43b3fd:	fld    DWORD PTR [ebp-0x225c85f4]
  43b403:	call   0xd22c83da
  43b408:	mov    WORD PTR [edi],ds
  43b40a:	stc    
  43b40b:	bound  esi,QWORD PTR [esi+0x5d]
  43b40e:	repnz (bad) 
  43b411:	jp     0x43b413
  43b413:	jmp    0xf1bf5679
  43b418:	popa   
  43b419:	lods   eax,DWORD PTR ds:[esi]
  43b41a:	aas    
  43b41b:	ss rcr ecx,cl
  43b41e:	jge    0x43b3a4
  43b420:	push   esi
  43b421:	and    cl,bh
  43b423:	es push sp
  43b426:	mov    edx,DWORD PTR [ecx]
  43b428:	pop    esp
  43b429:	pop    ds
  43b42a:	stc    
  43b42b:	add    ebx,ebx
  43b42d:	fdivr  st,st(1)
  43b42f:	push   cs
  43b430:	jecxz  0x43b450
  43b432:	je     0x43b428
  43b434:	mov    esp,0x666c8b87
  43b439:	and    cl,bh
  43b43b:	test   BYTE PTR [eax],0x0
	...
  43b44e:	add    BYTE PTR [eax],al
  43b450:	pop    ecx
  43b451:	paddd  mm5,mm5
  43b454:	pop    esp
  43b455:	pop    ss
  43b456:	adc    ecx,0x67
  43b459:	pop    ds
  43b45a:	stc    
  43b45b:	in     eax,0x61
  43b45d:	fld    DWORD PTR [eax]
  43b45f:	ins    BYTE PTR es:[edi],dx
  43b460:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  43b462:	or     esi,DWORD PTR [esi]
  43b464:	add    al,0x55
  43b466:	mov    eax,DWORD PTR [eax]
  43b468:	mov    bl,0xdb
  43b46a:	idiv   bh
  43b46c:	mov    bl,0x91
  43b46e:	sti    
  43b46f:	(bad)  
  43b470:	hlt    
  43b471:	sahf   
  43b472:	aas    
  43b473:	adc    al,0xb0
  43b475:	loop   0x43b4eb
  43b477:	dec    edi
  43b478:	cmp    BYTE PTR [esi+0x643650c9],dl
  43b47e:	sub    DWORD PTR [eax+0x6],edx
  43b481:	imul   ebp,ecx,0x47bdc233
  43b487:	(bad)
  43b48a:	jge    0x43b44c
  43b48c:	(bad)  
  43b48d:	adc    al,0x63
  43b48f:	adc    BYTE PTR [esi],al
  43b491:	sbb    DWORD PTR fs:[eax+0x16],edx
  43b495:	sbb    ecx,ebp
  43b497:	push   eax
  43b498:	add    al,0x29
  43b49a:	dec    ebp
  43b49b:	push   ss
  43b49c:	mov    ebx,0x47c479d5
  43b4a1:	pop    edx
  43b4a2:	mov    ecx,0xfd436975
  43b4a7:	dec    edi
  43b4a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b4a9:	or     DWORD PTR [ecx+0x6e],esi
  43b4ac:	(bad)  
  43b4ad:	fdivr  st(5),st
  43b4af:	adc    eax,0x392b2f
	...
  43b4c8:	mov    esi,0xb8056d9c
  43b4cd:	cmp    al,0xf9
  43b4cf:	jmp    0x504b:0x85b90c39
  43b4d6:	std    
  43b4d7:	mov    BYTE PTR [ebx],bh
  43b4d9:	les    ecx,FWORD PTR [eax*4-0x7501b6c0]
  43b4e0:	xor    eax,0xf42e5dc4
  43b4e5:	(bad)  
  43b4e6:	sub    al,al
  43b4e8:	in     al,0x76
  43b4ea:	push   edx
  43b4eb:	leave  
  43b4ec:	mov    ecx,0xf28af91d
  43b4f1:	outs   dx,BYTE PTR ds:[esi]
  43b4f2:	adc    BYTE PTR [ecx+0x62],0x1e
  43b4f6:	adc    eax,0x30f849d
  43b4fb:	xchg   dl,dl
  43b4fd:	lods   eax,DWORD PTR ds:[esi]
  43b4fe:	or     dh,BYTE PTR [ebx+0x78]
  43b501:	mov    WORD PTR [eax],es
  43b503:	bound  sp,DWORD PTR [edi-0x37]
  43b507:	ja     0x43b54d
  43b509:	test   BYTE PTR [ebx+edi*8],0x57
  43b50d:	into   
  43b50e:	out    dx,al
  43b50f:	aas    
  43b510:	bound  esi,QWORD PTR [ebp-0x4c988cbc]
  43b516:	in     al,0xff
  43b518:	mov    BYTE PTR [eax+edx*8],dh
  43b51b:	mov    edi,0x39072e7
  43b520:	(bad)  [edx-0x5d]
  43b523:	mov    esi,0x1f1c78e9
  43b528:	inc    esp
  43b529:	scas   eax,DWORD PTR es:[edi]
  43b52a:	add    ebp,DWORD PTR [esi]
	...
  43b540:	mov    ds:0xd9544018,al
  43b545:	mov    ?,WORD PTR [ebp-0x15]
  43b548:	push   es
  43b549:	xor    al,0xfd
  43b54b:	(bad)  
  43b54c:	jmp    0x53ca6044
  43b551:	aas    
  43b552:	jp     0x43b545
  43b554:	into   
  43b555:	js     0x43b527
  43b557:	cli    
  43b558:	les    ebp,FWORD PTR [ecx]
  43b55a:	ret    
  43b55b:	jae    0x43b5d2
  43b55d:	jge    0x43b5c8
  43b55f:	pop    edi
  43b560:	das    
  43b561:	test   DWORD PTR [ebx],0x2ca1a86
  43b567:	push   eax
  43b568:	bound  esi,QWORD PTR [edx]
  43b56a:	jb     0x43b5b8
  43b56c:	push   cs
  43b56d:	push   0xa9167c76
  43b572:	cmp    ebx,0xf9724cfa
  43b578:	std    
  43b579:	lods   eax,DWORD PTR ds:[esi]
  43b57a:	inc    esp
  43b57b:	jae    0x43b5ca
  43b57d:	das    
  43b57e:	mov    bh,bl
  43b580:	(bad)  
  43b582:	jl     0x43b527
  43b584:	out    0x1f,al
  43b586:	fiadd  DWORD PTR [esi+edx*2]
  43b589:	and    eax,0x1fd53790
  43b58e:	out    0xac,eax
  43b590:	(bad)
  43b593:	add    eax,0x102c53c8
  43b598:	lds    ebx,FWORD PTR [ebx]
  43b59a:	add    al,0x5
  43b59c:	mov    eax,0xe91b9953
  43b5a1:	in     eax,dx
  43b5a2:	mov    ds:0x4,al
	...
  43b5b7:	add    BYTE PTR [eax],cl
  43b5b9:	jg     0x43b56b
  43b5bb:	inc    ecx
  43b5bc:	popa   
  43b5bd:	fnstcw WORD PTR [ecx+edi*2]
  43b5c0:	mov    DWORD PTR [ecx+0x7b],ebx
  43b5c3:	cmp    esp,DWORD PTR [esi-0x27]
  43b5c6:	out    0x80,eax
  43b5c8:	(bad)  
  43b5c9:	sbb    al,0xe7
  43b5cb:	jbe    0x43b5fb
  43b5cd:	sbb    eax,0x1fbf3b7f
  43b5d2:	push   0x7f
  43b5d4:	lods   eax,DWORD PTR ds:[esi]
  43b5d5:	iret   
  43b5d6:	imul   eax,DWORD PTR [ebx-0x4f18e09b],0xffffffb3
  43b5dd:	xor    esp,ebp
  43b5df:	push   ebp
  43b5e0:	pop    eax
  43b5e1:	pop    ds
  43b5e2:	pop    esi
  43b5e3:	sub    esp,esp
  43b5e5:	sub    bh,BYTE PTR [ecx]
  43b5e7:	inc    eax
  43b5e8:	push   ebp
  43b5e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b5ea:	in     al,0x80
  43b5ec:	and    al,0xca
  43b5ee:	ds scas al,BYTE PTR es:[edi]
  43b5f0:	xor    ebx,DWORD PTR [ebx]
  43b5f2:	call   0xf8750c85
  43b5f7:	aam    0x28
  43b5f9:	pop    ds
  43b5fa:	ins    BYTE PTR es:[edi],dx
  43b5fb:	jbe    0x43b652
  43b5fd:	and    edx,DWORD PTR [edx]
  43b5ff:	add    al,0xfd
  43b601:	jmp    0x5b4bba67
  43b606:	cs add bh,ch
  43b609:	loop   0x43b5fc
  43b60b:	aas    
  43b60c:	jmp    FWORD PTR [edx+0x859e300]
  43b612:	add    cl,ch
  43b614:	popa   
  43b615:	sahf   
  43b616:	fucom  st(4)
  43b618:	cmc    
  43b619:	in     eax,dx
  43b61a:	repnz stos BYTE PTR es:[edi],al
	...
  43b630:	push   0xffffffa5
  43b632:	push   es
  43b633:	shl    DWORD PTR [edx],0x1e
  43b636:	stc    
  43b637:	jmp    0xd338b320
  43b63c:	sub    DWORD PTR [ebx],0xffffffbd
  43b63f:	sub    DWORD PTR [ebx],edi
  43b641:	in     eax,dx
  43b642:	mov    esp,DWORD PTR [edx+edi*4]
  43b645:	xor    eax,ebp
  43b647:	fldenv [eax+0x23]
  43b64a:	call   0x11d0612
  43b64f:	ins    BYTE PTR es:[edi],dx
  43b650:	xor    esp,DWORD PTR ds:0x311ea27d
  43b656:	or     bh,al
  43b658:	pusha  
  43b659:	and    esi,DWORD PTR ds:0x2dc90aa7
  43b65f:	mov    al,0xc
  43b661:	aad    0x8b
  43b663:	sbb    al,0x76
  43b665:	fiadd  WORD PTR [edi+0x4d316e0c]
  43b66b:	xchg   edx,eax
  43b66c:	popa   
  43b66d:	and    ebx,DWORD PTR [edx-0x3e]
  43b670:	repnz xchg ecx,eax
  43b672:	cld    
  43b673:	inc    ecx
  43b674:	mov    esi,DWORD PTR [edi-0x7]
  43b677:	dec    esi
  43b678:	xchg   ebp,eax
  43b679:	sbb    edi,eax
  43b67b:	sub    ebx,DWORD PTR [edx-0x27]
  43b67e:	cmp    ah,0x55
  43b681:	add    BYTE PTR [ecx+ebp*8+0x5e],0xab
  43b686:	xor    eax,0xf9ec8897
  43b68b:	mov    esi,0x29688888
  43b690:	imul   ebx,esp,0xbe00
	...
  43b6a6:	add    BYTE PTR [eax],al
  43b6a8:	mov    eax,0x760d1320
  43b6ad:	cdq    
  43b6ae:	add    BYTE PTR [eax],al
  43b6b0:	nop
  43b6b1:	and    eax,0xfb77f67d
  43b6b6:	push   0xda1888
  43b6bb:	push   esi
  43b6bc:	cld    
  43b6bd:	rol    BYTE PTR [edx+edx*1-0x3f822ac5],0x37
  43b6c5:	int    0x4f
  43b6c7:	push   esi
  43b6c8:	lods   al,BYTE PTR ds:[esi]
  43b6c9:	shl    BYTE PTR [eax],0x11
  43b6cc:	jnp    0x43b6a3
  43b6ce:	dec    esi
  43b6cf:	jmp    DWORD PTR [esi-0x34bff58b]
  43b6d5:	mov    edx,0x4e56c356
  43b6da:	in     al,dx
  43b6db:	sub    edi,0xffffffe9
  43b6de:	test   DWORD PTR [ebp-0x15],edx
  43b6e1:	jg     0x43b745
  43b6e3:	jnp    0x43b6f5
  43b6e5:	and    eax,0x8a30e851
  43b6ea:	add    BYTE PTR [eax],al
  43b6ec:	push   ebp
  43b6ed:	test   BYTE PTR [ebx],ch
  43b6ef:	leave  
  43b6f0:	repz xchg edi,eax
  43b6f2:	xchg   ebp,eax
  43b6f3:	(bad)  
  43b6f4:	cld    
  43b6f5:	push   ebp
  43b6f6:	shl    BYTE PTR [ebp+edx*4+0x48],0x3d
  43b6fb:	ror    BYTE PTR [ebx+0x4e],1
  43b6fe:	into   
  43b6ff:	mov    ebp,DWORD PTR ds:0xbc9e4b32
  43b705:	xlat   BYTE PTR ds:[ebx]
  43b706:	test   al,al
  43b708:	aaa    
  43b709:	shr    BYTE PTR [ebx],cl
  43b70b:	rol    BYTE PTR [eax],0x0
	...
  43b71e:	add    BYTE PTR [eax],al
  43b720:	sti    
  43b721:	sub    edi,edx
  43b723:	xor    bh,BYTE PTR [ebx-0x46]
  43b726:	rol    ebx,0xd6
  43b729:	dec    ebx
  43b72a:	in     al,dx
  43b72b:	and    DWORD PTR [edi-0x341386e0],0xffffffd6
  43b732:	add    BYTE PTR [eax],al
  43b734:	rcr    DWORD PTR [ecx-0x7b],1
  43b737:	push   esp
  43b738:	daa    
  43b739:	stc    
  43b73a:	push   ecx
  43b73b:	call   0x90fea2
  43b740:	bound  edi,QWORD PTR [ebp+0x41]
  43b743:	and    al,0x66
  43b745:	dec    eax
  43b746:	jns    0x43b6d3
  43b748:	xchg   esi,eax
  43b749:	push   ss
  43b74a:	sub    DWORD PTR [edi-0x15],edx
  43b74d:	cs and eax,ebp
  43b750:	jp     0x43b794
  43b752:	std    
  43b753:	call   edi
  43b755:	out    0x28,al
  43b757:	dec    eax
  43b758:	retf   0xffa2
  43b75b:	stc    
  43b75c:	aad    0xae
  43b75e:	les    esi,FWORD PTR [ebx+ecx*4-0x51]
  43b762:	push   0x8a325e24
  43b767:	inc    esp
  43b768:	xchg   dl,ch
  43b76a:	test   DWORD PTR [esi+edi*2+0x3a],eax
  43b76e:	mov    al,BYTE PTR [esi+eax*4]
  43b771:	jge    0x43b7cb
  43b773:	and    al,0x7a
  43b775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b776:	push   eax
  43b777:	and    al,0x66
  43b779:	jae    0x43b7c3
  43b77b:	and    al,0x66
  43b77d:	sub    eax,0xb962fffd
  43b782:	dec    eax
  43b783:	and    al,0x0
	...
  43b795:	add    BYTE PTR [eax],al
  43b797:	add    BYTE PTR [edx+0x6b],dh
  43b79a:	dec    eax
  43b79b:	and    al,0x56
  43b79d:	xor    ebp,edi
  43b79f:	jmp    DWORD PTR [edx+0x6b]
  43b7a2:	dec    eax
  43b7a3:	and    al,0x4a
  43b7a5:	xor    ch,bh
  43b7a7:	jmp    DWORD PTR [edx-0x76]
  43b7aa:	xor    bl,BYTE PTR [ebx-0x1c7484a4]
  43b7b0:	mov    bh,0xef
  43b7b2:	push   ecx
  43b7b3:	test   DWORD PTR [esi],edi
  43b7b5:	mov    cl,0xf0
  43b7b7:	or     BYTE PTR [eax+0x32],ah
  43b7ba:	std    
  43b7bb:	mov    ch,bh
  43b7bd:	cdq    
  43b7be:	stc    
  43b7bf:	stc    
  43b7c0:	xor    eax,0x2df93b9a
  43b7c5:	jmp    0x43b74f
  43b7c7:	shr    BYTE PTR [esi-0x16711127],0x20
  43b7ce:	sbb    al,0x1
  43b7d0:	sbb    BYTE PTR [ecx],dh
  43b7d2:	(bad)
  43b7d5:	sbb    al,0x20
  43b7d7:	lds    eax,FWORD PTR [edi-0x6eab1cd3]
  43b7dd:	push   eax
  43b7de:	mov    esp,DWORD PTR [edi]
  43b7e0:	inc    esi
  43b7e1:	sbb    DWORD PTR [esi+0x78],0x46
  43b7e5:	in     eax,dx
  43b7e6:	xchg   edx,eax
  43b7e7:	mov    WORD PTR [eax+0x50],fs
  43b7ea:	loopne 0x43b77a
  43b7ec:	cs cmc 
  43b7ee:	not    DWORD PTR [edx+0x31]
  43b7f1:	scas   eax,DWORD PTR es:[edi]
  43b7f2:	shr    BYTE PTR [ebp+0x62],cl
  43b7f5:	scas   eax,DWORD PTR es:[edi]
  43b7f6:	call   0x70429754
  43b7fb:	jg     0x43b7fd
	...
  43b80d:	add    BYTE PTR [eax],al
  43b80f:	add    BYTE PTR [esi+0x1253bae9],al
  43b815:	push   esi
  43b816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43b817:	adc    cl,ah
  43b819:	sub    ah,bh
  43b81b:	add    esp,DWORD PTR [edx+0x50]
  43b81e:	jmp    0xf438e6b1
  43b823:	push   edx
  43b824:	or     dl,ch
  43b826:	jbe    0x43b86b
  43b828:	bound  ebx,QWORD PTR [esp+edx*1]
  43b82b:	or     al,0x30
  43b82d:	sbb    al,0x17
  43b82f:	sub    al,0xe1
  43b831:	sbb    dl,ch
  43b833:	xchg   cl,cl
  43b835:	fsub   st,st(7)
  43b837:	add    esp,edi
  43b839:	xchg   esp,eax
  43b83a:	ret    
  43b83b:	pop    ss
  43b83c:	fld    DWORD PTR [ebx+ecx*1-0x4a2e18dc]
  43b843:	ins    DWORD PTR es:[edi],dx
  43b844:	sub    BYTE PTR [edi+0x494b53f3],0x1b
  43b84b:	add    esp,DWORD PTR [edx-0x27]
  43b84e:	ins    BYTE PTR es:[edi],dx
  43b84f:	ret    
  43b850:	imul   edx,DWORD PTR [esp+eiz*2+0x3],0x62
  43b855:	fld    DWORD PTR [eax]
  43b857:	or     BYTE PTR [edx-0x620fe30b],bl
  43b85d:	cmc    
  43b85e:	and    BYTE PTR [edi-0x3a8bab6f],bl
  43b864:	jne    0x43b852
  43b866:	jmp    0x43b8ca
  43b868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b869:	cmc    
  43b86a:	and    al,0x62
  43b86c:	test   ecx,esi
  43b86e:	sbb    al,0x6c
  43b870:	bound  esp,QWORD PTR [eax+ecx*2+0x93]
	...
  43b887:	add    BYTE PTR [ecx-0x26230678],ah
  43b88d:	int3   
  43b88e:	inc    eax
  43b88f:	jmp    0x22b7d270
  43b894:	dec    eax
  43b895:	fldenv [esi-0x22]
  43b898:	jmp    0xbee3e5a5
  43b89d:	outs   dx,BYTE PTR ds:[esi]
  43b89e:	jbe    0x43b86e
  43b8a0:	lds    edx,FWORD PTR [eax+edi*8+0x6c]
  43b8a4:	mov    ebp,0x12721fa5
  43b8a9:	cmc    
  43b8aa:	cmp    al,0x43
  43b8ac:	lods   eax,DWORD PTR ds:[esi]
  43b8ad:	push   esp
  43b8ae:	rol    ecx,1
  43b8b0:	es cdq 
  43b8b2:	add    cl,ch
  43b8b4:	in     eax,0x19
  43b8b6:	je     0x43b8b1
  43b8b8:	call   0xfc18dd4a
  43b8bd:	sbb    DWORD PTR [edi+0x99f089],esi
  43b8c3:	xchg   ecx,eax
  43b8c4:	or     bl,BYTE PTR [ecx+0x10e8e900]
  43b8ca:	call   0xf963f19a
  43b8cf:	daa    
  43b8d0:	loope  0x43b8e8
  43b8d2:	inc    eax
  43b8d3:	and    bl,dl
  43b8d5:	cmc    
  43b8d6:	and    bl,bl
  43b8d8:	add    edx,DWORD PTR [esp+esi*2+0xd]
  43b8dc:	xchg   esi,eax
  43b8dd:	push   esp
  43b8de:	ins    BYTE PTR es:[edi],dx
  43b8df:	add    eax,0x7c548a
  43b8e4:	outs   dx,DWORD PTR ds:[esi]
  43b8e5:	mov    ebp,0x89c60783
  43b8ea:	and    al,0x20
	...
  43b900:	retf   0xf782
  43b903:	push   eax
  43b904:	arpl   WORD PTR [esi+0x44],cx
  43b907:	and    al,0x1f
  43b909:	xchg   BYTE PTR [ebx+0x8847408],al
  43b90f:	mov    edi,ebp
  43b911:	or     BYTE PTR [esi-0x1],0xcb
  43b915:	rol    DWORD PTR [ebx-0x65021fa],0xfe
  43b91c:	outs   dx,DWORD PTR ds:[esi]
  43b91d:	repnz sbb BYTE PTR [esi-0xc],dl
  43b921:	test   DWORD PTR [ebp+eax*4+0x3b],edx
  43b925:	retf   0x1c84
  43b928:	les    ebx,FWORD PTR [edx]
  43b92a:	idiv   edi
  43b92c:	das    
  43b92d:	icebp  
  43b92e:	adc    BYTE PTR [ebx+0x50f783bd],cl
  43b934:	xchg   ebx,eax
  43b935:	dec    esi
  43b936:	jl     0x43b95c
  43b938:	arpl   WORD PTR [esi-0x2],cx
  43b93b:	push   esi
  43b93c:	adc    ebp,edx
  43b93e:	dec    esi
  43b93f:	dec    DWORD PTR [ebx-0x37]
  43b942:	jge    0x43b904
  43b944:	outs   dx,BYTE PTR ds:[esi]
  43b945:	mov    bl,0x31
  43b947:	inc    edi
  43b948:	xchg   ebx,eax
  43b949:	fwait
  43b94a:	pop    ecx
  43b94b:	mov    ecx,DWORD PTR [eax-0x74dbb3b8]
  43b951:	test   BYTE PTR [edi-0x1],cl
  43b954:	ins    BYTE PTR es:[edi],dx
  43b955:	ror    DWORD PTR [ebx-0x1],1
  43b958:	pop    ebx
  43b959:	xchg   ebp,eax
  43b95a:	jge    0x43b91c
  43b95c:	outs   dx,BYTE PTR ds:[esi]
  43b95d:	mov    eax,DWORD PTR [ebx-0x7c42608c]
  43b963:	add    eax,DWORD PTR [eax]
	...
  43b975:	add    BYTE PTR [eax],al
  43b977:	add    BYTE PTR [esi],al
  43b979:	mov    ah,BYTE PTR [eax+esi*1]
  43b97c:	sbb    al,BYTE PTR [ebx-0x1ed30100]
  43b982:	dec    ebx
  43b983:	jmp    DWORD PTR [edx+0x52]
  43b986:	adc    eax,0x202e2283
  43b98b:	stc    
  43b98c:	mov    dh,0xe6
  43b98e:	inc    eax
  43b98f:	test   DWORD PTR [ecx],edx
  43b991:	jo     0x43b9eb
  43b993:	stc    
  43b994:	mov    dh,0xe6
  43b996:	inc    eax
  43b997:	test   DWORD PTR [ebx+ebx*4],edx
  43b99a:	nop
  43b99b:	cli    
  43b99c:	sbb    eax,0x3e4486c0
  43b9a1:	xor    cl,BYTE PTR [ebp-0x7b]
  43b9a4:	pop    edx
  43b9a5:	out    dx,eax
  43b9a6:	push   esp
  43b9a7:	or     cl,bl
  43b9a9:	add    edx,DWORD PTR [edx-0x7]
  43b9ac:	jbe    0x43b9d4
  43b9ae:	adc    DWORD PTR [ebp-0xb],ecx
  43b9b1:	jb     0x43b9f4
  43b9b3:	and    DWORD PTR [edx],0xffffff97
  43b9b6:	mov    ebp,0xd1e6ef9
  43b9bb:	test   DWORD PTR [ecx-0x2d],esp
  43b9be:	sti    
  43b9bf:	push   eax
  43b9c0:	sub    dl,bh
  43b9c2:	pop    edx
  43b9c3:	pop    ebx
  43b9c4:	sub    DWORD PTR [ebx+0x12a01cc8],eax
  43b9ca:	std    
  43b9cb:	push   edx
  43b9cc:	jmp    0x4b3036ff
  43b9d1:	add    ebp,edi
  43b9d3:	(bad)  
  43b9d4:	call   0x6284482f
  43b9d9:	lock push ebx
  43b9db:	mov    bh,0x0
	...
  43b9ed:	add    BYTE PTR [eax],al
  43b9ef:	add    BYTE PTR [esi],ah
  43b9f1:	xchg   ebx,eax
  43b9f2:	inc    esp
  43b9f3:	add    BYTE PTR [edx-0x7206f539],cl
  43b9f9:	jnp    0x43b9ef
  43b9fb:	or     DWORD PTR [edi+esi*1+0x2629481],0xfffffffd
  43ba03:	sub    al,0x75
  43ba05:	out    dx,eax
  43ba06:	test   DWORD PTR [ebx+0x6e],edi
  43ba09:	jnp    0x43ba15
  43ba0b:	push   ecx
  43ba0c:	or     al,0x87
  43ba0e:	dec    ebp
  43ba0f:	or     al,0xe7
  43ba11:	fsub   DWORD PTR [edi]
  43ba13:	ja     0x43b9ca
  43ba15:	fs loope 0x43b9a6
  43ba18:	cdq    
  43ba19:	adc    DWORD PTR [eax-0x4e2443ac],edi
  43ba1f:	cld    
  43ba20:	xchg   edx,eax
  43ba21:	in     eax,dx
  43ba22:	ins    BYTE PTR es:[edi],dx
  43ba23:	les    esi,FWORD PTR [ecx-0x20a78257]
  43ba29:	cwde   
  43ba2a:	out    0xba,eax
  43ba2c:	imul   esp,DWORD PTR ds:[edi-0xe12f5fd],0xfffffffc
  43ba34:	sbb    esp,DWORD PTR [edi+ebx*1-0x79]
  43ba38:	or     ecx,DWORD PTR [ebp+0x15a18ed5]
  43ba3e:	mov    bh,0x8e
  43ba40:	loope  0x43bab2
  43ba42:	add    ebp,edi
  43ba44:	sti    
  43ba45:	test   al,0x6c
  43ba47:	inc    edi
  43ba48:	mov    dl,0xa8
  43ba4a:	bnd jbe 0x43ba37
  43ba4d:	arpl   WORD PTR [ecx],dx
  43ba4f:	mov    DWORD PTR [ebx+0xb42c1f],ebp
	...
  43ba65:	add    BYTE PTR [eax],al
  43ba67:	add    BYTE PTR [esi],bl
  43ba69:	(bad)  
  43ba6b:	add    esp,DWORD PTR [ebx-0x340290a3]
  43ba71:	pop    ss
  43ba72:	out    dx,eax
  43ba73:	add    ah,BYTE PTR [edx-0x27]
  43ba76:	iret   
  43ba77:	fidivr DWORD PTR [ecx+0x6388ba17]
  43ba7d:	mov    al,0xb2
  43ba7f:	push   ebx
  43ba80:	pop    edx
  43ba81:	fs and al,0xfc
  43ba84:	xor    ah,BYTE PTR [edi+ebp*8-0x4]
  43ba88:	and    eax,0x30056ee1
  43ba8d:	sbb    BYTE PTR [edi],dh
  43ba8f:	or     al,0x7a
  43ba91:	retf   
  43ba92:	cmp    al,0xfd
  43ba94:	jnp    0x43ba6a
  43ba96:	jmp    0x43baea
  43ba98:	fbld   TBYTE PTR [ebp+0xfa2187b]
  43ba9e:	add    BYTE PTR [ecx-0x16ffa3a4],dl
  43baa4:	popa   
  43baa5:	loopne 0x43ba58
  43baa7:	cmp    DWORD PTR [ecx-0x6a],ecx
  43baaa:	cmc    
  43baab:	pop    esi
  43baac:	dec    esi
  43baad:	mov    cl,0x5a
  43baaf:	and    BYTE PTR [edx],ah
  43bab1:	xchg   edi,eax
  43bab2:	in     al,dx
  43bab3:	imul   esp,DWORD PTR [edx-0x27],0xab8c9a00
  43baba:	push   ecx
  43babb:	jo     0x43ba5a
  43babd:	mov    ebp,0x16617218
  43bac2:	stc    
  43bac3:	jmp    0xcdd01d7a
  43bac8:	in     eax,dx
  43bac9:	fld    DWORD PTR [eax]
  43bacb:	jmp    0x43bad0
	...
  43bae0:	mov    al,0x10
  43bae2:	mov    ah,0xcd
  43bae4:	in     eax,0x14
  43bae6:	stc    
  43bae7:	jmp    0x7295c2d6
  43baec:	pop    edi
  43baed:	adc    BYTE PTR [eax-0x2b],dl
  43baf0:	xor    dl,BYTE PTR [eax]
  43baf2:	sub    DWORD PTR [ecx],0x6d
  43baf5:	fld    QWORD PTR [ebp+0x51e4c5fe]
  43bafb:	push   ebx
  43bafc:	fldenv [edx-0x6c]
  43baff:	add    eax,0xe900d9ee
  43bb04:	mov    WORD PTR [esi],ds
  43bb06:	call   0xf953f98d
  43bb0b:	jb     0x43bad3
  43bb0d:	pop    esp
  43bb0e:	or     bl,BYTE PTR [edx]
  43bb10:	fistp  DWORD PTR [ebp+0x24]
  43bb13:	pop    ebp
  43bb14:	pop    edi
  43bb15:	fld    DWORD PTR [eax]
  43bb17:	sbb    DWORD PTR [ecx+0x5d51244d],ebx
  43bb1d:	fld    DWORD PTR [eax]
  43bb1f:	aaa    
  43bb20:	mov    DWORD PTR [esi-0x726193ec],esp
  43bb26:	add    al,0x62
  43bb28:	cdq    
  43bb29:	cld    
  43bb2a:	or     al,0x0
  43bb2c:	push   esp
  43bb2d:	xchg   edi,esi
  43bb2f:	lea    edx,[edi]
  43bb31:	mov    ecx,0xda7b0198
  43bb36:	sub    ecx,ecx
  43bb38:	jecxz  0x43bad0
  43bb3a:	js     0x43bb3b
  43bb3c:	mov    esp,0x3d8bd866
  43bb41:	add    BYTE PTR [eax],0x1
	...
  43bb58:	cmp    ebx,edx
  43bb5a:	test   DWORD PTR [edi+eiz*2+0x4bfffa69],eax
  43bb61:	stos   BYTE PTR es:[edi],al
  43bb62:	div    DWORD PTR [edi+eiz*2+0x3bfffb41]
  43bb69:	test   al,0xf7
  43bb6b:	push   ecx
  43bb6c:	aaa    
  43bb6d:	pop    ecx
  43bb6e:	shl    BYTE PTR [ebp+0x18],0xab
  43bb72:	(bad)  
  43bb73:	(bad)  
  43bb74:	jle    0x43bbdf
  43bb76:	and    al,0x98
  43bb78:	stc    
  43bb79:	fld    DWORD PTR [eax]
  43bb7b:	xor    eax,DWORD PTR [edx+0x5]
  43bb7e:	inc    ecx
  43bb7f:	js     0x43bbdd
  43bb81:	adc    al,BYTE PTR [ebx-0x7a1c8f08]
  43bb87:	inc    esp
  43bb88:	pop    ss
  43bb89:	jmp    0x39c:0xb997ff50
  43bb90:	retf   
  43bb91:	(bad)  [esi-0x1]
  43bb94:	mov    ch,ch
  43bb96:	or     DWORD PTR [edi+edx*2-0x13],0x2b
  43bb9b:	rol    BYTE PTR [esi+0x1a],cl
  43bb9e:	add    DWORD PTR [esi],0xffffffac
  43bba1:	cwde   
  43bba2:	ret    0x7f89
  43bba5:	mov    ecx,0xb97f8d10
  43bbaa:	adc    al,0x51
  43bbac:	int3   
  43bbad:	inc    ebp
  43bbae:	and    al,0xa0
  43bbb0:	mov    cl,bl
  43bbb2:	add    BYTE PTR [esi-0x14],dl
  43bbb5:	test   eax,0xbc628b10
  43bbba:	and    BYTE PTR [eax+eax*1],dl
	...
  43bbcd:	add    BYTE PTR [eax],al
  43bbcf:	add    BYTE PTR [ecx],dh
  43bbd1:	push   edx
  43bbd2:	add    al,0x65
  43bbd5:	(bad)
  43bbd8:	push   ds
  43bbd9:	sbb    al,0x9
  43bbdb:	mov    ecx,DWORD PTR [esi]
  43bbdd:	and    al,0x21
  43bbdf:	mov    bh,0xf6
  43bbe1:	add    bh,ch
  43bbe3:	dec    DWORD PTR [edx+0x60]
  43bbe6:	inc    ecx
  43bbe7:	add    BYTE PTR [edx-0x7b],ah
  43bbea:	dec    ecx
  43bbeb:	and    al,0x66
  43bbed:	imul   ebx,DWORD PTR [eax-0x1afd9e00],0xfd02a693
  43bbf7:	test   dh,dh
  43bbf9:	fisubr WORD PTR [ebp+edi*8-0x5743fcdb]
  43bc00:	jmp    0xc488:0x1582fd42
  43bc07:	or     DWORD PTR [edi+0x23854dbb],esp
  43bc0d:	xchg   dl,bl
  43bc0f:	or     DWORD PTR [edi+0x3e7c82bf],esp
  43bc15:	cli    
  43bc16:	cld    
  43bc17:	dec    edi
  43bc18:	fld    st(1)
  43bc1a:	mov    BYTE PTR [esi+edi*1+0x26],dl
  43bc1e:	push   es
  43bc1f:	inc    ebx
  43bc20:	mov    al,ds:0x7e74f672
  43bc25:	fidivr WORD PTR [ecx-0x15]
  43bc28:	pop    ebp
  43bc29:	mov    ebp,0xb6c54fc1
  43bc2e:	and    BYTE PTR [edi+ebp*8],ch
  43bc31:	mov    esi,0x4420
	...
  43bc46:	add    BYTE PTR [eax],al
  43bc48:	adc    bl,BYTE PTR [ebx]
  43bc4a:	cs stc 
  43bc4c:	push   edi
  43bc4d:	mov    esi,0xf2624012
  43bc52:	dec    esi
  43bc53:	call   0x487863
  43bc58:	loope  0x43bc33
  43bc5a:	stos   DWORD PTR es:[edi],eax
  43bc5b:	and    bh,ah
  43bc5d:	es (bad) 
  43bc5f:	das    
  43bc60:	cmp    dl,BYTE PTR [edx+edx*4]
  43bc63:	lea    esp,[edi+0x7b2bb901]
  43bc69:	adc    al,0x6e
  43bc6b:	leave  
  43bc6c:	jp     0x43bc2a
  43bc6e:	iret   
  43bc6f:	clc    
  43bc70:	imul   esi,DWORD PTR [ecx+edx*1-0x5ca548a9],0xffffff84
  43bc78:	push   edi
  43bc79:	adc    al,0xe7
  43bc7b:	lds    ebp,FWORD PTR [edx-0x27]
  43bc7e:	push   0xe7d7c6e8
  43bc83:	add    ebp,DWORD PTR [edi-0x13af4e52]
  43bc89:	mov    esp,0x52624456
  43bc8e:	repz xchg esp,eax
  43bc90:	mov    ds:0x6e1e3fd9,al
  43bc95:	adc    al,0x2a
  43bc97:	lea    ebx,[edx]
  43bc99:	bound  esp,QWORD PTR [ebx+0x1a5e421f]
  43bc9f:	or     esi,ebx
  43bca1:	mov    ds:0x606203e5,al
  43bca6:	fisubr DWORD PTR [ebp-0xb]
  43bca9:	(bad)  
  43bcaa:	stc    
  43bcab:	push   ecx
	...
  43bcc0:	xchg   ebx,eax
  43bcc1:	bound  esi,QWORD PTR [ebx+0x1f]
  43bcc4:	inc    edx
  43bcc5:	adc    al,0x98
  43bcc7:	inc    ebx
  43bcc8:	loope  0x43bce2
  43bcca:	fidivr DWORD PTR [esi+0x7e]
  43bccd:	xlat   BYTE PTR ds:[ebx]
  43bcce:	out    0x3,eax
  43bcd0:	out    0xdb,eax
  43bcd2:	ins    BYTE PTR es:[edi],dx
  43bcd3:	inc    edi
  43bcd4:	jle    0x43bccb
  43bcd6:	cmp    BYTE PTR [esi+0x68],ch
  43bcd9:	lods   al,BYTE PTR ds:[esi]
  43bcda:	retf   0x4e53
  43bcdd:	pop    esi
  43bcde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bcdf:	or     cl,ah
  43bce1:	jecxz  0x43bcc8
  43bce3:	add    esp,DWORD PTR [edx+0x60]
  43bce6:	add    BYTE PTR ds:0x158bf542,ch
  43bcec:	inc    edx
  43bced:	jmp    0xa97bae77
  43bcf2:	stc    
  43bcf3:	cmp    BYTE PTR [edx+0x58],dh
  43bcf6:	shl    dh,0xfc
  43bcf9:	(bad)  
  43bcfa:	(bad)  
  43bcfb:	call   0x733d8361
  43bd00:	sub    eax,0x156c10bd
  43bd05:	mov    ebp,0xa3696218
  43bd0a:	push   eax
  43bd0b:	outs   dx,BYTE PTR ds:[esi]
  43bd0c:	mov    al,0xd1
  43bd0e:	sub    DWORD PTR [ecx],0x5a
  43bd11:	push   esi
  43bd12:	mov    al,0xe8
  43bd14:	popa   
  43bd15:	fnstenv [edi]
  43bd17:	aad    0x5d
  43bd19:	icebp  
  43bd1a:	or     DWORD PTR [ebp+0x3],esp
  43bd1d:	adc    edi,ecx
  43bd1f:	jmp    0xd9685b02
	...
  43bd38:	mov    ecx,0x61e8ffd9
  43bd3d:	pop    esp
  43bd3e:	or     BYTE PTR [ebp+eiz*8-0x43],bl
  43bd42:	mov    ecx,gs
  43bd44:	popa   
  43bd45:	(bad)  [esi-0x6f]
  43bd48:	adc    DWORD PTR ds:0x1091fb34,edx
  43bd4e:	dec    edi
  43bd4f:	cmc    
  43bd50:	je     0x43bd6b
  43bd52:	je     0x43bd41
  43bd54:	fiadd  WORD PTR [eax]
  43bd56:	in     eax,0xda
  43bd58:	xchg   edx,eax
  43bd59:	jnp    0x43bd54
  43bd5b:	fs in  eax,dx
  43bd5d:	mov    ebp,0xd961e990
  43bd62:	sub    eax,0x7246beb0
  43bd67:	fmulp  st(5),st
  43bd69:	pop    esp
  43bd6a:	call   0x1100e7d1
  43bd6f:	inc    ecx
  43bd70:	pop    esi
  43bd71:	adc    bh,cl
  43bd73:	add    BYTE PTR [ebx+0x3f8d095f],bh
  43bd79:	mov    ecx,0xd68b018c
  43bd7e:	push   eax
  43bd7f:	push   0x142ad6db
  43bd84:	dec    edx
  43bd85:	or     cl,BYTE PTR [edx+0x14]
  43bd88:	(bad)  
  43bd89:	sbb    al,0x74
  43bd8b:	add    al,0x0
  43bd8d:	sub    ah,bl
  43bd8f:	adc    ebp,DWORD PTR [edi+edi*2]
  43bd92:	test   DWORD PTR [ebp+0x190b90f],0xc92bd67b
	...
  43bdb0:	jecxz  0x43bd3c
  43bdb2:	outs   dx,BYTE PTR ds:[esi]
  43bdb3:	inc    esp
  43bdb5:	pop    esi
  43bdb6:	fmul   DWORD PTR [ebp-0x46b70df1]
  43bdbc:	enter  0xdd,0x0
  43bdc0:	mov    ds:0x4b0043ef,eax
  43bdc5:	pop    ecx
  43bdc6:	out    dx,al
  43bdc7:	je     0x43bdd3
  43bdc9:	mov    ah,0x31
  43bdcb:	ds out dx,eax
  43bdcd:	fnstenv [ecx+0x9db9e0]
  43bdd3:	mov    edx,0x4064e3
  43bdd8:	jo     0x43bdec
  43bdda:	mov    bl,0xa8
  43bddc:	xchg   ebx,eax
  43bddd:	popf   
  43bdde:	add    BYTE PTR [ebx-0x7a45a1bf],cl
  43bde4:	xor    dl,bl
  43bde6:	cmp    eax,0xba5ecbc3
  43bdeb:	test   DWORD PTR [esi-0x26],edx
  43bdee:	cmp    eax,0x85acfbc5
  43bdf3:	inc    esp
  43bdf4:	lahf   
  43bdf5:	mov    eax,ds:0xe8c45650
  43bdfa:	inc    esp
  43bdfb:	adc    bh,BYTE PTR [ebx-0x23]
  43bdfe:	push   eax
  43bdff:	lea    esp,[edx-0x3c]
  43be02:	and    BYTE PTR [eax],ch
  43be04:	adc    bl,BYTE PTR [eax]
  43be06:	jmp    0x4ac4:0x7e006244
  43be0d:	xchg   eax,ecx
  43be0f:	test   DWORD PTR [edx+0x22c417],edx
	...
  43be25:	add    BYTE PTR [eax],al
  43be27:	add    BYTE PTR [ebp+0x7ac58642],dl
  43be2d:	jne    0x43be4a
  43be2f:	stc    
  43be30:	test   DWORD PTR [esi+0x2f5a2439],eax
  43be36:	int3   
  43be37:	jge    0x43bead
  43be39:	bound  eax,QWORD PTR [edx]
  43be3b:	inc    esp
  43be3c:	mov    ds:0x4a243988,eax
  43be41:	test   al,0xff
  43be43:	jae    0x43bde4
  43be45:	jne    0x43be90
  43be47:	and    al,0x7e
  43be49:	leave  
  43be4a:	xchg   ecx,eax
  43be4b:	add    BYTE PTR [edx+0x2],ah
  43be4e:	in     eax,0x9f
  43be50:	cwde   
  43be51:	add    bh,ch
  43be53:	test   BYTE PTR [esi-0x6174eb22],dl
  43be59:	(bad)  
  43be5a:	adc    BYTE PTR [eax-0x46],dl
  43be5d:	sar    dh,1
  43be5f:	xchg   ebp,eax
  43be60:	push   eax
  43be61:	sub    ch,ch
  43be63:	std    
  43be64:	cli    
  43be65:	xor    al,0x65
  43be67:	repz popa 
  43be69:	mov    al,ds:0x3fb680f
  43be6e:	cwde   
  43be6f:	push   cs
  43be70:	jp     0x43be64
  43be72:	(bad)  
  43be73:	xchg   edi,eax
  43be74:	push   eax
  43be75:	jne    0x43beb8
  43be77:	and    al,0x36
  43be79:	fcmovu st,st(4)
  43be7b:	cld    
  43be7c:	in     eax,dx
  43be7d:	xlat   BYTE PTR ds:[ebx]
  43be7e:	xchg   BYTE PTR [esi+edi*1-0x6],al
  43be82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43be83:	add    al,0x56
  43be85:	inc    ebp
  43be86:	mov    BYTE PTR [esi+edi*2+0x52],dl
  43be8a:	mov    esp,0x95
	...
  43be9f:	add    BYTE PTR [edx-0x27],ah
  43bea2:	out    0x3,eax
  43bea4:	mov    edx,0x62042d79
  43bea9:	cmp    esp,DWORD PTR fs:[eax]
  43beac:	push   edx
  43bead:	pop    esi
  43beae:	and    esp,DWORD PTR [eax]
  43beb0:	push   esi
  43beb1:	test   eax,0x16a7ee4f
  43beb6:	(bad)  
  43beb7:	imul   edx,DWORD PTR [edx+0xa11acdc],0x6
  43bebe:	out    0xc9,al
  43bec0:	pop    edi
  43bec1:	adc    DWORD PTR [eax+0xfec9d01],0xf61c7ff4
  43becb:	xchg   BYTE PTR [esi],ah
  43becd:	mov    ch,0x1f
  43becf:	in     al,dx
  43bed0:	retf   0x820d
  43bed3:	cmc    
  43bed4:	fist   WORD PTR [ebp-0x1ef5e43d]
  43beda:	sti    
  43bedb:	cmp    ch,cl
  43bedd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bede:	ret    
  43bedf:	aaa    
  43bee0:	adc    eax,0x6203e773
  43bee5:	add    edx,edi
  43bee7:	dec    ecx
  43bee8:	(bad)  
  43bee9:	fstp   DWORD PTR [esi+0x50]
  43beec:	jle    0x43bed7
  43beee:	pop    esp
  43beef:	inc    eax
  43bef0:	xchg   ch,ah
  43bef2:	xchg   edi,eax
  43bef3:	imul   esi,DWORD PTR [eax],0xffffffdc
  43bef6:	or     eax,0xe6098a10
  43befb:	sub    ch,BYTE PTR [esi-0x7f]
  43befe:	xor    al,0x1
  43bf00:	cmp    ch,ah
  43bf02:	(bad)
	...
  43bf16:	add    BYTE PTR [eax],al
  43bf18:	pop    es
  43bf19:	mov    ebp,0xdbf26bf3
  43bf1e:	mov    edi,0xc39ce90f
  43bf23:	dec    edi
  43bf24:	cli    
  43bf25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43bf26:	add    esi,ebp
  43bf28:	jmp    0x43bf8d
  43bf2a:	jae    0x43bf4b
  43bf2c:	jbe    0x43bf92
  43bf2e:	add    BYTE PTR [ebp+0x6250e975],ch
  43bf34:	pop    esi
  43bf35:	adc    cl,BYTE PTR [edi-0xf]
  43bf38:	ficom  DWORD PTR [esp+0x24a4e4fd]
  43bf3f:	stc    
  43bf40:	jmp    0x149f:0xb7394ee0
  43bf47:	ins    BYTE PTR es:[edi],dx
  43bf48:	mov    eax,ds:0x97e184e1
  43bf4d:	adc    ecx,edi
  43bf4f:	bound  ecx,QWORD PTR ds:0x4d6220b5
  43bf55:	mov    ch,0x1c
  43bf57:	cmp    ebx,ebx
  43bf59:	call   0x56b1fb57
  43bf5e:	add    DWORD PTR [esi],edi
  43bf60:	outs   dx,DWORD PTR ds:[esi]
  43bf61:	test   al,0x8
  43bf63:	push   ebx
  43bf64:	out    dx,al
  43bf65:	fadd   DWORD PTR [eax]
  43bf67:	jmp    0x920e157c
  43bf6c:	call   0xaebab879
  43bf71:	mov    bl,0x5b
  43bf73:	adc    ah,cl
  43bf75:	adc    eax,0xd961eb7c
  43bf7a:	mov    ebp,0xb4
	...
  43bf8f:	add    dl,ch
  43bf91:	std    
  43bf92:	jle    0x43bfd9
  43bf94:	fstp   st(1)
  43bf96:	add    cl,ch
  43bf98:	lahf   
  43bf99:	test   al,0x85
  43bf9b:	cmp    ebx,edx
  43bf9d:	push   es
  43bf9e:	test   DWORD PTR [ecx+ebp*2+0x92d5362],ebp
  43bfa5:	push   edi
  43bfa6:	inc    edi
  43bfa7:	jmp    0x2d87220d
  43bfac:	xchg   edi,eax
  43bfad:	test   eax,0x108d648b
  43bfb2:	stc    
  43bfb3:	push   ss
  43bfb4:	mov    eax,ecx
  43bfb6:	push   eax
  43bfb7:	add    DWORD PTR [edx-0x4ffff31],ebp
  43bfbd:	pop    ecx
  43bfbe:	les    edx,FWORD PTR [eax]
  43bfc0:	inc    esi
  43bfc1:	sbb    dh,BYTE PTR [esi+0x22]
  43bfc4:	inc    eax
  43bfc5:	or     eax,0xabc34d86
  43bfca:	test   DWORD PTR [ebp-0x8f5d9],ecx
  43bfd0:	jp     0x43bf84
  43bfd2:	not    DWORD PTR [eax+0xd537]
  43bfd8:	inc    esi
  43bfd9:	adc    eax,0x98300a6d
  43bfde:	or     al,ch
  43bfe0:	fninit 
  43bfe2:	idiv   edi
  43bfe4:	mov    al,ds:0x5cc02bd7
  43bfe9:	stos   DWORD PTR es:[edi],eax
  43bfea:	rol    edx,0x77
  43bfed:	fidivr DWORD PTR [ecx-0x14]
  43bff0:	add    edx,ebp
	...
  43c006:	add    BYTE PTR [eax],al
  43c008:	cmp    BYTE PTR [eax-0x3ee874b2],dh
  43c00e:	int3   
  43c00f:	add    BYTE PTR [ebx-0x26],bh
  43c012:	sbb    ecx,0x74
  43c015:	lods   eax,DWORD PTR ds:[esi]
  43c016:	lea    eax,[eax]
  43c018:	dec    ebx
  43c019:	fiadd  DWORD PTR [ebx-0x7ee43f2d]
  43c01f:	pop    esp
  43c020:	push   edi
  43c021:	leave  
  43c022:	call   0xf74e5ca4
  43c027:	mov    edx,DWORD PTR [ebx+0x3b0098ad]
  43c02d:	fiadd  DWORD PTR [ebx-0x7ee44f2d]
  43c033:	jl     0x43c09c
  43c035:	in     eax,dx
  43c036:	call   0xf74e0ca4
  43c03b:	mov    ebp,DWORD PTR [eax-0x53]
  43c03e:	xchg   ecx,eax
  43c03f:	add    bl,bh
  43c041:	fld    DWORD PTR [ebx+0x24a172ce]
  43c047:	sbb    BYTE PTR [edx-0x28],ah
  43c04a:	push   ebp
  43c04b:	stc    
  43c04c:	in     eax,dx
  43c04d:	fidivr WORD PTR [ecx-0x33]
  43c050:	jp     0x43c000
  43c052:	add    al,0x0
  43c054:	bound  ecx,QWORD PTR [ebx-0x28357a42]
  43c05a:	inc    ebp
  43c05b:	stc    
  43c05c:	int    0xfe
  43c05e:	jns    0x43c02d
  43c060:	cmp    cl,BYTE PTR [edi-0x749d0003]
  43c066:	mov    edi,0x28dc1e87
  43c06b:	call   0x43c070
	...
  43c080:	ja     0x43c0a1
  43c082:	out    dx,al
  43c083:	stc    
  43c084:	fist   WORD PTR [esi]
  43c086:	jp     0x43c060
  43c088:	ins    DWORD PTR es:[edi],dx
  43c089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c08a:	mov    ebp,0x11dc1e88
  43c08f:	test   BYTE PTR [edx+0x635a812e],ah
  43c095:	add    ch,bh
  43c097:	sub    al,0x7d
  43c099:	mov    dh,dh
  43c09b:	xchg   esi,esi
  43c09d:	sbb    edx,DWORD PTR ds:0x513f687
  43c0a3:	xor    DWORD PTR [edi+0xb],0xfffffffe
  43c0a7:	mov    dh,BYTE PTR [esi+0x27850516]
  43c0ad:	pop    ebx
  43c0ae:	nop
  43c0af:	push   ds
  43c0b0:	dec    esp
  43c0b1:	jl     0x43c12d
  43c0b3:	je     0x43c133
  43c0b5:	fisubr DWORD PTR [ebx]
  43c0b7:	jl     0x43c03f
  43c0b9:	push   es
  43c0ba:	jno    0x43c0e9
  43c0bc:	out    0x4e,eax
  43c0be:	and    DWORD PTR [ebx+ebp*8],ebp
  43c0c1:	lods   eax,DWORD PTR ds:[esi]
  43c0c2:	std    
  43c0c3:	jmp    DWORD PTR [edx-0x56]
  43c0c6:	xchg   ebx,eax
  43c0c7:	dec    eax
  43c0c8:	bound  eax,QWORD PTR [edx]
  43c0ca:	add    BYTE PTR [esi+edi*1-0x2a],0xed
  43c0cf:	je     0x43c117
  43c0d1:	es dec ebp
  43c0d3:	mov    ebx,DWORD PTR [esi-0x7ba83427]
  43c0d9:	fnsave [edi-0x18654b25]
  43c0df:	add    ebp,DWORD PTR [edi+0x15]
  43c0e2:	test   DWORD PTR [eax+0x0],0x0
	...
  43c0f8:	mov    ?,WORD PTR [ebp-0x4ad17f31]
  43c0fe:	stos   DWORD PTR es:[edi],eax
  43c0ff:	fild   DWORD PTR [edx-0x49]
  43c102:	icebp  
  43c103:	icebp  
  43c104:	pop    ds
  43c105:	or     al,0xd4
  43c107:	inc    edi
  43c108:	push   esp
  43c109:	cdq    
  43c10a:	out    0x86,eax
  43c10c:	xchg   edi,eax
  43c10d:	fsub   QWORD PTR [ebx-0x7b]
  43c110:	(bad)  
  43c111:	(bad)  
  43c113:	test   BYTE PTR [edx-0x208db626],ch
  43c119:	and    DWORD PTR [eax-0x1d],ebp
  43c11c:	popf   
  43c11d:	or     al,0xe7
  43c11f:	or     DWORD PTR ds:0xa58520d6,0xb
  43c126:	sub    BYTE PTR [edi-0x7],dh
  43c129:	jno    0x43c0f9
  43c12b:	lds    ebp,FWORD PTR [ebp+0x3e487011]
  43c131:	mov    ebp,0x14e7081c
  43c136:	jle    0x43c141
  43c138:	fbld   TBYTE PTR [ecx]
  43c13a:	(bad)  
  43c13b:	icebp  
  43c13c:	jg     0x43c14a
  43c13e:	jp     0x43c1bb
  43c140:	sahf   
  43c141:	mov    ch,0xb7
  43c143:	xchg   BYTE PTR [edx],ah
  43c145:	test   DWORD PTR [edx],ebx
  43c147:	jge    0x43c17b
  43c149:	pusha  
  43c14a:	fsubr  QWORD PTR cs:[edx]
  43c14d:	iret   
  43c14e:	out    0x3,eax
  43c150:	ficomp WORD PTR [eax]
  43c152:	fld    TBYTE PTR [edx]
  43c154:	fst    DWORD PTR [ebx+eax*1-0x655b6df4]
  43c15b:	pop    eax
	...
  43c170:	sbb    eax,DWORD PTR [ebp+0x3]
  43c173:	shl    BYTE PTR [edx-0x27],1
  43c176:	add    cl,ch
  43c178:	mov    WORD PTR [ebp-0x565556dc],ss
  43c17e:	stc    
  43c17f:	cld    
  43c180:	aad    0xe8
  43c182:	inc    eax
  43c183:	jmp    0x9c42d266
  43c188:	pop    eax
  43c189:	push   esi
  43c18a:	push   esp
  43c18b:	lds    ebx,FWORD PTR [ecx+0x56]
  43c18e:	dec    esp
  43c18f:	int    0x6d
  43c191:	add    DWORD PTR [ecx-0x7a269e3f],ebp
  43c197:	icebp  
  43c198:	rol    BYTE PTR [esp+0xce7d2cd],cl
  43c19f:	cli    
  43c1a0:	and    ecx,ebx
  43c1a2:	test   DWORD PTR ds:0xbbe8c98a,ebp
  43c1a8:	xchg   BYTE PTR [edx],dl
  43c1aa:	stc    
  43c1ab:	pop    esp
  43c1ac:	or     eax,0xf58064b5
  43c1b1:	fadd   DWORD PTR [eax]
  43c1b3:	jmp    0xe984e171
  43c1b8:	popa   
  43c1b9:	pusha  
  43c1ba:	push   esp
  43c1bb:	add    eax,0xe99b4452
  43c1c0:	popa   
  43c1c1:	fld1   
  43c1c3:	pop    esi
  43c1c4:	sub    bl,cl
  43c1c6:	add    BYTE PTR [edx+0x15],ah
  43c1c9:	mov    ch,0x20
  43c1cb:	push   eax
  43c1cc:	leave  
  43c1cd:	pusha  
  43c1ce:	inc    eax
  43c1cf:	jmp    0x7ec70cb2
	...
  43c1e8:	bound  edx,QWORD PTR [esi+0x4acf19c1]
  43c1ee:	sbb    DWORD PTR [ebx-0x4641699e],0xffffffbc
  43c1f5:	xchg   ebp,eax
  43c1f6:	and    al,0xa5
  43c1f8:	fadd   QWORD PTR [edi]
  43c1fa:	test   DWORD PTR [ebp-0x16ffd27b],ebx
  43c200:	popa   
  43c201:	loopne 0x43c246
  43c203:	add    BYTE PTR [ebx-0x59],dl
  43c206:	div    DWORD PTR [edi+ebx*2-0x2f]
  43c20a:	test   DWORD PTR [edi+ebx*2-0x6f],eax
  43c20e:	div    DWORD PTR [edi+ebx*2-0x2f]
  43c212:	div    DWORD PTR [edi+ebp*1-0x35]
  43c216:	push   eax
  43c217:	dec    DWORD PTR ds:0xe9440d0a
  43c21d:	xchg   esi,eax
  43c21e:	add    BYTE PTR [eax-0x53],dl
  43c221:	mov    es,WORD PTR cs:[ecx-0x35]
  43c225:	(bad)  
  43c226:	jnp    0x43c1ec
  43c228:	lahf   
  43c229:	(bad)  
  43c22a:	(bad)  
  43c22b:	call   0x3b7809
  43c230:	inc    eax
  43c231:	jp     0x43c257
  43c233:	and    al,0x30
  43c235:	ror    BYTE PTR [eax+0x13],1
  43c238:	mov    edx,ebp
  43c23a:	dec    edi
  43c23b:	(bad)  
  43c23c:	in     eax,dx
  43c23d:	cli    
  43c23e:	jae    0x43c264
  43c240:	scas   eax,DWORD PTR es:[edi]
  43c241:	sti    
  43c242:	int    0x55
  43c244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c245:	and    esi,edi
  43c247:	je     0x43c2a8
  43c249:	mov    ch,0xf7
  43c24b:	(bad)  
	...
  43c260:	push   0x3f8acdfa
  43c265:	ror    DWORD PTR [ebx],0x5f
  43c268:	and    eax,0xbf8153a8
  43c26d:	cmp    eax,0x187b0000
  43c272:	or     al,0x0
  43c274:	cli    
  43c275:	clc    
  43c276:	mov    bl,0x2
  43c278:	dec    ebx
  43c279:	(bad)  
  43c27a:	adc    DWORD PTR [edi+ebx*1+0x3bfffa3e],0xffffffc7
  43c282:	ror    BYTE PTR [ecx-0x7b7c4dc1],0x6f
  43c289:	dec    ecx
  43c28a:	cli    
  43c28b:	dec    DWORD PTR [ebx+0x57]
  43c28e:	shr    BYTE PTR [edx+eiz*2],0x79
  43c292:	inc    eax
  43c293:	and    al,0x56
  43c295:	push   eax
  43c296:	or     BYTE PTR [esi+eax*2+0x62000490],0xa8
  43c29e:	les    edx,FWORD PTR [ebp+ecx*1+0x55c087c3]
  43c2a5:	je     0x43c2df
  43c2a7:	(bad)  
  43c2a8:	std    
  43c2a9:	call   DWORD PTR [edx-0x75]
  43c2ac:	ficom  WORD PTR [ebx]
  43c2ae:	lods   eax,DWORD PTR ds:[esi]
  43c2af:	add    BYTE PTR [edx+0x0],ah
  43c2b2:	dec    ebp
  43c2b3:	sub    eax,0x8b4d4022
  43c2b8:	cs sbb al,0xf9
  43c2bb:	out    0x85,eax
  43c2bd:	(bad)  
  43c2be:	jmp    0x21cf9cbc
  43c2c3:	add    al,0x0
	...
  43c2d5:	add    BYTE PTR [eax],al
  43c2d7:	add    dh,bl
  43c2d9:	mov    edi,0xfe6583f9
  43c2de:	cld    
  43c2df:	(bad)  
  43c2e0:	jmp    0x869042d6
  43c2e5:	clc    
  43c2e6:	push   ebx
  43c2e7:	push   edx
  43c2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43c2e9:	(bad)  
  43c2ea:	mov    cl,0x0
  43c2ec:	bound  eax,QWORD PTR [eax]
  43c2ee:	mov    al,al
  43c2f0:	gs jne 0x43c2e7
  43c2f3:	dec    DWORD PTR [ebp+0x3e4475ff]
  43c2f9:	clc    
  43c2fa:	jg     0x43c350
  43c2fc:	inc    esi
  43c2fd:	cld    
  43c2fe:	jne    0x43c308
  43c300:	adc    al,dl
  43c302:	jmp    0xbdc11156
  43c307:	or     edi,ebx
  43c309:	dec    edi
  43c30a:	add    al,0x0
  43c30c:	(bad)  {k4}
  43c311:	push   ss
  43c312:	lods   al,BYTE PTR ds:[esi]
  43c313:	nop
  43c314:	(bad)  {k7}{z}
  43c319:	rol    BYTE PTR [eax+eax*1],0xe9
  43c31d:	fnstcw WORD PTR [ebx+0x5a736a27]
  43c323:	pop    ecx
  43c324:	pop    eax
  43c325:	push   esi
  43c326:	mov    ds:0xebf16e27,eax
  43c32b:	cs (bad) 
  43c32d:	fld    DWORD PTR [edx+0x77]
  43c330:	shr    DWORD PTR ds:[esi-0x35],1
  43c334:	adc    esp,DWORD PTR ds:0xef0bcacd
  43c33a:	lahf   
  43c33b:	adc    al,BYTE PTR [eax]
	...
  43c34d:	add    BYTE PTR [eax],al
  43c34f:	add    BYTE PTR [edx+0x6bc221d9],ah
  43c355:	pop    ebp
  43c356:	jb     0x43c35c
  43c358:	(bad)  
  43c359:	(bad)  
  43c35b:	ret    
  43c35c:	xchg   ebx,eax
  43c35d:	push   esi
  43c35e:	mov    bl,0x27
  43c360:	xchg   edx,eax
  43c361:	inc    edx
  43c362:	pop    eax
  43c363:	add    esp,DWORD PTR [edx-0x27]
  43c366:	jo     0x43c3af
  43c368:	xchg   ch,dl
  43c36a:	call   FWORD PTR [eax+0x20]
  43c36d:	(bad)  
  43c36f:	jp     0x43c397
  43c371:	mov    ebp,0xbd0e7ef7
  43c376:	or     edi,DWORD PTR [ecx+0x5a]
  43c379:	stos   DWORD PTR es:[edi],eax
  43c37a:	fs pop eax
  43c37c:	jle    0x43c34b
  43c37e:	xor    eax,0x5b6a9b54
  43c383:	add    al,0x62
  43c385:	fldenv [esp+eax*8+0x11]
  43c389:	jmp    0xe5bf:0xb53e405e
  43c390:	jg     0x43c399
  43c392:	mov    ds:0x1b527a79,al
  43c397:	sub    BYTE PTR [esi-0xc],dl
  43c39a:	fidiv  WORD PTR [eax]
  43c39c:	mov    ds:0xa67b8f54,al
  43c3a1:	mov    ebp,0xace956db
  43c3a6:	ret    
  43c3a7:	push   edi
  43c3a8:	adc    eax,0x61e9006b
  43c3ad:	fld1   
  43c3af:	(bad)  
  43c3b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c3b1:	fld    DWORD PTR [eax]
  43c3b3:	jb     0x43c3b5
	...
  43c3c5:	add    BYTE PTR [eax],al
  43c3c7:	add    BYTE PTR [edx-0x7593eb43],ch
  43c3cd:	mov    ebp,0x9626622c
  43c3d2:	mov    esi,DWORD PTR [ebp-0x66b15ebb]
  43c3d8:	push   es
  43c3d9:	pop    eax
  43c3da:	xchg   esp,eax
  43c3db:	jmp    0x29c79d41
  43c3e0:	(bad)  
  43c3e1:	fiadd  WORD PTR [ebp-0x174aba63]
  43c3e7:	dec    ebp
  43c3e8:	arpl   WORD PTR [edx],ax
  43c3ea:	stc    
  43c3eb:	adc    ah,BYTE PTR [eax-0x4a]
  43c3ee:	shl    BYTE PTR [edx+ecx*4-0x43],0x7c
  43c3f3:	push   eax
  43c3f4:	repz fadd DWORD PTR [eax]
  43c3f7:	jmp    0xf2bb556
  43c3fc:	and    eax,0x226200d9
  43c401:	mov    ebp,0xdd21621c
  43c406:	mov    bh,0x91
  43c408:	cmp    DWORD PTR [ecx-0x735e9c00],ebx
  43c40e:	or     al,0x1a
  43c410:	nop
  43c411:	jp     0x43c44a
  43c413:	stc    
  43c414:	retf   
  43c415:	clc    
  43c416:	lea    ebp,[ecx]
  43c418:	pop    esi
  43c419:	mov    esi,?
  43c41b:	jno    0x43c3cd
  43c41d:	pop    ebp
  43c41e:	mov    edi,0x43d1a46c
  43c423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c424:	adc    DWORD PTR [ecx+edi*8-0xa],ebx
  43c428:	sbb    al,0x12
  43c42a:	dec    edi
  43c42b:	cmp    eax,DWORD PTR [eax]
	...
  43c43d:	add    BYTE PTR [eax],al
  43c43f:	add    ch,ch
  43c441:	pop    esp
  43c442:	and    al,0x61
  43c444:	popa   
  43c445:	fld    DWORD PTR [eax]
  43c447:	cmp    ebp,ebx
  43c449:	popf   
  43c44a:	and    al,0x0
  43c44c:	sub    ebp,DWORD PTR [ebx-0x24f36518]
  43c452:	add    BYTE PTR [ebx-0x77c1109],al
  43c458:	int3   
  43c459:	mov    fs,WORD PTR [eax+ebx*1]
  43c45c:	mov    esp,0xfb1348ef
  43c461:	fimul  DWORD PTR [ebp-0x1]
  43c464:	es ret 
  43c466:	or     eax,DWORD PTR [eax+0xb]
  43c469:	retf   0xfc0
  43c46c:	xchg   ebp,eax
  43c46d:	inc    ecx
  43c46e:	jge    0x43c46f
  43c470:	cld    
  43c471:	(bad)  
  43c472:	enter  0x4284,0x5
  43c476:	jge    0x43c416
  43c478:	or     ebx,ebx
  43c47a:	add    BYTE PTR [ebp-0x46df4149],cl
  43c480:	outs   dx,DWORD PTR ds:[esi]
  43c481:	fiadd  DWORD PTR [eax]
  43c483:	add    BYTE PTR [ebx+0x70],ah
  43c486:	cmp    eax,0x6c81cb00
  43c48b:	and    al,0xbf
  43c48d:	xchg   DWORD PTR [esp-0x55],eax
  43c491:	stos   BYTE PTR es:[edi],al
  43c492:	div    DWORD PTR [edi+edx*4-0x2e]
  43c496:	test   DWORD PTR [ebp-0x3d],edi
  43c499:	lods   eax,DWORD PTR ds:[esi]
  43c49a:	test   DWORD PTR [edi+eiz*2-0x1f],ecx
  43c49e:	call   0xf73653be
  43c4a3:	xor    eax,DWORD PTR [eax]
	...
  43c4b5:	add    BYTE PTR [eax],al
  43c4b7:	add    BYTE PTR [edx],al
  43c4b9:	add    ebp,DWORD PTR [edi+0x621d07d9]
  43c4bf:	add    DWORD PTR [ebx-0x80],eax
  43c4c2:	push   esp
  43c4c3:	and    al,0x5b
  43c4c5:	xor    al,0x93
  43c4c7:	add    BYTE PTR [ebx-0x26],bh
  43c4ca:	pop    es
  43c4cb:	inc    ebp
  43c4cc:	shl    DWORD PTR ds:0xda8b453d,cl
  43c4d2:	test   DWORD PTR [edi+eiz*4-0x16],eax
  43c4d6:	push   eax
  43c4d7:	jmp    DWORD PTR [edx-0x1c]
  43c4da:	and    BYTE PTR [eax],bl
  43c4dc:	out    dx,eax
  43c4dd:	jecxz  0x43c4ff
  43c4df:	sub    BYTE PTR [ebp+0x4df5d768],ch
  43c4e5:	xchg   DWORD PTR [eax-0x190d3140],eax
  43c4eb:	mov    ebp,0x2020ebef
  43c4f0:	sti    
  43c4f1:	pop    ecx
  43c4f2:	add    al,0x0
  43c4f4:	bound  ebp,QWORD PTR [eax-0xf9dbcfa]
  43c4fa:	ja     0x43c540
  43c4fc:	inc    esi
  43c4fd:	add    BYTE PTR [ebp-0x7],cl
  43c500:	mov    ss,esp
  43c502:	or     al,0x8b
  43c504:	sahf   
  43c505:	fcomp  QWORD PTR [ecx+edx*2]
  43c508:	cli    
  43c509:	mov    ch,0xe9
  43c50b:	stc    
  43c50c:	std    
  43c50d:	jnp    0x43c4d3
  43c50f:	je     0x43c571
  43c511:	mov    esi,0x6c0984c1
  43c516:	test   DWORD PTR [esi+ecx*4+0x660d14],0x0
	...
  43c52d:	add    BYTE PTR [eax],al
  43c52f:	add    ch,bl
  43c531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c532:	aaa    
  43c533:	add    al,0xca
  43c535:	adc    al,0x2f
  43c537:	add    BYTE PTR [edx-0x75],ah
  43c53a:	cmp    BYTE PTR [edx+esi*2],ah
  43c53d:	fsub   st,st(3)
  43c53f:	and    BYTE PTR [ebp+0x195947f6],bh
  43c545:	mov    edi,DWORD PTR [ecx]
  43c547:	and    al,0x5a
  43c549:	sar    BYTE PTR [ecx+0x8],0xa5
  43c54d:	sar    ah,0x82
  43c550:	xchg   esp,eax
  43c551:	stos   DWORD PTR es:[edi],eax
  43c552:	inc    BYTE PTR [esp+ebx*2+0x5a50e5e6]
  43c559:	out    0x31,al
  43c55b:	shl    bl,0x33
  43c55e:	test   eax,0xc2ef7dfe
  43c563:	or     BYTE PTR [edx-0x27],ah
  43c566:	cmp    al,0x7f
  43c568:	jle    0x43c5c1
  43c56a:	mov    eax,DWORD PTR [edi+0x56e70564]
  43c570:	in     al,0x22
  43c572:	(bad)  
  43c573:	mov    esp,0x90f220de
  43c578:	or     eax,0xf17912ac
  43c57d:	mov    DWORD PTR [edx-0x16],esi
  43c580:	cmp    ebx,DWORD PTR ds:0x684ed824
  43c586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c587:	add    ebp,DWORD PTR [ebp+0x6203701a]
  43c58d:	fnstcw WORD PTR [edi]
  43c58f:	lea    esp,[esi+0x78e7d9]
	...
  43c5a5:	add    BYTE PTR [eax],al
  43c5a7:	add    BYTE PTR [ecx+0x627e8029],dh
  43c5ad:	(bad)  
  43c5af:	fcmovnu st,st(1)
  43c5b1:	popf   
  43c5b2:	out    0x3,eax
  43c5b4:	jmp    0xfc2c8517
  43c5b9:	add    al,0xb8
  43c5bb:	push   ebx
  43c5bc:	fstp   DWORD PTR [esi+0x4e5aa37]
  43c5c2:	out    0x83,eax
  43c5c4:	xor    dl,BYTE PTR [esi+0x74]
  43c5c7:	jae    0x43c5a4
  43c5c9:	add    al,0x2
  43c5cb:	jle    0x43c568
  43c5cd:	icebp  
  43c5ce:	mov    ebx,0x6c04c823
  43c5d3:	ret    
  43c5d4:	imul   ebx,DWORD PTR [ebp+0x20],0x3
  43c5d8:	(bad)  
  43c5d9:	fldenv [esi-0x14]
  43c5dc:	stos   DWORD PTR es:[edi],eax
  43c5dd:	aam    0x63
  43c5df:	les    esp,FWORD PTR [edx-0x27]
  43c5e2:	out    0x34,eax
  43c5e4:	nop
  43c5e5:	push   esi
  43c5e6:	xor    al,0xc0
  43c5e8:	int    0x55
  43c5ea:	out    0x3,eax
  43c5ec:	bound  edx,QWORD PTR [edx+0x34]
  43c5ef:	hlt    
  43c5f0:	jp     0x43c587
  43c5f2:	add    BYTE PTR ds:0x248bd966,ch
  43c5f8:	mov    ch,BYTE PTR [ecx+0x5013e866]
  43c5fe:	sbb    DWORD PTR [ecx],0x7b
  43c601:	add    bh,cl
  43c603:	cmp    DWORD PTR [ebx-0x267284a4],esi
  43c609:	mov    al,bh
  43c60b:	xchg   BYTE PTR [eax],al
	...
  43c61d:	add    BYTE PTR [eax],al
  43c61f:	add    BYTE PTR [ebp-0x2b],bl
  43c622:	adc    BYTE PTR [ecx],ch
  43c624:	pop    esi
  43c625:	pop    eax
  43c626:	sar    ah,0x57
  43c629:	push   eax
  43c62a:	inc    ebx
  43c62b:	jno    0x43c5bb
  43c62d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c62e:	mov    edi,DWORD PTR [ebp+ebp*8+0x65d4b4f]
  43c635:	push   ebp
  43c636:	pop    ds
  43c637:	push   edi
  43c638:	or     edi,esi
  43c63a:	cld    
  43c63b:	imul   edx,esi,0xfdac8701
  43c641:	test   eax,edi
  43c643:	ds jne 0x43c62f
  43c646:	data16 loope 0x43c6bd
  43c649:	cwde   
  43c64a:	hlt    
  43c64b:	xchg   edi,eax
  43c64c:	xchg   ecx,eax
  43c64d:	add    dl,BYTE PTR [ebx]
  43c64f:	rcl    DWORD PTR [ebx-0x67],0x0
  43c653:	push   0x22
  43c655:	aad    0x8b
  43c657:	mov    esp,0xe9884bf1
  43c65c:	popa   
  43c65d:	fld1   
  43c65f:	cli    
  43c660:	fld    DWORD PTR es:[eax]
  43c663:	ins    BYTE PTR es:[edi],dx
  43c664:	test   DWORD PTR [ecx-0x79],ebp
  43c667:	lods   al,BYTE PTR ds:[esi]
  43c668:	cdq    
  43c669:	dec    edi
  43c66a:	inc    ebx
  43c66b:	std    
  43c66c:	cmp    BYTE PTR [eax+0x712c74d0],bl
  43c672:	sti    
  43c673:	fidivr WORD PTR [edx+0x14bd435b]
  43c679:	cwde   
  43c67a:	call   0x8b691adf
  43c67f:	add    dh,bh
  43c681:	lahf   
  43c682:	cmc    
  43c683:	inc    DWORD PTR [eax]
	...
  43c695:	add    BYTE PTR [eax],al
  43c697:	add    ah,al
  43c699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c69a:	test   DWORD PTR [ebp-0x25],ecx
  43c69d:	sbb    BYTE PTR ds:0xd77ed8,bh
  43c6a3:	add    BYTE PTR [edx+eax*8-0x2884fe20],bh
  43c6aa:	add    bh,al
  43c6ac:	mov    ?,ecx
  43c6ae:	stc    
  43c6af:	dec    DWORD PTR [ebx-0x29]
  43c6b2:	call   0x1215cd1
  43c6b7:	xor    ebp,ecx
  43c6b9:	adc    bl,0xf
  43c6bc:	sahf   
  43c6bd:	sbb    al,0x49
  43c6bf:	mov    edx,DWORD PTR [esi+0xd]
  43c6c2:	jns    0x43c686
  43c6c4:	mov    ch,0xd6
  43c6c6:	add    BYTE PTR [eax],al
  43c6c8:	xchg   ebx,eax
  43c6c9:	outs   dx,DWORD PTR ds:[esi]
  43c6ca:	jmp    0x56d57bce
  43c6cf:	pop    ebx
  43c6d0:	inc    edx
  43c6d1:	sbb    eax,0xdc97ec79
  43c6d6:	add    BYTE PTR [eax],al
  43c6d8:	jbe    0x43c66c
  43c6da:	and    al,0x40
  43c6dc:	fcom   DWORD PTR [ebx+0x7221574e]
  43c6e2:	push   ecx
  43c6e3:	call   0x446460
  43c6e8:	jbe    0x43c66c
  43c6ea:	and    al,0x90
  43c6ec:	retf   
  43c6ed:	(bad)  
  43c6ee:	add    BYTE PTR [ecx+0x1b],dl
  43c6f1:	into   
  43c6f2:	rcl    DWORD PTR [ebx+0x56],cl
  43c6f5:	xchg   edx,eax
  43c6f6:	and    al,0x5c
  43c6f8:	and    bl,ah
	...
  43c70e:	add    BYTE PTR [eax],al
  43c710:	dec    ebx
  43c711:	push   ds
  43c712:	das    
  43c713:	pop    ds
  43c714:	(bad)  
  43c717:	clc    
  43c718:	les    ecx,FWORD PTR [edx]
  43c71a:	jge    0x43c765
  43c71c:	mov    ecx,0x628500d6
  43c721:	xor    cl,dh
  43c723:	and    DWORD PTR [ebx],0xffffffee
  43c726:	cld    
  43c727:	(bad)  
  43c728:	fbstp  TBYTE PTR [eax+eiz*1-0x70]
  43c72c:	(bad)  
  43c72d:	lock cld 
  43c72f:	dec    edi
  43c730:	jge    0x43c757
  43c732:	cmp    eax,0x75f0220e
  43c737:	call   0x4064b417
  43c73c:	fist   WORD PTR [ebp-0xf]
  43c73f:	add    DWORD PTR [edi-0x18000312],0xffffffcb
  43c746:	and    BYTE PTR [eax+0xb],cl
  43c749:	jo     0x43c74f
  43c74b:	add    BYTE PTR [edx+0x68],ah
  43c74e:	fidivr DWORD PTR [esi]
  43c750:	(bad)  
  43c751:	lock ja 0x43c798
  43c754:	jle    0x43c70e
  43c756:	push   esp
  43c757:	push   ebx
  43c758:	sub    eax,0xa20e4d05
  43c75d:	lock jg 0x43c720
  43c760:	ins    DWORD PTR es:[edi],dx
  43c761:	je     0x43c74b
  43c763:	call   DWORD PTR ds:0xdf4d4df0
  43c769:	dec    ebx
  43c76a:	sbb    DWORD PTR [ebx+esi*4],ebx
  43c76d:	jne    0x43c7a7
  43c76f:	and    al,0x32
  43c771:	popa   
  43c772:	loop   0x43c744
	...
  43c788:	fild   QWORD PTR [edi-0xefb7d0f]
  43c78e:	cld    
  43c78f:	(bad)  
  43c790:	fnstcw WORD PTR [ebx]
  43c792:	sbb    DWORD PTR [edi+ebp*8],esp
  43c795:	inc    ebx
  43c796:	sbb    DWORD PTR [eax],edi
  43c798:	jmp    0x36cf1694
  43c79d:	adc    al,0x3d
  43c79f:	dec    esi
  43c7a0:	xor    cl,BYTE PTR [ecx+0xb862448]
  43c7a6:	push   esp
  43c7a7:	fild   QWORD PTR fs:[edi-0x26fa7d0f]
  43c7ae:	call   0x239229b6
  43c7b3:	and    BYTE PTR [esi+0x54],al
  43c7b6:	cmp    esp,DWORD PTR [eax]
  43c7b8:	push   edx
  43c7b9:	dec    esi
  43c7ba:	fist   WORD PTR [ecx-0x27]
  43c7bd:	lods   al,BYTE PTR ds:[esi]
  43c7be:	or     edi,DWORD PTR [esp+edx*1]
  43c7c1:	outs   dx,DWORD PTR ds:[esi]
  43c7c2:	xlat   BYTE PTR ds:[ebx]
  43c7c3:	push   edx
  43c7c4:	jnp    0x43c752
  43c7c6:	or     edi,DWORD PTR [ebx+edi*2]
  43c7c9:	mov    WORD PTR [ebx],es
  43c7cb:	push   esp
  43c7cc:	adc    al,BYTE PTR [edx]
  43c7ce:	cmp    BYTE PTR [ecx+eiz*8],ch
  43c7d1:	sbb    dl,ch
  43c7d3:	or     ah,0xda
  43c7d6:	out    0x3,eax
  43c7d8:	xlat   BYTE PTR ds:[ebx]
  43c7d9:	jge    0x43c79e
  43c7db:	aas    
  43c7dc:	data16 shr BYTE PTR [eax+ecx*2+0x45],1
  43c7e1:	add    edi,esp
  43c7e3:	jp     0x43c78b
  43c7e5:	mov    ch,0xb7
  43c7e7:	js     0x43c777
  43c7e9:	mov    ch,0xc7
  43c7eb:	jp     0x43c7ed
	...
  43c7fd:	add    BYTE PTR [eax],al
  43c7ff:	add    BYTE PTR [edx-0x55],bl
  43c802:	iret   
  43c803:	add    esp,DWORD PTR [edx-0x47]
  43c806:	out    0x53,eax
  43c808:	sbb    ebp,DWORD PTR [ebx-0x2edd7ef1]
  43c80e:	fs inc esp
  43c810:	or     eax,0x9e7ae701
  43c815:	mov    ch,0x7
  43c817:	jns    0x43c7af
  43c819:	mov    ch,0x9f
  43c81b:	jp     0x43c887
  43c81d:	stos   DWORD PTR es:[edi],eax
  43c81e:	xchg   esi,eax
  43c81f:	push   ebx
  43c820:	jmp    0x43c7cc
  43c822:	retf   
  43c823:	and    BYTE PTR [edx],0xd1
  43c826:	fs push es
  43c828:	fld    QWORD PTR [eax]
  43c82a:	out    0x7a,eax
  43c82c:	push   ds
  43c82d:	mov    ch,0xc7
  43c82f:	js     0x43c867
  43c831:	mov    ch,0xcf
  43c833:	jp     0x43c88f
  43c835:	stos   DWORD PTR es:[edi],eax
  43c836:	xchg   esi,eax
  43c837:	out    0x36,al
  43c839:	mov    ch,0x0
  43c83b:	cdq    
  43c83c:	adc    DWORD PTR [edx],eax
  43c83e:	dec    edi
  43c83f:	popf   
  43c840:	loop   0x43c85b
  43c842:	or     DWORD PTR [ebx+eiz*2+0x0],ebp
  43c846:	stc    
  43c847:	jmp    0x1684d66
  43c84c:	sbb    DWORD PTR [ebp-0x1cc6eadc],ebx
  43c852:	or     DWORD PTR [edi-0x5a],ebp
  43c855:	fld    DWORD PTR [eax]
  43c857:	jmp    0x15cace56
  43c85c:	inc    edx
  43c85d:	lods   eax,DWORD PTR ds:[esi]
  43c85e:	aaa    
  43c85f:	or     eax,0x6f09d13f
	...
  43c878:	enter  0xd9,0xe9
  43c87c:	fidivr DWORD PTR [esi]
  43c87e:	xchg   DWORD PTR ds:0xfd85dd82,ebp
  43c884:	jle    0x43c853
  43c886:	std    
  43c887:	nop
  43c888:	(bad)  
  43c889:	popf   
  43c88a:	and    al,0xda
  43c88c:	mov    edx,0x5fc4009c
  43c891:	fscale 
  43c893:	mov    eax,0xdc48dfbd
  43c898:	mov    al,0x77
  43c89a:	inc    eax
  43c89b:	pop    esi
  43c89c:	(bad)  
  43c89d:	sar    ecx,1
  43c89f:	cld    
  43c8a0:	icebp  
  43c8a1:	int    0x40
  43c8a3:	jmp    0xcbb7e234
  43c8a8:	mov    ch,BYTE PTR [eax+ecx*1+0x4c5406d3]
  43c8af:	or     eax,0xfa35f16a
  43c8b4:	popa   
  43c8b5:	fxam   
  43c8b7:	out    0x8b,eax
  43c8b9:	cdq    
  43c8ba:	stc    
  43c8bb:	xchg   esp,eax
  43c8bc:	fld    DWORD PTR [eax]
  43c8be:	adc    esp,DWORD PTR [ecx+0x73]
  43c8c1:	cdq    
  43c8c2:	add    BYTE PTR [esi+eiz*4-0x7c],ah
  43c8c6:	cmp    eax,0x8905000
  43c8cb:	push   ebx
  43c8cc:	shl    esp,1
  43c8ce:	sub    cl,cl
  43c8d0:	arpl   WORD PTR [edi-0x7f43009b],si
  43c8d6:	call   0x9b35760
  43c8db:	push   0x0
	...
  43c8ed:	add    BYTE PTR [eax],al
  43c8ef:	add    BYTE PTR [eax+eax*4-0x46c07233],bh
  43c8f6:	sbb    al,0xe8
  43c8f8:	or     al,0x0
  43c8fb:	add    BYTE PTR [ebx],dl
  43c8fd:	shl    BYTE PTR [ebx+edx*1],0xf0
  43c901:	inc    esi
  43c902:	call   0xf73857ca
  43c907:	mov    al,BYTE PTR [edi-0x47]
  43c90a:	or     eax,DWORD PTR [ebx+edi*4+0x4a6a106f]
  43c911:	xor    eax,esp
  43c913:	xchg   edx,eax
  43c914:	mov    edx,ebp
  43c916:	test   DWORD PTR [edi+eiz*1-0x29],ecx
  43c91a:	call   0x11ed305
  43c91f:	mov    eax,DWORD PTR [edi-0x787cd347]
  43c925:	mov    ecx,0xb07b101c
  43c92a:	inc    esp
  43c92b:	aaa    
  43c92c:	xor    eax,DWORD PTR [esp+eax*2+0x44806f24]
  43c933:	and    al,0xf
  43c935:	push   es
  43c936:	jnp    0x43c994
  43c938:	pushf  
  43c939:	cmc    
  43c93a:	test   BYTE PTR [ebx-0xeb2149],0xb7
  43c941:	lods   eax,DWORD PTR ds:[esi]
  43c942:	or     al,0x8b
  43c944:	add    ebp,DWORD PTR [ebx-0x7decae09]
  43c94a:	inc    esp
  43c94b:	and    al,0x7
  43c94d:	xor    BYTE PTR [esp-0x4d],0x9a
  43c952:	jnp    0x43c91b
	...
  43c968:	(bad)  
  43c969:	hlt    
  43c96a:	jne    0x43c9b0
  43c96c:	xchg   BYTE PTR [eax+ebp*1],ah
  43c96f:	add    dl,BYTE PTR [ebp+0x72]
  43c972:	pop    ds
  43c973:	stc    
  43c974:	mov    ebp,0x7e5c70ff
  43c979:	sub    BYTE PTR [eax+0x6c],bh
  43c97c:	xchg   BYTE PTR [eax],dh
  43c97e:	js     0x43c9c4
  43c980:	jle    0x43c97e
  43c982:	test   DWORD PTR ss:[edx-0x40],ebp
  43c986:	fisttp QWORD PTR [edi+0x7a]
  43c989:	jnp    0x43c9d3
  43c98b:	and    al,0x42
  43c98d:	ror    BYTE PTR [ecx+0xce18508],0x85
  43c994:	es aam 0x14
  43c997:	push   eax
  43c998:	jmp    0x5a93a795
  43c99d:	jnp    0x43c9e7
  43c99f:	and    al,0x4e
  43c9a1:	aaa    
  43c9a2:	pop    eax
  43c9a3:	and    al,0x9a
  43c9a5:	mov    ecx,DWORD PTR [eax+edx*2]
  43c9a8:	push   ebp
  43c9a9:	sar    esp,0x84
  43c9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c9ad:	adc    al,0x21
  43c9af:	push   eax
  43c9b0:	fstp   DWORD PTR [edi]
  43c9b2:	fimul  WORD PTR [esi+0x6a]
  43c9b5:	mov    ecx,DWORD PTR [eax+0x24]
  43c9b8:	dec    esi
  43c9b9:	loopne 0x43c944
  43c9bb:	adc    BYTE PTR ds:0xb84f0ce2,ch
  43c9c1:	idiv   BYTE PTR [edx]
  43c9c3:	test   DWORD PTR [ecx],ebp
  43c9c5:	test   al,0xdb
  43c9c7:	jmp    0x0:0xf937a715
	...
  43c9de:	add    BYTE PTR [eax],al
  43c9e0:	ja     0x43c9ae
  43c9e2:	repnz aas 
  43c9e4:	bound  esi,QWORD PTR [edi]
  43c9e6:	aas    
  43c9e7:	pop    ebx
  43c9e8:	cdq    
  43c9e9:	jno    0x43c9b3
  43c9eb:	mov    WORD PTR [eax-0x10],fs
  43c9ee:	cld    
  43c9ef:	mov    esp,0x7ff07b97
  43c9f4:	neg    al
  43c9f6:	arpl   WORD PTR ds:0x845dd962,ax
  43c9fc:	jae    0x43c997
  43c9fe:	out    0x36,eax
  43ca00:	xor    BYTE PTR [esi-0x668c5bb0],ah
  43ca06:	out    0xeb,eax
  43ca08:	mov    ebp,0xdfe2fad8
  43ca0d:	or     BYTE PTR [edx+ebx*8+0x5b],ch
  43ca11:	push   ebp
  43ca12:	jo     0x43ca18
  43ca14:	(bad)  
  43ca15:	fnstenv [eax+edi*1-0x46]
  43ca19:	aas    
  43ca1a:	add    esp,DWORD PTR gs:[edx-0x27]
  43ca1e:	mov    edi,0xe7d922bd
  43ca23:	nop
  43ca24:	xor    ecx,esi
  43ca26:	jg     0x43c9ae
  43ca28:	(bad)  
  43ca29:	(bad)  
  43ca2b:	jmp    0x43c9d6
  43ca2d:	cwde   
  43ca2e:	out    0x3,eax
  43ca30:	out    0xd6,eax
  43ca32:	pop    esp
  43ca33:	push   eax
  43ca34:	jp     0x43c9dd
  43ca36:	je     0x43ca88
  43ca38:	cmp    ch,BYTE PTR [ebx+0x52b0e2d6]
  43ca3e:	adc    al,0xdc
  43ca40:	dec    ebx
  43ca41:	stos   BYTE PTR es:[edi],al
  43ca42:	fisttp DWORD PTR [eax+0x0]
	...
  43ca58:	and    cl,ch
  43ca5a:	ins    BYTE PTR es:[edi],dx
  43ca5b:	adc    al,0x3d
  43ca5d:	std    
  43ca5e:	out    0x8e,al
  43ca60:	pusha  
  43ca61:	dec    esi
  43ca62:	and    al,0xe0
  43ca64:	popf   
  43ca65:	mov    ds:0x5682336a,eax
  43ca6a:	daa    
  43ca6b:	adc    ah,cl
  43ca6d:	fsub   st(0),st
  43ca6f:	add    esp,DWORD PTR [edx+0x4e]
  43ca72:	jl     0x43cacf
  43ca74:	or     edi,ebp
  43ca76:	dec    ecx
  43ca77:	pushf  
  43ca78:	fcompp 
  43ca7a:	out    0x3,eax
  43ca7c:	or     ch,BYTE PTR [edx-0x59]
  43ca7f:	add    esp,DWORD PTR [edx+0x50]
  43ca82:	add    BYTE PTR [ebp+ecx*1+0xe185aa],ch
  43ca89:	lea    ecx,[edx+esi*2]
  43ca8c:	sub    bh,ch
  43ca8e:	dec    edi
  43ca8f:	jb     0x43cafa
  43ca91:	add    cl,BYTE PTR [edi-0x7]
  43ca94:	ficomp DWORD PTR [ecx]
  43ca96:	or     DWORD PTR [ebp+esi*4-0x27],esp
  43ca9a:	add    cl,ch
  43ca9c:	in     al,dx
  43ca9d:	cwde   
  43ca9e:	cld    
  43ca9f:	ins    BYTE PTR es:[edi],dx
  43caa0:	jp     0x43caab
  43caa2:	test   ecx,esp
  43caa4:	ja     0x43ca4f
  43caa6:	stc    
  43caa7:	cwde   
  43caa8:	lods   eax,DWORD PTR ds:[esi]
  43caa9:	push   edi
  43caaa:	shl    dh,0xe4
  43caad:	ds add cl,ch
  43cab0:	popa   
  43cab1:	push   esi
  43cab2:	inc    ebx
  43cab3:	(bad)  
  43cab5:	test   al,0xf4
  43cab7:	bound  edx,QWORD PTR [esi-0x75]
  43caba:	push   0x59
	...
  43cacf:	add    BYTE PTR [ebx-0x44],bh
  43cad2:	add    BYTE PTR [ecx],bl
  43cad4:	or     esp,0xffffff83
  43cad7:	test   eax,0xe99f5853
  43cadc:	popa   
  43cadd:	fldcw  WORD PTR [ebp-0x42b88d18]
  43cae3:	cmp    ebp,esp
  43cae5:	push   edi
  43cae6:	js     0x43ca7e
  43cae8:	inc    ebx
  43cae9:	add    dl,BYTE PTR [eax+0x5c]
  43caec:	fucomp st(0)
  43caee:	stc    
  43caef:	xchg   BYTE PTR [ebx+0x73],al
  43caf2:	xor    al,0x19
  43caf4:	inc    esi
  43caf5:	imul   esi,DWORD PTR [edi],0xffffffe9
  43caf8:	popa   
  43caf9:	jle    0x43cabf
  43cafb:	(bad)  
  43cafd:	sbb    BYTE PTR [edx-0x21],bh
  43cb00:	out    dx,al
  43cb01:	xchg   edi,eax
  43cb02:	hlt    
  43cb03:	ins    BYTE PTR es:[edi],dx
  43cb04:	dec    ebp
  43cb05:	in     eax,dx
  43cb06:	dec    ebp
  43cb07:	ret    
  43cb08:	test   DWORD PTR [eax-0x6d],edx
  43cb0b:	mov    eax,ds:0xf90203
  43cb10:	fld    st(0)
  43cb12:	test   DWORD PTR [ebp-0x906e5],edx
  43cb18:	cmp    al,0x94
  43cb1a:	in     al,dx
  43cb1b:	fs sti 
  43cb1d:	xlat   BYTE PTR ds:[ebx]
  43cb1e:	add    BYTE PTR [ebx-0xaf3a2d],cl
  43cb24:	sbb    cl,ah
  43cb26:	jge    0x43cae8
  43cb28:	out    dx,al
  43cb29:	fbld   TBYTE PTR [edx+0x40]
  43cb2c:	es push esp
  43cb2e:	dec    eax
  43cb2f:	(bad)  
  43cb30:	fs cli 
  43cb32:	dec    edi
  43cb33:	inc    DWORD PTR [eax]
	...
  43cb45:	add    BYTE PTR [eax],al
  43cb47:	add    BYTE PTR [esi-0x44bff479],cl
  43cb4d:	push   edx
  43cb4e:	shl    BYTE PTR [esp+eiz*8+0x6d],0xf7
  43cb53:	lea    ebx,[esi]
  43cb55:	nop
  43cb56:	idiv   bh
  43cb58:	mov    ah,0x4a
  43cb5a:	inc    ebp
  43cb5b:	clc    
  43cb5c:	mov    ds:0x7b0029cb,eax
  43cb61:	push   ebx
  43cb62:	shl    BYTE PTR [eax+eax*4+0x6d],0xf9
  43cb67:	mov    ecx,0x4085ab
  43cb6c:	push   es
  43cb6d:	mov    edi,eax
  43cb6f:	call   0x44b326
  43cb74:	lock int3 
  43cb76:	jnp    0x43cb70
  43cb78:	and    DWORD PTR [ecx-0x280c7d03],0x15d50b6d
  43cb82:	cmp    bl,0x6f
  43cb85:	call   0xf9f83608
  43cb8a:	test   BYTE PTR [ebx-0x74afde82],0x43
  43cb91:	cli    
  43cb92:	dec    eax
  43cb93:	or     BYTE PTR [eax-0x6faf0f6d],dl
  43cb99:	into   
  43cb9a:	not    DWORD PTR [ecx+0x62]
  43cb9d:	clc    
  43cb9e:	mov    eax,DWORD PTR [ebx+0x6]
  43cba1:	inc    ecx
  43cba2:	mov    WORD PTR [eax],cs
  43cba4:	std    
  43cba5:	popa   
  43cba6:	in     eax,dx
  43cba7:	and    BYTE PTR [edx],0xec
  43cbaa:	adc    BYTE PTR [ecx],0x0
	...
  43cbbd:	add    BYTE PTR [eax],al
  43cbbf:	add    ch,ch
  43cbc1:	ret    
  43cbc2:	loopne 0x43cb49
  43cbc4:	addr16 enter 0x438c,0xde
  43cbc9:	inc    eax
  43cbca:	mov    WORD PTR [eax],ss
  43cbcc:	aad    0x3e
  43cbce:	add    eax,0xe03a6485
  43cbd3:	push   eax
  43cbd4:	pop    edx
  43cbd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cbd6:	jle    0x43cbd8
  43cbd8:	(bad)  
  43cbd9:	lock sub eax,0x46e8a585
  43cbdf:	jmp    0x43cb8e
  43cbe1:	add    edi,DWORD PTR [ecx]
  43cbe3:	pop    edx
  43cbe4:	or     DWORD PTR [ecx+0x24e953c4],edi
  43cbea:	jge    0x43cbd0
  43cbec:	call   0x2023:0x8c9abb28
  43cbf3:	add    al,0x10
  43cbf5:	sbb    cl,BYTE PTR [edi]
  43cbf7:	(bad)  
  43cbf8:	mov    al,BYTE PTR [esi+edx*8+0x3e2875f9]
  43cbff:	cli    
  43cc00:	ins    DWORD PTR es:[edi],dx
  43cc01:	inc    ebx
  43cc02:	in     eax,0x6
  43cc04:	jp     0x43cbda
  43cc06:	int    0xf9
  43cc08:	pop    ebp
  43cc09:	push   0x5b55f5ab
  43cc0e:	in     al,dx
  43cc0f:	in     al,0x52
  43cc11:	arpl   cx,bx
  43cc13:	scas   eax,DWORD PTR es:[edi]
  43cc14:	arpl   WORD PTR [eax+0x69],bx
  43cc17:	idiv   BYTE PTR ds:0x97e38553
  43cc1d:	das    
  43cc1e:	xor    al,BYTE PTR [ebp+0x704a7733]
	...
  43cc38:	sbb    eax,0xa28d60f2
  43cc3d:	(bad)  
  43cc3f:	mov    BYTE PTR ds:0x20ebe485,bl
  43cc45:	fist   WORD PTR [ecx-0x21]
  43cc48:	fisttp WORD PTR [edx]
  43cc4a:	aas    
  43cc4b:	stc    
  43cc4c:	and    edi,ebx
  43cc4e:	inc    ecx
  43cc4f:	(bad)  
  43cc50:	sahf   
  43cc51:	mov    ch,0xef
  43cc53:	add    al,0x76
  43cc55:	rcr    BYTE PTR [esi-0x32],cl
  43cc58:	cli    
  43cc59:	stc    
  43cc5a:	int3   
  43cc5b:	(bad)  
  43cc5d:	dec    ebp
  43cc5e:	sub    DWORD PTR [esi],edi
  43cc60:	adc    al,0xd5
  43cc62:	out    0x38,eax
  43cc64:	out    0xec,eax
  43cc66:	mov    ch,0x35
  43cc68:	xor    edi,edx
  43cc6a:	xchg   ebx,eax
  43cc6b:	sti    
  43cc6c:	out    0x1f,al
  43cc6e:	add    bl,BYTE PTR [ecx+0x4e]
  43cc71:	(bad)  
  43cc72:	xor    bh,bl
  43cc74:	xor    ecx,ebp
  43cc76:	repnz pop eax
  43cc78:	push   esi
  43cc79:	cli    
  43cc7a:	jae    0x43cc87
  43cc7c:	sub    al,0xc6
  43cc7e:	mov    ch,0xeb
  43cc80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cc81:	fsub   st,st(7)
  43cc83:	add    esp,edi
  43cc85:	add    BYTE PTR [esi+ebx*8+0x5b],ch
  43cc89:	push   ebp
  43cc8a:	add    sp,WORD PTR [edx-0x27]
  43cc8e:	test   bl,0x0
  43cc91:	shl    BYTE PTR [esi],0x24
  43cc94:	test   bh,0x3d
  43cc97:	hlt    
  43cc98:	adc    eax,0x48324c
	...
  43ccad:	add    BYTE PTR [eax],al
  43ccaf:	add    BYTE PTR [eax+0x703bfbf8],dh
  43ccb5:	cdq    
  43ccb6:	out    0x82,eax
  43ccb8:	es out 0xfd,al
  43ccbb:	add    DWORD PTR [edx-0x3ffa9f81],ebp
  43ccc1:	fs es and al,0x6b
  43ccc5:	das    
  43ccc6:	cs and eax,0x89001ac0
  43cccc:	pop    ecx
  43cccd:	jnp    0x43ccd4
  43cccf:	mov    eax,ds:0xaf496087
  43ccd4:	call   0xa4b3e98f
  43ccd9:	mov    eax,ds:0xb07f292d
  43ccde:	cmp    eax,0x669d9a15
  43cce3:	in     eax,0x31
  43cce5:	fs jno 0x43cc7d
  43cce8:	aaa    
  43cce9:	repnz adc dl,BYTE PTR [ecx+0x6a00b8ef]
  43ccf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ccf1:	in     eax,0x66
  43ccf3:	(bad)  
  43ccf4:	cdq    
  43ccf5:	jnp    0x43cc7e
  43ccf7:	out    0x47,eax
  43ccf9:	pop    esi
  43ccfa:	cmp    eax,0x452b54dd
  43ccff:	aam    0xe0
  43cd01:	jp     0x43cd5b
  43cd03:	jmp    0xf2240547
  43cd08:	inc    edi
  43cd09:	fmulp  st(0),st
  43cd0b:	xor    DWORD PTR [ecx+0x51c53d63],0x64
  43cd12:	inc    ecx
  43cd13:	inc    ebp
	...
  43cd28:	dec    esi
  43cd29:	jnp    0x43ccb2
  43cd2b:	cs push esp
  43cd2d:	repnz adc bh,BYTE PTR [ecx]
  43cd30:	mov    WORD PTR [eax-0x1a559600],?
  43cd36:	jge    0x43cd86
  43cd38:	repnz fadd DWORD PTR [ebp+0x55932fa6]
  43cd3f:	adc    al,0xa0
  43cd41:	int    0x0
  43cd43:	adc    al,0xeb
  43cd45:	add    al,0x4f
  43cd47:	imul   dh
  43cd49:	idiv   DWORD PTR [ebp-0x5f]
  43cd4c:	pusha  
  43cd4d:	ins    BYTE PTR es:[edi],dx
  43cd4e:	add    ah,BYTE PTR [edx+0x21]
  43cd51:	mov    bh,0x82
  43cd54:	outs   dx,DWORD PTR ds:[esi]
  43cd55:	jbe    0x43cd4f
  43cd57:	add    BYTE PTR [edi+ecx*4],dl
  43cd5a:	add    al,0x33
  43cd5c:	sti    
  43cd5d:	add    esi,edi
  43cd5f:	mov    dh,BYTE PTR [esi-0xf]
  43cd62:	or     DWORD PTR [ebp+0x37],0xffffff82
  43cd66:	add    bh,bh
  43cd68:	lock div DWORD PTR ss:[ebp+0xb]
  43cd6d:	add    BYTE PTR [eax],0xff
  43cd70:	es in  al,0x4a
  43cd73:	mov    edi,DWORD PTR [edx]
  43cd75:	(bad)  
  43cd76:	enter  0x6e8,0xdc
  43cd7a:	add    BYTE PTR [eax],al
  43cd7c:	ret    0xbab6
  43cd7f:	adc    al,0xfb
  43cd81:	pop    edx
  43cd82:	in     al,dx
  43cd83:	adc    al,0xca
  43cd85:	fild   DWORD PTR [eax]
  43cd87:	push   ebx
  43cd88:	push   ss
  43cd89:	scas   al,BYTE PTR es:[edi]
  43cd8a:	mov    dh,0x64
	...
  43cda0:	(bad)  
  43cda1:	fild   DWORD PTR [eax]
  43cda3:	push   edi
  43cda4:	inc    edx
  43cda5:	mov    cl,0x24
  43cda7:	adc    BYTE PTR [edx-0x77],al
  43cdaa:	and    al,0x14
  43cdac:	mov    ds:0xba38244f,al
  43cdb1:	fild   DWORD PTR [eax]
  43cdb3:	sysenter 
  43cdb5:	jo     0x43cdb7
  43cdb7:	add    BYTE PTR [ebx-0x669bdaa0],cl
  43cdbd:	fwait
  43cdbe:	add    BYTE PTR [edx+0x37],ch
  43cdc1:	retf   0x53d3
  43cdc4:	lods   al,BYTE PTR ds:[esi]
  43cdc5:	into   
  43cdc6:	js     0x43ce36
  43cdc8:	inc    edi
  43cdc9:	(bad)  
  43cdcb:	aad    0xf0
  43cdcd:	adc    edi,DWORD PTR [ebp-0x1]
  43cdd0:	aaa    
  43cdd1:	fld    DWORD PTR [ebx-0x3b6c5c31]
  43cdd7:	dec    BYTE PTR [edx+ecx*8]
  43cdda:	rol    bh,0x44
  43cddd:	jg     0x43cd6a
  43cddf:	inc    eax
  43cde0:	cmp    edi,DWORD PTR [ebp-0x7f]
  43cde3:	inc    edi
  43cde4:	(bad)  
  43cde5:	les    esp,FWORD PTR [edx-0x79]
  43cde8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cde9:	lods   al,BYTE PTR ds:[esi]
  43cdea:	test   DWORD PTR [ecx-0x4e],ebx
  43cded:	dec    ebx
  43cdee:	inc    DWORD PTR [ecx+ebp*1-0x778b2382]
  43cdf5:	sub    BYTE PTR [ecx+0x24],bh
  43cdf8:	pop    esi
  43cdf9:	add    ebp,edi
  43cdfb:	dec    DWORD PTR [esi+0x62c86525]
  43ce01:	add    ch,bh
  43ce03:	dec    esp
	...
  43ce18:	add    eax,0xa66a5cd6
  43ce1d:	add    ah,bl
  43ce1f:	shr    ecx,cl
  43ce21:	mov    al,0x82
  43ce23:	bnd jbe 0x43ce33
  43ce26:	mov    dl,cl
  43ce28:	cli    
  43ce29:	jmp    0xf421c8ee
  43ce2e:	mov    esp,0x6d845cc1
  43ce33:	inc    eax
  43ce34:	bound  ebx,QWORD PTR [esi-0x7a]
  43ce37:	inc    edx
  43ce38:	sbb    bl,bl
  43ce3a:	inc    DWORD PTR [ecx+esi*4-0x208fab87]
  43ce41:	not    BYTE PTR [ecx+0x11]
  43ce44:	fld    st(7)
  43ce46:	in     eax,0x94
  43ce48:	sahf   
  43ce49:	out    dx,al
  43ce4a:	aam    0x84
  43ce4c:	mov    ds:0x2585096c,al
  43ce51:	nop
  43ce52:	in     al,dx
  43ce53:	mov    BYTE PTR [esi-0x5d7b2aea],ah
  43ce59:	xchg   ebp,eax
  43ce5a:	in     eax,dx
  43ce5b:	test   BYTE PTR [ebp-0x66],ah
  43ce5e:	add    eax,DWORD PTR [ebp+0x2cf41fa5]
  43ce64:	mov    ds:0x95b36d7,al
  43ce69:	add    eax,0xfd006314
  43ce6f:	mov    ebp,0x99e7d97a
  43ce74:	(bad)  
  43ce75:	fsubr  st(7),st
  43ce77:	add    ebx,edi
  43ce79:	fs retf 
  43ce7b:	sbb    eax,DWORD PTR [eax]
	...
  43ce8d:	add    BYTE PTR [eax],al
  43ce8f:	add    BYTE PTR ds:0x129de6f6,bh
  43ce95:	fsub   st,st(7)
  43ce97:	add    esi,DWORD PTR [edi+0x23]
  43ce9a:	repz sbb BYTE PTR [edi+0x27],ch
  43ce9e:	sti    
  43ce9f:	sbb    al,0xe9
  43cea1:	push   edi
  43cea2:	lahf   
  43cea3:	add    al,0x62
  43cea5:	fptan  
  43cea7:	xchg   edx,eax
  43cea8:	sub    ah,BYTE PTR [edx+0x26]
  43ceab:	pop    ds
  43ceac:	sbb    al,0x74
  43ceae:	fisub  WORD PTR [ecx+0x37]
  43ceb1:	adc    ebx,edx
  43ceb3:	inc    ebp
  43ceb4:	adc    ah,dh
  43ceb6:	jp     0x43ce7e
  43ceb8:	pop    es
  43ceb9:	loopne 0x43ce7c
  43cebb:	push   ds
  43cebc:	or     dh,ah
  43cebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43cebf:	shr    DWORD PTR [ebx+0x2e],cl
  43cec2:	and    DWORD PTR [esi],ebp
  43cec4:	adc    eax,0x100b30aa
  43cec9:	or     DWORD PTR [eax+0x12cac4eb],ebp
  43cecf:	(bad)  
  43ced1:	fs ret 
  43ced3:	sbb    esi,DWORD PTR [ebp-0x7572190b]
  43ced9:	in     eax,0x31
  43cedb:	mov    DWORD PTR [eax-0x26],0x904e6e28
  43cee2:	add    DWORD PTR [esi],0xcb9ae5d5
  43cee8:	add    BYTE PTR [eax+0x22],ah
  43ceeb:	lock jge 0x43cf22
  43ceee:	out    dx,eax
  43ceef:	fidivr DWORD PTR [ebx+0x5f]
  43cef2:	and    dh,ah
	...
  43cf08:	loopne 0x43cf22
  43cf0a:	bnd jg 0x43cf03
  43cf0d:	cmc    
  43cf0e:	mov    ecx,0x9cdfda
  43cf13:	or     eax,0x35c05852
  43cf18:	dec    esi
  43cf19:	jg     0x43cf2b
  43cf1b:	cmp    ebx,ebx
  43cf1d:	call   0xff50:0xc9293944
  43cf24:	mov    eax,ds:0x5da57dd9
  43cf29:	pop    esi
  43cf2a:	inc    esp
  43cf2b:	int    0x31
  43cf2d:	pop    eax
  43cf2e:	shl    ch,0x31
  43cf31:	jg     0x43cf4f
  43cf33:	sbb    ebx,ebp
  43cf35:	call   0xff50:0xc9391954
  43cf3c:	mov    eax,ds:0x5d257dd9
  43cf41:	pop    ebx
  43cf42:	test   BYTE PTR ds:0xe9f8f44e,cl
  43cf48:	sbb    BYTE PTR [esi],ch
  43cf4a:	and    al,0x15
  43cf4c:	fld    DWORD PTR [bx+si]
  43cf4f:	ins    BYTE PTR es:[edi],dx
  43cf50:	js     0x43cf19
  43cf52:	stc    
  43cf53:	jge    0x43cfd2
  43cf55:	(bad)  
  43cf58:	popa   
  43cf59:	pop    ebx
  43cf5a:	int    0x72
  43cf5c:	call   0xb1fc:0xc8942ec5
  43cf63:	sub    eax,0x5708f29b
  43cf68:	fnstsw WORD PTR [ebp+0xe830]
	...
  43cf7e:	add    BYTE PTR [eax],al
  43cf80:	popa   
  43cf81:	fldcw  WORD PTR ds:0x2435e11b
  43cf87:	mov    ecx,0xe500d966
  43cf8c:	push   0x2571c69a
  43cf91:	hlt    
  43cf92:	in     eax,0xe4
  43cf94:	jns    0x43cfe0
  43cf96:	(bad)  
  43cf97:	xlat   BYTE PTR ds:[ebx]
  43cf98:	fwait
  43cf99:	pop    esi
  43cf9a:	jno    0x43cf95
  43cf9c:	pop    es
  43cf9d:	lds    edx,FWORD PTR [ebx+0x0]
  43cfa0:	dec    ebp
  43cfa1:	adc    cl,BYTE PTR ds:0x988d50
  43cfa7:	mov    esp,edi
  43cfa9:	mov    eax,0xd84b0144
  43cfae:	dec    ebp
  43cfaf:	jmp    FWORD PTR [edi+0x3b0144b9]
  43cfb5:	fdivr  DWORD PTR [ebx-0x3a]
  43cfb8:	daa    
  43cfb9:	stos   BYTE PTR es:[edi],al
  43cfba:	not    DWORD PTR ds:0x38e77b
  43cfc0:	mov    eax,0x6d0f1419
  43cfc5:	bound  eax,QWORD PTR cs:[ecx]
  43cfc8:	xchg   cl,ah
  43cfca:	es call 0x3bbb49
  43cfd0:	adc    al,0x49
  43cfd2:	aas    
  43cfd3:	adc    al,0x3c
  43cfd5:	cdq    
  43cfd6:	and    al,0x18
  43cfd8:	psubusb mm0,QWORD PTR [eax]
  43cfdb:	add    BYTE PTR [esi+0x1d],bh
  43cfde:	je     0x43cfed
  43cfe0:	retf   
  43cfe1:	adc    BYTE PTR [edi+0x10],ch
	...
  43cff8:	jbe    0x43cf9b
  43cffa:	and    al,0x20
  43cffc:	and    ecx,DWORD PTR [edx+eiz*8-0x2]
  43d000:	test   BYTE PTR [esi-0x41],ah
  43d003:	jmp    0x3adf33
  43d008:	mov    ah,0x49
  43d00a:	inc    esp
  43d00b:	and    al,0xcf
  43d00d:	lahf   
  43d00e:	je     0x43d01e
  43d010:	add    esp,DWORD PTR [ebx-0x3c0572ec]
  43d016:	pop    esi
  43d017:	and    DWORD PTR [ebx+0x600b6de8],0xffffffe6
  43d01e:	test   DWORD PTR [ecx-0x41],eax
  43d021:	jns    0x43d09e
  43d023:	cmp    BYTE PTR [ecx-0x5d],bh
  43d026:	cli    
  43d027:	xor    bh,BYTE PTR [ebx+0x6200041d]
  43d02d:	cwde   
  43d02e:	and    BYTE PTR [eax+0x7a],ch
  43d031:	stc    
  43d032:	cmp    BYTE PTR [eax],al
  43d034:	jp     0x43cfc7
  43d036:	out    0x0,al
  43d038:	bound  esp,QWORD PTR [edi-0x25]
  43d03b:	data16 jle 0x43d0bb
  43d03e:	cmp    cl,ah
  43d040:	mov    dl,0xd1
  43d042:	xlat   BYTE PTR ds:[ebx]
  43d043:	adc    ebp,DWORD PTR [esi]
  43d045:	repnz cmp al,0x0
  43d048:	loope  0x43d027
  43d04a:	fadd   DWORD PTR [eax]
  43d04c:	cli    
  43d04d:	mov    ebp,0x7762003a
  43d052:	inc    edx
  43d053:	rol    ah,1
  43d055:	sbb    esi,edi
  43d057:	jb     0x43d0c3
  43d059:	addr16 cs cmp al,0x0
	...
  43d06d:	add    BYTE PTR [eax],al
  43d06f:	add    bl,ah
  43d071:	sub    al,0xb
  43d073:	push   eax
  43d074:	lahf   
  43d075:	add    ch,bh
  43d077:	jb     0x43d0b7
  43d079:	mov    DWORD PTR ds:0x12a,eax
  43d07e:	std    
  43d07f:	(bad)  
  43d080:	out    dx,eax
  43d081:	add    al,0x7
  43d083:	xor    eax,0x84f70efa
  43d088:	out    0xe6,al
  43d08a:	mov    al,0x0
  43d08c:	bound  eax,QWORD PTR [eax]
  43d08e:	add    al,0xc2
  43d090:	popa   
  43d091:	rcr    DWORD PTR [eax+edi*8],0x51
  43d095:	adc    eax,DWORD PTR [ebx+ecx*2-0x724432]
  43d09c:	mov    eax,0x22c01405
  43d0a1:	mov    edi,0x7fca638c
  43d0a6:	inc    edx
  43d0a7:	cld    
  43d0a8:	lods   eax,DWORD PTR ds:[esi]
  43d0a9:	cs mov ebp,0xfdc93ae8
  43d0af:	jmp    DWORD PTR [ecx-0x76c4018a]
  43d0b5:	ins    BYTE PTR es:[edi],dx
  43d0b6:	cmp    bh,BYTE PTR [ebx+edi*2]
  43d0b9:	fstp   DWORD PTR [ebx+0x45]
  43d0bc:	inc    esi
  43d0bd:	stc    
  43d0be:	push   edx
  43d0bf:	sbb    DWORD PTR [esi],edi
  43d0c1:	pop    ss
  43d0c2:	pop    ebx
  43d0c3:	sbb    eax,0x11531636
  43d0c8:	cs and eax,0xf226153b
  43d0ce:	xor    edi,esi
  43d0d0:	fnsave [eax-0x18]
  43d0d3:	and    BYTE PTR [eax],al
	...
  43d0e5:	add    BYTE PTR [eax],al
  43d0e7:	add    dh,cl
  43d0e9:	mov    edx,0xcdd61deb
  43d0ee:	jecxz  0x43d115
  43d0f0:	into   
  43d0f1:	leave  
  43d0f2:	fisttp DWORD PTR ds:0xe2d3e5b6
  43d0f8:	scas   al,BYTE PTR es:[edi]
  43d0f9:	loope  0x43d0c6
  43d0fb:	pop    edi
  43d0fc:	mov    dh,0xdd
  43d0fe:	ret    
  43d0ff:	pusha  
  43d100:	mov    cl,0xe5
  43d102:	addr16 pop ebp
  43d104:	sbb    eax,0x95fdfbf3
  43d109:	jo     0x43d0f0
  43d10b:	and    BYTE PTR [esi-0x383be92a],dl
  43d111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d112:	daa    
  43d113:	inc    esp
  43d114:	mov    edi,0xfb2eb987
  43d119:	retf   
  43d11a:	inc    edi
  43d11b:	cmc    
  43d11c:	sub    eax,0x3e116ed9
  43d121:	jbe    0x43d0c6
  43d123:	add    esp,edi
  43d125:	lock imul ecx,esi,0x4e
  43d129:	mov    esp,0xd9629a96
  43d12e:	call   0xc3e0aa36
  43d133:	pop    es
  43d134:	adc    bh,BYTE PTR [edi-0x39]
  43d137:	xor    dl,BYTE PTR [eax]
  43d139:	repnz repz out 0x5d,eax
  43d13d:	cdq    
  43d13e:	out    0x32,eax
  43d140:	adc    BYTE PTR [edx-0x387a0f06],cl
  43d146:	add    BYTE PTR [ecx+0x64325c61],ch
	...
  43d160:	pushf  
  43d161:	fiadd  WORD PTR gs:[edx+0x4d]
  43d165:	(bad)  
  43d166:	push   edi
  43d167:	stos   BYTE PTR es:[edi],al
  43d168:	call   0x228dee32
  43d16d:	fnstcw WORD PTR [ebp-0x43]
  43d170:	dec    ecx
  43d171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d172:	push   ebx
  43d173:	pop    ds
  43d174:	fld    DWORD PTR [ecx]
  43d176:	jg     0x43d137
  43d178:	popa   
  43d179:	fprem  
  43d17b:	ss jmp 0x43d1d9
  43d17e:	add    cl,ch
  43d180:	pop    ecx
  43d181:	pop    ecx
  43d182:	mov    ch,0xe9
  43d184:	popa   
  43d185:	lock clc 
  43d187:	out    dx,al
  43d188:	jl     0x43d19b
  43d18a:	push   ecx
  43d18b:	fs mov bh,0xd9
  43d18e:	add    BYTE PTR [ecx-0x16058f6c],dl
  43d194:	popa   
  43d195:	fld    DWORD PTR [eax-0x7269ec2]
  43d19b:	jbe    0x43d1f9
  43d19d:	scas   eax,DWORD PTR es:[edi]
  43d19e:	clc    
  43d19f:	dec    eax
  43d1a0:	ins    DWORD PTR es:[edi],dx
  43d1a1:	mov    es,WORD PTR [ecx+ebp*8-0x1e]
  43d1a5:	pop    ds
  43d1a6:	jae    0x43d195
  43d1a8:	loop   0x43d1c3
  43d1aa:	je     0x43d19e
  43d1ac:	call   0xf63858ba
  43d1b1:	lea    eax,[ecx+ebp*8-0x28]
  43d1b5:	xchg   edi,eax
  43d1b6:	add    al,0x64
  43d1b8:	scas   al,BYTE PTR es:[edi]
  43d1b9:	gs or  al,0xf2
  43d1bc:	test   al,0x7f
  43d1be:	or     dl,dh
  43d1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d1c1:	loop   0x43d145
  43d1c3:	mov    al,ds:0x0
	...
  43d1d8:	pop    esi
  43d1d9:	fld    DWORD PTR [eax]
  43d1db:	jb     0x43d1ce
  43d1dd:	pop    esp
  43d1de:	rol    BYTE PTR [edx],0xb8
  43d1e1:	pop    ebx
  43d1e2:	into   
  43d1e3:	xchg   ebp,eax
  43d1e4:	mov    al,0x55
  43d1e6:	add    BYTE PTR ds:[edi-0x708b3fa7],dh
  43d1ed:	sar    DWORD PTR [ebx-0x402c7c8e],cl
  43d1f3:	syscall 
  43d1f5:	test   al,0xf9
  43d1f7:	(bad)  
  43d1f8:	jnp    0x43d25b
  43d1fa:	or     al,BYTE PTR [ebp+0x1c0d64b9]
  43d200:	sub    BYTE PTR [ecx-0x29418b00],bl
  43d206:	scas   eax,DWORD PTR es:[edi]
  43d207:	(bad)  
  43d208:	push   eax
  43d209:	add    eax,0xf7d0c92b
  43d20e:	xor    dh,bl
  43d210:	xchg   ebp,eax
  43d211:	lea    eax,[ebp+0xdc3b85]
  43d217:	nop
  43d218:	fadd   QWORD PTR ds:[eax]
  43d21b:	add    BYTE PTR [ebx],bh
  43d21d:	sbb    BYTE PTR [ecx+edx*2],0xbe
  43d221:	cdq    
  43d222:	and    al,0x34
  43d224:	xchg   ecx,eax
  43d225:	aad    0x0
  43d227:	dec    DWORD PTR [ebp+eiz*4+0x7]
  43d22b:	inc    esi
  43d22c:	icebp  
  43d22d:	add    eax,0x9c35580d
  43d232:	add    BYTE PTR [ebx+0x4485e0c7],al
  43d238:	push   edi
  43d239:	shl    DWORD PTR [edx+0x1c],0x0
	...
  43d24d:	add    BYTE PTR [eax],al
  43d24f:	add    BYTE PTR [ebx+0x2f15f7be],bh
  43d255:	in     al,dx
  43d256:	cmp    BYTE PTR [eax],al
  43d258:	xchg   BYTE PTR ds:0xd4e34074,dl
  43d25e:	add    BYTE PTR [ecx],al
  43d260:	retf   
  43d261:	rol    BYTE PTR [esp-0x31],cl
  43d265:	sahf   
  43d266:	(bad)  
  43d267:	cmp    BYTE PTR [edi],al
  43d269:	sar    BYTE PTR [eax],1
  43d26b:	jae    0x43d238
  43d26d:	pusha  
  43d26e:	ins    BYTE PTR es:[edi],dx
  43d26f:	and    al,0x9b
  43d271:	pop    edx
  43d272:	mov    ebp,0xd4026200
  43d277:	stc    
  43d278:	jno    0x43d233
  43d27a:	pop    ss
  43d27b:	in     eax,0xb9
  43d27d:	sahf   
  43d27e:	inc    ax
  43d280:	or     al,BYTE PTR [edx]
  43d282:	or     eax,0x2a526200
  43d287:	stc    
  43d288:	ja     0x43d24c
  43d28a:	out    dx,al
  43d28b:	aas    
  43d28c:	bound  ebp,QWORD PTR [ebx-0x53]
  43d28f:	xchg   DWORD PTR [edi-0x12],edx
  43d292:	pop    edi
  43d293:	inc    esp
  43d294:	bound  edi,QWORD PTR [ebp-0x51]
  43d297:	or     edi,esp
  43d299:	arpl   bp,di
  43d29b:	jmp    DWORD PTR [edx-0xd]
  43d29e:	lds    esi,FWORD PTR ds:0xe7800055
  43d2a4:	bound  eax,QWORD PTR [eax]
  43d2a6:	std    
  43d2a7:	mov    edx,0xfffe0062
  43d2ac:	xlat   BYTE PTR ds:[ebx]
  43d2ad:	jle    0x43d2ac
  43d2af:	jmp    DWORD PTR [edx+0x70]
  43d2b2:	adc    al,BYTE PTR [eax]
	...
  43d2c8:	bound  eax,QWORD PTR [eax]
  43d2ca:	in     eax,dx
  43d2cb:	gs dec esi
  43d2cd:	mov    cl,0x81
  43d2cf:	inc    esp
  43d2d0:	jle    0x43d2ca
  43d2d2:	xchg   esi,eax
  43d2d3:	add    BYTE PTR [edx+0x1],ah
  43d2d6:	jge    0x43d328
  43d2d8:	gs mov esi,0xc877f9ce
  43d2de:	jmp    0xef0c:0xb983623f
  43d2e5:	xor    al,0x19
  43d2e7:	adc    BYTE PTR [eax-0x12add31c],cl
  43d2ed:	in     eax,0xb0
  43d2ef:	cpuid  
  43d2f1:	add    BYTE PTR [edx-0x40],bh
  43d2f4:	ins    DWORD PTR es:[edi],dx
  43d2f5:	je     0x43d29e
  43d2f7:	add    BYTE PTR [edx+0x0],ah
  43d2fa:	push   ss
  43d2fb:	ins    BYTE PTR es:[edi],dx
  43d2fc:	xchg   al,ah
  43d2fe:	dec    ecx
  43d2ff:	cmp    bl,cl
  43d301:	fnstenv [ebx+0x2cb25e1f]
  43d307:	push   ecx
  43d308:	ins    BYTE PTR es:[edi],dx
  43d309:	ficomp WORD PTR [edx-0x53]
  43d30c:	loope  0x43d319
  43d30e:	xchg   ebx,eax
  43d30f:	out    dx,eax
  43d310:	fisub  WORD PTR [ebp-0x35]
  43d313:	repz out 0x14,al
  43d316:	into   
  43d317:	sar    DWORD PTR [edi],0x21
  43d31a:	out    0xd3,al
  43d31c:	in     eax,0x9d
  43d31e:	ret    
  43d31f:	neg    esp
  43d321:	gs or  esi,esp
  43d324:	pop    es
  43d325:	cdq    
  43d326:	dec    edi
  43d327:	add    al,0x32
  43d329:	(bad)  
  43d32b:	cmp    BYTE PTR [eax],al
	...
  43d33d:	add    BYTE PTR [eax],al
  43d33f:	add    BYTE PTR [eax],dl
  43d341:	out    dx,al
  43d342:	repz ret 
  43d344:	push   esp
  43d345:	cdq    
  43d346:	out    0x7e,eax
  43d348:	xor    ah,BYTE PTR [eax-0x2c]
  43d34b:	out    dx,eax
  43d34c:	mov    dh,0x95
  43d34e:	out    0x88,eax
  43d350:	sbb    al,0x64
  43d352:	aam    0x7e
  43d354:	xchg   esi,eax
  43d355:	mov    ch,0x3
  43d357:	jg     0x43d30f
  43d359:	mov    ch,0xf7
  43d35b:	push   es
  43d35c:	inc    ebp
  43d35d:	mov    dl,0x9a
  43d35f:	push   edi
  43d360:	mov    ch,BYTE PTR [edx-0x11462260]
  43d366:	adc    ebx,0x4806b4fd
  43d36c:	bound  ebp,QWORD PTR [edx+0x610c7da0]
  43d372:	sbb    eax,0xbc3dd08
  43d377:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  43d379:	fldcw  WORD PTR [esi+eax*4+0x22]
  43d37d:	out    dx,al
  43d37e:	out    0x3,al
  43d380:	test   al,0xeb
  43d382:	in     eax,0x3
  43d384:	bound  esp,QWORD PTR [eax-0x51]
  43d387:	or     esp,edi
  43d389:	and    BYTE PTR [esi-0x24],ah
  43d38c:	and    bl,BYTE PTR [edi+0x55aabc00]
  43d392:	inc    esi
  43d393:	in     eax,0x44
  43d395:	jg     0x43d39b
  43d397:	loop   0x43d32d
  43d399:	jle    0x43d3b4
  43d39b:	loop   0x43d335
  43d39d:	addr16 adc eax,0x66b12062
  43d3a3:	test   eax,0x0
	...
  43d3b8:	or     DWORD PTR ds:0x8b61e900,ebx
  43d3be:	xchg   DWORD PTR [ebx-0x6eed0fa3],esi
  43d3c4:	mov    ebp,DWORD PTR [ebp-0x23659600]
  43d3ca:	test   DWORD PTR [edi-0x56d21164],ebp
  43d3d0:	xor    BYTE PTR [ebx+0x14e5325b],dl
  43d3d6:	cmp    BYTE PTR [edx-0x3f7a77d5],ch
  43d3dc:	mov    edi,0xd4e96699
  43d3e1:	jmp    0xae00:0xda3b6850
  43d3e8:	xor    bl,dh
  43d3ea:	adc    al,BYTE PTR [ecx+0x38]
  43d3ed:	lods   eax,DWORD PTR ds:[esi]
  43d3ee:	add    BYTE PTR [edx-0x55],dh
  43d3f1:	aad    0x7d
  43d3f3:	lods   eax,DWORD PTR ds:[esi]
  43d3f4:	sub    eax,0xa6d14154
  43d3f9:	outs   dx,DWORD PTR ds:[esi]
  43d3fa:	add    al,0x26
  43d3fc:	push   eax
  43d3fd:	cs push edx
  43d3ff:	jb     0x43d42f
  43d401:	pop    ecx
  43d402:	repnz std 
  43d404:	call   0x253:0x4c6e2d8a
  43d40b:	and    eax,0x69166911
  43d410:	xchg   ebx,eax
  43d411:	in     al,dx
  43d412:	and    ebx,esp
  43d414:	cmc    
  43d415:	push   ebp
  43d416:	pop    edx
  43d417:	jmp    0x43d47d
  43d419:	push   ds
  43d41a:	test   DWORD PTR [eax],eax
	...
  43d430:	xchg   ebp,eax
  43d431:	adc    BYTE PTR [edx-0x7bf86b04],ch
  43d437:	ror    BYTE PTR [edi],0xb4
  43d43a:	xor    DWORD PTR [ebx],0x20
  43d43d:	std    
  43d43e:	xor    al,0xe9
  43d440:	fdivrp st(0),st
  43d442:	add    DWORD PTR [esi-0x36],0x53
  43d446:	mov    esi,0x34eb6005
  43d44b:	jmp    0x43d41b
  43d44d:	xlat   BYTE PTR ds:[ebx]
  43d44e:	pop    es
  43d44f:	mov    esi,0xc67bd5cd
  43d454:	mov    ebx,edx
  43d456:	lock inc edi
  43d458:	clc    
  43d459:	push   es
  43d45a:	cli    
  43d45b:	jnp    0x43d497
  43d45d:	mov    ebx,0xa7cd8b57
  43d462:	mov    ebx,0x28dc0851
  43d467:	arpl   WORD PTR [edi],di
  43d469:	aad    0x0
  43d46b:	je     0x43d4e9
  43d46d:	pusha  
  43d46e:	aad    0x10
  43d470:	dec    ebx
  43d471:	fcom   DWORD PTR [ecx-0x3d]
  43d474:	ins    DWORD PTR es:[edi],dx
  43d475:	(bad)  
  43d476:	out    dx,al
  43d477:	push   esi
  43d478:	adc    al,0xe4
  43d47a:	or     al,0x13
  43d47c:	jnp    0x43d453
  43d47e:	push   eax
  43d47f:	push   0x447513
  43d484:	aam    0xe3
  43d486:	fcom   QWORD PTR [ecx]
  43d488:	jnp    0x43d45f
  43d48a:	jge    0x43d44c
  43d48c:	dec    edi
  43d48d:	loop   0x43d447
  43d48f:	fnstsw WORD PTR [ebx]
  43d491:	fadd   DWORD PTR [eax]
  43d493:	jmp    0x43d495
	...
  43d4a5:	add    BYTE PTR [eax],al
  43d4a7:	add    BYTE PTR [edx+0x70],cl
  43d4aa:	sub    eax,0xa15830
  43d4af:	mov    esi,ecx
  43d4b1:	mov    bh,0x5b
  43d4b3:	inc    esp
  43d4b4:	or     ebp,DWORD PTR [edi+0x2d]
  43d4b7:	sbb    BYTE PTR [eax],ch
  43d4b9:	xchg   esp,eax
  43d4ba:	add    BYTE PTR [ecx+0x5d20cd62],cl
  43d4c0:	sahf   
  43d4c1:	add    dh,BYTE PTR [esi+0x33]
  43d4c4:	jbe    0x43d4e5
  43d4c6:	inc    ecx
  43d4c7:	add    cl,ch
  43d4c9:	in     al,0x20
  43d4cb:	pop    ebp
  43d4cc:	es add bl,ah
  43d4cf:	adc    edx,edi
  43d4d1:	xor    eax,0x48120421
  43d4d6:	cmp    eax,0xfe026268
  43d4db:	call   DWORD PTR [ebx+eax*8]
  43d4de:	icebp  
  43d4df:	jmp    0x43d534
  43d4e1:	inc    edx
  43d4e2:	std    
  43d4e3:	test   BYTE PTR [ebp+edi*2-0x2a],dl
  43d4e7:	jae    0x43d566
  43d4e9:	cs mov ebp,0x2dbf2b5a
  43d4ef:	stc    
  43d4f0:	outs   dx,DWORD PTR ds:[esi]
  43d4f1:	push   es
  43d4f2:	hlt    
  43d4f3:	aas    
  43d4f4:	bound  edi,QWORD PTR [ecx-0x49fed7ff]
  43d4fa:	add    al,0x74
  43d4fc:	gs dec edx
  43d4fe:	stos   BYTE PTR es:[edi],al
  43d4ff:	adc    BYTE PTR [edx+0x2],ah
  43d502:	es mov ebp,0x8537cab1
  43d508:	xchg   edi,eax
  43d509:	loopne 0x43d56e
  43d50b:	inc    esp
	...
  43d520:	(bad)  
  43d521:	out    dx,eax
  43d522:	stos   DWORD PTR es:[edi],eax
  43d523:	add    DWORD PTR [ebp-0x5b],0x10
  43d527:	mov    esp,DWORD PTR [esi-0x16b006e4]
  43d52d:	mov    bl,0xf4
  43d52f:	clc    
  43d530:	mov    ch,0xec
  43d532:	push   DWORD PTR [ecx-0x6d2fd5e]
  43d538:	xchg   ebp,eax
  43d539:	in     al,0xcf
  43d53b:	adc    eax,DWORD PTR [esi]
  43d53d:	adc    bh,BYTE PTR ds:0x8c34b00
  43d543:	jae    0x43d59a
  43d545:	ja     0x43d587
  43d547:	adc    bh,ah
  43d549:	fnstenv [eax]
  43d54b:	push   edi
  43d54c:	push   0x1
  43d54e:	and    al,0xd1
  43d550:	jmp    0x43d53c
  43d552:	pop    edi
  43d553:	xor    BYTE PTR [edx+0x5e],dl
  43d556:	adc    bh,BYTE PTR [ebp-0x55]
  43d559:	add    DWORD PTR [ebp-0xc],ebp
  43d55c:	(bad)  
  43d55e:	ins    DWORD PTR es:[edi],dx
  43d55f:	shl    ecx,1
  43d561:	jecxz  0x43d51e
  43d563:	(bad)  
  43d564:	(bad)  
  43d566:	pop    es
  43d567:	gs (bad) es:[edi]
  43d56b:	gs mov dh,0xea
  43d56e:	sbb    DWORD PTR [ecx+ebp*2-0x2f],edi
  43d572:	xchg   BYTE PTR [edi+0x62],al
  43d575:	push   esp
  43d576:	or     dl,BYTE PTR [edi+0x7a]
  43d579:	jmp    0xf4d7:0xc49b0779
  43d580:	dec    ebp
  43d581:	fstp   DWORD PTR [esi+0x18]
	...
  43d598:	fistp  WORD PTR [edx]
  43d59a:	jmp    FWORD PTR ds:0x7be1ea6f
  43d5a0:	js     0x43d5f6
  43d5a2:	rcr    DWORD PTR [ecx+0x7a],1
  43d5a5:	mov    dh,BYTE PTR [ecx]
  43d5a7:	jge    0x43d5f2
  43d5a9:	rol    DWORD PTR [esi+0x48],1
  43d5ac:	bound  esp,QWORD PTR [eax-0x1c]
  43d5af:	sbb    esi,DWORD PTR [edi+0x2212e795]
  43d5b5:	mov    ss,WORD PTR [eax]
  43d5b7:	ret    
  43d5b8:	(bad)  
  43d5bb:	add    ah,BYTE PTR [edx-0x27]
  43d5be:	mov    ds:0x27c651f9,al
  43d5c3:	add    al,0x75
  43d5c5:	aam    0xbf
  43d5c7:	bound  ebx,QWORD PTR [esi-0x2a05ec27]
  43d5cd:	or     edx,edi
  43d5cf:	add    esp,DWORD PTR [edx+0x0]
  43d5d2:	lods   al,BYTE PTR ds:[esi]
  43d5d3:	add    eax,0x6a00d962
  43d5d8:	jae    0x43d597
  43d5da:	pop    ebp
  43d5db:	and    eax,0xf374d966
  43d5e0:	sbb    DWORD PTR [ecx+edi*8-0x4d0de2a2],edi
  43d5e7:	call   0xb797af4d
  43d5ec:	pop    eax
  43d5ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d5ee:	and    dl,cl
  43d5f0:	sbb    eax,0xc2fa51d9
  43d5f5:	repz pop ecx
  43d5f7:	lock daa 
  43d5f9:	aad    0x74
  43d5fb:	int3   
	...
  43d610:	cmp    BYTE PTR [edi-0x563009f0],bl
  43d616:	xor    bh,BYTE PTR [ecx-0x46df561e]
  43d61c:	xchg   esp,eax
  43d61d:	data16 or al,0xe
  43d620:	fwait
  43d621:	cdq    
  43d622:	adc    ch,BYTE PTR [ecx-0x12bdab9f]
  43d628:	loopne 0x43d63e
  43d62a:	or     al,0x2
  43d62c:	imul   edx,DWORD PTR [edx+eax*2-0x27],0xfffffff8
  43d631:	xchg   BYTE PTR [edx+esi*2],cl
  43d634:	cmp    DWORD PTR [ebp-0x4ba4d475],ebp
  43d63a:	enter  0x63af,0xf2
  43d63e:	xchg   BYTE PTR [ebx],ah
  43d640:	addr16 pop esi
  43d642:	inc    edx
  43d643:	fchs   
  43d645:	daa    
  43d646:	add    esi,DWORD PTR [edx-0x5f]
  43d649:	mov    eax,ds:0xd8b09935
  43d64e:	and    eax,0xcc7171ab
  43d653:	jmp    0x9192afb9
  43d658:	(bad)  
  43d659:	stc    
  43d65a:	(bad)  
  43d65b:	call   0x624ff440
  43d660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d661:	leave  
  43d662:	test   DWORD PTR [eax],eax
  43d664:	dec    ebp
  43d665:	in     eax,0x81
  43d667:	add    DWORD PTR [eax+0x6f67dce],edx
  43d66d:	ja     0x43d5f2
  43d66f:	cmp    eax,0x447c13
	...
  43d688:	mov    eax,0x870ff751
  43d68d:	jb     0x43d68f
  43d68f:	add    bl,bh
  43d691:	arpl   WORD PTR ds:0x9cdad8,dx
  43d697:	lea    eax,[edi]
  43d699:	rcl    DWORD PTR [eax+edx*2],0x8c
  43d69d:	pop    DWORD PTR [edi+eax*8]
  43d6a0:	test   eax,0xddcb011c
  43d6a6:	add    bh,bh
  43d6a8:	mov    dh,0x30
  43d6aa:	or     DWORD PTR [eax-0x45],eax
  43d6ad:	push   ecx
  43d6ae:	shl    BYTE PTR [ebx+ecx*8+0x63],0x2d
  43d6b3:	and    al,ch
  43d6b5:	mov    al,ds:0x8f958500
  43d6ba:	pop    esi
  43d6bb:	mov    edi,edi
  43d6bd:	mov    edi,0xdc7b00cc
  43d6c2:	xor    DWORD PTR [esi-0x79],ebp
  43d6c5:	nop
  43d6c6:	sbb    al,0x8b
  43d6c8:	xor    eax,0x9ca33ed
  43d6cd:	test   al,0x85
  43d6cf:	inc    edx
  43d6d0:	ja     0x43d6a3
  43d6d2:	enter  0x8573,0xc2
  43d6d6:	ret    0xcf89
  43d6d9:	mov    cl,0xcc
  43d6db:	add    BYTE PTR [ebx],bh
  43d6dd:	fdiv   st(3),st
  43d6df:	dec    ebp
  43d6e0:	aas    
  43d6e1:	add    DWORD PTR [eax],esp
  43d6e3:	cmp    ebx,DWORD PTR [ebp-0x27]
  43d6e6:	push   0x33
  43d6e8:	mov    al,0x9f
  43d6ea:	adc    BYTE PTR [edi],cl
	...
  43d700:	xchg   ebp,eax
  43d701:	popf   
  43d702:	add    esp,DWORD PTR cs:[edx-0x48]
  43d706:	add    BYTE PTR ds:0x2521c32a,dh
  43d70c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d70d:	out    dx,al
  43d70e:	jne    0x43d69c
  43d710:	inc    esi
  43d711:	ss add al,0x0
  43d714:	(bad)  
  43d716:	cmp    dl,BYTE PTR [eax]
  43d718:	out    dx,eax
  43d719:	mov    ebp,0x7f921428
  43d71e:	push   ebx
  43d71f:	add    al,0xdb
  43d721:	jne    0x43d74b
  43d723:	aam    0x62
  43d725:	repnz cld 
  43d727:	clc    
  43d728:	mov    cl,0x7a
  43d72a:	and    BYTE PTR [esi+eiz*4],0xf1
  43d72e:	cld    
  43d72f:	(bad)  
  43d730:	(bad)  
  43d732:	xor    edx,0x3977514f
  43d738:	out    0xb6,eax
  43d73a:	sti    
  43d73b:	add    BYTE PTR [esi-0x41],0xcb
  43d73f:	stc    
  43d740:	lods   eax,DWORD PTR ds:[esi]
  43d741:	in     al,dx
  43d742:	fmul   QWORD PTR [edi]
  43d744:	and    dh,dl
  43d746:	ja     0x43d783
  43d748:	inc    edx
  43d749:	push   ebx
  43d74a:	inc    ecx
  43d74b:	add    cl,ch
  43d74d:	mov    ecx,0x3816f981
  43d752:	jp     0x43d798
  43d754:	add    ch,BYTE PTR ds:0xcc022585
  43d75b:	jno    0x43d7ab
  43d75d:	out    dx,eax
  43d75e:	xchg   edx,eax
  43d75f:	inc    eax
  43d760:	xor    al,0xa2
  43d762:	retf   
  43d763:	jno    0x43d765
	...
  43d775:	add    BYTE PTR [eax],al
  43d777:	add    BYTE PTR [esi+0xf],dl
  43d77a:	bnd jmp 0x43d7f0
  43d77d:	mov    al,0x4
  43d77f:	test   DWORD PTR [ebp-0x5d4e0400],ebx
  43d785:	out    dx,al
  43d786:	sub    al,0xf9
  43d788:	int    0xfc
  43d78a:	das    
  43d78b:	stc    
  43d78c:	push   edi
  43d78d:	sbb    dh,ch
  43d78f:	aas    
  43d790:	(bad)  
  43d791:	fchs   
  43d793:	pop    esp
  43d794:	ins    WORD PTR es:[edi],dx
  43d796:	jmp    0x96ba:0x6cc99b78
  43d79d:	sar    DWORD PTR [edi-0x51],1
  43d7a0:	push   ss
  43d7a1:	out    0x81,eax
  43d7a3:	jp     0x43d820
  43d7a5:	leave  
  43d7a6:	outs   dx,BYTE PTR ds:[esi]
  43d7a7:	adc    al,0xdf
  43d7a9:	push   ss
  43d7aa:	jg     0x43d74e
  43d7ac:	ins    DWORD PTR es:[edi],dx
  43d7ad:	out    0x69,al
  43d7af:	js     0x43d7a9
  43d7b1:	pop    esp
  43d7b2:	pop    ecx
  43d7b3:	push   esi
  43d7b4:	mov    esp,0x87240c50
  43d7b9:	popf   
  43d7ba:	out    0xdb,eax
  43d7bc:	push   ebp
  43d7bd:	jecxz  0x43d808
  43d7bf:	int3   
  43d7c0:	fbld   TBYTE PTR [edi+ebx*8-0x6126d9a0]
  43d7c7:	xchg   bl,cl
  43d7c9:	ins    DWORD PTR es:[edi],dx
  43d7ca:	iret   
  43d7cb:	int3   
  43d7cc:	xor    ebx,ebp
  43d7ce:	sub    dh,dh
  43d7d0:	gs retf 0x3a7
  43d7d4:	out    0xae,eax
  43d7d6:	outs   dx,BYTE PTR ds:[esi]
  43d7d7:	mov    esp,0xccf86aba
	...
  43d7f0:	fwait
  43d7f1:	push   edx
  43d7f2:	or     DWORD PTR [esi+0x2c0f6c90],eax
  43d7f8:	sub    BYTE PTR [eax-0x34],dl
  43d7fb:	jmp    0x43d823
  43d7fd:	popf   
  43d7fe:	out    0x7a,eax
  43d800:	dec    ecx
  43d801:	mov    cl,0x86
  43d803:	inc    edi
  43d804:	bound  eax,QWORD PTR [eax+ecx*4-0x1862f0e8]
  43d80b:	test   BYTE PTR [esi+0x6203e509],bl
  43d811:	sbb    ah,BYTE PTR [esi-0x28]
  43d814:	xchg   BYTE PTR [edx+0x50b3ad6e],cl
  43d81a:	adc    esp,DWORD PTR [eax]
  43d81c:	adc    BYTE PTR [eax+0x0],0x15
  43d820:	cmp    BYTE PTR [ebp-0x35d651d3],0x14
  43d827:	cli    
  43d828:	mov    eax,ds:0x49e437d9
  43d82d:	test   BYTE PTR [ecx+ebp*8-0x53],al
  43d831:	fistp  QWORD PTR [eax-0x719f154]
  43d837:	nop
  43d838:	dec    edi
  43d839:	out    0xf8,eax
  43d83b:	jmp    0x2da18cfe
  43d840:	pop    dx
  43d842:	rcr    dh,0xe2
  43d845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d846:	(bad)  
  43d847:	call   0xd51932ad
  43d84c:	jmp    0xbef4dacc
  43d851:	test   al,0xfe
  43d853:	call   0x43d858
	...
  43d868:	popa   
  43d869:	pop    esp
  43d86a:	add    eax,0xc75a939c
  43d86f:	mov    ah,0xcb
  43d871:	jnp    0x43d875
  43d873:	xchg   esi,eax
  43d874:	mov    ds:0xd975ca2c,al
  43d87a:	out    0x9,eax
  43d87c:	fld    DWORD PTR [bx+si]
  43d87f:	jb     0x43d812
  43d881:	pop    ebx
  43d882:	fld    DWORD PTR [ecx]
  43d884:	and    ch,ah
  43d886:	clc    
  43d887:	push   cs
  43d888:	adc    eax,0xcd12495
  43d88d:	icebp  
  43d88e:	xchg   BYTE PTR [ebp-0x41173a9b],cl
  43d894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d895:	(bad)  
  43d897:	pusha  
  43d898:	and    bh,BYTE PTR [ebp+0x69a32238]
  43d89e:	mov    ebx,cr7
  43d8a1:	mov    ch,0x5d
  43d8a3:	sub    eax,0x9983d266
  43d8a8:	pop    esi
  43d8a9:	fld    DWORD PTR [eax]
  43d8ab:	add    BYTE PTR [edx],dh
  43d8ad:	pusha  
  43d8ae:	stc    
  43d8af:	(bad)  
  43d8b0:	cmp    eax,DWORD PTR [edi-0x360ba8e8]
  43d8b6:	js     0x43d926
  43d8b8:	jg     0x43d897
  43d8ba:	not    DWORD PTR ds:0x38eb5f
  43d8c0:	mov    al,0x30
  43d8c2:	sbb    DWORD PTR [edi+ebp*1-0x2b],0xe56edb7d
  43d8ca:	bound  ecx,QWORD PTR [eax]
	...
  43d8e0:	inc    esp
  43d8e1:	push   es
  43d8e2:	add    bx,di
  43d8e5:	fadd   DWORD PTR [ebx-0xedf1c33]
  43d8eb:	inc    DWORD PTR [ebp+eiz*2+0x59ef2444]
  43d8f2:	shl    BYTE PTR [ebp-0xd],0x86
  43d8f6:	or     BYTE PTR [edi+0x22],bl
  43d8f9:	stos   DWORD PTR es:[edi],eax
  43d8fa:	stc    
  43d8fb:	dec    ebx
  43d8fd:	arpl   ax,dx
  43d8ff:	cmp    DWORD PTR [ebx-0xe],0xffffff81
  43d903:	push   esp
  43d904:	pop    edi
  43d905:	in     eax,dx
  43d906:	add    DWORD PTR [edi+ebp*2-0x3b],0xe420dd83
  43d90e:	adc    DWORD PTR [edi+ebx*4-0x18],0xffffff85
  43d913:	inc    esp
  43d914:	lahf   
  43d915:	mov    eax,0x63de5150
  43d91a:	ret    0x6e8b
  43d91d:	gs jl  0x43d944
  43d920:	mov    bh,0x0
  43d922:	in     eax,dx
  43d923:	test   BYTE PTR [esi+0xc88312],al
  43d929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d92a:	and    al,0x20
  43d92c:	mov    al,ds:0x7ac0fb1a
  43d931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d932:	and    al,0x10
  43d934:	repnz mov al,ds:0xd7622424
  43d93a:	mov    ebx,0xecdea687
  43d93f:	test   BYTE PTR [edx+ecx*1],bl
  43d942:	jecxz  0x43d93c
	...
  43d958:	inc    ebp
  43d959:	and    edi,DWORD PTR [ebx+0x4c]
  43d95c:	xchg   BYTE PTR [edx],cl
  43d95e:	jp     0x43d920
  43d960:	scas   eax,DWORD PTR es:[edi]
  43d961:	stc    
  43d962:	jnp    0x43d9d0
  43d964:	xchg   BYTE PTR [esi],dl
  43d966:	test   bh,dh
  43d968:	pop    edi
  43d969:	ror    BYTE PTR [ebp+eax*4+0x7d0916be],0x1b
  43d971:	std    
  43d972:	push   ebx
  43d973:	cmp    al,0xd9
  43d975:	lds    esp,FWORD PTR [eax]
  43d977:	and    al,0xe2
  43d979:	pop    ss
  43d97a:	ins    DWORD PTR es:[edi],dx
  43d97b:	jae    0x43d9f3
  43d97d:	jge    0x43d9bf
  43d97f:	and    al,0x3e
  43d981:	ret    0x852d
  43d984:	sahf   
  43d985:	(bad)  
  43d986:	in     al,dx
  43d987:	dec    ebp
  43d988:	fnstcw WORD PTR [edi+0x75]
  43d98b:	jl     0x43d913
  43d98d:	ret    0x9bdc
  43d990:	ficom  WORD PTR [edi+eax*8+0x4066b285]
  43d997:	and    al,0x7e
  43d999:	(bad)  
  43d99a:	mov    esi,0x38d6a885
  43d99f:	and    al,0x56
  43d9a1:	out    dx,eax
  43d9a2:	ret    0x21ff
  43d9a5:	push   ss
  43d9a6:	in     eax,dx
  43d9a7:	xchg   BYTE PTR [esi],dl
  43d9a9:	push   ds
  43d9aa:	in     eax,0x7c
  43d9ac:	fwait
  43d9ad:	hlt    
  43d9ae:	push   edx
  43d9af:	enter  0x2de9,0x19
  43d9b3:	sub    BYTE PTR [ebx+0x46],cl
  43d9b6:	sbb    DWORD PTR [eax],edx
  43d9b8:	or     al,0xf1
  43d9ba:	mov    al,0x85
	...
  43d9d0:	es push ss
  43d9d2:	jmp    0xed62005b
  43d9d7:	test   dh,dh
  43d9d9:	fmul   DWORD PTR [ebx]
  43d9db:	call   0xfdb2eb1f
  43d9e0:	out    0x95,al
  43d9e2:	or     ebp,esp
  43d9e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d9e5:	push   ecx
  43d9e6:	pop    ds
  43d9e7:	adc    cl,bh
  43d9e9:	sbb    DWORD PTR [edi],eax
  43d9eb:	xor    dh,BYTE PTR [edx+0x5033d3e2]
  43d9f1:	cdq    
  43d9f2:	out    0x7c,eax
  43d9f4:	(bad)  
  43d9f5:	mov    ebp,0xd6268503
  43d9fa:	data16 (bad) 
  43d9fc:	dec    ebp
  43d9fd:	imul   edi,ecx,0x5d
  43da00:	pusha  
  43da01:	lock in eax,dx
  43da03:	enter  0xe31b,0x65
  43da07:	retf   0x6661
  43da0a:	cmp    eax,0x6a94984
  43da0f:	inc    eax
  43da10:	(bad)  
  43da11:	fstp   DWORD PTR [esi+0x4f]
  43da14:	ds int 0xfd
  43da17:	cli    
  43da18:	mov    ch,BYTE PTR [eax+edx*8-0x24]
  43da1c:	test   DWORD PTR [esi-0x5d],ecx
  43da1f:	pop    ds
  43da20:	jbe    0x43da70
  43da22:	mov    ds:0x9f509a1f,eax
  43da27:	pop    es
  43da28:	pop    ebx
  43da29:	sub    ebp,DWORD PTR [edi+0x6c1ac6e9]
  43da2f:	out    dx,eax
  43da30:	mov    edx,DWORD PTR [eax-0x69]
  43da33:	or     eax,DWORD PTR [eax]
	...
  43da45:	add    BYTE PTR [eax],al
  43da47:	add    cl,ch
  43da49:	cwde   
  43da4a:	in     al,0x1c
  43da4c:	xchg   edx,eax
  43da4d:	dec    esi
  43da4e:	stos   DWORD PTR es:[edi],eax
  43da4f:	pop    ds
  43da50:	jp     0x43da6d
  43da52:	call   0xe8ccc031
  43da57:	test   ch,dl
  43da59:	fmul   st(6),st
  43da5b:	mov    ebx,0xc2cec7ff
  43da60:	xor    dh,BYTE PTR [ecx+0x2b]
  43da63:	add    esp,DWORD PTR [edx-0x27]
  43da66:	add    BYTE PTR [eax-0x16242a67],bl
  43da6c:	popa   
  43da6d:	fs (bad) 
  43da6f:	cmc    
  43da70:	jmp    0x407b:0x9619249c
  43da77:	cmp    al,0x84
  43da79:	pop    edx
  43da7a:	jl     0x43da81
  43da7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43da7d:	loopne 0x43da91
  43da7f:	aad    0x4f
  43da81:	mov    ds:0x66266400,al
  43da86:	xor    dh,BYTE PTR [esi+0x290e8e33]
  43da8c:	pop    sp
  43da8e:	clc    
  43da8f:	jb     0x43da23
  43da91:	mov    ebp,0xb56b7014
  43da96:	pop    ebp
  43da97:	sub    eax,0x15f2565e
  43da9c:	or     eax,0x3691ca5d
  43daa1:	jmp    0x43da9b
  43daa3:	jle    0x43da88
  43daa5:	or     esi,DWORD PTR [esi+ebp*8+0x78]
  43daa9:	sbb    al,0xe8
  43daab:	iret   
	...
  43dac0:	hlt    
  43dac1:	loopne 0x43dabb
  43dac3:	jb     0x43daff
  43dac5:	mov    ebp,0xc5cb702c
  43daca:	pop    ebp
  43dacb:	lods   eax,DWORD PTR ds:[esi]
  43dacc:	popa   
  43dacd:	pop    esp
  43dace:	rol    DWORD PTR [edx+0x74],0x5c
  43dad2:	inc    esp
  43dad3:	or     eax,0x5745c6a
  43dad8:	mov    dl,0x5a
  43dada:	cmp    eax,0x249d38e1
  43dadf:	int    0x2e
  43dae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dae2:	or     al,0x70
  43dae4:	sbb    ebp,ebx
  43dae6:	xchg   DWORD PTR [edx-0x32bba36f],ebx
  43daec:	jno    0x43db48
  43daee:	cmp    eax,0x5db8c6f5
  43daf3:	add    BYTE PTR [edi-0xdfc7e2b],dh
  43daf9:	out    dx,eax
  43dafa:	sbb    BYTE PTR [ebx-0x39],ah
  43dafd:	aad    0x2b
  43daff:	rcr    ch,0xb0
  43db02:	push   edi
  43db03:	pop    ebx
  43db04:	clc    
  43db05:	and    DWORD PTR [edx+eax*8],ebp
  43db08:	dec    edi
  43db09:	fisttp QWORD PTR [ebp-0x75]
  43db0c:	pop    ds
  43db0d:	pop    esp
  43db0e:	in     al,dx
  43db0f:	adc    BYTE PTR [eax+0x218b4faf],cl
  43db15:	cmp    ecx,0x56
  43db18:	mov    al,0x5
  43db1a:	not    DWORD PTR ds:0x38e59f
  43db20:	(bad)  
  43db21:	sbb    al,0x74
  43db23:	jp     0x43db25
	...
  43db35:	add    BYTE PTR [eax],al
  43db37:	add    BYTE PTR [eax],cl
  43db39:	xor    al,0x4b
  43db3b:	push   ebx
  43db3c:	jno    0x43db14
  43db3e:	dec    edi
  43db3f:	call   DWORD PTR [esi]
  43db41:	pop    ebp
  43db42:	adc    BYTE PTR [eax-0x5],al
  43db45:	pop    ecx
  43db46:	shl    BYTE PTR [edx+esi*2-0x54],0x85
  43db4b:	inc    ebp
  43db4c:	jg     0x43dafa
  43db4e:	bound  eax,QWORD PTR [ecx]
  43db50:	arpl   WORD PTR [ebp-0x75],di
  43db53:	inc    eax
  43db54:	sti    
  43db55:	pop    ss
  43db56:	or     eax,0x9ceb7c
  43db5b:	test   DWORD PTR [ebx+0x68d3690],ecx
  43db61:	adc    DWORD PTR [eax-0x73],edx
  43db64:	push   es
  43db65:	adc    eax,0xcf68d50
  43db6a:	push   eax
  43db6b:	push   esi
  43db6d:	sbb    BYTE PTR [ecx+0xd17735d],al
  43db73:	add    BYTE PTR [ebx+0x7b85009c],cl
  43db79:	nop
  43db7a:	adc    edi,edi
  43db7c:	not    BYTE PTR [eax]
  43db7e:	div    DWORD PTR [ebp+0x62]
  43db81:	retf   0x73c2
  43db84:	xchg   edx,eax
  43db85:	daa    
  43db86:	ret    0xe13
  43db89:	add    bh,BYTE PTR ds:0x49b2e700
  43db8f:	add    ebp,ecx
  43db91:	sub    eax,0xef5ee5c1
  43db96:	dec    eax
  43db97:	cld    
  43db98:	gs (bad) 
  43db9b:	or     al,0x0
	...
  43dbad:	add    BYTE PTR [eax],al
  43dbaf:	add    BYTE PTR [edx+0x55c87ff2],ah
  43dbb5:	ins    DWORD PTR es:[edi],dx
  43dbb6:	retf   0x7274
  43dbb9:	aaa    
  43dbba:	cli    
  43dbbb:	or     esp,DWORD PTR [edx-0xe]
  43dbbe:	cld    
  43dbbf:	xchg   BYTE PTR [esi+esi*8+0x1b6a5a75],bh
  43dbc6:	(bad)  
  43dbc7:	sub    al,0x22
  43dbc9:	iret   
  43dbca:	and    dl,BYTE PTR [ebp+0x1b]
  43dbcd:	xor    ebp,DWORD PTR [ecx]
  43dbcf:	test   DWORD PTR [esi],ecx
  43dbd1:	mov    eax,ds:0xace7512a
  43dbd6:	enter  0x7850,0xf2
  43dbda:	push   esi
  43dbdb:	add    cl,bl
  43dbdd:	pop    eax
  43dbde:	push   esi
  43dbdf:	call   DWORD PTR [edi+ebx*2-0x4dadd417]
  43dbe6:	add    al,0x83
  43dbe8:	and    ah,ch
  43dbea:	add    ecx,edi
  43dbec:	dec    edi
  43dbed:	es out dx,eax
  43dbef:	aas    
  43dbf0:	bound  esi,QWORD PTR [ebx-0x34]
  43dbf3:	jbe    0x43dc44
  43dbf5:	les    esi,FWORD PTR [edi+0x4b]
  43dbf8:	into   
  43dbf9:	je     0x43dbb0
  43dbfb:	je     0x43dc76
  43dbfd:	mov    ah,BYTE PTR [ebx+0x779ebd0b]
  43dc03:	lock fistp WORD PTR [edi+0x34df2050]
  43dc0a:	rcl    DWORD PTR [eax-0x5b],0xd8
  43dc0e:	pushf  
  43dc0f:	(bad)  
  43dc10:	xor    BYTE PTR [ebx-0x18],dh
  43dc13:	sub    al,0x0
	...
  43dc25:	add    BYTE PTR [eax],al
  43dc27:	add    BYTE PTR [ebx+0x4df3c3c5],bl
  43dc2d:	fldenv [esp+eax*8+0xe]
  43dc31:	aad    0x6e
  43dc33:	mov    esi,0xb66ed187
  43dc38:	mov    bh,bl
  43dc3a:	jecxz  0x43dc00
  43dc3c:	imul   ebp,DWORD PTR [ebx+0x12082527],0xffffffa6
  43dc43:	jns    0x43dbe2
  43dc45:	cwde   
  43dc46:	ss fbld TBYTE PTR cs:[ebp+0xb]
  43dc4b:	clc    
  43dc4c:	mov    dl,0x52
  43dc4e:	int    0x7
  43dc50:	inc    ebp
  43dc51:	imul   edx,ebp,0x7
  43dc54:	cmp    al,0x66
  43dc56:	loop   0x43dc68
  43dc58:	and    bh,BYTE PTR [eax+0x60]
  43dc5b:	std    
  43dc5c:	inc    esi
  43dc5d:	xlat   BYTE PTR ds:[ebx]
  43dc5e:	jmp    0x43dc5f
  43dc60:	mov    al,0xda
  43dc62:	sbb    ax,0x5362
  43dc66:	cmp    BYTE PTR [esp+ebx*8],dl
  43dc69:	nop
  43dc6a:	sub    ch,dh
  43dc6c:	rol    DWORD PTR [eax],cl
  43dc6e:	fimul  DWORD PTR [ebp-0xb675c3c]
  43dc74:	aas    
  43dc75:	add    edx,ebp
  43dc77:	lea    esi,[edi-0x5d1e577]
  43dc7d:	add    ebx,esp
  43dc7f:	(bad)  
  43dc80:	jmp    0x43dd00
  43dc82:	shr    DWORD PTR [eax],0x1c
  43dc85:	(bad)  
  43dc86:	out    0x32,eax
  43dc88:	imul   esp,DWORD PTR [esi],0xffffffab
  43dc8b:	pop    ds
	...
  43dca0:	push   0xffffffce
  43dca2:	xchg   ecx,eax
  43dca3:	xor    dl,BYTE PTR [edx-0xd0b6376]
  43dca9:	jo     0x43dc9a
  43dcab:	cmp    edx,DWORD PTR [eax]
  43dcad:	into   
  43dcae:	add    BYTE PTR [esi+0x1d],bh
  43dcb1:	mov    ch,0x18
  43dcb3:	xchg   esi,eax
  43dcb4:	scas   al,BYTE PTR es:[edi]
  43dcb5:	sub    DWORD PTR [ebp+ecx*8+0x41],edi
  43dcb9:	fadd   st(1),st
  43dcbb:	out    dx,al
  43dcbc:	out    dx,al
  43dcbd:	sbb    cl,BYTE PTR [ecx]
  43dcbf:	inc    esi
  43dcc0:	mov    dh,0xdc
  43dcc2:	ret    0xeede
  43dcc5:	pop    ds
  43dcc6:	xchg   DWORD PTR [ebp+0x3709bd5d],ebp
  43dccc:	and    BYTE PTR [ecx-0x6a29199e],ch
  43dcd2:	and    al,0xc5
  43dcd4:	jmp    0x8f3:0x6505247c
  43dcdb:	mov    es,WORD PTR [esi+edx*2]
  43dcde:	dec    esp
  43dcdf:	or     eax,0x56c5676
  43dce4:	shl    DWORD PTR ss:[ecx+0x8f53da9],1
  43dceb:	retfw  0xd9
  43dcef:	jmp    0x96871d2
  43dcf4:	aad    0x6d
  43dcf6:	adc    al,0xea
  43dcf8:	fisubr DWORD PTR [ebx+0x651e64f9]
  43dcfe:	cmp    DWORD PTR [edx+0x52],esp
  43dd01:	mov    ch,0x10
  43dd03:	bound  eax,QWORD PTR [eax]
	...
  43dd15:	add    BYTE PTR [eax],al
  43dd17:	add    BYTE PTR [edx-0x6d8ddf4b],al
  43dd1d:	mov    ch,0x18
  43dd1f:	sbb    bl,dl
  43dd21:	les    esi,FWORD PTR [ecx]
  43dd23:	bound  edx,QWORD PTR [ebx]
  43dd25:	icebp  
  43dd26:	cmp    eax,0x8e0216e
  43dd2b:	lahf   
  43dd2c:	sub    ebx,DWORD PTR [esi-0x3a42527b]
  43dd32:	std    
  43dd33:	and    BYTE PTR [ecx+0x2b],dh
  43dd36:	inc    ebx
  43dd37:	sbb    DWORD PTR [ebp-0x1f],ebx
  43dd3a:	xchg   BYTE PTR [eax],al
  43dd3c:	div    ebp
  43dd3e:	adc    BYTE PTR [ebx],bh
  43dd40:	and    BYTE PTR [edi-0xa58742b],ah
  43dd46:	and    BYTE PTR [ebx-0x74f70a39],cl
  43dd4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dd4d:	cmc    
  43dd4e:	adc    al,0x8b
  43dd50:	mov    edi,0xc28b18f5
  43dd55:	rol    DWORD PTR [ebp+0x444eab14],0x24
  43dd5c:	fwait
  43dd5d:	(bad)  
  43dd5e:	lds    ecx,FWORD PTR [edx+0x13c94cb]
  43dd64:	out    dx,eax
  43dd65:	leave  
  43dd66:	cmp    al,0x2
  43dd68:	out    dx,eax
  43dd69:	sar    DWORD PTR [esp+eax*1],0xbe
  43dd6d:	icebp  
  43dd6e:	jecxz  0x43dd8e
  43dd70:	rcl    edx,1
  43dd72:	mov    BYTE PTR [ecx],al
  43dd74:	jp     0x43dd05
  43dd76:	xor    esi,edx
  43dd78:	test   eax,0x16e31f
	...
  43dd8d:	add    BYTE PTR [eax],al
  43dd8f:	add    BYTE PTR [ecx-0x75fe772e],dh
  43dd95:	(bad)  
  43dd96:	xor    esi,edx
  43dd98:	imul   ebx,DWORD PTR [edi],0xd2c10ae3
  43dd9e:	mov    BYTE PTR [ecx],al
  43dda0:	dec    edx
  43dda1:	(bad)  
  43dda2:	xor    esi,edx
  43dda4:	jns    0x43ddc5
  43dda6:	or     DWORD PTR [edi+ebx*1-0x37],0xffffff83
  43ddab:	inc    esp
  43ddac:	pop    ds
  43ddad:	stc    
  43ddae:	sti    
  43ddaf:	push   0x246c4df7
  43ddb4:	adc    ebx,esp
  43ddb6:	jecxz  0x43ddc7
  43ddb8:	jge    0x43dd72
  43ddba:	idiv   edi
  43ddbc:	je     0x43de35
  43ddbe:	push   esi
  43ddbf:	pop    ebp
  43ddc0:	mov    al,ds:0xcb14ba7d
  43ddc5:	push   ebx
  43ddc6:	in     al,dx
  43ddc7:	cmp    BYTE PTR [edx+0x6f],ah
  43ddca:	and    DWORD PTR [edx+ebp*2],esp
  43ddcd:	repnz and DWORD PTR [esi+eax*4-0x16],0x440f4cfc
  43ddd6:	mov    bh,BYTE PTR [esi-0x320d638f]
  43dddc:	sbb    al,0xdf
  43ddde:	fst    DWORD PTR [ecx-0x15]
  43dde1:	cs loope 0x43de17
  43dde4:	jmp    0x43de14
  43dde6:	loope  0x43de2b
  43dde8:	fistp  DWORD PTR [esi]
  43ddea:	loope  0x43de23
  43ddec:	fild   DWORD PTR [esi-0x1f]
  43ddef:	sub    ebp,ebx
  43ddf1:	ss loope 0x43de13
	...
  43de08:	cmp    eax,DWORD PTR [esi-0x1f]
  43de0b:	dec    edi
  43de0c:	pop    ebp
  43de0d:	je     0x43ddc7
  43de0f:	jmp    DWORD PTR [ebp-0xe]
  43de12:	mov    DWORD PTR [esi+eax*4-0x5a],edi
  43de16:	repz jmp 0xb5db:0x2fe88deb
  43de1e:	call   0x85646f46
  43de23:	push   esp
  43de24:	xchg   BYTE PTR [edx+0x6c65f981],dh
  43de2a:	jbe    0x43de2b
  43de2c:	sub    eax,0x7e648af2
  43de31:	(bad)  
  43de32:	mov    al,BYTE PTR [ebx+esi*2]
  43de35:	push   0x48
  43de37:	and    al,0x71
  43de39:	clc    
  43de3a:	ror    BYTE PTR [ecx],0xe6
  43de3d:	pop    edi
  43de3e:	std    
  43de3f:	jmp    DWORD PTR [edx+0x7d]
  43de42:	dec    ebx
  43de43:	stc    
  43de44:	jmp    0x43ddeb
  43de46:	call   0xe8f9fb5e
  43de4b:	cmp    esp,DWORD PTR [ebx-0xe]
  43de4e:	cld    
  43de4f:	(bad)  
  43de50:	fst    DWORD PTR [esi-0x5]
  43de53:	pop    ebx
  43de54:	xchg   cl,bl
  43de56:	mov    bh,0x3e
  43de58:	inc    esi
  43de59:	push   eax
  43de5a:	stos   DWORD PTR es:[edi],eax
  43de5b:	out    0x81,eax
  43de5d:	push   eax
  43de5e:	(bad)  
  43de60:	mov    eax,esi
  43de62:	loop   0x43ddf1
  43de64:	es mov ch,0xd6
  43de67:	sti    
  43de68:	popa   
  43de69:	retf   0x52b4
	...
  43de80:	out    0x16,eax
  43de82:	out    dx,al
  43de83:	fsubr  DWORD PTR [ecx]
  43de85:	(bad)  
  43de86:	pop    ebp
  43de87:	pusha  
  43de88:	inc    esi
  43de89:	enter  0x1fdf,0x95
  43de8d:	fs in  al,0x43
  43de90:	push   edi
  43de91:	adc    al,0x93
  43de93:	mov    ecx,0xe3c37cdf
  43de98:	and    eax,0x6a370ea0
  43de9d:	push   edx
  43de9e:	mov    ds:0xab5245e7,eax
  43dea3:	out    0x4d,eax
  43dea5:	push   eax
  43dea6:	mov    esp,edi
  43dea8:	jne    0x43de48
  43deaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43deab:	adc    BYTE PTR [esi-0x79a08fff],ah
  43deb1:	rcr    DWORD PTR [esi+0x5f],0x7e
  43deb5:	mov    ecx,0xcdb8b964
  43deba:	inc    BYTE PTR [edi+0x7e]
  43debd:	mov    cl,0x3b
  43debf:	or     ch,BYTE PTR [ebx]
  43dec1:	xchg   esi,eax
  43dec2:	or     ebx,DWORD PTR [eax]
  43dec4:	aas    
  43dec5:	fdiv   st,st(6)
  43dec7:	mov    ecx,0xfcb2d6a1
  43decc:	mov    DWORD PTR [ebp+0x4ec04037],esi
  43ded2:	sbb    ebp,eax
  43ded4:	cmp    DWORD PTR [esi+0x1b],ecx
  43ded7:	call   0xe86f2d2d
  43dedc:	cmp    eax,0xe543a5ae
  43dee1:	xchg   ebp,eax
  43dee2:	add    ch,cl
	...
  43def8:	inc    ebp
  43def9:	push   esp
  43defa:	inc    esp
  43defb:	lds    edi,FWORD PTR [ecx-0x4c]
  43defe:	lds    ebp,FWORD PTR [eax+0x70401cc6]
  43df04:	sbb    eax,0xf70214b5
  43df09:	push   esp
  43df0a:	retf   
  43df0b:	fidiv  WORD PTR [edx]
  43df0d:	adc    DWORD PTR [edi-0x7a614253],eax
  43df13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43df14:	(bad)
  43df17:	xchg   BYTE PTR ds:0xa0f21cb5,bl
  43df1d:	pop    edi
  43df1e:	add    dh,BYTE PTR [edx+0x25]
  43df21:	mov    ch,0x1c
  43df23:	adc    bl,BYTE PTR [ebp+0x54]
  43df26:	dec    esp
  43df27:	int    0x85
  43df29:	push   ebx
  43df2a:	dec    esp
  43df2b:	lds    ebx,FWORD PTR [ebp+0x52]
  43df2e:	ins    BYTE PTR es:[edi],dx
  43df2f:	int    0x4d
  43df31:	pop    ecx
  43df32:	jl     0x43def9
  43df34:	or     eax,0x5f878bd9
  43df39:	data16 std 
  43df3b:	pop    ebx
  43df3c:	xchg   ebx,eax
  43df3d:	fadd   QWORD PTR [ebp+0x443065ae]
  43df43:	add    eax,0xe6e8a4b6
  43df48:	aam    0xea
  43df4a:	(bad)  
  43df4b:	call   0xd87bfb1
  43df50:	ss pop edx
  43df52:	jl     0x43df59
  43df54:	ret    0x85d9
  43df57:	inc    ebp
  43df58:	cmp    ah,BYTE PTR [esi+0xe173]
	...
  43df6e:	add    BYTE PTR [eax],al
  43df70:	jmp    0x43df06
  43df72:	and    al,0xfa
  43df74:	jmp    0xd86b0a4d
  43df79:	sbb    al,al
  43df7b:	mov    DWORD PTR [edx-0x2d],ebx
  43df7e:	mov    ebp,0x86af6a61
  43df83:	add    BYTE PTR [edi-0xf],al
  43df86:	or     al,0xfe
  43df88:	mov    dl,0x14
  43df8a:	fld    DWORD PTR [ebp*2+0x40c8020d]
  43df91:	xchg   ecx,eax
  43df92:	and    al,0x14
  43df94:	push   ebx
  43df95:	mov    DWORD PTR [esi],esp
  43df97:	add    DWORD PTR [eax-0x463984ea],edi
  43df9d:	dec    esp
  43df9e:	je     0x43dfc4
  43dfa0:	mov    edi,0x789e34e
  43dfa5:	repnz xor al,0x3b
  43dfa8:	sbb    DWORD PTR [eax-0xe0874a9],0x14
  43dfaf:	mov    ebp,edi
  43dfb1:	icebp  
  43dfb2:	xor    al,0x3
  43dfb4:	dec    ecx
  43dfb5:	dec    esp
  43dfb6:	inc    esp
  43dfb7:	and    al,0x97
  43dfb9:	dec    esi
  43dfba:	inc    esp
  43dfbb:	and    al,0xab
  43dfbd:	dec    esp
  43dfbe:	inc    esp
  43dfbf:	and    al,0x8f
  43dfc1:	dec    esi
  43dfc2:	ret    0xd73b
  43dfc5:	icebp  
  43dfc6:	or     al,0x7d
  43dfc8:	popf   
  43dfc9:	dec    esi
  43dfca:	jl     0x43dff0
  43dfcc:	(bad)  
  43dfcd:	dec    esi
  43dfce:	pop    esp
  43dfcf:	and    al,0x7
  43dfd1:	arpl   WORD PTR [ebp+0x24],cx
	...
  43dfe8:	xchg   edi,eax
  43dfe9:	pop    esp
  43dfea:	cld    
  43dfeb:	push   DWORD PTR [edi+0x3c048bea]
  43dff1:	push   ds
  43dff2:	mov    DWORD PTR [ebx+esi*1],edx
  43dff5:	aam    0x4c
  43dff7:	and    al,0x17
  43dff9:	sbb    ebx,ebp
  43dffb:	mov    edx,DWORD PTR [edi-0x3f]
  43dffe:	cmp    BYTE PTR [ebx-0x74b33e91],cl
  43e004:	inc    edi
  43e005:	rcr    DWORD PTR [ebx+ecx*4],0x9f
  43e009:	sar    DWORD PTR [eax*2+0x44809ff8],0x62
  43e011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e012:	sbb    BYTE PTR ds:0x8577e709,dh
  43e018:	outs   dx,BYTE PTR ds:[esi]
  43e019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e01a:	call   0xe4e26ea3
  43e01f:	test   DWORD PTR [esi-0x5a],edi
  43e022:	push   eax
  43e023:	test   DWORD PTR [esi],ebp
  43e025:	sahf   
  43e026:	loopne 0x43e065
  43e028:	jmp    0x43dfc0
  43e02a:	loopne 0x43e06b
  43e02c:	mov    DWORD PTR [edi],ecx
  43e02e:	pop    es
  43e02f:	mov    WORD PTR [eax],?
  43e031:	xor    BYTE PTR [edi-0x1f691607],dh
  43e037:	das    
  43e038:	and    ebx,eax
  43e03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e03b:	std    
  43e03c:	pushf  
  43e03d:	dec    ecx
  43e03e:	pop    eax
  43e03f:	and    al,0x82
  43e041:	cmp    DWORD PTR [eax],ebp
  43e043:	and    al,0x52
  43e045:	cmp    DWORD PTR [eax+0x24],ecx
  43e048:	ds mov ebx,0x2458
	...
  43e05e:	add    BYTE PTR [eax],al
  43e060:	xor    al,bh
  43e062:	mov    BYTE PTR [edi],bl
  43e064:	test   bh,ch
  43e066:	mov    dh,0x85
  43e068:	es sahf 
  43e06a:	lock test BYTE PTR [esi],cl
  43e06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e06e:	cld    
  43e06f:	xchg   DWORD PTR [edx+0x4b],edx
  43e072:	mov    esi,0x5b6d0459
  43e077:	jge    0x43e09f
  43e079:	mov    al,dl
  43e07b:	adc    al,0x62
  43e07d:	repz mov esp,0xb14350e5
  43e083:	inc    esp
  43e084:	fst    DWORD PTR ds:0x3b9757e9
  43e08a:	xor    DWORD PTR [edx+ebx*4],esp
  43e08d:	clc    
  43e08e:	mov    DWORD PTR [edi+0x53e905d9],edi
  43e094:	lea    edi,[ebx]
  43e096:	inc    ecx
  43e097:	and    al,0xbe
  43e099:	ret    
  43e09a:	int    0x87
  43e09c:	sahf   
  43e09d:	fld    st(5)
  43e09f:	repz out 0x18,al
  43e0a2:	test   BYTE PTR [eax],0xfd
  43e0a5:	or     ebx,DWORD PTR [eax-0x2902593a]
  43e0ab:	add    ebx,ebp
  43e0ad:	sbb    al,0xc6
  43e0af:	sbb    esp,DWORD PTR [eax]
  43e0b1:	sbb    eax,0x62620dbe
  43e0b6:	push   ss
  43e0b7:	call   0xe83a42e5
  43e0bc:	cdq    
  43e0bd:	adc    al,0x64
  43e0bf:	or     eax,0x3e9c2d9
	...
  43e0d8:	bound  esp,QWORD PTR [esp+ebp*1-0x17]
  43e0dc:	mov    ds:0x7e48612b,al
  43e0e1:	add    eax,0x2ce5d373
  43e0e6:	(bad)  
  43e0e7:	jmp    FWORD PTR [edi-0x5a]
  43e0ea:	fisttp WORD PTR [esi+0x3e9d9d8]
  43e0f0:	aas    
  43e0f1:	ret    0x1394
  43e0f4:	xor    eax,0x4f58fa43
  43e0f9:	ret    0x4fdf
  43e0fc:	test   eax,0x260d2b13
  43e101:	mov    cl,0x9b
  43e103:	or     al,0xb3
  43e105:	lahf   
  43e106:	cdq    
  43e107:	or     al,0xb3
  43e109:	stos   BYTE PTR es:[edi],al
  43e10a:	call   0xdcef:0xbe4e5b51
  43e111:	and    eax,0x25e70006
  43e116:	dec    BYTE PTR [ebx-0x23]
  43e119:	xor    eax,0x1de4f006
  43e11e:	(bad)  
  43e11f:	pop    edi
  43e120:	(bad)  ds:0x83a2406
  43e126:	mov    dh,0xbc
  43e128:	sub    esp,DWORD PTR [ebx+0x1]
  43e12b:	sub    eax,0x7e07ef0a
  43e130:	popf   
  43e131:	std    
  43e132:	sub    BYTE PTR [edx-0x53],dh
  43e135:	std    
  43e136:	pop    eax
  43e137:	jb     0x43e0e6
  43e139:	std    
  43e13a:	adc    al,0x60
	...
  43e150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e151:	std    
  43e152:	cmp    dl,ch
  43e154:	pop    ss
  43e155:	pop    edi
  43e156:	cmp    eax,0xc10601cd
  43e15b:	enter  0xfd9d,0x5c
  43e15f:	das    
  43e160:	rol    bl,1
  43e162:	xor    esp,DWORD PTR [eax+0x70f8d49f]
  43e168:	xchg   ebp,eax
  43e169:	std    
  43e16a:	cmp    al,0x70
  43e16c:	sbb    eax,0x252f0cfd
  43e171:	std    
  43e172:	sbb    al,0xe8
  43e174:	lahf   
  43e175:	sbb    eax,0xe60c91d
  43e17a:	cmp    eax,0x5350a605
  43e17f:	ins    BYTE PTR es:[edi],dx
  43e180:	mov    eax,ds:0x8b63034a
  43e185:	pop    esp
  43e186:	add    esp,ebx
  43e188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e189:	dec    edx
  43e18a:	or     al,0x72
  43e18c:	sbb    eax,0xe8a90cfd
  43e191:	sbb    eax,0xefcaf51d
  43e196:	add    DWORD PTR [ebp+0x74013a85],0x5e
  43e19d:	fwait
  43e19e:	cmp    eax,0x8ad981cd
  43e1a3:	and    DWORD PTR [ebx-0x69],ebx
  43e1a6:	outs   dx,BYTE PTR ds:[esi]
  43e1a7:	dec    DWORD PTR [eax]
  43e1a9:	sbb    eax,0x1cd5451d
  43e1ae:	sbb    eax,0x1d24f8fd
  43e1b3:	or     DWORD PTR [eax],eax
	...
  43e1c5:	add    BYTE PTR [eax],al
  43e1c7:	add    BYTE PTR [esp+edx*2-0x42a0ff8b],bl
  43e1ce:	clc    
  43e1cf:	jle    0x43e1c9
  43e1d1:	test   DWORD PTR [esi+eax*8],eax
  43e1d4:	dec    edi
  43e1d5:	mov    ecx,0x19800024
  43e1da:	sbb    eax,0x1d160264
  43e1df:	adc    al,0x6d
  43e1e1:	fnstcw WORD PTR [esi-0x3b]
  43e1e4:	loopne 0x43e1be
  43e1e6:	jle    0x43e1a9
  43e1e8:	and    DWORD PTR [eax-0x10e0837f],0xd3fd7400
  43e1f2:	inc    esp
  43e1f3:	and    al,0x1b
  43e1f5:	push   es
  43e1f6:	adc    ecx,DWORD PTR [ebx-0x7faf4691]
  43e1fc:	rcr    bl,1
  43e1fe:	mov    BYTE PTR [ecx*8-0x47dbc269],al
  43e205:	fmul   QWORD PTR [eax+0x42cd5f44]
  43e20b:	jmp    0x43e1cc
  43e20d:	dec    bp
  43e20f:	and    al,0x3
  43e211:	pop    edx
  43e212:	jne    0x43e238
  43e214:	stos   DWORD PTR es:[edi],eax
  43e215:	(bad)  [ecx]
  43e217:	test   DWORD PTR [ebx],esi
  43e219:	fld    QWORD PTR [eax]
  43e21b:	add    bl,bh
  43e21d:	in     eax,0x8
  43e21f:	and    bh,0xb5
  43e222:	and    al,0x0
  43e224:	add    esi,ebx
  43e226:	ins    BYTE PTR es:[edi],dx
  43e227:	and    BYTE PTR [ebx],cl
  43e229:	adc    DWORD PTR ds:0x12,ebx
	...
  43e23f:	add    BYTE PTR [ebx+0x5],bh
  43e242:	add    edi,DWORD PTR [edx]
  43e244:	mov    bh,0xb5
  43e246:	pusha  
  43e247:	je     0x43e280
  43e249:	(bad)  
  43e24b:	xchg   DWORD PTR [eax+0x61],ecx
  43e24e:	add    eax,0x1d14fd16
  43e253:	adc    bh,BYTE PTR [edx]
  43e255:	popa   
  43e256:	inc    ebp
  43e257:	and    al,0x62
  43e259:	sbb    al,BYTE PTR [ebx-0x1b]
  43e25c:	imul   esi,DWORD PTR [esi-0x19593dec],0xe
  43e263:	add    dl,bl
  43e265:	mov    edi,0xe64674bb
  43e26a:	call   ecx
  43e26c:	mov    bl,0x83
  43e26e:	sub    BYTE PTR [edx+ecx*2],ah
  43e271:	inc    edi
  43e272:	inc    eax
  43e273:	and    al,0x3a
  43e275:	jae    0x43e29f
  43e277:	and    al,0x46
  43e279:	imul   ebp,DWORD PTR [eax],0x24
  43e27c:	cmp    bl,BYTE PTR [edx+0x8]
  43e27f:	cld    
  43e280:	in     eax,dx
  43e281:	pop    ebx
  43e282:	(bad)  
  43e283:	out    dx,eax
  43e284:	fild   WORD PTR [edx-0x2922c0cf]
  43e28a:	fcom   DWORD PTR [edi]
  43e28c:	jmp    0xcd7bc387
  43e291:	mov    dh,0xd8
  43e293:	sub    ebx,ecx
  43e295:	scas   al,BYTE PTR es:[edi]
  43e296:	fmul   DWORD PTR [ebx-0x43]
  43e299:	mov    dh,0xd8
  43e29b:	dec    edi
  43e29c:	pushf  
  43e29d:	mov    edi,0xe636f8fd
  43e2a2:	push   esp
  43e2a3:	test   DWORD PTR [eax],eax
	...
  43e2b5:	add    BYTE PTR [eax],al
  43e2b7:	add    BYTE PTR [esi],al
  43e2b9:	fsubp  st(0),st
  43e2bb:	dec    esp
  43e2bc:	jmp    0xd87e:0xea20d886
  43e2c3:	and    DWORD PTR [edx-0x1f],edi
  43e2c6:	mov    ch,0xf9
  43e2c8:	test   DWORD PTR [edi+0x48],eax
  43e2cb:	and    al,0x3a
  43e2cd:	aaa    
  43e2ce:	cmp    BYTE PTR [edx+ebx*1],ah
  43e2d1:	nop
  43e2d2:	dec    edi
  43e2d3:	std    
  43e2d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e2d5:	jb     0x43e283
  43e2d7:	popf   
  43e2d8:	pop    edx
  43e2d9:	sar    DWORD PTR [edx+0x483753fd],cl
  43e2df:	and    al,0x96
  43e2e1:	aaa    
  43e2e2:	cmp    BYTE PTR [esi+edi*2],ah
  43e2e5:	fldcw  WORD PTR [edx-0x3a]
  43e2e8:	jb     0x43e342
  43e2ea:	lds    edx,FWORD PTR [eiz*8+0x6ef8062c]
  43e2f1:	sub    eax,0x655b43fe
  43e2f6:	cs mov edx,0x4873d42b
  43e2fc:	inc    esi
  43e2fd:	xor    eax,0x193e2863
  43e302:	imul   eax,ecx,0x72
  43e305:	pop    eax
  43e306:	xchg   edx,eax
  43e307:	adc    al,0xdd
  43e309:	sbb    al,0xbe
  43e30b:	out    0x36,eax
  43e30d:	push   ebp
  43e30e:	(bad)  
  43e30f:	push   ebx
  43e310:	imul   esp,DWORD PTR [ebp-0x36],0xffffffb9
  43e314:	jmp    0x43e2e9
  43e316:	and    ebx,DWORD PTR [ecx-0x21]
  43e319:	call   0x0:0x5718
	...
  43e330:	pop    edi
  43e331:	popf   
  43e332:	es (bad) 
  43e334:	outs   dx,BYTE PTR ds:[esi]
  43e335:	fldcw  WORD PTR [edx-0x58]
  43e338:	xchg   edx,eax
  43e339:	pop    eax
  43e33a:	(bad)  
  43e33b:	fist   WORD PTR [ebp-0x27]
  43e33e:	push   0x20
  43e340:	xchg   ch,bl
  43e342:	jmp    0x1b6ef49b
  43e347:	mov    dl,0x7f
  43e349:	cdq    
  43e34a:	test   al,0xf4
  43e34c:	mov    ds,WORD PTR [edi+0x54]
  43e34f:	push   ecx
  43e350:	in     eax,0x44
  43e352:	push   es
  43e353:	in     al,dx
  43e354:	fsub   QWORD PTR [esi+edi*8]
  43e357:	mul    esp
  43e359:	sbb    al,0xc6
  43e35b:	out    dx,eax
  43e35c:	fmul   QWORD PTR [esi+edi*4-0x21]
  43e360:	in     al,0x34
  43e362:	(bad)  
  43e363:	out    0x2c,eax
  43e365:	sbb    eax,0x635b4bbe
  43e36a:	or     BYTE PTR [ebx],al
  43e36c:	(bad)  
  43e36d:	fnstenv [edx+0x38]
  43e370:	xchg   BYTE PTR ds:0xfda26001,bl
  43e376:	xor    BYTE PTR [eax-0x66],ah
  43e379:	std    
  43e37a:	adc    al,0x1a
  43e37c:	sub    al,0x57
  43e37e:	clc    
  43e37f:	out    dx,al
  43e380:	jmp    0x43e30b
  43e382:	add    ch,cl
  43e384:	popa   
  43e385:	loopne 0x43e336
  43e387:	in     eax,0x90
  43e389:	aaa    
  43e38a:	cmp    al,0x2d
  43e38c:	inc    edx
  43e38d:	pop    ds
  43e38e:	or     BYTE PTR [ebp-0x13],ah
  43e391:	sar    al,cl
  43e393:	jmp    0x43e398
	...
  43e3a8:	call   0xe53500ca
  43e3ad:	adc    al,0xf8
  43e3af:	jo     0x43e3f6
  43e3b1:	std    
  43e3b2:	adc    BYTE PTR [esi-0x17e702c3],ah
  43e3b8:	popa   
  43e3b9:	fld    DWORD PTR [eax]
  43e3bb:	bound  ebx,QWORD PTR [esi]
  43e3bd:	or     eax,0x4e99cd55
  43e3c2:	imul   esi,DWORD PTR [edx-0x7b],0xfffffffd
  43e3c6:	adc    al,0x62
  43e3c8:	test   ebp,edi
  43e3ca:	cmp    BYTE PTR [edi],al
  43e3cc:	leave  
  43e3cd:	inc    esi
  43e3ce:	dec    esi
  43e3cf:	jmp    0x2bd00c48
  43e3d4:	mov    esi,0x83e576a9
  43e3d9:	or     ch,BYTE PTR [ebp-0x5c]
  43e3dc:	popa   
  43e3dd:	inc    esi
  43e3de:	(bad)  
  43e3df:	test   al,0xa6
  43e3e1:	cdq    
  43e3e2:	jne    0x43e419
  43e3e4:	sub    DWORD PTR [esp+ecx*8],ecx
  43e3e7:	mov    esp,0x5555c5d
  43e3ec:	jp     0x43e449
  43e3ee:	cmp    eax,0x3d5b81cd
  43e3f3:	lds    ebp,FWORD PTR [ebp+0x5c]
  43e3f6:	jne    0x43e3c5
  43e3f8:	gs or  al,0xc0
  43e3fb:	fisub  WORD PTR ds:0xdf0084d1
  43e401:	mov    dl,0x10
  43e403:	add    dl,dl
  43e405:	or     bl,BYTE PTR ds:0x1d0ac014
  43e40b:	inc    esp
	...
  43e420:	mov    ebp,0x57442dda
  43e425:	mov    ebp,0x191c067c
  43e42a:	sbb    eax,0x75d82010
  43e42f:	fs addr16 cmc 
  43e432:	add    BYTE PTR [ecx-0x52],al
  43e435:	add    DWORD PTR [eax+eax*1+0x60],edi
  43e439:	and    DWORD PTR ds:0x7e374f48,ebx
  43e43f:	je     0x43e4a8
  43e441:	mov    ecx,0xb617447d
  43e446:	jge    0x43e4c4
  43e448:	daa    
  43e449:	loop   0x43e468
  43e44b:	ret    0x644b
  43e44e:	cmp    eax,0x3d5ef324
  43e453:	and    al,0xb
  43e455:	mov    edi,0x8fb040b5
  43e45a:	push   ds
  43e45b:	retf   
  43e45c:	test   BYTE PTR [ebp+edi*1+0x24],ah
  43e460:	stos   DWORD PTR es:[edi],eax
  43e461:	fisubr DWORD PTR [ecx+0x7ff55744]
  43e467:	dec    esp
  43e468:	addr16 mov ecx,0xce7caf09
  43e46e:	mov    bh,0x7e
  43e470:	lds    ebx,FWORD PTR [esi+0x45]
  43e473:	and    al,0xc3
  43e475:	jle    0x43e482
  43e477:	mov    eax,edi
  43e479:	mov    cl,0x24
  43e47b:	mov    edi,DWORD PTR [esp+eiz*2]
  43e47e:	inc    ebp
  43e47f:	and    al,0xb3
  43e481:	fs cmp eax,0x24
	...
  43e497:	add    BYTE PTR [ebx-0x48db8aab],cl
  43e49d:	aad    0x8b
  43e49f:	jle    0x43e503
  43e4a1:	mov    esi,0x61defd31
  43e4a6:	clc    
  43e4a7:	test   BYTE PTR [esi],bl
  43e4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e4aa:	cmp    BYTE PTR [ecx],cl
  43e4ac:	or     eax,0x6147d877
  43e4b1:	add    bh,ah
  43e4b3:	neg    DWORD PTR [ebp+0x2f]
  43e4b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43e4b7:	add    BYTE PTR [edx-0x3e],ah
  43e4ba:	scas   eax,DWORD PTR es:[edi]
  43e4bb:	inc    esp
  43e4bc:	xchg   dh,ah
  43e4be:	jl     0x43e53c
  43e4c0:	jle    0x43e4d0
  43e4c2:	std    
  43e4c3:	test   BYTE PTR [esi+0x5472e4d6],bh
  43e4c9:	dec    ebx
  43e4ca:	cmp    BYTE PTR [edx+ebx*2],ah
  43e4cd:	dec    edx
  43e4ce:	clc    
  43e4cf:	sub    edx,ebp
  43e4d1:	push   ds
  43e4d2:	(bad)  
  43e4d4:	loopne 0x43e54e
  43e4d6:	add    al,BYTE PTR [esi+0x4a48320]
  43e4dc:	push   0x44048c83
  43e4e1:	cmp    al,0x38
  43e4e3:	and    al,0x52
  43e4e5:	pusha  
  43e4e6:	(bad)
  43e4e9:	mov    edi,0x8a68c8ae
  43e4ee:	mov    eax,DWORD PTR [esi+edi*2-0x4e]
  43e4f2:	add    edi,DWORD PTR [ebp-0x1211126]
  43e4f8:	loopne 0x43e4fa
  43e4fa:	add    al,BYTE PTR [edi+0x0]
	...
  43e510:	ss (bad) 
  43e512:	loopne 0x43e498
  43e514:	mov    ecx,0x52243839
  43e519:	jmp    0x43e4ef
  43e51b:	jnp    0x43e52c
  43e51d:	dec    ebx
  43e51e:	cmp    BYTE PTR [edx+edi*2],ah
  43e521:	dec    ebx
  43e522:	and    BYTE PTR [edx+edx*2],ah
  43e525:	cmp    edx,DWORD PTR [eax+0x24]
  43e528:	jb     0x43e4ed
  43e52a:	ret    0x1e87
  43e52d:	fld    st(5)
  43e52f:	sti    
  43e530:	out    0x15,al
  43e532:	mov    esi,0xd3a3df3f
  43e537:	dec    edi
  43e538:	inc    esi
  43e539:	adc    DWORD PTR [ebp-0x39d22121],eax
  43e53f:	test   ebx,0xa9df6e64
  43e545:	pop    esp
  43e546:	out    dx,eax
  43e547:	mov    ch,0xd6
  43e549:	fist   WORD PTR [edi+edi*8+0x7c]
  43e54d:	sbb    cl,BYTE PTR [eax-0x75]
  43e550:	jbe    0x43e56e
  43e552:	and    ecx,DWORD PTR [eax+0x7e]
  43e555:	adc    DWORD PTR [esi-0x59],ecx
  43e558:	out    0x14,eax
  43e55a:	(bad)  
  43e55b:	aas    
  43e55c:	fild   QWORD PTR [esi+eax*1]
  43e55f:	adc    al,0xa3
  43e561:	(bad)  
  43e563:	stc    
  43e564:	push   cs
  43e565:	dec    ebp
  43e566:	popf   
  43e567:	mov    DWORD PTR [esi-0x5977020b],edx
  43e56d:	cmc    
  43e56e:	int    0x88
  43e570:	mov    ?,ebp
  43e572:	ror    DWORD PTR [eax+0x0],1
	...
  43e588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e589:	cmc    
  43e58a:	in     eax,dx
  43e58b:	mov    BYTE PTR [esi-0xb],ch
  43e58e:	sbb    eax,0xefa82f42
  43e593:	xchg   DWORD PTR [esi],esi
  43e595:	iret   
  43e596:	ja     0x43e54d
  43e598:	fist   WORD PTR [esi+eax*8]
  43e59b:	repz mov ds,esp
  43e59e:	sahf   
  43e59f:	xchg   DWORD PTR [esi+0x52],edx
  43e5a2:	jno    0x43e5fc
  43e5a4:	xchg   ch,bh
  43e5a6:	jo     0x43e5e8
  43e5a8:	jle    0x43e5b3
  43e5aa:	popa   
  43e5ab:	dec    eax
  43e5ac:	xchg   ch,ch
  43e5ae:	adc    bl,BYTE PTR [eax+0x7e]
  43e5b1:	and    edi,ebp
  43e5b3:	xchg   DWORD PTR [edi+ecx*8+0x37],eax
  43e5b7:	mov    ch,0xdf
  43e5b9:	adc    al,0x1
  43e5bb:	or     eax,0xe93e5792
  43e5c0:	ficomp DWORD PTR [edx+0x2614c758]
  43e5c6:	test   BYTE PTR ds:0xe90d8d6e,ah
  43e5cc:	jb     0x43e55d
  43e5ce:	in     al,dx
  43e5cf:	sbb    esp,ebx
  43e5d1:	mov    esp,0xf5b27245
  43e5d6:	pusha  
  43e5d7:	call   0x549f:0x891d2dea
  43e5de:	ret    0x9a62
  43e5e1:	cmc    
  43e5e2:	push   esp
  43e5e3:	ds jmp 0x43e633
  43e5e6:	sbb    eax,0x8aa86345
  43e5eb:	sub    eax,0x0
	...
  43e600:	inc    edx
  43e601:	pop    es
  43e602:	mov    WORD PTR [ecx],gs
  43e604:	dec    edx
  43e605:	int3   
  43e606:	fsqrt  
  43e608:	iret   
  43e609:	fwait
  43e60a:	cmp    eax,0x89d95f05
  43e60f:	sub    eax,0x25bee702
  43e614:	add    ah,cl
  43e616:	add    BYTE PTR [eax-0x53],dh
  43e619:	cmc    
  43e61a:	dec    esp
  43e61b:	jo     0x43e5aa
  43e61d:	cmc    
  43e61e:	push   eax
  43e61f:	shr    BYTE PTR [ebx+0x602485e0],cl
  43e625:	fld    DWORD PTR [eax]
  43e627:	jb     0x43e5cc
  43e629:	push   esp
  43e62a:	dec    ebp
  43e62b:	lds    ebp,FWORD PTR ds:0xadcd4d56
  43e631:	push   ebp
  43e632:	dec    ebp
  43e633:	lds    ebp,FWORD PTR ds:0x7d70bff4
  43e639:	cmc    
  43e63a:	xor    BYTE PTR [eax+0x25],dh
  43e63d:	cmc    
  43e63e:	sub    al,0xbc
  43e640:	ficomp DWORD PTR [esi+0x1a85b58a]
  43e646:	cmp    al,0x0
  43e648:	push   eax
  43e649:	aad    0x8b
  43e64b:	or     DWORD PTR [ecx+0x208b00da],ecx
  43e651:	rcr    edi,0x6a
  43e654:	stos   DWORD PTR es:[edi],eax
  43e655:	xor    ebx,DWORD PTR [edi+0x10]
  43e658:	mov    al,ds:0xc70fdfd1
  43e65d:	xchg   edi,eax
  43e65e:	cs ret 
  43e660:	test   BYTE PTR [esi],dl
  43e662:	fst    DWORD PTR [ebx+0x0]
	...
  43e675:	add    BYTE PTR [eax],al
  43e677:	add    BYTE PTR [ebp+edi*1+0x3d5451c2],al
  43e67e:	(bad)  
  43e67f:	push   eax
  43e680:	stc    
  43e681:	test   BYTE PTR [ebp+0x24],ch
  43e684:	daa    
  43e685:	arpl   WORD PTR [ebp+0x24],ax
  43e688:	jmp    DWORD PTR [eax+0x45]
  43e68b:	and    al,0x7b
  43e68d:	dec    esp
  43e68e:	push   ebp
  43e68f:	and    al,0x8b
  43e691:	dec    esp
  43e692:	cmp    eax,0x4d4c9b24
  43e697:	and    al,0x9f
  43e699:	ins    DWORD PTR es:[edi],dx
  43e69a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e69b:	mul    DWORD PTR [edx+ecx*4]
  43e69e:	jle    0x43e6e4
  43e6a0:	pop    edi
  43e6a1:	mov    ecx,0xc13faf09
  43e6a6:	sub    BYTE PTR [ebx-0x7ca73ea9],cl
  43e6ac:	outs   dx,DWORD PTR ds:[esi]
  43e6ad:	rcl    DWORD PTR [eax],0x0
  43e6b0:	mov    BYTE PTR [ecx],al
  43e6b2:	sbb    eax,0x454efb14
  43e6b7:	and    al,0xf7
  43e6b9:	dec    esp
  43e6ba:	cmp    eax,0xdad68b24
  43e6bf:	mov    DWORD PTR [edi-0x3f],edi
  43e6c2:	sbb    BYTE PTR [ebx],dh
  43e6c4:	sti    
  43e6c5:	mov    bl,0x44
  43e6c7:	and    al,0xcb
  43e6c9:	pop    ds
  43e6ca:	ret    
  43e6cb:	add    ecx,ebx
  43e6cd:	dec    esp
  43e6ce:	ins    DWORD PTR es:[edi],dx
  43e6cf:	and    al,0xf3
  43e6d1:	dec    esp
  43e6d2:	cmp    eax,0xca946224
  43e6d7:	inc    esp
  43e6d8:	jle    0x43e6ae
  43e6da:	std    
  43e6db:	rol    DWORD PTR [eax],0x0
	...
  43e6ee:	add    BYTE PTR [eax],al
  43e6f0:	fcom   QWORD PTR es:[edi+edi*8]
  43e6f4:	pop    edx
  43e6f5:	je     0x43e6d7
  43e6f7:	aas    
  43e6f8:	or     al,0x9a
  43e6fa:	mov    eax,eax
  43e6fc:	movzx  eax,WORD PTR [ebx]
  43e6ff:	mov    cl,0x63
  43e701:	dec    ecx
  43e702:	dec    ecx
  43e703:	and    al,0x5a
  43e705:	mov    edi,0xab07ff7b
  43e70a:	inc    eax
  43e70b:	and    al,0x4a
  43e70d:	test   DWORD PTR gs:[esi+eiz*4-0x14bfe762],0x396be076
  43e719:	mov    ds:0x527e7c7f,al
  43e71e:	add    al,0x73
  43e720:	imul   eax,DWORD PTR [edi-0x2c],0x14d69ec2
  43e727:	add    bl,bl
  43e729:	push   cs
  43e72a:	jmp    0x492ba342
  43e72f:	and    al,0x76
  43e731:	or     eax,0xd69ef905
  43e736:	sub    al,0x85
  43e738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e739:	fisub  WORD PTR [eax]
  43e73b:	stc    
  43e73c:	xchg   esi,eax
  43e73d:	(bad)  
  43e73e:	fdivr  QWORD PTR [ebx+eiz*1-0x3f]
  43e742:	jg     0x43e7c0
  43e744:	mov    ds:0x57b37904,al
  43e74a:	or     edx,eax
  43e74c:	sahf   
  43e74d:	xchg   esi,eax
  43e74e:	loopne 0x43e74f
  43e750:	call   0xb3d053
	...
  43e765:	add    BYTE PTR [eax],al
  43e767:	add    BYTE PTR [ebx+0x546be8f6],bl
  43e76d:	mov    eax,0xaa7e4477
  43e772:	ja     0x43e7c0
  43e774:	xchg   cl,bl
  43e776:	cmc    
  43e777:	sahf   
  43e778:	push   0x60
  43e77a:	sahf   
  43e77b:	out    0x51,eax
  43e77d:	pusha  
  43e77e:	sahf   
  43e77f:	out    0x4d,eax
  43e781:	pop    ecx
  43e782:	(bad)  
  43e783:	out    0x6e,eax
  43e785:	fldz   
  43e787:	jp     0x43e726
  43e789:	fsubr  QWORD PTR [esi-0x3d]
  43e78c:	push   ss
  43e78d:	loopne 0x43e7f1
  43e78f:	push   edi
  43e790:	ds cmp eax,eax
  43e793:	out    dx,al
  43e794:	and    ebp,esi
  43e796:	shl    DWORD PTR [edi],1
  43e798:	inc    edx
  43e799:	pop    ecx
  43e79a:	repz add eax,0x7c3a845b
  43e7a0:	push   cs
  43e7a1:	cmc    
  43e7a2:	sar    DWORD PTR [esi-0x4a],0xf5
  43e7a6:	mov    ecx,ecx
  43e7a8:	sahf   
  43e7a9:	cmc    
  43e7aa:	fiadd  DWORD PTR [edx+ebx*8]
  43e7ad:	aam    0xd7
  43e7af:	les    edi,FWORD PTR [edx]
  43e7b1:	loope  0x43e814
  43e7b3:	inc    edi
  43e7b4:	push   eax
  43e7b5:	fisubr DWORD PTR [edx-0x36]
  43e7b8:	xor    al,0x4c
  43e7ba:	push   esi
  43e7bb:	call   0x8722c185
  43e7c0:	repnz fsubr st,st(1)
  43e7c3:	add    esp,edx
  43e7c5:	fcomip st,st(1)
  43e7c7:	adc    DWORD PTR [esi+0x3fdf5],0x0
	...
  43e7de:	add    BYTE PTR [eax],al
  43e7e0:	in     al,0xd7
  43e7e2:	xor    eax,0xfe4d85f7
  43e7e7:	adc    eax,0x7cf34562
  43e7ec:	mov    ?,ebp
  43e7ee:	or     DWORD PTR [edx],ebp
  43e7f0:	aaa    
  43e7f1:	sbb    eax,0xfd71ebc6
  43e7f6:	(bad)  
  43e7f7:	js     0x43e7a6
  43e7f9:	popa   
  43e7fa:	push   ss
  43e7fb:	call   0xe852488d
  43e800:	sub    eax,0x49ed00dd
  43e805:	into   
  43e806:	sbb    ch,0x5b
  43e809:	mov    edx,gs
  43e80b:	icebp  
  43e80c:	cmp    DWORD PTR ds:0x149be80f,ebx
  43e812:	sbb    eax,0xbf4e60fb
  43e817:	jmp    0x43e817
  43e819:	rol    DWORD PTR [ecx+ebx*8],cl
  43e81c:	stos   DWORD PTR es:[edi],eax
  43e81d:	adc    al,0x1d
  43e81f:	(bad)  [ecx+0x61]
  43e822:	add    al,0x36
  43e824:	dec    edx
  43e825:	cmc    
  43e826:	sbb    al,0xea
  43e828:	fwait
  43e829:	sbb    edi,eax
  43e82b:	popf   
  43e82c:	jge    0x43e829
  43e82e:	mov    ebp,DWORD PTR [ebp-0x62080c7b]
  43e834:	jge    0x43e839
  43e836:	clc    
  43e837:	xchg   ebp,eax
  43e838:	inc    ebp
  43e839:	or     ebp,ecx
  43e83b:	xor    DWORD PTR [edi],eax
  43e83d:	sar    eax,1
  43e83f:	jmp    0x0:0x7cc15711
	...
  43e856:	add    BYTE PTR [eax],al
  43e858:	popf   
  43e859:	shr    BYTE PTR [ebp-0x3b],1
  43e85c:	sbb    eax,0x9e0d4556
  43e861:	shr    BYTE PTR [ebp+0x5],1
  43e864:	sub    dl,BYTE PTR [esi+0x6d]
  43e867:	or     eax,0x56dd08e
  43e86c:	mov    edx,0xd2e80497
  43e871:	inc    ebp
  43e872:	sbb    eax,0x1d2d8f1d
  43e877:	add    eax,0x53d61af
  43e87c:	or     edx,DWORD PTR [ebx+0x3d]
  43e87f:	int    0xb
  43e881:	mov    bl,0x17
  43e883:	xchg   edi,eax
  43e884:	mov    dl,0xd0
  43e886:	mov    WORD PTR ds:0xf5860afa,gs
  43e88c:	popa   
  43e88d:	push   esp
  43e88e:	cmp    eax,0x46f6a700
  43e893:	push   ebx
  43e894:	mov    eax,0xeee851a0
  43e899:	aad    0xf9
  43e89b:	dec    eax
  43e89d:	test   BYTE PTR [esi+0x54],bh
  43e8a0:	and    DWORD PTR [bp+0x5c],edi
  43e8a4:	xor    DWORD PTR [bp+0x44],edi
  43e8a8:	push   edi
  43e8a9:	shl    DWORD PTR [ebp-0x3e],1
  43e8ac:	fwait
  43e8ad:	push   ebp
  43e8ae:	in     al,dx
  43e8af:	adc    BYTE PTR [edx],dl
  43e8b1:	and    bl,BYTE PTR ds:0xaa46044
  43e8b7:	mov    WORD PTR [ebx+edi*2-0x6],cs
  43e8bb:	inc    DWORD PTR [eax]
	...
  43e8d1:	or     bl,BYTE PTR ds:0x11a10864
  43e8d7:	adc    DWORD PTR [ebx-0x1a],0x7f
  43e8db:	inc    esp
  43e8dc:	xchg   edi,eax
  43e8dd:	ret    0x7c2d
  43e8e0:	daa    
  43e8e1:	push   ds
  43e8e2:	or     cl,BYTE PTR [esi+esi*2-0x11000585]
  43e8e9:	sub    BYTE PTR [esi-0x3a],bh
  43e8ec:	in     eax,dx
  43e8ed:	sbb    al,0x76
  43e8ef:	(bad)  
  43e8f0:	fist   WORD PTR [ebx+0x79c8000d]
  43e8f6:	sub    eax,0x8c1a783
  43e8fb:	add    BYTE PTR [eax+0xb041d01],bh
  43e901:	daa    
  43e902:	push   esp
  43e903:	push   esi
  43e904:	sbb    BYTE PTR [esi+eiz*1+0x261374c0],al
  43e90b:	fild   DWORD PTR [eax+0x6754807c]
  43e911:	sar    DWORD PTR [edi+0x7c],1
  43e914:	daa    
  43e915:	push   ss
  43e916:	add    BYTE PTR [edi+eiz*1-0x42],0x7f
  43e91b:	je     0x43e97f
  43e91d:	pushf  
  43e91e:	fadd   QWORD PTR [esi+0x3708943e]
  43e924:	push   ds
  43e925:	pushf  
  43e926:	cmp    BYTE PTR [ecx],cl
  43e928:	fdivr  QWORD PTR [edx+eax*1+0x21376200]
  43e92f:	and    al,0x2a
  43e931:	(bad)  
  43e932:	mov    ch,0x85
	...
  43e948:	lahf   
  43e949:	dec    eax
  43e94a:	inc    ecx
  43e94b:	and    al,0x7e
  43e94d:	add    DWORD PTR [ebp-0x1f5c2502],ebx
  43e953:	das    
  43e954:	push   ecx
  43e955:	push   cs
  43e956:	mov    ch,bl
  43e958:	gs inc edx
  43e95a:	ret    0x8dff
  43e95d:	mov    edi,0x703e4c7b
  43e962:	jnp    0x43e968
  43e964:	aad    0x38
  43e966:	dec    ecx
  43e967:	and    al,0x3e
  43e969:	mov    bh,0xbd
  43e96b:	or     esi,esp
  43e96d:	daa    
  43e96e:	(bad)  
  43e96f:	jmp    DWORD PTR [edx+0x35]
  43e972:	cmp    al,0xf9
  43e974:	jmp    0x43e9dc
  43e976:	loopne 0x43e987
  43e978:	jmp    0x43e9f0
  43e97a:	loopne 0x43e9b7
  43e97c:	and    eax,0x6317e07f
  43e981:	mov    dl,0x4
  43e983:	add    cl,ch
  43e985:	sti    
  43e986:	jmp    0x43e9e3
  43e988:	jle    0x43e998
  43e98a:	xor    ch,BYTE PTR [ebx-0x27]
  43e98d:	cs jmp 0x7bfb22aa
  43e993:	inc    esp
  43e994:	inc    esi
  43e995:	fsubrp st(5),st
  43e997:	add    ebp,ebp
  43e999:	add    eax,0xdc20854b
  43e99e:	fnstcw WORD PTR [ebx+0x70]
  43e9a1:	cmp    ecx,DWORD PTR [eax+0x24]
  43e9a4:	inc    esi
  43e9a5:	leave  
  43e9a6:	or     BYTE PTR [ecx+0x43e4d96f],al
	...
  43e9c0:	aaa    
  43e9c1:	sahf   
  43e9c2:	push   ss
  43e9c3:	mov    dh,0xdf
  43e9c5:	and    eax,0x42a0fc6
  43e9ca:	mov    ds:0x1e546638,eax
  43e9cf:	call   0xe8623c3d
  43e9d4:	gs push edx
  43e9d6:	es call 0xe83a3e2d
  43e9dc:	push   ecx
  43e9dd:	add    al,0x25
  43e9df:	(bad)  
  43e9e0:	sbb    DWORD PTR [ecx-0x1281e08f],esi
  43e9e6:	bound  ebx,QWORD PTR [edi]
  43e9e8:	inc    esi
  43e9e9:	adc    DWORD PTR [ebp-0x4b],ebx
  43e9ec:	sbb    ch,dl
  43e9ee:	add    cl,BYTE PTR [eax+0x46]
  43e9f1:	stc    
  43e9f2:	mov    ch,0x5
  43e9f4:	mov    ebx,DWORD PTR ds:0xdb871406
  43e9fa:	cli    
  43e9fb:	mov    ch,0xdf
  43e9fd:	sahf   
  43e9fe:	sub    DWORD PTR [ebx-0x5414e694],esp
  43ea04:	das    
  43ea05:	adc    eax,0x66de3fc6
  43ea0a:	arpl   WORD PTR [edi],si
  43ea0c:	jle    0x43e9ff
  43ea0e:	jb     0x43ea57
  43ea10:	xchg   cl,bh
  43ea12:	jb     0x43ea43
  43ea14:	jle    0x43ea03
  43ea16:	ret    0xa2c1
  43ea19:	push   edx
  43ea1a:	sahf   
  43ea1b:	out    0x4d,eax
  43ea1d:	push   esp
  43ea1e:	es call 0x44eede81
	...
  43ea38:	jg     0x43e9fd
  43ea3a:	add    edi,DWORD PTR [ecx-0x17e1ad5d]
  43ea40:	fmul   DWORD PTR gs:[esi+0x70e14648]
  43ea47:	inc    eax
  43ea48:	ds icebp 
  43ea4a:	add    dh,ah
  43ea4c:	sahf   
  43ea4d:	xchg   edx,eax
  43ea4e:	cmp    al,0xa8
  43ea50:	inc    esp
  43ea51:	fisttp DWORD PTR [ebx-0x141005cb]
  43ea57:	out    dx,eax
  43ea58:	push   0x1d
  43ea5a:	sbb    eax,0x8a925ac1
  43ea5f:	sbb    eax,0x2d89efca
  43ea64:	mov    edx,0xbdfd80d7
  43ea69:	das    
  43ea6a:	add    DWORD PTR [esp+ecx*4-0x39],esp
  43ea6e:	ins    DWORD PTR es:[edi],dx
  43ea6f:	jmp    0xfd82:0x71ff4334
  43ea76:	dec    eax
  43ea77:	jb     0x43ea16
  43ea79:	shl    DWORD PTR [edi-0x3dec7a53],1
  43ea7f:	dec    ecx
  43ea80:	pusha  
  43ea81:	push   cs
  43ea82:	stc    
  43ea83:	test   BYTE PTR [esi],0xc4
  43ea86:	add    ecx,ebp
  43ea88:	popa   
  43ea89:	ret    0xd3d
  43ea8c:	mov    es,WORD PTR [edi+0x75]
  43ea8f:	add    eax,0xa58bd926
  43ea94:	test   DWORD PTR [ebx],ecx
  43ea96:	outs   dx,BYTE PTR ds:[esi]
  43ea97:	(bad)  
  43ea98:	jmp    0x0:0xcd1d1c
	...
  43eaaf:	add    cl,bl
  43eab1:	fnsave [esi]
  43eab3:	arpl   WORD PTR [edx+0x7a7136fd],bp
  43eab9:	add    eax,DWORD PTR [edx]
  43eabb:	jno    0x43ea57
  43eabd:	add    eax,DWORD PTR [ebx]
  43eabf:	arpl   WORD PTR [edx-0x559ec803],bp
  43eac5:	add    eax,DWORD PTR [edx+ebp*2]
  43eac8:	daa    
  43eac9:	fimul  WORD PTR [edx-0x245de55]
  43eacf:	loop   0x43eaf3
  43ead1:	push   edx
  43ead2:	std    
  43ead3:	push   cs
  43ead4:	cwde   
  43ead5:	sbb    eax,0x752b001d
  43eada:	rol    al,0x1a
  43eadd:	(bad)  
  43eadf:	enter  0x8301,0x7e
  43eae3:	inc    esp
  43eae4:	pop    edi
  43eae5:	in     eax,dx
  43eae6:	mov    BYTE PTR [ebp+eax*1-0x24],cl
  43eaea:	cmc    
  43eaeb:	ret    0x9c78
  43eaee:	test   DWORD PTR [eax-0x74df4e81],0x243d43f0
  43eaf8:	lahf   
  43eaf9:	mov    cl,0xd0
  43eafb:	jge    0x43eb65
  43eafd:	inc    eax
  43eafe:	cmp    eax,0x65419324
  43eb03:	and    al,0xf7
  43eb05:	inc    ecx
  43eb06:	push   ebp
  43eb07:	and    al,0x5f
  43eb09:	inc    eax
  43eb0a:	ins    DWORD PTR es:[edi],dx
  43eb0b:	and    al,0xeb
  43eb0d:	fnstenv [esi+0x3cbecf89]
  43eb13:	mov    eax,DWORD PTR [eax]
	...
  43eb25:	add    BYTE PTR [eax],al
  43eb27:	add    BYTE PTR [edi+0x518b40be],bh
  43eb2d:	mov    cl,0x54
  43eb2f:	and    al,0x87
  43eb31:	neg    DWORD PTR [edx]
  43eb33:	mov    edx,edi
  43eb35:	mov    esi,0x75448338
  43eb3a:	ins    DWORD PTR es:[edi],dx
  43eb3b:	or     eax,0x411fddf6
  43eb40:	repnz int 0x75
  43eb43:	cmp    eax,DWORD PTR [edi]
  43eb45:	mov    esi,0x4e557c3c
  43eb4a:	cmp    eax,0x55411324
  43eb4f:	and    al,0x1f
  43eb51:	sbb    eax,0x70f0e7f6
  43eb56:	jne    0x43eb2b
  43eb58:	ror    BYTE PTR [esi],0x1d
  43eb5b:	sub    BYTE PTR [eax-0x4fe3e2ef],dh
  43eb61:	loope  0x43eb7f
  43eb63:	dec    eax
  43eb64:	bound  edi,QWORD PTR [ebx]
  43eb66:	cmp    DWORD PTR [edx+esi*4],esp
  43eb69:	cmp    ebp,DWORD PTR [ecx]
  43eb6b:	and    al,0x52
  43eb6d:	repnz out 0xd2,eax
  43eb70:	push   ebp
  43eb71:	xor    al,0x3d
  43eb73:	cli    
  43eb74:	std    
  43eb75:	mov    ?,WORD PTR [eax+0x4c]
  43eb78:	les    esi,FWORD PTR ds:[edi-0x3d]
  43eb7c:	and    edx,DWORD PTR [eax-0x1]
  43eb7f:	cmp    al,0x61
  43eb81:	jne    0x43eb83
  43eb83:	clc    
  43eb84:	jmp    0x43eb91
  43eb86:	loope  0x43eba3
  43eb88:	jmp    0x43eb6d
  43eb8a:	loopne 0x43ebb7
	...
  43eba0:	fcmovnu st,st(3)
  43eba2:	loopne 0x43ebd3
  43eba4:	mov    esp,esp
  43eba6:	loopne 0x43ebf3
  43eba8:	ins    DWORD PTR es:[edi],dx
  43eba9:	cmp    al,0xfb
  43ebab:	stc    
  43ebac:	mov    ch,0x36
  43ebae:	js     0x43ec04
  43ebb0:	xchg   ah,ah
  43ebb2:	ja     0x43ebf8
  43ebb4:	jle    0x43ebae
  43ebb6:	je     0x43ebb6
  43ebb8:	call   0x379e37b2
  43ebbd:	mov    edi,DWORD PTR [edi-0x3c]
  43ebc0:	push   esi
  43ebc1:	repnz adc BYTE PTR [eax],al
  43ebc4:	push   ecx
  43ebc5:	lock xchg edi,eax
  43ebc7:	out    dx,al
  43ebc8:	loope  0x43ebe5
  43ebca:	xor    eax,0x4cdc0e85
  43ebcf:	test   DWORD PTR [ebx+0x624394a],esp
  43ebd5:	dec    ecx
  43ebd6:	inc    ecx
  43ebd7:	and    al,0x8a
  43ebd9:	aaa    
  43ebda:	cmp    eax,0x778bac1c
  43ebdf:	jl     0x43eb67
  43ebe1:	jle    0x43ec58
  43ebe3:	inc    esp
  43ebe4:	jle    0x43eb9c
  43ebe6:	ja     0x43ec2c
  43ebe8:	xchg   BYTE PTR [edx-0x1],dl
  43ebeb:	enter  0xf061,0xef
  43ebef:	icebp  
  43ebf0:	and    al,0xda
  43ebf2:	and    eax,0x9fd95ee0
  43ebf7:	aas    
  43ebf8:	inc    esi
  43ebf9:	iret   
  43ebfa:	jmp    0x2a41927b
  43ebff:	jge    0x43eba7
  43ec01:	std    
  43ec02:	add    eax,0xef
	...
  43ec17:	add    BYTE PTR [edx*8-0x3b03ba9c],cl
  43ec1e:	jmp    0xa67d:0xdfd9e7e
  43ec25:	std    
  43ec26:	add    DWORD PTR [edi-0x62],edi
  43ec29:	std    
  43ec2a:	sub    eax,0xc625e757
  43ec2f:	dec    ebx
  43ec30:	jg     0x43ebc6
  43ec32:	popa   
  43ec33:	aas    
  43ec34:	xchg   BYTE PTR [ecx],cl
  43ec36:	jae    0x43ec77
  43ec38:	jle    0x43ec57
  43ec3a:	or     eax,0xb9fd2e7d
  43ec3f:	jle    0x43ebfd
  43ec41:	push   edx
  43ec42:	neg    bh
  43ec44:	ins    DWORD PTR es:[edi],dx
  43ec45:	add    BYTE PTR [esi+0x64d479df],dh
  43ec4b:	test   eax,0x7eeac49d
  43ec50:	push   ds
  43ec51:	std    
  43ec52:	cmc    
  43ec53:	fmulp  st(7),st
  43ec55:	push   edx
  43ec56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ec57:	fbld   TBYTE PTR [ecx]
  43ec59:	das    
  43ec5a:	fimul  DWORD PTR [ebp+0x4]
  43ec5d:	jmp    0x15afb254
  43ec62:	sbb    cl,BYTE PTR [ebx+0x37]
  43ec65:	xchg   ecx,eax
  43ec66:	out    dx,eax
  43ec67:	aaa    
  43ec68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ec69:	sub    edi,esp
  43ec6b:	jb     0x43ec98
  43ec6d:	daa    
  43ec6e:	fbstp  TBYTE PTR [edx+0x49]
  43ec71:	sub    ch,BYTE PTR [ebp-0x3a022956]
  43ec77:	jl     0x43ec0f
  43ec79:	std    
  43ec7a:	jge    0x43ecfa
	...
  43ec90:	scas   al,BYTE PTR es:[edi]
  43ec91:	std    
  43ec92:	add    BYTE PTR [ebp-0x52e2d24a],ah
  43ec98:	scas   al,BYTE PTR es:[edi]
  43ec99:	sbb    eax,0x35a9211d
  43ec9e:	sbb    eax,0xf38dfe51
  43eca3:	(bad)  
  43eca4:	retf   
  43eca5:	pop    ebp
  43eca6:	cmp    eax,0xa7d10205
  43ecab:	sub    eax,0x4583fc02
  43ecb0:	add    bh,BYTE PTR [ecx+eax*1]
  43ecb3:	cli    
  43ecb4:	mov    eax,0x4a0544e3
  43ecb9:	push   eax
  43ecba:	and    eax,0x1d1d6907
  43ecbf:	frstor [ebx]
  43ecc1:	not    dl
  43ecc3:	pusha  
  43ecc4:	and    bh,ch
  43ecc6:	sbb    BYTE PTR [edx+0x22],ah
  43ecc9:	std    
  43ecca:	or     al,0xaf
  43eccc:	test   ecx,ebx
  43ecce:	add    BYTE PTR [eax+0x72],dh
  43ecd1:	std    
  43ecd2:	inc    esp
  43ecd3:	scas   eax,DWORD PTR es:[edi]
  43ecd4:	and    bh,ch
  43ecd6:	adc    al,0xe8
  43ecd8:	mov    ds:0x60cd1d1c,eax
  43ecdd:	or     al,0x45
  43ecdf:	add    eax,0x6c51418a
  43ece4:	fld    DWORD PTR [edi-0x1]
  43ece7:	popa   
  43ece8:	pop    esi
  43ece9:	pop    esp
  43ecea:	push   ebp
  43eceb:	or     eax,0x5555e66
  43ecf0:	pop    esi
  43ecf1:	or     al,0x19
  43ecf3:	bound  eax,QWORD PTR [eax]
	...
  43ed05:	add    BYTE PTR [eax],al
  43ed07:	add    BYTE PTR [edx],ch
  43ed09:	std    
  43ed0a:	push   esp
  43ed0b:	mov    ah,0x66
  43ed0d:	add    al,0xec
  43ed0f:	(bad)  
  43ed10:	fiadd  WORD PTR [ebp+ebx*1-0x73]
  43ed14:	popa   
  43ed15:	inc    esi
  43ed16:	add    BYTE PTR [edx+0x6e],ah
  43ed19:	xchg   edi,eax
  43ed1a:	cmp    eax,0x39d96dc5
  43ed1f:	add    BYTE PTR [ebx],ch
  43ed21:	hlt    
  43ed22:	or     al,0xff
  43ed24:	pop    es
  43ed25:	mov    ds:0xa2ffff6c,eax
  43ed2a:	adc    BYTE PTR [ebx+0x7c75d97b],al
  43ed30:	push   edi
  43ed31:	aad    0x0
  43ed33:	jg     0x43ecfd
  43ed35:	gs add al,0xc6
  43ed38:	inc    edi
  43ed39:	mov    ecx,0x170001c
  43ed3e:	sbb    eax,0x7dd7456c
  43ed43:	dec    esp
  43ed44:	addr16 in eax,0xdd
  43ed47:	push   es
  43ed48:	add    BYTE PTR [esi+edi*2-0x7f1a98ac],0x7c
  43ed50:	pop    ss
  43ed51:	out    dx,al
  43ed52:	add    BYTE PTR [ebp+eax*8-0x4b],dh
  43ed56:	dec    esp
  43ed57:	and    al,0xab
  43ed59:	repnz and al,0x80
  43ed5c:	outs   dx,BYTE PTR ds:[esi]
  43ed5d:	(bad)  
  43ed5f:	xchg   edi,ecx
  43ed61:	sar    BYTE PTR [ebp-0x3f],1
  43ed64:	or     bl,BYTE PTR [edi+0x9]
  43ed67:	mov    BYTE PTR [edi+0x8af7cf],al
	...
  43ed7d:	add    BYTE PTR [eax],al
  43ed7f:	add    dl,bh
  43ed81:	xchg   edi,eax
  43ed82:	jmp    0x1d4e1f97
  43ed87:	and    BYTE PTR [edx+0x5f],cl
  43ed8a:	sbb    DWORD PTR [eax-0x78092f39],ecx
  43ed90:	out    dx,eax
  43ed91:	shl    ch,1
  43ed93:	lds    esi,FWORD PTR [edi+0x80105a2]
  43ed99:	cwde   
  43ed9a:	std    
  43ed9b:	jg     0x43ed4c
  43ed9d:	mov    ds:0x438c0064,al
  43eda2:	mov    al,0x0
  43eda4:	jnp    0x43ed7c
  43eda6:	or     BYTE PTR [ebp+0x4b],0xbe
  43edaa:	js     0x43ee28
  43edac:	bound  edx,QWORD PTR [eax+eax*1+0x47cd800]
  43edb3:	je     0x43ed3b
  43edb5:	xor    BYTE PTR [eax],ah
  43edb7:	and    al,0x50
  43edb9:	mov    al,0x28
  43edbb:	add    bh,BYTE PTR [ecx+0x64]
  43edbe:	fdiv   DWORD PTR [ebx]
  43edc0:	mov    dh,0x89
  43edc2:	lock add ebx,edx
  43edc5:	hlt    
  43edc6:	cld    
  43edc7:	xchg   DWORD PTR [esi-0x3e],esi
  43edca:	jnp    0x43ed8a
  43edcc:	and    ebx,DWORD PTR [eax-0x4d59780b]
  43edd2:	std    
  43edd3:	test   BYTE PTR [eax],ah
  43edd5:	jno    0x43ed6c
  43edd7:	adc    bl,ch
  43edd9:	jmp    0x43edbb
  43eddb:	xor    esp,DWORD PTR [ebx]
  43eddd:	xchg   esi,eax
  43edde:	add    eax,0x292a688
  43ede3:	mov    BYTE PTR [eax],al
	...
  43edf5:	add    BYTE PTR [eax],al
  43edf7:	add    BYTE PTR [esi+0x26c203da],cl
  43edfd:	pushf  
  43edfe:	adc    bh,bh
  43ee00:	loopne 0x43ee73
  43ee02:	add    ebp,esp
  43ee04:	pop    eax
  43ee05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ee06:	adc    al,0xc2
  43ee08:	push   ds
  43ee09:	xchg   esp,eax
  43ee0a:	adc    al,BYTE PTR [eax]
  43ee0c:	jmp    0x94:0x2ef8fcfc
  43ee13:	mov    edx,DWORD PTR [esi-0x6e]
  43ee16:	dec    ebp
  43ee17:	stc    
  43ee18:	cs aam 0xd4
  43ee1b:	test   BYTE PTR [esi],ch
  43ee1d:	(bad)  
  43ee1f:	clc    
  43ee20:	push   cs
  43ee21:	aam    0xec
  43ee23:	clc    
  43ee24:	push   ss
  43ee25:	fsubr  st(4),st
  43ee27:	out    0xb7,eax
  43ee29:	push   ss
  43ee2a:	mov    al,ds:0x820061f9
  43ee2f:	shr    bh,0x6d
  43ee32:	lahf   
  43ee33:	je     0x43ee7b
  43ee35:	fdivr  QWORD PTR [ebx+0x4c]
  43ee38:	ds (bad) 
  43ee3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ee3c:	(bad)  
  43ee3d:	cmc    
  43ee3e:	lds    edi,FWORD PTR [edx-0x32]
  43ee41:	cmc    
  43ee42:	mov    ch,0xa6
  43ee44:	(bad)  
  43ee45:	cmc    
  43ee46:	mov    cl,0xbd
  43ee48:	mov    eax,ds:0xb6a6e8d9
  43ee4d:	cmc    
  43ee4e:	mov    DWORD PTR [edx-0x3a],edi
  43ee51:	cmc    
  43ee52:	lds    edx,FWORD PTR [eax-0x26]
  43ee55:	adc    eax,0x15dddebe
  43ee5a:	push   es
  43ee5b:	fiadd  WORD PTR [eax]
	...
  43ee6d:	add    BYTE PTR [eax],al
  43ee6f:	add    BYTE PTR ds:0x1ba6d900,al
  43ee75:	push   ebp
  43ee76:	ss loopne 0x43eec2
  43ee79:	call   0xff6d:0x269401cc
  43ee80:	pop    ebx
  43ee81:	sub    edx,edx
  43ee83:	add    edi,ebx
  43ee85:	mov    edi,0x54fc02af
  43ee8a:	ss loopne 0x43eeb2
  43ee8d:	push   esp
  43ee8e:	es loopne 0x43eeb2
  43ee91:	push   esp
  43ee92:	es loopne 0x43ee1a
  43ee95:	pop    esp
  43ee96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ee97:	adc    ecx,DWORD PTR [edi-0x4f]
  43ee9a:	cli    
  43ee9b:	jl     0x43eed3
  43ee9d:	cmc    
  43ee9e:	sub    DWORD PTR [ebp+0x26],edi
  43eea1:	cmc    
  43eea2:	sbb    eax,0xbdf549eb
  43eea7:	neg    cl
  43eea9:	in     eax,0x67
  43eeab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43eeac:	stos   DWORD PTR es:[edi],eax
  43eead:	push   esp
  43eeae:	mov    dh,0xdf
  43eeb0:	cmp    eax,0x1ddf9e54
  43eeb5:	pop    esp
  43eeb6:	daa    
  43eeb7:	adc    ecx,DWORD PTR [edi]
  43eeb9:	mov    dl,0xfa
  43eebb:	jl     0x43eed3
  43eebd:	cmc    
  43eebe:	stc    
  43eebf:	jmp    0xc079:0xa365d075
  43eec6:	add    DWORD PTR [esi],esi
  43eec8:	sbb    ah,BYTE PTR [esi]
  43eeca:	pop    eax
  43eecb:	bound  esp,QWORD PTR [edi-0x66d27bdd]
  43eed1:	jg     0x43eee0
  43eed3:	jmp    0x43eed8
	...
  43eee8:	scas   al,BYTE PTR es:[edi]
  43eee9:	push   cs
  43eeea:	push   eax
  43eeeb:	bound  eax,QWORD PTR [ebp-0x6a9fef0b]
  43eef1:	cmc    
  43eef2:	or     BYTE PTR [edx+0x2e],dh
  43eef5:	push   es
  43eef6:	jne    0x43eebd
  43eef8:	sar    BYTE PTR gs:[edi+0x59],cl
  43eefc:	popa   
  43eefd:	fld    DWORD PTR [eax]
  43eeff:	xchg   esp,eax
  43ef00:	xchg   edi,eax
  43ef01:	push   esi
  43ef02:	je     0x43ef01
  43ef04:	call   0x34ca:0x63091d15
  43ef0b:	les    ecx,FWORD PTR [ebp-0x75039267]
  43ef11:	rcl    DWORD PTR [ebx+0x74],0x52
  43ef15:	repz mov esi,DWORD PTR [edx-0x490ec62a]
  43ef1c:	(bad)  
  43ef1d:	shr    DWORD PTR [esi+0x4d56a12a],1
  43ef23:	int    0x71
  43ef25:	mov    esi,0xfe47eec8
  43ef2a:	xor    dl,ch
  43ef2c:	jmp    0x72093c88
  43ef31:	push   es
  43ef32:	call   0x75999432
  43ef37:	lds    ebp,FWORD PTR [ecx+0x56]
  43ef3a:	cmp    eax,0x4c54c1cd
  43ef3f:	shr    DWORD PTR [eiz*8+0x2372fe],1
  43ef46:	add    al,0x2e
  43ef48:	mov    bh,BYTE PTR [esi+0xf974]
	...
  43ef5e:	add    BYTE PTR [eax],al
  43ef60:	test   DWORD PTR [ebp-0x24820e8c],edi
  43ef66:	ins    DWORD PTR es:[edi],dx
  43ef67:	add    BYTE PTR [edi+0x62],ch
  43ef6a:	sbb    ecx,DWORD PTR [edx+0x40f8437d]
  43ef70:	mov    ebp,0x2d72e6b0
  43ef75:	bound  edx,QWORD PTR [ebx]
  43ef77:	mov    cl,BYTE PTR [ebp+0x43]
  43ef7a:	clc    
  43ef7b:	inc    eax
  43ef7c:	std    
  43ef7d:	mov    cl,0xe6
  43ef7f:	jb     0x43efee
  43ef81:	pusha  
  43ef82:	dec    DWORD PTR [ecx+0x40f8433d]
  43ef88:	or     eax,0x2d72e6b2
  43ef8d:	fisubr DWORD PTR [ebp+0xc]
  43ef90:	shr    BYTE PTR [ecx],0x1d
  43ef93:	adc    dl,al
  43ef95:	icebp  
  43ef96:	sbb    al,0x18
  43ef98:	inc    eax
  43ef99:	icebp  
  43ef9a:	sbb    al,0x1c
  43ef9c:	add    al,0x3d
  43ef9e:	ins    DWORD PTR es:[edi],dx
  43ef9f:	push   DWORD PTR [esi+esi*2]
  43efa2:	pop    ebx
  43efa3:	pop    ebp
  43efa4:	fisubr DWORD PTR [esi+0x160b4455]
  43efaa:	dec    esi
  43efab:	pop    ecx
  43efac:	leave  
  43efad:	xabort 0x82
  43efb0:	daa    
  43efb1:	sub    eax,DWORD PTR [eax+0x7e015f4c]
  43efb7:	dec    esp
  43efb8:	scas   eax,DWORD PTR es:[edi]
  43efb9:	push   cs
  43efba:	push   ebx
  43efbb:	cvttps2pi mm3,QWORD PTR [ebx]
  43efbe:	add    al,0x8b
  43efc0:	jmp    0x10473a1
	...
  43efd5:	add    BYTE PTR [eax],al
  43efd7:	add    BYTE PTR [esi+edi*1-0x2534fbd8],ah
  43efde:	or     DWORD PTR [edi-0x7a9d43a6],esi
  43efe4:	leave  
  43efe5:	lds    eax,FWORD PTR [esp+0xf00dabf]
  43efec:	cld    
  43efed:	add    edi,eax
  43efef:	add    cl,BYTE PTR [edx-0x3b]
  43eff2:	mov    cl,0xc0
  43eff4:	bound  edi,QWORD PTR [ecx]
  43eff6:	cmp    BYTE PTR [edx+ecx*2],ah
  43eff9:	cmp    edi,DWORD PTR [eax]
  43effb:	and    al,0x1a
  43effd:	arpl   WORD PTR [esi],dx
  43efff:	test   DWORD PTR [edx],esp
  43f001:	mov    bl,0x16
  43f003:	std    
  43f004:	mov    ds:0xdbc065b7,eax
  43f009:	je     0x43efe3
  43f00b:	das    
  43f00c:	jmp    0xe97fc87c
  43f011:	add    cl,bl
  43f013:	mov    ebp,0x53bc1f5d
  43f018:	lods   eax,DWORD PTR ds:[esi]
  43f019:	mov    ds:0x8ca6c18f,eax
  43f01e:	loopne 0x43f07f
  43f020:	bound  esi,QWORD PTR [eax+0x746b6204]
  43f026:	fdivr  DWORD PTR [ebx]
  43f028:	f2xm1  
  43f02a:	sbb    DWORD PTR [eax-0x45],esp
  43f02d:	(bad)  
  43f02e:	ds mov edi,0x85c56765
  43f034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f035:	int3   
  43f036:	dec    eax
  43f037:	or     ebp,ecx
  43f039:	outs   dx,DWORD PTR ds:[esi]
  43f03a:	xchg   BYTE PTR [eax+eax*1+0x0],al
	...
  43f04e:	add    BYTE PTR [eax],al
  43f050:	inc    esi
  43f051:	loopne 0x43f066
  43f053:	mov    cl,0x20
  43f055:	dec    ebx
  43f056:	mov    ds:0x21390f85,al
  43f05b:	and    al,0x3a
  43f05d:	cmp    DWORD PTR [ecx],esi
  43f05f:	and    al,0x86
  43f061:	dec    ecx
  43f062:	inc    ecx
  43f063:	and    al,0x72
  43f065:	dec    ecx
  43f066:	cmp    DWORD PTR [edx+eiz*1],esp
  43f069:	cmp    DWORD PTR [ecx+0x24],edx
  43f06c:	sbb    bh,BYTE PTR [ecx]
  43f06e:	dec    ecx
  43f06f:	and    al,0x82
  43f071:	fwait
  43f072:	inc    eax
  43f073:	and    al,0x12
  43f075:	scas   eax,DWORD PTR es:[edi]
  43f076:	xchg   ecx,eax
  43f077:	cwde   
  43f078:	popa   
  43f079:	mov    al,0x4
  43f07b:	(bad)  
  43f07c:	fistp  QWORD PTR [eax+0x14]
  43f07f:	test   BYTE PTR [ecx],ch
  43f081:	fld1   
  43f083:	add    esp,DWORD PTR [edx-0x32]
  43f086:	(bad)
  43f08a:	mov    dh,0xe7
  43f08c:	add    esi,ecx
  43f08e:	mov    cs,ebp
  43f090:	imul   eax,DWORD PTR [esi+0x6e6b06c4],0x29
  43f097:	lea    esp,[esi]
  43f099:	cmc    
  43f09a:	std    
  43f09b:	mov    ds,WORD PTR [esi]
  43f09d:	cmc    
  43f09e:	icebp  
  43f09f:	out    dx,al
  43f0a0:	and    cl,ch
  43f0a2:	push   esi
  43f0a3:	(bad)  
  43f0a4:	rol    BYTE PTR [edx],0x9e
  43f0a7:	out    0x89,eax
  43f0a9:	push   edx
  43f0aa:	sahf   
  43f0ab:	out    0x75,eax
  43f0ad:	push   eax
  43f0ae:	and    ch,BYTE PTR [esi]
  43f0b0:	ret    0xef21
  43f0b3:	inc    ebp
	...
  43f0c8:	sub    dl,BYTE PTR [ecx-0x62]
  43f0cb:	out    0x75,eax
  43f0cd:	int3   
  43f0ce:	ss (bad) 
  43f0d0:	fst    QWORD PTR ds:0x85054fbe
  43f0d6:	jmp    0x5bcc:0x5d336203
  43f0dd:	push   ebp
  43f0de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f0df:	add    esp,DWORD PTR [edx-0x27]
  43f0e2:	bound  ebp,QWORD PTR [edi]
  43f0e4:	inc    esi
  43f0e5:	loope  0x43f159
  43f0e7:	aas    
  43f0e8:	ds fucom st(6)
  43f0eb:	pop    edx
  43f0ec:	push   0x325163d1
  43f0f1:	int3   
  43f0f2:	outs   dx,BYTE PTR ds:[esi]
  43f0f3:	mov    eax,0x8ec3d827
  43f0f8:	cs cmc 
  43f0fa:	std    
  43f0fb:	adc    bh,bl
  43f0fd:	pushf  
  43f0fe:	fbstp  TBYTE PTR [edx+0x46]
  43f101:	cmc    
  43f102:	in     eax,0x6
  43f104:	push   ds
  43f105:	cmc    
  43f106:	leave  
  43f107:	push   es
  43f108:	ss cmc 
  43f10a:	leave  
  43f10b:	adc    dh,al
  43f10d:	call   0x3e08:0xa130e601
  43f114:	stc    
  43f115:	pop    ecx
  43f116:	cmp    ebp,ecx
  43f118:	inc    edi
  43f119:	fst    DWORD PTR [ebp-0x12]
  43f11c:	in     eax,0x7c
  43f11e:	add    ch,cl
  43f120:	popa   
  43f121:	pop    ecx
  43f122:	cli    
  43f123:	call   0xe8554978
  43f128:	popa   
  43f129:	(bad)  [ebx+0x16]
	...
  43f13f:	add    BYTE PTR [ebp+eax*8+0x17d4f670],cl
  43f146:	sbb    DWORD PTR [ebp+ebp*2-0x17],ebx
  43f14a:	mov    ebp,DWORD PTR [ebp+0x2803f03d]
  43f150:	ficom  WORD PTR [ebx*1+0x749424bd]
  43f157:	enter  0x16ec,0xd
  43f15b:	rcr    BYTE PTR [esi],cl
  43f15d:	mov    esi,0xf5a570c2
  43f162:	pop    eax
  43f163:	arpl   WORD PTR [ebp-0x2f],bx
  43f166:	cmp    ch,al
  43f168:	jo     0x43f1c2
  43f16a:	mov    eax,ebp
  43f16c:	popa   
  43f16d:	(bad)  [ebx+0x4223fa25]
  43f173:	adc    dh,BYTE PTR [edx-0x33a4b30b]
  43f179:	mov    ebp,0x16e6f54e
  43f17e:	sbb    DWORD PTR [edx],eax
  43f180:	mov    bh,0x46
  43f182:	mov    ebp,0x10f5a262
  43f187:	bound  eax,QWORD PTR [edx+0x75ea2cf5]
  43f18d:	cmc    
  43f18e:	sbb    BYTE PTR [edx+0x1a],dh
  43f191:	cmc    
  43f192:	cmp    dl,al
  43f194:	call   0x3d04:0x88a9afd1
  43f19b:	add    BYTE PTR [edi+0x51c87d9b],ah
  43f1a1:	cmc    
  43f1a2:	pop    eax
  43f1a3:	sldt   WORD PTR [eax]
	...
  43f1b6:	add    BYTE PTR [eax],al
  43f1b8:	jns    0x43f147
  43f1ba:	or     dh,BYTE PTR [edi-0x364e163c]
  43f1c0:	adc    dl,BYTE PTR [ecx]
  43f1c2:	sbb    eax,0x1d29121c
  43f1c7:	sbb    BYTE PTR [edx],al
  43f1c9:	stc    
  43f1ca:	sbb    al,0x34
  43f1cc:	push   eax
  43f1cd:	adc    DWORD PTR ds:0x2c4b6c4c,ebx
  43f1d3:	jmp    FWORD PTR [edx+edi*2]
  43f1d6:	jle    0x43f22c
  43f1d8:	push   edi
  43f1d9:	adc    eax,0xd6753f6
  43f1de:	jle    0x43f224
  43f1e0:	daa    
  43f1e1:	adc    ebx,DWORD PTR [esi]
  43f1e3:	ret    0x223c
  43f1e6:	shr    DWORD PTR [edx-0x25],0x19
  43f1ea:	arpl   WORD PTR [ebx],di
  43f1ec:	push   ebx
  43f1ed:	dec    esp
  43f1ee:	leave  
  43f1ef:	wbinvd 
  43f1f1:	stos   BYTE PTR es:[edi],al
  43f1f2:	or     dh,BYTE PTR [edi-0x364e1787]
  43f1f8:	ret    0x1d01
  43f1fb:	inc    eax
  43f1fc:	sub    BYTE PTR [ecx],0x1d
  43f1ff:	dec    eax
  43f200:	xchg   edx,eax
  43f201:	adc    bl,BYTE PTR ds:0x1d114020
  43f207:	push   eax
  43f208:	cld    
  43f209:	dec    edx
  43f20a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f20b:	(bad)  
  43f20c:	sub    al,0x7a
  43f20e:	test   bl,bl
  43f210:	in     al,dx
  43f211:	push   edx
  43f212:	cmp    DWORD PTR [edx],eax
  43f214:	sti    
  43f215:	(bad)  
  43f216:	(bad)  
  43f218:	mov    eax,0x747dce
	...
  43f22d:	add    BYTE PTR [eax],al
  43f22f:	add    BYTE PTR [edi+0x19],ah
  43f232:	rcl    BYTE PTR es:[esi-0x58bb8011],0xee
  43f23a:	pop    esi
  43f23b:	add    al,0x62
  43f23d:	xor    eax,0x4e2440
  43f242:	cmp    esp,DWORD PTR [edx-0x15]
  43f245:	hlt    
  43f246:	call   0xfce99fbc
  43f24b:	adc    DWORD PTR [edx],esp
  43f24d:	mov    al,0x85
  43f24f:	jl     0x43f297
  43f251:	cwde   
  43f252:	jge    0x43f24c
  43f254:	pop    esi
  43f255:	ret    
  43f256:	jg     0x43f261
  43f258:	pusha  
  43f259:	mov    al,0x4
  43f25b:	stc    
  43f25c:	push   cs
  43f25d:	int3   
  43f25e:	call   0xd27b87e7
  43f263:	call   0xf9e50d4f
  43f268:	out    0xf0,al
  43f26a:	adc    BYTE PTR [eax+ebp*2-0x6efffb4f],al
  43f271:	std    
  43f272:	ds out 0x50,eax
  43f275:	mov    cl,0x4
  43f277:	add    dl,ah
  43f279:	clc    
  43f27a:	std    
  43f27b:	jb     0x43f211
  43f27d:	aaa    
  43f27e:	mov    ecx,0x899b3935
  43f283:	and    dh,BYTE PTR ds:0xa485a0d3
  43f289:	mov    eax,0x37520c87
  43f28e:	inc    eax
  43f28f:	and    al,0x4e
  43f291:	scas   eax,DWORD PTR es:[edi]
  43f292:	ret    
  43f293:	xchg   DWORD PTR [eax],eax
	...
  43f2a5:	add    BYTE PTR [eax],al
  43f2a7:	add    BYTE PTR [esi+0x1a3534cc],bl
  43f2ad:	pop    ds
  43f2ae:	fiadd  WORD PTR [esp+ebx*4+0x61beebbc]
  43f2b5:	outs   dx,BYTE PTR ds:[esi]
  43f2b6:	xchg   BYTE PTR [esi+edi*1-0x24],al
  43f2ba:	push   ds
  43f2bb:	test   DWORD PTR [esi-0x38],esp
  43f2be:	push   ds
  43f2bf:	xor    eax,0x850dfd63
  43f2c4:	es aam 0x38
  43f2c7:	jge    0x43f26c
  43f2c9:	fsubr  st,st(3)
  43f2cb:	ficomp DWORD PTR [ecx]
  43f2cd:	cmc    
  43f2ce:	inc    ecx
  43f2cf:	adc    bh,BYTE PTR [ebp+edx*8+0x12e71037]
  43f2d6:	repnz fisub DWORD PTR [esi-0x735259be]
  43f2dd:	mov    edx,0xbfe29f77
  43f2e2:	out    0xe,al
  43f2e4:	loope  0x43f285
  43f2e6:	push   0x374d9b9f
  43f2eb:	fist   DWORD PTR [esi-0x7730a137]
  43f2f1:	mov    ecx,0xe1208b4f
  43f2f6:	push   esp
  43f2f7:	adc    BYTE PTR [edx+0x4e],dl
  43f2fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f2fb:	out    0x39,eax
  43f2fd:	(bad)  
  43f2fe:	sub    BYTE PTR [ebp-0x256e0ae2],cl
  43f304:	and    eax,0xa08ac72d
  43f309:	int    0xd2
  43f30b:	les    eax,FWORD PTR [eax]
	...
  43f31d:	add    BYTE PTR [eax],al
  43f31f:	add    BYTE PTR [edi-0x65],cl
  43f322:	jno    0x43f36c
  43f324:	jle    0x43f333
  43f326:	arpl   WORD PTR [eax],cx
  43f328:	push   0xfffffff4
  43f32a:	call   0xa6a84947
  43f32f:	out    0x91,eax
  43f331:	pop    esp
  43f332:	sub    DWORD PTR [eax],ecx
  43f334:	outs   dx,DWORD PTR ds:[esi]
  43f335:	and    eax,0xc58c3bc6
  43f33a:	jmp    0x43f371
  43f33c:	data16 fs sub ah,bh
  43f340:	push   esi
  43f341:	mov    WORD PTR [eax-0x3a],ss
  43f344:	std    
  43f345:	data16 rcr BYTE PTR [esi+0x458fe8fb],1
  43f34c:	xor    eax,0x51e82e64
  43f351:	inc    edx
  43f352:	stos   BYTE PTR es:[edi],al
  43f353:	add    edi,DWORD PTR [esi]
  43f355:	fld    DWORD PTR [eax]
  43f357:	jmp    0xe489273c
  43f35c:	ins    DWORD PTR es:[edi],dx
  43f35d:	fisub  DWORD PTR [ebx+0x11d80dd]
  43f363:	xchg   edx,eax
  43f364:	pusha  
  43f365:	ss ret 0xe8d8
  43f369:	or     eax,0xa160c51d
  43f36e:	test   BYTE PTR [ebx-0x3aba9fa3],ch
  43f374:	lods   eax,DWORD PTR ds:[esi]
  43f375:	mov    ch,0xd1
  43f377:	fs sub eax,0xc38128fd
  43f37d:	mov    al,0xf7
  43f37f:	in     ax,0x99
  43f382:	or     BYTE PTR [ebp+0x0],ah
	...
  43f395:	add    BYTE PTR [eax],al
  43f397:	add    BYTE PTR [ebx+esi*4],dl
  43f39a:	clc    
  43f39b:	push   esi
  43f39c:	call   0xe94510ae
  43f3a1:	inc    ebp
  43f3a2:	sbb    eax,0x3d5e440d
  43f3a7:	add    eax,0x29c23b1e
  43f3ac:	imul   edi,DWORD PTR [ebx],0x3a4be58a
  43f3b2:	mov    WORD PTR [ebp+0x285eec45],gs
  43f3b8:	and    ecx,esp
  43f3ba:	pop    esi
  43f3bb:	pusha  
  43f3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f3bd:	inc    DWORD PTR [edx]
  43f3bf:	xchg   eax,ebp
  43f3c1:	sbb    al,0x1d
  43f3c3:	mov    cl,0x87
  43f3c5:	js     0x43f388
  43f3c7:	icebp  
  43f3c8:	jg     0x43f42a
  43f3ca:	cmp    eax,0x8c3b65c3
  43f3cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f3d0:	std    
  43f3d1:	iret   
  43f3d2:	pop    esi
  43f3d3:	test   al,0x26
  43f3d5:	loope  0x43f435
  43f3d7:	jo     0x43f373
  43f3d9:	(bad)  
  43f3da:	(bad)  
  43f3db:	popa   
  43f3dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f3dd:	or     DWORD PTR [esi+0x4cb65223],eax
  43f3e3:	add    BYTE PTR [edi-0x3f],bl
  43f3e6:	jg     0x43f42c
  43f3e8:	push   ecx
  43f3e9:	in     eax,0x75
  43f3eb:	jle    0x43f374
  43f3ed:	loopne 0x43f44d
  43f3ef:	add    BYTE PTR [esi-0x2f],ah
  43f3f2:	pop    es
  43f3f3:	jmp    FWORD PTR [edi-0x3f]
  43f3f6:	sub    al,0x8b
  43f3f8:	or     ch,dl
  43f3fa:	push   ecx
  43f3fb:	mov    eax,DWORD PTR [eax]
	...
  43f40d:	add    BYTE PTR [eax],al
  43f40f:	add    BYTE PTR ds:0xe4fbb285,al
  43f415:	push   ebp
  43f416:	ficom  WORD PTR [ecx-0x4c]
  43f419:	or     eax,0xd1734143
  43f41e:	inc    esi
  43f41f:	dec    eax
  43f420:	lahf   
  43f421:	rol    BYTE PTR [eax+0x48],0x8f
  43f425:	loop   0x43f4a6
  43f427:	ins    BYTE PTR es:[edi],dx
  43f428:	pop    edi
  43f429:	mov    cl,0xdf
  43f42b:	shl    DWORD PTR [esi],1
  43f42d:	push   esi
  43f42e:	cli    
  43f42f:	mov    edi,DWORD PTR [edi-0x33f0ef41]
  43f435:	call   0xff34:0xbfafff51
  43f43c:	scas   eax,DWORD PTR es:[edi]
  43f43d:	mov    edi,0xbf1fff24
  43f442:	sub    al,0x51
  43f444:	shl    BYTE PTR [edi+0x5483f4e9],0xfa
  43f44b:	jmp    0x43f494
  43f44d:	bound  ecx,QWORD PTR [ebp+0x24]
  43f450:	xor    esp,esi
  43f452:	mov    cl,0xc2
  43f454:	sti    
  43f455:	push   ebp
  43f456:	ins    DWORD PTR es:[edi],dx
  43f457:	and    al,0xef
  43f459:	push   ebp
  43f45a:	ins    DWORD PTR es:[edi],dx
  43f45b:	and    al,0x1f
  43f45d:	push   esi
  43f45e:	ins    DWORD PTR es:[edi],dx
  43f45f:	and    al,0x27
  43f461:	in     al,dx
  43f462:	jge    0x43f432
  43f464:	arpl   WORD PTR [ecx-0x1a],bp
  43f467:	inc    DWORD PTR [edx+eiz*2]
  43f46a:	ror    DWORD PTR [ecx-0x14eb3eb1],1
  43f470:	(bad)  
  43f472:	mov    DWORD PTR [eax+eax*1+0x0],edx
	...
  43f486:	add    BYTE PTR [eax],al
  43f488:	ds test al,0x5
  43f48b:	mov    cl,0x20
  43f48d:	rcl    DWORD PTR [ebp-0x6a53c18c],1
  43f493:	je     0x43f41b
  43f495:	in     al,0x95
  43f497:	je     0x43f517
  43f499:	mov    ah,0x33
  43f49b:	test   DWORD PTR [eax+ecx*2+0x57c5e935],ebx
  43f4a2:	mov    eax,edx
  43f4a4:	jmp    0x43f4aa
  43f4a6:	jmp    0x5b6d3be
  43f4ab:	test   BYTE PTR [edi+0x5d],al
  43f4ae:	xchg   ebp,eax
  43f4af:	stc    
  43f4b0:	frndint 
  43f4b2:	call   0xe910ddda
  43f4b7:	psraw  mm0,QWORD PTR [eax-0x7c5c02f8]
  43f4be:	mov    eax,DWORD PTR [esi+edi*1-0x24]
  43f4c2:	mov    ebx,DWORD PTR [esi+eax*2-0x50]
  43f4c6:	stos   DWORD PTR es:[edi],eax
  43f4c7:	dec    edx
  43f4c8:	ja     0x43f4f1
  43f4ca:	xchg   ebp,eax
  43f4cb:	test   esi,ebp
  43f4cd:	jecxz  0x43f4b3
  43f4cf:	gs pusha 
  43f4d1:	push   ebp
  43f4d2:	mov    ecx,ecx
  43f4d4:	dec    edx
  43f4d5:	inc    edx
  43f4d6:	fwait
  43f4d7:	cli    
  43f4d8:	push   ebp
  43f4d9:	cmp    edi,DWORD PTR [edi-0x566450a7]
  43f4df:	(bad)  
  43f4e0:	nop
  43f4e1:	add    BYTE PTR [esi],dh
  43f4e3:	jge    0x43f50b
  43f4e5:	jo     0x43f4a9
  43f4e7:	add    al,0x62
  43f4e9:	jae    0x43f4bd
  43f4eb:	aam    0x0
	...
  43f4fd:	add    BYTE PTR [eax],al
  43f4ff:	add    BYTE PTR [ecx],bh
  43f501:	les    esi,FWORD PTR [ebx-0x71fcdb19]
  43f507:	mov    edi,0x858d3463
  43f50c:	sahf   
  43f50d:	pushf  
  43f50e:	or     al,0x62
  43f510:	fcmovnu st,st(0)
  43f512:	repz mov ebp,DWORD PTR [edx+0x12]
  43f516:	lods   al,BYTE PTR ds:[esi]
  43f517:	add    BYTE PTR [edx+0xc],ah
  43f51a:	cmp    BYTE PTR [ebx],dh
  43f51c:	jl     0x43f52f
  43f51e:	inc    esp
  43f51f:	or     al,0x8a
  43f521:	or     DWORD PTR [edi+0x1e476dd1],edi
  43f527:	add    al,0xe7
  43f529:	ret    0x9d63
  43f52c:	fcmovne st,st(3)
  43f52e:	cmp    eax,0x72d98df6
  43f533:	xchg   esp,eax
  43f534:	loope  0x43f4e4
  43f536:	out    0x7f,eax
  43f538:	out    0xd7,eax
  43f53a:	jmp    0x3ad242
  43f53f:	mov    fs,WORD PTR [ecx]
  43f541:	fld    DWORD PTR [edi]
  43f543:	lea    esp,[eax]
  43f545:	loope  0x43f52d
  43f547:	push   edx
  43f548:	and    ebp,ebx
  43f54a:	sbb    dl,dh
  43f54c:	scas   al,BYTE PTR es:[edi]
  43f54d:	pop    ecx
  43f54e:	out    0xdf,al
  43f550:	jno    0x43f52b
  43f552:	(bad)  
  43f553:	mov    WORD PTR [eax],fs
  43f555:	jecxz  0x43f53d
  43f557:	jg     0x43f574
  43f559:	fsubr  st,st(1)
  43f55b:	add    edx,DWORD PTR [edx]
  43f55d:	out    0x8e,al
  43f55f:	inc    edx
  43f560:	pop    edx
  43f561:	or     DWORD PTR [edi+0x9a],edx
	...
  43f577:	add    BYTE PTR [ecx-0x47],dl
  43f57a:	fiadd  DWORD PTR [ebx+0x62]
  43f57d:	pop    esi
  43f57e:	sub    dl,BYTE PTR [eax]
  43f580:	outs   dx,DWORD PTR ds:[esi]
  43f581:	or     edx,eax
  43f583:	jmp    0x43f5d1
  43f585:	mov    ch,0xea
  43f587:	call   0xcda0:0x88f5fdce
  43f58e:	mov    ecx,0xbdfd8e88
  43f593:	mov    ds,WORD PTR [ebx]
  43f595:	ret    0x542e
  43f598:	sub    DWORD PTR [ebp-0x66b0f9ed],esi
  43f59e:	add    DWORD PTR [eax-0x60],esp
  43f5a1:	leave  
  43f5a2:	jge    0x43f5cd
  43f5a4:	pop    ecx
  43f5a5:	pop    ebp
  43f5a6:	pop    ds
  43f5a7:	call   0x5dcfcf0d
  43f5ac:	add    cl,cl
  43f5ae:	pop    esi
  43f5af:	bound  esp,QWORD PTR [eax-0x4657a121]
  43f5b5:	mov    dh,0x7
  43f5b7:	jg     0x43f5d2
  43f5b9:	bound  edi,QWORD PTR [edi]
  43f5bb:	stc    
  43f5bc:	push   0x68e13f6a
  43f5c1:	or     cl,0x60
  43f5c4:	sbb    esp,ebp
  43f5c6:	out    dx,al
  43f5c7:	test   al,0x5c
  43f5c9:	sub    eax,0xb60669ff
  43f5ce:	test   BYTE PTR [eax-0x22b8a44b],ch
  43f5d4:	fistp  WORD PTR [edx]
  43f5d6:	pop    es
  43f5d7:	je     0x43f5f4
  43f5d9:	stc    
  43f5da:	push   0xfffffff1
	...
  43f5f0:	jmp    0x687280a9
  43f5f5:	popa   
  43f5f6:	aas    
  43f5f7:	enter  0x9749,0x3f
  43f5fb:	or     ebx,DWORD PTR [esi+0x37]
  43f5fe:	cmp    ah,BYTE PTR [esi-0x19eec495]
  43f604:	repnz cwde 
  43f606:	mov    DWORD PTR [edi-0x17caf17c],esp
  43f60c:	push   edx
  43f60d:	daa    
  43f60e:	or     BYTE PTR [esi-0x60],dh
  43f611:	fistp  WORD PTR [esi-0xe]
  43f614:	pop    ds
  43f615:	sub    BYTE PTR ds:0x1356170,cl
  43f61b:	jmp    0xe948afca
  43f620:	popa   
  43f621:	call   0xe900:0xd145cd3d
  43f628:	popa   
  43f629:	mov    esi,0x50b8002a
  43f62e:	and    DWORD PTR [ebp+0x37],esi
  43f631:	adc    eax,0xd70c0001
  43f636:	mov    ebx,0xd6fc00
  43f63b:	(bad)  
  43f63c:	aaa    
  43f63d:	mov    ecx,0xd80bff14
  43f642:	add    bl,ch
  43f644:	sti    
  43f645:	fs cmp eax,0x4564f724
  43f64b:	and    al,0x7
  43f64d:	gs gs and al,0xb7
  43f651:	pop    esi
  43f652:	cmp    eax,0x24
	...
  43f667:	add    BYTE PTR [edi+0x6b2a435a],dh
  43f66d:	pop    esp
  43f66e:	push   ebx
  43f66f:	and    al,0xf3
  43f671:	cdq    
  43f672:	sti    
  43f673:	(bad)  
  43f674:	fcomp  QWORD PTR [ebx+0x43]
  43f677:	sub    edi,DWORD PTR [ebx+0x5c]
  43f67a:	push   ebx
  43f67b:	es inc eax
  43f67d:	pushf  
  43f67e:	jmp    0xfa95d43c
  43f683:	mov    ecx,DWORD PTR [edi-0x47]
  43f686:	adc    al,0x8d
  43f688:	inc    ebp
  43f689:	ror    DWORD PTR [eax-0x73],0x75
  43f68d:	(bad)
  43f690:	std    
  43f691:	push   ecx
  43f692:	cli    
  43f693:	(bad)  
  43f694:	int    0xb7
  43f696:	pop    esi
  43f697:	adc    BYTE PTR [ecx-0x3a72b813],dh
  43f69d:	xchg   BYTE PTR [eax-0x18],cl
  43f6a0:	mov    dh,0x4f
  43f6a2:	sti    
  43f6a3:	dec    DWORD PTR [edx+ecx*1+0x4b]
  43f6a7:	or     bh,BYTE PTR [edx+eax*2]
  43f6aa:	dec    ebx
  43f6ab:	or     al,0x48
  43f6ad:	xchg   edi,eax
  43f6ae:	inc    ecx
  43f6af:	mov    ch,dh
  43f6b1:	mov    ds:0x5f1b467e,al
  43f6b6:	inc    ebx
  43f6b7:	inc    ecx
  43f6b8:	bound  eax,QWORD PTR [ebp-0x34]
  43f6bb:	jae    0x43f723
  43f6bd:	pop    esp
  43f6bf:	in     eax,0x5f
  43f6c1:	enter  0xf159,0x1c
  43f6c5:	mov    ah,0x8b
  43f6c7:	inc    edx
  43f6c8:	jp     0x43f70f
  43f6ca:	mov    ebp,0x74
	...
  43f6df:	add    BYTE PTR [ebx-0x3d],ch
  43f6e2:	adc    dl,BYTE PTR [eax]
  43f6e4:	add    eax,0x2e1399d3
  43f6e9:	mov    cl,0x44
  43f6eb:	add    BYTE PTR [ebp+0x52],ah
  43f6ee:	mov    ch,0x83
  43f6f0:	and    dl,BYTE PTR [edi]
  43f6f2:	add    al,0x87
  43f6f4:	pushf  
  43f6f5:	les    edi,FWORD PTR [ecx+ecx*1]
  43f6f8:	daa    
  43f6f9:	js     0x43f680
  43f6fb:	leave  
  43f6fc:	retf   0x917e
  43f6ff:	cli    
  43f700:	int    0x3c
  43f702:	mov    ch,0x73
  43f704:	jo     0x43f781
  43f706:	adc    dl,BYTE PTR [eax]
  43f708:	mov    ebp,0x2210b0ad
  43f70d:	rol    BYTE PTR [ebp-0x6f0d4536],0xfa
  43f714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f715:	outs   dx,DWORD PTR ds:[esi]
  43f716:	xchg   edx,eax
  43f717:	test   DWORD PTR [edi+esi*8+0x7e375a39],esp
  43f71e:	or     al,0x0
  43f720:	xor    al,0x37
  43f722:	xchg   ebx,eax
  43f723:	stc    
  43f724:	or     al,0xc4
  43f726:	cdq    
  43f727:	xor    bh,BYTE PTR [ebp-0x53]
  43f72a:	rcl    BYTE PTR [eax],0x22
  43f72d:	rcr    BYTE PTR [ecx-0x18dcad8e],0xdb
  43f734:	push   edx
  43f735:	add    BYTE PTR [eax*4-0x7b536b54],0x4d
  43f73d:	jmp    0x7cac:0x889c8598
	...
  43f758:	dec    ebp
  43f759:	fstp   DWORD PTR [edi]
  43f75b:	cwde   
  43f75c:	out    0x22,eax
  43f75e:	sahf   
  43f75f:	stos   DWORD PTR es:[edi],eax
  43f760:	scas   al,BYTE PTR es:[edi]
  43f761:	stos   BYTE PTR es:[edi],al
  43f762:	adc    BYTE PTR [eax-0x55575d19],bl
  43f768:	mov    dh,0xaa
  43f76a:	add    BYTE PTR [eax+0x2e9b08ad],bl
  43f770:	mov    al,0xa
  43f772:	arpl   WORD PTR [ebp-0x20699f4f],bp
  43f778:	ins    DWORD PTR es:[edi],dx
  43f779:	mov    dl,0xf5
  43f77b:	sub    DWORD PTR [ecx+ebx*1-0x16],0xffffff8a
  43f780:	sbb    bl,BYTE PTR [esi-0x2d]
  43f783:	test   DWORD PTR [ebx],eax
  43f785:	fldl2t 
  43f787:	xchg   esi,eax
  43f788:	bound  ebx,QWORD PTR [esi-0x45]
  43f78b:	mov    ebp,DWORD PTR [edi-0x24fb33a9]
  43f791:	fsubr  st,st(1)
  43f793:	mov    ah,BYTE PTR [edi-0x473b15c2]
  43f799:	enter  0xa5a8,0x52
  43f79d:	ficom  WORD PTR [edi-0xe02d175]
  43f7a3:	or     bl,BYTE PTR [ebp+0x1e88de3e]
  43f7a9:	std    
  43f7aa:	loope  0x43f770
  43f7ac:	mov    esp,0x6aa7a8e0
  43f7b1:	or     ebx,esp
  43f7b3:	cdq    
  43f7b4:	xor    BYTE PTR [eax-0x1a],ah
  43f7b7:	fbld   TBYTE PTR [ebp-0x4e]
  43f7ba:	cmc    
  43f7bb:	sti    
	...
  43f7d0:	push   ebx
  43f7d1:	sbb    edx,ebp
  43f7d3:	cmp    BYTE PTR [edx-0x24],0xd4
  43f7d7:	in     eax,dx
  43f7d8:	loopne 0x43f767
  43f7da:	into   
  43f7db:	add    eax,0x8b155e17
  43f7e0:	sub    dl,al
  43f7e2:	bnd jno 0x43f840
  43f7e5:	mov    cl,0x1
  43f7e7:	ins    DWORD PTR es:[edi],dx
  43f7e8:	es es std 
  43f7eb:	js     0x43f84c
  43f7ed:	mov    dh,0x3
  43f7ef:	fisub  DWORD PTR [ecx]
  43f7f1:	adc    edx,DWORD PTR [edi-0x44]
  43f7f4:	js     0x43f7fe
  43f7f6:	pop    edx
  43f7f7:	sub    ah,bh
  43f7f9:	mov    ebp,0xd961eb91
  43f7fe:	push   ebx
  43f7ff:	pushf  
  43f800:	call   0xa21b1109
  43f805:	(bad)  [esi-0x62]
  43f808:	xor    BYTE PTR [esi+0x565d8354],al
  43f80e:	cli    
  43f80f:	push   ecx
  43f810:	jbe    0x43f870
  43f812:	inc    ecx
  43f813:	jmp    0xdb9505c
  43f818:	cs mov dl,0xce
  43f81b:	push   0xffffffc9
  43f81d:	fld    QWORD PTR [edi]
  43f81f:	ins    BYTE PTR es:[edi],dx
  43f820:	pop    ss
  43f821:	loop   0x43f823
  43f823:	jmp    0xd2b411b1
  43f828:	popa   
  43f829:	or     DWORD PTR [esi-0x740f3deb],eax
  43f82f:	mov    dh,0x9
  43f831:	rcl    DWORD PTR [ecx+0x9e],0x0
	...
  43f848:	int3   
  43f849:	push   ebp
  43f84a:	shl    esi,0x2d
  43f84d:	pushf  
  43f84e:	or     ecx,ebp
  43f850:	popa   
  43f851:	aaa    
  43f852:	std    
  43f853:	and    BYTE PTR [esi+0x9],dl
  43f856:	mov    ebx,0x1191049
  43f85b:	fs and eax,0x718140f5
  43f861:	fild   WORD PTR [eax]
  43f863:	jmp    0x644c924a
  43f868:	or     esp,ecx
  43f86a:	add    cl,ch
  43f86c:	fiadd  DWORD PTR ds:0x1ddaf71d
  43f872:	sbb    eax,0x555d6700
  43f877:	and    al,0x54
  43f879:	fs push ebp
  43f87b:	and    al,0xf8
  43f87d:	adc    DWORD PTR [edi-0x7423c4f8],0x54
  43f884:	das    
  43f885:	mov    edi,0x1c1f4c8b
  43f88a:	jmp    0x1203c24
  43f88f:	jge    0x145b15ad
  43f895:	push   ds
  43f896:	cmp    eax,0xb7ce2d24
  43f89b:	loope  0x43f8a0
  43f89d:	into   
  43f89e:	std    
  43f89f:	(bad)  
  43f8a0:	and    al,0x1f
  43f8a2:	mov    eax,0xfa510605
  43f8a7:	inc    edx
  43f8a9:	aam    0xf5
  43f8ab:	inc    DWORD PTR [eax]
	...
  43f8bd:	add    BYTE PTR [eax],al
  43f8bf:	add    bl,bh
  43f8c1:	int    0x2d
  43f8c3:	rol    DWORD PTR [ebp*1-0x2434f7a8],0x7f
  43f8cb:	pop    esp
  43f8cc:	pop    edi
  43f8cd:	mov    ebp,0x395f9c7d
  43f8d2:	idiv   edi
  43f8d4:	mov    ebx,0x93243d56
  43f8d9:	pusha  
  43f8da:	dec    BYTE PTR [edi+0x46]
  43f8dd:	jmp    0x194018fe
  43f8e2:	sbb    eax,0xdbba20
  43f8e7:	add    ah,ah
  43f8e9:	jmp    0xb98b83ea
  43f8ee:	sbb    al,0x8b
  43f8f0:	jmp    0x77a4:0xe3c1b861
  43f8f7:	loop   0x43f884
  43f8f9:	(bad)  
  43f8fb:	add    BYTE PTR [eax+0x6b],dh
  43f8fe:	jle    0x43f8c1
  43f900:	(bad)  
  43f901:	(bad)  
  43f903:	clc    
  43f904:	(bad)  
  43f906:	ret    
  43f907:	fbstp  TBYTE PTR [edx-0x55]
  43f90a:	ret    
  43f90b:	mov    edi,0xf1d1a942
  43f910:	mov    ah,0x9a
  43f912:	clc    
  43f913:	mov    esi,0xd009b938
  43f918:	call   0x3484:0x7e447f70
  43f91f:	push   ecx
  43f920:	fld    TBYTE PTR [eax+ebx*8+0x3b]
	...
  43f938:	and    eax,0x464c89e6
  43f93d:	mov    ah,0x81
  43f93f:	(bad)  
  43f940:	adc    eax,0x5d049544
  43f945:	jge    0x43f911
  43f947:	xchg   DWORD PTR [esi+0x2c24f094],edx
  43f94d:	test   al,0x78
  43f94f:	ficomp WORD PTR [ebp-0x40]
  43f952:	add    al,0x47
  43f954:	pop    ebp
  43f955:	cmp    eax,0xc0620196
  43f95a:	sub    al,0x40
  43f95c:	push   ebp
  43f95d:	mov    ebx,0x3d636604
  43f962:	sub    BYTE PTR [esp+ebp*2],ah
  43f965:	cmp    edi,DWORD PTR [ebp-0x72f03518]
  43f96b:	stc    
  43f96c:	out    0x80,al
  43f96e:	std    
  43f96f:	and    DWORD PTR [esi-0x1dfffb49],0xffffffc4
  43f976:	loopne 0x43f989
  43f978:	bound  edi,QWORD PTR [ebx]
  43f97a:	or     DWORD PTR [ecx],ecx
  43f97c:	test   DWORD PTR [edx+0x346a4d8d],0xefe609c4
  43f986:	hlt    
  43f987:	inc    DWORD PTR [ebp-0x1974f6c5]
  43f98d:	fld    DWORD PTR ds:0xe9d9627c
  43f993:	xor    ebx,ecx
  43f995:	add    eax,0x25dd3c06
  43f99a:	(bad)  
  43f99b:	cmp    eax,DWORD PTR [eax]
	...
  43f9ad:	add    BYTE PTR [eax],al
  43f9af:	add    BYTE PTR [ebx+0xa],bl
  43f9b2:	out    dx,al
  43f9b3:	jle    0x43f9d7
  43f9b5:	ficomp WORD PTR [ebp+0x79]
  43f9b8:	arpl   cx,bx
  43f9ba:	jmp    0xfea944f1
  43f9bf:	addr16 cmp al,0xae
  43f9c2:	jmp    0x6203:0x49f4ce86
  43f9c9:	fldenv [edx-0x35]
  43f9cc:	cmp    dl,cl
  43f9ce:	add    eax,0x22621b94
  43f9d3:	jle    0x43fa04
  43f9d5:	ficomp WORD PTR [ebp+0x19]
  43f9d8:	arpl   cx,bx
  43f9da:	jmp    0x8e398873
  43f9df:	xchg   esp,eax
  43f9e0:	push   ecx
  43f9e1:	pop    ecx
  43f9e2:	cld    
  43f9e3:	inc    ebx
  43f9e4:	bound  esi,QWORD PTR [edi]
  43f9e6:	jae    0x43fa1f
  43f9e8:	pop    edx
  43f9e9:	ficom  WORD PTR [edi-0x56c8a2c1]
  43f9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f9f0:	push   0x37
  43f9f2:	repz mov ah,0x40
  43f9f5:	pusha  
  43f9f6:	push   cs
  43f9f7:	call   0x37a7314d
  43f9fc:	pop    esp
  43f9fd:	fisubr WORD PTR [edi+0x3f]
  43fa00:	addr16 aaa 
  43fa02:	test   eax,0xf3376aa6
  43fa07:	mov    ah,0xe7
  43fa09:	test   al,0x8
  43fa0b:	jge    0x43fa1b
  43fa0d:	cmc    
  43fa0e:	pextrw ecx,(bad),0xc5
  43fa10:	mov    cl,al
  43fa12:	jb     0x43f9ce
	...
  43fa28:	adc    eax,0x8b03eabb
  43fa2d:	fadd   DWORD PTR [eax]
  43fa2f:	loop   0x43fa02
  43fa31:	adc    DWORD PTR ss:[edx-0x60],esp
  43fa35:	ins    DWORD PTR es:[edi],dx
  43fa36:	loop   0x43fa31
  43fa38:	hlt    
  43fa39:	call   0xe200:0xd8d0e91e
  43fa40:	test   eax,0xaa605110
  43fa45:	cmc    
  43fa46:	ins    BYTE PTR es:[edi],dx
  43fa47:	je     0x43f9e6
  43fa49:	stc    
  43fa4a:	push   eax
  43fa4b:	sub    BYTE PTR [edi],al
  43fa4d:	loop   0x43fa10
  43fa4f:	inc    ebx
  43fa50:	inc    esi
  43fa51:	(bad)  
  43fa52:	rcr    DWORD PTR [edx+ebp*8-0xb],1
  43fa56:	sub    cl,0x61
  43fa59:	fst    DWORD PTR [eax+0x70]
  43fa5c:	stos   BYTE PTR es:[edi],al
  43fa5d:	cmc    
  43fa5e:	mov    ecx,gs
  43fa60:	popa   
  43fa61:	fld1   
  43fa63:	sar    dl,0xaf
  43fa66:	clc    
  43fa67:	(bad)  
  43fa68:	push   ds
  43fa69:	push   ss
  43fa6a:	sbb    eax,0xc0fe097d
  43fa6f:	cdq    
  43fa70:	cmp    ebp,DWORD PTR [ebp+edi*2-0x3b]
  43fa74:	out    0xd9,eax
  43fa76:	add    cl,ch
  43fa78:	stc    
  43fa79:	sbb    DWORD PTR ss:[ebp+eiz*4-0xb],ebp
  43fa7e:	je     0x43facf
  43fa80:	pop    ds
  43fa81:	push   esi
  43fa82:	sbb    eax,0xd96161
  43fa87:	icebp  
  43fa88:	xchg   ecx,eax
  43fa89:	or     bh,al
  43fa8b:	xchg   esp,eax
	...
  43faa0:	in     al,0xb1
  43faa2:	sbb    esi,esp
  43faa4:	fisubr DWORD PTR [edi+edi*8-0x18]
  43faa8:	popa   
  43faa9:	pop    eax
  43faaa:	out    dx,eax
  43faab:	sbb    eax,0xc54d55ba
  43fab0:	jne    0x43fab9
  43fab2:	mov    WORD PTR [esi-0x71778437],fs
  43fab8:	lock push ebp
  43faba:	rol    DWORD PTR [eax],0x8c
  43fabd:	push   esp
  43fabe:	mov    al,ds:0x7dd87b06
  43fac3:	sub    eax,0x38af73
  43fac8:	dec    ebp
  43fac9:	inc    edi
  43faca:	cli    
  43facb:	add    BYTE PTR [ebx+0x3a8abf83],cl
  43fad1:	sub    eax,0x763246d
  43fad6:	cli    
  43fad7:	add    BYTE PTR [ebx-0x28],cl
  43fada:	push   edx
  43fadb:	mov    BYTE PTR [edi],al
  43fadd:	mov    ah,0xd
  43fadf:	mov    BYTE PTR [edi],al
  43fae1:	mov    ah,0x34
  43fae3:	push   ecx
  43fae4:	mov    esi,0x4ba81d54
  43fae9:	fadd   DWORD PTR [eax]
  43faeb:	push   eax
  43faec:	test   BYTE PTR [ebx*1-0x5b8b3c3],dl
  43faf3:	dec    DWORD PTR [ecx+esi*2+0x26]
  43faf7:	rcl    ch,0xe7
  43fafa:	mov    eax,DWORD PTR [edi+eiz*1-0x40007fc]
  43fb01:	out    0xf9,eax
  43fb03:	aad    0x0
	...
  43fb15:	add    BYTE PTR [eax],al
  43fb17:	add    BYTE PTR [eax-0x6c],bh
  43fb1a:	sbb    DWORD PTR [ebx],esi
  43fb1c:	inc    edx
  43fb1d:	sub    ecx,eax
  43fb1f:	mov    DWORD PTR [edi],esi
  43fb21:	rcl    DWORD PTR [eax],0x89
  43fb24:	aas    
  43fb25:	rcr    DWORD PTR [edi+eax*8],0x37
  43fb29:	shr    DWORD PTR [eax+ecx*1-0x35],0xd7
  43fb2e:	add    BYTE PTR [ebx+0x2a4c0ef],cl
  43fb34:	mov    ebx,0xbcd283d7
  43fb39:	push   ebx
  43fb3a:	sbb    eax,DWORD PTR [ecx]
  43fb3c:	retf   
  43fb3d:	xlat   BYTE PTR ds:[ebx]
  43fb3e:	inc    edi
  43fb3f:	push   ecx
  43fb40:	push   ebx
  43fb41:	mov    ecx,0x2abbfff7
  43fb46:	inc    ebp
  43fb47:	and    al,0x62
  43fb49:	out    dx,al
  43fb4a:	xchg   esp,eax
  43fb4b:	dec    esp
  43fb4c:	repz pop edx
  43fb4e:	xchg   edx,eax
  43fb4f:	jge    0x43faeb
  43fb51:	push   edx
  43fb52:	add    al,BYTE PTR [ebx+0x4c163]
  43fb58:	test   DWORD PTR [esp+ecx*8-0x383dddef],ecx
  43fb5f:	dec    ebx
  43fb60:	cmp    eax,0xe70904c2
  43fb65:	mov    ah,0xa
  43fb67:	add    BYTE PTR [edx+0x3f],ah
  43fb6a:	push   ecx
  43fb6b:	and    al,0x12
  43fb6d:	mov    edi,0x6c620004
  43fb72:	add    DWORD PTR [esi+0x4d],esp
  43fb75:	in     al,dx
  43fb76:	pop    eax
  43fb77:	and    al,0xe
  43fb79:	mov    edi,0x4
	...
  43fb8e:	add    BYTE PTR [eax],al
  43fb90:	cmp    eax,0xa20e8086
  43fb95:	shl    BYTE PTR [ebp+0x4b],0x62
  43fb99:	retf   
  43fb9a:	das    
  43fb9b:	adc    cl,bl
  43fb9d:	ins    BYTE PTR es:[edi],dx
  43fb9e:	loopne 0x43fbb7
  43fba0:	jmp    0x518bdc01
  43fba5:	jmp    0x788a4825
  43fbaa:	jg     0x43fb7a
  43fbac:	push   ebp
  43fbad:	cmp    al,0x70
  43fbaf:	add    BYTE PTR [edx-0x40],ah
  43fbb2:	jne    0x43fbf8
  43fbb4:	ds aam 0x75
  43fbb7:	out    dx,eax
  43fbb8:	fld    DWORD PTR [esi-0x2bc18b85]
  43fbbe:	adc    eax,0x94bf6beb
  43fbc3:	bound  ebx,QWORD PTR [ebx+0x4371ffe2]
  43fbc9:	adc    cl,ah
  43fbcb:	dec    ecx
  43fbcc:	pop    ebp
  43fbcd:	jmp    0xc975:0x4fe95225
  43fbd4:	retf   0x9ad9
  43fbd7:	xchg   esi,eax
  43fbd8:	stos   DWORD PTR es:[edi],eax
  43fbd9:	stos   BYTE PTR es:[edi],al
  43fbda:	imul   ecx,DWORD PTR [ebx-0x7c9a2555],0x61
  43fbe1:	fldl2t 
  43fbe3:	xchg   BYTE PTR [edx+0x610b65da],ah
  43fbe9:	fldl2t 
  43fbeb:	test   BYTE PTR [edx-0x192d0b28],cl
  43fbf1:	adc    eax,0x2bbe
	...
  43fc06:	add    BYTE PTR [eax],al
  43fc08:	fistp  WORD PTR ds:0xee2dec06
  43fc0e:	sub    BYTE PTR [esi],dl
  43fc10:	push   ecx
  43fc11:	and    BYTE PTR [ebx-0x62],ch
  43fc14:	gs pusha 
  43fc16:	xchg   esi,eax
  43fc17:	out    0x6d,eax
  43fc19:	pop    esi
  43fc1a:	adc    eax,0xd5f59e7e
  43fc1f:	fwait
  43fc20:	sbb    eax,0x479030a7
  43fc25:	fcmovb st,st(3)
  43fc27:	cli    
  43fc28:	xchg   BYTE PTR [ecx-0x3bd4c646],bl
  43fc2e:	sar    ecx,0x65
  43fc31:	fldcw  WORD PTR [edx-0x39]
  43fc34:	outs   dx,BYTE PTR ds:[esi]
  43fc35:	pop    esi
  43fc36:	scas   al,BYTE PTR es:[edi]
  43fc37:	out    0x6d,eax
  43fc39:	pop    esi
  43fc3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fc3b:	out    0x69,eax
  43fc3d:	out    0x30,al
  43fc3f:	jl     0x43fbcf
  43fc41:	cmc    
  43fc42:	xchg   ecx,eax
  43fc43:	test   BYTE PTR [esi-0x5c054a0b],ah
  43fc49:	pusha  
  43fc4a:	push   esi
  43fc4b:	call   0x7c1feae5
  43fc50:	outs   dx,BYTE PTR ds:[esi]
  43fc51:	cmc    
  43fc52:	std    
  43fc53:	adc    DWORD PTR [ebp+0x5e],ebx
  43fc56:	jbe    0x43fc40
  43fc58:	add    edi,edx
  43fc5a:	jmp    0xfeb14b62
  43fc5f:	push   ebx
  43fc60:	les    ebp,FWORD PTR [ecx-0x1f9e16ff]
  43fc66:	jl     0x43fc1f
  43fc68:	in     al,0xaf
  43fc6a:	clc    
  43fc6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  43fc80:	or     dh,ch
  43fc82:	mov    al,0xeb
  43fc84:	popa   
  43fc85:	fincstp 
  43fc87:	cld    
  43fc88:	mov    esp,ebx
  43fc8a:	inc    eax
  43fc8b:	jmp    0xe16101a8
  43fc90:	mov    al,0x92
  43fc92:	jmp    0x5262:0xf8afd49f
  43fc99:	cmc    
  43fc9a:	dec    eax
  43fc9b:	add    DWORD PTR [esi],ebx
  43fc9d:	sub    BYTE PTR [ecx+ebp*8],bl
  43fca0:	dec    ebx
  43fca1:	stos   BYTE PTR es:[edi],al
  43fca2:	test   DWORD PTR [ebp+0x268bcf7d],esi
  43fca8:	(bad)  
  43fca9:	and    BYTE PTR [esi-0x3ea21ab2],al
  43fcaf:	mul    ch
  43fcb1:	stos   BYTE PTR es:[edi],al
  43fcb2:	std    
  43fcb3:	call   0xadf2cf19
  43fcb8:	inc    ebp
  43fcb9:	retf   
  43fcba:	xor    esi,DWORD PTR [edi]
  43fcbc:	sbb    DWORD PTR [ebx-0x225e92f8],ebx
  43fcc2:	add    cl,ch
  43fcc4:	dec    ebx
  43fcc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43fcc6:	pop    ecx
  43fcc7:	ret    0xd326
  43fcca:	jl     0x43fce5
  43fccc:	pusha  
  43fccd:	fld    DWORD PTR [eax]
  43fccf:	mov    cl,0xc
  43fcd1:	pop    ebp
  43fcd2:	dec    eax
  43fcd3:	jmp    0x43fd36
  43fcd5:	(bad)  [eax-0x1a]
  43fcd8:	in     eax,0xbb
  43fcda:	add    ch,cl
  43fcdc:	popa   
  43fcdd:	adc    DWORD PTR [eax],ecx
  43fcdf:	ins    DWORD PTR es:[edi],dx
  43fce0:	xchg   ebp,eax
  43fce1:	fld    DWORD PTR [eax]
  43fce3:	jmp    0x43fce8
	...
  43fcf8:	sub    edx,edx
  43fcfa:	jge    0x43fca4
  43fcfc:	fld    DWORD PTR gs:[eax]
  43fcff:	(bad)  
  43fd00:	and    DWORD PTR [edx],ebp
  43fd02:	sbb    al,0x0
  43fd04:	mov    ebx,0x36035eee
  43fd09:	xor    BYTE PTR ds:0xdccb9c,bl
  43fd0f:	mov    edx,esp
  43fd11:	inc    esp
  43fd12:	hlt    
  43fd13:	mov    WORD PTR [eax+ebx*2],es
  43fd16:	jge    0x43fcd8
  43fd18:	mov    ah,0x60
  43fd1a:	xchg   esi,eax
  43fd1b:	add    al,0x8b
  43fd1d:	fcom   QWORD PTR [edx+0x6a]
  43fd20:	jg     0x43fd16
  43fd22:	push   eax
  43fd23:	lea    ebp,[edi-0x4f]
  43fd26:	push   esp
  43fd27:	mov    esi,DWORD PTR [esp+eax*2+0x56f48cdc]
  43fd2e:	jge    0x43fcf0
  43fd30:	xchg   esp,eax
  43fd31:	pusha  
  43fd32:	jle    0x43fd38
  43fd34:	jnp    0x43fd12
  43fd36:	jge    0x43fd84
  43fd38:	pop    edi
  43fd39:	sbb    DWORD PTR [esi-0x2f],edi
  43fd3c:	rcr    BYTE PTR [ebp+0x5d5be8b8],0xd7
  43fd43:	add    BYTE PTR [ebx],bh
  43fd45:	push   edi
  43fd46:	add    DWORD PTR [ebx],ecx
  43fd48:	imul   esp,DWORD PTR [ebx],0xffffffb8
  43fd4b:	shr    DWORD PTR [ebx+0x4be177ac],0x57
  43fd52:	add    DWORD PTR [eax],eax
  43fd54:	xor    BYTE PTR [ebp-0x62cc1548],bl
  43fd5a:	loope  0x43fd64
	...
  43fd70:	add    BYTE PTR [eax+eax*4+0x54],ch
  43fd74:	pop    ds
  43fd75:	call   0x513e4805
  43fd7a:	ror    BYTE PTR [edi],0x7f
  43fd7d:	sbb    ebp,edi
  43fd7f:	dec    DWORD PTR [ebx]
  43fd81:	inc    esp
  43fd82:	xor    esi,edx
  43fd84:	add    eax,0x7ef07e56
  43fd89:	dec    edi
  43fd8a:	or     al,BYTE PTR [ebp+eax*2+0x620000d1]
  43fd91:	sbb    bh,BYTE PTR ds:0x85b27971
  43fd97:	je     0x43fd1f
  43fd99:	ret    0xd279
  43fd9c:	fnstenv [esi-0x6b]
  43fd9f:	jnp    0x43fd8f
  43fda1:	outs   dx,BYTE PTR ds:[esi]
  43fda2:	xchg   BYTE PTR [edx+eiz*4+0x66258086],al
  43fda9:	mov    dl,0x4
  43fdab:	test   DWORD PTR [esi],ecx
  43fdad:	sahf   
  43fdae:	cmp    BYTE PTR [ebp-0x6d14dd1],al
  43fdb4:	das    
  43fdb5:	mov    dh,0x79
  43fdb7:	retf   0x8b7a
  43fdba:	xchg   edx,eax
  43fdbb:	cli    
  43fdbc:	test   DWORD PTR [eax-0x67],ecx
  43fdbf:	cli    
  43fdc0:	jge    0x43fdf0
  43fdc2:	adc    eax,0x48aed40
  43fdc7:	addr16 sub ax,0x2439
  43fdcc:	cmp    ch,BYTE PTR [ebx]
  43fdce:	mov    dh,0xe8
  43fdd0:	scas   al,BYTE PTR es:[edi]
  43fdd1:	cmp    al,0x86
  43fdd3:	stc    
	...
  43fde8:	fdivrp st(0),st
  43fdea:	cmc    
  43fdeb:	or     DWORD PTR [eax-0x4c],0x4
  43fdef:	add    BYTE PTR [ecx+esi*8-0x477cdbb8],bh
  43fdf6:	jns    0x43fde2
  43fdf8:	enter  0x1e8f,0xbf
  43fdfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fdfd:	xchg   esp,eax
  43fdfe:	fld    QWORD PTR [edi]
  43fe00:	in     al,0xb0
  43fe02:	test   BYTE PTR [eax],al
  43fe04:	(bad)  
  43fe05:	iret   
  43fe06:	out    dx,eax
  43fe07:	jg     0x43fe77
  43fe09:	jo     0x43fe0f
  43fe0b:	and    DWORD PTR [edx],0x2c
  43fe0e:	dec    ecx
  43fe0f:	and    al,0x3a
  43fe11:	mov    bh,0x6f
  43fe13:	ret    
  43fe14:	test   BYTE PTR [ecx+0x40],ch
  43fe17:	and    al,0x43
  43fe19:	sub    eax,0xd9d961f8
  43fe1e:	and    eax,0x213f36e8
  43fe23:	dec    eax
  43fe24:	xchg   dl,bh
  43fe26:	push   ebp
  43fe27:	pop    es
  43fe28:	sbb    cl,bl
  43fe2a:	imul   eax,DWORD PTR [ebx],0xe8165362
  43fe30:	gs push ebx
  43fe32:	cs call 0x79e8518a
  43fe38:	mov    al,ds:0x8602c959
  43fe3d:	fsub   st,st(3)
  43fe3f:	mov    ebx,0xba5dc52e
  43fe44:	push   ss
  43fe45:	aad    0x3
  43fe47:	add    bh,BYTE PTR [edx]
  43fe49:	pop    ebp
  43fe4a:	jne    0x43fe48
	...
  43fe60:	and    BYTE PTR ds:0xd37f1fc6,bl
  43fe66:	adc    ecx,DWORD PTR [eax]
  43fe68:	sbb    bl,BYTE PTR [ebp+0x7d]
  43fe6b:	cld    
  43fe6c:	and    BYTE PTR ds:0xa96713be,bl
  43fe72:	je     0x43fe2d
  43fe74:	fcomp  QWORD PTR [edi-0x2995d96]
  43fe7a:	in     eax,0xc9
  43fe7c:	sbb    eax,0x2587f22d
  43fe81:	sub    eax,0x15a19e7
  43fe86:	aam    0x1
  43fe88:	inc    edi
  43fe89:	fadd   st(3),st
  43fe8b:	repz lea esi,[ebx]
  43fe8e:	fiadd  WORD PTR [edi+0x46ef0039]
  43fe94:	in     eax,0xd1
  43fe96:	sbb    DWORD PTR [ecx+0x24],edi
  43fe99:	pop    ecx
  43fe9a:	or     DWORD PTR [ecx],eax
  43fe9c:	loop   0x43fe5c
  43fe9e:	in     al,dx
  43fe9f:	leave  
  43fea0:	sbb    ebp,DWORD PTR ds:0x5da219d6
  43fea6:	xor    DWORD PTR [ebx],ebp
  43fea8:	and    ebx,DWORD PTR ds:0xc619cd01
  43feae:	add    cl,ch
  43feb0:	popa   
  43feb1:	sar    BYTE PTR ds:0xbfe022d,1
  43feb7:	f2xm1  
  43feb9:	or     WORD PTR [ebp-0x29],bx
  43febd:	cmp    edi,DWORD PTR [ecx+0x68]
  43fec0:	or     cl,bl
  43fec2:	or     cl,ch
	...
  43fed8:	popa   
  43fed9:	add    ch,bh
  43fedb:	stos   DWORD PTR es:[edi],eax
  43fedc:	mov    dh,0x29
  43fede:	or     al,BYTE PTR [ebx+0x36]
  43fee1:	es (bad) 
  43fee3:	jmp    0x453ca491
  43fee8:	inc    esp
  43fee9:	fiadd  DWORD PTR [ebp+0x50f98225]
  43feef:	fs and bh,ch
  43fef2:	cmp    BYTE PTR [ecx],bh
  43fef4:	out    dx,al
  43fef5:	aaa    
  43fef6:	repnz xchg ecx,ebx
  43fef9:	iret   
  43fefa:	scas   eax,DWORD PTR es:[edi]
  43fefb:	and    eax,0x624dc482
  43ff00:	sbb    bh,ch
  43ff02:	test   al,0xeb
  43ff04:	popa   
  43ff05:	fst    DWORD PTR [eax-0xa]
  43ff08:	adc    BYTE PTR ds:0x10dd101d,bl
  43ff0e:	add    DWORD PTR [ecx-0x4b07782c],edi
  43ff14:	cmp    edx,edx
  43ff16:	scas   eax,DWORD PTR es:[edi]
  43ff17:	lods   eax,DWORD PTR ds:[esi]
  43ff18:	and    eax,0x1da589f4
  43ff1d:	std    
  43ff1e:	mov    ch,BYTE PTR [ebp-0x5a770aeb]
  43ff24:	or     eax,0xdb30e9ca
  43ff29:	mov    ds:0x2aa191f8,al
  43ff2e:	sbb    al,0xe9
  43ff30:	ja     0x43ff0c
  43ff32:	test   DWORD PTR [ebp+0x2],esi
  43ff35:	dec    ecx
  43ff36:	add    DWORD PTR [eax],eax
  43ff38:	sti    
  43ff39:	fdivr  DWORD PTR [ebp-0x31]
	...
  43ff50:	push   ebx
  43ff51:	scas   eax,DWORD PTR es:[edi]
  43ff52:	jge    0x43ff53
  43ff54:	in     al,dx
  43ff55:	and    al,0xc1
  43ff57:	ja     0xfc43f6be
  43ff5d:	pop    eax
  43ff5e:	mov    ch,0x24
  43ff60:	dec    edi
  43ff61:	fadd   DWORD PTR [eax]
  43ff63:	add    bl,cl
  43ff65:	and    eax,DWORD PTR [ebp+0xd82c24]
  43ff6b:	add    ah,cl
  43ff6d:	sub    ecx,eax
  43ff6f:	sysexit 
  43ff71:	cwde   
  43ff72:	push   ecx
  43ff73:	mov    ebx,edx
  43ff75:	and    edi,DWORD PTR [eax+0x77a8a3c1]
  43ff7b:	loop   0x43ff38
  43ff7d:	fdivr  st,st(1)
  43ff7f:	add    BYTE PTR [eax-0x353e8198],dl
  43ff85:	js     0x43ff98
  43ff87:	sbb    edx,0x7b00f9d8
  43ff8d:	mov    ds:0xdd4e8bb7,eax
  43ff92:	mov    bh,0xea
  43ff94:	sbb    DWORD PTR [ebp+0x688008e1],0xfffffffa
  43ff9b:	push   ebp
  43ff9c:	addr16 inc ebp
  43ff9e:	(bad)  
  43ff9f:	std    
  43ffa0:	mov    esp,0x3440694f
  43ffa5:	mov    bl,0xf8
  43ffa7:	imul   eax,DWORD PTR [edx+0x21],0x22fb244d
  43ffae:	retf   0xbce8
  43ffb1:	es cli 
  43ffb3:	inc    DWORD PTR [eax]
	...
  43ffc5:	add    BYTE PTR [eax],al
  43ffc7:	add    bh,al
  43ffc9:	cwde   
  43ffca:	or     al,BYTE PTR [esi+ebp*8-0x2affff23]
  43ffd1:	pushf  
  43ffd2:	cmp    eax,0x7da00224
  43ffd7:	push   esp
  43ffd8:	bound  edx,QWORD PTR [esi+0x7e2361ec]
  43ffde:	fdiv   DWORD PTR [edx+ebx*2]
  43ffe1:	push   esp
  43ffe2:	mov    ebp,0xfc654644
  43ffe7:	popa   
  43ffe8:	and    esi,DWORD PTR [esi-0x28]
  43ffeb:	cmp    BYTE PTR [edx+0x32],bl
  43ffee:	add    BYTE PTR [edx+ebp*1],ah
  43fff1:	mov    dl,0xf9
  43fff3:	xchg   edx,eax
  43fff4:	es faddp st(4),st
  43fff7:	sub    al,0xab
  43fff9:	xor    al,0xaf
  43fffb:	je     0x440065
  43fffd:	aaa    
  43fffe:	inc    ecx
  43ffff:	and    al,0x66
  440001:	das    
  440002:	mov    ebp,0x34d94401
  440007:	cli    
  440008:	das    
  440009:	mov    ch,0x22
  44000b:	aaa    
  44000c:	pop    edx
  44000d:	out    dx,al
  44000e:	hlt    
  44000f:	inc    ecx
  440010:	loope  0x440083
  440012:	cld    
  440013:	xor    al,0x90
  440015:	mov    edi,0xc490358f
  44001a:	fistp  QWORD PTR ds:0x17e0eddb
  440020:	stc    
  440021:	aas    
  440022:	cld    
  440023:	mov    ch,BYTE PTR [esi]
  440025:	sahf   
  440026:	loopne 0x44000f
  440028:	or     bl,BYTE PTR [ebx-0x75]
  44002b:	stc    
	...
  440040:	out    0x71,al
  440042:	cli    
  440043:	sbb    DWORD PTR [eax-0x50],0x4
  440047:	add    cl,ch
  440049:	ins    BYTE PTR es:[edi],dx
  44004a:	fcom   DWORD PTR [edi]
  44004c:	leave  
  44004d:	add    bh,ah
  44004f:	cld    
  440050:	rcr    esp,1
  440052:	call   0x41715bbc
  440057:	and    al,0x7e
  440059:	inc    eax
  44005a:	xor    ch,al
  44005c:	je     0x44003e
  44005e:	mov    bh,cl
  440060:	cmp    eax,edx
  440062:	mov    cl,bh
  440064:	and    eax,0xd9b5dada
  440069:	sbb    DWORD PTR [edi-0x53f1ea14],ecx
  44006f:	jl     0x44008c
  440071:	mov    dl,0x2a
  440073:	jle    0x440080
  440075:	mov    ds:0x5d6bc466,eax
  44007a:	or     eax,0x94d96203
  44007f:	sbb    eax,0x769a0aec
  440084:	mov    ?,ebp
  440086:	inc    ecx
  440087:	jge    0x440034
  440089:	mov    cl,0xe7
  44008b:	jge    0x440068
  44008d:	mov    ds:0x5d5bc366,al
  440092:	test   DWORD PTR [edx],eax
  440094:	(bad)  
  440095:	fldz   
  440097:	push   eax
  440098:	es std 
  44009a:	sbb    ecx,edi
  44009c:	repz xchg ecx,eax
  44009e:	test   eax,0xc2985aa2
  4400a3:	sti    
	...
  4400b8:	pop    esi
  4400b9:	xchg   ecx,eax
  4400ba:	jno    0x4400d0
  4400bc:	cmp    esi,DWORD PTR cs:[ecx+0x3c]
  4400c0:	sub    bh,BYTE PTR [ebx]
  4400c2:	gs mov edx,0x50d72316
  4400c8:	jne    0x440062
  4400ca:	mov    BYTE PTR ds:0x3c658be7,al
  4400d0:	push   ds
  4400d1:	mov    cl,0x87
  4400d3:	cdq    
  4400d4:	push   0x5bc35ea2
  4400d9:	pop    ebp
  4400da:	jno    0x4400de
  4400dc:	(bad)  
  4400dd:	fnstenv [edx+0x34]
  4400e0:	sahf   
  4400e1:	or     al,0xb8
  4400e3:	jl     0x440100
  4400e5:	mov    cl,0x1f
  4400e7:	jp     0x440134
  4400e9:	mov    ds:0x5d6bc366,al
  4400ee:	lods   eax,DWORD PTR ds:[esi]
  4400ef:	add    ah,BYTE PTR [edx-0x27]
  4400f2:	add    dl,bh
  4400f4:	and    DWORD PTR [ecx+ebp*8-0x39],ebx
  4400f8:	push   ss
  4400f9:	in     eax,0x48
  4400fb:	call   0x691a:0xa57c5c59
  440102:	out    dx,al
  440103:	or     DWORD PTR [ebx*2-0x6479a9f3],0xffffffc2
  44010b:	or     cl,dh
  44010d:	pop    esp
  44010e:	ret    
  44010f:	les    esp,FWORD PTR [ecx-0x60]
  440112:	add    ecx,ebp
  440114:	out    dx,al
  440115:	cdq    
  440116:	or     BYTE PTR [edi],dh
  440118:	and    eax,0xa80468
	...
  44012d:	add    BYTE PTR [eax],al
  44012f:	add    BYTE PTR [edi],al
  440131:	rol    ecx,1
  440133:	rcl    esi,cl
  440135:	fmul   st(0),st
  440137:	push   0xe9f7d900
  44013c:	popa   
  44013d:	fmul   st(2),st
  44013f:	jo     0x4400fb
  440141:	push   0x122428c
  440146:	cmp    ch,ch
  440148:	sbb    al,0x26
  44014a:	add    al,0x60
  44014c:	and    DWORD PTR ds:0x3ca90f3e,edx
  440152:	dec    ecx
  440153:	sbb    ebx,DWORD PTR ds:0x49cd755c
  440159:	pop    esp
  44015a:	push   esp
  44015b:	sbb    eax,0xe9f7d91b
  440160:	popa   
  440161:	pop    esp
  440162:	retf   
  440163:	test   al,0xbf
  440165:	enter  0xab8b,0x81
  440169:	xchg   esi,eax
  44016a:	or     al,0xa1
  44016c:	jmp    0x5e95c3d3
  440171:	pusha  
  440172:	loop   0x440165
  440174:	inc    eax
  440175:	pushf  
  440176:	or     al,0x21
  440178:	push   ebp
  440179:	imul   eax,DWORD PTR [esi+ebx*4+0x48],0xffffff99
  44017e:	mov    al,BYTE PTR [eax]
  440180:	lock in al,dx
  440182:	jne    0x44017e
  440184:	ds retf 0x8b2d
  440188:	out    0xb9,eax
  44018a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44018b:	add    bh,BYTE PTR [ebx]
  44018d:	fnstsw WORD PTR [ebp+0x54]
  440190:	das    
  440191:	mov    ch,0x25
  440193:	leave  
	...
  4401a8:	add    ah,ah
  4401aa:	adc    al,0xf
  4401ac:	jle    0x4401ac
  4401ae:	out    dx,al
  4401af:	call   DWORD PTR [ebp+edi*4-0x4]
  4401b3:	add    ecx,DWORD PTR [ebx]
  4401b5:	fstp   QWORD PTR [esi+0x8]
  4401b8:	ret    
  4401b9:	in     al,dx
  4401ba:	stc    
  4401bb:	xor    eax,0x3cc673
  4401c0:	hlt    
  4401c1:	test   eax,0xd58b1264
  4401c6:	jg     0x44020b
  4401c8:	xlat   BYTE PTR ds:[ebx]
  4401c9:	pop    ecx
  4401ca:	ror    DWORD PTR [edi],0x3f
  4401cd:	pushf  
  4401ce:	add    DWORD PTR [eax],eax
  4401d0:	mov    ebx,0xa4fb8e3d
  4401d5:	push   edi
  4401d6:	jle    0x440223
  4401d8:	xchg   edi,eax
  4401d9:	inc    esp
  4401da:	mov    ebp,0x7e57f5ee
  4401df:	push   esp
  4401e0:	pop    edi
  4401e1:	lods   eax,DWORD PTR ds:[esi]
  4401e2:	and    eax,0x14e312c9
  4401e7:	jmp    0x3e5548
  4401ec:	arpl   WORD PTR ds:0xc27b1b72,dx
  4401f2:	cmc    
  4401f3:	pop    ecx
  4401f4:	lock jmpw 0xf472
  4401f9:	push   esi
  4401fa:	cli    
  4401fb:	test   BYTE PTR [ebx+0x7b8e84a7],bh
  440201:	fadd   QWORD PTR [eax]
  440203:	push   0xdcf0b
  440208:	xor    DWORD PTR [edx+ebx*2+0x56],ebp
	...
  44021f:	add    BYTE PTR [edx+0x35],ah
  440222:	sub    BYTE PTR [esi+edi*4],ah
  440225:	cmp    ebp,DWORD PTR [edi+0x7f2a26e8]
  44022b:	stc    
  44022c:	fdivrp st(1),st
  44022e:	pop    es
  44022f:	jb     0x440209
  440231:	ins    DWORD PTR es:[edi],dx
  440232:	fcomp  DWORD PTR [ebx+0x66]
  440235:	rcl    BYTE PTR [eax],cl
  440237:	or     BYTE PTR [esi-0x5e],bl
  44023a:	or     BYTE PTR [esi+edx*2],al
  44023d:	stos   BYTE PTR es:[edi],al
  44023e:	adc    DWORD PTR [edx-0x1e],esp
  440241:	inc    ebp
  440242:	fcomp  DWORD PTR [eax+0x62]
  440245:	inc    esi
  440246:	pop    ds
  440247:	bound  esp,QWORD PTR [ebx]
  440249:	outs   dx,BYTE PTR ds:[esi]
  44024a:	fcomp  DWORD PTR [edi+0x6a]
  44024d:	dec    eax
  44024e:	jns    0x440294
  440250:	inc    esi
  440251:	push   edx
  440252:	push   ss
  440253:	mov    edi,0x816969e
  440258:	xor    ah,BYTE PTR ds:0x713c2f42
  44025e:	inc    ecx
  44025f:	and    al,0x3e
  440261:	mov    edx,0x187e7c84
  440266:	std    
  440267:	dec    edi
  440268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440269:	in     eax,dx
  44026a:	loopne 0x4402d0
  44026c:	arpl   WORD PTR [edi+0x1c864467],bp
  440272:	xchg   ebp,eax
  440273:	jne    0x440229
  440275:	outs   dx,DWORD PTR ds:[esi]
  440276:	jle    0x4401fe
  440278:	mov    fs,WORD PTR es:[eax]
  44027b:	ror    BYTE PTR [edx+0x233d7cb2],0x59
  440282:	std    
  440283:	hlt    
	...
  440298:	test   DWORD PTR [esi-0x7e],ecx
  44029b:	mov    esp,0x2e246
  4402a0:	bound  esi,QWORD PTR [edx-0x2292edf8]
  4402a6:	loopne 0x440257
  4402a8:	pusha  
  4402a9:	mov    dl,0x4
  4402ab:	stc    
  4402ac:	ja     0x440287
  4402ae:	add    ecx,esi
  4402b0:	xchg   ebp,eax
  4402b1:	fst    DWORD PTR [edx-0x3]
  4402b4:	jle    0x440246
  4402b6:	inc    edx
  4402b7:	repz cmp esp,DWORD PTR [eax-0x4dd886b9]
  4402be:	(bad)  
  4402bf:	lea    edi,[ebx]
  4402c1:	lahf   
  4402c2:	jae    0x4402fc
  4402c4:	xchg   BYTE PTR [ebp-0x5fc7fcbf],bh
  4402ca:	daa    
  4402cb:	cdq    
  4402cc:	jbe    0x440320
  4402ce:	xor    ebx,DWORD PTR [ecx+esi*4+0x78517a7]
  4402d5:	shl    DWORD PTR [edx+0x30],cl
  4402d8:	ds icebp 
  4402da:	bound  esi,QWORD PTR [ebp-0x7b07e0f6]
  4402e0:	sti    
  4402e1:	(bad)  
  4402e2:	xchg   edi,eax
  4402e3:	es xchg edi,eax
  4402e5:	pop    eax
  4402e6:	es je  0x4402cd
  4402e9:	sahf   
  4402ea:	jmp    0xcc79:0x36d976c1
  4402f1:	push   esp
  4402f2:	mov    cl,0xf
  4402f4:	xor    DWORD PTR [ebx-0x17],edx
  4402f7:	jg     0x44029b
  4402f9:	and    eax,0x3117
	...
  44030e:	add    BYTE PTR [eax],al
  440310:	pop    DWORD PTR [edx-0x223886e8]
  440316:	add    al,0xf
  440318:	popa   
  440319:	xor    ebp,esp
  44031b:	and    eax,0xd8e5c1bf
  440320:	adc    ah,al
  440322:	xchg   edx,eax
  440323:	icebp  
  440324:	adc    eax,0x7104e1a3
  440329:	push   ebx
  44032a:	stos   DWORD PTR es:[edi],eax
  44032b:	push   eax
  44032c:	pop    esp
  44032d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44032e:	add    DWORD PTR [ebx-0x3e14167c],0xffffffdc
  440335:	sub    DWORD PTR [ecx],0x1595d7a
  44033b:	jae    0x4402ce
  44033d:	and    ebx,edi
  44033f:	adc    esp,DWORD PTR gs:0x9e0f6a04
  440346:	mov    dh,BYTE PTR [edx]
  440348:	retf   0xef9b
  44034b:	xor    BYTE PTR [esi+0x68],cl
  44034e:	aam    0xde
  440350:	scas   eax,DWORD PTR es:[edi]
  440351:	xchg   esi,eax
  440352:	sbb    eax,0x579bbaeb
  440357:	out    dx,al
  440358:	ins    BYTE PTR es:[edi],dx
  440359:	mov    ds,WORD PTR [ecx+eiz*2+0x36]
  44035d:	add    esp,eax
  44035f:	ret    
  440360:	sbb    DWORD PTR [esi],eax
  440362:	mov    edi,0xc40061ee
  440367:	mov    bh,0x8a
  440369:	scas   al,BYTE PTR es:[edi]
  44036a:	mov    WORD PTR [edi+0x40ff9911],fs
  440370:	jb     0x44038b
  440372:	add    DWORD PTR [ecx],edx
	...
  440388:	pop    eax
  440389:	mov    dl,0xf7
  44038b:	(bad)  
  44038c:	jne    0x440321
  44038e:	jmp    0xf8e6cbb2
  440393:	neg    DWORD PTR [ebp+esi*8-0x273217f8]
  44039a:	mov    ebp,DWORD PTR [edi-0x2819fac2]
  4403a0:	loope  0x4403f5
  4403a2:	mov    edi,0xd5242f
  4403a7:	push   0x32
  4403a9:	leave  
  4403aa:	push   ebx
  4403ab:	adc    al,0x89
  4403ad:	push   esp
  4403ae:	cli    
  4403af:	cli    
  4403b0:	xor    ch,bh
  4403b2:	fcomi  st,st(0)
  4403b4:	nop
  4403b5:	rol    DWORD PTR [edi],1
  4403b7:	outs   dx,DWORD PTR ds:[esi]
  4403b8:	sti    
  4403b9:	fadd   DWORD PTR [eax]
  4403bb:	jmp    0xbb789d14
  4403c0:	xlat   BYTE PTR ds:[ebx]
  4403c1:	adc    al,0x1d
  4403c3:	frstor [edi+0x74008c07]
  4403c9:	shl    ebp,1
  4403cb:	out    dx,eax
  4403cc:	mov    ds:0x7073bf,al
  4403d1:	xchg   ebx,eax
  4403d2:	add    al,0x83
  4403d4:	addr16 icebp 
  4403d6:	or     al,0x0
  4403d8:	enter  0x24b1,0x18
  4403dc:	cmp    edx,DWORD PTR [ebp+ebx*2+0x24]
  4403e0:	dec    edi
  4403e1:	fldenv ds:0x50ddcbc9
  4403e7:	seta   BYTE PTR [esi]
  4403ea:	jbe    0x4403b5
	...
  440400:	cmp    DWORD PTR [esi-0x371a00ba],eax
  440406:	mov    ecx,DWORD PTR [edi+eiz*2-0xb]
  44040a:	stc    
  44040b:	jbe    0x44041c
  44040d:	push   esp
  44040e:	in     eax,0xc
  440410:	ins    BYTE PTR es:[edi],dx
  440411:	lahf   
  440412:	add    bh,bh
  440414:	in     al,0xc8
  440416:	call   0xfa9e904d
  44041b:	mov    ch,al
  44041d:	hlt    
  44041e:	jl     0x4403e0
  440420:	ja     0x440418
  440422:	stc    
  440423:	je     0x44043c
  440425:	cmc    
  440426:	mov    ecx,DWORD PTR [edi+eiz*4-0x40]
  44042a:	push   0xf888cb00
  44042f:	imul   edi,DWORD PTR [ebx-0x5162c0d0],0xf0b60a57
  440439:	push   esp
  44043a:	shr    DWORD PTR [edx-0x36],0x50
  44043e:	inc    ebx
  44043f:	and    al,0x83
  440441:	enter  0xd843,0x3e
  440445:	mov    WORD PTR [esp+edx*1],fs
  440448:	mov    ds:0xbcfd8d90,eax
  44044d:	dec    ebx
  44044e:	cmp    eax,0xc6e38b24
  440453:	inc    edx
  440454:	(bad)  
  440455:	in     eax,dx
  440456:	jg     0x440418
  440458:	dec    edx
  440459:	cmp    eax,eax
  44045b:	and    edx,DWORD PTR [edx-0x69]
  44045e:	repz or ebx,DWORD PTR [ebp+0x30]
  440462:	cli    
  440463:	clc    
	...
  440478:	gs and esp,edx
  44047b:	pop    eax
  44047c:	mov    edi,0xe1553f38
  440481:	in     eax,dx
  440482:	adc    edi,DWORD PTR [esi+0x52cfb266]
  440488:	lods   al,BYTE PTR ds:[esi]
  440489:	pop    ebx
  44048a:	xor    DWORD PTR [esi+eax*4-0x5a],0xffffff87
  44048f:	imul   cl
  440491:	or     BYTE PTR [ebx-0x3b7f59ed],al
  440497:	(bad)  
  440498:	fmul   st,st(1)
  44049a:	nop
  44049b:	xor    al,0x59
  44049d:	std    
  44049e:	das    
  44049f:	jae    0x440501
  4404a1:	mov    dl,0x4
  4404a3:	add    bl,ah
  4404a5:	out    dx,al
  4404a6:	add    edi,esi
  4404a8:	add    eax,0x62c27db2
  4404ad:	mov    dh,0x4
  4404af:	add    bl,ah
  4404b1:	(bad)  
  4404b2:	add    eax,DWORD PTR [eax]
  4404b4:	ret    0xfbb1
  4404b7:	cmp    bl,cl
  4404b9:	mov    ebx,0xecacb86
  4404be:	addr16 cli 
  4404c0:	aad    0x2d
  4404c2:	cmp    eax,0xf97b9274
  4404c7:	and    ebp,DWORD PTR [edx+0x37]
  4404ca:	sar    bh,0xbc
  4404cd:	add    eax,0xade71829
  4404d2:	cld    
  4404d3:	dec    esp
  4404d4:	adc    bl,BYTE PTR [ebx+0x10]
  4404d7:	adc    BYTE PTR [ecx-0xe],0xfc
  4404db:	add    BYTE PTR [eax],0x0
	...
  4404ee:	add    BYTE PTR [eax],al
  4404f0:	mov    ds:0x298b3fe9,al
  4404f5:	fstp   DWORD PTR [esi+0x581dcd3d]
  4404fb:	add    eax,0x4254f8a
  440500:	dec    edi
  440501:	xchg   edx,eax
  440502:	add    BYTE PTR [ebx+0x49732166],cl
  440508:	xchg   edi,edx
  44050a:	push   0x4c
  44050c:	imul   edi,ebx,0xf
  44050f:	fbstp  TBYTE PTR [esi-0x4ffc1d69]
  440515:	add    bl,BYTE PTR [edi-0x8]
  440518:	or     ebp,0xc54b7b72
  44051e:	imul   edx,DWORD PTR [esi],0x7462d9a2
  440524:	mov    ch,0x93
  440526:	jmp    0x6282:0x68d96205
  44052d:	(bad)  [ecx+0x54e79304]
  440533:	ficom  DWORD PTR [eax+edx*2]
  440536:	das    
  440537:	ins    BYTE PTR es:[edi],dx
  440538:	dec    ecx
  440539:	scas   al,BYTE PTR es:[edi]
  44053a:	sbb    BYTE PTR [ecx+0x279699de],al
  440540:	sti    
  440541:	and    eax,0x25fb13be
  440546:	(bad)  
  440547:	adc    edx,DWORD PTR [eax+0x5180af9a]
  44054d:	sbb    eax,0x55ddc3db
  440552:	sub    bh,ah
	...
  440568:	stos   BYTE PTR es:[edi],al
  440569:	dec    esp
  44056a:	xor    BYTE PTR [ecx+0x4c559897],al
  440570:	(bad)  
  440572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440573:	pop    es
  440574:	push   0xffffffd9
  440576:	ret    0x3704
  440579:	xchg   ecx,eax
  44057a:	mov    edi,0xf2970be0
  44057f:	add    edx,DWORD PTR [edi]
  440581:	add    eax,DWORD PTR [ecx]
  440583:	arpl   WORD PTR [eax],bx
  440585:	xor    esi,DWORD PTR [ecx]
  440587:	adc    ah,ah
  440589:	add    cl,0x92
  44058c:	gs pop ecx
  44058e:	loopne 0x44057e
  440590:	ja     0x44057b
  440592:	push   esi
  440593:	bound  esp,QWORD PTR [eax]
  440595:	pop    ecx
  440596:	cld    
  440597:	loopne 0x4405eb
  440599:	adc    BYTE PTR [edi-0x7a6d915],bh
  44059f:	lock push edx
  4405a1:	adc    bh,al
  4405a3:	jmp    0x440557
  4405a5:	dec    DWORD PTR [eax+0x212e9eb]
  4405ab:	ret    0x7a6
  4405ae:	mov    ebp,DWORD PTR [eax]
  4405b0:	mov    eax,ds:0xfbe5fdb1
  4405b5:	test   al,0x50
  4405b7:	ret    
  4405b8:	push   0x52488100
  4405bd:	aaa    
  4405be:	cmp    al,0x3f
  4405c0:	inc    esi
  4405c1:	cdq    
  4405c2:	test   BYTE PTR [ecx+0x6a],cl
  4405c5:	sbb    al,0xc1
  4405c7:	stc    
  4405c8:	or     ebx,DWORD PTR [ebp+0xf6be]
	...
  4405de:	add    BYTE PTR [eax],al
  4405e0:	retf   
  4405e1:	xchg   ecx,eax
  4405e2:	pop    edi
  4405e3:	jo     0x440644
  4405e5:	aaa    
  4405e6:	cmp    al,0x10
  4405e8:	add    al,ch
  4405ea:	shr    BYTE PTR [edx-0x7f],0xd8
  4405ee:	sub    DWORD PTR [ecx],0x31
  4405f1:	aaa    
  4405f2:	add    al,0x28
  4405f4:	sti    
  4405f5:	push   edx
  4405f6:	inc    ebx
  4405f7:	jmp    0x4405bc
  4405f9:	pop    esp
  4405fa:	mov    WORD PTR [ebp+0x3e4ed57d],fs
  440600:	fldcw  WORD PTR [edx-0x5f1e1f74]
  440606:	clc    
  440607:	pop    esp
  440608:	gs pop es
  44060a:	clc    
  44060b:	hlt    
  44060c:	popf   
  44060d:	retf   
  44060e:	inc    eax
  44060f:	add    BYTE PTR [ebx+0x4d50c0d6],bh
  440615:	and    al,0x7e
  440618:	mov    al,ds:0xc233fa1a
  44061d:	mov    dl,0x7f
  44061f:	or     al,0x83
  440621:	jp     0x44067d
  440623:	ret    0xd57f
  440626:	push   edx
  440627:	mov    ebx,edx
  440629:	dec    ebp
  44062a:	mov    bh,0x85
  44062c:	int    0x9f
  44062e:	add    al,0x33
  440630:	mov    ebx,0xe383b57a
  440635:	sbb    DWORD PTR [edi+eax*1+0x7d],esi
  440639:	sbb    BYTE PTR [esp+eax*2],dl
  44063c:	cmp    DWORD PTR [ebp+0x19d656f8],ebx
  440642:	add    DWORD PTR [ebp+0x0],ecx
	...
  440658:	hlt    
  440659:	fiadd  DWORD PTR [ebx+0x25e11ec9]
  44065f:	shl    BYTE PTR [eax-0x6e1e1712],0x17
  440666:	cli    
  440667:	test   DWORD PTR [ebx-0x6f],edi
  44066a:	add    BYTE PTR [edi-0x3],dl
  44066d:	lods   al,BYTE PTR ds:[esi]
  44066e:	loopne 0x4406aa
  440670:	mov    al,ds:0x255ffa17
  440675:	sbb    al,0x53
  440677:	push   edi
  440678:	nop
  440679:	push   ss
  44067a:	jle    0x44066e
  44067c:	mov    ds,WORD PTR [eax]
  44067e:	je     0x440684
  440680:	sbb    BYTE PTR ds:0x177826de,bl
  440686:	cli    
  440687:	jne    0x44067b
  440689:	scas   eax,DWORD PTR es:[edi]
  44068a:	stc    
  44068b:	adc    eax,0x40eb4b
  440690:	inc    eax
  440691:	or     eax,0x61ba4e8c
  440696:	shl    BYTE PTR [esp+ebx*4+0x4],0x9f
  44069b:	jmp    0x2ea2:0x8377b062
  4406a2:	add    eax,0x64f21552
  4406a7:	std    
  4406a8:	mov    eax,0x3c597758
  4406ad:	inc    ebx
  4406ae:	rcl    DWORD PTR [edx+0x2c],cl
  4406b1:	out    dx,eax
  4406b2:	mov    esi,edi
  4406b4:	fstp   DWORD PTR [ecx+ecx*4-0x743cf107]
  4406bb:	je     0x4406bd
	...
  4406cd:	add    BYTE PTR [eax],al
  4406cf:	add    BYTE PTR [esi-0x6a],al
  4406d2:	mov    ebp,DWORD PTR [ebx]
  4406d4:	push   ds
  4406d5:	xchg   esp,eax
  4406d6:	(bad)  
  4406d7:	jmp    eax
  4406d9:	pusha  
  4406da:	ja     0x44074f
  4406dc:	pop    edi
  4406dd:	repz ja 0x4406b3
  4406e0:	jmp    0x55757df6
  4406e5:	ins    DWORD PTR es:[edi],dx
  4406e6:	mov    ebp,eax
  4406e8:	fisttp WORD PTR [ebp+0x456e8b26]
  4406ee:	add    al,BYTE PTR [eax]
  4406f0:	bound  eax,QWORD PTR [edx-0x2cb53675]
  4406f6:	fs cli 
  4406f8:	sub    eax,0x4e744406
  4406fd:	or     edi,edi
  4406ff:	mov    ch,BYTE PTR [esi-0x68]
  440702:	int    0x4c
  440704:	out    0x7d,eax
  440706:	in     al,dx
  440707:	dec    edi
  440708:	cli    
  440709:	xor    al,0x6a
  44070b:	cli    
  44070c:	add    eax,0x60e4fd32
  440711:	mov    ah,0x44
  440713:	pop    ecx
  440714:	xchg   esp,eax
  440715:	inc    ebp
  440716:	fstp   TBYTE PTR [ebp+0x4ecd8266]
  44071c:	mov    WORD PTR [ebx],cs
  44071e:	ins    DWORD PTR es:[edi],dx
  44071f:	push   edx
  440720:	fnsave [eax+eax*8-0x747dddf3]
  440727:	shl    bh,1
  440729:	fdivr  DWORD PTR [ebx-0x159c27f3]
  44072f:	add    esp,DWORD PTR [edx+0x2c]
  440732:	xor    eax,0xd5
	...
  440747:	add    BYTE PTR [edi],bh
  440749:	mov    ecx,0x2ab3132
  44074e:	icebp  
  44074f:	mov    BYTE PTR [ebx+0x41c89f35],bl
  440755:	jmp    0xd9a60b36
  44075a:	sahf   
  44075b:	enter  0xed41,0x9e
  44075f:	add    al,0x62
  440761:	fstp   DWORD PTR [edx+edx*2-0x8]
  440765:	mov    edx,0x275eb4de
  44076a:	add    BYTE PTR [ecx],bh
  44076c:	scas   eax,DWORD PTR es:[edi]
  44076d:	or     al,0xdb
  44076f:	in     eax,0x2e
  440771:	sahf   
  440772:	cld    
  440773:	add    al,0xc0
  440775:	shl    BYTE PTR ds:0xdf0f7228,cl
  44077b:	in     eax,0x96
  44077d:	sbb    eax,0xdfd11806
  440782:	sahf   
  440783:	ret    0xa376
  440786:	into   
  440787:	pop    ebp
  440788:	jg     0x440738
  44078a:	push   ebp
  44078b:	adc    BYTE PTR [eax-0x1e833b9c],ch
  440791:	xchg   esi,eax
  440792:	ret    0x6b23
  440795:	dec    esi
  440796:	out    0xfa,al
  440798:	adc    edx,0x2a
  44079b:	clc    
  44079c:	pop    esi
  44079d:	jmp    edx
  44079f:	inc    esi
  4407a0:	je     0x440780
  4407a2:	jg     0x4407dc
  4407a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4407a5:	mov    ebp,0xff62f5f9
  4407aa:	rol    bh,cl
	...
  4407c0:	inc    ecx
  4407c1:	in     eax,dx
  4407c2:	je     0x4407cb
  4407c4:	pushf  
  4407c5:	and    DWORD PTR es:[ebx+0x3b],0x9a920134
  4407cd:	mov    ds:0xa7e4de6f,eax
  4407d2:	ja     0x4407c6
  4407d4:	aam    0xdd
  4407d6:	adc    bh,BYTE PTR [ecx]
  4407d8:	xchg   ecx,eax
  4407d9:	sub    cl,ch
  4407db:	in     al,0x4b
  4407dd:	xchg   ebx,eax
  4407de:	clc    
  4407df:	sbb    ah,BYTE PTR [esi]
  4407e1:	sti    
  4407e2:	mov    ebp,ebp
  4407e4:	(bad)  
  4407e5:	xor    BYTE PTR [edx+0x20],bl
  4407e8:	and    ebp,DWORD PTR [ebx]
  4407ea:	mov    WORD PTR [eax+0x690e91af],?
  4407f0:	jae    0x44080b
  4407f2:	add    DWORD PTR [edx+0x31],esi
  4407f5:	pop    edx
  4407f6:	rcr    DWORD PTR [edi],cl
  4407f8:	test   BYTE PTR ds:0xc3f6da50,ah
  4407fe:	leave  
  4407ff:	push   edx
  440800:	out    dx,al
  440801:	fadd   DWORD PTR [eax]
  440803:	jmp    0xddbbafe4
  440808:	jmp    0x4407e6
  44080a:	xor    DWORD PTR [ebp-0x52f7f27f],esi
  440810:	pop    eax
  440811:	adc    eax,0x135524fd
  440816:	add    dh,ch
  440818:	call   FWORD PTR [eax-0x27d3d5c4]
  44081e:	aas    
  44081f:	test   al,0x6a
  440821:	lahf   
  440822:	jne    0x440871
	...
  440838:	jp     0x4407e2
  44083a:	add    al,0x3f
  44083c:	in     al,dx
  44083d:	push   ds
  44083e:	clc    
  44083f:	ins    BYTE PTR es:[edi],dx
  440840:	test   al,0x11
  440842:	sbb    esp,DWORD PTR [ebx+0x65]
  440845:	into   
  440846:	xor    al,0xc9
  440848:	or     eax,0xfdf034e1
  44084d:	fnstenv [esp+eiz*8]
  440850:	neg    eax
  440852:	pop    es
  440853:	dec    edi
  440854:	mov    eax,ds:0x6600c3cc
  440859:	fidivr WORD PTR [esi]
  44085b:	dec    ecx
  44085c:	loop   0x440859
  44085e:	sub    eax,0x83e655fe
  440863:	sar    BYTE PTR ds:0x855746e2,cl
  440869:	add    eax,0x119de986
  44086e:	pop    edx
  44086f:	mov    bh,0xcb
  440872:	add    BYTE PTR [ebx+0x7d],bl
  440875:	push   ds
  440876:	inc    esi
  440877:	push   esi
  440878:	inc    esp
  440879:	xchg   DWORD PTR [ebx],eax
  44087b:	mov    ebx,edx
  44087d:	into   
  44087e:	int    0x5f
  440880:	jl     0x4408cc
  440882:	or     ecx,DWORD PTR [ebp-0x7c9cd2c6]
  440888:	ret    
  440889:	jecxz  0x4408fc
  44088b:	add    eax,0xebc94a8c
  440890:	ins    DWORD PTR es:[edi],dx
  440891:	pusha  
  440892:	cmp    BYTE PTR [edi+0x77c1d665],bh
  440898:	jae    0x4408f6
  44089a:	mov    eax,0xc9
	...
  4408af:	add    ah,bl
  4408b1:	fld    QWORD PTR [eax]
  4408b3:	jmp    0x4408f2
  4408b5:	bound  edi,QWORD PTR [eax]
  4408b7:	lahf   
  4408b8:	gs aam 0xc1
  4408bb:	ja     0x44091b
  4408bd:	pop    esi
  4408be:	mov    eax,0xdd9ca9
  4408c3:	test   BYTE PTR [eax-0x77],dh
  4408c6:	add    DWORD PTR [eax],ecx
  4408c8:	inc    ecx
  4408c9:	lahf   
  4408ca:	fist   DWORD PTR es:[eax+0x7e1c0d8]
  4408d1:	popa   
  4408d2:	push   DWORD PTR [edx+0x2c35c0a]
  4408d8:	mov    al,ds:0x52856353
  4408dd:	mov    al,BYTE PTR [eax]
  4408df:	test   BYTE PTR [eax+0x62b0048a],ah
  4408e5:	and    DWORD PTR [edi-0x2],0x59dbc233
  4408ec:	mov    DWORD PTR [edi+0x7374ccd],edi
  4408f2:	jmp    0xd3b87b1a
  4408f7:	test   bl,cl
  4408f9:	dec    edi
  4408fa:	jb     0x440887
  4408fc:	xchg   bx,ax
  4408fe:	test   DWORD PTR [ebx+0x62],esi
  440901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440902:	rol    BYTE PTR [esi-0x7af319ca],1
  440908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440909:	out    0x77,eax
  44090b:	ins    DWORD PTR es:[edi],dx
  44090c:	pop    eax
  44090d:	add    bh,BYTE PTR [esp+ebp*1]
  440910:	push   ss
  440911:	jge    0x4408d7
  440913:	xor    al,0x0
	...
  440925:	add    BYTE PTR [eax],al
  440927:	add    BYTE PTR [ecx-0x657a8d30],ah
  44092d:	xlat   BYTE PTR ds:[ebx]
  44092e:	dec    ebx
  44092f:	xchg   DWORD PTR [esi],edx
  440931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  440932:	sbb    al,0x8b
  440934:	push   esi
  440935:	sub    eax,0x8275fff8
  44093a:	xchg   ebx,ecx
  44093c:	fucomip st,st(2)
  44093e:	std    
  44093f:	out    0x72,eax
  440941:	arpl   WORD PTR [edx-0x7],di
  440944:	out    0x41,al
  440946:	call   0x2139f281
  44094b:	sbb    bh,ah
  44094d:	outs   dx,DWORD PTR ds:[esi]
  44094e:	call   0x1891e25f
  440953:	adc    BYTE PTR [edx+0x58],cl
  440956:	jns    0x440951
  440958:	xor    eax,0xdaffc8f7
  44095d:	jge    0x44090c
  44095f:	and    DWORD PTR [edx],0x56
  440962:	sbb    al,BYTE PTR [ebp+0xc8782a7]
  440968:	rol    BYTE PTR [eax*2-0x4ee5988c],cl
  44096f:	cli    
  440970:	add    eax,0x36c11ed9
  440975:	nop
  440976:	pushf  
  440977:	mov    ds:0xd9af9adf,eax
  44097c:	mov    BYTE PTR [eax],dh
  44097e:	mov    cl,0x45
  440980:	push   esi
  440981:	fnstenv [edx+0x51]
  440984:	out    0xa5,eax
  440986:	adc    bh,ah
  440988:	mov    ebp,0x85ef92
	...
  44099d:	add    BYTE PTR [eax],al
  44099f:	add    BYTE PTR [edx+0x156d0393],bl
  4409a5:	sub    bh,BYTE PTR [ebx]
  4409a7:	iret   
  4409a8:	adc    esp,DWORD PTR [eax-0x27]
  4409ab:	lea    esp,[esi]
  4409ad:	mov    ebp,0xf4d8d0f1
  4409b2:	das    
  4409b3:	xor    eax,0x3d0161ab
  4409b8:	(bad)  
  4409b9:	jecxz  0x440a25
  4409bb:	lahf   
  4409bc:	(bad)  
  4409bd:	fldl2t 
  4409bf:	in     eax,dx
  4409c0:	pop    eax
  4409c1:	pushf  
  4409c2:	push   ds
  4409c3:	and    BYTE PTR [esi-0x21],ch
  4409c6:	jmp    0x717a6bce
  4409cb:	lock inc ecx
  4409cd:	in     eax,dx
  4409ce:	bound  eax,QWORD PTR [edx+0x37]
  4409d1:	mov    BYTE PTR [ebx],bl
  4409d3:	adc    bl,BYTE PTR [ebx+0x4c]
  4409d6:	(bad)  
  4409d8:	xchg   esi,eax
  4409d9:	sub    eax,0xe5ce13be
  4409de:	pop    es
  4409df:	cmp    eax,0x84df0e31
  4409e4:	and    bl,al
  4409e6:	and    al,BYTE PTR [ebp-0x34]
  4409e9:	jg     0x440a5e
  4409eb:	ins    BYTE PTR es:[edi],dx
  4409ec:	jg     0x440971
  4409ee:	cmp    DWORD PTR [edi+0x77],esi
  4409f1:	xchg   esi,eax
  4409f2:	int    0xff
  4409f4:	fimul  WORD PTR [ecx+0x29e91d53]
  4409fa:	in     al,dx
  4409fb:	cmp    al,0x27
  4409fd:	pop    es
  4409fe:	add    eax,ebx
  440a00:	(bad)  
  440a01:	fist   WORD PTR [esi-0x39]
	...
  440a18:	dec    eax
  440a19:	leave  
  440a1a:	ins    DWORD PTR es:[edi],dx
  440a1b:	lock paddusw mm2,QWORD PTR [esi-0x79]
  440a20:	cmp    bl,al
  440a22:	pop    es
  440a23:	lods   eax,DWORD PTR ds:[esi]
  440a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440a25:	pop    esi
  440a26:	jno    0x440a13
  440a28:	fsub   st(5),st
  440a2a:	mov    ch,0xed
  440a2c:	popa   
  440a2d:	fld    DWORD PTR [eax]
  440a2f:	adc    DWORD PTR [eax+edi*2-0x66b20909],eax
  440a36:	ins    DWORD PTR es:[edi],dx
  440a37:	popf   
  440a38:	inc    esp
  440a39:	jle    0x440aa8
  440a3b:	add    bh,ch
  440a3d:	and    eax,0xa6e6f51d
  440a42:	jmp    0xf8d43fba
  440a47:	bound  edi,QWORD PTR [ebp-0x5b8deb4a]
  440a4d:	xchg   edx,eax
  440a4e:	mov    ebp,esp
  440a50:	fcom   DWORD PTR [esi-0x3f]
  440a53:	cmp    eax,0x5455c57
  440a58:	push   0x5c
  440a5a:	add    ch,BYTE PTR [edx+0x35]
  440a5d:	push   ecx
  440a5e:	add    DWORD PTR ds:0x51055c6a,edx
  440a64:	stc    
  440a65:	shl    ebp,cl
  440a67:	mov    gs,edx
  440a69:	pop    ebx
  440a6a:	inc    ebp
  440a6b:	int    0x75
  440a6d:	sbb    BYTE PTR [ebx-0x14],ch
  440a70:	sub    al,0xcd
  440a72:	repz out 0xe7,al
  440a75:	div    bh
  440a77:	outs   dx,BYTE PTR ds:[esi]
  440a78:	retf   0xc05c
  440a7b:	mov    BYTE PTR [eax],0x0
	...
  440a8e:	add    BYTE PTR [eax],al
  440a90:	sbb    ebp,DWORD PTR [edi]
  440a92:	pop    esp
  440a93:	rcr    BYTE PTR [eax],0x54
  440a96:	add    eax,0x1d04dee9
  440a9b:	in     eax,dx
  440a9c:	(bad)  
  440a9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440a9e:	mov    WORD PTR [eax],es
  440aa0:	push   esi
  440aa1:	(bad)  
  440aa2:	xchg   esp,eax
  440aa3:	out    0x55,eax
  440aa5:	adc    DWORD PTR [esi-0x38],esi
  440aa8:	push   esp
  440aa9:	add    eax,0x528051e4
  440aae:	and    al,0x8
  440ab0:	mov    eax,0x705752a2
  440ab5:	mov    tr1,ecx
  440ab8:	sbb    bl,dh
  440aba:	mov    ebp,DWORD PTR [esp+ebp*8]
  440abd:	pop    esi
  440abe:	inc    ebp
  440abf:	and    al,0xbb
  440ac1:	aam    0xfb
  440ac3:	cmovs  ebp,DWORD PTR [edi]
  440ac6:	add    DWORD PTR [eax],eax
  440ac8:	mov    ebx,0x9b3c0263
  440acd:	add    DWORD PTR [esi],0x489b23c
  440ad3:	cmp    al,0xc6
  440ad5:	mov    edi,esi
  440ad7:	push   cs
  440ad8:	aad    0x1c
  440ada:	cmp    al,0xff
  440adc:	mov    ebx,0x8e7500d5
  440ae1:	push   edx
  440ae2:	sub    eax,0x2df659fd
  440ae7:	std    
  440ae8:	test   BYTE PTR [esi-0x53],dl
  440aeb:	add    BYTE PTR [ebx-0x2b],bh
  440aee:	jle    0x440b0f
  440af0:	test   BYTE PTR [ecx+0x7ff7],0x0
	...
  440b07:	add    al,al
  440b09:	icebp  
  440b0a:	ins    BYTE PTR es:[edi],dx
  440b0b:	add    eax,0x75170dfb
  440b10:	jbe    0x440b70
  440b12:	sti    
  440b13:	jmp    0x440b31
  440b15:	arpl   WORD PTR [ebx],ax
  440b17:	cmp    al,0x2b
  440b19:	sub    DWORD PTR [esi],0x489423c
  440b1f:	cmp    al,0x26
  440b21:	xchg   DWORD PTR [esi],esp
  440b23:	syscall 
  440b25:	push   ss
  440b26:	cmp    al,0xff
  440b28:	dec    ebx
  440b29:	fld    QWORD PTR [eax]
  440b2b:	je     0x440b8f
  440b2d:	fidiv  DWORD PTR [esi+0x63b52f34]
  440b33:	in     eax,0x43
  440b35:	fimul  DWORD PTR [esi]
  440b37:	jae    0x440baa
  440b39:	xchg   ebx,eax
  440b3a:	push   edx
  440b3b:	mov    esp,DWORD PTR [edi+eax*8+0x3aa3fe6b]
  440b42:	test   BYTE PTR [eax],bh
  440b44:	sahf   
  440b45:	outs   dx,BYTE PTR ds:[esi]
  440b46:	jne    0x440b3a
  440b48:	and    BYTE PTR [edx-0x545bfd18],al
  440b4e:	jno    0x440bbe
  440b50:	(bad)  
  440b51:	stos   DWORD PTR es:[edi],eax
  440b52:	jno    0x440bc7
  440b54:	arpl   WORD PTR [edi-0x77],ax
  440b57:	adc    al,0xe7
  440b59:	jbe    0x440b5f
  440b5b:	add    BYTE PTR [edx-0x5],ah
  440b5e:	enter  0x6a23,0xfb
  440b62:	dec    esi
  440b63:	and    eax,0xe20eaa9d
  440b68:	mov    ah,0xaf
  440b6a:	js     0x440b2c
	...
  440b80:	ss repz adc ebp,0xce337c2f
  440b88:	and    BYTE PTR [ecx-0x68],bl
  440b8b:	mov    BYTE PTR [edx],ah
  440b8d:	sub    BYTE PTR [ebx+0x4],0xd9
  440b91:	jae    0x440b1e
  440b93:	leave  
  440b94:	jp     0x440bda
  440b96:	jnp    0x440b91
  440b98:	jge    0x440ba5
  440b9a:	shl    BYTE PTR [ebx],0x52
  440b9d:	or     edx,DWORD PTR [ebp+eax*4+0x26]
  440ba1:	sahf   
  440ba2:	sbb    al,0x85
  440ba4:	(bad)  
  440ba5:	stc    
  440ba6:	pop    es
  440ba7:	mov    bh,ah
  440ba9:	jae    0x440b93
  440bab:	or     ah,BYTE PTR [ebx+0x3afeedfd]
  440bb1:	push   ecx
  440bb2:	outs   dx,DWORD PTR ds:[esi]
  440bb3:	stc    
  440bb4:	inc    ebp
  440bb5:	sti    
  440bb6:	mov    edi,0x72d95223
  440bbb:	mov    edi,0x5472f181
  440bc0:	out    0xe0,eax
  440bc2:	inc    ecx
  440bc3:	mov    al,ds:0x82478f40
  440bc8:	sub    dl,BYTE PTR [eax-0x6620fead]
  440bce:	xchg   edi,eax
  440bcf:	aad    0xa8
  440bd1:	xor    al,0x91
  440bd3:	inc    ecx
  440bd4:	pop    edx
  440bd5:	fldcw  WORD PTR [edx+0x67]
  440bd8:	pop    edx
  440bd9:	sub    al,0xb5
  440bdb:	int    0x92
  440bdd:	add    ecx,edx
  440bdf:	mov    dh,ch
  440be1:	arpl   WORD PTR [esi+0x1f],bx
	...
  440bf7:	add    BYTE PTR [edx],dh
  440bf9:	xor    al,0x55
  440bfb:	daa    
  440bfc:	xor    eax,DWORD PTR [ebx]
  440bfe:	icebp  
  440bff:	xor    ah,BYTE PTR [ecx+edi*4-0x31b2a28]
  440c06:	lds    esp,FWORD PTR [ebx]
  440c08:	fld    QWORD PTR [esi+edi*4]
  440c0b:	pop    ss
  440c0c:	mov    ds:0x69100614,eax
  440c11:	fldl2t 
  440c13:	add    esp,DWORD PTR [ebx-0x54e3f9ec]
  440c19:	fsubr  st,st(1)
  440c1b:	add    esp,ebp
  440c1d:	and    al,0x6
  440c1f:	adc    al,0x4f
  440c21:	mov    fs,edi
  440c23:	xor    BYTE PTR [edi-0x26],0xe9
  440c27:	add    ebx,DWORD PTR [ebx+0x48]
  440c2a:	(bad)  
  440c2c:	ss pushf 
  440c2e:	push   ss
  440c2f:	adc    DWORD PTR [eax],eax
  440c31:	aam    0x9f
  440c33:	repnz (bad) 
  440c35:	not    edx
  440c37:	mov    edi,0xfd0fe541
  440c3c:	ret    
  440c3d:	shl    BYTE PTR ds:0xdf047a20,cl
  440c43:	and    BYTE PTR [ebx],0xdc
  440c46:	add    BYTE PTR [edx-0x4d290034],dh
  440c4c:	mov    ah,0xe0
  440c4e:	sbb    DWORD PTR [eax+0x5e],0xffffffd9
  440c52:	add    dh,ch
  440c54:	(bad)  
  440c55:	fadd   DWORD PTR [ebp-0x6f39c22]
  440c5b:	push   es
	...
  440c70:	adc    bl,al
  440c72:	add    DWORD PTR [ecx+0x40],0xffffffe0
  440c76:	jge    0x440ccd
  440c78:	data16 fld DWORD PTR [eax]
  440c7b:	bound  ecx,QWORD PTR [esp+edx*2-0x45059f27]
  440c82:	sbb    al,0xe2
  440c84:	test   ah,bh
  440c86:	aaa    
  440c87:	xchg   ebx,eax
  440c88:	adc    eax,0x4fd05f32
  440c8d:	or     ah,BYTE PTR [ebx]
  440c8f:	pop    esp
  440c90:	sbb    al,0x91
  440c92:	xor    al,0x30
  440c94:	mov    ah,0xc7
  440c96:	cmp    BYTE PTR [edx+esi*2-0x9],dh
  440c9a:	push   esp
  440c9b:	xchg   esp,eax
  440c9c:	fcomp  QWORD PTR [ecx]
  440c9e:	imul   DWORD PTR [eax+0x5d28c79f]
  440ca4:	inc    edi
  440ca5:	push   esp
  440ca6:	gs add eax,0x3654f786
  440cac:	xor    al,0x4e
  440cae:	add    dl,BYTE PTR [ebp-0x61]
  440cb1:	or     eax,0x8a5aebbf
  440cb6:	jae    0x440c53
  440cb8:	fimul  DWORD PTR ds:0x25db0d1d
  440cbe:	sbb    eax,0x1d1dead9
  440cc3:	aad    0x3a
  440cc5:	mov    ch,BYTE PTR [esi-0x16]
  440cc8:	loop   0x440c4a
  440cca:	add    esp,DWORD PTR [edx+0xf]
  440ccd:	mov    ah,0xd7
  440ccf:	pop    esp
  440cd0:	ins    DWORD PTR es:[edi],dx
  440cd1:	push   0xfffffffd
  440cd3:	inc    DWORD PTR [eax]
	...
  440ce5:	add    BYTE PTR [eax],al
  440ce7:	add    BYTE PTR [ebx-0x26],cl
  440cea:	add    cl,dl
  440cec:	loopne 0x440cef
  440cee:	loopne 0x440cd4
  440cf0:	int    0x5
  440cf2:	jge    0x440cb4
  440cf4:	aaa    
  440cf5:	jns    0x440c7a
  440cf7:	fist   DWORD PTR [esi]
  440cf9:	retf   0xd225
  440cfc:	stc    
  440cfd:	push   edx
  440cfe:	test   eax,0xddd9fb88
  440d03:	sub    bh,BYTE PTR [edi*1+0x18606603]
  440d0a:	ins    DWORD PTR es:[edi],dx
  440d0b:	aam    0x25
  440d0d:	sar    DWORD PTR [esp],1
  440d10:	das    
  440d11:	mov    BYTE PTR [ecx],al
  440d13:	lock dec bp
  440d16:	and    al,0x14
  440d18:	aad    0xcb
  440d1a:	bound  edi,QWORD PTR [ebx]
  440d1c:	(bad)  
  440d1d:	in     eax,dx
  440d1e:	sbb    BYTE PTR [esp+ecx*4+0x59],dh
  440d22:	ret    
  440d23:	add    dh,BYTE PTR [eax+0x70dc66fe]
  440d29:	cmp    al,0x7e
  440d2b:	rcl    DWORD PTR [eax+0x15],cl
  440d2e:	jmp    0xfa4dde5e
  440d33:	mov    ecx,DWORD PTR [edi-0x12]
  440d36:	and    al,0x8b
  440d38:	ja     0x440cfb
  440d3a:	adc    BYTE PTR [ebx-0x76fdf20d],cl
  440d40:	mov    edi,0x37c98469
  440d45:	fidivr WORD PTR [ebp+0x4c]
  440d48:	addr16 mov ecx,0x205e
	...
  440d5e:	add    BYTE PTR [eax],al
  440d60:	inc    eax
  440d61:	scas   eax,DWORD PTR es:[edi]
  440d62:	dec    DWORD PTR [ebp+ecx*2-0x5da1c929]
  440d69:	idiv   edx
  440d6b:	(bad)  
  440d6c:	mov    esp,0x6b244d0d
  440d71:	push   cs
  440d72:	jne    0x440d98
  440d74:	bound  edx,QWORD PTR [edi+esi*2+0x69c14a09]
  440d7b:	cli    
  440d7c:	push   ebp
  440d7d:	add    BYTE PTR ds:0x778139f9,dh
  440d83:	mov    esi,0x54d1e4a5
  440d88:	loope  0x440dc0
  440d8a:	add    eax,0x7f826abe
  440d8f:	in     al,dx
  440d90:	push   edx
  440d91:	dec    edi
  440d92:	fst    DWORD PTR [ecx-0x27]
  440d95:	rcr    bl,0x2c
  440d98:	sbb    eax,0xc2d4df8
  440d9d:	nop
  440d9e:	inc    edi
  440d9f:	xchg   DWORD PTR [esi-0x5178ef2a],esp
  440da5:	fiadd  WORD PTR [edi+eax*4]
  440da8:	jle    0x440d80
  440daa:	sbb    BYTE PTR [ebx-0x4b7f7bde],al
  440db0:	bound  eax,QWORD PTR [edx+0x45426604]
  440db6:	ja     0x440dc4
  440db8:	clc    
  440db9:	mov    ah,0xc8
  440dbb:	and    esi,DWORD PTR [ecx-0x7e]
  440dbe:	push   edi
  440dbf:	sbb    al,BYTE PTR [edi+edx*4+0x49]
  440dc3:	je     0x440dc5
	...
  440dd5:	add    BYTE PTR [eax],al
  440dd7:	add    BYTE PTR [ecx+0x6bf87f5c],al
  440ddd:	adc    BYTE PTR [edx],cl
  440ddf:	(bad)  
  440de1:	jp     0x440de4
  440de3:	jb     0x440e3a
  440de5:	imul   esi,DWORD PTR [ebx+0x0],0x62
  440de9:	sub    dl,0x34
  440dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440ded:	add    bh,BYTE PTR es:[ebp-0x5d]
  440df1:	add    BYTE PTR [ebx],0xb1
  440df4:	arpl   WORD PTR [edx+ecx*4],dx
  440df7:	ror    BYTE PTR [edi],0x68
  440dfa:	push   edi
  440dfb:	add    esp,DWORD PTR [esi+esi*4-0x269cf2d8]
  440e02:	sahf   
  440e03:	aaa    
  440e04:	aam    0x8c
  440e06:	in     eax,dx
  440e07:	(bad)  
  440e08:	push   edi
  440e09:	sbb    edx,ebp
  440e0b:	jle    0x440e57
  440e0d:	pop    esi
  440e0e:	push   ss
  440e0f:	sub    BYTE PTR [esi+0x5e],ch
  440e12:	out    0x21,al
  440e14:	ftst   
  440e16:	sbb    al,0xfc
  440e18:	inc    ebp
  440e19:	mov    edx,gs
  440e1b:	pop    ebx
  440e1c:	inc    ecx
  440e1d:	js     0x440e87
  440e1f:	jb     0x440dff
  440e21:	cwde   
  440e22:	(bad)  
  440e23:	in     eax,0xe6
  440e25:	or     al,0xfe
  440e27:	pop    ss
  440e28:	loope  0x440dd9
  440e2a:	(bad)  
  440e2b:	sti    
  440e2c:	xchg   DWORD PTR [ecx-0x2b23164f],edi
  440e32:	mov    dh,0xc9
  440e34:	lea    ecx,ds:0x56216fe
  440e3a:	loop   0x440e19
	...
  440e50:	pop    edi
  440e51:	xor    eax,eax
  440e53:	jl     0x440eb3
  440e55:	add    al,0xa8
  440e57:	jle    0x440def
  440e59:	mov    ch,0x1
  440e5b:	(bad)  
  440e5d:	in     al,0x73
  440e5f:	sub    BYTE PTR [esi+0x4],0x2
  440e63:	std    
  440e64:	int3   
  440e65:	mov    edi,edi
  440e67:	add    eax,0x277658d1
  440e6c:	push   edi
  440e6d:	fnstenv [ebp+0x1]
  440e70:	inc    esp
  440e71:	mov    bh,0x91
  440e73:	jmp    0xca9ae354
  440e78:	jle    0x440e13
  440e7a:	inc    eax
  440e7b:	jnp    0x440edb
  440e7d:	add    al,0x63
  440e7f:	fadd   DWORD PTR [ecx-0xf]
  440e82:	sub    bl,dh
  440e84:	jne    0x440eb4
  440e86:	add    edx,eax
  440e88:	inc    ecx
  440e89:	in     eax,dx
  440e8a:	out    0x85,al
  440e8c:	sbb    ecx,DWORD PTR [ecx+eax*1-0x3faa0c4a]
  440e93:	push   cs
  440e94:	nop
  440e95:	cs pop esp
  440e97:	push   0x1a
  440e99:	jmp    0xb7e68161
  440e9e:	or     al,0x81
  440ea0:	xchg   ecx,eax
  440ea1:	jne    0x440e9a
  440ea3:	mov    cs,WORD PTR [edi+0x3592ec99]
  440ea9:	push   esi
  440eaa:	jmp    0x3584:0x7e83c716
  440eb1:	fidivr WORD PTR [ebp+0x6e]
	...
  440ec8:	cmp    dl,bl
  440eca:	xor    DWORD PTR [ecx],0xffffffb3
  440ecd:	jb     0x440e71
  440ecf:	jmp    0x2977e835
  440ed4:	mov    ecx,0x61e90163
  440ed9:	push   esi
  440eda:	clc    
  440edb:	mov    esp,0xa9c0be09
  440ee0:	test   al,0x5f
  440ee2:	add    ecx,ebp
  440ee4:	popa   
  440ee5:	sbb    al,0x8c
  440ee7:	lea    edi,ds:0xea724ee5
  440eed:	mov    dh,0xc
  440eef:	push   0x29
  440ef1:	nop
  440ef2:	cmp    al,0x18
  440ef4:	aad    0xbd
  440ef6:	cmp    esi,DWORD PTR [eax]
  440ef8:	int    0xed
  440efa:	mov    bl,dh
  440efc:	bound  ecx,QWORD PTR [edi+0x6e]
  440eff:	jmp    0xc3075e66
  440f04:	xor    DWORD PTR [esi],eax
  440f06:	pop    ebx
  440f07:	ret    0x5542
  440f0a:	rcr    DWORD PTR [ebp-0x76],cl
  440f0d:	sbb    DWORD PTR [ebx+0x2d4f62f6],ecx
  440f13:	push   es
  440f14:	arpl   WORD PTR [edi-0x3d],cx
  440f17:	add    cl,BYTE PTR [esi]
  440f19:	add    eax,0x92b000e7
  440f1e:	push   ebx
  440f1f:	jmp    FWORD PTR [esi-0x74bff8aa]
  440f25:	or     eax,0x9c283f1
  440f2a:	fld    DWORD PTR cs:[eax]
	...
  440f3d:	add    BYTE PTR [eax],al
  440f3f:	add    BYTE PTR [esi-0x27],cl
  440f42:	push   ecx
  440f43:	jmp    FWORD PTR [esi+0x56]
  440f46:	pop    es
  440f47:	inc    eax
  440f48:	dec    ebx
  440f49:	or     eax,0x90283d9
  440f4e:	cs repz dec esi
  440f51:	mov    ah,0x83
  440f53:	test   BYTE PTR [edi-0x18],0x83
  440f57:	fstp   TBYTE PTR [edi]
  440f59:	fsub   QWORD PTR ds:0x7b1dbed2
  440f5f:	push   ss
  440f60:	xor    al,0x48
  440f62:	je     0x440f64
  440f64:	xor    al,0x48
  440f66:	add    ch,BYTE PTR [ebx]
  440f68:	mov    ebx,0xbc44fd83
  440f6d:	xchg   ebx,eax
  440f6e:	sub    eax,0xddf827d3
  440f73:	add    dh,BYTE PTR [eax+0x4]
  440f76:	es ror bl,0x52
  440f7a:	repz (bad)
  440f7d:	int    0xf1
  440f7f:	fisub  WORD PTR [eax+0xf]
  440f82:	push   ss
  440f83:	icebp  
  440f84:	jo     0x440fa6
  440f86:	pop    ebx
  440f87:	pop    ebx
  440f88:	adc    al,0x9b
  440f8a:	mov    dh,0x8
  440f8c:	retf   
  440f8d:	mov    ds:0xcece97d,al
  440f92:	out    dx,eax
  440f93:	test   DWORD PTR [esi-0x7d],edx
  440f96:	add    eax,0x82b485
  440f9b:	add    DWORD PTR [ebx-0x445b1ff7],0xffffffd5
  440fa2:	add    BYTE PTR [ebx],dh
	...
  440fb8:	sti    
  440fb9:	sub    ebx,DWORD PTR [eax+eax*1-0x7cfb7f9e]
  440fc0:	xchg   ebp,eax
  440fc1:	and    al,0xf5
  440fc3:	sub    al,0xa2
  440fc5:	mov    edi,0x80628f55
  440fca:	add    al,0x4d
  440fcc:	jmp    0xc5838b4
  440fd1:	idiv   eax
  440fd3:	and    edx,DWORD PTR [esi-0x1]
  440fd6:	xor    eax,0xfa7129f9
  440fdb:	sub    eax,0x1dfa4999
  440fe0:	gs das 
  440fe2:	adc    BYTE PTR [ecx],cl
  440fe4:	adc    eax,0x50250486
  440fe9:	mov    es,edi
  440feb:	and    al,0x4d
  440fed:	(bad)  [ecx-0x7c155132]
  440ff3:	shl    DWORD PTR [eax-0x71],0xaf
  440ff7:	adc    DWORD PTR [ebp+0x6f],edx
  440ffa:	cmp    DWORD PTR [ecx],ebp
  440ffc:	dec    ecx
  440ffd:	and    al,0xf9
  440fff:	jmp    0x3677:0xf8d93b09
  441006:	adc    al,BYTE PTR [eax+0x62]
  441009:	or     ebp,DWORD PTR [ebp+0x7d]
  44100c:	sub    edx,eax
  44100e:	sub    edx,edi
  441010:	outs   dx,DWORD PTR ds:[esi]
  441011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441012:	iret   
  441013:	clc    
  441014:	push   edi
  441015:	adc    al,BYTE PTR ss:[eax+0x62]
  441019:	or     eax,DWORD PTR [ebp+0x7d]
	...
  441030:	stos   DWORD PTR es:[edi],eax
  441031:	out    dx,eax
  441032:	sub    ebp,ebp
  441034:	dec    edi
  441035:	mov    al,ds:0x9456f289
  44103a:	mov    ebp,edx
  44103c:	dec    esi
  44103d:	test   al,0x33
  44103f:	into   
  441040:	out    0xeb,eax
  441042:	out    0x15,al
  441044:	gs iret 
  441046:	stc    
  441047:	call   FWORD PTR [ecx+ebx*8-0x6a]
  44104b:	push   es
  44104c:	jg     0x440fd7
  44104e:	dec    ebp
  44104f:	call   FWORD PTR [esi]
  441051:	sahf   
  441052:	in     al,dx
  441053:	and    BYTE PTR [ebx-0x60d4d425],0x5
  44105a:	aam    0x5a
  44105c:	test   BYTE PTR [ebx+0x19a232ba],dh
  441062:	gs jne 0x4410d0
  441065:	sbb    BYTE PTR [edx-0x681b778a],ah
  44106b:	and    dh,BYTE PTR [ebp+0x54]
  44106e:	mov    al,ds:0x2d28b6cd
  441073:	inc    edx
  441074:	push   0xffffffd9
  441076:	cmp    bh,BYTE PTR [ebx-0x52]
  441079:	mov    ebp,0xf4ded8ed
  44107e:	mov    ebp,0xefa3e117
  441083:	or     BYTE PTR [edi+0x6d5a6791],dh
  441089:	das    
  44108a:	mov    bh,0x7a
  44108c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44108d:	mov    ebp,0xe45680ed
  441092:	mov    bh,0xd9
	...
  4410a8:	adc    eax,0xaa18472f
  4410ad:	out    dx,eax
  4410ae:	test   eax,0xe69d8703
  4410b3:	and    BYTE PTR [esi-0x6f2bf643],0x2c
  4410ba:	(bad)  
  4410bb:	outs   dx,BYTE PTR ds:[esi]
  4410bc:	push   ecx
  4410bd:	pop    ecx
  4410be:	sti    
  4410bf:	ret    
  4410c0:	in     eax,0xca
  4410c2:	xor    ch,ah
  4410c4:	in     al,0x14
  4410c6:	shr    BYTE PTR [ebp+0x57],1
  4410c9:	add    DWORD PTR [edi],0xff3064f8
  4410cf:	pop    ss
  4410d0:	push   ds
  4410d1:	jmp    0x44107c
  4410d3:	add    eax,edi
  4410d5:	fiadd  WORD PTR [eax]
  4410d7:	mov    edx,0xdd89fb76
  4410dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4410dd:	and    BYTE PTR [edi+0x44],dl
  4410e0:	fwait
  4410e1:	inc    esp
  4410e2:	push   esp
  4410e3:	jb     0x441097
  4410e5:	mov    ebx,0x51b3e10
  4410ea:	sbb    eax,0x7881e4f9
  4410ef:	in     al,dx
  4410f0:	loop   0x441082
  4410f2:	clc    
  4410f3:	ror    BYTE PTR [esi+0x2b],cl
  4410f6:	mov    WORD PTR ds:0x434fe94a,?
  4410fc:	sub    di,ax
  4410ff:	cld    
  441100:	cdq    
  441101:	jmp    0x9e26fa46
  441106:	add    eax,0x14bb2a64
  44110b:	cmp    DWORD PTR [eax],eax
	...
  44111d:	add    BYTE PTR [eax],al
  44111f:	add    BYTE PTR [ebx],dh
  441121:	sub    cl,BYTE PTR [edi-0x7a]
  441124:	ins    DWORD PTR es:[edi],dx
  441125:	add    eax,0x9b662914
  44112a:	cmp    eax,0x83d9c6b7
  44112f:	jno    0x4410f0
  441131:	or     cl,BYTE PTR [edx]
  441133:	mov    edi,0xfb80eab6
  441138:	and    DWORD PTR [edi-0x22601215],eax
  44113e:	xor    cl,ch
  441140:	pop    ds
  441141:	and    bl,BYTE PTR [edx+ebp*1+0x2d]
  441145:	pop    esi
  441146:	in     eax,0x98
  441148:	loop   0x441144
  44114a:	hlt    
  44114b:	jmp    0xd982655f
  441150:	adc    DWORD PTR [edx-0x68cd0a92],eax
  441156:	xchg   BYTE PTR [ebp+ecx*2+0x471c5b71],ch
  44115d:	or     BYTE PTR [ecx+ebx*1+0x7a8be5],0xd1
  441165:	add    DWORD PTR [esp+edi*8+0x53],ecx
  441169:	(bad)  
  44116a:	xlat   BYTE PTR ds:[ebx]
  44116b:	(bad)  
  44116c:	lods   al,BYTE PTR ds:[esi]
  44116d:	and    DWORD PTR [ecx],ecx
  44116f:	mov    ecx,esi
  441171:	cmp    BYTE PTR [ebp+0x45],0xbf
  441175:	add    edi,eax
  441177:	mov    al,ch
  441179:	xchg   esp,eax
  44117a:	mov    edi,0x52ae58c3
  44117f:	mov    esi,DWORD PTR [edi]
  441181:	mov    cl,0x10
  441183:	push   edi
	...
  441198:	adc    BYTE PTR [esi+0x24],dh
  44119b:	sbb    al,dh
  44119d:	jecxz  0x44112a
  44119f:	inc    esp
  4411a0:	addr16 mov ebp,0xb137ff50
  4411a6:	and    BYTE PTR [ebx-0x1734fe5c],cl
  4411ac:	pop    esi
  4411ad:	psubd  mm7,mm7
  4411b0:	rcl    BYTE PTR [edx],0x76
  4411b3:	sti    
  4411b4:	fmul   QWORD PTR [esi-0x71237ae7]
  4411ba:	or     eax,DWORD PTR [ebp-0x75007112]
  4411c0:	cmp    eax,0xbde1a122
  4411c5:	cmc    
  4411c6:	pop    ss
  4411c7:	cs scas al,BYTE PTR es:[edi]
  4411c9:	out    dx,al
  4411ca:	jnp    0x4411ce
  4411cc:	or     ebx,edx
  4411ce:	add    BYTE PTR [ebx-0x1f2bddc3],cl
  4411d4:	popf   
  4411d5:	cmc    
  4411d6:	pop    ecx
  4411d7:	pop    esi
  4411d8:	mov    esi,0x485bb600
  4411dd:	scas   eax,DWORD PTR es:[edi]
  4411de:	jge    0x4411cc
  4411e0:	ficomp DWORD PTR [eax+0x64]
  4411e3:	cld    
  4411e4:	sti    
  4411e5:	stos   DWORD PTR es:[edi],eax
  4411e6:	mov    eax,DWORD PTR [ebp-0x15]
  4411e9:	test   eax,0x6cf75f9
  4411ee:	dec    esp
  4411ef:	cld    
  4411f0:	(bad)  
  4411f1:	fcom   st(2)
  4411f3:	repnz int 0xd6
  4411f6:	js     0x4411e8
  4411f8:	fild   WORD PTR [ebp+0x5ea]
	...
  44120e:	add    BYTE PTR [eax],al
  441210:	jmp    0x422c7a49
  441215:	shl    DWORD PTR [ebp-0x7],1
  441218:	mov    ecx,0x5a4b7977
  44121d:	or     eax,edx
  44121f:	sti    
  441220:	jmp    0x441292
  441222:	ja     0x4411e6
  441224:	xor    al,0x39
  441226:	inc    eax
  441227:	push   edx
  441228:	fldenv [eax-0x3685f588]
  44122e:	pop    ebp
  44122f:	cli    
  441230:	jge    0x44125b
  441232:	stc    
  441233:	gs (bad) 
  441235:	out    0x6b,al
  441237:	adc    ecx,DWORD PTR [edx]
  441239:	scas   al,BYTE PTR es:[edi]
  44123a:	(bad)  
  44123b:	jmp    eax
  44123d:	xor    edi,ecx
  44123f:	pop    ecx
  441240:	and    ebp,ecx
  441242:	ja     0x441232
  441244:	lods   eax,DWORD PTR ds:[esi]
  441245:	mul    DWORD PTR [ebp+0x7d]
  441248:	dec    esp
  441249:	push   esp
  44124a:	repnz push es
  44124c:	lods   eax,DWORD PTR ds:[esi]
  44124d:	pop    ebx
  44124e:	adc    al,BYTE PTR [eax+edx*2-0x4e]
  441252:	cld    
  441253:	test   BYTE PTR [edx],dh
  441255:	div    BYTE PTR [edx+0x7a]
  441258:	js     0x441232
  44125a:	cld    
  44125b:	push   ecx
  44125c:	fld    st(3)
  44125e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44125f:	out    0x1f,eax
  441261:	jae    0x441267
  441263:	call   0xf9afee2f
  441268:	fst    DWORD PTR [esi+0x73db0c18]
  44126e:	add    eax,0x86d4a176
	...
  441288:	ins    DWORD PTR es:[edi],dx
  441289:	jbe    0x4412f6
  44128b:	adc    esp,edx
  44128d:	mov    al,ds:0xd9daffc4
  441292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441293:	sti    
  441294:	or     eax,0x840612db
  441299:	cdq    
  44129a:	scas   eax,DWORD PTR es:[edi]
  44129b:	leave  
  44129c:	pmaxub mm5,mm1
  44129f:	xchg   BYTE PTR [esi+0x13d09ab5],dh
  4412a5:	push   eax
  4412a6:	stc    
  4412a7:	shl    BYTE PTR [ebx+0x3613ce1b],cl
  4412ad:	stc    
  4412ae:	and    DWORD PTR [ebx],0x10
  4412b1:	push   esi
  4412b2:	and    BYTE PTR es:[edx+0x29],al
  4412b6:	rcl    BYTE PTR [ebx],cl
  4412b8:	mov    ch,0x83
  4412ba:	iret   
  4412bb:	xchg   BYTE PTR [esi],al
  4412bd:	mov    ebp,0x84375b0d
  4412c2:	jae    0x44130e
  4412c4:	xor    eax,0x40f1da03
  4412c9:	push   eax
  4412ca:	sub    al,bh
  4412cc:	outs   dx,BYTE PTR ds:[esi]
  4412cd:	xchg   edi,eax
  4412ce:	popa   
  4412cf:	mov    edi,0xc172bd41
  4412d4:	ins    DWORD PTR es:[edi],dx
  4412d5:	mov    al,0xaa
  4412d7:	js     0x44127f
  4412d9:	mov    ebp,0xbda67cf1
  4412de:	rcr    DWORD PTR [ebx+0xf],0x84
  4412e2:	jg     0x44134e
  4412e4:	out    0x98,al
  4412e6:	in     eax,dx
  4412e7:	push   ss
  4412e8:	ja     0x4412aa
  4412ea:	unpcklps xmm0,XMMWORD PTR [eax]
	...
  4412fd:	add    BYTE PTR [eax],al
  4412ff:	add    BYTE PTR [eax+eiz*4+0x5251e961],bh
  441306:	loopne 0x441313
  441308:	dec    esp
  441309:	cdq    
  44130a:	push   ecx
  44130b:	sbb    al,0x15
  44130d:	test   dl,ch
  44130f:	jle    0x4412b7
  441311:	mov    ebp,0x51c70719
  441316:	mov    al,ds:0xe21ae50f
  44131b:	mov    bl,0xf5
  44131d:	jo     0x441320
  44131f:	fbld   TBYTE PTR [esi-0x27]
  441322:	add    dl,bh
  441324:	js     0x4412dc
  441326:	leave  
  441327:	test   al,0x5e
  441329:	dec    DWORD PTR [edx+esi*2]
  44132c:	sub    ah,cl
  44132e:	jbe    0x441311
  441330:	enter  0xf157,0xe9
  441334:	popa   
  441335:	(bad)  [ebx-0x756bc3f0]
  44133b:	lods   eax,DWORD PTR ds:[esi]
  44133c:	push   ebp
  44133d:	in     eax,dx
  44133e:	mov    ebp,DWORD PTR [edi-0x15faa253]
  441344:	ja     0x441315
  441346:	ins    DWORD PTR es:[edi],dx
  441347:	repz dec esi
  441349:	call   DWORD PTR [eax]
  44134b:	push   ebp
  44134c:	leave  
  44134d:	jnp    0x441310
  44134f:	jmp    0x1f7eecb5
  441354:	popa   
  441355:	sar    BYTE PTR [edi+ecx*8+0x66],cl
  441359:	fld    DWORD PTR [eax]
  44135b:	add    cl,BYTE PTR [eax-0xf70932d]
  441361:	push   ss
  441362:	adc    eax,0xdd
	...
  441377:	add    dh,ah
  441379:	push   ss
  44137a:	add    eax,0x88d87273
  44137f:	xor    eax,0xd76cd382
  441384:	rcl    DWORD PTR [edi],cl
  441386:	adc    eax,0x8aeb35e1
  44138b:	test   al,0x5a
  44138d:	ret    0xe034
  441390:	xor    al,BYTE PTR [esi+0x5b86a878]
  441396:	ret    
  441397:	mov    ebp,0xde19bf20
  44139c:	jl     0x4413f7
  44139e:	ret    
  44139f:	or     DWORD PTR [edi-0x5e68f847],esi
  4413a5:	sub    eax,edi
  4413a7:	hlt    
  4413a8:	std    
  4413a9:	out    0x40,al
  4413ab:	add    BYTE PTR [ebx],cl
  4413ad:	cmp    BYTE PTR [edx+0x47eb5f4c],0x88
  4413b4:	mov    edi,0xeff11e2
  4413b9:	jnp    0x4413cf
  4413bb:	inc    eax
  4413bc:	retf   
  4413bd:	add    al,0x45
  4413bf:	and    al,0xd8
  4413c1:	add    al,0xd1
  4413c3:	cmp    al,BYTE PTR [ecx-0x209a377]
  4413c9:	(bad)  
  4413cb:	push   cs
  4413cc:	dec    edi
  4413cd:	inc    ebx
  4413ce:	stc    
  4413cf:	push   DWORD PTR [esi+edx*2-0x42d1f510]
  4413d6:	cmp    dl,0x86
  4413d9:	jae    0x4413f5
  4413db:	mov    eax,DWORD PTR [eax]
	...
  4413ed:	add    BYTE PTR [eax],al
  4413ef:	add    BYTE PTR [edi-0x47],bl
  4413f2:	or     al,0x3b
  4413f4:	dec    ebp
  4413f5:	in     eax,dx
  4413f6:	or     DWORD PTR [ebx-0x60f98],eax
  4413fc:	add    BYTE PTR [eax-0x4ac8c7f4],bl
  441402:	test   DWORD PTR [esi],0xfff9b7fe
  441408:	mov    ah,0x99
  44140a:	ss jmp 0x441472
  44140d:	push   esi
  44140e:	out    dx,eax
  44140f:	or     dl,BYTE PTR [ebx+eax*1+0x10]
  441413:	push   esp
  441415:	lock cmp cl,0x46
  441419:	add    DWORD PTR [ebx-0x60f2bf0],0x985553b
  441423:	cmp    DWORD PTR [ecx+esi*8],0xfffffff9
  441427:	inc    eax
  441429:	cwde   
  44142a:	add    al,0x38
  44142c:	dec    edi
  44142d:	aad    0xf7
  44142f:	push   cs
  441430:	mov    ?,esp
  441432:	cli    
  441433:	push   DWORD PTR [ebp+ebx*4+0x44628b43]
  44143a:	sbb    BYTE PTR [ebx*4-0x14bd42d2],dl
  441441:	arpl   WORD PTR [eax],bx
  441443:	adc    al,0x39
  441445:	(bad)  
  441446:	cld    
  441447:	or     bh,ah
  441449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44144a:	imul   edi,ecx,0x3f3b7ee5
  441450:	aam    0x31
  441452:	add    bh,bh
	...
  441468:	jmp    0x3b9f:0x5a740c61
  44146f:	xor    eax,0x93f98044
  441474:	mov    ds:0x14594305,eax
  441479:	lds    edi,FWORD PTR gs:[esi+eiz*4-0x65]
  44147e:	cmp    eax,0x75711c86
  441483:	dec    edx
  441484:	scas   ax,WORD PTR es:[edi]
  441486:	sub    ebx,DWORD PTR [edx+0x6a]
  441489:	pop    ds
  44148a:	cmc    
  44148b:	aaa    
  44148c:	mov    ax,bp
  44148f:	repnz dec ecx
  441491:	mov    dl,0xf4
  441493:	jb     0x4414ff
  441495:	pop    es
  441496:	mov    bh,0xf
  441498:	mov    edx,DWORD PTR [ebp+0x5f]
  44149b:	stc    
  44149c:	ins    DWORD PTR es:[edi],dx
  44149d:	adc    eax,0xbbd7521d
  4414a2:	and    BYTE PTR [eax],ah
  4414a4:	mov    dl,0x6a
  4414a6:	icebp  
  4414a7:	fcom   DWORD PTR [eax+eiz*2-0x2]
  4414ab:	pop    ebx
  4414ac:	xchg   BYTE PTR [esi-0x6d81a3eb],al
  4414b2:	jne    0x44152e
  4414b4:	pop    edx
  4414b5:	imul   ebx,DWORD PTR [edx],0xffffff85
  4414b8:	pushf  
  4414b9:	outs   dx,BYTE PTR ds:[esi]
  4414ba:	add    eax,ecx
  4414bc:	fld    TBYTE PTR [esi-0x4726dbe0]
  4414c2:	or     al,0x25
  4414c4:	and    eax,0x41b86cda
  4414c9:	loope  0x44153b
  4414cb:	rol    BYTE PTR [eax],0x0
	...
  4414de:	add    BYTE PTR [eax],al
  4414e0:	inc    ecx
  4414e1:	mov    cl,0x41
  4414e3:	and    al,0x8
  4414e5:	add    DWORD PTR [edi+0x7b],0x2f9b5ae
  4414ec:	sub    edx,DWORD PTR [ebx-0x58]
  4414ef:	or     esp,esi
  4414f1:	cdq    
  4414f2:	fild   WORD PTR [eax+0x67277f73]
  4414f8:	and    eax,esp
  4414fa:	lahf   
  4414fb:	adc    eax,DWORD PTR [edi+ecx*4+0x11]
  4414ff:	int    0xcb
  441501:	or     BYTE PTR [edi],0xda
  441504:	jns    0x4414f7
  441506:	xchg   ecx,eax
  441507:	cld    
  441508:	and    ecx,ebx
  44150a:	adc    DWORD PTR [edi+0x7ae9d9f2],edx
  441510:	mov    ebp,0xb05f7552
  441515:	(bad)  
  441516:	sub    esi,edx
  441518:	and    ecx,ebx
  44151a:	call   0x6684680f
  44151f:	aad    0x21
  441521:	fnstenv [esi]
  441523:	addr16 jno 0x44159f
  441526:	cld    
  441527:	ret    
  441528:	jge    0x44157c
  44152a:	fld    QWORD PTR [ebx+0x8]
  44152d:	adc    eax,0xdaaf6dea
  441532:	xor    al,0xd
  441534:	jp     0x44155f
  441536:	outs   dx,DWORD PTR ds:[esi]
  441537:	gs pop ebx
  441539:	push   ebp
  44153a:	stos   BYTE PTR es:[edi],al
  44153b:	out    dx,eax
  44153c:	gs pop esp
  44153e:	mov    ebp,0xea15b83f
  441543:	add    eax,DWORD PTR [eax]
	...
  441555:	add    BYTE PTR [eax],al
  441557:	add    dl,ah
  441559:	xchg   ebx,eax
  44155a:	jmp    0x10dd6eda
  44155f:	shl    BYTE PTR ds:0xe107727,0xeb
  441566:	add    BYTE PTR [ecx],ch
  441568:	pop    esi
  441569:	(bad)  
  44156a:	pop    ebp
  44156b:	ins    DWORD PTR es:[edi],dx
  44156c:	popa   
  44156d:	push   esp
  44156e:	ds sub eax,0xd6927831
  441574:	popa   
  441575:	fld    DWORD PTR [ebp-0x7d6ba54]
  44157b:	aam    0xf9
  44157d:	ja     0x44150d
  44157f:	mov    eax,0xe789d961
  441584:	mov    ah,dl
  441586:	xor    ebp,DWORD PTR [ecx]
  441588:	and    DWORD PTR ds:0x5639c48c,edi
  44158e:	outs   dx,BYTE PTR ds:[esi]
  44158f:	or     eax,0x6a00bae0
  441594:	or     al,BYTE PTR [eax+edi*8-0x137de26]
  44159b:	fst    st(2)
  44159d:	cwde   
  44159e:	jmp    0x11d0735
  4415a3:	sub    ebp,DWORD PTR [ebp-0x761a9581]
  4415a9:	out    0x9,eax
  4415ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4415ac:	popa   
  4415ad:	jno    0x4415d1
  4415af:	cdq    
  4415b0:	pop    esi
  4415b1:	(bad)  [ecx+0x5dfe022c]
  4415b7:	aad    0x5e
  4415b9:	xor    BYTE PTR [edx],0xc1
	...
  4415d0:	iret   
  4415d1:	out    dx,eax
  4415d2:	add    cl,ch
  4415d4:	sbb    bl,dl
  4415d6:	xor    ebp,DWORD PTR [ecx+0x4c8c3ca6]
  4415dc:	push   es
  4415dd:	inc    BYTE PTR [ebp-0x53]
  4415e0:	(bad)  
  4415e1:	push   esp
  4415e2:	ds (bad) 
  4415e4:	jecxz  0x44159f
  4415e6:	add    BYTE PTR [ecx-0x16feb684],dl
  4415ec:	mov    ds:0x1e0104f7,al
  4415f1:	fdivr  DWORD PTR [eax+eax*1]
  4415f4:	dec    ebx
  4415f5:	and    ebp,ebx
  4415f7:	scas   eax,DWORD PTR es:[edi]
  4415f8:	cmp    ebx,ebx
  4415fa:	jne    0x441661
  4415fc:	scas   eax,DWORD PTR es:[edi]
  4415fd:	aad    0xf9
  4415ff:	xor    ebx,esp
  441601:	cmp    al,0x62
  441603:	add    BYTE PTR [ebx],cl
  441605:	and    bh,bh
  441607:	xor    bh,BYTE PTR [ebx]
  441609:	xchg   ebp,eax
  44160a:	mov    ch,0x8b
  44160c:	push   ss
  44160d:	and    ebx,DWORD PTR [edi-0x68]
  441610:	mov    bl,0x3
  441612:	inc    esp
  441613:	in     al,0x88
  441615:	inc    esi
  441616:	cld    
  441617:	call   DWORD PTR [ebx-0x4ff5781]
  44161d:	sbb    DWORD PTR [edi+0xc],ebx
  441620:	mov    ds:0xcb43ff92,eax
  441625:	and    bh,BYTE PTR [ebx+0x75dabbaf]
  44162b:	outs   dx,DWORD PTR gs:[esi]
  44162d:	aad    0xf9
  44162f:	xor    DWORD PTR [ebx-0x4],esp
  441632:	bound  eax,QWORD PTR [eax]
	...
  441648:	retf   
  441649:	and    edi,edi
  44164b:	xor    bh,BYTE PTR [ebx-0x6b]
  44164e:	mov    ch,0x8b
  441650:	(bad)  
  441651:	and    bl,BYTE PTR [edi-0x68]
  441654:	repz add eax,DWORD PTR [esp+eiz*8+0x8]
  441659:	inc    edi
  44165a:	cld    
  44165b:	push   DWORD PTR [ebx+0x7b00aa0c]
  441661:	sbb    DWORD PTR [edi+0x6c],ebx
  441664:	and    edi,DWORD PTR ds:0x228b43ff
  44166a:	mov    ebp,DWORD PTR [edi-0x9da2585]
  441670:	add    ch,BYTE PTR [edi-0x4]
  441673:	push   esi
  441674:	jne    0x441605
  441676:	push   edx
  441677:	push   esi
  441678:	xchg   ebp,eax
  441679:	push   es
  44167a:	inc    esp
  44167b:	test   BYTE PTR [ebx+0x62e827f4],cl
  441681:	adc    al,0xd7
  441683:	(bad)  
  441684:	cmp    eax,0xe1dfb6f9
  441689:	les    ebp,FWORD PTR [eax-0x7]
  44168c:	cmp    DWORD PTR [ebx+0x33a2c031],esp
  441692:	jns    0x4416f7
  441694:	or     bl,dl
  441696:	test   BYTE PTR [eax-0x15],bl
  441699:	sub    al,0x64
  44169b:	jge    0x44163c
  44169d:	sbb    al,0x5d
  44169f:	sub    eax,0x943ed0c
  4416a4:	out    0xa,eax
  4416a6:	add    al,0x0
  4416a8:	bound  ecx,QWORD PTR [ebx]
  4416aa:	fild   WORD PTR [edi]
	...
  4416c0:	out    0xbe,eax
  4416c2:	in     al,dx
  4416c3:	adc    esp,0x6f
  4416c6:	add    al,0x0
  4416c8:	dec    eax
  4416c9:	mov    dh,al
  4416cb:	push   eax
  4416cc:	aad    0x7c
  4416ce:	int3   
  4416cf:	adc    DWORD PTR [edx],esp
  4416d1:	jo     0x441654
  4416d3:	les    edx,FWORD PTR [esi+0x4e]
  4416d6:	jns    0x44171b
  4416d8:	out    0x55,al
  4416da:	jnp    0x4416dd
  4416dc:	cmp    al,0xb
  4416de:	mov    bh,0x87
  4416e0:	inc    esp
  4416e1:	or     DWORD PTR [ebp-0x4904c003],esi
  4416e7:	mov    eax,DWORD PTR [ecx+edi*8]
  4416ea:	mov    ah,0x3
  4416ec:	cld    
  4416ed:	or     cl,dl
  4416ef:	pop    DWORD PTR [ecx+ecx*1]
  4416f2:	int3   
  4416f3:	add    ecx,ebx
  4416f5:	lods   al,BYTE PTR ds:[esi]
  4416f6:	je     0x44167f
  4416f8:	and    eax,0xd6438778
  4416fd:	or     ah,cl
  4416ff:	psubusw mm6,QWORD PTR [esp+ebx*4-0x7863e279]
  441707:	inc    ebx
  441708:	push   es
  441709:	cli    
  44170a:	retf   
  44170b:	pop    ss
  44170c:	jmp    0xe5f03bea
  441711:	adc    al,0xf6
  441713:	jmp    0xea822df6
  441718:	in     al,0x14
  44171a:	retf   0xdee9
  44171d:	push   ss
  44171e:	cmp    ch,dl
  441720:	in     al,0x14
  441722:	int3   
  441723:	jmp    0x441728
	...
  441738:	ficom  WORD PTR [esi]
  44173a:	ss jmp 0x16de:0xe9be14e4
  441742:	mov    ds:0x14e4ea,al
  441747:	jmp    0x14e4:0xea8e16de
  44174e:	add    cl,BYTE PTR [edi-0x348e665f]
  441754:	cmp    DWORD PTR [eax-0x5b],edx
  441757:	ja     0x44173a
  441759:	xchg   edx,eax
  44175a:	mov    dh,0x12
  44175c:	jmp    0x24f81175
  441761:	call   0x13ed:0x7c1cf411
  441768:	push   esp
  441769:	sbb    edx,ebp
  44176b:	push   ss
  44176c:	mov    ds:0x62b1f771,al
  441771:	fldcw  WORD PTR [ebx]
  441773:	add    BYTE PTR [edx-0x11],ah
  441776:	in     eax,0xeb
  441778:	ins    DWORD PTR es:[edi],dx
  441779:	shl    BYTE PTR [ebp+0x38368a03],cl
  44177f:	add    al,0x62
  441781:	pop    eax
  441782:	inc    ebp
  441783:	pusha  
  441784:	(bad)  
  441785:	out    dx,eax
  441786:	jmp    0xaeb54ced
  44178b:	aad    0x7d
  44178d:	jl     0x441752
  44178f:	or     eax,0x472a9947
  441794:	out    0xf6,eax
  441796:	shr    ebp,1
  441798:	int    0x21
  44179a:	add    DWORD PTR [eax+0x0],esp
	...
  4417ad:	add    BYTE PTR [eax],al
  4417af:	add    BYTE PTR [edx],ch
  4417b1:	js     0x441737
  4417b3:	sbb    al,0xc2
  4417b5:	sub    cl,0x62
  4417b8:	adc    ebx,ecx
  4417ba:	add    BYTE PTR [ebx-0x1a9526a3],ch
  4417c0:	dec    ecx
  4417c1:	mov    ah,0x9
  4417c3:	and    eax,0x5772715e
  4417c8:	popa   
  4417c9:	fld    DWORD PTR [ebx-0x8263dfc]
  4417cf:	mov    eax,0xe96b4389
  4417d4:	popa   
  4417d5:	jbe    0x4417e2
  4417d7:	sbb    ah,BYTE PTR [esi-0x58d3be7]
  4417dd:	jae    0x44184a
  4417df:	jno    0x44179a
  4417e1:	push   edx
  4417e2:	ds inc ebp
  4417e4:	fmul   QWORD PTR [edi]
  4417e6:	cmc    
  4417e7:	inc    esi
  4417e8:	jns    0x44183e
  4417ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4417eb:	jmp    0xe5af5651
  4417f0:	leave  
  4417f1:	ror    DWORD PTR [ecx],cl
  4417f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4417f4:	popa   
  4417f5:	jno    0x441839
  4417f7:	push   edi
  4417f8:	popa   
  4417f9:	fnstenv [ebx]
  4417fb:	pop    ss
  4417fc:	(bad)  
  4417fd:	pop    es
  4417fe:	cmc    
  4417ff:	push   ss
  441800:	call   0x3282:0x6994f7cf
  441807:	adc    DWORD PTR [edx+edi*8],edx
  44180a:	add    cl,ch
  44180c:	ficomp DWORD PTR [eax+0xfecee79]
  441812:	adc    DWORD PTR [eax+0x0],esp
	...
  441825:	add    BYTE PTR [eax],al
  441827:	add    BYTE PTR [esi+0x76],bl
  44182a:	pop    es
  44182b:	jb     0x441863
  44182d:	jbe    0x44183a
  44182f:	sbb    bl,BYTE PTR [esi]
  441831:	sbb    esp,eax
  441833:	bound  eax,QWORD PTR [ebp-0x5f8e948d]
  441839:	push   edx
  44183a:	outs   dx,BYTE PTR ds:[esi]
  44183b:	add    BYTE PTR [edi-0x5b03b3ab],bl
  441841:	dec    ebp
  441842:	ret    
  441843:	call   0x455fd0
  441848:	or     edx,ebp
  44184a:	add    BYTE PTR [esi+0x54],dl
  44184d:	(bad)  
  44184e:	call   0x265fe8aa
  441853:	rcr    BYTE PTR [eax],0xc5
  441856:	bound  edi,QWORD PTR [ebx]
  441858:	aas    
  441859:	and    al,0xb7
  44185b:	jg     0x4418d8
  44185d:	aad    0x65
  44185f:	and    al,0xb0
  441861:	shl    ebx,1
  441863:	les    edx,FWORD PTR [edi+edx*4]
  441866:	clc    
  441867:	push   cs
  441868:	dec    esp
  441869:	or     edi,DWORD PTR [edi+0x4]
  44186c:	adc    esp,ebp
  44186e:	cld    
  44186f:	hlt    
  441870:	cmp    edi,DWORD PTR [eax+0x38]
  441873:	add    BYTE PTR [ecx+0x13],bl
  441876:	aaa    
  441877:	mov    bh,bh
  441879:	fbld   TBYTE PTR [edx+0x3b]
  44187c:	(bad)  
  44187e:	mov    bh,0x7f
  441880:	mov    ebx,0xc4dc66d6
  441885:	popa   
  441886:	std    
  441887:	hlt    
  441888:	mov    DWORD PTR [eax+0x38],edi
	...
  44189f:	add    BYTE PTR [ebp-0x2f],bh
  4418a2:	cmp    BYTE PTR [eax],al
  4418a4:	add    al,0x99
  4418a6:	mov    ch,0x53
  4418a8:	std    
  4418a9:	jmp    0xe6310a5f
  4418ae:	shl    BYTE PTR [ebx],0x64
  4418b1:	dec    esp
  4418b2:	iret   
  4418b3:	data16 mov al,ds:0x14c2f3d2
  4418b9:	xchg   esi,eax
  4418ba:	clc    
  4418bb:	jb     0x44188c
  4418bd:	dec    ebp
  4418be:	std    
  4418bf:	hlt    
  4418c0:	mov    edi,0x74003879
  4418c5:	popa   
  4418c6:	shl    BYTE PTR [esi+0x62],cl
  4418c9:	jae    0x44186d
  4418cb:	or     al,0x52
  4418cd:	fwait
  4418ce:	call   0x623f:0xe1307704
  4418d5:	adc    cl,BYTE PTR [esi]
  4418d7:	enter  0x7fc4,0x51
  4418db:	mov    eax,0x47055
  4418e0:	les    ecx,FWORD PTR [edi+0x9bc414c]
  4418e6:	or     BYTE PTR [ebp-0x3c],cl
  4418e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4418ea:	sbb    bl,dh
  4418ec:	and    bl,cl
  4418ee:	mov    esp,0x1144b3ff
  4418f3:	mov    cl,0x5e
  4418f5:	add    eax,0x70a2793e
  4418fa:	shr    DWORD PTR [ebx+ebp*1],0xca
  4418fe:	jmp    0xbc:0xb52f5e86
	...
  441915:	add    BYTE PTR [eax],al
  441917:	add    BYTE PTR [edi+0xe7f6807],ch
  44191d:	cmp    dh,0xff
  441920:	bound  ebx,QWORD PTR ds:0x12eff47f
  441926:	popa   
  441927:	push   edx
  441928:	xchg   edx,eax
  441929:	popa   
  44192a:	mov    bl,0x67
  44192c:	loop   0x44199d
  44192e:	add    al,0x4
  441930:	dec    eax
  441931:	jo     0x4418b8
  441933:	out    dx,al
  441934:	cmp    BYTE PTR [ebp+eax*4-0x31],ch
  441938:	sub    ebp,eax
  44193a:	inc    ebp
  44193b:	or     esp,DWORD PTR [edx+0x70]
  44193e:	jg     0x441900
  441940:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  441942:	out    0xff,al
  441944:	fsubp  st(4),st
  441946:	dec    edi
  441947:	sti    
  441948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441949:	jp     0x4418fe
  44194b:	clc    
  44194c:	ja     0x441962
  44194e:	out    dx,al
  44194f:	aas    
  441950:	(bad)  
  441951:	cmc    
  441952:	inc    ebx
  441953:	je     0x441998
  441955:	fnstenv [edi]
  441957:	mov    ch,0x14
  441959:	icebp  
  44195a:	imul   eax,DWORD PTR [edx+eiz*2],0xc31041d9
  441961:	sbb    dl,ch
  441963:	nop
  441964:	rol    DWORD PTR [ebp+edi*4-0x4f3a94a1],1
  44196b:	ins    BYTE PTR es:[edi],dx
  44196c:	cmc    
  44196d:	out    0xe9,al
  44196f:	add    esp,ecx
  441971:	cdq    
  441972:	xlat   BYTE PTR ds:[ebx]
  441973:	js     0x441997
  441975:	test   esp,ebp
  441977:	adc    DWORD PTR [edx],esp
  441979:	sbb    BYTE PTR [ecx+0x42],dh
	...
  44198f:	add    BYTE PTR [esi-0x27],ah
  441992:	xor    al,0x8b
  441994:	inc    esi
  441995:	or     edx,DWORD PTR [ebp-0x37]
  441998:	sub    DWORD PTR [edx],ecx
  44199a:	sbb    al,0x5f
  44199c:	adc    eax,0xbfd8aa5f
  4419a1:	fs sbb eax,0x8981b060
  4419a7:	push   eax
  4419a8:	or     edi,DWORD PTR [ecx+0x73]
  4419ab:	push   esp
  4419ac:	loope  0x441a1d
  4419ae:	into   
  4419af:	int3   
  4419b0:	cli    
  4419b1:	out    dx,al
  4419b2:	loope  0x441a12
  4419b4:	xor    BYTE PTR [eax-0x13],bh
  4419b7:	rcr    DWORD PTR [ebp+0x19],cl
  4419ba:	jmp    0xdab6:0xfaee2288
  4419c1:	out    dx,al
  4419c2:	fisttp QWORD PTR [edx-0x36aa8aa7]
  4419c8:	add    DWORD PTR gs:[esi],ebx
  4419cb:	mov    ah,BYTE PTR [edx]
  4419cd:	fnstcw WORD PTR [ecx+0xf71c36b]
  4419d3:	pop    edi
  4419d4:	aaa    
  4419d5:	popf   
  4419d6:	(bad)  
  4419d7:	mov    BYTE PTR [edx-0x497d2809],ah
  4419dd:	in     eax,0xf6
  4419df:	fsub   DWORD PTR [ebp+0xa]
  4419e2:	add    DWORD PTR [edx+0x25],esp
  4419e5:	adc    DWORD PTR [ebx-0x738dd3ab],0xd0815634
  4419ef:	ret    
  4419f0:	pop    ds
  4419f1:	jb     0x441a4b
  4419f3:	bound  eax,QWORD PTR [eax]
	...
  441a05:	add    BYTE PTR [eax],al
  441a07:	add    BYTE PTR [edi],ah
  441a09:	or     eax,0xf8720fb3
  441a0f:	cmp    al,0x2
  441a11:	jb     0x441a21
  441a13:	test   DWORD PTR [ebx-0x48],edx
  441a16:	add    BYTE PTR [edi],dl
  441a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a19:	aaa    
  441a1a:	or     ecx,ebp
  441a1c:	loopne 0x4419a2
  441a1e:	jne    0x441a5a
  441a20:	or     ecx,DWORD PTR [edx]
  441a22:	push   eax
  441a23:	jb     0x4419c0
  441a25:	pusha  
  441a26:	inc    ebp
  441a27:	int    0x39
  441a29:	arpl   WORD PTR [ebp-0x3b],cx
  441a2c:	adc    DWORD PTR [edi],ebp
  441a2e:	jmp    0x441a19
  441a30:	popa   
  441a31:	(bad)  [ecx-0x173eba03]
  441a37:	inc    edx
  441a38:	mov    bh,0x72
  441a3a:	clc    
  441a3b:	pop    esp
  441a3c:	and    eax,0xa4b970bc
  441a41:	int3   
  441a42:	inc    eax
  441a43:	sti    
  441a44:	and    DWORD PTR [eax-0x75],edi
  441a47:	xor    esi,esp
  441a49:	adc    al,0x1d
  441a4b:	std    
  441a4c:	fimul  DWORD PTR [ebp+0x785d6d08]
  441a52:	clc    
  441a53:	jmp    0x9161274a
  441a58:	idiv   BYTE PTR [ebp+0x1]
  441a5b:	jmp    0x27799bc1
  441a60:	and    al,0x72
  441a62:	mov    esp,ss
  441a64:	icebp  
  441a65:	in     eax,0x40
  441a67:	jmp    0xb161373e
	...
  441a80:	icebp  
  441a81:	and    al,0xf8
  441a83:	add    BYTE PTR [ebp+0x49],al
  441a86:	dec    ebp
  441a87:	and    al,0xd7
  441a89:	push   esp
  441a8a:	in     eax,0x0
  441a8c:	mov    ebx,ebx
  441a8e:	jg     0x441ad4
  441a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441a91:	outs   dx,DWORD PTR ds:[esi]
  441a92:	loopne 0x441ab0
  441a94:	jge    0x441aab
  441a96:	cli    
  441a97:	lea    eax,[edi-0x3f]
  441a9a:	sub    al,0x50
  441a9c:	cmp    BYTE PTR [esi],dl
  441a9e:	ror    DWORD PTR [ebx+0x244d67a3],cl
  441aa4:	aaa    
  441aa5:	push   esp
  441aa6:	in     al,dx
  441aa7:	add    BYTE PTR [ebx-0x25],cl
  441aaa:	jg     0x441b18
  441aac:	addr16 int 0xe8
  441aaf:	add    ch,bh
  441ab1:	adc    al,0xfa
  441ab3:	lea    esi,[edi-0x3f]
  441ab6:	cmp    al,0x50
  441ab8:	js     0x441ace
  441aba:	rol    DWORD PTR [ebx+0xcc14f],cl
  441ac0:	ror    BYTE PTR ds:0xbf177480,0x9
  441ac7:	test   BYTE PTR [ecx-0x79ffff23],al
  441acd:	push   es
  441ace:	or     al,BYTE PTR [ecx+ebp*4+0x760000dd]
  441ad5:	(bad)  
  441ad7:	test   BYTE PTR [ecx-0x23],dh
  441ada:	add    BYTE PTR [eax],al
  441adc:	shr    cl,cl
  441ade:	mov    ds:0x4002fb40,al
  441ae3:	xchg   ecx,eax
	...
  441af8:	popf   
  441af9:	adc    al,0xfa
  441afb:	adc    eax,0x386a9b
  441b00:	inc    eax
  441b01:	add    eax,0x917cfd76
  441b06:	or     dl,BYTE PTR [edi+0x7c]
  441b09:	xchg   ecx,eax
  441b0a:	and    al,0x1c
  441b0c:	xor    BYTE PTR [esi-0x279d3183],ch
  441b12:	cdq    
  441b13:	cli    
  441b14:	lods   eax,DWORD PTR ds:[esi]
  441b15:	out    0x87,eax
  441b17:	inc    esp
  441b18:	jle    0x441b96
  441b1a:	mov    ah,0x8a
  441b1c:	es pushf 
  441b1e:	and    BYTE PTR [eax+0x8],dl
  441b21:	adc    DWORD PTR [ecx],0x554e34f2
  441b27:	push   esp
  441b28:	ds enter 0xc07f,0xf6
  441b2d:	les    ecx,FWORD PTR [ecx+0x7f6c3e44]
  441b33:	shl    dh,0xe4
  441b36:	mov    DWORD PTR [esi+edi*1-0x1c],ebx
  441b3a:	mov    edx,edi
  441b3c:	jmp    0xe964440c
  441b41:	mov    ebx,0x38e707ed
  441b46:	rol    BYTE PTR [edx],1
  441b48:	loope  0x441b82
  441b4a:	add    BYTE PTR [ebx+0x58],dh
  441b4d:	jmp    0x441b3e
  441b4f:	adc    BYTE PTR [ecx+0x35],bh
  441b52:	ror    BYTE PTR [ebp*1-0x26d7d734],1
  441b59:	sub    dl,BYTE PTR [ebp+0x74]
	...
  441b70:	inc    esi
  441b71:	xchg   esp,eax
  441b72:	ins    BYTE PTR es:[edi],dx
  441b73:	push   0x14
  441b75:	out    dx,eax
  441b76:	push   esp
  441b77:	test   DWORD PTR [esi-0x1ebe0764],esp
  441b7d:	mov    BYTE PTR [edi],0x35
  441b80:	repnz xchg ecx,eax
  441b82:	inc    edi
  441b83:	test   DWORD PTR [esi+0x76f930e4],edx
  441b89:	fcomp  QWORD PTR [ecx+edi*8]
  441b8c:	mov    fs,esp
  441b8e:	sbb    BYTE PTR [ebp-0x23],cl
  441b91:	mov    WORD PTR [eax],ds
  441b93:	push   cs
  441b94:	and    al,BYTE PTR [eax+0x4b2f59b5]
  441b9a:	add    esp,0xec2ad946
  441ba0:	cmp    DWORD PTR ds:0xb86b3d5f,esp
  441ba6:	add    ecx,edx
  441ba8:	mov    esi,0xc7eade38
  441bad:	outs   dx,BYTE PTR ds:[esi]
  441bae:	fwait
  441baf:	xchg   edx,eax
  441bb0:	push   0x82fdb1c4
  441bb5:	and    BYTE PTR [ebx],dl
  441bb7:	jg     0x441c1d
  441bb9:	push   ss
  441bba:	push   0x59
  441bbc:	pop    es
  441bbd:	sbb    BYTE PTR ds:[esi+0x58],bl
  441bc1:	fstp   QWORD PTR cs:0xfa39c373
  441bc8:	call   0xf838:0x731eb5cf
  441bcf:	fs jnp 0x441c3b
  441bd2:	rol    DWORD PTR [ecx+0x0],0x0
	...
  441be6:	add    BYTE PTR [eax],al
  441be8:	push   0xffffffd6
  441bea:	jmp    0xd7e1ad3
  441bef:	xchg   ebx,eax
  441bf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441bf1:	pop    ebp
  441bf2:	cmp    bl,BYTE PTR [ebx+esi*1]
  441bf5:	cmp    ah,BYTE PTR [edi+0x53]
  441bf8:	pop    ebx
  441bf9:	mov    cl,0x90
  441bfb:	inc    ecx
  441bfc:	pop    edx
  441bfd:	mov    ebp,0x22b7119d
  441c02:	out    0x1d,al
  441c04:	adc    ebp,DWORD PTR [ebx+0xd]
  441c07:	xchg   ebx,eax
  441c08:	(bad)  
  441c09:	pop    ebp
  441c0a:	ret    0x97ed
  441c0d:	jge    0x441bd9
  441c0f:	fld    st(2)
  441c11:	and    DWORD PTR [esp+eax*4+0x65],edx
  441c15:	adc    al,0x6a
  441c17:	pop    esi
  441c18:	cli    
  441c19:	mov    ebp,0x39f31e35
  441c1e:	pop    edi
  441c1f:	mov    edx,0x9ce62e16
  441c24:	out    dx,eax
  441c25:	pop    ebp
  441c26:	(bad)  
  441c27:	sbb    eax,0xd80114f4
  441c2c:	stos   DWORD PTR es:[edi],eax
  441c2d:	ja     0x441c10
  441c2f:	in     eax,0xf0
  441c31:	push   cs
  441c32:	jge    0x441bf3
  441c34:	pop    ecx
  441c35:	push   0xffffffa1
  441c37:	and    ch,BYTE PTR [eax-0x6f9f4e5b]
  441c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441c3e:	mov    ebp,0xa146f060
  441c43:	adc    eax,0x255e182
  441c48:	icebp  
  441c49:	inc    esi
  441c4a:	jge    0x441c25
	...
  441c60:	xlat   BYTE PTR ds:[ebx]
  441c61:	jmp    0x3aac0206
  441c66:	out    dx,al
  441c67:	jo     0x441bfc
  441c69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441c6a:	(bad)
  441c6d:	in     eax,0x55
  441c6f:	rcl    al,cl
  441c71:	inc    esi
  441c72:	jge    0x441c7d
  441c74:	je     0x441c64
  441c76:	in     al,0x9
  441c78:	sbb    cl,dl
  441c7a:	inc    al
  441c7c:	mov    al,ds:0x482125e1
  441c81:	dec    ecx
  441c82:	dec    ecx
  441c83:	dec    eax
  441c84:	fist   DWORD PTR cs:[edi+0x70]
  441c88:	adc    esp,DWORD PTR [ebp-0x1fe1723f]
  441c8e:	push   ebp
  441c8f:	xchg   edx,eax
  441c90:	rcl    BYTE PTR ds:0x6a46357d,1
  441c96:	mov    eax,ds:0xe4eb7c17
  441c9b:	leave  
  441c9c:	fcmovnbe st,st(0)
  441c9e:	popa   
  441c9f:	add    DWORD PTR [ebx+0x648316e1],esp
  441ca5:	push   0xffffffa1
  441ca7:	imul   ebx,DWORD PTR [edi+0x5b9ee5f6],0xceeddd45
  441cb1:	int    0xa4
  441cb3:	pusha  
  441cb4:	sti    
  441cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441cb6:	mov    DWORD PTR [eax],eax
  441cb8:	push   esp
  441cb9:	or     eax,0x1910fe1a
  441cbe:	or     DWORD PTR [edi+edi*2],esp
  441cc1:	mov    ds:0x23e2,al
	...
  441cd6:	add    BYTE PTR [eax],al
  441cd8:	and    ecx,edx
  441cda:	outs   dx,BYTE PTR ds:[esi]
  441cdb:	in     al,0xab
  441cdd:	ins    DWORD PTR es:[edi],dx
  441cde:	mov    eax,ds:0x354d7a2b
  441ce3:	dec    eax
  441ce4:	cli    
  441ce5:	(bad)  
  441ce6:	icebp  
  441ce7:	mov    al,ds:0x84a646e9
  441cec:	jmp    0x441c73
  441cee:	cdq    
  441cef:	mov    eax,es
  441cf1:	xchg   ecx,eax
  441cf2:	icebp  
  441cf3:	pop    edi
  441cf4:	stos   BYTE PTR es:[edi],al
  441cf5:	test   edi,edx
  441cf7:	loopne 0x441d78
  441cf9:	push   esp
  441cfa:	lods   al,BYTE PTR es:[esi]
  441cfc:	repnz dec esi
  441cfe:	(bad)  
  441cff:	lock jge 0x441cd7
  441d02:	icebp  
  441d03:	lock sub BYTE PTR [esi+edx*8-0xe6a9204],dh
  441d0b:	adc    ecx,DWORD PTR [esi+0x4a]
  441d0e:	scas   al,BYTE PTR es:[edi]
  441d0f:	test   BYTE PTR [edi+0x7ea0f311],bl
  441d15:	mov    DWORD PTR [esi+0x59],esi
  441d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441d19:	push   cs
  441d1a:	test   eax,0x7c76a2fe
  441d1f:	inc    ebp
  441d20:	mov    ds:0xe78b541c,al
  441d25:	push   esi
  441d26:	in     eax,0x20
  441d28:	aas    
  441d29:	xlat   BYTE PTR ds:[ebx]
  441d2a:	add    BYTE PTR [ebx+0x7d],dl
  441d2d:	dec    edi
  441d2e:	jmp    0x441d31
  441d30:	or     edx,edi
  441d32:	push   edx
  441d33:	push   ecx
  441d34:	arpl   cx,ax
  441d36:	pop    ecx
  441d37:	inc    esp
  441d38:	sti    
  441d39:	adc    DWORD PTR [eax+edx*2],edx
	...
  441d50:	std    
  441d51:	xchg   esi,eax
  441d52:	clc    
  441d53:	cmp    BYTE PTR [edi],0xe1
  441d56:	mov    ecx,DWORD PTR [ebp-0x6afe79e]
  441d5c:	in     eax,0x18
  441d5e:	(bad)  
  441d60:	fistp  WORD PTR [ebx]
  441d62:	adc    BYTE PTR [ebx-0x6a64db6],0x38
  441d69:	nop
  441d6a:	fwait
  441d6b:	sbb    al,0x25
  441d6d:	cmp    al,0x4
  441d6f:	call   0xf99f3682
  441d74:	jno    0x441d8d
  441d76:	js     0x441d38
  441d78:	aaa    
  441d79:	inc    edi
  441d7a:	jg     0x441d07
  441d7c:	sub    bl,ah
  441d7e:	pop    ecx
  441d7f:	stc    
  441d80:	mov    dl,ch
  441d82:	jo     0x441d7f
  441d84:	xchg   ebp,eax
  441d85:	std    
  441d86:	cmp    al,0x78
  441d88:	sbb    BYTE PTR [esi-0x18],dl
  441d8b:	mov    dl,BYTE PTR [edi]
  441d8d:	enter  0x4fb3,0xef
  441d91:	add    eax,0x9375f8d6
  441d96:	mov    ah,0x4c
  441d98:	adc    DWORD PTR [ebx-0x3fac7c19],ecx
  441d9e:	cld    
  441d9f:	and    BYTE PTR [edx],0x1a
  441da2:	or     eax,0xb7d49b62
  441da7:	rcl    esi,1
  441da9:	jl     0x441e28
  441dab:	clc    
  441dac:	outs   dx,BYTE PTR ds:[esi]
  441dad:	lds    esp,FWORD PTR [eax]
  441daf:	sub    eax,0x4c8be22b
	...
  441dc8:	lahf   
  441dc9:	cwde   
  441dca:	jg     0x441e0f
  441dcc:	or     dh,BYTE PTR [eax-0x4376fb6a]
  441dd2:	cld    
  441dd3:	mov    ch,bh
  441dd5:	pop    edi
  441dd6:	push   ebp
  441dd7:	stc    
  441dd8:	adc    eax,0xd46e448
  441ddd:	jmp    0x441e55
  441ddf:	rcl    BYTE PTR [ebp+0xd],0x44
  441de3:	test   BYTE PTR [edx],ah
  441de5:	(bad)  
  441de7:	or     al,BYTE PTR [edi-0x67]
  441dea:	ror    BYTE PTR [edx+0x585378e1],0xeb
  441df1:	jno    0x441e00
  441df3:	add    al,0x37
  441df5:	sbb    eax,0x78e186ea
  441dfa:	inc    ebx
  441dfb:	pop    eax
  441dfc:	retf   
  441dfd:	or     BYTE PTR [edi],ch
  441dff:	out    dx,al
  441e00:	and    eax,0xe103a9c8
  441e05:	cwde   
  441e06:	pop    edx
  441e07:	add    ch,BYTE PTR [esi]
  441e09:	xlat   BYTE PTR ds:[ebx]
  441e0a:	jae    0x441e50
  441e0c:	fldenv [ebx+0x2]
  441e0f:	push   esi
  441e10:	stos   DWORD PTR es:[edi],eax
  441e11:	jno    0x441e75
  441e13:	cli    
  441e14:	pop    esp
  441e15:	and    esi,DWORD PTR [ebp+0x5d]
  441e18:	cmp    BYTE PTR [esi],cl
  441e1a:	xor    DWORD PTR [ecx+esi*1+0x5e],eax
  441e1e:	inc    BYTE PTR [ecx+0x3e00476]
  441e24:	bound  esp,QWORD PTR [ebp+esi*1+0x30]
  441e28:	daa    
  441e29:	or     ebp,DWORD PTR [edi]
  441e2b:	popf   
	...
  441e40:	js     0x441e1a
  441e42:	jmp    0xc2d2524a
  441e47:	scas   al,BYTE PTR es:[edi]
  441e48:	push   esi
  441e49:	jno    0x441e0a
  441e4b:	mov    DWORD PTR [ecx+0x71571a85],esp
  441e51:	sbb    esp,ebx
  441e53:	ret    
  441e54:	inc    ebp
  441e55:	fs mov edx,0x65e13081
  441e5b:	and    al,0x34
  441e5d:	jno    0x441e49
  441e5f:	mov    BYTE PTR [ecx+0x62675125],dl
  441e65:	fldl2t 
  441e67:	imul   ecx,DWORD PTR [ecx],0x74
  441e6a:	jg     0x441ec3
  441e6c:	jmp    0xb3f84c87
  441e71:	jo     0x441e74
  441e73:	(bad)  
  441e75:	fiadd  WORD PTR [eax-0x17]
  441e78:	loop   0x441e13
  441e7a:	ins    DWORD PTR es:[edi],dx
  441e7b:	fsubp  st(2),st
  441e7d:	and    al,0xf5
  441e7f:	mov    eax,0x54a964da
  441e84:	lea    esi,[edx+0x52]
  441e87:	mov    es:0x61e7fd74,eax
  441e8d:	fincstp 
  441e8f:	sbb    DWORD PTR [ecx-0x68],esi
  441e92:	inc    edx
  441e93:	repnz push ds
  441e95:	in     al,dx
  441e96:	push   esp
  441e97:	pop    esp
  441e98:	jecxz  0x441ed3
  441e9a:	cld    
  441e9b:	es or  eax,0x14935209
  441ea1:	idiv   edi
  441ea3:	add    BYTE PTR [eax],0x0
	...
  441eb6:	add    BYTE PTR [eax],al
  441eb8:	popa   
  441eb9:	jb     0x441ec9
  441ebb:	lods   eax,DWORD PTR ds:[esi]
  441ebc:	nop
  441ebd:	mov    al,0x0
  441ebf:	ins    BYTE PTR es:[edi],dx
  441ec0:	push   ds
  441ec1:	in     al,dx
  441ec2:	cmp    al,0x6c
  441ec4:	jecxz  0x441f07
  441ec6:	div    dh
  441ec8:	sub    al,0x9
  441eca:	clc    
  441ecb:	aam    0xbd
  441ecd:	fiadd  WORD PTR [eax-0x17]
  441ed0:	out    0x1c,al
  441ed2:	cmc    
  441ed3:	cmp    ebx,ebx
  441ed5:	pop    esp
  441ed6:	mov    eax,ds:0x51720cd2
  441edb:	pop    esp
  441edc:	loop   0x441f1e
  441ede:	test   dh,0xac
  441ee1:	or     eax,edi
  441ee3:	aam    0xe5
  441ee5:	fld    QWORD PTR [eax-0x17]
  441ee8:	loop   0x441e82
  441eea:	outs   dx,BYTE PTR ds:[esi]
  441eeb:	shr    al,cl
  441eed:	sbb    esi,ebp
  441eef:	je     0x441ea3
  441ef1:	cmp    esp,edi
  441ef3:	sahf   
  441ef4:	xchg   esp,eax
  441ef5:	div    edi
  441ef7:	fs xor eax,0xc15c85ae
  441efd:	gs clc 
  441eff:	add    ah,bl
  441f01:	add    eax,DWORD PTR [ebx+ebp*8-0x74]
  441f05:	pop    es
  441f06:	sti    
  441f07:	ret    
  441f08:	or     BYTE PTR gs:[esp+edi*1],dl
  441f0c:	sbb    DWORD PTR [eax+edi*8+0x7cd7a083],ebx
  441f13:	jle    0x441f0f
  441f15:	fild   DWORD PTR [eax]
  441f17:	xor    dh,BYTE PTR [eax]
  441f19:	pop    ebx
  441f1a:	lock add BYTE PTR fs:[eax],al
	...
  441f2e:	add    BYTE PTR [eax],al
  441f30:	retf   
  441f31:	pop    edx
  441f32:	fs cld 
  441f34:	retf   
  441f35:	pusha  
  441f36:	inc    esp
  441f37:	lock jmp 0x441f9a
  441f3a:	inc    esp
  441f3b:	in     al,dx
  441f3c:	jmp    0x441f9e
  441f3e:	inc    esp
  441f3f:	hlt    
  441f40:	fild   DWORD PTR [ecx+0x8068df9]
  441f46:	push   ecx
  441f47:	push   0xffffffb9
  441f49:	cmp    eax,0x1406bb69
  441f4f:	cmp    al,0x98
  441f51:	fwait
  441f52:	clc    
  441f53:	mov    ah,BYTE PTR [ebx+0x59]
  441f56:	cli    
  441f57:	je     0x441fd8
  441f59:	push   esp
  441f5a:	cli    
  441f5b:	jmp    0xe06:0xf00db7b
  441f62:	add    DWORD PTR [eax],eax
  441f64:	mov    esp,DWORD PTR [eax+0x4c]
  441f67:	cld    
  441f68:	push   es
  441f69:	and    al,0xa
  441f6b:	test   BYTE PTR [esp+edx*8+0x1f780000],bh
  441f72:	xor    BYTE PTR [ebp+0x17],dh
  441f75:	aad    0x82
  441f77:	mov    ebp,0x8d00db3b
  441f7c:	jbe    0x441f8b
  441f7e:	push   ecx
  441f7f:	push   0x14
  441f81:	push   es
  441f82:	sub    eax,0xf9d551b1
  441f87:	adc    eax,0x386a43
  441f8c:	(bad)  
  441f8d:	std    
  441f8e:	cmp    al,0x9
  441f90:	out    0xe7,eax
  441f92:	cld    
  441f93:	inc    DWORD PTR [eax]
	...
  441fa5:	add    BYTE PTR [eax],al
  441fa7:	add    BYTE PTR [edx-0x15],ah
  441faa:	mov    edi,0xfe29e7f7
  441faf:	adc    esi,0xffffff80
  441fb2:	add    al,0x0
  441fb4:	jmp    0xcfcf0c72
  441fb9:	dec    eax
  441fba:	push   eax
  441fbb:	stc    
  441fbc:	in     eax,dx
  441fbd:	or     bl,dh
  441fbf:	sub    eax,0xc08107e5
  441fc4:	push   esi
  441fc5:	xchg   ecx,eax
  441fc6:	jg     0x441f4b
  441fc8:	add    bl,BYTE PTR [esi+ecx*2]
  441fcb:	stc    
  441fcc:	fild   WORD PTR ds:0xa7c5fba5
  441fd2:	lods   al,BYTE PTR ds:[esi]
  441fd3:	test   BYTE PTR [eax-0x4abe6ae8],ch
  441fd9:	mov    bh,0x77
  441fdb:	shl    BYTE PTR [esi],0x99
  441fde:	jg     0x441f6b
  441fe0:	cli    
  441fe1:	lds    ecx,FWORD PTR [ebp-0x7]
  441fe4:	mov    bl,BYTE PTR ds:0xfc95fb89
  441fea:	cmp    al,0x74
  441fec:	sbb    ch,bh
  441fee:	ja     0x441f88
  441ff0:	mov    esp,DWORD PTR [edi+0x4d]
  441ff3:	push   eax
  441ff4:	adc    edx,DWORD PTR [ecx-0x14]
  441ff7:	jg     0x44205b
  441ff9:	cmp    al,0x67
  441ffc:	pop    esi
  441ffd:	push   edi
  441ffe:	(bad)  
  441fff:	call   esi
  442001:	in     eax,dx
  442002:	stos   DWORD PTR es:[edi],eax
  442003:	sti    
  442004:	pop    ebp
  442005:	lahf   
  442006:	adc    edi,eax
  442008:	dec    edx
  442009:	ja     0x442017
	...
  44201f:	add    BYTE PTR [edx-0xb],ah
  442022:	inc    ebx
  442023:	je     0x4420a1
  442025:	sbb    bh,ch
  442027:	mov    dl,bh
  442029:	pop    es
  44202a:	pop    ebx
  44202b:	stc    
  44202c:	xor    eax,0x3a4adad9
  442031:	test   BYTE PTR [ecx],dl
  442033:	push   ebp
  442034:	sub    edx,DWORD PTR [ebp-0x56]
  442037:	iret   
  442038:	outs   dx,BYTE PTR ds:[esi]
  442039:	bound  edx,QWORD PTR ds:0x6243e95c
  44203f:	pop    edx
  442040:	or     ebp,DWORD PTR [esi+0x73]
  442043:	retf   0x2a55
  442046:	jmp    0x67b73bb6
  44204b:	push   esp
  44204c:	sti    
  44204d:	jecxz  0x4420b0
  44204f:	push   esp
  442050:	push   ecx
  442051:	sbb    ebx,edi
  442053:	ret    
  442054:	in     eax,0x62
  442056:	popf   
  442057:	push   edi
  442058:	and    BYTE PTR [edx+0x5b6b4fcc],dh
  44205e:	stos   DWORD PTR es:[edi],eax
  44205f:	push   esp
  442060:	retf   
  442061:	ins    DWORD PTR es:[edi],dx
  442062:	cdq    
  442063:	push   esp
  442064:	jno    0x44207f
  442066:	fcmovnb st,st(3)
  442068:	mov    ebp,0x62692758
  44206d:	fldl2t 
  44206f:	add    al,0xe6
  442071:	jbe    0x44208b
  442073:	push   esp
  442074:	stos   DWORD PTR es:[edi],eax
  442075:	pop    ebx
  442076:	mov    gs:0xb3076d97,eax
  44207c:	call   edi
  44207e:	xchg   ebx,eax
  44207f:	push   esp
  442080:	cli    
  442081:	aad    0x69
  442083:	add    eax,DWORD PTR [eax]
	...
  442095:	add    BYTE PTR [eax],al
  442097:	add    BYTE PTR [edx+0x3],ah
  44209a:	jmp    0x75c3:0xdb0d5154
  4420a1:	push   esp
  4420a2:	stos   BYTE PTR es:[edi],al
  4420a3:	fldcw  WORD PTR [ebx]
  4420a5:	pop    esp
  4420a6:	pop    ebp
  4420a7:	ins    BYTE PTR es:[edi],dx
  4420a8:	ins    DWORD PTR es:[edi],dx
  4420a9:	ins    DWORD PTR es:[edi],dx
  4420aa:	iret   
  4420ab:	mov    ah,0xac
  4420ad:	or     al,BYTE PTR [edx-0x7c]
  4420b0:	(bad)  
  4420b1:	fxam   
  4420b3:	fistp  DWORD PTR [ecx+0x34]
  4420b6:	sub    al,BYTE PTR [ecx+ebx*8]
  4420b9:	inc    esi
  4420ba:	add    DWORD PTR [ecx-0x5078d53],ecx
  4420c0:	jbe    0x442043
  4420c2:	xchg   ecx,eax
  4420c3:	out    dx,al
  4420c4:	popa   
  4420c5:	fnstcw WORD PTR [ebp-0x57]
  4420c8:	or     al,bh
  4420ca:	push   0xffffffe9
  4420cc:	loop   0x442116
  4420ce:	cdq    
  4420cf:	nop
  4420d0:	mov    cl,0x72
  4420d2:	xor    al,0xb0
  4420d4:	scas   al,BYTE PTR es:[edi]
  4420d5:	pop    ss
  4420d6:	push   0x7e
  4420d8:	mov    cl,0xe2
  4420da:	scas   al,BYTE PTR es:[edi]
  4420db:	xchg   edx,eax
  4420dc:	jmp    0x3de1:0xc9e86b99
  4420e3:	inc    ecx
  4420e4:	ins    BYTE PTR es:[edi],dx
  4420e5:	cs in  al,dx
  4420e7:	jmp    0x442138
  4420e9:	cdq    
  4420ea:	pop    eax
  4420eb:	mov    bh,0xc
  4420ed:	xchg   esp,eax
  4420ee:	les    ebp,FWORD PTR [eax+0x42]
  4420f1:	popa   
  4420f2:	or     cl,ch
  4420f4:	popa   
  4420f5:	pusha  
  4420f6:	test   DWORD PTR ds:0xe900d92a,eax
	...
  442110:	hlt    
  442111:	pop    es
  442112:	dec    edi
  442113:	inc    ecx
  442114:	out    dx,al
  442115:	push   0x5de326f6
  44211a:	sbb    eax,0xd95c7b
  44211f:	add    DWORD PTR [edx+0x5c],edx
  442122:	test   BYTE PTR [esi],0x15
  442125:	test   al,0x7c
  442127:	fsub   DWORD PTR [ecx+0x6cd56a6c]
  44212d:	xchg   BYTE PTR [esi+0x6c],dl
  442130:	es icebp 
  442132:	dec    eax
  442133:	xchg   esp,eax
  442134:	loop   0x442153
  442136:	sbb    eax,0x861cb74d
  44213b:	gs cmp eax,0x61e9034f
  442141:	or     DWORD PTR [edx+edi*1-0x4f],edx
  442145:	xchg   DWORD PTR [esi+0x0],edi
  442148:	sti    
  442149:	mov    DWORD PTR [edi],esp
  44214b:	bound  bp,DWORD PTR [ecx]
  44214e:	inc    esp
  44214f:	pop    esi
  442150:	jg     0x4421be
  442152:	sub    eax,0x25bf86c5
  442157:	leave  
  442158:	pop    ebp
  442159:	out    dx,al
  44215a:	inc    esp
  44215b:	inc    esp
  44215c:	pop    ebx
  44215d:	pop    edx
  44215e:	cmp    eax,0xae256b24
  442163:	add    al,0x50
  442165:	mov    eax,ds:0xb4978cf8
  44216a:	add    al,0x7
  44216c:	sti    
  44216d:	xlat   BYTE PTR ds:[ebx]
  44216e:	call   0xfa4c6ed1
  442173:	test   DWORD PTR [eax],eax
	...
  442185:	add    BYTE PTR [eax],al
  442187:	add    bl,cl
  442189:	(bad)  
  44218a:	xchg   ebx,eax
  44218b:	sar    BYTE PTR [edi+0x18],0x74
  44218f:	or     cl,BYTE PTR [eax+0x15]
  442192:	arpl   WORD PTR [ecx+0x708b44f],cx
  442198:	retf   
  442199:	xlat   BYTE PTR ds:[ebx]
  44219a:	mov    eax,DWORD PTR [edi+ebx*2-0x44fffe93]
  4421a1:	daa    
  4421a2:	stc    
  4421a3:	adc    eax,0x386387
  4421a8:	push   ss
  4421a9:	in     al,dx
  4421aa:	sbb    al,0xb2
  4421ac:	mov    ecx,0xdae800d7
  4421b1:	in     al,0xfb
  4421b3:	dec    DWORD PTR [esi]
  4421b5:	sbb    BYTE PTR [ecx+0x48],bh
  4421b8:	into   
  4421b9:	pop    eax
  4421ba:	inc    ebp
  4421bb:	and    al,0xaf
  4421bd:	and    al,0x48
  4421bf:	(bad)  
  4421c0:	push   DWORD PTR [ebx-0x2874fd46]
  4421c6:	push   eax
  4421c7:	push   ebx
  4421c8:	fadd   DWORD PTR [esi]
  4421ca:	rol    DWORD PTR [ebp+0x662786bb],cl
  4421d0:	inc    edx
  4421d1:	sub    DWORD PTR [esi+ecx*1+0x62],eax
  4421d5:	or     al,0xf6
  4421d7:	xor    al,0x1f
  4421d9:	push   ds
  4421da:	sub    ebp,DWORD PTR ds:0x4c7c1b1b
  4421e0:	sahf   
  4421e1:	nop
  4421e2:	ja     0x442228
  4421e4:	xchg   BYTE PTR [eax-0x22994a4c],dl
  4421ea:	enter  0xff,0x0
	...
  4421fe:	add    BYTE PTR [eax],al
  442200:	fsubrp st(4),st
  442202:	sub    ah,bh
  442204:	popa   
  442205:	add    BYTE PTR [eax+ebp*8],0xc
  442209:	mov    esi,0x40dff951
  44220e:	add    dl,BYTE PTR [ebx+0x733cfd22]
  442214:	pop    eax
  442215:	das    
  442216:	inc    esp
  442217:	(bad)  
  442218:	jmp    0x442216
  44221a:	sub    al,bh
  44221c:	popa   
  44221d:	add    BYTE PTR [ebx+ecx*4],0xe6
  442221:	fadd   QWORD PTR [ebp+edi*8-0x1b]
  442225:	xor    BYTE PTR [eax+edi*8+0x3fedb477],0x62
  44222d:	push   edi
  44222f:	mov    edi,0xfe043c28
  442234:	les    esp,FWORD PTR [ebp-0x7c]
  442237:	pop    edi
  442238:	adc    BYTE PTR es:[ecx+0x13],0x8e
  44223d:	mov    es,esp
  44223f:	inc    DWORD PTR [edx]
  442241:	std    
  442242:	jecxz  0x442287
  442244:	(bad)  
  442245:	inc    DWORD PTR [ecx+edi*8+0x16]
  442249:	jns    0x442221
  44224b:	clc    
  44224c:	xor    bl,bl
  44224e:	out    dx,eax
  44224f:	xor    DWORD PTR [eax+0x40],0x4
  442253:	call   0xf9970bf6
  442258:	out    dx,eax
  442259:	hlt    
  44225a:	sub    BYTE PTR [eax],cl
  44225c:	pop    ebp
  44225d:	add    BYTE PTR [eax+ebp*8],0x59
  442261:	fnstenv [edx+0x4e]
	...
  442278:	imul   ebx,DWORD PTR [esi+eiz*2+0x27],0x5a
  44227d:	(bad)  
  44227e:	jmp    0x64ae6c86
  442283:	dec    esi
  442284:	dec    ebx
  442285:	pop    esp
  442286:	outs   dx,BYTE PTR ds:[esi]
  442287:	daa    
  442288:	adc    al,0xd7
  44228a:	jmp    0x5a7f6c92
  44228f:	dec    esi
  442290:	cmp    edx,DWORD PTR [edx+ebp*4-0x35]
  442294:	xchg   esi,eax
  442295:	add    al,0x6d
  442297:	mov    edi,0xb438ad81
  44229c:	call   0x1475e8f5
  4422a1:	push   0xffffffea
  4422a3:	mov    bl,0x9e
  4422a5:	push   es
  4422a6:	jg     0x4422e1
  4422a8:	loope  0x442242
  4422aa:	clc    
  4422ab:	mov    DWORD PTR [ebx+0x33c80db0],0x210ce2e5
  4422b5:	in     al,dx
  4422b6:	and    BYTE PTR ds:0xbf70f31d,dl
  4422bc:	and    DWORD PTR [ecx+0x617e775c],esi
  4422c2:	jmp    0x6203:0x52306203
  4422c9:	fst    DWORD PTR [ecx-0x7f]
  4422cc:	mov    bl,0x69
  4422ce:	das    
  4422cf:	jle    0x4422ef
  4422d1:	mov    ch,0xf1
  4422d3:	mov    bl,0xd8
  4422d5:	inc    esp
  4422d6:	(bad)  
  4422d7:	jg     0x44233b
  4422d9:	fldl2t 
  4422db:	jle    0x4422dd
	...
  4422ed:	add    BYTE PTR [eax],al
  4422ef:	add    dh,ch
  4422f1:	mov    ah,0xf5
  4422f3:	cli    
  4422f4:	xchg   ebp,eax
  4422f5:	imul   eax,DWORD PTR [edx],0xff6a211b
  4422fb:	test   DWORD PTR [edx-0x19bcb327],esp
  442301:	cwde   
  442302:	add    DWORD PTR [edi+esi*2-0x44],edi
  442306:	rol    BYTE PTR [edi-0x6e2ab18],0x66
  44230d:	imul   edi,eax,0x10bdea6c
  442313:	loopne 0x442376
  442315:	fst    DWORD PTR [eax+0x41]
  442318:	fld    DWORD PTR [bx+si]
  44231b:	imul   edx,DWORD PTR [ebp+0x21daa4cc],0x7dfc8b69
  442325:	int    0x40
  442327:	jmp    0xe961810e
  44232c:	pop    edi
  44232d:	fld    DWORD PTR [eax]
  44232f:	cmp    ebx,esp
  442331:	pop    ebp
  442332:	sbb    eax,0xd95ce5
  442337:	cmp    DWORD PTR [ebp+0x3a6d868b],ebx
  44233d:	imul   eax,DWORD PTR [ebx],0x860961e9
  442343:	ins    DWORD PTR es:[edi],dx
  442344:	dec    edx
  442345:	gs add al,0xe9
  442348:	popa   
  442349:	or     eax,edi
  44234b:	aas    
  44234c:	jecxz  0x44239b
  44234e:	sbb    eax,0xd96699
  442353:	nop
	...
  442368:	and    ebx,ecx
  44236a:	add    cl,ch
  44236c:	sub    DWORD PTR [edi+ebp*8+0x7d541546],edx
  442373:	add    eax,0xe9f86716
  442378:	icebp  
  442379:	push   ebx
  44237a:	jge    0x442381
  44237c:	pop    edx
  44237d:	fild   DWORD PTR [eax]
  44237f:	jmp    0xc5c17775
  442384:	sub    DWORD PTR [edi-0x8],esp
  442387:	jmp    0xc5c1775d
  44238c:	(bad)  
  44238d:	fiadd  DWORD PTR [eax]
  44238f:	add    BYTE PTR [ebx+0x2c],bh
  442392:	mov    eax,DWORD PTR [edi+eiz*4-0x74fffee4]
  442399:	sub    al,0x8b
  44239b:	test   BYTE PTR [edi+0x7bfffdc8],ah
  4423a1:	test   BYTE PTR [esp+eax*1+0x4b],dh
  4423a5:	fcom   QWORD PTR [eax-0x18]
  4423a8:	mov    ah,0xd
  4423aa:	cli    
  4423ab:	(bad)  
  4423ac:	mov    eax,0xfb851520
  4423b1:	xchg   ebp,eax
  4423b2:	or     al,0x8d
  4423b4:	iret   
  4423b5:	rcr    BYTE PTR [eax],0xb
  4423b8:	dec    ebx
  4423b9:	fsub   st(0),st
  4423bb:	sub    BYTE PTR [ebp+0x3e83fa16],cl
  4423c1:	pusha  
  4423c2:	pop    eax
  4423c3:	inc    esp
  4423c4:	or     edx,DWORD PTR [edi]
  4423c6:	je     0x4423cf
  4423c8:	pop    eax
  4423c9:	sbb    BYTE PTR [eax+ecx*4],dl
	...
  4423e0:	or     bl,BYTE PTR [eax+edi*8+0xdcedb8]
  4423e7:	add    BYTE PTR [esi+0xa001d60],cl
  4423ed:	fadd   QWORD PTR [eax]
  4423ef:	mov    BYTE PTR [ebx],dl
  4423f1:	pushf  
  4423f2:	aas    
  4423f3:	jne    0x442376
  4423f5:	ss pop ebx
  4423f7:	mov    al,0xca
  4423f9:	xor    dh,BYTE PTR [edi-0x3c]
  4423fc:	inc    ebx
  4423fd:	addr16 clc 
  4423ff:	(bad)  
  442400:	js     0x44245f
  442402:	in     eax,0x58
  442404:	mov    bh,0xdb
  442406:	add    BYTE PTR [ebx-0x2a],dl
  442409:	sub    eax,0xc02f8b51
  44240e:	fs add al,0xbb
  442411:	fstp   TBYTE PTR [ebp-0xf]
  442414:	shl    edi,cl
  442416:	mov    BYTE PTR [eax-0x75],al
  442419:	loop   0x4423ec
  44241b:	lea    esp,[edx-0x2]
  44241e:	pop    ds
  44241f:	fs pusha 
  442421:	jb     0x442427
  442423:	call   0xf98b5a64
  442428:	out    0xb1,eax
  44242a:	fadd   DWORD PTR [edi]
  44242c:	or     BYTE PTR [ebx-0x54],dh
  44242f:	out    0x22,al
  442431:	jno    0x442437
  442433:	add    bh,dl
  442435:	mov    ch,0x28
  442437:	adc    BYTE PTR [edx-0x41db770b],dh
  44243d:	jb     0x442443
  44243f:	add    BYTE PTR [edx+0xa7f097],dh
	...
  442455:	add    BYTE PTR [eax],al
  442457:	add    BYTE PTR [eax-0x50],dh
  44245a:	cld    
  44245b:	test   BYTE PTR [edx-0xc],cl
  44245e:	inc    edi
  44245f:	stc    
  442460:	scas   eax,DWORD PTR es:[edi]
  442461:	je     0x44243d
  442463:	add    edi,DWORD PTR [ecx]
  442465:	push   ebp
  442466:	adc    dl,ch
  442468:	xlat   BYTE PTR ds:[ebx]
  442469:	lods   al,BYTE PTR ds:[esi]
  44246a:	sub    BYTE PTR [edx+ecx*1],bh
  44246d:	es jne 0x44246b
  442470:	adc    eax,0xe7093cf5
  442475:	cmp    edi,ebp
  442477:	jmp    DWORD PTR [edx-0x15]
  44247a:	test   BYTE PTR [edx-0x7b0b636a],0x63
  442481:	ret    0xf8ad
  442484:	xchg   edx,eax
  442485:	jl     0x442506
  442487:	shr    BYTE PTR [esi+0x68],0x81
  44248b:	clc    
  44248c:	arpl   WORD PTR [ecx],cx
  44248e:	lea    eax,[eax]
  442490:	bound  esi,QWORD PTR [eax+0x4e]
  442493:	inc    esp
  442494:	xchg   BYTE PTR [eax-0xc],ah
  442497:	or     dh,bl
  442499:	lock cld 
  44249b:	jmp    DWORD PTR [edx-0x52]
  44249e:	mov    esi,0x23246007
  4424a3:	mov    esp,DWORD PTR [esi]
  4424a5:	fcom   QWORD PTR [eax]
  4424a7:	push   eax
  4424a8:	(bad)  
  4424aa:	das    
  4424ab:	pop    esp
  4424ac:	arpl   ax,bx
  4424ae:	jmp    0x96de02b6
  4424b3:	repnz out 0xd7,al
  4424b6:	push   esp
  4424b7:	mov    eax,0x372c941
	...
  4424d0:	sub    al,0xe
  4424d2:	div    DWORD PTR [ebx-0x28d5a3a3]
  4424d8:	mov    ds:0x64fba06f,eax
  4424dd:	jmp    0xb415:0xbda67f63
  4424e4:	fimul  WORD PTR [ebp-0x27980a3]
  4424ea:	jmp    0x4424ef
  4424ec:	bound  esi,QWORD PTR [ecx+0x65]
  4424ef:	sar    BYTE PTR [edx],0x66
  4424f2:	pop    ebp
  4424f3:	inc    ebx
  4424f4:	mov    cl,0xdc
  4424f6:	inc    ebx
  4424f7:	add    DWORD PTR [edi-0x2181388e],edx
  4424fd:	mov    esp,0xd9620209
  442502:	cmp    DWORD PTR [ecx+0x28],edi
  442505:	jno    0x4424d0
  442507:	dec    esp
  442508:	or     esp,DWORD PTR [esi+0x63]
  44250b:	sub    esp,ecx
  44250d:	xor    esi,0xe9627eba
  442513:	xlat   BYTE PTR ds:[ebx]
  442514:	xchg   esi,eax
  442515:	pop    edx
  442516:	jae    0x442519
  442518:	jbe    0x442521
  44251a:	arpl   bp,di
  44251c:	xchg   esi,eax
  44251d:	push   edx
  44251e:	jmp    0xee015ba1
  442523:	mov    cl,0x32
  442525:	mov    dx,0x4eff
  442529:	popa   
  44252a:	jmp    0x442503
  44252c:	imul   DWORD PTR [edi-0x33]
  44252f:	dec    esp
  442530:	mov    ebx,0xc53065
	...
  442545:	add    BYTE PTR [eax],al
  442547:	add    BYTE PTR [ebp-0x23],bl
  44254a:	add    BYTE PTR [ebp+0x53d5280],bh
  442550:	push   edx
  442551:	or     DWORD PTR [edi+esi*1-0x16fea7c7],ecx
  442558:	popa   
  442559:	pop    ebp
  44255a:	rcr    DWORD PTR [ebp+0x5c075c90],0xcd
  442561:	mov    ecx,0x17607210
  442566:	push   eax
  442567:	(bad)  
  442568:	mov    al,0xdd
  44256a:	jge    0x442595
  44256c:	xchg   esp,eax
  44256d:	mov    DWORD PTR [ebp+0x50c93da5],0xc4c8a93c
  442577:	sti    
  442578:	and    DWORD PTR [ebp+0x7d],esp
  44257b:	test   eax,0xce115849
  442580:	cdq    
  442581:	(bad)  
  442582:	in     al,dx
  442583:	lock push esp
  442585:	mov    es,WORD PTR [ecx+eax*8-0x55722da4]
  44258c:	and    eax,0x2c1d0e62
  442591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442592:	add    BYTE PTR [edx-0x4a],dh
  442595:	pop    eax
  442596:	fcom   QWORD PTR [edi+edx*1]
  442599:	(bad)  
  44259a:	cld    
  44259b:	xor    ch,ah
  44259d:	pop    edi
  44259e:	adc    ebx,esi
  4425a0:	and    cl,BYTE PTR [ebp-0x670c79b2]
  4425a6:	adc    ebp,DWORD PTR [ecx]
  4425a8:	pop    esi
  4425a9:	pop    es
  4425aa:	clc    
  4425ab:	fadd   QWORD PTR [eax]
	...
  4425bd:	add    BYTE PTR [eax],al
  4425bf:	add    BYTE PTR [ebp-0x2d],cl
  4425c2:	inc    eax
  4425c3:	jmp    0xc79c4c2c
  4425c8:	or     cl,BYTE PTR [esi]
  4425ca:	and    BYTE PTR ds:0xe900d906,0x27
  4425d1:	fld    QWORD PTR [eax]
  4425d3:	bound  esp,QWORD PTR [edx+0x4efffcb8]
  4425d9:	sbb    eax,0x9e6a0574
  4425de:	adc    al,0xeb
  4425e0:	mov    ah,ch
  4425e2:	aaa    
  4425e3:	or     al,0x40
  4425e5:	cdq    
  4425e6:	and    al,0x8
  4425e8:	adc    bl,BYTE PTR [esi+0x74cac708]
  4425ee:	idiv   bh
  4425f0:	jnp    0x4425ca
  4425f2:	mov    dh,0x8
  4425f4:	jnp    0x442651
  4425f6:	jne    0x44261c
  4425f8:	(bad)  
  4425f9:	fcom   DWORD PTR [ecx-0x75]
  4425fc:	bound  ecx,QWORD PTR [edx+0x43b3204]
  442602:	dec    esi
  442603:	mov    edi,DWORD PTR [esp+esi*2-0x3cc2ccae]
  44260a:	ret    0x8574
  44260d:	and    eax,0x8a832474
  442612:	inc    esp
  442613:	cmp    DWORD PTR [ebp+ebp*2-0x684fc08e],ebp
  44261a:	or     al,0xff
  44261c:	das    
  44261d:	dec    eax
  44261e:	cli    
  44261f:	je     0x442680
  442621:	ins    DWORD PTR es:[edi],dx
  442622:	stc    
  442623:	adc    eax,0x0
	...
  442638:	jae    0x4426a6
  44263a:	cmp    BYTE PTR [eax],al
  44263c:	mov    ds,WORD PTR [eax]
  44263e:	je     0x44266f
  442640:	cmp    eax,0x691071d4
  442645:	neg    ebp
  442647:	and    eax,DWORD PTR [eax-0x476f369]
  44264d:	imul   ebx,ebp,0xf
  442650:	pop    ebx
  442651:	adc    BYTE PTR [ebp+0x24],ch
  442654:	or     ecx,DWORD PTR [edi]
  442656:	adc    al,0x78
  442658:	or     BYTE PTR [eax-0x76747b08],bl
  44265e:	or     BYTE PTR [ebx+0x20e06c04],cl
  442664:	bound  edx,QWORD PTR [eax-0x4e2006b5]
  44266a:	shl    dl,1
  44266c:	jo     0x442620
  44266e:	push   esi
  44266f:	inc    BYTE PTR ds:0xa058aa71
  442675:	jne    0x44267b
  442677:	push   ebx
  442678:	fldenv [ebp-0x41d87554]
  44267e:	mov    bl,0x7c
  442680:	mov    ds:0x4e8d5c69,eax
  442685:	int3   
  442686:	dec    edx
  442687:	test   DWORD PTR [edi],edx
  442689:	xchg   BYTE PTR [ebp-0x1],dh
  44268c:	out    0xb1,al
  44268e:	rol    BYTE PTR [ebx],1
  442690:	xor    BYTE PTR [edx-0x131ee9aa],dh
  442696:	aas    
  442697:	(bad)  
  442698:	out    dx,eax
  442699:	ja     0x44271a
  44269b:	jnp    0x44269d
	...
  4426ad:	add    BYTE PTR [eax],al
  4426af:	add    BYTE PTR [edx-0x42],ch
  4426b2:	int    0x3
  4426b4:	xchg   ecx,eax
  4426b5:	xor    BYTE PTR [esi-0x3],dl
  4426b8:	nop
  4426b9:	xor    BYTE PTR [ebp+0x7c609784],bh
  4426bf:	dec    DWORD PTR ds:0x66be3b72
  4426c5:	jo     0x44266e
  4426c7:	test   BYTE PTR [esi],bh
  4426c9:	lock pusha 
  4426cb:	clc    
  4426cc:	xchg   ebx,eax
  4426cd:	mov    edi,0x39e950b2
  4426d2:	xlat   BYTE PTR ds:[ebx]
  4426d3:	jmp    esi
  4426d5:	retf   
  4426d6:	hlt    
  4426d7:	test   BYTE PTR [ecx+ebx*2],bl
  4426da:	and    DWORD PTR [esi],esi
  4426dc:	add    al,0x54
  4426de:	add    eax,0x72499976
  4426e4:	pop    esi
  4426e5:	out    0xba,eax
  4426e7:	or     ebp,ebp
  4426e9:	and    bl,BYTE PTR [edx+ebx*8+0x6e]
  4426ed:	repnz dec ecx
  4426ef:	test   BYTE PTR [edx-0x210c2a27],ah
  4426f5:	adc    esp,esi
  4426f7:	pop    ebx
  4426f8:	adc    ch,ch
  4426fa:	dec    edi
  4426fb:	dec    ecx
  4426fc:	ficomp WORD PTR [ecx-0x26f10032]
  442702:	push   edx
  442703:	push   es
  442704:	test   BYTE PTR [esi+0x73],bh
  442707:	ret    0x4e59
  44270a:	and    BYTE PTR [ebp-0x7164ed6],al
  442710:	icebp  
  442711:	cdq    
  442712:	mov    edx,0x5b
	...
  442727:	add    BYTE PTR [ebp-0x19b6e861],ah
  44272d:	jle    0x4426c4
  44272f:	sti    
  442730:	fcom   DWORD PTR [edx]
  442732:	repnz pop ebx
  442734:	xchg   ebx,eax
  442735:	sbb    bh,bh
  442737:	dec    eax
  442738:	fist   WORD PTR [edx+esi*8]
  44273b:	pop    ebx
  44273c:	shl    DWORD PTR [edx],0xf0
  44273f:	dec    eax
  442740:	or     eax,DWORD PTR [ebx]
  442742:	cmp    al,BYTE PTR [ebx]
  442744:	mov    bh,0x4e
  442746:	lds    esp,FWORD PTR [esi+0x7de9dd17]
  44274c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44274d:	ffree  st(1)
  44274f:	cmp    eax,DWORD PTR [esi-0x5183389d]
  442755:	mov    ebp,0x4f357af1
  44275a:	push   ds
  44275b:	and    BYTE PTR [esi-0x65],bl
  44275e:	jmp    0x6b02:0xf1997702
  442765:	dec    esp
  442766:	stos   BYTE PTR es:[edi],al
  442767:	inc    ebp
  442768:	fnstenvw [edx-0x49]
  44276c:	inc    ecx
  44276d:	fld    QWORD PTR [ecx-0x789d452b]
  442773:	xchg   ebx,eax
  442774:	std    
  442775:	xchg   edi,eax
  442776:	out    0x3,al
  442778:	imul   ebp,DWORD PTR [ebx],0x29
  44277b:	add    BYTE PTR [edi+0x71],ch
  44277e:	add    ecx,ebp
  442780:	adc    eax,0x66f548ce
  442785:	mov    ah,0xc0
  442787:	sub    ch,cl
  442789:	int3   
  44278a:	ret    0x39
	...
  44279d:	add    BYTE PTR [eax],al
  44279f:	add    BYTE PTR [ecx+0x1ffab924],bl
  4427a5:	mov    DWORD PTR [ecx+0x2a],edi
  4427a8:	or     al,0x5d
  4427aa:	in     eax,0x6a
  4427ac:	adc    eax,0x8d4d8261
  4427b1:	aad    0x0
  4427b3:	jmp    0x981e84a6
  4427b8:	call   0xe8e4:0xd2ed4427
  4427bf:	jmp    0x9c8ce661
  4427c4:	(bad)  
  4427c5:	sti    
  4427c6:	push   ss
  4427c7:	scas   eax,DWORD PTR es:[edi]
  4427c8:	lahf   
  4427c9:	(bad)  
  4427ca:	mov    eax,0xd91789
  4427cf:	adc    bh,BYTE PTR [ecx+0x5c]
  4427d2:	ins    DWORD PTR es:[edi],dx
  4427d3:	int    0x75
  4427d5:	pop    esp
  4427d6:	jne    0x44279d
  4427d8:	dec    ebp
  4427d9:	push   esi
  4427da:	cmp    eax,0xc76520d
  4427df:	push   ebx
  4427e0:	push   edx
  4427e1:	add    ebp,DWORD PTR [ebx-0x1d]
  4427e4:	(bad)  [ecx+0x58]
  4427e7:	call   0xbfae2a4d
  4427ec:	ds ja  0x4427f0
  4427ef:	jmp    0xc3a58a02
  4427f4:	pop    esi
  4427f5:	fld    DWORD PTR [ebx+0xc14245]
  4427fb:	nop
  4427fc:	(bad)  
  4427fd:	pop    edi
  4427fe:	clc    
  4427ff:	jmp    0xfd61358e
	...
  442818:	test   eax,0xa58e4f77
  44281d:	pop    esp
  44281e:	rol    DWORD PTR [eax],0xec
  442821:	loopne 0x442849
  442823:	add    ebx,edi
  442825:	fdivr  QWORD PTR [ebp-0x38]
  442828:	jecxz  0x4427e0
  44282a:	leave  
  44282b:	dec    BYTE PTR [esp+ebx*2+0x75]
  44282f:	and    al,0xd7
  442831:	fmul   QWORD PTR [ecx]
  442833:	test   BYTE PTR [ebx-0x2a],bl
  442836:	add    BYTE PTR [eax],al
  442838:	cmp    edx,DWORD PTR [esp+eax*1-0x57a66400]
  44283f:	add    bl,cl
  442841:	fmul   QWORD PTR [ebx-0x3d3298b4]
  442847:	inc    esp
  442848:	push   edi
  442849:	ins    BYTE PTR es:[edi],dx
  44284a:	clc    
  44284b:	out    0x6,eax
  44284d:	sar    edx,cl
  44284f:	push   ecx
  442851:	fmul   QWORD PTR [ebx-0x172758b4]
  442857:	out    0xb3,al
  442859:	push   ss
  44285a:	cli    
  44285b:	test   BYTE PTR [ebx-0x77],cl
  44285e:	pop    ss
  44285f:	mov    eax,edi
  442861:	sar    BYTE PTR [ecx*4-0x7cc73f41],0xf3
  442869:	ret    
  44286a:	add    BYTE PTR [edi],cl
  44286c:	mov    ah,0x15
  44286e:	jge    0x442830
  442870:	shl    DWORD PTR [eax],cl
  442872:	and    al,0x13
  442874:	cmp    al,0xf0
  442876:	ror    BYTE PTR [edi],0xe5
  442879:	sbb    edx,DWORD PTR [ecx-0x18]
	...
  442890:	in     al,0xcc
  442892:	cli    
  442893:	call   DWORD PTR [ecx+0x674c8bd5]
  442899:	shr    eax,1
  44289b:	pushf  
  44289c:	xor    dl,BYTE PTR [esi]
  44289e:	cli    
  44289f:	or     BYTE PTR [edi-0x47],0x5
  4428a3:	add    BYTE PTR [esi+0x60],dh
  4428a6:	jge    0x44286e
  4428a8:	repnz lahf 
  4428aa:	add    BYTE PTR [eax],al
  4428ac:	bound  esi,QWORD PTR [edx+0x79]
  4428af:	mov    WORD PTR [esi-0x56],es
  4428b2:	add    al,BYTE PTR [eax]
  4428b4:	bound  ebp,QWORD PTR [edi]
  4428b6:	js     0x4428dc
  4428b8:	xchg   edx,eax
  4428b9:	je     0x4428bf
  4428bb:	add    BYTE PTR [esi],bh
  4428bd:	pinsrw mm7,edi,0xc5
  4428c1:	xchg   esp,eax
  4428c2:	or     bh,dl
  4428c4:	aad    0xf6
  4428c6:	adc    BYTE PTR [eax-0x74fbc9bd],al
  4428cc:	fmulp  st(5),st
  4428ce:	mov    al,0xfd
  4428d0:	mov    ebp,0x7e447571
  4428d5:	fidivr DWORD PTR [ecx+0x44]
  4428d8:	xchg   BYTE PTR [esi-0x4c],bh
  4428db:	mov    dl,BYTE PTR [esi]
  4428dd:	into   
  4428de:	sbb    cl,al
  4428e0:	es (bad) 
  4428e2:	sbb    BYTE PTR [ebx+ebp*8+0x63e80431],dh
  4428e9:	cmp    DWORD PTR [esi],0xfffffff9
  4428ec:	clc    
  4428ed:	jno    0x442968
  4428ef:	mov    WORD PTR [esi+0x2e],es
  4428f2:	add    al,BYTE PTR [eax]
	...
  442908:	(bad)  
  442909:	jmp    0x23b7:0xb75523b7
  442910:	cmp    bh,BYTE PTR [edx]
  442912:	jne    0x442954
  442914:	(bad)  
  442915:	fadd   DWORD PTR ds:0x5a785437
  44291b:	push   edi
  44291c:	dec    ebp
  44291d:	data16 sub al,0xe
  442920:	mov    ds:0x6a758170,al
  442925:	jo     0x4428ef
  442927:	or     ch,cl
  442929:	sub    BYTE PTR [edx],bl
  44292b:	inc    ebp
  44292c:	pop    edx
  44292d:	icebp  
  44292e:	dec    ebx
  44292f:	add    BYTE PTR [esi+0x6171f7ce],al
  442935:	stc    
  442936:	rol    DWORD PTR [edi],0x15
  442939:	fcmovbe st,st(4)
  44293b:	sub    DWORD PTR [ebp-0x618915eb],0xffffffb5
  442942:	leave  
  442943:	jp     0x4428eb
  442945:	mov    ch,0xd1
  442947:	jbe    0x4428e7
  442949:	mov    ch,0xdd
  44294b:	mov    bl,0xd8
  44294d:	or     eax,0x162317be
  442952:	(bad)  
  442953:	pop    ds
  442954:	xchg   edx,eax
  442955:	sub    al,BYTE PTR ss:[eax+eiz*4]
  442959:	adc    eax,0x96621c06
  44295e:	sahf   
  44295f:	pop    ds
  442960:	jbe    0x442987
  442962:	popa   
  442963:	les    edi,FWORD PTR [ebp-0x47ed8d8a]
  442969:	pop    esi
  44296a:	jb     0x44292c
	...
  442980:	or     edx,0xbd81c01e
  442986:	cmp    DWORD PTR [eax+0x22],0x41c869d9
  44298d:	retf   0x78e9
  442990:	mov    ds:0x7f3d9cce,eax
  442995:	aam    0x51
  442997:	ins    BYTE PTR es:[edi],dx
  442998:	xor    al,0xd9
  44299a:	jmp    0x69e8a452
  44299f:	jecxz  0x4429c2
  4429a1:	fdecstp 
  4429a3:	out    dx,al
  4429a4:	loope  0x442971
  4429a6:	test   eax,0xe8db9903
  4429ab:	add    esp,DWORD PTR [edx-0x32]
  4429ae:	mov    gs:0xa4d75e48,eax
  4429b4:	stos   DWORD PTR es:[edi],eax
  4429b5:	add    ah,BYTE PTR [ebx+0x5e]
  4429b8:	cdq    
  4429b9:	call   0x76e9:0xf3457930
  4429c0:	cwde   
  4429c1:	rcl    ecx,1
  4429c3:	gs push 0x5f
  4429c6:	add    DWORD PTR [esi-0x1ee2ea51],esi
  4429cc:	pusha  
  4429cd:	cwde   
  4429ce:	call   DWORD PTR [eax-0x6b]
  4429d1:	sbb    DWORD PTR [ecx],eax
  4429d3:	adc    eax,0x81c75507
  4429d8:	rcl    BYTE PTR [ecx-0x64857109],1
  4429de:	push   edi
  4429df:	stos   DWORD PTR es:[edi],eax
  4429e0:	in     eax,dx
  4429e1:	pop    ebp
  4429e2:	or     DWORD PTR [ebp+0x0],0x0
	...
  4429f8:	icebp  
  4429f9:	pop    ebx
  4429fa:	clc    
  4429fb:	jmp    0xe56136e2
  442a00:	push   ds
  442a01:	or     al,0x4e
  442a03:	mov    edi,0x72fb54fe
  442a08:	sub    BYTE PTR [edi-0xc0f4725],ch
  442a0e:	inc    dl
  442a10:	mov    ch,0x52
  442a12:	dec    ebp
  442a13:	or     eax,0x51c6544e
  442a18:	push   es
  442a19:	cwde   
  442a1a:	div    DWORD PTR [esi]
  442a1c:	sbb    cl,BYTE PTR [ebp+0x1d]
  442a1f:	cmc    
  442a20:	arpl   cx,bx
  442a22:	add    BYTE PTR [ebp+ecx*8-0x47],dh
  442a26:	sbb    BYTE PTR [ecx-0x3b1677f6],bh
  442a2c:	pushaw 
  442a2e:	clc    
  442a2f:	bound  edx,QWORD PTR [ecx]
  442a31:	pop    edx
  442a32:	out    dx,eax
  442a33:	jge    0x4429ee
  442a35:	fdiv   QWORD PTR [ebp+eax*8-0x1607a0bb]
  442a3c:	popa   
  442a3d:	in     eax,0x18
  442a3f:	out    dx,al
  442a40:	in     al,0xb5
  442a42:	sbb    al,0xeb
  442a44:	popa   
  442a45:	fincstp 
  442a47:	xchg   ebp,eax
  442a48:	cmp    ah,BYTE PTR [ebp+0x6261e902]
  442a4e:	push   cs
  442a4f:	pop    ecx
  442a50:	dec    ebp
  442a51:	sbb    DWORD PTR [ecx],eax
  442a53:	add    BYTE PTR [esi-0x1bbe92eb],bh
  442a59:	loope  0x442a77
  442a5b:	sub    BYTE PTR [eax],al
	...
  442a6d:	add    BYTE PTR [eax],al
  442a6f:	add    BYTE PTR [ecx],cl
  442a71:	fld    DWORD PTR [eax]
  442a73:	lea    esi,[edi+0x71]
  442a76:	adc    BYTE PTR [edx-0x6],ch
  442a79:	cs clc 
  442a7b:	addr16 sti 
  442a7d:	fadd   DWORD PTR [eax]
  442a7f:	rcl    ah,0xe1
  442a82:	sbb    al,0x44
  442a84:	or     ecx,ebx
  442a86:	add    al,ch
  442a88:	sbb    DWORD PTR [esi+0x157ffff9],edx
  442a8e:	je     0x442aaf
  442a90:	push   esp
  442a91:	ret    0x1244
  442a94:	mov    edx,ebp
  442a96:	jne    0x442a90
  442a98:	or     esp,DWORD PTR ds:0xd5ec3d01
  442a9e:	add    BYTE PTR [eax],al
  442aa0:	sahf   
  442aa1:	retf   
  442aa2:	cli    
  442aa3:	ret    
  442aa4:	dec    ebx
  442aa5:	pushf  
  442aa6:	pop    esp
  442aa7:	(bad)  
  442aa9:	and    al,0xf9
  442aab:	jmp    DWORD PTR [esp+eiz*2-0xe]
  442aaf:	(bad)  
  442ab0:	(bad)  
  442ab1:	je     0x442ac7
  442ab3:	call   0x3dbfe0
  442ab8:	adc    BYTE PTR [edi],cl
  442aba:	pop    edx
  442abb:	pop    esi
  442abc:	(bad)  
  442abd:	jnp    0x442b36
  442abf:	les    edi,FWORD PTR [ebx-0x2a]
  442ac2:	add    BYTE PTR [eax],al
  442ac4:	dec    ecx
  442ac5:	rol    DWORD PTR [eax],0x53
  442ac8:	int    0x4b
  442aca:	rcl    BYTE PTR [edi+0x21],1
  442acd:	cwde   
  442ace:	or     DWORD PTR cs:[ebx+0x63],ecx
  442ad2:	mov    edi,0xe8
	...
  442ae7:	add    BYTE PTR [edi+0x12],dl
  442aea:	sti    
  442aeb:	inc    DWORD PTR [edx]
  442aed:	mov    al,0xf5
  442aef:	(bad)  
  442af0:	cmp    ebx,DWORD PTR [edi-0x779d7429]
  442af6:	xchg   edi,ecx
  442af8:	jno    0x442b33
  442afa:	xchg   eax,esi
  442afc:	cmp    bh,BYTE PTR [edx]
  442afe:	dec    edx
  442aff:	cli    
  442b00:	and    eax,0x27fd455f
  442b05:	sbb    ch,bh
  442b07:	addr16 jb 0x442add
  442b0a:	cld    
  442b0b:	push   DWORD PTR [ecx+0x23]
  442b0e:	int    0x4f
  442b10:	cli    
  442b11:	xor    DWORD PTR [ecx-0x909e00],esp
  442b17:	test   BYTE PTR [esi-0x6ef2eb6a],ah
  442b1d:	outs   dx,BYTE PTR ds:[esi]
  442b1e:	jecxz  0x442b79
  442b20:	(bad)  [eax-0x7b]
  442b23:	dec    edi
  442b24:	data16 (bad) 
  442b26:	ds add al,0x62
  442b29:	idiv   DWORD PTR [edi-0x37488ddd]
  442b2f:	and    ebx,DWORD PTR [edx-0x7d]
  442b32:	or     eax,0xbff7686e
  442b37:	and    esp,DWORD PTR [esi-0x39]
  442b3a:	enter  0x6623,0x1b
  442b3e:	or     DWORD PTR ds:0xfe2731a2,ebp
  442b44:	push   eax
  442b45:	mov    dl,0x3d
  442b47:	adc    BYTE PTR [edx-0x11],ah
  442b4a:	daa    
  442b4b:	sub    BYTE PTR [eax],al
	...
  442b5d:	add    BYTE PTR [eax],al
  442b5f:	add    bh,bl
  442b61:	sub    eax,0x25311fe0
  442b66:	ficom  DWORD PTR [eax+0x12]
  442b69:	cmc    
  442b6a:	mov    edi,0x91224623
  442b6f:	inc    esp
  442b70:	inc    esi
  442b71:	mov    dl,ah
  442b73:	mov    bl,BYTE PTR [esi]
  442b75:	xchg   esi,eax
  442b76:	loopne 0x442bc7
  442b78:	jmp    0x4b2bb1e3
  442b7d:	call   0xda92243f
  442b82:	gs inc esp
  442b84:	pop    ebx
  442b85:	push   ebp
  442b86:	test   DWORD PTR [edx],0xb962d962
  442b8c:	popa   
  442b8d:	dec    esi
  442b8e:	out    dx,eax
  442b8f:	hlt    
  442b90:	push   ss
  442b91:	mov    eax,ds:0xe749e835
  442b96:	adc    DWORD PTR [ecx-0x17ea5f9d],edi
  442b9c:	ins    DWORD PTR es:[edi],dx
  442b9d:	out    0x9,eax
  442b9f:	inc    ecx
  442ba0:	xchg   esi,eax
  442ba1:	mov    ch,0xfd
  442ba3:	mov    WORD PTR [ebx+ebx*2],ds
  442ba6:	push   cs
  442ba7:	call   0x4ed8405
  442bac:	mov    ds:0x208cc275,al
  442bb1:	lds    ebp,FWORD PTR [ecx+0x7]
  442bb4:	(bad)  
  442bb5:	fstp   DWORD PTR [ecx]
  442bb7:	rol    ebp,cl
  442bb9:	pop    eax
  442bba:	outs   dx,DWORD PTR ds:[esi]
  442bbb:	inc    ecx
  442bbc:	fld    TBYTE PTR [esi-0x14]
  442bbf:	lea    ecx,[edi]
  442bc1:	push   esi
  442bc2:	sub    dl,BYTE PTR [ecx]
	...
  442bd8:	fisubr WORD PTR [edi]
  442bda:	jmp    0x81e7:0xd5a06203
  442be1:	out    0x1,eax
  442be3:	mov    ecx,0xe795a063
  442be8:	inc    ebp
  442be9:	out    0x9,eax
  442beb:	inc    ecx
  442bec:	push   ss
  442bed:	mov    ch,0x5
  442bef:	lea    ebx,[edx+ebx*2+0x5841e7ae]
  442bf6:	sub    DWORD PTR [edx+eiz*1],eax
  442bf9:	jne    0x442bcd
  442bfb:	mov    WORD PTR [eax+0x620769c4],fs
  442c01:	fnstcw WORD PTR [ecx-0xef7a2e]
  442c07:	inc    eax
  442c08:	imul   ebp,DWORD PTR [esi-0x14],0xffffff8d
  442c0c:	pop    ds
  442c0d:	push   ebp
  442c0e:	add    DWORD PTR [ecx],ebp
  442c10:	sbb    ch,al
  442c12:	cmp    DWORD PTR [ebp+0x45],esi
  442c15:	scas   al,BYTE PTR es:[edi]
  442c16:	jb     0x442c29
  442c18:	or     ebx,eax
  442c1a:	cmp    DWORD PTR ds:0x972b24a,esi
  442c20:	mov    ds:0xdefd1ce5,eax
  442c25:	xchg   edx,eax
  442c26:	clc    
  442c27:	cmp    eax,0xa881ae3a
  442c2c:	popa   
  442c2d:	sbb    ebp,ebx
  442c2f:	add    edi,esp
  442c31:	xchg   esi,eax
  442c32:	push   cs
  442c33:	imul   esp,DWORD PTR [ecx+ebx*8+0x0],0xe723139
  442c3b:	sahf   
	...
  442c50:	mov    ds:0xe7ebec60,al
  442c55:	sbb    edi,DWORD PTR [ebp-0x57]
  442c58:	mov    ch,0x9b
  442c5a:	cmp    ebp,edi
  442c5c:	std    
  442c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442c5e:	jb     0x442c24
  442c60:	sbb    bl,al
  442c62:	cmp    DWORD PTR ds:0xcc72a9ca,ebx
  442c68:	and    ah,ch
  442c6a:	sbb    al,0x1d
  442c6c:	loope  0x442c88
  442c6e:	add    DWORD PTR [ecx-0x22084e7b],ebp
  442c74:	mov    ebp,0xe13781a5
  442c79:	aad    0x0
  442c7b:	jmp    0x462d380b
  442c80:	and    esp,DWORD PTR [eax-0x8]
  442c83:	arpl   WORD PTR [ecx],di
  442c85:	push   ebp
  442c86:	fdiv   QWORD PTR [ebp-0x32c2ab8a]
  442c8c:	popf   
  442c8d:	push   esi
  442c8e:	rcl    DWORD PTR [ebp+0x1608dc6a],0xde
  442c95:	adc    ch,bh
  442c97:	or     eax,0xeb59f1
  442c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442c9d:	dec    edx
  442c9e:	cmp    eax,0x7d2d3b24
  442ca3:	iret   
  442ca4:	arpl   WORD PTR [esi+0x5d3cfffa],cx
  442caa:	jne    0x442cd0
  442cac:	ja     0x442c8b
  442cae:	ins    BYTE PTR es:[edi],dx
  442caf:	adc    al,0x91
  442cb1:	in     eax,0x8b
  442cb3:	inc    esp
	...
  442cc8:	addr16 icebp 
  442cca:	push   eax
  442ccb:	call   DWORD PTR [edi+0x6ff4c41]
  442cd1:	sub    eax,0x5c0b4012
  442cd6:	mov    ebp,0x24217e0c
  442cdb:	adc    BYTE PTR [ebx+0x2d],ch
  442cde:	dec    eax
  442cdf:	push   eax
  442ce0:	nop
  442ce1:	stos   BYTE PTR es:[edi],al
  442ce2:	call   0xfa5c765a
  442ce7:	pop    edi
  442ce8:	sub    eax,0xc7834d3a
  442ced:	inc    ebp
  442cee:	mov    dh,0xc
  442cf0:	sti    
  442cf1:	xor    DWORD PTR [ebp-0x14],edi
  442cf4:	dec    edx
  442cf5:	or     DWORD PTR ds:0x45dccb02,edx
  442cfb:	push   esi
  442cfc:	je     0x442d29
  442cfe:	jge    0x442cd1
  442d00:	dec    esi
  442d01:	push   0xffffffe9
  442d03:	std    
  442d04:	sbb    al,0x18
  442d06:	jmp    0xfa5c7cd9
  442d0b:	mov    ecx,DWORD PTR [ebx]
  442d0d:	(bad)
  442d12:	add    BYTE PTR [eax],al
  442d14:	mov    ecx,DWORD PTR [ebx-0x33]
  442d17:	xchg   dx,ax
  442d19:	test   BYTE PTR [ecx],0x84
  442d1c:	adc    bl,ch
  442d1e:	add    BYTE PTR [eax],al
  442d20:	clc    
  442d21:	sub    esp,edi
  442d23:	push   eax
  442d25:	adc    eax,DWORD PTR [edi+edi*8-0x74ec8a9e]
	...
  442d40:	out    0xda,eax
  442d42:	inc    ecx
  442d43:	stc    
  442d44:	gs jb  0x442d7e
  442d47:	adc    edx,esi
  442d49:	xor    eax,esp
  442d4b:	(bad)  
  442d4c:	fiadd  WORD PTR [ecx]
  442d4e:	mov    WORD PTR [ebp+0x7c3dd6],?
  442d54:	bound  eax,QWORD PTR [edx+0x2]
  442d57:	push   eax
  442d58:	enter  0xaa43,0x0
  442d5c:	retf   0x442
  442d5f:	add    BYTE PTR [edx+0x27e888b5],ah
  442d65:	pop    ds
  442d66:	aaa    
  442d67:	push   eax
  442d68:	out    dx,eax
  442d69:	add    al,0x41
  442d6b:	call   0xf97b7d49
  442d70:	out    0x81,al
  442d72:	mov    al,0x69
  442d74:	xlat   BYTE PTR ds:[ebx]
  442d75:	add    al,0x39
  442d77:	push   eax
  442d78:	out    0x76,eax
  442d7a:	mov    ecx,0x514e92f
  442d7f:	dec    edi
  442d80:	xchg   ebx,eax
  442d81:	mov    ch,0xd0
  442d83:	sti    
  442d84:	cli    
  442d85:	sub    DWORD PTR [esi],esi
  442d87:	stc    
  442d88:	fnstsw WORD PTR [ebp-0x3cd08bbd]
  442d8e:	shl    bl,0xcd
  442d91:	dec    esp
  442d92:	jmp    0x442e10
  442d94:	inc    edi
  442d95:	mov    edx,0x93877336
  442d9a:	ror    DWORD PTR [edx-0x72c49e1],cl
  442da0:	aaa    
  442da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  442da2:	adc    eax,DWORD PTR ss:[eax]
	...
  442db5:	add    BYTE PTR [eax],al
  442db7:	add    dl,dh
  442db9:	xor    ah,al
  442dbb:	jmp    esi
  442dbd:	add    DWORD PTR [ebx],ebp
  442dbf:	adc    bh,ah
  442dc1:	test   BYTE PTR [eax],dh
  442dc3:	push   eax
  442dc4:	xor    dh,BYTE PTR [edx-0x6f]
  442dc7:	dec    ebx
  442dc8:	xchg   al,bl
  442dca:	adc    DWORD PTR [eax+0x3d],edi
  442dcd:	pop    eax
  442dce:	pop    ss
  442dcf:	xchg   DWORD PTR [edx-0xec13a34],esp
  442dd5:	push   esp
  442dd6:	pop    es
  442dd7:	sbb    BYTE PTR [esi-0x20fc5616],bh
  442ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442dde:	cmc    
  442ddf:	cmp    eax,0x17ee9eb0
  442de4:	push   ds
  442de5:	jmp    0x442d90
  442de7:	add    esp,ecx
  442de9:	sbb    DWORD PTR [esi+0xb],edx
  442dec:	rcl    BYTE PTR [eax],0xf8
  442def:	or     al,0xe1
  442df1:	mov    dl,0xce
  442df3:	cmp    eax,0x8ee98b2b
  442df8:	cdq    
  442df9:	push   ebp
  442dfa:	shr    dh,cl
  442dfc:	pop    ebx
  442dfd:	push   esi
  442dfe:	mov    bh,0x8a
  442e00:	xlat   BYTE PTR ds:[ebx]
  442e01:	inc    edx
  442e02:	in     al,dx
  442e03:	icebp  
  442e04:	int    0xb6
  442e06:	pop    es
  442e07:	fstp   DWORD PTR [esp+ebx*1]
  442e0a:	cli    
  442e0b:	add    edx,DWORD PTR [ecx-0x17e799e]
  442e11:	push   ecx
  442e12:	imul   esi,DWORD PTR [eax],0x4e
  442e15:	stos   BYTE PTR es:[edi],al
  442e16:	bound  ebx,QWORD PTR [edi]
  442e18:	pop    edx
  442e19:	mov    bl,0x25
  442e1b:	add    al,0x0
	...
  442e2d:	add    BYTE PTR [eax],al
  442e2f:	add    BYTE PTR [eax],dh
  442e31:	scas   al,BYTE PTR es:[edi]
  442e32:	xchg   ecx,eax
  442e33:	jl     0x442e7c
  442e35:	push   edi
  442e36:	outs   dx,DWORD PTR ds:[esi]
  442e37:	mov    BYTE PTR [edx+0x629d5de6],ah
  442e3d:	fldl2t 
  442e3f:	mov    fs,WORD PTR [esi]
  442e41:	std    
  442e42:	in     eax,0xd3
  442e44:	aas    
  442e45:	icebp  
  442e46:	pop    esp
  442e47:	enter  0xf181,0xb9
  442e4b:	test   eax,0x17b557a5
  442e50:	fwait
  442e51:	in     al,dx
  442e52:	gs push ss
  442e54:	and    bl,cl
  442e56:	add    BYTE PTR [edx-0x2b],ah
  442e59:	bnd jge 0x442e85
  442e5c:	(bad)  
  442e5d:	mov    al,0x83
  442e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442e60:	test   edx,ebp
  442e62:	add    BYTE PTR [ebp-0x32baa272],dl
  442e68:	sbb    DWORD PTR [ebx-0x36],0xd3415495
  442e6f:	imul   ebx,DWORD PTR [eax+edx*2-0x67f2d682],0xf645a58b
  442e7a:	call   0xf8949677
  442e7f:	jb     0x442efa
  442e81:	pop    edx
  442e82:	clc    
  442e83:	push   ebp
  442e84:	das    
  442e85:	pop    ebp
  442e86:	inc    esi
  442e87:	std    
  442e88:	sti    
  442e89:	push   ebp
  442e8a:	mov    esi,DWORD PTR [esi-0x39e7d287]
  442e90:	pop    esi
  442e91:	pop    edx
  442e92:	shl    DWORD PTR ds:0x0,0x0
	...
  442ea5:	add    BYTE PTR [eax],al
  442ea7:	add    dh,bh
  442ea9:	cld    
  442eaa:	std    
  442eab:	pushf  
  442eac:	sub    ebx,DWORD PTR [edx+0x6412e400]
  442eb2:	inc    ebx
  442eb3:	jmp    0x440508ef
  442eb8:	sub    dl,BYTE PTR [esi+0x8]
  442ebb:	sbb    eax,0x597f0464
  442ec0:	popa   
  442ec1:	fld    DWORD PTR [eax]
  442ec3:	jo     0x442eac
  442ec5:	mov    BYTE PTR [ecx],al
  442ec7:	jmp    0xdd3bd72d
  442ecc:	inc    ebp
  442ecd:	out    0x40,eax
  442ecf:	jmp    0x6660f95a
  442ed4:	hlt    
  442ed5:	cmc    
  442ed6:	dec    esi
  442ed7:	pop    esi
  442ed8:	in     al,dx
  442ed9:	in     eax,dx
  442eda:	neg    esp
  442edc:	push   ebp
  442edd:	push   eax
  442ede:	outs   dx,BYTE PTR ds:[esi]
  442edf:	stc    
  442ee0:	retfw  0x4
  442ee4:	and    al,0x8f
  442ee6:	add    bh,bh
  442ee8:	js     0x442f4b
  442eea:	icebp  
  442eeb:	call   0x3eb78a
  442ef0:	add    BYTE PTR [ebp+ebx*8+0x248f441a],bl
  442ef7:	dec    esi
  442ef9:	cmp    ecx,edi
  442efb:	jne    0x442f74
  442efd:	adc    al,0x74
  442eff:	sbb    BYTE PTR [edi+ecx*4+0x14],dl
  442f03:	(bad)  
  442f04:	fsubp  st(0),st
  442f06:	stc    
  442f07:	jne    0x442f50
  442f09:	push   ss
  442f0a:	je     0x442f14
	...
  442f20:	push   esp
  442f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  442f22:	pop    ecx
  442f23:	pop    esi
  442f24:	lock popa 
  442f26:	in     al,0x5d
  442f28:	or     DWORD PTR [esi],edi
  442f2a:	clc    
  442f2b:	and    BYTE PTR [edi],0xaa
  442f2e:	idiv   bh
  442f30:	cmp    ebp,DWORD PTR [eax]
  442f32:	jge    0x442f71
  442f34:	cmp    esi,DWORD PTR [edi]
  442f36:	inc    esp
  442f37:	add    BYTE PTR [ebx],dh
  442f39:	mov    dl,0x66
  442f3b:	(bad)  
  442f3c:	aam    0x59
  442f3e:	ror    DWORD PTR [edi],0x7f
  442f41:	sbb    edi,esi
  442f43:	(bad)  
  442f44:	sti    
  442f45:	sub    edx,DWORD PTR [edx-0x1]
  442f48:	lahf   
  442f49:	cmp    DWORD PTR [ebx+eax*1],ecx
  442f4c:	or     ebx,ecx
  442f4e:	jge    0x442eec
  442f50:	pop    ds
  442f51:	std    
  442f52:	idiv   bh
  442f54:	sti    
  442f55:	shrd   DWORD PTR [edi+edx*8],esp,cl
  442f59:	fild   DWORD PTR [eax]
  442f5b:	add    BYTE PTR [eax-0x37],dl
  442f5e:	sbb    al,0xec
  442f60:	mov    ecx,0x8fff00d8
  442f65:	cmp    DWORD PTR [ebx+eax*1],ecx
  442f68:	retf   
  442f69:	fdivr  st,st(1)
  442f6b:	mov    ah,0x5f
  442f6d:	loope  0x442f64
  442f6f:	jmp    DWORD PTR [edx+0x42]
  442f72:	cmp    esi,DWORD PTR [esi+edi*2+0x62ffff36]
  442f79:	fwait
  442f7a:	jo     0x442fa0
  442f7c:	data16 aas 
  442f7e:	add    al,0x0
  442f80:	(bad)  
  442f81:	(bad)  
  442f82:	loopne 0x442f8f
	...
  442f98:	popa   
  442f99:	inc    edx
  442f9a:	add    al,0xf9
  442f9c:	mov    dh,0x26
  442f9e:	add    ch,bh
  442fa0:	jne    0x442fe4
  442fa2:	cmp    esi,DWORD PTR [esi+eax*2+0x62ffff3e]
  442fa9:	(bad)  
  442faa:	sar    al,cl
  442fac:	xor    eax,0xd68734c7
  442fb1:	push   ds
  442fb2:	add    BYTE PTR [ebx-0x2773c4b3],al
  442fb8:	bound  eax,QWORD PTR [edx+0x4]
  442fbb:	repnz out 0xe5,al
  442fbe:	cld    
  442fbf:	cld    
  442fc0:	xor    eax,0xe608fd42
  442fc5:	ja     0x442fcb
  442fc7:	add    BYTE PTR [edx-0x43],ah
  442fca:	xor    DWORD PTR [ecx],ecx
  442fcc:	out    0x7f,al
  442fce:	add    al,0x0
  442fd0:	bound  edi,QWORD PTR [ebp-0x3819f6aa]
  442fd6:	add    eax,DWORD PTR [eax]
  442fd8:	bound  eax,QWORD PTR [ebx+0x7657f8f2]
  442fde:	or     eax,0x43bd6240
  442fe3:	or     esi,esp
  442fe5:	xchg   edi,eax
  442fe6:	add    eax,DWORD PTR [eax]
  442fe8:	bound  ecx,QWORD PTR ds:0x9ccac888
  442fee:	sbb    cl,bh
  442ff0:	aad    0xc6
  442ff2:	sub    eax,DWORD PTR [ebx-0x6e87c541]
  442ff8:	bound  eax,QWORD PTR [edx+0x4]
  442ffb:	test   DWORD PTR [eax],eax
	...
  44300d:	add    BYTE PTR [eax],al
  44300f:	add    BYTE PTR [ecx+ebx*8-0x2d],ch
  443013:	add    ebx,edi
  443015:	sub    eax,0x54489852
  44301a:	dec    edi
  44301b:	mov    WORD PTR [esi],ds
  44301d:	std    
  44301e:	in     eax,dx
  44301f:	and    BYTE PTR [edx-0x65714334],0xff
  443026:	hlt    
  443027:	dec    edi
  443028:	xor    al,0x9d
  44302a:	jmp    0xd2414eb7
  44302f:	sar    DWORD PTR [edx+0x7],cl
  443032:	imul   eax,DWORD PTR [edx+0x47],0xa303ac67
  443039:	pushf  
  44303a:	(bad)
  44303d:	push   ebx
  44303e:	jmp    0x16318b46
  443043:	adc    al,0xa2
  443045:	fstp   DWORD PTR [ebx+eax*2-0x2a]
  443049:	adc    ah,BYTE PTR [ebx+0x7f]
  44304c:	jle    0x443077
  44304e:	jmp    0x8d37:0xe50e6203
  443055:	popf   
  443056:	jmp    0xe58fae09
  44305b:	inc    ebx
  44305c:	mov    WORD PTR [ebp-0x2569ec17],ds
  443062:	cli    
  443063:	ja     0x4430a3
  443065:	and    edx,ebp
  443067:	add    esp,DWORD PTR [edx+0x64]
  44306a:	es loopne 0x4430da
  44306d:	test   eax,0x95e4f5a6
  443072:	(bad)  
  443073:	push   ebx
	...
  443088:	(bad)  
  443089:	fldl2t 
  44308b:	inc    eax
  44308c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44308d:	std    
  44308e:	leave  
  44308f:	add    eax,0x38e9d862
  443094:	jno    0x4430c7
  443096:	fld    st(3)
  443098:	aad    0x5d
  44309a:	stos   BYTE PTR es:[edi],al
  44309b:	scas   eax,DWORD PTR es:[edi]
  44309c:	pop    esi
  44309d:	rol    DWORD PTR [eax],0xe9
  4430a0:	loope  0x44307b
  4430a2:	add    BYTE PTR [ebx],al
  4430a4:	push   ax
  4430a6:	ins    DWORD PTR es:[edi],dx
  4430a7:	or     eax,0x5e2f505a
  4430ac:	pop    ebp
  4430ad:	stc    
  4430ae:	adc    ebp,DWORD PTR [ecx+0x5755c61]
  4430b4:	jbe    0x44305c
  4430b6:	neg    esp
  4430b8:	xor    eax,0xb4e940e3
  4430bd:	cmp    ah,bl
  4430bf:	mov    eax,0x6257504b
  4430c4:	and    ebp,DWORD PTR [ebx+ebp*8+0x1d8d3ab6]
  4430cb:	in     eax,0x66
  4430cd:	fld    DWORD PTR [eax]
  4430cf:	push   ss
  4430d0:	repnz cld 
  4430d2:	cld    
  4430d3:	jmp    0x3e3c0a39
  4430d8:	inc    edx
  4430d9:	(bad)  
  4430da:	add    ebp,ecx
  4430dc:	popa   
  4430dd:	push   eax
  4430de:	lods   eax,DWORD PTR ds:[esi]
  4430df:	int    0x45
  4430e1:	push   ebp
  4430e2:	clc    
  4430e3:	jmp    0xed61be62
  4430e8:	pop    esi
  4430e9:	fld    DWORD PTR [eax]
  4430eb:	fiadd  WORD PTR [eax]
	...
  4430fd:	add    BYTE PTR [eax],al
  4430ff:	add    BYTE PTR [ebp+0x61e9fcfd],bh
  443105:	fincstp 
  443107:	xchg   ebp,eax
  443108:	cmp    eax,0x61e903d6
  44310d:	push   eax
  44310e:	lods   eax,DWORD PTR ds:[esi]
  44310f:	add    eax,0xe9f85462
  443114:	dec    edx
  443115:	lea    ebx,ds:0xd966e5
  44311b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44311c:	test   ebp,edi
  44311e:	cld    
  44311f:	jmp    0x5e3c0a85
  443124:	add    eax,0x61e903d6
  443129:	push   eax
  44312a:	rol    BYTE PTR [eax],1
  44312c:	jl     0x443184
  44312e:	mov    ebp,0xd5b9d4
  443133:	ret    0xd59f
  443136:	inc    ebp
  443137:	mov    ebp,DWORD PTR [esi-0x34bbb11b]
  44313d:	std    
  44313e:	sbb    eax,0x7d110d71
  443143:	sar    BYTE PTR [ecx+edx*8-0x2a74ff7d],0x51
  44314b:	mov    ebx,DWORD PTR [edi+0x4c850831]
  443151:	adc    BYTE PTR [eax],0xf6
  443154:	je     0x4431d2
  443156:	je     0x44316b
  443158:	dec    esp
  443159:	and    BYTE PTR [eax+ebx*1],0x3c
  44315d:	and    BYTE PTR [eax+ebx*1],0xb4
  443161:	adc    BYTE PTR [ebp+0x24],ch
	...
  443178:	jae    0x44318a
  44317a:	(bad)  
  44317b:	mov    esi,DWORD PTR [ebx-0x3]
  44317e:	dec    esi
  44317f:	push   ebp
  443180:	sar    BYTE PTR [eax+0x24],1
  443183:	sbb    al,0xf5
  443185:	pop    ds
  443186:	stc    
  443187:	je     0x4431a0
  443189:	cmp    eax,0x804c005e
  44318e:	and    al,0x20
  443190:	cmp    al,0xeb
  443192:	mov    BYTE PTR [esi],dl
  443194:	jnp    0x44316b
  443196:	push   ebx
  443197:	inc    DWORD PTR [edi+0x3b8b1839]
  44319d:	and    ecx,edi
  44319f:	je     0x443208
  4431a1:	xor    eax,0xd90d3f9
  4431a6:	test   dh,dh
  4431a8:	push   edx
  4431a9:	inc    edx
  4431aa:	cmp    edi,0x33
  4431ad:	ds sub ebp,0x57
  4431b1:	cmp    dh,BYTE PTR [ebp+0x7d]
  4431b4:	sti    
  4431b5:	fsubr  QWORD PTR [edi+ebx*1+0x62]
  4431b9:	mov    ebx,0xb57e23c0
  4431be:	cmp    al,0x74
  4431c0:	ins    DWORD PTR es:[edi],dx
  4431c1:	ret    
  4431c2:	mov    ah,0x3
  4431c4:	bound  eax,QWORD PTR [esi+0xd]
  4431c7:	stc    
  4431c8:	dec    edi
  4431c9:	inc    edx
  4431ca:	mov    ecx,DWORD PTR [ebx]
  4431cc:	out    dx,al
  4431cd:	in     al,dx
  4431ce:	sar    bh,0xb4
  4431d1:	xor    bh,al
  4431d3:	out    0x69,eax
  4431d5:	arpl   WORD PTR [edi],bp
  4431d7:	stc    
  4431d8:	add    al,0x85
  4431da:	sub    al,0xe9
	...
  4431f0:	adc    ah,BYTE PTR [eax+0x779d852f]
  4431f6:	sub    ecx,DWORD PTR [esi]
  4431f8:	lea    eax,[esi-0x717aec28]
  4431fe:	fcom   DWORD PTR [ebx]
  443200:	jge    0x443188
  443202:	fcom   DWORD PTR [ebx]
  443204:	jne    0x443274
  443206:	fcom   DWORD PTR [ebx]
  443208:	ins    DWORD PTR es:[edi],dx
  443209:	adc    ebx,esp
  44320b:	mov    ebp,0x84d14252
  443210:	dec    esi
  443211:	shr    DWORD PTR [eax],0x24
  443214:	pusha  
  443215:	inc    edx
  443216:	add    al,0x52
  443218:	fst    DWORD PTR [eax-0x77]
  44321b:	mov    eax,DWORD PTR [edx+0x45]
  44321e:	das    
  44321f:	stc    
  443220:	dec    edx
  443221:	xchg   ecx,eax
  443222:	push   ss
  443223:	sti    
  443224:	xor    eax,0x2fe480c5
  443229:	das    
  44322a:	das    
  44322b:	push   eax
  44322c:	xchg   ebx,eax
  44322d:	mov    ebx,0x1a8765fd
  443232:	lea    edx,gs:0xcbc07817
  443239:	pop    ds
  44323a:	std    
  44323b:	jmp    DWORD PTR [edx-0x4b]
  44323e:	and    al,0xff
  443241:	jle    0x443272
  443243:	jae    0x4432ae
  443245:	fldenv [edi+0x30996203]
  44324b:	mov    cl,0xec
  44324d:	or     ch,BYTE PTR [edx-0x15e8ded6]
  443253:	add    eax,DWORD PTR [eax]
	...
  443265:	add    BYTE PTR [eax],al
  443267:	add    BYTE PTR [edx],ah
  443269:	mov    ds:0xd8ba3cf4,al
  44326e:	inc    ecx
  44326f:	cmp    bl,cl
  443271:	ret    0x2bd5
  443274:	mov    ch,0x87
  443276:	gs adc ch,BYTE PTR ss:[edx-0x48bbfa8e]
  44327e:	push   ecx
  44327f:	cmp    edx,esp
  443281:	dec    edi
  443282:	dec    edi
  443283:	jg     0x443227
  443285:	les    esi,FWORD PTR [ebx]
  443287:	mov    BYTE PTR [ecx],ch
  443289:	and    eax,0x5022bc52
  44328e:	aaa    
  44328f:	popf   
  443290:	push   es
  443291:	into   
  443292:	adc    eax,0x54eaf603
  443297:	rcl    BYTE PTR [ecx+0x588ab8a8],0xc3
  44329e:	jle    0x4432cb
  4432a0:	adc    ch,BYTE PTR [edi+ecx*1+0x36]
  4432a4:	out    0x19,al
  4432a6:	mov    ?,WORD PTR [edx+edx*1-0x27]
  4432aa:	lahf   
  4432ab:	dec    esp
  4432ac:	shld   DWORD PTR [edx+0x27],esi,cl
  4432b0:	lds    edi,FWORD PTR ds:0xd962030a
  4432b6:	(bad)  
  4432b7:	into   
  4432b8:	ficom  WORD PTR [eax-0x21]
  4432bb:	(bad)  
  4432bd:	in     al,dx
  4432be:	sub    DWORD PTR [edi+ebx*8],eax
  4432c1:	dec    ecx
  4432c2:	pop    ebp
  4432c3:	mov    edi,0xbf9eaa15
  4432c8:	or     eax,0x3e9e2
	...
  4432dd:	add    BYTE PTR [eax],al
  4432df:	add    BYTE PTR [edx+0x4e],ah
  4432e2:	int    0xbb
  4432e4:	jno    0x44327f
  4432e6:	add    cl,ch
  4432e8:	jl     0x443303
  4432ea:	outs   dx,BYTE PTR ds:[esi]
  4432eb:	in     eax,0xf2
  4432ed:	pop    ss
  4432ee:	in     al,dx
  4432ef:	in     al,dx
  4432f0:	fisub  DWORD PTR [ebx]
  4432f2:	sub    al,0x2c
  4432f4:	sub    ah,BYTE PTR [edx+0x3e]
  4432f7:	mov    ebp,0x8d4657b6
  4432fc:	xchg   esp,eax
  4432fd:	call   0x70dd:0xcad8e8dc
  443304:	popf   
  443305:	aaa    
  443306:	clc    
  443307:	fcom   QWORD PTR [ecx]
  443309:	fiadd  WORD PTR [eax-0x17]
  44330c:	fsub   QWORD PTR [edx+0x548651cc]
  443312:	clc    
  443313:	pop    esi
  443314:	fstp   DWORD PTR [edx-0x6e29b1b]
  44331a:	test   DWORD PTR [esi+0x4f],0x25dcf7a9
  443321:	fiadd  WORD PTR [eax-0x17]
  443324:	ficomp DWORD PTR [edx+0x21]
  443327:	ss aaa 
  443329:	push   eax
  44332a:	ins    BYTE PTR es:[edi],dx
  44332b:	sub    DWORD PTR [edx],esp
  44332d:	mov    bh,0x11
  44332f:	jo     0x4432de
  443331:	aas    
  443332:	xchg   BYTE PTR [ebp+eax*2+0x676251a9],ah
  443339:	mov    bh,0x6b
  44333b:	add    DWORD PTR [esi],ebp
  44333d:	pop    esp
  44333e:	clc    
  44333f:	push   es
  443340:	aaa    
  443341:	mov    al,0xc9
  443343:	sub    al,BYTE PTR [eax]
	...
  443355:	add    BYTE PTR [eax],al
  443357:	add    BYTE PTR ds:0x8a6ae555,dl
  44335d:	jmp    0xb46acab5
  443362:	and    DWORD PTR [edx+0x70],esi
  443365:	mov    bh,0x0
  443367:	aaa    
  443368:	outs   dx,DWORD PTR ds:[esi]
  443369:	jmp    0xa583:0x4e21ff58
  443370:	pop    ebp
  443371:	cld    
  443372:	fild   DWORD PTR [eax]
  443374:	mov    cl,0x40
  443376:	push   eax
  443377:	inc    ebx
  443378:	jbe    0x443391
  44337a:	call   0x7fb04907
  44337f:	inc    esi
  443380:	or     al,BYTE PTR [edx]
  443382:	out    dx,al
  443383:	inc    esi
  443384:	les    eax,FWORD PTR [ebx+eiz*2]
  443387:	mov    edi,DWORD PTR [esi]
  443389:	add    eax,0x4e8d8963
  44338e:	bound  ecx,QWORD PTR [ebx+0x4d8c0b7e]
  443394:	out    0x6b,eax
  443396:	jg     0x4433de
  443398:	mov    esp,0x344ded01
  44339d:	add    eax,0xda44ffba
  4433a2:	add    BYTE PTR [ebp-0x74ed8185],al
  4433a8:	test   BYTE PTR ds:0x515ab70a,0xc9
  4433af:	bsf    ebx,DWORD PTR [ebp+edi*2+0x53629dc8]
  4433b7:	or     DWORD PTR [ebx],esi
  4433b9:	iret   
  4433ba:	ret    
  4433bb:	inc    BYTE PTR [eax]
	...
  4433cd:	add    BYTE PTR [eax],al
  4433cf:	add    BYTE PTR [edi+edx*2],dh
  4433d2:	dec    esp
  4433d3:	cld    
  4433d4:	and    edi,DWORD PTR ds:0xcf44ff4b
  4433da:	shl    BYTE PTR [ebp+ebp*2+0x60],0x4c
  4433df:	cld    
  4433e0:	inc    esp
  4433e1:	mov    esi,0xd5743bc7
  4433e6:	inc    ecx
  4433e7:	xlat   BYTE PTR ds:[ebx]
  4433e8:	shl    BYTE PTR [eax-0x1e12769e],1
  4433ee:	call   0xfa4ac256
  4433f3:	(bad)  
  4433f4:	(bad)  
  4433f5:	add    al,0xe9
  4433f7:	test   BYTE PTR [edi+0x8],dh
  4433fa:	cli    
  4433fb:	test   ebx,edi
  4433fd:	xchg   ecx,eax
  4433fe:	adc    cl,BYTE PTR [ebx+0x930f562]
  443404:	int    0x91
  443406:	call   0x5c3f91d3
  44340b:	test   DWORD PTR [edx],ebx
  44340d:	xchg   ebp,eax
  44340e:	jne    0x443462
  443410:	outs   dx,DWORD PTR ds:[esi]
  443411:	sbb    bh,BYTE PTR [esi-0x7d840b3e]
  443417:	push   ebx
  443418:	out    dx,al
  443419:	mov    ecx,0x42620084
  44341e:	sbb    al,0x9c
  443420:	arpl   WORD PTR es:[ebx+eax*4],si
  443424:	mov    ds:0x4f7d0de6,al
  443429:	push   esi
  44342a:	in     eax,dx
  44342b:	ins    DWORD PTR es:[edi],dx
  44342c:	pop    esi
  44342d:	aam    0xf5
  44342f:	pop    ecx
  443430:	popa   
  443431:	mov    bh,0x34
  443433:	call   0x443438
	...
  443448:	push   ebp
  443449:	jne    0x44347e
  44344b:	stc    
  44344c:	or     eax,0xa1c6c714
  443451:	shl    DWORD PTR [eax],0x5c
  443454:	pusha  
  443455:	inc    edx
  443456:	add    al,0x4d
  443458:	das    
  443459:	test   bl,bl
  44345b:	mov    edx,0x44166
  443460:	das    
  443461:	mov    ebp,0x720623c8
  443466:	out    dx,eax
  443467:	aam    0x11
  443469:	mov    ecx,0xf31a23c0
  44346e:	sbb    DWORD PTR [ebx+edx*2-0x607afb7e],edx
  443475:	mov    bl,BYTE PTR [edx]
  443477:	inc    eax
  443478:	bound  edi,QWORD PTR [ecx-0x4289dc38]
  44347e:	cmp    al,0x74
  443480:	outs   dx,BYTE PTR ds:[esi]
  443481:	mov    ebp,0x717223c0
  443486:	ja     0x443458
  443488:	out    0x6d,eax
  44348a:	loopne 0x4434ef
  44348c:	cmp    bl,cl
  44348e:	mov    DWORD PTR [esi],esp
  443490:	sub    ecx,DWORD PTR [esi+ebx*2+0x43]
  443494:	xchg   ecx,eax
  443495:	fiadd  WORD PTR [ebx+0x0]
  443498:	jmp    0x9f3c3231
  44349d:	test   eax,0x15875abe
  4434a2:	out    0x32,al
  4434a4:	push   ecx
  4434a5:	inc    ebp
  4434a6:	fadd   st(3),st
  4434a8:	cmc    
  4434a9:	pop    esi
  4434aa:	mov    edx,0xd9
	...
  4434bf:	add    dl,ch
  4434c1:	in     eax,0x25
  4434c3:	push   ss
  4434c4:	mov    ds:0xdd0663d9,al
  4434c9:	dec    ebx
  4434ca:	jmp    0xfee:0xf1f52680
  4434d1:	stos   BYTE PTR es:[edi],al
  4434d2:	out    dx,al
  4434d3:	mov    edi,0x1ba85f95
  4434d8:	inc    esp
  4434d9:	cmp    BYTE PTR [edi+0x32],ch
  4434dc:	ficomp WORD PTR [eax]
  4434de:	in     eax,dx
  4434df:	add    BYTE PTR [ebp+ebx*8+0x6c],al
  4434e3:	mov    DWORD PTR [ecx-0x652c4513],0x66476b23
  4434ed:	pop    esi
  4434ee:	sahf   
  4434ef:	out    0x71,eax
  4434f1:	test   eax,0xb541c76c
  4434f6:	cdq    
  4434f7:	popf   
  4434f8:	jg     0x44355a
  4434fa:	mov    esi,0xcd4c55e7
  4434ff:	dec    edi
  443500:	pop    edi
  443501:	cdq    
  443502:	jmp    0xf008d78e
  443507:	jle    0x4434bf
  443509:	cmc    
  44350a:	cmc    
  44350b:	sbb    BYTE PTR [esi-0x272c420b],0x9d
  443512:	lds    esp,FWORD PTR [edi+0x320afd3d]
  443518:	cmp    edx,DWORD PTR [esi+0x1]
  44351b:	sub    edx,edi
  44351d:	fild   QWORD PTR [edx-0x23]
  443520:	loop   0x4434b7
  443522:	sbb    al,0x11
	...
  443538:	setnp  bh
  44353b:	mov    dh,0xe7
  44353d:	adc    eax,0xf72a6405
  443542:	pop    eax
  443543:	cmp    DWORD PTR [ebp+0x2e1d1c95],ecx
  443549:	pusha  
  44354a:	cmp    eax,0x859b1605
  44354f:	sub    eax,0x43509f0a
  443554:	xor    edx,DWORD PTR [eax+0xe]
  443557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443558:	push   ecx
  443559:	cdq    
  44355a:	add    BYTE PTR [esi+eiz*1-0x3a],ah
  44355e:	cld    
  44355f:	popa   
  443560:	(bad)  
  443561:	xor    al,0x23
  443563:	bound  esp,QWORD PTR [edx-0x658dbf0a]
  443569:	idiv   BYTE PTR [edx+ebx*1]
  44356c:	loope  0x4434f8
  44356e:	add    DWORD PTR [ecx+0x21],ebp
  443571:	repz push 0x171c869
  443577:	cld    
  443578:	shl    BYTE PTR [eax-0x6449a09e],0xe8
  44357f:	add    eax,0x6200d9f8
  443584:	push   esi
  443585:	push   esp
  443586:	dec    ebp
  443587:	or     eax,0x565557e
  44358c:	mov    cs,WORD PTR [ebp+0x54]
  44358f:	or     eax,0xdbbdcd82
  443594:	xor    cx,WORD PTR [eax]
  443597:	ins    DWORD PTR es:[edi],dx
  443598:	loop   0x443573
  44359a:	add    cl,ch
	...
  4435b0:	ficomp WORD PTR [esi]
  4435b2:	jmp    0xf893d4d8
  4435b7:	bound  ebx,QWORD PTR [esi-0x38ff23aa]
  4435bd:	mov    edx,eax
  4435bf:	add    ecx,DWORD PTR [edx-0x33]
  4435c2:	or     ebx,DWORD PTR [eax]
  4435c4:	int3   
  4435c5:	adc    eax,edi
  4435c7:	mov    BYTE PTR [eax],al
  4435c9:	xlat   BYTE PTR ds:[ebx]
  4435ca:	jle    0x4435d9
  4435cc:	daa    
  4435cd:	sub    DWORD PTR [eax+eax*1-0x72],eax
  4435d1:	jge    0x4435d9
  4435d3:	mov    BYTE PTR [eax-0x2e],al
  4435d6:	stc    
  4435d7:	adc    eax,0x40e403
  4435dc:	xchg   ebp,eax
  4435dd:	into   
  4435de:	xor    eax,0x857206
  4435e3:	data16 adc BYTE PTR [edx],0x24
  4435e7:	cmp    BYTE PTR [eax+0x3b164843],al
  4435ed:	aad    0x62
  4435ef:	mov    DWORD PTR [eax-0x78749d27],ecx
  4435f5:	inc    ecx
  4435f6:	sbb    BYTE PTR [esi+0x42],ah
  4435f9:	adc    eax,0x1250660a
  4435fe:	and    al,0x2c
  443600:	gs into 
  443602:	xor    eax,0x35d0bc10
  443607:	or     al,0x4b
  443609:	or     BYTE PTR [ebp+0x24],ch
  44360c:	inc    edi
  44360d:	xor    cl,bh
  44360f:	(bad)  
  443610:	mov    eax,ss
  443612:	xor    eax,0xc
	...
  443627:	add    BYTE PTR [eax-0x4748f603],cl
  44362d:	xlat   BYTE PTR ds:[ebx]
  44362e:	jne    0x4435f4
  443630:	(bad)  
  443631:	and    eax,0xe96774f9
  443636:	push   ecx
  443637:	call   DWORD PTR [ebp-0x27]
  44363a:	mov    cl,0x43
  44363c:	mov    edx,DWORD PTR [ebp+edi*4+0xc]
  443640:	stos   DWORD PTR es:[edi],eax
  443641:	fdiv   DWORD PTR [ecx+0x6d0a4d43]
  443647:	and    al,0x62
  443649:	sbb    bh,ch
  44364b:	shl    BYTE PTR [edx+0x1e7d59d7],0x4f
  443652:	ja     0x4436a0
  443654:	xchg   BYTE PTR [edx+0x5040101c],al
  44365a:	sub    BYTE PTR [ebx-0x17f3e162],cl
  443660:	pop    ebp
  443661:	adc    al,0x28
  443663:	stc    
  443664:	out    dx,eax
  443665:	imul   al
  443667:	and    ecx,DWORD PTR [edx]
  443669:	xor    DWORD PTR [esi],ebx
  44366b:	stc    
  44366c:	or     eax,0x4623c8bc
  443671:	inc    esi
  443673:	xchg   BYTE PTR [edx-0x1b],cl
  443676:	jnp    0x443635
  443678:	cdq    
  443679:	mov    cl,0x48
  44367b:	pop    esp
  44367c:	pusha  
  44367d:	xor    al,BYTE PTR [edi*4-0x1083f771]
  443684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  443685:	inc    eax
  443686:	std    
  443687:	out    0xd,eax
  443689:	stc    
  44368a:	es stc 
	...
  4436a0:	fiadd  DWORD PTR [eax]
  4436a2:	(bad)  
  4436a3:	icebp  
  4436a4:	pop    edi
  4436a5:	adc    BYTE PTR [edi+0x71316243],0x8c
  4436ac:	inc    esp
  4436ad:	idiv   ah
  4436af:	jb     0x44372d
  4436b1:	in     eax,dx
  4436b2:	daa    
  4436b3:	adc    eax,edx
  4436b5:	inc    esp
  4436b6:	(bad)  
  4436b7:	call   DWORD PTR [edi+0x1e68f43d]
  4436bd:	xor    bh,ch
  4436bf:	jb     0x443736
  4436c1:	call   0xc088:0x9f84430b
  4436c8:	div    BYTE PTR [edi]
  4436ca:	and    DWORD PTR [ebx],0x2e
  4436cd:	pop    ds
  4436ce:	sar    bh,0x6d
  4436d1:	mov    dl,0x1
  4436d3:	xor    ch,dh
  4436d5:	fsub   DWORD PTR [ebp+0x16ad5d03]
  4436db:	sbb    DWORD PTR [esi],esi
  4436dd:	jmp    0x443688
  4436df:	add    eax,eax
  4436e1:	jp     0x443677
  4436e3:	mov    ds:0x7c87d9a1,al
  4436e8:	mov    al,ds:0xa06111db
  4436ed:	inc    edi
  4436ee:	out    dx,eax
  4436ef:	jnp    0x443691
  4436f1:	fucomp st(7)
  4436f3:	or     BYTE PTR [edx-0x48],dh
  4436f6:	and    eax,0x7cd1d04
  4436fb:	fstp   DWORD PTR [edx]
  4436fd:	out    dx,al
  4436fe:	leave  
  4436ff:	adc    DWORD PTR [edx+0x8cfd9],esp
	...
  443715:	add    BYTE PTR [eax],al
  443717:	add    BYTE PTR [edx-0x48],dl
  44371a:	and    eax,0xceccfd04
  44371f:	sbb    esp,DWORD PTR [ebx*4+0x18e62eaf]
  443726:	cs (bad) 
  443728:	data16 (bad) 
  44372a:	aad    0x9e
  44372c:	and    ecx,ebx
  44372e:	jmp    0xff4da0b6
  443733:	(bad)  
  443734:	int    0xd8
  443736:	sub    al,0x2f
  443738:	jno    0x44375f
  44373a:	fadd   st(3),st
  44373c:	mov    ebp,0x16ad48bd
  443741:	popf   
  443742:	jmp    0xdce31bec
  443747:	sbb    edi,edx
  443749:	sahf   
  44374a:	pop    edi
  44374b:	cs in  eax,0x9e
  44374e:	fisubr WORD PTR [esi]
  443750:	jno    0x443793
  443752:	stc    
  443753:	ret    
  443754:	lea    edi,[ebp-0x58a13aa0]
  44375a:	pushf  
  44375b:	inc    edx
  44375c:	adc    DWORD PTR [esi+eax*2-0x7e],edx
  443760:	jle    0x4437a2
  443762:	add    DWORD PTR [eax+0x4d],ebp
  443765:	popa   
  443766:	add    ebp,ecx
  443768:	popa   
  443769:	xchg   esi,eax
  44376a:	dec    ebp
  44376b:	mov    edi,0xc5456034
  443770:	cmp    DWORD PTR [edx+0xe],eax
  443773:	lds    esi,FWORD PTR [esi-0x67]
  443776:	add    BYTE PTR [eax+0x1d],ah
  443779:	sti    
  44377a:	xor    al,0x6c
	...
  443790:	mov    eax,ds:0xa1b9ffca
  443795:	ds std 
  443797:	jmp    0xbf14:0xeb6ad961
  44379e:	(bad)  
  4437a0:	popa   
  4437a1:	fldcw  WORD PTR [edx-0xf]
  4437a4:	inc    esi
  4437a5:	or     bh,BYTE PTR [ecx+0x47]
  4437a8:	sbb    al,BYTE PTR [edi-0x77]
  4437ab:	dec    ebp
  4437ac:	cli    
  4437ad:	cli    
  4437ae:	neg    esp
  4437b0:	(bad)
  4437b3:	jmp    0xbfc28132
  4437b8:	stos   BYTE PTR es:[edi],al
  4437b9:	das    
  4437ba:	xor    al,0xa0
  4437bc:	gs pop ebp
  4437be:	sbb    eax,0xd96681
  4437c3:	cmp    DWORD PTR [ecx+0x1cd6897],esi
  4437c9:	inc    edi
  4437ca:	clc    
  4437cb:	cmp    BYTE PTR [ebx+ebx*8],bl
  4437ce:	add    DWORD PTR [eax-0x5e],esi
  4437d1:	cli    
  4437d2:	xor    BYTE PTR [esi+0x4d],bh
  4437d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4437d6:	adc    ebp,DWORD PTR [ecx]
  4437d8:	pop    dx
  4437da:	shl    esp,0x53
  4437dd:	push   edx
  4437de:	jge    0x4437ed
  4437e0:	out    dx,al
  4437e1:	fld    DWORD PTR [eax]
  4437e3:	jmp    0xc5527999
  4437e8:	jb     0x443783
  4437ea:	add    BYTE PTR [eax-0x66],ah
  4437ed:	cli    
  4437ee:	adc    al,0x0
  4437f0:	xchg   ebx,eax
  4437f1:	pop    esi
  4437f2:	jg     0x443834
	...
  443808:	mov    eax,edi
  44380a:	cmp    al,0x24
  44380c:	pop    ebp
  44380d:	sub    eax,0xe8d715f9
  443812:	inc    eax
  443813:	add    dh,dl
  443815:	and    DWORD PTR [eax+edx*2],esp
  443818:	ret    0x107
  44381b:	add    BYTE PTR [ebx],bh
  44381d:	loop   0x44380e
  44381f:	in     eax,0x54
  443821:	hlt    
  443822:	jne    0x443888
  443824:	das    
  443825:	xor    bh,al
  443827:	xor    DWORD PTR [edi+eax*8],esi
  44382a:	cmp    al,0x24
  44382c:	retf   
  44382d:	fwait
  44382e:	cmp    al,0x24
  443830:	out    0xda,eax
  443832:	rol    DWORD PTR [edi+ebp*2+0x4d],0x15
  443837:	add    BYTE PTR [ebx],cl
  443839:	fidivr DWORD PTR [edi+0x44]
  44383c:	pop    edi
  44383d:	inc    ecx
  44383e:	cmp    BYTE PTR [edi+ebx*2-0x14],0x25
  443843:	in     eax,dx
  443844:	clc    
  443845:	cdq    
  443846:	inc    eax
  443847:	mov    eax,esi
  443849:	test   al,0xe0
  44384b:	test   DWORD PTR [edi],edi
  44384d:	xor    DWORD PTR [edi+ecx*1],edi
  443850:	jg     0x443889
  443852:	idiv   edi
  443854:	retf   
  443855:	pop    eax
  443856:	cmp    eax,0x9eb6324
  44385b:	mov    dh,0xfc
  44385d:	fdivr  st,st(2)
  44385f:	(bad)  
  443860:	jge    0x44383c
  443862:	bound  eax,QWORD PTR [ebx+0x3f801b0b]
  443868:	pop    ebp
  443869:	ret    0x243c
	...
  443880:	fwait
  443881:	(bad)  
  443882:	cmp    al,0x24
  443884:	fwait
  443885:	sub    edx,eax
  443887:	inc    esp
  443888:	outs   dx,DWORD PTR ds:[esi]
  443889:	rol    DWORD PTR [eax],cl
  44388b:	dec    DWORD PTR [esi+0x62400721]
  443891:	xor    BYTE PTR [edi+eax*2+0x73b4da0e],bh
  443898:	pop    esp
  443899:	mov    BYTE PTR [eax-0x573d5ed],dh
  44389f:	inc    edi
  4438a0:	not    edx
  4438a2:	ds inc esp
  4438a4:	ds cs jmp esp
  4438a8:	jno    0x44389e
  4438aa:	mov    edi,0x193e6c23
  4438af:	adc    esp,DWORD PTR [edi+esi*2]
  4438b2:	loopne 0x4438c5
  4438b4:	popa   
  4438b5:	xlat   BYTE PTR ds:[ebx]
  4438b6:	cmc    
  4438b7:	shl    DWORD PTR [esi+0x5fe0e16],0x32
  4438be:	sbb    DWORD PTR [ecx],eax
  4438c0:	and    al,0x77
  4438c2:	loopne 0x4438d5
  4438c4:	arpl   WORD PTR [eax-0x48c6d1bc],ax
  4438ca:	cmp    al,0x9
  4438cc:	fisub  WORD PTR [ebx-0x3]
  4438cf:	jmp    DWORD PTR [edx-0x66]
  4438d2:	add    edi,edi
  4438d4:	add    eax,0x46847933
  4438d9:	mov    esi,0xe262fffc
  4438de:	xchg   esi,eax
  4438df:	(bad)  
  4438e0:	jnp    0x443914
  4438e2:	xchg   esi,eax
  4438e3:	inc    DWORD PTR [eax]
	...
  4438f5:	add    BYTE PTR [eax],al
  4438f7:	add    BYTE PTR [ebx+0x32],bh
  4438fa:	xchg   esi,eax
  4438fb:	(bad)  
  4438fc:	out    dx,al
  4438fd:	mul    al
  4438ff:	cmp    esi,DWORD PTR [edx]
  443901:	arpl   WORD PTR [edx],dx
  443903:	adc    BYTE PTR [eax-0xe],dh
  443906:	cld    
  443907:	and    BYTE PTR [edx-0x5dd36112],0xd4
  44390e:	jne    0x443894
  443910:	jle    0x4438a4
  443912:	(bad)  
  443913:	jmp    DWORD PTR [edx-0x43]
  443916:	and    BYTE PTR [edx+ecx*8],0x32
  44391a:	add    al,0x0
  44391c:	xor    bl,cl
  44391e:	pop    esi
  44391f:	adc    DWORD PTR [esi+0xf03a9ed],esp
  443925:	mov    ebp,0xa85ec05
  44392a:	inc    edi
  44392b:	jns    0x44395b
  44392d:	std    
  44392e:	or     eax,0x36a7d11c
  443933:	sub    esp,ecx
  443935:	sbb    DWORD PTR [esi+0x5e5615f5],esi
  44393b:	loopne 0x443936
  44393d:	fsubr  st,st(1)
  44393f:	add    esi,DWORD PTR [edx+0x5c03ed44]
  443945:	cdq    
  443946:	jmp    0xf3125bcb
  44394b:	jg     0x443988
  44394d:	int    0xd4
  44394f:	cmp    DWORD PTR [ebx],0xffffffda
  443952:	ins    DWORD PTR es:[edi],dx
  443953:	mul    edi
  443955:	sbb    edi,DWORD PTR [esi+0x6ed86605]
  44395b:	std    
	...
  443970:	into   
  443971:	call   0x90b3b48
  443976:	rol    DWORD PTR ds:0x42cff8bf,cl
  44397c:	call   FWORD PTR [ecx]
  44397e:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  443980:	inc    ecx
  443981:	in     al,dx
  443982:	ins    BYTE PTR es:[edi],dx
  443983:	mov    edi,0x79199941
  443988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443989:	std    
  44398a:	sbb    eax,0x54d97fd4
  44398f:	mov    edi,0x2b39f581
  443994:	jno    0x44396b
  443996:	sti    
  443997:	ret    
  443998:	int    0x5c
  44399a:	stos   BYTE PTR es:[edi],al
  44399b:	scas   eax,DWORD PTR es:[edi]
  44399c:	imul   edx,DWORD PTR [eax+0x1e],0x275225e0
  4439a3:	push   es
  4439a4:	fistp  WORD PTR [ebp+edi*4+0x9be4b7]
  4439ab:	out    dx,eax
  4439ac:	and    al,0x9d
  4439ae:	sbb    al,0x29
  4439b0:	pop    ds
  4439b1:	call   0x703c:0xf7d5720a
  4439b8:	mov    al,ds:0xa5b50ad1
  4439bd:	jmp    0xcaae84a
  4439c2:	gs or  eax,0x68fec86a
  4439c8:	sub    al,0x59
  4439ca:	mov    DWORD PTR [esi+0x5755e5e],edx
  4439d0:	outs   dx,BYTE PTR ds:[esi]
  4439d1:	aas    
  4439d2:	shr    BYTE PTR [eax+eax*1+0x0],0x0
	...
  4439e6:	add    BYTE PTR [eax],al
  4439e8:	fld    st(5)
  4439ea:	sbb    al,0xf6
  4439ec:	loope  0x443a2e
  4439ee:	sbb    esp,esi
  4439f0:	fbld   TBYTE PTR [ebx-0x9]
  4439f3:	push   cs
  4439f4:	mov    BYTE PTR [ebp+edi*1-0x33],bl
  4439f8:	sbb    DWORD PTR [eax+0x45],edx
  4439fb:	lds    edx,FWORD PTR ds:0x2401395c
  443a01:	loopne 0x4439f9
  443a03:	out    dx,al
  443a04:	lahf   
  443a05:	pop    ss
  443a06:	pop    eax
  443a07:	inc    edi
  443a08:	sbb    eax,0x25c48bae
  443a0d:	xchg   BYTE PTR [esi+0x62],cl
  443a10:	push   0xffffffc4
  443a12:	(bad)  
  443a14:	out    0x35,eax
  443a16:	inc    ecx
  443a17:	sbb    ah,BYTE PTR ds:0xaa704fa9
  443a1d:	neg    BYTE PTR [eax]
  443a1f:	inc    ebx
  443a20:	push   ds
  443a21:	push   eax
  443a22:	inc    ebp
  443a23:	add    eax,0x1ce93abe
  443a28:	mov    eax,DWORD PTR [eax-0x74]
  443a2b:	adc    eax,0xaf83fac2
  443a30:	(bad)  
  443a31:	test   al,0xe8
  443a33:	jb     0x443a25
  443a35:	inc    ecx
  443a36:	clc    
  443a37:	add    BYTE PTR [eax],dh
  443a39:	adc    DWORD PTR [esp],esp
  443a3c:	inc    edi
  443a3d:	popf   
  443a3e:	or     DWORD PTR [ebp+eax*4+0xdc],eax
  443a45:	sbb    DWORD PTR [eax+ebp*1],esp
  443a48:	adc    cl,BYTE PTR [ecx+0x2824]
	...
  443a5e:	add    BYTE PTR [eax],al
  443a60:	js     0x4439ff
  443a62:	or     DWORD PTR [ebp+esi*2+0x580000dc],eax
  443a69:	popf   
  443a6a:	mov    edi,DWORD PTR [edi+eiz*2-0x26]
  443a6e:	popf   
  443a6f:	data16 shl BYTE PTR [ebx-0x2ea8bb3e],1
  443a76:	mul    edi
  443a78:	outs   dx,BYTE PTR ds:[esi]
  443a79:	pop    esi
  443a7a:	sti    
  443a7b:	call   eax
  443a7d:	in     eax,0x25
  443a7f:	fcmovnbe st,st(2)
  443a81:	popa   
  443a82:	and    al,0x14
  443a84:	mov    dh,0xea
  443a86:	or     DWORD PTR [ecx+ebp*1-0x2effff29],eax
  443a8d:	fstp   TBYTE PTR [ebp-0xb]
  443a90:	into   
  443a91:	pop    esp
  443a92:	jnp    0x443ad4
  443a94:	adc    eax,DWORD PTR [ecx-0x7c]
  443a97:	dec    DWORD PTR [ebx]
  443a99:	(bad)  
  443a9a:	add    BYTE PTR [ecx+0x751d7d],al
  443aa0:	sti    
  443aa1:	aad    0x9
  443aa3:	test   BYTE PTR [ecx],ch
  443aa5:	(bad)  
  443aa6:	add    BYTE PTR [eax],al
  443aa8:	mov    BYTE PTR [eax+0x44],dh
  443aab:	add    esp,ebp
  443aad:	ret    0xe8
  443ab0:	sti    
  443ab1:	aad    0xe8
  443ab3:	inc    edi
  443ab4:	cmp    bh,ch
  443ab6:	stc    
  443ab7:	cmp    al,0xc7
  443ab9:	mov    edi,edi
  443abb:	test   BYTE PTR [ebp-0x44fe87cb],0xd5
  443ac2:	fisttp QWORD PTR [eax]
	...
  443ad8:	bound  ebp,QWORD PTR [ecx]
  443ada:	retf   0x3703
  443add:	cmp    ebx,ebp
  443adf:	pop    ecx
  443ae0:	sub    cl,BYTE PTR [ebx+0x78]
  443ae3:	enter  0x3062,0x4
  443ae7:	sub    eax,0x6202d5a2
  443aec:	jmp    0x443ae9
  443aee:	loopne 0x443b27
  443af0:	cmp    ecx,ebp
  443af2:	lahf   
  443af3:	and    edx,DWORD PTR [edi+ebx*4+0x54]
  443af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443af8:	fldcw  WORD PTR [ecx]
  443afa:	adc    al,0xe5
  443afc:	sbb    esi,DWORD PTR [edi+0x8df0bb8]
  443b02:	test   al,0x48
  443b04:	loope  0x443a88
  443b06:	adc    al,0x10
  443b08:	out    dx,eax
  443b09:	sub    al,0xa2
  443b0b:	mov    eax,DWORD PTR ss:[ebp+0xe9e860c]
  443b12:	jmp    0x443b0d
  443b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443b15:	push   ss
  443b16:	jmp    0x443a9b
  443b18:	and    bl,BYTE PTR [esi-0x14]
  443b1b:	mov    ah,BYTE PTR [ebx-0x6dfc69ca]
  443b21:	lds    esi,FWORD PTR [edi-0x22145edd]
  443b27:	jl     0x443ace
  443b29:	and    al,BYTE PTR [eax]
  443b2b:	jae    0x443b71
  443b2d:	pop    eax
  443b2e:	jge    0x443b67
  443b30:	ins    DWORD PTR es:[edi],dx
  443b31:	popf   
  443b32:	fadd   QWORD PTR [ebp-0x615295a]
  443b38:	sahf   
  443b39:	into   
  443b3a:	jmp    0x0:0x83
	...
  443b4d:	add    BYTE PTR [eax],al
  443b4f:	add    BYTE PTR [edx],ah
  443b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443b52:	adc    BYTE PTR [ebx+0xf9a4aa3],cl
  443b58:	xchg   edx,eax
  443b59:	lods   eax,DWORD PTR ds:[esi]
  443b5a:	shl    BYTE PTR [ebx],0x9d
  443b5d:	loop   0x443b7e
  443b5f:	adc    esi,DWORD PTR [edx]
  443b61:	sub    ah,al
  443b63:	jmp    eax
  443b65:	fldenv [ebp-0xe3f1908]
  443b6b:	or     bl,0xc6
  443b6e:	dec    edx
  443b6f:	test   DWORD PTR [eax],edi
  443b71:	cdq    
  443b72:	xchg   BYTE PTR [edx+eiz*2],al
  443b75:	fld    DWORD PTR [edi]
  443b77:	jnp    0x443b99
  443b79:	add    DWORD PTR [eax],eax
  443b7b:	jge    0x443b9b
  443b7d:	cmc    
  443b7e:	mov    ch,0xad
  443b80:	arpl   WORD PTR [ecx+0x6],dx
  443b83:	loopne 0x443bd8
  443b85:	xor    al,0xe7
  443b87:	jns    0x443ba9
  443b89:	cdq    
  443b8a:	jno    0x443b4c
  443b8c:	inc    ecx
  443b8d:	pop    es
  443b8e:	(bad)  
  443b8f:	daa    
  443b90:	jnp    0x443b6b
  443b92:	jmp    0xb8413783
  443b97:	inc    BYTE PTR [ebx]
  443b99:	push   edx
  443b9a:	mov    dh,0xdf
  443b9c:	xor    dh,BYTE PTR [ecx+eiz*8]
  443b9f:	popf   
  443ba0:	out    0x96,al
  443ba2:	in     eax,0x9d
  443ba4:	fcom   QWORD PTR [ebp+eax*8+0x64e4c7ee]
  443bab:	rol    BYTE PTR [ecx-0x49d945ff],0xf5
  443bb2:	fnstcw WORD PTR [eax+0x0]
	...
  443bc5:	add    BYTE PTR [eax],al
  443bc7:	add    BYTE PTR [esi+0x441bb9f5],ah
  443bcd:	(bad)
  443bd0:	loope  0x443bea
  443bd2:	jbe    0x443bd3
  443bd4:	sbb    edx,DWORD PTR [ebp-0x39211b43]
  443bda:	icebp  
  443bdb:	adc    BYTE PTR [eax],0xd0
  443bde:	pop    esp
  443bdf:	pop    ss
  443be0:	or     BYTE PTR [eax-0x31],al
  443be3:	jp     0x443b93
  443be5:	cmc    
  443be6:	in     eax,dx
  443be7:	sbb    esp,DWORD PTR [esi]
  443be9:	jg     0x443bab
  443beb:	es mov ebp,0x8341d1d9
  443bf1:	add    DWORD PTR ds:[esi-0x4881b6a8],esi
  443bf8:	add    eax,0xbe928c01
  443bfd:	loope  0x443c75
  443bff:	fisttp DWORD PTR [edx-0x3d]
  443c02:	cld    
  443c03:	imul   eax,DWORD PTR [esp+ebx*8],0x54bf1410
  443c0a:	add    BYTE PTR [ecx+eiz*1-0x3b],ch
  443c0e:	sbb    edx,DWORD PTR [ebx]
  443c10:	bound  edi,QWORD PTR [esi+0x40b1edc0]
  443c16:	ins    DWORD PTR es:[edi],dx
  443c17:	lds    edx,FWORD PTR [ecx-0x69f2baae]
  443c1d:	aaa    
  443c1e:	call   0xcd29:0x7e423cd5
  443c25:	fcomi  st,st(6)
  443c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443c28:	xchg   ebp,eax
  443c29:	fnstsw WORD PTR ds:0x6a
	...
  443c3f:	add    BYTE PTR [ecx+edx*8],ch
  443c42:	cmp    ecx,DWORD PTR [edi]
  443c44:	mov    edx,0x79278c0e
  443c49:	pop    ecx
  443c4a:	mov    bh,0x2f
  443c4c:	jl     0x443c05
  443c4e:	add    al,cl
  443c50:	retf   
  443c51:	adc    ecx,ebp
  443c53:	call   0x5a71:0x62f843e4
  443c5a:	out    dx,eax
  443c5b:	xchg   ebp,eax
  443c5c:	cmp    al,0x56
  443c5e:	in     al,dx
  443c5f:	shl    BYTE PTR [edi-0x3d],0x32
  443c63:	ins    BYTE PTR es:[edi],dx
  443c64:	(bad)  
  443c65:	fiadd  DWORD PTR [ebx+0x6de31d76]
  443c6b:	enter  0xd898,0x7d
  443c6f:	test   eax,0xf96ae5d2
  443c74:	loop   0x443c8f
  443c76:	or     DWORD PTR [ecx],edi
  443c78:	inc    edi
  443c79:	lds    ebx,FWORD PTR [ecx+ebx*1]
  443c7c:	ins    DWORD PTR es:[edi],dx
  443c7d:	lea    ebx,[eax+eax*1]
  443c80:	jmp    0x443c64
  443c82:	ds je  0x443c29
  443c85:	hlt    
  443c86:	add    eax,0xffffff9f
  443c89:	fsqrt  
  443c8b:	inc    esp
  443c8c:	pop    edi
  443c8d:	cmp    BYTE PTR [ebx-0x7d],al
  443c90:	cld    
  443c91:	cmp    eax,0xaa672e2d
  443c96:	jge    0x443c66
  443c98:	jecxz  0x443ce4
  443c9a:	mov    edx,0x63e4fe
  443c9f:	lea    edi,[edi+0x39]
  443ca2:	sbb    BYTE PTR [eax+0x0],dl
	...
  443cb5:	add    BYTE PTR [eax],al
  443cb7:	add    BYTE PTR [eax-0x3a],cl
  443cba:	inc    esp
  443cbb:	and    al,0xdb
  443cbd:	ret    
  443cbe:	push   esp
  443cbf:	and    al,0xa2
  443cc1:	loop   0x443cdd
  443cc3:	je     0x443cc9
  443cc5:	hlt    
  443cc6:	jge    0x443d14
  443cc8:	pop    edi
  443cc9:	int    0x7d
  443ccb:	inc    esp
  443ccc:	outs   dx,DWORD PTR ds:[esi]
  443ccd:	sbb    eax,0x395f747d
  443cd2:	jg     0x443cd5
  443cd4:	adc    bl,bl
  443cd6:	and    eax,0xe8fff0f6
  443cdb:	add    edx,ebp
  443cdd:	idiv   ecx
  443cdf:	mov    edi,DWORD PTR [ebp+0x14]
  443ce2:	pop    edx
  443ce3:	pop    ebp
  443ce4:	and    cl,al
  443ce6:	jecxz  0x443d45
  443ce8:	js     0x443cf8
  443cea:	jge    0x443cd8
  443cec:	enter  0x6ce1,0x53
  443cf0:	in     eax,dx
  443cf1:	or     al,0x5e
  443cf3:	adc    BYTE PTR [eax-0x33ffa10e],dh
  443cf9:	hlt    
  443cfa:	adc    ebx,DWORD PTR [eax+0x3d]
  443cfd:	sbb    bh,al
  443cff:	cmp    BYTE PTR [edi],0x41
  443d02:	mov    eax,DWORD PTR [ebp-0xd]
  443d05:	sub    edx,eax
  443d07:	pop    es
  443d08:	cli    
  443d09:	cld    
  443d0a:	inc    ebx
  443d0b:	test   al,0x62
  443d0d:	lock cld 
  443d0f:	jmp    DWORD PTR [edx+0xf]
  443d12:	pop    es
  443d13:	add    al,0x50
  443d15:	lock cld 
  443d17:	and    BYTE PTR [edx],0x4
  443d1a:	loop   0x443ca0
	...
  443d30:	das    
  443d31:	sar    BYTE PTR [eax+0x43],0xe
  443d35:	pop    ds
  443d36:	push   eax
  443d37:	mov    edi,0x141c7176
  443d3c:	fild   QWORD PTR [edi-0x59]
  443d3f:	add    eax,0x711d68e1
  443d44:	pop    edi
  443d45:	mov    ecx,0x2cb9f3b6
  443d4a:	icebp  
  443d4b:	mov    BYTE PTR [ebx+0x2d8730ed],0x31
  443d52:	outs   dx,DWORD PTR ds:[esi]
  443d53:	inc    ebx
  443d54:	stos   BYTE PTR es:[edi],al
  443d55:	fistp  WORD PTR ds:0xc4415e13
  443d5b:	(bad)  
  443d5c:	fdiv   DWORD PTR [eax+eax*2+0x2d]
  443d60:	nop
  443d61:	ss gs enter 0x8f37,0x1c
  443d67:	add    BYTE PTR [edx+0x47],ah
  443d6a:	mov    ch,0xc5
  443d6c:	cld    
  443d6d:	enter  0x2ac,0xef
  443d71:	pop    ebp
  443d72:	xchg   esp,eax
  443d73:	mov    bh,0x25
  443d75:	xor    eax,DWORD PTR [eax+eax*1]
  443d78:	cmp    dh,BYTE PTR [eax-0x51ba06de]
  443d7e:	(bad)  
  443d7f:	out    dx,eax
  443d80:	sti    
  443d81:	add    al,BYTE PTR [eax+eax*1]
  443d84:	(bad)  
  443d85:	fisub  DWORD PTR [ebp+0x6ed42dde]
  443d8b:	inc    ebx
  443d8c:	xor    ch,BYTE PTR [esi-0x254d703a]
  443d92:	sub    edi,DWORD PTR [ebx+0x0]
	...
  443da8:	pop    ss
  443da9:	sub    al,0x70
  443dab:	xor    esp,edx
  443dad:	fprem1 
  443daf:	ret    
  443db0:	add    eax,0xa38d39b3
  443db5:	aam    0xce
  443db7:	cmp    ch,dl
  443db9:	xchg   esp,eax
  443dba:	loop   0x443d69
  443dbc:	fwait
  443dbd:	cmp    al,0x98
  443dbf:	(bad)
  443dc3:	and    esi,DWORD PTR [eax+0xc23234e]
  443dc9:	aas    
  443dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443dcb:	add    al,0x62
  443dcd:	add    BYTE PTR [ebx+ebx*4+0x23324e5a],dh
  443dd4:	ja     0x443de5
  443dd6:	pop    ss
  443dd7:	or     al,0x40
  443dd9:	push   edx
  443dda:	daa    
  443ddb:	adc    BYTE PTR [eax+0x52],al
  443dde:	daa    
  443ddf:	adc    cl,BYTE PTR [ebx]
  443de1:	fwait
  443de2:	and    cl,BYTE PTR [ebp-0x21]
  443de5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443de6:	bound  esi,QWORD PTR [eax]
  443de8:	pop    ss
  443de9:	xor    eax,0x97e8572
  443dee:	jmp    0x1aec9ff6
  443df3:	aas    
  443df4:	adc    DWORD PTR [ebx-0x4abe2fa0],esp
  443dfa:	scas   al,BYTE PTR es:[edi]
  443dfb:	nop
  443dfc:	push   ds
  443dfd:	cmc    
  443dfe:	xchg   ebp,eax
  443dff:	mov    ?,WORD PTR [edi+0x52]
  443e02:	xchg   esi,eax
  443e03:	out    0x8d,eax
  443e05:	push   edx
  443e06:	mov    fs,edi
  443e08:	xchg   ecx,eax
  443e09:	push   edx
  443e0a:	xchg   bh,ah
	...
  443e20:	xchg   ebp,eax
  443e21:	push   edx
  443e22:	mov    esi,0xb65289e7
  443e27:	out    0x7d,eax
  443e29:	push   edx
  443e2a:	scas   al,BYTE PTR es:[edi]
  443e2b:	out    0xa1,eax
  443e2d:	push   edx
  443e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  443e2f:	out    0xa5,eax
  443e31:	push   edx
  443e32:	sahf   
  443e33:	out    0x99,eax
  443e35:	push   edx
  443e36:	xchg   esi,eax
  443e37:	out    0xad,eax
  443e39:	xor    DWORD PTR [ecx],eax
  443e3b:	bound  edi,QWORD PTR [esi+0x3f]
  443e3e:	clc    
  443e3f:	pop    esp
  443e40:	mov    dh,ch
  443e42:	jl     0x443e2d
  443e44:	popa   
  443e45:	fnstcw WORD PTR [ecx+0xd961b8]
  443e4b:	scas   al,BYTE PTR es:[edi]
  443e4c:	sbb    eax,0xdef54cf8
  443e51:	cwde   
  443e52:	add    BYTE PTR [eax-0x5b],dh
  443e55:	not    DWORD PTR [eax+esi*2+0x1d]
  443e59:	clc    
  443e5a:	pusha  
  443e5b:	shl    DWORD PTR [edi],0x39
  443e5e:	clc    
  443e5f:	scas   al,BYTE PTR es:[edi]
  443e60:	repnz fs sbb eax,0xd96155
  443e67:	pusha  
  443e68:	ja     0x443e43
  443e6a:	add    cl,ch
  443e6c:	mov    DWORD PTR [ecx+eiz*8+0x7d50808e],eax
  443e73:	int    0x35
  443e75:	fld    DWORD PTR [eax]
  443e77:	jmp    0xcd898d4d
  443e7c:	fnstenv [ebx]
  443e7e:	(bad)  [edi]
  443e80:	inc    edx
  443e81:	inc    edx
  443e82:	test   BYTE PTR [eax+eax*1],dh
	...
  443e95:	add    BYTE PTR [eax],al
  443e97:	add    BYTE PTR [eax+0x55],al
  443e9a:	rcl    esp,0x7e
  443e9d:	dec    esi
  443e9e:	jge    0x443ead
  443ea0:	jmp    0x454e:0xb1e900d8
  443ea7:	or     eax,0x7fc533a6
  443eac:	add    BYTE PTR [eax+0x7d],0x29
  443eb0:	jo     0x443f07
  443eb2:	cmp    ch,al
  443eb4:	popa   
  443eb5:	(bad)  [ebx-0x7a64c26b]
  443ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443ebc:	inc    ebp
  443ebd:	jmp    0x443e48
  443ebf:	lods   eax,DWORD PTR ds:[esi]
  443ec0:	cmp    eax,0x45a585df
  443ec5:	dec    DWORD PTR [ecx+0x1832f700]
  443ecb:	(bad)  
  443ecc:	(bad)  
  443ecd:	xor    al,BYTE PTR [eax-0x77]
  443ed0:	(bad)  
  443ed1:	xor    ah,BYTE PTR [ecx*4-0x76e3cd39]
  443ed8:	aaa    
  443ed9:	xor    DWORD PTR [eax],edx
  443edb:	mov    esi,0x40b037
  443ee0:	les    edx,FWORD PTR [ecx]
  443ee2:	and    al,0x2c
  443ee4:	clc    
  443ee5:	(bad)  
  443ee6:	add    BYTE PTR [eax],al
  443ee8:	xchg   ebp,eax
  443ee9:	dec    esp
  443eea:	or     ecx,DWORD PTR [ebp+0xd03137]
  443ef0:	retf   
  443ef1:	(bad)  
  443ef2:	call   0xfa3cda3f
  443ef7:	test   esi,ebp
  443ef9:	bound  edx,QWORD PTR [ebx]
  443efb:	push   0x0
	...
  443f10:	iret   
  443f11:	dec    edi
  443f12:	inc    ecx
  443f13:	add    ah,cl
  443f15:	inc    edx
  443f16:	dec    esp
  443f17:	adc    edi,DWORD PTR [ebx-0x2b]
  443f1a:	jge    0x443f04
  443f1c:	ss jmp 0x0:0xd5c68409
  443f24:	(bad)  
  443f25:	push   eax
  443f26:	sbb    eax,0xd67bd8
  443f2b:	push   eax
  443f2c:	adc    bl,BYTE PTR [ecx]
  443f2e:	and    al,0x18
  443f30:	sbb    al,0x42
  443f32:	dec    esp
  443f33:	adc    ecx,ebx
  443f35:	(bad)  
  443f36:	jge    0x443f30
  443f38:	push   es
  443f39:	clc    
  443f3a:	ins    BYTE PTR es:[edi],dx
  443f3b:	and    esi,eax
  443f3d:	adc    BYTE PTR [esp+ebx*2],ah
  443f40:	into   
  443f41:	and    DWORD PTR [esp+edx*1],0x5346cdc0
  443f48:	and    DWORD PTR [esi],esp
  443f4a:	push   ecx
  443f4b:	push   ebp
  443f4c:	or     edi,ecx
  443f4e:	inc    edi
  443f4f:	push   eax
  443f50:	mov    al,0x29
  443f52:	and    al,0x14
  443f54:	bound  ebx,QWORD PTR [edi]
  443f56:	and    DWORD PTR cs:[edx],0x1b
  443f5a:	mov    edi,0xe083dbc5
  443f5f:	adc    esi,DWORD PTR [ebp+0x7147ef3b]
  443f65:	jo     0x443f6b
  443f67:	test   DWORD PTR [esi+0x582f014],ecx
  443f6d:	pushf  
  443f6e:	xchg   ebp,eax
  443f6f:	test   BYTE PTR [ebp-0x53],ah
  443f72:	(bad)  
  443f73:	and    eax,DWORD PTR [eax]
	...
  443f85:	add    BYTE PTR [eax],al
  443f87:	add    BYTE PTR [esi+0x464c8801],al
  443f8d:	cmp    al,0xb3
  443f8f:	arpl   WORD PTR gs:[eax+0x306220ec],bp
  443f96:	mov    ecx,0x7f2032f8
  443f9b:	rcl    BYTE PTR [edi-0x1a],0x7d
  443f9f:	jl     0x44401f
  443fa1:	in     al,0x3
  443fa3:	jae    0x443fb6
  443fa5:	(bad)  
  443fa6:	mov    edi,0x85ff8a23
  443fab:	or     BYTE PTR [ecx],dl
  443fad:	popf   
  443fae:	scas   eax,DWORD PTR es:[edi]
  443faf:	and    ebp,DWORD PTR [edx]
  443fb1:	fisubr WORD PTR [ebp-0x3c6ca199]
  443fb7:	jmp    DWORD PTR ds:0xe70fb2c3
  443fbd:	outs   dx,DWORD PTR ds:[esi]
  443fbe:	(bad)  
  443fc2:	xchg   edi,eax
  443fc3:	and    esi,edx
  443fc5:	inc    edi
  443fc6:	(bad)  
  443fc7:	adc    al,0xe9
  443fc9:	jae    0x443fab
  443fcb:	ja     0x443fb4
  443fcd:	clc    
  443fce:	(bad)  
  443fcf:	or     al,0xfc
  443fd1:	fdivr  st,st(3)
  443fd3:	jae    0x444041
  443fd5:	stos   DWORD PTR es:[edi],eax
  443fd6:	mov    edi,0x45c37a23
  443fdb:	stc    
  443fdc:	dec    ebp
  443fdd:	xor    ebp,DWORD PTR [esi+edi*1]
  443fe0:	sub    dl,bl
  443fe2:	push   ds
  443fe3:	and    cl,ch
  443fe5:	popf   
  443fe6:	mov    ebp,0xf538a593
  443feb:	mov    bh,0x0
	...
  443ffd:	add    BYTE PTR [eax],al
  443fff:	add    BYTE PTR [esi-0x67],bl
  444002:	jmp    0xd241de93
  444007:	mov    bl,0xe6
  444009:	loope  0x444001
  44400b:	mov    cl,0x5d
  44400d:	fs out 0xb8,eax
  444010:	or     cl,BYTE PTR [edx-0x2617b1f]
  444016:	add    DWORD PTR [eax],ecx
  444018:	jg     0x444039
  44401a:	in     al,dx
  44401b:	push   ds
  44401c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44401d:	std    
  44401e:	std    
  44401f:	push   cs
  444020:	loope  0x443ffc
  444022:	(bad)  
  444023:	pop    ds
  444024:	jmp    0x444088
  444026:	dec    esi
  444027:	call   0x83ffa469
  44402c:	test   eax,0x81d05d38
  444031:	(bad)  
  444032:	shl    DWORD PTR [edi-0x6e60c8f8],0x2e
  444039:	std    
  44403a:	cmc    
  44403b:	sub    ebx,DWORD PTR [ecx-0x26e06fa9]
  444041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444042:	mov    ebp,0xc59da2ff
  444047:	dec    ecx
  444049:	popa   
  44404a:	sub    al,BYTE PTR [ebx*8-0x7a183a6b]
  444051:	test   esp,esi
  444053:	and    BYTE PTR [ebx+0x42982a5d],cl
  444059:	fs sahf 
  44405b:	out    0x41,eax
  44405d:	data16 mov dh,0xe7
  444060:	push   ecx
  444061:	fs loop 0x444015
	...
  444078:	adc    eax,0xe0e39938
  44407d:	sbb    BYTE PTR [ebp+0xf2c009],ch
  444083:	lds    eax,FWORD PTR [ebp-0x34]
  444086:	pop    es
  444087:	push   ebp
  444088:	sahf   
  444089:	add    esi,DWORD PTR ds:[ebx-0x5f]
  44408d:	pop    ebp
  44408e:	rcl    DWORD PTR [ebx-0x53f86ea2],0x51
  444095:	fs inc ebp
  444097:	lds    esp,FWORD PTR ds:0x42834f40
  44409d:	xor    cl,BYTE PTR [ebp+ebp*4-0x7a746403]
  4440a4:	add    eax,0xfd9d03f0
  4440a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4440aa:	sub    DWORD PTR [ecx+ebp*2-0x34aa16ca],0x5c
  4440b2:	mov    cl,0x84
  4440b5:	outs   dx,DWORD PTR ds:[esi]
  4440b6:	test   esi,0xa27e10d8
  4440bc:	cmc    
  4440bd:	(bad)  
  4440be:	xor    ebp,DWORD PTR [ecx+0x60045fa1]
  4440c4:	lock mov bl,BYTE PTR ss:0xdc8befba
  4440cc:	icebp  
  4440cd:	leave  
  4440ce:	inc    eax
  4440cf:	jmp    0x6341debd
  4440d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4440d5:	sti    
  4440d6:	cmp    al,0x61
  4440d8:	mov    al,ds:0x2d8ad9
	...
  4440ed:	add    BYTE PTR [eax],al
  4440ef:	add    BYTE PTR [edx+0x5d2a88a7],cl
  4440f5:	loop   0x4440a5
  4440f7:	test   al,0xd1
  4440f9:	xor    BYTE PTR [ebp-0x3b],ch
  4440fc:	lods   eax,DWORD PTR ds:[esi]
  4440fd:	bound  edi,QWORD PTR [ecx+esi*8-0x4c]
  444101:	xor    bh,cl
  444103:	out    dx,al
  444104:	psadbw mm7,mm5
  444107:	jmp    0xaaf32355
  44410c:	pop    edi
  44410d:	mov    edi,esi
  44410f:	add    BYTE PTR [edi],bl
  444111:	aas    
  444112:	dec    esp
  444113:	push   edi
  444114:	xchg   esp,eax
  444115:	in     al,dx
  444116:	or     DWORD PTR [esi+0xf50dff8],esi
  44411c:	int    0x1b
  44411e:	add    bh,bh
  444120:	fistp  QWORD PTR [esi]
  444122:	add    edi,DWORD PTR fs:[edx+ebp*2-0x7]
  444127:	(bad)  
  444128:	mov    eax,0xc78d1c9e
  44412d:	ds sub al,ch
  444130:	cmp    eax,0x86fff9f6
  444135:	es and al,0x3c
  444138:	arpl   cx,cx
  44413a:	iret   
  44413b:	push   esp
  44413d:	inc    bp
  44413f:	and    al,0x33
  444141:	add    eax,0xd514d8fd
  444146:	jge    0x44418c
  444148:	pop    edi
  444149:	test   DWORD PTR [ecx-0x77],ebx
  44414c:	arpl   WORD PTR [eax-0x4a],sp
  44414f:	pop    esi
  444150:	xchg   BYTE PTR [eax+0x7d],dh
  444153:	in     eax,0x0
	...
  444165:	add    BYTE PTR [eax],al
  444167:	add    BYTE PTR [esi-0x68],dh
  44416a:	push   ebx
  44416b:	mov    esp,DWORD PTR [edi-0x45f31aa6]
  444171:	fiadd  DWORD PTR [eax]
  444173:	push   ebx
  444174:	xor    BYTE PTR [esi+0x0],dh
  444177:	push   esi
  444178:	ins    BYTE PTR es:[edi],dx
  444179:	xchg   esp,eax
  44417a:	add    BYTE PTR [edx],al
  44417c:	mov    ebx,0x92f17dda
  444181:	adc    DWORD PTR [esi+0x72],esp
  444184:	jl     0x4441f1
  444186:	push   edx
  444187:	call   0x3ed4f6
  44418c:	clc    
  44418d:	push   ebp
  44418e:	or     al,0x0
  444190:	(bad)  
  444191:	cmp    cl,bh
  444193:	jne    0x44420c
  444195:	pop    ecx
  444196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444197:	clc    
  444198:	adc    eax,0x6200f9d4
  44419d:	mov    ebp,0xa764f887
  4441a2:	adc    eax,0x16acc5e8
  4441a7:	stc    
  4441a8:	out    0xc4,eax
  4441aa:	adc    al,0xfa
  4441ac:	dec    ebp
  4441ad:	out    dx,eax
  4441ae:	lods   eax,DWORD PTR ds:[esi]
  4441af:	push   ecx
  4441b0:	cmp    dh,ch
  4441b2:	xchg   edx,edi
  4441b4:	cmp    eax,0xa343d6c1
  4441b9:	outs   dx,BYTE PTR ds:[esi]
  4441ba:	mov    edi,0x1c586872
  4441bf:	jmp    DWORD PTR ds:0x6a7a8740
  4441c5:	push   edi
  4441c6:	stos   BYTE PTR es:[edi],al
  4441c7:	std    
  4441c8:	out    0x4c,al
  4441ca:	or     al,0x57
	...
  4441e0:	cli    
  4441e1:	ret    
  4441e2:	lods   al,BYTE PTR ds:[esi]
  4441e3:	clc    
  4441e4:	add    eax,0x3907bfbb
  4441e9:	push   es
  4441ea:	or     DWORD PTR [ebx+0x54],esi
  4441ed:	inc    edi
  4441ee:	dec    ebp
  4441ef:	add    DWORD PTR [ebx+0x62000315],ebp
  4441f5:	sahf   
  4441f6:	fnstcw WORD PTR [esi-0x794beeab]
  4441fc:	popa   
  4441fd:	lds    edi,FWORD PTR [ebp+0x24d63205]
  444203:	cmc    
  444204:	or     eax,DWORD PTR [esi+0x4b63b015]
  44420a:	add    ch,BYTE PTR [esi]
  44420c:	mov    ds:0x9b54b6f6,al
  444211:	or     DWORD PTR [eax+eax*1],0xff07b3e3
  444218:	popf   
  444219:	aas    
  44421a:	mov    cl,0x61
  44421c:	jmp    0x635821b4
  444221:	inc    eax
  444222:	add    al,0x53
  444224:	fstp   DWORD PTR [ecx-0x52]
  444227:	mov    ch,0x74
  444229:	fsubr  st,st(0)
  44422b:	add    esp,DWORD PTR [edx-0x72]
  44422e:	jb     0x44424a
  444230:	add    dl,dh
  444232:	xor    edx,DWORD PTR [ebp+0x2829eb61]
  444238:	retf   0x76e4
  44423b:	inc    eax
  44423c:	mov    dl,0x8e
  44423e:	fs xchg esp,eax
  444240:	mov    eax,DWORD PTR [bx+di+0x5f]
	...
  444258:	or     eax,0x2de82734
  44425d:	mov    edx,DWORD PTR [ebx-0x261a16fd]
  444263:	sub    edi,edx
  444265:	push   0x9cd91c10
  44426a:	loope  0x444217
  44426c:	adc    eax,0xb203e9db
  444271:	mov    edi,0xddb38eeb
  444276:	nop
  444277:	inc    esp
  444278:	arpl   WORD PTR [ebp-0x445f4a58],bx
  44427e:	jo     0x44427c
  444280:	std    
  444281:	xor    ah,BYTE PTR [edi]
  444283:	sbb    ebp,ebx
  444285:	pop    eax
  444286:	mov    fs,eax
  444288:	inc    ecx
  444289:	fucompp 
  44428b:	add    esp,DWORD PTR [edx-0x53]
  44428e:	add    eax,0xfdfe0e1b
  444293:	add    al,0x62
  444295:	fldcw  WORD PTR [edx-0x60]
  444298:	or     ebp,0xfd2e88e9
  44429e:	cmc    
  44429f:	sub    ecx,esi
  4442a1:	pusha  
  4442a2:	cwde   
  4442a3:	sbb    ebx,ecx
  4442a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4442a6:	(bad)
  4442a9:	fldpi  
  4442ab:	add    esp,DWORD PTR [edx-0x74]
  4442ae:	xchg   ecx,eax
  4442af:	and    edi,ebx
  4442b1:	xor    esi,DWORD PTR [edi+0x54]
  4442b4:	lea    edx,[ebx-0x7234e900]
  4442ba:	and    DWORD PTR [ebp+0x0],0x0
	...
  4442d0:	push   0x34
  4442d2:	clc    
  4442d3:	jmp    0x684523f7
  4442d8:	cmp    cl,ch
  4442da:	add    ebp,ecx
  4442dc:	popa   
  4442dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4442de:	dec    ebp
  4442df:	mov    WORD PTR [esi+0x33],fs
  4442e2:	clc    
  4442e3:	jmp    0x3369ffb
  4442e8:	xchg   ebx,eax
  4442e9:	ret    
  4442ea:	jno    0x444350
  4442ec:	(bad)  
  4442ed:	fdecstp 
  4442ef:	cs pop ecx
  4442f1:	ss (bad) 
  4442f3:	adc    bh,ch
  4442f5:	mov    ah,0xb4
  4442f7:	lds    ecx,FWORD PTR ds:0x61e9f835
  4442fd:	pop    esi
  4442fe:	call   FWORD PTR [edi+0x22]
  444301:	clc    
  444302:	adc    BYTE PTR [ebp+0x6],bh
  444305:	xor    DWORD PTR [ebp-0x7cad23b],ebp
  44430b:	jmp    0xcd60ffec
  444310:	popa   
  444311:	pusha  
  444312:	inc    ebp
  444313:	or     eax,0x72343bfa
  444318:	dec    ebx
  444319:	xor    al,BYTE PTR [esi+0x6ae4022d]
  44431f:	in     eax,0x11
  444321:	pop    edi
  444322:	inc    ebp
  444323:	or     eax,0x6daf3bbe
  444328:	imul   esi,DWORD PTR [edx],0xffffff8c
  44432b:	sub    eax,0x2535e3c2
  444330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444331:	mov    DWORD PTR ds:0x1c,edi
	...
  444347:	add    BYTE PTR [eax+esi*1+0x348dc5ad],bh
  44434e:	clc    
  44434f:	jmp    0xf160e02e
  444354:	rcr    DWORD PTR [edi+ecx*8+0x0],1
  444358:	push   cs
  444359:	pop    esp
  44435a:	sbb    eax,0xd77a28
  44435f:	mov    DWORD PTR [edi+0x39],ebx
  444362:	sbb    al,0xe8
  444364:	push   ebp
  444365:	iret   
  444366:	stc    
  444367:	inc    DWORD PTR [edi]
  444369:	cwde   
  44436a:	jae    0x44437f
  44436c:	lds    edx,FWORD PTR [edx]
  44436e:	in     eax,0x76
  444370:	repnz or bh,BYTE PTR [eax+0x77740e5e]
  444377:	les    esi,FWORD PTR [edi]
  444379:	fadd   QWORD PTR [eax]
  44437b:	add    BYTE PTR [ecx+0x32],bh
  44437e:	clc    
  44437f:	mov    dh,BYTE PTR [ebp+0x3]
  444382:	icebp  
  444383:	push   ecx
  444384:	fisubr DWORD PTR [ebx+0x53]
  444387:	push   esi
  444388:	mov    al,0xcd
  44438a:	jge    0x444366
  44438c:	mov    al,0x18
  44438e:	cmp    al,0x57
  444390:	ror    BYTE PTR [edx+0x24],0x1c
  444394:	add    BYTE PTR [ebx],0x1e
  444397:	out    dx,al
  444398:	or     BYTE PTR [ecx+0x6e1c0c8b],bl
  44439e:	push   ebx
  44439f:	dec    DWORD PTR [ebx-0x7f2982de]
  4443a5:	mov    al,ds:0x3d67447f
  4443aa:	loopne 0x4443e4
	...
  4443c0:	jecxz  0x44438c
  4443c2:	stc    
  4443c3:	lea    esi,[edi]
  4443c5:	cmp    DWORD PTR [eax+edx*2],ebx
  4443c8:	and    DWORD PTR ds:0x429c5351,ebx
  4443ce:	in     al,dx
  4443cf:	adc    DWORD PTR [ebx-0x23],edi
  4443d2:	add    eax,0xffffff87
  4443d5:	adc    DWORD PTR ds:0x83e640c9,esp
  4443db:	call   DWORD PTR [edi+0x3c]
  4443de:	jne    0x444444
  4443e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4443e1:	es clc 
  4443e3:	push   cs
  4443e4:	bound  edx,QWORD PTR [edx+0x3c268643]
  4443ea:	in     al,0x2f
  4443ec:	pop    esi
  4443ed:	sbb    bh,BYTE PTR ss:[edi-0x7fbc15a3]
  4443f4:	mov    eax,DWORD PTR [ecx+ecx*1+0x44]
  4443f8:	es sbb al,0xf4
  4443fb:	cmp    eax,0xd0d5e8e8
  444400:	lock hlt 
  444402:	jg     0x444448
  444404:	ds sub al,0xb4
  444407:	clc    
  444408:	(bad)  
  444409:	(bad)  
  44440b:	push   eax
  44440c:	mov    cl,0x9b
  44440e:	out    0xeb,eax
  444410:	jae    0x444392
  444412:	add    al,0x85
  444414:	scas   al,BYTE PTR es:[edi]
  444415:	in     al,0xf0
  444417:	mov    ah,BYTE PTR [esi+0x33]
  44441a:	test   DWORD PTR [esi+0x6e],ecx
  44441d:	jo     0x4443c6
  44441f:	push   ecx
  444420:	fld    DWORD PTR [ecx]
  444422:	and    eax,0xd3
	...
  444437:	add    ch,cl
  444439:	int3   
  44443a:	sbb    DWORD PTR [ecx-0x44],ebx
  44443d:	test   DWORD PTR [ebp+0x4febb56],esi
  444443:	add    BYTE PTR [esi],bl
  444445:	add    al,0x49
  444447:	int3   
  444448:	push   ss
  444449:	push   ebp
  44444a:	test   esp,ebp
  44444c:	xchg   ecx,eax
  44444d:	dec    edx
  44444e:	mov    cl,0x84
  444450:	ja     0x44447a
  444452:	int    0xd4
  444454:	sub    DWORD PTR [edi],esi
  444456:	mov    BYTE PTR [ebx-0x27],dh
  444459:	xchg   edx,eax
  44445a:	clc    
  44445b:	xor    al,0xd1
  44445d:	mov    ebx,DWORD PTR [edi-0x6f1fcaca]
  444463:	addr16 mov edx,ebx
  444466:	loopne 0x4444db
  444468:	inc    ecx
  444469:	mov    ecx,0xe2eb13b8
  44446e:	add    al,0x87
  444470:	adc    eax,0x234101d9
  444475:	add    eax,0xd96203ec
  44447a:	(bad)
  44447f:	hlt    
  444480:	ficomp WORD PTR [edx-0x32d7751f]
  444486:	ret    0x944
  444489:	fdiv   QWORD PTR [esi+0x3b]
  44448c:	in     eax,0x9a
  44448e:	ror    DWORD PTR [eax+eiz*1+0x734b72d1],1
  444495:	lsl    ecx,WORD PTR [ebx-0x19]
  444499:	aaa    
  44449a:	xchg   ecx,eax
  44449b:	mov    ah,0x0
	...
  4444ad:	add    BYTE PTR [eax],al
  4444af:	add    dh,bl
  4444b1:	sbb    bl,cl
  4444b3:	mov    ah,0xdc
  4444b5:	lahf   
  4444b6:	in     eax,0xb4
  4444b8:	into   
  4444b9:	xor    esp,ebp
  4444bb:	mov    fs,WORD PTR [edx+0x41]
  4444be:	(bad)  
  4444bf:	test   al,0x3d
  4444c1:	xor    DWORD PTR [ebx-0x2],eax
  4444c4:	cmp    eax,0x62039127
  4444c9:	bound  ebx,QWORD PTR [edi-0x4f9d6c2d]
  4444cf:	jmp    0x4444d6
  4444d1:	push   ebx
  4444d2:	mov    WORD PTR [ebx],es
  4444d4:	bound  ebx,QWORD PTR [esi+eiz*1-0x1]
  4444d8:	stos   BYTE PTR es:[edi],al
  4444d9:	(bad)  
  4444da:	mov    edx,0x2b8eaf43
  4444df:	(bad)  
  4444e0:	std    
  4444e1:	pop    DWORD PTR [edi-0x20cf07a5]
  4444e7:	pop    ss
  4444e8:	xchg   edi,eax
  4444e9:	mov    gs,WORD PTR [ebx+0x381d6200]
  4444ef:	mov    edx,DWORD PTR [edx-0x1f]
  4444f2:	mov    ebx,DWORD PTR cs:[edx-0x3b]
  4444f6:	jb     0x44452d
  4444f8:	or     eax,0x6e8bf244
  4444fd:	out    dx,eax
  4444fe:	add    BYTE PTR [edx-0x22],ah
  444501:	fdiv   DWORD PTR [esi+0xd961e8]
  444507:	call   0x39d011dd
  44450c:	mov    dl,0x58
  44450e:	add    eax,0xca966d3
  444513:	add    BYTE PTR cs:[eax],al
	...
  444526:	add    BYTE PTR [eax],al
  444528:	int3   
  444529:	ins    DWORD PTR es:[edi],dx
  44452a:	lds    esi,FWORD PTR [ebp-0x523ae2e6]
  444530:	sbb    bl,BYTE PTR ds:0x92e91ac5
  444536:	adc    al,0x17
  444538:	mov    cl,0x38
  44453a:	jle    0x44450b
  44453c:	popa   
  44453d:	(bad)  [ebx+0x405575da]
  444543:	stc    
  444544:	loopne 0x44455a
  444546:	std    
  444547:	adc    DWORD PTR [esi-0x55],ebp
  44454a:	add    dh,BYTE PTR [edx+0x76]
  44454d:	pop    esp
  44454e:	out    dx,eax
  44454f:	mov    ch,0x39
  444551:	push   ebp
  444552:	inc    esp
  444553:	fld1   
  444555:	mov    eax,ds:0x9ef19704
  44455a:	call   0xf874498c
  44455f:	call   0x9a462938
  444564:	adc    DWORD PTR [edi],ebp
  444566:	outs   dx,DWORD PTR ds:[esi]
  444567:	cmc    
  444568:	push   es
  444569:	test   eax,0xdda26a10
  44456e:	sub    DWORD PTR [edx-0xb],edi
  444571:	stos   BYTE PTR es:[edi],al
  444572:	(bad)  
  444573:	popa   
  444574:	mov    cl,0xd7
  444576:	mov    DWORD PTR [edx-0x55a46e0f],ebx
  44457c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44457d:	sbb    eax,0x1d9dadc5
  444582:	lds    edi,FWORD PTR [ecx+ebp*8]
  444585:	cmp    al,0x4f
  444587:	(bad)
	...
  4445a0:	or     eax,0xbbc27cd7
  4445a5:	fild   DWORD PTR [eax]
  4445a7:	mov    ecx,DWORD PTR [ebp-0x6b3f7ccf]
  4445ad:	scas   eax,DWORD PTR es:[edi]
  4445ae:	mov    cl,0x0
  4445b0:	mov    ebx,0x838b51db
  4445b5:	fnstenv [ebp-0x1]
  4445b8:	mov    eax,ds:0xe4832c5f
  4445bd:	sbb    BYTE PTR [edi+eiz*1-0x8],dh
  4445c1:	(bad)  
  4445c2:	aas    
  4445c3:	je     0x44455e
  4445c5:	pop    edx
  4445c6:	cli    
  4445c7:	pop    ebx
  4445c8:	jg     0x4445fa
  4445ca:	jne    0x4445cb
  4445cc:	pop    esp
  4445cd:	dec    ecx
  4445ce:	adc    BYTE PTR [ebx+0x13744504],al
  4445d4:	cli    
  4445d5:	(bad)  
  4445d6:	mov    es,WORD PTR [edx]
  4445d8:	dec    ebx
  4445d9:	fld    TBYTE PTR [ebx+ecx*1+0x4]
  4445dd:	xchg   ebx,eax
  4445de:	cli    
  4445df:	jmp    DWORD PTR [edi+eax*8+0x2e795d5a]
  4445e6:	clc    
  4445e7:	mov    cl,BYTE PTR [ebx]
  4445e9:	jecxz  0x44456e
  4445eb:	shr    bh,0xe1
  4445ee:	jge    0x44463e
  4445f0:	pop    ds
  4445f1:	imul   edi,DWORD PTR [ebp+0x46],0x13
  4445f5:	imul   edi,ecx,0xffffffd1
  4445f8:	mov    dh,ch
  4445fa:	or     BYTE PTR [ebx+0x427d26cd],cl
  444600:	mov    edi,0x74c159
	...
  444615:	add    BYTE PTR [eax],al
  444617:	add    dh,dh
  444619:	arpl   WORD PTR [ebx+0x24],cx
  44461c:	(bad)  [ebx+0x43]
  44461f:	sub    bl,bl
  444621:	mov    edi,0x7dddbf83
  444627:	push   esi
  444628:	out    0x61,eax
  44462a:	aaa    
  44462b:	inc    eax
  44462c:	bound  edi,QWORD PTR [ebp-0x44988bc4]
  444632:	mov    esi,0xb6ab3223
  444637:	daa    
  444638:	xor    ch,BYTE PTR [edi+0x34]
  44463b:	jge    0x4445e3
  44463d:	cmp    BYTE PTR [ecx-0x3d44a9ae],cl
  444643:	aaa    
  444644:	out    0x80,eax
  444646:	xchg   ecx,eax
  444647:	or     bl,cl
  444649:	(bad)  
  44464a:	loopne 0x44469b
  44464c:	jmp    0x95942b4f
  444651:	jno    0x4445d5
  444653:	les    ebx,FWORD PTR [edx-0x55]
  444656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444657:	sbb    ebx,ecx
  444659:	mul    ah
  44465b:	test   BYTE PTR [esp+ebx*1],ch
  44465e:	mov    dl,0x4f
  444660:	jne    0x4446b3
  444662:	add    ah,0x5a
  444665:	sar    DWORD PTR [edi*2-0x6d02ee9b],cl
  44466c:	and    ah,BYTE PTR [edi+0x35]
  44466f:	inc    edx
  444670:	jbe    0x4446b2
  444672:	add    al,0x0
  444674:	bound  esi,QWORD PTR [esi-0x34]
  444677:	jl     0x4446bb
  444679:	in     eax,dx
  44467a:	scas   eax,DWORD PTR es:[edi]
  44467b:	mov    ebp,0x0
	...
  444690:	inc    ax
  444692:	pop    esp
  444693:	cli    
  444694:	xor    eax,0x8f5a0dff
  444699:	add    al,BYTE PTR [ecx]
  44469b:	add    BYTE PTR [esi],dl
  44469d:	cld    
  44469e:	dec    eax
  44469f:	int3   
  4446a0:	cs mov ebx,0xbbad03b6
  4446a6:	adc    al,0x35
  4446a8:	or     ebp,DWORD PTR [esi-0x4af47aff]
  4446ae:	or     eax,0x44736673
  4446b3:	pop    ecx
  4446b4:	and    DWORD PTR [ebx],ebx
  4446b6:	xor    eax,0xe5d9a487
  4446bb:	mov    BYTE PTR [eax-0x7a],ah
  4446be:	cmp    DWORD PTR [ecx+0x43d4bc5],esi
  4446c4:	bound  esp,QWORD PTR [edx+0x18]
  4446c7:	clc    
  4446c8:	out    0x97,al
  4446ca:	loope  0x44464c
  4446cc:	sahf   
  4446cd:	fsubr  QWORD PTR [edx+0x1b]
  4446d0:	mov    ebp,0x1088d6a4
  4446d5:	jmp    0x4163f7e8
  4446da:	(bad)  
  4446db:	stos   DWORD PTR es:[edi],eax
  4446dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4446dd:	sub    eax,0xab9cd5e9
  4446e2:	loope  0x44466e
  4446e4:	and    cl,ch
  4446e6:	bound  edi,QWORD PTR [ebx+ebp*1]
  4446e9:	sbb    ch,BYTE PTR [ebx+0x1b]
  4446ec:	test   BYTE PTR [edi+eiz*8+0x16e92088],ah
  4446f3:	mov    cl,0x0
	...
  444705:	add    BYTE PTR [eax],al
  444707:	add    BYTE PTR ds:0x6da72241,ah
  44470d:	sub    eax,0xd835bd71
  444712:	pop    ss
  444713:	add    ebx,eax
  444715:	loope  0x444779
  444717:	cmp    al,0xbb
  444719:	sbb    BYTE PTR [esi],dl
  44471b:	inc    edi
  44471c:	push   ds
  44471d:	push   ds
  44471e:	cs inc edi
  444720:	push   ss
  444721:	push   ds
  444722:	es inc edi
  444724:	cs push ds
  444726:	arpl   WORD PTR [ebp-0x38679f77],di
  44472c:	out    0x83,al
  44472e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44472f:	add    BYTE PTR [edx],ah
  444731:	arpl   WORD PTR [eax-0x77e6b129],sp
  444737:	mov    bl,BYTE PTR [esi-0x6777f861]
  44473d:	popf   
  44473e:	jb     0x4446fd
  444740:	mov    eax,ds:0xf80a8e5e
  444745:	xchg   DWORD PTR [eax],eax
  444747:	cdq    
  444748:	dec    ecx
  444749:	xchg   ebx,eax
  44474a:	gs jmp 0x6dc39db1
  444750:	pop    esi
  444751:	fld    DWORD PTR [eax]
  444753:	ins    BYTE PTR es:[edi],dx
  444754:	push   0xffffff99
  444756:	add    ebp,DWORD PTR [ecx-0x167a959f]
  44475c:	inc    edi
  44475d:	les    eax,FWORD PTR [eax-0x17]
  444760:	pop    esp
  444761:	sbb    DWORD PTR [edx+0xd9e66f],ecx
  444767:	jmp    0x89d5b1cc
	...
  444780:	mov    edi,0x287000ec
  444785:	pop    ebp
  444786:	add    ecx,ebp
  444788:	popa   
  444789:	loop   0x44473a
  44478b:	popa   
  44478c:	or     al,ah
  44478e:	inc    eax
  44478f:	jmp    0xe9d5a6a2
  444794:	popa   
  444795:	fld    DWORD PTR [edi]
  444797:	div    BYTE PTR ss:[esi+0x1a]
  44479b:	sub    DWORD PTR [esi-0x52],ebx
  44479e:	mov    esp,0xba6c94e1
  4447a3:	jmp    0x444806
  4447a5:	fld    DWORD PTR [eax]
  4447a7:	jo     0x4447c1
  4447a9:	mov    al,0x89
  4447ab:	scas   eax,DWORD PTR es:[edi]
  4447ac:	cmc    
  4447ad:	push   edx
  4447ae:	aas    
  4447af:	lods   eax,DWORD PTR ds:[esi]
  4447b0:	into   
  4447b1:	xchg   edi,eax
  4447b2:	ins    BYTE PTR es:[edi],dx
  4447b3:	jo     0x44478d
  4447b5:	psubsw mm4,QWORD PTR fs:[ecx+0x54]
  4447ba:	inc    edi
  4447bb:	mov    cl,0xb6
  4447bd:	lahf   
  4447be:	pusha  
  4447bf:	pusha  
  4447c0:	sbb    BYTE PTR [ecx+ecx*4-0x6acd1651],dh
  4447c7:	(bad)  
  4447c8:	popa   
  4447c9:	fld    st(4)
  4447cb:	mov    esp,0xba523d94
  4447d0:	mov    WORD PTR [edx-0x531affdc],ss
  4447d6:	pop    ebx
  4447d7:	cld    
  4447d8:	push   eax
  4447d9:	loop   0x444858
  4447db:	inc    DWORD PTR [eax+0x748bfc6a]
  4447e1:	sbb    al,0x1d
  4447e3:	ja     0x4447e5
	...
  4447f5:	add    BYTE PTR [eax],al
  4447f7:	add    BYTE PTR [edi+0x506c41ac],al
  4447fd:	pop    ss
  4447fe:	sub    al,0x8d
  444800:	push   edi
  444801:	sub    ebp,esi
  444803:	(bad)  
  444804:	pushf  
  444805:	(bad)  
  444806:	sbb    eax,0x669360f0
  44480b:	pop    ebp
  44480c:	xor    BYTE PTR [edi],bl
  44480e:	xor    BYTE PTR [ebx+0x3e],dl
  444811:	sub    al,0x10
  444813:	push   ecx
  444814:	dec    ebx
  444815:	int    0x82
  444817:	ins    BYTE PTR es:[edi],dx
  444818:	mov    ebx,0x4f577dd7
  44481d:	lods   al,BYTE PTR ds:[esi]
  44481e:	inc    ecx
  44481f:	inc    esp
  444820:	mov    ds:0x3c296866,al
  444825:	jns    0x44489c
  444827:	les    ecx,FWORD PTR [edi+0xe5c590c]
  44482d:	sub    al,0x48
  44482f:	nop
  444830:	jl     0x4447c0
  444832:	aaa    
  444833:	(bad)  
  444834:	clc    
  444835:	int3   
  444836:	idiv   BYTE PTR [edx]
  444838:	cmp    BYTE PTR [esi+0x4],al
  44483b:	sub    ecx,DWORD PTR [eax-0x74cd0935]
  444841:	ins    BYTE PTR es:[edi],dx
  444842:	bound  ecx,QWORD PTR [ecx-0x7420adc6]
  444848:	or     al,0x17
  44484a:	jge    0x44481f
  44484c:	into   
  44484d:	sub    cl,BYTE PTR [edi-0x70]
  444850:	cmp    al,0x90
  444852:	aaa    
  444853:	(bad)  
  444854:	mov    eax,0x783af6cd
  444859:	inc    esp
  44485a:	add    al,0x2b
	...
  444870:	dec    eax
  444871:	retf   
  444872:	div    BYTE PTR [edx]
  444874:	bound  eax,QWORD PTR [eax]
  444876:	mov    dh,0x61
  444878:	fild   DWORD PTR [ecx-0x67]
  44487b:	out    0x61,al
  44487d:	das    
  44487e:	jbe    0x444881
  444880:	loope  0x4448da
  444882:	add    BYTE PTR [eax],al
  444884:	gs mov esp,0x40620053
  44488a:	ja     0x4448e5
  44488c:	outs   dx,BYTE PTR ds:[esi]
  44488d:	aas    
  44488e:	mov    cl,0x6b
  444890:	jmp    0x9a9d470f
  444895:	mov    bh,0xc
  444897:	call   0xf95662c7
  44489c:	arpl   bx,di
  44489e:	cwde   
  44489f:	test   BYTE PTR ds:0xeeb175e4,ah
  4448a5:	or     al,BYTE PTR [eax+eax*1]
  4448a8:	fild   WORD PTR [edx+ecx*1]
  4448ab:	jge    0x444855
  4448ad:	aas    
  4448ae:	mov    ?,WORD PTR [edx-0x17]
  4448b1:	jecxz  0x444853
  4448b3:	test   BYTE PTR ds:0x2a497508,dh
  4448b9:	pop    ss
  4448ba:	cmp    cl,BYTE PTR [ecx]
  4448bc:	int3   
  4448bd:	cmp    al,0xed
  4448bf:	xchg   BYTE PTR ds:0x65e02de8,ah
  4448c5:	jmp    0x1d43:0x6f630cc0
  4448cc:	sbb    eax,0xaa417b6c
  4448d1:	mov    ch,0x1a
  4448d3:	je     0x4448d5
	...
  4448e5:	add    BYTE PTR [eax],al
  4448e7:	add    BYTE PTR [edx-0x26b86649],dh
  4448ed:	dec    edx
  4448ee:	lods   al,BYTE PTR ds:[esi]
  4448ef:	test   BYTE PTR [ebp-0x594dfe28],bl
  4448f5:	adc    dh,bh
  4448f7:	test   BYTE PTR [ebp-0x261dd280],dl
  4448fd:	dec    edx
  4448fe:	shr    BYTE PTR [esp+ebx*1],0xd9
  444902:	retf   0xb1c8
  444905:	pop    esi
  444906:	(bad)  
  444907:	xlat   BYTE PTR ds:[ebx]
  444908:	fcom   QWORD PTR [ecx-0x2b19565f]
  44490e:	test   al,0xe4
  444910:	div    DWORD PTR [edx+0x5e8f0870]
  444916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444917:	mov    ebx,0xa9a591de
  44491c:	in     al,0xc4
  44491e:	mov    eax,ds:0xf864db10
  444923:	add    esp,DWORD PTR [edx+0x5e]
  444926:	pop    edi
  444927:	push   edi
  444928:	jo     0x444903
  44492a:	jmp    0xeae964ab
  44492f:	cmp    eax,DWORD PTR [esi+edx*2-0x2ab3fb3f]
  444936:	pop    esp
  444937:	inc    ebx
  444938:	xor    DWORD PTR [ecx+0x69],ebp
  44493b:	nop
  44493c:	xor    ebx,edx
  44493e:	call   0xedeaab46
  444943:	jl     0x4449b8
  444945:	push   esi
  444946:	and    al,0x8
  444948:	(bad)  
  444949:	fisub  DWORD PTR [esp+edi*1+0x0]
	...
  44495d:	add    BYTE PTR [eax],al
  44495f:	add    BYTE PTR [eax-0x1c8378d7],cl
  444965:	sbb    al,bl
  444967:	add    esp,DWORD PTR [edx+0x5e]
  44496a:	daa    
  44496b:	shr    BYTE PTR [esi],1
  44496d:	sbb    bl,bh
  44496f:	test   al,0xe6
  444971:	mov    eax,ds:0xbcf304ed
  444976:	and    cl,BYTE PTR [edx-0x31]
  444979:	not    DWORD PTR [edx]
  44497b:	inc    edx
  44497c:	fild   WORD PTR [edx]
  44497e:	imul   ecx,DWORD PTR [esp+ecx*2],0xd003e9da
  444985:	fiadd  WORD PTR [edx-0x15d6c2fb]
  44498b:	jl     0x444930
  44498d:	loope  0x44498f
  44498f:	jmp    0xbdfa:0x4150969b
  444996:	add    cl,ch
  444998:	out    0x1d,al
  44499a:	or     edx,ebp
  44499c:	push   ebx
  44499d:	or     DWORD PTR [ecx+0xcba176],0xffffffe9
  4449a4:	mov    dh,0x5d
  4449a6:	fisub  WORD PTR [esi+eiz*4+0x60eb8f54]
  4449ad:	fld    DWORD PTR [eax]
  4449af:	mov    dl,0xa7
  4449b1:	mov    dh,0x1d
  4449b3:	ret    0xa851
  4449b6:	mov    esi,0xd966eb
  4449bb:	adc    dl,BYTE PTR [esi+0x605ff1ee]
  4449c1:	pop    esi
  4449c2:	repnz bound eax,QWORD PTR [eax]
	...
  4449d5:	add    BYTE PTR [eax],al
  4449d7:	add    BYTE PTR ds:0xf4b103f1,al
  4449dd:	xchg   edi,eax
  4449de:	call   0xf86d22dc
  4449e3:	push   0x1a
  4449e5:	rol    DWORD PTR [ecx],1
  4449e7:	jbe    0x444a07
  4449e9:	retf   
  4449ea:	add    cl,ch
  4449ec:	iret   
  4449ed:	lea    ecx,[ebx-0x3a9a2c7c]
  4449f3:	cmp    al,0x9
  4449f5:	xor    eax,0xac093752
  4449fa:	or     BYTE PTR [edx-0x5c],dh
  4449fd:	aam    0x83
  4449ff:	test   eax,0x2cbf8a69
  444a04:	push   edx
  444a05:	and    bh,al
  444a07:	jmp    0x673c2e6d
  444a0c:	fnstenvw [ebx-0x16]
  444a10:	(bad)  
  444a11:	pushf  
  444a12:	hlt    
  444a13:	bound  esp,QWORD PTR [esp+ebp*4]
  444a16:	adc    DWORD PTR [ecx+0x5f],0xffffffaa
  444a1a:	adc    al,BYTE PTR [eax]
  444a1c:	mov    al,0xd7
  444a1e:	call   0xfa1cbf34
  444a23:	mov    edi,ebp
  444a25:	dec    edi
  444a26:	add    eax,0x4
  444a29:	pusha  
  444a2a:	test   eax,0xf7dc0b00
  444a2f:	inc    ebp
  444a30:	out    0xa2,eax
  444a32:	dec    edx
  444a33:	pop    esp
  444a34:	adc    BYTE PTR [edx],0xfc
  444a37:	mov    ecx,ebp
  444a39:	inc    edi
  444a3a:	rol    DWORD PTR [esi+0x0],0x0
	...
  444a4e:	add    BYTE PTR [eax],al
  444a50:	jg     0x444a2e
  444a52:	add    BYTE PTR [eax],al
  444a54:	or     ebx,DWORD PTR [ecx-0x3]
  444a57:	add    BYTE PTR [edi-0x20],ch
  444a5a:	sub    eax,0x1d1569d0
  444a5f:	rcl    BYTE PTR [edx+0x6e],1
  444a62:	je     0x4449ed
  444a64:	jge    0x444adf
  444a66:	or     ecx,0x33
  444a69:	loopne 0x444ae8
  444a6b:	push   esi
  444a6c:	jae    0x444a4a
  444a6e:	(bad)  
  444a6f:	jmp    0x444a3a
  444a71:	or     al,dh
  444a73:	push   0xffffffcb
  444a75:	add    dh,BYTE PTR [edi-0x1f90b6b0]
  444a7b:	cmp    DWORD PTR [eax],ebx
  444a7d:	fld    QWORD PTR [eax]
  444a7f:	mov    edx,DWORD PTR [ebp+0x79]
  444a82:	jge    0x444ac2
  444a84:	or     BYTE PTR [eax+0x69458910],ah
  444a8a:	loopne 0x444a15
  444a8c:	lock (bad) 
  444a8e:	stc    
  444a8f:	mov    ebx,DWORD PTR [ebp-0x74ef90a6]
  444a95:	dec    edi
  444a96:	cmp    eax,0x7d69458b
  444a9b:	push   esi
  444a9c:	addr16 mov ds:0x2c42,al
  444aa0:	jo     0x444a8e
  444aa2:	sub    eax,DWORD PTR [esi]
  444aa4:	dec    edx
  444aa5:	fild   DWORD PTR [eax]
  444aa7:	cmp    esp,DWORD PTR [edx-0x20]
  444aaa:	idiv   BYTE PTR [ebp-0x35]
  444aad:	xchg   edi,eax
  444aae:	push   es
  444aaf:	stc    
  444ab0:	out    0xe9,eax
  444ab2:	mov    eax,DWORD PTR [eax]
	...
  444ac8:	jmp    0x2341174b
  444acd:	pushf  
  444ace:	add    DWORD PTR ds:0x4e041b22,ebp
  444ad4:	mov    dl,0x66
  444ad6:	sbb    al,0xee
  444ad8:	xor    BYTE PTR [eax],0x4
  444adb:	test   DWORD PTR [esp+ebx*2-0x31ec585],ebx
  444ae2:	xrelease xchg BYTE PTR [esp+edi*2+0x27f93e1c],ch
  444aea:	push   es
  444aeb:	test   DWORD PTR [ebx+esi*4-0x77],edx
  444aef:	punpckldq mm0,DWORD PTR [edi]
  444af2:	mov    DWORD PTR [edx-0x23],eax
  444af5:	aas    
  444af6:	push   es
  444af7:	pop    ecx
  444af8:	xchg   ecx,eax
  444af9:	jo     0x444aa2
  444afb:	test   bh,al
  444afd:	in     eax,dx
  444afe:	inc    ecx
  444aff:	test   DWORD PTR [edi],ebx
  444b01:	add    al,0x7f
  444b03:	shl    BYTE PTR [esi],0x61
  444b06:	ds sub dh,0xe
  444b0a:	add    al,0x0
  444b0c:	bound  esi,QWORD PTR [eax]
  444b0e:	add    al,0x0
  444b10:	loope  0x444b7a
  444b12:	or     DWORD PTR [ebx+0x20],esi
  444b15:	stos   DWORD PTR es:[edi],eax
  444b16:	mov    dh,0x5b
  444b18:	fild   QWORD PTR [ecx-0x7b]
  444b1b:	add    cl,bl
  444b1d:	test   ah,0xfc
  444b20:	mov    ds:0xa22d035b,al
  444b25:	stos   DWORD PTR es:[edi],eax
  444b26:	scas   al,BYTE PTR es:[edi]
  444b27:	imul   ecx,DWORD PTR [eax],0x31
  444b2a:	fxch   st(6)
	...
  444b40:	adc    al,al
  444b42:	scas   al,BYTE PTR es:[edi]
  444b43:	out    0xcb,eax
  444b45:	sar    ah,cl
  444b47:	(bad)  
  444b48:	jmp    0xdee3f325
  444b4d:	out    0x6a,al
  444b4f:	dec    eax
  444b50:	jb     0x444ba2
  444b52:	test   al,0xaf
  444b54:	cmp    eax,0x3b0d5430
  444b59:	push   edx
  444b5a:	lock shl ch,1
  444b5d:	fild   QWORD PTR [eax+0x54d68af3]
  444b63:	inc    esp
  444b64:	mov    BYTE PTR [edx+0x2a],bl
  444b67:	add    ah,bh
  444b69:	cmp    edi,DWORD PTR [ebp-0x7a6120c0]
  444b6f:	js     0x444b21
  444b71:	test   edx,edx
  444b73:	inc    ecx
  444b74:	mov    ah,ch
  444b76:	pop    esp
  444b77:	xor    bh,BYTE PTR [edx-0x22]
  444b7a:	jb     0x444b3a
  444b7c:	sub    eax,0xec1933da
  444b81:	jmp    0xb42b:0xf2e59a20
  444b88:	sub    al,0x8f
  444b8a:	shl    DWORD PTR [eax+0x78e9d937],1
  444b90:	xor    BYTE PTR [ebp+0x1d46cd62],dh
  444b96:	cli    
  444b97:	jp     0x444ba9
  444b99:	test   ecx,edx
  444b9b:	pusha  
  444b9c:	lods   al,BYTE PTR ds:[esi]
  444b9d:	and    eax,0x5a6078b7
  444ba2:	xor    dh,ah
	...
  444bb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  444bb9:	(bad)  
  444bba:	pop    ebp
  444bbb:	mov    ds:0xac9f259a,al
  444bc0:	int    0xd7
  444bc2:	jmp    0x62cbadca
  444bc7:	sub    DWORD PTR es:[edx],ebx
  444bca:	xchg   esi,eax
  444bcb:	aas    
  444bcc:	scas   al,BYTE PTR es:[edi]
  444bcd:	adc    al,0xae
  444bcf:	aas    
  444bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444bd1:	adc    al,0xa6
  444bd3:	aas    
  444bd4:	sahf   
  444bd5:	adc    al,0x1
  444bd7:	sbb    al,0xeb
  444bd9:	xor    al,0x54
  444bdb:	pop    ss
  444bdc:	fld    TBYTE PTR [eax+0x24aabe08]
  444be2:	clc    
  444be3:	jmp    0x633caa49
  444be8:	pop    ds
  444be9:	test   eax,0xd960e735
  444bee:	add    BYTE PTR [edx+0x51f75e42],bh
  444bf4:	scas   al,BYTE PTR es:[edi]
  444bf5:	and    eax,0x97aa36f8
  444bfa:	ins    BYTE PTR es:[edi],dx
  444bfb:	in     al,dx
  444bfc:	addr16 and al,0xf8
  444bff:	jmp    0x9cc82af6
  444c04:	or     eax,0xc96d0725
  444c09:	es clc 
  444c0b:	jmp    0x6d4c65f4
  444c10:	push   ds
  444c11:	daa    
  444c12:	clc    
  444c13:	jmp    0x7b486dfa
  444c18:	lds    ebx,FWORD PTR [ebp+0x3f]
  444c1b:	mov    eax,ds:0x0
	...
  444c30:	pop    edx
  444c31:	(bad)  
  444c32:	pop    eax
  444c33:	jb     0x444c45
  444c35:	mov    cl,0x8b
  444c37:	pop    edi
  444c38:	mov    dl,0x15
  444c3a:	loope  0x444c9e
  444c3c:	or     ch,ch
  444c3e:	pop    es
  444c3f:	xchg   edi,eax
  444c40:	cli    
  444c41:	rol    DWORD PTR [edx],cl
  444c43:	cli    
  444c44:	push   ds
  444c45:	(bad)  
  444c46:	ds adc eax,0xa3c8f2d
  444c4c:	push   esp
  444c4d:	pop    esi
  444c4e:	dec    edi
  444c4f:	sub    DWORD PTR [edi],ebx
  444c51:	xchg   edi,eax
  444c52:	dec    eax
  444c53:	unpckhps xmm3,xmm5
  444c56:	inc    ecx
  444c57:	pop    es
  444c58:	paddusw mm7,QWORD PTR [edx+0x62]
  444c5c:	enter  0x23b0,0x1f
  444c60:	xchg   edx,eax
  444c61:	pop    ebp
  444c62:	dec    edi
  444c63:	add    BYTE PTR [ebx+0x20],cl
  444c66:	mov    cl,0x4
  444c68:	xor    DWORD PTR [edx+ecx*2+0x44670048],esp
  444c6f:	data16 ror BYTE PTR [edi+0x6c],0x66
  444c74:	rcl    BYTE PTR [ecx],cl
  444c76:	test   DWORD PTR ds:[ebx+0x49],edi
  444c7a:	sbb    DWORD PTR [ebx+0x567d4bfd],ecx
  444c80:	aas    
  444c81:	add    eax,eax
  444c83:	adc    DWORD PTR [ecx+0x3bfff7d7],0x3e77be13
  444c8d:	push   0x4503e852
  444c92:	clc    
  444c93:	inc    DWORD PTR [eax]
	...
  444ca5:	add    BYTE PTR [eax],al
  444ca7:	add    BYTE PTR [eax-0x3a76f767],cl
  444cad:	ja     0x444d24
  444caf:	jle    0x444c8c
  444cb1:	fimul  DWORD PTR [ecx]
  444cb3:	and    BYTE PTR [esi],0xdd
  444cb6:	add    BYTE PTR [eax],al
  444cb8:	in     eax,0xa2
  444cba:	dec    edx
  444cbb:	ins    BYTE PTR es:[edi],dx
  444cbc:	in     eax,0x2
  444cbe:	dec    edx
  444cbf:	jo     0x444c41
  444cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  444cc2:	mov    al,ds:0x7ed7cb16
  444cc7:	inc    esi
  444cc8:	sub    esp,DWORD PTR [edx+edi*4+0xd7d5a4]
  444ccf:	pmulhuw mm4,mm4
  444cd2:	bound  ecx,QWORD PTR [ecx-0x69829961]
  444cd8:	inc    ebx
  444cd9:	sub    bh,al
  444cdb:	push   DWORD PTR [eax]
  444cdd:	xchg   edx,eax
  444cde:	mov    al,ds:0x24d7bb16
  444ce3:	add    eax,DWORD PTR [ebx]
  444ce5:	and    al,0x2e
  444ce7:	add    ebp,ebx
  444ce9:	mov    bh,0x12
  444ceb:	add    BYTE PTR [ebx+0x1e],bh
  444cee:	mov    dl,0xc0
  444cf0:	bound  edi,QWORD PTR [ebx]
  444cf2:	push   edx
  444cf3:	nop
  444cf4:	push   edx
  444cf5:	pop    ss
  444cf6:	(bad)  
  444cf7:	(bad)  
  444cf8:	push   DWORD PTR [eax]
  444cfa:	pusha  
  444cfb:	xchg   edx,eax
  444cfc:	retf   0x43d
  444cff:	add    bh,dl
  444d01:	mov    ch,0x71
  444d03:	cwde   
  444d04:	data16 xor BYTE PTR [edi+edi*2],al
  444d08:	and    edi,DWORD PTR [edx+ecx*1+0x0]
	...
  444d1f:	add    BYTE PTR [edx+0x78],ah
  444d22:	add    al,0xff
  444d24:	inc    ebp
  444d25:	xor    DWORD PTR [edx-0xfffd5cc],esp
  444d2b:	or     ch,ch
  444d2d:	jmp    0x127ff2c
  444d32:	aad    0x3f
  444d34:	bound  edx,QWORD PTR [edi-0x3e2af708]
  444d3a:	cmp    al,0xe6
  444d3c:	pop    ebp
  444d3d:	sub    edx,DWORD PTR [edx+0x7e]
  444d40:	jb     0x444d48
  444d42:	(bad)  
  444d43:	(bad)  
  444d44:	jg     0x444d77
  444d46:	pusha  
  444d47:	sub    dl,0x39
  444d4a:	add    al,0x0
  444d4c:	jmp    0x6256ad03
  444d51:	xor    bh,cl
  444d53:	(bad)  
  444d54:	cmp    edi,ebp
  444d56:	les    eax,FWORD PTR [ecx+0x40b02]
  444d5c:	jmp    0xf64cea53
  444d61:	jno    0x444d3f
  444d63:	inc    ecx
  444d64:	dec    esi
  444d65:	mov    bh,0xb
  444d67:	test   DWORD PTR [esp+ecx*4],ebp
  444d6a:	lds    eax,FWORD PTR [ecx+0x430e2]
  444d70:	xor    eax,0x61f77dcb
  444d75:	fisubr WORD PTR [esi-0x630514b9]
  444d7b:	(bad)  
  444d7c:	aaa    
  444d7d:	(bad)  ds:0x72b5307d
  444d83:	stos   BYTE PTR es:[edi],al
	...
  444d98:	sbb    eax,0xe6ac204e
  444d9d:	fwait
  444d9e:	sar    eax,1
  444da0:	mov    bl,0x9d
  444da2:	jmp    0x444da9
  444da4:	lahf   
  444da5:	ss jae 0x444d62
  444da8:	and    esi,esp
  444daa:	stos   BYTE PTR es:[edi],al
  444dab:	in     eax,0xa3
  444dad:	lea    esp,[edx-0x56]
  444db0:	xchg   ecx,eax
  444db1:	push   eax
  444db2:	test   al,0xbb
  444db4:	pop    edx
  444db5:	push   0xffffffde
  444db7:	ret    0xff66
  444dba:	bound  esi,QWORD PTR [edx+0x60bb7d]
  444dc0:	mov    edx,ss
  444dc2:	jbe    0x444d86
  444dc4:	mov    ecx,0xdebba84e
  444dc9:	mov    ah,BYTE PTR [ebp-0x5c231b5f]
  444dcf:	or     BYTE PTR [eax+0x620362b9],ch
  444dd5:	fldl2t 
  444dd7:	mov    ss,edx
  444dd9:	das    
  444dda:	imul   eax,DWORD PTR [edx+eiz*2],0xffffffd9
  444dde:	call   0x9892d7a4
  444de3:	retf   
  444de4:	out    dx,al
  444de5:	mov    eax,DWORD PTR [ebp+0x2681987c]
  444deb:	ret    0xd93d
  444dee:	jmp    0x9816aff6
  444df3:	add    eax,0x35319ae5
  444df8:	ret    0x97d1
  444dfb:	mov    ebp,0x0
	...
  444e10:	mov    esp,0x23e4a8e6
  444e15:	lea    esi,[eax-0x3f]
  444e18:	and    eax,0x107d152e
  444e1d:	mov    ch,0x0
  444e1f:	bound  esp,QWORD PTR [ebx+0x5fe58ae9]
  444e25:	pop    esp
  444e26:	xchg   DWORD PTR [ecx-0x6d],ecx
  444e29:	and    eax,edi
  444e2b:	jb     0x444e40
  444e2d:	jge    0x444e3e
  444e2f:	jmp    0x83c4295
  444e34:	stc    
  444e35:	in     al,0x4a
  444e37:	jb     0x444e2c
  444e39:	js     0x444e4a
  444e3b:	jmp    0x51cbaaa1
  444e40:	push   ebx
  444e41:	and    eax,edi
  444e43:	popa   
  444e44:	push   ebp
  444e45:	rol    BYTE PTR [ecx],1
  444e47:	xchg   ecx,eax
  444e49:	retf   
  444e4a:	add    cl,ch
  444e4c:	dec    edx
  444e4d:	imul   eax,ecx,0xffffffcf
  444e50:	pusha  
  444e51:	cmp    eax,0xd961757f
  444e56:	add    BYTE PTR [edx-0x55],dh
  444e59:	cmp    eax,0x5461e90f
  444e5e:	jge    0x444ecf
  444e60:	(bad)  
  444e61:	fld    DWORD PTR [eax]
  444e63:	jmp    0x32705d96
  444e68:	sbb    BYTE PTR [ebx-0x5f],dl
  444e6b:	mul    DWORD PTR [ecx-0x27]
  444e6e:	pop    es
  444e6f:	jge    0x444e18
  444e71:	and    al,BYTE PTR [edi-0x6b]
	...
  444e88:	jbe    0x444eb1
  444e8a:	add    ah,BYTE PTR [edi-0x1107a42b]
  444e90:	gs adc esi,esi
  444e93:	mul    BYTE PTR [ebp+0x56]
  444e96:	inc    edi
  444e97:	lea    edx,[eax+ebx*1+0x79]
  444e9b:	out    dx,al
  444e9c:	dec    eax
  444e9d:	fwait
  444e9e:	cmp    dl,ch
  444ea0:	push   ds
  444ea1:	add    ebx,DWORD PTR ss:[edx]
  444ea4:	es push esi
  444ea6:	dec    edi
  444ea7:	cmp    eax,0x2b20d8
  444eac:	retf   0x486b
  444eaf:	push   esi
  444eb0:	xchg   ebx,eax
  444eb1:	cwde   
  444eb2:	pop    ecx
  444eb3:	add    BYTE PTR [ebx+0x6c42a3],cl
  444eb9:	pop    ss
  444eba:	jne    0x444e80
  444ebc:	mov    ebx,DWORD PTR [ebp+0x28f35c42]
  444ec2:	lock call esp
  444ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  444ec6:	or     al,BYTE PTR [ebx+0xef82552]
  444ecc:	(bad)  
  444ecd:	stos   DWORD PTR es:[edi],eax
  444ece:	sti    
  444ecf:	jmp    esp
  444ed1:	ja     0x444f2d
  444ed3:	xor    ecx,DWORD PTR [ebx]
  444ed5:	je     0x444f32
  444ed7:	ret    
  444ed8:	rcr    BYTE PTR [edi+0x6c],0x8b
  444edc:	xchg   ebx,eax
  444edd:	pop    esp
  444ede:	stc    
  444edf:	add    ch,BYTE PTR [ecx]
  444ee1:	fldcw  WORD PTR [edi+0xdc4b02]
  444ee7:	and    DWORD PTR [esi],0x28
  444eea:	add    al,0x89
	...
  444f00:	mov    ch,0x89
  444f02:	adc    al,BYTE PTR [eax]
  444f04:	cmp    ecx,DWORD PTR [ecx+0x3b]
  444f07:	mov    edi,ebp
  444f09:	ja     0x444e8e
  444f0b:	rcl    bl,cl
  444f0d:	push   ds
  444f0e:	jge    0x444f5e
  444f10:	add    ebx,ebx
  444f12:	mov    esi,0xbf0af9eb
  444f17:	push   ebx
  444f18:	and    BYTE PTR [edx-0x3c52aeb0],bl
  444f1e:	bound  ebx,QWORD PTR [edi-0x5]
  444f21:	fstp   TBYTE PTR [ebp+0x56]
  444f24:	xlat   BYTE PTR ds:[ebx]
  444f25:	mov    ds:0x258f833a,al
  444f2a:	jg     0x444f82
  444f2c:	out    0xc3,eax
  444f2e:	mov    dl,0xf7
  444f30:	(bad)  
  444f31:	(bad)  
  444f32:	jge    0x444f3a
  444f34:	push   0x62482fde
  444f39:	and    bl,BYTE PTR [edi-0x618f30f8]
  444f3f:	push   esp
  444f40:	fcomip st,st(0)
  444f42:	add    bl,BYTE PTR [ebx-0x5f]
  444f45:	mov    dl,0x3d
  444f47:	mov    al,ds:0x43274
  444f4c:	push   cs
  444f4d:	sub    bh,BYTE PTR [ebx+0x52]
  444f50:	lods   eax,DWORD PTR cs:[esi]
  444f52:	xor    DWORD PTR [eax+0x5d],edi
  444f55:	stos   DWORD PTR es:[edi],eax
  444f56:	lods   eax,DWORD PTR ds:[esi]
  444f57:	aaa    
  444f58:	popa   
  444f59:	jl     0x444f76
  444f5b:	(bad)  
  444f5c:	xor    BYTE PTR [ecx-0x66],bh
  444f5f:	(bad)  
  444f60:	cmp    BYTE PTR [esp+esi*4+0x4e],dh
	...
  444f78:	or     al,0x4a
  444f7a:	fistp  WORD PTR [eax+0x62]
  444f7d:	xor    BYTE PTR [ebx+0x52],bh
  444f80:	(bad)  
  444f81:	mov    ebx,0x21267cbd
  444f86:	jne    0x444fda
  444f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  444f89:	mov    BYTE PTR [esi+0x7a883df0],cl
  444f8f:	add    ah,cl
  444f91:	or     ah,dh
  444f93:	call   FWORD PTR [esp+ebp*4-0x5d]
  444f97:	clc    
  444f98:	and    eax,0xe9599ee0
  444f9d:	rep stos BYTE PTR es:[edi],al
  444f9f:	pop    edx
  444fa0:	and    DWORD PTR [ebp-0x1ae133d1],edi
  444fa6:	das    
  444fa7:	int3   
  444fa8:	push   ss
  444fa9:	in     eax,dx
  444faa:	das    
  444fab:	int3   
  444fac:	cs pop esi
  444fae:	jnp    0x444f9c
  444fb0:	xchg   ecx,eax
  444fb1:	data16 jnp 0x445027
  444fb4:	pop    edx
  444fb5:	aas    
  444fb6:	dec    ebx
  444fb7:	jmp    ebp
  444fb9:	xor    BYTE PTR [eax*4+0x73adbbdd],al
  444fc0:	jecxz  0x444feb
  444fc2:	cmc    
  444fc3:	dec    ch
  444fc5:	fldl2t 
  444fc7:	nop
  444fc8:	adc    DWORD PTR [edx-0x28],0xcf20181c
  444fcf:	add    eax,0x834d8fdf
  444fd4:	mov    ch,0xd7
  444fd6:	call   0xf3eeb1de
  444fdb:	add    BYTE PTR [eax],0x0
	...
  444fee:	add    BYTE PTR [eax],al
  444ff0:	sbb    ebp,ecx
  444ff2:	jmp    0xec3231eb
  444ff7:	add    esp,DWORD PTR [edx+0x54]
  444ffa:	mov    cl,0xf5
  444ffc:	loope  0x445005
  444ffe:	in     al,dx
  444fff:	add    esp,DWORD PTR [edx-0x16]
  445002:	test   eax,0x1bda6d81
  445007:	mov    ebx,0x793197e6
  44500c:	sbb    BYTE PTR [ecx+0x52c9ae72],al
  445012:	lock iret 
  445014:	cmp    DWORD PTR es:[ebx-0x4a],esp
  445018:	xchg   ebp,eax
  445019:	into   
  44501a:	xchg   edi,eax
  44501b:	mov    eax,0x431adb54
  445020:	pop    edi
  445021:	xchg   edi,eax
  445022:	mov    ch,0x78
  445024:	test   al,0x95
  445026:	or     cl,BYTE PTR [edx]
  445028:	out    0x86,eax
  44502a:	test   eax,0xbf91a07a
  44502f:	js     0x445097
  445031:	cwde   
  445032:	(bad)  
  445033:	jp     0x445093
  445035:	mov    ds:0xfa79b662,eax
  44503a:	scas   eax,DWORD PTR es:[edi]
  44503b:	iret   
  44503c:	fiadd  WORD PTR [esi-0x2b4d0b57]
  445042:	mov    ds:0x6291a878,eax
  445047:	scas   al,BYTE PTR es:[edi]
  445048:	mov    eax,ds:0x798672b7
  44504d:	mov    bh,0x70
  44504f:	enter  0x5227,0x1
  445053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  445068:	add    DWORD PTR [ebp+0x4f],edx
  44506b:	jns    0x445093
  44506d:	pop    ds
  44506e:	clc    
  44506f:	jmp    0x618ba6d5
  445074:	cmp    DWORD PTR [ebx+0x7ddf605c],ecx
  44507a:	jge    0x445025
  44507c:	fst    QWORD PTR [ebx-0x271e88c5]
  445082:	add    cl,ch
  445084:	repnz fisttp DWORD PTR [ebx+0x4754fa1f]
  44508b:	std    
  44508c:	stos   BYTE PTR es:[edi],al
  44508d:	or     eax,0x1e879082
  445092:	clc    
  445093:	jmp    0xd9b45f42
  445098:	mov    cl,0x87
  44509a:	call   0xf8621cf0
  44509f:	push   0x25
  4450a1:	ror    DWORD PTR [ecx-0x761f9d9],1
  4450a7:	in     al,dx
  4450a8:	out    0xc2,al
  4450aa:	cmp    DWORD PTR [edi-0x37],ecx
  4450ad:	fld    DWORD PTR [eax]
  4450af:	jmp    0x61c81e89
  4450b4:	bound  ebp,QWORD PTR [eax-0x4ef89def]
  4450ba:	sub    esi,DWORD PTR [edi-0x1605642f]
  4450c0:	xor    DWORD PTR ds:0x5462b7f8,ebx
  4450c6:	ja     0x445091
  4450c8:	call   0x0:0x6a7897
	...
  4450df:	add    BYTE PTR [ecx+0x1e],bl
  4450e2:	pop    es
  4450e3:	imul   ebp,esp,0x1b
  4450e6:	clc    
  4450e7:	jmp    0xe6a4ec14
  4450ec:	jbe    0x4450a3
  4450ee:	add    ecx,ebp
  4450f0:	popa   
  4450f1:	mov    bh,0x8b
  4450f3:	add    ch,al
  4450f5:	inc    esp
  4450f6:	bound  ebp,QWORD PTR [ebx]
  4450f8:	cmc    
  4450f9:	cmp    al,0x7d
  4450fb:	inc    esi
  4450fc:	fbld   TBYTE PTR [ecx+0x1e5744a]
  445102:	lds    ecx,FWORD PTR [ebx+0x1271dd]
  445108:	retf   
  445109:	dec    ecx
  44510a:	jl     0x445114
  44510c:	mov    cs,WORD PTR [ebx+0x42]
  44510f:	js     0x44509d
  445111:	pop    edi
  445112:	mov    esi,0x1275058b
  445117:	add    BYTE PTR [ebx+0x780c7fb2],cl
  44511d:	dec    esp
  44511e:	call   0x58b:0xd8b5a0
  445125:	cmp    eax,0xec8b0012
  44512a:	cmc    
  44512b:	xchg   DWORD PTR [edi-0x4449f642],eax
  445131:	pop    esp
  445132:	idiv   edi
  445134:	jnp    0x44510e
  445136:	neg    DWORD PTR [ebp+0xbfab]
  44513c:	cmp    al,0x62
  44513e:	mov    BYTE PTR [eax],dl
  445140:	and    BYTE PTR [eax+0x6600],bl
	...
  445156:	add    BYTE PTR [eax],al
  445158:	cmp    bh,BYTE PTR [edx+edx*4]
  44515b:	cwde   
  44515c:	inc    edi
  44515d:	fadd   DWORD PTR [eax]
  44515f:	(bad)  
  445160:	(bad)  
  445161:	aas    
  445162:	nop
  445163:	add    al,0x3b
  445165:	fdiv   DWORD PTR [edi-0x3f]
  445168:	pushf  
  445169:	fadd   DWORD PTR [eax]
  44516b:	add    bl,ah
  44516d:	aam    0xf7
  44516f:	dec    DWORD PTR [ebx]
  445171:	mov    dl,0x2d
  445173:	enter  0xcbc8,0x9
  445177:	mov    bh,0x52
  445179:	enter  0x81b2,0xfb
  44517d:	in     al,dx
  44517e:	inc    eax
  44517f:	add    BYTE PTR [edx-0x29],ah
  445182:	adc    DWORD PTR [ecx],ecx
  445184:	mov    ch,0xe0
  445186:	mov    ebp,0xba235de5
  44518b:	jge    0x4451ff
  44518d:	or     BYTE PTR [eax+eax*1+0x3c],al
  445191:	xor    DWORD PTR [eax+0x438da81],ebx
  445197:	add    cl,bl
  445199:	stos   DWORD PTR es:[edi],eax
  44519a:	xchg   edi,eax
  44519b:	adc    DWORD PTR [edx+0x32],esp
  44519e:	daa    
  44519f:	mov    ebp,0x82357971
  4451a4:	add    ah,BYTE PTR [esp+eax*1]
  4451a7:	add    cl,bl
  4451a9:	jmp    0x44521f
  4451ab:	or     esi,esi
  4451ad:	jo     0x445136
  4451af:	int3   
  4451b0:	dec    ecx
  4451b1:	inc    edx
  4451b2:	std    
  4451b3:	push   ecx
  4451b4:	push   ss
  4451b5:	scas   eax,DWORD PTR es:[edi]
  4451b6:	ret    
  4451b7:	stc    
  4451b8:	fucomi st,st(3)
  4451ba:	je     0x445143
	...
  4451d0:	das    
  4451d1:	sub    dl,BYTE PTR [ecx+0x62316246]
  4451d7:	ins    BYTE PTR es:[edi],dx
  4451d8:	(bad)  
  4451da:	jo     0x445211
  4451dc:	lea    ebx,[edx]
  4451de:	inc    edx
  4451df:	test   DWORD PTR [eax+ebp*8-0x4845b679],esp
  4451e6:	popa   
  4451e7:	xor    al,0x31
  4451e9:	push   ecx
  4451ea:	xchg   DWORD PTR [ecx-0x76],ecx
  4451ed:	and    edi,DWORD PTR [edx+0x2f2e534b]
  4451f3:	mov    edi,0x85506a81
  4451f8:	pushf  
  4451f9:	je     0x445180
  4451fb:	inc    ecx
  4451fc:	call   0xd6cf:0xa303bb23
  445203:	test   BYTE PTR [eax+esi*2+0x4666876a],ch
  44520a:	adc    esi,DWORD PTR [ecx-0x71722664]
  445210:	stos   DWORD PTR es:[edi],eax
  445211:	xchg   ecx,eax
  445212:	jb     0x44526d
  445214:	sahf   
  445215:	mov    bl,0x60
  445217:	pop    es
  445218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445219:	pop    esi
  44521a:	jmp    0xff1db422
  44521f:	push   eax
  445220:	pop    edx
  445221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445222:	cmp    al,BYTE PTR [eax+edi*1]
  445225:	lods   eax,DWORD PTR ds:[esi]
  445226:	push   0xffffff80
  445228:	pop    edx
  445229:	fldenv [edx+0x49]
  44522c:	adc    ch,BYTE PTR ss:[eax]
  44522f:	ins    BYTE PTR es:[edi],dx
  445230:	(bad)  
  445231:	fldl2t 
  445233:	add    eax,DWORD PTR [eax]
	...
  445245:	add    BYTE PTR [eax],al
  445247:	add    BYTE PTR [ebx+0x62064993],ah
  44524d:	fldl2t 
  44524f:	adc    dh,bl
  445251:	xor    al,0xbd
  445253:	add    DWORD PTR [ebx-0x1e9fefb2],ebx
  445259:	pop    es
  44525a:	xor    cl,BYTE PTR [ecx]
  44525c:	out    0x8b,eax
  44525e:	icebp  
  44525f:	add    al,0x9c
  445261:	cs in  al,dx
  445263:	xor    al,0xa5
  445265:	scas   eax,DWORD PTR es:[edi]
  445266:	jmp    0x38ce0697
  44526b:	pop    edx
  44526c:	jp     0x4452de
  44526e:	es add al,0x62
  445271:	dec    esi
  445272:	xor    BYTE PTR [eax-0x19],dh
  445275:	fisubr DWORD PTR [edx-0x38]
  445278:	gs push eax
  44527a:	and    BYTE PTR [eax+0x3a],ah
  44527d:	and    BYTE PTR [esi+0x1],ch
  445280:	dec    ebx
  445281:	dec    esi
  445282:	clc    
  445283:	test   BYTE PTR [edi-0x1eef1637],dh
  445289:	imul   ecx,DWORD PTR [ebp+0x1],0x2b
  44528d:	jp     0x445236
  44528f:	xor    al,0x22
  445291:	jle    0x44522f
  445293:	les    ebx,FWORD PTR [esi+0x6b03d19b]
  445299:	push   ebp
  44529a:	add    DWORD PTR [edx+0x66],ebx
  44529d:	fld    DWORD PTR [eax]
  44529f:	bound  ebx,QWORD PTR [eax+0x39b78bad]
  4452a5:	push   ebx
  4452a6:	cmp    eax,0x8f5462f1
  4452ab:	dec    ecx
	...
  4452c0:	dec    eax
  4452c1:	fld    DWORD PTR [eax]
  4452c3:	(bad)  
  4452c4:	shl    BYTE PTR [ebp+0xf],1
  4452c7:	jmp    0x883c3f2d
  4452cc:	call   0xe8a6a4ae
  4452d1:	inc    ecx
  4452d2:	psubsw mm4,QWORD PTR [ecx+0x54]
  4452d6:	xchg   DWORD PTR [ecx+0x7100d95b],ecx
  4452dc:	pop    ebp
  4452dd:	rol    DWORD PTR [ecx],cl
  4452df:	ja     0x4452e2
  4452e1:	enter  0xe900,0x52
  4452e5:	ror    DWORD PTR [bx+0x61],1
  4452e9:	cmp    eax,0xd961558f
  4452ee:	add    BYTE PTR [ebp+eiz*8+0x47],ah
  4452f2:	(bad)  
  4452f3:	jmp    0x6fd02c59
  4452f8:	ffree  st(7)
  4452fa:	add    cl,ch
  4452fc:	inc    esi
  4452fd:	pop    esp
  4452fe:	cmp    ch,BYTE PTR [edi-0x3f]
  445301:	mov    DWORD PTR [eax],0x8befece9
  445307:	aaa    
  445308:	ret    0xca5c
  44530b:	add    DWORD PTR [ebx+0x5e],ebp
  44530e:	aas    
  44530f:	mov    cl,0x66
  445311:	pop    eax
  445312:	in     al,dx
  445313:	jmp    0x4452a3
  445315:	sbb    DWORD PTR [edi+edi*4+0x12007fcd],ecx
  44531c:	adc    DWORD PTR [edi-0x20c640b0],esp
  445322:	push   esp
  445323:	jmp    0x445328
	...
  445338:	popa   
  445339:	pop    esi
  44533a:	aas    
  44533b:	add    BYTE PTR [edi],dh
  44533d:	data16 cmp al,BYTE PTR [ebx+0x467fec3f]
  445344:	test   DWORD PTR [esi+ecx*2],0x7dd934f4
  44534b:	push   cs
  44534c:	or     bh,BYTE PTR [ebx+0x64]
  44534f:	inc    ebp
  445351:	nop
  445352:	jne    0x4453cd
  445354:	jmp    0x445332
  445356:	fist   WORD PTR [esi+0x54]
  445359:	fyl2xp1 
  44535b:	add    DWORD PTR ds:0x4f4ef989,eax
  445361:	arpl   WORD PTR [edx+0x68],bx
  445364:	bound  edx,QWORD PTR ds:0x5cb4fffc
  44536a:	jp     0x4453d4
  44536c:	retf   
  44536d:	nop
  44536e:	inc    edx
  44536f:	mov    ebp,DWORD PTR [ebp-0x77]
  445372:	jge    0x4453ba
  445374:	push   ebx
  445375:	arpl   WORD PTR [edx+eax*1-0x6c],ax
  445379:	mov    ah,BYTE PTR fs:[eax-0x74ff2343]
  445380:	sub    eax,0x7b001241
  445385:	retf   
  445386:	stc    
  445387:	data16 add bl,BYTE PTR [ecx+0x3cfd8b3e]
  44538e:	adc    al,BYTE PTR [eax]
  445390:	mov    esp,DWORD PTR [ebx-0x76]
  445393:	cwde   
  445394:	ins    DWORD PTR es:[edi],dx
  445395:	fadd   QWORD PTR [eax]
  445397:	mov    BYTE PTR [edi-0x13],bh
  44539a:	neg    DWORD PTR [ebp+0x0]
	...
  4453b0:	stos   DWORD PTR es:[edi],eax
  4453b1:	out    dx,eax
  4453b2:	add    BYTE PTR [eax],al
  4453b4:	inc    esp
  4453b5:	dec    esi
  4453b6:	mov    eax,0x82783a66
  4453bb:	xchg   esp,eax
  4453bc:	cmp    ebx,esp
  4453be:	add    BYTE PTR [ebp+0x945fcf],cl
  4453c4:	dec    ebx
  4453c5:	fdivr  QWORD PTR [edi+0x7e]
  4453c8:	bound  ebx,QWORD PTR [edx]
  4453ca:	mov    eax,DWORD PTR [ecx-0x4a]
  4453cd:	jnp    0x445393
  4453cf:	jl     0x4453eb
  4453d1:	add    al,0x72
  4453d3:	add    ebx,ebx
  4453d5:	add    eax,DWORD PTR [eax+eax*1]
  4453d8:	bound  eax,QWORD PTR [ebx+0x795e0c81]
  4453de:	xchg   BYTE PTR [ebx+0x73040254],dh
  4453e4:	aaa    
  4453e5:	mov    ecx,DWORD PTR [esi+0x5c]
  4453e8:	out    0xd3,eax
  4453ea:	je     0x4453ed
  4453ec:	fnstenv [edi+0x3c]
  4453ef:	std    
  4453f0:	stos   DWORD PTR es:[edi],eax
  4453f1:	jmp    0xbe2b:0x72ab2d02
  4453f8:	xor    dh,BYTE PTR [ecx+0x4e]
  4453fb:	call   0x48bf2b
  445400:	jmp    0x74c9c4d4
  445405:	cmp    DWORD PTR [edi+0x60bfdb0f],0xffffffe8
  44540c:	sti    
  44540d:	xor    dh,bh
  44540f:	clc    
  445410:	jmp    0x104874c
	...
  445425:	add    BYTE PTR [eax],al
  445427:	add    BYTE PTR [ebx-0x3c],bl
  44542a:	or     al,0x59
  44542c:	pop    ebp
  44542d:	mov    ch,0xc3
  44542f:	pop    ecx
  445430:	sub    DWORD PTR [ebx+0x431efdc3],eax
  445436:	cmp    DWORD PTR [ecx+0x40fc2],0x62
  44543d:	div    BYTE PTR [eax*4-0x327639f4]
  445444:	fiadd  DWORD PTR [edi]
  445446:	mov    ecx,DWORD PTR [ecx-0x66]
  445449:	add    ecx,edx
  44544b:	in     al,0x60
  44544d:	push   ebx
  44544e:	lds    esp,FWORD PTR [ebp+0x62]
  445451:	sbb    eax,edx
  445453:	dec    edi
  445454:	xchg   ebx,eax
  445455:	fnstenv [edi-0x164d9815]
  44545b:	add    esp,edi
  44545d:	lahf   
  44545e:	mov    ebp,0x1e5a6b8a
  445463:	adc    esp,ebp
  445465:	lahf   
  445466:	popf   
  445467:	jmp    0x445420
  445469:	or     dh,BYTE PTR [edi]
  44546b:	(bad)  
  44546c:	out    0xe7,al
  44546e:	push   0x7c
  445470:	jb     0x44544b
  445472:	(bad)  
  445473:	xchg   DWORD PTR [edi+edx*1-0x486501e1],eax
  44547a:	jb     0x44543e
  44547c:	xchg   esi,eax
  44547d:	mov    ah,0x2a
  44547f:	iret   
  445480:	sbb    DWORD PTR [esi],esp
  445482:	push   ss
  445483:	iret   
  445484:	test   eax,0xa9cf2e25
  445489:	and    eax,0xcf26
	...
  44549e:	add    BYTE PTR [eax],al
  4454a0:	cdq    
  4454a1:	and    eax,0xaab98a95
  4454a6:	mov    ?,WORD PTR [edx+0x3ea16bc]
  4454ac:	jmp    0x62483f23
  4454b1:	fldenv [edx+0x7e]
  4454b4:	cs pop eax
  4454b6:	mov    DWORD PTR [edx],0x74ea169d
  4454bc:	bound  edi,QWORD PTR ds:[eax-0x50f3e414]
  4454c3:	std    
  4454c4:	ficom  WORD PTR [edi-0x24857cd3]
  4454ca:	call   0xf3d2b6d2
  4454cf:	sub    al,0xe0
  4454d2:	jmp    0xe96f32e3
  4454d7:	add    esp,DWORD PTR [edx+0x5c]
  4454da:	jg     0x4454e9
  4454dc:	fisub  WORD PTR [edi]
  4454de:	jmp    0x162b6e6
  4454e3:	das    
  4454e4:	mov    esi,0x61e900d9
  4454e9:	xchg   esp,eax
  4454ea:	imul   edx
  4454ec:	xchg   di,ax
  4454ee:	mov    ds:0x8bd961e9,al
  4454f3:	scas   eax,DWORD PTR es:[edi]
  4454f4:	mov    ch,0x5a
  4454f6:	rcr    esi,0xe5
  4454f9:	push   0x5c61e901
  4454fe:	dec    edi
  4454ff:	add    DWORD PTR [ebx+0x29],esp
  445502:	or     BYTE PTR [edi+0x0],bh
	...
  445515:	add    BYTE PTR [eax],al
  445517:	add    BYTE PTR [eax-0x15479f0],bl
  44551d:	adc    al,0xc3
  44551f:	imul   BYTE PTR [edi+0x75323bed]
  445525:	xchg   edx,eax
  445526:	pop    es
  445527:	pop    edi
  445528:	xchg   BYTE PTR [esi],dl
  44552a:	cmp    esp,DWORD PTR [edx]
  44552c:	push   ebp
  44552d:	mov    al,BYTE PTR [edi]
  44552f:	aas    
  445530:	ss pop ss
  445532:	sub    DWORD PTR [ecx],0x60
  445535:	int3   
  445536:	retf   
  445537:	jl     0x445574
  445539:	xchg   esi,eax
  44553a:	ret    0x60eb
  44553d:	fld    DWORD PTR [eax]
  44553f:	imul   bh
  445541:	lods   eax,DWORD PTR ds:[esi]
  445542:	add    DWORD PTR [ecx],ebp
  445544:	imul   ebx,DWORD PTR [esi+ebp*2],0x2a
  445548:	push   edi
  445549:	dec    ebx
  44554a:	pop    ecx
  44554b:	call   0x3d102171
  445550:	pop    eax
  445551:	loopne 0x445501
  445553:	and    DWORD PTR [ecx-0x67],esp
  445556:	cmp    esp,DWORD PTR [edx+0x7707c60c]
  44555c:	sbb    DWORD PTR [esi],edx
  44555e:	cmp    dl,ah
  445560:	stos   BYTE PTR es:[edi],al
  445561:	mov    ch,BYTE PTR [eax]
  445563:	out    dx,al
  445564:	mov    bh,0xad
  445566:	add    DWORD PTR [ecx],ebp
  445568:	sub    ebx,DWORD PTR [esi+ebp*2]
  44556b:	out    dx,al
  44556c:	outs   dx,BYTE PTR ds:[esi]
  44556d:	inc    edi
  44556e:	pop    ecx
  44556f:	add    BYTE PTR [edx-0x67],cl
  445572:	sub    eax,0x9ef56cb
  445577:	mov    dh,0x73
  445579:	fadd   DWORD PTR [eax+0x3b]
	...
  445590:	add    BYTE PTR [ebx+ecx*1-0x84f2af1],cl
  445597:	aas    
  445598:	and    BYTE PTR [edx],0x73
  44559b:	add    al,0x50
  44559d:	pop    ss
  44559e:	data16 mov ah,0x60
  4455a1:	pop    ss
  4455a2:	add    eax,DWORD PTR [edx]
  4455a4:	or     bl,cl
  4455a6:	add    BYTE PTR [ecx+0x1ad78c5],cl
  4455ac:	sti    
  4455ad:	fadd   DWORD PTR [eax]
  4455af:	cmp    eax,DWORD PTR [esi+ecx*4-0x2]
  4455b3:	mov    BYTE PTR [ebp-0x7ffa2288],bh
  4455b9:	xlat   BYTE PTR ds:[ebx]
  4455ba:	add    BYTE PTR [eax],al
  4455bc:	sti    
  4455bd:	pop    ecx
  4455be:	jp     0x445620
  4455c0:	enter  0x9261,0xa0
  4455c4:	mov    ch,0xd8
  4455c6:	add    BYTE PTR [edx+0x56],dh
  4455c9:	bound  eax,QWORD PTR [edx+0x60]
  4455cc:	inc    eax
  4455cd:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4455cf:	push   ss
  4455d0:	retf   
  4455d1:	fsub   DWORD PTR [ebx+eax*1]
  4455d4:	xor    BYTE PTR [edx+eiz*2],dl
  4455d7:	mov    DWORD PTR [edi-0x52],ecx
  4455da:	jge    0x44556a
  4455dc:	(bad)  
  4455de:	add    BYTE PTR [eax],al
  4455e0:	add    BYTE PTR [edi-0x70],ah
  4455e3:	push   ss
  4455e4:	mov    ebx,eax
  4455e6:	mov    BYTE PTR [ecx+edx*4],al
  4455e9:	fstp   QWORD PTR [edx+0xd8a5a0]
  4455ef:	pmaddwd mm5,QWORD PTR [ecx+ecx*1]
  4455f3:	mov    dh,0x0
	...
  445605:	add    BYTE PTR [eax],al
  445607:	add    BYTE PTR [ecx],cl
  445609:	in     eax,dx
  44560a:	sbb    eax,0xf77a7b40
  44560f:	fwait
  445610:	bound  eax,QWORD PTR [esp+edx*4-0x76fd9dfd]
  445617:	sbb    esp,0x79
  44561a:	add    BYTE PTR [eax],al
  44561c:	bound  eax,QWORD PTR [ebx]
  44561e:	mov    dl,0x2
  445620:	jb     0x44563b
  445622:	inc    esp
  445623:	add    ah,al
  445625:	add    DWORD PTR [eax+0x408ea81],edx
  44562b:	add    cl,bl
  44562d:	sbb    DWORD PTR [eax-0x78fd9def],0x41
  445634:	adc    bh,0xc7
  445637:	sub    al,0x30
  445639:	(bad)  [edx+0x402749f]
  44563f:	rcr    DWORD PTR [edx+eiz*1+0x2620004],0xb
  445647:	xchg   esp,eax
  445648:	and    BYTE PTR [ecx],ch
  44564a:	inc    edx
  44564b:	je     0x4456b0
  44564d:	cmp    al,0x60
  44564f:	test   DWORD PTR [eax],ebx
  445651:	xlat   BYTE PTR ds:[ebx]
  445652:	push   ecx
  445653:	test   DWORD PTR [esi+edx*4],ebp
  445656:	xchg   BYTE PTR [ecx-0x66],al
  445659:	mov    BYTE PTR [eax],al
  44565b:	or     cl,bl
  44565d:	and    DWORD PTR [eax+0x2f026211],0xfffffff9
  445664:	inc    esp
  445665:	jns    0x44569f
  445667:	dec    edi
  445668:	jmp    0x55f9f8
	...
  44567d:	add    BYTE PTR [eax],al
  44567f:	add    BYTE PTR [edx+0x2],ah
  445682:	xchg   DWORD PTR [ecx+0x413ca],edx
  445688:	jmp    0x1261:0xf7ff05fd
  44568f:	add    BYTE PTR [edx+0x3],ah
  445692:	mov    dl,0xcf
  445694:	cld    
  445695:	add    BYTE PTR [eax+0x401d691],dl
  44569b:	add    bh,ah
  44569d:	fsub   DWORD PTR [ebp-0x6f]
  4456a0:	rcr    eax,1
  4456a2:	jmp    0x6e9f35aa
  4456a7:	adc    DWORD PTR [edx-0x27],esp
  4456aa:	ret    0x86c6
  4456ad:	and    cl,al
  4456af:	sub    ebp,0x5b03e9eb
  4456b5:	ins    DWORD PTR es:[edi],dx
  4456b6:	test   eax,0xe88dabfa
  4456bb:	pop    ecx
  4456bc:	(bad)  
  4456bd:	pop    esp
  4456be:	xor    DWORD PTR [edx],ecx
  4456c0:	out    0x98,al
  4456c2:	push   edi
  4456c3:	cli    
  4456c4:	sub    bl,BYTE PTR [edi-0x60]
  4456c7:	push   edi
  4456c8:	loope  0x4456ea
  4456ca:	rol    BYTE PTR [edx],cl
  4456cc:	fistp  WORD PTR [ebx-0x132f8ff]
  4456d2:	jmp    0x44570a
  4456d4:	and    bl,BYTE PTR [edi-0x68]
  4456d7:	addr16 test cl,bl
  4456da:	add    dl,ch
  4456dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4456dd:	test   eax,0xb1ffebb7
  4456e2:	jmp    0x4456ea
	...
  4456f7:	add    bh,bl
  4456f9:	fwait
  4456fa:	jge    0x44568a
  4456fc:	fwait
  4456fd:	push   esi
  4456fe:	push   ds
  4456ff:	adc    ebx,ebp
  445701:	fwait
  445702:	popf   
  445703:	jmp    0x445694
  445705:	or     bh,dh
  445707:	stc    
  445708:	fsubrp st(3),st
  44570a:	push   0x7c
  44570c:	push   edx
  44570d:	(bad)  
  44570f:	and    BYTE PTR [ebx+0x13],0xdf
  445713:	stc    
  445714:	or     al,dh
  445716:	test   eax,0x6b16095d
  44571b:	ja     0x445787
  44571d:	fstp   QWORD PTR [esi-0x16142e7e]
  445723:	add    esp,DWORD PTR [edx-0x27]
  445726:	jmp    0x116682e
  44572b:	bound  ebp,QWORD PTR [eax]
  44572d:	mov    ch,0x7d
  44572f:	mov    al,ds:0x2f8bd7f6
  445734:	cs adc al,0xc1
  445737:	xchg   edx,eax
  445738:	pop    esp
  445739:	(bad)  
  44573a:	shl    BYTE PTR [edx-0x50],0x85
  44573e:	push   ebx
  44573f:	ret    0xa430
  445742:	push   eax
  445743:	pop    ds
  445744:	ds je  0x4457a0
  445747:	jmp    0x583b3ad
  44574c:	out    dx,eax
  44574d:	iret   
  44574e:	and    DWORD PTR [ebp-0x3ac0a5b2],0x39
  445755:	add    al,0xf1
  445757:	pop    esi
  445758:	sub    ebx,DWORD PTR [ebp+0x7]
  44575b:	sbb    al,BYTE PTR [eax]
	...
  44576d:	add    BYTE PTR [eax],al
  44576f:	add    BYTE PTR [esi],ah
  445771:	retf   
  445772:	inc    ecx
  445773:	stc    
  445774:	mov    edx,0xaf298de0
  445779:	xchg   esp,eax
  44577a:	shr    bl,0xac
  44577d:	push   esp
  44577e:	test   BYTE PTR [edi-0x3a],dh
  445781:	out    0x0,eax
  445783:	jmp    0x727fe4e9
  445788:	cwde   
  445789:	mov    ch,0x7d
  44578b:	xor    BYTE PTR [esi-0x28],ah
  44578e:	mov    ebp,DWORD PTR [edi+0x2c11499]
  445794:	pop    esp
  445795:	(bad)  
  445796:	shl    BYTE PTR [edx+0x30],0x85
  44579a:	push   0xffffffe9
  44579c:	jbe    0x4457c0
  44579e:	push   ebx
  44579f:	cdq    
  4457a0:	adc    eax,DWORD PTR [ecx]
  4457a2:	pop    edx
  4457a3:	xchg   ecx,eax
  4457a4:	popa   
  4457a5:	(bad)  [ebx+0x375c3a2f]
  4457ab:	push   0xffffffe5
  4457ad:	loope  0x445738
  4457af:	das    
  4457b0:	cmp    al,BYTE PTR [ecx]
  4457b2:	stos   BYTE PTR es:[edi],al
  4457b3:	fstp   DWORD PTR [edx-0x6aff73f0]
  4457b9:	pop    esp
  4457ba:	outs   dx,DWORD PTR ds:[esi]
  4457bb:	adc    BYTE PTR [ebx-0x20],bh
  4457be:	jl     0x445827
  4457c0:	mov    ah,0x10
  4457c2:	stc    
  4457c3:	pop    edi
  4457c4:	add    BYTE PTR ds:0x19b85d4d,bl
  4457ca:	int3   
  4457cb:	int3   
  4457cc:	mov    bh,0x19
  4457ce:	int3   
  4457cf:	int3   
  4457d0:	sahf   
  4457d1:	pop    esi
  4457d2:	in     al,dx
  4457d3:	push   edi
	...
  4457e8:	enter  0x6c92,0x0
  4457ec:	dec    esi
  4457ed:	in     al,dx
  4457ee:	jge    0x4457ee
  4457f0:	repz inc ecx
  4457f2:	out    0xff,al
  4457f4:	mov    ah,0x55
  4457f6:	jp     0x44586c
  4457f8:	dec    ebx
  4457f9:	loop   0x445877
  4457fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4457fc:	cmp    ebx,ebp
  4457fe:	add    BYTE PTR [ebx+0x4e7d78fd],cl
  445804:	jae    0x445864
  445806:	xchg   edx,eax
  445807:	mov    al,ds:0xc700dd0d
  44580c:	mov    ebp,0xfb00007c
  445811:	fdivr  QWORD PTR [esi+0x4]
  445814:	add    ebx,DWORD PTR [esi-0x76]
  445817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445818:	or     eax,0x443300dd
  44581d:	jp     0x44589e
  44581f:	cmp    al,0xaa
  445821:	pop    ebp
  445822:	mov    ah,BYTE PTR [eax-0x74ff2323]
  445828:	dec    ebp
  445829:	je     0x44583d
  44582b:	add    BYTE PTR [ebx-0x4bf5fb9c],bh
  445831:	dec    edx
  445832:	enter  0xcab9,0xdc
  445836:	add    BYTE PTR [eax],al
  445838:	retf   0x9862
  44583b:	push   ss
  44583c:	mov    ebx,0x370162dc
  445841:	pop    edi
  445842:	xchg   esp,eax
  445843:	add    BYTE PTR [edx+0x2],ah
  445846:	add    al,0xff
  445848:	daa    
  445849:	into   
  44584a:	out    dx,eax
  44584b:	dec    ecx
	...
  445860:	push   ss
  445861:	test   DWORD PTR [eax+0x402ee91],eax
  445867:	add    cl,ch
  445869:	mov    al,0x98
  44586b:	adc    DWORD PTR [edx+0x2],esp
  44586e:	mov    eax,DWORD PTR [ecx-0x2]
  445871:	sub    cl,ch
  445873:	ss int3 
  445875:	mov    ds:0xed620006,al
  44587a:	add    BYTE PTR [esp+ebp*4-0x35327e42],0xff
  445882:	mov    cl,BYTE PTR [ecx-0x76]
  445885:	add    ecx,edx
  445887:	in     al,0x60
  445889:	push   ebx
  44588a:	lds    esp,FWORD PTR [ebp+0x62]
  44588d:	sbb    eax,edx
  44588f:	dec    edi
  445890:	xchg   ebx,eax
  445891:	push   eax
  445892:	in     al,dx
  445893:	lea    ecx,[ebp-0x5b7afbfe]
  445899:	push   ss
  44589a:	mov    edi,DWORD PTR [ecx]
  44589c:	loope  0x445853
  44589e:	or     al,0x87
  4458a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4458a1:	ss in  al,dx
  4458a3:	(bad)  
  4458a5:	into   
  4458a6:	out    dx,eax
  4458a7:	test   BYTE PTR [ebx+eax*4+0x75],ch
  4458ab:	adc    BYTE PTR [edx+0x2f],ah
  4458ae:	add    DWORD PTR [ebp-0x13],0x222cefb6
  4458b5:	dec    edi
  4458b6:	pop    ecx
  4458b7:	mov    ebp,0x830c3ce9
  4458bc:	mov    ds:0xe4c0e865,al
  4458c1:	int    0x6
	...
  4458d7:	add    BYTE PTR [edx+0x2],ah
  4458da:	add    al,0x0
  4458dc:	bound  eax,QWORD PTR [ebx+0x3f2f03f4]
  4458e2:	mov    ecx,DWORD PTR [ecx+0xe]
  4458e5:	fldenv [esp+ecx*8+0x2d]
  4458e9:	fdiv   DWORD PTR [edx+0x3d]
  4458ec:	pop    edx
  4458ed:	fsubr  QWORD PTR [eax-0x56356816]
  4458f3:	mov    dh,BYTE PTR [ebx]
  4458f5:	jge    0x44594a
  4458f7:	add    eax,0x541c2a3f
  4458fc:	adc    BYTE PTR [ecx],al
  4458fe:	out    dx,al
  4458ff:	dec    esi
  445900:	(bad)  
  445901:	fldenv [edx+0x3d]
  445904:	(bad)  
  445905:	arpl   ax,sp
  445907:	and    BYTE PTR [ecx-0x41c28f18],0x1
  44590e:	pop    esi
  44590f:	out    0x5a,al
  445911:	packsswb mm0,QWORD PTR ds:0x44c1197f
  445918:	jb     0x4458c8
  44591a:	out    0x90,al
  44591c:	std    
  44591d:	pop    edx
  44591e:	stos   BYTE PTR es:[edi],al
  44591f:	add    DWORD PTR [ecx-0x324a94e6],ebx
  445925:	out    0xe9,eax
  445927:	add    esp,DWORD PTR [edx-0x7b]
  44592a:	and    cl,BYTE PTR [ebx-0x339b5255]
  445930:	(bad)  
  445931:	(bad)  
  445932:	bound  edi,QWORD PTR ds:0xea28da4a
  445938:	pop    es
  445939:	int3   
  44593a:	sub    DWORD PTR [edx+0x0],ecx
	...
  445950:	xchg   ebx,eax
  445951:	jge    0x445916
  445953:	add    edi,DWORD PTR [edi]
  445955:	sub    BYTE PTR [ebx+edx*2+0x4d160190],bl
  44595c:	(bad)  
  44595d:	fnstenv [edx+0x3d]
  445960:	dec    esi
  445961:	(bad)  
  445962:	rol    BYTE PTR [edx+0x3d60e9a1],1
  445968:	add    DWORD PTR cs:[esi+0x730ecae6],esp
  44596f:	add    eax,0xd900903f
  445974:	popa   
  445975:	loopne 0x4459f3
  445977:	mov    esi,DWORD PTR [ecx+edx*1-0x269e5e08]
  44597e:	add    cl,ch
  445980:	ss mov dl,0xc3
  445983:	cmp    al,0xeb
  445985:	add    cl,BYTE PTR [edi+0x62]
  445988:	std    
  445989:	loopne 0x4459da
  44598b:	pop    ds
  44598c:	jbe    0x44593a
  44598e:	out    0xbe,al
  445990:	ja     0x4459e7
  445992:	stc    
  445993:	ins    BYTE PTR es:[edi],dx
  445994:	outs   dx,DWORD PTR ds:[esi]
  445995:	mov    ecx,DWORD PTR [edx]
  445997:	(bad)  
  445998:	cld    
  445999:	in     al,dx
  44599a:	call   0xf855c7fc
  44599f:	jb     0x4459c0
  4459a1:	mov    cl,0x56
  4459a3:	xor    al,0x20
  4459a5:	fiadd  DWORD PTR [eax]
  4459a7:	popf   
  4459a8:	sbb    ah,BYTE PTR [edx]
  4459aa:	lds    esi,FWORD PTR [ebp-0x523adde6]
  4459b0:	sub    ah,BYTE PTR [edx]
  4459b2:	lds    ebx,FWORD PTR [eax+eax*1]
	...
  4459c5:	add    BYTE PTR [eax],al
  4459c7:	add    bl,ch
  4459c9:	add    DWORD PTR [edx+0x17],edx
  4459cc:	lahf   
  4459cd:	push   esp
  4459ce:	jbe    0x4459c1
  4459d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4459d1:	adc    DWORD PTR [eax],ecx
  4459d3:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4459d5:	loope  0x4459d7
  4459d7:	jmp    0x6458e2c6
  4459dc:	cld    
  4459dd:	loopne 0x445a5b
  4459df:	cld    
  4459e0:	pop    ecx
  4459e1:	fld    DWORD PTR [eax]
  4459e3:	jb     0x44598a
  4459e5:	fld    QWORD PTR [ebx+0x7fe0f530]
  4459eb:	add    BYTE PTR [esi-0x27],bl
  4459ee:	add    BYTE PTR [edx+0x6f],ch
  4459f1:	fld    QWORD PTR [eax]
  4459f3:	out    dx,al
  4459f4:	pop    ebp
  4459f5:	out    0x8,al
  4459f7:	jmp    0xe97be65d
  4459fc:	cmp    al,0xd7
  4459fe:	add    DWORD PTR [eax],0xffffffdc
  445a01:	or     eax,0xe2460ef8
  445a06:	or     BYTE PTR [eax],al
  445a08:	retf   
  445a09:	pusha  
  445a0a:	inc    edx
  445a0b:	add    al,0xfe
  445a0d:	outs   dx,DWORD PTR ds:[esi]
  445a0e:	idiv   bh
  445a10:	mov    ebx,0x8282ff7e
  445a15:	or     eax,0xcb58509
  445a1a:	clc    
  445a1b:	(bad)  
  445a1c:	clc    
  445a1d:	test   BYTE PTR [eax],dl
  445a1f:	add    BYTE PTR [esi-0x17],al
  445a22:	rol    DWORD PTR [edi-0x7d],0x6d
  445a26:	add    BYTE PTR [eax-0x75],0xa4
  445a2a:	mov    eax,0xfb
	...
  445a3f:	add    BYTE PTR [esp+eax*1+0x2ef05ef9],bh
  445a46:	pop    ebx
  445a47:	ret    0xd953
  445a4a:	jge    0x445aa2
  445a4c:	and    ebp,DWORD PTR [edx-0x643dc181]
  445a52:	hlt    
  445a53:	mov    DWORD PTR [ebp+0x4b01adbd],ecx
  445a59:	fld    DWORD PTR [eax]
  445a5b:	xor    DWORD PTR [ebx-0x657af63e],0xffffffda
  445a62:	add    BYTE PTR [eax],al
  445a64:	add    ebx,ebx
  445a66:	add    BYTE PTR [eax],al
  445a68:	or     edx,eax
  445a6a:	push   edx
  445a6b:	sbb    ah,bh
  445a6d:	mov    edi,ecx
  445a6f:	add    ebx,edi
  445a71:	fcomp  DWORD PTR [esi+0x0]
  445a74:	xor    ecx,ebx
  445a76:	pop    esi
  445a77:	add    BYTE PTR [ebx+0xb005bb5],dl
  445a7d:	pusha  
  445a7e:	inc    ecx
  445a7f:	xor    BYTE PTR [eax-0x4a74f36a],al
  445a85:	loopne 0x445a49
  445a87:	add    al,0xd3
  445a89:	in     eax,0xf7
  445a8b:	pop    ebp
  445a8c:	bound  ecx,QWORD PTR [esi]
  445a8e:	mov    DWORD PTR [ecx+0x76],eax
  445a91:	ja     0x445ad8
  445a93:	or     BYTE PTR [esi+edi*8+0x6c638513],bl
  445a9a:	or     BYTE PTR [ebp+0x49892e1c],al
  445aa0:	pop    edx
  445aa1:	mov    ah,0xf7
  445aa3:	pop    es
	...
  445ab8:	pop    edx
  445ab9:	add    DWORD PTR [edx+0x14],edx
  445abc:	jmp    0x24c96b75
  445ac1:	push   cs
  445ac2:	jne    0x445b0e
  445ac4:	pop    edx
  445ac5:	jne    0x445a83
  445ac7:	or     bh,bl
  445ac9:	mov    esp,edi
  445acb:	jmp    DWORD PTR [edx-0x79]
  445ace:	pop    edx
  445acf:	or     dl,ch
  445ad1:	dec    BYTE PTR [edi+edi*8]
  445ad4:	(bad)  
  445ad6:	ja     0x445b19
  445ad8:	dec    esi
  445ad9:	xchg   DWORD PTR [edx+0x8],eax
  445adc:	and    al,0xf6
  445ade:	sti    
  445adf:	jmp    DWORD PTR [edx-0x3c]
  445ae2:	sbb    BYTE PTR [ebp+0x517706a4],al
  445ae8:	pop    edx
  445ae9:	cmp    al,0x9
  445aeb:	adc    BYTE PTR [edx+0x1],ah
  445aee:	push   edx
  445aef:	adc    al,0xe9
  445af1:	mov    ebx,0xfa9c8518
  445af6:	leave  
  445af7:	add    ebx,DWORD PTR [edx+0x2]
  445afa:	std    
  445afb:	pop    ecx
  445afc:	jbe    0x445a85
  445afe:	dec    edx
  445aff:	adc    al,0xe9
  445b01:	dec    ebx
  445b02:	cld    
  445b03:	shl    DWORD PTR [esi+0x12],0x4
  445b07:	jmp    DWORD PTR [edi-0x197e88d2]
  445b0d:	add    DWORD PTR [eax+eax*1],eax
  445b10:	jmp    0xeac16b48
  445b15:	clc    
  445b16:	js     0x445b1b
  445b18:	xlat   BYTE PTR ds:[ebx]
  445b19:	fsubr  DWORD PTR [edx+0x4]
	...
  445b2f:	add    bh,al
  445b31:	jecxz  0x445b9d
  445b33:	mov    dl,0xdd
  445b35:	fsubr  st,st(1)
  445b37:	add    ecx,esp
  445b39:	mov    eax,fs
  445b3b:	xchg   ch,cl
  445b3d:	(bad)  
  445b3e:	jge    0x445b47
  445b40:	(bad)  
  445b41:	sbb    DWORD PTR [ebx],edx
  445b43:	or     edx,edi
  445b45:	aam    0xe9
  445b47:	add    esp,DWORD PTR [edx+0x60]
  445b4a:	nop
  445b4b:	sti    
  445b4c:	fst    st(4)
  445b4e:	clc    
  445b4f:	add    al,0x38
  445b51:	in     eax,0x72
  445b53:	dec    ecx
  445b54:	outs   dx,BYTE PTR ds:[esi]
  445b55:	pusha  
  445b56:	and    ah,bh
  445b58:	mov    ds:0x84fee1d4,eax
  445b5d:	lods   eax,DWORD PTR ds:[esi]
  445b5e:	aad    0xca
  445b60:	and    edx,ebp
  445b62:	cmp    BYTE PTR [edx+eiz*2],al
  445b65:	fld    st(0)
  445b67:	(bad)  
  445b68:	ins    BYTE PTR es:[edi],dx
  445b69:	or     ebp,edx
  445b6b:	jle    0x445b82
  445b6d:	mov    ch,0x72
  445b6f:	cmp    ecx,DWORD PTR [esi+0x240dc402]
  445b75:	pop    edx
  445b76:	mov    WORD PTR [ebx],ss
  445b78:	push   ebx
  445b79:	xor    esp,esi
  445b7b:	mov    esp,0x5ebf8c5
  445b80:	sub    eax,0x3310325f
  445b85:	xor    esp,edx
  445b87:	mov    esp,0x5e1f8ad
  445b8c:	adc    eax,0x1313b25f
  445b91:	xor    DWORD PTR [edi*4+0x0],eax
	...
  445ba8:	xchg   ebp,eax
  445ba9:	clc    
  445baa:	in     eax,0x5
  445bac:	sbb    eax,0xdf041257
  445bb1:	fwait
  445bb2:	icebp  
  445bb3:	add    dl,cl
  445bb5:	sbb    esp,ebp
  445bb7:	rcr    esi,cl
  445bb9:	xchg   esp,eax
  445bba:	add    cl,ah
  445bbc:	imul   esp,esi,0xe593e808
  445bc2:	mov    ebp,DWORD PTR [edi-0x2b8ab8b]
  445bc8:	pusha  
  445bc9:	inc    edi
  445bca:	dec    edx
  445bcb:	in     eax,dx
  445bcc:	dec    esp
  445bcd:	test   al,0x8
  445bcf:	popa   
  445bd0:	(bad)
  445bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  445bd4:	push   ebp
  445bd5:	push   esp
  445bd6:	dec    edi
  445bd7:	frstor [eax+0x47]
  445bda:	push   ebx
  445bdb:	in     al,dx
  445bdc:	sub    al,0x98
  445bde:	or     al,0x62
  445be0:	and    esp,ecx
  445be2:	mov    ch,bh
  445be4:	cdq    
  445be5:	or     edx,DWORD PTR [esi-0xb]
  445be8:	push   ss
  445be9:	mov    al,ds:0x93cbe614
  445bee:	(bad)  
  445bef:	popa   
  445bf0:	sbb    ch,ah
  445bf2:	mov    ebx,DWORD PTR [edi]
  445bf4:	jle    0x445c48
  445bf6:	add    eax,0xcaf60d9
  445bfb:	bound  ecx,QWORD PTR [eax]
  445bfd:	in     eax,dx
  445bfe:	pop    es
  445bff:	ja     0x445c0d
  445c01:	fmul   DWORD PTR [ebx+0x47547a2f]
  445c07:	icebp  
  445c08:	(bad)  
  445c0a:	or     al,ch
	...
  445c20:	mov    bl,0xe5
  445c22:	mov    esp,DWORD PTR [edi-0x26]
  445c25:	or     eax,edi
  445c27:	jmp    0x6a50fcea
  445c2c:	inc    esi
  445c2d:	shr    DWORD PTR [ebp-0x12],cl
  445c30:	stc    
  445c31:	or     edi,eax
  445c33:	jmp    0x6a545099
  445c38:	rcl    BYTE PTR [ecx+0x1],1
  445c3b:	jmp    0xe0b967a1
  445c40:	out    0x1,al
  445c42:	add    ecx,ebp
  445c44:	pop    ebp
  445c45:	mov    esp,0xd29000c0
  445c4a:	mov    eax,0xd60b04
  445c4f:	mov    ecx,ebp
  445c51:	or     eax,0xd70a0480
  445c56:	pop    edx
  445c57:	adc    al,0x50
  445c59:	xchg   edi,eax
  445c5a:	adc    al,0x8b
  445c5c:	std    
  445c5d:	loope  0x445cdd
  445c5f:	dec    ecx
  445c60:	(bad)  
  445c61:	mov    WORD PTR [ecx+0x8],ss
  445c64:	inc    ebx
  445c65:	fst    DWORD PTR [eax]
  445c67:	add    DWORD PTR ds:0x97467de2,eax
  445c6d:	push   esp
  445c6e:	jo     0x445c80
  445c70:	mov    ebx,0x2f14498c
  445c75:	mov    bh,0x7e
  445c77:	inc    eax
  445c78:	lahf   
  445c79:	mov    WORD PTR [ecx+0x8],ss
  445c7c:	adc    edx,edx
  445c7e:	pop    es
  445c7f:	add    DWORD PTR [ebp-0xf],edx
  445c82:	jge    0x445cd2
	...
  445c98:	ja     0x445c25
  445c9a:	ds adc eax,0x8b0c9ff0
  445ca0:	dec    ebp
  445ca1:	or     eax,0xd68b0c80
  445ca6:	pop    edx
  445ca7:	adc    al,0x0
  445ca9:	cwde   
  445caa:	or     al,0x8b
  445cac:	popf   
  445cad:	jmp    0xdd6bd727
  445cb2:	ins    BYTE PTR es:[edi],dx
  445cb3:	adc    eax,eax
  445cb5:	xchg   edx,eax
  445cb6:	or     BYTE PTR [ecx-0x40],dl
  445cb9:	cdq    
  445cba:	xor    BYTE PTR [eax+0x5a],dl
  445cbd:	and    eax,0xdd4b5b46
  445cc2:	jg     0x445d0b
  445cc4:	jmp    0x445cd7
  445cc6:	inc    edx
  445cc7:	and    BYTE PTR [ebx],bh
  445cc9:	fld    QWORD PTR [eax]
  445ccb:	add    BYTE PTR [edx+edx*4-0x4],cl
  445ccf:	inc    esp
  445cd0:	or     ebx,ebp
  445cd2:	add    cl,ch
  445cd4:	bound  eax,QWORD PTR [ebp+0x7b620003]
  445cda:	inc    ecx
  445cdb:	xor    cl,ah
  445cdd:	test   eax,0xf703befb
  445ce2:	cmp    BYTE PTR [esi+0x3fa62],0x2b
  445ce9:	mov    al,0x7b
  445ceb:	(bad)  
  445cec:	(bad)  
  445cee:	data16 and cl,ch
  445cf1:	cmp    BYTE PTR [edi-0x1],0xcd
  445cf5:	repnz and al,0xbe
  445cf8:	inc    esi
  445cf9:	adc    BYTE PTR [ebp-0x9],bh
	...
  445d10:	fs pop ebp
  445d12:	add    BYTE PTR [ebp+0x2d00eba1],al
  445d18:	nop
  445d19:	jae    0x445d06
  445d1b:	add    DWORD PTR [ebp-0x53],edx
  445d1e:	mov    ebp,0xdaf4208a
  445d23:	std    
  445d24:	push   eax
  445d25:	xor    bh,BYTE PTR [esi-0x44049b21]
  445d2b:	jl     0x445d31
  445d2d:	(bad)  
  445d2e:	cld    
  445d2f:	jae    0x445d92
  445d31:	jae    0x445ce8
  445d33:	pop    ds
  445d34:	mov    edx,0x5a3e0c7d
  445d39:	inc    edi
  445d3a:	fisub  WORD PTR [eax+ebx*4]
  445d3d:	popa   
  445d3e:	(bad)  
  445d3f:	mov    ah,BYTE PTR [esi+0xc]
  445d42:	mov    ebp,0xc2f35ee7
  445d47:	test   BYTE PTR [edx],bl
  445d49:	xor    esi,ebx
  445d4b:	add    bh,BYTE PTR [ecx+0x3a]
  445d4e:	jl     0x445d11
  445d50:	and    eax,0x626f08b8
  445d55:	repnz add ebp,eax
  445d58:	pop    ds
  445d59:	pop    ebx
  445d5a:	call   0x583c3f57
  445d5f:	add    BYTE PTR [esi-0x2d010427],dl
  445d65:	xchg   edi,eax
  445d66:	sbb    ebx,esp
  445d68:	retf   
  445d69:	repz dec esi
  445d6b:	out    dx,eax
  445d6c:	pop    edx
  445d6d:	push   eax
  445d6e:	xchg   edi,eax
  445d6f:	xor    ecx,DWORD PTR [edx]
  445d71:	dec    esi
  445d72:	push   ebx
  445d73:	out    dx,eax
	...
  445d88:	cli    
  445d89:	jb     0x445d74
  445d8b:	pop    ecx
  445d8c:	bound  esi,QWORD PTR [ebx-0x17]
  445d8f:	fld    TBYTE PTR [edi-0x52]
  445d92:	jmp    0xd9e4429a
  445d97:	sbb    BYTE PTR [ebx-0x23],0x9c
  445d9b:	(bad)  
  445d9c:	loopne 0x445db9
  445d9e:	jmp    0x3f0f:0xa0546203
  445da5:	sbb    ecx,0x475d6b03
  445dab:	add    al,0x62
  445dad:	(bad)  
  445daf:	mov    dh,0x65
  445db1:	in     eax,dx
  445db2:	bound  edi,QWORD PTR [esi]
  445db4:	jbe    0x445e08
  445db6:	sub    eax,0x99f4cfc
  445dbb:	jae    0x445dc2
  445dbd:	imul   esp,DWORD PTR [ebx+0x45],0x1fc46e
  445dc4:	icebp  
  445dc5:	int3   
  445dc6:	jb     0x445e1d
  445dc8:	push   esi
  445dc9:	pop    esp
  445dca:	inc    esp
  445dcb:	and    BYTE PTR [edx-0x73],ah
  445dce:	shr    BYTE PTR [edx],1
  445dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  445dd1:	mov    cs,esp
  445dd3:	sbb    bl,BYTE PTR ds:0x6a4572aa
  445dd9:	fisubr DWORD PTR [eax+0x39c99a7a]
  445ddf:	push   ebp
  445de0:	cmp    ah,BYTE PTR [ecx+0x50620433]
  445de6:	daa    
  445de7:	xor    al,0x4a
  445de9:	pop    ecx
  445dea:	xchg   ebx,eax
  445deb:	out    dx,al
	...
  445e00:	sub    dl,BYTE PTR [ebx+0x1]
  445e03:	das    
  445e04:	dec    edx
  445e05:	pop    esp
  445e06:	leave  
  445e07:	pusha  
  445e08:	mov    ds:0x15af3bd1,al
  445e0d:	mov    esp,DWORD PTR [edx+esi*2]
  445e10:	mov    bh,0xe5
  445e12:	mov    esp,DWORD PTR [ebx+0x94f5c71]
  445e18:	js     0x445dec
  445e1a:	adc    DWORD PTR [edx-0x59],esi
  445e1d:	ror    DWORD PTR [eax+0x465c59ed],1
  445e23:	loope  0x445dde
  445e25:	pop    es
  445e26:	clc    
  445e27:	jmp    0xfd82648d
  445e2c:	pop    esi
  445e2d:	fwait
  445e2e:	and    BYTE PTR [edx+0x37],dh
  445e31:	in     eax,0x7
  445e33:	pop    esi
  445e34:	and    ebp,ebp
  445e36:	cmp    DWORD PTR [edi+0x72987781],esp
  445e3c:	pmulhw mm0,QWORD PTR [ebx+0x6cd94d83]
  445e43:	aad    0x28
  445e45:	cwde   
  445e46:	or     al,0xb2
  445e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  445e49:	mov    BYTE PTR ds:0x8b96a112,cl
  445e4f:	daa    
  445e50:	mov    es,WORD PTR ds:0xc94762c1
  445e56:	push   eax
  445e57:	cmp    BYTE PTR [esi+0x61e95a08],bl
  445e5d:	pop    esi
  445e5e:	inc    eax
  445e5f:	stc    
  445e60:	jmp    0x0:0x6214a7
	...
  445e77:	add    BYTE PTR [ecx+edi*4],bl
  445e7a:	cmp    ebp,DWORD PTR [ebx]
  445e7c:	jp     0x445e08
  445e7e:	push   es
  445e7f:	scas   al,BYTE PTR es:[edi]
  445e80:	pushf  
  445e81:	mov    ecx,0xd961e900
  445e86:	mov    edi,0x9e5a2f
  445e8b:	jmp    0xbae2f1
  445e90:	inc    edi
  445e91:	ret    
  445e92:	or     DWORD PTR [ebp+0xdd9a],eax
  445e98:	rol    bh,0x14
  445e9b:	adc    DWORD PTR [edx],0xffffffd6
  445e9e:	add    BYTE PTR [edi],cl
  445ea0:	xchg   DWORD PTR [esi-0x7f040009],eax
  445ea6:	push   ecx
  445ea7:	adc    al,0x80
  445ea9:	lahf   
  445eaa:	or     al,0x3b
  445eac:	lds    eax,FWORD PTR ds:0xc7703173
  445eb2:	adc    al,0x83
  445eb4:	and    ah,dh
  445eb6:	add    BYTE PTR [edx+edx*1-0x4f],dh
  445eba:	mov    dh,0x76
  445ebc:	mov    dh,0x80
  445ebe:	dec    eax
  445ebf:	xor    BYTE PTR [eax+0x58b4817],dh
  445ec5:	add    dh,ch
  445ec7:	ror    DWORD PTR [ebx],0xab
  445eca:	call   0x11e5168
  445ecf:	mov    DWORD PTR [edx+ecx*8],eax
  445ed2:	call   0xf938b098
  445ed7:	mov    esi,ebp
  445ed9:	in     eax,dx
  445eda:	jge    0x445eac
	...
  445ef0:	rcr    BYTE PTR [ebx-0x7f948bfc],1
  445ef6:	dec    ecx
  445ef7:	and    BYTE PTR [eax],dl
  445ef9:	xchg   esp,eax
  445efa:	adc    al,0x8b
  445efc:	push   eax
  445efd:	jmp    0xd4150b
  445f02:	aaa    
  445f03:	mov    DWORD PTR ds:0x734e7dbd,ebp
  445f09:	sbb    DWORD PTR [ebx],0xc9bac08
  445f0f:	test   eax,esi
  445f11:	mov    ebx,DWORD PTR [edi-0x8cdb915]
  445f17:	(bad)  
  445f18:	cmp    ebx,ecx
  445f1a:	jge    0x445f62
  445f1c:	bound  ecx,QWORD PTR [esi]
  445f1e:	xor    DWORD PTR [edi-0x72],0xe91c6ff2
  445f25:	mov    ah,0x18
  445f27:	xor    eax,0x850f0d20
  445f2c:	xchg   esp,eax
  445f2d:	cli    
  445f2e:	sbb    BYTE PTR [esi-0x7b46104e],bh
  445f34:	lods   eax,DWORD PTR ds:[esi]
  445f35:	loop   0x445f8a
  445f37:	dec    esi
  445f38:	cli    
  445f39:	xor    cl,BYTE PTR [ebx+0x0]
  445f3c:	bound  edi,QWORD PTR [ecx+0x3c]
  445f3f:	xor    bh,ah
  445f41:	(bad)  
  445f42:	outs   dx,BYTE PTR ds:[esi]
  445f43:	push   es
  445f44:	jmp    0x445f82
  445f46:	and    al,0xc1
  445f48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  445f49:	dec    BYTE PTR [eax+0x0]
  445f4c:	(bad)  
  445f4e:	cmp    BYTE PTR [ecx+0x66],0x67
  445f52:	cmc    
  445f53:	add    BYTE PTR [eax],0x0
	...
  445f66:	add    BYTE PTR [eax],al
  445f68:	add    ebx,esi
  445f6a:	add    eax,DWORD PTR [eax]
  445f6c:	fnstcw WORD PTR [eax+ecx*1]
  445f6f:	jge    0x445fbb
  445f71:	push   ss
  445f72:	add    al,0x9
  445f74:	out    0xa3,al
  445f76:	add    eax,DWORD PTR [eax]
  445f78:	bound  eax,QWORD PTR [edi-0x1046ebb3]
  445f7e:	jbe    0x445fc6
  445f80:	bound  esi,QWORD PTR [edi+0x3d]
  445f83:	adc    al,0x59
  445f85:	cmp    al,0xf8
  445f87:	jb     0x445fdc
  445f89:	xchg   DWORD PTR [edx],edi
  445f8b:	sbb    al,0xe1
  445f8d:	jns    0x445fa7
  445f8f:	add    BYTE PTR [esi],cl
  445f91:	or     DWORD PTR [edi],esp
  445f93:	mov    esi,0x48770cf4
  445f98:	xor    ah,bh
  445f9a:	mov    esi,0xf4bcd94f
  445f9f:	cld    
  445fa0:	mov    ds:0x4be84de2,eax
  445fa5:	jmp    0x3426:0xd8ebfffc
  445fac:	cmp    ch,dl
  445fae:	xchg   ebx,eax
  445faf:	jmp    0x445ffb
  445fb1:	push   eax
  445fb2:	sub    BYTE PTR [eax],dl
  445fb4:	out    0x28,eax
  445fb6:	rol    DWORD PTR [ecx+0x66],cl
  445fb9:	(bad)  
  445fba:	leave  
  445fbb:	jle    0x445f58
  445fbd:	mov    ecx,0x50464a72
  445fc2:	adc    esp,DWORD PTR [eax]
  445fc4:	imul   ecx,DWORD PTR [ebx-0x3a],0xfffffffe
  445fc8:	push   esp
  445fc9:	push   edx
  445fca:	mov    al,0x23
	...
  445fe0:	out    0x92,eax
  445fe2:	icebp  
  445fe3:	jnp    0x44604e
  445fe5:	ror    DWORD PTR [esi+0x42],1
  445fe8:	push   esi
  445fe9:	pop    esi
  445fea:	xor    esi,DWORD PTR [ecx-0x43]
  445fed:	out    dx,eax
  445fee:	in     al,0xae
  445ff0:	in     al,dx
  445ff1:	add    ebp,edx
  445ff3:	add    ebx,edi
  445ff5:	call   0x6fe9:0xb55586cd
  445ffc:	jbe    0x44604e
  445ffe:	test   al,0xf
  446000:	xchg   edi,eax
  446001:	pop    ss
  446002:	nop
  446003:	adc    bh,bl
  446005:	xchg   edx,eax
  446006:	loope  0x446026
  446008:	cld    
  446009:	test   al,0xea
  44600b:	mov    ebp,0x54b9abde
  446010:	sbb    al,0xf1
  446012:	pop    ecx
  446013:	dec    esp
  446014:	(bad)  
  446015:	fldenv [eax+0x43]
  446018:	push   edx
  446019:	pop    esi
  44601a:	adc    esi,DWORD PTR [ecx+0x63]
  44601d:	sbb    al,0x28
  44601f:	add    BYTE PTR [ebx],al
  446021:	fldl2t 
  446023:	add    eax,DWORD PTR [edi]
  446025:	and    ebp,0x62
  446028:	icebp  
  446029:	mov    eax,ds:0x58564162
  44602e:	inc    edx
  44602f:	sbb    BYTE PTR [edx-0x73],ah
  446032:	xor    BYTE PTR [edi+0x1b],bh
  446035:	in     eax,dx
  446036:	add    BYTE PTR [edx+0x26],ch
  446039:	add    eax,0x895a1f3b
  44603e:	std    
  44603f:	nop
  446040:	hlt    
  446041:	sti    
  446042:	neg    DWORD PTR [esi+0x0]
	...
  446058:	les    ebx,FWORD PTR [eax+0x391640c]
  44605e:	cmp    esi,DWORD PTR [edi]
  446060:	cmp    cl,BYTE PTR [edx-0x366f8cd3]
  446066:	mov    ebp,DWORD PTR [edi]
  446068:	es pop ebx
  44606a:	or     eax,0x8a89ce1
  44606f:	xor    BYTE PTR [esi-0x27],bl
  446072:	add    cl,ch
  446074:	data16 (bad) 
  446076:	or     al,0x72
  446078:	mov    ds:0x36b68aed,eax
  44607d:	jnp    0x44607f
  44607f:	ret    
  446080:	popa   
  446081:	push   ecx
  446082:	adc    eax,0xc8f66d9
  446087:	shl    DWORD PTR [ecx-0xf],cl
  44608a:	and    eax,0x89d96191
  44608f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446090:	xchg   ecx,eax
  446091:	sbb    BYTE PTR [edi],bh
  446093:	in     eax,dx
  446094:	push   esi
  446095:	fld    DWORD PTR [eax]
  446097:	jmp    0xe950e178
  44609c:	dec    ebp
  44609d:	fsubp  st(0),st
  44609f:	mov    eax,ds:0x6af80196
  4460a4:	cmp    cl,ch
  4460a6:	add    BYTE PTR [ebx+ebx*1+0x18],dh
  4460aa:	aas    
  4460ab:	ror    DWORD PTR [eax+0x27eef801],0xa0
  4460b2:	xor    ebp,DWORD PTR [ecx+0x3cde5c18]
  4460b8:	pushf  
  4460b9:	fiadd  DWORD PTR [eax]
  4460bb:	push   0x0
	...
  4460cd:	add    BYTE PTR [eax],al
  4460cf:	add    BYTE PTR [ebx],cl
  4460d1:	fld    QWORD PTR [eax]
  4460d3:	push   esp
  4460d4:	and    BYTE PTR [esi+edi*1+0x0],bl
  4460d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4460d9:	int3   
  4460da:	mov    edi,0x9d9a383
  4460df:	sahf   
  4460e0:	or     cl,BYTE PTR [edx-0x3d3fffed]
  4460e6:	add    al,0x8d
  4460e8:	fnstsw WORD PTR [bx]
  4460eb:	sbb    edx,0xfffffffd
  4460ee:	sbb    al,0xd1
  4460f0:	sbb    BYTE PTR [edi],bh
  4460f2:	jne    0x4460ec
  4460f4:	aas    
  4460f5:	add    DWORD PTR [edx-0x28a38d3f],ebx
  4460fb:	or     DWORD PTR [eax],edx
  4460fd:	cvtps2pi mm3,xmm2
  446100:	adc    al,0xdb
  446102:	jne    0x4460fc
  446104:	push   DWORD PTR [ecx+0x18]
  446107:	pop    ebx
  446108:	cmp    al,0x98
  44610a:	sbb    BYTE PTR [ebx+edx*4-0x2ca0ff63],ah
  446111:	repz clc 
  446113:	jmp    DWORD PTR [edi+ecx*4+0x1bc6e57d]
  44611a:	add    BYTE PTR [eax],al
  44611c:	jo     0x4460e0
  44611e:	add    al,0x8b
  446120:	add    eax,0x31f97702
  446125:	fild   DWORD PTR [eax]
  446127:	add    dh,ch
  446129:	aam    0x75
  44612b:	jg     0x4460ec
  44612d:	aad    0x6c
  44612f:	sbb    esi,eax
  446131:	sbb    BYTE PTR [ecx+0x18],al
	...
  446148:	pop    ds
  446149:	test   DWORD PTR [edi],esi
  44614b:	add    BYTE PTR [esi+ebp*1],al
  44614e:	in     eax,dx
  44614f:	jmp    DWORD PTR [eax+esi*8-0x659174a7]
  446156:	mov    dh,0x8
  446158:	mov    ebx,DWORD PTR [ecx+edi*2+0x4]
  44615c:	jnp    0x4461d0
  44615e:	push   cs
  44615f:	and    DWORD PTR ds:0x62750089,0x4
  446166:	ja     0x446127
  446168:	gs jl  0x446152
  44616b:	jmp    FWORD PTR [ebp-0x11]
  44616e:	xor    dh,0xc8
  446171:	in     eax,dx
  446172:	add    eax,DWORD PTR [eax]
  446174:	ins    DWORD PTR es:[edi],dx
  446175:	outs   dx,BYTE PTR ds:[esi]
  446176:	(bad)  
  446178:	push   ebp
  446179:	repz je 0x446105
  44617c:	(bad)  
  44617e:	add    eax,DWORD PTR [eax]
  446180:	mov    dl,0x73
  446182:	jmp    0x2df5:0xdbfcb6fd
  446189:	push   eax
  44618a:	jmp    0xd533880b
  44618f:	and    ah,cl
  446191:	pop    ecx
  446192:	std    
  446193:	jb     0x4461fd
  446195:	pop    edx
  446196:	and    eax,0x7c7015f3
  44619b:	ret    
  44619c:	stos   WORD PTR es:[edi],ax
  44619e:	adc    DWORD PTR [ebp+0x376d4],eax
  4461a4:	bound  esi,QWORD PTR [ebp+0x7]
  4461a7:	inc    edi
  4461a8:	jmp    0xebe8a3
	...
  4461bd:	add    BYTE PTR [eax],al
  4461bf:	add    BYTE PTR [ebx+0x32],cl
  4461c2:	add    al,0x52
  4461c4:	in     eax,0xe2
  4461c6:	jl     0x44618b
  4461c8:	push   0x73
  4461ca:	jmp    0x4461c9
  4461cc:	push   ecx
  4461cd:	cmc    
  4461ce:	jl     0x4461c7
  4461d0:	popa   
  4461d1:	pop    ebp
  4461d2:	add    ecx,eax
  4461d4:	sbb    al,0xf6
  4461d6:	test   ebp,edi
  4461d8:	mov    ebp,0x65bf76f2
  4461dd:	jbe    0x446245
  4461df:	jmp    FWORD PTR [ebp+0x60f77cf2]
  4461e5:	out    dx,eax
  4461e6:	ja     0x446253
  4461e8:	arpl   dx,si
  4461ea:	add    esi,DWORD PTR [ebp+0x3f263]
  4461f0:	dec    ecx
  4461f1:	fldcw  WORD PTR [edx-0x15a31f09]
  4461f7:	add    esp,DWORD PTR [edx+0x54]
  4461fa:	and    eax,0x4d1c2ef8
  4461ff:	sti    
  446200:	adc    esi,ecx
  446202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446203:	ss (bad) 
  446205:	fldcw  WORD PTR [edx-0x40]
  446208:	popa   
  446209:	hlt    
  44620a:	push   ds
  44620b:	or     DWORD PTR [ebp-0x2a],0x2d
  44620f:	cmp    al,ah
  446211:	fst    DWORD PTR [ebx]
  446213:	add    al,0xbc
  446215:	fldcw  WORD PTR [edi]
  446217:	fmul   QWORD PTR [ebx-0x72]
  44621a:	jmp    0xfa5a1922
  44621f:	sub    BYTE PTR [eax+0x70eacd],0x0
	...
  446236:	add    BYTE PTR [eax],al
  446238:	jno    0x44628e
  44623a:	sub    BYTE PTR [eax],bh
  44623c:	out    0xa6,eax
  44623e:	and    eax,0x60772233
  446243:	inc    eax
  446244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  446245:	push   DWORD PTR [edx+0x36]
  446248:	xchg   esi,eax
  446249:	push   esp
  44624a:	mov    al,ds:0xe0a4e93f
  44624f:	in     eax,0xa7
  446251:	test   eax,0xd993ef41
  446256:	jmp    0x6b1583dd
  44625b:	push   si
  44625d:	fnstenv [ebp+esi*8+0x3e611986]
  446264:	ds push edx
  446266:	test   al,0x47
  446268:	fst    QWORD PTR [esi+0x4e]
  44626b:	push   cs
  44626c:	(bad)  
  44626d:	fld    DWORD PTR [ecx]
  44626f:	mov    ebx,0x8306ffc2
  446274:	sub    ch,cl
  446276:	jmp    0x96e8b5eb
  44627b:	mov    esi,0xf600b123
  446280:	jl     0x446282
  446282:	clc    
  446283:	mov    edx,0xcc8ba1a1
  446288:	sbb    bh,BYTE PTR [edi]
  44628a:	or     ecx,ebp
  44628c:	enter  0xf7fe,0xe9
  446290:	popa   
  446291:	jle    0x446308
  446293:	(bad)  [ebp-0x30]
  446296:	jge    0x4462e8
  446298:	jl     0x44629a
  44629a:	clc    
  44629b:	jb     0x44629d
	...
  4462ad:	add    BYTE PTR [eax],al
  4462af:	add    BYTE PTR [edi-0x4356821f],bl
  4462b5:	aam    0x8b
  4462b7:	stos   BYTE PTR es:[edi],al
  4462b8:	cwde   
  4462b9:	mov    al,ds:0xa4427256
  4462be:	ret    0x61f1
  4462c1:	jl     0x4462bb
  4462c3:	jmp    0x4462f1
  4462c5:	pop    esp
  4462c6:	sub    cl,0x61
  4462c9:	(bad)  [ebx+0x4057521f]
  4462cf:	mov    ecx,0x61089098
  4462d4:	adc    eax,0x720f01d0
  4462d9:	shr    BYTE PTR [esi+0x3f544ebe],1
  4462df:	cmc    
  4462e0:	js     0x446272
  4462e2:	or     BYTE PTR [ecx+0x65],ah
  4462e5:	rol    DWORD PTR [ecx],1
  4462e7:	scas   eax,DWORD PTR es:[edi]
  4462e8:	pop    ebp
  4462e9:	shr    BYTE PTR [esi+0x3f54339e],1
  4462ef:	aad    0x58
  4462f1:	nop
  4462f2:	or     BYTE PTR [ecx+0x65],ah
  4462f5:	rol    DWORD PTR [ecx],1
  4462f7:	(bad)  
  4462f8:	pop    ebp
  4462f9:	shr    BYTE PTR [esi+0x3f5490be],1
  4462ff:	cmc    
  446300:	cmp    BYTE PTR [eax-0x2e9a9ef8],dl
  446306:	add    DWORD PTR [edi+0xaed05d],ebp
  44630c:	les    eax,FWORD PTR [edx]
  44630e:	jge    0x446356
  446310:	mov    bh,0x83
  446312:	dec    ecx
  446313:	or     BYTE PTR [eax],al
	...
  446325:	add    BYTE PTR [eax],al
  446327:	add    BYTE PTR [ebx],al
  446329:	into   
  44632a:	or     BYTE PTR [ecx],al
  44632c:	(bad)  
  44632e:	or     DWORD PTR [esi+0x467d0244],esi
  446334:	ja     0x4462b7
  446336:	dec    ecx
  446337:	or     BYTE PTR [ebx],al
  446339:	jmp    0xe9816446
  44633e:	or     DWORD PTR [esi+0x467d0344],esi
  446344:	aaa    
  446345:	or     DWORD PTR [ecx+0x8],0x108e9c3
  44634c:	pop    ebp
  44634d:	jmp    0xc9195b
  446352:	jge    0x44639a
  446354:	aaa    
  446355:	or     DWORD PTR [ecx+0x8],0x108e9c3
  44635c:	jge    0x446347
  44635e:	fst    QWORD PTR [esp+ebp*1]
  446361:	sub    eax,0x3f903249
  446366:	loopne 0x446335
  446368:	in     eax,0xf3
  44636a:	clc    
  44636b:	andps  xmm0,xmm4
  44636e:	xor    al,ch
  446370:	aaa    
  446371:	pop    ds
  446372:	stc    
  446373:	call   DWORD PTR [ebx-0x73001ddc]
  446379:	add    BYTE PTR [ecx+0x18],0x86
  44637d:	adc    eax,0xd24057a
  446382:	jg     0x4463ca
  446384:	ret    
  446385:	enter  0x39c0,0x5
  446389:	into   
  44638a:	dec    ebp
  44638b:	pop    edi
	...
  4463a0:	lods   al,BYTE PTR ds:[esi]
  4463a1:	dec    ebp
  4463a2:	mov    eax,0x5b1e505e
  4463a7:	ret    0xd9b3
  4463aa:	jne    0x44642b
  4463ac:	bound  eax,QWORD PTR [eax]
  4463ae:	add    al,0x9
  4463b0:	out    0x9c,eax
  4463b2:	(bad)  
  4463b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4463b5:	cmp    bh,BYTE PTR ds:0xdd2824c1
  4463bb:	clc    
  4463bc:	xchg   ebp,eax
  4463bd:	push   es
  4463be:	xor    eax,eax
  4463c0:	sub    al,0x7b
  4463c2:	xlat   BYTE PTR ds:[ebx]
  4463c3:	pop    edx
  4463c4:	mov    al,ds:0x25c10407
  4463c9:	fsub   DWORD PTR [eax+0x3cf02287]
  4463cf:	mov    eax,0xf8dd0e6c
  4463d4:	add    al,0x8b
  4463d6:	(bad)  
  4463d7:	pop    edx
  4463d8:	and    BYTE PTR [ebx],cl
  4463da:	add    al,0xcc
  4463dc:	fidivr WORD PTR es:[ecx-0x15]
  4463e0:	mov    bl,0x77
  4463e2:	and    BYTE PTR ss:[ecx+0x3e42b549],dl
  4463e9:	repnz add eax,DWORD PTR [eax]
  4463ec:	bound  esp,QWORD PTR [edi]
  4463ee:	ret    
  4463ef:	or     dh,ah
  4463f1:	cmc    
  4463f2:	add    DWORD PTR [eax],eax
  4463f4:	bound  ebx,QWORD PTR [edx]
  4463f6:	cld    
  4463f7:	or     bh,ah
  4463f9:	jge    0x4463fd
  4463fb:	add    BYTE PTR [edx+0x6f],ah
  4463fe:	pop    esi
  4463ff:	and    al,0x4a
  446401:	sbb    esi,DWORD PTR [edi-0x14]
	...
  446418:	arpl   dx,si
  44641a:	add    edx,DWORD PTR [ecx-0x17]
  44641d:	sbb    eax,0x1efb34fc
  446422:	in     eax,dx
  446423:	test   BYTE PTR [ebp+0x4a487bd2],ah
  446429:	xlat   BYTE PTR ds:[ebx]
  44642a:	ret    
  44642b:	jae    0x446494
  44642d:	fldcw  WORD PTR ds:0xabf64f24
  446433:	stc    
  446434:	int    0xab
  446436:	fcomp  QWORD PTR [eax-0x27]
  446439:	fld    DWORD PTR [esi+eax*2]
  44643c:	cld    
  44643d:	mov    ecx,0xcd3880e9
  446442:	push   cs
  446443:	outs   dx,BYTE PTR ds:[esi]
  446444:	arpl   WORD PTR [ebx*4-0x16269c09],dx
  44644b:	add    ebp,DWORD PTR [edi]
  44644d:	push   eax
  44644e:	xchg   ebp,eax
  44644f:	cmovg  esp,DWORD PTR [edx]
  446452:	ins    DWORD PTR es:[edi],dx
  446453:	cld    
  446454:	in     al,0x8e
  446456:	in     eax,0xeb
  446458:	scas   al,BYTE PTR es:[edi]
  446459:	lock out dx,al
  44645b:	xchg   BYTE PTR [esi-0x34],dh
  44645e:	push   edi
  44645f:	adc    DWORD PTR [ebx+0x6206cd96],esp
  446465:	fldl2t 
  446467:	xchg   BYTE PTR [esi-0x17],bh
  44646a:	jo     0x4464ad
  44646c:	jbe    0x4464be
  44646e:	and    eax,0xb1589cfc
  446473:	or     al,0x5b
  446475:	push   esp
  446476:	bound  eax,QWORD PTR ds:0x616ad962
	...
  446490:	push   edx
  446491:	shl    esi,1
  446493:	mov    BYTE PTR [ebx-0x26fc1626],bh
  446499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44649a:	xchg   ecx,eax
  44649b:	xchg   DWORD PTR [edi],ebp
  44649d:	aam    0xee
  44649f:	mov    cl,BYTE PTR [edi-0x32fc1626]
  4464a5:	shr    ecx,1
  4464a7:	add    esp,DWORD PTR [edx-0x3e]
  4464aa:	adc    al,0x10
  4464ac:	pop    ebx
  4464ad:	push   esp
  4464ae:	mov    BYTE PTR [edx+eiz*2],0xd9
  4464b2:	push   0x61
  4464b4:	push   esi
  4464b5:	aad    0xde
  4464b7:	mov    dl,BYTE PTR [edi+0x6703e9da]
  4464bd:	add    dl,dh
  4464bf:	pop    eax
  4464c0:	popa   
  4464c1:	push   edx
  4464c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4464c3:	neg    esi
  4464c5:	and    DWORD PTR [ecx],eax
  4464c7:	bound  esi,QWORD PTR [ecx]
  4464c9:	mov    cl,0x4e
  4464cb:	rcr    DWORD PTR [ebp+0x4fe900e9],0xfc
  4464d2:	push   eax
  4464d3:	push   ds
  4464d4:	out    dx,al
  4464d5:	push   esp
  4464d6:	icebp  
  4464d7:	push   0xffffff9a
  4464d9:	iret   
  4464da:	jge    0x4464f3
  4464dc:	push   ecx
  4464dd:	push   ebp
  4464de:	and    al,ch
  4464e0:	popa   
  4464e1:	(bad)  [ebx+0x4e548dac]
  4464e7:	cmc    
  4464e8:	fimul  WORD PTR [eax-0x36df9fec]
  4464ee:	mov    ebx,0xd961e8
  4464f3:	mov    edx,0x0
	...
  446508:	jl     0x44655e
  44650a:	inc    esi
  44650b:	icebp  
  44650c:	in     al,0x3a
  44650e:	add    BYTE PTR [eax+0x13],ah
  446511:	test   eax,0x54412a85
  446516:	aas    
  446517:	cmc    
  446518:	stc    
  446519:	sti    
  44651a:	imul   ecx
  44651c:	popa   
  44651d:	or     al,0xe1
  44651f:	pusha  
  446520:	mov    esp,ecx
  446522:	sub    DWORD PTR [eax+0x70375267],0xffffffab
  446529:	lea    ecx,[eax+0x60]
  44652c:	fwait
  44652d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44652e:	mov    eax,0xab34f742
  446533:	jle    0x44653b
  446535:	or     al,0xeb
  446537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446538:	stos   DWORD PTR es:[edi],eax
  446539:	fld    QWORD PTR [eax]
  44653b:	jmp    0xfce3ea1
  446540:	push   edx
  446541:	push   edx
  446542:	dec    edi
  446543:	shr    esp,0x91
  446546:	sub    BYTE PTR [edx+0x38],dh
  446549:	mov    ecx,0x8a34eb6a
  44654e:	idiv   DWORD PTR [ebx]
  446550:	(bad)  
  446551:	cwde   
  446552:	cmp    BYTE PTR [eax],al
  446554:	push   eax
  446555:	nop
  446556:	and    al,0x8b
  446558:	add    al,0xaf
  44655a:	jge    0x4465b3
  44655c:	pop    ebx
  44655d:	imul   esi,esi,0x4f
  446560:	jmp    0x7d97:0xd89c5f7
  446567:	inc    esi
  446568:	pop    es
  446569:	dec    esp
  44656a:	dec    ecx
  44656b:	sub    BYTE PTR [eax],al
	...
  44657d:	add    BYTE PTR [eax],al
  44657f:	add    BYTE PTR [eax-0x41],al
  446582:	and    BYTE PTR [edx-0x47],ch
  446585:	mov    BYTE PTR [edi-0x1],0x79
  446589:	dec    ebx
  44658a:	dec    ebx
  44658b:	sbb    BYTE PTR [edx],dl
  44658d:	nop
  44658e:	cmp    al,0x83
  446590:	cmp    dl,al
  446592:	mov    eax,0xd67b01
  446597:	shr    DWORD PTR [ebx-0x2390395],cl
  44659d:	adc    al,0x12
  44659f:	add    BYTE PTR [ebx-0x2a],bh
  4465a2:	add    BYTE PTR [eax],al
  4465a4:	jnp    0x4465f5
  4465a6:	sbb    BYTE PTR [ebp+edi*1-0x7b74ff2a],0xb5
  4465ae:	push   eax
  4465af:	mov    edi,DWORD PTR [ebp+ebp*4+0x50]
  4465b3:	(bad)  
  4465b4:	jmp    0xd6:0x3d9c8a4b
  4465bb:	cmp    edi,0xffffffe4
  4465be:	jne    0x44663e
  4465c0:	adc    edx,esi
  4465c2:	mov    edx,DWORD PTR [esi+eax*4]
  4465c5:	aad    0x0
  4465c7:	add    BYTE PTR [ebx],cl
  4465c9:	dec    edi
  4465ca:	inc    edx
  4465cb:	or     BYTE PTR [edx+0x467404bf],dl
  4465d1:	push   esp
  4465d2:	jp     0x446614
  4465d4:	sti    
  4465d5:	mov    eax,ds:0x92058341
  4465da:	add    BYTE PTR [edx+ecx*8+0x52],dh
  4465de:	mov    eax,0x85e56274
  4465e3:	into   
	...
  4465f8:	adc    edx,DWORD PTR [esi-0x7acdec79]
  4465fe:	or     BYTE PTR [eax+0x61],cl
  446601:	mov    cl,0x85
  446603:	dec    edx
  446604:	pop    esi
  446605:	jns    0x446681
  446607:	mov    ds:0x8503f06c,eax
  44660c:	pop    ss
  44660d:	aam    0x39
  44660f:	xchg   esp,ebx
  446611:	push   edi
  446612:	sti    
  446613:	jmp    FWORD PTR [ebp+0x62839278]
  446619:	lock add eax,DWORD PTR [edi-0x3780c]
  446620:	bound  esi,QWORD PTR [edx-0x27a5dbb6]
  446626:	test   edx,esi
  446628:	test   edx,ebp
  44662a:	inc    ecx
  44662b:	push   ebp
  44662c:	sbb    eax,0xa05ade87
  446631:	iret   
  446632:	cld    
  446633:	shl    BYTE PTR [esp+ebp*8],0x75
  446637:	std    
  446638:	gs out dx,eax
  44663a:	cmp    cl,al
  44663c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44663d:	cli    
  44663e:	lahf   
  44663f:	xchg   DWORD PTR [edx+0x46e9ec02],esp
  446645:	xor    cl,ah
  446647:	pop    ecx
  446648:	test   eax,0x3df8d76a
  44664d:	inc    eax
  44664e:	inc    ecx
  44664f:	test   DWORD PTR [edi],edi
  446651:	mov    dh,0xbe
  446653:	pop    ds
  446654:	bound  ebp,QWORD PTR [ebx+0x6825f994]
  44665a:	loope  0x4466b4
	...
  446670:	jmp    0x43029dda
  446675:	add    bl,BYTE PTR [ebp+esi*8-0x7b1f8ff3]
  44667c:	jmp    ebp
  44667e:	mov    esi,0x2dd9621f
  446683:	iret   
  446684:	sub    DWORD PTR [esi],esp
  446686:	es iret 
  446688:	sbb    DWORD PTR [esi],esp
  44668a:	mov    ch,0x8c
  44668c:	stc    
  44668d:	fs xchg ebp,eax
  44668f:	or     esi,DWORD PTR [eax]
  446691:	lods   al,BYTE PTR ds:[esi]
  446692:	aaa    
  446693:	sbb    al,0xa8
  446695:	ins    DWORD PTR es:[edi],dx
  446696:	retf   
  446697:	mov    WORD PTR [ebp+edx*8-0x6bae360e],cs
  44669e:	pusha  
  44669f:	push   ebx
  4466a0:	pop    esi
  4466a1:	bound  ebx,QWORD PTR [ecx-0xe952309]
  4466a7:	mov    bh,BYTE PTR [ecx+edx*8]
  4466aa:	bound  esi,QWORD PTR [ebx]
  4466ac:	pop    edx
  4466ad:	mov    ah,0x2f
  4466af:	push   edi
  4466b0:	pusha  
  4466b1:	pop    esp
  4466b2:	or     al,0x2
  4466b4:	fisttp QWORD PTR [edx-0x561a7147]
  4466ba:	in     al,0x3
  4466bc:	bound  esp,QWORD PTR [edx-0x46]
  4466bf:	mov    cl,BYTE PTR ds:0x665470dd
  4466c5:	bound  ebx,QWORD PTR [edx+0x24]
  4466c8:	in     eax,0x69
  4466ca:	adc    DWORD PTR [ebp+0x449eb4f5],ecx
  4466d0:	jbe    0x4466ab
  4466d2:	imul   eax,DWORD PTR [eax+eax*1],0x0
	...
  4466e5:	add    BYTE PTR [eax],al
  4466e7:	add    BYTE PTR [edx+0x62],ah
  4466ea:	xor    dh,BYTE PTR [eax-0x1b]
  4466ed:	mov    al,ds:0xa59d8d19
  4466f2:	sahf   
  4466f3:	test   ch,bh
  4466f5:	shr    ecx,cl
  4466f7:	add    esi,DWORD PTR ds:0x2303e9f8
  4466fd:	pop    ecx
  4466fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4466ff:	sti    
  446700:	and    eax,0x1adf86f8
  446705:	clc    
  446706:	mov    edx,0xab96bbc3
  44670b:	or     BYTE PTR [edx+0x31],ah
  44670e:	add    DWORD PTR [edi+0x25],esi
  446711:	icebp  
  446712:	test   DWORD PTR [edi],0xe8fd37a3
  446718:	and    eax,0x122dc524
  44671d:	and    al,0xc5
  44671f:	mov    esp,0x9c8c03d8
  446724:	imul   eax,esi,0x6ba802d2
  44672a:	sbb    dh,BYTE PTR [edx+0x27]
  44672d:	aad    0x3b
  44672f:	sub    ebp,DWORD PTR [edx]
  446731:	out    0x51,al
  446733:	pusha  
  446734:	jbe    0x4466f7
  446736:	mov    DWORD PTR [ecx-0x26ae9f7b],edi
  44673c:	mov    ecx,0x8516f791
  446741:	xchg   edx,eax
  446742:	ret    0x61e5
  446745:	xor    edi,esi
  446747:	push   es
  446748:	mov    ch,0xf0
  44674a:	push   ebp
  44674b:	sub    eax,DWORD PTR [eax]
	...
  44675d:	add    BYTE PTR [eax],al
  44675f:	add    BYTE PTR [edx-0x27],bl
  446762:	les    ebx,FWORD PTR [eax+ebx*8+0x699c8c03]
  446769:	mov    bh,BYTE PTR [ebp-0x50]
  44676c:	or     eax,0x62608b6d
  446771:	pop    esp
  446772:	clc    
  446773:	pop    ebp
  446774:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446776:	dec    esi
  446777:	bound  edi,QWORD PTR [edx-0x4940821b]
  44677d:	(bad)  [ebx]
  44677f:	mov    ds:0xe7ec1134,al
  446784:	fcom   DWORD PTR [eax]
  446786:	ret    0x65b2
  446789:	mov    ah,0x83
  44678b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44678c:	push   ecx
  44678d:	jb     0x446792
  44678f:	push   0x47
  446791:	loop   0x446810
  446793:	lahf   
  446794:	(bad)  
  446795:	retf   
  446796:	or     DWORD PTR [edi-0x28a97],0xffffff88
  44679d:	adc    al,0x9
  44679f:	jle    0x4467a0
  4467a1:	mov    ah,0x4d
  4467a3:	mov    eax,0xfff9178d
  4467a8:	ins    BYTE PTR es:[edi],dx
  4467a9:	cwde   
  4467aa:	mov    dh,0x8
  4467ac:	or     esp,DWORD PTR [ecx+eax*2+0x34]
  4467b0:	xchg   BYTE PTR [edx],bl
  4467b2:	je     0x4467d0
  4467b4:	push   edx
  4467b5:	mov    ds,WORD PTR [esp+esi*2]
  4467b8:	aam    0xaa
  4467ba:	jge    0x4467fd
  4467bc:	jae    0x446820
  4467be:	aas    
  4467bf:	and    al,0xeb
  4467c1:	pop    ss
  4467c2:	(bad)  
  4467c3:	mov    eax,DWORD PTR [eax]
	...
  4467d5:	add    BYTE PTR [eax],al
  4467d7:	add    dh,bh
  4467d9:	loop   0x446850
  4467db:	(bad)
  4467df:	xor    al,0xcb
  4467e1:	fiadd  DWORD PTR [eax]
  4467e3:	add    dl,ch
  4467e5:	gs pop ecx
  4467e7:	or     BYTE PTR [edx-0x71],al
  4467ea:	sbb    al,0xe8
  4467ec:	rcl    DWORD PTR [edi],cl
  4467ee:	stc    
  4467ef:	(bad)  
  4467f0:	mov    ebp,0x395d59b3
  4467f5:	loop   0x4467f7
  4467f7:	mov    eax,0xfff9148d
  4467fc:	in     al,dx
  4467fd:	cdq    
  4467fe:	mov    dh,0x8
  446800:	mov    esp,DWORD PTR [esi]
  446802:	int3   
  446803:	int3   
  446804:	mov    edi,0x26cccc09
  446809:	pusha  
  44680a:	in     al,dx
  44680b:	mov    eax,DWORD PTR [esi+0x3344ed]
  446811:	shl    BYTE PTR [ebp-0x7a438f1],1
  446817:	(bad)  
  446818:	cmp    edx,edx
  44681a:	sbb    BYTE PTR [ebp-0x73],dh
  44681d:	pop    eax
  44681e:	jnp    0x446834
  446820:	inc    ebx
  446821:	(bad)  
  446822:	js     0x44687a
  446824:	mov    al,0x8e
  446826:	or     BYTE PTR [ebx],bh
  446828:	bound  edx,QWORD PTR [ebx+0x59]
  44682b:	or     ecx,ebp
  44682d:	mov    ebp,0xf8b4871c
  446832:	sbb    BYTE PTR [ebp+0x5a1afd96],bh
  446838:	ds cmc 
  44683a:	or     BYTE PTR [edx+0x0],bl
	...
  44684d:	add    BYTE PTR [eax],al
  44684f:	add    BYTE PTR [edx-0xa072a7b],bh
  446855:	sbb    dh,BYTE PTR [edi]
  446857:	mov    esi,0x49890052
  44685c:	cmp    dh,BYTE PTR [edi]
  44685e:	ins    BYTE PTR es:[edi],dx
  44685f:	int3   
  446860:	jns    0x446862
  446862:	add    al,0x66
  446864:	arpl   WORD PTR [ecx-0x2b],dx
  446867:	iret   
  446868:	fst    DWORD PTR [edi-0x14a93c7f]
  44686e:	fdiv   DWORD PTR [edx+0x6e]
  446871:	addr16 ss mov eax,0xf8d5beb6
  446878:	or     DWORD PTR ds:0x7b620fc2,esi
  44687e:	das    
  44687f:	or     al,0x30
  446881:	jns    0x4468d9
  446883:	sbb    al,0x2c
  446885:	imul   esi,DWORD PTR ds:0xd4ff7a34,0xb47a85f8
  44688f:	sbb    BYTE PTR [ecx+0x1c84ef6b],0xc8
  446896:	mov    DWORD PTR [ecx+0x46],ecx
  446899:	scas   eax,DWORD PTR es:[edi]
  44689a:	sub    al,0xf9
  44689c:	xchg   ebx,eax
  44689d:	cmp    BYTE PTR [edi+0xbd2507],0x0
  4468a4:	bound  eax,QWORD PTR [edx]
  4468a6:	add    al,0x59
  4468a8:	lods   al,BYTE PTR ds:[esi]
  4468a9:	rcl    BYTE PTR [si-0x59],0x40
  4468ae:	hlt    
  4468af:	push   ebp
  4468b1:	sub    ch,dl
  4468b3:	clc    
	...
  4468c8:	xor    eax,0xec3f42da
  4468cd:	leave  
  4468ce:	jmp    0xa76a82a2
  4468d3:	inc    ebx
  4468d4:	scas   al,BYTE PTR es:[edi]
  4468d5:	mov    ecx,0x1c6243f3
  4468da:	sub    bh,BYTE PTR [eax]
  4468dc:	gs fldl2t 
  4468df:	add    esp,DWORD PTR [ebx]
  4468e1:	call   0xc4e9:0x995c2419
  4468e8:	xor    eax,0x6203e491
  4468ed:	fldcw  WORD PTR [edx]
  4468ef:	iret   
  4468f0:	sbb    DWORD PTR [esi],esp
  4468f2:	mov    ch,0x88
  4468f4:	leave  
  4468f5:	mov    ch,BYTE PTR [edi+0x6ad54688]
  4468fb:	pop    ebp
  4468fc:	xchg   esi,eax
  4468fd:	(bad)  [esi+0x26ecd88]
  446903:	mov    DWORD PTR [ebx],ebp
  446905:	mov    ebp,0x31823062
  44690a:	jmp    0x3b1dcb12
  44690f:	jecxz  0x4468ef
  446911:	mov    al,ds:0xa49d69c1
  446916:	mov    eax,0x2658a7dc
  44691b:	pmulhw mm3,QWORD PTR [ebx+0x6ec586ad]
  446922:	loop   0x446960
  446924:	mov    edx,0x6203e9da
  446929:	xchg   ebx,eax
  44692a:	jb     0x44690d
	...
  446940:	or     BYTE PTR [eax],bl
  446942:	sbb    eax,esp
  446944:	sub    al,0x9b
  446946:	add    DWORD PTR [ecx+0x6f],edx
  446949:	pusha  
  44694a:	sbb    BYTE PTR [eax],ah
  44694c:	or     al,0xda
  44694e:	jmp    0xcc4ccb56
  446953:	lea    esp,[ebx-0x5f9fff57]
  446959:	lds    ecx,FWORD PTR [ecx+0x7bbe8617]
  44695f:	stc    
  446960:	fcomp  QWORD PTR [ecx-0x79f61dd8]
  446966:	sub    BYTE PTR [edx-0x53],ah
  446969:	in     eax,0x8b
  44696b:	aaa    
  44696c:	jb     0x4468f7
  44696e:	sub    esi,DWORD PTR [ecx+0x79e8a357]
  446974:	dec    esi
  446975:	fld    DWORD PTR [eax]
  446977:	bound  esp,QWORD PTR [eax+0x6aa583c1]
  44697d:	pop    esp
  44697e:	aas    
  44697f:	adc    eax,0x193f1a29
  446984:	pop    esi
  446985:	fld    DWORD PTR [eax]
  446987:	jmp    0x629b8300
  44698c:	ret    
  44698d:	mov    es,ebx
  44698f:	adc    ah,BYTE PTR [eax]
  446991:	test   eax,0xacada489
  446996:	mov    edi,0x765c62bf
  44699b:	sub    eax,0xb28c18e5
  4469a0:	gs pop esi
  4469a2:	dec    edi
  4469a3:	aad    0x0
	...
  4469b5:	add    BYTE PTR [eax],al
  4469b7:	add    BYTE PTR [edi+eax*4+0x30],bl
  4469bb:	mov    ecx,0xbb52224c
  4469c0:	mov    DWORD PTR [ecx],ebp
  4469c2:	push   ecx
  4469c3:	jmp    0xfd8ac829
  4469c8:	fcom   QWORD PTR [edi]
  4469ca:	add    eax,0x1c679ec2
  4469cf:	bound  ebx,QWORD PTR ds:0x52378be5
  4469d5:	mov    ch,BYTE PTR [ebx]
  4469d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4469d8:	xor    DWORD PTR [eax+ebp*8+0xd99175],esp
  4469df:	bound  edx,QWORD PTR [ebx-0xff7c3f]
  4469e5:	fidivr DWORD PTR [edi+0x7e]
  4469e8:	dec    ebx
  4469e9:	mov    al,0x7f
  4469eb:	push   esi
  4469ec:	addr16 retf 0x5ec0
  4469f0:	sar    cl,0x5a
  4469f3:	ret    
  4469f4:	mov    al,0x98
  4469f6:	sub    BYTE PTR [ecx],al
  4469f8:	jne    0x4469c7
  4469fa:	das    
  4469fb:	inc    esi
  4469fc:	cmp    ecx,DWORD PTR [edx-0x32c238ff]
  446a02:	add    BYTE PTR [eax],al
  446a04:	sti    
  446a05:	(bad)  
  446a06:	jge    0x446a5e
  446a08:	pop    ss
  446a09:	aam    0xd0
  446a0b:	jae    0x446a1b
  446a0d:	fadd   st(7),st
  446a0f:	mov    DWORD PTR [ebp-0x3f],ecx
  446a12:	pop    ecx
  446a13:	xor    edi,DWORD PTR [ebx]
  446a15:	mov    al,0x7d
  446a17:	in     eax,0xa6
  446a19:	sbb    ecx,esp
  446a1b:	int3   
	...
  446a30:	push   ds
  446a31:	fs in  al,dx
  446a33:	mov    edi,esi
  446a35:	fidiv  WORD PTR [ebp-0x14]
  446a38:	retf   
  446a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446a3a:	add    eax,0xffffffb4
  446a3d:	jb     0x4469f8
  446a3f:	adc    ecx,ebx
  446a41:	(bad)  
  446a42:	jge    0x446abc
  446a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446a45:	pop    ecx
  446a46:	stc    
  446a47:	(bad)  
  446a49:	dec    ebx
  446a4a:	add    eax,0x705bbb00
  446a4f:	or     al,0x8b
  446a51:	fistp  QWORD PTR [ecx+ebp*4-0x68]
  446a55:	(bad)  
  446a56:	add    BYTE PTR [ebx+0xa73d6a3],al
  446a5c:	clc    
  446a5d:	(bad)  
  446a5e:	cld    
  446a5f:	inc    DWORD PTR [ecx+ebx*2-0x2974ec72]
  446a66:	jne    0x446aa7
  446a68:	jo     0x446a0d
  446a6a:	add    al,bh
  446a6c:	jl     0x446a48
  446a6e:	add    BYTE PTR [eax],al
  446a70:	bound  eax,QWORD PTR [eax]
  446a72:	test   DWORD PTR [edi+0x66],eax
  446a75:	ja     0x446a63
  446a77:	xchg   BYTE PTR [edi+0x72478608],bl
  446a7d:	addr16 cmp al,0x4
  446a80:	xchg   ecx,eax
  446a81:	ja     0x446abc
  446a83:	cmp    bl,ch
  446a85:	mov    esp,0x30a786d8
  446a8a:	xchg   BYTE PTR [eax],al
  446a8c:	mov    WORD PTR [edi+0x51],fs
  446a8f:	cmp    al,0xeb
  446a91:	mov    esp,0x86cc
	...
  446aa6:	add    BYTE PTR [eax],al
  446aa8:	scas   eax,DWORD PTR es:[edi]
  446aa9:	dec    eax
  446aaa:	mov    WORD PTR [edx+0x2],cs
  446aad:	inc    ebx
  446aae:	cmp    al,bl
  446ab0:	bound  eax,QWORD PTR [eax]
  446ab2:	add    al,0x0
  446ab4:	loope  0x446b1d
  446ab6:	cli    
  446ab7:	or     ch,bl
  446ab9:	pop    edi
  446aba:	hlt    
  446abb:	(bad)  
  446abc:	in     eax,dx
  446abd:	jp     0x446adf
  446abf:	and    DWORD PTR [esi-0x16ffc1b1],0x42
  446ac6:	or     al,0x83
  446ac8:	mov    ds:0x65c1050c,al
  446acd:	in     al,dx
  446ace:	add    eax,DWORD PTR [eax]
  446ad0:	bound  ecx,QWORD PTR [ecx+0x620e98]
  446ad6:	jge    0x446ad1
  446ad8:	push   edx
  446ad9:	das    
  446ada:	push   ds
  446adb:	jge    0x446b0c
  446add:	mov    esp,0xe6de08fc
  446ae2:	in     eax,dx
  446ae3:	call   FWORD PTR [ebp-0x6b026e06]
  446ae9:	push   esp
  446aea:	rol    BYTE PTR [esp+ebx*4-0x1ec22332],1
  446af1:	mov    ecx,0xe8178704
  446af6:	cld    
  446af7:	xlat   BYTE PTR ds:[ebx]
  446af8:	loope  0x446afb
  446afa:	hlt    
  446afb:	ins    DWORD PTR es:[edi],dx
  446afc:	mov    eax,ds
  446afe:	xlat   BYTE PTR ds:[ebx]
  446aff:	inc    eax
  446b00:	pop    edx
  446b01:	xlat   BYTE PTR ds:[ebx]
  446b02:	dec    ebp
  446b03:	sbb    bl,ch
  446b05:	hlt    
  446b06:	out    dx,al
  446b07:	mov    WORD PTR [ebp-0xf],ss
  446b0a:	dec    esp
  446b0b:	adc    al,BYTE PTR [eax]
	...
  446b1d:	add    BYTE PTR [eax],al
  446b1f:	add    ah,al
  446b21:	fst    DWORD PTR [ebx+0x4]
  446b24:	mov    esp,0xab68d1d9
  446b29:	fldl2t 
  446b2b:	mov    ah,BYTE PTR [edx-0x26f9bc2f]
  446b31:	sahf   
  446b32:	lea    esp,[ecx-0x23]
  446b35:	mov    es,WORD PTR [ebp+0x38d1b28c]
  446b3b:	or     dl,BYTE PTR ss:[ebx+0x64620416]
  446b42:	adc    eax,0x711436dc
  446b47:	inc    eax
  446b48:	pop    edx
  446b49:	lods   al,BYTE PTR ds:[esi]
  446b4a:	ja     0x446b0c
  446b4c:	(bad)  
  446b4d:	fucompp 
  446b4f:	add    esp,DWORD PTR [edx+0x2]
  446b52:	mov    ecx,0x72f0e5f2
  446b57:	inc    eax
  446b58:	sbb    BYTE PTR [eax],0xa7
  446b5b:	repz aad 0xf0
  446b5e:	jmp    0xb65e4c66
  446b63:	add    BYTE PTR [ebx-0x45270667],ah
  446b69:	lock shl DWORD PTR cs:[edx],1
  446b6d:	loope  0x446b57
  446b6f:	or     dh,ah
  446b71:	dec    edx
  446b72:	jmp    0xdcc4:0x4fe06203
  446b79:	stc    
  446b7a:	loope  0x446b08
  446b7c:	sahf   
  446b7d:	sbb    al,BYTE PTR [ecx]
  446b7f:	or     ecx,DWORD PTR [edi+0xb5bb19]
	...
  446b95:	add    BYTE PTR [eax],al
  446b97:	add    ah,cl
  446b99:	shr    cl,1
  446b9b:	add    esp,DWORD PTR [edx-0x18]
  446b9e:	add    al,bh
  446ba0:	neg    DWORD PTR ds:0x1dde766e
  446ba6:	or     ebx,0xf1fb595d
  446bac:	lods   eax,DWORD PTR ds:[esi]
  446bad:	fisttp WORD PTR [ebx+0x4e56662c]
  446bb3:	ror    DWORD PTR ds:0xd68d18b0,1
  446bb9:	scas   eax,DWORD PTR es:[edi]
  446bba:	add    al,dl
  446bbc:	sub    al,0xe0
  446bbe:	add    cl,ch
  446bc0:	call   0x39ec885d
  446bc5:	fmul   QWORD PTR [ebx+0x80ee1b2]
  446bcb:	push   0x4
  446bcd:	fadd   QWORD PTR [ebx-0x3ea39958]
  446bd3:	adc    al,0x68
  446bd5:	pop    eax
  446bd6:	dec    eax
  446bd7:	int    0xeb
  446bd9:	out    dx,al
  446bda:	imul   ecx
  446bdc:	popa   
  446bdd:	ja     0x446bdf
  446bdf:	call   0x5866:0x3007600
  446be6:	push   eax
  446be7:	std    
  446be8:	stc    
  446be9:	pop    ebp
  446bea:	dec    edx
  446beb:	jmp    0xe18ac251
  446bf0:	call   0xb96d647f
  446bf5:	xlat   BYTE PTR ds:[ebx]
  446bf6:	out    dx,eax
  446bf7:	sbb    ah,cl
  446bf9:	or     al,0x3
  446bfb:	push   0x0
	...
  446c0d:	add    BYTE PTR [eax],al
  446c0f:	add    BYTE PTR [ecx-0x4651762a],ch
  446c15:	push   esi
  446c16:	inc    edx
  446c17:	stc    
  446c18:	(bad)  
  446c1a:	xor    eax,DWORD PTR [edx+0x51]
  446c1d:	jmp    0x446c08
  446c1f:	dec    esp
  446c20:	xchg   esi,eax
  446c21:	out    dx,eax
  446c22:	not    edx
  446c24:	test   eax,0x5362bd69
  446c29:	icebp  
  446c2a:	jmp    0xf829962f
  446c2f:	push   eax
  446c31:	test   eax,0xf3c9c708
  446c36:	mov    ds:0x7ddbbb88,eax
  446c3b:	push   ebp
  446c3c:	cmp    esp,0x7e
  446c3f:	adc    BYTE PTR [ebx-0x25],cl
  446c42:	jne    0x446c42
  446c44:	pop    ebx
  446c45:	mov    WORD PTR [esi],ss
  446c47:	sbb    DWORD PTR [esi-0x48f107ef],0x24
  446c4e:	or     BYTE PTR [eax],al
  446c50:	dec    ebx
  446c51:	fdiv   DWORD PTR [edx-0xb5e13fe]
  446c57:	mov    ecx,ebp
  446c59:	sub    ebx,eax
  446c5b:	inc    edx
  446c5c:	mov    eax,0x5689002c
  446c61:	or     eax,0x488d7f5
  446c66:	or     BYTE PTR [edx-0x43],dh
  446c69:	pop    ebp
  446c6a:	pop    ecx
  446c6b:	adc    BYTE PTR [ebx+0x13],bh
  446c6e:	add    BYTE PTR [edi],cl
  446c70:	xchg   BYTE PTR [esi+0x10],dl
	...
  446c86:	add    BYTE PTR [eax],al
  446c88:	or     esp,DWORD PTR [eax]
  446c8a:	mov    ch,0x0
  446c8c:	fcmovnu st,st(2)
  446c8e:	add    BYTE PTR [esp+ebp*8+0x63],dh
  446c92:	inc    ebx
  446c93:	or     BYTE PTR [edx+ebx*4-0x65bc5be8],al
  446c9a:	add    cl,ch
  446c9c:	pop    esp
  446c9d:	in     eax,0xf7
  446c9f:	call   DWORD PTR [eax-0x51]
  446ca2:	and    BYTE PTR [ebp-0x75016175],al
  446ca8:	adc    BYTE PTR ds:0xf53808df,0xf6
  446caf:	mov    BYTE PTR [ebx-0x74efbee1],dh
  446cb5:	fadd   DWORD PTR [eax]
  446cb7:	add    BYTE PTR [edx+0x4c],ah
  446cba:	out    dx,al
  446cbb:	xchg   DWORD PTR [edi],ebp
  446cbd:	in     al,dx
  446cbe:	ret    
  446cbf:	in     al,0x5a
  446cc1:	dec    edx
  446cc2:	add    cl,BYTE PTR [ebx+0x5a8bdc17]
  446cc8:	xchg   DWORD PTR [ebx+0x36],edi
  446ccb:	sbb    BYTE PTR [eax],dl
  446ccd:	push   eax
  446cce:	in     al,dx
  446ccf:	add    DWORD PTR [eax+eax*1],edx
  446cd2:	add    al,0x85
  446cd4:	mov    bh,0xf8
  446cd6:	mov    eax,DWORD PTR [eax+0x7a]
  446cd9:	sar    DWORD PTR [ecx-0x9c8abd4],cl
  446cdf:	std    
  446ce0:	inc    ebp
  446ce1:	add    BYTE PTR [eiz*8+0x1fce8367],al
  446ce8:	mov    cl,0xe2
  446cea:	cmp    DWORD PTR [edx+0x0],0x0
	...
  446cfd:	add    BYTE PTR [eax],al
  446cff:	add    BYTE PTR [esi],ch
  446d01:	add    ch,bh
  446d03:	adc    DWORD PTR [edx+0x6d0003f0],0xffffff86
  446d0a:	add    bh,cl
  446d0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  446d0d:	inc    esp
  446d0e:	mov    cl,cl
  446d10:	xor    DWORD PTR [eax+0x43],esp
  446d13:	jge    0x446d31
  446d15:	call   0x33ebfa4
  446d1a:	mov    esp,0x521ff47c
  446d1f:	fcmovu st,st(1)
  446d21:	mov    dh,0x1c
  446d23:	and    DWORD PTR [edx],0xc
  446d26:	add    DWORD PTR [edi+0x40c4f43a],eax
  446d2c:	jb     0x446d2e
  446d2e:	add    al,BYTE PTR [eax]
  446d30:	bound  eax,QWORD PTR [esi+ebx*1]
  446d33:	mov    BYTE PTR [edi],ah
  446d35:	test   BYTE PTR [ecx-0x3c2d163c],cl
  446d3b:	out    0x6a,al
  446d3d:	shr    edx,0xf
  446d40:	mov    ds:0x5e65f49a,eax
  446d45:	fldcw  WORD PTR [edi+edi*1-0x72]
  446d49:	pusha  
  446d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446d4b:	out    0xdd,al
  446d4d:	cmp    edi,0xffffff8b
  446d50:	sub    dh,bh
  446d52:	bound  eax,QWORD PTR [ebp+0x6a]
  446d55:	mov    DWORD PTR [eax-0x16641015],ebx
  446d5b:	add    ebx,edi
  446d5d:	xor    ecx,0xffffff8a
  446d60:	and    dl,cl
  446d62:	mov    edx,0xb8
	...
  446d77:	add    BYTE PTR [esi],dh
  446d79:	out    0xa6,eax
  446d7b:	cld    
  446d7c:	pop    esi
  446d7d:	in     eax,dx
  446d7e:	jmp    0x6b1bac86
  446d83:	aad    0x5d
  446d85:	push   0xedc8810b
  446d8a:	jmp    0xe7525393
  446d8f:	add    esp,DWORD PTR [edx-0x24]
  446d92:	ja     0x446d95
  446d94:	sub    ebx,DWORD PTR [edi+0x91b88a5]
  446d9a:	mov    al,BYTE PTR [ecx-0x61]
  446d9d:	adc    esi,edx
  446d9f:	mov    dh,BYTE PTR [eax-0x7144150f]
  446da5:	jmp    0x446da0
  446da7:	push   ecx
  446da8:	sub    BYTE PTR [ecx+0x27],ah
  446dab:	and    al,0xe1
  446dad:	sbb    esi,ebp
  446daf:	in     eax,dx
  446db0:	fisub  WORD PTR [eax]
  446db2:	imul   esp,edx,0x3e9d9ea
  446db8:	frstor [ecx-0x46d5770f]
  446dbe:	jb     0x446d80
  446dc0:	adc    al,0x2
  446dc2:	loop   0x446d4e
  446dc4:	mov    ebp,ds
  446dc6:	dec    esi
  446dc7:	cmp    al,0x72
  446dc9:	fldpi  
  446dcb:	add    esp,DWORD PTR [edx+0x65]
  446dce:	xlat   BYTE PTR ds:[ebx]
  446dcf:	mov    ebx,DWORD PTR [eax]
  446dd1:	std    
  446dd2:	add    BYTE PTR [eax],ch
  446dd4:	mov    edx,0xdceb6ad4
  446dd9:	xchg   esp,esp
  446ddb:	jno    0x446ddd
	...
  446ded:	add    BYTE PTR [eax],al
  446def:	add    BYTE PTR [eax+eax*1-0x74],dl
  446df3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446df4:	cdq    
  446df5:	sahf   
  446df6:	push   eax
  446df7:	add    DWORD PTR [edx-0x2516ff61],ecx
  446dfd:	xchg   eax,edi
  446dff:	jo     0x446e3f
  446e01:	shl    DWORD PTR [ebx],1
  446e03:	and    dl,BYTE PTR [edx-0x19]
  446e06:	mov    edi,0xf7ec6dee
  446e0b:	jmp    0xe95507a6
  446e10:	fld    DWORD PTR gs:[eax]
  446e13:	push   ebp
  446e14:	mov    edi,0xb4f9f66e
  446e19:	retf   
  446e1a:	or     DWORD PTR [edx+esi*1-0x14],0x6
  446e1f:	ins    DWORD PTR es:[edi],dx
  446e20:	jo     0x446e04
  446e22:	add    cl,ch
  446e24:	pusha  
  446e25:	daa    
  446e26:	add    esi,DWORD PTR [esi-0x6074125d]
  446e2c:	in     eax,dx
  446e2d:	or     eax,DWORD PTR [ebx+0x6a]
  446e30:	sub    ah,dl
  446e32:	mov    DWORD PTR [esi+eiz*1],esi
  446e35:	in     eax,dx
  446e36:	iret   
  446e37:	push   0x30
  446e39:	fdiv   QWORD PTR [edx-0x51]
  446e3c:	test   DWORD PTR [ecx-0x66ce8fe0],ebx
  446e42:	jge    0x446ded
  446e44:	call   0x3fe8:0xea1188ee
  446e4b:	fldenv [ecx-0x15]
  446e4e:	imul   ecx
  446e50:	xor    eax,0xbc88cf
	...
  446e65:	add    BYTE PTR [eax],al
  446e67:	add    BYTE PTR [ebp+0x2fe1ec2a],dh
  446e6d:	jmp    0x446df3
  446e6f:	pushf  
  446e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446e71:	push   ebx
  446e72:	push   esi
  446e73:	add    BYTE PTR [esi],dl
  446e75:	ins    BYTE PTR es:[edi],dx
  446e76:	push   eax
  446e77:	sbb    dl,bl
  446e79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446e7a:	call   0x11c762c
  446e7f:	mov    ecx,esi
  446e81:	pop    ds
  446e82:	jg     0x446ecb
  446e84:	arpl   sp,ax
  446e86:	int    0x33
  446e88:	ins    DWORD PTR es:[edi],dx
  446e89:	or     al,0xa
  446e8b:	mov    edi,DWORD PTR [edi+esi*4-0x21103f7d]
  446e92:	rol    DWORD PTR [eax-0x65],0xd7
  446e96:	add    BYTE PTR [eax],al
  446e98:	mov    ebx,DWORD PTR [esi]
  446e9a:	add    DWORD PTR ds:0xf700d77b,eax
  446ea0:	mov    esp,0x4b03f7e7
  446ea5:	xlat   BYTE PTR ds:[ebx]
  446ea6:	or     DWORD PTR [esp+ecx*8-0x3fffff2a],eax
  446ead:	lahf   
  446eae:	inc    eax
  446eaf:	mov    esp,DWORD PTR [esi+0x9]
  446eb2:	jg     0x446ef9
  446eb4:	(bad)  
  446eb5:	(bad)  [edi-0x4993c18a]
  446ebb:	mov    DWORD PTR [esi+0x4c08311],eax
  446ec1:	push   ebx
  446ec2:	add    BYTE PTR gs:[ebx],cl
  446ec5:	xlat   BYTE PTR ds:[ebx]
  446ec6:	jge    0x446f17
  446ec8:	sub    esp,DWORD PTR [edx-0x41]
  446ecb:	je     0x446ecd
	...
  446edd:	add    BYTE PTR [eax],al
  446edf:	add    BYTE PTR ds:0x82103e6c,dh
  446ee5:	cdq    
  446ee6:	int3   
  446ee7:	test   DWORD PTR [edx+0x4c8b2c82],esi
  446eed:	mov    ch,0x7d
  446eef:	dec    edx
  446ef0:	bswap  esp
  446ef2:	dec    ecx
  446ef3:	inc    eax
  446ef4:	and    BYTE PTR [eax+ebx*1-0xb0ce977],0xc7
  446efc:	sub    BYTE PTR [ebx],0x72
  446eff:	add    eax,0xe439d762
  446f04:	fnstcw WORD PTR [esi+0x50ba5276]
  446f0a:	ja     0x446f4e
  446f0c:	mov    ?,edi
  446f0e:	dec    eax
  446f0f:	in     al,0x10
  446f11:	push   eax
  446f12:	fadd   QWORD PTR [ebp+0x16]
  446f15:	add    BYTE PTR [eax*4+0x5276cc27],al
  446f1c:	call   0xf43b:0x950bbf7f
  446f23:	jmp    DWORD PTR [ebx+0x0]
  446f26:	add    al,0x74
  446f28:	pop    eax
  446f29:	addr16 cmp ah,dh
  446f2c:	jmp    0x1dc93b66
  446f31:	or     BYTE PTR [esi],ch
  446f33:	push   eax
  446f34:	adc    ebx,eax
  446f36:	or     cl,BYTE PTR [edx+eiz*2+0x0]
  446f3a:	jne    0x446f8e
  446f3c:	pop    edx
  446f3d:	imul   ecx,DWORD PTR [ecx+0x18],0x26d8bcd9
	...
  446f58:	lahf   
  446f59:	sbb    al,0xfe
  446f5b:	iret   
  446f5c:	mov    edi,DWORD PTR [ebx+0x188f873c]
  446f62:	jle    0x446fdc
  446f64:	mov    ds:0x8e830100,al
  446f69:	or     al,BYTE PTR [eax+eax*1]
  446f6c:	and    eax,0x62003cbb
  446f71:	add    BYTE PTR [ecx+eax*8],al
  446f74:	gs cli 
  446f76:	add    eax,DWORD PTR [eax]
  446f78:	bound  eax,QWORD PTR [ebx+0x4a]
  446f7b:	adc    BYTE PTR [edx-0x18],ah
  446f7e:	add    eax,DWORD PTR [eax]
  446f80:	gs je  0x446f0c
  446f83:	(bad)  
  446f84:	in     eax,dx
  446f85:	(bad)  
  446f86:	jl     0x447002
  446f88:	out    0xff,al
  446f8a:	add    BYTE PTR [edx+edx*4+0x6203efd9],al
  446f91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  446f92:	sub    DWORD PTR [edi+0x24],edi
  446f95:	(bad)  
  446f97:	cdq    
  446f98:	pop    ecx
  446f99:	leave  
  446f9a:	test   eax,0x72e5207a
  446f9f:	dec    ecx
  446fa0:	and    BYTE PTR [eax-0x5b],0xe7
  446fa4:	loopne 0x446fbe
  446fa6:	mov    dh,0x22
  446fa8:	fbld   TBYTE PTR [eax+0x5287ac5]
  446fae:	gs mov ebx,0x4172c211
  446fb4:	and    ch,BYTE PTR [esi-0x2608dc5f]
  446fba:	bound  esi,QWORD PTR [edi]
	...
  446fd0:	xchg   esi,eax
  446fd1:	pop    esi
  446fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  446fd3:	out    0xdd,eax
  446fd5:	aam    0xf3
  446fd7:	shl    BYTE PTR [edx],1
  446fd9:	cdq    
  446fda:	bound  esi,QWORD PTR [edi]
  446fdc:	push   0x55
  446fde:	gs out 0x5d,eax
  446fe1:	ins    DWORD PTR es:[edi],dx
  446fe2:	icebp  
  446fe3:	jl     0x446f85
  446fe5:	in     eax,dx
  446fe6:	and    al,BYTE PTR [edi+0x4e]
  446fe9:	ins    BYTE PTR es:[edi],dx
  446fea:	mov    ds,eax
  446fec:	mov    ds:0x6205e9c9,al
  446ff1:	fnstenv ds:0xad96def9
  446ff7:	jl     0x446f89
  446ff9:	loope  0x44705d
  446ffb:	dec    eax
  446ffc:	dec    edx
  446ffd:	mov    bl,BYTE PTR [ebx]
  446fff:	xor    al,0xa
  447001:	jg     0x447035
  447003:	add    al,0x62
  447005:	push   esp
  447006:	sub    eax,0xf1a0e4cc
  44700b:	jl     0x446fad
  44700d:	in     eax,dx
  44700e:	rol    BYTE PTR [esi-0x2],0xdc
  447012:	cdq    
  447013:	test   BYTE PTR [eax-0x3],bh
  447016:	jmp    0x1260095
  44701b:	out    0xdc,al
  44701d:	sub    eax,DWORD PTR [esi]
  44701f:	jmp    0x724b6e85
  447024:	sub    bh,BYTE PTR [ecx-0x25cad683]
  44702a:	mov    edi,0xf7e8b5a9
  44702f:	jmp    0xa9848a95
	...
  447048:	popa   
  447049:	fld    DWORD PTR [eax]
  44704b:	jmp    0xe94449ea
  447050:	popa   
  447051:	(bad)  
  447053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447054:	xchg   ecx,eax
  447055:	call   0xd2a65961
  44705a:	jl     0x4470cd
  44705c:	popa   
  44705d:	fld    DWORD PTR [eax]
  44705f:	push   0x14
  447061:	in     eax,0x0
  447063:	fsubrp st(5),st
  447065:	addr16 add eax,0xc0b661e9
  44706b:	ins    BYTE PTR es:[edi],dx
  44706c:	add    eax,0xcbe600bd
  447071:	aam    0x10
  447073:	test   eax,0x72ec9bd8
  447078:	popf   
  447079:	mov    ecx,0x5b3a2c89
  44707e:	rcr    DWORD PTR [ebp+0x7f],0x5e
  447082:	dec    ecx
  447083:	add    eax,0x6ccc93bf
  447088:	imul   DWORD PTR [ebx+0xf]
  44708b:	jb     0x4470fa
  44708d:	cdq    
  44708e:	cmp    esp,DWORD PTR [ecx]
  447090:	inc    esi
  447091:	jbe    0x44709a
  447093:	bound  ebx,QWORD PTR [ebx+0xd]
  447096:	mov    ebp,DWORD PTR [edx+ecx*1]
  447099:	pusha  
  44709a:	std    
  44709b:	repnz sbb al,0x99
  44709e:	inc    eax
  44709f:	bound  ecx,QWORD PTR [ebx-0x1f]
  4470a2:	or     DWORD PTR [edx+ecx*1],0xffffffe8
  4470a6:	jae    0x4470a8
  4470a8:	repz bound eax,QWORD PTR [edx-0xc]
	...
  4470c0:	and    BYTE PTR [ecx+0x102c72f4],dl
  4470c6:	inc    ecx
  4470c7:	adc    bl,cl
  4470c9:	fld    DWORD PTR [eax]
  4470cb:	add    BYTE PTR [edi+0x374d7cee],dh
  4470d1:	fs push edx
  4470d3:	clc    
  4470d4:	inc    eax
  4470d5:	mov    al,ds:0xabf95118
  4470da:	call   0x1206294
  4470df:	mov    edx,esi
  4470e1:	adc    edi,DWORD PTR [edi+0x47]
  4470e4:	xchg   ebx,eax
  4470e5:	bound  eax,QWORD PTR [edx-0xc]
  4470e8:	bound  edx,QWORD PTR [edx+0x5c5b03f4]
  4470ee:	jnp    0x4470d4
  4470f0:	jnp    0x447156
  4470f2:	push   edx
  4470f3:	clc    
  4470f4:	jl     0x447146
  4470f6:	add    ecx,DWORD PTR ds:0xedddb8b
  4470fc:	lock lahf 
  4470fe:	and    BYTE PTR [ebp-0x38fe7ec5],al
  447104:	mov    ebx,0x4b0000bf
  447109:	fcmovnb st,st(1)
  44710b:	pop    es
  44710c:	push   ebx
  44710d:	fild   DWORD PTR [eax]
  44710f:	add    BYTE PTR [eax+eiz*4],dh
  447112:	adc    BYTE PTR [eax],al
  447114:	cmp    ebx,ebx
  447116:	add    BYTE PTR [esi+ebp*2+0x5a],dh
  44711a:	cli    
  44711b:	adc    BYTE PTR [eax-0x3b],bh
  44711e:	mov    ebx,DWORD PTR [ebx+0xdb3b]
	...
  447138:	mov    eax,0x3c00f489
  44713d:	pop    edi
  44713e:	(bad)  
  44713f:	or     al,0xb
  447141:	fisttp DWORD PTR [ecx]
  447143:	mov    dh,0xf9
  447145:	pop    ss
  447146:	dec    ebx
  447147:	cld    
  447148:	bound  edi,QWORD PTR [ebx-0x4b]
  44714b:	int3   
  44714c:	add    dh,BYTE PTR [ebx+0x696ac183]
  447152:	cmp    al,bh
  447154:	popa   
  447155:	cmp    BYTE PTR [ebx-0x5a1dad07],al
  44715b:	or     BYTE PTR ds:0xbb34e4c8,dl
  447161:	out    dx,eax
  447162:	mov    ah,dh
  447164:	leave  
  447165:	xchg   esi,eax
  447167:	sub    al,0xa9
  447169:	ret    
  44716a:	into   
  44716b:	test   BYTE PTR ds:0x2ebf89d0,ah
  447171:	push   es
  447172:	jnp    0x4471bc
  447174:	push   edx
  447175:	mov    cl,0xc4
  447177:	push   es
  447178:	loope  0x44710b
  44717a:	cld    
  44717b:	xchg   BYTE PTR [edx],ch
  44717d:	in     al,0x7a
  44717f:	push   eax
  447180:	inc    edx
  447181:	mov    bh,0x41
  447183:	xor    BYTE PTR [ebx-0x10],ah
  447186:	add    eax,DWORD PTR [eax]
  447188:	clc    
  447189:	out    dx,eax
  44718a:	pop    ecx
  44718b:	add    BYTE PTR [eax],cl
  44718d:	lock fist DWORD PTR [ecx]
  447190:	sub    al,dh
  447192:	add    eax,DWORD PTR [ebp+0x527ae81f]
  447198:	push   0x79
  44719a:	sbb    BYTE PTR ds:[eax],al
	...
  4471ad:	add    BYTE PTR [eax],al
  4471af:	add    bl,ch
  4471b1:	xor    BYTE PTR [ecx+eax*8],dl
  4471b4:	pop    ebp
  4471b5:	jmp    0x4471ba
  4471b7:	add    BYTE PTR [edx+0x9],ah
  4471ba:	add    DWORD PTR [edx+eiz*2],ecx
  4471bd:	lock cmp cl,0x82
  4471c1:	and    DWORD PTR [edx],0x7d
  4471c4:	mov    bh,0x1c
  4471c6:	std    
  4471c7:	or     dh,ah
  4471c9:	mov    edx,0xff620000
  4471ce:	(bad)  
  4471cf:	std    
  4471d0:	sbb    al,0xc5
  4471d2:	rol    BYTE PTR [esp+0x4fe4bad9],1
  4471d9:	pop    edx
  4471da:	mov    al,ds:0x918bdcfc
  4471df:	add    DWORD PTR [edx],ebx
  4471e1:	pop    edx
  4471e2:	mov    BYTE PTR [esp+eax*4],ah
  4471e5:	pop    es
  4471e6:	jae    0x4471a1
  4471e8:	out    0x19,al
  4471ea:	test   eax,0x895855e4
  4471ef:	add    al,0xdb
  4471f1:	fsubr  st,st(1)
  4471f3:	add    BYTE PTR [edx-0x3a3cd4af],ch
  4471f9:	shr    BYTE PTR [eax],1
  4471fb:	jecxz  0x44725a
  4471fd:	mov    esp,0xe5bdcce9
  447202:	jmp    0xc6c2:0xf193dec2
  447209:	shr    dl,0xc0
  44720c:	fcomp  QWORD PTR [ebp-0x56a3852f]
  447212:	cli    
  447213:	test   al,0x0
	...
  447225:	add    BYTE PTR [eax],al
  447227:	add    BYTE PTR [esi-0x11],al
  44722a:	es add eax,0x3e9d964
  447230:	pop    es
  447231:	data16 fld QWORD PTR [ebx]
  447234:	imul   ebx,DWORD PTR [ebp+0x48],0xfffffff9
  447238:	jne    0x44721f
  44723a:	xchg   ebx,eax
  44723b:	add    eax,DWORD PTR [ecx+ebx*8]
  44723e:	xchg   ebx,eax
  44723f:	add    edi,DWORD PTR [edx-0x7d]
  447242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447243:	add    esp,DWORD PTR [edx+0x50]
  447246:	(bad)  
  447247:	sti    
  447248:	fcomp  QWORD PTR [ecx+eax*1+0x72a98f7b]
  44724f:	ss dec edx
  447251:	sbb    eax,0xe53df8e7
  447256:	jmp    0xe51a2adb
  44725b:	cld    
  44725c:	loope  0x447263
  44725e:	repz add esp,DWORD PTR [edx+0x58]
  447262:	add    DWORD PTR [edx+eiz*2],esi
  447265:	xlat   BYTE PTR ds:[ebx]
  447266:	pop    es
  447267:	gs rcr ebp,cl
  44726a:	add    cl,ch
  44726c:	loop   0x4472cf
  44726e:	cld    
  44726f:	call   0xa7d04021
  447274:	loop   0x447279
  447276:	add    BYTE PTR [edx-0x510e41e6],bh
  44727c:	retfw  
  44727e:	add    cl,ch
  447280:	popa   
  447281:	cld    
  447282:	pop    edx
  447283:	loop   0x4472e6
  447285:	fld    DWORD PTR [ebx+0x2a76626f]
  44728b:	push   edx
	...
  4472a0:	addr16 push eax
  4472a2:	pushf  
  4472a3:	jmp    0x6a454c09
  4472a8:	sub    al,0xe5
  4472aa:	add    dh,bl
  4472ac:	fld    QWORD PTR [ebx+0xc]
  4472af:	jmp    0xebf34515
  4472b4:	xchg   esi,eax
  4472b5:	(bad)  
  4472b6:	hlt    
  4472b7:	(bad)  
  4472b8:	fist   WORD PTR ds:0x1ae2abe1
  4472be:	or     DWORD PTR [eax+0x54],esi
  4472c1:	loope  0x4472c6
  4472c3:	inc    ecx
  4472c4:	loop   0x4472a8
  4472c6:	add    ebx,DWORD PTR [ebx+0x38cc5dcf]
  4472cc:	call   0x82e3:0x806ac45d
  4472d3:	or     DWORD PTR [edx+0x5c],esp
  4472d6:	dec    eax
  4472d7:	in     eax,dx
  4472d8:	loop   0x4472c5
  4472da:	add    esi,DWORD PTR [esi-0x72]
  4472dd:	loop   0x4472fb
  4472df:	ins    BYTE PTR es:[edi],dx
  4472e0:	pop    esi
  4472e1:	xor    al,0x44
  4472e3:	jmp    0xae477006
  4472e8:	popa   
  4472e9:	rol    BYTE PTR [eax],1
  4472eb:	jmp    0x12ad951
  4472f0:	cmp    BYTE PTR ds:0xd83b0af9,al
  4472f6:	jge    0x4472bf
  4472f8:	and    esp,DWORD PTR [eax+esi*8-0x1]
  4472fc:	les    ebx,FWORD PTR [ebx+0x7b]
  4472ff:	or     al,0xfd
  447301:	push   ss
  447302:	add    DWORD PTR [ebx],edx
	...
  447318:	sti    
  447319:	xlat   BYTE PTR ds:[ebx]
  44731a:	add    BYTE PTR [ebp+0x27],dh
  44731d:	sbb    eax,0xff8802dd
  447322:	hlt    
  447323:	call   0x3c564c
  447328:	mov    edx,0xccc6f603
  44732d:	out    0xf7,eax
  44732f:	dec    ebx
  447331:	pop    edx
  447332:	jmp    0xbbff:0xfe2d3203
  447339:	bound  eax,QWORD PTR [edx+0x8]
  44733c:	mov    WORD PTR [ebp-0x62bc5be8],ds
  447342:	add    bh,al
  447344:	mov    esp,0xbbfff7f0
  447349:	sbb    al,0xdd
  44734b:	add    cl,BYTE PTR [eax]
  44734d:	push   esp
  44734f:	call   0x3c5662
  447354:	adc    BYTE PTR [edi],bl
  447356:	jne    0x447339
  447358:	jl     0x44731c
  44735a:	out    0xd3,eax
  44735c:	pusha  
  44735d:	pop    esp
  44735e:	cli    
  44735f:	and    al,bl
  447361:	mov    ebp,0xdd677d75
  447366:	or     DWORD PTR [eax+eiz*2+0x44fff7e3],eax
  44736d:	dec    ecx
  44736e:	idiv   dh
  447370:	neg    BYTE PTR [edx]
  447372:	jge    0x447342
  447374:	or     bh,dh
  447376:	xor    eax,0x7edefd83
  44737b:	push   ebp
	...
  447390:	bound  ecx,QWORD PTR [eax]
  447392:	call   edi
  447394:	loope  0x4473a8
  447396:	and    al,0x6e
  447398:	or     al,0x68
  44739a:	mov    dh,0x84
  44739c:	and    DWORD PTR [ebp*4+0x42c1d22],ebp
  4473a3:	add    BYTE PTR [ebx],ah
  4473a5:	sbb    dh,ah
  4473a7:	xor    al,0x23
  4473a9:	in     al,dx
  4473aa:	adc    BYTE PTR [eax+ecx*1],0x44
  4473ae:	retf   
  4473af:	sub    al,0x19
  4473b1:	add    dl,dl
  4473b3:	jl     0x44742c
  4473b5:	add    al,0x2
  4473b7:	xchg   DWORD PTR [ebp+0x5400c3b0],esp
  4473bd:	lock add eax,DWORD PTR [eax]
  4473c0:	ins    DWORD PTR es:[edi],dx
  4473c1:	je     0x447354
  4473c3:	add    eax,0xc2f062
  4473c8:	pop    ebp
  4473c9:	lock add eax,DWORD PTR [eax]
  4473cc:	fnstcw WORD PTR [ebx]
  4473ce:	inc    esp
  4473cf:	xchg   DWORD PTR [edi],esp
  4473d1:	test   BYTE PTR [eax-0x14839a41],al
  4473d7:	add    DWORD PTR [edx-0x10],esp
  4473da:	jbe    0x447426
  4473dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4473dd:	xlat   BYTE PTR ds:[ebx]
  4473de:	mov    ebp,0xbc776771
  4473e3:	xchg   BYTE PTR [edi],ah
  4473e5:	lods   al,BYTE PTR ds:[esi]
  4473e6:	jbe    0x447432
  4473e8:	xchg   edx,eax
  4473e9:	idiv   DWORD PTR [ecx+esi*2-0x794398a1]
  4473f0:	daa    
  4473f1:	les    eax,FWORD PTR [eax+0xbf]
	...
  447407:	add    BYTE PTR [ebp+0x7c],ah
  44740a:	jge    0x447411
  44740c:	(bad)  
  44740d:	lock jbe 0x44745a
  447410:	outs   dx,BYTE PTR ds:[esi]
  447411:	addr16 xor al,bh
  447414:	jmp    0xb093504d
  447419:	inc    eax
  44741a:	fsub   QWORD PTR [ecx]
  44741c:	call   0xcd9b:0xdf03e9d9
  447423:	add    esp,DWORD PTR [ecx+0x363f00e1]
  447429:	mov    al,0x1c
  44742b:	aam    0x2c
  44742d:	popf   
  44742e:	sar    DWORD PTR [ebp-0x70],1
  447431:	loope  0x44749d
  447433:	shr    BYTE PTR [ecx-0x50],0x26
  447437:	inc    esp
  447438:	std    
  447439:	jmp    0xfaa0:0x566203e0
  447440:	jbe    0x4473fd
  447442:	fs pusha 
  447444:	inc    esi
  447445:	fldcw  WORD PTR [edx+0x47]
  447448:	neg    al
  44744a:	(bad)  
  44744b:	jg     0x447479
  44744d:	iret   
  44744e:	jmp    0xec6fcf56
  447453:	enter  0xe528,0x62
  447457:	mov    edx,0x852bf8a6
  44745c:	mov    ds:0xca2f70d0,eax
  447461:	aad    0x41
  447463:	test   DWORD PTR [ebx-0x2156242e],edi
  447469:	or     eax,0xe36b
	...
  44747e:	add    BYTE PTR [eax],al
  447480:	dec    edx
  447481:	sbb    BYTE PTR [ebx-0x1],dl
  447484:	and    al,0x18
  447486:	jmp    0x631dd68d
  44748b:	(bad)
  44748e:	leave  
  44748f:	ret    0xdb86
  447492:	jb     0x447451
  447494:	push   es
  447495:	stc    
  447496:	test   BYTE PTR [esp+ebx*4-0x4b7b562f],0xdc
  44749e:	sub    ch,bl
  4474a0:	popa   
  4474a1:	push   esi
  4474a2:	adc    dl,bh
  4474a4:	in     al,0x61
  4474a6:	mov    ecx,ebp
  4474a8:	pop    esp
  4474a9:	loope  0x4474ab
  4474ab:	jmp    0x60a10e88
  4474b0:	mov    edi,DWORD PTR [ebp+0x7]
  4474b3:	outs   dx,BYTE PTR ds:[esi]
  4474b4:	pop    ebp
  4474b5:	call   0xe92b53b1
  4474ba:	push   ss
  4474bb:	out    0xe2,al
  4474bd:	lods   eax,DWORD PTR ds:[esi]
  4474be:	stc    
  4474bf:	into   
  4474c0:	sbb    bl,BYTE PTR [edx]
  4474c2:	inc    eax
  4474c3:	push   ecx
  4474c4:	pop    esi
  4474c5:	fld    DWORD PTR [eax]
  4474c7:	jmp    0xe9564eee
  4474cc:	popa   
  4474cd:	(bad)  [ebx+0x47a6ae1e]
  4474d3:	inc    ebp
  4474d4:	scas   eax,DWORD PTR es:[edi]
  4474d5:	(bad)  
  4474d6:	jmp    0x4474c2
  4474d8:	je     0x447471
  4474da:	add    BYTE PTR [edx+0x2b],ch
  4474dd:	fidiv  WORD PTR [edx-0x35]
  4474e0:	out    0x63,al
  4474e2:	hlt    
  4474e3:	jmp    0x4474e8
	...
  4474f8:	jmp    0x7d9:0x61f0b55c
  4474ff:	aas    
  447500:	pop    edi
  447501:	loop   0x447548
  447503:	ins    DWORD PTR es:[edi],dx
  447504:	dec    esi
  447505:	adc    dl,ah
  447507:	dec    ecx
  447508:	pop    ds
  447509:	pop    esi
  44750a:	mov    esi,0xf88b38f1
  44750f:	jmp    0x317:0xeaf65e09
  447516:	mov    WORD PTR [esi-0x1a502df7],gs
  44751c:	pop    esp
  44751d:	cmp    DWORD PTR [ebx],esp
  44751f:	test   eax,0x6acc5661
  447524:	sbb    cl,0x5e
  447527:	jo     0x447576
  447529:	call   0xa68b:0x71221e70
  447530:	sbb    DWORD PTR [eax],esp
  447532:	in     al,dx
  447533:	jmp    0xa1a0:0x3f2e6
  44753a:	push   esp
  44753b:	jb     0x4474d5
  44753d:	push   esp
  44753e:	add    eax,0x2fdc4b00
  447543:	inc    edi
  447544:	jecxz  0x4474ca
  447546:	adc    eax,0xa36134eb
  44754b:	and    al,0x4b
  44754d:	fadd   QWORD PTR [eax]
  44754f:	add    al,al
  447551:	mov    al,0x68
  447553:	paddq  mm4,mm0
  447556:	push   edx
  447557:	mov    al,ds:0x33009559
	...
  447570:	stc    
  447571:	jle    0x4475f2
  447573:	push   esp
  447574:	cmp    al,0x85
  447576:	stc    
  447577:	inc    edi
  447578:	mov    ds:0x696841ce,eax
  44757d:	dec    DWORD PTR [edx+0xd91b87]
  447583:	add    BYTE PTR [esi-0x58],bh
  447586:	fs mov edx,edi
  447589:	pop    esp
  44758a:	inc    eax
  44758b:	dec    esp
  44758c:	outs   dx,BYTE PTR ds:[esi]
  44758d:	jo     0x447576
  44758f:	add    cl,bl
  447591:	fild   DWORD PTR [esi-0x73]
  447594:	test   BYTE PTR [ecx-0x2afbaeb0],ch
  44759a:	add    DWORD PTR [eax],eax
  44759c:	mov    ebx,0x4e135edb
  4475a1:	mov    al,ds:0xdba15070
  4475a6:	call   0x1204294
  4475ab:	mov    eax,esi
  4475ad:	adc    esi,DWORD PTR [ebp-0x3c]
  4475b0:	sbb    DWORD PTR [edx+eax*2-0x28],0x6
  4475b5:	adc    eax,0xdce68509
  4475ba:	idiv   edi
  4475bc:	adc    ah,BYTE PTR [eax-0x167b3898]
  4475c2:	idiv   edi
  4475c4:	(bad)  
  4475c6:	jp     0x447608
  4475c8:	push   es
  4475c9:	repz ss pusha 
  4475cc:	sub    ebp,DWORD PTR [edi]
  4475ce:	pop    esp
  4475cf:	or     ecx,esp
  4475d1:	sar    ebp,cl
  4475d3:	inc    DWORD PTR [eax]
	...
  4475e5:	add    BYTE PTR [eax],al
  4475e7:	add    BYTE PTR [edx+0x7b],ah
  4475ea:	das    
  4475eb:	push   esp
  4475ec:	or     dh,dl
  4475ee:	add    eax,DWORD PTR [eax]
  4475f0:	bound  esp,QWORD PTR [ebx]
  4475f2:	in     al,0x84
  4475f4:	lods   eax,DWORD PTR ds:[esi]
  4475f5:	lods   al,BYTE PTR ds:[esi]
  4475f6:	xor    al,0x1d
  4475f8:	and    DWORD PTR [edi+ebp*8+0x7e],edi
  4475fc:	fnstenv [ecx]
  4475fe:	mov    ebp,0x85e75ae7
  447603:	mov    edi,0x34d0adeb
  447608:	sbb    al,0x9f
  44760a:	(bad)  
  44760b:	jl     0x44759c
  44760d:	sub    al,0x4
  44760f:	or     esi,ebx
  447611:	daa    
  447612:	cld    
  447613:	(bad)  
  447614:	std    
  447615:	out    dx,eax
  447616:	test   ebp,edi
  447618:	hlt    
  447619:	mov    ch,0xc8
  44761b:	test   BYTE PTR [esp],bl
  44761e:	in     al,0x84
  447620:	xchg   ebp,eax
  447621:	mov    esp,0xe8a47d42
  447626:	add    bl,al
  447628:	sbb    dh,dl
  44762a:	add    eax,DWORD PTR [eax]
  44762c:	bound  eax,QWORD PTR [ebx-0x1c]
  44762f:	test   BYTE PTR ds:0xba527524,dl
  447635:	sub    BYTE PTR [ebx],ah
  447637:	mov    ebp,0x847cf4e9
  44763c:	mov    ds:0x5507dbb1,eax
  447641:	pop    esi
  447642:	ret    
  447643:	xchg   BYTE PTR [edi],ch
  447645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447646:	or     al,dl
  447648:	or     eax,0xbe7ab1
	...
  44765d:	add    BYTE PTR [eax],al
  44765f:	add    BYTE PTR [ebx+0x1f86f398],ah
  447665:	fnstenv ds:0xf9e0ff5d
  44766b:	push   edx
  44766c:	dec    esp
  44766d:	sbb    BYTE PTR [ecx],al
  44766f:	sti    
  447670:	pop    edx
  447671:	daa    
  447672:	and    DWORD PTR [edx+0x79f8b27e],esi
  447678:	stos   BYTE PTR es:[edi],al
  447679:	jno    0x4476fa
  44767b:	jl     0x44761e
  44767d:	mov    ?,WORD PTR [ecx-0x3a]
  447680:	mov    ds:0x453a0071,al
  447685:	fsubp  st(1),st
  447687:	dec    esi
  447688:	retf   
  447689:	push   edx
  44768a:	test   eax,0xded13dc3
  44768f:	(bad)  
  447690:	in     eax,dx
  447691:	pop    ecx
  447692:	stos   BYTE PTR es:[edi],al
  447693:	add    ch,BYTE PTR [edi-0x17]
  447696:	cmp    dl,BYTE PTR [ecx+ebp*8]
  447699:	inc    ecx
  44769a:	jmp    0xe47:0x6ad96203
  4476a1:	(bad)  
  4476a3:	jg     0x447639
  4476a5:	shr    ecx,1
  4476a7:	add    ebp,DWORD PTR [ebx+0x27]
  4476aa:	in     al,dx
  4476ab:	les    ebp,FWORD PTR [eax+0x1eb662dd]
  4476b1:	stc    
  4476b2:	bound  esi,QWORD PTR [edi]
  4476b4:	out    dx,al
  4476b5:	call   0xf5a1:0xda65be6a
  4476bc:	adc    edx,DWORD PTR [ebx+ebp*2]
  4476bf:	(bad)  
  4476c0:	iret   
  4476c1:	push   eax
  4476c2:	or     eax,0xcc
	...
  4476d7:	add    BYTE PTR [esi-0x19522417],cl
  4476dd:	xchg   ebp,eax
  4476de:	shl    esp,1
  4476e0:	repz or edi,DWORD PTR [ebx]
  4476e3:	fld    DWORD PTR [esi+0x5ac45ce8]
  4476e9:	push   ebp
  4476ea:	jns    0x4476e9
  4476ec:	popf   
  4476ed:	fucom  st(6)
  4476ef:	mov    WORD PTR [ecx],gs
  4476f1:	xchg   esi,eax
  4476f2:	add    bh,al
  4476f4:	or     bl,BYTE PTR ds:0x5c634984
  4476fa:	shr    dl,0xa0
  4476fd:	hlt    
  4476fe:	add    dh,BYTE PTR [eax+0x2d]
  447701:	cmc    
  447702:	mov    DWORD PTR [ebp+ebx*4-0x771419a4],ebp
  447709:	cmp    al,BYTE PTR [ecx]
  44770b:	jmp    0x7cc7ee71
  447710:	daa    
  447711:	int3   
  447712:	pop    es
  447713:	aas    
  447714:	adc    eax,0x950d4654
  447719:	call   0x5af0:0xa6632885
  447720:	pop    ecx
  447721:	push   esi
  447722:	clc    
  447723:	push   0xffffffa4
  447725:	fld    QWORD PTR [eax]
  447727:	fisub  WORD PTR [ebp+0x61e8fffb]
  44772d:	shr    BYTE PTR [esi-0xb6fe115],cl
  447733:	(bad)  
  447734:	xlat   BYTE PTR ds:[ebx]
  447735:	or     eax,0xfd4c62e1
  44773a:	inc    edx
  44773b:	push   0x0
	...
  44774d:	add    BYTE PTR [eax],al
  44774f:	add    BYTE PTR [edi+0x6cc103d4],bh
  447755:	fwait
  447756:	add    esp,DWORD PTR [eax+0x3c]
  447759:	loope  0x447796
  44775b:	cdq    
  44775c:	xchg   ebx,eax
  44775d:	add    al,0xd4
  44775f:	xchg   edx,eax
  447760:	pop    edx
  447761:	sbb    eax,0x5dd68984
  447766:	shr    dl,0x48
  447769:	xchg   edi,eax
  44776a:	in     al,dx
  44776b:	test   al,0xaa
  44776d:	(bad)  [edi-0x81e599c]
  447773:	push   edx
  447774:	and    dl,BYTE PTR [eax+0x42]
  447777:	out    dx,al
  447778:	pop    edx
  447779:	jmp    0x60277df1
  44777e:	hlt    
  44777f:	add    BYTE PTR [ebx+0x7c9c83e5],cl
  447785:	fadd   DWORD PTR [eax]
  447787:	prefetch (bad)
  447788:	or     eax,0x374df9da
  44778d:	popa   
  44778e:	leave  
  44778f:	shr    DWORD PTR [ebx+0x61],cl
  447792:	dec    edx
  447793:	fmul   st(1),st
  447795:	pop    ecx
  447796:	ret    0x7808
  447799:	xor    BYTE PTR [ebx+0x525f7c41],cl
  44779f:	clc    
  4477a0:	and    BYTE PTR [eax],cl
  4477a2:	data16 fnstcw WORD PTR [eax+0x1]
  4477a6:	jge    0x44776b
  4477a8:	mov    eax,0x7b8378f8
  4477ad:	loope  0x44782d
  4477af:	inc    ebp
  4477b0:	pop    ds
  4477b1:	push   ss
  4477b2:	fld    QWORD PTR [edi]
	...
  4477c8:	add    ebx,DWORD PTR [esi]
  4477ca:	stc    
  4477cb:	call   DWORD PTR [esp+ebp*8]
  4477ce:	mov    dh,0x3
  4477d0:	or     ecx,DWORD PTR [ebx+eax*2-0xc]
  4477d4:	int3   
  4477d5:	xchg   ecx,eax
  4477d6:	fadd   QWORD PTR [eax]
  4477d8:	or     ebx,eax
  4477da:	add    BYTE PTR [ebx-0x380a52bc],cl
  4477e0:	adc    BYTE PTR [eax-0x4ab3fca4],0x2d
  4477e7:	enter  0x4f04,0xca
  4477eb:	add    bh,bl
  4477ed:	xlat   BYTE PTR ds:[ebx]
  4477ee:	jne    0x44786d
  4477f0:	iret   
  4477f1:	aam    0x6c
  4477f3:	sbb    al,0x50
  4477f5:	xchg   edx,eax
  4477f6:	fsub   st(3),st
  4477f8:	enter  0x3f48,0x0
  4477fc:	inc    eax
  4477fd:	mov    BYTE PTR [eax-0x1],ch
  447800:	and    WORD PTR [edx-0x77],sp
  447804:	ja     0xb041777a
  44780a:	jne    0x447889
  44780c:	bound  edi,QWORD PTR [esi-0x4]
  44780f:	jb     0x4477c7
  447811:	jbe    0x44785e
  447813:	fs popa 
  447815:	sub    esp,DWORD PTR [edi+esi*1]
  447818:	sbb    eax,0x6f7e130a
  44781d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44781e:	ret    
  44781f:	clc    
  447820:	loope  0x44780c
  447822:	and    BYTE PTR [ecx],cl
  447824:	out    0x80,al
  447826:	or     al,BYTE PTR [eax]
  447828:	bound  edx,QWORD PTR [edi+edi*2-0x48]
	...
  447840:	repnz out dx,eax
  447842:	add    eax,DWORD PTR [eax]
  447844:	(bad)  
  447845:	sti    
  447846:	jg     0x4477d4
  447848:	lock add ecx,DWORD PTR fs:[ebx+0x920dd]
  447850:	bound  esi,QWORD PTR [ebp+0x53]
  447853:	ins    BYTE PTR es:[edi],dx
  447854:	fcomi  st,st(1)
  447856:	test   BYTE PTR [eax-0x52],al
  447859:	gs call 0xd94e:0x3f060ef
  447861:	fwait
  447862:	sbb    al,0x8b
  447864:	popf   
  447865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447866:	dec    esp
  447867:	dec    edi
  447868:	and    eax,0x620004f1
  44786d:	lock dec ebp
  44786f:	mov    esp,DWORD PTR [ebp+0x63664ca0]
  447875:	sbb    BYTE PTR [ebx+0x7ef0624a],bl
  44787b:	ret    
  44787c:	pop    edx
  44787d:	imul   ecx,DWORD PTR [eax-0x28],0x831330e7
  447884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447885:	inc    ebp
  447886:	ret    
  447887:	clc    
  447888:	jmp    0x25cfa948
  44788d:	int3   
  44788e:	test   DWORD PTR [eax+0x32],edx
  447891:	jne    0x44782d
  447893:	out    dx,eax
  447894:	pusha  
  447895:	lock add ecx,DWORD PTR [esi-0x11]
  447899:	fldenv [esi+0x7288125b]
  44789f:	push   edx
  4478a0:	inc    edx
  4478a1:	adc    ch,dl
  4478a3:	or     DWORD PTR [eax],eax
	...
  4478b5:	add    BYTE PTR [eax],al
  4478b7:	add    BYTE PTR [edx-0x27],ah
  4478ba:	jmp    0x99b99b4d
  4478bf:	nop
  4478c0:	xor    DWORD PTR [edx-0x28fbaa47],ecx
  4478c6:	inc    ecx
  4478c7:	pop    esi
  4478c8:	sbb    ecx,ebx
  4478ca:	jmp    0x71061a55
  4478cf:	dec    eax
  4478d0:	call   0x14bd:0xe1122a54
  4478d7:	ret    0x566a
  4478da:	test   DWORD PTR [edi],ecx
  4478dc:	pusha  
  4478dd:	dec    esi
  4478de:	xchg   ebp,eax
  4478df:	mov    ebx,0x3dad222
  4478e4:	(bad)  
  4478e5:	(bad)  
  4478e7:	xchg   eax,edx
  4478e9:	shr    ecx,cl
  4478eb:	add    esp,DWORD PTR [ebx]
  4478ed:	shl    ch,cl
  4478ef:	add    esp,DWORD PTR [edx-0x27]
  4478f2:	push   0x3f
  4478f4:	rcr    DWORD PTR cs:[ebx+0x32],cl
  4478f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4478f9:	pop    esp
  4478fa:	fld    DWORD PTR [esi]
  4478fc:	sbb    eax,0x8135e9da
  447901:	dec    esi
  447902:	sbb    eax,0xc18be70c
  447907:	lea    esi,[eax+0x6e4c60e9]
  44790d:	dec    esi
  44790e:	sub    eax,0x72d0dcbc
  447913:	dec    edi
  447914:	add    dl,BYTE PTR [eax+0x3a]
  447917:	adc    al,0xdf
  447919:	add    DWORD PTR [ebp+0x53],0x0
	...
  447930:	in     eax,0x88
  447932:	in     eax,0x53
  447934:	fnstsw WORD PTR [ecx-0x3f]
  447937:	mov    dl,BYTE PTR [edx-0x63]
  44793a:	add    BYTE PTR [ecx-0x16ff68bd],al
  447940:	out    dx,al
  447941:	xchg   esi,eax
  447942:	or     BYTE PTR [edx+0xe],dh
  447945:	int    0x8b
  447947:	mov    cl,0x51
  447949:	push   esp
  44794a:	pop    eax
  44794b:	adc    edi,edx
  44794d:	push   0xf1356034
  447952:	mov    ebx,ecx
  447954:	out    0x99,al
  447956:	cld    
  447957:	imul   ebx,DWORD PTR [edx+0x56f683d1],0xe9394652
  447961:	xchg   al,bh
  447963:	jo     0x447982
  447965:	fld    QWORD PTR [edi]
  447967:	fs repnz (bad) 
  44796a:	add    cl,ch
  44796c:	call   0xf7d9:0x61f2bd58
  447973:	push   es
  447974:	and    edx,edx
  447976:	jmp    0x11dded7
  44797b:	bound  esi,QWORD PTR [ebx+0x61e8b92d]
  447981:	fld    DWORD PTR [eax]
  447983:	mov    edx,0xa57f9a01
  447988:	dec    esi
  447989:	fld    DWORD PTR [eax]
  44798b:	jmp    0x214552f1
  447990:	pop    es
  447991:	xchg   esi,eax
  447992:	mov    esi,DWORD PTR [ecx+0x0]
	...
  4479a8:	out    0x19,al
  4479aa:	inc    ebp
  4479ab:	jb     0x447a12
  4479ad:	popa   
  4479ae:	mov    esp,DWORD PTR [ecx-0x21f73fe0]
  4479b4:	jnp    0x447955
  4479b6:	mov    DWORD PTR [edx+edi*4],ebp
  4479b9:	or     eax,0x5ea117c7
  4479be:	imul   DWORD PTR [edx+0x24]
  4479c1:	aad    0x0
  4479c3:	fsubrp st(5),st
  4479c5:	xchg   edi,eax
  4479c6:	std    
  4479c7:	dec    ebx
  4479c9:	fmul   QWORD PTR [ecx]
  4479cb:	mov    dh,0xb9
  4479cd:	cdq    
  4479ce:	dec    edx
  4479cf:	cld    
  4479d0:	inc    eax
  4479d1:	stos   BYTE PTR es:[edi],al
  4479d2:	(bad)  
  4479d3:	loopne 0x447a15
  4479d5:	sub    DWORD PTR [ebp+0x42],ecx
  4479d8:	dec    eax
  4479d9:	mov    ds:0x542302ff,al
  4479de:	idiv   edi
  4479e0:	mov    ebx,0xe0c5dc
  4479e5:	sub    DWORD PTR [ebp-0x77],eax
  4479e8:	not    BYTE PTR [edi+edi*1+0x3653823]
  4479ef:	add    DWORD PTR [eax],0x83e9b6a4
  4479f5:	jmp    0x1f3743ac
  4479fa:	in     eax,dx
  4479fb:	cmp    edi,DWORD PTR ds:0x3b84b811
  447a01:	jmp    0xdc903a82
  447a06:	add    BYTE PTR [eax-0x477c17a5],ch
	...
  447a20:	cmp    ebx,esp
  447a22:	add    BYTE PTR [ebx+0x8de9b83],cl
  447a28:	ret    0xcd27
  447a2b:	pmullw mm4,QWORD PTR [ebp-0x17d8b282]
  447a32:	mov    dl,0xc8
  447a34:	cmp    BYTE PTR [ecx],ch
  447a36:	fisttp QWORD PTR [ecx+0x1afb946]
  447a3c:	or     ebx,esp
  447a3e:	add    bl,dl
  447a40:	sbb    esp,DWORD PTR [edx+ecx*2-0x1c]
  447a44:	inc    ebx
  447a45:	mov    esp,0x6423d3b4
  447a4a:	dec    edx
  447a4b:	hlt    
  447a4c:	retf   0x785
  447a4f:	add    edi,DWORD PTR [edx+0x628bbf63]
  447a55:	pop    es
  447a56:	push   ecx
  447a57:	test   DWORD PTR [esi+0x3a],esp
  447a5a:	or     BYTE PTR [edx+0x42857627],dh
  447a60:	(bad)  
  447a61:	and    BYTE PTR [edi+eax*1-0x342e7ab],0xa2
  447a69:	mov    bh,BYTE PTR [ebp-0xd4eb8f]
  447a6f:	mov    cl,cl
  447a71:	rol    DWORD PTR [ebx],0x0
  447a74:	bound  eax,QWORD PTR [ebx+0x42]
  447a77:	cld    
  447a78:	bound  esi,QWORD PTR [edi-0x3da0e181]
  447a7e:	add    ecx,DWORD PTR [ecx]
  447a80:	aam    0xc3
  447a82:	mov    cl,cl
	...
  447a98:	mov    cl,0x21
  447a9a:	mov    WORD PTR [edx-0x62],cs
  447a9d:	push   es
  447a9e:	push   edx
  447a9f:	cld    
  447aa0:	and    bl,al
  447aa2:	fisttp DWORD PTR [eax]
  447aa4:	mov    ah,0xfc
  447aa6:	test   DWORD PTR [edx+0x7e],eax
  447aa9:	mov    esi,0xf861c66d
  447aae:	je     0x447aae
  447ab0:	push   ebp
  447ab1:	rol    DWORD PTR [ebx],0xcd
  447ab4:	inc    edx
  447ab5:	dec    esp
  447ab6:	push   edx
  447ab7:	in     al,0xe1
  447ab9:	push   es
  447aba:	add    eax,0x4bc89787
  447abf:	sbb    eax,0x8ab9421
  447ac4:	cmc    
  447ac5:	add    eax,0x3c22fcd7
  447aca:	inc    edi
  447acb:	dec    esp
  447acc:	jmp    0x9fcaf78d
  447ad1:	xchg   esp,eax
  447ad2:	mov    esp,0x6dc75ae7
  447ad7:	mov    edi,0x34a90561
  447adc:	and    al,0x10
  447ade:	imul   ecx,DWORD PTR [eax],0xffffffac
  447ae1:	fldcw  WORD PTR [ecx+eiz*8]
  447ae4:	out    0x1c,al
  447ae6:	mov    ss,edx
  447ae8:	inc    BYTE PTR [edx]
  447aea:	cdq    
  447aeb:	mov    edx,gs
  447aed:	popf   
  447aee:	repnz add esp,DWORD PTR [edx+0x62]
  447af2:	mov    cl,0xc4
  447af4:	(bad)
  447af8:	pushf  
  447af9:	fcomp  DWORD PTR [esi-0x39]
	...
  447b10:	push   esi
  447b11:	fldl2t 
  447b13:	sar    BYTE PTR [esi+0x188c5902],cl
  447b19:	mov    ebp,0xc0e4cb72
  447b1e:	stc    
  447b1f:	mov    WORD PTR [edx],gs
  447b21:	sbb    DWORD PTR [esi-0x3d],ebx
  447b24:	adc    dl,ah
  447b26:	es push es
  447b28:	jne    0x447b03
  447b2a:	jmp    0xe657f832
  447b2f:	add    esp,DWORD PTR [edx-0x7f]
  447b32:	or     DWORD PTR [eax],edi
  447b34:	push   ecx
  447b35:	sahf   
  447b36:	data16 (bad) 
  447b38:	push   esi
  447b39:	fldl2t 
  447b3b:	mov    esi,0xc60ed66a
  447b40:	(bad)  
  447b42:	jmp    0xc904dd4a
  447b47:	pop    es
  447b48:	(bad)  
  447b49:	fst    DWORD PTR [ecx+0x43]
  447b4c:	into   
  447b4d:	out    0x62,al
  447b4f:	dec    eax
  447b50:	push   0xffffff9e
  447b52:	test   eax,0x2960fe1b
  447b57:	add    al,0x45
  447b59:	loope  0x447b38
  447b5b:	add    esp,DWORD PTR [edx-0x1a]
  447b5e:	xchg   edi,eax
  447b5f:	int3   
  447b60:	sahf   
  447b61:	mov    eax,0x21aa8ad6
  447b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  447b67:	add    eax,0x3e9d971
  447b6c:	fistp  WORD PTR ds:0x95e52101
  447b72:	ins    BYTE PTR es:[edi],dx
  447b73:	add    BYTE PTR es:[eax],al
	...
  447b86:	add    BYTE PTR [eax],al
  447b88:	sti    
  447b89:	lds    esi,FWORD PTR [ebx-0x30]
  447b8c:	fdivr  QWORD PTR [ecx+0x1c]
  447b8f:	jmp    0x6a4554f5
  447b94:	popf   
  447b95:	aad    0x0
  447b97:	(bad)  
  447b99:	push   ss
  447b9a:	std    
  447b9b:	call   0xebf35c01
  447ba0:	push   es
  447ba1:	and    esi,ebp
  447ba3:	bound  ebp,QWORD PTR [esp+eiz*4-0x681cd420]
  447baa:	or     BYTE PTR [eax+0x15],dh
  447bad:	rol    DWORD PTR [ebx],1
  447baf:	inc    ecx
  447bb0:	stos   DWORD PTR es:[edi],eax
  447bb1:	dec    eax
  447bb2:	dec    ecx
  447bb3:	fstp   TBYTE PTR [edi+0x19a1475c]
  447bb9:	xlat   BYTE PTR ds:[ebx]
  447bba:	imul   ecx
  447bbc:	popa   
  447bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  447bbe:	loopne 0x447bd2
  447bc0:	rcr    DWORD PTR ds:0x18612a24,1
  447bc6:	inc    ecx
  447bc7:	sbb    cl,bl
  447bc9:	(bad)  
  447bca:	xchg   BYTE PTR ds:0x7200d94b,ch
  447bd0:	pop    ss
  447bd1:	sbb    DWORD PTR [edx+0xee2e66],ecx
  447bd7:	jmp    0xe95355fa
  447bdc:	popa   
  447bdd:	(bad)  [ebx+0x191a9ae]
  447be3:	jmp    0xa185549
  447be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447be9:	test   bl,0x72
	...
  447c00:	sbb    DWORD PTR [esi+0x3f],ebx
  447c03:	cmp    ebx,ebx
  447c05:	fmul   DWORD PTR [eax-0x166bd69e]
  447c0b:	loope  0x447c73
  447c0d:	xchg   ecx,ecx
  447c0f:	add    BYTE PTR [edx-0x4ac412e5],dl
  447c15:	push   cs
  447c16:	inc    ecx
  447c17:	nop
  447c18:	mov    BYTE PTR [ebx],dl
  447c1a:	cmc    
  447c1b:	add    BYTE PTR [ebx*2-0x2704fc3a],dl
  447c22:	or     DWORD PTR [esi-0x3b56a07],esi
  447c28:	inc    eax
  447c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  447c2a:	(bad)  
  447c2b:	loopne 0x447c6d
  447c2d:	and    eax,0x9e384259
  447c32:	inc    DWORD PTR [edx]
  447c34:	add    edx,DWORD PTR [ecx-0x9]
  447c37:	dec    ebx
  447c39:	fadd   st,st(5)
  447c3b:	loopne 0x447c7d
  447c3d:	and    eax,0x90ee8951
  447c42:	aas    
  447c43:	and    edi,DWORD PTR [eax+0x61]
  447c46:	add    eax,DWORD PTR [ecx-0x16496000]
  447c4c:	and    ebp,0xffffffb2
  447c4f:	leave  
  447c50:	adc    bl,BYTE PTR [ebx]
  447c52:	in     eax,dx
  447c53:	cmp    esi,DWORD PTR ds:0x3ba8b80d
  447c59:	in     eax,0x83
  447c5b:	mov    al,0x8b
  447c5d:	fadd   DWORD PTR [eax]
  447c5f:	mov    esi,DWORD PTR [ebx]
  447c61:	xchg   edi,eax
  447c62:	fimul  WORD PTR [eax]
	...
  447c78:	repnz and cl,ch
  447c7b:	bsr    ebx,DWORD PTR [edi-0x1aa0b282]
  447c82:	mov    dl,0xc8
  447c84:	cmp    BYTE PTR [ebx],ah
  447c86:	fisttp QWORD PTR [ecx+0x1afb3fe]
  447c8c:	dec    ebx
  447c8d:	fadd   DWORD PTR [eax]
  447c8f:	shr    DWORD PTR [ebx+0x61],cl
  447c92:	dec    edx
  447c93:	in     al,0x73
  447c95:	mov    esp,0x6413d3b4
  447c9a:	dec    edx
  447c9b:	hlt    
  447c9c:	bound  eax,QWORD PTR [ecx-0x7e9ef05b]
  447ca2:	xchg   edi,eax
  447ca4:	fld    DWORD PTR [edx]
  447ca6:	dec    ebp
  447ca7:	test   DWORD PTR [esi+0x4a],ebx
  447caa:	or     al,0xb2
  447cac:	scas   eax,DWORD PTR es:[edi]
  447cad:	jbe    0x447c34
  447caf:	inc    edx
  447cb0:	out    dx,al
  447cb1:	and    BYTE PTR [edi+eax*1-0x342cba3],0x22
  447cb9:	mov    bh,0xc1
  447cbb:	jno    0x447cf1
  447cbd:	aas    
  447cbe:	cmp    bh,ah
  447cc0:	bound  esi,QWORD PTR [ebx-0x3d9ec189]
  447cc6:	add    ecx,DWORD PTR [ecx]
  447cc8:	or     al,0xc0
  447cca:	xchg   cl,cl
  447ccc:	xchg   ecx,eax
  447ccd:	popa   
  447cce:	xchg   DWORD PTR [edx-0x6a],ecx
  447cd1:	inc    edx
  447cd2:	dec    edx
  447cd3:	cld    
  447cd4:	and    BYTE PTR [edi-0x313f725],bh
  447cda:	test   DWORD PTR [edx+0x0],eax
	...
  447ced:	add    BYTE PTR [eax],al
  447cef:	add    BYTE PTR [esi+0x61c671ba],al
  447cf5:	cli    
  447cf6:	je     0x447cf6
  447cf8:	(bad)  
  447cf9:	rol    DWORD PTR [ebx],0xcd
  447cfc:	add    BYTE PTR [esi+0x4a],0xe4
  447d00:	loope  0x447d05
  447d02:	add    eax,0x450a0f87
  447d07:	sbb    eax,0x8a50ea1
  447d0c:	lods   eax,DWORD PTR ds:[esi]
  447d0d:	test   cl,bl
  447d0f:	cld    
  447d10:	and    bh,BYTE PTR [eax]
  447d12:	dec    esp
  447d13:	push   eax
  447d14:	jmp    0xa7caf9d5
  447d19:	aam    0xbc
  447d1b:	out    0x5a,eax
  447d1d:	ret    
  447d1e:	jno    0x447cdf
  447d20:	popa   
  447d21:	test   DWORD PTR [edi+0x664c1c34],edx
  447d27:	or     ah,dh
  447d29:	fldcw  WORD PTR [ecx+ebx*8]
  447d2c:	ficomp WORD PTR [esi+ecx*8]
  447d2f:	(bad)  
  447d30:	push   es
  447d31:	(bad)  
  447d32:	fadd   DWORD PTR [ebx+ebp*8]
  447d35:	popf   
  447d36:	repnz add esp,DWORD PTR [edx+0x5e]
  447d3a:	mov    cl,0xc4
  447d3c:	cld    
  447d3d:	loope  0x447d25
  447d3f:	jno    0x447d65
  447d41:	fstp   DWORD PTR [esi-0x41]
  447d44:	dec    esi
  447d45:	fldl2t 
  447d47:	(bad)  
  447d48:	push   es
  447d49:	call   FWORD PTR [eax+0x51bd988c]
  447d4f:	inc    ebx
  447d50:	push   esi
  447d51:	loop   0x447db5
  447d53:	inc    eax
	...
  447d68:	push   0xffffff9a
  447d6a:	sub    DWORD PTR [esi+eax*1],ebx
  447d6d:	bound  ebp,QWORD PTR [ecx]
  447d6f:	add    al,0xbd
  447d71:	xor    esp,ebp
  447d73:	add    esp,DWORD PTR [edx+0x5e]
  447d76:	mov    eax,ds:0xa899f00a
  447d7b:	lods   al,BYTE PTR ds:[esi]
  447d7c:	pop    ebp
  447d7d:	push   esi
  447d7e:	dec    ecx
  447d7f:	or     bl,ch
  447d81:	and    bl,BYTE PTR [esi+0x2721228c]
  447d87:	add    dh,BYTE PTR [ebx-0x27]
  447d8a:	jmp    0xb25f6492
  447d8f:	add    ch,0x4d
  447d92:	stos   BYTE PTR es:[edi],al
  447d93:	dec    BYTE PTR [ebp-0x778f3ba]
  447d99:	aam    0xe9
  447d9b:	or     ah,dh
  447d9d:	imul   ebp,ebx,0x4fe26203
  447da3:	add    eax,0x8e0e245b
  447da8:	sub    esp,DWORD PTR [esi-0x6430baf7]
  447dae:	icebp  
  447daf:	mov    WORD PTR [eax+0x76dbead1],?
  447db5:	dec    edx
  447db6:	add    DWORD PTR [ecx-0x61745091],esp
  447dbc:	cdq    
  447dbd:	xchg   ecx,eax
  447dbe:	add    ecx,ebp
  447dc0:	popa   
  447dc1:	(bad)  
  447dc3:	leave  
  447dc4:	movnti DWORD PTR [eax+0xa],ecx
  447dc8:	pop    ds
  447dc9:	sar    DWORD PTR [esi],cl
  447dcb:	and    eax,0x0
	...
  447de0:	aaa    
  447de1:	mov    ebp,0xed227601
  447de6:	add    cl,ch
  447de8:	and    bl,cl
  447dea:	sbb    cl,ch
  447dec:	popa   
  447ded:	fld    DWORD PTR [ebx+0x6d1b62c]
  447df3:	ins    DWORD PTR es:[edi],dx
  447df4:	cwde   
  447df5:	shl    edi,cl
  447df7:	jmp    0xc3259cea
  447dfc:	sbb    al,0xc9
  447dfe:	mov    esp,DWORD PTR [esi]
  447e00:	and    cl,BYTE PTR [edx+eax*8]
  447e03:	call   FWORD PTR [eax]
  447e05:	cld    
  447e06:	shl    DWORD PTR [eax+0x7d],0xcd
  447e0a:	cmp    ebp,DWORD PTR [esi]
  447e0c:	retf   0x647
  447e0f:	push   0x2b
  447e11:	xchg   edx,eax
  447e12:	sbb    ebp,ecx
  447e14:	popa   
  447e15:	fld    DWORD PTR [edi]
  447e17:	fs sbb dl,bl
  447e1a:	imul   ecx
  447e1c:	out    0x20,al
  447e1e:	xor    DWORD PTR [edx],edx
  447e20:	mov    eax,ds:0xa1120847
  447e25:	pop    esp
  447e26:	inc    edi
  447e27:	cmc    
  447e28:	data16 and BYTE PTR [ecx],ch
  447e2b:	pusha  
  447e2c:	xor    eax,0xbf212bcd
  447e31:	fmul   QWORD PTR [ebx-0x37038a4a]
  447e37:	jmp    0x5805:0xac8c09aa
  447e3e:	inc    ebp
  447e3f:	xor    eax,0x4121df
	...
  447e58:	rcr    BYTE PTR [eax],cl
  447e5a:	aad    0x3b
  447e5c:	mov    cl,BYTE PTR [ebx]
  447e5e:	adc    al,0x8b
  447e60:	mov    bh,BYTE PTR [esi+0x9]
  447e63:	mov    ecx,esi
  447e65:	test   BYTE PTR [eax+ecx*8],bl
  447e68:	mov    al,0x19
  447e6a:	inc    ecx
  447e6b:	mov    DWORD PTR [esi-0x57],ecx
  447e6e:	jle    0x447eb5
  447e70:	iret   
  447e71:	arpl   WORD PTR [edx-0xc],ax
  447e74:	adc    BYTE PTR [edi],0xf1
  447e77:	cmp    edi,DWORD PTR [edx-0x3574fbf6]
  447e7d:	arpl   WORD PTR [edx-0xc],ax
  447e80:	pusha  
  447e81:	popf   
  447e82:	jle    0x447ed1
  447e84:	stos   DWORD PTR es:[edi],eax
  447e85:	pop    ebp
  447e86:	dec    edx
  447e87:	fcom   QWORD PTR [eax]
  447e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  447e8a:	jl     0x447ed1
  447e8c:	repz arpl WORD PTR [eax+0x40],cx
  447e90:	inc    eax
  447e91:	pop    ss
  447e92:	int    0x2b
  447e94:	outs   dx,BYTE PTR ds:[esi]
  447e95:	jge    0x447f15
  447e97:	dec    ebp
  447e98:	out    0x7d,eax
  447e9a:	(bad)  
  447e9b:	jmp    0x1740:0x3e57c8
  447ea2:	int    0x8a
  447ea4:	(bad)  
  447ea5:	fstp   TBYTE PTR [ebp+0x45]
  447ea8:	adc    esp,DWORD PTR [edi+edi*8+0x3f]
  447eac:	cmp    al,0x17
  447eae:	in     eax,dx
  447eaf:	mov    esi,eax
  447eb1:	test   BYTE PTR [edx-0x14],dh
  447eb4:	clc    
  447eb5:	adc    BYTE PTR [ecx+0x0],al
  447eb8:	mov    WORD PTR [edi+0x39],cs
  447ebb:	add    DWORD PTR [eax],eax
	...
  447ecd:	add    BYTE PTR [eax],al
  447ecf:	add    BYTE PTR [ebx-0x68f83e24],cl
  447ed5:	fadd   QWORD PTR [eax]
  447ed7:	add    BYTE PTR [edx],ah
  447ed9:	shl    dh,0xff
  447edc:	jnp    0x447f33
  447ede:	jp     0x447ed0
  447ee0:	dec    ebx
  447ee1:	loope  0x447f5f
  447ee3:	mov    BYTE PTR [edx-0x3f],ah
  447ee6:	add    eax,DWORD PTR [eax]
  447ee8:	fnstenv [ebx+ebp*4-0x7b]
  447eec:	xchg   ebp,eax
  447eed:	or     BYTE PTR [ebx+0x3dcfa207],0xf0
  447ef4:	jmp    0x447f72
  447ef6:	stos   DWORD PTR es:[edi],eax
  447ef7:	shl    BYTE PTR [ebp-0x5a],0x3
  447efb:	add    BYTE PTR [edx-0x57],ah
  447efe:	or     al,0xff
  447f00:	sbb    eax,0x6a7882c2
  447f05:	ret    0x83fe
  447f08:	rol    cl,cl
  447f0a:	add    eax,DWORD PTR [eax]
  447f0c:	loope  0x447ea5
  447f0e:	fsubr  QWORD PTR [esp+eax*2+0x3d]
  447f12:	and    DWORD PTR [edx+eiz*2],esp
  447f15:	inc    ebx
  447f16:	cmp    bh,ah
  447f18:	bound  ebp,QWORD PTR [edi-0x3d9cb189]
  447f1e:	add    ecx,DWORD PTR [ecx]
  447f20:	adc    al,0xc4
  447f22:	scas   al,BYTE PTR es:[edi]
  447f23:	dec    edx
  447f24:	(bad)  
  447f25:	cmp    bh,BYTE PTR [edi-0x7bfc3d34]
  447f2b:	rcr    DWORD PTR [edx+0x49],0x52
  447f2f:	clc    
  447f30:	popa   
  447f31:	jp     0x447eb6
  447f33:	stc    
	...
  447f48:	adc    ah,0xcd
  447f4b:	test   BYTE PTR [edi],ah
  447f4d:	(bad)  
  447f4e:	jmp    0x447f92
  447f50:	mov    dl,0x4a
  447f52:	dec    edx
  447f53:	or     BYTE PTR [ebx-0x7f],ah
  447f56:	pop    es
  447f57:	call   FWORD PTR [esi+eax*8]
  447f5a:	test   BYTE PTR [edx-0x7e],al
  447f5d:	xor    al,0xbd
  447f5f:	jae    0x447f9c
  447f61:	dec    ebx
  447f62:	dec    edx
  447f63:	call   0x505fe651
  447f68:	dec    ecx
  447f69:	cli    
  447f6a:	cmp    DWORD PTR [eax+0x52],0xffffffc2
  447f6e:	dec    esp
  447f6f:	dec    esi
  447f70:	out    dx,al
  447f71:	fsub   st,st(6)
  447f73:	stos   DWORD PTR es:[edi],eax
  447f74:	dec    DWORD PTR [edi]
  447f76:	jmp    0x952b:0x1d53f03
  447f7d:	fldl2t 
  447f7f:	mov    bl,BYTE PTR [eax+0x3a5172e1]
  447f85:	popa   
  447f86:	sahf   
  447f87:	sbb    ebx,ebp
  447f89:	sbb    BYTE PTR [edx-0x1616557e],bh
  447f8f:	mov    ah,BYTE PTR [eax+0x24070c9]
  447f95:	arpl   WORD PTR [edx-0x160b88d0],bp
  447f9b:	mov    dh,0xd
  447f9d:	iret   
  447f9e:	(bad)  
  447f9f:	retf   0xb8c4
  447fa2:	fld    DWORD PTR [edx]
  447fa4:	mov    ebp,0xfcc4b262
  447fa9:	loope  0x448013
  447fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  447fc0:	in     eax,dx
  447fc1:	iret   
  447fc2:	jmp    0xf1fe24ca
  447fc7:	add    bl,BYTE PTR ds:0xbcc4b263
  447fcd:	icebp  
  447fce:	jmp    0x562f:0xf21696c4
  447fd5:	bound  esp,QWORD PTR [esp+ecx*1]
  447fd8:	mov    ds:0xdd5fe219,eax
  447fdd:	sbb    edx,ebp
  447fdf:	stos   BYTE PTR es:[edi],al
  447fe0:	adc    DWORD PTR [edx],ecx
  447fe2:	xchg   ebx,eax
  447fe3:	repnz mov bl,0x96
  447fe6:	out    0x1a,al
  447fe8:	(bad)  
  447fe9:	fldl2t 
  447feb:	sbb    BYTE PTR [edx],0xe1
  447fee:	jmp    0xe9a465f9
  447ff3:	add    esp,DWORD PTR [edx+0x5a]
  447ff6:	mov    esi,0x5dde6213
  447ffb:	jg     0x448072
  447ffd:	into   
  447ffe:	add    cl,ch
  448000:	loopne 0x447fd2
  448002:	and    BYTE PTR [edx+0x25764d83],bh
  448008:	popa   
  448009:	loopne 0x448087
  44800b:	jb     0x44806e
  44800d:	fld    DWORD PTR [eax]
  44800f:	out    0xbf,al
  448011:	int3   
  448012:	neg    BYTE PTR [ebp+ecx*1+0x11ac655]
  448019:	or     al,0x84
  44801b:	daa    
  44801c:	imul   edx,DWORD PTR [esi+0x4d],0x83b163f1
  448023:	out    dx,eax
	...
  448038:	inc    eax
  448039:	cmp    al,0xd7
  44803b:	and    dh,BYTE PTR [edi-0x14ca9313]
  448041:	and    cl,BYTE PTR [ecx]
  448043:	scas   al,BYTE PTR es:[edi]
  448044:	mov    eax,ds:0x9e619cf1
  448049:	fnstcw WORD PTR [edi+0xd954ee]
  44804f:	jmp    0xb1c8593e
  448054:	push   esp
  448055:	loopne 0x4480d5
  448057:	or     DWORD PTR [eax+edx*8-0x2eeb9e09],edi
  44805e:	neg    DWORD PTR [esi+0x6258242c]
  448064:	in     eax,dx
  448065:	xor    al,bl
  448067:	loope  0x4480ca
  448069:	push   esp
  44806a:	cmp    eax,0xe922eaf1
  44806f:	jo     0x448097
  448071:	fisttp QWORD PTR [ebx+0x1056f624]
  448077:	bound  edx,QWORD PTR ds:0x71b189cd
  44807d:	push   esi
  44807e:	push   eax
  44807f:	in     eax,0xe8
  448081:	dec    eax
  448082:	xor    eax,0x3930d8b7
  448087:	mov    dl,0x9
  448089:	int3   
  44808a:	test   DWORD PTR [eax],0x8b59d98b
  448090:	push   ds
  448091:	es mov bh,0x8
  448094:	jnp    0x44805e
  448096:	int3   
  448097:	xor    ebp,DWORD PTR ds:0x1c008c
	...
  4480ad:	add    BYTE PTR [eax],al
  4480af:	add    BYTE PTR [ebx-0x27],cl
  4480b2:	add    bh,al
  4480b4:	(bad)  
  4480b5:	mov    al,0xf6
  4480b7:	(bad)  
  4480b8:	cmp    ebx,ecx
  4480ba:	fld    QWORD PTR [edi]
  4480bc:	jl     0x4480ca
  4480be:	fscale 
  4480c0:	fs xchg al,bh
  4480c3:	mov    edi,esi
  4480c5:	loopne 0x448144
  4480c7:	dec    ebp
  4480c8:	arpl   WORD PTR [eax+0x3f],sp
  4480cb:	or     al,0xc0
  4480cd:	adc    al,0xf1
  4480cf:	mov    DWORD PTR [ebx],ebx
  4480d1:	bound  edx,QWORD PTR [edx-0x4]
  4480d4:	xchg   edx,eax
  4480d5:	and    BYTE PTR [ecx],dl
  4480d7:	mov    DWORD PTR [ebx-0x27],ecx
  4480da:	jne    0x44815b
  4480dc:	arpl   bp,dx
  4480de:	jg     0x44813f
  4480e0:	arpl   WORD PTR [eax+0x70],sp
  4480e3:	cmp    al,0x2e
  4480e5:	out    dx,eax
  4480e6:	jge    0x448135
  4480e8:	sbb    edx,edx
  4480ea:	aas    
  4480eb:	adc    BYTE PTR [edi],ch
  4480ed:	mov    esp,0x9048077c
  4480f2:	sbb    bh,BYTE PTR [ebp-0x5b]
  4480f5:	pop    ecx
  4480f6:	out    dx,eax
  4480f7:	sbb    dh,BYTE PTR [edi-0x35]
  4480fa:	je     0x448179
  4480fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4480fd:	int3   
  4480fe:	jae    0x448123
  448100:	xor    BYTE PTR [ebx],cl
  448102:	loope  0x44808f
  448104:	push   esi
  448105:	fucomp st(0)
  448107:	or     eax,0x85f885e7
  44810c:	sti    
  44810d:	cld    
  44810e:	or     al,0xc7
  448110:	mov    esi,fs
	...
  448126:	add    BYTE PTR [eax],al
  448128:	mov    esp,DWORD PTR [esi]
  44812a:	dec    esi
  44812b:	mov    eax,0xf8ad2662
  448130:	test   DWORD PTR [ebx-0x78],edi
  448133:	loop   0x448154
  448135:	add    BYTE PTR [eax+eax*1],cl
  448138:	jmp    0x27c98cc2
  44813d:	bnd call 0x4f7bdf84
  448143:	loopne 0x4480ce
  448145:	xchg   esp,eax
  448146:	adc    edi,edi
  448148:	lahf   
  448149:	retf   0x5a02
  44814c:	jbe    0x44810f
  44814e:	dec    esp
  44814f:	sbb    al,0xe1
  448151:	pop    edx
  448152:	or     eax,DWORD PTR [eax]
  448154:	jmp    0x4481d2
  448156:	shl    DWORD PTR [ebx+0x73],cl
  448159:	xor    eax,0x3f7f73d9
  44815e:	sub    eax,0x276f6210
  448163:	psubsw mm1,QWORD PTR [ebx]
  448166:	add    DWORD PTR [ebp-0x33282563],eax
  44816c:	mov    al,0x12
  44816e:	xchg   ebp,eax
  44816f:	cmc    
  448170:	inc    esi
  448171:	ret    0xe503
  448174:	ins    DWORD PTR es:[edi],dx
  448175:	inc    edi
  448176:	inc    ebx
  448177:	or     al,0xe9
  448179:	loop   0x44817f
  44817b:	and    eax,0xe84ef119
  448180:	stos   DWORD PTR es:[edi],eax
  448181:	ret    0x3
  448184:	jmp    0x448180
  448186:	add    al,0x87
  448188:	sbb    al,0xb2
  44818a:	jbe    0x44818c
	...
  4481a0:	loope  0x44820b
  4481a2:	pcmpeqb mm2,QWORD PTR [esi+0x73]
  4481a6:	dec    ecx
  4481a7:	or     BYTE PTR [edx-0x3e],ah
  4481aa:	add    eax,DWORD PTR [eax]
  4481ac:	loope  0x448207
  4481ae:	add    dh,BYTE PTR [ebx+0x65]
  4481b1:	jnp    0x4481fc
  4481b3:	or     BYTE PTR [edx-0x3f],ah
  4481b6:	add    eax,DWORD PTR [eax]
  4481b8:	jmp    0x934c3095
  4481bd:	mov    cl,0x2
  4481bf:	mov    ebp,0xa56aa73e
  4481c4:	inc    ebp
  4481c5:	pop    eax
  4481c6:	push   ecx
  4481c7:	jmp    FWORD PTR [edx+0x66]
  4481ca:	sub    eax,DWORD PTR [edi]
  4481cc:	sub    ecx,esp
  4481ce:	mov    bl,0x84
  4481d0:	(bad)  
  4481d1:	pop    eax
  4481d2:	jmp    0x191ce3da
  4481d7:	pop    es
  4481d8:	mov    bl,0xd
  4481da:	imul   esi,DWORD PTR [ecx],0x32
  4481dd:	fidiv  DWORD PTR [eax+0x5a]
  4481e0:	jle    0x448226
  4481e2:	out    0x88,al
  4481e4:	cs inc esi
  4481e6:	loopne 0x44816e
  4481e8:	mov    eax,0x4d38e5dd
  4481ed:	pop    esi
  4481ee:	pushf  
  4481ef:	retf   
  4481f0:	loopne 0x44818b
  4481f2:	fimul  WORD PTR [eax-0x4d1933fe]
  4481f8:	mov    ebx,0x1aaea22e
  4481fd:	retf   
  4481fe:	(bad)  
  4481ff:	push   edx
  448200:	out    0xb4,eax
  448202:	sub    al,0xc6
	...
  448218:	pop    ebp
  448219:	fldenv [edx+0x48]
  44821c:	sbb    ch,BYTE PTR [ebx+eiz*1]
  44821f:	push   ebx
  448220:	fbstp  TBYTE PTR [esp+edx*1+0x71d965c6]
  448227:	mov    cl,0xea
  448229:	retf   0x52a6
  44822c:	out    0xb4,eax
  44822e:	cmp    al,0xc6
  448230:	pop    ebp
  448231:	fnstenv [esi]
  448233:	xchg   ecx,eax
  448234:	mov    ds,ecx
  448236:	outs   dx,DWORD PTR ds:[esi]
  448237:	xchg   ecx,eax
  448238:	xchg   cl,bl
  44823a:	mov    ch,0x92
  44823c:	jle    0x448217
  44823e:	dec    ecx
  44823f:	xchg   edx,eax
  448240:	jbe    0x44821b
  448242:	int3   
  448243:	arpl   WORD PTR [esi-0x27],bp
  448246:	add    BYTE PTR [edx+0x41],bl
  448249:	or     eax,0xd072501
  44824e:	add    DWORD PTR [edx-0x2],ebx
  448251:	or     al,0x1
  448253:	jge    0x44825c
  448255:	or     eax,0xcfd0801
  44825a:	add    edi,ecx
  44825c:	add    al,0xd
  44825e:	add    DWORD PTR [esp+edi*8+0x480010c],ecx
  448265:	or     eax,0xcfdb101
  44826a:	add    DWORD PTR [eax*8-0x42bdfef3],edx
  448271:	or     eax,0xdbad601
  448276:	add    DWORD PTR [edx-0x46],ebx
  448279:	or     eax,0x6801
	...
  44828e:	add    BYTE PTR [eax],al
  448290:	retf   
  448291:	or     eax,0xd96df01
  448296:	add    ebp,ebx
  448298:	mov    cs,WORD PTR ds:0xd84c701
  44829e:	add    DWORD PTR [edx-0x44],esp
  4482a1:	or     eax,0xd82cf01
  4482a6:	add    DWORD PTR [edx],ebx
  4482a8:	lods   eax,DWORD PTR ds:[esi]
  4482a9:	or     eax,0xda5d001
  4482ae:	add    esp,ebp
  4482b0:	or     DWORD PTR ds:0xd80a401,0x1
  4482b7:	inc    edx
  4482b8:	or     DWORD PTR ds:0xd836d01,0x1
  4482bf:	mov    WORD PTR [ebx+0xd],es
  4482c2:	add    DWORD PTR [edx+ecx*2],eax
  4482c5:	or     eax,0xd45cf01
  4482ca:	add    DWORD PTR ds:0x2c010d3a,esp
  4482d0:	dec    edx
  4482d1:	or     eax,0x98ef0001
  4482d6:	retf   
  4482d7:	int3   
  4482d8:	call   FWORD PTR [eax+0x4c46cccb]
  4482de:	in     al,dx
  4482df:	push   esi
  4482e0:	add    BYTE PTR [edx],al
  4482e2:	or     DWORD PTR [ebp-0x74c3eecb],eax
  4482e8:	(bad)
  4482eb:	shl    BYTE PTR [edi+0x674e7ccf],0x52
  4482f2:	mov    esi,0x74
	...
  448307:	add    BYTE PTR [esp+ecx*2+0x38],cl
  44830b:	xor    al,0x6
  44830d:	xchg   ebp,eax
  44830e:	jae    0x44831a
  448310:	retf   
  448311:	dec    esp
  448312:	inc    edx
  448313:	sub    bl,bh
  448315:	mov    esi,eax
  448317:	add    DWORD PTR [edi+0x4f4e7cc5],0x46
  44831e:	push   edx
  44831f:	sub    al,al
  448321:	adc    ebx,DWORD PTR ds:0xc789f951
  448327:	add    DWORD PTR [edi+0xf46c0c5],0xffffffdd
  44832e:	add    BYTE PTR [eax],al
  448330:	cmp    ecx,esi
  448332:	mov    bh,0x5e
  448334:	out    dx,al
  448335:	sahf   
  448336:	add    eax,DWORD PTR [eax]
  448338:	ret    
  448339:	mov    bh,al
  44833b:	jmp    FWORD PTR [ebx+ebp*1]
  44833e:	pop    esp
  44833f:	ret    0xdcf7
  448342:	(bad)  
  448343:	int3   
  448344:	fisttp WORD PTR [eax-0x77503335]
  44834a:	retf   
  44834b:	int3   
  44834c:	mov    edi,0x46cccb88
  448351:	inc    esi
  448352:	in     al,dx
  448353:	push   ecx
  448354:	inc    eax
  448355:	sbb    dl,BYTE PTR ds:0x5ed1958b
  44835b:	add    DWORD PTR [esi],edi
  44835d:	pop    ds
  44835e:	cli    
  44835f:	push   eax
  448360:	bound  eax,QWORD PTR [edi]
  448362:	push   esp
  448363:	stc    
  448364:	nop
  448365:	xor    eax,eax
  448367:	psraw  mm3,QWORD PTR [edx+0x2]
  44836b:	jae    0x44836d
	...
  44837d:	add    BYTE PTR [eax],al
  44837f:	add    BYTE PTR [ebp-0x49],bl
  448382:	jns    0x4483c6
  448384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448385:	cmp    esi,DWORD PTR [edi]
  448387:	or     bl,ch
  448389:	mov    cl,0xec
  44838b:	mov    edi,0xbd4715e9
  448390:	fst    DWORD PTR [eax-0x35e37af9]
  448396:	pop    eax
  448397:	dec    esi
  448398:	jge    0x44839c
  44839a:	jge    0x44835f
  44839c:	push   0x7
  44839e:	int3   
  44839f:	adc    al,0xa2
  4483a1:	dec    ebx
  4483a2:	lahf   
  4483a3:	pop    edx
  4483a4:	mov    eax,ds:0xb3eb7465
  4483a9:	arpl   WORD PTR [ecx+0x51],bx
  4483ac:	jmp    0x4e86faaa
  4483b1:	dec    ebx
  4483b2:	mov    bl,0x4f
  4483b4:	sbb    eax,0x3dffa775
  4483b9:	mov    dl,0x3
  4483bb:	call   0xf8f562bf
  4483c0:	fldenv [edi+eiz*4+0x7c]
  4483c4:	push   ds
  4483c5:	mov    dh,0x7e
  4483c7:	mov    edi,0x4a769e97
  4483cc:	push   ss
  4483cd:	add    DWORD PTR [ebp-0x5858f273],edx
  4483d3:	jl     0x4483f3
  4483d5:	mov    dh,0x88
  4483d7:	mov    edi,0x527ace77
  4483dc:	test   BYTE PTR [edx+0x42],0x8
  4483e0:	lea    esi,[ecx-0x5e]
  4483e3:	pop    es
	...
  4483f8:	pop    ecx
  4483f9:	arpl   WORD PTR [esi-0x79],ax
  4483fc:	jae    0x4483e9
  4483fe:	jnp    0x4483e2
  448400:	aaa    
  448401:	fldcw  WORD PTR [edx+0x36d1307b]
  448407:	dec    esi
  448408:	mov    ds:0x6203e9da,eax
  44840d:	fnstenv [edx]
  44840f:	jnp    0x4483d1
  448411:	and    eax,0x9499c0ab
  448416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448417:	rcr    BYTE PTR [ecx-0x7684eb6c],0x29
  44841e:	sbb    edx,DWORD PTR [esi+0x33]
  448421:	push   esp
  448422:	popa   
  448423:	and    DWORD PTR [eax],0x15b572c5
  448429:	mov    al,ds:0xc77dafa4
  44842e:	jmp    0x3f620e36
  448433:	scas   eax,DWORD PTR es:[edi]
  448434:	push   0x53
  448436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448437:	scas   eax,DWORD PTR es:[edi]
  448438:	out    0x9c,al
  44843a:	in     eax,0x7a
  44843c:	xor    al,0x5d
  44843e:	sub    DWORD PTR [ecx],edi
  448440:	imul   edx,DWORD PTR [esp+ebp*4-0x51],0xffffff9c
  448445:	mov    cl,0xd9
  448447:	scas   al,BYTE PTR es:[edi]
  448448:	dec    edx
  448449:	(bad)  
  44844a:	bound  eax,QWORD PTR [ecx+0x3e]
  44844d:	pop    ebx
  44844e:	sbb    eax,0x28a8df08
  448453:	mov    ds:0x8923d265,al
  448458:	in     eax,0x4c
  44845a:	fild   WORD PTR [eax+0x0]
	...
  448470:	mov    al,ds:0x739b99c5
  448475:	(bad)  
  448476:	fisubr WORD PTR [esi-0x7d29eb1a]
  44847c:	and    esi,ebx
  44847e:	test   al,0xa4
  448480:	ins    DWORD PTR es:[edi],dx
  448481:	shl    BYTE PTR [eax+0x64cb588],cl
  448487:	sbb    DWORD PTR [eax-0x1463e73b],0xcb600c7
  448491:	inc    esi
  448492:	mov    ebp,0x6d86eae5
  448497:	std    
  448498:	dec    eax
  448499:	sub    esi,ebp
  44849b:	jb     0x4484bf
  44849d:	rcl    DWORD PTR [edi-0x58],1
  4484a0:	add    ebp,edi
  4484a2:	add    edi,DWORD PTR [edx+0x22115e27]
  4484a8:	sub    DWORD PTR [ebx+0x2b28aa55],edi
  4484ae:	or     DWORD PTR [esi],edx
  4484b0:	sub    al,0x98
  4484b2:	add    ch,cl
  4484b4:	popa   
  4484b5:	fld    DWORD PTR [eax]
  4484b7:	ret    0xbb08
  4484ba:	push   ebp
  4484bb:	sub    al,ch
  4484bd:	xchg   edx,eax
  4484be:	les    edi,FWORD PTR [eax+edi*8+0x753d83b1]
  4484c5:	adc    eax,0xcde89e4f
  4484ca:	test   DWORD PTR [ebp+esi*4+0x2499f15d],esp
  4484d1:	sbb    esi,ebp
  4484d3:	jmp    0x4484d8
	...
  4484e8:	popa   
  4484e9:	fld    DWORD PTR [eax]
  4484eb:	adc    eax,edx
  4484ed:	shl    bh,0x1e
  4484f0:	enter  0x8b9e,0xac
  4484f4:	or     eax,0x5d25836f
  4484f9:	pop    esp
  4484fa:	fdiv   DWORD PTR [eax-0x76]
  4484fd:	sar    DWORD PTR [ebp+0x30],0x6a
  448501:	rol    DWORD PTR [ebp-0x16e9325c],cl
  448507:	push   ecx
  448508:	mov    eax,0xda1a6af7
  44850e:	mov    esi,DWORD PTR [ecx+0x70f51b8b]
  448514:	(bad)  
  448515:	jns    0x4484d9
  448517:	loope  0x448511
  448519:	sub    bh,cl
  44851b:	add    BYTE PTR [edx-0x3cf50084],bh
  448521:	pop    ebp
  448522:	mov    esi,0x5346c575
  448527:	cld    
  448528:	jns    0x44858f
  44852a:	jno    0x44852a
  44852c:	add    al,0x74
  44852e:	je     0x4484f4
  448530:	mov    edi,0x8e8bc040
  448535:	mov    DWORD PTR [esi+0x79b1f0f],ecx
  44853b:	or     DWORD PTR [esi+0x75],ecx
  44853e:	mov    dh,0xe0
  448540:	mov    eax,eax
  448542:	iret   
  448543:	test   edx,eax
  448545:	or     eax,0x893e8d0b
  44854a:	inc    edi
  44854b:	call   0x448550
	...
  448560:	iret   
  448561:	jae    0x44855b
  448563:	(bad)  
  448564:	clc    
  448565:	nop
  448566:	add    ecx,DWORD PTR [ebx-0x3bcbfbd]
  44856c:	bnd ret 
  44856e:	mov    ds:0x52c283c2,eax
  448573:	clc    
  448574:	cmp    bh,BYTE PTR [ebp+0xf]
  448577:	or     esi,DWORD PTR [ebx+0x5c]
  44857a:	mov    esi,0x4b443575
  44857f:	cld    
  448580:	or     ah,BYTE PTR [ecx+0x25]
  448583:	(bad)  
  448584:	fs jbe 0x4485fb
  448587:	les    ecx,FWORD PTR [edi+0x42]
  44858a:	ror    BYTE PTR [ebx+0x98e74fe],0xfe
  448591:	jo     0x448515
  448593:	leave  
  448594:	scas   al,BYTE PTR es:[edi]
  448595:	(bad)  
  448596:	mov    dl,BYTE PTR [ebp+0x17]
  448599:	sub    ebp,ecx
  44859b:	sbb    DWORD PTR ds:0xbf83f876,eax
  4485a1:	fdivr  QWORD PTR [ebp-0x38]
  4485a4:	nop
  4485a5:	sbb    esi,ebp
  4485a7:	cdq    
  4485a8:	bound  esi,QWORD PTR [ecx-0x5d]
  4485ab:	pop    es
  4485ac:	imul   edi,ebp,0xffffffa4
  4485af:	sbb    BYTE PTR [ebx],0x6
  4485b2:	test   DWORD PTR [edx-0x17ac7961],0xf8a48ddf
  4485bc:	loope  0x44863c
  4485be:	inc    DWORD PTR [edx+ebx*4+0xfc3f47]
	...
  4485d5:	add    BYTE PTR [eax],al
  4485d7:	add    bl,ch
  4485d9:	jno    0x44857e
  4485db:	packssdw mm6,mm5
  4485de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4485df:	sub    BYTE PTR [ebx+0x1f8af1ed],0x5e
  4485e6:	push   edx
  4485e7:	call   0xf8e9cbaf
  4485ec:	jmp    0x5f08066b
  4485f1:	cmp    eax,0x474372bb
  4485f6:	aas    
  4485f7:	cld    
  4485f8:	jmp    0x448641
  4485fa:	aam    0x84
  4485fc:	daa    
  4485fd:	mov    edx,0x1f69f1f0
  448602:	ret    
  448603:	fisttp QWORD PTR [edx-0x39]
  448606:	dec    esi
  448607:	clc    
  448608:	add    eax,0xeb59f449
  44860d:	popa   
  44860e:	inc    DWORD PTR [ebx+eiz*1-0x501d8799]
  448615:	out    dx,eax
  448616:	js     0x44865a
  448618:	pop    edx
  448619:	add    DWORD PTR [ebp-0x3f],0x62
  44861d:	mov    dl,0x3
  44861f:	add    BYTE PTR [edx-0x5],ah
  448622:	inc    ebx
  448623:	add    al,0x62
  448625:	mov    dl,0x3
  448627:	add    cl,bl
  448629:	lock dec eax
  44862b:	test   DWORD PTR [edi],eax
  44862d:	ins    DWORD PTR es:[edi],dx
  44862e:	ror    bl,0x26
  448631:	out    0xb7,al
  448633:	retf   
  448634:	push   ds
  448635:	fldcw  WORD PTR [ebp-0x5a6ae648]
  44863b:	mov    eax,0x0
	...
  448650:	sub    DWORD PTR [ebp+0x58097f34],edx
  448656:	mov    ch,0xe0
  448658:	sahf   
  448659:	push   eax
  44865a:	sbb    al,0xf8
  44865c:	xchg   ebx,eax
  44865d:	sub    al,0x73
  44865f:	sub    DWORD PTR [edx+0x8],ebp
  448662:	mov    eax,0x102dd41e
  448667:	push   edi
  448668:	xor    ebx,DWORD PTR [esp-0x163c3550]
  44866f:	add    esp,ebp
  448671:	dec    ebp
  448672:	xchg   edx,eax
  448673:	jge    0x4486a5
  448675:	mov    ebp,0xb0ba3160
  44867a:	mov    ch,0x41
  44867c:	(bad)  
  44867d:	fldcw  WORD PTR [edx-0x40]
  448680:	jno    0x4486e0
  448682:	test   eax,0x8245f30
  448687:	test   ebp,0xdf4f3c07
  44868d:	mov    ebp,0x2c2ec6b4
  448692:	inc    edx
  448693:	das    
  448694:	and    cl,bl
  448696:	jmp    0x259bfe19
  44869b:	cld    
  44869c:	fisub  WORD PTR [eax+0x513e4970]
  4486a2:	lods   al,BYTE PTR ds:[esi]
  4486a3:	mov    ds:0x15aec2e0,eax
  4486a8:	mov    esp,0x4aaf68d1
  4486ad:	ret    
  4486ae:	jmp    0x611655b6
  4486b3:	dec    ecx
	...
  4486c8:	cs push ecx
  4486ca:	test   BYTE PTR [ebx-0x6e351a],ch
  4486d0:	popa   
  4486d1:	fldl2t 
  4486d3:	sbb    eax,0xe901311d
  4486d8:	enter  0x7ce7,0x93
  4486dc:	dec    ebp
  4486dd:	fld    DWORD PTR [ebx+0x3d5c0dad]
  4486e3:	fucom  st(2)
  4486e5:	sub    BYTE PTR [ebx+ebx*4-0x14],0x9b
  4486ea:	mov    edx,0xd961e5
  4486ef:	add    ch,BYTE PTR [eax+0x61b57fd1]
  4486f5:	fld    DWORD PTR [eax]
  4486f7:	bound  esp,QWORD PTR [edx]
  4486f9:	int    0x72
  4486fb:	int3   
  4486fc:	mov    esp,0x6a0792
  448701:	ret    
  448702:	imul   ecx
  448704:	(bad)  
  448706:	nop
  448707:	bound  ebp,QWORD PTR [edx]
  448709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44870a:	mov    edx,DWORD PTR [esi+edi*8]
  44870d:	pop    ebp
  44870e:	dec    ebp
  44870f:	xchg   ebp,eax
  448710:	and    al,0xf
  448712:	icebp  
  448713:	jb     0x44875f
  448715:	mov    ecx,0x43d22c8b
  44871a:	ret    
  44871b:	jmp    0x6b3c49ad
  448720:	scas   al,BYTE PTR es:[edi]
  448721:	ret    0x2f3a
  448724:	aaa    
  448725:	iret   
  448726:	outs   dx,DWORD PTR ds:[esi]
  448727:	in     eax,dx
  448728:	test   BYTE PTR [edx+0xe16e],dl
	...
  44873e:	add    BYTE PTR [eax],al
  448740:	out    dx,al
  448741:	push   ss
  448742:	in     eax,0x70
  448744:	xor    cl,cl
  448746:	jmp    0x44872f
  448748:	fisub  WORD PTR [edi]
  44874a:	in     eax,0x60
  44874c:	call   0xf35d:0x1a48bc9
  448753:	rcl    BYTE PTR [edx+0x6c328bb5],cl
  448759:	ds icebp 
  44875b:	ret    0xecfb
  44875e:	mov    edi,0x12342164
  448763:	add    BYTE PTR [esi+edi*4-0x3df8068a],ah
  44876a:	idiv   edi
  44876c:	xchg   ebp,eax
  44876d:	xlat   BYTE PTR ds:[ebx]
  44876e:	lods   eax,DWORD PTR ds:[esi]
  44876f:	add    al,0x7
  448771:	(bad)  
  448772:	add    bl,ch
  448774:	stc    
  448775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448776:	(bad)  [ebx+0x4d7cc146]
  44877c:	add    esp,esp
  44877e:	add    BYTE PTR [edi+0x35],dl
  448781:	sub    eax,0x247e848
  448786:	add    DWORD PTR [eax],eax
  448788:	dec    eax
  448789:	cdq    
  44878a:	adc    eax,DWORD PTR [ebp-0x74980df5]
  448790:	jbe    0x448803
  448792:	jl     0x4487d9
  448794:	iret   
  448795:	sub    al,0x47
  448797:	push   eax
  448798:	xor    BYTE PTR [edx],al
  44879a:	or     DWORD PTR [ebx+0x507dd183],ecx
  4487a0:	(bad)  
  4487a1:	es cli 
  4487a3:	rol    BYTE PTR [eax],cl
	...
  4487b5:	add    BYTE PTR [eax],al
  4487b7:	add    BYTE PTR [eax],bh
  4487b9:	cdq    
  4487ba:	pop    es
  4487bb:	cmp    ecx,eax
  4487bd:	icebp  
  4487be:	push   ebx
  4487bf:	lea    ecx,[eax+0x7a]
  4487c2:	add    al,0x7d
  4487c5:	mov    cl,0x7c
  4487c7:	dec    ebp
  4487c8:	inc    DWORD PTR [ecx+eax*4]
  4487cb:	cmp    al,0x73
  4487cd:	and    eax,0xf10b1574
  4487d2:	or     BYTE PTR [ecx],al
  4487d4:	shl    dl,0xa
  4487d7:	sbb    BYTE PTR [edi+0x1604f5bd],0xda
  4487de:	cmp    BYTE PTR [ebx+eax*2-0x2a],0x2
  4487e3:	je     0x44882a
  4487e5:	inc    eax
  4487e6:	mov    eax,0x85e9e7f
  4487eb:	cdq    
  4487ec:	dec    eax
  4487ed:	fwait
  4487ee:	add    al,0xd7
  4487f0:	bound  edi,QWORD PTR [ecx]
  4487f2:	cmp    ah,ah
  4487f4:	pop    ecx
  4487f5:	hlt    
  4487f6:	jnp    0x44884a
  4487f8:	cmp    bh,BYTE PTR [esi]
  4487fa:	push   es
  4487fb:	test   DWORD PTR [edi+0x1242ebda],esp
  448801:	mov    eax,0xb00d257d
  448806:	test   al,0x70
  448808:	push   esi
  448809:	dec    ebx
  44880a:	das    
  44880b:	hlt    
  44880c:	cmp    ebp,ebp
  44880e:	cwde   
  44880f:	or     al,ah
  448811:	(bad)  
  448812:	test   al,0xf8
  448814:	in     eax,dx
  448815:	cmp    eax,DWORD PTR [edi-0x4]
  448818:	nop
  448819:	sub    al,0xfd
  44881b:	clc    
	...
  448830:	ja     0x44887c
  448832:	inc    esi
  448833:	inc    esp
  448834:	bound  edi,QWORD PTR [ebx]
  448836:	aaa    
  448837:	in     al,0xd9
  448839:	in     eax,0x94
  44883b:	jl     0x4487db
  44883d:	retf   0x5a48
  448840:	sbb    DWORD PTR [ebx-0x69],ecx
  448843:	pop    edx
  448844:	mov    eax,ds:0xe1eb75fd
  448849:	fmul   DWORD PTR ds:[ecx+ebx*8-0xb]
  44884e:	hlt    
  44884f:	push   ecx
  448850:	xor    eax,0x510c1f4b
  448855:	inc    eax
  448856:	push   ss
  448857:	(bad)  
  448858:	aaa    
  448859:	call   0x6de1d5af
  44885e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44885f:	clc    
  448860:	jge    0x448814
  448862:	add    eax,DWORD PTR [edi+0x727b29ef]
  448868:	xchg   BYTE PTR [ecx],bh
  44886a:	daa    
  44886b:	call   0x7ca6ea
  448870:	bound  esi,QWORD PTR [ebx]
  448872:	mov    eax,0x27f1df13
  448877:	add    eax,0xbfec50ad
  44887c:	xchg   ecx,eax
  44887d:	fnstcw WORD PTR [ebx]
  44887f:	dec    esp
  448880:	out    0xb5,eax
  448882:	mov    ah,0xc4
  448884:	xchg   edx,eax
  448885:	sub    al,0x2
  448887:	int3   
  448888:	mov    eax,ds:0x2184e9d9
  44888d:	shl    DWORD PTR [edx-0x35],1
  448890:	in     al,0x1d
  448892:	push   ss
  448893:	jp     0x448895
	...
  4488a5:	add    BYTE PTR [eax],al
  4488a7:	add    BYTE PTR [eax-0x6d2a9b47],dh
  4488ad:	jmp    0x44892a
  4488af:	sti    
  4488b0:	test   ah,al
  4488b2:	fisub  WORD PTR [edi-0x3a54003]
  4488b8:	fcomp  QWORD PTR ds:0xc1907dd6
  4488be:	bound  esi,QWORD PTR [edx+0x3e5d57d]
  4488c4:	bound  esi,QWORD PTR [ebx]
  4488c6:	jmp    0xd504eae4
  4488cb:	jg     0x448904
  4488cd:	adc    eax,0xcca182ea
  4488d2:	jo     0x448915
  4488d4:	mov    esi,0xee30a955
  4488d9:	or     esp,DWORD PTR [ecx-0x16269e96]
  4488df:	add    ebp,DWORD PTR [edi-0x71]
  4488e2:	out    dx,al
  4488e3:	jle    0x448879
  4488e5:	fsubr  st,st(1)
  4488e7:	add    ebx,edi
  4488e9:	adc    eax,0x46e3276
  4488ee:	call   0x6203:0xe9ad06f7
  4488f5:	mov    ah,0xfb
  4488f7:	js     0x448915
  4488f9:	fldenv [edx+0x49]
  4488fc:	mov    ss,WORD PTR [ebx-0x34]
  4488ff:	stos   DWORD PTR es:[edi],eax
  448900:	fisub  WORD PTR ds:0xc9a87b4e
  448906:	jb     0x448949
  448908:	dec    esi
  448909:	pop    ecx
  44890a:	add    BYTE PTR [ebx],ch
	...
  448920:	data16 aad 0x0
  448923:	jmp    0xe2451908
  448928:	imul   DWORD PTR [edi+eax*1]
  44892b:	xchg   esi,eax
  44892c:	xor    eax,0x299fd106
  448931:	pop    eax
  448932:	cmp    eax,0xf14ba6fd
  448937:	adc    bl,BYTE PTR [eax+ebx*2]
  44893a:	dec    ebp
  44893b:	or     eax,0x62f11397
  448940:	cmp    edi,DWORD PTR [ecx+0x55c1a48b]
  448946:	repz adc dh,BYTE PTR [ebx]
  448949:	lods   eax,DWORD PTR ds:[esi]
  44894a:	mov    esi,DWORD PTR [edx+0x2f14268]
  448950:	mov    ah,0xe5
  448952:	mov    edi,0x122d2164
  448957:	fidivr WORD PTR ds:[edi]
  44895a:	cli    
  44895b:	in     eax,0xd5
  44895d:	mov    esi,0x85cd3ff7
  448962:	cld    
  448963:	in     al,0x61
  448965:	fldpi  
  448967:	jmp    0x448901
  448969:	mov    al,ds:0x55ba248b
  44896e:	inc    ebp
  44896f:	loope  0x4489bc
  448971:	(bad)  [edi+0x37]
  448974:	push   cs
  448975:	push   cs
  448976:	jmp    0x11da9b8
  44897b:	push   0xffffffd5
  44897d:	jmp    0x148c:0x2e52a97d
	...
  448998:	mov    edx,0x10f53d55
  44899d:	sqrtps xmm6,XMMWORD PTR [edx+0x22]
  4489a1:	ror    DWORD PTR [ebx+0x505465a1],1
  4489a7:	in     eax,0xe
  4489a9:	rcl    dl,0x0
  4489ac:	enter  0x77e,0x3b
  4489b0:	mov    BYTE PTR [ecx],cl
  4489b2:	push   esp
  4489b3:	(bad)  
  4489b4:	clc    
  4489b5:	jo     0x448939
  4489b7:	shl    ch,0xad
  4489ba:	jl     0x448a09
  4489bc:	xchg   DWORD PTR [edx],eax
  4489be:	cmp    DWORD PTR [ebx+esi*1],0xbb15742a
  4489c5:	test   BYTE PTR [eax],0x1
  4489c8:	add    BYTE PTR [ecx],cl
  4489ca:	or     eax,DWORD PTR [eax+0x5f5c1e7]
  4489d0:	mov    ?,WORD PTR [edi-0x24fc8389]
  4489d6:	add    DWORD PTR [ebp+edi*8+0x58],esi
  4489da:	mov    bh,0x7f
  4489dc:	es pusha 
  4489de:	or     BYTE PTR [ecx-0x28fb83f8],bl
  4489e4:	cmp    dh,0xdc
  4489e7:	or     edi,DWORD PTR [ecx-0x6117acbf]
  4489ed:	sar    DWORD PTR [ebp+0x45],cl
  4489f0:	mov    ds:0xc4f042b1,eax
  4489f5:	push   edi
  4489f6:	sbb    eax,0x7073f4ff
  4489fb:	or     al,0x0
	...
  448a0d:	add    BYTE PTR [eax],al
  448a0f:	add    BYTE PTR [eax],dh
  448a11:	push   es
  448a12:	in     eax,dx
  448a13:	cmp    DWORD PTR [esi-0x487df79f],eax
  448a19:	je     0x448a13
  448a1b:	inc    DWORD PTR [eax-0xa]
  448a1e:	add    al,0x8b
  448a20:	jle    0x448a93
  448a22:	inc    ebp
  448a23:	push   0xffffff8b
  448a25:	je     0x448a39
  448a27:	mov    BYTE PTR [ecx+0x19],dh
  448a2a:	add    DWORD PTR [ebx+0x4d7c793e],ecx
  448a30:	adc    eax,DWORD PTR [eax-0x38]
  448a33:	cmp    DWORD PTR [edi],0xffffffbd
  448a36:	cld    
  448a37:	shl    BYTE PTR [edx-0x49],1
  448a3a:	ja     0x4489c6
  448a3c:	fs push cs
  448a3e:	sahf   
  448a3f:	test   bh,dl
  448a41:	retf   0x19
  448a44:	mov    bl,0x62
  448a46:	inc    esp
  448a47:	push   edx
  448a48:	cmp    dh,BYTE PTR [edi+0x2f620040]
  448a4e:	rcl    DWORD PTR [ebx],0xe7
  448a51:	repnz in eax,dx
  448a53:	sub    BYTE PTR [esi-0x20076224],0x6d
  448a5a:	lahf   
  448a5b:	dec    edi
  448a5c:	fpatan 
  448a5e:	jns    0x448a29
  448a60:	or     ch,bh
  448a62:	stos   BYTE PTR es:[edi],al
  448a63:	clc    
  448a64:	adc    eax,0xe703c130
  448a69:	repnz in eax,dx
  448a6b:	and    BYTE PTR [esi-0x10076354],0x5
  448a72:	test   eax,0x4e
	...
  448a87:	add    cl,ch
  448a89:	jae    0x448b03
  448a8b:	leave  
  448a8c:	cli    
  448a8d:	push   esi
  448a8e:	test   eax,0xb82fe5f8
  448a93:	add    esp,edi
  448a95:	jb     0x448a83
  448a97:	sbb    BYTE PTR [esi],0x7c
  448a9a:	pushf  
  448a9b:	clc    
  448a9c:	mov    ebp,ebp
  448a9e:	test   al,0x8
  448aa0:	ffreep st(7)
  448aa2:	popf   
  448aa3:	clc    
  448aa4:	mov    ebp,0x10dc4745
  448aa9:	inc    edi
  448aaa:	mov    ch,0x84
  448aac:	pushf  
  448aad:	pop    edx
  448aae:	or     ch,dh
  448ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448ab1:	dec    ebx
  448ab2:	add    bl,0x66
  448ab5:	sub    eax,0x8fdf08c4
  448aba:	popf   
  448abb:	clc    
  448abc:	lea    esi,ds:0x3732fc37
  448ac2:	mov    ch,0x84
  448ac4:	lods   al,BYTE PTR ds:[esi]
  448ac5:	fst    DWORD PTR [ecx+0x30]
  448ac8:	ins    BYTE PTR es:[edi],dx
  448ac9:	mov    esp,0xd5a18056
  448ace:	fs ret 
  448ad0:	pop    edx
  448ad1:	push   esi
  448ad2:	loop   0x448a79
  448ad4:	pop    edx
  448ad5:	mov    esp,0xda56266a
  448ada:	out    0x7e,al
  448adc:	dec    esp
  448add:	mov    esi,0x1ddea42e
  448ae2:	dec    edx
  448ae3:	js     0x448a8d
  448ae5:	popf   
  448ae6:	mov    ecx,0xb024a550
  448aeb:	fwait
	...
  448b00:	stos   DWORD PTR es:[edi],eax
  448b01:	pop    ss
  448b02:	jmp    0xdd7e:0xed95a703
  448b09:	retf   
  448b0a:	fs popf 
  448b0c:	sbb    BYTE PTR [esi+esi*8-0x64424f8b],bh
  448b13:	js     0x448b37
  448b15:	push   eax
  448b16:	pop    ss
  448b17:	fwait
  448b18:	xor    edi,DWORD PTR [edi-0x6a895c22]
  448b1e:	fisttp QWORD PTR [eax-0x2d9b3453]
  448b24:	call   0x58ca51e4
  448b29:	mov    ebp,0xd3604f19
  448b2e:	out    0x88,al
  448b30:	or     al,0xbe
  448b32:	scas   al,BYTE PTR es:[edi]
  448b33:	mov    ds:0x438615de,eax
  448b38:	sbb    BYTE PTR [eax-0x46],dl
  448b3b:	aas    
  448b3c:	fbstp  TBYTE PTR [ebp-0x736638cc]
  448b42:	xor    al,0x8f
  448b44:	mov    ecx,0x2f0c144f
  448b49:	and    esi,DWORD PTR [ebx+0x19]
  448b4c:	data16 and al,0x73
  448b4f:	retf   0xc1e6
  448b52:	add    dh,ah
  448b54:	cmc    
  448b55:	cwde   
  448b56:	adc    BYTE PTR [edx-0x5f],ah
  448b59:	jp     0x448b43
  448b5b:	stc    
  448b5c:	out    0x3e,al
  448b5e:	or     DWORD PTR [edx-0x3b],ebp
  448b61:	loopne 0x448aec
  448b63:	mov    bl,0x0
	...
  448b75:	add    BYTE PTR [eax],al
  448b77:	add    BYTE PTR [ebp+0x56],dl
  448b7a:	fcomp  st(6)
  448b7c:	int    0xa1
  448b7e:	std    
  448b7f:	imul   ecx,DWORD PTR [ecx],0x6c7047d2
  448b85:	jmp    0xd09e4015
  448b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448b8b:	outs   dx,DWORD PTR es:[esi]
  448b8d:	cmp    al,0xe0
  448b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448b90:	ficomp WORD PTR [ecx-0x269e194c]
  448b96:	rol    DWORD PTR [ecx],0x57
  448b99:	push   edx
  448b9a:	jp     0x448b91
  448b9c:	in     al,dx
  448b9d:	jnp    0x448b2a
  448b9f:	pop    es
  448ba0:	jno    0x448c0f
  448ba2:	clc    
  448ba3:	repnz in al,0x9a
  448ba6:	pop    ss
  448ba7:	pusha  
  448ba8:	pushf  
  448ba9:	ror    DWORD PTR [ebx-0xf92aed8],1
  448baf:	in     al,dx
  448bb0:	push   ds
  448bb1:	mov    dl,0xb
  448bb3:	ds daa 
  448bb5:	mov    dh,0xfd
  448bb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448bb8:	mov    bl,0xd7
  448bba:	or     ecx,0xffffffc0
  448bbd:	cmp    eax,0x925ce6e2
  448bc2:	push   esi
  448bc3:	jo     0x448bec
  448bc5:	aad    0x89
  448bc7:	jecxz  0x448b4d
  448bc9:	push   ds
  448bca:	les    ebx,FWORD PTR [ebp-0x4a3b7153]
  448bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448bd1:	mov    es,esp
  448bd3:	lods   eax,DWORD PTR ds:[esi]
  448bd4:	popf   
  448bd5:	mov    es,esp
  448bd7:	cmp    al,0xd5
  448bd9:	scas   al,BYTE PTR es:[edi]
  448bda:	cmp    DWORD PTR [ebp+0x0],0x0
	...
  448bee:	add    BYTE PTR [eax],al
  448bf0:	jne    0x448bfe
  448bf2:	dec    edi
  448bf3:	add    BYTE PTR [edx+ecx*2-0x19],dh
  448bf7:	xor    ecx,DWORD PTR [ebx+eiz*4]
  448bfa:	int3   
  448bfb:	cmp    eax,DWORD PTR [ecx+eiz*8]
  448bfe:	dec    BYTE PTR [esp+eax*2-0x5fa1a6c5]
  448c05:	dec    ebx
  448c06:	loop   0x448c65
  448c08:	cmp    BYTE PTR [ebx+0x41],cl
  448c0b:	pop    eax
  448c0c:	js     0x448c1e
  448c0e:	dec    ecx
  448c0f:	mov    edi,ebp
  448c11:	stc    
  448c12:	add    eax,0x514b0f4e
  448c17:	xor    ah,dh
  448c19:	add    al,0x51
  448c1b:	push   edx
  448c1c:	in     eax,0x6d
  448c1e:	jge    0x448c61
  448c20:	dec    ebx
  448c21:	(bad)  
  448c22:	jne    0x448be8
  448c24:	aaa    
  448c25:	push   ecx
  448c26:	mov    bh,0x74
  448c28:	inc    esi
  448c29:	push   ebx
  448c2a:	mov    esp,0x8aae60ff
  448c2f:	inc    ebp
  448c30:	ja     0x448c38
  448c32:	jle    0x448c7a
  448c34:	fisttp DWORD PTR [edx-0x37]
  448c37:	call   0x3ce8f7
  448c3c:	js     0x448bd0
  448c3e:	add    eax,DWORD PTR [ebp-0x7cfc1db5]
  448c44:	mov    al,0x77
  448c46:	fmul   QWORD PTR [esi]
  448c48:	jp     0x448c24
  448c4a:	in     al,dx
  448c4b:	push   eax
  448c4c:	inc    eax
  448c4d:	(bad)  
  448c4e:	div    BYTE PTR [ebx-0x3a]
  448c51:	sbb    al,0x8f
  448c53:	inc    DWORD PTR [eax]
	...
  448c65:	add    BYTE PTR [eax],al
  448c67:	add    BYTE PTR [edi+esi*2+0x4acb467c],bl
  448c6e:	dec    edx
  448c6f:	mov    WORD PTR [edx+0x4c],gs
  448c72:	leave  
  448c73:	call   0x3ce9ab
  448c78:	dec    eax
  448c79:	xchg   ecx,eax
  448c7a:	add    eax,DWORD PTR [ebp-0x7d0a1f05]
  448c80:	bound  esi,QWORD PTR [edi-0x5f]
  448c83:	test   BYTE PTR [eax+eiz*4],ah
  448c86:	xchg   BYTE PTR [edx-0xe],dl
  448c89:	fld    QWORD PTR [ebp-0x6af08537]
  448c8f:	clc    
  448c90:	test   DWORD PTR [esi],ebp
  448c92:	leave  
  448c93:	add    esp,edi
  448c95:	outs   dx,DWORD PTR ds:[esi]
  448c96:	sbb    ch,bh
  448c98:	loopne 0x448ca0
  448c9a:	mov    ds:0x2d44278a,al
  448c9f:	test   DWORD PTR [eax+eiz*8],ebx
  448ca2:	test   ecx,ecx
  448ca4:	dec    edx
  448ca5:	cmp    edx,DWORD PTR [ebp-0x36bbaa08]
  448cab:	add    esp,edi
  448cad:	add    bl,BYTE PTR [ecx]
  448caf:	std    
  448cb0:	loopne 0x448cad
  448cb2:	mov    eax,ds:0x86b2a484
  448cb7:	dec    edx
  448cb8:	fidiv  DWORD PTR [ecx-0x7c]
  448cbb:	leave  
  448cbc:	cmp    dl,BYTE PTR [ebx-0x65]
  448cbf:	clc    
  448cc0:	and    eax,0xe703c944
  448cc5:	add    bl,BYTE PTR [ecx]
  448cc7:	std    
  448cc8:	loopne 0x448cb5
  448cca:	mov    eax,ds:0x84
	...
  448cdf:	add    BYTE PTR [edx+esi*2+0x54e65286],ah
  448ce6:	test   cl,cl
  448ce8:	or     ch,bl
  448cea:	xchg   esp,eax
  448ceb:	clc    
  448cec:	cmc    
  448ced:	inc    ebx
  448cee:	rol    BYTE PTR [ebx],0xe7
  448cf1:	or     BYTE PTR [edi],0xfd
  448cf4:	loopne 0x448d71
  448cf6:	mov    al,ds:0x39462784
  448cfb:	push   eax
  448cfc:	out    0xd5,eax
  448cfe:	shl    bh,1
  448d00:	repz js 0x448ca3
  448d03:	clc    
  448d04:	(bad)  [eax]
  448d06:	int    0x8a
  448d08:	das    
  448d09:	bound  esi,QWORD PTR [edx]
  448d0b:	test   DWORD PTR [ecx+ebx*8-0x474a8b6f],esp
  448d12:	xchg   esi,eax
  448d13:	test   BYTE PTR [ecx+0x11c364e5],ah
  448d19:	fsubr  QWORD PTR [edx-0x34]
  448d1c:	call   0x760e:0xd8d42764
  448d23:	xor    eax,0x1c81a7df
  448d28:	jp     0x448ce2
  448d2a:	data16 test BYTE PTR [ecx-0xe3c9b23],ah
  448d31:	fld    TBYTE PTR [edx-0x34]
  448d34:	push   0x64
  448d36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448d37:	lahf   
  448d38:	call   0xa0ced362
  448d3d:	jge    0x448db1
  448d3f:	dec    ecx
  448d40:	xchg   edx,eax
  448d41:	or     dh,BYTE PTR [ebx-0x2f]
	...
  448d58:	fdiv   QWORD PTR ds:0xb197ab82
  448d5e:	mov    al,es:0x86e59db6
  448d64:	in     eax,dx
  448d65:	sub    al,0xeb
  448d67:	test   BYTE PTR [esi],bl
  448d69:	mov    eax,0x661e3662
  448d6e:	pushf  
  448d6f:	push   edi
  448d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448d71:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  448d73:	shl    esi,cl
  448d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448d76:	jo     0x448dae
  448d78:	mov    dh,0x61
  448d7a:	ins    BYTE PTR es:[edi],dx
  448d7b:	push   ebx
  448d7c:	add    eax,0xfa9fee92
  448d81:	pop    ebx
  448d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  448d83:	or     cl,ah
  448d85:	cwde   
  448d86:	dec    ebp
  448d87:	add    esp,DWORD PTR [edi-0x5c]
  448d8a:	into   
  448d8b:	mov    esp,DWORD PTR [ebx]
  448d8d:	jmp    0xa5edee6
  448d92:	jae    0x448d62
  448d94:	lds    ebx,FWORD PTR [ecx+0x5bca9fae]
  448d9a:	add    BYTE PTR [ebp+0x35c05c6a],ch
  448da0:	popa   
  448da1:	ss int3 
  448da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  448da4:	fstp   DWORD PTR [ecx]
  448da6:	xor    DWORD PTR [ebx+ebp*2+0x75],ebp
  448daa:	push   edx
  448dab:	bound  ebp,QWORD PTR [edi+edi*4-0x4f0a6957]
  448db2:	sub    DWORD PTR [ebp-0xa3fa3a6],0x60
  448db9:	ss int3 
  448dbb:	jbe    0x448dbd
	...
  448dcd:	add    BYTE PTR [eax],al
  448dcf:	add    bl,dl
  448dd1:	sbb    al,cl
  448dd3:	sbb    ecx,ebp
  448dd5:	sbb    DWORD PTR [ecx],esi
  448dd7:	jb     0x448d75
  448dd9:	mov    edi,0xb0c55691
  448dde:	sub    DWORD PTR ds:0xd5c05a6a,0x60
  448de5:	xor    al,0xcc
  448de7:	inc    esi
  448de8:	fstp   DWORD PTR [eax]
  448dea:	xor    DWORD PTR [ebx+esi*4-0x63],ebp
  448dee:	push   ecx
  448def:	bound  ebp,QWORD PTR [edi+edi*4]
  448df2:	jns    0x448e2a
  448df4:	aad    0xb1
  448df6:	sub    DWORD PTR ds:0x95c05a5a,0x60
  448dfd:	xor    al,0xcc
  448dff:	push   ss
  448e00:	jmp    0x5ba0bf1d
  448e05:	mov    eax,ds:0xbf1c7252
  448e0a:	shl    esi,0xe4
  448e0d:	mov    cl,0x83
  448e0f:	sub    eax,0x75c05a6a
  448e14:	pusha  
  448e15:	xor    al,0xcc
  448e17:	out    0xd2,al
  448e19:	sbb    esi,ebp
  448e1b:	cmp    ecx,ebx
  448e1d:	sbb    BYTE PTR [ecx],dh
  448e1f:	bound  ebp,QWORD PTR [edi-0xb295642]
  448e25:	mov    cl,0x83
  448e27:	add    bh,bh
  448e29:	fiadd  WORD PTR [ebx+0x75da8fc0]
  448e2f:	retf   
  448e30:	hlt    
  448e31:	arpl   WORD PTR [edx-0x4],cx
	...
  448e48:	inc    edx
  448e49:	stc    
  448e4a:	call   0x7f5614da
  448e4f:	dec    ebp
  448e50:	fbld   TBYTE PTR [ebp+0x7a]
  448e53:	cld    
  448e54:	push   cs
  448e55:	jae    0x448e5f
  448e57:	test   DWORD PTR [esi],esp
  448e59:	fiadd  DWORD PTR [eax]
  448e5b:	add    BYTE PTR [eax],dl
  448e5d:	and    DWORD PTR [ecx],edx
  448e5f:	test   DWORD PTR [ebx+0x468b37ce],edi
  448e65:	mov    cl,0x2c
  448e67:	stc    
  448e68:	js     0x448e4c
  448e6a:	mov    BYTE PTR [esp+edi*2],bl
  448e6d:	gs jp  0x448e6c
  448e70:	adc    bl,bl
  448e72:	jg     0x448ec1
  448e74:	mov    bh,0x61
  448e76:	clc    
  448e77:	je     0x448ee3
  448e79:	pusha  
  448e7a:	mov    esi,0x52634674
  448e7f:	cld    
  448e80:	shl    BYTE PTR [ecx+esi*1],1
  448e83:	push   edx
  448e84:	shr    ah,0x14
  448e87:	push   eax
  448e88:	rcr    BYTE PTR [edi*8-0x38a916b0],0x83
  448e90:	jg     0x448e3c
  448e92:	sub    al,0x45
  448e94:	ja     0x448e64
  448e96:	cmc    
  448e97:	add    BYTE PTR [eax+0x57],0x1c
  448e9b:	jge    0x448f04
  448e9d:	gs jp  0x448e9c
  448ea0:	jle    0x448f15
  448ea2:	jb     0x448f19
  448ea4:	mov    cl,bh
  448ea6:	sbb    BYTE PTR [eax],al
  448ea8:	outs   dx,DWORD PTR ds:[esi]
  448ea9:	pop    es
  448eaa:	jle    0x448ef1
	...
  448ec0:	ret    
  448ec1:	pop    edi
  448ec2:	jp     0x448ee0
  448ec4:	inc    eax
  448ec5:	pushf  
  448ec6:	add    ah,BYTE PTR fs:[edx+0x3b]
  448eca:	xchg   ebp,eax
  448ecb:	jl     0x448f24
  448ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448ece:	cld    
  448ecf:	jae    0x448e54
  448ed1:	sub    eax,DWORD PTR [eax-0x4]
  448ed4:	fld    DWORD PTR ds:0x96365cd
  448eda:	xor    edx,DWORD PTR [eax+0x13]
  448edd:	into   
  448ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448edf:	inc    ecx
  448ee0:	ins    DWORD PTR es:[edi],dx
  448ee1:	rol    BYTE PTR [ebx],0x7d
  448ee4:	sahf   
  448ee5:	stos   DWORD PTR es:[edi],eax
  448ee6:	jle    0x448ea7
  448ee8:	pop    ss
  448ee9:	lds    ecx,FWORD PTR [edx+0x15a9642]
  448eef:	jge    0x448e8a
  448ef1:	pop    esi
  448ef2:	cmp    DWORD PTR [edx-0x36],0xe1260dbf
  448ef9:	lods   al,BYTE PTR ds:[esi]
  448efa:	idiv   edi
  448efc:	out    dx,eax
  448efd:	fwait
  448efe:	mov    BYTE PTR [edx+0x4a],dl
  448f01:	sub    edi,DWORD PTR [edi]
  448f03:	xor    cl,bl
  448f05:	test   edi,esi
  448f07:	push   eax
  448f08:	mov    al,0x37
  448f0a:	das    
  448f0b:	add    al,0xb2
  448f0d:	jno    0x448ea3
  448f0f:	int    0xe1
  448f11:	push   es
  448f12:	in     eax,dx
  448f13:	sub    al,0x1b
  448f15:	fdivr  DWORD PTR [ebp-0x3c509b8e]
  448f1b:	xor    al,0x2a
  448f1d:	outs   dx,DWORD PTR ds:[esi]
  448f1e:	add    BYTE PTR [ebp+0x19],bh
  448f21:	cld    
  448f22:	mov    DWORD PTR [edx+0x0],eax
	...
  448f35:	add    BYTE PTR [eax],al
  448f37:	add    dl,ch
  448f39:	daa    
  448f3a:	lds    esp,FWORD PTR [ebp*1+0x9fc46c2]
  448f41:	mov    ebx,0xc1ca5288
  448f46:	cs cld 
  448f48:	fld    DWORD PTR [eax]
  448f4a:	adc    ah,0x6d
  448f4d:	inc    ebp
  448f4e:	int3   
  448f4f:	(bad)  
  448f50:	cmc    
  448f51:	ret    0xbf7e
  448f54:	pop    ebp
  448f55:	fldenv [ebp-0x1a]
  448f58:	in     al,0xb4
  448f5a:	jmp    0x60f9b049
  448f5f:	ds into 
  448f61:	sub    eax,0xb52088fd
  448f66:	pusha  
  448f67:	sub    ebp,eax
  448f69:	or     bl,BYTE PTR [edx]
  448f6b:	mov    DWORD PTR [ebx],esp
  448f6d:	jmp    0xa30ec58b
  448f72:	out    0x3,eax
  448f74:	bound  ebx,QWORD PTR [eax-0x5b]
  448f77:	mul    DWORD PTR [esi]
  448f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448f7a:	xchg   esi,eax
  448f7b:	xchg   ch,bl
  448f7d:	cs in  eax,0x8a
  448f80:	and    BYTE PTR [ebp-0x6b18fb7e],dh
  448f86:	xchg   edx,eax
  448f87:	add    BYTE PTR [edi],al
  448f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  448f8a:	jbe    0x448f0c
  448f8c:	clc    
  448f8d:	jo     0x448f78
  448f8f:	or     al,0xe0
  448f91:	mov    eax,0x606203e9
  448f96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  448f97:	rcr    eax,cl
  448f99:	es pop edx
  448f9b:	xor    al,BYTE PTR [eax]
	...
  448fad:	add    BYTE PTR [eax],al
  448faf:	add    bh,ah
  448fb1:	mov    ds:0xb4500841,al
  448fb6:	inc    esi
  448fb7:	and    BYTE PTR [ecx],0xdd
  448fba:	fs ret 
  448fbc:	rcl    edi,1
  448fbe:	jb     0x448f7c
  448fc0:	out    0x1a,al
  448fc2:	cli    
  448fc3:	mov    ss,WORD PTR [eax+0x1b889bb1]
  448fc9:	rcl    DWORD PTR ds:0x6ab42a96,0xc7
  448fd0:	popa   
  448fd1:	pop    esi
  448fd2:	sub    DWORD PTR [edi],edx
  448fd4:	adc    al,0x5f
  448fd6:	or     BYTE PTR es:[eax-0x77e91757],0xf2
  448fde:	je     0x44904f
  448fe0:	jo     0x448fb8
  448fe2:	add    BYTE PTR [edx+0x54],ch
  448fe5:	imul   eax,DWORD PTR [eax],0x3d5ef674
  448feb:	xchg   ebp,eax
  448fec:	cs pop esi
  448fee:	ds sbb ebp,ebp
  448ff1:	mov    eax,ds:0xb0f095e8
  448ff6:	imul   DWORD PTR [edx-0x5e]
  448ff9:	xlat   BYTE PTR ds:[ebx]
  448ffa:	jge    0x448fa5
  448ffc:	jb     0x448fb1
  448ffe:	mov    bl,BYTE PTR [esi+0x3c9d2e9f]
  449004:	mov    ebx,0x66817634
  449009:	sub    BYTE PTR [eax],dl
  44900b:	jb     0x44902d
  44900d:	jmp    0x2346bc97
  449012:	mov    WORD PTR [edi+0x0],fs
	...
  449028:	(bad)  
  449029:	dec    ebp
  44902a:	out    dx,al
  44902b:	mov    gs,ecx
  44902d:	xor    al,0xbd
  44902f:	in     eax,dx
  449030:	loop   0x4490a5
  449032:	ins    BYTE PTR es:[edi],dx
  449033:	jmp    0x449021
  449035:	nop
  449036:	cmp    esp,esi
  449038:	aad    0x26
  44903a:	push   ss
  44903b:	push   0x4b
  44903d:	rol    DWORD PTR [eax],0xdc
  449040:	jo     0x44909e
  449042:	ds sbb ebx,ebp
  449045:	pop    es
  449046:	fnstsw WORD PTR [ebx-0x2e175f1c]
  44904c:	repz mov cl,0xf7
  44904f:	push   0x22
  449051:	xlat   BYTE PTR ds:[ebx]
  449052:	jge    0x44907d
  449054:	push   edx
  449055:	mov    bl,0x8a
  449057:	push   ss
  449058:	pop    ss
  449059:	xor    cl,al
  44905b:	mov    ah,0x3b
  44905d:	pusha  
  44905e:	cmp    eax,0x3e5c6e15
  449063:	fldlg2 
  449065:	mov    al,ds:0xb1f325e8
  44906a:	imul   DWORD PTR [edx+0x22]
  44906d:	xlat   BYTE PTR ds:[ebx]
  44906e:	jmp    0x449070
  449070:	es fs dec edx
  449073:	clc    
  449074:	jo     0x44905d
  449076:	xor    BYTE PTR [edx+0xa],ch
  449079:	add    eax,0xe8c95101
  44907e:	call   0x121cf68
  449083:	add    DWORD PTR [edi],0xffffffc3
  449086:	add    al,0x37
  449089:	fstp   TBYTE PTR [ebp-0x21]
	...
  4490a0:	inc    eax
  4490a1:	sbb    ebp,ebp
  4490a3:	mov    ecx,DWORD PTR [esi-0x4cbb75ab]
  4490a9:	mov    dl,0x7e
  4490ab:	inc    ebp
  4490ac:	not    DWORD PTR [ebx+0x5c8cb842]
  4490b2:	sbb    bh,bh
  4490b4:	cld    
  4490b5:	dec    edi
  4490b6:	sbb    bl,0x8c
  4490b9:	pop    ecx
  4490ba:	fwait
  4490bb:	add    BYTE PTR [ebx-0x64828a2a],cl
  4490c1:	(bad)  
  4490c2:	ins    BYTE PTR es:[edi],dx
  4490c3:	jno    0x4490d5
  4490c5:	shl    DWORD PTR [ebx+ecx*4-0x7d346ba],1
  4490cc:	js     0x4490a8
  4490ce:	jge    0x449125
  4490d0:	fwait
  4490d1:	cwde   
  4490d2:	add    edx,DWORD PTR [edi]
  4490d4:	jnp    0x44913b
  4490d6:	jp     0x4490cc
  4490d8:	mov    al,0xdb
  4490da:	jg     0x449121
  4490dc:	mov    bh,0x5b
  4490de:	jp     0x4490dc
  4490e0:	cmp    esp,edx
  4490e2:	adc    al,0x8b
  4490e4:	test   BYTE PTR [ecx-0x72],0x6a
  4490e8:	dec    edx
  4490e9:	in     al,dx
  4490ea:	push   eax
  4490eb:	mov    eax,DWORD PTR ds:0xa3564786
  4490f1:	push   edi
  4490f2:	cmp    al,BYTE PTR [eax]
  4490f4:	cmp    ebx,DWORD PTR [ebx-0x3d]
  4490f7:	adc    al,0x86
  4490f9:	xchg   esi,eax
  4490fa:	jae    0x4490ff
  4490fc:	bound  edi,QWORD PTR [edi]
  4490fe:	xbegin 0x2a4c73eb
	...
  449118:	loope  0x449176
  44911a:	xlat   BYTE PTR ds:[ebx]
  44911b:	push   DWORD PTR [edi-0x78]
  44911e:	xchg   BYTE PTR [edx-0x12],bh
  449121:	ss dec ecx
  449123:	and    cl,bl
  449125:	dec    ecx
  449126:	rol    DWORD PTR [esp+ebx*4-0x16b0ce24],cl
  44912d:	add    DWORD PTR [ecx],eax
  44912f:	dec    esi
  449130:	xor    cl,BYTE PTR [ebx-0x5059834d]
  449136:	aam    0xc0
  449138:	dec    esi
  449139:	lods   al,BYTE PTR ds:[esi]
  44913a:	cmp    BYTE PTR [ebp-0x57],bh
  44913d:	jb     0x449179
  44913f:	test   DWORD PTR [ecx+0xfe285c6],esp
  449145:	jg     0x4491be
  449147:	aam    0x2f
  449149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44914a:	jl     0x4491c6
  44914c:	push   0xffffffc0
  44914e:	pop    es
  44914f:	or     ebp,ecx
  449151:	int3   
  449152:	add    al,0xb7
  449154:	je     0x449116
  449156:	add    eax,DWORD PTR [eax]
  449158:	xlat   BYTE PTR ds:[ebx]
  449159:	mov    ah,0x7f
  44915b:	in     al,dx
  44915c:	(bad)  
  44915d:	cmp    BYTE PTR es:[edi+ebx*8],cl
  449161:	jg     0x449173
  449163:	add    eax,0x84a0ccd9
  449168:	pop    ss
  449169:	or     BYTE PTR [edi+ecx*1+0x58f76aeb],cl
  449170:	mov    ah,0x3b
  449172:	mov    esi,0x3015d954
  449177:	mov    ebp,0xcbc8e716
	...
  449190:	cs dec eax
  449193:	retf   
  449194:	es dec esi
  449196:	test   bl,ch
  449198:	fnstenv [ebp-0x29]
  44919b:	test   BYTE PTR [edi-0x4f733627],dl
  4491a1:	int    0xb9
  4491a3:	mov    WORD PTR [eax-0x6773472f],fs
  4491a9:	lds    edi,FWORD PTR [ebx-0x66364f74]
  4491af:	mov    WORD PTR [eax+0x7c3598dd],fs
  4491b5:	fstp   DWORD PTR [ecx+0x1e1a08c]
  4491bb:	loope  0x4491ab
  4491bd:	mov    al,0xde
  4491bf:	test   BYTE PTR [ecx+0x75c634f9],ah
  4491c5:	fnstenv [ecx*4+0xe6307b9]
  4491cc:	pop    edx
  4491cd:	push   esi
  4491ce:	mov    bh,0xe
  4491d0:	push   0x5e
  4491d2:	pop    ds
  4491d3:	jle    0x4491f0
  4491d5:	push   cs
  4491d6:	lods   al,BYTE PTR ds:[esi]
  4491d7:	jmp    FWORD PTR [ebp-0x20e3e09d]
  4491dd:	pop    ds
  4491de:	push   ds
  4491df:	bound  eax,QWORD PTR cs:[ebx-0x16]
  4491e3:	sub    eax,0x2dea4362
  4491e8:	bound  esp,QWORD PTR [edx+0x1f]
  4491eb:	cmp    al,0xfc
  4491ed:	fsubr  DWORD PTR [ecx+esi*2-0x6b]
  4491f1:	fldl2t 
  4491f3:	add    eax,DWORD PTR [eax]
	...
  449205:	add    BYTE PTR [eax],al
  449207:	add    BYTE PTR [esi+ebx*2],ah
  44920a:	sub    DWORD PTR [di-0x50],0xffffffe9
  44920f:	xor    ebx,edi
  449211:	xchg   edi,eax
  449212:	jo     0x44925d
  449214:	mov    esi,0x62339f98
  449219:	fldl2t 
  44921b:	add    esp,DWORD PTR [ebx]
  44921d:	pop    ss
  44921e:	scas   al,BYTE PTR es:[edi]
  44921f:	add    esp,DWORD PTR [edx-0x27]
  449222:	jmp    0x36f7c1d2
  449227:	cwde   
  449228:	fisub  WORD PTR [eax+0x2d21fa00]
  44922e:	mov    ebp,0x797a509
  449233:	jge    0x449256
  449235:	inc    edi
  449236:	mov    DWORD PTR [edi-0x72b1a7bf],esp
  44923c:	fisubr WORD PTR [esi+0x56]
  44923f:	lods   al,BYTE PTR ds:[esi]
  449240:	pop    ds
  449241:	fadd   QWORD PTR [eax]
  449243:	xor    eax,0x2dc4a425
  449248:	sbb    eax,0xde9cc4a4
  44924d:	ret    
  44924e:	dec    esi
  44924f:	bound  edx,QWORD PTR [ecx+eiz*8+0x7d]
  449253:	fbstp  TBYTE PTR [ebx-0x1f]
  449256:	test   DWORD PTR [edi],esp
  449258:	pop    eax
  449259:	adc    dl,BYTE PTR [esi-0x55]
  44925c:	(bad)  
  44925d:	(bad)  [ebx+0x3ed67e27]
  449263:	dec    ebp
  449264:	push   ebx
  449265:	xlat   BYTE PTR ds:[ebx]
  449266:	mov    eax,0xf7b0cd5d
  44926b:	pop    ss
	...
  449280:	imul   ebp,DWORD PTR [edi-0x4],0xffffffe8
  449284:	fmul   DWORD PTR [ecx]
  449286:	cmp    DWORD PTR [esi],edi
  449288:	jmp    0xf8acc7be
  44928d:	mov    al,0xf7
  44928f:	jmp    0x6441bef5
  449294:	in     eax,dx
  449295:	sub    ebx,DWORD PTR [eax]
  449297:	jb     0x4492d5
  449299:	or     DWORD PTR [edi+ebp*1-0x173ed1ce],ecx
  4492a0:	loopne 0x449240
  4492a2:	add    BYTE PTR [edx+0x22082aa3],dh
  4492a8:	and    eax,0xb9be0c2c
  4492ad:	push   edx
  4492ae:	not    DWORD PTR [esi-0xb]
  4492b1:	adc    BYTE PTR [esi+0x2b],dl
  4492b4:	(bad)  
  4492b5:	(bad)  [ebx-0x7fa4b00]
  4492bb:	dec    DWORD PTR [ebx-0x24]
  4492be:	mov    ch,BYTE PTR [ebx+edi*1-0x7274ff25]
  4492c5:	cmp    eax,0x10bfff8
  4492ca:	add    DWORD PTR [edx+0xb],ebp
  4492cd:	bound  eax,QWORD PTR [ebx+0x11]
  4492d0:	and    eax,0xe15842d6
  4492d5:	ficomp DWORD PTR [esi+0x0]
  4492d8:	mov    bh,bh
  4492da:	push   esp
  4492db:	add    BYTE PTR [eax-0x1efeaf11],cl
  4492e1:	ficomp DWORD PTR [esi+0x0]
	...
  4492f8:	js     0x4492f9
  4492fa:	dec    esp
  4492fb:	add    BYTE PTR [esi+0x54],dl
  4492fe:	iret   
  4492ff:	add    bl,cl
  449301:	fiadd  DWORD PTR [edi-0x73]
  449304:	dec    ebp
  449305:	pop    edx
  449306:	idiv   edi
  449308:	mov    ebx,0x93c67de8
  44930d:	stos   DWORD PTR es:[edi],eax
  44930e:	in     eax,dx
  44930f:	push   esp
  449311:	arpl   WORD PTR [edi-0x3ca404cd],di
  449317:	and    BYTE PTR [esi],bh
  449319:	popf   
  44931a:	or     BYTE PTR [ebx+ecx*8+0x3d898fe7],dl
  449321:	cmc    
  449322:	jg     0x44937a
  449324:	pop    edi
  449325:	bound  esi,QWORD PTR [esi+0x39b365e]
  44932b:	add    BYTE PTR [edi-0x3833346a],dh
  449331:	xchg   esi,eax
  449332:	retf   
  449333:	int3   
  449334:	dec    esi
  449335:	(bad)  
  449336:	jmp    0x4492c3
  449338:	fnstsw WORD PTR ds:[ebp+0x4d]
  44933c:	pop    ebx
  44933d:	pop    ebx
  44933e:	jmp    0x449348
  449340:	or     al,0x8b
  449342:	clc    
  449343:	mov    DWORD PTR [edx-0x38],esp
  449346:	mov    eax,DWORD PTR [edx+0x56]
  449349:	cmp    esp,ebx
  44934b:	xchg   BYTE PTR [edx-0x16c97b44],bh
  449351:	inc    ebp
  449352:	dec    ebx
  449353:	std    
  449354:	xlat   BYTE PTR ds:[ebx]
  449355:	mov    DWORD PTR [ebx],0x363b6200
  44935b:	dec    esp
	...
  449370:	jno    0x4493b0
  449372:	mov    al,0xff
  449374:	adc    eax,0x52498ac0
  449379:	outs   dx,DWORD PTR ds:[esi]
  44937a:	xor    ecx,DWORD PTR [esi-0x4d]
  44937d:	stos   WORD PTR es:[edi],ax
  44937f:	jno    0x4493ba
  449381:	rol    BYTE PTR [ebx],0x7d
  449384:	push   ds
  449385:	test   BYTE PTR [eax-0x7d478941],al
  44938b:	(bad)  
  44938c:	in     eax,0x5e
  44938e:	mov    ah,dl
  449390:	aas    
  449391:	or     DWORD PTR [ecx+0x283d9241],0xfffffffc
  449398:	xor    BYTE PTR [ebx],bh
  44939a:	mov    edi,0x8d937be7
  44939f:	clc    
  4493a0:	loope  0x44941d
  4493a2:	add    BYTE PTR [ebx+0x7cf7e3a2],al
  4493a8:	popf   
  4493a9:	test   ax,0xe309
  4493ad:	cld    
  4493ae:	cwde   
  4493af:	dec    edi
  4493b0:	sub    ebx,eax
  4493b2:	div    DWORD PTR [ebx+0x5f]
  4493b5:	(bad)  
  4493b7:	clc    
  4493b8:	lea    eax,[esi+0x7f]
  4493bb:	inc    edx
  4493bc:	xchg   bh,ch
  4493be:	mov    DWORD PTR [ecx+0x32],eax
  4493c1:	sub    edi,DWORD PTR [edi-0x71ce3c19]
  4493c7:	clc    
  4493c8:	loope  0x449445
  4493ca:	add    BYTE PTR [ebx+0x7d00a3a2],al
  4493d0:	sub    eax,0x895eda
	...
  4493e5:	add    BYTE PTR [eax],al
  4493e7:	add    BYTE PTR [ebx+0x4a4764e9],ah
  4493ed:	or     esp,DWORD PTR [ebx-0x3a]
  4493f0:	cmp    eax,0x3a955b63
  4493f5:	pop    ecx
  4493f6:	and    eax,0xad99e100
  4493fb:	add    BYTE PTR [edi-0x5c76d164],ch
  449401:	jmp    0x862c35a
  449406:	jae    0x4493ce
  449408:	std    
  449409:	sub    bl,BYTE PTR [edx*4+0x25590a]
  449410:	loope  0x4493ab
  449412:	(bad)  
  449413:	(bad)  
  449414:	jle    0x4493b2
  449416:	(bad)  
  449417:	test   al,0x57
  449419:	push   esi
  44941a:	test   BYTE PTR [esi],0x48
  44941d:	pusha  
  44941e:	addr16 mov ch,ah
  449421:	lods   al,BYTE PTR ds:[esi]
  449422:	jmp    0x54f1b501
  449427:	push   es
  449428:	loope  0x4493c3
  44942a:	dec    ebp
  44942b:	add    eax,0xfddb14f
  449430:	pop    esp
  449431:	pop    eax
  449432:	ror    DWORD PTR [ebx],1
  449434:	ss (bad) 
  449436:	jle    0x4494b2
  449438:	mov    edx,0x2086b6ac
  44943d:	lods   eax,DWORD PTR ds:[esi]
  44943e:	sbb    DWORD PTR [ecx-0x3a9d16dd],ecx
  449444:	test   DWORD PTR [esi-0x65],eax
  449447:	xchg   esp,eax
  449448:	call   0x0:0xff9d58
	...
  44945f:	add    al,ah
  449461:	cdq    
  449462:	adc    eax,0x869c0701
  449467:	mov    BYTE PTR [ebx],ah
  449469:	jmp    0x8badada
  44946e:	sbb    DWORD PTR [ecx-0xaff3e65],ecx
  449474:	shl    DWORD PTR [ecx-0x4e6b9c09],cl
  44947a:	sub    DWORD PTR ds:0xd5c05755,0x4c
  449481:	sub    eax,0xc2fa56c8
  449486:	jge    0x4494d6
  449488:	ins    BYTE PTR es:[edi],dx
  449489:	enter  0x9c8b,0xcd
  44948d:	in     al,0x8e
  44948f:	push   ebp
  449490:	popa   
  449491:	fld    DWORD PTR [eax]
  449493:	mov    ebp,0xe1c3a75b
  449498:	ins    BYTE PTR es:[edi],dx
  449499:	fdiv   DWORD PTR [edi-0x84f1180]
  44949f:	ins    BYTE PTR es:[edi],dx
  4494a0:	dec    esp
  4494a1:	lods   eax,DWORD PTR ds:[esi]
  4494a2:	push   eax
  4494a3:	bound  eax,QWORD PTR [edi-0x17]
  4494a6:	mov    ebx,DWORD PTR [edi]
  4494a8:	leave  
  4494a9:	sbb    ebx,esi
  4494ab:	push   es
  4494ac:	into   
  4494ad:	sub    al,0xbd
  4494af:	in     eax,0x6c
  4494b1:	ins    BYTE PTR es:[edi],dx
  4494b2:	ins    BYTE PTR es:[edi],dx
  4494b3:	in     al,dx
  4494b4:	loop   0x449456
  4494b6:	test   DWORD PTR [edx],0xe54554c9
  4494bc:	frstor [edx+0x56c655f7]
  4494c2:	neg    DWORD PTR [eax+eax*1+0x0]
	...
  4494d6:	add    BYTE PTR [eax],al
  4494d8:	sar    ah,cl
  4494da:	rcl    BYTE PTR [edx],0xe0
  4494dd:	inc    ebx
  4494de:	add    cl,ch
  4494e0:	popa   
  4494e1:	sub    BYTE PTR [ecx],cl
  4494e3:	add    bl,al
  4494e5:	dec    edi
  4494e6:	add    cl,ch
  4494e8:	popa   
  4494e9:	and    eax,0xd3a5b70b
  4494ee:	ins    DWORD PTR es:[edi],dx
  4494ef:	in     al,dx
  4494f0:	xor    BYTE PTR [ebx-0x9],al
  4494f3:	sahf   
  4494f4:	icebp  
  4494f5:	push   esp
  4494f6:	ds (bad) 
  4494f9:	push   ds
  4494fa:	cmc    
  4494fb:	cmp    ch,bh
  4494fd:	mov    eax,ds:0x458700e8
  449502:	clc    
  449503:	(bad)  
  449504:	clc    
  449505:	mov    al,ds:0xd0bb8503
  44950a:	add    eax,DWORD PTR [ebx+0x28dc46fc]
  449510:	rcr    BYTE PTR [eax],1
  449512:	cmc    
  449513:	add    edx,0x46
  449516:	jae    0x449538
  449518:	mov    dh,0x46
  44951a:	jb     0x449538
  44951c:	pop    eax
  44951d:	xchg   ebp,eax
  44951e:	sub    al,0x8e
  449520:	jmp    0x4494f7
  449522:	add    BYTE PTR [eax],al
  449524:	imul   BYTE PTR [esi-0x2a2879d4]
  44952a:	add    BYTE PTR [eax],al
  44952c:	xlat   BYTE PTR ds:[ebx]
  44952d:	lods   al,BYTE PTR ds:[esi]
  44952e:	icebp  
  44952f:	ret    
  449530:	adc    edx,edx
  449532:	add    edi,DWORD PTR [edi-0x7b91e]
  449538:	sbb    BYTE PTR [edi],0x31
  44953b:	lea    eax,[eax]
	...
  44954d:	add    BYTE PTR [eax],al
  44954f:	add    BYTE PTR [esi+0x2d8b455e],dh
  449555:	dec    ebp
  449556:	push   ebp
  449557:	icebp  
  449558:	in     al,dx
  449559:	inc    edi
  44955a:	jl     0x4495b9
  44955c:	repz push ebx
  44955e:	ret    
  44955f:	add    al,0x46
  449561:	xchg   ebp,eax
  449562:	jae    0x449569
  449564:	dec    eax
  449565:	xchg   edi,eax
  449566:	clc    
  449567:	jmp    0x449533
  449569:	popa   
  44956a:	clc    
  44956b:	jne    0x44952b
  44956d:	fwait
  44956e:	cdq    
  44956f:	test   al,0xcb
  449571:	(bad)  
  449572:	add    BYTE PTR [esi+eax*8+0x7],dh
  449576:	(bad)  
  449577:	(bad)  
  449578:	in     al,dx
  449579:	inc    edi
  44957a:	jl     0x4495c1
  44957c:	ret    
  44957d:	aad    0x18
  44957f:	lea    eax,[esi+0x5d]
  449582:	inc    edi
  449583:	mov    eax,DWORD PTR [ebp-0x7b]
  449586:	jl     0x449556
  449588:	repz mov bh,0xe6
  44958b:	jmp    DWORD PTR [edx+0x43]
  44958e:	jle    0x449553
  449590:	xor    ax,0x73c4
  449594:	popa   
  449595:	aas    
  449596:	ret    
  449597:	clc    
  449598:	fprem1 
  44959a:	add    BYTE PTR [ebp-0x39316ff1],al
  4495a0:	popa   
  4495a1:	sbb    ch,BYTE PTR [edi+edi*8-0x76113fab]
  4495a8:	rol    BYTE PTR cs:[ebx],0x0
  4495ac:	loope  0x4495ac
  4495ae:	icebp  
  4495af:	jl     0x4495c4
  4495b1:	shl    BYTE PTR [edi+edx*1+0x0],0x0
	...
  4495c6:	add    BYTE PTR [eax],al
  4495c8:	jmp    0x449631
  4495ca:	inc    DWORD PTR [edi+eiz*4+0x5a4a7718]
  4495d1:	cmp    esi,edi
  4495d3:	(bad)  
  4495d4:	bound  eax,QWORD PTR [edi+0x76]
  4495d7:	shl    BYTE PTR [ebp+0x215aa927],0xfc
  4495de:	mov    bh,0xcb
  4495e0:	push   ss
  4495e1:	ins    DWORD PTR es:[edi],dx
  4495e2:	jbe    0x4495cf
  4495e4:	loope  0x449591
  4495e6:	out    dx,al
  4495e7:	test   BYTE PTR [edi-0x24323158],bl
  4495ed:	inc    esp
  4495ee:	xchg   DWORD PTR [eax+eiz*1],esi
  4495f1:	sub    eax,0x6208af5
  4495f6:	ja     0x4495da
  4495f8:	aaa    
  4495f9:	jle    0x4495fb
  4495fb:	add    BYTE PTR [edi+eiz*1],dh
  4495fe:	dec    ebp
  4495ff:	fbld   TBYTE PTR [edx-0x40]
  449602:	add    esi,DWORD PTR ds:0xb80104b0
  449608:	fcom   DWORD PTR [edx+0x270cf891]
  44960e:	mov    al,ds:0x3b3a05a
  449613:	aaa    
  449614:	je     0x4495fb
  449616:	add    BYTE PTR [eax-0x6e61270a],bh
  44961c:	mov    cl,BYTE PTR [edx]
  44961e:	jae    0x4495c7
  449620:	sub    BYTE PTR [edi+0x5e2f03dd],dl
  449626:	and    al,0xf4
  449628:	cs (bad) 
  44962a:	hlt    
  44962b:	std    
	...
  449640:	push   ss
  449641:	out    0xa9,al
  449643:	xor    bl,bh
  449645:	mov    bl,0xc
  449647:	(bad)  
  449648:	imul   ebx,ecx,0x52664762
  44964e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44964f:	repz in al,0x7
  449652:	out    dx,al
  449653:	int3   
  449654:	repz pop ebp
  449656:	jmp    0xf36ff85e
  44965b:	sbb    BYTE PTR [edx-0x1c],ch
  44965e:	pop    edi
  44965f:	test   BYTE PTR ds:0x5519e9a9,ch
  449665:	loop   0x4496be
  449667:	mov    esp,0x16e9a91d
  44966c:	pop    ebp
  44966d:	push   esp
  44966e:	outs   dx,DWORD PTR ds:[esi]
  44966f:	test   BYTE PTR ds:0x9b7ae9a9,cl
  449675:	int    0xb6
  449677:	jl     0x4496f4
  449679:	rcr    edx,1
  44967b:	ret    
  44967c:	ficomp WORD PTR [eax-0x3395be16]
  449682:	lahf   
  449683:	comiss xmm1,DWORD PTR [ecx-0x22ad0685]
  44968a:	mov    dl,0xaa
  44968c:	push   ebx
  44968d:	leave  
  44968e:	and    BYTE PTR [edx-0x5b],bh
  449691:	fldl2t 
  449693:	add    ecx,DWORD PTR [esi-0x2f]
  449696:	bound  edi,QWORD PTR [ecx]
  449698:	cmp    bl,ah
  44969a:	scas   al,BYTE PTR es:[edi]
  44969b:	jp     0x4496b0
  44969d:	int    0x6a
  44969f:	adc    DWORD PTR [esi-0x27],edx
  4496a2:	out    0x89,al
	...
  4496b8:	cmc    
  4496b9:	fiadd  DWORD PTR [eax]
  4496bb:	jmp    0xe1bbbd21
  4496c0:	popa   
  4496c1:	sar    BYTE PTR [ebp-0x7e],cl
  4496c4:	popa   
  4496c5:	fld    DWORD PTR [eax]
  4496c7:	jb     0x4496e4
  4496c9:	and    eax,0x5c6e278c
  4496ce:	rcl    BYTE PTR [esi+esi*2],0x5b
  4496d2:	leave  
  4496d3:	mul    ch
  4496d5:	pop    edi
  4496d6:	add    cl,ch
  4496d8:	popa   
  4496d9:	bound  eax,QWORD PTR [eax]
  4496db:	sub    DWORD PTR [esi-0x27],esp
  4496de:	jge    0x449689
  4496e0:	jp     0x4496ba
  4496e2:	jb     0x4496d1
  4496e4:	push   ds
  4496e5:	xchg   ecx,eax
  4496e6:	jae    0x4496da
  4496e8:	(bad)  
  4496e9:	and    bh,BYTE PTR [ecx+0x6c]
  4496ec:	rcl    al,cl
  4496ee:	jl     0x449757
  4496f0:	pusha  
  4496f1:	fld    DWORD PTR [eax]
  4496f3:	jb     0x4496d0
  4496f5:	addr16 add cl,ch
  4496f8:	popa   
  4496f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4496fa:	cmp    eax,0xbc529ea9
  4496ff:	jmp    0xb7587065
  449704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449705:	pop    esi
  449706:	mov    ss,WORD PTR [ebp+0x61]
  449709:	fld    DWORD PTR [eax]
  44970b:	and    DWORD PTR [ecx+0x18],0x51
  44970f:	mov    ebx,0xe9885a74
  449714:	popa   
  449715:	fst    DWORD PTR [eax+0x11]
  449718:	inc    edx
  449719:	loope  0x44971b
  44971b:	jmp    0x449720
	...
  449730:	out    0x9b,al
  449732:	or     al,0x64
  449734:	mov    eax,ds:0x67447dd0
  449739:	fld    DWORD PTR [eax]
  44973b:	jb     0x449701
  44973d:	pop    esp
  44973e:	mov    ds,WORD PTR [ebp+0x6200d966]
  449744:	fdivr  QWORD PTR [ebx+0x0]
  449747:	add    BYTE PTR [ebx+0x305151db],bh
  44974d:	daa    
  44974e:	mov    WORD PTR [eax],es
  449750:	mov    ebx,ebx
  449752:	inc    esi
  449753:	push   eax
  449754:	les    ebp,FWORD PTR [ebp+0x74]
  449757:	les    ecx,FWORD PTR [ebx-0x1f03f6e]
  44975d:	xchg   esp,eax
  44975e:	idiv   bh
  449760:	mov    esp,DWORD PTR [edx]
  449762:	adc    dh,BYTE PTR [ebx]
  449764:	retf   
  449765:	fnstsw WORD PTR [edx+0x40]
  449768:	repnz out dx,al
  44976a:	cld    
  44976b:	mov    BYTE PTR [ebp-0x5d],ah
  44976e:	push   es
  44976f:	inc    esi
  449770:	pop    DWORD PTR [ecx+edi*2+0x751d3278]
  449777:	mov    edi,DWORD PTR [ebp+0x3bfff815]
  44977d:	push   edx
  44977e:	mov    bh,0xf
  449780:	iret   
  449781:	and    eax,0x5c4bfff8
  449786:	mov    ecx,0xdb3bc8
  44978b:	add    dh,ch
  44978d:	xlat   BYTE PTR ds:[ebx]
  44978e:	jne    0x449788
  449790:	pop    es
  449791:	test   al,0x83
  449793:	loope  0x449795
	...
  4497a5:	add    BYTE PTR [eax],al
  4497a7:	add    BYTE PTR [ebx],cl
  4497a9:	fild   DWORD PTR [eax]
  4497ab:	mov    edi,DWORD PTR [ebp+0xb4e7cb2]
  4497b1:	shl    esi,0x8c
  4497b4:	mov    ebp,0xbe8946de
  4497b9:	dec    esi
  4497ba:	jle    0x449809
  4497bc:	or     eax,DWORD PTR [ebx+0x45]
  4497bf:	(bad)  
  4497c1:	push   edi
  4497c2:	jle    0x449809
  4497c4:	ret    
  4497c5:	push   ecx
  4497c6:	mov    bh,0x78
  4497c8:	mov    dh,0x5b
  4497ca:	jns    0x4497e8
  4497cc:	mov    ebx,0x7ec701ce
  4497d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4497d2:	cli    
  4497d3:	jmp    DWORD PTR [edx-0x71]
  4497d6:	xchg   BYTE PTR [esp+edx*1-0x26402d58],al
  4497dd:	fidivr DWORD PTR [edx-0x52]
  4497e1:	sub    edi,DWORD PTR [esp+edx*1+0x6805b1a3]
  4497e8:	jmp    0x27cba4b3
  4497ed:	inc    eax
  4497ee:	in     al,dx
  4497ef:	inc    ecx
  4497f0:	imul   BYTE PTR [edx]
  4497f2:	dec    ecx
  4497f3:	adc    BYTE PTR ds:0x1be82de0,dl
  4497f9:	call   0xff84:0x1e3b0003
  449800:	gs mov al,0x7a
  449803:	push   edx
  449804:	push   edx
  449805:	cmp    DWORD PTR [esi],edi
  449807:	jo     0x449884
  449809:	push   cs
  44980a:	cmp    bh,0x0
	...
  44981d:	add    BYTE PTR [eax],al
  44981f:	add    BYTE PTR [ebp-0x50],cl
  449822:	ficomp DWORD PTR [edx+0x4e]
  449825:	sub    ecx,DWORD PTR [ecx+0x8]
  449828:	arpl   WORD PTR [ebp-0x79],bp
  44982b:	jl     0x449867
  44982d:	mov    cl,0xf
  44982f:	jne    0x449818
  449831:	out    dx,eax
  449832:	sbb    BYTE PTR [esi+0x39],dh
  449835:	mov    edi,DWORD PTR [edx+0x41]
  449838:	push   0x35
  44983a:	les    esi,FWORD PTR [edx+0x6a]
  44983d:	cmp    esi,DWORD PTR [esi]
  44983f:	js     0x44989a
  449841:	outs   dx,BYTE PTR ds:[esi]
  449842:	pop    es
  449843:	je     0x4498c1
  449845:	sub    eax,DWORD PTR [esi]
  449847:	adc    al,0x39
  449849:	enter  0xfe11,0xe8
  44984d:	(bad)  
  44984e:	sar    BYTE PTR [edi+0x120fdee7],cl
  449854:	stc    
  449855:	mov    dl,0x80
  449857:	inc    esi
  449858:	bound  edi,QWORD PTR [ebx]
  44985a:	cs add al,0xe8
  44985d:	mov    esi,ebx
  44985f:	test   BYTE PTR [ecx+ebx*8],bl
  449862:	stc    
  449863:	jnp    0x4498d6
  449865:	shr    DWORD PTR [ecx],1
  449867:	leave  
  449868:	mov    ds:0x2379bf2a,al
  44986d:	leave  
  44986e:	bound  edi,QWORD PTR [esi]
  449870:	xor    cl,BYTE PTR [esi]
  449872:	sti    
  449873:	test   al,0xa4
  449875:	and    edx,DWORD PTR [edx+0x34]
  449878:	sub    eax,0x8a200fc8
  44987d:	scas   eax,DWORD PTR es:[edi]
  44987e:	add    BYTE PTR [edx+eiz*2],al
  449881:	lock pop edi
  449883:	test   BYTE PTR [eax],al
	...
  449895:	add    BYTE PTR [eax],al
  449897:	add    BYTE PTR [ebp+0x237ae9a5],al
  44989d:	sub    ecx,esi
  44989f:	ins    DWORD PTR es:[edi],dx
  4498a0:	loope  0x44987a
  4498a2:	jmp    0xf26bddaa
  4498a7:	(bad)  
  4498a9:	int3   
  4498aa:	call   0xf01f0abc
  4498af:	pop    es
  4498b0:	push   ebp
  4498b1:	daa    
  4498b2:	rol    BYTE PTR [edx],cl
  4498b4:	leave  
  4498b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4498b6:	push   0xe
  4498b8:	outs   dx,BYTE PTR ds:[esi]
  4498b9:	(bad)  
  4498bb:	test   BYTE PTR [ebp-0x2172b15d],ch
  4498c1:	push   ds
  4498c2:	inc    esi
  4498c3:	sub    eax,0xa7730397
  4498c8:	mov    BYTE PTR [edi+0xbb03e5],dl
  4498ce:	sti    
  4498cf:	ret    
  4498d0:	mov    ebx,0xcc2f3c50
  4498d5:	aad    0xe9
  4498d7:	sub    al,0xaf
  4498d9:	pop    eax
  4498da:	xor    DWORD PTR [ebp+0x2f04509b],ecx
  4498e0:	mov    ah,0xd5
  4498e2:	jmp    0x2ddab2a6
  4498e7:	rcr    BYTE PTR [ecx],0x96
  4498ea:	and    eax,0x95a9c0
  4498ef:	pushf  
  4498f0:	pop    edx
  4498f1:	mov    al,0x53
  4498f3:	xchg   esi,eax
  4498f4:	dec    edx
  4498f5:	pop    ds
  4498f6:	or     DWORD PTR [edx],ebx
  4498f8:	sti    
  4498f9:	push   edi
  4498fa:	not    DWORD PTR [eax+eax*1+0x0]
	...
  44990e:	add    BYTE PTR [eax],al
  449910:	mov    ecx,0x482a8601
  449915:	or     eax,0xd965ab56
  44991a:	dec    esi
  44991b:	jb     0x44992b
  44991d:	test   BYTE PTR [eax],al
  44991f:	jmp    0x3d32f185
  449924:	cwde   
  449925:	dec    edi
  449926:	ds push ebx
  449928:	aas    
  449929:	add    bl,BYTE PTR [esp+eax*2-0x60]
  44992d:	fadd   DWORD PTR [eax]
  44992f:	jb     0x449918
  449931:	and    al,0x1
  449933:	jmp    0x65c37799
  449938:	popa   
  449939:	fld    DWORD PTR [eax]
  44993b:	cld    
  44993c:	jb     0x449929
  44993e:	xchg   esi,eax
  44993f:	mov    cl,0x61
  449941:	fld    DWORD PTR [eax]
  449943:	cld    
  449944:	pop    edx
  449945:	pop    ebp
  449946:	inc    esi
  449947:	stc    
  449948:	sbb    dl,BYTE PTR [edx]
  44994a:	ins    DWORD PTR es:[edi],dx
  44994b:	frstor [edx+0x50]
  44994e:	pop    eax
  44994f:	jbe    0x44990b
  449951:	retf   0xc352
  449954:	popa   
  449955:	mov    ds:0x1d7b610d,al
  44995a:	add    DWORD PTR [edx+0x1d],ebp
  44995d:	fadd   QWORD PTR [ebx-0x402ea641]
  449963:	out    dx,eax
  449964:	popa   
  449965:	fld    DWORD PTR [eax]
  449967:	jmp    0xafca75e0
  44996c:	pop    ebp
  44996d:	or     ecx,ebp
  44996f:	mov    ecx,0xbff7a0dc
	...
  449988:	pop    ebx
  449989:	fnstcw WORD PTR [edi+0xd929a7]
  44998f:	add    bl,bh
  449991:	xlat   BYTE PTR ds:[ebx]
  449992:	stc    
  449993:	adc    eax,0x3cf253
  449998:	dec    eax
  449999:	pushf  
  44999a:	call   FWORD PTR [ebp-0x7c]
  44999d:	pop    ebp
  44999e:	xlat   BYTE PTR ds:[ebx]
  44999f:	add    BYTE PTR [ebx-0x34ffff29],bh
  4499a5:	xlat   BYTE PTR ds:[ebx]
  4499a6:	pop    ecx
  4499a7:	mov    ecx,DWORD PTR [eax]
  4499a9:	hlt    
  4499aa:	pop    ebx
  4499ab:	ret    0xd7c7
  4499ae:	(bad)  
  4499af:	int3   
  4499b0:	out    dx,eax
  4499b1:	pusha  
  4499b2:	retf   
  4499b3:	int3   
  4499b4:	iret   
  4499b5:	pusha  
  4499b6:	retf   
  4499b7:	int3   
  4499b8:	jbe    0x4499de
  4499ba:	in     al,dx
  4499bb:	or     edi,0x7bfff6a0
  4499c1:	jmp    0xbae:0x4af05752
  4499c8:	mov    edx,edi
  4499ca:	add    BYTE PTR [ebp-0x6b6e2],cl
  4499d0:	fmul   QWORD PTR [ebx-0x5e]
  4499d3:	mov    ecx,DWORD PTR [esi+0x7a055da5]
  4499d9:	and    BYTE PTR [ebx-0x7b1420c],dl
  4499df:	push   edx
  4499e0:	push   0x6b857e72
  4499e5:	dec    esi
  4499e6:	clc    
  4499e7:	jmp    DWORD PTR [ebx+0x3272]
	...
  4499fd:	add    BYTE PTR [eax],al
  4499ff:	add    BYTE PTR [ebx],bh
  449a01:	mov    eax,?
  449a03:	xor    DWORD PTR [edi-0x5f],0x7e
  449a07:	test   DWORD PTR [edi+0x4e],esp
  449a0a:	clc    
  449a0b:	call   DWORD PTR [eax]
  449a0d:	cwde   
  449a0e:	or     BYTE PTR [ebp+ebp*4-0x34ffff26],al
  449a15:	and    DWORD PTR [ebx-0x7b1a20c],eax
  449a1b:	push   eax
  449a1c:	(bad)  
  449a1d:	fadd   st,st(7)
  449a1f:	out    dx,al
  449a20:	in     eax,dx
  449a21:	shl    DWORD PTR [edi-0x13],cl
  449a24:	fld1   
  449a26:	jg     0x4499eb
  449a28:	push   0xffffffa7
  449a2a:	mov    ecx,0xfbd41f86
  449a2f:	xor    esp,0xffffffb1
  449a32:	add    eax,DWORD PTR [eax]
  449a34:	fldenv ds:0x83bdf8d8
  449a3a:	xor    dl,BYTE PTR [edx+0x12]
  449a3d:	fidivr WORD PTR [ecx-0x7e]
  449a40:	mov    dh,0x92
  449a42:	mov    bh,al
  449a44:	adc    dh,BYTE PTR [ebx+0x40]
  449a47:	fsub   QWORD PTR [ebx-0x50]
  449a4a:	add    eax,DWORD PTR [eax]
  449a4c:	mov    bh,BYTE PTR [eax+edx*8-0x1]
  449a50:	lea    ebp,[edi]
  449a52:	mov    eax,0x770df13
  449a57:	std    
  449a58:	loopne 0x449ac1
  449a5a:	mov    al,BYTE PTR [edi+ebx*8+0x6df88a94]
  449a61:	add    eax,0xfc39
	...
  449a76:	add    BYTE PTR [eax],al
  449a78:	adc    ebp,DWORD PTR ds:0x235cf379
  449a7e:	mov    esp,edi
  449a80:	xlat   BYTE PTR ds:[ebx]
  449a81:	pop    ebp
  449a82:	mov    bh,al
  449a84:	loope  0x449b01
  449a86:	test   DWORD PTR [edx+0x7cfe8422],0x82770329
  449a90:	jle    0x449a9d
  449a92:	mov    edi,eax
  449a94:	fild   QWORD PTR [edi+ecx*4+0x4d]
  449a98:	xlat   BYTE PTR ds:[ebx]
  449a99:	sub    al,0x88
  449a9b:	stc    
  449a9c:	sbb    eax,0x7e99be3
  449aa1:	jmp    0x449a2d
  449aa3:	jl     0x449acb
  449aa5:	mov    esp,0xd98ebf80
  449aaa:	jmp    0xf240:0x64a22686
  449ab1:	or     BYTE PTR [ebx-0x80],ah
  449ab4:	inc    ecx
  449ab5:	mov    ds:0x53d88a06,al
  449aba:	cmc    
  449abb:	mov    dl,bl
  449abd:	mov    eax,ds:0xa1c9aa11
  449ac2:	out    dx,al
  449ac3:	test   DWORD PTR [ecx+0x51c35cdc],esp
  449ac9:	(bad)  
  449aca:	push   0xffffffbd
  449acc:	mov    edx,0xbae05c4d
  449ad1:	mov    eax,ds:0xa91877ce
  449ad6:	cmp    BYTE PTR [edi-0x28],dh
  449ad9:	lods   al,BYTE PTR ds:[esi]
  449ada:	mov    edi,0x89
	...
  449aef:	add    BYTE PTR [edx-0x65675650],bl
  449af5:	mov    eax,ds:0x5c61c06a
  449afa:	test   eax,0xb2568710
  449aff:	mov    esi,esp
  449b01:	pop    ebx
  449b02:	mov    ebp,0x5ca17a88
  449b07:	das    
  449b08:	jb     0x449b10
  449b0a:	push   ebp
  449b0b:	ja     0x449b7e
  449b0d:	mov    ds:0xdb45897e,al
  449b12:	test   BYTE PTR [ecx+0xa55d5a],cl
  449b18:	loope  0x449ab3
  449b1a:	in     eax,dx
  449b1b:	add    al,0xc7
  449b1d:	xchg   esp,eax
  449b1e:	pop    esi
  449b1f:	ja     0x449ac1
  449b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  449b22:	mov    ecx,0x4ef5e07c
  449b27:	mov    DWORD PTR [edx],ebp
  449b29:	dec    edi
  449b2a:	push   esp
  449b2b:	nop
  449b2c:	sub    esp,DWORD PTR [ecx-0x51c063c2]
  449b32:	mov    DWORD PTR ss:[esi-0x7312ff6b],edx
  449b39:	pusha  
  449b3a:	ins    BYTE PTR es:[edi],dx
  449b3b:	jmp    0xfc7d:0x72f795de
  449b42:	neg    DWORD PTR [esi]
  449b44:	jmp    0x449b99
  449b46:	test   ebp,eax
  449b48:	fisub  DWORD PTR [ecx+0x536cb8f7]
  449b4e:	in     al,dx
  449b4f:	pop    es
  449b50:	jmp    0x449af3
  449b52:	call   0x449bf0
	...
  449b67:	add    ah,ch
  449b69:	mov    eax,ds:0xdca26af7
  449b6e:	jge    0x449b99
  449b70:	jb     0x449b10
  449b72:	xor    BYTE PTR [edx+0x57d55ea],0xeb
  449b79:	mov    eax,ds:0xa17c64f7
  449b7e:	push   edx
  449b7f:	pop    esp
  449b80:	sub    al,0xac
  449b82:	test   dh,0xea
  449b85:	mov    eax,0xa1eacc31
  449b8a:	sub    DWORD PTR [ebp+0x35c05b8d],0x5f
  449b91:	push   ds
  449b92:	int3   
  449b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  449b94:	(bad)  
  449b95:	sbb    bh,cl
  449b97:	loop   0x449b8d
  449b99:	repz not DWORD PTR [esi+0x620e2bda]
  449ba0:	sub    al,0x9d
  449ba2:	cmp    esi,DWORD PTR [ecx+esi*1-0x5f]
  449ba6:	idiv   DWORD PTR [esi+0x64]
  449ba9:	xlat   BYTE PTR ds:[ebx]
  449baa:	cmp    esp,esi
  449bac:	(bad)  [edx]
  449bae:	(bad)  
  449baf:	scas   eax,DWORD PTR es:[edi]
  449bb0:	pop    esp
  449bb1:	test   eax,0x47aeec6c
  449bb6:	neg    DWORD PTR [esi-0x16]
  449bb9:	push   esp
  449bba:	jge    0x449bc9
  449bbc:	(bad)  [eax+0x3cb45cf7]
  449bc2:	clc    
  449bc3:	add    BYTE PTR [ecx+edx*2+0x50868d45],ah
  449bca:	stc    
  449bcb:	inc    DWORD PTR [eax]
	...
  449bdd:	add    BYTE PTR [eax],al
  449bdf:	add    BYTE PTR [esp+eax*2-0x23],dl
  449be3:	in     al,dx
  449be4:	xor    al,0x51
  449be6:	je     0x449bac
  449be8:	nop    DWORD PTR [eax-0x43aaf78c]
  449bef:	inc    DWORD PTR [esi+0x54ff6c1f]
  449bf5:	push   ecx
  449bf6:	inc    edi
  449bf7:	mov    ecx,DWORD PTR [esi-0x80]
  449bfa:	clc    
  449bfb:	call   esp
  449bfd:	and    eax,0x57d5f48b
  449c02:	clc    
  449c03:	call   0x3ce48b
  449c08:	dec    eax
  449c09:	cdq    
  449c0a:	add    eax,DWORD PTR [ebp-0x7d0a36f5]
  449c10:	add    BYTE PTR [eax+0x7e],bl
  449c13:	mov    ebp,0xfff8584f
  449c18:	mov    dl,0x2b
  449c1a:	idiv   edi
  449c1c:	mov    esp,DWORD PTR [edx]
  449c1e:	mov    esp,DWORD PTR [esp+edx*8]
  449c21:	push   edi
  449c22:	clc    
  449c23:	push   ecx
  449c24:	es sub dh,ah
  449c27:	inc    ah
  449c29:	push   edi
  449c2a:	inc    ebp
  449c2b:	call   0x3cde1b
  449c30:	add    BYTE PTR [ebx+0x7c],cl
  449c33:	enter  0x98f8,0xff
  449c37:	or     dl,BYTE PTR ds:0x4ee4431d
  449c3d:	fdiv   QWORD PTR [ebp-0x35]
  449c40:	aam    0x22
  449c42:	xchg   ebx,eax
  449c43:	and    al,0x0
	...
  449c55:	add    BYTE PTR [eax],al
  449c57:	add    BYTE PTR [esi+edx*2-0x1502a808],dh
  449c5e:	inc    esi
  449c5f:	lea    edi,[esi+0x62fff949]
  449c65:	pop    es
  449c66:	sub    eax,0x94eca787
  449c6b:	adc    DWORD PTR [esi-0x50],edx
  449c6e:	add    edi,DWORD PTR [ebp+0x1e]
  449c71:	test   DWORD PTR [eax-0x7d4c6941],eax
  449c77:	les    eax,FWORD PTR ds:0xfd23823c
  449c7d:	idiv   DWORD PTR [edi-0x76]
  449c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  449c81:	mov    esp,0xbcdf8b2d
  449c86:	jle    0x449c80
  449c88:	in     eax,0xd8
  449c8a:	mov    bh,0xe4
  449c8c:	fst    st(7)
  449c8e:	add    ebx,0x5e
  449c91:	xor    eax,0x336173bd
  449c96:	mov    esp,0xe135d9f8
  449c9b:	clc    
  449c9c:	mov    ebp,0xb25278b7
  449ca1:	loop   0x449d1c
  449ca3:	mov    dh,BYTE PTR [esi-0x4507817a]
  449ca9:	clc    
  449caa:	fwait
  449cab:	clc    
  449cac:	popf   
  449cad:	xor    edi,DWORD PTR [eax+0x770df03]
  449cb3:	std    
  449cb4:	loopne 0x449d31
  449cb6:	jle    0x449c42
  449cb8:	pop    ds
  449cb9:	xor    eax,DWORD PTR fs:[ebp+0x0]
	...
  449cd0:	out    0x8c,eax
  449cd2:	jle    0x449ccc
  449cd4:	jne    0x449d03
  449cd6:	jns    0x449ccb
  449cd8:	ins    BYTE PTR es:[edi],dx
  449cd9:	inc    edi
  449cda:	jle    0x449cc3
  449cdc:	cmp    ebx,DWORD PTR [ebx+0x7e]
  449cdf:	clc    
  449ce0:	loope  0x449d4d
  449ce2:	test   DWORD PTR [edx+0x7d02a422],0x827b2719
  449cec:	jle    0x449d1d
  449cee:	jg     0x449ce8
  449cf0:	out    dx,eax
  449cf1:	fsubr  DWORD PTR [edi+eax*4-0x709bb35c]
  449cf8:	sub    ebx,DWORD PTR [esi-0x4da064b2]
  449cfe:	inc    esi
  449cff:	xchg   BYTE PTR [esi-0x2a7f1a6b],bl
  449d05:	and    al,0xeb
  449d07:	and    BYTE PTR [esi],0x9e
  449d0a:	bound  esi,QWORD PTR [eax]
  449d0c:	push   es
  449d0d:	dec    esp
  449d0e:	pushf  
  449d0f:	xchg   DWORD PTR [ebp-0x5209bae],ebp
  449d15:	popf   
  449d16:	push   ss
  449d17:	js     0x449cf1
  449d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  449d1a:	jbe    0xd7b0ed0a
  449d20:	ficomp DWORD PTR [ebp-0x16e78402]
  449d26:	test   BYTE PTR [ebp-0x66f24f36],0xca
  449d2d:	popf   
  449d2e:	push   0xffffffbf
  449d30:	popa   
  449d31:	push   esp
  449d32:	test   eax,0x10
	...
  449d47:	add    BYTE PTR [edi-0x197a4da6],dh
  449d4d:	adc    ecx,esi
  449d4f:	rcr    DWORD PTR [ecx+eiz*8-0x626527a4],1
  449d56:	mov    esi,0x64e2640f
  449d5b:	aam    0x8a
  449d5d:	popf   
  449d5e:	scas   al,BYTE PTR es:[edi]
  449d5f:	subps  xmm4,xmm0
  449d62:	and    al,0x90
  449d64:	lock shl eax,cl
  449d67:	push   es
  449d68:	jb     0x449d8e
  449d6a:	fisttp QWORD PTR [eax-0x2c]
  449d6d:	popf   
  449d6e:	mov    es,WORD PTR [ebp-0x7b42ac22]
  449d74:	pop    edx
  449d75:	popf   
  449d76:	ins    BYTE PTR es:[edi],dx
  449d77:	aaa    
  449d78:	push   esi
  449d79:	or     esp,DWORD PTR [ebp+0x77]
  449d7c:	push   ecx
  449d7d:	pushf  
  449d7e:	add    BYTE PTR [esi-0x21],dh
  449d81:	mov    ah,0xf9
  449d83:	and    edi,0xffffffa1
  449d86:	sub    DWORD PTR ds:0xd5c05862,0x62
  449d8d:	push   ds
  449d8e:	int3   
  449d8f:	push   esi
  449d90:	stos   DWORD PTR es:[edi],eax
  449d91:	pop    es
  449d92:	cmc    
  449d93:	pop    esp
  449d94:	pop    ebp
  449d95:	popf   
  449d96:	push   eax
  449d97:	jb     0x449d2e
  449d99:	clc    
  449d9a:	idiv   DWORD PTR [esi]
  449d9c:	out    0x4f,eax
  449d9e:	test   DWORD PTR ds:0x60f7a1dc,edi
  449da4:	lea    edi,[eax]
  449da6:	clc    
  449da7:	fist   WORD PTR es:[ebx-0x4b]
  449dab:	xchg   ecx,eax
	...
  449dc0:	out    0xa1,al
  449dc2:	test   DWORD PTR [ecx],0xef7b6ab
  449dc8:	jecxz  0x449d62
  449dca:	cld    
  449dcb:	imul   ebx,DWORD PTR [esi+0xb6a0428],0xffffffa2
  449dd2:	mov    esp,DWORD PTR [ebp+ebx*8-0x193a82ab]
  449dd9:	mov    eax,ds:0xe84474f7
  449dde:	neg    esi
  449de0:	out    0x53,al
  449de2:	test   DWORD PTR [ebp-0x21],eax
  449de5:	mov    eax,ds:0x4f153bf7
  449dea:	in     al,dx
  449deb:	(bad)  
  449dec:	fisub  WORD PTR [ecx-0x5d8e8377]
  449df2:	div    DWORD PTR [esi-0x51151917]
  449df8:	out    0x1d,al
  449dfa:	mov    ebp,0x6c5bf4ed
  449dff:	jmp    0x2ff4:0x62f795e2
  449e06:	clc    
  449e07:	mov    fs,esi
  449e09:	push   esp
  449e0a:	mov    ch,0x0
  449e0c:	addr16 push esi
  449e0e:	clc    
  449e0f:	call   eax
  449e11:	sbb    ebp,DWORD PTR [eax-0x1]
  449e14:	int3   
  449e15:	push   ebp
  449e16:	jl     0x449de2
  449e18:	dec    eax
  449e19:	gs add al,0x85
  449e1c:	adc    edx,DWORD PTR [ebp-0x8]
  449e1f:	inc    DWORD PTR [eax+0xf6545]
	...
  449e35:	add    BYTE PTR [eax],al
  449e37:	add    al,al
  449e39:	fcmovnu st,st(4)
  449e3b:	ja     0x449e44
  449e3d:	xchg   ecx,eax
  449e3e:	mov    dh,0x72
  449e40:	add    eax,0x423bbe89
  449e45:	int3   
  449e46:	and    BYTE PTR [ebx-0x7838a],cl
  449e4c:	dec    esp
  449e4d:	and    DWORD PTR [ebx-0x7aac3f0],ecx
  449e53:	push   eax
  449e54:	stos   BYTE PTR es:[edi],al
  449e55:	push   esp
  449e56:	xchg   edx,eax
  449e57:	or     BYTE PTR [ebp+edx*2-0x8],cl
  449e5b:	add    DWORD PTR [edi+0x185e58a0],0xffffff98
  449e62:	dec    esp
  449e63:	mov    esp,DWORD PTR [esi-0xd]
  449e66:	mov    ch,0x8b
  449e68:	jae    0x449deb
  449e6a:	int    0x8b
  449e6c:	push   ebp
  449e6d:	mov    cl,0x92
  449e6f:	jo     0x449e2d
  449e71:	push   edi
  449e72:	clc    
  449e73:	sub    ebp,esp
  449e75:	mov    ebx,0x578c6893
  449e7a:	clc    
  449e7b:	push   0xd4bb
  449e80:	xor    esi,edx
  449e82:	inc    edi
  449e83:	mov    DWORD PTR [esi],ebp
  449e85:	sbb    edx,edi
  449e87:	dec    esp
  449e89:	dec    ebp
  449e8a:	xchg   edx,eax
  449e8b:	inc    eax
  449e8c:	int3   
  449e8d:	push   edi
  449e8e:	clc    
  449e8f:	mov    DWORD PTR [esi],eax
  449e91:	mov    ecx,0x4dccfff8
  449e96:	mov    dl,0x60
  449e98:	bound  eax,QWORD PTR [ebx-0x7d]
  449e9b:	clc    
	...
  449eb0:	jmp    0x449e6f
  449eb2:	pop    eax
  449eb3:	xchg   BYTE PTR [edi-0x19ed7c88],ah
  449eb9:	test   al,0xff
  449ebc:	fmul   DWORD PTR [eax+0x7f]
  449ebf:	ret    
  449ec0:	outs   dx,BYTE PTR ds:[esi]
  449ec1:	xor    eax,0x794f7358
  449ec6:	inc    eax
  449ec7:	add    BYTE PTR [edx-0x50],ah
  449eca:	nop
  449ecb:	mov    dl,0x2e
  449ecd:	add    eax,DWORD PTR [eax+edi*8-0x132ff817]
  449ed4:	mov    edi,0xdf33008
  449ed9:	fsubr  st(3),st
  449edb:	pop    ecx
  449edc:	(bad)  
  449ede:	xlat   BYTE PTR ds:[ebx]
  449edf:	test   BYTE PTR [edi],al
  449ee1:	dec    esi
  449ee2:	ds retf 
  449ee4:	es in  eax,0x50
  449ee7:	retf   
  449ee8:	push   ds
  449ee9:	in     eax,dx
  449eea:	push   eax
  449eeb:	retf   
  449eec:	push   ss
  449eed:	pop    esi
  449eee:	xchg   bl,ch
  449ef0:	loope  0x449e8e
  449ef2:	daa    
  449ef3:	push   edx
  449ef4:	jmp    0xa271a716
  449ef9:	xchg   edi,eax
  449efa:	jae    0x449f6f
  449efc:	ja     0x449f39
  449efe:	mov    ah,0x7
  449f00:	bound  esi,QWORD PTR [eax+0x5c378b03]
  449f06:	outs   dx,BYTE PTR ds:[esi]
  449f07:	mov    ds:0x8674f5db,al
  449f0c:	pop    ds
  449f0d:	test   BYTE PTR [esi-0x4b1f95be],al
  449f13:	inc    BYTE PTR [eax]
	...
  449f25:	add    BYTE PTR [eax],al
  449f27:	add    BYTE PTR [ebp+0x378b03b0],dl
  449f2d:	inc    esp
  449f2e:	imul   edi,DWORD PTR [ecx-0x77],0x63
  449f32:	cmp    BYTE PTR [esi+eiz*4-0x4c],0xe2
  449f37:	pop    ecx
  449f38:	jmp    0xb0252416
  449f3d:	shr    ecx,1
  449f3f:	mov    ds,WORD PTR [eax]
  449f41:	sar    DWORD PTR [eax],1
  449f43:	mov    esp,0x3e99a5c
  449f48:	xchg   DWORD PTR [edi-0x65a9196f],eax
  449f4e:	jbe    0x449ed6
  449f50:	and    ebp,edx
  449f52:	jg     0xbf09b98
  449f58:	bound  ecx,QWORD PTR [ebp-0x72e6b0d3]
  449f5e:	and    eax,0xb48d194f
  449f63:	mov    cs,WORD PTR [ecx]
  449f65:	add    esp,DWORD PTR [ebx-0x8]
  449f68:	pop    ebp
  449f69:	push   esp
  449f6a:	aaa    
  449f6b:	clc    
  449f6c:	gs dec esp
  449f6e:	lahf   
  449f6f:	popf   
  449f70:	stos   DWORD PTR es:[edi],eax
  449f71:	cld    
  449f72:	sub    eax,DWORD PTR [edi]
  449f74:	bound  edx,QWORD PTR [esi+0x67]
  449f77:	arpl   bp,si
  449f79:	cdq    
  449f7a:	jmp    0xb0181582
  449f7f:	imul   ebx,ebx,0xffffff9e
  449f82:	push   cs
  449f83:	and    dh,0x12
  449f86:	fimul  DWORD PTR [esi-0x268d42d5]
	...
  449fa0:	jno    0x449fab
  449fa2:	cdq    
  449fa3:	adc    BYTE PTR [edi-0x44fc7bfe],0xc3
  449faa:	popa   
  449fab:	frstor [ecx]
  449fad:	fldcw  WORD PTR [edx+0x48]
  449fb0:	pop    ebp
  449fb1:	out    0xa9,al
  449fb3:	loop   0x449fbd
  449fb5:	xchg   edi,eax
  449fb6:	in     eax,0x3
  449fb8:	scas   al,BYTE PTR es:[edi]
  449fb9:	mov    WORD PTR [ebp-0x527356b0],ss
  449fbf:	push   eax
  449fc0:	cdq    
  449fc1:	mov    WORD PTR [ebp+0x8c9950],fs
  449fc7:	sbb    al,0xef
  449fc9:	lods   eax,DWORD PTR ds:[esi]
  449fca:	cmp    DWORD PTR [ebp-0x59cbf7ae],0x29
  449fd1:	push   ds
  449fd2:	sbb    DWORD PTR ds:0x733f4e54,edx
  449fd8:	inc    ebx
  449fd9:	pop    esi
  449fda:	(bad)  [esp+ebx*4]
  449fdd:	in     al,dx
  449fde:	add    BYTE PTR [edi],bl
  449fe0:	fisttp WORD PTR [ebx]
  449fe2:	or     edx,eax
  449fe4:	retf   0x90c
  449fe7:	bound  ebp,QWORD PTR [eax]
  449fe9:	cmp    DWORD PTR [edi+eiz*1],ecx
  449fec:	dec    edx
  449fed:	or     al,0x6
  449fef:	(bad)  
  449ff0:	jmp    0xe3a39763
  449ff5:	xor    DWORD PTR [esp+ecx*2-0x16f3a8c3],ecx
  449ffc:	pop    eax
  449ffd:	push   ebx
  449ffe:	loopne 0x449fe9
  44a000:	popa   
  44a001:	fldcw  WORD PTR [edi+eiz*8+0x0]
	...
  44a015:	add    BYTE PTR [eax],al
  44a017:	add    BYTE PTR [ebx],ch
  44a019:	adc    DWORD PTR ds:0x8591e333,0x8628599c
  44a023:	mov    esp,0xa4862675
  44a028:	gs sub cl,ch
  44a02b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a02c:	push   esp
  44a02d:	xchg   ecx,eax
  44a02e:	imul   DWORD PTR [edx+0x2a]
  44a031:	in     al,0x7d
  44a033:	sub    edx,ecx
  44a035:	jecxz  0x44a08d
  44a037:	inc    ecx
  44a038:	jmp    0xc33b97ce
  44a03d:	pop    ebp
  44a03e:	fisttp QWORD PTR [edi+ebx*1-0x41c5ff14]
  44a045:	test   al,0x0
  44a047:	jmp    0x3e469fad
  44a04c:	jecxz  0x44a039
  44a04e:	jl     0x44a083
  44a050:	stos   BYTE PTR es:[edi],al
  44a051:	cwde   
  44a052:	mov    al,BYTE PTR [eax]
  44a054:	ret    
  44a055:	pop    ebp
  44a056:	ret    
  44a057:	or     al,0x60
  44a059:	cli    
  44a05a:	jae    0x44a09f
  44a05c:	and    ebx,ebp
  44a05e:	inc    eax
  44a05f:	add    BYTE PTR [ebx-0x3ba9097a],cl
  44a065:	out    dx,eax
  44a066:	jl     0x44a0c2
  44a068:	aas    
  44a069:	fnstsw WORD PTR [ebp+0x4d]
  44a06c:	jmp    DWORD PTR [edx+edx*2-0x8]
  44a070:	ret    0x47a5
  44a073:	mov    edx,DWORD PTR [esi+0x6f537ff5]
  44a079:	push   dx
  44a07b:	adc    al,0x0
	...
  44a08d:	add    BYTE PTR [eax],al
  44a08f:	add    al,cl
  44a091:	and    BYTE PTR [ecx+ecx*4],cl
  44a094:	dec    eax
  44a095:	arpl   WORD PTR [eax+ebx*2],di
  44a098:	mov    dl,0x95
  44a09a:	push   edi
  44a09b:	mov    DWORD PTR [eax-0x80],eax
  44a09e:	jle    0x44a033
  44a0a0:	inc    ebx
  44a0a1:	fadd   QWORD PTR [eax]
  44a0a3:	add    BYTE PTR [eax+0x22],dh
  44a0a6:	jae    0x44a0c1
  44a0a8:	call   0x935a995d
  44a0ad:	mov    dh,0x43
  44a0af:	add    BYTE PTR [eax-0x1aa4ffe0],cl
  44a0b5:	push   ebx
  44a0b6:	(bad)  
  44a0b7:	inc    DWORD PTR [ecx+ebx*2+0x58]
  44a0bb:	mov    ebx,DWORD PTR [esi-0x49]
  44a0be:	mov    ch,0x14
  44a0c0:	retf   
  44a0c1:	fs inc edx
  44a0c3:	or     al,0x42
  44a0c5:	xchg   ebp,eax
  44a0c6:	aas    
  44a0c7:	cmp    edi,DWORD PTR [eax+edx*4-0x1]
  44a0cb:	mov    dh,BYTE PTR ds:0xcbfff768
  44a0d1:	(bad)  
  44a0d2:	dec    DWORD PTR [edx-0x30d2142a]
  44a0d8:	psrlw  mm0,mm1
  44a0db:	add    DWORD PTR [ebp+0x620000db],edi
  44a0e1:	sti    
  44a0e2:	jle    0x44a06b
  44a0e4:	bound  eax,QWORD PTR [edx-0x787d82fd]
  44a0ea:	and    bh,0x60
  44a0ed:	into   
  44a0ee:	sbb    bh,BYTE PTR [ebp-0x76]
  44a0f1:	sub    edi,0xa
	...
  44a108:	loope  0x44a0a3
  44a10a:	add    dh,BYTE PTR [ebx+0x54]
  44a10d:	inc    edi
  44a10e:	std    
  44a10f:	(bad)  
  44a110:	add    DWORD PTR gs:[ebx],0xfd476ce5
  44a117:	std    
  44a118:	push   ebp
  44a119:	add    DWORD PTR [ebx],0xfd4764e5
  44a11f:	push   es
  44a120:	bound  eax,QWORD PTR [eax+0x34e48503]
  44a126:	std    
  44a127:	jmp    DWORD PTR [edx-0x7]
  44a12a:	sti    
  44a12b:	outs   dx,DWORD PTR ds:[esi]
  44a12c:	fstp   TBYTE PTR [ebx-0x15]
  44a12f:	xchg   BYTE PTR [ecx-0x69c37b5c],ch
  44a135:	sti    
  44a136:	xchg   BYTE PTR [ebx-0x78fc7f9e],cl
  44a13c:	fstp   DWORD PTR [eax-0x4]
  44a13f:	jmp    DWORD PTR [edx+0xb]
  44a142:	mov    edi,0xb903eb2f
  44a147:	push   ebp
  44a149:	or     BYTE PTR [edx-0x7b04203f],0xff
  44a150:	in     eax,0x80
  44a152:	mov    ah,0x4
  44a154:	bound  eax,QWORD PTR [eax-0x40012fd]
  44a15a:	les    eax,FWORD PTR [edi-0x25]
  44a15d:	or     edi,DWORD PTR ds:0x8a80c5ff
  44a163:	inc    edi
  44a164:	cs push ebx
  44a166:	jbe    0x44a0ee
  44a168:	jmp    0x1449e29
	...
  44a17d:	add    BYTE PTR [eax],al
  44a17f:	add    BYTE PTR [edx-0x27],ah
  44a182:	jo     0x44a17e
  44a184:	dec    ebp
  44a185:	bound  esi,QWORD PTR [ecx-0x71]
  44a188:	popf   
  44a189:	xchg   esi,eax
  44a18a:	jmp    0x4d2a2e11
  44a18f:	out    dx,al
  44a190:	push   esi
  44a191:	scas   al,BYTE PTR es:[edi]
  44a192:	xor    al,0xea
  44a194:	mov    ds:0x6203b15a,al
  44a199:	fld1   
  44a19b:	add    esp,DWORD PTR [edx-0x27]
  44a19e:	bound  ecx,QWORD PTR [ebx+0x3e9d9d5]
  44a1a4:	frstor [edx]
  44a1a6:	and    cl,BYTE PTR [ebx+0x3e974ed]
  44a1ac:	bound  esp,QWORD PTR [eax+0x3a]
  44a1af:	add    bh,ah
  44a1b1:	pusha  
  44a1b2:	dec    ecx
  44a1b3:	add    esp,DWORD PTR [edx-0x27]
  44a1b6:	jo     0x44a142
  44a1b8:	mov    ebp,0xdf03e9d9
  44a1bd:	push   0xd962033d
  44a1c2:	jb     0x44a194
  44a1c4:	sub    DWORD PTR [eax+0x7a],esp
  44a1c7:	xchg   DWORD PTR ds:0x2432e996,ebx
  44a1cd:	fisub  DWORD PTR [ecx+0x5b]
  44a1d0:	or     eax,0xf212e996
  44a1d5:	mov    ah,0xe9
  44a1d7:	add    esp,DWORD PTR [edx+0x5a]
  44a1da:	sub    BYTE PTR ds:0xfa60ae67,bl
  44a1e0:	gs pusha 
  44a1e2:	mov    dl,0xc3
	...
  44a1f8:	fsubr  QWORD PTR [ecx]
  44a1fa:	sahf   
  44a1fb:	mov    ebp,?
  44a1fd:	js     0x44a1e8
  44a1ff:	add    esp,DWORD PTR [edx+0x32]
  44a202:	popa   
  44a203:	mov    ebx,0x3e9d8c1
  44a208:	sub    dl,cl
  44a20a:	sub    esi,ebx
  44a20c:	out    0x7b,al
  44a20e:	add    BYTE PTR [ebx+eiz*1+0x2e6a00ea],dl
  44a215:	fisubr WORD PTR [ebp-0x7e]
  44a218:	imul   ebp,DWORD PTR [eax-0x15148993],0x7c
  44a21f:	xor    ebp,DWORD PTR [edx-0x26ee966b]
  44a225:	and    al,0x1d
  44a227:	mov    dh,dl
  44a229:	sub    edi,DWORD PTR ds:0x883989e9
  44a22f:	sub    DWORD PTR [esi+0x5e],ebx
  44a232:	inc    ebx
  44a233:	add    ebp,ebx
  44a235:	aam    0xfc
  44a237:	adc    dh,cl
  44a239:	and    eax,0x5c92228a
  44a23e:	cmp    BYTE PTR [eax+0x5b],ah
  44a241:	fucomp st(0)
  44a243:	mov    cl,0x9f
  44a245:	xchg   ecx,eax
  44a246:	div    DWORD PTR [edx-0x32]
  44a249:	int    0xef
  44a24b:	hlt    
  44a24c:	outs   dx,BYTE PTR ds:[esi]
  44a24d:	pop    esi
  44a24e:	cmp    eax,0x48d59ee1
  44a253:	loope  0x44a2b6
  44a255:	fld    DWORD PTR [eax]
  44a257:	push   eax
  44a258:	setb   bh
  44a25b:	pop    esi
	...
  44a270:	xor    ebp,DWORD PTR [edx]
  44a272:	clc    
  44a273:	cld    
  44a274:	jmp    0xe32ddfa7
  44a279:	cwde   
  44a27a:	or     BYTE PTR [edx-0x61a96526],ah
  44a280:	jmp    0xc4d9:0x5a2b5577
  44a287:	sbb    eax,0x35c4a092
  44a28c:	xchg   edx,eax
  44a28d:	mov    al,ds:0xa0322dc4
  44a292:	les    edi,FWORD PTR [edx+ebp*8+0x5da48b80]
  44a299:	pop    esi
  44a29a:	inc    ebp
  44a29b:	add    bl,dl
  44a29d:	test   al,0x5d
  44a29f:	add    cl,dl
  44a2a1:	fcomp  DWORD PTR [esi+0x0]
  44a2a4:	fiadd  DWORD PTR [eax]
  44a2a6:	mov    ?,ebp
  44a2a8:	mov    esp,0xb3c25b15
  44a2ad:	fadd   st,st(4)
  44a2af:	int3   
  44a2b0:	iret   
  44a2b1:	and    al,0xcc
  44a2b3:	int3   
  44a2b4:	push   esi
  44a2b5:	(bad)  
  44a2b6:	jmp    0x44a30b
  44a2b8:	push   esp
  44a2b9:	bound  edi,QWORD PTR [edx+0x8]
  44a2bc:	mov    ah,0xd8
  44a2be:	add    BYTE PTR [eax],al
  44a2c0:	mov    ebx,eax
  44a2c2:	jge    0x44a29e
  44a2c4:	(bad)  
  44a2c5:	fld    QWORD PTR [eax]
  44a2c7:	add    BYTE PTR [ebx-0x28],bh
  44a2ca:	and    bl,0x78
  44a2cd:	mov    ch,0xc0
  44a2cf:	push   es
  44a2d0:	dec    ebx
  44a2d1:	fadd   DWORD PTR [eax]
	...
  44a2e7:	add    bl,cl
  44a2e9:	adc    edi,esi
  44a2eb:	(bad)  
  44a2ec:	cmp    bl,al
  44a2ee:	add    BYTE PTR [eax],al
  44a2f0:	cmp    esi,DWORD PTR [ecx-0x28fbeb8e]
  44a2f6:	add    BYTE PTR [eax],al
  44a2f8:	dec    ebx
  44a2f9:	pop    eax
  44a2fa:	rol    BYTE PTR [eax],0x38
  44a2fd:	fadd   DWORD PTR [eax]
  44a2ff:	add    BYTE PTR [esi+ebx*8-0x9],dh
  44a303:	dec    DWORD PTR [ebx]
  44a305:	fcomp  DWORD PTR [ebx-0x3d]
  44a308:	mov    ch,0x1a
  44a30a:	add    al,0x74
  44a30c:	sub    eax,0xfbfff71d
  44a311:	xlat   BYTE PTR ds:[ebx]
  44a312:	rol    bh,0xb
  44a315:	fld    DWORD PTR [eax]
  44a317:	add    BYTE PTR [ebx],cl
  44a319:	mov    bl,0xb4
  44a31b:	idiv   BYTE PTR [ecx]
  44a31d:	loopne 0x44a38b
  44a31f:	or     al,0x34
  44a321:	xlat   BYTE PTR ds:[ebx]
  44a322:	add    BYTE PTR [eax],al
  44a324:	retf   
  44a325:	pop    ss
  44a326:	rol    DWORD PTR [eax],0x62
  44a329:	add    BYTE PTR [ebx],0x0
  44a32c:	bound  eax,QWORD PTR [ebp+0x40]
  44a32f:	retf   
  44a330:	xchg   esi,eax
  44a331:	int    0x47
  44a333:	retf   
  44a334:	scas   al,BYTE PTR es:[edi]
  44a335:	lds    eax,FWORD PTR [edi-0x35]
  44a338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a339:	dec    esi
  44a33a:	inc    ebx
  44a33b:	sub    BYTE PTR [ebp-0x5a82cbf3],0x7a
  44a342:	lock and al,0x31
  44a345:	int3   
  44a346:	out    0x7,al
  44a348:	push   ecx
  44a349:	inc    edi
  44a34a:	out    0xfe,al
	...
  44a360:	xor    BYTE PTR [ebx-0x39d77bef],ah
  44a366:	cld    
  44a367:	test   BYTE PTR [edx-0x2],dh
  44a36a:	inc    eax
  44a36b:	or     ebx,edi
  44a36d:	push   ebx
  44a36e:	icebp  
  44a36f:	or     edx,DWORD PTR ds:0x50a41143
  44a375:	ret    0x84fc
  44a378:	and    al,0xd3
  44a37a:	xlat   BYTE PTR ds:[ebx]
  44a37b:	mov    esp,0x8700caeb
  44a380:	mov    edx,es
  44a382:	xlat   BYTE PTR ds:[ebx]
  44a383:	mov    esp,0xcb484d16
  44a388:	cs inc ebp
  44a38a:	dec    eax
  44a38b:	retf   
  44a38c:	test   BYTE PTR es:[edi+0xcedd9eb],0x7d
  44a394:	ss xchg ecx,eax
  44a396:	rcl    DWORD PTR [eax-0x11],1
  44a399:	cmp    eax,0xb5e74f7b
  44a39e:	jae    0x44a32a
  44a3a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a3a1:	sub    al,0x8a
  44a3a3:	dec    edx
  44a3a4:	push   es
  44a3a5:	nop
  44a3a6:	jp     0x44a38f
  44a3a8:	xor    edx,ebx
  44a3aa:	jnp    0x44a3a4
  44a3ac:	jmp    0x26c1a2ee
  44a3b1:	jge    0x44a333
  44a3b3:	(bad)  
  44a3b4:	outs   dx,BYTE PTR ds:[esi]
  44a3b5:	fsin   
  44a3b7:	mov    fs,WORD PTR [eax]
  44a3b9:	xchg   ebp,eax
  44a3ba:	pop    esp
  44a3bb:	inc    esp
  44a3bc:	push   ecx
  44a3bd:	icebp  
  44a3be:	(bad)
  44a3c3:	mov    es,WORD PTR [eax]
	...
  44a3d5:	add    BYTE PTR [eax],al
  44a3d7:	add    BYTE PTR [eax],dh
  44a3d9:	lea    ebx,[ebx-0x7176ef72]
  44a3df:	aad    0x25
  44a3e1:	sub    bh,ch
  44a3e3:	adc    dh,dl
  44a3e5:	out    0xa9,eax
  44a3e7:	add    ebx,edi
  44a3e9:	xchg   ecx,eax
  44a3ea:	shl    esi,1
  44a3ec:	call   0xc45e:0x3bdad692
  44a3f3:	fmul   st,st(6)
  44a3f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a3f6:	xchg   ebp,eax
  44a3f7:	inc    edi
  44a3f8:	cdq    
  44a3f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a3fa:	lods   eax,DWORD PTR ds:[esi]
  44a3fb:	inc    edi
  44a3fc:	test   eax,0xa947a5a5
  44a401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a402:	adc    al,0x8f
  44a404:	jns    0x44a42e
  44a406:	adc    BYTE PTR [edi+0x43dae4f0],cl
  44a40c:	in     al,0x1b
  44a40e:	xchg   esi,eax
  44a40f:	adc    BYTE PTR [ebx+0xd],0xd9
  44a413:	mov    ds,WORD PTR [ebx+0x5c]
  44a416:	mov    al,ds:0x145e7eef
  44a41b:	adc    BYTE PTR [edx-0x5a87e39c],dl
  44a421:	pop    esi
  44a422:	and    al,0x14
  44a424:	pushf  
  44a425:	sub    DWORD PTR [ecx],ebx
  44a427:	jnp    0x44a479
  44a429:	push   ecx
  44a42a:	sti    
  44a42b:	ret    
  44a42c:	sbb    eax,0x65f0295d
  44a431:	xchg   edx,eax
  44a432:	hlt    
  44a433:	(bad)  
  44a434:	pop    edi
  44a435:	sbb    edx,ebp
  44a437:	xchg   BYTE PTR ds:0x5b4bb,cl
	...
  44a44d:	add    BYTE PTR [eax],al
  44a44f:	add    BYTE PTR [edi-0x67],cl
  44a452:	jo     0x44a415
  44a454:	popa   
  44a455:	pop    esi
  44a456:	add    BYTE PTR [ebp+esi*2+0xa448c30],ch
  44a45d:	push   ebp
  44a45e:	les    esi,FWORD PTR ds:0x2dc49e25
  44a464:	sbb    eax,0xdcbcc49e
  44a469:	jge    0x44a4bc
  44a46b:	mov    bh,0xd4
  44a46d:	push   es
  44a46e:	add    eax,0x3d5b21ba
  44a473:	std    
  44a474:	xor    eax,0xdcb86c88
  44a479:	fistp  QWORD PTR [ebp+0x20]
  44a47c:	mov    ch,0xbc
  44a47e:	mov    edi,DWORD PTR [edx+esi*2]
  44a481:	sub    DWORD PTR [esi-0x73dde5dc],eax
  44a487:	sub    al,0x76
  44a489:	and    edx,DWORD PTR [ecx+0x38]
  44a48c:	or     esp,edi
  44a48e:	nop
  44a48f:	(bad)  [ecx-0x7a56836f]
  44a495:	loope  0x44a48e
  44a497:	fsub   QWORD PTR [ebp-0x2116bf1d]
  44a49d:	mov    DWORD PTR [esi],ebx
  44a49f:	sbb    al,0x64
  44a4a1:	mov    esi,0xdd2070c0
  44a4a6:	mov    ebp,DWORD PTR [edx+ecx*8]
  44a4a9:	xor    cl,BYTE PTR [esp+eax*4-0x4a3bb1d3]
  44a4b0:	stos   BYTE PTR es:[edi],al
  44a4b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a4b2:	les    ebp,FWORD PTR [ebp+0x0]
	...
  44a4c8:	stos   BYTE PTR es:[edi],al
  44a4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a4ca:	les    ebx,FWORD PTR [edi+ebx*8]
  44a4cd:	test   BYTE PTR [ebx-0x73d4a983],al
  44a4d3:	fsub   QWORD PTR [ebp+0x2a]
  44a4d6:	xor    al,0x5e
  44a4d8:	fistp  WORD PTR [eax-0x6e639509]
  44a4de:	cmp    edx,DWORD PTR [esi+0x12]
  44a4e1:	sbb    al,0x8c
  44a4e3:	add    ch,dh
  44a4e5:	int    0xc9
  44a4e7:	je     0x44a4dd
  44a4e9:	jle    0x44a4e1
  44a4eb:	mov    WORD PTR [esi-0x35a8b7f8],?
  44a4f1:	arpl   WORD PTR [edx-0x8],di
  44a4f4:	push   edx
  44a4f5:	mov    bl,bh
  44a4f7:	dec    esi
  44a4f9:	fs add eax,0x4263bb40
  44a4ff:	clc    
  44a500:	cmp    BYTE PTR ds:0x5dab75f9,cl
  44a506:	cmp    cl,BYTE PTR [ecx+ebx*4-0x64]
  44a50a:	idiv   esi
  44a50c:	dec    esp
  44a50d:	adc    BYTE PTR [eax-0x2eee758c],bh
  44a513:	mov    DWORD PTR [ebp-0x27],ecx
  44a516:	pop    ecx
  44a517:	adc    ebx,0x11
  44a51a:	jne    0x44a4e6
  44a51c:	mov    ah,0xb2
  44a51e:	jl     0x44a505
  44a520:	ss push ss
  44a522:	jge    0x44a569
  44a524:	mov    ds:0x54fc525d,eax
  44a529:	mov    bl,0x7c
  44a52b:	in     eax,0x0
	...
  44a53d:	add    BYTE PTR [eax],al
  44a53f:	add    BYTE PTR [esi+0x16],dl
  44a542:	int3   
  44a543:	int3   
  44a544:	(bad)  
  44a545:	sbb    ah,cl
  44a547:	int3   
  44a548:	pop    ss
  44a549:	sbb    ah,cl
  44a54b:	int3   
  44a54c:	pop    es
  44a54d:	sbb    ah,cl
  44a54f:	int3   
  44a550:	mov    ds,WORD PTR [esi-0x15]
  44a553:	push   esi
  44a554:	sar    BYTE PTR [edi+0xb],0x33
  44a558:	fst    DWORD PTR [edi+edi*4-0x1]
  44a55c:	mov    esi,0xc002740a
  44a561:	jmp    0xde:0x55134d7d
  44a568:	aas    
  44a569:	loopne 0x44a5aa
  44a56b:	je     0x44a57e
  44a56d:	mov    ds:0x69623272,eax
  44a572:	std    
  44a573:	jmp    DWORD PTR [edx-0x7e]
  44a576:	fs push es
  44a578:	mov    ebx,0x62000380
  44a57d:	sub    edi,esi
  44a57f:	sub    al,0x1b
  44a581:	std    
  44a582:	dec    ebp
  44a583:	jae    0x44a5c1
  44a585:	jno    0x44a50b
  44a587:	dec    edx
  44a588:	jb     0x44a58f
  44a58a:	mov    bh,0x13
  44a58c:	xor    dl,BYTE PTR [ecx-0x33]
  44a58f:	clc    
  44a590:	ja     0x44a58c
  44a592:	or     eax,0x7c036240
  44a597:	clc    
  44a598:	aaa    
  44a599:	xchg   DWORD PTR [eax+0x12],edi
  44a59c:	es mov ah,0xc3
  44a59f:	(bad)  
  44a5a0:	fidivr DWORD PTR [edi]
  44a5a2:	idiv   DWORD PTR [eax+eax*1+0x0]
	...
  44a5b6:	add    BYTE PTR [eax],al
  44a5b8:	call   0x3cf2:0xa15ad87e
  44a5bf:	pop    ecx
  44a5c0:	aaa    
  44a5c1:	inc    ebx
  44a5c2:	dec    eax
  44a5c3:	retf   
  44a5c4:	sahf   
  44a5c5:	int3   
  44a5c6:	mov    ebp,ebx
  44a5c8:	sub    al,0xc7
  44a5ca:	mov    edi,DWORD PTR [edx+0x6e]
  44a5cd:	add    edi,DWORD PTR [edi]
  44a5cf:	clc    
  44a5d0:	fisttp WORD PTR [esi-0x10]
  44a5d3:	adc    al,0xd9
  44a5d5:	jle    0x44a557
  44a5d7:	mov    edi,0xf8d378ee
  44a5dc:	ja     0x44a5fa
  44a5de:	adc    eax,DWORD PTR [eax+0x62]
  44a5e1:	mov    bl,0x65
  44a5e3:	push   eax
  44a5e4:	mov    eax,0xda126e80
  44a5e9:	retf   0xffc0
  44a5ec:	loopne 0x44a62a
  44a5ee:	add    al,0x59
  44a5f0:	jmp    0x219f742b
  44a5f5:	out    dx,al
  44a5f6:	mov    ebp,ebx
  44a5f8:	fldln2 
  44a5fa:	or     BYTE PTR [ebp+0x2a],bh
  44a5fd:	ficomp DWORD PTR [esi-0x7f]
  44a600:	sbb    al,0x6
  44a602:	jmp    0x44a58e
  44a604:	dec    esp
  44a605:	aad    0xac
  44a607:	inc    edx
  44a608:	sbb    DWORD PTR [esi-0x61d6b7eb],ebx
  44a60e:	sub    eax,0x259e2948
  44a613:	dec    eax
  44a614:	sbb    DWORD PTR [esi+0x62f98a94],ebx
  44a61a:	pushf  
  44a61b:	or     eax,DWORD PTR [eax]
	...
  44a62d:	add    BYTE PTR [eax],al
  44a62f:	add    BYTE PTR [ebx-0x69b84627],ah
  44a635:	fstp   DWORD PTR [esi]
  44a637:	les    esp,FWORD PTR [ecx+0x49]
  44a63a:	sbb    eax,0xa997c5c3
  44a63f:	or     esp,DWORD PTR [edx-0x64]
  44a642:	stos   BYTE PTR es:[edi],al
  44a643:	add    esp,DWORD PTR [ebx-0x672c19e7]
  44a649:	sbb    ch,dl
  44a64b:	ds gs jmp 0xd9a2ef7b
  44a652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a653:	ret    
  44a654:	jno    0x44a60f
  44a656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44a657:	ret    0x978d
  44a65a:	sub    DWORD PTR [edx+esi*1],ebx
  44a65d:	lahf   
  44a65e:	sub    al,BYTE PTR [ebx+eiz*4]
  44a661:	sbb    esi,ebx
  44a663:	add    esp,DWORD PTR [edx-0x27]
  44a666:	jmp    0xea1a5643
  44a66b:	inc    edi
  44a66c:	cdq    
  44a66d:	popf   
  44a66e:	xchg   ebp,eax
  44a66f:	inc    edi
  44a670:	sub    DWORD PTR [ebp-0x62d6b853],ebx
  44a676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44a677:	inc    edi
  44a678:	sbb    DWORD PTR [ebp-0x270e7ea4],ebx
  44a67e:	jmp    0xe9339b86
  44a683:	add    esp,DWORD PTR [edx+0x27]
  44a686:	fild   WORD PTR gs:[ecx-0x4845ff27]
  44a68d:	clc    
  44a68e:	mov    DWORD PTR [ecx-0x5003b220],edi
	...
  44a6a8:	adc    cl,BYTE PTR [ebx-0x2926947b]
  44a6ae:	add    cl,ch
  44a6b0:	(bad)  
  44a6b1:	out    dx,eax
  44a6b2:	add    cl,ch
  44a6b4:	popa   
  44a6b5:	mov    esp,0xbde6cfee
  44a6ba:	sub    DWORD PTR [ecx],0xffffffed
  44a6bd:	push   ss
  44a6be:	outs   dx,BYTE PTR ds:[esi]
  44a6bf:	cmp    al,0xda
  44a6c1:	or     esi,DWORD PTR [ebp-0x1d]
  44a6c4:	popa   
  44a6c5:	fnstcw WORD PTR [ecx+0xd961fa]
  44a6cb:	ins    BYTE PTR es:[edi],dx
  44a6cc:	lods   eax,DWORD PTR ds:[esi]
  44a6cd:	mov    ecx,0xf837da00
  44a6d2:	mov    ecx,ebx
  44a6d4:	loopne 0x44a723
  44a6d6:	cld    
  44a6d7:	scas   eax,DWORD PTR es:[edi]
  44a6d8:	mov    dl,0x8a
  44a6da:	mov    eax,0xd961e8
  44a6df:	(bad)  
  44a6e0:	(bad)  
  44a6e1:	or     ecx,DWORD PTR [ebp+0x33d961e5]
  44a6e7:	test   eax,0xf7a50be9
  44a6ec:	popa   
  44a6ed:	(bad)  [ecx+0xe7b66b]
  44a6f3:	jmp    0xdff5b2e0
  44a6f8:	popa   
  44a6f9:	(bad)  [ecx+0xe7c66b]
  44a6ff:	jmp    0x9e08f393
  44a704:	stos   BYTE PTR es:[edi],al
  44a705:	mov    al,ds:0xa0aab5c4
  44a70a:	les    ebp,FWORD PTR [ebp+0x0]
	...
  44a720:	call   0x5180:0xdb3cc4a0
  44a727:	(bad)  
  44a728:	(bad)  
  44a729:	sbb    al,0xd
  44a72b:	add    BYTE PTR [ebx-0x27],cl
  44a72e:	inc    ebp
  44a72f:	push   esi
  44a730:	mov    al,0x7c
  44a732:	dec    DWORD PTR [edx+0xb5b458f]
  44a738:	or     ebx,ecx
  44a73a:	mov    ecx,DWORD PTR [esi*2+0x40fc5a60]
  44a741:	pop    ds
  44a742:	or     DWORD PTR [edi+0xd5da],ecx
  44a748:	cs mov esp,0x7573b47d
  44a74e:	cld    
  44a74f:	(bad)  
  44a750:	sti    
  44a751:	popa   
  44a752:	fwait
  44a753:	mov    bh,cl
  44a755:	loope  0x44a757
  44a757:	add    BYTE PTR [ebp+edi*1+0x3dccb713],bh
  44a75e:	sbb    ebx,DWORD PTR [edi+0x72c5d1e5]
  44a764:	sar    BYTE PTR [ebx+0xf],cl
  44a767:	mov    dh,BYTE PTR [edi]
  44a769:	mov    ecx,DWORD PTR [edi+0x14]
  44a76c:	retf   
  44a76d:	fdivr  DWORD PTR [ebp-0x4c]
  44a770:	xor    esi,DWORD PTR [ecx-0x2d440004]
  44a776:	mov    WORD PTR [esi],es
  44a778:	repz fadd QWORD PTR [eax]
  44a77b:	add    BYTE PTR [eax+ebx*8],dh
  44a77e:	aaa    
  44a77f:	mov    esi,edi
  44a781:	pusha  
  44a782:	pop    ebx
  44a783:	or     eax,DWORD PTR [eax]
	...
  44a795:	add    BYTE PTR [eax],al
  44a797:	add    BYTE PTR [ebx-0x28],bh
  44a79a:	jge    0x44a7f1
  44a79c:	scas   eax,DWORD PTR es:[edi]
  44a79d:	aad    0xb1
  44a79f:	adc    al,0x14
  44a7a1:	aad    0xb1
  44a7a3:	sbb    al,0xf4
  44a7a5:	lods   eax,DWORD PTR ds:[esi]
  44a7a6:	sub    al,0xd3
  44a7a8:	sub    DWORD PTR [ebp-0x643fec8e],edx
  44a7ae:	sti    
  44a7af:	mov    bl,bh
  44a7b1:	fstp   DWORD PTR [eax+0x14]
  44a7b4:	cmp    ebx,eax
  44a7b6:	cs pushf 
  44a7b8:	bound  edi,QWORD PTR [ebx+ebx*8+0x13]
  44a7bc:	bound  eax,QWORD PTR [edx-0x1316d61b]
  44a7c2:	add    al,0x87
  44a7c4:	div    BYTE PTR [ecx]
  44a7c6:	rol    BYTE PTR [edx+eiz*2],1
  44a7c9:	or     BYTE PTR [eax+0x3a6b28f],0x0
  44a7d0:	jmp    0xdc0ba905
  44a7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44a7d6:	or     esi,DWORD PTR ds:0x8481a418
  44a7dc:	scas   eax,DWORD PTR es:[edi]
  44a7dd:	push   ds
  44a7de:	mov    ecx,DWORD PTR [ebx+0x835b2]
  44a7e4:	bound  ebp,QWORD PTR [eax+ebx*8-0x7c]
  44a7e8:	jmp    DWORD PTR [eax+eax*2-0x7c]
  44a7ec:	aaa    
  44a7ed:	mov    esi,0x946a4a88
  44a7f2:	mov    dl,BYTE PTR [ebx+0x84dda]
  44a7f8:	bound  eax,QWORD PTR [edi-0x78]
  44a7fb:	loop   0x44a7fd
	...
  44a80d:	add    BYTE PTR [eax],al
  44a80f:	add    BYTE PTR [edi],bl
  44a811:	mov    edi,0x35f29b8a
  44a816:	or     BYTE PTR [eax],al
  44a818:	bound  ebp,QWORD PTR [eax+ebx*8-0x7c]
  44a81c:	mov    edi,0xaecb4064
  44a821:	in     eax,dx
  44a822:	aas    
  44a823:	retf   
  44a824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a825:	inc    ebp
  44a826:	inc    eax
  44a827:	retf   
  44a828:	sahf   
  44a829:	cmp    eax,0xcc96cb40
  44a82e:	ja     0x44a81b
  44a830:	loope  0x44a87f
  44a832:	adc    al,0x85
  44a834:	adc    edi,DWORD PTR [esi-0x32]
  44a837:	test   BYTE PTR [ebx+0x7],cl
  44a83a:	mov    dh,0x7
  44a83c:	fucomi st,st(4)
  44a83e:	push   esp
  44a83f:	test   BYTE PTR [ebx-0x7],dh
  44a842:	(bad)  
  44a844:	jmp    0xb04ce122
  44a849:	pusha  
  44a84a:	sub    al,0x64
  44a84c:	fisubr WORD PTR [eax]
  44a84e:	loop   0x44a82a
  44a850:	out    0x10,al
  44a852:	cli    
  44a853:	ss sbb eax,0x5a681461
  44a859:	inc    edx
  44a85a:	cwde   
  44a85b:	jg     0x44a87c
  44a85d:	cdq    
  44a85e:	mov    edx,DWORD PTR [edi+eiz*2]
  44a861:	lahf   
  44a862:	pusha  
  44a863:	jl     0x44a8be
  44a865:	fsubp  st(1),st
  44a867:	add    esp,ebp
  44a869:	popa   
  44a86a:	test   eax,0x608b05fe
  44a86f:	jl     0x44a812
  44a871:	fsubp  st(1),st
  44a873:	add    eax,DWORD PTR [eax]
	...
  44a885:	add    BYTE PTR [eax],al
  44a887:	add    ch,bl
  44a889:	popa   
  44a88a:	mov    cl,0xfe
  44a88c:	in     eax,dx
  44a88d:	mov    dh,BYTE PTR [eax+0x7c]
  44a890:	cdq    
  44a891:	fsubp  st(1),st
  44a893:	add    esp,ebp
  44a895:	popa   
  44a896:	cdq    
  44a897:	(bad)  
  44a898:	aad    0x8a
  44a89a:	jo     0x44a918
  44a89c:	xor    esi,ebx
  44a89e:	jmp    0xb1a685a6
  44a8a3:	(bad)  
  44a8a4:	mov    ebp,0x117c628a
  44a8a9:	in     eax,0xe9
  44a8ab:	add    esp,edi
  44a8ad:	gs jno 0x44a880
  44a8b0:	pop    esi
  44a8b1:	fldl2t 
  44a8b3:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  44a8b5:	repz pusha 
  44a8b7:	shl    dh,0xd7
  44a8ba:	jb     0x44a937
  44a8bc:	xor    ebp,esp
  44a8be:	jmp    0x28c7dfc6
  44a8c3:	jge    0x44a8dd
  44a8c5:	mov    cl,0x60
  44a8c7:	lock jns 0x44a92a
  44a8ca:	xor    al,0x6c
  44a8cc:	in     al,dx
  44a8cd:	(bad)  
  44a8ce:	hlt    
  44a8cf:	add    eax,0xe600d962
  44a8d4:	loop   0x44a8f9
  44a8d6:	add    ch,cl
  44a8d8:	popa   
  44a8d9:	pop    esi
  44a8da:	mov    WORD PTR [ecx+0x1d],?
  44a8dd:	aad    0x0
  44a8df:	jmp    0x5431d0aa
  44a8e4:	jb     0x44a871
  44a8e6:	imul   ecx
  44a8e8:	push   esp
  44a8e9:	call   0x0:0xb303
	...
  44a900:	scas   al,BYTE PTR es:[edi]
  44a901:	daa    
  44a902:	in     eax,0x70
  44a904:	and    bh,BYTE PTR [edx-0x70]
  44a907:	bound  esp,QWORD PTR [edx]
  44a909:	xchg   BYTE PTR [ebx+0x444860d8],cl
  44a90f:	jp     0x44a978
  44a911:	loopne 0x44a8c2
  44a913:	lods   eax,DWORD PTR ds:[esi]
  44a914:	test   BYTE PTR [eax+eax*2-0xef5eee],cl
  44a91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44a91c:	je     0x44a8bf
  44a91e:	mov    DWORD PTR [ecx+edi*2-0x33527608],edi
  44a925:	mov    edi,DWORD PTR [edx]
  44a927:	pushf  
  44a928:	cmp    DWORD PTR [ecx],edx
  44a92a:	inc    eax
  44a92b:	vptestmb k4{k6},zmm1,zmm5
  44a931:	adc    DWORD PTR ds:0x33d961f2,esi
  44a937:	pop    ds
  44a938:	mov    WORD PTR [eax+0x7c34e374],gs
  44a93e:	sub    edi,esi
  44a940:	das    
  44a941:	psraw  mm6,QWORD PTR [edx+0x6d]
  44a945:	dec    eax
  44a946:	pop    es
  44a947:	ds dec ebp
  44a949:	pop    esp
  44a94a:	add    ebx,DWORD PTR [edi]
  44a94c:	pusha  
  44a94d:	inc    eax
  44a94e:	(bad)  
  44a94f:	call   0xe952db5d
  44a954:	popa   
  44a955:	push   esp
  44a956:	inc    ebp
  44a957:	mov    ch,0xe5
  44a959:	xchg   edx,eax
  44a95a:	ins    BYTE PTR es:[edi],dx
  44a95b:	stc    
  44a95c:	bound  ecx,QWORD PTR [eax+0x4c]
  44a95f:	add    BYTE PTR [edx],cl
  44a961:	shl    ebp,cl
  44a963:	aad    0x0
	...
  44a975:	add    BYTE PTR [eax],al
  44a977:	add    BYTE PTR [eax+edi*1-0x30],dh
  44a97b:	add    DWORD PTR [ebx+0x4b001139],edi
  44a981:	push   es
  44a982:	jnp    0x44a980
  44a984:	rcl    BYTE PTR [eax+0x17e83ef],1
  44a98a:	add    al,0xff
  44a98c:	xchg   cl,bh
  44a98e:	jb     0x44a91c
  44a990:	mov    esi,0xff840903
  44a995:	fld    QWORD PTR [eax]
  44a997:	add    BYTE PTR [esi+0x3c6f49],dh
  44a99d:	fld    QWORD PTR [eax]
  44a99f:	mov    esi,DWORD PTR [esi+0x9]
  44a9a2:	aas    
  44a9a3:	data16 js 0x44a9ef
  44a9a6:	aas    
  44a9a7:	cmp    al,0x10
  44a9a9:	fld    QWORD PTR [eax]
  44a9ab:	add    BYTE PTR [esi+0x3c3f61],al
  44a9b1:	fld    QWORD PTR [eax]
  44a9b3:	jne    0x44a9bf
  44a9b5:	or     BYTE PTR [esp+0xdcfb],ah
  44a9bc:	dec    eax
  44a9bd:	daa    
  44a9be:	test   BYTE PTR [eax-0x63],0x5d
  44a9c2:	sub    eax,0x6202ef00
  44a9c7:	cmp    DWORD PTR [edi],0x45
  44a9ca:	cmp    DWORD PTR [ebx],ecx
  44a9cc:	retf   
  44a9cd:	fdivr  st(6),st
  44a9cf:	mov    ecx,0xfff80a64
  44a9d4:	fstp   st(3)
  44a9d6:	mov    WORD PTR [eax-0x19],cs
  44a9d9:	test   edi,esi
  44a9db:	inc    DWORD PTR [eax]
	...
  44a9f1:	(bad)  
  44a9f2:	popa   
  44a9f3:	add    DWORD PTR [ebp+ebx*2+0x1fe02e9],esi
  44a9fa:	jns    0x44a9b3
  44a9fc:	adc    BYTE PTR [edi+0x446285fb],ch
  44aa02:	out    dx,eax
  44aa03:	push   0xffffffeb
  44aa05:	adc    eax,0xdfb50861
  44aa0a:	jnp    0x44aa86
  44aa0c:	outs   dx,BYTE PTR ds:[esi]
  44aa0d:	std    
  44aa0e:	jo     0x44aa83
  44aa10:	mov    dh,0xfb
  44aa12:	mov    dh,0xef
  44aa14:	out    0xd,eax
  44aa16:	jl     0x44aa73
  44aa18:	pop    ecx
  44aa19:	jb     0x44aa1e
  44aa1b:	mov    ebp,ecx
  44aa1d:	jno    0x44aa22
  44aa1f:	add    BYTE PTR [edx-0x5],ah
  44aa22:	sar    ebx,0x35
  44aa25:	in     eax,0x6c
  44aa27:	jl     0x44aa65
  44aa29:	jbe    0x44aaa5
  44aa2b:	jb     0x44aa6f
  44aa2d:	fwait
  44aa2e:	mov    dh,0xe7
  44aa30:	popf   
  44aa31:	lahf   
  44aa32:	add    BYTE PTR [ecx-0x7502046a],dh
  44aa38:	xchg   esi,eax
  44aa39:	or     edi,esi
  44aa3b:	xor    al,0x8
  44aa3d:	scas   al,BYTE PTR es:[edi]
  44aa3e:	or     al,BYTE PTR [ebp-0x7bae24e8]
  44aa44:	stc    
  44aa45:	cli    
  44aa46:	(bad)  
  44aa47:	xlat   BYTE PTR ds:[ebx]
  44aa48:	pop    ebp
  44aa49:	pop    es
  44aa4a:	clc    
  44aa4b:	test   BYTE PTR [ebp+0x57],dl
  44aa4e:	push   0xfffffffe
  44aa50:	adc    eax,0x195a
	...
  44aa65:	add    BYTE PTR [eax],al
  44aa67:	add    BYTE PTR [edx-0x60],ah
  44aa6a:	jp     0x44aa7d
  44aa6c:	int    0x4c
  44aa6e:	outs   dx,DWORD PTR ds:[esi]
  44aa6f:	test   BYTE PTR [edi-0x12],al
  44aa72:	je     0x44aae6
  44aa74:	ret    0x70f4
  44aa77:	jb     0x44aa6f
  44aa79:	cli    
  44aa7a:	out    0xeb,al
  44aa7c:	loope  0x44aa6c
  44aa7e:	std    
  44aa7f:	inc    ebp
  44aa80:	fild   DWORD PTR [eax+ebx*2]
  44aa83:	jb     0x44aa79
  44aa85:	outs   dx,BYTE PTR ds:[esi]
  44aa86:	rcl    DWORD PTR [ecx+ebp*8-0x24],1
  44aa8a:	(bad)  
  44aa8b:	mov    esp,0x40add89e
  44aa90:	cdq    
  44aa91:	xchg   esp,eax
  44aa92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44aa93:	inc    eax
  44aa94:	test   eax,0x897b3494
  44aa99:	pop    ebx
  44aa9a:	mov    ch,0x14
  44aa9c:	pop    ds
  44aa9d:	das    
  44aa9e:	pop    ss
  44aa9f:	jnp    0x44ab0d
  44aaa1:	push   ebx
  44aaa2:	mov    eax,ds:0xec1f12ff
  44aaa7:	xor    ah,BYTE PTR [edi+ebx*4]
  44aaaa:	sbb    al,0x6c
  44aaac:	dec    edx
  44aaad:	xchg   DWORD PTR [esi-0x65e32391],ebx
  44aab3:	and    DWORD PTR [edi+0x61f25cde],0x65f9a95c
  44aabd:	inc    eax
  44aabe:	jae    0x44aac4
  44aac0:	(bad)  
  44aac1:	fldenv [esp+esi*8+0x1e]
  44aac5:	dec    edi
  44aac6:	outs   dx,BYTE PTR ds:[esi]
  44aac7:	outs   dx,DWORD PTR ds:[esi]
  44aac8:	adc    eax,0x7cff87
	...
  44aadd:	add    BYTE PTR [eax],al
  44aadf:	add    BYTE PTR [ecx+0x2e88e766],ah
  44aae5:	xlat   BYTE PTR ds:[ebx]
  44aae6:	jno    0x44aa7c
  44aae8:	std    
  44aae9:	xchg   cl,ch
  44aaeb:	and    BYTE PTR [edx],0xe0
  44aaee:	stos   BYTE PTR es:[edi],al
  44aaef:	jl     0x44ab59
  44aaf1:	test   DWORD PTR [edx-0xf],esi
  44aaf4:	pop    ebp
  44aaf5:	push   eax
  44aaf6:	xchg   esp,eax
  44aaf7:	ja     0x44aadf
  44aaf9:	and    al,0x3a
  44aafb:	jnp    0x44ab13
  44aafd:	push   ebx
  44aafe:	test   BYTE PTR [edi+0x5a],ch
  44ab01:	dec    esi
  44ab02:	add    al,dl
  44ab04:	mov    gs,WORD PTR [eax-0x6588f86c]
  44ab0a:	xchg   ebp,eax
  44ab0b:	in     eax,0x6e
  44ab0d:	scas   eax,DWORD PTR es:[edi]
  44ab0e:	test   cl,bh
  44ab10:	inc    ebx
  44ab11:	fcom   DWORD PTR [ebp-0x79]
  44ab14:	sub    ebx,edx
  44ab16:	jmp    0xfb321e
  44ab1b:	ins    BYTE PTR es:[edi],dx
  44ab1c:	push   ds
  44ab1d:	or     cl,BYTE PTR [edi]
  44ab1f:	mov    dl,0x9a
  44ab21:	mov    gs,WORD PTR [ecx+esi*8+0x7f]
  44ab25:	cmp    DWORD PTR [esi+eiz*2-0x73],0x7fe900dc
  44ab2d:	cmp    DWORD PTR [edi-0x73],0xd2f7866b
  44ab34:	dec    edx
  44ab35:	add    al,0xfb
  44ab37:	repz dec esp
  44ab39:	fistp  WORD PTR [esi-0x4a]
  44ab3c:	fadd   QWORD PTR [ebp+0xa]
  44ab3f:	jmp    0xf4427a5
	...
  44ab58:	mov    ch,0x59
  44ab5a:	mov    esp,0x33d961f3
  44ab5f:	mov    ebx,0x64f91bb6
  44ab64:	cwde   
  44ab65:	or     ecx,DWORD PTR [ebx]
  44ab67:	inc    eax
  44ab68:	stos   DWORD PTR es:[edi],eax
  44ab69:	xchg   bh,dh
  44ab6b:	jmp    0x82489f52
  44ab70:	outs   dx,DWORD PTR ds:[esi]
  44ab71:	int3   
  44ab72:	ret    
  44ab73:	hlt    
  44ab74:	or     ecx,DWORD PTR [edi-0x2]
  44ab77:	call   0xd8ca84dd
  44ab7c:	jb     0x44abfb
  44ab7e:	or     BYTE PTR [eax-0x16ff26a4],dl
  44ab84:	loop   0x44ab7c
  44ab86:	cmc    
  44ab87:	push   0x1a
  44ab89:	cmp    ah,0x3d
  44ab8c:	mov    ds:0xa4696d89,al
  44ab91:	pop    ds
  44ab92:	pop    esp
  44ab93:	bound  edi,QWORD PTR [edx]
  44ab95:	and    eax,esp
  44ab97:	xor    eax,0x2dc49285
  44ab9c:	jge    0x44ab30
  44ab9e:	les    edi,FWORD PTR [eax+edi*1+0x5cfd8372]
  44aba5:	adc    al,0x4f
  44aba7:	add    BYTE PTR [eax],dh
  44aba9:	or     BYTE PTR [ecx],cl
  44abab:	mov    bh,0xfd
  44abad:	xlat   BYTE PTR ds:[ebx]
  44abae:	and    eax,0xef02f4d2
  44abb3:	mov    esi,0x7cfff925
  44abb9:	repz jle 0x44ac19
	...
  44abd0:	xchg   edi,eax
  44abd1:	add    eax,0x9dc4073e
  44abd6:	out    dx,eax
  44abd7:	add    al,0x7b
  44abd9:	fld    DWORD PTR [eax]
  44abdb:	test   eax,eax
  44abdd:	lea    ecx,[ebx]
  44abdf:	mov    ecx,0xddd1
  44abe4:	add    al,0x9d
  44abe6:	out    dx,eax
  44abe7:	add    edi,DWORD PTR [ebx]
  44abe9:	fld    DWORD PTR [eax]
  44abeb:	test   esp,edi
  44abed:	xchg   BYTE PTR [edi+0x35],bh
  44abf0:	inc    esi
  44abf1:	fld    DWORD PTR [eax]
  44abf3:	add    DWORD PTR ds:0x568941dc,0xd
  44abfa:	jg     0x44ac79
  44abfc:	shl    DWORD PTR [edx],cl
  44abfe:	idiv   bh
  44ac00:	or     ebx,ecx
  44ac02:	jge    0x44ac03
  44ac04:	xor    BYTE PTR [edi+eiz*8+0xf],0x54
  44ac09:	mov    dh,0x7d
  44ac0b:	jne    0x44abb4
  44ac0d:	fcmovb st,st(5)
  44ac0f:	mov    DWORD PTR [esi],edx
  44ac11:	std    
  44ac12:	jle    0x44ac91
  44ac14:	xchg   edi,eax
  44ac15:	add    BYTE PTR [ebx-0x4],dl
  44ac18:	push   eax
  44ac19:	sub    BYTE PTR [ebx+0x8],bh
  44ac1c:	pusha  
  44ac1d:	push   cs
  44ac1e:	or     DWORD PTR [esp+edx*4-0x2fffff2f],eax
  44ac25:	stos   DWORD PTR es:[edi],eax
  44ac26:	out    dx,eax
  44ac27:	ucomiss xmm7,DWORD PTR [edi+esi*8]
  44ac2b:	(bad)  
  44ac2c:	mov    ebx,0xcb24a403
  44ac31:	fadd   DWORD PTR [eax]
	...
  44ac47:	add    BYTE PTR [edx+0x7b],ah
  44ac4a:	lods   al,BYTE PTR ds:[esi]
  44ac4b:	mov    ebx,0xfff954f2
  44ac50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44ac51:	pop    es
  44ac52:	jne    0x44ac0f
  44ac54:	je     0x44acc8
  44ac56:	add    esi,DWORD PTR [esi+0x37272]
  44ac5c:	cmp    ebx,ebp
  44ac5e:	sub    esi,eax
  44ac60:	add    al,0x1d
  44ac62:	div    BYTE PTR [eax+0x5e762b6]
  44ac68:	bound  esi,QWORD PTR [edx-0x23]
  44ac6b:	test   BYTE PTR [esp+ebx*1-0x352622ae],dl
  44ac72:	hlt    
  44ac73:	popa   
  44ac74:	imul   esp,DWORD PTR [edx],0xffffffac
  44ac77:	adc    DWORD PTR [edx+0x72],esp
  44ac7a:	hlt    
  44ac7b:	mov    cl,0xea
  44ac7d:	or     DWORD PTR [esi],ecx
  44ac7f:	add    BYTE PTR [edx+0x7],ah
  44ac82:	aam    0x13
  44ac84:	jmp    0xf486:0xa2f91285
  44ac8b:	mov    cl,0xca
  44ac8d:	sub    BYTE PTR [esi],cl
  44ac8f:	add    BYTE PTR [edx+0x7],ah
  44ac92:	mov    esp,0xf4e1e913
  44ac97:	xchg   DWORD PTR [esi-0x5f],esi
  44ac9a:	js     0x44ac2b
  44ac9c:	into   
  44ac9d:	stos   DWORD PTR es:[edi],eax
  44ac9e:	add    eax,DWORD PTR [eax]
  44aca0:	rol    DWORD PTR [ecx+0x71fdfea8],cl
  44aca6:	add    edi,edi
  44aca8:	lea    eax,[esi+0xc619]
	...
  44acbe:	add    BYTE PTR [eax],al
  44acc0:	test   BYTE PTR [edi-0x276975ab],bh
  44acc6:	ins    BYTE PTR es:[edi],dx
  44acc7:	popa   
  44acc8:	jmp    0x44accb
  44acca:	lods   al,BYTE PTR ds:[esi]
  44accb:	adc    DWORD PTR [edx+0x72],esp
  44acce:	js     0x44ad42
  44acd0:	(bad)  
  44acd1:	push   ss
  44acd2:	adc    BYTE PTR [edx-0x27],ah
  44acd5:	fdiv   DWORD PTR [ebp-0x4d]
  44acd8:	cmp    edi,ecx
  44acda:	jmp    0xbecece2
  44acdf:	in     eax,0x64
  44ace1:	imul   edx,DWORD PTR [ecx+0x15],0x3cead962
  44ace8:	inc    esp
  44ace9:	idiv   BYTE PTR es:[ecx-0x23]
  44aced:	inc    esp
  44acee:	xlat   BYTE PTR ds:[ebx]
  44acef:	add    esp,DWORD PTR [edx-0x2c]
  44acf2:	pop    esp
  44acf3:	in     al,0x8a
  44acf5:	sbb    esi,0x5d
  44acf8:	ins    BYTE PTR es:[edi],dx
  44acf9:	fucomp st(1)
  44acfb:	add    esp,ecx
  44acfd:	mov    bl,dh
  44acff:	jg     0x44aca7
  44ad01:	fldl2t 
  44ad03:	add    ebp,DWORD PTR [edi]
  44ad05:	push   cs
  44ad06:	into   
  44ad07:	sti    
  44ad08:	loope  0x44ad39
  44ad0a:	jmp    0x77170f12
  44ad0f:	js     0x44ad0e
  44ad11:	add    esp,esp
  44ad13:	add    esp,DWORD PTR [edx+0x42]
  44ad16:	stc    
  44ad17:	add    esp,DWORD PTR [edx-0x27]
  44ad1a:	shr    BYTE PTR [esp+ebx*8+0x14],cl
  44ad1e:	xchg   edx,eax
  44ad1f:	jg     0x44ad06
  44ad21:	inc    ebp
  44ad22:	out    dx,eax
  44ad23:	add    eax,DWORD PTR [eax]
	...
  44ad35:	add    BYTE PTR [eax],al
  44ad37:	add    BYTE PTR [edx-0x42],ah
  44ad3a:	scas   al,BYTE PTR es:[edi]
  44ad3b:	jmp    0x5c5:0x902ed285
  44ad42:	in     al,0x3
  44ad44:	bound  edx,QWORD PTR [eax+0xc]
  44ad47:	pop    eax
  44ad48:	and    DWORD PTR [esi-0x2e5a80b5],0x70
  44ad4f:	rol    DWORD PTR [ecx],0xfc
  44ad52:	loopne 0x44ace7
  44ad54:	mov    ch,0xeb
  44ad56:	jmp    0xd66e8c5e
  44ad5b:	jge    0x44adba
  44ad5d:	inc    ecx
  44ad5e:	iret   
  44ad5f:	add    esp,DWORD PTR [edx+0x51]
  44ad62:	add    ch,ch
  44ad64:	jbe    0x44adc2
  44ad66:	cmp    eax,0xd215f45
  44ad6b:	jb     0x44ad3b
  44ad6d:	out    0x8b,al
  44ad6f:	mov    cl,0xb9
  44ad71:	pop    esp
  44ad72:	nop
  44ad73:	push   eax
  44ad74:	push   eax
  44ad75:	fld    DWORD PTR [eax]
  44ad77:	popa   
  44ad78:	push   edx
  44ad79:	ror    BYTE PTR [ebx+0xe8ca59],1
  44ad7f:	jmp    0xe929ac98
  44ad84:	cdq    
  44ad85:	out    0xb1,al
  44ad87:	fldenv [edi-0x65]
  44ad8a:	pop    esi
  44ad8b:	mov    edx,0xe1455d18
  44ad90:	cli    
  44ad91:	and    eax,0x51eed90b
  44ad96:	mov    ah,0xf7
  44ad98:	popa   
  44ad99:	(bad)  [ebx+0x1c]
	...
  44adaf:	add    dl,cl
  44adb1:	clc    
  44adb2:	mov    DWORD PTR [ecx-0x16ff17f7],eax
  44adb8:	lods   al,BYTE PTR ds:[esi]
  44adb9:	jecxz  0x44ae19
  44adbb:	(bad)  
  44adbc:	std    
  44adbd:	xor    DWORD PTR [ebx+esi*8+0x61],esi
  44adc1:	fstp   DWORD PTR [esi-0x46]
  44adc4:	rcr    BYTE PTR [ebp-0x78],0x55
  44adc8:	push   ebx
  44adc9:	fld    DWORD PTR [eax]
  44adcb:	pop    es
  44adcc:	daa    
  44adcd:	dec    edx
  44adce:	mov    eax,0x3d961df
  44add3:	sub    al,0x86
  44add5:	pop    ebx
  44add6:	mov    BYTE PTR ds:0xc200d973,dh
  44addc:	lods   al,BYTE PTR ds:[esi]
  44addd:	pop    ebx
  44adde:	dec    ebp
  44addf:	gs clc 
  44ade1:	dec    eax
  44ade2:	mov    BYTE PTR [edi-0x69087e09],bl
  44ade8:	push   ecx
  44ade9:	fld    DWORD PTR [eax]
  44adeb:	jmp    0xce3834
  44adf0:	push   ss
  44adf1:	out    dx,al
  44adf2:	jl     0x44ad7c
  44adf4:	push   edi
  44adf5:	call   0xbf14adfa
  44adfa:	jns    0x44ae63
  44adfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44adfd:	inc    esi
  44adfe:	xchg   DWORD PTR [ecx+esi*4-0x1176ff2b],edi
  44ae05:	sub    DWORD PTR [edx-0x2d],esp
  44ae08:	pop    ecx
  44ae09:	add    eax,DWORD PTR [eax+0x8]
  44ae0c:	inc    edx
  44ae0d:	cdq    
  44ae0e:	jecxz  0x44ae76
  44ae10:	xchg   edx,eax
  44ae11:	gs scas eax,DWORD PTR es:[edi]
  44ae13:	push   ss
	...
  44ae28:	mov    edx,ebp
  44ae2a:	jge    0x44ae7c
  44ae2c:	scas   eax,DWORD PTR es:[edi]
  44ae2d:	add    edi,DWORD PTR [eax-0x48]
  44ae30:	lods   eax,DWORD PTR ds:[esi]
  44ae31:	aad    0x0
  44ae33:	mov    BYTE PTR [edi-0x60ba821a],cl
  44ae39:	aad    0x58
  44ae3b:	adc    al,0x0
  44ae3d:	jne    0x44ae52
  44ae3f:	mov    eax,DWORD PTR [ebx-0x7b]
  44ae42:	jge    0x44add4
  44ae44:	loop   0x44ae31
  44ae46:	add    BYTE PTR [eax],al
  44ae48:	shr    ecx,cl
  44ae4a:	or     DWORD PTR [ebx+0x1131ab],ecx
  44ae50:	cmp    edi,esi
  44ae52:	jp     0x44ae40
  44ae54:	dec    edx
  44ae55:	xchg   ebp,eax
  44ae56:	adc    esi,DWORD PTR [ecx+0x66bedf3b]
  44ae5c:	call   0xd3922b83
  44ae61:	or     BYTE PTR [edx+ecx*1-0x65],dl
  44ae65:	add    al,0x88
  44ae67:	mov    esp,0x8b00dd2d
  44ae6c:	outs   dx,BYTE PTR ds:[esi]
  44ae6d:	icebp  
  44ae6e:	popa   
  44ae6f:	mov    DWORD PTR [ebx+0x2d],edx
  44ae72:	adc    DWORD PTR [eax],eax
  44ae74:	or     ebx,DWORD PTR [esi]
  44ae76:	push   cs
  44ae77:	data16 jo 0x44aea7
  44ae7a:	mov    ebx,0x372620a
  44ae7f:	bound  edx,QWORD PTR [ecx]
  44ae81:	sbb    bl,ah
  44ae83:	push   es
  44ae84:	sbb    bl,BYTE PTR [ebx+0x12]
  44ae87:	add    BYTE PTR [edx+0x73],ah
  44ae8a:	scas   al,BYTE PTR es:[edi]
  44ae8b:	test   DWORD PTR [eax],0x0
	...
  44ae9d:	add    BYTE PTR [eax],al
  44ae9f:	add    bl,bl
  44aea1:	cli    
  44aea2:	test   al,0x11
  44aea4:	bound  esi,QWORD PTR [edx+0x74]
  44aea7:	xchg   esi,edi
  44aea9:	add    BYTE PTR [ebx],0x0
  44aeac:	loope  0x44ae62
  44aeae:	pop    edi
  44aeaf:	jl     0x44ae5c
  44aeb1:	js     0x44ae9c
  44aeb3:	pop    ebx
  44aeb4:	fild   DWORD PTR [ebp+0x4f]
  44aeb7:	popa   
  44aeb8:	mov    cl,0xd4
  44aeba:	jne    0x44af03
  44aebc:	push   0x9
  44aebe:	mov    eax,0x937904e3
  44aec3:	mov    bh,0x6c
  44aec5:	jb     0x44aeca
  44aec7:	test   DWORD PTR [edx],edx
  44aec9:	jle    0x44af40
  44aecb:	jg     0x44ae87
  44aecd:	mov    BYTE PTR [ebx],al
  44aecf:	add    dl,bl
  44aed1:	outs   dx,BYTE PTR ds:[esi]
  44aed2:	adc    al,BYTE PTR [ebp+0x5802961f]
  44aed8:	jbe    0x44aee5
  44aeda:	in     al,dx
  44aedb:	adc    ebp,eax
  44aedd:	and    DWORD PTR [ebx+0x74726211],ebp
  44aee3:	inc    edi
  44aee4:	pop    edx
  44aee5:	cli    
  44aee6:	pop    es
  44aee7:	or     ecx,ebp
  44aee9:	add    DWORD PTR [eax+0x74726211],esp
  44aeef:	jp     0x44af2f
  44aef1:	jno    0x44aebe
  44aef3:	adc    esi,ebx
  44aef5:	adc    DWORD PTR ds:0x586384c6,0x7b04207c
  44aeff:	(bad)  
  44af00:	into   
  44af01:	lahf   
  44af02:	add    eax,DWORD PTR [eax]
	...
  44af18:	jl     0x44af13
  44af1a:	stos   DWORD PTR es:[edi],eax
  44af1b:	mov    bh,0x54
  44af1d:	fldl2t 
  44af1f:	add    edi,ebp
  44af21:	sub    ah,ch
  44af23:	add    esp,DWORD PTR [edx-0x9]
  44af26:	cmp    ah,BYTE PTR [ebp-0x7d]
  44af29:	sar    BYTE PTR [ecx-0x55],cl
  44af2c:	jae    0x44af07
  44af2e:	jmp    0x511fc3b7
  44af33:	sub    ecx,esp
  44af35:	jg     0x44af20
  44af37:	test   al,0x55
  44af39:	fldl2t 
  44af3b:	add    edi,DWORD PTR [edi]
  44af3d:	xor    ebx,0xfffffff8
  44af40:	jmp    0x56d0:0x6203e8e1
  44af47:	jnp    0x44af30
  44af49:	shr    cl,cl
  44af4b:	add    eax,DWORD PTR [edi-0x7e]
  44af4e:	jo     0x44af06
  44af50:	lea    edx,[ebx+0x71]
  44af53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44af54:	jae    0x44af2f
  44af56:	jmp    0x7f434a87
  44af5b:	clc    
  44af5c:	mov    dl,0x68
  44af5e:	test   eax,0x707f75fa
  44af63:	sar    DWORD PTR [ecx-0xa],1
  44af66:	mov    edx,0xe210de62
  44af6b:	jl     0x44af0d
  44af6d:	jne    0x44afb6
  44af6f:	std    
  44af70:	in     eax,0x41
  44af72:	iret   
  44af73:	add    esp,DWORD PTR [edx+0x52]
  44af76:	sbb    DWORD PTR [eax],edx
  44af78:	fcomp  QWORD PTR [ecx+0x71]
  44af7b:	push   cs
	...
  44af90:	(bad)  
  44af91:	fnstenv [ecx+0x0]
  44af94:	gs push edx
  44af96:	sbb    al,0x60
  44af98:	sub    al,0x27
  44af9a:	idiv   BYTE PTR [edx-0x53]
  44af9d:	in     eax,0x62
  44af9f:	mov    esp,0xad595365
  44afa4:	jae    0x44af7f
  44afa6:	jmp    0x1132126
  44afab:	(bad)  
  44afac:	out    dx,al
  44afad:	inc    edx
  44afae:	push   cs
  44afaf:	jmp    0x55ba0415
  44afb4:	pop    edi
  44afb5:	and    DWORD PTR ds:0xcab75698,ecx
  44afbb:	iret   
  44afbc:	nop
  44afbd:	jno    0x44af4a
  44afbf:	pushf  
  44afc0:	dec    ecx
  44afc1:	push   ebx
  44afc2:	dec    esp
  44afc3:	repz push ecx
  44afc5:	push   edi
  44afc6:	nop
  44afc7:	jge    0x44b025
  44afc9:	fld    DWORD PTR [eax]
  44afcb:	bound  esi,QWORD PTR [ebx+0xe605e82]
  44afd1:	inc    edi
  44afd2:	push   cs
  44afd3:	jmp    0x87652439
  44afd8:	sub    BYTE PTR [esi-0x40],al
  44afdb:	jecxz  0x44b03e
  44afdd:	fstp   DWORD PTR [esi+0x3a]
  44afe0:	cmp    eax,0x64458855
  44afe5:	fld    DWORD PTR [eax]
  44afe7:	xchg   DWORD PTR [esi+0x61dfb846],ecx
  44afed:	fld    DWORD PTR [ebx]
  44afef:	pushf  
  44aff0:	or     DWORD PTR [edi-0x78],edx
  44aff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  44b008:	fld    DWORD PTR [bx+si]
  44b00b:	jb     0x44aff6
  44b00d:	inc    ecx
  44b00e:	push   cs
  44b00f:	jmp    0xcd07ac75
  44b014:	loopne 0x44af9c
  44b016:	add    eax,0x4d572a47
  44b01b:	int    0x2f
  44b01d:	(bad)  
  44b01e:	loop   0x44b082
  44b020:	or     esi,edx
  44b022:	mov    DWORD PTR [edx+eax*8],esp
  44b025:	clc    
  44b026:	or     DWORD PTR [ecx+0x9],edi
  44b029:	call   0xeed992e
  44b02e:	or     eax,0xe45e163
  44b033:	jmp    0x410199
  44b038:	cmp    al,BYTE PTR [ebx]
  44b03a:	inc    ebx
  44b03b:	in     al,0xfa
  44b03d:	xchg   ecx,eax
  44b03e:	adc    ecx,DWORD PTR [ebx-0x6f8131ed]
  44b044:	xor    cl,ah
  44b046:	add    BYTE PTR [eax],al
  44b048:	jo     0x44b08c
  44b04a:	inc    DWORD PTR [edi-0x6f837909]
  44b050:	iret   
  44b051:	retf   
  44b052:	add    BYTE PTR [eax],al
  44b054:	inc    eax
  44b055:	jno    0x44b042
  44b057:	add    DWORD PTR [ebx],eax
  44b059:	into   
  44b05a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b05b:	adc    BYTE PTR [ecx-0x3d],dh
  44b05e:	popa   
  44b05f:	rcr    DWORD PTR [ebx+ebx*2],cl
  44b062:	mov    ch,0xf3
  44b064:	inc    edx
  44b065:	push   0xffffffbb
  44b067:	push   ss
  44b068:	retf   
  44b069:	fldenv [edx-0x77]
	...
  44b080:	inc    ebx
  44b081:	xor    dl,BYTE PTR [ecx]
  44b083:	add    BYTE PTR [ebx-0x74fee0e4],bh
  44b089:	fldenv [edx-0x2d]
  44b08c:	imul   ebx,DWORD PTR [esi+edi*8+0xcc238f],0xf514f800
  44b097:	call   0x458536
  44b09c:	ins    BYTE PTR es:[edi],dx
  44b09d:	sub    al,0x7f
  44b09f:	(bad)  
  44b0a0:	jno    0x44b07b
  44b0a2:	add    BYTE PTR [ebx],ch
  44b0a4:	xchg   edx,eax
  44b0a5:	add    DWORD PTR [ebx-0x8],ecx
  44b0a8:	sar    ch,0xbb
  44b0ab:	push   ss
  44b0ac:	dec    ebx
  44b0ad:	fldcw  WORD PTR ds:0x89e8dcf
  44b0b3:	mov    bh,0xab
  44b0b5:	sbb    esi,edi
  44b0b7:	dec    DWORD PTR [ebx+0x0]
  44b0ba:	push   ebx
  44b0bb:	in     al,dx
  44b0bc:	gs sub dl,dh
  44b0bf:	mov    esi,DWORD PTR [ebx+0x7d]
  44b0c2:	jle    0x44b109
  44b0c4:	bound  ecx,QWORD PTR [esi-0x2a]
  44b0c7:	push   es
  44b0c8:	repnz sub al,BYTE PTR [edi]
  44b0cb:	add    BYTE PTR [edx+0x7],ah
  44b0ce:	int    0x13
  44b0d0:	fdiv   st,st(2)
  44b0d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b0d3:	adc    DWORD PTR [edx+0x72],esp
  44b0d6:	jnp    0x44b0db
  44b0d8:	push   ebx
  44b0d9:	div    DWORD PTR [edi+0x79a63e3]
  44b0df:	test   DWORD PTR [edx-0x7a],ebp
  44b0e2:	js     0x44b12b
	...
  44b0f8:	pop    edx
  44b0f9:	clc    
  44b0fa:	mov    WORD PTR [esi-0x77fc8d8c],?
  44b100:	outs   dx,BYTE PTR ds:[esi]
  44b101:	cmp    DWORD PTR [eax-0x71],0xe
  44b105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b106:	add    eax,DWORD PTR [eax]
  44b108:	fld    DWORD PTR [ebp+0x4f]
  44b10b:	(bad)  
  44b10c:	adc    eax,0x880fb2a6
  44b111:	enter  0xccd6,0xbd
  44b115:	pop    es
  44b116:	mov    al,0xf7
  44b118:	xlat   BYTE PTR ds:[ebx]
  44b119:	ds stc 
  44b11b:	out    dx,eax
  44b11c:	jmp    0x44b120
  44b11e:	test   eax,0x78726211
  44b123:	push   edx
  44b124:	mov    ss,WORD PTR [edx+edi*2-0x49]
  44b128:	retf   0x39c
  44b12b:	add    BYTE PTR [ecx-0x457b2a6e],cl
  44b131:	cs stc 
  44b133:	jmp    FWORD PTR [ebp+0x14]
  44b136:	push   edx
  44b137:	loopne 0x44b112
  44b139:	cli    
  44b13a:	lahf   
  44b13b:	adc    DWORD PTR [edx+0x72],esp
  44b13e:	aad    0x6
  44b140:	sbb    bl,BYTE PTR [edx+0x5]
  44b143:	add    BYTE PTR [edx+0x6f],ah
  44b146:	scas   al,BYTE PTR es:[edi]
  44b147:	neg    ebx
  44b149:	stc    
  44b14a:	lahf   
  44b14b:	adc    DWORD PTR [edx+0x72],esp
  44b14e:	js     0x44b0d7
  44b150:	neg    al
  44b152:	test   DWORD PTR [ebx],0x6eab5862
  44b158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44b159:	and    al,0xe5
	...
  44b170:	mov    ah,0x52
  44b172:	sub    al,0x58
  44b174:	sub    DWORD PTR [eax-0x2e5a8775],0x70
  44b17b:	mov    esi,0x93e0f301
  44b180:	mov    ch,0xe2
  44b182:	jmp    0xf66d908a
  44b187:	jns    0x44b1f6
  44b189:	inc    ecx
  44b18a:	out    dx,eax
  44b18b:	add    esp,DWORD PTR [edx+0x51]
  44b18e:	in     eax,0x12
  44b190:	out    0x15,eax
  44b192:	add    bh,BYTE PTR ds:[edx]
  44b195:	in     eax,0x72
  44b197:	jmp    0x44b20a
  44b199:	dec    edi
  44b19a:	pop    ecx
  44b19b:	stos   BYTE PTR es:[edi],al
  44b19c:	jae    0x44b177
  44b19e:	jmp    0x6215d71b
  44b1a3:	packssdw mm2,QWORD PTR [eax+0x79]
  44b1a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b1a8:	push   ebx
  44b1a9:	fldl2t 
  44b1ab:	js     0x44b1d5
  44b1ad:	ins    DWORD PTR es:[edi],dx
  44b1ae:	call   0xf98f237e
  44b1b3:	sbb    DWORD PTR [edx+esi*8-0x68f1abe6],ebx
  44b1ba:	out    dx,al
  44b1bb:	jns    0x44b192
  44b1bd:	cmp    al,0xd7
  44b1bf:	add    esp,DWORD PTR [edx-0xd]
  44b1c2:	pusha  
  44b1c3:	stos   DWORD PTR es:[edi],eax
  44b1c4:	lods   eax,DWORD PTR ds:[esi]
  44b1c5:	loop   0x44b1b0
  44b1c7:	add    eax,DWORD PTR [edi-0x78c8c019]
  44b1cd:	repnz loopne 0x44b243
  44b1d0:	adc    eax,0x3e9e4
	...
  44b1e5:	add    BYTE PTR [eax],al
  44b1e7:	add    bh,dl
  44b1e9:	cwde   
  44b1ea:	out    0x8c,al
  44b1ec:	in     eax,0x3d
  44b1ee:	iret   
  44b1ef:	add    esp,DWORD PTR [edx+0x4e]
  44b1f2:	add    BYTE PTR [edx+ebx*4],ah
  44b1f5:	lods   eax,DWORD PTR ds:[esi]
  44b1f6:	shl    BYTE PTR [eax+0x1b],cl
  44b1f9:	outs   dx,DWORD PTR ds:[esi]
  44b1fa:	jge    0x44b1ac
  44b1fc:	or     edx,ecx
  44b1fe:	mov    ecx,0xd95e73
  44b203:	scas   al,BYTE PTR es:[edi]
  44b204:	sub    eax,DWORD PTR [ebx-0x269e16fd]
  44b20a:	jmp    0x44b1f3
  44b20c:	ins    BYTE PTR es:[edi],dx
  44b20d:	push   0x6d
  44b20f:	out    dx,eax
  44b210:	out    0xd8,al
  44b212:	add    cl,ch
  44b214:	popa   
  44b215:	cwde   
  44b216:	cmp    eax,0xd95d71
  44b21b:	jmp    0xe6fe809c
  44b220:	popa   
  44b221:	fld    DWORD PTR [eax]
  44b223:	cs stos DWORD PTR es:[edi],eax
  44b225:	cmp    ah,0xe8
  44b228:	popa   
  44b229:	fld    DWORD PTR [ebx+0x29d631ac]
  44b22f:	pushf  
  44b230:	cmp    ecx,edx
  44b232:	jge    0x44b249
  44b234:	sbb    al,0x81
  44b236:	test   DWORD PTR [esi+0xc8c25a3],0x2dc43da3
  44b240:	adc    cl,BYTE PTR [esi+0x6eecbcc4]
  44b246:	push   ecx
  44b247:	bound  ebp,QWORD PTR [ebx+0x778bd2]
	...
  44b25d:	add    BYTE PTR [eax],al
  44b25f:	add    dl,al
  44b261:	call   0xd8119b66
  44b266:	div    edi
  44b268:	add    BYTE PTR [ecx-0x26a0cdb1],al
  44b26e:	add    cl,ch
  44b270:	in     al,0x83
  44b272:	or     ebx,DWORD PTR [edi-0x58]
  44b275:	clc    
  44b276:	mov    edi,DWORD PTR [ecx+0x62e28d4b]
  44b27c:	xor    esp,esi
  44b27e:	mov    DWORD PTR [eax],eax
  44b280:	jle    0x44b27b
  44b282:	popa   
  44b283:	or     DWORD PTR [ebp+0x4b00115e],ebp
  44b289:	dec    ebx
  44b28a:	push   ecx
  44b28b:	or     cl,al
  44b28d:	push   eax
  44b28e:	scas   eax,DWORD PTR es:[edi]
  44b28f:	push   ss
  44b290:	cmp    edx,esi
  44b292:	mov    BYTE PTR [edx+ebp*1],al
  44b295:	aad    0x5a
  44b297:	adc    al,0x81
  44b299:	add    BYTE PTR [edi+0x7dd60b16],ch
  44b29f:	jle    0x44b2d0
  44b2a1:	dec    ebx
  44b2a2:	dec    ecx
  44b2a3:	or     BYTE PTR [eax+0x1f88fb91],dl
  44b2a9:	out    0x7d,eax
  44b2ab:	xchg   esi,eax
  44b2ac:	inc    edi
  44b2ad:	xor    bh,0xff
  44b2b0:	cli    
  44b2b1:	xchg   edi,eax
  44b2b2:	adc    esi,DWORD PTR [ecx+0x66beabeb]
  44b2b8:	cwde   
  44b2b9:	out    dx,al
  44b2ba:	je     0x44b27e
  44b2bc:	cs dec ebp
  44b2be:	xchg   ecx,eax
  44b2bf:	mov    esp,0x6600d5ad
	...
  44b2d8:	push   edx
  44b2d9:	push   eax
  44b2da:	scas   eax,DWORD PTR es:[edi]
  44b2db:	push   ss
  44b2dc:	retf   
  44b2dd:	aad    0xdd
  44b2df:	adc    ebx,DWORD PTR [ebp-0x4d99283e]
  44b2e5:	dec    edi
  44b2e6:	scas   eax,DWORD PTR es:[edi]
  44b2e7:	push   ss
  44b2e8:	mov    ebx,0x8ec175d5
  44b2ed:	dec    esp
  44b2ee:	mov    DWORD PTR [ebp+ecx*4-0x4174ff2b],edi
  44b2f5:	leave  
  44b2f6:	jge    0x44b286
  44b2f8:	inc    edi
  44b2f9:	xor    bh,0xff
  44b2fc:	ret    
  44b2fd:	push   edx
  44b2fe:	out    dx,al
  44b2ff:	or     eax,DWORD PTR ds:0xab8b6140
  44b305:	outs   dx,BYTE PTR ds:[esi]
  44b306:	(bad)
  44b30a:	adc    ecx,DWORD PTR [ecx+0x6160c562]
  44b310:	imul   esi,eax,0xffffff94
  44b313:	adc    DWORD PTR [edx-0x7e],esp
  44b316:	test   BYTE PTR [ecx+0x5a],dl
  44b319:	in     al,dx
  44b31a:	mov    dh,BYTE PTR [edi-0x77fc7dac]
  44b320:	pop    esi
  44b321:	xchg   ecx,eax
  44b322:	add    bl,BYTE PTR [edx+0x56]
  44b325:	in     al,dx
  44b326:	jp     0x44b2de
  44b328:	dec    esp
  44b329:	add    BYTE PTR [ebx],0x85
  44b32c:	pushf  
  44b32d:	jbe    0x44b2b3
  44b32f:	dec    ecx
  44b330:	push   0xfffffffb
  44b332:	mov    edi,0x1096dafb
  44b337:	test   esp,ebp
  44b339:	mov    dh,0xfa
  44b33b:	inc    DWORD PTR [eax]
	...
  44b34d:	add    BYTE PTR [eax],al
  44b34f:	add    ch,bh
  44b351:	add    ecx,0x2592b313
  44b357:	mov    BYTE PTR [ebx+esi*4+0xe207c64],0x8c
  44b35f:	xchg   ecx,eax
  44b360:	push   ds
  44b361:	jns    0x44b366
  44b363:	add    BYTE PTR [ecx+edi*8],bh
  44b366:	mov    dh,BYTE PTR [edi-0x1afc7d8c]
  44b36c:	jno    0x44b30e
  44b36e:	sub    al,0xdf
  44b370:	inc    esp
  44b371:	jns    0x44b2fc
  44b373:	mov    bh,0x4c
  44b375:	add    BYTE PTR [ebx],0x7d
  44b378:	mov    ds:0xe6898a85,eax
  44b37d:	jo     0x44b382
  44b37f:	add    cl,ch
  44b381:	inc    ebp
  44b382:	repz test ah,ah
  44b385:	es sti 
  44b387:	dec    DWORD PTR [ebp-0x1e04c2fd]
  44b38d:	fst    DWORD PTR [eax]
  44b38f:	jp     0x44b3a5
  44b391:	push   0xd2fccf84
  44b396:	pop    esi
  44b397:	test   BYTE PTR [ecx+ebx*8],bl
  44b39a:	cmc    
  44b39b:	mov    ah,BYTE PTR [eax]
  44b39d:	jne    0x44b3de
  44b39f:	or     esi,eax
  44b3a1:	xor    bh,dh
  44b3a3:	add    esp,DWORD PTR [edx+0x64]
  44b3a6:	das    
  44b3a7:	or     al,0xe4
  44b3a9:	pop    esi
  44b3aa:	cmp    ecx,0x7717845
  44b3b0:	ins    DWORD PTR es:[edi],dx
  44b3b1:	fimul  DWORD PTR [edi]
  44b3b3:	clc    
	...
  44b3c8:	fisttp WORD PTR [esi+0x70]
  44b3cb:	stc    
  44b3cc:	sub    eax,0x51e17278
  44b3d1:	fs daa 
  44b3d3:	or     al,0xe7
  44b3d5:	sbb    eax,0xe8718b8e
  44b3da:	bound  edi,QWORD PTR [ecx-0x37]
  44b3dd:	into   
  44b3de:	jmp    0xce5ab8e6
  44b3e3:	xchg   edx,eax
  44b3e4:	ins    DWORD PTR es:[edi],dx
  44b3e5:	ret    
  44b3e6:	mov    ds:0x6a8126e9,eax
  44b3eb:	inc    ebp
  44b3ec:	icebp  
  44b3ed:	popa   
  44b3ee:	ja     0x44b38f
  44b3f0:	push   ebx
  44b3f1:	fldl2t 
  44b3f3:	jmp    0xf9d612dc
  44b3f8:	aad    0x77
  44b3fa:	inc    edx
  44b3fb:	hlt    
  44b3fc:	inc    ebx
  44b3fd:	mov    WORD PTR [ecx-0x17],cs
  44b400:	pop    esp
  44b401:	pop    edi
  44b402:	cmp    ecx,0x426a77bd
  44b408:	popa   
  44b409:	bound  edx,QWORD PTR [edi-0x61]
  44b40c:	push   ebx
  44b40d:	fldl2t 
  44b40f:	adc    al,0xab
  44b411:	mov    cl,0x94
  44b413:	repz push 0x67
  44b416:	outs   dx,DWORD PTR ds:[esi]
  44b417:	add    esp,DWORD PTR [edx-0x27]
  44b41a:	bound  edx,QWORD PTR [ecx+0x3e9cec9]
  44b420:	pop    es
  44b421:	jb     0x44b407
  44b423:	loope  0x44b428
  44b425:	call   0xb43ef32a
  44b42a:	and    ebp,DWORD PTR [ecx+0x0]
	...
  44b440:	popa   
  44b441:	loop   0x44b3f2
  44b443:	ins    DWORD PTR es:[edi],dx
  44b444:	in     al,dx
  44b445:	icebp  
  44b446:	or     ch,cl
  44b448:	popa   
  44b449:	sti    
  44b44a:	mov    edi,DWORD PTR [ecx+0x62e2a63c]
  44b450:	sbb    al,0xcb
  44b452:	pop    esi
  44b453:	lock iret 
  44b455:	cs push cs
  44b457:	jmp    0x57f394bd
  44b45c:	(bad)  
  44b45d:	enter  0xe900,0xd8
  44b461:	or     BYTE PTR [ecx],cl
  44b463:	jno    0x44b4c7
  44b465:	out    0xf7,al
  44b467:	daa    
  44b468:	sbb    ah,dl
  44b46a:	scas   al,BYTE PTR es:[edi]
  44b46b:	ja     0x44b464
  44b46d:	enter  0xe900,0xd8
  44b471:	and    BYTE PTR ds:0x88decc72,cl
  44b477:	(bad)  
  44b479:	pop    ebp
  44b47a:	mov    ?,WORD PTR ds:0x38f776ec
  44b480:	idiv   BYTE PTR [edx+ecx*8-0x4481cf31]
  44b487:	call   0xe8458ded
  44b48c:	pop    ss
  44b48d:	retf   
  44b48e:	sub    DWORD PTR [ebx],0x31
  44b491:	clc    
  44b492:	mov    DWORD PTR [edi-0x1a],ebp
  44b495:	enter  0xe900,0xee
  44b499:	dec    eax
  44b49a:	mov    ah,0xdf
  44b49c:	popa   
  44b49d:	fldpi  
  44b49f:	or     ebx,DWORD PTR [ebp+0x2b]
  44b4a2:	jg     0x44b489
	...
  44b4b8:	sbb    BYTE PTR [ecx],0x1
  44b4bb:	xchg   eax,ebp
  44b4bd:	dec    edx
  44b4be:	jle    0x44b457
  44b4c0:	imul   ebx,ecx,0x0
  44b4c3:	xchg   DWORD PTR [eax-0x6c],edx
  44b4c6:	pop    esi
  44b4c7:	add    BYTE PTR [edx-0x74e95014],dl
  44b4cd:	fidiv  DWORD PTR [ebp-0x3f]
  44b4d0:	mov    BYTE PTR [ebp-0x77],ah
  44b4d3:	mov    esp,0x300da95
  44b4d8:	adc    bl,0x7b
  44b4db:	adc    BYTE PTR [esi+eiz*2+0x55],cl
  44b4df:	jmp    FWORD PTR [edi+edx*1]
  44b4e2:	jge    0x44b531
  44b4e4:	inc    ebx
  44b4e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44b4e6:	mov    dl,BYTE PTR [esi+0xdaa7]
  44b4ec:	mov    al,0x1c
  44b4ee:	loopne 0x44b53d
  44b4f0:	repz push ss
  44b4f2:	stc    
  44b4f3:	mov    ecx,DWORD PTR [esi-0x37]
  44b4f6:	aas    
  44b4f7:	lea    esp,[ebp+0xbfffe62]
  44b4fd:	arpl   cx,ax
  44b4ff:	call   0x3dc733
  44b504:	cmp    al,0x32
  44b506:	jl     0x44b4ed
  44b508:	ds sbb cl,ah
  44b50b:	int3   
  44b50c:	iret   
  44b50d:	and    eax,0x6256cccc
  44b512:	jmp    0x44b497
  44b514:	outs   dx,DWORD PTR ds:[esi]
  44b515:	push   0x44
  44b517:	mov    ebx,DWORD PTR [esi]
  44b519:	loop   0x44b540
  44b51b:	leave  
	...
  44b530:	adc    eax,0xeb882e2f
  44b535:	imul   esi,edi,0xffffffff
  44b538:	lods   al,BYTE PTR ds:[esi]
  44b539:	pop    ebp
  44b53a:	lods   al,BYTE PTR ds:[esi]
  44b53b:	add    BYTE PTR [ebx+0x4e07ddd9],bh
  44b541:	jle    0x44b566
  44b543:	add    BYTE PTR [eax-0x77],al
  44b546:	repz mov ecx,DWORD PTR [ebx]
  44b549:	adc    DWORD PTR ds:[eax],eax
  44b54c:	mov    ebx,0xd114b1e6
  44b551:	bound  esp,QWORD PTR [edi+0x3766298]
  44b557:	add    BYTE PTR [ebp+0xe],bl
  44b55a:	adc    BYTE PTR [edi],ch
  44b55c:	and    ebp,ecx
  44b55e:	shl    bl,1
  44b560:	jmp    0x62564d4c
  44b565:	add    BYTE PTR [edx+edx*2+0x831fc6e],0xdf
  44b56d:	add    DWORD PTR [edx],0x0
  44b570:	bound  eax,QWORD PTR [ebx-0x7eee8474]
  44b576:	cdq    
  44b577:	punpckldq mm0,DWORD PTR [edx-0x27d2dafd]
  44b57e:	dec    edx
  44b57f:	jns    0x44b517
  44b581:	or     DWORD PTR [ebx+esi*1-0x2e75db0f],0xffffffc4
  44b589:	dec    edi
  44b58a:	bound  eax,QWORD PTR [edx+ebx*4-0xdf92296]
  44b591:	cli    
  44b592:	out    dx,al
  44b593:	inc    DWORD PTR [eax]
	...
  44b5a5:	add    BYTE PTR [eax],al
  44b5a7:	add    BYTE PTR ds:0xca978d7c,dl
  44b5ad:	ins    BYTE PTR es:[edi],dx
  44b5ae:	add    eax,DWORD PTR [eax]
  44b5b0:	(bad)  
  44b5b2:	clc    
  44b5b3:	xchg   DWORD PTR [esi-0x6f],ebx
  44b5b6:	push   esp
  44b5b7:	aas    
  44b5b8:	dec    esi
  44b5b9:	jnp    0x44b548
  44b5bb:	xchg   edi,eax
  44b5bc:	stos   DWORD PTR es:[edi],eax
  44b5bd:	mov    WORD PTR [ebx],es
  44b5bf:	add    cl,bl
  44b5c1:	sub    ch,bh
  44b5c3:	test   BYTE PTR [edx],dh
  44b5c5:	push   0xffffff8b
  44b5c7:	sbb    esi,DWORD PTR [ebx-0x9]
  44b5ca:	ins    BYTE PTR es:[edi],dx
  44b5cb:	mov    ebx,0xf9038274
  44b5d0:	and    dl,BYTE PTR [esi-0xe95a578]
  44b5d6:	in     al,dx
  44b5d7:	and    eax,0xe930a4a8
  44b5dc:	fist   WORD PTR [esi+0x19]
  44b5df:	lock cmp al,0xd9
  44b5e2:	jo     0x44b578
  44b5e4:	aad    0xcb
  44b5e6:	jmp    0x880e34ee
  44b5eb:	mov    BYTE PTR [ecx+0x28],dh
  44b5ee:	jg     0x44b620
  44b5f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44b5f1:	sti    
  44b5f2:	lock jae 0x44b5aa
  44b5f5:	retf   
  44b5f6:	jmp    0x60e82cfe
  44b5fb:	mov    WORD PTR [ecx-0x20fc1635],gs
  44b601:	es (bad) 
  44b603:	sbb    dl,ch
  44b605:	cmp    bh,ch
  44b607:	add    esp,DWORD PTR [edx-0x1c]
  44b60a:	imul   ecx,eax,0x0
	...
  44b61d:	add    BYTE PTR [eax],al
  44b61f:	add    BYTE PTR [edx+0x74],cl
  44b622:	(bad)  
  44b623:	or     al,0x13
  44b625:	xor    bl,ch
  44b627:	pop    es
  44b628:	(bad)  
  44b629:	fnstenv [edx-0x75]
  44b62c:	stc    
  44b62d:	retf   0x3e9
  44b630:	hlt    
  44b631:	enter  0x3e9,0x62
  44b635:	shl    BYTE PTR [esi+0x67e42418],0x40
  44b63c:	pop    ss
  44b63d:	je     0x44b628
  44b63f:	or     al,0xd3
  44b641:	daa    
  44b642:	jmp    0x81e184e
  44b647:	mov    DWORD PTR [ebx],edx
  44b649:	sti    
  44b64a:	call   0x64e5:0xe220de61
  44b651:	dec    ecx
  44b652:	xor    ebp,esi
  44b654:	in     eax,0x73
  44b656:	out    dx,al
  44b657:	xchg   ebp,eax
  44b658:	cmc    
  44b659:	xor    bh,ch
  44b65b:	add    esp,DWORD PTR [edx+0x60]
  44b65e:	mov    ecx,0xf8d4e5f7
  44b663:	pop    esp
  44b664:	test   ebp,ecx
  44b666:	out    dx,al
  44b667:	xchg   ebp,eax
  44b668:	aad    0x31
  44b66a:	iret   
  44b66b:	add    esp,DWORD PTR [edx+0x60]
  44b66e:	add    BYTE PTR [ecx-0x1eafa34b],ah
  44b674:	fxch   st(7)
  44b676:	adc    DWORD PTR [edx+0x11],esi
  44b679:	xor    BYTE PTR [esi],cl
  44b67b:	jmp    0xfd8528e1
  44b680:	lock jecxz 0x44b6ad
  44b683:	and    eax,DWORD PTR [eax]
	...
  44b695:	add    BYTE PTR [eax],al
  44b697:	add    BYTE PTR [edi-0x5c],bh
  44b69a:	out    0x74,al
  44b69c:	lods   eax,DWORD PTR ds:[esi]
  44b69d:	lods   eax,DWORD PTR ds:[esi]
  44b69e:	lock sahf 
  44b6a0:	call   0x62246b00
  44b6a5:	fstp   DWORD PTR [esi+0x60]
  44b6a8:	shr    DWORD PTR [ebx],1
  44b6aa:	push   cs
  44b6ab:	jmp    0x72a0c611
  44b6b0:	ret    
  44b6b1:	pinsrw mm4,esi,0xf3
  44b6b5:	xor    BYTE PTR [eax],dl
  44b6b7:	add    bl,BYTE PTR [esi]
  44b6b9:	jae    0x44b6c1
  44b6bb:	jle    0x44b66f
  44b6bd:	sub    eax,0xd961e4fe
  44b6c2:	mov    ebx,0xd961d9
  44b6c7:	add    ah,BYTE PTR [ebx+ebx*2+0x4d]
  44b6cb:	mov    eax,ds:0xe20907ed
  44b6d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44b6d1:	lock popa 
  44b6d3:	out    0xf0,al
  44b6d5:	inc    esi
  44b6d6:	mov    edx,0xf77305e5
  44b6db:	jo     0x44b690
  44b6dd:	sbb    BYTE PTR [esi-0x66],0x7c
  44b6e1:	pop    ebp
  44b6e2:	dec    eax
  44b6e3:	loope  0x44b6e8
  44b6e5:	fcom   QWORD PTR [eax-0x88d0fcf]
  44b6eb:	div    bl
  44b6ed:	dec    edx
  44b6ee:	mov    eax,0x8bd961f7
  44b6f3:	mov    ecx,0xf8145abd
  44b6f8:	sub    BYTE PTR [edx+0xc],dh
	...
  44b70e:	add    BYTE PTR [eax],al
  44b710:	mov    ah,0x48
  44b712:	(bad)  
  44b713:	mov    ecx,0x8b00d68d
  44b718:	add    eax,DWORD PTR [ebx+0x5ec3507c]
  44b71e:	sbb    edx,DWORD PTR [ecx]
  44b720:	adc    ch,ch
  44b722:	mov    ebx,0x7dd68b16
  44b727:	pop    ebp
  44b728:	imul   ecx,DWORD PTR [esi],0x38
  44b72b:	adc    al,0x2a
  44b72d:	ins    DWORD PTR es:[edi],dx
  44b72e:	sbb    eax,0xdcabedca
  44b733:	mov    eax,esi
  44b735:	push   cs
  44b736:	mov    edx,DWORD PTR [ecx+eax*4+0x6]
  44b73a:	jg     0x44b6cc
  44b73c:	aaa    
  44b73d:	addr16 idiv edi
  44b740:	lods   eax,DWORD PTR ds:[esi]
  44b741:	fs (bad) 
  44b743:	mov    eax,0xeb00d64d
  44b748:	push   eax
  44b749:	js     0x44b7c7
  44b74b:	xchg   esp,eax
  44b74c:	icebp  
  44b74d:	jno    0x44b752
  44b74f:	add    BYTE PTR [ebx+0x78],cl
  44b752:	(bad)
  44b756:	nop
  44b757:	mov    eax,0x300d60d
  44b75c:	inc    esi
  44b75d:	adc    eax,0x6887887f
  44b762:	idiv   edi
  44b764:	nop
  44b765:	push   0xffffffba
  44b767:	enter  0x9619,0xf7
  44b76b:	mov    cl,BYTE PTR [esi+0x11]
  44b76e:	jg     0x44b7cd
  44b770:	jnp    0x44b7cb
  44b772:	int3   
  44b773:	je     0x44b775
	...
  44b785:	add    BYTE PTR [eax],al
  44b787:	add    BYTE PTR [ecx-0x3e],ah
  44b78a:	sub    al,0xbd
  44b78c:	or     edi,DWORD PTR [edx+0x5e800040]
  44b792:	mov    ebx,0xb9d5cb16
  44b797:	adc    bl,cl
  44b799:	aad    0x0
  44b79b:	sub    esp,DWORD PTR [edx+0x7]
  44b79e:	pop    ss
  44b79f:	leave  
  44b7a0:	inc    esp
  44b7a1:	xor    cl,ah
  44b7a3:	test   BYTE PTR [ecx+eiz*4+0x27e9e02e],bh
  44b7aa:	or     esp,DWORD PTR [edx+0x5b]
  44b7ad:	call   0x80a6c94d
  44b7b2:	or     dh,BYTE PTR [edx-0xe0806]
  44b7b8:	xchg   ebp,eax
  44b7b9:	out    0xdb,al
  44b7bb:	adc    ebx,edx
  44b7bd:	imul   edx,DWORD PTR [ecx+edi*8],0x22
  44b7c1:	ins    BYTE PTR es:[edi],dx
  44b7c2:	or     dh,BYTE PTR [edx-0xde726]
  44b7c8:	jne    0x44b7b0
  44b7ca:	retf   
  44b7cb:	pop    es
  44b7cc:	(bad)  
  44b7ce:	out    0x87,eax
  44b7d0:	inc    esi
  44b7d1:	xchg   ebx,eax
  44b7d2:	xchg   BYTE PTR [edi+0x3711e],dl
  44b7d8:	push   ebp
  44b7d9:	ret    
  44b7da:	lock scas al,BYTE PTR es:[edi]
  44b7dc:	jb     0x44b7ba
  44b7de:	inc    ebp
  44b7df:	popa   
  44b7e0:	xor    DWORD PTR [ecx],esi
  44b7e2:	test   DWORD PTR [edx+0x32],ecx
  44b7e5:	out    0xc8,al
  44b7e7:	add    al,0x32
  44b7e9:	sbb    DWORD PTR [edi+ebp*4+0x0],ecx
	...
  44b800:	jmp    0xe18f:0x39000390
  44b807:	int3   
  44b808:	add    al,0xe1
  44b80a:	or     esi,DWORD PTR [eax+0x368da]
  44b810:	popa   
  44b811:	cmp    ecx,DWORD PTR [ebx+0x368c687]
  44b817:	add    BYTE PTR [eax-0x1c045817],ch
  44b81d:	pop    esp
  44b81e:	cld    
  44b81f:	(bad)  
  44b820:	in     eax,dx
  44b821:	or     ah,0x6
  44b824:	push   ebp
  44b825:	test   al,0x8e
  44b827:	jnp    0xbf486206
  44b82d:	fnsave [edx+0x4e]
  44b830:	or     al,0x83
  44b832:	out    0x8,al
  44b834:	adc    BYTE PTR [ebx],ch
  44b836:	stc    
  44b837:	sub    eax,0xc772d922
  44b83c:	imul   esp,eax,0xdbfcd86e
  44b842:	bound  ecx,QWORD PTR [ecx+ebp*8-0x28fc1639]
  44b849:	leave  
  44b84a:	jmp    0x37091a52
  44b84f:	mov    ecx,DWORD PTR [eax]
  44b851:	imul   edx,edx,0x62f90b4c
  44b857:	scas   eax,DWORD PTR es:[edi]
  44b858:	imul   esp,eax,0xf7c41836
  44b85e:	jb     0x44b891
  44b860:	add    ecx,DWORD PTR [ebx+ecx*1+0x8d]
	...
  44b877:	add    BYTE PTR ds:0xf20a7fe1,bl
  44b87d:	xor    bh,dh
  44b87f:	add    esp,DWORD PTR [edx-0x20]
  44b882:	(bad)  
  44b883:	jnp    0x44b89a
  44b885:	(bad)  
  44b886:	jmp    0xee4d978e
  44b88b:	mov    ebx,DWORD PTR [ecx-0x36]
  44b88e:	mov    esi,0x316451c3
  44b893:	lock pop edx
  44b895:	daa    
  44b896:	push   ecx
  44b897:	call   0xe1ad:0x8ce9d953
  44b89e:	jno    0x44b897
  44b8a0:	fs fs jns 0x44b83b
  44b8a4:	jae    0x44b87f
  44b8a6:	jmp    0x5909fe03
  44b8ab:	repz inc edi
  44b8ad:	mov    ds:0x640a3507,eax
  44b8b2:	and    al,0x54
  44b8b4:	fadd   DWORD PTR [ecx+eax*1]
  44b8b7:	jecxz  0x44b84a
  44b8b9:	push   edi
  44b8ba:	nop
  44b8bb:	sub    eax,0x72f76fd3
  44b8c0:	add    al,0x74
  44b8c2:	pop    esi
  44b8c3:	jo     0x44b8ae
  44b8c5:	daa    
  44b8c6:	push   cs
  44b8c7:	jmp    0x625e2f2d
  44b8cc:	hlt    
  44b8cd:	jecxz  0x44b92d
  44b8cf:	jb     0x44b87e
  44b8d1:	cmp    al,0x5e
  44b8d3:	sbb    al,BYTE PTR [esi-0x6]
  44b8d6:	or     DWORD PTR [ecx-0x37],edx
  44b8d9:	leave  
  44b8da:	add    cl,ch
	...
  44b8f0:	data16 mov ds:0xc9ed7189,al
  44b8f6:	add    cl,ch
  44b8f8:	fidiv  WORD PTR [ebx+0x193eb9ad]
  44b8fe:	add    DWORD PTR [edx-0x4c],esp
  44b901:	xlat   BYTE PTR ds:[ebx]
  44b902:	jge    0x44b90a
  44b904:	push   0x55
  44b906:	jg     0x44b904
  44b908:	adc    eax,0xd4dd2b71
  44b90d:	push   edi
  44b90e:	and    al,0xa9
  44b910:	popa   
  44b911:	push   esp
  44b912:	mov    BYTE PTR [ebp-0x600890bc],ah
  44b918:	push   esi
  44b919:	outs   dx,DWORD PTR ds:[esi]
  44b91a:	imul   ecx
  44b91c:	js     0x44b986
  44b91e:	cmp    ebx,DWORD PTR [edi-0x3ba69c9b]
  44b924:	lea    esi,[ecx+0x5e]
  44b927:	jb     0x44b8b9
  44b929:	clc    
  44b92a:	ror    edi,cl
  44b92c:	fst    DWORD PTR [esi]
  44b92e:	or     DWORD PTR [edi+0x6f],eax
  44b931:	sub    DWORD PTR [eax+0x7d961ff],edi
  44b937:	push   edi
  44b938:	mov    fs,WORD PTR [esi]
  44b93a:	push   cs
  44b93b:	jmp    0xf5b50da1
  44b940:	jmp    0xdc44eb17
  44b945:	xchg   ebp,eax
  44b946:	adc    ecx,DWORD PTR [edi]
  44b948:	xor    eax,0xfb16aeed
  44b94d:	fidivr DWORD PTR [ebp+0x70]
  44b950:	mov    bh,0x63
  44b952:	aas    
  44b953:	or     BYTE PTR [eax],al
	...
  44b965:	add    BYTE PTR [eax],al
  44b967:	add    BYTE PTR [ebx+0x71],dl
  44b96a:	or     DWORD PTR [ebx+0x1151e3],ecx
  44b970:	mov    ebx,0xda143807
  44b975:	gs sbb eax,0xddaba5cb
  44b97b:	data16 xor ah,ch
  44b97e:	scas   eax,DWORD PTR es:[edi]
  44b97f:	push   ss
  44b980:	mov    ebx,0x90548bda
  44b985:	or     bh,BYTE PTR [ebp+0x5d]
  44b988:	xchg   ebx,eax
  44b989:	pop    ebp
  44b98a:	xchg   DWORD PTR [ebp+edx*4-0x7616ff26],edi
  44b991:	adc    ecx,edi
  44b993:	jmp    ebp
  44b995:	arpl   WORD PTR [eax+eax*1+0x6600da87],ax
  44b99c:	dec    eax
  44b99d:	sti    
  44b99e:	popa   
  44b99f:	or     DWORD PTR [ebx],ecx
  44b9a1:	dec    ebp
  44b9a2:	adc    DWORD PTR [eax],eax
  44b9a4:	dec    ebx
  44b9a5:	fcmovne st,st(1)
  44b9a7:	pop    edi
  44b9a8:	popf   
  44b9a9:	pop    esp
  44b9aa:	jg     0x44b968
  44b9ac:	push   ebp
  44b9ad:	fiadd  DWORD PTR [eax]
  44b9af:	pop    ebx
  44b9b0:	sar    cl,0x5a
  44b9b3:	ret    
  44b9b4:	fist   WORD PTR ds:0x15efcccc
  44b9ba:	int3   
  44b9bb:	int3   
  44b9bc:	call   DWORD PTR ds:0x87b1cccc
  44b9c2:	mov    bh,0xff
  44b9c4:	fmul   st,st(2)
  44b9c6:	ror    BYTE PTR [ebp-0x80173],0x0
	...
  44b9dd:	add    BYTE PTR [eax],al
  44b9df:	add    bl,bh
  44b9e1:	pusha  
  44b9e2:	add    BYTE PTR ds:[edx+0x4e],ah
  44b9e6:	inc    ecx
  44b9e7:	(bad)  
  44b9e8:	jno    0x44ba60
  44b9ea:	aad    0x7c
  44b9ec:	cmp    eax,DWORD PTR [eax+0x3a241d0]
  44b9f2:	cmp    eax,0x825a1303
  44b9f7:	idiv   DWORD PTR [ebp+0x7e]
  44b9fa:	imul   esp,DWORD PTR [ecx-0x1f],0xcdff9b35
  44ba01:	jg     0x44ba06
  44ba03:	jae    0x44b993
  44ba05:	sahf   
  44ba06:	cmp    BYTE PTR [ecx+0x37ffe],0x62
  44ba0d:	sub    eax,0xede16229
  44ba12:	dec    ebx
  44ba13:	jmp    DWORD PTR [ebp+0x4273037f]
  44ba19:	call   0x80a6ba41
  44ba1e:	mov    BYTE PTR [ecx+0x38176],cl
  44ba24:	repnz pop ebp
  44ba26:	xor    BYTE PTR [esi],0x62
  44ba29:	inc    ebp
  44ba2a:	std    
  44ba2b:	aas    
  44ba2c:	loope  0x44b9ee
  44ba2e:	idiv   DWORD PTR [edx]
  44ba30:	bound  eax,QWORD PTR [ecx-0x2919fffd]
  44ba36:	adc    al,al
  44ba38:	and    DWORD PTR [ebx-0x7d9d0004],ebp
  44ba3e:	inc    eax
  44ba3f:	retf   
  44ba40:	push   ds
  44ba41:	aas    
  44ba42:	dec    eax
  44ba43:	retf   
	...
  44ba58:	push   ss
  44ba59:	sar    BYTE PTR [ecx+edx*2],1
  44ba5c:	jmp    0x64263bf2
  44ba61:	addr16 xor eax,0x18a1345
  44ba67:	rcr    bh,0x50
  44ba6a:	int    0xef
  44ba6c:	xor    ebx,DWORD PTR [ebx-0x25d94352]
  44ba72:	lods   eax,DWORD PTR ds:[esi]
  44ba73:	dec    eax
  44ba74:	sbb    DWORD PTR [esi-0x61e6b75b],ebx
  44ba7a:	bound  ecx,QWORD PTR [ecx+edi*4-0x58fc163d]
  44ba81:	pop    eax
  44ba82:	xor    ah,0x70
  44ba85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ba86:	out    0x8d,al
  44ba88:	int    0x31
  44ba8a:	xlat   BYTE PTR ds:[ebx]
  44ba8b:	add    esp,DWORD PTR [edx+0x60]
  44ba8e:	sbb    eax,esi
  44ba90:	fisub  WORD PTR [ecx]
  44ba92:	repnz mov ebp,DWORD PTR [ecx-0x36]
  44ba96:	push   esi
  44ba97:	les    esi,FWORD PTR [ecx-0x24]
  44ba9a:	xchg   edi,eax
  44ba9b:	jl     0x44ba91
  44ba9d:	ret    
  44ba9e:	jmp    0xd66699a6
  44baa3:	mov    BYTE PTR ds:0x54f871e1,bl
  44baa9:	ins    BYTE PTR es:[edi],dx
  44baaa:	test   eax,0xbfa24eef
  44baaf:	mov    bl,ch
  44bab1:	xor    edi,esi
  44bab3:	add    esp,DWORD PTR [edx+0x62]
  44bab6:	jno    0x44ba50
  44bab8:	jae    0x44ba93
  44baba:	jmp    0x44bb77
	...
  44bacf:	add    BYTE PTR [esi-0x9f3efa8],bh
  44bad5:	mov    bl,0x72
  44bad7:	mov    ah,0x65
  44bad9:	pusha  
  44bada:	mov    cl,0xef
  44badc:	fist   WORD PTR [ecx+0x31]
  44badf:	out    dx,al
  44bae0:	pop    ebp
  44bae1:	ins    BYTE PTR es:[edi],dx
  44bae2:	popa   
  44bae3:	clc    
  44bae4:	pop    edi
  44bae5:	fcom   QWORD PTR [edi-0x163ceb8d]
  44baeb:	add    ecx,DWORD PTR [ebx+0x19]
  44baee:	test   BYTE PTR [eax+0x3ef2dbd],0x62
  44baf5:	jno    0x44bb3e
  44baf7:	mov    ebx,ebp
  44baf9:	xor    bh,cl
  44bafb:	add    esp,DWORD PTR [edx+0x10]
  44bafe:	add    DWORD PTR [edx-0x623b5f5b],ebp
  44bb04:	popf   
  44bb05:	mov    al,ds:0xa0a5b5c4
  44bb0a:	les    ebp,FWORD PTR [ebp+0x62c4a09d]
  44bb10:	jmp    0x622dc944
  44bb15:	push   ds
  44bb16:	test   BYTE PTR [eax-0x11dd10a7],al
  44bb1c:	xlat   BYTE PTR ds:[ebx]
  44bb1d:	inc    ebx
  44bb1e:	mov    eax,0x8bd961df
  44bb23:	sbb    edx,edx
  44bb25:	push   esp
  44bb26:	dec    eax
  44bb27:	icebp  
  44bb28:	fxch   st(7)
  44bb2a:	adc    DWORD PTR [esi-0x5f],ebx
  44bb2d:	(bad)  
  44bb2e:	mov    esp,DWORD PTR [ecx-0x1eafab33]
	...
  44bb48:	pop    esi
  44bb49:	daa    
  44bb4a:	cwde   
  44bb4b:	cmp    BYTE PTR [edi-0x4ead0895],0x56
  44bb52:	leave  
  44bb53:	mov    bh,0x93
  44bb55:	push   esp
  44bb56:	dec    eax
  44bb57:	loope  0x44bb43
  44bb59:	sbb    ecx,DWORD PTR ds:0xe240973
  44bb5f:	jmp    0xf8591cc5
  44bb64:	push   ss
  44bb65:	lods   al,BYTE PTR ds:[esi]
  44bb66:	or     al,0xda
  44bb68:	sub    dl,bh
  44bb6a:	mov    DWORD PTR [ecx-0x37],esi
  44bb6d:	leave  
  44bb6e:	add    cl,ch
  44bb70:	fcom   DWORD PTR [ebx-0x4c]
  44bb73:	fbld   TBYTE PTR [ecx-0x27]
  44bb76:	pop    ebx
  44bb77:	sub    bl,BYTE PTR [ebp-0x5d4a3b62]
  44bb7d:	sahf   
  44bb7e:	les    ebp,FWORD PTR [ebp+0x3cc49ea2]
  44bb84:	mov    ebp,0xb537537e
  44bb89:	or     DWORD PTR [ebx-0x79f21700],0xffffffff
  44bb90:	in     al,0x6
  44bb92:	jne    0x44bc11
  44bb94:	add    edx,edi
  44bb96:	ins    BYTE PTR es:[edi],dx
  44bb97:	inc    edx
  44bb98:	sub    BYTE PTR ds:0x6d4b8b13,0x7f
  44bb9f:	sbb    al,0xa
  44bba1:	or     BYTE PTR [eax],bh
  44bba3:	adc    al,0x80
  44bba5:	and    eax,0x9d8056ff
  44bbaa:	adc    ecx,DWORD PTR [ebx+0x0]
	...
  44bbc0:	mov    al,0x14
  44bbc2:	fisttp WORD PTR [eax]
  44bbc4:	jae    0x44bb9f
  44bbc6:	adc    edi,edi
  44bbc8:	mov    esi,DWORD PTR [ecx+0x7c]
  44bbcb:	js     0x44bb7c
  44bbcd:	jmp    0x44bc16
  44bbcf:	or     BYTE PTR [ecx-0x56],dl
  44bbd2:	icebp  
  44bbd3:	rcl    DWORD PTR [ebx-0x27],1
  44bbd6:	adc    edi,edi
  44bbd8:	or     esp,DWORD PTR [ebx+0x7c]
  44bbdb:	js     0x44bb8c
  44bbdd:	jmp    0x44bc26
  44bbdf:	or     BYTE PTR [eax],dh
  44bbe1:	stos   BYTE PTR es:[edi],al
  44bbe2:	lock sar DWORD PTR [edx+0xc],1
  44bbe6:	add    BYTE PTR [eax+0x40f86f87],cl
  44bbec:	scas   eax,DWORD PTR es:[edi]
  44bbed:	daa    
  44bbee:	sbb    bl,0xef
  44bbf1:	mov    dh,0x8b
  44bbf3:	fwait
  44bbf4:	jnp    0x44bbcc
  44bbf6:	add    BYTE PTR [eax],al
  44bbf8:	add    BYTE PTR ds:0x6ebb8b13,ch
  44bbfe:	cmp    al,0x89
  44bc00:	(bad)  
  44bc01:	outs   dx,BYTE PTR ds:[esi]
  44bc02:	jge    0x44bc22
  44bc04:	repz push 0x6df68b06
  44bc0a:	clc    
  44bc0b:	inc    eax
  44bc0c:	das    
  44bc0d:	mov    al,ds:0xffaedb82
  44bc12:	pop    ecx
  44bc13:	pop    ebx
  44bc14:	xchg   BYTE PTR [edx],dl
  44bc16:	int3   
  44bc17:	int3   
  44bc18:	bound  ebp,QWORD PTR [ebp-0x5b161489]
  44bc1e:	hlt    
  44bc1f:	mov    ah,al
  44bc21:	or     eax,DWORD PTR [eax+eax*1]
	...
  44bc38:	(bad)  
  44bc39:	std    
  44bc3a:	jne    0x44bbc3
  44bc3c:	imul   eax,DWORD PTR [eax-0x781f78fd],0xfffffff6
  44bc43:	dec    DWORD PTR ds:0x592375e9
  44bc49:	add    BYTE PTR [ebx],0x2d
  44bc4c:	sub    esi,ebp
  44bc4e:	jge    0x44bccb
  44bc50:	push   0xe0c10380
  44bc55:	lahf   
  44bc56:	idiv   bh
  44bc58:	in     eax,0x7f
  44bc5a:	mov    bl,0x43
  44bc5c:	bound  edi,QWORD PTR [ebx]
  44bc5e:	jge    0x44bc8b
  44bc60:	imul   eax,DWORD PTR [eax+0x3c321403],0xcfe08703
  44bc6a:	idiv   edi
  44bc6c:	mov    ebp,0x69377dba
  44bc71:	add    BYTE PTR [ebx],0x28
  44bc74:	adc    bh,BYTE PTR [ebx+eax*1]
  44bc77:	(bad)  
  44bc78:	frstpm(287 only) 
  44bc7a:	mov    edx,DWORD PTR [ecx]
  44bc7c:	bound  eax,QWORD PTR [eax-0x7e297a8c]
  44bc82:	add    eax,DWORD PTR [eax]
  44bc84:	das    
  44bc85:	leave  
  44bc86:	ds jmp 0x2cae:0xcb37ca85
  44bc8e:	jbe    0x44bc7b
  44bc90:	loope  0x44bcfd
  44bc92:	and    dl,BYTE PTR [edx-0x21]
  44bc95:	in     al,dx
  44bc96:	pop    ebp
  44bc97:	sub    al,0x9b
  44bc99:	pop    ss
  44bc9a:	std    
  44bc9b:	inc    DWORD PTR [eax]
	...
  44bcad:	add    BYTE PTR [eax],al
  44bcaf:	add    BYTE PTR [edx+0x72],ah
  44bcb2:	push   ss
  44bcb3:	shl    bh,cl
  44bcb5:	cs mov ebp,0x55d9d961
  44bcbb:	pop    ss
  44bcbc:	inc    edx
  44bcbd:	add    bl,ch
  44bcbf:	push   edx
  44bcc0:	ret    
  44bcc1:	(bad)  
  44bcc3:	add    ebx,esi
  44bcc5:	xchg   edi,eax
  44bcc6:	aas    
  44bcc7:	jnp    0x44bc62
  44bcc9:	push   ds
  44bcca:	retf   0xa6c4
  44bccd:	popa   
  44bcce:	out    0xd1,al
  44bcd0:	add    DWORD PTR [ebp-0x1dd17849],ebp
  44bcd6:	std    
  44bcd7:	add    bl,dl
  44bcd9:	or     eax,0x8be10657
  44bcde:	or     eax,0x25306afa
  44bce3:	mov    bh,0x15
  44bce5:	push   ebp
  44bce6:	mov    eax,ds:0x255283c4
  44bceb:	mov    bh,0x5
  44bced:	jb     0x44bc88
  44bcef:	dec    edi
  44bcf0:	fisubr DWORD PTR [eax+0x7]
  44bcf3:	jnp    0x44bd56
  44bcf5:	xor    BYTE PTR [edi],bl
  44bcf7:	or     eax,0xb23de7bf
  44bcfc:	fidivr WORD PTR [esi-0x4c]
  44bcff:	inc    esp
  44bd00:	test   eax,0xc97cb495
  44bd05:	pop    esp
  44bd06:	xor    eax,0xf21ee6fc
  44bd0b:	mov    ah,0x12
  44bd0d:	push   esp
  44bd0e:	add    DWORD PTR [ebp+0x5d],edi
  44bd11:	shl    DWORD PTR [edx-0x4c],1
	...
  44bd28:	imul   edx,DWORD PTR [ecx+edx*8-0x7c],0x43da68a4
  44bd30:	fmul   QWORD PTR [esi]
  44bd32:	and    bh,BYTE PTR [ebx+0x28]
  44bd35:	gs mov ah,BYTE PTR es:0x6203e9cd
  44bd3d:	fldl2t 
  44bd3f:	add    esp,DWORD PTR [ebx+0x5df78d5f]
  44bd45:	push   0xd95fb400
  44bd4a:	add    BYTE PTR [esp+edx*4-0x1e],ah
  44bd4e:	cs dec edi
  44bd50:	fbld   TBYTE PTR [ebx-0x39ea1681]
  44bd56:	imul   DWORD PTR [edi-0xf]
  44bd59:	retf   
  44bd5a:	add    cl,ch
  44bd5c:	scas   al,BYTE PTR es:[edi]
  44bd5d:	dec    edx
  44bd5e:	push   eax
  44bd5f:	frstor [ecx-0x27]
  44bd62:	mov    DWORD PTR [ebp-0x65],esp
  44bd65:	add    al,0xc
  44bd67:	jmp    0xad821dcd
  44bd6c:	fwait
  44bd6d:	pop    esp
  44bd6e:	xor    BYTE PTR [ecx+0xa],al
  44bd71:	push   0xa07ee9f7
  44bd76:	jmp    0x44bd66
  44bd78:	dec    esi
  44bd79:	xchg   edi,eax
  44bd7a:	pop    esi
  44bd7b:	pusha  
  44bd7c:	mov    ch,0x58
  44bd7e:	add    ch,BYTE PTR [ecx]
  44bd80:	push   edi
  44bd81:	sbb    al,0xf9
  44bd83:	std    
  44bd84:	lahf   
  44bd85:	in     eax,0xb6
  44bd87:	sbb    edx,ebx
  44bd89:	addr16 imul ebx
	...
  44bda0:	pushf  
  44bda1:	push   ss
  44bda2:	test   BYTE PTR [eax+0x5f],ah
  44bda5:	in     al,0xfd
  44bda7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44bda8:	ds daa 
  44bdaa:	jmp    0x44bd97
  44bdac:	dec    esi
  44bdad:	cdq    
  44bdae:	mul    DWORD PTR [edi-0xf]
  44bdb1:	retf   
  44bdb2:	add    cl,ch
  44bdb4:	es dec edx
  44bdb6:	push   eax
  44bdb7:	aad    0x61
  44bdb9:	(bad)  [ecx+0xc041b6d]
  44bdbf:	jmp    0xe945ed25
  44bdc4:	popa   
  44bdc5:	fstp   DWORD PTR [esi+0x70]
  44bdc8:	jne    0x44be22
  44bdca:	mov    esi,0xd016b6d
  44bdcf:	jmp    0x13c9735
  44bdd4:	in     eax,dx
  44bdd5:	inc    ebx
  44bdd6:	adc    DWORD PTR [eax],eax
  44bdd8:	dec    ebx
  44bdd9:	pusha  
  44bdda:	int3   
  44bddb:	je     0x44be1d
  44bddd:	fidiv  DWORD PTR [ecx+0x1fdcb844]
  44bde3:	xchg   bh,ch
  44bde5:	outs   dx,DWORD PTR ds:[esi]
  44bde6:	idiv   edi
  44bde8:	enter  0x4757,0x14
  44bdec:	dec    ebx
  44bded:	fcomi  st,st(6)
  44bdef:	jnp    0x44bdba
  44bdf1:	in     al,0x4a
  44bdf3:	cld    
  44bdf4:	mov    al,0x20
  44bdf6:	dec    DWORD PTR [eax-0x79822eaf]
  44bdfc:	jnp    0x44be5f
  44bdfe:	idiv   edi
  44be00:	mov    dl,0xc2
  44be02:	mov    dh,0x8b
	...
  44be18:	and    ebp,DWORD PTR [ebp-0x233f7c14]
  44be1e:	je     0x44be31
  44be20:	cmp    dl,ah
  44be22:	shr    eax,0xd3
  44be25:	stc    
  44be26:	clc    
  44be27:	push   DWORD PTR [eax]
  44be29:	pop    edx
  44be2a:	ret    
  44be2b:	add    al,0x48
  44be2d:	adc    dh,bh
  44be2f:	jl     0x44be0d
  44be31:	loop   0x44be75
  44be33:	clc    
  44be34:	inc    edx
  44be35:	nop
  44be36:	out    dx,eax
  44be37:	jmp    0x44bded
  44be39:	pop    ecx
  44be3a:	mov    ds:0xdacb24,eax
  44be3f:	add    BYTE PTR [eax+0x5f],al
  44be42:	inc    edi
  44be43:	adc    al,0xbb
  44be45:	fidivr DWORD PTR [ebp-0x74]
  44be48:	xor    eax,0x8bfffc29
  44be4d:	jecxz  0x44bde8
  44be4f:	pusha  
  44be50:	sbb    dl,0x0
  44be53:	dec    eax
  44be54:	add    bl,BYTE PTR [edi+0x47]
  44be57:	adc    al,0x7b
  44be59:	ficomp DWORD PTR [esi+0x1]
  44be5c:	lock push ds
  44be5e:	jg     0x44bdee
  44be60:	bound  edx,QWORD PTR [eax-0x6]
  44be63:	jmp    FWORD PTR [ebp-0x28]
  44be66:	(bad)  
  44be67:	jmp    0x44bece
  44be69:	fistp  QWORD PTR [ebx-0x7f]
  44be6c:	ret    0x36b
  44be6f:	add    cl,ah
  44be71:	mov    ecx,0x4bf7fe47
  44be76:	out    dx,eax
  44be77:	inc    DWORD PTR [ebp-0x15]
  44be7a:	jne    0x44becf
	...
  44be90:	push   esi
  44be91:	jo     0x44be96
  44be93:	xchg   esi,edx
  44be95:	std    
  44be96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44be97:	add    al,0x62
  44be99:	jo     0x44be97
  44be9b:	xchg   ecx,eax
  44be9c:	mov    es,WORD PTR [ebx+eax*1-0x500a1700]
  44bea3:	adc    esp,DWORD PTR [edx+0x70]
  44bea6:	je     0x44be2b
  44bea8:	(bad)  
  44beaa:	sti    
  44beab:	inc    DWORD PTR ds:0xe5137bd6
  44beb1:	fld    QWORD PTR [ebx]
  44beb3:	adc    al,0xd5
  44beb5:	cli    
  44beb6:	shl    bh,0x84
  44beb9:	stc    
  44beba:	out    dx,eax
  44bebb:	mov    al,bl
  44bebd:	add    esp,esi
  44bebf:	push   edi
  44bec0:	jbe    0x44bf32
  44bec2:	add    eax,DWORD PTR [esi+0x13ab75e6]
  44bec8:	bound  esi,QWORD PTR [eax-0x7e]
  44becb:	ret    
  44becc:	pop    esi
  44becd:	mov    edx,0xa1f4082d
  44bed2:	sar    ah,cl
  44bed4:	fs inc esi
  44bed6:	sub    al,0x84
  44bed8:	pop    ds
  44bed9:	or     BYTE PTR [esi-0x43],al
  44bedc:	fiadd  DWORD PTR [ebx]
  44bede:	not    BYTE PTR [edi+0x76]
  44bee1:	jo     0x44bee6
  44bee3:	or     ebp,ecx
  44bee5:	rcr    ch,0x86
  44bee8:	inc    DWORD PTR ss:[ecx]
  44beeb:	(bad)  
  44beec:	fcmovnu st,st(0)
  44beee:	mov    ch,0x6e
  44bef0:	jg     0x44bf42
  44bef2:	jcxz   0x44bef5
	...
  44bf05:	add    BYTE PTR [eax],al
  44bf07:	add    BYTE PTR [esi-0x27],bl
  44bf0a:	jmp    0x631cc6d3
  44bf0f:	inc    ebp
  44bf10:	fcom   QWORD PTR [ebx]
  44bf12:	add    bl,BYTE PTR [ebx-0x71]
  44bf15:	jne    0x44bf0d
  44bf17:	dec    ebp
  44bf18:	(bad)  
  44bf19:	popf   
  44bf1a:	in     eax,0x82
  44bf1c:	or     ecx,DWORD PTR [edx]
  44bf1e:	into   
  44bf1f:	add    esp,DWORD PTR [edx-0x29]
  44bf22:	out    dx,al
  44bf23:	jle    0x44bfa4
  44bf25:	fs (bad) 
  44bf27:	dec    ebp
  44bf28:	cmp    dl,BYTE PTR [ebp+esi*1-0x8]
  44bf2c:	sub    eax,0x91866265
  44bf31:	int    0xe9
  44bf33:	add    esp,edi
  44bf35:	dec    ebx
  44bf36:	dec    ecx
  44bf37:	stc    
  44bf38:	adc    eax,0x65bf6265
  44bf3d:	push   edx
  44bf3e:	dec    ebp
  44bf3f:	xchg   BYTE PTR [ecx-0x18fc1630],ch
  44bf45:	fwait
  44bf46:	xchg   ecx,eax
  44bf47:	sub    eax,0x798e6509
  44bf4c:	mov    BYTE PTR [ebp+0x54],ah
  44bf4f:	jbe    0x44bf7a
  44bf51:	shr    cl,1
  44bf53:	add    ecx,edx
  44bf55:	sub    dh,BYTE PTR [ebp+ecx*2-0x26]
  44bf59:	add    al,0x13
  44bf5b:	jns    0x44bf1d
  44bf5d:	push   es
  44bf5e:	stos   DWORD PTR es:[edi],eax
  44bf5f:	inc    eax
  44bf60:	cdq    
  44bf61:	xchg   ebp,eax
  44bf62:	sub    eax,0x2595a940
  44bf67:	inc    eax
  44bf68:	test   eax,0x78b795
	...
  44bf7d:	add    BYTE PTR [eax],al
  44bf7f:	add    BYTE PTR [ebp+0x5ef05f50],bh
  44bf85:	fldl2t 
  44bf87:	jle    0x44bf74
  44bf89:	dec    ebp
  44bf8a:	jmp    0x1502192
  44bf8f:	inc    ecx
  44bf90:	jmp    0x44c004
  44bf92:	imul   DWORD PTR [esi]
  44bf94:	or     ebx,DWORD PTR [edx+0x28]
  44bf97:	repnz popa 
  44bf99:	fld    DWORD PTR [ebp+0xdaf66f]
  44bf9f:	jmp    0xffde3c5b
  44bfa4:	push   ss
  44bfa5:	popa   
  44bfa6:	test   DWORD PTR [edi+0x76],ebp
  44bfa9:	fiadd  WORD PTR [eax]
  44bfab:	jmp    0xf50a3bc1
  44bfb0:	sahf   
  44bfb1:	popa   
  44bfb2:	and    DWORD PTR ds:0xe9122162,0x61
  44bfb9:	fldpi  
  44bfbb:	jmp    0x5bd7:0xe6011bb4
  44bfc2:	xor    al,0xa
  44bfc4:	push   ds
  44bfc5:	fs pop ebp
  44bfc7:	push   0xffffffed
  44bfc9:	push   ecx
  44bfca:	jbe    0x44bfbf
  44bfcc:	popa   
  44bfcd:	fld    DWORD PTR [eax]
  44bfcf:	cmp    al,0x29
  44bfd1:	shr    DWORD PTR [esi+0x40c65a59],1
  44bfd7:	jmp    0x77f9a4e3
  44bfdc:	daa    
  44bfdd:	fiadd  WORD PTR [eax]
  44bfdf:	jmp    0xde7da845
	...
  44bff8:	iret   
  44bff9:	pop    ebx
  44bffa:	cmp    cl,dl
  44bffc:	mov    eax,ds:0xe56a5d63
  44c001:	push   ecx
  44c002:	jbe    0x44bfe7
  44c004:	popa   
  44c005:	fld    DWORD PTR [eax]
  44c007:	hlt    
  44c008:	jb     0x44bfdc
  44c00a:	scas   al,BYTE PTR es:[edi]
  44c00b:	jns    0x44c075
  44c00d:	mov    BYTE PTR [eax-0x17],0xbf
  44c011:	in     al,0xb4
  44c013:	jg     0x44bfb4
  44c015:	fld    QWORD PTR [eax]
  44c017:	jmp    0x75a87d
  44c01c:	or     BYTE PTR [eax],al
  44c01e:	add    al,0x83
  44c020:	and    ebx,ecx
  44c022:	jnp    0x44bfd4
  44c024:	push   es
  44c025:	and    al,0x37
  44c027:	adc    DWORD PTR [edx-0x1b],edi
  44c02a:	lahf   
  44c02b:	push   ss
  44c02c:	mov    edx,edi
  44c02e:	pop    edx
  44c02f:	ret    
  44c030:	mov    bl,0xe2
  44c032:	dec    ebx
  44c033:	inc    eax
  44c034:	push   0xffffffd6
  44c036:	mov    ch,BYTE PTR [eax+0x5e00d76d]
  44c03c:	mov    BYTE PTR [ecx-0x21],bl
  44c03f:	add    al,dh
  44c041:	and    dh,BYTE PTR [edi]
  44c043:	adc    DWORD PTR [edx],edi
  44c045:	in     eax,0x9f
  44c047:	push   ss
  44c048:	cmp    edx,edi
  44c04a:	pop    edx
  44c04b:	ret    
  44c04c:	enter  0xf505,0x8c
  44c050:	xchg   DWORD PTR [ebp+0x45c50106],ebx
  44c056:	adc    DWORD PTR [eax],eax
  44c058:	cmp    esi,DWORD PTR [ecx]
  44c05a:	mov    ah,0xcc
	...
  44c070:	xlat   BYTE PTR ds:[ebx]
  44c071:	mov    eax,ds:0xa1c7cccb
  44c076:	retf   
  44c077:	int3   
  44c078:	outs   dx,BYTE PTR ds:[esi]
  44c079:	loop   0x44c066
  44c07b:	mov    edi,DWORD PTR [esi]
  44c07d:	gs jl  0x44c008
  44c080:	xchg   DWORD PTR [edi-0x9],esp
  44c083:	dec    DWORD PTR [eax+0x627e0b14]
  44c089:	sub    dl,BYTE PTR [ecx-0x75]
  44c08c:	dec    esi
  44c08d:	imul   esp,DWORD PTR [ecx-0x75],0xe2c477fd
  44c094:	push   eax
  44c095:	and    eax,0xe6c265ff
  44c09a:	scas   eax,DWORD PTR es:[edi]
  44c09b:	push   ss
  44c09c:	mov    ebx,0xe3b609d6
  44c0a1:	push   ebp
  44c0a2:	adc    DWORD PTR [eax],eax
  44c0a4:	retf   
  44c0a5:	jecxz  0x44c0ee
  44c0a7:	adc    al,0x62
  44c0a9:	clc    
  44c0aa:	call   0x648f15bd
  44c0af:	mov    dh,0x74
  44c0b1:	jo     0x44c0b6
  44c0b3:	stc    
  44c0b4:	and    cl,BYTE PTR [esi+esi*2-0x530889b9]
  44c0bb:	pop    es
  44c0bc:	ficom  DWORD PTR [esp+ebp*8-0xd032d7c]
  44c0c3:	push   DWORD PTR [ebp-0x3d]
  44c0c6:	mov    esp,0x1560b313
  44c0cb:	(bad)  
  44c0cc:	cld    
  44c0cd:	sahf   
  44c0ce:	pop    edx
  44c0cf:	test   BYTE PTR [edi+0xbd7e80],ch
	...
  44c0e5:	add    BYTE PTR [eax],al
  44c0e7:	add    BYTE PTR [ecx-0x17],dl
  44c0ea:	ins    BYTE PTR es:[edi],dx
  44c0eb:	mov    ebx,0x85037074
  44c0f0:	scas   eax,DWORD PTR es:[edi]
  44c0f1:	test   cl,ah
  44c0f3:	xchg   dl,dh
  44c0f5:	aaa    
  44c0f6:	icebp  
  44c0f7:	push   DWORD PTR ds:0x6365a7a2
  44c0fd:	cwde   
  44c0fe:	(bad)  
  44c0ff:	hlt    
  44c100:	and    eax,0x66c37e93
  44c105:	mov    ebp,0xcce9613f
  44c10a:	lock popa 
  44c10c:	xor    DWORD PTR [esi-0x69e4182],ecx
  44c112:	jnp    0x44c0cf
  44c114:	push   esp
  44c115:	jo     0x44c11a
  44c117:	test   DWORD PTR [edi-0x2df91ea0],esp
  44c11d:	pop    es
  44c11e:	bnd jmp ebp
  44c121:	div    BYTE PTR [eax+0x5b71480b]
  44c127:	dec    ebp
  44c128:	(bad)  
  44c12a:	dec    edx
  44c12b:	jl     0x44c0d3
  44c12d:	jae    0x44c0d7
  44c12f:	mov    esp,0xcb2f4396
  44c134:	scas   al,BYTE PTR es:[edi]
  44c135:	fsubr  DWORD PTR ds:0x2594a937
  44c13b:	aaa    
  44c13c:	cdq    
  44c13d:	xchg   esp,eax
  44c13e:	mov    ah,0x7e
  44c140:	mov    ecx,0x38fb9c4d
  44c145:	jo     0x44c0dc
  44c147:	dec    ebp
  44c148:	call   0x0:0x372561
	...
  44c15f:	add    BYTE PTR [ecx+0x797e9494],bl
  44c165:	dec    ebp
  44c166:	pushf  
  44c167:	sti    
  44c168:	out    0x50,al
  44c16a:	pop    ebp
  44c16b:	icebp  
  44c16c:	jne    0x44c1cf
  44c16e:	arpl   WORD PTR ds:0xe1e9d962,ax
  44c174:	xchg   esi,eax
  44c175:	jbe    0x44c131
  44c177:	mov    cl,0x1b
  44c179:	fucomi st,st(1)
  44c17b:	add    esp,DWORD PTR [edx-0x9]
  44c17e:	lock jae 0x44c196
  44c181:	enter  0x3e9,0xc7
  44c185:	(bad)  
  44c186:	aam    0xc9
  44c188:	test   eax,0xed6c97d0
  44c18d:	(bad)  
  44c18e:	jmp    0xf64ea896
  44c193:	jl     0x44c132
  44c195:	shl    DWORD PTR [ecx-0x18],1
  44c198:	ins    BYTE PTR es:[edi],dx
  44c199:	fidivr DWORD PTR [ecx]
  44c19b:	lock push 0x27
  44c19e:	popa   
  44c19f:	mov    esi,DWORD PTR [ebx-0x27]
  44c1a2:	jmp    0x630a5f23
  44c1a7:	mov    ah,0x65
  44c1a9:	push   ecx
  44c1aa:	std    
  44c1ab:	repnz fimul WORD PTR [ecx+0x55]
  44c1af:	repnz in eax,dx
  44c1b1:	pusha  
  44c1b2:	call   0x594d138a
  44c1b7:	hlt    
  44c1b8:	xchg   DWORD PTR [ebx-0x269df9c2],edx
  44c1be:	jmp    0xb560a4
  44c1c3:	push   0x0
	...
  44c1d5:	add    BYTE PTR [eax],al
  44c1d7:	add    BYTE PTR [ebp*2-0x3515a677],bl
  44c1de:	add    cl,ch
  44c1e0:	ret    
  44c1e1:	push   edi
  44c1e2:	mov    eax,0xf760b0a1
  44c1e7:	mov    dh,0x6
  44c1e9:	xlat   BYTE PTR ds:[ebx]
  44c1ea:	sub    DWORD PTR [eax],0x67
  44c1ed:	pop    eax
  44c1ee:	mov    BYTE PTR [ebp+0x72f76090],al
  44c1f4:	push   cs
  44c1f5:	and    al,0xe
  44c1f7:	jmp    0xc817705d
  44c1fc:	ss jle 0x44c25d
  44c1ff:	lock icebp 
  44c201:	daa    
  44c202:	push   cs
  44c203:	jmp    0xe13ea069
  44c208:	fwait
  44c209:	adc    ecx,DWORD PTR [eax]
  44c20b:	push   edi
  44c20c:	into   
  44c20d:	sub    BYTE PTR [esi],cl
  44c20f:	jmp    0xd5951875
  44c214:	into   
  44c215:	sbb    BYTE PTR [ecx],cl
  44c217:	popa   
  44c218:	cmp    cl,bh
  44c21a:	add    DWORD PTR [ecx+0x4d],edi
  44c21d:	shr    DWORD PTR [esi+0xc9e881],1
  44c223:	jmp    0x6251dad6
  44c228:	icebp  
  44c229:	xlat   BYTE PTR ds:[ebx]
  44c22a:	mov    ch,ch
  44c22c:	adc    BYTE PTR [edi+0x67],bl
  44c22f:	fst    QWORD PTR [esi+0x61d7b450]
  44c235:	fnstenv [ecx+0x2a6b6ed9]
  44c23b:	mov    ds:0x0,eax
	...
  44c250:	add    ecx,DWORD PTR [ebp+0x699f6ae6]
  44c256:	mov    DWORD PTR [ecx-0x1b],edi
  44c259:	leave  
  44c25a:	add    cl,ch
  44c25c:	add    edx,DWORD PTR [edi-0x50]
  44c25f:	push   ecx
  44c260:	rcr    DWORD PTR [edi-0x9],cl
  44c263:	add    BYTE PTR [ebp+0x2e],bh
  44c266:	pop    edx
  44c267:	jmp    0x3dd537
  44c26c:	cmp    BYTE PTR [ebx],bl
  44c26e:	add    DWORD PTR [esi+0x42],ebx
  44c271:	in     al,0xbb
  44c273:	push   ss
  44c274:	retf   
  44c275:	fisttp DWORD PTR [ebp+0x5d]
  44c278:	adc    dh,BYTE PTR [ecx]
  44c27a:	out    dx,al
  44c27b:	dec    DWORD PTR [eax+ebp*4]
  44c27e:	retf   
  44c27f:	int3   
  44c280:	jg     0x44c22a
  44c282:	retf   
  44c283:	int3   
  44c284:	dec    edi
  44c285:	test   al,0xcb
  44c287:	int3   
  44c288:	aas    
  44c289:	test   al,0xcb
  44c28b:	int3   
  44c28c:	out    0xdc,al
  44c28e:	jmp    0x44c2e1
  44c290:	fcomp  st(4)
  44c292:	pop    edx
  44c293:	adc    BYTE PTR [ebp-0x7f78d24],dh
  44c299:	push   ecx
  44c29a:	add    DWORD PTR [eax],0x7b
  44c29d:	fild   DWORD PTR [eax]
  44c29f:	push   edi
  44c2a0:	test   BYTE PTR [edi],bl
  44c2a2:	sti    
  44c2a3:	add    BYTE PTR [ebx-0x25],cl
  44c2a6:	add    BYTE PTR [esi-0x18],bh
  44c2a9:	fnstsw WORD PTR [ecx]
  44c2ab:	or     esp,0xffffffc6
  44c2ae:	div    BYTE PTR [ebx+eax*2+0x3]
  44c2b2:	xchg   edx,eax
  44c2b3:	clc    
	...
  44c2c8:	cmp    al,0x17
  44c2ca:	jg     0x44c313
  44c2cc:	pop    edi
  44c2cd:	loopne 0x44c250
  44c2cf:	sbb    BYTE PTR [eax-0x25],al
  44c2d2:	add    BYTE PTR [eax+0x23],dl
  44c2d5:	iret   
  44c2d6:	in     eax,dx
  44c2d7:	call   FWORD PTR [ecx+eiz*8]
  44c2da:	mov    DWORD PTR [eax+edx*1],esp
  44c2dd:	fild   DWORD PTR [eax]
  44c2df:	push   ecx
  44c2e0:	and    eax,ebx
  44c2e2:	in     eax,dx
  44c2e3:	dec    esp
  44c2e5:	pop    edx
  44c2e6:	ret    
  44c2e7:	or     BYTE PTR [eax-0x61],dh
  44c2ea:	fbld   TBYTE PTR [ecx]
  44c2ec:	into   
  44c2ed:	push   ss
  44c2ee:	stc    
  44c2ef:	mov    esp,DWORD PTR [edx-0x22]
  44c2f2:	xchg   esp,eax
  44c2f3:	adc    DWORD PTR [edx+0x70],esp
  44c2f6:	jp     0x44c281
  44c2f8:	push   es
  44c2f9:	jg     0x44c2fe
  44c2fb:	add    cl,ah
  44c2fd:	xor    bh,dl
  44c2ff:	jl     0x44c2a4
  44c301:	jp     0x44c33f
  44c303:	in     eax,0x61
  44c305:	xor    DWORD PTR [ebp-0x4],edx
  44c308:	jmp    0xf687:0x98343f2d
  44c30f:	in     al,0x61
  44c311:	cmc    
  44c312:	mov    ebx,0x79a1e902
  44c317:	cmp    al,0x5e
  44c319:	fild   DWORD PTR [edx+0x70]
  44c31c:	imul   ebp,ebx,0xb0df0bc1
  44c322:	rcl    BYTE PTR [ebx],1
  44c324:	jmp    0x1195aa56
  44c329:	and    BYTE PTR [ebp+0xe7],ah
	...
  44c33f:	add    BYTE PTR [ebx-0x1e07c043],dh
  44c345:	lods   al,BYTE PTR ds:[esi]
  44c346:	in     al,dx
  44c347:	out    0xae,al
  44c349:	jno    0x44c34e
  44c34b:	add    cl,ah
  44c34d:	adc    eax,0x704dff75
  44c352:	test   DWORD PTR [eax],0xfffc9cde
  44c358:	bound  ebp,QWORD PTR [ebx]
  44c35a:	cmp    DWORD PTR [eax],ecx
  44c35c:	fiadd  WORD PTR [ebx+eax*1+0x0]
  44c360:	(bad)  
  44c361:	jmp    0x44c3d0
  44c363:	mov    ebx,0x8503704c
  44c368:	lahf   
  44c369:	fs js  0x44c3bc
  44c36c:	pop    esi
  44c36d:	repz inc esp
  44c36f:	or     cl,BYTE PTR [edx+eax*8+0xe2084d6]
  44c376:	xor    al,0xdf
  44c378:	jmp    0x6ba6b43a
  44c37d:	fldenv [edi-0x75]
  44c380:	push   ebx
  44c381:	fldl2t 
  44c383:	div    BYTE PTR [ebx-0x2212aec2]
  44c389:	pop    ebp
  44c38a:	bound  edi,QWORD PTR [ebp+0x4dd515d]
  44c390:	retf   
  44c391:	push   ss
  44c392:	into   
  44c393:	not    BYTE PTR [ebx]
  44c395:	aas    
  44c396:	xor    ch,ch
  44c398:	mov    ebp,0x51bd625d
  44c39d:	push   edx
  44c39e:	scas   eax,DWORD PTR es:[edi]
  44c39f:	sti    
  44c3a0:	in     eax,0xbc
  44c3a2:	icebp  
  44c3a3:	jp     0x44c3a5
	...
  44c3b5:	add    BYTE PTR [eax],al
  44c3b7:	add    bl,ah
  44c3b9:	sbb    al,0xf7
  44c3bb:	add    esp,DWORD PTR [edx+0x5e]
  44c3be:	lahf   
  44c3bf:	out    dx,eax
  44c3c0:	(bad)  
  44c3c1:	enter  0x3c13,0x3
  44c3c5:	mov    dl,BYTE PTR [ebx-0x7e]
  44c3c8:	lds    ebp,FWORD PTR [ecx+0x60]
  44c3cb:	jge    0x44c386
  44c3cd:	(bad)  
  44c3ce:	jmp    0x7794c3d6
  44c3d3:	mov    edx,DWORD PTR [ebx-0x27]
  44c3d6:	jmp    0x3b3c1a35
  44c3db:	popa   
  44c3dc:	ret    
  44c3dd:	shr    BYTE PTR [edi-0x75],cl
  44c3e0:	jae    0x44c3bb
  44c3e2:	jmp    0x711dd069
  44c3e7:	jne    0x44c3f2
  44c3e9:	(bad)  
  44c3ea:	jmp    0xe65baaf2
  44c3ef:	jns    0x44c3dc
  44c3f1:	mov    cl,0xf2
  44c3f3:	add    esp,DWORD PTR [edx+0x50]
  44c3f6:	outs   dx,DWORD PTR ds:[esi]
  44c3f7:	call   0xc42e9d5a
  44c3fc:	lods   eax,DWORD PTR ds:[esi]
  44c3fd:	sbb    bh,BYTE PTR [ecx]
  44c3ff:	ret    0x71a7
  44c402:	adc    eax,0x645d0a53
  44c407:	jle    0x44c3e6
  44c409:	rol    BYTE PTR [eax],cl
  44c40b:	jmp    0x5fcacd71
  44c410:	jb     0x44c46e
  44c412:	imul   ecx
  44c414:	mov    al,0x55
  44c416:	mov    esi,0xf76d6f91
  44c41b:	xchg   esi,eax
	...
  44c430:	jecxz  0x44c3ca
  44c432:	or     al,0x80
  44c434:	pop    eax
  44c435:	pop    esp
  44c436:	imul   ecx
  44c438:	dec    edx
  44c439:	push   edx
  44c43a:	mov    ah,0xd7
  44c43c:	popa   
  44c43d:	(bad)  [ebx+0x3f4fcdf4]
  44c443:	jmp    0x44c427
  44c445:	arpl   WORD PTR ds:0x8bfaf3e7,ax
  44c44b:	cmp    DWORD PTR [ebp+ecx*4-0x372b9d1e],eax
  44c452:	pop    esi
  44c453:	loopne 0x44c45c
  44c455:	and    al,0xe
  44c457:	jmp    0x5ff396bd
  44c45c:	(bad)  
  44c45d:	retf   0xe900
  44c460:	cli    
  44c461:	or     DWORD PTR [ecx],ecx
  44c463:	popa   
  44c464:	mov    cl,bl
  44c466:	imul   DWORD PTR [edi+0x7faed17d]
  44c46c:	fxch   st(2)
  44c46e:	add    cl,ch
  44c470:	ficom  DWORD PTR [edx]
  44c472:	or     eax,0x88d40462
  44c477:	in     eax,0x50
  44c479:	push   ebp
  44c47a:	mov    ?,WORD PTR ds:0xf6f75c34
  44c480:	inc    edi
  44c482:	mov    cl,0xd9
  44c484:	pop    ebx
  44c485:	xchg   ebx,eax
  44c486:	pop    esi
  44c487:	mov    edx,0xdac2dd89
  44c48c:	test   al,0x4a
  44c48e:	mov    ah,0xff
  44c490:	popa   
  44c491:	fstp   DWORD PTR [esi+0x60]
	...
  44c4a8:	xchg   edi,eax
  44c4a9:	and    al,0xe
  44c4ab:	add    bl,bh
  44c4ad:	xlat   BYTE PTR ds:[ebx]
  44c4ae:	fst    QWORD PTR [ebx]
  44c4b0:	popf   
  44c4b1:	stos   BYTE PTR es:[edi],al
  44c4b2:	xlat   BYTE PTR ds:[ebx]
  44c4b3:	data16 add bl,dh
  44c4b6:	scas   eax,DWORD PTR es:[edi]
  44c4b7:	push   ss
  44c4b8:	or     ebx,eax
  44c4ba:	jne    0x44c47d
  44c4bc:	clc    
  44c4bd:	fimul  WORD PTR [ecx+0xd7edbc]
  44c4c3:	push   0x40c053
  44c4c8:	arpl   WORD PTR [ebp+0x23],bp
  44c4cb:	inc    eax
  44c4cc:	mov    ebx,0xbbe8c1e0
  44c4d1:	or     cl,bh
  44c4d3:	dec    DWORD PTR [eax-0x64]
  44c4d6:	dec    DWORD PTR [edx-0x191e0033]
  44c4dc:	inc    esp
  44c4dd:	adc    eax,0x5c8fff83
  44c4e2:	jl     0x44c4aa
  44c4e4:	and    esi,DWORD PTR [ecx+0x3524fff0]
  44c4ea:	pop    ecx
  44c4eb:	pop    ebx
  44c4ec:	adc    bl,bh
  44c4ee:	pop    edx
  44c4ef:	ret    
  44c4f0:	aaa    
  44c4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44c4f2:	retf   
  44c4f3:	int3   
  44c4f4:	fsubrp st(0),st
  44c4f6:	jmp    0x44c483
  44c4f8:	(bad)  
  44c4f9:	pop    edi
  44c4fa:	inc    esp
  44c4fb:	mov    esp,DWORD PTR [esi+0x428b5067]
  44c501:	pop    ss
  44c502:	jmp    0xf93c8f17
  44c507:	dec    DWORD PTR [ebx-0x29]
  44c50a:	jne    0x44c507
	...
  44c520:	cmp    cl,BYTE PTR [esp+0x862fe8b]
  44c527:	mov    dh,0x1b
  44c529:	fidivr DWORD PTR [esi-0x6f6cd7f]
  44c52f:	add    BYTE PTR [ebx],bh
  44c531:	and    eax,0xa5128101
  44c536:	clc    
  44c537:	add    BYTE PTR [edx+0x70],ah
  44c53a:	(bad)  
  44c53b:	mul    bl
  44c53d:	mov    ebp,DWORD PTR ds:0xad7062f8
  44c543:	add    ebx,esp
  44c545:	mov    ebp,DWORD PTR ds:0x867062f8
  44c54b:	shl    BYTE PTR [ebx],0x91
  44c54e:	or     al,0x59
  44c550:	pop    ecx
  44c551:	xor    edi,edx
  44c553:	pop    edx
  44c554:	and    BYTE PTR [ebp+0x3],ch
  44c557:	push   edx
  44c558:	jmp    0xccc7d61a
  44c55d:	lds    eax,FWORD PTR [esi]
  44c55f:	mov    esp,DWORD PTR [ecx+esi*2]
  44c562:	loope  0x44c5bc
  44c564:	sub    DWORD PTR [ebp-0x109df4c2],edi
  44c56a:	aaa    
  44c56b:	rdtsc  
  44c56d:	scas   eax,DWORD PTR es:[edi]
  44c56e:	mov    esp,edx
  44c570:	ss pop esi
  44c572:	nop
  44c573:	mov    ds:0x3707e,eax
  44c578:	bound  esi,QWORD PTR [ebx+0x79]
  44c57b:	add    DWORD PTR [ecx-0x48],esp
  44c57e:	retf   0x8afc
  44c581:	daa    
  44c582:	mov    eax,0xf2
	...
  44c597:	add    bl,ah
  44c599:	sbb    DWORD PTR [esi],ebp
  44c59b:	clc    
  44c59c:	bound  esi,QWORD PTR [eax-0x53]
  44c59f:	add    ebx,esp
  44c5a1:	sbb    DWORD PTR [esi],ebp
  44c5a3:	clc    
  44c5a4:	bound  esi,QWORD PTR [eax+0x7b]
  44c5a7:	outs   dx,BYTE PTR ds:[esi]
  44c5a8:	loop   0x44c61d
  44c5aa:	xor    eax,0x45
  44c5ad:	mov    cl,0x26
  44c5af:	or     cl,ch
  44c5b1:	lods   eax,DWORD PTR ds:[esi]
  44c5b2:	cmp    eax,0x3d8766df
  44c5b7:	cld    
  44c5b8:	sbb    al,0x3a
  44c5ba:	cmp    al,0xdf
  44c5bc:	push   edx
  44c5bd:	inc    ebx
  44c5be:	push   es
  44c5bf:	mov    edi,0xb3d4d99
  44c5c4:	(bad)  
  44c5c5:	fldcw  WORD PTR [eax+0x3e]
  44c5c8:	cmc    
  44c5c9:	ret    
  44c5ca:	jmp    0xbb9c30d2
  44c5cf:	add    esp,DWORD PTR [edx-0x27]
  44c5d2:	xchg   ecx,eax
  44c5d3:	jb     0x44c599
  44c5d5:	jmp    0xed3:0x98263b1f
  44c5dc:	in     eax,0x3
  44c5de:	fiadd  WORD PTR [esi+edi*8+0x6203cc28]
  44c5e5:	and    DWORD PTR [edx+0x5],eax
  44c5e8:	(bad)  
  44c5e9:	fldenv [edi+eiz*4-0x7f]
  44c5ed:	(bad)  
  44c5ef:	jns    0x44c664
  44c5f1:	(bad)  
  44c5f2:	mov    ds:0xe9031012,eax
  44c5f7:	push   es
  44c5f8:	int    0xd5
  44c5fa:	mov    bl,0x12
	...
  44c610:	lock add ch,ah
  44c613:	push   es
  44c614:	lods   eax,DWORD PTR ds:[esi]
  44c615:	aad    0xa3
  44c617:	adc    dh,al
  44c619:	add    ch,bl
  44c61b:	push   es
  44c61c:	lods   eax,DWORD PTR ds:[esi]
  44c61d:	aad    0x33
  44c61f:	adc    dl,al
  44c621:	add    ah,dh
  44c623:	push   es
  44c624:	(bad)  
  44c625:	aad    0x23
  44c627:	adc    dl,al
  44c629:	add    ah,ch
  44c62b:	push   es
  44c62c:	(bad)  
  44c62d:	aad    0x33
  44c62f:	adc    dh,BYTE PTR [eax+0x6d06e802]
  44c635:	aad    0x23
  44c637:	adc    dh,BYTE PTR [eax+0x6d06e702]
  44c63d:	aad    0x33
  44c63f:	adc    dl,BYTE PTR [eax]
  44c641:	mov    al,0xe1
  44c643:	push   es
  44c644:	dec    ebp
  44c645:	frstor [ebx]
  44c647:	adc    dl,BYTE PTR [eax]
  44c649:	mov    al,0xf0
  44c64b:	push   es
  44c64c:	dec    ebp
  44c64d:	fnsave [ebx]
  44c64f:	adc    dh,al
  44c651:	scas   eax,DWORD PTR es:[edi]
  44c652:	add    bl,ah
  44c654:	pop    esp
  44c655:	push   eax
  44c656:	add    esp,DWORD PTR [ebx]
  44c658:	push   eax
  44c659:	mov    ecx,DWORD PTR [esi-0xe]
  44c65c:	pop    esi
  44c65d:	push   eax
  44c65e:	add    esi,DWORD PTR [ebx-0x1ab1748d]
  44c664:	pop    esi
  44c665:	push   eax
  44c666:	add    esp,DWORD PTR [ebx-0xbb1748d]
  44c66c:	pop    esi
  44c66d:	push   eax
  44c66e:	add    esi,DWORD PTR [ebx-0x18b174ad]
	...
  44c688:	pop    esi
  44c689:	push   eax
  44c68a:	add    esp,DWORD PTR [ebx-0x9b174ad]
  44c690:	pop    esi
  44c691:	push   eax
  44c692:	add    esi,DWORD PTR [ebx-0x507caf99]
  44c698:	outs   dx,BYTE PTR ds:[esi]
  44c699:	mov    eax,ds:0x520b6407
  44c69e:	test   DWORD PTR [esi-0x197f38ba],0xa8e149e1
  44c6a8:	test   cl,ah
  44c6aa:	imul   ebx,DWORD PTR [ebx+0x66f7d953],0xd8b81f5f
  44c6b4:	loope  0x44c68f
  44c6b6:	sbb    BYTE PTR [esi+0x4b],0x97
  44c6ba:	jmp    0x22e9:0x726b8de
  44c6c1:	push   ecx
  44c6c2:	add    eax,DWORD PTR [ebx+0x23]
  44c6c5:	mov    ds:0xddce604,eax
  44c6ca:	clc    
  44c6cb:	and    ebx,DWORD PTR cs:[ebx-0x25]
  44c6cf:	neg    ch
  44c6d1:	daa    
  44c6d2:	add    cl,ch
  44c6d4:	popa   
  44c6d5:	(bad)  
  44c6d6:	sti    
  44c6d7:	stc    
  44c6d8:	jb     0x44c6b1
  44c6da:	(bad)  
  44c6db:	jmp    0xd0a041
  44c6e0:	js     0x44c67e
  44c6e2:	fild   WORD PTR [esi+ecx*8]
  44c6e5:	and    DWORD PTR [ebx],0x11d23c00
  44c6eb:	add    eax,DWORD PTR [eax]
	...
  44c6fd:	add    BYTE PTR [eax],al
  44c6ff:	add    BYTE PTR [ecx+0x3a56b2ea],al
  44c705:	fucomp st(7)
  44c707:	add    edx,ecx
  44c709:	call   0xdd4e1dc0
  44c70e:	out    dx,eax
  44c70f:	add    eax,ecx
  44c711:	call   0xdd3d1dc8
  44c716:	out    dx,eax
  44c717:	add    esi,DWORD PTR [ecx+0x756b2e8]
  44c71d:	fucomp st(7)
  44c71f:	add    eax,ecx
  44c721:	call   0xdd3b1dd8
  44c726:	out    dx,eax
  44c727:	add    edx,DWORD PTR [ecx]
  44c729:	jmp    0xdd0a1de0
  44c72e:	out    dx,eax
  44c72f:	add    eax,DWORD PTR [ecx]
  44c731:	jmp    0xdcf91de8
  44c736:	out    dx,eax
  44c737:	add    esi,ecx
  44c739:	call   0xdd081df0
  44c73e:	out    dx,eax
  44c73f:	add    eax,DWORD PTR [ecx]
  44c741:	jmp    0xdcf71df8
  44c746:	out    dx,eax
  44c747:	add    edx,DWORD PTR [ecx-0x17]
  44c74a:	mov    dl,0x56
  44c74c:	sbb    esp,0xe94103ef
  44c752:	mov    dl,0x56
  44c754:	nop
  44c755:	fsub   st(7),st
  44c757:	add    esi,DWORD PTR [ecx]
  44c759:	jmp    0xdcc41e10
  44c75e:	out    dx,eax
  44c75f:	add    eax,DWORD PTR [ecx-0x17]
  44c762:	mov    dl,0x56
	...
  44c778:	outs   dx,BYTE PTR ds:[esi]
  44c779:	fsub   st(7),st
  44c77b:	add    edx,DWORD PTR [ecx+0x6256b2e9]
  44c781:	ds cld 
  44c783:	mul    BYTE PTR [ecx-0x6]
  44c786:	adc    BYTE PTR [edx-0x903b054],dh
  44c78c:	popa   
  44c78d:	or     bh,BYTE PTR [ebp-0x1c]
  44c790:	push   edx
  44c791:	inc    ebx
  44c792:	cmp    bh,BYTE PTR [esp+0x31]
  44c796:	retf   
  44c797:	or     bh,bl
  44c799:	mov    ah,0x37
  44c79b:	clc    
  44c79c:	sbb    eax,0x69735bbe
  44c7a1:	aas    
  44c7a2:	ins    DWORD PTR es:[edi],dx
  44c7a3:	add    DWORD PTR [ecx+0x78],esp
  44c7a6:	mov    esi,0xba0c0afc
  44c7ab:	repnz mov edx,0xe2007d11
  44c7b1:	xchg   edi,eax
  44c7b2:	sbb    eax,0xa437f8be
  44c7b7:	int    0x55
  44c7b9:	inc    eax
  44c7ba:	ss clc 
  44c7bc:	popa   
  44c7bd:	mov    dh,BYTE PTR [esi+ebp*2-0x1e]
  44c7c1:	inc    edi
  44c7c2:	xor    eax,0xffffffc5
  44c7c5:	sub    DWORD PTR [edx],0x7723b08
  44c7cb:	add    BYTE PTR [ebp-0x1609fc29],bh
  44c7d1:	xchg   esi,edx
  44c7d3:	mov    esi,0x4d630c2
  44c7d8:	mov    ds:0xbde01b,eax
	...
  44c7ed:	add    BYTE PTR [eax],al
  44c7ef:	add    BYTE PTR [esi+0x40],ch
  44c7f2:	inc    edi
  44c7f3:	retf   
  44c7f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c7f5:	xchg   esi,eax
  44c7f6:	mov    ch,ch
  44c7f8:	xchg   ebp,eax
  44c7f9:	adc    BYTE PTR [edx-0x6e1af10f],cl
  44c7ff:	mov    ds:0x34046,eax
  44c804:	bound  edx,QWORD PTR [esi]
  44c806:	ds cld 
  44c808:	icebp  
  44c809:	sub    BYTE PTR [esi],al
  44c80b:	mov    dl,0x53
  44c80d:	(bad)  
  44c80f:	push   ebx
  44c810:	fdivr  QWORD PTR [ebx]
  44c812:	push   ss
  44c813:	add    al,0x62
  44c815:	fldcw  WORD PTR [eax]
  44c817:	sub    al,0x65
  44c819:	or     bl,dh
  44c81b:	cwde   
  44c81c:	inc    ebp
  44c81d:	add    eax,0xa77d03aa
  44c822:	ins    BYTE PTR es:[edi],dx
  44c823:	and    DWORD PTR [esi+0x4d3e6aae],esp
  44c829:	out    0x6b,al
  44c82b:	or     esp,DWORD PTR [esi+edx*2]
  44c82e:	jmp    0xc65ce3bd
  44c833:	or     bh,bl
  44c835:	push   ebp
  44c836:	sbb    al,BYTE PTR ds:0x29a828e7
  44c83c:	push   ebp
  44c83d:	bound  esp,QWORD PTR [ecx+0x68e10644]
  44c843:	and    bh,dl
  44c845:	fsubr  st,st(1)
  44c847:	add    ebp,DWORD PTR [ebp+0x3b]
  44c84a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44c84b:	add    esp,DWORD PTR [edx-0x27]
  44c84e:	jb     0x44c867
  44c850:	icebp  
  44c851:	fcomp  st(0)
  44c853:	ret    
	...
  44c868:	aad    0xa
  44c86a:	mul    BYTE PTR [eax+0x42a0ccd]
  44c870:	fbstp  TBYTE PTR [eax]
  44c872:	test   al,0x2a
  44c874:	push   ebp
  44c875:	or     cl,dh
  44c877:	mov    al,ds:0x42a04b5
  44c87c:	adc    DWORD PTR [esi-0x17],0xf60a6203
  44c883:	mov    BYTE PTR [ebp+0x4703aa10],bl
  44c889:	test   al,0xe5
  44c88b:	mov    cl,bh
  44c88d:	pop    ss
  44c88e:	inc    ecx
  44c88f:	adc    eax,DWORD PTR [ecx+0x56]
  44c892:	jmp    0xdda72a9a
  44c897:	mov    BYTE PTR [ebp+0x8],dh
  44c89a:	add    DWORD PTR [ecx+0x28da5c61],ebp
  44c8a0:	cmp    dh,bl
  44c8a2:	or     DWORD PTR [edx],0xe9f7549c
  44c8a8:	push   eax
  44c8a9:	fst    DWORD PTR [ebp+0x1154ae9]
  44c8af:	bound  ebp,QWORD PTR [ebx+0x30e1eb93]
  44c8b5:	fst    DWORD PTR [ebp+0x11532e9]
  44c8bb:	push   0xe9005183
  44c8c0:	popa   
  44c8c1:	push   es
  44c8c2:	std    
  44c8c3:	jnp    0x44c92b
  44c8c5:	or     al,0x41
  44c8c7:	jmp    0x624ddcde
	...
  44c8e0:	mov    dh,0x93
  44c8e2:	jmp    0x6ed2:0xc12cdaf9
  44c8e9:	aam    0xe3
  44c8eb:	mov    esi,0x6800d95e
  44c8f0:	inc    eax
  44c8f1:	push   ecx
  44c8f2:	add    cl,ch
  44c8f4:	popa   
  44c8f5:	pop    esi
  44c8f6:	or     al,0x7c
  44c8f8:	data16 add al,0x41
  44c8fb:	jmp    0xe9dab1d2
  44c900:	aam    0x14
  44c902:	add    DWORD PTR [edx+0x26],esp
  44c905:	xchg   ebx,eax
  44c906:	jmp    0x44c8e9
  44c908:	mov    dl,0xe8
  44c90a:	xchg   ebp,eax
  44c90b:	jmp    0xcc45ddd4
  44c910:	outs   dx,BYTE PTR ds:[esi]
  44c911:	push   esp
  44c912:	imul   ecx
  44c914:	mov    dl,0xe8
  44c916:	jge    0x44c901
  44c918:	cwde   
  44c919:	adc    al,0x1
  44c91b:	sbb    dh,BYTE PTR [ecx+0x212b8be0]
  44c921:	cmp    al,0x10
  44c923:	add    al,0x47
  44c925:	push   esp
  44c926:	test   DWORD PTR [eax],0x8503618b
  44c92c:	mov    eax,DWORD PTR [edi+0x37]
  44c92f:	add    BYTE PTR [eax],al
  44c931:	scas   eax,DWORD PTR es:[edi]
  44c932:	mov    dh,0xeb
  44c934:	adc    DWORD PTR [edi-0x2c],0xffffffff
  44c938:	dec    ebx
  44c939:	fadd   DWORD PTR [eax]
  44c93b:	xor    edi,DWORD PTR [edi]
  44c93d:	jae    0x44c936
  44c93f:	xor    al,0xfb
  44c941:	xlat   BYTE PTR ds:[ebx]
  44c942:	jge    0x44c91e
	...
  44c958:	jp     0x44c95c
  44c95a:	adc    BYTE PTR [ebx],dh
  44c95c:	dec    edi
  44c95d:	jae    0x44c956
  44c95f:	sub    al,0xb
  44c961:	fdiv   DWORD PTR [edi-0x1e]
  44c964:	xor    al,0xd8
  44c966:	add    BYTE PTR [eax],al
  44c968:	call   0x42455d48
  44c96d:	sbb    eax,0xed4a32f7
  44c972:	jge    0x44c944
  44c974:	mov    edx,0xd38b0801
  44c979:	xchg   esi,eax
  44c97a:	fmul   QWORD PTR [eax]
  44c97c:	mov    bh,dl
  44c97e:	clc    
  44c97f:	add    BYTE PTR [ebx],cl
  44c981:	fdivr  DWORD PTR [ebp+0x14]
  44c984:	mov    ds,eax
  44c986:	daa    
  44c987:	inc    eax
  44c988:	sti    
  44c989:	push   esi
  44c98a:	aam    0xff
  44c98c:	retf   
  44c98d:	xlat   BYTE PTR ds:[ebx]
  44c98e:	add    BYTE PTR [ebx],dh
  44c990:	iret   
  44c991:	jb     0x44c98a
  44c993:	xor    al,0x7b
  44c995:	fnstsw WORD PTR [ebp-0x28]
  44c998:	cli    
  44c999:	add    BYTE PTR [eax],dl
  44c99b:	xor    ebx,DWORD PTR [edi-0x74d3088e]
  44c9a1:	frstor [ebx]
  44c9a3:	(bad)  
  44c9a4:	mov    ebx,0x8f3300d7
  44c9a9:	pop    edx
  44c9aa:	idiv   DWORD PTR [eax]
  44c9ac:	retf   
  44c9ad:	xlat   BYTE PTR ds:[ebx]
  44c9ae:	and    eax,0xb5608f51
  44c9b3:	shl    DWORD PTR [edx-0x66],0x13
  44c9b7:	and    eax,DWORD PTR [ebp+0x341]
	...
  44c9cd:	add    BYTE PTR [eax],al
  44c9cf:	add    cl,ch
  44c9d1:	inc    ebp
  44c9d2:	jle    0x44c9d3
  44c9d4:	xor    al,BYTE PTR [edx+0x888503]
  44c9da:	sub    DWORD PTR [edi],eax
  44c9dc:	jecxz  0x44c97c
  44c9de:	xor    al,0xff
  44c9e0:	pop    ebp
  44c9e1:	inc    ecx
  44c9e2:	lock add esi,edi
  44c9e5:	inc    eax
  44c9e6:	out    dx,al
  44c9e7:	aas    
  44c9e8:	bound  esi,QWORD PTR [edi+0x4939be59]
  44c9ee:	lock add ebx,edi
  44c9f1:	inc    eax
  44c9f2:	out    0x3f,al
  44c9f4:	(bad)  
  44c9f6:	and    eax,edi
  44c9f8:	bound  eax,QWORD PTR [eax+0x3]
  44c9fb:	sub    eax,0x3703ad5e
  44ca00:	mov    ds:0x42be7e40,al
  44ca05:	out    dx,eax
  44ca06:	mov    ebp,0xdc1ae1f7
  44ca0b:	test   BYTE PTR [edx],dh
  44ca0d:	mov    eax,0x3108be54
  44ca12:	cmp    al,0xe4
  44ca14:	push   0xffffffc1
  44ca16:	push   ds
  44ca17:	clc    
  44ca18:	bound  eax,QWORD PTR [eax+0x3]
  44ca1b:	test   DWORD PTR [esi-0x53],ecx
  44ca1e:	cld    
  44ca1f:	and    al,BYTE PTR cs:[eax+0x7c]
  44ca23:	(bad)  
  44ca25:	inc    eax
  44ca26:	add    eax,DWORD PTR [eax]
  44ca28:	xchg   ecx,eax
  44ca29:	push   esp
  44ca2a:	cwde   
  44ca2b:	dec    DWORD PTR [esi-0x657b0300]
  44ca31:	and    DWORD PTR [edi],0x17
	...
  44ca47:	add    BYTE PTR [ecx+0x2c],dh
  44ca4a:	cwde   
  44ca4b:	(bad)  
  44ca4c:	jle    0x44ca4e
  44ca4e:	std    
  44ca4f:	and    ah,BYTE PTR [ebp+0x51000340]
  44ca55:	fprem1 
  44ca57:	adc    BYTE PTR [ebp+0x3f03aa11],0xa8
  44ca5e:	dec    ebp
  44ca5f:	pop    edi
  44ca61:	sbb    BYTE PTR [ecx+0x14],al
  44ca64:	inc    ecx
  44ca65:	push   edx
  44ca66:	jmp    0xdda32c6e
  44ca6b:	sub    BYTE PTR [ebp+0x9],0xaa
  44ca6f:	add    ebx,edi
  44ca71:	das    
  44ca72:	sub    BYTE PTR [edi],ch
  44ca74:	gs pop eax
  44ca76:	or     bh,BYTE PTR [ebx]
  44ca78:	push   ebp
  44ca79:	push   edx
  44ca7a:	jmp    0xe9b92c75
  44ca7f:	lock test ecx,ebx
  44ca82:	bound  ebx,QWORD PTR [esi-0x4]
  44ca85:	cmp    eax,0x7461f6e1
  44ca8a:	jmp    0x691e3877
  44ca8f:	es sub bl,cl
  44ca92:	jmp    0x7522199a
  44ca97:	add    ecx,DWORD PTR [ebp-0x67]
  44ca9a:	jmp    0xcda12569
  44ca9f:	cmp    BYTE PTR [edx],cl
  44caa1:	push   edx
  44caa2:	push   0x39
  44caa4:	popa   
  44caa5:	(bad)  
  44caa6:	sbb    DWORD PTR [edi+0x5d31813],ecx
	...
  44cac0:	out    0x51,eax
  44cac2:	cli    
  44cac3:	add    al,0x67
  44cac5:	sbb    ch,bl
  44cac7:	mov    ss,ebp
  44cac9:	pop    ss
  44caca:	mov    ss,WORD PTR [ebx]
  44cacc:	push   ebp
  44cacd:	cmp    dl,BYTE PTR [esi+0x62d96203]
  44cad3:	test   DWORD PTR [eax],0xbdc3d8d9
  44cad9:	pop    esi
  44cada:	mov    eax,ds:0x68e0be44
  44cadf:	es stos BYTE PTR es:[edi],al
  44cae1:	fadd   DWORD PTR [eax]
  44cae3:	jmp    0x4c79cf49
  44cae8:	popa   
  44cae9:	push   es
  44caea:	inc    ecx
  44caeb:	jmp    0x5305f4d4
  44caf0:	imul   eax,DWORD PTR [esi*1+0x40fe6174],0x5082e9
  44cafb:	jmp    0x6479cf61
  44cb00:	popa   
  44cb01:	or     al,BYTE PTR [ecx-0x17]
  44cb04:	fdivr  QWORD PTR [edi]
  44cb06:	cld    
  44cb07:	mov    ds:0x5e6d19ec,al
  44cb0c:	cmp    BYTE PTR [esi-0x1902e883],ah
  44cb12:	nop
  44cb13:	out    0xd3,al
  44cb15:	fbstp  TBYTE PTR [ebx]
  44cb17:	cmp    esi,esp
  44cb19:	cs imul ecx
  44cb1c:	popa   
  44cb1d:	fld    st(1)
  44cb1f:	adc    DWORD PTR [ecx-0x2],ebx
  44cb22:	cld    
  44cb23:	pop    ebx
	...
  44cb38:	popa   
  44cb39:	add    al,0x41
  44cb3b:	jmp    0xceb26e66
  44cb40:	push   ebx
  44cb41:	and    BYTE PTR [esi-0x56],dl
  44cb44:	call   0x8b44:0xd73cc424
  44cb4b:	sbb    al,0x6a
  44cb4d:	pop    esp
  44cb4e:	leave  
  44cb4f:	cmp    al,0x60
  44cb51:	inc    al
  44cb53:	sbb    al,0xa4
  44cb55:	in     al,0x0
  44cb57:	bound  edx,QWORD PTR ds:0x6e248be1
  44cb5d:	inc    ecx
  44cb5e:	sbb    eax,0x55519ba4
  44cb63:	stos   DWORD PTR es:[edi],eax
  44cb64:	pop    edx
  44cb65:	fld    st(4)
  44cb67:	cmp    al,0xd7
  44cb69:	inc    esp
  44cb6a:	dec    esi
  44cb6b:	bound  ecx,QWORD PTR ds:0x35007de1
  44cb71:	mov    DWORD PTR [esi],eax
  44cb73:	mov    edi,DWORD PTR [esi-0x23]
  44cb76:	jge    0x44cbbd
  44cb78:	mov    edi,0xbb8abf3d
  44cb7d:	adc    eax,DWORD PTR fs:[ecx]
  44cb80:	retf   
  44cb81:	and    dh,BYTE PTR [edx-0x9]
  44cb84:	int    0x27
  44cb86:	mov    ah,0xcc
  44cb88:	(bad)  
  44cb89:	pop    ebp
  44cb8a:	jmp    0x44cb17
  44cb8c:	(bad)  
  44cb8e:	or     ecx,0xffffffb7
  44cb91:	xlat   BYTE PTR ds:[ebx]
  44cb92:	jge    0x44cbd9
  44cb94:	jae    0x44cbed
  44cb96:	add    BYTE PTR ds:0x4000d5,dh
	...
  44cbad:	add    BYTE PTR [eax],al
  44cbaf:	add    BYTE PTR [edx],al
  44cbb1:	jg     0x44cba1
  44cbb3:	pop    ebp
  44cbb4:	mov    BYTE PTR [ecx-0x5e803335],ah
  44cbba:	retf   
  44cbbb:	int3   
  44cbbc:	push   es
  44cbbd:	sub    DWORD PTR [ecx+0x53],edx
  44cbc0:	enter  0x2401,0x8b
  44cbc4:	xlat   BYTE PTR ds:[ebx]
  44cbc5:	das    
  44cbc6:	das    
  44cbc7:	mov    edi,edi
  44cbc9:	das    
  44cbca:	cmp    ecx,DWORD PTR [ebx-0x65836c07]
  44cbd0:	mov    edi,0x400000d5
  44cbd5:	xchg   esi,eax
  44cbd6:	jl     0x44cc1a
  44cbd8:	ja     0x44cc38
  44cbda:	dec    ebp
  44cbdb:	jl     0x44cb8c
  44cbdd:	(bad)  
  44cbde:	mov    bh,0xeb
  44cbe0:	or     DWORD PTR ds:0xdd1be3b6,ebx
  44cbe6:	fmul   DWORD PTR [ecx-0x7d83cff1]
  44cbec:	mov    ebx,esp
  44cbee:	add    BYTE PTR [eax],al
  44cbf0:	inc    eax
  44cbf1:	cs jae 0x44cc2f
  44cbf4:	mov    ds:0xa38af587,eax
  44cbf9:	bound  ebx,QWORD PTR [ebx+0x24]
  44cbfc:	bound  ecx,QWORD PTR [edx-0x7c]
  44cbff:	ins    DWORD PTR es:[edi],dx
  44cc00:	jp     0x44cbbb
  44cc02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44cc03:	and    ebx,DWORD PTR [esi-0x35]
  44cc06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cc07:	imul   ebx,edi,0x4d
  44cc0a:	out    0xff,al
  44cc0c:	fiadd  DWORD PTR [ebp-0x29]
  44cc0f:	pop    ds
  44cc10:	jmp    0x11bfc8b
	...
  44cc25:	add    BYTE PTR [eax],al
  44cc27:	add    cl,ah
  44cc29:	mov    eax,ds:0xd62686fc
  44cc2e:	adc    BYTE PTR [ebp+0x1dfd620],al
  44cc34:	arpl   WORD PTR [edx+0x3],ax
  44cc37:	and    eax,0x2cfd168a
  44cc3c:	jg     0x44cc08
  44cc3e:	mov    ebp,0xd77ddb77
  44cc43:	sbb    esp,DWORD PTR [ecx+0x10]
  44cc46:	mov    esi,DWORD PTR [ebx+0x7e]
  44cc49:	dec    eax
  44cc4a:	or     BYTE PTR [ecx+0x23cfc96d],dh
  44cc50:	jb     0x44cc89
  44cc52:	jo     0x44ccaf
  44cc54:	jp     0x44cc35
  44cc56:	mov    bl,BYTE PTR [ebx+0x7e]
  44cc59:	inc    esp
  44cc5a:	test   BYTE PTR [ebp-0x5e],dh
  44cc5d:	retf   
  44cc5e:	pop    es
  44cc5f:	and    al,0x39
  44cc61:	es jle 0x44ccaa
  44cc64:	bound  esp,QWORD PTR [ebx]
  44cc66:	inc    ebp
  44cc67:	or     ch,cl
  44cc69:	inc    esp
  44cc6a:	mov    esi,0x75401f34
  44cc6f:	fbld   TBYTE PTR [edx+0x40]
  44cc72:	add    edi,DWORD PTR [edi+0x8]
  44cc75:	inc    ecx
  44cc76:	add    edi,edi
  44cc78:	cmc    
  44cc79:	inc    edi
  44cc7a:	mov    edx,ebx
  44cc7c:	bound  eax,QWORD PTR [eax+0x3]
  44cc7f:	or     DWORD PTR [ebp-0x66071204],ebp
  44cc85:	xor    DWORD PTR [ecx+0x25d9e9da],0xffffffe0
	...
  44cca0:	popa   
  44cca1:	fimul  WORD PTR [esi+0x0]
  44cca4:	lds    edx,FWORD PTR [ebx]
  44cca6:	es loopne 0x44cd16
  44cca9:	les    edx,FWORD PTR [esi+0x72f5518d]
  44ccaf:	mov    al,0x81
  44ccb1:	aad    0x72
  44ccb3:	mov    eax,0x34eaf981
  44ccb8:	out    0x95,al
  44ccba:	mov    ebp,0x5f51cc0f
  44ccbf:	aaa    
  44ccc0:	mov    bl,BYTE PTR [ebp+edx*4-0x4]
  44ccc4:	pop    ebp
  44ccc5:	fsubr  st,st(1)
  44ccc7:	add    ebp,ecx
  44ccc9:	test   DWORD PTR [ecx],ebx
  44cccb:	or     al,0x75
  44cccd:	dec    esi
  44ccce:	jmp    0xfb502e5d
  44ccd3:	jmp    FWORD PTR [edi]
  44ccd5:	(bad)  
  44ccd6:	aad    0x8a
  44ccd8:	mov    eax,ds:0xa1f2de0b
  44ccdd:	adc    esp,esi
  44ccdf:	mov    al,0x62
  44cce1:	pop    edx
  44cce2:	sub    ecx,DWORD PTR [ecx+edx*8]
  44cce5:	inc    eax
  44cce6:	add    dh,BYTE PTR [ebp+0x6cdd1bbe]
  44ccec:	cmp    cl,BYTE PTR [esi-0x17]
  44ccef:	add    esi,DWORD PTR [ecx+0x27426ad7]
  44ccf5:	sbb    DWORD PTR [ecx],eax
  44ccf7:	adc    al,0x4e
  44ccf9:	fsubr  DWORD PTR [edx+0x52]
  44ccfc:	adc    eax,0xe6f9e55d
  44cd01:	int3   
  44cd02:	std    
  44cd03:	jecxz  0x44cd05
	...
  44cd15:	add    BYTE PTR [eax],al
  44cd17:	add    BYTE PTR [esi],bh
  44cd19:	push   ss
  44cd1a:	or     al,0x2
  44cd1c:	std    
  44cd1d:	dec    ebp
  44cd1e:	jmp    0x15a776db
  44cd23:	loopne 0x44cd5a
  44cd25:	bound  edx,QWORD PTR ds:0x11249e0
  44cd2b:	stos   BYTE PTR es:[edi],al
  44cd2c:	adc    al,0xdd
  44cd2e:	mov    esi,DWORD PTR ds:0x238bd5c2
  44cd34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44cd35:	push   esp
  44cd36:	push   esp
  44cd37:	lds    ebx,FWORD PTR [ebp+0x54]
  44cd3a:	or     al,0xcd
  44cd3c:	mov    fs,WORD PTR [eax+0x556c8ef7]
  44cd42:	push   esp
  44cd43:	int    0x49
  44cd45:	push   esi
  44cd46:	cmp    al,0xc5
  44cd48:	dec    ebp
  44cd49:	push   esi
  44cd4a:	dec    edx
  44cd4b:	stc    
  44cd4c:	cwde   
  44cd4d:	mov    WORD PTR [ebp-0x44],?
  44cd50:	call   0x6131ea1e
  44cd55:	dec    ecx
  44cd56:	mov    ebp,edx
  44cd58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44cd59:	aad    0x7
  44cd5b:	sahf   
  44cd5c:	xchg   ebp,eax
  44cd5d:	add    eax,0xdbb62f8
  44cd62:	mov    ah,BYTE PTR [ebp-0x2a741e73]
  44cd68:	test   DWORD PTR [esi],esi
  44cd6a:	and    DWORD PTR [esi],esi
  44cd6c:	xchg   esp,eax
  44cd6d:	push   ecx
  44cd6e:	mov    edx,DWORD PTR [ebp-0x523ffacb]
  44cd74:	sub    eax,0x61e802f1
  44cd79:	(bad)  [ecx+0xa3]
	...
  44cd8f:	add    cl,dh
  44cd91:	push   ebp
  44cd92:	dec    esp
  44cd93:	lds    edi,FWORD PTR [ecx]
  44cd95:	push   esi
  44cd96:	push   esp
  44cd97:	int    0x55
  44cd99:	push   esi
  44cd9a:	inc    edx
  44cd9b:	jne    0x44cdc5
  44cd9d:	and    eax,0x8de8eb77
  44cda2:	and    DWORD PTR ds:0x4656a635,0x35
  44cda9:	mov    es,ebx
  44cdab:	lods   eax,DWORD PTR ds:[esi]
  44cdac:	call   0x93:0xe4e9c420
  44cdb3:	jmp    0x456194
  44cdb8:	sti    
  44cdb9:	push   ebx
  44cdba:	ds add bl,bh
  44cdbd:	push   ebx
  44cdbe:	ds add bl,cl
  44cdc1:	fadd   DWORD PTR [eax]
  44cdc3:	add    dl,cl
  44cdc5:	fadd   DWORD PTR [eax]
  44cdc7:	add    BYTE PTR [eax-0x43ffff28],bh
  44cdcd:	fadd   DWORD PTR [eax]
  44cdcf:	add    ah,al
  44cdd1:	fadd   DWORD PTR [eax]
  44cdd3:	add    ah,al
  44cdd5:	fadd   DWORD PTR [eax]
  44cdd7:	add    BYTE PTR [eax+ebx*8-0x275c0000],ah
  44cdde:	add    BYTE PTR [eax],al
  44cde0:	adc    al,0xd5
  44cde2:	add    BYTE PTR [eax],al
  44cde4:	add    al,0xd8
  44cde6:	add    BYTE PTR [eax],al
  44cde8:	add    al,0xda
  44cdea:	add    BYTE PTR [eax],al
  44cdec:	and    al,0x4e
  44cdee:	idiv   edi
  44cdf0:	adc    al,0xd6
	...
  44ce06:	add    BYTE PTR [eax],al
  44ce08:	and    al,0xe6
  44ce0a:	add    BYTE PTR [eax],al
  44ce0c:	and    al,0x46
  44ce0e:	idiv   edi
  44ce10:	and    al,0x86
  44ce12:	idiv   edi
  44ce14:	xchg   esp,eax
  44ce15:	push   es
  44ce16:	clc    
  44ce17:	inc    DWORD PTR [esi+eax*1+0x684fff7]
  44ce1e:	cmc    
  44ce1f:	jmp    DWORD PTR [esi+eax*1+0x1]
  44ce23:	add    BYTE PTR [esi+eax*1+0x9],dl
  44ce27:	add    BYTE PTR [esi+eax*1+0x19],ah
  44ce2b:	add    BYTE PTR [esi+eax*1+0x39],ah
  44ce2f:	add    BYTE PTR [eax*1+0x5140079],ah
  44ce36:	stc    
  44ce37:	add    BYTE PTR [eax*1+0x50401f9],al
  44ce3e:	stc    
  44ce3f:	add    esp,DWORD PTR [eax*1+0x236207f9]
  44ce46:	sub    al,0xf8
  44ce48:	sbb    ebp,DWORD PTR gs:[eax+edi*8]
  44ce4c:	dec    ebp
  44ce4d:	adc    ebp,DWORD PTR [eax+edi*8]
  44ce50:	and    eax,0x5df82c8b
  44ce55:	sub    DWORD PTR [eax+edi*8],0xffffffd5
  44ce59:	loop   0x44ce21
  44ce5b:	push   edx
  44ce5c:	xor    DWORD PTR [esi-0x80],edx
  44ce5f:	jmp    0x44ce83
  44ce61:	outs   dx,BYTE PTR ds:[esi]
  44ce62:	mov    BYTE PTR [ebx-0x7a],dh
  44ce65:	or     cl,BYTE PTR [edx-0x3a48a987]
  44ce6b:	add    eax,DWORD PTR [eax]
	...
  44ce7d:	add    BYTE PTR [eax],al
  44ce7f:	add    cl,bl
  44ce81:	cmp    eax,DWORD PTR [eax]
  44ce83:	shl    cl,1
  44ce85:	or     BYTE PTR [bx+0x1e26],al
  44ce8a:	fild   WORD PTR [esi-0x7af8e9d2]
  44ce90:	(bad)  
  44ce91:	fstp   st(0)
  44ce93:	test   BYTE PTR [edx+edx*2],dl
  44ce96:	mov    BYTE PTR [ecx+0x6e],bl
  44ce99:	xlat   BYTE PTR ds:[ebx]
  44ce9a:	sub    esi,eax
  44ce9c:	xchg   edi,eax
  44ce9d:	sub    BYTE PTR ds:[esi+0x7b],bh
  44cea1:	inc    eax
  44cea2:	add    al,BYTE PTR [eax]
  44cea4:	bound  edi,QWORD PTR [edi]
  44cea6:	dec    eax
  44cea7:	xchg   BYTE PTR [esi-0x39790724],bh
  44cead:	aam    0xe4
  44ceaf:	xchg   BYTE PTR [esi-0x627aece4],bl
  44ceb5:	jl     0x44ce3f
  44ceb7:	dec    eax
  44ceb8:	xchg   edx,eax
  44ceb9:	mov    ecx,0xb96a23b7
  44cebe:	mov    edi,0x2985e23
  44cec3:	add    BYTE PTR [edx+0x40],ah
  44cec6:	mov    BYTE PTR [eax-0x4a],cl
  44cec9:	out    dx,eax
  44ceca:	and    eax,DWORD PTR [edi-0x15]
  44cecd:	xor    al,0xd7
  44cecf:	mov    bh,0x63
  44ced1:	fldl2t 
  44ced3:	add    esp,DWORD PTR [edx+0x5e]
  44ced6:	es int3 
  44ced8:	cmp    ah,BYTE PTR cs:[ecx]
  44cedb:	jge    0x44ce7e
  44cedd:	cmc    
  44cede:	fnstsw WORD PTR [esi-0x5e]
  44cee1:	add    DWORD PTR [ebx-0x3d],esi
	...
  44cef8:	xor    eax,0xe4f80e5e
  44cefd:	xchg   ebp,eax
  44cefe:	add    eax,0xfd9ddcf8
  44cf03:	repz in al,0xa5
  44cf06:	(bad)
  44cf09:	mov    edx,0xd1a7ee1
  44cf0e:	arpl   WORD PTR [eax-0x3f9d027f],di
  44cf14:	and    ebp,0xf73241c2
  44cf1a:	push   0x45
  44cf1c:	data16 (bad) 
  44cf1e:	lahf   
  44cf1f:	ins    BYTE PTR es:[edi],dx
  44cf20:	imul   ebx,ecx,0x184703e9
  44cf26:	ins    BYTE PTR es:[edi],dx
  44cf27:	mov    al,0x41
  44cf29:	in     eax,dx
  44cf2a:	pop    edx
  44cf2b:	push   0x441a21e6
  44cf30:	xchg   BYTE PTR [edi+0x54],bh
  44cf33:	mov    eax,0xb870ed41
  44cf38:	inc    ecx
  44cf39:	in     eax,0x52
  44cf3b:	or     al,0x53
  44cf3d:	adc    ebp,edx
  44cf3f:	add    esp,DWORD PTR [edx-0x27]
  44cf42:	lods   eax,DWORD PTR ds:[esi]
  44cf43:	adc    edi,DWORD PTR [edi+0x19]
  44cf46:	jae    0x44cf52
  44cf48:	mov    al,ds:0xfe87325e
  44cf4d:	loopne 0x44cf89
  44cf4f:	and    al,0x5e
  44cf51:	inc    ecx
  44cf52:	add    bl,BYTE PTR [esi+eiz*8]
  44cf55:	int3   
  44cf56:	(bad)
  44cf59:	or     al,0xaa
  44cf5b:	rol    DWORD PTR [eax],cl
	...
  44cf6d:	add    BYTE PTR [eax],al
  44cf6f:	add    BYTE PTR [ecx+0x60eb00d9],ah
  44cf75:	push   ebp
  44cf76:	mov    ebx,ebp
  44cf78:	popa   
  44cf79:	fldcw  WORD PTR [edi+0x52]
  44cf7c:	cs popf 
  44cf7e:	push   ecx
  44cf7f:	cmp    edx,edx
  44cf81:	push   esp
  44cf82:	cld    
  44cf83:	or     al,0xdf
  44cf85:	add    eax,0xf961e91d
  44cf8a:	add    BYTE PTR [ebp+edx*8-0x5d],ah
  44cf8e:	xor    ebx,DWORD PTR [ecx-0x56cc69eb]
  44cf94:	pusha  
  44cf95:	imul   eax,DWORD PTR [ecx+0x66b698b2],0x1c
  44cf9c:	or     eax,DWORD PTR [edx]
  44cf9e:	and    BYTE PTR [eax+0x55dc603],0xfb
  44cfa5:	stc    
  44cfa6:	adc    DWORD PTR [ebx+0x305dbfce],0xe8b8f1eb
  44cfb0:	popa   
  44cfb1:	fld    DWORD PTR [eax]
  44cfb3:	out    0xff,al
  44cfb5:	mov    ch,al
  44cfb7:	loope  0x44cf9d
  44cfb9:	sub    DWORD PTR [edi],eax
  44cfbb:	push   0x39
  44cfbd:	fsubr  DWORD PTR [ebp-0x9]
  44cfc0:	cmp    BYTE PTR [eax+eax*1+0x6c49e1e9],cl
  44cfc7:	jmp    0x44d015
  44cfc9:	fidivr WORD PTR [edi+0x3c99a1ec]
  44cfcf:	jmp    0xe945a93b
	...
  44cfe8:	je     0x44cfc8
  44cfea:	mov    edi,0x3c9921e4
  44cfef:	jmp    0xe945a950
  44cff4:	das    
  44cff5:	mov    al,0x5b
  44cff7:	mov    cl,0x54
  44cff9:	pop    ecx
  44cffa:	nop
  44cffb:	imul   edi,DWORD PTR [ecx+edx*8+0x6f],0xb7502e00
  44d003:	data16 scas al,BYTE PTR es:[edi]
  44d005:	(bad)  
  44d006:	mov    esp,0xc5ec4880
  44d00b:	loopne 0x44d00d
  44d00d:	in     eax,0x7c
  44d00f:	adc    al,0x57
  44d011:	(bad)  
  44d012:	dec    ebx
  44d013:	and    al,0xf3
  44d015:	cmp    eax,0x6c078bd2
  44d01a:	jge    0x44cfe8
  44d01c:	popa   
  44d01d:	test   eax,0x9d77edc4
  44d022:	jb     0x44d03d
  44d024:	or     ah,dh
  44d026:	pop    es
  44d027:	stos   BYTE PTR es:[edi],al
  44d028:	sar    BYTE PTR [eax+0x23],cl
  44d02b:	adc    BYTE PTR [edx+edx*2-0x2344fbab],ch
  44d032:	das    
  44d033:	je     0x44cfdc
  44d035:	lock jno 0x44cffc
  44d038:	loop   0x44d05c
  44d03a:	add    eax,DWORD PTR [eax]
  44d03c:	mov    ebx,0xd1c1c7c5
  44d041:	in     eax,dx
  44d042:	jle    0x44d00c
  44d044:	xor    ebp,ebp
  44d046:	or     DWORD PTR [edi+edx*1+0xdd],eax
	...
  44d05d:	add    BYTE PTR [eax],al
  44d05f:	add    bl,bh
  44d061:	sti    
  44d062:	or     BYTE PTR [esi+edx*2+0x37],dh
  44d066:	into   
  44d067:	jae    0x44d0e3
  44d069:	(bad)  
  44d06a:	fidiv  WORD PTR [ebx]
  44d06c:	dec    ebx
  44d06d:	jae    0x44d019
  44d06f:	mov    al,BYTE PTR [eax+0x5d]
  44d072:	mov    ah,0x10
  44d074:	dec    eax
  44d075:	std    
  44d076:	cld    
  44d077:	out    0xd1,eax
  44d079:	or     BYTE PTR [eax+0xdc4b01],dh
  44d07f:	rcr    DWORD PTR [ebx+0x18d91d85],cl
  44d085:	lahf   
  44d086:	(bad)  
  44d087:	in     eax,dx
  44d088:	dec    eax
  44d089:	lods   al,BYTE PTR ds:[esi]
  44d08a:	jle    0x44d0e0
  44d08c:	bound  edx,QWORD PTR [esi]
  44d08e:	or     eax,DWORD PTR [eax+0xab82729]
  44d094:	jno    0x44d088
  44d096:	stos   BYTE PTR es:[edi],al
  44d097:	stos   BYTE PTR es:[edi],al
  44d098:	call   0x73014da7
  44d09d:	jecxz  0x44d0bb
  44d09f:	add    al,0xfa
  44d0a1:	mov    edx,0xcb5e23d8
  44d0a6:	mov    bh,0x23
  44d0a8:	outs   dx,BYTE PTR ds:[esi]
  44d0a9:	ror    DWORD PTR [edi-0x7c],cl
  44d0ac:	pop    esi
  44d0ad:	shl    DWORD PTR [edi+ecx*8+0x23],0x1c
  44d0b2:	adc    eax,DWORD PTR [esi-0x33af13ea]
  44d0b8:	iret   
  44d0b9:	retf   
  44d0ba:	cmp    esp,DWORD PTR [edi-0x5280c08e]
  44d0c0:	bound  esi,QWORD PTR [edx]
  44d0c2:	add    eax,DWORD PTR [eax+0x0]
	...
  44d0d8:	ret    
  44d0d9:	dec    esi
  44d0da:	scas   eax,DWORD PTR es:[edi]
  44d0db:	bound  edi,QWORD PTR [eax+0x19]
  44d0de:	lods   al,BYTE PTR ds:[esi]
  44d0df:	push   cs
  44d0e0:	call   0x4504bd3d
  44d0e5:	add    eax,0x72e2c476
  44d0ea:	adc    ecx,ebp
  44d0ec:	or     BYTE PTR [edx+0x1b],0x85
  44d0f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d0f1:	or     DWORD PTR [ebx],eax
  44d0f3:	add    BYTE PTR [edx+0x32],ah
  44d0f6:	dec    esp
  44d0f7:	fistp  WORD PTR [edx]
  44d0f9:	in     al,dx
  44d0fa:	dec    ebx
  44d0fb:	sbb    al,0xa7
  44d0fd:	add    dl,BYTE PTR [edi]
  44d0ff:	cld    
  44d100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d101:	call   0x84e0:0xddf68703
  44d108:	popf   
  44d109:	jmp    0x83e:0xdb8a23c8
  44d110:	loopne 0x44d0b6
  44d112:	add    eax,DWORD PTR [eax]
  44d114:	bound  edi,QWORD PTR [ebx-0x2695dc49]
  44d11a:	jb     0x44d154
  44d11c:	xchg   BYTE PTR [ebx+0x6a],cl
  44d11f:	sbb    dh,BYTE PTR [esi]
  44d121:	push   ecx
  44d122:	out    0x7b,eax
  44d124:	bound  edx,QWORD PTR [ebx-0x61]
  44d127:	add    bl,ah
  44d129:	scas   eax,DWORD PTR es:[edi]
  44d12a:	jmp    0x44d0b0
  44d12c:	and    ebx,ebx
  44d12e:	jno    0x44d0f8
  44d130:	adc    al,0x5f
  44d132:	xchg   esi,eax
  44d133:	add    eax,0x34ea1e8f
  44d138:	rcl    DWORD PTR [edx+0x55],0xe8
	...
  44d150:	dec    ecx
  44d151:	xor    cl,bh
  44d153:	cs cli 
  44d155:	inc    esi
  44d156:	push   0x2a
  44d158:	in     al,dx
  44d159:	int    0x84
  44d15b:	in     eax,dx
  44d15c:	imul   edi,ebp,0x9712b811
  44d162:	jb     0x44d124
  44d164:	and    ecx,0x304f0763
  44d16a:	jmp    0xbfc7:0x71d8227b
  44d171:	pop    esi
  44d172:	push   ds
  44d173:	add    esi,DWORD PTR [edi]
  44d175:	push   ds
  44d176:	in     eax,0x32
  44d178:	pop    es
  44d179:	xor    DWORD PTR [ecx+0x5146aa2e],eax
  44d17f:	les    ebp,FWORD PTR [edx+0x5c]
  44d182:	out    0x2,eax
  44d184:	(bad)  
  44d185:	fnstenv [ecx]
  44d187:	add    eax,0x52e9d962
  44d18c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d18d:	xchg   ecx,eax
  44d18e:	or     cl,BYTE PTR [ecx+0x7e]
  44d191:	sbb    BYTE PTR [edx-0x28],dh
  44d194:	inc    ecx
  44d195:	shl    DWORD PTR [edx+0x8],1
  44d198:	in     al,dx
  44d199:	das    
  44d19a:	xchg   ebx,eax
  44d19b:	cs push 0x46
  44d19e:	xchg   ecx,eax
  44d19f:	les    ebp,FWORD PTR [edx+0x5c]
  44d1a2:	dec    ebx
  44d1a3:	add    ah,BYTE PTR [edx-0x27]
  44d1a6:	add    BYTE PTR [ecx+0x67],dh
  44d1a9:	fld    DWORD PTR [eax]
  44d1ab:	jmp    0xca8cf860
  44d1b0:	stos   BYTE PTR es:[edi],al
  44d1b1:	inc    ebp
  44d1b2:	shl    DWORD PTR [edx+0x0],0x0
	...
  44d1c6:	add    BYTE PTR [eax],al
  44d1c8:	sbb    bh,dl
  44d1ca:	add    al,0x62
  44d1cc:	pop    edx
  44d1cd:	(bad)  
  44d1ce:	jmp    0xf78646c3
  44d1d3:	jb     0x44d233
  44d1d5:	pop    ebp
  44d1d6:	cmp    al,0xc5
  44d1d8:	or     eax,0xca62d949
  44d1dd:	stc    
  44d1de:	cmp    BYTE PTR [edx-0x387d2e5d],dh
  44d1e4:	arpl   cx,bx
  44d1e6:	add    dl,ch
  44d1e8:	cmp    eax,ebp
  44d1ea:	je     0x44d1f9
  44d1ec:	test   BYTE PTR [ebp+0x6c],0x5
  44d1f0:	or     DWORD PTR [edi-0x65a746fd],eax
  44d1f6:	sbb    al,0xe1
  44d1f8:	enter  0x6e86,0x49
  44d1fc:	test   eax,0x4885f386
  44d201:	dec    ecx
  44d202:	sub    ebx,DWORD PTR [ebx-0x57c457a8]
  44d208:	out    dx,eax
  44d209:	xchg   ebx,eax
  44d20a:	sub    ebp,DWORD PTR [eax-0x69748590]
  44d210:	mov    BYTE PTR [ebx],dh
  44d212:	jmp    0x44d245
  44d214:	sbb    DWORD PTR [edx+0x1d88b91c],ebx
  44d21a:	outs   dx,BYTE PTR ds:[esi]
  44d21b:	lds    esp,FWORD PTR [eax-0x33]
  44d21e:	sbb    al,0xb5
  44d220:	pusha  
  44d221:	dec    ecx
  44d222:	sub    ebx,DWORD PTR [eax-0x68]
  44d225:	sbb    eax,0xed7da58b
  44d22a:	cmp    ebp,DWORD PTR [eax]
	...
  44d240:	mov    bh,0xef
  44d242:	sub    ebp,DWORD PTR [eax]
  44d244:	xor    BYTE PTR [edx-0x75],bh
  44d247:	add    BYTE PTR [edi],bl
  44d249:	cmp    eax,0x3d078b2f
  44d24e:	daa    
  44d24f:	cmp    edi,DWORD PTR [edx-0x72]
  44d252:	sbb    DWORD PTR [ebx],ebp
  44d254:	jp     0x44d25d
  44d256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d257:	mov    ebx,DWORD PTR [edi+ebx*1-0x1b]
  44d25b:	jmp    0x44d28c
  44d25d:	fdiv   st,st(0)
  44d25f:	sub    ecx,DWORD PTR [edx-0x41]
  44d262:	inc    ebx
  44d263:	and    al,0x33
  44d265:	xor    BYTE PTR [esi-0x49dfec8a],dh
  44d26b:	repz lahf 
  44d26d:	mov    edi,0xc3092bf0
  44d272:	mov    edi,0x73bf9ff3
  44d277:	and    al,0x57
  44d279:	loopne 0x44d280
  44d27b:	(bad)  
  44d27c:	adc    al,0xf7
  44d27e:	jl     0x44d27f
  44d280:	add    al,0x8e
  44d282:	or     BYTE PTR [esi-0x42],ch
  44d285:	ret    0xfdc
  44d288:	xor    eax,0x940f2331
  44d28d:	cli    
  44d28e:	or     BYTE PTR [esi+0x27],ch
  44d291:	xor    DWORD PTR [ebx],eax
  44d293:	pcmpeqb mm3,mm7
  44d296:	or     bh,ch
  44d298:	bnd ret 0x245b
  44d29c:	mov    bl,0xe1
  44d29e:	test   BYTE PTR [edi-0x7c49563c],0x0
	...
  44d2b5:	add    BYTE PTR [eax],al
  44d2b7:	add    dh,dl
  44d2b9:	cmp    eax,0x66941270
  44d2be:	repnz (bad)
  44d2c1:	xor    esi,DWORD PTR [esi+eax*8+0x7f]
  44d2c5:	inc    ebp
  44d2c6:	in     al,0xfe
  44d2c8:	clc    
  44d2c9:	fwait
  44d2ca:	pop    ss
  44d2cb:	movups xmm3,XMMWORD PTR [esi+0x462bdb08]
  44d2d2:	jns    0x44d2b4
  44d2d4:	bound  edi,QWORD PTR [ebx]
  44d2d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d2d7:	fcmovnu st,st(1)
  44d2d9:	or     BYTE PTR ds:[eax],0x14
  44d2dd:	push   cs
  44d2de:	imul   BYTE PTR [ecx+0x2b]
  44d2e1:	out    0x1b,eax
  44d2e3:	and    DWORD PTR [edx],0xffffff85
  44d2e6:	or     bh,BYTE PTR [edi+0x3659223a]
  44d2ec:	mov    esi,0xdc091316
  44d2f1:	inc    ebp
  44d2f2:	add    DWORD PTR [eax],eax
  44d2f4:	bound  ebp,QWORD PTR [ecx]
  44d2f6:	scas   eax,DWORD PTR es:[edi]
  44d2f7:	and    ecx,DWORD PTR [esi+0x6b]
  44d2fa:	imul   esp,esi,0x33073
  44d300:	jmp    0x732a16e6
  44d305:	call   0xfffc:0xd1de090c
  44d30c:	bound  ebp,QWORD PTR [edi+0x4e6e0823]
  44d312:	hlt    
  44d313:	int3   
  44d314:	and    edi,DWORD PTR [ebx]
  44d316:	xchg   ebp,eax
  44d317:	(bad)  
  44d318:	push   ebp
  44d319:	xchg   esp,eax
  44d31a:	inc    ebx
  44d31b:	and    al,0x0
	...
  44d32d:	add    BYTE PTR [eax],al
  44d32f:	add    dl,cl
  44d331:	into   
  44d332:	add    BYTE PTR [ebx-0x3fec6e],al
  44d338:	pusha  
  44d339:	popa   
  44d33a:	hlt    
  44d33b:	int3   
  44d33c:	mov    ds:0x351f26ae,eax
  44d341:	inc    eax
  44d342:	hlt    
  44d343:	imul   ebp,DWORD PTR [edi-0x1ec66ace],0xb108ff73
  44d34d:	push   ebx
  44d34e:	add    dl,0x42
  44d351:	dec    ebx
  44d352:	sbb    al,al
  44d354:	jmp    0x5d50bc3e
  44d359:	sbb    ecx,DWORD PTR [bx+si]
  44d35c:	add    al,0x5a
  44d35e:	hlt    
  44d35f:	js     0x44d2f8
  44d361:	fdiv   DWORD PTR [edx+0x7]
  44d364:	not    ebx
  44d366:	(bad)  
  44d367:	aas    
  44d368:	out    0x20,al
  44d36a:	sub    BYTE PTR [eax],bl
  44d36c:	push   ebp
  44d36d:	lock inc eax
  44d36f:	cld    
  44d370:	retf   
  44d371:	adc    BYTE PTR [ecx-0x7aa294ed],dl
  44d377:	add    esp,DWORD PTR [edx-0x27]
  44d37a:	push   0x23
  44d37c:	pop    edx
  44d37d:	int    0x8e
  44d37f:	cld    
  44d380:	cs sbb esi,ebp
  44d383:	popf   
  44d384:	sbb    eax,0x864297d3
  44d389:	xor    edx,ecx
  44d38b:	jmp    eax
  44d38d:	or     edi,esi
  44d38f:	mov    edi,0x7a20d81d
	...
  44d3a8:	xchg   ecx,eax
  44d3a9:	std    
  44d3aa:	lds    edi,FWORD PTR [eax+0x22]
  44d3ad:	out    dx,eax
  44d3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44d3af:	out    0x3d,eax
  44d3b1:	(bad)  
  44d3b2:	sub    bh,ah
  44d3b4:	jg     0x44d426
  44d3b6:	jmp    0xb39335be
  44d3bb:	jg     0x44d3af
  44d3bd:	out    dx,al
  44d3be:	fiadd  DWORD PTR [edi+0x263d6fc]
  44d3c4:	jmp    0xf50:0xd4c273da
  44d3cb:	push   es
  44d3cc:	dec    edi
  44d3cd:	sbb    ebp,edx
  44d3cf:	jnp    0x44d3f3
  44d3d1:	fsub   DWORD PTR [ecx-0x2d]
  44d3d4:	mov    edi,0xc707a657
  44d3d9:	jge    0x44d44d
  44d3db:	mov    al,0x81
  44d3dd:	cmc    
  44d3de:	(bad)  
  44d3df:	enter  0xd181,0x80
  44d3e3:	fstp   DWORD PTR [edx+0x1c797e42]
  44d3e9:	fldcw  WORD PTR [edx+0x2f]
  44d3ec:	mov    ebp,cs
  44d3ee:	add    BYTE PTR [ecx],dh
  44d3f0:	ja     0x44d3b0
  44d3f2:	sbb    al,0xc1
  44d3f4:	int    0x74
  44d3f6:	inc    edi
  44d3f7:	jb     0x44d42d
  44d3f9:	pop    esp
  44d3fa:	jmp    FWORD PTR [ecx+0x4f]
  44d3fd:	inc    ebp
  44d3fe:	jg     0x44d3ae
  44d400:	pop    esi
  44d401:	push   ecx
  44d402:	aas    
  44d403:	jmp    0x44d3de
  44d405:	cdq    
  44d406:	add    ebp,DWORD PTR [edx-0x5f]
  44d409:	(bad)  
  44d40a:	repz xchg ebx,eax
	...
  44d420:	int    0x9e
  44d422:	sbb    al,0xe1
  44d424:	inc    dx
  44d426:	imul   BYTE PTR [esi]
  44d428:	mov    DWORD PTR [ebp-0x9],ebx
  44d42b:	push   ecx
  44d42c:	push   ds
  44d42d:	sar    DWORD PTR [ebp+0x3f],1
  44d430:	data16 fld DWORD PTR [eax]
  44d433:	push   0x7e
  44d435:	rol    DWORD PTR [edi],1
  44d437:	cmp    ah,BYTE PTR [edi-0x2d7892f]
  44d43d:	int    0x7d
  44d43f:	mov    ecx,0xea010568
  44d444:	inc    edi
  44d445:	pop    ebp
  44d446:	cld    
  44d447:	popa   
  44d448:	pop    edi
  44d449:	push   cs
  44d44a:	mul    dh
  44d44c:	dec    eax
  44d44d:	pop    ebp
  44d44e:	not    DWORD PTR [ecx-0x78822edf]
  44d454:	popa   
  44d455:	fld    DWORD PTR [eax]
  44d457:	push   0xffffff81
  44d459:	rol    DWORD PTR [edi],1
  44d45b:	call   0xcdc4:0xa876d11e
  44d462:	jge    0x44d45d
  44d464:	push   0xfd620105
  44d469:	cmc    
  44d46a:	add    al,0xea
  44d46c:	je     0x44d4cb
  44d46e:	cld    
  44d46f:	jo     0x44d4bf
  44d471:	jmp    0x44d46a
  44d473:	xchg   esi,eax
  44d474:	js     0x44d4d3
  44d476:	mul    DWORD PTR [edx+0x59]
  44d479:	pop    ebp
  44d47a:	cmp    al,0x0
  44d47c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44d47d:	xor    eax,esi
  44d47f:	fst    DWORD PTR [eax]
  44d481:	jb     0x44d4a6
  44d483:	cmp    BYTE PTR [eax],al
	...
  44d495:	add    BYTE PTR [eax],al
  44d497:	add    al,dl
  44d499:	call   0x0:0xd6298208
  44d4a0:	mov    BYTE PTR [edx],al
  44d4a2:	jne    0x44d520
  44d4a4:	addr16 dec ebp
  44d4a6:	div    DWORD PTR [ebx+ebx*2+0x22]
  44d4aa:	mov    dh,0x3
  44d4ac:	mov    ebx,0x376c62f
  44d4b1:	and    dh,al
  44d4b3:	repz out 0xbf,eax
  44d4b6:	lock sub ecx,DWORD PTR [eax+0x5a3b49df]
  44d4bd:	mov    bh,BYTE PTR ds:0xa4077a2b
  44d4c3:	mov    edx,DWORD PTR [edi+ebx*1-0x1c]
  44d4c7:	jmp    0x44d4c4
  44d4c9:	mov    edi,0x303b2443
  44d4ce:	mov    edi,0x6cd83376
  44d4d3:	and    al,0xd7
  44d4d5:	xlat   BYTE PTR ds:[ebx]
  44d4d6:	lock sub ecx,DWORD PTR [edx]
  44d4d9:	pop    ds
  44d4da:	mov    edi,0x1d8a5a3b
  44d4df:	sub    edi,DWORD PTR [edx-0x68745bfa]
  44d4e5:	cmp    DWORD PTR [edi],ebp
  44d4e7:	mov    edi,DWORD PTR [edi]
  44d4e9:	cmp    DWORD PTR [edi],esp
  44d4eb:	cmp    ebx,DWORD PTR [edx]
  44d4ed:	mov    WORD PTR ds:0xa406fa2b,cs
  44d4f3:	mov    edx,DWORD PTR [edi+ebx*1]
  44d4f6:	in     al,0xeb
  44d4f8:	stos   DWORD PTR es:[edi],eax
  44d4f9:	aad    0xf0
  44d4fb:	sub    eax,DWORD PTR [eax]
	...
  44d50d:	add    BYTE PTR [eax],al
  44d50f:	add    dl,bh
  44d511:	cs (bad) 
  44d513:	jbe    0x44d4c8
  44d515:	sbb    eax,0xbe27f3c6
  44d51a:	lock sub esp,DWORD PTR [edx+0x63]
  44d51e:	jne    0x44d4e5
  44d520:	xchg   ecx,eax
  44d521:	xchg   esi,eax
  44d522:	jne    0x44d597
  44d524:	ds es je 0x44d583
  44d528:	inc    esi
  44d529:	dec    edx
  44d52a:	sbb    ah,BYTE PTR [ebx]
  44d52c:	test   bh,al
  44d52e:	sub    DWORD PTR [esi-0x4240b6],esi
  44d534:	mov    ebx,0x62fffcdc
  44d539:	stos   DWORD PTR es:[edi],eax
  44d53a:	fsub   DWORD PTR [edi-0x4910e1be]
  44d540:	bound  esi,QWORD PTR [edx]
  44d542:	add    eax,DWORD PTR [eax]
  44d544:	sbb    BYTE PTR [ebx+0x3],cl
  44d547:	add    BYTE PTR [edx-0x55],ah
  44d54a:	or     BYTE PTR [edi-0x426882],dh
  44d550:	sti    
  44d551:	sub    eax,DWORD PTR [ebx]
  44d553:	add    BYTE PTR [edx-0x15],ah
  44d556:	or     al,0x85
  44d558:	mov    dh,0x16
  44d55a:	iret   
  44d55b:	mov    dh,0x76
  44d55d:	xlat   BYTE PTR ds:[ebx]
  44d55e:	mov    ebp,0x34bdbff
  44d563:	add    BYTE PTR [edx-0x15],ah
  44d566:	cld    
  44d567:	test   BYTE PTR [esi+0x1b82cb16],ah
  44d56d:	mov    esi,0x2aaa86fc
  44d572:	je     0x44d5b3
	...
  44d588:	push   esi
  44d589:	leave  
  44d58a:	adc    esp,ebp
  44d58c:	bound  esi,QWORD PTR [ebx-0x116dc022]
  44d592:	cld    
  44d593:	std    
  44d594:	push   esi
  44d595:	xor    al,0x74
  44d597:	fucompp 
  44d599:	in     eax,dx
  44d59a:	loopne 0x44d5f3
  44d59c:	(bad)  [edx+0x71664f74]
  44d5a2:	sbb    bh,ah
  44d5a4:	mov    BYTE PTR [ecx-0x269e21be],al
  44d5aa:	ror    BYTE PTR [edx-0x1c],cl
  44d5ad:	shl    ch,0x7a
  44d5b0:	paddw  mm4,QWORD PTR [edx+0x3c]
  44d5b4:	call   0x4d4c9355
  44d5b9:	popf   
  44d5ba:	lds    ecx,FWORD PTR [edi]
  44d5bc:	adc    ebp,esp
  44d5be:	shl    BYTE PTR [esi+ebx*8],cl
  44d5c1:	loopne 0x44d623
  44d5c3:	mov    DWORD PTR [ecx-0x1b],0xa0de34ea
  44d5ca:	in     eax,0x84
  44d5cc:	xchg   bl,dl
  44d5ce:	call   0x612a179a
  44d5d3:	repz push ss
  44d5d5:	fldl2t 
  44d5d7:	add    esp,DWORD PTR [edx+0x2a]
  44d5da:	dec    edx
  44d5db:	mov    esp,0xd3a9fcce
  44d5e0:	mov    eax,ds:0x65aeebd9
  44d5e5:	into   
  44d5e6:	sbb    al,BYTE PTR [edx+0x6a]
  44d5e9:	mov    edi,0xf824
	...
  44d5fe:	add    BYTE PTR [eax],al
  44d600:	mov    dl,0xfa
  44d602:	adc    bh,BYTE PTR [edx-0x41]
  44d605:	add    DWORD PTR [ebx-0x39],esp
  44d608:	inc    ecx
  44d609:	in     eax,0xd2
  44d60b:	dec    ecx
  44d60c:	xchg   ebx,eax
  44d60d:	rcl    edx,cl
  44d60f:	dec    ecx
  44d610:	mov    ds,WORD PTR [edx]
  44d612:	bnd jp 0x44d5c2
  44d615:	aad    0x2
  44d617:	std    
  44d618:	inc    esi
  44d619:	dec    edx
  44d61a:	out    dx,al
  44d61b:	dec    eax
  44d61c:	jbe    0x44d635
  44d61e:	bnd jl 0x44d69e
  44d621:	aad    0x72
  44d623:	enter  0xe941,0x12
  44d627:	inc    edi
  44d628:	push   ebx
  44d629:	int3   
  44d62a:	add    al,BYTE PTR [edi+0x54]
  44d62d:	sbb    ch,al
  44d62f:	add    al,0x62
  44d631:	fnstenv [eax-0x34]
  44d634:	push   ebp
  44d635:	xor    al,BYTE PTR [eax]
  44d637:	in     al,0x98
  44d639:	inc    ebp
  44d63a:	out    dx,eax
  44d63b:	mov    ds,edi
  44d63d:	sbb    DWORD PTR [ecx],eax
  44d63f:	call   0x21ceafa5
  44d644:	dec    esi
  44d645:	mov    esp,0xa5eb29bc
  44d64a:	push   ebp
  44d64b:	das    
  44d64c:	popf   
  44d64d:	jge    0x44d613
  44d64f:	mov    ch,0x4a
  44d651:	adc    al,ah
  44d653:	lods   eax,DWORD PTR ds:[esi]
  44d654:	dec    edx
  44d655:	adc    al,ah
  44d657:	sbb    al,0xf9
  44d659:	xor    DWORD PTR [ebx+0x4d55ca7d],eax
  44d65f:	stc    
  44d660:	jo     0x44d6e0
  44d662:	pop    es
  44d663:	xchg   esi,eax
	...
  44d678:	es push ebp
  44d67a:	shr    DWORD PTR [eax],0x87
  44d67d:	into   
  44d67e:	or     ebp,DWORD PTR [eax]
  44d680:	and    al,0x57
  44d682:	cmp    eax,0xa89bcf8d
  44d687:	jo     0x44d6ac
  44d689:	jb     0x44d614
  44d68b:	lods   al,BYTE PTR ds:[esi]
  44d68c:	mov    cl,0x57
  44d68e:	cmp    eax,0xb89bb775
  44d693:	jo     0x44d6b8
  44d695:	or     BYTE PTR [ecx-0x3f125e5c],0xbe
  44d69c:	cwde   
  44d69d:	ret    
  44d69e:	add    al,0x64
  44d6a0:	mov    al,0xca
  44d6a2:	sbb    dl,BYTE PTR [edx]
  44d6a4:	or     al,0x53
  44d6a6:	fwait
  44d6a7:	jmp    0xe645b00d
  44d6ac:	mov    edx,ss
  44d6ae:	aas    
  44d6af:	xchg   DWORD PTR [edx+ebx*4],edi
  44d6b2:	inc    ebp
  44d6b3:	lea    ebp,[edx-0x6e]
  44d6b6:	inc    ebp
  44d6b7:	test   DWORD PTR [ecx],esp
  44d6b9:	add    eax,0x55745bc3
  44d6be:	ins    DWORD PTR es:[edi],dx
  44d6bf:	icebp  
  44d6c0:	pop    eax
  44d6c1:	ror    BYTE PTR [ecx-0x500e6a00],1
  44d6c7:	btc    ecx,ebx
  44d6ca:	add    BYTE PTR [eax+0x457b5a2d],dl
  44d6d0:	(bad)  
  44d6d2:	jae    0x44d6da
  44d6d4:	jae    0x44d730
  44d6d6:	out    dx,eax
  44d6d7:	add    DWORD PTR [eax+0xb],ecx
  44d6da:	jg     0x44d721
	...
  44d6f0:	out    0x32,eax
  44d6f2:	mov    edi,0x42bc7e76
  44d6f7:	cld    
  44d6f8:	adc    BYTE PTR [edx],al
  44d6fa:	add    eax,0xffffff8e
  44d6fd:	sbb    al,0x7c
  44d6ff:	inc    ebp
  44d700:	lahf   
  44d701:	ret    0xc707
  44d704:	ds in  eax,0x40
  44d707:	add    DWORD PTR [ebx-0x27],edi
  44d70a:	jge    0x44d759
  44d70c:	imul   edi,DWORD PTR [ebp+edi*8+0x7c3d4b82],0x10
  44d714:	ret    0x7442
  44d717:	add    BYTE PTR [edi],bh
  44d719:	adc    al,0xc0
  44d71b:	push   es
  44d71c:	cmp    bl,cl
  44d71e:	add    BYTE PTR [eax],al
  44d720:	cmp    BYTE PTR [ecx+0x119e8b59],bl
  44d726:	mov    ah,0x53
  44d728:	rcl    ch,0x0
  44d72b:	add    BYTE PTR [ebx],bh
  44d72d:	xor    BYTE PTR [esi+esi*2+0x7c745f06],dh
  44d734:	(bad)  
  44d735:	pushf  
  44d736:	div    DWORD PTR [esi+edi*8+0x17]
  44d73a:	sub    al,0xd8
  44d73c:	mov    DWORD PTR [edi],eax
  44d73e:	sub    eax,0x7fd778cb
  44d743:	pop    ebp
  44d744:	pop    es
  44d745:	mov    dl,0xf6
  44d747:	(bad)  
  44d748:	sti    
  44d749:	fdivr  DWORD PTR [ebp-0x36]
  44d74c:	jbe    0x44d7c7
  44d74e:	and    eax,DWORD PTR [eax]
  44d750:	bound  esi,QWORD PTR [ebx]
  44d752:	fs jae 0x44d755
	...
  44d765:	add    BYTE PTR [eax],al
  44d767:	add    BYTE PTR [edi],ah
  44d769:	push   esi
  44d76a:	add    esi,ecx
  44d76c:	jns    0x44d7ca
  44d76e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d76f:	adc    DWORD PTR [ebx],esp
  44d771:	scas   eax,DWORD PTR es:[edi]
  44d772:	sub    ecx,DWORD PTR [eax]
  44d774:	xor    al,0x13
  44d776:	jns    0x44d7ea
  44d778:	push   0xffffffb5
  44d77a:	push   edx
  44d77b:	jns    0x44d7ce
  44d77d:	lods   eax,DWORD PTR ds:[esi]
  44d77e:	es jae 0x44d7e0
  44d781:	scas   eax,DWORD PTR es:[edi]
  44d782:	and    al,0xfe
  44d784:	adc    DWORD PTR [eax],edi
  44d786:	enter  0xe158,0x7a
  44d78a:	sbb    eax,0xbf4dd959
  44d78f:	mov    esp,0x86967251
  44d794:	daa    
  44d795:	lods   al,BYTE PTR ds:[esi]
  44d796:	fs std 
  44d798:	jne    0x44d7cc
  44d79a:	add    esp,ebp
  44d79c:	pop    edx
  44d79d:	lds    esp,FWORD PTR [eax+0x23]
  44d7a0:	bound  esi,QWORD PTR [edx]
  44d7a2:	add    eax,DWORD PTR [eax]
  44d7a4:	repnz or edi,DWORD PTR [eax+0x4b]
  44d7a8:	pop    edi
  44d7a9:	mov    dh,0x96
  44d7ab:	cld    
  44d7ac:	cdq    
  44d7ad:	sub    eax,0x30227c57
  44d7b2:	xchg   ebp,eax
  44d7b3:	xchg   BYTE PTR [esi+0x3a7c772d],ch
  44d7b9:	or     al,0xb1
  44d7bb:	out    0xd9,al
  44d7bd:	jl     0x44d7d2
  44d7bf:	sub    eax,0x7352b522
  44d7c4:	dec    esi
  44d7c5:	dec    esp
  44d7c6:	cmp    BYTE PTR [ebx],0x9d
  44d7c9:	xor    ah,BYTE PTR [edi+0x1f]
	...
  44d7df:	add    BYTE PTR [ebp-0x5],bl
  44d7e2:	clc    
  44d7e3:	inc    eax
  44d7e4:	push   ebp
  44d7e5:	add    edi,DWORD PTR [ecx-0x584919b6]
  44d7eb:	sbb    edi,DWORD PTR [ecx+edi*4+0x0]
  44d7ef:	dec    edx
  44d7f0:	pop    ebp
  44d7f1:	fst    DWORD PTR [esi-0x294c5d09]
  44d7f7:	mov    edi,0xae625528
  44d7fc:	pop    ebp
  44d7fd:	dec    esi
  44d7fe:	adc    eax,0x298e1b7
  44d803:	inc    edx
  44d804:	aaa    
  44d805:	and    eax,0x313e3d72
  44d80a:	jmp    0xa6809279
  44d80f:	and    al,0x31
  44d811:	add    esi,DWORD PTR [edx]
  44d813:	mov    al,0x56
  44d815:	adc    al,0x1c
  44d817:	dec    eax
  44d818:	sbb    eax,0xa304298e
  44d81d:	xchg   ebp,eax
  44d81e:	mov    DWORD PTR [ebx+0x18],eax
  44d821:	cdq    
  44d822:	jmp    0x9279f0a1
  44d827:	repz mov ch,0xd8
  44d82a:	sbb    al,0xc4
  44d82c:	jne    0x44d81a
  44d82e:	jmp    0x44d831
  44d830:	(bad)  
  44d831:	fnstenv [eax-0x42]
  44d834:	mov    DWORD PTR [eax-0x26624957],eax
  44d83a:	cld    
  44d83b:	add    DWORD PTR [ebx+edi*1-0x17],edx
  44d83f:	cmp    al,0xa0
  44d841:	xor    eax,0x2e9
	...
  44d856:	add    BYTE PTR [eax],al
  44d858:	(bad)  
  44d859:	fst    DWORD PTR [edx-0xa]
  44d85c:	out    0x94,al
  44d85e:	int    0x7a
  44d860:	mov    al,ds:0x41be1e1d
  44d865:	out    0xe9,eax
  44d867:	add    esp,DWORD PTR [edx+0x50]
  44d86a:	pushf  
  44d86b:	and    esp,esi
  44d86d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44d86e:	cmc    
  44d86f:	js     0x44d8d8
  44d871:	push   es
  44d872:	sub    bh,BYTE PTR [edx-0x60]
  44d875:	inc    ecx
  44d876:	jo     0x44d836
  44d878:	adc    DWORD PTR [ecx-0x5c],edx
  44d87b:	push   ebx
  44d87c:	out    0x8c,al
  44d87e:	add    ch,dh
  44d880:	mov    BYTE PTR [ebx],bh
  44d882:	imul   ecx
  44d884:	popa   
  44d885:	or     al,0xe0
  44d887:	jo     0x44d834
  44d889:	xor    cl,BYTE PTR [ebx-0x86d0c1f]
  44d88f:	pusha  
  44d890:	add    esp,DWORD PTR [edi]
  44d892:	mov    DWORD PTR [esi+ecx*4],esp
  44d895:	push   ebx
  44d896:	inc    ebp
  44d897:	mov    ch,0xdd
  44d899:	inc    eax
  44d89a:	add    DWORD PTR [ecx+ebp*2],esi
  44d89d:	dec    BYTE PTR [edx+ebp*8+0x61]
  44d8a1:	fldpi  
  44d8a3:	jecxz  0x44d889
  44d8a5:	inc    eax
  44d8a6:	add    bl,BYTE PTR [edx*2+0x61eb50fe]
  44d8ad:	fld    DWORD PTR [edi]
  44d8af:	push   0x52
  44d8b1:	cmp    esi,edi
  44d8b3:	jmp    0x70598094
  44d8b8:	retf   
  44d8b9:	sub    ch,bl
  44d8bb:	out    0x0,eax
	...
  44d8cd:	add    BYTE PTR [eax],al
  44d8cf:	add    dl,dl
  44d8d1:	xchg   ebx,eax
  44d8d2:	add    BYTE PTR [edx-0x3d],ah
  44d8d5:	mov    edx,DWORD PTR es:[edx+ecx*2]
  44d8d9:	push   ebp
  44d8da:	inc    ebp
  44d8db:	pop    ecx
  44d8dc:	aad    0xc7
  44d8de:	fdiv   QWORD PTR [ebx-0x5b]
  44d8e1:	hlt    
  44d8e2:	ret    0x2b61
  44d8e5:	retf   
  44d8e6:	pop    es
  44d8e7:	xchg   esi,eax
  44d8e8:	addr16 push esp
  44d8ea:	enter  0xb002,0xbf
  44d8ee:	or     ah,BYTE PTR [edi]
  44d8f0:	sub    ecx,edx
  44d8f2:	add    bh,cl
  44d8f4:	out    0x96,al
  44d8f6:	adc    al,BYTE PTR [edx+0x3c]
  44d8f9:	rcl    BYTE PTR [esi],0x72
  44d8fc:	sbb    ebp,DWORD PTR [edx]
  44d8fe:	pop    es
  44d8ff:	push   esi
  44d900:	push   sp
  44d902:	inc    ebp
  44d903:	or     DWORD PTR [ebp+0x19],ebx
  44d906:	mov    bl,ch
  44d908:	pop    ecx
  44d909:	push   ecx
  44d90a:	inc    ebp
  44d90b:	add    BYTE PTR [ebx],ch
  44d90d:	dec    ebx
  44d90e:	dec    edx
  44d90f:	fsubr  st(5),st
  44d911:	dec    edx
  44d912:	add    ecx,DWORD PTR [eax]
  44d914:	in     eax,0x4c
  44d916:	inc    edx
  44d917:	adc    ah,BYTE PTR [eax-0x35]
  44d91a:	and    eax,0x710b5c9
  44d91f:	pusha  
  44d920:	and    eax,0x40124a4c
  44d925:	mov    ebx,DWORD PTR [edx+ecx*8]
  44d928:	inc    eax
  44d929:	(bad)  
  44d92a:	jl     0x44d9a9
  44d92c:	mov    ds:0xcbfff69b,eax
  44d931:	aad    0xc5
  44d933:	loop   0x44d935
	...
  44d945:	add    BYTE PTR [eax],al
  44d947:	add    BYTE PTR [eax+0x29],al
  44d94a:	repz shr esp,cl
  44d94d:	dec    edx
  44d94e:	dec    edx
  44d94f:	call   0x8e03ea86
  44d954:	mov    bh,0xc0
  44d956:	idiv   edi
  44d958:	mov    edx,ebp
  44d95a:	cmc    
  44d95b:	imul   DWORD PTR [esi]
  44d95d:	retf   0x8baf
  44d960:	pop    esi
  44d961:	inc    ebp
  44d962:	mov    bl,BYTE PTR [ebx+0xd58b]
  44d968:	mov    al,ds:0x2c21ca7
  44d96d:	sbb    eax,0xaeef872
  44d972:	clc    
  44d973:	mov    eax,0xdd4a
  44d978:	cwde   
  44d979:	cld    
  44d97a:	jl     0x44d9c9
  44d97c:	mov    bl,0x61
  44d97e:	mov    dh,0x74
  44d980:	dec    esi
  44d981:	dec    edx
  44d982:	mov    ds:0xdd4b24,eax
  44d987:	add    BYTE PTR [edx+0x4],bl
  44d98a:	add    ecx,0xfffffff6
  44d98d:	(bad)  
  44d98e:	add    al,0xc7
  44d991:	call   0x3fc12a21
  44d996:	mov    BYTE PTR [ebx],0x62
  44d999:	repnz test BYTE PTR [edx+0xa],dl
  44d99d:	fmul   QWORD PTR [edx]
  44d99f:	rcr    DWORD PTR [edi+0x620003da],0x42
  44d9a6:	jle    0x44d9ea
  44d9a8:	repnz inc esp
  44d9aa:	pop    ebx
  44d9ab:	clc    
	...
  44d9c0:	in     eax,dx
  44d9c1:	inc    edx
  44d9c2:	add    esp,DWORD PTR [edx+0x63]
  44d9c5:	push   es
  44d9c6:	mov    eax,0xd43057a3
  44d9cb:	pop    edx
  44d9cc:	(bad)  
  44d9cd:	aas    
  44d9ce:	jg     0x44d994
  44d9d0:	bound  eax,QWORD PTR [edx+0x3]
  44d9d3:	test   DWORD PTR [edi],edx
  44d9d5:	jb     0x44d9e8
  44d9d7:	mov    cl,0x53
  44d9d9:	stos   DWORD PTR es:[edi],eax
  44d9da:	mov    edi,0xb7650b
  44d9df:	push   eax
  44d9e0:	imul   esp,ebp,0x36dc0820
  44d9e6:	and    al,bh
  44d9e8:	popf   
  44d9e9:	stos   DWORD PTR es:[edi],eax
  44d9ea:	(bad)  
  44d9eb:	retf   
  44d9ec:	inc    ecx
  44d9ed:	aad    0x14
  44d9ef:	xchg   BYTE PTR [edi],dl
  44d9f1:	jle    0x44d9c8
  44d9f3:	jb     0x44d9a7
  44d9f5:	das    
  44d9f6:	jg     0x44d9f5
  44d9f8:	jl     0x44d9b1
  44d9fa:	and    DWORD PTR [edi+ecx*1-0x832804a],eax
  44da01:	cmp    DWORD PTR [edx+ecx*2-0xc38569a],eax
  44da08:	jmp    0x4a875ffd
  44da0d:	mov    ebx,0x3ddfc7c7
  44da12:	mov    eax,DWORD PTR [ecx+ebx*1-0x5879b935]
  44da19:	mov    dl,BYTE PTR [esi+edi*8+0x35]
  44da1d:	inc    edx
  44da1e:	add    edi,ebp
  44da20:	adc    dl,bl
  44da22:	sbb    al,0x34
	...
  44da38:	(bad)  
  44da39:	(bad)  ds:0x8d667895
  44da3f:	mov    dh,0xc1
  44da41:	dec    eax
  44da42:	ficomp WORD PTR [eax+0x4b]
  44da45:	add    al,0x1f
  44da47:	xchg   ebp,eax
  44da49:	mov    dh,0xed
  44da4b:	lds    edi,FWORD PTR [esp+ebx*2]
  44da4e:	pop    ds
  44da4f:	push   es
  44da50:	div    DWORD PTR [edi-0x4e]
  44da53:	mov    dh,0xf9
  44da55:	stos   BYTE PTR es:[edi],al
  44da56:	add    cl,BYTE PTR [ebp-0x498de290]
  44da5c:	mov    ch,0x63
  44da5e:	sbb    al,0xc
  44da60:	sbb    ebx,edx
  44da62:	jmp    0xbe513c6a
  44da67:	add    al,0xb3
  44da69:	popa   
  44da6a:	cmp    al,0x38
  44da6c:	in     al,0x8d
  44da6e:	mov    eax,ds:0x34d9ad84
  44da73:	or     al,0x2d
  44da75:	xor    ecx,DWORD PTR ds:0x92d96205
  44da7b:	or     al,0x1f
  44da7d:	xor    ebx,ebp
  44da7f:	xchg   esi,eax
  44da80:	pop    ebp
  44da81:	pop    edx
  44da82:	xchg   ebx,eax
  44da83:	mov    bl,0x8f
  44da85:	aaa    
  44da86:	jmp    0x97a8da1f
  44da8b:	mov    eax,?
  44da8d:	int3   
  44da8e:	jb     0x44da99
  44da90:	jmp    0x1c63:0x5b8c59e4
  44da97:	and    ch,bl
  44da99:	pushf  
  44da9a:	js     0x44da9e
	...
  44dab0:	out    0xdf,eax
  44dab2:	jb     0x44da82
  44dab4:	cmp    eax,0x54422203
  44dab9:	fsub   QWORD PTR [eax-0x4a]
  44dabc:	adc    eax,0xedcf70c0
  44dac1:	fist   DWORD PTR [eax-0x5b]
  44dac4:	cmp    esi,DWORD PTR [edi]
  44dac6:	add    BYTE PTR [esi],dh
  44dac8:	ficomp WORD PTR [ebx-0x555e9b08]
  44dace:	sbb    ebx,edx
  44dad0:	fsubr  QWORD PTR [edx]
  44dad2:	xor    edi,DWORD PTR [ebx]
  44dad4:	retf   
  44dad5:	pop    edi
  44dad6:	dec    ebp
  44dad7:	sti    
  44dad8:	fimul  WORD PTR [ebx-0x18e3d818]
  44dade:	inc    eax
  44dadf:	jno    0x44da9d
  44dae1:	out    0x8b,eax
  44dae3:	lods   al,BYTE PTR ds:[esi]
  44dae4:	icebp  
  44dae5:	pop    edi
  44dae6:	add    al,0x6b
  44dae8:	ficomp WORD PTR [ebx+0x32ac62d8]
  44daee:	test   ebp,esi
  44daf0:	jmp    0x3d5c:0x61e9f736
  44daf7:	std    
  44daf8:	data16 loope 0x44da86
  44dafb:	and    al,0xc6
  44dafd:	lea    edx,[edi+0x70]
  44db00:	mov    dh,0x5
  44db02:	rcr    DWORD PTR [edi],0xe9
  44db05:	cmp    edx,DWORD PTR [ebp-0x56]
  44db08:	jmp    0x622d939e
  44db0d:	fld    DWORD PTR [eax]
  44db0f:	inc    edi
  44db10:	jmp    0xef3050
	...
  44db25:	add    BYTE PTR [eax],al
  44db27:	add    BYTE PTR [edx],dh
  44db29:	and    al,ah
  44db2b:	cmp    al,0xd9
  44db2d:	inc    edx
  44db2e:	mov    esp,DWORD PTR [esi+edx*2]
  44db31:	pop    esp
  44db32:	or     BYTE PTR [edi+ebp*1-0x56],ch
  44db36:	adc    esi,DWORD PTR [edx-0x45]
  44db39:	out    0x8b,al
  44db3b:	sub    DWORD PTR [edx-0x59],esp
  44db3e:	mov    edx,DWORD PTR [edx+edx*2]
  44db41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44db42:	push   eax
  44db43:	xchg   di,ax
  44db45:	mov    ch,0xbc
  44db47:	in     eax,dx
  44db48:	and    dh,BYTE PTR [ebp-0x75]
  44db4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44db4c:	push   ecx
  44db4d:	pop    ebp
  44db4e:	dec    ebp
  44db4f:	fisttp QWORD PTR [esi]
  44db51:	pop    ebp
  44db52:	dec    eax
  44db53:	add    BYTE PTR [edi+0x68],al
  44db56:	jl     0x44dba8
  44db58:	imul   ebp,DWORD PTR [eax+edi*8-0x2e],0xffffffb8
  44db5d:	mov    eax,ds:0x89785d0b
  44db62:	retf   
  44db63:	int3   
  44db64:	push   edi
  44db65:	mov    ebx,ecx
  44db67:	int3   
  44db68:	inc    edi
  44db69:	mov    ebx,ecx
  44db6b:	int3   
  44db6c:	into   
  44db6d:	(bad)  
  44db6e:	jmp    0x44dafb
  44db70:	out    0xe1,al
  44db72:	jge    0x44dbb5
  44db74:	sbb    esp,DWORD PTR [ecx-0x49]
  44db77:	je     0x44db79
  44db79:	arpl   WORD PTR [edx+0x18],dx
  44db7c:	and    BYTE PTR [ebx+ebx*1],0x52
  44db80:	xor    BYTE PTR [eax+0x13],0x52
  44db84:	push   eax
  44db85:	jno    0x44db8e
  44db87:	push   edx
  44db88:	push   eax
  44db89:	jno    0x44db96
  44db8b:	push   edx
	...
  44dba0:	mov    dl,dh
  44dba2:	mov    DWORD PTR [ebx-0x3ca5d201],0x33072130
  44dbac:	fst    DWORD PTR [edx]
  44dbae:	mov    bh,0x75
  44dbb0:	mov    esi,0x6f145212
  44dbb5:	loopne 0x44dc2c
  44dbb7:	enter  0x18c4,0xb4
  44dbbb:	mov    ecx,DWORD PTR [esi+0x35]
  44dbbe:	inc    ebp
  44dbbf:	mov    ecx,DWORD PTR [edx-0x27]
  44dbc2:	push   eax
  44dbc3:	mov    edi,DWORD PTR [esi]
  44dbc5:	leave  
  44dbc6:	push   eax
  44dbc7:	mov    ecx,DWORD PTR [edx+0x45]
  44dbca:	inc    ebp
  44dbcb:	(bad)  
  44dbcc:	fistp  DWORD PTR [edx-0x3d]
  44dbcf:	adc    BYTE PTR [esi-0x66],dl
  44dbd2:	retf   
  44dbd3:	int3   
  44dbd4:	(bad)  
  44dbd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44dbd6:	retf   
  44dbd7:	int3   
  44dbd8:	xchg   edi,eax
  44dbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dbda:	retf   
  44dbdb:	int3   
  44dbdc:	xchg   DWORD PTR [ebx+ecx*8-0x758a9d34],esp
  44dbe3:	jmp    0x44dbbe
  44dbe5:	jge    0x44dbf2
  44dbe7:	jge    0x44dba3
  44dbe9:	adc    al,BYTE PTR [ebx]
  44dbeb:	test   DWORD PTR [edi+0x4e4f8a46],esp
  44dbf1:	push   ecx
  44dbf2:	mov    cl,0x73
  44dbf4:	pop    eax
  44dbf5:	mov    bh,0xc3
  44dbf7:	or     ebx,DWORD PTR ds:0x6ac382f3
  44dbfd:	jne    0x44dc41
  44dbff:	test   BYTE PTR [edx+0xcf1626],ah
	...
  44dc15:	add    BYTE PTR [eax],al
  44dc17:	add    cl,ah
  44dc19:	dec    BYTE PTR [ebx]
  44dc1b:	jge    0x44dc17
  44dc1d:	fistp  DWORD PTR [eax-0x7cfd9700]
  44dc23:	(bad)
  44dc26:	inc    edx
  44dc27:	sub    al,0x10
  44dc29:	inc    dx
  44dc2b:	test   ch,bl
  44dc2d:	cmc    
  44dc2e:	mov    ebx,ebp
  44dc30:	jecxz  0x44dc58
  44dc32:	sub    al,0xfd
  44dc34:	int    0x42
  44dc36:	bound  eax,QWORD PTR [ebx+0x32]
  44dc39:	(bad)  
  44dc3a:	cld    
  44dc3b:	sub    al,0xa7
  44dc3d:	test   eax,0xbdebfbbf
  44dc42:	sbb    al,0xfa
  44dc44:	lods   eax,DWORD PTR ds:[esi]
  44dc45:	imul   ecx,DWORD PTR [ebx+0x1585868a],0xfffffff8
  44dc4c:	jmp    0x44dc03
  44dc4e:	xor    al,0xfa
  44dc50:	xchg   ebp,eax
  44dc51:	push   ebx
  44dc52:	mov    ebx,DWORD PTR [edx-0x7eab24a]
  44dc58:	fisttp DWORD PTR [ebp+0x5b7dfa2c]
  44dc5e:	mov    edi,DWORD PTR [edx-0x7ea4a5a]
  44dc64:	add    al,0xbe
  44dc66:	outs   dx,DWORD PTR ds:[esi]
  44dc67:	mul    DWORD PTR [edi-0x3d]
  44dc6a:	adc    eax,0x6cd8ee61
  44dc6f:	xor    BYTE PTR [eax+0x34],bl
  44dc72:	push   esi
  44dc73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44dc74:	fst    DWORD PTR [ebp+0x21]
  44dc77:	pop    ds
  44dc78:	dec    edx
  44dc79:	xor    al,0xbf
  44dc7b:	pop    DWORD PTR [eax]
	...
  44dc8d:	add    BYTE PTR [eax],al
  44dc8f:	add    al,ah
  44dc91:	sbb    al,0x3c
  44dc93:	sbb    eax,0x6765bb3a
  44dc98:	in     eax,dx
  44dc99:	xor    eax,0x65c31d2e
  44dc9e:	je     0x44dd00
  44dca0:	sbb    BYTE PTR [esi+ebx*1],dh
  44dca3:	sub    dl,0x5d
  44dca6:	sbb    DWORD PTR [edi],ebx
  44dca8:	or     dh,BYTE PTR [edx+eiz*2]
  44dcab:	(bad)  
  44dcac:	popa   
  44dcad:	bound  ebx,QWORD PTR [esp+ebp*1-0x8]
  44dcb1:	xor    edi,esi
  44dcb3:	mov    fs,WORD PTR [eax+0x3d871edd]
  44dcb9:	ss out dx,al
  44dcbb:	sbb    al,0xe4
  44dcbd:	xor    ebp,eax
  44dcbf:	add    esp,ebp
  44dcc1:	pop    ebp
  44dcc2:	aad    0x1e
  44dcc4:	fidiv  DWORD PTR [ebx]
  44dcc6:	jb     0x44dc8b
  44dcc8:	leave  
  44dcc9:	shr    cl,0xcd
  44dccc:	test   ecx,ebx
  44dcce:	pusha  
  44dccf:	xchg   cl,al
  44dcd1:	xor    eax,0xcdba1cbe
  44dcd6:	gs icebp 
  44dcd8:	ins    DWORD PTR es:[edi],dx
  44dcd9:	fldenv [edx-0x32]
  44dcdc:	test   eax,0x732b94e7
  44dce1:	fldl2t 
  44dce3:	add    ebx,DWORD PTR [ebp+0x301c7217]
  44dce9:	pusha  
  44dcea:	jge    0x44dcaa
  44dcec:	jl     0x44dc91
  44dcee:	xchg   BYTE PTR [edx+edi*2],bl
  44dcf1:	and    al,0x7e
  44dcf3:	out    0x0,al
	...
  44dd05:	add    BYTE PTR [eax],al
  44dd07:	add    BYTE PTR [ecx],ch
  44dd09:	retf   
  44dd0a:	sub    DWORD PTR [esi+ebx*4],eax
  44dd0d:	and    al,0x0
  44dd0f:	mov    dl,0x54
  44dd11:	popf   
  44dd12:	push   eax
  44dd13:	and    eax,0x2b03a666
  44dd18:	popa   
  44dd19:	fldl2t 
  44dd1b:	arpl   WORD PTR [esi-0x27],sp
  44dd1e:	add    BYTE PTR [edx+0x66],ah
  44dd21:	mov    BYTE PTR [ebx+0x6c741a5b],cl
  44dd27:	(bad)  
  44dd29:	sub    BYTE PTR [edx+ebx*8-0xe],ch
  44dd2d:	pop    ebp
  44dd2e:	mul    DWORD PTR [ebx+0x28]
  44dd31:	pop    ebp
  44dd32:	adc    BYTE PTR [ecx+0x19],ah
  44dd35:	mov    eax,ds:0xf421f888
  44dd3a:	jge    0x44dd53
  44dd3c:	hlt    
  44dd3d:	inc    ebx
  44dd3e:	pop    ebx
  44dd3f:	mov    bh,0xa2
  44dd41:	push   ds
  44dd42:	les    ebx,FWORD PTR ds:0x35c41ead
  44dd48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44dd49:	push   ds
  44dd4a:	les    ebp,FWORD PTR ds:0x62c41e9d
  44dd50:	inc    esi
  44dd51:	xchg   DWORD PTR [ebx+0x4d5e13fd],ecx
  44dd57:	icebp  
  44dd58:	adc    BYTE PTR [esi-0x8],bl
  44dd5b:	and    ch,BYTE PTR [eax+ebp*4+0x66]
  44dd5f:	bound  ebx,QWORD PTR [ebx+0x6fe585de]
  44dd65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dd66:	mov    DWORD PTR [edx+ebx*2],ebp
  44dd69:	mov    bl,ch
  44dd6b:	jmp    0x0:0x0
	...
  44dd7e:	add    BYTE PTR [eax],al
  44dd80:	ficomp DWORD PTR [ebx+0x2ed36200]
  44dd86:	mov    edx,DWORD PTR [ebx-0x3090d643]
  44dd8c:	jmp    0xd9:0x61e91c76
  44dd93:	bound  ebx,QWORD PTR [ebx-0x48c8ac3a]
  44dd99:	xor    DWORD PTR [ebp+0x0],ecx
  44dd9c:	fwait
  44dd9d:	pop    ebx
  44dd9e:	ret    
  44dd9f:	or     al,0x6
  44dda1:	popf   
  44dda2:	jns    0x44dda6
  44dda4:	add    bh,ch
  44dda6:	hlt    
  44dda7:	je     0x44dde8
  44dda9:	adc    esi,eax
  44ddab:	jbe    0x44dd51
  44ddad:	bound  ecx,QWORD PTR [edx+0xc]
  44ddb0:	shr    BYTE PTR [eax-0x1],1
  44ddb3:	mov    ch,BYTE PTR [edx-0x73c43f9e]
  44ddb9:	dec    ecx
  44ddba:	sbb    BYTE PTR [ebp-0x74f3b68e],al
  44ddc0:	jo     0x44de04
  44ddc2:	enter  0xc190,0x35
  44ddc6:	jge    0x44dddc
  44ddc8:	or     bl,BYTE PTR [esi+0x1b]
  44ddcb:	add    ebp,ecx
  44ddcd:	pop    ebp
  44ddce:	pop    es
  44ddcf:	inc    eax
  44ddd0:	xchg   bh,al
  44ddd2:	jb     0x44ddc4
  44ddd4:	and    BYTE PTR [eax],0xb
  44ddd7:	mov    esi,DWORD PTR [esi+0x20f91ddd]
  44dddd:	aam    0x70
  44dddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44dde0:	int    0x72
  44dde2:	pop    eax
  44dde3:	mov    eax,DWORD PTR [eax]
	...
  44ddf5:	add    BYTE PTR [eax],al
  44ddf7:	add    BYTE PTR [esi+0x70],dl
  44ddfa:	mov    ah,0xcc
  44ddfc:	jg     0x44dd9f
  44ddfe:	retf   
  44ddff:	int3   
  44de00:	setp   bl
  44de03:	int3   
  44de04:	call   FWORD PTR [ecx-0x30bf3335]
  44de0a:	push   edx
  44de0b:	mov    edi,edi
  44de0d:	pop    esp
  44de0e:	jmp    0x44de10
  44de10:	retf   0xd5
  44de13:	push   ebx
  44de14:	xor    BYTE PTR [ecx-0x1],dh
  44de17:	push   esi
  44de18:	inc    eax
  44de19:	push   ecx
  44de1a:	or     eax,DWORD PTR [ebp-0x7ae0b710]
  44de20:	mov    esp,0x96ff2361
  44de25:	sbb    DWORD PTR [ecx],edx
  44de27:	inc    eax
  44de28:	bound  eax,QWORD PTR [eax-0x5b]
  44de2b:	dec    DWORD PTR [ebx]
  44de2d:	inc    eax
  44de2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44de2f:	dec    DWORD PTR [ebx]
  44de31:	inc    eax
  44de32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44de33:	jmp    DWORD PTR [edi+edi*1+0x3f65fff1]
  44de3a:	sub    esp,ecx
  44de3c:	pop    esp
  44de3d:	rcr    BYTE PTR [edx],0x7c
  44de40:	push   ds
  44de41:	das    
  44de42:	mov    edx,0xb895d954
  44de47:	mov    esp,0xf90bbac
  44de4c:	out    0x88,eax
  44de4e:	xchg   ecx,eax
  44de4f:	add    ecx,esp
  44de51:	adc    eax,0xd5b6ffe7
  44de56:	sbb    edx,DWORD PTR [edx]
  44de58:	xchg   esi,eax
  44de59:	adc    bl,al
  44de5b:	inc    DWORD PTR [eax]
	...
  44de6d:	add    BYTE PTR [eax],al
  44de6f:	add    BYTE PTR [ebx-0x74005abe],cl
  44de75:	inc    edx
  44de76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44de77:	(bad)  
  44de78:	jnp    0x44debc
  44de7a:	inc    edx
  44de7b:	jmp    FWORD PTR [edi+0x42]
  44de7e:	add    eax,DWORD PTR [eax]
  44de80:	or     al,BYTE PTR [edi-0x3c0a07e7]
  44de86:	aaa    
  44de87:	adc    ecx,DWORD PTR [edi+ecx*2+0x45ff84b6]
  44de8e:	ds jl  0x44de6e
  44de91:	inc    esp
  44de92:	(bad)  
  44de93:	repz and eax,0x61f96827
  44de99:	cmp    eax,DWORD PTR [ecx+0x42]
  44de9c:	into   
  44de9d:	inc    edx
  44de9e:	add    eax,DWORD PTR [eax]
  44dea0:	bound  edi,QWORD PTR [ecx-0x6a140451]
  44dea6:	adc    al,0x8a
  44dea8:	leave  
  44dea9:	inc    edx
  44deaa:	add    eax,DWORD PTR [eax]
  44deac:	bound  edi,QWORD PTR [ebx+0x33a12441]
  44deb2:	sub    eax,0x29d98cf0
  44deb7:	test   DWORD PTR [ebp-0x2104f11f],edx
  44debd:	xchg   esi,eax
  44debe:	icebp  
  44debf:	mov    WORD PTR [eax],gs
  44dec1:	lds    edi,FWORD PTR [ecx]
  44dec3:	mov    bl,0x13
  44dec5:	mov    WORD PTR [edx+0x41],?
  44dec8:	test   DWORD PTR [edx],ebx
  44deca:	ja     0x44dee5
  44decc:	push   0x5c
  44dece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44decf:	hlt    
  44ded0:	inc    esp
  44ded1:	dec    edi
  44ded2:	call   0x44deda
	...
  44dee7:	add    BYTE PTR [edx+0x64],ah
  44deea:	mov    ah,0xfb
  44deec:	sbb    al,0x41
  44deee:	out    0x68,al
  44def0:	and    ebx,esp
  44def2:	sub    cl,BYTE PTR [ebp-0x4a4578b3]
  44def8:	cmp    al,BYTE PTR [esi-0x22de7b2b]
  44defe:	pop    esp
  44deff:	inc    esp
  44df00:	stos   DWORD PTR es:[edi],eax
  44df01:	frstor [edx-0x51]
  44df04:	ins    DWORD PTR es:[edi],dx
  44df05:	fs pop ss
  44df07:	(bad)  
  44df08:	(bad)  
  44df09:	inc    eax
  44df0a:	test   DWORD PTR [ecx],ebx
  44df0c:	or     dh,BYTE PTR [eax]
  44df0e:	jb     0x44decf
  44df10:	ins    DWORD PTR es:[edi],dx
  44df11:	mov    BYTE PTR [edx-0x127a054d],bh
  44df17:	test   BYTE PTR [ecx],ah
  44df19:	frstor [esp+eax*2+0x6b]
  44df1d:	fnsave [edx-0x51]
  44df20:	push   ebp
  44df21:	fs push ds
  44df23:	lea    ebx,[esi]
  44df25:	inc    ecx
  44df26:	mov    eax,ds:0x722fda19
  44df2b:	(bad)  
  44df2c:	jne    0x44deb6
  44df2e:	das    
  44df2f:	mov    bl,0xca
  44df31:	test   ebp,esi
  44df33:	test   BYTE PTR [ecx+0x3b435cdc],ah
  44df39:	fnsave [edx-0x52]
  44df3c:	pop    ebp
  44df3d:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  44df3f:	mov    WORD PTR [ebx+0x78050040],fs
  44df45:	xor    edi,esi
  44df47:	repnz outs dx,BYTE PTR ds:[esi]
  44df49:	stos   BYTE PTR es:[edi],al
  44df4a:	sbb    ebp,edx
	...
  44df60:	aam    0xdf
  44df62:	cmp    edi,DWORD PTR [edi+0x3c8bcbee]
  44df68:	jle    0x44def3
  44df6a:	push   ebx
  44df6b:	cmp    ebx,DWORD PTR [ebx-0x75]
  44df6e:	or     al,0x6a
  44df70:	sub    eax,0xcba97de4
  44df75:	cmp    edi,DWORD PTR ss:[edx-0xe]
  44df79:	rol    DWORD PTR [ebx],cl
  44df7b:	or     al,0x4e
  44df7d:	out    0x55,al
  44df7f:	popa   
  44df80:	repnz retf 
  44df82:	mov    esp,DWORD PTR [ecx+ecx*2+0x5ab95389]
  44df89:	mov    ecx,DWORD PTR [edx+ebp*2]
  44df8c:	jne    0x44df70
  44df8e:	jge    0x44dfb9
  44df90:	retf   
  44df91:	ss jmp 0x44df7e
  44df94:	fcom   QWORD PTR [edi-0x210afe00]
  44df9a:	cmp    ebp,DWORD PTR [edi]
  44df9c:	repz fimul WORD PTR [ebx+0x4f8909b4]
  44dfa3:	mov    eax,0x6a0c8b6a
  44dfa8:	cmp    eax,0xda297de2
  44dfad:	aaa    
  44dfae:	cmp    esp,DWORD PTR [esi]
  44dfb0:	shl    bh,cl
  44dfb2:	mov    edx,DWORD PTR [ecx+esi*8-0x398240ab]
  44dfb9:	push   ebp
  44dfba:	retf   
  44dfbb:	ret    0x942a
  44dfbe:	mov    DWORD PTR [esi+esi*2],edi
  44dfc1:	loope  0x44df71
  44dfc3:	cmc    
	...
  44dfd8:	pop    esi
  44dfd9:	popa   
  44dfda:	dec    ebp
  44dfdb:	loop   0x44e041
  44dfdd:	imul   edx,DWORD PTR [eax],0x61
  44dfe0:	mov    dl,0x2f
  44dfe2:	push   es
  44dfe3:	add    BYTE PTR ds:0x8b87fc68,ch
  44dfe9:	arpl   WORD PTR [edx-0x10],dx
  44dfec:	dec    ebx
  44dfed:	pop    eax
  44dfee:	lds    esi,FWORD PTR [ebp-0x56]
  44dff1:	adc    dh,al
  44dff3:	paddd  mm3,QWORD PTR [ebp-0x8]
  44dff7:	jmp    esp
  44dff9:	(bad)  
  44dffa:	in     al,0xe9
  44dffc:	pop    ebx
  44dffd:	xabort 0xff
  44e000:	mov    BYTE PTR [ecx+0x7],dl
  44e003:	cmp    ebp,esp
  44e005:	dec    ecx
  44e006:	and    ch,bl
  44e008:	js     0x44e06b
  44e00a:	add    BYTE PTR ds:[eax],ah
  44e00d:	push   ecx
  44e00e:	pop    es
  44e00f:	cmp    eax,ebp
  44e011:	pop    edi
  44e012:	push   cs
  44e013:	mov    edi,esi
  44e015:	xor    DWORD PTR [ecx+0x57],edx
  44e018:	or     eax,edi
  44e01a:	push   edx
  44e01b:	adc    al,0xc8
  44e01d:	cdq    
  44e01e:	or     eax,DWORD PTR [ebp+0x3bde498b]
  44e024:	ins    BYTE PTR es:[edi],dx
  44e025:	dec    ebx
  44e026:	sbb    bl,ch
  44e028:	cmp    BYTE PTR [ecx+0x3e],ah
  44e02b:	add    BYTE PTR [eax+0x50],ah
  44e02e:	pop    es
  44e02f:	mov    edi,DWORD PTR [esi-0x1207d33b]
  44e035:	sub    bh,BYTE PTR [ebp+ecx*2+0x63]
  44e039:	jg     0x44e08b
  44e03b:	push   ecx
	...
  44e050:	push   esp
  44e051:	push   0xe13f8313
  44e056:	add    eax,0x6f
  44e059:	int3   
  44e05a:	jl     0x44e0a1
  44e05c:	out    0x62,eax
  44e05e:	push   edx
  44e05f:	clc    
  44e060:	inc    eax
  44e061:	mov    ds:0xa2a0f77c,eax
  44e066:	sbb    al,0xf0
  44e068:	add    ah,0x7b
  44e06b:	sub    eax,DWORD PTR [eax+0x621564ee]
  44e071:	mov    ebx,0xb3ebf3c8
  44e076:	mov    BYTE PTR [edi-0x53],dh
  44e079:	push   ss
  44e07a:	push   cs
  44e07b:	xchg   dh,ah
  44e07d:	mov    esp,0x669df903
  44e082:	mov    esp,0xda642786
  44e087:	aad    0x11
  44e089:	cmp    DWORD PTR [edx-0x6f557586],ecx
  44e08f:	por    mm4,mm4
  44e092:	sbb    dh,ah
  44e094:	or     ebx,DWORD PTR [esi+0xe]
  44e097:	clc    
  44e098:	sub    DWORD PTR [edx-0x6e],edi
  44e09b:	adc    bl,cl
  44e09d:	cld    
  44e09e:	adc    BYTE PTR [esi-0x7644a02],al
  44e0a4:	push   ebp
  44e0a5:	mov    esp,0x42df9384
  44e0aa:	push   cs
  44e0ab:	clc    
  44e0ac:	inc    ebp
  44e0ad:	add    BYTE PTR [edx+ecx*2+0x6c37c836],0x0
	...
  44e0c5:	add    BYTE PTR [eax],al
  44e0c7:	add    BYTE PTR [edi+esi*4-0x48],ah
  44e0cb:	sti    
  44e0cc:	fldcw  WORD PTR [ebp-0xd]
  44e0cf:	xchg   BYTE PTR [edi+0x1c39249a],ah
  44e0d5:	in     al,0xe
  44e0d7:	test   BYTE PTR [edi+0x16428a12],cl
  44e0dd:	shr    BYTE PTR [ebx],0xfe
  44e0e0:	fidiv  DWORD PTR [ebp+0x7]
  44e0e3:	or     dl,ch
  44e0e5:	cmp    ecx,DWORD PTR ds:0x67b7f5f8
  44e0eb:	sub    BYTE PTR [edx-0x2d],0xe
  44e0ef:	clc    
  44e0f0:	fnstenv [esi+0x23dcff80]
  44e0f6:	or     eax,0x8b3e2f86
  44e0fb:	inc    edx
  44e0fc:	retf   0x72d9
  44e0ff:	cmp    bl,dh
  44e101:	xor    eax,edx
  44e103:	add    eax,0x89ce2cb8
  44e108:	mov    edx,0x2e286286
  44e10d:	cmp    eax,0x1076b0ed
  44e112:	psubusw mm2,QWORD PTR [esi-0x6ab99a24]
  44e119:	sub    al,0xe9
  44e11b:	fisubr DWORD PTR [eax]
  44e11d:	leave  
  44e11e:	out    dx,al
  44e11f:	jge    0x44e0c1
  44e121:	fldl2t 
  44e123:	add    ecx,DWORD PTR [edi+0x19]
  44e126:	shl    BYTE PTR [esi+0x4e6614d],1
	...
  44e140:	rcr    DWORD PTR [ecx],1
  44e142:	sub    ebx,ebx
  44e144:	and    cl,cl
  44e146:	out    dx,al
  44e147:	pop    es
  44e148:	dec    edx
  44e149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e14a:	ins    DWORD PTR es:[edi],dx
  44e14b:	adc    eax,0x2acbbf5a
  44e150:	std    
  44e151:	fsubr  st,st(1)
  44e153:	add    ebx,edi
  44e155:	xchg   ebp,eax
  44e156:	in     eax,dx
  44e157:	cmp    ch,0x2a
  44e15a:	push   0x1c
  44e15c:	push   edi
  44e15d:	fcomp  QWORD PTR [esi+0x7a]
  44e160:	sub    eax,0x9088e92c
  44e165:	loope  0x44e1d9
  44e167:	mov    edi,0x178c6269
  44e16c:	fisub  WORD PTR [ebx]
  44e16e:	lock mov dh,0x75
  44e171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e172:	cli    
  44e173:	or     al,0x2f
  44e175:	enter  0x3e2a,0x62
  44e179:	(bad)  
  44e17a:	pop    esp
  44e17b:	(bad)  
  44e17c:	hlt    
  44e17d:	adc    bl,BYTE PTR [edi+edx*1+0x3e92bec]
  44e184:	repz adc BYTE PTR [eax-0x71],dh
  44e188:	jne    0x44e1ec
  44e18a:	add    BYTE PTR [ebp+ebx*2+0x76dd6d32],dl
  44e191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e192:	or     al,0x39
  44e194:	adc    BYTE PTR [ecx+eiz*1],dh
  44e197:	in     al,0x61
  44e199:	(bad)  [ecx-0x25aaa9cc]
  44e19f:	bound  esi,QWORD PTR [ecx+0x55]
  44e1a2:	ret    
  44e1a3:	push   0x0
	...
  44e1b5:	add    BYTE PTR [eax],al
  44e1b7:	add    BYTE PTR [eax-0x2d],cl
  44e1ba:	outs   dx,BYTE PTR ds:[esi]
  44e1bb:	in     al,0xe1
  44e1bd:	push   0x4f
  44e1bf:	ret    0x5962
  44e1c2:	sar    ecx,0xd9
  44e1c5:	loope  0x44e152
  44e1c7:	xor    al,0x6a
  44e1c9:	call   0xa97d:0x2fa47041
  44e1d0:	out    0xd7,al
  44e1d2:	jge    0x44e18f
  44e1d4:	(bad)  
  44e1d6:	cmp    esi,DWORD PTR [esi+ebp*2]
  44e1d9:	mov    ebp,0x2f2472be
  44e1de:	cmp    esp,DWORD PTR [esi+ecx*2]
  44e1e1:	mov    ebp,0x2b4ea713
  44e1e6:	fist   WORD PTR [ebp+0x6a]
  44e1e9:	xor    edi,esi
  44e1eb:	rol    DWORD PTR [ebx-0x7c],cl
  44e1ee:	mov    ecx,esp
  44e1f0:	jmp    0xbef8:0x7a32333b
  44e1f7:	out    dx,eax
  44e1f8:	popa   
  44e1f9:	lahf   
  44e1fa:	mov    esp,DWORD PTR [ecx+ebx*1+0x5f631055]
  44e201:	popa   
  44e202:	push   cs
  44e203:	lahf   
  44e204:	(bad)  
  44e206:	inc    eax
  44e207:	jo     0x44e1cd
  44e209:	ret    0x273b
  44e20c:	sar    DWORD PTR [esi],cl
  44e20e:	xor    ebp,DWORD PTR [ecx]
  44e210:	dec    edx
  44e211:	ret    
  44e212:	call   0xf7762c40
  44e217:	add    cl,dl
  44e219:	cmp    al,0x59
  44e21b:	mov    DWORD PTR [eax],eax
	...
  44e22d:	add    BYTE PTR [eax],al
  44e22f:	add    BYTE PTR [ebx],bl
  44e231:	push   0x44
  44e233:	push   ebx
  44e234:	clc    
  44e235:	imul   ebx,edi,0xf8c6d0a5
  44e23b:	xor    edi,0x31
  44e23e:	jl     0x44e206
  44e240:	jge    0x44e2bc
  44e242:	mov    esi,0x7dd6b7c2
  44e247:	push   DWORD PTR [esi-0x56]
  44e24a:	jmp    0x44e2a3
  44e24c:	xor    BYTE PTR [eax+0x7],cl
  44e24f:	push   0xffffff8b
  44e251:	(bad)  
  44e252:	jb     0x44e26c
  44e254:	int3   
  44e255:	push   eax
  44e256:	adc    edi,edi
  44e258:	push   esi
  44e259:	fyl2xp1 
  44e25b:	jne    0x44e1f0
  44e25d:	into   
  44e25e:	aam    0xfe
  44e260:	fadd   st(6),st
  44e262:	pop    eax
  44e263:	pop    ebp
  44e264:	enter  0xcb99,0xcc
  44e268:	sub    BYTE PTR [edi+0x50],ch
  44e26b:	mov    eax,DWORD PTR [edi+0x41]
  44e26e:	pop    es
  44e26f:	mov    eax,DWORD PTR [edi+0x7f8b1341]
  44e275:	inc    ecx
  44e276:	andnps xmm5,XMMWORD PTR [ecx+0x65]
  44e27a:	inc    esi
  44e27b:	push   ecx
  44e27c:	xor    esp,edx
  44e27e:	test   DWORD PTR [ebx+0x4b],0x4b35f872
  44e285:	(bad)  
  44e286:	add    BYTE PTR [eax],al
  44e288:	fisub  DWORD PTR [eax]
  44e28a:	inc    edi
  44e28b:	inc    esp
  44e28c:	cmp    eax,DWORD PTR [ebx]
  44e28e:	ret    
  44e28f:	mov    edi,eax
  44e291:	xor    edi,edi
  44e293:	arpl   WORD PTR [eax],ax
	...
  44e2a5:	add    BYTE PTR [eax],al
  44e2a7:	add    BYTE PTR [edx-0x40008c0],al
  44e2ad:	aad    0x7d
  44e2af:	inc    esp
  44e2b0:	pop    ss
  44e2b1:	push   es
  44e2b2:	jl     0x44e30c
  44e2b4:	rep stos BYTE PTR es:[edi],al
  44e2b6:	dec    ebx
  44e2b7:	and    al,0x62
  44e2b9:	adc    al,0xce
  44e2bb:	push   ss
  44e2bc:	(bad)  [edi-0x9]
  44e2bf:	jl     0x44e2a5
  44e2c1:	rcr    DWORD PTR [eax-0x20bc16cc],1
  44e2c7:	xor    esp,ecx
  44e2c9:	and    eax,0x67667311
  44e2ce:	or     eax,0xcfa57471
  44e2d3:	jno    0x44e2c4
  44e2d5:	jmp    0x44e326
  44e2d7:	psubsw mm6,QWORD PTR [esi]
  44e2da:	je     0x44e323
  44e2dc:	pop    esi
  44e2dd:	mov    edi,0xed620386
  44e2e2:	inc    eax
  44e2e3:	arpl   WORD PTR [bx+di+0x3],ax
  44e2e7:	add    cl,ch
  44e2e9:	(bad)  
  44e2ea:	hlt    
  44e2eb:	out    0xb8,eax
  44e2ed:	xor    eax,DWORD PTR [ebx]
  44e2ef:	add    bl,cl
  44e2f1:	inc    eax
  44e2f2:	add    eax,DWORD PTR [eax]
  44e2f4:	bound  esp,QWORD PTR [edi-0x7c75f842]
  44e2fa:	(bad)  
  44e2fb:	jmp    DWORD PTR [edx+0x57]
  44e2fe:	push   ebx
  44e2ff:	arpl   bp,dx
  44e301:	cmp    al,0x3
  44e303:	add    BYTE PTR [edx+0x32],ah
  44e306:	jle    0x44e2cb
  44e308:	jp     0x44e2d9
  44e30a:	mov    dl,0x54
	...
  44e320:	and    DWORD PTR [edi+esi*4-0x4378a1dd],edi
  44e327:	add    esp,DWORD PTR [edx+esi*1+0x3]
  44e32b:	add    dl,bh
  44e32d:	xor    DWORD PTR [ebx],eax
  44e32f:	add    BYTE PTR [edx+0xe],ah
  44e332:	into   
  44e333:	test   BYTE PTR [esi-0x557b0b2a],bl
  44e339:	sub    cl,dh
  44e33b:	(bad)  
  44e33c:	or     cl,bh
  44e33e:	add    eax,0x764e0df8
  44e343:	addr16 push 0xffffffd9
  44e346:	push   ds
  44e347:	xchg   ebx,eax
  44e348:	imul   ebp,DWORD PTR [eax],0xa9faf399
  44e34e:	cmc    
  44e34f:	sbb    ebp,DWORD PTR [ebx]
  44e351:	sub    BYTE PTR [esi],al
  44e353:	adc    ah,BYTE PTR [esi+0x1d]
  44e356:	in     eax,dx
  44e357:	mov    al,0xe6
  44e359:	popf   
  44e35a:	mov    ebp,0xc58ddefb
  44e35f:	repz in al,0xdb
  44e362:	xor    DWORD PTR [esi],eax
  44e364:	(bad)  
  44e365:	fldl2t 
  44e367:	inc    esp
  44e368:	adc    BYTE PTR [ebp+eiz*1-0x18],dl
  44e36c:	pop    ebp
  44e36d:	push   esp
  44e36e:	add    BYTE PTR [ecx],dl
  44e370:	cmp    al,0xc5
  44e372:	(bad)  
  44e373:	xchg   ebx,eax
  44e374:	dec    ebp
  44e375:	sub    BYTE PTR [eax],bh
  44e377:	fadd   QWORD PTR [ebp-0x65ee4932]
  44e37d:	pop    esp
  44e37e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e37f:	add    BYTE PTR [ecx],ch
  44e381:	sbb    ebx,ebp
  44e383:	add    eax,DWORD PTR [eax]
	...
  44e395:	add    BYTE PTR [eax],al
  44e397:	add    BYTE PTR [ecx],dh
  44e399:	(bad)  
  44e39a:	ss mov ch,0xe6
  44e39d:	xor    ebx,edx
  44e39f:	inc    ebx
  44e3a0:	inc    esi
  44e3a1:	add    al,0xda
  44e3a3:	xor    eax,0x10da2f3e
  44e3a8:	push   0xa
  44e3aa:	and    dh,BYTE PTR [ecx+0x7daa86bb]
  44e3b0:	aas    
  44e3b1:	push   esp
  44e3b2:	js     0x44e431
  44e3b4:	or     al,0xb3
  44e3b6:	call   0xea2245d6
  44e3bb:	add    ecx,DWORD PTR [edi-0x79d2e5e7]
  44e3c1:	adc    bl,BYTE PTR [edx]
  44e3c3:	ss jle 0x44e3ee
  44e3c6:	inc    esi
  44e3c7:	sub    dl,BYTE PTR [eax-0x4c4ab2ac]
  44e3cd:	nop
  44e3ce:	rol    DWORD PTR [ebx],cl
  44e3d0:	jl     0x44e3ab
  44e3d2:	add    cl,al
  44e3d4:	fisub  WORD PTR [esi]
  44e3d6:	inc    ebx
  44e3d7:	jmp    0xecf423ac
  44e3dc:	popa   
  44e3dd:	fst    DWORD PTR [edi-0x41]
  44e3e0:	mov    BYTE PTR [edx-0x4b91433d],0x1c
  44e3e7:	loope  0x44e398
  44e3e9:	xchg   esi,eax
  44e3ea:	idiv   DWORD PTR [ebp-0x3b]
  44e3ed:	retf   
  44e3ee:	call   0xf7665428
  44e3f3:	push   0x1a
  44e3f5:	aam    0x55
  44e3f7:	sub    eax,esi
  44e3f9:	daa    
  44e3fa:	retf   
  44e3fb:	mov    ch,0x0
	...
  44e40d:	add    BYTE PTR [eax],al
  44e40f:	add    BYTE PTR [ebp+0x14],bh
  44e412:	les    ebp,FWORD PTR [ebp+0x62c41475]
  44e418:	push   edx
  44e419:	mov    ecx,DWORD PTR [ebx+0x1833debd]
  44e41f:	jb     0x44e3c5
  44e421:	fist   WORD PTR [ebx+0x72]
  44e424:	(bad)  
  44e425:	retf   
  44e426:	dec    esi
  44e427:	(bad)  
  44e428:	neg    bh
  44e42a:	xor    edi,ecx
  44e42c:	retf   0xfe5c
  44e42f:	scas   al,BYTE PTR es:[edi]
  44e430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e431:	and    BYTE PTR [eax],al
  44e433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e434:	pushf  
  44e435:	sub    eax,DWORD PTR [ecx]
  44e437:	jmp    0x12cabd9d
  44e43c:	outs   dx,BYTE PTR ds:[esi]
  44e43d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e43e:	clc    
  44e43f:	xchg   ebp,esi
  44e441:	fisttp QWORD PTR [ebx-0x39db95d1]
  44e447:	mov    edx,0x14f7ef4d
  44e44c:	bound  ebx,QWORD PTR [esi+eax*2-0xb]
  44e450:	mov    esi,0xa2ea0888
  44e455:	cmc    
  44e456:	add    al,0x13
  44e458:	push   ebx
  44e459:	mov    eax,DWORD PTR [edx+eiz*2]
  44e45c:	sbb    al,0xd7
  44e45e:	out    dx,al
  44e45f:	add    bl,cl
  44e461:	fisub  WORD PTR [edx+0xf]
  44e464:	jle    0x44e492
  44e466:	idiv   bh
  44e468:	sti    
  44e469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e46a:	dec    edx
  44e46b:	call   0x8c4049f2
  44e470:	and    BYTE PTR [edi],ah
  44e472:	jle    0x44e4b9
	...
  44e488:	push   ebx
  44e489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44e48a:	inc    edx
  44e48b:	sbb    BYTE PTR [edx+0x5083eb1f],al
  44e491:	enter  0x6073,0x70
  44e495:	ror    BYTE PTR [ebx+0xdacb9b],1
  44e49b:	add    BYTE PTR [esi+0x2e],al
  44e49e:	dec    esp
  44e49f:	mov    esp,edi
  44e4a1:	mov    al,ds:0xaf8f8d13
  44e4a6:	pop    es
  44e4a7:	mov    DWORD PTR [esi-0x33],edi
  44e4aa:	jl     0x44e4ac
  44e4ac:	inc    edx
  44e4ad:	adc    bh,ch
  44e4af:	test   DWORD PTR [edx],eax
  44e4b1:	inc    edx
  44e4b2:	adc    ecx,DWORD PTR [ebx-0x1003a04]
  44e4b8:	aam    0xd6
  44e4ba:	rol    DWORD PTR [ebp-0x2c],0xdc
  44e4be:	add    eax,0x37
  44e4c1:	or     DWORD PTR [eax+0x43],edi
  44e4c4:	lock pxor mm1,QWORD PTR [ebx-0x110a55d]
  44e4cc:	dec    esi
  44e4cd:	out    0x77,eax
  44e4cf:	jge    0x44e4a5
  44e4d1:	(bad)  [eax+eiz*1-0x30]
  44e4d5:	fbstp  TBYTE PTR [ebp-0x8]
  44e4d8:	aad    0x41
  44e4da:	cld    
  44e4db:	mov    al,BYTE PTR [ebp+0x8cef5d1]
  44e4e1:	es das 
  44e4e3:	(bad)  
  44e4e4:	(bad)  
  44e4e5:	and    eax,0xa3474e7c
  44e4ea:	push   ecx
  44e4eb:	or     BYTE PTR [eax],al
	...
  44e4fd:	add    BYTE PTR [eax],al
  44e4ff:	add    BYTE PTR [edx+0x33],ah
  44e502:	ss sub al,0x56
  44e505:	retf   0x5207
  44e508:	outs   dx,BYTE PTR ds:[esi]
  44e509:	stos   DWORD PTR es:[edi],eax
  44e50a:	leave  
  44e50b:	repz mov ch,0x46
  44e50e:	stos   BYTE PTR es:[edi],al
  44e50f:	test   BYTE PTR [edi],al
  44e511:	dec    ebp
  44e512:	inc    edx
  44e513:	rcr    BYTE PTR [edi+0x62fffcec],0x30
  44e51a:	sbb    cl,dl
  44e51c:	jmp    0x2ac3d89d
  44e521:	push   ebx
  44e522:	xchg   edx,eax
  44e523:	push   0x2
  44e525:	dec    ebp
  44e526:	aam    0x7c
  44e528:	lahf   
  44e529:	adc    BYTE PTR [edi-0x70cf9dbd],cl
  44e52f:	pop    ds
  44e530:	cmp    dl,BYTE PTR [eax]
  44e532:	pop    DWORD PTR [ebx+0x62]
  44e535:	fmul   DWORD PTR [ebx-0x7dd04204]
  44e53b:	ret    
  44e53c:	pop    esi
  44e53d:	mov    ebp,0xbb5d7343
  44e542:	ror    BYTE PTR [edi],0x38
  44e545:	xor    DWORD PTR [eax+edi*8+0x4398d077],ebp
  44e54c:	bound  esi,QWORD PTR [ebx-0x326f8c1]
  44e552:	clc    
  44e553:	out    0xb5,eax
  44e555:	jne    0x44e55d
  44e557:	clc    
  44e558:	jmp    0x1a7bde51
  44e55d:	xor    al,0x8f
  44e55f:	push   cs
  44e560:	ftst   
  44e562:	hlt    
  44e563:	dec    ebp
	...
  44e578:	or     eax,0x2a8432bb
  44e57d:	dec    ebx
  44e57e:	push   edx
  44e57f:	stc    
  44e580:	push   ebp
  44e581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e582:	jp     0x44e5c6
  44e584:	jbe    0x44e53d
  44e586:	shl    bh,0xdb
  44e589:	cli    
  44e58a:	add    BYTE PTR [ebp+0xb6ad964],al
  44e590:	cmp    ebp,DWORD PTR [esi-0x2264850e]
  44e596:	jmp    0xb00f:0x11d5763e
  44e59d:	aad    0x72
  44e59f:	mov    ebp,0xfb8f5069
  44e5a4:	push   cs
  44e5a5:	adc    al,0xfa
  44e5a7:	dec    DWORD PTR [edi+0x24]
  44e5aa:	mov    edi,?
  44e5ac:	out    0x9e,al
  44e5ae:	sbb    DWORD PTR [edx-0x63],edi
  44e5b1:	shl    DWORD PTR [edx+0x36],1
  44e5b4:	add    eax,0xea0e0f90
  44e5b9:	pop    edi
  44e5ba:	pop    es
  44e5bb:	push   cs
  44e5bc:	fisub  DWORD PTR [eax+eax*8]
  44e5bf:	mov    dl,0x69
  44e5c1:	aam    0x5d
  44e5c3:	mov    dh,0xca
  44e5c5:	and    al,0xee
  44e5c7:	jns    0x44e5e1
  44e5c9:	rcr    DWORD PTR [eax-0x2eef194a],1
  44e5cf:	mov    eax,ds:0x1bd624bb
  44e5d4:	and    DWORD PTR [esi+ecx*8],0xd
  44e5d8:	stos   BYTE PTR es:[edi],al
  44e5d9:	(bad)  
  44e5da:	xor    esi,esi
	...
  44e5f0:	pop    ebp
  44e5f1:	fnstcw WORD PTR [esi+0x29cb39e7]
  44e5f7:	add    al,0x9e
  44e5f9:	adc    eax,0xe816b616
  44e5fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44e5ff:	jns    0x44e622
  44e601:	std    
  44e602:	cmc    
  44e603:	clc    
  44e604:	mov    ch,0xa6
  44e606:	in     eax,dx
  44e607:	(bad)  
  44e608:	out    0x8d,al
  44e60a:	(bad)
  44e60d:	add    DWORD PTR [esi-0x16fe21d6],ecx
  44e613:	jp     0x44e5b6
  44e615:	std    
  44e616:	int    0x7a
  44e618:	mov    cl,0xfd
  44e61a:	add    cl,bl
  44e61c:	retf   0x1c98
  44e61f:	int    0x3a
  44e621:	fs jne 0x44e621
  44e624:	push   ds
  44e625:	pop    ebp
  44e626:	dec    esp
  44e627:	add    eax,0x5ed8293e
  44e62c:	js     0x44e5d3
  44e62e:	fsubr  st,st(1)
  44e630:	cwde   
  44e631:	cwde   
  44e632:	sbb    al,0xe5
  44e634:	cwde   
  44e635:	mov    BYTE PTR [ecx+eiz*8],bl
  44e638:	or     ah,BYTE PTR [ebp+ebp*2-0x2f]
  44e63c:	mov    dl,BYTE PTR [eax-0x67852ee4]
  44e642:	sbb    al,0xfd
  44e644:	adc    dl,BYTE PTR [esi]
  44e646:	out    dx,eax
  44e647:	sbb    BYTE PTR [ebx+0xc],ch
  44e64a:	mov    ebp,DWORD PTR [ebp+0x18efd3fd]
  44e650:	pop    ebx
  44e651:	adc    eax,0xa8eb
	...
  44e666:	add    BYTE PTR [eax],al
  44e668:	pop    edx
  44e669:	or     al,0x8b
  44e66b:	lods   eax,DWORD PTR ds:[esi]
  44e66c:	(bad)
  44e66f:	popf   
  44e670:	mov    ebp,0xc5a58bc7
  44e675:	rcl    ecx,cl
  44e677:	shl    BYTE PTR [eax+0xb],cl
  44e67a:	rcl    ebx,1
  44e67c:	jo     0x44e68a
  44e67e:	or     esi,DWORD PTR [edx-0x2710d834]
  44e684:	sbb    dh,BYTE PTR [edi+ebp*8]
  44e687:	dec    ebp
  44e688:	mov    bh,BYTE PTR [edi-0x67f54e75]
  44e68e:	sbb    al,0xd1
  44e690:	outs   dx,BYTE PTR ds:[esi]
  44e691:	cmp    al,BYTE PTR [ebx]
  44e693:	cwde   
  44e694:	rcl    ecx,cl
  44e696:	cmp    edi,DWORD PTR ds:0xf16fc78a
  44e69c:	rcr    eax,cl
  44e69e:	cmp    ebp,DWORD PTR ds:0xe86ed37a
  44e6a4:	pop    ds
  44e6a5:	not    dl
  44e6a7:	add    al,dl
  44e6a9:	pushf  
  44e6aa:	dec    eax
  44e6ab:	jne    0x44e6f1
  44e6ad:	into   
  44e6ae:	int    0xf7
  44e6b0:	repz pop ecx
  44e6b2:	int    0x0
  44e6b4:	push   eax
  44e6b5:	jae    0x44e70f
  44e6b7:	ret    0xd73b
  44e6ba:	jge    0x44e6bb
  44e6bc:	mul    BYTE PTR [ecx-0x1607e15]
  44e6c2:	repz dec DWORD PTR [ebx]
  44e6c5:	mov    edx,0xd6c75747
  44e6ca:	jg     0x44e6d9
	...
  44e6e0:	mov    edi,0x8200436d
  44e6e5:	sub    edi,DWORD PTR [edi]
  44e6e7:	push   edi
  44e6e8:	(bad)  
  44e6e9:	(bad)  
  44e6ea:	jg     0x44e709
  44e6ec:	(bad)  
  44e6ed:	ins    DWORD PTR es:[edi],dx
  44e6ee:	inc    ebx
  44e6ef:	add    BYTE PTR [edx+0xb],dh
  44e6f2:	aaa    
  44e6f3:	push   edi
  44e6f4:	mov    bh,0xd6
  44e6f6:	jg     0x44e735
  44e6f8:	scas   eax,DWORD PTR es:[edi]
  44e6f9:	ins    DWORD PTR es:[edi],dx
  44e6fa:	inc    ebx
  44e6fb:	add    ch,ah
  44e6fd:	mov    ds:0x1af46812,al
  44e702:	mul    DWORD PTR [ebp+0x3f]
  44e705:	and    ebx,DWORD PTR [ebx+0x57]
  44e708:	pop    es
  44e709:	xlat   BYTE PTR ds:[ebx]
  44e70a:	bound  ecx,QWORD PTR [esi+ebx*2-0x44bbafeb]
  44e711:	js     0x44e69e
  44e713:	add    eax,0x436647
  44e718:	and    eax,0x743022a1
  44e71d:	sbb    edi,esi
  44e71f:	gs (bad) 
  44e721:	jmp    FWORD PTR [edx]
  44e723:	push   edi
  44e724:	aaa    
  44e725:	fst    QWORD PTR [edi+ecx*4+0x44507686]
  44e72c:	mov    esp,DWORD PTR [ebx+0x69180042]
  44e732:	push   eax
  44e733:	inc    esp
  44e734:	bound  esi,QWORD PTR [eax]
  44e736:	jbe    0x44e77a
  44e738:	data16 (bad) 
  44e73a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44e73b:	push   eax
  44e73c:	sahf   
  44e73d:	xor    BYTE PTR [eax+0x42],bh
  44e740:	pop    edx
  44e741:	(bad)  
  44e742:	mov    al,ds:0x50
	...
  44e757:	add    BYTE PTR [esi+0x42827630],bl
  44e75d:	mov    ah,0xb
  44e75f:	clc    
  44e760:	sbb    eax,0xa6516335
  44e765:	xor    ah,bh
  44e767:	jmp    DWORD PTR [ebx+0x30]
  44e76a:	pop    esp
  44e76b:	push   edi
  44e76c:	mov    ch,0x7c
  44e76e:	add    ebx,DWORD PTR [ebp-0x48bd4a]
  44e774:	and    al,0x3d
  44e776:	mov    bl,0x51
  44e778:	sahf   
  44e779:	xor    ah,dh
  44e77b:	add    esp,DWORD PTR [edx-0x10]
  44e77e:	inc    ebx
  44e77f:	add    cl,BYTE PTR [esi+0x62ffb762]
  44e785:	xor    BYTE PTR [ebx],al
  44e787:	add    bl,al
  44e789:	jae    0x44e73e
  44e78b:	inc    ebx
  44e78c:	bound  edi,QWORD PTR [ecx-0x2529287f]
  44e792:	or     ebx,DWORD PTR [esi-0x48bfe6]
  44e798:	fidiv  DWORD PTR [eax+ebp*1-0x6acd4205]
  44e79f:	push   DWORD PTR [esp+0x30220de7]
  44e7a6:	fwait
  44e7a7:	xor    edx,DWORD PTR [eax+esi*8]
  44e7aa:	cld    
  44e7ab:	clc    
  44e7ac:	ja     0x44e7d6
  44e7ae:	in     eax,dx
  44e7af:	aas    
  44e7b0:	bound  ecx,QWORD PTR [eax+0x706203f5]
  44e7b6:	or     dl,BYTE PTR [edx]
  44e7b8:	add    BYTE PTR [eax],0xc3
  44e7bb:	inc    DWORD PTR [eax]
	...
  44e7cd:	add    BYTE PTR [eax],al
  44e7cf:	add    BYTE PTR ds:0x53c3f073,ch
  44e7d5:	fldcw  WORD PTR [ecx]
  44e7d7:	add    al,0xa5
  44e7d9:	adc    eax,0x149937a5
  44e7de:	aaa    
  44e7df:	jg     0x44e782
  44e7e1:	cmc    
  44e7e2:	in     eax,dx
  44e7e3:	(bad)  
  44e7e4:	adc    eax,0x997ed1a7
  44e7e9:	cmc    
  44e7ea:	fnstcw WORD PTR [esi-0x5f]
  44e7ed:	cmc    
  44e7ee:	fst    st(6)
  44e7f0:	das    
  44e7f1:	sub    DWORD PTR [eax+0x7e],edi
  44e7f4:	or     eax,0x65dfa555
  44e7f9:	sub    BYTE PTR [eax+0x7e],bl
  44e7fc:	xor    eax,0x81122a55
  44e801:	cmc    
  44e802:	stc    
  44e803:	jle    0x44e822
  44e805:	push   ebp
  44e806:	daa    
  44e807:	adc    al,BYTE PTR [ecx+0x1506d9f5]
  44e80d:	xor    eax,0x55257ea6
  44e812:	test   edi,ebx
  44e814:	gs push esp
  44e816:	mov    ch,0xdf
  44e818:	pop    ecx
  44e819:	push   esp
  44e81a:	popf   
  44e81b:	fistp  WORD PTR [ebp+0xa]
  44e81e:	add    BYTE PTR [esi+esi*4],dh
  44e821:	or     al,BYTE PTR [ebx]
  44e823:	xor    al,0xad
  44e825:	aam    0x30
  44e827:	nop
  44e828:	shr    DWORD PTR [eax],1
  44e82a:	cli    
  44e82b:	jge    0x44e7e2
  44e82d:	sub    BYTE PTR [ebp+0x215451df],al
  44e833:	jle    0x44e835
	...
  44e845:	add    BYTE PTR [eax],al
  44e847:	add    BYTE PTR [ecx],ah
  44e849:	cmc    
  44e84a:	stc    
  44e84b:	adc    bl,al
  44e84d:	fdivr  QWORD PTR [eax+0x35e45b96]
  44e853:	loopne 0x44e8be
  44e855:	test   al,0xe1
  44e857:	xchg   ebp,eax
  44e858:	push   0xffffffe4
  44e85a:	and    eax,0xf0a765e0
  44e85f:	mov    ecx,0xd00953e
  44e864:	jbe    0x44e82b
  44e866:	dec    esp
  44e867:	add    eax,0xd2dbed72
  44e86c:	lods   eax,DWORD PTR ds:[esi]
  44e86d:	cld    
  44e86e:	or     BYTE PTR [edx],al
  44e870:	mov    dl,0xfc
  44e872:	add    al,0x9e
  44e874:	mov    WORD PTR [ecx],gs
  44e876:	fsubr  DWORD PTR [edx-0x7c]
  44e879:	and    BYTE PTR [edx-0x74f2304d],cl
  44e87f:	mov    al,ds:0xaf8b18c7
  44e884:	or     BYTE PTR [esi+0x10],bl
  44e887:	jmp    0xbb08fcf9
  44e88c:	lock fs push eax
  44e88f:	mov    ecx,0xe2ea1fe5
  44e894:	(bad)  
  44e895:	mov    ?,WORD PTR [ebx+0x9bd1b9]
  44e89b:	jb     0x44e867
  44e89d:	sti    
  44e89e:	add    al,0x70
  44e8a0:	(bad)  
  44e8a1:	xlat   BYTE PTR ds:[ebx]
  44e8a2:	mov    DWORD PTR [edx-0x2294a903],ebp
  44e8a8:	les    ecx,FWORD PTR [esi+0xc150]
	...
  44e8be:	add    BYTE PTR [eax],al
  44e8c0:	mov    eax,0x9fc25982
  44e8c5:	fadd   QWORD PTR [eax]
  44e8c7:	push   ss
  44e8c8:	xchg   esi,eax
  44e8c9:	pop    ebp
  44e8ca:	les    ebx,FWORD PTR ds:0x35c4149a
  44e8d0:	mov    dl,BYTE PTR [esp+eax*8]
  44e8d3:	sub    eax,0x62c4148a
  44e8d8:	imul   ecx,DWORD PTR [ebx-0x6cc90275],0x8
  44e8df:	mov    eax,ds:0xe90085f4
  44e8e4:	add    esp,edi
  44e8e6:	add    DWORD PTR [ebp+0x62],ebx
  44e8e9:	out    dx,al
  44e8ea:	shr    BYTE PTR [edi+ebx*1],0x55
  44e8ee:	inc    ecx
  44e8ef:	add    BYTE PTR [edi-0x2a],ah
  44e8f2:	mov    bh,0x81
  44e8f4:	arpl   WORD PTR [ebp+0x42],sp
  44e8f7:	add    BYTE PTR [ebx-0x26cc17b2],cl
  44e8fd:	xchg   edx,eax
  44e8fe:	cld    
  44e8ff:	add    BYTE PTR [ebx-0x25],bh
  44e902:	bound  edi,QWORD PTR [ecx]
  44e904:	xor    ebp,DWORD PTR ds:0x9e099408
  44e90a:	mov    ch,0x5d
  44e90c:	or     bh,ah
  44e90e:	retf   
  44e90f:	int3   
  44e910:	pop    ss
  44e911:	out    0xcb,eax
  44e913:	int3   
  44e914:	mul    esi
  44e916:	retf   
  44e917:	int3   
  44e918:	rcl    cl,0x52
  44e91b:	mov    esi,DWORD PTR [edi-0x4ff7bd63]
  44e921:	bound  edi,QWORD PTR [ebx]
  44e923:	add    eax,DWORD PTR [eax]
	...
  44e935:	add    BYTE PTR [eax],al
  44e937:	add    BYTE PTR [ebx+0x21],dh
  44e93a:	mov    al,0x41
  44e93c:	pop    ds
  44e93d:	push   cx
  44e93f:	paddsb mm1,QWORD PTR [ebx+0x1]
  44e943:	xor    ebp,DWORD PTR [ecx+0x69]
  44e946:	mov    al,BYTE PTR [ebx+edx*1+0x33]
  44e94a:	xor    dh,0xbd
  44e94d:	sub    eax,0x9e177d7c
  44e952:	aas    
  44e953:	or     al,0x0
  44e955:	aam    0x65
  44e957:	or     DWORD PTR [eax+0x72],esi
  44e95a:	inc    DWORD PTR [edx]
  44e95c:	xchg   edx,eax
  44e95d:	or     eax,0x14c172ec
  44e962:	je     0x44e924
  44e964:	mov    bl,0xd
  44e966:	shl    DWORD PTR [edx+0x73],1
  44e969:	add    eax,0x6dd55fb7
  44e96e:	pop    edx
  44e96f:	ret    
  44e970:	loope  0x44e994
  44e972:	pop    edi
  44e973:	cmp    BYTE PTR [ebx+0x2fe7f75e],dh
  44e979:	aad    0x0
  44e97b:	add    BYTE PTR [edx-0x4d],ah
  44e97e:	mov    eax,ds:0xfc4e62fb
  44e983:	jmp    DWORD PTR [edx]
  44e985:	xor    BYTE PTR [ebp-0xa0fc19],ah
  44e98b:	neg    DWORD PTR [ebx]
  44e98d:	lods   eax,DWORD PTR ds:[esi]
  44e98e:	cmp    al,0x73
  44e990:	aaa    
  44e991:	mov    ebx,0x6e3907c1
  44e996:	lods   al,BYTE PTR ds:[esi]
  44e997:	push   ecx
  44e998:	jp     0x44e93a
  44e99a:	push   edi
	...
  44e9b0:	pop    ebp
  44e9b1:	jmp    0xc4676c5b
  44e9b6:	fild   DWORD PTR [edx+eiz*4+0x65e73c0c]
  44e9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44e9be:	sub    al,0x7c
  44e9c0:	inc    edx
  44e9c1:	xor    DWORD PTR [esi],esi
  44e9c3:	inc    edx
  44e9c4:	ss scas al,BYTE PTR es:[edi]
  44e9c6:	push   edi
  44e9c8:	sub    eax,0x9f84dc8b
  44e9cd:	mov    WORD PTR [ebx-0x1],?
  44e9d0:	call   0x580bbc04
  44e9d5:	xor    eax,0x27220003
  44e9da:	addr16 mov esi,0x8443f0d9
  44e9e0:	xchg   DWORD PTR [eax-0x1209bdc9],ebx
  44e9e6:	push   edi
  44e9e8:	in     eax,dx
  44e9e9:	add    al,BYTE PTR [ebx-0x19]
  44e9ec:	push   0xa1000330
  44e9f1:	mov    edx,0xbb6a23c0
  44e9f6:	mov    eax,0x3b2b7223
  44e9fb:	test   BYTE PTR [esi],dl
  44e9fd:	adc    al,0xef
  44e9ff:	jb     0x44ea6c
  44ea01:	mov    ebx,0x275e23c0
  44ea06:	sbb    al,0xbd
  44ea08:	push   edx
  44ea09:	fldl2t 
  44ea0b:	mov    dl,0xb2
  44ea0d:	aaa    
  44ea0e:	jb     0x44ea3b
  44ea10:	out    0x94,al
  44ea12:	add    eax,0xfc
	...
  44ea27:	add    BYTE PTR [edx-0x7110024c],dl
  44ea2d:	add    eax,0xd141bf72
  44ea32:	scas   al,BYTE PTR es:[edi]
  44ea33:	and    al,0x7e
  44ea35:	or     dl,BYTE PTR [edx]
  44ea37:	inc    edx
  44ea38:	fld    DWORD PTR gs:[ecx-0x7]
  44ea3c:	bound  edx,QWORD PTR [ebp-0x1c956017]
  44ea42:	jmp    0x631e4c4a
  44ea47:	mov    edi,0x9760c981
  44ea4c:	or     ecx,0xc981976c
  44ea52:	shl    BYTE PTR [ebx],cl
  44ea54:	scas   al,BYTE PTR es:[edi]
  44ea55:	adc    DWORD PTR [esi],0x65
  44ea58:	mov    eax,ds:0x7d041d89
  44ea5d:	xchg   esi,eax
  44ea5e:	pop    ebp
  44ea5f:	shl    BYTE PTR [eax],cl
  44ea61:	mov    dh,BYTE PTR [eax-0x60]
  44ea64:	add    eax,0xde0bd41d
  44ea69:	xchg   esi,eax
  44ea6a:	inc    ebp
  44ea6b:	mov    al,ds:0xa063f1d
  44ea71:	sbb    eax,0x4ef5c070
  44ea76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44ea77:	adc    eax,DWORD PTR [ecx+0x6203e978]
  44ea7d:	fldcw  WORD PTR [edx]
  44ea7f:	jp     0x44ea19
  44ea81:	sub    DWORD PTR [ebp+0x7c],edi
  44ea84:	push   0x6203e9d9
  44ea89:	and    BYTE PTR [esi+0xa6],0x0
	...
  44eaa0:	sub    eax,DWORD PTR [eax-0x75d7df8e]
  44eaa6:	sub    bh,BYTE PTR [edx-0x46]
  44eaa9:	xchg   BYTE PTR [eax],al
  44eaab:	bound  ecx,QWORD PTR [ebp+0x21]
  44eaae:	ins    DWORD PTR es:[edi],dx
  44eaaf:	aad    0x64
  44eab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44eab2:	adc    dh,ah
  44eab4:	aad    0xd0
  44eab6:	not    DWORD PTR [esi+ebx*4-0x4c]
  44eaba:	rcl    dl,1
  44eabc:	mov    ds:0xd6255f1c,eax
  44eac1:	cwde   
  44eac2:	add    cl,dl
  44eac4:	repz idiv DWORD PTR es:[esi+0x141818e3]
  44eacc:	and    esp,DWORD PTR [ecx]
  44eace:	sbb    eax,0xdc7c65
  44ead3:	jb     0x44eaf5
  44ead5:	pop    ebp
  44ead6:	nop
  44ead7:	adc    DWORD PTR [edx],edi
  44ead9:	aam    0x3c
  44eadb:	jmp    0xe94525d5
  44eae0:	popa   
  44eae1:	fst    DWORD PTR [eax+0x72]
  44eae4:	and    bh,al
  44eae6:	adc    BYTE PTR [eax-0x26],dh
  44eae9:	not    DWORD PTR [eax]
  44eaeb:	fs (bad) 
  44eaee:	adc    dl,al
  44eaf0:	or     DWORD PTR [ebp-0x685541b2],0x33fd70f8
  44eafa:	push   eax
  44eafb:	(bad)  
  44eafc:	aad    0x1f
  44eafe:	mov    edi,0xf72165a4
  44eb03:	inc    esi
	...
  44eb18:	pop    edi
  44eb19:	push   ebx
  44eb1a:	cmp    eax,0xf0977541
  44eb1f:	int    0x82
  44eb21:	sbb    al,0xf7
  44eb23:	jmp    0xb4d04989
  44eb28:	push   ecx
  44eb29:	mov    eax,0xd961ec89
  44eb2e:	add    cl,ch
  44eb30:	or     BYTE PTR [ecx-0x74774daa],al
  44eb36:	ret    
  44eb37:	add    BYTE PTR [edi-0x7033341f],cl
  44eb3d:	loope  0x44eb0a
  44eb3f:	int3   
  44eb40:	fsubr  DWORD PTR [ebp+0x7c]
  44eb43:	inc    esp
  44eb44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44eb45:	das    
  44eb46:	cld    
  44eb47:	mov    edi,0x4c7c2d06
  44eb4c:	sub    DWORD PTR [si+0x44],edi
  44eb50:	addr16 and eax,0xc6b4d224
  44eb56:	jl     0x44eb30
  44eb58:	adc    BYTE PTR [ebx+eiz*1+0xc],bl
  44eb5c:	mov    ah,0xc6
  44eb5e:	jl     0x44eb33
  44eb60:	mov    al,ds:0xc87c16
  44eb65:	je     0x44eb8a
  44eb67:	adc    al,0xf0
  44eb69:	imul   esp,DWORD PTR [ebx],0x10
  44eb6c:	rcr    BYTE PTR [edx+0x23],1
  44eb6f:	or     al,0x1a
  44eb71:	rol    dh,0xdb
  44eb74:	or     al,cl
  44eb76:	(bad)  
  44eb77:	fcom   DWORD PTR [eax-0x20]
  44eb7a:	jb     0x44eb70
	...
  44eb90:	mov    ah,0xc9
  44eb92:	jl     0x44eb84
  44eb94:	mov    ah,0x3a
  44eb96:	and    ebx,DWORD PTR [eax]
  44eb98:	rcr    dh,0x7c
  44eb9b:	inc    esp
  44eb9c:	push   edi
  44eb9d:	sub    eax,esi
  44eb9f:	out    0x8,al
  44eba1:	call   0x69b4fa0b
  44eba6:	and    edx,DWORD PTR [eax]
  44eba8:	xor    al,0x1f
  44ebaa:	gs pop es
  44ebac:	pusha  
  44ebad:	sbb    DWORD PTR [ebx],esp
  44ebaf:	or     al,0xb5
  44ebb1:	xlat   BYTE PTR ds:[ebx]
  44ebb2:	dec    edx
  44ebb3:	xor    ebx,DWORD PTR [ecx-0x5f]
  44ebb6:	rcr    DWORD PTR [esi-0x30],0x98
  44ebba:	pop    es
  44ebbb:	add    BYTE PTR [edi],ch
  44ebbd:	loop   0x44eb8a
  44ebbf:	int3   
  44ebc0:	(bad)  
  44ebc1:	loop   0x44eb8e
  44ebc3:	int3   
  44ebc4:	bound  esp,QWORD PTR [ecx+0x6e]
  44ebc7:	dec    ebx
  44ebc8:	xchg   BYTE PTR [eax+ebx*8],dh
  44ebcb:	(bad)  
  44ebcc:	imul   esi,eax,0xe881cf04
  44ebd2:	js     0x44eb97
  44ebd4:	jg     0x44ec06
  44ebd6:	adc    edi,eax
  44ebd8:	lods   eax,DWORD PTR ds:[esi]
  44ebd9:	cmp    ebp,DWORD PTR [di+0x58]
  44ebdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ebde:	mov    ebp,0xfca7f659
  44ebe3:	mov    BYTE PTR [esi-0x34],bl
  44ebe6:	mov    edi,0x3206225
  44ebeb:	add    bh,bl
  44ebed:	xor    dh,ah
  44ebef:	jmp    0x486e47a2
	...
  44ec08:	dec    esp
  44ec09:	lock cld 
  44ec0b:	ret    
  44ec0c:	sahf   
  44ec0d:	cmp    al,0xd0
  44ec0f:	les    edx,FWORD PTR [esi+0x5df80372]
  44ec15:	xor    BYTE PTR [ebx],al
  44ec17:	add    BYTE PTR [edx+0x68],ah
  44ec1a:	add    edi,eax
  44ec1c:	dec    ebp
  44ec1d:	xor    BYTE PTR [ebx],al
  44ec1f:	add    BYTE PTR [edx+0x52],ah
  44ec22:	add    edi,eax
  44ec24:	cmp    eax,0x623c0af6
  44ec29:	ror    BYTE PTR [edx],cl
  44ec2b:	cmp    al,0x62
  44ec2d:	xor    BYTE PTR [ebx],al
  44ec2f:	add    BYTE PTR [edx-0x4d],ah
  44ec32:	add    edi,eax
  44ec34:	sbb    eax,0x624108c9
  44ec39:	aad    0x8
  44ec3b:	inc    ecx
  44ec3c:	bound  esi,QWORD PTR [eax]
  44ec3e:	add    eax,DWORD PTR [eax]
  44ec40:	bound  edx,QWORD PTR [ebx-0x420207fd]
  44ec46:	inc    BYTE PTR [eax+0x62]
  44ec49:	mov    edx,0x306240fe
  44ec4e:	add    eax,DWORD PTR [eax]
  44ec50:	(bad)  
  44ec51:	fstp   DWORD PTR [esi]
  44ec53:	add    ebx,edx
  44ec55:	sbb    DWORD PTR [edx],ebx
  44ec57:	sbb    esp,DWORD PTR [ebx]
  44ec59:	fst    DWORD PTR [esi]
  44ec5b:	sbb    esp,DWORD PTR [ebx]
  44ec5d:	fldl2t 
  44ec5f:	add    esp,DWORD PTR [edx-0x27]
  44ec62:	inc    BYTE PTR [edx]
  44ec64:	mov    edx,0x231a6e19
  44ec69:	fnstenv [edx+0x1a]
	...
  44ec80:	and    ebx,ecx
  44ec82:	jmp    0xdf1e4e8a
  44ec87:	add    bl,BYTE PTR [edx+0x2319a619]
  44ec8d:	fnstcw WORD PTR [edx-0x1626dce7]
  44ec93:	add    esp,DWORD PTR [edx-0x27]
  44ec96:	mov    esi,0xdb197a02
  44ec9b:	sbb    DWORD PTR [ebx],esp
  44ec9d:	(bad)  
  44ec9f:	sbb    DWORD PTR [ebx],esp
  44eca1:	fldl2t 
  44eca3:	add    esp,DWORD PTR [edx-0x27]
  44eca6:	sahf   
  44eca7:	add    bl,BYTE PTR [edx+0x19]
  44ecaa:	sub    ebx,DWORD PTR [ecx]
  44ecac:	mov    ds:0xa31927d9,eax
  44ecb1:	fldl2t 
  44ecb3:	add    esp,DWORD PTR [edx-0x27]
  44ecb6:	jle    0x44ecba
  44ecb8:	cmp    bl,BYTE PTR [ecx]
  44ecba:	out    dx,al
  44ecbb:	xchg   esi,eax
  44ecbc:	mov    ds:0xa396f2d9,eax
  44ecc1:	fldl2t 
  44ecc3:	add    esp,DWORD PTR [edx-0x27]
  44ecc6:	pop    esi
  44ecc7:	add    bl,BYTE PTR [edx]
  44ecc9:	sbb    DWORD PTR [edi],eax
  44eccb:	aad    0xa3
  44eccd:	fstp   DWORD PTR [ebx]
  44eccf:	aad    0xa3
  44ecd1:	fldl2t 
  44ecd3:	add    esp,DWORD PTR [edx-0x27]
  44ecd6:	ds add bh,dl
  44ecd9:	sbb    al,dh
  44ecdb:	enter  0xd9a0,0x0
  44ecdf:	in     al,0x1a
  44ece1:	pushf  
  44ece2:	add    cl,ch
	...
  44ecf8:	popa   
  44ecf9:	fld    DWORD PTR [eax]
  44ecfb:	es pusha 
  44ecfd:	adc    edi,esi
  44ecff:	sbb    al,0x82
  44ed01:	pushf  
  44ed02:	add    al,ch
  44ed04:	sbb    DWORD PTR [eax+eax*1+0xd961e9],0x6
  44ed0c:	pusha  
  44ed0d:	adc    edi,esi
  44ed0f:	fst    QWORD PTR [esi]
  44ed11:	pushf  
  44ed12:	add    cl,cl
  44ed14:	push   cs
  44ed15:	pushf  
  44ed16:	add    cl,ch
  44ed18:	popa   
  44ed19:	fld    DWORD PTR [eax]
  44ed1b:	out    0x63,al
  44ed1d:	adc    edi,esi
  44ed1f:	adc    bh,BYTE PTR [ebx]
  44ed21:	pushf  
  44ed22:	add    BYTE PTR [esi],al
  44ed24:	sub    ebx,DWORD PTR [eax+eax*1+0xd961e9]
  44ed2b:	(bad)  
  44ed2c:	arpl   WORD PTR [ecx],dx
  44ed2e:	mul    DWORD PTR [ecx-0x6aff63ea]
  44ed34:	push   cs
  44ed35:	pushf  
  44ed36:	add    cl,ch
  44ed38:	popa   
  44ed39:	fld    DWORD PTR [eax]
  44ed3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44ed3c:	arpl   WORD PTR [ecx],dx
  44ed3e:	test   DWORD PTR [edi-0x4a],0xae43009c
  44ed45:	pushf  
  44ed46:	add    cl,ch
  44ed48:	popa   
  44ed49:	fld    DWORD PTR [eax]
  44ed4b:	xchg   BYTE PTR [ebx+0x11],ah
  44ed4e:	imul   DWORD PTR [ebx+ebx*4-0x7467ff64]
  44ed55:	pushf  
  44ed56:	add    cl,ch
  44ed58:	popa   
  44ed59:	fld    DWORD PTR [eax]
  44ed5b:	data16 add BYTE PTR [eax],al
	...
  44ed6e:	add    BYTE PTR [eax],al
  44ed70:	arpl   WORD PTR [ecx],dx
  44ed72:	div    DWORD PTR [edx-0x45]
  44ed75:	pushf  
  44ed76:	add    BYTE PTR [esi-0x55],ah
  44ed79:	pushf  
  44ed7a:	add    cl,ch
  44ed7c:	popa   
  44ed7d:	fld    DWORD PTR [eax]
  44ed7f:	add    BYTE PTR [edx+ebx*8-0x4f3f0008],ah
  44ed86:	inc    ebx
  44ed87:	add    ah,dl
  44ed89:	mov    al,0x43
  44ed8b:	add    bl,bh
  44ed8d:	fild   DWORD PTR [eax]
  44ed8f:	add    BYTE PTR [edx+ebx*8-0x4c9b0008],al
  44ed96:	inc    ebx
  44ed97:	add    BYTE PTR [eax-0x4d],ch
  44ed9a:	inc    ebx
  44ed9b:	add    BYTE PTR [ebx-0x34ffff25],bh
  44eda1:	fild   DWORD PTR [eax]
  44eda3:	add    bl,cl
  44eda5:	fild   DWORD PTR [eax]
  44eda7:	add    dh,cl
  44eda9:	pop    esp
  44edaa:	fsub   QWORD PTR [edi]
  44edac:	inc    edx
  44edad:	add    BYTE PTR [ecx+0x52],dl
  44edb0:	pop    ebp
  44edb1:	add    eax,0xdb8b1080
  44edb6:	pusha  
  44edb7:	adc    DWORD PTR [ebx-0x25],edi
  44edba:	dec    esp
  44edbb:	adc    DWORD PTR [ebx-0x25],edi
  44edbe:	pop    eax
  44edbf:	adc    DWORD PTR [ebx-0x74eebb25],ecx
  44edc5:	fist   DWORD PTR [ecx+edx*1+0x7b]
  44edc9:	fisttp DWORD PTR [ecx+edx*1+0x1188db7b]
  44edd0:	dec    ebx
  44edd1:	(bad)  [ecx+edx*1+0x0]
	...
  44ede5:	add    BYTE PTR [eax],al
  44ede7:	add    BYTE PTR [ebx-0x25],cl
  44edea:	inc    eax
  44edeb:	adc    DWORD PTR [ebx],edi
  44eded:	fld    TBYTE PTR [ecx+edx*1]
  44edf0:	cmp    ebx,ebx
  44edf2:	cmp    BYTE PTR [ecx],dl
  44edf4:	dec    ebx
  44edf5:	(bad)  [ecx+edx*1]
  44edf8:	dec    ebx
  44edf9:	(bad)  [ecx+edx*1]
  44edfc:	cmp    ebx,ebx
  44edfe:	ins    BYTE PTR es:[edi],dx
  44edff:	adc    DWORD PTR [ebx],edi
  44ee01:	fld    TBYTE PTR [eax+0x11]
  44ee04:	or     ebx,ebx
  44ee06:	cmp    DWORD PTR [edx],ebx
  44ee08:	or     ebx,ebx
  44ee0a:	and    BYTE PTR [ecx],dl
  44ee0c:	bound  eax,QWORD PTR [eax]
  44ee0e:	add    edx,DWORD PTR [ebx+esi*2]
  44ee11:	add    BYTE PTR [ebx],al
  44ee13:	sbb    BYTE PTR [ebx+0x0],dl
  44ee16:	add    ecx,DWORD PTR [ebx+edx*2]
  44ee19:	add    BYTE PTR [ebx],al
  44ee1b:	sbb    al,0x53
  44ee1d:	add    BYTE PTR [ebx],al
  44ee1f:	push   esp
  44ee20:	push   ebx
  44ee21:	add    BYTE PTR [ebx],al
  44ee23:	dec    eax
  44ee24:	jae    0x44ee26
  44ee26:	add    edi,DWORD PTR [ebx+esi*2]
  44ee29:	add    BYTE PTR [ebx],al
  44ee2b:	add    BYTE PTR [ebx+0x0],dh
  44ee2e:	add    esi,esp
  44ee30:	jb     0x44ee32
  44ee32:	add    edi,eax
  44ee34:	push   edx
  44ee35:	add    BYTE PTR [ebx],al
  44ee37:	in     al,dx
  44ee38:	push   edx
  44ee39:	add    BYTE PTR [ebx],al
  44ee3b:	cld    
  44ee3c:	push   edx
  44ee3d:	add    BYTE PTR [ebx],al
  44ee3f:	xor    al,0x53
  44ee41:	add    BYTE PTR [ebx],al
  44ee43:	sub    BYTE PTR [ebx+0x0],dh
  44ee46:	add    ebx,DWORD PTR [ebx+esi*2]
  44ee49:	add    BYTE PTR [ebx],al
  44ee4b:	loopne 0x44ee4d
	...
  44ee5d:	add    BYTE PTR [eax],al
  44ee5f:	add    BYTE PTR [edx+0x0],dh
  44ee62:	add    edx,esp
  44ee64:	jb     0x44ee66
  44ee66:	add    ebx,eax
  44ee68:	push   edx
  44ee69:	add    BYTE PTR [ebx],al
  44ee6b:	int3   
  44ee6c:	push   edx
  44ee6d:	add    BYTE PTR [ebx],al
  44ee6f:	fcom   QWORD PTR [edx+0x0]
  44ee72:	add    edx,DWORD PTR [ebx+edx*2]
  44ee75:	add    BYTE PTR [ebx],al
  44ee77:	sahf   
  44ee78:	jae    0x44ee7a
  44ee7a:	add    edi,esp
  44ee7c:	jb     0x44ee7e
  44ee7e:	add    eax,eax
  44ee80:	jb     0x44ee82
  44ee82:	add    esi,DWORD PTR [edx+esi*2+0x52b80300]
  44ee89:	add    BYTE PTR [ebx],al
  44ee8b:	lods   al,BYTE PTR ds:[esi]
  44ee8c:	push   edx
  44ee8d:	add    BYTE PTR [ebx],al
  44ee8f:	mov    esp,0xf4030052
  44ee94:	push   edx
  44ee95:	add    BYTE PTR [ebx],al
  44ee97:	jle    0x44ef0c
  44ee99:	fldl2t 
  44ee9b:	add    esi,DWORD PTR [esi]
  44ee9d:	jmp    0xe906f28b
  44eea2:	jmp    0xea2ddcaa
  44eea7:	add    ebx,edx
  44eea9:	call   0xe92af297
  44eeae:	jmp    0xea2dbcb6
  44eeb3:	add    ecx,DWORD PTR [esi]
  44eeb5:	jmp    0xe880f2a3
  44eeba:	jmp    0xea2e04c2
  44eebf:	add    esp,edx
  44eec1:	call   0x44f2af
	...
  44eed6:	add    BYTE PTR [eax],al
  44eed8:	dec    esi
  44eed9:	jmp    0xe97ef2c7
  44eede:	jmp    0xea2e34e6
  44eee3:	add    ebp,DWORD PTR [esi]
  44eee5:	jmp    0xe932f2d3
  44eeea:	jmp    0xea2d4af2
  44eeef:	add    esi,esi
  44eef1:	call   0xe8b6f2df
  44eef6:	jmp    0xea2d4cfe
  44eefb:	add    ebp,DWORD PTR [edx-0x18]
  44eefe:	jmp    0xea2d6506
  44ef03:	add    esp,DWORD PTR [edx-0x18]
  44ef06:	jmp    0xea2d5d0e
  44ef0b:	add    ebx,DWORD PTR [edx-0x16]
  44ef0e:	jmp    0xea2f3516
  44ef13:	add    ecx,DWORD PTR [esi]
  44ef15:	jmp    0x3e9:0xea2203e9
  44ef1c:	imul   cl
  44ef1e:	jmp    0xea2ee926
  44ef23:	add    edi,esi
  44ef25:	jmp    0x49a6d82a
  44ef2a:	adc    cl,ch
  44ef2c:	popa   
  44ef2d:	cmp    eax,0x4161e910
  44ef32:	adc    cl,ch
  44ef34:	popa   
  44ef35:	leave  
  44ef36:	adc    cl,ch
  44ef38:	popa   
  44ef39:	mov    ebp,0xe910
	...
  44ef4e:	add    BYTE PTR [eax],al
  44ef50:	popa   
  44ef51:	rcl    DWORD PTR [eax],0xe9
  44ef54:	popa   
  44ef55:	cmc    
  44ef56:	adc    cl,ch
  44ef58:	popa   
  44ef59:	mov    ecx,0xed61e910
  44ef5e:	adc    cl,ch
  44ef60:	popa   
  44ef61:	icebp  
  44ef62:	adc    cl,ch
  44ef64:	popa   
  44ef65:	in     eax,0x10
  44ef67:	jmp    0xe955d8cd
  44ef6c:	popa   
  44ef6d:	fst    QWORD PTR [eax]
  44ef6f:	jmp    0xe955d0d5
  44ef74:	popa   
  44ef75:	adc    eax,0xd961e907
  44ef7a:	adc    cl,ch
  44ef7c:	popa   
  44ef7d:	or     eax,0x1161e907
  44ef82:	pop    es
  44ef83:	jmp    0xe94bf4e9
  44ef88:	popa   
  44ef89:	or     DWORD PTR [edi],eax
  44ef8b:	jmp    0xe94becf1
  44ef90:	popa   
  44ef91:	fist   DWORD PTR [ecx]
  44ef93:	jmp    0xe94c14f9
  44ef98:	popa   
  44ef99:	cmp    edx,DWORD PTR [eax]
  44ef9b:	jmp    0xe9552f01
  44efa0:	popa   
  44efa1:	dec    esp
  44efa2:	psubsw mm4,QWORD PTR [ecx-0x3]
  44efa6:	push   cs
  44efa7:	jmp    0xe957ca0d
  44efac:	popa   
  44efad:	jne    0x44efc0
  44efaf:	jmp    0x4c0d15
	...
  44efc8:	dec    ebx
  44efc9:	fcomp  DWORD PTR [edi]
  44efcb:	adc    BYTE PTR [ebx],bh
  44efcd:	fadd   st,st(0)
  44efcf:	(bad)  
  44efd1:	fsubr  DWORD PTR [edi+ecx*1+0xfb8d80b]
  44efd8:	or     ebx,eax
  44efda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44efdb:	psubq  mm2,mm7
  44efde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44efdf:	psubq  mm2,mm7
  44efe2:	mov    al,0xf
  44efe4:	or     ebx,eax
  44efe6:	pushf  
  44efe7:	ud2    
  44efe9:	fsubr  DWORD PTR [eax-0x6b2804f1]
  44efef:	psubq  mm2,mm7
  44eff2:	mov    al,ds:0x8cd7cb0f
  44eff7:	bswap  ebx
  44eff9:	xlat   BYTE PTR ds:[ebx]
  44effa:	cwde   
  44effb:	btc    edi,edx
  44effe:	test   BYTE PTR [edi],cl
  44f000:	mov    ebx,0xcb0f90d7
  44f005:	xlat   BYTE PTR ds:[ebx]
  44f006:	jl     0x44f017
  44f008:	retf   
  44f009:	xlat   BYTE PTR ds:[ebx]
  44f00a:	mov    BYTE PTR [edi],cl
  44f00c:	mov    ebx,0xbb0f74d7
  44f011:	xlat   BYTE PTR ds:[ebx]
  44f012:	or     BYTE PTR [edi],0x8b
  44f015:	xlat   BYTE PTR ds:[ebx]
  44f016:	ins    BYTE PTR es:[edi],dx
  44f017:	jnp    0x7b5468f4
  44f01d:	xlat   BYTE PTR ds:[ebx]
  44f01e:	fisttp DWORD PTR [edi]
  44f020:	jnp    0x44eff9
  44f022:	(bad)  
  44f023:	adc    DWORD PTR [ebx-0x74ee4329],ecx
  44f029:	xlat   BYTE PTR ds:[ebx]
  44f02a:	mov    edi,0xf
	...
  44f03f:	add    BYTE PTR [ebx-0x29],bh
  44f042:	push   eax
  44f043:	(bad)  
  44f045:	xlat   BYTE PTR ds:[ebx]
  44f046:	cmp    al,0xf
  44f048:	dec    ebx
  44f049:	xlat   BYTE PTR ds:[ebx]
  44f04a:	dec    eax
  44f04b:	cmovnp edx,edi
  44f04e:	xor    al,0xf
  44f050:	cmp    edx,edi
  44f052:	inc    eax
  44f053:	punpckldq mm0,DWORD PTR [eax]
  44f056:	add    esi,DWORD PTR [ebp*2+0x65380300]
  44f05d:	add    BYTE PTR [ebx],al
  44f05f:	sub    al,0x5d
  44f061:	add    BYTE PTR [ebx],al
  44f063:	xor    BYTE PTR [ebp+0x0],dl
  44f066:	add    esp,DWORD PTR [ebp*2+0x65280300]
  44f06d:	add    BYTE PTR [ebx],al
  44f06f:	inc    esi
  44f070:	jae    0x44f072
  44f072:	add    esi,DWORD PTR [eax]
  44f074:	push   ebp
  44f075:	add    BYTE PTR [ebx],al
  44f077:	and    al,0x6d
  44f079:	add    BYTE PTR [ebx],al
  44f07b:	sub    BYTE PTR [ebp+0x0],ah
  44f07e:	add    ebx,DWORD PTR [ebx*2+0x55200300]
  44f085:	add    BYTE PTR [ebx],al
  44f087:	adc    al,0x6d
  44f089:	add    BYTE PTR [ebx],al
  44f08b:	sbb    BYTE PTR [ebp+0x0],ah
  44f08e:	add    ecx,DWORD PTR [ebx*2+0x55100300]
  44f095:	add    BYTE PTR [ebx],al
  44f097:	add    al,0x6d
  44f099:	add    BYTE PTR [ebx],al
  44f09b:	ret    
  44f09c:	push   edx
  44f09d:	add    BYTE PTR [ebx],al
  44f09f:	cld    
  44f0a0:	pop    esp
  44f0a1:	add    BYTE PTR [ebx],al
	...
  44f0b7:	add    BYTE PTR [ebp+0x0],dl
  44f0ba:	add    esi,esp
  44f0bc:	ins    BYTE PTR es:[edi],dx
  44f0bd:	add    BYTE PTR [ebx],al
  44f0bf:	clc    
  44f0c0:	add    BYTE PTR fs:[ebx],al
  44f0c3:	in     al,dx
  44f0c4:	pop    esp
  44f0c5:	add    BYTE PTR [ebx],al
  44f0c7:	cmp    al,0x72
  44f0c9:	add    BYTE PTR [ebx],al
  44f0cb:	push   eax
  44f0cc:	push   edx
  44f0cd:	add    BYTE PTR [ebx],al
  44f0cf:	xor    al,0x52
  44f0d1:	add    BYTE PTR [ebx],al
  44f0d3:	dec    eax
  44f0d4:	push   edx
  44f0d5:	add    BYTE PTR [ebx],al
  44f0d7:	loopne 0x44f12d
  44f0d9:	add    BYTE PTR [ebx],al
  44f0db:	aam    0x6c
  44f0dd:	add    BYTE PTR [ebx],al
  44f0df:	fsub   DWORD PTR [ecx+ebx*8-0x17]
  44f0e3:	add    ebx,DWORD PTR [esi]
  44f0e5:	jecxz  0x44f0d0
  44f0e7:	add    edx,DWORD PTR [esi]
  44f0e9:	jecxz  0x44f0d4
  44f0eb:	add    esp,DWORD PTR [esi-0x1e]
  44f0ee:	jmp    0xea281af6
  44f0f3:	add    ebp,esi
  44f0f5:	loop   0x44f0e0
  44f0f7:	add    esp,DWORD PTR [edx]
  44f0f9:	jecxz  0x44f0e4
  44f0fb:	add    edx,esi
  44f0fd:	loop   0x44f0e8
  44f0ff:	add    ebx,edx
  44f101:	loop   0x44f0ec
  44f103:	add    edi,DWORD PTR [esi-0x49fc161e]
  44f109:	loop   0x44f0f4
  44f10b:	add    esi,DWORD PTR [edx-0x41fc161e]
  44f111:	loop   0x44f0fc
  44f113:	add    edi,DWORD PTR [edx-0x39fc161e]
  44f119:	loop   0x44f104
  44f11b:	add    eax,DWORD PTR [eax]
	...
  44f12d:	add    BYTE PTR [eax],al
  44f12f:	add    BYTE PTR [edx],al
  44f131:	jecxz  0x44f11c
  44f133:	add    ebp,esi
  44f135:	loop   0x44f120
  44f137:	add    ebp,edx
  44f139:	loop   0x44f124
  44f13b:	add    eax,edx
  44f13d:	loop   0x44f128
  44f13f:	add    edx,DWORD PTR [esi-0x65fc161e]
  44f145:	loop   0x44f130
  44f147:	add    ebx,DWORD PTR [esi-0x6dfc161e]
  44f14d:	loop   0x44f138
  44f14f:	add    esp,DWORD PTR [esi-0x55fc161e]
  44f155:	loop   0x44f140
  44f157:	add    ecx,esi
  44f159:	loop   0x44f144
  44f15b:	add    ebp,DWORD PTR [ecx-0x52fc161e]
  44f161:	loop   0x44f14c
  44f163:	add    eax,ebp
  44f165:	loope  0x44f150
  44f167:	add    ecx,DWORD PTR [esi]
  44f169:	jecxz  0x44f154
  44f16b:	add    esp,esp
  44f16d:	loope  0x44f16f
  44f16f:	jmp    0xe94c4cd5
  44f174:	popa   
  44f175:	sbb    al,0x6
  44f177:	jmp    0xe94cbfdd
  44f17c:	popa   
  44f17d:	jne    0x44f186
  44f17f:	jmp    0xe94b86e5
  44f184:	popa   
  44f185:	pusha  
  44f186:	pop    es
  44f187:	jmp    0xe94bbeed
  44f18c:	popa   
  44f18d:	cdq    
  44f18e:	push   es
  44f18f:	jmp    0xe94b8af5
	...
  44f1a8:	popa   
  44f1a9:	add    DWORD PTR [esi],0x6bd61e9
  44f1af:	jmp    0xe94bab15
  44f1b4:	popa   
  44f1b5:	in     eax,0x6
  44f1b7:	jmp    0xe94be31d
  44f1bc:	popa   
  44f1bd:	fld    QWORD PTR [esi]
  44f1bf:	jmp    0xe94cb625
  44f1c4:	popa   
  44f1c5:	lock pop es
  44f1c7:	jmp    0xe94be32d
  44f1cc:	popa   
  44f1cd:	fld    QWORD PTR [esi]
  44f1cf:	jmp    0xe9545535
  44f1d4:	popa   
  44f1d5:	inc    ebp
  44f1d6:	psubsw mm4,QWORD PTR [ecx-0x56]
  44f1da:	sbb    cl,ch
  44f1dc:	popa   
  44f1dd:	cmp    BYTE PTR [eax],bl
  44f1df:	jmp    0xe95eb545
  44f1e4:	popa   
  44f1e5:	xchg   ecx,eax
  44f1e6:	sbb    ecx,ebp
  44f1e8:	popa   
  44f1e9:	daa    
  44f1ea:	sbb    ecx,ebp
  44f1ec:	popa   
  44f1ed:	retf   0xe91a
  44f1f0:	popa   
  44f1f1:	std    
  44f1f2:	add    al,0xe9
  44f1f4:	popa   
  44f1f5:	or     DWORD PTR ds:0x4f561e9,eax
  44f1fb:	add    BYTE PTR [ebx-0x24],bh
  44f1fe:	call   0xd5216d10
  44f203:	or     eax,0xde0dc4b
  44f208:	dec    ebx
  44f209:	fmul   st(4),st
  44f20b:	or     eax,0x0
	...
  44f220:	cmp    ebx,esp
  44f222:	fmul   DWORD PTR ds:0xe10dc3b
  44f228:	dec    ebx
  44f229:	fdiv   st(4),st
  44f22b:	or     eax,0xfb6dc4b
  44f230:	cmp    ebx,esp
  44f232:	enter  0x3b0d,0xdc
  44f236:	ror    BYTE PTR ds:0xdacdc0b,0xb
  44f23d:	fdivr  QWORD PTR [eax-0x5b2404f3]
  44f243:	or     eax,0xe6edbfb
  44f248:	or     ebx,esp
  44f24a:	pushf  
  44f24b:	or     eax,0x15f3dc0b
  44f250:	sti    
  44f251:	(bad)  [esi]
  44f253:	push   ss
  44f254:	sti    
  44f255:	(bad)  [eax-0x732434f3]
  44f25b:	or     eax,0x101cdbcb
  44f260:	mov    ebx,0xbb105adb
  44f265:	fist   DWORD PTR [eax+0x7cdbcb0d]
  44f26b:	or     eax,0xd88dbcb
  44f270:	mov    ebx,0xbb0d74db
  44f275:	fild   DWORD PTR [eax+0x6cdb8b0d]
  44f27b:	or     eax,0x10a8db8b
  44f280:	jnp    0x44f25d
  44f282:	mov    ch,0x10
	...
  44f298:	jnp    0x44f275
  44f29a:	loop   0x44f2ac
  44f29c:	bound  eax,QWORD PTR [edx]
  44f29e:	add    esi,edi
  44f2a0:	push   edx
  44f2a1:	add    al,BYTE PTR [ebx]
  44f2a3:	pop    eax
  44f2a4:	pop    edi
  44f2a5:	add    al,BYTE PTR [ebx]
  44f2a7:	dec    esp
  44f2a8:	push   edi
  44f2a9:	add    al,BYTE PTR [ebx]
  44f2ab:	mov    dh,0x6d
  44f2ad:	add    BYTE PTR [ebx],al
  44f2af:	push   esp
  44f2b0:	add    BYTE PTR [bp+di],al
  44f2b3:	pop    eax
  44f2b4:	pop    edi
  44f2b5:	add    BYTE PTR [ebx],al
  44f2b7:	dec    esp
  44f2b8:	push   edi
  44f2b9:	add    BYTE PTR [ebx],al
  44f2bb:	push   eax
  44f2bc:	outs   dx,DWORD PTR ds:[esi]
  44f2bd:	add    BYTE PTR [ebx],al
  44f2bf:	inc    esp
  44f2c0:	add    BYTE PTR [bp+di],al
  44f2c3:	sahf   
  44f2c4:	pop    ebp
  44f2c5:	add    BYTE PTR [ebx],al
  44f2c7:	cmp    al,0x57
  44f2c9:	add    BYTE PTR [ebx],al
  44f2cb:	xchg   esi,eax
  44f2cc:	ins    DWORD PTR es:[edi],dx
  44f2cd:	add    BYTE PTR [ebx],al
  44f2cf:	and    al,0x67
  44f2d1:	add    BYTE PTR [ebx],al
  44f2d3:	cmp    BYTE PTR [edi+0x0],bl
  44f2d6:	add    edx,DWORD PTR [edx+0x20030055]
  44f2dc:	outs   dx,DWORD PTR ds:[esi]
  44f2dd:	add    BYTE PTR [ebx],al
  44f2df:	adc    al,0x67
  44f2e1:	add    BYTE PTR [ebx],al
  44f2e3:	sbb    BYTE PTR [edi+0x0],bl
  44f2e6:	add    ecx,DWORD PTR [edi+edx*2]
  44f2e9:	add    BYTE PTR [ebx],al
  44f2eb:	adc    BYTE PTR [edi+0x0],ch
  44f2ee:	add    eax,DWORD PTR [edi+eiz*2]
  44f2f1:	add    BYTE PTR [ebx],al
  44f2f3:	or     BYTE PTR [edi+0x0],bl
  44f2f6:	add    edi,esp
  44f2f8:	push   esi
  44f2f9:	add    BYTE PTR [ebx],al
  44f2fb:	jge    0x44f2fd
	...
  44f30d:	add    BYTE PTR [eax],al
  44f30f:	add    BYTE PTR [esi+0x0],dl
  44f312:	add    esi,esp
  44f314:	data16 add BYTE PTR [ebx],al
  44f317:	clc    
  44f318:	pop    esi
  44f319:	add    BYTE PTR [ebx],al
  44f31b:	in     al,dx
  44f31c:	push   esi
  44f31d:	add    BYTE PTR [ebx],al
  44f31f:	lock outs dx,BYTE PTR ds:[esi]
  44f321:	add    BYTE PTR [ebx],al
  44f323:	in     al,0x66
  44f325:	add    BYTE PTR [ebx],al
  44f327:	call   0x42ecc8a
  44f32c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44f32d:	fucomp st(1)
  44f32f:	add    ecx,DWORD PTR [edx-0x21]
  44f332:	jmp    0xea24493a
  44f337:	add    eax,DWORD PTR [edx-0x21]
  44f33a:	jmp    0xea244142
  44f33f:	add    edx,DWORD PTR [esi+ebx*8-0x2167fc17]
  44f346:	jmp    0xea236f4e
  44f34b:	add    edx,DWORD PTR [eax+0x2203e9de]
  44f351:	fucomp st(1)
  44f353:	add    ebp,esi
  44f355:	fsub   st(1),st
  44f357:	add    ebp,edx
  44f359:	fsub   st(1),st
  44f35b:	add    esi,esi
  44f35d:	fsub   st(1),st
  44f35f:	add    edx,edx
  44f361:	fsub   st(1),st
  44f363:	add    edi,DWORD PTR [esi-0x45fc1624]
  44f369:	fsub   st(1),st
  44f36b:	add    esp,esi
  44f36d:	fsub   st(1),st
  44f36f:	add    esi,DWORD PTR [edx+0x3e9dc]
	...
  44f385:	add    BYTE PTR [eax],al
  44f387:	add    BYTE PTR [esi-0x45fc1624],bh
  44f38d:	fsub   st(1),st
  44f38f:	add    eax,esi
  44f391:	fsub   st(1),st
  44f393:	add    eax,DWORD PTR [edx]
  44f395:	fucomp st(1)
  44f397:	add    ebp,esi
  44f399:	fsub   st(1),st
  44f39b:	add    edi,DWORD PTR [esi+ebx*8-0x212ffc17]
  44f3a2:	jmp    0xea28e9aa
  44f3a7:	add    ecx,eax
  44f3a9:	fsubp  st(1),st
  44f3ab:	add    ecx,DWORD PTR [ecx-0x3ffc161d]
  44f3b1:	fsubp  st(1),st
  44f3b3:	add    esi,DWORD PTR [esi+ebx*8+0x3361e900]
  44f3ba:	push   es
  44f3bb:	jmp    0xe94b1321
  44f3c0:	popa   
  44f3c1:	sub    eax,DWORD PTR [esi]
  44f3c3:	jmp    0xe9496d29
  44f3c8:	popa   
  44f3c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44f3ca:	add    al,0xe9
  44f3cc:	popa   
  44f3cd:	mov    cl,0x4
  44f3cf:	jmp    0xe9499135
  44f3d4:	popa   
  44f3d5:	test   eax,0x9561e904
  44f3da:	add    al,0xe9
  44f3dc:	popa   
  44f3dd:	mov    eax,ds:0xcd61e904
  44f3e2:	add    al,0xe9
  44f3e4:	popa   
  44f3e5:	cdq    
  44f3e6:	add    al,0xe9
  44f3e8:	popa   
  44f3e9:	lds    eax,FWORD PTR [ecx+ebp*8]
	...
  44f400:	popa   
  44f401:	rol    DWORD PTR [ecx+ebp*8],1
  44f404:	popa   
  44f405:	mov    ebp,0xc961e904
  44f40a:	add    al,0xe9
  44f40c:	popa   
  44f40d:	mov    ch,0x4
  44f40f:	jmp    0xe949b575
  44f414:	popa   
  44f415:	in     eax,dx
  44f416:	add    al,0xe9
  44f418:	popa   
  44f419:	mov    ecx,0xe561e904
  44f41e:	add    al,0xe9
  44f420:	popa   
  44f421:	icebp  
  44f422:	add    al,0xe9
  44f424:	popa   
  44f425:	fld    QWORD PTR [ecx+ebp*8]
  44f428:	popa   
  44f429:	jmp    0xd5a6dd32
  44f42e:	add    al,0xe9
  44f430:	popa   
  44f431:	loope  0x44f437
  44f433:	jmp    0xe9500199
  44f438:	popa   
  44f439:	fld    DWORD PTR [ecx+ebp*8]
  44f43c:	popa   
  44f43d:	add    eax,0x1161e90b
  44f442:	or     eax,DWORD PTR [eax]
  44f444:	mov    ebx,0x8b0be4d8
  44f449:	fdiv   st,st(0)
  44f44b:	or     ecx,DWORD PTR [ebx+0x7b0bdcd8]
  44f451:	fsubr  st,st(0)
  44f453:	or     edi,DWORD PTR [ebx-0x28]
  44f456:	aam    0xb
  44f458:	mov    ebx,eax
  44f45a:	loopne 0x44f467
  44f45c:	mov    ebx,eax
  44f45e:	int3   
  44f45f:	or     edi,DWORD PTR [ebx-0x28]
  44f462:	fmul   DWORD PTR [ebx]
	...
  44f478:	jnp    0x44f452
  44f47a:	les    ecx,FWORD PTR [ebx]
  44f47c:	dec    ebx
  44f47d:	fcom   st(0)
  44f47f:	or     ecx,DWORD PTR [ebx-0x28]
  44f482:	mov    esp,0xc8d83b0b
  44f487:	or     edi,DWORD PTR [ebx]
  44f489:	fdiv   DWORD PTR [ebx+ecx*1+0xbc0d84b]
  44f490:	dec    ebx
  44f491:	fsubr  DWORD PTR [ebx+ecx*1+0xbb8d83b]
  44f498:	cmp    ebx,eax
  44f49a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f49b:	or     ecx,DWORD PTR [ebx]
  44f49d:	fmul   st,st(1)
  44f49f:	or     ecx,DWORD PTR [ebx]
  44f4a1:	fdiv   DWORD PTR [ebp-0x572804f5]
  44f4a7:	or     edi,ebx
  44f4a9:	xlat   BYTE PTR ds:[ebx]
  44f4aa:	xchg   esp,eax
  44f4ab:	or     ecx,DWORD PTR [ebx]
  44f4ad:	fsub   DWORD PTR [eax+0x7ed80b0b]
  44f4b3:	adc    bl,bh
  44f4b5:	xlat   BYTE PTR ds:[ebx]
  44f4b6:	add    eax,0x8cd7fb11
  44f4bb:	adc    ebx,ecx
  44f4bd:	xlat   BYTE PTR ds:[ebx]
  44f4be:	nop
  44f4bf:	or     ecx,ebx
  44f4c1:	xlat   BYTE PTR ds:[ebx]
  44f4c2:	jl     0x44f4cf
  44f4c4:	mov    ebx,0xbb0b88d7
  44f4c9:	xlat   BYTE PTR ds:[ebx]
  44f4ca:	test   BYTE PTR [ebx],cl
  44f4cc:	retf   
  44f4cd:	xlat   BYTE PTR ds:[ebx]
  44f4ce:	or     BYTE PTR [ebx],0x62
  44f4d1:	add    al,BYTE PTR [ebx]
  44f4d3:	je     0x44f52e
  44f4d5:	add    al,BYTE PTR [ebx]
  44f4d7:	ficom  WORD PTR [edi+0x2]
  44f4da:	add    esp,edx
	...
  44f4f0:	outs   dx,DWORD PTR ds:[esi]
  44f4f1:	add    al,BYTE PTR [ebx]
  44f4f3:	jo     0x44f55e
  44f4f5:	add    al,BYTE PTR [ebx]
  44f4f7:	fs pop ecx
  44f4f9:	add    al,BYTE PTR [ebx]
  44f4fb:	push   0x5c030259
  44f500:	imul   eax,DWORD PTR [edx],0x269b003
  44f506:	add    esp,DWORD PTR [ecx+ebx*2+0x56890302]
  44f50d:	add    al,BYTE PTR [ebx]
  44f50f:	jge    0x44f57f
  44f511:	add    BYTE PTR [ebx],al
  44f513:	and    DWORD PTR [esi+0x0],0x5e7503
  44f51a:	add    ebx,DWORD PTR [eax-0x73fcffa7]
  44f520:	imul   eax,DWORD PTR [eax],0x699003
  44f526:	add    eax,DWORD PTR [ecx+ebx*2+0x59880300]
  44f52d:	add    BYTE PTR [ebx],al
  44f52f:	jl     0x44f59a
  44f531:	add    BYTE PTR [ebx],al
  44f533:	sub    BYTE PTR [ecx+0x0],0x3
  44f537:	je     0x44f592
  44f539:	add    BYTE PTR [ebx],al
  44f53b:	js     0x44f596
  44f53d:	add    BYTE PTR [ebx],al
  44f53f:	ins    BYTE PTR es:[edi],dx
  44f540:	imul   eax,DWORD PTR [eax],0x692003
  44f546:	add    edx,DWORD PTR [ecx+ebx*2]
  44f549:	add    BYTE PTR [ebx],al
  44f54b:	sbb    BYTE PTR [ecx+0x0],bl
  44f54e:	add    ecx,DWORD PTR [ecx+ebp*2]
  44f551:	add    BYTE PTR [ebx],al
  44f553:	adc    BYTE PTR [eax],al
	...
  44f565:	add    BYTE PTR [eax],al
  44f567:	add    BYTE PTR [ecx+0x0],ch
  44f56a:	add    eax,DWORD PTR [ecx+ebx*2]
  44f56d:	add    BYTE PTR [ebx],al
  44f56f:	or     BYTE PTR [ecx-0x27],bl
  44f572:	jmp    0xea24b37a
  44f577:	add    esp,DWORD PTR [edx-0x22]
  44f57a:	jmp    0xea24ab82
  44f57f:	add    ebp,DWORD PTR [edx-0x71fc1621]
  44f585:	fucomip st,st(1)
  44f587:	add    edx,DWORD PTR [edx-0x79fc1621]
  44f58d:	fucomip st,st(1)
  44f58f:	add    edi,DWORD PTR [edx-0x21]
  44f592:	jmp    0xea24939a
  44f597:	add    esi,DWORD PTR [edx-0x21]
  44f59a:	jmp    0xea247ba2
  44f59f:	add    edi,DWORD PTR [edx-0x21]
  44f5a2:	jmp    0xea2423aa
  44f5a7:	add    ebp,DWORD PTR [ecx+0x2603e9de]
  44f5ad:	fucomip st,st(1)
  44f5af:	add    esi,DWORD PTR [esp+ebx*8-0x17]
  44f5b3:	add    esi,DWORD PTR [eax-0x24]
  44f5b6:	jmp    0xea2407be
  44f5bb:	add    esp,DWORD PTR [esi]
  44f5bd:	fucomip st,st(1)
  44f5bf:	add    ebx,DWORD PTR [edx]
  44f5c1:	fucomip st,st(1)
  44f5c3:	add    ecx,esi
  44f5c5:	fsubp  st(1),st
  44f5c7:	add    ecx,DWORD PTR [ecx-0x22]
  44f5ca:	jmp    0x44f5d2
	...
  44f5df:	add    dh,al
  44f5e1:	fsubp  st(1),st
  44f5e3:	add    edi,DWORD PTR [edx-0x18]
  44f5e6:	jmp    0xea23d3ee
  44f5eb:	add    eax,edx
  44f5ed:	fsubp  st(1),st
  44f5ef:	add    edx,esi
  44f5f1:	fsubp  st(1),st
  44f5f3:	add    ecx,edx
  44f5f5:	fsubp  st(1),st
  44f5f7:	add    ebp,esi
  44f5f9:	fsubp  st(1),st
  44f5fb:	add    esi,edx
  44f5fd:	fiadd  WORD PTR [eax]
  44f5ff:	jmp    0xe94f4b65
  44f604:	popa   
  44f605:	popa   
  44f606:	or     ch,cl
  44f608:	popa   
  44f609:	lea    ecx,[edx]
  44f60b:	jmp    0xe94f4f71
  44f610:	popa   
  44f611:	push   ebp
  44f612:	or     ch,cl
  44f614:	popa   
  44f615:	cmc    
  44f616:	add    eax,0xa7d61e9
  44f61b:	jmp    0xe94f7f81
  44f620:	popa   
  44f621:	jne    0x44f62d
  44f623:	jmp    0xe94f7789
  44f628:	popa   
  44f629:	lods   eax,DWORD PTR ds:[esi]
  44f62a:	or     ch,cl
  44f62c:	popa   
  44f62d:	jns    0x44f639
  44f62f:	jmp    0xe94f9b95
  44f634:	popa   
  44f635:	mov    cl,0xa
  44f637:	jmp    0xe94f8b9d
  44f63c:	popa   
  44f63d:	test   eax,0x9d61e90a
  44f642:	or     ch,cl
	...
  44f658:	popa   
  44f659:	xchg   ecx,eax
  44f65a:	or     ch,cl
  44f65c:	popa   
  44f65d:	and    al,BYTE PTR [esi]
  44f65f:	jmp    0xe94f9fc5
  44f664:	popa   
  44f665:	popf   
  44f666:	or     ch,cl
  44f668:	popa   
  44f669:	xchg   ecx,eax
  44f66a:	or     ch,cl
  44f66c:	popa   
  44f66d:	lds    ecx,FWORD PTR [edx]
  44f66f:	jmp    0xe94f8fd5
  44f674:	popa   
  44f675:	int    0xa
  44f677:	jmp    0xe94fb7dd
  44f67c:	popa   
  44f67d:	mov    ch,0xa
  44f67f:	jmp    0xe94fafe5
  44f684:	popa   
  44f685:	in     eax,dx
  44f686:	or     ch,cl
  44f688:	popa   
  44f689:	loope  0x44f695
  44f68b:	add    bl,cl
  44f68d:	fadd   QWORD PTR [edx+ecx*1]
  44f690:	retf   
  44f691:	fcom   QWORD PTR [eax]
  44f693:	or     bh,BYTE PTR [ebx-0x44f60324]
  44f699:	fsubr  QWORD PTR [ecx-0xb2334f5]
  44f69f:	or     ebx,ecx
  44f6a1:	fadd   QWORD PTR [eax]
  44f6a3:	or     bh,BYTE PTR [ebx-0x44f61324]
  44f6a9:	fdiv   st(0),st
  44f6ab:	or     DWORD PTR [ebx-0x74f61b24],ecx
  44f6b1:	fdivr  st(0),st
  44f6b3:	or     DWORD PTR [ebx-0x24],edi
  44f6b6:	fmul   QWORD PTR [ecx]
  44f6b8:	jnp    0x44f696
  44f6ba:	call   0x44f6c8
	...
  44f6cf:	add    BYTE PTR [ebx-0x74f62b24],cl
  44f6d5:	fsubr  st(0),st
  44f6d7:	or     DWORD PTR [ebx-0x24],edi
  44f6da:	int3   
  44f6db:	or     DWORD PTR [ebx-0x24],edi
  44f6de:	fmul   DWORD PTR [ecx]
  44f6e0:	dec    ebx
  44f6e1:	fadd   st(4),st
  44f6e3:	or     DWORD PTR [ebx-0x24],ecx
  44f6e6:	ror    BYTE PTR [ecx],1
  44f6e8:	cmp    ebx,esp
  44f6ea:	mov    esp,0x69dc3b09
  44f6ef:	or     ecx,DWORD PTR [ebx-0x24]
  44f6f2:	mov    ah,0x9
  44f6f4:	dec    ebx
  44f6f5:	fadd   st(0),st
  44f6f7:	or     DWORD PTR [ebx],edi
  44f6f9:	fsubr  QWORD PTR [ecx+ecx*1+0x9b8dc3b]
  44f700:	or     ebx,esp
  44f702:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44f703:	or     DWORD PTR [ebx],ecx
  44f705:	fdiv   QWORD PTR [eax-0x632404f7]
  44f70b:	or     ebx,edi
  44f70d:	fld    TBYTE PTR [eax-0x6b23f4f7]
  44f713:	or     DWORD PTR [ebx],ecx
  44f715:	fsub   st(4),st
  44f717:	or     esp,DWORD PTR [edx-0xe]
  44f71a:	add    dl,BYTE PTR [ebx+ebx*2+0x6b9802f2]
  44f721:	repnz add cl,BYTE PTR [ebx+ebp*2+0x5b9002f2]
  44f729:	repnz add al,BYTE PTR [ebx+ebx*2+0x6b8802f2]
  44f731:	repnz add bh,BYTE PTR [eax+eax*1+0x0]
	...
  44f746:	add    BYTE PTR [eax],al
  44f748:	imul   esi,edx,0x2
  44f74b:	sbb    BYTE PTR [ebx-0xe],0x2
  44f74f:	je     0x44f7ac
  44f751:	repnz add bh,BYTE PTR [eax+0x6b]
  44f755:	repnz add ch,BYTE PTR [ebx+ebp*2-0xe]
  44f75a:	add    dh,BYTE PTR [eax+0x5b]
  44f75d:	repnz add ah,BYTE PTR [ebx+ebx*2-0xe]
  44f762:	add    ch,BYTE PTR [eax+0x6b]
  44f765:	repnz add dl,dl
  44f768:	imul   esi,edx,0xf25b6002
  44f76e:	add    dl,BYTE PTR [ebx+ebx*2-0xe]
  44f772:	add    bl,BYTE PTR [eax+0x6b]
  44f775:	lock add cl,BYTE PTR [ebx+ebp*2-0x10]
  44f77a:	add    dl,BYTE PTR [eax+0x5b]
  44f77d:	lock add al,BYTE PTR [ebx+ebx*2-0x10]
  44f782:	add    cl,BYTE PTR [eax+0x6b]
  44f785:	lock add bh,BYTE PTR [ebx+ebp*2]
  44f789:	lock add al,BYTE PTR [eax+0x5b]
  44f78d:	lock add dh,BYTE PTR [ebx+ebx*2]
  44f791:	lock add bh,BYTE PTR [eax]
  44f794:	imul   esi,eax,0x2
  44f797:	sub    al,0x6b
  44f799:	lock add dl,BYTE PTR [esi-0x65fd0fa7]
  44f7a0:	pop    ecx
  44f7a1:	lock add cl,BYTE PTR [esi+0x3e9d969]
  44f7a8:	rcl    dl,1
  44f7aa:	jmp    0x44f7b2
	...
  44f7bf:	add    BYTE PTR [ebx],ch
  44f7c1:	shr    cl,1
  44f7c3:	add    ebx,eax
  44f7c5:	shr    cl,cl
  44f7c7:	add    ebx,DWORD PTR [edx+edx*8-0x17]
  44f7cb:	add    esp,eax
  44f7cd:	shr    cl,cl
  44f7cf:	add    edi,DWORD PTR [ebx-0x30]
  44f7d2:	jmp    0xea155eda
  44f7d7:	add    ecx,DWORD PTR [edx+edx*8-0x17]
  44f7db:	add    ecx,DWORD PTR [edi-0x30]
  44f7de:	jmp    0xea173be6
  44f7e3:	add    edi,DWORD PTR [eax]
  44f7e5:	shr    cl,cl
  44f7e7:	add    edi,DWORD PTR [edx+edx*8]
  44f7ea:	jmp    0xea16f7f2
  44f7ef:	add    edx,DWORD PTR [edx+0x7e03e9d1]
  44f7f5:	shr    ecx,1
  44f7f7:	add    ecx,DWORD PTR [edx+0x1003e9d1]
  44f7fd:	shr    cl,cl
  44f7ff:	add    ebp,DWORD PTR [ebx-0x2f]
  44f802:	jmp    0xea166f0a
  44f807:	add    edx,DWORD PTR [ebx-0x2f]
  44f80a:	jmp    0xea163712
  44f80f:	add    edi,DWORD PTR [ebx]
  44f811:	shr    ecx,1
  44f813:	add    esp,DWORD PTR [edi]
  44f815:	shr    ecx,1
  44f817:	add    ecx,DWORD PTR [edx+edx*8-0x2d8ffc17]
  44f81e:	jmp    0xea160326
  44f823:	add    eax,DWORD PTR [eax]
	...
  44f835:	add    BYTE PTR [eax],al
  44f837:	add    BYTE PTR [edi],dl
  44f839:	shr    ecx,1
  44f83b:	add    esi,DWORD PTR [ebx]
  44f83d:	shr    ecx,1
  44f83f:	add    ebx,DWORD PTR [edi]
  44f841:	shr    ecx,1
  44f843:	add    esi,DWORD PTR [edx+edx*8+0x0]
  44f847:	jmp    0xe950dbad
  44f84c:	popa   
  44f84d:	xlat   BYTE PTR ds:[ebx]
  44f84e:	or     ebp,ecx
  44f850:	popa   
  44f851:	jmp    0x44f85e
  44f853:	jmp    0xe94d38b9
  44f858:	popa   
  44f859:	xor    al,0x8
  44f85b:	jmp    0xe94d40c1
  44f860:	popa   
  44f861:	cmp    al,0x8
  44f863:	jmp    0xe94d28c9
  44f868:	popa   
  44f869:	fs or  cl,ch
  44f86c:	popa   
  44f86d:	test   DWORD PTR [ecx],0x86c61e9
  44f873:	jmp    0xe94d58d9
  44f878:	popa   
  44f879:	push   esp
  44f87a:	or     cl,ch
  44f87c:	popa   
  44f87d:	push   0x5c61e908
  44f882:	or     cl,ch
  44f884:	popa   
  44f885:	push   eax
  44f886:	or     cl,ch
  44f888:	popa   
  44f889:	test   BYTE PTR [eax],cl
  44f88b:	jmp    0xe94d50f1
  44f890:	popa   
  44f891:	mov    WORD PTR [eax],cs
  44f893:	jmp    0xe94d78f9
  44f898:	popa   
  44f899:	je     0x44f8a3
  44f89b:	jmp    0x44f8a0
	...
  44f8b0:	popa   
  44f8b1:	inc    ebx
  44f8b2:	or     ch,cl
  44f8b4:	popa   
  44f8b5:	pop    ss
  44f8b6:	or     ch,cl
  44f8b8:	popa   
  44f8b9:	dec    ebx
  44f8ba:	or     ch,cl
  44f8bc:	popa   
  44f8bd:	aas    
  44f8be:	or     ch,cl
  44f8c0:	popa   
  44f8c1:	xor    ecx,DWORD PTR [edx]
  44f8c3:	jmp    0xe94f4029
  44f8c8:	popa   
  44f8c9:	cmp    ecx,DWORD PTR [edx]
  44f8cb:	jmp    0xe94f2831
  44f8d0:	popa   
  44f8d1:	arpl   WORD PTR [edx],cx
  44f8d3:	add    BYTE PTR [ebx],cl
  44f8d5:	fldenv [edx-0x712704f6]
  44f8db:	or     bh,bl
  44f8dd:	fcomp  DWORD PTR [edx-0x7926f4f6]
  44f8e3:	or     cl,BYTE PTR [ebx]
  44f8e5:	fst    DWORD PTR [edx+0x7ed8fb0a]
  44f8eb:	or     bh,bl
  44f8ed:	fmul   DWORD PTR [edx+0x76d8cb0a]
  44f8f3:	or     cl,bl
  44f8f5:	fadd   DWORD PTR [edx+0x6ed8bb0a]
  44f8fb:	or     bh,BYTE PTR [ebx-0x34f58528]
  44f901:	fsub   DWORD PTR [esi+0xa]
  44f904:	retf   
  44f905:	fdiv   DWORD PTR [edx+0xa]
  44f908:	mov    ebx,0xbb0a5ed8
  44f90d:	fsubr  DWORD PTR [edx+0xa]
  44f910:	mov    ebx,eax
  44f912:	push   esi
  44f913:	or     al,BYTE PTR [eax]
	...
  44f925:	add    BYTE PTR [eax],al
  44f927:	add    BYTE PTR [ebx+0x7b0a62d8],cl
  44f92d:	fmul   DWORD PTR [esi+0xa]
  44f930:	jnp    0x44f90a
  44f932:	pop    edx
  44f933:	or     cl,BYTE PTR [ebx-0x74f5b928]
  44f939:	fcom   DWORD PTR [edx+0xa]
  44f93c:	jnp    0x44f916
  44f93e:	or     bh,BYTE PTR ds:[ebx-0x28]
  44f942:	dec    edx
  44f943:	or     cl,BYTE PTR [ebx-0x28]
  44f946:	or     cl,BYTE PTR ss:[ebx-0x28]
  44f94a:	inc    edx
  44f94b:	or     bh,BYTE PTR [ebx]
  44f94d:	fsubr  DWORD PTR [esi]
  44f94f:	or     bh,BYTE PTR [ebx]
  44f951:	fdivr  DWORD PTR [edx]
  44f953:	or     cl,BYTE PTR [ebx-0x28]
  44f956:	or     cl,BYTE PTR es:[ebx-0x28]
  44f95a:	xor    cl,BYTE PTR [edx]
  44f95c:	cmp    ebx,eax
  44f95e:	push   ds
  44f95f:	or     ah,BYTE PTR [edx-0xe]
  44f962:	add    ch,BYTE PTR [edx]
  44f964:	push   0x681e02f2
  44f969:	repnz add ah,BYTE PTR [edx]
  44f96c:	pop    eax
  44f96d:	repnz add dl,BYTE PTR [esi]
  44f970:	pop    eax
  44f971:	repnz add bl,BYTE PTR [edx]
  44f974:	push   0x680e02f2
  44f979:	repnz add dl,BYTE PTR [edx]
  44f97c:	pop    eax
  44f97d:	repnz add al,BYTE PTR [esi]
  44f980:	pop    eax
  44f981:	repnz add cl,BYTE PTR [edx]
  44f984:	push   0x6bfe02f2
  44f989:	repnz add al,BYTE PTR [edx]
	...
  44f9a0:	pop    eax
  44f9a1:	repnz add dh,dh
  44f9a4:	pop    ebx
  44f9a5:	repnz add bh,dl
  44f9a8:	imul   esi,edx,0x2
  44f9ab:	out    dx,al
  44f9ac:	imul   esi,edx,0x2
  44f9af:	repnz pop ebx
  44f9b1:	repnz add ah,dh
  44f9b4:	pop    ebx
  44f9b5:	repnz add ch,dl
  44f9b8:	imul   esi,edx,0x2
  44f9bb:	fisubr WORD PTR [ebx-0xe]
  44f9be:	add    ah,dl
  44f9c0:	pop    ebx
  44f9c1:	repnz add dl,dh
  44f9c4:	pop    ebx
  44f9c5:	repnz add bl,dl
  44f9c8:	imul   esi,edx,0x2
  44f9cb:	into   
  44f9cc:	imul   esi,edx,0x2
  44f9cf:	rcr    BYTE PTR [ebx-0xe],cl
  44f9d2:	add    al,dh
  44f9d4:	pop    ebx
  44f9d5:	repnz add cl,dl
  44f9d8:	imul   esi,eax,0x2
  44f9db:	mov    esi,0xc202f06b
  44f9e0:	pop    ebx
  44f9e1:	lock add dh,BYTE PTR [esi-0x45fd0fa5]
  44f9e8:	imul   esi,eax,0x2
  44f9eb:	scas   al,BYTE PTR es:[edi]
  44f9ec:	imul   ebx,ecx,0xffffffe9
  44f9ef:	add    esi,eax
  44f9f1:	shr    cl,1
  44f9f3:	add    edi,esp
  44f9f5:	shr    cl,1
  44f9f7:	add    ecx,eax
  44f9f9:	shr    cl,1
  44f9fb:	add    esi,esp
  44f9fd:	shr    cl,1
  44f9ff:	add    eax,eax
  44fa01:	shr    cl,1
  44fa03:	add    eax,DWORD PTR [eax]
	...
  44fa15:	add    BYTE PTR [eax],al
  44fa17:	add    ah,ch
  44fa19:	shr    cl,1
  44fa1b:	add    ebx,eax
  44fa1d:	shr    cl,1
  44fa1f:	add    esp,esp
  44fa21:	shr    cl,1
  44fa23:	add    edx,eax
  44fa25:	shr    cl,1
  44fa27:	add    ebx,esp
  44fa29:	shr    cl,1
  44fa2b:	add    ebp,eax
  44fa2d:	shr    cl,1
  44fa2f:	add    edx,DWORD PTR [eax+edx*8-0x17]
  44fa33:	add    esp,eax
  44fa35:	shr    cl,1
  44fa37:	add    ecx,DWORD PTR [eax+edx*8-0x17]
  44fa3b:	add    edi,DWORD PTR [eax]
  44fa3d:	shr    cl,1
  44fa3f:	add    eax,DWORD PTR [eax+edx*8-0x17]
  44fa43:	add    esi,DWORD PTR [eax]
  44fa45:	shr    cl,1
  44fa47:	add    edi,DWORD PTR [eax+edx*8]
  44fa4a:	jmp    0xea150252
  44fa4f:	add    esi,DWORD PTR [eax+edx*8]
  44fa52:	jmp    0xea14fa5a
  44fa57:	add    ebp,DWORD PTR [eax+edx*8]
  44fa5a:	jmp    0xea151262
  44fa5f:	add    esp,DWORD PTR [eax+edx*8]
  44fa62:	jmp    0xea150a6a
  44fa67:	add    ebx,DWORD PTR [eax+edx*8]
  44fa6a:	jmp    0xea15a272
  44fa6f:	add    edx,DWORD PTR [eax+edx*8-0x2f5ffc17]
  44fa76:	jmp    0x115867e
  44fa7b:	jmp    0x44fa80
	...
  44fa90:	popa   
  44fa91:	mov    edi,0xb361e909
  44fa96:	or     ecx,ebp
  44fa98:	popa   
  44fa99:	(bad)  
  44fa9a:	or     ecx,ebp
  44fa9c:	popa   
  44fa9d:	mov    ebx,0xaf61e909
  44faa2:	or     ecx,ebp
  44faa4:	popa   
  44faa5:	jecxz  0x44fab0
  44faa7:	jmp    0xe94eb20d
  44faac:	popa   
  44faad:	jmp    0x44fab8
  44faaf:	jmp    0xe94eda15
  44fab4:	popa   
  44fab5:	ror    DWORD PTR [ecx],cl
  44fab7:	jmp    0xe94ee21d
  44fabc:	popa   
  44fabd:	fisttp DWORD PTR [ecx]
  44fabf:	jmp    0xe94eca25
  44fac4:	popa   
  44fac5:	add    ecx,DWORD PTR [eax]
  44fac7:	jmp    0xe94ed22d
  44facc:	popa   
  44facd:	or     ecx,DWORD PTR [eax]
  44facf:	jmp    0xe94cfa35
  44fad4:	popa   
  44fad5:	repz pop es
  44fad7:	jmp    0xe94d023d
  44fadc:	popa   
  44fadd:	sti    
  44fade:	pop    es
  44fadf:	jmp    0xe94cea45
  44fae4:	popa   
  44fae5:	and    ecx,DWORD PTR [eax]
  44fae7:	jmp    0xe94cf24d
  44faec:	popa   
  44faed:	sub    ecx,DWORD PTR [eax]
  44faef:	jmp    0xe94d1a55
	...
  44fb08:	popa   
  44fb09:	adc    ecx,DWORD PTR [eax]
  44fb0b:	jmp    0xe94d2271
  44fb10:	popa   
  44fb11:	sbb    ecx,DWORD PTR [eax]
  44fb13:	jmp    0xe94d0e79
  44fb18:	popa   
  44fb19:	aas    
  44fb1a:	or     BYTE PTR [eax],al
  44fb1c:	cmp    ebx,ebp
  44fb1e:	ret    0x3b08
  44fb21:	(bad)  [esi-0x4522b4f8]
  44fb27:	or     BYTE PTR [ebx-0x23],cl
  44fb2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44fb2b:	or     BYTE PTR [ebx],bh
  44fb2d:	fnsave [edx-0x6122c4f8]
  44fb33:	or     BYTE PTR [ebx],cl
  44fb35:	(bad)  [edx-0x6922f4f8]
  44fb3b:	or     bl,bh
  44fb3d:	fsub   QWORD PTR [edx-0x712304f8]
  44fb43:	or     BYTE PTR [ebx],cl
  44fb45:	fstp   QWORD PTR [edx-0x7922f4f8]
  44fb4b:	or     bl,bh
  44fb4d:	fcom   QWORD PTR [edx+0x7edcfb08]
  44fb53:	or     bl,cl
  44fb55:	fmul   QWORD PTR [edx+0x76dccb08]
  44fb5b:	or     BYTE PTR [ebx-0x44f77d24],bh
  44fb61:	fsubr  QWORD PTR [esi+0x8]
  44fb64:	retf   
  44fb65:	fdivr  QWORD PTR [edx+0x8]
  44fb68:	retf   
  44fb69:	fsub   QWORD PTR [esi+0x8]
	...
  44fb80:	mov    ebx,0xbb0872dc
  44fb85:	fcomp  QWORD PTR [esi+0x8]
  44fb88:	mov    ebx,esp
  44fb8a:	push   0x8
  44fb8c:	mov    ebx,esp
  44fb8e:	push   esi
  44fb8f:	or     BYTE PTR [ebx-0x24],bh
  44fb92:	bound  ecx,QWORD PTR [eax]
  44fb94:	jnp    0x44fb72
  44fb96:	dec    esi
  44fb97:	or     BYTE PTR [ebx-0x74f7a524],cl
  44fb9d:	fadd   QWORD PTR [esi+0x8]
  44fba0:	jnp    0x44fb7e
  44fba2:	push   edx
  44fba3:	or     BYTE PTR [ebx-0x24],bh
  44fba6:	or     BYTE PTR ds:[edx-0xe],ah
  44fbaa:	add    cl,BYTE PTR [edx+0x6a]
  44fbad:	repnz add bh,BYTE PTR [esi]
  44fbb0:	pop    edx
  44fbb1:	repnz add al,BYTE PTR [edx+0x5a]
  44fbb5:	repnz add dh,BYTE PTR [esi]
  44fbb8:	push   0xfffffff2
  44fbba:	add    bh,BYTE PTR [edx]
  44fbbc:	push   0xfffffff2
  44fbbe:	add    ch,BYTE PTR [esi]
  44fbc0:	pop    edx
  44fbc1:	repnz add dh,BYTE PTR [edx]
  44fbc4:	pop    edx
  44fbc5:	repnz add ah,BYTE PTR [esi]
  44fbc8:	push   0xfffffff2
  44fbca:	add    ch,BYTE PTR [edx]
  44fbcc:	push   0xfffffff2
  44fbce:	add    bl,BYTE PTR [esi]
  44fbd0:	pop    edx
  44fbd1:	repnz add ah,BYTE PTR [edx]
  44fbd4:	pop    edx
  44fbd5:	repnz add dl,BYTE PTR [esi]
  44fbd8:	push   0xfffffff2
  44fbda:	add    bl,BYTE PTR [edx]
  44fbdc:	push   0xfffffff2
  44fbde:	add    cl,BYTE PTR [esi]
  44fbe0:	pop    edx
  44fbe1:	repnz add dl,BYTE PTR [edx]
	...
  44fbf8:	pop    edx
  44fbf9:	repnz add ah,BYTE PTR [edi]
  44fbfc:	repnz add ch,BYTE PTR gs:[ebx]
  44fc00:	pop    ebp
  44fc01:	repnz add bh,dh
  44fc04:	repnz add al,BYTE PTR gs:[edx]
  44fc08:	pop    edx
  44fc09:	repnz add dh,dh
  44fc0c:	gs repnz add bh,dl
  44fc10:	pop    ebp
  44fc11:	repnz add ch,dh
  44fc14:	gs repnz add dh,dl
  44fc18:	pop    ebp
  44fc19:	repnz add ah,dh
  44fc1c:	gs repnz add ch,dl
  44fc20:	pop    ebp
  44fc21:	repnz add bl,dh
  44fc24:	gs repnz add ah,dl
  44fc28:	pop    ebp
  44fc29:	repnz add dl,dh
  44fc2c:	gs repnz add bl,dl
  44fc30:	pop    ebp
  44fc31:	repnz add cl,dh
  44fc34:	gs fldl2t 
  44fc37:	add    edx,DWORD PTR [eax+0x2403e9d7]
  44fc3d:	xlat   BYTE PTR ds:[ebx]
  44fc3e:	jmp    0xea1c2446
  44fc43:	add    ecx,DWORD PTR [edi+edx*8]
  44fc46:	jmp    0xea1c1c4e
  44fc4b:	add    esi,esp
  44fc4d:	(bad)  
  44fc4e:	jmp    0xea1bf456
  44fc53:	add    edi,esp
  44fc55:	(bad)  
  44fc56:	jmp    0xea1bec5e
  44fc5b:	add    eax,DWORD PTR [eax]
	...
  44fc6d:	add    BYTE PTR [eax],al
  44fc6f:	add    BYTE PTR [ecx-0x4afc162c],cl
  44fc75:	aam    0xe9
  44fc77:	add    eax,DWORD PTR [ecx-0x52fc162c]
  44fc7d:	aam    0xe9
  44fc7f:	add    ebx,DWORD PTR [ecx-0x5afc162c]
  44fc85:	aam    0xe9
  44fc87:	add    edx,DWORD PTR [ecx+0x4603e9d4]
  44fc8d:	aam    0xe9
  44fc8f:	add    esp,esp
  44fc91:	(bad)  
  44fc92:	jmp    0xea1be49a
  44fc97:	add    ecx,DWORD PTR [esi+edx*8-0x17]
  44fc9b:	add    esp,eax
  44fc9d:	(bad)  
  44fc9e:	jmp    0xea1975a6
  44fca3:	add    eax,DWORD PTR [ebp+0x7103e9d4]
  44fca9:	aam    0xe9
  44fcab:	add    edi,DWORD PTR [ebp-0x2c]
  44fcae:	jmp    0xea1b00b6
  44fcb3:	add    ecx,DWORD PTR [eax]
  44fcb5:	(bad)  
  44fcb6:	jmp    0xea1b28be
  44fcbb:	add    eax,DWORD PTR [eax]
  44fcbd:	(bad)  
  44fcbe:	jmp    0x11b10c6
  44fcc3:	jmp    0xe944a029
  44fcc8:	popa   
  44fcc9:	(bad)  
  44fcca:	(bad)  
  44fccb:	call   0xe944a831
  44fcd0:	popa   
  44fcd1:	sar    ch,cl
  44fcd3:	call   0x44fcd8
	...
  44fce8:	popa   
  44fce9:	(bad)  
  44fcea:	sti    
  44fceb:	call   0xe942d751
  44fcf0:	popa   
  44fcf1:	fwait
  44fcf2:	(bad)  
  44fcf3:	call   0xe944c459
  44fcf8:	popa   
  44fcf9:	ret    
  44fcfa:	(bad)  
  44fcfb:	call   0xe944ac61
  44fd00:	popa   
  44fd01:	retf   
  44fd02:	(bad)  
  44fd03:	call   0xe944b469
  44fd08:	popa   
  44fd09:	mov    bl,0xff
  44fd0b:	call   0xe944dc71
  44fd10:	popa   
  44fd11:	mov    ebx,0xe761e8ff
  44fd16:	(bad)  
  44fd17:	call   0xe944e07d
  44fd1c:	popa   
  44fd1d:	iret   
  44fd1e:	(bad)  
  44fd1f:	call   0xe944e885
  44fd24:	popa   
  44fd25:	xlat   BYTE PTR ds:[ebx]
  44fd26:	(bad)  
  44fd27:	call   0xe944d08d
  44fd2c:	popa   
  44fd2d:	(bad)  
  44fd2e:	std    
  44fd2f:	call   0xe944d895
  44fd34:	popa   
  44fd35:	pop    es
  44fd36:	(bad)  
  44fd37:	call   0xe943009d
  44fd3c:	popa   
  44fd3d:	out    dx,eax
  44fd3e:	std    
  44fd3f:	call   0xe94308a5
  44fd44:	popa   
  44fd45:	idiv   ebp
  44fd47:	call   0xe942f0ad
	...
  44fd60:	popa   
  44fd61:	pop    ds
  44fd62:	(bad)  
  44fd63:	(bad)  
  44fd64:	jnp    0x44fd3f
  44fd66:	loop   0x44fd6e
  44fd68:	mov    ebx,ecx
  44fd6a:	into   
  44fd6b:	push   es
  44fd6c:	mov    ebx,ecx
  44fd6e:	fiadd  DWORD PTR [esi]
  44fd70:	jnp    0x44fd4b
  44fd72:	mov    BYTE PTR [esi],0x7b
  44fd75:	(bad)  
  44fd77:	push   es
  44fd78:	dec    ebx
  44fd79:	(bad)  [ebx+0x77d94b04]
  44fd7f:	add    al,0x3b
  44fd81:	fld    DWORD PTR [ebx-0x3d26c4fc]
  44fd87:	push   es
  44fd88:	dec    ebx
  44fd89:	fldcw  WORD PTR [esi-0x4526b4fa]
  44fd8f:	push   es
  44fd90:	cmp    ebx,ecx
  44fd92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44fd93:	push   es
  44fd94:	cmp    ebx,ecx
  44fd96:	mov    dl,0x6
  44fd98:	or     ebx,ecx
  44fd9a:	sahf   
  44fd9b:	push   es
  44fd9c:	or     ebx,ecx
  44fd9e:	stos   BYTE PTR es:[edi],al
  44fd9f:	push   es
  44fda0:	sti    
  44fda1:	fcom   DWORD PTR [esi-0x5d2704fa]
  44fda7:	push   es
  44fda8:	or     ebx,ecx
  44fdaa:	mov    es,WORD PTR [esi]
  44fdac:	or     ebx,ecx
  44fdae:	call   0xfb06:0x86d8fb06
  44fdb5:	fcom   DWORD PTR [edx+0x7ed8cb06]
  44fdbb:	push   es
  44fdbc:	retf   
  44fdbd:	fmul   DWORD PTR [edx+0x76d8bb06]
  44fdc3:	push   es
	...
  44fdd8:	mov    ebx,0xcb0682d8
  44fddd:	fsubr  DWORD PTR [esi+0x6]
  44fde0:	retf   
  44fde1:	fdivr  DWORD PTR [edx+0x6]
  44fde4:	mov    ebx,0xbb0666d8
  44fde9:	fdiv   DWORD PTR [edx+0x6]
  44fdec:	mov    ebx,eax
  44fdee:	pop    esi
  44fdef:	push   es
  44fdf0:	(bad)  
  44fdf2:	add    ch,BYTE PTR [edx+0x64]
  44fdf5:	repnz add bl,BYTE PTR [esi+0x5c]
  44fdf9:	repnz add ah,BYTE PTR [edx+0x64]
  44fdfd:	repnz add dl,BYTE PTR [esi+0x5c]
  44fe01:	repnz add bl,BYTE PTR [edx+0x64]
  44fe05:	repnz add cl,BYTE PTR [esi+0x5c]
  44fe09:	repnz add dl,BYTE PTR [edx+0x64]
  44fe0d:	repnz add cl,BYTE PTR [ebx]
  44fe10:	pop    esi
  44fe11:	repnz add bh,bh
  44fe14:	popa   
  44fe15:	repnz add al,BYTE PTR [ebx]
  44fe18:	pop    esi
  44fe19:	repnz add dh,bh
  44fe1c:	popa   
  44fe1d:	repnz add dh,BYTE PTR [esi]
  44fe20:	pop    esp
  44fe21:	repnz add bh,BYTE PTR [edx]
  44fe24:	repnz add ch,BYTE PTR fs:[esi]
  44fe28:	pop    esp
  44fe29:	repnz add dh,BYTE PTR [edx]
  44fe2c:	repnz add ah,BYTE PTR fs:[esi]
  44fe30:	pop    esp
  44fe31:	repnz add ch,BYTE PTR [edx]
  44fe34:	repnz add bl,BYTE PTR fs:[esi]
  44fe38:	pop    esp
  44fe39:	repnz add ah,BYTE PTR [edx]
	...
  44fe50:	repnz add dl,BYTE PTR fs:[esi]
  44fe54:	pop    esp
  44fe55:	repnz add bl,BYTE PTR [edx]
  44fe58:	repnz add cl,BYTE PTR fs:[esi]
  44fe5c:	pop    esp
  44fe5d:	repnz add dl,BYTE PTR [edx]
  44fe60:	repnz add al,BYTE PTR fs:[esi]
  44fe64:	pop    esp
  44fe65:	repnz add cl,BYTE PTR [edx]
  44fe68:	fs repnz add bh,dh
  44fe6c:	pop    edi
  44fe6d:	repnz add al,BYTE PTR [edx]
  44fe70:	fs repnz add dh,dh
  44fe74:	pop    edi
  44fe75:	repnz add bh,dl
  44fe78:	addr16 repnz add ch,dh
  44fe7c:	pop    edi
  44fe7d:	fldl2t 
  44fe7f:	add    edx,DWORD PTR [eax+0x7c03e9d5]
  44fe85:	aad    0xe9
  44fe87:	add    edi,DWORD PTR [eax-0x2b]
  44fe8a:	jmp    0xea1aa292
  44fe8f:	add    eax,DWORD PTR [eax-0x73fc162b]
  44fe95:	aad    0xe9
  44fe97:	add    ecx,DWORD PTR [eax-0x6bfc162b]
  44fe9d:	aad    0xe9
  44fe9f:	add    esi,DWORD PTR [eax]
  44fea1:	aad    0xe9
  44fea3:	add    ebx,DWORD PTR [edx*8-0x2ae7fc17]
  44feaa:	jmp    0xea1a02b2
  44feaf:	add    esp,DWORD PTR [eax]
  44feb1:	aad    0xe9
  44feb3:	add    eax,DWORD PTR [eax]
	...
  44fec5:	add    BYTE PTR [eax],al
  44fec7:	add    ah,ch
  44fec9:	aam    0xe9
  44fecb:	add    ebp,eax
  44fecd:	aam    0xe9
  44fecf:	add    esi,esp
  44fed1:	aam    0xe9
  44fed3:	add    edx,eax
  44fed5:	aam    0xe9
  44fed7:	add    edi,DWORD PTR [esp+edx*8-0x2b47fc17]
  44fede:	jmp    0xea19e2e6
  44fee3:	add    eax,eax
  44fee5:	aam    0xe9
  44fee7:	add    ecx,esp
  44fee9:	aam    0xe9
  44feeb:	add    ecx,eax
  44feed:	aam    0xe9
  44feef:	add    edx,esp
  44fef1:	aam    0xe9
  44fef3:	add    esi,eax
  44fef5:	aam    0xe9
  44fef7:	add    ebx,esp
  44fef9:	aam    0xe9
  44fefb:	add    ebx,eax
  44fefd:	aam    0xe9
  44feff:	add    eax,DWORD PTR [esp+edx*8-0x17]
  44ff03:	add    esp,eax
  44ff05:	aam    0xe9
  44ff07:	add    ebp,DWORD PTR [esp+edx*8]
  44ff0a:	add    cl,ch
  44ff0c:	popa   
  44ff0d:	jg     0x44ff0c
  44ff0f:	call   0xe9426a75
  44ff14:	popa   
  44ff15:	xchg   ebp,edi
  44ff17:	call   0xe942727d
  44ff1c:	popa   
  44ff1d:	outs   dx,DWORD PTR ds:[esi]
  44ff1e:	std    
  44ff1f:	call   0xe9429a85
  44ff24:	popa   
  44ff25:	ja     0x44ff24
  44ff27:	call   0xe942a28d
	...
  44ff40:	popa   
  44ff41:	lahf   
  44ff42:	std    
  44ff43:	call   0xe9428aa9
  44ff48:	popa   
  44ff49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44ff4a:	std    
  44ff4b:	call   0xe94292b1
  44ff50:	popa   
  44ff51:	(bad)  
  44ff52:	std    
  44ff53:	call   0xe942bab9
  44ff58:	popa   
  44ff59:	xchg   edi,eax
  44ff5a:	std    
  44ff5b:	call   0xe942c2c1
  44ff60:	popa   
  44ff61:	mov    edi,0xab61e8fd
  44ff66:	std    
  44ff67:	call   0xe942c6cd
  44ff6c:	popa   
  44ff6d:	mov    bl,0xfd
  44ff6f:	call   0xe942aed5
  44ff74:	popa   
  44ff75:	(bad)  
  44ff77:	call   0xe942b6dd
  44ff7c:	popa   
  44ff7d:	jecxz  0x44ff7c
  44ff7f:	call   0xe942dee5
  44ff84:	popa   
  44ff85:	retf   
  44ff86:	std    
  44ff87:	call   0xe942e6ed
  44ff8c:	popa   
  44ff8d:	sar    ebp,cl
  44ff8f:	call   0xe942cef5
  44ff94:	popa   
  44ff95:	sti    
  44ff96:	sti    
  44ff97:	dec    ebx
  44ff99:	aad    0x2
  44ff9b:	add    eax,0x4eed5cb
  44ffa0:	mov    ebx,0x4fad5
	...
  44ffb5:	add    BYTE PTR [eax],al
  44ffb7:	add    BYTE PTR [ebx-0x74fb192b],bh
  44ffbd:	aad    0xf2
  44ffbf:	add    al,0x8b
  44ffc1:	aad    0xde
  44ffc3:	add    al,0x7b
  44ffc5:	aad    0xea
  44ffc7:	add    al,0x7b
  44ffc9:	aad    0xd6
  44ffcb:	add    al,0x8b
  44ffcd:	aad    0xe2
  44ffcf:	add    al,0x8b
  44ffd1:	aad    0xce
  44ffd3:	add    al,0x7b
  44ffd5:	aad    0xda
  44ffd7:	add    al,0x7b
  44ffd9:	aad    0xc6
  44ffdb:	add    al,0x4b
  44ffdd:	fst    st(2)
  44ffdf:	add    al,0x4b
  44ffe1:	fnstsw WORD PTR [esi-0x3522c4fc]
  44ffe7:	add    al,0x3b
  44ffe9:	fnsave [esi-0x3d22b4fc]
  44ffef:	add    al,0x4b
  44fff1:	(bad)  [esi-0x4522c4fc]
  44fff7:	add    al,0x3b
  44fff9:	frstor [esi-0x4d22f4fc]
  44ffff:	add    al,0xb
  450001:	fstp   QWORD PTR [esi-0x552304fc]
  450007:	add    al,0xfb
  450009:	fcom   QWORD PTR [esi-0x5d22f4fc]
  45000f:	add    al,0xb
  450011:	fisttp QWORD PTR [esi-0x652304fc]
  450017:	add    al,0xfb
  450019:	fadd   QWORD PTR [esi+0x4]
	...
  45002f:	add    bl,cl
  450031:	fcom   QWORD PTR [edx+0x7edccb04]
  450037:	add    al,0x62
  450039:	add    al,BYTE PTR [ebx]
  45003b:	mov    bl,BYTE PTR [esi+0x2]
  45003e:	add    edi,DWORD PTR [esi+0x66]
  450041:	add    al,BYTE PTR [ebx]
  450043:	sbb    BYTE PTR [esi+0x2],0x3
  450047:	jbe    0x4500af
  450049:	add    al,BYTE PTR [ebx]
  45004b:	jp     0x4500ab
  45004d:	add    al,BYTE PTR [ebx]
  45004f:	outs   dx,BYTE PTR ds:[esi]
  450050:	data16 add al,BYTE PTR [ebx]
  450053:	jb     0x4500b3
  450055:	add    al,BYTE PTR [ebx]
  450057:	data16 data16 add al,BYTE PTR [ebx]
  45005b:	push   0x5e
  45005d:	add    al,BYTE PTR [ebx]
  45005f:	pop    esi
  450060:	data16 add al,BYTE PTR [ebx]
  450063:	bound  ebx,QWORD PTR [esi+0x2]
  450066:	add    edx,DWORD PTR [esi+0x66]
  450069:	add    al,BYTE PTR [ebx]
  45006b:	pop    edx
  45006c:	pop    esi
  45006d:	add    al,BYTE PTR [ebx]
  45006f:	dec    esi
  450070:	data16 add al,BYTE PTR [ebx]
  450073:	push   edx
  450074:	pop    esi
  450075:	add    al,BYTE PTR [ebx]
  450077:	inc    esi
  450078:	data16 add al,BYTE PTR [ebx]
  45007b:	dec    edx
  45007c:	pop    esi
  45007d:	add    al,BYTE PTR [ebx]
  45007f:	data16 add al,BYTE PTR ds:[ebx]
  450083:	inc    edx
  450084:	pop    esi
  450085:	add    al,BYTE PTR [ebx]
  450087:	data16 add al,BYTE PTR ss:[ebx]
  45008b:	cmp    bl,BYTE PTR [esi+0x2]
  45008e:	add    ebp,DWORD PTR [esi]
  450090:	data16 add al,BYTE PTR [ebx]
  450093:	xor    al,BYTE PTR [eax]
	...
  4500a5:	add    BYTE PTR [eax],al
  4500a7:	add    BYTE PTR [esi+0x2],bl
  4500aa:	add    esp,DWORD PTR [esi]
  4500ac:	data16 add al,BYTE PTR [ebx]
  4500af:	sub    bl,BYTE PTR [esi+0x2]
  4500b2:	add    ebx,DWORD PTR [esi]
  4500b4:	data16 add al,BYTE PTR [ebx]
  4500b7:	and    bl,BYTE PTR [esi+0x2]
  4500ba:	add    edx,DWORD PTR [esi]
  4500bc:	data16 add al,BYTE PTR [ebx]
  4500bf:	sbb    bl,BYTE PTR [esi+0x2]
  4500c2:	add    ecx,DWORD PTR [esi]
  4500c4:	data16 fldl2t 
  4500c7:	add    esi,DWORD PTR [eax-0x23]
  4500ca:	jmp    0xea2264d2
  4500cf:	add    ebx,DWORD PTR [eax-0x23]
  4500d2:	jmp    0xea20bcda
  4500d7:	add    esp,DWORD PTR [eax-0x23]
  4500da:	jmp    0xea20b4e2
  4500df:	add    ebp,DWORD PTR [eax-0x73fc1625]
  4500e5:	fucomi st,st(1)
  4500e7:	add    edx,DWORD PTR [eax-0x7bfc1625]
  4500ed:	fucomi st,st(1)
  4500ef:	add    edi,DWORD PTR [eax-0x25]
  4500f2:	jmp    0xea209cfa
  4500f7:	add    eax,DWORD PTR [eax-0x6bfc1625]
  4500fd:	fucomi st,st(1)
  4500ff:	add    ecx,DWORD PTR [eax+0x2c03e9db]
  450105:	fucomi st,st(1)
  450107:	add    esi,DWORD PTR [eax]
  450109:	fucomi st,st(1)
  45010b:	add    eax,DWORD PTR [eax]
	...
  45011d:	add    BYTE PTR [eax],al
  45011f:	add    BYTE PTR [ebx+0x6f03e9d8],al
  450125:	fsubr  st,st(1)
  450127:	add    ebx,DWORD PTR [ebx-0x28]
  45012a:	jmp    0xea1d6832
  45012f:	add    edx,DWORD PTR [eax-0x28]
  450132:	jmp    0xea1d753a
  450137:	add    edx,DWORD PTR [edi-0x28]
  45013a:	jmp    0xea1f1842
  45013f:	add    esp,DWORD PTR [ebx-0x28]
  450142:	jmp    0xea1f104a
  450147:	add    edi,ebx
  450149:	fldl2t 
  45014b:	add    eax,DWORD PTR [edi]
  45014d:	fucompp 
  45014f:	add    esi,eax
  450151:	fld    DWORD PTR [eax]
  450153:	jmp    0xe944fdb9
  450158:	popa   
  450159:	add    BYTE PTR [eax],al
  45015b:	jmp    0xe94515c1
  450160:	popa   
  450161:	clc    
  450162:	(bad)  
  450163:	call   0xe9450dc9
  450168:	popa   
  450169:	adc    BYTE PTR [eax],al
  45016b:	jmp    0xe94525d1
  450170:	popa   
  450171:	or     eax,DWORD PTR [eax]
  450173:	jmp    0xe9451dd9
  450178:	popa   
  450179:	and    BYTE PTR [eax],al
  45017b:	jmp    0xe94535e1
  450180:	popa   
  450181:	sbb    BYTE PTR [eax],al
  450183:	jmp    0x450188
	...
  450198:	popa   
  450199:	sub    al,0x0
  45019b:	jmp    0xe9453201
  4501a0:	popa   
  4501a1:	inc    esp
  4501a2:	add    cl,ch
  4501a4:	popa   
  4501a5:	sub    BYTE PTR [eax],al
  4501a7:	jmp    0xe9453e0d
  4501ac:	popa   
  4501ad:	inc    eax
  4501ae:	add    cl,ch
  4501b0:	popa   
  4501b1:	push   esp
  4501b2:	add    cl,ch
  4501b4:	popa   
  4501b5:	(bad)  
  4501b6:	neg    DWORD PTR [ebp+esi*2+0x5e]
  4501ba:	cmp    eax,0x22b4240a
  4501bf:	jmp    0x947b5e0
  4501c4:	data16 fld DWORD PTR [eax]
  4501c7:	scas   al,BYTE PTR es:[edi]
  4501c8:	fwait
  4501c9:	not    DWORD PTR [esi]
  4501cb:	jmp    0x24c8db31
  4501d0:	jno    0x45016b
  4501d2:	ins    DWORD PTR es:[edi],dx
  4501d3:	out    0x24,al
  4501d5:	mov    ah,0xfe
  4501d7:	sub    BYTE PTR [esi-0x27],bl
  4501da:	add    BYTE PTR [edx-0x55],ah
  4501dd:	mov    edx,0xe5350007
  4501e2:	jge    0x4501e8
  4501e4:	jge    0x4501c0
  4501e6:	add    BYTE PTR [ebx-0x2f101f45],al
  4501ec:	dec    eax
  4501ed:	adc    eax,0x62c574ef
  4501f2:	xor    eax,0x1fa07023
  4501f7:	pop    esi
  4501f8:	adc    DWORD PTR [ebp+0xc483],esi
	...
  45020e:	add    BYTE PTR [eax],al
  450210:	fs cwde 
  450212:	ret    0xcb08
  450215:	push   ds
  450216:	xor    eax,0xd9bb1a
  45021b:	add    BYTE PTR [eax-0x60],al
  45021e:	and    ecx,DWORD PTR [edi]
  450220:	adc    eax,0x4425019d
  450225:	fld    QWORD PTR [eax]
  450227:	add    BYTE PTR [edx],al
  450229:	popf   
  45022a:	add    BYTE PTR [eax],al
  45022c:	jnp    0x4501fa
  45022e:	shl    bh,cl
  450230:	pop    edx
  450231:	fs xor eax,0x115080a
  450237:	jne    0x4501c0
  450239:	pop    edx
  45023a:	xor    eax,0xf85a7a1a
  45023f:	add    dl,dh
  450241:	fadd   QWORD PTR [ebx-0x761e9ebb]
  450247:	push   ebp
  450248:	cmp    eax,0x3a05e01e
  45024d:	or     ebp,esi
  45024f:	(bad)  
  450250:	cmp    ebx,ecx
  450252:	add    BYTE PTR [ebp+0x36947],cl
  450258:	mov    eax,0xcbfef418
  45025d:	pop    ss
  45025e:	mov    eax,DWORD PTR [ebp+0x68]
  450261:	in     al,0xa6
  450263:	inc    eax
  450264:	or     bl,BYTE PTR [eax-0x20]
  450267:	cmp    BYTE PTR [edx+0x62890300],bh
  45026d:	vcmpss xmm4,xmm2,DWORD PTR [ecx],0x80
  450272:	pusha  
  450273:	inc    BYTE PTR [eax]
	...
  450285:	add    BYTE PTR [eax],al
  450287:	add    BYTE PTR [ebp-0x22],dl
  45028a:	sbb    eax,0xfbf8a783
  45028f:	mov    bl,BYTE PTR [edi+0x22ae061f]
  450295:	add    BYTE PTR [edx+0x48695de0],al
  45029b:	adc    ah,cl
  45029d:	adc    eax,0xf84efcf1
  4502a2:	xor    DWORD PTR [ebp+0x68],0xe0fc5802
  4502a9:	inc    ebp
  4502aa:	stc    
  4502ab:	sti    
  4502ac:	mov    al,ds:0x45fe607f
  4502b1:	inc    DWORD PTR cs:[edx-0x3d00f7d9]
  4502b8:	loope  0x4502f7
  4502ba:	std    
  4502bb:	(bad)  
  4502bd:	inc    BYTE PTR [ecx-0x3dff97c3]
  4502c3:	call   0xf81be5c8
  4502c8:	jmp    0x2745fc12
  4502cd:	pop    ds
  4502ce:	cmp    BYTE PTR ds:0xf7c20041,0xa7
  4502d5:	pop    ds
  4502d6:	ret    0x9f83
  4502d9:	fild   WORD PTR [edx]
  4502db:	ret    
  4502dc:	loope  0x450272
  4502de:	add    dl,BYTE PTR [eax]
  4502e0:	iret   
  4502e1:	add    al,0xeb
  4502e3:	aam    0x3d
  4502e5:	and    edx,ebp
  4502e7:	ret    
  4502e8:	dec    edx
  4502e9:	mov    BYTE PTR [edx],0x0
	...
  450300:	bound  edi,QWORD PTR [edi]
  450302:	xor    DWORD PTR [ebp+0x60],0xa094e12
  450309:	cmp    ch,dl
  45030b:	not    DWORD PTR ds:0x41479ed9
  450311:	sbb    BYTE PTR [ecx-0x16269fd3],dl
  450317:	shl    cl,0x75
  45031a:	fiadd  DWORD PTR [ebx-0x79]
  45031d:	fist   DWORD PTR [ecx-0x16269fdf]
  450323:	shr    ch,0x9d
  450326:	retf   0xe1c0
  450329:	jne    0x450316
  45032b:	and    ecx,DWORD PTR [esi-0x22]
  45032e:	push   0x47
  450330:	sbb    esi,0xb887812a
  450336:	jmp    0x4743:0xeb75e1c0
  45033d:	fisubr WORD PTR [edx+0x47]
  450340:	and    edx,0xd72f812a
  450346:	or     DWORD PTR [edi-0x61],edx
  450349:	push   esi
  45034a:	pushf  
  45034b:	and    BYTE PTR [edi+0x41476a16],dl
  450351:	fsubr  DWORD PTR [edx]
  450353:	in     al,dx
  450354:	loop   0x450349
  450356:	or     eax,0xca9d75dd
  45035b:	shl    cl,0x75
  45035e:	mov    edx,0x1eb6ff43
  450363:	inc    edi
	...
  450378:	pusha  
  450379:	cdq    
  45037a:	jmp    0x9c376582
  45037f:	and    cl,ch
  450381:	pushf  
  450382:	or     cl,BYTE PTR ds:0x764e1fc
  450388:	(bad)  
  45038a:	jmp    0xc723260f
  45038f:	mov    bl,0xf5
  450391:	pushf  
  450392:	jmp    0x4503b7
  450394:	(bad)  
  450395:	fldl2t 
  450397:	shr    BYTE PTR ds:0x230a009d,0x57
  45039e:	jne    0x45039a
  4503a0:	mov    eax,ds:0xa4a62384
  4503a5:	mov    dh,0xf6
  4503a7:	and    al,0x40
  4503a9:	pop    ecx
  4503aa:	jne    0x450377
  4503ac:	outs   dx,BYTE PTR ds:[esi]
  4503ad:	test   dh,bh
  4503af:	cmp    BYTE PTR [esi+0x22e900d8],0x5f
  4503b6:	cmp    eax,0x84356ca
  4503bb:	fs gs pop ebx
  4503be:	add    ebp,ecx
  4503c0:	loop   0x4503db
  4503c2:	cld    
  4503c3:	adc    DWORD PTR gs:[edi],edx
  4503c6:	and    DWORD PTR [edx+eax*4+0x2456c3d8],0xffffffb6
  4503ce:	mul    BYTE PTR [ebx+eax*4+0x5f0b7559]
  4503d5:	test   dh,bh
  4503d7:	push   eax
  4503d8:	push   es
  4503d9:	fadd   DWORD PTR [eax]
  4503db:	jmp    0x4503e0
	...
  4503f0:	mov    ds:0x670a3d5e,al
  4503f5:	inc    ebx
  4503f6:	or     BYTE PTR [ebp+eiz*2+0x5b],dh
  4503fa:	add    ebp,ecx
  4503fc:	loop   0x450417
  4503fe:	cld    
  4503ff:	adc    eax,0x8c8316b1
  450404:	arpl   WORD PTR [ecx+0x579f374],di
  45040a:	idiv   dh
  45040c:	mov    DWORD PTR [esi+0x3d],edx
  45040f:	retf   0x1665
  450412:	call   0xf72f3b1a
  450417:	push   0xffffffa3
  450419:	mov    dh,0x2
  45041b:	stos   BYTE PTR es:[edi],al
  45041c:	(bad)  [ebx+0x33]
  45041f:	sub    DWORD PTR [ebx+0x5f21def3],edx
  450425:	fld    DWORD PTR [eax]
  450427:	add    al,bh
  450429:	pop    ecx
  45042a:	xor    eax,0x831b3923
  45042f:	inc    ebp
  450430:	push   0x3e83c3d9
  450435:	mov    edx,0x9078c2f5
  45043a:	xor    eax,DWORD PTR [eax+0x6e]
  45043d:	xlat   BYTE PTR ds:[ebx]
  45043e:	call   0x11b0e70
  450443:	ret    
  450444:	jecxz  0x450499
  450446:	out    dx,al
  450447:	jmp    esp
  450449:	sbb    eax,ebp
  45044b:	sbb    ah,BYTE PTR [ebp+0xe]
  45044e:	out    dx,eax
  45044f:	adc    esi,0xffffffe3
  450452:	add    esi,DWORD PTR [ebp+0x0]
	...
  450465:	add    BYTE PTR [eax],al
  450467:	add    BYTE PTR [ebp+0x44fea7fd],bh
  45046d:	push   cs
  45046e:	ret    
  45046f:	call   0x45e13f
  450474:	mov    BYTE PTR [edx+0x35],bl
  450477:	and    ecx,eax
  450479:	sbb    al,BYTE PTR [ebx+0x6595bd7d]
  45047f:	add    eax,0x9239838
  450484:	dec    eax
  450485:	pop    edx
  450486:	xor    eax,0x831a7e23
  45048b:	jge    0x45050a
  45048d:	in     eax,0x63
  45048f:	add    eax,0x32397f8
  450494:	dec    eax
  450495:	pop    edx
  450496:	ins    DWORD PTR es:[edi],dx
  450497:	push   es
  450498:	stos   DWORD PTR es:[edi],eax
  450499:	mov    ch,dh
  45049b:	cmp    BYTE PTR [esi-0x73d0a46],0x97
  4504a2:	and    ecx,DWORD PTR [ecx]
  4504a4:	mov    BYTE PTR [ebp+0x6d],dl
  4504a7:	add    BYTE PTR [edx-0x76],cl
  4504aa:	mul    bh
  4504ac:	popf   
  4504ad:	adc    ebp,edi
  4504af:	(bad)  
  4504b0:	clc    
  4504b1:	add    al,0xbe
  4504b3:	add    BYTE PTR [edx+0x2],ah
  4504b6:	add    eax,ebx
  4504b8:	loop   0x450457
  4504ba:	cld    
  4504bb:	add    BYTE PTR [edi+0x244ceb00],dh
  4504c1:	xor    dl,bl
  4504c3:	ret    
  4504c4:	loop   0x45046b
  4504c6:	std    
  4504c7:	add    BYTE PTR [edi+0x48eaf8],cl
	...
  4504dd:	add    BYTE PTR [eax],al
  4504df:	add    BYTE PTR [eax+edi*1],cl
  4504e2:	fcmovb st,st(3)
  4504e4:	loope  0x4504b3
  4504e6:	dec    BYTE PTR [edi]
  4504e8:	ja     0x4504ea
  4504ea:	jmp    0x450520
  4504ec:	hlt    
  4504ed:	pop    edi
  4504ee:	fcmovb st,st(3)
  4504f0:	cli    
  4504f1:	sahf   
  4504f2:	add    eax,DWORD PTR [eax]
  4504f4:	bound  eax,QWORD PTR [ebx+0x7e]
  4504f7:	jne    0x45048a
  4504f9:	ret    0xfe51
  4504fc:	mov    ebp,0x6200038a
  450501:	ret    
  450502:	jle    0x450579
  450504:	pusha  
  450505:	loop   0x450558
  450507:	std    
  450508:	loopne 0x450547
  45050a:	push   ds
  45050b:	jmp    DWORD PTR [eax+0x67234083]
  450511:	ret    
  450512:	mov    esi,0xf3042783
  450517:	imul   esi,DWORD PTR [edx-0x66],0x47
  45051b:	cmc    
  45051c:	xchg   ebp,eax
  45051d:	mov    edi,0x1683d86
  450522:	inc    eax
  450523:	and    esp,ecx
  450525:	xor    eax,0xdaa0fe1e
  45052a:	push   edi
  45052b:	cmc    
  45052c:	jne    0x45050d
  45052e:	xchg   BYTE PTR ds:0x23400148,bh
  450534:	loope  0x45056b
  450536:	push   ds
  450537:	cld    
  450538:	and    BYTE PTR [ebx+0x65a23358],al
  45053e:	add    eax,ebp
  450540:	mov    bh,0xd9
  450542:	jmp    0x45054a
	...
  450557:	add    BYTE PTR [edx+0x1c],ah
  45055a:	push   0x57
  45055c:	pusha  
  45055d:	mov    ecx,0x95e0ff54
  450562:	or     al,BYTE PTR [ecx]
  450564:	and    DWORD PTR [esp+0x25],ebx
  450568:	daa    
  450569:	sbb    edx,ecx
  45056b:	adc    DWORD PTR [edi],0xfffffff0
  45056e:	lods   eax,DWORD PTR ds:[esi]
  45056f:	test   DWORD PTR [edi+0xc4ee9c7],ecx
  450575:	clc    
  450576:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  450577:	xlat   BYTE PTR ds:[ebx]
  450578:	or     eax,0x44eca9f0
  45057d:	fldl2t 
  45057f:	add    esp,DWORD PTR [ecx]
  450581:	pop    esp
  450582:	add    al,0x15
  450584:	mov    ds:0x2784e466,al
  450589:	mov    esp,0x6de1c4dc
  45058e:	jmp    0x4505b3
  450590:	inc    edi
  450591:	(bad)  
  450592:	push   0x3f
  450594:	adc    esi,0xbc87852a
  45059a:	jmp    0x4702:0xe96de2c4
  4505a1:	xlat   BYTE PTR ds:[ebx]
  4505a2:	inc    ecx
  4505a3:	jnp    0x45055c
  4505a5:	out    dx,eax
  4505a6:	cmp    eax,0xe9d9bac5
  4505ab:	add    esp,DWORD PTR [edx+0x1c]
  4505ae:	jno    0x450589
  4505b0:	(bad)  
  4505b1:	out    dx,eax
  4505b2:	and    eax,0xda6de1c5
  4505b7:	inc    ebx
  4505b8:	not    esi
  4505ba:	adc    ecx,ebp
	...
  4505d0:	jne    0x4505c1
  4505d2:	or     eax,0x4738ac5
  4505d7:	fnstenv [ebp+0x5b]
  4505da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4505db:	and    al,0x63
  4505dd:	sbb    al,0x6a
  4505df:	push   edi
  4505e0:	pusha  
  4505e1:	mov    ecx,0x1677500
  4505e6:	imul   ebp,esp,0x2a
  4505e9:	out    0x82,eax
  4505eb:	sub    al,0x7f
  4505ed:	in     eax,dx
  4505ee:	rcl    ecx,0xc0
  4505f1:	in     al,0xf6
  4505f3:	(bad)  
  4505f4:	fisubr WORD PTR [ebx+eiz*1-0x49fdd915]
  4505fb:	lds    ecx,FWORD PTR [edx]
  4505fd:	out    0xe7,eax
  4505ff:	jmp    0x450635
  450601:	out    0xf6,eax
  450603:	push   0xffffffac
  450605:	fild   WORD PTR [eax]
  450607:	xor    al,0x5f
  450609:	bound  edi,QWORD PTR ds:0x23ac6103
  45060f:	push   0x3c
  450611:	mov    edx,0x64deaa03
  450616:	push   cs
  450617:	call   0x4e23f5b8
  45061c:	or     ah,bh
  45061e:	imul   BYTE PTR [edx-0x17e55312]
  450624:	xchg   esp,eax
  450625:	mov    edx,0xdb872483
  45062a:	ret    
  45062b:	push   0x2c
  45062d:	(bad)  [eax]
  45062f:	fst    QWORD PTR [edi+0x1]
  450632:	jle    0x450689
	...
  450648:	call   0xf6e6:0x9523e7e6
  45064f:	push   0xc
  450651:	fild   WORD PTR [eax]
  450653:	mov    ah,0x6e
  450655:	bound  edi,QWORD PTR ds:0x23ac60d3
  45065b:	push   0x4c
  45065d:	mov    edx,0x64de29fe
  450662:	push   cs
  450663:	call   0x8623f594
  450668:	call   0x1aac:0xde2af6e6
  45066f:	add    BYTE PTR [edx-0x51],bh
  450672:	and    eax,DWORD PTR [ebx-0x3cfd4afa]
  450678:	arpl   WORD PTR [esi+0x33cffec],di
  45067e:	cwde   
  45067f:	cld    
  450680:	cmp    al,0x6
  450682:	cmp    DWORD PTR [ebp+0x35],0xffffffda
  450686:	gs or  eax,eax
  450689:	cwde   
  45068a:	sbb    al,BYTE PTR [ecx]
  45068c:	xchg   BYTE PTR [edx-0x26a7ba7d],bh
  450692:	ret    
  450693:	sbb    DWORD PTR [esi-0x1],0xffffffff
  450697:	je     0x45069e
  450699:	add    bh,BYTE PTR [edx]
  45069b:	(bad)  
  45069c:	mov    esp,0x368bc305
  4506a1:	repz inc DWORD PTR [eax+ebp*1+0x5b]
  4506a6:	xor    eax,0xe81b0923
  4506ab:	and    al,BYTE PTR [eax]
	...
  4506bd:	add    BYTE PTR [eax],al
  4506bf:	add    bh,bl
  4506c1:	add    eax,0x1155e8ef
  4506c6:	out    dx,eax
  4506c7:	dec    DWORD PTR [eax-0x70]
  4506ca:	push   es
  4506cb:	add    ebp,ecx
  4506cd:	jmp    0x4506ad
  4506cf:	sbb    DWORD PTR [esi+eax*1],edi
  4506d2:	out    dx,eax
  4506d3:	ret    
  4506d4:	push   eax
  4506d5:	cwde   
  4506d6:	sbb    al,BYTE PTR [ecx]
  4506d8:	push   es
  4506d9:	mov    ebx,0xdb684583
  4506de:	ret    
  4506df:	call   0x340ce5
  4506e4:	cmp    BYTE PTR [eax-0x1422f9fa],dl
  4506ea:	fdivp  st(5),st
  4506ec:	dec    ebp
  4506ed:	push   es
  4506ee:	out    dx,eax
  4506ef:	ret    
  4506f0:	and    eax,DWORD PTR ds:0x623cfffb
  4506f6:	xor    eax,0x23988a1a
  4506fb:	and    DWORD PTR [edx+0x3d],0x22
  4506ff:	add    ah,BYTE PTR [ecx+0x65fbdcd7]
  450705:	(bad)  
  450706:	in     al,0x1c
  450708:	pop    esi
  450709:	in     al,dx
  45070a:	int    0x83
  45070c:	xlat   BYTE PTR ds:[ebx]
  45070d:	or     al,0x0
  45070f:	jbe    0x450775
  450711:	fisub  DWORD PTR [edi-0x3e0bba0a]
  450717:	mov    esp,DWORD PTR [edi-0x7ec30228]
  45071d:	jg     0x45075f
  45071f:	and    esp,DWORD PTR [eax+0x3f]
  450722:	jmp    0x4506db
	...
  450738:	sub    DWORD PTR [esi+ecx*8],edx
  45073b:	call   0xf81335a1
  450740:	loope  0x4506e7
  450742:	out    0xff,al
  450744:	xchg   esi,eax
  450745:	or     BYTE PTR [edx-0x200a78b],al
  45074b:	jl     0x45071b
  45074d:	add    al,BYTE PTR [ebx]
  45074f:	add    cl,ah
  450751:	(bad)  
  450754:	pop    esp
  450755:	mov    WORD PTR [ecx-0x14fd9e00],fs
  45075b:	mov    ds:0xc3ce6bdc,al
  450760:	loope  0x450747
  450762:	in     al,0x0
  450764:	push   edi
  450765:	or     BYTE PTR [edx-0x200a78b],al
  45076b:	jl     0x45075b
  45076d:	add    al,BYTE PTR [ebx]
  45076f:	add    cl,ah
  450771:	add    eax,0x8c5d00fd
  450776:	add    DWORD PTR [eax],0x82eb0262
  45077c:	pushf  
  45077d:	stos   DWORD PTR es:[edi],eax
  45077e:	into   
  45077f:	ret    
  450780:	loope  0x4507a7
  450782:	in     eax,0x1
  450784:	pop    ss
  450785:	adc    al,BYTE PTR [edx-0x1526a78b]
  45078b:	push   es
  45078c:	(bad)  
  45078d:	jl     0x450778
  45078f:	add    esp,DWORD PTR [edx+0x1]
  450792:	jge    0x450769
  450794:	jne    0x450782
  450796:	sub    DWORD PTR [edx+0x50eac2ef],eax
	...
  4507b0:	pop    ax
  4507b2:	je     0x4507bd
  4507b4:	popa   
  4507b5:	xchg   bx,ax
  4507b7:	jmp    0x450761
  4507b9:	jmp    0x4507a0
  4507bb:	aad    0x21
  4507bd:	pop    eax
  4507be:	pop    esp
  4507bf:	out    dx,al
  4507c0:	cmp    DWORD PTR [ebp-0x1b],esp
  4507c3:	sub    BYTE PTR [edi-0x65b11521],0x1
  4507ca:	and    esi,edx
  4507cc:	sub    eax,0x9781a9ec
  4507d1:	ret    
  4507d2:	fmul   QWORD PTR [esi+0x14]
  4507d5:	hlt    
  4507d6:	in     al,dx
  4507d7:	aad    0x15
  4507d9:	in     al,dx
  4507da:	test   eax,0xe7c38f81
  4507df:	dec    esi
  4507e0:	pop    ax
  4507e2:	adc    al,0xa
  4507e4:	popa   
  4507e5:	retw   
  4507e7:	jmp    0x450821
  4507e9:	jmp    0x450770
  4507eb:	aad    0x21
  4507ed:	pop    eax
  4507ee:	cld    
  4507ef:	in     eax,dx
  4507f0:	fsub   QWORD PTR [edi+edx*8-0x80]
  4507f4:	dec    edi
  4507f5:	fucomip st,st(2)
  4507f7:	dec    esi
  4507f8:	push   0x58
  4507fa:	in     al,0x10
  4507fc:	and    ah,BYTE PTR [esi-0x13]
  4507ff:	xor    BYTE PTR [edi],0xdb
  450802:	jmp    0xdd466656
  450807:	aad    0xb5
  450809:	jmp    0x450834
  45080b:	in     al,dx
  45080c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45080d:	in     eax,dx
  45080e:	cmp    eax,0x9c5fa1d5
  450813:	stc    
	...
  450828:	bound  edx,QWORD PTR [esi-0x521cf600]
  45082e:	and    ebp,ebx
  450830:	mov    ds:0x9723e600,al
  450835:	jecxz  0x45081e
  450837:	fistp  DWORD PTR [edx+0x156af6e3]
  45083d:	(bad)  
  45083f:	mov    esp,DWORD PTR [edi-0xd]
  450842:	fadd   QWORD PTR [edi+esi*1]
  450845:	jecxz  0x450809
  450847:	jb     0x4507de
  450849:	iret   
  45084a:	add    DWORD PTR [edx+eax*4+0x62ca3d56],ebp
  450851:	push   ss
  450852:	call   0xf728240b
  450857:	shl    DWORD PTR [eax],1
  450859:	lock not dh
  45085c:	loop   0x4508c2
  45085e:	push   cs
  45085f:	jmp    0xae23f3f8
  450864:	xor    al,0xe3
  450866:	imul   BYTE PTR [edx-0x14f19b1e]
  45086c:	pushf  
  45086d:	jmp    0x45084d
  45086f:	jno    0x45089d
  450871:	jecxz  0x450869
  450873:	stos   BYTE PTR es:[edi],al
  450874:	loop   0x4508da
  450876:	push   cs
  450877:	jmp    0xe314:0x45deeba4
  45087e:	imul   BYTE PTR [edx-0x12f19b1e]
  450884:	sub    al,0xeb
  450886:	fimul  WORD PTR [ecx-0x54]
  450889:	loop   0x450881
  45088b:	stos   BYTE PTR es:[edi],al
	...
  4508a0:	loop   0x450906
  4508a2:	push   cs
  4508a3:	in     al,0x14
  4508a5:	jmp    0x450885
  4508a7:	jge    0x45083d
  4508a9:	loop   0x4508a1
  4508ab:	sub    ah,dl
  4508ad:	fs push cs
  4508af:	out    dx,al
  4508b0:	pop    ss
  4508b1:	jmp    0x450891
  4508b3:	popa   
  4508b4:	mov    edx,fs
  4508b6:	test   BYTE PTR [eax],0x48
  4508b9:	popa   
  4508ba:	xor    eax,0x23ab8a1a
  4508bf:	cmp    DWORD PTR [esi+0x23c302b9],0x4f
  4508c6:	cli    
  4508c7:	inc    DWORD PTR [ecx+ebx*2+0x6d]
  4508cb:	push   ss
  4508cc:	mov    ebx,DWORD PTR [ebx+0x3e7e7f6]
  4508d2:	out    dx,eax
  4508d3:	(bad)  
  4508d4:	cmp    BYTE PTR [ecx+0x6d],bl
  4508d7:	push   ss
  4508d8:	dec    edx
  4508d9:	fwait
  4508da:	mul    bh
  4508dc:	jmp    0x4508e0
  4508de:	out    dx,eax
  4508df:	(bad)  
  4508e0:	js     0x45093b
  4508e2:	ins    DWORD PTR es:[edi],dx
  4508e3:	push   ss
  4508e4:	cmp    DWORD PTR [ebx+0x1b76e811],ebx
  4508ea:	out    dx,eax
  4508eb:	dec    eax
  4508ed:	mov    BYTE PTR [edx],cl
  4508ef:	add    ecx,DWORD PTR [edi+0x1649e8a3]
  4508f5:	push   es
  4508f6:	out    dx,eax
  4508f7:	ret    
  4508f8:	mov    BYTE PTR [eax-0x20b1fcfa],cl
  4508fe:	call   0xef4adf40
  450903:	ret    
	...
  450918:	js     0x4508a2
  45091a:	push   es
  45091b:	add    al,0x5e
  45091d:	in     al,0xde
  45091f:	sub    al,cl
  450921:	add    eax,0xeb5683ef
  450926:	add    DWORD PTR [esp+eiz*4+0xd],esi
  45092a:	push   ss
  45092b:	std    
  45092c:	in     al,0x5
  45092e:	ret    
  45092f:	adc    esi,0xffffffef
  450932:	repz je 0x4508f2
  450935:	or     eax,0x634fd1a
  45093a:	ret    
  45093b:	add    esi,0xffffffef
  45093e:	hlt    
  45093f:	je     0x4508fb
  450941:	or     eax,0x8362f9f7
  450946:	rol    DWORD PTR [ebx+0x6bfdf627],cl
  45094c:	outs   dx,BYTE PTR ds:[esi]
  45094d:	mov    bh,bh
  45094f:	hlt    
  450950:	xchg   ebp,eax
  450951:	stos   BYTE PTR es:[edi],al
  450952:	mov    edi,0xd3a38fe8
  450957:	mul    DWORD PTR [ecx+0x631a4976]
  45095d:	cmp    eax,0x1f1f831e
  450962:	inc    dl
  450964:	jp     0x450977
  450966:	(bad)
  450969:	jle    0x4509bc
  45096b:	push   cs
  45096c:	bound  esp,QWORD PTR [ebp+0x9]
  45096f:	call   0xf816f0b7
  450974:	and    DWORD PTR [ecx+edx*2+0xe],esi
  450978:	arpl   WORD PTR [ebp+0x9],bp
  45097b:	call   0x450980
	...
  450990:	pop    ss
  450991:	call   ecx
  450993:	mul    DWORD PTR [ecx]
  450995:	je     0x4509e7
  450997:	push   cs
  450998:	pusha  
  450999:	test   ebp,ebp
  45099b:	out    0x20,eax
  45099d:	or     dl,dl
  45099f:	mul    ecx
  4509a1:	popf   
  4509a2:	test   BYTE PTR [edx],0x8e
  4509a5:	(bad)  
  4509a6:	aam    0xb6
  4509a8:	push   cs
  4509a9:	xor    dl,dl
  4509ab:	ret    
  4509ac:	loope  0x450963
  4509ae:	cli    
  4509af:	add    dh,BYTE PTR [edi-0x8]
  4509b2:	fidiv  DWORD PTR [edx-0x3c2db80a]
  4509b8:	loope  0x450987
  4509ba:	cli    
  4509bb:	sti    
  4509bc:	outs   dx,BYTE PTR ds:[esi]
  4509bd:	loope  0x450999
  4509bf:	xchg   edi,eax
  4509c0:	fistp  DWORD PTR [edi-0x2e]
  4509c3:	adc    DWORD PTR [edi-0x14],0xfffffffd
  4509c7:	imul   edi,DWORD PTR [ebp+0x5a],0x66
  4509cb:	hlt    
  4509cc:	lds    esi,FWORD PTR [edi-0x42]
  4509cf:	cmp    DWORD PTR [edi],0xffffffd9
  4509d2:	test   DWORD PTR [eax],0x8251df47
  4509d8:	mov    dh,0xe8
  4509da:	dec    ebp
  4509db:	(bad)  
  4509dc:	loope  0x450a44
  4509de:	out    dx,eax
  4509df:	or     DWORD PTR [edi],ecx
  4509e1:	retf   0x4f51
  4509e4:	fwait
  4509e5:	call   0xd35c901f
  4509ea:	jmp    0x75cf:0xb0f15e57
  4509f1:	call   0x45e51f
	...
  450a06:	add    BYTE PTR [eax],al
  450a08:	lock in al,0x15
  450a0b:	shl    BYTE PTR [ecx+0x62eda454],cl
  450a11:	sahf   
  450a12:	retf   0x9f86
  450a15:	mov    esp,0x3c4ac6ea
  450a1a:	add    dl,dl
  450a1c:	push   ebp
  450a1d:	pop    esp
  450a1e:	ins    BYTE PTR es:[edi],dx
  450a1f:	stc    
  450a20:	inc    ebp
  450a21:	ins    DWORD PTR es:[edi],dx
  450a22:	(bad)  
  450a24:	lods   al,BYTE PTR ds:[esi]
  450a25:	in     eax,0xdd
  450a27:	shl    DWORD PTR [ecx],1
  450a29:	pop    esp
  450a2a:	push   esp
  450a2b:	cli    
  450a2c:	bound  ebp,QWORD PTR [esi-0x19]
  450a2f:	fistp  DWORD PTR [eax+0x21d1c5e5]
  450a35:	pop    esp
  450a36:	cmp    al,0xfa
  450a38:	arpl   WORD PTR [esi-0x34],bp
  450a3b:	fstp   TBYTE PTR ds:0xe1d1ade2
  450a41:	gs jecxz 0x450a48
  450a44:	gs pop ebp
  450a46:	and    al,BYTE PTR [edx+eiz*2]
  450a49:	fst    DWORD PTR [ecx-0x721809df]
  450a4f:	vpcmpgtw xmm5,xmm3,xmm7
  450a53:	add    al,0x4f
  450a55:	(bad)  
  450a56:	push   0x4f
  450a58:	pusha  
  450a59:	leave  
  450a5a:	in     al,dx
  450a5b:	(bad)
  450a5f:	jo     0x450a14
  450a61:	out    dx,eax
  450a62:	sub    ah,0xbf
  450a65:	fisubr DWORD PTR [edi+eax*8-0x67]
  450a69:	retf   0x5ef4
	...
  450a80:	xchg   ebx,eax
  450a81:	sbb    ebp,eax
  450a83:	in     eax,0x95
  450a85:	out    dx,eax
  450a86:	imul   BYTE PTR [edx]
  450a88:	out    0x6d,eax
  450a8a:	push   cs
  450a8b:	in     eax,dx
  450a8c:	sub    al,0xe7
  450a8e:	fsubp  st(1),st
  450a90:	popf   
  450a91:	out    dx,eax
  450a92:	imul   BYTE PTR [edx]
  450a94:	fild   QWORD PTR [ebp+0xe]
  450a97:	in     al,0x14
  450a99:	out    0xde,eax
  450a9b:	sbb    eax,0x2af6efa7
  450aa0:	out    0x6d,eax
  450aa2:	push   cs
  450aa3:	out    dx,eax
  450aa4:	or     al,0xca
  450aa6:	call   0xf73438b3
  450aab:	push   0xffffffa5
  450aad:	rol    DWORD PTR [ebx],cl
  450aaf:	jne    0x450b19
  450ab1:	icebp  
  450ab2:	aam    0xf2
  450ab4:	xor    ch,bh
  450ab6:	ret    0xad6a
  450ab9:	xlat   BYTE PTR ds:[ebx]
  450aba:	call   FWORD PTR [ebx+0x3b]
  450abd:	pop    esp
  450abe:	jne    0x450aab
  450ac0:	xor    DWORD PTR [esi+0x11],esi
  450ac3:	rcr    DWORD PTR ds:0xe6cef6e2,0x6c
  450aca:	or     ch,dl
  450acc:	lods   eax,DWORD PTR ds:[esi]
  450acd:	fucomp st(0)
  450acf:	test   eax,0xaaf6ef1e
  450ad4:	sub    DWORD PTR [ebx+edi*8],esp
  450ad7:	scas   al,BYTE PTR es:[edi]
  450ad8:	adc    bl,BYTE PTR [ebx]
  450ada:	mov    ebp,DWORD PTR [esp+eax*1]
  450add:	fidivr DWORD PTR ds:0x23a4e6ca
  450ae3:	jmp    0x0:0x0
	...
  450af6:	add    BYTE PTR [eax],al
  450af8:	push   ds
  450af9:	repnz jmp 0x5e00:0x82eeb291
  450b01:	jecxz  0x450af9
  450b03:	je     0x450abb
  450b05:	add    al,BYTE PTR [edi-0x7cf6b308]
  450b0b:	jge    0x450ace
  450b0d:	(bad)  
  450b0f:	test   bl,ch
  450b11:	fiadd  DWORD PTR [eax]
  450b13:	add    BYTE PTR [ebx],dl
  450b15:	pop    ecx
  450b16:	sti    
  450b17:	dec    DWORD PTR [ebx*1-0x246a827d]
  450b1e:	gs adc eax,0xfff89633
  450b24:	dec    esp
  450b25:	pop    ebp
  450b26:	ins    DWORD PTR es:[edi],dx
  450b27:	or     bh,BYTE PTR [eax-0x27]
  450b2a:	jne    0x450ab1
  450b2c:	mov    ebx,edx
  450b2e:	add    al,ch
  450b30:	xlat   BYTE PTR ds:[ebx]
  450b31:	adc    eax,0x5d38ffef
  450b36:	ins    DWORD PTR es:[edi],dx
  450b37:	push   ss
  450b38:	jns    0x450ac9
  450b3a:	add    eax,0xef11eae8
  450b3f:	dec    eax
  450b41:	xchg   edi,eax
  450b42:	or     al,BYTE PTR [ebx]
  450b44:	cmp    al,0x5f
  450b46:	push   0x0
  450b48:	cmp    ebx,edx
  450b4a:	call   0xef5b3ba8
  450b4f:	ret    
  450b50:	enter  0x688,0x3
  450b54:	xchg   esi,eax
  450b55:	in     al,dx
  450b56:	fiadd  WORD PTR [esi+0x13]
  450b59:	push   ss
  450b5a:	out    dx,eax
  450b5b:	add    DWORD PTR [eax],0x0
	...
  450b6e:	add    BYTE PTR [eax],al
  450b70:	scas   al,BYTE PTR es:[edi]
  450b71:	jecxz  0x450b74
  450b73:	jne    0x450bed
  450b75:	add    eax,0x15ccfb42
  450b7a:	ret    
  450b7b:	or     DWORD PTR [esi-0x11],0xfffffffa
  450b7f:	je     0x450b86
  450b81:	add    ah,BYTE PTR [esi]
  450b83:	sti    
  450b84:	mov    esp,0x4e83c315
  450b89:	out    dx,eax
  450b8a:	repz je 0x450bef
  450b8d:	loope  0x450b69
  450b8f:	and    ebx,edx
  450b91:	push   esi
  450b92:	mov    DWORD PTR [ebx+0x6d01ea57],0xfae74892
  450b9c:	lds    ebp,FWORD PTR [esi-0x3d]
  450b9f:	cmp    DWORD PTR [edi],0xe
  450ba2:	std    
  450ba3:	ins    BYTE PTR es:[edi],dx
  450ba4:	push   ebx
  450ba5:	mov    BYTE PTR [eax],al
  450ba7:	clc    
  450ba8:	lods   eax,DWORD PTR ds:[esi]
  450ba9:	xchg   BYTE PTR [ebx+0x57f35875],al
  450baf:	sbb    DWORD PTR [edx-0x6a083609],ecx
  450bb5:	mov    dl,0x83
  450bb7:	jne    0x450c2d
  450bb9:	inc    DWORD PTR [ebp-0x1]
  450bbc:	jge    0x450b62
  450bbe:	iret   
  450bbf:	idiv   DWORD PTR [ebp-0x66]
  450bc2:	(bad)  
  450bc3:	out    0x6f,eax
  450bc5:	mov    ecx,0x6aa1f7c7
  450bca:	dec    ecx
  450bcb:	sbb    ah,BYTE PTR [ebx+0x35]
  450bce:	and    al,BYTE PTR [ebx-0x3cfef059]
	...
  450be8:	dec    edx
  450be9:	adc    eax,0x704df7cb
  450bee:	push   ecx
  450bef:	push   cs
  450bf0:	bound  esp,QWORD PTR [ebp-0x14]
  450bf3:	out    0x10,eax
  450bf5:	in     al,dx
  450bf6:	(bad)
  450bf9:	jge    0x450bf5
  450bfb:	add    dh,BYTE PTR [edi+0x28c6d4a1]
  450c01:	or     al,0xc6
  450c03:	ret    
  450c04:	loope  0x450b9b
  450c06:	out    dx,al
  450c07:	add    BYTE PTR [edi+0x15bbdb01],cl
  450c0d:	and    al,0xc6
  450c0f:	add    DWORD PTR [edi+0x386d01f8],0x1a
  450c16:	mov    ?,edx
  450c18:	cmc    
  450c19:	fstp   DWORD PTR [esi-0x10991e3e]
  450c1f:	add    DWORD PTR [edi-0x36],esi
  450c22:	and    DWORD PTR [edi-0x7d7a1b33],0x58eacf4f
  450c2c:	xor    ecx,0xe4cdc948
  450c32:	test   eax,0xeacb3782
  450c37:	pop    eax
  450c38:	push   ebx
  450c39:	icebp  
  450c3a:	imul   edx,esi,0xffffffb5
  450c3d:	in     al,0x69
  450c3f:	push   eax
  450c40:	pop    eax
  450c41:	fcom   st(4)
  450c43:	inc    DWORD PTR [ebp-0x7231acae]
  450c49:	sbb    BYTE PTR [ecx-0x7e],dl
	...
  450c60:	mov    ah,ah
  450c62:	xor    eax,0xd39ed9c2
  450c67:	add    al,0x3f
  450c69:	mov    eax,0xd741486a
  450c6e:	sub    cl,dh
  450c70:	das    
  450c71:	mov    eax,0xc960481e
  450c76:	jmp    0x9c286e7e
  450c7b:	and    edx,esp
  450c7d:	gs retf 
  450c7f:	(bad)  
  450c80:	mov    esi,0x482e11db
  450c85:	in     al,0xed
  450c87:	shr    ecx,0x9d
  450c8a:	retf   0x7fe
  450c8d:	shr    DWORD PTR [eax+ecx*1-0x1c],1
  450c91:	xlat   BYTE PTR ds:[ebx]
  450c92:	jmp    0xcf222f17
  450c97:	mov    ah,0xdd
  450c99:	popf   
  450c9a:	jmp    0x450cbf
  450c9c:	(bad)  
  450c9d:	fldl2t 
  450c9f:	rcl    BYTE PTR ds:0x47ce0a9e,0xb7
  450ca6:	add    BYTE PTR [ecx-0x53],ch
  450ca9:	mov    bh,0x7
  450cab:	xor    al,0x5c
  450cad:	icebp  
  450cae:	sub    al,0xa3
  450cb0:	pop    ds
  450cb1:	in     al,dx
  450cb2:	ret    0x2572
  450cb5:	jecxz  0x450c86
  450cb7:	sbb    BYTE PTR [ecx-0x72],0xfe
  450cbb:	popa   
  450cbc:	sbb    eax,0xce3f07b8
  450cc1:	pop    esp
  450cc2:	cld    
  450cc3:	outs   dx,BYTE PTR ds:[esi]
	...
  450cd8:	arpl   cx,bx
  450cda:	sub    DWORD PTR [ecx+0x62cfec6a],0xffffff85
  450ce1:	jecxz  0x450cb2
  450ce3:	dec    eax
  450ce4:	sub    DWORD PTR [esi-0x5a68d602],ebx
  450cea:	and    edx,DWORD PTR [edi+0x25]
  450ced:	mov    bh,0x80
  450cef:	int3   
  450cf0:	inc    ebx
  450cf1:	fsubr  QWORD PTR [ebp-0x11]
  450cf4:	test   eax,0x973efad6
  450cf9:	pop    ss
  450cfa:	mov    ebp,DWORD PTR [edx+eax*2+0x65e9aedc]
  450d01:	inc    ebp
  450d02:	ins    BYTE PTR es:[edi],dx
  450d03:	sti    
  450d04:	pop    ebp
  450d05:	inc    esp
  450d06:	ins    BYTE PTR es:[edi],dx
  450d07:	out    dx,eax
  450d08:	push   ebp
  450d09:	cmp    ebp,DWORD PTR [ebx+eiz*8+0x6d]
  450d0d:	cmp    ch,BYTE PTR [edi+eiz*8+0x65]
  450d11:	fisubr DWORD PTR [ebx+ebp*8+0x2a]
  450d15:	out    0xbc,al
  450d17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450d18:	popa   
  450d19:	fmul   DWORD PTR [ebx-0x51257d54]
  450d1f:	loope  0x450cd5
  450d21:	in     eax,0x84
  450d23:	jmp    0xa16:0xe5c05661
  450d2a:	mov    esi,0xc3d9662c
  450d2f:	into   
  450d30:	pushf  
  450d31:	mov    dh,0xf6
  450d33:	add    BYTE PTR [esi],bh
  450d35:	mov    bh,0x80
  450d37:	jge    0x450d92
  450d39:	in     al,0x63
  450d3b:	push   es
	...
  450d50:	and    edx,DWORD PTR [edx-0x7]
  450d53:	inc    esp
  450d55:	sbb    DWORD PTR [ebx-0x5b19e7bb],ecx
  450d5b:	add    BYTE PTR [edi],al
  450d5d:	addr16 fs ds mov bh,0x3a
  450d62:	cmp    ah,BYTE PTR fs:[edi-0x58c99bc5]
  450d69:	cmp    al,0x64
  450d6b:	xor    al,BYTE PTR [edi]
  450d6d:	ds fs test DWORD PTR cs:[eax+0x64],0x6442072a
  450d77:	xchg   DWORD PTR es:[ecx],edi
  450d7a:	and    al,BYTE PTR fs:[edi+0x42]
  450d7e:	fs push ds
  450d80:	ja     0x450dc5
  450d82:	sbb    ah,BYTE PTR fs:[edi+0x44]
  450d86:	fs push ss
  450d88:	addr16 jns 0x450def
  450d8b:	adc    al,BYTE PTR [edi+0x770e6483]
  450d91:	test   BYTE PTR [edx+ecx*1-0x79],ah
  450d95:	test   DWORD PTR [esi+eax*1-0x79],esp
  450d99:	in     eax,0x6a
  450d9b:	add    dl,BYTE PTR [eax-0x26]
  450d9e:	mov    dh,0x45
  450da0:	dec    edx
  450da1:	xlat   BYTE PTR ds:[ebx]
  450da2:	mov    eax,DWORD PTR [ebp+0x28]
  450da5:	in     eax,0xa4
  450da7:	or     dh,dl
  450da9:	fidivr DWORD PTR [esi+0x3]
  450dac:	cmp    ebx,DWORD PTR [ecx-0x40]
  450daf:	add    al,0x34
  450db1:	daa    
  450db2:	mov    dh,0x45
	...
  450dc8:	dec    edx
  450dc9:	(bad)  
  450dca:	ret    
  450dcb:	(bad)  
  450dcc:	jle    0x450d88
  450dce:	out    dx,al
  450dcf:	inc    ebp
  450dd0:	pop    ecx
  450dd1:	pop    ebp
  450dd2:	ins    DWORD PTR es:[edi],dx
  450dd3:	and    ah,BYTE PTR [edx-0x5]
  450dd6:	dec    edi
  450dd7:	(bad)  
  450dd8:	std    
  450dd9:	mov    bh,0xc5
  450ddb:	test   DWORD PTR ds:0x413d772f,0xef0890f3
  450de5:	jae    0x450e61
  450de7:	add    BYTE PTR [esi-0x10],bl
  450dea:	add    al,BYTE PTR [ebx]
  450dec:	bound  ebp,QWORD PTR [edi-0x44]
  450def:	cld    
  450df0:	in     al,0x1f
  450df2:	mov    edi,0xc90f27f7
  450df7:	cmp    eax,0x22497080
  450dfc:	pop    ebp
  450dfd:	in     eax,0x0
  450dff:	call   0xf8106787
  450e04:	mov    eax,ds:0x65234176
  450e09:	stos   BYTE PTR es:[edi],al
  450e0a:	hlt    
  450e0b:	test   dh,ah
  450e0d:	imul   edi,esp,0xfdf06207
  450e13:	jmp    ecx
  450e15:	scas   eax,DWORD PTR es:[edi]
  450e16:	add    bh,dh
  450e18:	mov    dl,0xae
  450e1a:	retf   
  450e1b:	cmp    eax,0x22419a41
  450e20:	loop   0x450e46
  450e22:	sbb    eax,0xdaf1f707
  450e27:	cli    
  450e28:	jp     0x450ddc
  450e2a:	retf   
  450e2b:	ret    
	...
  450e40:	fnstenv [esi+ebx*1]
  450e43:	pop    es
  450e44:	lods   al,BYTE PTR ds:[esi]
  450e45:	out    0x77,eax
  450e47:	jl     0x450e35
  450e49:	repnz out dx,al
  450e4b:	call   DWORD PTR [ebp-0xc]
  450e4e:	add    al,BYTE PTR [ebx-0x2f3610de]
  450e54:	and    DWORD PTR [eax-0xd9de5bf],edi
  450e5a:	add    al,BYTE PTR [eax]
  450e5c:	jmp    0xf44c2c96
  450e61:	fldcw  WORD PTR [ecx]
  450e63:	add    eax,0x3e9206f
  450e68:	bound  esp,QWORD PTR [eax-0x8]
  450e6b:	fistp  DWORD PTR [esi-0x19]
  450e6e:	(bad)
  450e71:	pop    esi
  450e72:	xlat   BYTE PTR ds:[ebx]
  450e73:	add    cl,BYTE PTR [edi+edx*8-0x1f05752f]
  450e7a:	lods   eax,DWORD PTR ds:[esi]
  450e7b:	(bad)  
  450e7c:	or     ch,BYTE PTR [esp+ebp*4]
  450e7f:	retf   0x54f5
  450e82:	and    al,0xee
  450e84:	bound  edx,QWORD PTR [esi-0x43607936]
  450e8a:	jmp    0x450e52
  450e8c:	adc    eax,0x6203f397
  450e91:	fldl2t 
  450e93:	jle    0x450e1c
  450e95:	mov    esp,0xda2291e6
  450e9a:	lods   al,BYTE PTR ds:[esi]
  450e9b:	mov    ah,BYTE PTR [edx-0x27]
  450e9e:	jmp    0x37366bed
  450ea3:	rol    BYTE PTR [eax],1
	...
  450eb5:	add    BYTE PTR [eax],al
  450eb7:	add    BYTE PTR [ebp+0x6c4869e0],ch
  450ebd:	fcmovbe st,st(4)
  450ebf:	pop    esp
  450ec0:	loope  0x450f20
  450ec2:	out    dx,eax
  450ec3:	add    dl,BYTE PTR [esp+edi*2]
  450ec6:	push   ecx
  450ec7:	xchg   BYTE PTR [edx+0x37c635e0],cl
  450ecd:	sbb    ecx,ebp
  450ecf:	add    esp,DWORD PTR [edx+0x5d]
  450ed2:	(bad)  
  450ed3:	jl     0x450e75
  450ed5:	sbb    dl,BYTE PTR [ebx]
  450ed7:	(bad)  
  450ed8:	ficomp DWORD PTR [edx]
  450eda:	push   0xffffffe4
  450edc:	gs pop esp
  450ede:	adc    edi,eax
  450ee0:	(bad)  
  450ee1:	aam    0x6a
  450ee3:	int3   
  450ee4:	bound  esp,QWORD PTR [ebp-0x55]
  450ee7:	fcmovnb st,st(0)
  450ee9:	loope  0x450ee0
  450eeb:	leave  
  450eec:	and    DWORD PTR [eax+eax*1-0xd],ebx
  450ef0:	cmp    ch,BYTE PTR [ebp+0x2f]
  450ef3:	push   0x1e
  450ef5:	fld    TBYTE PTR [ebp-0x11]
  450ef8:	or     DWORD PTR [ebx+0x1c2bdef8],ecx
  450efe:	adc    eax,0x5f
  450f01:	outs   dx,BYTE PTR ds:[esi]
  450f02:	inc    al
  450f04:	mov    ds:0x1fc6f6e1,eax
  450f09:	pop    esp
  450f0a:	stc    
  450f0b:	out    0xac,eax
  450f0d:	(bad)  
  450f0f:	cmc    
  450f10:	sub    eax,ebp
  450f12:	imul   BYTE PTR [edx+0x1bfee1e7]
  450f18:	pusha  
  450f19:	icebp  
  450f1a:	xor    BYTE PTR [ecx+0x0],ah
	...
  450f30:	stos   DWORD PTR es:[edi],eax
  450f31:	out    0xc2,eax
  450f33:	push   0xffffffa9
  450f35:	xlat   BYTE PTR ds:[ebx]
  450f36:	ins    DWORD PTR es:[edi],dx
  450f37:	out    0xa9,eax
  450f39:	mov    esi,0x1b9b86f8
  450f3e:	call   0xf72cbc23
  450f43:	bound  esi,QWORD PTR [ebp-0x3d]
  450f46:	add    DWORD PTR [edi+eax*4],esp
  450f49:	pop    esp
  450f4a:	cmp    eax,0xbf1c5c0a
  450f4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  450f50:	(bad)  
  450f51:	fcomip st,st(6)
  450f53:	jmp    0xa8263b9
  450f58:	mov    ebp,DWORD PTR ds:0x285ce840
  450f5e:	add    cl,ch
  450f60:	popa   
  450f61:	push   0xee5d4111
  450f66:	imul   BYTE PTR [esi]
  450f68:	out    0x65,eax
  450f6a:	push   cs
  450f6b:	out    dx,al
  450f6c:	sbb    ebp,DWORD PTR [ebx-0x18cce618]
  450f72:	imul   BYTE PTR [edx]
  450f74:	pop    ebp
  450f75:	sbb    DWORD PTR [eax],eax
  450f77:	jmp    0x6274dd
  450f7c:	rcl    BYTE PTR [edi],cl
  450f7e:	shr    edx,0x47
  450f81:	rol    DWORD PTR fs:[ebx-0x57e1f96],0xd
  450f89:	nop
  450f8a:	or     eax,DWORD PTR [ebx+0x116ae442]
  450f90:	xor    esp,DWORD PTR [edx]
  450f92:	out    0xff,eax
	...
  450fa8:	sub    al,0x16
  450faa:	cmp    edx,0x2c
  450fad:	nop
  450fae:	mul    bh
  450fb0:	mov    bh,0x9
  450fb2:	out    dx,eax
  450fb3:	dec    eax
  450fb5:	add    ah,BYTE PTR [edi-0x74ee530c]
  450fbb:	inc    ebp
  450fbc:	adc    esp,ebx
  450fbe:	xor    eax,0x239f7823
  450fc3:	add    cl,BYTE PTR [eax]
  450fc5:	sbb    dh,BYTE PTR ds:0xdacb1a
  450fcb:	add    BYTE PTR [eax-0x61],al
  450fce:	and    ecx,DWORD PTR [edi]
  450fd0:	test   DWORD PTR [edx-0x2583c2ff],ebx
  450fd6:	add    BYTE PTR [eax],al
  450fd8:	lods   al,BYTE PTR ds:[esi]
  450fd9:	icebp  
  450fda:	(bad)  
  450fdc:	aaa    
  450fdd:	adc    edi,ebp
  450fdf:	cmp    DWORD PTR [esi-0x728c0518],0x55
  450fe6:	ins    DWORD PTR es:[edi],dx
  450fe7:	push   ss
  450fe8:	test   DWORD PTR [esi-0x17617cf8],ecx
  450fee:	cmc    
  450fef:	jle    0x45106a
  450ff1:	std    
  450ff2:	inc    eax
  450ff3:	call   0x341903
  450ff8:	dec    eax
  450ff9:	xlat   BYTE PTR ds:[ebx]
  450ffa:	rol    BYTE PTR [eax],0x7b
  450ffd:	fisubr DWORD PTR [esp+esi*1-0xe]
  451001:	adc    eax,ecx
  451003:	jmp    0xd162:0x83c16347
  45100a:	clc    
  45100b:	add    BYTE PTR [eax],0x0
	...
  45101e:	add    BYTE PTR [eax],al
  451020:	dec    eax
  451021:	inc    BYTE PTR [ebp+0xd]
  451024:	loope  0x450ffe
  451026:	sti    
  451027:	je     0x450fab
  451029:	jae    0x450ff5
  45102b:	add    ebp,DWORD PTR [esi+0x60f97c0b]
  451031:	fs icebp 
  451033:	out    0x8f,eax
  451035:	(bad)  
  451036:	mov    esi,0xca7321f7
  45103b:	pop    es
  45103c:	(bad)  
  45103d:	sti    
  45103e:	cmp    ecx,0xe7f68c5a
  451044:	lahf   
  451045:	pop    ds
  451046:	mov    edi,0x40821f7
  45104b:	in     al,dx
  45104c:	cmc    
  45104d:	es jnp 0x45108d
  451050:	dec    eax
  451051:	icebp  
  451052:	aas    
  451053:	and    esp,ecx
  451055:	lods   al,BYTE PTR ds:[esi]
  451056:	and    eax,DWORD PTR [edx]
  451058:	mov    eax,ds:0x621a4136
  45105d:	lock add al,BYTE PTR [eax]
  451060:	fnstenv [ebx+eiz*1-0x24ff3f9]
  451067:	xor    al,0xfd
  451069:	out    dx,eax
  45106a:	add    al,BYTE PTR [eax]
  45106c:	xor    eax,0xb654db01
  451071:	outs   dx,BYTE PTR ds:[esi]
  451072:	mov    edi,0xf5de2783
  451077:	jne    0x4510b9
  451079:	mov    bh,ch
  45107b:	out    dx,al
  45107c:	xchg   ebp,eax
  45107d:	xchg   bl,al
  45107f:	xor    eax,0x2efa2
	...
  451098:	push   es
  451099:	std    
  45109a:	jae    0x45105e
  45109c:	mov    ds:0xa3890089,eax
  4510a1:	jb     0x451080
  4510a3:	pop    es
  4510a4:	loope  0x45104f
  4510a6:	stc    
  4510a7:	ins    BYTE PTR es:[edi],dx
  4510a8:	pop    esp
  4510a9:	fst    DWORD PTR [ecx]
  4510ab:	ror    DWORD PTR [ebp+ebx*8+0x15],cl
  4510af:	ret    
  4510b0:	dec    edx
  4510b1:	hlt    
  4510b2:	sbb    edi,eax
  4510b4:	push   ebp
  4510b5:	push   ecx
  4510b6:	pushf  
  4510b7:	jmp    0x830fa71e
  4510bc:	jg     0x451076
  4510be:	jmp    0x451082
  4510c0:	cmc    
  4510c1:	xchg   esi,eax
  4510c2:	rol    DWORD PTR [ebx],cl
  4510c4:	(bad)  
  4510c5:	fldl2t 
  4510c7:	jp     0x451130
  4510c9:	mov    eax,0xdaa28dee
  4510ce:	adc    al,0x87
  4510d0:	(bad)  
  4510d1:	fldl2t 
  4510d3:	inc    esi
  4510d4:	imul   esi,ecx,0xffffffe2
  4510d7:	iret   
  4510d8:	or     eax,0x6c4869dd
  4510dd:	(bad)  
  4510de:	sub    eax,0xd75ee0fc
  4510e3:	(bad)  
  4510e4:	je     0x4510bd
  4510e6:	ret    0xfa11
  4510e9:	es xchg edi,eax
  4510eb:	(bad)  
  4510ec:	aad    0x18
  4510ee:	aam    0xc3
  4510f0:	(bad)  
  4510f1:	fldl2t 
  4510f3:	inc    edi
  4510f4:	outs   dx,DWORD PTR ds:[esi]
  4510f5:	push   edx
  4510f6:	stos   DWORD PTR es:[edi],eax
  4510f7:	les    edi,FWORD PTR [eax+0xc470d5]
	...
  45110d:	add    BYTE PTR [eax],al
  45110f:	add    cl,ah
  451111:	cli    
  451112:	in     eax,0x82
  451114:	mov    eax,0xe0faf4cd
  451119:	loop   0x4510fb
  45111b:	inc    edi
  45111c:	push   ebx
  45111d:	icebp  
  45111e:	je     0x4510ed
  451120:	xchg   ebp,eax
  451121:	fsubr  QWORD PTR [ecx]
  451123:	sbb    BYTE PTR [eax-0x7a022b34],0x52
  45112a:	dec    edi
  45112b:	(bad)  
  45112c:	lea    ebx,[eax]
  45112e:	push   ecx
  45112f:	inc    edi
  451130:	jno    0x45110e
  451132:	xor    eax,0xbf377a
  451137:	call   0xa4c8c95e
  45113c:	inc    eax
  45113d:	xlat   BYTE PTR ds:[ebx]
  45113e:	ret    
  45113f:	mov    cs:0x61e900bf,al
  451145:	(bad)  [ebx-0x512b7f54]
  45114b:	test   eax,0xe9b7a65e
  451150:	popa   
  451151:	fnstenv [edi-0x28]
  451154:	sbb    DWORD PTR [ecx],edi
  451156:	repz mul BYTE PTR [edi]
  451159:	pop    eax
  45115a:	jne    0x451133
  45115c:	and    al,0x66
  45115e:	pop    ds
  45115f:	rcl    DWORD PTR [ebx-0x15],1
  451162:	neg    dh
  451164:	and    esp,DWORD PTR [esi-0x269e1640]
  45116a:	je     0x45115f
  45116c:	mov    BYTE PTR [edi],dl
  45116e:	rcl    ebx,0x62
  451171:	push   edx
  451172:	shr    DWORD PTR [edx+0x0],0x0
	...
  451186:	add    BYTE PTR [eax],al
  451188:	add    esp,edx
  45118a:	xor    DWORD PTR [ebx+0x6a0b6cf5],0x19
  451191:	shr    BYTE PTR [edi+ebp*8-0x47],cl
  451195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  451196:	out    dx,al
  451197:	sahf   
  451198:	lahf   
  451199:	pop    ss
  45119a:	call   0xf728c46b
  45119f:	bound  eax,QWORD PTR [ebp-0x7cd3fe41]
  4511a5:	pop    eax
  4511a6:	cmp    eax,0xbf1863ca
  4511ab:	sub    al,0xb8
  4511ad:	fcomi  st,st(6)
  4511af:	jmp    0xa826215
  4511b4:	xchg   edi,eax
  4511b5:	sub    eax,0x245ce840
  4511ba:	add    cl,ch
  4511bc:	popa   
  4511bd:	adc    DWORD PTR fs:[ecx+0x49],eax
  4511c1:	call   0x5a6912bc
  4511c6:	ins    DWORD PTR es:[edi],dx
  4511c7:	push   ss
  4511c8:	jl     0x45115f
  4511ca:	push   edx
  4511cb:	call   0x341e07
  4511d0:	cmp    ah,dl
  4511d2:	rol    BYTE PTR [eax],0x4b
  4511d5:	xlat   BYTE PTR ds:[ebx]
  4511d6:	ins    BYTE PTR es:[edi],dx
  4511d7:	inc    ebp
  4511d8:	rcl    BYTE PTR [edi],cl
  4511da:	shr    edx,0x3f
  4511dd:	pusha  
  4511de:	rol    DWORD PTR [ebx-0x57e1ba6],0x37
  4511e5:	mov    esi,?
  4511e7:	out    0x6b,eax
  4511e9:	or     ch,bh
  4511eb:	inc    DWORD PTR [eax]
	...
  4511fd:	add    BYTE PTR [eax],al
  4511ff:	add    BYTE PTR [eax+0x58],bh
  451202:	cli    
  451203:	or     eax,0xd5dedcae
  451208:	ds push ss
  45120a:	out    dx,eax
  45120b:	ret    
  45120c:	mov    BYTE PTR [eax],dl
  45120e:	(bad)  
  45120f:	je     0x45121c
  451211:	pop    edx
  451212:	stc    
  451213:	add    BYTE PTR [edi-0xc067e10],ch
  451219:	xchg   ebx,eax
  45121a:	push   es
  45121b:	call   0x341deb
  451220:	mov    eax,0x2e0ffa59
  451225:	loopne 0x4511a8
  451227:	stc    
  451228:	rcl    DWORD PTR [edx+0xb3be7f6],cl
  45122e:	out    dx,eax
  45122f:	(bad)  
  451230:	clc    
  451231:	(bad)  
  451232:	mov    ds:0x8b15d4f2,al
  451237:	inc    ebp
  451238:	rcl    edi,0x35
  45123b:	and    ecx,DWORD PTR [eax-0x65]
  45123e:	and    eax,DWORD PTR [edx]
  451240:	clc    
  451241:	and    bh,BYTE PTR [esp+ecx*8-0xb3a05]
  451248:	mov    edx,esi
  45124a:	add    BYTE PTR [eax],al
  45124c:	mov    edx,esi
  45124e:	add    BYTE PTR [eax],al
  451250:	(bad)  
  451251:	enter  0xfc0c,0x85
  451255:	je     0x45123c
  451257:	(bad)  
  451258:	jge    0x45123a
  45125a:	sbb    ah,bh
  45125c:	jne    0x45124e
  45125e:	add    al,BYTE PTR [eax]
  451260:	(bad)  
  451261:	lock add al,BYTE PTR [eax]
	...
  451278:	bound  ecx,QWORD PTR [edx+0x9]
  45127b:	cld    
  45127c:	pop    ebp
  45127d:	mov    esp,0x855fff3
  451282:	push   cs
  451283:	cld    
  451284:	dec    ebp
  451285:	lock add al,BYTE PTR [eax]
  451288:	(bad)  
  451289:	lock add al,BYTE PTR [eax]
  45128c:	bound  ecx,QWORD PTR [edx+eax*2]
  45128f:	cld    
  451290:	xor    eax,0x2dfff0cc
  451295:	and    al,0x1a
  451297:	cld    
  451298:	and    eax,0x620002f0
  45129d:	lock add al,BYTE PTR [eax]
  4512a0:	(bad)  
  4512a1:	fidivr WORD PTR [esi]
  4512a3:	cld    
  4512a4:	or     eax,0x620012f0
  4512a9:	pop    eax
  4512aa:	lock sti 
  4512ac:	std    
  4512ad:	out    dx,eax
  4512ae:	add    al,BYTE PTR [eax]
  4512b0:	(bad)  
  4512b1:	lock add al,BYTE PTR [eax]
  4512b4:	bound  esi,QWORD PTR [edx]
  4512b6:	dec    ecx
  4512b7:	cld    
  4512b8:	in     eax,0x9b
  4512ba:	verr   WORD PTR [edx+0x58]
  4512be:	lock sti 
  4512c0:	aad    0xef
  4512c2:	add    al,BYTE PTR [eax]
  4512c4:	(bad)  
  4512c5:	lock add al,BYTE PTR [eax]
  4512c8:	(bad)  
  4512c9:	in     al,0x48
  4512cb:	cld    
  4512cc:	mov    ebp,0x62000fb3
  4512d1:	clc    
  4512d2:	out    dx,eax
  4512d3:	sti    
  4512d4:	lods   eax,DWORD PTR ds:[esi]
  4512d5:	out    dx,eax
  4512d6:	add    al,BYTE PTR [eax]
  4512d8:	(bad)  
  4512d9:	lock add al,BYTE PTR [eax]
	...
  4512f0:	(bad)  
  4512f1:	fnstenv [edi+0x34d99649]
  4512f7:	pop    ss
  4512f8:	(bad)  
  4512f9:	fnstenv ds:0xe8d989f3
  4512ff:	add    esp,DWORD PTR [edx-0x27]
  451302:	jmp    0xdc1e750a
  451307:	dec    edx
  451308:	outs   dx,BYTE PTR ds:[esi]
  451309:	fst    DWORD PTR [eax+0x1a]
  45130c:	(bad)  
  45130d:	fld    DWORD PTR [ecx-0x13]
  451310:	pop    ecx
  451311:	fld1   
  451313:	add    esp,DWORD PTR [edx-0x27]
  451316:	out    0x3,eax
  451318:	(bad)  
  451319:	fldl2t 
  45131b:	dec    ebx
  45131c:	inc    esi
  45131d:	fnstenv [esp+edx*1]
  451320:	(bad)  
  451321:	(bad)  
  451323:	repnz cmp ecx,ebx
  451326:	call   0xe81e752e
  45132b:	add    esp,DWORD PTR [edx-0x27]
  45132e:	add    ecx,DWORD PTR [esi+ebx*1-0x27]
  451332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  451333:	sbb    BYTE PTR [edx-0x27],ah
  451336:	fwait
  451337:	in     al,dx
  451338:	or     ecx,ebx
  45133a:	call   0xe81e7542
  45133f:	add    esp,DWORD PTR [edx-0x27]
  451342:	jg     0x451390
  451344:	neg    al
  451346:	jo     0x45135b
  451348:	(bad)  
  451349:	fst    DWORD PTR [edi-0x1727160f]
  45134f:	add    esp,DWORD PTR [edx-0x27]
  451352:	out    0x3,eax
	...
  451368:	(bad)  
  451369:	(bad)  [edi+0x4d]
  45136c:	into   
  45136d:	fdiv   DWORD PTR [eax+ebx*1+0x62]
  451371:	fstp   DWORD PTR [ebx-0x11]
  451374:	mov    ecx,0x6203e8d8
  451379:	(bad)  
  45137b:	add    esp,DWORD PTR [edx-0x27]
  45137e:	add    BYTE PTR ds:0x21f6d517,bh
  451384:	jne    0x45135f
  451386:	add    ch,bl
  451388:	test   esp,edx
  45138a:	imul   cl
  45138c:	popa   
  45138d:	fld    DWORD PTR [eax]
  45138f:	jmp    0x5745ecf5
  451394:	das    
  451395:	aad    0xf6
  451397:	add    DWORD PTR [ebp-0x27],ecx
  45139a:	add    BYTE PTR [ecx],dl
  45139c:	jl     0x451372
  45139e:	imul   cl
  4513a0:	popa   
  4513a1:	fld    DWORD PTR [eax]
  4513a3:	jmp    0x545ed09
  4513a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4513a9:	aad    0xf6
  4513ab:	or     eax,0x6d00d971
  4513b0:	push   eax
  4513b1:	aam    0xf6
  4513b3:	jmp    0xe945ed19
  4513b8:	popa   
  4513b9:	fld    DWORD PTR [eax]
  4513bb:	cmp    ebx,DWORD PTR [ebp+edx*8-0x26b45e0a]
  4513c2:	add    BYTE PTR [ecx],ch
  4513c4:	adc    edx,esp
  4513c6:	imul   cl
  4513c8:	popa   
  4513c9:	fld    DWORD PTR [eax]
  4513cb:	jmp    0x4513d0
	...
  4513e0:	popa   
  4513e1:	fld    DWORD PTR [eax]
  4513e3:	jmp    0x663be97d
  4513e8:	push   ebp
  4513e9:	fld    DWORD PTR [eax]
  4513eb:	jmp    0xe945ed51
  4513f0:	popa   
  4513f1:	fld    DWORD PTR [eax]
  4513f3:	jmp    0xe945ed59
  4513f8:	popa   
  4513f9:	fld    DWORD PTR [eax]
  4513fb:	jmp    0xaf45ed61
  451400:	daa    
  451401:	aad    0xf6
  451403:	and    eax,0x2ff6d521
  451408:	and    ebp,edx
  45140a:	test   BYTE PTR [eax],0xb9
  45140d:	sbb    dh,ch
  45140f:	(bad)  
  451410:	cmp    DWORD PTR [esi*8-0xae3f401],ebx
  451417:	jmp    FWORD PTR [ecx]
  451419:	sbb    al,0xf5
  45141b:	(bad)  
  45141c:	stc    
  45141d:	sbb    esi,ebp
  45141f:	inc    DWORD PTR [ebp+0x1c]
  451422:	cmc    
  451423:	dec    DWORD PTR [edi+0x1c]
  451426:	cmc    
  451427:	(bad)  
  451428:	cmp    eax,0x73fff51c
  45142d:	sbb    eax,0x1d8dfff5
  451432:	cmc    
  451433:	jmp    DWORD PTR [ebp+0x1d]
  451436:	cmc    
  451437:	(bad)  
  451438:	std    
  451439:	sbb    al,0xf5
  45143b:	jmp    ebp
  45143d:	sbb    al,0xf5
  45143f:	inc    DWORD PTR [ebx]
  451441:	sbb    eax,0xfff5
	...
  451456:	add    BYTE PTR [eax],al
  451458:	leave  
  451459:	pop    ds
  45145a:	cmc    
  45145b:	jmp    DWORD PTR [ecx-0x62000ae1]
  451461:	pop    ds
  451462:	cmc    
  451463:	dec    DWORD PTR [ebx+0x1f]
  451466:	cmc    
  451467:	call   FWORD PTR [ecx+0x1f]
  45146a:	cmc    
  45146b:	call   DWORD PTR ds:0x11fff51d
  451471:	push   ds
  451472:	cmc    
  451473:	call   FWORD PTR [ecx+0x1c]
  451476:	cmc    
  451477:	push   DWORD PTR [ebx+0x1c]
  45147a:	cmc    
  45147b:	inc    DWORD PTR [ecx+0x1c]
  45147e:	cmc    
  45147f:	inc    DWORD PTR [ecx+0x1c]
  451482:	cmc    
  451483:	inc    DWORD PTR ds:0x21fff51f
  451489:	push   ds
  45148a:	cmc    
  45148b:	(bad)  
  45148c:	fistp  DWORD PTR [ebx]
  45148e:	cmc    
  45148f:	call   DWORD PTR [ebp+0x1d]
  451492:	cmc    
  451493:	inc    DWORD PTR [ecx+0x62fff51c]
  451499:	rol    BYTE PTR [edx],0x0
  45149c:	bound  esp,QWORD PTR [edx-0x174a03b5]
  4514a2:	dec    ecx
  4514a3:	cld    
  4514a4:	lods   eax,DWORD PTR ds:[esi]
  4514a5:	dec    edx
  4514a6:	dec    ebx
  4514a7:	cld    
  4514a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4514a9:	and    cl,BYTE PTR [ebx-0x4]
  4514ac:	popf   
  4514ad:	mov    edx,0x8a95fc4b
  4514b2:	dec    ebx
  4514b3:	cld    
  4514b4:	(bad)  
  4514b5:	in     al,dx
  4514b6:	dec    ecx
  4514b7:	cld    
  4514b8:	test   DWORD PTR [eax],ebx
  4514ba:	dec    edx
  4514bb:	cld    
	...
  4514d0:	jge    0x451492
  4514d2:	add    al,BYTE PTR [eax]
  4514d4:	bound  ebx,QWORD PTR [esi+0x49]
  4514d7:	cld    
  4514d8:	ins    DWORD PTR es:[edi],dx
  4514d9:	dec    esp
  4514da:	dec    ecx
  4514db:	cld    
  4514dc:	gs hlt 
  4514de:	dec    eax
  4514df:	cld    
  4514e0:	pop    ebp
  4514e1:	and    cl,BYTE PTR [ecx-0x4]
  4514e4:	push   ebp
  4514e5:	out    dx,al
  4514e6:	dec    eax
  4514e7:	cld    
  4514e8:	dec    ebp
  4514e9:	sub    BYTE PTR [ecx-0x4],cl
  4514ec:	inc    ebp
  4514ed:	dec    eax
  4514ee:	dec    ecx
  4514ef:	cld    
  4514f0:	cmp    eax,0x35fc4934
  4514f5:	pop    esp
  4514f6:	dec    ecx
  4514f7:	cld    
  4514f8:	sub    eax,0x25fc495e
  4514fd:	jb     0x451548
  4514ff:	cld    
  451500:	sbb    eax,0x15fc497e
  451505:	idiv   BYTE PTR ds:0x3fd40dfc
  45150b:	cld    
  45150c:	add    eax,0xfdfc3e7a
  451511:	mov    edi,0xc4620002
  451516:	dec    ebx
  451517:	cld    
  451518:	in     eax,dx
  451519:	mov    edi,0x9c620002
  45151e:	stc    
  45151f:	sti    
  451520:	fld    QWORD PTR [ebp-0x272a0407]
  451526:	sti    
  451527:	clc    
  451528:	leave  
  451529:	aad    0xc4
  45152b:	clc    
  45152c:	leave  
  45152d:	aad    0x2a
  45152f:	stc    
  451530:	mov    ecx,0xf938d5
	...
  451545:	add    BYTE PTR [eax],al
  451547:	add    BYTE PTR [ecx-0x5606f72b],bh
  45154d:	aad    0xee
  45154f:	clc    
  451550:	test   eax,0x99f966d5
  451555:	aad    0x44
  451557:	stc    
  451558:	cdq    
  451559:	aad    0x92
  45155b:	stc    
  45155c:	mov    ebp,edx
  45155e:	xchg   esp,eax
  45155f:	stc    
  451560:	mov    ebp,edx
  451562:	push   ds
  451563:	stc    
  451564:	jns    0x45153b
  451566:	inc    edx
  451567:	stc    
  451568:	jns    0x45153f
  45156a:	inc    edx
  45156b:	stc    
  45156c:	imul   edx,ebp,0xd569f5e6
  451572:	or     dh,dh
  451574:	pop    ecx
  451575:	aad    0xf6
  451577:	cmc    
  451578:	pop    ecx
  451579:	aad    0xdc
  45157b:	cmc    
  45157c:	dec    ecx
  45157d:	aad    0xb0
  45157f:	cmc    
  451580:	dec    ecx
  451581:	aad    0xb0
  451583:	cmc    
  451584:	cmp    ebp,edx
  451586:	jle    0x45157d
  451588:	cmp    ebp,edx
  45158a:	push   0x4cd529f6
  45158f:	imul   BYTE PTR [ecx]
  451591:	aad    0x40
  451593:	neg    BYTE PTR [ecx]
  451595:	aad    0x2a
  451597:	neg    BYTE PTR [ecx]
  451599:	aad    0xba
  45159b:	cmc    
  45159c:	or     ebp,edx
  45159e:	retf   0x9f5
  4515a1:	aad    0xbe
  4515a3:	cmc    
  4515a4:	stc    
  4515a5:	aam    0xe0
  4515a7:	idiv   cl
  4515a9:	aam    0xd4
  4515ab:	test   BYTE PTR [eax],0x0
	...
  4515be:	add    BYTE PTR [eax],al
  4515c0:	jmp    0xea3c1699
  4515c5:	aam    0x1
  4515c7:	and    edx,ebp
  4515c9:	shl    dh,1
  4515cb:	bswap  ebp
  4515cd:	shl    dh,1
  4515cf:	sbb    edx,ebp
  4515d1:	shl    dh,1
  4515d3:	imul   ecx,esp,0xb47bf6d0
  4515d9:	shl    dh,1
  4515db:	inc    ecx
  4515dc:	lods   al,BYTE PTR ds:[esi]
  4515dd:	shl    dh,1
  4515df:	aas    
  4515e0:	mov    ah,0xd0
  4515e2:	mul    BYTE PTR [edi-0x6c092f54]
  4515e8:	xchg   esp,eax
  4515e9:	shl    dh,1
  4515eb:	jns    0x451579
  4515ed:	shl    dh,1
  4515ef:	addr16 xchg esp,eax
  4515f1:	shl    dh,1
  4515f3:	cmc    
  4515f4:	mov    eax,edx
  4515f6:	div    bh
  4515f8:	jns    0x4515ca
  4515fa:	idiv   bh
  4515fc:	jns    0x4515ce
  4515fe:	imul   BYTE PTR [ebx-0x66092f97]
  451604:	imul   edx,eax,0xd05997f6
  45160a:	idiv   BYTE PTR [ebp+0x73f6d059]
  451610:	dec    ecx
  451611:	shl    dh,1
  451613:	or     DWORD PTR [ecx-0x30],0xd0394ff6
  45161a:	not    BYTE PTR [ebx+0x39]
  45161d:	shl    dh,1
  45161f:	sbb    ebp,DWORD PTR [ecx]
  451621:	shl    dh,1
  451623:	or     eax,0x0
	...
  451638:	sub    eax,edx
  45163a:	div    ch
  45163c:	sbb    al,dl
  45163e:	neg    cl
  451640:	push   ss
  451641:	shl    dh,1
  451643:	or     eax,0x15f6d009
  451648:	or     eax,edx
  45164a:	mul    BYTE PTR [ecx]
  45164c:	stc    
  45164d:	iret   
  45164e:	test   BYTE PTR [edi-0x7],0xcf
  451652:	test   BYTE PTR [eax],0xa5
  451655:	sar    dl,1
  451657:	dec    DWORD PTR [ebx+0x5bfffad0]
  45165d:	sar    dl,1
  45165f:	dec    DWORD PTR [ebx]
  451661:	sar    dl,1
  451663:	jmp    DWORD PTR [ebp-0x14000531]
  451669:	iret   
  45166a:	cli    
  45166b:	call   edi
  45166d:	iret   
  45166e:	cli    
  45166f:	jmp    FWORD PTR [edi-0x1400052f]
  451675:	sar    edx,1
  451677:	(bad)  
  451678:	jge    0x451649
  45167a:	cli    
  45167b:	push   DWORD PTR [edi+0x29]
  45167e:	cmc    
  45167f:	dec    DWORD PTR [ebx+0x29]
  451682:	cmc    
  451683:	(bad)  
  451684:	mov    ecx,0xc5fffac7
  451689:	(bad)  
  45168a:	cli    
  45168b:	call   FWORD PTR [ebp-0x2000539]
  451691:	int3   
  451692:	cli    
  451693:	inc    DWORD PTR ds:0xe9fffacd
  451699:	int3   
  45169a:	cli    
  45169b:	inc    DWORD PTR [eax]
	...
  4516ad:	add    BYTE PTR [eax],al
  4516af:	add    BYTE PTR [ecx+0x6dfffacd],al
  4516b5:	int    0xfa
  4516b7:	call   FWORD PTR [ecx-0x33]
  4516ba:	cli    
  4516bb:	jmp    FWORD PTR [ebx-0x33]
  4516be:	cli    
  4516bf:	dec    DWORD PTR [ebx-0x38]
  4516c2:	cli    
  4516c3:	call   DWORD PTR [edi]
  4516c5:	enter  0xfffa,0x47
  4516c9:	enter  0xfffa,0x17
  4516cd:	enter  0xfffa,0xd5
  4516d1:	(bad)  
  4516d2:	cli    
  4516d3:	push   ebx
  4516d5:	(bad)  
  4516d6:	cli    
  4516d7:	push   DWORD PTR [ebp-0x7e00053a]
  4516dd:	(bad)  
  4516de:	cli    
  4516df:	jmp    DWORD PTR [edx+0x42]
  4516e2:	repz sti 
  4516e4:	cmc    
  4516e5:	dec    esi
  4516e6:	repz sti 
  4516e8:	in     eax,dx
  4516e9:	cmp    dh,bl
  4516eb:	sti    
  4516ec:	in     eax,0x4e
  4516ee:	repz sti 
  4516f0:	fld    QWORD PTR [eax+0x72d5fbf3]
  4516f6:	repz sti 
  4516f8:	int    0x62
  4516fa:	repz sti 
  4516fc:	(bad)
  4516ff:	sti    
  451700:	mov    ebp,0xb5fbf0bc
  451705:	enter  0xfc46,0xad
  451709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  45170a:	inc    esi
  45170b:	cld    
  45170c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  45170d:	sahf   
  45170e:	lock sti 
  451710:	popf   
  451711:	call   0x0:0xfbf0
	...
  451728:	xchg   ebp,eax
  451729:	test   al,dh
  45172b:	sti    
  45172c:	lea    edx,[esi+ebp*8]
  45172f:	sti    
  451730:	test   DWORD PTR [eax-0x5f820410],edx
  451736:	lock sti 
  451738:	jne    0x4516cc
  45173a:	lock sti 
  45173c:	ins    DWORD PTR es:[edi],dx
  45173d:	inc    eax
  45173e:	lock sti 
  451740:	gs sub al,0xf0
  451743:	sti    
  451744:	pop    ebp
  451745:	pop    esi
  451746:	lock sti 
  451748:	push   ebp
  451749:	dec    eax
  45174a:	lock sti 
  45174c:	dec    ebp
  45174d:	add    al,0xf0
  45174f:	sti    
  451750:	inc    ebp
  451751:	or     al,0xf0
  451753:	sti    
  451754:	cmp    eax,0x35fbefe4
  451759:	lock out dx,eax
  45175b:	sti    
  45175c:	sub    eax,0x25fbf1c4
  451761:	lods   al,BYTE PTR ds:[esi]
  451762:	icebp  
  451763:	sti    
  451764:	sbb    eax,0x15fbf190
  451769:	test   cl,dh
  45176b:	sti    
  45176c:	or     eax,0x9f72bd9
  451771:	sar    BYTE PTR [edi+esi*8],cl
  451774:	stc    
  451775:	ror    DWORD PTR [edi+esi*8-0x7],1
  451779:	sar    DWORD PTR [eax-0x9],1
  45177c:	jmp    0xea3ca052
  451781:	rcl    DWORD PTR [eax+0x70d1d9f7],1
  451787:	neg    ecx
  451789:	shl    DWORD PTR [edx+0xf7],1
	...
  45179f:	add    cl,cl
  4517a1:	rol    edx,1
  4517a3:	test   ecx,0xb9f784d1
  4517a9:	ror    DWORD PTR [esi-0x132e4609],1
  4517af:	out    dx,eax
  4517b0:	test   eax,0xa9efc6d1
  4517b5:	sar    DWORD PTR [edx+0x2ad199ef],1
  4517bb:	lock cdq 
  4517bd:	rcl    DWORD PTR [eax],1
  4517bf:	lock mov ecx,edx
  4517c2:	shr    bh,1
  4517c4:	mov    ecx,edx
  4517c6:	loopne 0x4517b7
  4517c8:	jns    0x45179b
  4517ca:	pusha  
  4517cb:	lock jns 0x45179f
  4517ce:	jb     0x4517c0
  4517d0:	imul   edx,ecx,0xd169f078
  4517d6:	je     0x4517c8
  4517d8:	pop    ecx
  4517d9:	shr    eax,1
  4517db:	add    esp,DWORD PTR [edx-0x27]
  4517de:	sub    DWORD PTR [esi+0x4e],ecx
  4517e1:	rcl    DWORD PTR [eax],1
  4517e3:	dec    esi
  4517e4:	inc    esi
  4517e5:	shr    DWORD PTR [esi+ecx*2],1
  4517e8:	ds shr eax,1
  4517eb:	add    esp,DWORD PTR [edx-0x27]
  4517ee:	fld    QWORD PTR [ebx]
  4517f0:	bound  ebx,QWORD PTR [ecx-0x16]
  4517f3:	add    esp,DWORD PTR [edx+0x59]
  4517f6:	lock add esp,DWORD PTR [edx+0x59]
  4517fa:	add    eax,esp
  4517fc:	popa   
  4517fd:	fld    DWORD PTR [eax+0xd961e9]
  451803:	jmp    0x451808
	...
  451818:	mov    ds:0xa2d9f6cd,eax
  45181d:	int    0xf6
  45181f:	mov    bl,0xa2
  451821:	int    0xf6
  451823:	jmp    0x8145f189
  451828:	mov    ds:0x2285f6cd,al
  45182d:	int    0xf6
  45182f:	pop    ecx
  451830:	and    cl,ch
  451832:	imul   BYTE PTR [edi]
  451834:	and    ecx,ebp
  451836:	neg    BYTE PTR [ecx]
  451838:	and    ecx,ebp
  45183a:	test   BYTE PTR [ebx],0x23
  45183d:	int    0xf6
  45183f:	daa    
  451840:	and    ecx,ebp
  451842:	mul    BYTE PTR ds:0xc1f6cd23
  451848:	and    cl,ch
  45184a:	test   bh,0x22
  45184d:	int    0xf6
  45184f:	retf   
  451850:	and    cl,ch
  451852:	not    bh
  451854:	and    cl,ch
  451856:	imul   bl
  451858:	and    cl,ch
  45185a:	test   BYTE PTR [ebp+0x3d],0xcd
  45185e:	test   BYTE PTR [ecx+0x35],0xcd
  451862:	idiv   BYTE PTR [ecx]
  451864:	sub    eax,0x2529f6cd
  451869:	int    0xf6
  45186b:	(bad)  
  45186c:	popf   
  45186d:	int    0xf6
  45186f:	popa   
  451870:	xchg   ebp,eax
  451871:	int    0xf6
  451873:	lods   eax,DWORD PTR ds:[esi]
  451874:	(bad)  
  451875:	int    0xf6
  451877:	pop    DWORD PTR [ebp+0xb7f6cd]
	...
  45188d:	add    BYTE PTR [eax],al
  45188f:	add    BYTE PTR [ebp-0x33],bh
  451892:	mul    bh
  451894:	popa   
  451895:	fld    DWORD PTR [eax-0x932925d]
  45189b:	add    bh,ah
  45189d:	pmaddwd mm7,mm7
  4518a0:	sub    edx,DWORD PTR [eax]
  4518a2:	cmc    
  4518a3:	push   DWORD PTR [ebp-0x4000af0]
  4518a9:	fild   DWORD PTR [eax]
  4518ab:	add    BYTE PTR [edi],dh
  4518ad:	sbb    esi,ebp
  4518af:	call   FWORD PTR [ecx+0x1b]
  4518b2:	cmc    
  4518b3:	jmp    FWORD PTR [ebx+0x1b]
  4518b6:	cmc    
  4518b7:	(bad)  
  4518b8:	sti    
  4518b9:	fild   DWORD PTR [eax]
  4518bb:	add    BYTE PTR [ebx],bl
  4518bd:	enter  0xfffa,0xd
  4518c1:	enter  0xfffa,0x4f
  4518c5:	enter  0xfffa,0xe1
  4518c9:	(bad)  
  4518ca:	cli    
  4518cb:	dec    DWORD PTR [ebx-0x38]
  4518ce:	cli    
  4518cf:	call   FWORD PTR [edi-0x38]
  4518d2:	cli    
  4518d3:	jmp    DWORD PTR [ebp-0x38]
  4518d6:	cli    
  4518d7:	dec    DWORD PTR [ebp-0x38]
  4518da:	cli    
  4518db:	jmp    edi
  4518dd:	(bad)  
  4518de:	cli    
  4518df:	jmp    DWORD PTR [edi-0x4800053a]
  4518e5:	(bad)  
  4518e6:	cli    
  4518e7:	(bad)  
  4518e8:	jnp    0x4518b0
  4518ea:	cli    
  4518eb:	call   DWORD PTR [edi]
  4518ed:	sar    edx,1
  4518ef:	dec    DWORD PTR [ebp-0x2f]
  4518f2:	cli    
  4518f3:	inc    DWORD PTR [eax]
	...
  451905:	add    BYTE PTR [eax],al
  451907:	add    ch,bl
  451909:	sar    dl,1
  45190b:	(bad)  
  45190c:	jmp    0x9e4513e1
  451911:	(bad)  
  451912:	cli    
  451913:	dec    DWORD PTR [ecx]
  451915:	sar    edx,1
  451917:	push   edi
  451919:	sar    dl,1
  45191b:	jmp    DWORD PTR [ebx]
  45191d:	sar    edx,1
  45191f:	(bad)  
  451920:	std    
  451921:	sar    dl,1
  451923:	dec    edi
  451925:	sar    edx,cl
  451927:	jmp    DWORD PTR [edx+0x20]
  45192a:	sti    
  45192b:	sti    
  45192c:	sub    eax,0x25fbfb31
  451931:	std    
  451932:	cli    
  451933:	sti    
  451934:	sbb    eax,0x15fbf83f
  451939:	shr    edi,1
  45193b:	sti    
  45193c:	or     eax,0x5fbfad7
  451941:	mov    bl,0xf8
  451943:	sti    
  451944:	std    
  451945:	ret    0xfbf9
  451948:	cmc    
  451949:	retf   0xfbf9
  45194c:	in     eax,dx
  45194d:	into   
  45194e:	stc    
  45194f:	sti    
  451950:	in     eax,0x0
  451952:	clc    
  451953:	sti    
  451954:	fucom  st(4)
  451956:	idiv   ebx
  451958:	aad    0x1e
  45195a:	clc    
  45195b:	sti    
  45195c:	int    0xb0
  45195e:	inc    ebx
  45195f:	cld    
  451960:	(bad)
  451963:	cld    
  451964:	mov    ebp,0xb5fc425e
  451969:	bound  eax,QWORD PTR [edx-0x4]
	...
  451980:	lods   eax,DWORD PTR ds:[esi]
  451981:	jmp    0xfc42:0x7ea5fbf7
  451988:	popf   
  451989:	sbb    al,BYTE PTR [edx-0x4]
  45198c:	xchg   ebp,eax
  45198d:	adc    al,0x42
  45198f:	cld    
  451990:	lea    esp,[eax]
  451992:	inc    edx
  451993:	cld    
  451994:	test   DWORD PTR [eax+0x42],edx
  451997:	cld    
  451998:	jge    0x4519dc
  45199a:	inc    edx
  45199b:	cld    
  45199c:	jne    0x45194a
  45199e:	inc    edx
  45199f:	cld    
  4519a0:	ins    DWORD PTR es:[edi],dx
  4519a1:	xchg   esp,eax
  4519a2:	inc    edx
  4519a3:	cld    
  4519a4:	gs jp  0x4519e9
  4519a7:	cld    
  4519a8:	pop    ebp
  4519a9:	mov    al,BYTE PTR [edx-0x4]
  4519ac:	push   ebp
  4519ad:	les    eax,FWORD PTR [edx-0x4]
  4519b0:	dec    ebp
  4519b1:	ret    0xfbf8
  4519b4:	inc    ebp
  4519b5:	fpatan 
  4519b7:	stc    
  4519b8:	cmp    esi,ecx
  4519ba:	idiv   cl
  4519bc:	cmp    esi,ecx
  4519be:	ss stc 
  4519c0:	sub    esi,ecx
  4519c2:	cwde   
  4519c3:	imul   DWORD PTR [ecx]
  4519c5:	into   
  4519c6:	mov    dh,bh
  4519c8:	sbb    esi,ecx
  4519ca:	mov    ?,edi
  4519cc:	sbb    esi,ecx
  4519ce:	mov    al,ds:0xacce09f7
  4519d3:	test   DWORD PTR [ecx],0xf9f808ce
  4519d9:	int    0x12
  4519db:	inc    esp
  4519dc:	test   ch,0xf0
  4519df:	inc    ebx
  4519e0:	out    dx,al
  4519e1:	int    0xd4
  4519e3:	inc    ebx
	...
  4519f8:	out    0xcd,al
  4519fa:	in     al,dx
  4519fb:	neg    ecx
  4519fd:	int    0xe8
  4519ff:	neg    ecx
  451a01:	int    0xb8
  451a03:	sti    
  451a04:	leave  
  451a05:	int    0xca
  451a07:	sti    
  451a08:	leave  
  451a09:	int    0xba
  451a0b:	sti    
  451a0c:	mov    ecx,0xb9fb9ccd
  451a11:	int    0x56
  451a13:	sti    
  451a14:	test   eax,0xa9fb3ecd
  451a19:	int    0x62
  451a1b:	sti    
  451a1c:	cdq    
  451a1d:	int    0x72
  451a1f:	sti    
  451a20:	cdq    
  451a21:	int    0xf2
  451a23:	cli    
  451a24:	mov    ebp,ecx
  451a26:	hlt    
  451a27:	cli    
  451a28:	mov    ebp,ecx
  451a2a:	mov    esp,0xb2cd79fa
  451a2f:	cli    
  451a30:	jns    0x4519ff
  451a32:	or     al,0xfb
  451a34:	imul   ecx,ebp,0xcd69faf4
  451a3a:	fdiv   st(2),st
  451a3c:	pop    ecx
  451a3d:	int    0xe4
  451a3f:	cli    
  451a40:	pop    ecx
  451a41:	int    0x1
  451a43:	xor    eax,0x47f6d148
  451a48:	dec    eax
  451a49:	shl    esi,1
  451a4b:	and    DWORD PTR ds:0x2d3ff6d1,esi
  451a51:	shl    esi,1
  451a53:	daa    
  451a54:	xor    eax,0x2d53f6d1
  451a59:	shl    esi,1
  451a5b:	push   ebp
	...
  451a70:	adc    eax,0xd5ff6d1
  451a75:	shl    esi,1
  451a77:	mov    ecx,0x13f6d117
  451a7c:	or     cl,dl
  451a7e:	div    BYTE PTR [ecx-0x5e092f05]
  451a84:	sti    
  451a85:	shl    dh,1
  451a87:	(bad)  
  451a88:	jmp    0x451a5a
  451a8a:	div    BYTE PTR [edi-0x15]
  451a8d:	shl    dh,1
  451a8f:	inc    ebx
  451a90:	fcom   st(0)
  451a92:	test   BYTE PTR [ebp-0x28],0xd0
  451a96:	not    BYTE PTR [edi]
  451a98:	aad    0xd0
  451a9a:	imul   BYTE PTR [ebp-0x33]
  451a9d:	shl    dh,1
  451a9f:	mov    edi,0xe9f6cd21
  451aa4:	popa   
  451aa5:	fld    DWORD PTR [eax]
  451aa7:	(bad)  
  451aa8:	sbb    ch,cl
  451aaa:	div    BYTE PTR [ebp+0x47f6cd18]
  451ab0:	sub    ch,cl
  451ab2:	imul   cl
  451ab4:	popa   
  451ab5:	fld    DWORD PTR [eax]
  451ab7:	pop    ebp
  451ab8:	sbb    ecx,ebp
  451aba:	imul   ch
  451abc:	sbb    ecx,ebp
  451abe:	test   bh,0x2b
  451ac1:	int    0xf6
  451ac3:	mov    bh,0x2b
  451ac5:	int    0xf6
  451ac7:	stos   DWORD PTR es:[edi],eax
  451ac8:	sbb    ecx,ebp
  451aca:	test   BYTE PTR [ecx],0x18
  451acd:	int    0xf6
  451acf:	add    BYTE PTR [edi],bh
  451ad1:	and    dh,ch
  451ad3:	inc    DWORD PTR [eax]
	...
  451ae5:	add    BYTE PTR [eax],al
  451ae7:	add    BYTE PTR [ebp-0x5e000ae3],dl
  451aed:	sbb    eax,0x1d6dfff5
  451af2:	cmc    
  451af3:	dec    DWORD PTR [edi+0x4bfff51d]
  451af9:	fadd   DWORD PTR [eax]
  451afb:	add    BYTE PTR [esi],ch
  451afd:	fadd   DWORD PTR [eax]
  451aff:	sub    BYTE PTR [edi],0xd8
  451b02:	add    BYTE PTR [eax-0x7fff2761],al
  451b08:	cmp    ebx,eax
  451b0a:	add    BYTE PTR [eax-0x7fff2807],al
  451b10:	sub    al,0xd8
  451b12:	add    BYTE PTR [eax-0xae2bd],al
  451b18:	fwait
  451b19:	aad    0x0
  451b1b:	sub    ch,0xd7
  451b1e:	add    BYTE PTR [eax-0xae357],al
  451b24:	adc    ebx,DWORD PTR ds:0x1ce1fff5
  451b2a:	cmc    
  451b2b:	jmp    FWORD PTR [ecx-0x1e7fff29]
  451b31:	sbb    al,0xf5
  451b33:	(bad)  
  451b34:	cmp    ebx,DWORD PTR ds:0x1d4bfff5
  451b3a:	cmc    
  451b3b:	(bad)  
  451b3c:	mov    esi,0x4f8000d7
  451b41:	sbb    eax,0xd78ffff5
  451b46:	add    BYTE PTR [eax-0x7fff2868],al
	...
  451b60:	js     0x451b39
  451b62:	add    BYTE PTR [eax-0x7fff2858],al
  451b68:	mov    edi,ss
  451b6a:	add    BYTE PTR [eax-0x7fff287a],al
  451b70:	(bad)  
  451b71:	loopne 0x451bb7
  451b73:	cld    
  451b74:	lods   eax,DWORD PTR gs:[esi]
  451b76:	dec    edx
  451b77:	cld    
  451b78:	pop    ebp
  451b79:	ret    0x2
  451b7c:	loop   0x451b04
  451b7e:	dec    edx
  451b7f:	cld    
  451b80:	dec    ebp
  451b81:	gs dec edx
  451b83:	cld    
  451b84:	inc    ebp
  451b85:	mov    WORD PTR [edx],es
  451b87:	add    dl,ah
  451b89:	rol    DWORD PTR [edx],1
  451b8b:	add    dl,ah
  451b8d:	mov    dl,0x2
  451b8f:	add    dl,ah
  451b91:	rol    BYTE PTR [edx],0x0
  451b94:	bound  esp,QWORD PTR [esi+0x3e]
  451b97:	cld    
  451b98:	sbb    eax,0x15fc49a7
  451b9d:	test   DWORD PTR [ecx-0x4],ecx
  451ba0:	or     eax,0x5fc4983
  451ba5:	jns    0x451bf0
  451ba7:	cld    
  451ba8:	std    
  451ba9:	push   cs
  451baa:	dec    eax
  451bab:	cld    
  451bac:	cmc    
  451bad:	or     cl,BYTE PTR [eax-0x4]
  451bb0:	in     eax,dx
  451bb1:	sbb    al,0x48
  451bb3:	cld    
  451bb4:	in     eax,0x2e
  451bb6:	dec    eax
  451bb7:	cld    
  451bb8:	fld    QWORD PTR [eax+0x49]
  451bbb:	cld    
  451bbc:	aad    0x46
  451bbe:	dec    ecx
  451bbf:	cld    
  451bc0:	int    0x2c
  451bc2:	dec    ecx
  451bc3:	cld    
	...
  451bd8:	lds    ebx,FWORD PTR [edx]
  451bda:	dec    ecx
  451bdb:	cld    
  451bdc:	mov    ebp,0xb5fc4928
  451be1:	rol    BYTE PTR [edx],0x0
  451be4:	bound  esi,QWORD PTR [esi+edi*1-0xd495a04]
  451beb:	sti    
  451bec:	popf   
  451bed:	mov    ah,0xf2
  451bef:	sti    
  451bf0:	xchg   ebp,eax
  451bf1:	dec    esp
  451bf2:	(bad)  
  451bf4:	(bad)  
  451bf5:	rol    BYTE PTR [edx],0x0
  451bf8:	bound  ecx,QWORD PTR [edx]
  451bfa:	xor    al,0xfc
  451bfc:	jge    0x451bd7
  451bfe:	cmp    DWORD PTR ds:0x3d28ca76,0x3d60ca6e
  451c08:	retfw  0x3dce
  451c0c:	pop    esi
  451c0d:	retf   0x3dca
  451c10:	push   esi
  451c11:	retf   0x3d20
  451c14:	dec    esi
  451c15:	retf   0x3d42
  451c18:	inc    esi
  451c19:	retf   0x3cea
  451c1c:	ds retf 0x3e8
  451c20:	(bad)  
  451c21:	(bad)  [ebx-0x65ca59fd]
  451c27:	inc    edi
  451c28:	mov    ebp,0x863f7c38
  451c2d:	cmp    eax,0xd98b03e8
  451c32:	mov    ds:0x8512901f,eax
  451c37:	das    
  451c38:	inc    esi
  451c39:	cmp    eax,0x4b74
	...
  451c4e:	add    BYTE PTR [eax],al
  451c50:	cmp    DWORD PTR [ebx],0x44
  451c53:	and    BYTE PTR [edi-0x5bfa9527],dl
  451c59:	inc    ebp
  451c5a:	cmp    DWORD PTR [ecx],edi
  451c5c:	xchg   DWORD PTR [edi+0x51],eax
  451c5f:	cmp    eax,0x364f3344
  451c64:	aas    
  451c65:	cmp    BYTE PTR [ebx*1+0x36183b45],ch
  451c6c:	cmp    eax,0x31373d36
  451c71:	(bad)  ds:0x43d1638
  451c77:	loop   0x451c82
  451c79:	cmp    eax,0xd60703fc
  451c7e:	and    BYTE PTR [edx],ah
  451c80:	or     eax,DWORD PTR [ebp+0x11]
  451c83:	and    eax,0x29023ffe
  451c88:	and    DWORD PTR [edi+0x1],eax
  451c8b:	add    BYTE PTR [edx+0x40],cl
  451c8e:	bound  ecx,QWORD PTR [eax]
  451c90:	inc    edx
  451c91:	es pop esp
  451c93:	retf   0x402d
  451c96:	iretw  
  451c98:	popa   
  451c99:	jecxz  0x451c9a
  451c9b:	lods   al,BYTE PTR ds:[esi]
  451c9c:	cmp    dh,BYTE PTR ds:0x1c8ad55c
  451ca2:	jae    0x451c74
  451ca4:	lea    esi,[edx]
  451ca6:	(bad)  
  451ca7:	enter  0x2c6d,0x5c
  451cab:	retf   0x328d
  451cae:	mov    di,0xd861
  451cb2:	sti    
  451cb3:	mov    ecx,0x0
	...
  451cc8:	mov    dh,BYTE PTR ds:0x35748845
  451cce:	cmp    al,0x9b
  451cd0:	outs   dx,DWORD PTR ds:[esi]
  451cd1:	inc    eax
  451cd2:	jae    0x451cbd
  451cd4:	popa   
  451cd5:	cmp    BYTE PTR [eax],al
  451cd7:	scas   eax,DWORD PTR es:[edi]
  451cd8:	jbe    0x451d17
  451cda:	pop    esp
  451cdb:	xchg   ebp,eax
  451cdc:	outs   dx,BYTE PTR ds:[esi]
  451cdd:	ds pop esp
  451cdf:	popf   
  451ce0:	inc    eax
  451ce1:	add    eax,0x3aa57a66
  451ce6:	ins    DWORD PTR es:[edi],dx
  451ce7:	dec    esp
  451ce8:	call   0x3d0:0x66446432
  451cef:	cmp    esi,DWORD PTR cs:0x4983444d
  451cf6:	aas    
  451cf7:	push   eax
  451cf8:	and    BYTE PTR [esi],0x47
  451cfb:	dec    eax
  451cfc:	and    DWORD PTR [esi],0x4e
  451cff:	jmp    0x25451265
  451d04:	or     DWORD PTR [ebp+edi*1+0x8],0x104d267a
  451d0c:	and    DWORD PTR [esi],0x4d
  451d0f:	push   es
  451d10:	sbb    BYTE PTR [edx],dh
  451d12:	gs add al,0x3a
  451d15:	xor    ah,BYTE PTR [eax+eax*1+0x66]
  451d19:	fst    QWORD PTR [eax]
  451d1b:	push   es
  451d1c:	pop    edi
  451d1d:	adc    BYTE PTR [ebp+0x72],ah
  451d20:	pop    eax
  451d21:	cli    
  451d22:	jo     0x451d65
  451d24:	mov    ebx,esp
  451d26:	pop    ss
  451d27:	push   es
  451d28:	(bad)  
  451d29:	pcmpgtw mm6,QWORD PTR [edx+0x0]
	...
  451d3d:	add    BYTE PTR [eax],al
  451d3f:	add    BYTE PTR [eax-0x459187f4],bl
  451d45:	fdivr  QWORD PTR [eax+0x540e0501]
  451d4b:	pmulhw mm4,QWORD PTR gs:[edx+0x72]
  451d50:	sbb    cl,BYTE PTR [esi]
  451d52:	js     0x451d54
  451d54:	js     0x451d35
  451d56:	cmp    al,0x6f
  451d58:	sub    al,BYTE PTR [eax]
  451d5a:	cmp    eax,0x600de969
  451d5f:	jb     0x451d63
  451d61:	and    eax,DWORD PTR [ecx]
  451d63:	add    BYTE PTR [esi],ch
  451d65:	rcr    BYTE PTR [ebx+esi*2-0x9],cl
  451d69:	or     eax,0x22ed655d
  451d6e:	add    DWORD PTR [eax],eax
  451d70:	cli    
  451d71:	fidiv  WORD PTR ds:0x54308765
  451d77:	ins    DWORD PTR es:[edi],dx
  451d78:	jnp    0x451da6
  451d7a:	pusha  
  451d7b:	je     0x451d10
  451d7d:	and    al,BYTE PTR [ecx]
  451d7f:	add    BYTE PTR [ecx-0x789aca21],dl
  451d85:	sbb    DWORD PTR [eax+0x73],esp
  451d88:	aaa    
  451d89:	and    BYTE PTR [ebx+0x72],dh
  451d8c:	sub    al,0xf
  451d8e:	add    DWORD PTR [eax],eax
  451d90:	push   esi
  451d91:	fbstp  TBYTE PTR ds:0x732d8765
  451d97:	outs   dx,DWORD PTR ds:[esi]
  451d98:	sub    BYTE PTR [edx*2+0x72005964],bl
  451d9f:	jae    0x451d5c
  451da1:	fstp   TBYTE PTR [eax+0x1]
	...
  451db8:	(bad)  
  451db9:	clc    
  451dba:	sbb    DWORD PTR [edi+eax*1+0xe],esp
  451dbe:	sbb    ah,BYTE PTR [ebp-0x1]
  451dc1:	in     eax,0x1f
  451dc3:	inc    esp
  451dc4:	std    
  451dc5:	shl    BYTE PTR [ecx],cl
  451dc7:	fs sbb al,0xd9
  451dca:	and    BYTE PTR [ebp+0x16],bl
  451dcd:	fst    DWORD PTR ds:0xffb3625d
  451dd3:	push   edx
  451dd4:	pop    es
  451dd5:	scas   al,BYTE PTR es:[edi]
  451dd6:	dec    eax
  451dd7:	imul   esi,esi,0xd66c4394
  451ddd:	mov    ds:0x84cf621b,al
  451de2:	pop    ds
  451de3:	jae    0x451d9a
  451de5:	mov    al,0x2
  451de7:	subps  xmm3,XMMWORD PTR [ebp+ebp*1+0x3293b06c]
  451def:	jns    0x451d7e
  451df1:	mov    al,0x2
  451df3:	push   cs
  451df4:	fs push esp
  451df6:	sub    eax,0x3253b06c
  451dfb:	jns    0x451da0
  451dfd:	mov    al,0x2
  451dff:	inc    ebp
  451e00:	popa   
  451e01:	mov    BYTE PTR [edi],bl
  451e03:	popa   
  451e04:	xchg   edx,eax
  451e05:	jno    0x451e1d
  451e07:	fs jne 0x451e5d
  451e0a:	add    dl,BYTE PTR [ecx+0x61]
  451e0d:	js     0x451e2e
  451e0f:	popa   
  451e10:	jb     0x451e08
  451e12:	cs pop ebp
  451e14:	xchg   DWORD PTR [eax-0x89f7efe],esi
  451e1a:	sbb    eax,0x6c
	...
  451e2f:	add    BYTE PTR [edi],ch
  451e31:	pop    es
  451e32:	sub    DWORD PTR [ebp+0x46],ebp
  451e35:	adc    eax,0x1c3c6135
  451e3a:	and    DWORD PTR [ebp+0x2d],ebx
  451e3d:	mov    al,0x2
  451e3f:	push   eax
  451e40:	popa   
  451e41:	clc    
  451e42:	sbb    eax,0x23d93261
  451e47:	daa    
  451e48:	xor    DWORD PTR [ebp+0x1a],ecx
  451e4b:	and    DWORD PTR [ebx],ebp
  451e4d:	fstp   DWORD PTR [esi]
  451e4f:	add    eax,0x34093c2a
  451e54:	and    DWORD PTR [ebx+0x5],ecx
  451e57:	and    edi,esi
  451e59:	cmp    ebp,eax
  451e5b:	add    esp,DWORD PTR [ebx+ebx*8]
  451e5e:	es daa 
  451e60:	push   cs
  451e61:	adc    DWORD PTR [ecx],ecx
  451e63:	and    dl,BYTE PTR [esi]
  451e65:	xor    eax,0x3f043ac5
  451e6a:	(bad)  
  451e6b:	xor    eax,0x1ad437ff
  451e70:	lds    esi,FWORD PTR [edi]
  451e72:	call   0x9721397a
  451e77:	and    bh,BYTE PTR [ebx-0x2fdf61b3]
  451e7d:	adc    al,0xb5
  451e7f:	pop    ds
  451e80:	into   
  451e81:	xor    BYTE PTR [eax-0x75e968e1],bh
  451e87:	sbb    eax,0x348c3a8f
  451e8c:	(bad)  
  451e8d:	fldpi  
  451e8f:	or     DWORD PTR [esi+0x358c4a],eax
	...
  451ea5:	add    BYTE PTR [eax],al
  451ea7:	add    BYTE PTR [esi+0x3c],bh
  451eaa:	mov    es,WORD PTR [edx+0x62]
  451ead:	fld    DWORD PTR [edx+0x6]
  451eb0:	xchg   ebp,eax
  451eb1:	cmp    BYTE PTR [ecx+0x7a363c37],al
  451eb7:	push   esp
  451eb8:	mov    esi,DWORD PTR [edi]
  451eba:	inc    edi
  451ebb:	and    BYTE PTR [edi-0x78e5b5ea],cl
  451ec1:	cmp    dl,BYTE PTR [esp+eax*1-0x2d]
  451ec5:	fld    TBYTE PTR [esi]
  451ec7:	xor    cl,BYTE PTR [ebx+0x4d]
  451eca:	inc    ebp
  451ecb:	inc    esi
  451ecc:	cmp    esi,DWORD PTR ds:0xd894043d
  451ed2:	add    BYTE PTR [edx],ch
  451ed4:	jo     0x451efa
  451ed6:	pusha  
  451ed7:	xor    eax,0x1568078b
  451edc:	jnp    0x451ef4
  451ede:	add    DWORD PTR [edi+ebx*2+0x7],ecx
  451ee2:	gs sbb al,0x51
  451ee5:	xor    DWORD PTR [edi],edi
  451ee7:	add    BYTE PTR [edx+0x24],al
  451eea:	inc    ebx
  451eeb:	cld    
  451eec:	inc    edi
  451eed:	daa    
  451eee:	pop    esp
  451eef:	sti    
  451ef0:	push   eax
  451ef1:	fld    DWORD PTR [eax]
  451ef3:	test   eax,0x8661d61
  451ef8:	dec    edx
  451ef9:	sbb    eax,0x3833cb68
  451efe:	jae    0x451ee0
  451f00:	push   ds
  451f01:	fld    DWORD PTR [eax]
  451f03:	data16 sbb BYTE PTR [di-0x42],ah
  451f08:	nop
  451f09:	es dec ecx
  451f0b:	enter  0x0,0x0
	...
  451f1f:	add    BYTE PTR [edi+0x25],ch
  451f22:	les    esp,FWORD PTR gs:[ecx+0x5c]
  451f26:	add    BYTE PTR [edi-0x58a2c4a2],ch
  451f2c:	push   esi
  451f2d:	inc    edi
  451f2e:	jb     0x451ecd
  451f30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  451f31:	xor    ah,BYTE PTR [ebp-0x7c]
  451f34:	mov    ecx,ds
  451f36:	add    BYTE PTR [edi],ch
  451f38:	data16 sbb BYTE PTR [ebx-0x7c],dh
  451f3c:	ds xor eax,0x476ead5c
  451f42:	pop    esp
  451f43:	mov    cl,BYTE PTR [ebp+0x3c]
  451f46:	jae    0x451fb8
  451f48:	xchg   esp,eax
  451f49:	fld    DWORD PTR [eax]
  451f4b:	aas    
  451f4c:	imul   edx,DWORD PTR [ebx],0x68
  451f4f:	pop    ebx
  451f50:	sub    dh,BYTE PTR [esi]
  451f52:	pusha  
  451f53:	dec    ebp
  451f54:	pushf  
  451f55:	inc    edi
  451f56:	pop    esp
  451f57:	dec    esp
  451f58:	sbb    ax,WORD PTR [ebx]
  451f5b:	mov    esi,DWORD PTR es:0xf932003f
  451f62:	push   ebx
  451f63:	inc    ecx
  451f64:	pop    DWORD PTR [ecx]
  451f66:	jae    0x451fd1
  451f68:	sub    DWORD PTR [edx],eax
  451f6a:	gs gs js 0x451f9a
  451f6e:	add    DWORD PTR [eax],eax
  451f70:	and    edx,ecx
  451f72:	push   edx
  451f73:	gs pop edx
  451f75:	icebp  
  451f76:	imul   esp,DWORD PTR ss:[edi-0xe],0xd74e0000
  451f7e:	xor    eax,0x681e8f65
  451f83:	ins    BYTE PTR es:[edi],dx
	...
  451f98:	pop    esi
  451f99:	sub    BYTE PTR [eax+0x7a],ch
  451f9c:	outs   dx,BYTE PTR ds:[esi]
  451f9d:	adc    bh,BYTE PTR [ecx+0x0]
  451fa0:	and    cl,dl
  451fa2:	inc    esi
  451fa3:	imul   ecx,DWORD PTR [ecx-0x689e9bf4],0x246c5d1d
  451fad:	test   DWORD PTR [eax],0x36ddbf00
  451fb3:	imul   esi,DWORD PTR ds:0x146c41fc,0xea005407
  451fbd:	fist   DWORD PTR [edx+0x65]
  451fc0:	mul    dl
  451fc2:	gs jmp sp
  451fc6:	jb     0x45202d
  451fc8:	fmul   DWORD PTR [ebx]
  451fca:	pop    esi
  451fcb:	jb     0x451fbf
  451fcd:	sub    al,BYTE PTR [ecx]
  451fcf:	add    BYTE PTR [eax-0xa96c923],dl
  451fd5:	sti    
  451fd6:	ds gs jecxz 0x451fe5
  451fda:	aaa    
  451fdb:	imul   esp,edi,0x7a0045f0
  451fe1:	fnsave [ebx]
  451fe3:	js     0x451f70
  451fe5:	clc    
  451fe6:	pop    esi
  451fe7:	fs ds jecxz 0x452051
  451feb:	imul   esp,DWORD PTR [edx+0x20],0x1d476614
  451ff2:	pop    ss
  451ff3:	ins    BYTE PTR es:[edi],dx
  451ff4:	xor    DWORD PTR [esi],eax
  451ff6:	xor    ebp,DWORD PTR [ecx+0x34]
  451ff9:	sbb    esi,DWORD PTR [eax]
  451ffb:	dec    edi
	...
  452010:	bound  ecx,QWORD PTR [esi+0xe3f5309]
  452016:	outs   dx,BYTE PTR ds:[esi]
  452018:	inc    edi
  452019:	in     al,dx
  45201a:	cmp    BYTE PTR [eax],al
  45201c:	(bad)  
  45201e:	add    DWORD PTR [edi],edi
  452020:	pop    es
  452021:	out    0x58,al
  452023:	imul   eax,DWORD PTR [ecx],0x17673fd7
  452029:	in     al,dx
  45202a:	cmp    BYTE PTR [eax],al
  45202c:	bound  eax,QWORD PTR ds:0xd1074400
  452032:	cs pop ebp
  452034:	and    eax,eax
  452036:	sbb    ebp,DWORD PTR [ebx+edi*8-0x72]
  45203a:	and    esp,DWORD PTR [ecx+edx*1-0x63]
  45203e:	and    DWORD PTR [ebx+ecx*8-0x65],ebp
  452042:	adc    al,0x0
  452044:	bound  esi,QWORD PTR [eax+0x3]
  452047:	cmp    eax,0x721f84bc
  45204c:	mov    eax,ds:0xcb6c1b7e
  452051:	(bad)  
  452052:	and    esp,DWORD PTR [ecx+edx*4-0x63]
  452056:	and    DWORD PTR [ebx+edi*4+0x6b],ebp
  45205a:	adc    al,0x0
  45205c:	bound  edi,QWORD PTR [edx+0x0]
  45205f:	aas    
  452060:	xchg   DWORD PTR [edi+edi*1+0x78],esp
  452064:	mov    ebp,DWORD PTR [ecx+eax*2+0x67]
  452068:	xchg   BYTE PTR [ebp+0x4e],dl
  45206b:	push   0x5c235d90
  452070:	(bad)  
  452071:	idiv   ah
  452073:	inc    edx
	...
  452088:	jo     0x4520e7
  45208a:	and    ebp,DWORD PTR [edi+eax*4-0x27]
  45208e:	and    al,0x36
  452090:	xchg   DWORD PTR [ebx],esi
  452092:	dec    esp
  452093:	push   ebp
  452094:	(bad)  
  452095:	fldcw  WORD PTR [esi]
  452097:	pop    es
  452098:	xor    DWORD PTR ds:0xd952273d,esi
  45209e:	mov    ecx,0x2c3c8501
  4520a3:	push   ecx
  4520a4:	cmp    eax,DWORD PTR [esi+0x34]
  4520a7:	daa    
  4520a8:	aas    
  4520a9:	sub    eax,0xd90f1f41
  4520ae:	mov    al,BYTE PTR [edx]
  4520b0:	gs cmp al,0xc
  4520b3:	inc    ecx
  4520b4:	add    eax,0xfc22fd34
  4520b9:	cmp    al,0x14
  4520bb:	sbb    eax,DWORD PTR [esp+edi*1]
  4520be:	pop    ss
  4520bf:	add    al,0xa9
  4520c1:	(bad)  
  4520c2:	and    al,0x23
  4520c4:	repnz sub al,BYTE PTR [ecx]
  4520c7:	daa    
  4520c8:	add    eax,0xfb45fe12
  4520cd:	xor    al,0xc5
  4520cf:	add    edx,ecx
  4520d1:	fsubr  QWORD PTR [ebp+ebx*1+0x55d838c7]
  4520d8:	retf   
  4520d9:	cmp    al,0xcf
  4520db:	cmp    al,0xac
  4520dd:	sbb    edx,ecx
  4520df:	pop    ds
  4520e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4520e1:	fld    DWORD PTR [esi+0x3]
  4520e4:	mov    eax,ds:0xc622c547
  4520e9:	cmp    al,0x98
  4520eb:	xor    DWORD PTR [eax],eax
	...
  4520fd:	add    BYTE PTR [eax],al
  4520ff:	add    ch,al
  452101:	test   DWORD PTR ss:[eax],esi
  452104:	mov    cl,0x2a
  452106:	call   0xab1e520e
  45210b:	xor    DWORD PTR [edi+0x4c268c38],esi
  452111:	xor    BYTE PTR [esi+eiz*1+0x3378389f],cl
  452118:	mov    esi,DWORD PTR [ebx]
  45211a:	add    DWORD PTR [esi-0x4fff2672],ecx
  452120:	pusha  
  452121:	add    eax,0x304a596c
  452126:	bound  ecx,QWORD PTR [eax-0x6e]
  452129:	and    al,0x49
  45212b:	dec    eax
  45212c:	js     0x452153
  45212e:	gs inc esp
  452130:	pushfw 
  452132:	add    dh,BYTE PTR ds:0x4d603669
  452138:	and    BYTE PTR [edi+0x5c],al
  45213b:	dec    esp
  45213c:	pop    esi
  45213d:	je     0x45213c
  45213f:	sbb    al,BYTE PTR [ebx-0x7ceb93ba]
  452145:	adc    eax,0x38431b69
  45214a:	pop    ebp
  45214b:	jmp    0x264812b1
  452150:	inc    ebx
  452151:	xor    eax,0x474ffc42
  452156:	pop    esp
  452157:	rdmsr  
  452159:	adc    eax,0x3842fb69
  45215e:	pop    ebp
  45215f:	and    BYTE PTR [edx-0x27],al
  452162:	add    BYTE PTR [esi+0x0],bh
	...
  452175:	add    BYTE PTR [eax],al
  452177:	add    BYTE PTR [edx+0x27],ah
  45217a:	pop    esp
  45217b:	int    0x82
  45217d:	cmp    dh,BYTE PTR [edx-0x34]
  452180:	call   0xd9:0x79c46d2e
  452187:	ret    
  452188:	pop    esp
  452189:	adc    dh,BYTE PTR [edx-0x55]
  45218c:	xchg   BYTE PTR ds:0x1d7ecc53,bl
  452192:	push   ecx
  452193:	mov    ch,0x77
  452195:	fld    DWORD PTR [eax]
  452197:	push   esi
  452198:	arpl   WORD PTR [edi],cx
  45219a:	push   0x602e4d9b
  45219f:	test   DWORD PTR [ebx-0x5d7ba3b5],esp
  4521a5:	inc    ecx
  4521a6:	add    DWORD PTR [eax],eax
  4521a8:	scas   eax,DWORD PTR es:[edi]
  4521a9:	fiadd  DWORD PTR [esi+0x69]
  4521ac:	jns    0x45219e
  4521ae:	arpl   WORD PTR [ecx-0x21],sp
  4521b1:	adc    eax,0xf76c6c5d
  4521b6:	xor    edi,DWORD PTR [eax-0x5]
  4521b9:	fdiv   st(2),st
  4521bb:	add    eax,0x74680794
  4521c0:	es and eax,0xfa186f73
  4521c6:	jno    0x45223b
  4521c8:	mov    ?,edx
  4521ca:	pop    ebx
  4521cb:	outs   dx,DWORD PTR ds:[esi]
  4521cc:	jns    0x4521bc
  4521ce:	add    BYTE PTR [eax],al
  4521d0:	mov    ebp,0x77735cda
  4521d5:	pop    es
  4521d6:	bound  esp,QWORD PTR [ecx+0x47]
  4521d9:	sub    al,0x1
	...
  4521ef:	add    BYTE PTR [edx-0x28],bh
  4521f2:	inc    edi
  4521f3:	outs   dx,BYTE PTR ds:[esi]
  4521f4:	ja     0x4521f0
  4521f6:	jb     0x452264
  4521f8:	mov    edi,?
  4521fa:	imul   esp,DWORD PTR [ebp+0x57],0x79635efe
  452201:	stc    
  452202:	pop    ebx
  452203:	gs pop ebp
  452205:	or     DWORD PTR [ecx],eax
  452207:	add    BYTE PTR [esi-0x29],ch
  45220a:	inc    edi
  45220b:	outs   dx,BYTE PTR ds:[esi]
  45220c:	xchg   ecx,edi
  45220e:	jb     0x45227c
  452210:	sub    al,0xf7
  452212:	imul   esp,DWORD PTR [ebp+0x27],0x29635400
  452219:	stc    
  45221a:	pop    ebx
  45221b:	gs sub eax,0xc00000f0
  452221:	fld    DWORD PTR [ebx+0x6e]
  452224:	stc    
  452225:	clc    
  452226:	push   ebp
  452227:	imul   ebp,eax,0xe47253ef
  45222d:	hlt    
  45222e:	addr16 je 0x45223c
  452231:	fmul   QWORD PTR [edi+0x21846204]
  452237:	pop    edi
  452238:	jnp    0x45229d
  45223a:	es pop ebp
  45223c:	nop
  45223d:	pop    edi
  45223e:	sbb    eax,0x1b787669
  452243:	jb     0x4521d6
  452245:	pop    ecx
  452246:	sbb    BYTE PTR [edi+0x7e],bl
  452249:	push   ebp
  45224a:	cmp    esp,DWORD PTR [edx+0x78]
  45224d:	or     eax,0xb1626c1c
  452252:	add    eax,DWORD PTR [ebx+0x0]
	...
  452265:	add    BYTE PTR [eax],al
  452267:	add    BYTE PTR [eax+0xd],dl
  45226a:	and    ch,BYTE PTR [edi+eax*2+0x6]
  45226e:	adc    eax,0x21113f72
  452273:	add    BYTE PTR [edx+0x5d],ah
  452276:	test   BYTE PTR [esi+0x4b],0xe
  45227a:	push   ss
  45227b:	inc    ebx
  45227c:	cmp    dl,BYTE PTR [ecx]
  45227e:	das    
  45227f:	dec    esp
  452280:	xor    eax,0x16642605
  452285:	jmp    0xcd539bc8
  45228a:	cld    
  45228b:	aas    
  45228c:	popa   
  45228d:	neg    DWORD PTR [eax]
  45228f:	addr16 add cl,dl
  452292:	sbb    BYTE PTR [ebp+ecx*1-0x2d],al
  452296:	adc    eax,DWORD PTR [eax]
  452298:	(bad)  
  452299:	out    dx,eax
  45229a:	sti    
  45229b:	ds (bad) 
  45229d:	mov    esi,0x7cf6611c
  4522a2:	sbb    BYTE PTR [ebp+ecx*8-0x6d],ah
  4522a6:	adc    eax,0xff366200
  4522ab:	ds (bad) 
  4522ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4522ae:	cmp    BYTE PTR [ecx-0x32],ah
  4522b1:	test   eax,0x99915d30
  4522b6:	sub    eax,0x3b95bf6c
  4522bb:	les    di,DWORD PTR [edi+0x2]
  4522bf:	and    esp,DWORD PTR [ecx-0x27]
  4522c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4522c3:	push   ds
  4522c4:	mov    fs,WORD PTR [edi]
  4522c6:	jge    0x4522fd
  4522c8:	xchg   ecx,eax
  4522c9:	xor    BYTE PTR [edi+0x19],bh
	...
  4522e0:	dec    edi
  4522e1:	inc    ecx
  4522e2:	scas   eax,DWORD PTR es:[edi]
  4522e3:	add    edx,DWORD PTR [edx]
  4522e5:	fisubr DWORD PTR [edx+0x6c389f35]
  4522eb:	push   ds
  4522ec:	nop
  4522ed:	xor    al,0x7d
  4522ef:	sbb    BYTE PTR [esi+0x34],bh
  4522f2:	mov    WORD PTR [ebx],ds
  4522f4:	jo     0x45232a
  4522f6:	dec    ecx
  4522f7:	and    BYTE PTR [edx-0x27],ah
  4522fa:	out    dx,eax
  4522fb:	call   FWORD PTR [ecx+ecx*2]
  4522fe:	inc    ebp
  4522ff:	sbb    dh,BYTE PTR [edx]
  452301:	dec    ebx
  452302:	aaa    
  452303:	and    eax,0x43b4a27
  452308:	mov    dl,ch
  45230a:	pop    ss
  45230b:	ss cmp eax,0x3135453a
  452311:	or     bh,dl
  452313:	inc    ecx
  452314:	cmp    ecx,DWORD PTR [ebx+0x1b]
  452317:	xor    BYTE PTR ds:0x25ffd1d9,ch
  45231d:	dec    ebx
  45231e:	jmp    DWORD PTR [edi+ebp*1]
  452321:	dec    edx
  452322:	sbb    esi,ebp
  452324:	push   ebx
  452325:	syscall 
  452327:	sub    al,0xe
  452329:	es call 0x2b1d8b32
  45232f:	ss (bad) 
  452333:	push   ds
  452334:	push   ss
  452335:	cs iret 
  452337:	pop    ss
  452338:	retf   0xc434
  45233b:	xor    edx,DWORD PTR [ecx-0x3ce644f5]
  452341:	dec    ecx
  452342:	fistp  DWORD PTR [ebx]
	...
  452358:	mov    ebp,0x7b03e845
  45235d:	fistp  DWORD PTR [esi+0x115c61e]
  452363:	mov    ebx,0x955c2f48
  452368:	js     0x4523b3
  45236a:	pop    esp
  45236b:	mov    esi,0xa6034861
  452370:	je     0x45239f
  452372:	inc    ebp
  452373:	xchg   BYTE PTR [edx+0x30],al
  452376:	bound  ecx,QWORD PTR [eax-0x6f8d0293]
  45237c:	xor    ebx,DWORD PTR [edx+esi*2]
  45237f:	jmp    0x9d416ce5
  452384:	dec    esp
  452385:	dec    ebx
  452386:	or     BYTE PTR fs:[ebx+0x38],0x6d
  45238b:	dec    esp
  45238c:	xor    dh,BYTE PTR [ecx]
  45238e:	jae    0x4523d4
  452390:	jg     0x4523af
  452392:	add    DWORD PTR [edx+0x63],ebp
  452395:	or     eax,0x1c855a65
  45239a:	ins    DWORD PTR es:[edi],dx
  45239b:	pop    ds
  45239c:	xchg   DWORD PTR ds:0x3d5e446c,esi
  4523a2:	cld    
  4523a3:	sbb    al,0x4a
  4523a5:	dec    edx
  4523a6:	push   edx
  4523a7:	inc    esp
  4523a8:	jb     0x4523b9
  4523aa:	pusha  
  4523ab:	adc    eax,0x68011c53
  4523b0:	arpl   WORD PTR ds:0x35271a65,cx
  4523b6:	inc    BYTE PTR gs:[eax-0x27]
  4523ba:	add    BYTE PTR [eax+eax*1+0x0],cl
	...
  4523cd:	add    BYTE PTR [eax],al
  4523cf:	add    BYTE PTR [esi+0x1a],ah
  4523d2:	jae    0x4523d8
  4523d4:	aas    
  4523d5:	sub    eax,0x2d33245c
  4523da:	pop    esp
  4523db:	icebp  
  4523dc:	adc    al,0xd9
  4523de:	add    ch,ch
  4523e0:	pop    ebp
  4523e1:	adc    al,0x71
  4523e3:	les    ebp,FWORD PTR [edi+0x16]
  4523e6:	ins    BYTE PTR es:[edi],dx
  4523e7:	fld    QWORD PTR [edx+0x61e94e41]
  4523ed:	add    eax,0x9dafffd
  4523f2:	push   esp
  4523f3:	jb     0x452417
  4523f5:	sub    DWORD PTR [edx+esi*2+0x1d],edx
  4523f9:	in     al,0x72
  4523fb:	ins    DWORD PTR es:[edi],dx
  4523fc:	sbb    ah,bh
  4523fe:	popa   
  4523ff:	gs enter 0x63e3,0x6e
  452404:	out    dx,eax
  452405:	stc    
  452406:	jb     0x452408
  452408:	sbb    al,0xdb
  45240a:	xor    eax,0x6417ef65
  45240f:	jb     0x45248a
  452411:	stc    
  452412:	pop    esi
  452413:	je     0x4523e4
  452415:	loopne 0x452489
  452417:	gs fcmovu st,st(4)
  45241a:	add    BYTE PTR [eax],al
  45241c:	mov    ecx,0x3f6551d9
  452421:	sub    DWORD PTR [ecx+0x72],ebp
  452424:	push   ds
  452425:	not    BYTE PTR [eax+edx*2+0x29]
  452429:	ficomp WORD PTR [ebp+0x72]
  45242c:	and    cl,BYTE PTR [ecx]
  45242e:	js     0x452430
  452430:	mov    edi,edx
  452432:	xor    eax,0x65
	...
  452447:	add    BYTE PTR [edi+0x1a],ch
  45244a:	pop    edi
  45244b:	jbe    0x45246f
  45244d:	pop    es
  45244e:	pop    esi
  45244f:	outs   dx,BYTE PTR ds:[esi]
  452450:	data16 cli 
  452452:	pop    esi
  452453:	je     0x4524b2
  452455:	div    BYTE PTR [edx+0x69]
  452458:	push   0xfffffff7
  45245a:	pop    esp
  45245b:	gs dec esp
  45245d:	aad    0x6d
  45245f:	add    eax,0x6572dd4f
  452464:	push   0xfffffff9
  452466:	xor    DWORD PTR [edx],esi
  452468:	cmp    eax,0x6f7372de
  45246d:	fadd   DWORD PTR [eax+0x72dd4f05]
  452473:	gs sub bl,ah
  452476:	xor    DWORD PTR [edx],esi
  452478:	add    eax,0x627478f9
  45247d:	mov    dl,0x2
  45247f:	or     al,0x5c
  452481:	jle    0x4524b6
  452483:	ins    BYTE PTR es:[edi],dx
  452484:	mov    al,0x8f
  452486:	sbb    DWORD PTR [eax-0x35],esi
  452489:	arpl   WORD PTR [edx],ax
  45248b:	mov    ah,BYTE PTR [edi+0x5e]
  45248e:	xor    BYTE PTR [ecx-0x61],bh
  452491:	jl     0x4524b9
  452493:	pop    ebp
  452494:	nop
  452495:	outs   dx,DWORD PTR ds:[esi]
  452496:	xor    BYTE PTR [ecx-0x72],ch
  452499:	imul   esp,DWORD PTR [ebx],0x217f7e61
  45249f:	arpl   WORD PTR [esi+0x62660f59],cx
  4524a5:	lahf   
  4524a6:	hlt    
  4524a7:	arpl   WORD PTR [ecx+0x46],si
  4524aa:	xor    BYTE PTR [ebx+0x0],ah
	...
  4524bd:	add    BYTE PTR [eax],al
  4524bf:	add    BYTE PTR [edi+0x42],bh
  4524c2:	adc    eax,0x39a6241
  4524c7:	aas    
  4524c8:	inc    edi
  4524c9:	push   ds
  4524ca:	inc    edi
  4524cb:	addr16 inc esi
  4524cd:	and    eax,0x111c5d0e
  4524d2:	push   cs
  4524d3:	pop    ebp
  4524d4:	sbb    al,0xfb
  4524d6:	xor    cl,BYTE PTR [esi+0x4d]
  4524d9:	es es gs aas 
  4524dd:	in     eax,dx
  4524de:	or     ebp,DWORD PTR [ebp+0x3c]
  4524e1:	dec    BYTE PTR [edi+eiz*2+0x3b]
  4524e5:	cld    
  4524e6:	xor    BYTE PTR [edi+0x62],cl
  4524e9:	push   ds
  4524ea:	test   BYTE PTR [ebp+0xb],0xe0
  4524ee:	xor    BYTE PTR [ebp+0x3],ch
  4524f1:	(bad)  
  4524f2:	push   ecx
  4524f3:	ins    DWORD PTR es:[edi],dx
  4524f4:	(bad)  
  4524f5:	fild   QWORD PTR [ecx]
  4524f7:	cmp    eax,0x5b02b1fa
  4524fc:	pop    esi
  4524fd:	loopne 0x452514
  4524ff:	popa   
  452500:	push   es
  452501:	loop   0x452535
  452503:	addr16 add ebp,edx
  452506:	das    
  452507:	jae    0x4524b8
  452509:	fld    st(4)
  45250b:	push   ss
  45250c:	mov    ebp,0x1003e147
  452511:	aad    0xb5
  452513:	sbb    dl,al
  452515:	inc    ebp
  452516:	int    0x22
  452518:	(bad)  
  452519:	sub    DWORD PTR [edx-0x34cb39ec],edi
  45251f:	das    
  452520:	outs   dx,DWORD PTR ds:[esi]
  452521:	inc    ecx
  452522:	call   0x45252a
	...
  452537:	add    BYTE PTR [esi-0x7ce1602a],dl
  45253d:	dec    ecx
  45253e:	mov    edx,0x842da31e
  452543:	adc    al,0x81
  452545:	fst    DWORD PTR [ecx+0x2]
  452548:	inc    ebp
  452549:	xor    al,0x8c
  45254b:	push   ebx
  45254c:	jo     0x452578
  45254e:	mov    ebx,DWORD PTR [esi]
  452550:	jno    0x452598
  452552:	mov    al,0x1e
  452554:	or     DWORD PTR [ecx-0x18],0x3
  452558:	(bad)  
  452559:	(bad)  
  45255a:	xchg   esp,eax
  45255b:	cs inc esi
  45255d:	inc    ebp
  45255e:	push   ecx
  45255f:	inc    edx
  452560:	pop    ebx
  452561:	inc    ebp
  452562:	cmp    eax,0x41224550
  452567:	and    BYTE PTR [edi],ah
  452569:	push   ss
  45256a:	inc    eax
  45256b:	and    esi,DWORD PTR [eax]
  45256d:	(bad)  [ebx+eax*1+0x77]
  452571:	inc    ecx
  452572:	push   ecx
  452573:	xor    BYTE PTR [edx],dl
  452575:	inc    edi
  452576:	aas    
  452577:	and    DWORD PTR [edi],eax
  452579:	inc    esi
  45257a:	cmp    eax,DWORD PTR [ecx+ebx*4]
  45257d:	aad    0x3a
  45257f:	pop    ds
  452580:	push   es
  452581:	adc    al,0x1a
  452583:	xor    al,BYTE PTR ds:0x26151d47
  452589:	xor    al,0xe8
  45258b:	add    ecx,DWORD PTR [ecx+0x61f26d8]
  452591:	push   ss
  452592:	pop    es
  452593:	pop    ss
  452594:	repnz inc ebx
  452596:	add    ebp,edi
  452598:	inc    esp
  452599:	inc    edi
  45259a:	inc    edi
  45259b:	or     BYTE PTR [eax],al
	...
  4525ad:	add    BYTE PTR [eax],al
  4525af:	add    BYTE PTR [ebp+0x1c],dh
  4525b2:	dec    esi
  4525b3:	jmp    0xa6486a19
  4525b8:	ins    BYTE PTR es:[edi],dx
  4525b9:	sub    eax,0x2c65c644
  4525be:	les    edi,FWORD PTR gs:[edi+0x30]
  4525c2:	gs int3 
  4525c4:	outs   dx,DWORD PTR ds:[esi]
  4525c5:	cmp    BYTE PTR [esp+eax*8-0x62],ah
  4525c9:	fld    DWORD PTR [eax]
  4525cb:	xor    eax,0xc4711262
  4525d0:	ja     0x4525ce
  4525d2:	outs   dx,BYTE PTR ds:[esi]
  4525d3:	mov    WORD PTR [edi+0x2d],gs
  4525d6:	dec    esi
  4525d7:	jmp    0xae48033d
  4525dc:	fs sub eax,0x47339442
  4525e2:	pop    esp
  4525e3:	xchg   edi,eax
  4525e4:	inc    ebp
  4525e5:	sub    DWORD PTR [ebx-0x72],esi
  4525e8:	inc    edx
  4525e9:	sbb    al,0x72
  4525eb:	jp     0x452615
  4525ed:	sbb    eax,0xddc6b01
  4525f2:	gs pop edx
  4525f4:	sub    BYTE PTR [edi+0x5c],al
  4525f7:	inc    esp
  4525f8:	stos   WORD PTR es:[edi],ax
  4525fa:	std    
  4525fb:	cmp    DWORD PTR [ebx+0x2d],edi
  4525fe:	cmp    al,0x3f
  452600:	mov    dl,BYTE PTR [edx]
  452602:	pop    edi
  452603:	das    
  452604:	xchg   DWORD PTR ds:0xd061e95c,esi
  45260a:	sti    
  45260b:	sbb    DWORD PTR [ebx+0x2d],edi
  45260e:	aas    
  45260f:	inc    eax
  452610:	push   edx
  452611:	sbb    al,0x51
  452613:	push   ss
	...
  452628:	inc    edi
  452629:	xor    ebp,DWORD PTR [ebp+0x4]
  45262c:	je     0x45262a
  45262e:	js     0x452619
  452630:	popa   
  452631:	aad    0xfb
  452633:	cmp    DWORD PTR [ebx+0x2d],ecx
  452636:	aas    
  452637:	add    BYTE PTR [edx+0x9],dl
  45263a:	push   esp
  45263b:	push   esp
  45263c:	push   edx
  45263d:	or     BYTE PTR [eax+eax*1+0x45],dl
  452641:	shl    DWORD PTR ds:0x68235765,cl
  452647:	ins    BYTE PTR es:[edi],dx
  452648:	es icebp 
  45264a:	ins    DWORD PTR es:[di],dx
  45264c:	frstor es:[ecx]
  45264f:	add    edi,esi
  452651:	add    DWORD PTR [ebp+0x65],ebx
  452654:	pop    ss
  452655:	add    dh,BYTE PTR [edi]
  452657:	imul   ecx,DWORD PTR [edi],0xcb004602
  45265d:	fidiv  WORD PTR ds:0x6822e765
  452663:	ins    BYTE PTR es:[edi],dx
  452664:	es es pop edi
  452667:	data16 in al,dx
  452669:	into   
  45266a:	pop    ebx
  45266b:	popa   
  45266c:	test   DWORD PTR ds:0xd5b96e5e,0x7d6148
  452676:	pop    ebp
  452677:	gs or  ebx,ebp
  45267a:	rol    DWORD PTR [ebx],cl
  45267c:	mov    esi,0xb56566eb
  452681:	add    eax,0xd506655d
  452686:	inc    ebp
  452687:	add    ch,ch
  452689:	loopne 0x4526dd
  45268b:	add    BYTE PTR gs:[eax],al
	...
  45269e:	add    BYTE PTR [eax],al
  4526a0:	sub    BYTE PTR [edx],al
  4526a2:	gs inc ebp
  4526a4:	and    eax,0xcb745f02
  4526a9:	fcomp  QWORD PTR [ebp+0x5]
  4526ac:	push   edi
  4526ad:	add    dh,BYTE PTR [ebx+0x6d]
  4526b0:	adc    ch,bl
  4526b2:	pop    edi
  4526b3:	je     0x4526cb
  4526b5:	in     eax,dx
  4526b6:	jb     0x452727
  4526b8:	sub    BYTE PTR [edx],al
  4526ba:	jb     0x45272f
  4526bc:	mov    ebx,esp
  4526be:	imul   eax,DWORD PTR ds:0x7471d648,0x4c2fe562
  4526c8:	or     esi,DWORD PTR [ebp+0x8054c29]
  4526ce:	and    al,0x64
  4526d0:	pop    es
  4526d1:	into   
  4526d2:	and    esp,DWORD PTR [ebp-0x1]
  4526d5:	rol    DWORD PTR [edx],0xf
  4526d8:	popa   
  4526d9:	jmp    DWORD PTR [edi]
  4526db:	ins    BYTE PTR es:[edi],dx
  4526dc:	scas   al,BYTE PTR es:[edi]
  4526dd:	mov    DWORD PTR [ecx],esi
  4526df:	pop    ebp
  4526e0:	test   al,0xa7
  4526e2:	xor    BYTE PTR [ebp-0x65],bl
  4526e5:	mov    al,ds:0x75b06728
  4526ea:	sbb    eax,0x308fcb6c
  4526ef:	add    BYTE PTR [edx-0x75],ah
  4526f2:	cld    
  4526f3:	ds mov edi,0x81674676
  4526f9:	mov    eax,ds:0x4d8b4c26
  4526fe:	sub    DWORD PTR [eax],eax
  452700:	(bad)  
  452701:	(bad)  
  452702:	(bad)  
  452703:	add    BYTE PTR ds:[eax],al
	...
  452716:	add    BYTE PTR [eax],al
  452718:	jg     0x452770
  45271a:	cs push 0x5c1d5d70
  452720:	mov    eax,ds:0x876c304f
  452725:	pop    edx
  452726:	push   cs
  452727:	add    BYTE PTR [edx+0x69],ah
  45272a:	or     DWORD PTR [ebx+0x47],edx
  45272d:	cs cs push 0x5c222550
  452734:	and    DWORD PTR [edi],esp
  452736:	xor    ebp,DWORD PTR [edi+edi*1+0xa]
  45273a:	sbb    DWORD PTR [eax],eax
  45273c:	bound  edx,QWORD PTR [ebx-0x2]
  45273f:	dec    ebp
  452740:	dec    ebx
  452741:	hlt    
  452742:	sbb    BYTE PTR [ebp+0x43],ch
  452745:	xor    ch,BYTE PTR es:[ebp+0x3f]
  452749:	hlt    
  45274a:	sbb    DWORD PTR [eax],eax
  45274c:	(bad)  {k6}
  452751:	fcom   DWORD PTR [ebx]
  452753:	inc    ebp
  452754:	jmp    FWORD PTR [edx]
  452756:	sbb    ah,BYTE PTR [edi]
  452758:	cld    
  452759:	sub    al,0x38
  45275b:	push   ss
  45275c:	add    eax,0xf114fd3c
  452761:	fcom   DWORD PTR [edx]
  452763:	add    eax,0x26ec471b
  452768:	lock inc esp
  45276a:	jmp    DWORD PTR [ecx+ecx*8]
  45276d:	cmp    al,0xfc
  45276f:	inc    esp
  452770:	mov    ebp,0xd022d844
  452775:	cmp    al,0x9d
  452777:	sbb    eax,ecx
  452779:	inc    ecx
  45277a:	leave  
  45277b:	xor    DWORD PTR [eax],eax
	...
  45278d:	add    BYTE PTR [eax],al
  45278f:	add    BYTE PTR [ebp-0x3fc17c4],bl
  452795:	fsub   DWORD PTR [ebp-0x2fd540d1]
  45279b:	dec    edx
  45279c:	mov    esp,0x8f15b42a
  4527a1:	cmp    ch,BYTE PTR [edx+ebp*1+0x22ab477d]
  4527a8:	add    DWORD PTR [ecx+0x7d],0xb5dcd303
  4527af:	sub    dh,BYTE PTR [eax+0x2d]
  4527b2:	lea    esp,[edx]
  4527b4:	jle    0x4527bf
  4527b6:	jp     0x4527e8
  4527b8:	jle    0x4527f6
  4527ba:	mov    edx,DWORD PTR [edi]
  4527bc:	(bad)  
  4527bd:	fnstenv ds:0x9b0d2d07
  4527c3:	dec    eax
  4527c4:	aaa    
  4527c5:	sub    eax,0x403e2529
  4527ca:	dec    esi
  4527cb:	daa    
  4527cc:	and    DWORD PTR [esi+0x3e],eax
  4527cf:	adc    eax,0x353d4545
  4527d4:	pop    ss
  4527d5:	sub    bh,BYTE PTR [ebx]
  4527d7:	sub    eax,DWORD PTR [ebp+0x47]
  4527da:	xor    DWORD PTR [eax],ebp
  4527dc:	(bad)  
  4527dd:	fld    DWORD PTR [eax]
  4527df:	jne    0x452848
  4527e1:	neg    BYTE PTR [ebx+0x35]
  4527e4:	dec    esi
  4527e5:	sub    esp,DWORD PTR [esi+0xa]
  4527e8:	inc    ebp
  4527e9:	sub    dh,BYTE PTR [edx+0x30]
  4527ec:	cmp    bl,cl
  4527ee:	add    BYTE PTR [eax+0x155bf667],al
	...
  452808:	das    
  452809:	xor    BYTE PTR [edx-0x3],dh
  45280c:	inc    esp
  45280d:	cmp    al,0x3d
  45280f:	add    al,0x38
  452811:	cmp    BYTE PTR [ebp+eax*1+0x7a],ch
  452815:	and    al,0x48
  452817:	sbb    eax,0xdc5e3f81
  45281c:	adc    BYTE PTR [esi],0x5c
  45281f:	jmp    0xae489d85
  452824:	test   BYTE PTR [ebp+0x51],al
  452827:	(bad)  [edx+0x3a]
  45282a:	pop    esp
  45282b:	mov    edx,0xcc682556
  452830:	jl     0x45285c
  452832:	add    eax,ebx
  452834:	imul   edi,DWORD PTR ds:0x3a6fb572,0x64
  45283b:	cdq    
  45283c:	dec    edx
  45283d:	fld    DWORD PTR [eax]
  45283f:	stos   DWORD PTR es:[edi],eax
  452840:	pop    esi
  452841:	mul    BYTE PTR [esi+eax*4+0x47]
  452845:	cmp    BYTE PTR [ebp-0x64],ah
  452848:	cmp    al,0x3c
  45284a:	data16 jnp 0x452895
  45284d:	or     ch,BYTE PTR [ebp-0x78]
  452850:	dec    ebp
  452851:	inc    esp
  452852:	jb     0x452800
  452854:	jns    0x45282f
  452856:	add    ah,cl
  452858:	pop    esi
  452859:	neg    BYTE PTR [ebx+0x5d]
  45285c:	mov    ebp,DWORD PTR [edx]
  45285e:	pop    esp
  45285f:	pop    ebx
  452860:	sbb    dl,BYTE PTR [edi+ebx*2]
  452863:	dec    eax
  452864:	pop    ebx
  452865:	cmp    eax,0x1d27346d
  45286a:	pusha  
	...
  45287f:	add    BYTE PTR ds:0x1c6163fe,dl
  452885:	add    BYTE PTR [ecx],al
  452887:	add    BYTE PTR [edi+0x4f6535d7],bl
  45288d:	and    DWORD PTR [eax+0x73],ebp
  452890:	jo     0x4528b1
  452892:	jae    0x4528f9
  452894:	pop    esi
  452895:	jmp    0x7834:0x686170
  45289c:	sub    al,0xdd
  45289e:	push   ss
  45289f:	add    edi,DWORD PTR [eax+eax*1]
  4528a2:	gs push esi
  4528a4:	push   esp
  4528a5:	jmp    0x26b3960d
  4528aa:	pop    edi
  4528ab:	push   sp
  4528ad:	retf   
  4528ae:	pop    ebx
  4528af:	popa   
  4528b0:	das    
  4528b1:	push   es
  4528b2:	pop    esi
  4528b3:	outs   dx,BYTE PTR ds:[esi]
  4528b4:	or     al,0xd9
  4528b6:	dec    ecx
  4528b7:	inc    ebp
  4528b8:	stc    
  4528b9:	es xor al,0x4c
  4528bc:	pop    eax
  4528bd:	xchg   DWORD PTR [esp+eiz*2],ebx
  4528c0:	pop    ss
  4528c1:	add    eax,0xdb330001
  4528c6:	inc    edi
  4528c7:	jae    0x4528c2
  4528c9:	add    DWORD PTR [edx+0x74],esp
  4528cc:	mov    esi,0xc27470e9
  4528d1:	fcom   st(2)
  4528d3:	add    DWORD PTR [ecx+eax*1+0x6e25765],edi
  4528da:	push   ebp
  4528db:	outs   dx,DWORD PTR ds:[esi]
  4528dc:	int3   
  4528dd:	in     al,dx
  4528de:	push   0x54fdde72
  4528e3:	push   eax
	...
  4528f8:	imul   eax,DWORD PTR [ebx],0xc7586562
  4528fe:	inc    edi
  4528ff:	fs retf 
  452901:	fsubr  DWORD PTR [edi+0x1]
  452904:	jl     0x452908
  452906:	gs dec ebp
  452908:	push   ds
  452909:	enter  0x6171,0x62
  45290d:	and    ebp,DWORD PTR [eax]
  45290f:	push   eax
  452910:	inc    ebp
  452911:	paddw  mm6,QWORD PTR [esi]
  452914:	pusha  
  452915:	in     eax,dx
  452916:	sbb    esi,DWORD PTR [eax+0xd]
  452919:	or     DWORD PTR [edi],esp
  45291b:	pop    esp
  45291c:	or     eax,0xb672cf3
  452921:	hlt    
  452922:	sbb    BYTE PTR [ebx+0x62],dh
  452925:	cmp    DWORD PTR [eax],eax
  452927:	push   ebx
  452928:	jmp    ebx
  45292a:	sub    BYTE PTR [ebp+0x7],al
  45292d:	iret   
  45292e:	adc    DWORD PTR [ecx-0x3],esp
  452931:	fsubr  QWORD PTR ds:0x216200
  452937:	push   edx
  452938:	jmp    ebp
  45293a:	daa    
  45293b:	popa   
  45293c:	shl    ebp,1
  45293e:	inc    ecx
  45293f:	popa   
  452940:	shr    BYTE PTR [esi-0x3d388de7],cl
  452946:	add    dl,BYTE PTR [eax]
  452948:	pusha  
  452949:	imul   edx,DWORD PTR [ebx],0x1e9ccb4f
  45294f:	lods   eax,DWORD PTR ds:[si]
  452951:	ret    0xb802
  452954:	pusha  
  452955:	dec    edi
  452956:	sub    DWORD PTR [esi-0x42],esp
  452959:	test   DWORD PTR [ecx],ebp
  45295b:	jae    0x45295d
	...
  45296d:	add    BYTE PTR [eax],al
  45296f:	add    BYTE PTR [ecx-0x51a2e05f],dl
  452975:	cdq    
  452976:	xor    DWORD PTR [ebp+0x7d],ebx
  452979:	push   ebp
  45297a:	push   cs
  45297b:	dec    edi
  45297c:	bound  ecx,QWORD PTR [esi+0x56873efd]
  452982:	inc    ebx
  452983:	ins    DWORD PTR es:[edi],dx
  452984:	jo     0x4529d5
  452986:	daa    
  452987:	jb     0x45291b
  452989:	dec    ebx
  45298a:	adc    eax,DWORD PTR [eax]
  45298c:	bound  esp,QWORD PTR [edi+0x36475303]
  452992:	das    
  452993:	imul   eax,DWORD PTR [esi+ebx*2+0x27],0x4ed9326f
  45299b:	adc    DWORD PTR [edx-0x27],esp
  45299e:	push   eax
  45299f:	add    dl,BYTE PTR [edx]
  4529a1:	ds inc ebp
  4529a3:	sub    DWORD PTR [edi],ebx
  4529a5:	ds pop ebx
  4529a7:	adc    DWORD PTR [ebx+0x3c],eax
  4529aa:	inc    ebp
  4529ab:	inc    ebx
  4529ac:	(bad)  
  4529ad:	fst    DWORD PTR [ecx+0x2]
  4529b0:	xor    bh,BYTE PTR [esi]
  4529b2:	inc    ebp
  4529b3:	sub    DWORD PTR [edi],ebx
  4529b5:	cmp    edx,DWORD PTR ds:[ecx]
  4529b8:	add    edi,DWORD PTR [eax*1-0x14269dcb]
  4529bf:	add    bh,BYTE PTR ds:0xfc43143e
  4529c5:	aaa    
  4529c6:	std    
  4529c7:	adc    dh,bh
  4529c9:	inc    ebx
  4529ca:	cli    
  4529cb:	add    esp,DWORD PTR [esi-0x31d8e127]
  4529d1:	or     al,BYTE PTR [ecx]
  4529d3:	add    BYTE PTR cs:[eax],al
	...
  4529e6:	add    BYTE PTR [eax],al
  4529e8:	mov    dh,0x42
  4529ea:	out    dx,eax
  4529eb:	dec    edi
  4529ec:	lds    eax,FWORD PTR [ebx-0x39]
  4529ef:	xor    al,0x62
  4529f1:	fldcw  WORD PTR [edi]
  4529f3:	add    dl,BYTE PTR [ecx-0x38bf2bc4]
  4529f9:	daa    
  4529fa:	fld    TBYTE PTR [eax+esi*4]
  4529fd:	or     edi,ecx
  4529ff:	adc    BYTE PTR [edx-0x27],ah
  452a02:	loope  0x452a06
  452a04:	pop    ebp
  452a05:	cmp    al,0xb4
  452a07:	inc    eax
  452a08:	sub    DWORD PTR [ecx],0xffffffac
  452a0b:	push   ss
  452a0c:	nop
  452a0d:	cmp    al,0xe8
  452a0f:	add    eax,DWORD PTR [eax-0x28]
  452a12:	sahf   
  452a13:	mov    ss,WORD PTR es:[esi]
  452a16:	jl     0x452a3a
  452a18:	jno    0x452a40
  452a1a:	xchg   esp,eax
  452a1b:	sub    al,0x84
  452a1d:	cmp    dl,BYTE PTR [edi-0x6126dffd]
  452a23:	es dec esi
  452a25:	or     al,BYTE PTR [ecx]
  452a27:	add    BYTE PTR [edi+0x18766615],0x3b
  452a2e:	pop    edi
  452a2f:	push   esi
  452a30:	pop    esi
  452a31:	das    
  452a32:	add    BYTE PTR [esi],ah
  452a34:	test   DWORD PTR [ebp+0x51],eax
  452a37:	dec    eax
  452a38:	push   eax
  452a39:	adc    al,0x67
  452a3b:	push   ebp
  452a3c:	data16 cmp al,0x3
  452a3f:	sbb    DWORD PTR [edi+0x26],esi
  452a42:	ins    DWORD PTR es:[edi],dx
  452a43:	sub    al,0x45
  452a45:	es jb  0x452a90
  452a48:	aas    
  452a49:	adc    al,0x4e
  452a4b:	jmp    0x452a50
	...
  452a60:	popa   
  452a61:	ins    BYTE PTR es:[edi],dx
  452a62:	add    edi,DWORD PTR [edx]
  452a64:	cmp    eax,0x56084245
  452a69:	inc    ebp
  452a6a:	ins    BYTE PTR es:[edi],dx
  452a6b:	sbb    edi,DWORD PTR ds:0x611a00d9
  452a71:	repnz pop ebx
  452a73:	std    
  452a74:	adc    al,0x14
  452a76:	jb     0x452a72
  452a78:	adc    BYTE PTR [edx],0x5c
  452a7b:	push   ds
  452a7c:	pop    esi
  452a7d:	lahf   
  452a7e:	add    BYTE PTR [esi],ah
  452a80:	test   DWORD PTR [ebp+0x4e],eax
  452a83:	shl    BYTE PTR [edi+0x15],1
  452a86:	data16 (bad) 
  452a88:	jae    0x452a9e
  452a8a:	(bad)  
  452a8b:	frstor [ecx+0x3a]
  452a8e:	add    BYTE PTR [esi-0x33bbba7c],ah
  452a94:	push   edx
  452a95:	es pusha 
  452a97:	mov    BYTE PTR [eax+ebx*1+0x1],0xec
  452a9c:	pusha  
  452a9d:	hlt    
  452a9e:	js     0x452a60
  452aa0:	jne    0x452ac4
  452aa2:	push   0x6e3a3d97
  452aa7:	call   0x2562:0xdb0131a4
  452aae:	data16 mov ah,0x3f
  452ab1:	inc    eax
  452ab2:	bound  eax,QWORD PTR [eax]
  452ab4:	int3   
  452ab5:	stc    
  452ab6:	push   ebx
  452ab7:	add    BYTE PTR [edx+0x576535d6],dh
  452abd:	sbb    DWORD PTR [ebp+0x69],ebx
  452ac0:	dec    ebx
  452ac1:	clc    
  452ac2:	pop    ebp
  452ac3:	popa   
	...
  452ad8:	sub    ecx,edi
  452ada:	xor    al,0x61
  452adc:	pop    ss
  452add:	cld    
  452ade:	add    BYTE PTR [eax],al
  452ae0:	jae    0x452abe
  452ae2:	xor    eax,0x54221765
  452ae7:	jns    0x452b02
  452ae9:	(bad)  
  452aea:	pop    edi
  452aeb:	jb     0x452b14
  452aed:	jmp    0x0:0xf8576164
  452af4:	nop
  452af5:	fiadd  DWORD PTR [edx+esi*2+0x5a]
  452af9:	push   DWORD PTR [ecx+0x6c]
  452afc:	push   0xffffffc9
  452afe:	push   ebx
  452aff:	dec    ebp
  452b00:	retfw  0x6171
  452b04:	fs clc 
  452b06:	add    BYTE PTR [eax],al
  452b08:	xor    bl,ah
  452b0a:	xor    eax,0x621e5765
  452b0f:	outs   dx,DWORD PTR ds:[esi]
  452b10:	pop    ebp
  452b11:	push   ds
  452b12:	pop    edi
  452b13:	dec    sp
  452b15:	fnstsw WORD PTR [esi+0x5fc6f700]
  452b1b:	ja     0x452b0f
  452b1d:	neg    DWORD PTR [ebp+0x6e]
  452b20:	dec    ebx
  452b21:	(bad)  [eax+eax*1]
  452b24:	clc    
  452b25:	add    al,0x60
  452b27:	jb     0x452aef
  452b29:	int3   
  452b2a:	jo     0x452b91
  452b2c:	fldpi  
  452b2e:	add    BYTE PTR [eax],al
  452b30:	pop    ebp
  452b31:	aad    0x41
  452b33:	push   0x6f3cc71a
  452b38:	in     al,0xf9
  452b3a:	jb     0x452b93
	...
  452b50:	or     ebx,ebp
  452b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  452b53:	add    BYTE PTR [edx+0x7e],ah
  452b56:	and    eax,0x6617273
  452b5b:	arpl   WORD PTR [edx+0x65],di
  452b5e:	and    DWORD PTR [ebx+0x51],esi
  452b61:	popa   
  452b62:	and    ebx,DWORD PTR [ebp+0x2d]
  452b65:	ret    0x5202
  452b68:	pusha  
  452b69:	dec    ebp
  452b6a:	maxps  xmm5,XMMWORD PTR ds:0x246c2421
  452b71:	pop    ds
  452b72:	cmovne ebp,DWORD PTR [edi]
  452b75:	push   ss
  452b76:	adc    DWORD PTR [ecx+0x32],ebp
  452b79:	out    dx,al
  452b7a:	pop    ds
  452b7b:	inc    edi
  452b7c:	inc    eax
  452b7d:	or     al,0x20
  452b7f:	arpl   WORD PTR [esi],dx
  452b81:	repz cld 
  452b83:	aaa    
  452b84:	bound  eax,QWORD PTR [ebx]
  452b86:	and    eax,0x29c61061
  452b8b:	inc    edi
  452b8c:	inc    esp
  452b8e:	xor    DWORD PTR [eax],eax
  452b90:	bound  edx,QWORD PTR [eax-0x2dfcbb04]
  452b96:	xor    ch,BYTE PTR [ecx-0x10]
  452b99:	lds    ecx,FWORD PTR [edi]
  452b9b:	popa   
  452b9c:	imul   dl
  452b9e:	pop    ds
  452b9f:	jns    0x452b56
  452ba1:	ret    0x6302
  452ba4:	pusha  
  452ba5:	test   DWORD PTR [ebx*2+0x6623c7bc],0x531387be
  452bb0:	mov    dh,0xa1
  452bb2:	push   es
  452bb3:	imul   eax,DWORD PTR [eax],0x0
	...
  452bc5:	add    BYTE PTR [eax],al
  452bc7:	add    ch,al
  452bc9:	cwde   
  452bca:	xor    eax,DWORD PTR [eax]
  452bcc:	bound  eax,QWORD PTR [edi-0x3]
  452bcf:	ds mov edi,0x8773316e
  452bd5:	je     0x452c22
  452bd7:	bound  ecx,QWORD PTR [eax-0x6493e063]
  452bdd:	jo     0x452bff
  452bdf:	addr16 nop
  452be1:	(bad)  [esp+0x2987428e]
  452be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  452be9:	fst    DWORD PTR [edx]
  452beb:	add    eax,0x2f8c3691
  452bf0:	jp     0x452c1d
  452bf2:	test   DWORD PTR [esi+edi*1],esp
  452bf5:	adc    eax,0x2549167d
  452bfa:	jg     0x452c0f
  452bfc:	(bad)  
  452bfd:	fst    DWORD PTR [ebx+0x4f3d2103]
  452c03:	adc    eax,0x153d151f
  452c08:	dec    ecx
  452c09:	and    eax,0xd962143f
  452c0e:	and    eax,0x45291d06
  452c13:	sub    bl,BYTE PTR [esi+0x36]
  452c16:	cmp    ebp,DWORD PTR ds:0x31384006
  452c1c:	(bad)  
  452c1d:	fstp   DWORD PTR [ecx+0x3]
  452c20:	inc    ebp
  452c21:	ss adc al,0x34
  452c24:	lock aas 
  452c26:	or     ebx,DWORD PTR [edi]
  452c28:	icebp  
  452c29:	sub    esi,DWORD PTR [edi]
  452c2b:	sub    eax,DWORD PTR [eax]
	...
  452c3d:	add    BYTE PTR [eax],al
  452c3f:	add    BYTE PTR [esi*1+0x251110f7],al
  452c46:	or     DWORD PTR [eax],edx
  452c48:	retf   
  452c49:	ds push es
  452c4b:	add    al,0xc7
  452c4d:	fldcw  WORD PTR [edx]
  452c4f:	push   ss
  452c50:	scas   eax,DWORD PTR es:[edi]
  452c51:	cmp    ah,ch
  452c53:	push   ds
  452c54:	xchg   ebp,eax
  452c55:	inc    eax
  452c56:	into   
  452c57:	pop    ds
  452c58:	lds    esp,FWORD PTR [esi]
  452c5a:	mov    ebx,0xc125c30f
  452c5f:	sub    ah,al
  452c61:	push   es
  452c62:	call   0xab1ebe6a
  452c67:	daa    
  452c68:	test   DWORD PTR [edx],ebp
  452c6a:	mov    ebp,0x13f8b30
  452c6f:	int    0x3a
  452c71:	ds push edx
  452c73:	mov    ch,0x40
  452c75:	cmp    eax,0xd94b9668
  452c7a:	add    BYTE PTR [ecx+eiz*2-0x12],cl
  452c7e:	pop    ebx
  452c7f:	popf   
  452c80:	cmp    eax,0x40847341
  452c85:	or     eax,0x42768c3d
  452c8a:	ins    DWORD PTR es:[edi],dx
  452c8b:	mov    ?,WORD PTR [ecx-0x27]
  452c8e:	add    BYTE PTR [edx],al
  452c90:	or     bl,BYTE PTR fs:[ebp+esi*2-0x6f]
  452c95:	sub    esp,DWORD PTR [esi+0x4a]
  452c98:	pop    ebp
  452c99:	sub    dh,BYTE PTR [edx+0x36]
  452c9c:	mov    DWORD PTR [edi],esi
  452c9e:	pop    ebp
  452c9f:	inc    esi
  452ca0:	push   ebx
  452ca1:	or     ch,BYTE PTR [ebp+0x48]
	...
  452cb8:	push   edx
  452cb9:	inc    eax
  452cba:	push   di
  452cbc:	data16 cmp BYTE PTR [ecx],al
  452cbf:	sub    ch,BYTE PTR [esp+ecx*1+0x60]
  452cc3:	cmp    eax,0x3a5bed6d
  452cc8:	aaa    
  452cc9:	cmp    eax,0xd9331966
  452cce:	add    BYTE PTR [ebp+0x60],al
  452cd1:	out    dx,al
  452cd2:	pop    ebx
  452cd3:	sbb    eax,0xfd5c4137
  452cd8:	cmp    eax,0x8217681e
  452cdd:	outs   dx,BYTE PTR ss:[esi]
  452cdf:	jmp    0x1b485a45
  452ce4:	ins    DWORD PTR es:[edi],dx
  452ce5:	push   cs
  452ce6:	push   0x730c55fa
  452ceb:	stos   BYTE PTR es:[edi],al
  452cec:	test   DWORD PTR [eax],edi
  452cee:	jb     0x452cca
  452cf0:	mov    al,ds:0x617500d9
  452cf5:	in     eax,dx
  452cf6:	pop    ebx
  452cf7:	(bad)  
  452cf8:	mov    ds:0x3600602b,eax
  452cfd:	iret   
  452cfe:	push   eax
  452cff:	jb     0x452d25
  452d01:	cmc    
  452d02:	inc    ebp
  452d03:	add    dl,bl
  452d05:	fnstenv [eiz*2+0x6e67e91d]
  452d0c:	out    dx,eax
  452d0d:	add    BYTE PTR [esi+0x50],ah
  452d10:	fld    DWORD PTR [eax]
  452d12:	bound  edx,QWORD PTR [edi-0x5]
  452d15:	(bad)  [esi]
  452d17:	add    BYTE PTR [eax+0x6c5cfa],bh
	...
  452d2d:	add    BYTE PTR [eax],al
  452d2f:	add    ah,bh
  452d31:	add    bl,BYTE PTR [edi+0x64]
  452d34:	in     al,0xc8
  452d36:	push   eax
  452d37:	jb     0x452d1d
  452d39:	hlt    
  452d3a:	inc    ebp
  452d3b:	add    BYTE PTR [edx-0x26],ah
  452d3e:	xor    ebp,DWORD PTR [esi+0x2f]
  452d41:	and    BYTE PTR [esi+ebp*2+0xe],dl
  452d45:	aad    0xb
  452d47:	add    BYTE PTR [eax-0xc],bh
  452d4a:	pop    esp
  452d4b:	ins    BYTE PTR es:[edi],dx
  452d4c:	ins    BYTE PTR es:[edi],dx
  452d4d:	cld    
  452d4e:	pop    esi
  452d4f:	fs xor al,0xde
  452d52:	push   eax
  452d53:	jb     0x452d79
  452d55:	cli    
  452d56:	aas    
  452d57:	add    ah,bh
  452d59:	ficom  DWORD PTR [edx+0x65]
  452d5c:	sbb    al,0xfc
  452d5e:	jno    0x452dd4
  452d60:	outs   dx,BYTE PTR ds:[esi]
  452d61:	retf   
  452d62:	inc    ecx
  452d63:	ins    BYTE PTR es:[edi],dx
  452d64:	push   0xffffffca
  452d66:	jno    0x452dbf
  452d68:	jnp    0x452d43
  452d6a:	fadd   DWORD PTR [ecx]
  452d6c:	inc    ebx
  452d6d:	cld    
  452d6e:	pop    esp
  452d6f:	imul   ebx,DWORD PTR [edi-0x6],0xca65653b
  452d76:	inc    edi
  452d77:	je     0x452dd7
  452d79:	add    al,BYTE PTR [ecx]
  452d7b:	add    BYTE PTR [esi+0x2d6534d5],dl
  452d81:	and    dh,BYTE PTR ds:0x68010849
  452d87:	ins    BYTE PTR es:[edi],dx
  452d88:	bound  ebx,QWORD PTR [esi-0x604a8dce]
  452d8e:	cmp    eax,0x726200
  452d93:	push   eax
	...
  452da8:	test   DWORD PTR [edi+0x6],ebp
  452dab:	dec    esp
  452dac:	jp     0x452e1e
  452dae:	and    DWORD PTR [ecx+0x7e],esp
  452db1:	dec    ebp
  452db2:	and    DWORD PTR [ebx+0x71],esi
  452db5:	popa   
  452db6:	pop    ss
  452db7:	pop    ebp
  452db8:	(bad)  
  452db9:	ret    0x9902
  452dbc:	bound  edi,QWORD PTR [esi+0x21]
  452dbf:	pop    esi
  452dc0:	sahf   
  452dc1:	cs pop ss
  452dc3:	push   eax
  452dc4:	push   eax
  452dc5:	inc    ebx
  452dc6:	and    eax,DWORD PTR [ecx+0x62]
  452dc9:	push   ebx
  452dca:	std    
  452dcb:	ds inc edi
  452dcd:	cs dec ecx
  452dcf:	pop    ebp
  452dd0:	xor    al,0x25
  452dd2:	inc    ebp
  452dd3:	ins    BYTE PTR es:[edi],dx
  452dd4:	inc    edi
  452dd5:	add    eax,0x1c2f6742
  452dda:	adc    DWORD PTR [eax],eax
  452ddc:	(bad)  
  452ddd:	fild   DWORD PTR [ecx]
  452ddf:	push   ebx
  452de0:	sub    eax,0xa631119
  452de5:	(bad)  
  452de6:	pop    ds
  452de7:	jae    0x452df2
  452de9:	out    0x1d,al
  452deb:	jo     0x452e4f
  452ded:	add    al,0x2
  452def:	cmp    al,0xff
  452df1:	adc    ecx,DWORD PTR [eax+0x3c]
  452df4:	sub    edi,edi
  452df6:	and    al,0x69
  452df8:	push   es
  452df9:	(bad)  
  452dfa:	sub    al,0x72
  452dfc:	std    
  452dfd:	fisub  WORD PTR ds:0x2226200
  452e03:	cmp    al,0xc7
  452e05:	fsub   QWORD PTR ds:0x1dd6c469
  452e0b:	outs   dx,DWORD PTR ds:[esi]
	...
  452e20:	mov    dl,0xb0
  452e22:	pop    ds
  452e23:	arpl   WORD PTR [ebx+0x636402c2],sp
  452e29:	fldenv [esi-0x42e139e0]
  452e2f:	and    eax,0x24d408bf
  452e34:	mov    dh,0x36
  452e36:	call   0x9a1bee3e
  452e3b:	and    BYTE PTR [esi+0x36],bh
  452e3e:	leave  
  452e3f:	adc    ch,BYTE PTR [edi+0x6603ab15]
  452e45:	ficomp DWORD PTR [esi-0x73e771e0]
  452e4b:	and    al,0x71
  452e4d:	sub    BYTE PTR [esi-0x48c978dc],ah
  452e53:	add    edi,DWORD PTR [ecx]
  452e55:	fdivr  DWORD PTR [edx-0x7adaaee4]
  452e5b:	sub    BYTE PTR [edx],dh
  452e5d:	cmp    bh,BYTE PTR [edx+0x24]
  452e60:	inc    edi
  452e61:	ss je  0x452e84
  452e64:	push   eax
  452e65:	sub    BYTE PTR [ecx+0x373c1c25],ah
  452e6b:	add    al,0x84
  452e6d:	fsubr  DWORD PTR [ebx]
  452e6f:	adc    al,BYTE PTR [ebx+0x38]
  452e72:	inc    ebx
  452e73:	xor    al,0x3d
  452e75:	sub    DWORD PTR [ebp+0x14],ecx
  452e78:	daa    
  452e79:	ss dec esi
  452e7b:	xorps  xmm6,XMMWORD PTR [ecx]
  452e7e:	call   0x271f2786
  452e83:	pop    ds
	...
  452e98:	neg    BYTE PTR ds:0x220f263d
  452e9e:	adc    al,0x1f
  452ea0:	inc    DWORD PTR [esi]
  452ea2:	std    
  452ea3:	and    dh,bh
  452ea5:	fsub   DWORD PTR [ebp+0x2]
  452ea8:	adc    BYTE PTR [esi],dh
  452eaa:	jmp    FWORD PTR [edx]
  452eac:	shl    DWORD PTR ds:0x3da11205,1
  452eb2:	or     DWORD PTR [ecx],edx
  452eb4:	rcl    DWORD PTR [ecx+eax*1],1
  452eb7:	icebp  
  452eb8:	jbe    0x452e93
  452eba:	add    BYTE PTR [eax],cl
  452ebc:	popa   
  452ebd:	jmp    0xd467:0xc9cdd5b
  452ec4:	popa   
  452ec5:	cld    
  452ec6:	jmp    FWORD PTR [ebp-0x55c2c2bc]
  452ecc:	popa   
  452ecd:	sbb    DWORD PTR [ebx],eax
  452ecf:	mov    ah,0x74
  452ed1:	xor    ebp,DWORD PTR [eax+esi*4+0x5d]
  452ed5:	or     al,0x64
  452ed7:	scas   eax,DWORD PTR es:[edi]
  452ed8:	jae    0x452f0c
  452eda:	fs cdq 
  452edc:	inc    esi
  452edd:	inc    eax
  452ede:	addr16 popf 
  452ee0:	popa   
  452ee1:	cmp    DWORD PTR [ebx],eax
  452ee3:	scas   al,BYTE PTR es:[edi]
  452ee4:	push   ecx
  452ee5:	or     al,0x67
  452ee7:	mov    al,ds:0x956c293f
  452eec:	popf   
  452eed:	or     al,0x72
  452eef:	xchg   edx,eax
  452ef0:	xor    dh,BYTE PTR gs:[ecx-0x17]
  452ef4:	popa   
  452ef5:	dec    esi
  452ef6:	add    DWORD PTR [ebp+0x7b3f0b64],ebp
	...
  452f10:	xor    BYTE PTR [esp+ebx*2],0x39
  452f14:	push   eax
  452f15:	xor    ah,BYTE PTR [edx+0x28]
  452f18:	dec    di
  452f1a:	add    DWORD PTR ds:0x3d3d0b45,ebp
  452f20:	jg     0x452f2b
  452f22:	jae    0x452f7a
  452f24:	inc    ebx
  452f25:	sbb    al,BYTE PTR [ecx]
  452f27:	test   BYTE PTR [eax-0x16],ah
  452f2a:	pop    ebx
  452f2b:	cmp    eax,0x1c633c53
  452f30:	pop    ebp
  452f31:	xor    ebp,DWORD PTR [ecx+ebp*8+0x61]
  452f35:	fwait
  452f36:	add    edi,DWORD PTR [edx]
  452f38:	dec    ebp
  452f39:	cmp    eax,0x37490c4a
  452f3e:	data16 or BYTE PTR [eax+0xd],dh
  452f42:	push   edx
  452f43:	add    BYTE PTR [edi-0x9],dl
  452f46:	fs gs cmp edx,esi
  452f4a:	push   0x64ca7401
  452f4f:	dec    ebp
  452f50:	data16 repz arpl WORD PTR [ecx+0x17],cx
  452f55:	retf   
  452f56:	pop    ebx
  452f57:	dec    ecx
  452f58:	pop    es
  452f59:	(bad)  
  452f5a:	mov    al,ds:0x55cae902
  452f5f:	imul   edi,DWORD PTR [eax],0xf47253da
  452f65:	(bad)  
  452f66:	pop    esi
  452f67:	fs sbb al,0xdd
  452f6a:	cmp    esp,DWORD PTR [ebp-0x38]
  452f6d:	enter  0x675f,0x26
  452f71:	std    
	...
  452f86:	add    BYTE PTR [eax],al
  452f88:	xchg   al,bl
  452f8a:	push   edx
  452f8b:	gs in  al,0xfe
  452f8e:	jno    0x453004
  452f90:	(bad)  
  452f91:	mov    DWORD PTR [ecx+0x6c],0x4571c8ea
  452f98:	jecxz  0x452fb0
  452f9a:	add    DWORD PTR [eax],eax
  452f9c:	and    edi,edx
  452f9e:	xor    eax,0x67fd4765
  452fa3:	outs   dx,BYTE PTR ds:[esi]
  452fa4:	out    0xf4,eax
  452fa6:	add    BYTE PTR gs:[edx+0x176551d2],dh
  452fad:	out    dx,al
  452fae:	outs   dx,BYTE PTR ds:[si]
  452fb0:	pop    ss
  452fb1:	mul    BYTE PTR [ebp+0x4c]
  452fb4:	pop    esp
  452fb5:	not    DWORD PTR [ebp+0x57]
  452fb8:	mov    edx,ebp
  452fba:	pop    ebp
  452fbb:	add    esi,DWORD PTR [esp+ecx*8+0x5e]
  452fbf:	fs sbb al,0xce
  452fc2:	ss jb  0x453001
  452fc5:	clc    
  452fc6:	push   eax
  452fc7:	outs   dx,DWORD PTR ds:[esi]
  452fc8:	push   edx
  452fc9:	mul    DWORD PTR [eax+eax*1-0x59]
  452fcd:	sar    DWORD PTR [edi+ebp*2],cl
  452fd0:	(bad)  
  452fd2:	sub    BYTE PTR [ecx-0x31],cl
  452fd5:	shr    DWORD PTR [ecx],1
  452fd7:	pop    ebp
  452fd8:	lods   eax,DWORD PTR ds:[esi]
  452fd9:	mov    dl,0x2
  452fdb:	mov    al,0x63
  452fdd:	jmp    DWORD PTR [edi]
  452fdf:	ins    BYTE PTR es:[edi],dx
  452fe0:	scas   al,BYTE PTR es:[edi]
  452fe1:	fisttp WORD PTR [edi+ecx*2]
  452fe4:	retf   
  452fe5:	test   al,0x1e
  452fe7:	lods   eax,DWORD PTR ds:[si]
  452fe9:	mov    dl,0x2
  452feb:	add    BYTE PTR cs:[eax],al
	...
  452ffe:	add    BYTE PTR [eax],al
  453000:	arpl   WORD PTR [edi+0x29],di
  453003:	ins    BYTE PTR es:[edi],dx
  453004:	sahf   
  453005:	jae    0x453050
  453007:	js     0x45306b
  453009:	inc    ebx
  45300a:	cld    
  45300b:	ds jg  0x453074
  45300e:	cmp    DWORD PTR [eax-0x7a],esi
  453011:	xchg   ecx,eax
  453012:	push   cs
  453013:	pop    ebp
  453014:	mov    al,0x95
  453016:	pop    ds
  453017:	ins    BYTE PTR es:[edi],dx
  453018:	bound  ecx,QWORD PTR [eax+0x577f4202]
  45301e:	adc    eax,0x15519266
  453023:	data16 outs dx,BYTE PTR ds:[esi]
  453025:	mov    dl,0x2
  453027:	mov    bh,0x63
  453029:	jg     0x453054
  45302b:	ins    BYTE PTR es:[edi],dx
  45302c:	sub    eax,0x3d5c2049
  453031:	das    
  453032:	ds inc ebx
  453034:	(bad)  
  453035:	out    0xfb,al
  453037:	ds inc edi
  453039:	cmp    DWORD PTR cs:[eax+0x3e],esi
  45303d:	adc    DWORD PTR [ecx],ebx
  45303f:	pop    ebp
  453040:	adc    BYTE PTR [edi],bl
  453042:	and    eax,DWORD PTR [eax]
  453044:	bound  ebx,QWORD PTR [edx+eax*1+0x2d1e0c3d]
  45304b:	popa   
  45304c:	or     edx,DWORD PTR [eax]
  45304e:	sbb    DWORD PTR [eax],eax
  453050:	(bad)  {k7}
  453055:	sbb    DWORD PTR [ebx],esp
  453057:	ins    BYTE PTR es:[edi],dx
  453058:	adc    eax,0x55c2319
  45305d:	fst    DWORD PTR [esi]
  45305f:	add    al,0x63
  453061:	ficomp DWORD PTR [edx*1+0x0]
	...
  453078:	idiv   DWORD PTR [ecx]
  45307a:	cld    
  45307b:	xor    eax,0x40c3cbf
  453080:	aas    
  453081:	fidiv  DWORD PTR [eax]
  453083:	and    bh,BYTE PTR [esi-0x58e905c2]
  453089:	cmp    al,0xf4
  45308b:	xor    eax,0x3ec3c9f
  453090:	sub    cl,bl
  453092:	mov    ds:0x9d30c315,eax
  453097:	daa    
  453098:	test   DWORD PTR [esi],edi
  45309a:	call   0x9e1e4ca2
  45309f:	sbb    al,0x7e
  4530a1:	xor    eax,0x2d81289a
  4530a6:	call   0xa71eebae
  4530ab:	sub    BYTE PTR [esi-0x79e94ef4],cl
  4530b1:	lea    eax,ds:[eax-0x71]
  4530b5:	sub    eax,0x2c811c9a
  4530ba:	call   0xab1eb9c2
  4530bf:	sbb    eax,DWORD PTR [ebx+0x2b]
  4530c2:	lods   al,BYTE PTR ds:[esi]
  4530c3:	and    bh,BYTE PTR ds:0x62447a3e
  4530c9:	fst    DWORD PTR [edx+0x6c3e7d04]
  4530cf:	aas    
  4530d0:	inc    ebx
  4530d1:	sub    al,0x54
  4530d3:	cmp    eax,DWORD PTR [ecx+ebp*1+0x4d]
  4530d7:	sbb    BYTE PTR [ebx],bl
  4530d9:	aaa    
  4530da:	inc    esi
  4530db:	and    DWORD PTR [eax],eax
	...
  4530ed:	add    BYTE PTR [eax],al
  4530ef:	add    BYTE PTR [edx-0x27],ah
  4530f2:	sub    al,0x35
  4530f4:	push   edi
  4530f5:	or     edi,ebx
  4530f7:	aad    0x47
  4530f9:	cmp    eax,0xd9622044
  4530fe:	add    BYTE PTR [edx+0x61],bl
  453101:	adc    ah,BYTE PTR [edi+0x40]
  453104:	pop    edx
  453105:	xor    ah,BYTE PTR [eax+0x1d]
  453108:	inc    ebp
  453109:	or     al,0x78
  45310b:	sbb    cl,BYTE PTR [edx+0x6]
  45310e:	cmp    bh,BYTE PTR fs:[esi+0x34]
  453112:	ins    DWORD PTR es:[edi],dx
  453113:	add    eax,0x2c673683
  453118:	pop    esi
  453119:	push   ss
  45311a:	add    DWORD PTR [eax],ecx
  45311c:	pop    esp
  45311d:	or     ebx,DWORD PTR [esi+ecx*1-0x59]
  453121:	sub    ebx,DWORD PTR [eax+ecx*1+0x5a]
  453125:	add    al,0x4a
  453127:	int3   
  453128:	pop    eax
  453129:	in     al,0x78
  45312b:	mov    dh,0x61
  45312d:	push   edi
  45312e:	add    edi,DWORD PTR [ebx-0x2baff9bc]
  453134:	cmp    al,0x2b
  453136:	js     0x4530d7
  453138:	inc    eax
  453139:	cmp    eax,0x219cc46c
  45313e:	dec    esi
  45313f:	jmp    0x9b4881a5
  453144:	cmp    al,0x6
  453146:	inc    esi
  453147:	cdq    
  453148:	inc    esp
  453149:	aas    
  45314a:	dec    edx
  45314b:	test   BYTE PTR [eax-0x1c],bl
  45314e:	js     0x45310e
  453150:	popa   
  453151:	add    DWORD PTR [ebx],eax
  453153:	mov    ebx,0x0
	...
  453168:	jl     0x453170
  45316a:	inc    edx
  45316b:	xchg   ebp,eax
  45316c:	sub    BYTE PTR [edx],0x5c
  45316f:	mov    dl,0x7c
  453171:	and    BYTE PTR [ecx],al
  453173:	dec    edi
  453174:	or     ebx,DWORD PTR fs:[esi+eax*4+0x6e]
  453179:	add    al,0x6d
  45317b:	aas    
  45317c:	cmp    DWORD PTR ds:0x211d446c,0x1361e94e
  453186:	add    BYTE PTR [esi],ah
  453188:	cmp    eax,0x1e004535
  45318d:	sti    
  45318e:	push   ebp
  45318f:	je     0x4531c4
  453191:	in     al,dx
  453192:	addr16 fs mov ebx,edx
  453196:	adc    al,BYTE PTR [edx]
  453198:	push   esp
  453199:	int    0x53
  45319b:	outs   dx,BYTE PTR ds:[esi]
  45319c:	sub    ecx,edi
  45319e:	pop    ebp
  45319f:	arpl   WORD PTR [esi-0x34],bx
  4531a2:	jno    0x4531f8
  4531a4:	les    edx,FWORD PTR fs:[ebx+0x6e]
  4531a8:	dec    ebx
  4531a9:	fisubr DWORD PTR [ecx+0x1]
  4531ac:	jl     0x4531ac
  4531ae:	fs push ebx
  4531b0:	jb     0x4531a3
  4531b2:	push   ecx
  4531b3:	jne    0x45321e
  4531b5:	sbb    ah,BYTE PTR [esp+esi*2+0x63]
  4531b9:	clc    
  4531ba:	jb     0x453225
  4531bc:	psrlq  mm0,QWORD PTR [eax]
  4531bf:	add    BYTE PTR [esp+ebx*8],ch
  4531c2:	cmp    eax,0x44f82e70
  4531c7:	push   0x645fff39
	...
  4531e0:	out    dx,eax
  4531e1:	clc    
  4531e2:	imul   esp,DWORD PTR [ebp+0x15],0xcc015cda
  4531e9:	(bad)  
  4531ea:	fs push ebx
  4531ec:	and    bh,dh
  4531ee:	push   ecx
  4531ef:	jne    0x4531ca
  4531f1:	sbb    ah,BYTE PTR [esp+esi*2-0x2d]
  4531f5:	clc    
  4531f6:	jb     0x453261
  4531f8:	call   edx
  4531fa:	inc    ecx
  4531fb:	outs   dx,DWORD PTR ds:[esi]
  4531fc:	out    dx,al
  4531fd:	mul    DWORD PTR [eax+eax*1-0xc]
  453201:	fidiv  DWORD PTR ds:0x5dee4f65
  453207:	imul   ebp,esi,0xfffffff7
  45320a:	inc    edi
  45320b:	outs   dx,BYTE PTR ds:[esi]
  45320c:	(bad)  
  45320e:	jb     0x45327d
  453210:	sbb    al,cl
  453212:	outs   dx,DWORD PTR ds:[si]
  453214:	adc    eax,0x620089dd
  453219:	repz adc bl,BYTE PTR [ebp+0x3]
  45321d:	or     al,0x28
  45321f:	push   eax
  453220:	adc    BYTE PTR [edi],cl
  453222:	and    bl,BYTE PTR [ebp+0x11]
  453225:	jecxz  0x453262
  453227:	jae    0x453240
  453229:	jecxz  0x453252
  45322b:	jb     0x45323a
  45322d:	mov    al,0x2
  45322f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  453230:	arpl   sp,bp
  453232:	adc    eax,0xcccf967
  453237:	push   eax
  453238:	rcr    cl,1
  45323a:	push   cs
  45323b:	imul   eax,esi,0xb45d1ddd
  453241:	shl    DWORD PTR [eax],1
  453243:	ins    DWORD PTR es:[edi],dx
	...
  453258:	mov    edi,0x6216fccb
  45325d:	icebp  
  45325e:	sub    BYTE PTR [edx-0x51],ch
  453261:	lahf   
  453262:	push   cs
  453263:	dec    esp
  453264:	mov    ebp,0x92662987
  453269:	adc    BYTE PTR ds:0x299e8b6e,0x5f
  453270:	jg     0x4532f1
  453272:	add    dl,BYTE PTR [ebp+0x4f136963]
  453278:	jg     0x453210
  45327a:	push   ss
  45327b:	dec    ebx
  45327c:	mov    WORD PTR [ebx-0x666e99f1],ds
  453282:	push   ds
  453283:	add    BYTE PTR [edx+0x77],ah
  453286:	add    al,BYTE PTR [ebx+0x75]
  453289:	push   esp
  45328a:	or     al,0x5d
  45328c:	push   eax
  45328d:	inc    esi
  45328e:	xor    ebp,DWORD PTR [ecx+0x3e]
  453291:	outs   dx,BYTE PTR ds:[esi]
  453292:	pop    ss
  453293:	push   ebx
  453294:	push   esi
  453295:	and    BYTE PTR ds:0x153f3d66,dl
  45329b:	pop    esp
  45329c:	adc    eax,0x62de02b2
  4532a1:	outs   dx,DWORD PTR ds:[esi]
  4532a2:	adc    BYTE PTR [ecx+0x32],bh
  4532a5:	fst    DWORD PTR [ebx+0x36]
  4532a8:	pop    es
  4532a9:	daa    
  4532aa:	push   ecx
  4532ab:	sbb    ecx,DWORD PTR es:[eax]
  4532ae:	inc    ecx
  4532af:	daa    
  4532b0:	cld    
  4532b1:	cmp    DWORD PTR [ecx+ebx*1+0x10],ecx
  4532b5:	ds pop ss
  4532b7:	add    al,0x97
  4532b9:	fldcw  WORD PTR [edx]
  4532bb:	adc    al,BYTE PTR [eax]
	...
  4532cd:	add    BYTE PTR [eax],al
  4532cf:	add    bl,bh
  4532d1:	sub    BYTE PTR [edi+eax*2],dh
  4532d4:	pop    ss
  4532d5:	sub    eax,0x8eb2923
  4532da:	or     DWORD PTR [edx],edx
  4532dc:	add    esi,DWORD PTR [esi]
  4532de:	call   0x2b1e6ae6
  4532e3:	adc    bl,bl
  4532e5:	sub    DWORD PTR [edi*1+0x120f29c7],ecx
  4532ec:	mov    dh,0x10
  4532ee:	std    
  4532ef:	or     al,0x62
  4532f1:	fldenv [esi-0xed85efd]
  4532f7:	adc    edi,DWORD PTR [esi-0x49ed3ae3]
  4532fd:	daa    
  4532fe:	(bad)  
  4532ff:	or     al,0xa9
  453301:	rol    DWORD PTR ds:[ebx],1
  453304:	aam    0xd8
  453306:	stos   BYTE PTR es:[edi],al
  453307:	adc    DWORD PTR [ebx-0x58b84bd7],ecx
  45330d:	sub    BYTE PTR [ecx+edx*1+0x24a02285],ch
  453314:	jno    0x453347
  453316:	call   0xab1e511e
  45331b:	adc    DWORD PTR [ebx+0x29],ebp
  45331e:	mov    WORD PTR [esi+0x3f],es
  453321:	sub    eax,0x315124a0
  453326:	mov    eax,0x8d3a5024
  45332b:	add    esp,DWORD PTR [ebx+0x3b11aad8]
  453331:	sub    DWORD PTR [ecx],eax
  453333:	jge    0x453335
	...
  453345:	add    BYTE PTR [eax],al
  453347:	add    BYTE PTR [esi],bl
  453349:	cmp    BYTE PTR [eax+0x74],dh
  45334c:	dec    esi
  45334d:	daa    
  45334e:	pop    esp
  45334f:	sub    al,BYTE PTR [edi+0x3b]
  453352:	ins    DWORD PTR es:[edi],dx
  453353:	inc    esp
  453354:	outs   dx,BYTE PTR ds:[esi]
  453355:	xor    eax,0x8061e94e
  45335a:	add    DWORD PTR [edx],ebp
  45335c:	jo     0x453380
  45335e:	jno    0x45339d
  453360:	push   eax
  453361:	push   es
  453362:	gs inc esp
  453364:	inc    ecx
  453365:	sub    BYTE PTR [edx+ebp*1+0x57],bl
  453369:	cmp    ebp,DWORD PTR [ebp+0x44]
  45336c:	pop    esi
  45336d:	xor    eax,0x185eaa01
  453372:	jae    0x453394
  453374:	jbe    0x4533ab
  453376:	inc    edx
  453377:	sbb    edi,DWORD PTR [ebp+0x38]
  45337a:	ins    DWORD PTR es:[edi],dx
  45337b:	add    al,0x8e
  45337d:	cmp    BYTE PTR [edx+0x11],dh
  453380:	pop    esi
  453381:	add    DWORD PTR [ecx],0x7120502a
  453387:	std    
  453388:	jns    0x4533c2
  45338a:	jb     0x45338d
  45338c:	call   0x5c:0x61c86d38
  453393:	mov    al,0x7f
  453395:	xor    BYTE PTR [ebp-0x40],ch
  453398:	inc    eax
  453399:	cmp    eax,0x644d368
  45339e:	pop    esp
  45339f:	retf   0x276c
  4533a2:	push   0x5be568b5
  4533a7:	mov    edx,0xb9682742
	...
  4533c0:	push   ebp
  4533c1:	cmp    dh,BYTE PTR [ebx-0x17]
  4533c4:	popa   
  4533c5:	mov    dh,0x3
  4533c7:	mov    edx,0x8c523584
  4533cc:	xor    BYTE PTR [ebx+esi*2],0x80
  4533d0:	jne    0x4533f2
  4533d2:	cmp    eax,0x61c9d600
  4533d7:	jb     0x4533ab
  4533d9:	(bad)  
  4533da:	outs   dx,DWORD PTR fs:[esi]
  4533dc:	cmp    DWORD PTR [edx],ebx
  4533de:	pusha  
  4533df:	arpl   WORD PTR [edi],bp
  4533e1:	(bad)  
  4533e2:	jg     0x4533e4
  4533e4:	js     0x4533aa
  4533e6:	pop    esi
  4533e7:	jbe    0x45340f
  4533e9:	(bad)  
  4533ea:	fs push ebx
  4533ec:	aaa    
  4533ed:	(bad)  
  4533ee:	outs   dx,BYTE PTR ds:[si]
  4533f0:	and    al,0xe8
  4533f2:	push   ebx
  4533f3:	arpl   WORD PTR [esi-0x39],ax
  4533f6:	addr16 je 0x45341b
  4533f9:	adc    DWORD PTR [ebx+esi*2+0x28],edx
  4533fd:	(bad)  
  4533fe:	addr16 jo 0x453438
  453401:	les    esi,FWORD PTR [edx+0x54]
  453404:	dec    esp
  453405:	call   0xc7bb975d
  45340a:	addr16 je 0x45347f
  45340d:	adc    DWORD PTR [ebx+esi*2+0x58],edx
  453411:	(bad)  
  453412:	addr16 jo 0x45345c
  453415:	lds    esi,FWORD PTR [edx+0x57]
  453418:	dec    ebx
  453419:	(bad)  
  45341a:	pop    edi
  45341b:	add    DWORD PTR [edx+edi*8-0x799ac9c],eax
  453422:	arpl   WORD PTR [edx+0x0],si
	...
  453435:	add    BYTE PTR [eax],al
  453437:	add    BYTE PTR [edx],dl
  453439:	retf   0x4477
  45343c:	es leave 
  45343e:	popa   
  45343f:	jb     0x453463
  453441:	(bad)  
  453442:	outs   dx,DWORD PTR fs:[esi]
  453444:	sub    ecx,ebp
  453446:	pop    edi
  453447:	arpl   WORD PTR [edi],bp
  453449:	(bad)  
  45344a:	aad    0x2
  45344c:	fdivr  st,st(2)
  45344e:	fs push ebx
  453450:	es stc 
  453452:	arpl   WORD PTR [edx+0x22],si
  453455:	retf   0x4477
  453458:	(bad)  
  453459:	enter  0x7261,0xf2
  45345d:	lds    esp,FWORD PTR [edi+ebp*2+0x62]
  453461:	xor    DWORD PTR ds:[ecx+0x41],esp
  453465:	and    al,0x2
  453467:	sbb    BYTE PTR [ebx+0x75],ah
  45346a:	adc    ebp,DWORD PTR [ebp+0x43]
  45346d:	push   esp
  45346e:	xor    DWORD PTR [ecx+0x3e],ebp
  453471:	mov    al,0x2
  453473:	inc    ecx
  453474:	es dec edx
  453476:	inc    ebx
  453477:	push   eax
  453478:	sbb    edi,DWORD PTR [edi+0x140625ce]
  45347e:	sbb    DWORD PTR [eax],eax
  453480:	(bad)  
  453481:	cli    
  453482:	cld    
  453483:	dec    edi
  453484:	add    ecx,DWORD PTR [edx*1+0x2109fb3e]
  45348b:	or     edx,DWORD PTR ds:[eax+eiz*1]
  45348f:	inc    esi
  453490:	add    ebx,DWORD PTR ds:0x624f20
  453496:	std    
  453497:	dec    edi
  453498:	add    eax,esp
  45349a:	adc    al,0x52
	...
  4534b0:	(bad)  
  4534b1:	int    0x19
  4534b3:	outs   dx,BYTE PTR ds:[esi]
  4534b4:	mov    edi,0xc76413f0
  4534b9:	jecxz  0x4534c7
  4534bb:	pop    ebp
  4534bc:	sar    DWORD PTR [edi-0x3c9ce404],0x10
  4534c3:	jb     0x453466
  4534c5:	aad    0xc
  4534c7:	inc    esi
  4534c8:	mov    ds:0x629802b2,eax
  4534cd:	bound  ebx,QWORD PTR ds:0x17638a6c
  4534d3:	imul   edx,DWORD PTR [edx-0x6998e49c],0x629c0267
  4534dd:	inc    edx
  4534de:	sbb    eax,0x18458a6c
  4534e3:	jno    0x453554
  4534e5:	xchg   edi,eax
  4534e6:	push   es
  4534e7:	pop    ebp
  4534e8:	xchg   ecx,eax
  4534e9:	bound  ebx,QWORD PTR ds:0x9ad97f63
  4534ef:	xor    ah,BYTE PTR [edx-0x27]
  4534f2:	rol    BYTE PTR [ecx+esi*1],cl
  4534f5:	and    eax,0x2947469a
  4534fa:	xchg   esi,eax
  4534fb:	xor    ah,BYTE PTR [edx-0x27]
  4534fe:	jg     0x453503
  453500:	adc    bh,BYTE PTR [edx]
  453502:	ins    BYTE PTR es:[edi],dx
  453503:	sbb    ebp,DWORD PTR [ebx]
  453505:	sub    al,0x95
  453507:	xor    eax,0x3e80826
  45350c:	fcomp  st(1)
  45350e:	aaa    
  45350f:	and    eax,0x213a310e
	...
  453528:	jmp    FWORD PTR [edi]
  45352a:	push   esi
  45352b:	and    DWORD PTR [eax],esp
  45352d:	cmp    cl,BYTE PTR [ebx+0x1f]
  453530:	adc    DWORD PTR ds:0x80a1749,ebp
  453536:	call   0x1b1ee33e
  45353b:	cmp    al,0x2e
  45353d:	ss xor al,0x21
  453540:	div    BYTE PTR ds:0x26c62536
  453546:	std    
  453547:	xor    ah,BYTE PTR [edx-0x27]
  45354a:	dec    edi
  45354b:	add    esi,DWORD PTR [ecx-0x41dee3ef]
  453551:	ss hlt 
  453553:	and    BYTE PTR [ecx+0x62330136],ch
  453559:	fsqrt  
  45355b:	add    al,0x9f
  45355d:	sub    esi,esp
  45355f:	xor    BYTE PTR [esi+esi*1+0x298326db],bh
  453566:	mov    ebp,0x6d96244
  45356b:	add    eax,0x46da25b1
  453570:	jg     0x45359b
  453572:	scas   al,BYTE PTR es:[edi]
  453573:	cmp    al,0xa3
  453575:	fldenv [ebx+0x13a9203]
  45357b:	mov    ebp,0xbf67df49
  453580:	inc    ebp
  453581:	fidivr WORD PTR [eax-0x63]
  453584:	xor    BYTE PTR [edi],0x72
  453587:	nop
  453588:	js     0x4535c1
  45358a:	dec    esi
  45358b:	jmp    0x453590
	...
  4535a0:	popa   
  4535a1:	sbb    eax,0x2d7eb901
  4535a6:	imul   ebx,DWORD PTR [eax-0x7b92c7ae],0x8a60296c
  4535b0:	sub    BYTE PTR [esi+ecx*2],0xe9
  4535b4:	popa   
  4535b5:	call   0x2bb76fb9
  4535ba:	push   ebx
  4535bb:	sub    dh,BYTE PTR [esi+0x2b]
  4535be:	inc    eax
  4535bf:	jmp    0x3a453125
  4535c4:	jb     0x4535f1
  4535c6:	inc    edx
  4535c7:	push   esp
  4535c8:	push   esi
  4535c9:	adc    cl,BYTE PTR [esi-0x17]
  4535cc:	popa   
  4535cd:	(bad)  
  4535ce:	call   FWORD PTR [ecx]
  4535d0:	push   edx
  4535d1:	sub    eax,DWORD PTR [edx+0x41]
  4535d4:	dec    esp
  4535d5:	adc    BYTE PTR [ecx],al
  4535d7:	shl    DWORD PTR [eax+0xa],cl
  4535da:	ins    DWORD PTR es:[edi],dx
  4535db:	sbb    ebx,DWORD PTR [edi-0x76d88ecc]
  4535e1:	push   cs
  4535e2:	add    ecx,esi
  4535e4:	pusha  
  4535e5:	or     ch,BYTE PTR [ebp-0x5]
  4535e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4535e9:	xor    DWORD PTR [ebx+0x28],esi
  4535ec:	pop    esi
  4535ed:	in     eax,dx
  4535ee:	add    BYTE PTR [ecx],bl
  4535f0:	sub    DWORD PTR ds:0xfd822869,0x3246c842
  4535fa:	jb     0x4535c9
  4535fc:	inc    eax
  4535fd:	sub    ch,BYTE PTR [ecx-0x42]
  453600:	popa   
  453601:	and    BYTE PTR [eax],al
  453603:	(bad)  
	...
  453618:	jae    0x453651
  45361a:	jb     0x45361c
  45361c:	mov    ebx,0xaf6e67c4
  453621:	clc    
  453622:	inc    ebp
  453623:	add    BYTE PTR [ebx-0x5a899a25],dh
  453629:	lds    esi,FWORD PTR [eax+0x72]
  45362c:	repnz shl BYTE PTR [esi+eiz*2+0xa],0xdb
  453632:	add    BYTE PTR [eax],0xb
  453635:	cld    
  453636:	fs push 0x6364fbe6
  45363c:	shl    ebp,cl
  45363e:	jo     0x4536a5
  453640:	call   0xdb45372e
  453645:	ficom  DWORD PTR [eax+0x61]
  453648:	das    
  453649:	ret    0x7347
  45364c:	dec    edi
  45364d:	ret    0x6572
  453650:	sub    cl,cl
  453652:	pop    ebp
  453653:	jb     0x453687
  453655:	call   0xd5b2365a
  45365a:	push   eax
  45365b:	popa   
  45365c:	aas    
  45365d:	mov    ebp,0xde1f643f
  453662:	js     0x4536d8
  453664:	push   ds
  453665:	ret    
  453666:	jno    0x4536d1
  453668:	and    al,0xc3
  45366a:	inc    ebp
  45366b:	add    BYTE PTR [ecx+0x6f6150d5],ah
  453671:	mov    ebp,0x196f6535
  453676:	jae    0x4536e1
  453678:	ins    DWORD PTR es:[edi],dx
  453679:	mov    esi,0x753e
	...
  45368e:	add    BYTE PTR [eax],al
  453690:	push   esi
  453691:	not    DWORD PTR [ebx+0x72]
  453694:	dec    esp
  453695:	aad    0x51
  453697:	dec    eax
  453698:	xchg   eax,ebp
  45369a:	aas    
  45369b:	push   eax
  45369c:	add    BYTE PTR [ebx-0x25c893a6],0xf6
  4536a3:	dec    eax
  4536a5:	rcr    BYTE PTR [ebx+0x6d],0x62
  4536a9:	xchg   ecx,eax
  4536aa:	sbb    BYTE PTR [esi+edx*4-0x67],bl
  4536ae:	sbb    BYTE PTR [ebp-0x6a],bl
  4536b1:	xchg   DWORD PTR [ebx+0x72],eax
  4536b4:	jge    0x45371c
  4536b6:	xor    DWORD PTR [eax],eax
  4536b8:	bound  esp,QWORD PTR [edx-0x6a85acfd]
  4536be:	push   cs
  4536bf:	fs daa 
  4536c1:	js     0x4536da
  4536c3:	arpl   WORD PTR [edi+0x44],cx
  4536c6:	pop    ss
  4536c7:	dec    edi
  4536c8:	(bad)  
  4536c9:	cmc    
  4536ca:	add    DWORD PTR [ebx+0x1a],edx
  4536cd:	ja     0x4536e6
  4536cf:	ins    BYTE PTR es:[edi],dx
  4536d0:	and    al,0x47
  4536d2:	push   cs
  4536d3:	pop    esp
  4536d4:	aas    
  4536d5:	and    dh,BYTE PTR [edx]
  4536d7:	popa   
  4536d8:	ss pop eax
  4536da:	xor    DWORD PTR [eax],eax
  4536dc:	bound  eax,QWORD PTR [ebx+0x3a]
  4536df:	cmp    eax,0x31d1e42e
  4536e4:	inc    esp
  4536e5:	adc    al,0x19
  4536e7:	bound  esi,QWORD PTR fs:[edi+0x12ff3c02]
  4536ee:	adc    edi,DWORD PTR [ecx-0xe]
  4536f1:	(bad)  [edi]
  4536f3:	pop    ebp
	...
  453708:	icebp  
  453709:	loop   0x453726
  45370b:	pop    edi
  45370c:	pop    es
  45370d:	mov    al,0x2
  45370f:	adc    esp,DWORD PTR [edx-0xb]
  453712:	push   cs
  453713:	arpl   ax,dx
  453715:	stc    
  453716:	or     al,0x6c
  453718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  453719:	aad    0x11
  45371b:	jae    0x4536e0
  45371d:	retf   
  45371e:	pop    ds
  45371f:	add    BYTE PTR [edx-0x53],ah
  453722:	add    bh,BYTE PTR [edi]
  453724:	(bad)  
  453725:	sahf   
  453726:	xor    DWORD PTR [ebx-0x41],esi
  453729:	mov    al,ds:0xcdbf612c
  45372e:	aas    
  45372f:	js     0x4536be
  453731:	mov    dl,0x2
  453733:	push   ebx
  453734:	xchg   ecx,ebx
  453736:	retf   0x9010
  453739:	call   0x2def0d57
  45373e:	mov    esp,0xaad97603
  453743:	push   ss
  453744:	xchg   ecx,eax
  453745:	ss mov ah,0x33
  453748:	jo     0x453776
  45374a:	ror    BYTE PTR [eax+eiz*4],0x2d
  45374e:	leave  
  45374f:	adc    eax,0x3ac3679
  453754:	data16 fldcw WORD PTR [edx-0x63edcec9]
  45375b:	cmp    eax,0x327d2c50
  453760:	ss daa 
  453762:	adc    DWORD PTR ds:0x534d91d,0x1c7a2511
	...
  453780:	inc    esp
  453781:	xor    al,0xa6
  453783:	adc    DWORD PTR ds:0x2b309f2e,edi
  453789:	adc    eax,0xd97b041a
  45378e:	sub    dl,BYTE PTR [edi]
  453790:	and    DWORD PTR [edi],esp
  453792:	inc    ebp
  453793:	and    eax,0x162135f6
  453798:	icebp  
  453799:	and    al,0x49
  45379b:	push   ss
  45379c:	add    DWORD PTR [esi],esi
  45379e:	call   0x2b1e2ea6
  4537a3:	pop    ss
  4537a4:	pop    ss
  4537a5:	sub    eax,DWORD PTR [ecx+0x16]
  4537a8:	retf   
  4537a9:	and    eax,0x32be2511
  4537ae:	and    ah,BYTE PTR [ecx]
  4537b0:	(bad)  
  4537b1:	fnstenv [edi]
  4537b3:	add    al,0xa1
  4537b5:	sub    al,0x21
  4537b7:	push   ss
  4537b8:	retf   
  4537b9:	and    eax,0x32be2511
  4537be:	add    ah,BYTE PTR [ecx]
  4537c0:	xchg   ecx,eax
  4537c1:	add    DWORD PTR ss:[edx],ecx
  4537c4:	push   ebx
  4537c5:	daa    
  4537c6:	push   0xd96ef5
  4537cb:	mov    dh,0x61
  4537cd:	sbb    BYTE PTR [esi-0x50],ah
  4537d0:	ja     0x453804
  4537d2:	ins    DWORD PTR es:[edi],dx
  4537d3:	sar    BYTE PTR [esi],0x35
  4537d6:	push   0x78de42d3
  4537db:	jmp    0xaa467941
  4537e0:	push   ebx
  4537e1:	(bad)  
  4537e2:	pop    edi
  4537e3:	mov    ebp,0x0
	...
  4537f8:	inc    edx
  4537f9:	or     BYTE PTR [ebp-0x45],ch
  4537fc:	cmp    BYTE PTR [edx],0x64
  4537ff:	mov    dh,0x6f
  453801:	adc    DWORD PTR [esi],edi
  453803:	lea    esi,[edi+esi*1+0x60]
  453807:	test   DWORD PTR [ecx+0x22],esp
  45380a:	add    DWORD PTR [edx+0x7a600d54],ebp
  453810:	pop    eax
  453811:	push   ss
  453812:	pop    esp
  453813:	mov    WORD PTR [edi+0x27],gs
  453816:	pop    esp
  453817:	mov    WORD PTR [ecx+0x34],fs
  45381a:	test   BYTE PTR gs:[eax+0x7a4d26e9],dh
  453821:	xor    eax,0x18661901
  453826:	jae    0x453874
  453828:	inc    ecx
  453829:	sub    eax,0x36572a5c
  45382e:	jno    0x453878
  453830:	push   edx
  453831:	xor    ah,BYTE PTR [ebx+0x4d]
  453834:	dec    ebp
  453835:	pop    ss
  453836:	push   0x713a4d3d
  45383b:	jmp    0x2d46d4a1
  453840:	jne    0x453877
  453842:	pop    esp
  453843:	adc    eax,0x363126d
  453848:	gs ss ins DWORD PTR es:[edi],dx
  45384b:	jmp    0x45e7b1
  453850:	test   BYTE PTR [edx+0x17724464],bh
  453856:	push   0x26d72874
	...
  45386f:	add    BYTE PTR [eax-0x39],cl
  453872:	push   ebx
  453873:	popa   
  453874:	aaa    
  453875:	mov    esp,0xe9b94934
  45387a:	push   ebx
  45387b:	arpl   WORD PTR [edi],sp
  45387d:	rcr    BYTE PTR [ebp+0x6e],0xb
  453881:	xlat   BYTE PTR ds:[ebx]
  453882:	das    
  453883:	add    al,cl
  453885:	enter  0x6153,0xb7
  453889:	mov    ebx,0xc71e6f41
  45388e:	pop    edi
  45388f:	je     0x453833
  453891:	clc    
  453892:	pop    esp
  453893:	gs pop es
  453895:	sbb    al,BYTE PTR [ecx]
  453897:	add    BYTE PTR [edx-0x209aae29],dl
  45389d:	mov    ebx,0xf8dc7461
  4538a2:	push   0x65
  4538a4:	call   0xe8453973
  4538a9:	(bad)  
  4538aa:	inc    ecx
  4538ab:	jb     0x453883
  4538ad:	mul    DWORD PTR [ebp+eiz*2-0x39]
  4538b1:	sbb    DWORD PTR [esi+0x0],eax
  4538b4:	mov    al,0xd7
  4538b6:	xor    eax,0x54193765
  4538bb:	jbe    0x4538df
  4538bd:	clc    
  4538be:	push   ebx
  4538bf:	inc    ebx
  4538c0:	sub    al,ch
  4538c2:	jno    0x4538c4
  4538c4:	mov    edi,edx
  4538c6:	xor    al,0x65
  4538c8:	pop    ds
  4538c9:	mov    edx,0x18376564
  4538ce:	add    DWORD PTR [eax],eax
  4538d0:	cmp    dh,dl
  4538d2:	inc    edx
  4538d3:	imul   eax,DWORD PTR [eax],0x0
	...
  4538e5:	add    BYTE PTR [eax],al
  4538e7:	add    BYTE PTR [edi+0x17],dh
  4538ea:	pop    ebp
  4538eb:	je     0x453928
  4538ed:	(bad)  
  4538ee:	xchg   ecx,eax
  4538ef:	add    ah,BYTE PTR [edx-0x22]
  4538f2:	adc    eax,0x109bb673
  4538f7:	pop    ebp
  4538f8:	sahf   
  4538f9:	out    dx,eax
  4538fa:	cld    
  4538fb:	cdq    
  4538fc:	pusha  
  4538fd:	mov    edi,0xecbf6e21
  453902:	aas    
  453903:	add    BYTE PTR [edx+0x1e],ah
  453906:	add    BYTE PTR [ebx+0x7f],dl
  453909:	jl     0x45393b
  45390b:	pop    ebp
  45390c:	add    DWORD PTR [eax+esi*1+0x2b0745f],0x1673638c
  453917:	imul   ebx,DWORD PTR [esp+eax*4-0x4f858cf9],0x3f60fb02
  453922:	pop    ss
  453923:	ins    BYTE PTR es:[edi],dx
  453924:	xor    al,0x99
  453926:	pop    ss
  453927:	outs   dx,DWORD PTR ds:[esi]
  453928:	push   edx
  453929:	inc    ebx
  45392a:	adc    BYTE PTR [ebp+ebx*1+0x3e],ch
  45392e:	adc    eax,0x2b04a3d
  453933:	aas    
  453934:	es jns 0x453908
  453937:	xor    DWORD PTR [esp+ecx*2+0x7662640e],eax
  45393e:	add    cl,BYTE PTR [edi+0x11]
  453941:	jno    0x453974
  453943:	ins    BYTE PTR es:[edi],dx
  453944:	adc    BYTE PTR [ecx+0xc],bl
  453947:	pop    edi
  453948:	add    edi,DWORD PTR cs:[ebx+ebx*2+0x0]
	...
  453960:	push   es
  453961:	(bad)  
  453962:	out    0x72,eax
  453964:	adc    ebx,ebx
  453966:	cld    
  453967:	adc    DWORD PTR [edx-0x1d],esp
  45396a:	int    0x40
  45396c:	and    ecx,DWORD PTR [ecx+ebp*8]
  45396f:	jno    0x453978
  453971:	fucomip st,st(5)
  453973:	dec    ebx
  453974:	cmc    
  453975:	mov    esi,0xd8cb71f8
  45397a:	jmp    0xc41e9bbf
  45397f:	add    ebx,DWORD PTR [ebp-0x2c38d6d4]
  453985:	dec    BYTE PTR [eax]
  453987:	clc    
  453988:	sahf   
  453989:	push   ds
  45398a:	push   cs
  45398b:	jmp    0x42d474f
  453990:	test   cl,bl
  453992:	push   cs
  453993:	xlat   BYTE PTR ds:[ebx]
  453994:	mov    ds:0x87e8f61e,al
  453999:	or     eax,0xfe81e91b
  45399e:	retf   0xdf7
  4539a1:	cdq    
  4539a2:	adc    eax,DWORD PTR [edx*4-0x783756d4]
  4539a9:	push   cs
  4539aa:	mov    ch,0xd1
  4539ac:	xchg   esi,eax
  4539ad:	or     eax,0x473f2b7
  4539b2:	popf   
  4539b3:	stc    
  4539b4:	xchg   BYTE PTR [edi],al
  4539b6:	mov    ah,0xf6
  4539b8:	fstp   QWORD PTR [eax+0x2c2503f2]
  4539be:	test   eax,0x8bfc44cc
  4539c3:	out    dx,eax
	...
  4539d8:	lds    ebx,FWORD PTR [eax+0x2c2d03ef]
  4539de:	test   eax,0x7b0841c6
  4539e3:	call   0xf1c24956
  4539e8:	cmp    ecx,ebx
  4539ea:	mov    bh,0x3
  4539ec:	sub    eax,0x36caa92c
  4539f1:	or     eax,0xb2efa2f
  4539f6:	inc    esp
  4539f7:	in     eax,0xf5
  4539f9:	or     BYTE PTR [ebp-0x18],al
  4539fc:	adc    edi,esi
  4539fe:	pop    edx
  4539ff:	stc    
  453a00:	add    DWORD PTR ds:0xd9df03e8,ecx
  453a06:	cmp    eax,0xfe06f6
  453a0b:	dec    eax
  453a0c:	dec    edx
  453a0d:	xor    al,0x73
  453a0f:	inc    eax
  453a10:	push   eax
  453a11:	ss jmpw 0xa177
  453a16:	add    DWORD PTR [esi],eax
  453a18:	cmp    eax,DWORD PTR [eax+eiz*2]
  453a1b:	or     eax,0xff680a4a
  453a20:	dec    ebx
  453a21:	inc    DWORD PTR [eax]
  453a23:	xor    al,0x66
  453a25:	sub    BYTE PTR [edx+0x28],dl
  453a28:	or     eax,0x660d6735
  453a2d:	and    DWORD PTR [ecx],eax
  453a2f:	push   ss
  453a30:	sub    eax,0x4cc5319
  453a35:	push   es
  453a36:	add    DWORD PTR [esi+0x1a55ca2c],esi
	...
  453a50:	xor    al,0xbf
  453a52:	pop    esp
  453a53:	mov    ebp,0x8f69805
  453a58:	data16 sbb al,0x5c
  453a5b:	mov    ebx,0xc55bd3ed
  453a60:	retf   0x5c03
  453a63:	stos   BYTE PTR es:[edi],al
  453a64:	retf   0x6d09
  453a67:	nop
  453a68:	mov    ebx,0xcd886200
  453a6d:	xor    al,0x3f
  453a6f:	fwait
  453a70:	mov    al,0xfc
  453a72:	push   ecx
  453a73:	xchg   ebp,eax
  453a74:	mov    al,0x9
  453a76:	pop    esp
  453a77:	jmp    0xaa466ddd
  453a7c:	mov    edx,0x91a66d09
  453a81:	xor    al,0x67
  453a83:	call   0x2a7d:0x4c6d0a96
  453a8a:	ins    DWORD PTR es:[edi],dx
  453a8b:	dec    esi
  453a8c:	mov    WORD PTR [esi+ecx*2],?
  453a8f:	jmp    0x2a4625f5
  453a94:	jge    0x453a9f
  453a96:	ins    DWORD PTR es:[edi],dx
  453a97:	add    BYTE PTR [eax],bh
  453a99:	mov    DWORD PTR [edi+0x73],ebx
  453a9c:	push   ds
  453a9d:	scas   al,BYTE PTR es:[edi]
  453a9e:	push   0x6f
  453aa0:	cdq    
  453aa1:	jle    0x453a99
  453aa3:	jmp    FWORD PTR [ebx-0x26]
  453aa6:	push   eax
  453aa7:	inc    esi
  453aa8:	mov    ds:0x54705da2,eax
  453aad:	(bad)
  453ab1:	(bad)
	...
  453ac5:	add    BYTE PTR [eax],al
  453ac7:	add    BYTE PTR [edi-0x78],cl
  453aca:	jo     0x453b31
  453acc:	cmp    ebx,ebx
  453ace:	sbb    al,0x0
  453ad0:	js     0x453b50
  453ad2:	jo     0x453b48
  453ad4:	dec    esi
  453ad5:	mov    esp,DWORD PTR [ebp+0x6d]
  453ad8:	dec    eax
  453ad9:	jle    0x453b4b
  453adb:	je     0x453b0f
  453add:	sub    DWORD PTR [ecx+0x63],0x73558f1a
  453ae4:	ret    0x5388
  453ae7:	je     0x453a9d
  453ae9:	mov    WORD PTR [ebp+0x0],ss
  453aec:	pop    esi
  453aed:	fld    QWORD PTR [ecx+0x65]
  453af0:	test   eax,0x1b753a8e
  453af5:	xchg   DWORD PTR [ecx+0x63],ebp
  453af8:	stos   BYTE PTR es:[edi],al
  453af9:	mov    ss,WORD PTR [ebp+0x43]
  453afc:	fimul  WORD PTR [edx+ebp*2+0x6383dd69]
  453b03:	popa   
  453b04:	fistp  QWORD PTR [edi+0x43]
  453b07:	outs   dx,DWORD PTR ds:[esi]
  453b08:	xor    eax,0x2f78558e
  453b0d:	fimul  DWORD PTR ds:0x4ea0cb01
  453b13:	inc    ebp
  453b14:	adc    ecx,DWORD PTR [edx-0x62f08da1]
  453b1a:	push   ebp
  453b1b:	jb     0x453b4c
  453b1d:	lods   al,BYTE PTR ds:[esi]
  453b1e:	push   0x6f
  453b20:	sub    DWORD PTR [esi+0x35],edi
  453b23:	js     0x453b87
  453b25:	add    BYTE PTR [edx],0xdc
  453b28:	(bad)
	...
  453b3d:	add    BYTE PTR [eax],al
  453b3f:	add    dl,dh
  453b41:	ror    ebp,cl
  453b43:	gs repnz shr edi,1
  453b47:	imul   eax,edi,0x23
  453b4a:	stc    
  453b4b:	cmp    eax,ebx
  453b4d:	int3   
  453b4e:	loope  0x453b4f
  453b50:	dec    ebp
  453b51:	ret    
  453b52:	into   
  453b53:	pop    eax
  453b54:	mov    dl,0xcc
  453b56:	sub    esi,DWORD PTR [edx]
  453b58:	mov    esp,fs
  453b5a:	lock arpl WORD PTR [edx-0x11],sp
  453b5e:	cld    
  453b5f:	inc    edi
  453b60:	mov    dh,0x94
  453b62:	repnz push eax
  453b64:	scas   eax,DWORD PTR es:[edi]
  453b65:	fucomp st(6)
  453b67:	js     0x453b14
  453b69:	fsubp  st(2),st
  453b6b:	mov    ds:0x628d0280,ax
  453b71:	dec    ecx
  453b72:	lock imul edi,DWORD PTR [edi-0x4e],0xfffffff0
  453b77:	pop    esp
  453b78:	jbe    0x453bbd
  453b7a:	icebp  
  453b7b:	test   BYTE PTR gs:[ebp-0x7f5c9423],bl
  453b82:	add    bh,BYTE PTR [ebp+0x6bf04962]
  453b88:	inc    edi
  453b89:	push   edx
  453b8a:	lock pop esp
  453b8c:	dec    esi
  453b8d:	jb     0x453b6e
  453b8f:	pusha  
  453b90:	inc    esi
  453b91:	inc    esi
  453b92:	jmp    0x453bf7
  453b94:	aas    
  453b95:	add    BYTE PTR [edx],0xd2
  453b98:	bound  edi,QWORD PTR [ecx]
  453b9a:	lock imul edi,DWORD PTR [edi],0x72
  453b9e:	lock pop esp
  453ba0:	ss jae 0x453b82
  453ba3:	imul   eax,DWORD PTR [eax],0x0
	...
  453bb6:	add    BYTE PTR [eax],al
  453bb8:	adc    eax,0xd68ee10
  453bbd:	pop    esi
  453bbe:	ret    
  453bbf:	call   DWORD PTR [ebp+0x16480211]
  453bc5:	fst    DWORD PTR [ebx-0xc]
  453bc8:	sbb    al,0x9
  453bca:	cmp    eax,0x58fc13ee
  453bcf:	stc    
  453bd0:	push   ss
  453bd1:	or     cl,BYTE PTR [ebp+eax*8+0x6d]
  453bd5:	xchg   ebp,eax
  453bd6:	push   edx
  453bd7:	add    al,0x1a
  453bd9:	or     eax,0xfda2f42c
  453bde:	inc    ebx
  453bdf:	shl    BYTE PTR [esi-0x2f16d2f6],cl
  453be5:	or     eax,0xfdc2e930
  453bea:	cld    
  453beb:	icebp  
  453bec:	mov    al,0x1a
  453bee:	call   0x201ef6f6
  453bf3:	clc    
  453bf4:	mov    ecx,0xbfe91b09
  453bf9:	std    
  453bfa:	sbb    ecx,ebp
  453bfc:	xchg   edx,eax
  453bfd:	push   cs
  453bfe:	add    eax,0xe81a89f3
  453c03:	add    edx,edi
  453c05:	fnstenv [eax-0x26018613]
  453c0b:	in     eax,dx
  453c0c:	sahf   
  453c0d:	or     eax,0x396f39f
  453c12:	test   eax,0xb0d9e503
  453c17:	in     eax,dx
  453c18:	jns    0x453c18
  453c1a:	mov    ecx,0xed
	...
  453c2f:	add    BYTE PTR [esi],bh
  453c31:	or     eax,0x83cefab
  453c36:	mov    ebp,0x840342cb
  453c3b:	out    dx,eax
  453c3c:	fldcw  WORD PTR es:[edx]
  453c3f:	add    al,0x2b
  453c41:	add    edx,DWORD PTR [eax+ebp*8-0x882fccd]
  453c48:	adc    cl,BYTE PTR [esi]
  453c4a:	test   ecx,esi
  453c4c:	sub    ah,BYTE PTR [eax+edi*2]
  453c4f:	test   DWORD PTR [edx],0x9e870104
  453c55:	xchg   esp,eax
  453c56:	not    BYTE PTR [esi+0x66]
  453c59:	and    ah,BYTE PTR [edi+0x5d]
  453c5c:	jnp    0x453c68
  453c5e:	addr16 inc esp
  453c60:	jp     0x453c79
  453c62:	jae    0x453cac
  453c64:	cmp    edi,0x19725b4b
  453c6a:	add    DWORD PTR [esi],ebx
  453c6c:	xchg   edi,eax
  453c6d:	push   ds
  453c6e:	dec    eax
  453c6f:	das    
  453c70:	sub    esp,DWORD PTR [eax]
  453c72:	daa    
  453c73:	dec    ebp
  453c74:	push   edx
  453c75:	clc    
  453c76:	add    BYTE PTR [esi],bl
  453c78:	xor    dl,ch
  453c7a:	aas    
  453c7b:	cmp    al,0x2a
  453c7d:	(bad)  
  453c7e:	xor    cl,bh
  453c80:	inc    ebp
  453c81:	clc    
  453c82:	fs jmp 0x1f46c2e9
  453c88:	cmp    eax,DWORD PTR [eax]
  453c8a:	dec    esp
  453c8b:	cli    
  453c8c:	cmp    cl,BYTE PTR [edx]
  453c8e:	ds add al,0x1a
  453c91:	and    DWORD PTR [edi+0xf],esp
	...
  453ca8:	add    eax,0x6610f694
  453cad:	sbb    ebx,DWORD PTR [ebp+ebx*8+0x1e]
  453cb1:	add    al,0x68
  453cb3:	stos   DWORD PTR es:[edi],eax
  453cb4:	cli    
  453cb5:	xor    eax,0xd5f3cc5f
  453cba:	jb     0x453c80
  453cbc:	cli    
  453cbd:	xchg   ebx,eax
  453cbe:	idiv   BYTE PTR [edx]
  453cc0:	popa   
  453cc1:	sbb    ebx,DWORD PTR [ebp+esi*4-0x46]
  453cc5:	push   es
  453cc6:	pop    esp
  453cc7:	mov    ebx,0xbc6bfdaa
  453ccc:	popa   
  453ccd:	sbb    edi,DWORD PTR [edi*4-0x25b7dc62]
  453cd4:	jae    0x453c91
  453cd6:	pop    esp
  453cd7:	test   ebp,eax
  453cd9:	xchg   ebx,eax
  453cda:	not    bl
  453cdc:	popa   
  453cdd:	aam    0x5b
  453cdf:	add    BYTE PTR [edi],ah
  453ce1:	popf   
  453ce2:	pop    edx
  453ce3:	popa   
  453ce4:	sbb    ecx,DWORD PTR [ebp+edx*2+0x5a9d1872]
  453ceb:	or     DWORD PTR fs:[ecx-0x75e98c8d],eax
  453cf2:	idiv   bh
  453cf4:	xor    ch,BYTE PTR [ebp-0x67c4b3c2]
  453cfa:	inc    esi
  453cfb:	dec    ecx
  453cfc:	ins    DWORD PTR es:[edi],dx
  453cfd:	fwait
  453cfe:	inc    edx
  453cff:	dec    esp
  453d00:	jnp    0x453cd9
  453d02:	inc    esi
  453d03:	add    DWORD PTR [edx+edi*2+0x70],edi
  453d07:	jb     0x453ca6
  453d09:	test   dh,dh
  453d0b:	inc    DWORD PTR [eax]
	...
  453d1d:	add    BYTE PTR [eax],al
  453d1f:	add    BYTE PTR [ecx],ah
  453d21:	loop   0x453d7e
  453d23:	outs   dx,BYTE PTR gs:[esi]
  453d25:	js     0x453d8d
  453d27:	jns    0x453d74
  453d29:	xlat   BYTE PTR ds:[ebx]
  453d2a:	out    0x4,eax
  453d2c:	pop    esi
  453d2d:	jp     0x453d8c
  453d2f:	arpl   WORD PTR [esi],bp
  453d31:	xchg   esi,esi
  453d33:	dec    ebp
  453d35:	loope  0x453d92
  453d37:	outs   dx,BYTE PTR gs:[esi]
  453d39:	mov    BYTE PTR [ebp+0x74],dl
  453d3c:	or     edx,edi
  453d3e:	in     al,dx
  453d3f:	add    bl,BYTE PTR [ebp+ecx*4+0x65]
  453d43:	jb     0x453d5b
  453d45:	jp     0x453da8
  453d47:	ins    BYTE PTR es:[edi],dx
  453d48:	das    
  453d49:	xlat   BYTE PTR ds:[ebx]
  453d4a:	gs add al,0x2a
  453d4d:	jns    0x453dc2
  453d4f:	add    BYTE PTR [ebp-0x28],cl
  453d52:	dec    ebp
  453d53:	jbe    0x453cfd
  453d55:	test   BYTE PTR [edi+0x70],ah
  453d58:	sbb    DWORD PTR [eax-0x295a8ba4],eax
  453d5e:	enter  0xdc03,0x8c
  453d62:	jae    0x453dd2
  453d64:	jmp    0x453cee
  453d66:	imul   ebp,DWORD PTR [esi-0x29],0x62fff67c
  453d6d:	xchg   esp,eax
  453d6e:	push   DWORD PTR [edx+0x36]
  453d71:	outs   dx,BYTE PTR ds:[esi]
  453d72:	loope  0x453dd8
  453d74:	xor    al,BYTE PTR [eax+0x6566e402]
  453d7a:	fbld   TBYTE PTR [edi+eax*1+0x5b]
  453d7e:	in     al,dx
  453d7f:	pop    esp
  453d80:	(bad)  
  453d81:	fmul   DWORD PTR [eax]
  453d83:	add    BYTE PTR gs:[eax],al
	...
  453d96:	add    BYTE PTR [eax],al
  453d98:	jmp    FWORD PTR [eax+eiz*8]
  453d9b:	addr16 lock jg 0x453da1
  453d9f:	xchg   esi,eax
  453da0:	popa   
  453da1:	retf   
  453da2:	in     eax,dx
  453da3:	arpl   si,si
  453da5:	shr    bl,cl
  453da7:	jmp    DWORD PTR [ebp-0x19]
  453daa:	std    
  453dab:	jb     0x453d83
  453dad:	into   
  453dae:	clc    
  453daf:	iretw  
  453db1:	sbb    al,0xfd
  453db3:	fs ror edx,1
  453db6:	fbstp  TBYTE PTR [ecx-0x32]
  453db9:	stos   BYTE PTR es:[edi],al
  453dba:	fisub  WORD PTR [ebx-0x32]
  453dbd:	add    BYTE PTR [edx],0x8
  453dc0:	(bad)
  453dc5:	f2xm1  
  453dc7:	pop    esp
  453dc8:	mov    ebp,fs
  453dca:	bnd jb 0x453d58
  453dcd:	jecxz  0x453db5
  453dcf:	dec    eax
  453dd0:	test   dl,ah
  453dd2:	jecxz  0x453e22
  453dd4:	bound  esi,QWORD PTR [eax-0x5180b1fe]
  453dda:	shr    DWORD PTR [edi+eax*4-0x52],cl
  453dde:	sti    
  453ddf:	dec    ebp
  453de0:	sbb    DWORD PTR [edi+ebp*8+0x280955c],0xffffffff
  453de8:	in     eax,0x42
  453dea:	fild   QWORD PTR [ebx+0x24]
  453ded:	test   eax,0xa52c5ce6
  453df2:	lock jb 0x453e30
  453df5:	push   ebx
  453df6:	in     al,0x48
  453df8:	xor    al,0xd9
  453dfa:	test   esp,ebp
	...
  453e10:	adc    BYTE PTR [eax],al
  453e12:	mov    ds:0xb5d924e6,al
  453e17:	(bad)  
  453e18:	adc    esp,DWORD PTR [esi]
  453e1a:	mov    eax,ds:0x83c31fcc
  453e1f:	out    dx,eax
  453e20:	add    ecx,ebx
  453e22:	and    eax,0x7c0d3007
  453e27:	(bad)  
  453e28:	pop    es
  453e29:	or     al,BYTE PTR [ecx-0x1026d613]
  453e2f:	add    BYTE PTR [ecx],dl
  453e31:	cld    
  453e32:	dec    ebx
  453e33:	ret    0x50a
  453e36:	inc    ebp
  453e37:	aam    0x4
  453e39:	add    BYTE PTR [esi],dh
  453e3b:	lock push es
  453e3d:	pop    es
  453e3e:	call   0x271aac46
  453e43:	icebp  
  453e44:	leave  
  453e45:	or     DWORD PTR ds:0x49f689f0,esi
  453e4b:	icebp  
  453e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  453e4d:	sub    al,0x14
  453e4f:	test   dl,0xff
  453e52:	inc    ah
  453e54:	xor    eax,0x9f017891
  453e59:	(bad)  
  453e5a:	jmp    esp
  453e5c:	mov    edi,0xb9e10bf5
  453e61:	push   ss
  453e62:	add    bh,ah
  453e64:	mov    dh,0x9
  453e66:	hlt    
  453e67:	in     al,dx
  453e68:	test   bh,bh
  453e6a:	sbb    eax,0xc50581ed
  453e6f:	cmc    
  453e70:	std    
  453e71:	nop
  453e72:	mov    eax,0x0
	...
  453e87:	add    BYTE PTR [ecx-0x782f2c0a],dl
  453e8d:	add    ecx,ecx
  453e8f:	jmp    0xe00a3c1d
  453e94:	sahf   
  453e95:	adc    ebx,ecx
  453e97:	loopne 0x453ede
  453e99:	add    eax,0xf6b8c001
  453e9e:	sar    BYTE PTR ds:[ebp+0x619b5c04],0x31
  453ea6:	add    BYTE PTR [esi-0x739df73e],bh
  453eac:	mov    cl,0x4
  453eae:	push   esi
  453eaf:	cmp    DWORD PTR [esi-0x7d6aa30a],0x61e9320a
  453eb9:	fld    DWORD PTR [eax]
  453ebb:	jmp    0xe9461821
  453ec0:	popa   
  453ec1:	fld    DWORD PTR [eax]
  453ec3:	jmp    0xe9461829
  453ec8:	popa   
  453ec9:	fld    DWORD PTR [eax]
  453ecb:	jmp    0xe9461831
  453ed0:	popa   
  453ed1:	fld    DWORD PTR [eax]
  453ed3:	jmp    0xe9461839
  453ed8:	popa   
  453ed9:	fld    DWORD PTR [eax]
  453edb:	jmp    0xe9461841
  453ee0:	popa   
  453ee1:	fld    DWORD PTR [eax]
  453ee3:	jmp    0xe9461849
  453ee8:	popa   
  453ee9:	fld    DWORD PTR [eax]
  453eeb:	jmp    0x453ef0
	...
  453f00:	popa   
  453f01:	fld    DWORD PTR [eax]
  453f03:	jmp    0xe9461869
  453f08:	popa   
  453f09:	fld    DWORD PTR [eax]
  453f0b:	jmp    0xe9461871
  453f10:	popa   
  453f11:	fld    DWORD PTR [eax]
  453f13:	jmp    0xe9461879
  453f18:	popa   
  453f19:	fld    DWORD PTR [eax]
  453f1b:	jmp    0xe9461881
  453f20:	popa   
  453f21:	fld    DWORD PTR [eax]
  453f23:	jmp    0x461889
  453f28:	retf   
  453f29:	fild   DWORD PTR [eax]
  453f2b:	add    bl,cl
  453f2d:	fild   DWORD PTR [eax]
  453f2f:	add    BYTE PTR [ebx-0x44ffff25],bh
  453f35:	fild   DWORD PTR [eax]
  453f37:	add    bl,cl
  453f39:	fild   DWORD PTR [eax]
  453f3b:	add    bl,cl
  453f3d:	fild   DWORD PTR [eax]
  453f3f:	add    BYTE PTR [ebx-0x44ffff25],bh
  453f45:	fild   DWORD PTR [eax]
  453f47:	add    BYTE PTR [ebx-0x74ffff25],cl
  453f4d:	fild   DWORD PTR [eax]
  453f4f:	add    BYTE PTR [ebx-0x25],bh
  453f52:	add    BYTE PTR [eax],al
  453f54:	jnp    0x453f31
  453f56:	add    BYTE PTR [eax],al
  453f58:	mov    ebx,ebx
  453f5a:	add    BYTE PTR [eax],al
  453f5c:	mov    ebx,ebx
  453f5e:	add    BYTE PTR [eax],al
  453f60:	jnp    0x453f3d
	...
  453f76:	add    BYTE PTR [eax],al
  453f78:	jnp    0x453f55
  453f7a:	add    BYTE PTR [eax],al
  453f7c:	dec    ebx
  453f7d:	fild   DWORD PTR [eax]
  453f7f:	add    BYTE PTR [ebx-0x25],cl
  453f82:	add    BYTE PTR [eax],al
  453f84:	cmp    ebx,ebx
  453f86:	add    BYTE PTR [eax],al
  453f88:	cmp    ebx,ebx
  453f8a:	add    BYTE PTR [eax],al
  453f8c:	dec    ebx
  453f8d:	fild   DWORD PTR [eax]
  453f8f:	add    BYTE PTR [ebx-0x25],cl
  453f92:	add    BYTE PTR [eax],al
  453f94:	cmp    ebx,ebx
  453f96:	add    BYTE PTR [eax],al
  453f98:	cmp    ebx,ebx
  453f9a:	add    BYTE PTR [eax],al
  453f9c:	or     ebx,ebx
  453f9e:	add    BYTE PTR [eax],al
  453fa0:	or     ebx,ebx
  453fa2:	add    BYTE PTR [eax],al
  453fa4:	sti    
  453fa5:	fiadd  DWORD PTR [eax]
  453fa7:	add    bl,bh
  453fa9:	fiadd  DWORD PTR [eax]
  453fab:	add    BYTE PTR [ebx],cl
  453fad:	fild   DWORD PTR [eax]
  453faf:	add    BYTE PTR [ebx],cl
  453fb1:	fild   DWORD PTR [eax]
  453fb3:	add    BYTE PTR [edx-0x80],ah
  453fb6:	add    al,BYTE PTR [eax]
  453fb8:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  453fbe:	add    al,BYTE PTR [eax]
  453fc0:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  453fc6:	add    al,BYTE PTR [eax]
  453fc8:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  453fce:	add    al,BYTE PTR [eax]
  453fd0:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  453fd6:	add    al,BYTE PTR [eax]
  453fd8:	bound  eax,QWORD PTR [eax+0x2]
	...
  453fee:	add    BYTE PTR [eax],al
  453ff0:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  453ff6:	add    al,BYTE PTR [eax]
  453ff8:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  453ffe:	add    al,BYTE PTR [eax]
  454000:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  454006:	add    al,BYTE PTR [eax]
  454008:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  45400e:	add    al,BYTE PTR [eax]
  454010:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  454016:	add    al,BYTE PTR [eax]
  454018:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  45401e:	add    al,BYTE PTR [eax]
  454020:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  454026:	add    al,BYTE PTR [eax]
  454028:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  45402e:	add    al,BYTE PTR [eax]
  454030:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  454036:	add    al,BYTE PTR [eax]
  454038:	bound  eax,QWORD PTR [eax-0x7f9dfffe]
  45403e:	add    al,BYTE PTR [eax]
  454040:	(bad)  
  454041:	(bad)  
  454043:	add    esp,DWORD PTR [edx-0x27]
  454046:	out    0x3,eax
  454048:	(bad)  
  454049:	(bad)  
  45404b:	add    esp,DWORD PTR [edx-0x27]
  45404e:	out    0x3,eax
  454050:	(bad)  
  454051:	(bad)  
  454053:	add    eax,DWORD PTR [eax]
	...
  454065:	add    BYTE PTR [eax],al
  454067:	add    BYTE PTR [edx-0x27],ah
  45406a:	out    0x3,eax
  45406c:	(bad)  
  45406d:	(bad)  
  45406f:	add    esp,DWORD PTR [edx-0x27]
  454072:	out    0x3,eax
  454074:	(bad)  
  454075:	(bad)  
  454077:	add    esp,DWORD PTR [edx-0x27]
  45407a:	out    0x3,eax
  45407c:	(bad)  
  45407d:	(bad)  
  45407f:	pop    ds
  454080:	and    bl,cl
  454082:	pop    ds
  454083:	and    eax,0x2e8d922
  454088:	(bad)  
  454089:	(bad)  
  45408b:	add    ah,BYTE PTR [edx-0x27]
  45408e:	fiadd  WORD PTR [ebx]
  454090:	(bad)  
  454091:	(bad)  [edi+0x2b]
  454094:	and    bl,cl
  454096:	aaa    
  454097:	and    esp,DWORD PTR [edx]
  454099:	(bad)  
  45409b:	add    esp,DWORD PTR [edx-0x27]
  45409e:	in     eax,dx
  45409f:	add    esp,DWORD PTR [edx-0x27]
  4540a2:	(bad)  
  4540a3:	add    esp,DWORD PTR [edx-0x27]
  4540a6:	out    0x3,eax
  4540a8:	(bad)  
  4540a9:	fldcw  WORD PTR [edi-0x18265ddd]
  4540af:	add    esp,DWORD PTR [edx-0x27]
  4540b2:	fiadd  DWORD PTR [ebx]
  4540b4:	(bad)  
  4540b5:	(bad)  
  4540b7:	add    esp,DWORD PTR [edx-0x27]
  4540ba:	out    0x3,eax
  4540bc:	(bad)  
  4540bd:	fld1   
  4540bf:	add    esp,DWORD PTR [edx-0x27]
  4540c2:	adc    eax,0x3950a25e
  4540c7:	sbb    eax,0x3e815cd
	...
  4540e0:	(bad)  
  4540e1:	fld    DWORD PTR [eax]
  4540e3:	leave  
  4540e4:	bound  ebp,QWORD PTR [eax+0x18]
  4540e7:	jmp    0xe9461a4d
  4540ec:	popa   
  4540ed:	fld    DWORD PTR [eax]
  4540ef:	jmp    0xe9461a55
  4540f4:	in     eax,0x8c
  4540f6:	imul   al
  4540f8:	push   ebp
  4540f9:	test   dh,dh
  4540fb:	cld    
  4540fc:	popa   
  4540fd:	fld    DWORD PTR [eax]
  4540ff:	repnz popa 
  454101:	fld    DWORD PTR [eax]
  454103:	test   eax,0x2e00d961
  454108:	popa   
  454109:	fld    DWORD PTR [eax]
  45410b:	imul   ebx,DWORD PTR [esi-0x27],0x84356800
  454112:	div    cl
  454114:	popa   
  454115:	fld    DWORD PTR [eax]
  454117:	loope  0x45417a
  454119:	fld    DWORD PTR [eax]
  45411b:	leave  
  45411c:	popa   
  45411d:	fld    DWORD PTR [eax]
  45411f:	jle    0x454182
  454121:	fld    DWORD PTR [eax]
  454123:	jmp    0xe9461a89
  454128:	popa   
  454129:	fld    DWORD PTR [eax]
  45412b:	jmp    0xe98618f1
  454130:	popa   
  454131:	fld    DWORD PTR [eax]
  454133:	jmp    0xe9461a99
  454138:	test   eax,0x61e9368e
  45413d:	fld    DWORD PTR [eax]
  45413f:	jmp    0xe9461aa5
	...
  454158:	retf   
  454159:	loope  0x45419b
  45415b:	jmp    0xe9461ac1
  454160:	popa   
  454161:	fld    DWORD PTR [eax]
  454163:	sub    edx,ecx
  454165:	aam    0x40
  454167:	jmp    0xe9461acd
  45416c:	popa   
  45416d:	fld    DWORD PTR [eax]
  45416f:	add    BYTE PTR [ebx+0x18],bh
  454172:	(bad)  
  454173:	aas    
  454174:	sti    
  454175:	xlat   BYTE PTR ds:[ebx]
  454176:	add    BYTE PTR [eax],al
  454178:	sti    
  454179:	xlat   BYTE PTR ds:[ebx]
  45417a:	add    BYTE PTR [eax],al
  45417c:	daa    
  45417d:	cld    
  45417e:	adc    al,BYTE PTR [eax+0xb]
  454181:	fadd   DWORD PTR [eax]
  454183:	add    bl,bh
  454185:	xlat   BYTE PTR ds:[ebx]
  454186:	add    BYTE PTR [eax+0x40077065],al
  45418c:	retf   
  45418d:	xlat   BYTE PTR ds:[ebx]
  45418e:	add    BYTE PTR [eax],al
  454190:	retf   
  454191:	xlat   BYTE PTR ds:[ebx]
  454192:	add    BYTE PTR [eax],ah
  454194:	dec    edi
  454195:	inc    esi
  454196:	sbb    BYTE PTR [eax-0x45],al
  454199:	xlat   BYTE PTR ds:[ebx]
  45419a:	add    BYTE PTR [eax],al
  45419c:	retf   
  45419d:	mov    ebp,DWORD PTR [edi+0x255360c9]
  4541a3:	inc    eax
  4541a4:	mov    ebx,0x5ea100d7
  4541a9:	adc    al,0xbf
  4541ab:	sbb    ecx,DWORD PTR [ecx+0x27]
  4541ae:	aas    
  4541af:	inc    eax
  4541b0:	stos   DWORD PTR es:[edi],eax
  4541b1:	pop    es
  4541b2:	(bad)  
  4541b3:	mov    ch,0xb
  4541b5:	mov    edi,0x7136ada8
  4541ba:	push   0x40
	...
  4541cf:	add    BYTE PTR [ebx-0x4f],bl
  4541d2:	in     eax,dx
  4541d3:	and    eax,0x4f7eeea6
  4541d8:	bound  eax,QWORD PTR [edx]
  4541da:	add    BYTE PTR [eax+0xa],0x5b
  4541de:	(bad)  
  4541df:	xchg   ebp,eax
  4541e0:	mov    bl,dl
  4541e2:	repz mov WORD PTR [edx+0x34],?
  4541e6:	pop    DWORD PTR [eax+0x22]
  4541e9:	inc    ebp
  4541ea:	mov    eax,ds:0x13571e44
  4541ef:	(bad)
  4541f3:	inc    eax
  4541f4:	mov    esp,0xfca6c3d1
  4541f9:	add    al,0x48
  4541fb:	pop    ds
  4541fc:	(bad)  
  4541fd:	call   0x8be81544
  454202:	xor    al,0xe0
  454204:	out    0x69,al
  454206:	jge    0x4541d1
  454208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  454209:	push   ss
  45420a:	nop
  45420b:	test   al,0xa3
  45420d:	les    esi,FWORD PTR [ebp+0x6b]
  454210:	xchg   edi,eax
  454211:	xchg   ebx,eax
  454212:	cmp    eax,DWORD PTR [ebp+0x7462b0ed]
  454218:	mov    al,ds:0x4864e6c
  45421d:	sub    cl,BYTE PTR [esi-0x57653605]
  454223:	push   ecx
  454224:	and    DWORD PTR [ecx+0x57],esp
  454227:	outs   dx,BYTE PTR ds:[esi]
  454228:	sar    DWORD PTR [edx+esi*2-0x7e038ad7],0x1e
  454230:	fmul   DWORD PTR es:[edi+ecx*1]
	...
  454248:	or     BYTE PTR [ecx-0x4a3eef62],bh
  45424e:	inc    eax
  45424f:	cli    
  454250:	push   ds
  454251:	xlat   BYTE PTR ds:[ebx]
  454252:	xchg   ebx,eax
  454253:	int3   
  454254:	xchg   ecx,eax
  454255:	jecxz  0x4542be
  454257:	loope  0x454281
  454259:	push   esi
  45425a:	xchg   edi,eax
  45425c:	daa    
  45425d:	push   ebp
  45425e:	ds mov edi,0xa69472f3
  454264:	ret    0x61a9
  454267:	mov    ds:0xed7851c,eax
  45426c:	pop    esi
  45426d:	and    eax,0x29ef7e82
  454272:	dec    edx
  454273:	dec    eax
  454274:	scas   eax,DWORD PTR es:[edi]
  454275:	enter  0xdbc2,0xfd
  454279:	cmp    edi,DWORD PTR cs:[ebx]
  45427c:	xchg   edi,eax
  45427d:	pop    eax
  45427e:	mov    al,0xe5
  454280:	mov    cl,0xb5
  454282:	xchg   ebx,eax
  454283:	fstp   QWORD PTR [edi+0x7955377d]
  454289:	fnstenv [edx-0x6b]
  45428c:	shr    BYTE PTR [esi],1
  45428e:	xchg   edi,eax
  45428f:	(bad)  
  454290:	(bad)  
  454291:	mov    BYTE PTR [ecx+0x23],cl
  454294:	and    ah,BYTE PTR ds:0xf845873d
  45429a:	cwde   
  45429b:	jbe    0x454276
  45429d:	cs jae 0x4542fb
  4542a0:	addr16 sub al,0x61
  4542a3:	jp     0x4542be
  4542a5:	repnz inc ecx
  4542a7:	mov    ?,edx
  4542a9:	test   DWORD PTR [edi],eax
  4542ab:	mov    ch,0x0
	...
  4542bd:	add    BYTE PTR [eax],al
  4542bf:	add    al,al
  4542c1:	mov    al,ds:0xfae256b5
  4542c6:	fwait
  4542c7:	dec    edx
  4542c8:	stc    
  4542c9:	popa   
  4542ca:	or     BYTE PTR [edx+0x3fc82760],cl
  4542d0:	outs   dx,DWORD PTR ds:[esi]
  4542d1:	add    al,0xe8
  4542d3:	add    esp,DWORD PTR [edx-0x27]
  4542d6:	sbb    al,0x47
  4542d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4542d9:	pushf  
  4542da:	adc    al,0x47
  4542dc:	sahf   
  4542dd:	pushf  
  4542de:	sub    al,0x47
  4542e0:	test   eax,0x583698c9
  4542e5:	mov    ds:0xdf56f34b,al
  4542ea:	mov    al,cs:0xdfa1c99a
  4542f0:	dec    eax
  4542f1:	stos   BYTE PTR es:[edi],al
  4542f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4542f3:	xchg   ch,dl
  4542f5:	cli    
  4542f6:	fld    DWORD PTR [eax+0x502ac98f]
  4542fc:	ds hlt 
  4542fe:	add    BYTE PTR [esi+0xa],ah
  454301:	loop   0x454291
  454303:	push   ebp
  454304:	jae    0x4542cf
  454306:	mov    bh,0x3
  454308:	sbb    DWORD PTR [ebp+0x1f],0xa535950f
  45430f:	stos   DWORD PTR es:[edi],eax
  454310:	inc    esp
  454311:	leave  
  454312:	daa    
  454313:	stos   BYTE PTR es:[edi],al
  454314:	hlt    
  454315:	repnz add BYTE PTR [ebp+0x1],al
  454319:	xchg   DWORD PTR [ebp+0x3674ebf6],esi
  45431f:	fidiv  DWORD PTR [edx+0x4d]
  454322:	inc    ebx
  454323:	and    eax,DWORD PTR [eax]
	...
  454335:	add    BYTE PTR [eax],al
  454337:	add    BYTE PTR [ebx-0x47a9726a],bh
  45433d:	test   al,0x36
  45433f:	stos   DWORD PTR es:[edi],eax
  454340:	xchg   ebx,eax
  454341:	mov    es,edi
  454343:	or     dl,bl
  454345:	jmp    0xc636:0xa5e5ad6d
  45434c:	mov    ebp,0xaa1ce023
  454351:	dec    edi
  454352:	lea    edi,[eax+edi*2-0x6e]
  454356:	ss jnp 0x4542f3
  454359:	sub    al,0x3a
  45435b:	fsub   QWORD PTR [ebp-0x1b70f263]
  454361:	inc    eax
  454362:	ss daa 
  454364:	mov    ecx,0x9b008d42
  454369:	cmp    eax,0x55217817
  45436e:	ss add eax,0x65e3477d
  454374:	cld    
  454375:	les    ebp,FWORD PTR [edi]
  454377:	mov    BYTE PTR [ebx+eax*1],ah
  45437a:	mov    BYTE PTR ss:[edx-0x31703fdf],bh
  454381:	sub    al,0x75
  454383:	fstp   TBYTE PTR [eax+esi*1-0x3fffe9ca]
  45438a:	sub    edi,0xffffffb3
  45438d:	imul   edi,DWORD PTR [esp+edx*8+0x4],0xffffffc5
  454392:	xor    eax,0xe866310d
  454397:	and    BYTE PTR [ebx+0x56eae8],bh
	...
  4543ad:	add    BYTE PTR [eax],al
  4543af:	add    dh,bh
  4543b1:	mov    dl,0x35
  4543b3:	dec    esp
  4543b4:	add    bh,BYTE PTR [edx]
  4543b6:	fld    QWORD PTR [eax]
  4543b8:	out    0x7f,eax
  4543ba:	jb     0x454402
  4543bc:	jmp    0x4543e6
  4543be:	inc    esp
  4543bf:	ds test al,0x78
  4543c2:	hlt    
  4543c3:	retf   
  4543c4:	push   0x48367a1
  4543c9:	ins    DWORD PTR es:[edi],dx
  4543ca:	cmp    BYTE PTR ds:0x193af6aa,0x71
  4543d1:	adc    BYTE PTR ds:0x9d1c3a43,0x3c
  4543d8:	sbb    al,BYTE PTR ds:0x937938d0
  4543de:	xchg   DWORD PTR [eax+0x3bc6090b],edi
  4543e4:	out    0x3,eax
  4543e6:	pop    ecx
  4543e7:	or     BYTE PTR [eax+0x4e],ah
  4543ea:	jmp    0x277c1d2
  4543ef:	cmp    ecx,DWORD PTR [ebp-0x43bdcba0]
  4543f5:	inc    ecx
  4543f6:	cwde   
  4543f7:	jne    0x4543c5
  4543f9:	push   ss
  4543fa:	pop    ds
  4543fb:	cmp    cl,al
  4543fd:	mov    WORD PTR [edx],ss
  4543ff:	shr    BYTE PTR [eax+0x18],cl
  454402:	xor    ebp,esi
  454404:	add    ch,BYTE PTR [ebx+ebx*2+0x39]
  454408:	sbb    eax,0xecc0af53
  45440d:	adc    eax,0x3e2d8294
  454412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  454413:	xor    al,BYTE PTR [eax]
	...
  454425:	add    BYTE PTR [eax],al
  454427:	add    BYTE PTR [ecx-0x5c],ch
  45442a:	mov    al,0x11
  45442c:	sbb    al,0xae
  45442e:	pop    DWORD PTR [edx+eax*8+0x42]
  454432:	adc    DWORD PTR [esi+ebp*4],ebp
  454435:	inc    esp
  454436:	fisubr DWORD PTR ds:0x533dcfad
  45443c:	aad    0x1a
  45443e:	push   0x25
  454440:	hlt    
  454441:	xchg   ebx,eax
  454442:	cli    
  454443:	mov    ds:0xc2533062,eax
  454448:	xlat   BYTE PTR ds:[ebx]
  454449:	stos   DWORD PTR es:[edi],eax
  45444a:	push   ebp
  45444b:	mov    esi,0x8867fe6c
  454450:	test   al,0xef
  454452:	xchg   ecx,eax
  454453:	xor    al,0xfd
  454455:	loopne 0x4544d2
  454457:	and    bl,BYTE PTR [edx-0x1a]
  45445a:	mov    bl,0x5c
  45445c:	sar    BYTE PTR ds:0x7ef5877c,0x8e
  454463:	jne    0x4544d8
  454465:	push   esp
  454466:	push   ss
  454467:	(bad)  
  454468:	cmc    
  454469:	dec    di
  45446b:	enter  0x3d66,0xab
  45446f:	fcomp  DWORD PTR [eax+0x70]
  454472:	add    al,BYTE PTR [eax]
  454474:	bound  esi,QWORD PTR [edx+edi*2+0x40]
  454478:	bound  esi,QWORD PTR [eax+0x2]
  45447b:	add    BYTE PTR [edx+0x5c],ah
  45447e:	int3   
  45447f:	inc    eax
  454480:	bound  ecx,QWORD PTR [edi]
  454482:	int3   
  454483:	inc    eax
  454484:	bound  esi,QWORD PTR [eax+0x2]
  454487:	add    BYTE PTR [edx+0x35],ah
  45448a:	mov    ds:0x42,eax
	...
  45449f:	add    BYTE PTR [edx+0x70],ah
  4544a2:	add    al,BYTE PTR [eax]
  4544a4:	bound  esi,QWORD PTR [eax+0x2]
  4544a7:	add    BYTE PTR [edx+0x70],ah
  4544aa:	add    al,BYTE PTR [eax]
  4544ac:	bound  eax,QWORD PTR [edx+eiz*4]
  4544af:	inc    edx
  4544b0:	bound  esi,QWORD PTR [eax+0x2]
  4544b3:	add    BYTE PTR [edx+0x70],ah
  4544b6:	add    al,BYTE PTR [eax]
  4544b8:	bound  esi,QWORD PTR [eax+0x2]
  4544bb:	add    BYTE PTR [edx-0x46],ah
  4544be:	mov    eax,ds:0x2706242
  4544c3:	add    BYTE PTR [edx+0x70],ah
  4544c6:	add    al,BYTE PTR [eax]
  4544c8:	bound  esi,QWORD PTR [eax+0x2]
  4544cb:	add    BYTE PTR [edx-0x60],ah
  4544ce:	pushf  
  4544cf:	inc    edx
  4544d0:	(bad)  
  4544d1:	(bad)  
  4544d3:	add    esp,DWORD PTR [edx-0x27]
  4544d6:	out    0x3,eax
  4544d8:	(bad)  
  4544d9:	(bad)  
  4544db:	add    esp,DWORD PTR [edx-0x27]
  4544de:	sub    eax,0xe7d9a0a6
  4544e3:	add    esp,DWORD PTR [edx-0x27]
  4544e6:	out    0x3,eax
  4544e8:	(bad)  
  4544e9:	(bad)  
  4544eb:	add    esp,DWORD PTR [edx-0x27]
  4544ee:	inc    ebx
  4544ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4544f0:	mov    al,ds:0x6203e7d9
  4544f5:	(bad)  
  4544f7:	add    esp,DWORD PTR [edx-0x27]
  4544fa:	out    0x3,eax
  4544fc:	(bad)  
  4544fd:	(bad)  [ecx-0x18265f5b]
  454503:	add    eax,DWORD PTR [eax]
	...
  454515:	add    BYTE PTR [eax],al
  454517:	add    BYTE PTR [edx-0x27],ah
  45451a:	out    0x3,eax
  45451c:	(bad)  
  45451d:	(bad)  
  45451f:	add    esp,DWORD PTR [edx-0x27]
  454522:	ret    0xa0a4
  454525:	(bad)  
  454527:	add    esp,DWORD PTR [edx-0x27]
  45452a:	out    0x3,eax
  45452c:	(bad)  
  45452d:	(bad)  
  45452f:	add    esp,DWORD PTR [edx-0x27]
  454532:	retf   
  454533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  454534:	and    cl,bl
  454536:	out    0x3,eax
  454538:	(bad)  
  454539:	(bad)  
  45453b:	add    esp,DWORD PTR [edx-0x27]
  45453e:	out    0x3,eax
  454540:	(bad)  
  454541:	fnstenv [ecx-0x5c]
  454544:	and    cl,bl
  454546:	out    0x3,eax
  454548:	(bad)  
  454549:	(bad)  
  45454b:	add    esp,DWORD PTR [edx-0x27]
  45454e:	out    0x3,eax
  454550:	(bad)  
  454551:	(bad)  
  454553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  454554:	and    cl,bl
  454556:	out    0x3,eax
  454558:	(bad)  
  454559:	(bad)  
  45455b:	add    esp,DWORD PTR [edx-0x27]
  45455e:	add    cl,ch
  454560:	popa   
  454561:	fld    DWORD PTR [eax]
  454563:	mov    al,ds:0xe9011ac5
  454568:	popa   
  454569:	fld    DWORD PTR [eax]
  45456b:	jmp    0xe9461ed1
  454570:	popa   
  454571:	fld    DWORD PTR [eax]
  454573:	pushf  
  454574:	cli    
  454575:	pop    ss
  454576:	add    ecx,ebp
  454578:	popa   
  454579:	fld    DWORD PTR [eax]
  45457b:	jmp    0x454580
	...
  454590:	popa   
  454591:	fld    DWORD PTR [eax]
  454593:	jmp    0xd3461ef9
  454598:	cli    
  454599:	pop    ss
  45459a:	add    ecx,ebp
  45459c:	popa   
  45459d:	fld    DWORD PTR [eax]
  45459f:	jmp    0xe9461f05
  4545a4:	popa   
  4545a5:	fld    DWORD PTR [eax]
  4545a7:	push   es
  4545a8:	mov    ebx,0x61e90117
  4545ad:	fld    DWORD PTR [eax]
  4545af:	jmp    0xe9461f15
  4545b4:	popa   
  4545b5:	fld    DWORD PTR [eax]
  4545b7:	xor    BYTE PTR [ebx+0x61e90117],bh
  4545bd:	fld    DWORD PTR [eax]
  4545bf:	jmp    0xe9461f25
  4545c4:	popa   
  4545c5:	fld    DWORD PTR [eax]
  4545c7:	cmp    al,0x51
  4545c9:	pop    ss
  4545ca:	add    ecx,ebp
  4545cc:	popa   
  4545cd:	fld    DWORD PTR [eax]
  4545cf:	jmp    0xe9461f35
  4545d4:	popa   
  4545d5:	fld    DWORD PTR [eax]
  4545d7:	retf   0x1735
  4545da:	add    ecx,ebp
  4545dc:	popa   
  4545dd:	fld    DWORD PTR [eax]
  4545df:	jmp    0xe9461f45
  4545e4:	popa   
  4545e5:	fld    DWORD PTR [eax]
  4545e7:	dec    edx
  4545e8:	or     dl,BYTE PTR [edi]
  4545ea:	add    DWORD PTR [eax],eax
  4545ec:	jnp    0x4545c6
  4545ee:	add    BYTE PTR [eax],al
  4545f0:	mov    ebx,eax
	...
  454606:	add    BYTE PTR [eax],al
  454608:	mov    ebx,eax
  45460a:	add    BYTE PTR [eax],al
  45460c:	jge    0x45461a
  45460e:	inc    ebx
  45460f:	add    BYTE PTR [ebx-0x28],bh
  454612:	add    BYTE PTR [eax],al
  454614:	dec    ebx
  454615:	fadd   DWORD PTR [eax]
  454617:	add    BYTE PTR [ebx-0x28],cl
  45461a:	add    BYTE PTR [eax],al
  45461c:	pop    esi
  45461d:	add    al,BYTE PTR [ebx+0x0]
  454620:	cmp    ebx,eax
  454622:	add    BYTE PTR [eax],al
  454624:	dec    ebx
  454625:	fadd   DWORD PTR [eax]
  454627:	add    BYTE PTR [ebx-0x28],cl
  45462a:	add    BYTE PTR [eax],al
  45462c:	jg     0x454630
  45462e:	inc    ebx
  45462f:	add    BYTE PTR [ebx],bh
  454631:	fadd   DWORD PTR [eax]
  454633:	add    BYTE PTR [ebx],cl
  454635:	fadd   DWORD PTR [eax]
  454637:	add    BYTE PTR [ebx],cl
  454639:	fadd   DWORD PTR [eax]
  45463b:	add    BYTE PTR [edi-0x4ffbcff],bl
  454641:	xlat   BYTE PTR ds:[ebx]
  454642:	add    BYTE PTR [eax],al
  454644:	or     ebx,eax
  454646:	add    BYTE PTR [eax],al
  454648:	or     ebx,eax
  45464a:	add    BYTE PTR [eax],al
  45464c:	dec    ebx
  45464d:	or     eax,DWORD PTR [ebx+0x0]
  454650:	sti    
  454651:	xlat   BYTE PTR ds:[ebx]
  454652:	add    BYTE PTR [eax],al
  454654:	retf   
  454655:	xlat   BYTE PTR ds:[ebx]
  454656:	add    BYTE PTR [eax],al
  454658:	retf   
  454659:	xlat   BYTE PTR ds:[ebx]
  45465a:	add    BYTE PTR [eax],al
  45465c:	out    dx,al
  45465d:	jmp    0xd80046a1
  454662:	add    BYTE PTR [eax],al
  454664:	retf   
  454665:	xlat   BYTE PTR ds:[ebx]
  454666:	add    BYTE PTR [eax],al
  454668:	retf   
  454669:	xlat   BYTE PTR ds:[ebx]
	...
  45467e:	add    BYTE PTR [eax],al
  454680:	cld    
  454681:	jmp    0xd80046c5
  454686:	add    BYTE PTR [eax],al
  454688:	mov    edx,edi
  45468a:	add    BYTE PTR [eax],al
  45468c:	bound  esi,QWORD PTR [edx+0x2]
  45468f:	add    BYTE PTR [edx-0x42],ah
  454692:	cmovno esp,DWORD PTR [edx+0x72]
  454696:	add    al,BYTE PTR [eax]
  454698:	bound  esi,QWORD PTR [edx+0x2]
  45469b:	add    BYTE PTR [edx+0x72],ah
  45469e:	add    al,BYTE PTR [eax]
  4546a0:	bound  esi,QWORD PTR [ecx+0x13]
  4546a3:	inc    ecx
  4546a4:	bound  esi,QWORD PTR [edx+0x2]
  4546a7:	add    BYTE PTR [edx+0x70],ah
  4546aa:	add    al,BYTE PTR [eax]
  4546ac:	bound  esi,QWORD PTR [eax+0x2]
  4546af:	add    BYTE PTR [edx+0x11],ah
  4546b2:	adc    BYTE PTR [ecx+0x62],al
  4546b5:	jo     0x4546b9
  4546b7:	add    BYTE PTR [edx+0x70],ah
  4546ba:	add    al,BYTE PTR [eax]
  4546bc:	bound  esi,QWORD PTR [eax+0x2]
  4546bf:	add    BYTE PTR [edx+0x5],ah
  4546c2:	adc    BYTE PTR [ecx+0x62],al
  4546c5:	jo     0x4546c9
  4546c7:	add    BYTE PTR [edx+0x70],ah
  4546ca:	add    al,BYTE PTR [eax]
  4546cc:	bound  esi,QWORD PTR [eax+0x2]
  4546cf:	add    BYTE PTR [edx-0x45],ah
  4546d2:	sbb    BYTE PTR [ecx+0x62],al
  4546d5:	jo     0x4546d9
  4546d7:	add    BYTE PTR [edx+0x70],ah
  4546da:	add    al,BYTE PTR [eax]
  4546dc:	bound  esi,QWORD PTR [eax+0x2]
  4546df:	add    BYTE PTR [edx-0x80],ah
  4546e2:	push   cs
  4546e3:	inc    ecx
	...
  4546f8:	bound  esi,QWORD PTR [eax+0x2]
  4546fb:	add    BYTE PTR [edx+0x70],ah
  4546fe:	add    al,BYTE PTR [eax]
  454700:	bound  esi,QWORD PTR [eax+0x2]
  454703:	add    BYTE PTR [edx+0x9],ah
  454706:	sbb    DWORD PTR [ecx+0x62],eax
  454709:	jo     0x45470d
  45470b:	add    BYTE PTR [edx+0x70],ah
  45470e:	add    al,BYTE PTR [eax]
  454710:	bound  esi,QWORD PTR [eax+0x2]
  454713:	add    BYTE PTR [edx-0x43],ah
  454716:	sbb    BYTE PTR [ecx+0x62],al
  454719:	(bad)  
  45471b:	add    esp,DWORD PTR [edx-0x27]
  45471e:	out    0x3,eax
  454720:	(bad)  
  454721:	(bad)  
  454723:	add    esp,DWORD PTR [edx-0x27]
  454726:	xor    dh,BYTE PTR [ebx+0x3e7d923]
  45472c:	(bad)  
  45472d:	(bad)  
  45472f:	add    esp,DWORD PTR [edx-0x27]
  454732:	out    0x3,eax
  454734:	(bad)  
  454735:	fstp   DWORD PTR [esi-0x1826dc50]
  45473b:	add    esp,DWORD PTR [edx-0x27]
  45473e:	out    0x3,eax
  454740:	(bad)  
  454741:	(bad)  
  454743:	add    esp,DWORD PTR [edx-0x27]
  454746:	bound  ebp,QWORD PTR [ebx]
  454748:	mov    al,ds:0x6203e7d9
  45474d:	(bad)  
  45474f:	add    esp,DWORD PTR [edx-0x27]
  454752:	pop    es
  454753:	xchg   ebx,eax
  454754:	mov    ds:0xa27bd7d9,al
  454759:	fxch   st(7)
  45475b:	xchg   edx,eax
	...
  454770:	mov    ds:0xa27befd9,al
  454775:	(bad)  
  454777:	xchg   edx,eax
  454778:	mov    ds:0xa292cbd9,al
  45477d:	fnstcw WORD PTR [ebx+0x1bd9a292]
  454783:	xchg   ebx,eax
  454784:	mov    ds:0xa2931bd9,al
  454789:	(bad)  [ebx]
  45478b:	xchg   ebx,eax
  45478c:	mov    ds:0x2292bbd9,al
  454791:	fnstcw WORD PTR [ebx-0x4426dd6e]
  454797:	xchg   edx,eax
  454798:	and    bl,cl
  45479a:	iret   
  45479b:	xchg   edx,eax
  45479c:	and    bl,cl
  45479e:	arpl   WORD PTR [edx-0x6d9c26de],dx
  4547a4:	and    bl,cl
  4547a6:	add    BYTE PTR [ebp-0x30],bl
  4547a9:	sbb    BYTE PTR [ecx],al
  4547ab:	dec    ebp
  4547ac:	rcr    BYTE PTR [eax],1
  4547ae:	add    DWORD PTR [ecx-0x10],edx
  4547b1:	sbb    BYTE PTR [ecx],al
  4547b3:	push   ebp
  4547b4:	lock sbb BYTE PTR [ecx],al
  4547b7:	push   ebp
  4547b8:	lock sbb BYTE PTR [ecx],al
  4547bb:	and    eax,esi
  4547bd:	sbb    BYTE PTR [ecx],al
  4547bf:	sbb    eax,edx
  4547c1:	sbb    BYTE PTR [ecx],al
  4547c3:	sbb    eax,0x10118d0
  4547c8:	rcr    BYTE PTR [eax],1
  4547ca:	add    ecx,edi
  4547cc:	rcr    DWORD PTR [eax],cl
  4547ce:	add    DWORD PTR [ebp-0x56fee621],esp
	...
  4547e8:	xlat   BYTE PTR ds:[ebx]
  4547e9:	sbb    DWORD PTR [ecx],eax
  4547eb:	lods   eax,DWORD PTR ds:[esi]
  4547ec:	iret   
  4547ed:	sbb    DWORD PTR [ecx],eax
  4547ef:	mov    eax,ds:0xb50119c7
  4547f4:	mov    edi,0xb7990119
  4547f9:	sbb    DWORD PTR [ecx],eax
  4547fb:	popf   
  4547fc:	scas   eax,DWORD PTR es:[edi]
  4547fd:	sbb    DWORD PTR [ecx],eax
  4547ff:	xchg   ecx,eax
  454800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  454801:	sbb    DWORD PTR [ecx],eax
  454803:	lds    ebx,FWORD PTR [edi-0x6876fee7]
  454809:	sbb    DWORD PTR [ecx],eax
  45480b:	lea    ecx,[edi-0x787efee7]
  454811:	sbb    DWORD PTR [ecx],eax
  454813:	jmp    0x9e462179
  454818:	scas   al,BYTE PTR es:[edi]
  454819:	rcl    DWORD PTR [edi+0xd961e9],1
  45481f:	jmp    0xe9462185
  454824:	popa   
  454825:	fld    DWORD PTR [eax]
  454827:	jmp    0xe946218d
  45482c:	popa   
  45482d:	fld    DWORD PTR [eax]
  45482f:	jmp    0x462195
  454834:	retf   
  454835:	fadd   QWORD PTR [eax]
  454837:	add    bl,cl
  454839:	fadd   QWORD PTR [eax]
  45483b:	add    BYTE PTR [ebx-0x44ffff24],bh
  454841:	fadd   QWORD PTR [eax]
  454843:	add    BYTE PTR [ebx-0x74ffff24],cl
  454849:	fadd   QWORD PTR [eax]
	...
  45485f:	add    BYTE PTR [ebx-0x24],bh
  454862:	add    BYTE PTR [eax],al
  454864:	jnp    0x454842
  454866:	add    BYTE PTR [eax],al
  454868:	mov    ebx,esp
  45486a:	add    BYTE PTR [eax],al
  45486c:	mov    ebx,esp
  45486e:	add    BYTE PTR [eax],al
  454870:	jnp    0x45484e
  454872:	add    BYTE PTR [eax],al
  454874:	jnp    0x454852
  454876:	add    BYTE PTR [eax],al
  454878:	dec    ebx
  454879:	fadd   QWORD PTR [eax]
  45487b:	add    BYTE PTR [ebx-0x24],cl
  45487e:	add    BYTE PTR [eax],al
  454880:	cmp    ebx,esp
  454882:	add    BYTE PTR [eax],al
  454884:	cmp    ebx,esp
  454886:	add    BYTE PTR [eax],al
  454888:	dec    ebx
  454889:	fadd   QWORD PTR [eax]
  45488b:	add    BYTE PTR [ebx-0x24],cl
  45488e:	add    BYTE PTR [eax],al
  454890:	cmp    ebx,esp
  454892:	add    BYTE PTR [eax],al
  454894:	cmp    ebx,esp
  454896:	add    BYTE PTR [eax],al
  454898:	or     ebx,esp
  45489a:	add    BYTE PTR [eax],al
  45489c:	or     ebx,esp
  45489e:	add    BYTE PTR [eax],al
  4548a0:	sti    
  4548a1:	fild   DWORD PTR [eax]
  4548a3:	add    bl,bh
  4548a5:	fild   DWORD PTR [eax]
  4548a7:	add    BYTE PTR [ebx],cl
  4548a9:	fadd   QWORD PTR [eax]
  4548ab:	add    BYTE PTR [ebx],cl
  4548ad:	fadd   QWORD PTR [eax]
  4548af:	add    bl,bh
  4548b1:	fild   DWORD PTR [eax]
  4548b3:	add    bl,bh
  4548b5:	fild   DWORD PTR [eax]
  4548b7:	add    bl,cl
  4548b9:	fild   DWORD PTR [eax]
  4548bb:	add    bl,cl
  4548bd:	fild   DWORD PTR [eax]
  4548bf:	add    BYTE PTR [edx+0x72],ah
  4548c2:	add    al,BYTE PTR [eax]
	...
  4548d8:	bound  esi,QWORD PTR [edx+0x2]
  4548db:	add    BYTE PTR [edx+0x72],ah
  4548de:	add    al,BYTE PTR [eax]
  4548e0:	bound  esi,QWORD PTR [edx+0x2]
  4548e3:	add    BYTE PTR [edx+0x72],ah
  4548e6:	add    al,BYTE PTR [eax]
  4548e8:	bound  esi,QWORD PTR [edx+0x2]
  4548eb:	add    BYTE PTR [edx+0x72],ah
  4548ee:	add    al,BYTE PTR [eax]
  4548f0:	bound  esi,QWORD PTR [edx+0x2]
  4548f3:	add    BYTE PTR [edx+0x72],ah
  4548f6:	add    al,BYTE PTR [eax]
  4548f8:	bound  esi,QWORD PTR [edx+0x2]
  4548fb:	add    BYTE PTR [edx+0x72],ah
  4548fe:	add    al,BYTE PTR [eax]
  454900:	bound  esi,QWORD PTR [edx+0x2]
  454903:	add    BYTE PTR [edx+0x72],ah
  454906:	add    al,BYTE PTR [eax]
  454908:	bound  esi,QWORD PTR [edx+0x2]
  45490b:	add    BYTE PTR [edx+0x70],ah
  45490e:	add    al,BYTE PTR [eax]
  454910:	bound  esi,QWORD PTR [eax+0x2]
  454913:	add    BYTE PTR [edx+0x70],ah
  454916:	add    al,BYTE PTR [eax]
  454918:	bound  esi,QWORD PTR [eax+0x2]
  45491b:	add    BYTE PTR [edx+0x70],ah
  45491e:	add    al,BYTE PTR [eax]
  454920:	bound  esi,QWORD PTR [eax+0x2]
  454923:	add    BYTE PTR [edx+0x70],ah
  454926:	add    al,BYTE PTR [eax]
  454928:	bound  esi,QWORD PTR [eax+0x2]
  45492b:	add    BYTE PTR [edx+0x70],ah
  45492e:	add    al,BYTE PTR [eax]
  454930:	bound  esi,QWORD PTR [eax+0x2]
  454933:	add    BYTE PTR [edx+0x70],ah
  454936:	add    al,BYTE PTR [eax]
  454938:	bound  esi,QWORD PTR [eax+0x2]
	...
  45494f:	add    BYTE PTR [edx+0x70],ah
  454952:	add    al,BYTE PTR [eax]
  454954:	bound  esi,QWORD PTR [eax+0x2]
  454957:	add    BYTE PTR [edx+0x70],ah
  45495a:	add    al,BYTE PTR [eax]
  45495c:	bound  esi,QWORD PTR [eax+0x2]
  45495f:	add    BYTE PTR [edx-0x27],ah
  454962:	out    0x3,eax
  454964:	(bad)  
  454965:	(bad)  
  454967:	add    esp,DWORD PTR [edx-0x27]
  45496a:	out    0x3,eax
  45496c:	(bad)  
  45496d:	(bad)  
  45496f:	add    esp,DWORD PTR [edx-0x27]
  454972:	out    0x3,eax
  454974:	(bad)  
  454975:	(bad)  
  454977:	add    esp,DWORD PTR [edx-0x27]
  45497a:	out    0x3,eax
  45497c:	(bad)  
  45497d:	(bad)  
  45497f:	add    esp,DWORD PTR [edx-0x27]
  454982:	out    0x3,eax
  454984:	(bad)  
  454985:	(bad)  
  454987:	add    esp,DWORD PTR [edx-0x27]
  45498a:	out    0x3,eax
  45498c:	(bad)  
  45498d:	(bad)  
  45498f:	add    esp,DWORD PTR [edx-0x27]
  454992:	out    0x3,eax
  454994:	(bad)  
  454995:	(bad)  
  454997:	add    esp,DWORD PTR [edx-0x27]
  45499a:	out    0x3,eax
  45499c:	(bad)  
  45499d:	(bad)  
  45499f:	add    esp,DWORD PTR [edx-0x27]
  4549a2:	out    0x3,eax
  4549a4:	(bad)  
  4549a5:	(bad)  
  4549a7:	add    esp,DWORD PTR [edx-0x27]
  4549aa:	out    0x3,eax
  4549ac:	(bad)  
  4549ad:	(bad)  
  4549af:	add    esp,DWORD PTR [edx-0x27]
  4549b2:	out    0x3,eax
	...
  4549c8:	(bad)  
  4549c9:	(bad)  
  4549cb:	add    esp,DWORD PTR [edx-0x27]
  4549ce:	out    0x3,eax
  4549d0:	(bad)  
  4549d1:	(bad)  
  4549d3:	add    esp,DWORD PTR [edx-0x27]
  4549d6:	out    0x3,eax
  4549d8:	(bad)  
  4549d9:	(bad)  
  4549db:	add    esp,DWORD PTR [edx-0x27]
  4549de:	out    0x3,eax
  4549e0:	(bad)  
  4549e1:	(bad)  
  4549e3:	add    esp,DWORD PTR [edx-0x27]
  4549e6:	out    0x3,eax
  4549e8:	(bad)  
  4549e9:	(bad)  
  4549eb:	add    esp,DWORD PTR [edx-0x27]
  4549ee:	add    cl,ch
  4549f0:	popa   
  4549f1:	fld    DWORD PTR [eax]
  4549f3:	jmp    0xe9462359
  4549f8:	popa   
  4549f9:	fld    DWORD PTR [eax]
  4549fb:	jmp    0xe9462361
  454a00:	popa   
  454a01:	fld    DWORD PTR [eax]
  454a03:	jmp    0xe9462369
  454a08:	popa   
  454a09:	fld    DWORD PTR [eax]
  454a0b:	jmp    0xe9462371
  454a10:	popa   
  454a11:	fld    DWORD PTR [eax]
  454a13:	jmp    0xe9462379
  454a18:	popa   
  454a19:	fld    DWORD PTR [eax]
  454a1b:	jmp    0xe9462381
  454a20:	jno    0x4549fb
  454a22:	add    ch,ch
  454a24:	popa   
  454a25:	fld    DWORD PTR [eax]
  454a27:	push   ecx
  454a28:	dec    eax
  454a29:	sub    eax,0x2938
	...
  454a3e:	add    BYTE PTR [eax],al
  454a40:	cmp    BYTE PTR [ebp-0x62c7eec8],dl
  454a46:	cmp    cl,bh
  454a48:	mov    eax,DWORD PTR [ebp-0x32740ec8]
  454a4e:	cmp    ch,cl
  454a50:	and    DWORD PTR [ebp-0xa],edi
  454a53:	inc    ebp
  454a54:	pop    esi
  454a55:	fld    DWORD PTR [eax]
  454a57:	adc    eax,0x6536c184
  454a5c:	jl     0x454a97
  454a5e:	aaa    
  454a5f:	test   DWORD PTR [ecx+esi*1+0x497c8537],eax
  454a66:	aaa    
  454a67:	jne    0x454aad
  454a69:	inc    ebp
  454a6a:	aaa    
  454a6b:	lods   eax,DWORD PTR ds:[esi]
  454a6c:	cmp    al,0x95
  454a6e:	aaa    
  454a6f:	mov    ch,0x44
  454a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  454a72:	aaa    
  454a73:	lea    edi,[esi*2-0x7abb6ac9]
  454a7a:	aaa    
  454a7b:	add    BYTE PTR [edi],al
  454a7d:	mov    ah,0xfc
  454a7f:	ds pop ss
  454a81:	mov    ah,0xc
  454a83:	aas    
  454a84:	pop    ss
  454a85:	mov    ah,0x1c
  454a87:	aas    
  454a88:	pop    ss
  454a89:	mov    ah,0x2c
  454a8b:	aas    
  454a8c:	pop    es
  454a8d:	mov    ah,0x3c
  454a8f:	aas    
  454a90:	pop    ss
  454a91:	mov    ah,0x4c
  454a93:	aas    
  454a94:	xchg   edi,eax
  454a95:	mov    bl,0x5c
  454a97:	aas    
  454a98:	xchg   edi,eax
  454a99:	mov    bl,0x6c
  454a9b:	aas    
  454a9c:	inc    edi
  454a9d:	mov    ah,0x7c
  454a9f:	aas    
  454aa0:	pop    ss
  454aa1:	mov    ah,0x8c
  454aa3:	aas    
	...
  454ab8:	xlat   BYTE PTR ds:[ebx]
  454ab9:	mov    ah,0x9c
  454abb:	aas    
  454abc:	pop    ss
  454abd:	mov    ah,0xac
  454abf:	aas    
  454ac0:	inc    edi
  454ac1:	mov    ah,0xbc
  454ac3:	aas    
  454ac4:	push   edi
  454ac5:	mov    ah,0xcc
  454ac7:	aas    
  454ac8:	push   edi
  454ac9:	mov    ah,0xdc
  454acb:	aas    
  454acc:	push   edi
  454acd:	mov    ah,0xec
  454acf:	aas    
  454ad0:	mov    ebp,DWORD PTR [eax-0x27d0000a]
  454ad6:	add    BYTE PTR [eax],al
  454ad8:	ja     0x454aa2
  454ada:	cld    
  454adb:	das    
  454adc:	aaa    
  454add:	enter  0x300c,0x67
  454ae1:	lds    ebx,FWORD PTR [eax+esi*1]
  454ae4:	ja     0x454aab
  454ae6:	sub    al,0x30
  454ae8:	ja     0x454aaf
  454aea:	cmp    al,0x30
  454aec:	ja     0x454ab3
  454aee:	dec    esp
  454aef:	xor    BYTE PTR [edi+0x77305cc5],ah
  454af5:	lds    ebp,FWORD PTR [eax+esi*1-0x49]
  454af9:	enter  0x307c,0xb7
  454afd:	enter  0x308c,0xa7
  454b01:	enter  0x309c,0xb7
  454b05:	enter  0x30ac,0x62
  454b09:	cs xor al,ah
  454b0c:	xor    al,BYTE PTR [esi+0x32]
  454b0f:	aam    0x32
  454b11:	dec    esi
  454b12:	xor    ah,ah
  454b14:	xor    al,BYTE PTR [esi]
  454b16:	xor    dh,ah
  454b18:	xor    ch,BYTE PTR [esi+0x2d]
  454b1b:	add    al,0x0
	...
  454b2d:	add    BYTE PTR [eax],al
  454b2f:	add    BYTE PTR [ebx-0x6cebd25a],dl
  454b35:	into   
  454b36:	sub    esp,DWORD PTR [ebx+edx*4]
  454b39:	out    0x2b,al
  454b3b:	xor    al,0x93
  454b3d:	cs sub eax,0x2d467344
  454b43:	push   esp
  454b44:	jae    0x454ad4
  454b46:	sub    eax,0x2d467364
  454b4b:	je     0x454bc0
  454b4d:	out    dx,al
  454b4e:	sub    al,0x84
  454b50:	push   ebx
  454b51:	es sub eax,0x2d0e5394
  454b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  454b58:	push   ebx
  454b59:	es sub eax,0x2cae53b4
  454b5f:	les    esi,FWORD PTR [ebx]
  454b61:	(bad)  
  454b62:	sub    al,0xd4
  454b64:	xor    ecx,esi
  454b66:	sub    al,0xe4
  454b68:	xor    eax,DWORD PTR [esi+0x6e33f432]
  454b6e:	xor    BYTE PTR [eax+edx*4],al
  454b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  454b72:	xor    BYTE PTR [eax+edx*4],dl
  454b75:	int3   
  454b76:	xor    ah,BYTE PTR [eax+edx*4]
  454b79:	in     al,0x32
  454b7b:	xor    al,0x90
  454b7d:	lods   al,BYTE PTR ds:[esi]
  454b7e:	xor    al,BYTE PTR [eax+esi*2-0x3c]
  454b82:	xor    dl,BYTE PTR [eax+esi*2+0xc]
  454b86:	xor    esp,DWORD PTR [eax+esi*2-0x3c]
  454b8a:	xor    dh,BYTE PTR [eax+esi*2-0x14]
  454b8e:	xor    al,BYTE PTR [eax+edx*2+0x943324]
	...
  454ba5:	add    BYTE PTR [eax],al
  454ba7:	add    BYTE PTR [eax-0x27],dl
  454baa:	inc    ebx
  454bab:	xor    al,dh
  454bad:	(bad)  
  454bae:	dec    ebx
  454baf:	xor    cl,dh
  454bb1:	(bad)  
  454bb2:	mov    ds:0xabc82632,eax
  454bb7:	xor    cl,BYTE PTR [esi]
  454bb9:	enter  0x3283,0x6
  454bbd:	enter  0x326b,0xee
  454bc1:	(bad)  
  454bc2:	jecxz  0x454bf4
  454bc4:	data16 (bad) 
  454bc6:	retf   
  454bc7:	xor    BYTE PTR [esi-0x3a],ch
  454bca:	add    esi,DWORD PTR [ecx]
  454bcc:	xchg   dh,al
  454bce:	or     esi,DWORD PTR [ecx]
  454bd0:	mov    es,esi
  454bd2:	mov    ds:0xabc62630,eax
  454bd7:	xor    BYTE PTR [esi],cl
  454bd9:	mov    bl,0x30
  454bdc:	inc    esi
  454bdd:	(bad)  
  454bde:	stos   DWORD PTR es:[edi],eax
  454bdf:	xor    BYTE PTR [esi],ch
  454be1:	(bad)  
  454be2:	arpl   WORD PTR [ecx],si
  454be4:	out    0xc6,al
  454be6:	dec    ebx
  454be7:	xor    esi,ebp
  454be9:	mov    BYTE PTR [ebx+0x31],0xc6
  454bed:	(bad)  
  454bee:	dec    ebx
  454bef:	xor    esi,ecx
  454bf1:	(bad)  
  454bf2:	and    esi,DWORD PTR [ecx]
  454bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  454bf5:	(bad)  
  454bf6:	sub    esi,DWORD PTR [ecx]
  454bf8:	mov    es,esi
  454bfa:	add    esi,DWORD PTR [ecx]
  454bfc:	xchg   dh,al
  454bfe:	jmp    0x454c30
  454c00:	outs   dx,BYTE PTR ds:[esi]
  454c01:	(bad)  
  454c02:	jecxz  0x454c33
  454c04:	(bad)
  454c08:	outs   dx,BYTE PTR ds:[esi]
  454c09:	lds    eax,FWORD PTR [ebx]
  454c0b:	xor    BYTE PTR [eax],al
	...
  454c1d:	add    BYTE PTR [eax],al
  454c1f:	add    BYTE PTR [esi-0x71cff43b],al
  454c25:	lds    esp,FWORD PTR [ebx]
  454c27:	xor    BYTE PTR [esi-0x71cfd43b],ah
  454c2d:	lds    eax,FWORD PTR [ebx+0x30]
  454c30:	mov    ch,0x2b
  454c33:	xor    BYTE PTR [esi+0x4d6d00c5],ch
  454c39:	push   ebp
  454c3a:	sub    eax,0x2d654555
  454c3f:	dec    ebp
  454c40:	cmp    eax,0x35552d35
  454c45:	inc    ebp
  454c46:	sub    eax,0x2d954dad
  454c4b:	mov    ch,0x45
  454c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  454c4e:	sub    eax,0x2d753d8d
  454c53:	jne    0x454c8a
  454c55:	test   DWORD PTR ds:0x2bd58ced,ebp
  454c5b:	aad    0x84
  454c5d:	in     eax,0x2b
  454c5f:	or     eax,0x152bb57d
  454c64:	jne    0x454c2b
  454c66:	sub    ebp,DWORD PTR [ebp-0x4ad3ea74]
  454c6c:	test   BYTE PTR ds:0xf57ccd2c,ah
  454c72:	sub    esi,DWORD PTR [ebp+0x6d2c0574]
  454c78:	dec    esp
  454c79:	push   ebp
  454c7a:	sub    al,0x55
  454c7c:	inc    esp
  454c7d:	gs sub al,0x4d
  454c80:	cmp    al,0x35
  454c82:	sub    al,0x55
	...
  454c98:	xor    al,0x45
  454c9a:	sub    al,0x2d
  454c9c:	dec    esp
  454c9d:	xchg   ebp,eax
  454c9e:	sub    al,0x35
  454ca0:	inc    esp
  454ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  454ca2:	sub    al,0xd
  454ca4:	cmp    al,0x75
  454ca6:	sub    al,0xf5
  454ca8:	aaa    
  454ca9:	test   DWORD PTR [ebp*8-0x2ad12271],ebp
  454cb0:	xchg   ebp,ecx
  454cb2:	cs or  eax,0x152ebd68
  454cb8:	push   0x582d2ead
  454cbd:	sbb    eax,0xd58352f
  454cc2:	das    
  454cc3:	add    BYTE PTR [edi+0x6f365cd3],bl
  454cc9:	shr    DWORD PTR [esi+esi*1-0x71],cl
  454ccd:	sar    DWORD PTR [esi+esi*1-0x51],cl
  454cd1:	ror    DWORD PTR [esi+esi*1+0x369cd39f],cl
  454cd8:	scas   eax,DWORD PTR es:[edi]
  454cd9:	shl    DWORD PTR [edi+esi*1+0x37c4d4c7],cl
  454ce0:	(bad)  
  454ce1:	aam    0xd4
  454ce3:	aaa    
  454ce4:	xlat   BYTE PTR ds:[ebx]
  454ce5:	aam    0xe4
  454ce7:	aaa    
  454ce8:	addr16 aam 0xf4
  454ceb:	aaa    
  454cec:	(bad)  
  454ced:	aam    0x4
  454cef:	cmp    BYTE PTR [edi+0x773814d4],ah
  454cf5:	aad    0x24
  454cf7:	cmp    BYTE PTR [edi-0x2b],ah
  454cfa:	xor    al,0x38
	...
  454d10:	pop    es
  454d11:	aad    0x44
  454d13:	cmp    BYTE PTR [edi],al
  454d15:	aad    0x54
  454d17:	cmp    BYTE PTR [edi-0x18c79b2c],dl
  454d1d:	aam    0x74
  454d1f:	cmp    BYTE PTR [edi],al
  454d21:	aad    0x84
  454d23:	cmp    BYTE PTR [edi],ah
  454d25:	aad    0x94
  454d27:	cmp    BYTE PTR [edi],dh
  454d29:	aad    0xa4
  454d2b:	cmp    BYTE PTR [edi],ah
  454d2d:	aad    0xb4
  454d2f:	cmp    BYTE PTR [edi-0x2b],al
  454d32:	les    edi,FWORD PTR [eax]
  454d34:	inc    edi
  454d35:	aad    0xd4
  454d37:	cmp    BYTE PTR [edi-0x2b],dl
  454d3a:	in     al,0x38
  454d3c:	addr16 aam 0xf4
  454d3f:	cmp    BYTE PTR [edi-0x2b],al
  454d42:	add    al,0x39
  454d44:	daa    
  454d45:	aad    0x14
  454d47:	cmp    DWORD PTR [edi-0x2a],esi
  454d4a:	and    al,0x39
  454d4c:	addr16 (bad) 
  454d4e:	xor    al,0x39
  454d50:	bound  edi,QWORD PTR [esi-0x3984b3ed]
  454d56:	adc    ebx,DWORD PTR [ebx+ebp*2+0xe]
  454d5a:	adc    al,0x6c
  454d5c:	imul   esi,DWORD PTR [esi-0x1a483ed],0x14
  454d63:	mov    WORD PTR [ebx+0x26],ds
  454d66:	adc    eax,0x150e4b9c
  454d6b:	lods   al,BYTE PTR ds:[esi]
  454d6c:	dec    ebx
  454d6d:	push   ss
  454d6e:	adc    eax,0x153e3bbc
  454d73:	int3   
	...
  454d88:	cmp    eax,DWORD PTR [esi+0x15]
  454d8b:	fsubr  QWORD PTR [ebx]
  454d8d:	dec    esi
  454d8e:	adc    eax,0x14f62bec
  454d93:	cld    
  454d94:	fwait
  454d95:	jle    0x454dab
  454d97:	or     al,0x98
  454d99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  454d9a:	adc    al,0x1c
  454d9c:	mov    dh,cl
  454d9e:	push   ss
  454d9f:	sub    al,0x88
  454da1:	(bad)  
  454da2:	push   ss
  454da3:	cmp    al,0x78
  454da5:	ds adc al,0x4c
  454da8:	js     0x454df0
  454daa:	adc    al,0x5c
  454dac:	push   0x686c148e
  454db1:	ss adc al,0x7c
  454db4:	pop    eax
  454db5:	(bad)  
  454db6:	adc    ecx,DWORD PTR [eax+ebx*2+0x489c1426]
  454dbd:	push   cs
  454dbe:	adc    al,0xac
  454dc0:	dec    eax
  454dc1:	push   ss
  454dc2:	adc    al,0xbc
  454dc4:	cmp    BYTE PTR [esi-0x39c733ed],bh
  454dca:	adc    ebx,esp
  454dcc:	sub    dh,cl
  454dce:	adc    ebp,esp
  454dd0:	sub    BYTE PTR [esi+0x15],dh
  454dd3:	cld    
  454dd4:	cwde   
  454dd5:	jl     0x454dee
  454dd7:	or     al,0x99
  454dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  454dda:	pop    ss
  454ddb:	sbb    al,0x89
  454ddd:	(bad)  [ebx]
  454ddf:	sbb    eax,0x1d13b276
  454de4:	jle    0x454d98
  454de6:	sbb    ebx,DWORD PTR ds:0x1d23b2a6
	...
  454e00:	mov    ?,WORD PTR [edx-0x4d49e2b5]
  454e06:	xor    ebx,DWORD PTR ds:0x1d5bb29e
  454e0c:	out    0xb2,al
  454e0e:	inc    ebx
  454e0f:	sbb    eax,0x1d4bb2ee
  454e14:	mov    dh,0xb2
  454e16:	push   ebx
  454e17:	sbb    eax,0x1d9bb2be
  454e1c:	es mov bl,0xa3
  454e1f:	sbb    eax,0x1d8bb30e
  454e24:	div    BYTE PTR [edx-0x4d21e28d]
  454e2a:	fistp  DWORD PTR [edi]
  454e2c:	data16 mov ch,0xc3
  454e2f:	pop    ds
  454e30:	outs   dx,BYTE PTR ds:[esi]
  454e31:	mov    ch,0xb
  454e33:	and    BYTE PTR [esi-0x4b],dh
  454e36:	adc    esp,DWORD PTR [eax]
  454e38:	jle    0x454def
  454e3a:	fwait
  454e3b:	pop    ds
  454e3c:	es mov ch,0xa3
  454e3f:	pop    ds
  454e40:	push   cs
  454e41:	mov    ch,0xcb
  454e43:	pop    ds
  454e44:	ss mov ch,0xb3
  454e47:	pop    ds
  454e48:	push   ds
  454e49:	mov    ch,0x5b
  454e4b:	and    dh,ah
  454e4d:	mov    ch,0x43
  454e4f:	and    dh,ch
  454e51:	mov    ch,0x4b
  454e53:	and    BYTE PTR [esi-0x41dfac4b],dh
  454e59:	mov    ch,0x1b
  454e5b:	and    BYTE PTR [esi-0x71dfdc4b],ah
  454e61:	mov    ch,0xb
  454e63:	and    BYTE PTR [eax],al
	...
  454e75:	add    BYTE PTR [eax],al
  454e77:	add    BYTE PTR [esi-0x4b],dh
  454e7a:	repz pop ds
  454e7c:	pop    esi
  454e7d:	mov    ch,0x0
  454e7f:	in     eax,0x74
  454e81:	in     eax,0x33
  454e83:	int    0x6c
  454e85:	aad    0x33
  454e87:	adc    eax,0x1d33c565
  454e8c:	pop    ebp
  454e8d:	mov    ch,0x33
  454e8f:	and    eax,0x2d342555
  454e94:	dec    ebp
  454e95:	adc    eax,0x5455534
  454e9a:	xor    al,0x3d
  454e9c:	jge    0x454e93
  454e9e:	xor    esp,DWORD PTR [ebp+0x74]
  454ea1:	gs xor al,0x4d
  454ea4:	ins    BYTE PTR es:[edi],dx
  454ea5:	push   ebp
  454ea6:	xor    al,0x55
  454ea8:	fs inc ebp
  454eaa:	xor    al,0x5d
  454eac:	pop    esp
  454ead:	xor    eax,0xa554a534
  454eb2:	xor    al,0xad
  454eb4:	dec    esp
  454eb5:	xchg   ebp,eax
  454eb6:	xor    al,0x95
  454eb8:	inc    esp
  454eb9:	test   DWORD PTR [edi*2-0x1acb8a84],esi
  454ec0:	and    ebp,0x36
  454ec3:	int    0x83
  454ec5:	aad    0x36
  454ec7:	adc    eax,0x1d36c580
  454ecc:	xor    BYTE PTR [ebp+0x2583a536],0x37
  454ed3:	lods   eax,DWORD PTR ds:[esi]
  454ed4:	adc    DWORD PTR ds:0x583d537,0x37
  454edb:	mov    ebp,0x0
	...
  454ef0:	inc    ebx
  454ef1:	cmc    
  454ef2:	ss gs inc ebx
  454ef5:	gs aaa 
  454ef7:	dec    ebp
  454ef8:	inc    ebx
  454ef9:	push   ebp
  454efa:	aaa    
  454efb:	push   ebp
  454efc:	inc    ebx
  454efd:	inc    ebp
  454efe:	aaa    
  454eff:	pop    ebp
  454f00:	inc    ebx
  454f01:	xor    eax,0xa5432537
  454f06:	aaa    
  454f07:	sub    eax,0x379543
  454f0c:	dec    edi
  454f0d:	mov    eax,0xba5f3ee4
  454f12:	hlt    
  454f13:	ds aas 
  454f15:	mov    edx,0xba1f3f04
  454f1a:	adc    al,0x3f
  454f1c:	outs   dx,DWORD PTR ds:[esi]
  454f1d:	aam    0x24
  454f1f:	aas    
  454f20:	pop    edi
  454f21:	aam    0x34
  454f23:	aas    
  454f24:	jg     0x454efa
  454f26:	inc    esp
  454f27:	aas    
  454f28:	jg     0x454efe
  454f2a:	push   esp
  454f2b:	aas    
  454f2c:	(bad)  
  454f2d:	aam    0x64
  454f2f:	aas    
  454f30:	pop    edi
  454f31:	aam    0x74
  454f33:	aas    
  454f34:	jg     0x454f0a
  454f36:	test   BYTE PTR [edi],bh
  454f38:	lahf   
  454f39:	aam    0x94
  454f3b:	aas    
  454f3c:	scas   eax,DWORD PTR es:[edi]
  454f3d:	aam    0xa4
  454f3f:	aas    
  454f40:	lahf   
  454f41:	aam    0xe4
  454f43:	aas    
  454f44:	iret   
  454f45:	aam    0x0
  454f47:	add    bl,bh
  454f49:	js     0x454f41
  454f4b:	call   FWORD PTR [edi]
  454f4d:	fld    DWORD PTR [eax]
  454f4f:	add    bh,al
  454f51:	enter  0x2ffc,0x0
	...
  454f65:	add    BYTE PTR [eax],al
  454f67:	add    BYTE PTR [edi-0x58cff338],dh
  454f6d:	enter  0x301c,0x67
  454f71:	int    0x2c
  454f73:	xor    BYTE PTR [edi],al
  454f75:	leave  
  454f76:	cmp    al,0x30
  454f78:	test   eax,0xc8a7304c
  454f7e:	pop    esp
  454f7f:	xor    bh,ah
  454f81:	enter  0x306c,0x7
  454f85:	int    0x7c
  454f87:	xor    BYTE PTR [edi],dh
  454f89:	int    0x8c
  454f8b:	xor    bh,ah
  454f8d:	int    0x9c
  454f8f:	xor    BYTE PTR [edi],ah
  454f91:	int    0xac
  454f93:	xor    BYTE PTR [edi-0x33],al
  454f96:	add    BYTE PTR [eax],al
  454f98:	bound  eax,QWORD PTR [edx-0x6192002e]
  454f9e:	add    al,BYTE PTR [eax]
  454fa0:	bound  ebx,QWORD PTR [edx+0x16]
  454fa3:	jl     0x454f43
  454fa5:	adc    ah,BYTE PTR [ecx]
  454fa7:	xchg   esp,eax
  454fa8:	xchg   esi,eax
  454fa9:	sbb    ah,BYTE PTR [ecx]
  454fab:	lods   al,BYTE PTR ds:[esi]
  454fac:	mov    ?,WORD PTR [esi+0x3685c415]
  454fb2:	pop    ss
  454fb3:	aam    0x7d
  454fb5:	sahf   
  454fb6:	pop    ss
  454fb7:	in     al,0x75
  454fb9:	xchg   esi,eax
  454fba:	pop    ss
  454fbb:	hlt    
  454fbc:	ins    DWORD PTR es:[edi],dx
  454fbd:	add    BYTE PTR [edx+0x9a6200],0x0
  454fc4:	bound  edi,QWORD PTR [esi+0x12]
  454fc7:	add    al,0x52
  454fc9:	xchg   esi,eax
  454fca:	adc    dl,BYTE PTR [eax+eax*1]
	...
  454fdd:	add    BYTE PTR [eax],al
  454fdf:	add    BYTE PTR [edx-0x22],dl
  454fe2:	or     al,0x24
  454fe4:	push   edx
  454fe5:	xchg   esi,eax
  454fe6:	adc    dh,BYTE PTR [edx+esi*1]
  454fe9:	mov    esi,0xb632440c
  454fee:	or     al,0x54
  454ff0:	xor    bl,dh
  454ff2:	or     al,0x64
  454ff4:	xor    dh,BYTE PTR [esi+0x12]
  454ff7:	je     0x454f8b
  454ff9:	(bad)  
  454ffa:	adc    DWORD PTR [edx+edx*4-0x6d6bedea],eax
  455001:	push   ds
  455002:	adc    ah,BYTE PTR [edx+edx*4+0x72b41256]
  455009:	mov    esi,0xb672c411
  45500e:	adc    esp,edx
  455010:	jb     0x455030
  455012:	adc    ah,ah
  455014:	jb     0x454fcc
  455016:	adc    esp,esi
  455018:	push   edx
  455019:	jle    0x455028
  45501b:	add    al,0x53
  45501d:	xchg   esi,eax
  45501e:	or     eax,0xbde5314
  455023:	and    al,0x53
  455025:	(bad)  
  455027:	adc    al,0x36
  455029:	stos   BYTE PTR es:[edi],al
  45502a:	fwait
  45502b:	adc    al,0x1e
  45502d:	stos   BYTE PTR es:[edi],al
  45502e:	mov    bl,0x14
  455030:	push   ss
  455031:	stos   BYTE PTR es:[edi],al
  455032:	jnp    0x455048
  455034:	(bad)  
  455035:	test   eax,0xa8d61473
  45503a:	pop    ebx
  45503b:	adc    al,0xde
  45503d:	test   al,0x53
  45503f:	adc    al,0xf6
  455041:	test   al,0x3b
  455043:	adc    al,0x0
	...
  455055:	add    BYTE PTR [eax],al
  455057:	add    dh,bh
  455059:	test   al,0x93
  45505b:	adc    esi,esi
  45505d:	test   al,0x9b
  45505f:	adc    ebx,DWORD PTR [esi]
  455061:	test   eax,0xa91613b3
  455066:	mov    ebx,0xb3a93e13
  45506b:	adc    edx,DWORD PTR [esi]
  45506d:	test   eax,0xa75e11db
  455072:	rcl    DWORD PTR [ecx],cl
  455074:	jbe    0x45501d
  455076:	sti    
  455077:	adc    DWORD PTR [esi],edi
  455079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45507a:	rcl    DWORD PTR [ecx],cl
  45507c:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  45507e:	sbb    edx,DWORD PTR [edx]
  455080:	sahf   
  455081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  455082:	xor    edx,DWORD PTR [edx]
  455084:	xchg   esi,eax
  455085:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  455086:	sti    
  455087:	adc    DWORD PTR [esi-0x59],edi
  45508a:	repz adc DWORD PTR [esi-0x59],edx
  45508e:	pop    ebx
  45508f:	adc    bl,dh
  455091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  455092:	push   ebx
  455093:	adc    dh,dh
  455095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  455096:	cmp    edx,DWORD PTR [edx]
  455098:	(bad)  
  455099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45509a:	xchg   ebx,eax
  45509b:	adc    dh,dh
  45509d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45509e:	sbb    edx,DWORD PTR [edx]
  4550a0:	sahf   
  4550a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4550a2:	xor    edx,DWORD PTR [edx]
  4550a4:	xchg   esi,eax
  4550a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4550a6:	cmp    edx,DWORD PTR [edx]
  4550a8:	mov    esi,0x961233a7
  4550ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4550ae:	fist   DWORD PTR [eax]
  4550b0:	pop    esi
  4550b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4550b2:	add    ch,bl
  4550b4:	jb     0x455083
  4550b6:	xor    DWORD PTR ds:0xdd31bd73,eax
	...
  4550d0:	push   edx
  4550d1:	lods   eax,DWORD PTR ds:[esi]
  4550d2:	xor    DWORD PTR [ebp-0x42cde2ae],esp
  4550d8:	push   edx
  4550d9:	or     eax,0xfd528532
  4550de:	xor    DWORD PTR [ebp+0x72],edi
  4550e1:	in     eax,dx
  4550e2:	xor    DWORD PTR [ebp+0x73],esp
  4550e5:	pop    ebp
  4550e6:	xor    bl,BYTE PTR [ebp+0x73]
  4550e9:	dec    ebp
  4550ea:	xor    al,BYTE PTR [ebp+0x73]
  4550ed:	cmp    eax,0x2d529d32
  4550f2:	xor    ah,BYTE PTR [ebp-0x42cd62ae]
  4550f8:	push   edx
  4550f9:	lea    esi,[edx]
  4550fb:	lds    edx,FWORD PTR [edx+0x7d]
  4550fe:	xor    bh,BYTE PTR [ebp-0x1acd928e]
  455104:	ins    DWORD PTR es:[edi],dx
  455105:	(bad)  [ebx*8+0x52ccd75]
  45510c:	push   0xffffffbd
  45510e:	sub    al,0xdd
  455110:	push   ebp
  455111:	lods   eax,DWORD PTR ds:[esi]
  455112:	sub    al,0x25
  455114:	pop    edx
  455115:	sbb    eax,0xd4a3d2d
  45511a:	sub    eax,0x2cfd4a05
  45511f:	std    
  455120:	jne    0x45510f
  455122:	sub    al,0x65
  455124:	ins    DWORD PTR es:[edi],dx
  455125:	pop    ebp
  455126:	sub    eax,0x2d4d755d
  45512b:	inc    ebp
  45512c:	ins    DWORD PTR es:[edi],dx
  45512d:	cmp    eax,0x2d559d2d
  455132:	sub    eax,0x25
	...
  455147:	add    BYTE PTR [ebp-0x63],cl
  45514a:	sub    eax,0x2d8d553d
  45514f:	inc    ebp
  455150:	dec    ebp
  455151:	jge    0x455180
  455153:	add    BYTE PTR [edi-0x36],bl
  455156:	in     al,dx
  455157:	xor    al,0x7f
  455159:	retf   0x34fc
  45515c:	scas   eax,DWORD PTR es:[edi]
  45515d:	retf   0x350c
  455160:	pop    edi
  455161:	retf   0x351c
  455164:	lahf   
  455165:	retf   0x352c
  455168:	mov    edi,0xaf353cca
  45516d:	retf   0x354c
  455170:	(bad)  
  455172:	pop    esp
  455173:	xor    eax,0x356cc7df
  455178:	mov    edi,0xaf357cc7
  45517d:	(bad)  
  45517e:	mov    WORD PTR ds:0x359cc79f,?
  455184:	(bad)  
  455186:	lods   al,BYTE PTR ds:[esi]
  455187:	xor    eax,0x35bccaff
  45518c:	out    dx,eax
  45518d:	retf   0x35cc
  455190:	pop    ds
  455191:	retf   
  455192:	fdiv   QWORD PTR ds:0x35eccadf
  455198:	dec    edx
  45519a:	cld    
  45519b:	xor    eax,0x360ccb2f
  4551a0:	pop    edi
  4551a1:	retf   
  4551a2:	sbb    al,0x36
  4551a4:	pop    ds
  4551a5:	retf   
  4551a6:	sub    al,0x36
  4551a8:	aas    
  4551a9:	retf   
  4551aa:	cmp    al,0x36
	...
  4551c0:	das    
  4551c1:	retf   
  4551c2:	dec    esp
  4551c3:	ss pop edi
  4551c5:	retf   
  4551c6:	pop    esp
  4551c7:	ss (bad) 
  4551ca:	ins    BYTE PTR es:[edi],dx
  4551cb:	ss aas 
  4551cd:	retf   
  4551ce:	jl     0x455206
  4551d0:	das    
  4551d1:	retf   
  4551d2:	mov    WORD PTR [esi],?
  4551d4:	pop    ds
  4551d5:	retf   
  4551d6:	pushf  
  4551d7:	ss (bad) 
  4551da:	lods   al,BYTE PTR ds:[esi]
  4551db:	ss jg  0x4551a9
  4551de:	mov    esp,0x12ae6236
  4551e3:	aam    0x6c
  4551e5:	push   ss
  4551e6:	adc    esp,esp
  4551e8:	push   esp
  4551e9:	scas   al,BYTE PTR es:[edi]
  4551ea:	adc    dh,ah
  4551ec:	dec    esp
  4551ed:	jbe    0x455202
  4551ef:	add    al,0x55
  4551f1:	mov    ss,WORD PTR [ebx]
  4551f3:	adc    al,0x4d
  4551f5:	(bad)  
  4551f6:	adc    DWORD PTR [esi*1+0x2d34138e],esp
  4551fd:	adc    eax,DWORD PTR ss:[ebp+esi*1+0x2e]
  455202:	adc    edi,DWORD PTR [eax-0x3fede1d3]
  455208:	xchg   ebp,eax
  455209:	mov    esi,0xbe8dc811
  45520e:	adc    eax,edx
  455210:	xchg   ebp,eax
  455211:	into   
  455212:	adc    eax,ebx
  455214:	lea    esi,[edx+0x13]
  455217:	in     al,dx
  455218:	jne    0x455294
  45521a:	adc    esi,esp
  45521c:	ins    DWORD PTR es:[edi],dx
  45521d:	sbb    BYTE PTR [edx],0xa4
  455220:	push   0x7a
  455222:	adc    eax,0xc
	...
  455237:	add    BYTE PTR [ebx+0x6a],ch
  45523a:	adc    eax,0x13e25b14
  45523f:	sbb    al,0x5b
  455241:	retf   0x2413
  455244:	dec    ebx
  455245:	jb     0x45525c
  455247:	sub    al,0x4b
  455249:	push   0x15
  45524b:	xor    al,0x3b
  45524d:	ret    0x3c13
  455250:	cmp    ebp,DWORD PTR [edx-0x4dd4bbed]
  455256:	adc    ecx,DWORD PTR [ebx+ebp*1-0x56]
  45525a:	adc    edx,DWORD PTR [ebx+ebx*4-0x1e]
  45525e:	adc    ebx,DWORD PTR [ebx+ebx*4-0x36]
  455262:	adc    esp,DWORD PTR [ebx+ecx*4+0x72]
  455266:	adc    eax,0x156a8b6c
  45526b:	je     0x4552e8
  45526d:	fldenv [edi+0x1c]
  455270:	ss mov dl,0x6f
  455273:	sbb    al,0xe6
  455275:	mov    cl,0x77
  455277:	sbb    al,0xd6
  455279:	mov    cl,0x6f
  45527b:	sbb    al,0xf6
  45527d:	mov    cl,0x87
  45527f:	sbb    al,0xf6
  455281:	mov    cl,0x8f
  455283:	sbb    al,0xc6
  455285:	mov    cl,0x77
  455287:	sbb    al,0xb6
  455289:	mov    cl,0x6f
  45528b:	sbb    al,0x42
  45528d:	mov    bl,0xc3
  45528f:	sbb    eax,0x1d97b34a
  455294:	(bad)  
  455295:	mov    dl,0x8f
  455297:	sbb    eax,0x1d67b2ee
	...
  4552b0:	out    0xb3,al
  4552b2:	push   edi
  4552b3:	sbb    eax,0x1d5fb3e6
  4552b8:	div    BYTE PTR [ebx-0x4c19e2b9]
  4552be:	aas    
  4552bf:	sbb    eax,0x1e97b406
  4552c4:	push   es
  4552c5:	mov    ah,0x9f
  4552c7:	push   ds
  4552c8:	div    BYTE PTR [ebx-0x4c19e159]
  4552ce:	lahf   
  4552cf:	push   ds
  4552d0:	es mov ah,0x97
  4552d3:	push   ds
  4552d4:	cmp    dh,BYTE PTR [ebx-0x4cfde26d]
  4552da:	arpl   WORD PTR [eax],bx
  4552dc:	fisubr DWORD PTR [ebp-0x522de7ad]
  4552e2:	jae    0x4552fc
  4552e4:	fisubr DWORD PTR [ebp-0x5239e7b1]
  4552ea:	push   edi
  4552eb:	sbb    BYTE PTR [esi+0x16184fad],dh
  4552f1:	scas   al,BYTE PTR es:[edi]
  4552f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4552f3:	sbb    BYTE PTR [esi],dl
  4552f5:	scas   al,BYTE PTR es:[edi]
  4552f6:	scas   eax,DWORD PTR es:[edi]
  4552f7:	sbb    dh,cl
  4552f9:	lods   eax,DWORD PTR ds:[esi]
  4552fa:	add    cl,ah
  4552fc:	ins    BYTE PTR es:[edi],dx
  4552fd:	aad    0x33
  4552ff:	fst    DWORD PTR [ebp+ebx*8+0x33]
  455303:	add    DWORD PTR [ebp-0x3b],ecx
  455306:	xor    ecx,DWORD PTR [ecx]
  455308:	push   ebp
  455309:	int    0x33
  45530b:	add    DWORD PTR [ebp-0x4b],ecx
  45530e:	xor    ebx,DWORD PTR [ecx]
  455310:	jne    0x4552cf
  455312:	xor    eax,DWORD PTR [ecx]
	...
  455328:	ins    DWORD PTR es:[edi],dx
  455329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  45532a:	xor    ebp,DWORD PTR [ecx-0x5ecc528c]
  455330:	ins    BYTE PTR es:[edi],dx
  455331:	in     eax,0x33
  455333:	imul   edx,DWORD PTR [ebp-0x13],0x414d7133
  45533a:	xor    al,0x4d
  45533c:	push   ebp
  45533d:	sub    DWORD PTR [ebx*2+0x4d34314d],esi
  455344:	jne    0x4552df
  455346:	xor    al,0x2d
  455348:	ins    DWORD PTR es:[edi],dx
  455349:	mov    eax,ds:0xf56a9134
  45534e:	xor    eax,0x35fd6a79
  455353:	jno    0x4553af
  455355:	in     eax,0x35
  455357:	imul   ebx,DWORD PTR [edx-0x13],0xd9b1e935
  45535e:	add    BYTE PTR ds:0x6500d95e,dh
  455364:	jno    0x4553ab
  455366:	xor    DWORD PTR [ecx-0x6eceb28f],ecx
  45536c:	jno    0x4553a3
  45536e:	xor    DWORD PTR [ecx+0x71],edi
  455371:	stc    
  455372:	xor    al,BYTE PTR [ebp+0x54]
  455375:	add    DWORD PTR [ebx],esi
  455377:	adc    eax,0x1532e94c
  45537c:	push   esp
  45537d:	icebp  
  45537e:	xor    dl,BYTE PTR ds:0x7533594c
  455384:	ja     0x4553d7
  455386:	xor    eax,DWORD PTR [eax]
  455388:	aas    
  455389:	les    esp,FWORD PTR [eax+0x32]
	...
  45539f:	add    BYTE PTR [edi],ah
  4553a1:	les    ebp,FWORD PTR [eax-0x4f3be0ce]
  4553a7:	xor    dh,BYTE PTR [edi-0x3c]
  4553aa:	mov    eax,0xc0c3ff32
  4553af:	xor    al,BYTE PTR [edi+0x7f32c8c4]
  4553b5:	(bad)  
  4553b6:	shl    BYTE PTR [edx],1
  4553b8:	push   edi
  4553b9:	(bad)  
  4553ba:	fdiv   DWORD PTR [edx]
  4553bc:	aas    
  4553bd:	les    eax,FWORD PTR [ebx+esi*1]
  4553c0:	add    esp,0xc
  4553c3:	xor    ebx,DWORD PTR [ebx-0x3c]
  4553c6:	push   esp
  4553c7:	xor    esp,ebx
  4553c9:	les    ebx,FWORD PTR [ebx+esi*1+0x1398b]
  4553d0:	mov    bh,0xd9
  4553d2:	add    BYTE PTR [eax],al
  4553d4:	jae    0x45539e
  4553d6:	or     al,0x37
  4553d8:	sub    ecx,edx
  4553da:	adc    al,0x37
  4553dc:	xor    ecx,edx
  4553de:	sbb    al,0x37
  4553e0:	or     ecx,edx
  4553e2:	and    al,0x37
  4553e4:	adc    ecx,edx
  4553e6:	mov    WORD PTR [edi],?
  4553e8:	fs leave 
  4553ea:	lahf   
  4553eb:	cmp    BYTE PTR [edx],al
  4553ed:	into   
  4553ee:	sar    DWORD PTR [eax],cl
  4553f0:	dec    ebx
  4553f1:	into   
  4553f2:	sub    al,0x39
  4553f4:	mov    cs,esi
  4553f6:	inc    eax
  4553f7:	cmp    bh,BYTE PTR [esi-0x31]
  4553fa:	mov    edx,0x77d01e3a
  4553ff:	cmp    eax,esi
  455401:	ror    DWORD PTR [ecx],1
  455403:	cmp    eax,0x0
	...
  455418:	sub    eax,0x6c3d3cd2
  45541d:	shr    BYTE PTR [esi-0x712d15c3],cl
  455423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  455425:	ret    
  455426:	mov    ebp,0xf2d623e
  45542b:	sub    DWORD PTR [ebp-0x6a79f095],ebx
  455431:	pop    esp
  455432:	push   cs
  455433:	add    BYTE PTR [edx-0x7e],ah
  455436:	xchg   edx,eax
  455437:	add    BYTE PTR [edx+0x16],ah
  45543a:	std    
  45543b:	jmp    DWORD PTR [edx-0x7e]
  45543e:	adc    al,BYTE PTR [ebx+0x60bf372]
  455444:	jo     0x455479
  455446:	adc    BYTE PTR [ebp+0x70],bl
  455449:	xchg   esi,eax
  45544a:	adc    al,al
  45544c:	push   eax
  45544d:	and    DWORD PTR [ebx],edx
  45544f:	in     eax,dx
  455450:	push   eax
  455451:	ret    
  455452:	adc    DWORD PTR [ecx],edi
  455454:	push   ecx
  455455:	inc    esi
  455456:	adc    esp,DWORD PTR [eax+0x51]
  455459:	sub    al,0x13
  45545b:	jne    0x45548e
  45545d:	pop    edx
  45545e:	adc    al,BYTE PTR [ecx]
  455460:	cs jnp 0x455469
  455463:	push   ss
  455464:	ss xchg esi,eax
  455466:	push   es
  455467:	xor    ch,BYTE PTR [esi]
  455469:	mov    eax,DWORD PTR [esi]
  45546b:	inc    ebx
  45546c:	xchg   esi,eax
  45546d:	xor    BYTE PTR [esi],al
  45546f:	popa   
  455470:	mov    fs,WORD PTR [ecx]
  455472:	adc    ecx,eax
  455474:	xchg   esi,eax
  455475:	js     0x455488
  455477:	pop    eax
  455478:	(bad)  
  455479:	pusha  
  45547a:	adc    DWORD PTR [esi+0x0],esp
	...
  45548d:	add    BYTE PTR [eax],al
  45548f:	add    BYTE PTR [edi-0x4],dh
  455492:	adc    BYTE PTR [ebx-0x7aef1591],al
  455498:	ja     0x45548a
  45549a:	adc    BYTE PTR [edi-0x5eef1991],cl
  4554a0:	push   edi
  4554a1:	push   esp
  4554a2:	adc    DWORD PTR [esi-0x7dee6cb1],esp
  4554a8:	push   esp
  4554a9:	repz add eax,DWORD PTR [esp+ecx*2+0x352c040f]
  4554b1:	and    BYTE PTR [esi],al
  4554b3:	sub    ax,0x7cd9
  4554b7:	push   cs
  4554b8:	shl    BYTE PTR [ebx-0x5bfdf1a1],0x7e
  4554bf:	push   cs
  4554c0:	fisub  DWORD PTR [ebx-0x5c29f17a]
  4554c6:	in     eax,dx
  4554c7:	sbb    ebx,DWORD PTR [ebp-0x4f]
  4554ca:	aad    0x1b
  4554cc:	xor    BYTE PTR [ecx-0x4e7be43a],0x27
  4554d3:	sbb    al,0xe
  4554d5:	mov    cl,0xcf
  4554d7:	sbb    esp,edx
  4554d9:	mov    al,0x5d
  4554db:	sbb    edx,ebp
  4554dd:	mov    al,0x85
  4554df:	sbb    ecx,esi
  4554e1:	mov    al,0x3d
  4554e3:	sbb    ecx,DWORD PTR [ebp-0x2de36f50]
  4554e9:	mov    cl,0x2a
  4554eb:	sbb    DWORD PTR [eax+0x6b18b7ae],eax
  4554f1:	stos   DWORD PTR es:[edi],eax
  4554f2:	fcom   QWORD PTR [esi]
	...
  455508:	(bad)  
  455509:	(bad)  
  45550b:	inc    ebx
  45550c:	(bad)  
  45550d:	fnstcw WORD PTR [edi+0x75d96203]
  455513:	adc    esp,DWORD PTR [eax]
  455515:	stos   BYTE PTR es:[edi],al
  455516:	and    dl,BYTE PTR [ebx]
  455518:	mov    ecx,0x9710fca7
  45551d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  45551e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  45551f:	adc    dh,BYTE PTR [ecx]
  455521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  455522:	cmc    
  455523:	adc    DWORD PTR [ebx-0x5b],ebx
  455526:	mov    ds:0x93a5970f,eax
  45552b:	adc    bl,dh
  45552d:	mov    ds:0xb01d1c7c,al
  455532:	sub    BYTE PTR [ecx],bl
  455534:	sub    DWORD PTR [esi-0x512ee6a0],0xad5519ab
  45553e:	dec    edx
  45553f:	sbb    cl,ch
  455541:	lods   eax,DWORD PTR ds:[esi]
  455542:	add    BYTE PTR [edx+0x54],dl
  455545:	sub    DWORD PTR [edi],esi
  455547:	stos   DWORD PTR es:[edi],eax
  455548:	dec    esp
  455549:	mov    eax,ds:0xbe56fa37
  45554e:	xor    eax,0x360e4f2a
  455553:	sbb    dh,BYTE PTR [edi+0x5e]
  455556:	outs   dx,BYTE PTR ss:[esi]
  455558:	outs   dx,DWORD PTR ds:[esi]
  455559:	es ss scas al,BYTE PTR es:[edi]
  45555c:	ja     0x4554ec
  45555e:	mov    gs,WORD PTR ss:[edi-0x27]
  455562:	add    cl,ch
  455564:	jno    0x45553f
  455566:	add    BYTE PTR [ebp+0x5e],bh
  455569:	fld    DWORD PTR [eax]
  45556b:	jmp    0x0:0x0
	...
  45557e:	add    BYTE PTR [eax],al
  455580:	push   ecx
  455581:	(bad)  [eax]
  455583:	adc    BYTE PTR [esi-0x43],cl
  455586:	xor    BYTE PTR [ebp-0x64cf038f],ch
  45558c:	outs   dx,BYTE PTR ds:[esi]
  45558d:	sahf   
  45558e:	xor    DWORD PTR [edx],edi
  455590:	jbe    0x455570
  455592:	das    
  455593:	stos   DWORD PTR es:[edi],eax
  455594:	jo     0x455573
  455596:	xor    al,BYTE PTR [edx+0x2ccf50]
  45559c:	push   edx
  45559d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45559e:	sub    al,0xe1
  4555a0:	pop    ebp
  4555a1:	sbb    BYTE PTR ds:0x2d1355b1,ch
  4555a7:	mov    DWORD PTR [ebp+0xa],ebp
  4555aa:	sub    eax,0x2ce76582
  4555af:	popa   
  4555b0:	jb     0x4555df
  4555b2:	sub    eax,0x2d877233
  4555b7:	adc    BYTE PTR [edx-0x7e],dl
  4555ba:	sub    eax,0x2d7165f8
  4555bf:	in     eax,0x5d
  4555c1:	(bad)  
  4555c2:	sub    edx,DWORD PTR [edx]
  4555c4:	push   ebp
  4555c5:	mov    ds:0xc86cce2b,al
  4555ca:	cs push es
  4555cc:	fs scas al,BYTE PTR es:[edi]
  4555ce:	add    BYTE PTR cs:[ecx-0x25],al
  4555d2:	popa   
  4555d3:	ss dec ebp
  4555d5:	fist   DWORD PTR [eax-0x192385ca]
  4555db:	ss pusha 
  4555dd:	fcomp  QWORD PTR [ebx-0x2c2344c9]
  4555e3:	aaa    
	...
  4555f8:	ret    
  4555f9:	fcom   QWORD PTR [edx]
  4555fb:	cmp    BYTE PTR [ebp+0x78385bcd],dl
  455601:	int    0x7b
  455603:	cmp    ch,al
  455605:	into   
  455606:	and    edi,DWORD PTR [ecx]
  455608:	js     0x4555d8
  45560a:	push   ecx
  45560b:	cmp    eax,ecx
  45560d:	iret   
  45560e:	pop    edx
  45560f:	cmp    dh,BYTE PTR [edi-0x3fc59c31]
  455615:	iret   
  455616:	xchg   esp,eax
  455617:	cmp    al,bh
  455619:	iret   
  45561a:	sar    DWORD PTR [edx],0x41
  45561d:	rcl    dh,1
  45561f:	cmp    cl,BYTE PTR [eax+edx*8-0x2efbc490]
  455626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  455627:	cmp    ecx,DWORD PTR [esi-0x2f]
  45562a:	sub    edi,DWORD PTR [edx*8+0x423c7ac1]
  455631:	ret    0x3ce8
  455634:	retw   0x3d69
  455638:	(bad)
  45563b:	cmp    eax,0x3ddecf6a
  455640:	addr16 iret 
  455642:	add    DWORD PTR [esi],edi
  455644:	push   edx
  455645:	iret   
  455646:	sbb    DWORD PTR [esi],edi
  455648:	sbb    edi,ecx
  45564a:	push   ss
  45564b:	ds es iret 
  45564e:	cmp    bh,BYTE PTR [esi]
  455650:	jmp    0xbd83cf23
  455655:	retf   
  455656:	jnp    0x455696
  455658:	test   al,0xcb
  45565a:	xchg   ebx,eax
  45565b:	add    BYTE PTR ds:[eax],al
	...
  45566e:	add    BYTE PTR [eax],al
  455670:	bound  ebx,QWORD PTR [esi+0x13]
  455673:	mov    al,0x54
  455675:	dec    edi
  455676:	adc    ecx,edx
  455678:	dec    esp
  455679:	cmp    edx,DWORD PTR [ebx]
  45567b:	add    eax,DWORD PTR [ebp-0x41]
  45567e:	adc    DWORD PTR [edx-0x2fee12c3],edx
  455684:	xor    eax,0x2dde1257
  455689:	dec    esi
  45568a:	adc    dh,dh
  45568c:	and    eax,0x62006272
  455691:	inc    esi
  455692:	std    
  455693:	jmp    DWORD PTR [edx+0x7d]
  455696:	adc    cl,BYTE PTR [ecx]
  455698:	xchg   edx,eax
  455699:	adc    BYTE PTR [edx],0x26
  45569c:	xchg   edx,eax
  45569d:	das    
  45569e:	adc    dh,BYTE PTR [esi]
  4556a0:	jb     0x455661
  4556a2:	or     al,0x57
  4556a4:	jb     0x455686
  4556a6:	or     al,0x64
  4556a8:	jb     0x45562a
  4556aa:	adc    bh,BYTE PTR [ebp+0x72]
  4556ad:	jmp    0xe897e6be
  4556b2:	or     al,0xc7
  4556b4:	push   edx
  4556b5:	test   DWORD PTR ds:0xd8c5330,ecx
  4556bb:	je     0x455710
  4556bd:	in     al,dx
  4556be:	or     edx,ebx
  4556c0:	xor    eax,DWORD PTR [edx+0x1330b80c]
  4556c6:	(bad)  
  4556c8:	xor    DWORD PTR [edx+0xf],edx
  4556cb:	xchg   edi,eax
  4556cc:	xor    DWORD PTR [edi],ecx
  4556ce:	push   cs
  4556cf:	enter  0xd691,0xd
  4556d3:	or     al,0x0
	...
  4556e5:	add    BYTE PTR [eax],al
  4556e7:	add    BYTE PTR [esi-0x69cbf163],cl
  4556ed:	jmp    0xfcd3e40a
  4556f2:	sbb    BYTE PTR [esi-0x25e75c8a],bl
  4556f8:	outs   dx,BYTE PTR ds:[esi]
  4556f9:	fstp   QWORD PTR [eax]
  4556fb:	pop    es
  4556fc:	ja     0x4556d7
  4556fe:	sbb    BYTE PTR [ecx],bl
  455700:	data16 scas al,BYTE PTR es:[edi]
  455702:	xor    bl,BYTE PTR [ecx]
  455704:	mov    ecx,0xf61949ae
  455709:	lods   eax,DWORD PTR ds:[esi]
  45570a:	mov    al,ds:0xaaf7018
  45570f:	sbb    bh,BYTE PTR [ebx]
  455711:	scas   eax,DWORD PTR es:[edi]
  455712:	sbb    eax,0x88af881a
  455717:	sbb    ebx,edi
  455719:	scas   al,BYTE PTR es:[edi]
  45571a:	fcomp  DWORD PTR [edx]
  45571c:	pop    ebp
  45571d:	mov    al,0xd8
  45571f:	sbb    dl,BYTE PTR [edx-0x19e4f350]
  455725:	scas   eax,DWORD PTR es:[edi]
  455726:	ins    BYTE PTR es:[edi],dx
  455727:	sbb    dl,BYTE PTR [ecx-0x73f42f5f]
  45572d:	mov    eax,ds:0xa1400c2e
  455732:	(bad)  
  455734:	add    DWORD PTR [ecx-0x5f58f45e],esp
  45573a:	jb     0x455747
  45573c:	jno    0x4556e0
  45573e:	mov    dl,0xc
  455740:	pop    ss
  455741:	mov    ds:0xa1f10cd4,al
  455746:	sub    al,0xc
  455748:	bound  esp,QWORD PTR [ebx+0xdd4]
	...
  45575e:	add    BYTE PTR [eax],al
  455760:	and    BYTE PTR [ebx-0x5cf6f26c],ah
  455766:	pop    edx
  455767:	or     eax,0xd71a2b3
  45576c:	fwait
  45576d:	mov    ds:0xa45b0d3f,al
  455772:	dec    BYTE PTR [esi]
  455774:	inc    esi
  455775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  455776:	cwde   
  455777:	push   cs
  455778:	in     al,0xa2
  45577a:	pop    eax
  45577b:	push   cs
  45577c:	adc    al,0xa3
  45577e:	and    cl,BYTE PTR [esi]
  455780:	dec    edi
  455781:	mov    ds:0xa5b50f97,eax
  455786:	pop    ebx
  455787:	prefetch BYTE PTR [esi-0x4d9af000]
  45578e:	xor    esi,DWORD PTR [edi+0x30341b52]
  455794:	push   ebp
  455795:	icebp  
  455796:	xor    edx,DWORD PTR [edi+0x6d]
  455799:	inc    edx
  45579a:	xor    al,0x9d
  45579c:	gs call 0x36:0xca5d9f34
  4557a4:	jo     0x4557ba
  4557a6:	aaa    
  4557a7:	push   edi
  4557a8:	push   ebx
  4557a9:	es ss jmp 0xd463141
  4557b0:	data16 fld DWORD PTR [eax]
  4557b3:	fcom   QWORD PTR [ecx+0x5]
  4557b6:	xor    DWORD PTR [eax],edx
  4557b8:	jno    0x455802
  4557ba:	xor    BYTE PTR [edi+0x6c],al
  4557bd:	jo     0x4557ec
  4557bf:	bnd je 0x45577b
  4557c2:	sub    ecx,DWORD PTR [eax+eax*1+0x0]
	...
  4557d6:	add    BYTE PTR [eax],al
  4557d8:	ins    DWORD PTR es:[edi],dx
  4557d9:	xor    ebp,DWORD PTR [ecx+ebp*4]
  4557dc:	push   ebp
  4557dd:	shr    DWORD PTR [esi],cl
  4557df:	xchg   ebp,eax
  4557e0:	pop    eax
  4557e1:	jo     0x455812
  4557e3:	jmp    0x3159:0xce2db74a
  4557ea:	cmp    DWORD PTR [esi+0x3239266e],edx
  4557f0:	pushw  0xe639
  4557f4:	pop    eax
  4557f5:	push   ds
  4557f6:	cmp    BYTE PTR [ebx+0x59],ch
  4557f9:	and    bh,BYTE PTR [eax]
  4557fb:	imul   edi,DWORD PTR es:[ebx+0x38],0x3abf693d
  455803:	push   ebx
  455804:	pop    esp
  455805:	cmp    BYTE PTR [ebx],0x22
  455808:	push   esp
  455809:	mov    ebp,0x836f4a39
  45580e:	cmp    cl,BYTE PTR [ebp-0x71cc079b]
  455814:	pop    esp
  455815:	xor    DWORD PTR [edi],0x9ac90700
  45581b:	aas    
  45581c:	dec    ebx
  45581d:	(bad)  
  45581f:	(bad)  
  455820:	mov    edi,0x120000dd
  455825:	retf   
  455826:	xor    dh,BYTE PTR [ecx]
  455828:	or     dl,0xa2
  45582b:	xor    eax,edi
  45582d:	retf   0x31c2
  455830:	sub    ebx,ecx
  455832:	jmp    0x5832:0xbcc0331
  455839:	iret   
  45583a:	mov    cl,0x32
	...
  455850:	(bad)  
  455851:	retf   
  455852:	pop    ds
  455853:	xor    ebp,esp
  455855:	int3   
  455856:	inc    ebx
  455857:	xor    ebx,DWORD PTR [edi-0x34]
  45585a:	jns    0x45588f
  45585c:	jns    0x45582b
  45585e:	sahf   
  45585f:	xor    ebx,DWORD PTR [ebx]
  455861:	int    0xc6
  455863:	xor    esi,esi
  455865:	int3   
  455866:	pop    es
  455867:	xor    al,0x9f
  455869:	int    0x4d
  45586b:	xor    al,0x63
  45586d:	shr    DWORD PTR [ebp-0x103228cc],0x34
  455874:	mov    esi,0x1e3585ce
  455879:	iret   
  45587a:	mov    ebp,0x2cf1a35
  45587f:	ss popa 
  455881:	ret    
  455882:	inc    edi
  455883:	ss jecxz 0x455845
  455886:	leave  
  455887:	ss aas 
  455889:	rcr    BYTE PTR [ecx+0x37],0x50
  45588d:	sar    ebp,0x37
  455890:	in     eax,dx
  455891:	ror    ebp,1
  455893:	cmp    DWORD PTR [eax+0x773a1ad3],ebx
  455899:	shr    DWORD PTR [edx+edi*1],cl
  45589c:	mov    eax,ds:0xfc3a71d3
  4558a1:	(bad)  
  4558a2:	and    DWORD PTR [ebx],edi
  4558a4:	bound  eax,QWORD PTR [edx+0x44893d05]
  4558aa:	add    eax,0x4ca896e
  4558af:	adc    al,0x7e
  4558b1:	call   0x4607bb
	...
  4558c6:	add    BYTE PTR [eax],al
  4558c8:	jbe    0x45589d
  4558ca:	add    eax,0x6d96f98
  4558cf:	sub    al,0x64
  4558d1:	jb     0x4558c5
  4558d3:	add    BYTE PTR [edx+0x5a],ah
  4558d6:	std    
  4558d7:	jmp    DWORD PTR [edx-0x23]
  4558da:	or     al,0x47
  4558dc:	push   edx
  4558dd:	add    cl,BYTE PTR ds:0xd3d528b
  4558e3:	aaa    
  4558e4:	xor    BYTE PTR [ebx-0x58cf9eee],dh
  4558ea:	adc    al,BYTE PTR [ecx-0x60ecf7d0]
  4558f0:	xor    BYTE PTR [edx],dh
  4558f2:	adc    edi,DWORD PTR [esi-0x20ec6570]
  4558f8:	nop
  4558f9:	dec    ebp
  4558fa:	adc    eax,DWORD PTR [ebx]
  4558fc:	xchg   ecx,eax
  4558fd:	sahf   
  4558fe:	adc    ebp,DWORD PTR [ecx+edx*4]
  455901:	scas   eax,DWORD PTR es:[edi]
  455902:	adc    DWORD PTR [ebp+0x71],edx
  455905:	iret   
  455906:	adc    DWORD PTR [ebp+0x71],ebp
  455909:	adc    eax,DWORD PTR [bx+0x1271]
  45590e:	adc    ch,BYTE PTR [ecx-0x3dedb48f]
  455914:	push   ecx
  455915:	stos   BYTE PTR es:[edi],al
  455916:	adc    ecx,esp
  455918:	push   ecx
  455919:	sbb    edx,DWORD PTR [edx]
  45591b:	add    edx,DWORD PTR [esi+0x69]
  45591e:	push   cs
  45591f:	sub    cl,BYTE PTR [esi-0x26]
  455922:	sbb    BYTE PTR [ecx+0x36],bl
  455925:	lock sbb BYTE PTR [esi-0x13e737d2],ah
	...
  455940:	sbb    WORD PTR ss:[edx+0x2f],bx
  455945:	(bad)  
  455947:	adc    eax,0x166eabba
  45594c:	or     al,0xab
  45594e:	add    al,0x16
  455950:	in     eax,0xab
  455952:	mov    ebx,0xb5a1490b
  455957:	or     al,0xa9
  455959:	lahf   
  45595a:	adc    al,0xa
  45595c:	aas    
  45595d:	lahf   
  45595e:	jb     0x45596a
  455960:	xlat   BYTE PTR ds:[ebx]
  455961:	lahf   
  455962:	ret    
  455963:	setne  BYTE PTR [ebp-0x5a65efaf]
  45596a:	push   ebp
  45596b:	adc    bh,ah
  45596d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45596e:	jle    0x45597f
  455970:	jmp    DWORD PTR [edx+edi*8+0x46a6a110]
  455977:	adc    ebp,edi
  455979:	mov    ds:0xa4210e74,al
  45597e:	out    0x23,eax
  455980:	arpl   cx,bx
  455982:	pop    edi
  455983:	add    esp,DWORD PTR [edx-0x27]
  455986:	lods   al,BYTE PTR ds:[esi]
  455987:	adc    edx,DWORD PTR [edx+ebp*4-0x5898eb54]
  45598e:	push   ebx
  45598f:	adc    DWORD PTR [ebp-0x20ee775a],ebx
  455995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  455996:	lods   al,BYTE PTR ds:[esi]
  455997:	adc    bh,BYTE PTR [ebx+0x2417d1a7]
  45599d:	lods   eax,DWORD PTR ds:[esi]
  45599e:	mov    ecx,0xd8ae2b18
  4559a3:	adc    eax,0x0
	...
  4559b8:	pop    ds
  4559b9:	stos   DWORD PTR es:[edi],eax
  4559ba:	ret    
  4559bb:	adc    eax,0x157daaec
  4559c0:	mov    bl,0xaa
  4559c2:	xor    DWORD PTR ds:0x153eaa83,edx
  4559c8:	mov    ebp,DWORD PTR [edx-0x5395e919]
  4559ce:	in     eax,0x16
  4559d0:	inc    ebx
  4559d1:	lods   al,BYTE PTR ds:[esi]
  4559d2:	add    dh,dh
  4559d4:	push   esp
  4559d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4559d6:	sub    eax,0x3823569d
  4559db:	in     al,dx
  4559dc:	imul   ebp,DWORD PTR [ebx+0x486b663a],0x3b
  4559e3:	je     0x455a40
  4559e5:	xor    BYTE PTR [ebx],bh
  4559e7:	push   ebp
  4559e8:	pop    ebx
  4559e9:	xchg   ecx,eax
  4559ea:	cmp    edx,edi
  4559ec:	push   0x68683a1b
  4559f1:	pop    ebx
  4559f2:	cmp    cl,BYTE PTR [edx+0x58]
  4559f5:	div    DWORD PTR [ecx+eax*4]
  4559f8:	push   ebp
  4559f9:	fidiv  WORD PTR [eax+ebp*2]
  4559fc:	jb     0x455a1f
  4559fe:	xor    eax,0x3588729f
  455a03:	mov    esi,0x836be72
  455a08:	push   esp
  455a09:	test   eax,0x616c8f36
  455a0e:	aaa    
  455a0f:	mov    edi,0x6235e464
  455a14:	pop    edi
  455a15:	aas    
  455a16:	xchg   BYTE PTR ss:[edi+0x7c],dl
  455a1a:	ss jmp 0x455a20
	...
  455a30:	jno    0x455a0a
  455a32:	add    BYTE PTR [ecx+0x5e],ch
  455a35:	fld    DWORD PTR [eax]
  455a37:	fdiv   QWORD PTR [ecx-0x5b]
  455a3a:	xor    BYTE PTR [esi],bl
  455a3c:	outs   dx,BYTE PTR ds:[esi]
  455a3d:	fnsave [edx]
  455a3f:	(bad)  
  455a40:	push   ebx
  455a41:	outs   dx,DWORD PTR ds:[esi]
  455a42:	xor    edx,esi
  455a44:	dec    esp
  455a45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  455a46:	sub    ecx,DWORD PTR [edx*2+0x4fbd2c7c]
  455a4d:	in     al,dx
  455a4e:	cs jne 0x455ac5
  455a51:	xor    al,0x2f
  455a53:	cs ins BYTE PTR es:[edi],dx
  455a55:	jbe    0x455a86
  455a57:	stc    
  455a58:	jbe    0x4559fc
  455a5a:	sub    eax,0x2e416ec7
  455a5f:	add    ah,dl
  455a61:	int3   
  455a62:	mov    ebp,0xe7cc1f37
  455a67:	aaa    
  455a68:	js     0x455a38
  455a6a:	cmp    BYTE PTR [eax],bh
  455a6c:	ror    esi,cl
  455a6e:	sub    edi,DWORD PTR [ecx]
  455a70:	pop    ss
  455a71:	iret   
  455a72:	push   0x39
  455a74:	ror    esi,1
  455a76:	fnstcw WORD PTR [ecx]
  455a78:	fs into 
  455a7a:	sbb    BYTE PTR [edx],bh
  455a7c:	mov    ch,0xcf
  455a7e:	test   al,0x3a
  455a80:	push   ecx
  455a81:	iret   
  455a82:	pushf  
  455a83:	cmp    ebp,DWORD PTR [ebx-0x30]
  455a86:	repz cmp eax,DWORD PTR [eax-0x2e]
  455a8a:	ss cmp al,0xc7
  455a8d:	shl    DWORD PTR [ecx+0x3c],1
  455a90:	xchg   cl,cl
  455a92:	jne    0x455ad0
	...
  455aa8:	in     al,0xd1
  455aaa:	mov    dh,0x3c
  455aac:	(bad)  
  455aad:	shl    esi,1
  455aaf:	cmp    al,0x2
  455ab1:	rcr    DWORD PTR [edi],cl
  455ab3:	cmp    eax,0x3d55d263
  455ab8:	loopne 0x455a8c
  455aba:	ret    0x243d
  455abd:	ror    DWORD PTR [esi],cl
  455abf:	ds ins DWORD PTR es:[edi],dx
  455ac1:	aad    0x0
  455ac3:	add    bl,cl
  455ac5:	xchg   ebp,eax
  455ac6:	add    DWORD PTR [eax],eax
  455ac8:	(bad)  
  455ac9:	fld    QWORD PTR [eax]
  455acb:	add    BYTE PTR [eax-0x52cfd83b],bh
  455ad1:	lds    ebp,FWORD PTR [eax+esi*1]
  455ad4:	jo     0x455aa3
  455ad6:	push   edi
  455ad7:	xor    dl,ch
  455ad9:	(bad)
  455adc:	xor    eax,edi
  455ade:	sti    
  455adf:	xor    DWORD PTR [eax-0x38],ebx
  455ae2:	div    BYTE PTR [ebx]
  455ae4:	(bad)  
  455ae6:	cmp    DWORD PTR [eax+eiz*4],esi
  455ae9:	leave  
  455aea:	test   DWORD PTR ds:0xb90f5162,esi
  455af0:	dec    edi
  455af1:	or     eax,0x3935350f
  455af6:	or     eax,0x4d12dfd
  455afb:	aaa    
  455afc:	sub    dh,BYTE PTR ds:0x462a5d0a
  455b02:	or     ebx,DWORD PTR [esi]
  455b04:	cwde   
  455b05:	xchg   BYTE PTR [eax],cl
  455b07:	aas    
  455b08:	cdq    
  455b09:	out    dx,al
  455b0a:	or     ah,cl
	...
  455b20:	mov    DWORD PTR [ecx-0x33793afa],ecx
  455b26:	add    eax,0x7187f32
  455b2b:	outs   dx,DWORD PTR ds:[esi]
  455b2c:	je     0x455ba0
  455b2e:	mov    dl,0x0
  455b30:	bound  edi,QWORD PTR [edx]
  455b32:	add    al,BYTE PTR [eax]
  455b34:	(bad)  
  455b35:	retf   0xe511
  455b38:	push   ebx
  455b39:	pop    ds
  455b3a:	sysenter 
  455b3c:	push   ecx
  455b3d:	lods   eax,DWORD PTR ds:[esi]
  455b3e:	or     eax,0x11245694
  455b43:	(bad)  [esi-0x70]
  455b46:	adc    DWORD PTR [ebp-0x62efd8c9],esp
  455b4c:	sub    al,0x8e
  455b4e:	adc    esi,DWORD PTR [esi]
  455b50:	xor    eax,0x2aa9124e
  455b55:	inc    eax
  455b56:	add    eax,0x57a9b13
  455b5b:	jp     0x455af8
  455b5d:	aas    
  455b5e:	add    al,0x31
  455b60:	mov    cl,al
  455b62:	push   es
  455b63:	outs   dx,DWORD PTR ds:[esi]
  455b64:	mov    BYTE PTR ds:0x837e5d07,bl
  455b6a:	or     DWORD PTR [eax+0x170b8577],ebx
  455b70:	ins    DWORD PTR es:[edi],dx
  455b71:	pusha  
  455b72:	or     esi,DWORD PTR [esi+0x65]
  455b75:	jb     0x455b59
  455b77:	add    BYTE PTR [edx-0x27],ah
  455b7a:	mov    ds:0x7dd96203,eax
  455b7f:	adc    al,0xf6
  455b81:	lods   al,BYTE PTR ds:[esi]
  455b82:	bound  edx,QWORD PTR [eax]
	...
  455b98:	adc    al,0xa1
  455b9a:	mov    WORD PTR [ecx+edi*4],cs
  455b9d:	mov    eax,ds:0xa31e0d79
  455ba2:	push   eax
  455ba3:	push   cs
  455ba4:	pop    edi
  455ba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  455ba6:	lods   al,BYTE PTR ds:[esi]
  455ba7:	push   cs
  455ba8:	ret    
  455ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  455baa:	add    al,0x8
  455bac:	jno    0x455b4c
  455bae:	mov    ebp,0x739ee708
  455bb3:	or     ch,ah
  455bb5:	sahf   
  455bb6:	push   edx
  455bb7:	or     dl,BYTE PTR [esi]
  455bb9:	lahf   
  455bba:	xor    cl,BYTE PTR [edx]
  455bbc:	inc    esp
  455bbd:	lahf   
  455bbe:	add    cl,BYTE PTR [edx]
  455bc0:	pop    esi
  455bc1:	mov    al,ds:0xa0560ace
  455bc6:	mov    edi,0x5ba0690a
  455bcb:	or     esp,DWORD PTR [edx-0x27]
  455bce:	out    0xd3,eax
  455bd0:	(bad)  
  455bd1:	fnstcw WORD PTR [edi]
  455bd3:	add    al,0x62
  455bd5:	(bad)  
  455bd7:	adc    esi,DWORD PTR [eax-0x57]
  455bda:	jle    0x455bef
  455bdc:	(bad)  
  455bdd:	test   al,0x52
  455bdf:	push   ss
  455be0:	sub    BYTE PTR [ecx+ebp*2-0x60542eea],0x16
  455be8:	pop    edi
  455be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  455bea:	into   
  455beb:	emms   
  455bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  455bee:	retf   0xf0f
  455bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  455bf2:	push   ecx
  455bf3:	adc    BYTE PTR [edx],dl
  455bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  455bf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  455bf7:	adc    BYTE PTR [edx+0x10aea5],dh
	...
  455c0d:	add    BYTE PTR [eax],al
  455c0f:	add    bl,al
  455c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  455c12:	xchg   edx,eax
  455c13:	adc    BYTE PTR [ecx-0x59],bl
  455c16:	retf   0x7111
  455c19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  455c1a:	add    BYTE PTR [eax+0x202f1a53],dh
  455c20:	jo     0x455c26
  455c22:	das    
  455c23:	enter  0xa773,0x3a
  455c27:	jle    0x455c85
  455c29:	cmp    ch,BYTE PTR ds:[ebx+0x5d]
  455c2d:	shl    DWORD PTR [ebx],1
  455c2f:	fild   QWORD PTR [edx-0x47]
  455c32:	xor    eax,DWORD PTR [ebx+0x48378e6b]
  455c38:	pop    ebx
  455c39:	jp     0x455c71
  455c3b:	jmp    0x9d463621
  455c40:	popa   
  455c41:	fld    DWORD PTR [eax]
  455c43:	clc    
  455c44:	jno    0x455c39
  455c46:	xor    BYTE PTR [ecx+0x612feb71],ah
  455c4c:	outs   dx,BYTE PTR ds:[esi]
  455c4d:	mov    ds:0xd654e932,eax
  455c52:	xor    DWORD PTR [ebp+eiz*2+0x7],edx
  455c56:	sub    al,0x14
  455c58:	push   eax
  455c59:	(bad)  
  455c5a:	cmp    BYTE PTR [eax],dl
  455c5c:	push   esi
  455c5d:	bound  edi,QWORD PTR [eax]
  455c5f:	shr    DWORD PTR [edi+esi*4+0x39],cl
  455c63:	sbb    al,0x67
  455c65:	mov    ds:0xd5f2c39,al
  455c6a:	cmp    dh,BYTE PTR [ecx]
  455c6c:	push   edi
  455c6d:	push   es
  455c6e:	cmp    dl,BYTE PTR [edi+ebp*2+0x33a22]
	...
  455c85:	add    BYTE PTR [eax],al
  455c87:	add    BYTE PTR [edx+0x6b],ch
  455c8a:	xor    eax,0x33d85abd
  455c8f:	and    eax,0x4d344b5d
  455c94:	cmp    BYTE PTR gs:[edx+eax*8],dh
  455c98:	pop    ebp
  455c99:	fld    DWORD PTR [eax]
  455c9b:	jmp    0x94634f1
  455ca0:	pop    esi
  455ca1:	fld    DWORD PTR [eax]
  455ca3:	or     edx,DWORD PTR [ecx-0x2e]
  455ca6:	xor    al,BYTE PTR [eax]
  455ca8:	inc    bh
  455caa:	pop    es
  455cab:	xor    esp,DWORD PTR [eax-0x36cb6a3b]
  455cb1:	leave  
  455cb2:	push   ss
  455cb3:	xor    eax,0x3768c88f
  455cb8:	and    ecx,eax
  455cba:	pop    ss
  455cbb:	cmp    BYTE PTR [ebp-0x76c53334],dh
  455cc1:	int    0x6
  455cc3:	cmp    esi,DWORD PTR [ecx-0x33]
  455cc6:	push   cs
  455cc7:	cmp    ebp,DWORD PTR [ecx-0x34]
  455cca:	push   ss
  455ccb:	cmp    edx,DWORD PTR [ecx-0x34]
  455cce:	push   ds
  455ccf:	cmp    ebp,DWORD PTR [ecx-0x33]
  455cd2:	cmp    edx,DWORD PTR es:[ecx-0x33]
  455cd6:	cmp    ecx,DWORD PTR cs:[ecx]
  455cd9:	int    0x36
  455cdb:	cmp    edx,DWORD PTR [ecx]
  455cdd:	int    0x3e
  455cdf:	cmp    esp,edx
  455ce1:	int3   
  455ce2:	jge    0x455d1f
  455ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  455ce5:	int3   
  455ce6:	nop
  455ce7:	cmp    al,0xa3
  455ce9:	shl    ebp,1
  455ceb:	cmp    al,0x0
	...
  455cfd:	add    BYTE PTR [eax],al
  455cff:	add    BYTE PTR [esi+edx*8-0x2fcac229],bl
  455d06:	pop    ss
  455d07:	ds ret 
  455d09:	iret   
  455d0a:	call   0xfb00:0xcfe83e
  455d11:	cmp    DWORD PTR [eax],eax
  455d13:	add    BYTE PTR [ebx-0x2b],dh
  455d16:	add    BYTE PTR [eax],al
  455d18:	or     dl,cl
  455d1a:	shl    DWORD PTR [eax],cl
  455d1c:	dec    ebx
  455d1d:	retf   0x3160
  455d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  455d21:	leave  
  455d22:	popf   
  455d23:	ss mov bh,0xc7
  455d26:	iret   
  455d27:	ss jae 0x455cf2
  455d2a:	test   al,0x37
  455d2c:	loope  0x455d00
  455d2e:	jecxz  0x455d69
  455d30:	imul   ecx,edi,0xffffffb4
  455d33:	cmp    ah,BYTE PTR [edx-0x21]
  455d36:	add    al,0xad
  455d38:	jns    0x455d4e
  455d3a:	(bad)  
  455d3b:	and    dh,BYTE PTR [edi-0x68]
  455d3e:	push   DWORD PTR [edi+ebp*2+0x0]
  455d42:	dec    DWORD PTR [ecx-0x21f6cc9b]
  455d48:	pop    ebp
  455d49:	jo     0x455cdd
  455d4b:	add    DWORD PTR [edx+0x28],esp
  455d4e:	add    eax,DWORD PTR [eax]
  455d50:	bound  ebp,QWORD PTR [ebx+0x12]
  455d53:	and    DWORD PTR [edx-0x41],edx
  455d56:	or     al,0x50
  455d58:	xor    ch,BYTE PTR [edx+edx*1]
  455d5b:	pop    edi
  455d5c:	xor    al,BYTE PTR [ebp-0xdcd87ee]
  455d62:	adc    DWORD PTR [eax+0x0],ecx
	...
  455d78:	xor    bh,ch
  455d7a:	adc    DWORD PTR [edx+edx*4-0x6d3fedb1],edx
  455d81:	sahf   
  455d82:	adc    eax,ebp
  455d84:	xchg   edx,eax
  455d85:	mov    ebx,0x69930811
  455d8a:	adc    esp,DWORD PTR [eax]
  455d8c:	jae    0x455dac
  455d8e:	adc    ebp,DWORD PTR ds:0x3c139773
  455d94:	jae    0x455dd5
  455d96:	adc    ebx,DWORD PTR [edi+0x73]
  455d99:	push   esp
  455d9a:	adc    esi,DWORD PTR [esi+0x53]
  455d9d:	stc    
  455d9e:	adc    al,BYTE PTR [edi-0x4ef3a7ad]
  455da4:	push   ebx
  455da5:	and    cl,BYTE PTR [eax+edx*1]
  455da8:	push   eax
  455da9:	pop    ebx
  455daa:	adc    BYTE PTR ds:0x6c12cd30,dl
  455db0:	xor    BYTE PTR [eax],bl
  455db2:	adc    eax,DWORD PTR [eax-0x24ed24d0]
  455db8:	xor    BYTE PTR [edi+0x13],ch
  455dbb:	setno  BYTE PTR [eax+0x13]
  455dbf:	push   eax
  455dc0:	xchg   ecx,eax
  455dc1:	fstp   DWORD PTR ds:0xa7a90b13
  455dc7:	adc    eax,DWORD PTR [edi]
  455dc9:	test   eax,0xa8c913af
  455dce:	xchg   BYTE PTR [ebx],dl
  455dd0:	imul   esp,DWORD PTR [ebp-0x5a7ef025],0xa5401013
  455dda:	cli    
  455ddb:	sldt   WORD PTR [eax]
	...
  455dee:	add    BYTE PTR [eax],al
  455df0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  455df2:	cmp    eax,0x2aa5c710
  455df7:	adc    BYTE PTR [ebx+0x721046a5],al
  455dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  455dfe:	test   eax,0xbca61410
  455e03:	adc    dh,bh
  455e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  455e06:	mov    edx,0x59a6e110
  455e0b:	adc    ebx,ecx
  455e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  455e0e:	jl     0x455e21
  455e10:	and    ah,BYTE PTR [esi-0x5c7af225]
  455e16:	or     BYTE PTR [esi],0x24
  455e19:	mov    ds:0xa3df0ed9,eax
  455e1e:	jo     0x455e2f
  455e20:	aad    0xa3
  455e22:	xor    al,0xf
  455e24:	sti    
  455e25:	mov    ds:0xa4260f29,eax
  455e2a:	or     eax,0xf0a43e0f
  455e2f:	push   cs
  455e30:	popa   
  455e31:	mov    eax,ds:0xa1430bd8
  455e36:	or     ecx,DWORD PTR [edi+edi*1]
  455e39:	mov    eax,ds:0xa19f0c2a
  455e3e:	ss or  al,0x9f
  455e41:	mov    eax,ds:0xa1860c33
  455e46:	push   0x4da0e70b
  455e4b:	or     ecx,edi
  455e4d:	mov    al,ds:0x2f698b00
  455e52:	cmp    DWORD PTR [ebp+0x0],esi
	...
  455e65:	add    BYTE PTR [eax],al
  455e67:	add    BYTE PTR [ecx+0x24],ch
  455e6a:	cmp    DWORD PTR [edi-0x77c67fa7],esi
  455e70:	pop    ecx
  455e71:	jl     0x455eac
  455e73:	test   BYTE PTR [ecx+0x65],ch
  455e76:	cmp    esp,esp
  455e78:	data16 aad 0x37
  455e7b:	fistp  DWORD PTR [esi-0x43]
  455e7e:	aaa    
  455e7f:	rcl    BYTE PTR [esi-0x58],cl
  455e82:	aaa    
  455e83:	mov    al,0x6e
  455e85:	sbb    DWORD PTR [eax],edi
  455e87:	and    BYTE PTR [edi+0x9],ah
  455e8a:	cmp    BYTE PTR [edi-0x31c80ea2],bh
  455e90:	push   esi
  455e91:	in     al,dx
  455e92:	aaa    
  455e93:	aam    0x6e
  455e95:	push   ecx
  455e96:	cmp    BYTE PTR [eax+0x66],bh
  455e99:	inc    ecx
  455e9a:	cmp    BYTE PTR [edi+0x5e],ah
  455e9d:	sub    DWORD PTR [eax],edi
  455e9f:	jbe    0x455ef7
  455ea1:	and    al,0x38
  455ea3:	and    BYTE PTR [esi-0x6e],ch
  455ea6:	cmp    BYTE PTR [ecx],dl
  455ea8:	data16 cmp BYTE PTR [eax],0x17
  455eac:	pop    esi
  455ead:	imul   edi,DWORD PTR [eax],0x1c
  455eb0:	push   esi
  455eb1:	(bad)  
  455eb2:	cmp    al,ch
  455eb4:	imul   esp,DWORD PTR [edi-0x2945ac6],0x3a
  455ebb:	push   ebx
  455ebc:	pop    ebx
  455ebd:	sub    al,0x3b
  455ebf:	add    ebx,DWORD PTR [ebp-0x3f]
  455ec2:	xor    ebx,DWORD PTR [ecx+0x6a]
  455ec5:	push   ecx
  455ec6:	aaa    
  455ec7:	out    dx,eax
  455ec8:	pop    esi
  455ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  455eca:	xor    eax,0xb4
	...
  455edf:	add    BYTE PTR [edi-0x27],ah
  455ee2:	add    cl,ch
  455ee4:	mov    eax,ds:0x666d00d8
  455ee9:	fld    DWORD PTR [eax]
  455eeb:	cmc    
  455eec:	push   ecx
  455eed:	add    dh,BYTE PTR [ecx]
  455eef:	add    bh,bh
  455ef1:	(bad)  
  455ef2:	and    BYTE PTR [ecx],dh
  455ef4:	pushf  
  455ef5:	(bad)  
  455ef6:	into   
  455ef7:	xor    eax,eax
  455ef9:	enter  0x323b,0xb5
  455efd:	leave  
  455efe:	scas   eax,DWORD PTR es:[edi]
  455eff:	xor    ecx,esi
  455f01:	retf   0x3477
  455f04:	jmp    0xfbcb:0x33539c9
  455f0b:	xor    eax,0x37d9cb60
  455f10:	sub    ah,cl
  455f12:	adc    al,0x38
  455f14:	mov    ch,0xcf
  455f16:	push   eax
  455f17:	cmp    DWORD PTR [esi+ecx*8-0x3b],esp
  455f1b:	cmp    cl,BYTE PTR [edi]
  455f1d:	iret   
  455f1e:	in     al,dx
  455f1f:	cmp    bh,BYTE PTR [ebp-0x2f]
  455f22:	sbb    BYTE PTR [ebx],bh
  455f24:	test   cl,dl
  455f26:	xor    DWORD PTR [ebx],edi
  455f28:	push   ecx
  455f29:	rcr    BYTE PTR [ebp+0x3b],1
  455f2c:	out    dx,eax
  455f2d:	iret   
  455f2e:	sahf   
  455f2f:	cmp    edx,DWORD PTR [ecx]
  455f31:	ror    BYTE PTR [eax],1
  455f33:	cmp    al,0x81
  455f35:	rcl    BYTE PTR [esp+edi*1],cl
  455f38:	popa   
  455f39:	shl    DWORD PTR [edx],1
  455f3b:	cmp    al,0xda
  455f3d:	shr    DWORD PTR [ebx-0x82e74c4],1
  455f43:	cmp    al,0x0
	...
  455f55:	add    BYTE PTR [eax],al
  455f57:	add    BYTE PTR [eax-0x2d],al
  455f5a:	dec    eax
  455f5b:	cmp    eax,0x3d55d306
  455f60:	nop
  455f61:	rol    BYTE PTR [ecx],cl
  455f63:	ds adc dl,ah
  455f66:	and    edi,DWORD PTR [esi]
  455f68:	repz rcl DWORD PTR [eax+0x3e],cl
  455f6c:	jmp    0xd583f244
  455f71:	aam    0x2d
  455f73:	aas    
  455f74:	dec    eax
  455f75:	aam    0x4b
  455f77:	aas    
  455f78:	test   eax,0x620000d4
  455f7d:	jo     0x455fb1
  455f7f:	add    DWORD PTR [edx+0x68],esp
  455f82:	add    eax,DWORD PTR [eax]
  455f84:	bound  ebp,QWORD PTR [ebp+0x47308f0c]
  455f8a:	adc    BYTE PTR [eax-0xfefcb70],bh
  455f90:	nop
  455f91:	daa    
  455f92:	adc    BYTE PTR [ebx],cl
  455f94:	xchg   ecx,eax
  455f95:	ror    DWORD PTR [edi],cl
  455f97:	inc    ebx
  455f98:	xchg   ecx,eax
  455f99:	dec    ebp
  455f9a:	adc    DWORD PTR [esi+0x24077876],eax
  455fa0:	outs   dx,DWORD PTR ds:[esi]
  455fa1:	scas   eax,DWORD PTR es:[edi]
  455fa2:	add    eax,0x5d8774c
  455fa7:	mov    BYTE PTR [edi+0x18],ch
  455faa:	pop    es
  455fab:	retf   0x6f57
  455fae:	add    al,0x22
  455fb0:	dec    esp
  455fb1:	sbb    al,0x4
  455fb3:	sub    al,0x54
  455fb5:	mov    bh,0x6
  455fb7:	push   eax
  455fb8:	dec    esp
  455fb9:	mov    DWORD PTR [esp+esi*2],eax
	...
  455fd0:	xor    al,0xea
  455fd2:	add    esp,DWORD PTR [esp+ebp*1+0x34c603b4]
  455fd9:	pop    esi
  455fda:	add    eax,0x4a32dd4
  455fdf:	add    DWORD PTR [edx-0x6514f59a],ebx
  455fe5:	cmp    eax,0xf18b350b
  455fea:	or     dl,BYTE PTR [edi-0x6bf66b78]
  455ff0:	jns    0x455fa3
  455ff2:	or     cl,al
  455ff4:	jns    0x455ff2
  455ff6:	or     cl,dl
  455ff8:	imul   esi,edi,0x5269e908
  455ffe:	(bad)  
  455fff:	jmp    0x45605a
  456001:	dec    ebx
  456002:	inc    BYTE PTR [edi]
  456004:	push   esi
  456005:	cmp    dh,bh
  456007:	or     ecx,DWORD PTR [esi-0x27]
  45600a:	cld    
  45600b:	inc    DWORD PTR [eax+0x15]
  45600e:	(bad)  
  45600f:	inc    DWORD PTR [edi+0x15]
  456012:	sbb    eax,DWORD PTR [eax]
  456014:	cmp    edx,DWORD PTR ds:0x152f0007
  45601a:	xor    eax,DWORD PTR [eax]
  45601c:	xchg   ebx,eax
  45601d:	adc    eax,0x1537000f
  456022:	add    BYTE PTR ds:[esi+0x15],al
  456026:	inc    esi
  456027:	add    BYTE PTR [esi-0x43ff4beb],ah
  45602d:	adc    eax,0x1666009b
  456032:	test   DWORD PTR [eax],0x0
	...
  456048:	adc    DWORD PTR [esi],0xffffffc3
  45604b:	add    BYTE PTR [edi+0x16],ch
  45604e:	sbb    BYTE PTR [ecx],al
  456050:	pop    ss
  456051:	push   ss
  456052:	or     BYTE PTR [ecx],al
  456054:	aas    
  456055:	push   ss
  456056:	std    
  456057:	add    BYTE PTR [eax],dl
  456059:	push   ss
  45605a:	push   ebp
  45605b:	add    ebx,ebp
  45605d:	push   ss
  45605e:	jle    0x456061
  456060:	in     al,0x16
  456062:	xchg   ebx,eax
  456063:	add    DWORD PTR [ecx-0x5dfe6fea],esi
  456069:	push   ss
  45606a:	sbb    eax,0x1a16a701
  45606f:	add    DWORD PTR [eax+0x7f011716],ecx
  456075:	pop    ss
  456076:	add    DWORD PTR [edx],eax
  456078:	jg     0x456091
  45607a:	stc    
  45607b:	add    DWORD PTR [edi+0x17],edi
  45607e:	loope  0x456081
  456080:	(bad)  
  456081:	pop    ss
  456082:	test   eax,0xa1177f01
  456087:	add    DWORD PTR [edi-0x60fe46e9],ebx
  45608d:	pop    ss
  45608e:	mov    BYTE PTR [ecx],al
  456090:	test   DWORD PTR [edi],edx
  456092:	outs   dx,DWORD PTR ds:[esi]
  456093:	add    ebx,ebp
  456095:	push   ss
  456096:	add    DWORD PTR [esi+0x60],esp
  456099:	outs   dx,BYTE PTR ds:[esi]
  45609a:	aaa    
  45609b:	dec    edx
  45609c:	pusha  
  45609d:	fidiv  WORD PTR ds:0x36036107
  4560a3:	pop    ss
  4560a4:	popa   
  4560a5:	or     eax,0xb1612536
  4560aa:	xor    eax,0x4b
	...
  4560bf:	add    BYTE PTR [ecx-0x3f],ah
  4560c2:	xor    eax,0x35ce6156
  4560c7:	outs   dx,BYTE PTR ds:[esi]
  4560c8:	pusha  
  4560c9:	mov    esi,DWORD PTR [esi]
  4560cb:	lahf   
  4560cc:	pusha  
  4560cd:	cmp    dh,BYTE PTR [esi]
  4560cf:	mov    eax,0xe900d960
  4560d4:	sbb    edx,0xd9616100
  4560da:	add    al,ch
  4560dc:	mov    cl,0xdf
  4560de:	xor    cl,dh
  4560e0:	mov    cl,0xfa
  4560e2:	xor    BYTE PTR [ecx],dh
  4560e4:	scas   al,BYTE PTR es:[edi]
  4560e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4560e6:	xor    BYTE PTR [esi-0x6f],ah
  4560e9:	imul   esi,DWORD PTR [ecx],0x318f9149
  4560ef:	mov    WORD PTR [ecx-0x70e0ceb7],ss
  4560f5:	call   0x4c30:0x7676762f
  4560fc:	outs   dx,BYTE PTR ds:[esi]
  4560fd:	aad    0x2b
  4560ff:	je     0x45616b
  456101:	sub    DWORD PTR [ecx+ebx*8],0x6b
  456105:	push   edi
  456106:	das    
  456107:	adc    DWORD PTR [ecx-0x50],ebx
  45610a:	sub    eax,0x2e3a586d
  45610f:	loope  0x45615f
  456111:	mov    ch,0x37
  456113:	xchg   esp,eax
  456114:	inc    esi
  456115:	shl    BYTE PTR [edi],cl
  456117:	sahf   
  456118:	imul   edi,DWORD PTR ds:[eax],0x381a3671
  45611f:	and    DWORD PTR [esi],ebp
  456121:	cli    
  456122:	cmp    al,BYTE PTR [eax]
	...
  456138:	stc    
  456139:	push   esp
  45613a:	cmp    DWORD PTR [edx],0x3a9f548c
  456140:	push   eax
  456141:	push   esp
  456142:	fdivr  QWORD PTR [edx]
  456144:	xor    eax,0x673b1658
  456149:	push   esp
  45614a:	mov    bh,BYTE PTR [ebx]
  45614c:	call   0xbb810fa5
  456151:	push   esp
  456152:	iret   
  456153:	cmp    esi,esi
  456155:	push   esi
  456156:	sub    eax,0x5dd9483c
  45615b:	cmp    al,0x51
  45615d:	(bad)  [ebx-0x38261cc4]
  456163:	cmp    al,0xeb
  456165:	(bad)  
  456167:	cmp    al,0xb8
  456169:	push   edi
  45616a:	push   cs
  45616b:	cmp    eax,0x3d3357a9
  456170:	jnp    0x4561c8
  456172:	imul   edi,DWORD PTR ds:0x3d8c5648,0x3dc15611
  45617c:	out    dx,al
  45617d:	push   esi
  45617e:	out    dx,eax
  45617f:	cmp    eax,0x3dfed886
  456184:	mov    dh,0xd8
  456186:	push   edi
  456187:	ds or  bl,bl
  45618a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  45618b:	ds daa 
  45618d:	(bad)  
  45618f:	ds pop esp
  456191:	fdivr  DWORD PTR [ecx]
  456193:	aas    
  456194:	into   
  456195:	fst    DWORD PTR [edx+0x3f]
  456198:	mov    ebp,0x3f93d9
	...
  4561ad:	add    BYTE PTR [eax],al
  4561af:	add    BYTE PTR [ecx+0x4b0000d8],bl
  4561b5:	or     al,BYTE PTR [eax]
  4561b7:	add    BYTE PTR [ebx],dl
  4561b9:	fiadd  DWORD PTR [eax]
  4561bb:	add    BYTE PTR [ebx],bh
  4561bd:	dec    edx
  4561be:	push   ss
  4561bf:	xor    BYTE PTR ds:0x62304b4a,bl
  4561c5:	xchg   esi,eax
  4561c6:	bnd jno 0x45623b
  4561c9:	gs repnz xchg esi,eax
  4561cc:	jb     0x45617a
  4561ce:	in     al,dx
  4561cf:	lock push edx
  4561d1:	sub    al,0xf3
  4561d3:	sbb    edx,DWORD PTR [ebx+0x65]
  4561d6:	xrelease xchg BYTE PTR [ebx-0x53],dl
  4561da:	icebp  
  4561db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4561dc:	push   ebx
  4561dd:	adc    edi,ebp
  4561df:	bound  esi,QWORD PTR [eax]
  4561e1:	jb     0x4561cf
  4561e3:	mov    ebx,0xced3f30
  4561e8:	xor    DWORD PTR [esi+0x2b2fa1ed],ebx
  4561ee:	out    dx,eax
  4561ef:	je     0x456185
  4561f1:	jo     0x4561eb
  4561f3:	or     BYTE PTR [ebp-0x6a390742],cl
  4561f9:	and    eax,0xcb8a55fa
  4561fe:	stc    
  4561ff:	sbb    DWORD PTR [ebx+0x25],edi
  456202:	sti    
  456203:	outs   dx,BYTE PTR ds:[esi]
  456204:	jnp    0x45623f
  456206:	hlt    
  456207:	inc    esp
  456208:	push   0x688df6f2
  45620d:	pop    ecx
  45620e:	hlt    
  45620f:	sub    eax,0x60f3ec59
	...
  456228:	pop    ecx
  456229:	mov    dl,0xf4
  45622b:	mov    esi,0xfbf63949
  456230:	inc    esi
  456231:	jmp    0x8285332b
  456236:	add    BYTE PTR [edx+0x34],ch
  456239:	cmp    BYTE PTR [ecx],al
  45623b:	pop    ebp
  45623c:	sub    eax,0x25a9012d
  456241:	inc    eax
  456242:	add    al,BYTE PTR [edx]
  456244:	bound  esi,QWORD PTR [edx+0x53620001]
  45624a:	repnz push eax
  45624c:	xchg   edx,eax
  45624d:	xchg   edx,esi
  45624f:	xchg   edi,eax
  456250:	xchg   edx,eax
  456251:	fst    DWORD PTR [eax-0xd]
  456254:	sbb    cl,BYTE PTR [edx]
  456256:	or     ebx,esi
  456258:	repnz or dl,BYTE PTR [edi-0xe]
  45625c:	and    cl,BYTE PTR [ebx]
  45625e:	jmp    0xf44d2a58
  456263:	repz jne 0x456273
  456266:	jg     0x45625f
  456268:	cdq    
  456269:	or     eax,0xef1f660
  45626e:	xor    dh,dh
  456270:	push   ds
  456271:	movmskps esi,xmm6
  456274:	cmp    BYTE PTR [ecx+ecx*8],cl
  456277:	idiv   ebx
  456279:	or     al,0x5d
  45627b:	cli    
  45627c:	fmul   QWORD PTR [edi]
  45627e:	mov    ds:0xf11016fa,eax
  456283:	cli    
  456284:	jo     0x456296
  456286:	cmp    ebx,0xffffff9f
  456289:	adc    BYTE PTR [ebp+0xfb],ch
	...
  45629f:	add    dh,cl
  4562a1:	adc    BYTE PTR [edx],cl
  4562a3:	add    BYTE PTR [edi+0x15],bh
  4562a6:	loopne 0x4562a7
  4562a8:	and    eax,0x16002615
  4562ad:	adc    eax,0x159a0011
  4562b2:	jle    0x4562b4
  4562b4:	push   esi
  4562b5:	push   ss
  4562b6:	int3   
  4562b7:	add    BYTE PTR [esi+0x16],cl
  4562ba:	or     eax,DWORD PTR [ecx]
  4562bc:	mov    edi,0x66fde116
  4562c1:	adc    ebx,ebx
  4562c3:	std    
  4562c4:	push   esp
  4562c5:	adc    eax,DWORD PTR [esi+edi*8]
  4562c8:	dec    ebx
  4562c9:	adc    esp,DWORD PTR [ecx]
  4562cb:	(bad)  
  4562cc:	xor    eax,0x67fe8013
  4562d1:	adc    al,0x66
  4562d3:	push   DWORD PTR [eax+0x25ff8114]
  4562d9:	adc    al,0x25
  4562db:	jmp    DWORD PTR [esp+edx*1]
  4562de:	add    DWORD PTR ds:0x42363a4d,edx
  4562e4:	inc    ebp
  4562e5:	inc    ebx
  4562e6:	ss jmp 0x45463a3d
  4562ec:	pop    esi
  4562ed:	fld    DWORD PTR [eax]
  4562ef:	in     eax,dx
  4562f0:	xor    ecx,ebp
  4562f2:	xor    BYTE PTR [ebp-0x4ecef2cf],bh
  4562f8:	adc    DWORD PTR [ebx+0x490e3f30],ebp
  4562fe:	xor    edi,edi
  456300:	adc    eax,ebx
  456302:	das    
  456303:	mov    ebp,0x0
	...
  456318:	push   cs
  456319:	mov    al,0x2f
  45631b:	ja     0x456313
  45631d:	jne    0x45634f
  45631f:	mov    edx,0xfa3053ee
  456324:	repz sbb DWORD PTR [ebx],esi
  456327:	fdivr  st(0),st
  456329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45632a:	xor    DWORD PTR [eax-0x2f],eax
  45632d:	test   DWORD PTR [edx],esi
  45632f:	jg     0x456301
  456331:	mov    WORD PTR ds:0x2d43d5a6,gs
  456337:	fmulp  st(2),st
  456339:	stc    
  45633a:	sub    ebx,DWORD PTR [eax]
  45633c:	mov    ebx,0xba682bc2
  456341:	sub    DWORD PTR [edx+edi*4],0xffffffaa
  456345:	sub    ebp,DWORD PTR [esp+edi*4]
  456348:	scas   eax,DWORD PTR es:[edi]
  456349:	xchg   esi,eax
  45634a:	sbb    edx,DWORD PTR cs:[ebp+eiz*2-0x7970b7d1]
  456352:	das    
  456353:	call   0x507315ec
  456358:	mov    WORD PTR [ebp+0x2e],?
  45635b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  45635c:	je     0x45639f
  45635e:	cs popa 
  456360:	ins    BYTE PTR es:[edi],dx
  456361:	call   0xfaaf5a9e
  456366:	cmp    BYTE PTR [ebx+0x38ad69],ch
  45636c:	lods   eax,DWORD PTR ds:[esi]
  45636d:	dec    esi
  45636e:	fistp  QWORD PTR [eax]
  456370:	cmp    BYTE PTR [esi+0x1e],dl
  456373:	cmp    DWORD PTR [ebp+0x54],esp
  456376:	dec    esp
  456377:	cmp    DWORD PTR [edi],eax
  456379:	push   esi
  45637a:	xchg   esp,eax
  45637b:	cmp    DWORD PTR [eax],eax
	...
  45638d:	add    BYTE PTR [eax],al
  45638f:	add    BYTE PTR [eax-0x6fc5ccab],cl
  456395:	push   eax
  456396:	pop    ecx
  456397:	cmp    al,0x86
  456399:	push   edx
  45639a:	std    
  45639b:	cmp    al,0x7d
  45639d:	fcos   
  45639f:	cmp    eax,0x3e5f5513
  4563a4:	or     DWORD PTR [esi+eiz*1+0x3f],edx
  4563a8:	loope  0x4563fd
  4563aa:	nop
  4563ab:	aas    
  4563ac:	popf   
  4563ad:	push   ebx
  4563ae:	sar    BYTE PTR [edi],cl
  4563b0:	sbb    edx,DWORD PTR [ebp-0xa]
  4563b3:	dec    DWORD PTR [ebx]
  4563b5:	aaa    
  4563b6:	add    BYTE PTR [eax],al
  4563b8:	not    edi
  4563ba:	add    BYTE PTR [eax],al
  4563bc:	sti    
  4563bd:	inc    esi
  4563be:	sbb    eax,0x3f4d8830
  4563c3:	xor    BYTE PTR [ebp+0x4d],ch
  4563c6:	push   0x914d8c30
  4563cb:	xor    cl,ah
  4563cd:	dec    ebp
  4563ce:	mov    bl,0x30
  4563d0:	inc    ecx
  4563d1:	dec    ebp
  4563d2:	scas   eax,DWORD PTR es:[edi]
  4563d3:	xor    al,dh
  4563d5:	dec    ebp
  4563d6:	shl    BYTE PTR [eax],1
  4563d8:	in     eax,dx
  4563d9:	dec    ebp
  4563da:	shl    BYTE PTR [eax],cl
  4563dc:	fimul  DWORD PTR [ebp-0x22]
  4563df:	xor    BYTE PTR [edx+0x45314147],cl
  4563e5:	inc    esi
  4563e6:	inc    ebp
  4563e7:	xor    DWORD PTR [ecx+0x46],esi
  4563ea:	pop    edx
  4563eb:	xor    DWORD PTR [esi-0x7cce95b9],eax
  4563f1:	inc    edi
  4563f2:	ins    DWORD PTR es:[edi],dx
  4563f3:	xor    DWORD PTR [eax],eax
	...
  456405:	add    BYTE PTR [eax],al
  456407:	add    bh,bh
  456409:	inc    ebp
  45640a:	xchg   esi,eax
  45640b:	xor    DWORD PTR [edx+0xe],esp
  45640e:	repnz jecxz 0x456444
  456411:	inc    edx
  456412:	lock outs dx,DWORD PTR ds:[esi]
  456414:	nop
  456415:	ret    
  456416:	repnz call 0x7e91:0x26f30a90
  45641e:	icebp  
  45641f:	jo     0x4563b2
  456421:	shr    edi,0x89
  456424:	jno    0x4563f7
  456426:	out    dx,eax
  456427:	lea    esi,[ecx-0x60]
  45642a:	out    dx,eax
  45642b:	test   al,0x71
  45642d:	mov    al,0xef
  45642f:	stos   DWORD PTR es:[edi],eax
  456430:	jno    0x4563db
  456432:	out    dx,eax
  456433:	mov    edi,0xf3f15151
  456438:	dec    esi
  456439:	and    eax,0x5b5755ef
  45643e:	out    dx,eax
  45643f:	mov    DWORD PTR [edi-0x24],ecx
  456442:	in     eax,dx
  456443:	push   ecx
  456444:	xor    al,0xad
  456446:	out    dx,al
  456447:	lea    ebp,[esp+ebp*2]
  45644a:	in     al,dx
  45644b:	fnsave [ecx+eax*2]
  45644e:	in     eax,dx
  45644f:	sub    DWORD PTR ds:0x9561ebf8,ebp
  456455:	mov    dh,0xec
  456457:	jmp    0x1132efe9
  45645c:	mov    bh,ch
  45645e:	hlt    
  45645f:	arpl   WORD PTR [edx+0x7a85f9b8],cx
  456465:	mov    eax,ds:0x957acef9
  45646a:	cli    
  45646b:	lock add BYTE PTR [eax],al
	...
  45647e:	add    BYTE PTR [eax],al
  456480:	push   0x45
  456482:	sti    
  456483:	sbb    BYTE PTR [ebx-0x6b],ch
  456486:	sti    
  456487:	cmp    al,0x5b
  456489:	lock stc 
  45648b:	aad    0x5b
  45648d:	sar    edx,cl
  45648f:	and    ecx,DWORD PTR [eax-0x62]
  456492:	mul    DWORD PTR [esi-0xd0796b8]
  456498:	cmp    cl,bl
  45649a:	popa   
  45649b:	stc    
  45649c:	jecxz  0x4564ab
  45649e:	mov    edi,eax
  4564a0:	popf   
  4564a1:	or     eax,0x146b000d
  4564a6:	or     al,0xff
  4564a8:	lds    ecx,FWORD PTR [esi]
  4564aa:	pop    edx
  4564ab:	dec    BYTE PTR [esi]
  4564ad:	(bad)  
  4564af:	(bad)  
  4564b0:	aaa    
  4564b1:	cmovbe edi,esi
  4564b4:	aas    
  4564b5:	pavgw  mm7,mm5
  4564b8:	push   ebx
  4564b9:	lsl    edi,si
  4564bc:	mov    cl,BYTE PTR [edi]
  4564be:	fdivr  st,st(5)
  4564c0:	jne    0x4564d1
  4564c2:	mov    eax,0x920f84fd
  4564c7:	std    
  4564c8:	loopne 0x4564d9
  4564ca:	jno    0x4564c9
  4564cc:	repnz cmovs edi,ebp
  4564d0:	out    dx,eax
  4564d1:	(bad)  
  4564d3:	std    
  4564d4:	ror    BYTE PTR [edi],1
  4564d6:	push   es
  4564d7:	std    
  4564d8:	add    DWORD PTR [eax],edx
  4564da:	(bad)  
  4564dc:	icebp  
  4564dd:	pmaxub mm7,mm2
  4564e0:	dec    eax
  4564e1:	adc    BYTE PTR [ecx],cl
  4564e3:	sti    
	...
  4564f8:	cmp    eax,0x95fb1910
  4564fd:	adc    BYTE PTR [ecx],ch
  4564ff:	sti    
  456500:	xor    BYTE PTR [eax],dl
  456502:	and    bh,bl
  456504:	aaa    
  456505:	adc    BYTE PTR [ebp-0x5],al
  456508:	cmp    edx,DWORD PTR [eax]
  45650a:	xor    edi,ebx
  45650c:	mov    ebp,0x63f3e850
  456511:	fldenv [ebx+0x4]
  456514:	(bad)  
  456515:	ftst   
  456517:	repz pop esi
  456519:	or     edi,ebp
  45651b:	repz je 0x456527
  45651e:	and    ah,dh
  456520:	xor    eax,0x13f41209
  456525:	or     DWORD PTR [ecx],eax
  456527:	ja     0x4564b7
  456529:	dec    edx
  45652a:	xor    bl,cl
  45652c:	ja     0x4564af
  45652e:	xor    esi,DWORD PTR ds:0xb331f16c
  456534:	jge    0x456569
  456536:	sub    eax,0x2d357248
  45653b:	pop    edx
  45653c:	push   edx
  45653d:	cli    
  45653e:	sub    edx,DWORD PTR [ecx]
  456540:	push   ebx
  456541:	add    al,0x2c
  456543:	add    edx,DWORD PTR [ebx-0x5c]
  456546:	sub    edx,DWORD PTR [ebx-0x47d43cae]
  45654c:	xor    al,bh
  45654e:	sub    ebp,DWORD PTR [ebx+esi*1+0x39]
  456552:	sub    al,0xfb
  456554:	xor    ecx,ecx
  456556:	cs dec edx
  456558:	xor    BYTE PTR [edx],ah
  45655a:	das    
  45655b:	out    dx,eax
	...
  456570:	adc    al,bh
  456572:	sub    eax,0x2dbd10c1
  456577:	adc    DWORD PTR es:[edi],esp
  45657a:	add    edx,DWORD PTR cs:[ecx]
  45657d:	lds    edi,FWORD PTR [eax]
  45657f:	inc    esi
  456580:	dec    BYTE PTR [eax+0x39]
  456583:	ins    DWORD PTR es:[edi],dx
  456584:	mul    BYTE PTR [edx+0x38]
  456587:	sub    ebp,esp
  456589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45658a:	cmp    bl,BYTE PTR [esi-0x16]
  45658d:	les    esi,FWORD PTR [esp+ecx*2]
  456590:	fistp  DWORD PTR [edx+0x34]
  456593:	pop    esi
  456594:	ficom  DWORD PTR [esi+0x6ecb8836]
  45659a:	aaa    
  45659b:	jle    0x456568
  45659d:	mov    WORD PTR [edi],?
  45659f:	xchg   esp,eax
  4565a0:	mov    ebx,0xbb8e3732
  4565a5:	cli    
  4565a6:	xor    eax,0x3657a868
  4565ab:	mov    ah,0xa8
  4565ad:	dec    edi
  4565ae:	imul   cl
  4565b0:	mov    eax,ds:0xb30000d9
  4565b5:	fild   DWORD PTR [eax]
  4565b7:	add    BYTE PTR [ebx],dh
  4565b9:	dec    esp
  4565ba:	ret    0xe930
  4565bd:	dec    ebx
  4565be:	xor    BYTE PTR [edx],0x2c
  4565c1:	inc    esi
  4565c2:	xor    DWORD PTR ds:0x354e4a43,esi
  4565c8:	mov    ebx,0xcb37ab4a
  4565cd:	push   ebx
  4565ce:	adc    BYTE PTR [ecx],bh
  4565d0:	pop    eax
  4565d1:	dec    ebp
  4565d2:	jmp    0x456612
	...
  4565e7:	add    BYTE PTR [esi+0x3bfff653],ah
  4565ed:	sub    eax,DWORD PTR [eax]
  4565ef:	add    BYTE PTR [edi],ch
  4565f1:	fild   DWORD PTR [eax]
  4565f3:	add    BYTE PTR [ecx+0x48],dh
  4565f6:	add    DWORD PTR [edi],esi
  4565f8:	popa   
  4565f9:	dec    ebp
  4565fa:	and    DWORD PTR [eax],edi
  4565fc:	fisttp WORD PTR [ebp+0x67]
  4565ff:	cmp    DWORD PTR [eax+0x5b3cb446],edx
  456605:	push   ebx
  456606:	(bad)  
  456607:	aas    
  456608:	or     edi,DWORD PTR [ebx+0x0]
  45660b:	add    BYTE PTR [edi],dh
  45660d:	fild   DWORD PTR [eax]
  45660f:	add    ah,bh
  456611:	dec    edx
  456612:	mov    al,0x33
  456614:	adc    dl,BYTE PTR [ebx-0x78]
  456617:	cmp    cl,ah
  456619:	push   ebx
  45661a:	idiv   bh
  45661c:	sti    
  45661d:	mov    al,BYTE PTR [eax]
  45661f:	add    BYTE PTR [ebx-0x26],ah
  456622:	add    BYTE PTR [eax],al
  456624:	jbe    0x45666b
  456626:	out    dx,al
  456627:	xor    BYTE PTR [esi-0x11ce82b6],cl
  45662d:	dec    edx
  45662e:	xor    DWORD PTR [edx],esi
  456630:	inc    edx
  456631:	inc    edi
  456632:	fdiv   DWORD PTR [edx]
  456634:	mov    dh,0x45
  456636:	xchg   ecx,eax
  456637:	xor    eax,DWORD PTR [ebx]
  456639:	inc    ebp
  45663a:	stos   DWORD PTR es:[edi],eax
  45663b:	xor    al,0xfd
  45663d:	dec    ecx
  45663e:	sbb    BYTE PTR ds:0xb4e5e562,dh
  456644:	push   edi
  456645:	pop    ecx
  456646:	out    0x4,al
  456648:	dec    esp
  456649:	sub    eax,esi
  45664b:	and    al,0x0
	...
  45665d:	add    BYTE PTR [eax],al
  45665f:	add    BYTE PTR [ecx+edx*4-0x10],dl
  456663:	sub    al,0x4c
  456665:	mov    eax,esi
  456667:	xor    al,0x34
  456669:	add    ebx,esi
  45666b:	cmp    al,0x2c
  45666d:	mov    eax,esi
  45666f:	inc    esp
  456670:	xor    al,0x91
  456672:	lock dec esp
  456674:	sub    al,0x89
  456676:	lock push esp
  456678:	xchg   esp,eax
  456679:	and    eax,esi
  45667b:	pop    esp
  45667c:	mov    WORD PTR [ecx],gs
  45667e:	lock fs xchg esp,eax
  456681:	xchg   ecx,eax
  456682:	lock ins BYTE PTR es:[edi],dx
  456684:	mov    WORD PTR [ecx-0x3e8b8b10],cs
  45668a:	bnd jl 0x4566f9
  45668d:	leave  
  45668e:	repnz test BYTE PTR [ecx+edx*8-0xe],dh
  456693:	mov    WORD PTR [ecx+ecx*8-0xe],gs
  456697:	xchg   esp,eax
  456698:	push   esp
  456699:	mov    eax,ds:0xa94c9cf2
  45669e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4566a0:	push   esp
  4566a1:	adc    ebx,esi
  4566a3:	lods   al,BYTE PTR ds:[esi]
  4566a4:	dec    esp
  4566a5:	or     ebx,esi
  4566a7:	mov    ah,0x34
  4566a9:	add    ebx,esi
  4566ab:	mov    esp,0xc4f0892c
  4566b0:	xor    al,0x91
  4566b2:	lock int3 
  4566b4:	sub    al,0x89
  4566b6:	lock aam 0x94
  4566b9:	and    eax,esi
  4566bb:	fmul   QWORD PTR [ecx+ebp*1-0x6e6b1b10]
  4566c2:	lock in al,dx
	...
  4566d8:	mov    WORD PTR [ecx+0x4174f4f0],cs
  4566de:	icebp  
  4566df:	cld    
  4566e0:	ins    BYTE PTR es:[edi],dx
  4566e1:	f2xm1  
  4566e3:	lock pushw es
  4566e6:	stc    
  4566e7:	lock push esi
  4566e9:	push   es
  4566ea:	icebp  
  4566eb:	lock jbe 0x4566f4
  4566ee:	leave  
  4566ef:	lock jbe 0x4566f8
  4566f2:	shl    eax,1
  4566f4:	inc    esi
  4566f5:	push   es
  4566f6:	mov    ecx,0xb10636f0
  4566fb:	lock ss push es
  4566fe:	sub    ecx,esi
  456700:	ss push es
  456702:	mov    cl,0xf0
  456704:	es push es
  456706:	mov    ecx,0x39059ef0
  45670b:	lock cs add eax,0x52ef031
  456712:	dec    ecx
  456713:	lock cs add eax,0x53ef051
  45671a:	cmp    eax,esi
  45671c:	dec    esi
  45671d:	add    eax,0x52ef031
  456722:	jmp    0xf14a9622
  456727:	sti    
  456728:	pop    esi
  456729:	adc    ecx,edi
  45672b:	sti    
  45672c:	outs   dx,BYTE PTR ds:[esi]
  45672d:	adc    ecx,esi
  45672f:	sti    
  456730:	outs   dx,BYTE PTR ds:[esi]
  456731:	adc    ecx,ecx
  456733:	sti    
  456734:	outs   dx,BYTE PTR ds:[esi]
  456735:	adc    ecx,edx
  456737:	sti    
  456738:	adc    DWORD PTR ds:[ecx+0xfb],edi
	...
  45674f:	add    BYTE PTR [esi+0x11],cl
  456752:	mov    cl,0xfb
  456754:	adc    DWORD PTR cs:[ecx],ebp
  456757:	cld    
  456758:	adc    DWORD PTR cs:[ecx],esi
  45675b:	cld    
  45675c:	sahf   
  45675d:	adc    DWORD PTR [ecx],edi
  45675f:	cld    
  456760:	adc    DWORD PTR cs:[ecx],esi
  456763:	cld    
  456764:	adc    DWORD PTR cs:[ecx-0x4],ecx
  456768:	adc    DWORD PTR cs:[ecx-0x4],edx
  45676c:	adc    DWORD PTR ds:[ecx],eax
  45676f:	cmp    BYTE PTR [esi-0x49cfc743],bh
  456775:	lds    edi,FWORD PTR [eax]
  456777:	push   0x7038cdae
  45677c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  45677d:	call   0xe9f6:0x4c999b37
  456784:	loope  0x45675d
  456786:	add    BYTE PTR [ebp+0x66],bh
  456789:	fld    DWORD PTR [eax]
  45678b:	mov    al,0x8e
  45678d:	ss xor ebx,ebx
  456790:	jbe    0x456808
  456792:	xor    BYTE PTR [edi],dh
  456794:	outs   dx,DWORD PTR ds:[esi]
  456795:	xor    DWORD PTR [eax],0xfffffff9
  456798:	jae    0x45677e
  45679a:	xor    dl,BYTE PTR [eax]
  45679c:	jo     0x45679e
  45679e:	xor    ebp,DWORD PTR [esi]
  4567a0:	push   eax
  4567a1:	out    0x31,eax
  4567a3:	adc    BYTE PTR [ecx+0x2e],dl
  4567a6:	xor    dl,BYTE PTR [ecx-0x7fd39aae]
  4567ac:	push   ebx
  4567ad:	sub    DWORD PTR [eax*2-0x5dd0f2cd],ebp
	...
  4567c8:	inc    edi
  4567c9:	pushf  
  4567ca:	cs ret 
  4567cc:	aas    
  4567cd:	mov    edi,0x5b346a2e
  4567d2:	das    
  4567d3:	pop    edi
  4567d4:	or     al,0x1f
  4567d6:	das    
  4567d7:	std    
  4567d8:	pop    es
  4567d9:	dec    esp
  4567da:	das    
  4567db:	out    0xfc,al
  4567dd:	or     BYTE PTR [esi],ch
  4567df:	lods   al,BYTE PTR ds:[esi]
  4567e0:	hlt    
  4567e1:	pushf  
  4567e2:	sub    eax,0x2dd00c7e
  4567e7:	dec    ebp
  4567e8:	add    eax,0xfc902e7a
  4567ed:	jp     0x45681d
  4567ef:	scas   eax,DWORD PTR es:[edi]
  4567f0:	hlt    
  4567f1:	pop    ds
  4567f2:	cs int 0xcc
  4567f5:	inc    ecx
  4567f6:	cs fld st(4)
  4567f9:	cmp    eax,0x4fc7002e
  4567fe:	xor    bh,BYTE PTR [eax]
  456800:	adc    al,0x4d
  456802:	jb     0x45683c
  456804:	jmp    0xc450:0x38ac4f
  45680b:	cmp    dh,dl
  45680d:	dec    edi
  45680e:	(bad)  
  45680f:	cmp    BYTE PTR [ecx-0x58c6e8b4],ch
  456815:	dec    esp
  456816:	and    eax,0x3e4e4939
  45681b:	cmp    DWORD PTR [eax+0x4e],ebp
  45681e:	cmp    DWORD PTR [ecx],0x39a34d26
  456824:	and    cl,BYTE PTR [ebp-0x61]
  456827:	cmp    DWORD PTR [edi+0x4d],eax
  45682a:	leave  
  45682b:	cmp    DWORD PTR [eax],eax
	...
  45683d:	add    BYTE PTR [eax],al
  45683f:	add    BYTE PTR [edx],ah
  456841:	dec    ebp
  456842:	int3   
  456843:	cmp    DWORD PTR [edi],ebx
  456845:	dec    ebp
  456846:	jmp    0x996b784
  45684b:	cmp    cl,BYTE PTR [edi+0x51]
  45684e:	and    edi,DWORD PTR [edx]
  456850:	jae    0x4568a1
  456852:	xor    al,0x3a
  456854:	not    DWORD PTR [eax+0x44]
  456857:	cmp    cl,BYTE PTR [ebx-0x5cc51fb0]
  45685d:	push   eax
  45685e:	jmp    0x403b:0x2450393a
  456865:	push   eax
  456866:	pusha  
  456867:	cmp    esp,ebx
  456869:	dec    edi
  45686a:	je     0x4568a7
  45686c:	mov    ebx,0x3b3ba44f
  456871:	dec    edi
  456872:	(bad)  
  456873:	cmp    ebx,DWORD PTR [ebp+0x4f]
  456876:	add    edi,DWORD PTR [edx+eax*1]
  456879:	inc    ebx
  45687a:	sbb    edi,DWORD PTR [edi+ebx*1]
  45687d:	inc    ebx
  45687e:	daa    
  45687f:	cmp    al,0x3b
  456881:	push   ecx
  456882:	pusha  
  456883:	cmp    al,0x80
  456885:	push   ecx
  456886:	cmp    DWORD PTR [edx+eiz*2],0x96bbf959
  45688d:	mov    edi,ecx
  45688f:	jns    0x456820
  456891:	(bad)  
  456892:	out    dx,al
  456893:	dec    eax
  456894:	test   bl,bh
  456896:	out    dx,al
  456897:	dec    esp
  456898:	jl     0x456854
  45689a:	out    dx,al
  45689b:	bnd je 0x456890
  45689e:	jmp    0x45688b
  4568a0:	ins    DWORD PTR es:[edi],dx
  4568a1:	inc    eax
  4568a2:	xchg   edx,eax
  4568a3:	add    al,BYTE PTR [eax]
	...
  4568b5:	add    BYTE PTR [eax],al
  4568b7:	add    BYTE PTR [edx+0x50],ah
  4568ba:	add    eax,DWORD PTR [eax]
  4568bc:	bound  ecx,QWORD PTR [esi-0xe]
  4568bf:	adc    edx,DWORD PTR [edx+0x30]
  4568c2:	repnz aaa 
  4568c4:	push   edx
  4568c5:	adc    esi,edx
  4568c7:	dec    edx
  4568c8:	push   edx
  4568c9:	out    0xec,al
  4568cb:	ins    DWORD PTR es:[edi],dx
  4568cc:	xor    bh,BYTE PTR [ebx-0x6acd6d14]
  4568d2:	in     al,dx
  4568d3:	lods   eax,DWORD PTR ds:[esi]
  4568d4:	xor    dh,BYTE PTR [ebp+ebp*8-0x42]
  4568d8:	xor    al,BYTE PTR [edx]
  4568da:	in     eax,dx
  4568db:	aam    0x92
  4568dd:	lods   eax,DWORD PTR ds:[esi]
  4568de:	in     al,dx
  4568df:	std    
  4568e0:	xchg   edx,eax
  4568e1:	loopne 0x4568d4
  4568e3:	and    edx,DWORD PTR [ebx-0x6cbc0c7f]
  4568e9:	leave  
  4568ea:	icebp  
  4568eb:	call   0xd73:0xd5f1c473
  4568f2:	repnz push DWORD PTR [ebx-0x80]
  4568f6:	lock xor BYTE PTR [eax-0x36],0xf2
  4568fb:	fist   DWORD PTR [eax+0x5e]
  4568fe:	icebp  
  4568ff:	addr16 push ecx
  456901:	push   0xa1517df1
  456906:	out    dx,eax
  456907:	out    0x51,eax
  456909:	dec    eax
  45690a:	out    0x17,al
  45690c:	ss mov esp,esi
  45690f:	cmp    ebp,DWORD PTR [esi]
  456911:	ja     0x4568f9
  456913:	push   esp
  456914:	fld    DWORD PTR ss:[edx-0x47fb4311]
  45691b:	out    dx,eax
	...
  456930:	lods   al,BYTE PTR ds:[esi]
  456931:	add    al,0xe7
  456933:	out    dx,al
  456934:	pop    esp
  456935:	add    al,0x11
  456937:	out    dx,eax
  456938:	push   edx
  456939:	add    al,0x37
  45693b:	out    dx,eax
  45693c:	aad    0x3
  45693e:	mov    ch,dh
  456940:	push   es
  456941:	add    al,0x9b
  456943:	out    dx,al
  456944:	imul   eax,DWORD PTR [ebx],0xffffffce
  456947:	in     eax,dx
  456948:	push   esi
  456949:	add    ecx,DWORD PTR [edx]
  45694b:	out    dx,al
  45694c:	xor    BYTE PTR [ebx],al
  45694e:	addr16 in eax,dx
  456950:	cli    
  456951:	add    cl,BYTE PTR [edi-0x13]
  456954:	stos   DWORD PTR es:[edi],eax
  456955:	add    bl,BYTE PTR [esp+ebp*8-0xe]
  456959:	add    DWORD PTR [edx-0x5ffe4d14],esi
  45695f:	in     al,dx
  456960:	xchg   esp,eax
  456961:	add    DWORD PTR [esi+0x6c017eec],eax
  456967:	in     al,dx
  456968:	add    dl,BYTE PTR [ecx]
  45696a:	fsincos 
  45696c:	hlt    
  45696d:	adc    BYTE PTR [ecx+0x230223fb],cl
  456973:	sti    
  456974:	dec    ecx
  456975:	add    dh,dl
  456977:	cli    
  456978:	add    BYTE PTR [edx],0xa5
  45697b:	cli    
  45697c:	rol    BYTE PTR [edx],cl
  45697e:	pop    edi
  45697f:	cli    
  456980:	add    eax,DWORD PTR [ebx]
  456982:	jp     0x45697e
  456984:	adc    BYTE PTR [ebx],al
  456986:	cs cli 
  456988:	sahf   
  456989:	add    edx,DWORD PTR [ebp-0x7]
  45698c:	call   0x383ea294
  456991:	add    al,0x14
  456993:	stc    
	...
  4569a8:	push   0xb3f8a004
  4569ad:	add    al,0x90
  4569af:	clc    
  4569b0:	jecxz  0x4569b6
  4569b2:	push   eax
  4569b3:	clc    
  4569b4:	mov    edx,0xfa230104
  4569b9:	xor    edi,DWORD PTR [edx]
  4569bb:	jmp    0x4569b2
  4569bd:	sub    esi,DWORD PTR ds:0x3534f2c3
  4569c3:	pop    es
  4569c4:	rol    DWORD PTR [ecx],cl
  4569c6:	xor    al,0x38
  4569c8:	shr    DWORD PTR [esi+0x34],cl
  4569cb:	xchg   ebx,edx
  4569cd:	shl    BYTE PTR [esi],cl
  4569cf:	fcom   st(3)
  4569d1:	xchg   ebp,eax
  4569d2:	ss jns 0x456985
  4569d5:	ds aaa 
  4569d7:	mov    ebp,0x2735ebb0
  4569dc:	mov    cl,0x9e
  4569de:	xor    eax,0x35aeb13f
  4569e3:	pop    es
  4569e4:	xchg   ecx,eax
  4569e5:	mov    esi,0x1a911f35
  4569ea:	ss mov cl,0x91
  4569ed:	ss ss jmp 0xb94644f5
  4569f4:	data16 fld DWORD PTR [eax]
  4569f7:	loope  0x456a6a
  4569f9:	in     al,dx
  4569fa:	xor    BYTE PTR [ecx-0x38cf6d8f],bh
  456a00:	jno    0x4569ba
  456a02:	xor    BYTE PTR [esi+edx*2+0x7f],dh
  456a06:	xor    DWORD PTR [eax],edi
  456a08:	dec    esi
  456a09:	xor    DWORD PTR [ecx],esi
  456a0b:	jmp    0x456a10
	...
  456a20:	push   esi
  456a21:	repz das 
  456a23:	add    eax,0xb12f9a4f
  456a28:	ss sahf 
  456a2a:	das    
  456a2b:	int3   
  456a2c:	imul   esi,DWORD PTR cs:[eax],0xffffff85
  456a30:	aaa    
  456a31:	jle    0x456a63
  456a33:	das    
  456a34:	das    
  456a35:	pop    ds
  456a36:	xor    BYTE PTR [edi+edx*1],al
  456a39:	inc    edi
  456a3a:	xor    ah,bh
  456a3c:	psllq  mm6,QWORD PTR [edx]
  456a3f:	pushf  
  456a40:	pop    ss
  456a41:	mov    ds:0x4e8a0032,eax
  456a46:	xchg   ebx,eax
  456a47:	xor    ch,BYTE PTR [edx+0x5232a74f]
  456a4d:	dec    edi
  456a4e:	xlat   BYTE PTR ds:[ebx]
  456a4f:	xor    bh,dh
  456a51:	dec    ebp
  456a52:	and    BYTE PTR [ebx],dh
  456a54:	dec    ebx
  456a55:	push   eax
  456a56:	xor    al,0x33
  456a58:	xor    BYTE PTR [eax+0x79],dl
  456a5b:	xor    edi,DWORD PTR [edi+ecx*2]
  456a5e:	mov    cl,0x33
  456a60:	fmul   QWORD PTR [esi-0x3b]
  456a63:	xor    eax,DWORD PTR [edi+ecx*2]
  456a66:	cmc    
  456a67:	xor    eax,eax
  456a69:	dec    edi
  456a6a:	ss xor al,0x7d
  456a6d:	inc    ecx
  456a6e:	pop    edx
  456a6f:	xor    al,0x42
  456a71:	push   eax
  456a72:	mov    dh,BYTE PTR [eax+eiz*8]
  456a75:	dec    edi
  456a76:	mov    al,ds:0xa6503234
  456a7b:	xor    al,0x34
  456a7d:	push   eax
  456a7e:	mov    dh,0x34
  456a80:	(bad)  
  456a81:	dec    edi
  456a82:	lds    esi,FWORD PTR [eax+eax*1]
	...
  456a95:	add    BYTE PTR [eax],al
  456a97:	add    BYTE PTR [edx+0x5d352040],ch
  456a9d:	inc    edx
  456a9e:	pop    edi
  456a9f:	xor    eax,0x35c1413b
  456aa4:	jns    0x456ae7
  456aa6:	adc    BYTE PTR [esi],dh
  456aa8:	pop    esi
  456aa9:	inc    ebx
  456aaa:	sbb    dh,BYTE PTR [esi]
  456aac:	jb     0x456af1
  456aae:	and    eax,0x36437036
  456ab3:	ss add al,0x41
  456ab6:	popa   
  456ab7:	xor    DWORD PTR ss:[ecx+0x73],eax
  456abb:	inc    DWORD PTR ss:[eax+0x75]
  456abf:	ss mov edi,0xdb369840
  456ac5:	inc    eax
  456ac6:	test   eax,0xb8408b36
  456acb:	ss dec edx
  456acd:	inc    eax
  456ace:	clc    
  456acf:	bound  edi,QWORD PTR ss:[eax]
  456ad2:	sti    
  456ad3:	pop    ds
  456ad4:	push   ebp
  456ad5:	pushf  
  456ad6:	cli    
  456ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  456ad8:	dec    ebp
  456ad9:	inc    edi
  456ada:	clc    
  456adb:	sbb    edi,DWORD PTR [edx]
  456add:	push   ss
  456ade:	jmp    0x2a90:0xe9c43a46
  456ae5:	stc    
  456ae6:	jmp    0xe9ee9620
  456aeb:	mov    WORD PTR [ebx-0x67ef157b],ds
  456af1:	repz out 0x5b,al
  456af4:	mov    BYTE PTR [edi-0x5e77761a],dl
  456afa:	out    0x8d,al
	...
  456b10:	js     0x456b64
  456b12:	out    0xa7,eax
  456b14:	js     0x456b74
  456b16:	out    0xb2,eax
  456b18:	push   0x68bfe6ca
  456b1d:	mov    edi,esp
  456b1f:	(bad)  
  456b20:	pop    eax
  456b21:	sbb    bh,ah
  456b23:	(bad)  
  456b24:	pop    eax
  456b25:	push   esp
  456b26:	out    0x3,eax
  456b28:	dec    ecx
  456b29:	dec    edi
  456b2a:	in     eax,0x15
  456b2c:	dec    ecx
  456b2d:	adc    esp,ebp
  456b2f:	cmp    DWORD PTR es:[ebp-0xfc6c51b],ecx
  456b36:	jecxz  0x456b76
  456b38:	sub    ebp,esp
  456b3a:	jecxz  0x456b89
  456b3c:	sub    DWORD PTR [eiz*8-0x1aeb66a4],ebx
  456b43:	jo     0x456ade
  456b45:	cld    
  456b46:	jecxz  0x456b66
  456b48:	mov    ss,ebp
  456b4a:	lock pop ecx
  456b4c:	xchg   BYTE PTR [esi+0x147f46f0],dl
  456b52:	out    0x72,eax
  456b54:	ja     0x456b5c
  456b56:	out    0xaf,al
  456b58:	ins    DWORD PTR es:[edi],dx
  456b59:	out    0xef,eax
  456b5b:	jmp    DWORD PTR ds:0x6073e7d9
  456b61:	fldenv [ebx+0x4]
  456b64:	(bad)  
  456b65:	fldcw  WORD PTR [ecx+0x2d0924f3]
  456b6b:	hlt    
  456b6c:	sti    
  456b6d:	or     ch,cl
  456b6f:	repnz cmp eax,0xf29808
	...
  456b85:	add    BYTE PTR [eax],al
  456b87:	add    ch,dl
  456b89:	pop    es
  456b8a:	xor    al,0xf3
  456b8c:	and    ecx,DWORD PTR [eax]
  456b8e:	cld    
  456b8f:	repnz clc 
  456b91:	pop    es
  456b92:	fcomi  st,st(2)
  456b94:	mov    BYTE PTR [ebx],cl
  456b96:	inc    esi
  456b97:	test   BYTE PTR [ebx],0xb
  456b9a:	jle    0x456b91
  456b9c:	dec    BYTE PTR [edx]
  456b9e:	xchg   ebx,eax
  456b9f:	cmc    
  456ba0:	sahf   
  456ba1:	or     dl,BYTE PTR [ebp+esi*8-0xa36f568]
  456ba8:	xchg   esp,eax
  456ba9:	or     bh,BYTE PTR [ebp-0x3f5a10b]
  456baf:	hlt    
  456bb0:	js     0x456bbc
  456bb2:	fxtract 
  456bb4:	and    BYTE PTR [edx],cl
  456bb6:	xor    dh,ch
  456bb8:	xor    ecx,DWORD PTR [edx]
  456bba:	jb     0x456bb0
  456bbc:	ror    DWORD PTR [ecx],1
  456bbe:	test   esp,esi
  456bc0:	pop    ebp
  456bc1:	or     eax,0xcddf82f
  456bc6:	enter  0x3cf6,0xc
  456bca:	inc    ebx
  456bcb:	stc    
  456bcc:	scas   eax,DWORD PTR es:[edi]
  456bcd:	push   cs
  456bce:	jne    0x456bc9
  456bd0:	add    cl,BYTE PTR [esi]
  456bd2:	jb     0x456bcc
  456bd4:	adc    ecx,DWORD PTR ds:0x286ebc4
  456bda:	dec    eax
  456bdb:	jmp    0xcc:0xed43fff0
  456be2:	stc    
  456be3:	out    dx,eax
  456be4:	data16 add al,0xa8
  456be7:	lock stos BYTE PTR es:[edi],al
  456be9:	add    al,0x1
  456beb:	cdq    
	...
  456c00:	xor    dl,BYTE PTR [esi-0x42cd71cb]
  456c06:	xor    eax,0x35c81296
  456c0b:	mov    eax,ds:0x4035cc12
  456c10:	adc    cl,BYTE PTR [eax+0x36]
  456c13:	jmp    0xc54643b9
  456c18:	pusha  
  456c19:	fld    DWORD PTR [eax]
  456c1b:	jns    0x456c0e
  456c1d:	cmp    eax,0xaf0d131
  456c22:	xor    BYTE PTR [ebp+0x692fa6f0],bl
  456c28:	xlat   BYTE PTR ds:[ebx]
  456c29:	push   0x30
  456c2b:	push   ebp
  456c2c:	sar    BYTE PTR [edi+0x1dd09632],1
  456c32:	xor    edi,DWORD PTR [edx-0x46ccd930]
  456c38:	mov    al,0xcf
  456c3a:	xor    edi,esi
  456c3c:	mov    al,0x29
  456c3e:	sub    eax,0x2bf5aa97
  456c43:	sub    ebp,DWORD PTR [ebx-0x64dbd447]
  456c49:	sub    al,0x2c
  456c4b:	cli    
  456c4c:	(bad)  
  456c4d:	cld    
  456c4e:	ficom  DWORD PTR cs:[edi-0x73c7d0fa]
  456c55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  456c56:	adc    dh,BYTE PTR cs:[edx+eax*8+0x2e]
  456c5b:	fs ins BYTE PTR es:[edi],dx
  456c5d:	push   eax
  456c5e:	das    
  456c5f:	push   esi
  456c60:	je     0x456ce0
  456c62:	das    
  456c63:	xor    BYTE PTR [eax],al
	...
  456c75:	add    BYTE PTR [eax],al
  456c77:	add    BYTE PTR [ecx+ebp*1+0x2f],ch
  456c7b:	inc    edx
  456c7c:	push   esp
  456c7d:	xor    ebp,DWORD PTR [edi]
  456c7f:	pop    edi
  456c80:	dec    esp
  456c81:	xor    eax,0x943e0b2e
  456c86:	cmp    dh,al
  456c88:	cmp    ebp,ecx
  456c8a:	cmp    BYTE PTR [eax],al
  456c8c:	xor    BYTE PTR ds:0x36623910,0x3d
  456c93:	cmp    edi,esi
  456c95:	xor    al,0xa0
  456c97:	cmp    esp,eax
  456c99:	xor    DWORD PTR [ebp+0x3a],esp
  456c9c:	scas   eax,DWORD PTR es:[edi]
  456c9d:	das    
  456c9e:	pushf  
  456c9f:	cmp    ch,BYTE PTR [esi+0x443abb2f]
  456ca5:	das    
  456ca6:	fnstcw WORD PTR [edx]
  456ca8:	pop    ebx
  456ca9:	das    
  456caa:	add    DWORD PTR [ebx],edi
  456cac:	sbb    ebp,DWORD PTR [edi]
  456cae:	dec    esp
  456caf:	cmp    ebp,DWORD PTR [esi+0x2f]
  456cb2:	mov    WORD PTR [ebx],?
  456cb4:	xor    BYTE PTR gs:[eax+0x3c],dh
  456cb8:	cdq    
  456cb9:	dec    ecx
  456cba:	mov    ebx,0xf533a73c
  456cbf:	cmp    al,0xcf
  456cc1:	dec    eax
  456cc2:	inc    ebx
  456cc3:	cmp    eax,0x3d884a84
  456cc8:	and    al,0x49
  456cca:	mov    bh,BYTE PTR ds:0x3d8c4942
  456cd0:	call   0xe6830b1d
  456cd5:	dec    eax
  456cd6:	mov    al,0x3d
  456cd8:	sub    al,0x49
  456cda:	mov    dl,0x3d
	...
  456cf0:	retf   0xb448
  456cf3:	cmp    eax,0x3dc648d0
  456cf8:	into   
  456cf9:	dec    eax
  456cfa:	fdivr  DWORD PTR ds:0x3dda48b4
  456d00:	ror    BYTE PTR [eax-0x24],cl
  456d03:	cmp    eax,0x3dee48f8
  456d08:	test   BYTE PTR [eax+0x0],0x3e
  456d0c:	jl     0x456d43
  456d0e:	add    bh,BYTE PTR [esi]
  456d10:	pop    edx
  456d11:	xor    eax,0x33603e04
  456d16:	push   ss
  456d17:	ds (bad) 
  456d19:	aad    0xe6
  456d1b:	sub    DWORD PTR [ebx+eax*2-0x2683d41c],eax
  456d22:	out    0x35,al
  456d24:	je     0x456d95
  456d26:	in     al,0x47
  456d28:	ins    BYTE PTR es:[edi],dx
  456d29:	jge    0x456d0f
  456d2b:	push   ecx
  456d2c:	fs imul esp,esp,0x53
  456d30:	pop    esp
  456d31:	push   ecx
  456d32:	in     al,0x5d
  456d34:	push   esp
  456d35:	addr16 in al,0x6f
  456d38:	dec    esp
  456d39:	gs in  al,0x79
  456d3c:	inc    esp
  456d3d:	push   ebx
  456d3e:	in     al,0x7b
  456d40:	cmp    al,0xc9
  456d42:	jecxz  0x456cc9
  456d44:	xor    al,0x9f
  456d46:	jecxz  0x456cdf
  456d48:	sub    al,0xad
  456d4a:	jecxz  0x456ced
  456d4c:	and    al,0x9b
  456d4e:	jecxz  0x456cf3
  456d50:	pushf  
  456d51:	popa   
  456d52:	out    0xad,eax
	...
  456d68:	xchg   esp,eax
  456d69:	ja     0x456d52
  456d6b:	mov    edi,0xc9e7758c
  456d70:	test   BYTE PTR [ebx-0x19],ah
  456d73:	retf   
  456d74:	jl     0x456def
  456d76:	out    0xd5,eax
  456d78:	je     0x456d89
  456d7a:	out    0xe7,eax
  456d7c:	ins    BYTE PTR es:[edi],dx
  456d7d:	sbb    eax,0x8b64f1e7
  456d82:	out    0x5,eax
  456d84:	pop    ebp
  456d85:	inc    edx
  456d86:	in     eax,0x51
  456d88:	push   ebp
  456d89:	in     al,0xe3
  456d8b:	dec    DWORD PTR [ebp+0x62025230]
  456d91:	in     al,dx
  456d92:	cld    
  456d93:	jmp    DWORD PTR [edx+0x20]
  456d96:	repnz pop ds
  456d98:	xor    ch,BYTE PTR [esi+0x73295ec]
  456d9e:	in     eax,dx
  456d9f:	mov    ebp,0x2eed5732
  456da4:	xchg   ebx,eax
  456da5:	fnstenv [eax-0xd]
  456da8:	test   DWORD PTR [edi],0x816f39b
  456dae:	es repz push ds
  456db1:	or     bl,ch
  456db3:	icebp  
  456db4:	test   BYTE PTR [edi],al
  456db6:	cdq    
  456db7:	icebp  
  456db8:	scas   eax,DWORD PTR es:[edi]
  456db9:	pop    es
  456dba:	jecxz  0x456dac
  456dbc:	js     0x456dc4
  456dbe:	push   0xfffffff1
  456dc0:	aam    0x5
  456dc2:	inc    esi
  456dc3:	icebp  
  456dc4:	into   
  456dc5:	add    eax,0x631f139
  456dca:	and    cl,dh
	...
  456de0:	pop    ecx
  456de1:	or     al,0xbd
  456de3:	neg    BYTE PTR [edx-0x19097ef4]
  456de9:	or     ebx,DWORD PTR [ecx-0x9]
  456dec:	out    0xb,al
  456dee:	popa   
  456def:	not    esi
  456df1:	or     ecx,DWORD PTR [ecx-0x9]
  456df4:	(bad)  
  456df5:	or     eax,DWORD PTR [ecx-0x9]
  456df8:	push   es
  456df9:	or     al,0x99
  456dfb:	test   BYTE PTR [esi],0xc
  456dfe:	mov    eax,ds:0xa90c16f6
  456e03:	test   BYTE PTR [esi],0xc
  456e06:	mov    eax,ds:0x7e0b09f6
  456e0b:	jmp    0xfe44:0xe8f6fecb
  456e12:	in     al,0xec
  456e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  456e15:	inc    ecx
  456e16:	call   0xb41ece3e
  456e1b:	add    esp,DWORD PTR [edx-0x27]
  456e1e:	stc    
  456e1f:	icebp  
  456e20:	inc    esp
  456e21:	pop    es
  456e22:	arpl   cx,si
  456e24:	leave  
  456e25:	push   es
  456e26:	nop
  456e27:	icebp  
  456e28:	xor    eax,DWORD PTR [esi]
  456e2a:	adc    dh,cl
  456e2c:	dec    esp
  456e2d:	or     ebx,DWORD PTR [ecx]
  456e2f:	imul   dl
  456e31:	add    BYTE PTR [ecx],al
  456e33:	hlt    
  456e34:	jns    0x456e8e
  456e36:	cmp    DWORD PTR [ecx+ecx*2+0x52],esp
  456e3a:	cmp    DWORD PTR [ecx+ecx*2+0x6a],esi
  456e3e:	cmp    DWORD PTR [ecx+edi*1+0x62],esi
  456e42:	cmp    DWORD PTR [eax+eax*1+0x0],esi
	...
  456e56:	add    BYTE PTR [eax],al
  456e58:	cmp    DWORD PTR [edx+0x39],edi
  456e5b:	test   BYTE PTR [ecx+0x72],cl
  456e5e:	cmp    DWORD PTR [ecx+ecx*2+0x3974398a],edx
  456e65:	cmp    BYTE PTR [ecx],0x74
  456e68:	cmp    DWORD PTR [edx],ebx
  456e6a:	cmp    DWORD PTR [ecx+ecx*1],esp
  456e6d:	adc    bh,BYTE PTR [ecx]
  456e6f:	xor    al,0x9
  456e71:	sub    bh,BYTE PTR [ecx]
  456e73:	xor    al,0xf9
  456e75:	and    DWORD PTR [ecx],edi
  456e77:	xor    al,0xf9
  456e79:	cmp    DWORD PTR [ecx],edi
  456e7b:	add    al,0x9
  456e7d:	xor    bh,BYTE PTR [ecx]
  456e7f:	adc    al,0x9
  456e81:	dec    edx
  456e82:	cmp    esp,esi
  456e84:	clc    
  456e85:	inc    ecx
  456e86:	cmp    esp,esi
  456e88:	clc    
  456e89:	fnstenv [edi]
  456e8b:	in     al,0xc8
  456e8d:	shl    DWORD PTR [edi],1
  456e8f:	hlt    
  456e90:	(bad)  
  456e91:	jmp    0xe20462cd
  456e96:	aaa    
  456e97:	hlt    
  456e98:	mov    dh,0xf9
  456e9a:	aaa    
  456e9b:	add    al,0xcf
  456e9d:	icebp  
  456e9e:	aaa    
  456e9f:	adc    al,0xc7
  456ea1:	or     DWORD PTR [eax],edi
  456ea3:	hlt    
  456ea4:	mov    esi,0xb6f43801
  456ea9:	cdq    
  456eaa:	aaa    
  456eab:	and    al,0x8f
  456ead:	xchg   ecx,eax
  456eae:	aaa    
  456eaf:	xor    al,0x87
  456eb1:	test   eax,0xa17f3437
  456eb6:	aaa    
  456eb7:	xor    al,0x77
  456eb9:	mov    ecx,0x437
	...
  456ece:	add    BYTE PTR [eax],al
  456ed0:	(bad)  
  456ed1:	mov    cl,0x37
  456ed3:	add    BYTE PTR [esi+0x2e],cl
  456ed6:	jno    0x456f11
  456ed8:	jbe    0x456f07
  456eda:	jns    0x456f15
  456edc:	outs   dx,BYTE PTR ds:[esi]
  456edd:	sub    eax,0x2ec63981
  456ee2:	mov    DWORD PTR [ecx],edi
  456ee4:	into   
  456ee5:	cs xchg ecx,eax
  456ee7:	cmp    esi,edx
  456ee9:	cs cdq 
  456eeb:	cmp    esi,ecx
  456eed:	cs clc 
  456eef:	cmp    ah,dh
  456ef1:	das    
  456ef2:	push   edx
  456ef3:	cmp    al,0xf4
  456ef5:	aaa    
  456ef6:	ins    DWORD PTR es:[edi],dx
  456ef7:	cmp    al,0xc3
  456ef9:	xor    DWORD PTR [eax+0x731663c],edi
  456eff:	cmp    eax,0x3d3b3264
  456f04:	cwde   
  456f05:	xor    bh,BYTE PTR [eax-0x52cd94c3]
  456f0b:	ds inc ecx
  456f0d:	xor    ecx,esi
  456f0f:	ds in  al,0x32
  456f12:	idiv   bh
  456f14:	or     ecx,DWORD PTR [ebx+eax*1]
  456f17:	add    bh,ch
  456f19:	fild   DWORD PTR [eax]
  456f1b:	add    bl,dl
  456f1d:	dec    ebx
  456f1e:	outs   dx,BYTE PTR ds:[esi]
  456f1f:	xor    BYTE PTR [edi+0x45],ah
  456f22:	xor    esi,DWORD PTR [ecx]
  456f24:	mov    DWORD PTR [esi+0x46],eax
  456f27:	xor    DWORD PTR [ecx],ebx
  456f29:	inc    esi
  456f2a:	jno    0x456f5d
  456f2c:	test   DWORD PTR [eax+edx*8+0x31],0x31e744ff
	...
  456f48:	lods   eax,DWORD PTR ds:[esi]
  456f49:	inc    ebp
  456f4a:	daa    
  456f4b:	xor    bh,BYTE PTR [esi+0x47]
  456f4e:	pop    edx
  456f4f:	xor    al,BYTE PTR ds:0xc032b046
  456f55:	inc    ebp
  456f56:	iret   
  456f57:	xor    dh,ah
  456f59:	inc    ebp
  456f5a:	(bad)  
  456f5b:	xor    cl,BYTE PTR [ebp+0x62333046]
  456f61:	sub    ch,bh
  456f63:	dec    esp
  456f64:	xor    edi,esp
  456f66:	in     eax,dx
  456f67:	mov    eax,ds:0xdaef7131
  456f6c:	xor    DWORD PTR [edi+ebp*8-0x1a],edx
  456f70:	xor    DWORD PTR [edx],esp
  456f72:	out    0xd,al
  456f74:	xchg   esi,eax
  456f75:	jl     0x456f5d
  456f77:	pop    eax
  456f78:	mov    cs,WORD PTR ds:0xb29673e6
  456f7e:	in     eax,0x9a
  456f80:	mov    ds,WORD PTR [eax-0x1a]
  456f83:	mov    dh,0x76
  456f85:	cmc    
  456f86:	in     eax,0xd6
  456f88:	outs   dx,BYTE PTR ds:[esi]
  456f89:	cld    
  456f8a:	in     eax,0xff
  456f8c:	jbe    0x456fb5
  456f8e:	icebp  
  456f8f:	adc    al,0x6f
  456f91:	cmp    eax,0x665736f1
  456f96:	icebp  
  456f97:	push   ebx
  456f98:	dec    edi
  456f99:	pop    esp
  456f9a:	icebp  
  456f9b:	jne    0x456ff4
  456f9d:	(bad)
  456fa0:	dec    edi
  456fa1:	pushf  
  456fa2:	lock shl BYTE PTR [edi],0x8
  456fa6:	icebp  
  456fa7:	aad    0x2f
  456fa9:	inc    esi
  456faa:	lock adc eax,0x0
	...
  456fc0:	xor    al,0x80
  456fc2:	lock cmp eax,0x63f05d2c
  456fc8:	xchg   esp,eax
  456fc9:	ret    0x91ef
  456fcc:	mov    WORD PTR [edx-0xd],ss
  456fcf:	mov    cl,0x94
  456fd1:	je     0x456fc6
  456fd3:	(bad)  [edi+eiz*1-0x678ac10d]
  456fda:	out    dx,eax
  456fdb:	mov    dh,0x6d
  456fdd:	jp     0x456fcf
  456fdf:	jecxz  0x457056
  456fe1:	cmp    ebp,edx
  456fe3:	daa    
  456fe4:	push   0xfffffff7
  456fe6:	in     al,0x4d
  456fe8:	pop    edx
  456fe9:	int3   
  456fea:	in     al,0x61
  456fec:	pop    edx
  456fed:	fst    DWORD PTR [ebx]
  456fef:	in     al,dx
  456ff0:	jecxz  0x456ff3
  456ff2:	jnp    0x456fe0
  456ff4:	out    dx,eax
  456ff5:	add    DWORD PTR [edx-0x14],eax
  456ff8:	int    0x1
  456ffa:	inc    edi
  456ffb:	in     al,dx
  456ffc:	arpl   WORD PTR [eax],ax
  456ffe:	xor    ch,bl
  457000:	std    
  457001:	push   esi
  457003:	jmp    0x2d:0xeb2e00c1
  45700a:	ins    BYTE PTR es:[edi],dx
  45700b:	jmp    0x457085
  45700d:	add    ecx,DWORD PTR [esi]
  45700f:	out    dx,al
  457010:	mov    al,ds:0x1edcd03
  457015:	add    ebp,DWORD PTR [edx]
  457017:	out    dx,al
  457018:	sbb    al,BYTE PTR [ebx]
  45701a:	fucomip st,st(4)
  45701c:	jl     0x457020
  45701e:	mov    cl,0xec
  457020:	mov    dh,0x2
  457022:	test   ebp,ebp
	...
  457038:	aas    
  457039:	add    ch,bh
  45703b:	out    0xeb,eax
  45703d:	cld    
  45703e:	pop    ds
  45703f:	call   0xe7756d74
  457044:	pop    es
  457045:	cld    
  457046:	jns    0x457032
  457048:	jo     0x457048
  45704a:	fsubr  st,st(0)
  45704c:	cmp    esi,0xd96103e7
  457052:	xchg   DWORD PTR [ebx],eax
  457054:	(bad)  
  457055:	fxch   st(2)
  457057:	repz cmp cl,BYTE PTR [ecx]
  45705a:	xor    ebx,0xf4550954
  457060:	out    dx,al
  457061:	or     BYTE PTR [esi+0x53086ef3],dh
  457067:	repz push edx
  457069:	or     BYTE PTR [ebx-0x11],dh
  45706c:	add    al,BYTE PTR ds:0x3a4eee7
  457072:	lahf   
  457073:	out    dx,al
  457074:	stos   DWORD PTR es:[edi],eax
  457075:	add    ebp,eax
  457077:	icebp  
  457078:	mov    eax,DWORD PTR [esi]
  45707a:	add    ebx,eax
  45707c:	xchg   ebx,eax
  45707d:	sub    eax,0x592fb2f
  457082:	cs adc al,0x7e
  457085:	leave  
  457086:	cmp    BYTE PTR [ebp+0x79],ah
  457089:	dec    ebx
  45708a:	cmp    DWORD PTR [ebx-0x77],ecx
  45708d:	jo     0x4570c8
  45708f:	dec    esi
  457090:	mov    al,ch
  457092:	cmp    ch,BYTE PTR ds:0xb639ed7c
  457098:	jbe    0x45704e
  45709a:	cmp    ebx,edi
	...
  4570b0:	dec    esi
  4570b1:	dec    ebx
  4570b2:	xor    eax,0x339c3cbd
  4570b7:	aad    0x44
  4570b9:	mov    ah,0x36
  4570bb:	aad    0x3b
  4570bd:	shl    BYTE PTR [esi],0x73
  4570c0:	dec    ebx
  4570c1:	cmp    eax,0xd851e9f6
  4570c6:	add    BYTE PTR [ebp-0x2bff269f],bh
  4570cc:	xor    dl,al
  4570ce:	das    
  4570cf:	pop    esi
  4570d0:	adc    BYTE PTR [esi+0x30],bh
  4570d3:	cs adc bl,ah
  4570d6:	xor    bl,BYTE PTR ds:0x47326517
  4570dc:	push   cs
  4570dd:	and    esi,DWORD PTR [edx]
  4570df:	or     dh,dh
  4570e1:	push   cs
  4570e2:	sub    eax,0x2bc504a3
  4570e7:	mov    eax,0x882ea1f3
  4570ec:	repnz mov esp,0xa0d2372d
  4570f2:	cmp    BYTE PTR [ecx+ecx*8-0x43],ch
  4570f6:	cmp    BYTE PTR [ecx],dl
  4570f8:	mov    edi,0xb78d3855
  4570fd:	lea    edi,[edx]
  4570ff:	nop
  457100:	enter  0x3b2c,0x9
  457104:	leave  
  457105:	dec    ebx
  457106:	cmp    al,BYTE PTR [eax]
  457108:	fnstenv [eax]
  45710a:	mov    ecx,0xee309a3b
  45710f:	cmp    edx,DWORD PTR [ecx+esi*1]
  457112:	(bad)  
  457113:	cmp    al,0x0
	...
  457125:	add    BYTE PTR [eax],al
  457127:	add    BYTE PTR [eax+0x32],ah
  45712a:	cmp    bh,BYTE PTR ds:0x3da73218
  457130:	pop    edi
  457131:	xor    ebp,DWORD PTR [eax+0x3e]
  457134:	push   cs
  457135:	xor    edi,DWORD PTR [esi+edi*1+0x4]
  457139:	xor    eax,ebp
  45713b:	fidiv  WORD PTR ds:[ebx]
  45713e:	(bad)  
  457140:	xor    al,0x34
  457142:	push   esi
  457143:	aas    
  457144:	mov    edi,0xef3f9234
  457149:	xor    edx,ebp
  45714b:	aas    
  45714c:	cmp    edi,DWORD PTR [eax]
  45714e:	add    eax,DWORD PTR [eax]
  457150:	iret   
  457151:	aad    0x0
  457153:	add    BYTE PTR [esi+0x45],ch
  457156:	sbb    eax,0x4e480030
  45715b:	xor    BYTE PTR [ebx+0x530ae45],cl
  457161:	inc    ebp
  457162:	xor    BYTE PTR [ecx],dh
  457164:	adc    eax,DWORD PTR [ebp+0x2c]
  457167:	xor    esp,esi
  457169:	inc    esp
  45716a:	inc    ebp
  45716b:	xor    DWORD PTR [eax],esp
  45716d:	inc    ebp
  45716e:	popa   
  45716f:	xor    esp,ebx
  457171:	inc    esp
  457172:	pop    ebp
  457173:	xor    DWORD PTR [ecx+0x71318a46],ecx
  457179:	inc    esi
  45717a:	mov    ds:0xea463031,al
  45717f:	xor    esp,esp
  457181:	inc    esp
  457182:	add    dh,BYTE PTR [edx]
  457184:	test   al,0x49
  457186:	sub    DWORD PTR [edx],esi
  457188:	adc    DWORD PTR [edx+0x36],ecx
  45718b:	xor    al,BYTE PTR [eax]
	...
  45719d:	add    BYTE PTR [eax],al
  45719f:	add    BYTE PTR [ecx+0x3d325747],cl
  4571a5:	dec    edx
  4571a6:	retf   0x6232
  4571a9:	(bad)  
  4571ab:	clc    
  4571ac:	jo     0x4571dd
  4571ae:	repz je 0x457222
  4571b1:	scas   eax,DWORD PTR es:[edi]
  4571b2:	repnz mov eax,ds:0xd4f2c671
  4571b8:	push   ecx
  4571b9:	sbb    dh,bl
  4571bb:	in     eax,dx
  4571bc:	push   ecx
  4571bd:	sbb    eax,0xd95612e6
  4571c2:	lock cs dec esi
  4571c5:	sbb    eax,0xdf3645e6
  4571ca:	lock xchg ebp,eax
  4571cc:	mov    al,cs:0xa536b7e5
  4571d2:	lock retf 0x2a2f
  4571d6:	in     al,0x31
  4571d8:	xchg   esp,eax
  4571d9:	and    ah,0x55
  4571dc:	mov    WORD PTR [edx+0x609485e3],?
  4571e2:	in     al,0xc0
  4571e4:	mov    WORD PTR [ecx],es
  4571e6:	in     al,0xce
  4571e8:	je     0x457189
  4571ea:	jecxz  0x4571ea
  4571ec:	ins    BYTE PTR es:[edi],dx
  4571ed:	dec    ecx
  4571ee:	out    0x45,eax
  4571f0:	jne    0x45726a
  4571f2:	out    0x7f,eax
  4571f4:	ins    DWORD PTR es:[edi],dx
  4571f5:	xor    dl,dh
  4571f7:	add    ah,BYTE PTR [edx-0x28]
  4571fa:	cld    
  4571fb:	jmp    DWORD PTR [edx+0x55]
  4571fe:	out    0xc4,eax
  457200:	dec    ebx
  457201:	mov    eax,0x29e7
	...
  457216:	add    BYTE PTR [eax],al
  457218:	inc    esi
  457219:	and    al,0xde
  45721b:	push   0x3e
  45721d:	(bad)  
  45721e:	call   0xe932a9d7
  457223:	(bad)  [edi]
  457225:	cmp    esp,ebx
  457227:	pop    eax
  457228:	and    al,0xc7
  45722a:	fistp  DWORD PTR [eax-0x240b64]
  457230:	aad    0x30
  457232:	ret    0x6202
  457235:	fstp   DWORD PTR [edi]
  457237:	add    al,0x62
  457239:	fldz   
  45723b:	rep lods eax,DWORD PTR ds:[esi]
  45723d:	or     DWORD PTR [ecx],edi
  45723f:	repz inc esi
  457241:	or     ah,al
  457243:	repz and al,BYTE PTR [edi]
  457246:	push   0xfffffff1
  457248:	aad    0x3
  45724a:	dec    esi
  45724b:	out    dx,al
  45724c:	xor    eax,0x88ebe402
  457251:	add    esi,esi
  457253:	jmp    0xff66:0xeb6f002d
  45725a:	cmp    ch,dl
  45725c:	in     eax,dx
  45725d:	jmp    FWORD PTR [edx+0x4bfe52ea]
  457263:	jmp    0xe5e36e22
  457268:	gs cmp ch,al
  45726b:	shl    DWORD PTR [eax-0x27],cl
  45726e:	inc    ebx
  45726f:	add    al,0x62
  457271:	fldenv [esp+esi*8]
  457274:	push   es
  457275:	or     BYTE PTR [ebp-0x1ff8420d],bl
  45727b:	icebp  
	...
  457290:	pop    ds
  457291:	pop    es
  457292:	push   edi
  457293:	repnz imul eax,DWORD PTR [esi],0x11
  457297:	icebp  
  457298:	fwait
  457299:	push   es
  45729a:	mov    ds:0xb20570f0,eax
  45729f:	out    dx,eax
  4572a0:	nop
  4572a1:	add    eax,0x486eec5
  4572a6:	pop    esp
  4572a7:	out    dx,al
  4572a8:	fld    DWORD PTR [edx]
  4572aa:	jl     0x45729a
  4572ac:	rol    BYTE PTR [edx],0x51
  4572af:	out    dx,al
  4572b0:	mov    dh,0x2
  4572b2:	daa    
  4572b3:	out    dx,al
  4572b4:	pop    ds
  4572b5:	add    edi,edx
  4572b7:	in     al,dx
  4572b8:	add    dh,BYTE PTR cs:[ebp-0x14]
  4572bc:	mov    BYTE PTR [ecx],0x1
  4572bf:	in     eax,dx
  4572c0:	push   esi
  4572c1:	add    DWORD PTR [ecx],eax
  4572c3:	addr16 (bad) 
  4572c5:	pop    ss
  4572c6:	cmp    ebx,edi
  4572c8:	mov    ecx,0xb93637fb
  4572cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4572ce:	aaa    
  4572cf:	push   ebx
  4572d0:	leave  
  4572d1:	lods   eax,DWORD PTR ds:[esi]
  4572d2:	aaa    
  4572d3:	enterw 0x3861,0x81
  4572d8:	mov    eax,0xb8b43816
  4572dd:	leave  
  4572de:	cmp    cl,BYTE PTR [eax]
  4572e0:	mov    BYTE PTR [edx+edi*1+0x3b758831],bl
  4572e7:	xchg   edx,eax
  4572e8:	jnp    0x45732e
  4572ea:	cmp    ecx,DWORD PTR [eax]
  4572ec:	jnp    0x4572a3
  4572ee:	cmp    DWORD PTR [edx+ecx*4+0x1834e9],ecx
	...
  457305:	add    BYTE PTR [eax],al
  457307:	add    BYTE PTR [edx-0x7b1dcadc],cl
  45730d:	call   0xa8c23d45
  457312:	xor    edx,DWORD PTR [esi]
  457314:	inc    ebp
  457315:	stos   DWORD PTR es:[edi],eax
  457316:	xor    ecx,DWORD PTR [ebx+0x3c]
  457319:	sbb    esi,DWORD PTR [esp+eax*4]
  45731c:	inc    esp
  45731d:	sub    esi,DWORD PTR [esi+edx*1]
  457320:	cmp    al,0x8a
  457322:	ss gs inc edi
  457325:	data16 aaa 
  457327:	test   BYTE PTR [edi],bh
  457329:	or     al,0x37
  45732b:	jmp    0x143e:0x6235ed46
  457332:	ss dec esi
  457334:	push   es
  457335:	cmp    esi,esi
  457337:	jmp    0x59464efd
  45733c:	popa   
  45733d:	fld    DWORD PTR [eax]
  45733f:	cli    
  457340:	adc    DWORD PTR [ebx],eax
  457342:	xor    DWORD PTR [esi-0xf],esp
  457345:	sbb    esi,DWORD PTR [ecx]
  457347:	sbb    ecx,esi
  457349:	jmp    0x45737a
  45734b:	mov    eax,esi
  45734d:	xchg   esi,eax
  45734e:	das    
  45734f:	add    dh,cl
  457351:	sub    esi,DWORD PTR [ebx+0x31]
  457354:	jecxz  0x457381
  457356:	je     0x457389
  457358:	mov    al,ds:0x9232312a
  45735d:	sub    al,bl
  45735f:	xor    al,dl
  457361:	unpcklps xmm6,XMMWORD PTR [ebx]
  457364:	pusha  
  457365:	adc    DWORD PTR [edx],ebp
  457367:	xor    al,0x81
  457369:	adc    DWORD PTR [ecx+0x34],edx
	...
  457380:	xlat   BYTE PTR ds:[ebx]
  457381:	adc    ebx,edx
  457383:	xor    al,0xec
  457385:	adc    ebx,eax
  457387:	ss aad 0x13
  45738a:	push   es
  45738b:	aaa    
  45738c:	scas   al,BYTE PTR es:[edi]
  45738d:	adc    edi,DWORD PTR [ecx]
  45738f:	aaa    
  457390:	imul   edx,DWORD PTR [edi+ecx*2],0x7e146b37
  457397:	aaa    
  457398:	or     eax,0xa737ae14
  45739d:	adc    al,0x50
  45739f:	cmp    BYTE PTR [edx-0x2bc574ea],ah
  4573a5:	pop    ss
  4573a6:	hlt    
  4573a7:	cmp    bh,BYTE PTR [ecx]
  4573a9:	pop    ss
  4573aa:	xor    al,0x3b
  4573ac:	pop    edi
  4573ad:	sbb    BYTE PTR [esi-0x44e769c5],ah
  4573b3:	cmp    ecx,DWORD PTR [edx+0x33c1a18]
  4573b9:	cmp    ebp,ebx
  4573bb:	cmp    al,0x91
  4573bd:	cmp    esi,edi
  4573bf:	cmp    al,0x32
  4573c1:	cmp    DWORD PTR [ecx],esp
  4573c3:	cmp    eax,0x3d4c38f4
  4573c8:	xor    bh,BYTE PTR [ecx]
  4573ca:	lds    edi,FWORD PTR ds:0x3e533a31
  4573d0:	xor    DWORD PTR [ebx],edi
  4573d2:	sbb    eax,0x693aca3f
  4573d7:	aas    
  4573d8:	jl     0x457416
  4573da:	idiv   bh
  4573dc:	bound  eax,QWORD PTR [edx-0x6e]
  4573df:	add    ah,BYTE PTR [edx+0x4a]
  4573e2:	add    al,BYTE PTR [eax]
	...
  4573f8:	bound  ebx,QWORD PTR [edx+edx*8+0x7f]
  4573fc:	xchg   edx,eax
  4573fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4573fe:	int3   
  4573ff:	mov    bh,0x92
  457401:	xor    eax,0x979337d2
  457406:	retf   
  457407:	xchg   edi,eax
  457408:	xchg   ebx,eax
  457409:	data16 int 0xad
  45740c:	jae    0x4573f8
  45740e:	into   
  45740f:	inc    ebp
  457410:	jo     0x457409
  457412:	into   
  457413:	push   esp
  457414:	jo     0x45740d
  457416:	into   
  457417:	ins    DWORD PTR es:[edi],dx
  457418:	jo     0x4573ba
  45741a:	into   
  45741b:	jnp    0x45746d
  45741d:	nop
  45741e:	retf   
  45741f:	lahf   
  457420:	push   eax
  457421:	push   0xc750b7cc
  457426:	retf   
  457427:	mov    esi,0xd6cc6d50
  45742c:	xor    BYTE PTR [edx-0x31],al
  45742f:	push   ss
  457430:	xor    DWORD PTR [ecx],ebx
  457432:	iret   
  457433:	inc    ebp
  457434:	xor    edx,esp
  457436:	int    0x68
  457438:	xor    DWORD PTR [esi],esi
  45743a:	iret   
  45743b:	aam    0x91
  45743d:	jbe    0x45740d
  45743f:	pop    ecx
  457440:	mov    gs,WORD PTR ds:0x7396bace
  457446:	fadd   DWORD PTR [esi-0x31249973]
  45744c:	jne    0x45747d
  45744e:	ficomp DWORD PTR [ebx+0x33d52c7a]
  457454:	imul   eax,DWORD PTR [edx-0x5194aa2b],0xffffffd4
  45745b:	retf   0x0
	...
  45746e:	add    BYTE PTR [eax],al
  457470:	pop    ebx
  457471:	inc    ecx
  457472:	aam    0x49
  457474:	pop    eax
  457475:	test   eax,0x1a4f29d3
  45747a:	loope  0x45747b
  45747c:	add    eax,0x6183e7da
  457481:	fnstcw WORD PTR [ebx-0x3b269dfd]
  457487:	sar    DWORD PTR [ecx],cl
  457489:	jmp    0xe9e54836
  45748e:	sub    dl,bh
  457490:	shr    ebp,0x2
  457493:	xlat   BYTE PTR ds:[ebx]
  457494:	xor    cl,dh
  457496:	imul   ebx,ebx,0xffffffd8
  457499:	icebp  
  45749a:	mov    al,0xdf
  45749c:	sbb    al,0xf5
  45749e:	mov    ecx,fs
  4574a0:	mov    ebp,0x6173e836
  4574a5:	fld    DWORD PTR [edi]
  4574a7:	add    al,0x62
  4574a9:	fnstenv [edx]
  4574ab:	xlat   BYTE PTR ds:[ebx]
  4574ac:	sub    esp,ebp
  4574ae:	(bad)
  4574b1:	out    dx,al
  4574b2:	nop
  4574b3:	(bad)  [eax+0x28dd98f2]
  4574b9:	hlt    
  4574ba:	jmp    ecx
  4574bc:	repz idiv DWORD PTR [esi-0x17c9821e]
  4574c3:	arpl   WORD PTR [ecx-0x27],sp
  4574c6:	out    dx,eax
  4574c7:	add    esp,DWORD PTR [edx-0x27]
  4574ca:	lock xlat BYTE PTR ds:[ebx]
  4574cc:	add    ch,ch
  4574ce:	(bad)  
  4574cf:	xlat   BYTE PTR ds:[ebx]
  4574d0:	jl     0x4574c1
  4574d2:	int    0xdc
	...
  4574e8:	pop    ss
  4574e9:	cmc    
  4574ea:	pushf  
  4574eb:	loop   0x45746d
  4574ed:	mul    bh
  4574ef:	push   ebx
  4574f0:	popa   
  4574f1:	fnstcw WORD PTR [edi-0x6c269dfd]
  4574f7:	aam    0xf5
  4574f9:	call   0xe96b4921
  4574fe:	adc    edx,esp
  457500:	adc    eax,0x35d413e9
  457505:	jmp    0xe97b491d
  45750a:	add    BYTE PTR [ebp+0x36],cl
  45750d:	xor    DWORD PTR ds:0x1d31462e,edi
  457514:	push   ss
  457515:	xor    DWORD PTR cs:0xed31360e,ebx
  45751c:	adc    dh,bl
  45751e:	das    
  45751f:	fst    QWORD PTR [eax]
  457521:	out    0x2f,al
  457523:	fnsave [eax-0x4f22d033]
  457529:	aad    0x2f
  45752b:	int    0xb0
  45752d:	std    
  45752e:	das    
  45752f:	mov    ebp,0x1d3005b0
  457534:	xchg   ecx,eax
  457535:	in     eax,dx
  457536:	das    
  457537:	sbb    eax,0x2d2ff591
  45753c:	xchg   ecx,eax
  45753d:	dec    edx
  45753e:	sub    eax,0x2ee88c7d
  457543:	ss mov ebx,0x21e9f635
  457549:	fiadd  DWORD PTR [eax]
  45754b:	and    DWORD PTR [eax],eax
	...
  45755d:	add    BYTE PTR [eax],al
  45755f:	add    BYTE PTR [esi-0x27],ah
  457562:	add    ch,al
  457564:	scas   al,BYTE PTR es:[edi]
  457565:	fldcw  WORD PTR [edx+esi*1]
  457568:	sahf   
  457569:	loope  0x4575a2
  45756b:	dec    edx
  45756c:	cwde   
  45756d:	outs   dx,DWORD PTR ds:[esi]
  45756e:	cmp    BYTE PTR [ebp-0x3fc63178],al
  457574:	xchg   bl,bh
  457576:	cmp    DWORD PTR [eax],ecx
  457578:	aas    
  457579:	xlat   BYTE PTR ds:[ebx]
  45757a:	xor    al,0xb7
  45757c:	xor    eax,0x2d9e354b
  457581:	cmp    dh,BYTE PTR ds:0x33ea24c6
  457587:	in     al,0x1c
  457589:	pusha  
  45758a:	xor    al,0xe9
  45758c:	inc    ebx
  45758d:	loopne 0x4575c5
  45758f:	adc    DWORD PTR [eax-0x68],eax
  457592:	rol    DWORD PTR ss:[ebx-0x54],1
  457596:	add    BYTE PTR ss:[ebp-0x50c182c6],cl
  45759d:	cmp    bl,BYTE PTR [ebx-0x9c526c2]
  4575a3:	(bad)  
  4575a4:	sti    
  4575a5:	call   0xddac75ab
  4575aa:	add    BYTE PTR [eax],al
  4575ac:	stc    
  4575ad:	push   ss
  4575ae:	outs   dx,BYTE PTR ds:[esi]
  4575af:	cmp    bl,BYTE PTR [eax]
  4575b1:	adc    eax,0x142b3caf
  4575b6:	inc    esp
  4575b7:	cmp    eax,0x3df613ef
  4575bc:	mov    ecx,0xbbfff63a
  4575c1:	clc    
  4575c2:	add    DWORD PTR [eax],eax
	...
  4575d8:	jecxz  0x4575b2
  4575da:	add    BYTE PTR [eax],al
  4575dc:	test   DWORD PTR ds:0xd9d30c4,0x8ce33a3
  4575e6:	mov    bh,0x33
  4575e8:	repnz or BYTE PTR [esi+0x740cce37],dh
  4575ef:	cmp    ah,al
  4575f1:	xadd   BYTE PTR [edx],bh
  4575f4:	lds    ecx,FWORD PTR [edi]
  4575f6:	fdivr  DWORD PTR [edx]
  4575f8:	lds    ecx,FWORD PTR [edi]
  4575fa:	idiv   BYTE PTR [edx]
  4575fc:	ja     0x45760d
  4575fe:	sbb    DWORD PTR [ebx],edi
  457600:	or     BYTE PTR [edi],0x36
  457603:	cmp    eax,DWORD PTR [edi+0x10]
  457606:	dec    esi
  457607:	cmp    esp,DWORD PTR [edi+0xf]
  45760a:	ins    BYTE PTR es:[edi],dx
  45760b:	cmp    edx,ecx
  45760d:	adc    BYTE PTR [edi-0x53ef65c5],al
  457613:	cmp    eax,DWORD PTR [ecx]
  457615:	adc    ah,al
  457617:	cmp    esp,ecx
  457619:	pslld  mm7,QWORD PTR [ebx]
  45761c:	xor    edx,DWORD PTR [eax*1+0x40394e3c]
  457623:	cmp    al,0x62
  457625:	jl     0x4575fd
  457627:	pop    ecx
  457628:	data16 je 0x457601
  45762b:	jg     0x45768b
  45762d:	scas   al,BYTE PTR es:[edi]
  45762e:	loopne 0x4575c8
  457630:	push   esi
  457631:	jmp    eax
  457633:	int3   
  457634:	dec    esi
  457635:	mov    eax,ds:0x1146e4e0
  45763a:	loope  0x45763b
	...
  457650:	std    
  457651:	inc    ecx
  457652:	adc    al,BYTE PTR [ebx]
  457654:	bound  edi,QWORD PTR [edx]
  457656:	add    al,BYTE PTR [eax]
  457658:	bound  edi,QWORD PTR [esi-0x32cd1734]
  45765e:	int3   
  45765f:	stos   BYTE PTR es:[edi],al
  457660:	xchg   ecx,eax
  457661:	aas    
  457662:	into   
  457663:	or     DWORD PTR [esi-0x68ad270e],0x5b
  45766a:	fnstenv [esi-0x71]
  45766d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45766e:	xlat   BYTE PTR ds:[ebx]
  45766f:	jecxz  0x4576e8
  457671:	jl     0x457642
  457673:	mov    esp,0xd3cf836d
  457678:	jne    0x45765a
  45767a:	fstp   DWORD PTR [edi-0x36254997]
  457680:	pop    ecx
  457681:	push   eax
  457682:	(bad)  [esi+edx*2-0x720029dd]
  457689:	inc    ecx
  45768a:	add    bh,ah
  45768c:	test   DWORD PTR [ecx-0x669dffff],ebp
  457692:	int3   
  457693:	pop    esp
  457694:	xor    dl,cl
  457696:	retf   
  457697:	xchg   DWORD PTR [eax],esi
  457699:	mov    dl,0xcf
  45769b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  45769c:	xor    BYTE PTR [esi],bl
  45769e:	shr    DWORD PTR [ecx],cl
  4576a0:	xchg   ecx,eax
  4576a1:	(bad)  
  4576a3:	jecxz  0x457636
  4576a5:	scas   al,BYTE PTR es:[edi]
  4576a6:	shl    bh,cl
  4576a8:	xchg   ecx,eax
  4576a9:	stos   BYTE PTR es:[edi],al
  4576aa:	sar    bl,cl
  4576ac:	xchg   ecx,eax
  4576ad:	aaa    
  4576ae:	into   
  4576af:	adc    DWORD PTR [esi-0x27],esi
  4576b2:	add    al,bl
	...
  4576c8:	push   ebp
  4576c9:	in     eax,dx
  4576ca:	(bad)  
  4576cb:	xlat   BYTE PTR ds:[ebx]
  4576cc:	xchg   ebp,ebp
  4576ce:	adc    al,0xd8
  4576d0:	outs   dx,BYTE PTR ds:[esi]
  4576d1:	in     eax,dx
  4576d2:	pushf  
  4576d3:	xlat   BYTE PTR ds:[ebx]
  4576d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4576d5:	in     eax,dx
  4576d6:	mov    al,ds:0xbeed83d7
  4576db:	xlat   BYTE PTR ds:[ebx]
  4576dc:	xchg   ch,ch
  4576de:	mov    dh,0xd7
  4576e0:	test   ebp,ebp
  4576e2:	(bad)  
  4576e3:	xlat   BYTE PTR ds:[ebx]
  4576e4:	(bad)  
  4576e6:	jge    0x4576bf
  4576e8:	fldln2 
  4576ea:	inc    esi
  4576eb:	xlat   BYTE PTR ds:[ebx]
  4576ec:	mov    edi,0x89d8b2ed
  4576f1:	in     al,dx
  4576f2:	out    dx,al
  4576f3:	aad    0x7e
  4576f5:	jmp    0x45772b
  4576f7:	aad    0xb3
  4576f9:	jmp    0x4576d1
  4576fb:	(bad)  
  4576fc:	imul   ebp,edx,0xea8ed6b3
  457702:	mov    ch,0xdb
  457704:	and    ecx,esi
  457706:	aaa    
  457707:	fcom   QWORD PTR [ecx]
  457709:	icebp  
  45770a:	inc    edi
  45770b:	fadd   QWORD PTR [ecx-0xf]
  45770e:	push   edi
  45770f:	fdiv   QWORD PTR [ecx]
  457711:	icebp  
  457712:	addr16 fsubr st(1),st
  457715:	icebp  
  457716:	push   edi
  457717:	fdivr  st(1),st
  457719:	icebp  
  45771a:	xchg   esp,ebx
  45771c:	shl    ecx,0x77
  45771f:	(bad)  
  457721:	icebp  
  457722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  457723:	fsub   QWORD PTR [ecx-0x6e23480f]
  457729:	icebp  
  45772a:	xchg   esp,ebx
	...
  457740:	xor    ecx,0xf171dc97
  457746:	out    0xda,eax
  457748:	popa   
  457749:	lock xlat BYTE PTR ds:[ebx]
  45774b:	fidiv  DWORD PTR [ecx-0x10]
  45774e:	(bad)  
  45774f:	fiadd  DWORD PTR [ecx+0x28b900f0]
  457755:	out    0x37,al
  457757:	sub    DWORD PTR [ecx],ebx
  457759:	xchg   esi,eax
  45775a:	aaa    
  45775b:	mov    ecx,0xc9378618
  457760:	or     BYTE PTR [esi-0x59f726c9],dh
  457766:	aaa    
  457767:	imul   edi,DWORD PTR [ecx],0xd1e9f632
  45776d:	sub    eax,0xd96679f6
  457772:	add    cl,ch
  457774:	xor    DWORD PTR [esi],ebp
  457776:	es aad 0x11
  457779:	retf   0xd530
  45777c:	adc    DWORD PTR [edx-0x79ed3ecf],esp
  457782:	xor    DWORD PTR [ebp+0x6531be12],ecx
  457788:	mov    bl,0x5d
  45778a:	xor    cl,BYTE PTR [ebp-0x4d]
  45778d:	jge    0x4577c1
  45778f:	and    eax,0xd321db3
  457794:	mov    bl,0x3d
  457796:	xor    ah,ch
  457798:	xchg   ebp,eax
  457799:	(bad)  [ecx*1+0x252cfd9a]
  4577a0:	mov    bl,BYTE PTR [ebp+0x4d2c]
	...
  4577b6:	add    BYTE PTR [eax],al
  4577b8:	mov    bh,BYTE PTR [ebp+0x5db5652c]
  4577be:	sub    eax,0x2d7dad8d
  4577c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4577c4:	mov    ch,0x1d
  4577c6:	sub    eax,0x2d3dadcd
  4577cb:	in     eax,0x94
  4577cd:	(bad)  [ebx]
  4577cf:	int    0x8c
  4577d1:	std    
  4577d2:	sub    esp,DWORD PTR ds:0xd2b9d95
  4577d8:	lea    edi,[ebp+0x6534652b]
  4577de:	sub    al,0x0
  4577e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4577e1:	pop    es
  4577e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4577e3:	xor    eax,0x35ae0797
  4577e8:	pop    DWORD PTR [edi]
  4577ea:	mov    dh,0x35
  4577ec:	pop    es
  4577ed:	or     BYTE PTR [esi-0x39f890cb],bh
  4577f3:	xor    eax,0x35ce0777
  4577f8:	outs   dx,DWORD PTR ds:[esi]
  4577f9:	pop    es
  4577fa:	(bad)  
  4577fb:	xor    eax,0x35de07a7
  457800:	scas   eax,DWORD PTR es:[edi]
  457801:	pop    es
  457802:	out    0x35,al
  457804:	push   edi
  457805:	pop    es
  457806:	out    dx,al
  457807:	xor    eax,0x35f6074f
  45780c:	pop    es
  45780d:	pop    es
  45780e:	(bad)  
  45780f:	xor    eax,0x360606ef
  457814:	test   DWORD PTR [esi],0x6ef360e
  45781a:	push   ss
  45781b:	add    BYTE PTR ss:[eax],al
	...
  45782e:	add    BYTE PTR [eax],al
  457830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  457831:	push   es
  457832:	push   ds
  457833:	ss scas eax,DWORD PTR es:[edi]
  457835:	push   es
  457836:	es ss pop ss
  457839:	pop    es
  45783a:	cs ss sysret 
  45783e:	ss ss pop es
  457841:	pop    es
  457842:	idiv   bh
  457844:	retf   
  457845:	fadd   QWORD PTR [eax]
  457847:	add    BYTE PTR [ebx-0x44ffff24],bh
  45784d:	fadd   QWORD PTR [eax]
  45784f:	add    BYTE PTR [ebx-0x74ffff24],cl
  457855:	fadd   QWORD PTR [eax]
  457857:	add    BYTE PTR [ebx-0x24],bh
  45785a:	add    BYTE PTR [eax],al
  45785c:	jnp    0x45783a
  45785e:	add    BYTE PTR [eax],al
  457860:	mov    ebx,esp
  457862:	add    BYTE PTR [eax],al
  457864:	mov    ebx,esp
  457866:	add    BYTE PTR [eax],al
  457868:	jnp    0x457846
  45786a:	add    BYTE PTR [eax],al
  45786c:	bound  eax,QWORD PTR [edx+0x2]
  45786f:	add    BYTE PTR [edx+0x42],ah
  457872:	add    al,BYTE PTR [eax]
  457874:	bound  eax,QWORD PTR [edx+0x2]
  457877:	add    BYTE PTR [edx+0x42],ah
  45787a:	add    al,BYTE PTR [eax]
  45787c:	bound  eax,QWORD PTR [edx+0x2]
  45787f:	add    BYTE PTR [edx+0x42],ah
  457882:	add    al,BYTE PTR [eax]
  457884:	bound  eax,QWORD PTR [edx+0x2]
  457887:	add    BYTE PTR [edx+0x42],ah
  45788a:	add    al,BYTE PTR [eax]
  45788c:	bound  eax,QWORD PTR [edx+0x2]
  45788f:	add    BYTE PTR [edx+0x42],ah
  457892:	add    al,BYTE PTR [eax]
	...
  4578a8:	bound  eax,QWORD PTR [edx+0x2]
  4578ab:	add    BYTE PTR [edx+0x42],ah
  4578ae:	add    al,BYTE PTR [eax]
  4578b0:	bound  eax,QWORD PTR [edx+0x2]
  4578b3:	add    BYTE PTR [edx+0x42],ah
  4578b6:	add    al,BYTE PTR [eax]
  4578b8:	bound  eax,QWORD PTR [edx+0x2]
  4578bb:	add    BYTE PTR [edx+0x42],ah
  4578be:	add    al,BYTE PTR [eax]
  4578c0:	bound  eax,QWORD PTR [edx+0x2]
  4578c3:	add    BYTE PTR [edx+0x42],ah
  4578c6:	add    al,BYTE PTR [eax]
  4578c8:	bound  eax,QWORD PTR [edx+0x2]
  4578cb:	add    BYTE PTR [edx+0x42],ah
  4578ce:	add    al,BYTE PTR [eax]
  4578d0:	bound  eax,QWORD PTR [edx+0x2]
  4578d3:	add    BYTE PTR [edx+0x42],ah
  4578d6:	add    al,BYTE PTR [eax]
  4578d8:	bound  eax,QWORD PTR [edx+0x2]
  4578db:	add    BYTE PTR [edx+0x42],ah
  4578de:	add    al,BYTE PTR [eax]
  4578e0:	bound  eax,QWORD PTR [edx+0x2]
  4578e3:	add    BYTE PTR [edx+0x42],ah
  4578e6:	add    al,BYTE PTR [eax]
  4578e8:	bound  eax,QWORD PTR [edx+0x2]
  4578eb:	add    BYTE PTR [edx+0x42],ah
  4578ee:	add    al,BYTE PTR [eax]
  4578f0:	bound  eax,QWORD PTR [edx+0x2]
  4578f3:	add    BYTE PTR [edx+0x42],ah
  4578f6:	add    al,BYTE PTR [eax]
  4578f8:	(bad)  
  4578f9:	(bad)  
  4578fb:	add    esp,DWORD PTR [edx-0x27]
  4578fe:	out    0x3,eax
  457900:	(bad)  
  457901:	(bad)  
  457903:	add    esp,DWORD PTR [edx-0x27]
  457906:	out    0x3,eax
  457908:	(bad)  
  457909:	(bad)  
  45790b:	add    eax,DWORD PTR [eax]
	...
  45791d:	add    BYTE PTR [eax],al
  45791f:	add    BYTE PTR [edx-0x27],ah
  457922:	out    0x3,eax
  457924:	(bad)  
  457925:	(bad)  
  457927:	add    esp,DWORD PTR [edx-0x27]
  45792a:	out    0x3,eax
  45792c:	(bad)  
  45792d:	(bad)  
  45792f:	add    esp,DWORD PTR [edx-0x27]
  457932:	out    0x3,eax
  457934:	(bad)  
  457935:	(bad)  
  457937:	add    esp,DWORD PTR [edx-0x27]
  45793a:	out    0x3,eax
  45793c:	(bad)  
  45793d:	(bad)  
  45793f:	add    esp,DWORD PTR [edx-0x27]
  457942:	out    0x3,eax
  457944:	(bad)  
  457945:	(bad)  
  457947:	add    esp,DWORD PTR [edx-0x27]
  45794a:	out    0x3,eax
  45794c:	(bad)  
  45794d:	(bad)  
  45794f:	add    esp,DWORD PTR [edx-0x27]
  457952:	out    0x3,eax
  457954:	(bad)  
  457955:	(bad)  
  457957:	add    esp,DWORD PTR [edx-0x27]
  45795a:	out    0x3,eax
  45795c:	(bad)  
  45795d:	(bad)  
  45795f:	add    esp,DWORD PTR [edx-0x27]
  457962:	out    0x3,eax
  457964:	(bad)  
  457965:	(bad)  
  457967:	add    esp,DWORD PTR [edx-0x27]
  45796a:	out    0x3,eax
  45796c:	(bad)  
  45796d:	(bad)  
  45796f:	add    esp,DWORD PTR [edx-0x27]
  457972:	out    0x3,eax
  457974:	(bad)  
  457975:	(bad)  
  457977:	add    esp,DWORD PTR [edx-0x27]
  45797a:	out    0x3,eax
  45797c:	(bad)  
  45797d:	(bad)  
  45797f:	add    esp,DWORD PTR [edx-0x27]
  457982:	out    0x3,eax
	...
  457998:	(bad)  
  457999:	fld    DWORD PTR [eax]
  45799b:	jmp    0xe9465301
  4579a0:	popa   
  4579a1:	fld    DWORD PTR [eax]
  4579a3:	jmp    0xe9465309
  4579a8:	popa   
  4579a9:	fld    DWORD PTR [eax]
  4579ab:	jmp    0xe9465311
  4579b0:	popa   
  4579b1:	fld    DWORD PTR [eax]
  4579b3:	jmp    0xe9465319
  4579b8:	popa   
  4579b9:	fld    DWORD PTR [eax]
  4579bb:	jmp    0xe9465321
  4579c0:	popa   
  4579c1:	fld    DWORD PTR [eax]
  4579c3:	jmp    0xe9465329
  4579c8:	popa   
  4579c9:	fld    DWORD PTR [eax]
  4579cb:	jmp    0xe9465331
  4579d0:	popa   
  4579d1:	fld    DWORD PTR [eax]
  4579d3:	jmp    0xe9465339
  4579d8:	popa   
  4579d9:	fld    DWORD PTR [eax]
  4579db:	jmp    0xe9465341
  4579e0:	popa   
  4579e1:	fld    DWORD PTR [eax]
  4579e3:	jmp    0xe9465349
  4579e8:	popa   
  4579e9:	fld    DWORD PTR [eax]
  4579eb:	jmp    0xe9465351
  4579f0:	popa   
  4579f1:	fld    DWORD PTR [eax]
  4579f3:	jmp    0xe9465359
  4579f8:	popa   
  4579f9:	fld    DWORD PTR [eax]
  4579fb:	jmp    0x457a00
	...
  457a10:	popa   
  457a11:	fld    DWORD PTR [eax]
  457a13:	jmp    0xe9465379
  457a18:	popa   
  457a19:	fld    DWORD PTR [eax]
  457a1b:	jmp    0xe9465381
  457a20:	popa   
  457a21:	fld    DWORD PTR [eax]
  457a23:	jmp    0x465389
  457a28:	jnp    0x457a03
  457a2a:	add    BYTE PTR [eax],al
  457a2c:	jnp    0x457a07
  457a2e:	add    BYTE PTR [eax],al
  457a30:	mov    ebx,ecx
  457a32:	add    BYTE PTR [eax],al
  457a34:	mov    ebx,ecx
  457a36:	add    BYTE PTR [eax],al
  457a38:	jnp    0x457a13
  457a3a:	add    BYTE PTR [eax],al
  457a3c:	jnp    0x457a17
  457a3e:	add    BYTE PTR [eax],al
  457a40:	dec    ebx
  457a41:	fld    DWORD PTR [eax]
  457a43:	add    BYTE PTR [ebx-0x27],cl
  457a46:	add    BYTE PTR [eax],al
  457a48:	cmp    ebx,ecx
  457a4a:	add    BYTE PTR [eax],al
  457a4c:	cmp    ebx,ecx
  457a4e:	add    BYTE PTR [eax],al
  457a50:	dec    ebx
  457a51:	fld    DWORD PTR [eax]
  457a53:	add    BYTE PTR [ebx-0x27],cl
  457a56:	add    BYTE PTR [eax],al
  457a58:	cmp    ebx,ecx
  457a5a:	add    BYTE PTR [eax],al
  457a5c:	cmp    ebx,ecx
  457a5e:	add    BYTE PTR [eax],al
  457a60:	or     ebx,ecx
  457a62:	add    BYTE PTR [eax],al
  457a64:	or     ebx,ecx
  457a66:	add    BYTE PTR [eax],al
  457a68:	sti    
  457a69:	fadd   DWORD PTR [eax]
  457a6b:	add    bl,bh
  457a6d:	fadd   DWORD PTR [eax]
  457a6f:	add    BYTE PTR [ebx],cl
  457a71:	fld    DWORD PTR [eax]
	...
  457a87:	add    BYTE PTR [ebx],cl
  457a89:	fld    DWORD PTR [eax]
  457a8b:	add    bl,bh
  457a8d:	fadd   DWORD PTR [eax]
  457a8f:	add    bl,bh
  457a91:	fadd   DWORD PTR [eax]
  457a93:	add    bl,cl
  457a95:	fadd   DWORD PTR [eax]
  457a97:	add    bl,cl
  457a99:	fadd   DWORD PTR [eax]
  457a9b:	add    BYTE PTR [ebx-0x44ffff28],bh
  457aa1:	fadd   DWORD PTR [eax]
  457aa3:	add    bl,cl
  457aa5:	fadd   DWORD PTR [eax]
  457aa7:	add    bl,cl
  457aa9:	fadd   DWORD PTR [eax]
  457aab:	add    BYTE PTR [ebx-0x44ffff28],bh
  457ab1:	fadd   DWORD PTR [eax]
  457ab3:	add    BYTE PTR [edx+0x42],ah
  457ab6:	add    al,BYTE PTR [eax]
  457ab8:	bound  eax,QWORD PTR [edx+0x2]
  457abb:	add    BYTE PTR [edx+0x42],ah
  457abe:	add    al,BYTE PTR [eax]
  457ac0:	bound  eax,QWORD PTR [edx+0x2]
  457ac3:	add    BYTE PTR [edx+0x42],ah
  457ac6:	add    al,BYTE PTR [eax]
  457ac8:	bound  eax,QWORD PTR [edx+0x2]
  457acb:	add    BYTE PTR [edx+0x42],ah
  457ace:	add    al,BYTE PTR [eax]
  457ad0:	bound  eax,QWORD PTR [edx+0x2]
  457ad3:	add    BYTE PTR [edx+0x42],ah
  457ad6:	add    al,BYTE PTR [eax]
  457ad8:	bound  eax,QWORD PTR [edx+0x2]
  457adb:	add    BYTE PTR [edx+0x42],ah
  457ade:	add    al,BYTE PTR [eax]
  457ae0:	bound  eax,QWORD PTR [edx+0x2]
  457ae3:	add    BYTE PTR [edx+0x42],ah
  457ae6:	add    al,BYTE PTR [eax]
  457ae8:	bound  eax,QWORD PTR [edx+0x2]
	...
  457aff:	add    BYTE PTR [edx+0x42],ah
  457b02:	add    al,BYTE PTR [eax]
  457b04:	bound  eax,QWORD PTR [edx+0x2]
  457b07:	add    BYTE PTR [edx+0x42],ah
  457b0a:	add    al,BYTE PTR [eax]
  457b0c:	bound  eax,QWORD PTR [edx+0x2]
  457b0f:	add    BYTE PTR [edx+0x42],ah
  457b12:	add    al,BYTE PTR [eax]
  457b14:	bound  eax,QWORD PTR [edx+0x2]
  457b17:	add    BYTE PTR [edx+0x42],ah
  457b1a:	add    al,BYTE PTR [eax]
  457b1c:	bound  eax,QWORD PTR [edx+0x2]
  457b1f:	add    BYTE PTR [edx+0x42],ah
  457b22:	add    al,BYTE PTR [eax]
  457b24:	bound  eax,QWORD PTR [edx+0x2]
  457b27:	add    BYTE PTR [edx+0x42],ah
  457b2a:	add    al,BYTE PTR [eax]
  457b2c:	bound  eax,QWORD PTR [edx+0x2]
  457b2f:	add    BYTE PTR [edx+0x42],ah
  457b32:	add    al,BYTE PTR [eax]
  457b34:	bound  eax,QWORD PTR [edx+0x2]
  457b37:	add    BYTE PTR [edx+0x42],ah
  457b3a:	add    al,BYTE PTR [eax]
  457b3c:	bound  eax,QWORD PTR [edx+0x2]
  457b3f:	add    BYTE PTR [edx-0x27],ah
  457b42:	out    0x3,eax
  457b44:	(bad)  
  457b45:	(bad)  
  457b47:	add    esp,DWORD PTR [edx-0x27]
  457b4a:	out    0x3,eax
  457b4c:	(bad)  
  457b4d:	(bad)  
  457b4f:	add    esp,DWORD PTR [edx-0x27]
  457b52:	out    0x3,eax
  457b54:	(bad)  
  457b55:	(bad)  
  457b57:	add    esp,DWORD PTR [edx-0x27]
  457b5a:	out    0x3,eax
  457b5c:	(bad)  
  457b5d:	(bad)  
  457b5f:	add    esp,DWORD PTR [edx-0x27]
  457b62:	out    0x3,eax
	...
  457b78:	(bad)  
  457b79:	(bad)  
  457b7b:	add    esp,DWORD PTR [edx-0x27]
  457b7e:	out    0x3,eax
  457b80:	(bad)  
  457b81:	(bad)  
  457b83:	add    esp,DWORD PTR [edx-0x27]
  457b86:	out    0x3,eax
  457b88:	(bad)  
  457b89:	(bad)  
  457b8b:	add    esp,DWORD PTR [edx-0x27]
  457b8e:	out    0x3,eax
  457b90:	(bad)  
  457b91:	(bad)  
  457b93:	add    esp,DWORD PTR [edx-0x27]
  457b96:	out    0x3,eax
  457b98:	(bad)  
  457b99:	(bad)  
  457b9b:	add    esp,DWORD PTR [edx-0x27]
  457b9e:	out    0x3,eax
  457ba0:	(bad)  
  457ba1:	(bad)  
  457ba3:	add    esp,DWORD PTR [edx-0x27]
  457ba6:	out    0x3,eax
  457ba8:	(bad)  
  457ba9:	(bad)  
  457bab:	add    esp,DWORD PTR [edx-0x27]
  457bae:	out    0x3,eax
  457bb0:	(bad)  
  457bb1:	(bad)  
  457bb3:	add    esp,DWORD PTR [edx-0x27]
  457bb6:	out    0x3,eax
  457bb8:	(bad)  
  457bb9:	(bad)  
  457bbb:	add    esp,DWORD PTR [edx-0x27]
  457bbe:	out    0x3,eax
  457bc0:	(bad)  
  457bc1:	(bad)  
  457bc3:	add    esp,DWORD PTR [edx-0x27]
  457bc6:	out    0x3,eax
  457bc8:	(bad)  
  457bc9:	(bad)  
  457bcb:	add    esp,DWORD PTR [edx-0x27]
  457bce:	add    cl,ch
  457bd0:	popa   
  457bd1:	fld    DWORD PTR [eax]
  457bd3:	jmp    0xe9465539
  457bd8:	popa   
  457bd9:	fld    DWORD PTR [eax]
  457bdb:	jmp    0x457be0
	...
  457bf0:	popa   
  457bf1:	fld    DWORD PTR [eax]
  457bf3:	jmp    0xe9465559
  457bf8:	popa   
  457bf9:	fld    DWORD PTR [eax]
  457bfb:	jmp    0xe9465561
  457c00:	popa   
  457c01:	fld    DWORD PTR [eax]
  457c03:	jmp    0xe9465569
  457c08:	popa   
  457c09:	fld    DWORD PTR [eax]
  457c0b:	jmp    0xe9465571
  457c10:	popa   
  457c11:	fld    DWORD PTR [eax]
  457c13:	jmp    0xe9465579
  457c18:	popa   
  457c19:	fld    DWORD PTR [eax]
  457c1b:	jmp    0xe9465581
  457c20:	popa   
  457c21:	fld    DWORD PTR [eax]
  457c23:	jmp    0xe9465589
  457c28:	popa   
  457c29:	fld    DWORD PTR [eax]
  457c2b:	jmp    0xe9465591
  457c30:	popa   
  457c31:	fld    DWORD PTR [eax]
  457c33:	jmp    0xe9465599
  457c38:	popa   
  457c39:	fld    DWORD PTR [eax]
  457c3b:	jmp    0xe94655a1
  457c40:	popa   
  457c41:	fld    DWORD PTR [eax]
  457c43:	jmp    0xe94655a9
  457c48:	popa   
  457c49:	fld    DWORD PTR [eax]
  457c4b:	jmp    0xe94655b1
  457c50:	popa   
  457c51:	fld    DWORD PTR [eax]
  457c53:	jmp    0x457c58
	...
  457c68:	popa   
  457c69:	fld    DWORD PTR [eax]
  457c6b:	jmp    0x4655d1
  457c70:	mov    ebx,0xcb0000d5
  457c75:	aad    0x0
  457c77:	add    bl,cl
  457c79:	aad    0x0
  457c7b:	add    BYTE PTR [ebx-0x44ffff2b],bh
  457c81:	aad    0x0
  457c83:	add    BYTE PTR [ebx-0x74ffff2b],cl
  457c89:	aad    0x0
  457c8b:	add    BYTE PTR [ebx-0x2b],bh
  457c8e:	add    BYTE PTR [eax],al
  457c90:	jnp    0x457c67
  457c92:	add    BYTE PTR [eax],al
  457c94:	mov    edx,ebp
  457c96:	add    BYTE PTR [eax],al
  457c98:	mov    edx,ebp
  457c9a:	add    BYTE PTR [eax],al
  457c9c:	jnp    0x457c73
  457c9e:	add    BYTE PTR [eax],al
  457ca0:	jnp    0x457c77
  457ca2:	add    BYTE PTR [eax],al
  457ca4:	dec    ebx
  457ca5:	fld    QWORD PTR [eax]
  457ca7:	add    BYTE PTR [ebx-0x23],cl
  457caa:	add    BYTE PTR [eax],al
  457cac:	cmp    ebx,ebp
  457cae:	add    BYTE PTR [eax],al
  457cb0:	cmp    ebx,ebp
  457cb2:	add    BYTE PTR [eax],al
  457cb4:	dec    ebx
  457cb5:	fld    QWORD PTR [eax]
  457cb7:	add    BYTE PTR [ebx-0x23],cl
  457cba:	add    BYTE PTR [eax],al
  457cbc:	cmp    ebx,ebp
  457cbe:	add    BYTE PTR [eax],al
  457cc0:	cmp    ebx,ebp
  457cc2:	add    BYTE PTR [eax],al
  457cc4:	or     ebx,ebp
  457cc6:	add    BYTE PTR [eax],al
  457cc8:	or     ebx,ebp
	...
  457cde:	add    BYTE PTR [eax],al
  457ce0:	sti    
  457ce1:	fadd   QWORD PTR [eax]
  457ce3:	add    bl,bh
  457ce5:	fadd   QWORD PTR [eax]
  457ce7:	add    BYTE PTR [ebx],cl
  457ce9:	fld    QWORD PTR [eax]
  457ceb:	add    BYTE PTR [ebx],cl
  457ced:	fld    QWORD PTR [eax]
  457cef:	add    bl,bh
  457cf1:	fadd   QWORD PTR [eax]
  457cf3:	add    bl,bh
  457cf5:	fadd   QWORD PTR [eax]
  457cf7:	add    bl,cl
  457cf9:	fadd   QWORD PTR [eax]
  457cfb:	add    BYTE PTR [edx+0x32],ah
  457cfe:	add    al,BYTE PTR [eax]
  457d00:	bound  esi,QWORD PTR [edx]
  457d02:	add    al,BYTE PTR [eax]
  457d04:	bound  esi,QWORD PTR [edx]
  457d06:	add    al,BYTE PTR [eax]
  457d08:	bound  esi,QWORD PTR [edx]
  457d0a:	add    al,BYTE PTR [eax]
  457d0c:	bound  esi,QWORD PTR [edx]
  457d0e:	add    al,BYTE PTR [eax]
  457d10:	bound  esi,QWORD PTR [edx]
  457d12:	add    al,BYTE PTR [eax]
  457d14:	bound  esi,QWORD PTR [edx]
  457d16:	add    al,BYTE PTR [eax]
  457d18:	bound  esi,QWORD PTR [edx]
  457d1a:	add    al,BYTE PTR [eax]
  457d1c:	bound  esi,QWORD PTR [edx]
  457d1e:	add    al,BYTE PTR [eax]
  457d20:	bound  esi,QWORD PTR [edx]
  457d22:	add    al,BYTE PTR [eax]
  457d24:	bound  esi,QWORD PTR [edx]
  457d26:	add    al,BYTE PTR [eax]
  457d28:	bound  esi,QWORD PTR [edx]
  457d2a:	add    al,BYTE PTR [eax]
  457d2c:	bound  esi,QWORD PTR [edx]
  457d2e:	add    al,BYTE PTR [eax]
  457d30:	bound  esi,QWORD PTR [edx]
  457d32:	add    al,BYTE PTR [eax]
  457d34:	bound  esi,QWORD PTR [edx]
  457d36:	add    al,BYTE PTR [eax]
  457d38:	bound  esi,QWORD PTR [edx]
  457d3a:	add    al,BYTE PTR [eax]
  457d3c:	bound  esi,QWORD PTR [edx]
  457d3e:	add    al,BYTE PTR [eax]
  457d40:	bound  esi,QWORD PTR [edx]
  457d42:	add    al,BYTE PTR [eax]
	...
  457d58:	bound  esi,QWORD PTR [edx]
  457d5a:	add    al,BYTE PTR [eax]
  457d5c:	bound  esi,QWORD PTR [edx]
  457d5e:	add    al,BYTE PTR [eax]
  457d60:	bound  esi,QWORD PTR [edx]
  457d62:	add    al,BYTE PTR [eax]
  457d64:	bound  esi,QWORD PTR [edx]
  457d66:	add    al,BYTE PTR [eax]
  457d68:	bound  esi,QWORD PTR [edx]
  457d6a:	add    al,BYTE PTR [eax]
  457d6c:	bound  esi,QWORD PTR [edx]
  457d6e:	add    al,BYTE PTR [eax]
  457d70:	bound  esi,QWORD PTR [edx]
  457d72:	add    al,BYTE PTR [eax]
  457d74:	bound  esi,QWORD PTR [edx]
  457d76:	add    al,BYTE PTR [eax]
  457d78:	bound  esi,QWORD PTR [edx]
  457d7a:	add    al,BYTE PTR [eax]
  457d7c:	bound  esi,QWORD PTR [edx]
  457d7e:	add    al,BYTE PTR [eax]
  457d80:	bound  esi,QWORD PTR [edx]
  457d82:	add    al,BYTE PTR [eax]
  457d84:	bound  esi,QWORD PTR [edx]
  457d86:	add    al,BYTE PTR [eax]
  457d88:	(bad)  
  457d89:	(bad)  
  457d8b:	add    esp,DWORD PTR [edx-0x27]
  457d8e:	out    0x3,eax
  457d90:	(bad)  
  457d91:	(bad)  
  457d93:	add    esp,DWORD PTR [edx-0x27]
  457d96:	out    0x3,eax
  457d98:	(bad)  
  457d99:	(bad)  
  457d9b:	add    esp,DWORD PTR [edx-0x27]
  457d9e:	out    0x3,eax
  457da0:	(bad)  
  457da1:	(bad)  
  457da3:	add    esp,DWORD PTR [edx-0x27]
  457da6:	out    0x3,eax
  457da8:	(bad)  
  457da9:	(bad)  
  457dab:	add    esp,DWORD PTR [edx-0x27]
  457dae:	out    0x3,eax
  457db0:	(bad)  
  457db1:	(bad)  
  457db3:	add    esp,DWORD PTR [edx-0x27]
  457db6:	out    0x3,eax
  457db8:	(bad)  
  457db9:	(bad)  
  457dbb:	add    eax,DWORD PTR [eax]
	...
  457dcd:	add    BYTE PTR [eax],al
  457dcf:	add    BYTE PTR [edx-0x27],ah
  457dd2:	out    0x3,eax
  457dd4:	(bad)  
  457dd5:	(bad)  
  457dd7:	add    esp,DWORD PTR [edx-0x27]
  457dda:	out    0x3,eax
  457ddc:	(bad)  
  457ddd:	(bad)  
  457ddf:	add    esp,DWORD PTR [edx-0x27]
  457de2:	out    0x3,eax
  457de4:	(bad)  
  457de5:	(bad)  
  457de7:	add    esp,DWORD PTR [edx-0x27]
  457dea:	out    0x3,eax
  457dec:	(bad)  
  457ded:	(bad)  
  457def:	add    esp,DWORD PTR [edx-0x27]
  457df2:	out    0x3,eax
  457df4:	(bad)  
  457df5:	(bad)  
  457df7:	add    esp,DWORD PTR [edx-0x27]
  457dfa:	out    0x3,eax
  457dfc:	(bad)  
  457dfd:	(bad)  
  457dff:	add    esp,DWORD PTR [edx-0x27]
  457e02:	out    0x3,eax
  457e04:	(bad)  
  457e05:	(bad)  
  457e07:	add    esp,DWORD PTR [edx-0x27]
  457e0a:	out    0x3,eax
  457e0c:	(bad)  
  457e0d:	(bad)  
  457e0f:	add    esp,DWORD PTR [edx-0x27]
  457e12:	out    0x3,eax
  457e14:	(bad)  
  457e15:	fld    DWORD PTR [eax]
  457e17:	jmp    0xe946577d
  457e1c:	popa   
  457e1d:	fld    DWORD PTR [eax]
  457e1f:	jmp    0xe9465785
  457e24:	popa   
  457e25:	fld    DWORD PTR [eax]
  457e27:	jmp    0xe946578d
  457e2c:	popa   
  457e2d:	fld    DWORD PTR [eax]
  457e2f:	jmp    0xe9465795
	...
  457e48:	popa   
  457e49:	fld    DWORD PTR [eax]
  457e4b:	jmp    0xe94657b1
  457e50:	popa   
  457e51:	fld    DWORD PTR [eax]
  457e53:	jmp    0xe94657b9
  457e58:	popa   
  457e59:	fld    DWORD PTR [eax]
  457e5b:	jmp    0xe94657c1
  457e60:	popa   
  457e61:	fld    DWORD PTR [eax]
  457e63:	jmp    0xe94657c9
  457e68:	popa   
  457e69:	fld    DWORD PTR [eax]
  457e6b:	jmp    0xe94657d1
  457e70:	popa   
  457e71:	fld    DWORD PTR [eax]
  457e73:	jmp    0xe94657d9
  457e78:	popa   
  457e79:	fld    DWORD PTR [eax]
  457e7b:	jmp    0xe94657e1
  457e80:	popa   
  457e81:	fld    DWORD PTR [eax]
  457e83:	jmp    0xe94657e9
  457e88:	popa   
  457e89:	fld    DWORD PTR [eax]
  457e8b:	jmp    0xe94657f1
  457e90:	popa   
  457e91:	fld    DWORD PTR [eax]
  457e93:	jmp    0xe94657f9
  457e98:	popa   
  457e99:	fld    DWORD PTR [eax]
  457e9b:	jmp    0xe9465801
  457ea0:	popa   
  457ea1:	fld    DWORD PTR [eax]
  457ea3:	add    BYTE PTR [ebx],cl
  457ea5:	fiadd  DWORD PTR [eax]
  457ea7:	add    BYTE PTR [ebx],cl
  457ea9:	fiadd  DWORD PTR [eax]
	...
  457ebf:	add    bl,bh
  457ec1:	fld    DWORD PTR [eax]
  457ec3:	add    bl,bh
  457ec5:	fld    DWORD PTR [eax]
  457ec7:	add    bl,cl
  457ec9:	fld    DWORD PTR [eax]
  457ecb:	add    bl,cl
  457ecd:	fld    DWORD PTR [eax]
  457ecf:	add    BYTE PTR [ebx-0x44ffff27],bh
  457ed5:	fld    DWORD PTR [eax]
  457ed7:	add    bl,cl
  457ed9:	fld    DWORD PTR [eax]
  457edb:	add    bl,cl
  457edd:	fld    DWORD PTR [eax]
  457edf:	add    BYTE PTR [ebx-0x44ffff27],bh
  457ee5:	fld    DWORD PTR [eax]
  457ee7:	add    BYTE PTR [ebx-0x74ffff27],cl
  457eed:	fld    DWORD PTR [eax]
  457eef:	add    BYTE PTR [ebx-0x27],bh
  457ef2:	add    BYTE PTR [eax],al
  457ef4:	jnp    0x457ecf
  457ef6:	add    BYTE PTR [eax],al
  457ef8:	mov    ebx,ecx
  457efa:	add    BYTE PTR [eax],al
  457efc:	mov    ebx,ecx
  457efe:	add    BYTE PTR [eax],al
  457f00:	jnp    0x457edb
  457f02:	add    BYTE PTR [eax],al
  457f04:	jnp    0x457edf
  457f06:	add    BYTE PTR [eax],al
  457f08:	dec    ebx
  457f09:	fld    DWORD PTR [eax]
  457f0b:	add    BYTE PTR [ebx-0x27],cl
  457f0e:	add    BYTE PTR [eax],al
  457f10:	cmp    ebx,ecx
  457f12:	add    BYTE PTR [eax],al
  457f14:	cmp    ebx,ecx
  457f16:	add    BYTE PTR [eax],al
  457f18:	dec    ebx
  457f19:	fld    DWORD PTR [eax]
  457f1b:	add    BYTE PTR [ebx-0x27],cl
  457f1e:	add    BYTE PTR [eax],al
  457f20:	cmp    ebx,ecx
	...
  457f36:	add    BYTE PTR [eax],al
  457f38:	cmp    ebx,ecx
  457f3a:	add    BYTE PTR [eax],al
  457f3c:	or     ebx,ecx
  457f3e:	add    BYTE PTR [eax],al
  457f40:	or     ebx,ecx
  457f42:	add    BYTE PTR [eax],al
  457f44:	bound  esi,QWORD PTR [edx]
  457f46:	add    al,BYTE PTR [eax]
  457f48:	bound  esi,QWORD PTR [edx]
  457f4a:	add    al,BYTE PTR [eax]
  457f4c:	bound  esi,QWORD PTR [edx]
  457f4e:	add    al,BYTE PTR [eax]
  457f50:	bound  esi,QWORD PTR [edx]
  457f52:	add    al,BYTE PTR [eax]
  457f54:	bound  esi,QWORD PTR [edx]
  457f56:	add    al,BYTE PTR [eax]
  457f58:	bound  esi,QWORD PTR [edx]
  457f5a:	add    al,BYTE PTR [eax]
  457f5c:	bound  esi,QWORD PTR [edx]
  457f5e:	add    al,BYTE PTR [eax]
  457f60:	bound  esi,QWORD PTR [edx]
  457f62:	add    al,BYTE PTR [eax]
  457f64:	bound  esi,QWORD PTR [edx]
  457f66:	add    al,BYTE PTR [eax]
  457f68:	bound  esi,QWORD PTR [edx]
  457f6a:	add    al,BYTE PTR [eax]
  457f6c:	bound  esi,QWORD PTR [edx]
  457f6e:	add    al,BYTE PTR [eax]
  457f70:	bound  esi,QWORD PTR [edx]
  457f72:	add    al,BYTE PTR [eax]
  457f74:	bound  esi,QWORD PTR [edx]
  457f76:	add    al,BYTE PTR [eax]
  457f78:	bound  esi,QWORD PTR [edx]
  457f7a:	add    al,BYTE PTR [eax]
  457f7c:	bound  esi,QWORD PTR [edx]
  457f7e:	add    al,BYTE PTR [eax]
  457f80:	bound  esi,QWORD PTR [edx]
  457f82:	add    al,BYTE PTR [eax]
  457f84:	bound  esi,QWORD PTR [edx]
  457f86:	add    al,BYTE PTR [eax]
  457f88:	bound  esi,QWORD PTR [edx]
  457f8a:	add    al,BYTE PTR [eax]
  457f8c:	bound  esi,QWORD PTR [edx]
  457f8e:	add    al,BYTE PTR [eax]
  457f90:	bound  esi,QWORD PTR [edx]
  457f92:	add    al,BYTE PTR [eax]
  457f94:	bound  esi,QWORD PTR [edx]
  457f96:	add    al,BYTE PTR [eax]
  457f98:	bound  esi,QWORD PTR [edx]
  457f9a:	add    al,BYTE PTR [eax]
	...
  457fb0:	bound  esi,QWORD PTR [edx]
  457fb2:	add    al,BYTE PTR [eax]
  457fb4:	bound  esi,QWORD PTR [edx]
  457fb6:	add    al,BYTE PTR [eax]
  457fb8:	bound  esi,QWORD PTR [edx]
  457fba:	add    al,BYTE PTR [eax]
  457fbc:	bound  esi,QWORD PTR [edx]
  457fbe:	add    al,BYTE PTR [eax]
  457fc0:	bound  esi,QWORD PTR [edx]
  457fc2:	add    al,BYTE PTR [eax]
  457fc4:	bound  esi,QWORD PTR [edx]
  457fc6:	add    al,BYTE PTR [eax]
  457fc8:	bound  esi,QWORD PTR [edx]
  457fca:	add    al,BYTE PTR [eax]
  457fcc:	bound  esi,QWORD PTR [edx]
  457fce:	add    al,BYTE PTR [eax]
  457fd0:	(bad)  
  457fd1:	(bad)  
  457fd3:	add    esp,DWORD PTR [edx-0x27]
  457fd6:	out    0x3,eax
  457fd8:	(bad)  
  457fd9:	(bad)  
  457fdb:	add    esp,DWORD PTR [edx-0x27]
  457fde:	out    0x3,eax
  457fe0:	(bad)  
  457fe1:	(bad)  
  457fe3:	add    esp,DWORD PTR [edx-0x27]
  457fe6:	out    0x3,eax
  457fe8:	(bad)  
  457fe9:	(bad)  
  457feb:	add    esp,DWORD PTR [edx-0x27]
  457fee:	out    0x3,eax
  457ff0:	(bad)  
  457ff1:	(bad)  
  457ff3:	add    esp,DWORD PTR [edx-0x27]
  457ff6:	out    0x3,eax
  457ff8:	(bad)  
  457ff9:	(bad)  
  457ffb:	add    esp,DWORD PTR [edx-0x27]
  457ffe:	out    0x3,eax
  458000:	(bad)  
  458001:	(bad)  
  458003:	add    esp,DWORD PTR [edx-0x27]
  458006:	out    0x3,eax
  458008:	(bad)  
  458009:	(bad)  
  45800b:	add    esp,DWORD PTR [edx-0x27]
  45800e:	out    0x3,eax
  458010:	(bad)  
  458011:	(bad)  
  458013:	add    eax,DWORD PTR [eax]
	...
  458025:	add    BYTE PTR [eax],al
  458027:	add    BYTE PTR [edx-0x27],ah
  45802a:	out    0x3,eax
  45802c:	(bad)  
  45802d:	(bad)  
  45802f:	add    esp,DWORD PTR [edx-0x27]
  458032:	out    0x3,eax
  458034:	(bad)  
  458035:	(bad)  
  458037:	add    esp,DWORD PTR [edx-0x27]
  45803a:	out    0x3,eax
  45803c:	(bad)  
  45803d:	(bad)  
  45803f:	add    esp,DWORD PTR [edx-0x27]
  458042:	out    0x3,eax
  458044:	(bad)  
  458045:	(bad)  
  458047:	add    esp,DWORD PTR [edx-0x27]
  45804a:	out    0x3,eax
  45804c:	(bad)  
  45804d:	(bad)  
  45804f:	add    esp,DWORD PTR [edx-0x27]
  458052:	out    0x3,eax
  458054:	(bad)  
  458055:	(bad)  
  458057:	add    esp,DWORD PTR [edx-0x27]
  45805a:	out    0x3,eax
  45805c:	(bad)  
  45805d:	fld    DWORD PTR [eax]
  45805f:	jmp    0xe94659c5
  458064:	popa   
  458065:	fld    DWORD PTR [eax]
  458067:	jmp    0xe94659cd
  45806c:	popa   
  45806d:	fld    DWORD PTR [eax]
  45806f:	jmp    0xe94659d5
  458074:	popa   
  458075:	fld    DWORD PTR [eax]
  458077:	jmp    0xe94659dd
  45807c:	popa   
  45807d:	fld    DWORD PTR [eax]
  45807f:	jmp    0xe94659e5
  458084:	popa   
  458085:	fld    DWORD PTR [eax]
  458087:	jmp    0xe94659ed
	...
  4580a0:	popa   
  4580a1:	fld    DWORD PTR [eax]
  4580a3:	jmp    0xe9465a09
  4580a8:	popa   
  4580a9:	fld    DWORD PTR [eax]
  4580ab:	jmp    0xe9465a11
  4580b0:	popa   
  4580b1:	fld    DWORD PTR [eax]
  4580b3:	jmp    0xe9465a19
  4580b8:	popa   
  4580b9:	fld    DWORD PTR [eax]
  4580bb:	jmp    0xe9465a21
  4580c0:	popa   
  4580c1:	fld    DWORD PTR [eax]
  4580c3:	jmp    0xe9465a29
  4580c8:	popa   
  4580c9:	fld    DWORD PTR [eax]
  4580cb:	jmp    0xe9465a31
  4580d0:	popa   
  4580d1:	fld    DWORD PTR [eax]
  4580d3:	jmp    0xe9465a39
  4580d8:	popa   
  4580d9:	fld    DWORD PTR [eax]
  4580db:	jmp    0xe9465a41
  4580e0:	popa   
  4580e1:	fld    DWORD PTR [eax]
  4580e3:	jmp    0xe9465a49
  4580e8:	popa   
  4580e9:	fld    DWORD PTR [eax]
  4580eb:	add    BYTE PTR [ebx-0x2a],cl
  4580ee:	add    BYTE PTR [eax],al
  4580f0:	cmp    edx,esi
  4580f2:	add    BYTE PTR [eax],al
  4580f4:	cmp    edx,esi
  4580f6:	add    BYTE PTR [eax],al
  4580f8:	or     edx,esi
  4580fa:	add    BYTE PTR [eax],al
  4580fc:	or     edx,esi
  4580fe:	add    BYTE PTR [eax],al
  458100:	sti    
  458101:	aad    0x0
	...
  458117:	add    bl,bh
  458119:	aad    0x0
  45811b:	add    BYTE PTR [ebx],cl
  45811d:	(bad)  
  45811e:	add    BYTE PTR [eax],al
  458120:	or     edx,esi
  458122:	add    BYTE PTR [eax],al
  458124:	sti    
  458125:	aad    0x0
  458127:	add    bl,bh
  458129:	aad    0x0
  45812b:	add    bl,cl
  45812d:	aad    0x0
  45812f:	add    bl,cl
  458131:	aad    0x0
  458133:	add    BYTE PTR [ebx-0x44ffff2b],bh
  458139:	aad    0x0
  45813b:	add    bl,cl
  45813d:	aad    0x0
  45813f:	add    bl,cl
  458141:	aad    0x0
  458143:	add    BYTE PTR [ebx-0x44ffff2b],bh
  458149:	aad    0x0
  45814b:	add    BYTE PTR [ebx-0x74ffff2b],cl
  458151:	aad    0x0
  458153:	add    BYTE PTR [ebx-0x2b],bh
  458156:	add    BYTE PTR [eax],al
  458158:	jnp    0x45812f
  45815a:	add    BYTE PTR [eax],al
  45815c:	mov    edx,ebp
  45815e:	add    BYTE PTR [eax],al
  458160:	mov    edx,ebp
  458162:	add    BYTE PTR [eax],al
  458164:	jnp    0x45813b
  458166:	add    BYTE PTR [eax],al
  458168:	jnp    0x45813f
  45816a:	add    BYTE PTR [eax],al
  45816c:	dec    ebx
  45816d:	fld    QWORD PTR [eax]
  45816f:	add    BYTE PTR [ebx-0x23],cl
  458172:	add    BYTE PTR [eax],al
  458174:	cmp    ebx,ebp
  458176:	add    BYTE PTR [eax],al
  458178:	bound  esi,QWORD PTR [edx]
  45817a:	add    al,BYTE PTR [eax]
	...
  458190:	bound  esi,QWORD PTR [edx]
  458192:	add    al,BYTE PTR [eax]
  458194:	bound  esi,QWORD PTR [edx]
  458196:	add    al,BYTE PTR [eax]
  458198:	bound  esi,QWORD PTR [edx]
  45819a:	add    al,BYTE PTR [eax]
  45819c:	bound  esi,QWORD PTR [edx]
  45819e:	add    al,BYTE PTR [eax]
  4581a0:	bound  esi,QWORD PTR [edx]
  4581a2:	add    al,BYTE PTR [eax]
  4581a4:	bound  esi,QWORD PTR [edx]
  4581a6:	add    al,BYTE PTR [eax]
  4581a8:	bound  esi,QWORD PTR [edx]
  4581aa:	add    al,BYTE PTR [eax]
  4581ac:	bound  esi,QWORD PTR [edx]
  4581ae:	add    al,BYTE PTR [eax]
  4581b0:	bound  esi,QWORD PTR [edx]
  4581b2:	add    al,BYTE PTR [eax]
  4581b4:	bound  esi,QWORD PTR [edx]
  4581b6:	add    al,BYTE PTR [eax]
  4581b8:	bound  esi,QWORD PTR [edx]
  4581ba:	add    al,BYTE PTR [eax]
  4581bc:	bound  esi,QWORD PTR [edx]
  4581be:	add    al,BYTE PTR [eax]
  4581c0:	bound  esi,QWORD PTR [edx]
  4581c2:	add    al,BYTE PTR [eax]
  4581c4:	bound  esi,QWORD PTR [edx]
  4581c6:	add    al,BYTE PTR [eax]
  4581c8:	bound  esi,QWORD PTR [edx]
  4581ca:	add    al,BYTE PTR [eax]
  4581cc:	bound  esi,QWORD PTR [edx]
  4581ce:	add    al,BYTE PTR [eax]
  4581d0:	bound  esi,QWORD PTR [edx]
  4581d2:	add    al,BYTE PTR [eax]
  4581d4:	bound  esi,QWORD PTR [edx]
  4581d6:	add    al,BYTE PTR [eax]
  4581d8:	bound  esi,QWORD PTR [edx]
  4581da:	add    al,BYTE PTR [eax]
  4581dc:	bound  esi,QWORD PTR [edx]
  4581de:	add    al,BYTE PTR [eax]
  4581e0:	bound  esi,QWORD PTR [edx]
  4581e2:	add    al,BYTE PTR [eax]
  4581e4:	bound  esi,QWORD PTR [edx]
  4581e6:	add    al,BYTE PTR [eax]
  4581e8:	bound  esi,QWORD PTR [edx]
  4581ea:	add    al,BYTE PTR [eax]
  4581ec:	bound  esi,QWORD PTR [edx]
  4581ee:	add    al,BYTE PTR [eax]
  4581f0:	bound  esi,QWORD PTR [edx]
  4581f2:	add    al,BYTE PTR [eax]
	...
  458208:	bound  esi,QWORD PTR [edx]
  45820a:	add    al,BYTE PTR [eax]
  45820c:	bound  esi,QWORD PTR [edx]
  45820e:	add    al,BYTE PTR [eax]
  458210:	bound  esi,QWORD PTR [edx]
  458212:	add    al,BYTE PTR [eax]
  458214:	bound  esi,QWORD PTR [edx]
  458216:	add    al,BYTE PTR [eax]
  458218:	(bad)  
  458219:	(bad)  
  45821b:	add    esp,DWORD PTR [edx-0x27]
  45821e:	out    0x3,eax
  458220:	(bad)  
  458221:	(bad)  
  458223:	add    esp,DWORD PTR [edx-0x27]
  458226:	out    0x3,eax
  458228:	(bad)  
  458229:	(bad)  
  45822b:	add    esp,DWORD PTR [edx-0x27]
  45822e:	out    0x3,eax
  458230:	(bad)  
  458231:	(bad)  
  458233:	add    esp,DWORD PTR [edx-0x27]
  458236:	out    0x3,eax
  458238:	(bad)  
  458239:	(bad)  
  45823b:	add    esp,DWORD PTR [edx-0x27]
  45823e:	out    0x3,eax
  458240:	(bad)  
  458241:	(bad)  
  458243:	add    esp,DWORD PTR [edx-0x27]
  458246:	out    0x3,eax
  458248:	(bad)  
  458249:	(bad)  
  45824b:	add    esp,DWORD PTR [edx-0x27]
  45824e:	out    0x3,eax
  458250:	(bad)  
  458251:	(bad)  
  458253:	add    esp,DWORD PTR [edx-0x27]
  458256:	out    0x3,eax
  458258:	(bad)  
  458259:	(bad)  
  45825b:	add    esp,DWORD PTR [edx-0x27]
  45825e:	out    0x3,eax
  458260:	(bad)  
  458261:	(bad)  
  458263:	add    esp,DWORD PTR [edx-0x27]
  458266:	out    0x3,eax
  458268:	(bad)  
  458269:	(bad)  
  45826b:	add    eax,DWORD PTR [eax]
	...
  45827d:	add    BYTE PTR [eax],al
  45827f:	add    BYTE PTR [edx-0x27],ah
  458282:	out    0x3,eax
  458284:	(bad)  
  458285:	(bad)  
  458287:	add    esp,DWORD PTR [edx-0x27]
  45828a:	out    0x3,eax
  45828c:	(bad)  
  45828d:	(bad)  
  45828f:	add    esp,DWORD PTR [edx-0x27]
  458292:	out    0x3,eax
  458294:	(bad)  
  458295:	(bad)  
  458297:	add    esp,DWORD PTR [edx-0x27]
  45829a:	out    0x3,eax
  45829c:	(bad)  
  45829d:	(bad)  
  45829f:	add    esp,DWORD PTR [edx-0x27]
  4582a2:	out    0x3,eax
  4582a4:	(bad)  
  4582a5:	fld    DWORD PTR [eax]
  4582a7:	jmp    0xe9465c0d
  4582ac:	popa   
  4582ad:	fld    DWORD PTR [eax]
  4582af:	jmp    0xe9465c15
  4582b4:	popa   
  4582b5:	fld    DWORD PTR [eax]
  4582b7:	jmp    0xe9465c1d
  4582bc:	popa   
  4582bd:	fld    DWORD PTR [eax]
  4582bf:	jmp    0xe9465c25
  4582c4:	popa   
  4582c5:	fld    DWORD PTR [eax]
  4582c7:	jmp    0xe9465c2d
  4582cc:	popa   
  4582cd:	fld    DWORD PTR [eax]
  4582cf:	jmp    0xe9465c35
  4582d4:	popa   
  4582d5:	fld    DWORD PTR [eax]
  4582d7:	jmp    0xe9465c3d
  4582dc:	popa   
  4582dd:	fld    DWORD PTR [eax]
  4582df:	jmp    0xe9465c45
	...
  4582f8:	popa   
  4582f9:	fld    DWORD PTR [eax]
  4582fb:	jmp    0xe9465c61
  458300:	popa   
  458301:	fld    DWORD PTR [eax]
  458303:	jmp    0xe9465c69
  458308:	popa   
  458309:	fld    DWORD PTR [eax]
  45830b:	jmp    0xe9465c71
  458310:	popa   
  458311:	fld    DWORD PTR [eax]
  458313:	jmp    0xe9465c79
  458318:	popa   
  458319:	fld    DWORD PTR [eax]
  45831b:	jmp    0xe9465c81
  458320:	popa   
  458321:	fld    DWORD PTR [eax]
  458323:	jmp    0xe9465c89
  458328:	popa   
  458329:	fld    DWORD PTR [eax]
  45832b:	jmp    0xe9465c91
  458330:	popa   
  458331:	fld    DWORD PTR [eax]
  458333:	add    BYTE PTR [ebx-0x26],bh
  458336:	add    BYTE PTR [eax],al
  458338:	jnp    0x458314
  45833a:	add    BYTE PTR [eax],al
  45833c:	dec    ebx
  45833d:	fiadd  DWORD PTR [eax]
  45833f:	add    BYTE PTR [ebx-0x26],cl
  458342:	add    BYTE PTR [eax],al
  458344:	cmp    ebx,edx
  458346:	add    BYTE PTR [eax],al
  458348:	cmp    ebx,edx
  45834a:	add    BYTE PTR [eax],al
  45834c:	dec    ebx
  45834d:	fiadd  DWORD PTR [eax]
  45834f:	add    BYTE PTR [ebx-0x26],cl
  458352:	add    BYTE PTR [eax],al
  458354:	cmp    ebx,edx
  458356:	add    BYTE PTR [eax],al
  458358:	cmp    ebx,edx
	...
  45836e:	add    BYTE PTR [eax],al
  458370:	or     ebx,edx
  458372:	add    BYTE PTR [eax],al
  458374:	or     ebx,edx
  458376:	add    BYTE PTR [eax],al
  458378:	sti    
  458379:	fld    DWORD PTR [eax]
  45837b:	add    bl,bh
  45837d:	fld    DWORD PTR [eax]
  45837f:	add    BYTE PTR [ebx],cl
  458381:	fiadd  DWORD PTR [eax]
  458383:	add    BYTE PTR [ebx],cl
  458385:	fiadd  DWORD PTR [eax]
  458387:	add    bl,bh
  458389:	fld    DWORD PTR [eax]
  45838b:	add    bl,bh
  45838d:	fld    DWORD PTR [eax]
  45838f:	add    bl,cl
  458391:	fld    DWORD PTR [eax]
  458393:	add    bl,cl
  458395:	fld    DWORD PTR [eax]
  458397:	add    BYTE PTR [ebx-0x44ffff27],bh
  45839d:	fld    DWORD PTR [eax]
  45839f:	add    bl,cl
  4583a1:	fld    DWORD PTR [eax]
  4583a3:	add    bl,cl
  4583a5:	fld    DWORD PTR [eax]
  4583a7:	add    BYTE PTR [ebx-0x44ffff27],bh
  4583ad:	fld    DWORD PTR [eax]
  4583af:	add    BYTE PTR [ebx-0x74ffff27],cl
  4583b5:	fld    DWORD PTR [eax]
  4583b7:	add    BYTE PTR [ebx-0x27],bh
  4583ba:	add    BYTE PTR [eax],al
  4583bc:	jnp    0x458397
  4583be:	add    BYTE PTR [eax],al
  4583c0:	bound  esi,QWORD PTR [eax]
  4583c2:	add    al,BYTE PTR [eax]
  4583c4:	bound  esi,QWORD PTR [eax]
  4583c6:	add    al,BYTE PTR [eax]
  4583c8:	bound  esi,QWORD PTR [eax]
  4583ca:	add    al,BYTE PTR [eax]
  4583cc:	bound  esi,QWORD PTR [eax]
  4583ce:	add    al,BYTE PTR [eax]
  4583d0:	bound  esi,QWORD PTR [edx]
  4583d2:	add    al,BYTE PTR [eax]
	...
  4583e8:	bound  esi,QWORD PTR [edx]
  4583ea:	add    al,BYTE PTR [eax]
  4583ec:	bound  esi,QWORD PTR [edx]
  4583ee:	add    al,BYTE PTR [eax]
  4583f0:	bound  esi,QWORD PTR [edx]
  4583f2:	add    al,BYTE PTR [eax]
  4583f4:	bound  esi,QWORD PTR [edx]
  4583f6:	add    al,BYTE PTR [eax]
  4583f8:	bound  esi,QWORD PTR [edx]
  4583fa:	add    al,BYTE PTR [eax]
  4583fc:	bound  esi,QWORD PTR [edx]
  4583fe:	add    al,BYTE PTR [eax]
  458400:	bound  esi,QWORD PTR [edx]
  458402:	add    al,BYTE PTR [eax]
  458404:	bound  esi,QWORD PTR [edx]
  458406:	add    al,BYTE PTR [eax]
  458408:	bound  esi,QWORD PTR [edx]
  45840a:	add    al,BYTE PTR [eax]
  45840c:	bound  esi,QWORD PTR [edx]
  45840e:	add    al,BYTE PTR [eax]
  458410:	bound  esi,QWORD PTR [edx]
  458412:	add    al,BYTE PTR [eax]
  458414:	bound  esi,QWORD PTR [edx]
  458416:	add    al,BYTE PTR [eax]
  458418:	bound  esi,QWORD PTR [edx]
  45841a:	add    al,BYTE PTR [eax]
  45841c:	bound  esi,QWORD PTR [edx]
  45841e:	add    al,BYTE PTR [eax]
  458420:	bound  esi,QWORD PTR [edx]
  458422:	add    al,BYTE PTR [eax]
  458424:	bound  esi,QWORD PTR [edx]
  458426:	add    al,BYTE PTR [eax]
  458428:	bound  esi,QWORD PTR [edx]
  45842a:	add    al,BYTE PTR [eax]
  45842c:	bound  esi,QWORD PTR [edx]
  45842e:	add    al,BYTE PTR [eax]
  458430:	bound  esi,QWORD PTR [edx]
  458432:	add    al,BYTE PTR [eax]
  458434:	bound  esi,QWORD PTR [edx]
  458436:	add    al,BYTE PTR [eax]
  458438:	bound  esi,QWORD PTR [edx]
  45843a:	add    al,BYTE PTR [eax]
  45843c:	bound  esi,QWORD PTR [edx]
  45843e:	add    al,BYTE PTR [eax]
  458440:	bound  esi,QWORD PTR [edx]
  458442:	add    al,BYTE PTR [eax]
  458444:	bound  esi,QWORD PTR [edx]
  458446:	add    al,BYTE PTR [eax]
  458448:	bound  esi,QWORD PTR [edx]
  45844a:	add    al,BYTE PTR [eax]
	...
  458460:	(bad)  
  458461:	(bad)  
  458463:	add    esp,DWORD PTR [edx-0x27]
  458466:	out    0x3,eax
  458468:	(bad)  
  458469:	(bad)  
  45846b:	add    esp,DWORD PTR [edx-0x27]
  45846e:	out    0x3,eax
  458470:	(bad)  
  458471:	(bad)  
  458473:	add    esp,DWORD PTR [edx-0x27]
  458476:	out    0x3,eax
  458478:	(bad)  
  458479:	(bad)  
  45847b:	add    esp,DWORD PTR [edx-0x27]
  45847e:	out    0x3,eax
  458480:	(bad)  
  458481:	(bad)  
  458483:	add    esp,DWORD PTR [edx-0x27]
  458486:	out    0x3,eax
  458488:	(bad)  
  458489:	(bad)  
  45848b:	add    esp,DWORD PTR [edx-0x27]
  45848e:	out    0x3,eax
  458490:	(bad)  
  458491:	(bad)  
  458493:	add    esp,DWORD PTR [edx-0x27]
  458496:	out    0x3,eax
  458498:	(bad)  
  458499:	(bad)  
  45849b:	add    esp,DWORD PTR [edx-0x27]
  45849e:	out    0x3,eax
  4584a0:	(bad)  
  4584a1:	(bad)  
  4584a3:	add    esp,DWORD PTR [edx-0x27]
  4584a6:	out    0x3,eax
  4584a8:	(bad)  
  4584a9:	(bad)  
  4584ab:	add    esp,DWORD PTR [edx-0x27]
  4584ae:	out    0x3,eax
  4584b0:	(bad)  
  4584b1:	(bad)  
  4584b3:	add    esp,DWORD PTR [edx-0x27]
  4584b6:	out    0x3,eax
  4584b8:	(bad)  
  4584b9:	(bad)  
  4584bb:	add    esp,DWORD PTR [edx-0x27]
  4584be:	out    0x3,eax
  4584c0:	(bad)  
  4584c1:	(bad)  
  4584c3:	add    eax,DWORD PTR [eax]
	...
  4584d5:	add    BYTE PTR [eax],al
  4584d7:	add    BYTE PTR [edx-0x27],ah
  4584da:	out    0x3,eax
  4584dc:	(bad)  
  4584dd:	(bad)  
  4584df:	add    esp,DWORD PTR [edx-0x27]
  4584e2:	out    0x3,eax
  4584e4:	(bad)  
  4584e5:	(bad)  
  4584e7:	add    esp,DWORD PTR [edx-0x27]
  4584ea:	out    0x3,eax
  4584ec:	(bad)  
  4584ed:	fld    DWORD PTR [eax]
  4584ef:	jmp    0xe9465e55
  4584f4:	popa   
  4584f5:	fld    DWORD PTR [eax]
  4584f7:	jmp    0xe9465e5d
  4584fc:	popa   
  4584fd:	fld    DWORD PTR [eax]
  4584ff:	jmp    0xe9465e65
  458504:	popa   
  458505:	fld    DWORD PTR [eax]
  458507:	jmp    0xe9465e6d
  45850c:	popa   
  45850d:	fld    DWORD PTR [eax]
  45850f:	jmp    0xe9465e75
  458514:	popa   
  458515:	fld    DWORD PTR [eax]
  458517:	jmp    0xe9465e7d
  45851c:	popa   
  45851d:	fld    DWORD PTR [eax]
  45851f:	jmp    0xe9465e85
  458524:	popa   
  458525:	fld    DWORD PTR [eax]
  458527:	jmp    0xe9465e8d
  45852c:	popa   
  45852d:	fld    DWORD PTR [eax]
  45852f:	jmp    0xe9465e95
  458534:	popa   
  458535:	fld    DWORD PTR [eax]
  458537:	jmp    0xe9465e9d
	...
  458550:	popa   
  458551:	fld    DWORD PTR [eax]
  458553:	jmp    0xe9465eb9
  458558:	popa   
  458559:	fld    DWORD PTR [eax]
  45855b:	jmp    0xe9465ec1
  458560:	popa   
  458561:	fld    DWORD PTR [eax]
  458563:	jmp    0xe9465ec9
  458568:	popa   
  458569:	fld    DWORD PTR [eax]
  45856b:	jmp    0xe9465ed1
  458570:	popa   
  458571:	fld    DWORD PTR [eax]
  458573:	jmp    0xe9465ed9
  458578:	popa   
  458579:	fld    DWORD PTR [eax]
  45857b:	add    BYTE PTR [ebx-0x74ffff2a],bh
  458581:	(bad)  
  458582:	add    BYTE PTR [eax],al
  458584:	mov    edx,esi
  458586:	add    BYTE PTR [eax],al
  458588:	jnp    0x458560
  45858a:	add    BYTE PTR [eax],al
  45858c:	jnp    0x458564
  45858e:	add    BYTE PTR [eax],al
  458590:	mov    edx,esi
  458592:	add    BYTE PTR [eax],al
  458594:	mov    edx,esi
  458596:	add    BYTE PTR [eax],al
  458598:	jnp    0x458570
  45859a:	add    BYTE PTR [eax],al
  45859c:	jnp    0x458574
  45859e:	add    BYTE PTR [eax],al
  4585a0:	dec    ebx
  4585a1:	(bad)  
  4585a2:	add    BYTE PTR [eax],al
  4585a4:	dec    ebx
  4585a5:	(bad)  
  4585a6:	add    BYTE PTR [eax],al
  4585a8:	cmp    edx,esi
  4585aa:	add    BYTE PTR [eax],al
  4585ac:	cmp    edx,esi
  4585ae:	add    BYTE PTR [eax],al
  4585b0:	dec    ebx
  4585b1:	(bad)  
	...
  4585c6:	add    BYTE PTR [eax],al
  4585c8:	dec    ebx
  4585c9:	(bad)  
  4585ca:	add    BYTE PTR [eax],al
  4585cc:	cmp    edx,esi
  4585ce:	add    BYTE PTR [eax],al
  4585d0:	cmp    edx,esi
  4585d2:	add    BYTE PTR [eax],al
  4585d4:	or     edx,esi
  4585d6:	add    BYTE PTR [eax],al
  4585d8:	or     edx,esi
  4585da:	add    BYTE PTR [eax],al
  4585dc:	sti    
  4585dd:	aad    0x0
  4585df:	add    bl,bh
  4585e1:	aad    0x0
  4585e3:	add    BYTE PTR [ebx],cl
  4585e5:	(bad)  
  4585e6:	add    BYTE PTR [eax],al
  4585e8:	or     edx,esi
  4585ea:	add    BYTE PTR [eax],al
  4585ec:	sti    
  4585ed:	aad    0x0
  4585ef:	add    bl,bh
  4585f1:	aad    0x0
  4585f3:	add    bl,cl
  4585f5:	aad    0x0
  4585f7:	add    bl,cl
  4585f9:	aad    0x0
  4585fb:	add    BYTE PTR [ebx-0x44ffff2b],bh
  458601:	aad    0x0
  458603:	add    bl,cl
  458605:	aad    0x0
  458607:	add    BYTE PTR [edx+0x30],ah
  45860a:	add    al,BYTE PTR [eax]
  45860c:	bound  esi,QWORD PTR [eax]
  45860e:	add    al,BYTE PTR [eax]
  458610:	bound  esi,QWORD PTR [eax]
  458612:	add    al,BYTE PTR [eax]
  458614:	bound  esi,QWORD PTR [eax]
  458616:	add    al,BYTE PTR [eax]
  458618:	bound  esi,QWORD PTR [eax]
  45861a:	add    al,BYTE PTR [eax]
  45861c:	bound  esi,QWORD PTR [eax]
  45861e:	add    al,BYTE PTR [eax]
  458620:	bound  esi,QWORD PTR [eax]
  458622:	add    al,BYTE PTR [eax]
  458624:	bound  esi,QWORD PTR [eax]
  458626:	add    al,BYTE PTR [eax]
  458628:	bound  esi,QWORD PTR [eax]
  45862a:	add    al,BYTE PTR [eax]
	...
  458640:	bound  esi,QWORD PTR [eax]
  458642:	add    al,BYTE PTR [eax]
  458644:	bound  esi,QWORD PTR [eax]
  458646:	add    al,BYTE PTR [eax]
  458648:	bound  eax,QWORD PTR [edx]
  45864a:	add    al,BYTE PTR [eax]
  45864c:	bound  eax,QWORD PTR [edx]
  45864e:	add    al,BYTE PTR [eax]
  458650:	bound  eax,QWORD PTR [edx]
  458652:	add    al,BYTE PTR [eax]
  458654:	bound  eax,QWORD PTR [edx]
  458656:	add    al,BYTE PTR [eax]
  458658:	bound  eax,QWORD PTR [edx]
  45865a:	add    al,BYTE PTR [eax]
  45865c:	bound  eax,QWORD PTR [edx]
  45865e:	add    al,BYTE PTR [eax]
  458660:	bound  eax,QWORD PTR [edx]
  458662:	add    al,BYTE PTR [eax]
  458664:	bound  eax,QWORD PTR [edx]
  458666:	add    al,BYTE PTR [eax]
  458668:	bound  eax,QWORD PTR [edx]
  45866a:	add    al,BYTE PTR [eax]
  45866c:	bound  eax,QWORD PTR [edx]
  45866e:	add    al,BYTE PTR [eax]
  458670:	bound  eax,QWORD PTR [edx]
  458672:	add    al,BYTE PTR [eax]
  458674:	bound  eax,QWORD PTR [edx]
  458676:	add    al,BYTE PTR [eax]
  458678:	bound  eax,QWORD PTR [edx]
  45867a:	add    al,BYTE PTR [eax]
  45867c:	bound  eax,QWORD PTR [edx]
  45867e:	add    al,BYTE PTR [eax]
  458680:	bound  eax,QWORD PTR [edx]
  458682:	add    al,BYTE PTR [eax]
  458684:	bound  eax,QWORD PTR [edx]
  458686:	add    al,BYTE PTR [eax]
  458688:	bound  eax,QWORD PTR [edx]
  45868a:	add    al,BYTE PTR [eax]
  45868c:	bound  eax,QWORD PTR [edx]
  45868e:	add    al,BYTE PTR [eax]
  458690:	bound  eax,QWORD PTR [edx]
  458692:	add    al,BYTE PTR [eax]
  458694:	(bad)  
  458695:	(bad)  
  458697:	add    esp,DWORD PTR [edx-0x27]
  45869a:	out    0x3,eax
  45869c:	(bad)  
  45869d:	(bad)  
  45869f:	add    esp,DWORD PTR [edx-0x27]
  4586a2:	out    0x3,eax
	...
  4586b8:	(bad)  
  4586b9:	(bad)  
  4586bb:	add    esp,DWORD PTR [edx-0x27]
  4586be:	out    0x3,eax
  4586c0:	(bad)  
  4586c1:	(bad)  
  4586c3:	add    esp,DWORD PTR [edx-0x27]
  4586c6:	out    0x3,eax
  4586c8:	(bad)  
  4586c9:	(bad)  
  4586cb:	add    esp,DWORD PTR [edx-0x27]
  4586ce:	out    0x3,eax
  4586d0:	(bad)  
  4586d1:	(bad)  
  4586d3:	add    esp,DWORD PTR [edx-0x27]
  4586d6:	out    0x3,eax
  4586d8:	(bad)  
  4586d9:	(bad)  
  4586db:	add    esp,DWORD PTR [edx-0x27]
  4586de:	out    0x3,eax
  4586e0:	(bad)  
  4586e1:	(bad)  
  4586e3:	add    esp,DWORD PTR [edx-0x27]
  4586e6:	out    0x3,eax
  4586e8:	(bad)  
  4586e9:	(bad)  
  4586eb:	add    esp,DWORD PTR [edx-0x27]
  4586ee:	out    0x3,eax
  4586f0:	(bad)  
  4586f1:	(bad)  
  4586f3:	add    esp,DWORD PTR [edx-0x27]
  4586f6:	out    0x3,eax
  4586f8:	(bad)  
  4586f9:	(bad)  
  4586fb:	add    esp,DWORD PTR [edx-0x27]
  4586fe:	out    0x3,eax
  458700:	(bad)  
  458701:	(bad)  
  458703:	add    esp,DWORD PTR [edx-0x27]
  458706:	out    0x3,eax
  458708:	(bad)  
  458709:	(bad)  
  45870b:	add    esp,DWORD PTR [edx-0x27]
  45870e:	out    0x3,eax
  458710:	(bad)  
  458711:	(bad)  
  458713:	add    esp,DWORD PTR [edx-0x27]
  458716:	out    0x3,eax
  458718:	(bad)  
  458719:	(bad)  
  45871b:	add    eax,DWORD PTR [eax]
	...
  45872d:	add    BYTE PTR [eax],al
  45872f:	add    BYTE PTR [edx-0x27],ah
  458732:	out    0x3,eax
  458734:	(bad)  
  458735:	fld    DWORD PTR [eax]
  458737:	jmp    0xe946609d
  45873c:	popa   
  45873d:	fld    DWORD PTR [eax]
  45873f:	jmp    0xe94660a5
  458744:	popa   
  458745:	fld    DWORD PTR [eax]
  458747:	jmp    0xe94660ad
  45874c:	popa   
  45874d:	fld    DWORD PTR [eax]
  45874f:	jmp    0xe94660b5
  458754:	popa   
  458755:	fld    DWORD PTR [eax]
  458757:	jmp    0xe94660bd
  45875c:	popa   
  45875d:	fld    DWORD PTR [eax]
  45875f:	jmp    0xe94660c5
  458764:	popa   
  458765:	fld    DWORD PTR [eax]
  458767:	jmp    0xe94660cd
  45876c:	popa   
  45876d:	fld    DWORD PTR [eax]
  45876f:	jmp    0xe94660d5
  458774:	popa   
  458775:	fld    DWORD PTR [eax]
  458777:	jmp    0xe94660dd
  45877c:	popa   
  45877d:	fld    DWORD PTR [eax]
  45877f:	jmp    0xe94660e5
  458784:	popa   
  458785:	fld    DWORD PTR [eax]
  458787:	jmp    0xe94660ed
  45878c:	popa   
  45878d:	fld    DWORD PTR [eax]
  45878f:	jmp    0xe94660f5
	...
  4587a8:	popa   
  4587a9:	fld    DWORD PTR [eax]
  4587ab:	jmp    0xe9466111
  4587b0:	popa   
  4587b1:	fld    DWORD PTR [eax]
  4587b3:	jmp    0xe9466119
  4587b8:	popa   
  4587b9:	fld    DWORD PTR [eax]
  4587bb:	jmp    0xe9466121
  4587c0:	popa   
  4587c1:	fld    DWORD PTR [eax]
  4587c3:	add    bl,cl
  4587c5:	fiadd  DWORD PTR [eax]
  4587c7:	add    bl,cl
  4587c9:	fiadd  DWORD PTR [eax]
  4587cb:	add    BYTE PTR [ebx-0x44ffff26],bh
  4587d1:	fiadd  DWORD PTR [eax]
  4587d3:	add    bl,cl
  4587d5:	fiadd  DWORD PTR [eax]
  4587d7:	add    bl,cl
  4587d9:	fiadd  DWORD PTR [eax]
  4587db:	add    BYTE PTR [ebx-0x44ffff26],bh
  4587e1:	fiadd  DWORD PTR [eax]
  4587e3:	add    BYTE PTR [ebx-0x74ffff26],cl
  4587e9:	fiadd  DWORD PTR [eax]
  4587eb:	add    BYTE PTR [ebx-0x26],bh
  4587ee:	add    BYTE PTR [eax],al
  4587f0:	jnp    0x4587cc
  4587f2:	add    BYTE PTR [eax],al
  4587f4:	mov    ebx,edx
  4587f6:	add    BYTE PTR [eax],al
  4587f8:	mov    ebx,edx
  4587fa:	add    BYTE PTR [eax],al
  4587fc:	jnp    0x4587d8
  4587fe:	add    BYTE PTR [eax],al
  458800:	jnp    0x4587dc
  458802:	add    BYTE PTR [eax],al
  458804:	dec    ebx
  458805:	fiadd  DWORD PTR [eax]
  458807:	add    BYTE PTR [ebx-0x26],cl
	...
  45881e:	add    BYTE PTR [eax],al
  458820:	cmp    ebx,edx
  458822:	add    BYTE PTR [eax],al
  458824:	cmp    ebx,edx
  458826:	add    BYTE PTR [eax],al
  458828:	dec    ebx
  458829:	fiadd  DWORD PTR [eax]
  45882b:	add    BYTE PTR [ebx-0x26],cl
  45882e:	add    BYTE PTR [eax],al
  458830:	cmp    ebx,edx
  458832:	add    BYTE PTR [eax],al
  458834:	cmp    ebx,edx
  458836:	add    BYTE PTR [eax],al
  458838:	or     ebx,edx
  45883a:	add    BYTE PTR [eax],al
  45883c:	or     ebx,edx
  45883e:	add    BYTE PTR [eax],al
  458840:	sti    
  458841:	fld    DWORD PTR [eax]
  458843:	add    bl,bh
  458845:	fld    DWORD PTR [eax]
  458847:	add    BYTE PTR [ebx],cl
  458849:	fiadd  DWORD PTR [eax]
  45884b:	add    BYTE PTR [ebx],cl
  45884d:	fiadd  DWORD PTR [eax]
  45884f:	add    BYTE PTR [edx+0x0],ah
  458852:	add    al,BYTE PTR [eax]
  458854:	bound  eax,QWORD PTR [eax]
  458856:	add    al,BYTE PTR [eax]
  458858:	bound  eax,QWORD PTR [eax]
  45885a:	add    al,BYTE PTR [eax]
  45885c:	bound  eax,QWORD PTR [eax]
  45885e:	add    al,BYTE PTR [eax]
  458860:	bound  eax,QWORD PTR [eax]
  458862:	add    al,BYTE PTR [eax]
  458864:	bound  eax,QWORD PTR [eax]
  458866:	add    al,BYTE PTR [eax]
  458868:	bound  eax,QWORD PTR [eax]
  45886a:	add    al,BYTE PTR [eax]
  45886c:	bound  eax,QWORD PTR [eax]
  45886e:	add    al,BYTE PTR [eax]
  458870:	bound  eax,QWORD PTR [eax]
  458872:	add    al,BYTE PTR [eax]
  458874:	bound  eax,QWORD PTR [eax]
  458876:	add    al,BYTE PTR [eax]
  458878:	bound  eax,QWORD PTR [eax]
  45887a:	add    al,BYTE PTR [eax]
  45887c:	bound  eax,QWORD PTR [eax]
  45887e:	add    al,BYTE PTR [eax]
  458880:	bound  eax,QWORD PTR [eax]
  458882:	add    al,BYTE PTR [eax]
	...
  458898:	bound  eax,QWORD PTR [eax]
  45889a:	add    al,BYTE PTR [eax]
  45889c:	bound  eax,QWORD PTR [eax]
  45889e:	add    al,BYTE PTR [eax]
  4588a0:	bound  eax,QWORD PTR [eax]
  4588a2:	add    al,BYTE PTR [eax]
  4588a4:	bound  eax,QWORD PTR [eax]
  4588a6:	add    al,BYTE PTR [eax]
  4588a8:	bound  eax,QWORD PTR [eax]
  4588aa:	add    al,BYTE PTR [eax]
  4588ac:	bound  eax,QWORD PTR [edx]
  4588ae:	add    al,BYTE PTR [eax]
  4588b0:	bound  eax,QWORD PTR [edx]
  4588b2:	add    al,BYTE PTR [eax]
  4588b4:	bound  eax,QWORD PTR [edx]
  4588b6:	add    al,BYTE PTR [eax]
  4588b8:	bound  eax,QWORD PTR [edx]
  4588ba:	add    al,BYTE PTR [eax]
  4588bc:	bound  eax,QWORD PTR [edx]
  4588be:	add    al,BYTE PTR [eax]
  4588c0:	bound  eax,QWORD PTR [edx]
  4588c2:	add    al,BYTE PTR [eax]
  4588c4:	bound  eax,QWORD PTR [edx]
  4588c6:	add    al,BYTE PTR [eax]
  4588c8:	bound  eax,QWORD PTR [edx]
  4588ca:	add    al,BYTE PTR [eax]
  4588cc:	bound  eax,QWORD PTR [edx]
  4588ce:	add    al,BYTE PTR [eax]
  4588d0:	bound  eax,QWORD PTR [edx]
  4588d2:	add    al,BYTE PTR [eax]
  4588d4:	bound  eax,QWORD PTR [edx]
  4588d6:	add    al,BYTE PTR [eax]
  4588d8:	bound  eax,QWORD PTR [edx]
  4588da:	add    al,BYTE PTR [eax]
  4588dc:	(bad)  
  4588dd:	(bad)  
  4588df:	add    esp,DWORD PTR [edx-0x27]
  4588e2:	out    0x3,eax
  4588e4:	(bad)  
  4588e5:	(bad)  
  4588e7:	add    esp,DWORD PTR [edx-0x27]
  4588ea:	out    0x3,eax
  4588ec:	(bad)  
  4588ed:	(bad)  
  4588ef:	add    esp,DWORD PTR [edx-0x27]
  4588f2:	out    0x3,eax
  4588f4:	(bad)  
  4588f5:	(bad)  
  4588f7:	add    esp,DWORD PTR [edx-0x27]
  4588fa:	out    0x3,eax
	...
  458910:	(bad)  
  458911:	(bad)  
  458913:	add    esp,DWORD PTR [edx-0x27]
  458916:	out    0x3,eax
  458918:	(bad)  
  458919:	(bad)  
  45891b:	add    esp,DWORD PTR [edx-0x27]
  45891e:	out    0x3,eax
  458920:	(bad)  
  458921:	(bad)  
  458923:	add    esp,DWORD PTR [edx-0x27]
  458926:	out    0x3,eax
  458928:	(bad)  
  458929:	(bad)  
  45892b:	add    esp,DWORD PTR [edx-0x27]
  45892e:	out    0x3,eax
  458930:	(bad)  
  458931:	(bad)  
  458933:	add    esp,DWORD PTR [edx-0x27]
  458936:	out    0x3,eax
  458938:	(bad)  
  458939:	(bad)  
  45893b:	add    esp,DWORD PTR [edx-0x27]
  45893e:	out    0x3,eax
  458940:	(bad)  
  458941:	(bad)  
  458943:	add    esp,DWORD PTR [edx-0x27]
  458946:	out    0x3,eax
  458948:	(bad)  
  458949:	(bad)  
  45894b:	add    esp,DWORD PTR [edx-0x27]
  45894e:	out    0x3,eax
  458950:	(bad)  
  458951:	(bad)  
  458953:	add    esp,DWORD PTR [edx-0x27]
  458956:	out    0x3,eax
  458958:	(bad)  
  458959:	(bad)  
  45895b:	add    esp,DWORD PTR [edx-0x27]
  45895e:	out    0x3,eax
  458960:	(bad)  
  458961:	(bad)  
  458963:	add    esp,DWORD PTR [edx-0x27]
  458966:	out    0x3,eax
  458968:	(bad)  
  458969:	fld    DWORD PTR [eax]
  45896b:	jmp    0xe94662d1
  458970:	popa   
  458971:	fld    DWORD PTR [eax]
  458973:	jmp    0x458978
	...
  458988:	popa   
  458989:	fld    DWORD PTR [eax]
  45898b:	jmp    0xe94662f1
  458990:	popa   
  458991:	fld    DWORD PTR [eax]
  458993:	jmp    0xe94662f9
  458998:	popa   
  458999:	fld    DWORD PTR [eax]
  45899b:	jmp    0xe9466301
  4589a0:	popa   
  4589a1:	fld    DWORD PTR [eax]
  4589a3:	jmp    0xe9466309
  4589a8:	popa   
  4589a9:	fld    DWORD PTR [eax]
  4589ab:	jmp    0xe9466311
  4589b0:	popa   
  4589b1:	fld    DWORD PTR [eax]
  4589b3:	jmp    0xe9466319
  4589b8:	popa   
  4589b9:	fld    DWORD PTR [eax]
  4589bb:	jmp    0xe9466321
  4589c0:	popa   
  4589c1:	fld    DWORD PTR [eax]
  4589c3:	jmp    0xe9466329
  4589c8:	popa   
  4589c9:	fld    DWORD PTR [eax]
  4589cb:	jmp    0xe9466331
  4589d0:	popa   
  4589d1:	fld    DWORD PTR [eax]
  4589d3:	jmp    0xe9466339
  4589d8:	popa   
  4589d9:	fld    DWORD PTR [eax]
  4589db:	jmp    0xe9466341
  4589e0:	popa   
  4589e1:	fld    DWORD PTR [eax]
  4589e3:	jmp    0xe9466349
  4589e8:	popa   
  4589e9:	fld    DWORD PTR [eax]
  4589eb:	jmp    0x4589f0
	...
  458a00:	popa   
  458a01:	fld    DWORD PTR [eax]
  458a03:	jmp    0xe9466369
  458a08:	popa   
  458a09:	fld    DWORD PTR [eax]
  458a0b:	add    BYTE PTR [ebx],cl
  458a0d:	xlat   BYTE PTR ds:[ebx]
  458a0e:	add    BYTE PTR [eax],al
  458a10:	sti    
  458a11:	(bad)  
  458a12:	add    BYTE PTR [eax],al
  458a14:	sti    
  458a15:	(bad)  
  458a16:	add    BYTE PTR [eax],al
  458a18:	or     edx,edi
  458a1a:	add    BYTE PTR [eax],al
  458a1c:	or     edx,edi
  458a1e:	add    BYTE PTR [eax],al
  458a20:	sti    
  458a21:	(bad)  
  458a22:	add    BYTE PTR [eax],al
  458a24:	sti    
  458a25:	(bad)  
  458a26:	add    BYTE PTR [eax],al
  458a28:	retf   
  458a29:	(bad)  
  458a2a:	add    BYTE PTR [eax],al
  458a2c:	retf   
  458a2d:	(bad)  
  458a2e:	add    BYTE PTR [eax],al
  458a30:	mov    ebx,0xbb0000d6
  458a35:	(bad)  
  458a36:	add    BYTE PTR [eax],al
  458a38:	retf   
  458a39:	(bad)  
  458a3a:	add    BYTE PTR [eax],al
  458a3c:	retf   
  458a3d:	(bad)  
  458a3e:	add    BYTE PTR [eax],al
  458a40:	mov    ebx,0xbb0000d6
  458a45:	(bad)  
  458a46:	add    BYTE PTR [eax],al
  458a48:	mov    edx,esi
  458a4a:	add    BYTE PTR [eax],al
  458a4c:	mov    edx,esi
  458a4e:	add    BYTE PTR [eax],al
  458a50:	jnp    0x458a28
  458a52:	add    BYTE PTR [eax],al
  458a54:	jnp    0x458a2c
  458a56:	add    BYTE PTR [eax],al
  458a58:	mov    edx,esi
  458a5a:	add    BYTE PTR [eax],al
  458a5c:	mov    edx,esi
  458a5e:	add    BYTE PTR [eax],al
  458a60:	jnp    0x458a38
	...
  458a76:	add    BYTE PTR [eax],al
  458a78:	jnp    0x458a50
  458a7a:	add    BYTE PTR [eax],al
  458a7c:	dec    ebx
  458a7d:	(bad)  
  458a7e:	add    BYTE PTR [eax],al
  458a80:	dec    ebx
  458a81:	(bad)  
  458a82:	add    BYTE PTR [eax],al
  458a84:	cmp    edx,esi
  458a86:	add    BYTE PTR [eax],al
  458a88:	cmp    edx,esi
  458a8a:	add    BYTE PTR [eax],al
  458a8c:	dec    ebx
  458a8d:	(bad)  
  458a8e:	add    BYTE PTR [eax],al
  458a90:	dec    ebx
  458a91:	(bad)  
  458a92:	add    BYTE PTR [eax],al
  458a94:	cmp    edx,esi
  458a96:	add    BYTE PTR [eax],al
  458a98:	bound  eax,QWORD PTR [eax]
  458a9a:	add    al,BYTE PTR [eax]
  458a9c:	bound  eax,QWORD PTR [eax]
  458a9e:	add    al,BYTE PTR [eax]
  458aa0:	bound  eax,QWORD PTR [eax]
  458aa2:	add    al,BYTE PTR [eax]
  458aa4:	bound  eax,QWORD PTR [eax]
  458aa6:	add    al,BYTE PTR [eax]
  458aa8:	bound  eax,QWORD PTR [eax]
  458aaa:	add    al,BYTE PTR [eax]
  458aac:	bound  eax,QWORD PTR [eax]
  458aae:	add    al,BYTE PTR [eax]
  458ab0:	bound  eax,QWORD PTR [eax]
  458ab2:	add    al,BYTE PTR [eax]
  458ab4:	bound  eax,QWORD PTR [eax]
  458ab6:	add    al,BYTE PTR [eax]
  458ab8:	bound  eax,QWORD PTR [eax]
  458aba:	add    al,BYTE PTR [eax]
  458abc:	bound  eax,QWORD PTR [eax]
  458abe:	add    al,BYTE PTR [eax]
  458ac0:	bound  eax,QWORD PTR [eax]
  458ac2:	add    al,BYTE PTR [eax]
  458ac4:	bound  eax,QWORD PTR [eax]
  458ac6:	add    al,BYTE PTR [eax]
  458ac8:	bound  eax,QWORD PTR [eax]
  458aca:	add    al,BYTE PTR [eax]
  458acc:	bound  eax,QWORD PTR [eax]
  458ace:	add    al,BYTE PTR [eax]
  458ad0:	bound  eax,QWORD PTR [eax]
  458ad2:	add    al,BYTE PTR [eax]
  458ad4:	bound  eax,QWORD PTR [eax]
  458ad6:	add    al,BYTE PTR [eax]
  458ad8:	bound  eax,QWORD PTR [eax]
  458ada:	add    al,BYTE PTR [eax]
	...
  458af0:	bound  eax,QWORD PTR [eax]
  458af2:	add    al,BYTE PTR [eax]
  458af4:	bound  eax,QWORD PTR [eax]
  458af6:	add    al,BYTE PTR [eax]
  458af8:	bound  eax,QWORD PTR [eax]
  458afa:	add    al,BYTE PTR [eax]
  458afc:	bound  eax,QWORD PTR [eax]
  458afe:	add    al,BYTE PTR [eax]
  458b00:	bound  eax,QWORD PTR [eax]
  458b02:	add    al,BYTE PTR [eax]
  458b04:	bound  eax,QWORD PTR [eax]
  458b06:	add    al,BYTE PTR [eax]
  458b08:	bound  eax,QWORD PTR [eax]
  458b0a:	add    al,BYTE PTR [eax]
  458b0c:	bound  eax,QWORD PTR [eax]
  458b0e:	add    al,BYTE PTR [eax]
  458b10:	bound  eax,QWORD PTR [edx]
  458b12:	add    al,BYTE PTR [eax]
  458b14:	bound  eax,QWORD PTR [edx]
  458b16:	add    al,BYTE PTR [eax]
  458b18:	bound  eax,QWORD PTR [edx]
  458b1a:	add    al,BYTE PTR [eax]
  458b1c:	bound  eax,QWORD PTR [edx]
  458b1e:	add    al,BYTE PTR [eax]
  458b20:	bound  eax,QWORD PTR [edx]
  458b22:	add    al,BYTE PTR [eax]
  458b24:	(bad)  
  458b25:	(bad)  
  458b27:	add    esp,DWORD PTR [edx-0x27]
  458b2a:	out    0x3,eax
  458b2c:	(bad)  
  458b2d:	(bad)  
  458b2f:	add    esp,DWORD PTR [edx-0x27]
  458b32:	out    0x3,eax
  458b34:	(bad)  
  458b35:	(bad)  
  458b37:	add    esp,DWORD PTR [edx-0x27]
  458b3a:	out    0x3,eax
  458b3c:	(bad)  
  458b3d:	(bad)  
  458b3f:	add    esp,DWORD PTR [edx-0x27]
  458b42:	out    0x3,eax
  458b44:	(bad)  
  458b45:	(bad)  
  458b47:	add    esp,DWORD PTR [edx-0x27]
  458b4a:	out    0x3,eax
  458b4c:	(bad)  
  458b4d:	(bad)  
  458b4f:	add    esp,DWORD PTR [edx-0x27]
  458b52:	out    0x3,eax
	...
  458b68:	(bad)  
  458b69:	(bad)  
  458b6b:	add    esp,DWORD PTR [edx-0x27]
  458b6e:	out    0x3,eax
  458b70:	(bad)  
  458b71:	(bad)  
  458b73:	add    esp,DWORD PTR [edx-0x27]
  458b76:	out    0x3,eax
  458b78:	(bad)  
  458b79:	(bad)  
  458b7b:	add    esp,DWORD PTR [edx-0x27]
  458b7e:	out    0x3,eax
  458b80:	(bad)  
  458b81:	(bad)  
  458b83:	add    esp,DWORD PTR [edx-0x27]
  458b86:	out    0x3,eax
  458b88:	(bad)  
  458b89:	(bad)  
  458b8b:	add    esp,DWORD PTR [edx-0x27]
  458b8e:	out    0x3,eax
  458b90:	(bad)  
  458b91:	(bad)  
  458b93:	add    esp,DWORD PTR [edx-0x27]
  458b96:	out    0x3,eax
  458b98:	(bad)  
  458b99:	(bad)  
  458b9b:	add    esp,DWORD PTR [edx-0x27]
  458b9e:	out    0x3,eax
  458ba0:	(bad)  
  458ba1:	(bad)  
  458ba3:	add    esp,DWORD PTR [edx-0x27]
  458ba6:	out    0x3,eax
  458ba8:	(bad)  
  458ba9:	(bad)  
  458bab:	add    esp,DWORD PTR [edx-0x27]
  458bae:	out    0x3,eax
  458bb0:	(bad)  
  458bb1:	fld    DWORD PTR [eax]
  458bb3:	jmp    0xe9466519
  458bb8:	popa   
  458bb9:	fld    DWORD PTR [eax]
  458bbb:	jmp    0xe9466521
  458bc0:	popa   
  458bc1:	fld    DWORD PTR [eax]
  458bc3:	jmp    0xe9466529
  458bc8:	popa   
  458bc9:	fld    DWORD PTR [eax]
  458bcb:	jmp    0x458bd0
	...
  458be0:	popa   
  458be1:	fld    DWORD PTR [eax]
  458be3:	jmp    0xe9466549
  458be8:	popa   
  458be9:	fld    DWORD PTR [eax]
  458beb:	jmp    0xe9466551
  458bf0:	popa   
  458bf1:	fld    DWORD PTR [eax]
  458bf3:	jmp    0xe9466559
  458bf8:	popa   
  458bf9:	fld    DWORD PTR [eax]
  458bfb:	jmp    0xe9466561
  458c00:	popa   
  458c01:	fld    DWORD PTR [eax]
  458c03:	jmp    0xe9466569
  458c08:	popa   
  458c09:	fld    DWORD PTR [eax]
  458c0b:	jmp    0xe9466571
  458c10:	popa   
  458c11:	fld    DWORD PTR [eax]
  458c13:	jmp    0xe9466579
  458c18:	popa   
  458c19:	fld    DWORD PTR [eax]
  458c1b:	jmp    0xe9466581
  458c20:	popa   
  458c21:	fld    DWORD PTR [eax]
  458c23:	jmp    0xe9466589
  458c28:	popa   
  458c29:	fld    DWORD PTR [eax]
  458c2b:	jmp    0xe9466591
  458c30:	popa   
  458c31:	fld    DWORD PTR [eax]
  458c33:	jmp    0xe9466599
  458c38:	popa   
  458c39:	fld    DWORD PTR [eax]
  458c3b:	jmp    0x4665a1
  458c40:	cmp    ebx,ebx
	...
  458c56:	add    BYTE PTR [eax],al
  458c58:	cmp    ebx,ebx
  458c5a:	add    BYTE PTR [eax],al
  458c5c:	dec    ebx
  458c5d:	fild   DWORD PTR [eax]
  458c5f:	add    BYTE PTR [ebx-0x25],cl
  458c62:	add    BYTE PTR [eax],al
  458c64:	cmp    ebx,ebx
  458c66:	add    BYTE PTR [eax],al
  458c68:	cmp    ebx,ebx
  458c6a:	add    BYTE PTR [eax],al
  458c6c:	or     ebx,ebx
  458c6e:	add    BYTE PTR [eax],al
  458c70:	or     ebx,ebx
  458c72:	add    BYTE PTR [eax],al
  458c74:	sti    
  458c75:	fiadd  DWORD PTR [eax]
  458c77:	add    bl,bh
  458c79:	fiadd  DWORD PTR [eax]
  458c7b:	add    BYTE PTR [ebx],cl
  458c7d:	fild   DWORD PTR [eax]
  458c7f:	add    BYTE PTR [ebx],cl
  458c81:	fild   DWORD PTR [eax]
  458c83:	add    bl,bh
  458c85:	fiadd  DWORD PTR [eax]
  458c87:	add    bl,bh
  458c89:	fiadd  DWORD PTR [eax]
  458c8b:	add    bl,cl
  458c8d:	fiadd  DWORD PTR [eax]
  458c8f:	add    bl,cl
  458c91:	fiadd  DWORD PTR [eax]
  458c93:	add    BYTE PTR [ebx-0x44ffff26],bh
  458c99:	fiadd  DWORD PTR [eax]
  458c9b:	add    bl,cl
  458c9d:	fiadd  DWORD PTR [eax]
  458c9f:	add    bl,cl
  458ca1:	fiadd  DWORD PTR [eax]
  458ca3:	add    BYTE PTR [ebx-0x44ffff26],bh
  458ca9:	fiadd  DWORD PTR [eax]
  458cab:	add    BYTE PTR [ebx-0x74ffff26],cl
  458cb1:	fiadd  DWORD PTR [eax]
  458cb3:	add    BYTE PTR [ebx-0x26],bh
  458cb6:	add    BYTE PTR [eax],al
  458cb8:	jnp    0x458c94
	...
  458cce:	add    BYTE PTR [eax],al
  458cd0:	mov    ebx,edx
  458cd2:	add    BYTE PTR [eax],al
  458cd4:	mov    ebx,edx
  458cd6:	add    BYTE PTR [eax],al
  458cd8:	jnp    0x458cb4
  458cda:	add    BYTE PTR [eax],al
  458cdc:	jnp    0x458cb8
  458cde:	add    BYTE PTR [eax],al
  458ce0:	bound  eax,QWORD PTR [eax]
  458ce2:	add    al,BYTE PTR [eax]
  458ce4:	bound  eax,QWORD PTR [eax]
  458ce6:	add    al,BYTE PTR [eax]
  458ce8:	bound  eax,QWORD PTR [eax]
  458cea:	add    al,BYTE PTR [eax]
  458cec:	bound  eax,QWORD PTR [eax]
  458cee:	add    al,BYTE PTR [eax]
  458cf0:	bound  eax,QWORD PTR [eax]
  458cf2:	add    al,BYTE PTR [eax]
  458cf4:	bound  eax,QWORD PTR [eax]
  458cf6:	add    al,BYTE PTR [eax]
  458cf8:	bound  eax,QWORD PTR [eax]
  458cfa:	add    al,BYTE PTR [eax]
  458cfc:	bound  eax,QWORD PTR [eax]
  458cfe:	add    al,BYTE PTR [eax]
  458d00:	bound  eax,QWORD PTR [eax]
  458d02:	add    al,BYTE PTR [eax]
  458d04:	bound  eax,QWORD PTR [eax]
  458d06:	add    al,BYTE PTR [eax]
  458d08:	bound  eax,QWORD PTR [eax]
  458d0a:	add    al,BYTE PTR [eax]
  458d0c:	bound  eax,QWORD PTR [eax]
  458d0e:	add    al,BYTE PTR [eax]
  458d10:	bound  eax,QWORD PTR [eax]
  458d12:	add    al,BYTE PTR [eax]
  458d14:	bound  eax,QWORD PTR [eax]
  458d16:	add    al,BYTE PTR [eax]
  458d18:	bound  eax,QWORD PTR [eax]
  458d1a:	add    al,BYTE PTR [eax]
  458d1c:	bound  eax,QWORD PTR [eax]
  458d1e:	add    al,BYTE PTR [eax]
  458d20:	bound  eax,QWORD PTR [eax]
  458d22:	add    al,BYTE PTR [eax]
  458d24:	bound  eax,QWORD PTR [eax]
  458d26:	add    al,BYTE PTR [eax]
  458d28:	bound  eax,QWORD PTR [eax]
  458d2a:	add    al,BYTE PTR [eax]
  458d2c:	bound  eax,QWORD PTR [eax]
  458d2e:	add    al,BYTE PTR [eax]
  458d30:	bound  eax,QWORD PTR [eax]
  458d32:	add    al,BYTE PTR [eax]
	...
  458d48:	bound  eax,QWORD PTR [eax]
  458d4a:	add    al,BYTE PTR [eax]
  458d4c:	bound  eax,QWORD PTR [eax]
  458d4e:	add    al,BYTE PTR [eax]
  458d50:	bound  eax,QWORD PTR [eax]
  458d52:	add    al,BYTE PTR [eax]
  458d54:	bound  eax,QWORD PTR [eax]
  458d56:	add    al,BYTE PTR [eax]
  458d58:	bound  eax,QWORD PTR [eax]
  458d5a:	add    al,BYTE PTR [eax]
  458d5c:	bound  eax,QWORD PTR [eax]
  458d5e:	add    al,BYTE PTR [eax]
  458d60:	bound  eax,QWORD PTR [eax]
  458d62:	add    al,BYTE PTR [eax]
  458d64:	bound  eax,QWORD PTR [eax]
  458d66:	add    al,BYTE PTR [eax]
  458d68:	bound  eax,QWORD PTR [eax]
  458d6a:	add    al,BYTE PTR [eax]
  458d6c:	(bad)  
  458d6d:	(bad)  
  458d6f:	add    esp,DWORD PTR [edx-0x27]
  458d72:	out    0x3,eax
  458d74:	(bad)  
  458d75:	(bad)  
  458d77:	add    esp,DWORD PTR [edx-0x27]
  458d7a:	out    0x3,eax
  458d7c:	(bad)  
  458d7d:	(bad)  
  458d7f:	add    esp,DWORD PTR [edx-0x27]
  458d82:	out    0x3,eax
  458d84:	(bad)  
  458d85:	(bad)  
  458d87:	add    esp,DWORD PTR [edx-0x27]
  458d8a:	out    0x3,eax
  458d8c:	(bad)  
  458d8d:	(bad)  
  458d8f:	add    esp,DWORD PTR [edx-0x27]
  458d92:	out    0x3,eax
  458d94:	(bad)  
  458d95:	(bad)  
  458d97:	add    esp,DWORD PTR [edx-0x27]
  458d9a:	out    0x3,eax
  458d9c:	(bad)  
  458d9d:	(bad)  
  458d9f:	add    esp,DWORD PTR [edx-0x27]
  458da2:	out    0x3,eax
  458da4:	(bad)  
  458da5:	(bad)  
  458da7:	add    esp,DWORD PTR [edx-0x27]
  458daa:	out    0x3,eax
	...
  458dc0:	(bad)  
  458dc1:	(bad)  
  458dc3:	add    esp,DWORD PTR [edx-0x27]
  458dc6:	out    0x3,eax
  458dc8:	(bad)  
  458dc9:	(bad)  
  458dcb:	add    esp,DWORD PTR [edx-0x27]
  458dce:	out    0x3,eax
  458dd0:	(bad)  
  458dd1:	(bad)  
  458dd3:	add    esp,DWORD PTR [edx-0x27]
  458dd6:	out    0x3,eax
  458dd8:	(bad)  
  458dd9:	(bad)  
  458ddb:	add    esp,DWORD PTR [edx-0x27]
  458dde:	out    0x3,eax
  458de0:	(bad)  
  458de1:	(bad)  
  458de3:	add    esp,DWORD PTR [edx-0x27]
  458de6:	out    0x3,eax
  458de8:	(bad)  
  458de9:	(bad)  
  458deb:	add    esp,DWORD PTR [edx-0x27]
  458dee:	out    0x3,eax
  458df0:	(bad)  
  458df1:	(bad)  
  458df3:	add    esp,DWORD PTR [edx-0x27]
  458df6:	out    0x3,eax
  458df8:	(bad)  
  458df9:	fld    DWORD PTR [eax]
  458dfb:	jmp    0xe9466761
  458e00:	popa   
  458e01:	fld    DWORD PTR [eax]
  458e03:	jmp    0xe9466769
  458e08:	popa   
  458e09:	fld    DWORD PTR [eax]
  458e0b:	jmp    0xe9466771
  458e10:	popa   
  458e11:	fld    DWORD PTR [eax]
  458e13:	jmp    0xe9466779
  458e18:	popa   
  458e19:	fld    DWORD PTR [eax]
  458e1b:	jmp    0xe9466781
  458e20:	popa   
  458e21:	fld    DWORD PTR [eax]
  458e23:	jmp    0x458e28
	...
  458e38:	popa   
  458e39:	fld    DWORD PTR [eax]
  458e3b:	jmp    0xe94667a1
  458e40:	popa   
  458e41:	fld    DWORD PTR [eax]
  458e43:	jmp    0xe94667a9
  458e48:	popa   
  458e49:	fld    DWORD PTR [eax]
  458e4b:	jmp    0xe94667b1
  458e50:	popa   
  458e51:	fld    DWORD PTR [eax]
  458e53:	jmp    0xe94667b9
  458e58:	popa   
  458e59:	fld    DWORD PTR [eax]
  458e5b:	jmp    0xe94667c1
  458e60:	popa   
  458e61:	fld    DWORD PTR [eax]
  458e63:	jmp    0xe94667c9
  458e68:	popa   
  458e69:	fld    DWORD PTR [eax]
  458e6b:	jmp    0xe94667d1
  458e70:	popa   
  458e71:	fld    DWORD PTR [eax]
  458e73:	jmp    0xe94667d9
  458e78:	popa   
  458e79:	fld    DWORD PTR [eax]
  458e7b:	jmp    0xe94667e1
  458e80:	popa   
  458e81:	fld    DWORD PTR [eax]
  458e83:	jmp    0x4667e9
  458e88:	jnp    0x458e61
  458e8a:	add    BYTE PTR [eax],al
  458e8c:	mov    edx,edi
  458e8e:	add    BYTE PTR [eax],al
  458e90:	mov    edx,edi
  458e92:	add    BYTE PTR [eax],al
  458e94:	jnp    0x458e6d
  458e96:	add    BYTE PTR [eax],al
  458e98:	jnp    0x458e71
	...
  458eae:	add    BYTE PTR [eax],al
  458eb0:	dec    ebx
  458eb1:	xlat   BYTE PTR ds:[ebx]
  458eb2:	add    BYTE PTR [eax],al
  458eb4:	dec    ebx
  458eb5:	xlat   BYTE PTR ds:[ebx]
  458eb6:	add    BYTE PTR [eax],al
  458eb8:	cmp    edx,edi
  458eba:	add    BYTE PTR [eax],al
  458ebc:	cmp    edx,edi
  458ebe:	add    BYTE PTR [eax],al
  458ec0:	dec    ebx
  458ec1:	xlat   BYTE PTR ds:[ebx]
  458ec2:	add    BYTE PTR [eax],al
  458ec4:	dec    ebx
  458ec5:	xlat   BYTE PTR ds:[ebx]
  458ec6:	add    BYTE PTR [eax],al
  458ec8:	cmp    edx,edi
  458eca:	add    BYTE PTR [eax],al
  458ecc:	cmp    edx,edi
  458ece:	add    BYTE PTR [eax],al
  458ed0:	or     edx,edi
  458ed2:	add    BYTE PTR [eax],al
  458ed4:	or     edx,edi
  458ed6:	add    BYTE PTR [eax],al
  458ed8:	sti    
  458ed9:	(bad)  
  458eda:	add    BYTE PTR [eax],al
  458edc:	sti    
  458edd:	(bad)  
  458ede:	add    BYTE PTR [eax],al
  458ee0:	or     edx,edi
  458ee2:	add    BYTE PTR [eax],al
  458ee4:	or     edx,edi
  458ee6:	add    BYTE PTR [eax],al
  458ee8:	sti    
  458ee9:	(bad)  
  458eea:	add    BYTE PTR [eax],al
  458eec:	sti    
  458eed:	(bad)  
  458eee:	add    BYTE PTR [eax],al
  458ef0:	retf   
  458ef1:	(bad)  
  458ef2:	add    BYTE PTR [eax],al
  458ef4:	retf   
  458ef5:	(bad)  
  458ef6:	add    BYTE PTR [eax],al
  458ef8:	mov    ebx,0xbb0000d6
  458efd:	(bad)  
  458efe:	add    BYTE PTR [eax],al
  458f00:	retf   
  458f01:	(bad)  
  458f02:	add    BYTE PTR [eax],al
  458f04:	retf   
  458f05:	(bad)  
  458f06:	add    BYTE PTR [eax],al
  458f08:	mov    ebx,0xbb0000d6
  458f0d:	(bad)  
  458f0e:	add    BYTE PTR [eax],al
  458f10:	mov    edx,esi
	...
  458f26:	add    BYTE PTR [eax],al
  458f28:	bound  eax,QWORD PTR [eax]
  458f2a:	add    al,BYTE PTR [eax]
  458f2c:	bound  eax,QWORD PTR [eax]
  458f2e:	add    al,BYTE PTR [eax]
  458f30:	bound  eax,QWORD PTR [eax]
  458f32:	add    al,BYTE PTR [eax]
  458f34:	bound  eax,QWORD PTR [eax]
  458f36:	add    al,BYTE PTR [eax]
  458f38:	bound  eax,QWORD PTR [eax]
  458f3a:	add    al,BYTE PTR [eax]
  458f3c:	bound  eax,QWORD PTR [eax]
  458f3e:	add    al,BYTE PTR [eax]
  458f40:	bound  eax,QWORD PTR [eax]
  458f42:	add    al,BYTE PTR [eax]
  458f44:	bound  eax,QWORD PTR [eax]
  458f46:	add    al,BYTE PTR [eax]
  458f48:	bound  eax,QWORD PTR [eax]
  458f4a:	add    al,BYTE PTR [eax]
  458f4c:	bound  eax,QWORD PTR [eax]
  458f4e:	add    al,BYTE PTR [eax]
  458f50:	bound  eax,QWORD PTR [eax]
  458f52:	add    al,BYTE PTR [eax]
  458f54:	bound  eax,QWORD PTR [eax]
  458f56:	add    al,BYTE PTR [eax]
  458f58:	bound  eax,QWORD PTR [eax]
  458f5a:	add    al,BYTE PTR [eax]
  458f5c:	bound  eax,QWORD PTR [eax]
  458f5e:	add    al,BYTE PTR [eax]
  458f60:	bound  eax,QWORD PTR [eax]
  458f62:	add    al,BYTE PTR [eax]
  458f64:	bound  eax,QWORD PTR [eax]
  458f66:	add    al,BYTE PTR [eax]
  458f68:	bound  eax,QWORD PTR [eax]
  458f6a:	add    al,BYTE PTR [eax]
  458f6c:	bound  eax,QWORD PTR [eax]
  458f6e:	add    al,BYTE PTR [eax]
  458f70:	bound  eax,QWORD PTR [eax]
  458f72:	add    al,BYTE PTR [eax]
  458f74:	bound  eax,QWORD PTR [eax]
  458f76:	add    al,BYTE PTR [eax]
  458f78:	bound  eax,QWORD PTR [eax]
  458f7a:	add    al,BYTE PTR [eax]
  458f7c:	bound  eax,QWORD PTR [eax]
  458f7e:	add    al,BYTE PTR [eax]
  458f80:	bound  eax,QWORD PTR [eax]
  458f82:	add    al,BYTE PTR [eax]
  458f84:	bound  eax,QWORD PTR [eax]
  458f86:	add    al,BYTE PTR [eax]
  458f88:	bound  eax,QWORD PTR [eax]
  458f8a:	add    al,BYTE PTR [eax]
	...
  458fa0:	bound  eax,QWORD PTR [eax]
  458fa2:	add    al,BYTE PTR [eax]
  458fa4:	bound  eax,QWORD PTR [eax]
  458fa6:	add    al,BYTE PTR [eax]
  458fa8:	bound  eax,QWORD PTR [eax]
  458faa:	add    al,BYTE PTR [eax]
  458fac:	bound  eax,QWORD PTR [eax]
  458fae:	add    al,BYTE PTR [eax]
  458fb0:	bound  eax,QWORD PTR [eax]
  458fb2:	add    al,BYTE PTR [eax]
  458fb4:	(bad)  
  458fb5:	(bad)  
  458fb7:	add    esp,DWORD PTR [edx-0x27]
  458fba:	out    0x3,eax
  458fbc:	(bad)  
  458fbd:	(bad)  
  458fbf:	add    esp,DWORD PTR [edx-0x27]
  458fc2:	out    0x3,eax
  458fc4:	(bad)  
  458fc5:	(bad)  
  458fc7:	add    esp,DWORD PTR [edx-0x27]
  458fca:	out    0x3,eax
  458fcc:	(bad)  
  458fcd:	(bad)  
  458fcf:	add    esp,DWORD PTR [edx-0x27]
  458fd2:	out    0x3,eax
  458fd4:	(bad)  
  458fd5:	(bad)  
  458fd7:	add    esp,DWORD PTR [edx-0x27]
  458fda:	out    0x3,eax
  458fdc:	(bad)  
  458fdd:	(bad)  
  458fdf:	add    esp,DWORD PTR [edx-0x27]
  458fe2:	out    0x3,eax
  458fe4:	(bad)  
  458fe5:	(bad)  
  458fe7:	add    esp,DWORD PTR [edx-0x27]
  458fea:	out    0x3,eax
  458fec:	(bad)  
  458fed:	(bad)  
  458fef:	add    esp,DWORD PTR [edx-0x27]
  458ff2:	out    0x3,eax
  458ff4:	(bad)  
  458ff5:	(bad)  
  458ff7:	add    esp,DWORD PTR [edx-0x27]
  458ffa:	out    0x3,eax
  458ffc:	(bad)  
  458ffd:	(bad)  
  458fff:	add    esp,DWORD PTR [edx-0x27]
  459002:	out    0x3,eax
	...
  459018:	(bad)  
  459019:	(bad)  
  45901b:	add    esp,DWORD PTR [edx-0x27]
  45901e:	out    0x3,eax
  459020:	(bad)  
  459021:	(bad)  
  459023:	add    esp,DWORD PTR [edx-0x27]
  459026:	out    0x3,eax
  459028:	(bad)  
  459029:	(bad)  
  45902b:	add    esp,DWORD PTR [edx-0x27]
  45902e:	out    0x3,eax
  459030:	(bad)  
  459031:	(bad)  
  459033:	add    esp,DWORD PTR [edx-0x27]
  459036:	out    0x3,eax
  459038:	(bad)  
  459039:	(bad)  
  45903b:	add    esp,DWORD PTR [edx-0x27]
  45903e:	out    0x3,eax
  459040:	(bad)  
  459041:	fld    DWORD PTR [eax]
  459043:	jmp    0xe94669a9
  459048:	popa   
  459049:	fld    DWORD PTR [eax]
  45904b:	jmp    0xe94669b1
  459050:	popa   
  459051:	fld    DWORD PTR [eax]
  459053:	mov    ds:0x42e903cb,eax
  459058:	jo     0x4590aa
  45905a:	push   ds
  45905b:	and    eax,0x2cef46c
  459060:	inc    esi
  459061:	aas    
  459062:	icebp  
  459063:	sub    al,0xcf
  459065:	(bad)  
  459066:	popa   
  459067:	shl    DWORD PTR [edi-0x230eacb1],1
  45906d:	push   0x7ee4f14d
  459072:	mov    esi,0x8595c3ba
  459077:	je     0x459054
  459079:	cmp    ah,BYTE PTR [ebp+0x25]
	...
  45908f:	add    BYTE PTR [edi],bl
  459091:	aaa    
  459092:	pop    ss
  459093:	sahf   
  459094:	pop    ss
  459095:	cmp    BYTE PTR [esi+esi*2+0x55],dl
  459099:	mov    ah,0x89
  45909b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45909d:	dec    esp
  45909e:	pop    edx
  45909f:	xchg   esi,eax
  4590a0:	push   0xfffffff8
  4590a2:	arpl   WORD PTR [edi],cx
  4590a4:	and    edi,DWORD PTR fs:[esi+0x1dea9037]
  4590ab:	pop    ss
  4590ac:	dec    ecx
  4590ad:	and    edx,esi
  4590af:	and    al,0xe1
  4590b1:	in     eax,0x1
  4590b3:	aad    0xf9
  4590b5:	mov    eax,ds:0xe8a3736c
  4590ba:	add    BYTE PTR [esi-0x78fc6bae],bh
  4590c0:	into   
  4590c1:	mov    ds:0x92ccabf7,eax
  4590c6:	ret    
  4590c7:	mov    DWORD PTR [edx-0x18],eax
  4590ca:	mov    BYTE PTR [esi-0x79],al
  4590cd:	dec    edx
  4590ce:	jmp    0x7734:0x35167b00
  4590d5:	xor    DWORD PTR [edx-0x5a],esi
  4590d8:	sub    al,0x71
  4590da:	inc    ebx
  4590db:	loope  0x459132
  4590dd:	retf   
  4590de:	cmp    edi,DWORD PTR ds:0x4560f127
  4590e4:	sub    BYTE PTR [edx],bh
  4590e6:	cwde   
  4590e7:	fist   DWORD PTR [edi-0x42be315]
  4590ed:	outs   dx,BYTE PTR ds:[esi]
  4590ee:	inc    esi
  4590ef:	sub    ebp,esi
  4590f1:	imul   edi,DWORD PTR ss:[eax+eax*1+0x0],0x0
	...
  459106:	add    BYTE PTR [eax],al
  459108:	sbb    BYTE PTR [eax-0x4b9b40f3],ch
  45910e:	pop    ds
  45910f:	jmp    0x43d1:0x8cb9518b
  459116:	adc    DWORD PTR es:[ebx],ecx
  459119:	inc    eax
  45911a:	popf   
  45911b:	lds    edx,FWORD PTR [esi-0x79]
  45911e:	lea    eax,[ebp-0x13c09ae6]
  459124:	ret    0xcdee
  459127:	test   BYTE PTR [ecx+0x26],cl
  45912a:	xchg   esi,eax
  45912b:	jecxz  0x4590c6
  45912d:	add    edx,esp
  45912f:	leave  
  459130:	aaa    
  459131:	addr16 popa 
  459133:	hlt    
  459134:	pop    edi
  459135:	jae    0x459110
  459137:	dec    ebp
  459138:	jns    0x4591a3
  45913a:	mov    DWORD PTR [edx],ebx
  45913c:	loopne 0x4590d7
  45913e:	mov    ch,0xc1
  459140:	add    bh,bh
  459142:	lods   al,BYTE PTR ds:[esi]
  459143:	repz xchg esp,eax
  459145:	fisttp WORD PTR [edi-0x6b7c651]
  45914b:	das    
  45914c:	mov    bl,0x1c
  45914e:	imul   esp,esp,0xa53255c2
  459154:	push   edx
  459155:	push   0xe57375a1
  45915a:	mov    ds:0x3700629d,eax
  45915f:	inc    esp
  459160:	add    al,0x5a
  459162:	mul    DWORD PTR [edx]
  459164:	sbb    esi,DWORD PTR [eax]
  459166:	test   esp,esp
  459168:	rcr    BYTE PTR [esi+0x36],0xa3
	...
  459180:	(bad)  
  459181:	jmp    0x459103
  459183:	sub    BYTE PTR [ebx-0x52],bh
  459186:	gs pop edx
  459188:	lock cmp ebp,DWORD PTR ss:[edx+eax*1+0x6aea0415]
  459191:	popf   
  459192:	push   ebp
  459193:	ins    DWORD PTR es:[edi],dx
  459194:	xchg   BYTE PTR [edx+0x31],dh
  459197:	ja     0x45915f
  459199:	sub    DWORD PTR [eax-0x74],ebx
  45919c:	arpl   WORD PTR [edi+0x71e4071a],cx
  4591a2:	xor    esi,DWORD PTR [edi-0x39e0d6e2]
  4591a8:	les    esi,FWORD PTR [esi-0x7a]
  4591ab:	jbe    0x4591ba
  4591ad:	inc    edx
  4591ae:	fcomp  DWORD PTR [edi]
  4591b0:	adc    DWORD PTR [eax],0x15
  4591b3:	fcmovu st,st(6)
  4591b5:	fiadd  DWORD PTR [ecx]
  4591b7:	xchg   ecx,eax
  4591b8:	dec    esp
  4591b9:	mov    ds:0x4e1fa049,eax
  4591be:	inc    ebx
  4591bf:	pop    edi
  4591c0:	lahf   
  4591c1:	mov    esi,0xd16479fe
  4591c6:	mov    al,ds:0x9c297052
  4591cb:	in     al,0x47
  4591cd:	sbb    ebp,eax
  4591cf:	push   edi
  4591d0:	adc    eax,0x28fcd31
  4591d5:	jb     0x4591ea
  4591d7:	push   ds
  4591d8:	ins    DWORD PTR es:[edi],dx
  4591d9:	int3   
  4591da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4591db:	(bad)  
  4591dc:	add    bh,dl
  4591de:	out    0xf2,eax
  4591e0:	push   esi
  4591e1:	call   0x0:0xa7df
	...
  4591f8:	les    edx,FWORD PTR [ebx]
  4591fa:	mov    DWORD PTR [ecx-0x69],ebx
  4591fd:	fld    DWORD PTR [ebp+0x5262a20b]
  459203:	inc    eax
  459204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  459205:	arpl   WORD PTR [eax+0x15],di
  459208:	mov    edi,0xba9b201
  45920d:	mov    ds:0x613aa124,al
  459212:	push   edi
  459213:	sahf   
  459214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  459215:	cli    
  459216:	pop    ds
  459217:	lods   al,BYTE PTR ds:[esi]
  459218:	xlat   BYTE PTR ds:[ebx]
  459219:	loop   0x45920a
  45921b:	icebp  
  45921c:	repnz inc eax
  45921e:	xchg   esi,eax
  45921f:	fnstenv [esi]
  459221:	or     DWORD PTR [ecx+0x524b49a0],edx
  459227:	outs   dx,DWORD PTR ds:[esi]
  459228:	pop    edi
  459229:	int3   
  45922a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45922b:	add    DWORD PTR [edx+ebp*1+0x3a1e88bb],esp
  459232:	xor    BYTE PTR [esi+0x21],ah
  459235:	addr16 and eax,0x5eee0f5
  45923b:	mov    al,ds:0x95ba0ff8
  459240:	mov    BYTE PTR [ecx],bl
  459242:	out    dx,eax
  459243:	jp     0x45926e
  459245:	cmp    eax,0x90b883b9
  45924a:	xchg   ebp,eax
  45924b:	pop    ebp
  45924c:	call   DWORD PTR [ecx+0x31]
  45924f:	pusha  
  459250:	xchg   edx,eax
  459251:	push   ss
  459252:	adc    al,BYTE PTR [ebp+0x70451fac]
  459258:	mov    eax,ds:0x973272
	...
  45926d:	add    BYTE PTR [eax],al
  45926f:	add    dh,bl
  459271:	mov    ebp,0x26384cd0
  459276:	stc    
  459277:	add    bl,BYTE PTR [ebx+0x65cb0d88]
  45927d:	cmp    ebx,esi
  45927f:	xchg   edi,eax
  459280:	mov    al,0x84
  459282:	cmc    
  459283:	loope  0x459242
  459285:	xchg   ecx,eax
  459286:	push   cs
  459287:	push   esi
  459288:	loope  0x459253
  45928a:	add    dl,bh
  45928c:	addr16 sbb al,0xe5
  45928f:	pop    ebx
  459290:	cmp    al,0xe1
  459292:	out    dx,al
  459293:	aaa    
  459294:	jns    0x4592c1
  459296:	jo     0x459245
  459298:	xlat   BYTE PTR ds:[ebx]
  459299:	jl     0x4592b0
  45929b:	ds mov dl,0x86
  45929e:	out    0xd9,al
  4592a0:	xchg   ebp,eax
  4592a1:	fs pop ebx
  4592a3:	cmp    BYTE PTR [eax-0x1a22899a],al
  4592a9:	shr    BYTE PTR [edx+0x138ff8a5],cl
  4592af:	call   0xfcb7:0xf9fd0f45
  4592b6:	push   edi
  4592b7:	mov    ecx,0xccf982fb
  4592bc:	xchg   esi,eax
  4592bd:	adc    eax,0x5017ccc5
  4592c2:	in     eax,0x51
  4592c4:	jmp    0x5acf9b67
  4592c9:	push   ecx
  4592ca:	inc    esp
  4592cb:	(bad)  
  4592cc:	fsin   
  4592ce:	push   ebx
  4592cf:	ret    
  4592d0:	mov    bh,0x50
  4592d2:	in     eax,0x51
	...
  4592e8:	lods   al,BYTE PTR ds:[esi]
  4592e9:	lods   al,BYTE PTR ds:[esi]
  4592ea:	xor    ecx,ecx
  4592ec:	(bad)  
  4592ed:	push   eax
  4592ee:	jo     0x459320
  4592f0:	(bad)  [edx-0x1a4b74fc]
  4592f6:	mov    DWORD PTR [esi+0x6a],eax
  4592f9:	push   edx
  4592fa:	cmp    al,0xfc
  4592fc:	fld    DWORD PTR [edx+0x596c8b20]
  459302:	imul   edx,DWORD PTR ss:[esi-0x56c07f24],0xffffff8d
  45930a:	add    ch,bl
  45930c:	sti    
  45930d:	mov    ds:0xa5ff8b56,eax
  459312:	ror    esp,0x97
  459315:	push   eax
  459316:	in     eax,0x83
  459318:	push   es
  459319:	mov    ebp,0x525a4589
  45931e:	cmp    al,0xe0
  459320:	fst    DWORD PTR [ebp-0x6c87420]
  459326:	add    DWORD PTR [ecx-0x6a],edx
  459329:	push   edx
  45932a:	dec    esp
  45932b:	in     al,0xd9
  45932d:	popf   
  45932e:	fmul   QWORD PTR [ebx+0x4d01811a]
  459334:	push   0x52
  459336:	inc    esp
  459337:	clc    
  459338:	jmp    0x20d18bea
  45933d:	mov    ebp,0x525a4501
  459342:	cmp    al,0xe8
  459344:	jmp    0x33d18bde
  459349:	mov    ecx,0x5501
	...
  45935e:	add    BYTE PTR [eax],al
  459360:	pop    edx
  459361:	push   edx
  459362:	dec    esp
  459363:	lock fstp DWORD PTR [ebp-0x1ad57408]
  45936a:	add    DWORD PTR [ebp+0x6a],ecx
  45936d:	push   edx
  45936e:	inc    esp
  45936f:	cld    
  459370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  459371:	popf   
  459372:	in     al,dx
  459373:	add    BYTE PTR [edx-0x27],ah
  459376:	add    bl,ch
  459378:	imul   ecx,DWORD PTR [esi+0x4c],0xfffffff4
  45937c:	loope  0x459395
  45937e:	add    BYTE PTR [ecx+0x458a0db7],cl
  459384:	dec    edx
  459385:	dec    edi
  459386:	inc    esp
  459387:	hlt    
  459388:	jns    0x45931b
  45938a:	sbb    BYTE PTR [ebx-0x56],dh
  45938d:	dec    esi
  45938e:	dec    esp
  45938f:	lock (bad) 
  459392:	add    DWORD PTR [ebp+0x5a],eax
  459395:	push   eax
  459396:	cmp    al,0xdc
  459398:	mov    bl,dl
  45939a:	push   0x9961ac
  45939f:	mov    ebx,DWORD PTR [edi-0x4d17afdb]
  4593a5:	fadd   DWORD PTR [eax]
  4593a7:	add    cl,ah
  4593a9:	sbb    eax,0x8d228505
  4593ae:	sbb    DWORD PTR [ebx+0x458a0d97],ecx
  4593b4:	cli    
  4593b5:	shr    BYTE PTR [ebp+0x4450320c],cl
  4593bb:	in     al,dx
  4593bc:	jmp    0x27d1786d
  4593c1:	add    eax,0x48a
	...
  4593d6:	add    BYTE PTR [eax],al
  4593d8:	repnz (bad) 
  4593da:	cmp    ecx,DWORD PTR [eax]
  4593dc:	leave  
  4593dd:	aam    0x89
  4593df:	dec    ebp
  4593e0:	mov    dl,0x56
  4593e2:	rol    BYTE PTR [ebx+ebx*8],0x94
  4593e6:	lock jmp 0x4593e7
  4593e9:	mov    al,0x8b
  4593ec:	xchg   DWORD PTR [ecx+eax*8-0x3aea5934],esp
  4593f3:	int3   
  4593f4:	sahf   
  4593f5:	adc    eax,0x1596ccc5
  4593fa:	(bad)
  4593fd:	dec    esi
  4593fe:	in     eax,0x83
  459400:	xchg   cl,ah
  459402:	call   0xf648010c
  459407:	mov    DWORD PTR [edi],ebx
  459409:	icebp  
  45940a:	mov    DWORD PTR [ebp+0x4a],eax
  45940d:	test   eax,0x25529e8
  459412:	test   BYTE PTR [ebx-0x5b5e22da],0xe4
  459419:	pushf  
  45941a:	add    BYTE PTR [eax-0x2],ch
  45941d:	aad    0x40
  45941f:	add    cl,ch
  459421:	xchg   ebx,eax
  459422:	call   0x9d31c178
  459427:	sahf   
  459428:	sahf   
  459429:	fldenv [ecx+0x9cfca8]
  45942f:	push   0x62
  459431:	outs   dx,DWORD PTR ds:[esi]
  459432:	add    BYTE PTR [eax+0x1e],ch
  459435:	(bad)  
  459436:	inc    eax
  459437:	add    BYTE PTR ds:0x9ea8ec,al
	...
  45944d:	add    BYTE PTR [eax],al
  45944f:	add    BYTE PTR [esi+0xa4587d9],ah
  459455:	sbb    bh,BYTE PTR [esp+edi*8]
  459458:	(bad)  
  459459:	fld    DWORD PTR [eax]
  45945b:	add    cl,bh
  45945d:	iret   
  45945e:	mov    DWORD PTR [ebp-0x22],edx
  459461:	push   ebp
  459462:	ret    
  459463:	add    ebx,ebp
  459465:	stos   DWORD PTR es:[edi],eax
  459466:	hlt    
  459467:	or     DWORD PTR [edi+0x5],0x9
  45946b:	jae    0x4593f0
  45946d:	dec    esi
  45946e:	cmp    al,0xfc
  459470:	jmp    0x61d21049
  459475:	cdq    
  459476:	add    BYTE PTR [ecx-0x27],dl
  459479:	stos   DWORD PTR es:[edi],eax
  45947a:	call   0x9d3139d1
  45947f:	sahf   
  459480:	(bad)  es:[ecx-0x2b069b3]
  459487:	mov    esi,es
  459489:	bound  edi,QWORD PTR ds:0x8a287900
  45948f:	in     eax,0x1f
  459491:	push   ss
  459492:	(bad)
  459495:	adc    al,0xc5
  459497:	int3   
  459498:	sahf   
  459499:	adc    al,0xc5
  45949b:	int3   
  45949c:	xchg   esi,eax
  45949d:	adc    al,0xc5
  45949f:	int3   
  4594a0:	mov    bh,0x54
  4594a2:	in     eax,0xa1
  4594a4:	push   esi
  4594a5:	pusha  
  4594a6:	cmp    eax,0x41548c00
  4594ab:	xor    cl,bl
  4594ad:	mov    cs,WORD PTR [eax]
  4594af:	ds jmp 0x459443
  4594b2:	or     BYTE PTR [ebp+0x0],bl
	...
  4594c5:	add    BYTE PTR [eax],al
  4594c7:	add    BYTE PTR [ecx],ah
  4594c9:	push   cs
  4594ca:	(bad)
  4594cd:	push   cs
  4594ce:	(bad)
  4594d1:	push   cs
  4594d2:	(bad)
  4594d5:	push   esp
  4594d6:	in     eax,0x8b
  4594d8:	lahf   
  4594d9:	int    0x50
  4594db:	mov    ebx,DWORD PTR [edi+0x6fff4fd1]
  4594e1:	xor    eax,0x9e624497
  4594e6:	ror    esp,0x26
  4594e9:	push   cs
  4594ea:	(bad)
  4594ed:	push   cs
  4594ee:	(bad)
  4594f1:	push   cs
  4594f2:	(bad)
  4594f5:	push   esp
  4594f6:	in     eax,0x83
  4594f8:	(bad)  
  4594f9:	shr    DWORD PTR [edx+0x0],1
  4594fc:	cmp    cl,bl
  4594fe:	push   0x9961dc
  459503:	call   DWORD PTR [edi+0x31]
  459506:	xchg   edi,eax
  459507:	inc    esp
  459508:	bound  edx,QWORD PTR [edx+0x3c]
  45950b:	clc    
  45950c:	cmp    dh,cl
  45950e:	add    DWORD PTR [eax+0x62],eax
  459511:	push   esp
  459512:	cmp    al,0xf8
  459514:	xor    dh,cl
  459516:	mov    edx,0x820095ff
  45951b:	les    ebx,FWORD PTR [edx+0x52]
  45951e:	cmp    al,0xfc
  459520:	(bad)  [esi-0x5916aef0]
  459526:	add    al,0x52
  459528:	jmp    0x959dc3
	...
  45953d:	add    BYTE PTR [eax],al
  45953f:	add    BYTE PTR [ebp-0x5a],ch
  459542:	hlt    
  459543:	mov    edi,DWORD PTR [edi-0x62]
  459546:	ror    esp,0xb7
  459549:	push   esp
  45954a:	in     eax,0x51
  45954c:	sbb    eax,0x6200f496
  459551:	fld    DWORD PTR [eax]
  459553:	jmp    0x4595b0
  459555:	push   esp
  459556:	cmp    al,0xfc
  459558:	loope  0x459572
  45955a:	add    BYTE PTR [ecx+0x4d89fd9f],cl
  459560:	les    eax,FWORD PTR cs:[ebx+0x10]
  459564:	mov    cl,0xe0
  459566:	mov    DWORD PTR [ebp+0x6a],edx
  459569:	fmul   QWORD PTR [ebx-0x4]
  45956c:	gs inc edi
  45956e:	add    ecx,DWORD PTR [ebx+0x4d01cd9f]
  459574:	push   es
  459575:	shr    BYTE PTR [esi+0x6d1b3911],1
  45957b:	pop    es
  45957c:	mov    edx,0x620000d9
  459581:	hlt    
  459582:	cld    
  459583:	jmp    0x9dc7:0x8bc0cc12
  45958a:	ror    esp,0xa6
  45958d:	or     al,0xc5
  45958f:	int3   
  459590:	sahf   
  459591:	or     al,0xc5
  459593:	int3   
  459594:	xchg   esi,eax
  459595:	or     al,0xc5
  459597:	int3   
  459598:	pop    ss
  459599:	push   esp
  45959a:	in     eax,0xb9
  45959c:	pop    edx
  45959d:	fld    DWORD PTR [eax]
  45959f:	add    BYTE PTR [esi+0x54],al
  4595a2:	or     BYTE PTR [ecx+0x0],cl
	...
  4595b8:	push   edi
  4595b9:	std    
  4595ba:	xchg   esi,eax
  4595bb:	inc    esp
  4595bc:	bound  ebx,QWORD PTR [esi+0xca6ccc1]
  4595c2:	(bad)
  4595c5:	or     al,0xc5
  4595c7:	int3   
  4595c8:	xchg   esi,eax
  4595c9:	or     al,0xc5
  4595cb:	int3   
  4595cc:	pop    ss
  4595cd:	push   esp
  4595ce:	in     eax,0x83
  4595d0:	xchg   al,ch
  4595d2:	mov    DWORD PTR [ebp+0x5a],eax
  4595d5:	pop    esp
  4595d6:	jns    0x4595dc
  4595d8:	(bad)  
  4595d9:	sar    BYTE PTR [eax+ecx*4+0x62],1
  4595dd:	fld    DWORD PTR [eax]
  4595df:	mov    esp,DWORD PTR [edi+0x665189d1]
  4595e5:	pop    edx
  4595e6:	jmp    0x4595f0
  4595e8:	xor    esi,esp
  4595ea:	xchg   DWORD PTR [ebp+0x36],edx
  4595ed:	push   ebx
  4595ee:	cmp    al,0x8
  4595f0:	loope  0x45960b
  4595f2:	or     DWORD PTR [ecx+0x45be09a7],ecx
  4595f8:	fiadd  DWORD PTR es:[eax]
  4595fb:	add    BYTE PTR [edx-0xe],ah
  4595fe:	pop    es
  4595ff:	mov    esp,DWORD PTR [edi+0x63c181fd]
  459605:	push   eax
  459606:	inc    esp
  459607:	cld    
  459608:	fldenv [esp+esi*8+0x7205973b]
  45960f:	inc    esi
  459610:	jmp    0x9fd18aa9
  459615:	or     DWORD PTR [esi],eax
  459617:	mov    bh,0x4e
  459619:	cwde   
  45961a:	mov    edi,0xfa
	...
  45962f:	add    BYTE PTR [esi+0x5a],ch
  459632:	sti    
  459633:	add    ecx,DWORD PTR [edi-0x35]
  459636:	mov    DWORD PTR [ebp-0x32],eax
  459639:	push   edx
  45963a:	inc    esp
  45963b:	lock push ebp
  45963d:	inc    esi
  45963e:	or     eax,0xf5fbe341
  459643:	punpckldq mm3,mm1
  459646:	xchg   DWORD PTR [ebp-0x56],edx
  459649:	push   edx
  45964a:	cmp    al,0x8
  45964c:	(bad)  [esp+eax*1+0x4c526a03]
  459653:	clc    
  459654:	jmp    0x2748a62e
  459659:	jmp    0x529fe3e7
  45965e:	dec    esp
  45965f:	or     al,0x61
  459661:	call   0x50bfe3ef
  459666:	std    
  459667:	or     DWORD PTR [ecx+0x30],edi
  45966a:	mov    dl,BYTE PTR [ebp+0x5a]
  45966d:	push   edx
  45966e:	cmp    al,0x8
  459670:	popa   
  459671:	fwait
  459672:	cld    
  459673:	mov    BYTE PTR [edi+0x4d6be7d1],bl
  459679:	(bad)  
  45967a:	cmc    
  45967b:	mov    edi,DWORD PTR [edi]
  45967d:	pushf  
  45967e:	ror    esp,0x97
  459681:	push   edx
  459682:	in     eax,0x83
  459684:	inc    esi
  459685:	mov    ch,0x89
  459687:	inc    ebp
  459688:	pop    edx
  459689:	push   eax
  45968a:	cmp    al,0xe4
  45968c:	(bad)  [ebx-0xa487424]
  459692:	add    DWORD PTR [ecx+0x0],edx
	...
  4596a5:	add    BYTE PTR [eax],al
  4596a7:	add    BYTE PTR [esi+0x50],dl
  4596aa:	dec    esp
  4596ab:	call   0x8c2e2a89
  4596b0:	ficomp DWORD PTR [eax+0x1]
  4596b3:	add    BYTE PTR [edx+0x50],ah
  4596b6:	inc    esp
  4596b7:	lock loope 0x459735
  4596ba:	lock add BYTE PTR [ebp+0x55],bl
  4596be:	cli    
  4596bf:	add    BYTE PTR [edx-0x27],ah
  4596c2:	mov    DWORD PTR [ebp+0x6a],edx
  4596c5:	fimul  DWORD PTR [ebx-0x10]
  4596c8:	jmp    0x45966d
  4596ca:	loopne 0x459657
  4596cc:	daa    
  4596cd:	stc    
  4596ce:	cmp    DWORD PTR [eax+0x72],0xc78405d9
  4596d5:	fadd   DWORD PTR [eax]
  4596d7:	add    BYTE PTR [eax-0x27],cl
  4596da:	push   0x0
  4596dc:	(bad)  [ebx-0x2ef07420]
  4596e2:	add    DWORD PTR [ecx+0x6e],edx
  4596e5:	stos   DWORD PTR es:[edi],eax
  4596e6:	cmc    
  4596e7:	adc    eax,0x3d5eca
  4596ec:	fist   DWORD PTR [ebx-0x6e0740c]
  4596f2:	cmp    DWORD PTR [eax],0x8b178562
  4596f8:	daa    
  4596f9:	stc    
  4596fa:	mov    DWORD PTR [ebp+0x5a],edx
  4596fd:	fimul  DWORD PTR [edi]
  4596ff:	mov    DWORD PTR [edi],ecx
  459701:	add    eax,0x5142458a
  459706:	inc    esp
  459707:	or     BYTE PTR [ecx-0x6f],ah
  45970a:	adc    BYTE PTR [ecx+0x0],cl
	...
  459720:	lahf   
  459721:	in     eax,dx
  459722:	jmp    0xe0ec703e
  459727:	mov    esp,DWORD PTR [edi+0x524201d1]
  45972d:	push   edx
  45972e:	cmp    al,0xf4
  459730:	(bad)  [esi-0x2e707420]
  459736:	add    DWORD PTR [ecx],edx
  459738:	jmp    0x4596e0
  45973a:	in     al,0xc7
  45973c:	lahf   
  45973d:	add    DWORD PTR [ecx],eax
  45973f:	add    BYTE PTR [edx-0x27],ah
  459742:	mov    DWORD PTR [ebp+0x2],eax
  459745:	pop    ecx
  459746:	jns    0x459758
  459748:	bound  eax,QWORD PTR [ebp-0x65874fb]
  45974e:	cmp    DWORD PTR [ecx],0xc6fd8562
  459754:	lahf   
  459755:	add    DWORD PTR [eax],eax
  459757:	add    BYTE PTR [edx-0x27],ah
  45975a:	mov    DWORD PTR [ebp-0x32],edx
  45975d:	pop    eax
  45975e:	cmp    eax,DWORD PTR [eax]
  459760:	push   esi
  459761:	jp     0x4596ec
  459763:	inc    ebp
  459764:	into   
  459765:	push   eax
  459766:	or     DWORD PTR [ecx+0xd9c3],eax
  45976c:	loop   0x4596f3
  45976e:	adc    al,0x8b
  459770:	pop    ss
  459771:	add    eax,0xfc7f028a
  459776:	cmc    
  459777:	call   FWORD PTR ds:0x964d89a9
  45977d:	stos   BYTE PTR es:[edi],al
  45977e:	call   0xf6422738
  459783:	add    DWORD PTR [eax],0x0
	...
  459796:	add    BYTE PTR [eax],al
  459798:	sahf   
  459799:	rol    DWORD PTR [edi+0x14f09e45],1
  45979f:	mov    ecx,DWORD PTR [edi]
  4597a1:	add    eax,0x8ed9028a
  4597a6:	or     BYTE PTR [ebp+0x5202d10e],cl
  4597ac:	jmp    0x4a968c46
  4597b1:	fs hlt 
  4597b3:	dec    DWORD PTR [ebp+0x58]
  4597b6:	mov    ebp,0xd495db08
  4597bb:	mov    ebp,DWORD PTR [edi+0x165589ed]
  4597c1:	push   edx
  4597c2:	adc    BYTE PTR [ebx-0x3f7dfa59],cl
  4597c8:	pop    esi
  4597c9:	push   edx
  4597ca:	cmp    al,0xf4
  4597cc:	jmp    0x23c97c5e
  4597d1:	aad    0x87
  4597d3:	dec    ebp
  4597d4:	(bad)  
  4597d5:	out    dx,eax
  4597d6:	lea    ecx,[ebx-0x3d7e0651]
  4597dc:	push   esi
  4597dd:	push   edx
  4597de:	dec    esp
  4597df:	loopne 0x4597ec
  4597e1:	retf   
  4597e2:	cmc    
  4597e3:	(bad)  
  4597e4:	in     eax,dx
  4597e5:	dec    edi
  4597e6:	fcomp  QWORD PTR [ebp+0x21]
  4597e9:	or     eax,0x5037ccc5
  4597ee:	in     eax,0x83
  4597f0:	(bad)  
  4597f1:	shr    BYTE PTR [eax-0x10],1
  4597f4:	popa   
  4597f5:	cdq    
  4597f6:	add    bh,bh
  4597f8:	outs   dx,DWORD PTR ds:[esi]
  4597f9:	dec    ecx
  4597fa:	xchg   edi,eax
  4597fb:	inc    esp
	...
  459810:	bound  edx,QWORD PTR [edx+0x3c]
  459813:	clc    
  459814:	dec    edx
  459815:	std    
  459816:	add    DWORD PTR [eax+0x62],eax
  459819:	push   eax
  45981a:	cmp    al,0xf8
  45981c:	adc    dh,cl
  45981e:	ss std 
  459820:	popf   
  459821:	sti    
  459822:	add    esp,0xfc3c526a
  459828:	(bad)  [ebp-0x5a26aef0]
  45982e:	add    al,0x52
  459830:	jmp    0x7595a0ca
  459835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  459836:	hlt    
  459837:	mov    eax,DWORD PTR [edi-0x69333e63]
  45983d:	or     al,0xc5
  45983f:	int3   
  459840:	mov    bh,0x4e
  459842:	in     eax,0xa1
  459844:	push   0x5a
  459846:	cmp    eax,0x68da2400
  45984b:	mov    ebp,DWORD PTR [edi-0x27]
  45984e:	xchg   ebp,eax
  45984f:	inc    esp
  459850:	bound  edx,QWORD PTR [eax+0x51]
  459853:	add    eax,esi
  459855:	push   ss
  459856:	mov    DWORD PTR [eax+0x67],edx
  459859:	pushf  
  45985a:	ror    esp,0x16
  45985d:	push   cs
  45985e:	(bad)
  459861:	dec    esi
  459862:	in     eax,0x83
  459864:	push   es
  459865:	into   
  459866:	lahf   
  459867:	cld    
  459868:	in     al,dx
  459869:	xchg   ebp,eax
  45986a:	add    BYTE PTR [ebx+0x3ec7c730],cl
  459870:	jmp    0xd0c90e
	...
  459885:	add    BYTE PTR [eax],al
  459887:	add    BYTE PTR [eax],dl
  459889:	dec    edi
  45988a:	sar    DWORD PTR [esi],cl
  45988c:	fst    DWORD PTR [ecx+0x51108b04]
  459892:	inc    esp
  459893:	hlt    
  459894:	jmp    0x2ad1852d
  459899:	int    0x87
  45989b:	dec    ebp
  45989c:	retf   0x4c4e
  45989f:	clc    
  4598a0:	(bad)  [esp+esi*8+0xd963b8]
  4598a7:	add    bh,bl
  4598a9:	sbb    DWORD PTR [ebp+0x44],ebp
  4598ac:	loope  0x45992a
  4598ae:	clc    
  4598af:	add    BYTE PTR [edi],ch
  4598b1:	aad    0x31
  4598b3:	ror    BYTE PTR [ecx-0x65b27643],0x4e
  4598ba:	push   eax
  4598bb:	sbb    BYTE PTR [ecx-0x5c],cl
  4598be:	or     BYTE PTR [ebp+0x6b],dh
  4598c1:	dec    esi
  4598c2:	cmp    al,0xf8
  4598c4:	jmp    0x2ace9d55
  4598c9:	fisttp QWORD PTR [ecx+0x3c4e6a55]
  4598cf:	adc    bl,bl
  4598d1:	xchg   edi,eax
  4598d2:	sbb    BYTE PTR [eax+0xd963],bh
  4598d8:	dec    ecx
  4598d9:	loope  0x459864
  4598db:	dec    ebp
  4598dc:	dec    edx
  4598dd:	dec    esi
  4598de:	adc    BYTE PTR [ecx+0x458a01af],cl
  4598e4:	cmp    bh,BYTE PTR [esi-0x2a5003c5]
  4598ea:	xor    eax,eax
	...
  459900:	cmp    ebp,edx
  459902:	jmp    0x8a5f0aba
  459907:	in     eax,0xbf
  459909:	push   ss
  45990a:	(bad)
  45990d:	or     eax,0xd1eccc5
  459912:	(bad)
  459915:	or     eax,0x4e97ccc5
  45991a:	in     eax,0x8b
  45991c:	lahf   
  45991d:	sar    DWORD PTR [ecx],1
  45991f:	inc    ebp
  459920:	pop    esi
  459921:	xchg   ch,bh
  459923:	mov    bl,BYTE PTR [edi-0x36fa162f]
  459929:	aad    0x89
  45992b:	inc    ebp
  45992c:	pushfw 
  45992e:	ror    esp,0x9e
  459931:	or     al,0xc5
  459933:	int3   
  459934:	xchg   esi,eax
  459935:	or     al,0xc5
  459937:	int3   
  459938:	pop    ss
  459939:	dec    esi
  45993a:	in     eax,0x83
  45993c:	(bad)  
  45993d:	lods   al,BYTE PTR ds:[esi]
  45993e:	mov    ebp,0xc0d8ae45
  459943:	add    al,0x62
  459945:	dec    esi
  459946:	cmp    al,0x8
  459948:	jmp    0x4598dd
  45994a:	fmul   DWORD PTR [ebx+0x558a2127]
  459950:	pop    edx
  459951:	(bad)  
  459952:	dec    edi
  459953:	cmp    al,0xdb
  459955:	mov    ds:0xf9278be0,eax
  45995a:	add    eax,0x89e52ab7
  45995f:	push   ebp
  459960:	or     BYTE PTR [ebx+0x3d],0xa
	...
  459978:	dec    edx
  459979:	push   eax
  45997a:	cmp    al,0xe8
  45997c:	retf   0xfcdd
  45997f:	aas    
  459980:	bound  esp,QWORD PTR [esp+eax*1-0x18]
  459984:	in     al,dx
  459985:	popf   
  459986:	add    BYTE PTR [ecx+0x3a],dl
  459989:	jmp    0x5d839982
  45998e:	mov    ebp,0xf09eeb08
  459993:	push   0xffffffa2
  459995:	add    DWORD PTR [eax],0x68d96230
  45999b:	add    BYTE PTR [edx],ah
  45999d:	fiadd  WORD PTR [eax]
  45999f:	push   0x62
  4599a1:	clc    
  4599a2:	dec    ebx
  4599a3:	lock fistp DWORD PTR [esi-0x6507424]
  4599aa:	mov    DWORD PTR [edx-0x6a],eax
  4599ad:	mov    DWORD PTR [ecx-0x767595b3],ecx
  4599b3:	push   ebp
  4599b4:	push   es
  4599b5:	mov    eax,gs
  4599b7:	and    esp,0xa683f5f8
  4599bd:	in     eax,0xbd
  4599bf:	inc    ebp
  4599c0:	into   
  4599c1:	fld    DWORD PTR [eax]
  4599c3:	add    BYTE PTR [edx+0x4],ah
  4599c6:	or     BYTE PTR [ebx-0x3f7e12e1],cl
  4599cc:	arpl   WORD PTR [edx+0x3c],sp
  4599cf:	hlt    
  4599d0:	jmp    0xf5557a7b
  4599d5:	mov    bh,dh
  4599d7:	cmp    BYTE PTR [edi],cl
  4599d9:	in     eax,dx
  4599da:	jno    0x459a35
	...
  4599f0:	jmp    0x1ac98293
  4599f5:	int    0x0
  4599f7:	je     0x459a20
  4599f9:	fs inc esp
  4599fb:	call   0x560ce1
  459a00:	div    BYTE PTR [ecx+ecx*4+0x43648a55]
  459a07:	adc    cl,bl
  459a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  459a0a:	loopne 0x459997
  459a0c:	adc    esi,DWORD PTR [ebp-0x78dbb7d]
  459a12:	mov    DWORD PTR [ebp+0x42],ecx
  459a15:	lods   al,BYTE PTR ds:[esi]
  459a16:	shl    bh,cl
  459a18:	shl    DWORD PTR [ebp-0x17bdaa77],cl
  459a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  459a1f:	inc    edx
  459a20:	jle    0x4599ab
  459a22:	mov    DWORD PTR [ebp+0x4a],eax
  459a25:	fs inc esp
  459a27:	or     BYTE PTR [ecx-0x5f],ah
  459a2a:	or     al,0x51
  459a2c:	(bad)  [ebp-0x2587418]
  459a32:	add    DWORD PTR [edx+0x66],eax
  459a35:	mov    eax,ebp
  459a37:	adc    eax,0x83f5f80c
  459a3c:	push   ds
  459a3d:	in     eax,0x89
  459a3f:	dec    ebp
  459a40:	or     bl,BYTE PTR [eax+eax*8+0x28]
  459a44:	jmp    0x4599eb
  459a46:	call   0x4ca96b36
  459a4b:	in     al,0x90
  459a4d:	add    edi,eax
  459a4f:	cld    
  459a50:	(bad)  
  459a52:	add    esp,0x0
	...
  459a68:	pop    esi
  459a69:	or     DWORD PTR [esp+eax*1],0xe89fd922
  459a70:	in     al,0x9c
  459a72:	add    BYTE PTR [eax-0x36],dl
  459a75:	mov    ds:0x5bb5fff9,eax
  459a7a:	mov    ebp,0xd49ddb08
  459a7f:	and    DWORD PTR [edi-0x3],0xffffff96
  459a83:	inc    esp
  459a84:	(bad)  
  459a85:	fldcw  WORD PTR [ebx+0xa]
  459a88:	jmp    0x26e46f72
  459a8d:	(bad)  [edi-0x1]
  459a90:	das    
  459a91:	adc    eax,0x56863d82
  459a96:	cmp    eax,0x146e6200
  459a9b:	push   0x22
  459a9d:	add    DWORD PTR [eax],0x89d96230
  459aa3:	push   ebp
  459aa4:	pop    esi
  459aa5:	mov    WORD PTR [ecx+0x49634245],cs
  459aab:	xor    al,0xb3
  459aad:	test   BYTE PTR [ebx-0x10],0x1
  459ab1:	push   ds
  459ab2:	xchg   edi,eax
  459ab3:	inc    esp
  459ab4:	bound  eax,QWORD PTR [edx]
  459ab6:	or     al,0x6a
  459ab8:	mov    ds:0x62300081,al
  459abd:	(bad)  [ecx+0x6a8c2655]
  459ac3:	add    BYTE PTR ds:0x1ea3f08d,bl
  459ac9:	pop    eax
  459aca:	cmp    eax,0x0
	...
  459adf:	add    cl,ah
  459ae1:	mov    ah,0xbc
  459ae3:	sahf   
  459ae4:	sahf   
  459ae5:	fld    DWORD PTR [eax]
  459ae7:	jne    0x459b40
  459ae9:	add    DWORD PTR [eax+0x68],0x62
  459aed:	test   eax,0x9cd90000
  459af2:	hlt    
  459af3:	push   eax
  459af4:	js     0x459acf
  459af6:	cmc    
  459af7:	push   ebp
  459af8:	sar    BYTE PTR [edx],cl
  459afa:	mov    ebp,0x89d91e9e
  459aff:	dec    ebp
  459b00:	(bad)  
  459b01:	pusha  
  459b02:	inc    esp
  459b03:	fcomp  st(1)
  459b05:	mov    eax,ds
  459b07:	mov    esp,DWORD PTR [edi]
  459b09:	adc    DWORD PTR [edx],eax
  459b0b:	inc    edx
  459b0c:	jbe    0x459b6e
  459b0e:	cmp    al,0xe0
  459b10:	fldenv [eax+eiz*8+0x5289138b]
  459b17:	mov    esp,DWORD PTR [edi]
  459b19:	std    
  459b1a:	push   eax
  459b1b:	mov    esp,DWORD PTR [edi+0x1d]
  459b1e:	xchg   edi,eax
  459b1f:	inc    esp
  459b20:	bound  ecx,QWORD PTR [eax-0x978ae18]
  459b26:	cmc    
  459b27:	and    DWORD PTR [esi-0x7daa761b],0x5a
  459b2e:	mov    ebx,0xd962a4
  459b33:	add    dh,ch
  459b35:	scas   eax,DWORD PTR es:[edi]
  459b36:	mov    DWORD PTR [ebp+0x42],eax
  459b39:	bound  eax,QWORD PTR [eax+ebx*8+0x61]
  459b3d:	popa   
  459b3e:	mov    eax,ds:0x87d96200
  459b43:	dec    ebp
	...
  459b58:	bound  ecx,QWORD PTR ss:[eax+eiz*8+0x3]
  459b5d:	sbb    eax,0xc2624497
  459b62:	inc    edx
  459b63:	xor    al,0x1
  459b65:	jmp    0x62a7e000
  459b6a:	add    al,0xf0
  459b6c:	cld    
  459b6d:	pushf  
  459b6e:	add    BYTE PTR [ecx-0x17],dl
  459b71:	retf   
  459b72:	mov    esp,0x52d9a69e
  459b77:	mov    ebx,DWORD PTR [edi+0x3ee85105]
  459b7d:	repnz cmc 
  459b7f:	jmp    ecx
  459b81:	sbb    al,0x5
  459b83:	mov    ebx,DWORD PTR [edi+0x1e1589f9]
  459b89:	push   edi
  459b8a:	cmp    eax,0x28886100
  459b8f:	mov    DWORD PTR [edi-0x27],ebp
  459b92:	xchg   ebp,eax
  459b93:	inc    esp
  459b94:	bound  ebx,QWORD PTR [edx+0x34]
  459b97:	in     al,0xe4
  459b99:	pushf  
  459b9a:	add    BYTE PTR [eax],al
  459b9c:	aaa    
  459b9d:	lds    ebx,FWORD PTR [edi+0x9cd4c4]
  459ba3:	push   eax
  459ba4:	(bad)  
  459ba6:	add    BYTE PTR [edi-0x74b026e2],bl
  459bac:	ja     0x459bc3
  459bae:	xchg   edi,eax
  459baf:	inc    esp
  459bb0:	bound  ecx,QWORD PTR [ebx-0xa70ca18]
  459bb6:	cmc    
  459bb7:	sbb    DWORD PTR [esi+0xc49fe4],0x0
	...
  459bce:	add    BYTE PTR [eax],al
  459bd0:	fcomp  QWORD PTR [eax+eax*1-0x52275b0]
  459bd7:	jmp    FWORD PTR [ebp+0x59]
  459bda:	mov    ebp,0x68787904
  459bdf:	and    al,0x66
  459be1:	cdq    
  459be2:	add    BYTE PTR [ebx+0x44970167],cl
  459be8:	bound  ecx,QWORD PTR [edx-0xab7ee18]
  459bee:	cmc    
  459bef:	and    DWORD PTR [esi],0xffffffe2
  459bf2:	xchg   DWORD PTR [ebp+0xe],eax
  459bf5:	popa   
  459bf6:	or     al,0xc4
  459bf8:	int3   
  459bf9:	popf   
  459bfa:	add    BYTE PTR [edx-0x27],dl
  459bfd:	sahf   
  459bfe:	loopne 0x459b8b
  459c00:	outs   dx,DWORD PTR ds:[esi]
  459c01:	sbb    eax,0xd8624497
  459c06:	dec    eax
  459c07:	sub    BYTE PTR [ebx-0x1b23f3a0],dh
  459c0d:	popf   
  459c0e:	add    BYTE PTR [edx+0xa],dl
  459c11:	add    ebp,esi
  459c13:	push   ebp
  459c15:	pop    eax
  459c16:	mov    ebp,0x9715c30c
  459c1b:	inc    esp
  459c1c:	(bad)  
  459c1d:	fidiv  WORD PTR [eax-0x64]
  459c20:	fldenvw [ecx+0x9df508]
  459c27:	lea    ebx,[edi]
  459c29:	icebp  
  459c2a:	dec    edi
  459c2b:	push   0x22
  459c2d:	jg     0x459c2d
  459c2f:	mov    dl,BYTE PTR [edi-0x1f]
  459c32:	xchg   ebp,eax
  459c33:	inc    esp
	...
  459c48:	bound  eax,QWORD PTR [edi+0x19655f5]
  459c4e:	mov    ds:0xb8f4a5fc,eax
  459c53:	add    DWORD PTR [edx-0x27],esp
  459c56:	add    BYTE PTR [ebx+0x4c2967f],cl
  459c5c:	bound  esp,QWORD PTR ds:0x2596ccc5
  459c62:	(bad)
  459c65:	pusha  
  459c66:	in     eax,0x8b
  459c68:	pop    ds
  459c69:	loope  0x459bf4
  459c6b:	inc    eax
  459c6c:	outs   dx,BYTE PTR ds:[esi]
  459c6d:	xchg   esi,eax
  459c6e:	ror    esp,0x96
  459c71:	and    eax,0x60b7ccc5
  459c76:	in     eax,0x53
  459c78:	lods   al,BYTE PTR ds:[esi]
  459c79:	mov    WORD PTR [ecx+0x3d53323d],cs
  459c7f:	add    cl,bl
  459c81:	aad    0xd8
  459c83:	sahf   
  459c84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  459c85:	(bad)  [ecx+0x3d532a35]
  459c8b:	add    BYTE PTR [ebp+0x215d5993],cl
  459c91:	and    eax,0x60b7ccc5
  459c96:	in     eax,0x51
  459c98:	mov    ch,BYTE PTR [ebp+0x3a623ffc]
  459c9e:	jmp    0x511f3b41
  459ca3:	call   0x3b8f36
  459ca8:	loope  0x459cc6
  459caa:	or     DWORD PTR [ecx+0x0],ecx
	...
  459cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  459cc1:	cmc    
  459cc2:	mov    DWORD PTR [ebp+0x5a],ecx
  459cc5:	mov    ch,BYTE PTR [edx+0x0]
  459cc8:	jmp    0x1ee4999a
  459ccd:	fst    DWORD PTR [edx-0x1]
  459cd0:	aaa    
  459cd1:	cmc    
  459cd2:	mov    ebp,esp
  459cd4:	daa    
  459cd5:	sbb    ch,al
  459cd7:	int3   
  459cd8:	pop    ss
  459cd9:	pusha  
  459cda:	in     eax,0x83
  459cdc:	(bad)  
  459cdd:	mov    esp,0xd8aa45bd
  459ce2:	add    BYTE PTR [eax],al
  459ce4:	bound  ebx,QWORD PTR [esp+edi*1]
  459ce7:	fcomp  QWORD PTR [edx]
  459ce9:	fld    DWORD PTR [eax]
  459ceb:	add    BYTE PTR [ebp+0x6201ec9d],bl
  459cf1:	fld    DWORD PTR [eax]
  459cf3:	(bad)  
  459cf4:	pop    ds
  459cf5:	cmc    
  459cf6:	add    BYTE PTR [eax],al
  459cf8:	(bad)  
  459cf9:	fnstcw WORD PTR [ebp+0xd87e45]
  459cff:	add    BYTE PTR [edx+0x60],ah
  459d02:	inc    esp
  459d03:	or     bl,bl
  459d05:	in     eax,0xd4
  459d07:	sahf   
  459d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  459d09:	fld1   
  459d0b:	imul   ebx,DWORD PTR [edx-0xd],0x542ea1f5
  459d12:	cmp    eax,0xf5f27f00
  459d17:	add    BYTE PTR [edx+0x6d],ah
  459d1a:	add    al,0xc7
  459d1c:	pop    edi
  459d1d:	std    
  459d1e:	xchg   esi,eax
  459d1f:	inc    esp
  459d20:	(bad)  
  459d21:	fld    DWORD PTR [eax]
	...
  459d37:	add    BYTE PTR [edx-0x2],ah
  459d3a:	or     al,bh
  459d3c:	addr16 std 
  459d3e:	xchg   esi,eax
  459d3f:	inc    esp
  459d40:	(bad)  
  459d41:	fadd   DWORD PTR [eax]
  459d43:	add    BYTE PTR [edx+0x56],ah
  459d46:	xor    al,0xdc
  459d48:	in     al,0x9d
  459d4a:	add    BYTE PTR [eax],al
  459d4c:	ja     0x459d2d
  459d4e:	mov    ebp,0x3d53fe05
  459d53:	add    BYTE PTR [edx-0x27],ah
  459d56:	add    BYTE PTR [eax],al
  459d58:	loope  0x459d0e
  459d5a:	fcomp  QWORD PTR [esi+0x7500d926]
  459d60:	addr16 jg 0x459d63
  459d63:	push   DWORD PTR [edi+0x29]
  459d66:	xchg   edi,eax
  459d67:	inc    esp
  459d68:	bound  esi,QWORD PTR [esi]
  459d6a:	aad    0x9e
  459d6c:	(bad)  es:[ecx+0x3d53960d]
  459d73:	add    bl,bl
  459d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  459d76:	call   0x975aed06
  459d7b:	inc    esp
  459d7c:	bound  ebx,QWORD PTR [esi+0x3c]
  459d7f:	call   0x897a34e5
  459d84:	daa    
  459d85:	add    DWORD PTR [edx+0x4607a4d],ecx
  459d8b:	int3   
  459d8c:	fcomp  QWORD PTR [ebp-0x22dd9800]
  459d92:	inc    eax
  459d93:	add    BYTE PTR [ebp-0x34],ch
  459d96:	mov    al,0x9e
  459d98:	push   ds
  459d99:	fldenv [ecx+0xe8]
	...
  459daf:	add    ah,bh
  459db1:	pushf  
  459db2:	add    bh,al
  459db4:	pop    edi
  459db5:	icebp  
  459db6:	xchg   esi,eax
  459db7:	inc    esp
  459db8:	bound  edi,QWORD PTR [esp+edi*8+0x3f]
  459dbc:	bound  eax,QWORD PTR [ecx-0x265dfbb0]
  459dc2:	mov    DWORD PTR ds:0x3d534a,edx
  459dc8:	nop
  459dc9:	add    DWORD PTR [ebx-0x7e0dda08],eax
  459dcf:	les    ebp,FWORD PTR [edx+0x36]
  459dd2:	in     eax,dx
  459dd3:	sahf   
  459dd4:	sahf   
  459dd5:	fprem1 
  459dd7:	adc    eax,0x3d5316
  459ddc:	rcr    esp,0x95
  459ddf:	inc    esp
  459de0:	bound  edi,QWORD PTR [eax]
  459de2:	stc    
  459de3:	sahf   
  459de4:	sahf   
  459de5:	fst    DWORD PTR [eax-0x18]
  459de8:	mov    dh,0xf2
  459dea:	cmc    
  459deb:	jmp    ecx
  459ded:	sbb    al,0xfd
  459def:	mov    BYTE PTR [edi],ah
  459df1:	jmp    0x8817eb7f
  459df6:	call   0xf6376ad0
  459dfb:	sbb    DWORD PTR [esi-0x231f5e24],0xffffff9c
  459e02:	add    BYTE PTR [ebx+0x6a52e90f],cl
  459e08:	bound  edi,QWORD PTR [eax]
  459e0a:	loope  0x459daa
  459e0c:	push   ds
  459e0d:	fst    DWORD PTR [eax-0x18]
  459e10:	ds icebp 
  459e12:	cmc    
  459e13:	inc    DWORD PTR [eax]
	...
  459e25:	add    BYTE PTR [eax],al
  459e27:	add    cl,ah
  459e29:	sbb    al,0x5
  459e2b:	mov    ebx,DWORD PTR [edi]
  459e2d:	jmp    0x5dc7ebb9
  459e32:	dec    esp
  459e33:	cld    
  459e34:	cmp    DWORD PTR [eax+esi*8+0x3c5e1873],ecx
  459e3b:	loopne 0x459e4f
  459e3d:	pop    esi
  459e3e:	inc    esp
  459e3f:	fcom   QWORD PTR [ebx]
  459e41:	add    DWORD PTR [edi-0x7e0ea205],esp
  459e47:	les    ebp,FWORD PTR [edx+0x3c]
  459e4a:	in     eax,0x9e
  459e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  459e4d:	(bad)  [ecx+0x3d503615]
  459e53:	add    BYTE PTR [eax-0x616106c6],dl
  459e59:	fld    DWORD PTR [ecx]
  459e5b:	inc    ebp
  459e5c:	inc    esi
  459e5d:	mov    cl,BYTE PTR [ecx+0x3d50420d]
  459e63:	add    BYTE PTR [ecx-0x62],ah
  459e66:	hlt    
  459e67:	push   ecx
  459e68:	or     cl,BYTE PTR [ecx-0x5]
  459e6b:	dec    DWORD PTR ds:0xd90cbd5d
  459e71:	xchg   ah,ch
  459e73:	add    edx,DWORD PTR [edi-0x1aafdf3]
  459e79:	bound  ecx,QWORD PTR [esp+eiz*8-0x27]
  459e7d:	xchg   esi,eax
  459e7e:	hlt    
  459e7f:	add    ebx,DWORD PTR [edi-0x21ba77f3]
  459e85:	fs inc esp
  459e87:	loopne 0x459e12
  459e89:	fsubrp st(4),st
  459e8b:	sahf   
	...
  459ea0:	fld    DWORD PTR es:[edi-0x68fb3db3]
  459ea7:	(bad)  
  459ea8:	daa    
  459ea9:	icebp  
  459eaa:	add    BYTE PTR [eax],al
  459eac:	(bad)  
  459ead:	fldl2t 
  459eaf:	or     ecx,ebx
  459eb1:	xchg   al,bh
  459eb3:	and    DWORD PTR [eax-0x65aa782b],0x64
  459eba:	cmp    al,0xf8
  459ebc:	pop    ecx
  459ebd:	xchg   esi,eax
  459ebe:	lock jae 0x459f0b
  459ec1:	fs add al,0xe0
  459ec4:	in     al,0x95
  459ec6:	add    BYTE PTR [ebx],al
  459ec8:	das    
  459ec9:	icebp  
  459eca:	mov    DWORD PTR [ecx],edx
  459ecc:	popa   
  459ecd:	xchg   al,bh
  459ecf:	mov    eax,ds:0x3d4f82
  459ed4:	popa   
  459ed5:	xchg   esi,eax
  459ed6:	clc    
  459ed7:	mov    DWORD PTR [edx+0x64],esi
  459eda:	inc    esp
  459edb:	clc    
  459edc:	jecxz  0x459ef7
  459ede:	call   0x8a1f00e6
  459ee3:	adc    eax,0x3d4f42
  459ee8:	popa   
  459ee9:	xchg   al,bh
  459eeb:	xor    ebp,DWORD PTR [eax+0x3a]
  459eee:	loope  0x459e8e
  459ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  459ef1:	fld    DWORD PTR [ecx]
  459ef3:	inc    ebp
  459ef4:	sub    ah,BYTE PTR [edx+0x9]
  459ef7:	jmp    0x459ece
  459ef9:	popa   
  459efa:	and    al,0xd4
  459efc:	hlt    
  459efd:	xchg   esp,eax
  459efe:	add    BYTE PTR [ecx+0x4497094f],cl
	...
  459f18:	bound  ebp,QWORD PTR [edi+eax*8-0x68dec877]
  459f1f:	inc    esp
  459f20:	bound  ebp,QWORD PTR [edi+eax*8-0x68eeb077]
  459f27:	inc    esp
  459f28:	bound  eax,QWORD PTR [ecx]
  459f2a:	pop    es
  459f2b:	clc    
  459f2c:	fucomp st(7)
  459f2e:	mov    DWORD PTR ds:0x3d4ec2,ecx
  459f34:	xor    eax,DWORD PTR [ecx]
  459f36:	add    edi,ebx
  459f38:	(bad)
  459f3b:	shl    BYTE PTR [edi],0xd5
  459f3e:	xor    eax,eax
  459f40:	leave  
  459f41:	ret    0x2589
  459f44:	xchg   esi,eax
  459f45:	dec    esi
  459f46:	cmp    eax,0xfd14e100
  459f4b:	sbb    BYTE PTR [edi-0xb],0x96
  459f4f:	inc    esp
  459f50:	(bad)  
  459f51:	fldcw  WORD PTR [ecx+ecx*1-0x3d]
  459f55:	adc    al,0x97
  459f57:	inc    esp
  459f58:	bound  esp,QWORD PTR [edx+0x3d]
  459f5b:	and    al,0x66
  459f5d:	add    DWORD PTR [ebx-0x76108a03],ecx
  459f63:	adc    eax,0x3d5062
  459f68:	adc    BYTE PTR [edx+esi*1],bl
  459f6b:	shr    cl,0xf4
  459f6e:	push   ebx
  459f6f:	ret    
  459f70:	(bad)  
  459f71:	fld    DWORD PTR [eax]
  459f73:	add    BYTE PTR [edx-0x27],ah
  459f76:	add    BYTE PTR [eax],al
  459f78:	(bad)  
  459f79:	fld    DWORD PTR [eax]
	...
  459f8f:	add    BYTE PTR [edx-0x27],ah
  459f92:	add    BYTE PTR [eax],al
  459f94:	(bad)  
  459f95:	fld    DWORD PTR [eax]
  459f97:	add    BYTE PTR [edx-0x27],ah
  459f9a:	add    BYTE PTR [eax],al
  459f9c:	(bad)  
  459f9d:	fld    DWORD PTR [eax]
  459f9f:	add    BYTE PTR [edx-0x27],ah
  459fa2:	add    BYTE PTR [eax],al
  459fa4:	(bad)  
  459fa5:	fld    DWORD PTR [eax]
  459fa7:	add    BYTE PTR [edx-0x27],ah
  459faa:	add    BYTE PTR [eax],al
  459fac:	(bad)  
  459fad:	fld    DWORD PTR [eax]
  459faf:	add    BYTE PTR [edx-0x27],ah
  459fb2:	add    BYTE PTR [eax],al
  459fb4:	(bad)  
  459fb5:	fld    DWORD PTR [eax]
  459fb7:	add    BYTE PTR [edx-0x27],ah
  459fba:	add    BYTE PTR [eax],al
  459fbc:	(bad)  
  459fbd:	fld    DWORD PTR [eax]
  459fbf:	add    BYTE PTR [edx-0x27],ah
  459fc2:	add    BYTE PTR [eax],al
  459fc4:	(bad)  
  459fc5:	fld    DWORD PTR [eax]
  459fc7:	add    BYTE PTR [edx-0x27],ah
  459fca:	add    BYTE PTR [eax],al
  459fcc:	(bad)  
  459fcd:	fld    DWORD PTR [eax]
  459fcf:	add    BYTE PTR [edx-0x27],ah
  459fd2:	add    BYTE PTR [eax],al
  459fd4:	(bad)  
  459fd5:	fld    DWORD PTR [eax]
  459fd7:	add    BYTE PTR [edx-0x27],ah
  459fda:	add    BYTE PTR [eax],al
  459fdc:	(bad)  
  459fdd:	fld    DWORD PTR [eax]
  459fdf:	add    BYTE PTR [edx-0x27],ah
  459fe2:	add    BYTE PTR [eax],al
  459fe4:	(bad)  
  459fe5:	fld    DWORD PTR [eax]
  459fe7:	add    BYTE PTR [edx-0x27],ah
  459fea:	add    BYTE PTR [eax],al
  459fec:	(bad)  
  459fed:	fld    DWORD PTR [eax]
  459fef:	add    BYTE PTR [edx-0x27],ah
	...
  45a006:	add    BYTE PTR [eax],al
  45a008:	(bad)  
  45a009:	fld    DWORD PTR [eax]
  45a00b:	add    BYTE PTR [edx-0x27],ah
  45a00e:	add    BYTE PTR [eax],al
  45a010:	(bad)  
  45a011:	fld    DWORD PTR [eax]
  45a013:	add    BYTE PTR [edx-0x27],ah
  45a016:	add    BYTE PTR [eax],al
  45a018:	(bad)  
  45a019:	fld    DWORD PTR [eax]
  45a01b:	add    BYTE PTR [edx-0x27],ah
  45a01e:	add    BYTE PTR [eax],al
  45a020:	(bad)  
  45a021:	fld    DWORD PTR [eax]
  45a023:	add    BYTE PTR [edx-0x27],ah
  45a026:	add    BYTE PTR [eax],al
  45a028:	(bad)  
  45a029:	fld    DWORD PTR [eax]
  45a02b:	add    BYTE PTR [edx-0x27],ah
  45a02e:	add    BYTE PTR [eax],al
  45a030:	(bad)  
  45a031:	fld    DWORD PTR [eax]
  45a033:	add    BYTE PTR [edx-0x27],ah
  45a036:	add    BYTE PTR [eax],al
  45a038:	(bad)  
  45a039:	fld    DWORD PTR [eax]
  45a03b:	add    BYTE PTR [edx-0x27],ah
  45a03e:	add    BYTE PTR [eax],al
  45a040:	(bad)  
  45a041:	fld    DWORD PTR [eax]
  45a043:	add    BYTE PTR [edx-0x27],ah
  45a046:	add    BYTE PTR [eax],al
  45a048:	(bad)  
  45a049:	fld    DWORD PTR [eax]
  45a04b:	add    BYTE PTR [edx-0x27],ah
  45a04e:	add    BYTE PTR [eax],al
  45a050:	(bad)  
  45a051:	fld    DWORD PTR [eax]
  45a053:	add    BYTE PTR [edx-0x27],ah
  45a056:	add    BYTE PTR [eax],al
  45a058:	(bad)  
  45a059:	fld    DWORD PTR [eax]
  45a05b:	add    BYTE PTR [edx-0x27],ah
  45a05e:	add    BYTE PTR [eax],al
  45a060:	(bad)  
  45a061:	fld    DWORD PTR [eax]
  45a063:	add    BYTE PTR [edx-0x27],ah
  45a066:	add    BYTE PTR [eax],al
  45a068:	(bad)  
  45a069:	fld    DWORD PTR [eax]
	...
  45a07f:	add    BYTE PTR [edx-0x27],ah
  45a082:	add    BYTE PTR [eax],al
  45a084:	(bad)  
  45a085:	fld    DWORD PTR [eax]
  45a087:	add    BYTE PTR [edx-0x27],ah
  45a08a:	add    BYTE PTR [eax],al
  45a08c:	(bad)  
  45a08d:	fld    DWORD PTR [eax]
  45a08f:	add    BYTE PTR [edx-0x27],ah
  45a092:	add    BYTE PTR [eax],al
  45a094:	(bad)  
  45a095:	fld    DWORD PTR [eax]
  45a097:	add    BYTE PTR [edx-0x27],ah
  45a09a:	add    BYTE PTR [eax],al
  45a09c:	(bad)  
  45a09d:	fld    DWORD PTR [eax]
  45a09f:	add    BYTE PTR [edx-0x27],ah
  45a0a2:	add    BYTE PTR [eax],al
  45a0a4:	(bad)  
  45a0a5:	fld    DWORD PTR [eax]
  45a0a7:	add    BYTE PTR [edx-0x27],ah
  45a0aa:	add    BYTE PTR [eax],al
  45a0ac:	(bad)  
  45a0ad:	fld    DWORD PTR [eax]
  45a0af:	add    BYTE PTR [edx-0x27],ah
  45a0b2:	add    BYTE PTR [eax],al
  45a0b4:	(bad)  
  45a0b5:	fld    DWORD PTR [eax]
  45a0b7:	add    BYTE PTR [edx-0x27],ah
  45a0ba:	add    BYTE PTR [eax],al
  45a0bc:	(bad)  
  45a0bd:	fld    DWORD PTR [eax]
  45a0bf:	add    BYTE PTR [edx-0x27],ah
  45a0c2:	add    BYTE PTR [eax],al
  45a0c4:	(bad)  
  45a0c5:	fld    DWORD PTR [eax]
  45a0c7:	add    BYTE PTR [edx-0x27],ah
  45a0ca:	add    BYTE PTR [eax],al
  45a0cc:	(bad)  
  45a0cd:	fld    DWORD PTR [eax]
  45a0cf:	add    BYTE PTR [edx-0x27],ah
  45a0d2:	add    BYTE PTR [eax],al
  45a0d4:	(bad)  
  45a0d5:	fld    DWORD PTR [eax]
  45a0d7:	add    BYTE PTR [edx-0x27],ah
  45a0da:	add    BYTE PTR [eax],al
  45a0dc:	(bad)  
  45a0dd:	fld    DWORD PTR [eax]
  45a0df:	add    BYTE PTR [edx-0x27],ah
	...
  45a0f6:	add    BYTE PTR [eax],al
  45a0f8:	(bad)  
  45a0f9:	fld    DWORD PTR [eax]
  45a0fb:	add    BYTE PTR [edx-0x27],ah
  45a0fe:	add    BYTE PTR [eax],al
  45a100:	(bad)  
  45a101:	fld    DWORD PTR [eax]
  45a103:	add    BYTE PTR [edx-0x27],ah
  45a106:	add    BYTE PTR [eax],al
  45a108:	(bad)  
  45a109:	fld    DWORD PTR [eax]
  45a10b:	add    BYTE PTR [edx-0x27],ah
  45a10e:	add    BYTE PTR [eax],al
  45a110:	(bad)  
  45a111:	fld    DWORD PTR [eax]
  45a113:	add    BYTE PTR [edx-0x27],ah
  45a116:	add    BYTE PTR [eax],al
  45a118:	(bad)  
  45a119:	fld    DWORD PTR [eax]
  45a11b:	add    BYTE PTR [edx-0x46],cl
  45a11e:	sti    
  45a11f:	call   0x2804b2cf
  45a124:	fcom   QWORD PTR ds:0x37fbd6eb
  45a12a:	scas   al,BYTE PTR es:[edi]
  45a12b:	lock lds esp,FWORD PTR [esi-0x49e79c81]
  45a132:	mov    edi,0xa08b0852
  45a137:	push   esp
  45a138:	or     BYTE PTR [ebx+0x6dd3c66f],bl
  45a13e:	push   esp
  45a13f:	(bad)  
  45a140:	xchg   ebp,eax
  45a141:	test   DWORD PTR [ebx-0x4816a354],esp
  45a147:	push   ds
  45a148:	fucomip st,st(1)
  45a14a:	mov    al,0x5d
  45a14c:	mov    edi,0x878b2b13
  45a151:	mov    bh,BYTE PTR [ebx+ebx*2+0x6df704ef]
  45a158:	outs   dx,BYTE PTR ds:[esi]
  45a159:	sbb    bl,dl
  45a15b:	(bad)  
  45a15c:	pop    esi
  45a15d:	jle    0x45a170
  45a15f:	daa    
  45a160:	jbe    0x45a199
  45a162:	fdiv   st,st(3)
  45a164:	pop    ebp
  45a165:	(bad)  
  45a166:	add    edx,DWORD PTR es:[eax+ecx*1]
  45a16a:	pop    edx
  45a16b:	je     0x45a167
  45a16d:	dec    ebp
  45a16e:	daa    
  45a16f:	add    BYTE PTR [edi],ch
  45a171:	sbb    eax,0xf89e0d4b
  45a176:	fs stc 
  45a178:	inc    edx
  45a179:	repz dec ebx
  45a17b:	int    0xa0
  45a17d:	ins    BYTE PTR es:[edi],dx
  45a17e:	daa    
  45a17f:	mov    bh,ah
  45a181:	dec    ecx
  45a182:	mov    cl,0xeb
  45a184:	lock fld DWORD PTR [ebp+0x34]
  45a188:	cld    
  45a189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45a18a:	jl     0x45a132
  45a18c:	mov    bh,0x64
  45a18e:	push   ebp
  45a18f:	loope  0x45a16f
  45a191:	ds dec ebp
  45a193:	cmp    eax,0x4561e4dc
  45a198:	mov    ds:0x1cdb9aad,eax
  45a19d:	adc    BYTE PTR [esp+edx*8],ch
  45a1a0:	adc    BYTE PTR [edx-0x449ad4b0],0x69
  45a1a7:	jl     0x45a13c
  45a1a9:	imul   ebx,DWORD PTR [edi],0xffffffbf
  45a1ac:	out    dx,eax
  45a1ad:	daa    
  45a1ae:	and    edx,ebp
  45a1b0:	adc    BYTE PTR [esi-0x48757347],al
  45a1b6:	xor    BYTE PTR [ecx],dl
  45a1b8:	shl    BYTE PTR [ebx-0x73e23a53],0x98
  45a1bf:	test   ecx,esp
  45a1c1:	stos   BYTE PTR es:[edi],al
  45a1c2:	dec    edi
  45a1c3:	in     al,dx
  45a1c4:	cdq    
  45a1c5:	adc    al,0xdf
  45a1c7:	test   BYTE PTR [edx],al
  45a1c9:	jmp    0xf6a8856e
  45a1ce:	out    0xc9,al
  45a1d0:	cmp    al,0xac
  45a1d2:	popa   
  45a1d3:	hlt    
  45a1d4:	push   esp
  45a1d5:	data16 fisttp DWORD PTR [ebp+0x72]
  45a1d9:	pushf  
  45a1da:	mov    DWORD PTR [edx],ebx
  45a1dc:	jmp    0x45a22b
  45a1de:	mov    ecx,0xf3bde40b
  45a1e4:	scas   eax,DWORD PTR es:[edi]
  45a1e5:	add    edx,DWORD PTR [ecx-0x6414d51]
  45a1eb:	das    
  45a1ec:	cmp    dl,al
  45a1ee:	imul   esp,esp,0xa53c99c9
  45a1f4:	mov    DWORD PTR [esi+0x282875a1],ebx
  45a1fa:	mov    ch,0x9d
  45a1fc:	adc    BYTE PTR [ebx+0x4c],cl
  45a1ff:	mov    esi,0x59230ba9
  45a204:	inc    eax
  45a205:	cdq    
  45a206:	in     eax,dx
  45a207:	loop   0x45a1af
  45a209:	dec    esp
  45a20a:	mov    ds:0x298ddbe6,eax
  45a20f:	sub    DWORD PTR [esi+0x46925a7c],edx
  45a215:	aaa    
  45a216:	mov    ah,0x60
  45a218:	sub    eax,0xad18ea1a
  45a21d:	ins    BYTE PTR es:[edi],dx
  45a21e:	jne    0x45a21c
  45a220:	xor    BYTE PTR [eax],0x7f
  45a223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  45a224:	sub    DWORD PTR [esi-0x6c],edx
  45a227:	add    DWORD PTR [edi+0x17],esi
  45a22a:	jbe    0x4504ecb1
  45a230:	sbb    DWORD PTR [ebx],esp
  45a232:	into   
  45a233:	data16 xchg BYTE PTR [edx-0x282d4881],bl
  45a23a:	and    BYTE PTR [ecx],ah
  45a23c:	loopne 0x45a266
  45a23e:	fiadd  DWORD PTR [ebx+ebp*1-0x6c116eff]
  45a245:	pop    ecx
  45a246:	mov    al,ds:0x674ef6c5
  45a24b:	dec    ebp
  45a24c:	dec    esi
  45a24d:	add    bh,BYTE PTR [edx+0x3e]
  45a250:	and    DWORD PTR [ebx+edx*2-0x125dd6ee],ebp
  45a257:	sub    eax,0xf758d8d9
  45a25c:	rcl    eax,0x90
  45a25f:	loopne 0x45a1e3
  45a261:	sub    esp,DWORD PTR [esi]
  45a263:	cmovl  edi,DWORD PTR [ebp-0x18901d21]
  45a26a:	repz adc al,0xaa
  45a26d:	out    dx,eax
  45a26e:	test   al,0x9e
  45a270:	sbb    al,0x87
  45a272:	pop    edx
  45a273:	xor    eax,0x9ac019a6
  45a278:	jmp    0xed13:0x909dce4c
  45a27f:	sti    
  45a280:	pop    edx
  45a281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  45a282:	stos   BYTE PTR es:[edi],al
  45a283:	pop    ebx
  45a284:	lds    ebp,FWORD PTR [edi-0x55606787]
  45a28a:	into   
  45a28b:	loop   0x45a255
  45a28d:	mov    eax,0xfe381a96
  45a292:	xchg   ecx,eax
  45a293:	mov    eax,0xf065d676
  45a298:	imul   ebp,DWORD PTR [edi+0x7dbab244],0xe5d350d
  45a2a2:	into   
  45a2a3:	shl    BYTE PTR [ebx],cl
  45a2a5:	xchg   DWORD PTR [ebp-0x5d],ecx
  45a2a8:	enter  0x4362,0x9e
  45a2ac:	(bad)
  45a2af:	push   ss
  45a2b0:	fisubr WORD PTR [ebx+ebx*4+0x2b92d2ca]
  45a2b7:	rcl    BYTE PTR [edi],0x89
  45a2ba:	in     al,0xa7
  45a2bc:	rol    DWORD PTR [eax+0x6ace4b6b],1
  45a2c2:	lds    ecx,FWORD PTR [eax-0x32af93b7]
  45a2c8:	sub    al,BYTE PTR [ebx+0x7c65da87]
  45a2ce:	inc    ebx
  45a2cf:	imul   edi,DWORD PTR [ebx-0x6b],0x5b2924c5
  45a2d6:	fcmovu st,st(4)
  45a2d8:	adc    DWORD PTR [ecx],eax
  45a2da:	dec    ecx
  45a2db:	jae    0x45a35b
  45a2dd:	fldenv [eax]
  45a2df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  45a2e0:	push   es
  45a2e1:	xchg   esp,eax
  45a2e2:	mov    bl,0x7f
  45a2e4:	jbe    0x45a2d4
  45a2e6:	test   al,0x48
  45a2e8:	push   edi
  45a2e9:	push   edx
  45a2ea:	xor    DWORD PTR [eax],0x73
  45a2ed:	mov    cl,al
  45a2ef:	in     al,dx
  45a2f0:	xchg   edx,eax
  45a2f1:	ins    DWORD PTR es:[edi],dx
  45a2f2:	sbb    dh,dh
  45a2f4:	into   
  45a2f5:	sub    dh,bl
  45a2f7:	jno    0x45a345
  45a2f9:	repnz push 0x86dfd71f
  45a2ff:	out    dx,al
  45a300:	jo     0x45a2d6
  45a302:	mov    al,ds:0xa521f15a
  45a307:	jg     0x45a325
  45a309:	test   BYTE PTR [edx],cl
  45a30b:	stos   BYTE PTR es:[edi],al
  45a30c:	dec    esp
  45a30d:	mov    ecx,0x24531d4b
  45a312:	retf   0x1304
  45a315:	jmp    0xfb86:0x665059e8
  45a31c:	int3   
  45a31d:	int3   
  45a31e:	int3   
  45a31f:	int3   
  45a320:	push   ebp
  45a321:	mov    ebp,esp
  45a323:	pop    ebp
  45a324:	ret    0x10
  45a327:	int3   
  45a328:	int3   
  45a329:	int3   
  45a32a:	int3   
  45a32b:	int3   
  45a32c:	int3   
  45a32d:	int3   
  45a32e:	int3   
  45a32f:	int3   
  45a330:	push   ebp
  45a331:	mov    ebp,esp
  45a333:	pop    ebp
  45a334:	ret    0x10
  45a337:	int3   
  45a338:	int3   
  45a339:	int3   
  45a33a:	int3   
  45a33b:	int3   
  45a33c:	int3   
  45a33d:	int3   
  45a33e:	int3   
  45a33f:	int3   
  45a340:	push   ebp
  45a341:	mov    ebp,esp
  45a343:	call   0x45a9a0
  45a348:	mov    eax,ds:0x45e458
  45a34d:	push   eax
  45a34e:	call   0x45b690
  45a353:	add    esp,0x4
  45a356:	mov    ds:0x45e45c,eax
  45a35b:	pop    ebp
  45a35c:	ret    
  45a35d:	int3   
  45a35e:	int3   
  45a35f:	int3   
  45a360:	push   ebp
  45a361:	mov    ebp,esp
  45a363:	push   ecx
  45a364:	mov    DWORD PTR [ebp-0x4],0x4
  45a36b:	mov    eax,DWORD PTR [ebp-0x4]
  45a36e:	add    eax,0x401320
  45a373:	mov    ds:0x45e460,eax
  45a378:	mov    esp,ebp
  45a37a:	pop    ebp
  45a37b:	ret    
  45a37c:	int3   
  45a37d:	int3   
  45a37e:	int3   
  45a37f:	int3   
  45a380:	push   ebp
  45a381:	mov    ebp,esp
  45a383:	mov    eax,DWORD PTR [ebp+0x8]
  45a386:	mov    ecx,DWORD PTR [ebp+0x8]
  45a389:	add    ecx,DWORD PTR [eax+0x4]
  45a38c:	mov    eax,ecx
  45a38e:	pop    ebp
  45a38f:	ret    
  45a390:	push   ebp
  45a391:	mov    ebp,esp
  45a393:	mov    eax,DWORD PTR [ebp+0x8]
  45a396:	mov    eax,DWORD PTR [eax-0x4]
  45a399:	pop    ebp
  45a39a:	ret    
  45a39b:	int3   
  45a39c:	int3   
  45a39d:	int3   
  45a39e:	int3   
  45a39f:	int3   
  45a3a0:	push   ebp
  45a3a1:	mov    ebp,esp
  45a3a3:	sub    esp,0x18
  45a3a6:	mov    eax,DWORD PTR [ebp+0x8]
  45a3a9:	mov    DWORD PTR [ebp-0x8],eax
  45a3ac:	mov    ecx,DWORD PTR [ebp+0xc]
  45a3af:	mov    DWORD PTR [ebp-0x4],ecx
  45a3b2:	mov    DWORD PTR [ebp-0x10],0x19c
  45a3b9:	mov    edx,DWORD PTR [ebp-0x8]
  45a3bc:	mov    DWORD PTR ds:0x45e464,edx
  45a3c2:	mov    eax,DWORD PTR [ebp-0x4]
  45a3c5:	mov    ds:0x45e468,eax
  45a3ca:	mov    ecx,DWORD PTR ds:0x45e464
  45a3d0:	mov    DWORD PTR [ebp-0x14],ecx
  45a3d3:	mov    edx,DWORD PTR ds:0x45e468
  45a3d9:	mov    DWORD PTR [ebp-0xc],edx
  45a3dc:	mov    eax,DWORD PTR [ebp-0xc]
  45a3df:	mov    ecx,DWORD PTR [ebp-0x14]
  45a3e2:	lea    edx,[ecx+eax*2]
  45a3e5:	mov    DWORD PTR [ebp-0x18],edx
  45a3e8:	mov    eax,DWORD PTR [ebp-0x18]
  45a3eb:	mov    DWORD PTR [ebp-0x14],eax
  45a3ee:	mov    ecx,DWORD PTR [ebp-0x14]
  45a3f1:	movzx  edx,WORD PTR [ecx]
  45a3f4:	mov    DWORD PTR [ebp-0xc],edx
  45a3f7:	mov    eax,DWORD PTR [ebp-0xc]
  45a3fa:	mov    esp,ebp
  45a3fc:	pop    ebp
  45a3fd:	ret    
  45a3fe:	int3   
  45a3ff:	int3   
  45a400:	push   ebp
  45a401:	mov    ebp,esp
  45a403:	sub    esp,0xc
  45a406:	mov    eax,DWORD PTR [ebp+0x8]
  45a409:	mov    DWORD PTR [ebp-0x8],eax
  45a40c:	mov    ecx,DWORD PTR [ebp+0xc]
  45a40f:	mov    DWORD PTR [ebp-0xc],ecx
  45a412:	mov    DWORD PTR [ebp-0x4],0x11afc
  45a419:	mov    edx,DWORD PTR [ebp-0x8]
  45a41c:	cmp    edx,DWORD PTR [ebp-0xc]
  45a41f:	jae    0x45a42f
  45a421:	mov    DWORD PTR [ebp-0x4],0x11afc
  45a428:	mov    eax,DWORD PTR [ebp-0x8]
  45a42b:	jmp    0x45a439
  45a42d:	jmp    0x45a439
  45a42f:	mov    DWORD PTR [ebp-0x4],0x11afc
  45a436:	mov    eax,DWORD PTR [ebp-0xc]
  45a439:	mov    esp,ebp
  45a43b:	pop    ebp
  45a43c:	ret    
  45a43d:	int3   
  45a43e:	int3   
  45a43f:	int3   
  45a440:	push   ebp
  45a441:	mov    ebp,esp
  45a443:	push   ecx
  45a444:	mov    DWORD PTR [ebp-0x4],0x3085
  45a44b:	mov    DWORD PTR [ebp-0x4],0x3085
  45a452:	mov    DWORD PTR [ebp-0x4],0x3085
  45a459:	mov    DWORD PTR [ebp-0x4],0x3085
  45a460:	mov    DWORD PTR [ebp-0x4],0x3085
  45a467:	mov    DWORD PTR [ebp-0x4],0x3085
  45a46e:	mov    DWORD PTR [ebp-0x4],0x3085
  45a475:	mov    DWORD PTR [ebp-0x4],0x3085
  45a47c:	mov    DWORD PTR [ebp-0x4],0x3085
  45a483:	mov    DWORD PTR [ebp-0x4],0x3085
  45a48a:	mov    DWORD PTR [ebp-0x4],0x3085
  45a491:	mov    DWORD PTR [ebp-0x4],0x3085
  45a498:	mov    DWORD PTR [ebp-0x4],0x3085
  45a49f:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4a6:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4ad:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4b4:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4bb:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4c2:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4c9:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4d0:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4d7:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4de:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4e5:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4ec:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4f3:	mov    DWORD PTR [ebp-0x4],0x3085
  45a4fa:	mov    DWORD PTR [ebp-0x4],0x3085
  45a501:	mov    DWORD PTR [ebp-0x4],0x3085
  45a508:	mov    DWORD PTR [ebp-0x4],0x3085
  45a50f:	mov    DWORD PTR [ebp-0x4],0x3085
  45a516:	mov    DWORD PTR [ebp-0x4],0x3085
  45a51d:	mov    DWORD PTR [ebp-0x4],0x3085
  45a524:	mov    DWORD PTR [ebp-0x4],0x3085
  45a52b:	mov    DWORD PTR [ebp-0x4],0x3085
  45a532:	mov    DWORD PTR [ebp-0x4],0x3085
  45a539:	mov    DWORD PTR [ebp-0x4],0x3085
  45a540:	mov    DWORD PTR [ebp-0x4],0x3085
  45a547:	mov    DWORD PTR [ebp-0x4],0x3085
  45a54e:	mov    DWORD PTR [ebp-0x4],0x3085
  45a555:	mov    DWORD PTR [ebp-0x4],0x3085
  45a55c:	mov    DWORD PTR [ebp-0x4],0x3085
  45a563:	cmp    DWORD PTR [ebp+0x8],0x1
  45a567:	jne    0x45a571
  45a569:	mov    eax,ds:0x45e46c
  45a56e:	mov    DWORD PTR [ebp+0x8],eax
  45a571:	mov    ecx,DWORD PTR [ebp+0x10]
  45a574:	push   ecx
  45a575:	mov    edx,DWORD PTR [ebp+0xc]
  45a578:	push   edx
  45a579:	mov    eax,DWORD PTR [ebp+0x8]
  45a57c:	push   eax
  45a57d:	call   0x45b710
  45a582:	add    esp,0xc
  45a585:	mov    ecx,DWORD PTR [ebp+0x8]
  45a588:	push   ecx
  45a589:	call   0x45a380
  45a58e:	add    esp,0x4
  45a591:	mov    DWORD PTR [ebp+0x8],eax
  45a594:	mov    eax,DWORD PTR [ebp+0x8]
  45a597:	mov    esp,ebp
  45a599:	pop    ebp
  45a59a:	ret    
  45a59b:	int3   
  45a59c:	int3   
  45a59d:	int3   
  45a59e:	int3   
  45a59f:	int3   
  45a5a0:	push   ebp
  45a5a1:	mov    ebp,esp
  45a5a3:	push   ecx
  45a5a4:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5ab:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5b2:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5b9:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5c0:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5c7:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5ce:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5d5:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5dc:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5e3:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5ea:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5f1:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5f8:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a5ff:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a606:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a60d:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a614:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a61b:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a622:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a629:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a630:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a637:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a63e:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a645:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a64c:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a653:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a65a:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a661:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a668:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a66f:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a676:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a67d:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a684:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a68b:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a692:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a699:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6a0:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6a7:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6ae:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6b5:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6bc:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6c3:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6ca:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6d1:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6d8:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6df:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6e6:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6ed:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6f4:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a6fb:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a702:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a709:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a710:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a717:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a71e:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a725:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a72c:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a733:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a73a:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a741:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a748:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a74f:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a756:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a75d:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a764:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a76b:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a772:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a779:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a780:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a787:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a78e:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a795:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a79c:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7a3:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7aa:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7b1:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7b8:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7bf:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7c6:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7cd:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7d4:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7db:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7e2:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7e9:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7f0:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7f7:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a7fe:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a805:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a80c:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a813:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a81a:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a821:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a828:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a82f:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a836:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a83d:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a844:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a84b:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a852:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a859:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a860:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a867:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a86e:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a875:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a87c:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a883:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a88a:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a891:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a898:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a89f:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8a6:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8ad:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8b4:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8bb:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8c2:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8c9:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8d0:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8d7:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8de:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8e5:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8ec:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8f3:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a8fa:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a901:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a908:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a90f:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a916:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a91d:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a924:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a92b:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a932:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a939:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a940:	mov    DWORD PTR [ebp-0x4],0x22a7
  45a947:	mov    eax,ds:0x45e470
  45a94c:	sub    eax,0x8
  45a94f:	mov    ds:0x45e470,eax
  45a954:	mov    ecx,DWORD PTR ds:0x45e470
  45a95a:	mov    DWORD PTR [ebp-0x4],ecx
  45a95d:	mov    edx,DWORD PTR [ebp-0x4]
  45a960:	shr    edx,1
  45a962:	mov    DWORD PTR [ebp-0x4],edx
  45a965:	mov    eax,DWORD PTR [ebp-0x4]
  45a968:	mov    ds:0x45e470,eax
  45a96d:	mov    esp,ebp
  45a96f:	pop    ebp
  45a970:	ret    
  45a971:	int3   
  45a972:	int3   
  45a973:	int3   
  45a974:	int3   
  45a975:	int3   
  45a976:	int3   
  45a977:	int3   
  45a978:	int3   
  45a979:	int3   
  45a97a:	int3   
  45a97b:	int3   
  45a97c:	int3   
  45a97d:	int3   
  45a97e:	int3   
  45a97f:	int3   
  45a980:	push   ebp
  45a981:	mov    ebp,esp
  45a983:	mov    edx,edx
  45a985:	mov    esp,DWORD PTR ds:0x45e474
  45a98b:	mov    edx,edx
  45a98d:	add    esp,0x4
  45a990:	mov    edx,edx
  45a992:	mov    ecx,DWORD PTR ds:0x45e478
  45a998:	mov    edx,edx
  45a99a:	jmp    ecx
  45a99c:	mov    edx,edx
  45a99e:	pop    ebp
  45a99f:	ret    
  45a9a0:	push   ebp
  45a9a1:	mov    ebp,esp
  45a9a3:	call   0x45a360
  45a9a8:	mov    eax,ds:0x45e460
  45a9ad:	push   eax
  45a9ae:	call   0x45a390
  45a9b3:	add    esp,0x4
  45a9b6:	mov    ds:0x45e458,eax
  45a9bb:	pop    ebp
  45a9bc:	ret    
  45a9bd:	int3   
  45a9be:	int3   
  45a9bf:	int3   
  45a9c0:	push   ebp
  45a9c1:	mov    ebp,esp
  45a9c3:	sub    esp,0x28
  45a9c6:	mov    DWORD PTR [ebp-0x28],0x4017ec
  45a9cd:	mov    DWORD PTR [ebp-0x24],0x1027
  45a9d4:	mov    DWORD PTR [ebp-0x18],0x4
  45a9db:	mov    eax,DWORD PTR [ebp-0x18]
  45a9de:	mov    ecx,DWORD PTR [ebp-0x28]
  45a9e1:	lea    edx,[ecx+eax*1+0x29]
  45a9e5:	mov    DWORD PTR [ebp-0x20],edx
  45a9e8:	mov    eax,DWORD PTR [ebp-0x20]
  45a9eb:	mov    DWORD PTR [ebp-0x1c],eax
  45a9ee:	mov    DWORD PTR [ebp-0x14],0x0
  45a9f5:	lea    ecx,[ebp-0x14]
  45a9f8:	push   ecx
  45a9f9:	push   0x0
  45a9fb:	call   DWORD PTR ds:0x45d448
  45aa01:	cmp    DWORD PTR [ebp-0x14],0x0
  45aa05:	jne    0x45aa0b
  45aa07:	xor    eax,eax
  45aa09:	jmp    0x45aa17
  45aa0b:	mov    edx,DWORD PTR [ebp-0x1c]
  45aa0e:	sub    edx,0x29
  45aa11:	mov    DWORD PTR ds:0x45e460,edx
  45aa17:	mov    esp,ebp
  45aa19:	pop    ebp
  45aa1a:	ret    
  45aa1b:	int3   
  45aa1c:	int3   
  45aa1d:	int3   
  45aa1e:	int3   
  45aa1f:	int3   
  45aa20:	push   ebp
  45aa21:	mov    ebp,esp
  45aa23:	sub    esp,0xc
  45aa26:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa2d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa34:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa3b:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa42:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa49:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa50:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa57:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa5e:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa65:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa6c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa73:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa7a:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa81:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa88:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa8f:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa96:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aa9d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aaa4:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aaab:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aab2:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aab9:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aac0:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aac7:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aace:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aad5:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aadc:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aae3:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aaea:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aaf1:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aaf8:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aaff:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab06:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab0d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab14:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab1b:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab22:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab29:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab30:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab37:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab3e:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab45:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab4c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab53:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab5a:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab61:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab68:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab6f:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab76:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab7d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab84:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab8b:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab92:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ab99:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aba0:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aba7:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abae:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abb5:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abbc:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abc3:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abca:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abd1:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abd8:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abdf:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abe6:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abed:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abf4:	mov    DWORD PTR [ebp-0xc],0x1024a
  45abfb:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac02:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac09:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac10:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac17:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac1e:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac25:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac2c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac33:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac3a:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac41:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac48:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac4f:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac56:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac5d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac64:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac6b:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac72:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac79:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac80:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac87:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac8e:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac95:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ac9c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aca3:	mov    DWORD PTR [ebp-0xc],0x1024a
  45acaa:	mov    DWORD PTR [ebp-0xc],0x1024a
  45acb1:	mov    DWORD PTR [ebp-0xc],0x1024a
  45acb8:	mov    DWORD PTR [ebp-0xc],0x1024a
  45acbf:	mov    DWORD PTR [ebp-0xc],0x1024a
  45acc6:	mov    DWORD PTR [ebp-0xc],0x1024a
  45accd:	mov    DWORD PTR [ebp-0xc],0x1024a
  45acd4:	mov    DWORD PTR [ebp-0xc],0x1024a
  45acdb:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ace2:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ace9:	mov    DWORD PTR [ebp-0xc],0x1024a
  45acf0:	mov    DWORD PTR [ebp-0xc],0x1024a
  45acf7:	mov    DWORD PTR [ebp-0xc],0x1024a
  45acfe:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad05:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad0c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad13:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad1a:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad21:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad28:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad2f:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad36:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad3d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad44:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad4b:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad52:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad59:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad60:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad67:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad6e:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad75:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad7c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad83:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad8a:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad91:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad98:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ad9f:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ada6:	mov    DWORD PTR [ebp-0xc],0x1024a
  45adad:	mov    DWORD PTR [ebp-0xc],0x1024a
  45adb4:	mov    DWORD PTR [ebp-0xc],0x1024a
  45adbb:	mov    DWORD PTR [ebp-0xc],0x1024a
  45adc2:	mov    DWORD PTR [ebp-0xc],0x1024a
  45adc9:	mov    DWORD PTR [ebp-0xc],0x1024a
  45add0:	mov    DWORD PTR [ebp-0xc],0x1024a
  45add7:	mov    DWORD PTR [ebp-0xc],0x1024a
  45adde:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ade5:	mov    eax,DWORD PTR [ebp+0x8]
  45ade8:	cmp    DWORD PTR [eax+0x4],0x0
  45adec:	je     0x45b1e9
  45adf2:	mov    DWORD PTR [ebp-0xc],0x1024a
  45adf9:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae00:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae07:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae0e:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae15:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae1c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae23:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae2a:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae31:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae38:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae3f:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae46:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae4d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae54:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae5b:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae62:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae69:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae70:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae77:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae7e:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae85:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae8c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae93:	mov    DWORD PTR [ebp-0xc],0x1024a
  45ae9a:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aea1:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aea8:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aeaf:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aeb6:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aebd:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aec4:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aecb:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aed2:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aed9:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aee0:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aee7:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aeee:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aef5:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aefc:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af03:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af0a:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af11:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af18:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af1f:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af26:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af2d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af34:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af3b:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af42:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af49:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af50:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af57:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af5e:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af65:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af6c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af73:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af7a:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af81:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af88:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af8f:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af96:	mov    DWORD PTR [ebp-0xc],0x1024a
  45af9d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afa4:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afab:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afb2:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afb9:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afc0:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afc7:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afce:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afd5:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afdc:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afe3:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afea:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aff1:	mov    DWORD PTR [ebp-0xc],0x1024a
  45aff8:	mov    DWORD PTR [ebp-0xc],0x1024a
  45afff:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b006:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b00d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b014:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b01b:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b022:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b029:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b030:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b037:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b03e:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b045:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b04c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b053:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b05a:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b061:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b068:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b06f:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b076:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b07d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b084:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b08b:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b092:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b099:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0a0:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0a7:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0ae:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0b5:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0bc:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0c3:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0ca:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0d1:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0d8:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0df:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0e6:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0ed:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0f4:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b0fb:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b102:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b109:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b110:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b117:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b11e:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b125:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b12c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b133:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b13a:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b141:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b148:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b14f:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b156:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b15d:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b164:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b16b:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b172:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b179:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b180:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b187:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b18e:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b195:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b19c:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b1a3:	mov    DWORD PTR [ebp-0xc],0x1024a
  45b1aa:	mov    ecx,DWORD PTR [ebp+0x8]
  45b1ad:	add    ecx,0x8
  45b1b0:	mov    DWORD PTR ds:0x45e47c,ecx
  45b1b6:	mov    edx,DWORD PTR [ebp+0x8]
  45b1b9:	mov    eax,DWORD PTR [edx+0x4]
  45b1bc:	mov    ds:0x45e470,eax
  45b1c1:	call   0x45a5a0
  45b1c6:	mov    ecx,DWORD PTR [ebp+0x8]
  45b1c9:	mov    DWORD PTR ds:0x45e46c,ecx
  45b1cf:	mov    edx,DWORD PTR [ebp+0x10]
  45b1d2:	push   edx
  45b1d3:	mov    eax,DWORD PTR [ebp+0xc]
  45b1d6:	push   eax
  45b1d7:	push   0x1
  45b1d9:	call   0x45a440
  45b1de:	add    esp,0xc
  45b1e1:	mov    DWORD PTR [ebp+0x8],eax
  45b1e4:	jmp    0x45ade5
  45b1e9:	mov    esp,ebp
  45b1eb:	pop    ebp
  45b1ec:	ret    
  45b1ed:	int3   
  45b1ee:	int3   
  45b1ef:	int3   
  45b1f0:	push   ebp
  45b1f1:	mov    ebp,esp
  45b1f3:	sub    esp,0x7c
  45b1f6:	push   ebx
  45b1f7:	push   esi
  45b1f8:	push   edi
  45b1f9:	mov    DWORD PTR [ebp-0x28],0x45a980
  45b200:	mov    DWORD PTR ds:0x45e474,ebp
  45b206:	mov    DWORD PTR [ebp-0x2c],0x0
  45b20d:	mov    DWORD PTR [ebp-0x3c],0x80000002
  45b214:	mov    DWORD PTR [ebp-0x6c],0x45d000
  45b21b:	mov    eax,ds:0x45d418
  45b220:	mov    DWORD PTR [ebp-0x64],eax
  45b223:	mov    DWORD PTR [ebp-0xc],0x1471
  45b22a:	mov    DWORD PTR [ebp-0xc],0x1471
  45b231:	mov    ecx,DWORD PTR ds:0x45d6f0
  45b237:	mov    DWORD PTR [ebp-0x60],ecx
  45b23a:	lea    edx,[ebp-0x68]
  45b23d:	push   edx
  45b23e:	push   0x20019
  45b243:	push   0x0
  45b245:	push   0x45d030
  45b24a:	push   0x80000002
  45b24f:	call   DWORD PTR [ebp-0x60]
  45b252:	test   eax,eax
  45b254:	jne    0x45b265
  45b256:	push   0x0
  45b258:	call   DWORD PTR ds:0x45d520
  45b25e:	xor    eax,eax
  45b260:	jmp    0x45b4a0
  45b265:	lea    eax,[ebp-0x68]
  45b268:	push   eax
  45b269:	push   0x20019
  45b26e:	push   0x0
  45b270:	mov    ecx,DWORD PTR [ebp-0x6c]
  45b273:	push   ecx
  45b274:	push   0x80000002
  45b279:	call   DWORD PTR [ebp-0x60]
  45b27c:	test   eax,eax
  45b27e:	je     0x45b28f
  45b280:	push   0x0
  45b282:	call   DWORD PTR ds:0x45d520
  45b288:	xor    eax,eax
  45b28a:	jmp    0x45b4a0
  45b28f:	call   0x45a9c0
  45b294:	mov    edx,DWORD PTR ds:0x45e460
  45b29a:	push   edx
  45b29b:	call   0x45a390
  45b2a0:	add    esp,0x4
  45b2a3:	mov    ds:0x45e458,eax
  45b2a8:	mov    eax,ds:0x45e458
  45b2ad:	push   eax
  45b2ae:	call   0x45b690
  45b2b3:	add    esp,0x4
  45b2b6:	mov    ds:0x45e480,eax
  45b2bb:	mov    ecx,DWORD PTR ds:0x45e458
  45b2c1:	mov    DWORD PTR [ebp-0x34],ecx
  45b2c4:	mov    DWORD PTR [ebp-0x24],0x64
  45b2cb:	mov    DWORD PTR [ebp-0x14],0x14
  45b2d2:	mov    DWORD PTR [ebp-0x2c],0x0
  45b2d9:	mov    DWORD PTR [ebp-0x18],0x0
  45b2e0:	mov    DWORD PTR [ebp-0x20],0x1
  45b2e7:	mov    DWORD PTR [ebp-0xc],0x0
  45b2ee:	mov    edx,DWORD PTR [ebp-0x2c]
  45b2f1:	cmp    edx,DWORD PTR ds:0x45e458
  45b2f7:	jae    0x45b34b
  45b2f9:	mov    eax,DWORD PTR [ebp-0x34]
  45b2fc:	push   eax
  45b2fd:	mov    ecx,DWORD PTR [ebp-0x24]
  45b300:	push   ecx
  45b301:	call   0x45a400
  45b306:	add    esp,0x8
  45b309:	mov    DWORD PTR [ebp-0x38],eax
  45b30c:	mov    edx,DWORD PTR [ebp-0x38]
  45b30f:	push   edx
  45b310:	mov    eax,ds:0x45e460
  45b315:	add    eax,DWORD PTR [ebp-0x18]
  45b318:	push   eax
  45b319:	mov    ecx,DWORD PTR ds:0x45e480
  45b31f:	add    ecx,DWORD PTR [ebp-0x2c]
  45b322:	push   ecx
  45b323:	call   0x45b5e0
  45b328:	add    esp,0xc
  45b32b:	mov    edx,DWORD PTR [ebp-0x14]
  45b32e:	add    edx,DWORD PTR [ebp-0x24]
  45b331:	add    edx,DWORD PTR [ebp-0x18]
  45b334:	mov    DWORD PTR [ebp-0x18],edx
  45b337:	mov    eax,DWORD PTR [ebp-0x2c]
  45b33a:	add    eax,DWORD PTR [ebp-0x24]
  45b33d:	mov    DWORD PTR [ebp-0x2c],eax
  45b340:	mov    ecx,DWORD PTR [ebp-0x34]
  45b343:	sub    ecx,DWORD PTR [ebp-0x38]
  45b346:	mov    DWORD PTR [ebp-0x34],ecx
  45b349:	jmp    0x45b2ee
  45b34b:	mov    edx,DWORD PTR ds:0x45e458
  45b351:	push   edx
  45b352:	mov    eax,ds:0x45e480
  45b357:	push   eax
  45b358:	call   0x45b4b0
  45b35d:	add    esp,0x8
  45b360:	pusha  
  45b361:	mov    DWORD PTR [ebp-0x18],0x0
  45b368:	mov    DWORD PTR [ebp-0x70],0x0
  45b36f:	mov    ecx,DWORD PTR ds:0x45e458
  45b375:	push   ecx
  45b376:	push   0x0
  45b378:	mov    edx,DWORD PTR ds:0x45e45c
  45b37e:	push   edx
  45b37f:	call   0x45a340
  45b384:	add    esp,0xc
  45b387:	mov    eax,ds:0x45e458
  45b38c:	mov    DWORD PTR [ebp-0x78],eax
  45b38f:	mov    ecx,DWORD PTR [ebp-0x70]
  45b392:	cmp    ecx,DWORD PTR ds:0x45e458
  45b398:	jae    0x45b3ec
  45b39a:	mov    edx,DWORD PTR [ebp-0x78]
  45b39d:	push   edx
  45b39e:	mov    eax,DWORD PTR [ebp-0x24]
  45b3a1:	push   eax
  45b3a2:	call   0x45a400
  45b3a7:	add    esp,0x8
  45b3aa:	mov    DWORD PTR [ebp-0x7c],eax
  45b3ad:	mov    ecx,DWORD PTR [ebp-0x7c]
  45b3b0:	push   ecx
  45b3b1:	mov    edx,DWORD PTR ds:0x45e460
  45b3b7:	add    edx,DWORD PTR [ebp-0x18]
  45b3ba:	push   edx
  45b3bb:	mov    eax,ds:0x45e45c
  45b3c0:	add    eax,DWORD PTR [ebp-0x70]
  45b3c3:	push   eax
  45b3c4:	call   0x45b5e0
  45b3c9:	add    esp,0xc
  45b3cc:	mov    ecx,DWORD PTR [ebp-0x14]
  45b3cf:	add    ecx,DWORD PTR [ebp-0x24]
  45b3d2:	add    ecx,DWORD PTR [ebp-0x18]
  45b3d5:	mov    DWORD PTR [ebp-0x18],ecx
  45b3d8:	mov    edx,DWORD PTR [ebp-0x70]
  45b3db:	add    edx,DWORD PTR [ebp-0x24]
  45b3de:	mov    DWORD PTR [ebp-0x70],edx
  45b3e1:	mov    eax,DWORD PTR [ebp-0x78]
  45b3e4:	sub    eax,DWORD PTR [ebp-0x7c]
  45b3e7:	mov    DWORD PTR [ebp-0x78],eax
  45b3ea:	jmp    0x45b38f
  45b3ec:	mov    ecx,DWORD PTR ds:0x45e458
  45b3f2:	push   ecx
  45b3f3:	mov    edx,DWORD PTR ds:0x45e45c
  45b3f9:	push   edx
  45b3fa:	call   0x45b4b0
  45b3ff:	add    esp,0x8
  45b402:	mov    DWORD PTR [ebp-0x28],0x45a980
  45b409:	mov    eax,ds:0x45e480
  45b40e:	mov    ecx,DWORD PTR ds:0x45e45c
  45b414:	mov    DWORD PTR [eax],ecx
  45b416:	push   0x4c000
  45b41b:	call   0x45b690
  45b420:	add    esp,0x4
  45b423:	mov    ds:0x45e484,eax
  45b428:	mov    edx,DWORD PTR ds:0x45e484
  45b42e:	add    edx,0x300
  45b434:	mov    DWORD PTR ds:0x45e488,edx
  45b43a:	push   0x49d00
  45b43f:	mov    eax,ds:0x45e480
  45b444:	push   eax
  45b445:	mov    ecx,DWORD PTR ds:0x45e488
  45b44b:	push   ecx
  45b44c:	call   0x45b5e0
  45b451:	add    esp,0xc
  45b454:	mov    edx,DWORD PTR ds:0x45e484
  45b45a:	add    edx,0x49c70
  45b460:	mov    DWORD PTR ds:0x45e478,edx
  45b466:	mov    ecx,ecx
  45b468:	mov    ecx,ecx
  45b46a:	mov    ecx,ecx
  45b46c:	popa   
  45b46d:	mov    ecx,ecx
  45b46f:	mov    ecx,ecx
  45b471:	mov    ecx,ecx
  45b473:	mov    ecx,ecx
  45b475:	push   0xde9b
  45b47a:	mov    eax,DWORD PTR [ebp-0x28]
  45b47d:	mov    ecx,ecx
  45b47f:	mov    ecx,ecx
  45b481:	mov    ecx,esp
  45b483:	push   edx
  45b484:	mov    edx,ecx
  45b486:	sub    edx,0x26
  45b489:	mov    ecx,edx
  45b48b:	pop    edx
  45b48c:	add    ecx,0x22
  45b48f:	mov    ecx,ecx
  45b491:	mov    DWORD PTR [ecx+0x4],0x0
  45b498:	mov    ecx,ecx
  45b49a:	add    DWORD PTR [ecx+0x4],eax
  45b49d:	ret    
  45b49e:	xor    eax,eax
  45b4a0:	pop    edi
  45b4a1:	pop    esi
  45b4a2:	pop    ebx
  45b4a3:	mov    esp,ebp
  45b4a5:	pop    ebp
  45b4a6:	ret    
  45b4a7:	int3   
  45b4a8:	int3   
  45b4a9:	int3   
  45b4aa:	int3   
  45b4ab:	int3   
  45b4ac:	int3   
  45b4ad:	int3   
  45b4ae:	int3   
  45b4af:	int3   
  45b4b0:	push   ebp
  45b4b1:	mov    ebp,esp
  45b4b3:	sub    esp,0x10
  45b4b6:	mov    DWORD PTR [ebp-0x4],0x0
  45b4bd:	jmp    0x45b4c8
  45b4bf:	mov    eax,DWORD PTR [ebp-0x4]
  45b4c2:	add    eax,0x4
  45b4c5:	mov    DWORD PTR [ebp-0x4],eax
  45b4c8:	mov    ecx,DWORD PTR [ebp-0x4]
  45b4cb:	cmp    ecx,DWORD PTR [ebp+0xc]
  45b4ce:	jae    0x45b56b
  45b4d4:	mov    DWORD PTR [ebp-0x8],0xc842
  45b4db:	mov    DWORD PTR [ebp-0x8],0xc842
  45b4e2:	mov    DWORD PTR [ebp-0x8],0xc842
  45b4e9:	mov    edx,DWORD PTR [ebp-0x4]
  45b4ec:	add    edx,0xd962
  45b4f2:	mov    DWORD PTR ds:0x45e48c,edx
  45b4f8:	mov    DWORD PTR [ebp-0x8],0xc842
  45b4ff:	mov    eax,DWORD PTR [ebp+0x8]
  45b502:	add    eax,DWORD PTR [ebp-0x4]
  45b505:	mov    DWORD PTR [ebp-0x10],eax
  45b508:	mov    DWORD PTR [ebp-0x8],0xc842
  45b50f:	mov    DWORD PTR [ebp-0x8],0xc842
  45b516:	mov    DWORD PTR [ebp-0x8],0xc842
  45b51d:	mov    ecx,DWORD PTR [ebp-0x10]
  45b520:	mov    DWORD PTR [ebp-0xc],ecx
  45b523:	mov    edx,DWORD PTR ds:0x45e48c
  45b529:	mov    DWORD PTR [ebp-0x8],edx
  45b52c:	mov    DWORD PTR [ebp-0x8],0xc842
  45b533:	mov    eax,DWORD PTR [ebp-0x10]
  45b536:	mov    ecx,DWORD PTR [eax]
  45b538:	add    ecx,DWORD PTR [ebp-0x4]
  45b53b:	mov    edx,DWORD PTR [ebp-0x10]
  45b53e:	mov    DWORD PTR [edx],ecx
  45b540:	mov    eax,DWORD PTR [ebp-0xc]
  45b543:	mov    ecx,DWORD PTR [eax]
  45b545:	mov    DWORD PTR [ebp-0x8],ecx
  45b548:	mov    edx,DWORD PTR ds:0x45e48c
  45b54e:	push   edx
  45b54f:	mov    eax,DWORD PTR [ebp-0x8]
  45b552:	push   eax
  45b553:	call   0x45b570
  45b558:	add    esp,0x8
  45b55b:	mov    DWORD PTR [ebp-0x8],eax
  45b55e:	mov    ecx,DWORD PTR [ebp-0xc]
  45b561:	mov    edx,DWORD PTR [ebp-0x8]
  45b564:	mov    DWORD PTR [ecx],edx
  45b566:	jmp    0x45b4bf
  45b56b:	mov    esp,ebp
  45b56d:	pop    ebp
  45b56e:	ret    
  45b56f:	int3   
  45b570:	push   ebp
  45b571:	mov    ebp,esp
  45b573:	sub    esp,0x14
  45b576:	mov    DWORD PTR [ebp-0x8],0xdd7
  45b57d:	mov    DWORD PTR [ebp-0x8],0xdd7
  45b584:	mov    DWORD PTR [ebp-0x8],0xdd7
  45b58b:	mov    eax,DWORD PTR [ebp+0x8]
  45b58e:	xor    eax,DWORD PTR [ebp+0xc]
  45b591:	mov    DWORD PTR [ebp-0x10],eax
  45b594:	mov    DWORD PTR [ebp-0x8],0xdd7
  45b59b:	mov    DWORD PTR [ebp-0x8],0xdd7
  45b5a2:	mov    ecx,DWORD PTR [ebp+0xc]
  45b5a5:	mov    DWORD PTR [ebp-0x4],ecx
  45b5a8:	mov    DWORD PTR [ebp-0x8],0xdd7
  45b5af:	mov    DWORD PTR [ebp-0x8],0xdd7
  45b5b6:	mov    edx,DWORD PTR [ebp+0x8]
  45b5b9:	mov    DWORD PTR [ebp-0xc],edx
  45b5bc:	mov    DWORD PTR [ebp-0x8],0xdd7
  45b5c3:	mov    DWORD PTR [ebp-0x8],0xdd7
  45b5ca:	mov    eax,DWORD PTR [ebp-0x10]
  45b5cd:	mov    DWORD PTR [ebp-0x14],eax
  45b5d0:	mov    eax,DWORD PTR [ebp-0x14]
  45b5d3:	mov    esp,ebp
  45b5d5:	pop    ebp
  45b5d6:	ret    
  45b5d7:	int3   
  45b5d8:	int3   
  45b5d9:	int3   
  45b5da:	int3   
  45b5db:	int3   
  45b5dc:	int3   
  45b5dd:	int3   
  45b5de:	int3   
  45b5df:	int3   
  45b5e0:	push   ebp
  45b5e1:	mov    ebp,esp
  45b5e3:	sub    esp,0x8
  45b5e6:	mov    DWORD PTR [ebp-0x4],0x0
  45b5ed:	jmp    0x45b5f8
  45b5ef:	mov    eax,DWORD PTR [ebp-0x4]
  45b5f2:	add    eax,0x1
  45b5f5:	mov    DWORD PTR [ebp-0x4],eax
  45b5f8:	mov    ecx,DWORD PTR [ebp-0x4]
  45b5fb:	cmp    ecx,DWORD PTR [ebp+0x10]
  45b5fe:	jge    0x45b65f
  45b600:	mov    DWORD PTR [ebp-0x8],0x889bb
  45b607:	mov    DWORD PTR [ebp-0x8],0x889bb
  45b60e:	mov    DWORD PTR [ebp-0x8],0x889bb
  45b615:	mov    DWORD PTR [ebp-0x8],0x889bb
  45b61c:	mov    DWORD PTR [ebp-0x8],0x889bb
  45b623:	mov    DWORD PTR [ebp-0x8],0x889bb
  45b62a:	mov    DWORD PTR [ebp-0x8],0x889bb
  45b631:	mov    DWORD PTR [ebp-0x8],0x889bb
  45b638:	mov    DWORD PTR [ebp-0x8],0x889bb
  45b63f:	mov    DWORD PTR [ebp-0x8],0x889bb
  45b646:	mov    DWORD PTR [ebp-0x8],0x889bb
  45b64d:	mov    edx,DWORD PTR [ebp+0x8]
  45b650:	add    edx,DWORD PTR [ebp-0x4]
  45b653:	mov    eax,DWORD PTR [ebp+0xc]
  45b656:	add    eax,DWORD PTR [ebp-0x4]
  45b659:	mov    cl,BYTE PTR [eax]
  45b65b:	mov    BYTE PTR [edx],cl
  45b65d:	jmp    0x45b5ef
  45b65f:	mov    edx,DWORD PTR [ebp+0x8]
  45b662:	cmp    edx,DWORD PTR ds:0x45e488
  45b668:	jne    0x45b68b
  45b66a:	mov    eax,ds:0x45e484
  45b66f:	sub    eax,0x400000
  45b674:	push   eax
  45b675:	mov    ecx,DWORD PTR ds:0x45e484
  45b67b:	push   ecx
  45b67c:	mov    edx,DWORD PTR ds:0x45e45c
  45b682:	push   edx
  45b683:	call   0x45aa20
  45b688:	add    esp,0xc
  45b68b:	mov    esp,ebp
  45b68d:	pop    ebp
  45b68e:	ret    
  45b68f:	int3   
  45b690:	push   ebp
  45b691:	mov    ebp,esp
  45b693:	sub    esp,0x238
  45b699:	mov    DWORD PTR [ebp-0x1c],0x307c
  45b6a0:	mov    DWORD PTR [ebp-0x238],0x3000
  45b6aa:	mov    DWORD PTR [ebp-0x18],0x40
  45b6b1:	mov    DWORD PTR [ebp-0x22c],0x0
  45b6bb:	mov    DWORD PTR [ebp-0x230],0x0
  45b6c5:	mov    DWORD PTR [ebp-0x14],0x0
  45b6cc:	lea    eax,[ebp-0x14]
  45b6cf:	push   eax
  45b6d0:	push   0x0
  45b6d2:	call   DWORD PTR ds:0x45d448
  45b6d8:	cmp    DWORD PTR [ebp-0x14],0x0
  45b6dc:	jne    0x45b6e2
  45b6de:	xor    eax,eax
  45b6e0:	jmp    0x45b6fe
  45b6e2:	mov    ecx,DWORD PTR [ebp-0x18]
  45b6e5:	push   ecx
  45b6e6:	mov    edx,DWORD PTR [ebp-0x238]
  45b6ec:	push   edx
  45b6ed:	mov    eax,DWORD PTR [ebp+0x8]
  45b6f0:	push   eax
  45b6f1:	mov    ecx,DWORD PTR [ebp-0x22c]
  45b6f7:	push   ecx
  45b6f8:	call   DWORD PTR ds:0x45d4cc
  45b6fe:	mov    esp,ebp
  45b700:	pop    ebp
  45b701:	ret    
  45b702:	int3   
  45b703:	int3   
  45b704:	int3   
  45b705:	int3   
  45b706:	int3   
  45b707:	int3   
  45b708:	int3   
  45b709:	int3   
  45b70a:	int3   
  45b70b:	int3   
  45b70c:	int3   
  45b70d:	int3   
  45b70e:	int3   
  45b70f:	int3   
  45b710:	push   ebp
  45b711:	mov    ebp,esp
  45b713:	sub    esp,0xc
  45b716:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b71d:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b724:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b72b:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b732:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b739:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b740:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b747:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b74e:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b755:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b75c:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b763:	mov    DWORD PTR [ebp-0x4],0x0
  45b76a:	jmp    0x45b775
  45b76c:	mov    eax,DWORD PTR [ebp-0x4]
  45b76f:	add    eax,0x1
  45b772:	mov    DWORD PTR [ebp-0x4],eax
  45b775:	mov    ecx,DWORD PTR [ebp-0x4]
  45b778:	cmp    ecx,DWORD PTR ds:0x45e470
  45b77e:	jae    0x45b86c
  45b784:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b78b:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b792:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b799:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b7a0:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b7a7:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b7ae:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b7b5:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b7bc:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b7c3:	mov    edx,DWORD PTR [ebp-0x4]
  45b7c6:	push   edx
  45b7c7:	mov    eax,ds:0x45e47c
  45b7cc:	push   eax
  45b7cd:	call   0x45a3a0
  45b7d2:	add    esp,0x8
  45b7d5:	sar    eax,0xc
  45b7d8:	cmp    eax,0x3
  45b7db:	jne    0x45b867
  45b7e1:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b7e8:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b7ef:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b7f6:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b7fd:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b804:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b80b:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b812:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b819:	mov    DWORD PTR [ebp-0xc],0x889bb
  45b820:	mov    ecx,DWORD PTR [ebp-0x4]
  45b823:	push   ecx
  45b824:	mov    edx,DWORD PTR ds:0x45e47c
  45b82a:	push   edx
  45b82b:	call   0x45a3a0
  45b830:	add    esp,0x8
  45b833:	and    eax,0xfff
  45b838:	add    eax,0xa124
  45b83d:	mov    DWORD PTR [ebp-0x8],eax
  45b840:	mov    eax,DWORD PTR [ebp+0x8]
  45b843:	mov    ecx,DWORD PTR [ebp+0xc]
  45b846:	add    ecx,DWORD PTR [eax]
  45b848:	mov    edx,DWORD PTR [ebp-0x8]
  45b84b:	mov    eax,DWORD PTR [ecx+edx*1-0xa124]
  45b852:	add    eax,DWORD PTR [ebp+0x10]
  45b855:	mov    ecx,DWORD PTR [ebp+0x8]
  45b858:	mov    edx,DWORD PTR [ebp+0xc]
  45b85b:	add    edx,DWORD PTR [ecx]
  45b85d:	mov    ecx,DWORD PTR [ebp-0x8]
  45b860:	mov    DWORD PTR [edx+ecx*1-0xa124],eax
  45b867:	jmp    0x45b76c
  45b86c:	mov    esp,ebp
  45b86e:	pop    ebp
  45b86f:	ret    
  45b870:	jmp    DWORD PTR ds:0x45d3e4
  45b876:	jmp    DWORD PTR ds:0x45d3e8
  45b87c:	jmp    DWORD PTR ds:0x45d3ec
  45b882:	jmp    DWORD PTR ds:0x45d3f0
  45b888:	jmp    DWORD PTR ds:0x45d3f4
  45b88e:	jmp    DWORD PTR ds:0x45d3f8
  45b894:	jmp    DWORD PTR ds:0x45d3fc
  45b89a:	jmp    DWORD PTR ds:0x45d400
  45b8a0:	jmp    DWORD PTR ds:0x45d404
  45b8a6:	jmp    DWORD PTR ds:0x45d408
  45b8ac:	jmp    DWORD PTR ds:0x45d40c
  45b8b2:	jmp    DWORD PTR ds:0x45d410
  45b8b8:	jmp    DWORD PTR ds:0x45d414
  45b8be:	jmp    DWORD PTR ds:0x45d418
  45b8c4:	jmp    DWORD PTR ds:0x45d41c
  45b8ca:	jmp    DWORD PTR ds:0x45d420
  45b8d0:	jmp    DWORD PTR ds:0x45d424
  45b8d6:	jmp    DWORD PTR ds:0x45d428
  45b8dc:	jmp    DWORD PTR ds:0x45d42c
  45b8e2:	jmp    DWORD PTR ds:0x45d430
  45b8e8:	jmp    DWORD PTR ds:0x45d434
  45b8ee:	jmp    DWORD PTR ds:0x45d438
  45b8f4:	jmp    DWORD PTR ds:0x45d43c
  45b8fa:	jmp    DWORD PTR ds:0x45d440
  45b900:	jmp    DWORD PTR ds:0x45d444
  45b906:	jmp    DWORD PTR ds:0x45d448
  45b90c:	jmp    DWORD PTR ds:0x45d44c
  45b912:	jmp    DWORD PTR ds:0x45d450
  45b918:	jmp    DWORD PTR ds:0x45d454
  45b91e:	jmp    DWORD PTR ds:0x45d458
  45b924:	jmp    DWORD PTR ds:0x45d45c
  45b92a:	jmp    DWORD PTR ds:0x45d460
  45b930:	jmp    DWORD PTR ds:0x45d464
  45b936:	jmp    DWORD PTR ds:0x45d468
  45b93c:	jmp    DWORD PTR ds:0x45d46c
  45b942:	jmp    DWORD PTR ds:0x45d470
  45b948:	jmp    DWORD PTR ds:0x45d474
  45b94e:	jmp    DWORD PTR ds:0x45d478
  45b954:	jmp    DWORD PTR ds:0x45d47c
  45b95a:	jmp    DWORD PTR ds:0x45d480
  45b960:	jmp    DWORD PTR ds:0x45d484
  45b966:	jmp    DWORD PTR ds:0x45d488
  45b96c:	jmp    DWORD PTR ds:0x45d48c
  45b972:	jmp    DWORD PTR ds:0x45d490
  45b978:	jmp    DWORD PTR ds:0x45d494
  45b97e:	jmp    DWORD PTR ds:0x45d498
  45b984:	jmp    DWORD PTR ds:0x45d49c
  45b98a:	jmp    DWORD PTR ds:0x45d4a0
  45b990:	jmp    DWORD PTR ds:0x45d4a4
  45b996:	jmp    DWORD PTR ds:0x45d4a8
  45b99c:	jmp    DWORD PTR ds:0x45d4ac
  45b9a2:	jmp    DWORD PTR ds:0x45d4b0
  45b9a8:	jmp    DWORD PTR ds:0x45d4b4
  45b9ae:	jmp    DWORD PTR ds:0x45d4b8
  45b9b4:	jmp    DWORD PTR ds:0x45d4bc
  45b9ba:	jmp    DWORD PTR ds:0x45d4c0
  45b9c0:	jmp    DWORD PTR ds:0x45d4c4
  45b9c6:	jmp    DWORD PTR ds:0x45d4c8
  45b9cc:	jmp    DWORD PTR ds:0x45d4cc
  45b9d2:	jmp    DWORD PTR ds:0x45d4d0
  45b9d8:	jmp    DWORD PTR ds:0x45d4d4
  45b9de:	jmp    DWORD PTR ds:0x45d4d8
  45b9e4:	jmp    DWORD PTR ds:0x45d4dc
  45b9ea:	jmp    DWORD PTR ds:0x45d4e0
  45b9f0:	jmp    DWORD PTR ds:0x45d4e4
  45b9f6:	jmp    DWORD PTR ds:0x45d4e8
  45b9fc:	jmp    DWORD PTR ds:0x45d4ec
  45ba02:	jmp    DWORD PTR ds:0x45d4f0
  45ba08:	jmp    DWORD PTR ds:0x45d4f4
  45ba0e:	jmp    DWORD PTR ds:0x45d4f8
  45ba14:	jmp    DWORD PTR ds:0x45d4fc
  45ba1a:	jmp    DWORD PTR ds:0x45d500
  45ba20:	jmp    DWORD PTR ds:0x45d504
  45ba26:	jmp    DWORD PTR ds:0x45d508
  45ba2c:	jmp    DWORD PTR ds:0x45d50c
  45ba32:	jmp    DWORD PTR ds:0x45d510
  45ba38:	jmp    DWORD PTR ds:0x45d514
  45ba3e:	jmp    DWORD PTR ds:0x45d518
  45ba44:	jmp    DWORD PTR ds:0x45d51c
  45ba4a:	jmp    DWORD PTR ds:0x45d520
  45ba50:	jmp    DWORD PTR ds:0x45d524
  45ba56:	jmp    DWORD PTR ds:0x45d528
  45ba5c:	jmp    DWORD PTR ds:0x45d52c
  45ba62:	jmp    DWORD PTR ds:0x45d530
  45ba68:	jmp    DWORD PTR ds:0x45d538
  45ba6e:	jmp    DWORD PTR ds:0x45d53c
  45ba74:	jmp    DWORD PTR ds:0x45d540
  45ba7a:	jmp    DWORD PTR ds:0x45d544
  45ba80:	jmp    DWORD PTR ds:0x45d548
  45ba86:	jmp    DWORD PTR ds:0x45d54c
  45ba8c:	jmp    DWORD PTR ds:0x45d550
  45ba92:	jmp    DWORD PTR ds:0x45d554
  45ba98:	jmp    DWORD PTR ds:0x45d558
  45ba9e:	jmp    DWORD PTR ds:0x45d55c
  45baa4:	jmp    DWORD PTR ds:0x45d560
  45baaa:	jmp    DWORD PTR ds:0x45d564
  45bab0:	jmp    DWORD PTR ds:0x45d568
  45bab6:	jmp    DWORD PTR ds:0x45d56c
  45babc:	jmp    DWORD PTR ds:0x45d570
  45bac2:	jmp    DWORD PTR ds:0x45d574
  45bac8:	jmp    DWORD PTR ds:0x45d578
  45bace:	jmp    DWORD PTR ds:0x45d57c
  45bad4:	jmp    DWORD PTR ds:0x45d580
  45bada:	jmp    DWORD PTR ds:0x45d584
  45bae0:	jmp    DWORD PTR ds:0x45d588
  45bae6:	jmp    DWORD PTR ds:0x45d58c
  45baec:	jmp    DWORD PTR ds:0x45d590
  45baf2:	jmp    DWORD PTR ds:0x45d594
  45baf8:	jmp    DWORD PTR ds:0x45d598
  45bafe:	jmp    DWORD PTR ds:0x45d59c
  45bb04:	jmp    DWORD PTR ds:0x45d5a0
  45bb0a:	jmp    DWORD PTR ds:0x45d5a4
  45bb10:	jmp    DWORD PTR ds:0x45d5a8
  45bb16:	jmp    DWORD PTR ds:0x45d5ac
  45bb1c:	jmp    DWORD PTR ds:0x45d5b0
  45bb22:	jmp    DWORD PTR ds:0x45d5b4
  45bb28:	jmp    DWORD PTR ds:0x45d5b8
  45bb2e:	jmp    DWORD PTR ds:0x45d5bc
  45bb34:	jmp    DWORD PTR ds:0x45d5c0
  45bb3a:	jmp    DWORD PTR ds:0x45d5c4
  45bb40:	jmp    DWORD PTR ds:0x45d5c8
  45bb46:	jmp    DWORD PTR ds:0x45d5cc
  45bb4c:	jmp    DWORD PTR ds:0x45d5d0
  45bb52:	jmp    DWORD PTR ds:0x45d5d4
  45bb58:	jmp    DWORD PTR ds:0x45d5d8
  45bb5e:	jmp    DWORD PTR ds:0x45d5dc
  45bb64:	jmp    DWORD PTR ds:0x45d5e0
  45bb6a:	jmp    DWORD PTR ds:0x45d5e4
  45bb70:	jmp    DWORD PTR ds:0x45d5e8
  45bb76:	jmp    DWORD PTR ds:0x45d5ec
  45bb7c:	jmp    DWORD PTR ds:0x45d5f0
  45bb82:	jmp    DWORD PTR ds:0x45d5f4
  45bb88:	jmp    DWORD PTR ds:0x45d5f8
  45bb8e:	jmp    DWORD PTR ds:0x45d5fc
  45bb94:	jmp    DWORD PTR ds:0x45d600
  45bb9a:	jmp    DWORD PTR ds:0x45d604
  45bba0:	jmp    DWORD PTR ds:0x45d608
  45bba6:	jmp    DWORD PTR ds:0x45d60c
  45bbac:	jmp    DWORD PTR ds:0x45d610
  45bbb2:	jmp    DWORD PTR ds:0x45d614
  45bbb8:	jmp    DWORD PTR ds:0x45d618
  45bbbe:	jmp    DWORD PTR ds:0x45d61c
  45bbc4:	jmp    DWORD PTR ds:0x45d620
  45bbca:	jmp    DWORD PTR ds:0x45d624
  45bbd0:	jmp    DWORD PTR ds:0x45d628
  45bbd6:	jmp    DWORD PTR ds:0x45d62c
  45bbdc:	jmp    DWORD PTR ds:0x45d630
  45bbe2:	jmp    DWORD PTR ds:0x45d634
  45bbe8:	jmp    DWORD PTR ds:0x45d638
  45bbee:	jmp    DWORD PTR ds:0x45d63c
  45bbf4:	jmp    DWORD PTR ds:0x45d640
  45bbfa:	jmp    DWORD PTR ds:0x45d644
  45bc00:	jmp    DWORD PTR ds:0x45d648
  45bc06:	jmp    DWORD PTR ds:0x45d64c
  45bc0c:	jmp    DWORD PTR ds:0x45d650
  45bc12:	jmp    DWORD PTR ds:0x45d654
  45bc18:	jmp    DWORD PTR ds:0x45d658
  45bc1e:	jmp    DWORD PTR ds:0x45d65c
  45bc24:	jmp    DWORD PTR ds:0x45d660
  45bc2a:	jmp    DWORD PTR ds:0x45d668
  45bc30:	jmp    DWORD PTR ds:0x45d66c
  45bc36:	jmp    DWORD PTR ds:0x45d670
  45bc3c:	jmp    DWORD PTR ds:0x45d674
  45bc42:	jmp    DWORD PTR ds:0x45d678
  45bc48:	jmp    DWORD PTR ds:0x45d67c
  45bc4e:	jmp    DWORD PTR ds:0x45d680
  45bc54:	jmp    DWORD PTR ds:0x45d684
  45bc5a:	jmp    DWORD PTR ds:0x45d688
  45bc60:	jmp    DWORD PTR ds:0x45d68c
  45bc66:	jmp    DWORD PTR ds:0x45d690
  45bc6c:	jmp    DWORD PTR ds:0x45d694
  45bc72:	jmp    DWORD PTR ds:0x45d698
  45bc78:	jmp    DWORD PTR ds:0x45d69c
  45bc7e:	jmp    DWORD PTR ds:0x45d6a0
  45bc84:	jmp    DWORD PTR ds:0x45d6a4
  45bc8a:	jmp    DWORD PTR ds:0x45d6a8
  45bc90:	jmp    DWORD PTR ds:0x45d6ac
  45bc96:	jmp    DWORD PTR ds:0x45d6b0
  45bc9c:	jmp    DWORD PTR ds:0x45d6b4
  45bca2:	jmp    DWORD PTR ds:0x45d6b8
  45bca8:	jmp    DWORD PTR ds:0x45d6bc
  45bcae:	jmp    DWORD PTR ds:0x45d6c0
  45bcb4:	jmp    DWORD PTR ds:0x45d6c4
  45bcba:	jmp    DWORD PTR ds:0x45d6c8
  45bcc0:	jmp    DWORD PTR ds:0x45d6cc
  45bcc6:	jmp    DWORD PTR ds:0x45d6d0
  45bccc:	jmp    DWORD PTR ds:0x45d6d4
  45bcd2:	jmp    DWORD PTR ds:0x45d6d8
  45bcd8:	jmp    DWORD PTR ds:0x45d6dc
  45bcde:	jmp    DWORD PTR ds:0x45d6e0
  45bce4:	jmp    DWORD PTR ds:0x45d6e4
  45bcea:	jmp    DWORD PTR ds:0x45d6ec
  45bcf0:	jmp    DWORD PTR ds:0x45d6f0
  45bcf6:	jmp    DWORD PTR ds:0x45d6f4
  45bcfc:	jmp    DWORD PTR ds:0x45d6f8
  45bd02:	jmp    DWORD PTR ds:0x45d6fc
  45bd08:	jmp    DWORD PTR ds:0x45d704
  45bd0e:	jmp    DWORD PTR ds:0x45d708
  45bd14:	jmp    DWORD PTR ds:0x45d70c
  45bd1a:	jmp    DWORD PTR ds:0x45d710
